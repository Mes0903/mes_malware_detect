
901634db7b0d7ed527ab57316f503696e01cb93c83d32ec7a9b023d48ea696e6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0xe0e757e5
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	ss gs dec bp
  402d0c:	arpl   WORD PTR [edx+0x6a],bp
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	sbb    al,0x3c
  402da4:	(bad)  
  402da6:	inc    edi
  402da7:	push   ebp
  402da8:	div    esi
  402daa:	dec    esp
  402dab:	xchg   DWORD PTR [edx-0x24],eax
  402dae:	hlt    
  402daf:	dec    esp
  402db0:	mov    bl,0x5b
  402db2:	jle    0x402d99
  402db4:	inc    ebp
  402db5:	adc    al,0xf0
  402db7:	and    BYTE PTR [edi-0x57],0x1
  402dbb:	inc    esp
  402dbc:	into   
  402dbd:	repnz inc ebx
  402dbf:	pop    ebp
  402dc0:	jmp    0x402d84
  402dc2:	fnsave [esi+ebx*4+0x5452bc02]
  402dc9:	jno    0x402dbc
  402dcb:	and    al,0x83
  402dcd:	push   ss
  402dce:	xor    eax,0xbb7bcab9
  402dd3:	dec    eax
  402dd4:	xchg   edi,eax
  402dd5:	or     eax,DWORD PTR [esi-0x3cfa58eb]
  402ddb:	cmp    bl,BYTE PTR [ebp+0x5bb6196d]
  402de1:	aaa    
  402de2:	arpl   WORD PTR [edx],bp
  402de4:	mov    dh,0xca
  402de6:	scas   eax,DWORD PTR es:[edi]
  402de7:	or     DWORD PTR [ecx],ecx
  402de9:	std    
  402dea:	push   ecx
  402deb:	ficom  DWORD PTR [edx-0x39dfe345]
  402df1:	out    dx,eax
  402df2:	xchg   esi,eax
  402df3:	das    
  402df4:	int3   
  402df5:	inc    ebp
  402df6:	div    BYTE PTR [ebx]
  402df8:	mov    bl,0x47
  402dfa:	ret    
  402dfb:	fwait
  402dfc:	repnz mov edx,0x783edd73
  402e02:	ja     0x402de0
  402e04:	xchg   bh,bh
  402e06:	push   ecx
  402e07:	(bad)  
  402e08:	enter  0x71bd,0x4a
  402e0c:	push   ds
  402e0d:	in     eax,dx
  402e0e:	nop
  402e0f:	adc    al,bh
  402e11:	xor    DWORD PTR [ebx+ebp*4],esi
  402e14:	mov    bh,0x53
  402e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e17:	stos   BYTE PTR es:[edi],al
  402e18:	sbb    eax,0xaceb540d
  402e1d:	xchg   ecx,eax
  402e1e:	das    
  402e1f:	xchg   ebx,eax
  402e20:	icebp  
  402e21:	sahf   
  402e22:	push   esp
  402e23:	inc    esp
  402e24:	push   edx
  402e25:	test   BYTE PTR [ebp-0x464bdbcf],ah
  402e2b:	fcomp  DWORD PTR [edi]
  402e2d:	jbe    0x402e0b
  402e2f:	adc    eax,0xd8998b80
  402e34:	cmc    
  402e35:	mov    BYTE PTR [ecx-0xb5a677b],bl
  402e3b:	adc    ebp,esp
  402e3d:	xlat   BYTE PTR ds:[ebx]
  402e3e:	sbb    esp,DWORD PTR [eax+0x5c]
  402e41:	ror    ecx,0x4d
  402e44:	or     al,0xc1
  402e46:	shl    ch,cl
  402e48:	outs   dx,DWORD PTR ds:[esi]
  402e49:	pusha  
  402e4a:	loopne 0x402eae
  402e4c:	pop    edx
  402e4d:	xchg   dh,bh
  402e4f:	pop    ebp
  402e50:	jge    0x402e52
  402e52:	pop    esp
  402e53:	add    esp,esp
  402e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e56:	jle    0x402e63
  402e58:	outs   dx,BYTE PTR ds:[esi]
  402e59:	popa   
  402e5a:	scas   al,BYTE PTR es:[edi]
  402e5b:	add    DWORD PTR [esi-0x30a3f54c],0xffffffd0
  402e62:	bound  edi,QWORD PTR [esi-0x64]
  402e65:	or     edx,esp
  402e67:	and    BYTE PTR [ebx-0x4e57f0b1],ah
  402e6d:	dec    esi
  402e6e:	mov    dh,0xc2
  402e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e71:	(bad)  
  402e72:	int    0x39
  402e74:	inc    esp
  402e75:	test   BYTE PTR [esi],bl
  402e77:	cmp    DWORD PTR [ebx-0x4d],ebp
  402e7a:	adc    dl,bh
  402e7c:	psrad  mm2,mm5
  402e7f:	or     al,BYTE PTR [edi]
  402e81:	loop   0x402e4a
  402e83:	and    al,0x47
  402e85:	and    ecx,0xffffffa0
  402e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e89:	dec    eax
  402e8a:	pop    ecx
  402e8b:	hlt    
  402e8c:	mov    ds:0x1ea0550e,eax
  402e91:	ja     0x402f12
  402e93:	cmc    
  402e94:	rcl    DWORD PTR [ecx+0x1d],0x93
  402e98:	repz les ebp,FWORD PTR [eax+edi*4-0x11]
  402e9d:	(bad)  
  402e9e:	mov    dl,0xbe
  402ea0:	ror    BYTE PTR [edx],0xcb
  402ea3:	push   ecx
  402ea4:	fadd   st,st(2)
  402ea6:	bound  eax,QWORD PTR [edi]
  402ea8:	push   es
  402ea9:	sbb    ah,BYTE PTR [ecx+edi*8+0x1f89f9c3]
  402eb0:	jmp    0xa5c08e4e
  402eb5:	mov    eax,ds:0xfc481e27
  402eba:	retf   
  402ebb:	aas    
  402ebc:	scas   al,BYTE PTR es:[edi]
  402ebd:	ja     0x402e8b
  402ebf:	in     eax,0xe5
  402ec1:	pusha  
  402ec2:	pop    ebx
  402ec3:	xchg   WORD PTR [ecx-0x7b],di
  402ec7:	jno    0x402eb1
  402ec9:	push   ds
  402eca:	jns    0x402ea1
  402ecc:	lahf   
  402ecd:	push   esp
  402ece:	fninit 
  402ed0:	sbb    dh,0x95
  402ed3:	aaa    
  402ed4:	jns    0x402f40
  402ed6:	mov    eax,0xa5160264
  402edb:	pop    ebp
  402edc:	pop    edi
  402edd:	mov    ebp,0xdc590330
  402ee2:	int    0xb1
  402ee4:	out    dx,eax
  402ee5:	ja     0x402f19
  402ee7:	fucomip st,st(5)
  402ee9:	pop    edx
  402eea:	mov    eax,0x2e538920
  402eef:	mov    eax,0xec36aac6
  402ef4:	aas    
  402ef5:	dec    esp
  402ef6:	or     bl,BYTE PTR [edx]
  402ef8:	xor    BYTE PTR [ebx],dh
  402efa:	leave  
  402efb:	cmc    
  402efc:	jne    0x402e9c
  402efe:	sbb    eax,0x83478fc9
  402f03:	loope  0x402f1c
  402f05:	test   edx,esp
  402f07:	stc    
  402f08:	or     eax,0x4d35749
  402f0d:	in     al,dx
  402f0e:	inc    ebx
  402f0f:	retf   
  402f10:	jge    0x402eb7
  402f12:	pop    ds
  402f13:	sub    eax,0xe68a634e
  402f18:	mov    eax,ss
  402f1a:	push   ds
  402f1b:	cmp    dl,BYTE PTR [ecx]
  402f1d:	(bad)  
  402f1e:	xchg   esi,eax
  402f1f:	cmc    
  402f20:	mov    esp,0x1a6583c9
  402f25:	jmp    0x402eed
  402f27:	leave  
  402f28:	dec    ebp
  402f29:	sbb    al,0xe6
  402f2b:	das    
  402f2c:	std    
  402f2d:	xchg   edx,eax
  402f2e:	push   es
  402f2f:	xchg   edx,eax
  402f30:	or     BYTE PTR [esi],bh
  402f32:	mov    ?,WORD PTR [ecx+0x717713a5]
  402f38:	cmp    BYTE PTR [edi+eiz*8+0x25],al
  402f3c:	arpl   WORD PTR [edi-0xc],sp
  402f3f:	icebp  
  402f40:	cmp    eax,0xe92d77da
  402f45:	push   edx
  402f46:	pop    ss
  402f47:	sbb    eax,0x90de830
  402f4c:	jge    0x402f91
  402f4e:	xchg   ch,dh
  402f50:	add    BYTE PTR ds:0xb7893d82,cl
  402f56:	mov    ds:0x82f71aed,eax
  402f5b:	cwde   
  402f5c:	adc    ecx,DWORD PTR [edx+0x10]
  402f5f:	pop    ecx
  402f60:	dec    edx
  402f61:	push   ecx
  402f62:	gs jmp 0x8dc3b5e3
  402f68:	fcomp  st(6)
  402f6a:	or     eax,0x3b41428c
  402f6f:	xchg   ebp,eax
  402f70:	dec    ecx
  402f71:	inc    ebx
  402f72:	adc    ebp,ecx
  402f74:	retf   
  402f75:	push   edx
  402f76:	sti    
  402f77:	xor    al,0x9e
  402f79:	add    eax,0xe886c5d3
  402f7e:	mov    ss,WORD PTR [edx-0x180b6fa0]
  402f84:	inc    ecx
  402f85:	(bad)  
  402f86:	cmp    al,0x5c
  402f88:	rol    BYTE PTR ds:0xcd50742f,0xc7
  402f8f:	pop    eax
  402f90:	(bad)  
  402f91:	jae    0x402fac
  402f93:	movhlps xmm6,xmm6
  402f96:	js     0x402fcd
  402f98:	clc    
  402f99:	les    ebx,FWORD PTR [esi]
  402f9b:	adc    esp,DWORD PTR [esi+ebx*8+0x9]
  402f9f:	or     eax,0x45b09ea6
  402fa4:	lods   eax,DWORD PTR ds:[esi]
  402fa5:	inc    edx
  402fa6:	push   edx
  402fa7:	jb     0x402f90
  402fa9:	xor    ebx,ebx
  402fab:	repz popa 
  402fad:	stc    
  402fae:	ret    0x78c5
  402fb1:	into   
  402fb2:	(bad)  
  402fb3:	cld    
  402fb4:	int    0xed
  402fb6:	rcr    BYTE PTR [esi-0x4a],0x23
  402fba:	in     eax,dx
  402fbb:	sahf   
  402fbc:	test   edx,ecx
  402fbe:	push   ebp
  402fbf:	or     ebp,DWORD PTR [ebx-0x721047eb]
  402fc5:	fisubr WORD PTR [eax]
  402fc7:	popa   
  402fc8:	outs   dx,BYTE PTR ds:[esi]
  402fc9:	xchg   ebx,eax
  402fca:	fwait
  402fcb:	push   ecx
  402fcc:	int    0x79
  402fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fcf:	repz es jle 0x403000
  402fd3:	xchg   esp,eax
  402fd4:	push   esp
  402fd5:	shl    DWORD PTR [edx-0x5c19ef7f],cl
  402fdb:	(bad)  
  402fdc:	std    
  402fdd:	mov    eax,0x52663310
  402fe2:	in     eax,dx
  402fe3:	je     0x402fc9
  402fe5:	pop    esp
  402fe6:	cmp    al,0x89
  402fe8:	int3   
  402fe9:	clc    
  402fea:	fidivr DWORD PTR [ebx-0x2a945f3c]
  402ff0:	jnp    0x402fa4
  402ff2:	idiv   DWORD PTR [edi+0x5b]
  402ff5:	xor    al,0x2b
  402ff7:	and    dl,0x98
  402ffa:	test   ebp,edi
  402ffc:	lods   al,BYTE PTR ds:[esi]
  402ffd:	jge    0x40307e
  402fff:	jle    0x403077
  403001:	jge    0x402f9f
  403003:	adc    edx,edx
  403005:	mov    ebp,0x5b67f96d
  40300a:	das    
  40300b:	adc    al,0xa7
  40300d:	fisub  DWORD PTR [eax+ecx*8-0x676c41df]
  403014:	in     eax,dx
  403015:	add    esi,DWORD PTR ds:0xf4e4d51d
  40301b:	inc    edx
  40301c:	loop   0x40307f
  40301e:	jno    0x40309d
  403020:	or     DWORD PTR [edx-0x11e0a607],0xffffff9f
  403027:	sub    DWORD PTR [edx+0x36],ebx
  40302a:	(bad)  
  40302b:	enter  0xf32,0x17
  40302f:	addr16 mov ah,0x3c
  403032:	popf   
  403033:	(bad)  
  403034:	push   edx
  403035:	dec    edi
  403036:	xchg   esi,eax
  403037:	push   ss
  403038:	outs   dx,DWORD PTR gs:[esi]
  40303a:	jle    0x402fd3
  40303c:	loopne 0x4030bb
  40303e:	mov    dl,0x81
  403040:	pop    eax
  403041:	dec    eax
  403042:	mov    eax,0xc0411ea
  403047:	dec    esp
  403048:	cmp    al,0x6a
  40304a:	xor    bl,BYTE PTR [ebx-0x4a]
  40304d:	ja     0x402fd9
  40304f:	gs sbb al,0x87
  403052:	xor    edx,DWORD PTR [edi+0x33]
  403055:	mov    al,ds:0x973566f5
  40305a:	pop    ebx
  40305b:	push   ss
  40305c:	fimul  DWORD PTR [ebp-0x6c]
  40305f:	fld    DWORD PTR [ecx+0x67]
  403062:	pop    edi
  403063:	mov    dh,BYTE PTR [edi+0x43e1a141]
  403069:	jo     0x4030b1
  40306b:	std    
  40306c:	cmp    ch,BYTE PTR [eax]
  40306e:	(bad)  
  403070:	cmp    cl,ch
  403072:	mov    edi,esp
  403074:	jecxz  0x403077
  403076:	jge    0x403070
  403078:	pushf  
  403079:	jp     0x403056
  40307b:	stos   BYTE PTR es:[edi],al
  40307c:	je     0x403053
  40307e:	xchg   edi,eax
  40307f:	push   ebp
  403080:	xor    esp,DWORD PTR [edx-0x79b1f539]
  403086:	(bad)  
  403088:	daa    
  403089:	xor    dl,cl
  40308b:	add    bl,BYTE PTR [esi-0x51]
  40308e:	jo     0x4030b6
  403090:	gs in  al,dx
  403092:	ret    0x5155
  403095:	sub    eax,0xb572b445
  40309a:	xor    BYTE PTR [edx+0x3b],bh
  40309d:	push   ss
  40309e:	or     esp,ecx
  4030a0:	adc    eax,0x4f086b57
  4030a5:	mov    ecx,0xd70f4e42
  4030aa:	xor    DWORD PTR [eax+0x162efda0],esp
  4030b0:	xor    DWORD PTR [ecx],ebp
  4030b2:	xor    BYTE PTR [ecx-0x51],bh
  4030b5:	bound  ebx,QWORD PTR [ebp+ebx*2-0x78]
  4030b9:	push   eax
  4030ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bb:	(bad)  
  4030bc:	bound  edi,QWORD PTR [ebp+0x55]
  4030bf:	test   eax,0x51db36b3
  4030c4:	xor    ecx,DWORD PTR [eax-0x6582e1]
  4030ca:	imul   ecx,esi,0xffffffc7
  4030cd:	stc    
  4030ce:	and    al,0x16
  4030d0:	(bad)  
  4030d1:	mov    ebx,DWORD PTR [edi]
  4030d3:	mov    edx,?
  4030d5:	lahf   
  4030d6:	(bad)  
  4030d7:	cwde   
  4030d8:	inc    eax
  4030d9:	xchg   edx,eax
  4030da:	add    eax,0xbf71c286
  4030df:	push   ecx
  4030e0:	push   ds
  4030e1:	sti    
  4030e2:	dec    esi
  4030e3:	sbb    ah,BYTE PTR [ecx]
  4030e5:	retf   0x5c1
  4030e8:	mov    DWORD PTR [edx-0x1c],edx
  4030eb:	xor    ebp,DWORD PTR [ecx]
  4030ed:	pop    esp
  4030ee:	pop    eax
  4030ef:	imul   esi,DWORD PTR [ebx+0x32],0x30
  4030f3:	mov    dh,0xb0
  4030f5:	retf   
  4030f6:	xor    DWORD PTR [ecx],ebp
  4030f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030f9:	stos   BYTE PTR es:[edi],al
  4030fa:	pop    eax
  4030fb:	push   edx
  4030fc:	into   
  4030fd:	and    edi,edi
  4030ff:	cld    
  403100:	enter  0x8531,0x9b
  403104:	mov    cs,WORD PTR [esi+0x15]
  403107:	adc    DWORD PTR [edx],eax
  403109:	push   0x5a9401f3
  40310e:	or     dl,BYTE PTR [esi]
  403110:	inc    esp
  403111:	shl    DWORD PTR [edx],cl
  403113:	jmp    0x40316e
  403115:	mov    ecx,DWORD PTR [ebx+0x51815a1]
  40311b:	int3   
  40311c:	(bad)  
  40311e:	test   BYTE PTR [edi-0x2b],ch
  403121:	mov    BYTE PTR [edx-0x46abaa33],cl
  403127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403128:	retf   0xed7e
  40312b:	es loope 0x4030ee
  40312e:	sub    BYTE PTR [eax+0x76],0xa5
  403132:	seto   BYTE PTR [eax+ebx*4-0x7a54072]
  40313a:	xor    bh,ch
  40313c:	int3   
  40313d:	add    eax,0x3f54a3c2
  403142:	mov    al,ds:0x63dbc43
  403147:	sub    DWORD PTR [esi],ebx
  403149:	add    al,0x77
  40314b:	rcl    BYTE PTR [esi-0xd],0x6c
  40314f:	push   0x2f09fd4c
  403154:	sub    eax,0x881dab5f
  403159:	neg    DWORD PTR [eax+0x1d5e2e75]
  40315f:	int    0xbb
  403161:	shl    BYTE PTR [eax],0xb4
  403164:	fwait
  403165:	add    ebx,DWORD PTR [eax+0x6ef8ec0b]
  40316b:	(bad)  [ecx+0x2f]
  40316e:	cmp    al,0xf3
  403170:	mov    dh,0xf2
  403172:	int    0xa4
  403174:	mov    ebx,DWORD PTR [eax-0x16]
  403177:	jne    0x4031e3
  403179:	or     al,BYTE PTR [ecx+ebx*8-0x50db2068]
  403180:	stc    
  403181:	stos   DWORD PTR es:[edi],eax
  403182:	test   eax,0x98f3d3c9
  403187:	fwait
  403188:	pusha  
  403189:	push   edx
  40318a:	sub    BYTE PTR [ecx+0x4e404877],dh
  403190:	xor    al,0x8e
  403192:	dec    esp
  403193:	and    al,0x4
  403195:	dec    edx
  403196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403197:	fstp   DWORD PTR [ebx+0x2f]
  40319a:	and    eax,DWORD PTR [esi-0x10]
  40319d:	adc    al,bh
  40319f:	sub    DWORD PTR [ecx+esi*2-0x555e1678],ebp
  4031a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a7:	fisttp QWORD PTR [esi+0x11a9ef0e]
  4031ad:	dec    edi
  4031ae:	mov    edx,0xb6632bfb
  4031b3:	xchg   esi,eax
  4031b4:	xor    BYTE PTR [edi+ebx*4],bl
  4031b7:	jns    0x4031f7
  4031b9:	push   ebx
  4031ba:	and    DWORD PTR [edi+0x11],eax
  4031bd:	fld    TBYTE PTR [edi-0x24]
  4031c0:	xor    BYTE PTR [ebx],0x8d
  4031c3:	sub    al,0xbe
  4031c5:	cmp    BYTE PTR gs:[ebp+0x7d6ad7f9],ch
  4031cc:	sbb    bh,BYTE PTR [eax]
  4031ce:	cmp    al,0x1d
  4031d0:	push   es
  4031d1:	unpcklps xmm6,xmm4
  4031d4:	jmp    0x4031d0
  4031d6:	clc    
  4031d7:	enter  0x75fd,0xe9
  4031db:	iret   
  4031dc:	cwde   
  4031dd:	retf   
  4031de:	int3   
  4031df:	xchg   ebx,eax
  4031e0:	shl    DWORD PTR [esi+0x52],0x7c
  4031e4:	or     ebx,DWORD PTR [di]
  4031e7:	add    al,0x53
  4031e9:	cmp    al,0xb9
  4031eb:	sbb    eax,eax
  4031ed:	out    dx,al
  4031ee:	aas    
  4031ef:	pop    esp
  4031f0:	xchg   edi,eax
  4031f1:	sti    
  4031f2:	mov    ah,0xda
  4031f4:	jg     0x40323c
  4031f6:	cld    
  4031f7:	pop    eax
  4031f8:	sub    BYTE PTR [edi-0x73],bl
  4031fb:	sbb    eax,0x521b323
  403200:	out    0x58,eax
  403202:	dec    edx
  403203:	cmp    esi,0xffffffce
  403206:	das    
  403207:	adc    BYTE PTR [ecx],ah
  403209:	pushf  
  40320a:	repz retf 
  40320c:	add    DWORD PTR [edi],0x7faf9b0b
  403212:	cli    
  403213:	rcr    DWORD PTR [edi-0x4d097ed7],1
  403219:	xor    eax,0xc01acfdc
  40321e:	cmp    ah,BYTE PTR [eax+0x1b660e81]
  403224:	mov    dh,0x20
  403226:	scas   al,BYTE PTR es:[edi]
  403227:	and    DWORD PTR [eax-0x2a],edi
  40322a:	pop    esp
  40322b:	mov    dh,0xfc
  40322d:	clc    
  40322e:	dec    edx
  40322f:	inc    esp
  403230:	test   al,0xca
  403232:	pop    ebp
  403233:	mov    BYTE PTR [ebx-0x1585dc35],al
  403239:	xor    ebx,DWORD PTR [eax+ebx*2+0x31f189eb]
  403240:	cmc    
  403241:	dec    edi
  403242:	shl    ch,0x78
  403245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403246:	hlt    
  403247:	xchg   ecx,eax
  403248:	int    0x54
  40324a:	loope  0x403229
  40324c:	dec    esp
  40324d:	in     eax,dx
  40324e:	cmp    BYTE PTR [eax],al
  403250:	addr16 mov ah,0xe4
  403253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403254:	aad    0x9d
  403256:	lds    esi,FWORD PTR [ecx-0x7f]
  403259:	inc    eax
  40325a:	cli    
  40325b:	pusha  
  40325c:	bswap  eax
  40325e:	cmp    eax,0x1db21b92
  403263:	push   ebx
  403264:	aam    0x7c
  403266:	call   0xd0ed5a4c
  40326b:	ja     0x4032b1
  40326d:	push   esp
  40326e:	add    dl,BYTE PTR [ebx+0x5b806194]
  403274:	sbb    al,0x8c
  403276:	xor    dh,BYTE PTR [edx]
  403278:	rdmsr  
  40327a:	aas    
  40327b:	jle    0x40320a
  40327d:	xor    al,0xd
  40327f:	js     0x403232
  403281:	and    DWORD PTR ds:0x3e9f5001,ebp
  403287:	cmp    bl,ah
  403289:	shl    BYTE PTR [eax],cl
  40328b:	or     DWORD PTR [esi],edi
  40328d:	cmp    DWORD PTR [eax],ebp
  40328f:	dec    edi
  403290:	lahf   
  403291:	iret   
  403292:	cmp    BYTE PTR [edi],bl
  403294:	shl    BYTE PTR [ebx+0x76385e31],0x6b
  40329b:	dec    ebp
  40329c:	pop    ebp
  40329d:	ror    ebp,1
  40329f:	daa    
  4032a0:	xchg   ebx,eax
  4032a1:	lds    eax,FWORD PTR [edi+ecx*1]
  4032a4:	and    eax,0x4463d52a
  4032a9:	shl    BYTE PTR [ecx+0x73],0xc2
  4032ad:	xor    eax,DWORD PTR [esi-0x2c1a772f]
  4032b3:	jb     0x4032f8
  4032b5:	out    0x81,eax
  4032b7:	mov    bl,0x61
  4032b9:	cmp    al,0xc
  4032bb:	retf   0x75dd
  4032be:	mov    ch,0x62
  4032c0:	aam    0x87
  4032c2:	dec    ecx
  4032c3:	or     eax,DWORD PTR [ecx+0x9]
  4032c6:	or     eax,0xb09d01dd
  4032cb:	mov    bh,0x52
  4032cd:	push   ss
  4032ce:	push   0x26
  4032d0:	scas   eax,DWORD PTR es:[edi]
  4032d1:	out    0xf1,al
  4032d3:	xor    ecx,ecx
  4032d5:	in     al,0xaf
  4032d7:	sub    eax,0x8877992d
  4032dc:	dec    ecx
  4032dd:	inc    esp
  4032de:	outs   dx,DWORD PTR ds:[esi]
  4032df:	test   al,0x85
  4032e1:	dec    edi
  4032e2:	cmp    eax,0x5901cab8
  4032e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e8:	jae    0x403315
  4032ea:	jbe    0x403290
  4032ec:	test   DWORD PTR [ebx+0x64],esi
  4032ef:	cmp    al,0xee
  4032f1:	daa    
  4032f2:	and    ecx,ebp
  4032f4:	fsub   QWORD PTR [esp+ebp*8]
  4032f7:	push   cs
  4032f8:	imul   ebp,DWORD PTR [ebx],0x28
  4032fb:	test   ecx,0x7ca7405c
  403301:	ds pop ebx
  403303:	push   ecx
  403304:	inc    esi
  403305:	test   al,0xe6
  403307:	inc    ebx
  403308:	aas    
  403309:	mov    al,ds:0xd46ae060
  40330e:	inc    BYTE PTR [edx]
  403310:	mov    dl,0x87
  403312:	xor    DWORD PTR [esi+0x56],esp
  403315:	fmul   DWORD PTR [ecx-0x3e]
  403318:	adc    dl,dl
  40331a:	pop    edi
  40331b:	cmp    eax,0x4a473b57
  403320:	test   bl,cl
  403322:	mov    al,ds:0x6de467b0
  403327:	sub    BYTE PTR [edi],dl
  403329:	xchg   edi,eax
  40332b:	popa   
  40332c:	fcmove st,st(6)
  40332e:	outs   dx,DWORD PTR ds:[esi]
  40332f:	(bad)  
  403330:	pop    ds
  403331:	cld    
  403332:	stos   DWORD PTR es:[edi],eax
  403333:	push   cs
  403334:	loop   0x4033ac
  403336:	sub    al,0x36
  403338:	cmp    ah,BYTE PTR [ebp-0xcb09ad8]
  40333e:	pop    ebp
  40333f:	xor    edx,esi
  403341:	rol    DWORD PTR [ecx],cl
  403343:	cmp    ecx,edi
  403345:	inc    eax
  403346:	ret    0x99ab
  403349:	popf   
  40334a:	ret    0x6240
  40334d:	inc    edi
  40334e:	sbb    ebp,edi
  403350:	mov    BYTE PTR [edx-0x75],al
  403353:	lock scas eax,DWORD PTR es:[edi]
  403355:	cmp    eax,0xc6709fef
  40335a:	je     0x403329
  40335c:	and    edi,0x25
  40335f:	xchg   edx,edi
  403361:	jl     0x4033a5
  403363:	(bad)  
  403364:	js     0x403380
  403366:	nop
  403367:	sbb    bl,bh
  403369:	jge    0x403308
  40336b:	cmp    DWORD PTR [esi+0x77],0xf20046b7
  403372:	imul   ebp,DWORD PTR [ebx+eax*4-0x4e],0xffffff9e
  403377:	pop    ecx
  403378:	push   0x4f
  40337a:	ficom  WORD PTR [esi]
  40337c:	out    0x95,eax
  40337e:	sub    eax,0x335bf786
  403383:	jnp    0x40330c
  403385:	in     eax,dx
  403386:	or     edi,DWORD PTR [esi+0x2]
  403389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338a:	loop   0x4033bb
  40338c:	mov    ax,0x6180
  403390:	(bad)  
  403392:	or     DWORD PTR [ebp+0x379f482d],esi
  403398:	icebp  
  403399:	dec    ecx
  40339a:	add    ebx,DWORD PTR [edx]
  40339c:	inc    ebp
  40339d:	lea    edx,[ebp+0x3a]
  4033a0:	jle    0x403409
  4033a2:	mov    ecx,0xf183fe7b
  4033a7:	sbb    DWORD PTR [ebp+0x4b],eax
  4033aa:	and    al,0x84
  4033ac:	mov    ch,cl
  4033ae:	and    eax,0x44ae3af0
  4033b3:	in     al,0x13
  4033b5:	mov    ch,0x52
  4033b7:	test   BYTE PTR [esi],ah
  4033b9:	cmp    DWORD PTR [eax-0xfb5caf6],0xffffffa0
  4033c0:	fwait
  4033c1:	sub    BYTE PTR [ebp+0x5c],cl
  4033c4:	dec    esi
  4033c5:	test   eax,0x3a709448
  4033ca:	lea    ebx,[ecx-0x4]
  4033cd:	pop    esi
  4033ce:	xor    al,0x39
  4033d0:	aad    0x41
  4033d2:	inc    edi
  4033d3:	ret    
  4033d4:	push   edi
  4033d5:	pop    eax
  4033d6:	add    al,0xca
  4033d8:	retf   0xc135
  4033db:	lods   eax,DWORD PTR ds:[esi]
  4033dc:	and    al,0x77
  4033de:	or     cl,BYTE PTR [esi+0x2e]
  4033e1:	mov    bh,BYTE PTR ds:0xca36237a
  4033e7:	sub    al,0xab
  4033e9:	cdq    
  4033ea:	cmp    bh,dh
  4033ec:	pop    es
  4033ed:	leave  
  4033ee:	ins    DWORD PTR es:[edi],dx
  4033ef:	jns    0x403443
  4033f1:	push   edx
  4033f2:	jl     0x40340d
  4033f4:	popa   
  4033f5:	stc    
  4033f6:	adc    al,0x4f
  4033f8:	out    0xd9,al
  4033fa:	loope  0x403403
  4033fc:	ror    dl,0x10
  4033ff:	ficom  WORD PTR [ecx]
  403401:	jg     0x40343a
  403403:	arpl   WORD PTR [edi],si
  403405:	push   ecx
  403406:	fs in  eax,dx
  403408:	in     eax,0x61
  40340a:	xor    edi,DWORD PTR [edi]
  40340c:	and    dh,BYTE PTR [esi-0x37]
  40340f:	push   edx
  403410:	adc    ah,BYTE PTR [esi-0x661fc537]
  403416:	mov    ebx,0xd1620c64
  40341b:	dec    edi
  40341c:	ds mov dh,0x3e
  40341f:	ret    0x1475
  403422:	rol    DWORD PTR [eax],1
  403424:	and    esi,DWORD PTR [eax-0x7f93f535]
  40342a:	xchg   edi,eax
  40342b:	mov    bl,0x93
  40342d:	nop
  40342e:	repz mov bh,BYTE PTR [esi+0x1978f411]
  403435:	lods   eax,DWORD PTR ds:[esi]
  403436:	xchg   BYTE PTR [edi],bl
  403438:	clc    
  403439:	xor    edx,DWORD PTR [ecx-0x50]
  40343c:	lahf   
  40343d:	xchg   DWORD PTR [ecx-0x5d],esi
  403440:	int    0x2d
  403442:	retf   
  403443:	mov    eax,0xc8bc9451
  403448:	sti    
  403449:	rol    BYTE PTR [ebp-0x49],cl
  40344c:	push   esp
  40344d:	aas    
  40344e:	push   ds
  40344f:	popa   
  403450:	add    cl,ch
  403452:	xchg   DWORD PTR [edi+0x30],esp
  403455:	sbb    esi,DWORD PTR [ebx-0x47]
  403458:	addr16 inc esi
  40345a:	sub    DWORD PTR [ecx-0x21],ecx
  40345d:	int3   
  40345e:	jae    0x403436
  403460:	mov    esi,0x917dc08d
  403465:	and    bh,BYTE PTR [esi+0x6b]
  403468:	loope  0x4033fe
  40346a:	int3   
  40346b:	ins    BYTE PTR es:[edi],dx
  40346c:	pop    ebp
  40346d:	xchg   ecx,eax
  40346e:	pop    ecx
  40346f:	xlat   BYTE PTR ds:[ebx]
  403470:	pop    ss
  403471:	jb     0x4034a3
  403473:	call   FWORD PTR [ecx]
  403475:	jb     0x403487
  403477:	imul   edx,DWORD PTR [ecx],0x86ce19d1
  40347d:	or     esi,esp
  40347f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403480:	or     DWORD PTR [ebx],ebx
  403482:	jmp    FWORD PTR [ebp-0x6cf0be1e]
  403488:	or     DWORD PTR [ebx],edx
  40348a:	and    eax,0x5d3b03c2
  40348f:	(bad)  
  403490:	int3   
  403491:	ins    DWORD PTR es:[edi],dx
  403492:	sbb    ebx,ebp
  403494:	addr16 cdq 
  403496:	cld    
  403497:	pop    edx
  403498:	fild   DWORD PTR [esi]
  40349a:	test   al,0x11
  40349c:	xor    ch,BYTE PTR [edx]
  40349e:	pop    edx
  40349f:	jle    0x403505
  4034a1:	inc    ebp
  4034a2:	int    0xac
  4034a4:	push   esp
  4034a5:	xor    dh,BYTE PTR [edi-0x70]
  4034a8:	mov    bh,dl
  4034aa:	and    al,0x7a
  4034ac:	mov    ?,WORD PTR [edi]
  4034ae:	push   0xa1a1368d
  4034b3:	in     eax,0xcb
  4034b5:	int    0x7e
  4034b7:	xor    DWORD PTR [ebx+0x16],ecx
  4034ba:	mov    edx,0xa9637e53
  4034bf:	aad    0xa9
  4034c1:	pop    ebx
  4034c2:	out    0xae,eax
  4034c4:	xchg   bh,bh
  4034c6:	mov    al,0xa6
  4034c8:	push   DWORD PTR [ecx+0x7c]
  4034cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034cc:	dec    edx
  4034cd:	cli    
  4034ce:	inc    ecx
  4034cf:	ins    BYTE PTR es:[edi],dx
  4034d0:	aad    0xda
  4034d2:	adc    eax,eax
  4034d4:	loope  0x403530
  4034d6:	inc    esp
  4034d7:	call   FWORD PTR [esi-0x6c]
  4034da:	xchg   ecx,eax
  4034db:	das    
  4034dc:	xchg   BYTE PTR [eax+0x54],al
  4034df:	mov    ebx,DWORD PTR fs:[esi-0x55]
  4034e3:	add    eax,0xf0033dbe
  4034e8:	jae    0x403537
  4034ea:	rep ins DWORD PTR es:[edi],dx
  4034ec:	mov    dl,0xd
  4034ee:	test   DWORD PTR [ecx],ebx
  4034f0:	mov    bl,0x1f
  4034f2:	cmp    al,dh
  4034f4:	scas   al,BYTE PTR es:[edi]
  4034f5:	dec    esp
  4034f6:	xor    BYTE PTR [edx],ah
  4034f8:	ins    DWORD PTR es:[edi],dx
  4034f9:	call   0x36b5:0x4c8dfd63
  403500:	cmp    eax,0x59372ee8
  403505:	rcl    BYTE PTR [eax+0x47a72a51],cl
  40350b:	mov    cr7,ebx
  40350e:	rcr    BYTE PTR [eax],0x8d
  403511:	push   esp
  403512:	inc    ebp
  403513:	in     al,dx
  403514:	jmp    0xfc539980
  403519:	inc    esp
  40351a:	fmul   st,st(3)
  40351c:	jge    0x41e4a018
  403522:	jecxz  0x4034e7
  403524:	adc    ebx,DWORD PTR ds:0xa2ccc86a
  40352a:	mov    al,0x39
  40352c:	das    
  40352d:	sbb    al,BYTE PTR [esi]
  40352f:	or     ebp,DWORD PTR [eax-0x12]
  403532:	mov    cl,0x5f
  403534:	aas    
  403535:	add    ecx,DWORD PTR [edx+0x48cfb95b]
  40353b:	xchg   esi,eax
  40353c:	cs icebp 
  40353e:	inc    ebp
  40353f:	pop    eax
  403540:	inc    esp
  403541:	dec    ebx
  403542:	xor    al,0x66
  403544:	jne    0x40352b
  403546:	adc    DWORD PTR [ecx],0x51270c84
  40354c:	mov    esi,DWORD PTR [edi+eiz*1-0x7dfb70f7]
  403553:	(bad)  
  403554:	cli    
  403555:	add    BYTE PTR [edx-0x25799747],dh
  40355b:	shr    DWORD PTR [esi],cl
  40355d:	ds pop ss
  40355f:	mov    ds:0xf37e8d08,eax
  403564:	(bad)  
  403565:	pop    edi
  403566:	repnz test BYTE PTR fs:[di],0x47
  40356c:	jo     0x403515
  40356e:	xchg   DWORD PTR [eax],esi
  403570:	add    bh,BYTE PTR [ebp-0x47]
  403573:	test   BYTE PTR [ebx+ebp*1-0x2a],0x98
  403578:	sbb    BYTE PTR [ebx+0x54],ah
  40357b:	stos   DWORD PTR es:[edi],eax
  40357c:	data16 out 0x24,al
  40357f:	or     DWORD PTR [ebp+0x134d79ab],edx
  403585:	aas    
  403586:	std    
  403587:	jmp    0xe21835c5
  40358c:	pushw  ss
  40358e:	nop
  40358f:	mov    dl,bl
  403591:	test   eax,0xd15efaaa
  403596:	sbb    al,0xcd
  403598:	rol    DWORD PTR [esi-0x28],0xb
  40359c:	dec    edi
  40359d:	pop    ebp
  40359e:	pop    es
  40359f:	xor    DWORD PTR [eax-0x4cdb927e],eax
  4035a5:	cwde   
  4035a6:	and    bl,bh
  4035a8:	cmp    al,0xa7
  4035aa:	mov    dl,0x44
  4035ac:	ss add eax,0xbf841e61
  4035b2:	pop    eax
  4035b3:	popf   
  4035b4:	daa    
  4035b5:	(bad)  
  4035b6:	adc    DWORD PTR [ebx+0x70f8107],ecx
  4035bc:	lods   al,BYTE PTR ds:[esi]
  4035bd:	adc    cl,BYTE PTR [ecx-0x57]
  4035c0:	(bad)  
  4035c2:	fisub  WORD PTR [ecx-0x68]
  4035c5:	mov    ds:0x665795ac,eax
  4035ca:	test   al,0x8
  4035cc:	lods   al,BYTE PTR ds:[esi]
  4035cd:	jns    0x403554
  4035cf:	fwait
  4035d0:	retf   
  4035d1:	xchg   ebx,eax
  4035d2:	in     eax,dx
  4035d3:	mov    ebx,edx
  4035d5:	loop   0x40358b
  4035d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d8:	call   0x565f1d27
  4035dd:	sbb    al,0x6
  4035df:	mov    ds:0x4daed50e,eax
  4035e4:	xor    bh,BYTE PTR [ecx-0x65b7b9d1]
  4035ea:	push   es
  4035eb:	or     esp,DWORD PTR [ebp-0x7c]
  4035ee:	adc    BYTE PTR [ecx+0x44],0xe0
  4035f2:	jge    0x403597
  4035f4:	inc    ebp
  4035f5:	test   eax,0x126ff93e
  4035fa:	mov    BYTE PTR [eax-0x640399b3],0xea
  403601:	leave  
  403602:	pop    ebp
  403603:	inc    ecx
  403604:	sti    
  403605:	nop
  403606:	icebp  
  403607:	shr    DWORD PTR [ebp-0x35f1007a],0x20
  40360e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403610:	in     eax,0x4c
  403612:	jae    0x403642
  403614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403615:	ins    BYTE PTR es:[edi],dx
  403616:	aad    0xed
  403618:	fcomp  DWORD PTR [ecx-0x34092bfe]
  40361e:	or     DWORD PTR [ebx-0xc5df0d2],edi
  403624:	mov    al,0xdb
  403626:	repnz out dx,al
  403628:	popf   
  403629:	shr    DWORD PTR ds:0x2c4b75a,1
  40362f:	mov    esp,0xbda68cf8
  403634:	(bad)  
  403635:	adc    bh,BYTE PTR [ebx-0x4c]
  403638:	mov    dl,ah
  40363a:	xor    cl,BYTE PTR [esi-0x53e71f12]
  403640:	adc    eax,0xefc5f7c5
  403645:	mov    eax,0x795b5d28
  40364a:	test   DWORD PTR [ebp-0x61bb3067],0xd81faf25
  403654:	call   DWORD PTR [ebx+0x1a]
  403657:	jbe    0x4035f6
  403659:	add    esp,eax
  40365b:	mov    ah,0xd6
  40365d:	pop    eax
  40365e:	push   es
  40365f:	ret    0x96de
  403662:	push   esp
  403663:	push   ebx
  403664:	add    edx,ecx
  403666:	jg     0x4036b9
  403668:	add    al,0x1d
  40366a:	sahf   
  40366b:	jmp    FWORD PTR [edx+0x39c3857]
  403671:	lahf   
  403672:	ins    DWORD PTR es:[edi],dx
  403673:	xchg   edx,eax
  403674:	xchg   ebp,eax
  403675:	push   ss
  403676:	iret   
  403677:	and    esi,DWORD PTR [edx-0x5a]
  40367a:	(bad)  
  40367b:	ficomp DWORD PTR [edi]
  40367d:	cmp    esp,DWORD PTR [ebp+0x49fa4371]
  403683:	and    esp,DWORD PTR [eax+0x18]
  403686:	lea    ecx,[esi-0x2dbaa268]
  40368c:	sub    BYTE PTR [ecx],ch
  40368e:	dec    edi
  40368f:	mov    dh,0xaa
  403691:	(bad)  
  403692:	pop    ebx
  403693:	jb     0x40369d
  403695:	jmp    0x797206eb
  40369a:	cwde   
  40369b:	cmc    
  40369c:	aas    
  40369d:	mov    dl,0xfa
  40369f:	jle    0x403677
  4036a1:	xor    dh,bh
  4036a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a4:	sub    bl,BYTE PTR [edx+0x292cd131]
  4036aa:	xchg   edx,eax
  4036ab:	mov    dh,BYTE PTR [edi+0x68]
  4036ae:	xor    eax,0x9e62714a
  4036b3:	int    0x5a
  4036b5:	retf   
  4036b6:	jne    0x4036ee
  4036b8:	loop   0x4036da
  4036ba:	mov    dh,0x96
  4036bc:	sub    eax,0xed3fe3c7
  4036c1:	and    BYTE PTR [ecx+0x4fb0cd16],bl
  4036c7:	and    DWORD PTR [ebx-0x30af4757],edi
  4036cd:	inc    esp
  4036ce:	fistp  WORD PTR [ebp+0x5bf8329e]
  4036d4:	mov    esi,cs
  4036d6:	push   0x1
  4036d8:	bound  edi,QWORD PTR [eax]
  4036da:	cmp    DWORD PTR [edi],esp
  4036dc:	sahf   
  4036dd:	rcl    BYTE PTR [ebp+0x3e],0xa0
  4036e1:	aas    
  4036e2:	les    edi,FWORD PTR [eax+0x1ca1c26a]
  4036e8:	sbb    DWORD PTR [ecx],ebx
  4036ea:	sub    eax,0x4fdf70dd
  4036ef:	jmp    0x4036da
  4036f1:	repnz add ch,0xa0
  4036f5:	push   eax
  4036f6:	lods   al,BYTE PTR ds:[esi]
  4036f7:	xor    edi,eax
  4036f9:	push   esp
  4036fa:	out    0x7e,al
  4036fc:	scas   al,BYTE PTR es:[edi]
  4036fd:	mov    dh,0xa0
  4036ff:	sub    DWORD PTR [eax-0x48],eax
  403702:	sub    ebp,ebp
  403704:	ja     0x4036d8
  403706:	adc    ecx,DWORD PTR [edi+0x69]
  403709:	arpl   sp,si
  40370b:	mov    ah,0x1e
  40370d:	and    ch,dh
  40370f:	sub    BYTE PTR [ebx+0x16471957],ch
  403715:	ja     0x403704
  403717:	(bad)  
  403719:	or     al,0x8e
  40371b:	iret   
  40371c:	aaa    
  40371d:	retf   
  40371e:	shl    BYTE PTR [esi-0x12],1
  403721:	add    DWORD PTR [edx+eiz*4+0x55c78a24],esi
  403728:	(bad)  
  403729:	out    0xd5,eax
  40372b:	cli    
  40372c:	(bad)  
  40372e:	jle    0x4036c8
  403730:	xor    BYTE PTR [edi],bl
  403732:	stos   DWORD PTR es:[edi],eax
  403733:	xor    BYTE PTR [eax-0x52],ch
  403736:	xor    eax,edi
  403738:	push   edx
  403739:	mov    dh,0x86
  40373b:	in     eax,0xc8
  40373d:	sbb    bl,BYTE PTR [ecx-0x2e]
  403740:	push   0xa50506cf
  403745:	jecxz  0x403781
  403747:	cmp    edx,DWORD PTR [edi]
  403749:	aad    0x51
  40374b:	(bad)  
  40374c:	jmp    0x139:0x6e049a1b
  403753:	adc    DWORD PTR [eax+0x51],ebp
  403756:	loopne 0x4037aa
  403758:	push   eax
  403759:	mov    ebx,ebp
  40375b:	js     0x4036de
  40375d:	bswap  ebp
  40375f:	clc    
  403760:	pop    edx
  403761:	push   es
  403762:	popf   
  403763:	cmp    eax,0x92efe918
  403768:	outs   dx,BYTE PTR ds:[esi]
  403769:	xchg   ebx,eax
  40376a:	jmp    0x4990c8
  40376f:	clc    
  403770:	repnz mov ds:0xd6f6e39,eax
  403776:	clc    
  403777:	imul   esp,DWORD PTR [esp+ebp*4+0x5e],0xec3155d7
  40377f:	outs   dx,DWORD PTR ds:[esi]
  403780:	push   es
  403781:	fwait
  403782:	jl     0x4037f7
  403784:	fdiv   QWORD PTR cs:[eax+0x5b]
  403788:	and    eax,0x337eb82
  40378d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40378e:	mov    ?,WORD PTR [ecx]
  403790:	mov    ds:0x44af8fe8,eax
  403795:	sub    edx,edi
  403797:	in     al,0x2
  403799:	lock mov ebp,0xe08363d0
  40379f:	out    dx,eax
  4037a0:	ins    DWORD PTR es:[edi],dx
  4037a1:	xchg   edx,eax
  4037a2:	push   cs
  4037a3:	popf   
  4037a4:	cmp    eax,0x33e179c6
  4037a9:	(bad)  
  4037aa:	add    BYTE PTR [ebx],dl
  4037ac:	sahf   
  4037ad:	fnsave [ebp-0x7ad8993d]
  4037b3:	pusha  
  4037b4:	enter  0xd967,0x59
  4037b8:	cmp    DWORD PTR [ecx+0x4c711b8f],eax
  4037be:	mov    edx,ebp
  4037c0:	fprem1 
  4037c2:	mov    BYTE PTR [esi],dl
  4037c4:	adc    DWORD PTR [edx-0x3b00c56d],ecx
  4037ca:	pushf  
  4037cb:	mov    eax,ds:0xc9da53b0
  4037d0:	imul   edx,DWORD PTR [eax-0x3732d8f8],0x4
  4037d7:	xchg   ebp,ecx
  4037d9:	xor    bh,BYTE PTR [edi]
  4037db:	rol    edi,0xcc
  4037de:	stc    
  4037df:	xchg   edx,eax
  4037e0:	mov    bl,0x9b
  4037e2:	push   edx
  4037e3:	dec    ecx
  4037e4:	mov    esp,0xeb113b56
  4037e9:	mov    WORD PTR [ebp-0x32],gs
  4037ec:	mov    esp,ecx
  4037ee:	loopne 0x40381c
  4037f0:	mov    edx,gs
  4037f2:	sar    dh,1
  4037f4:	cmp    al,0xac
  4037f6:	fistp  WORD PTR [edx]
  4037f8:	mov    dl,0xdd
  4037fa:	mov    ch,BYTE PTR [edx+0x68ec2d61]
  403800:	fidivr DWORD PTR ds:0xfc8fdc5f
  403806:	(bad)  
  403807:	(bad)  
  403809:	pusha  
  40380a:	inc    esi
  40380b:	and    eax,0xea07ce96
  403810:	adc    eax,0xc04a6723
  403815:	in     eax,0x1d
  403817:	out    dx,eax
  403818:	sub    eax,0x6b76f1c1
  40381d:	mov    bh,0xda
  40381f:	in     al,0x84
  403821:	cmc    
  403822:	dec    edx
  403823:	into   
  403824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403825:	imul   edx,DWORD PTR [edx-0x14],0xffffffca
  403829:	ret    
  40382a:	push   edx
  40382b:	aad    0xfb
  40382d:	adc    DWORD PTR [ecx],edi
  40382f:	pop    ecx
  403830:	or     ebp,0x14
  403833:	data16 (bad) 
  403835:	icebp  
  403836:	mov    dl,0x99
  403838:	stos   BYTE PTR es:[edi],al
  403839:	xchg   esi,eax
  40383a:	xchg   ecx,eax
  40383b:	aam    0xda
  40383d:	imul   ebx,DWORD PTR [edi+0x414543b6],0xffffff95
  403844:	int3   
  403845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403846:	sub    dh,dl
  403848:	pop    edx
  403849:	outs   dx,DWORD PTR ds:[esi]
  40384a:	test   BYTE PTR [ecx-0x11fd50da],dh
  403850:	dec    BYTE PTR [edi-0x941d5e5]
  403856:	mov    edi,0x1fe12d81
  40385b:	xchg   esp,eax
  40385c:	sti    
  40385d:	mov    esi,0x934f881a
  403862:	xchg   ebx,eax
  403863:	je     0x403869
  403865:	inc    ebx
  403866:	jecxz  0x403844
  403868:	jae    0x4038a3
  40386a:	or     al,0xff
  40386c:	mov    ah,0x9a
  40386e:	lods   al,BYTE PTR ds:[esi]
  40386f:	dec    esp
  403870:	js     0x40387c
  403872:	sbb    al,0xb0
  403874:	xchg   ecx,eax
  403875:	(bad)  
  403876:	pop    ecx
  403877:	imul   ebx,DWORD PTR [edx-0x4afcfa12],0xb2869e3d
  403881:	cmc    
  403882:	cld    
  403883:	sub    BYTE PTR [eax+0x6],cl
  403886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403887:	clc    
  403888:	shl    DWORD PTR [edi-0x20],0xe1
  40388c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40388d:	jge    0x4038a2
  40388f:	inc    BYTE PTR [eax+0x49b5e30a]
  403895:	xchg   BYTE PTR [edi+0x6b],al
  403898:	inc    esp
  403899:	loopne 0x403860
  40389b:	loop   0x4038d3
  40389d:	mov    DWORD PTR [ecx+ecx*8+0x8],edi
  4038a1:	add    dh,bl
  4038a3:	enter  0xb947,0x10
  4038a7:	dec    edi
  4038a8:	add    dl,BYTE PTR [ecx+0x6a7b3359]
  4038ae:	fwait
  4038af:	or     BYTE PTR [ebp-0x7205f9ed],cl
  4038b5:	push   0xe94cbfa
  4038ba:	dec    esp
  4038bb:	sub    eax,DWORD PTR [ebx]
  4038bd:	or     al,0x76
  4038bf:	scas   eax,DWORD PTR es:[edi]
  4038c0:	mov    ebp,0x5b023f1d
  4038c5:	sub    eax,0x4678bbe4
  4038ca:	sub    eax,0xe3317dbe
  4038cf:	fist   WORD PTR [edi-0x34]
  4038d2:	and    BYTE PTR [bx+di+0x75],ch
  4038d6:	mov    bl,0xff
  4038d8:	jle    0x4038da
  4038da:	cdq    
  4038db:	jnp    0x40395b
  4038dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038de:	mov    ch,BYTE PTR [esi+0x37]
  4038e1:	xchg   esi,eax
  4038e2:	fwait
  4038e3:	jae    0x403904
  4038e5:	sub    BYTE PTR [eax],dh
  4038e7:	lods   eax,DWORD PTR ds:[esi]
  4038e8:	mov    eax,0x5e14a6a2
  4038ed:	jnp    0x403951
  4038ef:	mov    gs,ebp
  4038f1:	sahf   
  4038f2:	pop    esp
  4038f3:	jecxz  0x4038f8
  4038f5:	rcl    dl,cl
  4038f7:	or     dl,0xc7
  4038fa:	or     BYTE PTR [esi-0x79],bh
  4038fd:	repz aad 0xcd
  403900:	jg     0x40396d
  403902:	or     al,BYTE PTR [edx+0x4b]
  403905:	cmp    BYTE PTR [edx-0x73],0x9c
  403909:	xchg   DWORD PTR [edi],edx
  40390b:	and    eax,0x3ed476c1
  403910:	cmp    BYTE PTR [esi],dl
  403912:	repz push eax
  403914:	scas   eax,DWORD PTR es:[edi]
  403915:	stos   BYTE PTR es:[edi],al
  403916:	ror    BYTE PTR [esi-0x11e00a89],cl
  40391c:	ins    BYTE PTR es:[edi],dx
  40391d:	pop    ebp
  40391e:	adc    eax,DWORD PTR [edi-0x45]
  403921:	xchg   esp,eax
  403922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403923:	sub    BYTE PTR [edi+0x456a10c7],bh
  403929:	mov    esp,edi
  40392b:	xchg   edx,eax
  40392c:	ja     0x4038c6
  40392e:	aam    0xbd
  403930:	lds    esi,FWORD PTR [ebx-0x78478766]
  403936:	out    0x24,eax
  403938:	jne    0x403979
  40393a:	in     eax,0xfb
  40393c:	int3   
  40393d:	dec    edx
  40393e:	add    ch,BYTE PTR [ecx]
  403940:	rcl    BYTE PTR [ecx],cl
  403942:	in     eax,dx
  403943:	pop    ecx
  403944:	leave  
  403945:	jne    0x40396d
  403947:	jmp    0x4038d2
  403949:	and    eax,0x15b437d6
  40394e:	sub    esi,DWORD PTR [edx+0x22fad9a4]
  403954:	add    DWORD PTR [edx+0x55],0x9f2e20c7
  40395b:	or     ah,0x95
  40395e:	pushf  
  40395f:	leave  
  403960:	push   0x2f1fe4f8
  403965:	dec    esi
  403966:	jmp    0x5686ba81
  40396b:	jl     0x40398b
  40396d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40396e:	xchg   esi,eax
  40396f:	sahf   
  403970:	pop    ss
  403971:	xchg   esp,eax
  403972:	push   ebp
  403973:	dec    ebx
  403974:	in     eax,dx
  403975:	shl    BYTE PTR [esp+eax*1-0x48],cl
  403979:	std    
  40397a:	jns    0x4039dd
  40397c:	push   es
  40397d:	cmp    ecx,DWORD PTR [esi]
  40397f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403980:	cld    
  403981:	and    bh,BYTE PTR [edx+0x52]
  403984:	(bad)  
  403985:	retf   0xbfed
  403988:	pop    eax
  403989:	fcomip st,st(2)
  40398b:	test   eax,0x8be45708
  403990:	or     ecx,DWORD PTR [edx+0x1f]
  403993:	ins    DWORD PTR es:[edi],dx
  403994:	pushf  
  403995:	daa    
  403996:	aaa    
  403997:	xchg   ebx,eax
  403998:	xchg   edi,eax
  403999:	mov    dl,0x9f
  40399b:	in     al,0x8f
  40399d:	or     BYTE PTR [edi-0x7faa0c2d],dh
  4039a3:	push   ss
  4039a4:	add    al,0x71
  4039a6:	mov    esp,0xbc7df523
  4039ab:	call   0x4ad5:0xc3e9f67d
  4039b2:	ins    DWORD PTR es:[edi],dx
  4039b3:	outs   dx,DWORD PTR ds:[esi]
  4039b4:	adc    dh,bh
  4039b6:	js     0x40399d
  4039b8:	xlat   BYTE PTR ds:[ebx]
  4039b9:	lods   eax,DWORD PTR ds:[esi]
  4039ba:	sti    
  4039bb:	jg     0x4039d8
  4039bd:	inc    eax
  4039be:	or     edi,DWORD PTR [eax]
  4039c0:	std    
  4039c1:	mov    ah,0x15
  4039c3:	add    ebp,ebp
  4039c5:	jl     0x4039e7
  4039c7:	add    DWORD PTR [ecx-0x8b2ba48],0xb
  4039ce:	cmp    DWORD PTR [eax-0x4c],0xffffff98
  4039d2:	in     al,dx
  4039d3:	dec    ebx
  4039d4:	sti    
  4039d5:	xchg   edi,eax
  4039d6:	sti    
  4039d7:	jp     0x4039b5
  4039d9:	dec    eax
  4039da:	jg     0x403999
  4039dc:	add    dh,dl
  4039de:	inc    esi
  4039df:	xor    cl,dh
  4039e1:	sbb    dl,BYTE PTR [eax]
  4039e3:	lahf   
  4039e4:	in     al,0xd5
  4039e6:	lods   al,BYTE PTR ds:[esi]
  4039e7:	pop    esp
  4039e9:	hlt    
  4039ea:	inc    esp
  4039eb:	ins    DWORD PTR es:[edi],dx
  4039ec:	mov    ah,0x3f
  4039ee:	mov    ds:0x4c1f0a07,eax
  4039f3:	loope  0x403a0d
  4039f5:	jae    0x403a69
  4039f7:	mov    ds:0x67fd3bef,eax
  4039fc:	sub    BYTE PTR [eax+esi*1-0x38],ch
  403a00:	lods   al,BYTE PTR ds:[esi]
  403a01:	cmp    esp,esi
  403a03:	pop    edi
  403a04:	jg     0x403a48
  403a06:	mov    bh,0xd4
  403a08:	mov    ebx,0x2e737a9b
  403a0d:	les    ebp,FWORD PTR [ebx]
  403a0f:	pop    edx
  403a10:	mov    ?,WORD PTR [esp+esi*8]
  403a13:	lock add cl,BYTE PTR [edi+0x39c34eca]
  403a1a:	jg     0x403a3f
  403a1c:	dec    esi
  403a1d:	retf   0xb5d6
  403a20:	gs enter 0xa337,0xbf
  403a25:	fiadd  DWORD PTR [esi]
  403a27:	data16 sbb BYTE PTR [esi],dl
  403a2a:	cli    
  403a2b:	adc    ebx,DWORD PTR [ebp-0x2ecfff4a]
  403a31:	mov    ebx,0x453b8a04
  403a36:	jb     0x403a2e
  403a38:	jmp    0x3cd077fe
  403a3d:	fcomp  DWORD PTR [edi+0x5e]
  403a40:	dec    ebx
  403a41:	int    0x20
  403a43:	or     eax,0x9de641db
  403a48:	std    
  403a49:	push   0x32
  403a4b:	mov    WORD PTR [ecx],gs
  403a4d:	leavew 
  403a4f:	retf   0xaf8b
  403a52:	sub    al,0xa7
  403a54:	dec    esi
  403a55:	jbe    0x403aa9
  403a57:	leave  
  403a58:	push   ebx
  403a59:	retf   
  403a5a:	out    0xde,al
  403a5c:	jecxz  0x403adc
  403a5e:	jmp    0x4039f0
  403a60:	fisttp WORD PTR [edi-0x50]
  403a63:	mov    edi,0x6382076c
  403a68:	pop    esp
  403a69:	shl    DWORD PTR [edi-0xf],cl
  403a6c:	shr    BYTE PTR [edi+0x2d],1
  403a6f:	add    dl,al
  403a71:	lahf   
  403a72:	dec    edx
  403a73:	jge    0x403abd
  403a75:	retf   0xe97e
  403a78:	ss or  BYTE PTR ds:[esp+esi*2-0x741082aa],bh
  403a81:	mov    BYTE PTR [ebx-0x7c5e5db5],ch
  403a87:	inc    DWORD PTR [edi+edx*4+0x67]
  403a8b:	or     BYTE PTR [edi-0x53210c4f],ch
  403a91:	fcom   QWORD PTR [eax-0x2b475052]
  403a97:	push   ecx
  403a98:	outs   dx,BYTE PTR ds:[esi]
  403a99:	in     eax,0xe9
  403a9b:	jne    0x403b17
  403a9d:	mov    ebx,0x96e3cb06
  403aa2:	or     al,BYTE PTR [edx]
  403aa4:	add    al,0x90
  403aa6:	xchg   ecx,eax
  403aa7:	push   0x5b
  403aa9:	and    ah,dl
  403aab:	test   BYTE PTR [ecx+0x31],ah
  403aae:	retf   0x5d8
  403ab1:	cld    
  403ab2:	sbb    BYTE PTR es:0x6296f69d,dl
  403ab9:	pop    ss
  403aba:	mov    ebp,0xbe99226
  403abf:	adc    eax,DWORD PTR [eax-0x48b99291]
  403ac5:	shr    DWORD PTR [ebp+eiz*4+0x20],1
  403ac9:	jmp    0x403ae7
  403acb:	inc    ebp
  403acc:	dec    ebx
  403acd:	data16 lahf 
  403acf:	push   eax
  403ad0:	add    ah,bl
  403ad2:	xor    eax,0xbd321ad3
  403ad7:	sahf   
  403ad8:	fidiv  DWORD PTR [eax+edx*2+0x29]
  403adc:	sbb    BYTE PTR [ebp-0x6],bh
  403adf:	xor    ecx,0x36009c43
  403ae5:	(bad)  
  403ae6:	test   DWORD PTR [esp+ebp*4+0x27],edx
  403aea:	test   DWORD PTR [ecx],edi
  403aec:	daa    
  403aed:	imul   esp,DWORD PTR [ecx+0x59a39d58],0xd3eea605
  403af7:	call   0xaf28:0x3029c419
  403afe:	mov    eax,ds:0xcc3631d4
  403b03:	or     BYTE PTR [esi+0x19c4ca0d],bh
  403b09:	jns    0x403b8a
  403b0b:	out    dx,al
  403b0c:	leave  
  403b0d:	push   esp
  403b0e:	pop    ss
  403b0f:	dec    eax
  403b10:	cmp    eax,0x92e912d0
  403b15:	(bad)  [ebx+eax*2]
  403b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b19:	outs   dx,BYTE PTR ds:[esi]
  403b1a:	cmp    ah,BYTE PTR [ecx-0x348227e6]
  403b20:	shr    BYTE PTR [ebp+0x53],1
  403b23:	cwde   
  403b24:	mov    ebx,0x3f1bd3d6
  403b29:	popa   
  403b2a:	ret    0xf058
  403b2d:	sbb    DWORD PTR ds:0x783e84a8,ebp
  403b33:	sbb    DWORD PTR [esi+esi*2+0x63],edi
  403b37:	addr16 inc esp
  403b39:	cmp    al,0xac
  403b3b:	fidiv  DWORD PTR [eax-0x729f8ea8]
  403b41:	test   eax,0x76c1d052
  403b46:	std    
  403b47:	pusha  
  403b48:	and    eax,DWORD PTR [edx+0x7a]
  403b4b:	push   0xd9a8aef6
  403b50:	scas   eax,DWORD PTR es:[edi]
  403b51:	sub    BYTE PTR [ebp+0x44],ah
  403b54:	jmp    0x51b9:0xc671dc1d
  403b5b:	mov    esp,0x35db5c1d
  403b60:	in     al,0xc2
  403b62:	xchg   edi,eax
  403b63:	shr    DWORD PTR [ebp-0x7f69ba4f],cl
  403b69:	inc    esp
  403b6a:	add    al,0x1d
  403b6c:	mov    ch,BYTE PTR [eax-0x119f57e]
  403b72:	xchg   esi,eax
  403b73:	ins    BYTE PTR es:[edi],dx
  403b74:	cld    
  403b75:	cmp    BYTE PTR [edx+0x701fd40f],al
  403b7b:	outs   dx,DWORD PTR ds:[esi]
  403b7c:	sub    dl,bl
  403b7e:	xchg   BYTE PTR [eax+0x3e],bl
  403b81:	and    eax,0x7fe29b49
  403b86:	lds    ebx,FWORD PTR [ebx]
  403b88:	push   ebp
  403b89:	jge    0x403ba6
  403b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b8c:	pop    edi
  403b8d:	les    eax,FWORD PTR [ebp-0x7e]
  403b90:	ret    0x5bc1
  403b93:	and    al,0xf5
  403b95:	sub    dl,BYTE PTR ds:0xccd588f1
  403b9b:	popf   
  403b9c:	push   es
  403b9d:	cmp    eax,0xf4708aa8
  403ba2:	mov    bh,0x67
  403ba4:	sbb    dh,BYTE PTR [esi-0x5d88933d]
  403baa:	mov    DWORD PTR [esi-0x27ad2195],0xe5384ed5
  403bb4:	fst    DWORD PTR [ebp+0x65b4af1e]
  403bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bbb:	(bad)  
  403bbc:	dec    edi
  403bbd:	mov    ds:0xfb9ea233,al
  403bc2:	inc    esi
  403bc3:	frstor [esi+0x4e]
  403bc6:	push   ecx
  403bc7:	fldcw  WORD PTR gs:[edi+eiz*1]
  403bcb:	out    dx,al
  403bcc:	mov    gs,edx
  403bce:	retf   
  403bcf:	fwait
  403bd0:	mov    dl,0xa7
  403bd2:	or     eax,0x78cac6fc
  403bd7:	rcl    esi,cl
  403bd9:	das    
  403bda:	iret   
  403bdb:	mov    WORD PTR [edx+edi*8-0x59],?
  403bdf:	es cs dec edi
  403be2:	jnp    0x403c47
  403be4:	sbb    ch,ch
  403be6:	stos   DWORD PTR es:[edi],eax
  403be7:	lahf   
  403be8:	enter  0xb815,0xa0
  403bec:	in     al,dx
  403bed:	xchg   esp,eax
  403bee:	into   
  403bef:	and    DWORD PTR [eax-0x49],ecx
  403bf2:	adc    DWORD PTR [edx],ebp
  403bf4:	pop    eax
  403bf5:	bound  ebx,QWORD PTR [esi+0x53f3f3f0]
  403bfb:	xor    eax,0x368ecb78
  403c00:	loopne 0x403c04
  403c02:	lods   eax,DWORD PTR ds:[esi]
  403c03:	(bad)  
  403c04:	icebp  
  403c05:	xor    eax,0x8af2683d
  403c0a:	xor    BYTE PTR ds:0xe79d0b37,0x8a
  403c11:	out    0x2e,al
  403c13:	xor    eax,0xe4db9514
  403c18:	pop    ebp
  403c19:	mov    edx,0xd8d12ee
  403c1e:	arpl   WORD PTR [eax-0x18c8816e],sp
  403c24:	and    eax,0xf61ee7c6
  403c29:	enter  0xdb99,0xf1
  403c2d:	popa   
  403c2e:	(bad)  
  403c2f:	pop    ds
  403c30:	pop    ebp
  403c31:	sbb    BYTE PTR [edx],cl
  403c33:	enter  0x9cc6,0xe2
  403c37:	(bad)  
  403c38:	xor    DWORD PTR [eax+eiz*4],ebx
  403c3b:	cmovne esi,DWORD PTR [eax+0x21139615]
  403c42:	shr    al,0x47
  403c45:	fcom   QWORD PTR [esi+0x59bf1410]
  403c4b:	data16 (bad) 
  403c4d:	lods   eax,DWORD PTR ds:[esi]
  403c4e:	test   eax,0x1790ea91
  403c53:	sbb    al,0x11
  403c55:	outs   dx,BYTE PTR ds:[esi]
  403c56:	add    BYTE PTR [eax],bl
  403c58:	xor    al,0xf6
  403c5a:	xchg   ebx,eax
  403c5b:	pusha  
  403c5c:	fs pop esp
  403c5e:	dec    ebx
  403c5f:	fsubrp st(2),st
  403c61:	lock loope 0x403c32
  403c64:	jo     0x403c50
  403c66:	out    0x7,al
  403c68:	test   al,0xf9
  403c6a:	push   0x786ceb7
  403c6f:	mov    esi,0x9509136d
  403c74:	jmp    0x403cc8
  403c76:	retf   
  403c77:	push   esp
  403c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c79:	add    BYTE PTR [eax+ebx*4+0x52],al
  403c7d:	fist   DWORD PTR [ebp-0x7f4421b6]
  403c83:	cmp    eax,0xabf83bef
  403c88:	ins    DWORD PTR es:[edi],dx
  403c89:	test   ch,bh
  403c8b:	add    ebx,DWORD PTR [esi-0x6c86045a]
  403c91:	outs   dx,BYTE PTR ds:[esi]
  403c92:	xchg   edx,eax
  403c93:	xor    al,0xf9
  403c95:	ror    bh,1
  403c97:	adc    ebp,DWORD PTR [edx+0x4]
  403c9a:	adc    DWORD PTR [ebx],ebx
  403c9c:	jnp    0x403c94
  403c9e:	aam    0xee
  403ca0:	dec    ebp
  403ca1:	shl    ecx,cl
  403ca3:	gs jbe 0x403cac
  403ca6:	pop    edi
  403ca7:	push   es
  403ca8:	or     eax,0xc68a1c5b
  403cad:	cmp    al,BYTE PTR [ebp-0x3133b3f0]
  403cb3:	mov    al,ds:0xabba74e1
  403cb8:	gs in  eax,0xb8
  403cbb:	adc    DWORD PTR [ebx+0x17aa1976],esi
  403cc1:	fstp   QWORD PTR ds:0xf1762ba9
  403cc7:	mov    WORD PTR [eax],es
  403cc9:	aaa    
  403cca:	cld    
  403ccb:	sahf   
  403ccc:	(bad)  
  403ccd:	push   eax
  403cce:	outs   dx,BYTE PTR ds:[esi]
  403ccf:	inc    ecx
  403cd0:	outs   dx,DWORD PTR ds:[esi]
  403cd1:	cmp    DWORD PTR [edi+0x42],esp
  403cd4:	inc    ecx
  403cd5:	cmp    dl,BYTE PTR [edi+0x43a16a57]
  403cdb:	imul   edx,DWORD PTR [ebp+0x2280cdb8],0x30
  403ce2:	in     eax,dx
  403ce3:	mov    ebx,0x9ec316d1
  403ce8:	pop    ecx
  403ce9:	jmp    0xae164c0d
  403cee:	int    0x48
  403cf0:	inc    esi
  403cf1:	clc    
  403cf2:	xchg   edi,eax
  403cf3:	les    edx,FWORD PTR [edx+0x14d86f9b]
  403cf9:	push   0xffffffa9
  403cfb:	out    0xc8,al
  403cfd:	bswap  esi
  403cff:	ins    BYTE PTR es:[edi],dx
  403d00:	push   ebp
  403d01:	scas   al,BYTE PTR es:[edi]
  403d02:	xor    esi,0xdc89b90d
  403d08:	push   cs
  403d09:	sbb    ch,dh
  403d0b:	call   DWORD PTR [esi+0x5ed5d1dc]
  403d11:	mov    BYTE PTR [esi+0x2],bh
  403d14:	xchg   edi,eax
  403d15:	and    dh,ch
  403d17:	jmp    0xcfd69698
  403d1c:	jno    0x403d39
  403d1e:	mov    edi,esp
  403d20:	pop    eax
  403d21:	test   BYTE PTR [edi+ebx*1+0x72bbcc6d],0xdc
  403d29:	or     DWORD PTR [ecx+0x25],0xffffffea
  403d2d:	xor    eax,0x8668bcc8
  403d32:	dec    ebp
  403d33:	mov    esp,0xfa2c1243
  403d38:	dec    ebp
  403d39:	loop   0x403cc6
  403d3b:	pop    esi
  403d3c:	ret    0xb6f6
  403d3f:	xchg   esi,eax
  403d40:	inc    edi
  403d41:	mov    ebx,0xb4384a4c
  403d46:	mov    esi,DWORD PTR [ebx-0x7cf2fe18]
  403d4c:	ss dec edx
  403d4e:	pop    ebp
  403d4f:	mov    dl,0xbd
  403d51:	push   ss
  403d52:	mov    al,ds:0xcf579543
  403d57:	sbb    dl,BYTE PTR [eax+0x72]
  403d5a:	fwait
  403d5b:	sub    al,0xf2
  403d5d:	fistp  QWORD PTR [eax]
  403d5f:	pop    edi
  403d60:	ret    0x1d80
  403d63:	scas   al,BYTE PTR es:[edi]
  403d64:	push   edx
  403d65:	pop    esi
  403d66:	or     esp,0x5b244e98
  403d6c:	in     eax,dx
  403d6d:	push   edi
  403d6e:	adc    eax,DWORD PTR [edi]
  403d70:	scas   al,BYTE PTR es:[edi]
  403d71:	cmp    BYTE PTR [edx],bl
  403d73:	sub    DWORD PTR [esi-0x14e29e8d],edi
  403d79:	outs   dx,DWORD PTR ds:[esi]
  403d7a:	add    ah,BYTE PTR [eax]
  403d7c:	ror    DWORD PTR [ecx+ecx*1-0x70],1
  403d80:	(bad)
  403d83:	das    
  403d84:	and    ebp,DWORD PTR [eax-0x18]
  403d87:	push   es
  403d88:	mov    cl,0xd7
  403d8a:	repnz mov eax,0xeb2bb603
  403d90:	dec    esi
  403d91:	shl    DWORD PTR [ebx+0x12],0x95
  403d95:	jmp    0x9bc857
  403d9a:	and    DWORD PTR [eax],esi
  403d9c:	and    al,0x7e
  403d9e:	and    al,0x90
  403da0:	mov    ah,0xa4
  403da2:	test   cl,0x9
  403da5:	cdq    
  403da6:	call   0xec178515
  403dab:	mov    ebx,?
  403dad:	outs   dx,BYTE PTR ds:[esi]
  403dae:	imul   edi,DWORD PTR [esi],0x29
  403db1:	xchg   BYTE PTR ds:0xdd253a8b,dl
  403db7:	ret    
  403db8:	cmp    BYTE PTR [ecx],al
  403dba:	dec    ecx
  403dbb:	jecxz  0x403df3
  403dbd:	xor    ah,BYTE PTR [edx-0x1730221a]
  403dc3:	(bad)  
  403dc4:	fst    DWORD PTR [eax+eiz*2]
  403dc7:	sar    esp,cl
  403dc9:	xor    ah,cl
  403dcb:	mov    al,BYTE PTR [eax+0x1b26f630]
  403dd1:	adc    esi,DWORD PTR [ebp+0x6a]
  403dd4:	sar    BYTE PTR [ecx+0x3d41ea08],1
  403dda:	cli    
  403ddb:	jbe    0x403d7f
  403ddd:	mov    eax,ds:0x3044b04f
  403de2:	inc    esi
  403de3:	mov    al,0x89
  403de5:	dec    eax
  403de6:	dec    edi
  403de7:	pop    edx
  403de8:	mov    dl,BYTE PTR [ecx]
  403dea:	xchg   edx,eax
  403deb:	jns    0x403dee
  403ded:	xor    DWORD PTR [ebx-0x2bcf4e68],0xffffffea
  403df4:	sbb    BYTE PTR [ebx+0x19b05d50],ah
  403dfa:	std    
  403dfb:	jae    0x403e49
  403dfd:	cmp    al,0x28
  403dff:	jo     0x403dad
  403e01:	addr16 cwde 
  403e03:	lock in al,0x73
  403e06:	xchg   esp,eax
  403e07:	out    dx,eax
  403e08:	pop    ds
  403e09:	dec    esi
  403e0a:	mov    WORD PTR [ecx-0x32452a43],fs
  403e10:	int3   
  403e11:	xchg   ebp,eax
  403e12:	pop    ds
  403e13:	dec    edi
  403e14:	pop    esi
  403e16:	aad    0x54
  403e18:	into   
  403e19:	inc    ebp
  403e1a:	fist   WORD PTR [ebx-0x38a622d2]
  403e20:	(bad)  
  403e21:	sub    edx,DWORD PTR [ebx+0x75]
  403e24:	dec    edx
  403e25:	int    0xba
  403e27:	cmp    eax,0xe5c218e3
  403e2c:	dec    ecx
  403e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2e:	in     eax,dx
  403e2f:	pop    ss
  403e30:	mov    ecx,0x3a5bd222
  403e35:	push   eax
  403e36:	shr    BYTE PTR [edx],cl
  403e38:	mov    ch,0xd1
  403e3a:	inc    eax
  403e3b:	cmovb  edi,DWORD PTR [ebp-0x54]
  403e3f:	mov    WORD PTR [edi],ds
  403e41:	scas   al,BYTE PTR es:[edi]
  403e42:	jecxz  0x403e77
  403e44:	push   0x5
  403e46:	outs   dx,DWORD PTR ds:[esi]
  403e47:	jb     0x403eb9
  403e49:	test   eax,0xea663c70
  403e4e:	enter  0x21cd,0x2a
  403e52:	shrd   DWORD PTR [ecx],esi,cl
  403e55:	aad    0xa6
  403e57:	lods   eax,DWORD PTR ds:[esi]
  403e58:	cmp    dh,dh
  403e5a:	aas    
  403e5b:	test   al,0x86
  403e5d:	js     0x403e4b
  403e5f:	enter  0xee82,0x34
  403e63:	shl    BYTE PTR [esi+edi*1-0x5f],1
  403e67:	icebp  
  403e68:	inc    esi
  403e69:	adc    BYTE PTR [ebx+0x53],dl
  403e6c:	(bad)  
  403e6d:	in     eax,0x83
  403e6f:	sub    ch,ch
  403e71:	pushf  
  403e72:	pop    ecx
  403e73:	dec    ecx
  403e74:	jo     0x403e43
  403e76:	(bad)  
  403e77:	into   
  403e78:	mov    ch,0x56
  403e7a:	lds    ecx,FWORD PTR [esi+0x4f]
  403e7d:	push   edx
  403e7e:	sbb    DWORD PTR [edx],esp
  403e80:	mov    esi,0x5ee5b94f
  403e85:	je     0x403e30
  403e87:	in     eax,0xde
  403e89:	jbe    0x403e19
  403e8b:	dec    ecx
  403e8c:	nop
  403e8d:	xchg   DWORD PTR [edx+0x58546134],edi
  403e93:	adc    DWORD PTR ds:0xb9cca5e8,ecx
  403e99:	sar    BYTE PTR [esi],0x18
  403e9c:	inc    edx
  403e9d:	push   es
  403e9e:	sti    
  403e9f:	stos   BYTE PTR es:[edi],al
  403ea0:	ins    BYTE PTR es:[edi],dx
  403ea1:	xor    al,0xb3
  403ea3:	sub    ah,ah
  403ea5:	xchg   esi,eax
  403ea6:	out    0x87,eax
  403ea8:	stos   BYTE PTR es:[edi],al
  403ea9:	push   eax
  403eaa:	repz fs lds edx,FWORD PTR fs:[ebp-0x3b53f98b]
  403eb3:	outs   dx,BYTE PTR ds:[esi]
  403eb4:	jp     0x403ec5
  403eb6:	stos   BYTE PTR es:[edi],al
  403eb7:	sti    
  403eb8:	sub    esi,DWORD PTR [ebp+0xa9991bf]
  403ebe:	mov    bl,0x9c
  403ec0:	mov    BYTE PTR ds:0xc3336ca5,ah
  403ec6:	fld    QWORD PTR [edx-0x1d5f82c2]
  403ecc:	push   ecx
  403ecd:	xor    BYTE PTR [esi],bh
  403ecf:	ja     0x403ef6
  403ed1:	pushf  
  403ed2:	push   eax
  403ed3:	popf   
  403ed4:	jge    0x403e8e
  403ed6:	mov    al,0x3d
  403ed8:	mov    ebx,ebx
  403eda:	daa    
  403edb:	fist   WORD PTR [ebx-0x78]
  403ede:	xchg   BYTE PTR [edx+eiz*8-0x15d5e10b],bh
  403ee5:	in     al,dx
  403ee6:	adc    BYTE PTR [edi-0x4a],dh
  403ee9:	enter  0xf790,0x4d
  403eed:	aaa    
  403eee:	sub    ch,BYTE PTR [ebp-0x2d]
  403ef1:	add    eax,ebx
  403ef3:	dec    ebp
  403ef4:	out    0x24,al
  403ef6:	ja     0x403eba
  403ef8:	lds    ecx,FWORD PTR [ecx]
  403efa:	jl     0x403f07
  403efc:	nop
  403efd:	test   eax,0x434667c5
  403f02:	ss aaa 
  403f04:	pop    ss
  403f05:	cli    
  403f06:	push   ebx
  403f07:	fld    st(0)
  403f09:	retf   0x3695
  403f0c:	inc    esp
  403f0d:	add    bl,BYTE PTR [esi+0x72]
  403f10:	jne    0x403f12
  403f12:	sahf   
  403f13:	mov    WORD PTR [eax-0x3bcb27bd],?
  403f19:	ja     0x403f74
  403f1b:	sub    eax,0xbf7a98bf
  403f20:	cmc    
  403f21:	cmp    ebx,DWORD PTR [ecx+0x21e883c2]
  403f27:	and    esi,ecx
  403f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2a:	sub    eax,0xa7f169d8
  403f2f:	int    0x66
  403f31:	scas   eax,DWORD PTR es:[edi]
  403f32:	dec    edi
  403f33:	mov    esi,0xe099d9a8
  403f38:	sbb    al,0xd6
  403f3a:	xchg   edx,eax
  403f3b:	push   ds
  403f3c:	add    dh,BYTE PTR [edi-0x65]
  403f3f:	xchg   esp,eax
  403f40:	nop
  403f41:	mov    edi,0x75b1f66f
  403f46:	arpl   WORD PTR es:[edx-0x6fc4ca9a],ax
  403f4d:	mov    ds:0x966836ca,al
  403f52:	push   cs
  403f53:	sbb    al,0xfc
  403f55:	sub    ebp,ebp
  403f57:	push   esi
  403f58:	sub    esp,DWORD PTR [eax-0x2baaa7b0]
  403f5e:	pop    esp
  403f5f:	mov    ebx,0xebeab281
  403f64:	mov    ch,0xc8
  403f66:	call   0xc5c0:0xbc1e8785
  403f6d:	(bad)  
  403f6e:	cmc    
  403f6f:	add    eax,0xc63beaaf
  403f74:	popa   
  403f75:	das    
  403f76:	adc    DWORD PTR [ebx],esi
  403f78:	mov    BYTE PTR [ecx-0x14],dl
  403f7b:	in     al,0x9a
  403f7d:	mov    edi,0x2319cc84
  403f82:	call   0xce78f212
  403f87:	jbe    0x403ff3
  403f89:	and    eax,0xac1fd945
  403f8e:	push   ds
  403f8f:	das    
  403f90:	les    ebp,FWORD PTR [edx+edi*8-0x53]
  403f94:	stc    
  403f95:	and    esi,DWORD PTR [esi-0x3]
  403f98:	idiv   DWORD PTR [ebx]
  403f9a:	xchg   edi,eax
  403f9b:	test   DWORD PTR [esi-0x5827d898],ecx
  403fa1:	lods   eax,DWORD PTR ds:[esi]
  403fa2:	int3   
  403fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa4:	(bad)
  403fa7:	fistp  DWORD PTR [edi-0x66]
  403faa:	xchg   ebp,eax
  403fab:	xor    eax,DWORD PTR [eax]
  403fad:	bound  edi,QWORD PTR [ecx]
  403faf:	push   ebp
  403fb0:	ficom  WORD PTR [edi-0x4c]
  403fb3:	add    esi,DWORD PTR [esi-0x75]
  403fb6:	cmc    
  403fb7:	fsub   DWORD PTR [esi]
  403fb9:	sub    dl,cl
  403fbb:	shl    DWORD PTR [ecx+edi*4-0x213ef351],cl
  403fc2:	fcmovb st,st(5)
  403fc4:	pop    es
  403fc5:	div    DWORD PTR [edx-0x2635fe6]
  403fcb:	iret   
  403fcc:	out    0x58,eax
  403fce:	cmp    DWORD PTR [edi+edi*2],0xac5577db
  403fd5:	bound  ebx,QWORD PTR [eax+0x27]
  403fd8:	es inc eax
  403fda:	or     edi,edx
  403fdc:	push   ds
  403fdd:	stos   DWORD PTR es:[edi],eax
  403fde:	retf   0x245d
  403fe1:	pop    esi
  403fe2:	mov    ds:0x5c29e24f,al
  403fe7:	adc    eax,0x9cbf24f2
  403fec:	cmp    ecx,DWORD PTR [edi]
  403fee:	aaa    
  403fef:	dec    edi
  403ff0:	gs inc eax
  403ff2:	aas    
  403ff3:	int3   
  403ff4:	fistp  WORD PTR ds:0xf7b5b541
  403ffa:	imul   ecx,DWORD PTR ds:0xb2663197,0xcc978783
  404004:	sbb    al,0xa9
  404006:	sbb    eax,0x15caab5f
  40400b:	push   esi
  40400c:	mov    DWORD PTR [ebp-0x1f837714],esp
  404012:	adc    DWORD PTR [edi+0x2d],ecx
  404015:	mov    bl,0x4e
  404017:	add    BYTE PTR ds:0xd2172c49,bl
  40401d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401e:	imul   ebx,ecx,0xf0eb31d0
  404024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404025:	dec    esi
  404026:	adc    al,0xcb
  404028:	jg     0x404080
  40402a:	pushf  
  40402b:	push   ecx
  40402c:	sub    BYTE PTR [ecx-0x59d17921],bh
  404032:	and    DWORD PTR [ebx+0x6f],eax
  404035:	mov    al,ds:0xdd26a10b
  40403a:	jmp    0x4040a1
  40403c:	mov    ah,dl
  40403e:	fidivr DWORD PTR [eax-0x3d2e4238]
  404044:	ror    esp,0xe7
  404047:	or     dl,BYTE PTR [ecx]
  404049:	sub    DWORD PTR [ebx],esi
  40404b:	test   al,0x25
  40404d:	inc    ebx
  40404e:	mov    ecx,ecx
  404050:	je     0x404056
  404052:	js     0x404092
  404054:	arpl   WORD PTR [eax+0x745fb930],cx
  40405a:	sbb    eax,0x4c8607c3
  40405f:	xchg   edx,eax
  404060:	fwait
  404061:	and    al,0x46
  404063:	mov    dh,dh
  404065:	inc    esi
  404066:	imul   ecx,esi,0x81eadb6e
  40406c:	and    esi,edx
  40406e:	test   al,0x4d
  404070:	mov    ecx,0xa8386ba2
  404075:	xchg   ecx,eax
  404076:	mov    dh,0x8d
  404078:	and    al,0x25
  40407a:	push   ebx
  40407b:	pop    ebp
  40407c:	push   0xffffffa8
  40407e:	pop    ebp
  40407f:	jb     0x4040dd
  404081:	addr16 in eax,dx
  404083:	sbb    edi,esp
  404085:	sub    BYTE PTR [ebx],dh
  404087:	(bad)  
  404089:	mov    ebp,0xf9889ffd
  40408e:	xchg   edi,eax
  40408f:	stos   DWORD PTR es:[edi],eax
  404090:	ds jo  0x4040dc
  404093:	out    0x6a,al
  404095:	ror    BYTE PTR [ecx-0x5],1
  404098:	outs   dx,BYTE PTR ds:[esi]
  404099:	mov    al,ds:0xa6941f95
  40409e:	pop    ds
  40409f:	jnp    0x404112
  4040a1:	das    
  4040a2:	xor    edx,ebp
  4040a4:	sbb    al,BYTE PTR [ebp-0x47]
  4040a7:	mov    ebx,0x78a4e7ad
  4040ac:	mov    ebp,0x230f801b
  4040b1:	fwait
  4040b2:	jne    0x404034
  4040b4:	pushf  
  4040b5:	inc    ecx
  4040b6:	rcr    BYTE PTR [eax+0x57fa0b33],cl
  4040bc:	xchg   BYTE PTR [edx+edx*8],bh
  4040bf:	adc    BYTE PTR [edi],dl
  4040c1:	not    ebp
  4040c3:	aam    0x54
  4040c5:	dec    ecx
  4040c6:	or     DWORD PTR [edi+0x7b],edi
  4040c9:	mov    bl,0xb7
  4040cb:	stc    
  4040cc:	mov    cl,0xeb
  4040ce:	push   edi
  4040cf:	adc    DWORD PTR [edi+esi*1+0x72],0x53bfa9b4
  4040d7:	aam    0xc
  4040d9:	repz push cs
  4040db:	ret    
  4040dc:	sub    bh,BYTE PTR [edx]
  4040de:	scas   eax,DWORD PTR es:[edi]
  4040df:	loopne 0x4040fc
  4040e1:	lods   eax,DWORD PTR ds:[esi]
  4040e2:	inc    edx
  4040e3:	out    0x75,al
  4040e5:	or     ah,ah
  4040e7:	int3   
  4040e8:	push   esi
  4040e9:	aam    0xfb
  4040eb:	jne    0x40413c
  4040ed:	inc    esi
  4040ee:	aas    
  4040ef:	popf   
  4040f0:	sub    dh,dh
  4040f2:	retf   
  4040f3:	retf   0x26c7
  4040f6:	mov    esi,ds
  4040f8:	inc    esp
  4040f9:	mov    ds:0x771dbb1e,al
  4040fe:	cdq    
  4040ff:	das    
  404100:	out    dx,al
  404101:	mov    cl,0x93
  404103:	addr16 stc 
  404105:	in     eax,dx
  404106:	in     eax,dx
  404107:	scas   eax,DWORD PTR es:[edi]
  404108:	jbe    0x40416d
  40410a:	(bad)  
  40410c:	push   ecx
  40410d:	jmp    0x863f:0xdde4ddcc
  404114:	leave  
  404115:	xchg   edx,eax
  404116:	xor    eax,0xab146bc6
  40411b:	inc    ebp
  40411c:	les    esi,FWORD PTR [esi+edx*1+0x71cc2162]
  404123:	mov    eax,0x3932c7f7
  404128:	sub    DWORD PTR [edi],edi
  40412a:	add    eax,0x151e3aae
  40412f:	ficomp DWORD PTR [edx]
  404131:	iret   
  404132:	pop    ebx
  404133:	sbb    DWORD PTR [ecx+0x5f],ebx
  404136:	shl    DWORD PTR [ecx+0x2c],1
  404139:	xor    dh,BYTE PTR [ebx]
  40413b:	sbb    edx,edx
  40413d:	mov    esp,0xb302280a
  404142:	das    
  404143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404144:	jns    0x4041c2
  404146:	shr    bl,1
  404148:	ret    0xbbc2
  40414b:	xchg   esp,eax
  40414c:	sbb    al,BYTE PTR [ebp+0x1c]
  40414f:	mov    esi,0xd94da252
  404154:	add    al,0xad
  404156:	dec    ecx
  404157:	jns    0x404102
  404159:	or     esi,0x50f152aa
  40415f:	ret    0xf3a7
  404162:	mov    cl,0xc8
  404164:	mov    esi,0x1a40986b
  404169:	test   BYTE PTR [ecx+0x787ee837],dl
  40416f:	or     eax,ebx
  404171:	xchg   BYTE PTR [ebp+esi*4-0x47],dh
  404175:	in     eax,0x1e
  404177:	nop
  404178:	jb     0x4041a0
  40417a:	arpl   WORD PTR [eax],di
  40417c:	add    bl,dl
  40417e:	jne    0x404188
  404180:	adc    esi,esi
  404182:	cli    
  404183:	cmp    DWORD PTR [edx-0x2f6fb98a],ebp
  404189:	ficom  DWORD PTR [eax+0x512bc3eb]
  40418f:	ds repz shr dl,0x4a
  404194:	pop    esi
  404195:	jo     0x404185
  404197:	shr    ebp,1
  404199:	mov    DWORD PTR [eax-0x7],edx
  40419c:	lea    ecx,[edi+esi*1-0x74]
  4041a0:	(bad)  
  4041a1:	repz repz pop eax
  4041a4:	fistp  WORD PTR [esi]
  4041a6:	out    0x1a,al
  4041a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a9:	imul   esp,DWORD PTR [edx-0x249568ea],0x4f
  4041b0:	push   ecx
  4041b1:	gs push ebp
  4041b3:	outs   dx,DWORD PTR ds:[esi]
  4041b4:	cwde   
  4041b5:	mov    DWORD PTR [edi],edx
  4041b7:	mov    cl,0xa3
  4041b9:	lahf   
  4041ba:	cmp    bh,ch
  4041bc:	test   al,0xf4
  4041be:	push   0x75cb9310
  4041c3:	sbb    DWORD PTR [edx+0x746a14ac],0xff44ba2a
  4041cd:	sub    ch,ah
  4041cf:	xchg   edi,eax
  4041d0:	jns    0x4041ab
  4041d2:	popa   
  4041d3:	scas   eax,DWORD PTR es:[edi]
  4041d4:	add    DWORD PTR [ecx+0x6ab333ff],ecx
  4041da:	leave  
  4041db:	xchg   BYTE PTR [esi],al
  4041dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041de:	lods   eax,DWORD PTR ds:[esi]
  4041df:	cwde   
  4041e0:	lock push cs
  4041e2:	jecxz  0x404215
  4041e4:	xor    DWORD PTR [esi+0x72],esi
  4041e7:	sti    
  4041e8:	stos   DWORD PTR es:[edi],eax
  4041e9:	jle    0x404192
  4041eb:	add    edx,DWORD PTR [edi]
  4041ed:	push   ebp
  4041ee:	loope  0x404203
  4041f0:	dec    ebp
  4041f1:	fwait
  4041f2:	or     BYTE PTR ss:[esi+0x65],bl
  4041f6:	imul   edx,DWORD PTR [ecx],0x6a4008bf
  4041fc:	pop    ds
  4041fd:	in     al,dx
  4041fe:	dec    ecx
  4041ff:	mov    esi,?
  404201:	xor    BYTE PTR [esi-0x1],cl
  404204:	imul   esi,ebp,0x58a7f48f
  40420a:	jle    0x404245
  40420c:	inc    esi
  40420d:	scas   al,BYTE PTR es:[edi]
  40420e:	inc    esi
  40420f:	ret    
  404210:	inc    edi
  404211:	jmp    0x92db0a0d
  404216:	jb     0x4041a4
  404218:	add    BYTE PTR [esi+0x47f46b46],ch
  40421e:	mov    ds:0x1dc4a92d,al
  404223:	iret   
  404224:	nop
  404225:	mov    dh,0x9d
  404227:	push   esi
  404228:	shl    BYTE PTR [edx+0x40925c4f],1
  40422e:	shl    BYTE PTR ds:0x5940799,0xa3
  404235:	sub    cl,ch
  404237:	xchg   esi,eax
  404238:	and    edi,DWORD PTR [edx+0x3a71598b]
  40423e:	pop    esi
  40423f:	les    esp,FWORD PTR [ecx]
  404241:	cmp    eax,0x9d7fa282
  404246:	jmp    0xa651c121
  40424b:	dec    eax
  40424c:	(bad)  
  40424d:	xor    DWORD PTR [ebp-0x1e6b3211],edx
  404253:	and    al,0x67
  404255:	mov    ecx,ecx
  404257:	test   edi,esi
  404259:	fiadd  WORD PTR [edi+0x30afcb66]
  40425f:	dec    ebx
  404260:	mov    eax,ds:0x8d42c077
  404265:	fwait
  404266:	push   ebp
  404267:	les    edi,FWORD PTR [edx-0x69c73dc6]
  40426d:	lea    ebp,[ebx]
  40426f:	imul   ebp,DWORD PTR [esi-0xf645e7d],0x7489da4
  404279:	dec    ebx
  40427a:	mov    ds:0x9b86de41,al
  40427f:	inc    esi
  404280:	sub    al,0xb9
  404282:	inc    ebp
  404283:	push   ebx
  404284:	fisubr DWORD PTR [esi]
  404286:	or     al,0x4e
  404288:	cmp    eax,0x52bea521
  40428d:	hlt    
  40428e:	retf   0x4d
  404291:	imul   ebp,DWORD PTR [ebx-0x1cc4c22f],0xffffffb4
  404298:	scas   eax,DWORD PTR es:[edi]
  404299:	lods   al,BYTE PTR ds:[esi]
  40429a:	or     eax,0xb66fd614
  40429f:	xchg   ebx,eax
  4042a0:	xchg   ecx,eax
  4042a1:	add    BYTE PTR [edx],dl
  4042a3:	push   eax
  4042a4:	lods   eax,DWORD PTR ds:[esi]
  4042a5:	sahf   
  4042a6:	lds    esp,FWORD PTR [eax+0x4d]
  4042a9:	mov    eax,0xa8dc4a14
  4042ae:	test   BYTE PTR [ebx],dh
  4042b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b1:	fisttp DWORD PTR [ebx-0x2]
  4042b4:	mov    bh,0x8e
  4042b6:	add    cl,bl
  4042b8:	and    BYTE PTR [edx-0x4b],bl
  4042bb:	inc    ebx
  4042bc:	ss call 0xbe52:0xe308263c
  4042c4:	mov    ds:0x6225ffa1,eax
  4042c9:	pop    esi
  4042ca:	pmulhw mm0,QWORD PTR [ebx-0x21c877b]
  4042d1:	pop    esi
  4042d2:	xchg   DWORD PTR [edi-0x7824597f],edx
  4042d8:	fwait
  4042d9:	dec    esi
  4042da:	push   esp
  4042db:	cmp    esp,ecx
  4042dd:	pop    esi
  4042de:	xchg   ah,ch
  4042e0:	mov    bl,0x1c
  4042e2:	(bad)  
  4042e3:	das    
  4042e4:	loop   0x404352
  4042e6:	sub    al,0xb1
  4042e8:	dec    esi
  4042e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ea:	mov    edx,0xf66e1375
  4042ef:	fisub  WORD PTR [eax]
  4042f1:	mov    ebp,fs
  4042f3:	mov    esp,0x7b09fc48
  4042f8:	out    dx,al
  4042f9:	test   BYTE PTR [esp+eax*8-0x37],0x2c
  4042fe:	mov    BYTE PTR [ebp+0x7a],ah
  404301:	pushf  
  404302:	xlat   BYTE PTR ds:[ebx]
  404303:	sbb    eax,0x50454c51
  404308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404309:	repnz sar DWORD PTR [edx+eiz*2-0x79],0x2f
  40430f:	int    0x92
  404311:	add    DWORD PTR [ecx-0x1e20d838],ecx
  404317:	push   ecx
  404318:	out    dx,al
  404319:	ror    BYTE PTR [eax+edi*2],0x7d
  40431d:	xlat   BYTE PTR ds:[ebx]
  40431e:	or     ch,BYTE PTR [edi]
  404320:	inc    edx
  404321:	stc    
  404322:	leave  
  404323:	xchg   DWORD PTR [esi+0x35],eax
  404326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404327:	loopne 0x40431f
  404329:	int3   
  40432a:	nop
  40432b:	loopne 0x4042eb
  40432d:	dec    edx
  40432e:	sub    bh,BYTE PTR [eax-0x12c37018]
  404334:	mov    esp,0x54888502
  404339:	stos   BYTE PTR es:[edi],al
  40433a:	or     DWORD PTR [eax+0x10d1f94a],edi
  404340:	popa   
  404341:	aad    0xd1
  404343:	sbb    ch,BYTE PTR ds:0x5592b4bf
  404349:	xchg   esi,eax
  40434a:	mov    eax,ds:0x82f55cd2
  40434f:	cmc    
  404350:	push   esi
  404351:	shl    DWORD PTR [ebx],1
  404353:	xchg   BYTE PTR [ebx+0x3e],al
  404356:	dec    ebx
  404357:	or     eax,0xd3183636
  40435c:	xchg   ebp,eax
  40435d:	push   0xab1832e6
  404362:	sub    al,0xfb
  404364:	aad    0xc9
  404366:	jae    0x404340
  404368:	xchg   BYTE PTR [ebx+0x423fede2],bl
  40436e:	or     al,0x46
  404370:	test   ebp,edi
  404372:	or     DWORD PTR [eax+0x2b5bbd03],0x96165890
  40437c:	push   esi
  40437d:	jp     0x4043fb
  40437f:	mov    edi,0xb86d8ebf
  404384:	jbe    0x4043b0
  404386:	shl    DWORD PTR [ebx],1
  404388:	in     al,0xe2
  40438a:	cmp    eax,0x2677cd0d
  40438f:	imul   ebp,edi,0xffffffb0
  404392:	gs xor eax,0x3baaa65
  404398:	daa    
  404399:	repnz enter 0x8c72,0x92
  40439e:	bound  ebx,QWORD PTR [ebp+edx*4-0x1e74c634]
  4043a5:	adc    al,0x4f
  4043a7:	int3   
  4043a8:	mov    al,0x1c
  4043aa:	clc    
  4043ab:	dec    edx
  4043ac:	add    DWORD PTR [ecx+0x8],ebp
  4043af:	cmp    esp,DWORD PTR [edi-0x1df1fbfc]
  4043b5:	das    
  4043b6:	push   ecx
  4043b7:	jns    0x404350
  4043b9:	mov    eax,ds:0x9b6ec3a3
  4043be:	add    BYTE PTR [esi-0x76],cl
  4043c1:	sub    BYTE PTR [ebx+0x67],bh
  4043c4:	fsubr  DWORD PTR [edi]
  4043c6:	fwait
  4043c7:	in     al,dx
  4043c8:	sbb    cl,BYTE PTR [edx+0x1fb0fdc2]
  4043ce:	daa    
  4043cf:	mov    ebx,0x3251da20
  4043d4:	nop
  4043d5:	mov    eax,0xc5619124
  4043da:	data16 mov al,0xf0
  4043dd:	xchg   ebp,eax
  4043de:	xchg   edi,eax
  4043df:	xchg   ebp,eax
  4043e0:	dec    esp
  4043e1:	adc    al,0x11
  4043e3:	jne    0x404392
  4043e5:	sti    
  4043e6:	es push ss
  4043e8:	or     dl,BYTE PTR [eax+eax*2-0x69]
  4043ec:	ficom  WORD PTR [esi-0x1b0a028f]
  4043f2:	sbb    ah,BYTE PTR [ebp+0x22]
  4043f5:	les    edi,FWORD PTR [ecx-0x648fac89]
  4043fb:	jae    0x4043f7
  4043fd:	mul    BYTE PTR [ecx]
  4043ff:	mov    eax,0xc33799f5
  404404:	adc    DWORD PTR [esp+ecx*8+0x51],esp
  404408:	xor    ebx,DWORD PTR [ebx+0x5a1c7639]
  40440e:	or     eax,0xffc07756
  404413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404414:	add    bl,dl
  404416:	pop    esi
  404417:	push   esp
  404418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404419:	call   0x67b916b2
  40441e:	ret    0xd831
  404421:	pop    ss
  404422:	dec    edx
  404423:	(bad)  [ebx-0x20]
  404426:	cld    
  404427:	dec    esp
  404428:	add    al,BYTE PTR ds:0x2b425e88
  40442e:	cmp    al,0xa9
  404430:	repz (bad) 
  404432:	pop    esp
  404433:	mov    dh,dh
  404435:	fwait
  404436:	and    BYTE PTR [esi+0x1aee4ee5],0xae
  40443d:	jb     0x404420
  40443f:	and    dh,BYTE PTR [eax]
  404441:	pop    es
  404442:	ja     0x404496
  404444:	test   BYTE PTR [eax+0x7903c8d9],bh
  40444a:	push   ebp
  40444b:	cld    
  40444c:	fs stos BYTE PTR es:[edi],al
  40444e:	bound  edi,QWORD PTR [esi+0x7f]
  404451:	xchg   edi,eax
  404452:	fldenv [ebp+0x35c46307]
  404458:	fidiv  WORD PTR [ebp+0x5fffcb5]
  40445e:	mov    ebx,0x94d8556d
  404463:	xchg   ecx,eax
  404464:	and    dh,BYTE PTR [eax-0x32]
  404467:	(bad)  
  404468:	mov    edi,0x64335ed0
  40446d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40446e:	xchg   esi,eax
  40446f:	or     al,0x4c
  404471:	loop   0x40440e
  404473:	mov    BYTE PTR [ebx+0x56dffc25],dh
  404479:	pop    esp
  40447a:	arpl   WORD PTR [ecx+0x3],di
  40447d:	int3   
  40447e:	(bad)  
  40447f:	cmp    edi,DWORD PTR [eax+0x5af3ad21]
  404485:	pop    eax
  404486:	or     DWORD PTR [ebx+ebp*1],esi
  404489:	mov    edi,0xeb782055
  40448e:	fcomi  st,st(6)
  404490:	inc    esi
  404491:	jecxz  0x404472
  404493:	aas    
  404494:	jge    0x404474
  404496:	xchg   esp,eax
  404497:	push   es
  404498:	cdq    
  404499:	sbb    dl,BYTE PTR [edx]
  40449b:	(bad)  
  40449c:	aam    0xd
  40449e:	add    ebp,esp
  4044a0:	cdq    
  4044a1:	xor    ecx,DWORD PTR [edi-0x8]
  4044a4:	jge    0x404502
  4044a6:	xchg   ecx,eax
  4044a7:	push   esp
  4044a8:	or     ebx,DWORD PTR [ebp-0x9]
  4044ab:	dec    edi
  4044ac:	dec    esi
  4044ad:	rdmsr  
  4044af:	push   0xe6f84be5
  4044b4:	test   DWORD PTR [eax+0x21],edi
  4044b7:	daa    
  4044b8:	scas   al,BYTE PTR es:[edi]
  4044b9:	pusha  
  4044ba:	inc    edi
  4044bb:	jbe    0x4044cf
  4044bd:	jg     0x40450e
  4044bf:	in     eax,0xc5
  4044c1:	pop    esp
  4044c2:	data16 ja 0x4044fb
  4044c5:	or     BYTE PTR [ebx+0x351ae58e],dl
  4044cb:	inc    esi
  4044cc:	test   BYTE PTR [ebx-0x56],0xba
  4044d0:	inc    ecx
  4044d1:	mov    esi,DWORD PTR ds:0x21aee698
  4044d7:	adc    eax,0x1601e0d8
  4044dc:	add    al,0x2a
  4044de:	rol    BYTE PTR [ebp-0x77],cl
  4044e1:	stos   DWORD PTR es:[edi],eax
  4044e2:	not    BYTE PTR [eax-0x127a8e78]
  4044e8:	das    
  4044e9:	gs or  ah,dl
  4044ec:	fmul   st,st(0)
  4044ee:	test   DWORD PTR [esi-0x57],esi
  4044f1:	adc    eax,0x44fcbb03
  4044f6:	repnz gs adc eax,0xbedb6df0
  4044fd:	pop    edi
  4044fe:	jmp    0x8584a80
  404503:	pop    ds
  404504:	call   0x5c30:0x32924b15
  40450b:	sbb    DWORD PTR [esi],ecx
  40450d:	dec    ecx
  40450e:	push   0x10
  404510:	test   eax,0x87525ec3
  404515:	icebp  
  404516:	jbe    0x4044f0
  404518:	in     al,0xfb
  40451a:	cld    
  40451b:	add    ch,BYTE PTR [edx-0x30]
  40451e:	js     0x404547
  404520:	inc    edi
  404521:	ja     0x4044c8
  404523:	ror    DWORD PTR [edx-0x1e44e459],0xbc
  40452a:	and    DWORD PTR [edi],ecx
  40452c:	sub    ah,BYTE PTR [edi]
  40452e:	and    al,0xeb
  404530:	ret    
  404531:	js     0x40455d
  404533:	rcr    eax,0x44
  404536:	or     dl,cl
  404538:	and    al,0x50
  40453a:	dec    ecx
  40453b:	push   ss
  40453c:	les    ecx,FWORD PTR [edx+eiz*1]
  40453f:	pushw  es
  404541:	inc    ebp
  404542:	mov    al,0x39
  404544:	pop    ebp
  404545:	outs   dx,BYTE PTR ds:[esi]
  404546:	out    0x42,al
  404548:	sub    esp,DWORD PTR [edi+ebx*4]
  40454b:	stos   BYTE PTR es:[edi],al
  40454c:	mov    esi,0x7a5be1a5
  404551:	sbb    DWORD PTR [esi+ecx*1],esp
  404554:	jmp    0x4045c7
  404556:	xor    edx,DWORD PTR [edx-0x6e4d2a6]
  40455c:	in     al,0xbb
  40455e:	test   DWORD PTR [ebp-0x5d],edi
  404561:	inc    edx
  404562:	sub    BYTE PTR [edx],dl
  404564:	stos   BYTE PTR es:[edi],al
  404565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404566:	fdivp  st(4),st
  404568:	hlt    
  404569:	out    0x7f,eax
  40456b:	mov    WORD PTR [ecx-0x7e1b8e3a],ss
  404571:	xor    al,ch
  404573:	dec    esp
  404574:	loop   0x404574
  404576:	cmp    BYTE PTR [eax+0x1d],cl
  404579:	mov    ecx,0x7d27a1a0
  40457e:	adc    eax,0xcb19a427
  404583:	fild   QWORD PTR [edi+0x25]
  404586:	xor    al,0x6d
  404588:	mov    al,ds:0x23b647f2
  40458d:	jp     0x404590
  40458f:	push   cs
  404590:	adc    al,0x29
  404592:	shl    DWORD PTR [ecx-0x17],cl
  404595:	fdivr  DWORD PTR [ecx+esi*2+0x631a1c7a]
  40459c:	xor    al,0x82
  40459e:	sahf   
  40459f:	clc    
  4045a0:	sub    edi,DWORD PTR [esi-0x1dc45183]
  4045a6:	fbld   TBYTE PTR [esi+0x242f4bad]
  4045ac:	pop    ebx
  4045ad:	aam    0x1b
  4045af:	mov    cl,0x58
  4045b1:	and    eax,0x9e8834a4
  4045b6:	cdq    
  4045b7:	cmp    edx,DWORD PTR [ecx+0x79]
  4045ba:	lods   al,BYTE PTR ds:[esi]
  4045bb:	dec    ecx
  4045bc:	adc    eax,0x233374e8
  4045c1:	test   BYTE PTR [ebx-0x2],dl
  4045c4:	lods   al,BYTE PTR ds:[esi]
  4045c5:	jne    0x404608
  4045c7:	addr16 mov edi,0x180cfdac
  4045cd:	jnp    0x4045f9
  4045cf:	jmp    0x404605
  4045d1:	and    al,0xe
  4045d3:	dec    esp
  4045d4:	or     edi,DWORD PTR [ebx+0xff98812]
  4045da:	adc    esi,DWORD PTR [eax+0x5f]
  4045dd:	xchg   cl,al
  4045df:	test   DWORD PTR [edi-0x1638e3db],ebx
  4045e5:	es int 0x39
  4045e8:	mov    ebp,DWORD PTR [ebx+0x21b57ea7]
  4045ee:	cmp    al,0xfb
  4045f0:	push   cs
  4045f1:	or     al,0x55
  4045f3:	les    edx,FWORD PTR [esi]
  4045f5:	test   dh,dh
  4045f7:	inc    edi
  4045f8:	sub    al,0xc6
  4045fa:	xor    eax,0x2025f4ca
  4045ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404600:	and    eax,0x89b93f2f
  404605:	in     eax,0xa6
  404607:	cmp    eax,0xecb1e6c9
  40460c:	fiadd  WORD PTR [edi-0x24]
  40460f:	mov    edx,0x58c7d6f7
  404614:	jl     0x40460c
  404616:	mov    ch,BYTE PTR [ebp-0x515264a2]
  40461c:	add    ebx,edx
  40461e:	stc    
  40461f:	into   
  404620:	jo     0x404645
  404622:	and    al,bh
  404624:	(bad)  
  404625:	and    dl,BYTE PTR [esi+eiz*8]
  404628:	les    esi,FWORD PTR [esi+0x601f7b4b]
  40462e:	and    ebp,esp
  404630:	(bad)  
  404631:	xor    al,0xe7
  404633:	fdivr  QWORD PTR [esi]
  404635:	xchg   ecx,eax
  404636:	cmp    eax,esi
  404638:	sahf   
  404639:	out    0x31,eax
  40463b:	fmulp  st(6),st
  40463d:	jo     0x4046a9
  40463f:	sbb    DWORD PTR [ecx+0xe],eax
  404642:	dec    ebx
  404643:	lds    edx,FWORD PTR [edi+0x447f6b71]
  404649:	add    DWORD PTR [esi+0x41],ebp
  40464c:	push   es
  40464d:	retf   0xdd76
  404650:	into   
  404651:	inc    eax
  404652:	mov    ah,0xfc
  404654:	test   ebx,ebp
  404656:	inc    edi
  404657:	ror    BYTE PTR [esp+eiz*4],1
  40465a:	pushf  
  40465b:	jo     0x40466e
  40465d:	mov    eax,ds:0xdf139aa4
  404662:	inc    ecx
  404663:	mov    esp,0x6ef7a923
  404668:	inc    edx
  404669:	outs   dx,BYTE PTR ds:[esi]
  40466a:	jmp    0xe767:0x51ff8267
  404671:	jae    0x404670
  404673:	add    DWORD PTR [ebx],ecx
  404675:	or     DWORD PTR [ecx-0x5d767321],ebx
  40467b:	(bad)  
  40467c:	pop    ebp
  40467d:	push   edi
  40467e:	ss jmp 0xdce666d8
  404684:	adc    cl,al
  404686:	inc    ecx
  404687:	jno    0x404669
  404689:	jnp    0x4046d4
  40468b:	sub    BYTE PTR [esi-0x13b9451],dl
  404691:	adc    eax,0xd9e495a5
  404696:	push   ss
  404697:	stos   BYTE PTR es:[edi],al
  404698:	cdq    
  404699:	fcomp  QWORD PTR [ebp+0x1f439546]
  40469f:	mov    al,ds:0x2150c6ee
  4046a4:	imul   ch
  4046a6:	jle    0x404693
  4046a8:	lods   al,BYTE PTR ds:[esi]
  4046a9:	xor    eax,0xe9451890
  4046ae:	pop    ecx
  4046af:	push   0x94a9123a
  4046b4:	xor    al,0xe6
  4046b6:	xor    DWORD PTR [ecx],esp
  4046b8:	sar    BYTE PTR [edi],0x6c
  4046bb:	dec    edx
  4046bc:	punpcklbw mm0,DWORD PTR [ebp-0x3b59a32b]
  4046c3:	pop    esi
  4046c4:	aaa    
  4046c5:	int    0x71
  4046c7:	xchg   ecx,eax
  4046c8:	sub    bh,0x36
  4046cb:	out    0x7b,al
  4046cd:	stos   DWORD PTR es:[edi],eax
  4046ce:	mov    edx,0x2fddf4e7
  4046d3:	push   edi
  4046d4:	je     0x4046c1
  4046d6:	loope  0x40472b
  4046d8:	add    eax,DWORD PTR [ebp-0x12716387]
  4046de:	les    ebp,FWORD PTR [eax]
  4046e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e1:	sub    BYTE PTR [ebx+0x4e],ah
  4046e4:	mov    ebx,0x1ebf310c
  4046e9:	gs mov ebp,0xb442fd30
  4046ef:	cmp    dl,BYTE PTR [edx+0x7e]
  4046f2:	mov    eax,ds:0xa98ae0e7
  4046f7:	mov    ah,0x88
  4046f9:	cli    
  4046fa:	pusha  
  4046fb:	aaa    
  4046fc:	(bad)  
  4046fe:	mov    dh,0xce
  404700:	push   ebx
  404701:	xor    ecx,DWORD PTR [edx+ecx*8+0xb]
  404705:	cmp    BYTE PTR [ecx-0x1],al
  404708:	adc    ch,BYTE PTR [ebx+0x4f]
  40470b:	sbb    al,0x53
  40470d:	jb     0x40476d
  40470f:	retf   0x6922
  404712:	outs   dx,DWORD PTR ds:[esi]
  404713:	adc    BYTE PTR ds:0x92432300,bl
  404719:	mov    eax,0x96efe1bd
  40471e:	push   esp
  40471f:	iret   
  404720:	and    BYTE PTR [edx+eiz*1+0x49],0xe0
  404725:	daa    
  404726:	cmp    DWORD PTR [edx+0x33],ecx
  404729:	sub    al,0x5f
  40472b:	test   DWORD PTR [edi],edx
  40472d:	push   eax
  40472e:	shr    DWORD PTR [ebx+edi*1+0x2ec8bb4d],1
  404735:	cmp    esi,DWORD PTR [ebp+edi*8+0x6b]
  404739:	aas    
  40473a:	test   eax,0xfb524771
  40473f:	xor    bl,bh
  404741:	pop    ebx
  404742:	cdq    
  404743:	xor    esp,edx
  404745:	retf   
  404746:	push   0xffffff94
  404748:	retf   
  404749:	out    0xe0,eax
  40474b:	cmp    eax,0xdb023343
  404750:	xor    DWORD PTR [ebp+0x3d],ebp
  404753:	ret    0x5cec
  404756:	call   0xf2a3:0x52306d70
  40475d:	ja     0x4047bb
  40475f:	cld    
  404760:	add    dl,ch
  404762:	mov    cl,0x93
  404764:	lahf   
  404765:	adc    al,cl
  404767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404768:	scas   eax,DWORD PTR es:[edi]
  404769:	popa   
  40476a:	add    BYTE PTR [ebx+0x6e27aea3],ch
  404770:	jle    0x40477b
  404772:	cmp    bl,BYTE PTR [ebp+0x504e4f1c]
  404778:	pop    ecx
  404779:	wrmsr  
  40477b:	rcr    BYTE PTR [eax+esi*2-0x50328ea7],1
  404782:	mov    al,0xa4
  404784:	iret   
  404785:	xchg   ecx,eax
  404786:	mov    ebx,0x231a0950
  40478b:	xchg   ebx,eax
  40478c:	adc    BYTE PTR [eax],dh
  40478e:	mov    ds:0x519ba13f,eax
  404793:	mov    ds:0x3092094e,eax
  404798:	add    DWORD PTR [edi],eax
  40479a:	xchg   DWORD PTR [edi+0x69],esi
  40479d:	imul   ebx,DWORD PTR [ecx-0x14],0xe86e5989
  4047a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a5:	test   DWORD PTR [esi+0x23],esp
  4047a8:	adc    BYTE PTR [esi+ecx*4+0x1f],bh
  4047ac:	imul   ebp,DWORD PTR [edi+0x36],0x4a173f45
  4047b3:	scas   eax,DWORD PTR es:[edi]
  4047b4:	repz call 0x1c82:0x5e6936b7
  4047bc:	adc    eax,DWORD PTR [edx]
  4047be:	pop    es
  4047bf:	xchg   edx,eax
  4047c0:	sbb    eax,0x3f54405c
  4047c5:	in     eax,dx
  4047c6:	repz stc 
  4047c8:	(bad)  
  4047cc:	and    eax,0x825da7b8
  4047d1:	mov    ds:0xac283236,al
  4047d6:	in     eax,dx
  4047d7:	sub    bl,BYTE PTR [edx+0x12]
  4047da:	mov    ds:0x939882a1,eax
  4047df:	xor    DWORD PTR [esi],esi
  4047e1:	test   BYTE PTR [esi],bh
  4047e3:	icebp  
  4047e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e5:	jns    0x40477e
  4047e7:	xchg   esp,eax
  4047e8:	cmp    esi,DWORD PTR [edx+0x36b27a88]
  4047ee:	(bad)  
  4047f0:	fwait
  4047f1:	xchg   edi,eax
  4047f2:	dec    edx
  4047f3:	jb     0x404854
  4047f5:	sub    al,0x2f
  4047f7:	or     eax,0x35801008
  4047fc:	outs   dx,DWORD PTR ds:[esi]
  4047fd:	mov    WORD PTR [esi-0x62a508b6],?
  404803:	inc    esi
  404804:	in     eax,dx
  404805:	cmp    bh,ah
  404807:	pop    ds
  404808:	xchg   esp,eax
  404809:	jp     0x404868
  40480b:	pop    ebp
  40480c:	repnz enter 0xdd15,0x84
  404811:	pusha  
  404812:	push   ds
  404813:	jae    0x404855
  404815:	push   ds
  404816:	out    dx,al
  404817:	adc    DWORD PTR [esi+esi*1+0x0],eax
  40481b:	jl     0x40483e
  40481d:	push   edi
  40481e:	sbb    BYTE PTR [esi-0x50b2003d],dh
  404824:	pop    esp
  404825:	rcl    BYTE PTR [esi],1
  404827:	push   eax
  404828:	fcompp 
  40482a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40482b:	pusha  
  40482c:	add    al,ch
  40482e:	dec    ebx
  40482f:	rcl    eax,1
  404831:	push   0x8a0b78e2
  404836:	and    al,0xb2
  404838:	add    BYTE PTR ds:0x6e75e7fe,cl
  40483e:	xor    BYTE PTR [edi+0x1c],cl
  404841:	ins    BYTE PTR es:[edi],dx
  404842:	fld    DWORD PTR [edi-0x67]
  404845:	xchg   BYTE PTR ds:0x6f77cf50,ch
  40484b:	shl    DWORD PTR [ebx],1
  40484d:	lea    ebx,[ebx]
  40484f:	mov    ebx,ecx
  404851:	sbb    al,0x66
  404853:	idiv   DWORD PTR [edi+ecx*8+0x2a]
  404857:	xor    BYTE PTR [edx-0x62],ah
  40485a:	mov    al,0x3a
  40485c:	(bad)  
  40485d:	jae    0x40489e
  40485f:	sub    eax,0x2fbd35d3
  404864:	frstorw [ecx-0x321875d6]
  40486b:	rcr    ebp,0xff
  40486e:	ret    0x2aa2
  404871:	imul   esi,DWORD PTR [edx],0xe7c9d041
  404877:	ds xchg ebx,eax
  404879:	dec    ebp
  40487a:	sub    dl,dh
  40487c:	xchg   edi,eax
  40487d:	sub    DWORD PTR [edi],0xd2cefe0a
  404883:	mov    WORD PTR [esi],ds
  404885:	ret    0xd672
  404888:	dec    edx
  404889:	xor    al,0x98
  40488b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40488c:	adc    DWORD PTR [edx-0x42],edi
  40488f:	fimul  DWORD PTR [ebx+eax*8+0x382eb5]
  404896:	test   al,0x5a
  404898:	imul   esi,DWORD PTR [ecx-0x72bdfd29],0x72
  40489f:	cmp    cl,BYTE PTR [esi]
  4048a1:	mov    ah,0xa5
  4048a3:	xchg   ebp,eax
  4048a4:	ss hlt 
  4048a6:	call   DWORD PTR [edx+0x53]
  4048a9:	rol    BYTE PTR [edx-0x21],1
  4048ac:	jnp    0x4048e0
  4048ae:	fstp   TBYTE PTR [ecx-0x62df2e3b]
  4048b4:	fwait
  4048b5:	jp     0x404868
  4048b7:	std    
  4048b8:	adc    DWORD PTR [edi-0x63],esp
  4048bb:	fadd   st,st(1)
  4048bd:	add    bh,bl
  4048bf:	fbstp  TBYTE PTR [esi+0x2b]
  4048c2:	ret    
  4048c3:	mov    WORD PTR [esi],gs
  4048c5:	mov    esi,0x2c690c64
  4048ca:	sahf   
  4048cb:	adc    DWORD PTR [ecx-0x30],edi
  4048ce:	pop    ebx
  4048cf:	dec    esi
  4048d0:	fcom   DWORD PTR [esi]
  4048d2:	mov    WORD PTR [ecx+0x6b],ss
  4048d5:	arpl   WORD PTR [eax-0x36],bp
  4048d8:	cld    
  4048d9:	jmp    0xe3a48146
  4048de:	pop    edi
  4048df:	xor    DWORD PTR [esi-0x26],esp
  4048e2:	lods   eax,DWORD PTR ds:[esi]
  4048e3:	dec    ebx
  4048e4:	pusha  
  4048e5:	cdq    
  4048e6:	ins    DWORD PTR es:[edi],dx
  4048e7:	sahf   
  4048e8:	mov    al,0x95
  4048ea:	gs mov ch,0xe6
  4048ed:	out    0xe6,al
  4048ef:	sub    bl,bh
  4048f1:	xchg   ebx,eax
  4048f2:	xor    esi,DWORD PTR [edx+0x56]
  4048f5:	fwait
  4048f6:	inc    edx
  4048f7:	dec    esi
  4048f8:	cld    
  4048f9:	inc    eax
  4048fa:	jns    0x404936
  4048fc:	call   0x80eb:0x6e3cbedc
  404903:	ss or  al,0xe7
  404906:	dec    ecx
  404907:	add    bl,BYTE PTR [ebx-0x2a98cf30]
  40490d:	mov    DWORD PTR [ebp+0x6c],ecx
  404910:	and    esp,DWORD PTR [ecx+0x30]
  404913:	cmp    al,0xbc
  404915:	inc    esp
  404916:	adc    bl,BYTE PTR [eax+0x78399a0d]
  40491c:	inc    ebx
  40491d:	sbb    esp,DWORD PTR [edi-0x1b]
  404920:	and    al,0xe2
  404922:	add    DWORD PTR [esi-0x53b9c962],0x2fbfa0fb
  40492c:	inc    ebp
  40492d:	or     DWORD PTR [eax],edi
  40492f:	nop
  404930:	push   edi
  404931:	lods   al,BYTE PTR ds:[esi]
  404932:	jae    0x40492b
  404934:	add    dl,bl
  404936:	ret    
  404937:	fwait
  404938:	mov    ds:0xf3ca925d,eax
  40493d:	inc    eax
  40493e:	loopne 0x40499a
  404940:	imul   ebp,DWORD PTR [edx-0x1d],0x190961cd
  404947:	por    mm1,QWORD PTR [eax]
  40494a:	pop    ebx
  40494b:	fdivp  st(0),st
  40494d:	push   cs
  40494e:	xchg   DWORD PTR [ecx+0x6b315801],ebx
  404954:	push   ebp
  404955:	ja     0x4048d9
  404957:	call   0x6760:0x4eee8101
  40495e:	inc    ebx
  40495f:	ins    DWORD PTR es:[edi],dx
  404960:	outs   dx,BYTE PTR ds:[esi]
  404961:	lahf   
  404962:	mov    al,cs:0xf873bc4e
  404968:	pop    ecx
  404969:	xor    DWORD PTR [edx+0x970f92],ebp
  40496f:	pushf  
  404970:	cmp    al,0x42
  404972:	loop   0x40490c
  404974:	test   BYTE PTR [ecx],dl
  404976:	shl    BYTE PTR [eax+0x53],cl
  404979:	fst    QWORD PTR [ecx-0x31]
  40497d:	ja     0x4049f0
  40497f:	xlat   BYTE PTR ds:[ebx]
  404980:	popf   
  404981:	outs   dx,DWORD PTR ds:[esi]
  404982:	fs inc esi
  404984:	inc    eax
  404985:	test   eax,0xeac31576
  40498a:	jecxz  0x40495b
  40498c:	add    eax,0xdead03c4
  404991:	xor    DWORD PTR [edx],edx
  404993:	pop    ecx
  404994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404995:	mov    bl,0xa3
  404997:	inc    esp
  404998:	dec    ebx
  404999:	sbb    DWORD PTR [ebx+0x3601f8ac],edx
  40499f:	test   al,0x6b
  4049a1:	pop    DWORD PTR [edx-0x13]
  4049a4:	and    BYTE PTR [edx-0x38],0x7
  4049a8:	test   al,bl
  4049aa:	pop    ecx
  4049ab:	loop   0x404964
  4049ad:	daa    
  4049ae:	out    0xfc,al
  4049b0:	cmp    esi,DWORD PTR [edi+0x244cfa75]
  4049b6:	inc    ebp
  4049b7:	add    bh,BYTE PTR [edx+0x502a2d53]
  4049bd:	sbb    al,0xff
  4049bf:	loope  0x4049ed
  4049c1:	adc    dl,BYTE PTR [ebx]
  4049c3:	das    
  4049c4:	int3   
  4049c5:	or     bh,al
  4049c7:	jmp    0x63ea8533
  4049cc:	jnp    0x404951
  4049ce:	sbb    al,0xd0
  4049d0:	in     eax,0x4e
  4049d2:	xchg   edi,eax
  4049d3:	aaa    
  4049d4:	dec    ebp
  4049d5:	jno    0x404a4e
  4049d7:	(bad)  
  4049d8:	cld    
  4049d9:	daa    
  4049da:	(bad)  
  4049dc:	push   esi
  4049dd:	cmp    BYTE PTR [esi+0x1f],bh
  4049e0:	hlt    
  4049e1:	inc    ebx
  4049e2:	sbb    al,0x99
  4049e4:	sub    BYTE PTR [ebp+0x77],bh
  4049e7:	loop   0x4049ee
  4049e9:	aas    
  4049ea:	bound  esi,QWORD PTR [ebx]
  4049ec:	jne    0x4049e4
  4049ee:	cdq    
  4049ef:	add    ecx,edi
  4049f1:	push   edi
  4049f2:	daa    
  4049f3:	ret    0x9fa0
  4049f6:	mov    dh,0xa6
  4049f8:	fstp   QWORD PTR [esi-0x24b09750]
  4049fe:	mov    ah,0x40
  404a00:	stos   DWORD PTR es:[edi],eax
  404a01:	adc    al,0xc0
  404a03:	or     DWORD PTR [ecx+0x47bde0a2],0x57
  404a0a:	fist   DWORD PTR [edx-0x1761cf9f]
  404a10:	mov    eax,0xa5e6ce8f
  404a15:	in     al,0xe1
  404a17:	jb     0x404a1f
  404a19:	xchg   ebx,eax
  404a1a:	std    
  404a1b:	jle    0x404a88
  404a1d:	mov    dh,BYTE PTR ss:[edi]
  404a20:	pop    esi
  404a21:	inc    BYTE PTR [edi+eax*2+0x69f1cdc2]
  404a28:	inc    ebx
  404a29:	push   0x823c581a
  404a2e:	add    dh,BYTE PTR [edx]
  404a30:	pop    ecx
  404a31:	inc    esi
  404a32:	push   eax
  404a33:	jae    0x404a9b
  404a35:	shl    ebp,cl
  404a37:	cmp    al,0xd5
  404a39:	push   ecx
  404a3a:	shl    DWORD PTR [ecx+eiz*4],1
  404a3d:	add    BYTE PTR [ecx-0x5b8c3a35],cl
  404a43:	xor    ebp,DWORD PTR [edx+0xc9cd72f]
  404a49:	fwait
  404a4a:	adc    esi,esp
  404a4c:	jle    0x404a9d
  404a4e:	cli    
  404a4f:	mov    edi,0xbd7be841
  404a54:	sub    dh,dl
  404a56:	xchg   edi,eax
  404a57:	int    0xe
  404a59:	aad    0x5b
  404a5b:	out    0x19,eax
  404a5d:	cmp    al,0x90
  404a5f:	test   al,0xc
  404a61:	cmp    al,0x19
  404a63:	int    0xd6
  404a65:	mov    al,BYTE PTR [ebp+0x30]
  404a68:	scas   eax,DWORD PTR es:[edi]
  404a69:	sub    ebp,ebp
  404a6b:	sbb    BYTE PTR [edi+0x40],0xe5
  404a6f:	inc    ebx
  404a70:	inc    ebx
  404a71:	enter  0xa37c,0xcb
  404a75:	and    al,bh
  404a77:	mov    ds:0x2ad95252,al
  404a7c:	fild   WORD PTR [eax+0x4bc357b4]
  404a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a83:	fwait
  404a84:	mov    eax,0x63f5fb89
  404a89:	mov    BYTE PTR [ebp-0x34],bl
  404a8c:	add    ecx,edi
  404a8e:	mov    eax,ds:0x727958d2
  404a93:	mul    BYTE PTR [ebp+0x54]
  404a96:	dec    edx
  404a97:	fiadd  WORD PTR [ebp-0x7d6f176c]
  404a9d:	and    eax,0xfedc6dc4
  404aa2:	mov    bl,0xb1
  404aa4:	adc    al,0x17
  404aa6:	and    eax,0x7430d7fd
  404aab:	xchg   ebx,eax
  404aac:	cmp    al,0x3c
  404aae:	repz add eax,0xba26cf4
  404ab4:	jo     0x404a7b
  404ab6:	lahf   
  404ab7:	mov    al,0x41
  404ab9:	xor    bl,BYTE PTR ds:0x8dbf85e8
  404abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac0:	add    al,0x9
  404ac2:	mov    esp,0xb5368e32
  404ac7:	cwde   
  404ac8:	dec    ebx
  404ac9:	ins    DWORD PTR es:[edi],dx
  404aca:	sub    eax,0xf9b21575
  404acf:	xchg   esi,eax
  404ad0:	xchg   BYTE PTR [ebx],dl
  404ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad3:	push   esi
  404ad4:	xchg   DWORD PTR [ecx-0x39],ebp
  404ad7:	shl    ebx,0xe2
  404ada:	jne    0x404af2
  404adc:	test   al,0x53
  404ade:	daa    
  404adf:	xchg   esi,eax
  404ae0:	jae    0x404ab1
  404ae2:	jo     0x404a71
  404ae4:	mov    dl,0xa6
  404ae6:	shl    BYTE PTR [esi],cl
  404ae8:	inc    edi
  404ae9:	xchg   ecx,eax
  404aea:	mov    ebp,0xcf718b4d
  404aef:	fidiv  WORD PTR ss:[ecx]
  404af2:	iret   
  404af3:	inc    eax
  404af4:	mov    edx,0x40d3ec8
  404af9:	xchg   edi,eax
  404afa:	pop    ds
  404afb:	dec    edx
  404afc:	sbb    BYTE PTR [ecx-0x15],cl
  404aff:	(bad)  
  404b00:	jnp    0x404af4
  404b02:	je     0x404afb
  404b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b05:	or     ch,bh
  404b07:	ret    
  404b08:	addr16 out dx,al
  404b0a:	dec    esp
  404b0b:	das    
  404b0c:	test   BYTE PTR [ecx],bh
  404b0e:	mov    gs,WORD PTR [eax]
  404b10:	dec    esp
  404b11:	nop
  404b12:	dec    ecx
  404b13:	cmp    al,0x71
  404b15:	and    DWORD PTR [esi+0x5f6f5240],0xffffffb8
  404b1c:	pop    esp
  404b1d:	inc    ebx
  404b1e:	in     eax,dx
  404b1f:	sbb    BYTE PTR [ecx-0x2b],ah
  404b22:	or     BYTE PTR [eax+eax*2+0x1a],0xce
  404b27:	lods   al,BYTE PTR ds:[esi]
  404b28:	lods   eax,DWORD PTR ds:[esi]
  404b29:	and    bh,BYTE PTR [ecx]
  404b2b:	pushf  
  404b2c:	sbb    al,0x9f
  404b2e:	popf   
  404b2f:	xchg   edx,eax
  404b30:	and    DWORD PTR [ebx+0x7a],esi
  404b33:	add    BYTE PTR [eax],0xee
  404b36:	das    
  404b37:	repnz cwde 
  404b39:	cmp    edx,DWORD PTR [esp+ecx*8-0x558f7108]
  404b40:	xor    eax,0x98fbbb2
  404b45:	test   eax,edi
  404b47:	adc    al,0x98
  404b49:	mov    bl,bh
  404b4b:	test   al,0xe9
  404b4d:	push   ss
  404b4e:	sbb    eax,0xfe4bd4be
  404b53:	mov    bh,0x5d
  404b55:	ror    DWORD PTR [edi+0x41],0x54
  404b59:	cli    
  404b5a:	jae    0x404bb3
  404b5c:	push   0x1c
  404b5e:	ret    0xf1ff
  404b61:	mov    al,0x97
  404b63:	fwait
  404b64:	cmp    eax,0x73b091b7
  404b69:	loop   0x404bd3
  404b6b:	imul   eax,DWORD PTR [eax+0x22],0xffc55166
  404b72:	arpl   WORD PTR [esi],di
  404b74:	and    eax,ebp
  404b76:	repz div ch
  404b79:	mov    ebp,0xd13740ce
  404b7e:	repnz or al,0x9b
  404b81:	pop    ds
  404b82:	cli    
  404b83:	fs ret 0x9aab
  404b87:	jno    0x404bd5
  404b89:	jge    0x404b27
  404b8b:	mov    esi,0xb23ae849
  404b90:	or     cl,BYTE PTR [edi+0x1030f30e]
  404b96:	ja     0x404bbe
  404b98:	fcom   st(5)
  404b9a:	xor    DWORD PTR [eax-0x74],esp
  404b9d:	mov    eax,ds:0xd6b42b19
  404ba2:	and    edx,DWORD PTR [edi+0x64]
  404ba5:	aad    0x38
  404ba7:	add    cl,BYTE PTR [ebp-0x7f40c94e]
  404bad:	pop    ds
  404bae:	pushw  0x9c53
  404bb2:	add    BYTE PTR [ebp-0x65],cl
  404bb5:	shr    DWORD PTR ds:0x3a24e626,1
  404bbb:	sbb    al,0xff
  404bbd:	stc    
  404bbe:	dec    eax
  404bbf:	mov    eax,0xa40589d4
  404bc4:	add    eax,0x35b44999
  404bc9:	cs push 0x35
  404bcc:	mov    ds:0xb03f3a4b,al
  404bd1:	dec    ebx
  404bd2:	sbb    esi,DWORD PTR [edi+0x4df41213]
  404bd8:	out    0xd9,al
  404bda:	loopne 0x404b82
  404bdc:	push   ds
  404bdd:	rcl    DWORD PTR [ecx-0x7d],0x5d
  404be1:	add    edi,DWORD PTR [ebx+0xa]
  404be4:	add    BYTE PTR [ecx+0x37a46cce],0x4c
  404beb:	mov    ds:0x6dc5f38c,eax
  404bf0:	ins    DWORD PTR es:[edi],dx
  404bf1:	mov    ah,BYTE PTR [edx]
  404bf3:	ss xor ebp,esp
  404bf6:	inc    edx
  404bf7:	xchg   edx,eax
  404bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf9:	stc    
  404bfa:	jne    0x404b7d
  404bfc:	jns    0x404c55
  404bfe:	add    ch,BYTE PTR [ebp-0x3e0a88cd]
  404c04:	je     0x404b9f
  404c06:	add    eax,0x2f441606
  404c0b:	pop    ss
  404c0c:	sti    
  404c0d:	inc    ebx
  404c0e:	std    
  404c0f:	jne    0x404ba1
  404c11:	sub    bh,ch
  404c13:	and    eax,0xc4d0b72f
  404c18:	into   
  404c19:	hlt    
  404c1a:	push   ecx
  404c1b:	iret   
  404c1c:	sub    eax,0x90a0d33e
  404c21:	jl     0x404bfa
  404c23:	out    0xf9,al
  404c25:	sahf   
  404c26:	pop    esi
  404c27:	gs test eax,0xda072984
  404c2d:	stos   BYTE PTR es:[edi],al
  404c2e:	push   esi
  404c2f:	push   cs
  404c30:	push   0xda783746
  404c35:	ins    BYTE PTR es:[edi],dx
  404c36:	mov    esi,0xa2bb5192
  404c3b:	or     esp,DWORD PTR [ebx]
  404c3d:	call   0xef2b7461
  404c42:	jl     0x404c46
  404c44:	lahf   
  404c45:	dec    esp
  404c46:	ss arpl si,di
  404c49:	push   ebp
  404c4a:	enter  0xc59e,0x70
  404c4e:	cwde   
  404c4f:	call   0x42b18e83
  404c54:	push   ebx
  404c55:	mov    al,ds:0xcbeb4134
  404c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5b:	push   ds
  404c5c:	stos   DWORD PTR es:[edi],eax
  404c5d:	iret   
  404c5e:	iret   
  404c5f:	adc    BYTE PTR [ebx-0x525e6668],bh
  404c65:	test   DWORD PTR [edi],esp
  404c67:	pop    ecx
  404c68:	mov    eax,0x6212498b
  404c6d:	cld    
  404c6e:	xchg   DWORD PTR [esi+0x2f5e1919],ebp
  404c74:	das    
  404c75:	out    dx,eax
  404c76:	inc    ebp
  404c77:	mov    eax,ds:0xaffe1007
  404c7c:	scas   eax,DWORD PTR es:[edi]
  404c7d:	or     al,0x27
  404c7f:	ins    BYTE PTR es:[edi],dx
  404c80:	popa   
  404c81:	adc    eax,0x6695f5ae
  404c86:	gs je  0x404c2e
  404c89:	xor    al,BYTE PTR [edi]
  404c8b:	mov    ebp,0xaf79dd94
  404c90:	sub    eax,0x4f9814ab
  404c95:	iret   
  404c96:	push   ebp
  404c97:	and    eax,0x5394f80d
  404c9c:	and    DWORD PTR [esi-0x19],edi
  404c9f:	push   0x6342631d
  404ca4:	add    dl,BYTE PTR [edx]
  404ca6:	mov    esi,0x17ed770f
  404cab:	push   esi
  404cac:	shl    DWORD PTR [ebp-0x28d8b47c],1
  404cb2:	sbb    BYTE PTR [ecx+0x441201df],bl
  404cb8:	push   es
  404cb9:	test   al,0xab
  404cbb:	jmp    0x404c52
  404cbd:	sbb    esi,edx
  404cbf:	dec    ecx
  404cc0:	sub    al,0x37
  404cc2:	jmp    0x9441483f
  404cc7:	inc    esi
  404cc8:	(bad)  
  404cc9:	or     ecx,esp
  404ccb:	fwait
  404ccc:	in     eax,dx
  404ccd:	push   cs
  404cce:	cli    
  404ccf:	shr    al,0x82
  404cd2:	retf   0xac9f
  404cd5:	pop    esi
  404cd6:	sti    
  404cd7:	sub    bl,BYTE PTR [esi+0x6a75f710]
  404cdd:	repz fisubr DWORD PTR [esi]
  404ce0:	scas   al,BYTE PTR es:[edi]
  404ce1:	cli    
  404ce2:	and    BYTE PTR [ebx+0x72375351],0xbe
  404ce9:	xchg   esp,eax
  404cea:	sahf   
  404ceb:	arpl   WORD PTR [edi+0x6af4ca94],ax
  404cf1:	pusha  
  404cf2:	xchg   ebx,eax
  404cf3:	scas   eax,DWORD PTR es:[edi]
  404cf4:	xor    eax,0x203430b3
  404cf9:	add    DWORD PTR [eax+eax*1],0x63f785ad
  404d00:	retf   
  404d01:	sub    esp,DWORD PTR [ebx+0x70]
  404d04:	xchg   esi,eax
  404d05:	mov    ah,0xa2
  404d07:	ss stos BYTE PTR es:[edi],al
  404d09:	adc    BYTE PTR [eax-0x57e44425],dh
  404d0f:	addr16 aas 
  404d11:	jne    0x404d07
  404d13:	call   0xd9aa:0x84e45f34
  404d1a:	sub    DWORD PTR [esi+0x18],0x158197bf
  404d21:	push   0x29ac125d
  404d26:	mov    cl,0xc7
  404d28:	mov    ebp,DWORD PTR [esi-0x5a]
  404d2b:	cmc    
  404d2c:	and    al,0x33
  404d2e:	jno    0x404d58
  404d30:	scas   al,BYTE PTR es:[edi]
  404d31:	out    0xc7,al
  404d33:	mov    dh,0x49
  404d35:	addr16 out dx,eax
  404d37:	fld    st(7)
  404d39:	cmp    BYTE PTR [ebp+0x6359e0c1],ah
  404d3f:	push   ebx
  404d40:	mov    eax,0xf54dfeea
  404d45:	in     al,dx
  404d46:	aad    0x73
  404d48:	inc    esi
  404d49:	mov    ds:0xc30521e,eax
  404d4e:	inc    ecx
  404d4f:	rol    DWORD PTR [edi*1+0x6c2b463a],1
  404d56:	pop    ecx
  404d57:	dec    eax
  404d58:	(bad)  
  404d59:	dec    esi
  404d5a:	add    ebp,DWORD PTR [eax+edx*4]
  404d5d:	popf   
  404d5e:	retf   
  404d5f:	lods   al,BYTE PTR ds:[esi]
  404d60:	cli    
  404d61:	mov    ebx,DWORD PTR [edx]
  404d63:	(bad)  
  404d64:	iret   
  404d65:	and    esi,0xdaa33013
  404d6b:	fnsave [ebx]
  404d6d:	sub    ecx,DWORD PTR [ecx-0x71]
  404d70:	and    eax,0xfce9847d
  404d75:	xchg   ebx,eax
  404d76:	mov    ch,0x78
  404d78:	(bad)  
  404d79:	in     eax,0x95
  404d7b:	stos   DWORD PTR es:[edi],eax
  404d7c:	jnp    0x404d00
  404d7e:	out    0x6b,al
  404d80:	sub    ebx,ebp
  404d82:	rcl    DWORD PTR [edi-0x2e],1
  404d85:	adc    DWORD PTR [edx+0x7e041402],ebx
  404d8b:	and    al,BYTE PTR [di-0x47]
  404d8f:	faddp  st(4),st
  404d91:	cs dec ecx
  404d93:	mov    ds:0xe85b9d0d,eax
  404d98:	(bad)  
  404d99:	jg     0x404def
  404d9b:	out    dx,al
  404d9c:	shl    BYTE PTR [edx],0x91
  404d9f:	xor    bl,ch
  404da1:	mov    DWORD PTR [edi+0x65e9bb7],ebp
  404da7:	repz jmp 0x404ddc
  404daa:	adc    BYTE PTR [esi],dh
  404dac:	sbb    DWORD PTR [eax-0x1b],edx
  404daf:	pop    eax
  404db0:	je     0x404d4d
  404db2:	dec    ecx
  404db3:	and    eax,0x820a868
  404db8:	jl     0x404e03
  404dba:	mov    edx,0x59ee7b8
  404dbf:	stos   BYTE PTR es:[edi],al
  404dc0:	jl     0x404d67
  404dc2:	xor    al,0xb7
  404dc4:	mov    ecx,0x4b58bd43
  404dc9:	sub    BYTE PTR [edx+0xf9bc394],ah
  404dcf:	rol    BYTE PTR [eax],0xdb
  404dd2:	mov    ds:0x544db11d,eax
  404dd7:	mov    BYTE PTR [ebp-0xd5fbb0],bh
  404ddd:	mov    WORD PTR [ecx],?
  404ddf:	out    dx,eax
  404de0:	push   ebp
  404de1:	sbb    BYTE PTR [ecx],0xd9
  404de4:	or     al,0x6d
  404de6:	js     0x404da9
  404de8:	jp     0x404e52
  404dea:	jb     0x404e3e
  404dec:	stos   BYTE PTR es:[edi],al
  404ded:	lods   al,BYTE PTR ds:[esi]
  404dee:	dec    esi
  404def:	fsub   DWORD PTR [ebx-0x36475831]
  404df5:	ja     0x404d7e
  404df7:	or     DWORD PTR [ebx-0xd],0x64
  404dfb:	aaa    
  404dfc:	mov    edx,0x491517c
  404e01:	pop    ebp
  404e02:	popf   
  404e03:	ror    BYTE PTR [edi+edx*8+0x5],1
  404e07:	sub    dh,BYTE PTR [ebx-0x1b]
  404e0a:	int    0xaf
  404e0c:	icebp  
  404e0d:	xchg   ebx,eax
  404e0e:	mov    bl,0xe
  404e10:	mov    ebx,0xc74e40b8
  404e15:	xor    BYTE PTR [eax+ebx*4+0x3e5d1764],ch
  404e1c:	std    
  404e1d:	popa   
  404e1e:	and    ch,0xec
  404e21:	jl     0x404e3c
  404e23:	push   ss
  404e24:	nop
  404e25:	fistp  DWORD PTR [eax+0x3b]
  404e28:	in     al,dx
  404e29:	xchg   esp,eax
  404e2a:	sbb    eax,0xf9e52ea6
  404e2f:	pop    ss
  404e30:	jecxz  0x404e67
  404e32:	inc    ecx
  404e33:	mov    ah,BYTE PTR [edi+0x77]
  404e36:	js     0x404e3f
  404e38:	or     BYTE PTR [ebx],al
  404e3a:	inc    esi
  404e3b:	cmp    eax,0x5a7e0200
  404e40:	cmp    eax,0x13cfc38f
  404e45:	ror    BYTE PTR [eax-0x57a125a4],cl
  404e4b:	shl    BYTE PTR [edi],0xdd
  404e4e:	lods   al,BYTE PTR ds:[esi]
  404e4f:	sbb    eax,0x9876e3d7
  404e55:	adc    bh,bl
  404e57:	push   ss
  404e58:	and    BYTE PTR [ebx-0x20dd15ba],dl
  404e5e:	cmc    
  404e5f:	div    ebx
  404e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e62:	mov    dh,0x3d
  404e64:	ja     0x404e82
  404e66:	dec    edx
  404e67:	sub    ecx,eax
  404e69:	push   edi
  404e6a:	xchg   ebp,eax
  404e6b:	or     eax,0x4e2a1bb5
  404e70:	cmp    eax,DWORD PTR [eax+0xb]
  404e73:	pop    es
  404e74:	mov    ebp,0xd8479155
  404e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e7a:	cwde   
  404e7b:	push   edx
  404e7c:	lds    ebx,FWORD PTR [ecx+eax*8]
  404e7f:	ret    0x6d8b
  404e82:	fisubr WORD PTR [bx+si-0x1]
  404e86:	pop    ebx
  404e87:	pop    ss
  404e88:	push   0xffffff97
  404e8a:	ins    BYTE PTR es:[edi],dx
  404e8b:	into   
  404e8c:	rol    BYTE PTR [ebp+0x710ca829],1
  404e92:	not    edi
  404e94:	push   esi
  404e95:	lods   al,BYTE PTR ds:[esi]
  404e96:	pusha  
  404e97:	push   cs
  404e98:	xor    eax,0x9cbf68d6
  404e9d:	jns    0x404e87
  404e9f:	enter  0xb769,0xc7
  404ea3:	arpl   WORD PTR [esi+0x1574f8b5],di
  404ea9:	test   eax,0xb9bb523f
  404eae:	mov    ebx,0xb0bcf050
  404eb3:	inc    edi
  404eb4:	xchg   ebx,eax
  404eb5:	or     al,0xe4
  404eb7:	sbb    eax,0xdebe4a0b
  404ebc:	dec    esp
  404ebd:	xor    al,0xea
  404ebf:	inc    ebx
  404ec0:	daa    
  404ec1:	add    ecx,ecx
  404ec3:	ss pushf 
  404ec5:	test   ebx,0xe598dda0
  404ecb:	rcr    BYTE PTR cs:[edi-0x77359afe],cl
  404ed2:	jmp    DWORD PTR [ebx+0x7a]
  404ed5:	jge    0x404f40
  404ed7:	ja     0x404ead
  404ed9:	pushf  
  404eda:	pushf  
  404edb:	adc    eax,0x21023dbe
  404ee0:	mul    DWORD PTR [eax]
  404ee2:	jle    0x404f07
  404ee4:	sbb    eax,0x2276c807
  404ee9:	(bad)  
  404eea:	cs pop ecx
  404eec:	dec    edi
  404eed:	jmp    0x404f06
  404eef:	lock je 0x404f64
  404ef2:	clc    
  404ef3:	sti    
  404ef4:	loope  0x404f02
  404ef6:	bound  eax,QWORD PTR [edx+0x4b]
  404ef9:	lods   eax,DWORD PTR ds:[esi]
  404efa:	push   0xd9ada849
  404eff:	(bad)  
  404f00:	stc    
  404f01:	aaa    
  404f02:	adc    eax,0x4ae5c463
  404f07:	adc    al,0xe3
  404f09:	(bad)  
  404f0a:	in     eax,dx
  404f0b:	lea    ebp,gs:[edi+0x98a8983]
  404f12:	call   0xadb3:0x1ffb9964
  404f19:	je     0x404f61
  404f1b:	pusha  
  404f1c:	ss and al,0x19
  404f1f:	jnp    0x404ec6
  404f21:	shr    ecx,1
  404f23:	(bad)  
  404f24:	cmp    esp,esp
  404f26:	xor    al,0xdf
  404f28:	(bad)  
  404f29:	out    dx,eax
  404f2a:	leave  
  404f2b:	mov    eax,0xae2c7e0f
  404f30:	ja     0x404f41
  404f32:	ret    
  404f33:	inc    esp
  404f34:	xchg   ebp,eax
  404f35:	mov    edx,DWORD PTR [eax+0x79681a92]
  404f3b:	or     al,0xf1
  404f3d:	fimul  WORD PTR [edx]
  404f3f:	pusha  
  404f40:	shr    ch,0xe0
  404f43:	sbb    BYTE PTR [ebx],dh
  404f45:	pop    esi
  404f46:	les    edx,FWORD PTR [esi]
  404f48:	push   ss
  404f49:	mov    ebp,0x38f8e030
  404f4e:	ret    0x5ca7
  404f51:	sub    edx,DWORD PTR [ecx+0x1ef6ca2c]
  404f57:	pop    ds
  404f58:	cdq    
  404f59:	sub    esp,esp
  404f5b:	xchg   BYTE PTR [eax-0x25175125],cl
  404f61:	adc    al,0x5a
  404f63:	and    ebx,DWORD PTR [edi+0x2b]
  404f66:	scas   al,BYTE PTR es:[edi]
  404f67:	and    eax,0xc8fabf54
  404f6c:	fisub  WORD PTR [ebp+0x4a]
  404f6f:	in     eax,dx
  404f70:	inc    edx
  404f71:	push   es
  404f72:	out    0x21,eax
  404f74:	pop    ebx
  404f75:	xor    dh,BYTE PTR [esi+0x17cd3887]
  404f7b:	dec    ecx
  404f7c:	addr16 es xchg ebx,eax
  404f7f:	sub    BYTE PTR [esi+ebp*1],bl
  404f82:	(bad)  
  404f83:	and    al,0x14
  404f85:	jno    0x404fb3
  404f87:	out    dx,al
  404f88:	in     eax,0xe7
  404f8a:	cwde   
  404f8b:	jle    0x405005
  404f8d:	out    dx,al
  404f8e:	daa    
  404f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f90:	push   esp
  404f91:	retf   0x9c9e
  404f94:	sub    cl,BYTE PTR [ebp+edi*4+0x18]
  404f98:	loop   0x404fe1
  404f9a:	adc    BYTE PTR [ecx+0x39f98b3a],0xe
  404fa1:	hlt    
  404fa2:	adc    dl,BYTE PTR [esi]
  404fa4:	sub    cl,BYTE PTR [edi-0x26f8dab3]
  404faa:	out    dx,al
  404fab:	xchg   ebx,eax
  404fac:	mov    BYTE PTR [edi-0x3077bfff],dh
  404fb2:	popa   
  404fb3:	scas   eax,DWORD PTR es:[edi]
  404fb4:	out    0x8a,eax
  404fb6:	adc    ecx,DWORD PTR [eax+0x27]
  404fb9:	retf   
  404fba:	clc    
  404fbb:	loopne 0x404fdb
  404fbd:	cmp    DWORD PTR [eax+0x27f89434],edx
  404fc3:	push   cs
  404fc4:	mov    edi,0x42aa767d
  404fc9:	dec    eax
  404fca:	add    BYTE PTR [edi+0x84d153d],0xcf
  404fd1:	test   BYTE PTR [esi],ah
  404fd3:	loopne 0x404fec
  404fd5:	add    dh,BYTE PTR ds:0x9faf4b27
  404fdb:	sbb    bl,dl
  404fdd:	push   ebp
  404fde:	lods   eax,DWORD PTR ds:[esi]
  404fdf:	pop    ebx
  404fe0:	jnp    0x404faf
  404fe2:	test   eax,0xfeee429c
  404fe7:	in     eax,dx
  404fe8:	mov    es,WORD PTR [esi]
  404fea:	out    dx,al
  404feb:	dec    esi
  404fec:	lds    esi,FWORD PTR [eax+eiz*2-0x1b]
  404ff0:	sbb    BYTE PTR [edx+ebp*1],0x29
  404ff4:	int    0xed
  404ff6:	xchg   edi,eax
  404ff7:	mov    al,0xb8
  404ff9:	pushf  
  404ffa:	retf   0x22d8
  404ffd:	push   esi
  404ffe:	ins    DWORD PTR es:[edi],dx
  404fff:	out    0xd1,eax
  405001:	out    0xa6,al
  405003:	loope  0x405056
  405005:	mov    esi,ss
  405007:	sbb    edi,ebx
  405009:	fisttp DWORD PTR [esi-0x4fc4ffe7]
  40500f:	sub    BYTE PTR ds:0xf3acb0a,ch
  405015:	stc    
  405016:	bound  edx,QWORD PTR [esi-0x489c1fce]
  40501c:	es ins BYTE PTR es:[edi],dx
  40501e:	add    esi,0xe
  405021:	aaa    
  405022:	hlt    
  405023:	or     eax,0x17fc5a07
  405028:	cmp    al,0xe
  40502a:	inc    ecx
  40502b:	cwde   
  40502c:	jg     0x405086
  40502e:	clc    
  40502f:	mov    ah,dl
  405031:	or     DWORD PTR [ebp-0x56],ebx
  405034:	and    ch,al
  405036:	or     ch,ah
  405038:	add    bh,BYTE PTR [ebx]
  40503a:	enter  0x840f,0x4a
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	push   es
  405660:	test   al,dh
  405662:	mov    al,ds:0x7a7a5f30
  405667:	in     eax,0x5f
  405669:	jp     0x4056e5
  40566b:	mov    ebp,0x7325fb78
  405670:	mov    dl,0x74
  405672:	xor    al,0xe2
  405674:	fs ins DWORD PTR es:[edi],dx
  405676:	mov    ch,0x5
  405678:	mov    ebp,DWORD PTR [ecx]
  40567a:	add    esp,eax
  40567c:	cmp    esp,edx
  40567e:	push   ecx
  40567f:	std    
  405680:	pop    es
  405681:	sub    DWORD PTR ds:0x7c45e291,esp
  405687:	scas   al,BYTE PTR es:[edi]
  405688:	dec    ecx
  405689:	xchg   esi,eax
  40568a:	scas   al,BYTE PTR es:[edi]
  40568b:	shl    esi,cl
  40568d:	shl    DWORD PTR [ecx+0x62],1
  405690:	dec    ecx
  405691:	push   eax
  405692:	mov    ebp,0xd93413a
  405697:	jae    0x4056e2
  405699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40569a:	mov    dh,0x5d
  40569c:	and    eax,0xe1a58074
  4056a1:	inc    eax
  4056a2:	arpl   WORD PTR [edx+edi*2+0x36],bx
  4056a6:	cmp    BYTE PTR [ecx-0x78018f3d],ch
  4056ac:	loope  0x405675
  4056ae:	aaa    
  4056af:	sub    ah,bl
  4056b1:	repz out dx,al
  4056b3:	adc    eax,0x777d19b4
  4056b8:	jae    0x4056a3
  4056ba:	nop
  4056bb:	pusha  
  4056bc:	inc    BYTE PTR [ecx-0x5c]
  4056bf:	add    eax,0xea429f9b
  4056c4:	add    ebp,DWORD PTR [esp+ebx*1+0x74]
  4056c8:	jno    0x405741
  4056ca:	retf   
  4056cb:	imul   ecx
  4056cd:	out    dx,eax
  4056ce:	mov    bh,0x3e
  4056d0:	(bad)  
  4056d1:	sti    
  4056d2:	in     eax,dx
  4056d3:	mov    ds:0x39ac7113,eax
  4056d8:	aas    
  4056d9:	cld    
  4056da:	mov    ch,0x33
  4056dc:	mov    eax,ds:0x37ca81ab
  4056e1:	xor    dl,BYTE PTR [ecx+0x1b]
  4056e4:	shl    BYTE PTR [edi+edi*1+0x21],0x28
  4056e9:	outs   dx,DWORD PTR ds:[esi]
  4056ea:	sub    eax,0x34bfc42b
  4056ef:	mov    ecx,0xd6289785
  4056f4:	fidiv  WORD PTR [esi+edi*1+0x7d4de56d]
  4056fb:	push   ebx
  4056fc:	jns    0x405743
  4056fe:	inc    DWORD PTR [ebp+ebp*1-0x4d]
  405702:	lea    ecx,[ebx]
  405704:	mov    ah,0x9e
  405706:	xor    BYTE PTR [esi-0x4b],ch
  405709:	sub    al,0x17
  40570b:	xchg   eax,ebx
  40570d:	push   ds
  40570e:	mov    bl,0x16
  405710:	lods   eax,DWORD PTR ds:[esi]
  405711:	loopne 0x4056e3
  405713:	mov    al,0xe0
  405715:	jecxz  0x405762
  405717:	jnp    0x4056b9
  405719:	sub    esp,eax
  40571b:	mov    cl,bl
  40571d:	inc    esi
  40571e:	jbe    0x4056c4
  405720:	int3   
  405721:	mov    cl,0xcd
  405723:	inc    ebx
  405724:	add    BYTE PTR [ebx],al
  405726:	pop    edx
  405727:	in     eax,dx
  405728:	xor    al,0x31
  40572a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40572b:	jp     0x405748
  40572d:	sbb    esp,ebp
  40572f:	lods   eax,DWORD PTR ds:[esi]
  405730:	mov    cs,WORD PTR [eax-0x10]
  405733:	or     eax,0xc272f627
  405738:	out    0x16,eax
  40573a:	inc    edi
  40573b:	jmp    0x4056fb
  40573d:	add    al,BYTE PTR [ecx-0x11275a16]
  405743:	sbb    BYTE PTR [ecx-0x77465a95],ch
  405749:	je     0x405753
  40574b:	jl     0x4056e3
  40574d:	addr16 mov edx,0xc0a0b18d
  405753:	(bad)  [edi]
  405755:	sbb    eax,0x448077e
  40575a:	aas    
  40575b:	push   es
  40575c:	xchg   DWORD PTR [ebp-0x5a],edi
  40575f:	sub    BYTE PTR [eax+0x2182e7b0],bl
  405765:	inc    eax
  405766:	pop    edi
  405767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405768:	es pop edi
  40576a:	pop    ecx
  40576b:	and    DWORD PTR [ebx],ebx
  40576d:	mov    ah,0xf7
  40576f:	fsubr  QWORD PTR [esi+0x1c831de3]
  405775:	fs or  edx,esp
  405778:	out    0x18,eax
  40577a:	push   0xd861d67f
  40577f:	cmc    
  405780:	inc    ebx
  405781:	loopne 0x4057b5
  405783:	outs   dx,DWORD PTR ds:[esi]
  405784:	sbb    ebx,DWORD PTR ds:[edx+0xc016857]
  40578b:	or     edx,DWORD PTR [esp+eax*4]
  40578e:	sub    al,0x99
  405790:	jbe    0x405770
  405792:	sub    al,dh
  405794:	ret    0x912a
  405797:	mov    eax,0x508927e1
  40579c:	jg     0x405782
  40579e:	popa   
  40579f:	aaa    
  4057a0:	dec    ebp
  4057a1:	popa   
  4057a2:	enter  0x28e2,0xb2
  4057a6:	jne    0x405730
  4057a8:	outs   dx,BYTE PTR ds:[esi]
  4057a9:	xchg   edi,eax
  4057aa:	lds    esi,FWORD PTR [edi-0x2402c1d0]
  4057b0:	lods   eax,DWORD PTR ds:[esi]
  4057b1:	push   ecx
  4057b3:	mov    ds:0xe761f36b,eax
  4057b8:	jo     0x405774
  4057ba:	xchg   ebp,eax
  4057bb:	(bad)  [edi+eax*2+0x57373eef]
  4057c2:	out    0xe,al
  4057c4:	sub    BYTE PTR [ebp-0x34bdb959],ah
  4057ca:	mov    eax,ds:0x75e4e7ce
  4057cf:	sbb    bl,BYTE PTR [ebx+0x752cb1b4]
  4057d5:	sbb    eax,0xabbd0f94
  4057da:	into   
  4057db:	cmp    al,BYTE PTR gs:[edx]
  4057de:	arpl   WORD PTR [ebp-0x1ba4a0db],cx
  4057e4:	or     al,0x84
  4057e6:	mov    al,ds:0x8312b67a
  4057eb:	mov    ds:0x169b6807,al
  4057f0:	adc    BYTE PTR ds:0xa56ddaf3,cl
  4057f6:	test   DWORD PTR [eax],edi
  4057f8:	jne    0x4057e9
  4057fa:	mov    esi,0x4074a1fe
  4057ff:	cwde   
  405800:	ja     0x40586f
  405802:	stos   DWORD PTR es:[edi],eax
  405803:	lahf   
  405804:	jg     0x4057ba
  405806:	adc    al,0xdd
  405808:	pop    edx
  405809:	push   eax
  40580a:	pop    esi
  40580b:	fnsave [esi-0x636861c0]
  405811:	add    al,0x27
  405813:	test   eax,0x87959147
  405818:	sar    al,0x65
  40581b:	dec    edi
  40581c:	inc    eax
  40581d:	pop    ebx
  40581e:	daa    
  40581f:	cmp    ah,BYTE PTR [edi+ebx*8]
  405822:	inc    ecx
  405823:	mov    dh,0x6f
  405825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405826:	jmp    0x1aabaa70
  40582b:	nop
  40582c:	adc    bh,BYTE PTR [edx]
  40582e:	xor    eax,DWORD PTR [edx+0x77]
  405831:	pop    edx
  405832:	ins    BYTE PTR es:[edi],dx
  405833:	jp     0x40580b
  405835:	mov    ds:0x10091638,al
  40583a:	inc    ebp
  40583b:	iret   
  40583c:	dec    esi
  40583d:	loop   0x4057e3
  40583f:	pushf  
  405840:	jmp    0x405889
  405842:	jecxz  0x405819
  405844:	mov    eax,ds:0x99f68059
  405849:	shl    BYTE PTR [eax],0x23
  40584c:	push   0x5695d7bf
  405851:	repnz xor ebx,DWORD PTR [edi]
  405854:	aam    0xe0
  405856:	pop    ebx
  405857:	push   cs
  405858:	mov    esi,0xd4c0004e
  40585d:	fwait
  40585e:	jge    0x4057e9
  405860:	lea    edx,[ebx+0x7e65a103]
  405866:	cmc    
  405867:	push   ebp
  405868:	cld    
  405869:	std    
  40586a:	xor    al,0x34
  40586c:	mov    bh,0xe3
  40586e:	add    bh,BYTE PTR [edi-0x5995cfab]
  405874:	sbb    al,0xdf
  405876:	jb     0x405864
  405878:	inc    edx
  405879:	inc    esi
  40587a:	mov    dh,bl
  40587c:	xor    DWORD PTR [ebx],edi
  40587e:	mov    dl,0x97
  405880:	test   eax,0x314db87d
  405885:	inc    esi
  405886:	cs mov dh,0xea
  405889:	fidivr DWORD PTR [eax-0xb]
  40588c:	stos   BYTE PTR es:[edi],al
  40588d:	jmp    0x9c2d6bad
  405892:	cmp    esi,0xffffff91
  405895:	adc    al,0x1e
  405897:	mov    ch,BYTE PTR [eax-0x137665f5]
  40589d:	xchg   DWORD PTR [ebx],esi
  40589f:	test   esi,esi
  4058a1:	inc    eax
  4058a2:	loop   0x4058a3
  4058a4:	call   0x15ff:0xe885d321
  4058ab:	add    ah,BYTE PTR [eax]
  4058ad:	jb     0x4058c6
  4058af:	loop   0x4058ef
  4058b1:	pop    ebp
  4058b2:	stc    
  4058b3:	pop    ecx
  4058b4:	stos   BYTE PTR es:[edi],al
  4058b5:	cld    
  4058b6:	cld    
  4058b7:	and    ebp,edx
  4058b9:	adc    bh,cl
  4058bb:	sbb    BYTE PTR [eax],ch
  4058bd:	xor    eax,0x48a84f50
  4058c2:	mov    ds:0xe7e342f9,eax
  4058c7:	les    edi,FWORD PTR [ebx]
  4058c9:	inc    ecx
  4058ca:	inc    BYTE PTR ds:[eax]
  4058cd:	xchg   BYTE PTR [ebx],ch
  4058cf:	push   0xd02873aa
  4058d4:	test   al,0x33
  4058d6:	add    eax,DWORD PTR [esi+ebp*4]
  4058d9:	lahf   
  4058da:	ffreep st(7)
  4058dc:	mov    ds:0x392ae1f3,al
  4058e1:	clc    
  4058e2:	xor    DWORD PTR [edx-0x56],edx
  4058e5:	push   ecx
  4058e6:	shl    dh,0x48
  4058e9:	leave  
  4058ea:	push   eax
  4058eb:	jno    0x4058e0
  4058ed:	push   ebx
  4058ee:	mov    edi,0xb7251e14
  4058f3:	mov    al,ds:0xe48ed6fc
  4058f8:	add    eax,0x2c8e70a9
  4058fd:	call   esp
  4058ff:	les    ebx,FWORD PTR [ecx-0x38373867]
  405905:	jne    0x405901
  405907:	jbe    0x4058a2
  405909:	das    
  40590a:	ror    DWORD PTR [ecx+0x12e80831],1
  405910:	les    esp,FWORD PTR [esi]
  405912:	dec    ebx
  405913:	test   DWORD PTR [edx],ebp
  405915:	xor    cl,BYTE PTR [ecx-0x4325520c]
  40591b:	jb     0x405907
  40591d:	frstor [ebp-0x65]
  405920:	enter  0xbf26,0x64
  405924:	xchg   edi,eax
  405925:	jnp    0x4058e5
  405927:	sahf   
  405928:	call   DWORD PTR [ebp-0x23]
  40592b:	cld    
  40592c:	cmp    BYTE PTR [ebp-0x17],cl
  40592f:	inc    ebx
  405930:	pop    eax
  405931:	out    0x89,al
  405933:	inc    ebx
  405934:	xchg   dh,cl
  405936:	push   ds
  405937:	or     ebx,DWORD PTR [eax-0x5b]
  40593a:	mov    ebx,0x84d13b3e
  40593f:	cmc    
  405940:	pop    edi
  405941:	sbb    al,0x80
  405943:	push   0xffffff87
  405945:	mov    ecx,0x56fde12f
  40594a:	popf   
  40594b:	or     al,0xa2
  40594d:	aad    0x79
  40594f:	and    ecx,DWORD PTR [ebp+0x12]
  405952:	call   0xa3383cdb
  405957:	and    esp,DWORD PTR [ebx]
  405959:	and    eax,0xb41c2539
  40595e:	xor    DWORD PTR [edx-0x32aaab80],esi
  405964:	sbb    cl,0xe9
  405967:	or     eax,0x7fea2ed3
  40596c:	mov    ebp,0x97ef9579
  405971:	inc    esi
  405972:	loope  0x4059a7
  405974:	mov    cl,0xed
  405976:	mov    esi,0x119400a6
  40597b:	pop    esp
  40597c:	ins    BYTE PTR es:[edi],dx
  40597d:	enter  0xcb16,0x25
  405981:	iret   
  405982:	popa   
  405983:	hlt    
  405984:	les    esi,FWORD PTR ds:0x8ec8eb8
  40598a:	and    DWORD PTR [esi],edi
  40598c:	mov    bh,0xe3
  40598e:	loopne 0x405966
  405990:	inc    BYTE PTR ds:0xcfa9b954
  405996:	and    BYTE PTR [eax-0x49856ab6],ch
  40599c:	jo     0x405920
  40599e:	js     0x40597c
  4059a0:	mov    cl,0xd3
  4059a2:	pop    esp
  4059a3:	ret    0xeda7
  4059a6:	dec    eax
  4059a7:	cmp    eax,0x3814f5c4
  4059ac:	pop    esp
  4059ad:	sub    BYTE PTR ds:0x261773b0,ch
  4059b3:	adc    eax,0xd567d058
  4059b8:	and    BYTE PTR [esi],cl
  4059ba:	je     0x405a04
  4059bc:	nop
  4059bd:	cmc    
  4059be:	sbb    eax,0xc9d478d5
  4059c3:	fsubrp st(4),st
  4059c5:	popa   
  4059c6:	mov    cs,WORD PTR [bx+0x28]
  4059ca:	push   ebx
  4059cb:	out    dx,al
  4059cc:	sbb    eax,0xb54e7e75
  4059d1:	push   cs
  4059d2:	sbb    BYTE PTR [edi+0x70c789a2],al
  4059d8:	xor    al,0x67
  4059da:	stos   BYTE PTR es:[edi],al
  4059db:	bound  ebx,QWORD PTR [ebp-0x1a]
  4059de:	or     eax,0x7fab7838
  4059e3:	hlt    
  4059e4:	in     eax,0xc4
  4059e6:	mov    ecx,0x9f8942b
  4059eb:	loopne 0x4059dc
  4059ed:	or     dh,0xd2
  4059f0:	fist   DWORD PTR [edx-0x329602d2]
  4059f6:	loope  0x4059c6
  4059f8:	push   ss
  4059f9:	sub    BYTE PTR [edi+0x22],dl
  4059fc:	inc    esi
  4059fd:	rol    DWORD PTR [edi+0x2e],0x17
  405a01:	ffreep st(1)
  405a03:	into   
  405a04:	mul    BYTE PTR [ebx-0x126b6b40]
  405a0a:	arpl   WORD PTR [ecx-0x1a9ec2b0],ax
  405a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a11:	test   BYTE PTR [ebp+0x344f5b3],bl
  405a17:	mov    DWORD PTR [eax],edi
  405a19:	push   es
  405a1a:	addr16 test al,0x1f
  405a1d:	dec    edx
  405a1e:	pushf  
  405a1f:	sub    ebp,DWORD PTR [ebx+0x3fbf8aca]
  405a25:	and    esi,DWORD PTR [edx]
  405a27:	inc    ebp
  405a28:	mov    ch,0x4d
  405a2a:	jecxz  0x405a2e
  405a2c:	fstp   QWORD PTR [ecx]
  405a2e:	data16 rcr BYTE PTR [esi+eiz*1-0x1cb33569],cl
  405a36:	repz sar DWORD PTR [ecx+0x6e],cl
  405a3a:	popa   
  405a3b:	pop    ebp
  405a3c:	call   0xeec9:0x9fcc8fd4
  405a43:	xchg   ebx,eax
  405a44:	mov    ecx,0x7098b99c
  405a49:	add    bl,BYTE PTR [ebp-0x6]
  405a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a4d:	sub    BYTE PTR [edi+0x1b7828f0],ah
  405a53:	fmulp  st(4),st
  405a55:	adc    al,0xad
  405a57:	push   cs
  405a58:	add    ebx,esi
  405a5a:	xor    BYTE PTR [ecx+0x30192c0c],ch
  405a60:	hlt    
  405a61:	add    BYTE PTR [ecx-0x5881917e],bl
  405a67:	cmp    eax,0x6288266f
  405a6c:	push   ebx
  405a6d:	ins    BYTE PTR es:[edi],dx
  405a6e:	adc    ebp,ebp
  405a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a71:	aad    0x56
  405a73:	xchg   ebp,eax
  405a74:	add    DWORD PTR [edi],eax
  405a76:	mul    BYTE PTR [edi-0x75]
  405a79:	fbstp  TBYTE PTR fs:[esi+0x4d]
  405a7d:	pop    eax
  405a7e:	in     eax,dx
  405a7f:	rol    DWORD PTR [eax+0x69512135],cl
  405a85:	stc    
  405a86:	adc    DWORD PTR [ebx-0x5e84e0a5],edi
  405a8c:	add    al,0x8f
  405a8e:	mov    edi,0x9d76c3e5
  405a93:	add    al,0xe9
  405a95:	ds jmp 0x868add26
  405a9b:	aam    0xde
  405a9d:	sub    ebx,ebp
  405a9f:	mov    ebp,0x604eb631
  405aa4:	gs add ebx,edx
  405aa7:	shl    BYTE PTR [eax+0xf],0xd
  405aab:	mov    cl,0x69
  405aad:	nop
  405aae:	mov    ecx,0xc3daa23c
  405ab3:	add    DWORD PTR [ebp-0x7c],ecx
  405ab6:	inc    ebx
  405ab7:	xchg   esp,eax
  405ab8:	repnz adc eax,0x26381dee
  405abe:	lds    edi,FWORD PTR [edi-0x1f]
  405ac1:	aad    0x53
  405ac3:	sub    eax,0x18619948
  405ac8:	mov    ?,ebx
  405aca:	xor    eax,0xfd979060
  405acf:	clc    
  405ad0:	jno    0x405a88
  405ad2:	js     0x405acf
  405ad4:	retf   
  405ad5:	stos   BYTE PTR es:[edi],al
  405ad6:	scas   al,BYTE PTR es:[edi]
  405ad7:	loopne 0x405b15
  405ad9:	cmp    al,0xc7
  405adb:	loop   0x405b1a
  405add:	je     0x405afa
  405adf:	ss mov edx,0xaebb12c5
  405ae5:	push   0x469f28ad
  405aea:	sbb    esp,DWORD PTR [ebx+0x21b44a3f]
  405af0:	popf   
  405af1:	fisub  WORD PTR [esi+0x4f]
  405af4:	stos   BYTE PTR es:[edi],al
  405af5:	fwait
  405af6:	adc    DWORD PTR [edi],0x749e6b7
  405afc:	lea    eax,[eax]
  405afe:	or     eax,DWORD PTR [eax-0x4a]
  405b01:	dec    eax
  405b02:	ja     0x405ac9
  405b04:	loope  0x405ab7
  405b06:	imul   esp,DWORD PTR [ebx+edi*4-0x7b],0x7d
  405b0b:	out    dx,al
  405b0c:	inc    edi
  405b0d:	mov    eax,0xb1c8197d
  405b12:	mov    gs,WORD PTR [ebp+0x6c]
  405b15:	js     0x405ab2
  405b17:	push   eax
  405b18:	or     DWORD PTR [edx],esi
  405b1a:	xchg   esi,eax
  405b1b:	inc    ebp
  405b1c:	inc    eax
  405b1d:	repz repz sub dl,BYTE PTR [ecx-0x55]
  405b22:	fxtract 
  405b24:	sub    al,BYTE PTR [ecx-0x25]
  405b27:	push   ss
  405b28:	dec    ecx
  405b29:	int3   
  405b2a:	fiadd  WORD PTR [ebp-0x21]
  405b2d:	jae    0x405ba6
  405b2f:	mov    ds:0xeffc8493,al
  405b34:	xor    bl,al
  405b36:	push   ds
  405b37:	pop    ss
  405b38:	pop    esp
  405b39:	push   esp
  405b3a:	or     eax,0xf9824f8e
  405b3f:	ja     0x405b99
  405b41:	pop    edi
  405b42:	cmp    ecx,ebp
  405b44:	fsubp  st(1),st
  405b46:	and    edx,DWORD PTR [ebx+0x78]
  405b49:	cmp    eax,DWORD PTR [ecx+0x71de0d65]
  405b4f:	jae    0x405b59
  405b51:	pop    ss
  405b52:	ret    
  405b53:	xchg   edi,eax
  405b54:	test   DWORD PTR [ecx-0x78],eax
  405b57:	outs   dx,DWORD PTR ds:[esi]
  405b58:	pop    ebx
  405b59:	(bad)  
  405b5a:	cld    
  405b5b:	xchg   edi,eax
  405b5c:	std    
  405b5d:	push   ds
  405b5e:	ins    DWORD PTR es:[edi],dx
  405b5f:	jmp    0xbeef:0xd507c131
  405b66:	test   al,0x0
  405b68:	out    dx,al
  405b69:	mov    edi,0xc0188284
  405b6e:	ficomp WORD PTR [edx-0x2e]
  405b71:	add    eax,0xe09889ab
  405b76:	test   BYTE PTR [esi+0x22609527],ch
  405b7c:	pop    ebx
  405b7d:	ja     0x405bb9
  405b7f:	pop    edi
  405b80:	test   BYTE PTR [eax-0x24],al
  405b83:	jo     0x405b2f
  405b85:	pop    es
  405b86:	int    0xdf
  405b88:	sub    BYTE PTR ds:0x507d0983,bh
  405b8e:	sub    DWORD PTR [eax],edx
  405b90:	adc    dh,bh
  405b92:	xor    ch,BYTE PTR [esi+0x4e]
  405b95:	scas   eax,DWORD PTR es:[edi]
  405b96:	retf   
  405b97:	jnp    0x405b42
  405b99:	cmc    
  405b9a:	addr16 ret 
  405b9c:	cmc    
  405b9d:	int    0xd5
  405b9f:	jne    0x405bc5
  405ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba2:	xor    ebp,DWORD PTR [esi+0x76]
  405ba5:	ss pop esi
  405ba7:	in     eax,0xae
  405ba9:	or     eax,0xe7a13d6b
  405bae:	in     al,dx
  405baf:	cdq    
  405bb0:	ins    BYTE PTR es:[edi],dx
  405bb1:	mov    DWORD PTR [esi],ebx
  405bb3:	lods   eax,DWORD PTR ds:[esi]
  405bb4:	or     eax,DWORD PTR [ecx+0x51]
  405bb7:	xchg   ch,ch
  405bb9:	out    0x1a,eax
  405bbb:	xchg   edi,eax
  405bbc:	and    BYTE PTR [ebx+0xf],dh
  405bbf:	test   eax,0xe1feaaf5
  405bc4:	imul   edx,DWORD PTR [esp+ebx*8+0x30070980],0x761cbd63
  405bcf:	push   DWORD PTR [esi-0x1b]
  405bd2:	mul    DWORD PTR [esi]
  405bd4:	rcr    BYTE PTR [ebx+esi*4-0x69961954],0x1f
  405bdc:	cli    
  405bdd:	add    bl,BYTE PTR [eax+0x76ebe64b]
  405be3:	iret   
  405be4:	and    al,0xfa
  405be6:	push   cs
  405be7:	jae    0x405b9f
  405be9:	je     0x405bfa
  405beb:	cmp    BYTE PTR [eax],dh
  405bed:	(bad)  
  405bee:	int    0xf6
  405bf0:	dec    eax
  405bf1:	inc    ecx
  405bf2:	sub    ebp,DWORD PTR [edx]
  405bf4:	fsubr  QWORD PTR [ecx]
  405bf6:	in     al,0x7b
  405bf8:	data16 fist WORD PTR [eax+esi*8-0x80]
  405bfd:	jg     0x405bbc
  405bff:	push   edx
  405c00:	mov    dh,0x61
  405c02:	icebp  
  405c03:	fstp   DWORD PTR [ecx]
  405c05:	ffree  st(0)
  405c07:	imul   edi,esi,0x14
  405c0a:	jmp    FWORD PTR [ebp+esi*4+0x56]
  405c0e:	sub    ecx,esi
  405c10:	adc    DWORD PTR [esi],ebp
  405c12:	enter  0x35d6,0x3b
  405c16:	dec    edx
  405c17:	sub    ecx,DWORD PTR [esi-0x21f57afe]
  405c1d:	rcl    esi,1
  405c1f:	adc    edx,DWORD PTR [eax-0x23]
  405c22:	sbb    bh,BYTE PTR [edx+0x36]
  405c25:	mov    dh,0x69
  405c27:	inc    esp
  405c28:	addr16 sti 
  405c2a:	add    DWORD PTR [esi+0x73],esi
  405c2d:	ficom  WORD PTR es:0xf2a97552
  405c34:	mov    eax,ds:0xf042f5d4
  405c39:	pushf  
  405c3a:	fisub  DWORD PTR [ecx+0x5e]
  405c3d:	data16 aas 
  405c3f:	mov    al,0x71
  405c41:	mov    ds:0x76944060,eax
  405c46:	dec    ebp
  405c47:	aad    0x56
  405c49:	rol    DWORD PTR [edx],cl
  405c4b:	hlt    
  405c4c:	adc    al,bh
  405c4e:	stc    
  405c4f:	fwait
  405c50:	add    ebx,ebx
  405c52:	and    ebp,DWORD PTR [esi-0x650d1cfb]
  405c58:	xor    DWORD PTR [edi-0x5dfc21b1],0x3d57b25c
  405c62:	test   BYTE PTR ds:0xc1dddab9,ah
  405c68:	shl    BYTE PTR [edx-0x4d],1
  405c6b:	test   eax,0xdbc417ab
  405c70:	stos   DWORD PTR es:[edi],eax
  405c71:	add    DWORD PTR [edi],edi
  405c73:	and    BYTE PTR [eax+0x19a1e81c],bh
  405c79:	(bad)  
  405c7a:	pop    ds
  405c7b:	iret   
  405c7c:	stc    
  405c7d:	mov    esp,0x36009f90
  405c82:	icebp  
  405c83:	push   eax
  405c84:	nop
  405c85:	sub    bl,BYTE PTR [edx-0x19a6eb9a]
  405c8b:	add    eax,0x2518cc43
  405c90:	ja     0x405d01
  405c92:	sub    al,0x3f
  405c94:	jmp    0x87c6f97e
  405c99:	stc    
  405c9a:	mov    edi,0xaa7f46bb
  405c9f:	test   DWORD PTR [esi+0x2f],eax
  405ca2:	pop    esp
  405ca3:	int    0xc5
  405ca5:	imul   edx,DWORD PTR [edi-0xee246cf],0x674d075a
  405caf:	inc    edi
  405cb0:	(bad)  
  405cb1:	mov    dl,0x94
  405cb3:	mov    bh,0x8c
  405cb5:	mov    bh,0x3d
  405cb7:	loope  0x405d1e
  405cb9:	adc    eax,0xf3e2e3
  405cbe:	or     DWORD PTR [edx],edx
  405cc0:	das    
  405cc1:	(bad)  
  405cc2:	int3   
  405cc3:	dec    ecx
  405cc4:	adc    BYTE PTR [ecx-0x1eb8b11a],0xf9
  405ccb:	mov    DWORD PTR [ecx],ebx
  405ccd:	xchg   edi,eax
  405cce:	cmp    DWORD PTR [ebp+0x5f20cb12],eax
  405cd4:	sbb    DWORD PTR [edi-0x5720e69d],ecx
  405cda:	rcr    esp,cl
  405cdc:	sub    BYTE PTR [edi],al
  405cde:	mov    al,ds:0x9bf0e35d
  405ce3:	test   eax,0x15fb2559
  405ce8:	jae    0x405d45
  405cea:	sub    ah,BYTE PTR [eax-0x2584a9dc]
  405cf0:	dec    ebx
  405cf1:	daa    
  405cf2:	retf   0xfac0
  405cf5:	int3   
  405cf6:	add    dl,bh
  405cf8:	sub    dl,BYTE PTR [ecx]
  405cfa:	mov    ebx,0x2df6d353
  405cff:	sub    DWORD PTR [edi],ecx
  405d01:	jmp    0x584c:0xd09c886d
  405d08:	add    BYTE PTR [eax],cl
  405d0a:	(bad)  
  405d0b:	shr    bl,1
  405d0d:	test   al,0x79
  405d0f:	test   BYTE PTR [ebp-0x71c9eaea],cl
  405d15:	in     eax,0x6e
  405d17:	fbstp  TBYTE PTR [esi]
  405d19:	mov    ecx,0x19bd6b16
  405d1e:	sahf   
  405d1f:	aaa    
  405d20:	dec    si
  405d22:	imul   edi,DWORD PTR [edi+0x37],0xa5da51e0
  405d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2a:	jmp    0x8914e011
  405d2f:	in     eax,dx
  405d30:	out    dx,eax
  405d31:	mov    bh,0x43
  405d33:	sbb    eax,0xf074681a
  405d38:	pop    ebp
  405d39:	sub    ebp,edi
  405d3b:	mov    al,0x6e
  405d3d:	nop
  405d3e:	xchg   ebp,eax
  405d3f:	push   cs
  405d40:	xchg   edx,eax
  405d41:	jle    0x405cc6
  405d43:	mov    eax,0xc65622c4
  405d48:	dec    ecx
  405d49:	pop    ecx
  405d4a:	mov    al,0x1d
  405d4c:	in     al,0x99
  405d4e:	daa    
  405d4f:	in     al,0xfe
  405d51:	js     0x405d4e
  405d53:	test   eax,0xccb3e18a
  405d58:	mov    edi,0x626e2b53
  405d5d:	stos   BYTE PTR es:[edi],al
  405d5e:	add    eax,0x6f9121be
  405d63:	into   
  405d64:	int    0xdf
  405d66:	rol    DWORD PTR [ebx+esi*4+0x52],cl
  405d6a:	inc    ebx
  405d6b:	pop    ebx
  405d6c:	xor    BYTE PTR [eax+ebx*4-0x4c],0xa2
  405d71:	imul   ecx,DWORD PTR ds:[edx-0x6150be33],0x7c
  405d79:	outs   dx,DWORD PTR ds:[esi]
  405d7a:	aam    0x66
  405d7c:	es sahf 
  405d7e:	clc    
  405d7f:	outs   dx,DWORD PTR ds:[esi]
  405d80:	sub    cl,0x27
  405d83:	jne    0x405d21
  405d85:	pop    ds
  405d86:	cli    
  405d87:	mov    eax,ds:0xb636f93f
  405d8c:	push   ebp
  405d8d:	imul   edi,eax,0xecf56cb1
  405d93:	and    BYTE PTR [eax+edi*4],bl
  405d96:	pop    ebp
  405d97:	cmp    DWORD PTR ds:0x26b74532,0xc90dda59
  405da1:	mov    bh,0xaf
  405da3:	dec    edi
  405da4:	jecxz  0x405d77
  405da6:	fidiv  WORD PTR [ecx]
  405da8:	outs   dx,DWORD PTR ds:[esi]
  405da9:	mov    dl,0xfe
  405dab:	lahf   
  405dac:	push   0x1751dff9
  405db1:	test   al,0x5e
  405db3:	xor    BYTE PTR [eax-0x10],al
  405db6:	ret    
  405db7:	test   DWORD PTR [ecx],eax
  405db9:	fst    QWORD PTR [ebp-0x5d]
  405dbd:	or     BYTE PTR [eax+0x1b4b1b5],0xb0
  405dc4:	pop    ss
  405dc5:	mov    cl,0x96
  405dc7:	imul   esi,edx,0xeb3edb7e
  405dcd:	lods   eax,DWORD PTR ds:[esi]
  405dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dcf:	lahf   
  405dd0:	push   cs
  405dd1:	and    dl,al
  405dd3:	scas   eax,DWORD PTR es:[edi]
  405dd4:	sub    esp,DWORD PTR [eax]
  405dd6:	ins    DWORD PTR es:[edi],dx
  405dd7:	jg     0x405e4c
  405dd9:	addr16 repnz add eax,0xa0ab2e16
  405de0:	xlat   BYTE PTR ds:[ebx]
  405de1:	ror    DWORD PTR [ebx-0x1d],cl
  405de4:	sbb    BYTE PTR [eax+0x52],ah
  405de7:	ret    0x918
  405dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405deb:	inc    edx
  405dec:	xlat   BYTE PTR ds:[ebx]
  405ded:	push   ds
  405dee:	adc    edx,DWORD PTR [esi+0x25]
  405df1:	add    edi,esp
  405df3:	in     al,dx
  405df4:	add    cl,BYTE PTR [ecx-0x77]
  405df7:	mov    edi,0xc95910ce
  405dfd:	adc    ecx,0xb328bee8
  405e03:	mov    edi,0x645059e0
  405e08:	dec    edi
  405e0a:	cmp    DWORD PTR [ebx-0x4f3812ba],eax
  405e10:	jp     0x405db7
  405e12:	mov    ss,WORD PTR [esi+0x5b93b6c1]
  405e18:	dec    ebx
  405e19:	ror    DWORD PTR [eax],cl
  405e1b:	(bad)  
  405e1c:	sub    DWORD PTR [ebx-0x25],ebx
  405e1f:	and    eax,0x57e6394a
  405e24:	pop    ebx
  405e25:	aad    0x53
  405e27:	inc    ebx
  405e28:	jl     0x405dd1
  405e2a:	cmp    BYTE PTR [edx+ebx*2],cl
  405e2d:	popa   
  405e2e:	cmp    BYTE PTR [edi-0x1],dl
  405e31:	sbb    al,0x5a
  405e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e34:	frstor [esi+0x1e]
  405e37:	scas   eax,DWORD PTR es:[edi]
  405e38:	push   es
  405e39:	push   edx
  405e3a:	bound  ecx,QWORD PTR [eax+eiz*8+0x7c6dc10c]
  405e41:	push   esp
  405e42:	stos   DWORD PTR es:[edi],eax
  405e43:	or     al,0xb2
  405e45:	inc    esi
  405e46:	(bad)  
  405e47:	in     eax,dx
  405e48:	icebp  
  405e49:	xchg   edi,eax
  405e4a:	inc    edx
  405e4b:	lahf   
  405e4c:	cdq    
  405e4d:	out    dx,eax
  405e4e:	mov    cl,0x1e
  405e50:	add    DWORD PTR [ebx-0x11],ebp
  405e53:	adc    al,0x29
  405e55:	inc    ecx
  405e56:	sub    eax,0x6edfb05
  405e5b:	pushf  
  405e5c:	inc    ebx
  405e5d:	mov    dl,0xe7
  405e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e60:	pop    esi
  405e61:	jae    0x405e5a
  405e63:	in     eax,dx
  405e64:	jp     0x405df9
  405e66:	sub    al,0x42
  405e68:	push   ss
  405e69:	inc    ecx
  405e6a:	push   edx
  405e6b:	mov    esp,0xb7ef56ca
  405e70:	ror    BYTE PTR [ebx],0xde
  405e73:	repnz mov ah,0x3c
  405e76:	inc    esp
  405e77:	adc    DWORD PTR [esi-0x5508d48b],eax
  405e7d:	mov    DWORD PTR [edi+ebx*4],eax
  405e80:	and    DWORD PTR [edx-0xb],0x1ccc2cce
  405e87:	pop    esi
  405e88:	push   es
  405e89:	lea    eax,ds:0x3f9ed9c9
  405e8f:	loopne 0x405e7c
  405e91:	retf   
  405e92:	test   BYTE PTR [edx+eiz*4+0x3d],ah
  405e96:	dec    edi
  405e97:	cli    
  405e98:	cs push ecx
  405e9a:	or     BYTE PTR gs:[edx],al
  405e9d:	push   ecx
  405e9e:	stos   BYTE PTR es:[edi],al
  405e9f:	hlt    
  405ea0:	and    eax,0x68577ea3
  405ea5:	cmc    
  405ea6:	mov    eax,0xea6fee5d
  405eab:	mov    al,0x8c
  405ead:	lahf   
  405eae:	sub    DWORD PTR [ebx-0x4c],esi
  405eb1:	jp     0x405ec4
  405eb3:	sub    eax,0xf013a6ce
  405eb8:	adc    al,0x1c
  405eba:	dec    esi
  405ebb:	add    al,cl
  405ebd:	cld    
  405ebe:	dec    esp
  405ebf:	adc    ah,ch
  405ec1:	mov    DWORD PTR [edi+edi*1+0x4c],esp
  405ec5:	mov    ch,0xf
  405ec7:	xchg   ecx,eax
  405ec8:	leave  
  405ec9:	les    esi,FWORD PTR [eax-0x67]
  405ecc:	or     BYTE PTR [ebx+0x1c760f8c],0xeb
  405ed3:	push   0xea949aa4
  405ed8:	neg    DWORD PTR [esi+0x6cf827c6]
  405ede:	gs dec edx
  405ee0:	jae    0x405ed8
  405ee2:	int    0xd2
  405ee4:	sahf   
  405ee5:	ret    0x57e1
  405ee8:	and    eax,DWORD PTR [ebx+0xdc76bd9]
  405eee:	hlt    
  405eef:	and    dl,BYTE PTR [ebp+0x7a2c500]
  405ef5:	push   ss
  405ef6:	je     0x405f4d
  405ef8:	jg     0x405e85
  405efa:	(bad)  [ecx-0x9b03ad6]
  405f00:	pop    esp
  405f01:	aad    0xfc
  405f03:	scas   eax,DWORD PTR es:[edi]
  405f04:	test   BYTE PTR [edx-0x48],bh
  405f07:	shl    BYTE PTR [ebx-0x72],0x17
  405f0b:	inc    esp
  405f0c:	shl    DWORD PTR [ebx],1
  405f0e:	or     eax,0xef2a1483
  405f13:	push   ebx
  405f14:	mov    ebx,0x689e94d3
  405f19:	sbb    eax,0x8e007da6
  405f1e:	adc    ecx,ebp
  405f20:	mov    esp,0xcb801d
  405f25:	xchg   edi,eax
  405f26:	test   dh,cl
  405f28:	lds    eax,FWORD PTR ds:0x7f6458d1
  405f2e:	scas   eax,DWORD PTR es:[edi]
  405f2f:	bound  edx,QWORD PTR [edx+0x3b]
  405f32:	aad    0xa4
  405f34:	mov    esi,gs
  405f36:	jno    0x405f89
  405f38:	(bad)  
  405f39:	aas    
  405f3a:	jp     0x405f59
  405f3c:	in     al,dx
  405f3d:	(bad)  
  405f3e:	push   0x4d
  405f40:	push   esi
  405f41:	(bad)  [edx+0x1877b18a]
  405f47:	pop    edx
  405f48:	pop    ds
  405f49:	inc    ebp
  405f4a:	mov    ?,edx
  405f4c:	dec    ebp
  405f4d:	loop   0x405f78
  405f4f:	and    DWORD PTR [eax+0x4b],ebp
  405f52:	mov    bh,0x66
  405f54:	xor    al,0x76
  405f56:	es pop ebp
  405f58:	fdecstp 
  405f5a:	cmp    ebp,DWORD PTR [ebx]
  405f5c:	sub    eax,0x2461989a
  405f61:	iret   
  405f62:	dec    ecx
  405f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f64:	imul   ebx,DWORD PTR [ebx],0x33
  405f67:	sbb    ebp,edx
  405f69:	jp     0x405f41
  405f6b:	sti    
  405f6c:	jmp    0xd9e1cf29
  405f71:	xor    BYTE PTR [eax+eax*8+0x7b4edfc2],dh
  405f78:	cmp    al,bl
  405f7a:	inc    ebp
  405f7b:	dec    ebx
  405f7c:	out    0x11,al
  405f7e:	or     BYTE PTR [esp+ecx*4],0xc9
  405f82:	loopne 0x405f3f
  405f84:	sub    BYTE PTR [ecx],0x32
  405f87:	push   edx
  405f88:	push   ss
  405f89:	jmp    0xc26d:0xe881d039
  405f90:	scas   eax,DWORD PTR es:[edi]
  405f91:	in     eax,0xbd
  405f93:	inc    ebp
  405f94:	mov    edx,0x86d03f4b
  405f99:	ud1    eax,DWORD PTR [ebp+0x3]
  405f9d:	xor    esp,DWORD PTR [ebx-0xc]
  405fa0:	dec    ecx
  405fa1:	jns    0x40600c
  405fa3:	addr16 jno 0x406020
  405fa6:	rcl    DWORD PTR [esi+0x4a8797f0],cl
  405fac:	ins    BYTE PTR es:[edi],dx
  405fad:	dec    eax
  405fae:	jbe    0x405fb7
  405fb0:	and    ch,bh
  405fb2:	aam    0x33
  405fb4:	push   cs
  405fb5:	mov    esi,0x98f4bccd
  405fba:	push   ss
  405fbb:	mov    fs,WORD PTR [edx+eiz*4+0x25f451e8]
  405fc2:	and    eax,0xc8b52eb
  405fc7:	(bad)  
  405fc8:	push   esi
  405fc9:	jl     0x405fd8
  405fcb:	sub    eax,DWORD PTR [esi-0x38]
  405fce:	dec    BYTE PTR [eax+0x2ed63663]
  405fd4:	sar    BYTE PTR [edx],1
  405fd6:	fsub   QWORD PTR [ecx]
  405fd8:	test   eax,0x3c7722f4
  405fdd:	hlt    
  405fde:	jne    0x405fdf
  405fe0:	ss xchg ecx,eax
  405fe2:	and    cl,BYTE PTR [edi+0x28fb69b7]
  405fe8:	pop    ds
  405fe9:	out    dx,eax
  405fea:	je     0x405f80
  405fec:	call   0x4041:0x3eca3e08
  405ff3:	dec    ecx
  405ff4:	or     eax,esi
  405ff6:	lea    edx,[edi+eax*2+0xf]
  405ffa:	int3   
  405ffb:	rol    BYTE PTR [ebp+edi*2+0x485c64d6],0x45
  406003:	pop    ds
  406004:	call   0xa56e:0xd64e5642
  40600b:	push   ebx
  40600c:	mov    dh,0x2
  40600e:	fadd   st,st(7)
  406010:	mov    al,0x6
  406012:	mov    edi,0xe007575a
  406017:	test   BYTE PTR [esi],0xaa
  40601a:	cld    
  40601b:	lods   eax,DWORD PTR ds:[esi]
  40601c:	jne    0x406066
  40601e:	inc    ebp
  40601f:	test   BYTE PTR [eax],0xdd
  406022:	add    BYTE PTR [ebx-0x80],dl
  406025:	sub    bl,dh
  406027:	cmp    esp,DWORD PTR [edx+0x15]
  40602a:	or     esi,edi
  40602c:	fsub   DWORD PTR [ebx]
  40602e:	and    BYTE PTR [esi+0x66],ah
  406031:	shr    BYTE PTR [esi-0x3],0xad
  406035:	out    0xa2,eax
  406037:	inc    ebp
  406038:	mov    ebx,DWORD PTR [esp+ecx*2+0x25]
  40603c:	mov    esp,0x9dce52f5
  406041:	sbb    cl,BYTE PTR [ebp+ebp*8+0x4]
  406045:	iret   
  406046:	sub    edx,DWORD PTR [ebp-0x5b]
  406049:	and    DWORD PTR [esi+0x3f0c5496],esi
  40604f:	fld    DWORD PTR [ebp+edx*1+0x653615ec]
  406056:	mov    ebp,0x59ef6162
  40605b:	shl    BYTE PTR [ecx+0x6d61c0bf],0x7c
  406062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406063:	lahf   
  406064:	cld    
  406065:	das    
  406066:	xchg   esi,eax
  406067:	gs iret 
  406069:	dec    esi
  40606a:	cld    
  40606b:	scas   al,BYTE PTR es:[edi]
  40606c:	adc    cl,al
  40606e:	mov    ecx,0xf10881e2
  406073:	test   BYTE PTR [eax],cl
  406075:	xchg   BYTE PTR [ebx-0x2ad0422],cl
  40607b:	daa    
  40607c:	jmp    0x21c526d
  406081:	mov    eax,ds:0xd830667d
  406086:	push   0x968cfee4
  40608b:	adc    ch,cl
  40608d:	mov    esi,0xc253025f
  406092:	es retf 0x5acd
  406096:	sbb    dh,BYTE PTR ds:0x58ab3673
  40609c:	fnsave [ebp+0x18ebb0de]
  4060a2:	or     DWORD PTR [eax-0x54],edx
  4060a5:	xchg   ebp,eax
  4060a6:	call   FWORD PTR [ebp+eax*1+0x29]
  4060aa:	daa    
  4060ab:	lock inc ebp
  4060ad:	jle    0x4060dd
  4060af:	fs pop edi
  4060b1:	inc    ecx
  4060b2:	outs   dx,DWORD PTR ds:[esi]
  4060b3:	lds    edi,FWORD PTR [ebp+0x3c3d17c8]
  4060b9:	and    DWORD PTR [eax],eax
  4060bb:	add    BYTE PTR [esi-0x600bc3f7],cl
  4060c1:	jge    0x40611a
  4060c3:	adc    dh,dl
  4060c5:	ret    0x4e0d
  4060c8:	jno    0x406078
  4060ca:	test   eax,0x6a424f7f
  4060cf:	dec    edx
  4060d0:	inc    ebp
  4060d1:	jns    0x40609d
  4060d3:	push   esp
  4060d4:	adc    di,WORD PTR [ebx-0x2e6992d5]
  4060db:	retf   0x59f6
  4060de:	enter  0x2c63,0xe0
  4060e2:	mov    eax,ds:0x16bc87d4
  4060e7:	scas   eax,DWORD PTR es:[edi]
  4060e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e9:	xor    eax,0x7a5220fa
  4060ee:	and    DWORD PTR [edi-0x61],ebx
  4060f1:	jno    0x406164
  4060f3:	sbb    DWORD PTR [esi+0x6a588be8],ebp
  4060f9:	rcr    BYTE PTR [esi+0x2cd9558],0xfc
  406100:	cmc    
  406101:	mov    WORD PTR [esi],ds
  406103:	or     bh,BYTE PTR [edx]
  406105:	shl    DWORD PTR [eax+0x5d69034e],0xb8
  40610c:	syscall 
  40610e:	cmp    DWORD PTR [edi],esi
  406110:	aam    0x68
  406112:	(bad)  
  406113:	call   0xc43548cd
  406118:	xchg   ecx,eax
  406119:	loop   0x4060f2
  40611b:	pushf  
  40611c:	ret    
  40611d:	and    al,0x8c
  40611f:	adc    esp,DWORD PTR [edx+0x42]
  406122:	shr    DWORD PTR [ebp+eax*8+0x30],1
  406126:	imul   ebx,DWORD PTR [esi+ecx*1-0x7bf61487],0xf01981e4
  406131:	adc    bh,dh
  406133:	out    dx,eax
  406134:	inc    edi
  406135:	sbb    ebx,DWORD PTR [ecx-0x16]
  406138:	sti    
  406139:	cli    
  40613a:	clc    
  40613b:	add    DWORD PTR [ebx+eiz*2-0x1a305eb9],esp
  406142:	aaa    
  406143:	sbb    edx,DWORD PTR [ecx+0x2e524e08]
  406149:	sbb    al,0x8
  40614b:	pop    ds
  40614c:	inc    edx
  40614d:	xlat   BYTE PTR ds:[ebx]
  40614e:	pop    ebp
  40614f:	es jl  0x4060fb
  406152:	mov    ds:0xd36867ff,eax
  406157:	rcr    BYTE PTR [ecx-0x28b7c01e],0x69
  40615e:	xchg   esp,eax
  40615f:	shr    edi,0x7e
  406162:	push   ecx
  406163:	fwait
  406164:	pop    esp
  406165:	jmp    0xe52cf32f
  40616a:	in     al,0xaa
  40616c:	pop    ebx
  40616d:	nop
  40616e:	ds leave 
  406170:	adc    ecx,DWORD PTR [ecx-0x52]
  406173:	aad    0x4
  406175:	xor    dh,BYTE PTR [edi-0xb]
  406178:	pop    eax
  406179:	pop    ds
  40617a:	jl     0x4061b5
  40617c:	add    BYTE PTR [edi-0x4a4432f4],bh
  406182:	cmp    cl,BYTE PTR [edx-0x5f]
  406185:	leave  
  406186:	icebp  
  406187:	stos   DWORD PTR es:[edi],eax
  406188:	pushf  
  406189:	dec    esp
  40618a:	sbb    al,0x37
  40618c:	push   cs
  40618d:	out    0xf5,eax
  40618f:	into   
  406190:	ja     0x4061e3
  406192:	fsubr  st(3),st
  406194:	jne    0x406211
  406196:	sti    
  406197:	fistp  DWORD PTR [ebx]
  406199:	into   
  40619a:	fidiv  WORD PTR [esi+0x31]
  40619d:	(bad)  
  40619e:	clc    
  40619f:	fld    DWORD PTR [edx+0x78]
  4061a2:	adc    BYTE PTR [edx+0x116aeb7c],0xc
  4061a9:	jne    0x406136
  4061ab:	cs mov esi,0xe0a30d5c
  4061b1:	fst    QWORD PTR [edi-0x61]
  4061b4:	cs int 0xa5
  4061b7:	int    0x25
  4061b9:	(bad)  
  4061ba:	(bad)
  4061be:	ss inc eax
  4061c0:	call   0xa88c:0x563d2628
  4061c7:	imul   edx,ebx,0xfffffff1
  4061ca:	xor    ebp,DWORD PTR [eax+0x673c4640]
  4061d0:	cdq    
  4061d1:	pop    DWORD PTR [ebx]
  4061d3:	pusha  
  4061d4:	enter  0xac50,0x71
  4061d8:	xor    ebp,ebp
  4061da:	adc    eax,ebx
  4061dc:	jp     0x40615f
  4061de:	pop    ds
  4061df:	mov    WORD PTR [ebx+0x8],?
  4061e2:	inc    ebx
  4061e3:	imul   DWORD PTR [edx*1+0x351ed372]
  4061ea:	push   edx
  4061eb:	ret    
  4061ec:	es ja  0x4061af
  4061ef:	shl    dh,0x40
  4061f2:	out    0x59,al
  4061f4:	(bad)  
  4061f5:	mov    edi,DWORD PTR [edx]
  4061f7:	push   cs
  4061f8:	es mov ch,0x3d
  4061fb:	test   dl,bl
  4061fd:	and    BYTE PTR [edx+0x53],ch
  406200:	dec    esp
  406201:	fwait
  406202:	retf   
  406203:	test   DWORD PTR [ebx+0x5b],0xda297a4d
  40620a:	je     0x40619b
  40620c:	(bad)  
  40620d:	pop    ebx
  40620e:	jge    0x40625f
  406210:	fidiv  WORD PTR [ebp+0x503f58c]
  406216:	ins    BYTE PTR es:[edi],dx
  406217:	fimul  WORD PTR [esi+0x28c76ea8]
  40621d:	cmc    
  40621e:	pop    ss
  40621f:	add    al,0x68
  406221:	pop    DWORD PTR [ebx-0xe]
  406224:	mov    ah,0x8b
  406226:	pop    esi
  406227:	ja     0x406251
  406229:	xor    esp,edx
  40622b:	and    al,BYTE PTR [eax+0x5c8606c2]
  406231:	xor    edi,DWORD PTR [edi]
  406233:	push   0xffffff90
  406235:	aad    0x5f
  406237:	clc    
  406238:	fwait
  406239:	hlt    
  40623a:	adc    dh,bl
  40623c:	in     eax,0xf8
  40623e:	jmp    0xc4ae:0xc81f47fb
  406245:	xor    al,0xfa
  406247:	xor    cl,bh
  406249:	and    al,0xbb
  40624b:	loopne 0x406254
  40624d:	psubb  mm3,QWORD PTR [esp+edi*8-0x5e58bc77]
  406255:	push   cs
  406256:	mov    bl,BYTE PTR ds:0x84c0e6db
  40625c:	js     0x4061e1
  40625e:	outs   dx,BYTE PTR ds:[esi]
  40625f:	not    DWORD PTR [edi]
  406261:	shl    edx,0xc7
  406264:	sub    DWORD PTR [esi+0x19a94d71],eax
  40626a:	mov    cl,0x58
  40626c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626d:	jecxz  0x4062db
  40626f:	(bad)  [edx-0x1d3f16d0]
  406275:	fst    QWORD PTR [edi]
  406277:	push   ebx
  406278:	test   DWORD PTR [ecx-0x6d],0x5771b67a
  40627f:	aas    
  406280:	mov    ecx,0x302320aa
  406285:	push   esp
  406286:	rep outs dx,BYTE PTR ds:[esi]
  406288:	popa   
  406289:	out    dx,al
  40628a:	es pop esp
  40628c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40628d:	cs and eax,0x26fc04da
  406293:	les    edi,FWORD PTR [esi-0x3e]
  406296:	iret   
  406297:	push   0x8df9a207
  40629c:	xchg   DWORD PTR [ebp+0x78],esp
  40629f:	cmp    ebp,esi
  4062a1:	out    dx,eax
  4062a2:	or     al,0xf0
  4062a4:	sub    DWORD PTR [ebx+0x46],ebx
  4062a7:	xor    ebx,eax
  4062a9:	push   edx
  4062aa:	dec    esp
  4062ab:	push   eax
  4062ac:	adc    al,0xcc
  4062ae:	xor    eax,0x62c8be8f
  4062b3:	into   
  4062b4:	and    al,0xe2
  4062b6:	jns    0x4062f7
  4062b8:	gs pop ecx
  4062ba:	icebp  
  4062bb:	dec    esi
  4062bc:	mov    eax,ds:0xc3bd66c3
  4062c1:	into   
  4062c2:	and    eax,DWORD PTR [edi-0x76]
  4062c5:	mov    dh,0xa5
  4062c7:	es dec esp
  4062c9:	cld    
  4062ca:	dec    edi
  4062cb:	aad    0xed
  4062cd:	pop    eax
  4062ce:	in     eax,0xbb
  4062d0:	pushf  
  4062d1:	add    BYTE PTR [edi+0x56],cl
  4062d4:	fistp  DWORD PTR [esi+edi*2-0x26cd8cb5]
  4062db:	mov    edi,0x940a0ca
  4062e0:	xchg   esi,eax
  4062e1:	sti    
  4062e2:	imul   esp,DWORD PTR [ebp-0x39933d81],0xe460409f
  4062ec:	push   esp
  4062ed:	sar    DWORD PTR [eax],1
  4062ef:	xlat   BYTE PTR ds:[ebx]
  4062f0:	test   DWORD PTR [ebp-0x5a294c29],edx
  4062f6:	jl     0x406313
  4062f8:	and    al,0x69
  4062fa:	jg     0x4062b5
  4062fc:	cs dec ecx
  4062fe:	jnp    0x40630c
  406300:	inc    eax
  406301:	xchg   esi,eax
  406302:	adc    ebx,eax
  406304:	repz fadd DWORD PTR ds:0xaaab01f7
  40630b:	sub    eax,ebx
  40630d:	mov    esi,0xcb9a769f
  406312:	jnp    0x4062d1
  406314:	loope  0x4062ab
  406316:	(bad)  
  406317:	out    0x78,eax
  406319:	lods   al,BYTE PTR ds:[esi]
  40631a:	cdq    
  40631b:	jno    0x4062ef
  40631d:	(bad)  [eax+eax*8-0xbdf940b]
  406324:	push   edx
  406325:	or     al,0x7a
  406327:	jno    0x4063a1
  406329:	test   DWORD PTR ds:0x38be4e1f,esp
  40632f:	ret    0x6276
  406332:	pop    esi
  406333:	fsub   QWORD PTR [edx]
  406335:	(bad)  
  406336:	mov    edx,0xd47ca1a7
  40633b:	rcr    DWORD PTR [esi],1
  40633d:	call   0xcc90:0xcbabac20
  406344:	dec    ebx
  406345:	repnz inc edx
  406347:	fldcw  WORD PTR [eax]
  406349:	push   eax
  40634a:	pop    ebx
  40634b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634c:	jg     0x406359
  40634e:	pop    ss
  40634f:	jge    0x406362
  406351:	call   0x82d76931
  406356:	pusha  
  406357:	inc    ebp
  406358:	xchg   edx,eax
  406359:	cmp    eax,0x5b0ca2ec
  40635e:	jmp    FWORD PTR [edi+0x2f84138b]
  406364:	xchg   BYTE PTR [ebx+0x5d],dh
  406367:	loope  0x40631f
  406369:	push   ebx
  40636a:	ror    DWORD PTR [esi-0x5f],cl
  40636d:	and    al,0xef
  40636f:	(bad)  
  406370:	sub    ah,BYTE PTR gs:[edi+0x6148196f]
  406377:	clc    
  406378:	test   cl,bl
  40637a:	(bad)  
  40637b:	fisub  DWORD PTR [esp+eax*1-0x73]
  40637f:	mov    ah,0x91
  406381:	add    ebx,DWORD PTR [ecx-0x2c230086]
  406387:	mov    bh,0xdb
  406389:	test   eax,0x21305762
  40638e:	pop    ebx
  40638f:	xchg   esp,eax
  406390:	mov    ch,0xcb
  406392:	pop    ebp
  406393:	add    eax,0xb27d1b5d
  406398:	mov    esp,0x1c9fcaf0
  40639d:	cmp    eax,0xd95107d4
  4063a2:	dec    esp
  4063a3:	add    bl,BYTE PTR [ecx+0x1b63d95e]
  4063a9:	push   ebp
  4063aa:	sbb    ah,0x3a
  4063ad:	mov    edi,0x1e814c42
  4063b2:	add    dl,BYTE PTR [edi+ebp*2-0x62]
  4063b6:	pusha  
  4063b7:	ins    BYTE PTR es:[edi],dx
  4063b8:	fs rcl esp,0x2c
  4063bc:	es mov dh,0xb8
  4063bf:	in     eax,dx
  4063c0:	shl    DWORD PTR [edx+0x10],cl
  4063c3:	cmp    ecx,edx
  4063c5:	xor    BYTE PTR [edx+0x48ae9e82],0x76
  4063cc:	mov    ch,0x66
  4063ce:	pusha  
  4063cf:	call   0x10db:0x302027be
  4063d6:	mov    cl,0x14
  4063d8:	fmul   DWORD PTR [ebp-0xd]
  4063db:	cdq    
  4063dc:	push   cs
  4063dd:	in     eax,dx
  4063de:	xchg   edi,eax
  4063df:	js     0x4063b1
  4063e1:	mov    BYTE PTR [esi],cl
  4063e3:	js     0x406426
  4063e5:	mov    bl,0x32
  4063e7:	sub    eax,0x74dee69b
  4063ec:	dec    edi
  4063ed:	das    
  4063ee:	cwde   
  4063ef:	(bad)  
  4063f0:	popa   
  4063f1:	pop    es
  4063f2:	rcr    BYTE PTR [ebp+0x4d],1
  4063f5:	les    esp,FWORD PTR [edx+0x48]
  4063f8:	cmp    BYTE PTR [edx+0x73ebb488],ah
  4063fe:	dec    esp
  4063ff:	push   cs
  406400:	mov    esi,0xe5c1a331
  406405:	fdiv   st,st(4)
  406407:	mov    ch,0x0
  406409:	out    dx,eax
  40640a:	(bad)  
  40640b:	leave  
  40640c:	stos   DWORD PTR es:[edi],eax
  40640d:	(bad)  
  40640e:	fist   DWORD PTR [edx]
  406410:	test   al,0x55
  406412:	retf   0x1d7a
  406415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406416:	or     esp,DWORD PTR [edx+0x54]
  406419:	push   ebx
  40641a:	lods   al,BYTE PTR ds:[esi]
  40641b:	cmp    ah,ch
  40641d:	fisubr WORD PTR [ebx-0x33]
  406420:	or     ebx,esi
  406422:	gs inc ebx
  406424:	stc    
  406425:	mov    cl,0x33
  406427:	inc    edi
  406428:	jmp    0xdf55:0xa8b44894
  40642f:	cwde   
  406430:	(bad)  
  406433:	adc    edx,DWORD PTR [esi-0x80]
  406436:	dec    ebp
  406437:	out    0x51,al
  406439:	push   0x42
  40643b:	(bad)  
  40643c:	out    0xe3,al
  40643e:	sub    DWORD PTR [eax+0x8],0x98b23c91
  406445:	lods   al,BYTE PTR ds:[esi]
  406446:	mov    edx,0x2f3b2ff7
  40644b:	test   DWORD PTR [edi+0x5c],ebp
  40644e:	dec    edx
  40644f:	dec    esi
  406450:	jb     0x406486
  406452:	adc    DWORD PTR [edx+0x48],ebx
  406455:	inc    ebp
  406456:	nop
  406457:	cmc    
  406458:	jns    0x4064bc
  40645a:	std    
  40645b:	mov    dl,0x88
  40645d:	push   0xfffffff8
  40645f:	ror    DWORD PTR [edx+0x4c],0xd2
  406463:	imul   edx,DWORD PTR [esi-0x56d897b6],0x616daafc
  40646d:	imul   edx,DWORD PTR [ebx+eiz*2+0x5e],0x10
  406472:	adc    eax,0xce16cabe
  406477:	and    eax,DWORD PTR [eax+0x52]
  40647a:	adc    ebx,0xc8ce58b3
  406480:	pop    eax
  406481:	daa    
  406482:	mov    eax,ds:0x89231d88
  406487:	call   0x8bf1dd6
  40648c:	adc    eax,0x8c38b8f6
  406491:	inc    ebx
  406492:	out    0x3a,eax
  406494:	mov    bh,bl
  406496:	cs xchg edi,eax
  406498:	iret   
  406499:	stos   BYTE PTR es:[edi],al
  40649a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40649b:	dec    ebx
  40649c:	dec    esi
  40649d:	bound  eax,QWORD PTR [ebx+0x2156c0cb]
  4064a3:	imul   esi,DWORD PTR [esi+0x5756f943],0x1d
  4064aa:	dec    esi
  4064ab:	dec    ebp
  4064ac:	aad    0xc3
  4064ae:	jge    0x4064be
  4064b0:	cwde   
  4064b1:	mov    ecx,0x5e51b112
  4064b6:	sub    al,0x8
  4064b8:	pusha  
  4064b9:	inc    esi
  4064ba:	and    edx,ebx
  4064bc:	push   edx
  4064bd:	cmp    dh,bh
  4064bf:	mov    bl,0xfb
  4064c1:	lea    ecx,[ebp-0x850d43]
  4064c7:	in     al,0x8c
  4064c9:	pop    esp
  4064ca:	pop    ebx
  4064cb:	sar    DWORD PTR [esi-0xd],1
  4064ce:	loop   0x406461
  4064d0:	add    DWORD PTR [edx],ebx
  4064d2:	push   edx
  4064d3:	popa   
  4064d4:	hlt    
  4064d5:	sub    ch,BYTE PTR [esi+0x3a6e2d20]
  4064db:	sub    al,0x27
  4064dd:	xchg   ebp,eax
  4064de:	and    DWORD PTR [ecx-0x48],ecx
  4064e1:	je     0x40653b
  4064e3:	out    dx,eax
  4064e4:	add    ebx,DWORD PTR ss:[ebp+0x639553d2]
  4064eb:	dec    ecx
  4064ec:	mov    eax,0x51712a06
  4064f1:	out    dx,al
  4064f2:	dec    esp
  4064f3:	arpl   WORD PTR [edx+0x5830d7d5],dx
  4064f9:	mov    eax,0xb585a654
  4064fe:	xchg   ebp,eax
  4064ff:	bnd ret 0x9f47
  406503:	mov    ecx,0x5594af8
  406508:	into   
  406509:	or     ecx,ecx
  40650b:	xor    al,0xab
  40650d:	pop    eax
  40650e:	sbb    eax,0xb3f096ce
  406513:	sub    ebx,DWORD PTR [edx-0x432857aa]
  406519:	xlat   BYTE PTR ds:[ebx]
  40651a:	cli    
  40651b:	sbb    ecx,DWORD PTR [ecx]
  40651d:	xor    dl,BYTE PTR [eax]
  40651f:	fmul   st,st(4)
  406521:	jb     0x40654d
  406523:	xchg   edx,eax
  406524:	push   ecx
  406525:	add    esi,esi
  406527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406528:	int    0x4e
  40652a:	xchg   ebp,eax
  40652b:	pop    ds
  40652c:	cmp    al,0xf7
  40652e:	out    0xcc,eax
  406530:	cmp    al,0xb1
  406532:	push   cs
  406533:	retf   0x2a75
  406536:	cwde   
  406537:	xor    BYTE PTR [ebp-0x2],cl
  40653a:	adc    BYTE PTR [ebx-0x68d36000],ch
  406540:	xor    al,0x82
  406542:	dec    eax
  406543:	mov    edi,0x682a139e
  406548:	dec    esp
  406549:	xlat   BYTE PTR ds:[ebx]
  40654a:	adc    esi,esp
  40654c:	clc    
  40654d:	loop   0x40653f
  40654f:	jns    0x40657e
  406551:	or     al,0x0
  406553:	dec    eax
  406554:	ret    
  406555:	(bad)  
  406556:	stos   BYTE PTR es:[edi],al
  406557:	or     al,0x74
  406559:	lods   eax,DWORD PTR ds:[esi]
  40655a:	xchg   DWORD PTR [edi],ebx
  40655c:	or     edx,DWORD PTR [ecx]
  40655e:	(bad)  
  40655f:	aam    0x69
  406561:	inc    edx
  406562:	fistp  WORD PTR ds:0xf81c2890
  406568:	add    bh,BYTE PTR [esi]
  40656a:	sahf   
  40656b:	cmp    ecx,eax
  40656d:	sub    DWORD PTR [edx],0xc4564f7e
  406573:	fidivr DWORD PTR [ebx+0x6edd58ea]
  406579:	and    al,BYTE PTR ds:0x9fdf041
  40657f:	sub    eax,0xd5aae7b7
  406584:	add    al,0xe5
  406586:	add    ecx,edx
  406588:	mov    bl,0x21
  40658a:	retf   
  40658b:	sub    DWORD PTR [eax+esi*8+0x309e9935],esp
  406592:	push   0xffffffbf
  406594:	adc    ebp,edi
  406596:	xchg   ebp,eax
  406597:	mov    ds:0x9a944de4,al
  40659c:	sbb    ecx,DWORD PTR [esi+ecx*8-0x2d]
  4065a0:	leave  
  4065a1:	imul   esi,DWORD PTR [edx],0x58
  4065a4:	pushf  
  4065a5:	sub    ebp,edx
  4065a7:	jmpw   0xafee
  4065ab:	push   esp
  4065ac:	int    0x78
  4065ae:	adc    al,0x47
  4065b0:	push   cs
  4065b1:	in     al,dx
  4065b2:	pop    ebx
  4065b3:	das    
  4065b4:	sub    ecx,DWORD PTR [edx+0x50]
  4065b7:	dec    edi
  4065b8:	enter  0x7da1,0x71
  4065bc:	add    edx,ebx
  4065be:	les    edx,FWORD PTR [ebx]
  4065c0:	mov    edx,0xfd6a86f
  4065c5:	clc    
  4065c6:	and    eax,0x7de262c
  4065cb:	ins    BYTE PTR es:[edi],dx
  4065cc:	mov    ds:0xc76bb86d,eax
  4065d1:	push   ds
  4065d2:	pop    edi
  4065d3:	test   eax,0x6c133beb
  4065d8:	jg     0x406640
  4065da:	xlat   BYTE PTR ds:[ebx]
  4065db:	cmc    
  4065dc:	mov    ecx,0x8a8807c9
  4065e1:	push   ebp
  4065e2:	gs add al,0x4a
  4065e5:	sbb    ch,bh
  4065e7:	xchg   ebx,eax
  4065e8:	sbb    eax,0xa8e3f225
  4065ed:	call   0x4ae67063
  4065f2:	ins    BYTE PTR es:[edi],dx
  4065f3:	js     0x406599
  4065f5:	je     0x40666a
  4065f7:	mov    edi,0x560682ad
  4065fc:	mov    dh,bl
  4065fe:	mov    dl,0xfc
  406600:	adc    al,0xbc
  406602:	sbb    dh,BYTE PTR [ecx-0x38]
  406605:	(bad)  
  406606:	jmp    0x406676
  406608:	adc    ecx,DWORD PTR [bx+di+0xa]
  40660c:	push   cs
  40660d:	xchg   ebp,eax
  40660e:	adc    BYTE PTR [edi+0x4e],cl
  406611:	pop    ebp
  406612:	ja     0x4065f3
  406614:	pop    edx
  406615:	and    eax,0x351371a7
  40661a:	fmul   QWORD PTR [ebp+0x35294cc1]
  406620:	(bad)
  406624:	sbb    eax,0xd583ea3d
  406629:	in     al,dx
  40662a:	cmc    
  40662b:	mov    al,0xb5
  40662d:	and    cl,BYTE PTR es:[edx+esi*8-0x38]
  406632:	and    eax,0x2f286c4f
  406637:	mov    ds:0xafd24051,eax
  40663c:	repz ret 0x2e27
  406640:	adc    BYTE PTR [ecx],al
  406642:	in     eax,dx
  406643:	sahf   
  406644:	inc    ebp
  406645:	imul   edx,DWORD PTR ds:0x8b2db4b0,0x68
  40664c:	mov    ah,0x70
  40664e:	xchg   BYTE PTR [esi],bh
  406650:	jbe    0x406668
  406652:	pop    edi
  406653:	adc    ah,ah
  406655:	fs jl  0x406635
  406658:	fmul   DWORD PTR [eax-0x30]
  40665b:	pop    ecx
  40665c:	test   eax,0x6ddcfe5d
  406661:	jmp    0xe200:0x88baa228
  406668:	loope  0x406634
  40666a:	fimul  WORD PTR [ebx-0x7704da91]
  406670:	or     DWORD PTR [edi-0x10a4f393],ebp
  406676:	xor    ch,BYTE PTR [ebx]
  406678:	pop    ecx
  406679:	fcmovu st,st(2)
  40667b:	jp     0x406676
  40667d:	imul   ebx,DWORD PTR [eax-0x71],0x16
  406681:	ror    DWORD PTR ds:0x50ab6ae1,1
  406687:	in     eax,0xba
  406689:	push   eax
  40668a:	pusha  
  40668b:	sbb    ax,0x2f9
  40668f:	into   
  406690:	inc    ecx
  406691:	mov    BYTE PTR [ebx-0x53b4a682],ah
  406697:	cli    
  406698:	xchg   esp,eax
  406699:	sti    
  40669a:	push   eax
  40669b:	loopne 0x406629
  40669d:	ins    BYTE PTR es:[edi],dx
  40669e:	arpl   WORD PTR [ecx],si
  4066a0:	mov    esi,edx
  4066a2:	dec    ebp
  4066a3:	js     0x4066b6
  4066a5:	sbb    edi,0x45bd5df2
  4066ab:	imul   esp,DWORD PTR [esi],0xffffffbf
  4066ae:	mov    edi,0xf07d1bf6
  4066b3:	(bad)  
  4066b4:	xchg   ebx,eax
  4066b5:	dec    esi
  4066b6:	jp     0x406734
  4066b8:	aam    0x15
  4066ba:	fsubr  st,st(0)
  4066bc:	add    BYTE PTR [ebp+esi*1+0x49],0x38
  4066c1:	ss (bad) 
  4066c3:	retf   
  4066c4:	mov    cl,0x60
  4066c6:	jg     0x406674
  4066c8:	xor    BYTE PTR [ecx-0x7f377191],0x94
  4066cf:	or     bl,BYTE PTR [esi+0x72]
  4066d2:	cmp    dl,BYTE PTR [edi+0x34e1984e]
  4066d8:	sbb    BYTE PTR [ebx+0x31],bl
  4066db:	out    0x36,al
  4066dd:	mov    edi,0xa8800028
  4066e2:	outs   dx,BYTE PTR ds:[esi]
  4066e3:	rcr    DWORD PTR [edi-0x2f],1
  4066e6:	xchg   edx,eax
  4066e7:	dec    esp
  4066e8:	fs dec edx
  4066ea:	pop    es
  4066eb:	dec    eax
  4066ec:	xchg   edi,eax
  4066ed:	test   eax,0xc3c836c2
  4066f2:	sbb    BYTE PTR [edi-0x55e79693],al
  4066f8:	and    bl,BYTE PTR [ebx]
  4066fa:	pop    ebx
  4066fb:	push   ebp
  4066fc:	je     0x406710
  4066fe:	xchg   esi,eax
  4066ff:	inc    edi
  406700:	add    bl,ah
  406702:	fwait
  406703:	adc    eax,0x48ae4769
  406708:	jp     0x40675d
  40670a:	add    al,bh
  40670c:	push   ss
  40670d:	psrlq  mm6,QWORD PTR [edi-0x4a]
  406711:	inc    BYTE PTR [eax]
  406713:	pop    ebp
  406714:	clc    
  406715:	sub    DWORD PTR [edx-0xe],edx
  406718:	and    DWORD PTR [edx],ecx
  40671a:	sbb    dl,BYTE PTR [eax-0x59]
  40671d:	xor    ecx,DWORD PTR [ebp-0x169cdf5f]
  406723:	loopne 0x40677b
  406725:	cld    
  406726:	cmp    DWORD PTR ds:0xa83699b3,ecx
  40672c:	pop    esp
  40672d:	add    DWORD PTR [ebp-0x5d],0x64
  406731:	loope  0x406771
  406733:	std    
  406734:	jle    0x4066d7
  406736:	mov    ecx,0xca60541d
  40673b:	inc    edx
  40673c:	sub    eax,0xf1ff4019
  406741:	daa    
  406742:	mov    dl,0x25
  406744:	mov    esi,0xd3bc24e2
  406749:	cmp    dl,BYTE PTR [eax+0x1449c4cc]
  40674f:	sar    BYTE PTR [esi-0x294be15],cl
  406755:	or     al,0xa9
  406757:	jp     0x406719
  406759:	pusha  
  40675a:	add    al,0x89
  40675c:	adc    edi,DWORD PTR [edi+0x43]
  40675f:	mov    edx,0xfc61d21d
  406764:	(bad)  
  406765:	test   al,0x11
  406767:	loopne 0x406713
  406769:	sub    DWORD PTR [ecx+0x3a],0xffffffc0
  40676d:	int3   
  40676e:	pop    ss
  40676f:	mov    dh,0x66
  406772:	gs add eax,0x2fbee59a
  406778:	xchg   ebx,eax
  406779:	idiv   cl
  40677b:	add    ebx,ebx
  40677d:	jnp    0x4067f6
  40677f:	repnz sbb al,0x5f
  406782:	out    0x19,al
  406784:	aam    0xcb
  406786:	dec    esp
  406787:	xor    DWORD PTR [edi+0x7e],0xe112128
  40678e:	mov    edi,ebp
  406790:	push   esp
  406791:	and    al,BYTE PTR [edx+edi*1]
  406794:	jecxz  0x406805
  406796:	pusha  
  406797:	cmp    dl,BYTE PTR [edi+0x12365a15]
  40679d:	xor    DWORD PTR [ecx-0x50],ecx
  4067a0:	(bad)  
  4067a2:	and    al,0x4f
  4067a4:	sub    eax,0xb89e99f6
  4067a9:	xor    BYTE PTR [esi-0x3190bb61],0x59
  4067b0:	inc    ebp
  4067b1:	jge    0x4067e8
  4067b3:	pop    DWORD PTR [edi]
  4067b5:	jns    0x40682f
  4067b7:	inc    ebx
  4067b8:	js     0x4067f7
  4067ba:	jmp    0x4067e3
  4067bc:	xchg   ecx,eax
  4067bd:	add    eax,0x797d0a55
  4067c2:	or     al,0xd5
  4067c4:	jp     0x406758
  4067c6:	and    edx,ebp
  4067c8:	xchg   esp,eax
  4067c9:	(bad)  
  4067ca:	mov    esi,0x2d853968
  4067cf:	pop    esp
  4067d0:	sub    eax,0x51938c0e
  4067d5:	inc    esp
  4067d6:	bound  esp,QWORD PTR [ebp+0x515d116]
  4067dc:	jmp    0x406812
  4067de:	les    edi,FWORD PTR [ebx]
  4067e0:	hlt    
  4067e1:	scas   eax,DWORD PTR es:[edi]
  4067e2:	das    
  4067e3:	stos   DWORD PTR es:[edi],eax
  4067e4:	lahf   
  4067e5:	in     eax,0x5c
  4067e7:	call   DWORD PTR [ebx]
  4067e9:	mov    esi,0xa9f3f4ec
  4067ee:	rcr    DWORD PTR [ecx+0x1b],1
  4067f1:	xchg   BYTE PTR [esi-0x11],al
  4067f4:	(bad)  
  4067f5:	loopne 0x406822
  4067f7:	mov    bh,0xae
  4067f9:	arpl   WORD PTR [edi],di
  4067fb:	or     ecx,esi
  4067fd:	sub    eax,0x7b360d2d
  406802:	popf   
  406803:	sbb    BYTE PTR [ecx+0x1d],bh
  406806:	inc    ebx
  406807:	add    DWORD PTR [ecx-0x65491c27],ecx
  40680d:	pusha  
  40680e:	mov    al,ds:0xc873bc1d
  406813:	frstor [edi]
  406815:	or     BYTE PTR [edx+0x14],bl
  406818:	leave  
  406819:	sbb    DWORD PTR [ecx],ecx
  40681b:	jmp    0x721b:0x8744cc1e
  406822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406823:	outs   dx,BYTE PTR ds:[esi]
  406824:	scas   al,BYTE PTR es:[edi]
  406825:	push   ecx
  406826:	xchg   edi,eax
  406827:	out    dx,al
  406828:	retf   
  406829:	sub    al,0xe6
  40682b:	repz xor esp,DWORD PTR [esi-0x1fe97101]
  406832:	sbb    cl,BYTE PTR [edi]
  406834:	mov    ch,0x3d
  406836:	outs   dx,BYTE PTR ds:[esi]
  406837:	jae    0x40683d
  406839:	inc    ecx
  40683a:	repnz inc ebx
  40683c:	jae    0x406829
  40683e:	xor    bl,0xc5
  406841:	xor    DWORD PTR [ebx-0x3c37d2a7],ebp
  406847:	gs aaa 
  406849:	add    dl,dh
  40684b:	dec    ebx
  40684c:	mov    esp,0xdb269550
  406851:	mov    ds:0x585edd3a,eax
  406856:	jns    0x406838
  406858:	fsubr  st(0),st
  40685a:	js     0x4068b1
  40685c:	mov    cl,0xf8
  40685e:	je     0x406897
  406860:	repz mov ebx,0x9652aff8
  406866:	push   edi
  406867:	adc    BYTE PTR [ecx+0x47552453],bh
  40686d:	daa    
  40686e:	leave  
  40686f:	dec    ebx
  406870:	loope  0x4068d2
  406872:	mov    bl,BYTE PTR [esi+0x2c]
  406875:	sub    DWORD PTR [ecx+0x5f2772ac],ebp
  40687b:	mov    ch,0xb8
  40687d:	data16 mov bh,BYTE PTR [ecx+ebx*4+0x7e]
  406882:	pop    ss
  406883:	inc    DWORD PTR [ecx+ebp*4]
  406886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406887:	push   ecx
  406888:	adc    al,0x1e
  40688a:	add    ebp,DWORD PTR [ecx]
  40688c:	push   esp
  40688d:	mov    BYTE PTR [esi-0x8edff4a],0xca
  406894:	add    al,0xe
  406896:	mov    eax,0x9b6b2c39
  40689b:	js     0x4068e4
  40689d:	sahf   
  40689e:	sub    esp,ecx
  4068a0:	rcl    dl,0xaf
  4068a3:	xor    BYTE PTR [ecx+0x1c46cf5c],ah
  4068a9:	dec    ebp
  4068aa:	mov    ebx,0xc0bc739d
  4068af:	gs (bad) 
  4068b2:	mov    bh,0x9d
  4068b4:	in     al,dx
  4068b5:	bnd jo 0x40692e
  4068b8:	mov    ebp,0x6ad78b38
  4068bd:	fs jge 0x406936
  4068c0:	jle    0x40687c
  4068c2:	dec    ecx
  4068c3:	int    0xfe
  4068c5:	xor    eax,0x88f18482
  4068ca:	test   eax,0xfa5bcc7d
  4068cf:	pop    ebp
  4068d0:	test   DWORD PTR [ebx+0x5237e10c],eax
  4068d6:	test   al,0xff
  4068d8:	xor    BYTE PTR [ecx-0x3b],al
  4068db:	ins    DWORD PTR es:[edi],dx
  4068dc:	dec    ebx
  4068dd:	shl    BYTE PTR [esi+0x55],1
  4068e0:	out    dx,eax
  4068e1:	xor    al,0xce
  4068e3:	pop    ebp
  4068e4:	ja     0x4068f2
  4068e6:	int    0xe6
  4068e8:	push   edx
  4068e9:	mov    edi,0xafc46911
  4068ee:	jle    0x40688e
  4068f0:	push   ds
  4068f1:	adc    ch,BYTE PTR [ecx+ebx*2]
  4068f4:	(bad)  
  4068f5:	aas    
  4068f6:	retf   0xfc00
  4068f9:	sub    ecx,DWORD PTR [eax-0x22e351a8]
  4068ff:	mov    bl,0x67
  406901:	mov    WORD PTR [ecx+edi*1+0x4c73db0e],gs
  406908:	(bad)  
  406909:	je     0x406894
  40690b:	mov    fs,WORD PTR [ebx+eiz*8-0x72c3da08]
  406912:	data16 shl BYTE PTR [ecx-0x2f],0x2e
  406917:	mov    ebp,0x467c028e
  40691c:	rcl    BYTE PTR [ebp-0x39],0xf9
  406920:	cmc    
  406921:	push   ds
  406922:	mov    edi,0xe4cbb821
  406927:	pop    ss
  406928:	das    
  406929:	inc    ebx
  40692a:	adc    bh,al
  40692c:	inc    ecx
  40692d:	dec    edi
  40692e:	and    al,0x3e
  406930:	jmp    0xd9f35f00
  406935:	mov    ds:0x1b2ec277,al
  40693a:	int    0x80
  40693c:	fs push cs
  40693e:	gs int 0x61
  406941:	inc    eax
  406942:	push   ebp
  406943:	mov    dh,0x8e
  406945:	cmp    BYTE PTR [edi+0x5f],dh
  406948:	cmp    eax,0x12ab61f6
  40694d:	leave  
  40694e:	push   esp
  40694f:	cdq    
  406950:	mov    ss,WORD PTR [esi+0x54]
  406953:	mov    ebp,0x439b9864
  406958:	test   al,0xc7
  40695a:	lods   eax,DWORD PTR ds:[esi]
  40695b:	jno    0x40699d
  40695d:	push   ss
  40695e:	sbb    DWORD PTR [ecx-0x35c072f],ebp
  406964:	mov    eax,0x79d538b
  406969:	ja     0x40691a
  40696b:	dec    ebx
  40696c:	jg     0x406912
  40696e:	or     bl,BYTE PTR [edi+0x0]
  406971:	ror    BYTE PTR [eax-0x4f2d6980],1
  406977:	xor    DWORD PTR [edi],edx
  406979:	aas    
  40697a:	adc    DWORD PTR [ecx],esp
  40697c:	mov    al,BYTE PTR [esi+eax*1-0x3d10cabb]
  406983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406984:	cmc    
  406985:	ret    
  406986:	daa    
  406987:	shl    BYTE PTR [ecx-0x58],0x5b
  40698b:	jge    0x4069cb
  40698d:	inc    ebx
  40698e:	and    BYTE PTR [eax-0x1d],bh
  406991:	ds and esi,ecx
  406994:	adc    ah,BYTE PTR [ebx+0x27]
  406997:	les    edx,FWORD PTR [ebx]
  406999:	stos   DWORD PTR es:[edi],eax
  40699a:	mov    ebp,0xda82f6f4
  40699f:	(bad)  
  4069a0:	jb     0x40692e
  4069a2:	(bad)  
  4069a3:	pop    esi
  4069a4:	fadd   QWORD PTR [edx]
  4069a6:	pop    edi
  4069a7:	inc    esp
  4069a8:	aas    
  4069a9:	cmp    al,0xef
  4069ab:	rol    dh,1
  4069ad:	or     eax,0x2b6514f7
  4069b2:	test   al,0x8f
  4069b4:	sbb    dh,bh
  4069b6:	mov    eax,0x71f997cd
  4069bb:	repz jb 0x4069ef
  4069be:	dec    ebx
  4069bf:	fidivr WORD PTR [ebp+0x2a]
  4069c2:	mov    DWORD PTR [ebx],edx
  4069c4:	push   es
  4069c5:	push   esp
  4069c6:	pop    ecx
  4069c7:	or     al,0x4b
  4069c9:	ds push eax
  4069cb:	and    DWORD PTR [edx+0x2c],ebx
  4069ce:	xchg   edx,eax
  4069cf:	ret    0x25aa
  4069d2:	enter  0x6331,0x16
  4069d6:	mov    dh,0x30
  4069d8:	pop    ecx
  4069d9:	sti    
  4069da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069db:	mov    ecx,0xa3d01058
  4069e0:	setle  bl
  4069e3:	push   edi
  4069e4:	or     eax,0x7983e78a
  4069e9:	mov    al,ds:0x5155872
  4069ee:	mov    es,WORD PTR [esi+0x75]
  4069f1:	adc    BYTE PTR ds:0x72bbdf8f,0x59
  4069f8:	(bad)  
  4069fa:	scas   eax,DWORD PTR es:[edi]
  4069fb:	jo     0x4069e3
  4069fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069fe:	sub    ebp,0xffffffc0
  406a01:	mov    ds:0xb0e1a576,al
  406a06:	push   edx
  406a07:	(bad)  
  406a08:	pop    esp
  406a09:	sbb    dl,BYTE PTR [ecx-0x4aa50fed]
  406a0f:	int    0x85
  406a11:	pop    ebp
  406a12:	mov    ds:0xf792b5cc,al
  406a17:	sub    eax,0xbc79e983
  406a1c:	xor    edx,esi
  406a1e:	pop    es
  406a1f:	mov    ds:0x26ee0ca3,eax
  406a24:	addr16 xchg edx,eax
  406a26:	retf   0x3bb1
  406a29:	retf   0xd867
  406a2c:	fimul  DWORD PTR [edx+0x68b562a]
  406a32:	and    bh,BYTE PTR [esi-0x45]
  406a35:	mov    esp,0xeaf0193f
  406a3a:	inc    ecx
  406a3b:	push   edi
  406a3c:	inc    ecx
  406a3d:	cs retf 0x6677
  406a41:	pop    esp
  406a42:	sbb    ah,cl
  406a44:	and    al,0x3b
  406a46:	rcl    BYTE PTR [ebx-0x5ae96372],0x1a
  406a4d:	xor    DWORD PTR [edi],eax
  406a4f:	mov    BYTE PTR [edi+edi*4-0x32],ah
  406a53:	stc    
  406a54:	xchg   esi,eax
  406a55:	ror    DWORD PTR [edi-0x280bce48],cl
  406a5b:	xor    BYTE PTR [esp+ebx*8],ch
  406a5e:	xor    ah,0x2e
  406a61:	xchg   esi,eax
  406a62:	sbb    al,0x7c
  406a64:	mul    BYTE PTR [ebx]
  406a66:	mov    ds:0x197f3cab,eax
  406a6b:	sbb    al,0xd
  406a6d:	dec    ebx
  406a6e:	call   0xcd97e950
  406a73:	(bad)  
  406a74:	add    al,0x5e
  406a76:	xchg   DWORD PTR [ebp-0x22969297],ecx
  406a7c:	je     0x406a58
  406a7e:	fistp  WORD PTR [ecx]
  406a80:	outs   dx,DWORD PTR gs:[esi]
  406a82:	dec    eax
  406a83:	daa    
  406a84:	jbe    0x406a3e
  406a86:	mov    ecx,DWORD PTR [eax-0x4c]
  406a89:	sub    DWORD PTR [eax-0x7e],0xffffffa1
  406a8d:	push   ebx
  406a8e:	loope  0x406a2b
  406a90:	imul   ebx,DWORD PTR [eax],0x7361743
  406a96:	leave  
  406a97:	lock shl ch,1
  406a9a:	xor    al,0xca
  406a9c:	clc    
  406a9d:	repnz icebp 
  406a9f:	mov    ch,0xf
  406aa1:	lock in al,dx
  406aa3:	xchg   ebx,eax
  406aa4:	mov    al,0x70
  406aa6:	sbb    bl,BYTE PTR [eax-0x1c]
  406aa9:	fnsave [ecx-0x19]
  406aac:	and    DWORD PTR [edx-0x19],0xa0e9dbd1
  406ab3:	mov    edx,edx
  406ab5:	mov    ah,0xd0
  406ab7:	call   0xd5b0:0x49c6904a
  406abe:	loopne 0x406b38
  406ac0:	add    DWORD PTR [ecx-0x12a42ce7],esi
  406ac6:	sub    eax,0x573137c0
  406acb:	mov    eax,gs
  406acd:	stc    
  406ace:	jp     0x406a7b
  406ad0:	outs   dx,DWORD PTR ds:[esi]
  406ad1:	mov    al,0xf7
  406ad3:	lahf   
  406ad4:	or     DWORD PTR [ebp+0x3bb9962c],ebp
  406ada:	mov    ds:0x837a6073,eax
  406adf:	fcomp  QWORD PTR [eax+0x15780072]
  406ae5:	mov    esp,0xa266dab1
  406aea:	pop    ecx
  406aeb:	adc    DWORD PTR [ebp+0x5a2e7d20],ecx
  406af1:	or     DWORD PTR [ebx+0x2981716d],edx
  406af7:	sbb    ecx,DWORD PTR [edi]
  406af9:	mov    al,0x7c
  406afb:	sbb    eax,edx
  406afd:	push   edi
  406afe:	clc    
  406aff:	sar    DWORD PTR [eax],1
  406b01:	enter  0x2b11,0xb0
  406b05:	cld    
  406b06:	loop   0x406b84
  406b08:	fimul  WORD PTR [ecx-0x6e]
  406b0b:	xor    ecx,ecx
  406b0d:	jmp    0x359bad14
  406b12:	out    0xe2,eax
  406b14:	adc    BYTE PTR [ecx-0x69],cl
  406b17:	ror    BYTE PTR [ecx],0x49
  406b1a:	test   eax,0x51ed56f9
  406b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b20:	add    DWORD PTR ds:0x67f7bf09,edx
  406b26:	cwde   
  406b27:	pop    ss
  406b28:	cmp    eax,0xd6e3f9ce
  406b2d:	lds    ebp,FWORD PTR [ebp+0x3608b153]
  406b33:	test   al,0xf4
  406b35:	sar    BYTE PTR [ecx],0xca
  406b38:	push   esi
  406b39:	cmc    
  406b3a:	inc    ebp
  406b3b:	out    0x17,al
  406b3d:	(bad)  
  406b3e:	sbb    BYTE PTR [esi],dh
  406b40:	adc    DWORD PTR [edi-0x503788d9],0xe62f15e7
  406b4a:	sbb    BYTE PTR [edi-0x71],0x77
  406b4e:	arpl   WORD PTR [eax-0x371bb374],bx
  406b54:	mov    al,es:0xf346cbda
  406b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5b:	xchg   bx,ax
  406b5d:	mov    dh,0xbc
  406b5f:	xchg   esi,eax
  406b60:	or     eax,0xf60b8181
  406b65:	mov    dl,0xc2
  406b67:	mov    ds:0xb94d9eeb,eax
  406b6c:	adc    ebp,DWORD PTR [edx]
  406b6e:	(bad)  
  406b70:	sub    DWORD PTR [esi+0x4ffe1c95],ecx
  406b76:	jl     0x406b2e
  406b78:	test   eax,eax
  406b7a:	inc    eax
  406b7b:	mov    BYTE PTR [edx-0x29d4bcb7],dh
  406b81:	dec    esp
  406b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b84:	pop    eax
  406b85:	lds    edx,FWORD PTR [esi-0x7be86d76]
  406b8b:	mov    bh,0x76
  406b8d:	arpl   WORD PTR [esi-0x42992304],bx
  406b93:	inc    eax
  406b94:	sbb    eax,0x1420fb80
  406b99:	pop    esp
  406b9a:	and    BYTE PTR [edx],0x8a
  406b9d:	xor    al,BYTE PTR [edi+0x590405c]
  406ba3:	ins    DWORD PTR es:[edi],dx
  406ba4:	lahf   
  406ba5:	mov    BYTE PTR [edi+0x427b2360],ah
  406bab:	call   0xdd24:0xbeb96f24
  406bb2:	xchg   ebp,eax
  406bb3:	mov    ch,0x5d
  406bb5:	sbb    al,0xb1
  406bb7:	jecxz  0x406baf
  406bb9:	pop    eax
  406bba:	shl    BYTE PTR [ecx+0x37],cl
  406bbd:	stos   DWORD PTR es:[edi],eax
  406bbe:	xor    ecx,DWORD PTR [eax-0x21]
  406bc1:	(bad)
  406bc4:	jecxz  0x406b7d
  406bc6:	jge    0x406c31
  406bc8:	mov    eax,gs
  406bca:	pop    ebx
  406bcb:	push   esi
  406bcc:	aad    0xe4
  406bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bcf:	mov    ah,0xb0
  406bd1:	mov    ebp,edi
  406bd3:	test   eax,0x15ed7506
  406bd8:	sub    BYTE PTR [esi],ch
  406bda:	sub    al,0x41
  406bdc:	mov    ebx,0xb64c410d
  406be1:	mov    ebp,0xd613dd89
  406be6:	and    eax,esi
  406be8:	jmp    0x68bf:0x37ddd285
  406bef:	(bad)  
  406bf0:	mov    esp,0x2110df0d
  406bf5:	and    DWORD PTR [eax+0x73],ecx
  406bf8:	push   cs
  406bf9:	jae    0x406c03
  406bfb:	push   0xecd0b85b
  406c00:	fild   DWORD PTR [edx+esi*1+0x4efbae5e]
  406c07:	imul   eax,DWORD PTR [ebp+0x21],0x2d
  406c0b:	int3   
  406c0c:	and    eax,DWORD PTR [eax+0x67]
  406c0f:	aaa    
  406c10:	inc    ecx
  406c11:	cmp    esp,DWORD PTR [eax+0x401725c1]
  406c17:	dec    eax
  406c18:	cld    
  406c19:	ret    
  406c1a:	enter  0xbaf2,0x3e
  406c1e:	jns    0x406c5a
  406c20:	mov    edi,0x3eb8032b
  406c25:	inc    edi
  406c26:	mov    cl,0x60
  406c28:	lock sub DWORD PTR [esi+0x3794e04b],eax
  406c2f:	jbe    0x406c9a
  406c31:	push   ebx
  406c32:	ret    
  406c33:	or     ah,BYTE PTR [edi]
  406c35:	sbb    BYTE PTR [esi+eax*2],ah
  406c38:	aas    
  406c39:	(bad)  
  406c3a:	adc    edi,ebp
  406c3c:	div    DWORD PTR [eax+0x31f95a4d]
  406c42:	inc    ecx
  406c43:	mov    edi,0x2b729cdd
  406c48:	fwait
  406c49:	nop
  406c4a:	pop    ecx
  406c4b:	fcomp  QWORD PTR [esi-0x4b6efe87]
  406c51:	push   edi
  406c52:	ss mov esp,0x29f377fc
  406c58:	lock gs xchg esp,eax
  406c5b:	ret    0x7000
  406c5e:	sbb    al,0x7
  406c60:	adc    bh,dh
  406c62:	js     0x406c86
  406c64:	pop    ebx
  406c65:	mov    ebp,0x76c32d90
  406c6a:	out    0x0,eax
  406c6c:	adc    dl,bh
  406c6e:	loope  0x406c93
  406c70:	or     ebx,DWORD PTR [esi-0x38002f3d]
  406c76:	in     al,0x32
  406c78:	add    esi,edx
  406c7a:	fmul   DWORD PTR [eax+0x152d81f9]
  406c80:	cmp    al,0x92
  406c82:	fisttp QWORD PTR [ecx-0x12]
  406c85:	inc    eax
  406c86:	push   ebx
  406c87:	repnz mov ebx,0xdb2a0382
  406c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8e:	sbb    eax,0xdac62404
  406c93:	(bad)  
  406c94:	jge    0x406c45
  406c96:	sub    ah,BYTE PTR [edi]
  406c98:	pusha  
  406c99:	pop    edx
  406c9a:	push   edx
  406c9b:	fs clc 
  406c9d:	or     al,0x84
  406c9f:	cmp    al,0x55
  406ca1:	pop    ss
  406ca2:	in     eax,0x2c
  406ca4:	mov    edi,0xd81291dd
  406ca9:	cs retf 
  406cab:	sub    al,0xb3
  406cad:	sub    bh,dh
  406caf:	icebp  
  406cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb1:	je     0x406c6b
  406cb3:	iret   
  406cb4:	and    ah,BYTE PTR [esi-0x58]
  406cb7:	xor    dl,BYTE PTR [esi-0x80]
  406cba:	or     dl,bl
  406cbc:	into   
  406cbd:	les    edx,FWORD PTR [edi-0x80]
  406cc0:	mov    eax,ds:0xe12acbc4
  406cc5:	or     eax,0x807650ca
  406cca:	adc    edi,eax
  406ccc:	aas    
  406ccd:	and    DWORD PTR [ecx+edi*2-0x6a],ecx
  406cd1:	dec    esp
  406cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd3:	mov    edi,0x74f4cf6c
  406cd8:	mov    al,0xba
  406cda:	shr    BYTE PTR [esi+0x34],cl
  406cdd:	xchg   esi,eax
  406cde:	pop    ebx
  406cdf:	xchg   ecx,eax
  406ce0:	dec    esp
  406ce1:	cmp    cl,BYTE PTR [eax]
  406ce3:	mov    esp,0x23c141bd
  406ce8:	leave  
  406ce9:	sbb    BYTE PTR [ecx-0x1a],0x5c
  406ced:	jp     0x406d66
  406cef:	dec    esp
  406cf0:	inc    ebp
  406cf1:	out    dx,eax
  406cf2:	ret    
  406cf3:	sti    
  406cf4:	fdiv   st,st(5)
  406cf6:	dec    bh
  406cf8:	aam    0x36
  406cfa:	adc    eax,0x916120f5
  406cff:	pushf  
  406d00:	lods   al,BYTE PTR ds:[esi]
  406d01:	sbb    DWORD PTR [ecx+0x5b],edi
  406d04:	das    
  406d05:	jmp    0x202e:0xafd80358
  406d0c:	cmp    esp,DWORD PTR [ebx-0x2307b76]
  406d12:	mov    ah,0x67
  406d14:	shl    DWORD PTR [edx-0x708ee47f],cl
  406d1a:	(bad)  
  406d1b:	jns    0x406cef
  406d1d:	inc    esi
  406d1e:	and    al,0x54
  406d20:	push   eax
  406d21:	and    DWORD PTR ds:0xdd3fa1e4,edx
  406d27:	aaa    
  406d28:	and    eax,0xdadcb42
  406d2d:	pop    edx
  406d2e:	add    eax,0xda006f82
  406d33:	cmp    DWORD PTR [ebp+edi*8+0xbc2f15c],edx
  406d3a:	xchg   edi,eax
  406d3b:	lea    edi,[esi-0x1e]
  406d3e:	adc    BYTE PTR [edi],al
  406d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d41:	dec    eax
  406d42:	stos   DWORD PTR es:[edi],eax
  406d43:	dec    ebx
  406d44:	pop    ss
  406d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d46:	loope  0x406d8b
  406d48:	lahf   
  406d49:	popa   
  406d4a:	xchg   ebp,eax
  406d4b:	pop    ebx
  406d4c:	pop    es
  406d4d:	je     0x406dce
  406d4f:	pop    ecx
  406d50:	aas    
  406d51:	hlt    
  406d52:	adc    bh,bl
  406d54:	cmp    al,0xb9
  406d56:	jecxz  0x406d28
  406d58:	pop    ebp
  406d59:	scas   al,BYTE PTR es:[edi]
  406d5a:	jmp    FWORD PTR [eax]
  406d5c:	xchg   BYTE PTR [ebx],bl
  406d5e:	dec    ecx
  406d5f:	lock ret 
  406d61:	jnp    0x406d4d
  406d63:	test   al,0x3e
  406d65:	enter  0xcf41,0x66
  406d69:	adc    DWORD PTR ds:0xce66064a,ecx
  406d6f:	mov    ah,0x4a
  406d71:	jecxz  0x406d2a
  406d73:	imul   esi,DWORD PTR [eax],0x7c
  406d76:	rol    BYTE PTR [eax],0x98
  406d79:	fdivr  DWORD PTR [ecx-0x74]
  406d7c:	rcl    DWORD PTR [esi+0x3518b7f5],cl
  406d82:	dec    eax
  406d83:	jb     0x406d79
  406d85:	cmc    
  406d86:	cmp    DWORD PTR [edx-0x33],edi
  406d89:	jge    0x406da7
  406d8b:	mov    WORD PTR [esi],ds
  406d8d:	xlat   BYTE PTR ds:[ebx]
  406d8e:	xchg   edx,eax
  406d8f:	pop    es
  406d90:	xchg   ebx,eax
  406d91:	xchg   DWORD PTR [edi+0x21],eax
  406d94:	adc    BYTE PTR [ecx+ebx*8+0x33],0xb9
  406d99:	ja     0x406d87
  406d9b:	call   0x56e55d5f
  406da0:	ret    
  406da1:	or     BYTE PTR [ebx+0x8],dh
  406da4:	dec    ebp
  406da5:	pop    eax
  406da6:	push   0xffffff87
  406da8:	fisttp WORD PTR [edx+ebp*8-0x3d]
  406dac:	jge    0x406e21
  406dae:	test   al,0xfb
  406db0:	outs   dx,BYTE PTR ds:[esi]
  406db1:	or     eax,0x9a0a6b1f
  406db6:	sar    DWORD PTR [edx],0x7d
  406db9:	mov    ds:0x35487bd3,eax
  406dbe:	adc    ecx,DWORD PTR [edi]
  406dc0:	add    al,0x4d
  406dc2:	into   
  406dc3:	fwait
  406dc4:	les    ebx,FWORD PTR [ebx+0x5b]
  406dc7:	jge    0x406dc6
  406dc9:	mov    al,ds:0xbae5dc69
  406dce:	add    al,0x2
  406dd0:	(bad)  
  406dd1:	rcl    BYTE PTR [edi],0xc6
  406dd4:	outs   dx,BYTE PTR ds:[esi]
  406dd5:	js     0x406e25
  406dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd8:	ret    0xe2ff
  406ddb:	outs   dx,DWORD PTR ds:[esi]
  406ddc:	call   0x1ea96a56
  406de1:	fsubr  DWORD PTR [ebp-0x206585bc]
  406de7:	popf   
  406de8:	sahf   
  406de9:	gs or  eax,0x82dcb937
  406def:	sub    al,0xf2
  406df1:	(bad)  
  406df2:	test   BYTE PTR ds:0x318fde83,0x8
  406df9:	push   cs
  406dfa:	mov    ebp,ebp
  406dfc:	outs   dx,BYTE PTR ds:[esi]
  406dfd:	test   eax,0x489edf53
  406e02:	add    eax,0xa37a682e
  406e07:	lods   al,BYTE PTR ds:[esi]
  406e08:	aas    
  406e09:	imul   ebp,eax,0x29
  406e0c:	dec    ebx
  406e0d:	pop    eax
  406e0e:	xchg   BYTE PTR [ebx+0x252e6252],ah
  406e14:	jmp    0x281e:0xd632085a
  406e1b:	cmp    BYTE PTR fs:[ebx+0x23],0x81
  406e20:	mov    dl,0x41
  406e22:	mov    bl,0xb3
  406e24:	and    DWORD PTR [edi-0x40cb3653],0x50
  406e2b:	lahf   
  406e2c:	lahf   
  406e2d:	xchg   esi,eax
  406e2e:	sti    
  406e2f:	adc    BYTE PTR ss:[edx+0x65f297d2],ch
  406e36:	std    
  406e37:	pusha  
  406e38:	mov    ecx,0xea9110dc
  406e3d:	and    esp,DWORD PTR [ebx+0x23]
  406e40:	and    al,0x5c
  406e42:	vpaddsw ymm5,ymm4,YMMWORD PTR [eax]
  406e46:	call   0xc6cb5c71
  406e4b:	loope  0x406ddc
  406e4d:	sbb    BYTE PTR [ebp-0x4],ch
  406e50:	sub    DWORD PTR [ebp-0x1d71e9bb],ebx
  406e56:	(bad)  
  406e58:	mov    al,ds:0x97ffbc06
  406e5d:	ror    BYTE PTR [ebp+0x2f],1
  406e60:	rcl    ecx,1
  406e62:	(bad)  
  406e63:	adc    BYTE PTR [ebx+0x74],dh
  406e66:	out    0x6,al
  406e68:	pop    edi
  406e69:	adc    al,0xad
  406e6b:	shr    BYTE PTR [esi+0x59],0x60
  406e6f:	sub    al,0xfd
  406e71:	leave  
  406e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e73:	push   ss
  406e74:	mov    ds,WORD PTR ds:0x3358dc2b
  406e7a:	lods   al,BYTE PTR ds:[esi]
  406e7b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406e7d:	add    dl,al
  406e7f:	adc    DWORD PTR [eax+0x649280a6],0xfdea49de
  406e89:	pop    eax
  406e8a:	push   ds
  406e8b:	add    al,0x44
  406e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e8e:	dec    esp
  406e8f:	jo     0x406e44
  406e91:	push   ds
  406e92:	leave  
  406e93:	lea    ecx,[ebx-0x3a]
  406e96:	cmp    DWORD PTR gs:[ecx+0x2c134b06],0xfa4588b
  406ea1:	mov    bh,0xa
  406ea3:	inc    edx
  406ea4:	sub    eax,0x1843af0e
  406ea9:	scas   eax,DWORD PTR es:[edi]
  406eaa:	or     edi,DWORD PTR [ecx]
  406eac:	inc    esi
  406ead:	nop
  406eae:	sbb    BYTE PTR [ebx-0x70],dh
  406eb1:	push   ds
  406eb2:	call   0x6883b1b8
  406eb7:	aad    0x79
  406eb9:	inc    esi
  406eba:	mov    eax,0x7ca65d57
  406ebf:	in     al,0x7f
  406ec1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec3:	int    0xe9
  406ec5:	jnp    0x406f32
  406ec7:	lock mov dl,0xbc
  406eca:	cdq    
  406ecb:	les    ecx,FWORD PTR [eax+0x2]
  406ece:	mov    esp,ebp
  406ed0:	mov    eax,ds:0xc37d0b58
  406ed5:	js     0x406eef
  406ed7:	wbinvd 
  406ed9:	push   0xfbc9abb
  406ede:	mov    eax,ds:0xdcb2bc0
  406ee3:	xor    eax,0x5bdccc01
  406ee8:	ret    
  406ee9:	ror    BYTE PTR ds:0xcca41aa0,1
  406eef:	and    dh,BYTE PTR [ebp-0x4ae4777a]
  406ef5:	xchg   BYTE PTR [esi-0x1a],ah
  406ef8:	mov    BYTE PTR [esi],bh
  406efa:	push   cs
  406efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efc:	jl     0x406e86
  406efe:	sub    al,0xae
  406f00:	ret    
  406f01:	dec    edx
  406f02:	sti    
  406f03:	aam    0xe9
  406f05:	fdivr  QWORD PTR [edx+ecx*8]
  406f08:	pop    ecx
  406f09:	sub    esi,DWORD PTR [ecx]
  406f0b:	adc    al,0xaa
  406f0d:	gs push ebx
  406f0f:	push   ebx
  406f10:	or     cl,BYTE PTR [ebx]
  406f12:	and    ebx,DWORD PTR [edx]
  406f14:	pop    ss
  406f15:	lahf   
  406f16:	pop    esp
  406f17:	aaa    
  406f18:	test   DWORD PTR [esp+edx*2-0x48009198],esi
  406f1f:	pop    ebx
  406f20:	cmp    ah,BYTE PTR [edi-0x1]
  406f23:	stos   BYTE PTR es:[edi],al
  406f24:	lock pop esp
  406f26:	lods   eax,DWORD PTR ds:[esi]
  406f27:	sub    esi,DWORD PTR [edx-0x6b]
  406f2a:	outs   dx,BYTE PTR ds:[esi]
  406f2b:	adc    DWORD PTR [ebp-0x4a],eax
  406f2e:	outs   dx,DWORD PTR ds:[esi]
  406f2f:	or     al,0xbf
  406f31:	xchg   edi,eax
  406f32:	xlat   BYTE PTR ds:[ebx]
  406f33:	mov    dl,0xc4
  406f35:	xor    al,0x66
  406f37:	mov    al,0xcd
  406f39:	les    ebp,FWORD PTR [eax-0x300329a9]
  406f3f:	mov    dl,0xa8
  406f41:	push   edi
  406f42:	inc    esi
  406f43:	add    BYTE PTR [ecx],bl
  406f45:	add    al,0xe2
  406f47:	fiadd  WORD PTR [ebx+0x8]
  406f4a:	outs   dx,DWORD PTR ds:[esi]
  406f4b:	adc    DWORD PTR ds:0xf8bbfe2c,ecx
  406f51:	push   ecx
  406f52:	shl    DWORD PTR [edi+0x3b],1
  406f55:	stc    
  406f56:	xchg   esp,eax
  406f57:	mov    ebx,0x5470759b
  406f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f5d:	inc    esi
  406f5e:	mov    bl,0xe6
  406f60:	xor    eax,0x9d3cb9b8
  406f65:	push   edx
  406f66:	nop
  406f67:	mov    ds:0x71597578,eax
  406f6c:	xor    ebp,DWORD PTR [esi-0x43713c7e]
  406f72:	out    dx,eax
  406f73:	cdq    
  406f74:	inc    esi
  406f75:	adc    DWORD PTR [ebp+edx*8-0x8],ecx
  406f79:	mov    ah,0xff
  406f7b:	jge    0x406f7e
  406f7d:	clc    
  406f7e:	push   0xa4d81c75
  406f83:	daa    
  406f84:	push   ds
  406f85:	aam    0xb9
  406f87:	clc    
  406f88:	jle    0x407004
  406f8a:	data16 sub BYTE PTR [ecx+eax*2],dh
  406f8e:	adc    al,0xca
  406f90:	out    0x10,eax
  406f92:	outs   dx,BYTE PTR ds:[esi]
  406f93:	mov    ch,BYTE PTR [ebp+0xb64eeca]
  406f99:	xchg   esp,eax
  406f9a:	int    0x6a
  406f9c:	rcl    DWORD PTR [edx-0x15],cl
  406f9f:	pop    es
  406fa0:	xor    ebp,DWORD PTR [ebx]
  406fa2:	aas    
  406fa3:	jg     0x406fd6
  406fa5:	add    al,0x9e
  406fa7:	cwde   
  406fa8:	addr16 or al,0xf5
  406fab:	inc    esi
  406fac:	shr    DWORD PTR [ecx],0xd
  406faf:	push   ss
  406fb0:	or     ah,BYTE PTR [edx]
  406fb2:	aas    
  406fb3:	push   0x3a
  406fb5:	add    cl,bl
  406fb7:	mov    al,ds:0x8f639c27
  406fbc:	repnz inc esi
  406fbe:	mov    ah,0x44
  406fc0:	fstp   DWORD PTR [ebx+0x5c]
  406fc3:	pop    esp
  406fc4:	jb     0x406f95
  406fc6:	dec    eax
  406fc7:	push   edi
  406fc8:	mov    WORD PTR [ebx+eiz*1-0x47],ss
  406fcc:	sub    esi,DWORD PTR [esi+0x7dfb5554]
  406fd2:	test   al,0x37
  406fd4:	jg     0x407018
  406fd6:	in     al,dx
  406fd7:	sbb    eax,0xfc6a707e
  406fdc:	fcom   DWORD PTR [ecx]
  406fde:	std    
  406fdf:	(bad)  
  406fe0:	in     eax,0xd2
  406fe2:	not    BYTE PTR [ebx+0x34]
  406fe5:	loope  0x406f90
  406fe7:	cmp    bh,cl
  406fe9:	mov    ebx,?
  406feb:	inc    edx
  406fec:	push   0x6e
  406fee:	out    0x88,al
  406ff0:	xchg   esi,eax
  406ff1:	pop    ss
  406ff2:	repnz or ebx,DWORD PTR [ebx]
  406ff5:	or     esi,edx
  406ff7:	and    al,bl
  406ff9:	jns    0x5dfb7660
  406fff:	out    0x81,eax
  407001:	arpl   ax,bx
  407003:	xchg   edi,eax
  407004:	sub    eax,0xc9916e59
  407009:	je     0x407053
  40700b:	mov    cl,0xd8
  40700d:	mov    dh,0xa1
  40700f:	das    
  407010:	push   ebp
  407011:	(bad)  
  407012:	cli    
  407013:	xor    ch,0x31
  407016:	adc    al,al
  407018:	stc    
  407019:	mov    eax,ds:0x2e4ea9e6
  40701e:	jecxz  0x406fd9
  407020:	and    al,0x19
  407022:	jecxz  0x40700d
  407024:	cld    
  407025:	jbe    0x406fe0
  407027:	scas   eax,DWORD PTR es:[edi]
  407028:	jmp    0x40707d
  40702a:	mov    ebx,0x7e1bb438
  40702f:	cmp    ebx,DWORD PTR [eax]
  407031:	sbb    al,0xa5
  407033:	gs mov eax,0xc8f9d707
  407039:	dec    eax
  40703a:	xlat   BYTE PTR ds:[ebx]
  40703b:	loop   0x407025
  40703d:	test   dl,cl
  40703f:	push   edx
  407040:	jns    0x407049
  407042:	push   ebp
  407043:	jo     0x407045
  407045:	add    DWORD PTR [esi-0x19435320],esp
  40704b:	aaa    
  40704c:	ror    edi,0x5d
  40704f:	cwde   
  407050:	fmul   DWORD PTR [eax+ebp*1-0x40]
  407054:	repz or al,0x3c
  407057:	and    ebp,DWORD PTR ds:0x128ac8aa
  40705d:	lds    edi,FWORD PTR [ecx-0x3c]
  407060:	lahf   
  407061:	inc    edi
  407062:	sbb    al,0x87
  407064:	pop    edi
  407065:	mov    ds:0x8cfba28c,al
  40706a:	es pop ecx
  40706c:	mov    ah,0x1
  40706e:	jae    0x40702d
  407070:	das    
  407071:	cdq    
  407072:	xchg   esp,eax
  407073:	loopne 0x40700f
  407075:	dec    edx
  407076:	call   0xeb29:0xc1442194
  40707d:	adc    edi,DWORD PTR [edi]
  40707f:	sub    DWORD PTR [esi-0x2e],eax
  407082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407083:	xor    eax,0x81118722
  407088:	jns    0x4070c7
  40708a:	and    eax,0xeeaac086
  40708f:	jns    0x407070
  407091:	push   ecx
  407092:	pusha  
  407093:	mov    ebp,0x496e4bb3
  407098:	xor    DWORD PTR [esi-0xa],esi
  40709b:	or     ebx,DWORD PTR [ecx-0x78]
  40709e:	inc    ebp
  40709f:	cmp    edx,edi
  4070a1:	mov    cl,0x77
  4070a3:	mov    edx,0xc61b4801
  4070a8:	and    bh,BYTE PTR [ebx+ecx*8-0x7b312bf8]
  4070af:	dec    ebx
  4070b0:	xchg   ecx,eax
  4070b1:	in     al,0x1f
  4070b3:	test   DWORD PTR [edi+eax*8-0x378b6da5],esp
  4070ba:	jmp    0xcb5b:0x2475e4b8
  4070c1:	imul   eax,edi,0x35
  4070c4:	aad    0xaf
  4070c6:	arpl   WORD PTR [eax],sp
  4070c8:	mov    cs,WORD PTR [esi]
  4070ca:	out    dx,eax
  4070cb:	pop    es
  4070cc:	js     0x40706e
  4070ce:	jl     0x4070ff
  4070d0:	aad    0xcd
  4070d2:	add    bl,BYTE PTR [esi-0x18]
  4070d5:	push   0x63
  4070d7:	inc    ebp
  4070d8:	outs   dx,BYTE PTR ds:[esi]
  4070d9:	mov    DWORD PTR [ebp-0x2a90bb1e],edi
  4070df:	jle    0x407147
  4070e1:	jbe    0x40706f
  4070e3:	inc    edi
  4070e4:	pushf  
  4070e5:	push   ebx
  4070e6:	push   ebp
  4070e7:	mov    WORD PTR ds:0x5bda53c5,?
  4070ee:	sbb    BYTE PTR [esi-0x76],dl
  4070f1:	mov    esp,0xa1e568cd
  4070f6:	mov    esi,0xd802e7b7
  4070fb:	into   
  4070fc:	jno    0x4070ff
  4070fe:	mov    ch,al
  407100:	mov    ah,0x8f
  407102:	or     ch,BYTE PTR [esi]
  407104:	adc    al,0x4c
  407106:	sbb    cl,bl
  407108:	loopne 0x40716e
  40710a:	sti    
  40710b:	cdq    
  40710c:	outs   dx,DWORD PTR ds:[esi]
  40710d:	dec    ecx
  40710e:	stos   BYTE PTR es:[edi],al
  40710f:	pop    edx
  407110:	inc    ebp
  407111:	jbe    0x407168
  407113:	enter  0xf0f3,0x54
  407117:	es and cl,cl
  40711a:	or     eax,0x40e18c36
  40711f:	inc    ecx
  407120:	sahf   
  407121:	add    eax,0x5b14c943
  407126:	jp     0x407109
  407128:	or     al,0xf6
  40712a:	push   ecx
  40712b:	add    DWORD PTR [ecx+0xf],eax
  40712e:	dec    edx
  40712f:	or     ch,ah
  407131:	add    eax,0x133aee2f
  407136:	das    
  407137:	in     eax,0x27
  407139:	leave  
  40713a:	mov    edx,DWORD PTR [edx]
  40713c:	jmp    0x407146
  40713e:	push   es
  40713f:	inc    ebx
  407140:	sub    eax,DWORD PTR [esi+0x64]
  407143:	jns    0x40715e
  407145:	stos   BYTE PTR es:[edi],al
  407146:	xchg   DWORD PTR [ecx+ebx*4],esi
  407149:	data16 mov ah,0xed
  40714c:	xchg   esi,eax
  40714d:	jns    0x4070f4
  40714f:	sub    ch,BYTE PTR [ecx+0x67292816]
  407155:	mov    dh,0x79
  407157:	aad    0xb3
  407159:	sbb    eax,0x4bc12814
  40715e:	ja     0x407114
  407160:	mov    ah,0xea
  407162:	pop    ecx
  407163:	ins    DWORD PTR es:[edi],dx
  407164:	xchg   esi,eax
  407165:	mov    al,0x21
  407167:	stc    
  407168:	repz inc esp
  40716a:	ins    DWORD PTR es:[edi],dx
  40716b:	pop    esi
  40716c:	test   eax,0x2c9a114c
  407171:	jge    0x407169
  407173:	(bad)  
  407174:	or     al,BYTE PTR [ecx]
  407176:	fimul  DWORD PTR [ecx-0x6a4aa71d]
  40717c:	cmc    
  40717d:	dec    ebx
  40717e:	out    0x4e,eax
  407180:	aas    
  407181:	lea    ecx,[edi-0x55]
  407184:	jp     0x407146
  407186:	jg     0x407159
  407188:	jg     0x407172
  40718a:	(bad)  
  40718b:	(bad)  
  40718c:	pop    ss
  40718d:	jmp    0x40712b
  40718f:	jo     0x407156
  407191:	in     eax,0x89
  407193:	(bad)  
  407195:	in     al,0x6e
  407197:	aaa    
  407198:	repnz not BYTE PTR [ebp-0x2e]
  40719c:	mov    edi,ecx
  40719e:	jge    0x407182
  4071a0:	xchg   esp,eax
  4071a1:	inc    esp
  4071a2:	pop    eax
  4071a3:	add    BYTE PTR [eax+0x2f60a1c0],dh
  4071a9:	and    eax,0xfe151391
  4071ae:	xchg   edi,eax
  4071af:	push   ecx
  4071b0:	jae    0x407175
  4071b2:	out    0xa7,al
  4071b4:	in     al,dx
  4071b5:	or     ch,BYTE PTR [eax-0x268c1d1]
  4071bb:	js     0x407207
  4071bd:	mov    cl,0x13
  4071bf:	test   al,0x6c
  4071c1:	call   FWORD PTR [edx+0x22]
  4071c4:	inc    edx
  4071c5:	cli    
  4071c6:	(bad)  
  4071c7:	xadd   ebx,ebx
  4071ca:	mov    ds:0x2df90e15,al
  4071cf:	cmp    DWORD PTR [ebp-0x76c1d064],ebx
  4071d5:	add    edi,DWORD PTR [esi+edi*8]
  4071d8:	push   0x6d628fa6
  4071dd:	inc    ebp
  4071de:	mov    bh,0x30
  4071e0:	in     eax,0x90
  4071e2:	mov    bl,BYTE PTR [ecx+ebp*1+0x402d4b49]
  4071e9:	and    DWORD PTR ds:0x6700416c,esp
  4071ef:	push   esp
  4071f0:	xchg   ecx,eax
  4071f1:	push   ecx
  4071f2:	sti    
  4071f3:	sub    DWORD PTR [eax-0x4d],edx
  4071f6:	(bad)  
  4071f8:	js     0x40721e
  4071fa:	and    bl,0xf8
  4071fd:	sub    eax,0xa224fa43
  407202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407203:	pop    ebx
  407204:	xor    DWORD PTR [edi+edi*4],ecx
  407207:	daa    
  407208:	cs pushf 
  40720a:	cwde   
  40720b:	loope  0x4071f0
  40720d:	in     eax,0x56
  40720f:	pop    ebp
  407210:	(bad)  
  407211:	enter  0x636a,0xa2
  407215:	fld    TBYTE PTR [ecx+0x70]
  407218:	out    0x87,al
  40721a:	mov    ah,0xa4
  40721c:	mov    ah,0x80
  40721e:	jmp    0x4071c6
  407220:	lock xlat BYTE PTR ds:[ebx]
  407222:	cld    
  407223:	mov    ch,0x70
  407225:	psadbw mm3,QWORD PTR [ebx-0x3df708e]
  40722c:	dec    ecx
  40722d:	lahf   
  40722e:	lds    esi,FWORD PTR [esi+ecx*8+0x281dee04]
  407235:	xor    al,0x7c
  407237:	(bad)  
  407238:	loope  0x407234
  40723a:	pusha  
  40723b:	loope  0x4072a3
  40723d:	inc    eax
  40723e:	jnp    0x407206
  407240:	aaa    
  407241:	mov    ds:0x3f3555fb,eax
  407246:	dec    ebp
  407247:	adc    al,0xf
  407249:	inc    edx
  40724a:	cs out 0xe3,eax
  40724d:	aas    
  40724e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724f:	retf   
  407250:	adc    dh,bl
  407252:	jb     0x407205
  407254:	(bad)  
  407255:	push   ecx
  407256:	lds    eax,FWORD PTR [esi]
  407258:	mov    ebp,0x8f51d211
  40725d:	push   edi
  40725e:	dec    esi
  40725f:	dec    esi
  407260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407261:	or     ebp,esp
  407263:	leave  
  407264:	cmp    dl,bh
  407266:	pop    esi
  407267:	xor    esp,DWORD PTR [ebx+0x37]
  40726a:	and    eax,0x1ada9749
  40726f:	or     eax,DWORD PTR [esi+edi*2+0x4a]
  407273:	or     edx,ebp
  407275:	aaa    
  407276:	inc    edi
  407277:	dec    edi
  407278:	test   al,0x42
  40727a:	mov    eax,ds:0xaf0792e7
  40727f:	bound  eax,QWORD PTR [eax+0x5bc3676a]
  407285:	xchg   esi,eax
  407286:	cmc    
  407287:	(bad)  
  407288:	aam    0xc2
  40728a:	(bad)  
  40728b:	mov    ebp,0xfe074278
  407290:	and    esp,esi
  407292:	fcomip st,st(6)
  407294:	push   eax
  407295:	jbe    0x4072cd
  407297:	dec    edx
  407298:	cmp    eax,0xc1ead5b8
  40729d:	js     0x407317
  40729f:	out    0x3c,eax
  4072a1:	cwde   
  4072a2:	xchg   ebp,eax
  4072a3:	inc    edi
  4072a4:	ins    DWORD PTR es:[edi],dx
  4072a5:	das    
  4072a6:	dec    ecx
  4072a7:	or     DWORD PTR [ebp+0x3f9dd8c9],0xfffffff8
  4072ae:	bound  ebx,QWORD PTR [ebx-0x20fb1eac]
  4072b4:	out    0x4a,al
  4072b6:	scas   eax,DWORD PTR es:[edi]
  4072b7:	push   edx
  4072b8:	jg     0x4072e5
  4072ba:	adc    eax,0xfc45784c
  4072bf:	pushf  
  4072c0:	repz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4072c3:	leave  
  4072c4:	enter  0x2e9a,0xa9
  4072c8:	outs   dx,DWORD PTR ds:[esi]
  4072c9:	sbb    eax,0xa7d11182
  4072ce:	sub    al,0x40
  4072d0:	scas   eax,DWORD PTR es:[edi]
  4072d1:	fnsave [ebp*4+0x4a277e61]
  4072d8:	in     al,dx
  4072d9:	mov    bh,BYTE PTR [ebp+0x4a]
  4072dc:	cmp    edx,ebp
  4072de:	mov    ecx,0xbbcb87c9
  4072e3:	pop    esi
  4072e4:	das    
  4072e5:	loope  0x4072ca
  4072e7:	popf   
  4072e8:	and    ebx,ebx
  4072ea:	and    ah,ah
  4072ec:	mov    dh,0x70
  4072ee:	daa    
  4072ef:	(bad)  
  4072f0:	test   DWORD PTR [edx+0x3a8d401b],edx
  4072f6:	sahf   
  4072f7:	out    0x27,al
  4072f9:	pop    eax
  4072fa:	outs   dx,BYTE PTR ds:[esi]
  4072fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072fc:	not    BYTE PTR [edi]
  4072fe:	test   esp,esp
  407300:	cli    
  407301:	rcl    ebx,1
  407303:	enter  0x5391,0xe4
  407307:	in     eax,0xb2
  407309:	push   ebx
  40730a:	scas   eax,DWORD PTR es:[edi]
  40730b:	dec    edi
  40730c:	sbb    al,0x2f
  40730e:	es cmp edx,edx
  407311:	das    
  407312:	mov    esp,DWORD PTR [esi-0x47f88d0a]
  407318:	wbinvd 
  40731a:	cdq    
  40731b:	push   edx
  40731c:	mov    esi,0x17f6360a
  407321:	dec    ebp
  407322:	jmp    0x407339
  407324:	mov    dl,0x22
  407326:	pop    edx
  407327:	adc    BYTE PTR fs:[edi-0x2],dl
  40732b:	fcom   st(1)
  40732d:	pusha  
  40732e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40732f:	(bad)  
  407330:	jns    0x407328
  407332:	push   ebp
  407333:	(bad)  
  407334:	repnz xchg ebp,eax
  407336:	dec    ebp
  407337:	lea    edi,[esi]
  407339:	mov    esp,0xf16da7b8
  40733e:	leave  
  40733f:	or     al,0xdf
  407341:	push   sp
  407343:	in     al,dx
  407344:	fs add al,0xd
  407347:	movaps XMMWORD PTR [edi-0x2c1112ab],xmm1
  40734e:	test   eax,0x5e18915f
  407353:	push   es
  407354:	scas   eax,DWORD PTR es:[edi]
  407355:	jnp    0x4072d7
  407357:	je     0x40733d
  407359:	mov    ch,0x74
  40735b:	bound  eax,QWORD PTR [ebx]
  40735d:	and    DWORD PTR [ebx-0x1ed37556],esi
  407363:	xor    ebp,DWORD PTR [ecx]
  407365:	rol    DWORD PTR [ebx],0xf
  407368:	dec    ebx
  407369:	(bad)  
  40736a:	adc    esi,DWORD PTR [edx]
  40736c:	outs   dx,DWORD PTR ds:[esi]
  40736d:	mov    esp,0x86b6509c
  407372:	repz adc cl,BYTE PTR [ebp+0x2b]
  407376:	add    eax,0x27f5fd1e
  40737b:	xor    edi,DWORD PTR [ecx+ecx*1]
  40737e:	mov    eax,0xb6f90684
  407383:	sbb    al,0xb3
  407385:	ins    DWORD PTR es:[edi],dx
  407386:	in     al,0x8a
  407388:	test   al,0x6
  40738a:	push   edi
  40738b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40738c:	outs   dx,BYTE PTR ds:[esi]
  40738d:	loop   0x407359
  40738f:	sub    DWORD PTR [esi+0x53],esp
  407392:	xchg   ecx,eax
  407393:	dec    ebp
  407394:	adc    DWORD PTR [ecx+0x23649a41],0x2e
  40739b:	cld    
  40739c:	aaa    
  40739d:	or     eax,0xce068e83
  4073a2:	popa   
  4073a3:	aas    
  4073a4:	xchg   DWORD PTR [ebx-0x71332454],esp
  4073aa:	mov    bl,BYTE PTR [eax+0x6a1adc2]
  4073b0:	nop
  4073b1:	test   eax,0xb738f6e5
  4073b6:	sbb    ebx,eax
  4073b8:	je     0x4073cd
  4073ba:	jbe    0x4073dc
  4073bc:	mov    bh,0xe6
  4073be:	push   es
  4073bf:	call   0xb8d7c42c
  4073c4:	sbb    eax,0x136a4033
  4073c9:	mov    dh,0x49
  4073cb:	lods   al,BYTE PTR ds:[esi]
  4073cc:	leave  
  4073cd:	mov    cs,ecx
  4073cf:	add    BYTE PTR [ecx-0x4a],ch
  4073d2:	sbb    ecx,DWORD PTR [eax+eax*1-0x1]
  4073d6:	mov    ds:0xbf8d435a,eax
  4073db:	scas   ax,WORD PTR es:[edi]
  4073dd:	adc    esp,DWORD PTR [ebx]
  4073df:	out    dx,eax
  4073e0:	cld    
  4073e1:	sti    
  4073e2:	cmovnp ebp,DWORD PTR [ecx+eax*2+0xd3c41f8]
  4073ea:	or     BYTE PTR [edi+0x66365397],bl
  4073f0:	adc    ebp,DWORD PTR [eax-0xe]
  4073f3:	(bad)  
  4073f4:	pop    ebx
  4073f5:	hlt    
  4073f6:	push   0xffffffa3
  4073f8:	fs jae 0x40740e
  4073fb:	mov    dh,BYTE PTR [ebp-0x6b]
  4073fe:	jle    0x407390
  407400:	iret   
  407401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407402:	dec    esp
  407403:	sub    al,0xa0
  407405:	push   ds
  407406:	and    al,0x2e
  407408:	test   eax,0x6608cf2a
  40740d:	inc    eax
  40740e:	xchg   ebx,eax
  40740f:	xor    eax,0xce163715
  407414:	inc    esi
  407415:	ffreep st(4)
  407417:	test   al,0x20
  407419:	sub    eax,0x21523750
  40741e:	ret    
  40741f:	pusha  
  407420:	mov    ds:0x56dc97d2,al
  407425:	aam    0x41
  407427:	mov    ch,ah
  407429:	or     dl,BYTE PTR [edx+0x70324378]
  40742f:	dec    ebp
  407430:	cmp    al,0xf5
  407432:	mov    BYTE PTR [ebx],bl
  407434:	mov    bh,0x5a
  407436:	xchg   ebx,eax
  407437:	aas    
  407438:	mov    bh,0x1f
  40743a:	ja     0x40740d
  40743c:	jmp    0x4073c0
  40743e:	repz dec edi
  407440:	xlat   BYTE PTR ds:[ebx]
  407441:	sbb    ecx,edx
  407443:	dec    ebx
  407444:	scas   eax,DWORD PTR es:[edi]
  407445:	cmp    bl,bh
  407447:	scas   al,BYTE PTR es:[edi]
  407448:	retf   0xcc50
  40744b:	xchg   ebp,eax
  40744c:	in     al,dx
  40744d:	pop    ds
  40744e:	nop
  40744f:	mov    ebp,0x82ff816c
  407454:	xor    al,ch
  407456:	das    
  407457:	jge    0x407485
  407459:	or     eax,0x2d218dde
  40745e:	pop    es
  40745f:	mov    BYTE PTR [ebp+0x1f1b4c20],bl
  407465:	push   es
  407466:	(bad)  
  407467:	test   eax,0xebea0944
  40746c:	add    BYTE PTR [ecx+eax*1-0x39af25a7],ah
  407473:	(bad)  
  407474:	sbb    al,0xe8
  407476:	loop   0x40741c
  407478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407479:	xchg   esp,eax
  40747a:	add    al,0x20
  40747c:	sbb    ebp,DWORD PTR [edi]
  40747e:	retf   
  40747f:	push   ecx
  407480:	push   ecx
  407481:	idiv   esi
  407483:	js     0x407487
  407485:	inc    ecx
  407486:	pop    esp
  407487:	xlat   BYTE PTR ds:[ebx]
  407488:	adc    eax,0x5370a265
  40748d:	pop    esp
  40748e:	cmp    DWORD PTR [eax-0x55],edx
  407491:	sbb    ecx,edx
  407493:	mov    WORD PTR [edx],fs
  407495:	xchg   edi,eax
  407496:	push   esp
  407497:	and    DWORD PTR [esi-0x18c56d5b],ebx
  40749d:	push   cs
  40749e:	fs jnp 0x407449
  4074a1:	pand   mm1,mm1
  4074a4:	cld    
  4074a5:	mov    ebx,0xa19b6a36
  4074aa:	push   ecx
  4074ab:	in     eax,0x6f
  4074ad:	xor    al,0xf5
  4074af:	add    ebx,DWORD PTR [edx-0x5d]
  4074b2:	mov    al,0x23
  4074b4:	mov    ss,WORD PTR [ecx]
  4074b6:	lds    ebx,FWORD PTR [ebx+0x47d94aa4]
  4074bc:	xor    al,0xfa
  4074be:	push   edx
  4074bf:	adc    ah,ch
  4074c1:	xchg   ebx,eax
  4074c2:	sub    bh,BYTE PTR [eax-0x21ebc78d]
  4074c8:	fs or  al,0xdf
  4074cb:	into   
  4074cc:	popf   
  4074cd:	and    BYTE PTR [ebp-0x69],ch
  4074d0:	jmp    0x407526
  4074d2:	fld    TBYTE PTR [ebx-0x395b4056]
  4074d8:	daa    
  4074d9:	dec    eax
  4074da:	shr    BYTE PTR [ebx+ecx*2],cl
  4074dd:	sahf   
  4074de:	enter  0xd858,0xdf
  4074e2:	aas    
  4074e3:	fstp   QWORD PTR [ecx]
  4074e5:	icebp  
  4074e6:	inc    eax
  4074e7:	dec    edx
  4074e8:	mov    WORD PTR [eax-0x52c30aec],?
  4074ee:	daa    
  4074ef:	imul   ecx,DWORD PTR [ecx],0x3f
  4074f2:	jg     0x407479
  4074f4:	mov    cl,bl
  4074f6:	aad    0x74
  4074f8:	or     DWORD PTR [eax],ebp
  4074fa:	inc    ebp
  4074fb:	adc    al,BYTE PTR [ebx+0x608e3522]
  407501:	mov    ebp,0xb2c437f
  407506:	cmp    ch,BYTE PTR [edi-0x2bbfc4f5]
  40750c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750d:	(bad)  
  40750e:	adc    ebx,edx
  407510:	(bad)  
  407511:	int3   
  407512:	loopne 0x4074fd
  407514:	jmp    0x407521
  407516:	ret    0x88f8
  407519:	jne    0x4074fa
  40751b:	xchg   ebp,eax
  40751c:	test   bl,ch
  40751e:	int    0xcc
  407520:	out    dx,eax
  407521:	xchg   bl,ch
  407523:	mov    bh,0x3a
  407525:	ds into 
  407527:	push   ebp
  407528:	pop    esp
  407529:	pop    esp
  40752a:	push   ss
  40752b:	xchg   edx,eax
  40752c:	inc    edi
  40752d:	mov    ebp,0x8d8fe021
  407532:	mov    esi,0x5b655547
  407537:	cs jnp 0x40757a
  40753a:	les    ebp,FWORD PTR [ebx+0x452aa34d]
  407540:	jnp    0x4074e1
  407542:	cmp    eax,0x9ed6856
  407547:	or     edx,DWORD PTR [edi]
  407549:	xchg   edx,eax
  40754a:	call   0x4785:0xc896ee6e
  407551:	push   0x5902600d
  407556:	inc    ebp
  407557:	cmp    al,0x2a
  407559:	jmp    0x7063:0xf98bec2a
  407560:	adc    BYTE PTR [ebp-0x37e16099],dh
  407566:	inc    ebx
  407567:	loope  0x40753b
  407569:	jmp    0x407554
  40756b:	sti    
  40756c:	mul    dh
  40756e:	cmp    eax,DWORD PTR [eax+esi*8]
  407571:	ins    DWORD PTR es:[edi],dx
  407572:	(bad)  
  407573:	cdq    
  407574:	xor    ebp,edx
  407576:	sbb    DWORD PTR [edi+edi*2+0x7c7dfb6e],esp
  40757d:	mov    dh,0x99
  40757f:	fldenv [edi-0x379e73f9]
  407585:	popf   
  407586:	cld    
  407587:	dec    edi
  407588:	into   
  407589:	aam    0x49
  40758b:	lods   al,BYTE PTR ds:[esi]
  40758c:	sbb    ebx,eax
  40758e:	fdiv   st(1),st
  407590:	inc    ebx
  407591:	sub    dh,BYTE PTR [ebx]
  407593:	ret    
  407594:	dec    esp
  407595:	repz icebp 
  407597:	fist   WORD PTR [ebp+0x4741b949]
  40759d:	mov    ecx,0x8c6f0a1f
  4075a2:	xchg   ebx,eax
  4075a3:	pop    edx
  4075a4:	adc    DWORD PTR [eax+ecx*8+0xf],esp
  4075a8:	lea    ecx,[ebx+0x517fda98]
  4075ae:	jnp    0x40762f
  4075b0:	adc    al,0x8d
  4075b2:	icebp  
  4075b3:	lds    edx,FWORD PTR [ebx-0x5f2009a6]
  4075b9:	fs lock std 
  4075bc:	and    eax,0x81135d57
  4075c1:	sub    BYTE PTR [ebp-0x4548fa14],0x68
  4075c8:	test   eax,0x47d1f59a
  4075cd:	ins    BYTE PTR es:[edi],dx
  4075ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075cf:	pop    edx
  4075d0:	dec    eax
  4075d1:	cmc    
  4075d2:	cmp    al,0x41
  4075d4:	push   es
  4075d5:	mov    bl,BYTE PTR [ecx+edi*1]
  4075d8:	and    eax,0x332c3193
  4075dd:	mov    bl,0x9f
  4075df:	in     eax,0x53
  4075e1:	pop    ebx
  4075e2:	in     eax,dx
  4075e3:	and    ebx,DWORD PTR [edx]
  4075e5:	jbe    0x407611
  4075e7:	pop    edi
  4075e8:	sbb    DWORD PTR [edx],ebp
  4075ea:	or     ebp,esi
  4075ec:	xchg   BYTE PTR [edi+ecx*2+0x6f],ch
  4075f0:	jmp    0xadcbd43a
  4075f5:	mov    ch,0x9
  4075f7:	xchg   BYTE PTR [edi],bh
  4075f9:	in     al,dx
  4075fa:	inc    ebp
  4075fb:	mov    edx,DWORD PTR [ebp*8-0x74c2b42d]
  407602:	pop    edx
  407603:	mov    edx,0x9153b83d
  407608:	shl    DWORD PTR [ecx-0x124fb44e],0x1f
  40760f:	call   0xf304:0xd689315d
  407616:	inc    eax
  407617:	or     esi,ebp
  407619:	shr    DWORD PTR [edi],0xc7
  40761c:	push   edi
  40761d:	mov    bh,0xd1
  40761f:	nop
  407620:	das    
  407621:	(bad)  
  407622:	scas   al,BYTE PTR es:[edi]
  407623:	pop    ebx
  407624:	or     BYTE PTR [edi-0x69c39fcc],0xe7
  40762b:	cli    
  40762c:	sbb    al,0xc8
  40762e:	add    bl,0x7e
  407631:	mov    dl,0x50
  407633:	fbstp  TBYTE PTR [esi+0x14]
  407636:	jnp    0x407617
  407638:	out    0xe0,eax
  40763a:	iret   
  40763b:	jle    0x40762b
  40763d:	xchg   esp,eax
  40763e:	ret    0xb5f
  407641:	inc    ebx
  407642:	bound  edx,QWORD PTR [eax+0x6e]
  407645:	(bad)  
  407646:	sub    al,0xd4
  407648:	mov    al,0xa1
  40764a:	add    BYTE PTR [ebx-0x4f],bh
  40764d:	retf   
  40764e:	pop    ss
  40764f:	mov    DWORD PTR [bp+si],0xba6d903d
  407656:	mov    bl,0x2d
  407658:	mov    ah,0x31
  40765a:	in     eax,dx
  40765b:	adc    DWORD PTR [ecx+0x11],ecx
  40765e:	jns    0x4075e2
  407660:	and    cl,BYTE PTR ds:0x31e741ee
  407666:	mov    ebx,0x236fc3f1
  40766b:	push   ebx
  40766c:	inc    esi
  40766d:	arpl   WORD PTR [ebx-0x19],cx
  407670:	cli    
  407671:	xchg   BYTE PTR [ebp-0x769746c3],ch
  407677:	pop    eax
  407678:	fucompp 
  40767a:	mov    dh,0xed
  40767c:	sbb    al,0x34
  40767e:	rcl    DWORD PTR [esi+0x29f320f2],0xf
  407685:	in     al,0x9e
  407687:	or     ecx,ebx
  407689:	fs mov dh,0x2e
  40768c:	jge    0x4076cc
  40768e:	ds shl eax,0x83
  407692:	mov    edx,0xf1dfa331
  407697:	jnp    0x407675
  407699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40769a:	sbb    esi,DWORD PTR [ebx-0x73]
  40769d:	loop   0x407623
  40769f:	cmc    
  4076a0:	fidiv  DWORD PTR [ecx+eiz*2-0x4e]
  4076a4:	xor    ah,BYTE PTR [esi-0x76b63ed8]
  4076aa:	mov    edi,DWORD PTR [edi+0x4b]
  4076ad:	inc    ecx
  4076ae:	push   0x887487a0
  4076b3:	pop    edi
  4076b4:	sbb    edi,DWORD PTR [ecx-0x2f]
  4076b7:	mov    ch,0xe9
  4076b9:	add    ebx,DWORD PTR [edx+0x4a267346]
  4076bf:	imul   ebp,DWORD PTR [edx],0x1a
  4076c2:	jge    0x4076f3
  4076c4:	xchg   edi,eax
  4076c5:	and    ebp,DWORD PTR [edx-0x3135021a]
  4076cb:	test   ebx,ecx
  4076cd:	fimul  WORD PTR [ebx+edx*2-0x7bd2eb50]
  4076d4:	xor    eax,DWORD PTR [esi+0x70]
  4076d7:	lock adc DWORD PTR [eax-0x41],esi
  4076db:	in     eax,dx
  4076dc:	std    
  4076dd:	add    dl,BYTE PTR ds:0x5a2b1d7
  4076e3:	adc    eax,0xfbd7dd0e
  4076e8:	push   esi
  4076e9:	jg     0x4076b7
  4076eb:	fstp   DWORD PTR [edx-0x32f9000c]
  4076f1:	test   eax,0xab2edd95
  4076f6:	push   esp
  4076f7:	pop    ds
  4076f8:	or     al,0xbb
  4076fa:	pop    es
  4076fb:	call   0x2c3af38d
  407700:	or     BYTE PTR [esi+0x4f12a432],0x6b
  407707:	jl     0x40773f
  407709:	scas   al,BYTE PTR es:[edi]
  40770a:	mov    BYTE PTR [edi],0xa4
  40770d:	or     esi,esi
  40770f:	daa    
  407710:	or     eax,DWORD PTR [esi]
  407712:	sbb    BYTE PTR [ecx],dh
  407714:	mov    al,ds:0xf3ec6d25
  407719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771a:	outs   dx,BYTE PTR ds:[esi]
  40771b:	hlt    
  40771c:	add    eax,0x841b161c
  407721:	xor    cl,BYTE PTR [eax]
  407723:	outs   dx,DWORD PTR ds:[esi]
  407724:	addr16 in al,dx
  407726:	ja     0x4076ca
  407728:	jae    0x4076de
  40772a:	sti    
  40772b:	push   ss
  40772c:	pop    ebp
  40772d:	loop   0x40770a
  40772f:	(bad)  
  407730:	mov    bl,0x62
  407732:	lods   al,BYTE PTR ds:[esi]
  407733:	out    0xc5,al
  407735:	mov    DWORD PTR [eax+ebp*8-0x53e65c8a],eax
  40773c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773e:	or     ebp,DWORD PTR [ecx]
  407740:	aaa    
  407741:	xor    al,0xb
  407743:	aad    0xa0
  407745:	add    eax,0xcd8ca766
  40774a:	cmc    
  40774b:	push   0xe5dcf49d
  407750:	ror    BYTE PTR [ecx+0x12],0x97
  407754:	and    DWORD PTR [edx],edx
  407756:	push   edx
  407757:	or     edi,edi
  407759:	push   esi
  40775a:	repnz dec esi
  40775c:	in     eax,0x21
  40775e:	lds    ecx,FWORD PTR [esi-0x82d2e6a]
  407764:	clc    
  407765:	xchg   esp,eax
  407766:	lock les ecx,FWORD PTR [esi-0x18f9187c]
  40776d:	pop    ds
  40776e:	push   ecx
  40776f:	dec    ebp
  407770:	cdq    
  407771:	dec    ebp
  407772:	js     0x4077bb
  407774:	cdq    
  407775:	jno    0x4076ff
  407777:	dec    ebx
  407778:	push   ebp
  407779:	ret    
  40777a:	pop    es
  40777b:	call   0x6c1f:0x9cc4022b
  407782:	mov    eax,0xe77a0c45
  407787:	lods   eax,DWORD PTR ds:[esi]
  407788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407789:	adc    ebx,eax
  40778b:	xchg   edi,eax
  40778c:	out    dx,al
  40778d:	addr16 add eax,ebp
  407790:	add    eax,0x38101c17
  407795:	jns    0x4077f0
  407797:	aas    
  407798:	neg    BYTE PTR [eax]
  40779a:	psubw  mm0,QWORD PTR [edi-0x8]
  40779e:	sub    edi,DWORD PTR [ebx-0x5b]
  4077a1:	inc    edi
  4077a2:	aas    
  4077a3:	or     al,0xd4
  4077a5:	cmp    BYTE PTR [ebp+0x5d],bl
  4077a8:	popf   
  4077a9:	xchg   ebx,eax
  4077aa:	xor    BYTE PTR [ecx-0x5ee1e4fb],0xd
  4077b1:	repz jl 0x40777d
  4077b4:	ret    0x383f
  4077b7:	rol    DWORD PTR [esi],cl
  4077b9:	(bad)  
  4077ba:	das    
  4077bb:	mov    cl,0xc5
  4077bd:	jle    0x407810
  4077bf:	fld    DWORD PTR [edx]
  4077c1:	cmc    
  4077c2:	pop    ebp
  4077c3:	sbb    eax,0xeac36da5
  4077c8:	mov    edi,0xe478737d
  4077cd:	arpl   WORD PTR [edi-0x62c6872c],ax
  4077d3:	outs   dx,BYTE PTR ds:[esi]
  4077d4:	in     eax,dx
  4077d5:	lahf   
  4077d6:	mov    dh,0x42
  4077d8:	aad    0xa5
  4077da:	mov    esp,0xc2a68850
  4077df:	adc    eax,0x47e69e85
  4077e4:	(bad)  
  4077e5:	mov    dl,0x82
  4077e7:	mov    eax,0xc8bd620a
  4077ec:	mov    edi,0x7b1ea2c3
  4077f1:	push   cs
  4077f2:	es dec ebx
  4077f4:	mov    ecx,0x1664ce3f
  4077f9:	xlat   BYTE PTR ds:[ebx]
  4077fa:	sbb    al,0xea
  4077fc:	push   ss
  4077fd:	mov    ah,0x7c
  4077ff:	lea    ebp,[edi]
  407801:	push   es
  407802:	out    dx,eax
  407803:	out    dx,al
  407804:	jmp    0xd71fd283
  407809:	sbb    dh,ch
  40780b:	mov    al,0xc8
  40780d:	adc    DWORD PTR [esi-0x56],esp
  407810:	and    DWORD PTR [edx+edi*4+0x1e],ebx
  407814:	mov    al,0xf8
  407816:	scas   al,BYTE PTR es:[edi]
  407817:	(bad)  
  407818:	not    edi
  40781a:	sbb    BYTE PTR [edx+0xcf1d8b1],al
  407820:	jae    0x4077d6
  407822:	ss xchg edi,ebx
  407825:	pop    ds
  407826:	xchg   ah,ah
  407828:	test   eax,0x86f2345e
  40782d:	out    dx,eax
  40782e:	stos   DWORD PTR es:[edi],eax
  40782f:	ficom  DWORD PTR [esi+0x181878c2]
  407835:	in     eax,dx
  407836:	inc    ecx
  407837:	and    al,0xe5
  407839:	in     al,0x13
  40783b:	xchg   ebp,eax
  40783c:	adc    esp,DWORD PTR [edi-0x72]
  40783f:	sahf   
  407840:	or     al,0x52
  407842:	call   0xaff1:0x876667ee
  407849:	dec    edi
  40784a:	nop
  40784b:	mov    bh,0xae
  40784d:	xchg   esi,eax
  40784e:	cwde   
  40784f:	ror    BYTE PTR [ebp-0x6b],0x4b
  407853:	xchg   ecx,eax
  407854:	(bad)  
  407855:	push   esi
  407856:	push   edi
  407857:	mov    bh,0xdc
  407859:	cmc    
  40785a:	lock fs scas eax,DWORD PTR es:[edi]
  40785d:	add    eax,0x58da6070
  407862:	mov    WORD PTR [eax-0x6ad81605],fs
  407868:	test   al,0xc4
  40786a:	dec    ebp
  40786b:	test   dh,0xbd
  40786e:	mov    eax,cs
  407870:	rol    DWORD PTR [edx+0x2b28e6f6],cl
  407876:	(bad)  
  407877:	mov    bh,0x11
  407879:	push   ebx
  40787a:	div    BYTE PTR gs:[edi+0x72]
  40787e:	(bad)  
  40787f:	xchg   esi,eax
  407880:	xchg   ebp,eax
  407881:	cdq    
  407882:	inc    esi
  407883:	adc    ecx,DWORD PTR [ebp+0x7923cc79]
  407889:	pop    edx
  40788a:	sbb    BYTE PTR [esp+ebx*8],0xf4
  40788e:	mov    cl,0x76
  407890:	and    al,0x48
  407892:	pop    ebx
  407893:	xchg   ebp,eax
  407894:	scas   al,BYTE PTR es:[edi]
  407895:	add    BYTE PTR [ebp-0x1ebc3404],0x80
  40789c:	xchg   DWORD PTR [esi+0x5a],esp
  40789f:	data16 fnstcw WORD PTR [esi+0x2dbd53f2]
  4078a6:	daa    
  4078a7:	test   BYTE PTR [ecx+0x79a020a8],bh
  4078ad:	pop    eax
  4078ae:	shr    BYTE PTR [esi],0x7c
  4078b1:	xor    BYTE PTR [ebx],dl
  4078b3:	adc    DWORD PTR [esi+esi*8+0x4c0f52eb],ebp
  4078ba:	xor    al,0xfe
  4078bc:	or     al,0x69
  4078be:	and    al,0x20
  4078c0:	int    0x9f
  4078c2:	sub    ebx,0xc605c166
  4078c8:	ds xchg ebx,eax
  4078ca:	sti    
  4078cb:	imul   ecx,DWORD PTR [ebx],0xffffffae
  4078ce:	das    
  4078cf:	aam    0xa7
  4078d1:	test   DWORD PTR [ebp+0x52],ebx
  4078d4:	outs   dx,DWORD PTR ds:[esi]
  4078d5:	push   eax
  4078d6:	jg     0x407887
  4078d8:	fnsave [eax+0x38c3ac9e]
  4078de:	push   ds
  4078df:	mov    ebp,0x99d4dcce
  4078e4:	scas   eax,DWORD PTR es:[edi]
  4078e5:	cdq    
  4078e6:	push   edx
  4078e7:	loop   0x4078e1
  4078e9:	ret    0x9c8e
  4078ec:	stc    
  4078ed:	dec    eax
  4078ee:	out    dx,al
  4078ef:	cmp    BYTE PTR [ebp+edi*1-0x439bca3c],bl
  4078f6:	icebp  
  4078f7:	sbb    al,ch
  4078f9:	pop    es
  4078fa:	pop    ss
  4078fb:	mov    bh,0x16
  4078fd:	enter  0xcbed,0x4f
  407901:	cmp    edi,DWORD PTR [edi+0x71658735]
  407907:	add    BYTE PTR [ebx+0x9501f9],dh
  40790d:	mov    edx,DWORD PTR [edi+ebx*1-0x3]
  407911:	xor    BYTE PTR [ecx],0x1d
  407914:	shl    bl,cl
  407916:	ins    DWORD PTR es:[edi],dx
  407917:	imul   esp,ebx,0xd6729633
  40791d:	or     dh,BYTE PTR [ebp-0x44de4a60]
  407923:	push   esp
  407924:	arpl   WORD PTR ds:0xa50bf18b,di
  40792a:	mov    bh,0x3c
  40792c:	shl    DWORD PTR [ecx+0x75],cl
  40792f:	div    DWORD PTR [ecx+0x324a8170]
  407935:	sbb    al,0x57
  407937:	cmp    BYTE PTR [ecx],0xd3
  40793a:	add    BYTE PTR [edi],al
  40793c:	jmp    0x1ca3:0x6cad777b
  407943:	ins    BYTE PTR es:[edi],dx
  407944:	mov    DWORD PTR [edi],ebx
  407946:	mov    esi,0xb09ca07f
  40794b:	std    
  40794c:	xor    al,0xc3
  40794e:	mov    edi,0xa029a49d
  407953:	ret    0x8b3a
  407956:	mov    dl,0xf5
  407958:	imul   esi,esp,0x32
  40795b:	cmp    al,0xb5
  40795d:	repnz ins DWORD PTR es:[edi],dx
  40795f:	es cmc 
  407961:	add    eax,DWORD PTR [edi]
  407963:	mov    eax,0xaffb26a7
  407968:	mov    esp,DWORD PTR [esi]
  40796a:	lock adc BYTE PTR [ebx],0xfa
  40796e:	jge    0x4079ab
  407970:	sub    esi,DWORD PTR [bp-0x2b31]
  407975:	je     0x407909
  407977:	popa   
  407978:	pop    edi
  407979:	fadd   QWORD PTR [ecx+0x66]
  40797c:	xchg   esp,eax
  40797d:	(bad)  
  40797e:	cmp    eax,0x3770f118
  407983:	mov    esi,0x378ae5a7
  407988:	pop    ebp
  407989:	jns    0xd7ac4c83
  40798f:	sbb    DWORD PTR [edx-0x445fda49],edx
  407995:	(bad)
  407999:	cmp    DWORD PTR [ebp+0xc4772e9],edx
  40799f:	adc    DWORD PTR [edx-0x956c75f],0x27
  4079a6:	push   edx
  4079a7:	loop   0x407935
  4079a9:	ret    0xd912
  4079ac:	push   0x104ec0de
  4079b1:	push   ebx
  4079b2:	in     eax,dx
  4079b3:	(bad)  [edi-0x6e]
  4079b6:	mov    al,0xa4
  4079b8:	js     0x4079f3
  4079ba:	sbb    al,0x7
  4079bc:	jb     0x407a08
  4079be:	fcom   st(3)
  4079c0:	sbb    al,0x23
  4079c2:	add    esi,DWORD PTR [edx+0x2c]
  4079c5:	test   eax,0xf4cfdcd1
  4079ca:	fldcw  WORD PTR ds:0x72ed4a1d
  4079d0:	cmp    esp,DWORD PTR [ecx-0x65]
  4079d3:	add    ch,BYTE PTR [ebp+0x22]
  4079d6:	shl    BYTE PTR [edx],1
  4079d8:	jle    0x4079a4
  4079da:	sbb    al,0x96
  4079dc:	or     esi,DWORD PTR [esi-0x13ddbe81]
  4079e2:	add    ebp,ebp
  4079e4:	stos   DWORD PTR es:[edi],eax
  4079e5:	pop    ds
  4079e6:	mov    BYTE PTR [edi],ch
  4079e8:	fiadd  WORD PTR [ebx+0x55]
  4079eb:	retf   0xafe4
  4079ee:	adc    eax,0xd87306c3
  4079f3:	dec    ebx
  4079f4:	ins    DWORD PTR es:[edi],dx
  4079f5:	jg     0x407a1c
  4079f7:	out    dx,al
  4079f8:	mov    eax,DWORD PTR [ebp-0xc]
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0xc37e350
  407a58:	dec    ecx
  407a59:	xchg   esi,eax
  407a5a:	adc    eax,0x7a7a3ca3
  407a5f:	in     eax,0x5f
  407a61:	jp     0x407add
  407a63:	cmp    al,0xa2
  407a65:	aas    
  407a66:	xchg   esi,eax
  407a67:	add    eax,0x9dfdbf55
  407a6c:	push   esi
  407a6d:	pushf  
  407a6e:	xchg   ebp,eax
  407a6f:	mov    esi,0x4eb267d7
  407a74:	cmp    ebx,DWORD PTR [ecx-0x6a769a56]
  407a7a:	pusha  
  407a7b:	dec    edx
  407a7c:	fimul  DWORD PTR [ebp-0xd]
  407a7f:	rcl    BYTE PTR [eax],1
  407a81:	jns    0x407a14
  407a83:	sbb    al,0xce
  407a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a86:	adc    BYTE PTR [eax+0x4dbed66a],ch
  407a8c:	inc    edx
  407a8d:	push   edi
  407a8e:	stc    
  407a8f:	mov    ds,WORD PTR [esi]
  407a91:	mov    ecx,0x8329f225
  407a96:	push   ecx
  407a97:	pop    esi
  407a98:	mov    BYTE PTR [eax],dl
  407a9a:	add    edi,DWORD PTR [esi+0x6c]
  407a9d:	adc    bl,BYTE PTR [eax]
  407a9f:	retf   
  407aa0:	jne    0x407a63
  407aa2:	cli    
  407aa3:	into   
  407aa4:	mov    ds:0xd49f6015,eax
  407aa9:	cwde   
  407aaa:	test   al,0x10
  407aac:	sub    edi,DWORD PTR [ecx+eiz*1+0x4f]
  407ab0:	jnp    0x407aae
  407ab2:	push   0xdbb79ff9
  407ab7:	iret   
  407ab8:	in     al,dx
  407ab9:	leave  
  407aba:	loope  0x407ac0
  407abc:	dec    eax
  407abd:	and    al,0x63
  407abf:	dec    esi
  407ac0:	mov    bh,0xd4
  407ac2:	xchg   ebp,eax
  407ac3:	test   eax,0x50ba9f49
  407ac8:	dec    ebp
  407ac9:	icebp  
  407aca:	push   edx
  407acb:	jl     0x407b19
  407acd:	lds    ecx,FWORD PTR [edi+ebp*8-0x30ec90c1]
  407ad4:	sub    al,0x72
  407ad6:	jmp    0x407ae1
  407ad8:	push   esi
  407ad9:	mov    ebp,0x98bb2582
  407ade:	cdq    
  407adf:	xor    esp,ebp
  407ae1:	fcomp  QWORD PTR [esi-0x45]
  407ae4:	enter  0xc376,0x6d
  407ae8:	pop    ebx
  407ae9:	cld    
  407aea:	aam    0x39
  407aec:	xchg   DWORD PTR [ebx+eax*1],esp
  407aef:	xchg   edi,eax
  407af0:	je     0x407b3b
  407af2:	cmp    edi,0xb5eb589c
  407af8:	les    ebx,FWORD PTR [edi-0x79afa514]
  407afe:	mov    esi,0x47bd804d
  407b03:	or     bh,BYTE PTR [edx-0x29]
  407b06:	ret    
  407b07:	scas   eax,DWORD PTR es:[edi]
  407b08:	mov    eax,ds:0xefda7682
  407b0d:	cwde   
  407b0e:	xchg   BYTE PTR [ebx+0x6bb0f31c],ah
  407b14:	stc    
  407b15:	inc    bh
  407b17:	hlt    
  407b18:	push   0x63
  407b1a:	cmp    BYTE PTR [ebx],ah
  407b1c:	push   esp
  407b1d:	cmp    al,0x8f
  407b1f:	fistp  DWORD PTR [ebx]
  407b21:	adc    al,0xad
  407b23:	adc    DWORD PTR [eax],0x5685dd4
  407b29:	(bad)  
  407b2a:	mov    bl,0x73
  407b2c:	loopne 0x407b3d
  407b2e:	retf   
  407b2f:	pop    edx
  407b30:	dec    esp
  407b31:	xchg   edx,eax
  407b32:	jo     0x407b19
  407b34:	ja     0x407b7a
  407b36:	xor    cl,BYTE PTR [esi+0x3f]
  407b39:	cmp    dh,0x74
  407b3c:	stos   BYTE PTR es:[edi],al
  407b3d:	popa   
  407b3e:	jl     0x407b89
  407b40:	(bad)  
  407b41:	les    edi,FWORD PTR [eax+0x3c0fb61e]
  407b47:	mov    eax,ds:0xeb0b521f
  407b4c:	xor    BYTE PTR [eax+0xe30c549],0x24
  407b53:	push   ebp
  407b54:	add    al,0xc3
  407b56:	repz mov bl,0xc
  407b59:	inc    ebx
  407b5a:	dec    esi
  407b5c:	pop    ebp
  407b5d:	cmc    
  407b5e:	cli    
  407b5f:	jno    0x407b1d
  407b61:	fwait
  407b62:	jecxz  0x407af5
  407b64:	sbb    eax,0x7cc14a1b
  407b69:	or     BYTE PTR [edi],ah
  407b6b:	push   ebx
  407b6c:	adc    al,BYTE PTR [edi]
  407b6e:	mov    ds:0x6f69ed58,al
  407b73:	mov    edx,0x2cb5dcde
  407b78:	sub    eax,DWORD PTR [esi+edi*8]
  407b7b:	sub    bl,dl
  407b7d:	scas   eax,DWORD PTR es:[edi]
  407b7e:	adc    eax,0xc2dfbec1
  407b83:	mov    dh,0xbc
  407b85:	or     DWORD PTR [eax-0x49],0x21d9f723
  407b8c:	pop    ds
  407b8d:	mov    al,dl
  407b8f:	dec    BYTE PTR [edi-0x49]
  407b92:	sti    
  407b93:	sub    al,0xef
  407b95:	retf   0x1d69
  407b98:	(bad)  
  407b99:	(bad)  
  407b9a:	jns    0x407c0c
  407b9c:	jbe    0x407b56
  407b9e:	xchg   ecx,eax
  407b9f:	push   ds
  407ba0:	and    esi,DWORD PTR [eax+ecx*2+0x5ef5959a]
  407ba7:	scas   al,BYTE PTR es:[edi]
  407ba8:	pop    ds
  407ba9:	jl     0x407c23
  407bab:	shl    DWORD PTR [ebp-0x10fb7835],0x4a
  407bb2:	es scas eax,DWORD PTR es:[edi]
  407bb4:	jmp    0x73c173f1
  407bb9:	sar    BYTE PTR [edi],cl
  407bbb:	pop    ecx
  407bbc:	in     eax,dx
  407bbd:	ja     0x407be2
  407bbf:	aaa    
  407bc0:	int3   
  407bc1:	add    DWORD PTR [esi+0x10e37f87],edx
  407bc7:	cmp    eax,0x88065c67
  407bcc:	(bad)
  407bd0:	jmp    0x407b67
  407bd2:	pop    esp
  407bd3:	jmp    0x53b6636e
  407bd8:	or     BYTE PTR [edi-0x2d86979f],0xfe
  407bdf:	pop    ss
  407be0:	push   ecx
  407be1:	rol    DWORD PTR [ebx-0x1f140e70],cl
  407be7:	fsub   QWORD PTR [edx-0x1b]
  407bea:	cmp    esi,DWORD PTR [ebx]
  407bec:	sub    ebp,DWORD PTR [esi+ebx*8+0x4c6f2b2]
  407bf3:	out    dx,eax
  407bf4:	push   eax
  407bf5:	out    dx,eax
  407bf6:	imul   edi,DWORD PTR [edx],0xd5141422
  407bfc:	or     dh,BYTE PTR [esi]
  407bfe:	cmp    al,0x1b
  407c00:	mov    dl,al
  407c02:	push   esi
  407c03:	popf   
  407c04:	bound  ebp,QWORD PTR [esi+0x65]
  407c07:	mov    ebp,0xb248a42d
  407c0c:	pop    esi
  407c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c0e:	cmp    al,0x1a
  407c10:	daa    
  407c11:	cli    
  407c12:	jnp    0x407c1f
  407c14:	or     BYTE PTR [ebx-0x4471c8e3],ch
  407c1a:	jne    0x407c18
  407c1c:	repnz sti 
  407c1e:	js     0x407c3f
  407c20:	dec    eax
  407c21:	(bad)  
  407c22:	push   cs
  407c23:	sbb    al,0x48
  407c25:	pop    ecx
  407c26:	cmp    ecx,DWORD PTR [eax+0x7e1768a0]
  407c2c:	mov    ebp,0xff696f1c
  407c31:	fldenv [ebx+ebp*4-0x37e375c7]
  407c38:	push   esp
  407c39:	inc    ebx
  407c3a:	popa   
  407c3b:	mov    ah,0xe7
  407c3d:	call   0x60b1:0x8625a461
  407c44:	mov    eax,esp
  407c46:	out    0x3b,al
  407c48:	lods   eax,DWORD PTR ds:[esi]
  407c49:	jmp    0x3c31:0x60b23120
  407c50:	sub    DWORD PTR fs:[ecx-0x5e],ebx
  407c54:	punpcklbw mm0,mm4
  407c57:	mov    ah,0x78
  407c59:	gs iret 
  407c5b:	lea    eax,[ecx-0x3d]
  407c5e:	sahf   
  407c5f:	mov    WORD PTR [ecx],ss
  407c61:	scas   al,BYTE PTR es:[edi]
  407c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c63:	jge    0x407c19
  407c65:	mov    edx,0xa07a0516
  407c6a:	xchg   esi,eax
  407c6b:	push   es
  407c6c:	xchg   ebp,eax
  407c6d:	jecxz  0x407c87
  407c6f:	pop    edi
  407c70:	aas    
  407c71:	addr16 in al,0x64
  407c74:	sbb    eax,0x97c8d07b
  407c79:	daa    
  407c7a:	jmp    0x5985:0xc9ae31d6
  407c81:	loope  0x407c3c
  407c83:	and    eax,0x6a4d28e3
  407c88:	(bad)  
  407c89:	dec    edi
  407c8a:	mov    edx,0x8862018f
  407c8f:	sbb    dl,BYTE PTR [esi]
  407c91:	in     eax,dx
  407c92:	ins    BYTE PTR es:[edi],dx
  407c93:	push   ds
  407c94:	jb     0x407d14
  407c96:	add    eax,0xded06968
  407c9b:	call   DWORD PTR [ebp+ebp*8+0x53dd4fe5]
  407ca2:	or     eax,0x48424ab9
  407ca7:	pop    ds
  407ca8:	sbb    DWORD PTR [ebp+0x63],ebp
  407cab:	das    
  407cac:	(bad)  
  407cad:	jg     0x407cc4
  407caf:	mov    bh,BYTE PTR [ebx+0x63]
  407cb2:	ret    
  407cb3:	shl    edi,0xf6
  407cb6:	loope  0x407cd3
  407cb8:	inc    esp
  407cb9:	sub    eax,0xf373ba9c
  407cbe:	cdq    
  407cbf:	inc    edi
  407cc0:	adc    dl,cl
  407cc2:	dec    ebp
  407cc3:	mov    al,ds:0x147a4d96
  407cc8:	add    al,ch
  407cca:	pushf  
  407ccb:	cmp    edx,DWORD PTR [eax-0x35]
  407cce:	inc    BYTE PTR [esi+0x2]
  407cd1:	jge    0x407d18
  407cd3:	sbb    bh,BYTE PTR [ebx+esi*4]
  407cd6:	and    BYTE PTR [esp+edx*4+0x4b5dd6f7],ch
  407cdd:	icebp  
  407cde:	cmp    eax,0xba01999f
  407ce3:	clc    
  407ce4:	jg     0x407d32
  407ce6:	mov    eax,0xb5c9b63
  407ceb:	mov    eax,ds:0xbf249def
  407cf0:	mov    edi,0x41cd38bf
  407cf5:	add    al,0x88
  407cf7:	fist   WORD PTR [edi-0x75]
  407cfa:	out    dx,al
  407cfb:	dec    edi
  407cfc:	cmp    bl,BYTE PTR [eax+0x4f02e79f]
  407d02:	mov    cl,0xe7
  407d04:	cli    
  407d05:	mov    eax,ds:0x7a2eec66
  407d0a:	lea    ecx,[eax+0x4]
  407d0d:	call   0x8e78:0xa0f76bc0
  407d14:	adc    al,0x9a
  407d16:	adc    eax,0x425bfe73
  407d1b:	pop    esi
  407d1c:	mov    WORD PTR [ecx-0x74],gs
  407d1f:	mov    ch,0x9d
  407d21:	add    al,0xe6
  407d23:	cmp    al,0xa4
  407d25:	iret   
  407d26:	data16 cs jle 0x407cea
  407d2a:	pop    ds
  407d2b:	mov    gs,ecx
  407d2d:	stos   BYTE PTR es:[edi],al
  407d2e:	add    BYTE PTR [edi],0x75
  407d31:	clc    
  407d32:	fnstenv [edi+0x17fab861]
  407d38:	add    eax,0x4d9586d8
  407d3d:	test   al,0xec
  407d3f:	lea    ebx,[ebx+0x4e036de6]
  407d45:	jge    0x407d4e
  407d47:	or     ebp,ebx
  407d49:	lahf   
  407d4a:	imul   ebx,DWORD PTR [eax+0x38],0x70e2e2a3
  407d51:	pop    ds
  407d52:	push   0xf26700fe
  407d57:	mov    eax,ds:0x7dfbe6a8
  407d5c:	sti    
  407d5d:	lahf   
  407d5e:	pop    esi
  407d5f:	in     eax,dx
  407d60:	jl     0x407d9f
  407d62:	jp     0x407ddf
  407d64:	test   al,0xc6
  407d66:	out    dx,eax
  407d67:	xchg   edi,eax
  407d68:	mov    eax,ds:0x89ded9f6
  407d6d:	push   es
  407d6e:	ret    
  407d6f:	fsubr  DWORD PTR [ebp+0x6b]
  407d72:	push   es
  407d73:	clc    
  407d74:	mov    dh,0xf7
  407d76:	(bad)  
  407d77:	push   edx
  407d78:	fdiv   DWORD PTR [edi+0xf0abf5b]
  407d7e:	jmp    0x8bb4:0x24421f07
  407d85:	pop    eax
  407d86:	test   eax,0xef51b93c
  407d8b:	add    BYTE PTR [ebx],0xb1
  407d8e:	popa   
  407d8f:	je     0x407d35
  407d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d92:	fistp  QWORD PTR [eax+0x245c4b50]
  407d98:	xchg   edx,eax
  407d99:	imul   ecx,DWORD PTR [ecx+0x17],0x53
  407d9d:	div    DWORD PTR [edx+0x5e10e938]
  407da3:	jg     0x407e02
  407da5:	(bad)  
  407da6:	mov    eax,ds:0xa513d3e2
  407dab:	jg     0x407dbd
  407dad:	sbb    al,dh
  407daf:	jb     0x407dd6
  407db1:	arpl   WORD PTR ds:0xbfd2bbec,bx
  407db7:	add    al,0xa6
  407db9:	imul   esi,DWORD PTR [edx],0x7d
  407dbc:	mov    al,ds:0x8fdef7f1
  407dc1:	imul   ebp,DWORD PTR [ebp+0xc],0xffffff87
  407dc5:	(bad)  
  407dc6:	pop    edx
  407dc7:	inc    ebp
  407dc8:	sub    BYTE PTR [eax+ebp*4+0x5],cl
  407dcc:	add    eax,0xd63b3f30
  407dd1:	xchg   esi,eax
  407dd2:	dec    esi
  407dd3:	call   0xf983:0x8897b106
  407dda:	pop    eax
  407ddb:	(bad)  [edi+0x19490ed4]
  407de1:	push   0xffffff88
  407de3:	cmp    DWORD PTR [edi-0x1504f608],eax
  407de9:	daa    
  407dea:	xchg   ebp,eax
  407deb:	sub    ebp,eax
  407ded:	and    eax,DWORD PTR [edx-0x2f]
  407df0:	(bad)  
  407df1:	enter  0x76c6,0x9d
  407df5:	stc    
  407df6:	scas   eax,DWORD PTR es:[edi]
  407df7:	retf   0x7d5
  407dfa:	pusha  
  407dfb:	push   ecx
  407dfc:	clc    
  407dfd:	call   0x267380e7
  407e02:	pop    edx
  407e03:	(bad)  [ebx]
  407e05:	cdq    
  407e06:	js     0x407df3
  407e08:	jmp    0x407d91
  407e0a:	push   0xab7d87fd
  407e0f:	inc    esp
  407e10:	mov    ds:0x73c67529,eax
  407e15:	pop    ds
  407e16:	outs   dx,DWORD PTR ds:[esi]
  407e17:	pop    eax
  407e18:	push   ebp
  407e19:	xchg   edi,eax
  407e1a:	or     esi,DWORD PTR [esi-0x74]
  407e1d:	leave  
  407e1e:	mov    al,ds:0x295a368a
  407e23:	pop    esp
  407e24:	cmp    ebx,ecx
  407e26:	std    
  407e27:	sub    eax,0x829b2199
  407e2c:	or     eax,0x8d8a9b62
  407e31:	mov    cl,0x18
  407e33:	aad    0x53
  407e35:	mov    esi,0x8fe9d67b
  407e3a:	lahf   
  407e3b:	stos   DWORD PTR es:[edi],eax
  407e3c:	dec    ecx
  407e3d:	fdiv   DWORD PTR [esi-0x5e]
  407e40:	sbb    eax,0x60fe16d6
  407e45:	add    al,0x39
  407e47:	inc    edi
  407e48:	pop    eax
  407e49:	ret    0xd98f
  407e4c:	or     eax,0xd29c56a1
  407e51:	loop   0x407eb3
  407e53:	dec    eax
  407e54:	or     esp,DWORD PTR [esi]
  407e56:	gs test eax,0xc7cc3b74
  407e5c:	test   al,0xad
  407e5e:	pop    edi
  407e5f:	xchg   esp,eax
  407e60:	jnp    0x407ed0
  407e62:	int3   
  407e63:	mov    edx,0x9f755f60
  407e68:	jnp    0x407e77
  407e6a:	mov    cs,WORD PTR [esi-0x675da6c1]
  407e70:	rcr    al,1
  407e72:	sub    al,0xd9
  407e74:	addr16 push esi
  407e76:	jle    0x407e6b
  407e78:	or     DWORD PTR [esi+0x670578e2],0x7d72deee
  407e82:	inc    esi
  407e83:	mov    ah,BYTE PTR [edi+0x6a]
  407e86:	js     0x407f01
  407e88:	push   ebp
  407e89:	hlt    
  407e8a:	and    BYTE PTR [esp+ebp*8+0x7],dl
  407e8e:	(bad)  
  407e8f:	mov    dh,0xc6
  407e91:	cmp    BYTE PTR [edx+esi*1],ah
  407e94:	mov    esp,esp
  407e96:	pop    ss
  407e97:	or     al,0x7e
  407e99:	loope  0x407e69
  407e9b:	pusha  
  407e9c:	dec    ebx
  407e9d:	jmp    DWORD PTR [esi+0x6ed328f4]
  407ea3:	std    
  407ea4:	ja     0x407f1a
  407ea6:	arpl   WORD PTR [ecx-0x69981aea],bx
  407eac:	ret    0xb747
  407eaf:	adc    cl,dl
  407eb1:	jmp    0x1e29:0xfecaba61
  407eb8:	adc    al,0xe8
  407eba:	int    0x3b
  407ebc:	scas   eax,DWORD PTR es:[edi]
  407ebd:	xchg   ecx,eax
  407ebe:	(bad)  [ebx+ebp*2-0x5]
  407ec2:	cdq    
  407ec3:	mov    ah,0x42
  407ec5:	dec    esi
  407ec6:	push   cs
  407ec7:	push   ss
  407ec8:	lods   al,BYTE PTR ds:[esi]
  407ec9:	call   0xc180:0x90b9a711
  407ed0:	inc    ebx
  407ed1:	pop    edx
  407ed2:	les    eax,FWORD PTR [ebx+edx*8+0x758c8315]
  407ed9:	(bad)  
  407eda:	jg     0x407f0a
  407edc:	test   BYTE PTR [esi],al
  407ede:	int3   
  407edf:	cmp    eax,DWORD PTR [edx-0xf]
  407ee2:	dec    esp
  407ee3:	fdivrp st(5),st
  407ee5:	int3   
  407ee6:	dec    esp
  407ee7:	or     BYTE PTR [ecx+0x168556cb],ah
  407eed:	push   0xcf75479
  407ef2:	xchg   esi,eax
  407ef3:	push   esp
  407ef4:	je     0x407f50
  407ef6:	push   esi
  407ef7:	xor    al,0x2
  407ef9:	or     DWORD PTR [ecx+ecx*4],eax
  407efc:	jmp    0x7ba:0x6bd2c765
  407f03:	jmp    0x703f:0xe268462f
  407f0a:	dec    ebp
  407f0b:	mov    ebp,0x7e647c89
  407f10:	addr16 mov esp,0x5f5d51b2
  407f16:	xor    dl,BYTE PTR [ebp+0x443945be]
  407f1c:	mov    ds:0x8206b1f7,al
  407f21:	and    BYTE PTR [esi-0x1ed943cc],bh
  407f27:	mov    ecx,0x88eebfda
  407f2c:	and    al,0x79
  407f2e:	jg     0x407ef5
  407f30:	jne    0x407f0d
  407f32:	pop    es
  407f33:	test   eax,0x7fe1ec5f
  407f38:	gs adc al,0xd
  407f3b:	push   ebp
  407f3c:	sbb    al,0xff
  407f3e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407f40:	mov    ebx,0xb2931af
  407f45:	or     ah,BYTE PTR [edx-0x2598eb8c]
  407f4b:	test   eax,0x69232d4c
  407f50:	ja     0x407fa6
  407f52:	mov    bl,0xcb
  407f54:	and    BYTE PTR [edx+0x6e],0xc5
  407f58:	xchg   ecx,eax
  407f59:	mov    al,0x5a
  407f5b:	adc    bl,BYTE PTR [edx]
  407f5d:	push   es
  407f5e:	cld    
  407f5f:	pop    eax
  407f60:	add    eax,0xaf301dd4
  407f65:	jle    0x407f2e
  407f67:	enter  0xabe,0xfa
  407f6b:	aas    
  407f6c:	push   ebx
  407f6d:	and    DWORD PTR [edi],0x29
  407f70:	xchg   esp,eax
  407f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f72:	adc    DWORD PTR [eax-0x3],ebx
  407f75:	mov    edi,fs
  407f77:	(bad)  
  407f79:	es sub eax,0x25114a34
  407f7f:	xor    eax,0x6afc9c54
  407f84:	nop
  407f85:	imul   edi,DWORD PTR [ecx+0x4fab6722],0x6f884152
  407f8f:	push   ebx
  407f90:	or     eax,0xed33a169
  407f95:	mov    esp,0xb604c023
  407f9a:	mov    bh,BYTE PTR [edx+ebx*8]
  407f9d:	fs push edi
  407f9f:	popf   
  407fa0:	dec    ebp
  407fa1:	jge    0x408005
  407fa3:	sti    
  407fa4:	inc    ebp
  407fa5:	enter  0x1b2f,0x20
  407fa9:	rol    DWORD PTR [eax],0x57
  407fac:	mov    eax,0xb7356d5a
  407fb1:	inc    ebx
  407fb2:	pop    ss
  407fb3:	retf   
  407fb4:	fidivr DWORD PTR [ebp+0x7f1e5f9c]
  407fba:	jge    0x407fde
  407fbc:	mov    cl,0xc0
  407fbe:	and    eax,0xa94d30a2
  407fc3:	cmp    BYTE PTR [ebx],bh
  407fc5:	adc    al,BYTE PTR [ebx-0x6c]
  407fc8:	jo     0x407f62
  407fca:	sahf   
  407fcb:	inc    esi
  407fcc:	cwde   
  407fcd:	pop    esi
  407fce:	sub    bl,dl
  407fd0:	repz xor edx,DWORD PTR gs:[eax+0x4]
  407fd5:	lock outs dx,BYTE PTR ds:[esi]
  407fd8:	adc    DWORD PTR [ecx+eax*1+0x12],0x74
  407fdd:	lods   eax,DWORD PTR ds:[esi]
  407fde:	out    dx,al
  407fdf:	jns    0x407fc9
  407fe1:	inc    eax
  407fe2:	dec    edx
  407fe3:	shl    DWORD PTR [ebx],1
  407fe5:	xor    ah,bh
  407fe7:	add    DWORD PTR [edx],0x98704923
  407fed:	add    BYTE PTR [ebx],bl
  407fef:	cmp    eax,0x695378e1
  407ff4:	stos   BYTE PTR es:[edi],al
  407ff5:	cmp    esi,esi
  407ff7:	or     al,BYTE PTR [ecx]
  407ff9:	adc    esi,DWORD PTR [ebp-0x6930062b]
  407fff:	daa    
  408000:	jns    0x407faf
  408002:	mov    esp,0x9210b665
  408007:	xchg   ecx,eax
  408008:	stos   BYTE PTR es:[edi],al
  408009:	fs mov bh,0xac
  40800c:	daa    
  40800d:	dec    ebp
  40800e:	and    ebp,eax
  408010:	push   esp
  408011:	adc    al,0xde
  408013:	(bad)  
  408014:	jo     0x407fc0
  408016:	xchg   ebx,eax
  408017:	push   cs
  408018:	pop    ds
  408019:	ror    BYTE PTR [ecx+0x696f8f3f],cl
  40801f:	mov    bl,0x35
  408021:	jl     0x408089
  408023:	xchg   esp,eax
  408024:	pop    ecx
  408025:	and    al,0x91
  408027:	scas   eax,DWORD PTR es:[edi]
  408028:	jmp    0x8c82:0xf3560d18
  40802f:	mov    bh,0x51
  408031:	div    DWORD PTR [esi]
  408033:	sti    
  408034:	imul   eax,DWORD PTR ds:0x7c45724e,0x819e278e
  40803e:	fadd   QWORD PTR [ebp-0x70]
  408041:	inc    eax
  408042:	das    
  408043:	leave  
  408044:	dec    edx
  408045:	mov    ebp,0x509185cd
  40804a:	out    dx,al
  40804b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804c:	add    dh,0x55
  40804f:	dec    eax
  408050:	and    BYTE PTR [ebx-0x6a],dl
  408053:	hlt    
  408054:	or     ebx,esi
  408056:	jle    0x407fde
  408058:	push   esi
  408059:	stos   DWORD PTR es:[edi],eax
  40805a:	iret   
  40805b:	ret    
  40805c:	mov    ecx,0xcebb4beb
  408061:	xor    al,0x99
  408063:	iret   
  408064:	jns    0x40806f
  408066:	ror    BYTE PTR [edx-0x10876b5f],0xb4
  40806d:	pop    ecx
  40806e:	pop    ebx
  40806f:	or     bh,BYTE PTR [edx-0x25]
  408072:	ja     0x4080c4
  408074:	js     0x408061
  408076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408077:	adc    cl,0xc1
  40807a:	daa    
  40807b:	icebp  
  40807c:	fcmovu st,st(2)
  40807e:	inc    esi
  40807f:	push   edi
  408080:	lahf   
  408081:	sub    ebp,esi
  408083:	inc    eax
  408084:	mov    WORD PTR [ebx+0x9],fs
  408087:	mov    al,0x30
  408089:	add    edx,DWORD PTR [esi+0x751bf140]
  40808f:	xor    DWORD PTR [ecx+0x42],ecx
  408092:	adc    eax,0xcc1e7fd6
  408097:	adc    DWORD PTR [ebx-0x59],esp
  40809a:	xchg   DWORD PTR [ecx+0x789dafd6],edi
  4080a0:	inc    eax
  4080a1:	adc    al,0x9e
  4080a3:	mov    ecx,0x2529f39
  4080a8:	rol    dl,1
  4080aa:	pop    ecx
  4080ab:	mov    BYTE PTR [eax],al
  4080ad:	scas   eax,DWORD PTR es:[edi]
  4080ae:	in     eax,dx
  4080af:	not    DWORD PTR [ebx]
  4080b1:	sbb    al,0xf2
  4080b3:	pop    es
  4080b4:	dec    ecx
  4080b5:	dec    esp
  4080b6:	jns    0x408051
  4080b8:	adc    bh,BYTE PTR [eax]
  4080ba:	test   al,0x48
  4080bc:	add    eax,0x72378d95
  4080c1:	mov    ebp,0x661f3329
  4080c6:	pop    ds
  4080c7:	dec    esp
  4080c8:	out    dx,eax
  4080c9:	inc    esi
  4080ca:	and    al,0x45
  4080cc:	pushf  
  4080cd:	cmp    al,ch
  4080cf:	dec    ebx
  4080d0:	and    edx,DWORD PTR [edx]
  4080d2:	int    0x5e
  4080d4:	push   es
  4080d5:	push   ebp
  4080d6:	cli    
  4080d7:	fmul   QWORD PTR ds:[ebp-0x38879449]
  4080de:	jno    0x4080ae
  4080e0:	sti    
  4080e1:	pushw  ss
  4080e3:	cld    
  4080e4:	scas   al,BYTE PTR es:[edi]
  4080e5:	cmp    DWORD PTR [ecx-0x2aec7f12],ebx
  4080eb:	shl    DWORD PTR [edx-0x36],cl
  4080ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ef:	inc    edi
  4080f0:	add    esi,DWORD PTR [esi]
  4080f2:	mov    al,0xf6
  4080f4:	gs jne 0x40809e
  4080f7:	jo     0x408167
  4080f9:	fiadd  WORD PTR [esi+0x2eb961f2]
  4080ff:	dec    esp
  408100:	xchg   DWORD PTR [edi-0xae5cbf],esp
  408106:	(bad)  
  408107:	and    cl,BYTE PTR [ecx]
  408109:	std    
  40810a:	or     eax,0xe6a07ce0
  40810f:	jge    0x408130
  408111:	ret    0x2e15
  408114:	rol    bh,0xe3
  408117:	addr16 icebp 
  408119:	repnz sbb BYTE PTR [edi+0x6d],0x97
  40811e:	arpl   WORD PTR ds:0x1c6f4d80,dx
  408124:	leave  
  408125:	repnz (bad) 
  408127:	pop    ss
  408128:	repz xlat BYTE PTR ds:[ebx]
  40812a:	loop   0x408114
  40812c:	popf   
  40812d:	or     DWORD PTR [esi],0xb6e90ee0
  408133:	sbb    DWORD PTR [eax-0x75],ebx
  408136:	daa    
  408137:	push   0x25
  408139:	sub    BYTE PTR [ecx-0x6921dfbb],dh
  40813f:	in     eax,dx
  408140:	xor    dh,BYTE PTR [eax+eiz*8]
  408143:	push   ss
  408144:	pop    esi
  408145:	imul   edx,DWORD PTR [ebx+eax*4],0xa3a7fcf2
  40814c:	jmp    0x408130
  40814e:	in     eax,0x82
  408150:	cmc    
  408151:	imul   al
  408153:	in     al,dx
  408154:	cwde   
  408155:	nop
  408156:	je     0x4080db
  408158:	mov    al,BYTE PTR [eax+0xd]
  40815b:	call   0xca68:0xa81c9da
  408162:	sahf   
  408163:	xchg   cl,bl
  408165:	xchg   DWORD PTR [ebx-0x3489eee6],edx
  40816b:	jmp    0x3ef2bd5
  408170:	push   ecx
  408171:	and    al,0x9a
  408173:	push   esp
  408174:	sbb    DWORD PTR [ebp-0x22e4b408],edx
  40817a:	sub    eax,DWORD PTR [esi+0x2ebc709c]
  408180:	out    0x71,al
  408182:	push   esi
  408183:	inc    edx
  408184:	fsubr  QWORD PTR [edi+0x6c]
  408187:	sti    
  408188:	xchg   ebx,eax
  408189:	ret    0x5895
  40818c:	or     BYTE PTR [ebx],0x51
  40818f:	jns    0x4081f6
  408191:	enter  0xfd93,0xbc
  408195:	gs inc ecx
  408197:	fwait
  408198:	mov    gs,edi
  40819a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819b:	inc    edi
  40819c:	(bad)  
  40819e:	jl     0x408188
  4081a0:	aaa    
  4081a1:	mov    ch,ch
  4081a3:	out    0x36,al
  4081a5:	push   eax
  4081a6:	test   eax,0xe85d78ce
  4081ab:	jns    0x4081b2
  4081ad:	lds    ecx,FWORD PTR [esi]
  4081af:	jbe    0x4081eb
  4081b1:	adc    al,0x25
  4081b3:	bound  ebx,QWORD PTR [esi]
  4081b5:	sub    BYTE PTR ds:0x5d3dbf4e,bh
  4081bb:	(bad)  
  4081bd:	xor    bh,BYTE PTR [ebx-0x50d6fad3]
  4081c3:	xor    BYTE PTR [ebx],0xaf
  4081c6:	pop    edi
  4081c7:	or     esi,DWORD PTR [ebp-0x69f3ff4b]
  4081cd:	cli    
  4081ce:	out    dx,al
  4081cf:	in     eax,dx
  4081d0:	mov    ah,0x8b
  4081d2:	xlat   BYTE PTR ds:[ebx]
  4081d3:	loopne 0x408215
  4081d5:	pop    ds
  4081d6:	lods   eax,DWORD PTR ds:[esi]
  4081d7:	jle    0x408243
  4081d9:	lods   eax,DWORD PTR ds:[esi]
  4081da:	jnp    0x408243
  4081dc:	repnz (bad) 
  4081de:	jmp    0x4081a3
  4081e0:	dec    edx
  4081e1:	out    dx,eax
  4081e2:	xchg   DWORD PTR [esp-0x25],esp
  4081e6:	xchg   DWORD PTR [ebx+0x2e398e25],edi
  4081ec:	mov    ecx,0x8ef5ac13
  4081f1:	pushf  
  4081f2:	sar    DWORD PTR [ecx+0xc],1
  4081f5:	xchg   edi,eax
  4081f6:	jge    0x40817d
  4081f8:	sar    al,cl
  4081fa:	repnz iret 
  4081fc:	inc    ecx
  4081fd:	xchg   ecx,eax
  4081fe:	mov    eax,0x8c745089
  408203:	retf   0xa602
  408206:	mov    dl,0x1
  408208:	ins    DWORD PTR es:[edi],dx
  408209:	out    0xf7,eax
  40820b:	lea    eax,[eax+0x35]
  40820e:	add    al,0x7d
  408210:	push   ebx
  408211:	mov    esp,edi
  408213:	jne    0x40819f
  408215:	daa    
  408216:	cld    
  408217:	stc    
  408218:	push   ecx
  408219:	retf   0x2183
  40821c:	dec    ecx
  40821d:	test   DWORD PTR [esi-0xcbc338],ebp
  408223:	xchg   edx,eax
  408224:	fs mov ebx,0x72192a73
  40822a:	stos   DWORD PTR es:[edi],eax
  40822b:	or     ah,al
  40822d:	push   ss
  40822e:	mov    BYTE PTR [esi-0x80],ah
  408231:	ins    DWORD PTR es:[edi],dx
  408232:	fsubr  st,st(2)
  408234:	mov    al,ds:0xb3ebbf1b
  408239:	sbb    eax,0x23827498
  40823e:	adc    eax,0x91cf19b
  408243:	out    dx,eax
  408244:	jl     0x408207
  408246:	out    dx,ax
  408248:	xor    ebx,DWORD PTR ds:0xe38cd2
  40824e:	and    DWORD PTR [ecx-0x5],edx
  408251:	addr16 mov ah,0x8a
  408254:	xchg   esp,eax
  408255:	stos   BYTE PTR es:[edi],al
  408256:	mov    esi,0xb6d8e8ab
  40825b:	mov    bl,0x87
  40825d:	jmp    0x40827e
  40825f:	(bad)  
  408260:	out    0xd4,eax
  408262:	mov    ds:0xbeedb228,al
  408267:	in     al,0x35
  408269:	inc    ebx
  40826a:	adc    DWORD PTR [ebp+0x264e79db],0x3d
  408271:	icebp  
  408272:	mov    bl,0xd
  408274:	rol    edx,cl
  408276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408277:	mov    WORD PTR [ecx],?
  408279:	out    dx,al
  40827a:	xchg   ecx,eax
  40827b:	shl    DWORD PTR [ecx+0x41b6f2bb],cl
  408281:	add    al,0x72
  408283:	outs   dx,DWORD PTR ds:[esi]
  408284:	xor    DWORD PTR [ebx-0x50d5bdc6],edi
  40828a:	sbb    BYTE PTR ds:0x9c907e8f,0xf1
  408291:	push   ebp
  408292:	xchg   esi,eax
  408293:	mov    ds:0xdc7452cc,eax
  408298:	dec    esi
  408299:	(bad)  
  40829a:	cli    
  40829b:	xchg   edx,eax
  40829c:	js     0x408241
  40829e:	call   0x1ef:0x2389988
  4082a5:	jge    0x40825c
  4082a7:	cld    
  4082a8:	push   0xffffff98
  4082aa:	enter  0x7fa9,0xd
  4082ae:	cli    
  4082af:	jge    0x408241
  4082b1:	int    0x80
  4082b3:	adc    bl,dl
  4082b5:	sub    ch,BYTE PTR [ebx+0xec3eba7]
  4082bb:	or     ecx,ecx
  4082bd:	push   es
  4082be:	push   0x1781157e
  4082c3:	in     eax,dx
  4082c4:	sahf   
  4082c5:	cmp    eax,0x1bb69a5
  4082ca:	xchg   esi,eax
  4082cb:	jle    0x4082e8
  4082cd:	cli    
  4082ce:	retf   
  4082cf:	and    dh,BYTE PTR [edx]
  4082d1:	mov    WORD PTR ds:0x140f4994,gs
  4082d7:	test   eax,0x4a597b5a
  4082dc:	mov    eax,ds:0x82511056
  4082e1:	or     bh,dl
  4082e3:	cmc    
  4082e4:	push   cs
  4082e5:	lock fist DWORD PTR [edi+ebx*4-0x38]
  4082ea:	inc    esp
  4082eb:	xlat   BYTE PTR ds:[ebx]
  4082ec:	fbstp  TBYTE PTR [edi+0x6dbcbb5e]
  4082f2:	push   ebx
  4082f3:	jae    0x408278
  4082f5:	hlt    
  4082f6:	dec    esi
  4082f7:	xchg   edx,eax
  4082f8:	and    eax,0xf320571a
  4082fd:	out    dx,al
  4082fe:	push   edx
  4082ff:	jb     0x408339
  408301:	sbb    al,0xaf
  408303:	mov    ebx,0xd38a3876
  408308:	out    0x95,al
  40830a:	fmul   DWORD PTR [esp+ebp*4]
  40830d:	pop    ds
  40830e:	adc    ecx,ebx
  408310:	jae    0x4082fe
  408312:	out    dx,al
  408313:	aas    
  408314:	cmp    ah,BYTE PTR [ecx]
  408316:	jne    0x4082a4
  408318:	lds    ebp,FWORD PTR [ecx]
  40831a:	test   al,0x19
  40831c:	add    BYTE PTR [ebx],cl
  40831e:	mov    edi,DWORD PTR [ecx-0xab5dd2f]
  408324:	mov    esi,0xf45f8175
  408329:	sub    DWORD PTR [edx+0x16],ecx
  40832c:	jp     0x408302
  40832e:	(bad)  
  408330:	scas   eax,DWORD PTR es:[edi]
  408331:	jmp    0x40833c
  408333:	scas   al,BYTE PTR es:[edi]
  408334:	aas    
  408335:	clc    
  408336:	cld    
  408337:	call   0xad4d:0x8f7126a0
  40833e:	xchg   ebp,eax
  40833f:	mov    al,0xd4
  408341:	retf   
  408342:	push   ds
  408343:	test   eax,0xc115125f
  408348:	out    0x5f,al
  40834a:	push   eax
  40834b:	sub    dl,ch
  40834d:	leave  
  40834e:	jns    0x40838e
  408350:	push   ebp
  408351:	mov    ebp,0x342b1836
  408356:	inc    edi
  408357:	imul   ebp,esp,0xa7bbb6e3
  40835d:	pop    edx
  40835e:	mov    bh,0x1f
  408360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408361:	xchg   DWORD PTR [ecx],esi
  408363:	outs   dx,DWORD PTR ds:[esi]
  408364:	xchg   esi,eax
  408365:	xor    ecx,DWORD PTR ds:0x404d305
  40836b:	rcl    ch,cl
  40836d:	sbb    BYTE PTR [esi+ecx*2-0x997f5a7],bh
  408374:	mov    eax,ds:0x3a1cb039
  408379:	ins    DWORD PTR es:[edi],dx
  40837a:	mov    edi,0xa4e796dd
  40837f:	retf   0x1ad8
  408382:	add    DWORD PTR ds:0x70f80786,ebp
  408388:	dec    esi
  408389:	add    dh,BYTE PTR [ebx-0x4f65573a]
  40838f:	push   esp
  408390:	mov    esp,DWORD PTR [ecx]
  408392:	(bad)  
  408393:	push   ss
  408394:	test   al,0xec
  408396:	dec    edi
  408397:	bound  edi,QWORD PTR [ebx-0xb]
  40839a:	jge    0x40840d
  40839c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40839d:	out    dx,al
  40839e:	or     al,0x1c
  4083a0:	xchg   ebp,edi
  4083a2:	ins    BYTE PTR es:[edi],dx
  4083a3:	scas   al,BYTE PTR es:[edi]
  4083a4:	mov    eax,0x2d180cd9
  4083a9:	mov    eax,0xe70a13cf
  4083ae:	inc    eax
  4083af:	sbb    eax,0x4b0efa20
  4083b4:	bound  edx,QWORD PTR [ecx]
  4083b6:	test   DWORD PTR [edi],0x6d67b918
  4083bc:	sub    edx,DWORD PTR [esi+0x12b80d31]
  4083c2:	sub    bl,bl
  4083c4:	(bad)  
  4083c5:	loop   0x408403
  4083c7:	push   0xffffffbd
  4083c9:	cmc    
  4083ca:	mov    ch,0x4e
  4083cc:	mov    ebx,0x7190ee89
  4083d1:	push   ecx
  4083d2:	and    BYTE PTR [eax-0x77],0x25
  4083d6:	in     eax,0x8a
  4083d8:	inc    ebx
  4083d9:	out    0x9b,al
  4083db:	pmulhuw mm3,mm4
  4083de:	xchg   BYTE PTR [edx],bl
  4083e0:	ret    
  4083e1:	push   ss
  4083e2:	jbe    0x40838a
  4083e4:	mov    esp,0x2fad2dda
  4083e9:	and    al,0x45
  4083eb:	mov    bl,0x43
  4083ed:	fisubr DWORD PTR [eax]
  4083ef:	add    eax,0xbd4738f0
  4083f4:	xor    eax,0xb0b2895b
  4083f9:	je     0x408440
  4083fb:	mov    esp,ebx
  4083fd:	inc    BYTE PTR [ecx-0x1151e690]
  408403:	ret    0xe741
  408406:	mov    bh,0xb5
  408408:	add    edx,ebp
  40840a:	dec    edx
  40840b:	ja     0x408477
  40840d:	out    dx,eax
  40840e:	dec    edi
  40840f:	xchg   esi,eax
  408410:	retf   0x6502
  408413:	jbe    0x40845a
  408415:	jae    0x408434
  408417:	pop    ds
  408418:	push   ebp
  408419:	test   bh,cl
  40841b:	add    BYTE PTR [ecx-0x3dbffa3a],bl
  408421:	dec    eax
  408422:	cmp    ch,bl
  408424:	scas   eax,DWORD PTR es:[edi]
  408425:	out    dx,eax
  408426:	addr16 inc ecx
  408428:	add    ebx,DWORD PTR [ecx]
  40842a:	xor    ebp,eax
  40842c:	xor    dl,BYTE PTR [esi]
  40842e:	data16 test cl,ah
  408431:	cs scas al,BYTE PTR es:[edi]
  408433:	rol    BYTE PTR [ebp+0x33bfebab],0xc1
  40843a:	mov    eax,ds:0x9ad100c5
  40843f:	bound  edi,QWORD PTR [edx]
  408441:	stc    
  408442:	jbe    0x408487
  408444:	sub    esi,DWORD PTR [ebx+0x473a5df7]
  40844a:	test   BYTE PTR [ebp-0x49],dh
  40844d:	fstp   st(7)
  40844f:	add    ch,BYTE PTR [eax+ebx*8-0x42]
  408453:	mov    eax,ds:0x3a7e4912
  408458:	inc    eax
  408459:	dec    edx
  40845a:	out    dx,eax
  40845b:	cwde   
  40845c:	sub    esp,DWORD PTR [ebx-0x6c]
  40845f:	and    BYTE PTR [ecx],bl
  408461:	imul   edx,ebx,0x44
  408464:	icebp  
  408465:	inc    edi
  408466:	cdq    
  408467:	pop    edi
  408468:	or     BYTE PTR [edx+ecx*1],dh
  40846b:	jnp    0x40846f
  40846d:	mov    BYTE PTR [edx+eax*2+0x4c],0x57
  408472:	loope  0x4084aa
  408474:	idiv   DWORD PTR ds:0xf1f4c06
  40847a:	rcr    BYTE PTR [ebx+0xb],cl
  40847d:	loop   0x408408
  40847f:	fidiv  WORD PTR [ebx]
  408481:	(bad)  
  408483:	xor    cl,BYTE PTR ds:0x40e3f0d0
  408489:	xchg   esi,eax
  40848a:	xchg   edi,eax
  40848b:	inc    ebp
  40848c:	mov    ah,0xc
  40848e:	sub    eax,DWORD PTR [edx+ebx*8-0x11]
  408492:	push   esp
  408493:	mov    ds:0x52f58316,al
  408498:	inc    eax
  408499:	ins    DWORD PTR es:[edi],dx
  40849a:	push   edi
  40849b:	adc    BYTE PTR [ebx-0x2b],al
  40849e:	into   
  40849f:	mov    esi,0xd8a2ab0a
  4084a4:	rcl    BYTE PTR [ebp-0x27e9db49],0x3b
  4084ab:	dec    ebp
  4084ac:	fisttp QWORD PTR [ecx-0x3241b68b]
  4084b2:	pop    eax
  4084b3:	xchg   esp,eax
  4084b4:	cmp    DWORD PTR [edx],edi
  4084b6:	shl    DWORD PTR [ecx],0xb8
  4084b9:	xchg   ebx,eax
  4084ba:	test   al,bh
  4084bc:	mov    ebx,0xbf6c5ef1
  4084c1:	mov    cl,0xfa
  4084c3:	outs   dx,DWORD PTR ds:[esi]
  4084c4:	push   edi
  4084c5:	sbb    edx,edi
  4084c7:	into   
  4084c8:	or     DWORD PTR [ebp+ebp*2-0x54],0x53f0f10c
  4084d0:	xchg   ecx,eax
  4084d1:	ja     0x40847a
  4084d3:	jns    0x408554
  4084d5:	mov    cs,esp
  4084d7:	inc    ebx
  4084d8:	inc    edx
  4084d9:	sub    BYTE PTR [ebx+ebp*8],bh
  4084dc:	call   0xd60207d6
  4084e1:	push   esi
  4084e2:	inc    edi
  4084e3:	jp     0x408518
  4084e5:	outs   dx,DWORD PTR ds:[esi]
  4084e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e7:	add    bl,BYTE PTR [edi]
  4084e9:	imul   eax,DWORD PTR [ebx-0x4c],0xbf66b24a
  4084f0:	cmc    
  4084f1:	mov    bl,0xd1
  4084f3:	dec    al
  4084f5:	enter  0xf77c,0x20
  4084f9:	sar    esp,1
  4084fb:	jb     0x4084e6
  4084fd:	lds    ebx,FWORD PTR [ebx+edi*8-0x1df03db2]
  408504:	(bad)  
  408505:	(bad)  
  408506:	std    
  408507:	or     bh,dl
  408509:	dec    edx
  40850a:	mov    BYTE PTR [ebx+0x5c861206],dh
  408510:	adc    bl,BYTE PTR [ebp+0x73]
  408513:	imul   esp,DWORD PTR [edx-0x60],0xffffffe7
  408517:	cwde   
  408518:	(bad)  [edx]
  40851a:	iret   
  40851b:	dec    edi
  40851c:	and    DWORD PTR [eax-0x7a],0x57
  408520:	mov    bh,0x2c
  408522:	lods   eax,DWORD PTR ds:[esi]
  408523:	mov    edx,0x96a83bad
  408528:	mov    WORD PTR [ecx+0xf3503b5],?
  40852e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852f:	je     0x408595
  408531:	pop    edi
  408532:	mov    ebx,0x168c645a
  408537:	daa    
  408538:	inc    esp
  408539:	addr16 mov cl,0xec
  40853c:	adc    DWORD PTR [edx],ebx
  40853e:	dec    esi
  40853f:	jnp    0x408587
  408541:	jno    0x4084c7
  408543:	push   eax
  408544:	jne    0x408528
  408546:	mov    dh,0xb5
  408548:	jnp    0x40853b
  40854a:	push   ebp
  40854b:	pusha  
  40854c:	(bad)  
  40854d:	sti    
  40854e:	jge    0x40858d
  408550:	push   edi
  408551:	popf   
  408552:	test   BYTE PTR [ecx],bh
  408554:	cmp    BYTE PTR [edi+ebx*1-0x64],ch
  408558:	dec    ebx
  408559:	fcom   DWORD PTR [ecx+edi*4]
  40855c:	lods   eax,DWORD PTR ds:[esi]
  40855d:	fiadd  DWORD PTR [edx+0x2a]
  408560:	dec    edx
  408561:	adc    al,0xf5
  408563:	inc    edx
  408564:	mov    al,ds:0xd3d37e84
  408569:	out    dx,al
  40856a:	repnz mov eax,ds:0x7177ac28
  408570:	pop    ebx
  408571:	dec    edx
  408572:	fiadd  DWORD PTR [ebp+edi*2+0x32e60d21]
  408579:	std    
  40857a:	lahf   
  40857b:	les    esi,FWORD PTR [esi]
  40857d:	xlat   BYTE PTR ds:[ebx]
  40857e:	xlat   BYTE PTR ds:[ebx]
  40857f:	loop   0x4085a1
  408581:	sub    BYTE PTR [edx+0x1df4e912],cl
  408587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408588:	mov    esi,0x1ee0ee10
  40858d:	jnp    0x408541
  40858f:	jbe    0x408559
  408591:	push   ebx
  408592:	xor    bh,ah
  408594:	les    ebp,FWORD PTR [ebp+0x7baeae07]
  40859a:	mov    ebx,0x7663b0de
  40859f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a0:	iret   
  4085a1:	pop    esi
  4085a2:	cwde   
  4085a3:	pop    ss
  4085a4:	sub    BYTE PTR ds:0x13054c25,0xca
  4085ab:	sbb    edi,DWORD PTR [ebp+esi*1+0x3f]
  4085af:	inc    ebx
  4085b0:	adc    eax,ebx
  4085b2:	frstor [esi-0x4]
  4085b5:	xor    cl,BYTE PTR [edx+0x71]
  4085b8:	xchg   ebx,eax
  4085b9:	xor    bh,cl
  4085bb:	in     eax,0xeb
  4085bd:	mov    ecx,0x1da7b747
  4085c2:	xchg   DWORD PTR [esi-0x4],edx
  4085c5:	out    0x71,eax
  4085c7:	xchg   esp,eax
  4085c8:	push   edi
  4085c9:	in     eax,dx
  4085ca:	mov    BYTE PTR [edx+eax*8-0x48],cl
  4085ce:	push   eax
  4085cf:	or     BYTE PTR [ecx-0x11b41c46],0xb3
  4085d6:	adc    eax,0x7e7e60a9
  4085db:	mov    dl,0x11
  4085dd:	push   edx
  4085de:	stos   BYTE PTR es:[edi],al
  4085df:	jne    0x40864c
  4085e1:	mov    edx,0xffb4a9f2
  4085e6:	popf   
  4085e7:	add    DWORD PTR [edx-0x51c9bad2],edx
  4085ed:	cli    
  4085ee:	jge    0x40864f
  4085f0:	ror    DWORD PTR [edi+0xf],0xe7
  4085f4:	mov    al,ds:0xec346266
  4085f9:	test   al,0x15
  4085fb:	out    dx,eax
  4085fc:	pop    ss
  4085fd:	jmp    0x40860c
  4085ff:	xor    eax,0x31652c6e
  408604:	adc    ax,0xc3ad
  408608:	psraw  mm4,QWORD PTR ds:0x9c781ef1
  40860f:	sti    
  408610:	in     al,dx
  408611:	jbe    0x40862f
  408613:	sub    eax,0x6abd90ce
  408618:	loop   0x408654
  40861a:	dec    edi
  40861b:	in     al,0x8a
  40861d:	and    ah,BYTE PTR [eax-0x5dafede2]
  408623:	mov    al,0xb7
  408625:	sub    al,0x6e
  408627:	mov    ah,0xe4
  408629:	bound  ecx,QWORD PTR [ebx+0x2793c502]
  40862f:	out    dx,eax
  408630:	push   esi
  408631:	aas    
  408632:	mov    al,ds:0x847ec093
  408637:	in     al,dx
  408638:	hlt    
  408639:	push   cs
  40863a:	and    al,0xc6
  40863c:	push   eax
  40863d:	and    cl,BYTE PTR [esi+0x69]
  408640:	dec    edi
  408641:	leave  
  408642:	inc    esi
  408643:	mov    bl,0x8a
  408645:	hlt    
  408646:	daa    
  408647:	pop    ebp
  408648:	popf   
  408649:	fcomp  QWORD PTR [ecx+0x6a]
  40864c:	inc    edx
  40864d:	(bad)
  408650:	xchg   esi,eax
  408651:	sub    eax,0x34311a82
  408656:	pop    ds
  408657:	mov    esp,DWORD PTR [ebx]
  408659:	lock mov ds:0xa86bf68d,al
  40865f:	or     eax,0x7f11c504
  408664:	jmp    0x408683
  408666:	cmp    ecx,DWORD PTR [edi-0xe56d77d]
  40866c:	cs (bad) 
  40866e:	aad    0x1c
  408670:	jmp    FWORD PTR [edi+edi*2-0x65]
  408674:	dec    esp
  408675:	dec    esi
  408676:	mov    ch,0x40
  408678:	pop    edi
  408679:	ins    BYTE PTR es:[edi],dx
  40867a:	loopne 0x4086bd
  40867c:	push   0xffffff80
  40867e:	xchg   esp,eax
  40867f:	inc    ebp
  408680:	test   ch,cl
  408682:	mov    ah,0xb5
  408684:	push   ecx
  408685:	sbb    eax,0x2528cc5d
  40868a:	adc    ebx,DWORD PTR [eax-0x73265611]
  408690:	mov    cl,0xc1
  408692:	retf   0x6654
  408695:	test   DWORD PTR [ebx],ebp
  408697:	push   ebp
  408698:	and    al,0x70
  40869a:	jmp    0x29c9:0x94db0f82
  4086a1:	outs   dx,DWORD PTR ds:[esi]
  4086a2:	mov    eax,0xcf2c75d7
  4086a7:	imul   ebx,DWORD PTR [eax+0x6a22e0b3],0x9594aefa
  4086b1:	mov    eax,0x7fc1e23e
  4086b6:	call   FWORD PTR [eax]
  4086b8:	cmp    BYTE PTR [eax+0x36],al
  4086bb:	adc    al,0x3
  4086bd:	iret   
  4086be:	pop    eax
  4086bf:	test   DWORD PTR [edi],eax
  4086c1:	ins    DWORD PTR es:[edi],dx
  4086c2:	ja     0x40868c
  4086c4:	leave  
  4086c5:	sub    DWORD PTR [edi+0x7278cb91],esp
  4086cb:	sbb    ebx,DWORD PTR [ebx-0x3757b2c1]
  4086d1:	sbb    ch,bl
  4086d3:	(bad)  
  4086d4:	ds mov ebp,0x651b9183
  4086da:	in     eax,dx
  4086db:	mov    ds:0xe6f7ba6e,eax
  4086e0:	lahf   
  4086e1:	inc    edx
  4086e2:	lds    ebp,FWORD PTR [ebp-0x345d2549]
  4086e8:	jne    0x40869d
  4086ea:	xor    DWORD PTR [ebx],edi
  4086ec:	xor    edx,DWORD PTR [ebx-0x61794e4b]
  4086f2:	or     eax,0xb9b24d49
  4086f7:	pop    esi
  4086f8:	mov    dh,0x26
  4086fa:	push   edi
  4086fb:	lods   al,BYTE PTR ds:[esi]
  4086fc:	jb     0x40875e
  4086fe:	fcmovu st,st(3)
  408700:	mov    dl,0x7b
  408702:	cmp    eax,0xc5c9310
  408707:	fld    QWORD PTR [edi+0x73d04226]
  40870d:	dec    eax
  40870e:	dec    edi
  40870f:	aaa    
  408710:	retf   
  408711:	xchg   edi,eax
  408712:	and    edx,esi
  408714:	lods   eax,DWORD PTR ds:[esi]
  408715:	test   eax,0x86faa619
  40871a:	dec    edx
  40871b:	test   eax,0xe90c8b0
  408720:	mov    eax,ds:0x979d039b
  408725:	stos   DWORD PTR es:[edi],eax
  408726:	xor    edx,eax
  408728:	pusha  
  408729:	in     eax,dx
  40872a:	or     DWORD PTR [esi],0xffffffbb
  40872d:	adc    eax,0xde74b22c
  408732:	stos   DWORD PTR es:[edi],eax
  408733:	or     eax,0x3ce656fa
  408738:	mov    ds:0x5a392156,eax
  40873d:	push   esi
  40873e:	retf   
  40873f:	mov    gs,WORD PTR [eax+ebp*4]
  408742:	adc    al,0xa9
  408744:	fiadd  DWORD PTR [eax+0x149c3362]
  40874a:	aam    0x52
  40874c:	pop    ecx
  40874d:	xchg   ebx,eax
  40874e:	repz pop ebx
  408750:	dec    ecx
  408751:	cmc    
  408752:	dec    edi
  408753:	js     0x408786
  408755:	aad    0xea
  408757:	mov    esi,0xb3ac5d6a
  40875c:	cwde   
  40875d:	xor    BYTE PTR [edi-0x3aad934a],al
  408763:	mov    esi,0x16dc634b
  408768:	repnz ss (bad) 
  40876b:	push   edi
  40876c:	sbb    dh,BYTE PTR ds:[esi+0x7422e47]
  408773:	pop    edi
  408774:	xchg   BYTE PTR [edi+0x48],bh
  408777:	out    0x1b,al
  408779:	or     BYTE PTR [ebx+0x483f0cc3],0x5f
  408780:	rcr    ah,cl
  408782:	xor    edi,0xffffff8f
  408785:	xchg   esi,eax
  408786:	cld    
  408787:	pop    eax
  408788:	xchg   esi,eax
  408789:	mov    ds:0x2a7d915f,al
  40878e:	add    DWORD PTR [edx],eax
  408790:	(bad)
  408795:	adc    BYTE PTR [ebp+ecx*8-0x2972124d],dh
  40879c:	add    al,0x80
  40879e:	dec    eax
  40879f:	push   es
  4087a0:	sar    BYTE PTR [ecx+0x47],1
  4087a3:	es (bad) 
  4087a5:	sub    DWORD PTR ds:0x2313dc99,ebx
  4087ab:	xchg   ebx,eax
  4087ac:	push   ebp
  4087ad:	shr    DWORD PTR [ebx+0x7599b2d],0xe2
  4087b4:	cmc    
  4087b5:	jno    0x4087d1
  4087b7:	bound  eax,QWORD PTR [eax+0x4f]
  4087ba:	fstp   DWORD PTR [esi-0x471a8269]
  4087c0:	fcomip st,st(3)
  4087c2:	gs cs mov ebx,0xea791ea4
  4087c9:	fsubr  st(1),st
  4087cb:	sub    cl,BYTE PTR [edx+0x4219705d]
  4087d1:	mov    gs,esp
  4087d3:	mov    al,0xd7
  4087d5:	mov    cl,0x37
  4087d7:	lahf   
  4087d8:	xchg   DWORD PTR [eax],ecx
  4087da:	leave  
  4087db:	cmp    al,0xfa
  4087dd:	sbb    ebp,DWORD PTR [eax-0xa5566be]
  4087e3:	xchg   ebx,eax
  4087e4:	push   ds
  4087e5:	sub    edi,DWORD PTR [edi+0x5604a232]
  4087eb:	popf   
  4087ec:	sub    al,0x1e
  4087ee:	aas    
  4087ef:	mov    edx,0xd17dab74
  4087f4:	pop    ebx
  4087f5:	xor    eax,0xde2a2c5d
  4087fa:	add    DWORD PTR [eax-0x61],0x3ec4e1f5
  408801:	fwait
  408802:	jns    0x53c29870
  408808:	test   eax,0x6a155788
  40880d:	fadd   QWORD PTR [edx]
  40880f:	add    al,0xf2
  408811:	(bad)  
  408813:	dec    edx
  408814:	mov    dl,0xb0
  408816:	and    DWORD PTR [ebx+0x1f],edx
  408819:	jge    0x4087ee
  40881b:	push   esi
  40881c:	call   0xc140:0x54674fa5
  408823:	cmp    ch,ah
  408825:	or     al,BYTE PTR [esi+0x2e2781bf]
  40882b:	hlt    
  40882c:	add    cl,ah
  40882e:	inc    ecx
  40882f:	shr    DWORD PTR [edi-0x2c],0x57
  408833:	xor    edx,eax
  408835:	pop    edi
  408836:	in     al,dx
  408837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408838:	and    bl,0x4a
  40883b:	add    ebp,DWORD PTR [edi-0x66]
  40883e:	int3   
  40883f:	cmp    eax,0x6534c9ad
  408844:	cmp    edx,DWORD PTR [edx]
  408846:	inc    edi
  408847:	loopne 0x408884
  408849:	mov    al,ds:0x7b931c8a
  40884e:	sbb    al,0x97
  408850:	cmp    eax,0xbe629f11
  408855:	stc    
  408856:	inc    edi
  408857:	mov    esi,0xa62d4d72
  40885c:	mov    dl,0x6
  40885e:	fild   QWORD PTR [ebx-0x4be2c756]
  408865:	add    eax,0x308353c4
  40886a:	xchg   edx,eax
  40886b:	add    eax,0x3733c313
  408870:	push   esi
  408871:	push   ebx
  408872:	fnstenv [eax+edi*1+0x76]
  408876:	repnz mov ebp,DWORD PTR [ecx-0x35]
  40887a:	dec    esp
  40887b:	jb     0x4088ca
  40887d:	fst    DWORD PTR [ebp-0x4fab406c]
  408883:	mov    ah,0xcb
  408885:	add    edx,DWORD PTR [esi-0x3cb6b290]
  40888b:	xor    DWORD PTR [ebp+eiz*4+0x6551da4c],ecx
  408892:	adc    eax,0xfffffff1
  408895:	test   eax,0xf935b3bd
  40889a:	or     al,0xb1
  40889c:	aad    0x85
  40889e:	sub    eax,0xd17fc244
  4088a3:	mov    dh,0xe9
  4088a5:	add    esp,DWORD PTR [eax+0x4cce0a24]
  4088ab:	pushf  
  4088ac:	jmp    0x2961:0xa98bd0fb
  4088b3:	xchg   ecx,eax
  4088b4:	push   0xee906285
  4088b9:	inc    ebx
  4088ba:	dec    edi
  4088bb:	loop   0x4088f2
  4088bd:	ds mov al,0x36
  4088c0:	xchg   edi,eax
  4088c1:	jne    0x408880
  4088c3:	ins    BYTE PTR es:[edi],dx
  4088c4:	xchg   ebp,eax
  4088c5:	jnp    0x40888d
  4088c7:	xor    eax,0x9cc7b020
  4088cc:	pop    ecx
  4088cd:	push   ebx
  4088ce:	clc    
  4088cf:	add    al,BYTE PTR [esi+0x29]
  4088d2:	leave  
  4088d3:	adc    al,BYTE PTR ds:0xb5328d69
  4088d9:	shl    BYTE PTR [edx],1
  4088db:	inc    ebp
  4088dc:	mov    cs,WORD PTR [ecx+0x7c]
  4088df:	loopne 0x4088d5
  4088e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e2:	xor    eax,0x6f0d8a8d
  4088e7:	sub    bh,cl
  4088e9:	mov    bl,0x77
  4088eb:	fisub  WORD PTR [edx+edi*1]
  4088ee:	pop    ds
  4088ef:	cmp    eax,0xac3f3be
  4088f4:	jbe    0x408944
  4088f6:	fidiv  DWORD PTR [ebx]
  4088f8:	push   cs
  4088f9:	push   edx
  4088fa:	add    BYTE PTR [edx],al
  4088fc:	adc    dh,al
  4088fe:	pop    ebp
  4088ff:	je     0x40888c
  408901:	gs mov dl,0x95
  408904:	push   ds
  408905:	out    0x8d,eax
  408907:	and    al,BYTE PTR [ebx]
  408909:	les    ecx,FWORD PTR [edi-0xe]
  40890c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40890d:	loope  0x408969
  40890f:	test   eax,0x43ae8d85
  408914:	aad    0x70
  408916:	mov    ds:0x9a0aaf9a,eax
  40891b:	clc    
  40891c:	jns    0x40890e
  40891e:	push   edi
  40891f:	ja     0x4088e3
  408921:	out    0x6d,eax
  408923:	or     al,0x6
  408925:	mov    ch,0x64
  408927:	sub    ebx,ebx
  408929:	or     BYTE PTR [esi+0x70e312d0],ch
  40892f:	mov    edx,0x4595b210
  408934:	inc    ebx
  408935:	sub    DWORD PTR [eax-0x27],esp
  408938:	cld    
  408939:	rol    DWORD PTR [edi-0x5675ba04],1
  40893f:	xchg   ebx,eax
  408940:	lahf   
  408941:	popf   
  408942:	out    0x40,al
  408944:	sbb    eax,0x4e4deddf
  408949:	fwait
  40894a:	inc    ebx
  40894b:	aam    0xd0
  40894d:	ja     0x408913
  40894f:	or     DWORD PTR [esp+ecx*2+0x4a],esp
  408953:	inc    edi
  408954:	cdq    
  408955:	cmp    ecx,DWORD PTR [ecx+ecx*8+0x560f2d59]
  40895c:	sbb    esp,DWORD PTR [eax+ebp*4+0x19d9f259]
  408963:	adc    edi,DWORD PTR [eax-0x46b18603]
  408969:	dec    edx
  40896a:	dec    edi
  40896b:	loop   0x4088fe
  40896d:	xchg   edx,eax
  40896e:	mov    edx,0x50bc1652
  408973:	sub    eax,0x249e8604
  408978:	add    eax,eax
  40897a:	jl     0x4089dd
  40897c:	cld    
  40897d:	in     al,0x6e
  40897f:	sub    DWORD PTR [ebx],ebx
  408981:	pop    ecx
  408982:	or     DWORD PTR [eax-0x56],edx
  408985:	dec    DWORD PTR [edx+0x64]
  408988:	outs   dx,BYTE PTR ds:[esi]
  408989:	xchg   ecx,eax
  40898a:	jp     0x408984
  40898c:	add    BYTE PTR [esi-0x1d],0x60
  408990:	pusha  
  408991:	das    
  408992:	push   esp
  408993:	jne    0x40894b
  408995:	jge    0x408954
  408997:	test   eax,0xf312bb76
  40899c:	push   ebx
  40899d:	mov    ?,WORD PTR ds:0x6275e1f3
  4089a3:	xchg   ebx,eax
  4089a4:	frstor [ecx]
  4089a6:	pop    edi
  4089a7:	inc    esi
  4089a8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089aa:	dec    edi
  4089ab:	out    0x1a,al
  4089ad:	popf   
  4089ae:	xchg   BYTE PTR [esp+ebp*2+0x19d691bc],dh
  4089b5:	das    
  4089b6:	test   eax,0x6408fd59
  4089bb:	cmp    DWORD PTR [edi],ecx
  4089bd:	lods   al,BYTE PTR ds:[esi]
  4089be:	les    esp,FWORD PTR [edi+0x74a20b9b]
  4089c4:	loopne 0x408a24
  4089c6:	sub    ebx,ebp
  4089c8:	or     al,0x65
  4089ca:	in     al,0x14
  4089cc:	pop    ebp
  4089cd:	and    eax,0x369e35f0
  4089d2:	or     BYTE PTR [edi],bl
  4089d4:	nop
  4089d5:	dec    eax
  4089d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d7:	or     BYTE PTR [ecx],bl
  4089d9:	add    DWORD PTR [ebx+ecx*1-0x6ae8ac56],edi
  4089e0:	or     DWORD PTR [eax],eax
  4089e2:	dec    ebx
  4089e3:	rcr    dh,cl
  4089e5:	jg     0x408a1d
  4089e7:	adc    cl,BYTE PTR ds:0xab6f3a84
  4089ed:	js     0x4089bc
  4089ef:	or     ax,0xec3
  4089f3:	jmp    0x69b21dd
  4089f8:	or     eax,0xf0b9e454
  4089fd:	push   cs
  4089fe:	shr    DWORD PTR [edx],cl
  408a00:	neg    BYTE PTR [ecx]
  408a02:	pusha  
  408a03:	pusha  
  408a04:	scas   al,BYTE PTR es:[edi]
  408a05:	mov    cl,0x3d
  408a07:	test   al,0xb
  408a09:	or     DWORD PTR [esi+0x69],edx
  408a0c:	and    eax,DWORD PTR ds:0xc3934a12
  408a12:	or     al,0x62
  408a14:	mov    ch,0xf0
  408a16:	sub    BYTE PTR [ecx],dl
  408a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a19:	test   eax,0x226b2673
  408a1e:	repnz mov edi,0x4d87d6f2
  408a24:	fld    QWORD PTR [ebx]
  408a26:	mov    ds,WORD PTR ds:0xd6ca82
  408a2c:	lds    edx,FWORD PTR [edx+0x37ae2038]
  408a32:	adc    al,0xb
  408a34:	adc    BYTE PTR es:[edi+0x231136d4],bh
  408a3b:	(bad)  
  408a3c:	mov    esi,0xebb8e927
  408a41:	(bad)  
  408a42:	pop    edi
  408a43:	sahf   
  408a44:	addr16 or eax,0x9e04ed90
  408a4a:	mov    al,0xbf
  408a4c:	aam    0x1b
  408a4e:	in     al,dx
  408a4f:	pusha  
  408a50:	ins    DWORD PTR es:[edi],dx
  408a51:	enter  0x4783,0x9a
  408a55:	pop    edx
  408a56:	pop    esp
  408a57:	cmp    DWORD PTR [ebx+0x73],ecx
  408a5a:	stos   BYTE PTR es:[edi],al
  408a5b:	jno    0x408a98
  408a5d:	jno    0x408a86
  408a5f:	stos   DWORD PTR es:[edi],eax
  408a60:	popf   
  408a61:	dec    esp
  408a62:	retf   
  408a63:	cmp    al,0x69
  408a65:	mov    cl,0x7
  408a67:	sbb    BYTE PTR [ecx+0x2a],dh
  408a6a:	push   ecx
  408a6b:	(bad)  
  408a6c:	call   0x8813:0xd834f8b0
  408a73:	mov    ebp,0xe03a14f7
  408a78:	addr16 jmp 0x408a81
  408a7b:	xadd   dh,ah
  408a7e:	jb     0x408a00
  408a80:	ins    BYTE PTR es:[edi],dx
  408a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a82:	and    DWORD PTR [esi-0xfade9ff],ecx
  408a88:	push   edx
  408a89:	stos   DWORD PTR es:[edi],eax
  408a8a:	das    
  408a8b:	sbb    eax,DWORD PTR [edx+ecx*8+0x77fbefca]
  408a92:	inc    ecx
  408a93:	(bad)  
  408a94:	and    edi,eax
  408a96:	inc    esi
  408a97:	dec    esi
  408a98:	push   ss
  408a99:	pop    ss
  408a9a:	rcr    DWORD PTR ds:0x6b112ff0,0xd5
  408aa1:	xor    ah,BYTE PTR [esi+0x158d7d7c]
  408aa7:	lahf   
  408aa8:	adc    DWORD PTR [ecx+0x61],ebp
  408aab:	stos   BYTE PTR es:[edi],al
  408aac:	gs ja  0x408aca
  408aaf:	lods   al,BYTE PTR ds:[esi]
  408ab0:	ss addr16 jnp 0x408ab5
  408ab4:	pop    esp
  408ab5:	sub    BYTE PTR [ebp+eax*8+0x4c040cc0],bl
  408abc:	mov    esi,0x6bc898c1
  408ac1:	and    al,BYTE PTR [ebx-0x3a7cf6b4]
  408ac7:	cmp    esi,DWORD PTR [edx+0x6ca4f180]
  408acd:	xchg   ebx,eax
  408ace:	pop    ebp
  408acf:	stos   BYTE PTR es:[edi],al
  408ad0:	out    0xf5,eax
  408ad2:	iret   
  408ad3:	cmp    bl,BYTE PTR [edi+0x5d785273]
  408ad9:	pop    ebx
  408ada:	sub    BYTE PTR [edx],bh
  408adc:	ds stos DWORD PTR es:[edi],eax
  408ade:	stc    
  408adf:	ins    DWORD PTR es:[edi],dx
  408ae0:	(bad)  
  408ae1:	outs   dx,DWORD PTR ds:[esi]
  408ae2:	aas    
  408ae3:	imul   esi,DWORD PTR ds:0xe533cb48,0x44
  408aea:	jge    0x408af2
  408aec:	jmp    0x1186:0x5fb241c7
  408af3:	xchg   BYTE PTR [eax+0x1f],ch
  408af6:	or     DWORD PTR [ebx],0xffba7541
  408afc:	add    al,0xe1
  408afe:	or     BYTE PTR [edx+0x495d0745],bh
  408b04:	and    DWORD PTR [edx],0x62bb81b6
  408b0a:	in     al,dx
  408b0b:	push   ds
  408b0c:	(bad)  
  408b0d:	jge    0x408b65
  408b0f:	mov    esi,DWORD PTR [esi]
  408b11:	xchg   DWORD PTR [edx-0x467f7087],eax
  408b17:	popa   
  408b18:	fst    QWORD PTR [ebp+0x7462114f]
  408b1e:	adc    BYTE PTR [edx+0x6],dl
  408b21:	dec    ebx
  408b22:	loopne 0x408af2
  408b24:	mov    cl,0x13
  408b26:	repz fisubr WORD PTR [esi-0x41]
  408b2a:	dec    ebp
  408b2b:	ins    DWORD PTR es:[edi],dx
  408b2c:	push   edx
  408b2d:	and    dl,BYTE PTR [ebx]
  408b2f:	pop    ecx
  408b30:	ins    DWORD PTR es:[edi],dx
  408b31:	das    
  408b32:	xchg   edx,eax
  408b33:	adc    al,0xc2
  408b35:	sub    BYTE PTR [edi-0x12b239b0],ch
  408b3b:	push   esi
  408b3c:	fisttp QWORD PTR [esi+0x4f3e6777]
  408b42:	inc    esi
  408b43:	sub    al,0x92
  408b45:	sub    ecx,DWORD PTR [ebp-0x3a8f0ef4]
  408b4b:	fld    DWORD PTR [edx+0x6c]
  408b4e:	lods   al,BYTE PTR ds:[esi]
  408b4f:	mov    dh,0x25
  408b51:	sahf   
  408b52:	adc    ebp,DWORD PTR [edx]
  408b54:	in     eax,0xae
  408b56:	loop   0x408b27
  408b58:	sbb    dl,BYTE PTR [edx-0x1c]
  408b5b:	dec    ebx
  408b5c:	sub    cl,BYTE PTR [ecx+0x246c23bd]
  408b62:	and    ah,al
  408b64:	lea    esp,[edx-0x7d13d916]
  408b6a:	jle    0x408bc9
  408b6c:	fsub   DWORD PTR [ecx]
  408b6e:	in     al,0x3c
  408b70:	inc    ebp
  408b71:	jecxz  0x408b01
  408b73:	data16 pop bp
  408b76:	out    dx,al
  408b77:	dec    esi
  408b78:	mov    al,cl
  408b7a:	xchg   ebx,eax
  408b7b:	std    
  408b7c:	inc    ecx
  408b7d:	inc    edi
  408b7e:	popf   
  408b7f:	or     dh,dl
  408b81:	push   ds
  408b82:	dec    ebx
  408b83:	pop    eax
  408b84:	shl    esp,1
  408b86:	push   ds
  408b87:	lods   al,BYTE PTR ds:[esi]
  408b88:	mov    al,ds:0x40c788ef
  408b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8e:	jno    0x408bf1
  408b90:	jb     0x408ba9
  408b92:	xchg   esi,eax
  408b93:	lods   eax,DWORD PTR ds:[esi]
  408b94:	mov    bh,0x9c
  408b96:	and    cl,al
  408b98:	dec    eax
  408b99:	mov    eax,0x67dba78a
  408b9e:	int    0xe
  408ba0:	sbb    eax,0x50e71321
  408ba5:	fadd   DWORD PTR [edi+0x4a]
  408ba8:	lahf   
  408ba9:	or     al,BYTE PTR [ebp+0x7b37f8a6]
  408baf:	jle    0x408b91
  408bb1:	adc    eax,0xa728f476
  408bb6:	xor    DWORD PTR [ecx],eax
  408bb8:	imul   ecx,esi,0xffffff8f
  408bbb:	out    dx,al
  408bbc:	or     BYTE PTR cs:0xbb1213c,dh
  408bc3:	push   ds
  408bc4:	adc    DWORD PTR [ebp+0x21],esi
  408bc7:	mov    bl,0x20
  408bc9:	pop    ecx
  408bca:	dec    ebx
  408bcb:	sbb    dl,BYTE PTR [ebp+0x3d7d4717]
  408bd1:	popa   
  408bd2:	dec    ebp
  408bd3:	repz push ds
  408bd5:	mov    dh,0x3e
  408bd7:	mov    eax,0x94c707ea
  408bdc:	sub    eax,0xffc898bb
  408be1:	xchg   DWORD PTR [edx],ebx
  408be3:	or     DWORD PTR [ebx-0x2a],edx
  408be6:	inc    al
  408be8:	push   eax
  408be9:	adc    al,0x35
  408beb:	push   eax
  408bec:	cdq    
  408bed:	loop   0x408bc5
  408bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf0:	mov    esi,0x82875fec
  408bf5:	xchg   DWORD PTR [edi+0x3e],esp
  408bf8:	mov    dh,0xe3
  408bfa:	test   al,0x70
  408bfc:	inc    ecx
  408bfd:	pop    eax
  408bfe:	out    dx,eax
  408bff:	cmp    al,0x4c
  408c01:	xchg   edi,eax
  408c02:	std    
  408c03:	out    dx,eax
  408c04:	inc    esp
  408c05:	jg     0x408bba
  408c07:	pop    edx
  408c08:	loopne 0x408c24
  408c0a:	dec    esp
  408c0b:	jge    0x408b8f
  408c0d:	mov    al,0x68
  408c0f:	dec    eax
  408c10:	cmp    DWORD PTR [eax],ecx
  408c12:	xchg   al,ah
  408c14:	lods   eax,DWORD PTR ds:[esi]
  408c15:	call   0xaa680c5e
  408c1a:	stos   BYTE PTR es:[edi],al
  408c1b:	loope  0x408c41
  408c1d:	retf   
  408c1e:	stos   DWORD PTR es:[edi],eax
  408c1f:	jp     0x408c39
  408c21:	(bad)  
  408c23:	ss popf 
  408c25:	cmp    edx,esi
  408c27:	(bad)  
  408c28:	xchg   esp,eax
  408c29:	jmp    0x408ca1
  408c2b:	mov    esi,0xbcdb5801
  408c30:	add    bh,BYTE PTR [ecx-0x2f3caefb]
  408c36:	mov    ebx,0xcd237090
  408c3b:	jecxz  0x408bf4
  408c3d:	xchg   ebp,eax
  408c3e:	int    0xe2
  408c40:	adc    ebp,DWORD PTR [ecx+0x0]
  408c43:	fdivp  st(6),st
  408c45:	pop    esi
  408c46:	xchg   esp,eax
  408c47:	push   esp
  408c48:	es fcmovnu st,st(0)
  408c4b:	xchg   esp,eax
  408c4c:	lds    esp,FWORD PTR [eax-0x54]
  408c4f:	jle    0x408c53
  408c51:	gs in  eax,dx
  408c53:	fwait
  408c54:	inc    esp
  408c55:	jbe    0x408cd3
  408c57:	mov    ds:0x8c0972de,al
  408c5c:	jge    0x408cb1
  408c5e:	addr16 loop 0x408c69
  408c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c62:	dec    esp
  408c63:	addr16 add al,0x1c
  408c66:	je     0x408cbf
  408c68:	adc    BYTE PTR [ebx+0x4fd9c03d],0x5f
  408c6f:	repnz dec ecx
  408c71:	cmc    
  408c72:	loope  0x408c5b
  408c74:	test   DWORD PTR [esi+0x5d795cd1],ebp
  408c7a:	aad    0x4a
  408c7c:	(bad)  
  408c7d:	xchg   esp,eax
  408c7e:	(bad)  
  408c7f:	dec    ebp
  408c80:	mov    ebx,0x327b7d96
  408c85:	and    DWORD PTR [ebx-0x39],ebx
  408c88:	jg     0x408ceb
  408c8a:	lahf   
  408c8b:	mov    ds:0x8c65d9e9,al
  408c90:	inc    esp
  408c91:	jecxz  0x408c63
  408c93:	pop    ss
  408c94:	nop
  408c95:	(bad)  
  408c96:	std    
  408c97:	and    al,BYTE PTR [edi+edx*4]
  408c9a:	dec    edi
  408c9b:	das    
  408c9c:	and    eax,0xdd69751f
  408ca1:	(bad)  
  408ca2:	adc    eax,DWORD PTR ds:0xf9230abe
  408ca8:	call   0xb9f2:0xeaaf46a3
  408caf:	sbb    al,0x15
  408cb1:	retf   0x7a47
  408cb4:	rol    bl,1
  408cb6:	shl    BYTE PTR [ebp+0x20],0x2c
  408cba:	xor    edi,DWORD PTR [esi+ebp*8-0xbc0cb0e]
  408cc1:	mov    DWORD PTR [ebx-0x39],edi
  408cc4:	mov    ds:0xf88145ca,eax
  408cc9:	mov    eax,0xba5af83
  408cce:	add    al,0xb7
  408cd0:	out    0x69,eax
  408cd2:	(bad)  
  408cd3:	pop    edx
  408cd4:	jno    0x408c6b
  408cd6:	inc    edi
  408cd7:	xor    DWORD PTR [ecx-0x309f77ec],0x1f93e616
  408ce1:	jmp    FWORD PTR [ebp-0x7a]
  408ce4:	sbb    al,0x65
  408ce6:	ins    BYTE PTR es:[edi],dx
  408ce7:	rcl    ebx,1
  408ce9:	jle    0x408c84
  408ceb:	cmp    bl,ch
  408ced:	popa   
  408cee:	xlat   BYTE PTR ds:[ebx]
  408cef:	mov    dh,0x75
  408cf1:	mov    edx,esp
  408cf3:	mov    edi,0x51ac1780
  408cf8:	fcomp  st(3)
  408cfa:	xlat   BYTE PTR ds:[ebx]
  408cfb:	bound  eax,QWORD PTR [edx]
  408cfd:	(bad)  
  408cfe:	std    
  408cff:	hlt    
  408d00:	dec    ebx
  408d01:	ret    0x1898
  408d04:	sub    DWORD PTR [edx+eax*2],ecx
  408d07:	xchg   BYTE PTR [eax+0x32b3a8e8],dl
  408d0d:	mov    ecx,0x2732229f
  408d12:	imul   esp,DWORD PTR [ecx-0x38],0xffffffb4
  408d16:	into   
  408d17:	push   cs
  408d18:	outs   dx,BYTE PTR ds:[esi]
  408d19:	dec    ebp
  408d1a:	xor    eax,0xb1cff3d0
  408d1f:	xor    al,0x6d
  408d21:	repnz fwait
  408d23:	adc    BYTE PTR [edi-0x7e],dl
  408d26:	stos   BYTE PTR es:[edi],al
  408d27:	mov    cs,ebp
  408d29:	adc    al,0x28
  408d2b:	xlat   BYTE PTR ds:[ebx]
  408d2c:	dec    esp
  408d2d:	xchg   edx,eax
  408d2e:	add    ebx,DWORD PTR [esp+esi*2-0x7a]
  408d32:	aam    0xf3
  408d34:	dec    esi
  408d35:	retf   0xb6b5
  408d38:	sub    BYTE PTR [ebx+0x72],ch
  408d3b:	out    0x33,eax
  408d3d:	call   0xfdd:0xec9d3a57
  408d44:	fisttp QWORD PTR [ebx+0x183d759]
  408d4a:	adc    al,0x28
  408d4c:	fadd   QWORD PTR [edx+ebp*2]
  408d4f:	retf   
  408d50:	sub    al,0x70
  408d52:	bound  esi,QWORD PTR [ebx-0x3ac3e016]
  408d58:	imul   edx,DWORD PTR [edx-0x50],0x36dfe78e
  408d5f:	mov    dh,0xb1
  408d61:	inc    eax
  408d62:	xchg   ebp,eax
  408d63:	outs   dx,BYTE PTR ds:[esi]
  408d64:	(bad)  
  408d66:	xchg   ebx,eax
  408d67:	ins    BYTE PTR es:[edi],dx
  408d68:	or     eax,0xefe4ce82
  408d6d:	adc    dl,dh
  408d6f:	cwde   
  408d70:	lds    ebx,FWORD PTR [eax]
  408d72:	add    ah,cl
  408d74:	fimul  DWORD PTR ds:0xdf64260f
  408d7a:	fsubr  DWORD PTR [esi+0x78613685]
  408d80:	(bad)  
  408d81:	jle    0x408d32
  408d83:	mov    ebx,0xc4a0f548
  408d88:	jmp    0xf83c6757
  408d8d:	fnstcw WORD PTR [eax-0x17]
  408d90:	push   DWORD PTR [edx+edx*2]
  408d93:	xchg   esi,eax
  408d94:	mov    cl,0x26
  408d96:	sbb    eax,0x9b59157
  408d9b:	cmp    al,0x2b
  408d9d:	js     0x408d9f
  408d9f:	loopne 0x408d6c
  408da1:	ja     0x408d8b
  408da3:	mov    al,0x78
  408da5:	mov    al,0x40
  408da7:	mov    al,0x22
  408da9:	add    ah,dl
  408dab:	cli    
  408dac:	mov    edi,0xbf5df59a
  408db1:	mov    ecx,0x2f510bf3
  408db6:	jmp    0x408dd5
  408db8:	cld    
  408db9:	adc    eax,0xf4e7e88d
  408dbe:	push   cs
  408dbf:	std    
  408dc0:	int3   
  408dc1:	cmp    al,0xb6
  408dc3:	ror    BYTE PTR [ebp+0x1f78bb16],0x1e
  408dca:	clc    
  408dcb:	mov    edx,0x7c28ba64
  408dd0:	loop   0x408d61
  408dd2:	sahf   
  408dd3:	idiv   ebx
  408dd5:	sbb    eax,0x1ba2d424
  408dda:	out    dx,al
  408ddb:	fmul   QWORD PTR [esi-0x104b305d]
  408de1:	sub    DWORD PTR [esi-0x34],edi
  408de4:	xor    esi,edx
  408de6:	clc    
  408de7:	retf   0x10e5
  408dea:	lods   al,BYTE PTR ds:[esi]
  408deb:	pop    edx
  408dec:	jne    0x408de9
  408dee:	dec    esi
  408def:	push   es
  408df0:	mov    al,0x8a
  408df2:	jno    0x408dcc
  408df4:	and    BYTE PTR [esi],cl
  408df6:	rcl    DWORD PTR [edx],cl
  408df8:	jmp    0x1ca8:0x93fae1a3
  408dff:	mov    esi,0x85152b80
  408e04:	aaa    
  408e05:	and    bh,BYTE PTR ds:0x2f58522b
  408e0b:	test   eax,0xd936a7b6
  408e10:	cmp    al,0x8
  408e12:	and    DWORD PTR [eax],ebx
  408e14:	pop    ss
  408e15:	sub    BYTE PTR [ecx],bh
  408e17:	jno    0x408e1f
  408e19:	sbb    ebp,ecx
  408e1b:	mov    ?,WORD PTR [ebp+eax*1-0x698032ae]
  408e22:	cmp    ch,BYTE PTR [edx]
  408e24:	cmp    esi,DWORD PTR [esi]
  408e26:	bound  esi,QWORD PTR [edi]
  408e28:	mov    WORD PTR [esi-0x5249ca4a],?
  408e2e:	xor    ah,BYTE PTR [esi]
  408e30:	cmp    DWORD PTR [ebx-0x3b041baf],0xa
  408e37:	shr    DWORD PTR [edi+0x6440fd45],cl
  408e3d:	xchg   esi,eax
  408e3e:	push   edi
  408e3f:	add    edi,edi
  408e41:	inc    ecx
  408e42:	ins    BYTE PTR es:[edi],dx
  408e43:	xor    ah,BYTE PTR [ebp+0x4e]
  408e46:	xor    DWORD PTR [ebx+ebp*1+0x17],eax
  408e4a:	(bad)  
  408e4b:	std    
  408e4c:	jmp    0x408e74
  408e4e:	or     eax,0xfd971016
  408e53:	jle    0x408ded
  408e55:	jmp    0xe5a8dfbb
  408e5a:	adc    al,0x54
  408e5c:	cmp    BYTE PTR [ebp+0x68],dh
  408e5f:	adc    DWORD PTR [eax],edi
  408e61:	sar    eax,1
  408e63:	sub    esp,eax
  408e65:	dec    esi
  408e66:	ds or  eax,0x1ed35b93
  408e6c:	leave  
  408e6d:	mov    cl,0x12
  408e6f:	jmp    0x26053df3
  408e74:	aas    
  408e75:	adc    eax,edx
  408e77:	into   
  408e78:	lods   al,BYTE PTR ds:[esi]
  408e79:	ds out 0xa7,al
  408e7c:	fdivr  st,st(2)
  408e7e:	ins    WORD PTR es:[edi],dx
  408e80:	(bad)  
  408e81:	inc    al
  408e83:	popf   
  408e84:	push   eax
  408e85:	jl     0x408e0a
  408e87:	xchg   ebx,eax
  408e88:	outs   dx,BYTE PTR ds:[esi]
  408e89:	fdiv   DWORD PTR [ebp-0x6d]
  408e8c:	sub    DWORD PTR [edi-0x7046e652],esi
  408e92:	out    0x56,al
  408e94:	cmp    dh,0x46
  408e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e98:	imul   eax,DWORD PTR [ecx+0x1a],0xffffffb3
  408e9c:	fiadd  WORD PTR [eax]
  408e9e:	mov    BYTE PTR [esi],al
  408ea0:	sbb    eax,0xea2abaf5
  408ea5:	pushf  
  408ea6:	outs   dx,DWORD PTR ds:[esi]
  408ea7:	mov    bl,0x5a
  408ea9:	mov    al,ds:0x66057588
  408eae:	adc    al,dh
  408eb0:	sbb    esi,DWORD PTR [esi+0x4b]
  408eb3:	mov    ds:0x384be9ff,al
  408eb8:	xor    BYTE PTR [edi],dh
  408eba:	pop    ebx
  408ebb:	mov    ss,WORD PTR [ebp+0x83379c]
  408ec1:	mov    ecx,0xdf7db46b
  408ec6:	cmp    al,0x2
  408ec8:	mov    edi,0xe4123e0c
  408ecd:	pop    ecx
  408ece:	sbb    al,0x9c
  408ed0:	sub    bl,ch
  408ed2:	test   al,0x6d
  408ed4:	scas   al,BYTE PTR es:[edi]
  408ed5:	jecxz  0x408f1f
  408ed7:	xor    ah,ah
  408ed9:	or     eax,0x183b69b4
  408ede:	loope  0x408ebd
  408ee0:	push   DWORD PTR [ebx+0x61ad865]
  408ee6:	jge    0x408e8d
  408ee8:	push   es
  408ee9:	xchg   esp,eax
  408eea:	bound  edi,QWORD PTR [edi+edx*1-0x3bb0df0c]
  408ef1:	xchg   ebp,esi
  408ef3:	adc    cl,BYTE PTR [ebx-0x3a7279cc]
  408ef9:	push   edi
  408efa:	cmp    BYTE PTR [ebp+0x2],ah
  408efd:	out    dx,eax
  408efe:	cmp    eax,0x564cd7d6
  408f03:	inc    esp
  408f04:	out    dx,eax
  408f05:	pop    esp
  408f06:	xor    ebx,ecx
  408f08:	push   ecx
  408f09:	push   edi
  408f0a:	mov    ch,0x21
  408f0c:	idiv   DWORD PTR [ecx+0x46]
  408f0f:	jmp    0xeccf:0xcd07bd6b
  408f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f17:	or     DWORD PTR [edx-0x70],edi
  408f1a:	fwait
  408f1b:	or     BYTE PTR [edx],bh
  408f1d:	(bad)  
  408f1e:	pop    es
  408f1f:	sub    al,0x29
  408f21:	push   ecx
  408f22:	mov    eax,ds:0x90fead7e
  408f27:	mov    dh,0x3a
  408f29:	mov    esi,edx
  408f2b:	popf   
  408f2c:	pop    ecx
  408f2d:	lock paddsw mm1,mm4
  408f31:	jp     0x408f26
  408f33:	fwait
  408f34:	mov    ah,0xc7
  408f36:	push   ds
  408f37:	test   BYTE PTR [ecx],bl
  408f39:	add    BYTE PTR [edi+0x24],al
  408f3c:	and    eax,0xdae735b4
  408f41:	stc    
  408f42:	sub    al,0x7
  408f44:	mov    ebp,0xaab47758
  408f49:	xor    bl,cl
  408f4b:	mov    dl,0x69
  408f4d:	pusha  
  408f4e:	cmp    eax,0xa6975fa9
  408f53:	inc    ebp
  408f54:	(bad)  
  408f55:	dec    esi
  408f56:	and    esp,DWORD PTR [ebp+0x77]
  408f59:	adc    bl,BYTE PTR [ebx-0x14]
  408f5c:	and    al,0x4e
  408f5e:	rcr    edi,0xaf
  408f61:	mov    ch,0xf7
  408f63:	ja     0x408fcc
  408f65:	sar    DWORD PTR [edi-0x3b],cl
  408f68:	arpl   WORD PTR [ecx],ax
  408f6a:	mov    al,0x64
  408f6c:	int3   
  408f6d:	rcr    ecx,1
  408f6f:	pop    edi
  408f70:	das    
  408f71:	dec    eax
  408f72:	xor    al,0x48
  408f74:	xor    BYTE PTR [eax],dl
  408f76:	push   ss
  408f77:	das    
  408f78:	pushf  
  408f79:	ret    0xc32f
  408f7c:	fsub   DWORD PTR [edi+0x1e]
  408f7f:	into   
  408f80:	sub    eax,0xd9f53586
  408f85:	(bad)  
  408f86:	push   ss
  408f87:	lods   eax,DWORD PTR ds:[esi]
  408f88:	ret    
  408f89:	jecxz  0x408fae
  408f8b:	xor    DWORD PTR [ecx+0x3af1724],ebx
  408f91:	mov    bl,0x6a
  408f93:	ror    DWORD PTR [esi+ecx*2],0xb3
  408f97:	inc    eax
  408f98:	jmp    0x408fde
  408f9a:	out    0x58,eax
  408f9c:	nop
  408f9d:	mov    ebx,0x2959659d
  408fa2:	push   eax
  408fa3:	jo     0x408f6c
  408fa5:	outs   dx,DWORD PTR ds:[esi]
  408fa6:	mov    ah,0xd7
  408fa8:	fmul   QWORD PTR ds:[edx+0xc58b238]
  408faf:	pop    ebp
  408fb0:	jecxz  0x408f72
  408fb2:	(bad)  
  408fb3:	int3   
  408fb4:	stc    
  408fb5:	cwde   
  408fb6:	pop    ebx
  408fb7:	lahf   
  408fb8:	pusha  
  408fb9:	mov    dh,bh
  408fbb:	arpl   WORD PTR [eax-0x67],bp
  408fbe:	mov    al,ds:0x64dff35c
  408fc3:	mov    WORD PTR [ebx-0x6],gs
  408fc6:	ss loopne 0x408f4f
  408fc9:	mov    ebp,0x5613b3bd
  408fce:	mov    ch,0x28
  408fd0:	loope  0x408fd4
  408fd2:	loope  0x409038
  408fd4:	(bad)  
  408fd5:	call   FWORD PTR [eax-0x741027b5]
  408fdb:	aad    0x3f
  408fdd:	hlt    
  408fde:	(bad)  
  408fdf:	xor    al,0xc6
  408fe1:	sub    eax,0x7670cf0b
  408fe6:	jp     0x408f98
  408fe8:	ret    
  408fe9:	aaa    
  408fea:	mov    bl,0xfd
  408fec:	neg    DWORD PTR [edx]
  408fee:	xchg   ecx,eax
  408fef:	adc    eax,0x3a606138
  408ff4:	mov    esi,0x5e4cf11e
  408ff9:	iret   
  408ffa:	clc    
  408ffb:	add    BYTE PTR [esi+0x72],bh
  408ffe:	cmc    
  408fff:	push   ebp
  409000:	mov    eax,0xb018f838
  409005:	add    bl,dl
  409007:	cld    
  409008:	sar    DWORD PTR [esi-0x61],1
  40900b:	sbb    dh,BYTE PTR [eax+ecx*2]
  40900e:	fcomp  DWORD PTR [esi+0x1e]
  409011:	inc    edi
  409012:	sbb    DWORD PTR [eax+0x5dece5c9],ebx
  409018:	inc    esp
  409019:	push   esp
  40901a:	(bad)  
  40901b:	aas    
  40901c:	(bad)  
  40901d:	mov    edi,DWORD PTR ds:0x362c5994
  409023:	dec    ecx
  409024:	and    edx,DWORD PTR [edi-0x34]
  409027:	lahf   
  409028:	mov    ebp,0xf4c04371
  40902d:	cli    
  40902e:	xchg   esp,eax
  40902f:	(bad)  
  409030:	mov    ss,WORD PTR [ecx]
  409032:	fidiv  DWORD PTR [esi-0x5c8591d2]
  409038:	and    DWORD PTR [esi+0x45],esi
  40903b:	int    0xff
  40903d:	jecxz  0x408fec
  40903f:	jl     0x409042
  409041:	ja     0x408fcc
  409043:	fst    DWORD PTR [ecx+0x75141bc]
  409049:	mov    edx,?
  40904b:	jae    0x409094
  40904d:	cmp    esi,DWORD PTR [edx+edx*2-0x652e2fd8]
  409054:	push   edi
  409055:	fidiv  WORD PTR [ebx-0x3b752cac]
  40905b:	fimul  DWORD PTR [edi+esi*4]
  40905e:	mov    eax,0x5167b217
  409063:	ror    bh,cl
  409065:	xor    ebx,eax
  409067:	sbb    dh,BYTE PTR [eax]
  409069:	(bad)  
  40906a:	sbb    esi,ecx
  40906c:	enter  0x3662,0x56
  409070:	les    edx,FWORD PTR [edi+0x79]
  409073:	or     ch,BYTE PTR [eax+edx*1+0x43]
  409077:	xor    ah,ah
  409079:	lahf   
  40907a:	dec    ebp
  40907b:	fild   QWORD PTR [edi+0x64]
  40907e:	(bad)  
  40907f:	and    eax,0xbfac2443
  409084:	gs cmp al,0x1b
  409087:	mov    cl,0x3
  409089:	xor    edx,eax
  40908b:	fld    DWORD PTR [esi-0x31b8a065]
  409091:	jmp    0x4090a8
  409093:	lods   al,BYTE PTR ds:[esi]
  409094:	mov    esi,0x462dccd7
  409099:	cmp    eax,0x9abfadb6
  40909e:	dec    ebx
  40909f:	in     al,dx
  4090a0:	mov    ah,0x64
  4090a2:	add    ecx,edx
  4090a4:	les    esi,FWORD PTR [eax+eiz*8+0x28c9e4a]
  4090ab:	jns    0x409032
  4090ad:	test   eax,edi
  4090af:	ret    
  4090b0:	mov    cl,0xed
  4090b2:	les    ebp,FWORD PTR [edx+eiz*4]
  4090b5:	mov    esp,0xf5bc394a
  4090ba:	hlt    
  4090bb:	in     al,0x7c
  4090bd:	push   edi
  4090be:	cmp    eax,0x7e5d3a00
  4090c3:	adc    eax,0x7b3c2dc
  4090c8:	adc    BYTE PTR [edi],dl
  4090ca:	sub    al,0xf
  4090cc:	and    edi,DWORD PTR [ebp+0x668ae2a3]
  4090d2:	sbb    DWORD PTR [edi-0x76],ebp
  4090d5:	popf   
  4090d6:	test   BYTE PTR [edi-0x18],cl
  4090d9:	fimul  WORD PTR [eax-0x4f]
  4090dc:	cmp    eax,0xf73c80de
  4090e1:	bound  esp,QWORD PTR [eax-0x5b391652]
  4090e7:	add    DWORD PTR [edx+0x74],ebx
  4090ea:	adc    eax,0xc6604c62
  4090ef:	inc    esi
  4090f0:	cmp    eax,0x40f513f3
  4090f5:	mov    dl,0xcf
  4090f7:	dec    ebp
  4090f8:	xor    ah,dl
  4090fa:	clc    
  4090fb:	shr    BYTE PTR [ebx+0xe9eeee2],1
  409101:	and    BYTE PTR [ecx],dh
  409103:	in     al,0xcd
  409105:	push   esp
  409106:	adc    ch,BYTE PTR [ecx]
  409108:	xor    bh,BYTE PTR [edi-0x6fc09fc7]
  40910e:	and    eax,0x329799a3
  409113:	test   DWORD PTR [ebx],0xf961be1e
  409119:	lahf   
  40911a:	out    0xc7,eax
  40911c:	fstp   QWORD PTR [ebx-0x37]
  40911f:	sbb    ecx,DWORD PTR ds:0x98cc2c2b
  409125:	or     bl,BYTE PTR [ecx+0x5d94276a]
  40912b:	stc    
  40912c:	mov    esi,0xd67d69c0
  409131:	jp     0x409176
  409133:	xor    DWORD PTR [esi-0x413d460e],ebp
  409139:	jl     0x409139
  40913b:	lock std 
  40913d:	lods   eax,DWORD PTR ds:[esi]
  40913e:	scas   eax,DWORD PTR es:[edi]
  40913f:	(bad)  
  409140:	sti    
  409141:	pop    esi
  409142:	ds push 0x75
  409145:	cmp    DWORD PTR [ebx-0x69],0xc963d11b
  40914c:	push   cs
  40914d:	mov    dh,0xd7
  40914f:	push   0xffffff9c
  409151:	out    0x68,eax
  409153:	je     0x4091cb
  409155:	mov    bl,0xeb
  409157:	or     DWORD PTR [edi],eax
  409159:	hlt    
  40915a:	popf   
  40915b:	dec    eax
  40915c:	cli    
  40915d:	hlt    
  40915e:	(bad)  
  40915f:	ror    DWORD PTR [edi-0x6cfdd4ee],1
  409165:	xchg   DWORD PTR [ecx+ecx*1-0x2da0d3b],edi
  40916c:	pop    DWORD PTR [eax+0x48]
  40916f:	jb     0x40914c
  409171:	in     eax,dx
  409172:	stos   DWORD PTR es:[edi],eax
  409173:	xchg   ebx,eax
  409174:	jae    0x4090fd
  409176:	and    cl,BYTE PTR [ebp-0xcfe678c]
  40917c:	cwde   
  40917d:	add    esi,DWORD PTR [edx+0x6fec5fdf]
  409183:	or     ch,BYTE PTR [ebx]
  409185:	xor    eax,0x9f8b9175
  40918a:	(bad)  
  40918b:	clc    
  40918c:	inc    esi
  40918d:	pop    DWORD PTR [si-0x5205]
  409192:	aas    
  409193:	ret    0x1b4
  409196:	sub    ah,dh
  409198:	mov    dh,0x29
  40919a:	push   ebp
  40919b:	cmp    al,0x86
  40919d:	dec    esp
  40919e:	rol    dl,0x70
  4091a1:	xchg   esp,eax
  4091a2:	in     al,0x23
  4091a4:	iret   
  4091a5:	cwde   
  4091a6:	jecxz  0x4091f4
  4091a8:	fmul   DWORD PTR [eax+0x18]
  4091ab:	inc    ebp
  4091ac:	scas   eax,DWORD PTR es:[edi]
  4091ad:	ss stos BYTE PTR es:[edi],al
  4091af:	mov    eax,ds:0x563fa679
  4091b4:	cmp    ah,BYTE PTR [ecx+0x30]
  4091b7:	dec    eax
  4091b8:	pop    ds
  4091b9:	fisub  DWORD PTR [esi]
  4091bb:	gs cmp bh,bh
  4091be:	push   eax
  4091bf:	sub    al,0x72
  4091c1:	ror    BYTE PTR [esi-0x72],0x61
  4091c5:	(bad)  
  4091c6:	js     0x4091e6
  4091c8:	dec    ebp
  4091c9:	jl     0x409239
  4091cb:	int3   
  4091cc:	div    DWORD PTR fs:[ebx+0x7a]
  4091d0:	xor    al,0xb9
  4091d2:	sub    bl,BYTE PTR ds:0xe8bddb8b
  4091d8:	retf   0x271a
  4091db:	sub    al,0x5
  4091dd:	mov    eax,0x270775dd
  4091e2:	xchg   ecx,eax
  4091e3:	lds    esp,FWORD PTR [ebx-0x3d]
  4091e6:	test   BYTE PTR [esi+0x40ac4c27],cl
  4091ec:	or     DWORD PTR cs:[ebx-0x6],ebx
  4091f0:	cmp    ah,BYTE PTR [ebp-0x3b]
  4091f3:	push   ebx
  4091f4:	in     eax,dx
  4091f5:	ror    BYTE PTR [esi],1
  4091f7:	sbb    eax,0x8ef1027
  4091fc:	pop    ebx
  4091fd:	loopne 0x4091db
  4091ff:	mov    BYTE PTR [ebx],ah
  409201:	scas   eax,DWORD PTR es:[edi]
  409202:	(bad)  
  409203:	mov    edi,DWORD PTR [ebp-0x59]
  409206:	test   DWORD PTR [esi+0x17c75ce7],edi
  40920c:	or     bl,BYTE PTR [ebp+edx*2+0x3a46fb5e]
  409213:	mov    edi,0xbdf5c5ce
  409218:	add    ebx,DWORD PTR [eax-0x69]
  40921b:	in     eax,dx
  40921c:	sub    bh,ah
  40921e:	in     eax,dx
  40921f:	xchg   esp,eax
  409220:	mov    eax,0x8f241d17
  409225:	std    
  409226:	test   BYTE PTR ds:0xa242e76f,ah
  40922c:	enter  0xf5a9,0xce
  409230:	das    
  409231:	dec    edi
  409232:	adc    eax,0x472f4473
  409237:	shl    esi,1
  409239:	xor    al,0x98
  40923b:	test   BYTE PTR [edi],al
  40923d:	xor    al,0x4c
  40923f:	test   DWORD PTR [ecx-0x18c21509],edx
  409245:	mov    eax,0x5751b0d1
  40924a:	xchg   ecx,eax
  40924b:	push   ebp
  40924c:	or     al,0x60
  40924e:	or     al,0xce
  409250:	pop    ss
  409251:	jo     0x409228
  409253:	fcmovnbe st,st(6)
  409255:	fidivr WORD PTR ds:0xbf8628e7
  40925b:	into   
  40925c:	and    esp,ebx
  40925e:	sbb    eax,ecx
  409260:	je     0x40920a
  409262:	ror    BYTE PTR [esi+0x328f4ddd],cl
  409268:	push   cs
  409269:	xchg   ecx,eax
  40926a:	test   al,0x46
  40926c:	scas   eax,DWORD PTR es:[edi]
  40926d:	or     DWORD PTR [edi-0xe19887b],0x4fa9fc59
  409277:	cmp    esp,DWORD PTR [eax+0x1a]
  40927a:	mov    ?,WORD PTR [ecx-0x34]
  40927d:	mov    ds:0x37cde449,eax
  409282:	push   0x6671144c
  409287:	shr    DWORD PTR [ebx],cl
  409289:	bnd jns 0x409303
  40928c:	mov    esi,0xeeaf6033
  409291:	fwait
  409292:	sti    
  409293:	xchg   ebx,eax
  409294:	fimul  DWORD PTR [ebx+0x66d45021]
  40929a:	dec    esp
  40929b:	hlt    
  40929c:	dec    edx
  40929d:	scas   al,BYTE PTR es:[edi]
  40929e:	in     al,dx
  40929f:	jecxz  0x4092ec
  4092a1:	and    esi,esi
  4092a3:	sbb    al,0x55
  4092a5:	cmp    al,0x6b
  4092a7:	lea    esi,[edi]
  4092a9:	ret    0x4e7
  4092ac:	push   esp
  4092ad:	stc    
  4092ae:	fs mov ah,0xdd
  4092b1:	pop    edi
  4092b2:	mov    al,ds:0x4a25c206
  4092b7:	lods   eax,DWORD PTR ds:[esi]
  4092b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b9:	es pushf 
  4092bb:	and    BYTE PTR ds:0x6791851c,dl
  4092c1:	pop    ecx
  4092c2:	aad    0x52
  4092c4:	push   ss
  4092c5:	int3   
  4092c6:	add    DWORD PTR [ebx-0x24],edi
  4092c9:	cvtdq2ps xmm0,xmm7
  4092cc:	pop    ebx
  4092cd:	das    
  4092ce:	lods   al,BYTE PTR ds:[esi]
  4092cf:	push   eax
  4092d0:	mov    bh,0xa1
  4092d2:	clc    
  4092d3:	add    ebp,DWORD PTR [eax-0x63]
  4092d6:	dec    eax
  4092d7:	mov    ebx,0xe1b535bd
  4092dc:	pop    es
  4092dd:	lods   eax,DWORD PTR ds:[esi]
  4092de:	test   al,0xb8
  4092e0:	mov    al,ds:0xff76c95e
  4092e5:	xor    esi,0xb2341549
  4092eb:	push   0xffffff8e
  4092ed:	add    al,0xd7
  4092ef:	dec    edx
  4092f0:	jae    0x4092cf
  4092f2:	xor    edi,eax
  4092f4:	jb     0x409367
  4092f6:	mov    ds:0xc12bfcbc,eax
  4092fb:	das    
  4092fc:	fs dec esp
  4092fe:	repnz and eax,0xf18deef6
  409304:	bound  edx,QWORD PTR [ecx+esi*8+0x29]
  409308:	or     eax,0x24d3426d
  40930d:	and    dh,cl
  40930f:	mov    al,BYTE PTR [eax+0x34]
  409312:	xor    esp,DWORD PTR [ebx]
  409314:	jp     0x409374
  409316:	loopne 0x40934e
  409318:	mov    ebx,0x3bdc5ff7
  40931d:	int    0xc3
  40931f:	sbb    al,0x1
  409321:	or     al,0xb
  409323:	add    BYTE PTR [esi-0x27],bh
  409326:	sahf   
  409327:	mov    esi,0x7dc92798
  40932c:	fcom   st(3)
  40932e:	sub    al,0x4e
  409330:	xchg   esp,eax
  409331:	lock les esp,FWORD PTR [eax-0x176a28a]
  409338:	xchg   ecx,eax
  409339:	out    dx,eax
  40933a:	into   
  40933b:	inc    edx
  40933c:	push   ecx
  40933d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933e:	xor    DWORD PTR [edi+0x65],esp
  409341:	mov    cl,0x6d
  409343:	je     0x4093b3
  409345:	mov    bh,0x7d
  409347:	inc    esp
  409348:	shl    bh,cl
  40934a:	dec    esp
  40934b:	jp     0x40939c
  40934d:	ror    DWORD PTR [eax+0x7d],cl
  409350:	ins    BYTE PTR es:[edi],dx
  409351:	mov    ah,0x7b
  409353:	lods   al,BYTE PTR ds:[esi]
  409354:	and    bh,bh
  409356:	in     al,dx
  409357:	pop    es
  409358:	jge    0x4093a5
  40935a:	test   eax,0x5c297dc0
  40935f:	loope  0x4093ba
  409361:	cdq    
  409362:	jmp    0xa6e124db
  409367:	mov    esi,0xc387370f
  40936c:	daa    
  40936d:	enter  0x75cb,0x6b
  409371:	arpl   WORD PTR [edi-0x70],cx
  409374:	pop    eax
  409375:	lods   eax,DWORD PTR ds:[esi]
  409376:	xor    DWORD PTR [esi-0x3e82846f],0x59d6b630
  409380:	rol    BYTE PTR [esi],1
  409382:	fs adc ah,bl
  409385:	dec    ecx
  409386:	mov    bl,0xe7
  409388:	iret   
  409389:	adc    DWORD PTR [ebp+0x2f],ebp
  40938c:	fld    TBYTE PTR [edi-0x7ab94820]
  409392:	mov    edi,0x9b39ec67
  409397:	push   ds
  409398:	rcr    DWORD PTR [ecx],0xc3
  40939b:	fstp   QWORD PTR [esi+0x44983fd]
  4093a1:	out    0xf9,al
  4093a3:	or     bh,BYTE PTR [ecx]
  4093a5:	stos   DWORD PTR es:[edi],eax
  4093a6:	cmp    dh,BYTE PTR [eax+edi*4+0x2a3b4e2d]
  4093ad:	cmp    ebp,DWORD PTR [ebx-0x298fb61e]
  4093b3:	cmc    
  4093b4:	popf   
  4093b5:	jl     0x409349
  4093b7:	(bad)  
  4093b8:	jecxz  0x409347
  4093ba:	je     0x40943a
  4093bc:	fmul   QWORD PTR [eax]
  4093be:	xor    cl,0x65
  4093c1:	pop    edx
  4093c2:	xchg   edi,eax
  4093c3:	es addr16 mov eax,0x2afe04ac
  4093ca:	xchg   DWORD PTR [esi+0x5b3d3bec],esi
  4093d0:	pushf  
  4093d1:	pop    ebp
  4093d2:	lds    esi,FWORD PTR [edi-0x6d3d75d1]
  4093d8:	jbe    0x40939e
  4093da:	lahf   
  4093db:	xor    BYTE PTR [esp+ebx*4+0x74],bl
  4093df:	and    eax,edi
  4093e1:	jge    0x40940f
  4093e3:	dec    eax
  4093e4:	xor    al,0xc8
  4093e6:	dec    esi
  4093e7:	cs push ebp
  4093e9:	call   0xed5e:0x41bb18a7
  4093f0:	jg     0x4093b8
  4093f2:	xor    DWORD PTR [edx+edx*1-0x17],ebp
  4093f6:	or     eax,DWORD PTR [edx+0x644bbef6]
  4093fc:	out    0x68,eax
  4093fe:	fmul   QWORD PTR [ecx-0x73]
  409401:	push   ecx
  409402:	not    cl
  409404:	fdiv   QWORD PTR [ebp-0x5dba9bb]
  40940a:	in     al,0x17
  40940c:	pop    es
  40940d:	js     0x40945b
  40940f:	add    al,0x8f
  409411:	fdiv   DWORD PTR [esi]
  409413:	xchg   ecx,eax
  409414:	cli    
  409415:	in     al,dx
  409416:	add    DWORD PTR [esi],edx
  409418:	cli    
  409419:	add    al,0xdb
  40941b:	jecxz  0x4093dd
  40941d:	mov    al,0x5b
  40941f:	retf   
  409420:	out    dx,eax
  409421:	std    
  409422:	aad    0xc
  409424:	add    dl,BYTE PTR [eax+0x7faac461]
  40942a:	adc    ebp,DWORD PTR [ecx-0x3b]
  40942d:	sbb    DWORD PTR [ebx],0xbc141ac8
  409433:	(bad)  
  409434:	aaa    
  409435:	xor    al,0xf9
  409437:	xor    eax,0x1a268768
  40943c:	cmp    ebp,ebx
  40943e:	mov    BYTE PTR [ebx],bh
  409440:	imul   eax,DWORD PTR [edi+ebp*2-0x409fe9ca],0x381d1a3c
  40944b:	jo     0x409460
  40944d:	pop    esi
  40944e:	and    edi,DWORD PTR [ecx]
  409450:	cmp    esp,edi
  409452:	lahf   
  409453:	inc    ecx
  409454:	dec    ecx
  409455:	or     esi,eax
  409457:	push   edx
  409458:	jno    0x40940a
  40945a:	shr    BYTE PTR [ebx-0x3cda458c],cl
  409460:	stos   BYTE PTR es:[edi],al
  409461:	mov    DWORD PTR [edx],ecx
  409463:	repnz mov bh,0xbc
  409466:	or     cl,BYTE PTR [ecx+0x2daab1e7]
  40946c:	call   0xbf649939
  409471:	xchg   BYTE PTR [ebp-0x78e2298b],ah
  409477:	pop    esp
  409478:	cmp    ecx,DWORD PTR [esi+0x1274ac51]
  40947e:	ret    
  40947f:	xlat   BYTE PTR ds:[ebx]
  409480:	push   edx
  409481:	dec    ebx
  409482:	repz retf 0x2f4f
  409486:	add    al,0x62
  409488:	jo     0x4094b4
  40948a:	jo     0x409445
  40948c:	and    dl,dl
  40948e:	or     ebx,ebp
  409490:	adc    al,0xf5
  409492:	sbb    al,0x77
  409494:	imul   ebp,ecx,0xffffff84
  409497:	cdq    
  409498:	mov    al,ds:0xce7abca7
  40949d:	retf   0xe956
  4094a0:	int    0xd9
  4094a2:	mov    eax,0x5bf289e8
  4094a7:	out    0x95,al
  4094a9:	mov    ebx,0x9cd09a85
  4094ae:	shr    DWORD PTR [edx+0x30b49f4],1
  4094b4:	xor    eax,0xd85e2da6
  4094b9:	cli    
  4094ba:	aas    
  4094bb:	out    0x92,eax
  4094bd:	cs jbe 0x4094e4
  4094c0:	mov    eax,ds:0xa6395f9f
  4094c5:	xor    esp,DWORD PTR [eax]
  4094c7:	pop    ebp
  4094c8:	inc    esp
  4094c9:	dec    ecx
  4094ca:	pextrw eax,(bad),0xc5
  4094cc:	xchg   bh,dl
  4094ce:	or     BYTE PTR [eax],bh
  4094d0:	push   ecx
  4094d1:	xor    eax,0xfb1e3c2f
  4094d6:	xchg   esi,eax
  4094d7:	fldenv [ebx+0xd]
  4094da:	jns    0x40954b
  4094dc:	test   ah,0x6b
  4094df:	aam    0x44
  4094e1:	fldenv [esp+eiz*8-0x47]
  4094e5:	call   0xbf3722c8
  4094ea:	mov    cl,0x4c
  4094ec:	sbb    al,0x1d
  4094ee:	pop    esi
  4094f0:	push   ss
  4094f1:	enter  0x5e76,0x7a
  4094f5:	data16 xor BYTE PTR es:[eax-0x18861d9a],dh
  4094fd:	add    bh,al
  4094ff:	in     eax,0xb0
  409501:	out    dx,eax
  409502:	aad    0xd8
  409504:	aas    
  409505:	ret    
  409506:	jmp    0xd4ac2628
  40950b:	call   0xc980:0x2a1996a
  409512:	add    ecx,DWORD PTR [edi]
  409514:	xor    eax,0xb1a81214
  409519:	adc    al,0x90
  40951b:	cld    
  40951c:	in     eax,dx
  40951d:	pop    esi
  40951e:	cld    
  40951f:	jmp    0xc2262809
  409524:	int    0x7d
  409526:	je     0x4094ab
  409528:	bound  ebp,QWORD PTR [ebp+0x18]
  40952b:	jmp    0x1e32851c
  409530:	mov    ecx,0xc4512a61
  409535:	ret    
  409536:	mul    BYTE PTR [ecx+0x58]
  409539:	pop    esi
  40953a:	dec    ebp
  40953b:	stos   DWORD PTR es:[edi],eax
  40953c:	pop    esp
  40953d:	cwde   
  40953e:	or     edi,eax
  409540:	fst    QWORD PTR [edx-0x4]
  409543:	and    eax,0x40a64281
  409548:	pop    edx
  409549:	mov    WORD PTR ds:0xca923cbe,ds
  40954f:	stc    
  409550:	nop
  409551:	es xor eax,0x50a13e54
  409557:	call   DWORD PTR [ebp-0x21]
  40955a:	mov    bl,0xd9
  40955c:	add    al,0x64
  40955e:	fimul  DWORD PTR [ecx+0x5873bca2]
  409564:	daa    
  409565:	xchg   esi,eax
  409566:	(bad)  
  409567:	fbld   TBYTE PTR [eax-0x79]
  40956a:	scas   eax,DWORD PTR es:[edi]
  40956b:	adc    BYTE PTR [edx+0x5e2a02f5],0x59
  409572:	outs   dx,BYTE PTR ds:[esi]
  409573:	xor    BYTE PTR [esi+0x1d],al
  409576:	pop    ecx
  409577:	outs   dx,BYTE PTR ds:[esi]
  409578:	fistp  DWORD PTR [eax+0x3adf0308]
  40957e:	inc    edx
  40957f:	lds    esp,FWORD PTR [edi+0x6d4d1b9f]
  409585:	rcl    DWORD PTR [eax+0x504b9ede],1
  40958b:	inc    esi
  40958c:	pop    ds
  40958d:	rcr    DWORD PTR [eax-0x2f],1
  409590:	and    edi,DWORD PTR [esi]
  409592:	lds    ebx,FWORD PTR [edi+edx*1-0x26]
  409596:	loope  0x40960b
  409598:	in     eax,dx
  409599:	xchg   edi,eax
  40959a:	sbb    ecx,DWORD PTR [eax-0x65]
  40959d:	push   ss
  40959e:	xchg   dx,ax
  4095a0:	in     al,dx
  4095a1:	and    dl,al
  4095a3:	pop    ebx
  4095a4:	in     eax,0xa8
  4095a6:	add    eax,0xe4f08a12
  4095ab:	mov    ds:0xad1c17d2,eax
  4095b0:	loop   0x409597
  4095b2:	jns    0x40960f
  4095b4:	in     al,dx
  4095b5:	push   esp
  4095b6:	jl     0x4095f2
  4095b8:	and    eax,0xdfd2391e
  4095bd:	push   0x9245676b
  4095c2:	xchg   cl,cl
  4095c4:	or     bl,BYTE PTR [ecx+0x73]
  4095c7:	sub    DWORD PTR [eax+0x1d],ebx
  4095ca:	xor    eax,0x1bf1244b
  4095cf:	dec    esp
  4095d0:	fs xor ecx,ebx
  4095d3:	add    DWORD PTR ds:0x2b9cae3e,eax
  4095d9:	mov    edx,0x3d14534c
  4095de:	push   0xdd89aaa9
  4095e3:	and    al,0x9c
  4095e5:	pop    ebp
  4095e6:	sbb    al,BYTE PTR [ebp+0x3f957c1b]
  4095ec:	pushf  
  4095ed:	int    0x44
  4095ef:	xor    edx,edx
  4095f1:	xchg   ecx,eax
  4095f2:	(bad)  
  4095f3:	jp     0x409671
  4095f5:	ror    BYTE PTR [esi+eax*2+0x68a040d6],0xf4
  4095fd:	dec    esp
  4095fe:	jp     0x409618
  409600:	jne    0x4095e3
  409602:	pop    eax
  409603:	cmp    bh,cl
  409605:	and    eax,0xa1b74da3
  40960a:	int3   
  40960b:	leave  
  40960c:	sbb    dh,ch
  40960e:	aad    0x9e
  409610:	cli    
  409611:	stos   DWORD PTR es:[edi],eax
  409612:	sub    ebx,DWORD PTR [esi]
  409614:	ins    DWORD PTR es:[edi],dx
  409615:	push   ebx
  409616:	daa    
  409617:	mov    es,WORD PTR [esi-0xf]
  40961a:	pop    eax
  40961b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961c:	into   
  40961d:	cwde   
  40961e:	inc    esi
  40961f:	stc    
  409620:	aam    0xad
  409622:	ret    
  409623:	shr    DWORD PTR [edi-0xe],cl
  409626:	int3   
  409627:	iret   
  409628:	cmp    al,al
  40962a:	cmp    bh,BYTE PTR [ebx]
  40962c:	cmp    eax,0xfbb5c2b
  409631:	mov    cl,0x3f
  409633:	sbb    eax,0xb9b4987d
  409638:	or     DWORD PTR [edi+0x16ad7d30],ecx
  40963e:	ret    0x8c0f
  409641:	pushf  
  409642:	std    
  409643:	pushf  
  409644:	inc    eax
  409645:	sahf   
  409646:	jmp    FWORD PTR [ebx+0x77329042]
  40964c:	loopne 0x4095fc
  40964e:	fld    QWORD PTR [edi]
  409650:	sbb    eax,0xf0be3864
  409655:	ror    DWORD PTR [eax-0x635a8070],1
  40965b:	pavgw  mm2,QWORD PTR [ebp+ebp*4-0x66]
  409660:	(bad)  
  409661:	fchs   
  409663:	stc    
  409664:	xchg   esp,eax
  409665:	ds gs jnp 0x40964e
  409669:	test   eax,0xd32ea875
  40966e:	mov    dl,0x16
  409670:	ds clc 
  409672:	mov    eax,ds:0x17127cbb
  409677:	or     ah,ah
  409679:	iret   
  40967a:	dec    esi
  40967b:	lods   eax,DWORD PTR ds:[esi]
  40967c:	mov    al,ds:0x6ad125c5
  409681:	pushf  
  409682:	xor    ch,0x32
  409685:	cld    
  409686:	cmp    al,al
  409688:	ja     0x40960f
  40968a:	push   0xffffffb1
  40968c:	push   eax
  40968d:	mov    dl,ch
  40968f:	inc    esi
  409690:	inc    esi
  409691:	cdq    
  409692:	jecxz  0x409654
  409694:	xchg   edx,eax
  409695:	retf   
  409696:	fcomp  st(6)
  409698:	fimul  WORD PTR [edx+0x8a6dd3a]
  40969e:	pop    esp
  40969f:	or     BYTE PTR [esi-0x36],dl
  4096a2:	jle    0x4096b2
  4096a4:	mov    BYTE PTR [eax],ah
  4096a6:	cmp    ebp,DWORD PTR [ebx+0x2a392559]
  4096ac:	xchg   esi,eax
  4096ad:	mov    ebp,0xe091634
  4096b2:	out    dx,eax
  4096b3:	pusha  
  4096b4:	cmp    al,0x59
  4096b6:	inc    esi
  4096b7:	test   DWORD PTR [esp+0x2e9e4850],ebx
  4096be:	pop    edi
  4096bf:	fdivr  QWORD PTR [ecx-0x22]
  4096c2:	pop    eax
  4096c3:	mov    al,ds:0x139980f4
  4096c8:	xor    eax,0x1a
  4096cb:	retf   0xd706
  4096ce:	es pusha 
  4096d0:	jp     0x40967e
  4096d2:	and    dl,0xb7
  4096d5:	outs   dx,DWORD PTR ds:[esi]
  4096d6:	and    eax,DWORD PTR [ecx+0x42a12960]
  4096dc:	sbb    DWORD PTR [esi],0x13
  4096df:	and    dh,BYTE PTR [eax+0x49]
  4096e2:	sub    al,0x5a
  4096e4:	and    DWORD PTR [eax-0x5f8db8f4],0x63a88c39
  4096ee:	jmp    0x7c78:0x762faa82
  4096f5:	adc    ebp,DWORD PTR [eax+0x0]
  4096f8:	xchg   esp,eax
  4096f9:	fwait
  4096fa:	les    esp,FWORD PTR [esi-0x1e36fd7a]
  409700:	stc    
  409701:	pop    ds
  409702:	cmp    al,0xdd
  409704:	ins    DWORD PTR es:[edi],dx
  409705:	test   DWORD PTR [esi+0x7900d35f],esp
  40970b:	lahf   
  40970c:	jge    0x4096d3
  40970e:	aad    0xa5
  409710:	ds int3 
  409712:	daa    
  409713:	inc    ebx
  409714:	lods   eax,DWORD PTR ds:[esi]
  409715:	je     0x4096bc
  409717:	mov    dh,0x29
  409719:	das    
  40971a:	adc    bl,0xe9
  40971d:	inc    esi
  40971e:	cli    
  40971f:	add    DWORD PTR [edx+0x2],ecx
  409722:	add    ecx,esi
  409724:	loope  0x40972b
  409726:	outs   dx,DWORD PTR ds:[esi]
  409727:	mov    dh,0xe2
  409729:	mov    bh,0x6f
  40972b:	test   eax,0xe440994b
  409730:	(bad)  
  409731:	xchg   ebx,eax
  409732:	jge    0x40979a
  409734:	jge    0x4096d8
  409736:	fdivr  st,st(1)
  409738:	retf   0x7899
  40973b:	mov    edi,0xea32370d
  409740:	shl    DWORD PTR [esi],cl
  409742:	push   ecx
  409743:	mov    ecx,0x339615d1
  409748:	stos   BYTE PTR es:[edi],al
  409749:	push   eax
  40974a:	xchg   ecx,eax
  40974b:	push   ecx
  40974c:	push   0xfe716bb6
  409751:	inc    edi
  409752:	cmp    ch,BYTE PTR [edx+0x39]
  409755:	adc    DWORD PTR [eax+esi*8-0x18],ecx
  409759:	pop    edx
  40975a:	cwde   
  40975b:	jo     0x4097c2
  40975d:	scas   al,BYTE PTR es:[edi]
  40975e:	(bad)  
  40975f:	(bad)  
  409761:	push   edx
  409762:	xchg   edx,eax
  409763:	or     eax,0x50867d28
  409768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409769:	xchg   ecx,eax
  40976a:	pop    ebx
  40976b:	pop    eax
  40976c:	imul   esp,DWORD PTR [edx+0x4f53350e],0xb2ac94fa
  409776:	pop    ecx
  409777:	loope  0x409746
  409779:	jmp    0x40976d
  40977b:	imul   DWORD PTR [ecx]
  40977d:	dec    ebp
  40977e:	inc    eax
  40977f:	mov    edx,?
  409781:	mov    dl,0x6a
  409783:	pop    ecx
  409784:	mov    cl,ah
  409786:	mov    ah,0x3f
  409788:	xor    bh,BYTE PTR es:[edx]
  40978b:	mov    ds:0xacb7b989,al
  409790:	mov    ds:0xef129944,eax
  409795:	pop    ebp
  409796:	(bad)  
  409797:	into   
  409798:	pushf  
  409799:	sar    BYTE PTR [esi+0x76],1
  40979c:	cmp    DWORD PTR [eax+0x11670aa7],0xe5617b15
  4097a6:	jmp    0x4097e3
  4097a8:	mov    eax,0xb5c20fbb
  4097ad:	jle    0x40981a
  4097af:	dec    esi
  4097b0:	push   eax
  4097b1:	inc    eax
  4097b2:	dec    esi
  4097b3:	sbb    eax,0x1c9bf7c5
  4097b8:	int3   
  4097b9:	mov    dl,0xa4
  4097bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097bc:	add    al,BYTE PTR [edi-0x6ccdb3d9]
  4097c2:	cmp    BYTE PTR [edi+0x1df87eb8],dl
  4097c8:	inc    esi
  4097c9:	dec    eax
  4097ca:	jl     0x4097e4
  4097cc:	cmp    ebx,0x93059d20
  4097d2:	xchg   edi,eax
  4097d3:	cmc    
  4097d4:	add    eax,DWORD PTR es:[edx-0x52db2e60]
  4097db:	mov    esp,0xdbd4b409
  4097e0:	push   edi
  4097e1:	jno    0x4097b3
  4097e3:	mov    eax,ds:0x51f4f983
  4097e8:	mov    bh,0x25
  4097ea:	mov    al,0x4e
  4097ec:	xor    BYTE PTR [esi-0x15320c29],bl
  4097f2:	mov    ebp,0xd9d50a6f
  4097f7:	push   edi
  4097f8:	stos   BYTE PTR es:[edi],al
  4097f9:	int    0x50
  4097fb:	nop
  4097fc:	adc    DWORD PTR [edx+0x58dc54eb],ebx
  409802:	cmc    
  409803:	ins    DWORD PTR es:[edi],dx
  409804:	push   edi
  409805:	lock adc BYTE PTR [ebx+0x51],bh
  409809:	xor    DWORD PTR [ebx+0x32e02fea],eax
  40980f:	int3   
  409810:	sbb    ebp,esi
  409812:	jnp    0x409878
  409814:	div    BYTE PTR [ecx]
  409816:	push   ecx
  409817:	inc    edx
  409818:	mov    edx,0x19448672
  40981d:	in     eax,0x79
  40981f:	add    eax,0xc1a13840
  409824:	aam    0x10
  409826:	jecxz  0x40989d
  409828:	jge    0x4097d7
  40982a:	ds jle 0x409825
  40982d:	cmp    ch,BYTE PTR [edi+0x5d]
  409830:	dec    ebx
  409831:	mov    dl,0x5c
  409833:	and    edx,DWORD PTR [eax-0x184391d]
  409839:	xor    cl,BYTE PTR [ecx+0x7b]
  40983c:	cdq    
  40983d:	xchg   BYTE PTR [edi+esi*2+0x4d732507],dl
  409844:	imul   ebx,edx,0x666ecc92
  40984a:	or     ch,BYTE PTR [eax+esi*2]
  40984d:	and    dl,bl
  40984f:	mov    bh,0x7a
  409851:	fadd   QWORD PTR [eax]
  409853:	dec    esp
  409854:	lds    edi,FWORD PTR [edx+0x66f2bb8e]
  40985a:	leave  
  40985b:	fdivr  QWORD PTR [edx]
  40985d:	outs   dx,BYTE PTR ds:[esi]
  40985e:	out    0x1c,al
  409860:	cdq    
  409861:	(bad)  
  409863:	pop    esi
  409864:	idiv   DWORD PTR ds:0x12ac3658
  40986a:	or     ebx,DWORD PTR [ebp-0x329ed9e]
  409870:	iret   
  409871:	sbb    dl,BYTE PTR [edx-0x55c2f6b1]
  409877:	cmp    al,0xcf
  409879:	shr    ebp,cl
  40987b:	ins    DWORD PTR es:[edi],dx
  40987c:	mov    al,ds:0xd9e812b
  409881:	mov    ds:0x525b98b1,eax
  409886:	cmc    
  409887:	xchg   edi,eax
  409888:	inc    ebx
  409889:	add    ebp,ecx
  40988b:	jge    0x4098c5
  40988d:	xor    DWORD PTR [ebx+0x7d],0x7a
  409891:	and    esi,DWORD PTR [edi]
  409893:	mov    eax,0x657ec6d7
  409898:	push   es
  409899:	sbb    dl,BYTE PTR [ecx]
  40989b:	pop    edi
  40989c:	push   edi
  40989d:	fcom   DWORD PTR [ecx]
  40989f:	and    eax,0xba72f985
  4098a4:	stos   DWORD PTR es:[edi],eax
  4098a5:	dec    ebp
  4098a6:	jmp    DWORD PTR [eax-0x34]
  4098a9:	dec    eax
  4098aa:	jmp    0xfd66d2e3
  4098af:	ins    BYTE PTR es:[edi],dx
  4098b0:	test   al,0x6c
  4098b2:	push   edx
  4098b3:	xlat   BYTE PTR ds:[ebx]
  4098b4:	retf   
  4098b5:	lahf   
  4098b6:	jmp    0x2c46e9e0
  4098bb:	cmp    DWORD PTR [esi-0x19],esi
  4098be:	in     al,0x9d
  4098c0:	rcr    BYTE PTR ds:[ebx+0x10],1
  4098c4:	inc    ebp
  4098c5:	jae    0x4098f6
  4098c7:	fcom   DWORD PTR [ecx]
  4098c9:	inc    edi
  4098ca:	inc    ebx
  4098cb:	retf   
  4098cc:	das    
  4098cd:	stos   DWORD PTR es:[edi],eax
  4098ce:	jne    0x4098f7
  4098d0:	lock enter 0x553f,0xb
  4098d5:	fst    QWORD PTR [eax]
  4098d7:	jmp    0x530b:0x677b2e13
  4098de:	push   0x4f
  4098e0:	retf   
  4098e1:	mov    BYTE PTR [edi+0x6d],dh
  4098e4:	pop    esp
  4098e5:	jmp    0xdde9af2d
  4098ea:	push   0xffffffbf
  4098ec:	cmp    al,0x38
  4098ee:	and    edx,DWORD PTR [edx]
  4098f0:	push   ecx
  4098f1:	repz inc edx
  4098f3:	ins    DWORD PTR es:[edi],dx
  4098f4:	jno    0x40996b
  4098f6:	ja     0x409916
  4098f8:	push   es
  4098f9:	lea    ebx,[esi]
  4098fb:	xchg   BYTE PTR [edx-0x1f9e7509],bl
  409901:	ret    
  409902:	(bad)  
  409903:	outs   dx,DWORD PTR ds:[esi]
  409904:	xor    eax,0xa179ec5a
  409909:	or     ah,BYTE PTR [eax+0x22]
  40990c:	and    DWORD PTR [ebx+0x15e3ca3c],edx
  409912:	mov    eax,0xc0c3c8b4
  409917:	scas   al,BYTE PTR es:[edi]
  409918:	shr    DWORD PTR [edi],1
  40991a:	nop
  40991b:	mov    bh,BYTE PTR [eax+0x28084bd9]
  409921:	add    esi,0x280fa6d4
  409927:	(bad)  
  409928:	fld    DWORD PTR [ebx-0x9f5d0bb]
  40992e:	fild   DWORD PTR [eax-0x53]
  409931:	sbb    DWORD PTR [edx],edi
  409933:	adc    al,0x23
  409935:	aas    
  409936:	jno    0x40996e
  409938:	les    edx,FWORD PTR [eax+0x31]
  40993b:	add    edx,esi
  40993d:	mov    eax,0xc5c046d
  409942:	push   es
  409943:	and    ebp,DWORD PTR [ecx+0x228cb5f1]
  409949:	lea    edi,[ebp-0xb]
  40994c:	mov    dl,0x7a
  40994e:	xor    DWORD PTR [edx],edx
  409950:	cmp    bh,BYTE PTR [esi+0x13fcadfb]
  409956:	add    BYTE PTR [esi-0x84323d2],ah
  40995c:	cdq    
  40995d:	addr16 cld 
  40995f:	ja     0x409971
  409961:	es out 0xc9,eax
  409964:	mov    al,ds:0xf30061e1
  409969:	inc    eax
  40996a:	repz int3 
  40996c:	stos   BYTE PTR es:[edi],al
  40996d:	out    dx,eax
  40996e:	sub    BYTE PTR [ecx+0x6],al
  409971:	xor    ecx,DWORD PTR [edi+0x37b55688]
  409977:	mov    BYTE PTR cs:[ebx+0x5c],dh
  40997b:	adc    edi,edx
  40997d:	mov    bl,0xaf
  40997f:	fistp  WORD PTR [ebx-0x3e]
  409982:	nop
  409983:	sahf   
  409984:	hlt    
  409985:	adc    eax,0xeafaff9f
  40998a:	xor    bl,dh
  40998c:	dec    eax
  40998d:	int3   
  40998e:	cmp    DWORD PTR [ebx],0xe4a66610
  409994:	add    eax,DWORD PTR [ecx+0x56]
  409997:	jns    0x4099a7
  409999:	push   DWORD PTR [ecx+0x1be63452]
  40999f:	adc    esi,ecx
  4099a1:	push   edx
  4099a2:	xor    BYTE PTR [esi+ebp*8],0xb2
  4099a6:	lods   eax,DWORD PTR ds:[esi]
  4099a7:	into   
  4099a8:	aas    
  4099a9:	jmp    0x20c1:0xafb7633a
  4099b0:	mov    BYTE PTR [edx],al
  4099b2:	fcomi  st,st(5)
  4099b4:	jo     0x40993a
  4099b6:	push   ebx
  4099b7:	out    0x48,eax
  4099b9:	jnp    0x409995
  4099bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099bc:	sar    BYTE PTR [eax],0x58
  4099bf:	push   cs
  4099c0:	ret    
  4099c1:	idiv   BYTE PTR [ecx+0x1b]
  4099c4:	dec    ebp
  4099c5:	imul   edx,DWORD PTR [edx-0x60],0x3b
  4099c9:	data16 in al,0x98
  4099cc:	daa    
  4099cd:	and    al,0x20
  4099cf:	fld    st(6)
  4099d1:	mov    dl,0xb6
  4099d3:	cmp    ch,dl
  4099d5:	dec    ebx
  4099d6:	mov    esp,0x2ce01e06
  4099db:	fbstp  TBYTE PTR [edx+edi*2+0x25]
  4099df:	aad    0x4e
  4099e1:	xchg   edx,eax
  4099e2:	mov    esi,cs
  4099e4:	inc    edx
  4099e5:	mov    ds:0x841ad490,eax
  4099ea:	sub    BYTE PTR [esi+0x3a18e581],dl
  4099f0:	popf   
  4099f1:	outs   dx,BYTE PTR ds:[esi]
  4099f2:	jmp    0x409a6c
  4099f4:	ds mov al,0x58
  4099f7:	les    ebp,FWORD PTR [ecx-0x78870924]
  4099fd:	inc    edx
  4099fe:	and    al,0x1b
  409a00:	add    DWORD PTR [ecx],esi
  409a02:	adc    edi,DWORD PTR [edx]
  409a04:	arpl   WORD PTR ds:0xdf623585,si
  409a0a:	cmp    BYTE PTR [esi+0x24],ch
  409a0d:	jle    0x409a14
  409a0f:	ins    DWORD PTR es:[edi],dx
  409a10:	mov    dl,0x79
  409a12:	mov    edx,0x6f76532f
  409a17:	cmp    ch,BYTE PTR [ebp-0x43]
  409a1a:	inc    ecx
  409a1b:	mov    cl,0x36
  409a1d:	fdivp  st(7),st
  409a1f:	mov    WORD PTR [edi+0x18],fs
  409a22:	add    DWORD PTR es:[edi-0x5daf7c4d],ebp
  409a29:	test   DWORD PTR [ebx],esi
  409a2b:	div    BYTE PTR [eax-0x561eee88]
  409a31:	xor    ecx,0xffffffa4
  409a34:	push   edi
  409a35:	je     0x4099ef
  409a37:	add    edx,ebx
  409a39:	test   BYTE PTR [esi-0x68],bh
  409a3c:	or     edi,DWORD PTR ds:0x95e41c81
  409a42:	mov    bh,0x32
  409a44:	(bad)  
  409a46:	or     BYTE PTR [edi+eax*2+0x7f11a2e0],dl
  409a4d:	or     eax,0xd0a3dda
  409a52:	imul   ebp,DWORD PTR [ebx],0xffffffa2
  409a55:	xchg   ebx,eax
  409a56:	popf   
  409a57:	cmp    al,0x8b
  409a59:	jb     0x409ab7
  409a5b:	pop    es
  409a5c:	mov    bh,0x4a
  409a5e:	jne    0x409ad3
  409a60:	dec    edx
  409a61:	sub    ebp,DWORD PTR [esi*1-0x1e951914]
  409a68:	cmp    DWORD PTR [ebx],eax
  409a6a:	out    dx,eax
  409a6b:	out    0x93,al
  409a6d:	inc    esi
  409a6e:	fistp  DWORD PTR [ebp-0x62]
  409a71:	scas   eax,DWORD PTR es:[edi]
  409a72:	adc    al,0xa1
  409a74:	(bad)  
  409a75:	pop    ebp
  409a76:	push   ecx
  409a77:	mov    fs,WORD PTR [ebp-0x3c]
  409a7a:	inc    eax
  409a7b:	push   ebp
  409a7c:	out    0xd0,eax
  409a7e:	add    eax,0x68e732d7
  409a83:	mov    eax,0xc8bd3054
  409a88:	inc    edi
  409a89:	out    0x8e,al
  409a8b:	sub    al,0x3e
  409a8d:	push   0xffffffe5
  409a8f:	sbb    eax,0xd86ca479
  409a94:	pop    ebx
  409a95:	adc    esi,DWORD PTR es:[edi+eiz*2]
  409a99:	cmp    DWORD PTR cs:[edi+0x3ba128a9],esi
  409aa0:	push   0x41
  409aa2:	dec    esp
  409aa3:	pop    ss
  409aa4:	push   edx
  409aa5:	dec    esp
  409aa6:	hlt    
  409aa7:	or     al,0xed
  409aa9:	ja     0x409a96
  409aab:	xchg   ecx,eax
  409aac:	adc    eax,0xf8e30b5b
  409ab1:	adc    eax,0x2d86d19d
  409ab6:	inc    ebp
  409ab7:	aaa    
  409ab8:	leave  
  409ab9:	push   ds
  409aba:	enter  0x8f89,0x2d
  409abe:	dec    edx
  409abf:	jns    0x409b33
  409ac1:	ret    
  409ac2:	mov    ebp,0x27c0886c
  409ac7:	ds js  0x409ac2
  409aca:	xor    esp,0xffffffb6
  409acd:	jmp    0x409b37
  409acf:	stc    
  409ad0:	rcr    BYTE PTR [edx+0x67],1
  409ad3:	jae    0x409add
  409ad5:	cmp    DWORD PTR [esi+0x1b],0x8e466716
  409adc:	ds jo  0x409af7
  409adf:	adc    dh,BYTE PTR [edi+0x3a]
  409ae2:	fild   WORD PTR [ecx]
  409ae4:	cwde   
  409ae5:	mov    dl,0xff
  409ae7:	sbb    BYTE PTR [ecx+0x23],0x3
  409aeb:	mov    bl,0xce
  409aed:	lods   al,BYTE PTR ds:[esi]
  409aee:	sbb    DWORD PTR [eax+0x3f950830],ebp
  409af4:	imul   ebp,edi,0x47dd2c77
  409afa:	shr    BYTE PTR [edx+0xcff4b7e],0xfc
  409b01:	xor    esp,DWORD PTR [ebx-0x14]
  409b04:	scas   al,BYTE PTR es:[edi]
  409b05:	aad    0x64
  409b07:	test   eax,0x791c7521
  409b0c:	add    eax,0xe7c06b70
  409b11:	jp     0x409b1a
  409b13:	shr    dh,cl
  409b15:	jae    0x409b8d
  409b17:	inc    ebp
  409b18:	data16 gs int 0x28
  409b1c:	outs   dx,DWORD PTR ds:[esi]
  409b1d:	pusha  
  409b1e:	dec    edi
  409b1f:	xchg   esp,eax
  409b20:	pop    ebx
  409b21:	fcmove st,st(3)
  409b23:	loop   0x409afc
  409b25:	xchg   esp,eax
  409b26:	icebp  
  409b27:	dec    esi
  409b28:	fisttp QWORD PTR ss:[ebx+0x19f55d15]
  409b2f:	jmp    0xd0689162
  409b34:	mov    WORD PTR [ebp+0x29],cs
  409b37:	sub    dh,BYTE PTR [ebx+0x71]
  409b3a:	ja     0x409bb1
  409b3c:	mov    ch,0xc2
  409b3e:	push   ebp
  409b3f:	mov    esp,0xca426af5
  409b44:	mov    ebp,0x9ec119d3
  409b49:	push   eax
  409b4a:	cmp    DWORD PTR [eax-0xe3742f3],eax
  409b50:	xor    eax,0x2e5fa3bf
  409b55:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409b57:	inc    edi
  409b58:	sahf   
  409b59:	(bad)  
  409b5a:	ror    BYTE PTR [ebx],0x7f
  409b5d:	and    al,0x65
  409b5f:	pop    esp
  409b60:	jmp    0xda64:0x18a8d18c
  409b67:	lods   eax,DWORD PTR ds:[esi]
  409b68:	stos   DWORD PTR es:[edi],eax
  409b69:	retf   0x7ffe
  409b6c:	sbb    al,BYTE PTR [eax]
  409b6e:	out    dx,eax
  409b6f:	xlat   BYTE PTR ds:[ebx]
  409b70:	dec    esi
  409b71:	(bad)  
  409b72:	jb     0x409b5a
  409b74:	into   
  409b75:	xor    eax,0x12444c24
  409b7a:	daa    
  409b7b:	into   
  409b7c:	(bad)  
  409b7d:	push   esp
  409b7e:	clc    
  409b7f:	shl    ecx,1
  409b81:	or     BYTE PTR ds:0x564cd593,dh
  409b87:	mov    ebx,0x516bccd6
  409b8c:	les    ecx,FWORD PTR [ecx-0x5e]
  409b8f:	inc    eax
  409b90:	test   al,0x2a
  409b92:	xor    bh,BYTE PTR [esi-0x52935b76]
  409b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b99:	ucomiss xmm7,DWORD PTR [ecx-0x486e7587]
  409ba0:	ret    
  409ba1:	mov    ecx,fs
  409ba3:	sbb    al,BYTE PTR [esi+edx*8+0x6]
  409ba7:	stos   BYTE PTR es:[edi],al
  409ba8:	mov    edx,fs
  409baa:	addr16 add al,0xf6
  409bad:	jmp    0x409b52
  409baf:	inc    edi
  409bb0:	xor    DWORD PTR [ebp-0x18],0x63
  409bb4:	inc    edi
  409bb5:	je     0x409c33
  409bb7:	push   0x1832cb59
  409bbc:	jns    0x409b84
  409bbe:	inc    BYTE PTR [eax-0x44fd7b55]
  409bc4:	stos   DWORD PTR es:[edi],eax
  409bc5:	enter  0x1276,0x63
  409bc9:	fcmovnb st,st(5)
  409bcb:	js     0x409bf7
  409bcd:	out    dx,eax
  409bce:	jle    0x409c10
  409bd0:	ins    DWORD PTR es:[edi],dx
  409bd1:	xchg   ebp,eax
  409bd2:	cmp    eax,0xdd1ccefd
  409bd7:	arpl   WORD PTR [edx],di
  409bd9:	push   cs
  409bda:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409bdc:	fild   WORD PTR [ebx-0x6b]
  409bdf:	mov    ch,0x9d
  409be1:	pop    ecx
  409be2:	cld    
  409be3:	dec    ebx
  409be4:	pop    ebx
  409be5:	nop
  409be6:	and    bh,bh
  409be8:	cmp    al,0xc5
  409bea:	dec    ebx
  409beb:	das    
  409bec:	std    
  409bed:	fcomp  DWORD PTR [esi-0x13e8622b]
  409bf3:	(bad)  
  409bf4:	scas   eax,DWORD PTR es:[edi]
  409bf5:	or     al,0x44
  409bf7:	ss in  al,dx
  409bf9:	jae    0x409bbd
  409bfb:	push   ebx
  409bfc:	xor    eax,0x65c6abb
  409c01:	hlt    
  409c02:	ins    DWORD PTR es:[edi],dx
  409c03:	xor    al,0x5
  409c05:	test   al,0x5f
  409c07:	mov    edi,0x64a5b3c1
  409c0c:	and    eax,0xb02bd7b9
  409c11:	fst    QWORD PTR [ecx+0x23fde846]
  409c17:	arpl   WORD PTR [edi+0x4a52a1e1],bx
  409c1d:	arpl   WORD PTR [eax-0x37],sp
  409c20:	mov    edi,0x75e02e20
  409c25:	push   es
  409c26:	mov    ah,0x9c
  409c28:	(bad)  
  409c29:	mov    ds:0xe8ea68ea,al
  409c2e:	xor    BYTE PTR [esi+0x1df5396b],bl
  409c34:	cdq    
  409c35:	lock mov dh,0x36
  409c38:	dec    edx
  409c39:	es repnz cmp al,0xb4
  409c3d:	inc    ebx
  409c3e:	out    0x6f,eax
  409c40:	pop    edx
  409c41:	mov    ah,BYTE PTR [ebx]
  409c43:	mov    dl,0x74
  409c45:	sub    ebp,DWORD PTR [edx+0x25c78d9b]
  409c4b:	and    dl,bl
  409c4d:	cmp    al,0xbf
  409c4f:	stos   BYTE PTR es:[edi],al
  409c50:	test   al,0x6f
  409c52:	push   eax
  409c53:	aaa    
  409c54:	sub    DWORD PTR [ebx+0x566e2ca6],esp
  409c5a:	mov    eax,0x8186e588
  409c5f:	cmc    
  409c60:	sbb    DWORD PTR [ebx-0x30bb9777],esi
  409c66:	xchg   edi,eax
  409c67:	std    
  409c68:	add    esp,ebp
  409c6a:	adc    DWORD PTR [edi-0x68],ebp
  409c6d:	gs (bad) 
  409c6f:	jmp    0x6255:0xea061fb1
  409c76:	ret    0x9337
  409c79:	jl     0x409c5c
  409c7b:	in     eax,0x3b
  409c7d:	push   esp
  409c7e:	mov    BYTE PTR [eax],ch
  409c80:	shl    bl,1
  409c82:	out    dx,al
  409c83:	mov    edi,0x5310aab
  409c88:	pusha  
  409c89:	mov    ds:0x9423a69c,eax
  409c8e:	in     eax,0xca
  409c90:	sbb    dl,BYTE PTR [ecx+0x29]
  409c93:	cld    
  409c94:	leave  
  409c95:	cmc    
  409c96:	adc    ah,ah
  409c98:	mov    WORD PTR [ecx-0x37],es
  409c9b:	inc    ecx
  409c9c:	imul   al
  409c9e:	les    edx,FWORD PTR ds:0x2a79612c
  409ca4:	rcl    BYTE PTR [ecx],1
  409ca6:	fnstsw WORD PTR [edi]
  409ca8:	lods   al,BYTE PTR ds:[esi]
  409ca9:	or     ebp,ebp
  409cab:	sbb    esi,DWORD PTR [eax+0x3d]
  409cae:	rcr    edi,0xd2
  409cb1:	ja     0x409d1e
  409cb3:	jmp    0xbc57232
  409cb8:	inc    esi
  409cb9:	packuswb mm7,mm5
  409cbc:	push   0xab2888e4
  409cc1:	mov    bl,0x53
  409cc3:	inc    eax
  409cc4:	jge    0x409d0d
  409cc6:	mov    esi,0x161b7d74
  409ccb:	mov    ds:0xe5c87c61,eax
  409cd0:	leave  
  409cd1:	push   ecx
  409cd2:	gs sbb eax,0xdd5e6047
  409cd8:	pushf  
  409cd9:	xchg   ebx,eax
  409cda:	xchg   esi,eax
  409cdb:	push   ss
  409cdc:	sar    BYTE PTR ds:0x536eb8eb,1
  409ce2:	xchg   esp,eax
  409ce3:	inc    edi
  409ce4:	cmp    eax,0x730e2be4
  409ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cea:	loopne 0x409caa
  409cec:	jns    0x409cd1
  409cee:	out    dx,al
  409cef:	add    BYTE PTR [edx+0x40],dl
  409cf2:	jne    0x409d05
  409cf4:	inc    esi
  409cf5:	sbb    BYTE PTR [edi],ah
  409cf7:	sbb    DWORD PTR [esi+0x65],ebx
  409cfa:	or     BYTE PTR [ebp+0x409ee54a],dl
  409d00:	daa    
  409d01:	ss stos DWORD PTR es:[edi],eax
  409d03:	fdivr  QWORD PTR [ebp-0x29]
  409d06:	lds    edx,FWORD PTR [ecx-0x7a99c1d9]
  409d0c:	mov    eax,ds:0xa4effb5a
  409d11:	adc    ch,BYTE PTR [esi-0x40]
  409d14:	sub    al,0xc1
  409d16:	loopne 0x409d1b
  409d18:	fs adc eax,0xf95853e3
  409d1e:	or     edi,edx
  409d20:	xor    DWORD PTR [ebx+edi*4],ecx
  409d23:	sahf   
  409d24:	and    esp,esp
  409d26:	mov    edi,DWORD PTR [eax]
  409d28:	shl    dl,0xaa
  409d2b:	cld    
  409d2c:	push   ebx
  409d2d:	leave  
  409d2e:	mov    eax,0x443d1a91
  409d33:	(bad)  [edx]
  409d35:	sahf   
  409d36:	xor    esp,DWORD PTR [edx+0x37a2da5e]
  409d3c:	sbb    eax,0x4fdb3621
  409d41:	or     eax,0x49ef0fc
  409d47:	stc    
  409d48:	dec    eax
  409d49:	push   ebx
  409d4a:	mov    ?,WORD PTR ds:0x985f072a
  409d50:	pop    edx
  409d51:	int3   
  409d52:	adc    al,0xfa
  409d54:	ret    0x801e
  409d57:	or     DWORD PTR [ebx],ebx
  409d59:	pop    es
  409d5a:	out    0xe4,eax
  409d5c:	pop    ss
  409d5d:	clc    
  409d5e:	sub    dh,0xc3
  409d61:	push   ds
  409d62:	xor    eax,0xe32d0424
  409d67:	add    bh,BYTE PTR [edi+0x5d8dbb41]
  409d6d:	int3   
  409d6e:	xor    dl,BYTE PTR [ecx-0x39159805]
  409d74:	(bad)  
  409d75:	popf   
  409d76:	shl    BYTE PTR [edx+0x56],cl
  409d79:	lods   al,BYTE PTR ds:[esi]
  409d7a:	clc    
  409d7b:	dec    ecx
  409d7c:	imul   ebx,DWORD PTR [eax-0x57],0x45
  409d80:	shr    BYTE PTR [ebx+0x64603dd7],0x31
  409d87:	pop    ebp
  409d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d89:	inc    DWORD PTR [eax]
  409d8b:	pop    esi
  409d8c:	test   BYTE PTR [edx],0x73
  409d8f:	xchg   edx,eax
  409d90:	sbb    esp,DWORD PTR [ebp-0x37]
  409d93:	cmp    al,0x72
  409d95:	out    0xb9,al
  409d97:	les    esp,FWORD PTR [edi]
  409d99:	aam    0x24
  409d9b:	or     ecx,DWORD PTR [eax-0x3f]
  409d9e:	stos   BYTE PTR es:[edi],al
  409d9f:	rol    BYTE PTR [eax],0x3d
  409da2:	and    eax,0x52911f7a
  409da7:	sbb    cl,BYTE PTR [edx+0x6]
  409daa:	and    eax,0x85fb6095
  409daf:	in     al,dx
  409db0:	scas   eax,DWORD PTR es:[edi]
  409db1:	dec    esp
  409db2:	xchg   edi,eax
  409db3:	inc    ebp
  409db4:	xor    eax,0x3aae5c11
  409db9:	pop    esi
  409dba:	jne    0x409d64
  409dbc:	pushf  
  409dbd:	dec    ebp
  409dbe:	mov    BYTE PTR [edx-0x36],dl
  409dc1:	lds    ebx,FWORD PTR [ecx-0x63906ab0]
  409dc7:	mov    esp,ebp
  409dc9:	jb     0x409e1f
  409dcb:	or     dh,BYTE PTR [ebp-0x5eeeb820]
  409dd1:	mov    dl,0x8a
  409dd3:	or     eax,0x9f641e4f
  409dd8:	test   al,0x82
  409ddb:	push   es
  409ddc:	mov    edx,0x60b264
  409de1:	push   edx
  409de2:	xchg   esi,eax
  409de3:	add    DWORD PTR [ecx+0x17],edi
  409de6:	inc    edi
  409de7:	adc    al,0xb6
  409de9:	sbb    DWORD PTR [eax-0x740d293c],esp
  409def:	sub    DWORD PTR [ebx],ebp
  409df1:	ror    DWORD PTR [ecx+0x4d81fc45],0xfc
  409df8:	mov    esp,0x8bf89c85
  409dfd:	inc    ebp
  409dfe:	hlt    
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	sbb    eax,0x2ed80b70
  40a2ff:	add    BYTE PTR [edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	test   BYTE PTR [edx+0x70a97859],al
  40a30c:	dec    edi
  40a30d:	ret    0xec90
  40a310:	pop    eax
  40a311:	das    
  40a312:	ins    DWORD PTR es:[edi],dx
  40a313:	sub    BYTE PTR [esi],bh
  40a315:	test   al,0x95
  40a317:	jecxz  0x40a307
  40a319:	aas    
  40a31a:	out    0x25,eax
  40a31c:	xor    ah,0x6f
  40a31f:	xchg   ebx,eax
  40a320:	sub    bl,dl
  40a322:	jle    0x40a38c
  40a324:	lods   al,BYTE PTR es:[esi]
  40a326:	sub    eax,esp
  40a328:	cwde   
  40a329:	xor    ah,0xf7
  40a32c:	add    DWORD PTR [edi+0x10614084],edi
  40a332:	push   ds
  40a333:	arpl   WORD PTR [ebx],di
  40a335:	jns    0x40a3b5
  40a337:	(bad)  
  40a338:	jmp    0xe9ca3014
  40a33d:	sbb    edx,DWORD PTR [edx+0x10]
  40a340:	xor    al,0x5e
  40a342:	ret    0x1ec
  40a345:	xor    ebx,0x11de61e5
  40a34b:	mov    ch,0xe2
  40a34d:	int3   
  40a34e:	inc    eax
  40a34f:	push   cs
  40a350:	mov    dh,0xce
  40a352:	test   eax,0xf13d5153
  40a357:	lds    ebp,FWORD PTR ds:0xe3b2ad00
  40a35d:	test   BYTE PTR [edi+0x2dfb5a7d],0x2a
  40a364:	fmul   DWORD PTR [ebp-0x5b0fda9b]
  40a36a:	mov    ch,BYTE PTR [ecx-0x39]
  40a36d:	jp     0x40a377
  40a36f:	int3   
  40a370:	sbb    al,0xa2
  40a372:	pusha  
  40a373:	pop    es
  40a374:	cmp    al,0x6d
  40a376:	std    
  40a377:	cwde   
  40a378:	xchg   esp,eax
  40a379:	or     dl,BYTE PTR [eax-0x5adfcc12]
  40a37f:	(bad)  
  40a380:	cmc    
  40a381:	test   BYTE PTR [esi+0x3f34d0fb],cl
  40a387:	mov    ch,0xae
  40a389:	sbb    BYTE PTR [ebx-0x61],al
  40a38c:	nop
  40a38d:	and    al,dl
  40a38f:	fld    DWORD PTR [esi-0x693b7234]
  40a395:	ins    DWORD PTR es:[edi],dx
  40a396:	push   ds
  40a397:	push   edx
  40a398:	loop   0x40a336
  40a39a:	bound  ecx,QWORD PTR [edx+0x53]
  40a39d:	xor    BYTE PTR [ebp+0x789e3ecd],dl
  40a3a3:	or     ebx,ebp
  40a3a5:	mov    bh,0x32
  40a3a7:	mov    bh,0xd9
  40a3a9:	lsl    ebp,WORD PTR [edx-0x70]
  40a3ad:	push   0x2c
  40a3af:	dec    edx
  40a3b0:	std    
  40a3b1:	push   ebx
  40a3b2:	mov    al,ds:0x9e1a3ab2
  40a3b7:	mov    ds:0x4c91937c,ax
  40a3bd:	cmp    BYTE PTR [ecx-0x2d],ah
  40a3c0:	mov    edx,0xed65a385
  40a3c5:	jmp    0x40a3ed
  40a3c7:	pop    ecx
  40a3c8:	add    al,bl
  40a3ca:	cli    
  40a3cb:	das    
  40a3cc:	xchg   ebp,eax
  40a3cd:	and    BYTE PTR [eax+0x19],bh
  40a3d0:	dec    ecx
  40a3d1:	call   0x3d7d:0x55043716
  40a3d8:	mov    bl,0x9
  40a3da:	shl    BYTE PTR [ecx+eiz*8+0xfca7b6e],cl
  40a3e1:	call   0x912b:0xd02c522f
  40a3e8:	inc    BYTE PTR [edi+0x70]
  40a3eb:	dec    ebx
  40a3ec:	repnz les ebx,FWORD PTR [ebx]
  40a3ef:	in     eax,dx
  40a3f0:	mov    edi,0xc0f40b5c
  40a3f5:	ffreep st(0)
  40a3f7:	mov    al,0x13
  40a3f9:	add    esi,DWORD PTR [edx]
  40a3fb:	lock mov ebp,0xfe269805
  40a401:	nop
  40a402:	and    BYTE PTR [esi],al
  40a404:	pop    edi
  40a405:	cmp    BYTE PTR [esp+esi*8+0x77],cl
  40a409:	dec    eax
  40a40a:	add    si,WORD PTR [eax-0x5acce203]
  40a411:	sbb    DWORD PTR ds:0x977b0508,eax
  40a417:	out    0xf1,al
  40a419:	push   0xffffffd8
  40a41b:	pop    ecx
  40a41c:	(bad)  
  40a41d:	mov    ecx,0x5bddf3d5
  40a422:	push   es
  40a423:	mov    ds:0xa4adc389,al
  40a428:	fwait
  40a429:	lea    esi,[ecx+0x7c945d81]
  40a42f:	ja     0x40a3e6
  40a431:	pop    ebx
  40a432:	pop    esi
  40a433:	push   ebx
  40a434:	rol    BYTE PTR [edx],0xd0
  40a437:	xor    DWORD PTR [edx+0x45],ecx
  40a43a:	(bad)  
  40a43b:	cmp    BYTE PTR [ebx+0x18817ff9],bl
  40a441:	bound  esi,QWORD PTR [esi+0x7cfdb0bc]
  40a447:	mov    dl,0xf6
  40a449:	arpl   WORD PTR [esi-0x2e],bp
  40a44c:	test   al,0xaf
  40a44e:	in     eax,0x14
  40a450:	loope  0x40a3da
  40a452:	ret    0x61bd
  40a455:	push   0x72b22355
  40a45a:	inc    eax
  40a45b:	scas   al,BYTE PTR es:[edi]
  40a45c:	inc    esi
  40a45d:	fdiv   st,st(3)
  40a45f:	push   cs
  40a460:	and    eax,0x1fac005e
  40a465:	push   0x7b
  40a467:	sbb    edx,DWORD PTR [ecx-0x23]
  40a46a:	push   0xa9f7ef8
  40a46f:	push   esi
  40a470:	ins    DWORD PTR es:[edi],dx
  40a471:	dec    ebp
  40a472:	mov    cl,0x90
  40a474:	jbe    0x40a4e3
  40a476:	je     0x40a4d0
  40a478:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a47a:	je     0x40a447
  40a47c:	fwait
  40a47d:	jnp    0x40a438
  40a47f:	push   0x5e2e1105
  40a484:	ret    0xce84
  40a487:	lock sbb ebx,DWORD PTR [esi-0x68]
  40a48b:	adc    edi,DWORD PTR [ecx-0x7e7dec8]
  40a491:	sbb    DWORD PTR [edi-0x5ac8c8b6],0x4520213a
  40a49b:	fisttp DWORD PTR [ebp-0x3605e01f]
  40a4a1:	jge    0x40a46b
  40a4a3:	and    BYTE PTR [ecx+0x6c2e59a6],bl
  40a4a9:	call   0xd526:0x97cc965d
  40a4b0:	xchg   edi,eax
  40a4b1:	scas   al,BYTE PTR es:[edi]
  40a4b2:	and    ebp,DWORD PTR [eax-0x3f]
  40a4b5:	adc    eax,0x2101e956
  40a4ba:	adc    eax,0xfa3c781e
  40a4bf:	sbb    DWORD PTR [ebx+0x78de4b21],edi
  40a4c5:	mov    DWORD PTR [eax+edx*4],eax
  40a4c8:	adc    al,0x31
  40a4ca:	int3   
  40a4cb:	sub    BYTE PTR [esi-0x67f09601],al
  40a4d1:	(bad)  
  40a4d2:	sub    BYTE PTR [edi-0x69],al
  40a4d5:	shl    DWORD PTR [edi-0x33],0x5d
  40a4d9:	out    dx,eax
  40a4da:	xchg   ebx,eax
  40a4db:	mov    esp,0x4823efd0
  40a4e0:	gs enter 0x17b9,0xf3
  40a4e5:	mov    ch,0x8b
  40a4e7:	or     eax,0x36a57530
  40a4ec:	dec    ecx
  40a4ed:	fdiv   QWORD PTR [edi]
  40a4ef:	sbb    bl,BYTE PTR [ebp+ecx*1-0x6e6314e8]
  40a4f6:	mov    ebp,DWORD PTR cs:[edx-0x7037ea0f]
  40a4fd:	cmp    edi,DWORD PTR [ebp-0x5dc38d44]
  40a503:	arpl   WORD PTR [ebx],dx
  40a505:	cmp    eax,DWORD PTR [esp+esi*2]
  40a508:	and    dl,BYTE PTR [esp+ebx*1]
  40a50b:	retf   
  40a50c:	dec    esp
  40a50d:	mov    DWORD PTR [edi+edi*2-0x42],edx
  40a511:	xchg   ebx,eax
  40a512:	inc    ebp
  40a513:	imul   ecx,DWORD PTR [ebp-0x5],0x48
  40a517:	lock arpl bp,dx
  40a51a:	(bad)  
  40a51b:	push   0x927b0b84
  40a520:	jo     0x40a4e6
  40a522:	or     edx,ecx
  40a524:	xor    al,0xb8
  40a526:	mov    al,dl
  40a528:	lea    esi,[esi-0x4ae9ed5a]
  40a52e:	mov    DWORD PTR [ecx+edi*1-0x37],eax
  40a532:	push   esi
  40a533:	pop    ss
  40a534:	mov    ds:0xf3e3a963,eax
  40a539:	xchg   esi,eax
  40a53a:	adc    ecx,DWORD PTR [eax]
  40a53c:	pop    edi
  40a53d:	mov    edi,0xb59b267
  40a542:	fsub   st,st(1)
  40a544:	push   ds
  40a545:	push   edi
  40a546:	fs out dx,eax
  40a548:	sbb    esp,DWORD PTR [edi-0x28]
  40a54b:	mov    esi,0xebf86fde
  40a550:	push   ss
  40a551:	daa    
  40a552:	ror    DWORD PTR [eax],cl
  40a554:	fstp   QWORD PTR [edx]
  40a556:	sbb    eax,DWORD PTR [esi+ebx*8+0x32]
  40a55a:	push   0x2f5ff1a2
  40a55f:	imul   edx,ecx,0xffffff95
  40a562:	jne    0x40a4ec
  40a564:	jg     0x40a528
  40a566:	in     eax,dx
  40a567:	out    dx,al
  40a568:	fwait
  40a569:	pop    ss
  40a56a:	aad    0x37
  40a56c:	mov    bh,0x94
  40a56e:	loope  0x40a555
  40a570:	jae    0x40a516
  40a572:	cmc    
  40a573:	(bad)  
  40a574:	mov    edi,0xd8dd1c53
  40a579:	and    ebx,DWORD PTR ds:0xa30d53a7
  40a57f:	dec    ebx
  40a580:	sbb    BYTE PTR [edi-0x42],dl
  40a583:	mov    esp,0x15ff22ea
  40a588:	and    al,al
  40a58a:	adc    al,0xad
  40a58c:	inc    eax
  40a58d:	inc    edx
  40a58e:	test   DWORD PTR ds:0x5dc7db0f,0x66bfe81e
  40a598:	stos   BYTE PTR es:[edi],al
  40a599:	and    al,0x69
  40a59b:	mov    edi,0x812ee622
  40a5a0:	jae    0x40a555
  40a5a2:	inc    esi
  40a5a3:	cmp    ecx,esp
  40a5a5:	cmp    al,0x70
  40a5a7:	jb     0x40a57e
  40a5a9:	inc    ebp
  40a5aa:	repnz xchg ecx,eax
  40a5ac:	aad    0x41
  40a5ae:	inc    esp
  40a5af:	mov    al,0xcb
  40a5b1:	(bad)  
  40a5b2:	jne    0x40a57b
  40a5b4:	in     al,dx
  40a5b5:	adc    BYTE PTR [eax-0x9859443],0xe9
  40a5bc:	es loope 0x40a63b
  40a5bf:	mov    ss,WORD PTR [ebp+0x28e958a8]
  40a5c5:	shl    ebx,0x7e
  40a5c8:	dec    edi
  40a5c9:	sbb    BYTE PTR [esi+0x7f],dl
  40a5cc:	aad    0xd0
  40a5ce:	daa    
  40a5cf:	nop
  40a5d0:	pushf  
  40a5d1:	mov    dl,0xef
  40a5d3:	cmp    al,0x6f
  40a5d5:	sub    dl,ch
  40a5d7:	ret    
  40a5d8:	out    0xf6,eax
  40a5da:	ret    
  40a5db:	mov    DWORD PTR [esi],esi
  40a5dd:	pop    ds
  40a5de:	fiadd  WORD PTR [edi+0x5add11e5]
  40a5e4:	jmp    0x40a61e
  40a5e6:	sub    dh,BYTE PTR [ebp-0x70b9ae9e]
  40a5ec:	and    BYTE PTR [esp+esi*2],al
  40a5ef:	mov    ch,0x1b
  40a5f1:	(bad)  
  40a5f2:	mov    ebx,0xcbdf6363
  40a5f7:	mov    ah,0x69
  40a5f9:	(bad)  
  40a5fa:	hlt    
  40a5fb:	in     eax,dx
  40a5fc:	add    al,0xb2
  40a5fe:	jmp    0x40a58e
  40a600:	add    BYTE PTR [ecx+edi*2-0x7211dc2f],cl
  40a607:	pop    ebp
  40a608:	retf   
  40a609:	mov    ch,0x4e
  40a60b:	div    bh
  40a60d:	aam    0x36
  40a60f:	cdq    
  40a610:	mov    BYTE PTR [ebp+edi*4-0x2f],ah
  40a614:	mov    esi,0x3490b80f
  40a619:	and    DWORD PTR [eax-0x43],ebx
  40a61c:	mov    ds:0xb2e5545,eax
  40a621:	in     eax,0xa0
  40a623:	ror    DWORD PTR [ecx],1
  40a625:	bnd jno 0x40a639
  40a628:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a62a:	aas    
  40a62b:	dec    DWORD PTR [ebp-0x22]
  40a62e:	mov    dl,BYTE PTR [eax-0x144c9cc9]
  40a634:	jge    0x40a657
  40a636:	or     BYTE PTR [edx],cl
  40a638:	xchg   DWORD PTR [ebx],esp
  40a63a:	mov    ds:0xfe7945c0,eax
  40a63f:	inc    eax
  40a640:	adc    DWORD PTR [edx-0x23fa769b],ebp
  40a646:	out    dx,eax
  40a647:	mov    al,0x93
  40a649:	mov    ?,WORD PTR [ebp-0x6a6c594b]
  40a64f:	mov    cl,0x98
  40a651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a652:	inc    edi
  40a653:	gs dec edi
  40a655:	inc    esp
  40a656:	add    DWORD PTR [ecx],edi
  40a658:	xchg   ecx,eax
  40a659:	add    edx,DWORD PTR [eax+0x20]
  40a65c:	loop   0x40a6c6
  40a65e:	in     eax,dx
  40a65f:	or     al,0xb1
  40a661:	aas    
  40a662:	and    esi,esi
  40a664:	pop    edi
  40a665:	mov    dh,0x6e
  40a667:	add    eax,0x2e0b6d3b
  40a66c:	out    0x58,eax
  40a66e:	xor    BYTE PTR [eax+0x40d4c451],dh
  40a674:	mov    eax,0x5465e7bc
  40a679:	popf   
  40a67a:	out    dx,al
  40a67b:	out    dx,eax
  40a67c:	pop    es
  40a67d:	xchg   ecx,eax
  40a67e:	mov    cl,0x3e
  40a680:	xor    al,0x7
  40a682:	inc    esp
  40a683:	retf   0x85e2
  40a686:	cmp    ebp,DWORD PTR [edi+0x76]
  40a689:	stos   BYTE PTR es:[edi],al
  40a68a:	mov    dh,0x7d
  40a68c:	ins    DWORD PTR es:[edi],dx
  40a68d:	loopne 0x40a656
  40a68f:	sub    cl,dh
  40a691:	out    dx,al
  40a692:	mov    ebp,0xcdff5006
  40a697:	fsubr  st,st(6)
  40a699:	jl     0x40a6a9
  40a69b:	jns    0x40a689
  40a69d:	push   edi
  40a69e:	pop    ebx
  40a69f:	xchg   ebp,eax
  40a6a0:	(bad)  
  40a6a1:	adc    al,0xab
  40a6a3:	and    al,0xda
  40a6a5:	enter  0x702a,0x59
  40a6a9:	jmp    0xdaa203d1
  40a6ae:	loope  0x40a633
  40a6b0:	lahf   
  40a6b1:	adc    dl,BYTE PTR ds:0xb18ea132
  40a6b7:	cs xchg ebx,eax
  40a6b9:	scas   eax,DWORD PTR es:[edi]
  40a6ba:	push   ebx
  40a6bb:	es jg  0x40a712
  40a6be:	ja     0x40a645
  40a6c0:	arpl   WORD PTR ds:0x1118aaca,di
  40a6c6:	add    al,0xba
  40a6c8:	or     BYTE PTR [ebx],bh
  40a6ca:	xchg   esp,eax
  40a6cb:	cmp    eax,0xc4afcc16
  40a6d0:	in     eax,0x54
  40a6d2:	setb   BYTE PTR ds:0xe5f7e0b0
  40a6d9:	fistp  WORD PTR [edi-0x62c30e62]
  40a6df:	mov    DWORD PTR [ecx],ebp
  40a6e1:	gs jp  0x40a69e
  40a6e4:	fisttp QWORD PTR ds:0x9ca3b95
  40a6ea:	(bad)  
  40a6ec:	retf   
  40a6ed:	ja     0x40a726
  40a6ef:	int    0x30
  40a6f1:	or     BYTE PTR [ebx-0x3a2a9ff7],dh
  40a6f7:	(bad)  
  40a6f8:	inc    ebx
  40a6f9:	or     dl,dl
  40a6fb:	cmp    ebx,DWORD PTR [ecx+0x2a]
  40a6fe:	test   ah,bl
  40a700:	push   ebp
  40a701:	push   esp
  40a702:	gs and eax,0xeb2d3f3c
  40a708:	and    eax,DWORD PTR [eax-0x55]
  40a70b:	xor    al,0x2b
  40a70d:	and    ebp,esp
  40a70f:	xchg   DWORD PTR [edx-0x5889e21d],ebx
  40a715:	loopne 0x40a766
  40a717:	jnp    0x40a6d7
  40a719:	xchg   esi,eax
  40a71a:	and    al,0x9e
  40a71c:	sahf   
  40a71d:	loop   0x40a700
  40a71f:	push   eax
  40a720:	hlt    
  40a721:	sti    
  40a722:	push   0xffffff9e
  40a724:	jnp    0x40a776
  40a726:	loopne 0x40a716
  40a728:	mov    edx,0x963d847b
  40a72d:	imul   esp,DWORD PTR [eax],0x6e
  40a730:	jo     0x40a6fc
  40a732:	sub    DWORD PTR [ebx+0x3a],edx
  40a735:	inc    esi
  40a736:	das    
  40a737:	inc    ecx
  40a738:	dec    esi
  40a739:	(bad)  
  40a73a:	fstp   DWORD PTR [edx+eiz*1+0x6c]
  40a73e:	popa   
  40a73f:	pop    es
  40a740:	adc    al,0x76
  40a742:	retf   
  40a743:	sbb    ah,BYTE PTR [eax+0x9]
  40a746:	je     0x40a748
  40a748:	aaa    
  40a749:	jg     0x40a790
  40a74b:	mov    al,ds:0xa619f58d
  40a750:	cmp    al,0xbb
  40a752:	bound  ebp,QWORD PTR [edi]
  40a754:	xchg   bl,bl
  40a756:	jp     0x40a73f
  40a758:	jmp    0xc046277
  40a75d:	inc    dx
  40a75f:	sahf   
  40a760:	iret   
  40a761:	adc    dl,BYTE PTR [edi]
  40a763:	add    al,0x22
  40a765:	cwde   
  40a766:	xchg   edi,eax
  40a767:	dec    edi
  40a768:	mov    al,0xcb
  40a76a:	in     eax,dx
  40a76b:	lea    ecx,[eax+0x4c07928]
  40a771:	adc    eax,esi
  40a773:	(bad)  
  40a774:	pop    ebp
  40a775:	repz adc al,0xee
  40a778:	cwde   
  40a779:	mov    esp,0x6aa48e1a
  40a77e:	cwde   
  40a77f:	xchg   ebx,eax
  40a780:	and    bh,BYTE PTR ds:0x67775ed2
  40a786:	ins    DWORD PTR es:[edi],dx
  40a787:	pop    esi
  40a788:	jge    0x40a7a2
  40a78a:	ret    
  40a78b:	jg     0x40a752
  40a78d:	call   0x3301:0x7977acc7
  40a794:	push   ecx
  40a795:	dec    esi
  40a796:	xchg   edi,eax
  40a797:	sti    
  40a798:	pushf  
  40a799:	gs repz jp 0x40a7e0
  40a79d:	call   FWORD PTR [ebx-0x66]
  40a7a0:	dec    ecx
  40a7a1:	jp     0x40a7c1
  40a7a3:	xchg   ecx,eax
  40a7a4:	mov    esp,0x583aa34c
  40a7a9:	lock jbe 0x40a740
  40a7ac:	lea    ebp,[esi+0x10c5b3b8]
  40a7b2:	rcl    BYTE PTR [eax-0x34761b56],0x51
  40a7b9:	sbb    eax,DWORD PTR [edx]
  40a7bb:	scas   eax,DWORD PTR es:[edi]
  40a7bc:	cwde   
  40a7bd:	cmc    
  40a7be:	pop    edi
  40a7bf:	ficom  WORD PTR [ecx-0x62dfb340]
  40a7c5:	out    0x8b,eax
  40a7c7:	pop    ds
  40a7c8:	push   ebp
  40a7c9:	ins    BYTE PTR es:[edi],dx
  40a7ca:	into   
  40a7cb:	dec    ebp
  40a7cc:	fs sti 
  40a7ce:	fimul  DWORD PTR [ecx]
  40a7d0:	cld    
  40a7d1:	adc    eax,0x6a15d455
  40a7d7:	ds jne 0x40a789
  40a7da:	push   ss
  40a7db:	scas   eax,DWORD PTR es:[edi]
  40a7dc:	lds    esp,FWORD PTR [ecx]
  40a7de:	pushf  
  40a7df:	adc    BYTE PTR [edx-0x44ede8cc],0x53
  40a7e6:	push   0x6e
  40a7e8:	cld    
  40a7e9:	es mov bl,0x1f
  40a7ec:	push   edi
  40a7ed:	jecxz  0x40a7c8
  40a7ef:	fidiv  DWORD PTR [ecx]
  40a7f1:	jle    0x40a788
  40a7f3:	and    DWORD PTR [edi+0x43],esp
  40a7f6:	cdq    
  40a7f7:	cmp    eax,0x4e134ce8
  40a7fc:	pop    edx
  40a7fd:	pop    eax
  40a7fe:	test   BYTE PTR [edi+0x10c4f860],bl
  40a804:	xchg   edi,eax
  40a805:	inc    edi
  40a806:	mov    eax,DWORD PTR [ecx]
  40a808:	xor    eax,0x87000065
  40a80d:	sar    DWORD PTR [eax],1
  40a80f:	(bad)  
  40a811:	pop    ss
  40a812:	outs   dx,DWORD PTR ds:[esi]
  40a813:	cld    
  40a814:	loopne 0x40a88e
  40a816:	cs iret 
  40a818:	xor    ecx,eax
  40a81a:	ret    
  40a81b:	or     eax,0x7fa18ebb
  40a820:	scas   eax,DWORD PTR es:[edi]
  40a821:	fmul   DWORD PTR [ecx-0x2dcbd39b]
  40a828:	std    
  40a829:	add    ebp,esi
  40a82b:	mov    al,BYTE PTR [ebx]
  40a82d:	mov    ah,0xbd
  40a82f:	mov    bh,0xa
  40a831:	inc    edx
  40a832:	out    dx,al
  40a833:	and    DWORD PTR [ebx-0xa81ae9f],esi
  40a839:	call   DWORD PTR [edx+ebp*8]
  40a83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a83d:	out    dx,al
  40a83e:	dec    eax
  40a83f:	mov    ecx,0x259d730c
  40a844:	push   edi
  40a845:	ror    BYTE PTR [ebp-0x32000661],1
  40a84b:	jns    0x40a825
  40a84d:	jb     0x40a84c
  40a84f:	mov    ah,0x3f
  40a851:	int    0x3c
  40a853:	mov    ch,0x3b
  40a855:	sub    al,0xdf
  40a857:	test   BYTE PTR [ebp-0x6a],ch
  40a85a:	push   es
  40a85b:	xchg   edx,eax
  40a85c:	lods   eax,DWORD PTR ds:[esi]
  40a85d:	xchg   esp,eax
  40a85e:	mov    WORD PTR [edx+0x70],ss
  40a861:	mov    ?,ecx
  40a863:	vpunpckhqdq xmm3,xmm2,XMMWORD PTR [ebp+0x79]
  40a868:	sub    BYTE PTR [eax-0x80],cl
  40a86b:	repz (bad) 
  40a86d:	aas    
  40a86e:	daa    
  40a86f:	call   0x61109b48
  40a874:	fistp  QWORD PTR [eax-0x11]
  40a877:	out    dx,al
  40a878:	lock shr BYTE PTR [ecx-0x3185c008],1
  40a87f:	push   cs
  40a880:	mov    ecx,0xf512b537
  40a885:	and    BYTE PTR [ecx],0x11
  40a888:	(bad)  
  40a889:	jg     0x40a8bb
  40a88b:	and    DWORD PTR [eax+eax*4],ebx
  40a88e:	fwait
  40a88f:	adc    esi,DWORD PTR [ecx-0x2d]
  40a892:	dec    edi
  40a893:	loop   0x40a8ea
  40a895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a896:	fdiv   QWORD PTR [edx+0x59a97ca0]
  40a89c:	in     al,dx
  40a89d:	cdq    
  40a89e:	lahf   
  40a89f:	not    DWORD PTR [edi+0x6d]
  40a8a2:	push   eax
  40a8a3:	(bad)  
  40a8a4:	or     al,0xaa
  40a8a6:	dec    edx
  40a8a7:	pop    ebx
  40a8a8:	inc    eax
  40a8a9:	jno    0x40a8ef
  40a8ab:	in     al,dx
  40a8ac:	dec    edi
  40a8ad:	cmp    eax,0x8243d565
  40a8b2:	dec    eax
  40a8b3:	arpl   bp,si
  40a8b5:	mov    esp,0x39f9d03b
  40a8ba:	out    0x31,al
  40a8bc:	cmp    bh,ah
  40a8be:	cdq    
  40a8bf:	dec    ebx
  40a8c0:	sub    BYTE PTR [esi*1-0x3110530e],dl
  40a8c7:	outs   dx,BYTE PTR ds:[esi]
  40a8c8:	dec    ebp
  40a8c9:	(bad)  
  40a8ca:	out    0x42,al
  40a8cc:	pop    ds
  40a8cd:	sub    BYTE PTR fs:[eax],cl
  40a8d0:	std    
  40a8d1:	mov    BYTE PTR [eax+ecx*8],dl
  40a8d4:	cs out 0xb7,eax
  40a8d7:	dec    esi
  40a8d8:	mov    ch,0x13
  40a8da:	dec    BYTE PTR [edx+0x4c435730]
  40a8e0:	retf   0xcd20
  40a8e3:	fdiv   st,st(4)
  40a8e5:	push   edx
  40a8e6:	call   0xfb15:0xaf52f78e
  40a8ed:	call   0xa3ba489f
  40a8f2:	nop
  40a8f3:	mov    ebp,0x1d02b3ee
  40a8f8:	adc    al,0xd2
  40a8fa:	xor    ah,ah
  40a8fc:	dec    ebp
  40a8fd:	rcl    BYTE PTR [eax+0x24],1
  40a900:	jg     0x40a8e3
  40a902:	(bad)  
  40a903:	pop    ecx
  40a904:	popf   
  40a905:	(bad)
  40a908:	idiv   DWORD PTR [bx+0x41b3]
  40a90d:	xor    ebx,DWORD PTR [eax]
  40a90f:	lea    edx,[ecx*8+0x3883fb74]
  40a916:	into   
  40a917:	adc    eax,0xf9828121
  40a91c:	(bad)  
  40a91d:	das    
  40a91e:	div    DWORD PTR [eax]
  40a920:	xchg   BYTE PTR [edx],ah
  40a922:	imul   esp,DWORD PTR [ebx*4-0x1493c34f],0x76
  40a92a:	in     eax,dx
  40a92b:	add    al,0x88
  40a92d:	fimul  DWORD PTR [eax]
  40a92f:	scas   al,BYTE PTR es:[edi]
  40a930:	js     0x40a8d1
  40a932:	shl    BYTE PTR [edi+eiz*2+0x69],1
  40a936:	daa    
  40a937:	and    esi,DWORD PTR [ecx]
  40a939:	loopne 0x40a929
  40a93b:	jp     0x40a94c
  40a93d:	shl    BYTE PTR [ebx],1
  40a93f:	xlat   BYTE PTR ds:[ebx]
  40a940:	jns    0x40a959
  40a942:	pop    es
  40a943:	jmp    0x40a913
  40a945:	iret   
  40a946:	sub    DWORD PTR [esi-0x32],0xf5b9e6ae
  40a94d:	adc    BYTE PTR [ebp+0x2b],bh
  40a950:	stos   DWORD PTR es:[edi],eax
  40a951:	mov    ebp,0xa287a37
  40a956:	jnp    0x40a939
  40a958:	fs lahf 
  40a95a:	or     al,dl
  40a95c:	xor    DWORD PTR [ecx],ecx
  40a95e:	pop    eax
  40a95f:	fs ins DWORD PTR es:[edi],dx
  40a961:	jecxz  0x40a99d
  40a963:	mov    bh,0x4d
  40a965:	adc    ah,BYTE PTR [eax-0x5a]
  40a968:	ret    0x93a8
  40a96b:	ins    BYTE PTR es:[edi],dx
  40a96c:	xor    al,0xcc
  40a96e:	mov    ebp,0x2694c699
  40a973:	std    
  40a974:	push   DWORD PTR [eax-0x5b]
  40a977:	add    edx,DWORD PTR [ebx]
  40a979:	test   DWORD PTR [ebx+0x1049dd84],eax
  40a97f:	(bad)  
  40a980:	int3   
  40a981:	push   0x39
  40a983:	jno    0x40a9ce
  40a985:	xchg   edi,eax
  40a986:	fdiv   DWORD PTR [ebp+0x4bfd661a]
  40a98c:	add    ecx,edx
  40a98e:	test   eax,0x4f0bfaac
  40a993:	clc    
  40a994:	ret    
  40a995:	aaa    
  40a996:	mov    edi,0x5707ea66
  40a99b:	lahf   
  40a99c:	jae    0x40a951
  40a99e:	stc    
  40a99f:	mov    BYTE PTR [edi],ah
  40a9a1:	mov    WORD PTR ds:0x1f51e19b,ss
  40a9a7:	jmp    0x4bc0:0xc3df6322
  40a9ae:	adc    BYTE PTR [eax-0x4c],0x48
  40a9b2:	out    dx,al
  40a9b3:	stos   BYTE PTR es:[edi],al
  40a9b4:	pop    ecx
  40a9b5:	mov    WORD PTR [ebx+eax*1+0x31dae4fc],?
  40a9bc:	lods   eax,DWORD PTR ds:[esi]
  40a9bd:	jecxz  0x40aa35
  40a9bf:	push   edx
  40a9c0:	push   ecx
  40a9c1:	dec    ebp
  40a9c2:	mov    bh,0x2e
  40a9c4:	push   esp
  40a9c5:	dec    dx
  40a9c7:	test   al,0x6a
  40a9c9:	xchg   ebx,esi
  40a9cb:	(bad)  
  40a9cc:	imul   BYTE PTR [ebp-0x5f528abd]
  40a9d2:	xlat   BYTE PTR es:[ebx]
  40a9d4:	out    0xc4,eax
  40a9d6:	out    0xd8,al
  40a9d8:	nop
  40a9d9:	push   ebp
  40a9da:	mov    DWORD PTR [edi+0x3903649b],edx
  40a9e0:	int3   
  40a9e1:	pop    ecx
  40a9e2:	out    0x54,eax
  40a9e4:	fucomip st,st(3)
  40a9e6:	or     DWORD PTR [edi-0x69],edx
  40a9e9:	adc    dh,BYTE PTR [ebx-0x65c625ae]
  40a9ef:	push   esi
  40a9f0:	sahf   
  40a9f1:	xchg   ebx,eax
  40a9f2:	cs dec eax
  40a9f4:	test   eax,0x9cfb0332
  40a9f9:	leave  
  40a9fa:	mov    esp,0xd93fde5f
  40a9ff:	or     ebp,esp
  40aa01:	xlat   BYTE PTR ds:[ebx]
  40aa02:	xor    BYTE PTR [ecx-0x69],dl
  40aa05:	(bad)  
  40aa06:	cs cwde 
  40aa08:	xchg   ecx,eax
  40aa09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa0a:	pop    ss
  40aa0b:	pop    ds
  40aa0c:	inc    edi
  40aa0d:	push   ss
  40aa0e:	outs   dx,DWORD PTR ds:[esi]
  40aa0f:	inc    DWORD PTR [ebp-0x673d55e2]
  40aa15:	sub    al,0x61
  40aa17:	pop    DWORD PTR [esi+0x7]
  40aa1a:	mov    BYTE PTR [eax+0x5c],0xde
  40aa1e:	xchg   ecx,eax
  40aa1f:	sbb    al,0x8
  40aa21:	es jbe 0x40a9aa
  40aa24:	fisub  WORD PTR [edi]
  40aa26:	pushf  
  40aa27:	xchg   ebp,eax
  40aa28:	push   ebx
  40aa29:	les    esi,FWORD PTR [ebx-0x5c]
  40aa2c:	add    esp,ebp
  40aa2e:	cmp    al,0x89
  40aa30:	push   esp
  40aa31:	or     esi,DWORD PTR [edi-0xc]
  40aa34:	loopne 0x40a9e8
  40aa36:	sub    eax,0xd9128328
  40aa3b:	or     ecx,edx
  40aa3d:	xor    DWORD PTR [eax],0xffffffb5
  40aa40:	dec    ecx
  40aa41:	xchg   ebp,eax
  40aa42:	sbb    dl,al
  40aa44:	add    ebp,eax
  40aa46:	mov    esi,0xd4be8602
  40aa4b:	cmp    ah,dl
  40aa4d:	mov    ecx,0x9a16a3b2
  40aa52:	aas    
  40aa53:	add    BYTE PTR [edx+ebp*8],cl
  40aa56:	int3   
  40aa57:	pop    esp
  40aa58:	rcl    DWORD PTR [esi-0x49],1
  40aa5b:	out    0xb7,eax
  40aa5d:	inc    edx
  40aa5e:	mov    cl,0x2d
  40aa60:	nop
  40aa61:	adc    al,0xb7
  40aa63:	mov    esp,0x715f6d51
  40aa68:	aam    0x79
  40aa6a:	mov    al,0x6e
  40aa6c:	or     bh,BYTE PTR [edx+0xded0df3]
  40aa72:	cld    
  40aa73:	popf   
  40aa74:	int3   
  40aa75:	imul   ecx,DWORD PTR [eax+0x233a18e8],0x338911f
  40aa7f:	xor    bh,BYTE PTR [ebx+edi*1]
  40aa82:	cmp    al,dh
  40aa84:	dec    edi
  40aa85:	xchg   edx,eax
  40aa86:	mov    eax,0x432a415f
  40aa8c:	addr16 jo 0x40aa18
  40aa8f:	mov    ds:0xf99df8ba,al
  40aa94:	dec    esp
  40aa95:	into   
  40aa96:	cmc    
  40aa97:	mov    ah,0x8f
  40aa99:	shr    DWORD PTR [ecx],1
  40aa9b:	cs hlt 
  40aa9d:	inc    esi
  40aa9e:	jge    0x40aa7b
  40aaa0:	mov    ch,BYTE PTR [ebx+0x6ba9fec]
  40aaa6:	inc    eax
  40aaa7:	(bad)  
  40aaa8:	pshufw mm5,QWORD PTR [ebx-0x5b],0xe
  40aaad:	jb     0x40aa7d
  40aaaf:	cmc    
  40aab0:	mov    al,ds:0xcc0909e2
  40aab5:	retf   
  40aab6:	mov    esi,0xddb8ec9e
  40aabb:	imul   esi,ebp,0xe171902c
  40aac1:	out    dx,al
  40aac2:	and    ah,BYTE PTR [ebx]
  40aac4:	stc    
  40aac5:	call   0xb2ca:0x12bc9a5c
  40aacc:	(bad)  
  40aacd:	out    dx,al
  40aace:	mov    bl,0xf5
  40aad0:	fnstcw WORD PTR [edx+0x112499e1]
  40aad6:	sub    ecx,DWORD PTR [ebx]
  40aad8:	int    0x2d
  40aada:	ins    DWORD PTR es:[edi],dx
  40aadb:	or     dl,BYTE PTR [eax]
  40aadd:	aad    0x27
  40aadf:	pop    es
  40aae0:	icebp  
  40aae1:	mov    ds:0xb9222e77,eax
  40aae6:	cwde   
  40aae7:	mov    al,0x33
  40aae9:	add    edi,ebx
  40aaeb:	retf   
  40aaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaed:	addr16 (bad) 
  40aaef:	out    dx,al
  40aaf0:	or     bh,BYTE PTR [edx-0x53f54fcf]
  40aaf6:	arpl   sp,di
  40aaf8:	jmp    0x251ba50f
  40aafd:	dec    ebp
  40aafe:	shl    BYTE PTR [ecx],0xbd
  40ab01:	sbb    eax,0x4b5322bb
  40ab06:	mov    al,ds:0xf77e7c14
  40ab0b:	sbb    edi,edx
  40ab0d:	(bad)  
  40ab0e:	fsub   DWORD PTR [eax-0x33886aa1]
  40ab14:	cli    
  40ab15:	ffreep st(6)
  40ab17:	jle    0x40ab25
  40ab19:	daa    
  40ab1a:	call   0x22ea76d8
  40ab1f:	jmp    0x40ab1f
  40ab21:	fdivr  DWORD PTR [ebx-0x14]
  40ab24:	push   es
  40ab25:	sbb    eax,0xdee963a1
  40ab2a:	mov    al,BYTE PTR [ebx+0x29]
  40ab2d:	inc    edi
  40ab2e:	test   eax,0x18e8680d
  40ab33:	mov    ch,0xe
  40ab35:	fs faddp st(3),st
  40ab38:	adc    eax,0xe313a2c6
  40ab3d:	dec    ebp
  40ab3e:	cs and eax,0xa7d11b9
  40ab44:	xor    bh,BYTE PTR [esi+eiz*2-0x68a19de4]
  40ab4b:	xchg   ebx,eax
  40ab4c:	(bad)  
  40ab4d:	rcr    DWORD PTR [ebx],cl
  40ab4f:	div    BYTE PTR [ecx+ecx*2+0x6]
  40ab53:	push   eax
  40ab54:	push   ebx
  40ab55:	xchg   ebp,eax
  40ab56:	mov    ecx,0x85ffa06a
  40ab5b:	mov    esp,0x4fab98bc
  40ab60:	lahf   
  40ab61:	enter  0x79a5,0x88
  40ab65:	adc    eax,0xc525ca54
  40ab6a:	pop    ebx
  40ab6b:	pusha  
  40ab6c:	popa   
  40ab6d:	(bad)  
  40ab6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6f:	and    al,0x4a
  40ab71:	test   eax,0x9889dc3e
  40ab76:	xchg   ebp,eax
  40ab77:	mov    eax,ds:0x4b23af0c
  40ab7c:	mov    ebx,0x6e24ca52
  40ab81:	out    dx,al
  40ab82:	rol    BYTE PTR [ebx+ecx*8-0x45ef0d8d],cl
  40ab89:	and    ch,BYTE PTR [eax+0x74]
  40ab8c:	test   edi,ebp
  40ab8e:	add    dh,BYTE PTR [edi+edx*4]
  40ab91:	xchg   BYTE PTR [ecx],ah
  40ab93:	adc    eax,0x7dac2c8c
  40ab98:	cdq    
  40ab99:	fadd   st(1),st
  40ab9b:	mov    eax,ds:0x7d8738e5
  40aba0:	and    bl,BYTE PTR [eax+0x35]
  40aba3:	mov    al,ds:0xefab2c13
  40aba8:	mov    ds:0x86bd1ca5,eax
  40abad:	sub    eax,0xc9a37a8
  40abb2:	jae    0x40ab54
  40abb4:	cmp    eax,edi
  40abb6:	pop    ecx
  40abb7:	adc    BYTE PTR [ebx],dl
  40abb9:	push   ebp
  40abba:	mov    edi,0xe6999743
  40abbf:	test   eax,0xa5b279c
  40abc4:	mov    esp,0x23dc528c
  40abc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abca:	add    cl,BYTE PTR [esi]
  40abcc:	pop    esi
  40abcd:	fidivr WORD PTR [edi+0x62]
  40abd0:	cli    
  40abd1:	jno    0x40ab69
  40abd3:	stos   DWORD PTR es:[edi],eax
  40abd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd5:	jp     0x40abf9
  40abd7:	xchg   DWORD PTR [ebp+0xf115921],ecx
  40abdd:	push   eax
  40abde:	mov    edi,0xc441002b
  40abe3:	fs out dx,eax
  40abe5:	sub    edi,DWORD PTR [ebp+ebx*1-0x13]
  40abe9:	aas    
  40abea:	int    0xcc
  40abec:	loop   0x40ac66
  40abee:	push   esp
  40abef:	fmul   DWORD PTR [ecx-0x35c1b027]
  40abf5:	and    cl,bh
  40abf7:	and    DWORD PTR [edx],edx
  40abf9:	clc    
  40abfa:	shl    DWORD PTR [esi+0x40],0x3c
  40abfe:	sbb    bh,BYTE PTR [ebx+0x4]
  40ac01:	mov    edi,0xc9c74532
  40ac06:	cmp    eax,0x94e948bb
  40ac0b:	jge    0x40abd4
  40ac0d:	push   ds
  40ac0e:	repnz xor al,0xd4
  40ac11:	mov    eax,0xe263a122
  40ac16:	xchg   ebx,eax
  40ac17:	xchg   esp,eax
  40ac18:	clc    
  40ac19:	repnz int 0xd4
  40ac1c:	and    BYTE PTR [esi-0x3862986a],cl
  40ac22:	outs   dx,DWORD PTR ds:[esi]
  40ac23:	push   esi
  40ac24:	pop    esp
  40ac25:	out    dx,eax
  40ac26:	xchg   esp,eax
  40ac27:	xchg   ebp,eax
  40ac28:	aaa    
  40ac29:	adc    BYTE PTR [ecx-0x508e7277],dh
  40ac2f:	and    DWORD PTR ds:0x4bd798ce,ebx
  40ac35:	cmp    eax,0xbe9a6abb
  40ac3a:	hlt    
  40ac3b:	icebp  
  40ac3c:	js     0x40ac47
  40ac3e:	add    cl,bl
  40ac40:	or     dh,dh
  40ac42:	outs   dx,DWORD PTR ds:[esi]
  40ac43:	xor    ah,ah
  40ac45:	or     BYTE PTR [ebp-0x5071d7c7],dh
  40ac4b:	and    al,0xe2
  40ac4d:	mov    dh,0x4d
  40ac4f:	nop
  40ac50:	fwait
  40ac51:	loopne 0x40ac36
  40ac53:	and    BYTE PTR [ebp+0x6],0x6d
  40ac57:	sub    eax,0x1f1f8a52
  40ac5c:	daa    
  40ac5d:	fcmovnu st,st(7)
  40ac5f:	pop    edi
  40ac60:	ins    DWORD PTR es:[edi],dx
  40ac61:	dec    esi
  40ac62:	sbb    ch,ch
  40ac64:	iret   
  40ac65:	push   ds
  40ac66:	inc    ebx
  40ac67:	dec    edx
  40ac68:	mov    edi,0xb74e0b
  40ac6d:	jl     0x40ac4e
  40ac6f:	cs call 0x38ad:0xae6cdf0f
  40ac77:	and    al,0x37
  40ac79:	sub    eax,0xeefecc9d
  40ac7e:	daa    
  40ac7f:	xor    BYTE PTR [edi-0x3081ceed],bh
  40ac85:	xor    al,0x24
  40ac87:	xchg   DWORD PTR [eax+ebp*2-0x59],esp
  40ac8b:	or     ebp,DWORD PTR [ecx+0x2a]
  40ac8e:	mov    edi,esi
  40ac90:	push   edi
  40ac91:	push   ebp
  40ac92:	(bad)  
  40ac93:	or     dh,BYTE PTR [ecx-0x24b61b08]
  40ac99:	adc    BYTE PTR ds:0x4b0c604,bh
  40ac9f:	or     ecx,ebp
  40aca1:	ins    DWORD PTR es:[edi],dx
  40aca2:	mov    dh,0xac
  40aca4:	add    edi,DWORD PTR [esi]
  40aca6:	(bad)  
  40aca7:	fiadd  DWORD PTR [edi+edi*8-0x1efb68bd]
  40acae:	jae    0x40ac4b
  40acb0:	out    0x8b,eax
  40acb2:	lar    edx,WORD PTR [ebx-0x2263f5e3]
  40acb9:	fsub   st,st(4)
  40acbb:	cmp    eax,0x4b038de9
  40acc0:	pop    eax
  40acc1:	mov    ss:0xf748191b,al
  40acc7:	in     eax,0x8e
  40acc9:	adc    esi,DWORD PTR [esi-0x4]
  40accc:	jecxz  0x40ac67
  40acce:	out    dx,al
  40accf:	mov    dl,0x3e
  40acd1:	cmc    
  40acd2:	mov    cl,0xd4
  40acd4:	neg    BYTE PTR [esi]
  40acd6:	jp     0x40acdc
  40acd8:	mov    esp,esi
  40acda:	sbb    BYTE PTR [edx-0x341ba28f],0xd7
  40ace1:	jbe    0x40acc3
  40ace3:	push   ebx
  40ace4:	xchg   esi,eax
  40ace5:	stos   DWORD PTR es:[edi],eax
  40ace6:	loopne 0x40ac95
  40ace8:	adc    eax,DWORD PTR [ecx-0x7f773501]
  40acee:	in     al,dx
  40acef:	xlat   BYTE PTR ds:[ebx]
  40acf0:	jmp    0x40ad6d
  40acf2:	loop   0x40acb8
  40acf4:	or     al,0x23
  40acf6:	call   0x3190:0x84e81e65
  40acfd:	adc    bh,BYTE PTR [ebx]
  40acff:	sbb    esi,0xbddbaa75
  40ad05:	fidiv  DWORD PTR [eax+0x49]
  40ad08:	push   es
  40ad09:	icebp  
  40ad0a:	rcl    ah,1
  40ad0c:	mov    es,WORD PTR [ecx]
  40ad0e:	mov    bh,0xfd
  40ad10:	gs push esp
  40ad12:	ins    BYTE PTR es:[edi],dx
  40ad13:	push   esp
  40ad14:	dec    ecx
  40ad15:	xchg   ch,ah
  40ad17:	adc    eax,0x552df25a
  40ad1c:	inc    ecx
  40ad1d:	add    al,bh
  40ad1f:	push   0x98a90af5
  40ad24:	jmp    0x40ad88
  40ad26:	xchg   ecx,eax
  40ad27:	lahf   
  40ad28:	jmp    0x68f85b19
  40ad2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad2e:	pop    ebx
  40ad2f:	cmp    al,0x86
  40ad31:	push   esp
  40ad32:	xchg   ecx,eax
  40ad33:	das    
  40ad34:	stos   BYTE PTR es:[edi],al
  40ad35:	in     al,0xbe
  40ad37:	daa    
  40ad38:	mov    edi,DWORD PTR [eax+ebp*4-0x7]
  40ad3c:	gs cwde 
  40ad3e:	(bad)  
  40ad40:	push   esi
  40ad41:	mov    dl,0xfa
  40ad43:	jne    0xd11389f9
  40ad49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4a:	fnsave [edx+0x41]
  40ad4d:	xlat   BYTE PTR ds:[ebx]
  40ad4e:	jbe    0x40ad38
  40ad50:	addr16 dec edx
  40ad52:	pop    edi
  40ad53:	hlt    
  40ad54:	xchg   BYTE PTR [edx+0x16],al
  40ad57:	mov    esp,0x57ccef46
  40ad5c:	fadd   QWORD PTR [ecx+0x5e14015f]
  40ad62:	mov    dh,0x67
  40ad64:	std    
  40ad65:	xor    al,0x56
  40ad67:	out    dx,al
  40ad68:	dec    DWORD PTR [eax+0x13]
  40ad6b:	into   
  40ad6c:	ins    DWORD PTR es:[edi],dx
  40ad6d:	or     al,0x21
  40ad6f:	add    bl,BYTE PTR [esi+0x4]
  40ad72:	fs push 0x1b
  40ad75:	cli    
  40ad76:	or     esi,DWORD PTR [esi+0xd]
  40ad79:	(bad)  [ebp+0x64]
  40ad7c:	ds jb  0x40ad67
  40ad7f:	pushf  
  40ad80:	popa   
  40ad81:	push   ds
  40ad82:	push   edi
  40ad83:	xchg   edx,eax
  40ad84:	dec    esi
  40ad85:	jmp    FWORD PTR [edx]
  40ad87:	and    ebx,DWORD PTR [ebx-0x9649033]
  40ad8d:	jb     0x40ad80
  40ad8f:	push   edx
  40ad90:	loopne 0x40adba
  40ad92:	lods   eax,DWORD PTR ds:[esi]
  40ad93:	inc    esp
  40ad94:	inc    esp
  40ad95:	xor    eax,0xf0a7938e
  40ad9a:	sub    eax,0xdb4e5768
  40ad9f:	mov    ebp,0x328e9b6
  40ada4:	dec    ebx
  40ada5:	adc    cl,dl
  40ada7:	xchg   ebp,eax
  40ada8:	pop    edx
  40ada9:	sbb    BYTE PTR [ebx+0x145752fb],bh
  40adaf:	in     eax,0x74
  40adb1:	fwait
  40adb2:	ins    DWORD PTR es:[edi],dx
  40adb3:	scas   eax,DWORD PTR es:[edi]
  40adb4:	jmp    0x9e5b:0x5569cd8c
  40adbb:	nop
  40adbc:	rol    DWORD PTR [eax],cl
  40adbe:	mov    BYTE PTR [ebx+0x5b],bh
  40adc1:	and    DWORD PTR cs:[edx+0x2b],ecx
  40adc5:	push   0xa8414a0f
  40adca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adcb:	push   esp
  40adcc:	add    eax,0x6fcab103
  40add1:	ds loop 0x40ad99
  40add4:	in     al,0xef
  40add6:	pop    eax
  40add7:	rol    esp,0x14
  40adda:	pusha  
  40addb:	pop    ebx
  40addc:	int3   
  40addd:	out    dx,eax
  40adde:	xchg   esi,eax
  40addf:	ins    BYTE PTR es:[edi],dx
  40ade0:	mov    esi,0xf592620c
  40ade5:	push   ss
  40ade6:	test   eax,0x32ffe05c
  40adeb:	fidiv  WORD PTR [ecx+eax*4]
  40adee:	add    ecx,eax
  40adf0:	in     eax,dx
  40adf1:	xor    eax,0xb5234612
  40adf6:	push   ss
  40adf7:	mov    esi,0xc195b14e
  40adfc:	adc    esp,DWORD PTR [edi]
  40adfe:	data16 ficomp WORD PTR [ecx+0x8fc96a3]
  40ae05:	hlt    
  40ae06:	jg     0x40ae1a
  40ae08:	mov    dh,0x92
  40ae0a:	es push ss
  40ae0c:	cmp    BYTE PTR [esp+edi*1+0xe10bf58],ch
  40ae13:	push   0x7d
  40ae15:	cdq    
  40ae16:	adc    BYTE PTR [esi+ebp*1],ch
  40ae19:	add    al,0xe
  40ae1b:	mov    bh,0x2b
  40ae1d:	in     eax,dx
  40ae1e:	jge    0x40ae0d
  40ae20:	mov    eax,ds:0xce062d0f
  40ae25:	adc    DWORD PTR [ecx-0x36599127],esp
  40ae2b:	xchg   ebp,eax
  40ae2c:	mov    al,0xde
  40ae2e:	add    ch,BYTE PTR [eax]
  40ae30:	(bad)  
  40ae31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae32:	mov    ds:0xee74710f,al
  40ae37:	cmp    ebp,DWORD PTR [ebp+0x67]
  40ae3a:	fbstp  TBYTE PTR [ecx-0x2ebf9c41]
  40ae40:	nop
  40ae41:	cmp    bl,bl
  40ae43:	aam    0xcc
  40ae45:	rol    BYTE PTR fs:[edx],cl
  40ae48:	test   BYTE PTR [ebp-0x43],al
  40ae4b:	or     al,0xa7
  40ae4d:	or     DWORD PTR [eax],eax
  40ae4f:	in     eax,dx
  40ae50:	retf   
  40ae51:	fadd   DWORD PTR [ebx-0x7e]
  40ae54:	mov    eax,0xe3375712
  40ae59:	xor    eax,0x2f224668
  40ae5e:	repnz xchg edi,eax
  40ae60:	sbb    BYTE PTR [ebp+eax*4-0x7b],bh
  40ae64:	mov    DWORD PTR ds:0x16f107ba,esp
  40ae6a:	push   ebx
  40ae6b:	int3   
  40ae6c:	in     eax,0x85
  40ae6e:	xchg   ebx,eax
  40ae6f:	(bad)  
  40ae70:	neg    bl
  40ae72:	pop    edx
  40ae73:	cmc    
  40ae74:	aad    0x57
  40ae76:	adc    DWORD PTR [eax],0x2a
  40ae79:	popf   
  40ae7a:	imul   ebx,DWORD PTR [ebp+0x576210b3],0x29c10058
  40ae84:	sbb    ebx,DWORD PTR [eax+0x6e]
  40ae87:	or     ecx,eax
  40ae89:	(bad)  
  40ae8a:	shl    DWORD PTR [edi],cl
  40ae8c:	in     eax,dx
  40ae8d:	sahf   
  40ae8e:	xchg   edi,eax
  40ae8f:	in     eax,0x4c
  40ae91:	mov    edx,0xd764e099
  40ae96:	inc    edi
  40ae97:	pop    esi
  40ae98:	and    ah,BYTE PTR [ecx-0x67]
  40ae9b:	jne    0x40af12
  40ae9d:	xchg   ebx,eax
  40ae9e:	jmp    0xd9fd0e1a
  40aea3:	adc    eax,DWORD PTR [ebx+0x27751009]
  40aea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeaa:	(bad)
  40aead:	mov    dh,0xda
  40aeaf:	sub    DWORD PTR [edx+0x61d67a6e],eax
  40aeb5:	and    DWORD PTR [ebp+0x39cd2a9a],edi
  40aebb:	pop    ebx
  40aebc:	dec    ecx
  40aebd:	or     bh,bl
  40aebf:	or     dl,BYTE PTR [eax+eax*2]
  40aec2:	fwait
  40aec3:	inc    sp
  40aec5:	int3   
  40aec6:	sub    al,0x3c
  40aec8:	mov    edx,0xdf082a60
  40aecd:	lock scas al,BYTE PTR es:[edi]
  40aecf:	loopne 0x40af2f
  40aed1:	cwde   
  40aed2:	sbb    eax,0xfa1320b7
  40aed7:	aas    
  40aed8:	mov    ds:0xf843fd54,al
  40aedd:	stos   DWORD PTR es:[edi],eax
  40aede:	(bad)  
  40aedf:	sti    
  40aee0:	xor    al,0x32
  40aee2:	adc    al,0xad
  40aee4:	inc    ebp
  40aee5:	stos   BYTE PTR es:[edi],al
  40aee6:	or     eax,0xb858eae1
  40aeeb:	push   edi
  40aeec:	pop    es
  40aeed:	xchg   esi,eax
  40aeee:	je     0x40af4b
  40aef0:	push   ebx
  40aef1:	aaa    
  40aef2:	push   esi
  40aef3:	sbb    DWORD PTR [eax+edi*4],ecx
  40aef6:	dec    eax
  40aef7:	cdq    
  40aef8:	push   ss
  40aef9:	lahf   
  40aefa:	cmc    
  40aefb:	dec    esi
  40aefc:	adc    BYTE PTR [edi],ch
  40aefe:	cmp    esi,ebp
  40af00:	out    dx,eax
  40af01:	push   edx
  40af02:	mov    esi,0x9fb9a65c
  40af07:	pusha  
  40af08:	loope  0x40af33
  40af0a:	push   es
  40af0b:	and    DWORD PTR [esp+ebp*4+0x71d5c892],eax
  40af12:	cmc    
  40af13:	mov    eax,ds:0x614de3b
  40af18:	pop    es
  40af19:	aas    
  40af1a:	loop   0x40af25
  40af1c:	mul    DWORD PTR [eax+0x406036bc]
  40af22:	inc    ecx
  40af23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af24:	ret    0x8278
  40af27:	dec    ebp
  40af28:	lds    edx,FWORD PTR [esi-0x28db946a]
  40af2e:	pop    edi
  40af2f:	cmp    al,0xfa
  40af31:	(bad)  
  40af32:	mov    al,0x78
  40af34:	xor    cl,BYTE PTR [esi-0x4e]
  40af37:	mov    bh,0xc2
  40af39:	cs xchg ecx,eax
  40af3b:	mov    cl,0xfa
  40af3d:	in     al,0x53
  40af3f:	jge    0x40afc0
  40af41:	ins    BYTE PTR es:[edi],dx
  40af42:	call   0x8cef:0x2365ded9
  40af49:	or     ebp,esi
  40af4b:	aas    
  40af4c:	das    
  40af4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af4e:	xchg   esp,eax
  40af4f:	jne    0x40af4e
  40af51:	jo     0x40af87
  40af53:	int    0xd5
  40af55:	inc    ecx
  40af56:	outs   dx,BYTE PTR ds:[esi]
  40af57:	mov    edx,0x79a1c154
  40af5c:	add    BYTE PTR [esp+edx*1-0x15],0x83
  40af61:	xor    BYTE PTR [ecx-0x67137624],ah
  40af67:	or     eax,esi
  40af69:	mov    bl,0x57
  40af6b:	or     al,0x14
  40af6d:	lods   al,BYTE PTR ds:[esi]
  40af6e:	mov    WORD PTR [edx+0x11],?
  40af71:	and    ecx,DWORD PTR [ebx+ebx*2]
  40af74:	dec    eax
  40af75:	cmp    BYTE PTR [edx+0x6e],bl
  40af78:	dec    edx
  40af79:	stc    
  40af7a:	lods   eax,DWORD PTR ds:[esi]
  40af7b:	ds jge 0x40afcd
  40af7e:	or     DWORD PTR [ebx-0x5a],esi
  40af81:	shl    DWORD PTR [ecx+0x735aa224],0x92
  40af88:	sahf   
  40af89:	sub    al,0x69
  40af8b:	jg     0x40affd
  40af8d:	cld    
  40af8e:	int3   
  40af8f:	idiv   BYTE PTR [edi-0xa]
  40af92:	pop    ecx
  40af93:	inc    eax
  40af94:	xlat   BYTE PTR ds:[ebx]
  40af95:	push   ss
  40af96:	cmp    dh,BYTE PTR [ecx+0x53]
  40af99:	dec    ebx
  40af9a:	bound  ebp,QWORD PTR [esi-0x302a205b]
  40afa0:	ins    BYTE PTR es:[edi],dx
  40afa1:	test   al,ch
  40afa3:	cmp    al,0x4f
  40afa5:	cdq    
  40afa6:	or     eax,0x2938f2a7
  40afab:	sub    esp,edi
  40afad:	popa   
  40afae:	ja     0x40afea
  40afb0:	mov    ah,0x63
  40afb2:	inc    ebp
  40afb3:	mov    ah,0x25
  40afb5:	xor    eax,ebp
  40afb7:	(bad)  
  40afb9:	nop
  40afba:	clc    
  40afbb:	jmp    0x40b038
  40afbd:	sbb    eax,DWORD PTR [edi+edx*1+0x77]
  40afc1:	push   ecx
  40afc2:	xchg   ebp,eax
  40afc3:	push   0xffffffe2
  40afc5:	xor    esi,ebx
  40afc7:	push   edx
  40afc8:	popf   
  40afc9:	cmp    BYTE PTR [ecx],bl
  40afcb:	inc    ecx
  40afcc:	sbb    eax,0x6584b9b6
  40afd1:	cs (bad) 
  40afd3:	out    dx,eax
  40afd4:	test   al,al
  40afd6:	mov    ebx,DWORD PTR [ecx+0x29]
  40afd9:	jmp    0x40af90
  40afdb:	scas   al,BYTE PTR es:[edi]
  40afdc:	dec    esi
  40afdd:	ss mov edx,0x677ff525
  40afe3:	jle    0x40afe5
  40afe5:	push   ebp
  40afe6:	mov    ds:0x306a7c7e,eax
  40afeb:	lds    eax,FWORD PTR [ecx]
  40afed:	xor    BYTE PTR [eax-0x54557aec],0xcc
  40aff4:	xchg   ecx,eax
  40aff5:	dec    BYTE PTR [edx+0x2c]
  40aff8:	(bad)  
  40aff9:	push   edi
  40affa:	imul   esi,DWORD PTR [eax+0x2e624a6d],0xf05195ae
  40b004:	loope  0x40afd4
  40b006:	pop    esi
  40b007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b008:	rol    bh,1
  40b00a:	lods   eax,DWORD PTR ds:[esi]
  40b00b:	lds    edx,FWORD PTR [edi-0x676c636f]
  40b011:	xor    al,0xad
  40b013:	(bad)  
  40b014:	dec    edx
  40b015:	jp     0x40b081
  40b017:	rcr    DWORD PTR [ecx+eiz*2],0x2d
  40b01b:	loopne 0x40afb5
  40b01d:	add    al,0xca
  40b01f:	mov    bh,BYTE PTR [ebp+0x3ed0847e]
  40b025:	adc    esp,DWORD PTR [ebx-0x790bc66f]
  40b02b:	(bad)  [ebx+0x10]
  40b02e:	xchg   edx,eax
  40b02f:	iret   
  40b030:	in     eax,dx
  40b031:	cli    
  40b032:	adc    dl,bh
  40b034:	push   ss
  40b035:	cs push esi
  40b037:	sub    cl,bh
  40b039:	sbb    esi,eax
  40b03b:	inc    edx
  40b03c:	arpl   WORD PTR [ebp+0x63fc416f],di
  40b042:	div    BYTE PTR [ecx-0x59]
  40b045:	mov    eax,ds:0x6eecc422
  40b04a:	and    al,0x66
  40b04c:	test   al,0x7a
  40b04e:	jle    0x40b024
  40b050:	cmp    DWORD PTR [ebx],edx
  40b052:	sbb    BYTE PTR [ebp-0x19],ch
  40b055:	jo     0x40b010
  40b057:	inc    bh
  40b059:	adc    dl,BYTE PTR [eax]
  40b05b:	daa    
  40b05c:	fimul  WORD PTR [ebx-0x38edb74]
  40b062:	add    dl,BYTE PTR [ebx+0x7d4ba636]
  40b068:	mov    bl,bl
  40b06a:	sub    DWORD PTR [eax-0x2b09bcce],0xb350862a
  40b074:	xor    bl,BYTE PTR [edi+0x9566f9b]
  40b07a:	popf   
  40b07b:	ins    DWORD PTR es:[edi],dx
  40b07c:	sbb    ebp,DWORD PTR [esi-0x512582b]
  40b082:	jmp    0xd9b6f01f
  40b087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b088:	shl    bh,1
  40b08a:	sub    BYTE PTR [edx-0x7b8b89d8],dl
  40b090:	stos   DWORD PTR es:[edi],eax
  40b091:	jns    0x40b0dc
  40b093:	scas   eax,DWORD PTR es:[edi]
  40b094:	(bad)  [ecx-0x6a]
  40b097:	daa    
  40b098:	push   esp
  40b099:	imul   ebx,DWORD PTR [edi+edi*2-0x1],0x2a560ca2
  40b0a1:	push   0x35
  40b0a3:	jo     0x40b10f
  40b0a5:	pop    ds
  40b0a6:	ret    0x817f
  40b0a9:	push   eax
  40b0aa:	pop    edx
  40b0ab:	sbb    BYTE PTR [edx+0x43],0xdb
  40b0af:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b0b1:	in     al,0x98
  40b0b3:	push   ss
  40b0b4:	push   ss
  40b0b5:	sar    eax,cl
  40b0b7:	xchg   edx,eax
  40b0b8:	retf   
  40b0b9:	fcom   DWORD PTR [ebx+ebx*2]
  40b0bc:	bound  ecx,QWORD PTR [edi+0x2866d9e8]
  40b0c2:	lods   eax,DWORD PTR ds:[esi]
  40b0c3:	dec    ebp
  40b0c4:	inc    ebp
  40b0c5:	cmp    esi,DWORD PTR [esp+ebp*1-0x79d2e300]
  40b0cc:	pop    esp
  40b0cd:	jno    0x40b0d0
  40b0cf:	(bad)  
  40b0d0:	sub    al,0xfd
  40b0d2:	jns    0x40b09f
  40b0d4:	pop    ecx
  40b0d5:	xchg   esi,eax
  40b0d6:	inc    ebp
  40b0d7:	in     eax,dx
  40b0d8:	out    dx,eax
  40b0d9:	jp     0x40b149
  40b0db:	mov    ss,WORD PTR [eax+eiz*4+0x4d]
  40b0df:	mov    DWORD PTR [edi+0x1e],esp
  40b0e2:	xor    bl,BYTE PTR [edi+esi*2+0x13b31f26]
  40b0e9:	cmp    al,0x34
  40b0eb:	pop    edx
  40b0ec:	repz mov ah,dh
  40b0ef:	aad    0xd7
  40b0f1:	cld    
  40b0f2:	int    0x4
  40b0f4:	dec    esi
  40b0f5:	or     ebp,DWORD PTR [ecx]
  40b0f7:	cmp    DWORD PTR [eax],ecx
  40b0f9:	(bad)  
  40b0fa:	and    eax,0xf348c7a9
  40b0ff:	mov    bl,0x31
  40b101:	pop    ebp
  40b102:	inc    eax
  40b103:	(bad)  
  40b104:	xor    edx,DWORD PTR ds:0x171cf9d1
  40b10a:	ins    DWORD PTR es:[edi],dx
  40b10b:	das    
  40b10c:	iret   
  40b10d:	imul   ebx,DWORD PTR [eax+0x3762326c],0x5eca6143
  40b117:	nop
  40b118:	cmp    BYTE PTR [edx+ebp*1+0x7c2284ec],bh
  40b11f:	or     al,BYTE PTR [esp+ebp*1-0xddeecb6]
  40b126:	adc    BYTE PTR [eax-0x17],ch
  40b129:	popf   
  40b12a:	punpcklwd mm7,mm5
  40b12d:	push   ebp
  40b12e:	loopne 0x40b166
  40b130:	sbb    edx,DWORD PTR ds:0x81578b57
  40b136:	shl    ah,1
  40b138:	push   ebp
  40b139:	sti    
  40b13a:	retf   
  40b13b:	imul   ecx,DWORD PTR [eax+0x7c],0xaa56f6f8
  40b142:	sahf   
  40b143:	loopne 0x40b0ce
  40b145:	(bad)  
  40b146:	mov    ah,0xc7
  40b148:	ja     0x40b141
  40b14a:	xlat   BYTE PTR ds:[ebx]
  40b14b:	out    dx,eax
  40b14c:	lds    esi,FWORD PTR [ecx+0x161c826a]
  40b152:	mov    dl,0x58
  40b154:	daa    
  40b155:	out    dx,al
  40b156:	and    BYTE PTR [esi-0x7c],cl
  40b159:	sahf   
  40b15a:	xchg   ebx,eax
  40b15b:	pusha  
  40b15c:	sti    
  40b15d:	xchg   edx,eax
  40b15e:	push   edi
  40b15f:	pop    es
  40b160:	js     0x40b177
  40b162:	pop    ebx
  40b163:	push   ebp
  40b164:	ss adc al,0xec
  40b167:	dec    ecx
  40b168:	or     esp,DWORD PTR [ebx]
  40b16a:	test   eax,0x74687dfc
  40b16f:	cmp    BYTE PTR [bp-0x1b],bh
  40b173:	cld    
  40b174:	in     eax,0x3e
  40b176:	mov    esi,0x9035e106
  40b17b:	add    al,0x8d
  40b17d:	adc    dl,BYTE PTR [esp+edx*8]
  40b180:	mov    bl,0xae
  40b182:	xchg   esi,eax
  40b183:	enter  0x3fc1,0xe3
  40b187:	mov    al,es:0xf6d15d03
  40b18d:	xor    cl,BYTE PTR [eax-0x39]
  40b190:	mov    ah,0x53
  40b192:	dec    eax
  40b193:	fisttp QWORD PTR [ecx-0x6c]
  40b196:	sub    BYTE PTR [edx-0x6d],cl
  40b199:	push   ecx
  40b19a:	out    dx,eax
  40b19b:	xor    edi,DWORD PTR [eax+0x49]
  40b19e:	inc    esi
  40b19f:	iret   
  40b1a0:	iret   
  40b1a1:	push   edi
  40b1a2:	cmp    ebx,esp
  40b1a4:	push   ebp
  40b1a5:	test   DWORD PTR [esi+eax*8],0x6e3d8fc3
  40b1ac:	pop    esp
  40b1ad:	shl    BYTE PTR [ebp-0x56],0x14
  40b1b1:	mov    edx,0x8c8c9dfa
  40b1b6:	dec    esi
  40b1b7:	push   edi
  40b1b8:	int3   
  40b1b9:	and    BYTE PTR [eax+0x6e],bl
  40b1bc:	pop    ss
  40b1bd:	arpl   WORD PTR [ecx+edx*4+0x43add8d5],ax
  40b1c4:	xchg   ecx,eax
  40b1c5:	jle    0x40b1a3
  40b1c7:	lds    esi,FWORD PTR [edi-0x7]
  40b1ca:	dec    edi
  40b1cb:	ins    BYTE PTR es:[edi],dx
  40b1cc:	(bad)  
  40b1cf:	mov    cl,0xec
  40b1d1:	fidiv  WORD PTR [ecx]
  40b1d3:	out    dx,al
  40b1d4:	lea    ecx,[ebx]
  40b1d6:	retf   0x2563
  40b1d9:	sbb    BYTE PTR [esi],bh
  40b1db:	lock ret 0xbf61
  40b1df:	out    0xb0,eax
  40b1e1:	sbb    DWORD PTR [edi+ebx*2],esp
  40b1e4:	les    edi,FWORD PTR [edx-0xe]
  40b1e7:	hlt    
  40b1e8:	jbe    0x40b252
  40b1ea:	cmp    eax,0x86938cb9
  40b1ef:	scas   eax,DWORD PTR es:[edi]
  40b1f0:	imul   ecx,DWORD PTR [edi+ebx*1+0x7e8827ed],0x648ddb52
  40b1fb:	sar    BYTE PTR [edi],0xc0
  40b1fe:	cmp    al,0x98
  40b200:	fdiv   st(6),st
  40b202:	push   cs
  40b203:	sub    al,0x27
  40b205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b206:	mov    ch,BYTE PTR [eax+0x72fc4f64]
  40b20c:	or     eax,0xd7a281bf
  40b211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b212:	cmp    bl,al
  40b214:	jl     0x40b23e
  40b216:	xor    cl,ch
  40b218:	bound  esp,QWORD PTR [edx+0x3637a7fd]
  40b21e:	(bad)
  40b221:	ror    BYTE PTR [edx-0x6a0bab1b],cl
  40b227:	fsubr  QWORD PTR [eax]
  40b229:	cmp    BYTE PTR ds:0x9209712a,0x8c
  40b230:	dec    esp
  40b231:	or     dl,BYTE PTR [ebx+0xa5b66cf]
  40b237:	inc    eax
  40b238:	popf   
  40b239:	fidivr WORD PTR ds:0x2f694e87
  40b23f:	pop    esp
  40b240:	mov    ch,BYTE PTR [ecx-0x7b56e6de]
  40b246:	cli    
  40b247:	repz jle 0x40b1f8
  40b24a:	test   BYTE PTR ds:0xc5bf078b,al
  40b250:	xchg   edi,eax
  40b251:	ret    0x8c56
  40b254:	(bad)  
  40b255:	mov    ah,0xea
  40b257:	ret    
  40b258:	ret    0x3a6f
  40b25b:	(bad)  
  40b25c:	in     al,0xdd
  40b25e:	xchg   edx,eax
  40b25f:	adc    ch,ah
  40b261:	arpl   WORD PTR [ebx+0x43],di
  40b264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b265:	and    ch,ah
  40b267:	sbb    ebp,DWORD PTR [ebx+0x5e8dcb67]
  40b26d:	or     al,0x59
  40b26f:	cmp    DWORD PTR [eax-0x59f44a32],ebp
  40b275:	cmp    eax,ebx
  40b277:	push   esp
  40b278:	cdq    
  40b279:	imul   edx,edi,0xffffffd3
  40b27c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27d:	mov    ds:0x71cd7f9f,al
  40b282:	mov    ebx,0x95c78b83
  40b287:	and    eax,0xf3191d05
  40b28c:	les    ebp,FWORD PTR [ebx-0x7e1737c]
  40b292:	dec    esi
  40b293:	push   es
  40b294:	pop    esi
  40b295:	cmp    al,0x33
  40b297:	xchg   esi,eax
  40b298:	adc    al,0x93
  40b29a:	nop
  40b29b:	push   ebp
  40b29c:	push   ds
  40b29d:	ret    0x6e9b
  40b2a0:	in     al,dx
  40b2a1:	call   0xfb18:0x46ed4255
  40b2a8:	or     al,0x8e
  40b2aa:	pop    edx
  40b2ab:	push   0x63c01002
  40b2b0:	(bad)  
  40b2b1:	mov    esi,0xe8725d04
  40b2b6:	pop    eax
  40b2b7:	ja     0x40b2a5
  40b2b9:	inc    ecx
  40b2ba:	loope  0x40b2d2
  40b2bc:	popf   
  40b2bd:	cli    
  40b2be:	inc    eax
  40b2bf:	sub    al,0xd3
  40b2c1:	jb     0x40b2bb
  40b2c3:	(bad)  
  40b2c4:	push   cs
  40b2c5:	shl    bh,cl
  40b2c7:	and    ebx,DWORD PTR [edi+ecx*8-0x28]
  40b2cb:	mov    DWORD PTR [ebp-0x6719c337],esi
  40b2d1:	add    ah,0x41
  40b2d4:	push   ss
  40b2d5:	adc    ebx,esi
  40b2d7:	not    BYTE PTR [ecx+0x49]
  40b2da:	and    edx,DWORD PTR [edi+esi*4-0x7efef11]
  40b2e1:	mov    gs:0xa47f8ab6,eax
  40b2e7:	pop    ebp
  40b2e8:	test   BYTE PTR ds:0xae2f0edf,bl
  40b2ee:	sahf   
  40b2ef:	push   esi
  40b2f0:	cld    
  40b2f1:	xchg   DWORD PTR [edi+ebp*8-0x254d366a],edx
  40b2f8:	jbe    0x40b2e5
  40b2fa:	push   DWORD PTR [ebp-0x21]
  40b2fd:	pop    ecx
  40b2fe:	sbb    al,0xcb
  40b300:	(bad)  
  40b301:	mov    WORD PTR [esi-0xaeee675],cs
  40b307:	and    eax,0x77918a89
  40b30c:	or     esp,esi
  40b30e:	jne    0x40b2ba
  40b310:	mov    ebp,DWORD PTR [esi-0x329eb9ae]
  40b316:	pop    edx
  40b317:	sub    ebx,DWORD PTR [eax]
  40b319:	test   al,0x65
  40b31b:	(bad)  
  40b31c:	leave  
  40b31d:	leave  
  40b31e:	add    ebp,ebx
  40b320:	fs pop ebp
  40b322:	inc    ecx
  40b323:	inc    ecx
  40b324:	cmc    
  40b325:	jp     0x40b310
  40b327:	bound  ecx,QWORD PTR [edx-0x1e17b5f9]
  40b32d:	mov    ch,0xc0
  40b32f:	and    DWORD PTR [ebp+edi*2+0x35eaf2ed],0xa1d689e9
  40b33a:	out    0x36,eax
  40b33c:	mov    ?,WORD PTR [eax]
  40b33e:	xchg   edi,eax
  40b33f:	jl     0x40b328
  40b341:	ret    0x3a14
  40b344:	cdq    
  40b345:	cmp    eax,0x743c21f8
  40b34a:	mov    ds:0x3a363eb5,eax
  40b34f:	push   ecx
  40b350:	add    ebp,DWORD PTR [eax+0x75dd672e]
  40b356:	inc    esi
  40b357:	fs jne 0x40b34c
  40b35a:	pop    ebp
  40b35b:	xchg   ebp,eax
  40b35c:	(bad)  
  40b35e:	sub    eax,esp
  40b360:	stos   BYTE PTR es:[edi],al
  40b361:	mov    esi,0x5c2cf34f
  40b366:	push   cs
  40b367:	sbb    eax,0x911f91af
  40b36c:	fdivr  st,st(5)
  40b36e:	cmp    eax,0x74dd71d
  40b373:	adc    cl,dl
  40b375:	pop    esp
  40b376:	pop    ds
  40b377:	push   ecx
  40b378:	cdq    
  40b379:	mov    ch,0x4
  40b37b:	call   0x6e7d78fe
  40b380:	xchg   DWORD PTR [eax-0x3933b685],esp
  40b386:	mov    al,ds:0xae583878
  40b38b:	in     eax,dx
  40b38c:	adc    al,0xff
  40b38e:	in     al,dx
  40b38f:	or     eax,0xe5a0988c
  40b394:	mov    esi,0x596a6049
  40b399:	mov    edx,0x3d0c06fd
  40b39e:	sub    ebp,0xffffffb1
  40b3a1:	sbb    al,0x6c
  40b3a3:	or     eax,0xd5dfb8aa
  40b3a8:	fstp   QWORD PTR [edi+0xa]
  40b3ab:	push   ds
  40b3ac:	mov    dl,0x79
  40b3ae:	std    
  40b3af:	inc    eax
  40b3b0:	push   esp
  40b3b1:	hlt    
  40b3b2:	mov    DWORD PTR [esi+0x6743402f],esp
  40b3b8:	and    al,0xda
  40b3ba:	adc    BYTE PTR [esi+0x46],ch
  40b3bd:	dec    ebx
  40b3be:	adc    bl,BYTE PTR [eax-0x8]
  40b3c1:	pop    ebx
  40b3c2:	pop    es
  40b3c3:	xchg   edi,eax
  40b3c4:	mov    esp,0x343dc1e4
  40b3c9:	fucom  st(7)
  40b3cb:	int3   
  40b3cc:	xchg   edx,eax
  40b3cd:	sub    eax,0xb3c11f9
  40b3d2:	sub    eax,0xc8199934
  40b3d7:	inc    esp
  40b3d8:	inc    edx
  40b3d9:	and    DWORD PTR [ebx],ecx
  40b3db:	inc    esi
  40b3dc:	sub    bh,BYTE PTR [edi+0x7a63e99c]
  40b3e2:	aam    0xe
  40b3e4:	test   BYTE PTR [eax+0xeb559a2],ch
  40b3ea:	and    DWORD PTR ds:0x4eb59752,esp
  40b3f0:	mov    DWORD PTR [esi],ecx
  40b3f2:	ins    BYTE PTR es:[edi],dx
  40b3f3:	add    al,0xa
  40b3f5:	arpl   WORD PTR [edi],dx
  40b3f7:	mov    ah,0xa8
  40b3f9:	inc    edi
  40b3fa:	out    0x8e,al
  40b3fc:	xor    bh,BYTE PTR [ebx-0x354f7e24]
  40b402:	or     al,0xe7
  40b404:	pop    edi
  40b405:	imul   edi,DWORD PTR [ebx],0x75
  40b408:	fisubr WORD PTR [ecx]
  40b40a:	dec    esi
  40b40b:	sbb    al,0x2d
  40b40d:	jg     0x40b3df
  40b40f:	cdq    
  40b410:	add    eax,0x866d3882
  40b415:	jl     0x40b459
  40b417:	pop    ebx
  40b418:	inc    ebp
  40b419:	outs   dx,BYTE PTR ds:[esi]
  40b41a:	add    DWORD PTR [eax+0x5fa9e77e],ebp
  40b420:	retf   
  40b421:	fs data16 jne 0x40b48e
  40b425:	(bad)  
  40b426:	imul   ebp,edx,0x7490f2be
  40b42c:	mov    eax,gs:0x331544b7
  40b432:	add    DWORD PTR [eax-0x56b7243],0xffffff8c
  40b439:	push   esi
  40b43a:	jmp    0xfabb:0xbe06e9f5
  40b441:	in     eax,0x8
  40b443:	sub    dl,BYTE PTR [ecx]
  40b445:	mov    ebp,0x73143276
  40b44a:	mov    esp,0xc721f6c8
  40b44f:	(bad)  
  40b450:	mov    ebx,0x6f60c773
  40b455:	shr    DWORD PTR [edi-0x59],1
  40b458:	and    eax,0xb3d4b25b
  40b45d:	cmp    DWORD PTR ds:0xb77dbbfa,esi
  40b463:	xchg   ebx,eax
  40b464:	ss enter 0x38c0,0xac
  40b469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b46a:	shl    edi,cl
  40b46c:	cli    
  40b46d:	fld    QWORD PTR [edi-0x2612fb39]
  40b473:	iret   
  40b474:	pop    ds
  40b475:	icebp  
  40b476:	outs   dx,DWORD PTR es:[esi]
  40b478:	ins    BYTE PTR es:[edi],dx
  40b479:	jmp    0xc80:0xb70b8527
  40b480:	sbb    esp,ebx
  40b482:	scas   eax,DWORD PTR es:[edi]
  40b483:	aas    
  40b484:	xchg   ebp,eax
  40b485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b486:	shr    BYTE PTR [eax-0x12],cl
  40b489:	shl    ecx,1
  40b48b:	mov    edx,edx
  40b48d:	or     DWORD PTR [ecx-0x6bcd8a52],ebx
  40b493:	imul   esi,DWORD PTR [ecx+eiz*2-0x25],0xffffffc3
  40b498:	aam    0xf5
  40b49a:	mov    esp,0xd3183ae0
  40b49f:	xor    al,0xf4
  40b4a1:	mov    ds:0x6bd1e4f4,eax
  40b4a6:	sub    BYTE PTR [edx+0x7],bl
  40b4a9:	cmp    BYTE PTR [esi],bl
  40b4ab:	xor    al,0xc0
  40b4ad:	scas   al,BYTE PTR es:[edi]
  40b4ae:	jo     0x40b44b
  40b4b0:	jmp    DWORD PTR [esp-0x5f9d2fb2]
  40b4b7:	(bad)  
  40b4b8:	(bad)  
  40b4b9:	in     eax,0xe5
  40b4bb:	xchg   DWORD PTR [ebp+0x2a8ff5ec],eax
  40b4c1:	clc    
  40b4c2:	(bad)  
  40b4c3:	shl    BYTE PTR [ebx-0x24c15945],0x4c
  40b4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4cb:	shl    BYTE PTR [ecx],1
  40b4cd:	jmp    0x40b47b
  40b4cf:	xchg   ecx,eax
  40b4d0:	mov    esp,0x73331e65
  40b4d5:	add    bh,BYTE PTR [eax]
  40b4d7:	je     0x40b460
  40b4d9:	dec    esp
  40b4da:	adc    ch,ah
  40b4dc:	cmp    al,0xaa
  40b4de:	in     eax,dx
  40b4df:	(bad)  [ecx+0x7e]
  40b4e2:	xchg   ecx,eax
  40b4e3:	int3   
  40b4e4:	push   ecx
  40b4e5:	(bad)  
  40b4e7:	cs imul edi,eax,0xfea9fd1
  40b4ee:	jle    0x40b52c
  40b4f0:	ret    0x5e84
  40b4f3:	test   eax,0xac36581a
  40b4f8:	jbe    0x40b4fc
  40b4fa:	dec    eax
  40b4fb:	mov    edx,0xa0cc1b33
  40b500:	retf   0x6526
  40b503:	jecxz  0x40b564
  40b505:	pop    ecx
  40b506:	sub    al,0x91
  40b508:	ss pop esi
  40b50a:	or     cl,bl
  40b50c:	cmp    al,ah
  40b50e:	ror    DWORD PTR [ecx-0x3a],cl
  40b511:	je     0x40b4c0
  40b513:	cmp    BYTE PTR [eax-0x18],al
  40b516:	popf   
  40b517:	inc    ebx
  40b518:	mov    al,BYTE PTR [edx-0x1f4496ff]
  40b51e:	in     eax,dx
  40b51f:	out    0xf7,al
  40b521:	xchg   edx,eax
  40b522:	mov    ah,0xd3
  40b524:	cmp    BYTE PTR [ecx-0x21],0xe2
  40b528:	test   DWORD PTR [edi],ebp
  40b52a:	inc    ebp
  40b52b:	ja     0x40b586
  40b52d:	icebp  
  40b52e:	js     0x40b54e
  40b530:	dec    edi
  40b531:	fisubr WORD PTR [edi]
  40b533:	inc    ecx
  40b534:	mov    db2,esi
  40b537:	adc    eax,DWORD PTR [edi-0x55]
  40b53a:	(bad)  
  40b53b:	jbe    0x40b545
  40b53d:	adc    edx,0x4c2c7731
  40b543:	cmp    BYTE PTR [ebp+ecx*4-0x10f25d7e],al
  40b54a:	cdq    
  40b54b:	sub    BYTE PTR [edx+esi*1],ch
  40b54e:	add    BYTE PTR [ecx+0x1a],al
  40b551:	outs   dx,BYTE PTR ds:[esi]
  40b552:	xchg   ecx,esp
  40b554:	and    edx,DWORD PTR [ebx+0x3c]
  40b557:	mov    ds:0x2268ac6a,eax
  40b55c:	jmp    0x40b573
  40b55e:	mov    bl,0x24
  40b560:	pop    edi
  40b561:	fcmove st,st(4)
  40b563:	and    DWORD PTR [esi-0x3b],edx
  40b566:	mov    esi,0xef62ebf2
  40b56b:	adc    cl,dl
  40b56d:	and    edx,DWORD PTR [ebx]
  40b56f:	or     eax,0xa9dbba5f
  40b574:	xlat   BYTE PTR ds:[ebx]
  40b575:	adc    ch,dl
  40b577:	xlat   BYTE PTR ds:[ebx]
  40b578:	push   edi
  40b579:	sub    DWORD PTR [edx],edi
  40b57b:	xchg   ebx,eax
  40b57c:	sti    
  40b57d:	pop    edi
  40b57e:	outs   dx,DWORD PTR ds:[esi]
  40b57f:	mov    al,ds:0x83fae931
  40b584:	fwait
  40b585:	shl    BYTE PTR [esi+ebx*8],0x5c
  40b589:	out    dx,eax
  40b58a:	enter  0xf245,0xa5
  40b58e:	fbld   TBYTE PTR [esi-0x6f5f2641]
  40b594:	cld    
  40b595:	js     0x40b51c
  40b597:	aaa    
  40b598:	out    0x6,al
  40b59a:	xchg   ebp,eax
  40b59b:	fwait
  40b59c:	jo     0x40b5c3
  40b59e:	stc    
  40b59f:	cmp    bh,dh
  40b5a1:	stos   BYTE PTR es:[edi],al
  40b5a2:	loope  0x40b556
  40b5a4:	cwde   
  40b5a5:	mov    eax,ds:0xf0f114a5
  40b5aa:	mov    es,WORD PTR [ebx+0x63]
  40b5ad:	out    dx,al
  40b5ae:	push   esi
  40b5af:	fdivr  DWORD PTR [esi]
  40b5b1:	xchg   ebx,eax
  40b5b2:	outs   dx,BYTE PTR ds:[esi]
  40b5b3:	es jo  0x40b55e
  40b5b6:	shl    BYTE PTR [edx+ebx*1-0xddf0573],cl
  40b5bd:	or     al,0x40
  40b5bf:	fdivr  st(7),st
  40b5c1:	push   eax
  40b5c2:	cmp    bh,BYTE PTR [edi]
  40b5c4:	mov    esp,0xbd605ab
  40b5c9:	pusha  
  40b5ca:	inc    edx
  40b5cb:	cli    
  40b5cc:	out    0xd7,al
  40b5ce:	sbb    DWORD PTR [edi],ecx
  40b5d0:	fcmovnbe st,st(5)
  40b5d2:	fisttp WORD PTR [esi+0x452b9ee0]
  40b5d8:	cmp    BYTE PTR [edi],ah
  40b5da:	int3   
  40b5db:	shl    DWORD PTR [ebx+0x32],cl
  40b5de:	sub    BYTE PTR [edx],ah
  40b5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e1:	mov    edi,0x5400cc97
  40b5e6:	add    esi,DWORD PTR [edi+0x1c4ca8e4]
  40b5ec:	pushf  
  40b5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ee:	test   al,0x86
  40b5f0:	jmp    0x40b5ea
  40b5f2:	inc    eax
  40b5f3:	jecxz  0x40b658
  40b5f5:	mov    dh,0x54
  40b5f7:	mov    al,ds:0x56da0895
  40b5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5fd:	pop    eax
  40b5fe:	fidiv  DWORD PTR [edi-0x18be446f]
  40b604:	mov    al,0x8b
  40b606:	push   0x57cd39cd
  40b60b:	mov    ds:0x44a03263,al
  40b610:	inc    ebp
  40b611:	push   ebx
  40b612:	mov    esp,0x3699c60d
  40b617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b618:	test   eax,0x37588718
  40b61d:	or     eax,0x7ed640c6
  40b622:	push   esi
  40b623:	adc    al,0x29
  40b625:	mov    ds:0x65735c5a,eax
  40b62a:	es sub ebp,eax
  40b62d:	call   0xcb72:0x94fecb3c
  40b634:	xchg   al,bh
  40b636:	mov    ebp,0x2f423471
  40b63b:	out    dx,al
  40b63c:	push   ebp
  40b63d:	fdivp  st(4),st
  40b63f:	jle    0x40b651
  40b641:	idiv   BYTE PTR [ecx-0x7]
  40b644:	mov    DWORD PTR [ebx+ecx*4-0x4e],ebx
  40b648:	adc    al,0x13
  40b64a:	or     DWORD PTR [eax+0x6c],eax
  40b64d:	addr16 and eax,0xc146c50b
  40b653:	push   esi
  40b654:	outs   dx,DWORD PTR ds:[esi]
  40b655:	mov    ecx,0xbdc4db46
  40b65a:	sub    ecx,DWORD PTR [esi-0x29]
  40b65d:	ror    BYTE PTR [esi+0x78601d72],cl
  40b663:	mov    cl,0x3f
  40b665:	leave  
  40b666:	loopne 0x40b674
  40b668:	push   edi
  40b669:	add    DWORD PTR [edi-0x16],ebp
  40b66c:	sub    BYTE PTR ds:0x39a235e3,ah
  40b672:	sbb    DWORD PTR [eax],ecx
  40b674:	popa   
  40b675:	jecxz  0x40b6d7
  40b677:	xor    al,BYTE PTR [edx+0x16900805]
  40b67d:	push   0xa128dadc
  40b682:	cdq    
  40b683:	lock adc esp,edx
  40b686:	fcmovbe st,st(3)
  40b688:	out    0x12,al
  40b68a:	adc    eax,0xbe4100fa
  40b68f:	int3   
  40b690:	xchg   DWORD PTR [eax],eax
  40b692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b693:	jmp    0x40b657
  40b695:	adc    DWORD PTR [ebx-0x29],eax
  40b698:	call   0xfdcee7ce
  40b69d:	mov    edx,0x4c7726cc
  40b6a2:	test   DWORD PTR [ebx-0xb76c039],0x3e176f24
  40b6ac:	push   0xbd50d243
  40b6b1:	or     esp,DWORD PTR [edx]
  40b6b3:	dec    eax
  40b6b4:	rol    DWORD PTR [esi+0x28],cl
  40b6b7:	add    ecx,edx
  40b6b9:	fmul   DWORD PTR [edx+edx*2]
  40b6bc:	bound  esp,QWORD PTR [esi-0xfa37088]
  40b6c2:	ja     0x40b650
  40b6c4:	xchg   esi,eax
  40b6c5:	inc    eax
  40b6c6:	sbb    ebp,DWORD PTR [ecx]
  40b6c8:	add    BYTE PTR [edi+0xf3ef90f],ah
  40b6ce:	push   ss
  40b6cf:	sbb    BYTE PTR ds:0x64b9e069,cl
  40b6d5:	mov    al,0x77
  40b6d7:	out    dx,eax
  40b6d8:	pushf  
  40b6d9:	sti    
  40b6da:	ds inc esp
  40b6dc:	pop    ss
  40b6dd:	mov    dh,0x97
  40b6df:	dec    ebx
  40b6e0:	add    al,BYTE PTR [ebp+0x1ec31ea6]
  40b6e6:	je     0x40b73d
  40b6e8:	inc    ebp
  40b6e9:	push   cs
  40b6ea:	ret    
  40b6eb:	mov    bl,0xa4
  40b6ed:	cs or  eax,0xa232a56d
  40b6f3:	mov    ch,0xff
  40b6f5:	dec    eax
  40b6f6:	adc    eax,0xdcda8981
  40b6fb:	mov    BYTE PTR [edi-0x22],ah
  40b6fe:	xor    eax,0x5037d3ae
  40b703:	dec    ecx
  40b704:	xor    DWORD PTR [esi+eiz*8],edx
  40b707:	adc    DWORD PTR [ecx-0x4a4f623c],ecx
  40b70d:	sub    BYTE PTR [ecx-0x26f5a16c],bl
  40b713:	inc    esi
  40b714:	add    al,0x91
  40b716:	sbb    eax,0x16b84c85
  40b71b:	daa    
  40b71c:	test   al,0x51
  40b71e:	retf   0x9382
  40b721:	pop    edx
  40b722:	mov    ah,0x16
  40b724:	cmp    BYTE PTR [eax],dl
  40b726:	fwait
  40b727:	out    dx,al
  40b728:	lahf   
  40b729:	sub    BYTE PTR [edx-0x4d],0x7b
  40b72d:	cmp    al,0xe
  40b72f:	sub    BYTE PTR [esi],dl
  40b731:	icebp  
  40b732:	(bad)  
  40b733:	(bad)  
  40b735:	sbb    ah,dl
  40b737:	in     eax,dx
  40b738:	sbb    cl,BYTE PTR [eax]
  40b73a:	mov    DWORD PTR [edi+0x6f],edx
  40b73d:	addr16 mov dh,0x15
  40b740:	push   ss
  40b741:	mov    ds:0x33a8ccb0,al
  40b746:	mov    ebp,0x39b89e93
  40b74b:	test   DWORD PTR [edi+edi*2],ebx
  40b74e:	push   ss
  40b74f:	je     0x40b70e
  40b751:	test   ebp,ecx
  40b753:	jnp    0x40b7d4
  40b755:	(bad)  
  40b756:	mov    eax,ds:0xecf51b09
  40b75b:	je     0x40b726
  40b75d:	adc    ah,BYTE PTR [esi-0x44535a19]
  40b763:	jg     0x40b785
  40b765:	cs retf 
  40b767:	std    
  40b768:	sbb    eax,0x991023bb
  40b76d:	jae    0x40b7a3
  40b76f:	les    ebp,FWORD PTR [eax-0x7e]
  40b772:	xchg   edx,eax
  40b773:	jp     0x40b720
  40b775:	mov    al,0xfe
  40b777:	xor    al,BYTE PTR [ebp+esi*1+0x9ca4825]
  40b77e:	push   0xff7bfafd
  40b783:	rol    DWORD PTR [ebx-0x7ee388cf],0xa6
  40b78a:	cmp    al,0x63
  40b78c:	and    ebx,ebx
  40b78e:	jne    0x40b80f
  40b790:	push   edx
  40b791:	scas   al,BYTE PTR es:[edi]
  40b792:	inc    esp
  40b793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b794:	mov    edx,DWORD PTR [ebx-0xb]
  40b797:	adc    esi,ebx
  40b799:	daa    
  40b79a:	scas   al,BYTE PTR es:[edi]
  40b79b:	xor    DWORD PTR [ecx+0xaa12820],0x20e16f9a
  40b7a5:	and    DWORD PTR ds:0x4ceace93,edi
  40b7ab:	daa    
  40b7ac:	mov    WORD PTR [edx],es
  40b7ae:	dec    esp
  40b7af:	jp     0x40b7ee
  40b7b1:	ret    
  40b7b2:	jge    0x40b7b5
  40b7b4:	shr    DWORD PTR [edi-0x6d949431],0x62
  40b7bb:	cdq    
  40b7bc:	pushf  
  40b7bd:	shl    cl,0xf6
  40b7c0:	mov    edi,0x3b538ba0
  40b7c5:	test   DWORD PTR [ebp+0x2eca5d9f],ecx
  40b7cb:	fnstcw WORD PTR [ebp+0x6b]
  40b7ce:	stc    
  40b7cf:	push   ebp
  40b7d0:	pop    eax
  40b7d1:	push   es
  40b7d2:	inc    esi
  40b7d3:	daa    
  40b7d4:	fs sbb al,0x6a
  40b7d7:	jb     0x40b821
  40b7d9:	xor    BYTE PTR [edi+eax*4+0x4918f517],ch
  40b7e0:	dec    esi
  40b7e1:	mov    edx,0x4a4c4f90
  40b7e6:	cmp    BYTE PTR [ebp+0x261b3fe9],bh
  40b7ec:	mov    ds:0xbf6eeb15,al
  40b7f1:	pop    ds
  40b7f2:	jno    0x40b809
  40b7f4:	mov    ch,0x1d
  40b7f6:	mov    eax,0x5bc8e9e
  40b7fb:	sub    bh,BYTE PTR [ecx]
  40b7fd:	je     0x40b836
  40b7ff:	in     eax,dx
  40b800:	in     al,dx
  40b801:	dec    ecx
  40b802:	xchg   esi,eax
  40b803:	xor    DWORD PTR ds:0x1143dda1,edx
  40b809:	xor    al,0x9b
  40b80b:	pop    edi
  40b80c:	cmp    BYTE PTR [esi],ah
  40b80e:	cmp    edi,DWORD PTR [eax-0x5d]
  40b811:	and    al,BYTE PTR [esi+ecx*1+0x33]
  40b815:	call   0x5d214941
  40b81a:	xchg   ebp,eax
  40b81b:	dec    ebx
  40b81c:	nop
  40b81d:	bound  ecx,QWORD PTR [edi+0x1]
  40b820:	vpcmpgtw xmm2,xmm0,XMMWORD PTR [edx+eiz*8]
  40b825:	dec    edi
  40b826:	pop    esi
  40b827:	test   BYTE PTR [ebp+0xf],ch
  40b82a:	frstor fs:[eax+0xc]
  40b82e:	push   ecx
  40b82f:	ret    0x46c4
  40b832:	pop    esi
  40b833:	or     eax,0xd6b30ae2
  40b838:	loop   0x40b7bf
  40b83a:	add    BYTE PTR [edx+0x54067da4],bh
  40b840:	pop    edx
  40b841:	loop   0x40b846
  40b843:	push   edi
  40b844:	inc    eax
  40b845:	jo     0x40b7ee
  40b847:	mov    esp,0xb7ba4785
  40b84c:	inc    eax
  40b84d:	loop   0x40b7de
  40b84f:	or     ch,BYTE PTR ds:0x18736e2a
  40b855:	push   ebp
  40b856:	dec    esi
  40b857:	push   ss
  40b858:	xchg   BYTE PTR [ecx-0x45],dl
  40b85b:	add    al,0x62
  40b85d:	icebp  
  40b85e:	push   edx
  40b85f:	mov    al,BYTE PTR [ecx-0x3bd57b34]
  40b865:	dec    edi
  40b866:	push   ebp
  40b867:	enter  0x2305,0xf8
  40b86b:	shr    DWORD PTR [ebx-0x19652f15],1
  40b871:	lea    ebx,[ecx+0x45]
  40b874:	ds sti 
  40b876:	imul   ebp,ebp,0x8ba1e181
  40b87c:	(bad)  
  40b87e:	inc    ebp
  40b87f:	xor    DWORD PTR [ebx],0xffffff9b
  40b882:	xchg   esi,eax
  40b883:	push   ebp
  40b884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b885:	sahf   
  40b886:	and    esi,DWORD PTR [edx-0x24]
  40b889:	add    BYTE PTR [eax+0x7d5b069b],ch
  40b88f:	and    cl,dl
  40b891:	cli    
  40b892:	sub    dl,BYTE PTR [ebx+0x4e05c0f7]
  40b898:	stos   DWORD PTR es:[edi],eax
  40b899:	ret    0xc724
  40b89c:	sub    BYTE PTR [ecx+0x33f196bc],0x4f
  40b8a3:	xor    eax,0x4ea594b0
  40b8a8:	and    al,0x6b
  40b8aa:	idiv   bh
  40b8ac:	xor    eax,DWORD PTR [ebp+0x39c75b33]
  40b8b2:	mov    ch,0x30
  40b8b4:	sub    dl,BYTE PTR [edi+0x47e858d6]
  40b8ba:	inc    esi
  40b8bb:	in     eax,0x73
  40b8bd:	cmp    DWORD PTR [ebx+0x4c],eax
  40b8c0:	and    dh,BYTE PTR [eax+0xf]
  40b8c3:	dec    esp
  40b8c4:	ds retf 
  40b8c6:	je     0x40b8db
  40b8c8:	(bad)  
  40b8c9:	push   ebp
  40b8ca:	call   0x3fd62075
  40b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d0:	dec    esp
  40b8d1:	mov    DWORD PTR [ebp-0x45],ebp
  40b8d4:	mov    bl,0xa6
  40b8d6:	into   
  40b8d7:	rol    eax,cl
  40b8d9:	push   eax
  40b8da:	dec    esi
  40b8db:	imul   edi,DWORD PTR [ecx],0x96264d08
  40b8e1:	and    DWORD PTR [eax+0x1a],eax
  40b8e4:	sub    cl,0x98
  40b8e7:	jecxz  0x40b909
  40b8e9:	xchg   esi,eax
  40b8ea:	xor    edi,DWORD PTR [ebp+0x59]
  40b8ed:	jb     0x40b902
  40b8ef:	inc    esp
  40b8f0:	not    eax
  40b8f2:	cwde   
  40b8f3:	and    ch,0x0
  40b8f6:	in     al,0x1d
  40b8f8:	pusha  
  40b8f9:	adc    bh,BYTE PTR ds:0xd083d416
  40b8ff:	adc    cl,BYTE PTR ds:0xb2536de2
  40b905:	ss push ecx
  40b907:	mov    eax,0x1c9d3031
  40b90c:	xchg   esi,eax
  40b90d:	lods   eax,DWORD PTR ds:[esi]
  40b90e:	mov    edi,0x41b74cab
  40b913:	xchg   ebp,eax
  40b914:	lods   eax,DWORD PTR ds:[esi]
  40b915:	cmp    al,0xbc
  40b917:	xchg   esi,eax
  40b918:	fisub  DWORD PTR [ebx+0x2eb527d8]
  40b91e:	jmp    0x40b932
  40b920:	jae    0x40b90f
  40b922:	mov    ebp,0x2cb62d55
  40b927:	xchg   BYTE PTR [ecx-0x76],cl
  40b92a:	mov    esi,0x1930553
  40b92f:	sub    ebx,eax
  40b931:	xor    BYTE PTR [ebx+0x6cbc1370],0xd
  40b938:	aam    0xf7
  40b93a:	and    DWORD PTR [edx],esi
  40b93c:	dec    ebp
  40b93d:	(bad)  
  40b93e:	jns    0x40b954
  40b940:	xlat   BYTE PTR ds:[ebx]
  40b941:	jl     0x40b8ea
  40b943:	and    ebp,0x35b63707
  40b949:	outs   dx,BYTE PTR ds:[esi]
  40b94a:	in     eax,0xeb
  40b94c:	mov    edx,0x8d202722
  40b951:	and    ah,cl
  40b953:	in     eax,0xde
  40b955:	add    eax,esp
  40b957:	and    edx,DWORD PTR [edx-0x71]
  40b95a:	(bad)  [ebx+ebp*8-0x22]
  40b95e:	dec    ch
  40b960:	sub    al,0x63
  40b962:	mov    ebp,0x1d1fa9f0
  40b967:	arpl   WORD PTR [eax],di
  40b969:	pop    ebx
  40b96a:	jo     0x40b977
  40b96c:	jmp    0x40b96a
  40b96e:	dec    ebp
  40b96f:	mov    ecx,0xd9639e8f
  40b974:	std    
  40b975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b976:	mov    ebx,DWORD PTR [ebp+0x61]
  40b979:	dec    esp
  40b97a:	das    
  40b97b:	mov    dh,BYTE PTR [edi-0x5d846681]
  40b981:	cwde   
  40b982:	jb     0x40b9e1
  40b984:	cmp    eax,0xda1d2008
  40b989:	cmc    
  40b98a:	inc    edi
  40b98b:	add    esi,DWORD PTR [edi+0x6e]
  40b98e:	aad    0x8b
  40b990:	xor    al,0x84
  40b992:	jo     0x40b995
  40b994:	dec    ecx
  40b995:	xor    ebp,DWORD PTR [eax+edx*4]
  40b998:	jmp    0x1cb8:0x5ee06874
  40b99f:	pop    edx
  40b9a0:	inc    esp
  40b9a1:	add    DWORD PTR [ebx-0x20],esi
  40b9a4:	sahf   
  40b9a5:	cli    
  40b9a6:	or     ebp,DWORD PTR [edx+0x12]
  40b9a9:	leave  
  40b9aa:	into   
  40b9ab:	xchg   edx,eax
  40b9ac:	xor    BYTE PTR [esi+eiz*1+0x4245dada],bl
  40b9b3:	js     0x40b987
  40b9b5:	and    BYTE PTR [esi-0x627a6189],dl
  40b9bb:	jnp    0x40b9a4
  40b9bd:	int3   
  40b9be:	adc    cl,0x82
  40b9c1:	add    al,0xc2
  40b9c3:	add    dl,bh
  40b9c5:	adc    bl,BYTE PTR [esi-0x2f58569a]
  40b9cb:	fcom   QWORD PTR [edx+esi*2+0x28c4ca83]
  40b9d2:	int3   
  40b9d3:	sub    DWORD PTR [ecx-0x22],esp
  40b9d6:	xchg   esi,eax
  40b9d7:	jp     0x40b9f9
  40b9d9:	ret    0xfbad
  40b9dc:	mov    ds:0x411fcde5,al
  40b9e1:	arpl   WORD PTR [ebp-0x3],ax
  40b9e4:	or     al,0x6c
  40b9e6:	or     al,0xf8
  40b9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9e9:	lahf   
  40b9ea:	jmp    0xebe8:0xacb27915
  40b9f1:	or     ah,BYTE PTR [edi]
  40b9f3:	mov    dh,0x99
  40b9f5:	or     DWORD PTR [ebp-0x4d778188],ebx
  40b9fb:	cmp    cl,BYTE PTR [esi]
  40b9fd:	add    eax,0xb303d5c2
  40ba02:	cmp    al,0xe
  40ba04:	xchg   esp,eax
  40ba05:	or     ebx,ebp
  40ba07:	out    dx,al
  40ba08:	pop    eax
  40ba09:	in     al,dx
  40ba0a:	es in  al,0x99
  40ba0d:	pop    esi
  40ba0e:	dec    ebx
  40ba0f:	inc    esp
  40ba10:	int3   
  40ba11:	sub    edi,DWORD PTR [ecx]
  40ba13:	mov    ecx,0xb30a6206
  40ba18:	jne    0x40b9c8
  40ba1a:	stos   DWORD PTR es:[edi],eax
  40ba1b:	hlt    
  40ba1c:	and    esi,DWORD PTR [eax+0x22]
  40ba1f:	jae    0x40b9cc
  40ba21:	adc    eax,0xd4bb1e2b
  40ba26:	clc    
  40ba27:	fst    QWORD PTR [esp+edi*1]
  40ba2a:	fnsave [ecx+0x54]
  40ba2d:	sbb    dl,BYTE PTR [ebp+0x5c0b9352]
  40ba33:	push   0xffffffec
  40ba35:	jecxz  0x40ba18
  40ba37:	xlat   BYTE PTR ds:[ebx]
  40ba38:	aam    0xd6
  40ba3a:	out    0x0,al
  40ba3c:	lock and al,0x31
  40ba3f:	pop    ds
  40ba40:	sbb    edi,edi
  40ba42:	leave  
  40ba43:	xchg   esi,eax
  40ba44:	jns    0x40b9c8
  40ba46:	shl    DWORD PTR [ebp+0x6733fd48],0x67
  40ba4d:	pop    ebp
  40ba4e:	cmp    DWORD PTR ds:0x28fe5c4,edi
  40ba54:	fnstsw WORD PTR [ebp+0x12a08e9d]
  40ba5a:	sahf   
  40ba5b:	push   esp
  40ba5c:	pop    esp
  40ba5d:	xchg   esp,edx
  40ba5f:	push   ds
  40ba60:	leave  
  40ba61:	inc    eax
  40ba62:	jg     0x40b9eb
  40ba64:	or     ch,0x54
  40ba67:	sbb    ax,0x4f6d
  40ba6b:	mov    WORD PTR [esi],ds
  40ba6d:	jg     0x40ba61
  40ba6f:	into   
  40ba70:	into   
  40ba71:	nop
  40ba72:	and    edi,DWORD PTR [esi+0x49]
  40ba75:	or     al,0xab
  40ba77:	add    al,BYTE PTR [eax+0x10]
  40ba7a:	ret    0xe5aa
  40ba7d:	sub    al,0x4e
  40ba7f:	cwde   
  40ba80:	repz xchg ah,dh
  40ba83:	cmp    BYTE PTR [ebx+0x2722aa41],al
  40ba89:	adc    esi,edx
  40ba8b:	pushf  
  40ba8c:	xlat   BYTE PTR ds:[ebx]
  40ba8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8e:	inc    edx
  40ba8f:	enter  0x33e4,0xc3
  40ba93:	ja     0x40bab8
  40ba95:	daa    
  40ba96:	sbb    BYTE PTR ds:0x97d268f2,dh
  40ba9c:	popa   
  40ba9d:	sub    edx,ebp
  40ba9f:	rcl    DWORD PTR [edi-0x49],cl
  40baa2:	ins    BYTE PTR es:[edi],dx
  40baa3:	dec    edi
  40baa4:	es xchg edi,eax
  40baa6:	(bad)  
  40baa7:	repnz adc al,0x32
  40baaa:	or     eax,0x124f00af
  40baaf:	shl    DWORD PTR [ecx-0x68],cl
  40bab2:	pop    ecx
  40bab3:	jb     0x40ba99
  40bab5:	add    BYTE PTR [eax+0x429f743c],0x41
  40babc:	sub    BYTE PTR [ebx-0x249c9d04],0x28
  40bac3:	mov    WORD PTR [edi+esi*1-0x52],fs
  40bac7:	mov    eax,ds:0xc80007c3
  40bacc:	sub    DWORD PTR [edx],esi
  40bace:	lods   eax,DWORD PTR ds:[esi]
  40bacf:	lods   eax,DWORD PTR ds:[esi]
  40bad0:	scas   al,BYTE PTR es:[edi]
  40bad1:	cmp    al,0x1f
  40bad3:	jmp    0x9aaeb630
  40bad8:	dec    edx
  40bad9:	in     eax,0x3a
  40badb:	push   ebx
  40badc:	into   
  40badd:	js     0x40bab9
  40badf:	or     eax,0x177085bc
  40bae4:	and    DWORD PTR [eax+0x6fbf9930],eax
  40baea:	enter  0xcff9,0x69
  40baee:	lods   al,BYTE PTR ds:[esi]
  40baef:	xor    esp,ebx
  40baf1:	and    DWORD PTR [ebp+0x59047b0c],esi
  40baf7:	data16 jbe 0x40bb20
  40bafa:	pop    ds
  40bafb:	cmp    eax,0xc80b65a4
  40bb00:	adc    DWORD PTR [ebx+0xd],0x481139d8
  40bb07:	out    dx,eax
  40bb08:	push   esi
  40bb09:	mov    ds:0xaddb5c2c,al
  40bb0e:	aad    0x25
  40bb10:	leave  
  40bb11:	call   DWORD PTR [ebp-0x25cb41a8]
  40bb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb18:	push   edi
  40bb19:	cdq    
  40bb1a:	cmp    ecx,DWORD PTR [edi+ebp*1]
  40bb1d:	out    0x5d,al
  40bb1f:	jmp    0x40bb51
  40bb21:	push   edi
  40bb22:	cdq    
  40bb23:	mov    esi,0xc7f1cd31
  40bb28:	mov    ah,0x90
  40bb2a:	inc    ecx
  40bb2b:	out    dx,al
  40bb2c:	mov    al,0xf3
  40bb2e:	add    ebx,DWORD PTR [esi-0x6f]
  40bb31:	mov    bl,al
  40bb33:	xor    eax,esi
  40bb35:	test   esi,0x87a0d769
  40bb3b:	mov    DWORD PTR [ebx],ecx
  40bb3d:	popf   
  40bb3e:	mov    DWORD PTR [esi-0x6c],esi
  40bb41:	ficom  WORD PTR [eax+esi*2+0x2a]
  40bb45:	lods   al,BYTE PTR ds:[esi]
  40bb46:	out    0x92,al
  40bb48:	xlat   BYTE PTR ds:[ebx]
  40bb49:	jecxz  0x40bb79
  40bb4b:	pop    esi
  40bb4c:	xor    ecx,ecx
  40bb4e:	jbe    0x40bb09
  40bb50:	cmp    BYTE PTR [ebx+esi*2-0x5a64f5f],cl
  40bb57:	retf   0x961d
  40bb5a:	div    ebp
  40bb5c:	mov    ch,BYTE PTR [edx-0x68]
  40bb5f:	pop    eax
  40bb60:	lahf   
  40bb61:	adc    eax,0x7bd7b838
  40bb66:	icebp  
  40bb67:	sub    ah,dh
  40bb69:	mov    ch,0xcf
  40bb6b:	les    edx,FWORD PTR [esi]
  40bb6d:	sbb    esi,ebp
  40bb6f:	xlat   BYTE PTR ds:[ebx]
  40bb70:	dec    edx
  40bb71:	push   es
  40bb72:	push   esi
  40bb73:	cmp    eax,eax
  40bb75:	inc    edx
  40bb76:	fild   WORD PTR [esi-0x5]
  40bb79:	xor    eax,DWORD PTR [edi+0x1bd810e4]
  40bb7f:	sbb    ah,bl
  40bb81:	push   ss
  40bb82:	ficom  DWORD PTR ds:0xb5f295a3
  40bb88:	leave  
  40bb89:	repz mov ebx,0x38f868a3
  40bb8f:	(bad)  
  40bb90:	fild   WORD PTR [esi+0x4f]
  40bb93:	leave  
  40bb94:	pop    ds
  40bb95:	jns    0x40bb8f
  40bb97:	push   ss
  40bb98:	iret   
  40bb99:	mov    fs,WORD PTR [ecx]
  40bb9b:	jbe    0x40bb63
  40bb9d:	fdivp  st(6),st
  40bb9f:	jbe    0x40bbb1
  40bba1:	out    0x58,al
  40bba3:	inc    ecx
  40bba4:	pop    DWORD PTR [esi-0x2c47a8d2]
  40bbaa:	je     0x40bbfc
  40bbac:	cld    
  40bbad:	mov    esi,0xa35d2f20
  40bbb2:	jl     0x40bba8
  40bbb4:	in     al,0x5a
  40bbb6:	adc    BYTE PTR [ebx+0x713856df],dh
  40bbbc:	and    dh,ch
  40bbbe:	jno    0x40bb43
  40bbc0:	mov    al,ds:0xebee4988
  40bbc5:	xchg   esp,eax
  40bbc6:	mov    ecx,0x1f2ebc80
  40bbcb:	mov    ds:0xa404312a,eax
  40bbd0:	push   ebx
  40bbd1:	pop    es
  40bbd2:	xor    dl,BYTE PTR [ebx+0x33]
  40bbd5:	outs   dx,DWORD PTR ds:[esi]
  40bbd6:	ins    BYTE PTR es:[edi],dx
  40bbd7:	xchg   ebx,eax
  40bbd8:	int3   
  40bbd9:	dec    edi
  40bbda:	ficom  WORD PTR [eax]
  40bbdc:	push   ds
  40bbdd:	sbb    eax,0xea167456
  40bbe2:	push   ebx
  40bbe3:	outs   dx,DWORD PTR ds:[esi]
  40bbe4:	and    DWORD PTR [edi],ebx
  40bbe6:	popa   
  40bbe7:	jmp    0xb383:0x20d730e0
  40bbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbef:	add    bh,BYTE PTR [ecx]
  40bbf1:	fbld   TBYTE PTR ds:0x598cc6e1
  40bbf7:	push   ecx
  40bbf8:	push   ds
  40bbf9:	xor    ch,BYTE PTR [ebp+0x6b]
  40bbfc:	test   al,0x43
  40bbfe:	dec    esi
  40bbff:	xchg   BYTE PTR [ebx-0x59],bh
  40bc02:	jl     0x40bc40
  40bc04:	enter  0x297a,0x6d
  40bc08:	addr16 inc esi
  40bc0a:	fadd   QWORD PTR [ebx-0x5aa97481]
  40bc10:	in     al,0xb9
  40bc12:	rcr    BYTE PTR [ebx-0x52],1
  40bc15:	mov    ebp,0xe928be65
  40bc1a:	stos   DWORD PTR es:[edi],eax
  40bc1b:	rcl    DWORD PTR [ebp-0x61],0x18
  40bc1f:	dec    esi
  40bc20:	fxam   
  40bc22:	mov    ah,0x73
  40bc24:	dec    esi
  40bc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc26:	test   BYTE PTR [eax+0x59],bh
  40bc29:	je     0x40bc0e
  40bc2b:	sahf   
  40bc2c:	xchg   ecx,eax
  40bc2d:	in     al,dx
  40bc2e:	sub    eax,DWORD PTR [edi]
  40bc30:	scas   al,BYTE PTR es:[edi]
  40bc31:	inc    edi
  40bc32:	pushf  
  40bc33:	test   ebp,ebx
  40bc35:	push   edx
  40bc36:	mov    ss,WORD PTR [ecx-0xa]
  40bc39:	(bad)  
  40bc3a:	fimul  DWORD PTR [ebx-0x19]
  40bc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3e:	es nop
  40bc40:	ret    0xfe
  40bc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc44:	and    BYTE PTR [edx-0x2fadd64f],cl
  40bc4a:	adc    al,0x47
  40bc4c:	sbb    dh,BYTE PTR [ebx+0x3b]
  40bc4f:	mov    edi,0xc0cd32f8
  40bc54:	pop    DWORD PTR ds:0x90252a6b
  40bc5a:	xchg   DWORD PTR [ebx-0x12],ebx
  40bc5d:	pop    es
  40bc5e:	add    eax,0xff65923
  40bc63:	dec    edx
  40bc64:	(bad)  
  40bc65:	mov    bl,0x2f
  40bc67:	lods   al,BYTE PTR ds:[esi]
  40bc68:	inc    ecx
  40bc69:	push   ebp
  40bc6a:	or     eax,0x52515bc9
  40bc6f:	or     BYTE PTR [ebx+eax*2],0x48
  40bc73:	xchg   esp,eax
  40bc74:	or     eax,0x61ef5a37
  40bc79:	fwait
  40bc7a:	or     DWORD PTR [ecx+0x6dd1c0be],edx
  40bc80:	pop    ss
  40bc81:	test   DWORD PTR [ebp+0x2b],0xaeff5dd7
  40bc88:	or     al,0xac
  40bc8a:	fidivr DWORD PTR [edi-0x44]
  40bc8d:	lods   eax,DWORD PTR ds:[esi]
  40bc8e:	cld    
  40bc8f:	out    dx,al
  40bc90:	jecxz  0x40bcb9
  40bc92:	dec    esi
  40bc93:	jne    0x40bc93
  40bc95:	xchg   edx,eax
  40bc96:	or     BYTE PTR [edx+0x2e],0xca
  40bc9a:	sbb    eax,0xe23054d3
  40bc9f:	leave  
  40bca0:	test   al,0x4
  40bca2:	push   es
  40bca3:	jge    0x40bc4e
  40bca5:	in     eax,dx
  40bca6:	dec    eax
  40bca7:	fistp  WORD PTR [edi]
  40bca9:	sub    eax,0x390415dd
  40bcae:	mov    dl,0xe1
  40bcb0:	xchg   DWORD PTR [edx],edx
  40bcb2:	imul   bl
  40bcb4:	jno    0x40bc3b
  40bcb6:	mov    eax,ds:0x627e9fc0
  40bcbb:	push   cs
  40bcbc:	aam    0xe3
  40bcbe:	mov    ch,0xcc
  40bcc0:	fs mov ecx,0xd1255bc7
  40bcc6:	xchg   edi,eax
  40bcc7:	adc    al,0x60
  40bcc9:	pop    ebp
  40bcca:	mov    BYTE PTR [edx],cl
  40bccc:	add    ah,BYTE PTR [eax+edi*1-0x8]
  40bcd0:	adc    DWORD PTR [ebx+0x572f9788],edi
  40bcd6:	jge    0x40bcb7
  40bcd8:	cld    
  40bcd9:	sub    bl,ah
  40bcdb:	loope  0x40bd37
  40bcdd:	ins    DWORD PTR es:[edi],dx
  40bcde:	retf   
  40bcdf:	add    bl,cl
  40bce1:	int    0x9a
  40bce3:	in     eax,0xc2
  40bce5:	cdq    
  40bce6:	jbe    0x40bca9
  40bce8:	in     eax,0xd4
  40bcea:	cli    
  40bceb:	call   0xe199:0xbb67298e
  40bcf2:	jno    0x40bce3
  40bcf4:	add    eax,0xa20f7ce1
  40bcf9:	inc    ebx
  40bcfa:	pop    eax
  40bcfb:	mov    bh,0x84
  40bcfd:	es enter 0xdbd5,0xd9
  40bd02:	jmp    0xb9fa:0xeec9543
  40bd09:	outs   dx,DWORD PTR ds:[esi]
  40bd0a:	inc    DWORD PTR [ecx+ebp*4-0x2e]
  40bd0e:	leave  
  40bd0f:	repz pusha 
  40bd11:	push   0xffffffa5
  40bd13:	fld    DWORD PTR [esi+0x65]
  40bd16:	push   ebp
  40bd17:	mov    BYTE PTR [eax],cl
  40bd19:	gs arpl dx,sp
  40bd1c:	cwde   
  40bd1d:	xlat   BYTE PTR ds:[ebx]
  40bd1e:	or     DWORD PTR [ebx+0x28c05d03],esi
  40bd24:	das    
  40bd25:	mov    ds:0x14bfad02,eax
  40bd2a:	inc    esp
  40bd2b:	mov    dl,0xfd
  40bd2d:	in     al,0xfb
  40bd2f:	fs in  eax,dx
  40bd31:	into   
  40bd32:	dec    esp
  40bd33:	pushf  
  40bd34:	sar    DWORD PTR [edi-0x25554209],0xb6
  40bd3b:	jae    0x40bd28
  40bd3d:	xor    bl,bh
  40bd3f:	adc    edi,esi
  40bd41:	pop    ds
  40bd42:	or     dl,ch
  40bd44:	add    edx,ebp
  40bd46:	push   ss
  40bd47:	retf   
  40bd48:	push   ebp
  40bd49:	ds mov ebp,0xeb44bdd7
  40bd4f:	imul   edi,eax,0x15
  40bd52:	xor    DWORD PTR [esp+edx*1-0x33],esp
  40bd56:	mov    ecx,0xe5bbcd5d
  40bd5b:	mov    eax,0xe8d8106c
  40bd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd61:	mov    edx,0x381fd2e6
  40bd66:	push   cs
  40bd67:	xchg   esp,eax
  40bd68:	ret    
  40bd69:	enter  0xebcb,0xb1
  40bd6d:	in     eax,0x6b
  40bd6f:	daa    
  40bd70:	jbe    0x40bd28
  40bd72:	mov    bl,0xc4
  40bd74:	lock ins DWORD PTR es:[edi],dx
  40bd76:	sub    al,0x9b
  40bd78:	sub    eax,0x8f718b74
  40bd7d:	stos   BYTE PTR es:[edi],al
  40bd7e:	push   0xbc0632d0
  40bd83:	xor    al,0xc0
  40bd85:	ret    
  40bd86:	or     al,0xb8
  40bd88:	stc    
  40bd89:	xor    BYTE PTR [eax+0xb5b3dea],cl
  40bd8f:	aas    
  40bd90:	mov    bl,0x5e
  40bd92:	ror    BYTE PTR [eax-0x39],1
  40bd95:	aad    0xa9
  40bd97:	call   0x29b:0x19770a50
  40bd9e:	ja     0x40bddd
  40bda0:	dec    DWORD PTR [eax]
  40bda2:	jne    0x40bd26
  40bda4:	shl    DWORD PTR [edx+0x68],1
  40bda7:	jb     0x40bdc6
  40bda9:	dec    ebx
  40bdaa:	jno    0x40bdaf
  40bdac:	add    esp,esp
  40bdae:	outs   dx,BYTE PTR ds:[esi]
  40bdaf:	retf   0xe4c4
  40bdb2:	aaa    
  40bdb3:	cmp    al,0x77
  40bdb5:	iret   
  40bdb6:	add    eax,0xde944bb7
  40bdbb:	out    dx,eax
  40bdbc:	popf   
  40bdbd:	jle    0x40bdb4
  40bdbf:	cs (bad) 
  40bdc1:	mov    edi,0x35e18336
  40bdc6:	ja     0x40bd4f
  40bdc8:	retf   
  40bdc9:	push   ds
  40bdca:	outs   dx,BYTE PTR ds:[esi]
  40bdcb:	es xchg ebp,eax
  40bdcd:	scas   eax,DWORD PTR es:[edi]
  40bdce:	sar    edi,1
  40bdd0:	mov    bl,0x97
  40bdd2:	or     dh,BYTE PTR [edi+eiz*8]
  40bdd5:	pop    edx
  40bdd6:	lods   al,BYTE PTR ds:[esi]
  40bdd7:	not    DWORD PTR [ebx+0x688caff1]
  40bddd:	mov    edi,0xcc508d3
  40bde2:	lods   eax,DWORD PTR ds:[esi]
  40bde3:	test   BYTE PTR [eax-0x37],ch
  40bde6:	in     al,dx
  40bde7:	xchg   ebx,eax
  40bde8:	outs   dx,DWORD PTR ds:[esi]
  40bde9:	inc    ecx
  40bdea:	in     eax,dx
  40bdeb:	jmp    0x40bdb6
  40bded:	fstp   QWORD PTR [esi+0x68743ab5]
  40bdf3:	and    ebx,edx
  40bdf5:	movzx  edx,WORD PTR [eax+0x6e]
  40bdf9:	mul    BYTE PTR [esi]
  40bdfb:	sar    BYTE PTR [ecx-0x26],0x9
  40bdff:	sahf   
  40be00:	mul    BYTE PTR [eax-0x57]
  40be03:	aas    
  40be04:	push   edx
  40be05:	and    al,BYTE PTR [edi+edx*2+0x5d4c2224]
  40be0c:	adc    al,0xa9
  40be0e:	sub    BYTE PTR [edx+0x3],ch
  40be11:	shl    DWORD PTR ds:0x13332cbf,0x6b
  40be18:	dec    eax
  40be19:	xlat   BYTE PTR ds:[ebx]
  40be1a:	pop    esi
  40be1b:	jecxz  0x40bdcb
  40be1d:	ret    0xcf52
  40be20:	xrelease xchg DWORD PTR [ebx-0x169194c],ecx
  40be27:	and    al,0x2
  40be29:	xchg   ecx,eax
  40be2a:	jmp    0x2a494afd
  40be2f:	jns    0x40be27
  40be31:	and    ecx,DWORD PTR [eax]
  40be33:	in     eax,0x25
  40be35:	sub    edi,DWORD PTR [edi+edx*2+0x2b]
  40be39:	dec    ebp
  40be3a:	push   ss
  40be3b:	in     eax,dx
  40be3c:	out    0xdb,al
  40be3e:	je     0x40bdf9
  40be40:	rcr    ah,1
  40be42:	imul   esp,esp,0xffffffa7
  40be45:	push   edi
  40be46:	cmp    DWORD PTR [edx],eax
  40be48:	fisubr DWORD PTR [esi+0x23]
  40be4b:	mov    ds:0xa179b844,al
  40be50:	shl    DWORD PTR [ecx-0x2e1535b9],1
  40be56:	std    
  40be57:	retf   
  40be58:	popa   
  40be59:	dec    ecx
  40be5a:	pusha  
  40be5b:	inc    bp
  40be5d:	jmp    0x40be32
  40be5f:	cdq    
  40be60:	mov    bh,0xb2
  40be62:	mov    ebx,0x58695c80
  40be67:	push   es
  40be68:	adc    DWORD PTR ds:0xb919a60d,ecx
  40be6e:	aad    0x83
  40be70:	fisubr DWORD PTR [esi+0x50]
  40be73:	push   ebp
  40be74:	dec    edx
  40be75:	cmp    BYTE PTR [edi],dh
  40be77:	pop    ebx
  40be78:	adc    BYTE PTR [esi+0x68],dh
  40be7b:	daa    
  40be7c:	cwde   
  40be7d:	or     eax,0xf12910ef
  40be82:	int    0x61
  40be84:	scas   eax,DWORD PTR es:[edi]
  40be85:	mov    es,WORD PTR [edi+eax*8]
  40be88:	push   esi
  40be89:	xchg   esp,eax
  40be8a:	or     eax,0x87a60a24
  40be8f:	jne    0x40bf0c
  40be91:	sub    eax,0xc07d63cc
  40be96:	xchg   BYTE PTR [esi-0x6c],bl
  40be99:	mov    al,0x48
  40be9b:	bound  edi,QWORD PTR [esp+ebp*8-0x1a]
  40be9f:	fist   DWORD PTR [edx+0x5c]
  40bea2:	popf   
  40bea3:	push   es
  40bea4:	les    ecx,FWORD PTR [edi+esi*2-0x27]
  40bea8:	stos   DWORD PTR es:[edi],eax
  40bea9:	and    eax,0x25ef6c58
  40beae:	dec    eax
  40beb0:	fwait
  40beb1:	rcr    DWORD PTR [ebx],1
  40beb3:	jle    0x40bf24
  40beb5:	rcl    edx,cl
  40beb7:	ss mov bh,0x18
  40beba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bebb:	mov    ebx,0xf0e195f8
  40bec0:	into   
  40bec1:	sbb    al,0xec
  40bec3:	aaa    
  40bec4:	div    BYTE PTR [ecx]
  40bec6:	xchg   ebx,eax
  40bec7:	jno    0x40bec7
  40bec9:	jl     0x40bf27
  40becb:	test   eax,0x9b410dfc
  40bed0:	xor    al,0xff
  40bed2:	out    dx,eax
  40bed3:	sbb    eax,0xa4f22023
  40bed8:	push   ecx
  40bed9:	or     ch,BYTE PTR [edx-0x74d7d223]
  40bedf:	lahf   
  40bee0:	mov    dl,0x45
  40bee2:	dec    eax
  40bee3:	push   esi
  40bee4:	jb     0x40bf4c
  40bee6:	jo     0x40be9e
  40bee8:	lods   al,BYTE PTR ds:[esi]
  40bee9:	aad    0xee
  40beeb:	fstp   TBYTE PTR [eax]
  40beed:	je     0x40bf55
  40beef:	and    cl,dh
  40bef1:	push   eax
  40bef2:	ja     0x40bef4
  40bef4:	ret    0x5465
  40bef7:	cmp    bl,bh
  40bef9:	add    dl,bh
  40befb:	call   0x888f:0x4416b3f6
  40bf02:	sbb    DWORD PTR [ebx-0x32fcf9fd],eax
  40bf08:	aaa    
  40bf09:	mul    DWORD PTR [ebx+0x39c8c528]
  40bf0f:	sbb    BYTE PTR [edx+edi*2+0x1a071a12],cl
  40bf16:	sbb    ah,al
  40bf18:	cmp    ch,BYTE PTR ds:0xd793ce1c
  40bf1e:	xor    ch,BYTE PTR [ebp+0x73d08a5a]
  40bf24:	sub    BYTE PTR [edi],ch
  40bf26:	adc    al,0x82
  40bf28:	loopne 0x40bf07
  40bf2a:	sahf   
  40bf2b:	cwde   
  40bf2c:	mov    al,ds:0xccba92c1
  40bf31:	jb     0x40bf20
  40bf33:	cli    
  40bf34:	adc    edi,DWORD PTR [edx-0x73]
  40bf37:	dec    esi
  40bf38:	mov    eax,0xe484c9f9
  40bf3d:	lods   eax,DWORD PTR ds:[esi]
  40bf3e:	mov    ebx,0xe60dfe79
  40bf43:	pop    edi
  40bf44:	sbb    ebx,esp
  40bf46:	add    eax,0x8450148f
  40bf4b:	jb     0x40bf9f
  40bf4d:	test   DWORD PTR [eax+0x59a2ac5f],eax
  40bf53:	mov    ebp,0x52cb3f93
  40bf58:	jmp    FWORD PTR [edx-0x58]
  40bf5b:	out    dx,al
  40bf5c:	imul   ecx,DWORD PTR [ebx],0xffffffd6
  40bf5f:	mov    esp,0x603af018
  40bf64:	inc    ebp
  40bf65:	adc    ebx,ebp
  40bf67:	mov    ah,0x56
  40bf69:	and    eax,0x44573f1
  40bf6e:	push   edx
  40bf6f:	push   0xffffffe3
  40bf71:	jno    0x40bf29
  40bf73:	pop    edi
  40bf74:	xor    eax,0x1d35e63b
  40bf79:	sbb    cl,cl
  40bf7b:	imul   ecx,DWORD PTR [edx-0x22],0x5c4c3af3
  40bf82:	sub    DWORD PTR [eax-0x69bd9cc0],0x5f
  40bf89:	and    ebp,DWORD PTR [ecx+0x1a]
  40bf8c:	(bad)  
  40bf8d:	jb     0x40bfaa
  40bf8f:	es enter 0xefff,0x1b
  40bf94:	add    BYTE PTR [esi+0x75],0x9
  40bf98:	mov    dl,0x59
  40bf9a:	jae    0x40bf4e
  40bf9c:	sub    DWORD PTR [ecx],ebx
  40bf9e:	stc    
  40bf9f:	call   0x8ca8:0xa72bed09
  40bfa6:	pop    ecx
  40bfa7:	lahf   
  40bfa8:	ins    DWORD PTR es:[edi],dx
  40bfa9:	and    eax,0x99d7a06
  40bfae:	and    al,0x22
  40bfb0:	int3   
  40bfb1:	(bad)  
  40bfb2:	fstp   TBYTE PTR [edi-0x78]
  40bfb5:	es pop esp
  40bfb7:	or     eax,0xb526a763
  40bfbc:	jle    0x40bf5d
  40bfbe:	ret    0x74b5
  40bfc1:	mov    eax,0x28221ff9
  40bfc6:	in     eax,0x8a
  40bfc8:	mov    dl,BYTE PTR [edx]
  40bfca:	stos   BYTE PTR es:[edi],al
  40bfcb:	js     0x40bfa5
  40bfcd:	popf   
  40bfce:	stos   BYTE PTR es:[edi],al
  40bfcf:	push   edx
  40bfd0:	pop    eax
  40bfd1:	mov    al,ds:0xc54e503f
  40bfd6:	or     eax,0x9b7150f0
  40bfdb:	xchg   edx,eax
  40bfdc:	sbb    eax,0x1b39b262
  40bfe1:	daa    
  40bfe2:	sti    
  40bfe3:	into   
  40bfe4:	nop
  40bfe5:	dec    edi
  40bfe6:	cli    
  40bfe7:	xchg   ebx,eax
  40bfe8:	inc    ebp
  40bfe9:	unpcklps xmm4,XMMWORD PTR [ebx+0x1db20550]
  40bff0:	jno    0x40bfb1
  40bff2:	dec    esp
  40bff3:	mov    ds:0xd01be4b3,al
  40bff8:	push   esi
  40bff9:	mov    dh,0x19
  40bffb:	jne    0x40c053
  40bffd:	ja     0x40c071
  40bfff:	and    ebx,ecx
  40c001:	xchg   esp,eax
  40c002:	cmp    al,0xd
  40c004:	repz jb 0x40bfb0
  40c007:	fldcw  WORD PTR [esi-0x6d76300c]
  40c00d:	mov    eax,0x65127768
  40c012:	ret    0x657
  40c015:	adc    cl,BYTE PTR [edi]
  40c017:	pop    edx
  40c018:	ror    DWORD PTR [ecx],0x21
  40c01b:	sub    ch,bl
  40c01d:	add    cl,BYTE PTR [ebx+0x3e39cb7b]
  40c023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c024:	push   esi
  40c025:	stos   DWORD PTR es:[edi],eax
  40c026:	jmp    0x40bfb6
  40c028:	ret    
  40c029:	xor    DWORD PTR [edi+0x6f],ebx
  40c02c:	aam    0x73
  40c02e:	pop    ebp
  40c02f:	pop    edx
  40c030:	lods   al,BYTE PTR ds:[esi]
  40c031:	pop    ss
  40c032:	pusha  
  40c033:	and    al,0xa2
  40c035:	jo     0x40c05b
  40c037:	fcomip st,st(2)
  40c039:	fnsave [edi-0xf6314b7]
  40c03f:	cmp    eax,0xcb887f10
  40c044:	xchg   edi,eax
  40c045:	cmp    BYTE PTR [esi-0x79c39864],dl
  40c04b:	add    DWORD PTR [esi+ebp*4+0x4fd8e982],ecx
  40c052:	das    
  40c053:	daa    
  40c054:	cld    
  40c055:	push   DWORD PTR ds:0xb6b3ac2a
  40c05b:	push   ecx
  40c05c:	out    0xbf,eax
  40c05e:	retf   
  40c05f:	popa   
  40c060:	fild   QWORD PTR [ecx-0x461aeb0c]
  40c066:	out    0x6c,al
  40c068:	dec    ebx
  40c069:	mov    bl,0x1c
  40c06b:	fidiv  DWORD PTR [eax-0x14]
  40c06e:	dec    edi
  40c06f:	mov    WORD PTR [ebp-0x27],?
  40c072:	mov    dh,0x4b
  40c074:	sub    eax,0xd0acab3d
  40c079:	push   ds
  40c07a:	sbb    dh,BYTE PTR [ebx+ebx*2+0x14a58937]
  40c081:	cli    
  40c082:	pusha  
  40c083:	inc    ebp
  40c084:	mov    ecx,0xfdaf8abd
  40c089:	cmp    DWORD PTR [edi],esi
  40c08b:	and    DWORD PTR [ecx],edx
  40c08d:	sti    
  40c08e:	adc    dl,BYTE PTR [esi+0x2b39c58f]
  40c094:	lds    esp,FWORD PTR [ebx]
  40c096:	xchg   edi,eax
  40c097:	test   al,0xd3
  40c099:	and    ah,bl
  40c09b:	cld    
  40c09c:	and    al,0x4b
  40c09e:	inc    ebx
  40c09f:	xchg   esi,eax
  40c0a0:	mov    esp,0xd29218c0
  40c0a5:	loope  0x40c0c2
  40c0a7:	cmp    bh,BYTE PTR [edi]
  40c0a9:	(bad)  
  40c0aa:	mov    edx,0x39877b2d
  40c0af:	je     0x40c11c
  40c0b1:	lock cmp ebx,0xffffffe0
  40c0b5:	pop    ebp
  40c0b6:	mov    DWORD PTR [edx+ebp*2+0x20],edx
  40c0ba:	sti    
  40c0bb:	xor    ecx,DWORD PTR [eax*1+0x2317ec05]
  40c0c2:	push   edi
  40c0c3:	cmp    al,0x51
  40c0c5:	pop    esp
  40c0c6:	or     bh,BYTE PTR [ebx]
  40c0c8:	dec    ebp
  40c0c9:	jmp    0x1269e08a
  40c0ce:	mov    bh,0x4f
  40c0d0:	mov    ah,0x81
  40c0d2:	std    
  40c0d3:	sbb    DWORD PTR [eax-0x3582b55],ebx
  40c0d9:	push   ebp
  40c0da:	inc    esp
  40c0db:	adc    al,0x7a
  40c0dd:	rol    DWORD PTR [esi-0x2078cbc],0x6e
  40c0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e5:	or     BYTE PTR [edx],cl
  40c0e7:	gs sbb esp,eax
  40c0ea:	stos   DWORD PTR es:[edi],eax
  40c0eb:	pop    ss
  40c0ec:	or     al,0x84
  40c0ee:	push   ebp
  40c0ef:	push   eax
  40c0f0:	add    al,0x96
  40c0f2:	adc    eax,edi
  40c0f4:	and    DWORD PTR [ebp+edi*8-0x1d],eax
  40c0f8:	adc    DWORD PTR gs:[esi-0x1a406a2a],0x742aa643
  40c103:	dec    ecx
  40c104:	xor    eax,0xc5ae72d4
  40c109:	adc    dl,ch
  40c10b:	sub    ch,BYTE PTR [ebx-0x540df780]
  40c111:	mov    edx,0x46d316e2
  40c116:	pop    esp
  40c117:	(bad)  
  40c118:	fstp   QWORD PTR [eax-0x6b]
  40c11b:	mov    eax,0x23e4936
  40c120:	pop    ebx
  40c121:	iret   
  40c122:	std    
  40c123:	jp     0x40c0a7
  40c125:	loopne 0x40c18e
  40c127:	xchg   esi,eax
  40c128:	cld    
  40c129:	shl    BYTE PTR [ecx-0x75],cl
  40c12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c12d:	adc    eax,DWORD PTR [ebp-0x3a]
  40c130:	and    eax,0x201dd6c0
  40c135:	jne    0x40c0c2
  40c137:	je     0x40c13f
  40c139:	lds    ecx,FWORD PTR [esi]
  40c13b:	mov    esi,DWORD PTR [eax+edx*8-0x39663fc8]
  40c142:	(bad)  
  40c143:	call   0x6c153c0f
  40c148:	pop    ecx
  40c149:	sbb    ch,BYTE PTR [eax+0x61d8530a]
  40c14f:	inc    ebp
  40c150:	int3   
  40c151:	ins    BYTE PTR es:[edi],dx
  40c152:	in     al,0x2f
  40c154:	adc    al,0x12
  40c156:	push   edx
  40c157:	sbb    eax,0x2002bd06
  40c15c:	pusha  
  40c15d:	mov    bh,0xee
  40c15f:	xor    al,0xc0
  40c161:	lods   al,BYTE PTR ds:[esi]
  40c162:	add    al,ah
  40c164:	mov    ch,BYTE PTR [eax]
  40c166:	retf   0x2d2
  40c169:	pushf  
  40c16a:	outs   dx,BYTE PTR ds:[esi]
  40c16b:	push   es
  40c16c:	push   0xf4a9b757
  40c171:	loopne 0x40c1c9
  40c173:	lea    ebx,[ecx+0x43]
  40c176:	rcl    DWORD PTR [edi+0x1],cl
  40c179:	pop    ds
  40c17a:	in     eax,dx
  40c17b:	or     dh,BYTE PTR [edx]
  40c17d:	push   ecx
  40c17e:	xor    eax,0xe001ae05
  40c183:	dec    ebx
  40c184:	retf   
  40c185:	xchg   esi,eax
  40c186:	scas   al,BYTE PTR es:[edi]
  40c187:	call   0x3150c7ab
  40c18c:	xchg   ebp,eax
  40c18d:	push   eax
  40c18e:	inc    edx
  40c18f:	scas   eax,DWORD PTR es:[edi]
  40c190:	ror    ch,0x9f
  40c193:	and    esi,DWORD PTR [edx+0x166ec6c5]
  40c199:	mov    esi,0xeca4be5a
  40c19e:	(bad)  
  40c19f:	mov    eax,0x4f424736
  40c1a4:	arpl   WORD PTR [eax-0x2119563c],sp
  40c1aa:	dec    esi
  40c1ab:	add    ecx,DWORD PTR [edx+0x3ef930ac]
  40c1b1:	enter  0x87ca,0x74
  40c1b5:	out    0xf1,al
  40c1b7:	jno    0x40c1e5
  40c1b9:	pop    ecx
  40c1ba:	and    cl,ch
  40c1bc:	outs   dx,DWORD PTR ds:[esi]
  40c1bd:	fistp  QWORD PTR [ebx]
  40c1bf:	fsub   DWORD PTR [esi+0x28b286f4]
  40c1c5:	cld    
  40c1c6:	imul   ebp,DWORD PTR [edi+ecx*2+0x5d9e9e83],0xffffffbb
  40c1ce:	jmp    0x40c179
  40c1d0:	clc    
  40c1d1:	shl    bl,cl
  40c1d3:	aad    0x40
  40c1d5:	cvtps2pi mm4,QWORD PTR [eax-0x18612919]
  40c1dc:	jno    0x40c1d1
  40c1de:	enter  0xabaf,0x4e
  40c1e2:	faddp  st(3),st
  40c1e4:	loope  0x40c1cb
  40c1e6:	cmp    al,0x54
  40c1e8:	inc    esp
  40c1e9:	sbb    bl,0x60
  40c1ec:	inc    ebx
  40c1ed:	add    eax,0x90d5d1a6
  40c1f2:	add    al,0xf7
  40c1f4:	xchg   ecx,eax
  40c1f5:	add    ebp,esp
  40c1f7:	fbstp  TBYTE PTR [edi-0x7]
  40c1fa:	sbb    esi,esi
  40c1fc:	mov    esp,0xf0bad51e
  40c201:	shl    ah,0xfd
  40c204:	dec    esi
  40c205:	cmp    eax,0x642db315
  40c20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20b:	ror    esi,cl
  40c20d:	pusha  
  40c20e:	adc    eax,0x5830dc24
  40c213:	rcr    esp,0xdc
  40c216:	int3   
  40c217:	sbb    edi,DWORD PTR ds:0x65cb5c9d
  40c21d:	cmp    esp,DWORD PTR [edi+edi*2]
  40c220:	out    0xc5,al
  40c222:	push   ebx
  40c223:	ja     0x40c286
  40c225:	mov    edx,0x2e4eb27b
  40c22a:	jmp    0x40c21c
  40c22c:	(bad)  
  40c22d:	sub    BYTE PTR [ecx-0x61],ah
  40c230:	jbe    0x40c256
  40c232:	es jp  0x40c1d3
  40c235:	push   ds
  40c236:	sti    
  40c237:	sbb    DWORD PTR [ecx],esp
  40c239:	or     al,al
  40c23b:	and    ecx,DWORD PTR [ebx]
  40c23d:	dec    edi
  40c23e:	mov    bh,0x96
  40c240:	pop    esi
  40c241:	shl    DWORD PTR [ebp-0x6c],1
  40c244:	ds sti 
  40c246:	add    ch,BYTE PTR [esi-0xbddc784]
  40c24c:	jge    0x40c257
  40c24e:	pop    ss
  40c24f:	das    
  40c250:	aas    
  40c251:	xchg   esi,eax
  40c252:	pop    eax
  40c253:	das    
  40c254:	mov    ebx,0x8d553a43
  40c259:	mov    BYTE PTR [edx+0x29fe3e4b],ah
  40c25f:	xchg   esp,eax
  40c260:	sub    al,0xa3
  40c262:	jl     0x40c210
  40c264:	std    
  40c265:	sbb    eax,0x3ee9b893
  40c26a:	adc    al,0x62
  40c26c:	pop    edx
  40c26d:	das    
  40c26e:	pop    edi
  40c26f:	cli    
  40c270:	sbb    bl,dh
  40c272:	stos   DWORD PTR es:[edi],eax
  40c273:	(bad)  
  40c275:	test   dl,dl
  40c277:	cli    
  40c278:	sub    DWORD PTR gs:[ebx-0x22],ebx
  40c27c:	sar    ch,1
  40c27e:	daa    
  40c27f:	sub    eax,0x56f46d2f
  40c284:	stos   BYTE PTR es:[edi],al
  40c285:	(bad)  
  40c286:	repz mov dl,dl
  40c289:	mov    ds:0x955d8f7a,al
  40c28e:	pusha  
  40c28f:	cdq    
  40c290:	pop    edi
  40c291:	data16 jo 0x40c27d
  40c294:	cmc    
  40c295:	into   
  40c296:	or     al,0xcf
  40c298:	sbb    edi,edx
  40c29a:	mov    al,ds:0xc429b697
  40c29f:	inc    edx
  40c2a0:	ret    0xf92
  40c2a3:	xor    dh,0x6
  40c2a6:	out    dx,al
  40c2a7:	lock das 
  40c2a9:	inc    ebp
  40c2aa:	fadd   st,st(1)
  40c2ac:	gs int 0x17
  40c2af:	lea    ebp,[edx+eiz*4]
  40c2b2:	add    BYTE PTR [edi],ch
  40c2b4:	pop    ebx
  40c2b5:	mov    WORD PTR [edx-0x62962d49],ds
  40c2bb:	adc    ch,BYTE PTR [esi+0x56]
  40c2be:	push   edx
  40c2bf:	xchg   edx,eax
  40c2c0:	std    
  40c2c1:	imul   ebp,esi,0x56898baa
  40c2c7:	repnz pop edi
  40c2c9:	lds    ebp,FWORD PTR [ecx-0x21]
  40c2cc:	mov    edx,DWORD PTR [eax-0x6f5e13eb]
  40c2d2:	jb     0x40c296
  40c2d4:	mov    bh,0xa2
  40c2d6:	jmp    0x5230c474
  40c2db:	les    ebp,FWORD PTR [ecx+eiz*1+0x17ca24b1]
  40c2e2:	push   eax
  40c2e3:	gs pusha 
  40c2e5:	cdq    
  40c2e6:	xchg   ecx,eax
  40c2e7:	mov    ebp,0x642ce936
  40c2ec:	cli    
  40c2ed:	adc    bh,ah
  40c2ef:	(bad)  [ecx]
  40c2f1:	fisub  WORD PTR [eax+0x147a7158]
  40c2f7:	add    al,0x7b
  40c2f9:	test   eax,0xfd00ff3b
  40c2fe:	(bad)  
  40c300:	xor    esp,DWORD PTR [edi+0x2ae74192]
  40c306:	rol    BYTE PTR [ebx+esi*1],cl
  40c309:	mov    bl,0x54
  40c30b:	scas   al,BYTE PTR es:[edi]
  40c30c:	sbb    al,0xac
  40c30e:	adc    DWORD PTR [ecx+0x26],ebp
  40c311:	jns    0x40c317
  40c313:	stos   DWORD PTR es:[edi],eax
  40c314:	aad    0x12
  40c316:	jns    0x40c368
  40c318:	ja     0x40c2c3
  40c31a:	loopne 0x40c2ed
  40c31c:	cmpps  xmm1,xmm3,0x4c
  40c320:	sbb    BYTE PTR [edi-0x4d6cc1c6],dh
  40c326:	(bad)  
  40c328:	dec    ebp
  40c329:	test   BYTE PTR [ecx+0x68c84808],dl
  40c32f:	(bad)  
  40c331:	je     0x40c3a5
  40c333:	scas   al,BYTE PTR es:[edi]
  40c334:	xchg   esp,eax
  40c336:	shl    DWORD PTR [ecx+0x34],0xc3
  40c33a:	ja     0x40c384
  40c33c:	int    0x34
  40c33e:	pop    edx
  40c33f:	jns    0x40c36a
  40c341:	les    ebp,FWORD PTR [edi-0x74]
  40c344:	or     DWORD PTR [edi-0x3ab1ab48],edi
  40c34a:	in     al,dx
  40c34b:	mov    ah,ch
  40c34d:	sbb    DWORD PTR [ebx+0x372404ea],eax
  40c353:	xchg   ecx,eax
  40c354:	mov    bh,al
  40c356:	inc    ebp
  40c357:	and    al,0xec
  40c359:	or     ebx,DWORD PTR [esi+0x45aa4be6]
  40c35f:	(bad)  
  40c360:	mov    edx,0xc1251374
  40c365:	jp     0x40c328
  40c367:	(bad)  
  40c368:	ss das 
  40c36a:	ror    BYTE PTR [esi+0x23],1
  40c36d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c36f:	add    ch,al
  40c371:	icebp  
  40c372:	iret   
  40c373:	inc    esi
  40c374:	mov    dl,0xa5
  40c376:	inc    esi
  40c377:	add    al,0x9f
  40c379:	dec    esi
  40c37a:	ret    0x60ba
  40c37d:	inc    edi
  40c37e:	xchg   ebx,eax
  40c37f:	lods   eax,DWORD PTR ds:[esi]
  40c380:	inc    edi
  40c381:	(bad)  
  40c382:	in     al,0x22
  40c384:	lea    ebx,[edi+ecx*4-0x2fb1ae87]
  40c38b:	jmp    DWORD PTR es:[ecx]
  40c38e:	push   esp
  40c38f:	int3   
  40c390:	mov    eax,fs:0xc0c6e070
  40c396:	and    al,0xa3
  40c398:	ds pop ss
  40c39a:	stos   DWORD PTR es:[edi],eax
  40c39b:	in     eax,0x0
  40c39d:	les    ebx,FWORD PTR [ebx]
  40c39f:	mov    ch,0x38
  40c3a1:	or     eax,0xbc096abc
  40c3a6:	test   DWORD PTR [ebp+0x3a3d4f0a],0x7c4f8334
  40c3b0:	adc    BYTE PTR [eax+0x5f8903ca],0x80
  40c3b7:	xchg   DWORD PTR [esi-0xa],edx
  40c3ba:	lods   al,BYTE PTR ds:[esi]
  40c3bb:	(bad)  
  40c3bc:	xchg   ecx,eax
  40c3bd:	rol    BYTE PTR [esi-0x5f946d7],0x61
  40c3c4:	mov    esi,0xc74696fc
  40c3c9:	inc    esp
  40c3ca:	and    eax,0xaa9e6965
  40c3cf:	and    dh,ch
  40c3d1:	pop    esp
  40c3d2:	xor    al,bh
  40c3d4:	sbb    DWORD PTR [edi-0x5d],ebp
  40c3d7:	xor    DWORD PTR [ecx],ebx
  40c3d9:	test   bl,dl
  40c3db:	mov    ah,0xbb
  40c3dd:	xchg   esp,eax
  40c3de:	add    eax,eax
  40c3e0:	jno    0x40c38c
  40c3e2:	xor    al,0x4
  40c3e4:	call   0x72d9:0x7a70b3ba
  40c3eb:	jle    0x40c3c7
  40c3ed:	(bad)  
  40c3ee:	push   ss
  40c3ef:	cwde   
  40c3f0:	or     al,0x4c
  40c3f2:	mov    edi,0xf1ff6ce2
  40c3f7:	out    0x85,eax
  40c3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3fa:	xchg   ebp,eax
  40c3fb:	cmp    edx,esp
  40c3fd:	lahf   
  40c3fe:	pop    esi
  40c3ff:	(bad)  
  40c400:	cdq    
  40c401:	lods   al,BYTE PTR ds:[esi]
  40c402:	and    bh,ah
  40c404:	scas   al,BYTE PTR es:[edi]
  40c405:	or     edx,DWORD PTR [ecx]
  40c407:	test   eax,0x6113f7f7
  40c40c:	or     eax,0x62058929
  40c411:	mov    edi,0xe6048094
  40c416:	and    bh,BYTE PTR [ebp+0x6d9210e9]
  40c41c:	sub    cl,BYTE PTR [ebx-0xb2ea22c]
  40c422:	or     bh,BYTE PTR [ebx+0x1b12d9cf]
  40c428:	or     DWORD PTR [ebx-0x3f],ebx
  40c42b:	push   ecx
  40c42c:	and    eax,0xd8477c2f
  40c431:	add    eax,ebp
  40c433:	inc    edx
  40c434:	xor    eax,0xb01b732c
  40c439:	ds dec edi
  40c43b:	sbb    ecx,edi
  40c43d:	pusha  
  40c43e:	repz icebp 
  40c440:	hlt    
  40c441:	add    esi,DWORD PTR ds:[esi-0x6c]
  40c445:	ret    0x1938
  40c448:	add    bh,BYTE PTR [eax-0x6a]
  40c44b:	jne    0x40c48e
  40c44d:	mov    BYTE PTR [ebp-0x1958a309],bl
  40c453:	or     ebx,DWORD PTR [edi+0x2a]
  40c456:	fmul   DWORD PTR [ecx-0x68]
  40c459:	adc    DWORD PTR [ecx+0x25ce1582],esp
  40c45f:	xor    BYTE PTR [ebx-0x80],dh
  40c462:	es inc ebp
  40c464:	push   cs
  40c465:	cld    
  40c466:	push   esi
  40c467:	adc    BYTE PTR [edi],0xde
  40c46a:	cs stc 
  40c46c:	(bad)  
  40c46d:	mov    ds:0xec0145aa,eax
  40c472:	(bad)
  40c475:	xchg   ebp,eax
  40c476:	shl    BYTE PTR [eax-0x198d302c],cl
  40c47c:	imul   ebp,DWORD PTR [ebp-0x11404bb9],0xffffffe3
  40c483:	sbb    dl,BYTE PTR [ebx-0x4cfa3bf0]
  40c489:	adc    eax,0x1fad1145
  40c48e:	and    al,0xb0
  40c490:	xor    eax,0xfa541fd8
  40c495:	xor    esi,DWORD PTR [edi]
  40c497:	xchg   BYTE PTR [ecx-0xb6735c6],bl
  40c49d:	add    ebp,DWORD PTR [ecx-0x6f27f17f]
  40c4a3:	cwde   
  40c4a4:	xlat   BYTE PTR ds:[ebx]
  40c4a5:	inc    edx
  40c4a6:	jmp    ebp
  40c4a8:	int    0xb
  40c4aa:	int    0x9f
  40c4ac:	in     al,0x4
  40c4ae:	sbb    ebx,eax
  40c4b0:	and    esi,DWORD PTR [ecx]
  40c4b2:	or     BYTE PTR [ecx-0x3faf8400],0x38
  40c4b9:	lods   al,BYTE PTR ds:[esi]
  40c4ba:	inc    ebp
  40c4bb:	ficomp DWORD PTR [esi-0x1d8968fa]
  40c4c1:	(bad)
  40c4c5:	mov    esp,0x3c4d38
  40c4ca:	pop    ebx
  40c4cb:	pop    edx
  40c4cc:	cmc    
  40c4cd:	hlt    
  40c4ce:	inc    esi
  40c4cf:	xor    al,0x84
  40c4d1:	mov    BYTE PTR [esi+0x6cb7e77a],ch
  40c4d7:	fidivr WORD PTR [ebp-0xa]
  40c4da:	shl    DWORD PTR [esi],1
  40c4dc:	or     BYTE PTR [edi],dl
  40c4de:	adc    ch,bh
  40c4e0:	sbb    bl,BYTE PTR [edi+ebx*4]
  40c4e3:	or     DWORD PTR [esi],0xffffffa1
  40c4e6:	pop    ebx
  40c4e7:	sti    
  40c4e8:	sub    eax,0x87b947dc
  40c4ed:	call   0x1f46:0xcdb45b57
  40c4f4:	mov    ebx,0xf80f2c34
  40c4fa:	mov    esp,0xf14ab01c
  40c4ff:	adc    al,0x4b
  40c501:	mov    edi,0xacc268e4
  40c506:	push   es
  40c507:	jns    0x40c4ce
  40c509:	add    eax,0x755ea5ee
  40c50e:	sub    al,0x7e
  40c510:	ja     0x40c588
  40c512:	sbb    al,0x6c
  40c514:	or     al,BYTE PTR [esp+ebp*8]
  40c517:	loop   0x40c585
  40c519:	call   0x6d0d22fa
  40c51e:	out    0x25,al
  40c520:	sub    BYTE PTR [ebp-0x39a9aaa5],0x81
  40c527:	ror    DWORD PTR [esp+ebx*2+0x5f],1
  40c52b:	jnp    0x40c56c
  40c52d:	jne    0x40c4c4
  40c52f:	aas    
  40c530:	sar    BYTE PTR [edi-0x78791682],cl
  40c536:	push   eax
  40c537:	mov    ecx,0x4d5fa2f9
  40c53c:	repz loope 0x40c4cb
  40c53f:	push   ecx
  40c540:	in     al,0x99
  40c542:	cwde   
  40c543:	sub    DWORD PTR [edi+0x7b],ebp
  40c546:	(bad)  
  40c547:	call   FWORD PTR [edi+0x3b]
  40c54a:	jbe    0x40c5ac
  40c54c:	push   ds
  40c54d:	ret    0x1bc5
  40c550:	(bad)  
  40c551:	pop    edi
  40c552:	mov    al,0x1d
  40c554:	mov    eax,0xa04befd1
  40c559:	ins    DWORD PTR es:[edi],dx
  40c55a:	dec    ebx
  40c55b:	leave  
  40c55c:	mov    eax,0xc0d78a98
  40c561:	inc    ebx
  40c562:	out    0xc0,eax
  40c564:	(bad)  
  40c565:	(bad)  
  40c566:	pop    esi
  40c567:	and    ebp,0x77
  40c56a:	xchg   ecx,eax
  40c56b:	(bad)  [ebp+0x510efaf2]
  40c571:	jns    0x40c5d2
  40c573:	loope  0x40c5d3
  40c575:	ds loopne 0x40c5db
  40c578:	mov    dl,0xb7
  40c57a:	sbb    edx,esp
  40c57c:	inc    ebp
  40c57d:	cs and al,0x79
  40c580:	cmp    al,0x1a
  40c582:	dec    esi
  40c583:	ins    BYTE PTR es:[edi],dx
  40c584:	add    eax,0x2c514484
  40c589:	dec    edi
  40c58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58b:	xchg   ah,bl
  40c58d:	loope  0x40c603
  40c58f:	mov    bl,0x5d
  40c591:	ds jecxz 0x40c5ac
  40c594:	aas    
  40c595:	push   edx
  40c596:	clc    
  40c597:	adc    al,0x4
  40c599:	stos   DWORD PTR es:[edi],eax
  40c59a:	test   eax,0x35497714
  40c59f:	shr    BYTE PTR [edi],1
  40c5a1:	out    dx,eax
  40c5a2:	(bad)  
  40c5a3:	retf   0x7e48
  40c5a6:	(bad)  
  40c5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a8:	pop    es
  40c5a9:	adc    BYTE PTR [edi],bh
  40c5ab:	xor    al,0x72
  40c5ad:	(bad)  
  40c5ae:	std    
  40c5af:	push   edi
  40c5b0:	jg     0x40c58e
  40c5b2:	pop    ds
  40c5b3:	(bad)  
  40c5b4:	(bad)  
  40c5b5:	jle    0x40c587
  40c5b7:	inc    ebx
  40c5b8:	mov    esp,0x7d863df8
  40c5bd:	jbe    0x40c5e5
  40c5bf:	shl    DWORD PTR [esi+0x1e],cl
  40c5c2:	hlt    
  40c5c3:	hlt    
  40c5c4:	aas    
  40c5c5:	stos   DWORD PTR es:[edi],eax
  40c5c6:	adc    DWORD PTR [ebp+0x60],edx
  40c5c9:	es dec ebp
  40c5cb:	into   
  40c5cc:	cmp    eax,0xce4a4638
  40c5d1:	dec    ebp
  40c5d2:	out    dx,eax
  40c5d3:	hlt    
  40c5d4:	cmc    
  40c5d5:	jb     0x40c5e3
  40c5d7:	xor    DWORD PTR [edi+esi*4-0x591ff08d],ecx
  40c5de:	and    BYTE PTR [esi],ch
  40c5e0:	arpl   WORD PTR [edx+0x4e],bx
  40c5e3:	or     al,0xc5
  40c5e5:	ret    
  40c5e6:	mov    ah,0x5c
  40c5e8:	imul   edi,DWORD PTR [edx+edx*8-0x43cf84f5],0x3a214d0d
  40c5f3:	aas    
  40c5f4:	sub    dh,BYTE PTR [eax+0x11]
  40c5f7:	push   edx
  40c5f8:	mov    bl,0x6c
  40c5fa:	jg     0x40c5a4
  40c5fc:	dec    ebp
  40c5fd:	mov    esi,0xc63f3c16
  40c602:	sbb    ebp,esi
  40c604:	push   ecx
  40c605:	sbb    DWORD PTR [ecx],edi
  40c607:	sbb    edi,esp
  40c609:	scas   eax,DWORD PTR es:[edi]
  40c60a:	fcomp  DWORD PTR [edi-0x5f]
  40c60d:	jne    0x40c594
  40c60f:	xchg   BYTE PTR [ebx-0x33],ch
  40c612:	inc    ebp
  40c613:	mov    ecx,0x29bc1dec
  40c618:	inc    ebx
  40c619:	out    dx,al
  40c61a:	dec    ecx
  40c61b:	nop
  40c61c:	fnsave [edx-0x71e15757]
  40c622:	bound  edi,QWORD PTR [eax+0x2b06f7d0]
  40c628:	xor    edx,DWORD PTR ss:[ebx+0x8]
  40c62c:	pusha  
  40c62d:	push   ecx
  40c62e:	fucomip st,st(3)
  40c630:	sub    al,0xc4
  40c633:	out    dx,al
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	mov    bl,0x7d
  40cc3f:	into   
  40cc40:	je     0x40cc3a
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	data16 fdivr DWORD PTR [edi]
  40cc4c:	inc    ebp
  40cc4d:	inc    ecx
  40cc4e:	retf   
  40cc4f:	mov    al,0x51
  40cc51:	aas    
  40cc52:	pop    ebx
  40cc53:	mov    al,0x5f
  40cc55:	xlat   BYTE PTR ds:[ebx]
  40cc56:	shl    BYTE PTR [eax+eiz*4-0x2ed6b09],0x20
  40cc5e:	mov    esp,DWORD PTR [ecx-0x3a]
  40cc61:	inc    edx
  40cc62:	mov    bl,0xe6
  40cc64:	mov    bh,0x7a
  40cc66:	push   0xfd1a9437
  40cc6b:	test   BYTE PTR [ebx+0x347a9b94],dh
  40cc71:	jp     0x40cc22
  40cc73:	or     eax,0xa0ecea27
  40cc78:	pop    edx
  40cc79:	xchg   edx,eax
  40cc7a:	inc    eax
  40cc7b:	mov    ah,0x28
  40cc7d:	mov    al,ds:0xabee7202
  40cc82:	in     al,0x50
  40cc84:	jnp    0x40cc66
  40cc86:	out    dx,eax
  40cc87:	hlt    
  40cc88:	fldpi  
  40cc8a:	sar    BYTE PTR [esi],0xe
  40cc8d:	nop
  40cc8e:	sbb    al,0x75
  40cc90:	(bad)  
  40cc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc92:	(bad)  
  40cc94:	xor    bl,0x97
  40cc97:	or     BYTE PTR [edx],ah
  40cc99:	out    0xe1,al
  40cc9b:	sub    BYTE PTR ds:0xaf07d037,dl
  40cca1:	xor    BYTE PTR [esi-0x58],bh
  40cca4:	mov    ebx,0x6edff6ee
  40cca9:	sbb    al,0x12
  40ccab:	push   es
  40ccac:	es adc eax,0x60c37da
  40ccb2:	add    DWORD PTR [ebx],0xffffff87
  40ccb5:	jmp    0xe404:0x48d9bc77
  40ccbc:	mov    DWORD PTR [edx],edi
  40ccbe:	add    BYTE PTR [edi+0x59],ch
  40ccc1:	imul   esi,ebx,0x68a69586
  40ccc7:	arpl   bp,dx
  40ccc9:	sub    eax,0xb9815138
  40ccce:	cmp    eax,0xb58fbea3
  40ccd3:	test   al,0x9e
  40ccd5:	std    
  40ccd6:	jo     0x40cd3c
  40ccd8:	and    ebp,DWORD PTR [ebx*1-0x6665a753]
  40ccdf:	mov    edx,0x535c5b65
  40cce4:	mov    edi,0x382a1db8
  40cce9:	mov    dh,0x59
  40cceb:	pop    ds
  40ccec:	clc    
  40cced:	test   BYTE PTR [esi+0x45],cl
  40ccf0:	mov    ah,0xe3
  40ccf2:	iret   
  40ccf3:	paddusb mm2,mm3
  40ccf6:	mov    ds:0xdf613ad4,eax
  40ccfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfc:	cmp    BYTE PTR [edx],0x70
  40ccff:	rep ins BYTE PTR es:[edi],dx
  40cd01:	push   ds
  40cd02:	mov    ebp,0x441df394
  40cd07:	fild   DWORD PTR [ebp+0x51d21702]
  40cd0d:	jo     0x40cd8b
  40cd0f:	push   es
  40cd10:	enter  0xb49b,0x98
  40cd14:	pop    edi
  40cd15:	fcmove st,st(2)
  40cd17:	mov    ds:0xed767206,al
  40cd1c:	retf   0x5a4
  40cd1f:	ret    0xf950
  40cd22:	ja     0x40cd26
  40cd24:	dec    ecx
  40cd25:	mov    cl,0xdb
  40cd27:	int    0x34
  40cd29:	sub    edx,DWORD PTR [edi]
  40cd2b:	push   ecx
  40cd2c:	jb     0x40cd02
  40cd2e:	jle    0x40cd3e
  40cd30:	xchg   esi,eax
  40cd31:	inc    eax
  40cd32:	mov    eax,ds:0x5a1ad92c
  40cd37:	push   edx
  40cd38:	push   esi
  40cd39:	fild   QWORD PTR [ecx+esi*8+0x97286b8]
  40cd40:	xor    ebp,DWORD PTR [eax+0x2f]
  40cd43:	jae    0x40cdbc
  40cd45:	ror    BYTE PTR [eax],1
  40cd47:	lds    ebp,FWORD PTR [eax+ecx*1]
  40cd4a:	push   ds
  40cd4b:	jb     0x40cd54
  40cd4d:	cwde   
  40cd4e:	test   DWORD PTR [edi+0x74d94d6b],ecx
  40cd54:	out    dx,eax
  40cd55:	push   eax
  40cd56:	(bad)  
  40cd57:	jg     0x40cd4a
  40cd59:	loopne 0x40cdc4
  40cd5b:	sahf   
  40cd5c:	sbb    al,0x6e
  40cd5e:	sbb    al,0xc3
  40cd60:	inc    edx
  40cd61:	and    eax,0x59fd5700
  40cd66:	in     al,0x34
  40cd68:	push   ecx
  40cd69:	pop    es
  40cd6a:	dec    ebx
  40cd6b:	test   BYTE PTR [esi+0x60e3b990],cl
  40cd71:	retf   
  40cd72:	push   0xaf10743d
  40cd77:	sbb    eax,DWORD PTR [ecx-0x364bc70c]
  40cd7d:	and    al,0x80
  40cd7f:	inc    ecx
  40cd80:	mov    dl,0x19
  40cd82:	in     al,0xd0
  40cd84:	pop    eax
  40cd85:	rol    bl,0x75
  40cd88:	mov    ?,WORD PTR [ebx-0x885e472]
  40cd8e:	push   ds
  40cd8f:	mov    esi,0x3ef7db58
  40cd94:	(bad)  
  40cd95:	stos   BYTE PTR es:[edi],al
  40cd96:	jno    0x40cdc5
  40cd98:	repnz mov esi,0xbd783310
  40cd9e:	jns    0x40ce13
  40cda0:	mov    bl,BYTE PTR [edi+esi*1-0x230a977b]
  40cda7:	mov    bl,0x42
  40cda9:	(bad)  
  40cdab:	fcom   DWORD PTR [esp+ebx*2-0x26560de2]
  40cdb2:	sbb    ebp,eax
  40cdb4:	cmp    BYTE PTR [ebx],dh
  40cdb6:	xchg   edi,eax
  40cdb7:	or     BYTE PTR [edx-0x6f],dl
  40cdba:	aas    
  40cdbb:	pop    ss
  40cdbc:	inc    ebx
  40cdbd:	fst    QWORD PTR [eax+0xa]
  40cdc0:	dec    eax
  40cdc1:	pop    ebx
  40cdc2:	xchg   esp,eax
  40cdc3:	or     eax,0xf627fd8f
  40cdc8:	pushf  
  40cdc9:	inc    esp
  40cdca:	pop    esi
  40cdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcc:	cmp    bl,BYTE PTR [edx]
  40cdce:	push   ebx
  40cdcf:	inc    edx
  40cdd0:	out    dx,al
  40cdd1:	adc    BYTE PTR [eax+0x10],bh
  40cdd4:	or     eax,0x76161b50
  40cdd9:	test   dl,ch
  40cddb:	(bad)  
  40cddd:	in     eax,0xd4
  40cddf:	les    ebp,FWORD PTR [edx+0x54]
  40cde2:	test   DWORD PTR [eax+ebx*8+0x23],ebx
  40cde6:	xor    DWORD PTR [ebx],0xc723de6e
  40cdec:	xchg   edx,eax
  40cded:	ds std 
  40cdef:	sahf   
  40cdf0:	jo     0x40cd99
  40cdf2:	push   es
  40cdf3:	stos   BYTE PTR es:[edi],al
  40cdf4:	cmp    ah,BYTE PTR [edx+0x2b]
  40cdf7:	sbb    al,0xad
  40cdf9:	xchg   esi,eax
  40cdfa:	xor    dl,dl
  40cdfc:	and    BYTE PTR [edi+0x12],bh
  40cdff:	xchg   ecx,eax
  40ce00:	icebp  
  40ce01:	push   edx
  40ce02:	push   edx
  40ce03:	call   0xc2bc:0x2540a26f
  40ce0a:	jg     0x40ce72
  40ce0c:	daa    
  40ce0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0e:	ja     0x40ce48
  40ce10:	jmp    0x40ce5e
  40ce12:	out    dx,al
  40ce13:	ins    BYTE PTR es:[edi],dx
  40ce14:	outs   dx,BYTE PTR ds:[esi]
  40ce15:	pop    esi
  40ce16:	in     al,0xac
  40ce18:	jb     0x40cda9
  40ce1a:	(bad)  
  40ce1c:	cwde   
  40ce1d:	jo     0x40cda4
  40ce1f:	mov    al,ds:0x50564cc7
  40ce24:	pop    edi
  40ce25:	inc    edx
  40ce26:	push   esp
  40ce27:	xchg   edi,esi
  40ce29:	and    al,0xc
  40ce2b:	sar    BYTE PTR [esp+ebx*2-0x1a636504],0x2a
  40ce33:	adc    al,0x20
  40ce35:	popf   
  40ce36:	mov    edx,0x28e36748
  40ce3b:	add    dl,BYTE PTR [ebx+eax*2-0x76]
  40ce3f:	pushf  
  40ce40:	adc    eax,0x991f99ae
  40ce45:	jmp    0x40ce2e
  40ce47:	xor    dh,BYTE PTR [edx]
  40ce49:	mov    eax,ds:0xcd3a25aa
  40ce4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce4f:	xor    eax,0xbbb2f18f
  40ce54:	retf   
  40ce55:	ds retf 0xc6d5
  40ce59:	aaa    
  40ce5a:	adc    eax,0x94177381
  40ce5f:	out    dx,al
  40ce60:	test   BYTE PTR [esi],dl
  40ce62:	test   BYTE PTR [esi-0x76],bh
  40ce65:	in     eax,0x98
  40ce67:	inc    esp
  40ce68:	ror    DWORD PTR [ebx-0x3b],cl
  40ce6b:	jg     0x40cec0
  40ce6d:	ror    bl,1
  40ce6f:	xor    esi,DWORD PTR gs:0x4d852412
  40ce76:	idiv   DWORD PTR [ebx-0x11d2aad6]
  40ce7c:	call   0x8a69:0x21689c5c
  40ce83:	mov    esp,0x41058577
  40ce88:	xor    ecx,edx
  40ce8a:	mov    ds:0x4b00050b,al
  40ce8f:	adc    eax,0xbfa18085
  40ce94:	and    eax,DWORD PTR [esi-0x79]
  40ce97:	inc    ebx
  40ce98:	mov    bh,dh
  40ce9a:	call   0xbca03cc6
  40ce9f:	jmp    0xde69:0x808cd3d7
  40cea6:	cmp    al,BYTE PTR [esi+eiz*8+0x2b]
  40ceaa:	adc    al,0xcb
  40ceac:	push   es
  40cead:	jge    0x40cf13
  40ceaf:	xor    eax,0x5371b82d
  40ceb4:	cs push edi
  40ceb6:	sbb    edi,edx
  40ceb8:	aas    
  40ceb9:	dec    ebx
  40ceba:	and    eax,0xba8b41a4
  40cebf:	rcl    DWORD PTR [ecx],0x9a
  40cec2:	xor    edx,0x3a1c5df5
  40cec8:	stos   DWORD PTR es:[edi],eax
  40cec9:	(bad)  
  40ceca:	in     al,0x3a
  40cecc:	jno    0x40ce71
  40cece:	ja     0x40ce7f
  40ced0:	push   edi
  40ced1:	push   edx
  40ced2:	fcom   DWORD PTR [ebx]
  40ced4:	shr    BYTE PTR [ecx+0x6a34c8fe],0x5e
  40cedb:	gs lock (bad) 
  40cede:	cmp    BYTE PTR [edx],0xd9
  40cee1:	out    0x10,al
  40cee3:	(bad)  
  40cee4:	mov    esp,0x8faa82e4
  40cee9:	pop    esp
  40ceea:	int3   
  40ceeb:	pop    ecx
  40ceec:	gs es les eax,FWORD PTR ds:[edx-0x1d]
  40cef2:	push   ecx
  40cef3:	rcr    ah,0x70
  40cef6:	adc    ah,BYTE PTR [edi+0xc]
  40cef9:	shl    DWORD PTR [esi],1
  40cefb:	mov    bh,0xbe
  40cefd:	mov    dl,0xf8
  40ceff:	cmc    
  40cf00:	jb     0x40ceeb
  40cf02:	ds push es
  40cf04:	lock dec esi
  40cf06:	push   esp
  40cf07:	aaa    
  40cf08:	into   
  40cf09:	inc    eax
  40cf0a:	int    0x30
  40cf0c:	dec    ecx
  40cf0d:	bound  ebp,QWORD PTR [ecx+0x2e]
  40cf10:	not    BYTE PTR [ebx-0x14]
  40cf13:	sbb    ah,cl
  40cf15:	mov    dl,0xaf
  40cf17:	push   esi
  40cf18:	xchg   esp,eax
  40cf19:	dec    edi
  40cf1a:	jg     0x40cee4
  40cf1c:	pusha  
  40cf1d:	or     eax,0xd7b1a35f
  40cf22:	daa    
  40cf23:	xchg   ebx,eax
  40cf24:	and    eax,0xbdf5fa29
  40cf29:	mov    edi,0xaed1dd86
  40cf2e:	cmc    
  40cf2f:	push   esi
  40cf30:	mov    eax,ds:0x18619992
  40cf35:	xchg   DWORD PTR [eax+0x72],ecx
  40cf38:	addr16 adc edi,ebp
  40cf3b:	mov    cl,0xb6
  40cf3d:	pop    edi
  40cf3e:	jecxz  0x40cf08
  40cf40:	es cld 
  40cf42:	imul   eax,DWORD PTR ds:0xa1a5e6f1,0x77
  40cf49:	retf   
  40cf4a:	addr16 mov ds:0x7e3,al
  40cf4e:	add    ecx,edx
  40cf50:	mov    eax,ds:0xaa231a6f
  40cf55:	aaa    
  40cf56:	mov    ds:0xd5d45e8a,al
  40cf5b:	sbb    ecx,DWORD PTR [edi+0x156414fb]
  40cf61:	pushf  
  40cf62:	xchg   edi,esi
  40cf64:	into   
  40cf65:	mov    cl,0xca
  40cf67:	pusha  
  40cf68:	cmp    bl,BYTE PTR ds:0x2d9672f6
  40cf6e:	icebp  
  40cf6f:	es je  0x40cef4
  40cf72:	repnz dec DWORD PTR [edx+0x10]
  40cf76:	loop   0x40cfa5
  40cf78:	ror    BYTE PTR es:[edi+eax*4+0x49ddabae],0xc8
  40cf81:	out    dx,al
  40cf82:	mov    al,fs:0x1fd3c06f
  40cf88:	mov    eax,ds:0x7690733f
  40cf8d:	stc    
  40cf8e:	out    0xf4,eax
  40cf90:	test   DWORD PTR [ecx],eax
  40cf92:	dec    ebp
  40cf93:	sbb    BYTE PTR [edx+0x754a87b],ah
  40cf99:	xchg   ah,bl
  40cf9b:	or     BYTE PTR [edi-0x6e486b52],dh
  40cfa1:	rol    BYTE PTR [edx],cl
  40cfa3:	adc    esp,esp
  40cfa5:	loope  0x40cfb0
  40cfa7:	mov    gs,WORD PTR [esi+ecx*8-0x7d]
  40cfab:	inc    ebp
  40cfac:	adc    DWORD PTR [ecx+0x12],0xfffffff6
  40cfb0:	test   eax,0x794c37f7
  40cfb5:	jnp    0x40cfc1
  40cfb7:	stc    
  40cfb8:	ins    DWORD PTR es:[edi],dx
  40cfb9:	fs pop ecx
  40cfbb:	mov    cl,0x4d
  40cfbd:	loopne 0x40cfe6
  40cfbf:	sbb    edx,DWORD PTR [edi+edi*1+0x2a209c6a]
  40cfc6:	lds    ebp,FWORD PTR [ebx]
  40cfc8:	pop    ebx
  40cfc9:	mov    dh,0x87
  40cfcb:	add    dl,BYTE PTR [ecx-0x35]
  40cfce:	adc    DWORD PTR [ebx],edx
  40cfd0:	mov    edi,0x3d81870d
  40cfd5:	outs   dx,DWORD PTR ds:[esi]
  40cfd6:	mov    ds:0xa79f2217,al
  40cfdb:	ds dec eax
  40cfdd:	(bad)  
  40cfde:	sbb    eax,0x5ae5c931
  40cfe3:	jp     0x40cff0
  40cfe5:	dec    ebx
  40cfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe7:	inc    esi
  40cfe8:	cmp    al,0x2d
  40cfea:	shr    BYTE PTR [eax+0x22e1815d],1
  40cff0:	dec    ebp
  40cff1:	push   0xf86af203
  40cff6:	jbe    0x40d031
  40cff8:	ror    esi,0xca
  40cffb:	ror    eax,0x5d
  40cffe:	cld    
  40cfff:	push   ecx
  40d000:	sbb    eax,0x817cf44c
  40d005:	into   
  40d006:	jnp    0x40d055
  40d008:	mov    esi,0xbbdaa275
  40d00d:	dec    edx
  40d00e:	mov    edx,0x9ed131ab
  40d013:	xchg   ecx,eax
  40d014:	xchg   esp,eax
  40d015:	and    DWORD PTR ss:[eax-0x58b7c431],ebx
  40d01c:	jle    0x40d030
  40d01e:	cmp    ebp,DWORD PTR [ecx-0xdc2739f]
  40d024:	inc    ebp
  40d025:	jns    0x40cfb3
  40d027:	dec    eax
  40d028:	mov    ds:0x27b6a881,al
  40d02d:	cli    
  40d02e:	jbe    0x40d08f
  40d030:	pop    ebx
  40d031:	mov    eax,ecx
  40d033:	pop    edx
  40d034:	arpl   WORD PTR ss:[ebx+0x1c],bp
  40d038:	xchg   edx,eax
  40d039:	sbb    ch,BYTE PTR [edx+ebx*2-0x21]
  40d03d:	mov    edi,0x332055ca
  40d042:	adc    al,0x69
  40d044:	sbb    dh,dl
  40d046:	jle    0x40d093
  40d048:	pop    ebx
  40d049:	mov    dh,0xa2
  40d04b:	and    eax,0xcdaf8e7f
  40d050:	sbb    bl,BYTE PTR [ecx]
  40d052:	jl     0x40d0c4
  40d054:	ss jp  0x40cfe7
  40d057:	out    dx,al
  40d058:	lods   eax,DWORD PTR ds:[esi]
  40d059:	mov    ?,WORD PTR [ebx]
  40d05b:	pop    esi
  40d05c:	ret    0x4655
  40d05f:	jnp    0x40d097
  40d061:	ds es sbb dl,ch
  40d065:	sbb    DWORD PTR [ebx-0x37b57c11],ecx
  40d06b:	dec    ebx
  40d06c:	ins    BYTE PTR es:[edi],dx
  40d06d:	jns    0x40cff3
  40d06f:	popa   
  40d070:	jne    0x40d023
  40d072:	jmp    0x40d077
  40d074:	popf   
  40d075:	add    dl,dl
  40d077:	xor    ah,BYTE PTR [esi]
  40d079:	leave  
  40d07a:	cmp    al,0x9b
  40d07c:	enter  0xb87d,0xf4
  40d080:	sub    eax,0x4b01cc67
  40d085:	push   0xf7d1af07
  40d08a:	pop    ebx
  40d08b:	mov    bh,0x15
  40d08d:	cdq    
  40d08e:	adc    DWORD PTR [ebp-0x6c2592b3],0x5f
  40d095:	out    dx,eax
  40d096:	popf   
  40d097:	test   eax,0x24a2a1ca
  40d09c:	aaa    
  40d09d:	jno    0x40d109
  40d09f:	push   0xf46b5352
  40d0a4:	das    
  40d0a5:	xchg   ebx,eax
  40d0a6:	das    
  40d0a7:	dec    ebp
  40d0a8:	data16 cmp BYTE PTR [ecx-0x3],bl
  40d0ac:	mov    ch,0x3f
  40d0ae:	mov    ah,0x6d
  40d0b0:	std    
  40d0b1:	add    eax,0xa3dc3e94
  40d0b6:	aaa    
  40d0b7:	jbe    0x40d072
  40d0b9:	and    eax,0xa8fbe350
  40d0be:	daa    
  40d0bf:	add    ah,cl
  40d0c1:	pop    eax
  40d0c2:	loopne 0x40d083
  40d0c4:	outs   dx,BYTE PTR ds:[esi]
  40d0c5:	les    ecx,FWORD PTR [edi+0x7c]
  40d0c8:	loope  0x40d07c
  40d0ca:	pop    DWORD PTR [esi+eax*4+0x3e3fb6d8]
  40d0d1:	dec    ecx
  40d0d2:	push   ss
  40d0d3:	lock adc DWORD PTR [edi-0xd1a1c0f],eax
  40d0da:	sbb    al,bh
  40d0dc:	fimul  WORD PTR [ebp-0x5b9e40c5]
  40d0e2:	shl    eax,1
  40d0e4:	rol    DWORD PTR [esi+0x1f],cl
  40d0e7:	or     al,0x46
  40d0e9:	cmp    DWORD PTR [edi+ebx*1-0x45],0xffffffd2
  40d0ee:	xchg   ebp,eax
  40d0ef:	mov    ah,BYTE PTR [ecx-0x45a7b338]
  40d0f5:	out    0xd9,al
  40d0f7:	(bad)
  40d0fa:	sbb    BYTE PTR [ecx-0x36],dh
  40d0fd:	lods   eax,DWORD PTR ds:[esi]
  40d0fe:	mov    DWORD PTR [eax-0x5697880f],ebp
  40d104:	adc    BYTE PTR [ebx-0x3edcd37b],bh
  40d10a:	shl    DWORD PTR [ebp-0x36],0x9e
  40d10e:	mov    BYTE PTR [ebx+0x75],bh
  40d111:	adc    ebx,DWORD PTR [ecx+0x42]
  40d114:	push   0xffffffe0
  40d116:	lahf   
  40d117:	pop    ds
  40d118:	(bad)  
  40d11a:	jmp    0x40d128
  40d11c:	xor    DWORD PTR [esp+ecx*8+0x12],eax
  40d120:	fwait
  40d121:	clc    
  40d122:	or     DWORD PTR [esi+0x62],ebp
  40d125:	bound  esp,QWORD PTR [edx]
  40d127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d128:	jecxz  0x40d184
  40d12a:	and    edx,ebx
  40d12c:	ret    
  40d12d:	sbb    al,0x5c
  40d12f:	mov    BYTE PTR [ebx-0x39f7c830],0x70
  40d136:	push   esi
  40d137:	xchg   BYTE PTR [edi+0x58],al
  40d13a:	ss pop edx
  40d13d:	xor    BYTE PTR [edx+0x13a93007],bl
  40d143:	cld    
  40d144:	(bad)  
  40d145:	and    al,cl
  40d147:	scas   al,BYTE PTR es:[edi]
  40d148:	mov    dh,0x31
  40d14a:	pop    edi
  40d14b:	sbb    al,0x1c
  40d14d:	pop    ss
  40d14e:	enter  0x3fb2,0xa6
  40d152:	push   es
  40d153:	enter  0xd765,0x9a
  40d157:	push   cs
  40d158:	fdivr  QWORD PTR [ebp+0x58]
  40d15b:	out    0x10,eax
  40d15d:	retf   
  40d15e:	repnz sbb eax,0x50eefb2a
  40d164:	xchg   esp,eax
  40d165:	or     al,0x25
  40d167:	mov    gs,WORD PTR [ecx]
  40d169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d16a:	fwait
  40d16b:	jae    0x40d1c2
  40d16d:	clc    
  40d16e:	add    ecx,ebp
  40d170:	daa    
  40d171:	pop    es
  40d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d173:	xchg   DWORD PTR [ebx],ebp
  40d175:	or     BYTE PTR [eax+0x5c85c7ae],dh
  40d17b:	or     ch,dl
  40d17d:	(bad)  
  40d17e:	xor    BYTE PTR [edx-0x3af0bad5],ah
  40d184:	loop   0x40d12a
  40d186:	pop    ebx
  40d187:	mov    esp,0x1256eb5d
  40d18c:	fst    QWORD PTR [esi-0x473c901]
  40d192:	xchg   esi,eax
  40d193:	pop    ebp
  40d194:	lea    edx,ss:[ebx+0x3c]
  40d198:	mov    esp,0x1f6290be
  40d19d:	add    BYTE PTR [edi+edi*8-0x73],dh
  40d1a1:	repnz xchg edx,eax
  40d1a3:	out    dx,al
  40d1a4:	inc    edx
  40d1a5:	mov    ebp,0x1859cec2
  40d1aa:	es inc ecx
  40d1ac:	dec    edx
  40d1ad:	and    BYTE PTR [edi-0x33],dl
  40d1b0:	shl    BYTE PTR [edx+0x59],1
  40d1b3:	inc    esp
  40d1b4:	ret    
  40d1b5:	je     0x40d194
  40d1b7:	jmp    0x96289fb6
  40d1bc:	dec    ebp
  40d1bd:	repz or dh,BYTE PTR [eax-0x44]
  40d1c1:	loopne 0x40d213
  40d1c3:	sti    
  40d1c4:	jo     0x40d1f6
  40d1c6:	jp     0x40d18d
  40d1c8:	inc    ebp
  40d1c9:	pop    ebx
  40d1ca:	adc    edx,DWORD PTR [eax-0x60e67fb6]
  40d1d0:	mov    BYTE PTR [ebp+0x261ccd76],ch
  40d1d6:	pop    edi
  40d1d7:	jle    0x40d1eb
  40d1d9:	or     BYTE PTR [esp+eiz*8-0x35bbb3c2],0x85
  40d1e1:	ss (bad) 
  40d1e3:	adc    al,0x3
  40d1e5:	pop    esi
  40d1e6:	inc    eax
  40d1e7:	xchg   esi,eax
  40d1e8:	add    DWORD PTR [eax+0x53],ecx
  40d1eb:	inc    edx
  40d1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ed:	push   ss
  40d1ee:	mov    ds:0x3198ad69,eax
  40d1f3:	adc    ah,cl
  40d1f5:	jge    0x40d230
  40d1f7:	inc    edi
  40d1f8:	push   ebx
  40d1f9:	xchg   edi,eax
  40d1fa:	stc    
  40d1fb:	inc    eax
  40d1fc:	jl     0x40d219
  40d1fe:	jo     0x40d1a8
  40d200:	push   esi
  40d201:	sub    DWORD PTR [edi],edx
  40d203:	fmul   DWORD PTR [ebx]
  40d205:	cmc    
  40d206:	shl    DWORD PTR [ebx+0x5b],cl
  40d209:	test   edi,0x53f58695
  40d20f:	and    DWORD PTR [ecx+0x2a],esi
  40d212:	ins    BYTE PTR es:[edi],dx
  40d213:	into   
  40d214:	(bad)  
  40d215:	repz cmp eax,0x1cdeb11d
  40d21b:	daa    
  40d21c:	iret   
  40d21d:	sbb    DWORD PTR [ebx-0x3303eb53],ecx
  40d223:	ins    BYTE PTR es:[edi],dx
  40d224:	inc    ebp
  40d225:	ficomp DWORD PTR [eiz*2+0x4dbb812f]
  40d22c:	(bad)  
  40d22d:	mov    ch,0x74
  40d22f:	outs   dx,BYTE PTR ds:[esi]
  40d230:	icebp  
  40d231:	mov    ah,0xa3
  40d233:	je     0x40d21f
  40d235:	mov    DWORD PTR [eax-0x4240434c],ecx
  40d23b:	mov    ebp,0x3d3e43
  40d240:	or     DWORD PTR [edi-0x36a68f10],edx
  40d246:	sub    al,0x7f
  40d248:	in     eax,dx
  40d249:	xor    bh,BYTE PTR [eax-0x797c0833]
  40d24f:	mov    ecx,0xaeeeb363
  40d254:	sbb    al,0x2e
  40d256:	enter  0xb60c,0x24
  40d25a:	jmp    0xa437:0xe4a2dd3a
  40d261:	jle    0x40d28a
  40d263:	mov    ?,esp
  40d265:	push   ebp
  40d266:	icebp  
  40d267:	pusha  
  40d268:	ds sbb eax,0x6960809
  40d26e:	jnp    0x40d237
  40d270:	sbb    eax,0x1e2d5eca
  40d275:	mov    ah,bh
  40d277:	in     eax,0x6c
  40d279:	cmc    
  40d27a:	shl    BYTE PTR ds:0x8b64cc76,cl
  40d280:	mov    edx,0x73864b37
  40d285:	out    dx,al
  40d286:	mov    bl,0xcc
  40d288:	xchg   esp,eax
  40d289:	push   esp
  40d28a:	mov    eax,ds:0xd4ef8555
  40d28f:	scas   al,BYTE PTR es:[edi]
  40d290:	nop
  40d291:	push   edi
  40d292:	sub    al,0xfd
  40d294:	lods   al,BYTE PTR ds:[esi]
  40d295:	ret    
  40d296:	sbb    DWORD PTR [ebx-0x57],esp
  40d299:	cs pop ds
  40d29b:	loope  0x40d26b
  40d29d:	rcr    DWORD PTR [ecx+ecx*1],cl
  40d2a0:	adc    BYTE PTR [esi],cl
  40d2a2:	and    BYTE PTR [ebp+eax*8-0xea7de1d],dl
  40d2a9:	adc    al,0xa6
  40d2ab:	and    bh,BYTE PTR ds:0x1753318d
  40d2b1:	sub    BYTE PTR [eax+0x6a],ch
  40d2b4:	fcom   DWORD PTR ss:[esi+eiz*8+0x79b28619]
  40d2bc:	xchg   ebx,eax
  40d2bd:	adc    eax,edi
  40d2bf:	lea    ebx,[eax-0xc]
  40d2c2:	sbb    eax,0x5d2d9b3a
  40d2c7:	lahf   
  40d2c8:	add    eax,0x82888bf5
  40d2cd:	icebp  
  40d2ce:	stos   BYTE PTR es:[edi],al
  40d2cf:	and    edx,0xffffff8e
  40d2d2:	out    0xf1,al
  40d2d4:	cmp    BYTE PTR [eax+0x2cd24707],al
  40d2da:	jl     0x40d2a9
  40d2dc:	cdq    
  40d2dd:	mov    BYTE PTR [ebp+esi*1+0x64],cl
  40d2e1:	add    al,0xb5
  40d2e3:	call   0x31bde3cd
  40d2e8:	ins    BYTE PTR es:[edi],dx
  40d2e9:	mov    ecx,0x3a697265
  40d2ee:	jmp    0xbca5:0xd213fb66
  40d2f5:	and    ch,dh
  40d2f7:	jge    0x40d27a
  40d2f9:	icebp  
  40d2fa:	sub    ebp,ebx
  40d2fc:	xor    cl,BYTE PTR [eax-0x2ee6c955]
  40d302:	add    edx,DWORD PTR [ecx]
  40d304:	xchg   esp,eax
  40d305:	ins    BYTE PTR es:[edi],dx
  40d306:	jmp    0x40d290
  40d308:	push   esp
  40d309:	mov    ebx,0xf6262f22
  40d30e:	inc    edx
  40d30f:	inc    esi
  40d310:	push   0x42
  40d312:	sub    al,0xb1
  40d314:	mov    WORD PTR [ecx+esi*2+0x1],fs
  40d318:	or     esi,DWORD PTR [edx-0x43]
  40d31b:	adc    esi,edi
  40d31d:	cmp    eax,0xf42fe24d
  40d322:	jp     0x40d2c6
  40d324:	and    BYTE PTR [ebx+ebp*8+0x2a],dl
  40d328:	cmp    DWORD PTR [eax],edx
  40d32a:	call   0x9b98:0xd06514a
  40d331:	dec    eax
  40d332:	jnp    0x40d3a9
  40d334:	mov    WORD PTR [eax],cs
  40d336:	push   esp
  40d337:	cmp    edi,DWORD PTR [edx]
  40d339:	popf   
  40d33a:	(bad)  
  40d33c:	xor    eax,0xb542e038
  40d341:	aad    0x9d
  40d343:	jge    0x40d338
  40d345:	add    eax,0xf8fd45b5
  40d34a:	push   eax
  40d34b:	sub    DWORD PTR [edi-0x5e],ebx
  40d34e:	fmul   DWORD PTR [ebx]
  40d350:	cmp    DWORD PTR ds:0xb7abfd22,esi
  40d356:	pusha  
  40d357:	pop    ebx
  40d358:	sar    DWORD PTR [edx+0x3eb94d3c],0xdc
  40d35f:	jl     0x40d2e6
  40d361:	dec    esi
  40d362:	sub    al,0x97
  40d364:	push   esi
  40d365:	outs   dx,DWORD PTR ds:[esi]
  40d366:	rol    DWORD PTR [edi+0x11710cd9],cl
  40d36c:	pop    ss
  40d36d:	push   cs
  40d36e:	inc    eax
  40d36f:	dec    edi
  40d370:	ss fmul st,st(1)
  40d373:	popa   
  40d374:	dec    esi
  40d375:	mov    esp,0x3d90e6a4
  40d37a:	and    BYTE PTR [esi+0x3a],dl
  40d37d:	loop   0x40d308
  40d37f:	fcomp  st(1)
  40d381:	sar    BYTE PTR [ebp-0x25],cl
  40d384:	jns    0x40d32a
  40d386:	xor    bh,BYTE PTR [edx+esi*4-0x26af5d5e]
  40d38d:	pop    edi
  40d38e:	addr16 jmp 0x40d409
  40d391:	je     0x40d39d
  40d393:	shl    BYTE PTR ds:0xe32f19d3,1
  40d399:	shl    bh,0x12
  40d39c:	ja     0x40d36f
  40d39e:	pop    eax
  40d39f:	or     BYTE PTR [ebx-0xf],bl
  40d3a2:	inc    esp
  40d3a3:	imul   esp,DWORD PTR [esp+esi*4+0x74670dee],0x16
  40d3ab:	adc    cl,ch
  40d3ad:	out    0x98,eax
  40d3af:	into   
  40d3b0:	or     eax,DWORD PTR [edi+ebp*4]
  40d3b3:	jb     0x40d3a5
  40d3b5:	jmp    0x76974353
  40d3ba:	ins    DWORD PTR es:[edi],dx
  40d3bb:	icebp  
  40d3bc:	adc    DWORD PTR [esi],0xffffff8c
  40d3bf:	pop    ds
  40d3c0:	lods   eax,DWORD PTR ds:[esi]
  40d3c1:	cmp    DWORD PTR [esi-0x79932c11],edx
  40d3c7:	fisubr WORD PTR [eax]
  40d3c9:	mov    ah,0xbf
  40d3cb:	push   ebp
  40d3cc:	sar    DWORD PTR ds:0x12f037f7,cl
  40d3d2:	and    esp,DWORD PTR [ecx+0x19]
  40d3d5:	lods   al,BYTE PTR ds:[esi]
  40d3d6:	addr16 loop 0x40d400
  40d3d9:	add    eax,0x5d6f7c05
  40d3de:	add    BYTE PTR [ebx+0x25311fb5],cl
  40d3e4:	xchg   ebx,eax
  40d3e5:	jmp    0x40d36a
  40d3e7:	aam    0xfd
  40d3e9:	and    DWORD PTR [eax+0x7220d0aa],ebp
  40d3ef:	xor    BYTE PTR [eax+0x78],cl
  40d3f2:	rcr    BYTE PTR [edi+edx*8+0x5072632a],cl
  40d3f9:	add    eax,eax
  40d3fb:	scas   eax,DWORD PTR es:[edi]
  40d3fc:	jmp    0xa708:0x90f1116c
  40d403:	xchg   esp,eax
  40d404:	pop    edx
  40d405:	pushf  
  40d406:	cli    
  40d407:	iret   
  40d408:	fld    DWORD PTR [ecx-0x6401a465]
  40d40e:	fistp  QWORD PTR [eax+0x627e89d]
  40d414:	mov    BYTE PTR [ebp-0x36905739],dl
  40d41a:	inc    esi
  40d41b:	mov    DWORD PTR [edx+0x26bf2125],ebp
  40d421:	aam    0x77
  40d423:	ins    BYTE PTR es:[edi],dx
  40d424:	nop
  40d425:	test   cl,ah
  40d427:	inc    ebx
  40d428:	pop    ss
  40d429:	sti    
  40d42a:	ficomp WORD PTR [edi+edx*2-0x69]
  40d42e:	mov    edi,0xf06a54b7
  40d433:	jne    0x40d441
  40d435:	or     ebx,edi
  40d437:	mov    al,ds:0x72d2cf19
  40d43c:	fstp   TBYTE PTR [eax-0xb]
  40d43f:	mov    edx,0x328fa280
  40d444:	(bad)  
  40d445:	(bad)  
  40d446:	push   ebx
  40d447:	add    ecx,DWORD PTR [ecx-0x6a]
  40d44a:	scas   al,BYTE PTR es:[edi]
  40d44b:	jnp    0x40d437
  40d44d:	xor    eax,0xb741eeee
  40d452:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d454:	pop    edi
  40d455:	iret   
  40d456:	retf   0x54cb
  40d459:	rol    DWORD PTR [edx-0x5fad76ba],0x9a
  40d460:	sbb    edi,DWORD PTR fs:[ebx]
  40d463:	lods   eax,DWORD PTR ds:[esi]
  40d464:	mov    esp,0x8fc18aa6
  40d469:	hlt    
  40d46a:	clc    
  40d46b:	in     al,0xdf
  40d46d:	mov    WORD PTR [ecx],es
  40d46f:	not    ch
  40d471:	mov    ebp,0x2eef9f4b
  40d476:	adc    ebp,DWORD PTR [edx-0x6b96aba8]
  40d47c:	shl    BYTE PTR [eax-0x4319bba1],0xce
  40d483:	and    bl,BYTE PTR [edx]
  40d485:	cmp    eax,0xd625b711
  40d48a:	xor    bh,dl
  40d48c:	retf   0x7239
  40d48f:	inc    esi
  40d490:	stc    
  40d491:	mov    DWORD PTR [eax],edx
  40d493:	pop    eax
  40d494:	mov    cl,0x98
  40d496:	shl    BYTE PTR [ecx-0x31a9afbe],cl
  40d49c:	add    dl,ah
  40d49e:	repz aam 0xec
  40d4a1:	xchg   ebp,eax
  40d4a2:	mov    edx,0x17ad303d
  40d4a7:	test   DWORD PTR ds:[ebx],edx
  40d4aa:	sub    al,0x31
  40d4ac:	add    ecx,DWORD PTR [esi+0x51]
  40d4af:	bound  ebp,QWORD PTR [ecx+eiz*2-0x250f21f4]
  40d4b6:	mov    ebp,ebx
  40d4b8:	repnz dec esp
  40d4ba:	pop    edx
  40d4bb:	xchg   esi,eax
  40d4bc:	xchg   ecx,eax
  40d4bd:	and    BYTE PTR [ebp-0x731f1141],0x45
  40d4c4:	add    eax,0xb0c419ea
  40d4c9:	mov    eax,0xc4561c33
  40d4ce:	loope  0x40d4a3
  40d4d0:	int3   
  40d4d1:	imul   edx,DWORD PTR [ebp-0x4ad07624],0xffffffaa
  40d4d8:	push   0xdbdf2581
  40d4dd:	and    esp,edx
  40d4df:	xchg   edx,eax
  40d4e0:	add    DWORD PTR [ebx],0x4cad5660
  40d4e6:	repnz leave 
  40d4e8:	je     0x40d548
  40d4ea:	sub    al,al
  40d4ec:	loope  0x40d4a4
  40d4ee:	mov    bh,0xa0
  40d4f0:	push   ecx
  40d4f1:	sahf   
  40d4f2:	mov    bh,0x6f
  40d4f4:	rcl    BYTE PTR [esi+eiz*8-0x6d],cl
  40d4f8:	je     0x40d565
  40d4fa:	inc    ebp
  40d4fb:	mov    eax,0xf83ada57
  40d500:	das    
  40d501:	mov    ds:0x858004a8,al
  40d506:	mov    ebx,DWORD PTR [eax-0x552595b4]
  40d50c:	imul   BYTE PTR [esi+0xa]
  40d50f:	jl     0x40d51a
  40d511:	pop    es
  40d512:	cmp    BYTE PTR [edi+0x1c],bh
  40d515:	xor    eax,0x961d1ebe
  40d51a:	push   ebx
  40d51b:	stos   BYTE PTR es:[di],al
  40d51d:	mov    cl,0x8b
  40d51f:	mov    dl,BYTE PTR [ecx]
  40d521:	sti    
  40d522:	imul   eax,DWORD PTR ds:0x88c61d48,0x933915f4
  40d52c:	in     eax,dx
  40d52d:	into   
  40d52e:	cld    
  40d52f:	out    0x29,al
  40d531:	test   al,0xd9
  40d533:	inc    DWORD PTR [eax+ebx*4+0x141ddc4a]
  40d53a:	bound  ebp,QWORD PTR [ebp+0x650844cb]
  40d540:	into   
  40d541:	push   cs
  40d542:	cmp    ebx,edi
  40d544:	das    
  40d545:	jnp    0x40d55f
  40d547:	in     eax,0x61
  40d549:	lds    ecx,FWORD PTR [esi]
  40d54b:	and    eax,0xed7249ff
  40d550:	shl    BYTE PTR [eax+0x1e],cl
  40d553:	cmc    
  40d554:	xchg   edx,eax
  40d555:	or     esi,edx
  40d557:	sub    al,0xf6
  40d559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55a:	mov    dl,0x79
  40d55c:	add    eax,0x1c83840c
  40d561:	push   ecx
  40d562:	xchg   edx,eax
  40d563:	push   esp
  40d564:	bound  esi,QWORD PTR [edi+0x7a]
  40d567:	gs test ah,0xeb
  40d56b:	bound  esi,QWORD PTR [eax+ebp*4]
  40d56e:	pusha  
  40d56f:	and    ah,BYTE PTR [ecx-0x715078cc]
  40d575:	jbe    0x40d5a8
  40d577:	and    BYTE PTR [esi],bl
  40d579:	cmp    eax,DWORD PTR [esi+0x4f]
  40d57c:	push   cs
  40d57d:	fld    TBYTE PTR [ecx-0x5e330081]
  40d584:	scas   al,BYTE PTR es:[edi]
  40d585:	jnp    0x40d54a
  40d587:	push   esp
  40d588:	push   esi
  40d589:	rcl    BYTE PTR [edx-0x5005875f],1
  40d58f:	mov    cl,0x4e
  40d591:	sar    ebx,1
  40d593:	push   0x4f41d4f5
  40d598:	add    DWORD PTR [ebx+0x75],esp
  40d59b:	std    
  40d59c:	jbe    0x40d52f
  40d59e:	pushf  
  40d59f:	dec    ebp
  40d5a0:	xacquire xchg BYTE PTR [ebx-0x56235bf],cl
  40d5a7:	loope  0x40d58f
  40d5a9:	test   al,0x94
  40d5ab:	addr16 dec esp
  40d5ad:	retf   0xfd31
  40d5b0:	loope  0x40d5de
  40d5b2:	mov    ds:0xf81eef89,al
  40d5b7:	push   esp
  40d5b8:	test   BYTE PTR [edx-0x7b],0xaf
  40d5bc:	sar    edx,cl
  40d5be:	dec    esi
  40d5bf:	imul   ecx,DWORD PTR [edx],0xb5bd5dce
  40d5c5:	or     eax,0x20ffdb33
  40d5ca:	ror    DWORD PTR [edi+0x7],cl
  40d5cd:	iret   
  40d5ce:	mov    BYTE PTR [ebx*1-0x7755a23b],cl
  40d5d5:	inc    ecx
  40d5d6:	mov    bh,0x46
  40d5d8:	ss jg  0x40d5cd
  40d5db:	nop
  40d5dc:	inc    eax
  40d5dd:	jbe    0x40d5be
  40d5df:	rol    bh,1
  40d5e1:	cmp    BYTE PTR [ebp+0x4a],ah
  40d5e4:	int    0xf7
  40d5e6:	inc    ebx
  40d5e7:	jecxz  0x40d601
  40d5e9:	adc    BYTE PTR [edx+ebx*2-0x52],ah
  40d5ed:	fidiv  WORD PTR [eax+edi*4]
  40d5f0:	and    ebp,ebp
  40d5f2:	or     ah,BYTE PTR [edi-0x46]
  40d5f5:	popf   
  40d5f6:	mov    dh,0xd
  40d5f8:	call   0xbe1de699
  40d5fd:	sbb    bh,BYTE PTR [ecx]
  40d5ff:	add    ebx,DWORD PTR [edx+ebp*2+0x958adad]
  40d606:	jo     0x40d61f
  40d608:	mov    ebx,0x1e35a04f
  40d60d:	inc    sp
  40d60f:	test   ebx,0x246b0a0
  40d615:	test   BYTE PTR [eax+0x1a],bh
  40d618:	stos   DWORD PTR es:[edi],eax
  40d619:	inc    ebp
  40d61a:	call   FWORD PTR [ebp-0x5746bd97]
  40d620:	jge    0x40d5fa
  40d622:	imul   edi,DWORD PTR [eax],0xffffffac
  40d625:	mov    dh,0xbd
  40d627:	outs   dx,BYTE PTR ds:[esi]
  40d628:	inc    ebx
  40d629:	test   DWORD PTR [esi+0xc5a248],ecx
  40d62f:	sbb    al,0x14
  40d631:	mov    edx,0xfcfa2fc1
  40d636:	xor    BYTE PTR [edi],bh
  40d638:	popf   
  40d639:	jb     0x40d637
  40d63b:	sub    al,0x82
  40d63d:	mov    ds:0x61bf6579,eax
  40d642:	(bad)  
  40d643:	push   edx
  40d644:	mov    DWORD PTR [ebx-0x20],eax
  40d647:	outs   dx,BYTE PTR ds:[esi]
  40d648:	addr16 mov cl,0x74
  40d64b:	pop    ecx
  40d64c:	jo     0x40d649
  40d64e:	(bad)  
  40d64f:	das    
  40d650:	jnp    0x40d6c0
  40d652:	adc    al,0xfd
  40d654:	sbb    al,0x12
  40d656:	pop    edx
  40d657:	outs   dx,BYTE PTR ds:[esi]
  40d658:	xchg   DWORD PTR ds:0xffc1883f,esp
  40d65e:	sub    eax,0x9c2435bc
  40d663:	in     al,0x2f
  40d665:	(bad)  
  40d666:	ja     0x40d6bf
  40d668:	and    BYTE PTR [esp+eiz*4-0x1a],al
  40d66c:	sti    
  40d66d:	sub    ch,BYTE PTR [esi+ebx*1]
  40d670:	and    ecx,DWORD PTR fs:[ebx]
  40d673:	dec    BYTE PTR [eax-0x740daaa2]
  40d679:	xchg   ebx,eax
  40d67a:	dec    ecx
  40d67b:	stos   DWORD PTR es:[edi],eax
  40d67c:	gs inc esp
  40d67e:	pop    ebp
  40d67f:	inc    ebp
  40d680:	sbb    bl,dh
  40d682:	mov    esi,0xdf122603
  40d687:	cdq    
  40d688:	push   ds
  40d689:	add    al,0x49
  40d68b:	fdivr  DWORD PTR [esi]
  40d68d:	and    BYTE PTR [edx+ebp*2-0x46],cl
  40d691:	xor    esp,DWORD PTR [ecx+0x474ee10f]
  40d697:	push   cs
  40d698:	push   0xffffffd1
  40d69a:	xlat   BYTE PTR ds:[ebx]
  40d69b:	aas    
  40d69c:	xchg   BYTE PTR [edx],cl
  40d69e:	lea    ebp,[edi-0x36]
  40d6a1:	mov    BYTE PTR [ecx-0x5f137fd8],ch
  40d6a7:	sub    eax,0xe074fada
  40d6ac:	sub    eax,0xa12edd4c
  40d6b1:	mov    bh,0x4e
  40d6b3:	push   ds
  40d6b4:	cmp    al,0x40
  40d6b6:	cdq    
  40d6b7:	adc    cl,BYTE PTR [ecx+0x14]
  40d6ba:	mov    eax,0xfa745f13
  40d6bf:	add    eax,0xda1f1486
  40d6c4:	popa   
  40d6c5:	pop    esi
  40d6c6:	sub    DWORD PTR [eax+0x67],eax
  40d6c9:	inc    ebx
  40d6ca:	jo     0x40d701
  40d6cc:	aam    0x42
  40d6ce:	jns    0x40d6d0
  40d6d0:	add    DWORD PTR [edx+0x76dd941a],esp
  40d6d6:	mov    edx,0x29f02864
  40d6db:	cmp    al,0x65
  40d6dd:	clc    
  40d6de:	jbe    0x40d6f0
  40d6e0:	vdivps xmm0,xmm7,xmm5
  40d6e4:	add    BYTE PTR [eax+0x6e],bl
  40d6e7:	mov    cl,0x71
  40d6e9:	aam    0xa8
  40d6eb:	cmp    al,0x9c
  40d6ed:	jl     0x40d69e
  40d6ef:	ret    
  40d6f0:	jmp    0x40d6fe
  40d6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f3:	xchg   ecx,eax
  40d6f4:	lock mov BYTE PTR [eax],0xa9
  40d6f8:	lahf   
  40d6f9:	stos   BYTE PTR es:[edi],al
  40d6fa:	les    esp,FWORD PTR [ecx-0x38]
  40d6fd:	jmp    0x7dd4767f
  40d702:	add    eax,0x37c280ae
  40d707:	and    ebp,esi
  40d709:	ficom  WORD PTR [edi]
  40d70b:	jmp    0x40d746
  40d70d:	inc    DWORD PTR [edx-0x2d]
  40d710:	jne    0x40d6d3
  40d712:	jmp    0x2701:0x92295e1d
  40d719:	(bad)  
  40d71a:	fld    TBYTE PTR [ecx-0x1d]
  40d71d:	fist   WORD PTR [ebp-0x38]
  40d720:	add    DWORD PTR [ecx-0x5d5b1804],edx
  40d726:	xchg   esp,eax
  40d727:	add    al,0x61
  40d729:	sub    eax,0x5f2f8dde
  40d72e:	inc    eax
  40d72f:	js     0x40d6ec
  40d731:	push   ds
  40d732:	popf   
  40d733:	xchg   ebx,eax
  40d734:	jp     0x40d790
  40d736:	sbb    BYTE PTR [ecx],cl
  40d738:	add    eax,0xea654362
  40d73d:	in     eax,0x90
  40d73f:	and    dl,BYTE PTR [ebp+0x6ba5e4a4]
  40d745:	lahf   
  40d746:	adc    ebx,ebx
  40d748:	repz cmp DWORD PTR [eax],0x5
  40d74c:	and    BYTE PTR [esi+edx*8+0x5d97ff26],al
  40d753:	test   DWORD PTR [eax-0xc77083e],0x71b1c3f3
  40d75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d75e:	jp     0x40d744
  40d760:	call   0x58eb2dfe
  40d765:	cmp    ecx,DWORD PTR [ebp-0x4b]
  40d768:	sbb    ebx,DWORD PTR ds:[edx]
  40d76b:	(bad)  
  40d76c:	dec    esp
  40d76d:	mov    edx,DWORD PTR [edi]
  40d76f:	hlt    
  40d770:	retf   0xe98d
  40d773:	test   al,0x8f
  40d775:	pop    ds
  40d776:	cwde   
  40d777:	test   DWORD PTR ds:0x4512fa91,0x83237fcc
  40d781:	sar    bl,0x7f
  40d784:	adc    BYTE PTR [ecx+0x49058903],al
  40d78a:	pop    ebp
  40d78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78c:	in     eax,0x1e
  40d78e:	pushf  
  40d78f:	outs   dx,BYTE PTR ds:[esi]
  40d790:	mov    esp,0x708700ac
  40d795:	test   eax,0x27edd153
  40d79a:	ret    0xf4ba
  40d79d:	in     eax,dx
  40d79e:	pop    edi
  40d7a0:	popa   
  40d7a1:	jecxz  0x40d7ec
  40d7a3:	(bad)  
  40d7a5:	das    
  40d7a6:	cmp    ebx,DWORD PTR [esi]
  40d7a8:	into   
  40d7a9:	xchg   DWORD PTR [edx+0x6a35f54e],eax
  40d7af:	pop    edx
  40d7b0:	sbb    ebx,DWORD PTR [ebx]
  40d7b2:	in     al,0x17
  40d7b4:	and    BYTE PTR [eax+0x6a21ff20],bl
  40d7ba:	dec    edx
  40d7bb:	cmp    al,0xc1
  40d7bd:	lahf   
  40d7be:	push   ebx
  40d7bf:	or     al,0x2d
  40d7c1:	sbb    DWORD PTR [esi-0x7512b51f],ebx
  40d7c7:	aaa    
  40d7c8:	sub    DWORD PTR [edi+0x53b0ffd],ebx
  40d7ce:	pop    ss
  40d7cf:	(bad)  
  40d7d2:	mov    DWORD PTR [edi-0x58],esi
  40d7d5:	in     al,dx
  40d7d6:	mov    DWORD PTR [ecx+0x34],esi
  40d7d9:	test   eax,0x7eb7d840
  40d7de:	in     eax,dx
  40d7df:	sbb    bl,BYTE PTR [esi+0x4a9a6e88]
  40d7e5:	sbb    BYTE PTR [edi+0x4ac12bf0],dl
  40d7eb:	icebp  
  40d7ec:	imul   edx,ebp,0xffffff88
  40d7ef:	ror    DWORD PTR [ecx+0x75bddcaa],1
  40d7f5:	push   esi
  40d7f6:	dec    ah
  40d7f8:	pop    es
  40d7f9:	mov    dl,0xea
  40d7fb:	dec    ebx
  40d7fc:	test   ch,0x91
  40d7ff:	sub    BYTE PTR [esi+0x59ffd01a],cl
  40d805:	push   es
  40d806:	int    0xc1
  40d808:	gs js  0x40d7d4
  40d80b:	jae    0x40d82b
  40d80d:	mov    bh,0xed
  40d80f:	push   0x73
  40d811:	push   ecx
  40d812:	jp     0x40d7f6
  40d814:	dec    edi
  40d815:	mov    esi,0x12ba7a02
  40d81a:	stos   BYTE PTR es:[edi],al
  40d81b:	add    BYTE PTR [eax],dh
  40d81d:	lock sar ebp,cl
  40d820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d821:	hlt    
  40d822:	(bad)  
  40d823:	cdq    
  40d824:	aad    0x36
  40d826:	push   0xffffffa9
  40d828:	into   
  40d829:	stos   BYTE PTR es:[edi],al
  40d82a:	add    eax,esp
  40d82c:	adc    ah,BYTE PTR ds:0xdc5bea42
  40d832:	sub    BYTE PTR [ecx-0x47],ah
  40d835:	dec    edi
  40d836:	pop    es
  40d837:	retf   0x7ce0
  40d83a:	mov    al,ds:0xbf27ccdc
  40d83f:	loope  0x40d86c
  40d841:	rcl    DWORD PTR [ebx-0xc],cl
  40d844:	adc    ch,0x7
  40d847:	cmp    al,0x37
  40d849:	sub    DWORD PTR [edi+0x47],ebp
  40d84c:	sti    
  40d84d:	lds    ebx,FWORD PTR [edi]
  40d84f:	lds    ecx,FWORD PTR [eax-0x60]
  40d852:	add    DWORD PTR [edx+ebp*4+0x5996f64f],edx
  40d859:	ds out dx,eax
  40d85b:	sbb    edx,DWORD PTR [ecx+ecx*1+0x5f]
  40d85f:	mov    ecx,0xcf77869b
  40d864:	xor    edx,DWORD PTR [eax+0x74faea01]
  40d86a:	sub    bh,ch
  40d86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d86d:	xchg   ecx,eax
  40d86e:	test   al,0x33
  40d870:	dec    eax
  40d871:	pop    ebp
  40d872:	ins    BYTE PTR es:[edi],dx
  40d873:	in     al,0xa5
  40d875:	cmp    BYTE PTR [ebp-0x16],ah
  40d878:	jge    0x40d85b
  40d87a:	add    BYTE PTR [eax+0x54e5ec0b],bh
  40d880:	add    al,0x5b
  40d882:	imul   ebp,DWORD PTR [edx],0x83ec9adf
  40d888:	(bad)  [ecx]
  40d88a:	mov    al,ds:0xae6a234d
  40d88f:	shl    ebp,cl
  40d891:	pop    ds
  40d892:	xchg   edi,eax
  40d893:	pop    eax
  40d894:	mov    DWORD PTR [ecx+0x6e],esi
  40d897:	xor    eax,0x9fc77d94
  40d89c:	xor    al,0x53
  40d89e:	popf   
  40d89f:	sti    
  40d8a0:	pop    ss
  40d8a1:	add    bl,al
  40d8a3:	mov    edx,0x3460253e
  40d8a8:	scas   al,BYTE PTR es:[edi]
  40d8a9:	inc    esi
  40d8aa:	add    ebx,ebx
  40d8ac:	mov    ecx,0x3e433c91
  40d8b1:	xor    BYTE PTR [ecx],bl
  40d8b3:	mov    ds:0x276119b4,al
  40d8b8:	or     al,0x6
  40d8ba:	mov    al,bl
  40d8bc:	xchg   esi,eax
  40d8bd:	and    cl,0xcf
  40d8c0:	test   BYTE PTR [ecx-0x59],al
  40d8c3:	mov    edi,0xf165d352
  40d8c8:	add    edx,DWORD PTR [esi+0x31]
  40d8cb:	icebp  
  40d8cc:	adc    ah,BYTE PTR [esi+0x2f43cfcd]
  40d8d2:	or     DWORD PTR [esi+0x53d23f1e],edi
  40d8d8:	fs ins DWORD PTR es:[edi],dx
  40d8da:	scas   eax,DWORD PTR es:[edi]
  40d8db:	(bad)  
  40d8dc:	mov    dl,0x8b
  40d8de:	xchg   DWORD PTR [ebx],edi
  40d8e0:	aas    
  40d8e1:	xor    ch,BYTE PTR [eax]
  40d8e3:	rep stos BYTE PTR es:[edi],al
  40d8e5:	sub    BYTE PTR [ebp-0x245e4a2d],cl
  40d8eb:	adc    al,0x3d
  40d8ed:	ss dec edi
  40d8ef:	out    0x60,eax
  40d8f1:	xchg   ebx,eax
  40d8f2:	cmp    esi,DWORD PTR [ebx+0x59]
  40d8f5:	ret    
  40d8f6:	pushf  
  40d8f7:	pop    edi
  40d8f8:	ds xchg esi,eax
  40d8fa:	and    ebx,DWORD PTR [ebx]
  40d8fc:	and    ebx,DWORD PTR [eax]
  40d8fe:	pop    esp
  40d8ff:	xchg   ah,al
  40d901:	popa   
  40d902:	or     al,0xa6
  40d904:	jnp    0x40d946
  40d906:	sar    DWORD PTR [edx],1
  40d908:	fdivp  st(7),st
  40d90a:	lahf   
  40d90b:	iret   
  40d90c:	push   cs
  40d90d:	cwde   
  40d90e:	pop    es
  40d90f:	imul   edi,ebx,0x30
  40d912:	outs   dx,DWORD PTR ds:[esi]
  40d913:	lock dec edx
  40d915:	add    ecx,DWORD PTR [ecx]
  40d917:	scas   eax,DWORD PTR es:[edi]
  40d918:	push   0x581fc33d
  40d91d:	xor    ah,ah
  40d91f:	call   0x3d9:0x5601b1f0
  40d926:	dec    ebp
  40d927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d928:	daa    
  40d929:	adc    BYTE PTR [ebx-0x8],al
  40d92c:	inc    edx
  40d92d:	xchg   edi,eax
  40d92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92f:	sbb    eax,0x72b98253
  40d934:	sbb    eax,0x4f891fb4
  40d939:	mov    bl,0x30
  40d93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93c:	push   cs
  40d93d:	push   ds
  40d93e:	pusha  
  40d93f:	enter  0xa71a,0x7d
  40d943:	jmp    0x40d9a7
  40d945:	cli    
  40d946:	cld    
  40d947:	cmp    DWORD PTR [edi+0x27402c5b],ecx
  40d94d:	pop    DWORD PTR [ecx+ecx*2+0x12]
  40d951:	or     al,0xa8
  40d953:	cmp    ebx,DWORD PTR [ecx]
  40d955:	lea    esi,[ecx]
  40d957:	and    esi,DWORD PTR [ebx+ebp*8]
  40d95a:	enter  0x11f2,0x16
  40d95e:	es shl DWORD PTR ds:[ebx],0x6
  40d963:	out    dx,eax
  40d964:	xchg   DWORD PTR [eax-0x6ebdada9],edx
  40d96a:	jns    0x40d93d
  40d96c:	dec    ecx
  40d96d:	aaa    
  40d96e:	mov    ch,0xa3
  40d970:	jg     0x40d91c
  40d972:	hlt    
  40d973:	test   ecx,ebx
  40d975:	test   DWORD PTR [ebx+0x136f9e61],edi
  40d97b:	mov    ch,0xcf
  40d97d:	mov    dh,0xb6
  40d97f:	inc    edx
  40d980:	and    eax,0x8ffa3bc8
  40d985:	sub    BYTE PTR [ecx],0x44
  40d988:	or     DWORD PTR [eax+ecx*4-0x2a298ef8],edx
  40d98f:	popa   
  40d990:	xlat   BYTE PTR ds:[ebx]
  40d991:	inc    eax
  40d992:	ret    0xf696
  40d995:	push   cs
  40d996:	mov    DWORD PTR [edx],edx
  40d998:	mov    esi,0x9106d4c0
  40d99d:	sub    esi,DWORD PTR [edx+0x74]
  40d9a0:	repz jecxz 0x40d9c6
  40d9a3:	dec    ebp
  40d9a4:	sub    BYTE PTR [edx+ebx*4],dl
  40d9a7:	jns    0x40d96f
  40d9a9:	lahf   
  40d9aa:	popf   
  40d9ab:	popa   
  40d9ac:	inc    edx
  40d9ad:	push   esi
  40d9ae:	sbb    al,0x5
  40d9b0:	fiadd  WORD PTR [esi]
  40d9b2:	aam    0xbf
  40d9b4:	scas   al,BYTE PTR es:[edi]
  40d9b5:	sub    eax,0x287a846b
  40d9ba:	jp     0x40d943
  40d9bc:	xor    eax,esp
  40d9be:	and    eax,0xbbe21ac3
  40d9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c4:	sbb    al,0x58
  40d9c6:	mov    al,0x4d
  40d9c8:	mov    ah,0x45
  40d9ca:	popa   
  40d9cb:	jno    0x40d9f1
  40d9cd:	sbb    dh,cl
  40d9cf:	jmp    0x40da0a
  40d9d1:	lods   al,BYTE PTR ds:[esi]
  40d9d2:	mov    al,0xd5
  40d9d4:	and    al,0x27
  40d9d6:	sbb    BYTE PTR [eax+0x42],bl
  40d9d9:	popf   
  40d9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9db:	push   ds
  40d9dc:	ret    
  40d9dd:	mov    dh,0xc6
  40d9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e0:	xchg   edi,eax
  40d9e1:	jne    0x40da01
  40d9e3:	aad    0xdc
  40d9e5:	xor    al,0x7
  40d9e7:	jmp    0xddc60c50
  40d9ec:	iret   
  40d9ed:	fstp   TBYTE PTR [ebx+ecx*8]
  40d9f0:	sub    esi,edx
  40d9f2:	inc    esp
  40d9f3:	jmp    DWORD PTR [edx-0x79]
  40d9f6:	(bad)  
  40d9f7:	out    0x6d,al
  40d9f9:	stos   BYTE PTR es:[edi],al
  40d9fa:	test   DWORD PTR [eax+0x5db5797],esp
  40da00:	imul   edi,ecx,0x36
  40da03:	cmp    al,0x7b
  40da05:	popa   
  40da06:	fdiv   QWORD PTR [edi-0x9aef485]
  40da0c:	mov    WORD PTR [esp+edi*8+0xb600988],?
  40da13:	cmc    
  40da14:	js     0x40d9a2
  40da16:	ret    
  40da17:	dec    eax
  40da18:	or     BYTE PTR [ebx+0x69945f74],ah
  40da1e:	mov    BYTE PTR [ebx],cl
  40da20:	scas   al,BYTE PTR es:[edi]
  40da21:	loope  0x40d9ce
  40da23:	adc    al,0x7c
  40da25:	jne    0x40daa4
  40da27:	inc    esp
  40da28:	ins    BYTE PTR es:[edi],dx
  40da29:	add    BYTE PTR [esi-0x3eb8d653],bh
  40da2f:	cmp    eax,0x84b73e76
  40da34:	leave  
  40da35:	adc    ebp,DWORD PTR [ebx+0x5fa499a3]
  40da3b:	dec    esp
  40da3c:	gs pop edx
  40da3e:	mov    gs,esi
  40da40:	dec    ebx
  40da41:	dec    edx
  40da42:	dec    ebx
  40da43:	push   ebx
  40da44:	xor    ch,BYTE PTR [edi-0x7a]
  40da47:	jae    0x40da38
  40da49:	push   ds
  40da4a:	mov    cs,WORD PTR [ebp-0x32]
  40da4d:	jmp    0xea9ba93a
  40da52:	fist   WORD PTR [edx+edi*4-0x26071779]
  40da59:	jno    0x40da02
  40da5b:	pop    eax
  40da5c:	call   0xd348f849
  40da61:	mov    edi,0x4d8b7f58
  40da66:	rcr    BYTE PTR [edi],0xc
  40da69:	daa    
  40da6a:	out    0x87,eax
  40da6c:	lea    esp,[ebx+ebx*2+0x2]
  40da70:	and    edi,ebx
  40da72:	dec    eax
  40da73:	loopne 0x40da2e
  40da75:	scas   ax,WORD PTR es:[edi]
  40da77:	mov    ds:0x7b33eea5,al
  40da7c:	adc    eax,0x5e94ed94
  40da81:	mov    dl,0x8f
  40da83:	clc    
  40da84:	mov    ch,bl
  40da86:	pop    edx
  40da87:	pop    ebx
  40da88:	inc    ebx
  40da89:	mov    edi,0xccba4501
  40da8e:	pop    edi
  40da8f:	or     esp,DWORD PTR [ecx+esi*2-0x18]
  40da93:	rcr    DWORD PTR [edx+0xd],0xf8
  40da97:	lods   eax,DWORD PTR ds:[esi]
  40da98:	or     dh,al
  40da9a:	imul   edx,DWORD PTR [eax+0x5c],0x415f4ace
  40daa1:	xchg   ebx,eax
  40daa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa3:	pushf  
  40daa4:	or     edx,DWORD PTR [eax-0x55]
  40daa7:	test   ch,bh
  40daa9:	and    dl,BYTE PTR [esp+eax*1-0x60]
  40daad:	push   0x6be1ce81
  40dab2:	xchg   esp,eax
  40dab3:	or     DWORD PTR [edi],esi
  40dab5:	rcr    DWORD PTR [ebx+0x4876e80c],1
  40dabb:	and    eax,0xe442154d
  40dac0:	int    0xef
  40dac2:	jbe    0x40db3e
  40dac4:	add    DWORD PTR [eax+ebp*4+0x17],esp
  40dac8:	xchg   ebx,eax
  40dac9:	fmul   QWORD PTR [ebp+0x42]
  40dacc:	pop    ds
  40dacd:	mov    ebx,0xb96d6c94
  40dad2:	dec    edx
  40dad3:	data16 fsubrp st(6),st
  40dad6:	icebp  
  40dad7:	mov    dh,BYTE PTR [ebp-0x33]
  40dada:	test   BYTE PTR [ebp-0x33],0x5
  40dade:	cwde   
  40dadf:	popa   
  40dae0:	mov    ebx,0xce64a68d
  40dae5:	mov    ch,0x66
  40dae7:	ret    0x3362
  40daea:	or     al,0x14
  40daec:	xor    esp,0xe
  40daef:	(bad)  [si]
  40daf2:	daa    
  40daf3:	es mov ch,0xa0
  40daf6:	(bad)  
  40daf7:	jecxz  0x40dab4
  40daf9:	sbb    BYTE PTR [ecx-0x65],dh
  40dafc:	xor    BYTE PTR [eax],dl
  40dafe:	stos   BYTE PTR es:[edi],al
  40daff:	(bad)  
  40db00:	lock xor DWORD PTR [ebp+0x4f],ebp
  40db04:	lods   eax,DWORD PTR ds:[esi]
  40db05:	push   esp
  40db06:	mov    ds:0xaacf0fa5,eax
  40db0b:	adc    bh,dh
  40db0d:	push   ds
  40db0e:	add    eax,0xaa101499
  40db13:	imul   eax,DWORD PTR [ebp-0x62],0xc1dba245
  40db1a:	cmp    DWORD PTR [edi],esi
  40db1c:	lods   al,BYTE PTR ds:[esi]
  40db1d:	lahf   
  40db1e:	mov    cl,BYTE PTR [ecx]
  40db20:	mov    BYTE PTR [esi+eiz*4+0x9061bbb],ah
  40db27:	test   eax,0x579dc433
  40db2c:	mov    ebx,0x694c1503
  40db31:	aaa    
  40db32:	cwde   
  40db33:	inc    edi
  40db34:	daa    
  40db35:	mov    dh,BYTE PTR [eax-0x45]
  40db38:	add    esp,esi
  40db3a:	sbb    DWORD PTR [ecx],edi
  40db3c:	rcr    DWORD PTR [ebx+0x24757781],1
  40db42:	sbb    DWORD PTR [ebp-0x30],0xffffff86
  40db46:	jecxz  0x40daf2
  40db48:	push   eax
  40db49:	inc    esp
  40db4a:	sbb    DWORD PTR ds:0xb1bc7e5,ebp
  40db50:	daa    
  40db51:	sbb    al,0x75
  40db53:	dec    ebx
  40db54:	ss inc ebx
  40db56:	lahf   
  40db57:	mov    bl,0xa9
  40db59:	mov    ecx,0x29522ae
  40db5e:	push   edi
  40db5f:	call   0xcddf7019
  40db64:	mov    ds:0x3f0e7974,eax
  40db69:	call   0x4424:0x739db784
  40db70:	rcl    DWORD PTR [ebx+0xd7865e5],cl
  40db76:	ds fadd st(2),st
  40db79:	iret   
  40db7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db7b:	mov    ds:0x55459afb,al
  40db80:	nop
  40db81:	fiadd  WORD PTR [edx-0x4d]
  40db84:	pop    eax
  40db85:	jb     0x40db8e
  40db87:	jbe    0x40db2a
  40db89:	sbb    ebx,DWORD PTR [bx+si+0x5dc7]
  40db8e:	push   cs
  40db8f:	mov    ?,eax
  40db91:	jp     0x40db44
  40db93:	jle    0x40db19
  40db95:	gs gs mov edi,0x3ea9122e
  40db9c:	pop    ebx
  40db9d:	stos   BYTE PTR es:[edi],al
  40db9e:	rol    BYTE PTR [edx],0x16
  40dba1:	xchg   esp,eax
  40dba2:	jmp    0x8331df6d
  40dba7:	arpl   WORD PTR [ebx-0x77],di
  40dbaa:	(bad)  
  40dbab:	cdq    
  40dbac:	arpl   WORD PTR [ecx+0x3f037068],sp
  40dbb2:	inc    esp
  40dbb3:	in     eax,dx
  40dbb4:	sahf   
  40dbb5:	subps  xmm6,XMMWORD PTR [ebp-0x2bc56e25]
  40dbbc:	jb     0x40dbfa
  40dbbe:	mov    ch,0xeb
  40dbc0:	and    ebp,DWORD PTR [edx+ebp*4+0xc]
  40dbc4:	cs xor eax,0xe37997fd
  40dbca:	inc    edi
  40dbcb:	cmp    dh,BYTE PTR [ebx-0x6290825c]
  40dbd1:	mov    ss,WORD PTR [esi+0x450854a3]
  40dbd7:	push   ebx
  40dbd8:	hlt    
  40dbd9:	push   edx
  40dbda:	gs shr eax,1
  40dbdd:	jne    0x40db74
  40dbdf:	enter  0x198a,0x13
  40dbe3:	mov    esi,0xb6ea73b1
  40dbe8:	call   0x77df:0x3d6cfd58
  40dbef:	sbb    al,0xeb
  40dbf1:	pop    ss
  40dbf2:	cwde   
  40dbf3:	push   ss
  40dbf4:	pop    ebx
  40dbf5:	scas   eax,DWORD PTR es:[edi]
  40dbf6:	repnz mov al,ah
  40dbf9:	mov    dh,0xe4
  40dbfb:	push   ebx
  40dbfc:	aaa    
  40dbfd:	icebp  
  40dbfe:	in     eax,dx
  40dbff:	dec    edx
  40dc00:	out    0xf4,al
  40dc02:	or     bh,BYTE PTR [eax-0x7f1108c2]
  40dc08:	fsub   DWORD PTR [edi]
  40dc0a:	push   0x397b7ed1
  40dc0f:	and    ax,0x1f5
  40dc13:	fwait
  40dc14:	adc    DWORD PTR ds:0x373adfa1,ecx
  40dc1a:	jmp    0x40dc4c
  40dc1c:	mov    cl,0xdf
  40dc1e:	pop    ds
  40dc1f:	push   DWORD PTR [esi-0x17]
  40dc22:	sbb    esi,0x7b
  40dc25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc26:	and    al,0x4f
  40dc28:	pop    edx
  40dc29:	pop    ebx
  40dc2a:	push   ecx
  40dc2b:	inc    esi
  40dc2c:	sbb    edx,DWORD PTR [ebx-0x635e3aec]
  40dc32:	xchg   esi,eax
  40dc33:	and    al,0xa
  40dc35:	cs xchg ecx,eax
  40dc37:	adc    eax,0xad881206
  40dc3c:	adc    DWORD PTR ds:0x374811ce,ebp
  40dc42:	sub    DWORD PTR [edx+0xeaa3ca7],0x75
  40dc49:	push   esi
  40dc4a:	push   eax
  40dc4b:	retf   0x2fd6
  40dc4e:	jecxz  0x40dbea
  40dc50:	(bad)  
  40dc52:	or     cl,BYTE PTR [ebp-0x6e]
  40dc55:	out    0xb3,eax
  40dc57:	and    al,0xa2
  40dc59:	ss jle 0x40dc61
  40dc5c:	inc    ebx
  40dc5d:	adc    BYTE PTR [esi],cl
  40dc5f:	pop    ebx
  40dc60:	jbe    0x40dbfa
  40dc62:	ins    DWORD PTR es:[edi],dx
  40dc63:	sub    ah,BYTE PTR [ecx]
  40dc65:	inc    eax
  40dc66:	and    cl,0xf1
  40dc69:	loop   0x40dc1a
  40dc6b:	inc    esp
  40dc6c:	or     esi,esi
  40dc6e:	mov    ds:0x668528e,al
  40dc73:	mov    ah,0x78
  40dc75:	loope  0x40dcbc
  40dc77:	test   DWORD PTR [edi+edi*4],edx
  40dc7a:	inc    ebp
  40dc7b:	sub    eax,0x744ff242
  40dc80:	jl     0x40dc91
  40dc82:	outs   dx,BYTE PTR ds:[esi]
  40dc83:	cmp    dh,BYTE PTR [edi+0x56]
  40dc86:	xor    eax,0x2556f048
  40dc8b:	jp     0x40dc81
  40dc8d:	outs   dx,BYTE PTR ds:[esi]
  40dc8e:	jns    0x40dc7d
  40dc90:	(bad)  
  40dc91:	scas   al,BYTE PTR es:[edi]
  40dc92:	mov    edi,0x3c978bac
  40dc97:	inc    eax
  40dc98:	mov    al,ds:0x3c9a758c
  40dc9d:	std    
  40dc9e:	xor    BYTE PTR [edi+eax*4],0xfd
  40dca2:	add    esp,edi
  40dca4:	aad    0x4d
  40dca6:	cmp    eax,0x27dbbfde
  40dcab:	cs xchg esi,eax
  40dcad:	sub    al,BYTE PTR [edi+0x7eb709ac]
  40dcb3:	in     eax,0xd7
  40dcb5:	pop    ds
  40dcb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb7:	test   al,0x2b
  40dcb9:	xchg   esi,eax
  40dcba:	mov    cl,0x44
  40dcbc:	iret   
  40dcbd:	jmp    0x8cde:0xe24a9ba3
  40dcc4:	jmp    0x612d:0xd28dae4d
  40dccb:	sub    al,0x66
  40dccd:	and    al,0x44
  40dccf:	cld    
  40dcd0:	rcl    ebx,cl
  40dcd2:	fld    DWORD PTR [esi]
  40dcd4:	mov    al,0x8c
  40dcd6:	pop    es
  40dcd7:	inc    esi
  40dcd8:	mov    cl,0x44
  40dcda:	in     al,0x7f
  40dcdc:	scas   eax,DWORD PTR es:[edi]
  40dcdd:	xor    ebp,DWORD PTR [ecx-0x7360cd89]
  40dce3:	xchg   ebx,eax
  40dce4:	movsx  ecx,WORD PTR fs:[ebx-0x3e]
  40dce9:	pusha  
  40dcea:	adc    bh,bh
  40dcec:	mov    cl,0x26
  40dcee:	lock xchg esp,eax
  40dcf0:	push   edx
  40dcf1:	test   eax,0xb1f894c6
  40dcf6:	retf   0xe6f3
  40dcf9:	push   edi
  40dcfa:	push   esp
  40dcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcfc:	cmp    DWORD PTR [ecx+0x3384f5cc],edx
  40dd02:	inc    DWORD PTR [edi+0x69583270]
  40dd08:	gs jno 0x40dd6f
  40dd0b:	dec    ebp
  40dd0c:	inc    DWORD PTR [ebp-0x2a]
  40dd0f:	(bad)  
  40dd11:	adc    DWORD PTR [ebp-0x4e],ebp
  40dd14:	sbb    eax,0xa8ef529d
  40dd19:	fsub   DWORD PTR [esi+0x1d]
  40dd1c:	stos   DWORD PTR es:[edi],eax
  40dd1d:	xor    bh,BYTE PTR [eax-0x1276d2b7]
  40dd23:	push   ebp
  40dd24:	cmp    eax,0xa3c84b5
  40dd29:	stos   DWORD PTR es:[edi],eax
  40dd2a:	pushf  
  40dd2b:	or     DWORD PTR [ebx+0x7f186a3],ebx
  40dd31:	inc    ebx
  40dd32:	mov    esi,0x49ed56b3
  40dd37:	cmp    eax,0x7afaeb7c
  40dd3c:	scas   eax,DWORD PTR es:[edi]
  40dd3d:	jmp    0x1c4:0x837bb1a7
  40dd44:	xchg   edi,eax
  40dd45:	(bad)  
  40dd46:	mov    esp,0x779d6c8f
  40dd4b:	fisttp QWORD PTR [eax-0x49]
  40dd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4f:	jnp    0x40dd35
  40dd51:	add    al,0xc0
  40dd53:	call   0xfae91a84
  40dd58:	push   edi
  40dd59:	mov    BYTE PTR [edi-0x3c0ddf6f],dl
  40dd5f:	mov    dl,0xc8
  40dd61:	jp     0x40ddb7
  40dd63:	mov    dh,0x3
  40dd65:	(bad)  
  40dd66:	and    al,BYTE PTR [eax]
  40dd68:	aam    0x8d
  40dd6a:	test   al,0xcb
  40dd6c:	dec    ebp
  40dd6d:	shl    BYTE PTR [ecx-0x61],1
  40dd70:	pop    edi
  40dd71:	(bad)  
  40dd72:	mov    ebx,0x5b81d9c6
  40dd77:	mov    ch,0x15
  40dd79:	mov    dl,0x4f
  40dd7b:	jecxz  0x40dd68
  40dd7d:	and    BYTE PTR ds:0xf18d0e81,0xde
  40dd84:	cli    
  40dd85:	push   ecx
  40dd86:	inc    ebp
  40dd87:	pop    eax
  40dd88:	ja     0x40dd20
  40dd8a:	inc    eax
  40dd8b:	popf   
  40dd8c:	ror    DWORD PTR [esi],0xbe
  40dd8f:	inc    esp
  40dd90:	push   edx
  40dd91:	pop    ecx
  40dd92:	adc    bh,BYTE PTR [ebp+0x7cfdac60]
  40dd98:	cs retf 
  40dd9a:	shl    DWORD PTR [edi],0x0
  40dd9d:	or     ah,BYTE PTR [ecx+0x4074aa33]
  40dda3:	iret   
  40dda4:	push   0x75
  40dda6:	dec    ebx
  40dda7:	sbb    eax,0x1f0e19b2
  40ddac:	cmp    dh,ah
  40ddae:	jg     0x40ddad
  40ddb0:	sbb    dl,ch
  40ddb2:	jbe    0x40dd78
  40ddb4:	dec    ebx
  40ddb5:	shl    eax,0xf9
  40ddb8:	lahf   
  40ddb9:	jge    0x40ddd9
  40ddbb:	imul   edi,ecx,0x50516617
  40ddc1:	(bad)  
  40ddc2:	jle    0x40dd99
  40ddc4:	fsubrp st(6),st
  40ddc6:	dec    ecx
  40ddc7:	imul   esp,DWORD PTR [ecx+0x17],0xffffffa3
  40ddcb:	pop    eax
  40ddcc:	mov    DWORD PTR [ecx+0x4fe70b62],0x245c5bf1
  40ddd6:	cmp    edx,ecx
  40ddd8:	outs   dx,DWORD PTR ds:[esi]
  40ddd9:	xor    eax,0x1c609154
  40ddde:	fcomp  DWORD PTR [edx-0xf]
  40dde1:	sbb    ch,BYTE PTR [esi]
  40dde3:	rcr    BYTE PTR [edx],0xa6
  40dde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde7:	fs int3 
  40dde9:	retf   0xa0df
  40ddec:	pop    ebx
  40dded:	or     ebx,DWORD PTR [esi]
  40ddef:	mov    esi,0x59939e89
  40ddf4:	push   ebx
  40ddf5:	jle    0x40ddf3
  40ddf7:	dec    ebx
  40ddf8:	inc    ebx
  40ddf9:	jnp    0x40dd7b
  40ddfb:	add    eax,0x3bf16153
  40de00:	adc    al,0x5b
  40de02:	jmp    0xd979:0x161840d9
  40de09:	not    BYTE PTR [ebx]
  40de0b:	sub    ecx,DWORD PTR [ecx+0x123ec165]
  40de11:	loopne 0x40de3d
  40de13:	push   edx
  40de14:	iret   
  40de15:	add    DWORD PTR [edx-0x25],0xa06e7067
  40de1c:	xchg   BYTE PTR [edi],dh
  40de1e:	mov    bh,0x58
  40de20:	adc    DWORD PTR [edx-0x4f0fac19],ebp
  40de26:	call   0xe8a3d05f
  40de2b:	retf   0xd279
  40de2e:	fwait
  40de2f:	arpl   WORD PTR [esi+0x867f015],dx
  40de35:	icebp  
  40de36:	or     DWORD PTR [ecx+0x122700b9],eax
  40de3c:	test   al,0xab
  40de3e:	xchg   ebp,edx
  40de40:	out    0xcf,eax
  40de42:	inc    eax
  40de43:	ins    DWORD PTR es:[edi],dx
  40de44:	push   eax
  40de45:	push   0x1a
  40de47:	(bad)  
  40de48:	fmul   QWORD PTR [ebx+eax*8-0x6e]
  40de4c:	cmp    eax,0xde198d3e
  40de51:	fiadd  DWORD PTR [ecx]
  40de53:	stos   DWORD PTR es:[edi],eax
  40de54:	or     ebx,DWORD PTR [edx+ebp*8+0x35]
  40de58:	or     dh,BYTE PTR [ecx-0x210db9b2]
  40de5e:	or     BYTE PTR [edx+0xe5fc1e9],ch
  40de64:	jp     0x40de0e
  40de66:	pop    esp
  40de67:	jb     0x40ddfd
  40de69:	inc    ecx
  40de6a:	sti    
  40de6b:	repz xchg edx,eax
  40de6d:	repnz adc dh,BYTE PTR [ebx-0x80]
  40de71:	ret    0xa89b
  40de74:	call   0xdf0a:0x59585ef3
  40de7b:	daa    
  40de7c:	loope  0x40deec
  40de7e:	and    al,BYTE PTR [esi+0x3a]
  40de81:	test   esi,0x4975c5fa
  40de87:	std    
  40de88:	(bad)  
  40de89:	xlat   BYTE PTR ds:[ebx]
  40de8a:	loope  0x40deaf
  40de8c:	into   
  40de8d:	xor    al,0x68
  40de8f:	adc    cl,BYTE PTR [esi]
  40de91:	inc    edx
  40de92:	retf   
  40de93:	jnp    0x40ded8
  40de95:	or     ah,bh
  40de97:	int3   
  40de98:	push   esp
  40de99:	lahf   
  40de9a:	xor    cl,0x77
  40de9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de9e:	aad    0xfe
  40dea0:	fisttp WORD PTR [eax]
  40dea2:	pop    ds
  40dea3:	sub    cl,BYTE PTR [edi+0x3c2b75b0]
  40dea9:	inc    esi
  40deaa:	shl    BYTE PTR [ebp+0x2406bf2a],0xb7
  40deb1:	iret   
  40deb2:	adc    bl,bh
  40deb4:	clc    
  40deb5:	imul   esi,DWORD PTR [ebx],0xeab2a66d
  40debb:	ret    
  40debc:	adc    eax,0xcadc8173
  40dec1:	inc    DWORD PTR [edi+0x3211b39b]
  40dec7:	ins    DWORD PTR es:[edi],dx
  40dec8:	or     BYTE PTR [esi+0x4d6dccb3],0x13
  40decf:	popf   
  40ded0:	jns    0x40deb7
  40ded2:	sub    DWORD PTR [ebx-0x6006f7cc],ebp
  40ded8:	xor    edx,DWORD PTR [edi]
  40deda:	adc    al,0xf6
  40dedc:	mov    bh,0x75
  40dede:	add    al,0x98
  40dee0:	jns    0x40df13
  40dee2:	(bad)  
  40dee4:	das    
  40dee5:	hlt    
  40dee6:	stc    
  40dee7:	stos   BYTE PTR es:[edi],al
  40dee8:	inc    eax
  40dee9:	mov    ebp,0xf0fb6d55
  40deee:	adc    DWORD PTR [esi+0x28],ebp
  40def1:	sub    esp,esp
  40def3:	nop
  40def4:	dec    esp
  40def5:	jbe    0x40df31
  40def7:	adc    eax,0x64cb05d1
  40defc:	inc    edx
  40defd:	inc    eax
  40defe:	mov    WORD PTR [ebp-0x52],?
  40df01:	sub    ecx,DWORD PTR [edx-0x5b]
  40df04:	stos   BYTE PTR es:[edi],al
  40df05:	inc    ebp
  40df06:	rcl    ebp,cl
  40df08:	fwait
  40df09:	dec    ebp
  40df0a:	iret   
  40df0b:	mov    eax,edx
  40df0d:	mov    cl,0x6e
  40df0f:	aad    0xf4
  40df11:	ss mov al,0x94
  40df14:	sub    BYTE PTR [esp+ecx*2],0x81
  40df18:	add    BYTE PTR [eax+0x78],al
  40df1b:	sahf   
  40df1c:	mov    al,ds:0xa37b8256
  40df21:	jns    0x40deb7
  40df23:	cmp    esp,eax
  40df25:	jg     0x40ded1
  40df27:	push   0x8a0d7015
  40df2c:	cmp    DWORD PTR [ecx],0x10
  40df2f:	sub    ch,al
  40df31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df32:	add    edx,edi
  40df34:	add    dl,dh
  40df36:	cwde   
  40df37:	mov    ch,0xd1
  40df39:	xchg   dl,cl
  40df3b:	push   ss
  40df3c:	inc    ecx
  40df3d:	xchg   BYTE PTR [esi-0x46],bh
  40df40:	stc    
  40df41:	cdq    
  40df42:	mov    dh,0xbe
  40df44:	int    0xd2
  40df46:	retf   0xdf92
  40df49:	arpl   dx,bp
  40df4b:	xchg   edi,eax
  40df4c:	aam    0x91
  40df4e:	and    DWORD PTR [ebp+0x70],ebp
  40df51:	jmp    0x40df42
  40df53:	or     eax,0x2c830278
  40df58:	push   esi
  40df59:	pushf  
  40df5a:	xor    eax,ecx
  40df5c:	imul   edx,DWORD PTR ds:0x7a5510f0,0xfffffff5
  40df63:	outs   dx,DWORD PTR ds:[esi]
  40df64:	enter  0x6ed7,0x86
  40df68:	xor    al,BYTE PTR [ebx]
  40df6a:	mov    edi,cs
  40df6c:	lods   al,BYTE PTR ds:[esi]
  40df6d:	popf   
  40df6e:	xchg   ebp,eax
  40df6f:	leave  
  40df70:	mov    dh,0xf0
  40df72:	idiv   DWORD PTR [eax+eiz*8]
  40df75:	repnz call 0x6788:0x89a2727f
  40df7d:	addr16 jg 0x40df8b
  40df80:	(bad)  
  40df83:	dec    esi
  40df84:	mov    ah,0x9
  40df86:	fcmovnu st,st(1)
  40df88:	aam    0xc1
  40df8a:	pop    eax
  40df8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8c:	stos   DWORD PTR es:[edi],eax
  40df8d:	pop    ss
  40df8e:	adc    esi,edi
  40df90:	stc    
  40df91:	sar    ah,cl
  40df93:	out    dx,eax
  40df94:	xchg   BYTE PTR [edx-0x5616a724],dl
  40df9a:	stc    
  40df9b:	dec    esp
  40df9c:	and    DWORD PTR [esi+0x5e],edi
  40df9f:	ret    0x5982
  40dfa2:	push   edx
  40dfa3:	adc    BYTE PTR [edi+0x6a0bc488],al
  40dfa9:	add    DWORD PTR [ebx-0x1],ecx
  40dfac:	fst    QWORD PTR [ecx+0x4711418e]
  40dfb2:	xchg   edx,eax
  40dfb3:	outs   dx,DWORD PTR ds:[esi]
  40dfb4:	sbb    eax,DWORD PTR [esi]
  40dfb6:	loope  0x40e004
  40dfb8:	call   0xde9e:0x72a424de
  40dfbf:	dec    eax
  40dfc0:	push   0x67
  40dfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfc3:	shl    DWORD PTR [edx+0x15],1
  40dfc6:	shl    DWORD PTR [ebx-0x59c7f02e],1
  40dfcc:	out    0xea,al
  40dfce:	les    ebp,FWORD PTR [ebp-0x50]
  40dfd1:	mov    al,0x3
  40dfd3:	mov    cl,0x47
  40dfd5:	dec    ebp
  40dfd6:	sub    esi,0x5e563e23
  40dfdc:	lahf   
  40dfdd:	int3   
  40dfde:	inc    esp
  40dfdf:	aas    
  40dfe0:	dec    eax
  40dfe1:	sbb    BYTE PTR [edi+0x37],bl
  40dfe4:	jno    0x40dfd1
  40dfe6:	jns    0x40e05b
  40dfe8:	mov    bh,0xba
  40dfea:	cmp    BYTE PTR [ebx],bh
  40dfec:	mov    dh,0x3f
  40dfee:	mov    ds:0x7c11cd2,eax
  40dff3:	dec    edx
  40dff4:	aas    
  40dff5:	adc    DWORD PTR [edx-0x8],eax
  40dff8:	jnp    0x40dff1
  40dffa:	mul    bh
  40dffc:	iret   
  40dffd:	iret   
  40dffe:	retf   
  40dfff:	xor    al,0xdc
  40e001:	inc    edi
  40e002:	mov    bh,cl
  40e004:	pop    esi
  40e005:	fistp  WORD PTR [ecx-0x64]
  40e008:	(bad)  
  40e00a:	jge    0x40e029
  40e00c:	jnp    0x40e03c
  40e00e:	dec    ebx
  40e00f:	bound  ecx,QWORD PTR [edi-0x69]
  40e012:	mov    ?,esi
  40e014:	sbb    eax,0x730933e3
  40e019:	retf   0xe429
  40e01c:	push   ebp
  40e01d:	jmp    0x9f5b:0xc6bf8dd2
  40e024:	dec    ecx
  40e025:	stos   BYTE PTR es:[edi],al
  40e026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e027:	ja     0x40dfb9
  40e029:	cmp    DWORD PTR [edi+0x7f],ecx
  40e02c:	retf   
  40e02d:	ins    BYTE PTR es:[edi],dx
  40e02e:	sbb    ecx,DWORD PTR [esi+0x25b1f5bf]
  40e034:	cwde   
  40e035:	leave  
  40e036:	daa    
  40e037:	cvtps2pi mm6,QWORD PTR ds:0xb1521c
  40e03e:	pop    ss
  40e03f:	mov    ?,WORD PTR [edx+0x1acf2de2]
  40e045:	hlt    
  40e046:	aaa    
  40e047:	sub    bh,BYTE PTR [ebp-0x68965981]
  40e04d:	mov    al,ds:0x723b2cbe
  40e052:	adc    cx,ax
  40e055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e056:	rol    DWORD PTR [ecx+ecx*8+0x2ab98d69],cl
  40e05d:	test   DWORD PTR ds:[edi],0x3fc41588
  40e064:	adc    edi,DWORD PTR ds:0x7f63d5b0
  40e06a:	arpl   bp,sp
  40e06c:	(bad)  [esi]
  40e06e:	mov    bl,0xc6
  40e070:	sbb    BYTE PTR [ebp-0x2f],ah
  40e073:	inc    edx
  40e074:	push   edx
  40e075:	mov    ds,WORD PTR [esi+0x4b4b2c5c]
  40e07b:	call   0xe3f6:0xeec6eacf
  40e082:	ins    DWORD PTR es:[edi],dx
  40e083:	push   ebp
  40e084:	mov    edx,esp
  40e086:	lods   al,BYTE PTR ds:[esi]
  40e087:	scas   eax,DWORD PTR es:[di]
  40e089:	stos   BYTE PTR es:[edi],al
  40e08a:	push   ecx
  40e08b:	retf   
  40e08c:	gs je  0x40e02d
  40e08f:	sbb    esi,DWORD PTR [esi+0x3d]
  40e092:	pop    esi
  40e093:	hlt    
  40e094:	pop    eax
  40e095:	dec    ecx
  40e096:	dec    esi
  40e097:	pop    edx
  40e098:	sub    ecx,DWORD PTR [edi+0x67f48606]
  40e09e:	sahf   
  40e09f:	(bad)  
  40e0a0:	aad    0x5f
  40e0a2:	addr16 jno 0x40e117
  40e0a5:	cwde   
  40e0a6:	xor    al,0x12
  40e0a9:	and    al,BYTE PTR [ebx+0x1a]
  40e0ac:	jmp    0xea7f:0x3c21dba2
  40e0b3:	and    bl,BYTE PTR [edx+0x750b301f]
  40e0b9:	inc    esi
  40e0ba:	jl     0x40e04a
  40e0bc:	sub    eax,0x33d044cc
  40e0c1:	scas   eax,DWORD PTR es:[edi]
  40e0c2:	icebp  
  40e0c3:	push   ecx
  40e0c5:	(bad)  
  40e0c6:	call   0x90ad:0x640706f0
  40e0cd:	push   edi
  40e0ce:	lea    esp,[edx-0xc]
  40e0d1:	jns    0x40e07c
  40e0d3:	inc    ebp
  40e0d4:	push   edi
  40e0d5:	nop
  40e0d6:	les    esi,FWORD PTR ds:0x480bb5cb
  40e0dc:	jle    0x40e150
  40e0de:	inc    ebp
  40e0df:	push   ecx
  40e0e0:	in     al,0xaf
  40e0e2:	mov    edx,0x8fc11df2
  40e0e7:	mov    BYTE PTR [edx],bh
  40e0e9:	add    BYTE PTR [eax+edi*2+0x1c925ff2],0xdb
  40e0f1:	push   eax
  40e0f2:	xor    eax,0xf4bd8291
  40e0f7:	inc    eax
  40e0f8:	repnz xchg edx,eax
  40e0fa:	cli    
  40e0fb:	mov    ebp,0xa11ace11
  40e100:	call   0x3810:0x3e0bca61
  40e107:	sub    al,BYTE PTR [ebx+0x48]
  40e10a:	jge    0x40e0d0
  40e10c:	sub    DWORD PTR [edi+0x3e],edi
  40e10f:	lea    esp,[eax+edx*4+0x25f7a5bb]
  40e116:	(bad)  [ebp-0x3]
  40e119:	popa   
  40e11a:	out    dx,al
  40e11b:	dec    esi
  40e11c:	and    BYTE PTR [edx-0x53],bl
  40e11f:	or     BYTE PTR [ebp+eax*8+0x46445154],ah
  40e126:	in     eax,0xf3
  40e128:	aas    
  40e129:	je     0x40e0ba
  40e12b:	(bad)  
  40e12d:	test   al,0x51
  40e12f:	push   esi
  40e130:	aaa    
  40e131:	stc    
  40e132:	push   eax
  40e133:	les    ecx,FWORD PTR [ebp-0x604d3adb]
  40e139:	dec    ah
  40e13b:	push   edx
  40e13c:	(bad)  
  40e13d:	aas    
  40e13e:	mov    ebp,0x451ccc6e
  40e143:	in     al,dx
  40e144:	lds    ecx,FWORD PTR [ecx+0x72]
  40e147:	dec    esi
  40e148:	(bad)  
  40e14a:	test   eax,0x7d8b7f97
  40e14f:	push   0x9
  40e151:	in     eax,0x2a
  40e153:	outs   dx,DWORD PTR ds:[esi]
  40e154:	pop    es
  40e155:	scas   eax,DWORD PTR es:[edi]
  40e156:	pop    edx
  40e157:	xor    al,0x6e
  40e159:	or     ecx,DWORD PTR [ebx-0x753992cc]
  40e15f:	jno    0x40e148
  40e161:	mov    BYTE PTR [esi],0xdb
  40e164:	push   esi
  40e165:	inc    esp
  40e166:	mov    ?,eax
  40e168:	ret    0xf5fa
  40e16b:	pop    ds
  40e16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e16d:	jb     0x40e132
  40e16f:	push   cs
  40e170:	pop    esi
  40e171:	sbb    edx,DWORD PTR [esi+0x31]
  40e174:	add    eax,0x41d452f1
  40e179:	in     al,dx
  40e17a:	(bad)  
  40e17b:	fstp   TBYTE PTR es:[ebx+eax*8]
  40e17f:	mov    dh,0xee
  40e181:	dec    ebx
  40e182:	mov    bh,0x29
  40e184:	pop    edi
  40e185:	push   edi
  40e186:	xor    BYTE PTR [eax+0x37aa00c9],0x24
  40e18d:	pop    ds
  40e18e:	pusha  
  40e18f:	xchg   BYTE PTR [edx+0x15654141],al
  40e195:	mov    cl,0xde
  40e197:	adc    bl,dl
  40e199:	mov    ah,BYTE PTR [ebp+0x4c]
  40e19c:	dec    edx
  40e19d:	push   0x43
  40e19f:	cs xor eax,0x9a5afde9
  40e1a5:	loop   0x40e161
  40e1a7:	mov    esp,0x237df874
  40e1ac:	push   0x6a
  40e1ae:	push   eax
  40e1af:	dec    ebx
  40e1b0:	jne    0x40e1c3
  40e1b2:	mov    ebx,0xc0d64ebe
  40e1b7:	mul    cl
  40e1b9:	or     ch,BYTE PTR [ebx+0x24]
  40e1bc:	pushf  
  40e1bd:	mov    ebx,DWORD PTR [edi+0x2b]
  40e1c0:	mov    bl,0x4c
  40e1c2:	mov    edi,cs
  40e1c4:	popa   
  40e1c5:	dec    edx
  40e1c6:	mov    ds:0xda58a8b0,al
  40e1cb:	jmp    0xd51f:0xd6b8b0b8
  40e1d2:	or     eax,0xe689ea4d
  40e1d7:	mov    dh,0x97
  40e1d9:	cmc    
  40e1da:	(bad)  
  40e1db:	(bad)  
  40e1dc:	(bad)  
  40e1dd:	fisttp DWORD PTR [edx]
  40e1df:	add    BYTE PTR [esi+0x3c],0x83
  40e1e3:	dec    ebp
  40e1e4:	xchg   esp,eax
  40e1e5:	pop    edx
  40e1e6:	xor    ebx,DWORD PTR ds:0x3f16053e
  40e1ec:	mov    ds:0x15246031,eax
  40e1f1:	jg     0x40e21f
  40e1f3:	jns    0x40e1fe
  40e1f5:	mov    dh,0x9f
  40e1f7:	jl     0x40e25c
  40e1f9:	sbb    ecx,DWORD PTR [esi]
  40e1fb:	sub    eax,0x77d4a16b
  40e200:	lea    ebp,[esi-0x34]
  40e203:	mov    esi,DWORD PTR [edx+0x503a8a48]
  40e209:	sbb    bl,bh
  40e20b:	enter  0xa7f3,0x44
  40e20f:	add    cl,BYTE PTR [edx]
  40e211:	clc    
  40e212:	mov    esp,0xdf37fc29
  40e217:	xor    DWORD PTR [ecx+0x5e1d0b52],ebx
  40e21d:	sbb    ecx,ebp
  40e21f:	js     0x40e1e9
  40e221:	xchg   edx,eax
  40e222:	add    BYTE PTR [ebx+0x26],0xbc
  40e226:	mov    WORD PTR [esi],fs
  40e228:	push   esi
  40e229:	xchg   ebx,eax
  40e22a:	push   ebx
  40e22b:	iret   
  40e22c:	imul   ecx,DWORD PTR [edx+0x681ee3cb],0x5b
  40e233:	add    DWORD PTR [esi],esi
  40e235:	fist   WORD PTR [ebx]
  40e237:	js     0x40e21e
  40e239:	(bad)  
  40e23a:	test   esp,esp
  40e23c:	jbe    0x40e27e
  40e23e:	ss call 0xaf41:0x3673acb9
  40e246:	sub    bh,BYTE PTR [eax]
  40e248:	outs   dx,DWORD PTR ds:[esi]
  40e249:	daa    
  40e24a:	cmp    al,0x29
  40e24c:	das    
  40e24d:	adc    cl,ch
  40e24f:	push   ds
  40e250:	xchg   DWORD PTR [esi+ecx*8],esp
  40e253:	cmc    
  40e254:	stc    
  40e255:	or     BYTE PTR [edi+0x48],cl
  40e258:	in     eax,dx
  40e259:	out    0x91,eax
  40e25b:	adc    DWORD PTR [ecx-0x82088bb],0x52c79af7
  40e265:	sub    DWORD PTR [eax-0x6071d7f3],eax
  40e26b:	vcvtss2sd xmm3,xmm1,DWORD PTR [edi+0x5317f168]
  40e273:	sbb    eax,0xe0aa5a0c
  40e278:	inc    ebp
  40e279:	mov    esp,0x57184185
  40e27e:	pop    eax
  40e27f:	mov    DWORD PTR [edx-0x45c55068],esp
  40e285:	mov    cl,0xf
  40e287:	xchg   edx,eax
  40e288:	add    eax,0xb6ceda7f
  40e28d:	cld    
  40e28e:	sbb    DWORD PTR [esi-0x4b],edi
  40e291:	(bad)  
  40e292:	fimul  WORD PTR [eax]
  40e294:	sbb    DWORD PTR [eax+ecx*4+0x75],ebx
  40e298:	adc    al,0x71
  40e29a:	or     ebx,ecx
  40e29c:	and    al,0x7f
  40e29e:	mov    al,ds:0xb27312d8
  40e2a3:	push   es
  40e2a4:	push   0x4f
  40e2a6:	mov    ch,0x66
  40e2a8:	sub    DWORD PTR [ebp+edi*1-0x8],ebp
  40e2ac:	and    eax,0x627b965e
  40e2b1:	lods   al,BYTE PTR ds:[esi]
  40e2b2:	push   ds
  40e2b3:	loop   0x40e2f7
  40e2b5:	mov    al,ds:0x9c162f2b
  40e2ba:	cmp    DWORD PTR [eax+0x33],edi
  40e2bd:	adc    ebp,DWORD PTR [edx+0x4b52037a]
  40e2c3:	fnstenv [ebp-0x6a18a492]
  40e2c9:	pop    esp
  40e2ca:	adc    al,cl
  40e2cc:	int    0x5f
  40e2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2cf:	jns    0x40e2f8
  40e2d1:	les    esp,FWORD PTR [esi]
  40e2d3:	pushf  
  40e2d4:	das    
  40e2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d6:	push   ds
  40e2d7:	ret    
  40e2d8:	lahf   
  40e2d9:	sub    eax,0x8662eac5
  40e2de:	sub    eax,0x185cc9ce
  40e2e3:	pop    ebx
  40e2e4:	and    ah,BYTE PTR [ecx]
  40e2e6:	gs jae 0x40e2d2
  40e2e9:	xor    edx,DWORD PTR [edx-0x7f2a0e4e]
  40e2ef:	iret   
  40e2f0:	gs pop ss
  40e2f2:	mov    ch,0x51
  40e2f4:	push   0x21725551
  40e2f9:	dec    ebx
  40e2fa:	jge    0x40e34f
  40e2fc:	pop    eax
  40e2fd:	icebp  
  40e2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e300:	test   DWORD PTR ds:0x44282dd5,ebp
  40e306:	and    eax,0x66dc46b1
  40e30b:	ja     0x40e33f
  40e30d:	ja     0x40e32a
  40e30f:	mov    eax,0x235b026a
  40e314:	nop    DWORD PTR [edx]
  40e317:	jecxz  0x40e2ac
  40e319:	shl    BYTE PTR [edi+0x2c],0x33
  40e31d:	mov    esi,0x25138b62
  40e322:	push   0x1065bb37
  40e327:	xlat   BYTE PTR ds:[ebx]
  40e328:	ror    BYTE PTR [ebx-0x74],1
  40e32b:	mov    eax,0xf4d4386a
  40e330:	xchg   esi,eax
  40e332:	pusha  
  40e333:	dec    esi
  40e334:	sub    eax,DWORD PTR [edi+0x4ad153c6]
  40e33a:	mov    dl,0x56
  40e33c:	imul   esp,DWORD PTR [esi+0x3b351cd],0x5b1051d
  40e346:	icebp  
  40e347:	out    0x8d,al
  40e349:	outs   dx,DWORD PTR ds:[esi]
  40e34a:	dec    ebx
  40e34b:	iret   
  40e34c:	int    0xb1
  40e34e:	out    dx,al
  40e34f:	scas   eax,DWORD PTR es:[edi]
  40e350:	out    0xcc,al
  40e352:	leave  
  40e353:	fmul   QWORD PTR [ebp+0x39]
  40e356:	xor    cl,cl
  40e358:	push   0x9a1584aa
  40e35d:	fldenv [edx-0x63d53615]
  40e363:	je     0x40e323
  40e365:	pop    ds
  40e366:	fld    QWORD PTR [edx-0x69f203fb]
  40e36c:	cmp    esp,DWORD PTR [eax+esi*8-0x2b8b6b21]
  40e373:	daa    
  40e374:	xchg   DWORD PTR [edi+0x2a],esp
  40e377:	call   0xc3d7c44
  40e37c:	iret   
  40e37d:	scas   al,BYTE PTR es:[edi]
  40e37e:	pushf  
  40e37f:	dec    ebx
  40e380:	ficom  WORD PTR [ecx+0x7b7947e7]
  40e386:	xchg   edi,eax
  40e387:	mov    dl,0xee
  40e389:	mov    eax,0x7005cf98
  40e38e:	ds (bad) 
  40e390:	jle    0x40e3b6
  40e392:	inc    esp
  40e393:	mov    ah,BYTE PTR [ecx+edi*4]
  40e396:	add    al,BYTE PTR [edi-0x69]
  40e399:	or     cl,BYTE PTR [ebx+eiz*1-0x3353be]
  40e3a0:	mov    bl,0x1
  40e3a2:	mov    BYTE PTR [edi+0x359406a7],dl
  40e3a8:	mov    ecx,0x705c65e9
  40e3ad:	in     eax,0x0
  40e3af:	xor    eax,0x9c8c88a7
  40e3b4:	fmul   QWORD PTR [ebp-0x76]
  40e3b7:	pop    edx
  40e3b8:	lods   al,BYTE PTR ds:[esi]
  40e3b9:	and    BYTE PTR [esi],al
  40e3bb:	jae    0x40e387
  40e3bd:	mov    eax,ds:0x28949b9
  40e3c2:	dec    edi
  40e3c3:	ret    0x8c96
  40e3c6:	sub    BYTE PTR [edx],ch
  40e3c8:	jle    0x40e393
  40e3ca:	sub    al,0xea
  40e3cc:	jp     0x40e3f7
  40e3ce:	push   esp
  40e3cf:	fwait
  40e3d0:	(bad)  
  40e3d1:	inc    ebp
  40e3d2:	cmp    edx,DWORD PTR [edi-0x27]
  40e3d5:	mov    ebp,0x8e51903
  40e3da:	push   ds
  40e3db:	ins    BYTE PTR es:[edi],dx
  40e3dc:	and    DWORD PTR [ecx-0x1a],esp
  40e3df:	call   0x3327:0x5cd64068
  40e3e6:	pmaxub mm0,mm2
  40e3e9:	and    DWORD PTR [ebp-0x7c3a83a0],esi
  40e3ef:	xchg   DWORD PTR [edi],esi
  40e3f1:	arpl   WORD PTR [edx+0x53],ax
  40e3f4:	push   0xe
  40e3f6:	fsub   QWORD PTR [ecx+0x50b2ee16]
  40e3fc:	and    BYTE PTR [ebp+0x5e],al
  40e3ff:	push   cs
  40e400:	jno    0x40e44f
  40e402:	adc    DWORD PTR [edi+0x339bde45],esp
  40e408:	sti    
  40e409:	repz dec edx
  40e40b:	sbb    BYTE PTR [ebx+0x63c11850],0x99
  40e412:	jl     0x40e3c6
  40e414:	adc    DWORD PTR [ecx],esp
  40e416:	mov    ch,0x30
  40e418:	jb     0x40e433
  40e41a:	sbb    DWORD PTR [eax-0x69],esp
  40e41d:	jp     0x40e444
  40e41f:	es popf 
  40e421:	sbb    eax,0xbcf1ea23
  40e426:	add    DWORD PTR [edx+0x103e8a8d],eax
  40e42c:	out    dx,al
  40e42d:	pop    eax
  40e42e:	lss    ebp,FWORD PTR [ecx+eiz*1]
  40e432:	popf   
  40e433:	mov    edx,0xd8945a2c
  40e438:	pushf  
  40e439:	call   0x5d8a:0xff80f85f
  40e440:	shr    DWORD PTR [ebp-0x6],0x76
  40e444:	test   BYTE PTR [edi+0x5559f12d],ah
  40e44a:	(bad)  
  40e44b:	adc    DWORD PTR [ebx+edi*1],eax
  40e44e:	jge    0x40e488
  40e450:	in     al,dx
  40e451:	inc    ebp
  40e452:	daa    
  40e453:	clc    
  40e454:	or     dh,BYTE PTR [edi]
  40e456:	ins    DWORD PTR es:[edi],dx
  40e457:	call   0x240f:0xddc403d3
  40e45e:	popf   
  40e45f:	test   eax,0x4d88c037
  40e464:	inc    ecx
  40e465:	xor    edi,DWORD PTR [ebp-0x4340516]
  40e46b:	in     eax,0x69
  40e46d:	arpl   di,di
  40e46f:	(bad)  
  40e470:	jmp    0x265e:0x974e7a39
  40e477:	sbb    BYTE PTR [edi-0x5e960072],0xcd
  40e47e:	cli    
  40e47f:	int    0x5a
  40e481:	gs push ebx
  40e483:	test   eax,0x159a367d
  40e488:	rcr    DWORD PTR [eax+ebp*4],1
  40e48b:	popa   
  40e48c:	mov    DWORD PTR [edi+0x29],eax
  40e48f:	jle    0x40e4bd
  40e491:	fucomp st(7)
  40e493:	adc    BYTE PTR [esi],dl
  40e495:	jbe    0x40e442
  40e497:	sbb    DWORD PTR [edi],edx
  40e499:	xchg   edx,eax
  40e49a:	mov    al,ds:0x6e55329e
  40e49f:	aam    0x9a
  40e4a1:	imul   ecx,DWORD PTR [esi+0x1d],0xffffffdf
  40e4a5:	cmp    ch,BYTE PTR [eax+edi*1]
  40e4a8:	lea    esi,[ecx-0x4a9adf1e]
  40e4ae:	xchg   edi,eax
  40e4af:	(bad)  
  40e4b0:	mov    BYTE PTR [edx],bl
  40e4b2:	dec    eax
  40e4b3:	or     BYTE PTR [edi+0x2a],dl
  40e4b6:	fwait
  40e4b7:	imul   esi,DWORD PTR [edx+0x2cf45030],0xc1f5c148
  40e4c1:	xor    BYTE PTR [edx],al
  40e4c3:	std    
  40e4c4:	ror    eax,cl
  40e4c6:	mov    ebx,0x8dc0f44e
  40e4cb:	push   esp
  40e4cc:	add    al,0x9e
  40e4ce:	addr16 ds retf 
  40e4d1:	xchg   BYTE PTR [ebp-0x5c2233cc],dh
  40e4d7:	push   ebx
  40e4d8:	(bad)  
  40e4da:	xchg   esi,eax
  40e4db:	jb     0x40e4b3
  40e4dd:	das    
  40e4de:	add    eax,0x27149a1b
  40e4e3:	inc    eax
  40e4e4:	ret    0x7338
  40e4e7:	jmp    0x11bf0203
  40e4ec:	mov    bl,bh
  40e4ee:	add    dl,ch
  40e4f0:	cs jne 0x40e4c2
  40e4f3:	and    ah,BYTE PTR [ecx-0x1d]
  40e4f6:	popf   
  40e4f7:	je     0x40e51a
  40e4f9:	cmp    al,0x19
  40e4fb:	fsubr  QWORD PTR [ebx-0x2c]
  40e4fe:	leave  
  40e4ff:	dec    esp
  40e500:	xor    BYTE PTR [esi+0x48],dh
  40e503:	jb     0x40e53c
  40e505:	dec    esp
  40e506:	sub    DWORD PTR [edi+0x6e],0x6d
  40e50a:	daa    
  40e50b:	sahf   
  40e50c:	ins    DWORD PTR es:[edi],dx
  40e50d:	xchg   edx,eax
  40e50e:	add    ah,bh
  40e510:	bound  edx,QWORD PTR [ebx+0x2a]
  40e513:	pop    ebp
  40e514:	pop    ds
  40e515:	ins    DWORD PTR es:[edi],dx
  40e516:	add    bl,BYTE PTR [ebx+0x5]
  40e519:	xor    cl,BYTE PTR [edi-0x67]
  40e51c:	in     al,0xc7
  40e51e:	add    ecx,DWORD PTR [ebx-0x5a55e159]
  40e524:	lahf   
  40e525:	push   ecx
  40e526:	xor    DWORD PTR [ecx],edi
  40e528:	popf   
  40e529:	xor    edi,DWORD PTR [eax+ebx*2+0x69]
  40e52d:	(bad)  
  40e52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e530:	cmp    eax,0x115082cf
  40e535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e536:	and    BYTE PTR [eax*8+0x4d179ed9],bl
  40e53d:	sub    BYTE PTR [ebx+0x1d6b00f5],al
  40e543:	std    
  40e544:	sbb    DWORD PTR [ebx-0x3c],0xffffffea
  40e548:	xor    al,0x1e
  40e54a:	inc    eax
  40e54b:	and    al,BYTE PTR [ecx-0x4d]
  40e54e:	in     eax,dx
  40e54f:	int    0x4a
  40e551:	add    esi,DWORD PTR [ebx-0x76]
  40e554:	retf   
  40e555:	(bad)  
  40e557:	and    edi,DWORD PTR [edi-0x7a1b79b3]
  40e55d:	stos   DWORD PTR es:[edi],eax
  40e55e:	pop    es
  40e55f:	cwde   
  40e560:	add    eax,0xbae770df
  40e565:	xor    eax,ebx
  40e567:	lods   al,BYTE PTR ds:[esi]
  40e568:	xlat   BYTE PTR ds:[ebx]
  40e569:	dec    ecx
  40e56a:	or     BYTE PTR [eax],bh
  40e56c:	mov    edi,0x7b6d3185
  40e571:	dec    ecx
  40e572:	dec    ebp
  40e573:	cmp    al,0x6b
  40e575:	push   0x844e6a65
  40e57a:	hlt    
  40e57b:	jne    0x40e587
  40e57d:	mov    ebp,0x837bc5d4
  40e582:	out    dx,eax
  40e583:	mov    es,eax
  40e585:	fnsave [ebp+0x57ec6572]
  40e58b:	shr    DWORD PTR [ebx+0x59],0x5d
  40e58f:	dec    ebp
  40e590:	ja     0x40e571
  40e592:	imul   esp,esi,0x44
  40e595:	xor    al,al
  40e597:	xchg   edi,eax
  40e598:	xor    al,0x2
  40e59a:	loope  0x40e589
  40e59c:	cwde   
  40e59d:	mov    ds:0x7a5c5c16,eax
  40e5a2:	mov    ds:0xd7f0efa0,al
  40e5a7:	mov    ch,0xa9
  40e5a9:	jle    0x40e541
  40e5ab:	fistp  WORD PTR [eax-0x27116dda]
  40e5b1:	and    al,0x6f
  40e5b3:	inc    ecx
  40e5b4:	sahf   
  40e5b5:	(bad)  [esi-0x26]
  40e5b8:	jg     0x40e55e
  40e5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5bb:	mov    bl,0xdb
  40e5bd:	popa   
  40e5be:	rcl    BYTE PTR [edx-0x77f824c9],0xb1
  40e5c5:	retf   0x1e89
  40e5c8:	out    0x9c,al
  40e5ca:	mov    fs,WORD PTR [ecx+0x17346607]
  40e5d0:	xor    cl,dh
  40e5d2:	mov    ebp,0xc1fa48bb
  40e5d7:	shr    DWORD PTR [eax],1
  40e5d9:	push   ebx
  40e5da:	outs   dx,BYTE PTR ds:[esi]
  40e5db:	cmp    BYTE PTR [esi-0x14be127c],cl
  40e5e1:	cwde   
  40e5e2:	das    
  40e5e3:	cmp    edx,DWORD PTR [ebp+0x7497d393]
  40e5e9:	rol    DWORD PTR [ecx+0x17],0xa9
  40e5ed:	ret    0xe1bf
  40e5f0:	cwde   
  40e5f1:	mov    edx,0x8d08b489
  40e5f6:	cmovl  esi,DWORD PTR [ebx-0x6c088d31]
  40e5fd:	mov    eax,0xa09b9f1b
  40e602:	xor    BYTE PTR [bp+di-0xd],al
  40e606:	jecxz  0x40e5ca
  40e608:	jmp    0xb8aadda0
  40e60d:	jo     0x40e5ea
  40e60f:	mov    WORD PTR [esi+eiz*8+0x69],cs
  40e613:	mov    dl,dl
  40e615:	jmp    0x5166:0xf3a68360
  40e61c:	mov    al,ds:0xe728cfe2
  40e621:	mov    edi,0x9e5c29a6
  40e626:	out    dx,eax
  40e627:	xchg   esi,ecx
  40e629:	cmp    dh,BYTE PTR fs:[ecx]
  40e62c:	sub    DWORD PTR [ebp+ebp*2+0x32],edi
  40e630:	repz fwait
  40e632:	test   eax,0xd73f7375
  40e637:	fsubp  st(7),st
  40e639:	loope  0x40e689
  40e63b:	dec    esi
  40e63c:	adc    BYTE PTR [edi],dl
  40e63e:	cmp    edx,esi
  40e640:	jle    0x40e696
  40e642:	mov    cs,WORD PTR [ebx+0x2d]
  40e645:	fisub  WORD PTR [esi-0xbb3de79]
  40e64b:	test   al,0xdd
  40e64d:	or     DWORD PTR [eax],esi
  40e64f:	adc    ah,ah
  40e651:	mov    al,ds:0x400793ec
  40e656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e657:	add    DWORD PTR [esi+0x1c6d760f],esi
  40e65d:	sub    al,0x40
  40e65f:	jl     0x40e667
  40e661:	xchg   edx,eax
  40e662:	adc    DWORD PTR [ecx+0xa3bb8f2],0xcfc3dd16
  40e66c:	sub    cl,ah
  40e66e:	loope  0x40e5f8
  40e670:	out    dx,eax
  40e671:	xchg   edi,eax
  40e672:	cwde   
  40e673:	iret   
  40e674:	out    0xd1,al
  40e676:	imul   eax,DWORD PTR [ebp-0x56],0x5291b845
  40e67d:	ins    DWORD PTR es:[edi],dx
  40e67e:	scas   eax,DWORD PTR es:[edi]
  40e67f:	mov    edx,0xc2e8e34f
  40e684:	leave  
  40e685:	mov    ds:0x230623af,al
  40e68a:	mov    ds:0xfdaed521,al
  40e68f:	stos   BYTE PTR es:[edi],al
  40e690:	cdq    
  40e691:	adc    al,0xdb
  40e693:	dec    eax
  40e694:	(bad)  
  40e695:	mov    bh,0x43
  40e697:	xor    DWORD PTR [edi],eax
  40e699:	out    0x66,eax
  40e69b:	pop    eax
  40e69c:	in     eax,dx
  40e69d:	mov    dl,0x68
  40e69f:	push   ss
  40e6a0:	pop    ds
  40e6a1:	mov    WORD PTR [ebx-0x7491f298],gs
  40e6a7:	repnz lods eax,DWORD PTR ds:[esi]
  40e6a9:	push   ds
  40e6aa:	je     0x40e6d2
  40e6ac:	adc    dl,BYTE PTR [ebp+0x4df4926e]
  40e6b2:	les    edx,FWORD PTR [edi+ebp*8-0x63]
  40e6b6:	outs   dx,DWORD PTR ds:[esi]
  40e6b7:	cmp    DWORD PTR [edi-0x22],ebp
  40e6ba:	loopne 0x40e729
  40e6bc:	or     DWORD PTR [ebx-0x76],0x5ec647ab
  40e6c3:	sub    al,0x53
  40e6c5:	mov    al,0x39
  40e6c7:	mov    bh,0x11
  40e6c9:	int    0x74
  40e6cb:	sar    BYTE PTR [eax-0x5862a6d3],0xa0
  40e6d2:	out    dx,eax
  40e6d3:	(bad)  
  40e6d4:	in     al,dx
  40e6d5:	mov    ebp,0x3d061432
  40e6da:	cli    
  40e6db:	xor    edi,DWORD PTR [edi-0x51e054ac]
  40e6e1:	dec    ebp
  40e6e2:	das    
  40e6e3:	adc    dl,BYTE PTR ds:0x440d36f6
  40e6e9:	clc    
  40e6ea:	mov    ch,0x73
  40e6ec:	xor    BYTE PTR [ecx+edi*2+0x76],0xd
  40e6f1:	push   es
  40e6f2:	icebp  
  40e6f3:	jmp    0xb86f:0x5e393ec3
  40e6fa:	jb     0x40e771
  40e6fc:	xor    ebp,0xd37cb029
  40e702:	dec    ebx
  40e703:	mov    edx,0xbdaaa36a
  40e708:	fistp  DWORD PTR [edi-0x6f]
  40e70b:	xchg   ebx,eax
  40e70c:	add    eax,0xcc015fa6
  40e711:	cwde   
  40e712:	jle    0x40e6d7
  40e714:	xchg   ebp,eax
  40e715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e716:	repz and cl,BYTE PTR [ebx-0x2db8fada]
  40e71d:	mov    bh,0x7a
  40e71f:	adc    al,0x16
  40e721:	aas    
  40e722:	out    dx,eax
  40e723:	arpl   sp,ax
  40e725:	int    0xf2
  40e727:	bound  ecx,QWORD PTR [esi]
  40e729:	and    BYTE PTR ds:0xd3c5a60e,dh
  40e72f:	es mov esp,0x27af7e67
  40e735:	push   ds
  40e736:	push   ds
  40e737:	hlt    
  40e738:	push   0xffffffbc
  40e73a:	fbld   TBYTE PTR [di-0x56]
  40e73e:	adc    esi,DWORD PTR [edx+0x43]
  40e741:	adc    edi,0x4e
  40e744:	mov    cl,0x62
  40e746:	ret    
  40e747:	mov    al,0x14
  40e749:	aas    
  40e74a:	lods   eax,DWORD PTR ds:[esi]
  40e74b:	xor    eax,0x6fa0d99b
  40e750:	cmp    esi,DWORD PTR [eax+0x50]
  40e753:	and    esi,DWORD PTR [esi-0x4c]
  40e756:	(bad)  [edi+0x3b5b814a]
  40e75c:	mov    ds:0x3933224a,al
  40e761:	sub    al,0x9a
  40e763:	stos   BYTE PTR es:[edi],al
  40e764:	fisttp DWORD PTR [edi-0xabf4738]
  40e76a:	daa    
  40e76b:	push   cs
  40e76c:	mov    ds:0x85667272,al
  40e771:	inc    ebp
  40e772:	jnp    0x40e7b6
  40e774:	xchg   ecx,eax
  40e775:	imul   ecx,DWORD PTR [ecx-0x44],0xfffffffc
  40e779:	sub    eax,0x795f2f1a
  40e77e:	jnp    0x40e7ef
  40e780:	pop    ss
  40e781:	out    0x6b,eax
  40e783:	(bad)  
  40e784:	lods   al,BYTE PTR ds:[esi]
  40e785:	leave  
  40e786:	dec    esi
  40e787:	sbb    al,0xb6
  40e789:	sub    eax,0xc992ea53
  40e78e:	ret    0x5606
  40e791:	dec    ebp
  40e792:	mov    BYTE PTR [edx],dh
  40e794:	and    BYTE PTR [eax],ah
  40e796:	mov    edi,0x81b17ae3
  40e79b:	mov    bl,0xa1
  40e79d:	enter  0xcfd1,0x25
  40e7a1:	mov    es,WORD PTR [edi+eax*2-0x25]
  40e7a5:	xchg   BYTE PTR ds:0x4c9a8d87,bh
  40e7ab:	or     BYTE PTR [esp+eax*2+0x14],ch
  40e7af:	(bad)  
  40e7b1:	sar    edx,cl
  40e7b3:	dec    esi
  40e7b4:	jmp    FWORD PTR [edx+0x1d809aed]
  40e7ba:	xchg   esi,eax
  40e7bb:	push   ecx
  40e7bc:	xchg   ecx,eax
  40e7bd:	sub    DWORD PTR [eax-0x7b160eaa],esp
  40e7c3:	or     al,0x1a
  40e7c5:	sub    esp,DWORD PTR [eax-0x61]
  40e7c8:	retf   
  40e7c9:	daa    
  40e7ca:	xchg   esi,eax
  40e7cb:	mov    ds:0xaf2b8324,eax
  40e7d0:	push   cs
  40e7d1:	retf   
  40e7d2:	inc    ecx
  40e7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d4:	(bad)  
  40e7d5:	loope  0x40e7b7
  40e7d7:	daa    
  40e7d8:	sbb    cl,BYTE PTR ds:0x7c46e7d3
  40e7de:	mov    ecx,0xf7d9ae0c
  40e7e3:	and    dl,cl
  40e7e5:	xchg   ah,dl
  40e7e7:	jbe    0x40e852
  40e7e9:	add    BYTE PTR [edx],0x8b
  40e7ec:	push   0x3170821
  40e7f1:	les    edx,FWORD PTR ds:[esi]
  40e7f4:	call   DWORD PTR [ebx]
  40e7f6:	std    
  40e7f7:	das    
  40e7f8:	out    0x31,eax
  40e7fa:	adc    BYTE PTR [eax],ah
  40e7fc:	pop    ss
  40e7fd:	rol    BYTE PTR [ebx+0x20],cl
  40e800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e801:	xchg   edi,eax
  40e802:	enter  0x55a1,0xf9
  40e806:	sub    ecx,DWORD PTR [ecx+0x73]
  40e809:	xor    BYTE PTR [eax-0x461cd9ee],bl
  40e80f:	idiv   al
  40e811:	mov    BYTE PTR [ebp-0x813b43b],bh
  40e817:	mov    esp,0x74a14309
  40e81c:	sub    ah,BYTE PTR [ecx+0x16]
  40e81f:	aad    0x89
  40e821:	shl    dl,cl
  40e823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e824:	aaa    
  40e825:	jp     0x40e82e
  40e827:	dec    ebx
  40e828:	push   ebx
  40e829:	clc    
  40e82a:	adc    cl,BYTE PTR [eax-0x3b]
  40e82d:	xor    eax,0xa57ff74a
  40e832:	mov    esi,0xc6f9ed3e
  40e837:	ret    0xd168
  40e83a:	jg     0x40e898
  40e83c:	mov    esi,eax
  40e83e:	out    0x2f,eax
  40e840:	scas   eax,DWORD PTR es:[edi]
  40e841:	lods   eax,DWORD PTR ds:[esi]
  40e842:	jbe    0x40e7c6
  40e844:	enter  0x5796,0xa2
  40e848:	jb     0x40e85f
  40e84a:	(bad)  
  40e84b:	div    eax
  40e84d:	jnp    0x40e8ad
  40e84f:	mov    bh,ah
  40e851:	les    esp,FWORD PTR [ebx+eiz*4]
  40e854:	ret    0x9715
  40e857:	scas   eax,DWORD PTR es:[edi]
  40e858:	sbb    al,0xd4
  40e85a:	jge    0x40e8cd
  40e85c:	arpl   WORD PTR [ecx],cx
  40e85e:	in     al,dx
  40e85f:	jecxz  0x40e7fb
  40e861:	mov    esi,0x4e6f7db6
  40e866:	into   
  40e867:	xor    ebx,DWORD PTR [eax-0xc5b0402]
  40e86d:	sub    al,0xa
  40e86f:	pop    esp
  40e870:	out    dx,al
  40e871:	ror    DWORD PTR [ecx+ecx*2+0x5640b67f],1
  40e878:	aas    
  40e879:	mov    al,0xda
  40e87b:	fdivr  QWORD PTR [edi-0xbd4547c]
  40e881:	sub    al,0xe7
  40e883:	pop    es
  40e884:	mov    ch,0x10
  40e886:	or     al,0x85
  40e888:	and    ebx,edi
  40e88a:	bound  edx,QWORD PTR [ecx-0x3e23e0a2]
  40e890:	imul   esp,ebp,0x7362d00d
  40e896:	and    al,0xd6
  40e898:	cmp    DWORD PTR [edx],esi
  40e89a:	ficom  DWORD PTR [eax+0x0]
  40e89d:	pop    esi
  40e89e:	xchg   ecx,eax
  40e89f:	lods   al,BYTE PTR ds:[esi]
  40e8a0:	mov    esi,0xfe322451
  40e8a5:	lods   al,BYTE PTR ds:[esi]
  40e8a6:	or     eax,0xcd853bc8
  40e8ab:	mov    bl,0xf6
  40e8ad:	sbb    DWORD PTR [esi+eax*8+0x795635c0],ecx
  40e8b4:	out    0xc7,eax
  40e8b6:	push   ds
  40e8b7:	xor    BYTE PTR [ecx],ah
  40e8b9:	push   ebp
  40e8ba:	pop    ecx
  40e8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bc:	inc    ecx
  40e8bd:	les    ecx,FWORD PTR [eax+0x72]
  40e8c0:	jge    0x40e90f
  40e8c2:	dec    ebp
  40e8c4:	jp     0x40e8e4
  40e8c6:	ds pop ds
  40e8c8:	cmp    ecx,esp
  40e8ca:	xchg   ebp,eax
  40e8cb:	mov    ebx,0x8f854a75
  40e8d0:	out    0xad,eax
  40e8d2:	dec    eax
  40e8d3:	cwde   
  40e8d4:	push   ecx
  40e8d5:	add    eax,0x63c3524d
  40e8da:	inc    esi
  40e8db:	out    dx,al
  40e8dc:	xchg   cl,cl
  40e8de:	outs   dx,BYTE PTR ds:[esi]
  40e8df:	sti    
  40e8e0:	mov    bh,0xe3
  40e8e2:	shr    ebx,0x12
  40e8e5:	jne    0x40e94e
  40e8e7:	js     0x40e929
  40e8e9:	pop    ds
  40e8ea:	(bad)  
  40e8eb:	cdq    
  40e8ec:	mov    edx,0xc99fe483
  40e8f1:	adc    al,0x22
  40e8f3:	add    DWORD PTR [esi],esp
  40e8f5:	xor    eax,0x35ccafa7
  40e8fa:	aad    0x98
  40e8fc:	mov    ds:0x47f2b2f1,eax
  40e901:	cld    
  40e902:	sar    DWORD PTR [edx+0x2f261a21],0x9a
  40e909:	mov    BYTE PTR [edx+esi*4],dh
  40e90c:	les    edx,FWORD PTR [esp+ebp*1]
  40e90f:	addr16 adc ecx,esi
  40e912:	je     0x40e946
  40e914:	xchg   esi,eax
  40e915:	js     0x40e966
  40e917:	shl    esp,cl
  40e919:	jp     0x40e92d
  40e91b:	retf   
  40e91c:	jecxz  0x40e97d
  40e91e:	pop    edx
  40e91f:	retf   0x79b4
  40e922:	scas   ax,WORD PTR es:[edi]
  40e924:	lock mov bh,0x62
  40e927:	in     al,dx
  40e928:	cmp    al,0xb7
  40e92a:	sbb    DWORD PTR [edx+0x1dc441ee],edx
  40e930:	inc    esi
  40e931:	ins    DWORD PTR es:[edi],dx
  40e932:	pop    ecx
  40e933:	dec    eax
  40e934:	lock adc BYTE PTR [eax+0x50],ah
  40e938:	int    0xca
  40e93a:	xchg   edi,eax
  40e93b:	(bad)  
  40e93c:	into   
  40e93d:	pusha  
  40e93e:	inc    ebx
  40e93f:	push   0xffffffe1
  40e941:	inc    eax
  40e942:	pop    esp
  40e943:	pop    eax
  40e944:	aad    0xa6
  40e946:	inc    ebx
  40e947:	pop    es
  40e948:	mov    eax,ds:0x160f00b1
  40e94d:	aaa    
  40e94e:	repz sub eax,0x51b8996d
  40e954:	xchg   ebp,eax
  40e955:	cmp    DWORD PTR ds:0x92b97693,edi
  40e95b:	pop    ds
  40e95c:	and    eax,0x67ee0473
  40e961:	and    dh,BYTE PTR [ebx]
  40e963:	jbe    0x40e9a4
  40e965:	jle    0x40e9c5
  40e967:	ret    
  40e968:	aaa    
  40e969:	ror    BYTE PTR [edi-0x59],1
  40e96c:	popf   
  40e96d:	pop    ecx
  40e96e:	cli    
  40e96f:	cs js  0x40e97a
  40e972:	imul   edx,esi,0xc12b64d8
  40e978:	daa    
  40e979:	loop   0x40e9d4
  40e97b:	lock mov ds:0x92109587,eax
  40e981:	pop    ss
  40e982:	sbb    cl,BYTE PTR [edi-0x2f]
  40e985:	cmp    al,BYTE PTR [edi-0x6711ad78]
  40e98b:	sbb    bh,BYTE PTR [edi+esi*1]
  40e98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98f:	or     al,ah
  40e991:	(bad)  
  40e992:	ins    BYTE PTR es:[edi],dx
  40e993:	add    al,0xc3
  40e995:	scas   al,BYTE PTR es:[edi]
  40e996:	mov    edx,0xe315df51
  40e99b:	adc    al,0xce
  40e99d:	and    al,BYTE PTR [eax+0x5b268466]
  40e9a3:	out    dx,eax
  40e9a4:	(bad)  
  40e9a5:	cld    
  40e9a6:	into   
  40e9a7:	ds test dh,0xaf
  40e9ab:	and    BYTE PTR [ebx],bh
  40e9ad:	out    dx,al
  40e9ae:	call   0xdc9423c9
  40e9b3:	mov    esi,0x7bacd963
  40e9b8:	fcom   DWORD PTR [edx-0x48]
  40e9bb:	inc    eax
  40e9bc:	mov    ecx,DWORD PTR [eax]
  40e9be:	pop    ebx
  40e9bf:	xor    ah,dl
  40e9c1:	fadd   DWORD PTR [eax+edi*2]
  40e9c4:	js     0x40ea10
  40e9c6:	in     eax,0x11
  40e9c8:	fisub  WORD PTR [esi-0x3a00deda]
  40e9ce:	and    DWORD PTR [edx+0x3c],esp
  40e9d1:	mov    bh,0xa3
  40e9d3:	pop    ecx
  40e9d4:	or     al,0xde
  40e9d6:	jns    0x40e9f5
  40e9d8:	and    ebx,esp
  40e9da:	sub    DWORD PTR [edi],ecx
  40e9dc:	pop    ebp
  40e9dd:	repz push cs
  40e9df:	or     DWORD PTR [ebp-0x9],edx
  40e9e2:	arpl   WORD PTR [esi],ax
  40e9e4:	sbb    edi,DWORD PTR [eax+0x1657e4d7]
  40e9ea:	add    edi,edx
  40e9ec:	mov    eax,edi
  40e9ee:	(bad)
  40e9f1:	xchg   edx,eax
  40e9f2:	adc    bh,BYTE PTR [ebp-0x2f]
  40e9f5:	jmp    0x40ea50
  40e9f7:	push   ds
  40e9f8:	adc    al,0x29
  40e9fa:	ret    
  40e9fb:	sub    eax,DWORD PTR gs:[ecx-0x28]
  40e9ff:	addr16 loope 0x40e98c
  40ea02:	xor    bl,BYTE PTR [eax+0x6d53a7cc]
  40ea08:	int3   
  40ea09:	ss (bad) 
  40ea0b:	cmp    DWORD PTR [ebx-0x302b43dc],eax
  40ea11:	cwde   
  40ea12:	cvtdq2ps xmm3,XMMWORD PTR [ebp-0x54]
  40ea16:	sbb    dl,BYTE PTR [eax+0x42880500]
  40ea1c:	and    ah,BYTE PTR [esi+ecx*8+0x7e62611c]
  40ea23:	ins    DWORD PTR es:[edi],dx
  40ea24:	nop
  40ea25:	lds    esp,FWORD PTR ds:0xf470bbfd
  40ea2b:	mov    eax,ds:0x9a500ad2
  40ea30:	pop    eax
  40ea31:	cld    
  40ea32:	aam    0xa4
  40ea34:	dec    esp
  40ea35:	sar    ebp,1
  40ea37:	push   ebx
  40ea38:	test   DWORD PTR [ecx],ebp
  40ea3a:	dec    esp
  40ea3b:	mov    ebp,0xec630f9a
  40ea40:	js     0x40ea9c
  40ea42:	aas    
  40ea43:	xchg   esp,eax
  40ea44:	mov    dl,0x55
  40ea46:	rol    BYTE PTR [ebx-0x23b787bb],cl
  40ea4c:	mov    esp,0x7c3035bc
  40ea51:	inc    ecx
  40ea52:	inc    esi
  40ea53:	lods   al,BYTE PTR ds:[esi]
  40ea54:	rol    DWORD PTR [ebx-0x132c9814],cl
  40ea5a:	scas   al,BYTE PTR es:[edi]
  40ea5b:	jo     0x40ea1d
  40ea5d:	sub    al,0x7c
  40ea5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea60:	xchg   ebx,eax
  40ea61:	xchg   ecx,eax
  40ea62:	int    0x33
  40ea64:	add    eax,0x54d06048
  40ea69:	fwait
  40ea6a:	cmp    ax,0x3dcd
  40ea6e:	mov    bh,0xb8
  40ea70:	or     cl,0x23
  40ea73:	xchg   ebx,eax
  40ea74:	stos   BYTE PTR es:[edi],al
  40ea75:	dec    ecx
  40ea76:	sbb    DWORD PTR [ecx],0x5a
  40ea79:	aas    
  40ea7a:	fwait
  40ea7b:	ins    DWORD PTR es:[edi],dx
  40ea7c:	popa   
  40ea7d:	and    dl,bh
  40ea7f:	sbb    eax,0xf6cf4023
  40ea84:	lea    edx,[edi-0x6c]
  40ea87:	out    dx,al
  40ea88:	adc    cl,BYTE PTR [esi+ebp*1-0x60762209]
  40ea8f:	fimul  WORD PTR [esi]
  40ea91:	sub    BYTE PTR [ecx],dl
  40ea93:	adc    eax,0x364f15ff
  40ea98:	sbb    DWORD PTR [ebx-0x26],eax
  40ea9b:	mov    dl,0x39
  40ea9d:	mov    gs,edx
  40ea9f:	mov    edx,0x46adaf5e
  40eaa4:	push   0xffffff9a
  40eaa6:	jmp    0x40ea3b
  40eaa8:	push   esp
  40eaa9:	ror    ah,0x45
  40eaac:	pop    eax
  40eaad:	sub    BYTE PTR [edi+edx*4+0x79],dl
  40eab1:	mov    ds:0x7fba9300,al
  40eab6:	ja     0x40eb0a
  40eab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eab9:	je     0x40eaa3
  40eabb:	pop    ecx
  40eabc:	mov    ah,0x3e
  40eabe:	inc    edi
  40eabf:	inc    ebx
  40eac0:	and    ah,BYTE PTR [ebx+0x21]
  40eac3:	retf   0xd0f2
  40eac6:	popf   
  40eac7:	xchg   ebx,eax
  40eac8:	fcomp  DWORD PTR [esi]
  40eaca:	rol    DWORD PTR [edx],0x8f
  40eacd:	and    al,0x72
  40eacf:	fsub   st(5),st
  40ead1:	pop    edx
  40ead2:	test   DWORD PTR [esi+0x15],edx
  40ead5:	xor    dl,bh
  40ead7:	mov    WORD PTR [ecx+0x58],gs
  40eada:	push   edx
  40eadb:	mov    esi,0x25cfda79
  40eae0:	inc    ebp
  40eae1:	xchg   esi,eax
  40eae2:	sub    DWORD PTR [edi-0x2657611b],edi
  40eae8:	outs   dx,BYTE PTR ds:[esi]
  40eae9:	hlt    
  40eaea:	in     eax,dx
  40eaeb:	mov    ?,WORD PTR [eax-0x1e]
  40eaee:	push   eax
  40eaef:	leave  
  40eaf0:	sub    DWORD PTR [esi],eax
  40eaf2:	lods   al,BYTE PTR ds:[esi]
  40eaf3:	bound  ebp,QWORD PTR [edi+edx*4]
  40eaf6:	cwde   
  40eaf7:	ror    BYTE PTR [ebx-0x4d632aa3],cl
  40eafd:	inc    esp
  40eafe:	mov    dl,0x74
  40eb00:	xchg   ebx,eax
  40eb01:	call   0xf42f:0xb93adef9
  40eb08:	mov    ecx,0x54215993
  40eb0d:	push   ebx
  40eb0e:	call   0xf3d88548
  40eb13:	mov    dl,0x83
  40eb15:	adc    edx,DWORD PTR ds:0xfe777656
  40eb1b:	adc    ah,ch
  40eb1d:	pop    esi
  40eb1e:	mov    ds:0x1c81056e,eax
  40eb23:	popf   
  40eb24:	jbe    0x40eabc
  40eb26:	mov    BYTE PTR [ecx],al
  40eb28:	stos   DWORD PTR es:[edi],eax
  40eb29:	add    bh,BYTE PTR [eax+0x4f]
  40eb2c:	dec    esp
  40eb2d:	cmc    
  40eb2e:	cmp    DWORD PTR ds:0x133d3e3c,ebp
  40eb34:	or     al,0x33
  40eb36:	or     bh,BYTE PTR [esi]
  40eb38:	fstp   QWORD PTR cs:[esi-0x355b9826]
  40eb3f:	dec    ecx
  40eb40:	push   cs
  40eb41:	imul   esi,ecx,0xffffffc7
  40eb44:	mov    dl,0xb8
  40eb46:	test   DWORD PTR [edi-0x3bffef86],esi
  40eb4c:	xor    eax,0xb9d074c9
  40eb51:	pusha  
  40eb52:	mov    ah,0xdf
  40eb54:	mov    ebp,0x37932b94
  40eb59:	lea    eax,ss:[esi+0x63]
  40eb5d:	lods   eax,DWORD PTR ds:[esi]
  40eb5e:	inc    edx
  40eb5f:	jle    0x40eb48
  40eb61:	fdiv   QWORD PTR ds:0x3fcfe122
  40eb67:	add    edx,DWORD PTR [ecx+0x5a]
  40eb6a:	and    BYTE PTR [edx],ah
  40eb6c:	imul   ebp,edi,0xffffff8a
  40eb6f:	femms  
  40eb71:	cmp    BYTE PTR [ebp-0x6906fdca],dh
  40eb77:	add    BYTE PTR [ecx+0x2e],dl
  40eb7a:	mov    ebp,0xfa406d4a
  40eb7f:	pop    esi
  40eb80:	sub    DWORD PTR [edi-0x4f],0xa7762056
  40eb87:	(bad)  
  40eb88:	ins    BYTE PTR es:[edi],dx
  40eb89:	jae    0x40ebee
  40eb8b:	jp     0x40ebd4
  40eb8d:	ds test eax,0x5f46667
  40eb93:	jmp    0x2f6b9e00
  40eb98:	cmp    al,0x4b
  40eb9a:	das    
  40eb9b:	sub    DWORD PTR [ebx],ebp
  40eb9d:	mov    ah,0xa7
  40eb9f:	dec    edx
  40eba0:	mov    ds:0xdaaa28a9,eax
  40eba5:	push   ebp
  40eba6:	fidivr WORD PTR [edx+ebp*1-0x3569704b]
  40ebad:	adc    DWORD PTR [edx],ebx
  40ebaf:	mov    ds:0x11172ff8,al
  40ebb4:	repnz sar DWORD PTR [ecx+0x798846ca],0xb7
  40ebbc:	xchg   BYTE PTR [edi],al
  40ebbe:	xchg   ecx,eax
  40ebbf:	into   
  40ebc0:	lds    edx,FWORD PTR [edi-0x37]
  40ebc3:	inc    eax
  40ebc4:	and    al,BYTE PTR es:[ebx-0x29]
  40ebc8:	scas   eax,DWORD PTR es:[edi]
  40ebc9:	test   DWORD PTR [edx-0x3b0d54eb],edi
  40ebcf:	pop    edx
  40ebd0:	push   edi
  40ebd1:	jbe    0x40ebb2
  40ebd3:	mov    ds:0xd026ab6d,eax
  40ebd8:	adc    DWORD PTR [edx],edx
  40ebda:	cmp    edi,DWORD PTR [edi+0x7]
  40ebdd:	jle    0x40ec3d
  40ebdf:	pop    edi
  40ebe0:	ffree  st(1)
  40ebe2:	jle    0x40ec58
  40ebe4:	mov    eax,0xff7ab170
  40ebe9:	adc    edi,DWORD PTR [esi+eax*2+0x736aede7]
  40ebf0:	scas   eax,DWORD PTR es:[edi]
  40ebf1:	lahf   
  40ebf2:	iret   
  40ebf3:	mov    cl,0xcb
  40ebf5:	int3   
  40ebf6:	push   ebp
  40ebf7:	lods   eax,DWORD PTR ds:[esi]
  40ebf8:	daa    
  40ebf9:	sbb    al,BYTE PTR [edi+ecx*1+0x2]
  40ebfd:	sub    bl,BYTE PTR [eax-0x17]
  40ec00:	push   edx
  40ec01:	cld    
  40ec02:	fdiv   QWORD PTR [ebx]
  40ec04:	ds (bad) 
  40ec06:	and    dl,BYTE PTR [esp+esi*8]
  40ec09:	call   0xf2ac1a48
  40ec0e:	or     DWORD PTR [edi+edx*4-0xa30930c],esp
  40ec15:	xor    BYTE PTR [esi+0x367a799a],cl
  40ec1b:	pusha  
  40ec1c:	icebp  
  40ec1d:	push   ecx
  40ec1e:	clc    
  40ec1f:	mov    DWORD PTR ds:0xcd15230e,esi
  40ec25:	xchg   esp,eax
  40ec26:	dec    ecx
  40ec27:	fnsave [ecx]
  40ec29:	dec    eax
  40ec2a:	ret    
  40ec2b:	sub    al,bl
  40ec2d:	push   esp
  40ec2e:	mov    ch,0x9
  40ec30:	mov    ch,0x8d
  40ec32:	dec    ebp
  40ec33:	and    cl,dl
  40ec35:	jg     0x40ebc2
  40ec37:	and    al,0xf4
  40ec39:	(bad)  
  40ec3b:	sub    eax,0x25a35519
  40ec40:	cmc    
  40ec41:	lods   al,BYTE PTR ds:[esi]
  40ec42:	mov    ds:0x79af4550,eax
  40ec47:	out    dx,eax
  40ec48:	xor    dl,cl
  40ec4a:	jnp    0x40ebd4
  40ec4c:	xchg   edx,eax
  40ec4d:	or     al,0x12
  40ec4f:	lods   al,BYTE PTR ds:[esi]
  40ec50:	pop    es
  40ec51:	retf   
  40ec52:	xchg   DWORD PTR [ebx+0x29],esi
  40ec55:	test   eax,ecx
  40ec57:	adc    edx,DWORD PTR [ecx-0x2760f660]
  40ec5d:	std    
  40ec5e:	pop    ebx
  40ec5f:	mov    ebp,0x300a3ac6
  40ec64:	sbb    DWORD PTR [edx-0x705777a2],ebx
  40ec6a:	stc    
  40ec6b:	mov    edx,0x55ac855b
  40ec70:	xor    esp,DWORD PTR [edx-0x50]
  40ec73:	sti    
  40ec74:	fild   WORD PTR [ebx-0x8344480]
  40ec7a:	pop    edx
  40ec7b:	mov    cl,0x5e
  40ec7d:	in     al,dx
  40ec7e:	xor    al,0x66
  40ec80:	das    
  40ec81:	jle    0x40ec65
  40ec83:	fs das 
  40ec85:	in     eax,0xc
  40ec87:	mov    edi,0x3ea86c38
  40ec8c:	mov    edx,0xa5289b8b
  40ec91:	cmc    
  40ec92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec93:	dec    esi
  40ec94:	ja     0x40eca0
  40ec96:	pop    eax
  40ec97:	jl     0x40ed0c
  40ec99:	or     BYTE PTR [ecx],dl
  40ec9b:	loope  0x40ec98
  40ec9d:	adc    DWORD PTR [esi-0x4e],0x5f5033bc
  40eca4:	or     edi,DWORD PTR [eax]
  40eca6:	ss dec eax
  40eca8:	mov    ch,0xa6
  40ecaa:	pusha  
  40ecab:	addr16 ss push ecx
  40ecae:	cmc    
  40ecaf:	retf   
  40ecb0:	cld    
  40ecb1:	sahf   
  40ecb2:	addr16 mov ah,0x31
  40ecb5:	nop
  40ecb6:	dec    esi
  40ecb7:	or     eax,0x24a8bb77
  40ecbc:	xchg   ecx,eax
  40ecbd:	push   0x57
  40ecbf:	xchg   esi,eax
  40ecc0:	test   eax,0xeea3128e
  40ecc5:	je     0x40ed0f
  40ecc7:	popa   
  40ecc8:	sub    al,0x3c
  40ecca:	push   esp
  40eccb:	inc    ebx
  40eccc:	dec    eax
  40eccd:	and    BYTE PTR [eax-0x39],dh
  40ecd0:	cmp    al,0x5a
  40ecd2:	push   ss
  40ecd3:	fiadd  DWORD PTR [esi+edi*8+0x7e]
  40ecd7:	mov    ebp,0xb785645d
  40ecdc:	xchg   edi,eax
  40ecdd:	int    0x78
  40ecdf:	(bad)  
  40ece0:	out    dx,al
  40ece1:	repnz pop edi
  40ece3:	push   eax
  40ece4:	test   edx,eax
  40ece6:	(bad)  
  40ece7:	jmp    0x7a395f45
  40ecec:	add    eax,0xf616c368
  40ecf1:	mov    ecx,0x9aedf26d
  40ecf6:	mov    esi,0x3df76ab5
  40ecfb:	add    eax,DWORD PTR [edx-0x2b]
  40ecfe:	mov    ch,0xa2
  40ed00:	rol    BYTE PTR [ebp-0x5cefe33c],0xd6
  40ed07:	and    eax,DWORD PTR [edi]
  40ed09:	inc    ebx
  40ed0a:	cmc    
  40ed0b:	jnp    0x40ecf1
  40ed0d:	in     al,dx
  40ed0e:	jne    0x40ed7a
  40ed10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed11:	scas   eax,DWORD PTR es:[edi]
  40ed12:	inc    esi
  40ed13:	hlt    
  40ed14:	pop    ebp
  40ed15:	pushf  
  40ed16:	or     eax,0x54e778c1
  40ed1b:	popa   
  40ed1c:	inc    ecx
  40ed1d:	adc    esi,DWORD PTR [edx-0x59]
  40ed20:	xchg   ebx,eax
  40ed21:	dec    edi
  40ed22:	nop
  40ed23:	int    0xc2
  40ed25:	int3   
  40ed26:	xchg   ebp,eax
  40ed27:	mov    ds,WORD PTR [eax]
  40ed29:	add    al,BYTE PTR [esi]
  40ed2b:	test   al,0x53
  40ed2d:	cs (bad) 
  40ed2f:	pop    ss
  40ed30:	mov    al,ds:0xe6472d57
  40ed35:	fs pop eax
  40ed37:	lahf   
  40ed38:	sub    eax,0x858dee0b
  40ed3d:	retf   0x736a
  40ed40:	mov    edi,DWORD PTR [ecx]
  40ed42:	mov    cl,0xc8
  40ed44:	mov    esp,0x75486407
  40ed49:	sub    eax,0xff2823dc
  40ed4e:	call   0x59db0053
  40ed53:	cmp    eax,0x539a7d17
  40ed58:	lock repnz fisubr WORD PTR [ebx]
  40ed5c:	fwait
  40ed5d:	out    dx,eax
  40ed5e:	ins    BYTE PTR es:[edi],dx
  40ed5f:	in     eax,0xf9
  40ed61:	scas   al,BYTE PTR es:[edi]
  40ed62:	add    eax,0xe7ce2dda
  40ed67:	mov    ebx,0xf9d0256
  40ed6c:	cmp    eax,0xfae56f98
  40ed71:	(bad)  
  40ed72:	cmp    edx,DWORD PTR [ecx]
  40ed74:	or     bl,BYTE PTR [edi-0x4f]
  40ed77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed78:	dec    ebp
  40ed79:	call   0x9f38b51e
  40ed7e:	sbb    BYTE PTR [esi-0x73],dh
  40ed81:	or     DWORD PTR [edi+0x1e5a5e99],0xd4099929
  40ed8b:	repz (bad) 
  40ed8d:	mov    edi,0x3f2a21f7
  40ed92:	push   ds
  40ed93:	rcr    DWORD PTR [ecx+ebp*4-0xb],1
  40ed97:	mov    esi,0xb58999ef
  40ed9c:	lahf   
  40ed9d:	(bad)  
  40ed9e:	adc    DWORD PTR [eax-0x3d420092],ecx
  40eda4:	frstpm(287 only) 
  40eda6:	jle    0x40ed40
  40eda8:	pop    eax
  40eda9:	dec    esi
  40edaa:	rcl    BYTE PTR [edi+0xaf8c995],cl
  40edb0:	mov    bh,0x99
  40edb2:	lds    eax,FWORD PTR [eax]
  40edb4:	xchg   esi,eax
  40edb5:	mov    ecx,0x3dada057
  40edba:	inc    edi
  40edbb:	xor    esi,edi
  40edbd:	retf   
  40edbe:	stc    
  40edbf:	dec    esp
  40edc0:	pushf  
  40edc1:	cmp    esp,DWORD PTR [ebx+0x77b6e4d1]
  40edc7:	popa   
  40edc8:	in     eax,dx
  40edc9:	test   eax,0x795f367d
  40edce:	(bad)  
  40edcf:	jecxz  0x40edeb
  40edd1:	sbb    esp,DWORD PTR [edx-0x3fcba948]
  40edd7:	or     DWORD PTR [edi-0x19],0x2fc57636
  40edde:	mov    dl,0x37
  40ede0:	sub    edx,DWORD PTR [edi+eax*8]
  40ede3:	pop    edi
  40ede4:	inc    esp
  40ede5:	inc    edx
  40ede6:	jl     0x40ee27
  40ede8:	jbe    0x40ee0a
  40edea:	call   0x98a1:0x72ea4d1
  40edf1:	retf   
  40edf2:	inc    edx
  40edf3:	pop    edx
  40edf4:	adc    eax,0xae8e03be
  40edf9:	cmc    
  40edfa:	ins    BYTE PTR es:[edi],dx
  40edfb:	xor    dl,BYTE PTR [edx+edx*2+0x7a018395]
  40ee02:	pop    ds
  40ee03:	dec    ebp
  40ee04:	out    0x72,al
  40ee06:	jmp    0x40edad
  40ee08:	jge    0x40ee24
  40ee0a:	jl     0x40ed9d
  40ee0c:	jnp    0x40ee04
  40ee0e:	or     esi,DWORD PTR [ebx+0x7c1eaa]
  40ee14:	mov    BYTE PTR [eax+0x3f],ch
  40ee17:	mov    ebp,ecx
  40ee19:	and    esp,DWORD PTR [edx-0x1a]
  40ee1c:	outs   dx,BYTE PTR ds:[esi]
  40ee1d:	ret    
  40ee1e:	push   ecx
  40ee1f:	or     dh,0x9a
  40ee22:	mov    esi,0x6e3f8838
  40ee27:	fstp   TBYTE PTR [esi+ebx*4+0x4a]
  40ee2b:	dec    esp
  40ee2c:	ja     0x40edba
  40ee2e:	cmp    al,0x14
  40ee30:	mov    dl,0x8e
  40ee32:	pop    ds
  40ee33:	hlt    
  40ee34:	mov    edi,esp
  40ee36:	jo     0x40ee4a
  40ee38:	cmp    eax,0xe0a0f525
  40ee3d:	in     eax,dx
  40ee3e:	test   BYTE PTR [eax],dh
  40ee40:	push   ds
  40ee41:	ins    BYTE PTR es:[edi],dx
  40ee42:	sub    edx,DWORD PTR [edi+eax*4]
  40ee45:	ds cld 
  40ee47:	or     ah,BYTE PTR [ecx-0x67]
  40ee4a:	jmp    0x3fff:0x55e85970
  40ee51:	xchg   edx,eax
  40ee52:	or     al,0xf1
  40ee54:	stc    
  40ee55:	fild   WORD PTR [ebp-0x70]
  40ee58:	pop    es
  40ee59:	sub    BYTE PTR [ebx],al
  40ee5b:	xor    ah,BYTE PTR [edi-0x3338fd47]
  40ee61:	sub    eax,0xc7f7c39
  40ee66:	add    al,0xad
  40ee68:	xor    bl,dl
  40ee6a:	mov    edx,ecx
  40ee6c:	in     eax,0xa2
  40ee6e:	sahf   
  40ee6f:	(bad)  
  40ee70:	mov    ah,0x69
  40ee72:	push   eax
  40ee73:	mov    esp,0x2ad43465
  40ee78:	dec    bp
  40ee7a:	fcom   QWORD PTR [edx-0x327598a8]
  40ee80:	push   ss
  40ee81:	shl    ebp,1
  40ee83:	out    dx,al
  40ee84:	inc    eax
  40ee85:	xchg   ebp,eax
  40ee86:	ret    
  40ee87:	push   ebx
  40ee88:	cmp    eax,DWORD PTR ds:0xa68a0fd7
  40ee8e:	ret    
  40ee8f:	jns    0x40eee2
  40ee91:	sbb    DWORD PTR [edi-0x67],eax
  40ee94:	sar    DWORD PTR ds:0x972946df,0xe1
  40ee9b:	sbb    al,0x8b
  40ee9d:	aaa    
  40ee9e:	inc    ecx
  40ee9f:	jp     0x40ee31
  40eea1:	fstp   QWORD PTR [edx]
  40eea3:	push   cs
  40eea4:	add    dl,BYTE PTR [ebx+0x7]
  40eea7:	leave  
  40eea8:	ins    DWORD PTR es:[edi],dx
  40eea9:	xor    eax,0x87eb27b7
  40eeae:	mov    ebp,0x3e968903
  40eeb3:	lds    ecx,FWORD PTR [esi-0x59]
  40eeb6:	mov    esi,0xbe3d7319
  40eebb:	adc    al,0x26
  40eebd:	neg    BYTE PTR [ecx+0xc]
  40eec0:	je     0x40ef3e
  40eec2:	ins    DWORD PTR es:[edi],dx
  40eec3:	dec    ebx
  40eec4:	jmp    0x40ee63
  40eec6:	push   edx
  40eec7:	push   ss
  40eec8:	jno    0x40ef25
  40eeca:	out    0x7a,al
  40eecc:	nop
  40eecd:	stos   BYTE PTR es:[edi],al
  40eece:	out    dx,al
  40eecf:	mov    ah,0xc0
  40eed1:	jmp    0xa0ee:0x1e5aef75
  40eed8:	div    DWORD PTR [esi-0x6a]
  40eedb:	cmp    eax,DWORD PTR [eax+esi*1]
  40eede:	stos   DWORD PTR es:[edi],eax
  40eedf:	xchg   esp,esi
  40eee1:	or     eax,0xd51cf29c
  40eee6:	mov    DWORD PTR [ebx],eax
  40eee8:	push   ss
  40eee9:	mov    eax,0x896b7da3
  40eeee:	mov    ds:0xced8a7af,eax
  40eef3:	cdq    
  40eef4:	cmp    al,0x97
  40eef6:	adc    edi,DWORD PTR [edx-0x71e7fbd1]
  40eefc:	daa    
  40eefd:	fsubr  DWORD PTR [eax+0x24bd6411]
  40ef03:	cld    
  40ef04:	xor    BYTE PTR [edx],ah
  40ef06:	popf   
  40ef07:	xchg   ecx,eax
  40ef08:	shl    DWORD PTR [ebp+0x71],1
  40ef0b:	bswap  ebp
  40ef0d:	ret    
  40ef0e:	out    0x65,eax
  40ef10:	dec    esp
  40ef11:	ret    0xeae7
  40ef14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef15:	xchg   DWORD PTR [ebp-0x7b],edi
  40ef18:	mov    eax,0x658fea7e
  40ef1d:	inc    ebx
  40ef1e:	gs out 0x97,al
  40ef21:	jge    0x40ef9a
  40ef23:	mov    ebp,0x128dade0
  40ef28:	ret    0x7daf
  40ef2b:	mov    dl,ah
  40ef2d:	fs push ebx
  40ef2f:	lds    ebx,FWORD PTR [esi+0x63c534a0]
  40ef35:	jmp    0x211f:0xe0d1114c
  40ef3c:	push   esi
  40ef3d:	and    BYTE PTR [esi+ecx*8],dh
  40ef40:	sub    edi,edi
  40ef42:	sbb    DWORD PTR [eax+0x3],edx
  40ef45:	xchg   DWORD PTR [ebp+0xe2e16d8],ebx
  40ef4b:	dec    eax
  40ef4c:	in     al,dx
  40ef4d:	push   ebx
  40ef4e:	mov    eax,0x8a2c68ce
  40ef53:	mov    ds:0x399b95f6,eax
  40ef58:	iret   
  40ef59:	je     0x40efa0
  40ef5b:	mov    WORD PTR [ebx-0x41507304],fs
  40ef61:	sbb    BYTE PTR [ebx+0x61e34ffd],ch
  40ef67:	and    eax,0x1ef87cc1
  40ef6c:	cmp    DWORD PTR [ebx-0xae13f6f],0x4a
  40ef73:	sub    DWORD PTR [ecx-0x51],esi
  40ef76:	cdq    
  40ef77:	and    ebp,ebp
  40ef79:	push   es
  40ef7a:	iret   
  40ef7b:	sbb    cl,cl
  40ef7d:	mov    bh,0x1d
  40ef7f:	xchg   DWORD PTR [ebp-0x2b099384],edi
  40ef85:	mov    WORD PTR [edx-0x176fc9ed],cs
  40ef8b:	repz cmp eax,0x7e9657c4
  40ef91:	inc    BYTE PTR [ebx-0x55f9c7a4]
  40ef97:	shl    DWORD PTR [esi+ebp*4+0x1a3ef035],1
  40ef9e:	ins    BYTE PTR es:[edi],dx
  40ef9f:	dec    edx
  40efa0:	or     al,0xec
  40efa2:	pusha  
  40efa3:	(bad)  
  40efa4:	cld    
  40efa5:	pop    ebp
  40efa6:	mov    bl,0x0
  40efa8:	jno    0x40ef35
  40efaa:	lods   al,BYTE PTR ds:[esi]
  40efab:	dec    ecx
  40efac:	mov    bh,0xdf
  40efae:	in     eax,dx
  40efaf:	repnz dec esi
  40efb1:	jecxz  0x40ef3d
  40efb3:	inc    ebp
  40efb4:	inc    DWORD PTR [ecx+0x42901825]
  40efba:	add    BYTE PTR [eax],al
  40efbc:	add    BYTE PTR [eax],al
  40efbe:	add    BYTE PTR [ebx],dh
  40efc0:	leave  
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0xc8
  40f695:	in     al,dx
  40f696:	push   ds
  40f697:	or     al,BYTE PTR [edi+0x17a7aca]
  40f69d:	pop    edi
  40f69e:	jp     0x40f71a
  40f6a0:	sbb    ebp,edx
  40f6a2:	push   edx
  40f6a3:	ret    0xdcad
  40f6a6:	es pop ds
  40f6a8:	xor    al,0x9c
  40f6aa:	fadd   DWORD PTR [esi-0x48f4d99a]
  40f6b0:	lods   al,BYTE PTR ds:[esi]
  40f6b1:	inc    esp
  40f6b2:	dec    edx
  40f6b3:	dec    ax
  40f6b5:	cmp    al,0x52
  40f6b7:	jns    0x40f6c0
  40f6b9:	mov    esi,0x7c66cecc
  40f6be:	pop    esi
  40f6bf:	pop    edi
  40f6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c1:	fs push ebx
  40f6c3:	inc    ebp
  40f6c4:	ret    0x5f85
  40f6c7:	pop    es
  40f6c8:	daa    
  40f6c9:	cmp    cl,BYTE PTR [ecx+0x22378878]
  40f6cf:	retf   0x1a9b
  40f6d2:	(bad)  
  40f6d3:	mov    ebx,0x351cccfa
  40f6d8:	cs test eax,0x74058754
  40f6de:	and    al,0x4a
  40f6e0:	dec    edi
  40f6e1:	and    ebx,DWORD PTR [ecx+0x7d]
  40f6e4:	mov    al,0x93
  40f6e6:	sub    DWORD PTR [ebx-0x4cc4e4c3],ebp
  40f6ec:	dec    edx
  40f6ed:	enter  0xb3a9,0x48
  40f6f1:	nop
  40f6f2:	dec    edi
  40f6f3:	aaa    
  40f6f4:	push   esp
  40f6f5:	and    bh,BYTE PTR [edi]
  40f6f7:	push   esi
  40f6f8:	or     dh,0xac
  40f6fb:	and    eax,0x8f3c676
  40f700:	es mov ah,0xbc
  40f703:	fld    QWORD PTR [edi+ebp*1-0x2a]
  40f707:	cmp    eax,0x8b9fa928
  40f70c:	push   0x61ab4e5a
  40f711:	fist   WORD PTR [edx]
  40f713:	sar    bh,1
  40f715:	sbb    bh,BYTE PTR [edi-0x336ad54e]
  40f71b:	or     DWORD PTR [ebx+0xd],edx
  40f71e:	rcr    BYTE PTR [edi+0x3955fc18],1
  40f724:	mov    esp,DWORD PTR [edx+ebp*2+0x74]
  40f728:	pop    ebx
  40f729:	stos   BYTE PTR es:[edi],al
  40f72a:	out    0x5e,al
  40f72c:	std    
  40f72d:	fisubr DWORD PTR [edx]
  40f72f:	lock mov esp,0xe0025e82
  40f735:	data16 fist DWORD PTR [ebp-0x6082f129]
  40f73c:	and    BYTE PTR [ebx],ah
  40f73e:	int3   
  40f73f:	sub    eax,0xea226c21
  40f744:	sub    bh,dh
  40f746:	aaa    
  40f747:	sub    bh,BYTE PTR [esp+eax*1+0x300541ec]
  40f74e:	mov    eax,ds:0x4241caa9
  40f753:	xor    al,0x4d
  40f755:	(bad)  
  40f756:	fs xchg ecx,eax
  40f758:	ret    
  40f759:	inc    esp
  40f75a:	push   ecx
  40f75b:	add    al,0xc0
  40f75d:	scas   al,BYTE PTR es:[edi]
  40f75e:	or     al,0xe3
  40f760:	cmovae edx,ebx
  40f763:	mov    ah,0xe6
  40f765:	pop    ss
  40f766:	jbe    0x40f753
  40f768:	int    0x3e
  40f76a:	loopne 0x40f74f
  40f76c:	fld    TBYTE PTR [edx]
  40f76e:	cs mov ebp,0xaaf827aa
  40f774:	sub    al,0xfc
  40f776:	xor    al,0xfa
  40f778:	fcmovne st,st(5)
  40f77a:	cs ins DWORD PTR es:[edi],dx
  40f77c:	int3   
  40f77d:	lods   al,BYTE PTR ds:[esi]
  40f77e:	cmp    bl,dh
  40f780:	cs aam 0xea
  40f783:	xchg   DWORD PTR [esi-0x4c],edi
  40f786:	adc    cl,BYTE PTR [edx-0x12]
  40f789:	mov    ds:0xcbfbd8a3,eax
  40f78e:	mov    ds:0xf06c6d56,al
  40f793:	jl     0x40f749
  40f795:	test   DWORD PTR [esi+0x6bba4328],ebx
  40f79b:	sar    DWORD PTR [ebx+0x67],cl
  40f79e:	xchg   ecx,eax
  40f79f:	cmc    
  40f7a0:	out    0xf2,al
  40f7a2:	push   ss
  40f7a3:	jo     0x40f7bb
  40f7a5:	int    0x5c
  40f7a7:	or     edi,DWORD PTR [ebx+0x7]
  40f7aa:	inc    ebx
  40f7ab:	mov    bh,0xad
  40f7ad:	mov    edi,DWORD PTR [edx-0x17]
  40f7b0:	in     al,0x8f
  40f7b2:	(bad)  
  40f7b3:	pop    eax
  40f7b4:	pop    ds
  40f7b5:	cli    
  40f7b6:	mov    ebx,0xa459a1cd
  40f7bb:	inc    ebx
  40f7bc:	mov    es,WORD PTR [ebp+0x61cd3efa]
  40f7c2:	or     ebp,DWORD PTR [ecx]
  40f7c4:	lods   eax,DWORD PTR ds:[esi]
  40f7c5:	push   es
  40f7c6:	stos   BYTE PTR es:[edi],al
  40f7c7:	pmovmskb esi,mm6
  40f7ca:	push   edx
  40f7cb:	push   esp
  40f7cc:	fstp   TBYTE PTR [ebx-0x6bf558ca]
  40f7d2:	lea    esp,ds:[esi]
  40f7d5:	test   edx,ebx
  40f7d7:	aaa    
  40f7d8:	(bad)  
  40f7d9:	ficomp WORD PTR [ecx]
  40f7db:	inc    ebx
  40f7dc:	sub    bh,BYTE PTR [esi]
  40f7de:	pop    ebp
  40f7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e0:	adc    al,0xe5
  40f7e2:	xchg   ebp,eax
  40f7e3:	cmp    al,0xa8
  40f7e5:	cdq    
  40f7e6:	and    ch,BYTE PTR [ecx+0x7b]
  40f7e9:	mov    ch,0x51
  40f7eb:	jb     0x40f808
  40f7ed:	fwait
  40f7ee:	in     al,dx
  40f7ef:	push   ecx
  40f7f0:	push   ss
  40f7f1:	int3   
  40f7f2:	add    al,0x33
  40f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f5:	push   ebx
  40f7f6:	mov    dh,0x69
  40f7f8:	rcr    BYTE PTR [ebx-0x69],cl
  40f7fb:	test   BYTE PTR [ebx],ah
  40f7fd:	loopne 0x40f803
  40f7ff:	pusha  
  40f800:	sub    dl,BYTE PTR [eax+0x27]
  40f803:	or     eax,0x59a9bf38
  40f808:	ficom  DWORD PTR [edi+0x16e71560]
  40f80e:	jmp    0x6dd7ed0b
  40f813:	es cmc 
  40f815:	cmp    al,0x1c
  40f817:	jmp    0x40f80e
  40f819:	test   DWORD PTR ds:0x88e481e6,eax
  40f81f:	xchg   edi,eax
  40f820:	pop    ebp
  40f821:	inc    ecx
  40f822:	adc    ecx,DWORD PTR [edx-0x34]
  40f825:	xchg   esi,eax
  40f826:	js     0x40f818
  40f828:	xlat   BYTE PTR ds:[ebx]
  40f829:	adc    bh,BYTE PTR [edx]
  40f82b:	xchg   ecx,eax
  40f82c:	call   0x5318:0x235c3a90
  40f833:	test   BYTE PTR gs:[edx+0x6c],dh
  40f837:	pop    ds
  40f838:	fisub  WORD PTR [edx]
  40f83a:	repnz mov ecx,0x2e3c353d
  40f840:	loopne 0x40f872
  40f842:	xchg   edi,eax
  40f843:	ror    BYTE PTR [edi+0x234cd212],0xb7
  40f84a:	fadd   QWORD PTR [ebx+eax*2+0x6613adc5]
  40f851:	and    al,0x29
  40f853:	inc    edx
  40f854:	inc    ebp
  40f855:	(bad)  
  40f856:	xchg   esp,eax
  40f857:	outs   dx,BYTE PTR ds:[esi]
  40f858:	xor    al,0x8e
  40f85a:	sbb    DWORD PTR [eax-0x4358ab7a],ecx
  40f860:	idiv   dh
  40f862:	ins    BYTE PTR es:[edi],dx
  40f863:	mov    ecx,0x4b61a7b3
  40f868:	hlt    
  40f869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f86a:	call   0xd20c:0x8bef12ae
  40f871:	repz push 0x34
  40f874:	into   
  40f875:	(bad)  
  40f876:	fidivr DWORD PTR [eax+0x694d4be6]
  40f87c:	push   eax
  40f87d:	pop    eax
  40f87e:	rol    esp,1
  40f880:	xchg   ch,cl
  40f882:	loopne 0x40f8ef
  40f884:	mov    eax,0xe1294c46
  40f889:	pushw  ss
  40f88b:	test   eax,0x2609fdaa
  40f890:	mov    esp,0x7f4574da
  40f895:	cmp    DWORD PTR [eax+0x33d4f68f],edi
  40f89b:	(bad)  
  40f89c:	in     al,dx
  40f89d:	scas   al,BYTE PTR es:[edi]
  40f89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89f:	into   
  40f8a0:	fsub   DWORD PTR [edx+0x5d8cccf0]
  40f8a6:	jae    0x40f86f
  40f8a8:	mov    ecx,0x284f811a
  40f8ad:	adc    eax,0x79d0a760
  40f8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b3:	push   esp
  40f8b4:	or     ebp,edi
  40f8b6:	xchg   esi,eax
  40f8b7:	fdiv   DWORD PTR [ebp+0x5f]
  40f8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8bb:	inc    esp
  40f8bc:	in     eax,0x69
  40f8be:	cwde   
  40f8bf:	popa   
  40f8c0:	clc    
  40f8c1:	pop    ebp
  40f8c2:	(bad)  
  40f8c3:	shl    al,1
  40f8c5:	or     DWORD PTR [ecx-0x784e30c5],esp
  40f8cb:	test   DWORD PTR [edx+0x67fcbef4],ebp
  40f8d1:	fmul   DWORD PTR [esi-0x224dd914]
  40f8d7:	inc    ecx
  40f8d8:	sbb    cl,BYTE PTR [esi]
  40f8da:	mov    ds:0x49a13a8d,eax
  40f8df:	(bad)  
  40f8e0:	rol    eax,cl
  40f8e2:	repz (bad) 
  40f8e4:	arpl   WORD PTR [ebx-0x1d9a88e6],bx
  40f8ea:	(bad)  
  40f8eb:	and    esp,DWORD PTR [ebx]
  40f8ed:	push   eax
  40f8ee:	popf   
  40f8ef:	push   esi
  40f8f0:	xor    BYTE PTR [edx+edi*2+0x4fa878b5],bh
  40f8f7:	and    ebp,DWORD PTR [esi+0x23]
  40f8fa:	lahf   
  40f8fb:	(bad)  
  40f8fc:	repz push edx
  40f8fe:	out    dx,eax
  40f8ff:	inc    esi
  40f900:	lods   eax,DWORD PTR ds:[esi]
  40f901:	xchg   esi,eax
  40f902:	adc    eax,0xc2025e7d
  40f907:	rcl    DWORD PTR [ebx],0x6a
  40f90a:	cdq    
  40f90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90c:	cli    
  40f90d:	bound  ebp,QWORD PTR [edx]
  40f90f:	cld    
  40f910:	out    dx,eax
  40f911:	test   BYTE PTR [edx+0x1b],bl
  40f914:	shl    eax,0x7c
  40f917:	in     al,0xdf
  40f919:	fiadd  WORD PTR [ebx+0x1d6ae860]
  40f91f:	adc    BYTE PTR [eax],ah
  40f921:	or     DWORD PTR [edi+0x14],0xffffffe4
  40f925:	mov    eax,ds:0x5f9359f
  40f92a:	mul    DWORD PTR [ecx+0x17bfb349]
  40f930:	loop   0x40f8d1
  40f932:	in     eax,dx
  40f933:	mov    ebp,0xf43d3f83
  40f939:	ret    
  40f93a:	pushf  
  40f93b:	xor    ch,bl
  40f93d:	or     DWORD PTR [ebx],ebp
  40f93f:	mov    edi,0x58dcd193
  40f944:	and    dl,dl
  40f946:	in     eax,dx
  40f947:	ret    
  40f948:	nop
  40f949:	dec    ebp
  40f94a:	mov    DWORD PTR [eax],ecx
  40f94c:	outs   dx,BYTE PTR ds:[esi]
  40f94d:	lds    ebp,FWORD PTR [eax-0x52bf0489]
  40f953:	pop    edi
  40f954:	sub    eax,0x61383ca6
  40f959:	mov    edi,0xbc5270e4
  40f95e:	and    BYTE PTR [ebp-0x30],0xa4
  40f962:	sbb    dl,dl
  40f964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f965:	push   ds
  40f966:	inc    eax
  40f967:	fmul   DWORD PTR [ebp+0x3fcb1808]
  40f96d:	pop    ecx
  40f96e:	dec    esi
  40f96f:	test   bl,cl
  40f971:	pop    ebx
  40f972:	add    al,0xd0
  40f974:	mov    es,WORD PTR [eax+0x6231a967]
  40f97a:	cmp    eax,0x3dbdaed2
  40f97f:	les    ebp,FWORD PTR [esi-0x55]
  40f982:	loope  0x40f9ce
  40f984:	xchg   esi,eax
  40f985:	push   edx
  40f986:	ins    BYTE PTR es:[edi],dx
  40f987:	out    0xfd,eax
  40f989:	jo     0x40f9c5
  40f98b:	test   DWORD PTR [esi+0x36e6958e],0xe8a74b6a
  40f995:	imul   DWORD PTR [ebp-0x18]
  40f998:	xchg   ebp,eax
  40f999:	aas    
  40f99a:	jbe    0x40f968
  40f99c:	lods   al,BYTE PTR ds:[esi]
  40f99d:	repnz xchg ecx,ebx
  40f9a0:	mov    dh,0x63
  40f9a2:	mov    esi,0xb86d7272
  40f9a7:	stos   DWORD PTR es:[edi],eax
  40f9a8:	xor    al,cl
  40f9aa:	outs   dx,BYTE PTR ds:[esi]
  40f9ab:	test   al,0x52
  40f9ad:	mov    al,0xcb
  40f9af:	inc    ebx
  40f9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b1:	sti    
  40f9b2:	jae    0x40fa0a
  40f9b4:	(bad)  
  40f9b5:	aas    
  40f9b6:	jb     0x40f98b
  40f9b8:	add    DWORD PTR [ebx],esp
  40f9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9bb:	jno    0x40f9c7
  40f9bd:	lds    ecx,FWORD PTR [ebx]
  40f9bf:	in     al,dx
  40f9c0:	lock cmp eax,0x20d9949f
  40f9c6:	shl    dh,1
  40f9c8:	jmp    0x40f9a8
  40f9ca:	xor    eax,0x4278b263
  40f9cf:	inc    ecx
  40f9d0:	test   al,0xf4
  40f9d2:	outs   dx,BYTE PTR ds:[esi]
  40f9d3:	add    eax,0x5e133a19
  40f9d8:	int3   
  40f9d9:	ds iret 
  40f9db:	dec    ebp
  40f9dc:	std    
  40f9dd:	mov    dh,0xa2
  40f9df:	xchg   ebx,eax
  40f9e0:	cwde   
  40f9e1:	jnp    0x40f9a9
  40f9e3:	out    0xb3,eax
  40f9e5:	pop    ds
  40f9e6:	adc    bh,BYTE PTR [ecx]
  40f9e8:	adc    DWORD PTR [ecx-0xe],eax
  40f9eb:	outs   dx,DWORD PTR ds:[esi]
  40f9ec:	bound  edi,QWORD PTR [edx+0x46]
  40f9ef:	retf   0xb7a4
  40f9f2:	jl     0x40f9b2
  40f9f4:	ja     0x40fa3a
  40f9f6:	out    dx,eax
  40f9f7:	sub    al,0x35
  40f9f9:	jno    0x40fa1f
  40f9fb:	mov    cl,0xce
  40f9fd:	out    0x75,eax
  40f9ff:	dec    edi
  40fa00:	jg     0x40fa5e
  40fa02:	inc    ebx
  40fa03:	pop    ebx
  40fa04:	retf   0xb03f
  40fa07:	sahf   
  40fa08:	jmp    0x5297:0x5a43b29
  40fa0f:	jbe    0x40f9c1
  40fa11:	mov    BYTE PTR [edx],ch
  40fa13:	arpl   WORD PTR [esi-0x79],ax
  40fa16:	xchg   BYTE PTR [ebx+0x6295d30b],cl
  40fa1c:	xchg   ebp,eax
  40fa1d:	fmul   st(0),st
  40fa1f:	cwde   
  40fa20:	jmp    0xe7ef:0x9efb5684
  40fa27:	mov    dh,0xcc
  40fa29:	sub    eax,0x35a794d6
  40fa2e:	or     BYTE PTR [edi+ebx*8],ch
  40fa31:	pop    esi
  40fa32:	mov    ebp,0xc80f2493
  40fa37:	cmp    BYTE PTR [ebx-0x14947eb7],bl
  40fa3d:	pushf  
  40fa3e:	push   ebx
  40fa3f:	ror    DWORD PTR [ecx],1
  40fa41:	test   DWORD PTR [esp+ecx*4],ebx
  40fa44:	aaa    
  40fa45:	xchg   ebx,eax
  40fa46:	mov    ch,0x57
  40fa48:	cmp    eax,0xd014b035
  40fa4d:	mov    edi,0xe9d5813f
  40fa52:	jge    0x40fa6d
  40fa54:	inc    esi
  40fa55:	inc    ecx
  40fa56:	xchg   edi,eax
  40fa57:	outs   dx,BYTE PTR ds:[esi]
  40fa58:	dec    ebx
  40fa59:	push   ebx
  40fa5a:	mov    ebp,ebp
  40fa5c:	hlt    
  40fa5d:	jb     0x40fa49
  40fa5f:	(bad)  
  40fa60:	sub    eax,0xc8c91f81
  40fa65:	push   eax
  40fa66:	jae    0x40fabd
  40fa68:	adc    ecx,DWORD PTR [eax-0x46]
  40fa6b:	or     bl,BYTE PTR [edi+0x3c]
  40fa6e:	ror    al,0x55
  40fa71:	xor    DWORD PTR [ecx+0x51651ff9],edi
  40fa77:	push   esp
  40fa78:	outs   dx,DWORD PTR ds:[esi]
  40fa79:	dec    ebx
  40fa7a:	jno    0x40fa9a
  40fa7c:	push   0xdaf298bb
  40fa81:	pop    esi
  40fa82:	in     al,dx
  40fa83:	test   BYTE PTR [eax+0x1fbea5ff],dl
  40fa89:	xchg   esp,eax
  40fa8a:	xlat   BYTE PTR ds:[ebx]
  40fa8b:	inc    ecx
  40fa8c:	sbb    eax,0x1920f9ca
  40fa91:	mov    DWORD PTR [ebp-0x68],edi
  40fa94:	mov    dl,0x76
  40fa96:	jns    0x40fa31
  40fa98:	inc    ecx
  40fa99:	icebp  
  40fa9a:	or     DWORD PTR [ebx+0x5735f539],eax
  40faa0:	xlat   BYTE PTR ds:[ebx]
  40faa1:	sub    DWORD PTR ss:[edx-0x4a5d6003],esp
  40faa8:	dec    esi
  40faa9:	ins    BYTE PTR es:[edi],dx
  40faaa:	mov    dl,ah
  40faac:	icebp  
  40faad:	and    BYTE PTR [esi],cl
  40faaf:	test   al,0xbd
  40fab1:	test   DWORD PTR fs:[esi+ebp*1],ecx
  40fab5:	mov    al,ds:0x56554668
  40faba:	cld    
  40fabb:	dec    esi
  40fabc:	add    BYTE PTR [edx+0x7f],cl
  40fabf:	jne    0x40fa8d
  40fac1:	int3   
  40fac2:	push   edx
  40fac3:	in     eax,dx
  40fac4:	and    al,0x6a
  40fac6:	pop    esp
  40fac7:	sub    ch,bh
  40fac9:	sahf   
  40faca:	lock and al,0x38
  40facd:	jle    0x40fa94
  40facf:	jg     0x40fb45
  40fad1:	aaa    
  40fad2:	push   esi
  40fad3:	cli    
  40fad4:	and    bl,ch
  40fad6:	jno    0x40fb4f
  40fad8:	int    0xf6
  40fada:	das    
  40fadb:	stos   DWORD PTR es:[edi],eax
  40fadc:	xchg   edi,eax
  40fadd:	leave  
  40fade:	gs mov esi,0xc03ec4d2
  40fae4:	jg     0x40faed
  40fae6:	xchg   ebx,eax
  40fae7:	adc    BYTE PTR [edi],0xec
  40faea:	out    dx,al
  40faeb:	test   esp,edi
  40faed:	and    BYTE PTR [ecx],0xd6
  40faf0:	je     0x40fb6d
  40faf2:	das    
  40faf3:	sub    ebx,DWORD PTR [edi+0x2e]
  40faf6:	repnz or ebx,ebp
  40faf9:	pop    ss
  40fafa:	pop    eax
  40fafb:	push   edx
  40fafc:	push   ecx
  40fafd:	push   esi
  40fafe:	jo     0x40fb61
  40fb00:	sbb    ch,BYTE PTR [ebx+edx*4+0x58]
  40fb04:	aad    0x24
  40fb06:	sub    DWORD PTR [ecx],eax
  40fb08:	addr16 xchg ecx,eax
  40fb0a:	stos   DWORD PTR es:[edi],eax
  40fb0b:	xchg   ebp,eax
  40fb0c:	xchg   ebp,eax
  40fb0d:	les    eax,FWORD PTR [ebp+0x2b]
  40fb10:	pop    esi
  40fb11:	sbb    DWORD PTR [ecx-0x3c34643],eax
  40fb17:	call   0xa1f0:0x65882a8b
  40fb1e:	mov    BYTE PTR [ebx+0x348ed76],cl
  40fb24:	int3   
  40fb25:	cli    
  40fb26:	xor    edx,0xfffffffa
  40fb29:	xchg   edx,eax
  40fb2a:	call   0xa08e:0x841abef3
  40fb31:	sti    
  40fb32:	pop    edx
  40fb33:	aaa    
  40fb34:	push   ebp
  40fb35:	stos   DWORD PTR es:[edi],eax
  40fb36:	adc    bl,dh
  40fb38:	jge    0x40fb10
  40fb3a:	adc    eax,0xdfc02b75
  40fb3f:	and    al,0x46
  40fb41:	pop    ecx
  40fb42:	pop    ebx
  40fb43:	bound  esp,QWORD PTR [ecx+0x6]
  40fb46:	cmp    ecx,esi
  40fb48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb49:	push   cs
  40fb4a:	xor    eax,0xc5ae01d3
  40fb4f:	jae    0x40fbb4
  40fb51:	sub    DWORD PTR [esi+0x262fa618],ebp
  40fb57:	imul   edi,DWORD PTR [esi+0x4cc69aca],0xffffffde
  40fb5e:	das    
  40fb5f:	out    dx,eax
  40fb60:	inc    edx
  40fb61:	std    
  40fb62:	dec    ebp
  40fb63:	mov    fs,WORD PTR [edi-0x77bedf47]
  40fb69:	mov    eax,0x6641038e
  40fb6e:	mov    eax,0xdfa94283
  40fb73:	hlt    
  40fb74:	and    edx,0x43599c9e
  40fb7a:	mov    dl,dl
  40fb7c:	cmp    DWORD PTR [esi+0x31],0xffffffc8
  40fb80:	fsubr  st,st(5)
  40fb82:	loope  0x40fb5b
  40fb84:	mov    ah,0xc1
  40fb86:	push   ds
  40fb87:	or     DWORD PTR [ebx-0x2c10eb8c],0xffffffa6
  40fb8e:	stos   BYTE PTR es:[edi],al
  40fb8f:	xlat   BYTE PTR ds:[ebx]
  40fb90:	add    BYTE PTR [ebx+0x3e653aea],0xb9
  40fb97:	pop    ebp
  40fb98:	cmp    ebp,0x50
  40fb9b:	cwde   
  40fb9c:	daa    
  40fb9d:	mov    eax,ds:0x60b8daf8
  40fba2:	mov    ds:0xc9c3b4e4,al
  40fba7:	jl     0x40fc07
  40fba9:	pop    edx
  40fbaa:	sub    bh,ah
  40fbac:	lea    edi,[eax+0x19]
  40fbaf:	adc    dh,BYTE PTR [ebx]
  40fbb1:	xlat   BYTE PTR ds:[ebx]
  40fbb2:	push   edx
  40fbb3:	and    al,0x27
  40fbb5:	ret    
  40fbb6:	pop    eax
  40fbb7:	push   ecx
  40fbb8:	loope  0x40fc0e
  40fbba:	mov    al,0x90
  40fbbc:	mov    ds:0x83aac59,al
  40fbc1:	es lock ds into 
  40fbc5:	pop    ds
  40fbc6:	dec    ecx
  40fbc7:	data16 add dh,BYTE PTR [edi]
  40fbca:	ss xchg esp,eax
  40fbcc:	sub    ebx,DWORD PTR [ebp+0x7e09d80]
  40fbd2:	adc    ebx,edi
  40fbd4:	pusha  
  40fbd5:	adc    DWORD PTR [ecx-0x2b06546f],ebp
  40fbdb:	mov    al,0x4c
  40fbdd:	adc    eax,0xb51f8988
  40fbe2:	repnz bswap esp
  40fbe5:	or     BYTE PTR [edi-0x38],dh
  40fbe8:	psadbw mm5,mm4
  40fbeb:	add    esp,DWORD PTR [edi-0x5341028a]
  40fbf1:	in     al,dx
  40fbf2:	cmp    ah,al
  40fbf4:	idiv   BYTE PTR [ebp-0x6b]
  40fbf7:	pop    es
  40fbf8:	lock push es
  40fbfa:	sbb    al,0x84
  40fbfc:	jbe    0x40fc45
  40fbfe:	repz std 
  40fc00:	cmp    al,BYTE PTR [ecx+esi*1-0x62c492f3]
  40fc07:	inc    eax
  40fc08:	fst    st(7)
  40fc0a:	out    dx,eax
  40fc0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc0c:	inc    edx
  40fc0d:	test   ch,bl
  40fc0f:	xchg   ebx,eax
  40fc10:	pop    esi
  40fc11:	sub    al,0xa8
  40fc13:	aas    
  40fc14:	mov    edx,esi
  40fc16:	aad    0x91
  40fc18:	(bad)  
  40fc19:	mov    bl,0x58
  40fc1b:	push   edx
  40fc1c:	mov    ss,ecx
  40fc1e:	pop    edx
  40fc1f:	and    eax,0xb99d31a3
  40fc24:	sar    BYTE PTR [edx-0x25e7d343],cl
  40fc2a:	push   es
  40fc2b:	cmp    eax,0x53dff730
  40fc30:	sbb    ch,BYTE PTR [ecx+0x0]
  40fc33:	jnp    0x40fc77
  40fc35:	mov    eax,ds:0x3b89f51d
  40fc3a:	daa    
  40fc3b:	mov    edx,0x13aa3759
  40fc40:	(bad)  
  40fc41:	out    dx,al
  40fc42:	xor    al,0x58
  40fc44:	(bad)
  40fc48:	gs repnz cmc 
  40fc4b:	and    eax,0xa9ab724c
  40fc50:	iret   
  40fc51:	sub    eax,DWORD PTR [eax+0x6e27d167]
  40fc57:	lock std 
  40fc59:	mov    edx,0x32b4d02f
  40fc5e:	xchg   ecx,eax
  40fc5f:	mov    ch,dl
  40fc61:	push   ecx
  40fc62:	xlat   BYTE PTR ds:[ebx]
  40fc63:	out    dx,eax
  40fc64:	cwde   
  40fc65:	fsubr  DWORD PTR [esi+0x8f5f84d]
  40fc6b:	int3   
  40fc6c:	and    eax,0x67032c76
  40fc71:	cwde   
  40fc72:	jecxz  0x40fc62
  40fc74:	daa    
  40fc75:	xchg   edx,eax
  40fc76:	cmp    eax,0xce797bfe
  40fc7b:	out    0x85,eax
  40fc7d:	jnp    0x40fc5e
  40fc7f:	pop    ss
  40fc80:	sub    ah,0xd9
  40fc83:	jmp    0xbc19:0x924cd3c8
  40fc8a:	outs   dx,BYTE PTR ds:[esi]
  40fc8b:	lahf   
  40fc8c:	call   0x1afa:0x3e70dcd
  40fc93:	clc    
  40fc94:	cmc    
  40fc95:	xchg   ch,ch
  40fc97:	fdiv   QWORD PTR [edi+0x64443b5a]
  40fc9d:	push   DWORD PTR [ebx-0x7c]
  40fca0:	pop    esi
  40fca1:	mov    esi,0xa97d4642
  40fca6:	sbb    BYTE PTR [ebx],0xb1
  40fca9:	std    
  40fcaa:	shl    DWORD PTR [edi+0x183c1430],cl
  40fcb0:	fld    DWORD PTR [ecx-0x121ac6ed]
  40fcb6:	sbb    BYTE PTR [ebp-0x15],0x4f
  40fcba:	(bad)  
  40fcbb:	idiv   BYTE PTR [esi+0x2f0debf6]
  40fcc1:	(bad)  
  40fcc2:	int3   
  40fcc3:	and    BYTE PTR [ecx],ch
  40fcc5:	add    bl,BYTE PTR [edx-0x4281a591]
  40fccb:	adc    bl,dh
  40fccd:	xchg   edx,eax
  40fcce:	push   es
  40fccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd0:	adc    eax,DWORD PTR [ebx]
  40fcd2:	dec    edx
  40fcd3:	sub    DWORD PTR [edx-0x26833c89],esi
  40fcd9:	pushf  
  40fcda:	mov    al,0xfd
  40fcdc:	sbb    BYTE PTR [eax+0x13a26fb2],cl
  40fce2:	xchg   BYTE PTR [eax+0x28],cl
  40fce5:	mov    dl,0xd6
  40fce7:	sub    BYTE PTR [esi],ah
  40fce9:	enter  0x92d3,0x12
  40fced:	sub    cl,BYTE PTR ds:0x18f28e65
  40fcf3:	fdivr  QWORD PTR [eax]
  40fcf5:	mov    eax,ds
  40fcf7:	mov    esp,0x58a93b29
  40fcfc:	stos   BYTE PTR es:[edi],al
  40fcfd:	cli    
  40fcfe:	aaa    
  40fcff:	push   esp
  40fd00:	adc    eax,0x3d99d641
  40fd05:	jmp    0x40fd29
  40fd07:	repnz mov al,ds:0x2ae03413
  40fd0d:	call   0x2e84:0xdeb0e7e1
  40fd14:	popa   
  40fd15:	loopne 0x40fd4a
  40fd17:	mov    ah,0xc6
  40fd19:	mov    edi,0x86d419b8
  40fd1e:	pop    eax
  40fd1f:	mov    ds:0xa0c27e77,al
  40fd24:	(bad)  
  40fd25:	sub    BYTE PTR [ebp+0x21fa0599],ah
  40fd2b:	fist   DWORD PTR [ecx-0x4e]
  40fd2e:	in     eax,0x37
  40fd30:	fcom   DWORD PTR ss:[edi+0x79ab7a20]
  40fd37:	loop   0x40fd6b
  40fd39:	arpl   WORD PTR [eax],di
  40fd3b:	retf   0x1d48
  40fd3e:	xor    ecx,DWORD PTR [esi+0x7147ec0a]
  40fd44:	(bad)  
  40fd45:	stos   BYTE PTR es:[edi],al
  40fd46:	popa   
  40fd47:	jmp    DWORD PTR [edi+0x2d]
  40fd4a:	aam    0x16
  40fd4c:	aaa    
  40fd4d:	xor    ecx,ecx
  40fd4f:	gs pop ds
  40fd51:	cmp    al,0x5b
  40fd53:	cmp    esi,ecx
  40fd55:	jae    0x40fd24
  40fd57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd58:	scas   eax,DWORD PTR es:[edi]
  40fd59:	pop    ecx
  40fd5a:	pop    ds
  40fd5b:	or     BYTE PTR ds:0x3ac46946,dl
  40fd61:	ins    DWORD PTR es:[edi],dx
  40fd62:	jb     0x40fdd4
  40fd64:	pop    esp
  40fd65:	aam    0x61
  40fd67:	mov    ch,0x6c
  40fd69:	jle    0x40fddf
  40fd6b:	mov    ah,0x15
  40fd6d:	dec    ecx
  40fd6e:	jl     0x40fdae
  40fd70:	lods   eax,DWORD PTR ds:[esi]
  40fd71:	or     DWORD PTR [edx+edi*2],esi
  40fd74:	push   ecx
  40fd75:	pop    ebx
  40fd76:	push   esi
  40fd77:	push   ecx
  40fd78:	mov    al,BYTE PTR [edi+eax*2-0x30]
  40fd7c:	mov    eax,0x6f88c7d6
  40fd81:	inc    esi
  40fd82:	sbb    eax,esp
  40fd84:	inc    ebx
  40fd85:	or     DWORD PTR [eax+0x29],ebp
  40fd88:	daa    
  40fd89:	call   0xc5f6:0x201700d6
  40fd90:	mov    ebx,0xd47b8fdc
  40fd95:	int3   
  40fd96:	xor    al,0xd6
  40fd98:	stos   BYTE PTR es:[edi],al
  40fd99:	jmp    FWORD PTR [esi]
  40fd9b:	push   edx
  40fd9c:	sub    DWORD PTR [ebp-0x2b],ecx
  40fd9f:	cmp    dl,0xd6
  40fda2:	cmp    al,0xfb
  40fda4:	jmp    0x2324:0xdd09a702
  40fdab:	and    al,0x22
  40fdad:	lds    edi,FWORD PTR [edx+0x3ad9de2]
  40fdb3:	jbe    0x40fd97
  40fdb5:	push   0x4250923c
  40fdba:	pusha  
  40fdbb:	popf   
  40fdbc:	mov    ecx,0x9855342f
  40fdc1:	fs ins BYTE PTR es:[edi],dx
  40fdc3:	cmp    DWORD PTR ds:0xf43f6fb1,edi
  40fdc9:	pop    eax
  40fdca:	clc    
  40fdcb:	cli    
  40fdcc:	pop    ds
  40fdcd:	pop    ds
  40fdce:	mov    ebx,DWORD PTR [edx+0x45a1d6ad]
  40fdd4:	dec    ebp
  40fdd5:	std    
  40fdd6:	or     BYTE PTR [edi-0x17],bl
  40fdd9:	das    
  40fdda:	jle    0x40fe17
  40fddc:	loopne 0x40fd93
  40fdde:	pop    eax
  40fddf:	in     al,0x5
  40fde1:	jb     0x40fd7d
  40fde3:	xlat   BYTE PTR ds:[ebx]
  40fde4:	div    BYTE PTR [eax+eiz*1+0x4f]
  40fde8:	or     DWORD PTR [esi+0x33b0285d],0x951d6802
  40fdf2:	xor    ch,ah
  40fdf4:	or     ecx,DWORD PTR [esi+0x58]
  40fdf7:	int    0x98
  40fdf9:	std    
  40fdfa:	repnz outs dx,BYTE PTR ds:[esi]
  40fdfc:	jg     0x40fdf3
  40fdfe:	out    0x83,eax
  40fe00:	cwde   
  40fe01:	mov    edi,0x7c9dd09a
  40fe06:	fidivr DWORD PTR [ebp-0x5c215758]
  40fe0c:	dec    esi
  40fe0d:	lock scas al,BYTE PTR es:[edi]
  40fe0f:	test   eax,0x44d2ee70
  40fe14:	cli    
  40fe15:	pop    ds
  40fe16:	mov    edx,DWORD PTR [ebx+0x63734c76]
  40fe1c:	cli    
  40fe1d:	push   edx
  40fe1e:	jo     0x40fe60
  40fe20:	cs dec esi
  40fe22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe23:	lahf   
  40fe24:	inc    edi
  40fe25:	(bad)  
  40fe26:	jmp    0x40fe2e
  40fe28:	add    al,0xb2
  40fe2a:	mov    ebp,0xa7291e51
  40fe2f:	imul   ebx,DWORD PTR [eax*2-0x705c8194],0x54
  40fe37:	arpl   WORD PTR [edx],cx
  40fe39:	adc    dh,BYTE PTR [ebx-0x1801d4a3]
  40fe3f:	repnz fwait
  40fe41:	imul   ebp,DWORD PTR [edi-0x67],0x30
  40fe45:	loope  0x40fe7f
  40fe47:	lahf   
  40fe48:	out    0xd5,al
  40fe4a:	mov    bh,0x3d
  40fe4c:	push   esi
  40fe4d:	sar    BYTE PTR [edx+ebp*1+0x3baa7a4c],0x2b
  40fe55:	repnz push es
  40fe57:	aad    0xe2
  40fe59:	pop    eax
  40fe5a:	push   esi
  40fe5b:	int3   
  40fe5c:	push   0xfffffff2
  40fe5e:	mov    dl,0x29
  40fe60:	sbb    ah,BYTE PTR [esi-0x3a]
  40fe63:	stos   BYTE PTR es:[edi],al
  40fe64:	cli    
  40fe65:	push   edx
  40fe66:	jbe    0x40fe75
  40fe68:	(bad)  
  40fe6a:	xor    DWORD PTR [esi],esi
  40fe6c:	lds    esi,FWORD PTR [ebp-0x7e9a9f5d]
  40fe72:	cmp    al,0x15
  40fe74:	retf   
  40fe75:	jno    0x40feb1
  40fe77:	inc    ebx
  40fe78:	addr16 cdq 
  40fe7a:	cmp    al,0x84
  40fe7c:	adc    eax,0xa41d6500
  40fe81:	xor    BYTE PTR [ecx-0x1bbffab9],0xe4
  40fe88:	adc    BYTE PTR [ebp-0x770685a9],ah
  40fe8e:	in     al,dx
  40fe8f:	mov    ebp,0xec04421a
  40fe94:	je     0x40fe4c
  40fe96:	sbb    bh,BYTE PTR [eax+0x22]
  40fe99:	jge    0x40fed7
  40fe9b:	xor    ch,ch
  40fe9d:	ins    DWORD PTR es:[edi],dx
  40fe9e:	sbb    BYTE PTR [ecx],dl
  40fea0:	gs (bad) 
  40fea2:	mov    dl,0x35
  40fea4:	pop    esp
  40fea5:	add    BYTE PTR [esi-0x2e],dh
  40fea8:	fist   DWORD PTR [edx]
  40feaa:	lock and al,0x6b
  40fead:	mov    bh,0xe5
  40feaf:	lahf   
  40feb0:	inc    ecx
  40feb1:	dec    eax
  40feb2:	test   BYTE PTR [ebp-0x58],bh
  40feb5:	sbb    al,0x93
  40feb7:	aaa    
  40feb8:	(bad)  
  40feb9:	jmp    0x40ff35
  40febb:	shl    BYTE PTR [ecx],cl
  40febd:	add    al,0xef
  40febf:	dec    ebx
  40fec0:	mov    esp,0xec64ed55
  40fec5:	ins    BYTE PTR es:[edi],dx
  40fec6:	xchg   esp,eax
  40fec7:	int    0x65
  40fec9:	mov    ebp,0xc621cb4f
  40fece:	adc    BYTE PTR [eax+edi*1-0x29],ah
  40fed2:	add    DWORD PTR [esi+edi*4+0x54],esi
  40fed6:	test   DWORD PTR [ebx-0x3c],ebp
  40fed9:	mov    bl,0xd9
  40fedb:	jnp    0x40fea8
  40fedd:	or     ch,BYTE PTR [ebx-0x1f]
  40fee0:	sbb    eax,0xe369e8e
  40fee5:	pop    ebx
  40fee6:	imul   esi,edx,0xffffffbd
  40fee9:	dec    ebx
  40feea:	fisubr WORD PTR [eax+0x54]
  40feed:	sbb    DWORD PTR [edx-0x6b],edi
  40fef0:	pop    es
  40fef1:	jg     0x40ff4e
  40fef3:	mov    eax,ds:0x202a246f
  40fef8:	ds pop esp
  40fefa:	mov    eax,0x6973d262
  40feff:	enter  0x2aea,0x23
  40ff03:	pop    ecx
  40ff04:	jns    0x40ff61
  40ff06:	sub    DWORD PTR [edx+0x5a],ebp
  40ff09:	jecxz  0x40ff0f
  40ff0b:	xor    eax,0x838afa31
  40ff10:	pop    eax
  40ff11:	xor    bh,BYTE PTR [eax+ebx*4]
  40ff14:	sbb    BYTE PTR [esi+edx*4],cl
  40ff17:	shl    BYTE PTR [esi-0xea1106d],1
  40ff1d:	jo     0x40ff57
  40ff1f:	cmc    
  40ff20:	inc    eax
  40ff21:	mov    ebx,0x89a147ea
  40ff26:	push   es
  40ff27:	jbe    0x40ff78
  40ff29:	mov    ds:0x88577d58,eax
  40ff2e:	shr    DWORD PTR [eax-0x3e],1
  40ff31:	ror    DWORD PTR [edi+eax*2+0x5f],cl
  40ff35:	or     edx,esp
  40ff37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff38:	call   edi
  40ff3a:	sub    al,0x8d
  40ff3c:	sahf   
  40ff3d:	aas    
  40ff3e:	add    cl,BYTE PTR [ebx-0x63]
  40ff41:	and    al,0xa2
  40ff43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff44:	jne    0x40ff74
  40ff46:	ror    DWORD PTR [eax],0x8f
  40ff49:	test   DWORD PTR [edi],ecx
  40ff4b:	push   es
  40ff4c:	(bad)  
  40ff4d:	out    0x7d,eax
  40ff4f:	push   ds
  40ff50:	mov    ebx,0xd7d5c174
  40ff55:	imul   esp,DWORD PTR [ebx-0x61],0xffffff99
  40ff59:	out    dx,eax
  40ff5a:	lea    ebx,[ebp-0xf]
  40ff5d:	cmp    al,0xaa
  40ff5f:	daa    
  40ff60:	push   0x2a795ea5
  40ff65:	jo     0x40ff6f
  40ff67:	sbb    al,0x44
  40ff69:	fld    DWORD PTR [ecx]
  40ff6b:	mov    ds:0x9db7b208,eax
  40ff70:	mov    esp,0xe9d232de
  40ff75:	adc    eax,0xe1878a89
  40ff7a:	shl    DWORD PTR [edx+0x61],cl
  40ff7d:	dec    ebp
  40ff7e:	mov    edi,0xbf4ebd8d
  40ff83:	fstp   st(4)
  40ff85:	pop    ecx
  40ff86:	xor    al,0x6
  40ff88:	dec    ebp
  40ff89:	retf   0xc578
  40ff8c:	push   es
  40ff8d:	addr16 xchg ebp,eax
  40ff8f:	js     0x40ff36
  40ff91:	sahf   
  40ff92:	in     al,0xe5
  40ff94:	lods   al,BYTE PTR ds:[esi]
  40ff95:	inc    edx
  40ff96:	mov    ebp,0xbac20f6f
  40ff9b:	fcmovnbe st,st(1)
  40ff9d:	test   DWORD PTR [edx-0xab08c9],ebp
  40ffa3:	jns    0x41000b
  40ffa5:	(bad)  
  40ffa6:	je     0x40ff48
  40ffa8:	int    0x9
  40ffaa:	enter  0xcd65,0xbf
  40ffae:	je     0x41001b
  40ffb0:	jle    0x40ff48
  40ffb2:	in     eax,dx
  40ffb3:	fldenv [ebx+0x6c]
  40ffb6:	inc    ebx
  40ffb7:	jmp    0x6979:0x62b838ec
  40ffbe:	lods   eax,DWORD PTR ds:[esi]
  40ffbf:	jl     0x410001
  40ffc1:	mov    esp,0x4fb67f5
  40ffc6:	pop    edx
  40ffc7:	jbe    0x41001c
  40ffc9:	jge    0x40ff86
  40ffcb:	xchg   ecx,eax
  40ffcc:	xchg   DWORD PTR [esi+0xf],edi
  40ffcf:	sub    eax,0x5889c007
  40ffd4:	xor    al,0x48
  40ffd6:	xlat   BYTE PTR ds:[ebx]
  40ffd8:	mov    ch,0xfe
  40ffda:	test   BYTE PTR [ebx],dl
  40ffdc:	lahf   
  40ffdd:	lds    esp,FWORD PTR [edi]
  40ffdf:	sub    BYTE PTR [esi-0x3d768ff8],dh
  40ffe5:	pop    ebp
  40ffe6:	and    ebx,edx
  40ffe8:	jle    0x40ffa5
  40ffea:	inc    ebp
  40ffeb:	daa    
  40ffec:	and    eax,0x792131f4
  40fff1:	sbb    ch,BYTE PTR [ebp+0x2c]
  40fff4:	test   al,0xb4
  40fff6:	popf   
  40fff7:	add    BYTE PTR [edi+0x338c43d4],bl
  40fffd:	sbb    DWORD PTR [ecx-0x11d01fe7],0x14c9ee88
  410007:	sub    BYTE PTR [eax+0x58c47dcd],ah
  41000d:	mov    ebx,0x600667c2
  410012:	jp     0x40ffbb
  410014:	aaa    
  410015:	ret    0x57a5
  410018:	cmc    
  410019:	mov    ch,0xc8
  41001b:	or     esp,ecx
  41001d:	loop   0x40ffa2
  41001f:	add    DWORD PTR gs:[ecx-0x66],edx
  410023:	scas   eax,DWORD PTR es:[edi]
  410024:	and    ecx,DWORD PTR [eax-0x2f]
  410027:	pusha  
  410028:	adc    BYTE PTR [ebx-0x144c4421],ch
  41002e:	retf   0x9184
  410031:	jle    0x410094
  410033:	fdivr  DWORD PTR [edi-0x11]
  410036:	push   0x2920b8e2
  41003b:	daa    
  41003c:	rol    DWORD PTR [ebx-0x2],0x19
  410040:	push   es
  410041:	jle    0x410054
  410043:	and    al,0xa4
  410045:	mov    ch,0x80
  410047:	repnz add al,0x84
  41004a:	or     edx,esi
  41004c:	retf   0xb32a
  41004f:	(bad)  [ecx+0x3a320964]
  410055:	inc    edx
  410056:	pop    es
  410057:	pop    eax
  410058:	into   
  410059:	and    DWORD PTR [edx+0x11],esi
  41005c:	mov    eax,cs
  41005e:	bound  ebx,QWORD PTR [edx]
  410060:	dec    edx
  410061:	mov    BYTE PTR [edi-0x52],dh
  410064:	jecxz  0x410027
  410066:	ror    BYTE PTR [ebp+0x17d9162b],cl
  41006c:	jmp    0x410041
  41006e:	sub    eax,DWORD PTR [ecx+0x79ddad0a]
  410074:	dec    eax
  410075:	imul   esi,edi,0xffffffd7
  410078:	xor    al,0x7c
  41007a:	jno    0x4100d8
  41007c:	call   0xdde25082
  410081:	loop   0x410087
  410083:	pop    edi
  410084:	and    eax,0x31fe3065
  410089:	cmc    
  41008a:	addr16 cmc 
  41008c:	mov    cl,0xb
  41008e:	adc    eax,0xff6343d3
  410093:	jbe    0x4100c4
  410095:	repz inc esi
  410097:	cmp    edx,DWORD PTR [eax]
  410099:	and    eax,0x36b14632
  41009e:	je     0x4100df
  4100a0:	ds cli 
  4100a2:	xchg   ah,dh
  4100a4:	pop    ds
  4100a5:	push   eax
  4100a6:	fcomp  DWORD PTR [esi-0x578d6408]
  4100ac:	push   edx
  4100ad:	or     eax,0x6c82dcbb
  4100b2:	(bad)  
  4100b4:	sbb    ah,BYTE PTR [ebx+0x65]
  4100b7:	popf   
  4100b8:	and    esp,DWORD PTR [ecx-0x21]
  4100bb:	call   0xd51f:0x29b2dcb1
  4100c2:	cdq    
  4100c3:	mov    esp,0x553d6725
  4100c8:	jp     0x4100ad
  4100ca:	or     BYTE PTR [esi+0x4b736a59],al
  4100d0:	dec    ebx
  4100d1:	pop    ds
  4100d2:	or     eax,0x2cf484c3
  4100d7:	mov    esi,0x5138aea1
  4100dc:	lods   eax,DWORD PTR ds:[esi]
  4100dd:	jg     0x410120
  4100df:	mov    dl,0x8f
  4100e1:	mov    ch,0x4d
  4100e3:	sbb    DWORD PTR [bp-0x4],esp
  4100e7:	jmp    0xb3581b3
  4100ec:	adc    DWORD PTR ds:0x5871aaf4,esi
  4100f2:	repz ret 0x6f1c
  4100f6:	std    
  4100f7:	mov    ch,0x74
  4100f9:	mov    eax,ds:0xa5ca0d30
  4100fe:	ret    0x9c88
  410101:	fmul   st(4),st
  410103:	mov    eax,0xc2dc1473
  410108:	mov    edx,0x71baf50d
  41010d:	xchg   edx,eax
  41010e:	(bad)  
  410110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410111:	(bad)  
  410112:	push   edx
  410113:	nop
  410114:	shl    BYTE PTR [ebp+0x521e05],1
  41011a:	out    0x5f,eax
  41011c:	fstp   QWORD PTR [ebx+esi*8+0x4ed98785]
  410123:	mov    eax,DWORD PTR [esi-0x4426d939]
  410129:	call   0x9b1a:0x341249c7
  410130:	mov    edi,0x8109641e
  410135:	outs   dx,DWORD PTR ds:[esi]
  410136:	sbb    DWORD PTR [edi+0x63],esp
  410139:	add    edi,ebp
  41013b:	mov    ecx,0xc18fc3a3
  410140:	xlat   BYTE PTR ds:[ebx]
  410141:	xor    al,0xec
  410143:	shl    DWORD PTR [esi+edx*1+0x73eaa73b],1
  41014a:	mov    ch,0xbb
  41014c:	push   ecx
  41014d:	loope  0x410144
  41014f:	popf   
  410150:	mov    ch,0xff
  410152:	xor    al,0x60
  410154:	stos   BYTE PTR es:[edi],al
  410155:	jmp    0x61cd82ad
  41015a:	pop    ebx
  41015b:	outs   dx,DWORD PTR ds:[esi]
  41015c:	icebp  
  41015d:	add    BYTE PTR [ebx+eiz*1+0x719c4a43],cl
  410164:	fsqrt  
  410166:	hlt    
  410167:	test   BYTE PTR [ecx],bh
  410169:	(bad)  
  41016b:	stc    
  41016c:	mov    ds:0x8bb051ae,al
  410171:	and    eax,0x20cecba3
  410176:	lea    esi,[edx]
  410178:	mov    bl,0xd7
  41017a:	pop    DWORD PTR [eax+0x6278fef3]
  410180:	fmul   QWORD PTR ds:0x250fc22a
  410186:	mov    WORD PTR [eax+0x6a],?
  410189:	push   edx
  41018a:	sbb    eax,0x6cc92210
  41018f:	sbb    ebp,esi
  410191:	pop    es
  410192:	icebp  
  410193:	mov    eax,0x6fab5502
  410198:	dec    ecx
  410199:	jnp    0x4101d4
  41019b:	sub    DWORD PTR ds:0xd2bf8842,ebx
  4101a1:	sar    DWORD PTR [edi+0x52],1
  4101a4:	pushf  
  4101a5:	mov    WORD PTR [edi+esi*8],cs
  4101a8:	cmp    al,0x9
  4101aa:	mov    ecx,0xc84fa43b
  4101af:	js     0x410188
  4101b1:	pop    ss
  4101b2:	test   BYTE PTR [esi+0x59da1216],ah
  4101b8:	sbb    eax,ecx
  4101ba:	rcr    BYTE PTR [edx],0x60
  4101bd:	aas    
  4101be:	in     al,0xf2
  4101c0:	retf   
  4101c1:	or     esp,DWORD PTR [ecx+0x41]
  4101c4:	arpl   WORD PTR [ebp+edi*8-0x7e],bp
  4101c8:	aam    0x2b
  4101ca:	es out dx,al
  4101cc:	mov    bl,0xc1
  4101ce:	in     eax,dx
  4101cf:	es (bad) 
  4101d1:	enter  0x212b,0x9c
  4101d5:	mov    eax,ds:0x35b23511
  4101da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101db:	out    dx,al
  4101dc:	pop    ebx
  4101dd:	das    
  4101de:	xchg   edi,eax
  4101df:	loope  0x4101e1
  4101e1:	test   eax,0xa1eae1e0
  4101e6:	(bad)  
  4101e7:	aaa    
  4101e8:	clc    
  4101e9:	mov    bh,0x50
  4101eb:	mov    edx,0x2daaffb9
  4101f0:	mov    eax,DWORD PTR [ebx-0x19e9b49b]
  4101f6:	push   ss
  4101f7:	outs   dx,DWORD PTR ds:[esi]
  4101f8:	ja     0x4101ac
  4101fa:	stos   BYTE PTR es:[edi],al
  4101fb:	repnz jecxz 0x41021f
  4101fe:	jns    0x4101df
  410200:	sub    dh,BYTE PTR [eax-0x1e]
  410203:	in     al,dx
  410204:	clc    
  410205:	fadd   DWORD PTR [eax+0x7552bc78]
  41020b:	fxam   
  41020d:	mov    ebx,0xce5aa2f1
  410212:	(bad)  [ebx]
  410214:	lods   eax,DWORD PTR ds:[esi]
  410215:	add    BYTE PTR [esi-0x5b],0x43
  410219:	cmc    
  41021a:	fmul   DWORD PTR [ebx-0x8f4a9ac]
  410220:	xor    ah,cl
  410222:	js     0x4101b9
  410224:	mov    al,ds:0x3739102f
  410229:	cmp    eax,0xe9a286fc
  41022e:	sbb    dh,BYTE PTR [edx+0x4d]
  410231:	jbe    0x4102ad
  410233:	clc    
  410234:	test   DWORD PTR [ecx+0x4c98c343],edi
  41023a:	mov    ?,edi
  41023c:	lea    edx,[ecx+edi*1]
  41023f:	lods   al,BYTE PTR ds:[esi]
  410240:	pop    ds
  410241:	or     edi,0xffffff8e
  410244:	cld    
  410245:	add    DWORD PTR [ecx-0x73031cb9],edx
  41024b:	or     BYTE PTR [ebx+0x27],al
  41024e:	fisttp DWORD PTR es:[eax]
  410251:	(bad)  
  410252:	mov    ecx,0x5ce04ee9
  410257:	nop
  410258:	cmp    eax,0x223e9569
  41025d:	(bad)
  410260:	adc    al,0x60
  410262:	jo     0x4102e2
  410264:	gs cs hlt 
  410267:	xlat   BYTE PTR ds:[ebx]
  410268:	and    dh,BYTE PTR [ebx-0x5f]
  41026b:	cli    
  41026c:	imul   ebp,DWORD PTR [edi+0x15d16a76],0xdee6db42
  410276:	adc    BYTE PTR [edi-0x4b],bl
  410279:	mov    edi,0x5eb12457
  41027e:	pop    ss
  41027f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410280:	mov    ah,0xa0
  410282:	nop
  410283:	inc    eax
  410284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410285:	fucompp 
  410287:	adc    BYTE PTR ds:0xa1ae29b8,bl
  41028d:	fwait
  41028e:	pop    edx
  41028f:	xor    BYTE PTR [eax+0x3f93f1fe],dl
  410295:	fadd   DWORD PTR [ebx+0x43469eea]
  41029b:	arpl   WORD PTR [ebx-0x7e],di
  41029e:	adc    DWORD PTR [esi-0x1f],esp
  4102a1:	add    BYTE PTR [edi-0x4447a974],cl
  4102a7:	data16 adc BYTE PTR [edi],0x45
  4102ab:	add    al,0x5e
  4102ad:	fimul  WORD PTR [ebx-0x4278bf55]
  4102b3:	add    al,0x51
  4102b5:	mov    ch,0x90
  4102b7:	jns    0x4102ee
  4102b9:	cwde   
  4102ba:	mov    BYTE PTR [ebp-0x75],ch
  4102bd:	and    dl,BYTE PTR [esi+0x37]
  4102c0:	push   ecx
  4102c1:	cwde   
  4102c2:	jl     0x41026c
  4102c4:	ins    DWORD PTR es:[edi],dx
  4102c5:	push   0x39
  4102c7:	lock sub cl,BYTE PTR [eax-0x5f]
  4102cb:	call   0x3952:0xd116c1a
  4102d2:	xor    al,0x20
  4102d4:	sub    eax,0xb6c19af0
  4102d9:	ficomp WORD PTR [ecx+0x1803f00d]
  4102df:	xchg   esi,eax
  4102e0:	outs   dx,BYTE PTR ds:[esi]
  4102e1:	lods   al,BYTE PTR ds:[esi]
  4102e2:	aaa    
  4102e3:	ror    DWORD PTR [ebp+0x3a],cl
  4102e6:	sti    
  4102e7:	(bad)  
  4102e8:	scas   eax,DWORD PTR es:[edi]
  4102e9:	dec    eax
  4102ea:	jge    0x410358
  4102ec:	sbb    ecx,DWORD PTR [edi+0x79]
  4102ef:	dec    ebx
  4102f0:	jno    0x4102b2
  4102f2:	adc    DWORD PTR [edx+0x2a1d251c],esp
  4102f8:	les    eax,FWORD PTR [esi+0x5a6a8cf0]
  4102fe:	and    al,0x8d
  410300:	sub    eax,DWORD PTR [ebx]
  410302:	jo     0x4102e1
  410304:	das    
  410305:	push   esi
  410306:	aas    
  410307:	pop    esi
  410308:	rol    BYTE PTR [ebx-0x7f],1
  41030b:	adc    BYTE PTR [esi],0x70
  41030e:	and    eax,DWORD PTR [eax]
  410310:	sub    al,0x6c
  410312:	aas    
  410313:	pop    esi
  410314:	pusha  
  410315:	push   ebp
  410316:	dec    edx
  410317:	push   esp
  410318:	lods   al,BYTE PTR ds:[esi]
  410319:	jge    0x41033e
  41031b:	adc    dl,cl
  41031d:	call   0x1452d714
  410322:	ffreep st(0)
  410324:	pop    edi
  410325:	xor    DWORD PTR [ebp-0x2e7e6b3f],edx
  41032b:	mov    gs,eax
  41032d:	push   ebp
  41032e:	test   BYTE PTR [edi-0x37],dl
  410331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410332:	mov    bl,0x16
  410334:	cmp    BYTE PTR [eax+ecx*4-0xf7ae2fd],bl
  41033b:	(bad)  
  41033c:	xor    BYTE PTR [edi-0x3],cl
  41033f:	les    ax,DWORD PTR [edi+ebx*2+0xd87e96b]
  410347:	and    ecx,ebx
  410349:	pop    esp
  41034a:	rol    BYTE PTR [eax+0x30af0e08],cl
  410350:	mov    edi,0xe01b9212
  410355:	jmp    0x68b7:0x5e65bcd7
  41035c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41035d:	add    BYTE PTR fs:[edx-0x5b],0x8f
  410362:	add    eax,0xcc0a465f
  410367:	in     eax,0xfc
  410369:	inc    ebx
  41036a:	pop    ecx
  41036b:	cdq    
  41036c:	(bad)  
  41036d:	sub    ah,dl
  41036f:	or     al,0x7a
  410371:	cdq    
  410372:	add    al,0x4b
  410374:	xchg   ebx,eax
  410375:	xor    eax,0x429fc024
  41037a:	pop    edi
  41037b:	jge    0x410368
  41037d:	in     eax,dx
  41037e:	inc    esi
  41037f:	mov    ebx,0x125b64e4
  410384:	mov    al,ds:0x91625d39
  410389:	inc    esi
  41038a:	jns    0x41033a
  41038c:	stos   DWORD PTR es:[edi],eax
  41038d:	vorpd  ymm7,ymm1,YMMWORD PTR [esi]
  410391:	pop    eax
  410392:	fwait
  410393:	rcl    esi,0x8b
  410396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410397:	iret   
  410398:	mov    eax,DWORD PTR [edi+0x62]
  41039b:	xor    DWORD PTR [edi-0x47f49eae],edi
  4103a1:	pop    ds
  4103a2:	sti    
  4103a3:	sub    eax,0x5c8d3dd1
  4103a8:	dec    edi
  4103a9:	fdivr  QWORD PTR [edx+0x49513fcc]
  4103af:	loop   0x4103d1
  4103b1:	lahf   
  4103b2:	mov    cl,0x86
  4103b4:	sbb    al,0xa8
  4103b6:	sub    al,0x16
  4103b8:	xlat   BYTE PTR ds:[ebx]
  4103b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ba:	inc    ecx
  4103bb:	push   es
  4103bc:	outs   dx,BYTE PTR ds:[esi]
  4103bd:	iret   
  4103be:	dec    ecx
  4103bf:	mov    edi,0xfef4092
  4103c4:	pop    DWORD PTR [ebx-0x29651165]
  4103ca:	pusha  
  4103cb:	je     0x410409
  4103cd:	retf   0xeccd
  4103d0:	out    0x4b,eax
  4103d2:	les    edx,FWORD PTR [ebp+0x679a82cc]
  4103d8:	fcom   DWORD PTR [ecx-0x3]
  4103db:	int3   
  4103dc:	and    eax,0xe9878720
  4103e1:	sbb    bh,BYTE PTR [ebx+0x76c69f29]
  4103e7:	push   eax
  4103e8:	cmp    dh,BYTE PTR [ebx-0x17]
  4103eb:	dec    edx
  4103ec:	pop    ecx
  4103ed:	or     ebp,DWORD PTR [ecx-0x1b0b2172]
  4103f3:	rcl    BYTE PTR [edi],cl
  4103f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f6:	pushf  
  4103f7:	repz sbb BYTE PTR [ebp-0x66],ch
  4103fb:	mov    ecx,0x2419c20
  410400:	int    0x7
  410402:	out    dx,eax
  410403:	mov    ch,0x7d
  410405:	div    DWORD PTR [ecx-0x2a]
  410408:	(bad)  
  410409:	adc    ch,cl
  41040b:	fild   QWORD PTR [eax-0x7ed0f006]
  410411:	adc    eax,0xc4a521ea
  410416:	xchg   ecx,eax
  410417:	cmp    BYTE PTR [ecx-0x5a],dh
  41041a:	inc    esi
  41041b:	test   BYTE PTR [edx-0x7ec270e2],0x10
  410422:	inc    esp
  410423:	and    eax,DWORD PTR [esp+ebp*1]
  410426:	push   0xffffff83
  410428:	ds or  eax,0x323ba570
  41042e:	popf   
  41042f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410430:	in     al,0x43
  410432:	ja     0x4103be
  410434:	(bad)  ds:0x5563dfa9
  41043a:	sub    eax,edx
  41043c:	aad    0xae
  41043e:	push   ebp
  41043f:	fsubr  st,st(4)
  410441:	in     eax,0x59
  410443:	cmp    BYTE PTR [ebx],dh
  410445:	dec    esp
  410446:	pop    ss
  410447:	xlat   BYTE PTR ds:[ebx]
  410448:	push   ecx
  410449:	mov    eax,0x825c6261
  41044e:	jae    0x410449
  410450:	je     0x4103fc
  410452:	inc    esp
  410453:	in     eax,0x97
  410455:	(bad)  
  410456:	(bad)  
  410457:	aaa    
  410458:	sbb    al,0x52
  41045a:	add    bh,BYTE PTR [esi+0x4ff62475]
  410460:	xlat   BYTE PTR ds:[ebx]
  410461:	fcom   QWORD PTR ds:0x4db50f54
  410467:	jp     0x4103f4
  410469:	not    DWORD PTR [edi+0x7ac75795]
  41046f:	pop    ebx
  410470:	sbb    al,0x68
  410472:	popa   
  410473:	inc    esp
  410474:	dec    esi
  410475:	pusha  
  410476:	sbb    DWORD PTR [edi],edx
  410478:	adc    eax,0x5a6e331a
  41047d:	inc    eax
  41047e:	ins    BYTE PTR es:[edi],dx
  41047f:	pop    eax
  410480:	mov    BYTE PTR [esi+0x70d7e5fc],ah
  410486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410487:	add    ch,BYTE PTR ds:0x9f4466f2
  41048d:	nop
  41048e:	or     DWORD PTR [edi+0x1aeb62dd],eax
  410494:	das    
  410495:	inc    esp
  410496:	loopne 0x410472
  410498:	push   cs
  410499:	pusha  
  41049a:	push   0x2cdfe8a1
  41049f:	mov    eax,0xc9ef0c7f
  4104a4:	push   cs
  4104a5:	aad    0x40
  4104a7:	out    0x17,al
  4104a9:	xor    BYTE PTR fs:[eax+0x117a2c8f],0xa9
  4104b1:	test   al,0x16
  4104b3:	adc    eax,0xa4e746a3
  4104b8:	scas   al,BYTE PTR es:[edi]
  4104b9:	add    ah,BYTE PTR [esi]
  4104bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104bc:	dec    esp
  4104bd:	iret   
  4104be:	dec    edx
  4104bf:	cmp    eax,0x607ce6c7
  4104c4:	aad    0xb8
  4104c6:	popf   
  4104c7:	mov    BYTE PTR [esp+ecx*2+0x20c083c1],dh
  4104ce:	add    bh,dl
  4104d0:	push   ebp
  4104d1:	xchg   edx,eax
  4104d2:	mov    ah,0x5e
  4104d4:	sub    BYTE PTR [ebp+0x4c2fe7d6],al
  4104da:	mov    edi,0xdcc76510
  4104e0:	xlat   BYTE PTR ds:[ebx]
  4104e1:	jbe    0x410494
  4104e3:	mov    ecx,0xc93495a3
  4104e8:	pop    esp
  4104e9:	sbb    BYTE PTR [edi],dh
  4104eb:	bound  edx,QWORD PTR [ebx+esi*4-0x6796cc71]
  4104f2:	mov    ecx,0x7c8e041a
  4104f7:	mov    esp,0xad185f24
  4104fc:	fldcw  WORD PTR [eax]
  4104fe:	sbb    DWORD PTR [ebx+edx*8+0x55597f47],esp
  410505:	popf   
  410506:	xchg   ebx,eax
  410507:	mov    dh,BYTE PTR [ecx-0x59]
  41050a:	or     DWORD PTR [ebp+edx*2+0x494a18a],0xffffffeb
  410512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410513:	out    0x7a,al
  410515:	mov    bl,0xa9
  410517:	in     eax,0x26
  410519:	dec    edi
  41051a:	clc    
  41051b:	out    dx,eax
  41051c:	jmp    0x41051c
  41051e:	mov    ah,0x19
  410520:	cwde   
  410521:	or     esp,DWORD PTR gs:[eax+0x73b020ca]
  410528:	mov    WORD PTR [eax+0x44d142a5],ds
  41052e:	in     eax,dx
  41052f:	sub    eax,ecx
  410531:	scas   eax,DWORD PTR es:[edi]
  410532:	adc    al,0x75
  410534:	test   eax,0xd0744792
  410539:	push   ecx
  41053a:	jmp    0x659fa8d4
  41053f:	sub    BYTE PTR [eax+eiz*1+0x1e],dh
  410543:	pop    ss
  410544:	cmp    bh,BYTE PTR [esi-0x39]
  410547:	xchg   edx,eax
  410548:	fst    QWORD PTR [esi-0x4d65097a]
  41054e:	dec    edi
  41054f:	pusha  
  410550:	scas   eax,DWORD PTR es:[edi]
  410551:	scas   al,BYTE PTR es:[edi]
  410552:	les    ebx,FWORD PTR [eax]
  410554:	mov    ebx,0x29dd927c
  410559:	shr    bl,0x95
  41055c:	punpckhdq mm3,QWORD PTR [esp+edi*2+0x62]
  410561:	aas    
  410562:	aad    0x46
  410564:	fdivr  DWORD PTR [ecx+edx*8+0xc0f5aa4]
  41056b:	loopne 0x410583
  41056d:	popa   
  41056e:	sub    eax,0x4b3b6db3
  410573:	or     dh,dl
  410575:	sahf   
  410576:	xchg   esi,eax
  410577:	add    BYTE PTR [edx-0x6a],dh
  41057a:	inc    esp
  41057b:	push   esp
  41057d:	fs jg  0x41053b
  410580:	popf   
  410581:	cmp    DWORD PTR [edi+0x1b59ffdb],edi
  410587:	retf   
  410588:	fwait
  410589:	push   es
  41058a:	inc    eax
  41058b:	jo     0x4105aa
  41058d:	push   edx
  41058e:	fidivr WORD PTR [edi+0x78]
  410591:	push   ds
  410592:	aaa    
  410593:	jmp    0xf359:0x2ad0ff2e
  41059a:	adc    eax,0xd7a41756
  41059f:	ins    DWORD PTR es:[edi],dx
  4105a0:	pop    esp
  4105a1:	mov    eax,ds:0x3a1cf3fe
  4105a6:	or     edx,DWORD PTR [edx]
  4105a8:	std    
  4105a9:	mov    ecx,0xd6bd3a84
  4105ae:	std    
  4105af:	mov    BYTE PTR [ecx+0x64],ch
  4105b2:	arpl   cx,si
  4105b4:	mov    al,0x72
  4105b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b7:	popf   
  4105b8:	xor    al,cl
  4105ba:	mov    al,BYTE PTR [eax+ebp*4]
  4105bd:	mov    dl,0xd8
  4105bf:	adc    BYTE PTR ds:0x8d931cf7,al
  4105c5:	add    DWORD PTR [ebx],edx
  4105c7:	xor    ecx,DWORD PTR ds:0xfde1ecc5
  4105cd:	mov    ds:0x58443d23,al
  4105d2:	add    DWORD PTR [edx-0x3],ecx
  4105d5:	xchg   edi,eax
  4105d6:	add    eax,DWORD PTR [ecx+eax*2-0x5d]
  4105da:	aad    0x81
  4105dc:	gs test esp,ebx
  4105df:	sbb    al,0xf3
  4105e1:	arpl   WORD PTR [esi+esi*8-0x5],bp
  4105e5:	pop    ss
  4105e6:	les    edi,FWORD PTR [eax+0x2e]
  4105e9:	popa   
  4105ea:	mov    al,ds:0xf8c6ef84
  4105ef:	adc    DWORD PTR ds:0xd7e93c8b,esp
  4105f5:	std    
  4105f6:	push   esi
  4105f7:	loopne 0x410637
  4105f9:	lods   al,BYTE PTR ds:[esi]
  4105fa:	loope  0x41061f
  4105fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105fd:	push   es
  4105fe:	fwait
  4105ff:	push   edi
  410600:	imul   ecx,DWORD PTR [ebp-0x7],0xffffffbc
  410604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410605:	mov    esp,DWORD PTR ds:0xf62ad81
  41060b:	(bad)  
  41060d:	mov    esi,0xbfdd490b
  410612:	and    cl,BYTE PTR [esp+eiz*4]
  410615:	ins    DWORD PTR es:[edi],dx
  410616:	cmp    esi,ecx
  410618:	sbb    ch,BYTE PTR [ecx]
  41061a:	lds    ecx,FWORD PTR [esi-0x4b13948e]
  410620:	scas   al,BYTE PTR es:[edi]
  410621:	ins    BYTE PTR es:[edi],dx
  410622:	push   esp
  410623:	pop    ds
  410624:	jne    0x410628
  410626:	jno    0x4105ae
  410628:	add    bh,bl
  41062a:	dec    esi
  41062b:	lahf   
  41062c:	mov    ebp,0xe742d0ef
  410631:	fimul  WORD PTR [ecx-0x4b]
  410634:	jb     0x41062d
  410636:	or     eax,0x9f8025e2
  41063b:	test   BYTE PTR [esi],dh
  41063d:	adc    DWORD PTR [ecx+0x6f25968],esp
  410643:	retf   
  410644:	xor    DWORD PTR [ebx+0x5bd2f4a],edx
  41064a:	aam    0x2b
  41064c:	xor    DWORD PTR [edx+0x7b],edx
  41064f:	jle    0x4106b4
  410651:	mov    ds:0xea790631,eax
  410656:	xor    BYTE PTR [eax],bh
  410658:	add    ecx,DWORD PTR [ebp-0x70]
  41065b:	xchg   edx,eax
  41065c:	retf   
  41065d:	loop   0x4106c4
  41065f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410660:	loop   0x410605
  410662:	sbb    DWORD PTR [esi+0x7be42100],edx
  410668:	push   es
  410669:	(bad)  
  41066b:	mov    ds:0x161f9c79,eax
  410670:	sub    edx,ecx
  410672:	mov    dl,0x7e
  410674:	mov    ebp,ebx
  410676:	add    dl,BYTE PTR [ebp-0x61]
  410679:	stos   DWORD PTR es:[edi],eax
  41067a:	xchg   ebx,eax
  41067b:	imul   esi,DWORD PTR [ebx],0xffffffcd
  41067e:	sti    
  41067f:	xor    eax,0xb94224ce
  410684:	sbb    eax,0xa70a46f8
  410689:	xchg   BYTE PTR [esi+0x5b64588d],bh
  41068f:	outs   dx,BYTE PTR ds:[esi]
  410690:	icebp  
  410691:	xchg   esi,eax
  410692:	mov    es,WORD PTR [edx+0x10e23aa7]
  410698:	stos   BYTE PTR es:[edi],al
  410699:	xchg   esi,eax
  41069a:	gs daa 
  41069c:	adc    BYTE PTR [edi-0x5055b87b],0x9f
  4106a3:	out    dx,al
  4106a4:	push   esi
  4106a5:	sbb    BYTE PTR [esi-0x1b7b906e],0x81
  4106ac:	pop    ebp
  4106ad:	retf   
  4106ae:	arpl   WORD PTR [edx-0x20fc4950],si
  4106b4:	push   esp
  4106b5:	ins    DWORD PTR es:[edi],dx
  4106b6:	dec    ebp
  4106b7:	in     eax,dx
  4106b8:	retf   0xcf5
  4106bb:	xchg   esi,eax
  4106bc:	fisub  DWORD PTR [ebx+ebx*8-0x3]
  4106c0:	xchg   ecx,eax
  4106c1:	out    0x16,al
  4106c3:	push   edi
  4106c4:	mov    dl,0xbd
  4106c6:	and    BYTE PTR [edx+0x7b],ah
  4106c9:	mov    ss,WORD PTR [ecx+0x4c04c80e]
  4106cf:	fs je  0x4106f7
  4106d2:	xor    ah,BYTE PTR [esi+0x2fa06668]
  4106d8:	(bad)  
  4106d9:	jno    0x4106a4
  4106db:	pop    esp
  4106dc:	dec    BYTE PTR [edi-0x1d0d318b]
  4106e2:	inc    edi
  4106e3:	cld    
  4106e4:	jecxz  0x410760
  4106e6:	jl     0x410729
  4106e8:	mov    ecx,0xf4d48a55
  4106ed:	jecxz  0x41068f
  4106ef:	xchg   edi,eax
  4106f0:	pop    ebx
  4106f1:	bnd jge 0x41070b
  4106f4:	sbb    BYTE PTR [eax],dl
  4106f6:	pushf  
  4106f7:	jl     0x4106f9
  4106f9:	xor    DWORD PTR [ecx+ecx*1],ecx
  4106fc:	pop    esi
  4106fd:	clc    
  4106fe:	mov    ebx,0x4d64f8aa
  410703:	cmp    eax,0xd1a5ae81
  410708:	pop    ds
  410709:	and    edi,DWORD PTR [esp+ecx*8]
  41070c:	test   al,0x8
  41070e:	mov    esp,0x655c2b97
  410713:	and    DWORD PTR [edi-0x5173b526],ebp
  410719:	jp     0x41073a
  41071b:	ja     0x41076d
  41071d:	and    eax,0x93c3728a
  410722:	sbb    ecx,ebx
  410724:	pushw  ss
  410726:	out    0xed,eax
  410728:	push   eax
  410729:	repnz xchg ecx,eax
  41072b:	ret    
  41072c:	cmp    al,0xb4
  41072e:	jge    0x410709
  410730:	mov    DWORD PTR [edi],esi
  410732:	cli    
  410733:	pop    es
  410734:	imul   edx,DWORD PTR [edx],0x1c0366c4
  41073a:	inc    ebx
  41073b:	jns    0x410736
  41073d:	lods   al,BYTE PTR ds:[esi]
  41073e:	sahf   
  41073f:	dec    ebp
  410740:	and    al,0x22
  410742:	icebp  
  410743:	adc    eax,ecx
  410745:	jecxz  0x4106ed
  410747:	js     0x4106e7
  410749:	out    0x7e,eax
  41074b:	ds dec ebx
  41074d:	xchg   esi,eax
  41074e:	pusha  
  41074f:	fdivr  st,st(7)
  410751:	jae    0x4107d2
  410753:	and    BYTE PTR [ebp+edi*1+0x6e15443e],0x9f
  41075b:	xchg   esp,eax
  41075c:	cs dec esp
  41075e:	sub    DWORD PTR ds:0xf2019ca6,0x3c
  410765:	push   ds
  410766:	jb     0x41074a
  410768:	push   es
  410769:	inc    eax
  41076a:	inc    ecx
  41076b:	adc    dl,ah
  41076d:	add    eax,0xe3f0d11
  410772:	cmp    BYTE PTR [edi+0x3c],bl
  410775:	aas    
  410776:	iret   
  410777:	push   ecx
  410778:	pop    edi
  410779:	mov    dh,0x55
  41077b:	xchg   ebx,eax
  41077c:	fisub  DWORD PTR [ecx*2-0x464ee248]
  410783:	and    eax,0x94d9c890
  410788:	popa   
  410789:	mov    ah,0x8c
  41078b:	and    al,0xae
  41078d:	out    0x17,al
  41078f:	shr    BYTE PTR ds:0xedca7e06,cl
  410795:	sbb    dl,BYTE PTR [edi-0x1f3bd5b0]
  41079b:	rcl    esp,0xc7
  41079e:	jns    0x410729
  4107a0:	mov    edx,DWORD PTR [esi+0x6fd642b5]
  4107a6:	int3   
  4107a7:	lea    ebp,[ebp-0x3b18bed6]
  4107ad:	daa    
  4107ae:	pop    ss
  4107af:	pusha  
  4107b0:	icebp  
  4107b1:	icebp  
  4107b2:	dec    edi
  4107b3:	pop    DWORD PTR [edx-0x5acf246d]
  4107b9:	retf   0x6259
  4107bc:	jbe    0x41076c
  4107be:	pushf  
  4107bf:	and    BYTE PTR [edx],ah
  4107c1:	pop    ds
  4107c2:	jmp    0x41078d
  4107c4:	sub    eax,0x11d8dfbf
  4107c9:	lahf   
  4107ca:	sbb    ebx,esi
  4107cc:	pop    ds
  4107cd:	inc    ebx
  4107ce:	jp     0x410765
  4107d0:	div    ecx
  4107d2:	sub    al,0x94
  4107d4:	adc    al,0xe6
  4107d6:	sub    DWORD PTR [edx-0x55170986],0x36
  4107dd:	or     eax,0x17b4cc6f
  4107e2:	xor    esp,edi
  4107e4:	or     DWORD PTR [ecx],ebx
  4107e6:	mov    al,ds:0x7dbcfedd
  4107eb:	jo     0x4107f2
  4107ed:	pop    edi
  4107ee:	adc    al,0xf8
  4107f0:	(bad)  
  4107f1:	mov    edi,0x4ba6dd15
  4107f6:	in     al,0xa
  4107f8:	add    DWORD PTR [eax+0x12f235fe],0x60a2d0c8
  410802:	jp     0x4107a1
  410804:	lock pop esp
  410806:	sub    esi,ecx
  410808:	scas   al,BYTE PTR es:[edi]
  410809:	and    al,0x6f
  41080b:	leave  
  41080c:	fisttp DWORD PTR [ebx-0x57fd2d60]
  410812:	add    cl,BYTE PTR [esi-0x6f]
  410815:	push   ebp
  410816:	lods   eax,DWORD PTR ds:[esi]
  410817:	cdq    
  410818:	mov    al,ds:0xecbbf660
  41081d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41081e:	mov    eax,ds:0xcb86360f
  410823:	aaa    
  410824:	imul   esp,esp,0xfffffffd
  410827:	rol    BYTE PTR [eax+0x67],0x7b
  41082b:	les    ebp,FWORD PTR [ebp-0x196219e9]
  410831:	add    DWORD PTR [edx+edi*8+0x6c21aa78],0x33
  410839:	aam    0xcb
  41083b:	iret   
  41083c:	enter  0x681,0x81
  410840:	nop
  410841:	sub    BYTE PTR [ecx+0x44],bh
  410844:	jg     0x4107d3
  410846:	adc    eax,DWORD PTR [edx-0x18a3077d]
  41084c:	mov    esp,0xd9b9ed60
  410851:	mov    ebp,0x6708f331
  410856:	lods   eax,DWORD PTR ds:[esi]
  410857:	push   ds
  410858:	push   eax
  410859:	or     esi,edi
  41085b:	pop    esp
  41085c:	into   
  41085d:	lock ss cmp eax,0x399e0a90
  410864:	inc    ebp
  410865:	push   0xffffff85
  410867:	cmp    al,0x94
  410869:	sub    al,bh
  41086b:	pop    ecx
  41086c:	mov    cl,0xe7
  41086e:	call   0x297b15a3
  410873:	sbb    eax,0x2977a9b4
  410878:	cmp    DWORD PTR [ecx+0x5faa3318],esi
  41087e:	fdiv   DWORD PTR [ebp+0x21be34bc]
  410884:	pop    ebx
  410885:	test   BYTE PTR [ecx-0x33],0xce
  410889:	addr16 test eax,0x872ff4a4
  41088f:	shl    DWORD PTR [ecx-0x6bc0a269],0xc9
  410896:	cdq    
  410897:	xlat   BYTE PTR ds:[ebx]
  410898:	out    0xcb,eax
  41089a:	sub    cl,BYTE PTR [edx-0x75]
  41089d:	sub    cl,BYTE PTR [edi]
  41089f:	bound  eax,QWORD PTR [esi]
  4108a1:	imul   esp,edx,0xffffff8d
  4108a4:	cld    
  4108a5:	ja     0x410839
  4108a7:	int3   
  4108a8:	call   0xf18a:0x7ece9811
  4108af:	(bad)  
  4108b0:	leave  
  4108b1:	lods   al,BYTE PTR ds:[esi]
  4108b2:	inc    ecx
  4108b3:	mov    bh,0xd2
  4108b5:	fst    st(3)
  4108b7:	stc    
  4108b8:	ins    BYTE PTR es:[edi],dx
  4108b9:	mov    ebp,0x38670c75
  4108be:	test   eax,0x79ddcf3c
  4108c3:	xchg   ebp,eax
  4108c4:	cwde   
  4108c5:	inc    esp
  4108c6:	push   edi
  4108c7:	inc    ebp
  4108c8:	push   0x3b6c47ec
  4108cd:	test   al,0x2e
  4108cf:	inc    edx
  4108d0:	popa   
  4108d1:	aaa    
  4108d2:	hlt    
  4108d3:	mov    edi,0x11727653
  4108d8:	(bad)  
  4108d9:	test   DWORD PTR [eax-0x2e],0xfffd2ccd
  4108e0:	(bad)  
  4108e1:	mov    DWORD PTR [ebx],ecx
  4108e3:	cwde   
  4108e4:	inc    esp
  4108e5:	icebp  
  4108e6:	xor    dl,dl
  4108e8:	xchg   ecx,eax
  4108e9:	fcomp  DWORD PTR [esi]
  4108eb:	inc    edx
  4108ec:	inc    edx
  4108ed:	scas   al,BYTE PTR es:[edi]
  4108ee:	lods   al,BYTE PTR ds:[esi]
  4108ef:	jno    0x41088a
  4108f1:	test   eax,0x748734e0
  4108f6:	scas   eax,DWORD PTR es:[edi]
  4108f7:	xchg   edi,eax
  4108f8:	adc    al,0x2e
  4108fa:	dec    ebp
  4108fb:	cpuid  
  4108fd:	out    dx,eax
  4108fe:	jns    0x41097e
  410900:	cmp    BYTE PTR [edi-0x60a50fa5],0x4
  410907:	mov    eax,ds:0xd54c6b9a
  41090c:	mov    ds:0x7fe30643,eax
  410911:	mov    bl,0xad
  410913:	cli    
  410914:	fcomp  DWORD PTR [edx+0x23]
  410917:	push   ebp
  410918:	cs or  al,0x18
  41091b:	add    bh,BYTE PTR [esi+0x41]
  41091e:	jge    0x41099c
  410920:	mov    BYTE PTR [ecx+0x32],ch
  410923:	jecxz  0x410998
  410925:	ins    BYTE PTR es:[edi],dx
  410926:	les    edx,FWORD PTR [eax-0x75f17c65]
  41092c:	xchg   ebp,eax
  41092d:	enter  0x54ae,0x30
  410931:	jp     0x4108e8
  410933:	dec    edi
  410934:	not    DWORD PTR [edi]
  410936:	inc    eax
  410937:	pop    ecx
  410938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410939:	jb     0x410986
  41093b:	push   eax
  41093c:	xor    BYTE PTR [edx],al
  41093e:	lds    esp,FWORD PTR [ecx+edx*1+0x63]
  410942:	inc    edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	mov    esi,0xa4f5eb37
  410949:	xor    al,0x30
  41094b:	jge    0x410900
  41094d:	fbld   TBYTE PTR [esi-0x510f1d43]
  410953:	mov    edx,0xbc6874cf
  410958:	and    al,0xba
  41095a:	push   es
  41095b:	cmp    al,0xe3
  41095d:	out    dx,eax
  41095e:	sub    al,0x8
  410960:	xchg   BYTE PTR [edx-0x5c],ch
  410963:	pop    edi
  410964:	(bad)  
  410965:	jmp    FWORD PTR [ebp-0x4b7dcd47]
  41096b:	add    esp,ebp
  41096d:	call   0x34d0d2c8
  410972:	ret    
  410973:	aas    
  410974:	or     BYTE PTR [ebx],dl
  410976:	mov    ebx,0x3db25fa6
  41097b:	je     0x410992
  41097d:	mov    es,WORD PTR [edx+0x79e9adbe]
  410983:	adc    esp,DWORD PTR [esi-0x52812040]
  410989:	xor    dh,BYTE PTR [edi-0x68]
  41098c:	int3   
  41098d:	inc    esp
  41098e:	add    DWORD PTR [ebp+ebx*2-0x1a],0xffffffd6
  410993:	enter  0xf227,0xe4
  410997:	shl    BYTE PTR [esi+edi*8-0x21],cl
  41099b:	neg    BYTE PTR [esi-0x2f]
  41099e:	push   esi
  41099f:	inc    ecx
  4109a0:	and    al,0x87
  4109a2:	ret    
  4109a3:	(bad)  
  4109a4:	mov    bh,0x63
  4109a6:	push   dx
  4109a8:	das    
  4109a9:	sub    eax,0x1e632af2
  4109ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109af:	pop    es
  4109b0:	mov    bh,0x1b
  4109b2:	inc    ecx
  4109b3:	repnz aas 
  4109b5:	das    
  4109b6:	inc    edi
  4109b7:	add    eax,DWORD PTR [eax]
  4109b9:	clc    
  4109ba:	scas   eax,DWORD PTR es:[edi]
  4109bb:	test   al,0x20
  4109bd:	push   cs
  4109be:	ins    BYTE PTR es:[edi],dx
  4109bf:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c1:	fimul  WORD PTR [ecx]
  4109c3:	das    
  4109c4:	(bad)  
  4109c5:	push   ebx
  4109c6:	pop    edx
  4109c7:	(bad)  
  4109c8:	pop    esp
  4109c9:	in     al,dx
  4109ca:	adc    eax,0x37fb0756
  4109cf:	in     al,0xc1
  4109d1:	jecxz  0x4109e1
  4109d3:	cld    
  4109d4:	lods   al,BYTE PTR ds:[esi]
  4109d5:	xchg   ecx,ecx
  4109d7:	adc    al,0xea
  4109d9:	(bad)  
  4109da:	adc    eax,0x22e72097
  4109df:	xor    bl,BYTE PTR [esi+0x8]
  4109e2:	hlt    
  4109e3:	and    BYTE PTR cs:[esi],0x69
  4109e7:	lds    edx,FWORD PTR [esi-0x18]
  4109ea:	dec    esi
  4109eb:	jno    0x410a33
  4109ed:	je     0x4109fd
  4109ef:	jecxz  0x410a01
  4109f1:	jno    0x4109b2
  4109f3:	sbb    edi,ecx
  4109f5:	xor    eax,0xfc35be78
  4109fa:	sub    BYTE PTR [ebx+0x41],ch
  4109fd:	dec    esp
  4109fe:	dec    ebp
  4109ff:	mov    esi,DWORD PTR [eax]
  410a01:	inc    ebp
  410a02:	inc    ebx
  410a03:	mov    cl,0x29
  410a05:	iret   
  410a06:	pushf  
  410a07:	(bad)  
  410a08:	or     edx,DWORD PTR [edx-0x4]
  410a0b:	mov    cs,WORD PTR [ecx-0x7e5cc598]
  410a11:	(bad)
  410a14:	sub    BYTE PTR [esi+0x5da72a57],al
  410a1a:	jno    0x410a27
  410a1c:	or     DWORD PTR [edi+0x87aa263],0xffffffcc
  410a23:	out    0x90,eax
  410a25:	dec    esp
  410a26:	dec    edi
  410a27:	ins    BYTE PTR es:[edi],dx
  410a28:	cld    
  410a29:	cwde   
  410a2a:	sbb    al,0x43
  410a2c:	ds push es
  410a2e:	jle    0x4109be
  410a30:	lods   eax,DWORD PTR ds:[esi]
  410a31:	mov    edi,0xcae13214
  410a36:	call   0x2d14:0xc51e1dc4
  410a3d:	pop    ds
  410a3e:	adc    eax,0xe20b4acd
  410a43:	lods   eax,DWORD PTR ds:[esi]
  410a44:	std    
  410a45:	stos   DWORD PTR es:[edi],eax
  410a46:	in     eax,dx
  410a47:	and    al,0x5e
  410a49:	sbb    BYTE PTR [esi-0xd],al
  410a4c:	jg     0x410aac
  410a4e:	lods   al,BYTE PTR ds:[esi]
  410a4f:	inc    edx
  410a50:	(bad)  
  410a51:	and    edx,DWORD PTR [edi-0x55]
  410a54:	imul   edx,DWORD PTR [edx-0x25289b00],0x58ca77b9
  410a5e:	add    edi,DWORD PTR [ecx-0x2f70b2a4]
  410a64:	xchg   ebp,eax
  410a65:	sub    DWORD PTR [eax-0x6153584c],eax
  410a6b:	and    DWORD PTR [eax+0x50],eax
  410a6e:	cdq    
  410a6f:	cdq    
  410a70:	and    ebx,DWORD PTR [edx+0x698b209c]
  410a76:	xor    ah,BYTE PTR [esi-0x4ac62123]
  410a7c:	pop    ebx
  410a7d:	add    ecx,ecx
  410a7f:	(bad)  
  410a80:	jmp    0x410a55
  410a82:	jnp    0x410aa6
  410a84:	ss pushf 
  410a86:	lahf   
  410a87:	inc    esi
  410a88:	add    bl,BYTE PTR [edx]
  410a8a:	mov    dh,0x89
  410a8c:	dec    esi
  410a8d:	push   esp
  410a8e:	inc    edi
  410a8f:	mov    ch,0x9c
  410a91:	aad    0xf7
  410a93:	and    DWORD PTR [edi+0x46],0x632472cf
  410a9a:	sbb    ah,al
  410a9c:	in     al,0x96
  410a9e:	mov    bh,0x25
  410aa0:	call   0xd4aa:0xaa07f136
  410aa7:	retf   
  410aa8:	jge    0x410a9d
  410aaa:	rol    eax,cl
  410aac:	add    ecx,DWORD PTR [ebx+0x37ab7ef1]
  410ab2:	leave  
  410ab3:	jne    0x410a53
  410ab5:	sti    
  410ab6:	arpl   bx,cx
  410ab8:	bound  edx,QWORD PTR [esi-0x4c]
  410abb:	popf   
  410abc:	leave  
  410abd:	ja     0x410a5e
  410abf:	dec    edx
  410ac0:	fwait
  410ac1:	xchg   esp,eax
  410ac2:	pop    ebx
  410ac3:	adc    ch,ch
  410ac5:	xlat   BYTE PTR ds:[ebx]
  410ac6:	mov    BYTE PTR [ebp+0x12],dh
  410ac9:	mov    esp,0x6ec23718
  410ace:	std    
  410acf:	mov    al,0x93
  410ad1:	out    0x17,al
  410ad3:	sysexit 
  410ad5:	inc    eax
  410ad6:	addr16 add al,0x13
  410ad9:	cli    
  410ada:	add    al,0x13
  410adc:	add    ebp,ebx
  410ade:	lea    ebp,[esi+0x5b]
  410ae1:	(bad)  
  410ae3:	jmp    0x410a82
  410ae5:	fxam   
  410ae7:	(bad)  
  410ae9:	stos   DWORD PTR es:[edi],eax
  410aea:	iret   
  410aeb:	test   eax,0x9568d548
  410af0:	(bad)  
  410af1:	jecxz  0x410a93
  410af3:	mov    ch,0xfb
  410af5:	mov    eax,ds:0x61eb14ae
  410afa:	pop    ebx
  410afb:	pop    ss
  410afc:	cmp    esi,DWORD PTR [edx+eiz*2-0x7086c493]
  410b03:	mov    dl,0x25
  410b05:	pop    esi
  410b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b07:	nop
  410b08:	jo     0x410b51
  410b0a:	stos   DWORD PTR es:[edi],eax
  410b0b:	rcl    DWORD PTR ds:0x598706e9,1
  410b11:	xor    BYTE PTR [edx-0x25],bl
  410b14:	inc    esp
  410b15:	ins    DWORD PTR es:[edi],dx
  410b16:	lahf   
  410b17:	fld    QWORD PTR [esi-0x1e]
  410b1a:	leave  
  410b1b:	or     ah,BYTE PTR [edx]
  410b1d:	adc    ah,cl
  410b1f:	jle    0x410ae4
  410b21:	stos   DWORD PTR es:[edi],eax
  410b22:	mov    BYTE PTR [ecx-0x1b],ah
  410b25:	pop    edx
  410b26:	sbb    eax,0xddedd509
  410b2b:	inc    edi
  410b2c:	call   0xddbb5657
  410b31:	cmp    DWORD PTR [ebx+0x3f],edx
  410b34:	inc    edi
  410b35:	xchg   edx,eax
  410b36:	pop    edx
  410b37:	out    0xc1,eax
  410b39:	sbb    edx,esi
  410b3b:	lods   al,BYTE PTR ds:[esi]
  410b3c:	call   0xe93f:0xfe0daa1e
  410b43:	int3   
  410b44:	inc    ebp
  410b45:	leave  
  410b46:	pop    edi
  410b47:	(bad)  
  410b48:	fisttp WORD PTR [edx-0x66fb048b]
  410b4e:	mov    WORD PTR [ebx+0x5e],cs
  410b51:	push   esi
  410b52:	cmp    BYTE PTR [ebp-0x7b1c8cfe],bl
  410b58:	lock fidivr WORD PTR [ebx]
  410b5b:	int    0x6f
  410b5d:	pop    esi
  410b5e:	(bad)  
  410b5f:	adc    DWORD PTR [esi],edx
  410b61:	sahf   
  410b62:	cmp    DWORD PTR [ebx-0xb],0xd9d5b9a5
  410b69:	or     esp,DWORD PTR [ebx]
  410b6b:	das    
  410b6c:	ins    BYTE PTR es:[edi],dx
  410b6d:	xor    al,0x9d
  410b6f:	add    DWORD PTR [edi],edx
  410b71:	cwde   
  410b72:	not    BYTE PTR [esi-0x18]
  410b75:	in     al,0x4
  410b77:	and    eax,0xe841e8b
  410b7c:	xor    dh,BYTE PTR [edi]
  410b7e:	inc    ebx
  410b7f:	adc    BYTE PTR [esi],cl
  410b81:	push   ecx
  410b82:	inc    esp
  410b83:	or     eax,0xfcf1e25b
  410b88:	jne    0x410b59
  410b8a:	mov    ds:0x5b016643,al
  410b8f:	or     BYTE PTR [ecx+ecx*2-0x6a4c60d5],cl
  410b96:	out    dx,al
  410b97:	popa   
  410b98:	pop    esi
  410b99:	pop    ebp
  410b9a:	data16 xor BYTE PTR [ecx-0x45ddb899],dh
  410ba1:	mov    al,ds:0x8cc5b233
  410ba6:	mov    eax,0x814d1f55
  410bab:	in     eax,0xd6
  410bad:	bound  ebx,QWORD PTR [eax-0x2d]
  410bb0:	mov    bl,0xff
  410bb2:	jle    0x410beb
  410bb4:	ss xchg edx,eax
  410bb6:	js     0x410b63
  410bb8:	fist   WORD PTR [ecx+0xe45153c]
  410bbe:	scas   eax,DWORD PTR es:[edi]
  410bbf:	mov    ds:0xd7f04ba3,al
  410bc4:	cmc    
  410bc5:	rcl    ecx,0xb6
  410bc8:	enter  0xc68f,0x50
  410bcc:	add    eax,0x89973b87
  410bd1:	push   ebx
  410bd2:	sbb    DWORD PTR [ebp+0x33],ebx
  410bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd6:	dec    dh
  410bd8:	imul   edi,DWORD PTR [edi],0x8d77762e
  410bde:	adc    DWORD PTR [ecx-0x55],0x77627c2f
  410be5:	cmp    eax,0x576affa3
  410bea:	mov    ebx,0x31aacb26
  410bef:	push   ebx
  410bf0:	sub    eax,DWORD PTR [edx-0x65089bd]
  410bf6:	pop    es
  410bf7:	jmp    0x410be9
  410bf9:	and    edx,DWORD PTR [edi+0x7b8f55be]
  410bff:	mov    ebp,0x75ad2c68
  410c04:	mov    edi,0x99dc9d1c
  410c09:	inc    ebx
  410c0a:	mov    dh,0x57
  410c0c:	iret   
  410c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c0e:	popa   
  410c0f:	loopne 0x410c2e
  410c11:	inc    edx
  410c12:	stos   BYTE PTR es:[edi],al
  410c13:	fadd   st,st(1)
  410c15:	dec    ecx
  410c16:	into   
  410c17:	adc    al,0xf6
  410c19:	mov    dl,BYTE PTR [ebp-0x60]
  410c1c:	jle    0x410c64
  410c1e:	jne    0x410bd4
  410c20:	sub    al,0x3a
  410c22:	sbb    BYTE PTR [eax-0x7c60cea2],bh
  410c28:	scas   eax,DWORD PTR es:[edi]
  410c29:	jle    0x410c3e
  410c2b:	ficom  DWORD PTR [esi]
  410c2d:	jae    0x410ca8
  410c2f:	push   ebx
  410c30:	pop    ds
  410c31:	sbb    eax,0x76e84e28
  410c36:	iret   
  410c37:	jg     0x410c91
  410c39:	and    eax,0xe30a9a16
  410c3e:	pushf  
  410c3f:	push   esp
  410c40:	mov    ds,WORD PTR [eax+eax*8-0x17]
  410c44:	ds int3 
  410c46:	cdq    
  410c47:	addr16 sub esp,ebx
  410c4a:	repz mov esp,0xd5b4aef
  410c50:	cmp    eax,ebp
  410c52:	jl     0x410c6f
  410c54:	shl    BYTE PTR [esi-0x36],0x80
  410c58:	addr16 enter 0x3c24,0xe8
  410c5d:	ret    0x1a34
  410c60:	jno    0x410ca1
  410c62:	mov    ds:0xd963e8de,al
  410c67:	push   0xf2eb193d
  410c6c:	cmp    dl,BYTE PTR [eax+ebp*1]
  410c6f:	int3   
  410c70:	test   DWORD PTR [ecx-0x62],eax
  410c73:	cdq    
  410c74:	loop   0x410c7e
  410c76:	dec    esp
  410c77:	push   edx
  410c78:	(bad)  
  410c79:	out    0xe9,eax
  410c7b:	sbb    DWORD PTR [edi],edi
  410c7d:	fbstp  TBYTE PTR [esi-0x52]
  410c80:	popa   
  410c81:	ret    0xa075
  410c84:	pop    ss
  410c85:	mul    DWORD PTR [eax+0x76a46bfa]
  410c8b:	and    DWORD PTR [edi],0x677d408
  410c91:	addr16 jp 0x410c89
  410c94:	mov    WORD PTR [esi+0x744f095c],ss
  410c9a:	gs sahf 
  410c9c:	mov    ecx,0xb6f3aa36
  410ca1:	mov    ds:0x357700f6,eax
  410ca6:	cwde   
  410ca7:	or     dl,ch
  410ca9:	popa   
  410caa:	and    al,0xe4
  410cac:	sub    BYTE PTR [ebx+0x68],ch
  410caf:	fbld   TBYTE PTR [ebx+0x453dafdf]
  410cb5:	pop    es
  410cb6:	xchg   ebp,eax
  410cb7:	push   ebp
  410cb8:	or     al,0xe4
  410cba:	test   DWORD PTR [edi],0x5e0b99ff
  410cc0:	loop   0x410ceb
  410cc2:	mov    esp,0x40974e4c
  410cc7:	popa   
  410cc8:	add    eax,0x3d6cc2c7
  410ccd:	ins    BYTE PTR es:[edi],dx
  410cce:	push   0xffffffe7
  410cd0:	loope  0x410ccd
  410cd2:	cli    
  410cd3:	(bad)  
  410cd4:	out    dx,eax
  410cd5:	cmp    bl,dl
  410cd7:	shr    DWORD PTR [ebx-0x70],0x3f
  410cdb:	sti    
  410cdc:	into   
  410cdd:	pop    esp
  410cde:	iret   
  410cdf:	bound  ebp,QWORD PTR [ecx+0x1c]
  410ce2:	outs   dx,DWORD PTR ds:[esi]
  410ce3:	xchg   esp,eax
  410ce4:	cmp    dh,dl
  410ce6:	or     dl,dl
  410ce8:	lahf   
  410ce9:	jb     0x410d22
  410ceb:	inc    edx
  410cec:	jg     0x410cee
  410cee:	jge    0x410c8c
  410cf0:	aad    0xd4
  410cf2:	push   0xe
  410cf4:	mov    ecx,0xa2c02b9e
  410cf9:	push   ss
  410cfa:	sbb    DWORD PTR [ecx],ebx
  410cfc:	pop    esi
  410cfd:	xor    DWORD PTR ds:0x7d66b8e6,0x54
  410d04:	clc    
  410d05:	dec    esp
  410d06:	adc    BYTE PTR [ecx+ebp*8-0xb0e977a],dl
  410d0d:	inc    esi
  410d0e:	push   eax
  410d0f:	pop    esi
  410d10:	fsubr  DWORD PTR [ebx+0x2c8c717f]
  410d16:	fucomip st,st(3)
  410d18:	mov    eax,ds:0x263d8acd
  410d1d:	mov    ch,0xbe
  410d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d20:	dec    edx
  410d21:	cmp    ecx,ebp
  410d23:	loopne 0x410d95
  410d25:	sub    eax,0x532b715b
  410d2a:	shl    bl,1
  410d2c:	mov    dl,0x5b
  410d2e:	call   0x63c5:0x1200f2e2
  410d35:	or     DWORD PTR [ecx+0x37682c22],edi
  410d3b:	push   0x59642c8
  410d40:	pop    ds
  410d41:	nop
  410d42:	fstp   DWORD PTR [edx+0x6c]
  410d45:	ds dec ebx
  410d47:	mov    ds:0x753dd690,al
  410d4c:	jno    0x410d52
  410d4e:	jmp    0x8417caa7
  410d53:	(bad)  
  410d54:	lods   eax,DWORD PTR ds:[esi]
  410d55:	not    DWORD PTR [ecx]
  410d57:	xor    al,0xd8
  410d59:	dec    edx
  410d5a:	nop
  410d5b:	bound  edi,QWORD PTR ds:0x7abeeb7d
  410d61:	inc    ebx
  410d62:	xor    ecx,DWORD PTR [ecx+ecx*8]
  410d65:	iret   
  410d66:	jmp    0x410d77
  410d68:	cmp    DWORD PTR [ebp+edi*4+0x5a30dd66],0x179ad86f
  410d73:	mov    ds:0x4d40aa1e,al
  410d78:	retf   0xadf0
  410d7b:	pop    edi
  410d7c:	xor    eax,0x7b8cd7bd
  410d81:	sbb    BYTE PTR [eax],al
  410d83:	push   ebp
  410d84:	xlat   BYTE PTR ds:[ebx]
  410d85:	push   ecx
  410d86:	mov    cl,0xd3
  410d88:	(bad)  
  410d8a:	push   edi
  410d8b:	fs ins BYTE PTR es:[edi],dx
  410d8d:	adc    dl,BYTE PTR [edx-0x1ddb4b0b]
  410d93:	cld    
  410d94:	sbb    eax,0xe7d563dc
  410d99:	cmp    dl,cl
  410d9b:	push   esp
  410d9c:	arpl   WORD PTR [esi-0x2bfbda69],bp
  410da2:	sbb    al,0xfb
  410da4:	push   ds
  410da5:	sbb    eax,0x3584611c
  410daa:	xchg   DWORD PTR [ebp-0x67f439a2],esi
  410db0:	leave  
  410db1:	xchg   esi,eax
  410db2:	xchg   BYTE PTR [edi+esi*8],ch
  410db5:	out    0x85,eax
  410db7:	sar    BYTE PTR [eax+0x436b9468],1
  410dbd:	dec    ecx
  410dbe:	fist   WORD PTR [ecx]
  410dc0:	inc    ebx
  410dc1:	mov    esi,0x22903f4b
  410dc6:	push   ebp
  410dc7:	fcmovnbe st,st(1)
  410dc9:	ss inc eax
  410dcb:	jg     0x410dd3
  410dcd:	adc    DWORD PTR [edx-0x9],eax
  410dd0:	jnp    0x410dbd
  410dd2:	mov    BYTE PTR [eax+0x6c13a6bd],0x59
  410dd9:	dec    esi
  410dda:	pop    ds
  410ddb:	add    eax,edi
  410ddd:	add    BYTE PTR [ebp+0x1a9be1c7],0x68
  410de4:	inc    ebx
  410de5:	and    edx,edx
  410de7:	jb     0x410db2
  410de9:	mov    WORD PTR [edi-0x66],fs
  410dec:	ret    0x5284
  410def:	pop    edx
  410df0:	call   0xc532c267
  410df5:	push   cs
  410df6:	ret    
  410df7:	test   edi,ecx
  410df9:	jno    0x410dcd
  410dfb:	(bad)  
  410dfc:	xchg   ebx,eax
  410dfd:	xor    al,bh
  410dff:	fs and eax,0x75f3a103
  410e05:	inc    esp
  410e06:	dec    esp
  410e07:	rcr    al,1
  410e09:	adc    al,BYTE PTR [ecx+ebx*8+0x20b18e66]
  410e10:	in     al,dx
  410e11:	jne    0x410e26
  410e13:	sahf   
  410e14:	cmp    BYTE PTR [eax-0x6a6b1815],ah
  410e1a:	into   
  410e1b:	enter  0x7456,0xd7
  410e1f:	call   0xdfd2:0xf582179c
  410e26:	or     DWORD PTR [ebp-0x5ae75f66],0x6c
  410e2d:	mov    ds:0xadf329a9,al
  410e32:	les    eax,FWORD PTR [ebx-0x29efd236]
  410e38:	mov    edi,0x6fa67696
  410e3d:	cli    
  410e3e:	and    eax,0x232f6c36
  410e43:	lock mov edi,0x10fddb7d
  410e49:	in     eax,0xdc
  410e4b:	mov    bl,0x1d
  410e4d:	dec    edi
  410e4e:	jnp    0x410eb0
  410e50:	sub    eax,0x3ac74d76
  410e55:	mov    bl,0xd5
  410e57:	or     esp,edi
  410e59:	sbb    DWORD PTR [esi+0x757428ea],0x23
  410e60:	les    ebp,FWORD PTR [ebp+0x18]
  410e63:	jno    0x410e99
  410e65:	push   0x6a
  410e67:	sahf   
  410e68:	xor    ch,ah
  410e6a:	popf   
  410e6b:	dec    eax
  410e6c:	adc    DWORD PTR [edi],esi
  410e6e:	imul   edi,DWORD PTR [edi],0x50
  410e71:	xor    eax,0x60830a44
  410e76:	jnp    0x410e7e
  410e78:	(bad)  
  410e79:	jne    0x410e94
  410e7b:	push   0x93806338
  410e80:	imul   edi,DWORD PTR [edi-0x75df9683],0x2f0ec73d
  410e8a:	int3   
  410e8b:	sub    BYTE PTR [ecx+0x29],bl
  410e8e:	loope  0x410edd
  410e90:	loop   0x410e95
  410e92:	xor    al,0x2a
  410e94:	mov    ebx,0xf11d0842
  410e99:	push   ecx
  410e9a:	pop    es
  410e9b:	mov    ds:0xfe12bf1,eax
  410ea0:	or     eax,0x8c22cd82
  410ea5:	adc    eax,0x46323ed3
  410eaa:	ja     0x410e7a
  410eac:	call   0xbb1:0x30a64e97
  410eb3:	xchg   edi,edi
  410eb5:	cmp    bh,BYTE PTR [ebx]
  410eb7:	adc    esi,edx
  410eb9:	mov    bh,0x58
  410ebb:	and    al,0x6e
  410ebd:	or     DWORD PTR [ebp-0x36],eax
  410ec0:	sbb    dl,cl
  410ec2:	mov    ebp,0x588b9f50
  410ec7:	push   ebx
  410ec8:	jmp    DWORD PTR [esi-0x792a9972]
  410ece:	sub    eax,0x771e536d
  410ed3:	push   edi
  410ed4:	pop    esp
  410ed5:	scas   eax,DWORD PTR es:[edi]
  410ed6:	jmp    0xb37c3e9f
  410edb:	inc    eax
  410edc:	repz xchg edi,eax
  410ede:	in     eax,dx
  410edf:	in     al,0x2c
  410ee1:	mov    DWORD PTR [ebp-0x1a],ebx
  410ee4:	adc    ah,dh
  410ee6:	and    DWORD PTR [esi+0x64],esi
  410ee9:	mov    ah,0xd9
  410eeb:	mov    ah,0x1c
  410eed:	pop    ecx
  410eee:	or     al,0x83
  410ef0:	inc    ebp
  410ef1:	xor    DWORD PTR [edx],esi
  410ef3:	jecxz  0x410f03
  410ef5:	dec    ecx
  410ef6:	call   0x4e0b47b5
  410efb:	add    BYTE PTR [edx],0x42
  410efe:	jp     0x410ec0
  410f00:	pop    esi
  410f01:	mov    ds:0xc4192ece,eax
  410f06:	(bad)  
  410f07:	cmp    eax,DWORD PTR [ebx-0x3a34b474]
  410f0d:	pushf  
  410f0e:	pop    ds
  410f0f:	pusha  
  410f10:	mov    ecx,0xff73012c
  410f15:	sahf   
  410f16:	push   es
  410f17:	add    eax,esp
  410f19:	aad    0xfd
  410f1b:	xchg   esp,eax
  410f1c:	push   es
  410f1d:	push   es
  410f1e:	cld    
  410f1f:	shl    BYTE PTR [edx-0x63],0x48
  410f23:	push   ds
  410f24:	fs or  edi,0x831c955d
  410f2b:	retf   0xf00
  410f2e:	mov    ecx,0xc8bafacf
  410f33:	pop    edi
  410f34:	bound  eax,QWORD PTR [ecx]
  410f36:	jp     0x410fb7
  410f38:	push   es
  410f39:	mov    ?,WORD PTR [ebx+0x7c]
  410f3c:	add    ah,BYTE PTR [edi+0x41fa4515]
  410f42:	add    eax,ecx
  410f44:	pop    edx
  410f45:	(bad)  
  410f46:	cmp    al,dh
  410f48:	push   ebp
  410f49:	sbb    eax,0x9f6b6ba8
  410f4e:	and    al,dh
  410f50:	cs (bad) 
  410f52:	jo     0x410f30
  410f54:	cmp    al,BYTE PTR [esi-0x5faabb03]
  410f5a:	jb     0x410f5c
  410f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5d:	mov    BYTE PTR [esi+0x2ae131fc],al
  410f63:	push   ecx
  410f64:	add    eax,0x7a8185f9
  410f69:	sbb    al,0xbb
  410f6b:	pop    ss
  410f6c:	and    BYTE PTR [esp+ecx*4-0x1e],bl
  410f70:	popf   
  410f71:	dec    ecx
  410f72:	lahf   
  410f73:	cmp    al,0x74
  410f75:	push   esi
  410f76:	ss call 0x95e87c8f
  410f7c:	add    bl,ch
  410f7e:	cmc    
  410f7f:	inc    edi
  410f80:	ds cmp ebp,esp
  410f83:	fimul  WORD PTR [edi+edx*4-0x6df5530f]
  410f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f8b:	cmp    eax,0xcb76c65d
  410f90:	cmp    DWORD PTR [ecx+0x277a2db8],esp
  410f96:	(bad)  
  410f98:	add    bl,0x56
  410f9b:	test   al,0xa1
  410f9d:	mov    dh,0x63
  410f9f:	xchg   ecx,eax
  410fa0:	sub    bh,cl
  410fa2:	fisub  DWORD PTR [edi-0x4302dc61]
  410fa8:	lock mov ch,0x3f
  410fab:	push   cs
  410fac:	std    
  410fad:	hlt    
  410fae:	inc    ebx
  410faf:	add    al,0xec
  410fb1:	pop    esp
  410fb2:	aaa    
  410fb3:	dec    edx
  410fb4:	mov    bl,0x5
  410fb6:	add    al,0xc9
  410fb8:	out    dx,al
  410fb9:	cmp    eax,0x5d76203b
  410fbe:	mov    BYTE PTR [ecx+0x9],cl
  410fc1:	je     0x411038
  410fc3:	int3   
  410fc4:	pop    eax
  410fc5:	loop   0x410f7e
  410fc7:	mov    ecx,0xf09c4f65
  410fcc:	inc    esi
  410fcd:	push   0xfffffffa
  410fcf:	xchg   edx,eax
  410fd0:	xchg   BYTE PTR [edi],al
  410fd2:	sbb    bl,BYTE PTR [eax+0x45]
  410fd5:	stos   DWORD PTR es:[edi],eax
  410fd6:	ficom  DWORD PTR [edi]
  410fd8:	cli    
  410fd9:	cmp    BYTE PTR [ebx-0x5b],bh
  410fdc:	add    ah,BYTE PTR [ebp-0x43]
  410fdf:	out    0x6e,eax
  410fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe2:	xor    DWORD PTR [edx+ebx*1-0x20],ecx
  410fe6:	out    dx,eax
  410fe7:	xchg   BYTE PTR [edx],al
  410fe9:	popf   
  410fea:	icebp  
  410feb:	mov    eax,0xf03f5aaa
  410ff0:	push   edi
  410ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff2:	pushf  
  410ff3:	inc    ecx
  410ff4:	dec    edx
  410ff5:	enter  0xd13a,0x0
  410ff9:	fisttp DWORD PTR [ecx-0x45]
  410ffc:	imul   esp,DWORD PTR [edi-0x76],0xb2c9c863
  411003:	or     al,0x83
  411005:	jecxz  0x41106d
  411007:	aaa    
  411008:	lods   eax,DWORD PTR ds:[esi]
  411009:	push   edx
  41100a:	shl    esi,cl
  41100c:	sub    al,0xa7
  41100e:	js     0x41108a
  411010:	sahf   
  411011:	ret    
  411012:	pop    esp
  411013:	aaa    
  411014:	pop    ss
  411015:	test   BYTE PTR [esi+ebx*8+0x73],bl
  411019:	dec    edi
  41101a:	fisub  WORD PTR [ebx-0x31]
  41101d:	enter  0x1b8a,0xf9
  411021:	dec    eax
  411022:	fldl2t 
  411024:	cld    
  411025:	(bad)  
  411026:	aad    0x5d
  411028:	nop
  411029:	or     eax,DWORD PTR [ebx+0x10]
  41102c:	cmp    DWORD PTR [ebx+0x27],eax
  41102f:	push   edi
  411030:	inc    ecx
  411031:	je     0x41105b
  411033:	mov    eax,0x20e9d37b
  411038:	jne    0x410ff4
  41103a:	xchg   ecx,eax
  41103b:	jge    0x411099
  41103d:	mov    al,0x2c
  41103f:	loopne 0x41100c
  411041:	lahf   
  411042:	jmp    0x411084
  411044:	fsub   st,st(5)
  411046:	(bad)  
  411047:	loope  0x411049
  411049:	bnd jb 0x410fd0
  41104c:	and    al,0x28
  41104e:	inc    edi
  41104f:	call   0xf505ec9a
  411054:	inc    ebx
  411055:	jb     0x411034
  411057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411058:	mov    al,ds:0x3135d8d3
  41105d:	repz mov ecx,0x7c94324d
  411063:	and    eax,esp
  411065:	outs   dx,BYTE PTR ds:[esi]
  411066:	hlt    
  411067:	mov    ebx,0x605bb6df
  41106c:	mov    bl,0x50
  41106e:	clc    
  41106f:	xor    bl,BYTE PTR [esp+edx*2+0x323d30f2]
  411076:	sub    DWORD PTR [esi+0x12],esp
  411079:	std    
  41107a:	lock retf 
  41107c:	pop    ecx
  41107d:	sbb    eax,0x43c59ceb
  411082:	push   esp
  411083:	sub    BYTE PTR [ecx-0x8],bh
  411086:	inc    edx
  411087:	in     eax,0xa4
  411089:	push   ss
  41108a:	push   DWORD PTR [esi-0x37d241cc]
  411090:	pop    eax
  411091:	fdiv   QWORD PTR [ebx+0x64a60d0a]
  411097:	pop    edx
  411098:	enter  0xdccb,0x18
  41109c:	stos   BYTE PTR es:[edi],al
  41109d:	enter  0xdcad,0xe0
  4110a1:	dec    edi
  4110a2:	jp     0x4110bc
  4110a4:	jmp    0x41102a
  4110a6:	pop    edi
  4110a7:	inc    edx
  4110a8:	pop    ds
  4110a9:	fcom   DWORD PTR [edx+0x4aa2bf29]
  4110af:	cmp    ah,BYTE PTR [eax]
  4110b1:	fldcw  WORD PTR [ebx-0x4a227032]
  4110b7:	inc    edx
  4110b8:	or     eax,0xa42ba39d
  4110bd:	pop    ebx
  4110be:	adc    bl,dh
  4110c0:	and    BYTE PTR ds:0xe9515e3e,dh
  4110c6:	aam    0xff
  4110c8:	daa    
  4110c9:	push   esi
  4110ca:	add    ch,ah
  4110cc:	lods   al,BYTE PTR ds:[esi]
  4110cd:	mov    esp,eax
  4110cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d0:	int3   
  4110d1:	sahf   
  4110d2:	mov    edi,0x9bdb4f1a
  4110d7:	test   BYTE PTR [ebp+0x69],0x19
  4110db:	jo     0x4110a1
  4110dd:	sbb    BYTE PTR [ebp+0x67fc55d3],dh
  4110e3:	push   ds
  4110e4:	in     eax,0x1b
  4110e6:	or     eax,0xdfbbf904
  4110eb:	out    0x2d,al
  4110ed:	xor    BYTE PTR [eax-0x5],cl
  4110f0:	mov    WORD PTR [ebx],?
  4110f2:	mov    ebp,0xc543e469
  4110f7:	push   esp
  4110f8:	pop    ebp
  4110f9:	xchg   esi,eax
  4110fa:	or     esi,DWORD PTR [esi+0x56b21b45]
  411100:	(bad)  
  411102:	jb     0x4110e6
  411104:	retf   0x4646
  411107:	loope  0x411151
  411109:	call   0xf2d3bb5d
  41110e:	mov    cl,0x63
  411110:	mov    dl,0xdd
  411112:	pop    esp
  411113:	fild   WORD PTR [esi+eax*4+0x53e16973]
  41111a:	fyl2x  
  41111c:	ret    0x5392
  41111f:	cmp    ebp,ecx
  411121:	shl    BYTE PTR [esi+0x49],1
  411124:	and    eax,0x35d94955
  411129:	retf   
  41112a:	dec    esi
  41112b:	add    ebx,esi
  41112d:	add    al,0xd3
  41112f:	dec    ebp
  411130:	cs daa 
  411132:	adc    al,0xda
  411134:	in     eax,dx
  411135:	push   cs
  411136:	jecxz  0x4110f6
  411138:	mov    esp,0xb5f8de98
  41113d:	inc    edx
  41113e:	and    al,0x98
  411140:	popa   
  411141:	ret    
  411142:	repnz dec eax
  411144:	add    BYTE PTR [ebp+0x5],dl
  411147:	cmp    ecx,DWORD PTR [ebx]
  411149:	cs sbb al,0xb
  41114c:	push   0x7
  41114e:	sbb    dl,BYTE PTR [ebx-0x754bb279]
  411154:	and    DWORD PTR [eax],0x4fc85a08
  41115a:	dec    edi
  41115b:	pop    esi
  41115c:	pop    eax
  41115d:	adc    dl,0x20
  411160:	xchg   ecx,eax
  411161:	mov    cl,0x4d
  411163:	push   ebp
  411164:	fidiv  WORD PTR [ecx+0x1c9e9bd]
  41116a:	shl    DWORD PTR [edi+eiz*1],cl
  41116d:	adc    BYTE PTR [edx-0x435b9e39],bh
  411173:	xchg   ebx,eax
  411174:	retf   0xdd3a
  411177:	mov    esp,0xc9094e72
  41117c:	sbb    al,0xd8
  41117e:	sbb    eax,0xb2199a67
  411183:	(bad)  
  411184:	mov    bh,0xc9
  411186:	dec    esp
  411187:	mov    eax,ds:0xffe5aade
  41118c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118d:	in     al,0xcf
  41118f:	xor    DWORD PTR [ebp+edi*1-0x6f8bf201],esi
  411196:	cwde   
  411197:	call   0x5647:0x6c839eaa
  41119e:	arpl   WORD PTR [ecx+eiz*2-0x4dc50bd8],sp
  4111a5:	dec    edi
  4111a6:	mov    esi,0x17aacb86
  4111ab:	loope  0x4111a2
  4111ad:	mov    eax,ds:0x54f11bc1
  4111b2:	jp     0x4111de
  4111b4:	push   0x48
  4111b6:	mov    ch,0xa
  4111b8:	mov    edi,0xa1fe18b
  4111bd:	(bad)  
  4111bf:	loop   0x4111af
  4111c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c2:	jne    0x4111bd
  4111c4:	jl     0x4111cd
  4111c6:	or     DWORD PTR [ebx+0x52],esi
  4111c9:	sub    BYTE PTR [esi+0x3d],0xd9
  4111cd:	cwde   
  4111ce:	add    edx,esi
  4111d0:	bound  ecx,QWORD PTR [edi-0x2e]
  4111d3:	std    
  4111d4:	mov    dl,0x6
  4111d6:	test   eax,0xe695d8d3
  4111db:	jl     0x411187
  4111dd:	outs   dx,BYTE PTR ds:[esi]
  4111de:	repnz sbb DWORD PTR [esi],edx
  4111e1:	out    0x7c,al
  4111e3:	shr    BYTE PTR [ebx+eiz*4-0x5a],cl
  4111e7:	int3   
  4111e8:	push   esp
  4111e9:	loope  0x41124f
  4111eb:	inc    edx
  4111ec:	ins    BYTE PTR es:[edi],dx
  4111ed:	in     eax,0xa
  4111ef:	sub    eax,esi
  4111f1:	fistp  DWORD PTR [ebx-0x1897dd6e]
  4111f7:	push   es
  4111f8:	jmp    0x411201
  4111fa:	mov    al,ds:0xac4c7fe0
  4111ff:	push   cs
  411200:	fsub   QWORD PTR [edx+0x71b23ef2]
  411206:	rol    ebp,cl
  411208:	ja     0x4111f9
  41120a:	ror    DWORD PTR [eax+eax*4+0x71],cl
  41120e:	stos   DWORD PTR es:[edi],eax
  41120f:	xlat   BYTE PTR ds:[ebx]
  411210:	push   0x34deb4a2
  411215:	fmul   DWORD PTR [edx-0x63]
  411218:	sbb    al,0x3b
  41121a:	shl    BYTE PTR [ecx+0x5f],1
  41121d:	(bad)  
  41121e:	jnp    0x411295
  411220:	outs   dx,BYTE PTR ds:[esi]
  411221:	pop    ds
  411222:	sub    ch,BYTE PTR [edx+eax*4-0x5579e112]
  411229:	xchg   edi,eax
  41122a:	mov    eax,0x7bb5344a
  41122f:	mov    dl,0x61
  411231:	les    edi,FWORD PTR [edi-0x75a6f674]
  411237:	mov    edx,ebx
  411239:	js     0x4111c3
  41123b:	ret    0x4281
  41123e:	mov    cl,0xa7
  411240:	sti    
  411241:	daa    
  411242:	lock leave 
  411244:	pop    edx
  411245:	(bad)  
  411246:	push   esp
  411247:	sbb    BYTE PTR [edi+eax*2],dl
  41124a:	pop    ss
  41124b:	xchg   esp,eax
  41124c:	inc    ecx
  41124d:	jge    0x4112a0
  41124f:	mov    bl,0x6a
  411251:	aam    0x8f
  411253:	nop
  411254:	mov    ecx,0x2ebb7a35
  411259:	xor    DWORD PTR [ebp-0x61],eax
  41125c:	test   DWORD PTR [eax],ecx
  41125e:	das    
  41125f:	adc    al,0x6c
  411261:	inc    esp
  411262:	(bad)  
  411263:	mov    eax,0x2cebb274
  411268:	mov    edx,0xc9a33a18
  41126d:	cld    
  41126e:	xor    ch,ch
  411270:	loopne 0x411210
  411272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411273:	loope  0x411210
  411275:	jo     0x411285
  411277:	add    DWORD PTR [eax-0x299867f1],0xf56ac0bc
  411281:	mov    edx,ds
  411283:	push   esp
  411284:	adc    al,0x4
  411286:	or     bh,BYTE PTR [eax-0x5c]
  411289:	stos   BYTE PTR es:[edi],al
  41128a:	mov    ch,0x3c
  41128c:	(bad)  
  41128d:	cmc    
  41128e:	in     eax,0xac
  411290:	test   al,0x80
  411292:	popa   
  411293:	scas   eax,DWORD PTR es:[edi]
  411294:	xchg   BYTE PTR [eax+0x15786de6],al
  41129a:	mov    dh,cl
  41129c:	test   al,0xe1
  41129e:	ja     0x41127e
  4112a0:	mov    ebp,?
  4112a2:	add    al,0x83
  4112a4:	repz lock mov ebp,0x8ce68de5
  4112ab:	inc    ebp
  4112ac:	jecxz  0x4112d1
  4112ae:	(bad)  
  4112af:	jg     0x411297
  4112b1:	and    BYTE PTR [eax+0x35],bh
  4112b4:	loope  0x411305
  4112b6:	adc    BYTE PTR [eax+0x3f2a3b8b],al
  4112bc:	fst    DWORD PTR [esi+ebp*1]
  4112bf:	repnz repnz sbb dl,BYTE PTR [edx]
  4112c3:	enter  0x19ae,0x76
  4112c7:	pop    edx
  4112c8:	in     al,0xf5
  4112ca:	aad    0x9c
  4112cc:	rcr    DWORD PTR [edx-0xfb9d2c],0x71
  4112d3:	(bad)  
  4112d4:	sub    BYTE PTR [esi+0x5d],ch
  4112d7:	inc    edi
  4112d8:	sbb    eax,0x709862df
  4112dd:	push   esp
  4112de:	sbb    DWORD PTR [eax],eax
  4112e0:	imul   ebx,DWORD PTR [ecx],0x48
  4112e3:	mov    cl,0x33
  4112e5:	jl     0x411298
  4112e7:	out    dx,al
  4112e8:	ror    DWORD PTR [ebx+0x4b],0xa9
  4112ec:	ret    0xf71
  4112ef:	sub    eax,0x1eb4b2c
  4112f4:	imul   edx,DWORD PTR [edx-0xceb945],0x75
  4112fb:	dec    eax
  4112fc:	cmp    eax,0x81b7bd43
  411301:	in     al,0xb3
  411303:	mov    esi,0x8418fde4
  411308:	test   BYTE PTR [ecx+0x21b3a485],bh
  41130e:	sub    BYTE PTR [esi],bh
  411310:	aas    
  411311:	gs je  0x41129b
  411314:	inc    esi
  411315:	or     edx,DWORD PTR [edx-0x10]
  411318:	xchg   ecx,eax
  411319:	jns    0x411312
  41131b:	push   eax
  41131c:	ret    
  41131d:	int    0xc5
  41131f:	mov    eax,0x4db7b358
  411324:	(bad)  
  411325:	jno    0x4112dd
  411327:	test   ch,dh
  411329:	pushf  
  41132a:	shl    BYTE PTR [ecx-0x5f],1
  41132d:	ret    0x16f
  411330:	fdiv   DWORD PTR [eax]
  411332:	loope  0x4112d5
  411334:	inc    ebp
  411335:	push   eax
  411336:	xchg   ebp,eax
  411337:	std    
  411338:	cwde   
  411339:	(bad)  
  41133a:	pop    ds
  41133b:	mov    esp,cs
  41133d:	popw   es
  41133f:	pushf  
  411340:	xor    DWORD PTR [edi],ecx
  411342:	shl    DWORD PTR [ebp-0x60],1
  411345:	push   edx
  411346:	daa    
  411347:	xchg   edi,eax
  411348:	mov    edx,0xcb0b2547
  41134d:	(bad)  
  41134e:	in     eax,0xf3
  411350:	sub    esi,DWORD PTR [ebx-0x22]
  411353:	add    al,BYTE PTR [edi+0x2d]
  411356:	loop   0x411333
  411358:	mov    edi,cs
  41135a:	push   esi
  41135b:	sbb    eax,0x8ff2a5ee
  411360:	mov    ah,BYTE PTR [edi]
  411362:	xor    bl,BYTE PTR [esi-0x2f7ca135]
  411368:	data16 ins BYTE PTR es:[edi],dx
  41136a:	mov    esi,0x33be4422
  41136f:	cmp    BYTE PTR [eax],al
  411371:	neg    DWORD PTR [eax+0x7d864ca7]
  411377:	faddp  st(2),st
  411379:	add    DWORD PTR [ebx-0x3],ecx
  41137c:	mov    BYTE PTR [ecx-0x68],dh
  41137f:	rol    BYTE PTR [eax-0x7b],cl
  411382:	(bad)  
  411383:	cmp    edi,DWORD PTR [edi+edx*2+0x4c7151e2]
  41138a:	mov    ch,0xbb
  41138c:	add    bl,BYTE PTR [eax+0x2fbb5efc]
  411392:	test   al,0x96
  411394:	jp     0x4113c0
  411396:	ret    
  411397:	test   edx,ecx
  411399:	sbb    DWORD PTR [ecx],ebp
  41139b:	xchg   ebx,eax
  41139c:	ins    DWORD PTR es:[edi],dx
  41139d:	inc    DWORD PTR [edi-0x4cbdbbf8]
  4113a3:	in     al,0xd1
  4113a5:	add    eax,0x56a9a114
  4113aa:	lock jns 0x4113a3
  4113ad:	ds std 
  4113af:	mov    edx,0xa74d724b
  4113b4:	xchg   edi,eax
  4113b5:	shl    DWORD PTR [ecx-0x2e],cl
  4113b8:	xchg   ebp,eax
  4113b9:	sbb    BYTE PTR [ebp-0x1b0b9544],dh
  4113bf:	cli    
  4113c0:	cmp    BYTE PTR [ecx],bh
  4113c2:	mov    ebx,0xfa4c2b9b
  4113c7:	and    BYTE PTR [edi+ebx*1+0x5a7363b9],al
  4113ce:	ins    BYTE PTR es:[edi],dx
  4113cf:	paddq  mm0,QWORD PTR [ebp+0x6f1be268]
  4113d6:	fidivr WORD PTR ds:0x9c99b3ce
  4113dc:	jae    0x411422
  4113de:	shl    DWORD PTR [edi],0xcc
  4113e1:	or     DWORD PTR [esi],esp
  4113e3:	sbb    edx,DWORD PTR [ecx-0x3a6ddc95]
  4113e9:	popf   
  4113ea:	pop    ebp
  4113eb:	fst    QWORD PTR [eax+0x79530bf0]
  4113f1:	pop    ecx
  4113f2:	mov    WORD PTR [ebx-0x2],ss
  4113f5:	cli    
  4113f6:	test   al,0xa1
  4113f8:	leave  
  4113f9:	es sub ecx,0x55576701
  411400:	stos   BYTE PTR es:[edi],al
  411401:	out    0x3e,al
  411403:	mov    ds:0x18ea07d7,al
  411408:	mov    ch,cl
  41140a:	test   DWORD PTR [ecx],ebx
  41140c:	pop    ecx
  41140d:	and    DWORD PTR [edi+0x48],esp
  411410:	jle    0x411439
  411412:	mov    bh,0x2f
  411414:	mov    ecx,0x1d57bac
  411419:	sub    DWORD PTR [esp+eax*4+0x5884432f],eax
  411420:	pop    eax
  411421:	xchg   edi,eax
  411422:	stos   DWORD PTR es:[edi],eax
  411423:	push   edx
  411424:	sub    eax,DWORD PTR [ebx+esi*2-0x6727b72d]
  41142b:	sub    ebp,DWORD PTR [ecx-0x6]
  41142e:	xlat   BYTE PTR ds:[ebx]
  41142f:	pop    eax
  411430:	cmp    bl,BYTE PTR ds:0x58ecd13f
  411436:	pop    eax
  411437:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411439:	in     al,0xb5
  41143b:	inc    ebx
  41143c:	xor    ebx,esp
  41143e:	fbstp  TBYTE PTR [ecx+0x3ed108db]
  411444:	mov    dh,0x83
  411446:	add    al,0x7b
  411448:	xchg   edx,eax
  411449:	jo     0x411490
  41144b:	mov    bl,0x35
  41144d:	aad    0x5b
  41144f:	dec    edx
  411450:	mov    ebp,0xc762f79
  411455:	sahf   
  411456:	inc    ecx
  411457:	fwait
  411458:	call   0x33620625
  41145d:	jmp    0x1125720c
  411462:	push   ss
  411463:	adc    al,0xdf
  411465:	pusha  
  411466:	loope  0x411421
  411468:	sub    dl,BYTE PTR [esi]
  41146a:	sbb    cl,0x2d
  41146d:	pop    es
  41146e:	pop    ebp
  41146f:	push   0xffffff8e
  411471:	pop    ebp
  411472:	xchg   ebp,eax
  411473:	cli    
  411474:	retf   0xe4a
  411477:	loopne 0x4114dd
  411479:	bound  ebx,QWORD PTR [edx+0x1af61ad8]
  41147f:	push   cs
  411480:	cwde   
  411481:	mov    esp,0x397d8747
  411486:	sbb    BYTE PTR [ebx+eax*2+0x6b],ah
  41148a:	mov    esi,0x77c63029
  41148f:	push   ds
  411490:	sbb    DWORD PTR [ecx-0x49ce4949],ebp
  411496:	mov    DWORD PTR [esi+eax*2-0x47],0x927f3d61
  41149e:	jns    0x411433
  4114a0:	repz arpl WORD PTR [ecx-0x487f1c33],bx
  4114a7:	aam    0x39
  4114a9:	sar    DWORD PTR [ebx],1
  4114ab:	dec    ecx
  4114ac:	mov    eax,0x4e88793c
  4114b1:	lods   al,BYTE PTR ds:[esi]
  4114b2:	add    eax,0xcdbaad27
  4114b7:	call   0x9b67:0xba2f8075
  4114be:	ds jmp 0xf95c0961
  4114c4:	push   ss
  4114c5:	fsub   QWORD PTR [edi]
  4114c7:	xor    DWORD PTR [ebx+edx*8+0x31],edx
  4114cb:	fadd   st(3),st
  4114cd:	mov    dl,0x29
  4114cf:	fist   DWORD PTR [edi-0x27]
  4114d2:	jns    0x411529
  4114d4:	sub    BYTE PTR [ebx+0x5e],0xa1
  4114d8:	push   0x8
  4114da:	mov    cl,BYTE PTR [esi+0x6a879a5c]
  4114e0:	pop    es
  4114e1:	dec    ecx
  4114e2:	mov    esp,0x73096a2f
  4114e7:	jae    0x411505
  4114e9:	lods   al,BYTE PTR fs:[esi]
  4114eb:	call   0x32541ad9
  4114f0:	iret   
  4114f1:	push   0x1b
  4114f3:	sbb    BYTE PTR [ebx-0xc],bl
  4114f6:	test   eax,0x57998d84
  4114fb:	adc    ebp,0x7bde8211
  411501:	imul   edi,DWORD PTR [ecx+0x10],0xd676f932
  411508:	cmp    bl,BYTE PTR ds:0x64c56038
  41150e:	popa   
  41150f:	push   ss
  411510:	call   0xf0b6:0x154131f
  411517:	add    cl,dh
  411519:	adc    eax,ecx
  41151b:	xchg   ebp,edx
  41151d:	imul   esi,DWORD PTR [ebx+esi*2-0x4d43548e],0xffffffb6
  411525:	cwde   
  411526:	repnz dec ebp
  411528:	mov    ds:0xccf7ce03,al
  41152d:	jno    0x411558
  41152f:	jmp    0x41152e
  411531:	xchg   edx,eax
  411532:	mov    esi,0x1e8b259a
  411537:	int    0xbd
  411539:	mov    edi,0xf225118b
  41153e:	loop   0x411581
  411540:	xrelease xchg DWORD PTR [ebp-0x6af8a457],edi
  411547:	(bad)  
  411548:	dec    edi
  411549:	dec    eax
  41154a:	sub    DWORD PTR [ecx-0x76505011],edx
  411550:	xchg   esi,eax
  411551:	les    edi,FWORD PTR ds:[esi-0x3c824d3]
  411558:	inc    edi
  411559:	neg    BYTE PTR [esi-0x19ab433b]
  41155f:	out    0x75,al
  411561:	lods   eax,DWORD PTR ds:[esi]
  411562:	mov    bh,0x42
  411564:	inc    edi
  411565:	aaa    
  411566:	in     eax,0x38
  411568:	mov    ecx,0x573d8217
  41156d:	dec    edx
  41156e:	fisttp DWORD PTR [edx+ebp*8+0x711a76c7]
  411575:	leave  
  411576:	loope  0x4115a6
  411578:	inc    eax
  411579:	mov    eax,esi
  41157b:	adc    BYTE PTR [esi],dh
  41157d:	mov    al,ds:0x2387b0b9
  411582:	jbe    0x411517
  411584:	jbe    0x41158c
  411586:	cs loop 0x411523
  411589:	imul   esi,ebx,0x751af2b3
  41158f:	sahf   
  411590:	and    al,0x71
  411592:	aam    0x69
  411594:	push   0xffffffb9
  411596:	sti    
  411597:	idiv   ebp
  411599:	outs   dx,DWORD PTR ds:[esi]
  41159a:	hlt    
  41159b:	not    edi
  41159d:	test   eax,0xce8b9f3c
  4115a2:	mov    ebp,0x33a165b3
  4115a7:	lods   al,BYTE PTR ds:[esi]
  4115a8:	(bad)  
  4115a9:	sbb    BYTE PTR [edx],bl
  4115ab:	jbe    0x411593
  4115ad:	fadd   DWORD PTR [ebx-0x2620271f]
  4115b3:	nop
  4115b4:	add    dh,BYTE PTR [edi-0x5c98f7fa]
  4115ba:	fimul  WORD PTR [edi+0x3d4e355a]
  4115c0:	ror    DWORD PTR [ebx-0x29],0xfc
  4115c4:	ficom  DWORD PTR ds:0xeed8b116
  4115ca:	dec    ebx
  4115cb:	sub    eax,0x8b8de3ac
  4115d0:	call   0x511a5927
  4115d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d6:	push   ebx
  4115d7:	sbb    eax,0xcbb302e5
  4115dc:	and    DWORD PTR [ebx],esp
  4115de:	neg    edi
  4115e0:	loopne 0x411642
  4115e2:	sbb    BYTE PTR [edx+0x25607921],dh
  4115e8:	push   edx
  4115e9:	bnd jbe 0x411597
  4115ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ed:	jb     0x41164a
  4115ef:	xor    eax,0xb2b3d723
  4115f4:	(bad)  
  4115f5:	pop    esi
  4115f6:	add    eax,esp
  4115f8:	or     eax,0x73059e22
  4115fd:	cwde   
  4115fe:	lahf   
  4115ff:	fcomp  QWORD PTR [esi]
  411601:	push   DWORD PTR [ebp+0x6394cfa0]
  411607:	ficom  DWORD PTR [ecx]
  411609:	add    DWORD PTR [edi-0x3f75ca9f],edi
  41160f:	out    0x15,eax
  411611:	sbb    DWORD PTR [edi+0x44c54bba],ebp
  411617:	in     eax,dx
  411618:	push   cs
  411619:	sub    al,0xe
  41161b:	and    al,BYTE PTR [edx-0xf99becf]
  411621:	lods   al,BYTE PTR ds:[esi]
  411622:	pushf  
  411623:	aad    0x16
  411625:	mov    al,ds:0xcd2ba869
  41162a:	fisttp QWORD PTR [edi-0x10]
  41162d:	imul   ebx,DWORD PTR [ebp+0x32e5b4ea],0x3cedab9a
  411637:	cli    
  411638:	pop    ds
  411639:	in     al,0x11
  41163b:	test   eax,0xc5378222
  411640:	leave  
  411641:	jb     0x4116a5
  411643:	inc    edx
  411644:	xlat   BYTE PTR ds:[ebx]
  411645:	push   eax
  411646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411648:	cwde   
  411649:	adc    dh,dh
  41164b:	popa   
  41164c:	mov    cl,0xd3
  41164e:	dec    edx
  41164f:	cmp    edi,ecx
  411651:	push   es
  411652:	and    ecx,DWORD PTR [ecx]
  411654:	inc    edx
  411655:	mov    dl,0x4c
  411657:	fstp   DWORD PTR [ebp+0x460da68d]
  41165d:	outs   dx,DWORD PTR ds:[esi]
  41165e:	cmp    al,0x2c
  411660:	lahf   
  411661:	mov    bh,0xff
  411663:	loop   0x4116c5
  411665:	aad    0xf
  411667:	xchg   ebx,eax
  411668:	and    BYTE PTR [eax],al
  41166a:	iret   
  41166b:	fisttp QWORD PTR cs:[esi]
  41166e:	and    al,0x51
  411670:	push   0xffffffa0
  411672:	hlt    
  411673:	pop    ebx
  411674:	pusha  
  411675:	adc    al,0xbd
  411677:	sub    ebp,DWORD PTR [eax-0x74e09468]
  41167d:	clc    
  41167e:	and    ebx,DWORD PTR [edx]
  411680:	scas   al,BYTE PTR es:[edi]
  411681:	push   edi
  411682:	sbb    bh,BYTE PTR [esi]
  411684:	shl    BYTE PTR [ebp+0x2d],1
  411687:	jbe    0x4116f1
  411689:	jnp    0x41167a
  41168b:	dec    eax
  41168c:	xchg   esi,eax
  41168d:	aad    0x83
  41168f:	js     0x4116b1
  411691:	push   edx
  411692:	sbb    dh,BYTE PTR [eax+0x43]
  411695:	jo     0x411686
  411697:	cdq    
  411698:	aas    
  411699:	div    BYTE PTR [esp+ecx*4+0x44]
  41169d:	js     0x411665
  41169f:	mov    bh,0xbc
  4116a1:	fwait
  4116a2:	mov    bl,0xfa
  4116a4:	pop    DWORD PTR [ebx-0x14bc24de]
  4116aa:	fsub   QWORD PTR [edi+edi*1]
  4116ad:	cmp    BYTE PTR ds:0xc2694f20,ch
  4116b3:	inc    ebx
  4116b4:	nop
  4116b5:	mov    eax,ds:0x108dad15
  4116ba:	xchg   ebp,eax
  4116bb:	jns    0x411697
  4116bd:	pop    ebp
  4116be:	dec    edi
  4116bf:	jle    0x4116ad
  4116c1:	or     al,0xe3
  4116c3:	push   esi
  4116c4:	ret    
  4116c5:	in     eax,0x82
  4116c7:	jmp    0x4116e9
  4116c9:	sub    BYTE PTR [edx-0x1b],ch
  4116cc:	rcr    BYTE PTR [esi+0x48bdd62e],0xc
  4116d3:	pushf  
  4116d4:	inc    eax
  4116d5:	mov    DWORD PTR [edx-0x6c],ecx
  4116d8:	sar    edx,cl
  4116da:	outs   dx,BYTE PTR ds:[esi]
  4116db:	and    dh,BYTE PTR [eax+0x61]
  4116de:	int3   
  4116df:	stos   DWORD PTR es:[edi],eax
  4116e0:	xchg   esi,eax
  4116e1:	sub    ebx,ecx
  4116e3:	mov    ebp,DWORD PTR [ebx]
  4116e5:	mov    esi,DWORD PTR [edx+0x35]
  4116e8:	aas    
  4116e9:	jno    0x411681
  4116eb:	imul   edx,DWORD PTR [ebx+0x4fa929be],0x49
  4116f2:	pop    ebx
  4116f3:	inc    DWORD PTR [edi-0x523a69f8]
  4116f9:	ins    DWORD PTR es:[edi],dx
  4116fa:	icebp  
  4116fb:	loopne 0x41172f
  4116fd:	into   
  4116fe:	fcomp  DWORD PTR [edi+0x73]
  411701:	adc    BYTE PTR [ecx-0x7],0xa9
  411705:	mov    edi,0x6799c72d
  41170a:	and    eax,0xec04ddb8
  41170f:	jecxz  0x4116f1
  411711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411712:	daa    
  411713:	ins    DWORD PTR es:[edi],dx
  411714:	stos   DWORD PTR es:[edi],eax
  411715:	mov    cl,BYTE PTR [ebx+0x576f6494]
  41171b:	mov    esi,0xa89bf231
  411720:	and    BYTE PTR [edx-0x117fd84b],cl
  411726:	pushf  
  411727:	jle    0x41173c
  411729:	mov    ebp,0xff910376
  41172e:	in     al,dx
  41172f:	mov    cl,0x9e
  411731:	sbb    BYTE PTR [edx+0x3e268ab7],bl
  411737:	popw   ss
  411739:	mov    dl,0xa2
  41173b:	mov    ch,0xca
  41173d:	add    ah,BYTE PTR [ebx]
  41173f:	repz test DWORD PTR [ecx+0x9],ebp
  411743:	add    ebx,ecx
  411745:	sbb    eax,0x3c1dc03f
  41174a:	sbb    dh,BYTE PTR [esi]
  41174c:	popf   
  41174d:	mov    edx,0xcebfe335
  411752:	cwde   
  411753:	leave  
  411754:	xor    al,0xa2
  411756:	mov    ds:0xc3196fe5,eax
  41175b:	cld    
  41175c:	or     al,0xc7
  41175e:	sub    BYTE PTR [edx],ah
  411760:	sub    al,0xe0
  411762:	sti    
  411763:	mov    eax,0x905570b9
  411768:	mov    eax,0xcd254e20
  41176d:	bound  eax,QWORD PTR [edx+0x5e]
  411770:	xchg   esi,eax
  411771:	pop    ss
  411772:	mov    bl,0xb7
  411774:	scas   eax,DWORD PTR es:[edi]
  411775:	cmc    
  411776:	std    
  411777:	adc    eax,0xd42f07ed
  41177c:	mov    al,ds:0x910692ac
  411781:	in     al,dx
  411782:	dec    ebp
  411783:	add    ah,BYTE PTR [eax+0x3d]
  411786:	push   esi
  411787:	bound  ecx,QWORD PTR [eax]
  411789:	int    0x5d
  41178b:	xor    cl,BYTE PTR ds:[eax+0x9b092e1]
  411792:	or     eax,0xaea83c92
  411797:	push   esi
  411798:	in     eax,0xd
  41179a:	test   al,0x3c
  41179c:	and    ebx,DWORD PTR [edi]
  41179e:	mov    bl,0x47
  4117a0:	sub    dh,BYTE PTR [edi-0x73]
  4117a3:	adc    dh,BYTE PTR [ecx+0x12ca8ee0]
  4117a9:	inc    edx
  4117aa:	push   edi
  4117ab:	aam    0x1
  4117ad:	push   cs
  4117ae:	jge    0x4117d8
  4117b0:	aad    0xc5
  4117b2:	jo     0x41180a
  4117b4:	add    al,0x36
  4117b6:	out    0xda,eax
  4117b8:	fcomp  DWORD PTR [ecx+0x6e]
  4117bb:	cmp    BYTE PTR [ebp-0x20209bd8],cl
  4117c1:	mov    ch,0x4c
  4117c3:	dec    eax
  4117c4:	pop    ebx
  4117c5:	daa    
  4117c6:	vpunpcklwd xmm2,xmm2,xmm7
  4117ca:	(bad)  
  4117cb:	cdq    
  4117cc:	adc    BYTE PTR [edi],al
  4117ce:	cmp    eax,0x9d73818e
  4117d3:	add    al,BYTE PTR [edi-0x36]
  4117d6:	push   edx
  4117d7:	xlat   BYTE PTR ds:[ebx]
  4117d8:	inc    edx
  4117d9:	lods   al,BYTE PTR ds:[esi]
  4117da:	icebp  
  4117db:	fwait
  4117dc:	pop    ss
  4117dd:	popa   
  4117de:	push   ebp
  4117df:	aad    0x5f
  4117e1:	xchg   esp,eax
  4117e2:	xchg   ebp,eax
  4117e3:	into   
  4117e4:	jle    0x411807
  4117e6:	xchg   ecx,eax
  4117e7:	mov    ch,0x6e
  4117e9:	les    esp,FWORD PTR [edx+0x16]
  4117ec:	cdq    
  4117ed:	dec    ebp
  4117ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ef:	jp     0x4117d6
  4117f1:	repz jge 0x411861
  4117f4:	adc    BYTE PTR [eax],bh
  4117f6:	xchg   edx,eax
  4117f7:	mov    ds:0xb752b2f9,eax
  4117fc:	pushf  
  4117fd:	inc    edx
  4117fe:	iret   
  4117ff:	ficom  DWORD PTR [esi-0x34a93985]
  411805:	mov    bl,0x3a
  411807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411808:	inc    eax
  411809:	sub    eax,0x151561c6
  41180e:	push   ss
  41180f:	test   eax,0xd7446ff3
  411814:	bound  eax,QWORD PTR [edx+0x69031c65]
  41181a:	cmp    esp,DWORD PTR [edx+eiz*2]
  41181d:	xchg   ecx,eax
  41181e:	mov    esp,0x49df7f44
  411823:	pop    ecx
  411824:	jae    0x41188a
  411826:	or     DWORD PTR [ebx-0x11],edx
  411829:	adc    eax,edi
  41182b:	shl    DWORD PTR [ecx-0x792591c2],1
  411831:	jb     0x411870
  411833:	scas   al,BYTE PTR es:[edi]
  411834:	(bad)
  411837:	push   cs
  411838:	cmp    al,0x6f
  41183a:	dec    ebx
  41183b:	xchg   ebx,eax
  41183c:	or     al,0x2b
  41183e:	mov    ah,BYTE PTR [ebx]
  411840:	retf   
  411841:	pop    es
  411842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411843:	add    eax,0xa299d24b
  411848:	mov    ch,BYTE PTR [ecx-0x41]
  41184b:	and    al,0xa8
  41184d:	fiadd  DWORD PTR [eax+0x396f5d48]
  411853:	out    dx,eax
  411854:	push   esp
  411855:	retf   
  411856:	jmp    0xee91:0x2f0fa5cc
  41185d:	jae    0x4117e3
  41185f:	and    BYTE PTR [ebx+0x57],cl
  411862:	mov    ah,0xb9
  411864:	inc    ebp
  411865:	and    eax,0xcb8f0557
  41186a:	xor    DWORD PTR [ebx-0xa1f80a9],esp
  411870:	add    al,0x70
  411872:	jmp    0x3031669
  411877:	mov    bh,0x28
  411879:	daa    
  41187a:	rcl    edx,0x4
  41187d:	jl     0x411844
  41187f:	push   edx
  411880:	cmp    dl,al
  411882:	xlat   BYTE PTR ds:[ebx]
  411883:	sbb    al,0xcd
  411885:	xor    al,0xeb
  411887:	fild   QWORD PTR [edx]
  411889:	mov    DWORD PTR [ecx+0x48],ebp
  41188c:	fild   QWORD PTR fs:[ecx-0x2c2be7fa]
  411893:	inc    edi
  411894:	xchg   esp,eax
  411895:	sbb    al,0x2c
  411897:	fsub   DWORD PTR ds:0x945a66e4
  41189d:	ins    BYTE PTR es:[edi],dx
  41189e:	stos   BYTE PTR es:[edi],al
  41189f:	das    
  4118a0:	packssdw mm7,QWORD PTR [esi+0x469d716b]
  4118a7:	test   DWORD PTR [ebx+0x24065195],ebp
  4118ad:	imul   esp,ebx,0x4b
  4118b0:	xlat   BYTE PTR ds:[ebx]
  4118b1:	add    edx,ebp
  4118b3:	aaa    
  4118b4:	push   ecx
  4118b5:	push   0x24
  4118b7:	ds mov ch,0x9c
  4118ba:	mov    dl,0xb4
  4118bc:	or     dh,BYTE PTR [edx-0x31]
  4118bf:	les    esi,FWORD PTR [esi+0x10b3768]
  4118c5:	outs   dx,DWORD PTR ds:[esi]
  4118c7:	push   esi
  4118c8:	data16 std 
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	mov    bl,0xe
  4118cd:	pop    edx
  4118ce:	or     al,0x27
  4118d0:	dec    edi
  4118d1:	adc    ch,BYTE PTR [esi]
  4118d3:	inc    esi
  4118d4:	jno    0x41188c
  4118d6:	(bad)  
  4118d7:	pop    eax
  4118d8:	sub    BYTE PTR [ecx-0x75],cl
  4118db:	cli    
  4118dc:	cmc    
  4118dd:	or     eax,0xde6dac8c
  4118e2:	jmp    0xf28c:0x784040d3
  4118e9:	push   ss
  4118ea:	jmp    0x6a58d2c5
  4118ef:	addr16 and al,0xe
  4118f2:	hlt    
  4118f3:	fwait
  4118f4:	loop   0x411969
  4118f6:	push   edi
  4118f7:	repz (bad) 
  4118f9:	adc    DWORD PTR [edx+0x670d0e33],ebp
  4118ff:	inc    esi
  411900:	cmc    
  411901:	aam    0xc2
  411903:	(bad)  
  411904:	fisttp QWORD PTR [ecx+0x4c6e2784]
  41190a:	cli    
  41190b:	call   0x311b:0x5814ce40
  411912:	mov    dl,0xcd
  411914:	jp     0x4118fb
  411916:	mov    ah,0xdf
  411918:	in     eax,dx
  411919:	frstor [ecx]
  41191b:	loopne 0x4118c1
  41191d:	mov    BYTE PTR [ebp-0x69c38eb3],0xcc
  411924:	pop    ss
  411925:	xor    al,BYTE PTR [ebp-0x675f78f3]
  41192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192d:	jno    0x411948
  41192f:	shr    BYTE PTR [edx+0x52],0xd2
  411933:	add    dl,BYTE PTR [ebx-0xfb1f880]
  411939:	mov    dl,0x6d
  41193b:	out    dx,al
  41193c:	pushf  
  41193d:	push   cs
  41193e:	leave  
  41193f:	cdq    
  411940:	int    0xc9
  411942:	(bad)  
  411943:	fwait
  411944:	enter  0x5343,0xcc
  411948:	xor    al,0xe7
  41194a:	and    eax,0xab53fd6
  41194f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411950:	test   eax,0x71bfabb2
  411955:	popa   
  411956:	inc    edx
  411957:	or     ecx,DWORD PTR [ecx]
  411959:	test   BYTE PTR [ecx],dh
  41195b:	dec    esi
  41195c:	aad    0xf9
  41195e:	test   al,0xd
  411960:	cmp    al,0x26
  411962:	aad    0x2e
  411964:	stc    
  411965:	push   es
  411966:	xor    DWORD PTR [esi-0x39],esp
  411969:	shl    ebp,1
  41196b:	test   BYTE PTR [ecx],0x2f
  41196e:	add    al,0x85
  411970:	sbb    eax,0x6bec5ec
  411975:	fs (bad) 
  411977:	out    dx,al
  411978:	sub    BYTE PTR [eax+0x6789f4eb],bh
  41197e:	lds    ecx,FWORD PTR [ecx-0x5c]
  411981:	xor    BYTE PTR [edi],cl
  411983:	inc    eax
  411984:	push   ebx
  411985:	call   0xa45b5ece
  41198a:	lods   al,BYTE PTR ds:[esi]
  41198b:	dec    edi
  41198c:	inc    edx
  41198d:	dec    eax
  41198e:	rcr    ah,cl
  411990:	gs test eax,0x2335b444
  411996:	inc    eax
  411997:	ja     0x41198a
  411999:	xor    BYTE PTR [ebp-0x7b],0x5f
  41199d:	mov    ebp,0x9d6746ef
  4119a2:	fsub   DWORD PTR [edx+0x252f9003]
  4119a8:	iret   
  4119a9:	xor    DWORD PTR ds:0x1378fcc1,eax
  4119af:	dec    ebp
  4119b0:	sbb    DWORD PTR [esi-0x7aac3fa4],eax
  4119b6:	imul   ebp,DWORD PTR [ebp+0x2902ae3b],0x71a450db
  4119c0:	mov    edx,DWORD PTR [ecx+0x1f]
  4119c3:	pusha  
  4119c4:	push   edi
  4119c5:	outs   dx,BYTE PTR ds:[esi]
  4119c6:	cmp    cl,dh
  4119c8:	jns    0x411980
  4119ca:	sti    
  4119cb:	cmp    eax,0x8a82b832
  4119d0:	jbe    0x41196d
  4119d2:	push   es
  4119d3:	sub    al,0xec
  4119d5:	xlat   BYTE PTR ds:[ebx]
  4119d6:	arpl   si,di
  4119d8:	pop    eax
  4119d9:	and    esp,edi
  4119db:	lock push eax
  4119dd:	sub    ah,BYTE PTR [esi]
  4119df:	jo     0x411968
  4119e1:	mov    esp,0x939c7609
  4119e6:	or     ebx,DWORD PTR ds:0xaca98f1
  4119ec:	mov    bh,0xe4
  4119ee:	arpl   WORD PTR [edx+eax*2],ax
  4119f1:	mov    ch,0x63
  4119f3:	mov    ebx,?
  4119f5:	push   esi
  4119f6:	inc    ecx
  4119f7:	adc    esi,esp
  4119f9:	out    dx,al
  4119fa:	push   0x4c403930
  4119ff:	jp     0x4119bb
  411a01:	bound  esp,QWORD PTR [ebx]
  411a03:	std    
  411a04:	and    BYTE PTR [edx+eax*8+0x558b3c50],bl
  411a0b:	or     BYTE PTR [ebx-0x3d7e57a3],cl
  411a11:	clc    
  411a12:	or     BYTE PTR [edi+0x0],dl
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x2d7b42ed
  411b74:	jb     0x411ba4
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b87
  411b7e:	xchg   ecx,eax
  411b7f:	ret    0x47f8
  411b82:	loop   0x411b9d
  411b84:	es push ebp
  411b86:	mov    eax,ds:0xa2b32a96
  411b8b:	fidivr DWORD PTR [ebx-0x7a8a07a0]
  411b91:	int    0x31
  411b93:	mov    bh,0xdd
  411b95:	jle    0x411ba8
  411b97:	push   esp
  411b98:	je     0x411bf7
  411b9a:	lods   al,BYTE PTR ds:[esi]
  411b9b:	in     al,0x45
  411b9d:	jne    0x411b62
  411b9f:	cmp    cl,0xb9
  411ba2:	xor    ecx,0x60253a8a
  411ba8:	xlat   BYTE PTR ds:[ebx]
  411ba9:	push   es
  411baa:	pop    eax
  411bab:	dec    ebx
  411bac:	cdq    
  411bad:	dec    edx
  411bae:	sub    ebp,DWORD PTR [edi]
  411bb0:	xchg   ebx,eax
  411bb1:	or     ebp,eax
  411bb3:	test   DWORD PTR [ecx-0xa],esp
  411bb6:	cmp    esp,DWORD PTR [eax]
  411bb8:	lds    eax,FWORD PTR [ebp-0x1d]
  411bbb:	fld    QWORD PTR [edx-0x78]
  411bbe:	push   ebx
  411bbf:	mov    dh,0xe0
  411bc1:	jmp    0x411bb3
  411bc3:	sbb    DWORD PTR [edx+0x79],edi
  411bc6:	out    dx,al
  411bc7:	sub    cl,BYTE PTR [eax+0xac0ce9b]
  411bcd:	(bad)  
  411bce:	icebp  
  411bcf:	aaa    
  411bd0:	add    eax,0xebf59fcc
  411bd5:	std    
  411bd6:	sub    BYTE PTR [ebx],0xd7
  411bd9:	fwait
  411bda:	and    eax,0xe73d7899
  411bdf:	jge    0x411c45
  411be1:	scas   al,BYTE PTR es:[edi]
  411be2:	cmp    eax,ebp
  411be4:	enter  0xcad5,0xf0
  411be8:	stos   DWORD PTR es:[edi],eax
  411be9:	cmp    eax,ebx
  411beb:	jg     0x411b82
  411bed:	jbe    0x411c22
  411bef:	dec    edi
  411bf0:	xchg   edx,eax
  411bf1:	mov    al,ds:0xbdd8301e
  411bf6:	cmp    BYTE PTR [edx+0x5d],bh
  411bf9:	clc    
  411bfa:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bfc:	aad    0x62
  411bfe:	push   eax
  411bff:	pop    ebp
  411c00:	pop    esi
  411c01:	jl     0x411c67
  411c03:	cmp    DWORD PTR [ebx+0x53],ebx
  411c06:	mov    ecx,0xea6dd017
  411c0b:	xor    esi,DWORD PTR [esi+esi*2+0x1b8765e5]
  411c12:	pop    ds
  411c13:	add    dl,ah
  411c15:	test   al,0xf2
  411c17:	and    eax,0x17e12d7f
  411c1c:	js     0x411c86
  411c1e:	dec    ebx
  411c1f:	sub    edx,DWORD PTR [ebx+ebx*1-0xe]
  411c23:	cmp    eax,0xfd2682e9
  411c28:	(bad)  
  411c29:	pop    edx
  411c2a:	xor    esi,ebx
  411c2c:	rcr    BYTE PTR [ebp-0x3f],cl
  411c2f:	scas   eax,DWORD PTR es:[edi]
  411c30:	shr    cl,cl
  411c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c33:	xchg   ecx,eax
  411c34:	add    al,0x71
  411c36:	test   eax,0xa22c11ef
  411c3b:	retf   0xa66b
  411c3e:	xor    BYTE PTR [edi-0x39],bl
  411c41:	adc    dl,BYTE PTR [ebp-0x66b12a1e]
  411c47:	sub    eax,0xd4a88a1d
  411c4c:	aas    
  411c4d:	in     al,0xb8
  411c4f:	iret   
  411c50:	lods   eax,DWORD PTR ds:[esi]
  411c51:	stos   DWORD PTR es:[edi],eax
  411c52:	fwait
  411c53:	and    ebp,DWORD PTR [edx-0x23c0b3d3]
  411c59:	les    eax,FWORD PTR [ecx-0x5c0d2e2c]
  411c5f:	scas   al,BYTE PTR es:[edi]
  411c60:	ja     0x411c05
  411c62:	loope  0x411c3c
  411c64:	in     eax,dx
  411c65:	xor    ecx,ebp
  411c67:	fwait
  411c68:	outs   dx,DWORD PTR ds:[esi]
  411c69:	jle    0x411c22
  411c6b:	sbb    DWORD PTR [eax],esi
  411c6d:	push   es
  411c6e:	jge    0x411c48
  411c70:	shl    BYTE PTR [eax-0x11620680],cl
  411c76:	add    BYTE PTR [edx-0x1238f9f0],dl
  411c7c:	retf   0xc688
  411c7f:	data16 fbld TBYTE PTR [edi+0x7deb9065]
  411c86:	(bad)  
  411c87:	jecxz  0x411c40
  411c89:	mov    WORD PTR [eax-0x1049d556],cs
  411c8f:	cmp    esp,DWORD PTR [edx-0x19]
  411c92:	mov    ebp,0x2b15975d
  411c97:	lds    eax,FWORD PTR [edx+0x32814f9c]
  411c9d:	mov    DWORD PTR [ecx-0x4c],ebx
  411ca0:	or     al,0x8
  411ca2:	(bad)  
  411ca3:	sti    
  411ca4:	sbb    BYTE PTR [esi+0x30],ah
  411ca7:	ret    0x6cc1
  411caa:	jb     0x411d0c
  411cac:	fidiv  DWORD PTR [esi]
  411cae:	addr16 mov dh,0x89
  411cb1:	adc    bl,BYTE PTR [ebx+esi*2-0x1a1235a5]
  411cb8:	jmp    0xf0b97d4a
  411cbd:	jp     0x411cad
  411cbf:	call   0xbbc5:0xc32759cd
  411cc6:	out    0xbe,eax
  411cc8:	sbb    DWORD PTR [edx+0x19],edi
  411ccb:	mov    ds:0x5ab95761,eax
  411cd0:	data16 stos BYTE PTR es:[edi],al
  411cd2:	(bad)  
  411cd3:	iret   
  411cd4:	shr    BYTE PTR [eax-0x40],cl
  411cd7:	add    dh,BYTE PTR [ebx]
  411cd9:	push   0xffffff96
  411cdb:	ficom  WORD PTR [ecx]
  411cdd:	jg     0x411ca3
  411cdf:	dec    esi
  411ce0:	mov    WORD PTR [ecx+eiz*8+0x99766b3],ss
  411ce7:	jns    0x411d15
  411ce9:	mov    edx,0xe3901a9b
  411cee:	push   ebx
  411cef:	je     0x411c88
  411cf1:	cmp    al,0x5e
  411cf3:	lods   eax,DWORD PTR ds:[esi]
  411cf4:	outs   dx,DWORD PTR ds:[esi]
  411cf5:	cli    
  411cf6:	pop    edi
  411cf7:	mov    BYTE PTR [si-0x20c7],bl
  411cfc:	jg     0x411cd0
  411cfe:	lock pop eax
  411d00:	jmp    0xd6ca:0xb26ebe7b
  411d07:	enter  0x88fa,0x85
  411d0b:	scas   al,BYTE PTR es:[edi]
  411d0c:	or     eax,0x9ccc60ff
  411d11:	or     esp,DWORD PTR [edx+edi*4]
  411d14:	jmp    0x9cd2eff7
  411d19:	add    BYTE PTR ds:0x41b04fb6,bh
  411d1f:	pop    esp
  411d20:	test   dh,cl
  411d22:	scas   al,BYTE PTR es:[edi]
  411d23:	(bad)  
  411d24:	pop    esi
  411d25:	or     al,0x57
  411d27:	mov    eax,ds:0xcf04b74a
  411d2c:	scas   eax,DWORD PTR es:[edi]
  411d2d:	add    BYTE PTR [esi+ecx*2+0x1a],0x68
  411d32:	in     al,0x31
  411d34:	retf   0x9b65
  411d37:	adc    eax,0xd5acc749
  411d3c:	adc    eax,0x348267f8
  411d41:	ins    DWORD PTR es:[edi],dx
  411d42:	loopne 0x411d93
  411d44:	cld    
  411d45:	div    DWORD PTR [esi+esi*1-0x6e8e2a4a]
  411d4c:	aas    
  411d4d:	lods   eax,DWORD PTR ds:[esi]
  411d4e:	ret    
  411d4f:	lock xor DWORD PTR [eax+0x60],esp
  411d53:	clc    
  411d54:	xchg   ebp,eax
  411d55:	mov    DWORD PTR [edi-0x3],esi
  411d58:	sub    eax,0xd8cb796b
  411d5d:	es out 0xb5,al
  411d60:	add    dl,BYTE PTR [esi]
  411d62:	cld    
  411d63:	xchg   esi,eax
  411d64:	scas   al,BYTE PTR es:[edi]
  411d65:	rol    edx,0x10
  411d68:	(bad)  
  411d69:	sbb    eax,0xb464e92a
  411d6e:	fnsave [eax]
  411d70:	int3   
  411d71:	int    0xb1
  411d73:	cmp    eax,0x714a562d
  411d78:	xchg   ebp,eax
  411d79:	cmp    DWORD PTR [edi],eax
  411d7b:	popa   
  411d7c:	adc    BYTE PTR [edx],ah
  411d7e:	inc    eax
  411d7f:	outs   dx,BYTE PTR ds:[esi]
  411d80:	aas    
  411d81:	nop
  411d82:	sbb    eax,0x831181aa
  411d87:	outs   dx,DWORD PTR ds:[esi]
  411d88:	xchg   esp,eax
  411d89:	pop    ecx
  411d8a:	lods   al,BYTE PTR ds:[esi]
  411d8b:	jp     0x411d4c
  411d8d:	jns    0x411dda
  411d8f:	inc    edi
  411d90:	adc    dh,BYTE PTR [esi]
  411d92:	fild   QWORD PTR [ebp-0x47]
  411d95:	push   0x33
  411d97:	cmp    esi,esi
  411d99:	cld    
  411d9a:	ss jle 0x411de1
  411d9d:	pop    eax
  411d9e:	in     al,dx
  411d9f:	hlt    
  411da0:	ja     0x411dd6
  411da2:	xlat   BYTE PTR ds:[ebx]
  411da3:	jmp    0x411d6a
  411da5:	add    BYTE PTR [esi],0x53
  411da8:	xor    esi,DWORD PTR [esi+0x602be14f]
  411dae:	(bad)  
  411daf:	mov    dh,0x74
  411db1:	pop    ebp
  411db2:	pushf  
  411db3:	push   0xfbb1e291
  411db8:	or     ch,BYTE PTR [edi]
  411dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dbb:	sbb    eax,0x7dd315bd
  411dc0:	pop    es
  411dc1:	adc    BYTE PTR [ecx],cl
  411dc3:	cmp    esi,DWORD PTR ds:0xe88151a4
  411dc9:	jp     0x411e3b
  411dcb:	cmc    
  411dcc:	js     0x411dcc
  411dce:	lds    ecx,FWORD PTR [ecx]
  411dd0:	mov    ecx,0x92199b99
  411dd5:	inc    ebp
  411dd6:	xchg   esi,eax
  411dd7:	and    esp,DWORD PTR [ebx]
  411dd9:	sub    BYTE PTR [ecx+0x37],ch
  411ddc:	cmp    cl,BYTE PTR [ebp+0x5a]
  411ddf:	fidiv  WORD PTR [edx]
  411de1:	call   0x7753:0xd7ab954a
  411de8:	mov    ebx,0x4b1897
  411ded:	outs   dx,DWORD PTR ds:[esi]
  411dee:	mov    esi,0xfcdbce77
  411df3:	aad    0xb6
  411df5:	popf   
  411df6:	icebp  
  411df7:	sub    eax,0xf6e41d2e
  411dfc:	stos   DWORD PTR es:[edi],eax
  411dfd:	sub    edi,esp
  411dff:	test   BYTE PTR [ecx-0x79066ab5],bl
  411e05:	push   ss
  411e06:	fwait
  411e07:	neg    BYTE PTR [edi]
  411e09:	jmp    0x135f:0x47b6da54
  411e10:	jmp    0xcc96675e
  411e15:	inc    ecx
  411e16:	jae    0x411e83
  411e18:	push   ds
  411e19:	push   edx
  411e1a:	push   ds
  411e1b:	(bad)  [edi+0x24]
  411e1e:	add    BYTE PTR [esi+0x1b2584a9],ah
  411e24:	add    eax,0xb6834a42
  411e29:	loop   0x411e41
  411e2b:	shr    DWORD PTR [ecx+0x1d150902],1
  411e31:	shl    DWORD PTR [eax-0x12],0xec
  411e35:	mov    cl,0x6
  411e37:	stos   DWORD PTR es:[edi],eax
  411e38:	daa    
  411e39:	mov    BYTE PTR [esp+esi*2+0x58],ch
  411e3d:	int    0x1e
  411e3f:	sar    BYTE PTR [edx+ebp*4+0x711452f0],cl
  411e46:	xchg   edi,eax
  411e47:	cmp    DWORD PTR ds:0x5b18e41,edx
  411e4d:	jecxz  0x411e5e
  411e4f:	dec    ecx
  411e50:	sub    esp,edx
  411e52:	loope  0x411e10
  411e54:	int3   
  411e55:	not    dl
  411e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e58:	xchg   edi,eax
  411e59:	xor    al,0x9c
  411e5b:	cmp    esi,DWORD PTR [eax]
  411e5d:	ret    
  411e5e:	adc    BYTE PTR [ecx+0x7aca6aad],bl
  411e64:	jb     0x411ea7
  411e66:	push   ds
  411e67:	pop    esi
  411e68:	daa    
  411e69:	ins    BYTE PTR es:[edi],dx
  411e6a:	scas   eax,DWORD PTR es:[edi]
  411e6b:	xlat   BYTE PTR ds:[ebx]
  411e6c:	xchg   esi,eax
  411e6d:	aaa    
  411e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e6f:	icebp  
  411e70:	push   es
  411e71:	push   es
  411e72:	icebp  
  411e73:	shl    cl,1
  411e75:	ret    
  411e76:	fcomi  st,st(5)
  411e78:	enter  0x4438,0xfa
  411e7c:	cwde   
  411e7d:	imul   edi,DWORD PTR [ebx],0xf68c9dd
  411e83:	pop    esp
  411e84:	enter  0x1785,0x54
  411e88:	or     edi,DWORD PTR [edi]
  411e8a:	in     al,dx
  411e8b:	(bad)  
  411e8c:	lahf   
  411e8d:	xchg   edx,eax
  411e8e:	int    0x36
  411e90:	mov    BYTE PTR [eax-0x4d],ch
  411e93:	sub    esi,edx
  411e95:	fmul   QWORD PTR [ebx]
  411e97:	js     0x411eb8
  411e99:	or     ecx,DWORD PTR [edi-0x70]
  411e9c:	in     al,0x1d
  411e9e:	or     ebx,DWORD PTR [eax+0x63]
  411ea1:	xor    BYTE PTR [eax],cl
  411ea3:	cwde   
  411ea4:	xlat   BYTE PTR ds:[ebx]
  411ea5:	pop    esp
  411ea6:	retf   0x8f63
  411ea9:	cmp    DWORD PTR [esi],ecx
  411eab:	sub    BYTE PTR [ecx+0xac82e34],ah
  411eb1:	jle    0x411eb6
  411eb3:	test   eax,0x3ebeac97
  411eb8:	add    DWORD PTR [ecx-0x6e],ebx
  411ebb:	adc    bl,BYTE PTR [edx]
  411ebd:	and    esp,DWORD PTR [ebx-0x70ff10f7]
  411ec3:	sub    BYTE PTR [ebp-0x5a],dh
  411ec6:	and    BYTE PTR [ebx-0x72],bl
  411ec9:	std    
  411eca:	cmp    al,0xa7
  411ecc:	idiv   BYTE PTR [eax+ebx*1]
  411ecf:	mov    ah,0x1
  411ed1:	pop    esi
  411ed2:	adc    eax,0x45237737
  411ed7:	xor    eax,0xc3ea6277
  411edc:	fidivr WORD PTR [ebp+0x45]
  411edf:	mov    eax,0x4aecd149
  411ee4:	in     eax,dx
  411ee5:	jnp    0x411ea5
  411ee7:	js     0x411f16
  411ee9:	jno    0x411ec8
  411eeb:	sbb    ebx,DWORD PTR ds:0xf537a246
  411ef1:	or     DWORD PTR [edi],ebx
  411ef3:	cmp    eax,0xd96b8afc
  411ef8:	xchg   ecx,eax
  411ef9:	data16 lods al,BYTE PTR cs:[esi]
  411efc:	outs   dx,BYTE PTR ds:[esi]
  411efd:	loop   0x411ed1
  411eff:	dec    esp
  411f00:	rcl    DWORD PTR [ebp-0xd],0x99
  411f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f05:	inc    edx
  411f06:	mov    ebx,0x451bbbfe
  411f0b:	or     ebx,esi
  411f0d:	inc    ebx
  411f0e:	jmp    0xbe8b9990
  411f13:	mov    dl,0x72
  411f15:	enter  0x529e,0x31
  411f19:	clc    
  411f1a:	mov    eax,0x3a527b3
  411f1f:	mov    esp,0x22f5faa1
  411f24:	mov    ebp,0x59fc0
  411f29:	pop    ds
  411f2a:	retf   
  411f2b:	adc    al,0xb5
  411f2d:	faddp  st(7),st
  411f2f:	pop    ebx
  411f30:	bound  esi,QWORD PTR [edi]
  411f32:	or     eax,DWORD PTR [eax-0xc]
  411f35:	jge    0x411f7e
  411f37:	test   DWORD PTR [esi],ecx
  411f39:	call   0x3b5e1e32
  411f3e:	pop    ebp
  411f3f:	rcr    BYTE PTR [ebx+0x4fbbe759],cl
  411f45:	sub    eax,0xf2d4e3b4
  411f4a:	inc    esi
  411f4b:	lods   ax,WORD PTR ds:[esi]
  411f4d:	ja     0x411f80
  411f4f:	mov    ds:0xa91cd811,eax
  411f54:	sub    edx,0x20
  411f57:	push   ds
  411f58:	popf   
  411f59:	shl    BYTE PTR [ecx-0x2a],cl
  411f5c:	adc    BYTE PTR gs:[ecx-0x52],cl
  411f60:	xchg   ebx,eax
  411f61:	inc    ecx
  411f62:	loop   0x411f1d
  411f64:	test   BYTE PTR [esp+edi*2+0x7db75d9f],al
  411f6b:	inc    ebx
  411f6c:	xchg   esi,eax
  411f6d:	in     eax,0x48
  411f6f:	std    
  411f70:	or     DWORD PTR [ecx+eax*4-0x37ad77c],edi
  411f77:	call   0xfb2178d5
  411f7c:	fadd   QWORD PTR [ebp+eax*4+0x2f]
  411f80:	adc    BYTE PTR ds:0x41a1aea8,bl
  411f86:	cmp    DWORD PTR [esp+edx*1],0x6a
  411f8a:	ins    BYTE PTR es:[edi],dx
  411f8b:	inc    ebp
  411f8c:	adc    eax,0xf325a3b9
  411f91:	icebp  
  411f92:	sub    ecx,edi
  411f94:	les    edx,FWORD PTR [eax-0x10]
  411f97:	aam    0x4b
  411f99:	std    
  411f9a:	(bad)  
  411f9c:	out    0xb,al
  411f9e:	or     bl,BYTE PTR [eax]
  411fa0:	mov    ch,0xfa
  411fa2:	imul   esp,DWORD PTR [esi],0x3
  411fa5:	adc    ecx,esp
  411fa7:	ins    DWORD PTR es:[edi],dx
  411fa8:	or     eax,0xc504ea6e
  411fad:	sub    eax,0x40772ea
  411fb2:	add    esi,DWORD PTR [edx+0x71]
  411fb5:	mov    bh,0x10
  411fb7:	mov    eax,ds:0xc15b8e1d
  411fbc:	xchg   edx,eax
  411fbd:	lods   al,BYTE PTR ds:[esi]
  411fbe:	cmp    eax,0x7d5636af
  411fc3:	fistp  QWORD PTR [ebx+eiz*1+0x5a]
  411fc7:	mov    ss,ebp
  411fc9:	das    
  411fca:	fwait
  411fcb:	data16 int3 
  411fcd:	mov    ebx,0x6dcc8678
  411fd2:	xor    cl,BYTE PTR [esi]
  411fd4:	add    al,0x31
  411fd6:	mov    ds:0x5e413f9a,al
  411fdb:	mov    ebp,0xc57f6003
  411fe0:	jmp    0xf37e:0xc364c801
  411fe7:	repz test eax,0x791e201
  411fed:	out    0xba,eax
  411fef:	xchg   edi,eax
  411ff0:	push   ss
  411ff1:	ja     0x41201a
  411ff3:	dec    ebx
  411ff4:	lds    esi,FWORD PTR [edx]
  411ff6:	das    
  411ff7:	rcr    DWORD PTR [esi],cl
  411ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffa:	sbb    al,BYTE PTR [esi-0x48]
  411ffd:	mov    WORD PTR [eax+esi*2-0x10],es
  412001:	in     eax,dx
  412002:	sbb    al,0x8f
  412004:	xchg   esi,eax
  412005:	js     0x41207c
  412007:	scas   al,BYTE PTR es:[edi]
  412008:	jns    0x411fc9
  41200a:	lods   al,BYTE PTR ds:[esi]
  41200b:	cmp    al,0xac
  41200d:	fmul   DWORD PTR [edx+0x2bb16a5c]
  412013:	adc    eax,0xaa059692
  412018:	push   ds
  412019:	nop
  41201a:	lahf   
  41201b:	out    0x21,al
  41201d:	adc    BYTE PTR [edi-0x2ed43421],cl
  412023:	xchg   ebx,eax
  412024:	out    0x75,al
  412026:	add    al,0x5c
  412028:	out    dx,eax
  412029:	rcl    DWORD PTR [ebx+0x23],0xed
  41202d:	shl    dh,cl
  41202f:	dec    ecx
  412030:	ret    0x67c
  412033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412034:	push   edi
  412035:	adc    BYTE PTR [ebx+0x24],bl
  412038:	mov    ds,ecx
  41203a:	jmp    0x80a6147
  41203f:	retf   0x3843
  412042:	div    eax
  412044:	fiadd  WORD PTR [edx+0x33]
  412047:	(bad)  
  412048:	xchg   edx,eax
  412049:	jno    0x412033
  41204b:	(bad)  
  41204c:	jmp    0x140f1b0
  412051:	sbb    eax,0x281f7311
  412056:	pop    ebx
  412057:	out    dx,al
  412058:	push   ecx
  412059:	das    
  41205a:	jne    0x41200a
  41205c:	mov    edx,0xae089311
  412061:	xchg   esp,eax
  412062:	out    0x7a,al
  412064:	mov    ds:0xc63e0720,al
  412069:	sub    eax,0x3d172fda
  41206e:	dec    edx
  41206f:	push   edx
  412070:	pop    ebx
  412071:	(bad)  
  412072:	pop    ebp
  412073:	adc    BYTE PTR [ecx+0x25],bl
  412076:	mov    bl,0xe2
  412078:	adc    bl,BYTE PTR [ebx-0x24]
  41207b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207c:	mov    DWORD PTR [eax],edx
  41207e:	xchg   ebx,eax
  41207f:	xchg   esi,eax
  412080:	inc    esi
  412081:	out    dx,al
  412082:	(bad)  [eax+0x3d675940]
  412088:	mov    dl,0x8b
  41208a:	mov    ds:0xaff40ecb,al
  41208f:	mov    ds:0x88c05c54,eax
  412094:	or     BYTE PTR [edx],0x85
  412097:	ror    BYTE PTR ds:0xe0ec391b,0xa5
  41209e:	push   cs
  41209f:	sub    edi,ebp
  4120a1:	push   eax
  4120a2:	pushw  ss
  4120a4:	enter  0x1165,0xd5
  4120a8:	pop    esi
  4120a9:	add    ebx,DWORD PTR [edx]
  4120ab:	lods   eax,DWORD PTR ds:[esi]
  4120ac:	lock adc BYTE PTR [edi-0x7d],ah
  4120b0:	lea    ebp,[esi+0x8]
  4120b3:	lock cmp BYTE PTR [esi+eiz*8-0x5c],0xc7
  4120b9:	inc    ebx
  4120ba:	cmp    BYTE PTR [ebx+edi*1+0x52993724],bh
  4120c1:	mov    al,BYTE PTR [edx+0x1db74ca7]
  4120c7:	inc    esp
  4120c8:	dec    edx
  4120c9:	test   eax,0xdefae32e
  4120ce:	pop    ecx
  4120cf:	push   ds
  4120d0:	loopne 0x41207b
  4120d2:	nop
  4120d3:	push   es
  4120d4:	mov    ds:0xee69d204,al
  4120d9:	jmp    0x11f2:0x9cd10c8c
  4120e0:	imul   eax,DWORD PTR [edi+ecx*8],0xffffffac
  4120e4:	xchg   edi,eax
  4120e5:	mov    ebx,fs
  4120e7:	aam    0xef
  4120e9:	call   0xf0ad:0xd5fc2765
  4120f0:	adc    BYTE PTR [eax-0x7962385d],0xbc
  4120f7:	xchg   ebx,eax
  4120f8:	mov    ss,WORD PTR [eax]
  4120fa:	in     al,0x77
  4120fc:	sbb    ch,BYTE PTR [edi+0x7fabb7f0]
  412102:	push   eax
  412103:	aam    0x3d
  412105:	inc    edi
  412106:	pop    ebp
  412107:	pop    esi
  412108:	inc    ebp
  412109:	mov    ds:0x5e3c8634,al
  41210e:	mov    ch,BYTE PTR [edx]
  412110:	ds mov ch,0x1a
  412113:	cmp    eax,0xd8a71724
  412118:	xor    bl,BYTE PTR [eax+0x6b192edb]
  41211e:	cld    
  41211f:	lods   eax,DWORD PTR ds:[esi]
  412120:	lahf   
  412121:	pop    ebx
  412122:	inc    edx
  412123:	jmp    0x2ae11ef7
  412128:	mov    ch,BYTE PTR [esp+edx*2-0x7e]
  41212c:	js     0x412119
  41212e:	and    esi,DWORD PTR [ebx]
  412130:	mov    ds:0x468de24,al
  412135:	(bad)  
  412136:	jne    0x412155
  412138:	adc    eax,0x3c17ac89
  41213d:	xor    eax,0x38c8e9fb
  412142:	xor    esi,esp
  412144:	rcr    BYTE PTR [edx-0x74],1
  412147:	dec    ecx
  412148:	jbe    0x412172
  41214a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41214b:	xchg   ecx,eax
  41214c:	mov    edi,0x92454cb4
  412151:	ss mov dh,0x70
  412154:	shl    ch,cl
  412156:	mov    ah,BYTE PTR [esi+0x1a]
  412159:	lock inc ebp
  41215b:	fcmovnbe st,st(0)
  41215d:	push   ebx
  41215e:	inc    esp
  41215f:	fwait
  412160:	into   
  412161:	stos   BYTE PTR es:[edi],al
  412162:	clc    
  412163:	shr    DWORD PTR [di-0x1355],0x75
  412169:	in     al,dx
  41216a:	call   0xb9cea0a6
  41216f:	popa   
  412170:	jmp    0xe045:0xcce888ee
  412177:	sub    eax,DWORD PTR [esi+0x45]
  41217a:	xor    eax,0x9bc22329
  41217f:	push   ebx
  412180:	cmp    dl,BYTE PTR [ebx-0xd]
  412183:	sysret 
  412185:	stos   DWORD PTR es:[edi],eax
  412186:	repz and eax,0x989e834b
  41218c:	fldenv [ebx]
  41218e:	rol    BYTE PTR [edi],cl
  412190:	ret    0x1c6
  412193:	ficomp DWORD PTR [ecx+0xf]
  412196:	loop   0x4121ac
  412198:	mov    dl,0xc3
  41219a:	pusha  
  41219b:	loope  0x412176
  41219d:	adc    DWORD PTR ds:0x6c77549f,eax
  4121a3:	not    BYTE PTR [esi+0x66b6f347]
  4121a9:	retf   0xdeae
  4121ac:	lods   al,BYTE PTR ds:[esi]
  4121ad:	push   esp
  4121ae:	fild   DWORD PTR [edx+0x61]
  4121b1:	or     eax,DWORD PTR [edi+eax*4-0x19]
  4121b5:	fcom   DWORD PTR [edx]
  4121b7:	ds (bad) 
  4121b9:	dec    ecx
  4121ba:	mov    DWORD PTR [edx+ebp*1-0x31ac4e79],ecx
  4121c1:	pop    ebx
  4121c2:	push   eax
  4121c3:	push   0xffffff94
  4121c5:	and    BYTE PTR [edx-0x56],0x6e
  4121c9:	(bad)  
  4121ca:	push   ebp
  4121cb:	xor    ch,BYTE PTR [esp+ebx*8+0x21]
  4121cf:	inc    edi
  4121d0:	sar    ebx,0x1a
  4121d3:	xchg   ebx,eax
  4121d4:	test   eax,0x73d40ec5
  4121d9:	ins    BYTE PTR es:[edi],dx
  4121da:	cmp    bl,BYTE PTR [edi]
  4121dc:	dec    ebx
  4121dd:	int3   
  4121de:	es pushf 
  4121e0:	dec    BYTE PTR [ebx+0x63]
  4121e3:	loopne 0x4121b5
  4121e5:	das    
  4121e6:	and    al,0xe3
  4121e8:	iret   
  4121e9:	ss cmc 
  4121eb:	test   eax,0xc9ae3662
  4121f0:	jp     0x4121ac
  4121f2:	aam    0x72
  4121f4:	push   cs
  4121f5:	xor    al,0x42
  4121f7:	mov    DWORD PTR [edi+edx*8],0x9df5d7f
  4121fe:	push   ebx
  4121ff:	add    DWORD PTR [ebx-0x3eb345ca],0xc26986cd
  412209:	icebp  
  41220a:	scas   eax,DWORD PTR es:[edi]
  41220b:	scas   eax,DWORD PTR es:[edi]
  41220c:	int3   
  41220d:	call   0xdb4032fc
  412212:	retf   
  412213:	mov    bh,0xcc
  412215:	add    eax,0xdf44ae1e
  41221a:	push   0xffffffbd
  41221c:	cmp    dl,0xfe
  41221f:	test   BYTE PTR [edi+0x78c31c47],bh
  412225:	cmp    esi,ebp
  412227:	xchg   esp,eax
  412228:	fs aad 0xe3
  41222b:	mov    esi,0x4d041b36
  412230:	mov    ss,WORD PTR [esi-0x5f]
  412233:	cmp    dl,BYTE PTR [ebx-0x26]
  412236:	outs   dx,DWORD PTR ds:[esi]
  412237:	popf   
  412238:	lds    ecx,FWORD PTR [ecx+0x31]
  41223b:	cmp    ebp,DWORD PTR [ecx+0x32d146b4]
  412241:	test   BYTE PTR fs:[edx+0x3a],bh
  412245:	jl     0x4121d9
  412247:	sub    BYTE PTR [ebp-0x63780387],bh
  41224d:	retf   0x70ff
  412250:	xor    bl,BYTE PTR [ecx]
  412252:	pop    ebx
  412253:	jl     0x412239
  412255:	mov    edx,0x543bec4c
  41225a:	int3   
  41225b:	or     dl,BYTE PTR [eax+0x38777d60]
  412261:	das    
  412262:	adc    DWORD PTR [edi+0x53],esp
  412265:	ins    BYTE PTR es:[edi],dx
  412266:	xchg   DWORD PTR [edi],eax
  412268:	mov    DWORD PTR ds:0xa004f62e,0xf05300ee
  412272:	inc    eax
  412273:	scas   al,BYTE PTR es:[edi]
  412274:	xchg   ebx,eax
  412275:	adc    BYTE PTR [edx],0xe3
  412278:	add    esp,edi
  41227a:	clc    
  41227b:	gs mov esi,0xae644b4
  412281:	mov    ch,0xa8
  412283:	adc    ebx,esi
  412285:	dec    BYTE PTR [ecx+0x3]
  412288:	xchg   ebp,eax
  412289:	mov    dh,0xf3
  41228b:	inc    esi
  41228c:	lods   al,BYTE PTR ds:[esi]
  41228d:	clc    
  41228e:	or     edi,edx
  412290:	pop    es
  412291:	xchg   esi,eax
  412292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412293:	jns    0x4122dc
  412295:	aam    0xd6
  412297:	jl     0x4122e3
  412299:	mov    cl,0x8f
  41229b:	add    dh,BYTE PTR [ebx+0x53c6000e]
  4122a1:	jmp    0x9f847102
  4122a6:	pop    ebx
  4122a7:	add    al,0x48
  4122a9:	sub    al,0x3a
  4122ab:	iret   
  4122ac:	bound  eax,QWORD PTR [eax+0x7e46feec]
  4122b2:	mov    edi,0x6017f737
  4122b7:	dec    edi
  4122b8:	add    al,0x8f
  4122ba:	inc    eax
  4122bb:	rol    ebp,cl
  4122bd:	cmc    
  4122be:	popa   
  4122bf:	push   cs
  4122c0:	push   0xffffffdf
  4122c2:	push   eax
  4122c3:	jmp    0x41228e
  4122c5:	inc    edi
  4122c6:	call   0xb054:0xd4730a7
  4122cd:	rcl    DWORD PTR fs:[ebx-0x49d49111],1
  4122d4:	rcl    DWORD PTR [ebp+0x5bdec40a],cl
  4122da:	mov    edx,0x1cb3d77
  4122df:	xor    DWORD PTR [ebp+0x68b259a9],ebx
  4122e5:	inc    esp
  4122e6:	ficom  WORD PTR [edi]
  4122e8:	ins    DWORD PTR es:[edi],dx
  4122e9:	leave  
  4122ea:	push   ebp
  4122eb:	out    0xbc,al
  4122ed:	inc    ecx
  4122ee:	mov    WORD PTR [edi],gs
  4122f0:	mov    ebp,0x2616b08a
  4122f5:	aam    0x15
  4122f7:	in     al,0xe9
  4122f9:	xchg   esi,eax
  4122fa:	adc    DWORD PTR ds:0x2a12c74d,ebx
  412300:	dec    edx
  412301:	mov    ch,BYTE PTR [eax]
  412303:	cmp    ebp,DWORD PTR [ecx]
  412305:	add    ebx,DWORD PTR [ebx]
  412307:	rcl    DWORD PTR [edx+0x13],0x86
  41230b:	repnz test eax,0xa7acd018
  412311:	pop    es
  412312:	mov    bh,0x22
  412314:	out    dx,al
  412315:	(bad)  
  412316:	not    BYTE PTR [eax+ebx*4]
  412319:	es popf 
  41231b:	cmp    al,0x64
  41231d:	aam    0x6c
  41231f:	(bad)  
  412320:	out    0x97,al
  412322:	frstor [ebp-0x23]
  412325:	outs   dx,DWORD PTR ds:[esi]
  412326:	mov    eax,ds:0x1d4b7b5
  41232b:	int    0x10
  41232d:	cmp    bl,BYTE PTR [ebp+0x5c]
  412330:	out    dx,eax
  412331:	cwde   
  412332:	gs test eax,0x9968106
  412338:	xor    ch,cl
  41233a:	mov    bh,0x49
  41233c:	sub    DWORD PTR [edi-0x71],0x8feea368
  412343:	mov    edx,0xb8a0b078
  412348:	jmp    0x4123a0
  41234a:	mov    dl,BYTE PTR [eax-0x4faac60b]
  412350:	je     0x4122df
  412352:	lahf   
  412353:	sub    BYTE PTR ss:[ebp-0x57ebb324],0xb5
  41235b:	fnstcw WORD PTR [ebx-0x508cbae8]
  412361:	ins    BYTE PTR es:[edi],dx
  412362:	test   al,0xec
  412364:	es cld 
  412366:	adc    al,BYTE PTR [ecx-0x53a274d]
  41236c:	xchg   DWORD PTR [ebx+edi*4],ebx
  41236f:	rcl    dl,cl
  412371:	mov    WORD PTR [ebx-0x76],fs
  412374:	cmp    ah,bl
  412376:	jge    0x412328
  412378:	jle    0x41237c
  41237a:	retf   0xcbbb
  41237d:	or     eax,0x98d314ac
  412382:	sub    bl,BYTE PTR [ebx+ebx*1]
  412385:	xchg   ecx,eax
  412386:	push   esp
  412387:	or     DWORD PTR [eax-0x49],0x48
  41238b:	jmp    0xf1fd47cb
  412390:	inc    eax
  412391:	inc    esi
  412392:	aam    0x4e
  412394:	fimul  WORD PTR [eax+ebx*8+0x14f04bc7]
  41239b:	(bad)  
  41239d:	and    ebp,DWORD PTR [ebx+0x7]
  4123a0:	inc    ebx
  4123a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a2:	adc    eax,0xecb9b575
  4123a7:	xor    al,0x1b
  4123a9:	clc    
  4123aa:	jb     0x412389
  4123ac:	in     eax,0x9b
  4123ae:	inc    esp
  4123af:	mov    al,0x27
  4123b1:	xchg   bl,dl
  4123b3:	push   esp
  4123b4:	arpl   WORD PTR [ebx],cx
  4123b6:	and    al,0xc6
  4123b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b9:	mov    ds:0x826d44ed,al
  4123be:	dec    esi
  4123bf:	aam    0xc5
  4123c1:	mov    al,0xb9
  4123c3:	sti    
  4123c4:	test   al,0x6e
  4123c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c7:	fadd   DWORD PTR [ebx-0xe]
  4123ca:	fsubrp st(1),st
  4123cc:	sub    DWORD PTR fs:[ebp+0x190f2374],edx
  4123d3:	xchg   ebp,eax
  4123d4:	pop    ecx
  4123d5:	mov    al,ds:0x7bfb510c
  4123da:	add    ch,cl
  4123dc:	das    
  4123dd:	push   cs
  4123de:	jnp    0x412362
  4123e0:	test   DWORD PTR [edx+0x63033332],eax
  4123e6:	(bad)  
  4123e7:	adc    ebx,DWORD PTR [ebx-0x1e]
  4123ea:	sbb    ch,BYTE PTR [esi+0x6948c2e3]
  4123f0:	lock fucomip st,st(5)
  4123f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f4:	lahf   
  4123f5:	add    al,0x1
  4123f7:	or     DWORD PTR [eax],edi
  4123f9:	add    eax,0x5d466b22
  4123fe:	sbb    esp,DWORD PTR [edx+0x2c5a70d0]
  412404:	int3   
  412405:	scas   eax,DWORD PTR es:[edi]
  412406:	sbb    BYTE PTR [ebp-0x49],bh
  412409:	dec    ebx
  41240a:	push   ecx
  41240b:	or     DWORD PTR [eax+ebx*1+0x1593c041],ecx
  412412:	les    ebp,FWORD PTR gs:[ecx]
  412415:	adc    al,0xb6
  412417:	sbb    eax,0x24df3562
  41241c:	nop
  41241d:	mov    al,0xf5
  41241f:	push   esi
  412420:	dec    ecx
  412421:	fdiv   DWORD PTR [edx-0x4d]
  412424:	sbb    BYTE PTR [eax+0x6c],ah
  412427:	mov    esp,0x50eefd40
  41242c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242d:	call   0x8079:0x17adefb3
  412434:	mul    DWORD PTR [eax+esi*8-0x7206f64c]
  41243b:	jmp    0x1383278b
  412440:	ja     0x412463
  412442:	xchg   esi,eax
  412443:	mov    al,0x50
  412445:	lds    eax,FWORD PTR [eax-0x57b3126e]
  41244b:	push   esi
  41244c:	mov    cl,0x56
  41244e:	loop   0x412447
  412450:	out    0x96,eax
  412452:	rcl    BYTE PTR [ecx-0x56],cl
  412455:	fisub  WORD PTR [edi-0x1cd0e8e1]
  41245b:	popf   
  41245c:	sar    BYTE PTR [edi-0x54c5bfee],cl
  412462:	ja     0x41247c
  412464:	jge    0x412438
  412466:	push   ss
  412467:	or     eax,0xfb47f9a
  41246c:	jle    0x41241f
  41246e:	cmc    
  41246f:	lock mov es,WORD PTR [ebx]
  412472:	(bad)  [ebp-0x70618fa0]
  412478:	push   esp
  412479:	cmp    DWORD PTR [ecx+0x3c],edx
  41247c:	sub    BYTE PTR [edx+0x10],bl
  41247f:	mov    eax,0x84022a14
  412484:	jg     0x412417
  412486:	sbb    BYTE PTR [edi-0x6576147e],al
  41248c:	pop    esp
  41248d:	jecxz  0x412478
  41248f:	xor    ch,bh
  412491:	mov    eax,0x63d8fc1f
  412496:	jns    0x41243c
  412498:	mov    eax,0x7600e5b1
  41249d:	push   0xc65070f6
  4124a2:	mov    dl,0x6c
  4124a4:	test   eax,0xa7296983
  4124a9:	cld    
  4124aa:	mov    bh,0xd7
  4124ac:	mov    al,ds:0x549520d2
  4124b1:	lods   eax,DWORD PTR ds:[esi]
  4124b2:	mov    cs,WORD PTR [ebp-0x40]
  4124b5:	lock mov ebp,0xa07568b5
  4124bb:	add    ebx,esp
  4124bd:	push   ds
  4124be:	push   dx
  4124c0:	mov    edi,0x825b8c3e
  4124c5:	adc    al,0xe3
  4124c7:	mov    DWORD PTR [edi+0x5307f9e5],0xee1ad271
  4124d1:	inc    edx
  4124d2:	fisubr DWORD PTR [eax+0x4e657233]
  4124d8:	add    BYTE PTR [edx-0x69],0x2b
  4124dc:	cli    
  4124dd:	jnp    0x4124a3
  4124df:	inc    eax
  4124e0:	test   esi,eax
  4124e2:	push   esi
  4124e3:	mov    ds:0xac7afd2b,al
  4124e8:	dec    esi
  4124e9:	sub    edi,DWORD PTR [esi-0x18]
  4124ec:	or     dl,dl
  4124ee:	or     edi,DWORD PTR [eax-0x7b6c5334]
  4124f4:	in     eax,dx
  4124f5:	pop    eax
  4124f6:	cmp    dl,BYTE PTR [eax-0x65]
  4124f9:	sti    
  4124fa:	shr    cl,0x5c
  4124fd:	mov    ds:0x6d9fe9b8,eax
  412502:	push   edi
  412503:	fst    QWORD PTR [esp+edx*1-0x7d]
  412507:	pop    edx
  412508:	cwde   
  412509:	and    edx,eax
  41250b:	mov    eax,0x6befdf92
  412510:	push   ebp
  412511:	xor    ebx,DWORD PTR [edx-0x55]
  412514:	out    0xec,al
  412516:	pop    esi
  412517:	pop    ds
  412518:	je     0x412591
  41251a:	inc    edi
  41251b:	inc    edi
  41251c:	mov    eax,ds:0xf667808e
  412521:	pop    eax
  412522:	and    ah,bh
  412524:	jg     0x4124a6
  412526:	or     edi,ebp
  412528:	or     DWORD PTR [edx+0x3200c84e],ebx
  41252e:	in     eax,dx
  41252f:	xchg   edx,eax
  412530:	arpl   WORD PTR [edx+ebx*8+0x69b4e2b1],si
  412537:	and    BYTE PTR [ecx],0x41
  41253a:	fwait
  41253b:	sbb    DWORD PTR [ebx],eax
  41253d:	test   DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi+0x4a],ch
  412542:	out    dx,eax
  412543:	mov    ebp,DWORD PTR [ebp+0x72]
  412546:	cmp    eax,0xe7f3f8f2
  41254b:	sar    BYTE PTR [ecx],1
  41254d:	mov    dh,0x83
  41254f:	inc    eax
  412550:	add    eax,0x21030c54
  412555:	mov    ch,BYTE PTR [eax-0x1f246aa9]
  41255b:	sub    al,0x46
  41255d:	push   ecx
  41255e:	inc    esp
  41255f:	pop    ecx
  412560:	(bad)  
  412561:	into   
  412562:	mov    WORD PTR [edi],es
  412564:	mov    bl,cl
  412566:	cmp    ch,BYTE PTR [ebx]
  412568:	mov    ecx,edx
  41256a:	cli    
  41256b:	pop    ecx
  41256c:	pusha  
  41256d:	jmp    0x8f1097b7
  412572:	call   DWORD PTR [eax]
  412574:	stos   DWORD PTR es:[edi],eax
  412575:	xchg   esp,eax
  412576:	test   al,0x73
  412578:	mov    ebx,0x1c3b25af
  41257d:	sub    DWORD PTR [ecx+0x3ce41a6b],0x7d
  412584:	and    ebx,esi
  412586:	sub    ebp,DWORD PTR [edx]
  412588:	pop    edi
  412589:	pop    ebp
  41258a:	push   ecx
  41258b:	pop    esi
  41258c:	lods   al,BYTE PTR ds:[esi]
  41258d:	pop    ebx
  41258e:	jle    0x4125a0
  412590:	push   edx
  412591:	pop    ebp
  412592:	inc    eax
  412593:	shl    DWORD PTR [eax+0x7f269c20],0x24
  41259a:	dec    eax
  41259b:	cwde   
  41259c:	fs int3 
  41259e:	out    dx,eax
  41259f:	cld    
  4125a0:	push   ds
  4125a1:	xor    dl,BYTE PTR [ecx]
  4125a3:	ins    BYTE PTR es:[edi],dx
  4125a4:	jno    0x412595
  4125a6:	mov    edx,esp
  4125a8:	(bad)  
  4125a9:	hlt    
  4125aa:	dec    edx
  4125ab:	in     al,0xdf
  4125ad:	inc    esp
  4125ae:	cmp    al,BYTE PTR [ecx+0x39]
  4125b1:	nop
  4125b2:	out    dx,al
  4125b3:	std    
  4125b4:	cmp    eax,0xe7beaef3
  4125b9:	je     0x412588
  4125bb:	adc    DWORD PTR [edx+0x27b89ab5],edx
  4125c1:	jbe    0x41257c
  4125c3:	fcmovnb st,st(4)
  4125c5:	or     edi,DWORD PTR [ecx+eiz*8-0x6b6636fc]
  4125cc:	sub    dl,BYTE PTR [edx+0x9f65c65]
  4125d2:	ins    BYTE PTR es:[edi],dx
  4125d3:	repz or BYTE PTR [edx-0x41e6dad2],0x50
  4125db:	push   ebp
  4125dc:	cmp    edx,0x6a
  4125df:	push   0xd
  4125e1:	dec    edx
  4125e2:	dec    esi
  4125e3:	dec    ebp
  4125e4:	mov    ds:0x66ea1d46,eax
  4125e9:	xor    BYTE PTR ds:[edx],al
  4125ec:	mov    eax,ds:0x26bea569
  4125f1:	call   0x5b9c0ed1
  4125f6:	or     eax,0x92613cc5
  4125fb:	(bad)  
  4125fc:	shl    bh,cl
  4125fe:	mov    DWORD PTR [ebx+0x63fa1926],esi
  412604:	mov    bh,0x80
  412606:	inc    ebx
  412607:	test   DWORD PTR [eax-0x181fa39c],esp
  41260d:	xor    DWORD PTR [ebx-0x20bf0f28],esp
  412613:	adc    eax,DWORD PTR cs:[ebp+0x4a]
  412617:	mov    ebx,0x9f3fe872
  41261c:	xchg   edx,eax
  41261d:	inc    edi
  41261e:	cld    
  41261f:	xchg   ebx,eax
  412620:	js     0x4125a2
  412622:	and    al,0xad
  412624:	repz shl BYTE PTR [esi],1
  412627:	jecxz  0x4125c4
  412629:	call   0xdeb5:0xd690401
  412630:	lahf   
  412631:	sbb    ah,BYTE PTR [ebx+0x4ff6b3]
  412637:	inc    edx
  412638:	jmp    0x3266b340
  41263d:	in     al,dx
  41263e:	inc    ebp
  41263f:	mov    ds:0x127b1073,al
  412644:	dec    esi
  412645:	xor    ecx,DWORD PTR [ecx+0x38]
  412648:	call   0x9c6a:0x14e25358
  41264f:	and    DWORD PTR [ecx],ebp
  412651:	into   
  412652:	inc    ebx
  412653:	int3   
  412654:	data16 jge 0x412654
  412657:	into   
  412658:	add    al,0x9f
  41265a:	ins    BYTE PTR es:[edi],dx
  41265b:	inc    edx
  41265c:	fsubp  st(6),st
  41265e:	mov    eax,ds:0xada7db81
  412663:	jnp    0x412606
  412665:	pop    edi
  412666:	hlt    
  412667:	aas    
  412668:	sub    DWORD PTR [edi-0xeddfb85],ebx
  41266e:	xor    cl,BYTE PTR [ebx-0xc]
  412671:	jb     0x4126ac
  412673:	movntq QWORD PTR [edi-0x7f273ac4],mm1
  41267a:	add    BYTE PTR [ecx+0x7cf0ec03],ah
  412680:	in     al,0x3f
  412682:	clc    
  412683:	or     eax,edx
  412685:	cmpxchg DWORD PTR [esi],ecx
  412688:	je     0x412692
  41268a:	add    eax,0xb698c655
  41268f:	in     eax,0xd
  412691:	iret   
  412692:	adc    eax,edx
  412694:	mov    eax,ds:0x497dfc68
  412699:	sub    cx,WORD PTR [eax+0x6f99f6cb]
  4126a0:	adc    eax,0x1e6d531
  4126a5:	xchg   esp,eax
  4126a6:	cmp    eax,DWORD PTR [eax+0x3a027667]
  4126ac:	and    BYTE PTR [esi],ch
  4126ae:	push   ebp
  4126af:	push   0x983120df
  4126b4:	mov    al,0xb2
  4126b6:	xchg   esp,eax
  4126b7:	and    al,0xc2
  4126b9:	pop    ebp
  4126ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126bb:	cs ds ins BYTE PTR es:[edi],dx
  4126be:	repz push 0xd55cace1
  4126c4:	mov    bl,0x8e
  4126c6:	dec    edx
  4126c7:	xchg   bh,ch
  4126c9:	pop    es
  4126ca:	ja     0x4126a9
  4126cc:	loop   0x4126a4
  4126ce:	inc    edx
  4126cf:	pop    eax
  4126d0:	wbinvd 
  4126d2:	xchg   ecx,eax
  4126d3:	and    al,0x25
  4126d5:	std    
  4126d6:	adc    eax,0xa2b9691f
  4126db:	jb     0x4126fe
  4126dd:	div    DWORD PTR [edx]
  4126df:	fdivp  st(5),st
  4126e1:	mov    edi,DWORD PTR [bp+di-0x15]
  4126e5:	or     bl,BYTE PTR [ebp+0x537aac38]
  4126eb:	xchg   ecx,eax
  4126ec:	stos   BYTE PTR es:[edi],al
  4126ed:	test   al,0x54
  4126ef:	xor    esi,DWORD PTR [ecx]
  4126f1:	add    BYTE PTR [ebx-0x793dcdba],bl
  4126f7:	ret    
  4126f8:	pop    ecx
  4126f9:	int3   
  4126fa:	dec    ebp
  4126fb:	xchg   ebp,eax
  4126fc:	pop    ecx
  4126fd:	cmc    
  4126fe:	pop    ecx
  4126ff:	or     ch,BYTE PTR [edx-0x19ccc04e]
  412705:	std    
  412706:	call   0xed3d:0xd4808966
  41270d:	lock mov ebp,0x5e7dfd9b
  412713:	jle    0x4126a0
  412715:	mov    ds:0xcc8f4516,al
  41271a:	inc    edi
  41271b:	cld    
  41271c:	ds fcom st(6)
  41271f:	test   eax,0x9c1b7a72
  412724:	pop    esp
  412725:	add    al,0xdd
  412727:	jbe    0x412794
  412729:	in     eax,0x99
  41272b:	call   0x8f86:0xdc3020c6
  412732:	(bad)  
  412733:	mov    bh,0x4e
  412735:	test   al,0x8b
  412737:	adc    al,0x9
  412739:	adc    al,BYTE PTR [edi-0x214192a2]
  41273f:	mov    edx,0x1afc1b3a
  412744:	test   al,0xa2
  412746:	and    BYTE PTR [edi+0x41],ch
  412749:	push   esi
  41274a:	sahf   
  41274b:	inc    edi
  41274c:	rcr    BYTE PTR [eax],0xfb
  41274f:	jbe    0x412782
  412751:	in     eax,dx
  412752:	retf   0xd3dc
  412755:	pop    edi
  412756:	pop    esi
  412757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412758:	dec    eax
  412759:	outs   dx,BYTE PTR ds:[esi]
  41275a:	imul   ebx,DWORD PTR [edi+esi*1],0xffffffb9
  41275e:	xor    ah,BYTE PTR [ebx-0x4c1fa9a6]
  412764:	loop   0x412729
  412766:	int    0x33
  412768:	mov    DWORD PTR [ebx],0x7ddbac8f
  41276e:	pop    esi
  41276f:	(bad)  
  412771:	(bad)  
  412772:	imul   BYTE PTR [eax+0x750611cd]
  412778:	jp     0x41274a
  41277a:	mov    al,ds:0x9c9e4271
  41277f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412780:	lds    eax,FWORD PTR ds:0xcd31dacf
  412786:	or     al,0xeb
  412788:	lea    esp,[esi]
  41278a:	jo     0x41277e
  41278c:	pop    edi
  41278d:	data16 sub dl,BYTE PTR ds:0xfdf2781b
  412794:	int    0xbb
  412796:	das    
  412797:	out    dx,eax
  412798:	or     ch,BYTE PTR [ebx+esi*8-0x20]
  41279c:	add    ebx,DWORD PTR [ebx+0x7787203d]
  4127a2:	xor    bh,BYTE PTR ds:0x2c3e6dbc
  4127a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a9:	add    ch,cl
  4127ab:	icebp  
  4127ac:	xchg   ebx,eax
  4127ad:	mul    BYTE PTR [ecx]
  4127af:	pop    es
  4127b0:	fld    TBYTE PTR [edx]
  4127b2:	mov    esp,edx
  4127b4:	sbb    eax,0x34f13226
  4127b9:	fwait
  4127ba:	ds out 0x22,eax
  4127bd:	xchg   ebp,eax
  4127be:	je     0x4127ba
  4127c0:	mov    esp,0xbd7bc0a9
  4127c5:	jmp    0x3a89:0xa2ccd652
  4127cc:	fbld   TBYTE PTR [eax+eiz*1+0x25597b60]
  4127d3:	xor    ecx,DWORD PTR [ebx-0x8]
  4127d6:	jbe    0x41284e
  4127d8:	dec    esp
  4127d9:	mov    ecx,0x2aed6898
  4127de:	xchg   ecx,ebp
  4127e0:	dec    esi
  4127e1:	pop    es
  4127e2:	arpl   WORD PTR [ebx],dx
  4127e4:	and    eax,0x6166827c
  4127e9:	stos   DWORD PTR es:[edi],eax
  4127ea:	mov    edx,0x7e4f5194
  4127ef:	call   esi
  4127f1:	addr16 nop
  4127f3:	in     al,0xd3
  4127f5:	mov    cl,0x4e
  4127f7:	enter  0x8a1f,0xf7
  4127fb:	jmp    0xe59f2c51
  412800:	pusha  
  412801:	pop    eax
  412802:	fnstcw WORD PTR [edx]
  412804:	jbe    0x412865
  412806:	ret    
  412807:	sub    esi,ecx
  412809:	push   edi
  41280a:	push   ds
  41280b:	mov    eax,ds:0x262cfef7
  412810:	pop    ss
  412811:	fdivr  DWORD PTR [ebp-0x5b8dae87]
  412817:	fst    QWORD PTR [ecx]
  412819:	cdq    
  41281a:	push   ss
  41281b:	fdivr  DWORD PTR [edx+0xd1df877]
  412821:	cmp    al,BYTE PTR [ebp+0x6ceaed50]
  412827:	adc    al,0x22
  412829:	mov    ch,0x18
  41282b:	push   esp
  41282c:	jp     0x41284b
  41282e:	push   ecx
  41282f:	outs   dx,BYTE PTR ds:[esi]
  412830:	inc    edx
  412831:	mov    esp,0xfc8f77b9
  412836:	retf   
  412837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412838:	(bad)  
  412839:	stc    
  41283a:	adc    dl,BYTE PTR [edx+ebp*1-0x41c83ecd]
  412841:	cmp    eax,0x8c9176ea
  412846:	sbb    al,0xda
  412848:	sbb    DWORD PTR [ecx+0x7ebf8bb3],esp
  41284e:	sub    DWORD PTR [esi+0x32],edx
  412851:	sub    ebp,ecx
  412853:	adc    DWORD PTR [eax-0x78],edx
  412856:	aas    
  412857:	mov    WORD PTR ds:0x17a2f1ef,ss
  41285d:	pop    edi
  41285e:	xchg   ebx,eax
  41285f:	aas    
  412860:	adc    dh,BYTE PTR [ebx]
  412862:	mov    ch,0xd1
  412864:	scas   eax,DWORD PTR es:[edi]
  412865:	push   edx
  412866:	adc    ecx,ebx
  412868:	sti    
  412869:	mov    edx,0xb1005472
  41286e:	push   esi
  41286f:	and    al,0xe7
  412871:	test   BYTE PTR [ecx+0x26],bl
  412874:	imul   esp,DWORD PTR [ebx],0xfb7ae680
  41287a:	pusha  
  41287b:	jp     0x4128b9
  41287d:	mov    ebp,0x466c4ae5
  412882:	xor    BYTE PTR es:[esi+edi*4],ah
  412886:	in     al,0x1
  412888:	test   eax,0x68a71119
  41288d:	mov    bh,0x4c
  41288f:	fstp   st(6)
  412891:	loopne 0x412862
  412893:	dec    ebx
  412894:	dec    edi
  412895:	jecxz  0x412866
  412897:	lock fisubr WORD PTR [ecx+0x678581ed]
  41289e:	cli    
  41289f:	sti    
  4128a0:	sbb    bh,BYTE PTR [edi-0xf]
  4128a3:	fisttp DWORD PTR [ecx-0x6000bb80]
  4128a9:	adc    BYTE PTR [esi+0x6e95fce7],al
  4128af:	push   ss
  4128b0:	mov    dl,0x3b
  4128b2:	mov    ecx,DWORD PTR [eax-0x4b93b3ed]
  4128b8:	add    eax,0xf1eaef42
  4128bd:	inc    esi
  4128be:	and    al,0xd
  4128c0:	push   eax
  4128c1:	imul   esi,DWORD PTR [edi-0x4c],0xea63f49a
  4128c8:	lds    ebx,FWORD PTR [eax+eax*2]
  4128cb:	jmp    0x49059bb0
  4128d0:	pop    ebp
  4128d1:	sub    eax,0xdee012bf
  4128d6:	(bad)  
  4128d7:	retf   0x146
  4128da:	aad    0xba
  4128dc:	sbb    al,0xb2
  4128de:	inc    BYTE PTR [esi+0x28076299]
  4128e4:	shr    DWORD PTR [edx+ecx*1-0xa],cl
  4128e8:	in     eax,dx
  4128e9:	pop    ebx
  4128ea:	xchg   edx,eax
  4128eb:	sbb    bh,BYTE PTR [ebp-0x5958e762]
  4128f1:	inc    edi
  4128f2:	popa   
  4128f3:	repnz mov dh,0x8b
  4128f6:	mov    al,0xfa
  4128f8:	jns    0x412911
  4128fa:	jo     0x412912
  4128fc:	sub    eax,0x301d4007
  412901:	inc    eax
  412902:	leave  
  412903:	mov    cl,0x9e
  412905:	sti    
  412906:	bound  esi,QWORD PTR [ecx-0x67]
  412909:	(bad)  
  41290b:	daa    
  41290c:	leave  
  41290d:	pop    edx
  41290e:	ja     0x4128f8
  412910:	inc    ebx
  412911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412912:	cmp    BYTE PTR [edi-0x7],ch
  412915:	les    ebx,FWORD PTR [edx]
  412917:	sub    bh,0x5e
  41291a:	push   esp
  41291b:	or     al,0xf
  41291d:	xchg   ebx,eax
  41291e:	test   BYTE PTR [ecx-0x41],0xe5
  412922:	loopne 0x412955
  412924:	ins    DWORD PTR es:[edi],dx
  412925:	and    bl,dh
  412927:	xchg   esi,esp
  412929:	ds xor ebp,DWORD PTR cs:[eax]
  41292d:	lea    edi,[ebx+0x346c86a7]
  412933:	fsubr  DWORD PTR [eax+0x18e2de1b]
  412939:	push   ebp
  41293a:	dec    ecx
  41293b:	and    BYTE PTR [edi],bl
  41293d:	pop    es
  41293e:	out    dx,al
  41293f:	xlat   BYTE PTR ds:[ebx]
  412940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412941:	dec    esp
  412942:	adc    al,0x10
  412944:	ins    BYTE PTR es:[edi],dx
  412945:	xor    ch,bl
  412947:	mov    ch,0xf4
  412949:	push   0x9fba633e
  41294e:	retf   0xaae9
  412951:	scas   eax,DWORD PTR es:[edi]
  412952:	mov    ds:0xab2bb724,eax
  412957:	adc    ch,bl
  412959:	int    0x60
  41295b:	mov    al,ds:0x27817a24
  412960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412961:	pop    es
  412962:	push   esp
  412963:	cmp    ah,ch
  412965:	mov    esp,0x603aefde
  41296a:	gs shl bl,cl
  41296d:	int3   
  41296e:	mov    eax,DWORD PTR [eax]
  412970:	inc    edi
  412971:	inc    esp
  412972:	imul   edi,esp,0xa032c93d
  412978:	les    ebx,FWORD PTR [ebp+ecx*4+0x5dde7734]
  41297f:	fisttp DWORD PTR [ebx-0xe8c9b2c]
  412985:	pop    edx
  412986:	and    eax,0x52a0ca92
  41298b:	dec    edx
  41298c:	sub    al,BYTE PTR [edi-0x79]
  41298f:	add    DWORD PTR [eax+0x18a5abe9],eax
  412995:	or     eax,0x4285a2cd
  41299a:	sar    DWORD PTR ds:0x9616a492,cl
  4129a0:	pop    ecx
  4129a1:	pop    ecx
  4129a2:	shl    DWORD PTR [esi],cl
  4129a4:	std    
  4129a5:	je     0x4129c3
  4129a7:	jmp    0x21b8fdc0
  4129ac:	clc    
  4129ad:	mov    al,ds:0x3e11b724
  4129b2:	mov    WORD PTR [eax-0x19],?
  4129b5:	imul   eax,DWORD PTR [esi+ebx*2+0x78],0xf780f030
  4129bd:	jg     0x41296b
  4129bf:	outs   dx,DWORD PTR ds:[esi]
  4129c0:	fbstp  TBYTE PTR [eax+0x64]
  4129c3:	mov    ch,0x69
  4129c5:	mov    ds:0xf879bb1d,al
  4129ca:	or     al,bl
  4129cc:	arpl   WORD PTR [edx],bx
  4129ce:	push   eax
  4129cf:	outs   dx,DWORD PTR ds:[esi]
  4129d0:	or     edx,DWORD PTR [edx+0x4c0c5379]
  4129d6:	aam    0x8b
  4129d8:	push   ecx
  4129d9:	je     0x412991
  4129db:	cmp    al,BYTE PTR [edx-0x7f6c6ed4]
  4129e1:	mov    WORD PTR [eax-0x59e8ec96],?
  4129e7:	cmp    DWORD PTR [esi+edi*8+0x401a77d3],esi
  4129ee:	retf   
  4129ef:	pushf  
  4129f0:	test   eax,0x34e2538d
  4129f5:	or     BYTE PTR [eax+0x31f55967],dh
  4129fb:	xchg   esp,eax
  4129fc:	(bad)  
  4129fd:	xor    ebp,DWORD PTR [edx+0x42435fd5]
  412a03:	mov    esi,0x60b24403
  412a08:	int    0xeb
  412a0a:	dec    esp
  412a0b:	sbb    DWORD PTR [edi+0x1e3fda79],esi
  412a11:	and    DWORD PTR [esi+0x558c1872],0xd5330b96
  412a1b:	loop   0x412a07
  412a1d:	scas   eax,DWORD PTR es:[edi]
  412a1e:	pushf  
  412a1f:	mov    bl,0x72
  412a21:	mov    ds:0x3e7f1a16,al
  412a26:	xchg   esi,eax
  412a27:	fsub   DWORD PTR gs:[esp+eiz*4-0x1eca00f9]
  412a2f:	gs gs ret 0x48c4
  412a34:	inc    edx
  412a35:	xchg   edx,eax
  412a36:	sub    bh,BYTE PTR [edx]
  412a38:	jle    0x412a35
  412a3a:	(bad)  
  412a3b:	jl     0x412aa8
  412a3d:	sub    BYTE PTR [ebx-0x7a],dl
  412a40:	enter  0x3da1,0x57
  412a44:	scas   al,BYTE PTR es:[edi]
  412a45:	xchg   esp,eax
  412a46:	inc    esp
  412a47:	aas    
  412a48:	mov    ecx,0x211ecc9e
  412a4d:	mov    dh,0x6b
  412a4f:	retf   
  412a50:	mov    edx,0xd38a66dd
  412a55:	cmp    BYTE PTR [edi+ebp*8],bl
  412a58:	lfs    esi,FWORD PTR [ebx]
  412a5b:	mov    edi,0x3ac4a690
  412a60:	xor    ch,BYTE PTR [edx]
  412a62:	or     eax,0x2cea5474
  412a67:	cmp    DWORD PTR [edi-0x73857e6c],edi
  412a6d:	popa   
  412a6e:	cmc    
  412a6f:	sbb    al,0xc5
  412a71:	(bad)  
  412a72:	jl     0x412a13
  412a74:	scas   eax,DWORD PTR es:[edi]
  412a75:	test   eax,0xd5f721b5
  412a7a:	jae    0x412a66
  412a7c:	(bad)  
  412a7d:	adc    ecx,edi
  412a7f:	inc    edi
  412a80:	inc    ebx
  412a81:	test   DWORD PTR [eax-0x6e],ebp
  412a84:	fimul  DWORD PTR [ecx]
  412a86:	sub    ah,BYTE PTR [esi]
  412a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a89:	or     al,0xe8
  412a8b:	jnp    0x412af3
  412a8d:	push   ds
  412a8e:	ror    DWORD PTR [esi],1
  412a90:	in     eax,dx
  412a91:	inc    BYTE PTR [ebx+0x1]
  412a94:	iret   
  412a95:	dec    esi
  412a96:	pop    edi
  412a97:	ds push eax
  412a99:	mul    DWORD PTR [ebx+0x4]
  412a9c:	cwde   
  412a9d:	stos   DWORD PTR es:[edi],eax
  412a9e:	mov    es,WORD PTR [edi-0x16]
  412aa1:	mov    ds:0xaeb55424,al
  412aa6:	(bad)  [ebx-0x43729661]
  412aac:	cwde   
  412aad:	mov    bl,0x68
  412aaf:	inc    edx
  412ab0:	push   edx
  412ab1:	cld    
  412ab2:	int    0xe7
  412ab4:	aam    0x43
  412ab6:	ror    DWORD PTR [eax-0x69],cl
  412ab9:	(bad)  
  412aba:	or     edi,DWORD PTR [edx]
  412abc:	sub    BYTE PTR [eax+0x3985a770],ch
  412ac2:	in     al,dx
  412ac3:	mov    ah,0x57
  412ac5:	mov    ecx,0xf8db44e8
  412aca:	mov    ch,0x82
  412acc:	adc    eax,0xa99ff7af
  412ad1:	adc    esi,edx
  412ad3:	jo     0x412b24
  412ad5:	mul    DWORD PTR [eax]
  412ad7:	jmp    0xb439fa2d
  412adc:	jg     0x412ad6
  412ade:	outs   dx,DWORD PTR ds:[esi]
  412adf:	rcr    BYTE PTR [esi-0x741b03bf],1
  412ae5:	xchg   edx,eax
  412ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae7:	mov    edi,0xbef588b2
  412aec:	repz xor DWORD PTR [ebx-0x4b],esi
  412af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af1:	cmp    eax,0x765f2f1d
  412af6:	aaa    
  412af7:	push   cs
  412af8:	ror    DWORD PTR [ebx],0x39
  412afb:	fcomp  DWORD PTR [ebx+0x5fdbbf33]
  412b01:	cmc    
  412b02:	jae    0x412a8b
  412b04:	pushf  
  412b05:	imul   ecx,DWORD PTR [eax+edx*8-0x269bda5b],0xffffffdb
  412b0d:	inc    ebx
  412b0e:	mov    edi,0xcadbb912
  412b13:	pushf  
  412b14:	jg     0x412aba
  412b16:	(bad)  
  412b17:	cs lock scas al,BYTE PTR es:[edi]
  412b1a:	mov    DWORD PTR [edx],edi
  412b1c:	xor    BYTE PTR [ebx+0x77b2ba84],ch
  412b22:	test   ch,al
  412b24:	dec    edi
  412b25:	mov    ch,0x68
  412b27:	lahf   
  412b28:	mov    ebp,0xcbc3f1f8
  412b2d:	or     al,0x33
  412b2f:	sub    dl,BYTE PTR [ebp-0x59c84992]
  412b35:	lods   eax,DWORD PTR ds:[esi]
  412b36:	xchg   ebx,eax
  412b37:	xor    eax,0xe1ba22e8
  412b3c:	jmp    0xf796:0xd00d891e
  412b43:	push   ebx
  412b44:	fs mov ebp,0x565a4a60
  412b4a:	mov    ds:0xdca618bf,al
  412b4f:	add    BYTE PTR [ebp-0x8cb266c],al
  412b55:	pop    eax
  412b56:	test   eax,0xd221d2c6
  412b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5c:	retf   0xac86
  412b5f:	sbb    DWORD PTR [esi-0x35],eax
  412b62:	adc    ebx,0xffffffcb
  412b65:	pop    edx
  412b66:	enter  0x7896,0xe8
  412b6a:	cmp    eax,0x750364bb
  412b6f:	jecxz  0x412b2d
  412b71:	and    BYTE PTR [edi+0x16],dl
  412b74:	aam    0x97
  412b76:	jle    0x412bac
  412b78:	cmp    al,0x40
  412b7a:	adc    BYTE PTR [eax+0x44],bh
  412b7d:	in     al,dx
  412b7e:	loope  0x412bab
  412b80:	xchg   ecx,eax
  412b81:	rcr    DWORD PTR [esi+0x65],cl
  412b84:	mov    bh,0x8b
  412b86:	repz adc bl,BYTE PTR [eax]
  412b89:	cwde   
  412b8a:	push   edi
  412b8b:	shr    edi,1
  412b8d:	outs   dx,DWORD PTR fs:[esi]
  412b8f:	sub    al,0xe1
  412b91:	pop    esi
  412b92:	leave  
  412b93:	and    DWORD PTR [edi],ecx
  412b95:	mov    esp,0x948d8751
  412b9a:	xor    DWORD PTR [ecx+0x26],esp
  412b9d:	inc    ebx
  412b9e:	loope  0x412c02
  412ba0:	xchg   ebx,eax
  412ba1:	add    eax,0xc77aff72
  412ba6:	mov    al,ds:0xae23e981
  412bab:	nop
  412bac:	push   ss
  412bad:	fmul   QWORD PTR [ecx]
  412baf:	ret    
  412bb0:	fcom   DWORD PTR [esi-0x27]
  412bb3:	and    eax,0x8592adc1
  412bb8:	xor    DWORD PTR [ebp-0x75],0x36b62fea
  412bbf:	(bad)  
  412bc0:	push   edx
  412bc1:	jge    0x412b51
  412bc3:	mov    ebx,0x4149c914
  412bc8:	ret    
  412bc9:	push   ecx
  412bca:	pop    ds
  412bcb:	adc    al,0x6c
  412bcd:	inc    ebp
  412bce:	jmp    0x63aa:0x5f9ea535
  412bd5:	pop    esp
  412bd6:	jne    0x412bd1
  412bd8:	jp     0x412c32
  412bda:	inc    esp
  412bdb:	int    0x50
  412bdd:	sub    DWORD PTR [ebp-0x28],esp
  412be0:	pop    es
  412be1:	ret    0x9d0c
  412be4:	(bad)  
  412be6:	in     al,0xdd
  412be8:	sbb    BYTE PTR [ebp+0x3f],0xa2
  412bec:	lods   eax,DWORD PTR ds:[esi]
  412bed:	mov    edi,DWORD PTR [edx-0x3fc40874]
  412bf3:	in     eax,0x21
  412bf5:	ficom  DWORD PTR [edx-0x78]
  412bf8:	out    0xe7,eax
  412bfa:	and    esi,esp
  412bfc:	cmp    DWORD PTR [ebx+0x5fc394e8],edx
  412c02:	push   cs
  412c03:	mov    ebx,0x2fd94e9c
  412c08:	xor    BYTE PTR [edi+ecx*8-0x53],0x53
  412c0d:	imul   ebx,DWORD PTR [eax-0x2],0xada49292
  412c14:	or     DWORD PTR [ebx+0x45ee7ef4],ecx
  412c1a:	rcr    bh,cl
  412c1c:	mov    ?,ebp
  412c1e:	int3   
  412c1f:	mov    WORD PTR [ecx+edx*4],ds
  412c22:	cmc    
  412c23:	dec    esi
  412c24:	inc    eax
  412c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c27:	out    dx,al
  412c28:	pop    ecx
  412c29:	adc    BYTE PTR [ebx],al
  412c2b:	jns    0x412c67
  412c2d:	jp     0x412bd8
  412c2f:	adc    BYTE PTR [ecx+0x36],bh
  412c32:	(bad)  
  412c33:	shl    BYTE PTR [eax+0x71],cl
  412c36:	aam    0x3
  412c38:	fsub   DWORD PTR [eax+0x7d413b94]
  412c3e:	pop    ebp
  412c3f:	inc    edx
  412c40:	outs   dx,DWORD PTR ds:[esi]
  412c41:	out    dx,eax
  412c42:	and    al,0x32
  412c44:	call   0x8c93:0x3eff8761
  412c4b:	or     al,0x43
  412c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4e:	dec    ecx
  412c4f:	or     al,0x45
  412c51:	and    ebp,DWORD PTR [edi]
  412c53:	test   eax,0xe41af4e0
  412c58:	aad    0x81
  412c5a:	dec    ebx
  412c5b:	je     0x412c40
  412c5d:	inc    esp
  412c5e:	test   al,cl
  412c60:	dec    ebx
  412c61:	scas   al,BYTE PTR es:[edi]
  412c62:	push   ds
  412c63:	cmp    DWORD PTR [esi+eiz*4],esi
  412c66:	popf   
  412c67:	aad    0x2f
  412c69:	ss mov ?,eax
  412c6c:	mov    dh,0xa2
  412c6e:	inc    edx
  412c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c70:	inc    ecx
  412c71:	iret   
  412c72:	test   eax,0x2ab768b8
  412c77:	inc    eax
  412c78:	retf   0x1e23
  412c7b:	(bad)  
  412c7c:	fs gs in eax,0x35
  412c80:	sbb    al,0x75
  412c82:	jge    0x412c39
  412c84:	cwde   
  412c85:	repz push 0x16
  412c88:	cmp    al,bh
  412c8a:	or     DWORD PTR [eax],ebp
  412c8c:	push   esi
  412c8d:	cli    
  412c8e:	test   BYTE PTR [ebx-0x42],ah
  412c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c92:	dec    ebp
  412c93:	pop    ss
  412c94:	dec    edx
  412c95:	adc    DWORD PTR [ebx+0x4f9629f5],eax
  412c9b:	mov    ebp,0x4436cdb
  412ca0:	out    dx,al
  412ca1:	xor    dl,BYTE PTR [edi]
  412ca3:	cld    
  412ca4:	and    dh,BYTE PTR [eax-0x4a]
  412ca7:	stos   DWORD PTR es:[edi],eax
  412ca8:	call   0x7119:0xe070fa6d
  412caf:	jbe    0x412d1c
  412cb1:	fs pop ecx
  412cb3:	vmovaps xmm0,xmm4
  412cb7:	jbe    0x412d14
  412cb9:	data16 cmc 
  412cbb:	mov    eax,0x1adda52c
  412cc0:	push   es
  412cc1:	imul   ebp,DWORD PTR [ecx-0x57],0x5b
  412cc5:	popf   
  412cc6:	or     DWORD PTR [ecx+eax*1-0x6f],eax
  412cca:	or     BYTE PTR [edx-0x31fa63ef],al
  412cd0:	inc    ebx
  412cd1:	out    dx,al
  412cd2:	call   0xda50:0x9f9d0344
  412cd9:	sbb    ebx,DWORD PTR [ecx-0x704a9cc8]
  412cdf:	stc    
  412ce0:	mov    edx,0xab907ec4
  412ce5:	hlt    
  412ce6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412ce8:	jp     0x412cf8
  412cea:	sbb    al,0xb3
  412cec:	sbb    esi,esi
  412cee:	jmp    0x55497481
  412cf3:	js     0x412d12
  412cf5:	xchg   ecx,eax
  412cf6:	and    edx,DWORD PTR [ebx]
  412cf8:	popa   
  412cf9:	es loopne 0x412cf5
  412cfc:	cs xchg ecx,eax
  412cfe:	jne    0x412cc8
  412d00:	and    dl,BYTE PTR [esi+0x26681ee4]
  412d06:	pop    ebp
  412d07:	cld    
  412d08:	sub    eax,0x815c4c03
  412d0d:	adc    al,0xb8
  412d0f:	dec    ebx
  412d10:	aaa    
  412d11:	xor    DWORD PTR ds:0xba51b039,edi
  412d17:	call   0x25955e8e
  412d1c:	lock shl BYTE PTR [ebp-0x56ab3ced],1
  412d23:	out    0x80,eax
  412d25:	imul   edi,DWORD PTR [eax-0x767ab6cd],0x72b81fbf
  412d2f:	dec    edx
  412d30:	imul   ecx,DWORD PTR [edi],0x0
  412d33:	loop   0x412cc4
  412d35:	xchg   DWORD PTR [ebx-0x5a],ebp
  412d38:	mul    BYTE PTR [edx-0x4c]
  412d3b:	loope  0x412d4b
  412d3d:	mov    dh,0x32
  412d3f:	out    0xa7,eax
  412d41:	inc    edi
  412d42:	mov    ecx,0x9a2a8c8f
  412d47:	jecxz  0x412d36
  412d49:	mov    ch,0x64
  412d4b:	int3   
  412d4c:	fcom   DWORD PTR [esi+0x9cef8f5]
  412d52:	repz adc ch,BYTE PTR [edi+ecx*1+0x6]
  412d57:	ins    DWORD PTR es:[edi],dx
  412d58:	shl    BYTE PTR [ecx],0x72
  412d5b:	jmp    0x412d36
  412d5d:	test   DWORD PTR [eax],eax
  412d5f:	leave  
  412d60:	push   cs
  412d61:	jns    0x412daa
  412d63:	fcomi  st,st(2)
  412d65:	test   al,0x85
  412d67:	pop    eax
  412d68:	out    dx,eax
  412d69:	xor    ecx,DWORD PTR [ecx-0x69197138]
  412d6f:	or     dl,BYTE PTR [esp+esi*8+0x61]
  412d73:	pop    eax
  412d74:	and    dh,BYTE PTR [eax+edi*2]
  412d77:	push   esi
  412d78:	xchg   esp,eax
  412d79:	and    edx,esi
  412d7b:	jecxz  0x412d17
  412d7d:	hlt    
  412d7e:	or     DWORD PTR [edx],0xffffffac
  412d81:	and    BYTE PTR [eax-0x29],dl
  412d84:	xor    BYTE PTR [ebx+edx*1-0x5f],bl
  412d88:	pop    ebx
  412d89:	inc    ebp
  412d8a:	and    ebx,ecx
  412d8c:	lods   al,BYTE PTR ds:[esi]
  412d8d:	repnz pop es
  412d8f:	pushf  
  412d90:	enter  0xde92,0xe0
  412d94:	sar    DWORD PTR [eax-0x24],1
  412d97:	cmp    eax,0xbf493349
  412d9c:	ins    DWORD PTR es:[edi],dx
  412d9d:	cmp    BYTE PTR [edi-0x59],cl
  412da0:	adc    ah,BYTE PTR fs:[eax+edi*4+0x5c08a01d]
  412da8:	cmp    eax,ecx
  412daa:	xor    DWORD PTR [eax-0x79c2e792],edi
  412db0:	loop   0x412e07
  412db2:	out    dx,eax
  412db3:	aam    0xe6
  412db5:	fdivr  QWORD PTR [edx+0x2a28cbde]
  412dbb:	adc    ecx,DWORD PTR [ebx-0x26]
  412dbe:	cld    
  412dbf:	jmp    0xf24a:0x8802aaad
  412dc6:	pop    esp
  412dc7:	jle    0x412d9d
  412dc9:	jge    0x412de9
  412dcb:	push   0xffffffd0
  412dcd:	push   edx
  412dce:	dec    esp
  412dcf:	not    DWORD PTR ds:0xb1088e1
  412dd5:	xchg   edx,eax
  412dd6:	pop    edx
  412dd7:	or     DWORD PTR [esp+ebp*2],ecx
  412dda:	sbb    al,0xbe
  412ddd:	dec    ebx
  412dde:	in     eax,0x20
  412de0:	cmp    eax,0x16f5abe8
  412de5:	adc    BYTE PTR [ebp+0x6c],0xd5
  412de9:	jmp    0x412e16
  412deb:	dec    ebx
  412dec:	(bad)
  412df0:	mov    ah,0x3d
  412df2:	dec    ecx
  412df3:	mov    ds:0x2f1966d4,al
  412df8:	or     DWORD PTR [ecx],esi
  412dfa:	push   es
  412dfb:	mov    bh,0xa6
  412dfd:	and    bl,0x14
  412e00:	pop    eax
  412e01:	mov    ah,0x3c
  412e03:	cmp    DWORD PTR [edi+0x65],esi
  412e06:	lock in eax,0x89
  412e09:	dec    ebx
  412e0a:	mov    esp,0x344949a6
  412e0f:	xchg   esi,eax
  412e10:	ss push 0xabb7038f
  412e16:	popf   
  412e17:	enter  0xf3e,0x1e
  412e1b:	aas    
  412e1c:	imul   esi,ebx,0x4
  412e1f:	xchg   BYTE PTR [eax+0x4c],ch
  412e22:	pushf  
  412e23:	popf   
  412e24:	push   es
  412e25:	xor    ebp,DWORD PTR [ecx+edi*1-0x65d0e658]
  412e2c:	push   ebx
  412e2d:	retf   0xf28f
  412e30:	mov    esi,DWORD PTR [edx+ebp*4+0x3e383e21]
  412e37:	retf   
  412e38:	test   eax,0x18830a7f
  412e3d:	sub    esi,DWORD PTR [eax+0x235d6d90]
  412e43:	add    BYTE PTR [esp+eiz*2],cl
  412e46:	mov    esi,0x22d51f8b
  412e4b:	call   0xc0d1:0x2ccc72e9
  412e52:	bnd jne 0x412e4d
  412e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e56:	outs   dx,BYTE PTR ds:[esi]
  412e57:	ficomp DWORD PTR [ebp+0x2df2656f]
  412e5d:	mov    ds:0x96cfb207,al
  412e62:	int    0x32
  412e64:	outs   dx,BYTE PTR ds:[esi]
  412e65:	pop    edi
  412e66:	mov    ebp,DWORD PTR [ecx]
  412e68:	mov    edx,0x7eea511b
  412e6d:	lock jl 0x412e49
  412e70:	rol    BYTE PTR [edx+eax*8+0x1c],cl
  412e74:	and    edx,0x7df5c4f9
  412e7a:	mov    bh,0xa1
  412e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7d:	loope  0x412eb9
  412e7f:	stos   BYTE PTR es:[edi],al
  412e80:	jb     0x412e6e
  412e82:	(bad)  
  412e83:	(bad)  [edi+0x3e]
  412e86:	inc    edx
  412e87:	rcl    BYTE PTR [edi+0x5958256f],0x81
  412e8e:	aam    0x49
  412e90:	and    al,0xd5
  412e92:	mov    ds:0xec3bcd8,eax
  412e97:	jb     0x412f02
  412e99:	fcomp  DWORD PTR [edi-0x46]
  412e9c:	xor    eax,0x14312533
  412ea1:	jmp    0x5360:0xfd3f1a09
  412ea8:	scas   eax,DWORD PTR es:[edi]
  412ea9:	popa   
  412eaa:	dec    ebx
  412eab:	cmp    DWORD PTR [edi+0x78711eb7],eax
  412eb1:	mov    eax,0xaa9147f5
  412eb6:	das    
  412eb7:	out    dx,eax
  412eb8:	fidivr WORD PTR [ebp+0x4b]
  412ebb:	fld    QWORD PTR [ebp+0x1c12b9a7]
  412ec1:	shl    DWORD PTR [ecx],1
  412ec3:	add    DWORD PTR [esp+ebp*4-0xc],edi
  412ec7:	fcom   DWORD PTR [esi]
  412ec9:	loop   0x412f46
  412ecb:	push   esi
  412ecc:	push   es
  412ecd:	gs in  al,0xec
  412ed0:	dec    eax
  412ed1:	xchg   DWORD PTR [eax-0x5562930a],esp
  412ed7:	outs   dx,DWORD PTR ds:[esi]
  412ed8:	cs fst st(0)
  412edb:	adc    al,0x6d
  412edd:	mov    eax,ds:0xbadc948f
  412ee2:	and    eax,0x78108086
  412ee7:	out    0x36,eax
  412ee9:	push   0x7065079b
  412eee:	and    DWORD PTR [edi-0x1b],0xfffffff3
  412ef2:	dec    esi
  412ef3:	and    cl,dl
  412ef5:	xor    BYTE PTR [ecx-0xb],al
  412ef8:	vpunpckhqdq xmm5,xmm3,xmm3
  412efc:	pop    ss
  412efd:	lock mov dh,0x28
  412f00:	pop    es
  412f01:	retf   
  412f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f03:	pop    eax
  412f04:	test   al,0x73
  412f06:	icebp  
  412f07:	addr16 pop ss
  412f09:	ss in  al,0xc9
  412f0c:	fistp  DWORD PTR [ebp-0x14]
  412f0f:	mov    ch,0xfa
  412f11:	inc    esi
  412f12:	sahf   
  412f13:	scas   al,BYTE PTR es:[edi]
  412f14:	test   al,0x52
  412f16:	ss das 
  412f18:	or     al,0xda
  412f1a:	in     al,dx
  412f1b:	fdiv   DWORD PTR [ebp-0x38fe9a92]
  412f21:	aas    
  412f22:	std    
  412f23:	jmp    0x305d70cd
  412f28:	adc    edx,0x714639ea
  412f2e:	push   ss
  412f2f:	test   eax,0x781b3ee0
  412f34:	scas   al,BYTE PTR es:[edi]
  412f35:	or     al,0xa7
  412f37:	cdq    
  412f38:	(bad)  
  412f39:	aam    0x45
  412f3b:	outs   dx,DWORD PTR ds:[esi]
  412f3c:	add    DWORD PTR [eax+0x59acc579],ecx
  412f42:	lods   al,BYTE PTR ds:[esi]
  412f43:	ins    BYTE PTR es:[edi],dx
  412f44:	mov    esp,0xb62b0289
  412f49:	mov    esi,ebp
  412f4b:	xor    eax,0x2bf67472
  412f50:	icebp  
  412f51:	mov    BYTE PTR [edi+0xa59546c],bh
  412f57:	ret    0x3a95
  412f5a:	es dec esp
  412f5c:	and    ecx,DWORD PTR [edi]
  412f5e:	sbb    DWORD PTR [ebx],eax
  412f60:	(bad)  [eax+0x7567fc33]
  412f66:	sbb    al,0x88
  412f68:	push   0x55625fee
  412f6d:	add    eax,0x513785d0
  412f72:	xchg   esp,eax
  412f73:	pop    ebp
  412f74:	mov    cs,WORD PTR ds:[edi+0x3c7ee9ad]
  412f7b:	or     BYTE PTR [ebp+0x4d],0xe2
  412f7f:	bound  esp,QWORD PTR [ebp-0x5b]
  412f82:	pop    eax
  412f83:	adc    dh,BYTE PTR [ebx-0x73]
  412f86:	mov    ah,0x1
  412f88:	sub    bl,BYTE PTR [esp+ebp*8+0x4a0f8434]
  412f8f:	pusha  
  412f90:	mov    edx,0xf0abbc2d
  412f95:	ds dec ecx
  412f97:	fdivr  QWORD PTR [ebx+ebp*8-0xc]
  412f9b:	cmp    al,0x98
  412f9d:	mov    ecx,0x2a1f5534
  412fa2:	mov    esp,0xc77f9e66
  412fa7:	addr16 mov dh,0x2b
  412faa:	adc    al,0xb1
  412fac:	push   esi
  412fad:	enter  0x3a58,0xeb
  412fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb2:	xor    ebp,0xef7c3b0
  412fb8:	mov    dh,ah
  412fba:	fisubr WORD PTR [edi-0x60a6f2bb]
  412fc0:	push   ebp
  412fc1:	xor    DWORD PTR [eax+0x23],edi
  412fc4:	pop    esi
  412fc5:	push   ebx
  412fc6:	push   ds
  412fc7:	inc    edi
  412fc8:	push   edi
  412fc9:	push   ss
  412fca:	sti    
  412fcb:	bound  esp,QWORD PTR [edx]
  412fcd:	xor    al,BYTE PTR [ebx-0xe]
  412fd0:	enter  0xe90e,0xa4
  412fd4:	and    bl,ch
  412fd6:	cmp    eax,0x2187563d
  412fdb:	jmp    0xc24f:0xa4c4ffb9
  412fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe3:	mov    esi,0xdcfd300e
  412fe8:	iret   
  412fe9:	outs   dx,DWORD PTR ds:[esi]
  412fea:	pcmpgtb mm6,QWORD PTR [ebx-0x67]
  412fee:	or     bh,ch
  412ff0:	(bad)  
  412ff1:	sahf   
  412ff2:	lock add al,0x50
  412ff5:	stos   DWORD PTR es:[edi],eax
  412ff6:	jne    0x412fa6
  412ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff9:	push   esp
  412ffa:	out    0xf3,al
  412ffc:	loop   0x41306f
  412ffe:	jmp    0x412ff4
  413000:	stos   DWORD PTR es:[edi],eax
  413001:	jp     0x412fc0
  413003:	ficom  WORD PTR [esi-0x35864431]
  413009:	imul   BYTE PTR [ecx-0x14e64a1d]
  41300f:	push   eax
  413010:	cld    
  413011:	jmp    0x412ff7
  413013:	int    0x6f
  413015:	lods   al,BYTE PTR ds:[esi]
  413016:	mov    edx,0xe29e1cbe
  41301b:	(bad)  
  41301d:	xor    bl,BYTE PTR [edx]
  41301f:	sbb    eax,DWORD PTR [edi+eiz*8]
  413022:	sbb    DWORD PTR [ebx],esi
  413024:	outs   dx,DWORD PTR ds:[esi]
  413025:	(bad)  
  413026:	mov    ebp,0xfe933076
  41302b:	not    DWORD PTR [ebx+0x28]
  41302e:	loope  0x413008
  413030:	mov    edi,0x82ceb53d
  413035:	scas   al,BYTE PTR es:[edi]
  413036:	call   0xbf0b85e3
  41303b:	cs into 
  41303d:	add    dh,bl
  41303f:	xchg   esp,eax
  413040:	aam    0xd4
  413042:	add    eax,0x362c0e0e
  413047:	and    al,BYTE PTR [ebx]
  413049:	jbe    0x4130a3
  41304b:	out    dx,al
  41304c:	inc    esp
  41304d:	rol    BYTE PTR [ebp*4+0x54dd54eb],0x1c
  413055:	xor    eax,0x74b656a4
  41305a:	and    eax,0x8bd95318
  41305f:	and    ch,BYTE PTR [edx*4-0x7a641c8e]
  413066:	push   0xffffffc5
  413068:	imul   ebx,DWORD PTR [edx+ecx*8+0xb],0x2e
  41306d:	int3   
  41306e:	xor    BYTE PTR [edi],cl
  413070:	scas   al,BYTE PTR es:[edi]
  413071:	sbb    eax,0x90b878b5
  413076:	push   ebp
  413077:	stos   BYTE PTR es:[edi],al
  413078:	clc    
  413079:	rol    DWORD PTR ds:0x10a4e2f0,cl
  41307f:	dec    esp
  413080:	pop    es
  413081:	ins    DWORD PTR es:[edi],dx
  413082:	xor    eax,0x4a01098f
  413087:	mov    eax,0x6a9bde9e
  41308c:	fsubr  st(2),st
  41308e:	shl    DWORD PTR [eax+edi*4+0x2c87902d],0x2
  413096:	gs loope 0x4130e6
  413099:	nop
  41309a:	sub    ebx,DWORD PTR [ebp-0x11]
  41309d:	test   eax,0xe8a0fe37
  4130a2:	mov    dh,0xea
  4130a4:	mov    ebx,DWORD PTR [ebp-0x12]
  4130a7:	outs   dx,BYTE PTR ds:[esi]
  4130a8:	xchg   ebp,eax
  4130a9:	pop    edx
  4130aa:	mov    esp,DWORD PTR ds:0xf3b24c10
  4130b0:	inc    eax
  4130b1:	xor    al,0x21
  4130b3:	pop    ds
  4130b4:	out    dx,al
  4130b5:	cmp    DWORD PTR [ebx+0x302b5ec9],esp
  4130bb:	xchg   edi,eax
  4130bc:	(bad)  
  4130bd:	xchg   ebp,eax
  4130be:	add    eax,0x216536de
  4130c3:	arpl   bx,dx
  4130c5:	sub    al,0x71
  4130c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c8:	fdivr  QWORD PTR [edi-0x445f2951]
  4130ce:	scas   eax,DWORD PTR es:[edi]
  4130cf:	jns    0x413087
  4130d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d2:	je     0x41308a
  4130d4:	adc    dl,BYTE PTR [edx+eiz*4]
  4130d7:	push   ds
  4130d8:	push   ebp
  4130d9:	stos   DWORD PTR es:[edi],eax
  4130da:	ja     0x413061
  4130dc:	inc    DWORD PTR [ebp+0x78854e5d]
  4130e2:	push   ebx
  4130e3:	mov    ds:0x4baf529c,al
  4130e8:	xchg   esi,eax
  4130e9:	(bad)  
  4130ea:	bound  ecx,QWORD PTR ds:0x6130860b
  4130f0:	xchg   ecx,eax
  4130f1:	mov    dl,0xdc
  4130f3:	lahf   
  4130f4:	dec    ecx
  4130f5:	add    al,0x26
  4130f7:	addr16 out 0xd8,eax
  4130fa:	out    dx,al
  4130fb:	sbb    ch,BYTE PTR [eax+0x16]
  4130fe:	cmp    DWORD PTR [edi+0x1d929a21],0xffffffde
  413105:	mov    dh,0x27
  413107:	and    al,0x9a
  413109:	jecxz  0x4130f2
  41310b:	mov    ds:0x7364500e,eax
  413110:	ficomp WORD PTR [ebp+0x7ab28163]
  413116:	cs mov cl,0x1e
  413119:	sar    BYTE PTR [eax-0x138e0562],0x96
  413120:	aad    0xb4
  413122:	enter  0xf95f,0x83
  413126:	data16 sub dh,bh
  413129:	mov    edx,0x851cfe1a
  41312e:	xor    ch,BYTE PTR [edi-0x6a]
  413131:	inc    esp
  413132:	sahf   
  413133:	mov    dl,0x58
  413135:	push   0x5b6261d4
  41313a:	jbe    0x4130f5
  41313c:	bound  esp,QWORD PTR [esi]
  41313e:	jae    0x413103
  413140:	dec    ebx
  413141:	cmc    
  413142:	or     bl,ch
  413144:	xchg   ecx,eax
  413145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413146:	loopne 0x4131a3
  413148:	pop    edx
  413149:	cmc    
  41314a:	cmp    BYTE PTR [ecx+0x49c5c0e8],0xc1
  413151:	sar    dl,0xca
  413154:	mov    ah,0x36
  413156:	pusha  
  413157:	cmp    DWORD PTR ds:0x6a0974f3,esi
  41315d:	sbb    BYTE PTR [ecx+0x7538ff53],0x68
  413164:	add    al,0xb3
  413166:	push   ss
  413167:	mov    ebp,0x933a840b
  41316c:	mul    BYTE PTR [edx-0x2e9e433a]
  413172:	or     bl,BYTE PTR [ebx+edi*2+0x4b61e63c]
  413179:	pop    ds
  41317a:	cmp    eax,0x4019cef0
  41317f:	in     al,dx
  413180:	mov    cl,0xed
  413182:	and    eax,0xc095d3a3
  413187:	mov    ch,0x84
  413189:	jb     0x41316c
  41318b:	jb     0x4131fa
  41318d:	mov    ch,0xac
  41318f:	jo     0x4131f1
  413191:	in     al,dx
  413192:	sub    dl,BYTE PTR [esp+ebp*1]
  413195:	test   BYTE PTR [edx+0x30ef3899],bl
  41319b:	pop    edx
  41319c:	mov    eax,ds
  41319e:	into   
  41319f:	dec    edi
  4131a0:	cld    
  4131a1:	jl     0x41318e
  4131a3:	mov    dl,0xa5
  4131a5:	sub    cl,BYTE PTR [edx+0x4c]
  4131a8:	sbb    al,0x12
  4131aa:	cmp    bl,BYTE PTR [esi-0x7d8ea756]
  4131b0:	fmul   QWORD PTR [ebx+eax*8]
  4131b3:	jecxz  0x413175
  4131b5:	adc    ebp,DWORD PTR [ecx+0xa481b2e]
  4131bb:	dec    ecx
  4131bc:	mov    bh,0x17
  4131be:	sar    BYTE PTR cs:[edi],0x84
  4131c2:	inc    edx
  4131c3:	mov    edi,0xb3f7192a
  4131c8:	pop    esp
  4131c9:	jg     0x4131e6
  4131cb:	add    al,0x34
  4131cd:	imul   ebx,DWORD PTR [ebx+edx*2],0x690bd8e8
  4131d4:	push   ecx
  4131d5:	or     DWORD PTR [edi],eax
  4131d7:	test   eax,0x99841284
  4131dc:	and    eax,0x4436fc54
  4131e1:	dec    ebx
  4131e2:	iret   
  4131e3:	push   ebp
  4131e4:	ret    0x848d
  4131e7:	pop    esp
  4131e8:	nop
  4131e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131ea:	pop    es
  4131eb:	mov    dh,0x2e
  4131ed:	leave  
  4131ee:	and    dl,bl
  4131f0:	lds    esi,FWORD PTR [eax]
  4131f2:	xchg   ecx,eax
  4131f3:	leave  
  4131f4:	lahf   
  4131f5:	call   0xa4807cbb
  4131fa:	mov    ebx,0xc5868ee2
  4131ff:	popa   
  413200:	fwait
  413201:	jl     0x413240
  413203:	(bad)  
  413204:	je     0x413187
  413206:	xchg   edi,eax
  413207:	int    0x8a
  413209:	push   edi
  41320a:	repz adc BYTE PTR [edi-0x55],bh
  41320e:	or     al,0x75
  413210:	mov    bl,0x94
  413212:	inc    ebp
  413213:	dec    ecx
  413214:	add    ebp,esp
  413216:	ss and eax,0xfef77414
  41321c:	iret   
  41321d:	push   cs
  41321e:	mov    ah,0xf3
  413220:	xor    cl,al
  413222:	arpl   cx,cx
  413224:	xor    ah,bl
  413226:	add    al,0xf1
  413228:	out    0x52,al
  41322a:	and    DWORD PTR [eax+0xa],edi
  41322d:	cs call 0xa981:0x40d07e97
  413235:	fld    st(1)
  413237:	lahf   
  413238:	cs xor al,0x3d
  41323b:	mov    esi,0x5a1a80a3
  413240:	repz dec DWORD PTR [esp+esi*2+0x7f4a7323]
  413248:	jl     0x413298
  41324a:	fst    QWORD PTR [esi]
  41324c:	leave  
  41324d:	or     al,0xa
  41324f:	imul   edx,DWORD PTR [ebp-0x180f1d80],0xffffffaf
  413256:	or     eax,0x93b23cbe
  41325b:	rol    BYTE PTR [ebx],cl
  41325d:	dec    ebp
  41325e:	call   DWORD PTR [ebp+0x3bfe7c7]
  413264:	fnstenv [ebx]
  413266:	mov    ds:0x76d971f2,eax
  41326b:	push   edx
  41326c:	fdivp  st(6),st
  41326e:	xchg   BYTE PTR [edi-0x4],cl
  413271:	or     ebx,DWORD PTR [edx+ebp*2-0x13d0335d]
  413278:	mov    ax,ds:0x5026648f
  41327e:	mov    edi,0xee62f85e
  413283:	mov    esp,0x24b6070d
  413288:	mov    dh,0x4b
  41328a:	(bad)  
  41328b:	push   ebx
  41328c:	(bad)  
  41328d:	or     esi,esp
  41328f:	mov    DWORD PTR [edx+0x25],ebp
  413292:	pushf  
  413293:	inc    ebp
  413295:	daa    
  413296:	loopne 0x4132ab
  413298:	(bad)  
  413299:	xlat   BYTE PTR ds:[ebx]
  41329a:	cs mov dl,0x9a
  41329d:	push   esp
  41329e:	jno    0x4132e4
  4132a0:	jo     0x413244
  4132a2:	cli    
  4132a3:	add    BYTE PTR [ecx-0x21],0xec
  4132a7:	mov    ebp,0x4738eb5e
  4132ac:	xchg   ecx,eax
  4132ad:	fdiv   QWORD PTR [ebx+0x1c]
  4132b0:	xor    eax,DWORD PTR [esi]
  4132b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b3:	mov    WORD PTR [edi-0x7162d3b4],cs
  4132b9:	lea    edx,[esi-0x3b]
  4132bc:	mov    edi,0x5623b536
  4132c1:	or     eax,0x1f68df29
  4132c6:	cli    
  4132c7:	imul   edi,DWORD PTR [edi+0x63ad3c8],0x77
  4132ce:	stos   BYTE PTR es:[edi],al
  4132cf:	loop   0x4132ff
  4132d1:	inc    esi
  4132d2:	jge    0x413309
  4132d4:	push   edi
  4132d5:	pop    ebx
  4132d6:	lock call 0x383cdf6a
  4132dc:	in     al,0x5a
  4132de:	dec    DWORD PTR [esi+0x362bd77d]
  4132e4:	jno    0x4132f1
  4132e6:	push   edx
  4132e7:	sub    edi,edx
  4132e9:	imul   ebx,esi,0x2237a81e
  4132ef:	not    BYTE PTR [edx]
  4132f1:	daa    
  4132f2:	lea    ebx,ds:0xaa220e8c
  4132f8:	xchg   ebx,eax
  4132f9:	ret    
  4132fa:	mov    ebp,0x432ae4f6
  4132ff:	nop
  413300:	sub    DWORD PTR [ebx],ecx
  413302:	jp     0x413317
  413304:	add    ebp,DWORD PTR [eax-0x6f]
  413307:	mov    ecx,0x5e6ff04d
  41330c:	pop    ss
  41330d:	fs mov esp,0x32f23372
  413313:	mov    eax,DWORD PTR [edx]
  413315:	mov    ebp,0x958ed891
  41331a:	adc    eax,0xd282e532
  41331f:	retf   0xb16c
  413322:	jnp    0x413356
  413324:	sbb    BYTE PTR ds:[ebp-0x67],ah
  413328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413329:	jno    0x4132e8
  41332b:	push   0xffffffa8
  41332d:	retf   
  41332e:	lock jnp 0x4132e4
  413331:	mov    ch,0xff
  413333:	inc    edx
  413334:	jle    0x413341
  413336:	adc    BYTE PTR [ebx-0x22966c80],al
  41333c:	xor    cl,BYTE PTR [eax-0x73]
  41333f:	sub    al,0x51
  413341:	xor    bh,al
  413343:	mov    al,ds:0x42d5b5d0
  413348:	xlat   BYTE PTR ds:[ebx]
  413349:	jne    0x41339d
  41334b:	clc    
  41334c:	aad    0x1e
  41334e:	xchg   edi,eax
  41334f:	(bad)  
  413350:	bound  ebp,QWORD PTR [eax+0x33]
  413353:	rcr    BYTE PTR [edi],0x64
  413356:	xchg   edx,eax
  413357:	sbb    cl,BYTE PTR [edi]
  413359:	jge    0x4133a3
  41335b:	mov    edi,0x97c2bf5f
  413360:	aam    0x78
  413362:	jo     0x4133d5
  413364:	(bad)  
  413365:	dec    ebp
  413366:	xor    BYTE PTR [eax],0x1d
  413369:	mov    ecx,DWORD PTR [ecx]
  41336b:	sbb    eax,eax
  41336d:	call   0xc60a:0x124a9652
  413374:	jo     0x4133b5
  413376:	xchg   edx,eax
  413377:	inc    ebx
  413378:	pusha  
  413379:	enter  0x67d,0x1d
  41337d:	mov    WORD PTR [ebx],ds
  41337f:	or     DWORD PTR ds:0x4106397d,0x78
  413386:	in     al,dx
  413387:	dec    ebx
  413388:	adc    BYTE PTR [esi-0x643f20c9],ah
  41338e:	adc    ebx,DWORD PTR [ebx]
  413390:	xchg   ebx,eax
  413391:	jb     0x4133f8
  413393:	jne    0x413335
  413395:	in     eax,0x96
  413397:	ficomp WORD PTR [edi-0x17911c3e]
  41339d:	pop    ebx
  41339e:	pop    ds
  41339f:	push   ebp
  4133a0:	aas    
  4133a1:	cmc    
  4133a2:	xchg   ebp,eax
  4133a3:	wrmsr  
  4133a5:	ror    BYTE PTR [ebx-0x2e99eafc],0x36
  4133ac:	idiv   eax
  4133ae:	and    BYTE PTR [ebp+0x2c],ch
  4133b1:	add    bh,BYTE PTR [eax+0x5a4c3cec]
  4133b7:	xchg   esp,eax
  4133b8:	or     ebx,DWORD PTR [ebp-0x48e7ddc8]
  4133be:	add    al,0x4d
  4133c0:	icebp  
  4133c1:	and    eax,esp
  4133c3:	push   ebp
  4133c4:	and    ebp,DWORD PTR [edi-0x58]
  4133c7:	in     eax,dx
  4133c8:	cmp    ch,BYTE PTR [eax+0x222310df]
  4133ce:	mov    ds:0x3e0db38e,al
  4133d3:	xor    edx,DWORD PTR [eax]
  4133d5:	call   0x9f4f:0xc05bf26d
  4133dc:	xchg   esp,eax
  4133dd:	test   al,0x87
  4133df:	iret   
  4133e0:	xchg   ebx,eax
  4133e1:	sbb    BYTE PTR [ebp-0x60f9e9dc],bl
  4133e7:	scas   eax,DWORD PTR es:[edi]
  4133e8:	xor    DWORD PTR [edx+0x654d95c8],esi
  4133ee:	dec    edi
  4133ef:	ins    DWORD PTR es:[edi],dx
  4133f0:	aas    
  4133f1:	outs   dx,DWORD PTR ds:[esi]
  4133f2:	aad    0x34
  4133f4:	or     ch,BYTE PTR [esi-0x3dc32acc]
  4133fa:	mov    ecx,0xae8207b3
  4133ff:	(bad)  
  413400:	repz lea esp,[eax-0x24]
  413404:	xchg   ebp,eax
  413405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413406:	mov    ebp,0x9a98d86a
  41340b:	ret    0x2a67
  41340e:	loop   0x41340d
  413410:	aaa    
  413411:	xor    esi,DWORD PTR [edx+0xa37a8ec]
  413417:	mov    ?,WORD PTR [edx+0x113207fb]
  41341d:	mov    dl,0x90
  41341f:	xlat   BYTE PTR ds:[ebx]
  413420:	fidiv  DWORD PTR [ecx]
  413422:	adc    ebx,DWORD PTR [ebx+eiz*2-0x1568da71]
  413429:	dec    esi
  41342a:	push   es
  41342b:	bound  esi,QWORD PTR [edi]
  41342d:	rep ins BYTE PTR es:[edi],dx
  41342f:	movntq (bad),mm6
  413430:	out    0xf2,eax
  413432:	lock arpl WORD PTR [ebx],bp
  413435:	or     eax,0x4edca6d6
  41343a:	je     0x413473
  41343c:	mov    ah,0x58
  41343e:	mov    edx,0x4863138c
  413443:	push   ebx
  413444:	inc    esi
  413445:	and    dh,BYTE PTR [ebx]
  413447:	mov    ah,0xb1
  413449:	sar    BYTE PTR [eax+ecx*2-0xd],0xa7
  41344e:	imul   esi,DWORD PTR [eax+0x78a33893],0xd8019f50
  413458:	sahf   
  413459:	not    BYTE PTR [edx]
  41345b:	mov    ebx,0x4e575025
  413460:	stc    
  413461:	pop    ecx
  413462:	outs   dx,DWORD PTR ds:[esi]
  413463:	outs   dx,BYTE PTR ds:[esi]
  413464:	pusha  
  413465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413466:	test   BYTE PTR [edi],bl
  413468:	add    BYTE PTR [edx],cl
  41346a:	stc    
  41346b:	xchg   ecx,eax
  41346c:	push   eax
  41346d:	push   ecx
  41346e:	xor    BYTE PTR ds:[ebx+0x3a],bl
  413472:	scas   eax,DWORD PTR es:[edi]
  413473:	test   eax,0xdca211e
  413478:	xadd   DWORD PTR [ebp+0xaaae780],edi
  41347f:	(bad)  [ebx-0x40f13bf9]
  413485:	aad    0xfe
  413487:	push   ecx
  413488:	mov    DWORD PTR [edx],ebp
  41348a:	lahf   
  41348b:	clc    
  41348c:	pop    ecx
  41348d:	popf   
  41348e:	outs   dx,DWORD PTR ds:[esi]
  41348f:	ret    0x1e78
  413492:	ja     0x413420
  413494:	xor    eax,0xd062e2ec
  413499:	adc    ah,BYTE PTR [esi+0x7d]
  41349c:	fisubr DWORD PTR [esi+ecx*4]
  41349f:	mov    ebp,0x15f69e1
  4134a4:	nop
  4134a5:	push   ss
  4134a6:	sub    eax,0x1b98582c
  4134ab:	das    
  4134ac:	add    bh,BYTE PTR [esp+ebp*1-0x1248267a]
  4134b3:	push   ecx
  4134b5:	ins    DWORD PTR es:[edi],dx
  4134b6:	sub    BYTE PTR [eax+0x14],bh
  4134b9:	sub    BYTE PTR [eax+0x78af1ab],0x7a
  4134c0:	adc    eax,0xb8243749
  4134c5:	jp     0x413473
  4134c7:	sbb    eax,0x3f5e700f
  4134cc:	pop    edx
  4134cd:	and    ah,BYTE PTR [eax+0x46ece7d9]
  4134d3:	xchg   DWORD PTR [esi-0x2c],ebx
  4134d6:	mov    ecx,0x3b9c80d4
  4134db:	pop    DWORD PTR [eax+0x18b2000d]
  4134e1:	adc    BYTE PTR [esi+0x77],0x4d
  4134e5:	mov    ah,0x0
  4134e7:	fdivrp st(0),st
  4134e9:	ss (bad) 
  4134ec:	adc    ch,bh
  4134ee:	sti    
  4134ef:	mov    ch,0xf6
  4134f1:	cwde   
  4134f2:	mov    edi,0x17fec832
  4134f7:	out    0x51,eax
  4134f9:	mov    cs,WORD PTR [ebx+eiz*8+0xd1056c6]
  413500:	(bad)  
  413501:	jbe    0x41348c
  413503:	dec    eax
  413504:	cmp    al,0xdf
  413506:	imul   ebx,edx,0xdf784adb
  41350c:	repnz sbb eax,0x5382da78
  413512:	mov    bh,0xf4
  413514:	mov    ch,0xf5
  413516:	dec    dh
  413518:	xchg   DWORD PTR [ecx+0x753bab95],eax
  41351e:	cmp    eax,0x603a01ca
  413523:	aaa    
  413524:	or     al,0x1b
  413526:	adc    BYTE PTR [ebx-0x3e248327],al
  41352c:	stos   DWORD PTR es:[edi],eax
  41352d:	shl    BYTE PTR [eax+0x4ac65777],1
  413533:	out    dx,al
  413534:	adc    al,0xae
  413536:	xor    eax,0x8588e0de
  41353b:	sub    ch,BYTE PTR [esi-0x71]
  41353e:	or     ch,0xc0
  413541:	shl    DWORD PTR [edx-0x234630c5],0x9a
  413548:	and    BYTE PTR [eax],ah
  41354a:	push   0x126fcc5e
  41354f:	lds    eax,FWORD PTR [edi-0x27]
  413552:	je     0x4134fc
  413554:	enter  0x3962,0xbc
  413558:	cmp    BYTE PTR [edx+0x35],bh
  41355b:	fild   DWORD PTR [edi+0x72e1465e]
  413561:	cmp    al,0xff
  413563:	mov    WORD PTR [esi],cs
  413565:	retf   
  413566:	ror    BYTE PTR [eax+edi*4+0x1f0efc86],cl
  41356d:	push   0x16
  41356f:	mov    bl,0xb7
  413571:	pop    esp
  413572:	push   es
  413573:	xchg   ebx,ebx
  413575:	jnp    0x41357d
  413577:	xor    BYTE PTR ds:0xfe657542,0xd7
  41357e:	inc    esp
  41357f:	je     0x4135d8
  413581:	jb     0x41351e
  413583:	pop    es
  413584:	adc    eax,DWORD PTR [edi+0x2032cc63]
  41358a:	jo     0x4135af
  41358c:	mov    WORD PTR [eax-0x49],cs
  41358f:	ds clc 
  413591:	mov    eax,0x4a196b33
  413596:	les    esp,FWORD PTR [ecx-0x4c]
  413599:	imul   ecx,DWORD PTR [edx],0xffffffc6
  41359c:	dec    esi
  41359d:	jle    0x4135c9
  41359f:	sbb    DWORD PTR [ecx],edx
  4135a1:	and    eax,ecx
  4135a3:	or     al,0x3b
  4135a5:	sub    eax,0xc82b4af0
  4135aa:	add    esi,DWORD PTR [edi-0x7dc2b7de]
  4135b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b1:	add    bh,BYTE PTR [edx+0x3f60530b]
  4135b7:	and    ebx,ecx
  4135b9:	cmp    al,0xe5
  4135bb:	mov    bh,0x72
  4135bd:	pushf  
  4135be:	test   eax,0x277a6bc0
  4135c3:	addr16 add eax,0x25d6dc09
  4135c9:	das    
  4135ca:	xchg   esi,eax
  4135cb:	sti    
  4135cc:	popa   
  4135cd:	inc    ecx
  4135ce:	dec    ecx
  4135cf:	push   ecx
  4135d0:	outs   dx,DWORD PTR ds:[esi]
  4135d1:	mov    fs,WORD PTR [edi+0x1a4f1e73]
  4135d7:	push   edi
  4135d8:	jmp    0x4135f3
  4135da:	pop    ecx
  4135db:	inc    ch
  4135dd:	cs call 0x4b2e4314
  4135e3:	and    eax,ebp
  4135e5:	mov    ah,0x96
  4135e7:	xor    ebp,DWORD PTR [ecx-0x11]
  4135ea:	je     0x413613
  4135ec:	nop
  4135ed:	sub    eax,ebp
  4135ef:	ins    DWORD PTR es:[edi],dx
  4135f0:	cmp    eax,0x6a435a9c
  4135f5:	mov    ebx,0x55471a20
  4135fa:	xor    BYTE PTR [esi-0x11],cl
  4135fd:	fbstp  TBYTE PTR ds:0x674ad02d
  413603:	dec    edx
  413604:	add    al,0xee
  413606:	mov    DWORD PTR [edi-0x73],edi
  413609:	xor    DWORD PTR [esi],ebp
  41360b:	pop    ds
  41360c:	into   
  41360d:	std    
  41360e:	add    eax,edi
  413610:	or     edx,DWORD PTR [eax+ebx*2+0x3ea00049]
  413617:	leave  
  413618:	adc    eax,0xab4d6a62
  41361d:	sar    DWORD PTR [edx],0xee
  413620:	(bad)  
  413621:	xchg   ebx,eax
  413622:	jge    0x4135ce
  413624:	cmp    al,0x95
  413626:	adc    al,0xb9
  413628:	retf   
  413629:	daa    
  41362a:	mov    edx,0xd3c26d0f
  41362f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413630:	jmp    0x434ebc0a
  413635:	sbb    DWORD PTR [esp+ecx*8+0x42],ebx
  413639:	lock dec esi
  41363b:	ret    0x714b
  41363e:	enter  0x3af6,0x19
  413642:	xchg   ecx,eax
  413643:	loop   0x41360d
  413645:	and    eax,0x5a1abe22
  41364a:	xchg   ebx,eax
  41364b:	mov    ds:0x487d7c7c,al
  413650:	popf   
  413651:	jp     0x4135d9
  413653:	aam    0xa8
  413655:	aam    0x6b
  413657:	push   esi
  413658:	pusha  
  413659:	icebp  
  41365a:	out    dx,eax
  41365b:	mov    edx,0x6d59b62e
  413660:	and    ebp,edi
  413662:	call   0x6329:0xe94038e1
  413669:	jg     0x413622
  41366b:	fcmovnu st,st(4)
  41366d:	push   ebx
  41366e:	jmp    0x4778:0xb8de0a15
  413675:	pusha  
  413676:	mov    bl,0xa2
  413678:	adc    DWORD PTR ds:0x3a8912e1,0x3c5f1c82
  413682:	xor    DWORD PTR [edx+0x5d201257],ebp
  413688:	retf   0xd9c4
  41368b:	jne    0x4136db
  41368d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368e:	ds adc eax,0x64611081
  413694:	add    eax,0x6006ef3f
  413699:	mov    ch,0x5f
  41369b:	jno    0x413706
  41369d:	cmp    al,0xd6
  41369f:	cli    
  4136a0:	mov    ds:0x2fca5fab,eax
  4136a5:	push   edx
  4136a6:	xchg   ebp,eax
  4136a7:	jecxz  0x4136ff
  4136a9:	test   al,0x9
  4136ab:	push   ecx
  4136ac:	fst    QWORD PTR [ebx-0x2cf933ac]
  4136b2:	mov    ss,WORD PTR [ecx-0x6c]
  4136b5:	ret    
  4136b6:	das    
  4136b7:	sub    al,0x44
  4136b9:	nop
  4136ba:	(bad)  
  4136bc:	and    dl,BYTE PTR [ebx+0x5692acb]
  4136c2:	test   DWORD PTR [edi],edi
  4136c4:	sub    eax,0xc04e907b
  4136c9:	out    dx,al
  4136ca:	bound  ebp,QWORD PTR ds:0x9253704a
  4136d0:	jne    0x4136cf
  4136d2:	mov    ah,0x93
  4136d4:	jae    0x4136e3
  4136d6:	in     eax,0x2a
  4136d8:	jmp    0x41370e
  4136da:	addr16 push 0x2b5023f9
  4136e0:	sub    eax,0xf3cbf780
  4136e5:	or     esp,DWORD PTR [eax+ebp*2]
  4136e8:	mov    edx,DWORD PTR [esi]
  4136ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136eb:	push   edx
  4136ec:	dec    eax
  4136ed:	jg     0x413757
  4136ef:	aaa    
  4136f0:	mov    ds:0x24fad07c,al
  4136f5:	dec    ecx
  4136f6:	jmp    FWORD PTR [eax-0x64]
  4136f9:	(bad)  
  4136fa:	sbb    BYTE PTR [edi-0x53],ah
  4136fd:	loope  0x413689
  4136ff:	pusha  
  413700:	xor    al,0x80
  413702:	mov    ebx,esp
  413704:	mov    ecx,0x4b5cf251
  413709:	fwait
  41370a:	(bad)  
  41370b:	pop    ecx
  41370c:	xor    DWORD PTR [edi+0x6ff688a7],0xebe168e6
  413716:	popa   
  413717:	pop    esp
  413718:	cmp    DWORD PTR [edi+0x15],edi
  41371b:	std    
  41371c:	dec    edi
  41371d:	call   0x28c1:0xad05662a
  413724:	xor    BYTE PTR [ecx-0x2d4a63b5],0x7b
  41372b:	or     DWORD PTR [edi-0x5],edi
  41372e:	cmc    
  41372f:	rcr    BYTE PTR [esi],0x7f
  413732:	sahf   
  413733:	jb     0x413786
  413735:	mov    bl,0xb1
  413737:	jbe    0x4137af
  413739:	mov    ebx,0xad27b9ee
  41373e:	pop    es
  41373f:	mov    ch,0x7d
  413741:	nop
  413742:	push   cs
  413743:	imul   ebx,DWORD PTR [ecx+0x12c266c6],0xffffffd7
  41374a:	lock repz and ebx,DWORD PTR [edi]
  41374e:	xchg   BYTE PTR [ebx+edx*1+0x30],dl
  413752:	adc    ah,al
  413754:	(bad)  
  413755:	mov    eax,edi
  413757:	mov    ah,0x46
  413759:	and    DWORD PTR [ebx+0x6f74780],ebp
  41375f:	cmc    
  413760:	xor    esp,DWORD PTR [ebx+0x3c]
  413763:	jle    0x413798
  413765:	out    dx,al
  413766:	mov    dh,0xe5
  413768:	jbe    0x413763
  41376a:	out    dx,al
  41376b:	(bad)  
  41376c:	cmp    edx,esi
  41376e:	and    al,0x2a
  413770:	in     eax,dx
  413771:	mov    DWORD PTR [esi-0x7e],ecx
  413774:	or     BYTE PTR [ebx],0x6c
  413777:	in     al,dx
  413778:	xchg   ebp,eax
  413779:	mov    ebp,0xe7b3332d
  41377e:	mov    ebx,0x306e0f34
  413783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413785:	push   0xffffffa3
  413787:	ins    BYTE PTR es:[edi],dx
  413788:	add    BYTE PTR [ecx+ebx*1-0x7d],0x3a
  41378d:	cwde   
  41378e:	adc    al,0x77
  413790:	ss cli 
  413792:	mov    edi,0xede05302
  413797:	push   esp
  413798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413799:	ret    0x12dc
  41379c:	dec    ecx
  41379d:	jne    0x4137af
  41379f:	pop    ds
  4137a0:	mov    ebp,0xdad92707
  4137a5:	loope  0x41379c
  4137a7:	add    al,0x64
  4137a9:	fdiv   st(7),st
  4137ab:	js     0x41376e
  4137ad:	inc    BYTE PTR [ebx-0x6d]
  4137b0:	mov    eax,ds:0x23cf1ef6
  4137b5:	lahf   
  4137b6:	push   esi
  4137b7:	sahf   
  4137b8:	je     0x4137a1
  4137ba:	sbb    DWORD PTR ss:[ebx+0x2e],ecx
  4137be:	push   0xe50f0059
  4137c3:	loope  0x4137f7
  4137c5:	int    0x9b
  4137c7:	ins    BYTE PTR es:[edi],dx
  4137c8:	pusha  
  4137c9:	push   eax
  4137ca:	jl     0x4137ca
  4137cc:	dec    edi
  4137cd:	cld    
  4137ce:	sub    al,0x57
  4137d0:	les    edx,FWORD PTR [ecx+0x291021ff]
  4137d6:	pop    ss
  4137d7:	nop
  4137d8:	lock mov eax,ds:0x58957d60
  4137de:	repz dec ebx
  4137e0:	jbe    0x413771
  4137e2:	pop    ebx
  4137e3:	mov    esp,0xda03c3ec
  4137e8:	inc    eax
  4137e9:	mov    esp,eax
  4137eb:	mov    al,ds:0xc129392b
  4137f0:	test   al,0xe2
  4137f2:	in     al,dx
  4137f3:	rol    ebp,0x42
  4137f6:	jbe    0x41377f
  4137f8:	sub    BYTE PTR [ebx-0x72],0xbb
  4137fc:	call   0xf0e52c41
  413801:	xor    al,0xcf
  413803:	retf   0xc341
  413806:	jle    0x4137cf
  413808:	pop    edi
  413809:	arpl   WORD PTR [ebx],cx
  41380b:	ins    DWORD PTR es:[edi],dx
  41380c:	jmp    0x4137bb
  41380e:	mov    eax,DWORD PTR [ecx+0x1f5c2e14]
  413814:	sub    esp,DWORD PTR [ecx]
  413816:	adc    DWORD PTR [ebp-0x10],ecx
  413819:	dec    esi
  41381a:	(bad)  
  41381b:	sub    DWORD PTR [ecx+0x3a],edi
  41381e:	dec    ecx
  41381f:	adc    esp,DWORD PTR [ebp-0x1eb3cad4]
  413825:	sub    ebp,edi
  413827:	and    bl,ch
  413829:	cld    
  41382a:	addr16 shr dl,1
  41382d:	cmp    BYTE PTR [eax+0x1c],dh
  413830:	loopne 0x413800
  413832:	repnz popf 
  413834:	shl    edi,cl
  413836:	shr    edi,1
  413838:	inc    edi
  413839:	xlat   BYTE PTR ds:[ebx]
  41383a:	jle    0x413889
  41383c:	mov    ds:0x23dad4f4,al
  413841:	mov    DWORD PTR [ecx],eax
  413843:	cmp    ch,BYTE PTR [esi+0x59efadc3]
  413849:	add    al,0x6a
  41384b:	sti    
  41384c:	stc    
  41384d:	mov    bh,0x9b
  41384f:	and    cl,dh
  413851:	scas   eax,DWORD PTR es:[edi]
  413852:	jo     0x4137ed
  413854:	aad    0x7c
  413856:	pop    edi
  413857:	pop    es
  413858:	inc    esp
  413859:	retf   
  41385a:	sahf   
  41385b:	out    dx,eax
  41385c:	mov    esp,0xb12d771b
  413861:	pop    ecx
  413862:	jns    0x4138c7
  413864:	or     dh,BYTE PTR [ebx+0x35d6d87f]
  41386a:	sub    DWORD PTR [ecx+0x4c],edi
  41386d:	dec    esi
  41386e:	xchg   ebp,eax
  41386f:	fdiv   DWORD PTR [edi+ebp*2-0x74]
  413873:	jae    0x41384a
  413875:	fild   QWORD PTR [ebx-0x192188fa]
  41387b:	add    eax,0x6920703a
  413880:	cs out dx,eax
  413882:	push   0x2c
  413884:	xchg   esi,eax
  413885:	inc    esp
  413887:	aam    0xe1
  413889:	add    BYTE PTR [eax],0x69
  41388c:	(bad)  
  41388d:	adc    DWORD PTR [edi+edx*8],edi
  413890:	or     esp,ebx
  413892:	sar    al,1
  413894:	int3   
  413895:	or     eax,DWORD PTR [edi+ecx*4-0x650365a]
  41389c:	js     0x41389c
  41389e:	test   DWORD PTR [edx+0x1b],0xec1134ae
  4138a5:	mov    al,0x1c
  4138a7:	popw   es
  4138a9:	gs leave 
  4138ab:	idiv   BYTE PTR [edi-0x862706f]
  4138b1:	xchg   BYTE PTR [ebx],al
  4138b3:	xor    edi,ecx
  4138b5:	push   ss
  4138b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b7:	frndint 
  4138b9:	lahf   
  4138ba:	out    0xce,eax
  4138bc:	dec    ecx
  4138bd:	jmp    0x6bfe:0x4da11da1
  4138c4:	jmp    0x871e71f6
  4138c9:	xor    ebp,DWORD PTR [edx+0x16c474e5]
  4138cf:	call   0xb55664f8
  4138d4:	or     eax,0x948233f
  4138d9:	mov    ds:0x59edc039,al
  4138de:	lds    edi,FWORD PTR [ecx+eax*8]
  4138e1:	int3   
  4138e2:	in     eax,dx
  4138e3:	imul   BYTE PTR [eax]
  4138e5:	sub    ecx,DWORD PTR [ebp+0x678081cc]
  4138eb:	inc    esp
  4138ec:	(bad)  
  4138ed:	jbe    0x413966
  4138ef:	iret   
  4138f0:	push   ecx
  4138f1:	xchg   edx,eax
  4138f2:	retf   
  4138f3:	xchg   esp,eax
  4138f4:	ror    eax,1
  4138f6:	test   BYTE PTR [edx+ebx*4],bh
  4138f9:	inc    esi
  4138fa:	arpl   WORD PTR [edx],ax
  4138fc:	add    ecx,DWORD PTR [edx+0xa]
  4138ff:	lea    esp,[esi+eax*1-0x32dbe72a]
  413906:	and    dl,dl
  413908:	ins    DWORD PTR es:[edi],dx
  413909:	mov    bh,0x3c
  41390b:	xchg   edx,eax
  41390c:	aam    0x3d
  41390e:	ins    BYTE PTR es:[edi],dx
  41390f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413910:	repz jae 0x413937
  413913:	out    dx,al
  413914:	mov    bh,0xc0
  413916:	sub    bl,cl
  413918:	pop    ecx
  413919:	push   edx
  41391a:	mov    ch,dl
  41391c:	and    DWORD PTR [ebp-0x6a],edx
  41391f:	adc    esp,esp
  413921:	clc    
  413922:	stc    
  413923:	lods   al,BYTE PTR ds:[esi]
  413924:	cli    
  413925:	push   ds
  413926:	lock sub al,0x8
  413929:	aas    
  41392a:	xor    eax,0xc5cfca2b
  41392f:	(bad)  
  413930:	or     BYTE PTR [edx+0x34],dl
  413933:	xchg   edi,eax
  413934:	or     al,0xd0
  413936:	jae    0x4138d8
  413938:	or     eax,0xaca9d884
  41393d:	inc    edi
  41393e:	dec    ecx
  41393f:	ins    DWORD PTR es:[edi],dx
  413940:	ins    DWORD PTR es:[edi],dx
  413941:	loope  0x4139b5
  413943:	dec    edx
  413944:	pop    ebx
  413945:	rcr    DWORD PTR [ecx-0x51],cl
  413948:	imul   eax,DWORD PTR [esi-0x7c2c1ff],0x836ebdf
  413952:	mov    bh,0xb1
  413954:	inc    eax
  413955:	outs   dx,DWORD PTR ds:[esi]
  413956:	cli    
  413957:	mov    BYTE PTR [edi+0x3cd54915],ah
  41395d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41395e:	retf   0x1b93
  413961:	xor    eax,DWORD PTR [edi]
  413963:	mov    cl,BYTE PTR [eax]
  413965:	es cmp edx,edi
  413968:	in     eax,dx
  413969:	mov    cl,0x4c
  41396b:	fbstp  TBYTE PTR [eax]
  41396d:	das    
  41396e:	in     eax,dx
  41396f:	mov    ds:0x7043daa0,eax
  413974:	or     dh,BYTE PTR [eax]
  413976:	xor    al,0x51
  413978:	loop   0x4139a2
  41397a:	int    0xbc
  41397c:	bswap  ebx
  41397e:	mov    ebp,DWORD PTR [ecx+eiz*2-0x64ff61a7]
  413985:	mov    al,0x5e
  413987:	ss inc edx
  413989:	leave  
  41398a:	mov    ch,0xd
  41398c:	sti    
  41398d:	and    eax,0xefccd27a
  413992:	lods   eax,DWORD PTR ds:[esi]
  413993:	call   0xce55cf31
  413998:	dec    edx
  413999:	add    DWORD PTR [eax-0x5e],edi
  41399c:	mov    al,ds:0xc2c779af
  4139a1:	fild   QWORD PTR [esi-0x18]
  4139a4:	js     0x4139f1
  4139a6:	sbb    DWORD PTR [eax+0x1b],edx
  4139a9:	sub    cl,BYTE PTR [edx+0x2c]
  4139ac:	jo     0x4139d6
  4139ae:	jb     0x413946
  4139b0:	scas   eax,DWORD PTR es:[edi]
  4139b1:	imul   eax,DWORD PTR [eax+0x5a],0x3f
  4139b5:	xchg   esi,eax
  4139b6:	sbb    DWORD PTR [esi+ebx*1],ecx
  4139b9:	mov    ebp,0x27f98892
  4139be:	popa   
  4139bf:	and    bl,BYTE PTR ds:[ecx-0x638b8c6f]
  4139c6:	ins    BYTE PTR es:[edi],dx
  4139c7:	div    edi
  4139c9:	int3   
  4139ca:	dec    eax
  4139cb:	and    al,BYTE PTR [bp+di]
  4139ce:	xchg   edx,eax
  4139cf:	ds pop ebp
  4139d1:	jb     0x4139e7
  4139d3:	or     DWORD PTR [eax+0x7f5d5fb2],edi
  4139d9:	dec    ebp
  4139da:	add    ecx,DWORD PTR [ebx]
  4139dc:	stos   DWORD PTR es:[edi],eax
  4139dd:	pop    edi
  4139de:	add    ch,BYTE PTR [edi-0x2b]
  4139e1:	aas    
  4139e2:	mov    edi,DWORD PTR [ebx-0x20]
  4139e5:	pushf  
  4139e6:	adc    BYTE PTR gs:[ecx],dl
  4139e9:	cmp    esp,DWORD PTR [esi]
  4139eb:	cwde   
  4139ec:	jl     0x413a40
  4139ee:	jb     0x413999
  4139f0:	dec    esi
  4139f1:	xchg   ebx,eax
  4139f2:	ds jnp 0x413a2a
  4139f5:	mov    edx,0x59364d7d
  4139fa:	xor    eax,0x67c49211
  4139ff:	jmp    0x8bca0961
  413a04:	inc    ecx
  413a05:	outs   dx,DWORD PTR ds:[esi]
  413a06:	and    BYTE PTR [ebp-0x17],ah
  413a09:	out    0x6f,eax
  413a0b:	mov    ebx,0xae6f16e
  413a10:	bound  ecx,QWORD PTR [edx]
  413a12:	clc    
  413a13:	lods   eax,DWORD PTR ds:[esi]
  413a14:	repz dec ebp
  413a16:	not    BYTE PTR [edi-0x42]
  413a19:	or     DWORD PTR [eax-0x1238112f],eax
  413a1f:	(bad)  
  413a21:	sub    DWORD PTR [esi+0x77a2e537],edx
  413a27:	sub    al,0xc3
  413a29:	out    0x77,al
  413a2b:	bound  ebx,QWORD PTR [edx+0x7f6fa1d9]
  413a31:	addr16 aad 0xcf
  413a34:	inc    esp
  413a35:	in     eax,0xd9
  413a37:	adc    al,0xd6
  413a39:	inc    esi
  413a3a:	add    bl,BYTE PTR [ebx]
  413a3c:	fcom   QWORD PTR es:[eax+eiz*8-0x7cff56c0]
  413a44:	mov    al,0x8f
  413a46:	pop    esi
  413a47:	stos   BYTE PTR es:[edi],al
  413a48:	push   esp
  413a49:	aam    0x1a
  413a4b:	pop    ebx
  413a4c:	pop    eax
  413a4d:	xlat   BYTE PTR ds:[ebx]
  413a4e:	and    BYTE PTR [ebx-0x46],ah
  413a51:	or     DWORD PTR [edx-0xf3cbcdd],edi
  413a57:	(bad)  
  413a58:	sahf   
  413a59:	pop    DWORD PTR [eax]
  413a5b:	or     BYTE PTR [esi],0x6e
  413a5e:	dec    eax
  413a5f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413a61:	shl    dl,1
  413a63:	xor    eax,0x577b0854
  413a68:	test   eax,0xcd2fc8b
  413a6d:	inc    ebp
  413a6e:	xor    ebp,DWORD PTR [esi+esi*8+0x7fd6a941]
  413a75:	sub    al,BYTE PTR [esi-0x7d958a48]
  413a7b:	cli    
  413a7c:	jmp    0xcab9ca7f
  413a81:	jbe    0x413a67
  413a83:	jl     0x413a3f
  413a85:	enter  0x235f,0x8c
  413a89:	add    eax,0x32d40f0c
  413a8e:	icebp  
  413a8f:	sbb    al,0x7b
  413a91:	(bad)  
  413a92:	xlat   BYTE PTR ds:[ebx]
  413a93:	icebp  
  413a94:	(bad)  
  413a95:	aad    0x40
  413a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a98:	pop    esp
  413a99:	dec    ecx
  413a9a:	mov    ah,0x4d
  413a9c:	enter  0xde59,0x44
  413aa0:	adc    eax,DWORD PTR [ebx-0x6a]
  413aa3:	xor    dl,bl
  413aa5:	mov    edi,ebx
  413aa7:	xchg   BYTE PTR ds:[edx+0x161d9c83],ah
  413aae:	and    DWORD PTR [ecx+0x42],esi
  413ab1:	mov    edi,0x918d982
  413ab6:	inc    esp
  413ab7:	out    0x34,al
  413ab9:	es inc eax
  413abb:	or     BYTE PTR [ebp-0x21f12863],dh
  413ac1:	jmp    0x413a92
  413ac3:	(bad)  
  413ac4:	(bad)  
  413ac5:	std    
  413ac6:	push   ds
  413ac7:	cld    
  413ac8:	adc    ax,0xe660
  413acc:	sub    eax,0x270dc410
  413ad1:	push   ecx
  413ad2:	sub    edx,DWORD PTR [esi-0x30db99a3]
  413ad8:	mov    BYTE PTR [ebx],cl
  413ada:	dec    esp
  413adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413adc:	adc    DWORD PTR [edx+0x7f2fd463],edi
  413ae2:	adc    eax,0xd333e47d
  413ae7:	and    esi,DWORD PTR [edx-0x65]
  413aea:	pop    ecx
  413aeb:	dec    eax
  413aec:	xor    al,0x74
  413aee:	xchg   esi,eax
  413aef:	aaa    
  413af0:	xlat   BYTE PTR ds:[ebx]
  413af1:	jmp    0x174a:0x574485eb
  413af8:	inc    ebp
  413af9:	lahf   
  413afa:	stos   BYTE PTR es:[edi],al
  413afb:	xchg   cl,ah
  413afd:	clc    
  413afe:	addr16 (bad) 
  413b00:	mov    esi,ds
  413b02:	inc    esp
  413b03:	loopne 0x413b76
  413b05:	pop    edx
  413b06:	leave  
  413b07:	ret    
  413b08:	adc    bl,BYTE PTR [ecx+0x6bf5b0b2]
  413b0e:	(bad)  
  413b0f:	jne    0x413b07
  413b11:	mov    bh,0xcf
  413b13:	push   0x20
  413b15:	push   edi
  413b16:	lea    ebx,[ebp+ebp*2-0x5b20ab69]
  413b1d:	cmp    esi,DWORD PTR [edx-0xa]
  413b20:	into   
  413b21:	cmp    ah,BYTE PTR [ecx]
  413b23:	repnz sbb al,0x42
  413b26:	gs sub edi,0x79
  413b2a:	pop    ebx
  413b2b:	imul   esp,DWORD PTR [esi-0x7966f9dd],0x7a89dde7
  413b35:	test   ch,dl
  413b37:	push   edx
  413b38:	push   edi
  413b39:	leave  
  413b3a:	push   ss
  413b3b:	mov    al,ds:0xbc56ecfb
  413b40:	cmp    BYTE PTR [edx+eax*1+0x33],ah
  413b44:	inc    ebp
  413b45:	fs push esp
  413b47:	adc    DWORD PTR [eax],eax
  413b49:	js     0x413bc3
  413b4b:	sbb    ah,BYTE PTR ds:0x8f35371c
  413b51:	sub    BYTE PTR [ebp*8+0x77fe5c0a],al
  413b58:	mov    ecx,0x9a172299
  413b5d:	dec    esi
  413b5e:	test   esi,esi
  413b60:	xchg   esp,eax
  413b61:	pop    esi
  413b62:	sahf   
  413b63:	dec    ebp
  413b64:	js     0x413b48
  413b66:	pop    edi
  413b67:	jge    0x413b49
  413b69:	in     al,0xb8
  413b6b:	dec    esp
  413b6c:	push   esp
  413b6d:	dec    esp
  413b6e:	jne    0x413b28
  413b70:	cs pushf 
  413b72:	cmc    
  413b73:	sub    eax,esp
  413b75:	inc    ebp
  413b76:	inc    esi
  413b77:	jecxz  0x413b81
  413b79:	stc    
  413b7a:	repz mov WORD PTR [edi+0x5334040f],cs
  413b81:	and    BYTE PTR [eax+0x1a55e42a],bl
  413b87:	and    dh,cl
  413b89:	popa   
  413b8a:	push   esp
  413b8b:	cmp    al,0x85
  413b8d:	sbb    eax,0x393b068
  413b92:	sub    DWORD PTR [ebp+0x67c16bc8],esi
  413b98:	sub    BYTE PTR ds:0xc4b97be6,0xf3
  413b9f:	nop
  413ba0:	cmp    eax,0x96bb2f85
  413ba5:	mov    ds:0x96d8cd76,al
  413baa:	sbb    eax,0xbcbb8810
  413baf:	mov    edi,0xb6c9f56c
  413bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb5:	xchg   ebx,eax
  413bb6:	push   ecx
  413bb7:	and    dl,dl
  413bb9:	repnz and BYTE PTR [ecx+0x57072a3d],dl
  413bc0:	dec    ebx
  413bc1:	repnz div ebx
  413bc4:	dec    edx
  413bc5:	add    eax,ecx
  413bc7:	arpl   WORD PTR [esi-0x6f],si
  413bca:	xchg   esi,eax
  413bcb:	pushf  
  413bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bce:	sbb    DWORD PTR [eax+0x7110104b],0x581c2a57
  413bd8:	pushf  
  413bd9:	gs cdq 
  413bdb:	cmp    edx,DWORD PTR [edx-0x2a]
  413bde:	or     al,0x75
  413be0:	mov    edx,0x15f67a5b
  413be5:	pop    edx
  413be6:	adc    edx,DWORD PTR [edx+0x2c120a3e]
  413bec:	mov    bh,0xb5
  413bee:	xor    al,0x74
  413bf0:	or     BYTE PTR [ecx],cl
  413bf2:	push   eax
  413bf3:	es ret 
  413bf5:	adc    BYTE PTR [esi+ebx*4],bh
  413bf8:	ins    DWORD PTR es:[edi],dx
  413bf9:	cmovle eax,DWORD PTR [ebx]
  413bfc:	stos   BYTE PTR es:[edi],al
  413bfd:	int    0x5b
  413bff:	aam    0xc7
  413c01:	push   eax
  413c02:	stc    
  413c03:	sbb    eax,0xc3b62d9e
  413c08:	adc    DWORD PTR [esi+0x6d],edx
  413c0b:	mov    ah,0xce
  413c0d:	add    DWORD PTR [ebp-0x76176eb3],ecx
  413c13:	fs jne 0x413c74
  413c16:	push   edi
  413c17:	pop    esi
  413c18:	fwait
  413c19:	ins    BYTE PTR es:[edi],dx
  413c1a:	scas   al,BYTE PTR es:[edi]
  413c1b:	jnp    0x413ba9
  413c1d:	popf   
  413c1e:	rcr    esi,cl
  413c20:	gs push es
  413c22:	cmp    eax,0xe2d2f374
  413c27:	test   al,0x43
  413c29:	xor    DWORD PTR [edi-0x7a],esi
  413c2c:	pop    ds
  413c2d:	fs ins DWORD PTR es:[edi],dx
  413c2f:	nop
  413c30:	mov    esi,0xe0b2bf83
  413c35:	xor    esi,DWORD PTR [eax+0x7326326e]
  413c3b:	jb     0x413ca9
  413c3d:	je     0x413bc1
  413c3f:	push   eax
  413c40:	je     0x413c74
  413c42:	jo     0x413c6b
  413c44:	or     eax,0xa48f3181
  413c49:	or     edx,DWORD PTR [ebp+0x5e]
  413c4c:	scas   eax,DWORD PTR es:[edi]
  413c4d:	xor    eax,0x36c8246c
  413c52:	sbb    al,0xb9
  413c54:	mov    eax,0xb2aac078
  413c59:	mov    edi,cs
  413c5b:	cs xchg edi,eax
  413c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5e:	jmp    0x4330f742
  413c63:	push   ebp
  413c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c65:	pop    ebx
  413c66:	das    
  413c67:	pop    ecx
  413c68:	in     al,0xd7
  413c6a:	add    BYTE PTR [ebp+edx*1+0xcb145dd],cl
  413c71:	mov    ebp,0x602547e6
  413c76:	jmp    0x413bfd
  413c78:	jo     0x413cd7
  413c7a:	add    eax,0xa6df3a9a
  413c7f:	jnp    0x413c10
  413c81:	int3   
  413c82:	sub    ebp,ebp
  413c84:	jmp    0x45625da1
  413c89:	(bad)  
  413c8a:	leave  
  413c8b:	cdq    
  413c8c:	push   es
  413c8d:	test   al,0x1f
  413c8f:	adc    DWORD PTR [ebx+0x75],edi
  413c92:	sar    BYTE PTR [ebx-0x4c86ea29],0xb7
  413c99:	jl     0x413c4a
  413c9b:	sub    ebp,DWORD PTR [edx-0x868e9ee]
  413ca1:	sbb    al,0x1b
  413ca3:	leave  
  413ca4:	push   esi
  413ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca6:	jmp    0x91d1448a
  413cab:	repnz imul ebp,DWORD PTR [ecx+0x5024ed67],0xffffffff
  413cb3:	gs mov cs,edx
  413cb6:	jb     0x413cef
  413cb8:	jno    0x413c9e
  413cba:	sbb    BYTE PTR [ebx-0x4a],bl
  413cbd:	xchg   edi,eax
  413cbe:	xchg   BYTE PTR [edi+0x4f],al
  413cc1:	fcmovbe st,st(3)
  413cc3:	jp     0x413cdf
  413cc5:	mov    esp,0x2d09275
  413cca:	js     0x413cc5
  413ccc:	xchg   DWORD PTR [ebx-0x7d08cd7a],edx
  413cd2:	cli    
  413cd3:	rcr    DWORD PTR [ecx],0x9f
  413cd6:	dec    esi
  413cd7:	push   esi
  413cd8:	daa    
  413cd9:	mov    al,0xd2
  413cdb:	xor    al,0xcd
  413cdd:	push   DWORD PTR [edx+0x0]
  413ce0:	retf   
  413ce1:	aaa    
  413ce2:	std    
  413ce3:	cmp    esp,edi
  413ce5:	mov    al,0x73
  413ce7:	jmp    0xaf67:0x2960fec3
  413cee:	sub    ebp,0xffffff89
  413cf1:	ds leave 
  413cf3:	(bad)
  413cf6:	ja     0x413ca9
  413cf8:	mov    edx,0x7f252070
  413cfd:	mov    ebp,0x43c92f5d
  413d02:	es mov cl,0xa
  413d05:	sbb    al,0x22
  413d07:	cmp    eax,DWORD PTR [edi+0x34]
  413d0a:	leave  
  413d0b:	mov    WORD PTR [ebp-0x5d9b160e],fs
  413d11:	(bad)  
  413d12:	push   cs
  413d13:	outs   dx,BYTE PTR ds:[esi]
  413d14:	fistp  DWORD PTR [ebx+0x3e608c5a]
  413d1a:	or     DWORD PTR [eax+0x45153aa4],esi
  413d20:	jmp    0x413ca6
  413d22:	pop    es
  413d23:	adc    DWORD PTR [ecx+0x7c],esp
  413d26:	jle    0x413da7
  413d28:	sbb    dh,0x5f
  413d2b:	inc    ecx
  413d2c:	cmp    BYTE PTR [ebp+0x56],cl
  413d2f:	cmp    al,cl
  413d31:	into   
  413d32:	add    BYTE PTR [esi-0x14],0xed
  413d36:	fnstenv [ebx-0x616cf3ac]
  413d3c:	pop    ebx
  413d3d:	xchg   edx,eax
  413d3e:	jo     0x413d1e
  413d40:	and    eax,0x1801353d
  413d45:	les    ebp,FWORD PTR [ebx-0x25255157]
  413d4b:	lock xchg ecx,eax
  413d4d:	cli    
  413d4e:	or     ecx,DWORD PTR [edi-0x22]
  413d51:	ds mov bh,0x5f
  413d54:	jne    0x413d74
  413d56:	push   edx
  413d57:	fstp   DWORD PTR [esi-0x39]
  413d5a:	ds push ebp
  413d5c:	sub    dh,BYTE PTR [edx]
  413d5e:	test   DWORD PTR [ebx-0x1e9800bf],edx
  413d64:	pop    ss
  413d65:	call   0xf8d7:0x7788aaa2
  413d6c:	xor    al,0xfa
  413d6e:	in     eax,0x97
  413d70:	fwait
  413d71:	arpl   sp,sp
  413d73:	cwde   
  413d74:	sub    eax,0x63eeb3e3
  413d79:	mov    edi,0x6ae71976
  413d7e:	lods   eax,DWORD PTR ds:[esi]
  413d7f:	and    ecx,ebx
  413d81:	sub    al,0xf7
  413d83:	dec    edx
  413d84:	lods   eax,DWORD PTR ds:[esi]
  413d85:	jecxz  0x413d5b
  413d87:	mov    al,0x17
  413d89:	push   ebx
  413d8a:	adc    al,0xa
  413d8c:	push   edx
  413d8d:	mov    eax,ds:0xcf42a4e8
  413d92:	sar    DWORD PTR [ecx],cl
  413d94:	test   BYTE PTR fs:[ebp+0x4c],bl
  413d98:	xchg   ebx,eax
  413d99:	jnp    0x413e13
  413d9b:	cmp    al,0xd4
  413d9d:	xor    DWORD PTR [ebx+esi*1],esi
  413da0:	or     DWORD PTR [eax],0xc117a4ce
  413da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da7:	les    edx,FWORD PTR [esi-0x77]
  413daa:	ja     0x413d44
  413dac:	js     0x413d9b
  413dae:	clc    
  413daf:	stos   BYTE PTR es:[edi],al
  413db0:	aaa    
  413db1:	sti    
  413db2:	js     0x413e0f
  413db4:	enter  0x9b04,0x3a
  413db8:	gs mov esi,0x30536183
  413dbe:	dec    esi
  413dbf:	test   BYTE PTR ds:0x871bac64,al
  413dc5:	add    DWORD PTR [ecx],edi
  413dc7:	popa   
  413dc8:	stos   DWORD PTR es:[edi],eax
  413dc9:	inc    edx
  413dca:	add    edx,DWORD PTR [ebx-0x41504bf]
  413dd0:	shr    BYTE PTR [ebx],1
  413dd2:	(bad)  
  413dd3:	(bad)  
  413dd4:	mov    esp,0xc4a9583f
  413dd9:	mov    al,ch
  413ddb:	add    BYTE PTR [ebp-0x7d81ca15],bl
  413de1:	mov    edx,0xd2b9402c
  413de6:	cmc    
  413de7:	jp     0x413daf
  413de9:	push   ebx
  413dea:	lods   eax,DWORD PTR ds:[esi]
  413deb:	and    esp,ecx
  413ded:	sbb    ch,BYTE PTR [esi+eiz*4-0x20]
  413df1:	(bad)  
  413df2:	je     0x413e3e
  413df4:	xchg   edi,eax
  413df5:	mov    dh,0x9b
  413df7:	ret    
  413df8:	jbe    0x413dcf
  413dfa:	xchg   al,ch
  413dfc:	xor    BYTE PTR [edx+edx*1-0x688741e1],0x40
  413e04:	xor    edi,DWORD PTR [ebp+0x6013856e]
  413e0a:	lods   al,BYTE PTR ds:[esi]
  413e0b:	pop    es
  413e0c:	push   ss
  413e0d:	ins    BYTE PTR es:[edi],dx
  413e0e:	mov    eax,0x91621ff3
  413e13:	scas   eax,DWORD PTR es:[edi]
  413e14:	mov    ds:0xdbe7fea6,al
  413e19:	in     al,0x30
  413e1b:	(bad)  
  413e1c:	xor    ebx,edx
  413e1e:	mov    ebx,0xd2167cc3
  413e23:	jnp    0x413de6
  413e25:	inc    eax
  413e26:	xchg   edx,eax
  413e27:	mov    db0,eax
  413e2a:	xor    BYTE PTR [esi],cl
  413e2c:	mov    ah,0x7b
  413e2e:	xchg   bh,dh
  413e30:	into   
  413e31:	rcr    esi,0x1e
  413e34:	and    bl,ch
  413e36:	iret   
  413e37:	call   0xe9a7afe2
  413e3c:	imul   eax,ebx,0x75
  413e3f:	repz pop ebp
  413e41:	dec    ebx
  413e42:	rcr    DWORD PTR [ebx-0x4d9847fd],0x45
  413e49:	rcl    DWORD PTR [edx],0xcc
  413e4c:	cld    
  413e4d:	sbb    eax,0xf9463ad7
  413e52:	cs xchg ebp,eax
  413e54:	cli    
  413e55:	out    0x1b,al
  413e57:	repz (bad) 
  413e5a:	mov    cl,0x42
  413e5c:	push   es
  413e5d:	push   ss
  413e5e:	test   al,0xbf
  413e60:	leave  
  413e61:	cmp    eax,0xfba5d1cb
  413e66:	(bad)
  413e69:	cmp    al,0x94
  413e6b:	call   0x40167f6e
  413e70:	in     al,dx
  413e71:	dec    ebx
  413e72:	push   es
  413e73:	inc    ebp
  413e74:	cdq    
  413e75:	pop    ss
  413e76:	inc    eax
  413e77:	or     eax,0x728fc525
  413e7c:	lods   al,BYTE PTR ds:[esi]
  413e7d:	call   0x3c474cb1
  413e82:	sub    ebp,esi
  413e84:	jns    0x413e63
  413e86:	push   0x1dc7fae9
  413e8b:	ror    ebx,0xd0
  413e8e:	sti    
  413e8f:	retf   0xccad
  413e92:	fs jmp 0x413e8f
  413e95:	add    al,BYTE PTR [esi]
  413e97:	adc    al,0xe8
  413e99:	stos   DWORD PTR es:[edi],eax
  413e9a:	xor    ebp,DWORD PTR [eax]
  413e9c:	mov    DWORD PTR [ecx+0x1f],esi
  413e9f:	push   0xf1912c5b
  413ea4:	pusha  
  413ea5:	dec    eax
  413ea6:	push   edx
  413ea7:	scas   eax,DWORD PTR es:[edi]
  413ea8:	xchg   ecx,eax
  413ea9:	sbb    al,0x55
  413eab:	aam    0x3e
  413ead:	ret    0x4d62
  413eb0:	sbb    esi,DWORD PTR [ecx]
  413eb2:	sbb    BYTE PTR [esi+ecx*2+0x646b22a5],ch
  413eb9:	mov    ebx,0xfe450c40
  413ebe:	test   BYTE PTR [edi+0xf039b3b],cl
  413ec4:	repnz xchg edx,eax
  413ec6:	fs jp  0x413f05
  413ec9:	inc    edx
  413eca:	out    0x3d,eax
  413ecc:	sub    BYTE PTR [ebp+ecx*1-0x33],0xc5
  413ed1:	inc    edx
  413ed2:	mov    edi,0x85769bb1
  413ed7:	icebp  
  413ed8:	or     ebp,ecx
  413eda:	lods   eax,DWORD PTR ds:[esi]
  413edb:	stos   DWORD PTR es:[edi],eax
  413edc:	leave  
  413edd:	out    0xbd,al
  413edf:	imul   edi,DWORD PTR [ecx],0xffffffea
  413ee2:	sub    al,0xc5
  413ee4:	call   0x5589:0xec558b74
  413eeb:	or     cl,ch
  413eed:	mul    BYTE PTR [ebx]
  413eef:	add    BYTE PTR [eax],al
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     ah,bh
  413f25:	sbb    DWORD PTR [esi+eiz*8],ebx
  413f28:	mov    ch,0x73
  413f2a:	jp     0x413fa6
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413eb6
  413f31:	push   ebp
  413f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f33:	adc    al,0x51
  413f35:	or     BYTE PTR [ebx+0x12],dl
  413f38:	xchg   edx,eax
  413f39:	sbb    ecx,DWORD PTR [ebx-0x19]
  413f3c:	sahf   
  413f3d:	or     al,0x2
  413f3f:	(bad)  
  413f40:	cmp    al,0xb3
  413f42:	bound  ecx,QWORD PTR [edi-0x1d4562b5]
  413f48:	test   al,0xfc
  413f4a:	sti    
  413f4b:	dec    ecx
  413f4c:	sub    BYTE PTR [esi+0x5c189866],ah
  413f52:	into   
  413f53:	mov    dh,ah
  413f55:	aad    0x6e
  413f57:	jns    0x413fc5
  413f59:	hlt    
  413f5a:	push   edx
  413f5b:	imul   esi,DWORD PTR [edx-0x26],0x1874def
  413f62:	mov    al,ds:0x8ff42f37
  413f67:	lods   eax,DWORD PTR ds:[esi]
  413f68:	outs   dx,DWORD PTR ds:[esi]
  413f69:	inc    esp
  413f6a:	pop    esp
  413f6b:	fistp  DWORD PTR [ecx-0x11]
  413f6e:	push   esp
  413f6f:	aad    0x8c
  413f71:	jle    0x413f1a
  413f73:	sbb    al,0xfa
  413f75:	iret   
  413f76:	fisubr WORD PTR [edx-0x71]
  413f79:	es lahf 
  413f7b:	fcmovb st,st(0)
  413f7d:	xchg   dl,al
  413f7f:	dec    edx
  413f80:	pop    DWORD PTR [edx+0x2f846114]
  413f86:	outs   dx,BYTE PTR ds:[esi]
  413f87:	jno    0x413fa9
  413f89:	pop    es
  413f8a:	stos   DWORD PTR es:[edi],eax
  413f8b:	xchg   DWORD PTR [edi],eax
  413f8d:	mov    eax,ds:0xacdcfa81
  413f92:	pop    edx
  413f93:	imul   ecx,DWORD PTR [eax+0x3ef779cb],0xf373812f
  413f9d:	icebp  
  413f9e:	iret   
  413f9f:	es pop ss
  413fa1:	(bad)  
  413fa2:	dec    esi
  413fa3:	mul    dh
  413fa5:	add    bl,0x94
  413fa8:	shr    BYTE PTR [eax+ebp*1+0x562ded29],0x4e
  413fb0:	cld    
  413fb1:	pop    es
  413fb2:	inc    edx
  413fb3:	sub    edi,esi
  413fb5:	outs   dx,DWORD PTR ds:[esi]
  413fb6:	cmp    eax,0x20ded262
  413fbb:	mov    ?,WORD PTR [edx-0x14d28b66]
  413fc1:	scas   eax,DWORD PTR es:[edi]
  413fc2:	adc    edx,ebx
  413fc4:	mov    ecx,0xd8e5a9ec
  413fc9:	dec    ebx
  413fca:	gs test eax,0x9d250fc9
  413fd0:	mov    ch,0x5c
  413fd2:	fbstp  TBYTE PTR [eax+0xd]
  413fd5:	inc    eax
  413fd6:	test   edx,eax
  413fd8:	fdiv   DWORD PTR [ebx]
  413fda:	(bad)  
  413fdb:	sbb    DWORD PTR [ecx],ebp
  413fdd:	xor    DWORD PTR [ecx],eax
  413fdf:	cmp    esi,esi
  413fe1:	fwait
  413fe2:	xor    eax,0x8edef712
  413fe7:	cmp    BYTE PTR [ecx+0xcb01ba],dl
  413fed:	inc    esi
  413fee:	lods   al,BYTE PTR ds:[esi]
  413fef:	adc    BYTE PTR [esi+0xb],dl
  413ff2:	cmp    edi,DWORD PTR [edi+0xb222001]
  413ff8:	or     al,bl
  413ffa:	push   0xffffffca
  413ffc:	or     eax,0x257b7b65
  414001:	sub    DWORD PTR ds:0xa5dfea3c,0xe1308645
  41400b:	mov    eax,ds:0x81f14859
  414010:	add    ah,0x89
  414013:	in     eax,dx
  414014:	hlt    
  414015:	push   edi
  414016:	ror    BYTE PTR [esi-0x6d],cl
  414019:	or     ecx,DWORD PTR [esi+0x79dac41d]
  41401f:	sbb    eax,0x7a9780a9
  414024:	mov    ecx,0xb3086dbd
  414029:	scas   eax,DWORD PTR es:[edi]
  41402a:	aad    0x21
  41402c:	xor    al,0x87
  41402e:	inc    DWORD PTR [ebx+esi*4-0x51]
  414032:	mov    ecx,ebx
  414034:	adc    BYTE PTR ds:0x5446efb4,dl
  41403a:	mov    eax,0xce237e80
  41403f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414040:	push   es
  414041:	in     eax,0x9d
  414043:	call   0x3057:0x6820a41
  41404a:	loopne 0x414009
  41404c:	je     0x41400a
  41404e:	cmp    BYTE PTR [eax],bh
  414050:	mov    DWORD PTR [ebx-0x7ae0e16],edi
  414056:	nop
  414057:	in     eax,dx
  414058:	xor    al,0xb5
  41405a:	pop    eax
  41405b:	lds    esi,FWORD PTR es:[edx+edi*4+0x24038540]
  414063:	scas   al,BYTE PTR es:[edi]
  414064:	adc    ebx,DWORD PTR [ecx+0x4223fb60]
  41406a:	(bad)  
  41406b:	js     0x414016
  41406d:	mov    dl,0xc3
  41406f:	imul   edi
  414071:	div    DWORD PTR [edi+eiz*2-0x5193222f]
  414078:	mov    dh,0x81
  41407a:	cli    
  41407b:	mov    DWORD PTR [ebx-0x46],ecx
  41407e:	iret   
  41407f:	dec    ebx
  414080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414081:	inc    esi
  414082:	inc    edi
  414083:	adc    ebp,DWORD PTR [eax]
  414085:	les    esp,FWORD PTR [edx-0x2f]
  414088:	fidiv  DWORD PTR [ecx]
  41408a:	sbb    cl,ch
  41408c:	inc    edx
  41408d:	sub    ebp,DWORD PTR [ebp-0x7acf1941]
  414093:	sbb    BYTE PTR [esp+ebp*4+0x7f],bl
  414097:	popa   
  414098:	xchg   ecx,eax
  414099:	aam    0x7
  41409b:	dec    ebp
  41409c:	jb     0x414047
  41409e:	fs sbb al,0x33
  4140a1:	xchg   edx,eax
  4140a2:	xchg   edx,eax
  4140a3:	add    eax,0x19dccb59
  4140a8:	sub    bh,BYTE PTR [eax]
  4140aa:	aad    0x69
  4140ac:	mov    DWORD PTR ds:0xdb1f1ec5,0xbd1c9392
  4140b6:	test   DWORD PTR [ebx-0x2a],0xbde8378e
  4140bd:	xor    ecx,0x66
  4140c0:	(bad)  
  4140c1:	mov    ebp,0x80c753e1
  4140c6:	xlat   BYTE PTR ds:[ebx]
  4140c7:	arpl   WORD PTR [ebp-0x6f114077],ax
  4140cd:	dec    esi
  4140ce:	and    al,0x5e
  4140d0:	nop
  4140d1:	xor    ah,BYTE PTR [edi-0x35]
  4140d4:	push   0xc7177233
  4140d9:	pop    ecx
  4140da:	add    ebx,edx
  4140dc:	outs   dx,DWORD PTR ds:[esi]
  4140dd:	xor    al,0x2e
  4140df:	jecxz  0x41408e
  4140e1:	or     dl,BYTE PTR [eax]
  4140e3:	adc    BYTE PTR [eax],ch
  4140e5:	mov    edi,?
  4140e7:	icebp  
  4140e8:	pop    ds
  4140e9:	sbb    al,0x81
  4140eb:	jmp    0x41416a
  4140ed:	(bad)  
  4140ee:	xlat   BYTE PTR ds:[ebx]
  4140ef:	sbb    al,0x63
  4140f1:	or     DWORD PTR [edx+0x67],ecx
  4140f4:	loop   0x414161
  4140f6:	rcr    BYTE PTR ds:[ebp+0x5f],cl
  4140fa:	mov    ebx,0xe296c80e
  4140ff:	xchg   DWORD PTR [edi+0x184f1ed],esp
  414105:	xchg   edx,eax
  414106:	cli    
  414107:	addr16 mov al,0x70
  41410a:	inc    ecx
  41410b:	push   ebp
  41410c:	and    eax,0x9e8cccf2
  414111:	fidiv  DWORD PTR [ecx-0x4d]
  414114:	or     DWORD PTR [eax+ecx*4],0x75
  414118:	inc    edx
  414119:	mov    dl,0x56
  41411b:	loope  0x4140ad
  41411d:	mov    esi,DWORD PTR [edi-0x10]
  414120:	inc    edx
  414121:	addr16 cld 
  414123:	sbb    ch,ch
  414125:	add    al,0xbe
  414127:	bound  eax,QWORD PTR [ebx]
  414129:	cmp    DWORD PTR [edx+edi*2-0x31],eax
  41412d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41412e:	mov    al,0x1e
  414130:	sti    
  414131:	jns    0x4141a1
  414133:	sub    eax,0x7920f337
  414138:	add    ebp,DWORD PTR [esi-0x13]
  41413b:	scas   al,BYTE PTR es:[edi]
  41413c:	in     al,0x11
  41413e:	aas    
  41413f:	pop    edx
  414140:	mov    edx,0x337009e4
  414145:	scas   eax,DWORD PTR es:[edi]
  414146:	inc    esi
  414147:	pop    es
  414148:	pop    ecx
  414149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41414a:	clc    
  41414b:	cmp    ah,ah
  41414d:	or     BYTE PTR [eax],dl
  41414f:	jmp    0x3408ae16
  414154:	adc    BYTE PTR [eax],ch
  414156:	mov    esp,0xf3ec9c60
  41415b:	ret    
  41415c:	mov    dh,0x94
  41415e:	outs   dx,DWORD PTR fs:[esi]
  414160:	mov    bl,0x3e
  414162:	dec    esp
  414163:	(bad)  
  414164:	cmp    DWORD PTR ds:0xd365f455,0xad7b8048
  41416e:	push   edx
  41416f:	mov    esp,0xcea86c40
  414174:	push   es
  414175:	call   0x933e443f
  41417a:	jne    0x4141be
  41417c:	adc    al,0x8d
  41417e:	ds sti 
  414180:	ins    BYTE PTR es:[edi],dx
  414181:	fcom   QWORD PTR [eax]
  414183:	mov    WORD PTR [eax-0x5b],ds
  414186:	dec    ebp
  414187:	jns    0x414189
  414189:	jle    0x4141ce
  41418b:	mov    ah,0xbd
  41418d:	sbb    DWORD PTR [ebx+esi*1],edi
  414190:	adc    cl,BYTE PTR [ebp*4-0x6900b30c]
  414197:	cmp    cl,BYTE PTR fs:[eax-0x24fdb6a3]
  41419e:	shl    edi,0xef
  4141a1:	das    
  4141a2:	fistp  DWORD PTR ss:[ebx]
  4141a5:	pop    ebp
  4141a6:	and    cl,dl
  4141a8:	mov    bh,0xe7
  4141aa:	sbb    ebp,DWORD PTR [ebx-0x69035fc6]
  4141b0:	test   DWORD PTR [edi-0x2a],eax
  4141b3:	and    DWORD PTR [ecx+0x9f863d9],0xffffff89
  4141ba:	cmp    bh,BYTE PTR [ecx+esi*1-0x1e96bb03]
  4141c1:	sar    DWORD PTR [ecx-0x31433500],0x3d
  4141c8:	mov    DWORD PTR [edx],ebp
  4141ca:	call   0x6e76:0x930d452c
  4141d1:	aaa    
  4141d2:	in     al,0x4
  4141d4:	xchg   edx,eax
  4141d5:	jno    0x4141e3
  4141d7:	fs adc ebx,DWORD PTR gs:[ecx+ecx*8]
  4141dc:	mov    al,ds:0xc9fa0edf
  4141e1:	xor    DWORD PTR [esi],edx
  4141e3:	sub    dh,0x88
  4141e6:	push   eax
  4141e7:	mov    ah,0xb8
  4141e9:	ds jae 0x4141cf
  4141ec:	jg     0x41420e
  4141ee:	retw   0x63d1
  4141f2:	cmp    eax,0xf692f1ba
  4141f7:	leave  
  4141f8:	sub    al,0x35
  4141fa:	push   cs
  4141fb:	cmp    ah,BYTE PTR [eax+0x6]
  4141fe:	shr    BYTE PTR [eax+0x45],1
  414201:	ins    BYTE PTR es:[edi],dx
  414202:	aam    0x97
  414204:	push   0x65
  414206:	or     BYTE PTR [edi],0x83
  414209:	mov    ch,0xf2
  41420b:	add    BYTE PTR [esi],cl
  41420d:	sbb    ebp,esp
  41420f:	icebp  
  414210:	mul    edi
  414212:	jg     0x4141a3
  414214:	push   ebx
  414215:	jb     0x414259
  414217:	cmp    eax,DWORD PTR [edx+0x6e213544]
  41421d:	mov    ch,0xbb
  41421f:	sysret 
  414221:	mov    ebx,0x23972708
  414226:	add    esp,DWORD PTR [ebx]
  414228:	and    DWORD PTR [ebx-0x13],eax
  41422b:	fimul  WORD PTR [ecx+0x1a1df0a7]
  414231:	pop    ebp
  414232:	leave  
  414233:	add    al,0x8f
  414235:	adc    al,0x52
  414237:	aad    0x5b
  414239:	fld    DWORD PTR [ebx+0x20]
  41423c:	xchg   ecx,eax
  41423d:	push   eax
  41423e:	jg     0x41428c
  414240:	inc    edi
  414241:	es enter 0xa36a,0xf2
  414246:	movd   DWORD PTR [eax+0x45ff9c07],mm6
  41424d:	mov    ebx,0x71b8c19a
  414252:	js     0x414238
  414254:	int    0x62
  414256:	inc    ebp
  414257:	jmp    0x282b4459
  41425c:	pop    edx
  41425d:	and    ebx,DWORD PTR [esi+0x16385fad]
  414263:	sub    ebp,edi
  414265:	into   
  414266:	mov    al,0xe3
  414268:	addr16 (bad) 
  41426a:	fld    QWORD PTR [ecx]
  41426c:	jnp    0x414221
  41426e:	mov    BYTE PTR fs:[esi],ch
  414271:	daa    
  414272:	and    bh,BYTE PTR [eax-0xe]
  414275:	inc    ebx
  414276:	js     0x4142c9
  414278:	ins    BYTE PTR es:[edi],dx
  414279:	pop    ecx
  41427a:	push   ebp
  41427b:	je     0x4142cc
  41427d:	pushf  
  41427e:	(bad)  
  41427f:	aam    0x9e
  414281:	in     eax,0xbd
  414283:	dec    ebp
  414284:	mov    ebx,0x1e0c044b
  414289:	cld    
  41428a:	in     eax,0x71
  41428c:	and    DWORD PTR [ecx],edi
  41428e:	fldcw  WORD PTR [edi+0x63cbc6c2]
  414294:	add    al,0xde
  414296:	adc    BYTE PTR [eax+0xb],dh
  414299:	enter  0x79d5,0xaf
  41429d:	add    BYTE PTR [ebx+0x75720580],dh
  4142a3:	adc    al,0xd9
  4142a5:	std    
  4142a6:	push   edi
  4142a7:	shl    BYTE PTR [ebx-0x4e],0x9
  4142ab:	cmp    eax,0xa0526325
  4142b0:	inc    eax
  4142b1:	pop    ebp
  4142b2:	cli    
  4142b3:	push   esp
  4142b4:	cmp    al,0xa7
  4142b6:	push   es
  4142b7:	xchg   bh,ch
  4142b9:	mov    ch,0xa
  4142bb:	dec    esi
  4142bc:	mov    esp,0x7489383
  4142c1:	add    eax,0x45af0c9e
  4142c6:	(bad)  [ebp+0x5c9cbe0]
  4142cc:	jbe    0x41430c
  4142ce:	retf   0xc0d4
  4142d1:	mov    cl,0x50
  4142d3:	mov    dl,0xa0
  4142d5:	push   ecx
  4142d6:	les    esp,FWORD PTR [esi-0x25]
  4142d9:	jmp    0xdc4fe732
  4142de:	fimul  WORD PTR ds:0x4f3d1b48
  4142e4:	add    BYTE PTR [esi-0x17],al
  4142e7:	(bad)  
  4142e9:	sbb    bl,BYTE PTR [edi+0x1c]
  4142ec:	push   eax
  4142ed:	sbb    eax,0xe08ab42d
  4142f2:	xchg   edi,eax
  4142f3:	mov    es,WORD PTR [edx]
  4142f5:	mov    al,0xd6
  4142f7:	clc    
  4142f8:	loopne 0x414338
  4142fa:	repnz lods eax,DWORD PTR ds:[esi]
  4142fc:	push   ebx
  4142fd:	mov    ebp,0x82940600
  414302:	dec    edx
  414303:	cmp    DWORD PTR [esi+0x16adbca],esp
  414309:	push   ds
  41430a:	fcomp  QWORD PTR [eax]
  41430c:	loope  0x4142a0
  41430e:	adc    al,BYTE PTR [edx-0x42286019]
  414314:	prefetcht0 BYTE PTR [ebx]
  414317:	pop    ebp
  414318:	inc    esp
  414319:	sbb    esp,DWORD PTR [ecx+0x2403e1d]
  41431f:	aam    0x88
  414321:	jns    0x414338
  414323:	xor    eax,esp
  414325:	jnp    0x41437d
  414327:	add    edi,DWORD PTR [eax]
  414329:	ret    0xa50
  41432c:	sub    BYTE PTR [eax+0x7af872c5],0x3
  414333:	push   ecx
  414334:	or     eax,0xe1e26f4a
  414339:	(bad)  
  41433a:	test   al,0x4c
  41433c:	cmp    edx,DWORD PTR gs:[edx+0x62a3703d]
  414343:	sbb    ebx,DWORD PTR [edi+0x6c]
  414346:	fsub   QWORD PTR [ecx+0x5b]
  414349:	std    
  41434a:	cmp    al,0x25
  41434c:	jg     0x414314
  41434e:	mov    bl,0xc5
  414350:	sbb    BYTE PTR [esi],0x78
  414353:	mov    edi,0xab9689bf
  414358:	outs   dx,BYTE PTR ds:[esi]
  414359:	sub    bl,dl
  41435b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435c:	pop    edi
  41435d:	pusha  
  41435e:	js     0x4143c6
  414360:	xlat   BYTE PTR ds:[ebx]
  414361:	popf   
  414362:	out    0x42,eax
  414364:	xchg   esi,eax
  414365:	mov    edx,0x69d4c8f6
  41436a:	jmp    0xf3ee:0xebde0e5c
  414371:	mov    esp,0xaec6c322
  414376:	and    al,0xb8
  414378:	sub    BYTE PTR [ebx-0x7],ah
  41437b:	cwde   
  41437c:	mov    ds:0x66cf38d6,eax
  414381:	addr16 mov ebx,0x810f31aa
  414387:	jecxz  0x4143c0
  414389:	push   ds
  41438a:	sti    
  41438b:	sti    
  41438c:	inc    esp
  41438d:	mov    al,ds:0xb3197266
  414392:	pop    eax
  414393:	xchg   esi,eax
  414394:	push   ss
  414395:	jmp    0x414412
  414397:	repz pop ebp
  414399:	mov    ch,0xe8
  41439b:	div    DWORD PTR [esi+0x266c88c6]
  4143a1:	and    DWORD PTR [eax],ebp
  4143a3:	push   ebp
  4143a4:	jp     0x4143d6
  4143a6:	int3   
  4143a7:	jle    0x4143e9
  4143a9:	repz sbb ah,bh
  4143ac:	rol    ebx,cl
  4143ae:	aas    
  4143af:	jbe    0x4143d6
  4143b1:	xchg   ecx,eax
  4143b2:	mov    esp,0x39db371f
  4143b7:	adc    eax,0xa808d459
  4143bc:	cmp    BYTE PTR [eax],cl
  4143be:	push   0xdae7bf2f
  4143c3:	neg    BYTE PTR [edi]
  4143c5:	addr16 je 0x414401
  4143c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c9:	or     bl,BYTE PTR ds:[eax-0x6b477ff]
  4143d0:	popa   
  4143d1:	sar    DWORD PTR [ebx+0x21],cl
  4143d4:	and    esi,0xffffff84
  4143d7:	sahf   
  4143d8:	push   esi
  4143d9:	cmp    dh,dl
  4143db:	sub    eax,ebx
  4143dd:	not    DWORD PTR [ebx-0x2c5825d8]
  4143e3:	pop    DWORD PTR [esi]
  4143e5:	sub    DWORD PTR [edi+eax*4],esi
  4143e8:	mov    ebp,0xc491e6dd
  4143ed:	and    ch,ch
  4143ef:	or     dl,ch
  4143f1:	push   0xffffff8c
  4143f3:	out    0xa6,al
  4143f5:	jns    0x414412
  4143f7:	jnp    0x4143d9
  4143f9:	mov    ch,BYTE PTR [ecx+0x39]
  4143fc:	shr    BYTE PTR [ecx+edx*4+0x7a],1
  414400:	and    DWORD PTR [ebp+0x9b4a232],esi
  414406:	inc    ecx
  414407:	mov    eax,0x18ef8492
  41440c:	jmp    0x414430
  41440e:	hlt    
  41440f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414410:	cmp    al,0xc7
  414412:	dec    ebx
  414413:	dec    edi
  414414:	inc    ebp
  414415:	xchg   BYTE PTR [ecx+0x3995af21],cl
  41441b:	or     al,0x5d
  41441d:	ds jle 0x41446d
  414420:	fisub  DWORD PTR [edx+0x17]
  414423:	sbb    BYTE PTR [edi],bh
  414425:	and    al,0x30
  414427:	xchg   esp,eax
  414428:	pop    esi
  414429:	aas    
  41442a:	xor    DWORD PTR ds:0x4eabf495,eax
  414430:	into   
  414431:	ficom  DWORD PTR [edx-0x1fe2cefc]
  414437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414438:	mov    eax,ds:0x6fd7777d
  41443d:	xchg   esp,eax
  41443e:	stos   DWORD PTR es:[edi],eax
  41443f:	out    0x16,eax
  414441:	ds jb  0x4143fc
  414444:	jne    0x414489
  414446:	in     eax,dx
  414447:	test   al,0xe0
  414449:	jg     0x41444e
  41444b:	bound  ebx,QWORD PTR [ecx]
  41444d:	inc    ecx
  41444e:	pop    ebp
  41444f:	adc    al,0x13
  414451:	push   0xffffffed
  414453:	add    al,0xaf
  414455:	pushf  
  414456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414457:	(bad)  
  414458:	pop    ds
  414459:	lahf   
  41445a:	(bad)  
  41445b:	xor    ebp,DWORD PTR [ebx]
  41445d:	add    DWORD PTR [ebp+0x39c7da07],0x14e9d6bf
  414467:	jmp    0xdee92212
  41446c:	hlt    
  41446d:	(bad)  
  41446e:	loope  0x414424
  414470:	push   ss
  414471:	out    dx,eax
  414472:	out    dx,eax
  414473:	test   BYTE PTR [edx],dl
  414475:	repnz add esi,DWORD PTR [edx-0x499e5570]
  41447c:	gs inc ecx
  41447e:	test   BYTE PTR [ecx+0x32dbba1d],dl
  414484:	and    al,0x81
  414486:	sub    al,BYTE PTR [esi+0x35]
  414489:	les    ebx,FWORD PTR [ecx]
  41448b:	inc    ebp
  41448c:	inc    ebp
  41448d:	ja     0x414491
  41448f:	sub    eax,0xeb217e09
  414494:	dec    edi
  414495:	loopne 0x414482
  414497:	xor    BYTE PTR [ecx+0x4b28d8b],dh
  41449d:	cmp    DWORD PTR [esi-0x232a286c],ebp
  4144a3:	scas   eax,DWORD PTR es:[edi]
  4144a4:	mov    es,WORD PTR [esi]
  4144a6:	xchg   ecx,eax
  4144a7:	xor    eax,0x9b4996b7
  4144ac:	xlat   BYTE PTR ds:[ebx]
  4144ad:	cdq    
  4144ae:	sub    ebp,DWORD PTR [edi]
  4144b0:	dec    ebx
  4144b1:	(bad)  
  4144b2:	jmp    DWORD PTR [esi*2-0x25035cde]
  4144b9:	pop    ss
  4144ba:	nop
  4144bb:	add    BYTE PTR [esi],ah
  4144bd:	mov    dl,0x83
  4144bf:	ins    BYTE PTR es:[edi],dx
  4144c0:	lea    edi,[eax]
  4144c2:	jns    0x4144b0
  4144c4:	in     al,dx
  4144c5:	mov    ds:0xf3c458f2,eax
  4144ca:	(bad)
  4144cd:	(bad)  
  4144ce:	je     0x41446e
  4144d0:	hlt    
  4144d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d2:	dec    ebx
  4144d3:	xchg   DWORD PTR [edx+ebx*8-0x44],eax
  4144d7:	cmpxchg cl,dh
  4144da:	sahf   
  4144db:	jecxz  0x414544
  4144dd:	inc    esi
  4144de:	push   edx
  4144df:	pop    ebx
  4144e0:	mov    ebx,0x609c263a
  4144e5:	sbb    al,0x5c
  4144e7:	jbe    0x41448f
  4144e9:	or     ecx,DWORD PTR [esi-0xd75d9eb]
  4144ef:	mov    edx,DWORD PTR [edx]
  4144f1:	mov    ds:0x886559e8,eax
  4144f6:	jmp    0x7226:0x9e6cccdb
  4144fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144fe:	scas   al,BYTE PTR es:[edi]
  4144ff:	fwait
  414500:	popa   
  414501:	jp     0x4144d1
  414503:	(bad)  
  414504:	adc    al,0xb5
  414506:	mov    ebx,0x8edc539a
  41450b:	test   al,0x61
  41450d:	add    ebx,edx
  41450f:	adc    esi,DWORD PTR [eiz*2-0x3df90f13]
  414516:	adc    dl,BYTE PTR [esi+0x3e]
  414519:	or     al,0x2e
  41451b:	daa    
  41451c:	adc    BYTE PTR [ebp+0x7282c053],bl
  414522:	sbb    al,0x20
  414524:	pop    es
  414525:	pusha  
  414526:	sbb    esp,ebp
  414528:	and    DWORD PTR [ebp+0x20f77487],ecx
  41452e:	add    al,ah
  414530:	sub    al,0x5d
  414532:	repz mov al,0xc4
  414535:	push   esp
  414536:	das    
  414537:	push   0x1a
  414539:	movsx  ecx,BYTE PTR [edx]
  41453c:	sbb    bh,BYTE PTR [edx-0x1a]
  41453f:	mov    edi,0x9726c955
  414544:	pop    ebx
  414545:	pop    esp
  414546:	mov    WORD PTR [esi+0x49],gs
  414549:	and    DWORD PTR [ebx+0xa],ebp
  41454c:	pop    eax
  41454d:	or     eax,0xfd3933d7
  414552:	mov    dh,0xf
  414554:	mov    dl,0xcf
  414556:	imul   edx,DWORD PTR [edi-0x6135ac51],0xb52e6dc0
  414560:	test   eax,0xf92ff0c
  414565:	(bad)  
  414566:	jle    0x414549
  414568:	sahf   
  414569:	sub    al,0xbe
  41456b:	push   0xe8e29393
  414570:	sbb    esp,DWORD PTR [edi]
  414572:	sar    DWORD PTR [ecx],cl
  414574:	adc    esp,DWORD PTR [edi-0x1a]
  414577:	mov    ebx,DWORD PTR [ebx+0x1967dd3b]
  41457d:	je     0x414504
  41457f:	retf   0xe189
  414582:	and    DWORD PTR [eax-0x101ae3d1],esp
  414588:	out    dx,al
  414589:	xor    DWORD PTR [ecx-0xe9e12c8],ebx
  41458f:	imul   eax,DWORD PTR [edi+ebp*8-0x63d4533d],0xffffffb0
  414597:	mov    BYTE PTR [edi+0x12],bh
  41459a:	jne    0x4145f2
  41459c:	cs js  0x414542
  41459f:	cmp    dh,BYTE PTR ds:0xaeaf9e77
  4145a5:	outs   dx,BYTE PTR ds:[esi]
  4145a6:	mov    ecx,0x5f026eee
  4145ab:	sub    eax,0x6685e43f
  4145b0:	(bad)  
  4145b1:	cli    
  4145b2:	retf   
  4145b3:	sub    al,0x24
  4145b5:	dec    esi
  4145b6:	shl    DWORD PTR [ecx+edx*8-0x2b],cl
  4145ba:	xchg   DWORD PTR [edi+0x1538a8ce],edi
  4145c0:	inc    ebp
  4145c1:	mov    fs,ecx
  4145c3:	push   edi
  4145c4:	mov    esi,0xd0c5725
  4145c9:	jbe    0x41458c
  4145cb:	pop    ds
  4145cc:	les    edx,FWORD PTR [edi]
  4145ce:	rcr    DWORD PTR [ecx+0x63],1
  4145d1:	sbb    al,0x81
  4145d3:	ror    BYTE PTR [ebp+0xa658321],1
  4145d9:	dec    ebx
  4145da:	test   DWORD PTR [esi],edx
  4145dc:	sub    ebp,DWORD PTR [edx+edx*1-0x5e]
  4145e0:	push   esi
  4145e2:	call   0xd48ea81a
  4145e7:	jns    0x41460b
  4145e9:	jmp    0x31f4:0xabe17900
  4145f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f1:	mov    ecx,0x5e11ffa1
  4145f6:	and    bh,bl
  4145f8:	mov    dh,0x53
  4145fa:	xchg   BYTE PTR [esi+0x21],bh
  4145fd:	daa    
  4145fe:	and    cl,ch
  414600:	loop   0x41466f
  414602:	sub    eax,0xcc7ed4b7
  414607:	cs push 0xe1f90fa3
  41460d:	popa   
  41460e:	or     eax,0xced157bd
  414613:	stos   BYTE PTR es:[edi],al
  414614:	push   ebx
  414615:	jne    0x414693
  414617:	scas   eax,DWORD PTR es:[edi]
  414618:	cwde   
  414619:	cli    
  41461a:	std    
  41461b:	sbb    DWORD PTR [ebp-0x2],esi
  41461e:	imul   esi,DWORD PTR [edi+0x7b],0xffffff91
  414622:	retf   
  414623:	inc    eax
  414624:	sti    
  414625:	jo     0x41464e
  414627:	das    
  414628:	mov    ch,0xe
  41462a:	add    DWORD PTR [ebp+0x30f87bd6],eax
  414630:	push   edx
  414631:	int    0xda
  414633:	mov    eax,ds:0xa9755729
  414638:	clc    
  414639:	lods   eax,DWORD PTR ds:[esi]
  41463a:	rcr    DWORD PTR [ecx+0x43],0x95
  41463e:	cmp    ch,dh
  414640:	movaps XMMWORD PTR fs:[edi-0x420c1f1b],xmm5
  414648:	jns    0x414640
  41464a:	dec    esp
  41464b:	aad    0xfa
  41464d:	pusha  
  41464e:	cwde   
  41464f:	sub    DWORD PTR [ecx],edi
  414651:	xchg   BYTE PTR [edx+0x3bd1c8db],bh
  414657:	popf   
  414658:	sub    DWORD PTR [ecx],edi
  41465a:	push   edi
  41465b:	rcr    DWORD PTR [edx+0x69d0ccee],0x62
  414662:	out    dx,al
  414663:	(bad)  [edx+0x1e422ad7]
  414669:	inc    esi
  41466a:	mov    BYTE PTR [esi+esi*8-0x3e626ee4],dl
  414671:	or     eax,0x6555e462
  414676:	xchg   edx,eax
  414677:	jnp    0x41463f
  414679:	ror    BYTE PTR [esi],1
  41467b:	and    dl,BYTE PTR [edi-0x21]
  41467e:	xchg   edx,eax
  41467f:	(bad)  
  414681:	outs   dx,BYTE PTR ds:[esi]
  414682:	jl     0x414689
  414684:	xor    BYTE PTR [esi-0x68c73309],bl
  41468a:	and    al,0xc
  41468c:	loopne 0x41461a
  41468e:	add    bl,BYTE PTR [edi+esi*4]
  414691:	push   edx
  414692:	inc    ebp
  414693:	xor    al,0xa7
  414695:	call   0xce8:0xac9a6346
  41469c:	in     al,0x59
  41469e:	push   esi
  41469f:	lds    esp,FWORD PTR [edx+0x4096724e]
  4146a5:	xor    DWORD PTR [ebx-0x7c1d9076],esi
  4146ab:	inc    ebx
  4146ac:	dec    ebp
  4146ad:	je     0x414710
  4146af:	cs xchg ebp,eax
  4146b1:	mov    eax,0x8caf1a3e
  4146b6:	pop    eax
  4146b7:	sbb    al,0x8e
  4146b9:	add    BYTE PTR [esi-0x5e],0x81
  4146bd:	sahf   
  4146be:	and    BYTE PTR ds:0xae91f632,cl
  4146c4:	sbb    BYTE PTR [eax],dh
  4146c6:	data16 jl 0x41472a
  4146c9:	jbe    0x4146ad
  4146cb:	push   ebp
  4146cc:	inc    ebx
  4146cd:	xor    ah,bh
  4146cf:	pushf  
  4146d0:	(bad)  
  4146d1:	ds inc eax
  4146d3:	fsubr  QWORD PTR [ebx-0xe0c9b61]
  4146d9:	fldcw  WORD PTR [eax+0x74106791]
  4146df:	pop    esi
  4146e0:	push   eax
  4146e1:	outs   dx,DWORD PTR ds:[esi]
  4146e2:	adc    ah,BYTE PTR [ebx+0x2185eded]
  4146e8:	mul    DWORD PTR [ebx+0x27]
  4146eb:	sbb    DWORD PTR [edi-0x5d],esi
  4146ee:	xchg   BYTE PTR [ebx-0x61968fdd],dl
  4146f4:	fdivr  QWORD PTR [eax-0x55]
  4146f7:	cmp    DWORD PTR [ebp-0x26],eax
  4146fa:	clc    
  4146fb:	inc    ecx
  4146fc:	fisub  DWORD PTR [esi-0x4d9f57dc]
  414702:	add    BYTE PTR [ebx-0xb028517],dl
  414708:	push   ss
  414709:	addr16 addr16 clc 
  41470c:	icebp  
  41470d:	ins    BYTE PTR es:[edi],dx
  41470e:	loopne 0x4146e4
  414710:	add    al,0xe2
  414712:	xlat   BYTE PTR ds:[ebx]
  414713:	or     esi,DWORD PTR ds:0xd8e65145
  414719:	jbe    0x414797
  41471b:	pop    ecx
  41471c:	fdivr  DWORD PTR [edi+0x50]
  41471f:	lds    esi,FWORD PTR [edi+0x49]
  414722:	mov    dh,dl
  414724:	aas    
  414725:	lea    ecx,ds:0x5d7469a0
  41472b:	test   DWORD PTR [eax],edx
  41472d:	lahf   
  41472e:	mov    esp,0x5930a02b
  414733:	(bad)  
  414735:	aad    0x97
  414737:	or     BYTE PTR [eax+edx*8],0x80
  41473b:	stos   DWORD PTR es:[edi],eax
  41473c:	jmp    0x4146e5
  41473e:	in     eax,0x41
  414740:	cli    
  414741:	adc    ebp,ecx
  414743:	xchg   edx,eax
  414744:	shl    dh,cl
  414746:	dec    ebp
  414747:	rol    DWORD PTR fs:[edi+0x2457cbc1],0x77
  41474f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414750:	xchg   DWORD PTR [ebx-0x60],ebx
  414753:	add    DWORD PTR [edi],0xfffffff8
  414756:	gs jbe 0x41470b
  414759:	inc    eax
  41475a:	inc    edx
  41475b:	pop    ss
  41475c:	lahf   
  41475d:	jne    0x414759
  41475f:	outs   dx,DWORD PTR ds:[esi]
  414760:	xchg   esp,eax
  414761:	loop   0x414758
  414763:	not    DWORD PTR [edx+0x5c6b8428]
  414769:	xchg   edi,eax
  41476a:	data16 (bad) 
  41476c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41476d:	outs   dx,BYTE PTR ss:[esi]
  41476f:	inc    esi
  414770:	test   DWORD PTR [ebp+0x3b],ebp
  414773:	add    eax,0xab4a136
  414778:	or     cl,BYTE PTR [esi+eax*1+0x2694f723]
  41477f:	repnz add DWORD PTR [ebx+0x27],eax
  414783:	aad    0x48
  414785:	nop
  414786:	and    bh,BYTE PTR [edi-0xb]
  414789:	iret   
  41478a:	mov    eax,0x830fccb2
  41478f:	mov    cl,0x54
  414791:	cli    
  414792:	adc    DWORD PTR [ebx],eax
  414794:	xor    ah,BYTE PTR [edx]
  414796:	cmp    BYTE PTR [edx-0x27],0x1d
  41479a:	cmp    al,0xcd
  41479c:	shl    DWORD PTR [edi-0x2f],1
  41479f:	pusha  
  4147a0:	js     0x4147b2
  4147a2:	fild   DWORD PTR [edi-0x17d683d9]
  4147a8:	xchg   esi,eax
  4147a9:	sub    eax,esp
  4147ab:	mov    ebp,0x1bec988d
  4147b0:	hlt    
  4147b1:	loope  0x414736
  4147b3:	(bad)  
  4147b5:	push   es
  4147b6:	pop    edx
  4147b7:	scas   al,BYTE PTR es:[edi]
  4147b8:	repnz fisttp DWORD PTR [esi-0x299f9260]
  4147bf:	mov    ebp,0xc3bdc21e
  4147c4:	sbb    dl,dl
  4147c6:	ret    
  4147c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c8:	mov    dl,0xc1
  4147ca:	popa   
  4147cb:	dec    esi
  4147cc:	rcl    edi,1
  4147ce:	popa   
  4147cf:	and    DWORD PTR [eax-0x4c],ebp
  4147d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d3:	fwait
  4147d4:	mov    bh,0x74
  4147d6:	retf   
  4147d7:	xchg   ebx,eax
  4147d8:	js     0x414828
  4147da:	out    0x86,eax
  4147dc:	stos   DWORD PTR es:[edi],eax
  4147dd:	inc    ebp
  4147de:	js     0x414836
  4147e0:	jne    0x4147c2
  4147e2:	mov    ds:0x7ec0a7b6,eax
  4147e7:	cdq    
  4147e8:	mov    ebp,0x8a3fe340
  4147ed:	mov    ch,0x2b
  4147ef:	add    DWORD PTR [ecx-0x5f516f59],edx
  4147f5:	push   ebp
  4147f6:	into   
  4147f7:	adc    BYTE PTR [esi-0x52c9ed47],al
  4147fd:	stc    
  4147fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147ff:	push   edx
  414800:	repz repz inc edi
  414803:	scas   eax,DWORD PTR es:[edi]
  414804:	mov    dh,BYTE PTR [edi+0x5ce0299b]
  41480a:	ret    0xfa55
  41480d:	mov    esi,0x3af76482
  414812:	xor    edi,DWORD PTR [edi+0x34]
  414815:	repnz rcl BYTE PTR [esi+0x1f],cl
  414819:	jno    0x4147b4
  41481b:	shr    BYTE PTR [ebx+0x16],cl
  41481e:	sub    eax,0x14873bd0
  414823:	cmp    al,0x2c
  414825:	and    al,0x14
  414827:	jmp    0x4147dc
  414829:	cmp    cl,al
  41482b:	mov    dl,BYTE PTR [edx]
  41482d:	and    BYTE PTR [ecx+eax*4-0x28],0x23
  414832:	lds    eax,FWORD PTR [edx-0x6fc1a122]
  414838:	push   ecx
  414839:	xchg   edx,eax
  41483a:	int    0xae
  41483c:	test   bh,ah
  41483e:	jae    0x41485d
  414840:	jnp    0x414803
  414842:	jae    0x414808
  414844:	push   esp
  414845:	in     al,0x1
  414847:	push   cs
  414848:	in     eax,dx
  414849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484a:	int    0xb9
  41484c:	mov    esi,0x7571193c
  414851:	cmp    edx,esi
  414853:	loop   0x4147ec
  414855:	out    0xc9,al
  414857:	xchg   ebp,eax
  414858:	scas   al,BYTE PTR es:[edi]
  414859:	and    edi,ecx
  41485b:	pop    ss
  41485c:	ja     0x414823
  41485e:	xor    bh,BYTE PTR [ebx-0x7d7b546]
  414864:	test   bh,ah
  414866:	sbb    ch,BYTE PTR [ebx]
  414868:	(bad)  
  414869:	jl     0x414834
  41486b:	push   0xffffffdd
  41486d:	inc    ebp
  41486e:	xor    DWORD PTR [edi-0x12d7d28f],0xb5c11acb
  414878:	cmp    DWORD PTR [edi-0x2eb6bed7],esp
  41487e:	sub    DWORD PTR [ebx+0x4fd69aff],ebp
  414884:	sbb    DWORD PTR ds:[ebp+0x49],ecx
  414888:	cmp    DWORD PTR [edx-0x79],ecx
  41488b:	jb     0x41487b
  41488d:	popa   
  41488e:	sub    eax,0x160aad4f
  414893:	sub    esi,DWORD PTR [eax]
  414895:	pusha  
  414896:	and    edx,DWORD PTR [edx-0x72]
  414899:	int    0x61
  41489b:	push   ebp
  41489c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41489e:	inc    edx
  41489f:	popf   
  4148a0:	pop    ebp
  4148a1:	mov    bh,0x21
  4148a3:	push   eax
  4148a4:	pop    ecx
  4148a5:	jle    0x414868
  4148a7:	fadd   DWORD PTR [esi]
  4148a9:	call   0x54cf:0xdd7331eb
  4148b0:	fisttp DWORD PTR [ecx-0x4b]
  4148b3:	js     0x414903
  4148b5:	fbstp  TBYTE PTR [esi+0x35c5f0bb]
  4148bb:	test   eax,0xadb0bfe7
  4148c0:	push   ecx
  4148c1:	repnz sub cl,bh
  4148c4:	jmp    0x9c1a39b6
  4148c9:	and    DWORD PTR [edi+0x2a9d5c29],edi
  4148cf:	xor    eax,0x4ce2ea2e
  4148d4:	jl     0x414884
  4148d6:	sbb    eax,0x166d64ec
  4148db:	(bad)  
  4148dc:	fdivr  QWORD PTR [edx-0x3b]
  4148df:	arpl   si,bx
  4148e1:	xchg   edi,eax
  4148e2:	shl    DWORD PTR ds:0x245c4ba9,0x1e
  4148e9:	int    0x34
  4148eb:	xchg   esp,eax
  4148ec:	jle    0x41490d
  4148ee:	jmp    0x68874e2e
  4148f3:	pop    ds
  4148f4:	fst    QWORD PTR [ebx-0x4f]
  4148f7:	cmp    DWORD PTR [edx+0x1da26810],edx
  4148fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fe:	and    BYTE PTR ds:0x3e9d612d,dh
  414904:	jle    0x41495c
  414906:	sub    al,0xfa
  414908:	mov    bl,0x3f
  41490a:	sub    DWORD PTR [ebp+0x7fa3b3b3],edi
  414910:	std    
  414911:	adc    ebp,DWORD PTR [ebp-0x27]
  414914:	repz mov cl,BYTE PTR [esi+eax*2-0x67a9189c]
  41491c:	nop    DWORD PTR [ebx-0x39]
  414920:	inc    esi
  414921:	inc    eax
  414922:	icebp  
  414923:	test   al,0xc4
  414925:	mov    ds:0xa8057e1f,eax
  41492a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41492b:	jecxz  0x4148d9
  41492d:	sbb    BYTE PTR [ebx-0x57],ch
  414930:	or     al,0x89
  414932:	call   0x2e8960c8
  414937:	call   0x3d41ac04
  41493c:	adc    DWORD PTR [edi+edx*2-0x55f76aae],eax
  414943:	push   eax
  414944:	mov    bh,0xe1
  414946:	imul   eax,DWORD PTR [ebx+0x6a944314],0x71
  41494d:	mov    ebx,0x2a3f4b9b
  414952:	retf   
  414953:	jp     0x414935
  414955:	add    DWORD PTR [ebx-0x7],0xf03ce6d4
  41495c:	or     DWORD PTR [esp+edx*8-0x793ad6e6],0x695176d2
  414967:	mov    esi,0xbf668b0b
  41496c:	xor    esp,DWORD PTR [edi]
  41496e:	leave  
  41496f:	fcomp  QWORD PTR [edi+0x316e742b]
  414975:	into   
  414976:	pop    esp
  414977:	sbb    bl,dl
  414979:	(bad)  
  41497b:	xor    eax,DWORD PTR [eax]
  41497d:	sbb    dl,BYTE PTR [ebp-0x18]
  414980:	sbb    cl,al
  414982:	(bad)  
  414983:	nop
  414984:	dec    ecx
  414985:	aam    0xf
  414987:	mov    bl,0x58
  414989:	dec    ecx
  41498a:	call   FWORD PTR [ebx+0x42d7e785]
  414990:	push   ss
  414991:	fisttp DWORD PTR [ebx+0x3ca0d6ed]
  414997:	dec    ebx
  414998:	mov    al,ds:0xe2925925
  41499d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41499e:	nop
  41499f:	add    DWORD PTR [eax+0x3d],ecx
  4149a2:	sbb    DWORD PTR [edx],0x9
  4149a5:	push   0x4c
  4149a7:	pop    esi
  4149a8:	inc    ebp
  4149a9:	add    al,0x8
  4149ab:	outs   dx,DWORD PTR ds:[esi]
  4149ac:	push   0x7d
  4149ae:	sar    bl,1
  4149b0:	aaa    
  4149b1:	cwde   
  4149b2:	retf   0xace1
  4149b5:	cmp    eax,0xbed54909
  4149ba:	fist   DWORD PTR [eax+0x15c46dc7]
  4149c0:	xchg   ebx,eax
  4149c1:	sahf   
  4149c2:	ror    DWORD PTR [ebp-0x5e4e82c4],cl
  4149c8:	and    dh,BYTE PTR [eax-0x14]
  4149cb:	loope  0x4149aa
  4149cd:	jae    0x414a43
  4149cf:	xchg   cl,bh
  4149d1:	mov    edi,0x91b90d9
  4149d6:	in     eax,dx
  4149d7:	push   ebp
  4149d8:	sub    DWORD PTR [esi],esp
  4149da:	inc    esp
  4149db:	pushf  
  4149dc:	sbb    eax,0xc82a4360
  4149e1:	jb     0x414a3e
  4149e3:	into   
  4149e4:	mov    dl,0x2c
  4149e6:	fidivr DWORD PTR [edi]
  4149e8:	sub    eax,0x90892d5a
  4149ed:	sbb    ch,0x2e
  4149f0:	adc    DWORD PTR [esi],ecx
  4149f2:	cwde   
  4149f3:	push   edx
  4149f4:	imul   ebx,DWORD PTR [ebx-0x2],0x37d92233
  4149fb:	xchg   ebp,eax
  4149fc:	daa    
  4149fd:	or     cl,ah
  4149ff:	addr16 aaa 
  414a01:	xor    al,BYTE PTR [ebx-0x5f9aed0d]
  414a07:	xor    cl,dl
  414a09:	xor    edi,DWORD PTR [esp+ebp*1]
  414a0c:	sub    DWORD PTR [ecx+0x201bdeb4],0x8644e343
  414a16:	cmp    esi,eax
  414a18:	push   ebp
  414a19:	ins    DWORD PTR es:[edi],dx
  414a1a:	add    DWORD PTR [esi+0x44b064c6],esi
  414a20:	jl     0x4149ce
  414a22:	mov    bl,0x9b
  414a24:	ret    
  414a25:	jmp    0x414a6b
  414a27:	and    BYTE PTR [edx+0x6ef9f873],al
  414a2d:	dec    ecx
  414a2e:	xor    al,0xf8
  414a30:	out    dx,eax
  414a31:	mov    bl,0xd0
  414a33:	mov    fs:0xd43e92c3,al
  414a39:	and    al,0xdd
  414a3b:	je     0x414a8f
  414a3d:	leave  
  414a3e:	xlat   BYTE PTR ds:[ebx]
  414a3f:	retf   
  414a40:	jne    0x414a83
  414a42:	dec    ebx
  414a43:	add    eax,DWORD PTR [eax-0xb]
  414a46:	out    0x4a,eax
  414a48:	mov    bh,0x3f
  414a4a:	into   
  414a4b:	mov    dh,0xe4
  414a4d:	das    
  414a4e:	sahf   
  414a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a50:	adc    BYTE PTR [eax-0x59746086],bh
  414a56:	dec    esp
  414a57:	stos   DWORD PTR es:[edi],eax
  414a58:	pop    ds
  414a59:	push   esi
  414a5a:	xor    dl,BYTE PTR [eax]
  414a5c:	dec    eax
  414a5d:	pop    ss
  414a5e:	dec    ebx
  414a5f:	test   al,0x83
  414a61:	call   0x3956:0xc14dd296
  414a68:	mov    al,dl
  414a6a:	xor    al,0x68
  414a6c:	mov    ecx,ecx
  414a6e:	inc    edi
  414a6f:	lods   eax,DWORD PTR ds:[esi]
  414a70:	inc    ebx
  414a71:	fwait
  414a72:	sub    DWORD PTR [esi],esi
  414a74:	jmp    0x7c3d:0xace32351
  414a7b:	nop
  414a7c:	jnp    0x414af1
  414a7e:	dec    eax
  414a7f:	cmp    bh,BYTE PTR [edx+0x1c]
  414a82:	imul   ebx,edx,0x38
  414a85:	dec    esi
  414a86:	pusha  
  414a87:	pop    eax
  414a88:	mov    bl,0x9
  414a8a:	pop    esi
  414a8b:	mov    ?,WORD PTR [edx+0x5a1d5ab1]
  414a91:	push   0xffffff80
  414a93:	dec    ecx
  414a94:	ss (bad) 
  414a96:	popf   
  414a97:	jg     0x414a1e
  414a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9a:	dec    eax
  414a9b:	les    ecx,FWORD PTR [eax+eiz*8+0x7e]
  414a9f:	mov    edi,0x49d0a906
  414aa4:	bound  ecx,QWORD PTR [esp+edi*4]
  414aa7:	rol    BYTE PTR [ebx],cl
  414aa9:	or     BYTE PTR [eax+0x2d4031a],0x42
  414ab0:	xchg   ecx,eax
  414ab1:	test   BYTE PTR [ebp-0x11],ah
  414ab4:	xor    edx,esp
  414ab6:	(bad)  
  414ab7:	mov    edx,0x5c6c4a85
  414abc:	sbb    ebp,DWORD PTR [ecx]
  414abe:	pop    esp
  414abf:	mov    esi,0x97af10c6
  414ac4:	or     al,0x2b
  414ac6:	xchg   edx,eax
  414ac7:	dec    esp
  414ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac9:	push   cs
  414aca:	push   ebp
  414acb:	dec    ecx
  414acc:	loopne 0x414abf
  414ace:	and    al,0x4b
  414ad0:	popf   
  414ad1:	repz les edi,FWORD PTR [edi]
  414ad4:	call   0x7ba1:0x281b8644
  414adb:	in     eax,dx
  414adc:	call   0x9d8b97d9
  414ae1:	lods   al,BYTE PTR ds:[esi]
  414ae2:	pop    ecx
  414ae3:	push   es
  414ae4:	mov    bl,0xd0
  414ae6:	pop    ss
  414ae7:	xchg   ecx,eax
  414ae8:	sbb    ah,bl
  414aea:	jg     0x414abd
  414aec:	js     0x414ab2
  414aee:	retf   0xe0cf
  414af1:	jae    0x414a90
  414af3:	push   cs
  414af4:	and    al,0x49
  414af6:	(bad)  
  414af7:	and    cl,bh
  414af9:	inc    edi
  414afa:	jae    0x414b12
  414afc:	test   eax,0x41dbef4e
  414b01:	lods   al,BYTE PTR ds:[esi]
  414b02:	xchg   ebx,eax
  414b03:	mov    ah,0xc4
  414b05:	add    BYTE PTR [esi+0x1f83447a],cl
  414b0b:	inc    esp
  414b0c:	out    dx,eax
  414b0d:	adc    edx,edx
  414b0f:	jbe    0x414a9e
  414b11:	clc    
  414b12:	or     BYTE PTR ds:0x47e09fc8,dh
  414b18:	in     eax,dx
  414b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b1a:	pop    ebp
  414b1b:	xchg   ebx,eax
  414b1c:	xchg   esi,eax
  414b1d:	cmp    ah,al
  414b1f:	mov    ds:0xcb5f4ef3,eax
  414b24:	sbb    bl,bh
  414b26:	fdivr  DWORD PTR [ebx]
  414b28:	inc    esp
  414b29:	fcmovu st,st(2)
  414b2b:	inc    edx
  414b2c:	fld    TBYTE PTR [edx]
  414b2e:	jge    0x414b36
  414b30:	aam    0xc3
  414b32:	xchg   edx,eax
  414b33:	sti    
  414b34:	adc    BYTE PTR [ebx],0xaf
  414b37:	mov    bh,0x7c
  414b39:	inc    edi
  414b3a:	test   al,0x18
  414b3c:	repnz nop
  414b3e:	test   ebp,eax
  414b40:	test   ch,cl
  414b42:	push   ebp
  414b43:	pop    esp
  414b44:	sub    ebx,eax
  414b46:	cdq    
  414b47:	outs   dx,DWORD PTR ds:[esi]
  414b48:	push   esp
  414b49:	sub    cl,BYTE PTR [eax-0x55]
  414b4c:	inc    eax
  414b4d:	dec    eax
  414b4e:	push   cs
  414b4f:	push   edi
  414b50:	cdq    
  414b51:	mov    ecx,0xfb7adfd4
  414b56:	or     ebx,DWORD PTR [ecx]
  414b58:	xchg   ecx,eax
  414b59:	mov    dh,0x37
  414b5b:	sub    DWORD PTR [edi+0x1dfeddba],edi
  414b61:	ins    DWORD PTR es:[edi],dx
  414b62:	cmp    bl,bl
  414b64:	sahf   
  414b65:	or     BYTE PTR [esi-0x3a6dc335],ah
  414b6b:	cmp    esi,ecx
  414b6d:	ret    0x3fa4
  414b70:	aas    
  414b71:	sub    bl,BYTE PTR [esi]
  414b73:	inc    ebx
  414b74:	adc    esp,esp
  414b76:	jle    0x414be4
  414b78:	or     al,BYTE PTR [ebx]
  414b7a:	xchg   esi,eax
  414b7b:	add    ah,ah
  414b7d:	xchg   esi,eax
  414b7e:	rcl    edi,cl
  414b80:	ja     0x414b40
  414b82:	out    dx,al
  414b83:	and    dh,BYTE PTR [ebx-0x1abd45f4]
  414b89:	gs xor al,0x66
  414b8c:	mov    ebp,eax
  414b8e:	(bad)  
  414b8f:	(bad)  
  414b90:	jmp    0x414b26
  414b92:	inc    esp
  414b93:	fs cs js 0x414b18
  414b97:	je     0x414bce
  414b99:	jge    0x414bd0
  414b9b:	lea    ebx,[ecx]
  414b9d:	aas    
  414b9e:	mov    DWORD PTR [ebx+esi*2],edi
  414ba1:	mov    bl,0x4b
  414ba3:	mov    dh,ah
  414ba5:	pop    ebx
  414ba6:	ror    DWORD PTR [edi+0x3d],cl
  414ba9:	imul   esi,DWORD PTR [eax-0x4d],0x9d98c9d3
  414bb0:	push   esi
  414bb1:	nop
  414bb2:	test   DWORD PTR [ebp+0x12],edi
  414bb5:	xor    eax,0xd9893479
  414bba:	push   0x56
  414bbc:	fidivr WORD PTR [eax+0x6eada053]
  414bc2:	mov    ah,0xf7
  414bc4:	loop   0x414bdf
  414bc6:	pushf  
  414bc7:	loopne 0x414c0b
  414bc9:	sar    BYTE PTR [ebx],1
  414bcb:	loopne 0x414bd9
  414bcd:	xchg   esp,eax
  414bce:	bound  ebx,QWORD PTR [ecx-0x4cbfbdbd]
  414bd4:	cwde   
  414bd5:	pop    ss
  414bd6:	push   0x83af677d
  414bdb:	jle    0x414c49
  414bdd:	and    DWORD PTR [esi],eax
  414bdf:	xor    eax,0x43277037
  414be4:	ds sbb eax,0xaac23111
  414bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414beb:	je     0x414ba6
  414bed:	pop    edx
  414bee:	lock jg 0x414bf9
  414bf1:	(bad)  
  414bf2:	retf   
  414bf3:	sub    dl,BYTE PTR [eax+0x58]
  414bf6:	dec    ebx
  414bf7:	ror    DWORD PTR [edi+0x78f4fb5a],0x84
  414bfe:	mov    dh,0xc1
  414c00:	xor    ah,BYTE PTR [ebx]
  414c02:	xchg   edx,eax
  414c03:	jnp    0x414b89
  414c05:	loope  0x414c15
  414c07:	ss test eax,0x3fe5c4a8
  414c0d:	or     eax,0x1dca3625
  414c12:	xchg   ebp,eax
  414c13:	mov    esp,0x245ead92
  414c18:	xchg   esp,eax
  414c19:	push   edi
  414c1a:	cmc    
  414c1b:	pushf  
  414c1c:	popa   
  414c1d:	mov    WORD PTR [esi-0x69be3500],?
  414c23:	pop    eax
  414c24:	loop   0x414c35
  414c26:	add    DWORD PTR [ebx+0x73],0xffffffe2
  414c2a:	push   edi
  414c2b:	sub    DWORD PTR [eax-0x7e],ecx
  414c2e:	imul   eax,DWORD PTR [esi+0x4b11ef75],0xffffffad
  414c35:	xor    al,0xa
  414c37:	jbe    0x414c3e
  414c39:	mov    eax,ds:0x86d046bb
  414c3e:	mov    dh,0xd9
  414c40:	fbld   TBYTE PTR [edi+0x58d54163]
  414c46:	cli    
  414c47:	lods   al,BYTE PTR ds:[esi]
  414c48:	jp     0x414c8d
  414c4a:	in     eax,0xe0
  414c4c:	sbb    bl,BYTE PTR [edx+0x68]
  414c4f:	shl    DWORD PTR [ebx+0x518d57eb],1
  414c55:	adc    dh,bl
  414c57:	test   DWORD PTR [ebx],esi
  414c59:	loopne 0x414be6
  414c5b:	sti    
  414c5c:	jl     0x414c66
  414c5e:	shr    DWORD PTR [esi+0x67],0xc3
  414c62:	test   eax,0x4faba47f
  414c67:	mov    ebx,cs
  414c69:	cmp    bh,0x11
  414c6c:	push   ss
  414c6d:	mov    edi,0x39b4b7b2
  414c72:	(bad)  
  414c73:	or     eax,0x92ffcc8e
  414c78:	clc    
  414c79:	call   0xe56:0xaa8d85f1
  414c80:	rol    BYTE PTR [ecx-0x80],cl
  414c83:	cmp    al,0x6
  414c85:	cmp    al,0x37
  414c87:	mov    eax,0x7568c970
  414c8c:	test   eax,0xa725bc2a
  414c91:	jge    0x414cb6
  414c93:	out    dx,eax
  414c94:	imul   esp,DWORD PTR [esi],0xffffffe6
  414c97:	fistp  DWORD PTR [eax+0x3c]
  414c9a:	mov    ah,BYTE PTR [edx+0x59b85ea0]
  414ca0:	xor    BYTE PTR [esi],0xdc
  414ca3:	inc    ebx
  414ca4:	enter  0xf031,0x5b
  414ca8:	pop    edx
  414ca9:	(bad)  
  414caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cab:	mov    edi,0xaeddb05b
  414cb0:	push   edi
  414cb1:	ss daa 
  414cb3:	and    dh,BYTE PTR [ecx]
  414cb5:	xchg   DWORD PTR ds:0xd979f780,ebp
  414cbb:	rol    DWORD PTR [ecx+ebx*4-0x785ef1cb],1
  414cc2:	sbb    al,0x13
  414cc5:	mov    edx,0xdecfe382
  414cca:	jnp    0x414cf3
  414ccc:	xor    edi,ebp
  414cce:	or     BYTE PTR [ecx+edi*2],bh
  414cd1:	stc    
  414cd2:	pop    ds
  414cd3:	push   edi
  414cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd5:	push   ss
  414cd6:	mov    dh,0x19
  414cd8:	(bad)  
  414cd9:	mov    esp,0x73baf0a7
  414cde:	add    DWORD PTR ds:0x4f4e86c8,0x842705e9
  414ce8:	fstp   QWORD PTR [edx]
  414cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ceb:	call   0xbe89:0xa7b69ecb
  414cf2:	inc    ebp
  414cf3:	mov    fs,esi
  414cf5:	(bad)  
  414cf7:	ret    0x3535
  414cfa:	inc    ecx
  414cfb:	xchg   ebx,eax
  414cfc:	push   0xffffffef
  414cfe:	jge    0x414d06
  414d00:	(bad)  
  414d01:	xlat   BYTE PTR ds:[ebx]
  414d02:	sub    BYTE PTR [edx+0x3eb76da5],cl
  414d08:	or     eax,DWORD PTR [ecx+eax*8]
  414d0b:	mul    DWORD PTR [edx-0x54]
  414d0e:	push   edi
  414d0f:	mov    BYTE PTR [ecx+eiz*1],al
  414d12:	inc    ebp
  414d13:	jp     0x414d19
  414d15:	or     al,0xce
  414d17:	lahf   
  414d18:	out    dx,al
  414d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1b:	lds    ecx,FWORD PTR [edx-0x5f460dc4]
  414d21:	sbb    DWORD PTR ds:0x480aa706,ebx
  414d27:	fwait
  414d28:	mov    dl,BYTE PTR [ebp+0xc]
  414d2b:	shl    DWORD PTR [ecx+0x63],0xa7
  414d2f:	shr    DWORD PTR [ebp+0x21683c0e],1
  414d35:	cwde   
  414d36:	push   0xffffff8e
  414d38:	ja     0x414db1
  414d3a:	(bad)  
  414d3b:	scas   eax,DWORD PTR es:[edi]
  414d3c:	inc    esi
  414d3d:	test   BYTE PTR [edx-0x17b5ba12],bl
  414d43:	imul   ebx,DWORD PTR [esi+eax*2+0x39],0x49
  414d48:	jno    0x414ce1
  414d4a:	push   edi
  414d4b:	stos   DWORD PTR es:[edi],eax
  414d4c:	das    
  414d4d:	sub    ch,cl
  414d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d50:	test   al,0x87
  414d52:	repnz sub DWORD PTR [ebx+ecx*8-0x23eb35ea],edi
  414d5a:	pop    edx
  414d5b:	mul    edx
  414d5d:	inc    ecx
  414d5e:	inc    edx
  414d5f:	ffreep st(1)
  414d61:	mov    esp,0xcd334414
  414d66:	xchg   ecx,eax
  414d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d68:	pusha  
  414d69:	test   eax,0xc1c1dd96
  414d6e:	or     ah,al
  414d70:	mov    ss,WORD PTR [ebx-0x65]
  414d73:	push   esp
  414d74:	adc    ebx,DWORD PTR [ebx+0x6693a659]
  414d7a:	sar    ecx,cl
  414d7c:	aad    0xd3
  414d7e:	loope  0x414d52
  414d80:	and    bl,BYTE PTR [eax+0x59172732]
  414d86:	sub    BYTE PTR [ebp+0x1e90609a],0x16
  414d8d:	stos   DWORD PTR es:[edi],eax
  414d8e:	mov    eax,0x12631727
  414d93:	add    al,0xce
  414d95:	arpl   ax,bx
  414d97:	cmp    esi,DWORD PTR [ebx-0x58]
  414d9a:	add    BYTE PTR [ecx-0x54],al
  414d9d:	xchg   BYTE PTR [edi],bh
  414d9f:	push   ds
  414da0:	inc    edi
  414da1:	ins    BYTE PTR es:[edi],dx
  414da2:	jp     0x414e02
  414da4:	in     al,0x96
  414da6:	aam    0x70
  414da8:	and    BYTE PTR [ebp+0x7563a4f3],0x74
  414daf:	rcr    BYTE PTR [edx+0x7c],cl
  414db2:	adc    al,0x45
  414db4:	add    bl,BYTE PTR [edi-0x32]
  414db7:	mov    gs:0xe1d744c7,eax
  414dbd:	pop    es
  414dbe:	std    
  414dbf:	call   0x9fd095ba
  414dc4:	test   eax,0x9feac96d
  414dc9:	call   0xada4:0xb0ea8e40
  414dd0:	ss mov al,0x2e
  414dd3:	cld    
  414dd4:	adc    dl,BYTE PTR [eax+0x4ce10e12]
  414dda:	dec    esp
  414ddb:	or     eax,0x65bb2dbe
  414de0:	jle    0x414e43
  414de2:	jge    0x414db5
  414de4:	sub    BYTE PTR [edi+0x71],dl
  414de7:	in     al,0xbf
  414de9:	push   ds
  414dea:	js     0x414db1
  414dec:	outs   dx,DWORD PTR ds:[esi]
  414ded:	in     eax,dx
  414dee:	outs   dx,DWORD PTR ds:[esi]
  414def:	add    dh,dh
  414df1:	hlt    
  414df2:	xchg   edx,eax
  414df3:	lahf   
  414df4:	pop    eax
  414df5:	(bad)  
  414df6:	jle    0x414e05
  414df8:	loopne 0x414e05
  414dfa:	dec    esi
  414dfb:	adc    DWORD PTR [ebx],ebp
  414dfd:	and    eax,0xd05681c5
  414e02:	pop    esp
  414e03:	fbld   TBYTE PTR [ebx+0x2f]
  414e06:	adc    BYTE PTR [eax],bl
  414e08:	rcl    BYTE PTR [edx+0x36],0x31
  414e0c:	repnz pushf 
  414e0e:	rcr    BYTE PTR [ecx-0x9],0xbc
  414e12:	cld    
  414e13:	pushf  
  414e14:	cs mov edi,0x84f4c406
  414e1a:	and    ah,ch
  414e1c:	fist   DWORD PTR [eax-0x6e]
  414e1f:	pop    esi
  414e20:	rcl    DWORD PTR [ebp+0x7dca1c09],1
  414e26:	hlt    
  414e27:	imul   edx,DWORD PTR [edx+0x73efbce0],0xce5f284b
  414e31:	xor    al,0xa9
  414e33:	or     dh,bl
  414e35:	or     eax,0x8952adb7
  414e3a:	push   eax
  414e3b:	jg     0x414e07
  414e3d:	dec    ecx
  414e3e:	lods   al,BYTE PTR ds:[esi]
  414e3f:	and    ah,BYTE PTR [ecx-0x178fc6e1]
  414e45:	xchg   edx,eax
  414e46:	jmp    0x414e64
  414e48:	pop    es
  414e49:	push   ds
  414e4a:	aam    0xac
  414e4c:	enter  0x455e,0xc8
  414e50:	sbb    al,0x34
  414e52:	(bad)  
  414e53:	repz jne 0x414e66
  414e56:	pop    ss
  414e57:	hlt    
  414e58:	aam    0xe4
  414e5a:	sub    ebp,DWORD PTR [eax]
  414e5c:	out    0xb9,eax
  414e5e:	or     al,0xdc
  414e60:	push   cs
  414e61:	sbb    al,0x9e
  414e63:	or     esi,DWORD PTR [eax+0x78f5e469]
  414e69:	scas   al,BYTE PTR es:[edi]
  414e6a:	jmp    0x414ec5
  414e6c:	mov    eax,0xb7e80548
  414e71:	pop    esi
  414e72:	mov    al,cl
  414e74:	je     0x414e47
  414e76:	add    al,0x99
  414e78:	xchg   esi,eax
  414e79:	sub    ebx,DWORD PTR [ecx]
  414e7b:	jge    0x414eab
  414e7d:	push   esi
  414e7e:	neg    ebx
  414e80:	retf   0xe47a
  414e83:	jmp    0xf342b341
  414e88:	lds    esi,FWORD PTR [ecx]
  414e8a:	pop    eax
  414e8b:	pop    eax
  414e8c:	jmp    0x142f:0xe986f37e
  414e93:	jl     0x414f14
  414e95:	ins    BYTE PTR es:[edi],dx
  414e96:	and    edx,edi
  414e98:	nop
  414e99:	cwde   
  414e9a:	cmp    esp,DWORD PTR [edx]
  414e9c:	stos   DWORD PTR es:[edi],eax
  414e9d:	push   ss
  414e9e:	inc    esi
  414e9f:	test   DWORD PTR [esi-0x5210ab98],ebp
  414ea5:	adc    dh,bl
  414ea7:	fist   WORD PTR [ecx-0x42]
  414eaa:	dec    esp
  414eab:	sti    
  414eac:	or     BYTE PTR [ecx+0x43],ch
  414eaf:	mov    WORD PTR [ecx+0x5a952fad],?
  414eb5:	xchg   esi,eax
  414eb6:	add    ebp,DWORD PTR [edx]
  414eb8:	clc    
  414eb9:	scas   al,BYTE PTR es:[edi]
  414eba:	xor    dh,BYTE PTR [ebx-0xce7e4d2]
  414ec0:	jmp    0x414ecb
  414ec2:	inc    ebx
  414ec3:	or     DWORD PTR [ebx],ecx
  414ec5:	dec    esi
  414ec6:	or     DWORD PTR [eax+0x4850c93f],edx
  414ecc:	sub    dh,BYTE PTR [ecx+0x2d]
  414ecf:	adc    eax,0xfc3a4e69
  414ed4:	pop    esp
  414ed5:	lods   al,BYTE PTR ds:[esi]
  414ed6:	shl    BYTE PTR fs:[edx+0x4bd87747],1
  414edd:	cmp    al,0xa2
  414edf:	xchg   ebp,eax
  414ee0:	xor    DWORD PTR [ebx-0x2a],ecx
  414ee3:	test   BYTE PTR [ebx+0x48],bl
  414ee6:	adc    DWORD PTR [esi-0x4ff327fc],edi
  414eec:	mov    ebp,0xf2a9d181
  414ef1:	inc    ecx
  414ef2:	and    bl,BYTE PTR [esi]
  414ef4:	xchg   ebp,eax
  414ef5:	jno    0x414ed0
  414ef7:	int3   
  414ef8:	xchg   al,bl
  414efa:	bound  eax,QWORD PTR [esi]
  414efc:	mov    esi,0xb66163cc
  414f01:	mov    cl,0x32
  414f03:	and    al,0x16
  414f05:	mov    ebp,0x145abd9d
  414f0a:	aam    0xc2
  414f0c:	stc    
  414f0d:	sub    bh,BYTE PTR [edx]
  414f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f10:	jbe    0x414f26
  414f12:	dec    edi
  414f13:	cmp    al,0x94
  414f15:	sub    esp,DWORD PTR ds:0x585d9296
  414f1b:	mov    WORD PTR [edx+0x7837123e],?
  414f21:	pop    ds
  414f22:	nop
  414f23:	jns    0x414f42
  414f25:	add    esi,DWORD PTR ds:[ebx]
  414f28:	mov    dh,0x82
  414f2a:	mov    dh,0x8a
  414f2c:	or     eax,0xcd6c6040
  414f31:	hlt    
  414f32:	pop    esp
  414f33:	dec    eax
  414f34:	mov    ah,0x1a
  414f36:	inc    esi
  414f37:	test   eax,0x965fa660
  414f3c:	call   0x104f2288
  414f41:	and    BYTE PTR [eax+0x54],0x4a
  414f45:	push   edi
  414f46:	adc    DWORD PTR [eax],esp
  414f48:	dec    edx
  414f49:	icebp  
  414f4a:	call   FWORD PTR [esi]
  414f4c:	inc    di
  414f4e:	out    0xb1,al
  414f50:	rcl    BYTE PTR [edi],cl
  414f52:	mov    esi,0x2693ad31
  414f57:	lds    ecx,FWORD PTR [edx-0x7f]
  414f5a:	js     0x414f3b
  414f5c:	shl    BYTE PTR [esi],cl
  414f5e:	fst    DWORD PTR [ecx]
  414f60:	push   edi
  414f61:	adc    edi,DWORD PTR [eax]
  414f63:	(bad)  
  414f64:	scas   al,BYTE PTR es:[edi]
  414f65:	mov    ch,0x59
  414f67:	sub    eax,0x36a73421
  414f6c:	in     eax,dx
  414f6d:	repnz mov bh,BYTE PTR [edi-0x77b5a27c]
  414f74:	push   0x809aea5d
  414f79:	sahf   
  414f7a:	sti    
  414f7b:	fs loop 0x414f86
  414f7e:	imul   ebp,ecx,0x40
  414f81:	addr16 into 
  414f83:	inc    edi
  414f84:	ret    
  414f85:	in     al,0x7b
  414f87:	jnp    0x415006
  414f89:	jnp    0x414f16
  414f8b:	sub    eax,0xaa8c338c
  414f90:	enter  0x52c,0x47
  414f94:	cmp    BYTE PTR [ecx],0x90
  414f97:	retf   
  414f98:	xor    DWORD PTR [edi-0x65],0x2d
  414f9c:	into   
  414f9d:	inc    ecx
  414f9e:	mov    WORD PTR [eax+0x3fc8a5ed],gs
  414fa4:	or     bp,WORD PTR [edi+0x20]
  414fa8:	dec    ecx
  414fa9:	clc    
  414faa:	mov    ebp,0xf0e249c4
  414faf:	mov    ecx,0xfcbedfdc
  414fb4:	mov    DWORD PTR [edi-0x4e31be8b],edi
  414fba:	loopne 0x414f92
  414fbc:	jnp    0x414f52
  414fbe:	jns    0x414f6a
  414fc0:	adc    ebp,DWORD PTR ds:0x28270130
  414fc6:	imul   esp,DWORD PTR [ebx-0x3139b20],0xffffffbf
  414fcd:	loop   0x414f7b
  414fcf:	add    edx,DWORD PTR [ebp+0x53]
  414fd2:	cwde   
  414fd3:	sbb    eax,0x7353b026
  414fd8:	sbb    ecx,DWORD PTR ds:0xe33aa86
  414fde:	jecxz  0x414fc6
  414fe0:	mov    eax,0xc229ad5f
  414fe5:	add    al,0x65
  414fe7:	push   ss
  414fe8:	imul   DWORD PTR [eax+eiz*8-0x26bf2c55]
  414fef:	adc    bl,BYTE PTR [edi-0x715ef806]
  414ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff6:	lods   al,BYTE PTR ds:[esi]
  414ff7:	int    0x3e
  414ff9:	jns    0x414ff7
  414ffb:	adc    al,0x4b
  414ffd:	lea    esp,[edi+0x2d3aef1f]
  415003:	ror    DWORD PTR [esi+0x4d5d3420],1
  415009:	pop    ecx
  41500a:	hlt    
  41500b:	test   al,0xaa
  41500d:	pushf  
  41500e:	retf   0xb66d
  415011:	adc    ecx,DWORD PTR [ebx]
  415013:	xchg   ecx,eax
  415014:	(bad)  
  415016:	int3   
  415017:	and    BYTE PTR [ecx],dl
  415019:	xchg   ecx,eax
  41501a:	xchg   BYTE PTR [eax],bh
  41501c:	into   
  41501d:	es sub al,0xce
  415020:	call   0x72e4:0x905c43c1
  415027:	es in  al,dx
  415029:	hlt    
  41502a:	(bad)  
  41502b:	inc    esi
  41502c:	std    
  41502d:	dec    eax
  41502e:	(bad)  
  41502f:	adc    edx,DWORD PTR [edi-0x51]
  415032:	test   eax,0x4036ce16
  415037:	inc    ebp
  415038:	xor    edx,esp
  41503a:	pop    edi
  41503b:	jmp    0xc2639453
  415040:	inc    ecx
  415041:	iret   
  415042:	call   0x8d414d5c
  415047:	lock push ebx
  415049:	aad    0xd1
  41504b:	xchg   ebp,eax
  41504c:	nop
  41504d:	mov    ecx,esi
  41504f:	jns    0x41502b
  415051:	sbb    edx,DWORD PTR [edi-0x2f565b66]
  415057:	jmp    0x4023:0x97c71d9b
  41505e:	mov    esp,0xafb2d640
  415063:	stos   DWORD PTR es:[edi],eax
  415064:	sbb    al,0xf
  415066:	cmp    ah,BYTE PTR [edx+0x62dee018]
  41506c:	cmp    BYTE PTR [ecx+0x32],bl
  41506f:	sbb    eax,0xd6b5f4a2
  415074:	(bad)  
  415075:	out    dx,al
  415076:	inc    esi
  415077:	inc    ebx
  415078:	in     al,dx
  415079:	push   edx
  41507a:	mov    ah,0xfd
  41507c:	mov    dl,0x85
  41507e:	ins    DWORD PTR es:[edi],dx
  41507f:	jns    0x415020
  415081:	fs dec ebp
  415083:	pop    eax
  415084:	popa   
  415085:	xchg   ebp,eax
  415086:	aas    
  415087:	sub    eax,DWORD PTR [ebx]
  415089:	add    dl,BYTE PTR [eax-0x55113927]
  41508f:	dec    ebp
  415090:	rcr    DWORD PTR [eax-0x29625a55],cl
  415096:	adc    eax,0x3877487f
  41509b:	lods   al,BYTE PTR ds:[esi]
  41509c:	(bad)  
  41509d:	(bad)  
  41509e:	pop    ds
  41509f:	mov    eax,ds:0x37082695
  4150a4:	sar    al,0xc
  4150a7:	xor    DWORD PTR [eax+0x4b],esp
  4150aa:	retf   
  4150ab:	adc    bh,ah
  4150ad:	lahf   
  4150ae:	jne    0x4150ce
  4150b0:	push   ecx
  4150b1:	xchg   ebx,eax
  4150b2:	mov    BYTE PTR [ecx],bh
  4150b4:	jae    0x4150e2
  4150b6:	jg     0x4150ac
  4150b8:	xchg   esi,eax
  4150b9:	sbb    BYTE PTR [ebp-0x5a],ah
  4150bc:	jne    0x415055
  4150be:	rcr    edi,1
  4150c0:	loopne 0x415116
  4150c2:	push   ds
  4150c3:	xchg   edx,eax
  4150c4:	xor    esi,DWORD PTR [ebp-0x37]
  4150c7:	mov    esp,DWORD PTR [ebx+0x73]
  4150ca:	repnz fucomp st(3)
  4150cd:	lock mov dh,0xa5
  4150d0:	loop   0x4150f6
  4150d2:	jb     0x41512d
  4150d4:	retf   0x2fb6
  4150d7:	add    eax,DWORD PTR [esi-0x6e]
  4150da:	sub    BYTE PTR [eax],ch
  4150dc:	inc    edi
  4150dd:	stc    
  4150de:	mov    DWORD PTR [eax+0x646d18be],ebp
  4150e4:	add    DWORD PTR [ebx],edx
  4150e6:	int3   
  4150e7:	mov    ebx,0xf7ff77f4
  4150ec:	pop    ebx
  4150ed:	sub    BYTE PTR [ebp+0x5192357f],bl
  4150f3:	or     al,0xb3
  4150f5:	push   esi
  4150f6:	outs   dx,BYTE PTR ds:[esi]
  4150f7:	nop
  4150f8:	jmp    0xe779d49b
  4150fd:	cmp    al,0xb2
  4150ff:	xchg   BYTE PTR [ecx+0x3a2028bc],cl
  415105:	pmaxsw mm2,QWORD PTR [eax]
  415108:	cmp    ebp,DWORD PTR [esi-0x12]
  41510b:	and    al,BYTE PTR ds:0xa999d2d5
  415111:	jo     0x415102
  415113:	inc    eax
  415114:	mov    ch,0xbf
  415116:	idiv   BYTE PTR [edi+eiz*1+0x4bab903c]
  41511d:	aas    
  41511e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41511f:	and    eax,DWORD PTR [edi+eiz*8]
  415122:	sbb    ebp,DWORD PTR [edi+edi*8-0x617ce1da]
  415129:	xchg   edi,eax
  41512a:	adc    al,0x31
  41512c:	adc    DWORD PTR [ecx+0xc],esi
  41512f:	std    
  415130:	mov    eax,0xf52e1623
  415135:	lea    edx,[eax+ecx*4-0x7631be8e]
  41513c:	lea    eax,[eax-0x2]
  41513f:	hlt    
  415140:	lods   al,BYTE PTR ds:[esi]
  415141:	retf   0x6244
  415144:	call   0x226c44b0
  415149:	ds out dx,eax
  41514b:	jns    0x4150f3
  41514d:	(bad)  
  41514e:	sbb    al,0x9f
  415150:	mov    bl,0x81
  415152:	push   edx
  415153:	out    0x2,eax
  415155:	jg     0x4150d7
  415157:	push   ecx
  415158:	pop    eax
  415159:	jb     0x41510e
  41515b:	imul   edi,DWORD PTR [edx],0x9247f2cd
  415161:	mov    esp,0xac41b121
  415166:	mov    ch,BYTE PTR [edx-0x4b22c9a7]
  41516c:	or     BYTE PTR [edi-0x7cc93518],dh
  415172:	outs   dx,BYTE PTR ds:[esi]
  415173:	stos   DWORD PTR es:[edi],eax
  415174:	into   
  415175:	sahf   
  415176:	pop    edx
  415177:	adc    DWORD PTR [eax],esp
  415179:	or     eax,ebx
  41517b:	repnz dec ebx
  41517d:	adc    BYTE PTR [edx+0x53c4a567],cl
  415183:	push   eax
  415184:	int    0x9f
  415186:	pop    esi
  415187:	pop    eax
  415188:	fwait
  415189:	or     al,0xa9
  41518b:	push   es
  41518c:	neg    BYTE PTR [edi-0x51aa5c41]
  415192:	ds out dx,eax
  415194:	test   eax,0xe6205c08
  415199:	cmp    eax,0x4a764872
  41519e:	out    0xca,al
  4151a0:	ins    DWORD PTR es:[edi],dx
  4151a1:	cmp    BYTE PTR [esi+0x498153c5],bh
  4151a7:	shl    BYTE PTR [edx+0x35f1e8d8],cl
  4151ad:	xchg   edi,eax
  4151ae:	retf   0x85ad
  4151b1:	mov    esi,0xbdef230a
  4151b6:	test   BYTE PTR [eax-0x57],dl
  4151b9:	inc    ebp
  4151ba:	or     bl,BYTE PTR [edi]
  4151bc:	pushf  
  4151bd:	nop
  4151be:	xchg   edx,eax
  4151bf:	retf   
  4151c0:	jmp    0x81b5:0xa0143dd3
  4151c7:	or     al,0x7c
  4151c9:	jp     0x4151c6
  4151cb:	and    DWORD PTR [ebp+0x7d5695fb],eax
  4151d1:	(bad)  
  4151d2:	mov    bl,0xf4
  4151d4:	sub    DWORD PTR [bp-0x2fe7],ebx
  4151d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151da:	and    ecx,DWORD PTR [eax+0x23]
  4151dd:	scas   eax,DWORD PTR es:[edi]
  4151de:	out    0x9,al
  4151e0:	cmp    al,0xdb
  4151e2:	push   0x1bba06e9
  4151e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e8:	loope  0x415264
  4151ea:	or     BYTE PTR [eax+0x4f],al
  4151ed:	shr    DWORD PTR [ebx],1
  4151ef:	in     al,dx
  4151f0:	sub    DWORD PTR [ebx-0x44],0x4e93847f
  4151f7:	mov    bh,0xc1
  4151f9:	(bad)  
  4151fa:	retf   
  4151fb:	shl    DWORD PTR [ecx-0x5f],cl
  4151fe:	jnp    0x4151a7
  415200:	pop    esi
  415201:	xchg   edx,eax
  415202:	or     ebp,edx
  415204:	jmp    0xe9ba:0x4642a44d
  41520b:	add    ecx,DWORD PTR [eax+0xa2089ba]
  415211:	dec    edi
  415212:	cwde   
  415213:	adc    DWORD PTR [edx],ebp
  415215:	xor    edi,DWORD PTR [ecx+esi*1+0x715708ad]
  41521c:	in     al,0xf5
  41521e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41521f:	pop    esi
  415220:	outs   dx,DWORD PTR ds:[esi]
  415221:	adc    esp,ebx
  415223:	push   eax
  415224:	mov    dh,0xd6
  415226:	std    
  415227:	mov    esi,0x3a73462c
  41522c:	mov    DWORD PTR ds:0x400b36d7,ecx
  415232:	xchg   ebx,eax
  415233:	imul   ecx,ebx,0xa25d4cb4
  415239:	nop
  41523a:	mov    edx,0x9050b464
  41523f:	xchg   edx,eax
  415240:	add    DWORD PTR [edx+ebp*2],0xf3b8da03
  415247:	nop
  415248:	inc    ecx
  415249:	or     al,0x92
  41524b:	fdivr  DWORD PTR [eax+0x63]
  41524e:	fstp   DWORD PTR [esi]
  415250:	(bad)  
  415252:	jo     0x415239
  415254:	test   eax,0x3cfda5c7
  415259:	inc    esp
  41525a:	push   ds
  41525b:	test   eax,0x3b064576
  415260:	pop    ss
  415261:	xchg   edi,eax
  415262:	xchg   ch,al
  415264:	mov    al,0x5f
  415266:	xor    DWORD PTR [ebp+0x1be841f3],eax
  41526c:	and    WORD PTR [edi-0x431ebcb2],bx
  415273:	test   BYTE PTR [edi],ah
  415275:	xchg   edi,eax
  415276:	ror    DWORD PTR [ebp-0x7c04a6d7],cl
  41527c:	js     0x41529f
  41527e:	jo     0x4152fd
  415280:	cdq    
  415281:	ds dec eax
  415283:	shl    BYTE PTR ss:[edi+0x1],cl
  415287:	cwde   
  415288:	sbb    al,0x76
  41528a:	arpl   WORD PTR [esi+0x3e],bp
  41528d:	xchg   ecx,eax
  41528e:	or     edi,DWORD PTR [esi-0x5108608]
  415294:	pop    ss
  415295:	(bad)  
  415296:	aas    
  415297:	out    0xcd,eax
  415299:	fld    st(5)
  41529b:	xor    cl,BYTE PTR [edx+0x2b]
  41529e:	pusha  
  41529f:	inc    eax
  4152a0:	inc    edi
  4152a1:	clc    
  4152a2:	mov    dl,BYTE PTR [edx]
  4152a4:	sub    eax,ecx
  4152a6:	rol    BYTE PTR [esi],0xe7
  4152a9:	mov    ecx,0xd64846d0
  4152ae:	cmp    DWORD PTR [esi+0x19],edi
  4152b1:	adc    eax,0xf311dfb2
  4152b6:	cmp    al,BYTE PTR [esi+0x59534fe2]
  4152bc:	inc    BYTE PTR [esi+0x2f4c7bd]
  4152c2:	xchg   esp,eax
  4152c3:	scas   al,BYTE PTR es:[edi]
  4152c4:	jo     0x4152d3
  4152c6:	iret   
  4152c7:	in     al,dx
  4152c8:	inc    ecx
  4152c9:	sub    al,BYTE PTR [esi+0x7f286586]
  4152cf:	jp     0x415267
  4152d1:	das    
  4152d2:	fild   WORD PTR [eax]
  4152d4:	sbb    BYTE PTR [esi-0x7c],0x35
  4152d8:	sbb    al,0xd1
  4152da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152db:	adc    esi,ebx
  4152dd:	pop    esi
  4152de:	outs   dx,BYTE PTR ds:[esi]
  4152df:	mov    ecx,0x4da737f1
  4152e4:	rcr    BYTE PTR [edi],1
  4152e6:	pop    ebp
  4152e7:	pop    edx
  4152e8:	mov    DWORD PTR [ebp+0x54],0x88a3c947
  4152ef:	and    eax,0x8d8f9270
  4152f4:	dec    esp
  4152f5:	jp     0x415292
  4152f7:	xor    ebp,eax
  4152f9:	cmc    
  4152fa:	inc    edi
  4152fb:	push   ds
  4152fc:	mov    esi,0xc950f22f
  415301:	xlat   BYTE PTR ds:[ebx]
  415302:	jo     0x415365
  415304:	stos   DWORD PTR es:[edi],eax
  415305:	stos   DWORD PTR es:[edi],eax
  415306:	or     eax,0x64655f5a
  41530b:	mov    al,ds:0x6cb745c5
  415310:	jns    0x415368
  415312:	cmp    BYTE PTR [ecx],ch
  415314:	pop    esi
  415315:	repz cmp eax,edx
  415318:	xchg   esi,eax
  415319:	xchg   edi,eax
  41531a:	mov    cl,0xe2
  41531c:	xor    edi,DWORD PTR [esi]
  41531e:	in     eax,dx
  41531f:	add    edx,DWORD PTR [eax]
  415321:	mov    ebp,DWORD PTR [eax+0x1886b6f3]
  415327:	cmp    ebx,eax
  415329:	or     DWORD PTR ds:0xe0756dea,0xffffffb2
  415330:	sbb    al,0x8d
  415332:	arpl   WORD PTR [ecx-0x1f1e2c9c],di
  415338:	xor    edx,DWORD PTR [edi+0x33]
  41533b:	scas   eax,DWORD PTR es:[edi]
  41533c:	fild   DWORD PTR [esi]
  41533e:	fisttp WORD PTR [ecx-0x35d1dfd9]
  415344:	jg     0x4152fe
  415346:	mov    ds:0x73659936,eax
  41534b:	mov    eax,ds:0xef132b76
  415350:	and    dh,cl
  415352:	pop    edx
  415353:	adc    ah,BYTE PTR [edi-0x1fade876]
  415359:	dec    ecx
  41535a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41535b:	or     dl,bl
  41535d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535e:	mov    DWORD PTR [edi-0x7888adfc],ebx
  415364:	(bad)
  415368:	in     al,0x3d
  41536a:	mov    ebp,DWORD PTR [eax-0xc]
  41536d:	xor    BYTE PTR [ecx],dh
  41536f:	cmp    ebp,DWORD PTR [ecx]
  415371:	ret    0x9b58
  415374:	jbe    0x415334
  415376:	pop    ecx
  415377:	in     eax,0x9c
  415379:	sub    edi,DWORD PTR [ecx+0x61]
  41537c:	sar    BYTE PTR [ecx+eax*4+0x4d],1
  415380:	daa    
  415381:	das    
  415382:	mov    eax,0x327e79db
  415387:	fst    DWORD PTR [ebx-0x1a]
  41538a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538b:	fadd   QWORD PTR [eax+ecx*4]
  41538e:	add    DWORD PTR [edi+0x2bc6a143],0xe86f78aa
  415398:	xor    edi,DWORD PTR [edx+0x1a]
  41539b:	in     al,0x7d
  41539d:	and    BYTE PTR [ecx+0x10],dh
  4153a0:	inc    ebx
  4153a1:	aaa    
  4153a2:	ss mov ah,0x78
  4153a5:	in     eax,dx
  4153a6:	add    bh,ch
  4153a8:	or     eax,0x91e9cb94
  4153ad:	and    DWORD PTR [ebx+0x16],ebx
  4153b0:	data16 cli 
  4153b2:	lahf   
  4153b3:	pop    esi
  4153b4:	jb     0x4153e6
  4153b6:	pop    esp
  4153b7:	mov    dl,0x5b
  4153b9:	adc    ah,BYTE PTR [esi-0x4d873147]
  4153bf:	jne    0x4153f3
  4153c1:	pop    edx
  4153c2:	sbb    ebp,DWORD PTR [ebx-0x8]
  4153c5:	add    esp,ecx
  4153c7:	and    eax,ebp
  4153c9:	jle    0x41543c
  4153cb:	int3   
  4153cc:	push   esp
  4153cd:	es pop esp
  4153cf:	mov    bl,0x9b
  4153d1:	(bad)
  4153d5:	jmp    0x4153d1
  4153d7:	mov    dl,BYTE PTR [ecx*2+0x52ced2c7]
  4153de:	or     BYTE PTR [edx+0x629d4d02],ch
  4153e4:	pop    ecx
  4153e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153e6:	xchg   esi,eax
  4153e7:	clc    
  4153e8:	daa    
  4153e9:	test   BYTE PTR [edi+0x4de39059],bh
  4153ef:	xor    DWORD PTR [eax-0x253bbab7],0xf8ca60da
  4153f9:	test   BYTE PTR [ecx],ah
  4153fb:	retf   0x7c7c
  4153fe:	test   al,0x19
  415400:	jmp    0x9f5f303a
  415405:	adc    BYTE PTR [edi],ch
  415407:	icebp  
  415408:	xchg   ecx,eax
  415409:	fnstenv [ecx-0x1a]
  41540c:	outs   dx,BYTE PTR ds:[esi]
  41540d:	les    edi,FWORD PTR [esi+0x2b]
  415410:	push   esi
  415411:	fild   QWORD PTR [esi+0x2227f43f]
  415417:	mov    ecx,0x161e3ba6
  41541c:	data16 jae 0x4153c0
  41541f:	jbe    0x4153eb
  415421:	imul   edi,DWORD PTR [ecx+edi*8-0x564b3261],0x8e788d08
  41542c:	(bad)  
  41542d:	test   al,0x6
  41542f:	and    al,0x7c
  415431:	aas    
  415432:	mov    al,0x10
  415434:	jno    0x4154a9
  415436:	mov    edi,0x4c1fa4eb
  41543b:	pop    ss
  41543c:	into   
  41543d:	add    ah,BYTE PTR [ecx-0x36]
  415440:	lods   al,BYTE PTR ds:[esi]
  415441:	pop    ds
  415442:	xchg   ebp,eax
  415443:	or     al,0x2c
  415445:	jo     0x415492
  415447:	fidivr WORD PTR [eax+0x43]
  41544a:	pushf  
  41544b:	mov    esp,0x33271df
  415450:	aaa    
  415451:	adc    eax,0x60363314
  415456:	pop    ebp
  415457:	mov    ds,edi
  415459:	jo     0x4153fc
  41545b:	inc    eax
  41545c:	mov    ecx,DWORD PTR [edi+ebp*4]
  41545f:	xor    BYTE PTR [eax+0x75432b22],dh
  415465:	push   eax
  415466:	jl     0x4154d5
  415468:	jmp    0x181e:0x40f55fa
  41546f:	jle    0x415470
  415471:	cmovne edx,DWORD PTR [ecx+ebp*8-0x45]
  415476:	or     bl,BYTE PTR [ebx+0xc]
  415479:	stos   BYTE PTR es:[edi],al
  41547a:	adc    BYTE PTR [eax],dh
  41547c:	add    eax,0xdeb78f8c
  415481:	mov    fs,WORD PTR ds:0x94036db6
  415487:	outs   dx,DWORD PTR ds:[esi]
  415488:	sub    BYTE PTR [edi-0x1b329fba],bl
  41548e:	mov    bl,0xf1
  415490:	and    esi,DWORD PTR [edi-0x143ca67f]
  415496:	pop    ebx
  415497:	pop    esp
  415498:	shr    DWORD PTR [edx],cl
  41549a:	jl     0x415443
  41549c:	inc    ebx
  41549d:	mov    esi,0xa18d4d15
  4154a2:	pop    ss
  4154a3:	mov    esp,0xb2b86891
  4154a8:	push   es
  4154a9:	mov    bh,0x47
  4154ab:	cmp    ebx,DWORD PTR [ebx+edx*4]
  4154ae:	stos   DWORD PTR es:[edi],eax
  4154af:	adc    eax,ecx
  4154b1:	lahf   
  4154b2:	jecxz  0x4154d6
  4154b4:	or     al,0x8b
  4154b6:	lds    esp,FWORD PTR [esp+eiz*2-0x6c8c6fb]
  4154bd:	and    ebx,DWORD PTR [ebp-0x7f]
  4154c0:	add    bl,BYTE PTR [esi+0x1c]
  4154c3:	mov    bl,dl
  4154c5:	out    dx,eax
  4154c6:	sahf   
  4154c7:	pop    ebp
  4154c8:	xor    al,0xe4
  4154ca:	test   cl,cl
  4154cc:	and    esp,edx
  4154ce:	lea    esp,[esi+0x130fe797]
  4154d4:	adc    eax,0x916e22c3
  4154d9:	adc    eax,0x1c419b01
  4154de:	imul   eax,edx,0x33d25883
  4154e4:	add    DWORD PTR [esp+esi*8-0x68],ecx
  4154e8:	rcl    edi,0x8a
  4154eb:	mov    BYTE PTR [ecx-0x1ec903a4],cl
  4154f1:	pop    ds
  4154f2:	(bad)
  4154f6:	sub    DWORD PTR [ebx+0x32],0xc799b088
  4154fd:	cmp    DWORD PTR ds:0x442f269f,eax
  415503:	(bad)  
  415504:	sub    cl,bl
  415506:	int    0x67
  415508:	xor    BYTE PTR [ecx-0x55ada763],dh
  41550e:	aaa    
  41550f:	jl     0x415555
  415511:	jns    0x41550e
  415513:	retf   
  415514:	ins    BYTE PTR es:[edi],dx
  415515:	pushf  
  415516:	xor    ah,ch
  415518:	inc    eax
  415519:	mov    ecx,0xe5e021b1
  41551e:	lock adc DWORD PTR [ecx-0x64],ebp
  415522:	sub    DWORD PTR [edi+0x7f],edi
  415525:	mov    eax,0xd7fb23b
  41552a:	loopne 0x41556b
  41552c:	ja     0x415591
  41552e:	and    BYTE PTR [eax+edx*2+0x1b],bl
  415532:	cmp    DWORD PTR [eax-0x41],ebx
  415535:	and    ebp,ecx
  415537:	inc    ecx
  415538:	dec    ebp
  415539:	push   edx
  41553a:	push   ecx
  41553b:	xor    dh,al
  41553d:	cmp    al,0x7a
  41553f:	les    edx,FWORD PTR [ebx]
  415541:	dec    eax
  415542:	ins    BYTE PTR es:[edi],dx
  415543:	jns    0x41553b
  415545:	mov    bh,0x5d
  415547:	mov    eax,0x62311c7f
  41554c:	or     bl,BYTE PTR [edi-0x556b2608]
  415552:	jae    0x415564
  415554:	nop
  415555:	sar    BYTE PTR [edi-0x6d1e2403],1
  41555b:	sbb    cl,BYTE PTR [eax+0x68f4e7b4]
  415561:	add    BYTE PTR [ebx],ah
  415563:	in     eax,dx
  415564:	call   0x2a6c:0xb53e5d1c
  41556b:	fptan  
  41556d:	fisttp DWORD PTR [eax-0x52]
  415570:	cs jg  0x41554f
  415573:	push   eax
  415574:	enter  0xd97f,0xa0
  415578:	and    WORD PTR ds:0x1cfb136c,dx
  41557f:	mov    cl,0x5
  415581:	or     al,0x2a
  415583:	mov    ds:0x37aa1fc0,al
  415588:	push   cs
  415589:	push   ecx
  41558a:	stos   DWORD PTR es:[edi],eax
  41558b:	push   ss
  41558c:	lea    ebx,[eax]
  41558e:	daa    
  41558f:	adc    BYTE PTR [ecx+0x26],bl
  415592:	dec    eax
  415593:	mov    dh,bh
  415595:	pop    edx
  415596:	mov    bl,dh
  415598:	dec    edi
  415599:	fdivr  QWORD PTR [si-0x1814]
  41559e:	mov    eax,0x2b2c512f
  4155a3:	jmp    0xb9e7:0x6a2e2166
  4155aa:	(bad)  
  4155ab:	ficomp WORD PTR [ecx+0x700dd548]
  4155b1:	addr16 out 0x35,al
  4155b4:	in     al,dx
  4155b5:	popf   
  4155b6:	sbb    BYTE PTR [ebp+0x5b],ch
  4155b9:	mov    al,ds:0xe95aac21
  4155be:	in     al,dx
  4155bf:	cdq    
  4155c0:	xchg   esp,eax
  4155c1:	pop    ebx
  4155c2:	xor    al,0xdc
  4155c5:	fisttp DWORD PTR [eax+0x7e]
  4155c8:	push   ebx
  4155c9:	std    
  4155ca:	dec    ebx
  4155cb:	test   eax,0xcca3f468
  4155d0:	lock jbe 0x4155cf
  4155d3:	icebp  
  4155d4:	fimul  DWORD PTR [eax+0x7]
  4155d7:	scas   al,BYTE PTR es:[edi]
  4155d8:	inc    eax
  4155d9:	dec    edx
  4155da:	sahf   
  4155db:	mov    WORD PTR [eax],fs
  4155dd:	jbe    0x415583
  4155df:	je     0x415561
  4155e1:	jge    0x41563a
  4155e3:	fsub   QWORD PTR [edi]
  4155e5:	add    esi,ebp
  4155e7:	xor    BYTE PTR [ecx+eiz*4-0x51],al
  4155eb:	adc    DWORD PTR [esi+eax*8],0xffffffbc
  4155ef:	sbb    edx,DWORD PTR [esi-0x50]
  4155f2:	push   eax
  4155f3:	(bad)
  4155f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f7:	and    edx,0x43
  4155fa:	mov    ch,0xb4
  4155fc:	push   0xf64a24b0
  415601:	iret   
  415602:	dec    ebp
  415603:	ret    
  415604:	(bad)  
  415605:	std    
  415606:	add    DWORD PTR [esi+ebp*1+0x60],0x28
  41560b:	js     0x415666
  41560d:	xchg   BYTE PTR [edx],bl
  41560f:	arpl   bx,di
  415611:	das    
  415612:	out    0xe6,eax
  415614:	ret    0x5842
  415617:	mov    edi,0x10d06414
  41561c:	fs cmc 
  41561e:	or     eax,0xb34ad131
  415623:	loop   0x4155c3
  415625:	jge    0x4155cf
  415627:	mov    es,WORD PTR [ebp-0x6646f69c]
  41562d:	inc    esp
  41562e:	inc    esp
  41562f:	sub    dl,ah
  415631:	or     eax,0x9977587d
  415636:	jne    0x41564b
  415638:	jmp    0x415690
  41563a:	xor    eax,0x95a572e0
  41563f:	sub    ecx,0xc
  415642:	or     BYTE PTR [eax],bh
  415644:	sar    BYTE PTR [esi],cl
  415646:	sbb    BYTE PTR [ecx-0x302ca7c7],ch
  41564c:	(bad)  
  41564e:	les    edi,FWORD PTR [ebp+esi*2+0x33]
  415652:	ret    0x122e
  415655:	pop    DWORD PTR [ebx]
  415657:	(bad)  
  415658:	xor    ecx,DWORD PTR [eax+0x30]
  41565b:	das    
  41565c:	test   BYTE PTR [esi-0x374748f2],0x9c
  415663:	xor    esp,esi
  415665:	mov    edx,0xd9a7b1e2
  41566a:	shl    ah,1
  41566c:	imul   edx,DWORD PTR [ebx],0xd15a04a4
  415672:	pop    es
  415673:	sbb    DWORD PTR [eax+0x6fa4feb3],ebp
  415679:	inc    edi
  41567a:	sbb    DWORD PTR [ebx+0x14],esp
  41567d:	pop    eax
  41567e:	add    DWORD PTR [edx+0x15],0x59
  415682:	neg    BYTE PTR [edx+0x31634482]
  415688:	adc    eax,0x2ad31bdd
  41568d:	int3   
  41568e:	push   es
  41568f:	dec    edi
  415690:	aas    
  415691:	mov    BYTE PTR [ebx],cl
  415693:	jno    0x415669
  415695:	jae    0x415677
  415697:	inc    esp
  415698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415699:	in     eax,dx
  41569a:	and    ebp,DWORD PTR [edx-0x36]
  41569d:	cdq    
  41569e:	rol    BYTE PTR [ecx-0x7a],cl
  4156a1:	sub    ebx,DWORD PTR ds:0x9ed5407f
  4156a7:	mov    ecx,ecx
  4156a9:	add    DWORD PTR [ebx],0x293bcecc
  4156af:	int    0x41
  4156b1:	sbb    al,0x42
  4156b3:	sbb    ebp,DWORD PTR [esi+0x79d6f80a]
  4156b9:	in     al,0x84
  4156bb:	ss xchg ecx,eax
  4156bd:	adc    al,0xc1
  4156bf:	pop    ebx
  4156c0:	mov    ah,0xf4
  4156c2:	dec    eax
  4156c3:	fwait
  4156c4:	scas   al,BYTE PTR es:[edi]
  4156c5:	push   0xedb7eb58
  4156ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156cb:	(bad)  
  4156cc:	mov    ?,WORD PTR [ebx-0x704518b6]
  4156d2:	add    al,BYTE PTR [edi+0xd839ed3]
  4156d8:	icebp  
  4156d9:	pop    esp
  4156da:	mov    esp,0x98c47330
  4156df:	jg     0x4156b7
  4156e1:	pusha  
  4156e2:	sbb    eax,0xa12af717
  4156e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e8:	ret    
  4156e9:	and    DWORD PTR [di+0x6562],0x33bd58ee
  4156f2:	test   BYTE PTR [edi],ch
  4156f4:	pop    esp
  4156f6:	fisubr DWORD PTR [esi]
  4156f8:	or     edi,DWORD PTR [edx]
  4156fa:	leave  
  4156fb:	js     0x41575d
  4156fd:	mov    esp,0xbd1c7b7a
  415702:	or     edx,edi
  415704:	add    DWORD PTR [ecx+ebp*1],0xa8f10f99
  41570b:	sbb    al,0xb4
  41570d:	pop    edi
  41570e:	std    
  41570f:	hlt    
  415710:	retf   
  415711:	mov    edx,0x16620f9b
  415716:	mov    cl,BYTE PTR [esp+ecx*4]
  415719:	in     al,0x55
  41571b:	xchg   ebp,eax
  41571c:	cld    
  41571d:	add    al,BYTE PTR [eax+0x4baf1302]
  415723:	mov    eax,?
  415725:	lock rep lods eax,DWORD PTR ds:[esi]
  415728:	out    dx,eax
  415729:	pusha  
  41572a:	sbb    DWORD PTR [eax+0x60],esi
  41572d:	(bad)  
  41572e:	xchg   edx,eax
  41572f:	imul   esp,ecx,0x36cc30d9
  415735:	in     eax,dx
  415736:	lods   al,BYTE PTR ds:[esi]
  415737:	push   0x64
  415739:	cld    
  41573a:	jge    0x4157ac
  41573c:	dec    edx
  41573d:	adc    al,al
  41573f:	das    
  415740:	jns    0x4156d3
  415742:	mov    ?,ebx
  415744:	hlt    
  415745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415746:	and    BYTE PTR ds:0xedf1dbf0,0x67
  41574d:	pop    edi
  41574e:	dec    edi
  41574f:	fld    st(4)
  415751:	mov    ecx,eax
  415753:	in     eax,dx
  415754:	fdivrp st(2),st
  415756:	xor    al,0x23
  415758:	pop    ds
  415759:	fisub  WORD PTR [edx]
  41575b:	mov    al,ds:0xa80091e
  415760:	lods   al,BYTE PTR ds:[esi]
  415761:	jl     0x415729
  415763:	mov    BYTE PTR [eax],bl
  415765:	mov    edi,0x45e08dd7
  41576a:	inc    esp
  41576b:	add    ecx,DWORD PTR [eax+0x7573106f]
  415771:	lods   eax,DWORD PTR ds:[esi]
  415772:	in     eax,0x73
  415774:	test   cl,al
  415776:	mov    edi,0xdb27162b
  41577b:	lahf   
  41577c:	jmp    0x4157f5
  41577e:	inc    esp
  41577f:	cmp    edi,DWORD PTR [edi+edi*8]
  415782:	pop    ds
  415783:	add    esp,DWORD PTR [edi+0x6d924f50]
  415789:	dec    esi
  41578a:	xor    BYTE PTR [eax+esi*4-0x1aa3e350],ah
  415791:	sub    BYTE PTR [eax],bl
  415793:	push   0x5cf38348
  415798:	mov    al,ds:0x3a98793f
  41579d:	fisttp QWORD PTR [ecx+0x1a]
  4157a0:	sar    BYTE PTR [ecx],cl
  4157a2:	je     0x415785
  4157a4:	push   esp
  4157a5:	hlt    
  4157a6:	shl    ecx,cl
  4157a8:	fisub  DWORD PTR [esi]
  4157aa:	dec    edi
  4157ab:	nop
  4157ac:	inc    ebp
  4157ad:	fisubr DWORD PTR [ebx+esi*2+0x25]
  4157b1:	mov    ebx,0xf53097d7
  4157b6:	mov    edx,DWORD PTR [ecx-0x4a4edfdf]
  4157bc:	mov    ds:0xc39d9ba4,eax
  4157c1:	push   esi
  4157c2:	push   bx
  4157c4:	arpl   WORD PTR [ecx+0x5d],sp
  4157c7:	das    
  4157c8:	or     eax,0xfd27424
  4157cd:	repnz popf 
  4157cf:	popa   
  4157d0:	rcl    DWORD PTR [ecx-0x64],0xdc
  4157d4:	lods   eax,DWORD PTR ds:[esi]
  4157d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d6:	pop    ss
  4157d7:	push   esp
  4157d8:	jnp    0x415798
  4157da:	add    al,0x7a
  4157dc:	pusha  
  4157dd:	fisttp QWORD PTR cs:[ebx+0x64]
  4157e1:	and    eax,0x91548d21
  4157e6:	shl    DWORD PTR [eax+ebx*2],1
  4157e9:	xchg   DWORD PTR [edi-0x4a3706db],ebx
  4157ef:	and    ebx,DWORD PTR [ebx+0x4f516414]
  4157f5:	push   esi
  4157f6:	cmp    bh,cl
  4157f8:	sub    eax,0x4b3c6216
  4157fd:	enter  0x9c49,0x5e
  415801:	and    DWORD PTR [eax-0x6d],ebp
  415804:	pushf  
  415805:	sti    
  415806:	shr    al,0x31
  415809:	out    dx,al
  41580a:	xor    BYTE PTR [edi+0x625ac0af],cl
  415810:	dec    edi
  415811:	mov    ds:0x6c8ec596,eax
  415816:	dec    edi
  415817:	sbb    al,0x96
  415819:	pop    ds
  41581a:	push   eax
  41581b:	push   esp
  41581c:	mov    cl,0x91
  41581e:	scas   al,BYTE PTR es:[edi]
  41581f:	nop
  415820:	adc    BYTE PTR [edx-0x28],0xa4
  415824:	test   al,0x14
  415826:	or     cl,BYTE PTR [eax-0x73]
  415829:	jae    0x4157bb
  41582b:	push   esi
  41582c:	xor    DWORD PTR [edx+0x57],ebp
  41582f:	in     al,0xb3
  415831:	xor    BYTE PTR [edi+esi*2+0x78d6cf1b],ch
  415838:	or     bl,BYTE PTR [ebx+0x21]
  41583b:	pop    es
  41583c:	mov    bl,BYTE PTR [ebp-0x6d]
  41583f:	icebp  
  415840:	int    0xb
  415842:	ja     0x4157e1
  415844:	and    DWORD PTR [edx+esi*1+0x5d],0xa09cb04e
  41584c:	repnz int3 
  41584e:	loope  0x41587f
  415850:	adc    edi,DWORD PTR [edx-0x6b]
  415853:	inc    edi
  415854:	xchg   esi,eax
  415855:	sub    DWORD PTR [edx+0xb27b844],ebp
  41585b:	out    dx,al
  41585c:	add    BYTE PTR [edi+0x206ccd93],0x8f
  415863:	lods   eax,DWORD PTR ds:[esi]
  415864:	mov    esi,0x264d4a68
  415869:	dec    ebx
  41586a:	pop    esp
  41586b:	mov    ecx,0x2cf319e2
  415870:	push   eax
  415871:	adc    BYTE PTR [edx+ebp*1-0x13],ah
  415875:	cmp    ebp,edx
  415877:	jbe    0x415820
  415879:	mov    BYTE PTR [edi+0x567c28d5],dh
  41587f:	xchg   ebp,eax
  415880:	pop    eax
  415881:	dec    eax
  415882:	or     al,0x1e
  415884:	loope  0x4158f4
  415886:	cmp    BYTE PTR [esi+0x4],0x5d
  41588a:	add    BYTE PTR [edi+edi*8+0xaafcf4f],dl
  415891:	repz mov esi,0x84fb78d1
  415897:	push   ebx
  415898:	xor    eax,0x4f76f4bb
  41589d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41589e:	xchg   esp,eax
  41589f:	jg     0x4158c5
  4158a1:	xchg   ecx,eax
  4158a2:	scas   al,BYTE PTR es:[edi]
  4158a3:	xchg   BYTE PTR [edi-0x4c],bh
  4158a6:	in     eax,0xda
  4158a8:	dec    edx
  4158a9:	es stos DWORD PTR es:[edi],eax
  4158ab:	jmp    0xa892:0xa00c157e
  4158b2:	mov    ecx,0x86fdefcb
  4158b7:	push   ebx
  4158b8:	nop
  4158b9:	ret    
  4158ba:	nop
  4158bb:	les    edi,FWORD PTR [edi]
  4158bd:	js     0x4158ef
  4158bf:	(bad)  
  4158c0:	adc    esi,DWORD PTR [ecx]
  4158c2:	or     eax,0x9b8850d0
  4158c7:	xor    DWORD PTR [edx-0x30],edx
  4158ca:	fcmovnbe st,st(7)
  4158cc:	jmp    0xab49:0x19255dc2
  4158d3:	add    DWORD PTR [ebp+0x4cc1db95],0xffffffa5
  4158da:	mov    BYTE PTR [ecx+ebp*2],ah
  4158dd:	cmp    cl,BYTE PTR [edx]
  4158df:	push   ds
  4158e0:	test   al,0xe6
  4158e2:	scas   al,BYTE PTR es:[edi]
  4158e3:	jl     0x4158dc
  4158e5:	test   BYTE PTR [edi-0x5152000d],0xa1
  4158ec:	pop    ebp
  4158ed:	and    al,0xd5
  4158ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158f0:	out    0x23,al
  4158f2:	pop    ss
  4158f3:	std    
  4158f4:	scas   eax,DWORD PTR es:[edi]
  4158f5:	xor    al,0x7b
  4158f7:	stos   DWORD PTR es:[edi],eax
  4158f8:	sbb    bl,ch
  4158fa:	inc    ecx
  4158fb:	inc    esp
  4158fc:	push   ebp
  4158fd:	clc    
  4158fe:	enter  0xd146,0x86
  415902:	test   BYTE PTR [ebx+0x4e55066e],0xdd
  415909:	mov    ebx,0xd96d469f
  41590e:	test   eax,0x13bbce6f
  415914:	aad    0x34
  415916:	cmp    esp,0x71df3a0b
  41591c:	fnstsw WORD PTR [ebx-0x5d]
  41591f:	jmp    0xda171255
  415924:	mov    ds:0x3f0feedc,al
  415929:	push   ecx
  41592a:	sti    
  41592b:	(bad)  [edx-0x72724522]
  415931:	jne    0x4158e2
  415933:	aad    0xf8
  415935:	scas   eax,DWORD PTR es:[edi]
  415936:	out    dx,eax
  415937:	mov    ebx,0x17bbd55b
  41593c:	push   cs
  41593d:	mov    edx,0xbdb7b5ee
  415942:	ins    BYTE PTR es:[edi],dx
  415943:	push   0xc8ca5dc4
  415948:	adc    al,0x5f
  41594a:	sbb    BYTE PTR [ecx],cl
  41594c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594d:	popa   
  41594e:	mov    eax,0xf57901b2
  415953:	cmp    al,0x8e
  415955:	pusha  
  415956:	out    0x40,eax
  415958:	ins    DWORD PTR es:[edi],dx
  415959:	pop    esp
  41595a:	adc    al,0xb4
  41595c:	pop    es
  41595d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41595e:	fnstsw WORD PTR cs:[esi-0x40]
  415962:	outs   dx,BYTE PTR ds:[esi]
  415963:	fnstenv [eax+0x10]
  415966:	add    al,0x9c
  415968:	or     eax,0xec5d7d8e
  41596d:	xor    bh,0x31
  415970:	push   edx
  415971:	adc    BYTE PTR [ecx+0x69],0x3
  415975:	add    bh,BYTE PTR [edx+0x49]
  415978:	cmc    
  415979:	in     al,dx
  41597a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597b:	loope  0x4158ff
  41597d:	mov    fs,WORD PTR [ebp-0x74]
  415980:	retf   
  415981:	fild   WORD PTR [esi-0x32701120]
  415987:	jno    0x415977
  415989:	jae    0x41595b
  41598b:	test   eax,0x5884f17d
  415990:	inc    esi
  415991:	push   ss
  415992:	fistp  QWORD PTR [ebp+0x41]
  415995:	adc    al,0xa9
  415997:	ja     0x4159dc
  415999:	in     eax,dx
  41599a:	mov    edx,0xc6e1f53d
  41599f:	add    BYTE PTR [eax+ebp*8+0x16],ah
  4159a3:	pop    edx
  4159a4:	int    0x4c
  4159a6:	lds    esi,FWORD PTR [ecx]
  4159a8:	xchg   esi,eax
  4159a9:	data16 sahf 
  4159ab:	mov    ecx,DWORD PTR [esi-0x46a3ca8]
  4159b1:	add    al,0xcf
  4159b3:	add    DWORD PTR [edx],ebx
  4159b5:	mov    ch,0x1
  4159b7:	pushf  
  4159b8:	xor    bh,BYTE PTR [esi-0x78d5bae3]
  4159be:	jnp    0x415943
  4159c0:	call   0xc656:0x7068ed7a
  4159c7:	push   0xa8349ff8
  4159cc:	pop    ebx
  4159cd:	cwde   
  4159ce:	rcl    DWORD PTR [esi],1
  4159d0:	xchg   ebp,eax
  4159d1:	pop    ebx
  4159d2:	gs cmp al,0x68
  4159d5:	ja     0x41595e
  4159d7:	sbb    ecx,DWORD PTR [eax-0x8]
  4159da:	call   0xb4117bf0
  4159df:	add    DWORD PTR [edx-0x6c],0x1b0b9130
  4159e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e7:	fistp  DWORD PTR [ecx+0x637739b7]
  4159ed:	fsub   QWORD PTR [eax+0x59]
  4159f0:	pop    esp
  4159f1:	out    dx,al
  4159f2:	sub    al,0x98
  4159f4:	ja     0x415a45
  4159f6:	add    BYTE PTR [edx+0x810e453],dl
  4159fc:	xchg   esp,eax
  4159fd:	xchg   edi,eax
  4159fe:	adc    al,0x56
  415a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a01:	gs jno 0x415a69
  415a04:	enter  0xe85c,0x24
  415a08:	adc    eax,ebp
  415a0a:	inc    ebx
  415a0b:	and    ch,ah
  415a0d:	xor    bh,0x1
  415a10:	cmp    BYTE PTR [ebx+0x6ec28a87],cl
  415a16:	outs   dx,BYTE PTR ds:[esi]
  415a17:	xor    BYTE PTR [ecx+0x3302bcfe],bl
  415a1d:	xchg   DWORD PTR [eax+0x7050b9e0],ecx
  415a23:	or     bl,BYTE PTR [ebp-0x1bed63d6]
  415a29:	lea    ecx,[ecx-0x373c6e98]
  415a2f:	xchg   esp,eax
  415a30:	les    edi,FWORD PTR [edi]
  415a32:	ins    BYTE PTR es:[edi],dx
  415a33:	pop    es
  415a34:	inc    BYTE PTR [esi+edi*1+0x6a109b00]
  415a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3c:	test   eax,0xd7e2f70
  415a41:	cmp    al,0xeb
  415a43:	mov    ch,0x9a
  415a45:	popf   
  415a46:	or     al,0x48
  415a48:	xchg   DWORD PTR [ebx+ebp*2-0x1a],ecx
  415a4c:	or     DWORD PTR [eax],esp
  415a4e:	scas   al,BYTE PTR es:[edi]
  415a4f:	jmp    0x9a74ac76
  415a54:	test   al,0xdf
  415a56:	xor    DWORD PTR [esi-0xfccb496],ebx
  415a5c:	mov    dl,0x82
  415a5e:	jp     0x415ab3
  415a60:	and    al,0xb6
  415a62:	cmp    BYTE PTR [eax+0x42],cl
  415a65:	pop    esp
  415a66:	clc    
  415a67:	ja     0x415ace
  415a69:	cli    
  415a6a:	dec    edx
  415a6b:	call   0xed9625f1
  415a70:	(bad)
  415a74:	retf   
  415a75:	adc    eax,0x38c6daee
  415a7a:	push   eax
  415a7b:	rcl    BYTE PTR [eax+0x45998381],cl
  415a81:	jno    0x415a39
  415a83:	fdivr  QWORD PTR [eax]
  415a85:	fwait
  415a86:	scas   al,BYTE PTR es:[edi]
  415a87:	mov    edx,0xbd4301df
  415a8c:	pop    esi
  415a8d:	xchg   edi,eax
  415a8e:	in     eax,dx
  415a8f:	adc    al,0x93
  415a91:	and    BYTE PTR [ecx-0x4874b5fc],cl
  415a97:	mov    ebx,0xf8bd9596
  415a9c:	pop    edi
  415a9d:	sti    
  415a9e:	bound  esp,QWORD PTR [ebp+0x27]
  415aa1:	add    edi,eax
  415aa3:	pushf  
  415aa4:	mov    cl,0x42
  415aa6:	js     0x415a39
  415aa8:	sahf   
  415aa9:	outs   dx,DWORD PTR ds:[esi]
  415aaa:	pusha  
  415aab:	in     eax,0x1a
  415aad:	inc    BYTE PTR [ebx+0x64272987]
  415ab3:	call   0x9d839769
  415ab8:	cdq    
  415ab9:	sbb    ch,ch
  415abb:	ins    DWORD PTR es:[edi],dx
  415abc:	mov    bl,0x18
  415abe:	push   0x5b76d988
  415ac3:	mov    al,BYTE PTR gs:[esi-0x78]
  415ac7:	or     eax,0xc360116e
  415acc:	test   eax,0x6de2a4a6
  415ad1:	xchg   ebx,eax
  415ad2:	les    ebx,FWORD PTR [esi]
  415ad4:	and    edx,DWORD PTR [edi+0xb]
  415ad7:	stc    
  415ad8:	sbb    DWORD PTR [edx+0x5f6dcf87],esp
  415ade:	stos   BYTE PTR es:[edi],al
  415adf:	stos   BYTE PTR es:[edi],al
  415ae0:	mov    bl,0xd7
  415ae2:	pop    es
  415ae3:	cld    
  415ae4:	add    eax,0x15535d84
  415ae9:	pop    ecx
  415aea:	ins    DWORD PTR es:[edi],dx
  415aeb:	(bad)  
  415aec:	test   al,0x77
  415aee:	mov    al,0xb4
  415af0:	pop    ds
  415af1:	sbb    BYTE PTR [ecx*8+0x3d602b05],bh
  415af8:	cdq    
  415af9:	out    dx,al
  415afa:	sbb    bl,BYTE PTR [bx+si]
  415afd:	in     eax,0x2c
  415aff:	mov    edx,DWORD PTR [edx+0x32b103cd]
  415b05:	xor    bl,ah
  415b07:	add    eax,0xe4354694
  415b0c:	adc    BYTE PTR [ebx-0x5d],ch
  415b0f:	icebp  
  415b10:	sub    al,0x1b
  415b12:	jnp    0x415b8c
  415b14:	xor    BYTE PTR [edi+0x7f59b04a],al
  415b1a:	dec    eax
  415b1b:	lock push cs
  415b1d:	and    BYTE PTR ds:0xc34ad808,dl
  415b23:	inc    ecx
  415b24:	mov    dl,0x61
  415b26:	xchg   edx,eax
  415b27:	push   ebx
  415b28:	rol    BYTE PTR [ebx],1
  415b2a:	mov    esi,ebp
  415b2c:	xlat   BYTE PTR ds:[ebx]
  415b2d:	pop    ebx
  415b2e:	aaa    
  415b2f:	push   edx
  415b30:	push   ebx
  415b31:	xchg   ch,ch
  415b33:	jae    0x415b10
  415b35:	aas    
  415b36:	jb     0x415acd
  415b38:	pushf  
  415b39:	sub    ecx,ebp
  415b3b:	dec    edi
  415b3c:	mov    edx,0x8ecb42e5
  415b41:	xchg   ecx,eax
  415b42:	jbe    0x415ad7
  415b44:	sbb    edi,ebp
  415b46:	in     eax,dx
  415b47:	xchg   edi,eax
  415b48:	inc    eax
  415b49:	mov    ecx,eax
  415b4b:	or     DWORD PTR [esi],ebx
  415b4d:	mov    dl,0x56
  415b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b50:	sbb    al,0x2a
  415b52:	dec    ebx
  415b53:	int3   
  415b54:	push   ss
  415b55:	popf   
  415b56:	repz add eax,0x8eaa749
  415b5c:	fcomp  QWORD PTR [eax+0x56041c23]
  415b62:	push   ecx
  415b63:	sub    eax,0xd70e9b40
  415b68:	pusha  
  415b69:	repnz inc edi
  415b6b:	mov    dh,0x19
  415b6d:	(bad)  
  415b6e:	not    esp
  415b70:	adc    eax,0xb59c009b
  415b75:	pushf  
  415b76:	mov    es,WORD PTR [ecx-0x48]
  415b79:	mov    cl,0xb9
  415b7b:	jle    0x415be4
  415b7d:	sbb    BYTE PTR [edx-0x8fee23d],ch
  415b83:	mov    eax,DWORD PTR [ecx+ebp*2-0x6d39931a]
  415b8a:	cmp    DWORD PTR [ecx+0x43259f8d],0xfffffff3
  415b91:	stos   BYTE PTR es:[edi],al
  415b92:	loopne 0x415bdc
  415b94:	retf   0x976d
  415b97:	fldz   
  415b99:	nop
  415b9a:	xchg   esp,eax
  415b9b:	push   eax
  415b9c:	lahf   
  415b9d:	jle    0x415b40
  415b9f:	popa   
  415ba0:	push   ecx
  415ba1:	add    BYTE PTR [ebp+0x4dcd1d34],cl
  415ba7:	cmp    ebx,esi
  415ba9:	in     al,dx
  415baa:	imul   esp,DWORD PTR [eax+0x38],0xa8a7744f
  415bb1:	loopne 0x415b49
  415bb3:	sbb    dh,bl
  415bb5:	dec    ebp
  415bb6:	les    edx,FWORD PTR [edx+0x46]
  415bb9:	iret   
  415bba:	cld    
  415bbb:	lds    esp,FWORD PTR [edx]
  415bbd:	add    al,BYTE PTR [edx+0x4e1c3128]
  415bc3:	xor    BYTE PTR [edi-0x73],dl
  415bc6:	nop
  415bc7:	add    bl,bh
  415bc9:	jb     0x415b66
  415bcb:	adc    dl,dh
  415bcd:	xor    ebp,DWORD PTR [esi]
  415bcf:	(bad)  [edx+0xb88a253]
  415bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd6:	pop    esp
  415bd7:	jno    0x415bdc
  415bd9:	dec    edx
  415bda:	or     esp,DWORD PTR [edi]
  415bdc:	ins    DWORD PTR es:[edi],dx
  415bdd:	scas   eax,DWORD PTR es:[edi]
  415bde:	ror    esp,cl
  415be0:	test   BYTE PTR [eax+0x6ad6c04d],bh
  415be6:	out    dx,eax
  415be7:	and    BYTE PTR [eax-0x6fcf299d],dh
  415bed:	aas    
  415bee:	enter  0x2b48,0xbf
  415bf2:	test   ch,0x73
  415bf5:	aas    
  415bf6:	sbb    DWORD PTR [esi+0x55],eax
  415bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfa:	test   dh,cl
  415bfc:	into   
  415bfd:	scas   eax,DWORD PTR es:[edi]
  415bfe:	in     al,0xee
  415c00:	call   0x2e3ac799
  415c05:	icebp  
  415c06:	inc    ecx
  415c07:	mov    dh,0x4d
  415c09:	(bad)  
  415c0a:	ins    DWORD PTR es:[edi],dx
  415c0b:	and    DWORD PTR [ebx-0x31],esi
  415c0e:	(bad)  
  415c0f:	cmp    al,0x8c
  415c11:	xchg   esi,eax
  415c12:	cmp    al,0x2c
  415c14:	sub    BYTE PTR [ebx-0x11621a8b],cl
  415c1a:	ss add ecx,ebx
  415c1d:	mov    ch,0x60
  415c1f:	std    
  415c20:	push   es
  415c21:	fist   DWORD PTR [esi*8-0x265cd5af]
  415c28:	mov    ch,0xb4
  415c2a:	inc    eax
  415c2b:	retf   0x16ad
  415c2e:	push   ebp
  415c2f:	mov    ah,0xbb
  415c31:	out    dx,al
  415c32:	adc    bh,dh
  415c34:	test   BYTE PTR [ebp-0x4650e4ce],0x20
  415c3b:	add    DWORD PTR [edi-0x61],0x4e
  415c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c40:	mov    ds:0xfc12f5fe,al
  415c45:	out    dx,eax
  415c46:	mov    al,0xe9
  415c48:	arpl   WORD PTR [ebx+0x14],di
  415c4b:	fmul   QWORD PTR [esi]
  415c4d:	cmc    
  415c4e:	mov    bl,0xf4
  415c50:	inc    esi
  415c51:	mov    esi,0x7b1ad01f
  415c56:	inc    ecx
  415c57:	lods   eax,DWORD PTR ds:[esi]
  415c58:	aaa    
  415c59:	sub    al,0x62
  415c5b:	cmp    bh,0x9b
  415c5e:	lds    esi,FWORD PTR ds:0xbf43a953
  415c64:	add    eax,DWORD PTR [edx-0x15ef4332]
  415c6a:	mov    edi,0x6adf73a6
  415c6f:	outs   dx,BYTE PTR ds:[esi]
  415c70:	inc    edi
  415c71:	xchg   edi,eax
  415c72:	xor    ebx,DWORD PTR [edi+edi*8-0x5d6d5b39]
  415c79:	cwde   
  415c7a:	xchg   ebx,eax
  415c7b:	cmp    DWORD PTR [edi+eiz*8-0x45e01c02],esi
  415c82:	fcomp  QWORD PTR [edx]
  415c84:	ss sbb al,0x48
  415c87:	push   ds
  415c88:	mov    BYTE PTR [ebx+0x4908f581],ch
  415c8e:	sub    ebx,0x51
  415c91:	sti    
  415c92:	rol    BYTE PTR [ecx],1
  415c94:	int3   
  415c95:	sbb    BYTE PTR [ebx+ecx*2+0x22ac07aa],al
  415c9c:	repz dec esp
  415c9e:	jne    0x415cb1
  415ca0:	jmp    0x30ac:0x9308578a
  415ca7:	fwait
  415ca8:	pop    edi
  415ca9:	jnp    0x415c8e
  415cab:	cwde   
  415cac:	sti    
  415cad:	and    esp,DWORD PTR [edi]
  415caf:	popf   
  415cb0:	mov    eax,0x967cbe35
  415cb5:	ds sub al,0x86
  415cb8:	mov    edi,DWORD PTR [edx-0x46d180db]
  415cbe:	xor    al,0x74
  415cc0:	mov    esp,0x7d497e7c
  415cc5:	aam    0x74
  415cc7:	and    ebx,DWORD PTR [eax-0x3e]
  415cca:	mov    edi,0x33d6ff02
  415ccf:	ins    DWORD PTR es:[edi],dx
  415cd0:	lea    edx,[ebx+0x12a349de]
  415cd6:	jp     0x415cc6
  415cd8:	sbb    edi,DWORD PTR [eax-0x7]
  415cdb:	inc    ebp
  415cdc:	xchg   ebx,eax
  415cdd:	aaa    
  415cde:	xchg   edx,eax
  415cdf:	lds    eax,FWORD PTR [ebx+0x22]
  415ce2:	arpl   WORD PTR [edi],bx
  415ce4:	ror    BYTE PTR [esi+0x57],1
  415ce7:	cmp    DWORD PTR [ebx-0x4d7dace4],ecx
  415ced:	daa    
  415cee:	sub    al,0x32
  415cf0:	shl    BYTE PTR [esi],0x83
  415cf3:	push   ecx
  415cf4:	sub    eax,0x95c93082
  415cf9:	outs   dx,DWORD PTR ds:[esi]
  415cfa:	mov    al,0x90
  415cfc:	jle    0x415d5e
  415cfe:	mov    ds:0x3aae15b0,eax
  415d03:	jbe    0x415d5f
  415d05:	shr    DWORD PTR [eax],1
  415d07:	mov    esp,0x34bad27b
  415d0c:	jl     0x415d72
  415d0e:	and    DWORD PTR [edi],0x43ee3c7d
  415d14:	shl    BYTE PTR [ecx*2-0x530717fe],0x55
  415d1c:	dec    BYTE PTR [ebx]
  415d1e:	xchg   BYTE PTR [esi],bh
  415d20:	jae    0x415cb8
  415d22:	sbb    esi,0xffffff88
  415d25:	mov    ds:0x6761c977,eax
  415d2a:	add    ebp,DWORD PTR [ebp-0x34]
  415d2d:	jmp    0x7ae143da
  415d32:	sub    esi,ebx
  415d34:	add    al,0xde
  415d36:	push   edi
  415d37:	std    
  415d38:	pop    ebx
  415d39:	adc    BYTE PTR [ebp+0x64cc0039],ch
  415d3f:	call   0xe035:0x77d6253d
  415d46:	mov    esp,0x561da3c7
  415d4b:	sub    esi,DWORD PTR [ecx-0x298e156e]
  415d51:	add    al,0x33
  415d53:	xor    DWORD PTR [edi-0x253f1e14],edi
  415d59:	xor    al,0x50
  415d5b:	in     al,0x4a
  415d5d:	les    ecx,FWORD PTR [ecx+0x2b2ef205]
  415d63:	in     al,0xea
  415d65:	outs   dx,BYTE PTR ds:[esi]
  415d66:	xor    DWORD PTR [esi+eiz*2-0x446f4bd3],ebx
  415d6d:	repnz pop esp
  415d6f:	sbb    DWORD PTR [ebp+0x21e56de8],esp
  415d75:	sub    ah,BYTE PTR [ebx]
  415d77:	jns    0x415dd5
  415d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7a:	push   ds
  415d7b:	and    BYTE PTR [edi-0x34],bl
  415d7e:	stos   DWORD PTR es:[edi],eax
  415d7f:	es fadd st,st(6)
  415d82:	xchg   edx,eax
  415d83:	mov    esp,0xfdb8e27c
  415d88:	mov    ebx,0xd03c7067
  415d8d:	pop    es
  415d8e:	push   si
  415d90:	ins    BYTE PTR es:[edi],dx
  415d91:	in     al,dx
  415d92:	mov    al,0xa1
  415d94:	sub    ecx,DWORD PTR [ebx-0x5f]
  415d97:	inc    ebp
  415d98:	xchg   edi,eax
  415d99:	xlat   BYTE PTR ds:[ebx]
  415d9a:	mov    ecx,gs
  415d9c:	xchg   ebp,eax
  415d9d:	xor    DWORD PTR [edi-0x431d2832],0xffffff87
  415da4:	ja     0x415d86
  415da6:	sbb    al,0x42
  415da8:	neg    DWORD PTR [edi-0x325af9c5]
  415dae:	sti    
  415daf:	push   cs
  415db0:	or     esi,DWORD PTR [ecx]
  415db2:	int3   
  415db3:	(bad)  
  415db4:	or     bl,bh
  415db6:	(bad)  
  415db7:	jb     0x415dfb
  415db9:	adc    DWORD PTR [ecx+eax*1-0x383e584b],ecx
  415dc0:	lahf   
  415dc1:	loop   0x415d5f
  415dc3:	aas    
  415dc4:	aam    0xe9
  415dc6:	int    0x77
  415dc8:	lock xlat BYTE PTR ds:[ebx]
  415dca:	lock xchg edi,eax
  415dcc:	mov    ebx,0x61f30d76
  415dd1:	int    0xa4
  415dd3:	sbb    eax,0xb264a9f3
  415dd8:	fldcw  WORD PTR [eax-0x6f86e46]
  415dde:	fld    TBYTE PTR [ebx+ebp*4+0x17]
  415de2:	outs   dx,DWORD PTR ds:[esi]
  415de3:	mov    cl,BYTE PTR [esi+0x69]
  415de6:	sub    al,0xf2
  415de8:	mov    edx,0xb640da3
  415ded:	push   esi
  415dee:	xlat   BYTE PTR ds:[ebx]
  415def:	pop    ebp
  415df0:	fsub   st(3),st
  415df2:	cmc    
  415df3:	gs sahf 
  415df5:	pop    ss
  415df6:	aam    0x14
  415df8:	iret   
  415df9:	call   0xf0d18e98
  415dfe:	mov    al,0x6f
  415e00:	cmp    eax,0x40201b31
  415e05:	push   eax
  415e06:	push   eax
  415e07:	pop    ecx
  415e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e09:	jbe    0x415e0f
  415e0b:	ret    
  415e0c:	push   0xffffff82
  415e0e:	inc    esi
  415e0f:	dec    ecx
  415e10:	call   0x49e1:0xf7fd1c6a
  415e17:	ins    DWORD PTR es:[edi],dx
  415e18:	jae    0x415da3
  415e1a:	xchg   edi,eax
  415e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1c:	(bad)  
  415e1d:	aad    0x46
  415e1f:	lds    ecx,FWORD PTR [edi+0x40b02a6e]
  415e25:	or     ch,BYTE PTR [ebp-0x47]
  415e28:	nop
  415e29:	out    dx,eax
  415e2a:	fucom  st(2)
  415e2c:	cdq    
  415e2d:	stc    
  415e2e:	pop    es
  415e2f:	push   0x889771b9
  415e34:	sahf   
  415e35:	sbb    edi,DWORD PTR [edi]
  415e37:	or     esp,edx
  415e39:	dec    ebp
  415e3a:	add    al,0xbd
  415e3c:	or     DWORD PTR [ecx],ebx
  415e3e:	cmp    DWORD PTR [ecx],esi
  415e40:	(bad)  
  415e41:	and    bh,BYTE PTR [edi]
  415e43:	cmp    DWORD PTR [edx+edx*1],esp
  415e46:	lea    esi,[edi]
  415e48:	bound  edi,QWORD PTR [edx]
  415e4a:	cmc    
  415e4b:	hlt    
  415e4c:	fdivr  QWORD PTR [esi+0x19d18a64]
  415e52:	enter  0x9fa6,0x25
  415e56:	lds    esi,FWORD PTR [ebx+0x74]
  415e59:	pusha  
  415e5a:	loopne 0x415e49
  415e5c:	sub    ecx,ecx
  415e5e:	in     al,0x5d
  415e60:	fisttp WORD PTR [edi-0x51a8625e]
  415e66:	add    BYTE PTR [ebx+eax*2],dl
  415e69:	inc    edx
  415e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e6b:	cmp    dl,cl
  415e6d:	lods   al,BYTE PTR ds:[esi]
  415e6e:	gs push 0x678db6bc
  415e74:	dec    esp
  415e75:	push   ss
  415e76:	ins    DWORD PTR es:[edi],dx
  415e77:	call   0x6084:0x38417f18
  415e7e:	icebp  
  415e7f:	dec    ebp
  415e80:	sti    
  415e81:	jbe    0x415eda
  415e83:	push   0x5
  415e85:	cmp    al,0xae
  415e87:	and    edx,DWORD PTR [ebx]
  415e89:	mov    ch,0xd0
  415e8b:	pop    ecx
  415e8c:	xchg   DWORD PTR [edi-0x73],ebx
  415e8f:	adc    DWORD PTR [edx],0x2f0e0dd5
  415e95:	(bad)  
  415e96:	mov    ebx,0x749ac8dc
  415e9b:	sub    esp,DWORD PTR [edx-0x7e]
  415e9e:	mov    ecx,esi
  415ea0:	pop    eax
  415ea1:	loopne 0x415ef3
  415ea3:	scas   eax,DWORD PTR es:[edi]
  415ea4:	mov    esi,0xbb7a35ea
  415ea9:	cdq    
  415eaa:	mov    ds:0xdf5ce597,eax
  415eaf:	mov    BYTE PTR [esi+eax*2-0x2ff5a846],bl
  415eb6:	cmp    esp,DWORD PTR [eax+0x31]
  415eb9:	int3   
  415eba:	pushf  
  415ebb:	mov    cl,0x65
  415ebd:	inc    esp
  415ebe:	mov    ?,WORD PTR [edi]
  415ec0:	add    al,0x4f
  415ec2:	cli    
  415ec3:	push   es
  415ec4:	and    BYTE PTR [ecx-0x52fff505],0xde
  415ecb:	clc    
  415ecc:	cmp    esi,esp
  415ece:	nop
  415ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed0:	loopne 0x415e79
  415ed2:	bound  ecx,QWORD PTR [ebp-0xd3fc4b7]
  415ed8:	jge    0x415f39
  415eda:	call   0x61ba675c
  415edf:	shl    BYTE PTR [edx+0x489868e9],cl
  415ee5:	popf   
  415ee6:	stc    
  415ee7:	arpl   WORD PTR [esi+0x6889f761],si
  415eed:	out    0x80,eax
  415eef:	or     ecx,esi
  415ef1:	outs   dx,DWORD PTR ds:[esi]
  415ef2:	jp     0x415f53
  415ef4:	repnz mov WORD PTR [ecx+0x6ac7cf20],fs
  415efb:	fisubr WORD PTR [esi]
  415efd:	push   0xb9664b82
  415f02:	mov    edx,0xb7be8f25
  415f07:	sbb    eax,0x25993435
  415f0c:	shl    edx,0xae
  415f0f:	pop    ebx
  415f10:	pop    es
  415f11:	cli    
  415f12:	xchg   esp,eax
  415f13:	push   ebp
  415f14:	mov    esi,0x11022d1b
  415f19:	mov    ebp,0xfc7294c
  415f1e:	ret    0xba1a
  415f21:	rcr    DWORD PTR [ecx-0x2116d23c],0xd3
  415f28:	test   eax,0x1b5fd622
  415f2d:	or     ecx,0xffffff89
  415f30:	push   ds
  415f31:	ja     0x415f7f
  415f33:	inc    ebx
  415f34:	jnp    0x415edf
  415f36:	js     0x415f10
  415f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f39:	mov    bl,0x46
  415f3b:	shl    BYTE PTR [eax+0x74],0xec
  415f3f:	pop    eax
  415f40:	xor    DWORD PTR [esi-0x4d758eec],0xb9bfd92b
  415f4a:	cli    
  415f4b:	dec    ecx
  415f4c:	(bad)  
  415f4d:	aam    0xb9
  415f4f:	dec    esp
  415f50:	ins    DWORD PTR es:[edi],dx
  415f51:	and    BYTE PTR [eax+0x70],bh
  415f54:	pop    edx
  415f55:	dec    edx
  415f56:	imul   eax,DWORD PTR [esi+0x38],0xffffffa1
  415f5a:	fwait
  415f5b:	push   ebp
  415f5c:	adc    DWORD PTR [ebx-0x74],ecx
  415f5f:	daa    
  415f60:	retf   
  415f61:	xor    DWORD PTR [esi+0x2e],eax
  415f64:	push   ebp
  415f65:	sub    eax,0xa64b56a
  415f6a:	cmp    BYTE PTR [edx-0x5f1a653c],0x9c
  415f71:	cs dec esp
  415f73:	lock mov ebp,0x123ad1e1
  415f79:	ret    
  415f7a:	out    0x67,eax
  415f7c:	leave  
  415f7d:	leave  
  415f7e:	jp     0x415f9e
  415f80:	fild   DWORD PTR [ebp-0x69]
  415f83:	or     DWORD PTR [edx+0x7cbc41ef],edi
  415f89:	push   ecx
  415f8a:	push   0x33
  415f8c:	dec    ecx
  415f8d:	pop    edi
  415f8e:	add    al,0xd2
  415f90:	jae    0x415f88
  415f92:	(bad)  
  415f93:	mov    ch,0x10
  415f95:	xchg   edx,eax
  415f96:	pop    es
  415f97:	mov    ah,0xde
  415f99:	aam    0x21
  415f9b:	push   es
  415f9c:	repnz adc eax,0x6fdd491a
  415fa2:	push   es
  415fa3:	cmc    
  415fa4:	and    al,0xa8
  415fa6:	xor    DWORD PTR [esi+0x55],0xffffffc0
  415faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fab:	retf   0x82c2
  415fae:	cmp    esi,DWORD PTR [edx]
  415fb0:	and    ebp,DWORD PTR [edx-0xd34fc91]
  415fb6:	jbe    0x415f4c
  415fb8:	xchg   esp,eax
  415fb9:	in     al,0x9a
  415fbb:	aad    0x81
  415fbd:	or     eax,0x4df99593
  415fc2:	neg    BYTE PTR [esi-0x5]
  415fc5:	sbb    al,0x67
  415fc7:	jmp    0x5e0f:0xa61c372f
  415fce:	cmp    BYTE PTR [edi+ebx*1+0x20],al
  415fd2:	sub    BYTE PTR [ecx-0x4f866b82],bl
  415fd8:	loopne 0x415fe3
  415fda:	mov    ds:0x71425137,eax
  415fdf:	lahf   
  415fe0:	and    eax,edi
  415fe2:	jle    0x415f92
  415fe4:	pusha  
  415fe5:	push   esp
  415fe6:	ror    BYTE PTR [edi+ebx*1+0x46b0b4d5],0x91
  415fee:	outs   dx,BYTE PTR ds:[esi]
  415fef:	ficomp WORD PTR [ecx-0x42926e15]
  415ff5:	pushf  
  415ff6:	and    BYTE PTR [esi+0x9d48604],cl
  415ffc:	dec    esp
  415ffd:	out    dx,al
  415ffe:	call   0x9be749a3
  416003:	jg     0x415fb4
  416005:	stos   DWORD PTR es:[edi],eax
  416006:	(bad)  
  416007:	stc    
  416008:	test   al,0xe4
  41600a:	sbb    eax,DWORD PTR [esi-0x23]
  41600d:	push   ebx
  41600e:	test   BYTE PTR [edx],dl
  416010:	aaa    
  416011:	ds pop ebx
  416013:	cmp    BYTE PTR [edi+0x3fc9d286],bl
  416019:	shr    BYTE PTR [edx+ecx*2-0x2f78194e],1
  416020:	pop    es
  416021:	ret    
  416022:	fisubr DWORD PTR [ebx]
  416024:	and    ebp,DWORD PTR [ebp-0x7d0d7d26]
  41602a:	mov    ebp,0xec0db1ff
  41602f:	nop
  416030:	fidivr DWORD PTR [ebp-0x28]
  416033:	jns    0x41601b
  416035:	cmp    BYTE PTR [edx+0x6f],0x5b
  416039:	lods   eax,DWORD PTR ds:[esi]
  41603a:	aam    0x75
  41603c:	aam    0xa0
  41603e:	jo     0x41609e
  416040:	gs adc dl,bl
  416043:	ficomp WORD PTR [esi+0x24]
  416046:	(bad)
  41604b:	ss mov esi,0x269cc24a
  416051:	xchg   ecx,eax
  416052:	pop    eax
  416053:	xchg   DWORD PTR [edx-0x19386b9b],esi
  416059:	mov    dl,0xc4
  41605b:	imul   edx,esi,0xef23a470
  416061:	cmc    
  416062:	and    DWORD PTR [ebp-0x49],0x373403f8
  416069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41606a:	sbb    edi,eax
  41606c:	push   eax
  41606d:	adc    eax,0x9b09e83
  416072:	pop    es
  416073:	and    al,0x4e
  416075:	mov    bh,0x3f
  416077:	leave  
  416078:	je     0x416079
  41607a:	and    WORD PTR [eax],bx
  41607d:	dec    ebx
  41607e:	jle    0x4160db
  416080:	sub    al,0xe1
  416082:	ret    0xd023
  416085:	test   BYTE PTR [eax],bl
  416087:	push   cs
  416088:	add    al,0x78
  41608a:	mov    bl,0x9f
  41608c:	jge    0x41603e
  41608e:	sbb    DWORD PTR [ebx+ebx*2],esi
  416091:	in     al,0xc9
  416093:	mov    ecx,DWORD PTR [esi+0x3c]
  416096:	pop    ebp
  416097:	add    ch,BYTE PTR [ebp-0x50]
  41609a:	xor    eax,0xc318782e
  41609f:	mov    ecx,0x8a82966c
  4160a4:	sahf   
  4160a5:	mov    ds:0x9204ee54,al
  4160aa:	lods   al,BYTE PTR ds:[esi]
  4160ab:	or     al,0xfd
  4160ad:	sti    
  4160ae:	add    ah,BYTE PTR ds:0xe0339777
  4160b4:	repnz rcl BYTE PTR [ebx],0x84
  4160b8:	stos   DWORD PTR es:[edi],eax
  4160b9:	ret    
  4160ba:	sub    eax,0x77bbf4fe
  4160bf:	inc    ebx
  4160c0:	cmp    al,0x8b
  4160c2:	sbb    eax,0x951a68c5
  4160c7:	sub    al,0x59
  4160c9:	or     dh,BYTE PTR [eax*2+0x7ea5fd53]
  4160d0:	fbstp  TBYTE PTR [edi]
  4160d2:	(bad)
  4160d6:	out    dx,eax
  4160d7:	(bad)  
  4160d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d9:	ret    
  4160da:	xchg   edi,eax
  4160db:	mov    ds:0x14303974,eax
  4160e0:	dec    eax
  4160e1:	inc    ebx
  4160e2:	punpckhbw mm3,QWORD PTR [edi]
  4160e5:	mov    esi,0x2b9f5154
  4160ea:	inc    ebp
  4160eb:	shr    BYTE PTR [edi+0x6],cl
  4160ee:	arpl   bp,di
  4160f0:	loope  0x4160ab
  4160f2:	pop    esp
  4160f3:	outs   dx,BYTE PTR ds:[esi]
  4160f4:	in     eax,dx
  4160f5:	in     eax,0xc1
  4160f7:	imul   ebx,DWORD PTR [eax-0x172df6d4],0xffffff98
  4160fe:	dec    esi
  4160ff:	(bad)  
  416100:	popf   
  416101:	rcr    DWORD PTR [ecx],1
  416103:	jns    0x41615a
  416105:	int    0x6c
  416107:	jge    0x416159
  416109:	call   0xf15c:0x85df3363
  416110:	mov    ebp,DWORD PTR [edx+eax*4]
  416113:	jmp    0x9b99:0x2e4b1dd1
  41611a:	(bad)  
  41611b:	int3   
  41611c:	push   cs
  41611d:	xchg   edi,eax
  41611e:	inc    esp
  41611f:	ror    DWORD PTR [edi-0x448d29c6],0xbf
  416126:	mov    eax,ds:0x58143dac
  41612b:	dec    ah
  41612d:	test   al,0x35
  41612f:	shl    DWORD PTR [ecx],0x76
  416132:	cli    
  416133:	adc    BYTE PTR [edx+esi*4],dh
  416136:	aam    0x14
  416138:	jecxz  0x4161b4
  41613a:	sub    WORD PTR [edx],sp
  41613d:	xlat   BYTE PTR ds:[ebx]
  41613e:	loope  0x416134
  416140:	cdq    
  416141:	jb     0x416146
  416143:	out    dx,eax
  416144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416145:	jg     0x4161b5
  416147:	pop    ecx
  416148:	sub    eax,0xbb9cc031
  41614d:	outs   dx,DWORD PTR ds:[esi]
  41614e:	jae    0x4161cb
  416150:	jge    0x4161ac
  416152:	stos   DWORD PTR es:[edi],eax
  416153:	mov    ah,0x6b
  416155:	sub    DWORD PTR [edi-0x13d889c6],ecx
  41615b:	pop    es
  41615c:	push   es
  41615d:	cmp    DWORD PTR [ebx-0x7e],ebx
  416160:	into   
  416161:	sar    DWORD PTR [edx-0x47622b60],1
  416167:	retf   0x99c2
  41616a:	loope  0x4161a8
  41616c:	cli    
  41616d:	mov    BYTE PTR [edi+0x18],bl
  416170:	xchg   ecx,eax
  416171:	mov    edi,0x1380e966
  416176:	sub    ah,BYTE PTR [ecx]
  416178:	ror    DWORD PTR [ebx+eiz*8],cl
  41617b:	xchg   ecx,eax
  41617c:	add    DWORD PTR [ebx+esi*8+0x10],ebx
  416180:	shl    bl,0xcb
  416183:	popf   
  416184:	ret    
  416185:	add    DWORD PTR [ebx],ebx
  416187:	push   0x80d6c719
  41618c:	mov    dh,0x8
  41618e:	jmp    FWORD PTR [esi+0x8ae7031]
  416194:	ror    DWORD PTR [esi+0x7615c6fe],cl
  41619a:	cs in  eax,0xeb
  41619d:	and    DWORD PTR [edx+0x7d5c7944],ebx
  4161a3:	jne    0x41620c
  4161a5:	imul   DWORD PTR [edi]
  4161a7:	xor    eax,ecx
  4161a9:	out    dx,al
  4161aa:	or     BYTE PTR [ecx+0x72],bl
  4161ad:	jle    0x41613b
  4161af:	shl    BYTE PTR [esp+ebp*4+0x16],1
  4161b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b4:	sbb    eax,esi
  4161b6:	loop   0x4161f2
  4161b8:	jecxz  0x416161
  4161ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161bb:	pop    esp
  4161bc:	adc    dl,BYTE PTR [ebx-0x127eb7d2]
  4161c2:	enter  0x800,0x2d
  4161c6:	ds pop edx
  4161c8:	jne    0x416176
  4161ca:	sbb    DWORD PTR [esi-0x5f],0x6b
  4161ce:	lea    ecx,[esp+edx*1]
  4161d1:	fld    DWORD PTR [edx-0x27]
  4161d4:	xchg   DWORD PTR [eax+eiz*8+0x5],ebx
  4161d8:	sbb    al,0x25
  4161da:	out    0x68,al
  4161dc:	cmp    eax,0x4c476b35
  4161e1:	ret    0x5da4
  4161e4:	pop    edx
  4161e5:	pushf  
  4161e6:	fcmovnu st,st(2)
  4161e8:	mov    dh,0xfa
  4161ea:	mov    WORD PTR [ecx],gs
  4161ec:	cmc    
  4161ed:	daa    
  4161ee:	rcl    ebx,1
  4161f0:	in     eax,dx
  4161f1:	adc    BYTE PTR [esi],bl
  4161f3:	lds    ecx,FWORD PTR [esi-0x13]
  4161f6:	pop    ebp
  4161f7:	in     eax,0x0
  4161f9:	xor    al,0xd0
  4161fb:	mov    eax,DWORD PTR [edx+0x7c2aae0]
  416201:	imul   DWORD PTR [esi-0x3f]
  416204:	mov    bl,0xb0
  416206:	or     eax,0xd5bb30b5
  41620b:	jle    0x4161e0
  41620d:	and    esp,DWORD PTR [ebp-0x1a]
  416210:	icebp  
  416211:	jle    0x4161c1
  416213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416214:	test   al,0xd3
  416216:	rcr    BYTE PTR [ecx+0x6b762db],0x27
  41621d:	xor    BYTE PTR [ebx+0x3f],al
  416220:	jae    0x416298
  416222:	sbb    eax,0xa6873128
  416227:	loop   0x416229
  416229:	int    0xc4
  41622b:	xor    ebx,DWORD PTR ss:[ecx-0x2062e8b9]
  416232:	lea    edx,[edi-0x5a67ef74]
  416238:	and    al,BYTE PTR [ebp-0x36dc66eb]
  41623e:	jns    0x416255
  416240:	pop    ss
  416241:	sbb    eax,0x44f5efb7
  416246:	mov    ch,0xf0
  416248:	mov    esp,0x21eced38
  41624d:	or     BYTE PTR [ecx+ecx*4],cl
  416250:	mov    ebx,0xc44c44d5
  416255:	ja     0x416213
  416257:	pop    ebx
  416258:	xor    al,0x10
  41625a:	fwait
  41625b:	jp     0x416201
  41625d:	add    eax,0x497dbfc2
  416262:	fnstcw WORD PTR [edx+0x5]
  416265:	mov    es,WORD PTR [ebp-0x79361b86]
  41626b:	add    edi,DWORD PTR [eax]
  41626d:	add    al,0xbf
  41626f:	cmp    ebp,ebx
  416271:	mov    eax,ds:0x24a62774
  416276:	push   edi
  416277:	adc    dl,dl
  416279:	jb     0x416214
  41627b:	xor    ah,bh
  41627d:	fisttp QWORD PTR [ebp-0x5383f855]
  416283:	jg     0x41621a
  416285:	loopne 0x4162ec
  416287:	push   cs
  416288:	rcr    BYTE PTR [ebp+edx*2+0x9],cl
  41628c:	loop   0x41625f
  41628e:	xchg   ebp,eax
  41628f:	sub    ebx,edx
  416291:	fwait
  416292:	clc    
  416293:	(bad)  
  416294:	call   0x9e5fc52f
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x2e,eax
  416394:	and    cl,dl
  416396:	mov    edx,0x7a79575c
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x416323
  4163a0:	jg     0x41638d
  4163a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a3:	pushf  
  4163a4:	jg     0x4163b5
  4163a6:	(bad)  
  4163a7:	hlt    
  4163a8:	retf   0xff1f
  4163ab:	dec    esi
  4163ac:	or     al,0x24
  4163ae:	mov    edi,0xe2df46f4
  4163b3:	mov    dh,0x31
  4163b5:	(bad)  
  4163b6:	mov    ecx,0xf6e4d26f
  4163bb:	mov    edi,DWORD PTR [ebp+0x5d48f602]
  4163c1:	add    DWORD PTR [eax+0x56],ecx
  4163c4:	aas    
  4163c5:	rcr    ah,cl
  4163c7:	repnz push cs
  4163c9:	xchg   ebp,eax
  4163ca:	(bad)  [esi+edx*1]
  4163cd:	sbb    eax,0x47bbe99c
  4163d2:	mov    ebx,0x80ce87d7
  4163d7:	lods   al,BYTE PTR ds:[esi]
  4163d8:	pop    ds
  4163d9:	aad    0x23
  4163db:	scas   eax,DWORD PTR es:[edi]
  4163dc:	xchg   esi,eax
  4163dd:	sub    esp,ebx
  4163df:	inc    ebx
  4163e0:	jo     0x416431
  4163e2:	xor    BYTE PTR [eax],cl
  4163e4:	dec    esi
  4163e5:	sbb    DWORD PTR [edx+ebp*2+0x68dc4da8],0xf50bf460
  4163f0:	ror    DWORD PTR [ecx+eiz*1],cl
  4163f3:	cli    
  4163f4:	cmp    al,BYTE PTR [eax+0x52171611]
  4163fa:	mov    edi,0xdb0e5864
  4163ff:	sar    DWORD PTR [ebx-0x65],cl
  416402:	sub    al,al
  416404:	xchg   edx,eax
  416405:	test   BYTE PTR [edi],bh
  416407:	mov    dh,0xd9
  416409:	xor    cl,BYTE PTR [eax]
  41640b:	adc    al,0xef
  41640d:	push   eax
  41640e:	aam    0xe0
  416410:	mov    edx,0xf4c54ab2
  416415:	call   0xe321b3f9
  41641a:	sbb    DWORD PTR [eax+eiz*2+0x13],0xffffff90
  41641f:	mov    esp,0x27de19f4
  416424:	mov    edi,0x56c5154
  416429:	iret   
  41642a:	popf   
  41642b:	pop    eax
  41642c:	dec    esp
  41642d:	(bad)  
  41642e:	stos   BYTE PTR es:[edi],al
  41642f:	jmp    0x41646b
  416431:	adc    al,0x14
  416433:	sub    ebx,ebx
  416435:	mov    esi,0xfc64fd91
  41643a:	add    al,0x9d
  41643c:	mov    ebx,0x7d3051d4
  416441:	lahf   
  416442:	ja     0x4164bf
  416444:	sub    bl,BYTE PTR [esi+0x8d26462]
  41644a:	mul    DWORD PTR [ebx-0x1d]
  41644d:	loop   0x416434
  41644f:	sar    BYTE PTR [edi-0x3c],1
  416452:	push   es
  416453:	and    al,0x3b
  416455:	cwde   
  416456:	xchg   esp,eax
  416457:	mov    esp,0xc5855ba5
  41645c:	jno    0x416421
  41645e:	mov    cl,0xdb
  416460:	aad    0x2e
  416462:	aam    0x82
  416464:	sub    al,0x89
  416466:	or     al,0xb6
  416468:	bound  edx,QWORD PTR [eax-0x40]
  41646b:	cmp    eax,0x5bf93591
  416470:	in     eax,dx
  416471:	adc    DWORD PTR [eax],esp
  416473:	dec    ecx
  416474:	jo     0x4163f6
  416476:	jp     0x4164bf
  416478:	retf   0x491c
  41647b:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  41647e:	pushf  
  41647f:	cmp    dh,BYTE PTR [edx]
  416481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416482:	loop   0x416475
  416484:	ss iret 
  416486:	scas   al,BYTE PTR es:[edi]
  416487:	push   ebx
  416488:	pop    es
  416489:	sbb    BYTE PTR [eax+0x2],dl
  41648c:	adc    BYTE PTR [esi+0x7b],bl
  41648f:	mov    ebx,0xe7d414ec
  416494:	inc    edi
  416495:	push   ebp
  416496:	scas   eax,DWORD PTR es:[edi]
  416497:	mov    bl,0xa1
  416499:	jno    0x41650b
  41649b:	add    eax,0x99978d19
  4164a0:	loop   0x416477
  4164a2:	outs   dx,BYTE PTR ds:[esi]
  4164a3:	jge    0x416519
  4164a5:	xchg   ecx,eax
  4164a6:	lock or al,0x23
  4164a9:	arpl   WORD PTR [eax-0x3d],di
  4164ac:	mov    ch,0x91
  4164ae:	sub    BYTE PTR cs:[ebx*8-0x3623b5a],0x92
  4164b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b8:	or     eax,0xaad5cd86
  4164bd:	jbe    0x416458
  4164bf:	shr    BYTE PTR [edx-0x1ba3a343],0xd3
  4164c6:	cs retf 
  4164c8:	xor    DWORD PTR [ebx+esi*1],esp
  4164cb:	fld    TBYTE PTR [ebx]
  4164cd:	scas   al,BYTE PTR es:[edi]
  4164ce:	test   esi,ecx
  4164d0:	mov    edx,0xc4fb5070
  4164d5:	(bad)  
  4164d6:	repz xchg edx,eax
  4164d8:	mov    al,ds:0xf6003fe1
  4164dd:	inc    ebp
  4164de:	das    
  4164df:	mov    al,ds:0xcad17794
  4164e4:	ds inc esi
  4164e6:	sbb    eax,0x7c72c15a
  4164eb:	in     eax,0xca
  4164ed:	pop    edx
  4164ee:	mov    dl,0x82
  4164f0:	push   cs
  4164f1:	loop   0x41649f
  4164f3:	(bad)  
  4164f4:	push   0xffffffc3
  4164f6:	outs   dx,DWORD PTR ds:[esi]
  4164f7:	or     eax,DWORD PTR [eax+0x31]
  4164fa:	loope  0x416560
  4164fc:	and    al,0x88
  4164fe:	push   ebx
  4164ff:	stos   BYTE PTR es:[edi],al
  416500:	and    BYTE PTR [ecx-0x59],0x9a
  416504:	jb     0x41649f
  416506:	arpl   WORD PTR [edx],bp
  416508:	fld    st(6)
  41650a:	inc    esi
  41650b:	xchg   BYTE PTR [eax-0x2bc9cc56],ah
  416511:	retf   
  416512:	pop    esi
  416513:	sbb    al,0xdd
  416515:	arpl   WORD PTR ds:0x418666e3,ax
  41651b:	stc    
  41651c:	mov    eax,ds:0x3f523cc4
  416521:	scas   al,BYTE PTR es:[edi]
  416522:	inc    ecx
  416523:	dec    edi
  416524:	stc    
  416525:	add    eax,0x3f9798c9
  41652a:	rol    DWORD PTR [edx],1
  41652c:	cld    
  41652d:	or     DWORD PTR [esi-0x46],0x23b1c1c6
  416534:	jmp    0x788f:0xab01ba29
  41653b:	push   es
  41653c:	ja     0x416522
  41653e:	das    
  41653f:	gs mov edi,0xdbe7a273
  416545:	mov    ds:0x703c0935,al
  41654a:	inc    edi
  41654b:	outs   dx,BYTE PTR ds:[esi]
  41654c:	pop    es
  41654d:	fs inc ebx
  41654f:	or     BYTE PTR [edi+eax*2],dl
  416552:	mov    esp,0x44f19bd8
  416557:	lods   al,BYTE PTR ds:[esi]
  416558:	jmp    0xff2:0xfab69b61
  41655f:	int    0x53
  416561:	jge    0x4164f9
  416563:	jmp    DWORD PTR [edi+0x42959b4e]
  416569:	jns    0x4165c8
  41656b:	xor    edi,DWORD PTR [ebx+eiz*4+0x73]
  41656f:	out    0x2c,al
  416571:	xor    eax,0xe73590e3
  416576:	fsub   QWORD PTR [edi+0xb23a0e7]
  41657c:	adc    ebx,ebx
  41657e:	push   ebp
  41657f:	and    BYTE PTR [ebx-0x3f277190],dh
  416585:	or     BYTE PTR [edx-0x76],ah
  416588:	retf   
  416589:	fld    TBYTE PTR [edi-0x6d78d8f1]
  41658f:	int3   
  416590:	xchg   ecx,eax
  416591:	push   0x602f209f
  416596:	adc    DWORD PTR [ecx-0x2e],eax
  416599:	dec    edi
  41659a:	mov    cl,0xde
  41659c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659d:	nop
  41659e:	bsr    ecx,DWORD PTR [edx-0x54]
  4165a2:	lods   al,BYTE PTR ds:[esi]
  4165a3:	adc    ch,bl
  4165a5:	mov    ch,0xf1
  4165a7:	mov    ds:0x70e00a3,eax
  4165ac:	dec    edx
  4165ad:	xchg   ebx,eax
  4165ae:	sbb    dh,bl
  4165b0:	jnp    0x4165db
  4165b2:	aad    0x93
  4165b4:	and    esi,eax
  4165b6:	outs   dx,BYTE PTR ds:[esi]
  4165b7:	mov    al,0x2a
  4165b9:	int    0x76
  4165bb:	push   ecx
  4165bc:	out    dx,eax
  4165bd:	call   FWORD PTR [ecx]
  4165bf:	or     BYTE PTR [eax+0x72],cl
  4165c2:	mov    edx,DWORD PTR [edi-0xd4556c]
  4165c8:	loope  0x41663e
  4165ca:	scas   al,BYTE PTR es:[edi]
  4165cb:	daa    
  4165cc:	sbb    DWORD PTR [ebx],esp
  4165ce:	xchg   ebp,eax
  4165cf:	inc    eax
  4165d0:	(bad)
  4165d4:	sbb    cl,ch
  4165d6:	pop    esp
  4165d7:	retf   
  4165d8:	loope  0x416571
  4165da:	sbb    eax,0xb66edb4f
  4165e0:	jo     0x4165e9
  4165e2:	rcl    DWORD PTR [edi+0x3d474d74],0x7c
  4165e9:	jmp    0x416649
  4165eb:	adc    BYTE PTR [edi],0x9a
  4165ee:	addr16 mov bh,bh
  4165f1:	xchg   esp,eax
  4165f2:	add    eax,0x78b73fb2
  4165f7:	mov    ebx,0x92860b6d
  4165fc:	aad    0x9b
  4165fe:	mov    ah,0x89
  416600:	xchg   esi,eax
  416601:	inc    ebx
  416602:	mov    ebx,0xe0987d0d
  416607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416608:	test   DWORD PTR [eax+0x126dbe88],ecx
  41660e:	xor    eax,0xf280e497
  416614:	ret    
  416615:	mov    ecx,0x5411770d
  41661a:	push   ebx
  41661b:	push   eax
  41661c:	pop    ecx
  41661d:	stos   DWORD PTR es:[edi],eax
  41661e:	div    BYTE PTR [ebx-0x3e]
  416621:	leave  
  416622:	sar    BYTE PTR [edx],0x76
  416625:	jle    0x416629
  416627:	push   ds
  416628:	add    BYTE PTR [ecx-0x3cefd245],ah
  41662e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662f:	dec    edi
  416630:	test   DWORD PTR gs:[ebp+0x133395f9],esp
  416637:	loopne 0x41666a
  416639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663a:	xor    DWORD PTR [si],edi
  41663d:	pop    ebp
  41663e:	jg     0x41662c
  416640:	push   esp
  416641:	mov    ds:0x53dd9314,eax
  416646:	not    DWORD PTR [esp+esi*4]
  416649:	mov    ds:0xbb6b1b46,eax
  41664e:	ror    DWORD PTR [edi-0x62f21d86],0x9d
  416655:	sbb    BYTE PTR [esi+0x1bbf2748],0xd8
  41665c:	lahf   
  41665d:	(bad)  
  41665e:	std    
  41665f:	iret   
  416660:	inc    esp
  416661:	js     0x4166d8
  416663:	cmp    cl,BYTE PTR [ebx+eiz*2+0x47fdd6dd]
  41666a:	cmp    esi,DWORD PTR [edi]
  41666c:	idiv   DWORD PTR [ecx]
  41666e:	les    eax,FWORD PTR [edi+0x33]
  416671:	xor    ah,BYTE PTR [edx-0x77]
  416674:	cmp    ebp,esp
  416676:	fmul   DWORD PTR [ebx]
  416678:	xchg   edx,eax
  416679:	or     esp,DWORD PTR [ebp+0x12086201]
  41667f:	jl     0x4166b5
  416681:	int3   
  416682:	jb     0x4166cb
  416684:	aas    
  416685:	xchg   esi,eax
  416686:	das    
  416687:	xchg   esp,eax
  416688:	xlat   BYTE PTR ds:[ebx]
  416689:	jg     0x416694
  41668b:	jo     0x41663c
  41668d:	stos   BYTE PTR es:[edi],al
  41668e:	sbb    bl,BYTE PTR [esi+0x1c588e52]
  416694:	cmp    eax,0x3a76254a
  416699:	mov    esp,0x88cac968
  41669e:	addr16 mov edx,0x8cc15b8f
  4166a4:	mov    BYTE PTR [ecx],dl
  4166a6:	popf   
  4166a7:	(bad)  
  4166a8:	cmc    
  4166a9:	inc    ebp
  4166aa:	xor    al,0x8f
  4166ac:	pusha  
  4166ad:	jg     0x4166f5
  4166af:	mov    edx,0xa9168b80
  4166b4:	rcr    DWORD PTR [ecx],0x72
  4166b7:	mov    ebp,0x3a92452a
  4166bc:	dec    esi
  4166bd:	and    ebp,DWORD PTR [edi-0x1a01f988]
  4166c3:	dec    edx
  4166c4:	jmp    0x41667e
  4166c6:	jae    0x4166d3
  4166c8:	stos   BYTE PTR es:[edi],al
  4166c9:	mov    ch,0x63
  4166cb:	call   0xadea:0xbf33672a
  4166d2:	jg     0x41668c
  4166d4:	ret    0x9c1a
  4166d7:	push   0x67b5a71e
  4166dc:	and    al,0xb
  4166de:	aas    
  4166df:	retf   
  4166e0:	xchg   ecx,eax
  4166e1:	in     eax,0x72
  4166e3:	jns    0x41666c
  4166e5:	mov    edi,0x82ce9ae0
  4166ea:	push   0x2dc0e4e8
  4166ef:	xor    al,0xc6
  4166f1:	add    BYTE PTR [ebp+0x7079c821],bl
  4166f7:	xor    BYTE PTR [eax],ah
  4166f9:	int3   
  4166fa:	fist   WORD PTR [edi]
  4166fc:	sub    dh,BYTE PTR [ecx-0x7630512d]
  416702:	or     BYTE PTR [eax],al
  416704:	inc    edx
  416705:	mov    ds:0xb13520d9,eax
  41670a:	mov    esp,0xde5ab5a5
  41670f:	cmp    ebp,ecx
  416711:	sub    al,0x34
  416713:	ret    
  416714:	mov    DWORD PTR [edx-0xd3ce82b],0xd56881b3
  41671e:	mov    esp,0xa155f9ce
  416723:	rol    DWORD PTR [ebx],1
  416725:	or     eax,0x967eae97
  41672a:	xchg   ebp,eax
  41672b:	popf   
  41672c:	and    dh,BYTE PTR [ebx+0x4f0cbcd]
  416732:	adc    esi,ebx
  416734:	jmp    0xa5676729
  416739:	mov    DWORD PTR [ecx+esi*2],ebx
  41673c:	gs pop eax
  41673f:	mov    ds,WORD PTR [ebp-0x603fb729]
  416745:	push   ss
  416746:	lea    esi,[esi-0x345e444d]
  41674c:	pop    edx
  41674d:	pushf  
  41674e:	std    
  41674f:	mov    ebp,0x7de17e2a
  416754:	add    esp,eax
  416756:	pop    ebx
  416757:	fist   WORD PTR [edx+0x6e]
  41675a:	inc    ecx
  41675b:	mov    ah,0x84
  41675d:	sbb    eax,0x8988caa2
  416762:	xor    BYTE PTR [ebx-0x74a4a972],bh
  416768:	les    eax,FWORD PTR [eax+0x59]
  41676b:	fiadd  DWORD PTR [ebx+0x72]
  41676e:	push   esp
  41676f:	sub    eax,0x3e5aef0c
  416774:	and    edx,ebp
  416776:	imul   ebx,DWORD PTR [edx],0xdfc64a13
  41677c:	popf   
  41677d:	clc    
  41677e:	cmp    edi,DWORD PTR [ebx+ecx*8+0x74]
  416782:	(bad)  
  416783:	sahf   
  416784:	cmp    BYTE PTR [ecx-0x45],dl
  416787:	sub    BYTE PTR [edx+0x2c],ch
  41678a:	mov    ebp,0xade34937
  41678f:	in     al,0xd7
  416791:	sbb    BYTE PTR [eax],dh
  416793:	shl    ebp,0xd7
  416796:	bound  esp,QWORD PTR [eax-0x41]
  416799:	push   0x2c
  41679b:	ins    DWORD PTR es:[edi],dx
  41679c:	dec    edi
  41679d:	test   eax,0x19a98f7c
  4167a2:	cs out 0xc9,eax
  4167a5:	and    DWORD PTR [esi],edi
  4167a7:	dec    esp
  4167a9:	inc    esp
  4167aa:	sbb    eax,0xe04b4403
  4167af:	push   0xa77f3759
  4167b4:	mov    esp,0xb983a0b7
  4167b9:	(bad)  
  4167ba:	das    
  4167bb:	test   eax,0xa764dadb
  4167c0:	push   ecx
  4167c1:	pop    ebp
  4167c2:	fnsave ds:0x6548b15e
  4167c8:	xor    edx,esp
  4167ca:	out    dx,eax
  4167cb:	das    
  4167cc:	clc    
  4167cd:	xchg   ecx,eax
  4167ce:	nop
  4167cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d0:	test   al,0x8d
  4167d2:	clc    
  4167d3:	cmp    esi,DWORD PTR [ecx-0x63]
  4167d6:	push   cs
  4167d7:	pop    es
  4167d8:	inc    ebp
  4167d9:	sub    eax,0x42cf25fb
  4167de:	loop   0x4167ce
  4167e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e1:	(bad)  
  4167e2:	jg     0x4167c7
  4167e4:	sar    DWORD PTR [eax+0x35c5d3e5],0xe4
  4167eb:	push   ecx
  4167ec:	or     edi,esi
  4167ee:	ds test al,0x2b
  4167f1:	jmp    0x3361abe3
  4167f6:	adc    BYTE PTR [eax],cl
  4167f8:	push   es
  4167f9:	scas   al,BYTE PTR es:[edi]
  4167fa:	fisttp QWORD PTR [ebx]
  4167fc:	inc    esi
  4167fd:	xchg   ecx,eax
  4167fe:	aas    
  4167ff:	imul   ebp,ebp,0xffffffd6
  416802:	inc    ebp
  416803:	mov    ah,BYTE PTR [esi]
  416805:	int3   
  416806:	xor    al,0xd9
  416808:	add    al,0x26
  41680a:	rol    BYTE PTR [edi+0x44],0x79
  41680e:	jbe    0x4167cb
  416810:	lock call 0xb12fa92c
  416816:	into   
  416817:	xor    dl,BYTE PTR [ebp+0x60]
  41681a:	xchg   ecx,eax
  41681b:	mov    esp,cs
  41681d:	jg     0x416804
  41681f:	mov    dh,0x1d
  416821:	mov    al,ds:0x56ad6053
  416826:	mov    ebp,0xa0a8df42
  41682b:	sub    edx,esi
  41682d:	and    BYTE PTR [eax],al
  41682f:	outs   dx,BYTE PTR ds:[esi]
  416830:	inc    ecx
  416831:	enter  0xa623,0x59
  416835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416836:	cmp    al,BYTE PTR [edi+0x6f0fc2c7]
  41683c:	cmp    eax,0x981d4a19
  416841:	loope  0x4168be
  416843:	xchg   edi,eax
  416844:	fsubr  st(0),st
  416846:	pop    ss
  416847:	outs   dx,DWORD PTR ds:[esi]
  416848:	ins    BYTE PTR es:[edi],dx
  416849:	(bad)  
  41684a:	mov    esi,0x85c8c9d1
  41684f:	sub    al,0x83
  416851:	inc    ebx
  416852:	sbb    bl,BYTE PTR [eax]
  416854:	ins    BYTE PTR es:[edi],dx
  416855:	cmp    al,0xde
  416857:	push   0xd5398f19
  41685c:	or     esp,DWORD PTR [esi+0x50]
  41685f:	push   es
  416860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416861:	sti    
  416862:	call   0x896c:0x375b21b3
  416869:	cmc    
  41686a:	sub    al,0xa7
  41686c:	adc    cl,cl
  41686e:	sti    
  41686f:	push   esp
  416870:	scas   eax,DWORD PTR es:[edi]
  416871:	add    al,0xb6
  416873:	jns    0x416832
  416875:	and    bh,BYTE PTR [ebx+0x38]
  416878:	dec    eax
  416879:	enter  0x3b67,0xc4
  41687d:	inc    eax
  41687e:	xchg   edx,eax
  41687f:	pop    es
  416880:	dec    ebx
  416881:	into   
  416882:	scas   eax,DWORD PTR es:[edi]
  416883:	push   eax
  416884:	adc    al,0x58
  416886:	sub    BYTE PTR ds:0x11cc2a0c,al
  41688c:	and    BYTE PTR [ebx],bh
  41688e:	jo     0x4168cd
  416890:	in     eax,0x4c
  416892:	gs call 0xa94f:0xb28f04dd
  41689a:	jle    0x416879
  41689c:	bnd jae 0x41685a
  41689f:	mov    al,0xf8
  4168a1:	inc    BYTE PTR [ebx+0xa]
  4168a4:	pop    esp
  4168a5:	cmp    DWORD PTR [edx],edi
  4168a7:	inc    esi
  4168a8:	test   edi,ebx
  4168aa:	repz iret 
  4168ac:	int3   
  4168ad:	mov    eax,0xf7623aad
  4168b2:	lods   al,BYTE PTR ds:[esi]
  4168b3:	(bad)  
  4168b5:	not    DWORD PTR [edx]
  4168b7:	call   0xd5aa9269
  4168bc:	call   0x269b:0x733032a3
  4168c3:	push   esi
  4168c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c5:	mov    ch,0x6
  4168c7:	push   edx
  4168c8:	test   dh,0x70
  4168cb:	inc    eax
  4168cc:	xor    BYTE PTR [edx-0x10e612f2],bl
  4168d2:	outs   dx,BYTE PTR ds:[esi]
  4168d3:	idiv   BYTE PTR [ebx]
  4168d5:	xchg   ecx,eax
  4168d6:	xchg   ebx,eax
  4168d7:	or     esi,DWORD PTR [edx+0x7604530e]
  4168dd:	inc    ebx
  4168de:	adc    eax,0x8ab7313a
  4168e3:	adc    bl,BYTE PTR [edi-0x65]
  4168e6:	loop   0x4168d6
  4168e8:	mov    ah,0x11
  4168ea:	in     al,dx
  4168eb:	and    BYTE PTR [esi+ebx*2+0x32],0x30
  4168f0:	ret    0xebb7
  4168f3:	add    edx,esi
  4168f5:	sar    DWORD PTR [ebp-0x12],1
  4168f8:	mov    WORD PTR [edi+0x47],ds
  4168fb:	loop   0x416948
  4168fd:	inc    ebx
  4168fe:	push   ebp
  4168ff:	outs   dx,DWORD PTR gs:[esi]
  416901:	push   ebx
  416902:	enter  0x94ec,0x81
  416906:	out    dx,eax
  416907:	push   edx
  416908:	dec    edi
  416909:	inc    ebx
  41690a:	call   0xc2af:0x9c811e6b
  416911:	out    dx,eax
  416912:	pop    eax
  416913:	sbb    BYTE PTR [esi-0x3d],cl
  416916:	push   edi
  416917:	adc    DWORD PTR [ecx-0x31],eax
  41691a:	adc    al,BYTE PTR [edi]
  41691c:	add    al,0x1a
  41691e:	nop
  41691f:	int    0xca
  416921:	sahf   
  416922:	cmp    eax,0xe340f6d0
  416927:	cmp    BYTE PTR [esi+0xe],ah
  41692a:	arpl   cx,cx
  41692c:	jecxz  0x4168d6
  41692e:	mov    WORD PTR [ecx+0x553c5016],es
  416934:	aad    0x9a
  416936:	cmp    edx,esi
  416938:	push   edi
  416939:	lds    edi,FWORD PTR [edx+0x52]
  41693c:	dec    esi
  41693d:	arpl   sp,sp
  41693f:	jo     0x416901
  416941:	sbb    DWORD PTR ss:[ecx],ecx
  416944:	push   edx
  416945:	les    edx,FWORD PTR [esi-0x13]
  416948:	mov    edx,0x34ef12b7
  41694d:	adc    BYTE PTR [ecx+0x1ff99ecf],ch
  416953:	aad    0x31
  416955:	or     bh,bh
  416957:	inc    esi
  416958:	and    edi,DWORD PTR [esi]
  41695a:	int3   
  41695b:	pop    ss
  41695c:	(bad)  
  41695d:	call   0x8e96:0xf5f3ef53
  416964:	rol    BYTE PTR [esi+0x1d8b741],cl
  41696a:	imul   esi,DWORD PTR [edi+0xc],0xf0e58744
  416971:	fiadd  WORD PTR ds:0xd81ccb2d
  416977:	push   edi
  416978:	dec    esi
  416979:	mov    edi,0x690b4ac1
  41697e:	jl     0x416901
  416980:	sbb    DWORD PTR [ecx],ebx
  416982:	ds push ss
  416984:	fadd   DWORD PTR [eax+eiz*1+0x4b6e0c03]
  41698b:	jns    0x4169d6
  41698d:	sub    eax,0x73616328
  416992:	mov    eax,0x6121f0d7
  416997:	rol    dh,1
  416999:	and    DWORD PTR [ebx+0x771c92a4],ebp
  41699f:	ret    0x1dd1
  4169a2:	add    al,0xc3
  4169a4:	adc    dh,al
  4169a6:	mov    edx,0xc89d8422
  4169ab:	aad    0xb9
  4169ad:	mov    esi,esp
  4169af:	mov    ds:0x3315d21e,eax
  4169b4:	and    eax,0x980d9d61
  4169b9:	or     DWORD PTR [edi],ecx
  4169bb:	sbb    DWORD PTR [esi],eax
  4169bd:	mov    edx,0xb3631f90
  4169c2:	or     BYTE PTR [ebp+eax*8-0x9861042],cl
  4169c9:	lock push 0xcf60223b
  4169cf:	jno    0x416a50
  4169d1:	fimul  DWORD PTR cs:0x2679475
  4169d8:	pop    es
  4169d9:	mov    dl,0x33
  4169db:	and    DWORD PTR [ecx],0x99b30040
  4169e1:	xlat   BYTE PTR ds:[ebx]
  4169e2:	sbb    ecx,esp
  4169e4:	ds ret 
  4169e6:	push   eax
  4169e7:	sbb    esp,ebp
  4169e9:	sbb    BYTE PTR [esi-0x5e045434],ah
  4169ef:	mov    BYTE PTR [edi+0x3],0xe9
  4169f3:	sub    DWORD PTR [ecx+esi*4+0x18a35752],esp
  4169fa:	outs   dx,DWORD PTR ds:[esi]
  4169fb:	xchg   esp,eax
  4169fc:	sbb    ah,BYTE PTR [edx+edi*8]
  4169ff:	xor    ebx,DWORD PTR [edi-0x4ff1abbc]
  416a05:	xor    dl,ah
  416a07:	mov    bh,0x62
  416a09:	mov    eax,0x480e838a
  416a0e:	in     al,0xfc
  416a10:	xchg   esi,eax
  416a11:	sbb    dl,BYTE PTR [ecx]
  416a13:	dec    edi
  416a14:	inc    esp
  416a15:	jo     0x4169b9
  416a17:	mov    ecx,0x62339002
  416a1c:	add    dl,dh
  416a1e:	gs push edx
  416a20:	xchg   edi,eax
  416a21:	dec    edx
  416a22:	mov    bh,0x89
  416a24:	pop    ss
  416a25:	pop    ebx
  416a26:	call   0x993b1cca
  416a2b:	lods   eax,DWORD PTR ds:[esi]
  416a2c:	inc    esp
  416a2d:	ret    0x7798
  416a30:	dec    ebx
  416a31:	(bad)  
  416a32:	scas   eax,DWORD PTR es:[edi]
  416a33:	aam    0xe6
  416a35:	ins    BYTE PTR es:[edi],dx
  416a36:	jle    0x416a70
  416a38:	mov    al,0xc2
  416a3a:	scas   eax,DWORD PTR es:[edi]
  416a3b:	inc    edx
  416a3c:	js     0x416a8b
  416a3e:	repz cmp eax,0xcdd973ed
  416a44:	mov    DWORD PTR [eax],ebp
  416a46:	xchg   BYTE PTR [eax],ah
  416a48:	jge    0x416a0f
  416a4a:	xor    ebp,ecx
  416a4c:	iret   
  416a4d:	push   ebp
  416a4e:	test   al,0x64
  416a50:	jnp    0x416aca
  416a52:	sbb    ah,0xb1
  416a55:	jecxz  0x416a9d
  416a57:	jmp    0x3990:0x7c63cfe1
  416a5e:	arpl   bx,si
  416a60:	sub    ebx,eax
  416a62:	pop    ebx
  416a63:	push   ds
  416a64:	sbb    eax,DWORD PTR [esi]
  416a66:	push   ds
  416a67:	push   0xffffff8e
  416a69:	retf   0x9136
  416a6c:	jbe    0x416a54
  416a6e:	dec    edx
  416a6f:	in     al,0xb2
  416a71:	mov    ebx,0x9b3b62ee
  416a76:	mov    ebx,0x1f2465f2
  416a7b:	sbb    ecx,DWORD PTR [ebx+0x45]
  416a7e:	lods   al,BYTE PTR ds:[esi]
  416a7f:	test   BYTE PTR [eax+0x39],0xe1
  416a83:	bound  ebx,QWORD PTR [edx-0x42]
  416a86:	cmp    eax,0x2ce59ef8
  416a8b:	jmp    DWORD PTR [edi+0x226c6530]
  416a91:	popf   
  416a92:	push   ebx
  416a93:	mov    BYTE PTR [ebx-0x1a],dl
  416a96:	ss enter 0x16a6,0x1e
  416a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a9c:	jae    0x416a28
  416a9e:	cs xchg ecx,eax
  416aa0:	xchg   esi,eax
  416aa1:	jbe    0x416b04
  416aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa4:	push   edx
  416aa5:	mov    cs:0x7b8cb21e,al
  416aab:	push   0x26
  416aad:	das    
  416aae:	cmp    eax,0x72ed9fe9
  416ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab4:	shl    BYTE PTR [ebp+ebx*8+0x74ee3c93],0x17
  416abc:	in     al,dx
  416abd:	jb     0x416a70
  416abf:	imul   ebx,DWORD PTR [ebx-0x64],0x1a6b4105
  416ac6:	xchg   ebx,eax
  416ac7:	and    eax,0xf65efaed
  416acc:	and    al,0x4e
  416ace:	fist   WORD PTR [esi-0x5005987f]
  416ad4:	aam    0xea
  416ad6:	jbe    0x416a58
  416ad8:	xchg   ebp,eax
  416ad9:	sbb    eax,0xe654f0c6
  416ade:	lea    ecx,cs:[edi+0x28]
  416ae2:	push   ebx
  416ae3:	push   edx
  416ae4:	fild   DWORD PTR ds:0x2358d78a
  416aea:	xor    esi,DWORD PTR [ebx+0x7a]
  416aed:	jmp    0x416afb
  416aef:	xchg   edx,eax
  416af0:	call   0x7d42ca0
  416af5:	inc    edx
  416af6:	ss mov bl,0xee
  416af9:	xor    dl,BYTE PTR [ecx]
  416afb:	lock out dx,eax
  416afd:	push   edx
  416afe:	dec    eax
  416aff:	div    DWORD PTR [ecx-0x52a4c114]
  416b05:	data16 add BYTE PTR [eax+0x14],al
  416b09:	jge    0x416b2f
  416b0b:	and    ah,BYTE PTR [ebx]
  416b0d:	add    eax,DWORD PTR [esi-0x77280323]
  416b13:	xchg   edi,eax
  416b15:	xor    bh,ch
  416b17:	sub    eax,0x16b97ec2
  416b1c:	push   ecx
  416b1d:	and    dl,cl
  416b1f:	mov    edi,0x14386080
  416b24:	scas   eax,DWORD PTR es:[edi]
  416b25:	mov    WORD PTR [ecx],?
  416b27:	mov    eax,ds:0xc34ac0a7
  416b2c:	and    BYTE PTR [ebx],0xa2
  416b2f:	repz stc 
  416b31:	jns    0x416aef
  416b33:	imul   ecx,DWORD PTR [ecx+ecx*4+0x5d],0x534c0430
  416b3b:	and    eax,0x1b564cdf
  416b40:	sbb    ch,ah
  416b42:	cdq    
  416b43:	sbb    bh,BYTE PTR [eax+0x5e]
  416b46:	popa   
  416b47:	jmp    0x416aec
  416b49:	mov    bh,0xf0
  416b4b:	pop    ecx
  416b4c:	pop    edx
  416b4d:	push   0xffffffca
  416b4f:	aas    
  416b50:	cmp    DWORD PTR [edi],edi
  416b52:	mov    dh,0x56
  416b54:	adc    DWORD PTR [eax+ebx*8],ebx
  416b57:	scas   eax,DWORD PTR es:[edi]
  416b58:	jno    0x416b8b
  416b5a:	ds adc eax,0x2341cbdf
  416b60:	mov    edx,eax
  416b62:	(bad)  
  416b63:	fcom   DWORD PTR [eax]
  416b65:	mov    esp,DWORD PTR [ebp+0x4ce71a41]
  416b6b:	int3   
  416b6c:	inc    edi
  416b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b6e:	xor    edx,DWORD PTR [esi]
  416b70:	mov    ds:0xa241766c,eax
  416b75:	sti    
  416b76:	popa   
  416b77:	fadd   DWORD PTR [edi]
  416b79:	or     BYTE PTR [ebp-0x2c99dc1],bl
  416b7f:	push   esp
  416b80:	and    bl,BYTE PTR ds:0xf853f318
  416b86:	push   0x70c05b75
  416b8b:	outs   dx,BYTE PTR ds:[esi]
  416b8c:	inc    DWORD PTR [esi+0x6c]
  416b8f:	mul    DWORD PTR [ebx-0x3f94c346]
  416b95:	push   0xc41ec5ad
  416b9a:	rcr    ecx,0x9f
  416b9d:	xchg   edi,eax
  416b9e:	push   ebx
  416b9f:	push   cs
  416ba0:	std    
  416ba1:	and    BYTE PTR [eax],al
  416ba3:	mov    esi,0x585cf1a4
  416ba8:	ret    0x5295
  416bab:	push   ds
  416bac:	fdiv   DWORD PTR [ecx-0x4114ccb9]
  416bb2:	in     al,0xd
  416bb4:	dec    eax
  416bb5:	loope  0x416b80
  416bb7:	sbb    eax,0x45cfc02c
  416bbc:	xchg   ebp,eax
  416bbd:	sub    al,0x95
  416bbf:	loop   0x416b5c
  416bc1:	fsubr  st(7),st
  416bc3:	scas   al,BYTE PTR es:[edi]
  416bc4:	inc    ebx
  416bc5:	test   al,0x58
  416bc7:	xchg   ecx,edi
  416bc9:	arpl   WORD PTR [ebp-0x225d9368],sp
  416bcf:	xchg   edi,eax
  416bd0:	inc    esp
  416bd1:	pop    esp
  416bd2:	gs leave 
  416bd4:	fwait
  416bd5:	push   eax
  416bd6:	sar    BYTE PTR [ebx-0x62],cl
  416bd9:	div    DWORD PTR [ecx+ebx*2]
  416bdc:	jmp    0x416c24
  416bde:	dec    ebx
  416bdf:	push   cs
  416be0:	and    eax,DWORD PTR [ebx]
  416be2:	pop    eax
  416be3:	jge    0x416bff
  416be5:	shr    BYTE PTR [ecx-0x52],cl
  416be8:	push   eax
  416be9:	fidiv  WORD PTR [edi-0x4c6715b0]
  416bef:	sbb    ebx,ebx
  416bf1:	xchg   esi,eax
  416bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf3:	and    bh,bl
  416bf5:	sbb    al,0xab
  416bf7:	lods   al,BYTE PTR ds:[esi]
  416bf8:	paddsw mm3,QWORD PTR [eax+ebx*2+0x12]
  416bfd:	fstp   QWORD PTR [ecx]
  416bff:	idiv   BYTE PTR ds:0x23329b1d
  416c05:	push   ds
  416c06:	test   BYTE PTR [eax],cl
  416c08:	jp     0x416c51
  416c0a:	lea    ecx,[esp+eiz*4-0x2cd65fe2]
  416c11:	pop    eax
  416c12:	inc    edx
  416c13:	popf   
  416c14:	(bad)  
  416c16:	stc    
  416c17:	jmp    0xf733:0x1ef4fb9a
  416c1e:	loop   0x416c36
  416c20:	fs retf 0x2200
  416c24:	int3   
  416c25:	jbe    0x416c66
  416c27:	bnd jle 0x416c3c
  416c2a:	and    DWORD PTR ds:0xd44037fc,edi
  416c30:	fnstsw WORD PTR [edx-0x78756dba]
  416c36:	shl    DWORD PTR [ebp-0xe607b4b],1
  416c3c:	adc    eax,DWORD PTR [eax-0x5cd35915]
  416c42:	test   BYTE PTR [ecx+0x28],ah
  416c45:	cmc    
  416c46:	mov    BYTE PTR [eax+0x69],0xf0
  416c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4b:	in     eax,dx
  416c4c:	sub    BYTE PTR [ebp+0x2b],bh
  416c4f:	add    ah,bl
  416c51:	ror    BYTE PTR [ebx+0x5a744095],0x78
  416c58:	mov    eax,0xef29f879
  416c5d:	dec    ebx
  416c5e:	mov    esp,0xf2ad00bd
  416c63:	test   BYTE PTR [ebp+0x0],cl
  416c66:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c68:	and    ah,BYTE PTR [ecx+0x1fcfe839]
  416c6e:	ds mov edi,0xcdaf9998
  416c74:	pop    ecx
  416c75:	rcl    DWORD PTR [ebx],cl
  416c77:	lods   al,BYTE PTR ds:[esi]
  416c78:	jns    0x416cb9
  416c7a:	mov    esp,0xf4f14583
  416c7f:	ins    BYTE PTR es:[edi],dx
  416c80:	ja     0x416c70
  416c82:	hlt    
  416c83:	fidiv  WORD PTR [ebp+0x249ed43d]
  416c89:	mov    ?,WORD PTR [edx-0x19d65e3]
  416c8f:	and    eax,0xc27e333
  416c94:	xor    dl,BYTE PTR [eax+ebx*8]
  416c97:	add    edi,ebx
  416c99:	loopne 0x416cb9
  416c9b:	mov    al,0x54
  416c9d:	pusha  
  416c9e:	arpl   WORD PTR [edi+0x17f043cb],ax
  416ca4:	or     ebx,ecx
  416ca6:	ss and eax,0xc55eb900
  416cac:	ret    0xd93d
  416caf:	lods   eax,DWORD PTR ds:[esi]
  416cb0:	loopne 0x416cb0
  416cb2:	pop    ds
  416cb3:	pop    esp
  416cb4:	push   0xbe10854a
  416cb9:	push   edi
  416cba:	mov    bh,0xbf
  416cbc:	jg     0x416cdb
  416cbe:	sub    DWORD PTR [ebp+0x1e119cd0],0xffffff84
  416cc5:	sub    ebx,ebp
  416cc7:	ret    0xfdd1
  416cca:	jge    0x416cbf
  416ccc:	loope  0x416d43
  416cce:	test   edx,0x7b35d79c
  416cd4:	inc    ecx
  416cd5:	pop    ebx
  416cd6:	int    0x1f
  416cd8:	jo     0x416d40
  416cda:	sbb    ebp,DWORD PTR [edi]
  416cdc:	mov    dl,ah
  416cde:	fnstsw WORD PTR [esi]
  416ce0:	(bad)  
  416ce1:	nop
  416ce2:	jg     0x416d1b
  416ce4:	ins    BYTE PTR es:[edi],dx
  416ce5:	cmc    
  416ce6:	or     al,0x6d
  416ce8:	cmp    al,0x81
  416cea:	xchg   BYTE PTR [esi-0x6829f59a],ah
  416cf0:	pop    ss
  416cf1:	push   edx
  416cf2:	jmp    0xa5b:0x82731d90
  416cf9:	addr16 mov dl,0x89
  416cfc:	and    ah,BYTE PTR [ebx-0x6a]
  416cff:	add    ebp,DWORD PTR [ecx]
  416d01:	das    
  416d02:	jae    0x416d43
  416d04:	or     DWORD PTR [ecx-0xa],edx
  416d07:	sub    al,0x5c
  416d09:	xor    bl,BYTE PTR [ebx]
  416d0b:	bound  ebx,QWORD PTR [ebx+eax*1]
  416d0e:	(bad)  
  416d0f:	mov    bh,0x32
  416d11:	sbb    bh,BYTE PTR [ebp+0x61]
  416d14:	in     eax,0xb4
  416d16:	mov    esi,0x3406ea66
  416d1b:	je     0x416cf5
  416d1d:	imul   ecx,DWORD PTR [esi+0x23],0xffffffbb
  416d21:	loop   0x416cf7
  416d23:	cwde   
  416d24:	xlat   BYTE PTR ds:[ebx]
  416d25:	scas   al,BYTE PTR es:[edi]
  416d26:	retf   0xdb10
  416d29:	imul   ax,WORD PTR [edi],0xffcb
  416d2d:	mov    ?,esi
  416d2f:	push   ss
  416d30:	adc    cl,BYTE PTR [ecx+ecx*4]
  416d33:	jmp    0x416d09
  416d35:	(bad)  
  416d36:	fisubr WORD PTR [ecx-0x3c]
  416d39:	shr    ch,0x3a
  416d3c:	fwait
  416d3d:	ja     0x416d45
  416d3f:	pop    sp
  416d41:	push   edi
  416d42:	jmp    0x7b38:0xb3d094fd
  416d49:	enter  0xe647,0x56
  416d4d:	lea    esp,[ebx-0x6c12fc78]
  416d53:	jmp    0x3aabba3d
  416d58:	push   0x7709ec54
  416d5d:	sbb    al,0xb1
  416d5f:	xor    bl,dl
  416d61:	loope  0x416d4a
  416d63:	repnz mov ds:0xcfba43d1,eax
  416d69:	jns    0x416de4
  416d6b:	test   BYTE PTR [edi-0x37b0525c],dl
  416d71:	shr    DWORD PTR [ecx],0x8
  416d74:	cmp    BYTE PTR [esi+0x1ca8aafd],al
  416d7a:	fild   WORD PTR [eax]
  416d7c:	fs call 0x935c:0xcf36770
  416d84:	xor    al,0x7c
  416d86:	inc    esi
  416d87:	stos   DWORD PTR es:[edi],eax
  416d88:	dec    eax
  416d89:	adc    cl,BYTE PTR [ecx+edx*4+0x4]
  416d8d:	mov    bl,0xd7
  416d8f:	jne    0x416d83
  416d91:	lds    ebp,FWORD PTR [eax]
  416d93:	and    ebx,esi
  416d95:	cmp    BYTE PTR [ebx-0x3c],bh
  416d98:	push   ebx
  416d99:	and    BYTE PTR [edi-0x23],al
  416d9c:	(bad)  
  416d9d:	or     BYTE PTR ds:0x9db9fa36,dl
  416da3:	scas   al,BYTE PTR es:[edi]
  416da4:	mov    eax,0x975e5041
  416da9:	in     eax,dx
  416daa:	xchg   edx,eax
  416dab:	mov    DWORD PTR [edi+0x2575dbeb],ecx
  416db1:	cmp    DWORD PTR [eax-0x31],ebx
  416db4:	ret    
  416db5:	test   al,0xfd
  416db7:	in     al,dx
  416db8:	or     al,0xce
  416dba:	ja     0x416d94
  416dbc:	xor    BYTE PTR [ebx+0x4c],dl
  416dbf:	repnz (bad) 
  416dc1:	pop    eax
  416dc2:	jno    0x416d7a
  416dc4:	or     ebx,ebx
  416dc6:	jp     0x416df1
  416dc8:	xchg   edx,eax
  416dc9:	cmp    DWORD PTR [ecx],eax
  416dcb:	lods   al,BYTE PTR ds:[esi]
  416dcc:	(bad)  
  416dcd:	rcr    BYTE PTR [eax-0x62],0x20
  416dd1:	scas   al,BYTE PTR es:[edi]
  416dd2:	cmp    al,0xaa
  416dd4:	addr16 pop eax
  416dd6:	push   edi
  416dd7:	je     0x416e28
  416dd9:	mov    bl,0x50
  416ddb:	pop    ds
  416ddc:	add    al,0x16
  416dde:	jae    0x416dbf
  416de0:	add    al,0x65
  416de2:	ja     0x416e15
  416de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de5:	not    DWORD PTR [eax+0x6c]
  416de8:	push   0x54
  416dea:	(bad)  
  416deb:	pop    ecx
  416dec:	fld    DWORD PTR [edx-0x7d]
  416def:	lea    esp,[ebx]
  416df1:	inc    eax
  416df2:	jge    0x416e2f
  416df4:	add    al,BYTE PTR cs:[edx-0x74]
  416df8:	aas    
  416df9:	bnd jl 0x416dcf
  416dfc:	mov    cl,0x7
  416dfe:	push   0x76cec692
  416e03:	out    dx,eax
  416e04:	repnz ss pop ss
  416e07:	and    al,0xf9
  416e09:	inc    edx
  416e0a:	jb     0x416dac
  416e0c:	sub    ebp,ecx
  416e0e:	xor    sp,bx
  416e11:	jge    0x416e16
  416e13:	aad    0x9d
  416e15:	or     al,0xf3
  416e17:	adc    BYTE PTR [ebp-0x22d2032a],ch
  416e1d:	sbb    eax,0xf8d13d5b
  416e22:	test   DWORD PTR [eax],0xfd921f73
  416e28:	cld    
  416e29:	push   ds
  416e2a:	jp     0x416e72
  416e2c:	mov    edx,?
  416e2e:	sbb    eax,0x2b121eaa
  416e33:	(bad)  
  416e34:	push   edx
  416e35:	pop    ebx
  416e36:	pop    es
  416e37:	retf   0x4aeb
  416e3a:	mov    eax,0x9a337fd0
  416e3f:	in     eax,0x3e
  416e41:	fnstcw WORD PTR [edi-0x76]
  416e44:	push   edx
  416e45:	lahf   
  416e46:	sub    bl,ah
  416e48:	test   al,0x91
  416e4a:	inc    esp
  416e4b:	push   edx
  416e4c:	sar    BYTE PTR [ecx+0x6f8e8f8d],cl
  416e52:	inc    ebx
  416e53:	sbb    eax,0x95cf65f9
  416e58:	mov    esp,DWORD PTR [edx-0x56]
  416e5b:	sbb    al,BYTE PTR [ecx]
  416e5d:	ds push edi
  416e5f:	sbb    esp,0x7eb7127e
  416e65:	scas   eax,DWORD PTR es:[edi]
  416e66:	scas   eax,DWORD PTR es:[edi]
  416e67:	lods   eax,DWORD PTR ds:[esi]
  416e68:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416e6a:	xchg   ebx,eax
  416e6b:	and    BYTE PTR [edx+0x27],bh
  416e6e:	mov    eax,ds:0x1cd27688
  416e73:	cmp    al,al
  416e75:	add    BYTE PTR [edx],dh
  416e77:	std    
  416e78:	fs stc 
  416e7a:	sbb    DWORD PTR [esi+edx*2-0x29],ecx
  416e7e:	sahf   
  416e7f:	in     eax,dx
  416e80:	or     DWORD PTR [ebx+eiz*8+0x56],ecx
  416e84:	xor    DWORD PTR [ebp*8+0x29a2e3cb],0x69
  416e8c:	or     edx,DWORD PTR [ebx-0x4ff797df]
  416e92:	pop    edx
  416e93:	xlat   BYTE PTR ds:[ebx]
  416e94:	push   ebx
  416e95:	fidivr DWORD PTR [ebx+ecx*8+0x46]
  416e99:	sub    BYTE PTR [ebp+esi*2+0x79],cl
  416e9d:	cmp    eax,0xeeaaa1e5
  416ea2:	stos   BYTE PTR es:[edi],al
  416ea3:	inc    esi
  416ea4:	das    
  416ea5:	pushf  
  416ea6:	(bad)  
  416ea7:	stos   DWORD PTR es:[edi],eax
  416ea8:	lock push edx
  416eaa:	sub    DWORD PTR [ecx+edx*1-0x6ba30e43],ebx
  416eb1:	jmp    0x416e6a
  416eb3:	push   eax
  416eb4:	xchg   DWORD PTR ss:[edx],ebp
  416eb7:	out    0xfb,al
  416eb9:	cmp    DWORD PTR [eax],esi
  416ebb:	aas    
  416ebc:	or     cl,BYTE PTR [esi]
  416ebe:	fcom   st(5)
  416ec0:	lahf   
  416ec1:	bound  edi,QWORD PTR ss:0xd3f0906a
  416ec8:	cld    
  416ec9:	in     al,dx
  416eca:	imul   ebp,DWORD PTR [edx+0x273045f],0x8eff100f
  416ed4:	ds nop
  416ed6:	push   0xc1aa6578
  416edb:	push   esi
  416edc:	enter  0x2029,0xa3
  416ee0:	(bad)  
  416ee1:	fdivr  st(7),st
  416ee3:	ds mov ebx,0x5c218bea
  416ee9:	into   
  416eea:	sub    DWORD PTR [ecx],ebp
  416eec:	mov    dl,0xc
  416eee:	adc    cl,0x91
  416ef1:	shr    BYTE PTR [ebx+0xf],1
  416ef4:	jle    0x416e7c
  416ef6:	xchg   ecx,eax
  416ef7:	inc    ecx
  416ef8:	mov    ecx,0xe98d789f
  416efd:	mov    al,0x6b
  416eff:	jg     0x416f23
  416f01:	jmp    0x416ee1
  416f03:	inc    esi
  416f04:	repz mov ds:0xfd9e7c7c,eax
  416f0a:	mov    WORD PTR [ecx+0x56],gs
  416f0d:	cmp    BYTE PTR [esi-0x1d],al
  416f10:	leave  
  416f11:	icebp  
  416f12:	adc    BYTE PTR [eax-0x11f04095],ch
  416f18:	pop    edx
  416f19:	mov    esi,DWORD PTR [edx]
  416f1b:	jae    0x416eb2
  416f1d:	leave  
  416f1e:	xchg   esi,eax
  416f1f:	cld    
  416f20:	or     DWORD PTR [eax-0x700b7abd],edx
  416f26:	jno    0x416f0f
  416f28:	(bad)  
  416f29:	mov    dh,0x99
  416f2b:	not    BYTE PTR [esi-0x3f63c754]
  416f31:	push   es
  416f32:	pushf  
  416f33:	inc    esi
  416f34:	lea    edx,[eax-0x6c]
  416f37:	mov    ah,0xea
  416f39:	xchg   edx,eax
  416f3a:	or     bl,dh
  416f3c:	jmp    0x416edb
  416f3e:	scas   al,BYTE PTR es:[edi]
  416f3f:	jbe    0x416ecb
  416f41:	sub    al,0x9d
  416f43:	js     0x416f90
  416f45:	xchg   DWORD PTR [ebx],eax
  416f47:	pop    ecx
  416f48:	aam    0xa4
  416f4a:	dec    eax
  416f4b:	bound  esi,QWORD PTR [eax+0x68df6429]
  416f51:	push   ebx
  416f52:	or     BYTE PTR [edi],cl
  416f54:	cmp    cl,ah
  416f56:	pop    ebp
  416f57:	ins    BYTE PTR es:[edi],dx
  416f58:	enter  0x5c67,0x3e
  416f5c:	dec    edx
  416f5d:	popf   
  416f5e:	jbe    0x416f4f
  416f60:	mov    bl,0x84
  416f62:	add    ebx,DWORD PTR [edi+ebp*2+0x3d9864fc]
  416f69:	scas   al,BYTE PTR es:[edi]
  416f6a:	pop    esp
  416f6b:	dec    edi
  416f6c:	test   eax,0x5ef24884
  416f71:	xchg   ecx,eax
  416f72:	sub    edi,DWORD PTR [edx-0x52]
  416f75:	inc    ebp
  416f76:	pop    ecx
  416f77:	xchg   ecx,eax
  416f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f79:	popa   
  416f7a:	adc    al,0x31
  416f7c:	dec    ecx
  416f7d:	stos   DWORD PTR es:[edi],eax
  416f7e:	das    
  416f7f:	mov    ebx,DWORD PTR [edi+0x3e559936]
  416f85:	jmp    0x416f25
  416f87:	push   ecx
  416f88:	das    
  416f89:	fisub  DWORD PTR [ecx-0x73e09e3f]
  416f8f:	push   edi
  416f90:	add    esi,edx
  416f92:	add    BYTE PTR [eax+edi*4+0x69],ah
  416f96:	mov    gs,WORD PTR [esi-0x322d7716]
  416f9c:	jb     0x416fcc
  416f9e:	sahf   
  416f9f:	and    al,BYTE PTR [ebx-0x12051848]
  416fa5:	sub    eax,0xc98ac6a6
  416faa:	out    0xf5,eax
  416fac:	sub    edx,DWORD PTR [eax]
  416fae:	push   esp
  416faf:	xor    BYTE PTR [ebp+0x14],cl
  416fb2:	call   0x7fa1:0x25ac7bc0
  416fb9:	ret    
  416fba:	lea    eax,[ecx+0x34ff7500]
  416fc0:	out    0x52,eax
  416fc2:	dec    ebp
  416fc3:	loopne 0x416fba
  416fc5:	aam    0xb7
  416fc7:	aaa    
  416fc8:	outs   dx,DWORD PTR ds:[esi]
  416fc9:	gs loopne 0x416fac
  416fcc:	jmp    0x2eb80859
  416fd1:	push   cs
  416fd2:	aad    0x7f
  416fd4:	fisttp QWORD PTR [edx]
  416fd6:	mov    esp,DWORD PTR ds:0x9ba0f8c3
  416fdc:	sbb    ecx,DWORD PTR [edi+0x50]
  416fdf:	mov    ecx,0x5416cca3
  416fe5:	sbb    cl,BYTE PTR [eax-0x50ad6b18]
  416feb:	or     BYTE PTR [eax+0x37],bl
  416fee:	mov    ebp,DWORD PTR [edx-0x6b6f2b3d]
  416ff4:	mov    bh,0x97
  416ff6:	dec    eax
  416ff7:	mov    eax,eax
  416ff9:	outs   dx,DWORD PTR ds:[esi]
  416ffa:	xor    BYTE PTR [eax+0x14],ah
  416ffd:	cld    
  416ffe:	pop    esi
  416fff:	(bad)  
  417000:	xor    DWORD PTR [edi],edi
  417002:	jne    0x416fbd
  417004:	fstp   TBYTE PTR [edi+ecx*2-0x63a6b6b6]
  41700b:	add    al,0xc9
  41700d:	jb     0x416ff0
  41700f:	lock jge 0x416fd4
  417012:	sub    dl,BYTE PTR [esi]
  417014:	and    ebp,esi
  417016:	and    ch,bl
  417018:	sbb    esp,edi
  41701a:	jecxz  0x417083
  41701c:	sbb    bh,BYTE PTR [edi-0x558d400a]
  417022:	and    BYTE PTR [ecx+0x3c5ec381],ch
  417028:	push   esp
  417029:	lds    eax,FWORD PTR [esi]
  41702b:	rep lods al,BYTE PTR ds:[esi]
  41702d:	outs   dx,BYTE PTR ds:[esi]
  41702e:	inc    esi
  41702f:	loopne 0x417063
  417031:	cmp    dh,cl
  417033:	fistp  QWORD PTR [esi-0x6145f65f]
  417039:	add    BYTE PTR [edi],bh
  41703b:	and    bh,BYTE PTR ds:0xa38c5474
  417041:	push   ecx
  417042:	or     edx,esp
  417044:	in     eax,dx
  417045:	pop    es
  417046:	jo     0x41707c
  417048:	repz pusha 
  41704a:	fcomp  DWORD PTR [edx-0x5b]
  41704d:	nop
  41704e:	push   ss
  41704f:	lods   eax,DWORD PTR ds:[esi]
  417050:	jnp    0x416fef
  417052:	inc    ebp
  417053:	sbb    dl,dh
  417055:	push   cs
  417056:	sub    DWORD PTR [ebx],ecx
  417058:	icebp  
  417059:	cmp    al,0xdc
  41705b:	retf   0x732d
  41705e:	xchg   edi,eax
  41705f:	les    eax,FWORD PTR ds:0x967de75e
  417065:	nop
  417066:	mov    edi,0xe67694f9
  41706b:	shl    BYTE PTR [ebp+0x23],0x2f
  41706f:	popf   
  417070:	out    dx,al
  417071:	sahf   
  417072:	(bad)  
  417073:	ins    BYTE PTR es:[edi],dx
  417074:	adc    BYTE PTR [edx-0x73],bh
  417077:	pop    esp
  417078:	pop    ss
  417079:	and    edi,0xffffff8e
  41707c:	test   BYTE PTR [ecx],bh
  41707e:	mov    al,ds:0xeafe6d60
  417083:	mov    bl,0x67
  417085:	cmp    ecx,DWORD PTR [esi-0x55]
  417088:	dec    edi
  417089:	inc    eax
  41708a:	xchg   edi,eax
  41708b:	cdq    
  41708c:	gs pop es
  41708e:	rcr    DWORD PTR [ebp-0x3ce49417],cl
  417094:	data16 (bad) 
  417096:	stc    
  417097:	inc    ebp
  417098:	iret   
  417099:	adc    eax,0xf3a0e998
  41709f:	sbb    al,0x47
  4170a1:	in     al,dx
  4170a2:	xchg   esi,eax
  4170a3:	in     eax,0xb5
  4170a5:	(bad)  
  4170a6:	call   0x5b54:0x76d14f52
  4170ad:	pop    esi
  4170ae:	xor    BYTE PTR [eax],dh
  4170b0:	pop    ebp
  4170b1:	mov    cl,0x91
  4170b3:	js     0x417131
  4170b5:	outs   dx,DWORD PTR ds:[esi]
  4170b6:	std    
  4170b7:	mov    ds:0xab3b91c2,al
  4170bc:	lods   eax,DWORD PTR ds:[esi]
  4170bd:	imul   edx,DWORD PTR [eax+0x32],0x16
  4170c1:	mov    ah,cl
  4170c3:	jmp    0xc283:0xca159217
  4170ca:	xor    dl,0xea
  4170cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ce:	dec    ecx
  4170cf:	mov    edi,0x1b12bde9
  4170d4:	push   eax
  4170d5:	or     ch,BYTE PTR [edi]
  4170d7:	and    dh,al
  4170d9:	xchg   ebp,eax
  4170da:	xchg   edx,eax
  4170db:	jo     0x417131
  4170dd:	dec    ecx
  4170de:	jmp    0x4cba0e02
  4170e3:	bound  ebp,QWORD PTR [esi-0x4d33376a]
  4170e9:	in     eax,dx
  4170ea:	xor    ebp,0x22
  4170ed:	push   ebp
  4170ee:	xchg   ebx,eax
  4170ef:	and    edx,DWORD PTR [esi+0x4b]
  4170f2:	and    dl,al
  4170f4:	mul    BYTE PTR [edx]
  4170f6:	mov    esi,0xdf39bb6f
  4170fb:	xor    al,0x74
  4170fd:	fs gs dec ebp
  417100:	scas   al,BYTE PTR es:[edi]
  417101:	test   BYTE PTR [ecx],ch
  417103:	scas   al,BYTE PTR es:[edi]
  417104:	push   edx
  417105:	mov    eax,0x7efe8f25
  41710a:	xor    eax,0xe595493b
  41710f:	jl     0x4170c9
  417111:	out    0xa1,eax
  417113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417114:	test   al,0x6a
  417116:	call   0x853d:0xad9f99cf
  41711d:	es and ebx,ebx
  417120:	push   0xffffff8b
  417122:	adc    dh,BYTE PTR [edi]
  417124:	in     eax,dx
  417125:	clc    
  417126:	and    eax,0xf6c56380
  41712b:	adc    al,0x94
  41712d:	sbb    al,0xa1
  41712f:	hlt    
  417130:	popa   
  417131:	dec    esi
  417132:	test   bl,bl
  417134:	jp     0x4170fe
  417136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417137:	sahf   
  417138:	neg    esp
  41713a:	scas   eax,DWORD PTR es:[edi]
  41713b:	adc    BYTE PTR [ebx+0x7b],ch
  41713e:	int3   
  41713f:	sub    DWORD PTR [ecx-0x2a],ebp
  417142:	xor    ah,BYTE PTR [eax-0x197a2e7]
  417148:	cld    
  417149:	or     cl,BYTE PTR [eax+0x69]
  41714c:	fsub   DWORD PTR [edx+0x3d]
  41714f:	sbb    dl,BYTE PTR [edx-0x7ecc724b]
  417155:	(bad)  
  417156:	into   
  417157:	jb     0x4171b4
  417159:	mov    ds:0x876dbbfc,eax
  41715e:	mov    eax,0x2972be30
  417163:	ins    DWORD PTR es:[edi],dx
  417164:	inc    ecx
  417165:	iret   
  417166:	inc    di
  417168:	outs   dx,BYTE PTR ds:[esi]
  417169:	add    BYTE PTR [eax+edi*8+0x4b76bb07],0x1a
  417171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417172:	xor    DWORD PTR [ecx+eax*8],0x96360462
  417179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41717a:	xor    ah,BYTE PTR [ebp-0x42643037]
  417180:	jmp    0xeef337db
  417185:	add    eax,0x1b3073b1
  41718a:	mov    bl,0xf8
  41718c:	xlat   BYTE PTR ds:[ebx]
  41718d:	fist   DWORD PTR [ecx-0x693559dc]
  417193:	pop    ds
  417194:	into   
  417195:	hlt    
  417196:	cmp    al,0x70
  417198:	sbb    al,0xaa
  41719a:	imul   esp,ebp,0xa
  41719d:	fstp   TBYTE PTR [edx-0x4ff6ff03]
  4171a3:	sub    DWORD PTR [ebx-0x499a6d49],ecx
  4171a9:	xchg   esi,eax
  4171aa:	jae    0x4171b9
  4171ac:	dec    esp
  4171ad:	test   eax,0x1ccf0cf3
  4171b2:	ins    BYTE PTR es:[edi],dx
  4171b3:	lock pop ecx
  4171b5:	mov    WORD PTR [bp+di],ss
  4171b8:	aas    
  4171b9:	pop    es
  4171ba:	pop    es
  4171bb:	push   cs
  4171bc:	jne    0x41719d
  4171be:	fsubr  QWORD PTR [ebp+0x23]
  4171c1:	xlat   BYTE PTR ds:[ebx]
  4171c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c3:	addr16 fs or ecx,esp
  4171c7:	imul   ebp,DWORD PTR [ebp+0x4251ddb9],0xffffff9a
  4171ce:	ins    DWORD PTR es:[edi],dx
  4171cf:	imul   ebx,DWORD PTR [ecx],0x61
  4171d2:	jge    0x417191
  4171d4:	and    cl,ah
  4171d6:	fadd   QWORD PTR [esi-0x2d]
  4171d9:	shl    DWORD PTR [eax+ecx*1-0x4d470e5a],cl
  4171e0:	cmp    BYTE PTR [esi+esi*8+0x50],al
  4171e4:	push   0xffffff88
  4171e6:	mov    DWORD PTR [edx+0x60fb5b27],eax
  4171ec:	ret    
  4171ed:	inc    esi
  4171ee:	ins    DWORD PTR es:[edi],dx
  4171ef:	mov    edx,0x5db8e5f
  4171f4:	fistp  QWORD PTR [ebp+ebp*4+0x12]
  4171f8:	test   eax,0x1a125193
  4171fd:	dec    ebx
  4171fe:	les    ebx,FWORD PTR [eax-0x8]
  417201:	stos   DWORD PTR es:[edi],eax
  417202:	sub    DWORD PTR [ebx],esi
  417204:	pop    ebx
  417205:	add    ch,bl
  417207:	fmul   QWORD PTR [edx+0x64798909]
  41720d:	loope  0x41720a
  41720f:	xchg   edi,eax
  417210:	aam    0x10
  417212:	mov    ebx,0x1628e16e
  417217:	aas    
  417218:	shl    edx,1
  41721a:	dec    eax
  41721b:	ins    DWORD PTR es:[edi],dx
  41721c:	scas   eax,DWORD PTR es:[edi]
  41721d:	dec    ebx
  41721e:	sbb    ebx,ebp
  417220:	mov    ecx,0x3c7f795e
  417225:	xor    cl,ch
  417227:	add    eax,0x15d45cd9
  41722c:	loopne 0x4171e7
  41722e:	iret   
  41722f:	inc    ebp
  417230:	lock xchg ebx,eax
  417232:	add    al,0x8
  417234:	retf   
  417235:	push   ebx
  417236:	(bad)  
  417237:	loop   0x4171b9
  417239:	pushf  
  41723a:	mov    al,ds:0x3b57c034
  41723f:	jb     0x417295
  417241:	ror    BYTE PTR [esi-0x3768b132],0x87
  417248:	adc    DWORD PTR [eax],esp
  41724a:	jne    0x417245
  41724c:	int3   
  41724d:	add    esp,DWORD PTR [edi+0x319e4508]
  417253:	sub    al,0xc
  417255:	dec    esi
  417256:	or     ah,cl
  417258:	rcr    DWORD PTR [eax-0x5b],cl
  41725b:	mov    ebx,ebx
  41725d:	mov    BYTE PTR [esi],ah
  41725f:	and    DWORD PTR ds:0xd1fe368,0xfffffffb
  417266:	outs   dx,BYTE PTR gs:[esi]
  417268:	retf   0xd9d1
  41726b:	mov    ebp,ebx
  41726d:	sbb    DWORD PTR [esi],ecx
  41726f:	test   eax,0xb43c4c10
  417274:	pop    ss
  417275:	and    eax,0x920238ac
  41727a:	ins    DWORD PTR es:[edi],dx
  41727b:	xchg   edx,eax
  41727c:	xchg   ecx,eax
  41727d:	cdq    
  41727e:	(bad)  
  41727f:	es js  0x417253
  417282:	sbb    al,0x48
  417284:	leave  
  417285:	iret   
  417286:	jo     0x417243
  417288:	jge    0x417248
  41728a:	ja     0x417287
  41728c:	sbb    edx,DWORD PTR [esi]
  41728e:	inc    edx
  41728f:	retf   0x553a
  417292:	je     0x4172bb
  417294:	xsha1  (bad)
  417295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417296:	mov    WORD PTR [edx],fs
  417298:	addr16 xchg ebp,eax
  41729a:	adc    al,0x47
  41729c:	sub    eax,ebx
  41729e:	and    cl,BYTE PTR [ebp-0x53cc7fb8]
  4172a4:	push   esi
  4172a5:	into   
  4172a6:	loope  0x4172ff
  4172a8:	jb     0x417238
  4172aa:	adc    DWORD PTR [edx-0x5e],eax
  4172ad:	popa   
  4172ae:	xchg   DWORD PTR [ebx-0x5890f90c],ebp
  4172b4:	(bad)  
  4172b5:	fs popf 
  4172b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b8:	mov    ds:0xc41e5757,eax
  4172bd:	int    0xd7
  4172bf:	loopne 0x4172c0
  4172c1:	out    dx,eax
  4172c2:	mov    ebx,0xffd44e1d
  4172c7:	aam    0xd0
  4172c9:	aas    
  4172ca:	cmp    DWORD PTR [edi-0x67],0x11
  4172ce:	xchg   esp,eax
  4172cf:	(bad)  
  4172d0:	xchg   ebx,eax
  4172d1:	inc    esi
  4172d2:	jmp    0x9117:0xacd9907d
  4172d9:	mov    BYTE PTR [eax+0x12],bh
  4172dc:	mov    ds:0x5ac50f92,al
  4172e1:	(bad)  
  4172e2:	and    bh,al
  4172e4:	lods   eax,DWORD PTR ds:[esi]
  4172e5:	(bad)  
  4172e6:	cmp    ah,BYTE PTR [esi]
  4172e8:	mov    eax,ds:0x3dacd982
  4172ed:	cmp    eax,0x784971a1
  4172f2:	xor    DWORD PTR [esi-0x22],ebx
  4172f5:	lods   al,BYTE PTR ds:[esi]
  4172f6:	add    esp,DWORD PTR [eax-0x16aad6c9]
  4172fc:	push   esp
  4172fd:	and    eax,0xc598bc40
  417302:	cmp    eax,0xabac4710
  417307:	xchg   esi,eax
  417308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417309:	mov    ah,bh
  41730b:	adc    al,0x49
  41730d:	xchg   ebp,eax
  41730e:	(bad)  
  417310:	loop   0x417306
  417312:	pop    DWORD PTR [ebx+eax*2]
  417315:	and    eax,0x1ba73de1
  41731a:	add    ebx,DWORD PTR [ecx]
  41731c:	jp     0x417368
  41731e:	outs   dx,DWORD PTR ds:[esi]
  41731f:	mov    esp,0xc6de43be
  417324:	and    al,0x58
  417326:	call   0xaf71:0x5951246a
  41732d:	inc    eax
  41732e:	(bad)  
  41732f:	in     eax,dx
  417330:	dec    eax
  417331:	jg     0x417370
  417333:	dec    ebx
  417334:	add    esi,DWORD PTR [esi-0x24]
  417337:	mov    ebp,0x56ab7aa3
  41733c:	int    0x22
  41733e:	add    ecx,ebx
  417340:	pop    ss
  417341:	int3   
  417342:	pop    esi
  417343:	push   edi
  417344:	mov    dh,0x3a
  417346:	mov    ?,eax
  417348:	test   al,0xaa
  41734a:	mov    ebp,0xf7370392
  41734f:	icebp  
  417350:	cdq    
  417351:	sub    ebp,DWORD PTR [eax]
  417353:	cli    
  417354:	hlt    
  417355:	(bad)  
  417356:	enter  0xd21f,0x4
  41735a:	fs clc 
  41735c:	or     eax,0x774e5000
  417361:	mov    edi,0xf4efff6d
  417366:	inc    ecx
  417367:	shl    cl,cl
  417369:	or     eax,0x51c275f3
  41736e:	dec    eax
  41736f:	cdq    
  417370:	inc    ebx
  417371:	xlat   BYTE PTR ds:[ebx]
  417372:	cmp    ebp,DWORD PTR [ebp+0x556493ef]
  417378:	and    al,al
  41737a:	mov    edi,esp
  41737c:	retw   0x954e
  417380:	cmp    al,0xd6
  417382:	(bad)  
  417383:	mov    esp,0x293673e6
  417388:	fldcw  WORD PTR [esi]
  41738a:	adc    ebx,DWORD PTR [eax]
  41738c:	shr    DWORD PTR [ebx],cl
  41738e:	shl    BYTE PTR [ecx],0xe4
  417391:	mov    al,0xa7
  417393:	mov    dh,BYTE PTR [ebp-0xb6492b5]
  417399:	not    BYTE PTR [esi+0x7f]
  41739c:	loope  0x41735e
  41739e:	ins    BYTE PTR es:[edi],dx
  41739f:	lods   al,BYTE PTR ds:[esi]
  4173a0:	dec    ebp
  4173a1:	inc    ebp
  4173a2:	clc    
  4173a3:	mov    cl,0x5c
  4173a5:	ds add al,0x0
  4173a8:	outs   dx,BYTE PTR ds:[esi]
  4173a9:	jmp    0x417359
  4173ab:	dec    ecx
  4173ac:	js     0x4173e8
  4173ae:	mov    dh,0xa7
  4173b0:	popa   
  4173b1:	(bad)  
  4173b2:	jle    0x41740a
  4173b4:	not    BYTE PTR [ebx+ecx*1]
  4173b7:	test   BYTE PTR [ebp-0x6b],0x4d
  4173bb:	sub    bl,BYTE PTR [ebp-0x347e75ae]
  4173c1:	(bad)  
  4173c2:	sub    esi,DWORD PTR [esi]
  4173c4:	push   ebx
  4173c5:	cli    
  4173c6:	shr    al,0x3e
  4173c9:	ja     0x41741f
  4173cb:	mov    ebx,0x5ba8c8da
  4173d0:	add    DWORD PTR [edx],edx
  4173d2:	mov    esi,DWORD PTR [ebp+0x7]
  4173d5:	adc    ebx,DWORD PTR [edi+0x34]
  4173d8:	jge    0x417444
  4173da:	dec    esi
  4173db:	and    al,0x7b
  4173dd:	out    0x3b,al
  4173df:	imul   esp,DWORD PTR [edi],0xafd27671
  4173e5:	gs push edi
  4173e7:	into   
  4173e8:	add    eax,0x3733cd76
  4173ed:	cdq    
  4173ee:	mov    dh,0xd
  4173f0:	sub    DWORD PTR [edx+edx*1-0x5a768c3c],ecx
  4173f7:	rol    DWORD PTR [edx+0x5f3d0edc],1
  4173fd:	shr    BYTE PTR [eax-0x317fbb8f],0x67
  417404:	cmp    dl,BYTE PTR ss:[eax+eiz*8-0x47]
  417409:	repz mul BYTE PTR [eax+0x5af2da6c]
  417410:	adc    dh,BYTE PTR [edx+0x16]
  417413:	dec    BYTE PTR [edx]
  417415:	fs dec edx
  417417:	in     eax,dx
  417418:	sti    
  417419:	add    DWORD PTR [edx],esi
  41741b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41741c:	test   BYTE PTR [edx],dh
  41741e:	lds    ebx,FWORD PTR [ebx-0x7dee9ba1]
  417424:	in     al,dx
  417425:	popf   
  417426:	int    0x8a
  417428:	dec    ebp
  417429:	xchg   ebx,eax
  41742a:	cdq    
  41742b:	xor    al,0x62
  41742d:	inc    ecx
  41742e:	jmp    0x4173d0
  417430:	adc    DWORD PTR [ebx+0x443988dd],0x79
  417437:	(bad)  
  417438:	pop    edx
  417439:	sub    eax,0x7b4e855
  41743e:	stos   DWORD PTR es:[edi],eax
  41743f:	fistp  QWORD PTR [ebx-0x74b23b31]
  417445:	retf   0x58d2
  417448:	pop    edi
  417449:	cld    
  41744a:	inc    edi
  41744b:	loope  0x4174a2
  41744d:	add    al,0x10
  41744f:	das    
  417450:	ins    BYTE PTR es:[edi],dx
  417451:	fnsave [edi]
  417453:	jo     0x4174a7
  417455:	ret    
  417456:	lods   al,BYTE PTR ds:[esi]
  417457:	inc    ebp
  417458:	and    al,0x47
  41745a:	jo     0x417440
  41745c:	enter  0x4d31,0x3e
  417460:	xchg   ecx,eax
  417461:	jg     0x41748e
  417463:	repz pop esp
  417465:	ja     0x41741c
  417467:	jne    0x4174d8
  417469:	sbb    ebp,0xdaca67f4
  41746f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417470:	mov    ds:0x93a2ad16,al
  417475:	push   ss
  417476:	pop    es
  417477:	add    DWORD PTR [esi-0x62],0x85db95ea
  41747e:	cmp    ebx,ecx
  417480:	cs adc eax,0xbacdc1cc
  417486:	rol    DWORD PTR [edx+0x79],cl
  417489:	mov    bl,BYTE PTR [esi+0x6e]
  41748c:	mov    eax,DWORD PTR [ebp+0x520e82cb]
  417492:	ss cwde 
  417494:	aad    0x4d
  417496:	fisttp DWORD PTR [edi-0x36236c60]
  41749c:	je     0x417468
  41749e:	pop    ebx
  41749f:	fcomp  st(6)
  4174a1:	or     dh,BYTE PTR [eax+0x56]
  4174a4:	mov    eax,ds:0xc655ae97
  4174a9:	cmp    edx,ebx
  4174ab:	sbb    al,0x16
  4174ad:	aaa    
  4174ae:	inc    esi
  4174af:	stos   DWORD PTR es:[edi],eax
  4174b0:	pop    eax
  4174b1:	icebp  
  4174b2:	mov    edx,0x4720bede
  4174b7:	scas   eax,DWORD PTR es:[edi]
  4174b8:	dec    edi
  4174b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ba:	arpl   WORD PTR [edi-0x5465be26],sp
  4174c0:	shl    ebp,1
  4174c2:	push   es
  4174c3:	xchg   ecx,eax
  4174c4:	xchg   ebx,ecx
  4174c6:	inc    edx
  4174c7:	cld    
  4174c8:	cmp    DWORD PTR [edx+eax*2-0x220cb4f4],ebx
  4174cf:	leave  
  4174d0:	les    ebp,FWORD PTR [eax+0x6]
  4174d3:	add    BYTE PTR [ecx+0x28ab369a],dh
  4174d9:	mov    ecx,0x8af9ba4a
  4174de:	mov    esp,0x70edfd01
  4174e3:	in     al,dx
  4174e4:	fcmovne st,st(0)
  4174e6:	stos   BYTE PTR es:[edi],al
  4174e7:	pusha  
  4174e8:	lock cmc 
  4174ea:	and    al,0x82
  4174ec:	sub    esi,DWORD PTR [esi-0x149d232f]
  4174f2:	mov    es:0x52d0ef11,eax
  4174f8:	cwde   
  4174f9:	int    0x53
  4174fb:	loopne 0x417576
  4174fd:	dec    ebp
  4174fe:	adc    al,0x9a
  417500:	mov    ch,0x70
  417502:	jmp    0x4174ee
  417504:	in     eax,dx
  417505:	mov    edi,0xd1d8a30d
  41750a:	pop    ds
  41750b:	into   
  41750c:	pop    esi
  41750d:	xchg   edi,eax
  41750e:	pop    ebp
  41750f:	stos   BYTE PTR es:[edi],al
  417510:	add    DWORD PTR [eax],eax
  417512:	push   edx
  417513:	and    edx,esp
  417515:	and    BYTE PTR [ebx+0x33],cl
  417518:	dec    edx
  417519:	xchg   ebp,eax
  41751a:	sbb    DWORD PTR [ebx+0x40],ebx
  41751d:	clc    
  41751e:	push   eax
  41751f:	(bad)  
  417520:	jae    0x417520
  417522:	dec    edx
  417523:	pop    edx
  417524:	clc    
  417525:	retf   0xebcf
  417528:	dec    esi
  417529:	xor    eax,0x84bce19d
  41752e:	and    bl,ch
  417530:	xchg   edx,eax
  417531:	push   edx
  417532:	in     eax,0x74
  417534:	in     eax,dx
  417535:	sbb    DWORD PTR [ebp+0x45],ebx
  417538:	sbb    DWORD PTR cs:[ecx],0xffffffcb
  41753c:	cmp    al,0xd3
  41753e:	push   esp
  41753f:	push   ebp
  417540:	push   ss
  417541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417542:	mov    bh,0x90
  417544:	dec    esi
  417545:	ss stos DWORD PTR es:[edi],eax
  417547:	ins    BYTE PTR es:[edi],dx
  417548:	inc    edi
  417549:	je     0x4175b1
  41754b:	loop   0x4175a7
  41754d:	mov    al,ds:0x791b7e49
  417552:	pop    es
  417553:	mov    ch,0x54
  417555:	in     al,dx
  417556:	mov    DWORD PTR [edi+ebx*2-0x34ad9457],esi
  41755d:	xchg   ebx,ebp
  41755f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417560:	push   cs
  417561:	dec    edi
  417562:	in     al,dx
  417563:	xchg   edi,eax
  417564:	arpl   WORD PTR [edx],di
  417566:	cld    
  417567:	or     cl,BYTE PTR [ecx]
  417569:	fiadd  WORD PTR [ecx+0x39]
  41756c:	push   0xffffffb5
  41756e:	jge    0x417576
  417570:	pop    esp
  417571:	icebp  
  417572:	(bad)  
  417573:	dec    ecx
  417574:	(bad)  
  417576:	daa    
  417577:	rol    DWORD PTR [eax-0x4b5a4ab],1
  41757d:	cmp    eax,0x2a142bec
  417582:	dec    edx
  417583:	and    DWORD PTR [esi+edx*8+0x6795cd7a],esp
  41758a:	ins    BYTE PTR es:[edi],dx
  41758b:	mov    cl,0xc4
  41758d:	sbb    eax,0x8776f71
  417592:	sub    ecx,DWORD PTR [eax+0x79]
  417595:	sbb    al,0xe2
  417597:	push   edi
  417598:	repz cli 
  41759a:	mov    dh,0x27
  41759c:	aas    
  41759d:	bound  ecx,QWORD PTR [ebx+0x5a]
  4175a0:	push   0x3e
  4175a2:	jb     0x417612
  4175a4:	pop    ss
  4175a5:	lods   eax,DWORD PTR ds:[esi]
  4175a6:	or     BYTE PTR [esi-0x4f930d86],ah
  4175ac:	jmp    0x4175d5
  4175ae:	pusha  
  4175af:	xor    edi,DWORD PTR [edx]
  4175b1:	sbb    DWORD PTR [ecx+0x1],esi
  4175b4:	pop    edi
  4175b5:	pushf  
  4175b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b7:	xor    BYTE PTR [ebx-0x3f],ch
  4175ba:	addr16 fnclex 
  4175bd:	bound  ebx,QWORD PTR [ecx]
  4175bf:	mov    ecx,0xe5e99a9e
  4175c4:	aas    
  4175c5:	(bad)  
  4175c6:	out    dx,eax
  4175c7:	clc    
  4175c8:	mov    edi,0x6f45b0c4
  4175cd:	aam    0x38
  4175cf:	repz sub al,0x3
  4175d2:	xchg   ecx,eax
  4175d3:	ror    BYTE PTR [edi-0x2ff4bc94],1
  4175d9:	adc    al,bh
  4175db:	nop
  4175dc:	std    
  4175dd:	mov    edi,DWORD PTR [edx-0x30]
  4175e0:	rcl    BYTE PTR [esp+ecx*4],1
  4175e3:	cmp    eax,0x666cf685
  4175e8:	shl    BYTE PTR [edi],0xb0
  4175eb:	into   
  4175ec:	dec    ecx
  4175ed:	pushf  
  4175ee:	mov    ds:0xde755314,eax
  4175f3:	repz aas 
  4175f5:	gs lock cdq 
  4175f8:	mov    ecx,0xe8337d82
  4175fd:	jne    0x41767d
  4175ff:	mov    edi,0xb1e07ccb
  417604:	or     BYTE PTR [ebp+0x30],bl
  417607:	es out 0x49,al
  41760a:	inc    ecx
  41760b:	cld    
  41760c:	jle    0x417681
  41760e:	and    DWORD PTR [edi+0x22c96111],ebx
  417614:	jl     0x4175c0
  417616:	add    eax,0xd9eb4ad0
  41761b:	dec    edi
  41761c:	out    0x5d,eax
  41761e:	and    bl,BYTE PTR ds:0xeb2a3382
  417624:	mov    al,0xb5
  417626:	jl     0x4175b2
  417628:	or     eax,0x2d33771c
  41762d:	lds    edi,FWORD PTR [ebp-0x7bf4be9f]
  417633:	test   bh,cl
  417635:	leave  
  417636:	add    dl,cl
  417638:	sbb    BYTE PTR [eax],dl
  41763a:	bnd jmp 0x978a18bd
  417640:	dec    edi
  417641:	adc    al,0x62
  417643:	test   BYTE PTR [edi-0x2c],dh
  417646:	cdq    
  417647:	shl    BYTE PTR [edx],cl
  417649:	push   ebp
  41764a:	push   es
  41764b:	xor    ebx,ecx
  41764d:	jne    0x4175d6
  41764f:	fdiv   st,st(1)
  417651:	adc    eax,0xf6e08349
  417656:	sbb    al,0xd0
  417658:	push   edi
  417659:	fst    QWORD PTR [edi+0x7a]
  41765c:	icebp  
  41765d:	rcr    DWORD PTR [ecx-0x28],1
  417660:	clc    
  417661:	push   0xffffff8a
  417663:	fisub  WORD PTR [eax+0x16b5df78]
  417669:	sbb    BYTE PTR ds:0xc149bf03,bl
  41766f:	outs   dx,BYTE PTR ds:[esi]
  417670:	sub    al,0x20
  417672:	dec    esi
  417673:	jae    0x417636
  417675:	jae    0x41767d
  417677:	stos   DWORD PTR es:[edi],eax
  417678:	and    eax,0x2fa2b212
  41767d:	push   sp
  41767f:	shr    DWORD PTR [ecx+eax*1],1
  417682:	or     BYTE PTR [edi+0x46],0xb5
  417686:	jno    0x41767f
  417688:	mov    ?,esp
  41768a:	xchg   DWORD PTR [edx],edx
  41768c:	out    dx,al
  41768d:	fimul  WORD PTR [bp+si+0x4a]
  417691:	fidiv  WORD PTR [esi-0xae0a84e]
  417697:	je     0x4176f2
  417699:	push   edi
  41769a:	mov    WORD PTR [ebx-0xcefdbd8],gs
  4176a0:	or     DWORD PTR [ecx+ebx*4+0x75ee1a9e],0x19
  4176a8:	test   DWORD PTR fs:[ebp-0x718c311b],ebx
  4176af:	ins    DWORD PTR es:[edi],dx
  4176b0:	das    
  4176b1:	repz push cs
  4176b3:	rol    edx,cl
  4176b5:	adc    al,0x2c
  4176b7:	call   0x2a4d26a3
  4176bc:	inc    edx
  4176bd:	cmp    dl,BYTE PTR [edx+edx*1]
  4176c0:	mov    dh,0x61
  4176c2:	push   edi
  4176c3:	hlt    
  4176c4:	bound  edx,QWORD PTR [ebp+0x4d6b211d]
  4176ca:	stc    
  4176cb:	push   ebp
  4176cc:	mov    ebp,0xdd3259b7
  4176d1:	stc    
  4176d2:	ds pop edi
  4176d4:	addr16 push 0x10
  4176d7:	pop    eax
  4176d8:	aad    0x73
  4176da:	mov    ds:0x9cb85fe8,al
  4176df:	sub    BYTE PTR [edx],bl
  4176e1:	and    BYTE PTR [ebx],0xb5
  4176e4:	add    al,0xad
  4176e6:	and    al,0x91
  4176e8:	dec    esi
  4176e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ea:	mov    al,0x28
  4176ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ed:	dec    esi
  4176ee:	in     eax,0xc2
  4176f0:	cmp    BYTE PTR [ecx-0x2485088c],bh
  4176f6:	push   ebp
  4176f7:	(bad)  
  4176f8:	sub    cl,BYTE PTR [eax+0x6b21f66f]
  4176fe:	dec    eax
  4176ff:	fimul  DWORD PTR [esi]
  417701:	out    dx,al
  417702:	mov    cl,BYTE PTR [edx-0xd120b76]
  417708:	or     eax,0xb589a4bc
  41770d:	jno    0x417706
  41770f:	addr16 clc 
  417711:	rcr    DWORD PTR [esp],0x4f
  417715:	dec    esp
  417716:	loopne 0x4176cd
  417718:	fsubr  st(4),st
  41771a:	scas   al,BYTE PTR es:[edi]
  41771b:	dec    eax
  41771c:	lahf   
  41771d:	aam    0xa0
  41771f:	fstp   TBYTE PTR [edi-0x69]
  417722:	mov    ds:0x1d66a38a,al
  417727:	(bad)  
  417728:	xchg   edi,eax
  417729:	inc    ebp
  41772a:	jnp    0x4176c2
  41772c:	adc    DWORD PTR [ebp+0xa7946e2],ebx
  417732:	sub    eax,0x718ec9d9
  417737:	repz (bad) 
  417739:	lock inc ebp
  41773b:	fist   DWORD PTR [edx]
  41773d:	and    al,BYTE PTR [eax+0x60]
  417740:	mov    esi,0x5efcaacd
  417745:	push   ds
  417746:	jecxz  0x417785
  417748:	xor    edi,esi
  41774a:	lock add BYTE PTR [esi-0x10],0x1e
  41774f:	jo     0x417755
  417751:	mov    dh,0xa8
  417753:	(bad)  
  417754:	lods   al,BYTE PTR ds:[esi]
  417755:	mov    cl,0x9
  417757:	popf   
  417758:	(bad)  
  417759:	rcl    BYTE PTR [ebp+0x737381c6],0xdc
  417760:	int3   
  417761:	mov    esp,0x32d39721
  417766:	jmp    DWORD PTR [bx+di+0x7b8c]
  41776b:	ins    BYTE PTR es:[edi],dx
  41776c:	mov    ecx,0x36ad6544
  417771:	std    
  417772:	jg     0x417790
  417774:	jbe    0x417769
  417776:	push   edi
  417777:	add    esi,edi
  417779:	mov    BYTE PTR [ecx+edx*4],dh
  41777c:	pop    esp
  41777d:	loopne 0x41778e
  41777f:	sbb    BYTE PTR [edi+0xe],bl
  417782:	call   0x8f1e:0x34d11144
  417789:	data16 shl BYTE PTR [edi+0x72],cl
  41778d:	mov    DWORD PTR [edi+0x5f3f33d2],ebp
  417793:	xchg   esi,eax
  417794:	sub    DWORD PTR [ebp+0x7637e281],eax
  41779a:	or     esp,eax
  41779c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779d:	pop    edx
  41779e:	(bad)  
  41779f:	stc    
  4177a0:	nop
  4177a1:	cwde   
  4177a2:	retf   0xe5b5
  4177a5:	fyl2x  
  4177a7:	repz in al,dx
  4177a9:	cs shl eax,cl
  4177ac:	cdq    
  4177ad:	cld    
  4177ae:	dec    edx
  4177af:	call   0xd10d0d18
  4177b4:	jl     0x41777b
  4177b6:	test   al,0xb3
  4177b8:	test   al,0x70
  4177ba:	popa   
  4177bb:	cmp    eax,esp
  4177bd:	or     ch,cl
  4177bf:	call   0x2121:0x5bd8cdc
  4177c6:	lea    esp,[ecx]
  4177c8:	push   ds
  4177c9:	add    DWORD PTR [esi],edx
  4177cb:	push   edi
  4177cc:	push   edi
  4177cd:	and    al,0x5d
  4177cf:	sbb    al,0x9
  4177d1:	stos   BYTE PTR es:[edi],al
  4177d2:	mov    cl,0xb1
  4177d4:	push   es
  4177d5:	lds    ebp,FWORD PTR [ecx+0x48c133bc]
  4177db:	scas   al,BYTE PTR es:[edi]
  4177dc:	mov    bh,0x8
  4177de:	in     eax,dx
  4177df:	das    
  4177e0:	xchg   edx,eax
  4177e1:	call   0x216e:0xf4f205bf
  4177e8:	or     al,0xcc
  4177ea:	loopne 0x417799
  4177ec:	scas   eax,DWORD PTR es:[edi]
  4177ed:	pop    esp
  4177ee:	ror    DWORD PTR [ecx],0xf1
  4177f1:	mov    dl,0x9a
  4177f3:	loope  0x417846
  4177f5:	pop    esp
  4177f6:	cmp    DWORD PTR [esi+0x4afc7539],esp
  4177fc:	lods   al,BYTE PTR ds:[esi]
  4177fd:	add    ebp,DWORD PTR [ebx-0x43]
  417800:	cmp    esi,DWORD PTR [edi+0x57f3233e]
  417806:	idiv   BYTE PTR [edx+0x2d]
  417809:	mov    eax,ds:0xff8eabfc
  41780e:	inc    ecx
  41780f:	or     al,0x6d
  417811:	xchg   DWORD PTR [eax+0x77471fde],edi
  417817:	sub    esi,DWORD PTR [edx]
  417819:	repnz jecxz 0x417889
  41781c:	scas   eax,DWORD PTR es:[edi]
  41781d:	mov    al,0x5
  41781f:	sbb    ah,bl
  417821:	fs push ecx
  417823:	mov    ecx,0xf7545524
  417828:	xchg   ebx,eax
  417829:	dec    esi
  41782a:	cdq    
  41782b:	inc    esi
  41782c:	test   al,0x70
  41782e:	out    0x7f,al
  417830:	push   ss
  417831:	pop    ds
  417832:	mov    eax,db0
  417835:	inc    edi
  417836:	push   ebx
  417837:	xor    BYTE PTR [ebx+0x705b663d],al
  41783d:	fdivr  QWORD PTR [ebp+0x553794d6]
  417843:	sub    eax,0x38f8bb82
  417848:	add    BYTE PTR [esi+edx*4-0x54b54cf2],dl
  41784f:	lods   al,BYTE PTR ds:[esi]
  417850:	adc    al,0x8a
  417852:	arpl   WORD PTR [ebx+0x20],cx
  417855:	cld    
  417856:	out    0xc0,al
  417858:	jb     0x417811
  41785a:	sbb    eax,0xeaa716a9
  41785f:	sahf   
  417860:	mov    BYTE PTR [esi-0x7d],ah
  417863:	mov    ah,BYTE PTR [ebx+0x3a]
  417866:	std    
  417867:	jno    0x4178cf
  417869:	frstor [edx+0x2b]
  41786c:	pop    es
  41786d:	call   0x63f0:0x6f1b1967
  417874:	cmp    esi,esp
  417876:	scas   eax,DWORD PTR es:[edi]
  417877:	xor    BYTE PTR [ecx],bl
  417879:	adc    bh,BYTE PTR [esp+0x72]
  41787d:	jmp    0x41f0:0x364efc4d
  417884:	scas   al,BYTE PTR es:[edi]
  417885:	push   esi
  417886:	int    0xd1
  417888:	in     al,0x46
  41788a:	jno    0x417843
  41788c:	pop    ebp
  41788d:	and    bh,BYTE PTR [edi+0x25]
  417890:	arpl   WORD PTR [ebp+0x13f98b44],dx
  417896:	clc    
  417897:	adc    BYTE PTR [ecx+esi*8],0x90
  41789b:	sbb    edi,DWORD PTR [ebp-0x41b67e65]
  4178a1:	mov    ds:0xaf3dc74d,eax
  4178a6:	in     eax,0xe
  4178a8:	jle    0x4178f2
  4178aa:	sub    eax,0xbec0cc68
  4178af:	and    esi,esi
  4178b1:	sub    DWORD PTR [esi],eax
  4178b3:	(bad)  
  4178b4:	mov    edx,0x4923fd8f
  4178b9:	fst    st(5)
  4178bb:	std    
  4178bc:	pop    ebx
  4178bd:	adc    ecx,DWORD PTR ds:0xc1a58ffd
  4178c3:	data16 jecxz 0x4178c4
  4178c6:	jne    0x4178aa
  4178c8:	push   ecx
  4178c9:	xchg   ebx,eax
  4178ca:	xor    BYTE PTR [eax+0x742de7cc],0x5
  4178d1:	shl    DWORD PTR [ebx+eax*8+0x7e5f861e],0x96
  4178d9:	inc    esp
  4178da:	inc    edi
  4178db:	add    eax,0x241a5cc1
  4178e0:	stos   BYTE PTR es:[edi],al
  4178e1:	mov    bh,BYTE PTR [ecx+0x2fa37571]
  4178e7:	xor    edi,edx
  4178e9:	and    DWORD PTR [esi+eax*4+0x40],esi
  4178ed:	adc    dh,BYTE PTR [ebp-0x259911f9]
  4178f3:	cmp    al,0x7e
  4178f5:	les    esi,FWORD PTR [ecx+0x30]
  4178f8:	call   0x3fc4:0x6e6b4da9
  4178ff:	pop    ebx
  417900:	clc    
  417901:	outs   dx,BYTE PTR ds:[esi]
  417902:	inc    esi
  417903:	cmc    
  417904:	sub    DWORD PTR [ebx+edi*1-0x42f7e021],ebx
  41790b:	sbb    DWORD PTR [eax+0x30e39224],ecx
  417911:	inc    edx
  417912:	dec    edx
  417913:	jmp    0x41790a
  417915:	scas   al,BYTE PTR es:[edi]
  417916:	les    ebp,FWORD PTR [edi]
  417918:	pop    es
  417919:	sbb    ecx,eax
  41791b:	xor    edi,DWORD PTR [ecx-0x27a35b82]
  417921:	aaa    
  417922:	adc    ecx,DWORD PTR [ebx+ebx*1]
  417925:	cld    
  417926:	nop
  417927:	jmp    0x93843fc4
  41792c:	cld    
  41792d:	outs   dx,DWORD PTR ds:[esi]
  41792e:	aam    0xb3
  417930:	ins    BYTE PTR es:[edi],dx
  417931:	jecxz  0x41795e
  417933:	fcomp  DWORD PTR [ebp-0x29]
  417936:	dec    eax
  417937:	jmp    0xf250d04a
  41793c:	adc    DWORD PTR [edi-0x7f],ebp
  41793f:	jl     0x4178fa
  417941:	xor    cl,BYTE PTR ds:0x7b517cb9
  417947:	xchg   edi,eax
  417948:	xor    DWORD PTR [edi],edi
  41794a:	and    edi,esp
  41794c:	sbb    al,0xa6
  41794e:	rcr    bl,1
  417950:	lock ds sbb al,0x66
  417954:	out    0x64,al
  417956:	dec    edi
  417957:	ja     0x417950
  417959:	xor    DWORD PTR [ecx-0x6d],edi
  41795c:	(bad)
  41795f:	int3   
  417960:	jmp    0x4178:0x96c4aef9
  417967:	push   ebx
  417968:	call   0xe04c4579
  41796d:	ja     0x4178fb
  41796f:	pop    ebx
  417970:	fmul   st,st(5)
  417972:	outs   dx,DWORD PTR ds:[esi]
  417973:	fild   QWORD PTR [edx]
  417975:	xor    BYTE PTR [ebp+0x2c],dh
  417978:	hlt    
  417979:	xchg   esp,eax
  41797a:	add    DWORD PTR ds:0x5428e5e2,ebx
  417980:	adc    DWORD PTR [ebp+0x68],esi
  417983:	sub    bp,0xffdc
  417987:	jnp    0x41791f
  417989:	cmp    al,0xaa
  41798b:	arpl   WORD PTR [ebx-0x24],di
  41798e:	mov    ebx,edi
  417990:	mov    edx,0x6c010fd2
  417995:	mov    bh,0x35
  417997:	pop    edi
  417998:	lock cwde 
  41799a:	gs sbb eax,0xbff72da2
  4179a0:	mov    dl,0x2f
  4179a2:	or     BYTE PTR [ecx+0x46fc6f11],dl
  4179a8:	jp     0x4179d1
  4179aa:	xor    eax,0xdc31b18
  4179af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b0:	mov    ebx,0x7eb8b8bd
  4179b5:	ret    
  4179b6:	jo     0x4179d8
  4179b8:	inc    eax
  4179b9:	loopne 0x4179c8
  4179bb:	jae    0x417a3b
  4179bd:	add    BYTE PTR [edx],0x94
  4179c0:	mov    eax,ds:0x3312da70
  4179c5:	daa    
  4179c6:	cmp    DWORD PTR [esp+ecx*4-0x7655262d],ebx
  4179cd:	push   cs
  4179ce:	cmp    DWORD PTR [edx-0xa],esp
  4179d1:	mov    dh,0xb4
  4179d3:	mov    ds:0x36ba0ed,al
  4179d8:	and    dh,dh
  4179da:	xchg   DWORD PTR [ecx+0x1c],esi
  4179dd:	daa    
  4179de:	data16 test BYTE PTR ds:0x6b5af193,ch
  4179e5:	lahf   
  4179e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e7:	mov    ds:0x69f59a66,al
  4179ec:	out    dx,eax
  4179ed:	(bad)  
  4179ee:	mov    eax,es:0x87c7cd48
  4179f4:	lea    edx,[ebx+0x36f0c8b1]
  4179fa:	mov    ds:0x3d615666,eax
  4179ff:	push   edx
  417a00:	js     0x41799e
  417a02:	mov    ds:0xdc2249b9,al
  417a07:	hlt    
  417a08:	push   esp
  417a09:	add    BYTE PTR [ebx-0x4a],bl
  417a0c:	mov    ah,0xe2
  417a0e:	mov    dl,0xcf
  417a10:	pop    edi
  417a11:	clc    
  417a12:	hlt    
  417a13:	fist   WORD PTR [edi+0x65]
  417a16:	leave  
  417a17:	jno    0x417a97
  417a19:	sbb    edx,DWORD PTR [esi+0x63]
  417a1c:	sbb    eax,0x49950b1c
  417a21:	add    dh,BYTE PTR [ebx-0x5f333b06]
  417a27:	inc    ebx
  417a28:	and    BYTE PTR [edi+0x32446d0b],ch
  417a2e:	jge    0x4179fa
  417a30:	dec    edx
  417a31:	xor    al,0x35
  417a33:	aas    
  417a34:	adc    DWORD PTR [eax-0x3c890237],edi
  417a3a:	fnstcw WORD PTR [edi+0x6a]
  417a3d:	sub    cl,bh
  417a3f:	jno    0x417a9c
  417a41:	sub    BYTE PTR [ebp+0x77],bh
  417a44:	dec    esi
  417a45:	stos   BYTE PTR es:[edi],al
  417a46:	sub    BYTE PTR [ebx],0x46
  417a49:	xor    al,cl
  417a4b:	mov    dh,0x3
  417a4d:	inc    ebx
  417a4e:	(bad)  
  417a4f:	(bad)  
  417a51:	xor    eax,0x8f9a5913
  417a56:	dec    ebx
  417a57:	imul   edi,DWORD PTR [ebp-0x43dce1af],0x40
  417a5e:	mov    ebx,0x1d34e14f
  417a63:	jecxz  0x4179e6
  417a65:	push   edi
  417a66:	add    DWORD PTR [ebp+0x48],eax
  417a69:	adc    eax,0xa806d99
  417a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6f:	mov    eax,0x84299d28
  417a74:	in     eax,dx
  417a75:	jmp    0x2ac40adf
  417a7a:	or     dh,bh
  417a7c:	cs and eax,0x2b614336
  417a82:	pop    es
  417a83:	popf   
  417a84:	and    al,BYTE PTR [ebx-0x469ee4e4]
  417a8a:	ret    0x475b
  417a8d:	retf   
  417a8e:	push   es
  417a8f:	jp     0x417a2b
  417a91:	jae    0x417ac7
  417a93:	sub    cl,BYTE PTR [eax]
  417a95:	das    
  417a96:	mov    dl,dh
  417a98:	outs   dx,BYTE PTR ds:[esi]
  417a99:	mov    dh,0x25
  417a9b:	lock mov ch,0xc9
  417a9e:	inc    edi
  417a9f:	test   DWORD PTR [edx-0x4a95be7e],ecx
  417aa5:	sbb    al,bh
  417aa7:	push   edi
  417aa8:	xchg   ecx,eax
  417aa9:	sub    bh,dh
  417aab:	sub    esp,DWORD PTR [edi]
  417aad:	or     dl,BYTE PTR ds:0x308eb2bc
  417ab3:	sbb    cl,ch
  417ab5:	jl     0x417aee
  417ab7:	inc    ecx
  417ab8:	pop    esp
  417ab9:	or     eax,0xb57b9382
  417abe:	cmp    cl,BYTE PTR [ecx+0x3f753cbc]
  417ac4:	xor    esp,DWORD PTR [edi]
  417ac6:	push   ebx
  417ac7:	dec    edx
  417ac8:	daa    
  417ac9:	outs   dx,BYTE PTR ds:[esi]
  417aca:	mov    ds:0x33fd894a,eax
  417acf:	xchg   ebx,eax
  417ad0:	cmp    ecx,DWORD PTR [eax]
  417ad2:	and    BYTE PTR ds:0x4f7ebab9,ch
  417ad8:	push   edx
  417ad9:	ror    BYTE PTR [edi-0x1ce2d2c4],1
  417adf:	adc    DWORD PTR [esi+0x2c],ebp
  417ae2:	xchg   edx,eax
  417ae3:	clc    
  417ae4:	call   0x3d9c:0x6379338b
  417aeb:	test   al,0xd1
  417aed:	rol    DWORD PTR [eax+0x7026f54f],1
  417af3:	or     al,0x43
  417af5:	das    
  417af6:	push   0x339cd868
  417afb:	ins    BYTE PTR es:[edi],dx
  417afc:	pop    esp
  417afd:	fiadd  DWORD PTR [eax+0x6450c6db]
  417b03:	leave  
  417b04:	imul   esp,DWORD PTR [ebp+0x9791818],0xffffffec
  417b0b:	dec    ecx
  417b0c:	fdiv   st(0),st
  417b0e:	jle    0x417aa7
  417b10:	popa   
  417b11:	push   esi
  417b12:	ror    ebx,1
  417b14:	mov    eax,0xd8a6b207
  417b19:	jmp    0x417b6b
  417b1b:	cmp    esp,DWORD PTR [esi]
  417b1d:	sbb    DWORD PTR [esp+eax*8+0x62066367],eax
  417b24:	iret   
  417b25:	jle    0x417ae8
  417b27:	sbb    eax,0xd55b7602
  417b2c:	cmp    edi,DWORD PTR [ebx+0x6679a572]
  417b32:	sub    eax,0x175cd663
  417b37:	xchg   ecx,eax
  417b38:	outs   dx,BYTE PTR ds:[esi]
  417b39:	cmp    al,BYTE PTR [edi-0x33]
  417b3c:	mov    esp,0xb8a57e32
  417b41:	pop    es
  417b42:	jle    0x417b93
  417b44:	and    bh,BYTE PTR ds:0xef91f686
  417b4a:	repz jns 0x417ad7
  417b4d:	add    eax,0xdb32e312
  417b52:	mov    cl,BYTE PTR [edi]
  417b54:	ins    DWORD PTR es:[edi],dx
  417b55:	cmp    DWORD PTR [edx+0x65],0x55
  417b59:	pop    esp
  417b5a:	ja     0x417ae8
  417b5c:	inc    esi
  417b5d:	aaa    
  417b5e:	cmp    al,0x4d
  417b60:	xchg   edi,eax
  417b61:	lock pop ss
  417b63:	mov    al,0xd8
  417b65:	inc    ecx
  417b66:	dec    edx
  417b67:	and    eax,0xdaa68d2b
  417b6c:	adc    DWORD PTR [ecx-0x67],edx
  417b6f:	mov    eax,ds
  417b71:	jmp    0xf1dfacb4
  417b76:	sbb    al,0x4e
  417b78:	fisttp DWORD PTR ds:0x87f18a46
  417b7e:	mov    ebp,0x8f941b79
  417b83:	adc    dh,ah
  417b85:	pop    ebp
  417b86:	jecxz  0x417bb4
  417b88:	lock jns 0x417b6f
  417b8b:	inc    esp
  417b8c:	adc    eax,0xc976c9fe
  417b91:	stos   BYTE PTR es:[edi],al
  417b92:	inc    ecx
  417b93:	cmp    eax,0xde7ff754
  417b98:	pop    edi
  417b99:	mov    dl,0x1b
  417b9b:	sti    
  417b9c:	xchg   DWORD PTR [ebx-0x40],ecx
  417b9f:	adc    edi,DWORD PTR [edx+0x6da9dd87]
  417ba5:	in     al,dx
  417ba6:	pop    ebp
  417ba7:	shl    BYTE PTR [ebx+0x73],1
  417baa:	mov    cs,WORD PTR [ebp+edi*1+0x6e]
  417bae:	jns    0x417bdd
  417bb0:	(bad)  
  417bb2:	stc    
  417bb3:	jecxz  0x417c18
  417bb5:	xor    esi,DWORD PTR [edx]
  417bb7:	push   es
  417bb8:	dec    ebp
  417bb9:	inc    ecx
  417bba:	rcr    DWORD PTR [eax+0x1a],cl
  417bbd:	push   0xb072ec5b
  417bc2:	pop    ebx
  417bc3:	in     al,dx
  417bc4:	ret    
  417bc5:	hlt    
  417bc6:	or     dh,cl
  417bc8:	leave  
  417bc9:	popa   
  417bca:	and    bl,BYTE PTR [ebx-0x6d]
  417bcd:	fwait
  417bce:	scas   al,BYTE PTR es:[edi]
  417bcf:	sbb    esi,esp
  417bd1:	adc    eax,0x57ded6b6
  417bd6:	jg     0x417c2a
  417bd8:	mov    ebx,0x82788f57
  417bdd:	jne    0x417b74
  417bdf:	lahf   
  417be0:	push   0xf6da2b84
  417be5:	push   edx
  417be6:	pop    eax
  417be7:	shr    DWORD PTR [edi+0x767e2c55],1
  417bed:	rcr    DWORD PTR ds:0xb1c2b31f,cl
  417bf3:	pop    ebx
  417bf4:	lds    edx,FWORD PTR [esi+0x2a8c5a97]
  417bfa:	sbb    edx,DWORD PTR [edi+eax*2+0x3e]
  417bfe:	dec    edi
  417bff:	jmp    0x11e3:0xec16d3de
  417c06:	cdq    
  417c07:	xor    al,BYTE PTR [esi+ebx*4+0x7e]
  417c0b:	adc    BYTE PTR [ebp-0x76],0x6d
  417c0f:	mov    bl,0xcc
  417c11:	jo     0x417be5
  417c13:	arpl   WORD PTR [edi],bx
  417c15:	int3   
  417c16:	sub    esi,edi
  417c18:	xchg   DWORD PTR [eiz*4-0x4fae232a],ecx
  417c1f:	out    0x7b,al
  417c21:	jge    0x417bce
  417c23:	or     dl,BYTE PTR [ecx]
  417c25:	fistp  DWORD PTR [edi+edx*4-0x79]
  417c29:	outs   dx,DWORD PTR ds:[esi]
  417c2a:	enter  0x4417,0x1a
  417c2e:	test   eax,0x4f36bf28
  417c33:	(bad)  
  417c37:	cmp    ebx,DWORD PTR [ebx-0x22318d6d]
  417c3d:	cmp    eax,0x3b44a858
  417c42:	push   ds
  417c43:	pop    es
  417c44:	or     BYTE PTR [edx-0x67],bh
  417c47:	pop    eax
  417c48:	(bad)  
  417c49:	sub    BYTE PTR [ecx],bh
  417c4b:	mov    eax,ds:0xa2b9efae
  417c51:	mov    eax,ds:0xc1813b22
  417c56:	pusha  
  417c57:	xor    al,0x47
  417c59:	mov    WORD PTR [esi+0x5d],?
  417c5c:	test   BYTE PTR [ecx],dh
  417c5e:	imul   ebx,edx,0xffffffc2
  417c61:	sub    BYTE PTR [eax],al
  417c63:	(bad)  [eax]
  417c65:	jmp    0x417be7
  417c67:	das    
  417c68:	inc    edi
  417c69:	or     bl,BYTE PTR [edi-0x9543552]
  417c6f:	cld    
  417c70:	iret   
  417c71:	lds    esp,FWORD PTR [edx]
  417c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c74:	adc    BYTE PTR [ebx-0x28],0x12
  417c78:	test   al,0xff
  417c7a:	rcr    DWORD PTR gs:[ebx-0x51977bbe],0x5c
  417c82:	fs jmp 0xae18:0x930fe04f
  417c8a:	xchg   eax,ebp
  417c8c:	mov    al,0xec
  417c8e:	test   BYTE PTR [ebx+0x24],dl
  417c91:	pop    esp
  417c92:	adc    ebx,esp
  417c94:	jnp    0x417c6f
  417c96:	dec    edi
  417c97:	adc    esp,DWORD PTR [ebx-0x5b]
  417c9a:	mov    bl,0x9f
  417c9c:	outs   dx,DWORD PTR ds:[esi]
  417c9d:	xchg   esp,eax
  417c9e:	adc    BYTE PTR [esi-0x50],bh
  417ca1:	jb     0x417c34
  417ca3:	jns    0x417c88
  417ca5:	mov    esi,0xbe96b1be
  417caa:	xchg   al,bl
  417cac:	cli    
  417cad:	retf   
  417cae:	arpl   ax,sp
  417cb0:	mov    ds,WORD PTR [esi+0xd]
  417cb3:	jg     0x417cc1
  417cb5:	mov    ch,0xab
  417cb7:	call   0x46b3467b
  417cbc:	inc    esp
  417cbd:	xor    eax,0x937dd1ad
  417cc2:	inc    esi
  417cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc4:	std    
  417cc5:	xor    DWORD PTR [ebx+ecx*4+0x6f],ebp
  417cc9:	cdq    
  417cca:	in     eax,0x3e
  417ccc:	mov    bl,0x3b
  417cce:	idiv   ch
  417cd0:	mov    ebp,0xb42489e0
  417cd5:	test   BYTE PTR [eax+0x6679a75a],0x5
  417cdc:	mov    bl,BYTE PTR [ebx+0x69526eb4]
  417ce2:	addr16 jmp 0x417c96
  417ce5:	cmp    DWORD PTR [ecx-0x3ac46bba],ebp
  417ceb:	pushf  
  417cec:	adc    DWORD PTR [ecx+0x4b9ab71],esi
  417cf2:	xor    BYTE PTR [edi-0x2a],dl
  417cf5:	jbe    0x417d09
  417cf7:	imul   cx,WORD PTR [ebx-0x13],0xa487
  417cfd:	jbe    0x417cd3
  417cff:	clc    
  417d00:	or     al,0xd9
  417d02:	mov    esp,0x394133d8
  417d07:	xchg   esp,edx
  417d09:	rcr    ch,1
  417d0b:	imul   ebx,DWORD PTR [esi-0x1a],0xffffffff
  417d0f:	mov    al,ds:0xdb7c579f
  417d14:	iret   
  417d15:	xor    ebx,eax
  417d17:	out    0x7c,eax
  417d19:	and    eax,0x30546806
  417d1e:	sbb    esi,DWORD PTR [edi+0x23]
  417d21:	pop    ss
  417d22:	aam    0x2b
  417d24:	and    al,0x2a
  417d26:	or     BYTE PTR [eax+0x1b],bl
  417d29:	popf   
  417d2a:	jmp    0x417d95
  417d2c:	push   0x6
  417d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d2f:	(bad)  
  417d30:	pop    ds
  417d31:	aad    0x34
  417d33:	pop    edi
  417d34:	push   ebx
  417d35:	push   ebx
  417d36:	sub    DWORD PTR [esi],esi
  417d38:	adc    ch,BYTE PTR [ecx+0x37]
  417d3b:	(bad)  [esi]
  417d3d:	pop    ss
  417d3e:	xchg   edi,eax
  417d3f:	sahf   
  417d40:	in     eax,dx
  417d41:	lods   eax,DWORD PTR ds:[esi]
  417d42:	jbe    0x417d2e
  417d44:	and    esp,edi
  417d46:	push   es
  417d47:	mov    al,0x10
  417d49:	arpl   WORD PTR [ecx+0x66],bx
  417d4c:	imul   ebx,DWORD PTR [esi-0x7e552a2c],0xffffffea
  417d53:	shl    esp,cl
  417d55:	popf   
  417d56:	pop    eax
  417d57:	jnp    0x417d1c
  417d59:	dec    ecx
  417d5a:	cli    
  417d5b:	pusha  
  417d5c:	jb     0x417d6f
  417d5e:	push   ss
  417d5f:	dec    ebx
  417d60:	add    edi,DWORD PTR [edi-0x1c]
  417d63:	xchg   ebx,eax
  417d64:	sbb    edx,DWORD PTR [esi-0x38c26817]
  417d6a:	cli    
  417d6b:	mov    ch,0x30
  417d6d:	clc    
  417d6e:	sub    eax,0xd1a07f75
  417d73:	jecxz  0x417d0f
  417d75:	test   al,0x42
  417d77:	mov    ebp,0xc8cbeae
  417d7c:	pop    esi
  417d7d:	ja     0x417d25
  417d7f:	xor    BYTE PTR [edx+0x27],bl
  417d82:	out    dx,al
  417d83:	pop    edi
  417d84:	add    DWORD PTR [edi],0x8
  417d87:	test   eax,0x94d7a924
  417d8c:	jo     0x417d15
  417d8e:	jg     0x417d10
  417d90:	xchg   esi,eax
  417d91:	push   esp
  417d92:	adc    edi,esp
  417d94:	sbb    ah,BYTE PTR [ecx-0x72104799]
  417d9a:	jne    0x417de2
  417d9c:	je     0x417d4e
  417d9e:	cli    
  417d9f:	(bad)  
  417da0:	xor    BYTE PTR [ebx+0x3d],ah
  417da3:	dec    ebp
  417da4:	test   DWORD PTR [ebp+edi*1-0x50393f12],esi
  417dab:	rol    BYTE PTR [esi+ebx*2],1
  417dae:	fidiv  DWORD PTR [edx-0x71f60faa]
  417db4:	push   eax
  417db5:	fldenv [ebx-0x5faff68d]
  417dbb:	xor    BYTE PTR [ecx+ebx*4-0x27b46316],cl
  417dc2:	pop    eax
  417dc3:	out    dx,eax
  417dc4:	loopne 0x417dae
  417dc6:	lahf   
  417dc7:	into   
  417dc8:	dec    esp
  417dc9:	sub    edi,ebp
  417dcb:	aad    0xdc
  417dcd:	or     ebp,ecx
  417dcf:	xchg   edx,eax
  417dd0:	les    edx,FWORD PTR [ebx+ebx*4+0x79]
  417dd4:	arpl   WORD PTR [esi],bp
  417dd6:	arpl   WORD PTR gs:[esi+ebx*1-0x7b0a7ff6],ax
  417dde:	pop    es
  417ddf:	(bad)  
  417de0:	jns    0x417dc5
  417de2:	pop    ds
  417de3:	iret   
  417de4:	mov    dh,0x63
  417de6:	mov    BYTE PTR [eax+0xc],cl
  417de9:	sbb    eax,0x3eb66673
  417dee:	(bad)  
  417df0:	adc    ch,BYTE PTR [ebp-0x49]
  417df3:	xor    BYTE PTR [ebx-0x3627a107],0xaf
  417dfa:	pusha  
  417dfb:	out    0xe0,eax
  417dfd:	shl    BYTE PTR [edx-0x3b],0x29
  417e01:	lds    edx,FWORD PTR [edi]
  417e03:	sbb    al,0xe6
  417e05:	pop    edx
  417e06:	and    DWORD PTR [ecx+ebx*4],edi
  417e09:	xchg   edi,eax
  417e0a:	imul   esp,DWORD PTR [edi],0xd8a503ef
  417e10:	add    al,BYTE PTR [eax+0x6462058a]
  417e16:	mov    fs,WORD PTR [edx+0x55355555]
  417e1c:	shr    DWORD PTR [ebp-0x76],cl
  417e1f:	mov    ds:0x61954184,al
  417e24:	test   ch,dh
  417e26:	ror    DWORD PTR [edx],0x26
  417e29:	xchg   DWORD PTR [edi+0x24],ebx
  417e2c:	cmc    
  417e2d:	xchg   ecx,eax
  417e2e:	sti    
  417e2f:	mov    bh,0xa9
  417e31:	mov    dh,0x57
  417e33:	mov    DWORD PTR [ebx+0x46],edx
  417e36:	shr    DWORD PTR [edx],1
  417e38:	out    dx,eax
  417e39:	adc    DWORD PTR [ebx-0x58c13276],esi
  417e3f:	adc    BYTE PTR [ecx-0x4a],ah
  417e42:	imul   esp,DWORD PTR [ecx+0x3d],0x966c8442
  417e49:	or     dh,bh
  417e4b:	in     al,0xa4
  417e4d:	mov    BYTE PTR [edi],dh
  417e4f:	lods   eax,DWORD PTR ds:[esi]
  417e50:	test   DWORD PTR [ebx+0x6],0x462bddaf
  417e57:	out    0xef,al
  417e59:	and    edi,DWORD PTR [edx-0x42]
  417e5c:	xchg   esp,ebx
  417e5e:	add    eax,0x4a0768f
  417e63:	fild   WORD PTR [eax-0x41]
  417e66:	(bad)  
  417e69:	or     dh,dl
  417e6b:	int    0x92
  417e6d:	inc    esi
  417e6e:	push   0xfffffffb
  417e70:	jg     0x417e77
  417e72:	ins    BYTE PTR es:[edi],dx
  417e73:	scas   eax,DWORD PTR es:[edi]
  417e74:	ret    
  417e75:	sub    al,0x45
  417e77:	push   edi
  417e78:	fcomp  DWORD PTR [ecx]
  417e7a:	or     al,0x34
  417e7c:	(bad)  
  417e7e:	sbb    BYTE PTR [edi-0x29],cl
  417e81:	fwait
  417e82:	hlt    
  417e83:	pop    ebx
  417e84:	aas    
  417e85:	fs xchg ebp,eax
  417e87:	scas   eax,DWORD PTR es:[edi]
  417e88:	popa   
  417e89:	dec    esp
  417e8a:	nop
  417e8b:	cmc    
  417e8c:	mov    ebx,0xb0ade625
  417e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e92:	lods   eax,DWORD PTR es:[esi]
  417e94:	aam    0x76
  417e96:	mov    al,0x80
  417e98:	frstor [ebx]
  417e9a:	dec    eax
  417e9b:	or     ecx,DWORD PTR [edi+0x43240550]
  417ea1:	cli    
  417ea2:	test   eax,0xabf17aec
  417ea7:	sub    al,BYTE PTR [ebx+0x7ae7f780]
  417ead:	test   BYTE PTR [eax],al
  417eaf:	mov    esi,0x879a61f3
  417eb4:	sahf   
  417eb5:	cld    
  417eb6:	or     BYTE PTR [edx-0x7aa8faf8],dl
  417ebc:	cmp    al,0xa5
  417ebe:	aam    0x4c
  417ec0:	lds    ebp,FWORD PTR [eax]
  417ec2:	ja     0x417ef1
  417ec4:	lock xchg ebp,eax
  417ec6:	and    BYTE PTR [edi-0x24705e0a],cl
  417ecc:	adc    al,0x28
  417ece:	mov    bl,0xfd
  417ed0:	js     0x417f11
  417ed2:	inc    edi
  417ed3:	test   edx,esp
  417ed5:	sub    BYTE PTR [eax],bh
  417ed7:	dec    ecx
  417ed8:	add    DWORD PTR [edx+0x5c],0x6f631766
  417edf:	out    dx,eax
  417ee0:	push   esi
  417ee1:	leave  
  417ee2:	in     al,dx
  417ee3:	daa    
  417ee4:	test   DWORD PTR ds:0xfca226c,0x48886281
  417eee:	pop    ecx
  417eef:	sahf   
  417ef0:	xchg   ebx,eax
  417ef1:	bound  eax,QWORD PTR [edx]
  417ef3:	daa    
  417ef4:	cdq    
  417ef5:	int    0x87
  417ef7:	test   DWORD PTR [esi-0x8],0x9699d698
  417efe:	push   ebx
  417eff:	rcl    BYTE PTR [ebp+0x232a8a4c],1
  417f05:	les    esi,FWORD PTR [edx+edi*2+0x58]
  417f09:	push   cs
  417f0a:	dec    edi
  417f0b:	cmp    eax,0x21837a69
  417f10:	cwde   
  417f11:	test   DWORD PTR [edx],eax
  417f13:	lock icebp 
  417f15:	pop    ecx
  417f16:	or     esp,esi
  417f18:	add    al,0x2b
  417f1a:	ret    0xf631
  417f1d:	int    0x29
  417f1f:	xor    esp,eax
  417f21:	aas    
  417f22:	shl    BYTE PTR [ebx],0x62
  417f25:	fisubr DWORD PTR [edi+0x8]
  417f28:	xchg   edx,eax
  417f29:	xor    edx,DWORD PTR [ebx-0xa50ccf0]
  417f2f:	rol    DWORD PTR [ecx+ebp*1-0x2],0xe7
  417f34:	int3   
  417f35:	push   cs
  417f36:	dec    eax
  417f37:	dec    ebx
  417f38:	cs stc 
  417f3a:	and    ebp,DWORD PTR [eax-0x5a682094]
  417f40:	xchg   BYTE PTR [edx+0x54777261],ch
  417f46:	lea    ecx,[ebx]
  417f48:	add    BYTE PTR [edx+0x7e],dh
  417f4b:	push   edx
  417f4c:	mov    ds:0x4969ae11,eax
  417f51:	outs   dx,BYTE PTR ds:[esi]
  417f52:	dec    esp
  417f53:	inc    ebx
  417f54:	repnz icebp 
  417f56:	(bad)  
  417f57:	xlat   BYTE PTR ds:[ebx]
  417f58:	mov    ebx,0x5741b957
  417f5d:	cmp    BYTE PTR [eax],dh
  417f5f:	and    BYTE PTR ds:0x401084bc,0x3e
  417f66:	xor    al,0x2a
  417f68:	repnz out dx,eax
  417f6a:	mov    al,ds:0x7d385240
  417f6f:	clc    
  417f70:	stos   DWORD PTR es:[edi],eax
  417f71:	das    
  417f72:	ds stos DWORD PTR es:[edi],eax
  417f74:	sbb    DWORD PTR [esi+edi*8],ebp
  417f77:	out    0x8a,eax
  417f79:	lock cld 
  417f7b:	jmp    0x417f2a
  417f7d:	popa   
  417f7e:	or     al,0x66
  417f80:	imul   BYTE PTR [ebx-0x28c72d7c]
  417f86:	and    ecx,0x6f
  417f89:	gs adc eax,0x683f3c85
  417f8f:	test   BYTE PTR [esp+edx*2],ah
  417f92:	dec    ebx
  417f93:	shr    bh,cl
  417f95:	shl    esi,cl
  417f97:	test   BYTE PTR [eax+0x1a399d71],cl
  417f9d:	jmp    0xd659:0x93a45d3b
  417fa4:	pop    esi
  417fa5:	inc    eax
  417fa6:	or     DWORD PTR [esi-0x155bf81b],ebx
  417fac:	ffreep st(2)
  417fae:	pushf  
  417faf:	arpl   WORD PTR [ebx],sp
  417fb1:	cmp    cl,BYTE PTR [ecx+0x3c]
  417fb4:	cmp    al,0x4c
  417fb6:	stc    
  417fb7:	(bad)  
  417fb8:	das    
  417fb9:	test   DWORD PTR [edi+0x1d6bb328],edx
  417fbf:	sti    
  417fc0:	pop    es
  417fc1:	enter  0xaa88,0xe5
  417fc5:	cdq    
  417fc6:	jl     0x417f81
  417fc8:	mov    esi,DWORD PTR [esp+esi*2-0x54]
  417fcc:	in     eax,dx
  417fcd:	pop    esi
  417fce:	lds    edx,FWORD PTR [ebp+0x50]
  417fd1:	sub    BYTE PTR [ebp+eiz*4-0x13],dh
  417fd5:	jo     0x418013
  417fd7:	cwde   
  417fd8:	mov    esi,0x4af8e3e9
  417fdd:	cmp    dx,WORD PTR [eax]
  417fe0:	scas   eax,DWORD PTR es:[edi]
  417fe1:	cdq    
  417fe2:	fwait
  417fe3:	sbb    al,0xe
  417fe5:	dec    ecx
  417fe6:	cld    
  417fe7:	int3   
  417fe8:	ss (bad) 
  417fea:	ins    BYTE PTR es:[edi],dx
  417feb:	mov    bh,0x10
  417fed:	xor    BYTE PTR [eax+0x76],cl
  417ff0:	(bad)  
  417ff1:	imul   BYTE PTR [ecx+0x7a]
  417ff4:	inc    ecx
  417ff5:	shr    DWORD PTR ds:0xced0377d,0x6
  417ffc:	(bad)  
  417ffd:	cmp    ebx,0x1a76986e
  418003:	out    0x8f,eax
  418005:	mov    cl,0xe2
  418007:	push   ss
  418008:	shl    DWORD PTR [ecx],cl
  41800a:	jae    0x417fb8
  41800c:	shl    dl,cl
  41800e:	inc    esp
  41800f:	xor    edi,edi
  418011:	es mov ecx,0x39cdc2e3
  418017:	mov    DWORD PTR [ebp-0x5f1ac63],edx
  41801d:	mov    esi,0xc11c176a
  418022:	leave  
  418023:	jmp    0x41802d
  418025:	push   ds
  418026:	cmp    DWORD PTR [edx-0x77],eax
  418029:	jmp    0x65d6a620
  41802e:	lea    ebx,[edi+edi*2+0x121a38b1]
  418035:	daa    
  418036:	in     al,dx
  418037:	lahf   
  418038:	inc    edi
  418039:	mov    cl,0x44
  41803b:	sbb    eax,0x564d22cd
  418040:	sub    eax,0xdb7fd531
  418045:	adc    eax,0x43eba88f
  41804a:	dec    ecx
  41804b:	test   eax,0x3303ba55
  418050:	nop
  418051:	push   ebp
  418052:	xor    ah,BYTE PTR [edx]
  418054:	sub    al,0xcf
  418056:	aam    0x4d
  418058:	(bad)  
  418059:	(bad)  
  41805c:	test   eax,0xc3c69e37
  418061:	jle    0x4180c8
  418063:	add    DWORD PTR [esi+0xc],ebx
  418066:	pop    ecx
  418067:	dec    ecx
  418068:	inc    edi
  418069:	jbe    0x418041
  41806b:	xchg   esi,eax
  41806c:	cmp    edx,edx
  41806e:	ins    BYTE PTR es:[edi],dx
  41806f:	lods   eax,DWORD PTR ds:[esi]
  418070:	(bad)  
  418071:	(bad)  
  418072:	out    dx,al
  418073:	rol    BYTE PTR [edi-0x772b8ac6],1
  418079:	cmp    esp,esi
  41807b:	iret   
  41807c:	outs   dx,BYTE PTR ds:[esi]
  41807d:	les    ebp,FWORD PTR [ebp-0x21b91d0f]
  418083:	xor    dh,BYTE PTR [edi+0x62f3f03f]
  418089:	repnz sub cl,BYTE PTR [edi-0x7e]
  41808d:	test   eax,0x950e9167
  418092:	inc    ebp
  418093:	daa    
  418094:	dec    eax
  418095:	push   esp
  418096:	(bad)  
  418097:	daa    
  418098:	xor    BYTE PTR ds:0x84f21853,dl
  41809e:	mov    ds:0x76ac541a,eax
  4180a3:	pop    es
  4180a4:	add    eax,0x627d67d2
  4180a9:	fist   WORD PTR [esi]
  4180ab:	lahf   
  4180ac:	jp     0x418057
  4180ae:	mov    ?,WORD PTR [edx-0x2f]
  4180b1:	(bad)  
  4180b3:	add    DWORD PTR [eax],edi
  4180b5:	push   ds
  4180b6:	scas   eax,DWORD PTR es:[edi]
  4180b7:	jmp    0x4180aa
  4180b9:	mov    edi,0x55f31012
  4180be:	dec    eax
  4180bf:	xchg   edi,eax
  4180c0:	mov    edi,cs
  4180c2:	daa    
  4180c3:	xor    ebx,DWORD PTR [esi]
  4180c5:	mov    gs,WORD PTR [edi-0x1bb8ecf6]
  4180cb:	ins    BYTE PTR es:[edi],dx
  4180cc:	loop   0x418075
  4180ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180cf:	xor    esi,ebp
  4180d1:	sar    ch,cl
  4180d3:	out    dx,al
  4180d4:	sub    DWORD PTR [esi+0x34702e60],ebx
  4180da:	jmp    0xbe59:0xc9cd46e4
  4180e1:	xchg   esp,eax
  4180e2:	(bad)  [eax-0x40]
  4180e5:	mov    esi,0x5b7b3b81
  4180ea:	es ss mov ecx,0xf2f1845a
  4180f1:	arpl   WORD PTR [esi+0x77b1318c],di
  4180f7:	sbb    ah,ch
  4180f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fa:	xchg   dh,dh
  4180fc:	outs   dx,BYTE PTR ds:[esi]
  4180fd:	scas   eax,DWORD PTR es:[edi]
  4180fe:	mov    ch,0x6a
  418100:	xchg   edx,eax
  418101:	cmp    ch,BYTE PTR [ecx+ebx*8]
  418104:	fcomi  st,st(0)
  418106:	mov    esp,0xe30835ce
  41810b:	stos   BYTE PTR es:[edi],al
  41810c:	xchg   ebp,ebp
  41810e:	xor    bh,BYTE PTR [ebx-0x28]
  418111:	jnp    0x418153
  418113:	xor    ebx,DWORD PTR es:[esi-0x387657c2]
  41811a:	aam    0xf
  41811c:	lods   al,BYTE PTR ds:[esi]
  41811d:	pop    edx
  41811e:	cmp    al,0xde
  418120:	inc    ebx
  418121:	shr    BYTE PTR [esi],1
  418123:	popf   
  418124:	xchg   esi,esi
  418126:	lods   al,BYTE PTR ds:[esi]
  418127:	mov    ds:0xb97c748a,al
  41812c:	pushw  cs
  41812e:	mov    DWORD PTR [esi],edx
  418130:	jl     0x4180b6
  418132:	jmp    0x7e86:0xcbca22bd
  418139:	imul   esp,DWORD PTR [eax-0x4f],0x22
  41813d:	and    al,BYTE PTR [ecx-0x70]
  418140:	mov    bl,0xa2
  418142:	inc    esi
  418143:	mov    al,ds:0x1a314116
  418148:	addr16 ds aaa 
  41814b:	push   ebx
  41814c:	adc    esi,DWORD PTR ss:[eax+edi*1-0x52584820]
  418154:	(bad)  
  418156:	xor    al,0x8d
  418158:	add    eax,0xfa964d98
  41815d:	jp     0x41815a
  41815f:	dec    ecx
  418160:	ins    BYTE PTR es:[edi],dx
  418161:	pop    ss
  418162:	into   
  418163:	ret    
  418164:	cdq    
  418165:	or     bl,BYTE PTR [edi+0x63c76874]
  41816b:	inc    eax
  41816c:	jle    0x41816d
  41816e:	push   esp
  41816f:	in     al,dx
  418170:	outs   dx,BYTE PTR ds:[esi]
  418171:	daa    
  418172:	loope  0x418114
  418174:	js     0x418121
  418176:	inc    edi
  418177:	and    BYTE PTR [ebx-0x63],0xc7
  41817b:	pop    ebp
  41817c:	fsub   QWORD PTR [edx+esi*2]
  41817f:	xor    DWORD PTR [edx-0x44],eax
  418182:	ja     0x418105
  418184:	inc    esp
  418185:	cwde   
  418186:	into   
  418187:	imul   ebx,ebx,0xffffffa6
  41818a:	jge    0x418197
  41818c:	hlt    
  41818d:	inc    ebx
  41818e:	fwait
  41818f:	xor    al,BYTE PTR gs:[edx]
  418192:	xor    eax,0xb425fe78
  418197:	ret    
  418198:	xlat   BYTE PTR ds:[ebx]
  418199:	cmp    cl,BYTE PTR ds:0x738625b4
  41819f:	aas    
  4181a0:	cmp    bl,BYTE PTR [esp+eax*8-0xd6363f8]
  4181a7:	push   ds
  4181a8:	inc    esp
  4181a9:	fidivr DWORD PTR ds:0xfdfdd510
  4181af:	ret    
  4181b0:	cmp    DWORD PTR [edx+0x34],edi
  4181b3:	sbb    BYTE PTR [ebx+edi*2-0x1d],bl
  4181b7:	dec    ecx
  4181b8:	fdiv   QWORD PTR [ecx]
  4181ba:	fnsave [ebx]
  4181bc:	jmp    0x418189
  4181be:	add    BYTE PTR [edx],dl
  4181c0:	and    al,0x8
  4181c2:	add    BYTE PTR cs:[edx],cl
  4181c5:	bswap  ebx
  4181c7:	xor    BYTE PTR [esi+0x46af959a],bl
  4181cd:	fucomip st,st(0)
  4181cf:	sub    eax,esp
  4181d1:	mov    al,ds:0x73987530
  4181d6:	cmp    dl,ch
  4181d8:	jno    0x41823b
  4181da:	outs   dx,BYTE PTR ds:[esi]
  4181db:	jl     0x418164
  4181dd:	xchg   ebp,eax
  4181de:	dec    ecx
  4181df:	xchg   DWORD PTR [edi-0x7cd17d0f],edx
  4181e5:	enter  0xa9a2,0x94
  4181e9:	mov    edx,0xb4af450d
  4181ee:	into   
  4181ef:	idiv   DWORD PTR [ebx]
  4181f1:	jno    0x4181c2
  4181f3:	call   0xd8ddee43
  4181f8:	mov    cl,0x3e
  4181fa:	aas    
  4181fb:	cs gs ret 
  4181fe:	fdivr  st,st(2)
  418200:	bound  eax,QWORD PTR [esi+0x77]
  418203:	out    dx,eax
  418204:	sbb    dh,dh
  418206:	(bad)  
  418207:	mov    bl,BYTE PTR [esp+edx*4+0x54]
  41820b:	aas    
  41820c:	and    eax,0xa7a432ef
  418211:	push   eax
  418212:	sar    ebx,1
  418214:	xor    BYTE PTR [ebx-0x48],dh
  418217:	ror    BYTE PTR ds:0xa51d2837,cl
  41821d:	scas   al,BYTE PTR es:[edi]
  41821e:	inc    edx
  41821f:	xor    DWORD PTR [ebx],0xffffffa6
  418222:	sahf   
  418223:	or     edx,ebx
  418225:	mov    dl,0x66
  418227:	std    
  418228:	dec    edx
  418229:	jecxz  0x418280
  41822b:	xchg   ecx,eax
  41822c:	jl     0x418211
  41822e:	jb     0x41821b
  418230:	pusha  
  418231:	sbb    BYTE PTR [ebx+0x5e86400e],dh
  418237:	pop    ecx
  418238:	es int 0x21
  41823b:	mov    ebp,ebp
  41823d:	jmp    0x13f2:0x53bce489
  418244:	sub    esi,eax
  418246:	adc    BYTE PTR [edi],cl
  418248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418249:	or     al,0x85
  41824b:	add    dl,BYTE PTR [ecx-0x60]
  41824e:	xor    bh,BYTE PTR [edi-0x6469fbf1]
  418254:	inc    ebp
  418255:	mov    al,ds:0x470e30eb
  41825a:	pop    edx
  41825b:	pop    ebp
  41825c:	adc    DWORD PTR ds:0xcde6c9f8,edi
  418262:	sbb    DWORD PTR [ecx],edi
  418264:	add    eax,0x900367e2
  418269:	jnp    0x4182d3
  41826b:	sbb    eax,0x7c046a
  418270:	lods   al,BYTE PTR ds:[esi]
  418271:	adc    ebx,DWORD PTR [edi-0x7]
  418274:	fdivrp st(5),st
  418276:	out    dx,al
  418277:	mov    ds:0x9c55e7b9,eax
  41827c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827d:	jb     0x4182f2
  41827f:	mov    bh,0x9
  418281:	add    DWORD PTR [ecx-0x15c4f461],0x17f2c1a7
  41828b:	in     al,dx
  41828c:	pop    esi
  41828d:	jmp    0xb14a79cd
  418292:	in     al,0x12
  418294:	jns    0x41822e
  418296:	repz jmp 0x4182a5
  418299:	mov    esi,0x5c140814
  41829e:	popf   
  41829f:	popa   
  4182a0:	and    eax,0x6b72bd1f
  4182a5:	ja     0x418279
  4182a7:	dec    edi
  4182a8:	fwait
  4182a9:	and    DWORD PTR [esi+0x58c2c67b],edi
  4182af:	dec    edx
  4182b0:	add    eax,0xb6a6a7e9
  4182b5:	adc    ebp,DWORD PTR [ecx+eax*2]
  4182b8:	xor    DWORD PTR [edi-0x7a],ebp
  4182bb:	or     eax,0x8734d771
  4182c0:	iret   
  4182c1:	call   0xf5bc:0x49f01633
  4182c8:	sahf   
  4182c9:	iret   
  4182ca:	fwait
  4182cb:	jecxz  0x41832e
  4182cd:	add    eax,0x6cf4d20
  4182d2:	adc    DWORD PTR [edi-0x46],0xf27c8cef
  4182d9:	ja     0x4182f1
  4182db:	and    cl,BYTE PTR [ecx]
  4182dd:	sub    al,0x9b
  4182df:	div    ebx
  4182e1:	pop    edi
  4182e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e3:	and    bh,BYTE PTR [esi+0x8]
  4182e6:	push   esi
  4182e7:	dec    edi
  4182e8:	ins    BYTE PTR es:[edi],dx
  4182e9:	scas   eax,DWORD PTR es:[edi]
  4182ea:	shr    BYTE PTR [esi],cl
  4182ec:	sbb    esp,0xffffffa6
  4182ef:	lock dec edi
  4182f1:	repnz mov bl,BYTE PTR [eax+0x56]
  4182f5:	mov    dh,0x13
  4182f7:	pop    ss
  4182f8:	(bad)  
  4182f9:	nop
  4182fa:	int    0xfe
  4182fc:	ret    
  4182fd:	sbb    eax,0xd2d99af6
  418302:	or     esp,ecx
  418304:	or     al,0xcb
  418306:	(bad)  
  418307:	fisttp QWORD PTR [eax-0x24]
  41830a:	push   ebx
  41830b:	adc    DWORD PTR [edx-0x15],0xffffffd5
  41830f:	shr    BYTE PTR [edx+0xc8e34e],1
  418315:	sti    
  418316:	shl    esi,cl
  418318:	fst    st(4)
  41831a:	mov    edi,0xb816e9ba
  41831f:	xchg   ecx,eax
  418320:	test   al,0x2
  418322:	add    BYTE PTR [ecx-0x7e7e578],bh
  418328:	scas   eax,DWORD PTR es:[edi]
  418329:	popf   
  41832a:	mov    edi,0x13416f6d
  41832f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418330:	push   DWORD PTR [esi]
  418332:	push   es
  418333:	jecxz  0x418338
  418335:	sub    al,0x5d
  418337:	sub    ebp,DWORD PTR [ebp-0x1ea11e6c]
  41833d:	sub    edi,0x2a7efffd
  418343:	out    dx,al
  418344:	loope  0x4183ab
  418346:	sub    DWORD PTR [ecx-0x6e78cb1e],ecx
  41834c:	push   ecx
  41834d:	fidiv  DWORD PTR [edx-0x27ee0269]
  418353:	adc    ecx,DWORD PTR [eax+0x39a52508]
  418359:	jb     0x418397
  41835b:	in     eax,dx
  41835c:	aam    0xb9
  41835e:	pusha  
  41835f:	and    BYTE PTR [edi+edi*4+0x7443a08b],ch
  418366:	dec    edi
  418367:	add    DWORD PTR [edx-0x43cb49b1],0x5a5cf058
  418371:	cld    
  418372:	and    dh,dh
  418374:	ror    esi,1
  418376:	cmp    cl,0x6d
  418379:	test   al,0x72
  41837b:	ja     0x4183b2
  41837d:	imul   ebp,DWORD PTR [ecx+eax*2+0x32],0xffffffba
  418382:	outs   dx,DWORD PTR ds:[esi]
  418383:	xlat   BYTE PTR ds:[ebx]
  418384:	push   edx
  418385:	test   eax,0xde3a22ac
  41838a:	clc    
  41838b:	xlat   BYTE PTR ds:[ebx]
  41838c:	es mov eax,0x7b8fa076
  418392:	sub    BYTE PTR [ebp-0x3],0xfc
  418396:	add    al,0x43
  418398:	paddd  mm4,QWORD PTR [ebx-0x3a]
  41839c:	sub    al,0xf3
  41839e:	aas    
  41839f:	sbb    al,0x54
  4183a1:	sbb    esp,DWORD PTR [ebx+0x4e]
  4183a4:	(bad)  
  4183a5:	je     0x418384
  4183a7:	icebp  
  4183a8:	hlt    
  4183a9:	adc    ebx,DWORD PTR [esi+0x25]
  4183ac:	jno    0x418330
  4183ae:	dec    esp
  4183af:	mov    ch,bl
  4183b1:	test   BYTE PTR [edx],dh
  4183b3:	popa   
  4183b4:	mov    al,0x3a
  4183b6:	xor    BYTE PTR [edi+0x4dd44cde],bh
  4183bc:	jno    0x4183c8
  4183be:	icebp  
  4183bf:	dec    edx
  4183c0:	leave  
  4183c1:	cmp    eax,DWORD PTR [edx]
  4183c3:	xchg   edx,eax
  4183c4:	or     al,BYTE PTR [eax+edx*1]
  4183c7:	rcr    BYTE PTR [ebx-0x14270f2a],0xb
  4183ce:	adc    bh,BYTE PTR [edi-0x47c19405]
  4183d4:	add    DWORD PTR [ebp-0x63],ebp
  4183d7:	ror    DWORD PTR [ebp-0x3d730352],1
  4183dd:	adc    DWORD PTR [edx+0x64],esp
  4183e0:	sub    BYTE PTR [edi-0x604d7e14],bh
  4183e6:	popa   
  4183e7:	push   edi
  4183e8:	pushf  
  4183e9:	(bad)  
  4183ea:	mov    eax,0x18f06a39
  4183ef:	data16 mov ch,0x8f
  4183f2:	adc    BYTE PTR [esi+eax*4+0x30c68508],cl
  4183f9:	cmc    
  4183fa:	adc    BYTE PTR [esi+0x75],ah
  4183fd:	add    cl,ah
  4183ff:	out    dx,al
  418400:	adc    al,0x89
  418402:	fimul  DWORD PTR [esi-0x64]
  418405:	pop    ds
  418406:	mov    ch,0xb0
  418408:	dec    edi
  418409:	push   ebp
  41840a:	sar    BYTE PTR [ebp+0x7b398c49],1
  418410:	loope  0x4183c8
  418412:	fmul   st,st(1)
  418414:	jmp    0xfa2c:0xcbea569c
  41841b:	mov    ebp,0xc82db311
  418420:	test   eax,0x22e30990
  418425:	pop    edx
  418426:	add    ah,dh
  418428:	bound  esp,QWORD PTR [edx+0xa4d02bd]
  41842e:	push   es
  41842f:	sub    BYTE PTR [ebx-0x7a014e2a],0x33
  418436:	mov    edi,0x31174681
  41843b:	cmp    DWORD PTR [ecx+0x68942e93],ebx
  418441:	mov    dh,0xc5
  418443:	repz mov ch,bh
  418446:	mov    esi,0xdd2d993d
  41844b:	pusha  
  41844c:	fnstsw WORD PTR [esi]
  41844e:	cmp    esi,DWORD PTR [ebx+0x60]
  418451:	inc    ebp
  418452:	dec    eax
  418453:	inc    ebp
  418454:	mov    al,ds:0x58a7e59c
  418459:	jno    0x41846a
  41845b:	xchg   ebx,eax
  41845c:	popa   
  41845d:	shl    DWORD PTR [edx-0x434f1576],cl
  418463:	rcr    ebx,1
  418465:	push   ebp
  418466:	ret    0xd743
  418469:	push   esp
  41846a:	sbb    bh,0xe6
  41846d:	dec    edx
  41846e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41846f:	repnz fidivr WORD PTR [ecx+eax*4+0xa]
  418474:	out    dx,al
  418475:	dec    edx
  418476:	gs add eax,0x259677f0
  41847c:	popf   
  41847d:	std    
  41847e:	mov    dh,0xef
  418480:	xchg   edi,eax
  418481:	call   0x139f4939
  418486:	je     0x418411
  418488:	or     eax,0x536c9a2e
  41848d:	pop    ss
  41848e:	loope  0x4184e0
  418490:	add    eax,0xecba7fb2
  418495:	adc    BYTE PTR [ecx],0x2d
  418498:	mov    al,0xaf
  41849a:	addr16 aad 0x18
  41849d:	fbstp  TBYTE PTR [ecx-0x1258dd05]
  4184a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a4:	inc    ebp
  4184a5:	sbb    dl,BYTE PTR [ecx-0x59af07d4]
  4184ab:	jmp    0x4047fd02
  4184b0:	fwait
  4184b1:	pop    edx
  4184b2:	(bad)  
  4184b3:	sub    al,0xf6
  4184b5:	jae    0x4184cf
  4184b7:	out    dx,al
  4184b8:	mov    DWORD PTR [eax+0x4aac00cf],0xd1898654
  4184c2:	push   edi
  4184c3:	xchg   ecx,eax
  4184c4:	pop    ss
  4184c5:	sub    BYTE PTR [ebx-0x7b2f207c],dl
  4184cb:	or     DWORD PTR [ecx+0xb57765a],esp
  4184d1:	mov    ch,0x54
  4184d3:	loop   0x418503
  4184d5:	loop   0x418488
  4184d7:	dec    ebp
  4184d8:	retf   0x9ad6
  4184db:	pop    edi
  4184dc:	jge    0x4184db
  4184de:	adc    al,0x81
  4184e0:	sub    ebp,DWORD PTR [ecx-0x54]
  4184e3:	xchg   ebx,eax
  4184e4:	fadd   QWORD PTR [ebp-0x7b]
  4184e7:	int3   
  4184e8:	xor    al,0x95
  4184ea:	or     ah,BYTE PTR [ebx]
  4184ec:	and    DWORD PTR [ebp+0x4b],0xba7eb38c
  4184f3:	jae    0x4184ee
  4184f5:	arpl   WORD PTR [edi+0x78],bx
  4184f8:	aaa    
  4184f9:	test   BYTE PTR [eax-0x44],bl
  4184fc:	inc    eax
  4184fd:	push   ecx
  4184fe:	lods   al,BYTE PTR ds:[esi]
  4184ff:	dec    esi
  418500:	jno    0x418492
  418502:	ins    DWORD PTR es:[edi],dx
  418503:	enter  0xa0a,0xba
  418507:	and    al,BYTE PTR [eax]
  418509:	outs   dx,DWORD PTR ds:[esi]
  41850a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850b:	test   eax,0xa696a193
  418510:	iret   
  418511:	leave  
  418512:	or     eax,0x5c7b9dbc
  418517:	js     0x418542
  418519:	mov    BYTE PTR [eax],ah
  41851b:	sub    DWORD PTR [ebx-0x1f],ebx
  41851e:	mov    edx,0xedda0d62
  418523:	pop    ecx
  418524:	bound  ecx,QWORD PTR [ebp+edx*8+0x68]
  418528:	outs   dx,BYTE PTR ds:[esi]
  418529:	inc    eax
  41852a:	loope  0x41858e
  41852c:	daa    
  41852d:	pop    ebx
  41852e:	lods   eax,DWORD PTR ds:[esi]
  41852f:	mov    ebp,0xd66dac2
  418534:	jae    0x418530
  418536:	pop    ss
  418537:	push   ecx
  418538:	jns    0x418599
  41853a:	popa   
  41853b:	cmp    dh,BYTE PTR [esi+0x3aa1f206]
  418541:	and    DWORD PTR [eax],0x9bae7216
  418547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418548:	icebp  
  418549:	add    edx,DWORD PTR [ecx-0x33]
  41854c:	rol    BYTE PTR [edi+0x3a375c4e],cl
  418552:	lods   al,BYTE PTR ds:[esi]
  418553:	retf   0xe1c1
  418556:	mov    edi,0x8fd0e78e
  41855b:	pop    eax
  41855c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41855d:	stos   BYTE PTR es:[edi],al
  41855e:	sub    al,0xa6
  418560:	data16 ins BYTE PTR es:[edi],dx
  418562:	(bad)  
  418563:	bound  esp,QWORD PTR [eax+esi*4+0x1f00dee4]
  41856a:	add    DWORD PTR [ebx-0x1],ecx
  41856d:	icebp  
  41856e:	xor    edx,DWORD PTR [edi-0x30]
  418571:	pop    esp
  418572:	push   0xffffffec
  418574:	adc    al,0x5c
  418576:	enter  0xc7b3,0x7
  41857a:	adc    ebp,DWORD PTR [edi+0x55]
  41857d:	add    DWORD PTR [eax],ecx
  41857f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418580:	adc    bh,BYTE PTR [edi-0x64bc343d]
  418586:	addr16 (bad) 
  418588:	mov    ecx,0xecb08813
  41858d:	push   ebp
  41858e:	vpsadbw xmm7,xmm6,XMMWORD PTR [ebx-0x13]
  418593:	ins    DWORD PTR es:[edi],dx
  418594:	repz call 0x1011:0x42b7ae87
  41859c:	stos   BYTE PTR es:[edi],al
  41859d:	mov    BYTE PTR [eiz*4-0x51d2eeed],dh
  4185a4:	(bad)  
  4185a5:	and    al,0xff
  4185a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a8:	push   0x1a678489
  4185ad:	arpl   WORD PTR [ebx],ax
  4185af:	inc    esp
  4185b0:	pop    ebp
  4185b1:	fnstenv [ebp+0x5d53febf]
  4185b7:	mov    cl,0xec
  4185b9:	rcr    DWORD PTR [edx-0x3d],1
  4185bc:	mov    dh,BYTE PTR [edx]
  4185be:	jmp    0x9591a0bb
  4185c3:	and    DWORD PTR [ecx+0x7c3f0599],ebp
  4185c9:	xor    BYTE PTR [eax],0x4a
  4185cc:	mov    edi,DWORD PTR [edi]
  4185ce:	pusha  
  4185cf:	and    eax,0x552e83b5
  4185d4:	xor    edx,DWORD PTR [edi-0x3b]
  4185d7:	aam    0x1d
  4185d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185da:	in     eax,dx
  4185db:	xor    al,dh
  4185dd:	lods   al,BYTE PTR ds:[esi]
  4185de:	xchg   esi,eax
  4185df:	inc    eax
  4185e0:	ret    
  4185e1:	add    BYTE PTR [edx-0x16],0xa8
  4185e5:	test   BYTE PTR [ecx+0x27],al
  4185e8:	dec    esp
  4185e9:	cmp    BYTE PTR [edx],ch
  4185eb:	mov    ch,0xe3
  4185ed:	adc    ebp,eax
  4185ef:	imul   esi,eax,0xe5b4820a
  4185f5:	xchg   edi,eax
  4185f6:	sar    BYTE PTR [edx],0xa3
  4185f9:	adc    esi,DWORD PTR [edi+0x4c0b3fa9]
  4185ff:	and    edx,DWORD PTR [ecx+0x22]
  418602:	pop    ecx
  418603:	add    eax,0xdb10c2ef
  418608:	mov    bl,0x67
  41860a:	cmp    BYTE PTR [edx],bh
  41860c:	ins    DWORD PTR es:[edi],dx
  41860d:	lods   eax,DWORD PTR ds:[esi]
  41860e:	fwait
  41860f:	sub    edi,DWORD PTR [edx-0x46]
  418612:	pop    es
  418613:	out    dx,eax
  418614:	ret    
  418615:	mov    edx,0x12450a5b
  41861a:	fild   QWORD PTR [ebx-0x236e20a]
  418620:	push   eax
  418621:	cs xchg ecx,eax
  418623:	push   esp
  418624:	mov    cl,0x7a
  418626:	(bad)  
  418627:	leave  
  418628:	sub    eax,0x5682c116
  41862d:	or     bh,bh
  41862f:	and    eax,edx
  418631:	sbb    BYTE PTR gs:[edi-0x5ddf45f0],dl
  418638:	(bad)  
  418639:	pop    ebp
  41863a:	ds sbb edi,esp
  41863d:	rol    esp,cl
  41863f:	add    eax,0x6af638db
  418644:	leave  
  418645:	(bad)  
  418646:	movsx  esp,WORD PTR [eax+0xb391da4]
  41864d:	(bad)  
  41864e:	ins    DWORD PTR es:[edi],dx
  41864f:	push   es
  418650:	retf   0x2239
  418653:	push   ss
  418654:	mov    ebp,0xbf354d86
  418659:	repz adc BYTE PTR [ebx],0x8d
  41865d:	push   ds
  41865e:	dec    ecx
  41865f:	sbb    eax,edi
  418661:	mov    gs,esi
  418663:	sbb    DWORD PTR [edx],esi
  418665:	xor    al,BYTE PTR [ecx+0x2e]
  418668:	aad    0xec
  41866a:	mov    al,0x3b
  41866c:	aam    0xda
  41866e:	fisubr DWORD PTR [esi+0x19d6c8d4]
  418674:	stc    
  418675:	retf   0xc858
  418678:	add    DWORD PTR [eax],esi
  41867a:	lock repnz test DWORD PTR [esi+0x3f],edx
  41867f:	mov    ds:0x1cc0aa6f,eax
  418684:	aaa    
  418685:	fadd   DWORD PTR fs:[esi]
  418688:	nop
  418689:	out    dx,al
  41868a:	pop    ss
  41868b:	jl     0x4186ee
  41868d:	pop    es
  41868e:	jns    0x4186fc
  418690:	jnp    0x41866d
  418692:	adc    ebx,edx
  418694:	scas   al,BYTE PTR es:[edi]
  418695:	fdiv   DWORD PTR [esp+edi*2+0x1a]
  418699:	or     DWORD PTR [edx+0x14a5ed70],0xf
  4186a0:	stos   BYTE PTR es:[edi],al
  4186a1:	ins    DWORD PTR es:[edi],dx
  4186a2:	sbb    BYTE PTR ds:0xe687643d,al
  4186a8:	(bad)  [ecx+0x7f58f8c2]
  4186ae:	adc    eax,0x75b73c39
  4186b3:	jne    0x418710
  4186b5:	mov    bh,0x7c
  4186b7:	jbe    0x418661
  4186b9:	rcl    BYTE PTR [ebp+0xd],1
  4186bc:	fisub  DWORD PTR [ecx+0x1e]
  4186bf:	push   cs
  4186c0:	and    edx,DWORD PTR [edx]
  4186c2:	add    DWORD PTR [edx+0x6d6c2695],edi
  4186c8:	jge    0x41869a
  4186ca:	and    BYTE PTR [ecx+0x20],dl
  4186cd:	jp     0x4186ef
  4186cf:	mov    ebx,0x1a3a478f
  4186d4:	or     al,0x18
  4186d6:	push   cs
  4186d7:	xor    al,0x97
  4186d9:	xchg   edx,eax
  4186da:	pop    ds
  4186db:	mov    ah,0x92
  4186dd:	(bad)  
  4186de:	xor    al,0x83
  4186e0:	nop
  4186e1:	pop    edi
  4186e2:	int    0x43
  4186e4:	pop    esi
  4186e5:	retf   0xf88d
  4186e8:	mov    bl,0x91
  4186ea:	pop    edi
  4186eb:	dec    ebx
  4186ec:	(bad)  
  4186ed:	dec    ebx
  4186ee:	jne    0x418744
  4186f0:	push   esp
  4186f1:	mov    ch,0x69
  4186f3:	in     al,0x0
  4186f5:	dec    ecx
  4186f6:	cs pushf 
  4186f8:	pop    ds
  4186f9:	xchg   ecx,eax
  4186fa:	out    0xb2,eax
  4186fc:	leave  
  4186fd:	pushf  
  4186fe:	dec    ebx
  4186ff:	cmp    al,0xa1
  418701:	mov    ?,WORD PTR [ebp+0x207badbb]
  418707:	and    DWORD PTR [ebx],esi
  418709:	ror    BYTE PTR [ebp+0x72e01a94],1
  41870f:	xor    al,BYTE PTR [eax]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	mov    bh,0x64
  4187e3:	sub    eax,0x7934eb2f
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	outs   dx,BYTE PTR ds:[esi]
  4187ee:	adc    edx,eax
  4187f0:	in     al,dx
  4187f1:	jmp    0x4aaf5728
  4187f6:	sub    BYTE PTR [edx-0x13],0xde
  4187fa:	int3   
  4187fb:	jle    0x41878e
  4187fd:	je     0x418866
  4187ff:	mov    edx,0x31db8f50
  418804:	add    BYTE PTR [esi+0x6a230331],0xab
  41880b:	jmp    0x4383:0x2174be80
  418812:	fwait
  418813:	mov    DWORD PTR [esi-0x53],0xcf736216
  41881a:	out    0xad,eax
  41881c:	xchg   ebp,eax
  41881d:	neg    DWORD PTR [ecx-0x42]
  418820:	std    
  418821:	or     al,0x2b
  418823:	mov    ds:0x215dcb1e,al
  418828:	pop    ds
  418829:	mov    ecx,0xd619e442
  41882e:	or     eax,0xe745d347
  418833:	(bad)  
  418834:	(bad)  [edx-0x565b90e8]
  41883a:	pop    es
  41883b:	jmp    FWORD PTR [edi+ebx*2+0x3a]
  41883f:	ret    0xaab5
  418842:	lods   eax,DWORD PTR ds:[esi]
  418843:	jp     0x418867
  418845:	jns    0x418815
  418847:	inc    ecx
  418848:	lahf   
  418849:	pop    ebx
  41884a:	icebp  
  41884b:	sar    DWORD PTR [edx-0x4b],0xaa
  41884f:	jg     0x418802
  418851:	xchg   ebx,eax
  418852:	pusha  
  418853:	dec    esi
  418854:	adc    al,0x85
  418856:	and    DWORD PTR [ecx-0x58ee3425],esi
  41885c:	mov    eax,ds:0x45b6529e
  418861:	ss dec esi
  418863:	lahf   
  418864:	push   edi
  418865:	in     eax,dx
  418866:	push   ds
  418867:	fs push cs
  418869:	mov    bl,0x52
  41886b:	push   eax
  41886c:	xchg   edx,eax
  41886d:	push   esi
  41886e:	daa    
  41886f:	pop    esi
  418870:	inc    ebx
  418871:	sbb    BYTE PTR [ebp-0xc66dcf6],0x3f
  418878:	in     al,dx
  418879:	sub    ecx,ebp
  41887b:	popa   
  41887c:	jle    0x41889f
  41887e:	test   al,0xb6
  418880:	punpcklbw mm3,DWORD PTR [edx]
  418883:	je     0x4188b8
  418885:	fnstenv [edi+0xad4d929]
  41888b:	retf   0x7634
  41888e:	idiv   BYTE PTR [edx+0x2e0fb25c]
  418894:	push   edi
  418895:	mov    ebx,0x47cb27be
  41889a:	lds    ebp,FWORD PTR [ecx-0x6b883f87]
  4188a0:	jl     0x418830
  4188a2:	push   cs
  4188a3:	in     eax,0xdf
  4188a5:	inc    esi
  4188a6:	or     dl,BYTE PTR [ecx+0x13072925]
  4188ac:	dec    ecx
  4188ad:	push   ebx
  4188ae:	cmp    dl,dl
  4188b0:	out    dx,al
  4188b1:	and    esp,ecx
  4188b3:	dec    ebp
  4188b4:	fisttp DWORD PTR [esi-0x50]
  4188b7:	xor    ch,BYTE PTR [ebp-0x70]
  4188ba:	and    esp,DWORD PTR [ecx]
  4188bc:	mov    al,BYTE PTR [ecx]
  4188be:	in     eax,0xe3
  4188c0:	mov    ecx,0x220018ac
  4188c5:	cmp    bl,ah
  4188c7:	enter  0x86a2,0x4f
  4188cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188cc:	or     BYTE PTR [esi+eax*4],0x8f
  4188d0:	push   ebx
  4188d1:	aas    
  4188d2:	jl     0x41893a
  4188d4:	sub    edx,edi
  4188d6:	jle    0x4188dd
  4188d8:	loop   0x418929
  4188da:	sti    
  4188db:	test   esp,esp
  4188dd:	sbb    DWORD PTR [ecx-0x7e],esp
  4188e0:	adc    bl,BYTE PTR [eax-0x1a]
  4188e3:	(bad)  
  4188e4:	leave  
  4188e5:	jecxz  0x4188e7
  4188e7:	push   eax
  4188e8:	clc    
  4188e9:	shr    DWORD PTR [esp+edi*2+0x1580e66a],0xe6
  4188f1:	mov    al,0x10
  4188f3:	mov    ebp,0x31306918
  4188f8:	mov    ecx,0xd3468160
  4188fd:	xchg   ebp,eax
  4188fe:	outs   dx,DWORD PTR ds:[esi]
  4188ff:	adc    esi,0xffffffaf
  418902:	dec    eax
  418903:	ins    DWORD PTR es:[edi],dx
  418904:	dec    edi
  418905:	(bad)  
  418906:	push   cs
  418907:	int3   
  418908:	sub    BYTE PTR [eax+0x21],0xb0
  41890c:	mov    bl,0x11
  41890e:	push   es
  41890f:	xchg   ecx,eax
  418910:	rol    BYTE PTR [ebx-0x18],0x6
  418914:	xor    DWORD PTR [edi],0x7044428d
  41891a:	dec    ebx
  41891b:	out    0x5d,eax
  41891d:	jp     0x418944
  41891f:	push   ss
  418920:	popa   
  418921:	push   eax
  418922:	and    eax,0x90db56ca
  418927:	sub    DWORD PTR [eax-0x281cfece],edi
  41892d:	rcl    DWORD PTR [ebp+0x39e78912],1
  418933:	mov    BYTE PTR [ebx+0x3a],dl
  418936:	jmp    0x97c8:0x3057bca
  41893d:	xchg   esi,eax
  41893e:	in     eax,dx
  41893f:	nop
  418940:	inc    ecx
  418941:	int    0xa1
  418943:	ret    
  418944:	js     0x4189c4
  418946:	and    BYTE PTR [edx],bh
  418948:	enter  0x79e4,0x1
  41894c:	mov    bl,BYTE PTR [ecx+0x4c]
  41894f:	cdq    
  418950:	mov    ebx,0x3953094
  418955:	and    eax,0xdc362f0f
  41895a:	jmp    0x250f:0xdfab01e2
  418961:	jecxz  0x418965
  418963:	ret    
  418964:	sar    BYTE PTR [ecx],1
  418966:	iret   
  418967:	pop    edi
  418968:	stos   DWORD PTR es:[edi],eax
  418969:	test   al,0x3b
  41896b:	cwde   
  41896c:	add    ecx,ecx
  41896e:	mov    ecx,0xb3cafdf4
  418973:	rol    BYTE PTR [esi],1
  418975:	add    al,0xde
  418977:	mov    esp,0x8ff2d575
  41897c:	inc    esp
  41897d:	mov    eax,0x3ff69e63
  418982:	loope  0x41893e
  418984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418985:	or     al,0x3a
  418987:	inc    ebx
  418988:	bound  esi,QWORD PTR [edi-0x40]
  41898b:	mov    dl,0x3e
  41898d:	(bad)  
  41898e:	mov    bh,BYTE PTR [edi-0x7c385c13]
  418994:	mov    bl,0xc1
  418996:	pop    es
  418997:	add    ecx,DWORD PTR ds:0x31aaf32d
  41899d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41899e:	repnz retf 
  4189a0:	iret   
  4189a1:	cmp    bh,BYTE PTR [esi+0x2d]
  4189a4:	add    esi,DWORD PTR [edx-0x58600a6d]
  4189aa:	cwde   
  4189ab:	sahf   
  4189ac:	sub    dh,ah
  4189ae:	sbb    esp,edx
  4189b0:	or     edi,0xffffffdc
  4189b3:	daa    
  4189b4:	sbb    al,0x7c
  4189b6:	pop    ds
  4189b7:	outs   dx,BYTE PTR ds:[esi]
  4189b8:	jl     0x41896a
  4189ba:	call   0xba3e4fd
  4189bf:	add    cl,BYTE PTR fs:[ecx+0x20]
  4189c3:	jo     0x418973
  4189c5:	popf   
  4189c6:	jecxz  0x418a12
  4189c8:	test   al,0x96
  4189ca:	lds    ecx,FWORD PTR [ebx+0x534e4e95]
  4189d0:	adc    al,BYTE PTR [eax]
  4189d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189d3:	not    DWORD PTR [eax+0x24]
  4189d6:	pop    ss
  4189d7:	(bad)  
  4189d8:	retf   0x1ea3
  4189db:	add    al,0xab
  4189dd:	repnz mov al,0xab
  4189e0:	fwait
  4189e1:	adc    BYTE PTR [ebx],cl
  4189e3:	xor    DWORD PTR [esi-0x24],edx
  4189e6:	or     dl,BYTE PTR [eax+0x63]
  4189e9:	mov    edx,0x3896d956
  4189ee:	inc    ebp
  4189ef:	inc    ebp
  4189f0:	fstp   TBYTE PTR [ebp-0x52]
  4189f3:	rcr    cl,1
  4189f5:	xchg   ebx,eax
  4189f6:	test   DWORD PTR [edx+0x71e8e467],esi
  4189fc:	sbb    ah,BYTE PTR [edx]
  4189fe:	(bad)  
  4189ff:	fdiv   QWORD PTR [edi]
  418a01:	rol    ecx,cl
  418a03:	add    edi,edx
  418a05:	sti    
  418a06:	cmp    esi,DWORD PTR [ebp+0x65]
  418a09:	lods   eax,DWORD PTR ds:[esi]
  418a0a:	repz push esp
  418a0c:	mov    al,0x50
  418a0e:	mov    ebp,0xebdb127f
  418a13:	mov    ds:0x27faa683,eax
  418a18:	adc    dl,0xd3
  418a1b:	(bad)  
  418a1c:	es sbb al,0x1f
  418a1f:	xchg   esi,eax
  418a20:	sbb    al,0x23
  418a22:	inc    eax
  418a23:	mul    BYTE PTR [esi]
  418a25:	and    eax,0x478a6674
  418a2a:	jns    0x4189f1
  418a2c:	mov    dl,0x8
  418a2e:	lods   eax,DWORD PTR ds:[esi]
  418a2f:	imul   esp,DWORD PTR [esp+edx*4+0x75b8cf94],0x61909678
  418a3a:	js     0x4189e2
  418a3c:	in     eax,dx
  418a3d:	dec    ebp
  418a3e:	mov    esp,0x8878bb5d
  418a43:	cwde   
  418a44:	out    dx,al
  418a45:	xchg   edi,eax
  418a46:	inc    edi
  418a47:	(bad)  
  418a48:	fdiv   DWORD PTR [edi]
  418a4a:	cmp    dh,BYTE PTR [eax+0x1117b2d2]
  418a50:	xchg   BYTE PTR [edx-0x5c],al
  418a53:	shr    dl,1
  418a55:	add    dl,ch
  418a57:	outs   dx,DWORD PTR ds:[esi]
  418a58:	mov    ebx,0xf8d51922
  418a5d:	cwde   
  418a5e:	daa    
  418a5f:	outs   dx,DWORD PTR ds:[esi]
  418a60:	imul   edi,eax,0x9b6dedae
  418a66:	pop    edx
  418a67:	mov    DWORD PTR [ecx+0x1786eb21],0xafbffe36
  418a71:	push   esi
  418a72:	call   0xae01:0x42efe9e0
  418a79:	les    esi,FWORD PTR [eax-0x65]
  418a7c:	in     al,dx
  418a7d:	repz enter 0xcf76,0xc6
  418a82:	arpl   WORD PTR [esi],si
  418a84:	js     0x418aed
  418a86:	mov    esi,?
  418a88:	ins    BYTE PTR es:[edi],dx
  418a89:	aad    0x74
  418a8b:	sub    DWORD PTR [eax],ebp
  418a8d:	xchg   ebp,eax
  418a8e:	xchg   ebx,eax
  418a8f:	sahf   
  418a90:	fidiv  DWORD PTR [ebx+0x1d7e40c0]
  418a96:	mov    ebp,0x8834e9db
  418a9b:	outs   dx,BYTE PTR ds:[esi]
  418a9c:	inc    edx
  418a9d:	mov    ecx,0xcb6c9cee
  418aa2:	xlat   BYTE PTR ds:[ebx]
  418aa3:	push   ss
  418aa4:	ret    0x244c
  418aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa8:	imul   ebx,DWORD PTR cs:[esi],0x9191bda7
  418aaf:	push   esp
  418ab0:	or     al,0x63
  418ab2:	int    0x2b
  418ab4:	enter  0x3486,0x6f
  418ab8:	mov    bh,0x3e
  418aba:	mov    ds:0xeb994e8b,eax
  418abf:	imul   eax,DWORD PTR [esp+eax*1],0x120f384f
  418ac6:	rep outs dx,DWORD PTR ds:[esi]
  418ac8:	adc    al,0x3b
  418aca:	lods   al,BYTE PTR ds:[esi]
  418acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acc:	jbe    0x418b48
  418ace:	adc    eax,0x2b1b5579
  418ad3:	in     eax,dx
  418ad4:	inc    ecx
  418ad5:	data16 jmp 0x418b09
  418ad8:	adc    ah,al
  418ada:	adc    ah,BYTE PTR [edi-0x26725b5c]
  418ae0:	push   0x1e
  418ae2:	adc    BYTE PTR [eax+0x1fc0fe33],bl
  418ae8:	pop    ebp
  418ae9:	cld    
  418aea:	and    eax,0x36a405d2
  418aef:	clc    
  418af0:	rep stos BYTE PTR es:[edi],al
  418af2:	lahf   
  418af3:	add    BYTE PTR [eax-0x33c0f218],0x23
  418afa:	jmp    0xd5367d8d
  418aff:	aaa    
  418b00:	jae    0x418b2d
  418b02:	mov    dh,0x19
  418b04:	aam    0xb6
  418b06:	aam    0xdd
  418b08:	std    
  418b09:	sub    bl,bl
  418b0b:	pop    ebp
  418b0c:	(bad)  
  418b0d:	and    eax,0x6ec325a2
  418b12:	ret    
  418b13:	dec    ecx
  418b14:	and    eax,0xc47e4963
  418b19:	pop    ss
  418b1a:	arpl   WORD PTR [edx+0x22d378fb],ax
  418b20:	fsub   DWORD PTR [ecx-0x5b6a325a]
  418b26:	mov    BYTE PTR [edi+0x7f],cl
  418b29:	jnp    0x418abf
  418b2b:	and    al,bh
  418b2d:	dec    edx
  418b2e:	and    edx,DWORD PTR [ebx]
  418b30:	mov    edi,0x6624b5b6
  418b35:	out    0x49,al
  418b37:	mov    DWORD PTR [eax],eax
  418b39:	gs or  al,0x4b
  418b3c:	cmp    DWORD PTR [esi],ebp
  418b3e:	stc    
  418b3f:	std    
  418b40:	dec    esi
  418b41:	repz fwait
  418b43:	lea    esi,[eax]
  418b45:	sbb    DWORD PTR [ebp-0x2bb2af2c],edx
  418b4b:	dec    esi
  418b4c:	js     0x418af3
  418b4e:	in     al,dx
  418b4f:	stc    
  418b50:	je     0x418b17
  418b52:	jae    0x418b22
  418b54:	jae    0x418bad
  418b56:	imul   esi,DWORD PTR [ecx],0xffffffb0
  418b59:	fistp  QWORD PTR [ebx]
  418b5b:	jg     0x418ba1
  418b5d:	imul   esp,DWORD PTR [ebp+0x38],0xffffffa0
  418b61:	js     0x418b3f
  418b63:	cmc    
  418b64:	cmp    eax,0xd0470eb9
  418b69:	dec    ebx
  418b6a:	dec    esi
  418b6b:	cwde   
  418b6c:	fsubr  QWORD PTR [esp+ebp*4-0x57]
  418b70:	(bad)  
  418b72:	pop    ss
  418b73:	gs push 0xffffffb6
  418b76:	or     esi,DWORD PTR [ebp-0x78]
  418b79:	ds aaa 
  418b7b:	cmc    
  418b7c:	mov    ch,0xa7
  418b7e:	pop    esp
  418b7f:	jns    0x418b14
  418b81:	jb     0x418b0e
  418b83:	adc    DWORD PTR [edx],esi
  418b85:	dec    ecx
  418b86:	(bad)  
  418b87:	mov    ds:0xbf79f554,eax
  418b8c:	push   0xaf65bb14
  418b91:	add    al,0x83
  418b93:	mov    ds,WORD PTR ds:0x3e48362b
  418b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9a:	mov    fs,WORD PTR [ecx+0x4c]
  418b9d:	push   0x76
  418b9f:	out    0xcd,al
  418ba1:	sahf   
  418ba2:	mov    cl,0xf5
  418ba4:	retf   0xd88f
  418ba7:	dec    esp
  418ba8:	sub    eax,0x81974504
  418bad:	xchg   DWORD PTR ds:0xee6f573b,eax
  418bb3:	dec    ecx
  418bb4:	shl    ebx,cl
  418bb6:	dec    eax
  418bb7:	sbb    ecx,DWORD PTR [ebp-0x762210ee]
  418bbd:	mov    ds:0x181915a7,al
  418bc2:	cs mov al,0xaa
  418bc5:	dec    edx
  418bc6:	shl    dh,1
  418bc8:	add    BYTE PTR [edi+0x356f4874],bl
  418bce:	inc    ebp
  418bcf:	mov    ebp,0xedd7c32b
  418bd4:	ins    DWORD PTR es:[edi],dx
  418bd5:	nop
  418bd6:	pop    ebp
  418bd7:	xor    DWORD PTR [edx],edx
  418bd9:	data16 jno 0x418c47
  418bdc:	popf   
  418bdd:	pop    esi
  418bde:	jge    0x418c1c
  418be0:	dec    ecx
  418be1:	sbb    al,0x8f
  418be3:	aas    
  418be4:	ficomp DWORD PTR [esi-0x27]
  418be7:	repnz lds edi,FWORD PTR [ecx+0x2]
  418beb:	sbb    edx,ebp
  418bed:	test   al,0x74
  418bef:	mov    bh,0xe7
  418bf1:	dec    ebp
  418bf2:	mov    bl,0xf2
  418bf4:	and    BYTE PTR [eax+0x5],al
  418bf7:	push   ebx
  418bf8:	ss cli 
  418bfa:	scas   eax,DWORD PTR es:[edi]
  418bfb:	dec    esi
  418bfc:	push   esi
  418bfd:	inc    edx
  418bfe:	push   esp
  418bff:	fcom   DWORD PTR ds:0x5ed8770b
  418c05:	in     eax,dx
  418c06:	or     dh,BYTE PTR [edi+0x95d4124]
  418c0c:	or     al,0x41
  418c0e:	jmp    DWORD PTR [ebx]
  418c10:	mov    ds:0x3d3f9ecd,al
  418c15:	mov    dh,0x2a
  418c17:	mov    ebx,0x1eb0ead1
  418c1c:	mov    es,esi
  418c1e:	mov    cl,0xdd
  418c20:	scas   eax,DWORD PTR es:[edi]
  418c21:	retf   0x5e4e
  418c24:	lods   eax,DWORD PTR ds:[esi]
  418c25:	push   cs
  418c26:	xchg   edx,eax
  418c27:	pop    edx
  418c28:	sub    eax,DWORD PTR [esi+ebp*4+0x3]
  418c2c:	xchg   al,dl
  418c2e:	mov    ds:0xf789d009,eax
  418c33:	fld    DWORD PTR [eax+ebx*1-0x6bf3c46]
  418c3a:	outs   dx,BYTE PTR ds:[esi]
  418c3b:	pop    es
  418c3c:	dec    ebx
  418c3d:	xchg   ebx,eax
  418c3e:	xor    BYTE PTR [ebp-0x75b94c98],0x6d
  418c45:	adc    BYTE PTR [ecx-0x32512733],cl
  418c4b:	mov    ebx,0x7d678753
  418c50:	mov    esp,0xe0c9ff4
  418c55:	shl    DWORD PTR [ecx+0x3b92babc],1
  418c5b:	push   ebp
  418c5c:	sub    ch,dh
  418c5e:	repz iret 
  418c60:	xor    al,0xe
  418c62:	sbb    al,0xec
  418c64:	out    dx,al
  418c65:	mov    cl,0x9a
  418c67:	adc    BYTE PTR [eax],ch
  418c69:	sub    DWORD PTR [edx-0x44657a45],esi
  418c6f:	fild   QWORD PTR ds:0x58fff3b
  418c75:	mov    edi,0xfce54def
  418c7a:	dec    esi
  418c7b:	jnp    0x418c15
  418c7d:	call   0x6d8:0xd27b8614
  418c84:	push   edi
  418c85:	inc    eax
  418c86:	stc    
  418c87:	repz (bad) 
  418c89:	sbb    eax,0xa5b9f2be
  418c8e:	(bad)  [edx+0x34f1a852]
  418c94:	imul   DWORD PTR [ecx]
  418c96:	xor    bh,al
  418c98:	dec    esp
  418c99:	add    BYTE PTR ds:0x8f75c676,0xa9
  418ca0:	xchg   esp,eax
  418ca1:	cmp    cl,dh
  418ca3:	xchg   edi,eax
  418ca4:	cwde   
  418ca5:	fdiv   DWORD PTR [edi-0x13]
  418ca8:	dec    ecx
  418ca9:	es test eax,0xde52707d
  418caf:	jle    0x418cfa
  418cb1:	dec    esi
  418cb2:	mov    edi,ebx
  418cb4:	ret    
  418cb5:	in     eax,0x68
  418cb7:	ucomiss xmm2,DWORD PTR [edx+0x16]
  418cbb:	mov    es,eax
  418cbd:	(bad)  
  418cbe:	cs aaa 
  418cc0:	jno    0x418cf2
  418cc2:	jb     0x418cba
  418cc4:	fisub  WORD PTR [edx-0x7e]
  418cc7:	mov    ecx,0xd53de199
  418ccc:	jmp    0x418ca4
  418cce:	push   ecx
  418ccf:	push   esi
  418cd0:	mov    edx,0xe041710
  418cd5:	(bad)  
  418cd6:	repz adc BYTE PTR [eax-0x36ce5fcf],al
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	mov    eax,0x1a8440cc
  418ce3:	jmp    0x418d22
  418ce5:	sbb    esp,ebx
  418ce7:	pop    esi
  418ce8:	hlt    
  418ce9:	xchg   ebp,eax
  418cea:	iret   
  418ceb:	test   BYTE PTR [edx],ah
  418ced:	cmp    BYTE PTR [ecx],al
  418cef:	in     eax,0x60
  418cf1:	xchg   edi,eax
  418cf3:	mov    ebx,0x176083d3
  418cf8:	call   0x28545ecd
  418cfd:	pop    eax
  418cfe:	jg     0x418d0f
  418d00:	sahf   
  418d01:	and    al,0x11
  418d03:	sbb    esi,esi
  418d05:	push   esi
  418d06:	aad    0x88
  418d08:	call   0x564a8500
  418d0d:	pusha  
  418d0e:	mov    bl,BYTE PTR [edx]
  418d10:	push   ecx
  418d11:	jmp    0x418d2d
  418d13:	retf   0xcf07
  418d16:	popa   
  418d17:	mov    edx,0x63cc7893
  418d1c:	pop    eax
  418d1d:	mov    ah,0x86
  418d1f:	inc    esp
  418d20:	pop    ebp
  418d21:	pop    ebx
  418d22:	xchg   esi,eax
  418d23:	pop    ebx
  418d24:	push   ebx
  418d25:	aaa    
  418d26:	inc    ebx
  418d27:	lods   eax,DWORD PTR ds:[esi]
  418d28:	jg     0x418da8
  418d2a:	pop    ds
  418d2b:	popa   
  418d2c:	pop    es
  418d2d:	mov    BYTE PTR [edx+0x43],al
  418d30:	not    BYTE PTR [eax]
  418d32:	std    
  418d33:	pusha  
  418d34:	fisttp DWORD PTR [edx]
  418d36:	lahf   
  418d37:	mov    dl,0x8d
  418d39:	sahf   
  418d3a:	leave  
  418d3b:	jne    0x418d00
  418d3d:	add    al,0x9b
  418d3f:	cmp    bh,BYTE PTR [edi-0x2a]
  418d42:	xchg   dh,al
  418d44:	cwde   
  418d45:	cvtpi2ps xmm2,QWORD PTR [eax+0x73573d14]
  418d4c:	shl    BYTE PTR [eax+0x5e],0x13
  418d50:	dec    eax
  418d51:	mov    edi,0xb5dd9960
  418d56:	jmp    0x9417:0x52c3318d
  418d5d:	fld    TBYTE PTR [eax+0x4d]
  418d60:	fidiv  DWORD PTR [eax+0xc]
  418d63:	xchg   edi,edi
  418d65:	pop    ebp
  418d66:	mov    edi,0x3c299ab
  418d6b:	mov    dl,0x8c
  418d6d:	push   edx
  418d6e:	jecxz  0x418db7
  418d70:	mov    bl,0x10
  418d72:	fsubr  QWORD PTR [edx]
  418d74:	xchg   esi,eax
  418d75:	xor    eax,0xaeb39890
  418d7a:	(bad)  
  418d7b:	hlt    
  418d7c:	stos   DWORD PTR es:[edi],eax
  418d7d:	test   al,0xc0
  418d7f:	adc    cl,BYTE PTR [edx*4+0x5fa1b921]
  418d86:	push   ebp
  418d87:	pop    esi
  418d88:	inc    ebx
  418d89:	test   BYTE PTR [ecx+esi*4+0x5ef3dc6a],ch
  418d90:	hlt    
  418d91:	dec    esi
  418d92:	dec    edx
  418d93:	pop    esp
  418d94:	call   0x91b4:0x1c14c3e5
  418d9b:	fldenv [eax-0x3f6050b0]
  418da1:	push   ecx
  418da2:	mov    eax,0xe6940229
  418da7:	repnz outs dx,DWORD PTR ds:[esi]
  418da9:	imul   eax,DWORD PTR [eax-0x1d0b57bc],0xf29a9fca
  418db3:	or     DWORD PTR ds:0x204fa552,0x92057607
  418dbd:	jmp    0x418d50
  418dbf:	retf   
  418dc0:	or     dl,cl
  418dc2:	add    DWORD PTR [esi+ebx*1-0x24],0xffffff84
  418dc7:	fcom   DWORD PTR [ebp-0x5d]
  418dca:	sub    esp,DWORD PTR [edx]
  418dcc:	sar    edx,cl
  418dce:	mov    al,ds:0xbbf34790
  418dd3:	fwait
  418dd4:	cld    
  418dd5:	je     0x418e1a
  418dd7:	add    BYTE PTR [edx],al
  418dd9:	ret    0x7cbd
  418ddc:	jno    0x418d69
  418dde:	idiv   BYTE PTR ds:0x51d96ad6
  418de4:	jnp    0x418ddc
  418de6:	leave  
  418de7:	int3   
  418de8:	xchg   DWORD PTR [ecx-0x3e4053bd],ebx
  418dee:	mov    BYTE PTR [edx+0x45e1faf2],ah
  418df4:	pop    es
  418df5:	mov    al,0xe4
  418df7:	adc    eax,0x4dba024d
  418dfc:	adc    edi,esp
  418dfe:	mov    ecx,0x8d6d190f
  418e03:	push   esi
  418e04:	jbe    0x418e46
  418e06:	push   edi
  418e07:	push   esp
  418e08:	aaa    
  418e09:	je     0x418dd1
  418e0b:	and    DWORD PTR [eax],edx
  418e0d:	xchg   ebp,eax
  418e0e:	inc    eax
  418e0f:	inc    eax
  418e10:	mov    dl,0x83
  418e12:	xlat   BYTE PTR ds:[ebx]
  418e13:	stos   DWORD PTR es:[edi],eax
  418e14:	cdq    
  418e15:	outs   dx,DWORD PTR ds:[esi]
  418e16:	ret    0xb3f4
  418e19:	cld    
  418e1a:	push   edx
  418e1b:	mov    ss,WORD PTR [edi+0x625411cd]
  418e21:	ror    DWORD PTR [edi+0x6373a2c1],0xf7
  418e28:	fdiv   QWORD PTR [ecx+0x48832979]
  418e2e:	call   DWORD PTR [eax+0x64]
  418e31:	xor    ah,BYTE PTR [edx+0x25]
  418e34:	stos   DWORD PTR es:[edi],eax
  418e35:	and    dl,BYTE PTR [esi]
  418e37:	mov    ds:0xcc263759,eax
  418e3c:	xlat   BYTE PTR ds:[ebx]
  418e3d:	sub    eax,0x3dfee59a
  418e42:	mov    ebp,0x3f29dff5
  418e47:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e49:	jl     0x418e34
  418e4b:	aas    
  418e4c:	out    0xd8,eax
  418e4e:	aad    0x13
  418e50:	sbb    al,0x7a
  418e52:	mov    eax,ebp
  418e54:	fldenv [edx]
  418e56:	xchg   ebx,eax
  418e57:	scas   eax,DWORD PTR es:[edi]
  418e58:	mov    bh,0xea
  418e5a:	test   DWORD PTR [ebx+0x56852033],0xc8922549
  418e64:	test   BYTE PTR [edx-0x66],dl
  418e67:	ret    0x7f4b
  418e6a:	lods   al,BYTE PTR ds:[esi]
  418e6b:	push   0x49
  418e6d:	cmp    al,0xd4
  418e6f:	inc    eax
  418e70:	ret    
  418e71:	mov    esi,DWORD PTR [edx+0x41]
  418e74:	mov    dh,0xe3
  418e76:	neg    DWORD PTR [eax+0x3ac59970]
  418e7c:	fstp   QWORD PTR [esi]
  418e7e:	ins    BYTE PTR es:[edi],dx
  418e7f:	outs   dx,DWORD PTR ds:[esi]
  418e80:	data16 (bad) 
  418e82:	lods   al,BYTE PTR ds:[esi]
  418e83:	push   eax
  418e84:	(bad)  
  418e85:	cli    
  418e86:	xchg   BYTE PTR [eax+0x6d],dl
  418e89:	or     bl,BYTE PTR [ebp+ebx*4+0x21ea4aaa]
  418e90:	lods   eax,DWORD PTR ds:[esi]
  418e91:	jmp    0x418e7f
  418e93:	iret   
  418e94:	pop    edi
  418e95:	adc    al,BYTE PTR [esi]
  418e97:	out    dx,eax
  418e98:	ja     0x418ee7
  418e9a:	lods   eax,DWORD PTR ds:[esi]
  418e9b:	pop    es
  418e9c:	mov    edi,0x90c804f6
  418ea1:	xor    eax,0x8c3c0ef8
  418ea6:	popa   
  418ea7:	in     eax,dx
  418ea8:	aam    0x8c
  418eaa:	jecxz  0x418ece
  418eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ead:	inc    ebp
  418eae:	jle    0x418e43
  418eb0:	pushf  
  418eb1:	or     eax,0xf3b34c33
  418eb6:	xchg   ebx,eax
  418eb7:	loope  0x418e9c
  418eb9:	cdq    
  418eba:	bound  edi,QWORD PTR [ecx-0x172532b6]
  418ec0:	sub    eax,0xa68049ab
  418ec5:	stos   BYTE PTR es:[edi],al
  418ec6:	stos   BYTE PTR es:[edi],al
  418ec7:	fisubr DWORD PTR [ebp-0x8]
  418eca:	mov    ebx,0xdf005d2d
  418ecf:	shl    edi,0x29
  418ed2:	sbb    BYTE PTR [ebx-0xe],ah
  418ed5:	adc    BYTE PTR [edi-0x4bfb85be],0x72
  418edc:	xor    DWORD PTR [esp+edi*2],edx
  418edf:	pop    es
  418ee0:	or     bh,cl
  418ee2:	out    0x6f,al
  418ee4:	mov    ebp,0x6d585b40
  418ee9:	pop    edi
  418eea:	xchg   BYTE PTR [esi-0x73b4c2e5],ah
  418ef0:	jmp    0xe46b:0x69378d28
  418ef7:	int    0xf9
  418ef9:	neg    DWORD PTR [edx]
  418efb:	fwait
  418efc:	cmp    BYTE PTR [ebx+0x52],dh
  418eff:	push   ss
  418f00:	mov    ebp,ss
  418f02:	data16 and BYTE PTR [esp+eax*1-0x17dc5749],ch
  418f0a:	ret    
  418f0b:	dec    edi
  418f0c:	nop
  418f0d:	out    dx,eax
  418f0e:	or     al,0xd5
  418f10:	push   ebx
  418f11:	sbb    DWORD PTR [ebp+0x4d7b0be2],esp
  418f17:	(bad)  
  418f18:	(bad)  
  418f19:	sbb    eax,0xff7f34c2
  418f1e:	mov    bl,0x2f
  418f20:	xchg   edx,eax
  418f21:	fidivr WORD PTR [ecx+0x7c]
  418f24:	scas   eax,DWORD PTR es:[edi]
  418f25:	lahf   
  418f26:	daa    
  418f27:	inc    esp
  418f28:	fmul   st(4),st
  418f2a:	mov    bl,0xd
  418f2c:	stos   BYTE PTR es:[edi],al
  418f2d:	cld    
  418f2e:	iret   
  418f2f:	xor    eax,0x2986a466
  418f34:	clc    
  418f35:	or     al,0x9c
  418f37:	das    
  418f38:	test   al,0x67
  418f3a:	mov    esi,esi
  418f3c:	push   ecx
  418f3d:	mov    edx,eax
  418f3f:	inc    ecx
  418f40:	test   al,0x3
  418f42:	adc    sp,WORD PTR [esi+0x20]
  418f46:	jb     0x418f91
  418f48:	dec    esi
  418f49:	lea    ecx,[ecx+eax*2+0x11f7d13a]
  418f50:	dec    eax
  418f51:	imul   esp,DWORD PTR [edi-0x31],0xc4308bfb
  418f58:	out    0xe3,al
  418f5a:	stc    
  418f5b:	mov    ch,0xca
  418f5d:	scas   al,BYTE PTR es:[edi]
  418f5e:	or     dh,ah
  418f60:	(bad)  
  418f61:	bound  esi,QWORD PTR [esi-0x6]
  418f64:	pop    ecx
  418f65:	jmp    0xa5df2c2f
  418f6a:	jmp    0x418f6a
  418f6c:	inc    eax
  418f6d:	dec    edx
  418f6e:	push   es
  418f6f:	inc    eax
  418f70:	popf   
  418f71:	into   
  418f72:	icebp  
  418f73:	sbb    al,0xd7
  418f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f76:	lods   eax,DWORD PTR ds:[esi]
  418f77:	test   edi,edx
  418f79:	aas    
  418f7a:	clc    
  418f7b:	xchg   DWORD PTR [edi+0x3c3cfebe],esi
  418f81:	pushf  
  418f82:	in     eax,dx
  418f83:	jns    0x419001
  418f85:	mov    bh,0x9b
  418f87:	jl     0x418f1e
  418f89:	test   dh,0x25
  418f8c:	or     BYTE PTR [edx-0x4f],dl
  418f8f:	push   ebp
  418f90:	mov    ebx,eax
  418f92:	adc    BYTE PTR [edi+0x4c064f3e],dh
  418f98:	mov    esi,ebp
  418f9a:	xor    eax,0xab7def6d
  418f9f:	pop    edi
  418fa0:	loop   0x418f65
  418fa2:	mov    ch,0x41
  418fa4:	enter  0x5ac0,0x2b
  418fa8:	dec    esi
  418fa9:	jle    0x418f93
  418fab:	xchg   esp,eax
  418fac:	enter  0x3c76,0x69
  418fb0:	loope  0x419020
  418fb2:	pusha  
  418fb3:	pop    edi
  418fb4:	jmp    0x418f8e
  418fb6:	aam    0x77
  418fb8:	(bad)  
  418fb9:	addr16 pusha 
  418fbb:	js     0x418feb
  418fbd:	xchg   esi,eax
  418fbe:	into   
  418fbf:	add    BYTE PTR [esi+0x7e],dh
  418fc2:	ds sahf 
  418fc4:	push   ecx
  418fc5:	xchg   DWORD PTR [edi],esi
  418fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc8:	clc    
  418fc9:	jmp    0x7ab7:0xbb2e2614
  418fd0:	out    dx,eax
  418fd1:	scas   al,BYTE PTR es:[edi]
  418fd2:	pop    ebp
  418fd3:	test   DWORD PTR [edx+0x602fbe3],edx
  418fd9:	push   ebp
  418fda:	pop    ecx
  418fdb:	push   cs
  418fdc:	mov    al,0x94
  418fde:	jmp    0xdcc9:0x28c5c35e
  418fe5:	add    bh,BYTE PTR [ebx+0x72635547]
  418feb:	sub    eax,0x3528a06
  418ff0:	xchg   edi,eax
  418ff1:	sti    
  418ff2:	or     BYTE PTR [edx+0x13],bl
  418ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff6:	xor    ebp,eax
  418ff8:	push   ebp
  418ff9:	pusha  
  418ffa:	jb     0x418fdc
  418ffc:	xor    DWORD PTR [ebx-0x7721f7cf],0x3e07ba1
  419006:	out    0xa5,al
  419008:	fst    QWORD PTR [esi]
  41900a:	pop    ds
  41900b:	jle    0x418fd3
  41900d:	dec    eax
  41900e:	mov    dl,0xc3
  419010:	lds    ebx,FWORD PTR [esi]
  419012:	sub    ebx,DWORD PTR [ecx]
  419014:	push   esi
  419015:	inc    esp
  419016:	inc    eax
  419017:	add    al,0x5
  419019:	enter  0xcab3,0x1d
  41901d:	jno    0x418fbf
  41901f:	dec    edx
  419020:	sub    DWORD PTR [ebx],ecx
  419022:	scas   al,BYTE PTR es:[edi]
  419023:	lds    ebp,FWORD PTR [ecx]
  419025:	shr    BYTE PTR ds:0x5fd3cca9,0x56
  41902c:	mov    esi,0x31f314b7
  419031:	and    DWORD PTR [ecx+0xa],esp
  419034:	sub    BYTE PTR [ecx+eax*2+0x12],dl
  419038:	lods   al,BYTE PTR ds:[esi]
  419039:	mov    eax,0x73532ed7
  41903e:	(bad)
  419043:	lea    esp,[esp+ecx*8-0x40]
  419047:	imul   esp,DWORD PTR [eax+edx*8],0xffffff97
  41904b:	shr    esp,1
  41904d:	out    0xf3,eax
  41904f:	xchg   ebp,eax
  419050:	loopne 0x419062
  419052:	mov    ecx,0xef855d32
  419057:	xor    eax,0x6002eed
  41905c:	sub    DWORD PTR [edx],esp
  41905e:	and    dl,BYTE PTR [esi]
  419060:	into   
  419061:	or     ebx,edx
  419063:	xor    dh,ch
  419065:	loop   0x418ff0
  419067:	xor    BYTE PTR [esi+0x65c51be3],ch
  41906d:	jg     0x419013
  41906f:	js     0x4190e6
  419071:	xchg   BYTE PTR es:[esi+0x62],dl
  419075:	jg     0x41905a
  419077:	outs   dx,BYTE PTR ds:[esi]
  419078:	popa   
  419079:	fdiv   DWORD PTR [ebx+0x17]
  41907c:	lock xchg ecx,eax
  41907e:	xor    ch,BYTE PTR ds:0x777ca97d
  419084:	mov    ch,0x7f
  419086:	hlt    
  419087:	es call 0x3c2a8ca0
  41908d:	sbb    BYTE PTR [eax+eax*8+0x76],ch
  419091:	pusha  
  419092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419093:	xlat   BYTE PTR ds:[ebx]
  419094:	lea    ebx,ds:0x3c645059
  41909a:	fcom   QWORD PTR [eax+0x60a4462e]
  4190a0:	les    edx,FWORD PTR [edi-0x38f778df]
  4190a6:	sub    BYTE PTR [edx-0x2349798b],cl
  4190ac:	(bad)  
  4190ad:	retf   
  4190ae:	adc    DWORD PTR [ebx-0x11],ecx
  4190b1:	(bad)  
  4190b2:	loop   0x419058
  4190b4:	das    
  4190b5:	es inc edi
  4190b7:	sbb    edx,0x12
  4190ba:	neg    ah
  4190bc:	(bad)  
  4190bd:	dec    BYTE PTR [eax+0x7c0f9c79]
  4190c3:	cmc    
  4190c4:	test   eax,0xc6919390
  4190c9:	cmp    ch,ah
  4190cb:	lods   eax,DWORD PTR ds:[esi]
  4190cc:	push   ebx
  4190cd:	adc    eax,0xf1f4b5fe
  4190d2:	dec    eax
  4190d3:	fisttp QWORD PTR [ebp+0x5ca4f082]
  4190d9:	int    0x99
  4190db:	inc    esi
  4190dc:	mov    esi,0xef51387a
  4190e1:	addr16 popf 
  4190e3:	pop    ds
  4190e4:	out    0xff,eax
  4190e6:	dec    ecx
  4190e7:	ins    DWORD PTR es:[edi],dx
  4190e8:	addr16 push edx
  4190ea:	ret    
  4190eb:	scas   al,BYTE PTR es:[edi]
  4190ec:	inc    edx
  4190ed:	mov    WORD PTR [ebx+esi*2+0x1b5ae493],fs
  4190f4:	pop    ds
  4190f5:	mov    bh,0x17
  4190f7:	xor    al,0x66
  4190f9:	dec    DWORD PTR [ebx-0x6a]
  4190fc:	push   esi
  4190fd:	(bad)  
  4190fe:	outs   dx,DWORD PTR ds:[esi]
  4190ff:	cdq    
  419100:	and    al,0xa
  419102:	sub    dh,BYTE PTR [edx]
  419104:	out    0x96,al
  419106:	sbb    dh,BYTE PTR [ebp+eiz*1-0x53]
  41910a:	aad    0xa
  41910c:	ins    DWORD PTR es:[edi],dx
  41910d:	cmp    al,BYTE PTR [edi-0xddb657e]
  419113:	lods   al,BYTE PTR ds:[esi]
  419114:	push   esi
  419115:	fwait
  419116:	pop    ebp
  419117:	hlt    
  419118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419119:	inc    ebp
  41911a:	in     al,dx
  41911b:	xlat   BYTE PTR ds:[ebx]
  41911c:	sub    DWORD PTR [edi-0x5972c246],0x6a2696eb
  419126:	cmp    dl,BYTE PTR [edi-0x7f]
  419129:	jle    0x419120
  41912b:	rol    BYTE PTR [ebx+0x33],1
  41912e:	iret   
  41912f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419130:	or     edx,DWORD PTR [ebx-0x12914fad]
  419136:	rol    BYTE PTR [edx-0x10ea229a],1
  41913c:	and    DWORD PTR [ebx+0x4e342207],esi
  419142:	add    ebx,DWORD PTR [ebx+0x7a]
  419145:	inc    DWORD PTR [edx+0x55d3983c]
  41914b:	int    0x9d
  41914d:	inc    ebp
  41914e:	cmp    DWORD PTR ds:0xd9dd6781,ecx
  419154:	dec    ebp
  419155:	dec    eax
  419156:	pusha  
  419157:	in     eax,dx
  419158:	xchg   edi,eax
  419159:	outs   dx,BYTE PTR ds:[esi]
  41915a:	inc    ebx
  41915b:	mov    dh,0x57
  41915d:	(bad)  
  41915e:	or     edi,DWORD PTR [ecx-0x70]
  419161:	or     eax,0xe7468d0
  419166:	sbb    al,0x58
  419168:	leave  
  419169:	mov    ?,WORD PTR [ebp-0x17]
  41916c:	or     BYTE PTR [esi],0x86
  41916f:	ja     0x4191d7
  419171:	jns    0x4191e7
  419173:	jecxz  0x419180
  419175:	test   DWORD PTR [ebp+0x2233d069],edx
  41917b:	xor    al,0xb9
  41917d:	(bad)  
  41917e:	lea    esp,[edx+0x1143f19f]
  419184:	scas   al,BYTE PTR es:[edi]
  419185:	dec    ebp
  419186:	data16 dec BYTE PTR [eax-0xa60ab6a]
  41918d:	jmp    0x2983:0x41412521
  419194:	mov    al,0xe1
  419196:	ins    BYTE PTR es:[edi],dx
  419197:	cmp    eax,0xb6c7f432
  41919c:	and    esi,DWORD PTR [ebx]
  41919e:	pop    gs
  4191a0:	nop
  4191a1:	les    esi,FWORD PTR [ebp+0x51]
  4191a4:	jb     0x419170
  4191a6:	push   edi
  4191a7:	pop    ds
  4191a8:	and    al,0x5c
  4191aa:	inc    esi
  4191ab:	xchg   ebx,eax
  4191ac:	sti    
  4191ad:	push   ds
  4191ae:	push   ds
  4191af:	mov    eax,0x95c146f
  4191b4:	aam    0xee
  4191b6:	leave  
  4191b7:	lods   eax,DWORD PTR ds:[esi]
  4191b8:	fidiv  DWORD PTR [ebp+eax*8-0x5716e96]
  4191bf:	test   al,0x92
  4191c1:	pusha  
  4191c2:	and    dl,BYTE PTR [edx+0x8]
  4191c5:	inc    ecx
  4191c6:	in     al,0x45
  4191c8:	xor    al,BYTE PTR [bp+si-0x1784]
  4191cd:	pop    edi
  4191ce:	fdivr  DWORD PTR [edx+0x548df99]
  4191d4:	sbb    al,0x7f
  4191d6:	packssdw mm6,QWORD PTR [edi+0x42d9956]
  4191dd:	sub    ebp,DWORD PTR [edi+0x33]
  4191e0:	jo     0x4191c8
  4191e2:	or     eax,0x4a5e5b28
  4191e7:	mov    edx,0x6f547669
  4191ec:	sub    al,bl
  4191ee:	inc    ebp
  4191ef:	cmp    eax,DWORD PTR [eax-0x32d2ae94]
  4191f5:	sub    ah,cl
  4191f7:	sub    ebx,DWORD PTR [eax-0x5a]
  4191fa:	call   0x4517:0x83579e1e
  419201:	enter  0xf8c5,0x29
  419205:	in     eax,dx
  419206:	outs   dx,DWORD PTR ds:[esi]
  419207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419208:	sbb    al,0xf0
  41920a:	mov    bh,0x9a
  41920c:	jl     0x41922c
  41920e:	mov    DWORD PTR [esi],edi
  419210:	jne    0x4191f7
  419212:	add    ebp,eax
  419214:	and    al,dl
  419216:	(bad)  
  419217:	xor    al,0x3f
  419219:	or     cl,al
  41921b:	ficom  WORD PTR [edi]
  41921d:	lods   al,BYTE PTR ds:[esi]
  41921e:	hlt    
  41921f:	sbb    al,0x4a
  419221:	pop    es
  419222:	fcom   DWORD PTR [ebx+esi*4-0x7401cc0b]
  419229:	push   DWORD PTR [ebp+0x4a786870]
  41922f:	dec    edi
  419230:	fldcw  WORD PTR [ebp+0x12]
  419233:	into   
  419234:	imul   edi,DWORD PTR [edi-0x3c],0x85b868df
  41923b:	fdivr  QWORD PTR [ebp-0x24]
  41923e:	je     0x4192a8
  419240:	xor    dl,BYTE PTR [ebx-0x4be6ef5a]
  419246:	and    eax,0x30eb5dfa
  41924b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924c:	mov    al,0xf1
  41924e:	aas    
  41924f:	push   es
  419250:	cdq    
  419251:	fnstenv [ecx-0x43]
  419254:	stc    
  419255:	ss mov ch,cl
  419258:	xor    dh,dl
  41925a:	jne    0x4191eb
  41925c:	xchg   ebx,eax
  41925d:	lds    ecx,FWORD PTR [ecx]
  41925f:	ret    0xd16e
  419262:	mov    ebp,0x5125c61f
  419267:	xchg   ecx,eax
  419268:	sbb    DWORD PTR [edx],ecx
  41926a:	mov    ebx,edi
  41926c:	or     ebp,DWORD PTR [ecx]
  41926e:	and    al,0xf0
  419270:	cs push ebp
  419272:	(bad)  
  419273:	adc    DWORD PTR [esi-0x44],esp
  419276:	(bad)  
  419277:	pop    ebp
  419278:	loopne 0x4192e3
  41927a:	(bad)  
  41927b:	mov    eax,0x4f117481
  419280:	push   cs
  419281:	jg     0x4192fc
  419283:	(bad)  
  419284:	leave  
  419285:	sbb    DWORD PTR [ebx+0x4231c64],edi
  41928b:	jmp    0x419309
  41928d:	aas    
  41928e:	fidivr WORD PTR [edi+edi*1-0x29]
  419292:	je     0x4192bd
  419294:	sbb    BYTE PTR [edx],bh
  419296:	dec    ebp
  419297:	or     DWORD PTR [esi+0x5a],esi
  41929a:	dec    edx
  41929b:	jne    0x4192b4
  41929d:	dec    esp
  41929e:	retf   
  41929f:	pop    esp
  4192a0:	test   BYTE PTR cs:[edx],0xb3
  4192a4:	bound  edx,QWORD PTR [ecx]
  4192a6:	fimul  WORD PTR [edx-0x1181c95a]
  4192ac:	push   0x8
  4192ae:	lds    edx,FWORD PTR [ecx-0x65add250]
  4192b4:	xor    eax,0x7f7b4a51
  4192b9:	pushf  
  4192ba:	out    dx,eax
  4192bb:	and    BYTE PTR [eax+eiz*8+0x3ae97fc4],ch
  4192c2:	or     ebx,esp
  4192c4:	adc    dh,cl
  4192c6:	adc    al,BYTE PTR [esi-0x7a]
  4192c9:	jno    0x4192a6
  4192cb:	ret    
  4192cc:	push   edx
  4192cd:	and    ebp,DWORD PTR [ebp+0xf]
  4192d0:	xor    ah,BYTE PTR [edx]
  4192d2:	push   esp
  4192d3:	adc    al,0x3
  4192d5:	jge    0x4192ca
  4192d7:	inc    ecx
  4192d8:	xchg   ebx,eax
  4192d9:	fist   DWORD PTR [ebx-0xa]
  4192dc:	adc    DWORD PTR [bx+si],eax
  4192df:	inc    edx
  4192e0:	retf   0x79ea
  4192e3:	push   edx
  4192e4:	adc    al,0x7a
  4192e6:	adc    ecx,DWORD PTR cs:[esi-0x30d656a9]
  4192ed:	inc    ebp
  4192ee:	(bad)  
  4192ef:	cli    
  4192f0:	ror    BYTE PTR [esi+ebp*4+0x2b],1
  4192f4:	xchg   edi,eax
  4192f5:	dec    ebx
  4192f6:	and    al,BYTE PTR [ebx]
  4192f8:	xlat   BYTE PTR ds:[ebx]
  4192f9:	mov    edi,0x59aa3a68
  4192fe:	mov    al,0xf9
  419300:	retf   
  419301:	pmulhuw mm7,QWORD PTR [eax+eiz*1-0x69796254]
  419309:	fwait
  41930a:	and    ebp,DWORD PTR [edx]
  41930c:	sbb    BYTE PTR [eax-0x6bc14c4a],bh
  419312:	stos   DWORD PTR es:[edi],eax
  419313:	shl    eax,0xe1
  419316:	ja     0x419325
  419318:	mov    eax,0x29d3d81f
  41931d:	repz mov esp,0x862509f7
  419323:	mov    esp,0xc34f68d7
  419328:	stc    
  419329:	neg    DWORD PTR [eax]
  41932b:	mov    eax,esi
  41932d:	retf   
  41932e:	cmc    
  41932f:	and    eax,0x67777c78
  419334:	sahf   
  419335:	aaa    
  419336:	adc    al,0xb1
  419338:	add    BYTE PTR [esi+0x2d],cl
  41933b:	fst    QWORD PTR [ebx+0x42]
  41933e:	and    al,0xe2
  419340:	fwait
  419341:	sbb    BYTE PTR [esi+0x6e],0xd3
  419345:	loopne 0x41933e
  419347:	xchg   bp,ax
  419349:	nop/reserved BYTE PTR [edi+0xf90c00f]
  419350:	or     DWORD PTR [edx+0xb0a4990],ecx
  419356:	dec    edx
  419357:	gs ret 0xdf2d
  41935b:	xlat   BYTE PTR ds:[ebx]
  41935c:	loopne 0x419397
  41935e:	outs   dx,BYTE PTR ds:[esi]
  41935f:	fmul   DWORD PTR ds:0xfa25740f
  419365:	cld    
  419366:	outs   dx,DWORD PTR ds:[esi]
  419367:	push   0xe9d92fd7
  41936c:	std    
  41936d:	jecxz  0x4193d6
  41936f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419370:	add    BYTE PTR [edx+0x29],dl
  419373:	inc    eax
  419374:	add    eax,DWORD PTR [ebx+0x6e]
  419377:	inc    eax
  419378:	pushf  
  419379:	inc    eax
  41937a:	popa   
  41937b:	js     0x419383
  41937d:	push   es
  41937e:	mov    BYTE PTR [ecx+esi*8-0x3aabb247],dh
  419385:	pop    es
  419386:	popf   
  419387:	xchg   esi,eax
  419388:	xchg   ecx,eax
  419389:	sub    edx,esi
  41938b:	inc    ecx
  41938c:	xchg   edi,eax
  41938d:	push   ds
  41938e:	or     ch,BYTE PTR [eax+0x1a]
  419391:	and    eax,0x45ec9409
  419396:	push   eax
  419397:	bound  ebp,QWORD PTR [edx+0x5f]
  41939a:	stos   BYTE PTR es:[edi],al
  41939b:	movups xmm1,xmm7
  41939e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41939f:	dec    ecx
  4193a0:	test   DWORD PTR [esp+ebx*2],edi
  4193a3:	jo     0x4193f3
  4193a5:	loopne 0x419329
  4193a7:	loope  0x4193ec
  4193a9:	inc    edi
  4193aa:	cdq    
  4193ab:	push   ecx
  4193ac:	push   ebp
  4193ad:	push   esi
  4193ae:	(bad)  
  4193af:	jecxz  0x419366
  4193b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b2:	in     al,0x6c
  4193b4:	mov    al,ds:0xd17e224a
  4193b9:	mov    al,ds:0x13ad9bb0
  4193be:	pushf  
  4193bf:	jge    0x41935a
  4193c1:	pushf  
  4193c2:	movups XMMWORD PTR [esi-0x3a],xmm3
  4193c6:	mov    WORD PTR [eax-0x62],?
  4193c9:	out    0x7c,al
  4193cb:	shl    DWORD PTR [ebp+0x10],cl
  4193ce:	add    eax,0x851521d4
  4193d3:	or     eax,0x8e89b1ab
  4193d8:	jno    0x419399
  4193da:	imul   BYTE PTR [eax+0x1d87aeb0]
  4193e0:	mov    edx,0x65c5f844
  4193e5:	inc    edi
  4193e6:	or     eax,0xe2c82013
  4193eb:	xor    bl,BYTE PTR [esi]
  4193ed:	fisttp DWORD PTR [esi+ebp*1-0x7a19a958]
  4193f4:	sti    
  4193f5:	sub    eax,0xd1fbe6bd
  4193fa:	inc    ecx
  4193fb:	sbb    al,0xdb
  4193fd:	mov    ecx,DWORD PTR [ecx+0x2e]
  419400:	mov    eax,ds:0x8ef9c5a5
  419405:	push   0x239df601
  41940a:	dec    ebp
  41940b:	loope  0x4193a6
  41940d:	arpl   bx,bx
  41940f:	cld    
  419410:	sbb    bh,dh
  419412:	or     DWORD PTR [edi+0x76],ebx
  419415:	(bad)  
  419416:	or     al,0xde
  419418:	dec    edi
  419419:	sbb    eax,0xcbf198b
  41941e:	xor    cl,BYTE PTR [eax+0x25a7e147]
  419424:	pop    ebx
  419425:	fcmovnb st,st(3)
  419427:	popa   
  419428:	mov    edi,?
  41942a:	retf   
  41942b:	pop    ecx
  41942c:	cmc    
  41942d:	jecxz  0x419479
  41942f:	mov    dl,0xe5
  419431:	xor    dh,cl
  419433:	push   ecx
  419434:	jge    0x4193dd
  419436:	pop    ebp
  419437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419438:	adc    ebp,DWORD PTR [ecx+eax*4]
  41943b:	add    DWORD PTR [ecx+0x5e1f9857],ecx
  419441:	(bad)
  419446:	jnp    0x4193f7
  419448:	leave  
  419449:	cs fs cmp bl,bl
  41944d:	inc    ebx
  41944e:	and    ah,BYTE PTR [ecx-0x324865cd]
  419454:	pusha  
  419455:	(bad)  
  419456:	icebp  
  419457:	adc    eax,ecx
  419459:	(bad)
  41945c:	dec    edx
  41945d:	xor    al,0xae
  41945f:	add    edx,esi
  419461:	pop    ebp
  419462:	jne    0x4193fa
  419464:	inc    DWORD PTR [ebx]
  419466:	repz fidiv WORD PTR [ebx+edx*1+0x1aa87441]
  41946e:	test   al,0x39
  419470:	sub    BYTE PTR [esi-0x617b9ea2],dl
  419476:	stos   DWORD PTR es:[edi],eax
  419477:	push   ss
  419478:	cmp    ch,dl
  41947a:	pop    ecx
  41947b:	jnp    0x4194ea
  41947d:	mov    eax,ds:0xb69a8e7a
  419482:	pop    ds
  419483:	mov    al,BYTE PTR [edi]
  419485:	repz int3 
  419487:	js     0x419440
  419489:	popf   
  41948a:	in     al,dx
  41948b:	js     0x41944e
  41948d:	mov    ebp,0x57289b02
  419492:	adc    edx,DWORD PTR [eax-0x3d11693d]
  419498:	dec    esi
  419499:	sbb    esi,DWORD PTR [ebp-0x62c5d542]
  41949f:	aas    
  4194a0:	in     eax,0xef
  4194a2:	jnp    0x419456
  4194a4:	push   ds
  4194a5:	mov    eax,ds:0x519d0e0f
  4194aa:	sub    eax,0x49b3a697
  4194af:	add    DWORD PTR [esi+edx*8],edx
  4194b2:	add    BYTE PTR [esi],0x4
  4194b5:	hlt    
  4194b6:	cmp    al,0x31
  4194b8:	pop    es
  4194b9:	into   
  4194ba:	xchg   DWORD PTR [ebx-0x6950cb11],esi
  4194c0:	pop    edi
  4194c1:	sar    BYTE PTR ds:0xea2aa9ba,0x42
  4194c8:	ja     0x4194b3
  4194ca:	out    0xdd,eax
  4194cc:	adc    al,0x68
  4194ce:	imul   ebp,DWORD PTR [ecx],0x28f916a0
  4194d4:	mov    eax,ds:0x574afde6
  4194d9:	mov    dl,0xb6
  4194db:	cmp    eax,0xf7e44186
  4194e0:	mov    ecx,0x5c44de29
  4194e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e7:	call   0xf9da:0x1ae7ce37
  4194ee:	lock jae 0x4194ef
  4194f1:	lods   al,BYTE PTR ds:[esi]
  4194f2:	pop    esp
  4194f3:	jge    0x419479
  4194f5:	test   BYTE PTR [eax],bl
  4194f7:	sbb    eax,0x64546cfb
  4194fc:	adc    DWORD PTR [ebp+0x2],edx
  4194ff:	mov    BYTE PTR [edx+0x53],ch
  419502:	loopne 0x419579
  419504:	jno    0x4194db
  419506:	or     DWORD PTR [ecx],esi
  419508:	xor    eax,DWORD PTR [edi-0x37]
  41950b:	sbb    DWORD PTR [edi-0x53],esi
  41950e:	and    al,0x7a
  419510:	pop    ecx
  419511:	mov    ch,cl
  419513:	ror    ah,cl
  419515:	iret   
  419516:	and    eax,0x92c9c67a
  41951b:	bound  esi,QWORD PTR [ebx-0x37f6ab13]
  419521:	adc    BYTE PTR [ebp+0x3f],cl
  419524:	cmc    
  419525:	out    0x65,al
  419527:	pop    edx
  419528:	cmp    ebx,0xffffff9c
  41952b:	push   0x67c3ae0c
  419530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419531:	jo     0x4194da
  419533:	mov    eax,ds:0x89c1faa7
  419538:	mov    BYTE PTR [ebp+eax*1-0x4c],bl
  41953c:	popa   
  41953d:	mov    DWORD PTR [ecx+0x5544efd9],esp
  419543:	fisttp QWORD PTR [eax-0x2b]
  419546:	sbb    dh,bl
  419548:	inc    esp
  419549:	mov    esp,0x3b2a7aec
  41954e:	push   ecx
  41954f:	les    edx,FWORD PTR [eax]
  419551:	add    DWORD PTR [ebp+0x1a],esi
  419554:	outs   dx,BYTE PTR ds:[esi]
  419555:	in     al,dx
  419556:	mov    cl,0xaf
  419558:	pop    ebp
  419559:	int3   
  41955a:	or     cl,dh
  41955c:	loopne 0x419555
  41955e:	loope  0x4194f9
  419560:	dec    eax
  419561:	imul   edi,DWORD PTR [esi-0x1b],0x8a2ca178
  419568:	rcl    BYTE PTR [esi+0x1e],1
  41956b:	xchg   edi,eax
  41956c:	fsub   QWORD PTR ds:0xc4f11f72
  419572:	cmp    ebx,DWORD PTR [ebx-0x5c]
  419575:	dec    eax
  419576:	sahf   
  419577:	test   eax,0x8be3da35
  41957c:	sbb    al,0x8e
  41957e:	adc    eax,0x524030e3
  419583:	clc    
  419584:	fcomp  QWORD PTR [edi+0x21]
  419587:	lods   al,BYTE PTR ds:[esi]
  419588:	pushf  
  419589:	push   es
  41958a:	mov    al,ds:0x9a3f7bad
  41958f:	(bad)  
  419590:	cli    
  419591:	push   edi
  419592:	lds    edi,FWORD PTR [esi-0x45]
  419595:	push   esp
  419596:	(bad)  
  419597:	jae    0x419593
  419599:	addr16 xor al,0x62
  41959c:	jp     0x419531
  41959e:	call   0xf43b9bce
  4195a3:	or     al,bh
  4195a5:	push   ebx
  4195a6:	pop    edi
  4195a7:	cmp    eax,0xbc87672a
  4195ac:	pop    edi
  4195ad:	xor    dl,ch
  4195af:	in     al,0xbf
  4195b1:	mov    ecx,0xdb03d812
  4195b6:	inc    ecx
  4195b7:	dec    ebp
  4195b8:	mov    esp,0x44ce7b2b
  4195bd:	fs push eax
  4195bf:	inc    edi
  4195c0:	dec    eax
  4195c1:	aaa    
  4195c2:	xor    BYTE PTR [eax+esi*8],0x85
  4195c6:	ja     0x419638
  4195c8:	jo     0x419633
  4195ca:	jmp    0x41d:0x22ec88f5
  4195d1:	xor    eax,0x13039bd7
  4195d6:	test   ecx,edx
  4195d8:	arpl   WORD PTR ds:0x1219f063,cx
  4195de:	sar    BYTE PTR [edi+edi*1],1
  4195e1:	mov    bh,0x59
  4195e3:	ins    BYTE PTR es:[edi],dx
  4195e4:	mov    ah,0x12
  4195e6:	adc    esp,DWORD PTR [ebx+ebp*2+0x3a4e6416]
  4195ed:	jg     0x419662
  4195ef:	popf   
  4195f0:	jne    0x4195d4
  4195f2:	ins    DWORD PTR es:[edi],dx
  4195f3:	mov    ds:0xb6412d48,al
  4195f8:	pop    es
  4195f9:	mov    edi,0x47a8274
  4195fe:	jae    0x4195ee
  419600:	adc    DWORD PTR [ebx-0x22cc0079],edx
  419606:	jmp    0x4195f2
  419608:	fld    QWORD PTR [edi-0x6d]
  41960b:	xchg   ebp,eax
  41960c:	push   edx
  41960d:	push   ecx
  41960e:	adc    bl,dl
  419610:	pushf  
  419611:	inc    eax
  419612:	mov    cl,0x9a
  419614:	test   al,0xd5
  419617:	hlt    
  419618:	js     0x41967d
  41961a:	xor    DWORD PTR [ebx+0x1ce4f84],edx
  419620:	sti    
  419621:	and    BYTE PTR [esi+0x61],0xbe
  419625:	add    eax,0x1077bb89
  41962a:	scas   eax,DWORD PTR es:[edi]
  41962b:	mov    ch,0x2c
  41962d:	cmc    
  41962e:	dec    edx
  41962f:	sub    BYTE PTR [edi],0xec
  419632:	cdq    
  419633:	out    dx,eax
  419634:	add    DWORD PTR [edx],eax
  419636:	cmc    
  419637:	pop    es
  419638:	mov    dl,0xb5
  41963a:	sub    DWORD PTR ds:0x245468ca,esp
  419640:	lahf   
  419641:	pop    ds
  419642:	add    al,0xb9
  419644:	pop    edx
  419645:	out    dx,eax
  419646:	ss cs repnz nop
  41964a:	cmp    eax,0xd0518634
  41964f:	int    0xb7
  419651:	mov    WORD PTR [edi+0x63],gs
  419654:	ficom  DWORD PTR [eax]
  419656:	repnz mov BYTE PTR [edx+ecx*1],dl
  41965a:	adc    edi,esi
  41965c:	xchg   esp,eax
  41965d:	mov    esp,0x2cd6d48a
  419662:	iret   
  419663:	or     eax,0xf482da95
  419668:	mov    bh,0xdd
  41966a:	hlt    
  41966b:	int    0x3e
  41966d:	pushf  
  41966e:	inc    ebp
  41966f:	in     al,0x99
  419671:	outs   dx,BYTE PTR ds:[esi]
  419672:	mov    dh,0x17
  419674:	jns    0x41960b
  419676:	xor    DWORD PTR [eax+0x1b],0x2b
  41967a:	loopne 0x419656
  41967c:	cmp    al,0xee
  41967e:	mov    dh,0x6c
  419680:	adc    al,0x3e
  419682:	or     ebp,DWORD PTR [ebp-0x3d]
  419685:	dec    ebx
  419686:	inc    ebp
  419687:	or     BYTE PTR [eax+0x53],bl
  41968a:	xchg   edx,eax
  41968b:	push   eax
  41968c:	stos   DWORD PTR es:[edi],eax
  41968d:	xor    DWORD PTR [ebx],edi
  41968f:	popa   
  419690:	int    0xf1
  419692:	ror    bh,0xc9
  419695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419696:	lods   al,BYTE PTR ds:[esi]
  419697:	loopne 0x41961b
  419699:	dec    ecx
  41969a:	pop    edx
  41969b:	cdq    
  41969c:	xchg   edx,eax
  41969d:	and    DWORD PTR [ebp-0x2e80027c],ebp
  4196a3:	and    DWORD PTR [ebx+0x4157c916],ebp
  4196a9:	mov    edi,0xd5bdc021
  4196ae:	pop    ss
  4196af:	xlat   BYTE PTR ds:[ebx]
  4196b0:	test   ah,cl
  4196b2:	and    eax,0xf2553406
  4196b7:	pop    ebp
  4196b8:	hlt    
  4196b9:	jmp    0x419671
  4196bb:	dec    esp
  4196bc:	xchg   edx,eax
  4196bd:	scas   eax,DWORD PTR es:[edi]
  4196be:	push   eax
  4196c0:	inc    ebx
  4196c1:	add    DWORD PTR [edx+0x5c5cf249],esp
  4196c7:	into   
  4196c8:	stos   BYTE PTR es:[edi],al
  4196c9:	ja     0x419742
  4196cb:	rcl    BYTE PTR [eax-0x4871c7a6],0x7d
  4196d2:	rcl    ah,cl
  4196d4:	and    al,0xb5
  4196d6:	sahf   
  4196d7:	mov    dh,0x81
  4196d9:	enter  0xc301,0xc6
  4196dd:	cdq    
  4196de:	repz jle 0x419693
  4196e1:	cmc    
  4196e2:	jne    0x4196a2
  4196e4:	pop    esp
  4196e5:	idiv   DWORD PTR [eax+edx*2+0x68c20db2]
  4196ec:	add    DWORD PTR [edx-0x59],0xffffffdf
  4196f0:	adc    DWORD PTR [edx+0x60],ebx
  4196f3:	fistp  WORD PTR [ecx-0x7e61a9aa]
  4196f9:	xchg   esi,eax
  4196fa:	(bad)  
  4196fb:	xchg   ecx,eax
  4196fc:	aaa    
  4196fd:	mov    al,ds:0x523b8c7c
  419702:	ins    DWORD PTR es:[edi],dx
  419703:	sar    DWORD PTR fs:[eax],cl
  419706:	outs   dx,BYTE PTR ds:[esi]
  419707:	and    edx,DWORD PTR [edx+0xeaecb42]
  41970d:	out    dx,eax
  41970e:	popf   
  41970f:	stc    
  419710:	mov    edi,0xa2301aab
  419715:	xor    eax,0xb5919e99
  41971a:	xor    BYTE PTR [eax-0x4ee6f1a],dh
  419720:	dec    esp
  419721:	(bad)  
  419722:	pop    ecx
  419723:	adc    al,0xed
  419725:	pusha  
  419726:	pop    esi
  419727:	(bad)  
  419728:	(bad)  
  419729:	cmp    eax,0x4f34a343
  41972e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41972f:	pop    ds
  419730:	xor    al,0xe0
  419732:	pushf  
  419733:	dec    ebx
  419734:	sub    al,0x80
  419736:	dec    ebx
  419737:	shr    BYTE PTR [eax+ebx*8+0x7e7468f9],cl
  41973e:	mov    al,0xfd
  419740:	lods   eax,DWORD PTR ds:[esi]
  419741:	sbb    BYTE PTR [eax],dh
  419743:	fst    QWORD PTR [ebx-0x17]
  419746:	test   al,0x58
  419748:	mov    BYTE PTR [edi-0x625ac38b],dh
  41974e:	es jg  0x4197a1
  419751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419752:	int    0x5b
  419754:	and    edi,edi
  419756:	xchg   ebx,eax
  419757:	xor    DWORD PTR [ecx],edi
  419759:	jne    0x419745
  41975b:	jecxz  0x419792
  41975d:	fmulp  st(4),st
  41975f:	fwait
  419760:	pop    es
  419761:	call   edi
  419763:	loope  0x419744
  419765:	gs sti 
  419767:	and    edi,DWORD PTR [ecx]
  419769:	pop    ecx
  41976a:	and    eax,DWORD PTR [eax-0x7e072757]
  419770:	adc    eax,0x6a642683
  419775:	and    ecx,DWORD PTR [edi+0xe3ebbc7]
  41977b:	fisttp WORD PTR [edi-0x73f894b8]
  419781:	fucompp 
  419783:	xchg   esi,eax
  419784:	test   eax,0x8ebfb41e
  419789:	add    ebp,0xa6ac87ee
  41978f:	lea    edx,[edx]
  419791:	jae    0x41979a
  419793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419794:	mov    cl,0x76
  419796:	mov    dl,0xff
  419798:	mov    bl,0x5
  41979a:	repz dec ecx
  41979c:	es xchg esi,eax
  41979e:	push   0xffffffaa
  4197a0:	out    0xb3,al
  4197a2:	(bad)  
  4197a4:	ds out 0x3c,eax
  4197a7:	cdq    
  4197a8:	fisttp WORD PTR [eax-0xa]
  4197ab:	mov    ds:0xfd2c4852,eax
  4197b0:	xchg   esp,eax
  4197b1:	dec    esi
  4197b2:	fild   QWORD PTR [esi+0x2]
  4197b5:	jne    0x4197ee
  4197b7:	out    0x92,eax
  4197b9:	jecxz  0x419776
  4197bb:	dec    esi
  4197bc:	ror    cl,1
  4197be:	dec    ecx
  4197bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c0:	retf   
  4197c1:	jnp    0x41979d
  4197c3:	or     eax,DWORD PTR [edx+0x34]
  4197c6:	loope  0x41979e
  4197c8:	(bad)  
  4197c9:	repz jg 0x41974c
  4197cc:	jae    0x419789
  4197ce:	popa   
  4197cf:	xchg   ecx,eax
  4197d0:	jle    0x41979e
  4197d2:	mov    ds:0xebdfc414,al
  4197d7:	out    dx,al
  4197d8:	adc    ch,0xdd
  4197db:	inc    esi
  4197dc:	sbb    al,0xb8
  4197de:	rol    BYTE PTR [ecx],cl
  4197e0:	gs pop ebx
  4197e2:	adc    ah,ch
  4197e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e5:	xor    BYTE PTR [ebp*2+0x475caf9d],bl
  4197ec:	sbb    DWORD PTR [ecx],0x7f
  4197ef:	and    edx,DWORD PTR [eax]
  4197f1:	push   esp
  4197f2:	cmc    
  4197f3:	mov    BYTE PTR [ebx+0x71b9273d],0x5d
  4197fa:	adc    esi,edi
  4197fc:	data16 jge 0x4197b7
  4197ff:	adc    eax,0x3d5be121
  419804:	outs   dx,BYTE PTR ds:[esi]
  419805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419806:	outs   dx,DWORD PTR ds:[esi]
  419807:	icebp  
  419808:	add    edx,ebp
  41980a:	(bad)  
  41980b:	lock imul edi,DWORD PTR [edx],0xfffffffe
  41980f:	loopne 0x4197c4
  419811:	jo     0x419881
  419813:	pop    ecx
  419814:	test   DWORD PTR [eax+0xc16c8c],edx
  41981a:	retf   
  41981b:	dec    edi
  41981c:	js     0x41980f
  41981e:	push   edi
  41981f:	stc    
  419820:	xchg   edx,eax
  419821:	xchg   esi,eax
  419822:	mov    al,ds:0xc6393641
  419827:	and    esp,DWORD PTR [edi-0x5641be0]
  41982d:	and    ch,dl
  41982f:	int3   
  419830:	sub    dl,BYTE PTR [ebp+0x21]
  419833:	sub    al,0x9c
  419835:	(bad)  
  419836:	stc    
  419837:	xchg   edx,eax
  419838:	ret    
  419839:	inc    esi
  41983a:	push   esi
  41983b:	mov    ds:0x9bfe0069,al
  419840:	fadd   st(7),st
  419842:	xchg   ecx,eax
  419843:	pop    ds
  419844:	dec    eax
  419845:	es mov eax,0xd1086b48
  41984b:	repz lahf 
  41984d:	sahf   
  41984e:	add    ecx,ebp
  419850:	mov    WORD PTR [ecx+0x74],?
  419853:	push   0x3
  419855:	inc    edx
  419856:	jl     0x41984d
  419858:	(bad)  
  419859:	call   DWORD PTR [ecx*2+0x48dc14e6]
  419860:	or     eax,0xf3e8fb6e
  419865:	shl    edi,0xe6
  419868:	mov    al,ds:0x99ceddca
  41986d:	mov    bl,0x74
  41986f:	pop    edx
  419870:	xchg   ebx,eax
  419871:	(bad)  
  419872:	aaa    
  419873:	mov    BYTE PTR [eax-0x23],ah
  419876:	rcl    BYTE PTR [esi],1
  419878:	daa    
  419879:	in     eax,dx
  41987a:	pushf  
  41987b:	je     0x4198eb
  41987d:	scas   al,BYTE PTR es:[edi]
  41987e:	lea    ecx,[edi]
  419880:	je     0x419886
  419882:	sub    eax,0x3acd772b
  419887:	xlat   BYTE PTR ds:[ebx]
  419888:	repz ror DWORD PTR [esi],cl
  41988b:	mov    dl,0x78
  41988d:	shl    BYTE PTR [ebx+0x55cfddb7],0x49
  419894:	enter  0xfdd3,0x65
  419898:	dec    BYTE PTR [ecx-0x7b]
  41989b:	cld    
  41989c:	pop    esp
  41989d:	call   0x9e199627
  4198a2:	pusha  
  4198a3:	out    dx,al
  4198a4:	sbb    al,0x3a
  4198a6:	jb     0x4198e6
  4198a8:	or     bl,cl
  4198aa:	dec    ebx
  4198ab:	xor    al,0x78
  4198ad:	pop    eax
  4198ae:	sbb    ecx,DWORD PTR [edi]
  4198b0:	mov    esi,0x4e19c7f4
  4198b5:	aad    0x39
  4198b7:	xor    al,0x36
  4198b9:	paddb  mm1,QWORD PTR ds:0x56f53707
  4198c0:	xchg   edi,eax
  4198c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c2:	(bad)  [ebp+0x2b]
  4198c5:	and    bh,BYTE PTR [ebp+0x69]
  4198c8:	fstp   TBYTE PTR [esi+eiz*1]
  4198cb:	mov    ch,0x88
  4198cd:	jo     0x41992b
  4198cf:	sbb    eax,0xa5e5534e
  4198d4:	jle    0x41993d
  4198d6:	inc    eax
  4198d7:	arpl   di,bp
  4198d9:	push   ebp
  4198da:	jg     0x4198cc
  4198dc:	mov    al,0x64
  4198de:	add    al,BYTE PTR [ebp-0x68c6c39d]
  4198e4:	pop    ss
  4198e5:	loope  0x419909
  4198e7:	inc    ebp
  4198e8:	aaa    
  4198e9:	cmp    al,0xbc
  4198eb:	mov    esp,0xfbaae3d0
  4198f0:	pop    ebp
  4198f1:	in     al,dx
  4198f2:	popf   
  4198f3:	cmp    al,0x2e
  4198f5:	in     eax,dx
  4198f6:	stos   DWORD PTR es:[edi],eax
  4198f7:	icebp  
  4198f8:	adc    DWORD PTR [ebx-0x3d07610b],ecx
  4198fe:	mov    ecx,0x662938ea
  419903:	push   ecx
  419904:	cmp    eax,0x23bcd155
  419909:	push   esi
  41990a:	push   cs
  41990b:	xchg   ebp,eax
  41990c:	mul    BYTE PTR [ebp+0x1e883725]
  419912:	inc    BYTE PTR [ebp-0x3b]
  419915:	or     ch,BYTE PTR [eax+edx*4]
  419918:	inc    esi
  419919:	mov    ebx,eax
  41991b:	jecxz  0x419954
  41991d:	loope  0x41994f
  41991f:	push   edi
  419920:	or     eax,0xd621ccc0
  419925:	jg     0x4199a5
  419927:	ficom  DWORD PTR [eax]
  419929:	out    dx,al
  41992a:	add    eax,0x5185020e
  41992f:	xor    eax,0x2b9225a
  419934:	icebp  
  419935:	and    eax,0xa1ba6e6e
  41993a:	cmc    
  41993b:	inc    esi
  41993c:	ja     0x4198ec
  41993e:	cmc    
  41993f:	lahf   
  419940:	hlt    
  419941:	add    eax,0x349c73c
  419946:	xor    al,0xb3
  419948:	jecxz  0x41991d
  41994a:	icebp  
  41994b:	inc    edi
  41994c:	push   edx
  41994d:	(bad)  
  41994e:	out    dx,eax
  41994f:	sub    al,0x41
  419951:	in     eax,dx
  419952:	push   0x1f
  419954:	mov    al,0x2d
  419956:	fist   DWORD PTR [edx-0x44]
  419959:	push   edi
  41995a:	rcr    DWORD PTR [edx],1
  41995c:	jg     0x41996c
  41995e:	imul   esp,DWORD PTR [ebx-0x2a],0xd095338
  419965:	ins    DWORD PTR es:[edi],dx
  419966:	push   ebp
  419967:	inc    ebx
  419968:	and    esi,esi
  41996a:	nop
  41996b:	sbb    DWORD PTR [eax+edi*8+0x3c523ca7],0xb6566cd5
  419976:	add    BYTE PTR [eax+0x5642462d],ah
  41997c:	push   0x801d2e82
  419981:	stos   BYTE PTR es:[edi],al
  419982:	bound  eax,QWORD PTR [eax+0x77]
  419985:	xchg   edi,eax
  419986:	pop    ecx
  419987:	adc    al,0xb6
  419989:	es ins BYTE PTR es:[edi],dx
  41998b:	sub    eax,0x8ac606c0
  419990:	icebp  
  419991:	xchg   esi,eax
  419992:	stos   BYTE PTR es:[edi],al
  419993:	cmp    al,0x1b
  419995:	int3   
  419996:	cs jecxz 0x419985
  419999:	ja     0x419981
  41999b:	gs add eax,0xf5360f3d
  4199a1:	pop    esi
  4199a2:	into   
  4199a3:	jle    0x41997a
  4199a5:	and    ch,dh
  4199a7:	cmp    al,0xc4
  4199a9:	out    dx,eax
  4199aa:	ss xor bl,ah
  4199ad:	fnstcw WORD PTR [edx-0x5]
  4199b0:	xchg   esp,eax
  4199b1:	shr    BYTE PTR [ecx+0x60e9265d],cl
  4199b7:	je     0x66cce565
  4199bd:	cmp    al,0xaa
  4199bf:	jle    0x4199f8
  4199c1:	push   esp
  4199c2:	xor    eax,esp
  4199c4:	iret   
  4199c5:	out    dx,eax
  4199c6:	outs   dx,DWORD PTR ds:[esi]
  4199c7:	in     al,0x54
  4199c9:	xlat   BYTE PTR ds:[ebx]
  4199ca:	pop    es
  4199cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199cc:	mov    eax,0x4b615cfd
  4199d1:	das    
  4199d2:	pusha  
  4199d3:	and    BYTE PTR [esi],ch
  4199d5:	andnps xmm1,XMMWORD PTR [eax]
  4199d8:	gs sub eax,0x7be30c5
  4199de:	inc    ebx
  4199df:	xchg   esi,eax
  4199e0:	pusha  
  4199e1:	xor    eax,ecx
  4199e3:	fmul   DWORD PTR [eax-0xb]
  4199e6:	and    eax,0xfbe9348c
  4199eb:	add    DWORD PTR [ebp+0x7b],edx
  4199ee:	in     eax,0xe5
  4199f0:	into   
  4199f1:	int3   
  4199f2:	or     DWORD PTR [esi-0x4f],ecx
  4199f5:	cmp    al,0x9a
  4199f7:	adc    eax,0x55175c9a
  4199fc:	or     DWORD PTR [ebx],edi
  4199fe:	ffree  st(0)
  419a00:	arpl   cx,ax
  419a02:	ins    BYTE PTR es:[edi],dx
  419a03:	fs lahf 
  419a05:	or     bl,ah
  419a07:	pop    ebp
  419a08:	sbb    BYTE PTR ds:0x57be28ef,0x12
  419a0f:	sbb    DWORD PTR gs:[esi],ecx
  419a12:	xchg   DWORD PTR [ebp+edx*1-0x23a2432a],esp
  419a19:	mov    gs,ecx
  419a1b:	enter  0x3c54,0x2e
  419a1f:	sbb    al,0xa0
  419a21:	inc    edi
  419a22:	and    cl,BYTE PTR [eax+0x72]
  419a25:	mov    dh,0x6d
  419a27:	inc    edx
  419a28:	frstpm(287 only) 
  419a2a:	mov    bh,0xfe
  419a2c:	call   0x7abe4dce
  419a31:	push   ecx
  419a32:	fmul   st(5),st
  419a34:	push   esi
  419a35:	jecxz  0x419a60
  419a37:	mov    ch,0x7e
  419a39:	pop    ss
  419a3a:	(bad)  
  419a3c:	test   ebx,eax
  419a3e:	cmp    DWORD PTR [ebx+0x49b3ac6d],ebp
  419a44:	call   0x2515:0xd2318a4d
  419a4b:	ret    
  419a4c:	fdiv   QWORD PTR [edi+0x451ba92]
  419a52:	pop    ebx
  419a53:	ror    BYTE PTR [ebx],1
  419a55:	sbb    al,0xe3
  419a57:	mov    esp,0xbd1b41c7
  419a5c:	and    eax,0xf6668595
  419a61:	add    cl,ch
  419a63:	ret    0xf890
  419a66:	pop    ss
  419a67:	dec    esp
  419a68:	(bad)  
  419a69:	fcmovnbe st,st(0)
  419a6b:	dec    ecx
  419a6c:	sbb    BYTE PTR [ebp-0xd],0x5b
  419a70:	jns    0x419aab
  419a72:	mov    bl,0xe4
  419a74:	jno    0x419a44
  419a76:	and    al,0x98
  419a78:	mov    edx,0x55b4598d
  419a7d:	stc    
  419a7e:	xor    ecx,DWORD PTR [esi+0xb]
  419a81:	inc    edx
  419a82:	mov    esp,fs
  419a84:	dec    ecx
  419a85:	pop    esp
  419a86:	(bad)  [ebp-0x33533266]
  419a8c:	(bad)  
  419a8d:	lods   al,BYTE PTR ds:[esi]
  419a8e:	mov    dl,0x82
  419a90:	mov    WORD PTR [eax-0x386a289c],ss
  419a96:	add    DWORD PTR [ecx-0x4d],edx
  419a99:	xor    al,0x78
  419a9b:	add    bl,BYTE PTR [edx+0x1c]
  419a9e:	gs scas al,BYTE PTR es:[edi]
  419aa0:	xchg   edx,eax
  419aa1:	dec    esi
  419aa2:	ficom  WORD PTR ds:[eax+esi*4]
  419aa6:	xchg   ecx,eax
  419aa7:	mov    ebp,0xcc2080ca
  419aac:	in     eax,dx
  419aad:	pop    ss
  419aae:	jecxz  0x419ad0
  419ab0:	push   0x9f5954a1
  419ab5:	dec    edx
  419ab6:	stos   BYTE PTR es:[edi],al
  419ab7:	(bad)  
  419ab8:	into   
  419ab9:	mov    ah,BYTE PTR [eax+0xa]
  419abc:	mov    ebp,0x555c19e1
  419ac1:	stos   DWORD PTR es:[edi],eax
  419ac2:	in     eax,0x2e
  419ac4:	mov    ah,0x35
  419ac6:	xor    eax,0x32bdbb9c
  419acb:	or     eax,DWORD PTR [edi+0x34611a7f]
  419ad1:	push   eax
  419ad2:	xlat   BYTE PTR ds:[ebx]
  419ad3:	fs dec ebx
  419ad5:	rcr    BYTE PTR [esi-0x16],1
  419ad8:	or     BYTE PTR [eax+0x3e620179],bh
  419ade:	mov    cl,0x32
  419ae0:	xchg   ecx,eax
  419ae1:	jmp    0x419ab4
  419ae3:	arpl   WORD PTR [edi-0x706533e5],ax
  419ae9:	dec    ebp
  419aea:	in     al,0xa
  419aec:	(bad)  
  419aed:	push   ds
  419aee:	popf   
  419aef:	aad    0x4d
  419af1:	in     eax,dx
  419af2:	dec    DWORD PTR [edx]
  419af4:	dec    ebp
  419af5:	cmp    eax,0x39843ba6
  419afa:	jle    0x419b15
  419afc:	xchg   DWORD PTR [edi],ebp
  419afe:	jge    0x419b53
  419b00:	sub    ebp,DWORD PTR [ebp+0x42]
  419b03:	or     eax,0xf0a14a68
  419b08:	or     DWORD PTR [eax-0x661b84f0],edi
  419b0e:	mul    esp
  419b10:	jmp    DWORD PTR [edx+0x56ece82d]
  419b16:	jae    0x419acb
  419b18:	xchg   ebp,eax
  419b19:	push   ds
  419b1a:	sbb    al,0x8d
  419b1c:	imul   ecx,DWORD PTR [edx],0x496d2b19
  419b22:	jns    0x419af8
  419b24:	push   cs
  419b25:	pop    esi
  419b26:	pop    ds
  419b27:	arpl   WORD PTR [esi+0x5a0ca538],sp
  419b2d:	mov    edx,0x86ecc007
  419b32:	jo     0x419b60
  419b34:	lock sbb edi,DWORD PTR [ebp-0x1072b707]
  419b3b:	sbb    DWORD PTR [eax-0x2cd2b58],ecx
  419b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b42:	adc    al,0x8d
  419b44:	sti    
  419b45:	jg     0x419b49
  419b47:	mov    ah,0x47
  419b49:	cmp    bl,dl
  419b4b:	inc    eax
  419b4c:	xor    ax,0xf51
  419b50:	push   ebp
  419b51:	ja     0x419b71
  419b53:	test   ah,cl
  419b55:	test   al,0xda
  419b57:	repz xlat BYTE PTR ds:[ebx]
  419b59:	mov    ebx,0x783e4dc9
  419b5e:	int    0x1b
  419b60:	mov    WORD PTR [edi],?
  419b62:	add    BYTE PTR [ecx-0x73],bh
  419b65:	out    dx,eax
  419b66:	cmc    
  419b67:	aas    
  419b68:	jp     0x419b54
  419b6a:	call   0x76ee778c
  419b6f:	and    al,0x13
  419b71:	adc    eax,edi
  419b73:	fild   DWORD PTR [ebx+0x72]
  419b76:	daa    
  419b77:	and    BYTE PTR [ebp+0x33d63806],bl
  419b7d:	(bad)
  419b80:	enter  0x6ad6,0x98
  419b84:	or     eax,eax
  419b86:	dec    ebx
  419b87:	div    DWORD PTR [edi+ebp*2-0x46]
  419b8b:	pop    ebp
  419b8c:	xchg   ebp,eax
  419b8d:	adc    BYTE PTR [ebp+0xc98a9a9],al
  419b93:	sbb    dl,BYTE PTR [edi]
  419b95:	repnz adc al,0xdb
  419b98:	push   es
  419b99:	out    0xa6,al
  419b9b:	into   
  419b9c:	add    esi,DWORD PTR [ebx]
  419b9e:	mov    al,0x7f
  419ba0:	in     al,dx
  419ba1:	scas   al,BYTE PTR es:[edi]
  419ba2:	mov    ch,0x8f
  419ba4:	mov    esp,0x167a7abb
  419ba9:	nop
  419baa:	push   ecx
  419bab:	xor    dh,BYTE PTR [ecx+0x4b1cdb6]
  419bb1:	ins    BYTE PTR es:[edi],dx
  419bb2:	out    0xc9,al
  419bb4:	fild   QWORD PTR [eax+0x3f]
  419bb7:	push   esp
  419bb8:	cli    
  419bb9:	pop    es
  419bba:	dec    eax
  419bbb:	pop    ebp
  419bbc:	dec    eax
  419bbd:	mov    ds:0x1327da50,eax
  419bc2:	inc    eax
  419bc3:	push   ebp
  419bc4:	test   BYTE PTR [eax+0x3ef19066],bl
  419bca:	inc    ebx
  419bcb:	cld    
  419bcc:	sar    DWORD PTR ds:0x8dc21a47,1
  419bd2:	fdivr  QWORD PTR [edi+0x63]
  419bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bd6:	hlt    
  419bd7:	in     eax,dx
  419bd8:	push   esi
  419bd9:	pop    ss
  419bda:	xchg   edx,eax
  419bdb:	cwde   
  419bdc:	and    dh,BYTE PTR [ebx+eax*4+0x62]
  419be0:	xchg   DWORD PTR [edi-0xe],eax
  419be3:	ret    
  419be4:	or     BYTE PTR [esi],cl
  419be6:	push   0xffffffb0
  419be8:	ss xchg esp,eax
  419bea:	xor    al,0x89
  419bec:	mov    dh,0x7
  419bee:	jp     0x419bdb
  419bf0:	aas    
  419bf1:	and    al,0xd0
  419bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bf4:	xchg   BYTE PTR [edx-0x6a],dh
  419bf7:	push   eax
  419bf8:	mov    dl,0x20
  419bfa:	xor    ah,dl
  419bfc:	or     eax,0xd8b854ce
  419c01:	inc    edx
  419c02:	addr16 inc ebp
  419c04:	inc    esi
  419c05:	mov    ah,0x93
  419c07:	lock ja 0x419bda
  419c0a:	xor    ch,BYTE PTR [edx-0x15911f36]
  419c10:	aas    
  419c11:	js     0x419bee
  419c13:	loope  0x419bfc
  419c15:	fnstenv [eax-0x34]
  419c18:	inc    edi
  419c19:	out    dx,al
  419c1a:	or     al,0x4a
  419c1c:	(bad)  
  419c1d:	push   esp
  419c1e:	push   ds
  419c1f:	pop    edi
  419c20:	mov    bh,0x40
  419c22:	cs push ds
  419c24:	ror    bl,0xe0
  419c27:	inc    ecx
  419c28:	cld    
  419c29:	leave  
  419c2a:	into   
  419c2b:	aam    0x1f
  419c2d:	jle    0x419c24
  419c2f:	sahf   
  419c30:	imul   edx,DWORD PTR [ebp+0x43],0x64dc122f
  419c37:	cld    
  419c38:	cmp    eax,0x617f5cd5
  419c3d:	dec    esi
  419c3e:	pushf  
  419c3f:	and    edi,DWORD PTR [edi]
  419c41:	jecxz  0x419bf9
  419c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c44:	cmp    al,0x3e
  419c46:	jnp    0x419c7b
  419c48:	cs or  esp,edi
  419c4b:	out    0x3c,eax
  419c4d:	jecxz  0x419c14
  419c4f:	inc    ebx
  419c50:	xchg   ebx,eax
  419c51:	lds    esp,FWORD PTR [eax-0x174d0dfb]
  419c57:	xor    eax,0x13c8086b
  419c5c:	jp     0x419c07
  419c5e:	jb     0x419bfc
  419c60:	ficom  DWORD PTR [ebx+0x27]
  419c63:	sahf   
  419c64:	xlat   BYTE PTR ds:[ebx]
  419c65:	adc    al,0x8a
  419c67:	mov    ebx,0x300a06a6
  419c6c:	push   0x59fa6449
  419c71:	mov    eax,0xdc89bba9
  419c76:	leave  
  419c77:	sbb    ebp,DWORD PTR es:[ebx-0x2e5a2220]
  419c7e:	xor    edi,DWORD PTR [ecx+0x497e80bb]
  419c84:	and    edi,DWORD PTR [ebp-0x7c]
  419c87:	sbb    bh,cl
  419c89:	dec    edi
  419c8a:	leave  
  419c8b:	shl    ebp,cl
  419c8d:	and    edi,ecx
  419c8f:	retf   0x4ee4
  419c92:	shr    DWORD PTR [ebp+0x14a9ecb],0x7d
  419c99:	add    al,0x6e
  419c9b:	fldcw  WORD PTR ds:0x33ea4092
  419ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca2:	mov    eax,ds:0xff88a941
  419ca7:	int    0xf6
  419ca9:	sbb    DWORD PTR [ecx+ecx*4],0x224c9658
  419cb0:	fistp  QWORD PTR [ecx-0x3f]
  419cb3:	(bad)  
  419cb4:	adc    eax,0xfd79d57f
  419cb9:	ret    0xea34
  419cbc:	int3   
  419cbd:	jp     0x419ca0
  419cbf:	push   edi
  419cc0:	call   0xc829:0x4205c7f6
  419cc7:	inc    eax
  419cc8:	mov    ch,0xf0
  419cca:	loop   0x419d41
  419ccc:	xchg   edi,eax
  419ccd:	dec    ebp
  419cce:	add    al,BYTE PTR cs:[eax-0x2d]
  419cd2:	shl    BYTE PTR [ecx+ebx*1],1
  419cd5:	icebp  
  419cd6:	jmp    0x419d21
  419cd8:	mov    gs,WORD PTR ds:0x4d5db3a7
  419cde:	not    BYTE PTR [ebx-0x7c]
  419ce1:	add    eax,0x34800118
  419ce6:	stc    
  419ce7:	jb     0x419d4e
  419ce9:	mov    WORD PTR [edi],ss
  419ceb:	iret   
  419cec:	in     eax,0xc
  419cee:	addr16 retf 0x9568
  419cf2:	mov    ecx,0x69403c49
  419cf7:	xor    al,0xce
  419cf9:	cmp    DWORD PTR [ebx-0x3d39156b],esi
  419cff:	icebp  
  419d00:	pop    edi
  419d01:	mov    edi,0x41dc932f
  419d06:	add    al,0xb
  419d08:	or     DWORD PTR [eax-0x7fbea8d9],esi
  419d0e:	loop   0x419ce7
  419d10:	mov    fs,WORD PTR [eax-0x5b]
  419d13:	mov    eax,ds:0x4c944152
  419d18:	cmp    cl,BYTE PTR [esi-0x5355d06c]
  419d1e:	stos   BYTE PTR es:[edi],al
  419d1f:	ja     0x419cc0
  419d21:	sbb    BYTE PTR [edi-0x55],0x9b
  419d25:	rol    edx,0x6b
  419d28:	in     al,0x46
  419d2a:	or     ecx,DWORD PTR [ecx+eiz*8-0x21037b39]
  419d31:	pop    ebx
  419d32:	xor    eax,DWORD PTR [esi-0x75]
  419d35:	cld    
  419d36:	sub    eax,0xcb47b87e
  419d3b:	xchg   DWORD PTR [edx-0x2],edi
  419d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3f:	dec    eax
  419d40:	daa    
  419d41:	push   ecx
  419d42:	and    DWORD PTR [ebx-0x2a66dc4f],eax
  419d48:	(bad)  
  419d49:	mov    DWORD PTR [esi],esp
  419d4b:	(bad)  
  419d4c:	std    
  419d4d:	test   BYTE PTR [ebp+0x10],ch
  419d50:	dec    edx
  419d51:	jo     0x419ce3
  419d53:	xor    cl,ch
  419d55:	or     DWORD PTR [eax+ebx*8+0x56],esp
  419d59:	outs   dx,BYTE PTR ds:[esi]
  419d5a:	repz dec edx
  419d5c:	add    eax,0x7622c193
  419d61:	icebp  
  419d62:	aad    0xf
  419d64:	xchg   ecx,eax
  419d65:	jmp    0x5dc2103d
  419d6a:	jbe    0x419d1f
  419d6c:	xchg   ecx,eax
  419d6d:	jb     0x419d7e
  419d6f:	repz imul BYTE PTR [edx]
  419d72:	mov    esp,0xae0dd456
  419d77:	fidiv  WORD PTR [ecx+0x56f9c2c0]
  419d7d:	pop    es
  419d7e:	ret    0x8f5b
  419d81:	pop    esi
  419d82:	out    0x37,eax
  419d84:	and    al,0x6a
  419d86:	xor    al,0xb2
  419d88:	mov    eax,ecx
  419d8a:	xchg   ebp,eax
  419d8b:	int    0x8a
  419d8d:	loop   0x419dec
  419d8f:	test   BYTE PTR [edx-0x2c],ah
  419d92:	fst    DWORD PTR [ebx]
  419d94:	xor    BYTE PTR [eax],al
  419d96:	push   cs
  419d97:	enter  0xa10f,0x91
  419d9b:	loopne 0x419d90
  419d9d:	sti    
  419d9e:	mov    esp,DWORD PTR [ebx]
  419da0:	jge    0x419dbb
  419da2:	mov    ebx,0x175234ae
  419da7:	add    al,0x38
  419da9:	jge    0x419d95
  419dab:	mov    DWORD PTR [ecx],ebp
  419dad:	test   eax,0xd97ab044
  419db2:	fisub  DWORD PTR [ebx+eax*4-0x28d44a9b]
  419db9:	lds    ecx,FWORD PTR [ecx+0x6d0e4f5a]
  419dbf:	mov    esi,0x822dd06f
  419dc4:	xchg   edx,eax
  419dc5:	call   0x7f5e:0xfc2d025e
  419dcc:	in     eax,dx
  419dcd:	jp     0x419d78
  419dcf:	inc    ebx
  419dd0:	dec    ebp
  419dd1:	xor    eax,esp
  419dd3:	leave  
  419dd4:	loope  0x419d99
  419dd6:	loop   0x419e00
  419dd8:	xlat   BYTE PTR ds:[ebx]
  419dd9:	xchg   edx,eax
  419dda:	sub    eax,0x54b318ad
  419ddf:	outs   dx,DWORD PTR ds:[esi]
  419de0:	push   ds
  419de1:	and    esp,edi
  419de3:	icebp  
  419de4:	clc    
  419de5:	ja     0x419e5d
  419de7:	ret    0xe94b
  419dea:	cmp    al,0xe4
  419dec:	cwde   
  419ded:	fs pop ebp
  419def:	lods   al,BYTE PTR gs:[esi]
  419df1:	xchg   esp,eax
  419df2:	out    dx,al
  419df3:	lods   al,BYTE PTR ds:[esi]
  419df4:	inc    esp
  419df5:	inc    edi
  419df6:	outs   dx,BYTE PTR ds:[esi]
  419df7:	dec    edi
  419df8:	xchg   edx,eax
  419df9:	les    ebx,FWORD PTR [ecx]
  419dfb:	(bad)  
  419dfc:	mov    ds:0xc3c2c8f7,al
  419e01:	sub    DWORD PTR [ecx+0x5e9cae4],ebx
  419e07:	ss cmp edi,eax
  419e0a:	jmp    0x419d9c
  419e0c:	mov    bl,0xed
  419e0e:	jmp    0xfec2625b
  419e13:	out    dx,al
  419e14:	add    bl,dl
  419e16:	push   eax
  419e17:	mov    bl,BYTE PTR [edi-0x1d1a2ecc]
  419e1d:	dec    edi
  419e1e:	xchg   esi,eax
  419e1f:	xchg   ebx,eax
  419e20:	mov    ch,0x98
  419e22:	scas   eax,DWORD PTR es:[edi]
  419e23:	inc    edx
  419e24:	ret    
  419e25:	jmp    0xf1cb130e
  419e2a:	jecxz  0x419e70
  419e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2d:	fwait
  419e2e:	dec    ebx
  419e2f:	cmp    DWORD PTR [esi],ebx
  419e31:	mov    cs,WORD PTR ds:0x9e9dd95e
  419e37:	mov    eax,ds:0xbd7f7ebc
  419e3c:	sub    bl,BYTE PTR [edx+0x3a1d6d4f]
  419e42:	inc    esp
  419e43:	out    0xda,eax
  419e45:	es mov ch,0xf
  419e48:	ret    0x8a7d
  419e4b:	add    BYTE PTR [esi+edx*1],ch
  419e4e:	cld    
  419e4f:	lea    ebp,[ecx]
  419e51:	add    BYTE PTR [edi],ch
  419e53:	je     0x419df8
  419e55:	(bad)  
  419e56:	mov    ebp,0xe3bb650
  419e5b:	pop    eax
  419e5c:	or     eax,0xd4d5c69f
  419e61:	leave  
  419e62:	push   ebx
  419e63:	jno    0x419e9f
  419e65:	inc    BYTE PTR ds:0x4b5e240d
  419e6b:	xchg   esi,eax
  419e6c:	sti    
  419e6d:	jmp    eax
  419e6f:	(bad)  
  419e70:	mov    ebp,0x306f93d0
  419e75:	popa   
  419e76:	cmp    esi,ebx
  419e78:	and    BYTE PTR ds:0x6d9b1f3c,ch
  419e7e:	dec    ecx
  419e7f:	shl    cl,1
  419e81:	or     cl,BYTE PTR [edx]
  419e83:	dec    eax
  419e84:	lods   al,BYTE PTR ds:[esi]
  419e85:	and    eax,0xd13dccaa
  419e8a:	push   edx
  419e8b:	ds push ebx
  419e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8e:	out    0xf6,eax
  419e90:	xchg   ecx,eax
  419e91:	imul   eax,DWORD PTR [edx-0x6786a17e],0x3d5f3521
  419e9b:	add    ebx,DWORD PTR [ebp-0x45]
  419e9e:	cmp    eax,0xc4aa4a79
  419ea3:	cmp    bh,BYTE PTR ds:0xc53a772e
  419ea9:	inc    ebp
  419eaa:	cvtps2pi mm2,QWORD PTR [edi-0x3400b295]
  419eb1:	out    dx,al
  419eb2:	out    dx,al
  419eb3:	lea    eax,[edx]
  419eb5:	repz adc dl,al
  419eb8:	and    eax,0x3cddfc34
  419ebd:	pop    es
  419ebe:	dec    ebp
  419ebf:	sbb    ecx,DWORD PTR [edi]
  419ec1:	repnz mov cl,0x2
  419ec4:	inc    DWORD PTR [edi+0x7043b5f8]
  419eca:	(bad)  
  419ecb:	cmp    dh,BYTE PTR [edi-0x7a8c8cf0]
  419ed1:	mov    eax,gs
  419ed3:	(bad)
  419ed7:	in     eax,0x3e
  419ed9:	mov    al,ds:0x162e63ae
  419ede:	js     0x419ec2
  419ee0:	mov    esi,0xc245c973
  419ee5:	sbb    cl,ah
  419ee7:	call   0x8a1e:0x8759b6c5
  419eee:	lods   eax,DWORD PTR ds:[esi]
  419eef:	fnstcw WORD PTR [ecx-0x35120165]
  419ef5:	cmp    DWORD PTR ds:[esi+0x333c3faf],0xd1464b02
  419f00:	mov    BYTE PTR [ecx],dh
  419f02:	data16 or BYTE PTR [ebx+0x27],cl
  419f06:	xchg   esp,eax
  419f07:	xor    al,0x2e
  419f09:	xor    BYTE PTR [ecx-0x42],dh
  419f0c:	mov    al,ds:0x361bfe3a
  419f11:	jbe    0x419f6a
  419f13:	adc    ebp,ebp
  419f15:	(bad)  
  419f16:	push   esi
  419f17:	sbb    eax,0x20c037f5
  419f1c:	scas   al,BYTE PTR es:[edi]
  419f1d:	inc    ebx
  419f1e:	lds    esi,FWORD PTR [edx-0x65]
  419f21:	or     DWORD PTR [edx+0x73],ebp
  419f24:	pop    eax
  419f25:	sti    
  419f26:	frstor [ebx-0x59]
  419f29:	and    cl,BYTE PTR [eax+0x3ceaac39]
  419f2f:	aad    0xfb
  419f31:	push   esp
  419f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f33:	mov    cl,0x22
  419f35:	jg     0x419f25
  419f37:	dec    ebp
  419f38:	fucom  st(6)
  419f3a:	bound  esi,QWORD PTR [ecx+0x35]
  419f3d:	push   eax
  419f3e:	jmp    0x5cb4:0xca504b16
  419f45:	sti    
  419f46:	pop    ebx
  419f47:	sar    DWORD PTR fs:[esi-0x6c],cl
  419f4b:	jp     0x419f9c
  419f4d:	loop   0x419f33
  419f4f:	xor    eax,0x35107d38
  419f54:	test   al,0xe8
  419f56:	lea    esp,[esi-0x7b64f9d6]
  419f5c:	(bad)
  419f5f:	jne    0x419f61
  419f61:	jne    0x419fdb
  419f63:	fucomip st,st(6)
  419f65:	dec    eax
  419f66:	in     eax,dx
  419f67:	pop    ebx
  419f68:	inc    ebp
  419f69:	(bad)  
  419f6a:	rol    BYTE PTR [edx-0x74f80fd5],cl
  419f70:	in     eax,dx
  419f71:	imul   edi,DWORD PTR [ebx-0x79079000],0xffffffc2
  419f78:	push   DWORD PTR [ecx+0x77]
  419f7b:	sbb    al,0xd7
  419f7d:	pop    ss
  419f7e:	or     eax,ecx
  419f80:	jp     0x419fc2
  419f82:	pop    ss
  419f83:	loop   0x419f86
  419f85:	test   al,0xf8
  419f87:	ins    BYTE PTR es:[edi],dx
  419f88:	and    cl,BYTE PTR [edx-0x89ab60b]
  419f8e:	push   ebp
  419f8f:	push   edi
  419f90:	stos   BYTE PTR es:[edi],al
  419f91:	push   edx
  419f93:	pop    ebp
  419f94:	(bad)  
  419f95:	jecxz  0x419f45
  419f97:	ins    DWORD PTR es:[edi],dx
  419f98:	pop    ebp
  419f99:	xchg   ecx,eax
  419f9a:	and    al,0xc
  419f9c:	cmp    ebx,ecx
  419f9e:	jnp    0x419ff8
  419fa0:	add    DWORD PTR [eax+0x15],eax
  419fa3:	fld    QWORD PTR [edi+ebx*4]
  419fa6:	dec    eax
  419fa7:	std    
  419fa8:	test   eax,0x4547f8cc
  419fad:	js     0x419f3e
  419faf:	jmp    0xbb84:0xdced7f21
  419fb6:	mov    bh,0x7f
  419fb8:	lahf   
  419fb9:	dec    ebp
  419fba:	push   edi
  419fbb:	and    ebx,DWORD PTR [ebp-0x7f]
  419fbe:	jmp    0xc027:0x491fe865
  419fc5:	dec    ebp
  419fc6:	dec    esp
  419fc7:	mov    esp,0xf3b2de87
  419fcc:	jmp    0x419f6a
  419fce:	jp     0x41a026
  419fd0:	xor    DWORD PTR [edi+0x3c431328],edi
  419fd6:	push   esi
  419fd7:	inc    edi
  419fd8:	ds sbb edx,esp
  419fdb:	out    0xab,al
  419fdd:	xchg   esp,eax
  419fde:	dec    esp
  419fdf:	aam    0x41
  419fe1:	les    edx,FWORD PTR [edx]
  419fe3:	cmp    bh,dh
  419fe5:	mov    ebx,0x8948ba01
  419fea:	cmp    eax,ebx
  419fec:	pop    ecx
  419fed:	lods   al,BYTE PTR ds:[esi]
  419fee:	and    bh,BYTE PTR [ebp+0x2a739ad3]
  419ff4:	and    BYTE PTR ds:0xd20d44b,bh
  419ffa:	adc    eax,0x16a1137a
  419fff:	xor    ebx,DWORD PTR [ecx+edx*1-0x47]
  41a003:	repz retf 0xf520
  41a007:	mov    ch,0xb5
  41a009:	in     al,dx
  41a00a:	leave  
  41a00b:	mov    ch,BYTE PTR [edx]
  41a00d:	imul   ebx,DWORD PTR [esi],0x42215270
  41a013:	mov    al,0x32
  41a015:	in     al,0xcf
  41a017:	mov    bh,0x6
  41a019:	outs   dx,BYTE PTR ds:[esi]
  41a01a:	cmc    
  41a01b:	cwde   
  41a01c:	aas    
  41a01d:	enter  0x1b8b,0x9c
  41a021:	pop    ss
  41a022:	mov    bl,0x85
  41a024:	add    ah,bl
  41a026:	ins    DWORD PTR es:[edi],dx
  41a027:	or     eax,0x57478c6f
  41a02c:	int3   
  41a02d:	je     0x41a023
  41a02f:	pop    ebp
  41a030:	push   edi
  41a031:	outs   dx,BYTE PTR ds:[esi]
  41a032:	in     al,dx
  41a033:	ja     0x41a05d
  41a035:	jnp    0x41a07e
  41a037:	nop
  41a038:	dec    ebx
  41a039:	or     BYTE PTR [edi+0x75907187],dl
  41a03f:	aad    0xb
  41a041:	fsub   DWORD PTR [ecx]
  41a043:	sub    ebp,DWORD PTR [edx-0x44]
  41a046:	adc    eax,0xf6e71f
  41a04b:	aaa    
  41a04c:	pop    edi
  41a04d:	fisttp WORD PTR [eax-0x4b]
  41a050:	dec    ebx
  41a051:	enter  0xc2d6,0x6e
  41a055:	jg     0x41a080
  41a057:	inc    edi
  41a058:	jb     0x41a0c2
  41a05a:	std    
  41a05b:	jae    0x41a05d
  41a05d:	jbe    0x41a0d5
  41a05f:	into   
  41a060:	clc    
  41a061:	test   dl,dh
  41a063:	inc    esp
  41a064:	add    al,0xd2
  41a066:	sub    DWORD PTR [eax],esi
  41a068:	popa   
  41a069:	inc    edx
  41a06a:	mov    bl,al
  41a06c:	cld    
  41a06d:	hlt    
  41a06e:	or     eax,0x8a8c02dd
  41a073:	test   DWORD PTR ds:0xaac64879,ecx
  41a079:	xor    BYTE PTR [ebp+edx*8-0x7b5db133],bl
  41a080:	lea    ebp,[eax]
  41a082:	(bad)  
  41a083:	and    BYTE PTR [edi-0x4a],bl
  41a086:	loopne 0x41a071
  41a088:	out    dx,eax
  41a089:	mov    ds:0x740e1e3b,al
  41a08e:	int3   
  41a08f:	mov    edx,0x809ec11
  41a094:	mov    ?,WORD PTR [ebx]
  41a096:	push   ds
  41a097:	sub    al,0x42
  41a099:	or     cl,BYTE PTR [ecx]
  41a09b:	cmc    
  41a09c:	xlat   BYTE PTR ds:[ebx]
  41a09d:	rcl    BYTE PTR [ebx],cl
  41a09f:	mov    ebx,0x1be19311
  41a0a4:	sbb    BYTE PTR [di-0xe41],ah
  41a0a9:	sbb    esp,edi
  41a0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ac:	pop    edx
  41a0ad:	xchg   BYTE PTR [ecx],al
  41a0af:	lock sub edi,DWORD PTR [ecx-0x12]
  41a0b3:	arpl   WORD PTR [ecx+ebp*2+0x0],ax
  41a0b7:	pop    ss
  41a0b8:	push   ds
  41a0b9:	inc    esi
  41a0ba:	dec    ebx
  41a0bb:	push   ds
  41a0bc:	arpl   WORD PTR [ebp-0x63],cx
  41a0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c0:	call   0x69fa:0x3b2fafa0
  41a0c7:	data16 aas 
  41a0c9:	and    al,0xe
  41a0cb:	daa    
  41a0cc:	push   edi
  41a0cd:	dec    edx
  41a0ce:	cdq    
  41a0cf:	(bad)  
  41a0d0:	mov    bh,0xba
  41a0d2:	lea    edi,[edx+0x65c57755]
  41a0d8:	pop    ebp
  41a0d9:	xchg   edx,eax
  41a0da:	mov    eax,ds:0x96e3ef10
  41a0df:	call   0xaa8d:0x499f96c1
  41a0e6:	cmp    edi,ebp
  41a0e8:	xchg   esi,eax
  41a0e9:	inc    esi
  41a0ea:	outs   dx,BYTE PTR ds:[esi]
  41a0eb:	add    al,0xf0
  41a0ed:	mov    esp,0x60ea6962
  41a0f2:	shl    BYTE PTR [ecx-0x4692f29c],cl
  41a0f8:	sbb    DWORD PTR [eax],eax
  41a0fa:	mov    ecx,0x61b04f4e
  41a0ff:	sbb    DWORD PTR [ebx-0x9],ebp
  41a102:	in     al,0xbe
  41a104:	(bad)  
  41a105:	repz inc edi
  41a107:	or     DWORD PTR [edx],esp
  41a109:	pop    esp
  41a10a:	std    
  41a10b:	pop    ds
  41a10c:	pop    esi
  41a10d:	xlat   BYTE PTR ds:[ebx]
  41a10e:	lods   al,BYTE PTR ds:[esi]
  41a10f:	in     eax,dx
  41a110:	mov    ?,WORD PTR [edi]
  41a112:	fcmovbe st,st(2)
  41a114:	sub    ebp,DWORD PTR [ecx]
  41a116:	mov    ds:0x6a61143,al
  41a11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a11c:	repnz mov DWORD PTR [esi],ebx
  41a11f:	mov    ah,0x31
  41a121:	mov    eax,0x336a46b
  41a126:	mov    ecx,0xed7e3a82
  41a12b:	fdivr  QWORD PTR [edx+0x14]
  41a12e:	outs   dx,DWORD PTR ds:[esi]
  41a12f:	js     0x41a18e
  41a131:	sub    edi,esi
  41a133:	xchg   BYTE PTR [ecx-0x1f816086],al
  41a139:	cwde   
  41a13a:	mov    esi,0x9efd51c2
  41a13f:	mov    ebp,0xaed889e6
  41a144:	fisubr DWORD PTR [eax-0x2d]
  41a147:	pushf  
  41a148:	inc    esp
  41a149:	adc    eax,0xb1d4fe98
  41a14e:	pop    es
  41a14f:	jno    0x41a17f
  41a151:	inc    edx
  41a152:	pop    ss
  41a153:	xor    edx,ecx
  41a155:	cld    
  41a156:	fldcw  WORD PTR [edx+0x40]
  41a159:	int    0x6b
  41a15b:	push   esp
  41a15c:	jl     0x41a119
  41a15e:	pop    edx
  41a15f:	jns    0x41a17a
  41a161:	neg    ecx
  41a163:	mov    edx,0xf79369ba
  41a168:	callw  0xa5c8
  41a16c:	pop    ebp
  41a16d:	mov    edi,0x7151a0b0
  41a172:	inc    edi
  41a173:	pop    es
  41a174:	xor    al,0x79
  41a176:	sub    al,0xb
  41a178:	call   0x3e029e88
  41a17d:	imul   ebp,esi,0xf51552de
  41a183:	mov    ebx,0xf0a77939
  41a188:	loopne 0x41a150
  41a18a:	fs cs and eax,0x1ed2a351
  41a191:	pushf  
  41a192:	mov    ebp,DWORD PTR [esi]
  41a194:	sbb    eax,0xd0133e02
  41a199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a19a:	push   esp
  41a19b:	dec    edi
  41a19c:	cmp    esp,DWORD PTR [esi+edx*1-0x369dc93b]
  41a1a3:	pop    ss
  41a1a4:	aaa    
  41a1a5:	pop    ebp
  41a1a6:	out    dx,al
  41a1a7:	mov    bh,0x18
  41a1a9:	xchg   ebx,eax
  41a1aa:	stc    
  41a1ab:	mov    ds:0xa5825c5e,al
  41a1b0:	scas   al,BYTE PTR es:[edi]
  41a1b1:	add    al,0xc6
  41a1b3:	push   ecx
  41a1b4:	jmp    0x82fd879a
  41a1b9:	adc    dl,BYTE PTR [edx+0x3a19684]
  41a1bf:	cdq    
  41a1c0:	pusha  
  41a1c1:	outs   dx,BYTE PTR ds:[esi]
  41a1c2:	push   ecx
  41a1c3:	or     al,0x45
  41a1c5:	pop    edx
  41a1c6:	retf   0x9754
  41a1c9:	push   esp
  41a1ca:	adc    DWORD PTR [ebp+0xb2becd4],ecx
  41a1d0:	xor    ah,BYTE PTR [ebx-0x61]
  41a1d3:	push   cs
  41a1d4:	xchg   esp,eax
  41a1d5:	dec    eax
  41a1d6:	push   0xffffff90
  41a1d8:	inc    ecx
  41a1d9:	or     al,0x6
  41a1db:	xlat   BYTE PTR ds:[ebx]
  41a1dc:	or     al,0x11
  41a1de:	sbb    esi,0x870807e7
  41a1e4:	cwde   
  41a1e5:	adc    BYTE PTR [ebp-0x3a698ede],0xc9
  41a1ec:	dec    edx
  41a1ed:	(bad)  
  41a1ee:	outs   dx,DWORD PTR ds:[esi]
  41a1ef:	push   0x42
  41a1f1:	mov    ds:0xfaf2cd12,eax
  41a1f6:	push   cs
  41a1f7:	cmp    dh,ch
  41a1f9:	jecxz  0x41a20f
  41a1fb:	mov    eax,esi
  41a1fd:	jle    0x41a1df
  41a1ff:	lock neg BYTE PTR [eax-0x6ca7b823]
  41a206:	dec    edi
  41a207:	push   ss
  41a208:	and    dh,cl
  41a20a:	push   0xffffff9c
  41a20c:	ss ret 
  41a20e:	hlt    
  41a20f:	xchg   edi,eax
  41a210:	fadd   st,st(5)
  41a212:	and    eax,DWORD PTR [ebx-0x5dbef158]
  41a218:	xor    al,BYTE PTR [edi-0x60e14a7b]
  41a21e:	jge    0x41a210
  41a220:	add    al,BYTE PTR [esi-0x3799abf6]
  41a226:	arpl   WORD PTR [esp+esi*4],di
  41a229:	jp     0x41a1f6
  41a22b:	cwde   
  41a22c:	xor    BYTE PTR [edi-0x30],ch
  41a22f:	lds    ebp,FWORD PTR [esi]
  41a231:	adc    ebp,DWORD PTR [esi]
  41a233:	icebp  
  41a234:	rol    DWORD PTR [esi-0x43],0x5f
  41a238:	jne    0x41a2a7
  41a23a:	in     al,0xcd
  41a23c:	cs test ebx,ebx
  41a23f:	dec    edx
  41a240:	sbb    eax,0xa5eefa72
  41a245:	sub    eax,0x60ab8da3
  41a24a:	imul   esi,edi,0x1
  41a24d:	xor    ebp,ebp
  41a24f:	inc    ebp
  41a250:	pop    ebx
  41a251:	mov    ch,0x8b
  41a253:	stc    
  41a254:	mov    eax,0x21b57920
  41a259:	leave  
  41a25a:	mov    cl,0xfa
  41a25c:	xchg   ebp,eax
  41a25d:	cmc    
  41a25e:	mov    bh,0xbc
  41a260:	xchg   esi,eax
  41a261:	lods   al,BYTE PTR ss:[esi]
  41a263:	push   edx
  41a264:	and    dh,BYTE PTR [eax]
  41a266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a267:	push   esi
  41a268:	cmp    esp,DWORD PTR [edx]
  41a26a:	sbb    DWORD PTR [eax+0x2b],ecx
  41a26d:	sbb    dl,bh
  41a26f:	push   edi
  41a270:	push   ss
  41a271:	jnp    0x41a2ee
  41a273:	inc    eax
  41a274:	or     cl,0xee
  41a277:	outs   dx,BYTE PTR ds:[esi]
  41a278:	sub    al,0x9d
  41a27a:	call   0x3829:0xbe324ab2
  41a281:	jmp    0x41a256
  41a283:	jmp    0xbb81:0xc5534375
  41a28a:	mov    ch,BYTE PTR ds:0x5e61b419
  41a290:	dec    eax
  41a291:	fadd   DWORD PTR ds:0xefb670e9
  41a297:	out    dx,al
  41a298:	out    dx,al
  41a299:	sbb    eax,0x5c0324db
  41a29e:	jge    0x41a22d
  41a2a0:	mov    ecx,0xbce0ee99
  41a2a5:	test   DWORD PTR [eax-0x24a6bafc],esp
  41a2ab:	dec    ebp
  41a2ac:	mov    esp,0x1082d067
  41a2b1:	mov    esp,0xe46ae289
  41a2b6:	mov    BYTE PTR [eax+0x7e],dh
  41a2b9:	push   0x32d97b71
  41a2be:	add    DWORD PTR [eax-0x337089aa],edi
  41a2c4:	call   0x9212:0xbe094531
  41a2cb:	shl    BYTE PTR [ecx-0x25f66b3a],0x2
  41a2d2:	and    al,0x36
  41a2d4:	jno    0x41a2a8
  41a2d6:	dec    ebp
  41a2d7:	gs out dx,eax
  41a2d9:	jmp    0x41a29e
  41a2db:	or     eax,0x961cc576
  41a2e0:	mov    al,0xfa
  41a2e2:	mov    bh,0x3e
  41a2e4:	loopne 0x41a2de
  41a2e6:	and    eax,0xec8d693c
  41a2eb:	adc    eax,0xbd49060c
  41a2f0:	retf   
  41a2f1:	mov    ds:0xae56cdc4,eax
  41a2f6:	(bad)
  41a2f9:	ins    BYTE PTR es:[edi],dx
  41a2fa:	stc    
  41a2fb:	jo     0x41a2f3
  41a2fd:	dec    esi
  41a2fe:	dec    ebx
  41a2ff:	jmp    0xeb7c:0x4aa6e96b
  41a306:	add    al,0xc6
  41a308:	call   FWORD PTR [edx-0x37]
  41a30b:	xlat   BYTE PTR ds:[ebx]
  41a30c:	imul   esi,eax,0xfffffff9
  41a30f:	sbb    DWORD PTR [edi+ebp*4+0x62da3e5b],eax
  41a316:	test   eax,0xa8aa9fae
  41a31b:	imul   ecx,DWORD PTR [ecx+0x1779d68c],0x43
  41a322:	mov    ch,BYTE PTR [ecx]
  41a324:	jmp    0xd7148317
  41a329:	cmp    al,0xc2
  41a32b:	sbb    ecx,esp
  41a32d:	add    al,0xa0
  41a32f:	js     0x41a365
  41a331:	mov    eax,ds:0x8fa6efd5
  41a336:	in     al,dx
  41a337:	or     al,0xd1
  41a339:	ins    BYTE PTR es:[edi],dx
  41a33a:	ror    DWORD PTR [ebp-0x19],cl
  41a33d:	addr16 pop ss
  41a33f:	(bad)  
  41a340:	std    
  41a341:	clc    
  41a342:	xor    DWORD PTR [esi+0x75],0x9e22e2cc
  41a349:	mov    edx,0x97657e70
  41a34e:	addr16 call 0x6bb7:0xc5a63598
  41a356:	loope  0x41a369
  41a358:	push   edi
  41a359:	stos   BYTE PTR es:[edi],al
  41a35a:	outs   dx,BYTE PTR ds:[esi]
  41a35b:	int3   
  41a35c:	bound  eax,QWORD PTR [ecx+0x2151597]
  41a362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a363:	push   0x85b56169
  41a368:	mov    cl,0x49
  41a36a:	push   es
  41a36b:	push   ecx
  41a36c:	lea    esi,[esp+eax*4]
  41a36f:	int3   
  41a370:	adc    DWORD PTR [ecx+0x71674342],0x2252aab9
  41a37a:	xor    DWORD PTR [ebx-0x18],ebp
  41a37d:	sbb    ebp,ebx
  41a37f:	add    DWORD PTR [edi-0xc158977],ecx
  41a385:	xchg   esp,eax
  41a386:	(bad)  
  41a387:	(bad)  [edi+0x43]
  41a38a:	minps  xmm5,xmm3
  41a38d:	mov    ebx,0xb1b38619
  41a392:	retf   0xda7e
  41a395:	scas   al,BYTE PTR es:[edi]
  41a396:	inc    esi
  41a397:	jl     0x41a323
  41a399:	clc    
  41a39a:	(bad)  
  41a39b:	(bad)
  41a39f:	std    
  41a3a0:	mov    ah,0x71
  41a3a2:	lods   al,BYTE PTR ds:[esi]
  41a3a3:	lds    edi,FWORD PTR [esi-0x13]
  41a3a6:	jmp    DWORD PTR ss:[eax+edx*2-0x57]
  41a3ab:	bt     DWORD PTR [esi-0x24],0x3f
  41a3b0:	sub    eax,0xea163ee7
  41a3b5:	ds xor al,0x3d
  41a3b8:	dec    edx
  41a3b9:	jne    0x41a385
  41a3bb:	xor    BYTE PTR [edx+0x2a6d8295],cl
  41a3c1:	sbb    DWORD PTR [eax+0x1a820cb9],esp
  41a3c7:	add    dh,BYTE PTR [eax+0x2f]
  41a3ca:	les    edx,FWORD PTR [edx+0x6633a838]
  41a3d0:	mov    esp,0x773e0e73
  41a3d5:	loopne 0x41a42f
  41a3d7:	test   DWORD PTR [eax-0x19ddf7b4],ebx
  41a3dd:	scas   eax,DWORD PTR es:[edi]
  41a3de:	mov    ds:0xb6d21576,eax
  41a3e3:	mov    ebp,0xd9cf5420
  41a3e8:	nop
  41a3e9:	stc    
  41a3ea:	dec    ecx
  41a3eb:	push   edi
  41a3ec:	dec    ebx
  41a3ed:	jge    0x41a45c
  41a3ef:	sbb    eax,0x1a924d6
  41a3f4:	hlt    
  41a3f5:	sub    al,0x54
  41a3f7:	retf   
  41a3f8:	popf   
  41a3f9:	sbb    BYTE PTR [ebx],al
  41a3fb:	in     al,dx
  41a3fc:	pop    ecx
  41a3fd:	test   al,0x8f
  41a3ff:	jmp    0x41a3e7
  41a401:	xchg   ebx,eax
  41a402:	lods   al,BYTE PTR ds:[esi]
  41a403:	push   esi
  41a404:	jmp    0x41a3ef
  41a406:	sti    
  41a407:	cmp    eax,0xe10fb957
  41a40c:	lock in eax,0xbf
  41a40f:	clc    
  41a410:	xchg   esp,eax
  41a411:	scas   eax,DWORD PTR es:[edi]
  41a412:	xchg   edx,eax
  41a413:	inc    ebp
  41a414:	test   DWORD PTR [edi],edx
  41a416:	ins    BYTE PTR es:[edi],dx
  41a417:	stos   DWORD PTR es:[edi],eax
  41a418:	jmp    0xd0c28bf1
  41a41d:	aad    0x2a
  41a41f:	hlt    
  41a420:	ret    0x2757
  41a423:	out    0x1c,al
  41a425:	push   ds
  41a426:	mov    dh,ah
  41a428:	sub    esp,0x6e
  41a42b:	push   ds
  41a42c:	mov    edi,0x2875f81f
  41a431:	ins    BYTE PTR es:[edi],dx
  41a432:	dec    edx
  41a433:	dec    ecx
  41a434:	xlat   BYTE PTR ds:[ebx]
  41a435:	xchg   BYTE PTR [edx],dl
  41a437:	ror    dh,cl
  41a439:	shr    BYTE PTR [esi],1
  41a43b:	adc    dl,bh
  41a43d:	jmp    0x41a40c
  41a43f:	or     DWORD PTR [ebx],ecx
  41a441:	retf   
  41a442:	fimul  DWORD PTR [ebp+0x2aae7df5]
  41a448:	outs   dx,BYTE PTR ds:[esi]
  41a449:	fdivr  DWORD PTR [edx-0x3b193639]
  41a44f:	(bad)  
  41a450:	lea    eax,ds:0xc6cfcd73
  41a456:	cli    
  41a457:	mov    ah,0xae
  41a459:	push   ebx
  41a45a:	js     0x41a4b4
  41a45c:	retf   0x271e
  41a45f:	jnp    0x41a458
  41a461:	pop    edx
  41a462:	add    bl,al
  41a464:	jae    0x41a49b
  41a466:	inc    ebx
  41a467:	out    0xd7,eax
  41a469:	xor    DWORD PTR ds:0x5f3248b1,0x4f44e499
  41a473:	arpl   WORD PTR ds:0x2ea544b4,bp
  41a479:	sti    
  41a47a:	inc    edx
  41a47b:	pop    edx
  41a47c:	pop    ebp
  41a47d:	jmp    0xe9bd:0x5f2faa0a
  41a484:	sub    BYTE PTR [ecx],bl
  41a486:	jne    0x41a4b7
  41a488:	inc    esi
  41a489:	in     eax,0xce
  41a48b:	jnp    0x41a475
  41a48d:	adc    BYTE PTR [ecx-0x6e2b8b0e],bl
  41a493:	sub    eax,DWORD PTR ds:[esi]
  41a496:	pop    ebp
  41a497:	pop    ebp
  41a498:	and    al,0x6b
  41a49a:	dec    ebx
  41a49b:	leave  
  41a49c:	jae    0x41a4c8
  41a49e:	out    dx,al
  41a49f:	in     eax,dx
  41a4a0:	xchg   esp,eax
  41a4a1:	data16 je 0x41a4cc
  41a4a4:	jle    0x41a478
  41a4a6:	jo     0x41a451
  41a4a8:	add    bh,0xda
  41a4ab:	fucomp st(7)
  41a4ad:	cmp    eax,DWORD PTR [edx+ebp*1]
  41a4b0:	in     eax,dx
  41a4b1:	sub    eax,DWORD PTR [esi-0x75a5ded5]
  41a4b7:	sub    eax,0x25572b1e
  41a4bc:	int3   
  41a4bd:	push   eax
  41a4be:	(bad)  
  41a4bf:	inc    ebp
  41a4c0:	adc    edx,DWORD PTR [ecx+0x3e9a8c58]
  41a4c6:	in     al,dx
  41a4c7:	or     al,0x1e
  41a4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ca:	jmp    0x41a47e
  41a4cc:	loopne 0x41a46a
  41a4ce:	sbb    al,0x20
  41a4d0:	repz mov al,ds:0xdca58039
  41a4d6:	ss dec esp
  41a4d8:	bound  esp,QWORD PTR [esi+ecx*4]
  41a4db:	dec    ecx
  41a4dc:	idiv   BYTE PTR [ebx]
  41a4de:	cmp    eax,0x52b3cbb5
  41a4e3:	jmp    0xb785a88e
  41a4e8:	cs mov bh,0xd0
  41a4eb:	adc    BYTE PTR [eax+0x1d],0x64
  41a4ef:	cmp    edx,ecx
  41a4f1:	push   es
  41a4f2:	push   edx
  41a4f3:	xchg   ecx,eax
  41a4f4:	add    eax,0x67ae962e
  41a4f9:	fldcw  WORD PTR [edx+0x66b7653a]
  41a4ff:	mov    ebx,0x73b70027
  41a504:	ss cmp eax,0xed4ee751
  41a50a:	sbb    ch,BYTE PTR [edx+0x74be717e]
  41a510:	test   ebx,eax
  41a512:	or     esp,edi
  41a514:	jp     0x41a51d
  41a516:	jnp    0x41a515
  41a518:	or     eax,0x2df2805d
  41a51d:	add    DWORD PTR [edi],0xffffffd3
  41a520:	mov    al,ds:0xf5ced922
  41a525:	cmc    
  41a526:	adc    ch,BYTE PTR [esi]
  41a528:	and    al,0x35
  41a52a:	les    ecx,FWORD PTR [esi]
  41a52c:	lods   al,BYTE PTR ds:[esi]
  41a52d:	or     al,0xb2
  41a52f:	mov    dh,0xd8
  41a531:	cmp    BYTE PTR [edi],cl
  41a533:	retf   0x502a
  41a536:	sub    eax,ebp
  41a538:	fwait
  41a539:	sub    al,0xe9
  41a53b:	mov    eax,ds:0xdb781bdb
  41a540:	loopne 0x41a507
  41a542:	xchg   ebp,eax
  41a543:	das    
  41a544:	rcr    DWORD PTR [ecx+ebp*1+0x4a7596aa],1
  41a54b:	out    dx,al
  41a54c:	fdiv   DWORD PTR [ebp+0x4d]
  41a54f:	out    0x4a,al
  41a551:	jno    0x41a4f5
  41a553:	retf   
  41a554:	fdivr  DWORD PTR fs:[edi]
  41a557:	outs   dx,DWORD PTR gs:[esi]
  41a559:	aas    
  41a55a:	jecxz  0x41a589
  41a55c:	mov    ebx,0x1932027a
  41a561:	adc    BYTE PTR [edi-0xb8be53e],dl
  41a567:	push   ebp
  41a568:	inc    esp
  41a569:	xlat   BYTE PTR ds:[ebx]
  41a56a:	ret    
  41a56b:	bnd ret 0xff0e
  41a56f:	sbb    DWORD PTR [esi-0x7ec89f3],0xa43c7b02
  41a579:	or     DWORD PTR [eax+0x149e5856],ebp
  41a57f:	push   ebx
  41a580:	xor    al,0x73
  41a582:	and    esp,DWORD PTR [edx-0xc890c82]
  41a588:	popf   
  41a589:	mov    ch,0xd6
  41a58b:	lahf   
  41a58c:	loopne 0x41a574
  41a58e:	push   edi
  41a58f:	inc    ebx
  41a590:	lock cmp eax,0x31a4b364
  41a596:	xchg   edx,eax
  41a597:	mov    al,0x9d
  41a599:	jo     0x41a568
  41a59b:	sub    DWORD PTR [ebx+0x6b76409f],0x31c887aa
  41a5a5:	gs pushf 
  41a5a7:	arpl   WORD PTR [esi-0x54],si
  41a5aa:	sbb    al,0x16
  41a5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5ad:	add    eax,0x611ac161
  41a5b2:	dec    edx
  41a5b3:	adc    ebx,esi
  41a5b5:	pminsw mm2,QWORD PTR [esi]
  41a5b8:	push   eax
  41a5b9:	add    BYTE PTR [edx],dh
  41a5bb:	jmp    0xd73b11d2
  41a5c0:	xchg   edi,eax
  41a5c1:	cwde   
  41a5c2:	mov    edi,0x5a805761
  41a5c7:	cmc    
  41a5c8:	sbb    BYTE PTR [esi-0x36],ch
  41a5cb:	call   0x702f5e7f
  41a5d0:	xchg   DWORD PTR [eax-0x6b],esp
  41a5d3:	dec    ebx
  41a5d4:	push   ecx
  41a5d5:	mov    ecx,0x357bacb6
  41a5da:	(bad)  
  41a5db:	pop    ebx
  41a5dc:	out    0x85,al
  41a5de:	out    dx,eax
  41a5df:	(bad)  
  41a5e0:	push   ebp
  41a5e1:	outs   dx,BYTE PTR ds:[esi]
  41a5e2:	mov    dh,0xbf
  41a5e4:	mov    ah,0xed
  41a5e6:	mov    al,ds:0xf5ba53df
  41a5eb:	(bad)  
  41a5ec:	fmul   DWORD PTR [ebx+0x46]
  41a5ef:	mov    dl,0x2f
  41a5f1:	inc    eax
  41a5f2:	imul   esi,esp,0xffffff8a
  41a5f5:	or     eax,0xe4ae1e17
  41a5fa:	jmp    0x1647:0xd4e725f4
  41a601:	clc    
  41a602:	add    eax,0xe57af9e2
  41a607:	add    BYTE PTR [ecx-0x6e],ah
  41a60a:	mov    eax,0xe201cb04
  41a60f:	mov    BYTE PTR [ebx-0x6e767d8d],al
  41a615:	mov    ebp,eax
  41a617:	or     dl,bl
  41a619:	cmp    ah,dh
  41a61b:	xor    dh,bl
  41a61d:	push   ebx
  41a61e:	cli    
  41a61f:	inc    edi
  41a620:	add    DWORD PTR ds:0x76340036,edi
  41a626:	(bad)  
  41a627:	and    esi,DWORD PTR [ecx+ecx*1+0x2a]
  41a62b:	fild   DWORD PTR [eax+eax*1+0x26]
  41a62f:	push   0xfffffff0
  41a631:	dec    esi
  41a632:	dec    ebp
  41a633:	cmp    ebx,ebp
  41a635:	inc    edx
  41a636:	retf   0x56d4
  41a639:	fldenv [ecx-0x4b4dd36d]
  41a63f:	sbb    DWORD PTR [eax+edi*4+0xf],esp
  41a643:	fimul  DWORD PTR [edi-0x22]
  41a646:	sub    eax,0x93295070
  41a64b:	xor    esp,DWORD PTR [edi]
  41a64d:	fsub   QWORD PTR [ebp+0x23]
  41a650:	cwde   
  41a651:	push   esp
  41a652:	mov    ebp,es
  41a654:	pop    edx
  41a655:	push   esi
  41a656:	les    edi,FWORD PTR [edx]
  41a658:	ins    DWORD PTR es:[edi],dx
  41a659:	(bad)  
  41a65a:	ror    BYTE PTR [ebx+0x22aca54c],1
  41a660:	in     eax,0xa7
  41a662:	das    
  41a663:	xchg   BYTE PTR [edx],ch
  41a665:	gs adc cl,cl
  41a668:	mov    ebx,0xb863af1f
  41a66d:	loope  0x41a60f
  41a66f:	pushf  
  41a670:	ret    
  41a671:	scas   al,BYTE PTR es:[edi]
  41a672:	stos   DWORD PTR es:[edi],eax
  41a673:	add    eax,esi
  41a675:	inc    edi
  41a676:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a678:	pop    esp
  41a679:	bound  esp,QWORD PTR [esi+0x374d7717]
  41a67f:	push   es
  41a680:	push   es
  41a681:	repz pop es
  41a683:	pop    ebx
  41a684:	outs   dx,DWORD PTR ds:[esi]
  41a685:	dec    esi
  41a686:	push   0xf2c091c4
  41a68b:	aam    0x6f
  41a68d:	cwde   
  41a68e:	sti    
  41a68f:	sbb    al,0x49
  41a691:	hlt    
  41a692:	adc    BYTE PTR [ebx-0x2a1abd31],dl
  41a698:	pop    edx
  41a699:	shr    ah,cl
  41a69b:	addr16 mov ds,edx
  41a69e:	lods   al,BYTE PTR ds:[esi]
  41a69f:	in     eax,dx
  41a6a0:	aas    
  41a6a1:	aas    
  41a6a2:	or     eax,0xa8322e73
  41a6a7:	test   al,0x5a
  41a6a9:	xor    DWORD PTR [ebx],esi
  41a6ab:	mov    ds:0xece61685,eax
  41a6b0:	push   edi
  41a6b1:	jecxz  0x41a70a
  41a6b3:	cmp    edi,ecx
  41a6b5:	ins    BYTE PTR es:[edi],dx
  41a6b6:	or     bl,BYTE PTR [ecx]
  41a6b8:	xor    eax,DWORD PTR [esi+ecx*4+0x51e5f6d0]
  41a6bf:	mov    BYTE PTR [ebp-0x6f8eed2b],cl
  41a6c5:	cmp    BYTE PTR [edi+0xe],bl
  41a6c8:	cmp    ebp,DWORD PTR [esi+0x608ab461]
  41a6ce:	or     BYTE PTR [esp+ebp*8+0x68],cl
  41a6d2:	fild   QWORD PTR [eax+0x119a8ac3]
  41a6d8:	sbb    al,BYTE PTR [edi-0x2628af6f]
  41a6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6df:	pushw  es
  41a6e1:	jne    0x41a6fc
  41a6e3:	das    
  41a6e4:	cmp    DWORD PTR [ebx+0x66],eax
  41a6e7:	mov    eax,0x35043d02
  41a6ec:	xor    DWORD PTR [ebx+0x651df942],0xffffffc9
  41a6f3:	adc    BYTE PTR [edi-0x4f],ah
  41a6f6:	sti    
  41a6f7:	pop    esi
  41a6f8:	and    eax,0xef5d66d8
  41a6fd:	in     eax,dx
  41a6fe:	sar    DWORD PTR [ebx-0x72626201],cl
  41a704:	add    eax,0x9bfb4c1b
  41a709:	(bad)  
  41a70a:	and    al,BYTE PTR [eax+0x324955f7]
  41a710:	loopne 0x41a6d5
  41a712:	fnclex 
  41a714:	pusha  
  41a715:	adc    eax,0x1b03c464
  41a71a:	stc    
  41a71b:	div    BYTE PTR [esi+0x42c7a88c]
  41a721:	pop    ebx
  41a722:	fnstcw WORD PTR [ecx+0x2c]
  41a725:	sub    al,0x38
  41a727:	xchg   esi,ebp
  41a729:	test   eax,0xfb5cc2cd
  41a72e:	mov    bh,0x3a
  41a730:	jne    0x41a766
  41a732:	stos   DWORD PTR es:[edi],eax
  41a733:	jp     0x41a75c
  41a735:	mov    bh,0x56
  41a737:	les    ebx,FWORD PTR [eax]
  41a739:	ror    DWORD PTR [edx-0x3c],cl
  41a73c:	pop    edi
  41a73d:	cmp    DWORD PTR [esi+0x5c],0x89c56000
  41a744:	cli    
  41a745:	into   
  41a746:	jo     0x41a786
  41a748:	jg     0x41a718
  41a74a:	or     eax,0x6bcbdbb9
  41a74f:	xchg   esp,eax
  41a750:	mov    ?,WORD PTR ds:0x6b1a2370
  41a756:	test   al,0xef
  41a758:	sti    
  41a759:	pop    ds
  41a75a:	(bad)  
  41a75b:	nop
  41a75c:	add    edi,esp
  41a75e:	pop    ebp
  41a75f:	cmp    eax,0x37b9f5be
  41a764:	shr    DWORD PTR [edi],1
  41a766:	sbb    BYTE PTR ss:[esi+esi*2+0x17],bl
  41a76b:	add    al,0xdf
  41a76d:	sbb    edx,esi
  41a76f:	js     0x41a7d8
  41a771:	xchg   ebx,eax
  41a772:	rcr    DWORD PTR [ecx+eax*8+0x15],cl
  41a776:	imul   DWORD PTR [ebx]
  41a778:	sub    DWORD PTR [esp+ebp*4],0xfffffff4
  41a77c:	fcom   st(6)
  41a77e:	ja     0x41a7b2
  41a780:	push   0x45
  41a782:	pop    es
  41a783:	ss jne 0x41a7be
  41a786:	push   0xfd7aa933
  41a78b:	sbb    al,0xf0
  41a78d:	inc    esi
  41a78e:	push   edi
  41a78f:	bound  edi,QWORD PTR [ecx+0x578cea39]
  41a795:	lods   al,BYTE PTR ds:[esi]
  41a796:	cli    
  41a797:	pop    ds
  41a798:	rcr    DWORD PTR [ebp-0x3a],0x76
  41a79c:	pop    es
  41a79d:	lods   al,BYTE PTR ss:[esi]
  41a79f:	and    al,0x7
  41a7a1:	pusha  
  41a7a2:	aaa    
  41a7a3:	(bad)  
  41a7a4:	es aad 0x25
  41a7a7:	clc    
  41a7a8:	ins    BYTE PTR es:[edi],dx
  41a7a9:	fadd   QWORD PTR [ebx+0x38]
  41a7ac:	xchg   ecx,eax
  41a7ad:	fidiv  DWORD PTR [ebp+0x46]
  41a7b0:	dec    edx
  41a7b1:	dec    ebx
  41a7b2:	and    eax,0xff699841
  41a7b7:	ds dec ebx
  41a7b9:	cmp    eax,0x875ef1d0
  41a7be:	mov    ds:0x762604bc,al
  41a7c3:	fsin   
  41a7c5:	push   eax
  41a7c6:	popa   
  41a7c7:	adc    BYTE PTR [ecx],cl
  41a7c9:	call   0x5910:0x5241bf81
  41a7d0:	test   DWORD PTR [ecx-0x50],eax
  41a7d3:	(bad)  
  41a7d4:	push   edi
  41a7d5:	cmp    eax,0xff5a7f1c
  41a7da:	push   cs
  41a7db:	mov    gs,ebp
  41a7dd:	or     al,0x46
  41a7df:	test   BYTE PTR [edx+0x5f5153a2],bh
  41a7e5:	xchg   al,ch
  41a7e7:	add    DWORD PTR [esi-0x31],0x8286a33d
  41a7ee:	or     al,0xcf
  41a7f0:	call   0xd60c1d40
  41a7f5:	jne    0x41a866
  41a7f7:	ror    BYTE PTR gs:[edx-0x10620cdf],1
  41a7fe:	push   0x41078d93
  41a803:	xchg   ch,al
  41a805:	add    esp,edi
  41a807:	(bad)  
  41a808:	jno    0x41a875
  41a80a:	mul    DWORD PTR [ecx+0x19]
  41a80d:	adc    eax,0x3d78b792
  41a812:	and    eax,0xdcf9500e
  41a817:	into   
  41a818:	jns    0x41a7b6
  41a81a:	or     ch,BYTE PTR [edx-0x3a]
  41a81d:	jmp    0x41a7b7
  41a81f:	pop    edi
  41a820:	xor    edi,ebp
  41a822:	dec    ebx
  41a823:	popf   
  41a824:	loop   0x41a7e9
  41a826:	out    0xef,eax
  41a828:	push   edx
  41a829:	dec    edi
  41a82a:	and    DWORD PTR [ebx-0x70],ecx
  41a82d:	mov    edx,0xd28bf7b
  41a832:	or     BYTE PTR [edx+0x5aee251c],ah
  41a838:	push   edi
  41a839:	xor    ah,ah
  41a83b:	scas   al,BYTE PTR es:[edi]
  41a83c:	jb     0x41a7c8
  41a83e:	(bad)  
  41a840:	xor    eax,0x1887f9a5
  41a845:	xor    eax,DWORD PTR [ecx+ebp*2-0x71]
  41a849:	inc    esp
  41a84a:	in     eax,dx
  41a84b:	fbld   TBYTE PTR [eax+0x584fd899]
  41a851:	sbb    al,0x53
  41a853:	repz mov ecx,0x5634fe22
  41a859:	fdiv   DWORD PTR [esi]
  41a85b:	fisttp DWORD PTR [edx+0x78af713a]
  41a861:	shl    BYTE PTR [ecx],cl
  41a863:	shl    DWORD PTR [ecx],cl
  41a865:	jbe    0x41a8dd
  41a867:	fiadd  WORD PTR [ebx]
  41a869:	jmp    0x32db:0x51ae377b
  41a870:	pop    esi
  41a871:	ins    BYTE PTR es:[edi],dx
  41a872:	mov    edx,0x5735f7ad
  41a877:	mov    ebx,ebp
  41a879:	addr16 shl bh,cl
  41a87c:	les    edx,FWORD PTR [ecx-0x6c]
  41a87f:	out    dx,eax
  41a880:	or     BYTE PTR [ecx+eax*1+0xe614eaa],al
  41a887:	dec    ebp
  41a888:	int    0x6c
  41a88a:	adc    al,0x9f
  41a88c:	repnz lock nop
  41a88f:	xor    eax,0x64c5912f
  41a894:	out    dx,eax
  41a895:	enter  0x37a0,0x38
  41a899:	inc    esp
  41a89a:	push   cs
  41a89b:	adc    edx,DWORD PTR [edx]
  41a89d:	lock xor ch,dl
  41a8a0:	push   ebx
  41a8a1:	dec    eax
  41a8a2:	stos   BYTE PTR es:[edi],al
  41a8a3:	and    dh,ah
  41a8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a6:	popa   
  41a8a7:	addr16 jg 0x41a8c9
  41a8aa:	bound  edx,QWORD PTR [ecx+0xfda0071]
  41a8b0:	ret    
  41a8b1:	outs   dx,BYTE PTR ds:[esi]
  41a8b2:	jne    0x41a85a
  41a8b4:	xor    BYTE PTR [edx+0x11],0x6c
  41a8b8:	fisttp QWORD PTR [ecx]
  41a8ba:	sub    DWORD PTR [ebp+0x4af066ad],esp
  41a8c0:	xor    al,BYTE PTR ds:0xe67a4858
  41a8c6:	pop    ss
  41a8c7:	mov    dh,0xba
  41a8c9:	arpl   WORD PTR [ebx-0x60],di
  41a8cc:	lods   al,BYTE PTR ds:[esi]
  41a8cd:	mov    ds:0x8a1a6038,eax
  41a8d2:	pop    eax
  41a8d3:	inc    ebp
  41a8d4:	loopne 0x41a935
  41a8d6:	adc    DWORD PTR [eax],0xffffffd0
  41a8d9:	jge    0x41a8d5
  41a8db:	cdq    
  41a8dc:	cmc    
  41a8dd:	cwde   
  41a8de:	aas    
  41a8df:	les    eax,FWORD PTR [esi-0x66a02598]
  41a8e5:	fdiv   DWORD PTR [edx]
  41a8e7:	out    0xcc,eax
  41a8e9:	adc    BYTE PTR [ebp+0x35],0x10
  41a8ed:	dec    edi
  41a8ee:	aas    
  41a8ef:	outs   dx,DWORD PTR ds:[esi]
  41a8f0:	xor    al,0x98
  41a8f2:	mov    bl,0xce
  41a8f4:	xor    DWORD PTR [ebx-0x57],esp
  41a8f7:	mov    ebp,0x28973400
  41a8fc:	aas    
  41a8fd:	ins    DWORD PTR es:[edi],dx
  41a8fe:	ficom  WORD PTR [esi-0x38bd5b95]
  41a904:	xor    BYTE PTR [edx],0x99
  41a907:	mov    al,ds:0x1bb20cfa
  41a90c:	jae    0x41a93b
  41a90e:	or     DWORD PTR [edx-0x6b],edi
  41a911:	in     al,dx
  41a912:	les    ebp,FWORD PTR gs:[bp+si-0x48]
  41a917:	push   ss
  41a918:	pop    ss
  41a919:	push   ecx
  41a91a:	mov    esp,DWORD PTR [edx]
  41a91c:	fild   DWORD PTR [edi+0x1a094c3d]
  41a922:	mov    ebp,0x9e095b52
  41a927:	pop    ecx
  41a928:	fisub  WORD PTR [ebp-0x5f814aa0]
  41a92e:	loopne 0x41a8cf
  41a930:	loop   0x41a993
  41a932:	jl     0x41a8e4
  41a934:	pop    edx
  41a935:	sub    BYTE PTR [ecx],bl
  41a937:	imul   esi,DWORD PTR [ebx+0x3],0xffffffa2
  41a93b:	xchg   edx,eax
  41a93c:	adc    bl,BYTE PTR [esi+0x1863236f]
  41a942:	sahf   
  41a943:	cs sub al,0x16
  41a946:	mov    al,0xaa
  41a948:	int3   
  41a949:	xchg   DWORD PTR [ebx-0x6b],edi
  41a94c:	cwde   
  41a94d:	jmp    0x41a9a4
  41a94f:	dec    ebx
  41a950:	lods   eax,DWORD PTR ds:[esi]
  41a951:	dec    esp
  41a952:	rol    DWORD PTR [ebx],cl
  41a954:	xor    dh,BYTE PTR [edx+ecx*2-0x5f]
  41a958:	or     cl,BYTE PTR [ecx+0x4a76d0c6]
  41a95e:	lods   eax,DWORD PTR ds:[esi]
  41a95f:	mov    al,0xcb
  41a961:	aad    0xa5
  41a963:	retf   
  41a964:	mov    ch,0xdb
  41a966:	pop    ss
  41a967:	(bad)  [edi-0x2c]
  41a96a:	loopne 0x41a922
  41a96c:	not    BYTE PTR [eax-0x50abad18]
  41a972:	jle    0x41a8f7
  41a974:	les    esi,FWORD PTR [ecx]
  41a976:	aaa    
  41a977:	test   BYTE PTR [ebx+0x71b78886],cl
  41a97d:	cmc    
  41a97e:	rcl    eax,0x81
  41a981:	inc    esi
  41a982:	psubq  mm4,mm1
  41a985:	mov    ds:0x786d1441,eax
  41a98a:	push   esi
  41a98b:	mov    ecx,0x311e7120
  41a990:	(bad)  
  41a991:	cmp    BYTE PTR [ecx],ah
  41a993:	imul   esi,DWORD PTR ds:0x954a9d10,0x11
  41a99a:	sbb    BYTE PTR [ebx-0x68],dh
  41a99d:	sub    eax,0x269c8ac2
  41a9a2:	or     bl,ah
  41a9a4:	lea    ebx,[ecx-0x5607168]
  41a9aa:	jae    0x41a9bc
  41a9ac:	out    0xeb,al
  41a9ae:	out    dx,al
  41a9af:	nop
  41a9b0:	popf   
  41a9b1:	jl     0x41a9a8
  41a9b3:	je     0x41a9f1
  41a9b5:	(bad)  
  41a9b6:	mov    ah,0xe4
  41a9b8:	push   edx
  41a9b9:	and    esi,DWORD PTR [esi]
  41a9bb:	push   esp
  41a9bc:	inc    ecx
  41a9bd:	mov    cs,WORD PTR [ebx+eax*2+0x4169a2c9]
  41a9c4:	dec    edx
  41a9c5:	mov    edi,0xb9e875cc
  41a9ca:	ret    
  41a9cb:	aam    0x3e
  41a9cd:	xor    ecx,DWORD PTR [ecx-0x44d239ba]
  41a9d3:	xchg   ebx,eax
  41a9d4:	(bad)  
  41a9d6:	xor    al,0x7d
  41a9d8:	jae    0x41a974
  41a9da:	sti    
  41a9db:	mov    esi,edi
  41a9dd:	dec    ebx
  41a9de:	dec    ebp
  41a9df:	xchg   ebp,eax
  41a9e0:	xor    al,0xc9
  41a9e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e3:	lahf   
  41a9e4:	jmp    0x41a9b0
  41a9e6:	or     BYTE PTR [ebx+edx*2+0x144db30a],0xa5
  41a9ee:	retf   0xe52b
  41a9f1:	clc    
  41a9f2:	rcr    BYTE PTR [ecx],cl
  41a9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f5:	test   DWORD PTR [ebp+ecx*8-0x5966ba21],ebx
  41a9fc:	mov    dh,0x44
  41a9fe:	xchg   ecx,eax
  41a9ff:	mov    ds:0xc5ea8326,al
  41aa04:	mov    ds,WORD PTR [edx+0x7ef50a10]
  41aa0a:	inc    ecx
  41aa0b:	jns    0x41a9aa
  41aa0d:	and    al,0x8d
  41aa0f:	push   esi
  41aa10:	xor    al,0x48
  41aa12:	aad    0x97
  41aa14:	aas    
  41aa15:	repz shl DWORD PTR [ebp+0x45ac5bbe],1
  41aa1c:	mov    bh,0x34
  41aa1e:	jp     0x41aa26
  41aa20:	cs mov ds,ebp
  41aa23:	das    
  41aa24:	lods   eax,DWORD PTR ds:[esi]
  41aa25:	dec    eax
  41aa26:	lds    edi,FWORD PTR [ebx]
  41aa28:	pop    ds
  41aa29:	xor    DWORD PTR [ecx],esi
  41aa2b:	mov    esp,0x8652374c
  41aa30:	jp     0x41aa06
  41aa32:	loopne 0x41aa94
  41aa34:	push   ebx
  41aa35:	in     al,0xc4
  41aa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa38:	xor    eax,0x5ac71346
  41aa3d:	mov    esi,0xc0aed174
  41aa42:	or     eax,0x21f7d5ad
  41aa47:	addr16 test al,0xa1
  41aa4a:	ret    0x3d56
  41aa4d:	icebp  
  41aa4e:	pop    ss
  41aa4f:	cs cdq 
  41aa51:	retf   
  41aa52:	adc    dl,ch
  41aa54:	inc    eax
  41aa55:	mov    ebp,0x8c73327b
  41aa5a:	or     BYTE PTR [edx],dl
  41aa5c:	sbb    BYTE PTR [esi+eiz*1-0x47],0x7a
  41aa61:	fs push ebp
  41aa63:	cwde   
  41aa64:	lahf   
  41aa65:	add    eax,0x9a65b448
  41aa6a:	rcl    DWORD PTR [ebp+0x3dde4a36],0x25
  41aa71:	push   0xfffffff3
  41aa73:	mov    BYTE PTR [ebx],cl
  41aa75:	sbb    bl,BYTE PTR [edi]
  41aa77:	mov    eax,0x5f96f53
  41aa7c:	jl     0x41aa50
  41aa7e:	or     cl,dh
  41aa80:	ss ins DWORD PTR es:[edi],dx
  41aa82:	push   cs
  41aa83:	sbb    BYTE PTR [eax+ebp*4-0x7],bh
  41aa87:	mov    ebx,0xa72870e2
  41aa8c:	popf   
  41aa8d:	int    0x4a
  41aa8f:	int3   
  41aa90:	call   0xf87f:0x7b1bcf3f
  41aa97:	fcom   DWORD PTR [eax]
  41aa99:	push   esi
  41aa9a:	stos   DWORD PTR es:[edi],eax
  41aa9b:	loop   0x41ab0c
  41aa9d:	xor    al,0xbf
  41aa9f:	pop    edi
  41aaa0:	mov    esp,0x500ae768
  41aaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa6:	and    ecx,DWORD PTR [edi+0x7c4bb41e]
  41aaac:	es xchg edx,eax
  41aaae:	ins    BYTE PTR es:[edi],dx
  41aaaf:	imul   DWORD PTR [eax]
  41aab1:	inc    edx
  41aab2:	int3   
  41aab3:	jmp    0x41aab4
  41aab5:	imul   edi,DWORD PTR [ecx],0x38
  41aab8:	out    dx,al
  41aab9:	sub    DWORD PTR [eax],ebp
  41aabb:	adc    ecx,DWORD PTR [edi]
  41aabd:	mov    bl,0xa4
  41aabf:	into   
  41aac0:	sbb    eax,0xdcecab1d
  41aac5:	pand   mm5,mm0
  41aac8:	add    ecx,DWORD PTR [esi]
  41aaca:	dec    esp
  41aacb:	jecxz  0x41aa57
  41aacd:	dec    ecx
  41aace:	and    al,0xde
  41aad1:	pop    ecx
  41aad2:	rcl    BYTE PTR [esp+eiz*2],0x35
  41aad6:	and    edi,DWORD PTR [edx+0x13]
  41aad9:	xor    eax,0xb87636c8
  41aade:	xchg   ebx,eax
  41aadf:	idiv   ecx
  41aae1:	jne    0x41aaa9
  41aae3:	and    cl,BYTE PTR [ecx+0x6147cc70]
  41aae9:	jnp    0x41ab34
  41aaeb:	push   0x9549652
  41aaf0:	xchg   ebp,eax
  41aaf1:	cld    
  41aaf2:	imul   ebp,DWORD PTR [edx],0xffffffc3
  41aaf5:	xor    ch,BYTE PTR [edx+0x19]
  41aaf8:	cmp    ah,BYTE PTR [esi]
  41aafa:	int    0x44
  41aafc:	pop    ss
  41aafd:	sbb    ebx,DWORD PTR [eax]
  41aaff:	test   DWORD PTR [ebx+0x2c],esi
  41ab02:	stc    
  41ab03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab04:	push   es
  41ab05:	lods   al,BYTE PTR ds:[esi]
  41ab06:	inc    esp
  41ab07:	test   BYTE PTR [edi-0x7a],0x22
  41ab0b:	lods   eax,DWORD PTR ds:[esi]
  41ab0c:	mov    WORD PTR [ecx],ss
  41ab0e:	imul   esp,DWORD PTR [eax+0x68b1dcba],0xffffffe4
  41ab15:	cmc    
  41ab16:	jns    0x41aabf
  41ab18:	das    
  41ab19:	adc    DWORD PTR [esi+0x5607875c],esp
  41ab1f:	inc    edi
  41ab20:	cmc    
  41ab21:	push   esi
  41ab22:	pusha  
  41ab23:	fdivr  QWORD PTR [edi+0x3e]
  41ab26:	call   0xe5479fd4
  41ab2b:	push   ds
  41ab2c:	cmp    ah,BYTE PTR [edi+0x4a]
  41ab2f:	es pop eax
  41ab31:	out    0xf2,al
  41ab33:	cwde   
  41ab34:	adc    DWORD PTR ds:0xe2841f96,esp
  41ab3a:	data16 outs dx,BYTE PTR ds:[esi]
  41ab3c:	fcmovb st,st(5)
  41ab3e:	add    eax,0x9eb0d824
  41ab43:	ror    DWORD PTR [eax],1
  41ab45:	and    al,0xf4
  41ab47:	fisubr DWORD PTR [ebx+0x37a8c68]
  41ab4d:	shl    DWORD PTR [ecx],cl
  41ab4f:	das    
  41ab50:	pusha  
  41ab51:	(bad)  
  41ab53:	retf   0xbe0f
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	ret    
  41acb5:	sbb    eax,edi
  41acb7:	cmc    
  41acb8:	mov    ch,0x0
  41acba:	cdq    
  41acbb:	inc    ecx
  41acbc:	xchg   edi,eax
  41acbd:	lods   al,BYTE PTR ds:[esi]
  41acbe:	mov    ds:0xfd68247a,al
  41acc3:	inc    ecx
  41acc4:	add    DWORD PTR [eax],eax
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x19516e92],0x69
  41e48b:	retf   0x61f8
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	test   DWORD PTR [edx],eax
  41e492:	add    BYTE PTR [eax],al
  41e494:	mov    bl,0xcb
  41e496:	mov    bl,0x1f
  41e498:	pop    ss
  41e499:	push   ecx
  41e49a:	jecxz  0x41e4b6
  41e49c:	xchg   esp,eax
  41e49d:	cli    
  41e49e:	sbb    DWORD PTR [edi+ebx*8-0x47],ebp
  41e4a2:	imul   esi,DWORD PTR [ebx],0x40
  41e4a5:	mov    edi,ecx
  41e4a7:	arpl   WORD PTR [ebx+0x1a89c319],ax
  41e4ad:	adc    ecx,esi
  41e4af:	fsub   DWORD PTR [ecx-0xd]
  41e4b2:	jmp    0x32bffa39
  41e4b7:	bound  esi,QWORD PTR [edi-0x20907e42]
  41e4bd:	mov    es,esi
  41e4bf:	inc    esp
  41e4c0:	xor    ch,BYTE PTR ds:0xfac02eca
  41e4c6:	push   esi
  41e4c7:	in     eax,dx
  41e4c8:	mov    edx,0x85ebcc00
  41e4cd:	xchg   edx,eax
  41e4ce:	inc    ebp
  41e4cf:	mov    ah,0x3
  41e4d1:	imul   ebp,ecx,0xf1a82777
  41e4d7:	cmp    dl,cl
  41e4d9:	ja     0x41e4fb
  41e4db:	mov    ch,ah
  41e4dd:	call   0x2f2c155b
  41e4e2:	sub    ebp,DWORD PTR [ebp-0x5c]
  41e4e5:	(bad)  
  41e4e7:	pop    ds
  41e4e8:	cmp    eax,0xf3360ddb
  41e4ed:	popa   
  41e4ee:	sbb    eax,0xf29be0cc
  41e4f3:	mov    ecx,0x225fa61a
  41e4f8:	jmp    0x857a:0xc0f31a97
  41e4ff:	loopne 0x41e54e
  41e501:	push   0x67565398
  41e506:	or     BYTE PTR [esp+ebx*1-0x7],cl
  41e50a:	in     al,dx
  41e50b:	mov    DWORD PTR ds:[ebx-0x75802ea7],esi
  41e512:	shl    DWORD PTR [ebx],1
  41e514:	aam    0xfa
  41e516:	stos   DWORD PTR es:[edi],eax
  41e517:	adc    BYTE PTR [edx+edi*2],ch
  41e51a:	jmp    0x9f53:0xa8424be0
  41e521:	mov    esi,0xb57a64e9
  41e526:	mov    ds:0x76796234,eax
  41e52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e52c:	stos   DWORD PTR es:[edi],eax
  41e52d:	scas   al,BYTE PTR es:[edi]
  41e52e:	out    dx,eax
  41e52f:	pusha  
  41e530:	mov    ebx,0xa3cdff51
  41e535:	xchg   ebx,eax
  41e536:	shl    BYTE PTR [edx-0xa],cl
  41e539:	outs   dx,BYTE PTR ds:[esi]
  41e53a:	dec    esp
  41e53b:	mov    edx,0x564bcbe8
  41e540:	sbb    al,0x91
  41e542:	popf   
  41e543:	sti    
  41e544:	adc    al,0x62
  41e546:	sub    eax,0x8613cee3
  41e54b:	loope  0x41e516
  41e54d:	sbb    eax,0xd6f9a701
  41e552:	jae    0x41e561
  41e554:	push   edi
  41e555:	arpl   WORD PTR [eax+0xcef999e],sp
  41e55b:	fdiv   st(0),st
  41e55d:	fwait
  41e55e:	aaa    
  41e55f:	enter  0xa0dc,0x9d
  41e563:	cs pop ecx
  41e566:	lds    ecx,FWORD PTR [ebp+0x58]
  41e569:	push   ebx
  41e56a:	jns    0x41e5d3
  41e56c:	xor    esp,DWORD PTR [eax+0x294c3640]
  41e572:	push   eax
  41e574:	ss push ss
  41e576:	pop    edx
  41e577:	xchg   esp,eax
  41e578:	dec    ebp
  41e579:	mov    dl,0x81
  41e57b:	sub    eax,0x98eeb15f
  41e580:	push   esi
  41e581:	xor    al,0x77
  41e583:	jbe    0x41e5fa
  41e585:	test   al,0x22
  41e587:	out    dx,al
  41e588:	test   al,0x2d
  41e58a:	mov    eax,0xde654690
  41e58f:	cli    
  41e590:	add    eax,0x75266168
  41e595:	(bad)  
  41e597:	stc    
  41e598:	dec    eax
  41e599:	int    0xf0
  41e59b:	and    BYTE PTR [esi],0xd2
  41e59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59f:	pop    es
  41e5a0:	mov    eax,0x104cb065
  41e5a5:	pop    edx
  41e5a6:	or     BYTE PTR [edx-0x67eed0a],0x84
  41e5ad:	inc    ebp
  41e5ae:	inc    ecx
  41e5af:	adc    eax,0x7c41c643
  41e5b4:	iret   
  41e5b5:	mov    ss,WORD PTR [edx+0x33cbe060]
  41e5bb:	xchg   edi,eax
  41e5bc:	mov    eax,ds:0x7f2978d1
  41e5c1:	retf   0xc118
  41e5c4:	add    eax,DWORD PTR [ebx-0x8]
  41e5c7:	push   ebx
  41e5c8:	popf   
  41e5c9:	xor    dh,ch
  41e5cb:	(bad)  
  41e5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5cd:	bound  ebp,QWORD PTR [ebx+0x4f2368d8]
  41e5d3:	ret    0x3f31
  41e5d6:	mov    bl,0xf1
  41e5d8:	adc    BYTE PTR [ebx],0x5b
  41e5db:	popa   
  41e5dc:	add    eax,0x2bf0be93
  41e5e1:	icebp  
  41e5e2:	loop   0x41e575
  41e5e4:	sti    
  41e5e5:	scas   al,BYTE PTR es:[edi]
  41e5e6:	sbb    DWORD PTR [edx-0x5cb5664d],0xffffffe2
  41e5ed:	add    DWORD PTR [edi],ebp
  41e5ef:	mov    ecx,0x309b3451
  41e5f4:	(bad)  
  41e5f5:	ror    cl,0x5d
  41e5f8:	out    0x5e,eax
  41e5fa:	dec    ebp
  41e5fb:	les    esp,FWORD PTR [edx-0x7f3050a]
  41e601:	adc    eax,0xc3e17db6
  41e606:	mov    al,ds:0x249402bd
  41e60b:	dec    ebp
  41e60c:	mov    ds:0x2b9c51e4,al
  41e611:	sbb    dl,BYTE PTR ds:0xdbfbd89c
  41e617:	out    dx,eax
  41e618:	out    0x71,al
  41e61a:	fwait
  41e61b:	sar    DWORD PTR [ecx],cl
  41e61d:	call   0x1f658536
  41e622:	and    DWORD PTR [ecx+0x3b54a74a],esp
  41e628:	push   cs
  41e629:	repz dec edi
  41e62b:	dec    ebx
  41e62c:	xor    eax,ebx
  41e62e:	jmp    0x6215:0x96d7644c
  41e635:	mov    eax,0xaf5dc00e
  41e63a:	icebp  
  41e63b:	xlat   BYTE PTR ds:[ebx]
  41e63c:	fldcw  WORD PTR [ebx]
  41e63e:	int    0x5c
  41e640:	test   eax,0xa4c72d26
  41e645:	add    BYTE PTR [eax],ch
  41e647:	inc    eax
  41e648:	aaa    
  41e649:	outs   dx,BYTE PTR ds:[esi]
  41e64a:	cld    
  41e64b:	scas   eax,DWORD PTR es:[edi]
  41e64c:	or     bh,BYTE PTR [esi-0x31bbe11a]
  41e652:	dec    esp
  41e653:	lods   eax,DWORD PTR ds:[esi]
  41e654:	adc    ecx,DWORD PTR [edx+eiz*1+0x4b]
  41e658:	stos   DWORD PTR es:[edi],eax
  41e659:	xchg   esi,eax
  41e65a:	(bad)
  41e65d:	ins    BYTE PTR es:[edi],dx
  41e65e:	jno    0x41e6d8
  41e660:	xchg   esi,eax
  41e661:	and    esi,esi
  41e663:	popa   
  41e664:	mov    esi,0xe7cfa4ba
  41e669:	pop    edi
  41e66a:	arpl   WORD PTR [ebp+0xc897b17],sp
  41e670:	lahf   
  41e671:	sar    DWORD PTR [eax+0x314baa70],1
  41e677:	into   
  41e678:	test   DWORD PTR [edi+0x4664dfe2],ebx
  41e67e:	scas   eax,DWORD PTR es:[edi]
  41e67f:	add    esi,DWORD PTR [eax+edx*4+0x316528c1]
  41e686:	adc    esp,ebx
  41e688:	lock jbe 0x41e62e
  41e68b:	and    BYTE PTR [edi],cl
  41e68d:	mov    ch,0x55
  41e68f:	idiv   BYTE PTR [ecx-0x59]
  41e692:	dec    edx
  41e693:	xchg   esp,eax
  41e694:	bound  eax,QWORD PTR [eax]
  41e696:	mov    BYTE PTR [ebp+edi*2-0x4c],cl
  41e69a:	shr    ebx,cl
  41e69c:	outs   dx,DWORD PTR ds:[esi]
  41e69d:	ja     0x41e6a4
  41e69f:	push   esi
  41e6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6a1:	repnz cs inc edi
  41e6a4:	mov    cl,0xa3
  41e6a6:	adc    ebx,DWORD PTR [edx+0x1562f64d]
  41e6ac:	repz gs inc ebp
  41e6af:	pop    esp
  41e6b0:	or     eax,0x26d4e2bc
  41e6b5:	push   ebx
  41e6b6:	cdq    
  41e6b7:	dec    edi
  41e6b8:	in     eax,0x7c
  41e6ba:	cmp    dl,cl
  41e6bc:	nop
  41e6bd:	jno    0x41e641
  41e6bf:	(bad)
  41e6c2:	or     bl,bh
  41e6c4:	xchg   ebx,eax
  41e6c5:	sahf   
  41e6c6:	(bad)  
  41e6c7:	sti    
  41e6c8:	add    eax,0x61e76ea1
  41e6cd:	ror    DWORD PTR [edi-0x2c8aefef],cl
  41e6d3:	cmp    dh,ch
  41e6d5:	push   cs
  41e6d6:	arpl   bx,bp
  41e6d8:	mov    ebx,0x9c1e5ab2
  41e6dd:	xchg   edi,eax
  41e6de:	jmp    0x85bad0c6
  41e6e3:	out    0xa7,eax
  41e6e5:	enter  0xaba1,0xd8
  41e6e9:	in     eax,0xf9
  41e6eb:	jp     0x41e6e5
  41e6ed:	jmp    0x2ca4:0xc7101b45
  41e6f4:	test   BYTE PTR [esi],cl
  41e6f6:	iret   
  41e6f7:	outs   dx,BYTE PTR ds:[esi]
  41e6f9:	popf   
  41e6fa:	enter  0x6034,0xcb
  41e6fe:	jne    0x41e733
  41e700:	jnp    0x41e6e5
  41e702:	xor    al,0x13
  41e704:	jne    0x41e70e
  41e706:	imul   ecx,DWORD PTR [ebx],0x74
  41e709:	pop    ecx
  41e70a:	mov    esi,0x4c71085c
  41e70f:	xchg   edi,eax
  41e710:	ins    BYTE PTR es:[edi],dx
  41e711:	jbe    0xa8632e8f
  41e717:	stos   BYTE PTR es:[edi],al
  41e718:	mov    ch,0x0
  41e71a:	add    BYTE PTR [eax],al
  41e71c:	ja     0x41e76a
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	es jle 0x41e6d3
  41e72b:	jmp    0x285:0x1647d
  41e732:	add    BYTE PTR [eax],al
  41e734:	fidivr WORD PTR [eax+0x7f]
  41e737:	leave  
  41e738:	das    
  41e739:	pop    edx
  41e73a:	jl     0x41e6e6
  41e73c:	push   esp
  41e73d:	mov    bh,0x2a
  41e73f:	(bad)  
  41e740:	lods   eax,DWORD PTR ds:[esi]
  41e741:	xchg   edi,eax
  41e742:	dec    eax
  41e743:	push   DWORD PTR [ebx+esi*1]
  41e746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e747:	adc    ebx,edx
  41e749:	add    DWORD PTR [ebp+0x63],0x69
  41e74d:	sbb    al,0x47
  41e74f:	sti    
  41e750:	fwait
  41e751:	or     edx,ebp
  41e753:	add    ch,al
  41e755:	mov    cl,0x3d
  41e757:	pop    ss
  41e758:	push   cs
  41e759:	sti    
  41e75a:	fsub   QWORD PTR [eax+0x65]
  41e75d:	jbe    0x41e71d
  41e75f:	loope  0x41e7ae
  41e761:	jge    0x41e765
  41e763:	into   
  41e764:	mov    ds:0x1b3a9abb,al
  41e769:	je     0x41e7d6
  41e76b:	pusha  
  41e76c:	out    dx,eax
  41e76d:	arpl   WORD PTR [eax],bx
  41e76f:	push   edi
  41e770:	sbb    bl,ch
  41e772:	ins    DWORD PTR es:[edi],dx
  41e773:	cmp    eax,0x16c3e940
  41e778:	add    al,0x9e
  41e77a:	js     0x41e79d
  41e77c:	fs test eax,0x30fde5b5
  41e782:	add    edi,DWORD PTR [edi+0x3a30845e]
  41e788:	icebp  
  41e789:	xlat   BYTE PTR ds:[ebx]
  41e78a:	dec    ebx
  41e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e78c:	cs pop esp
  41e78e:	dec    ecx
  41e78f:	fwait
  41e790:	dec    esp
  41e791:	in     eax,0xd9
  41e793:	bound  eax,QWORD PTR [eax-0x4d0e76b2]
  41e799:	clc    
  41e79a:	pop    es
  41e79b:	adc    eax,0x866d793c
  41e7a0:	sub    eax,0xdd24aa02
  41e7a5:	ds sti 
  41e7a7:	jmp    0x41e823
  41e7a9:	dec    ebx
  41e7aa:	ins    BYTE PTR es:[edi],dx
  41e7ab:	mov    al,0x7f
  41e7ad:	and    esi,esi
  41e7af:	add    DWORD PTR [edi-0x41],esi
  41e7b2:	xchg   ebx,eax
  41e7b3:	(bad)  
  41e7b4:	retf   
  41e7b5:	inc    eax
  41e7b6:	imul   DWORD PTR [ebx+ebp*8]
  41e7b9:	pushf  
  41e7ba:	or     ah,BYTE PTR [edx]
  41e7bc:	dec    ebx
  41e7bd:	mov    ss,WORD PTR [edi+0x29]
  41e7c0:	inc    esi
  41e7c1:	call   0x9553cca7
  41e7c6:	imul   eax,DWORD PTR [ebx-0x10],0xf39608ef
  41e7cd:	fisttp DWORD PTR [eax]
  41e7cf:	test   DWORD PTR [ebp-0x69],eax
  41e7d2:	icebp  
  41e7d3:	arpl   WORD PTR [esi],ax
  41e7d5:	inc    esp
  41e7d6:	adc    ebx,DWORD PTR [ecx+0x553106c2]
  41e7dc:	call   0x2c3110b0
  41e7e1:	sbb    eax,0x69b413fd
  41e7e6:	ja     0x41e79a
  41e7e8:	or     al,0xb1
  41e7ea:	mov    ds:0x608b43e5,eax
  41e7ef:	mov    edx,0xd826c22f
  41e7f4:	dec    edx
  41e7f5:	arpl   WORD PTR [eax],cx
  41e7f7:	push   ss
  41e7f8:	mov    al,0x77
  41e7fa:	jecxz  0x41e81a
  41e7fc:	not    BYTE PTR [edx+0x4a502aba]
  41e802:	sub    eax,0x2629a724
  41e807:	fisub  DWORD PTR [edi+0x3776cc4d]
  41e80d:	sbb    BYTE PTR [eax+ebx*4],bl
  41e810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e811:	mov    dl,0x7b
  41e813:	pop    ss
  41e814:	or     eax,0x43291035
  41e819:	mov    ebx,0x8d26fac1
  41e81e:	sahf   
  41e81f:	mov    eax,ds:0x5799b800
  41e824:	jnp    0x41e817
  41e826:	jle    0x41e7a8
  41e828:	sbb    ah,al
  41e82a:	jmp    0x4a28:0x1ca1442
  41e831:	mov    bh,0x40
  41e833:	push   ss
  41e834:	cs and edi,edi
  41e837:	pusha  
  41e838:	cmp    DWORD PTR [edi+0x450c51a2],0xaac0ea64
  41e842:	into   
  41e843:	ins    DWORD PTR es:[edi],dx
  41e844:	push   edx
  41e845:	pop    ecx
  41e846:	adc    edx,eax
  41e848:	scas   eax,DWORD PTR es:[edi]
  41e849:	mov    dh,0x28
  41e84b:	into   
  41e84c:	out    dx,al
  41e84d:	jecxz  0x41e8c9
  41e84f:	aad    0xc7
  41e851:	loope  0x41e836
  41e853:	pop    ebx
  41e854:	jmp    0x41e82c
  41e856:	pop    ecx
  41e857:	(bad)  
  41e859:	xchg   esp,eax
  41e85a:	xchg   ecx,eax
  41e85b:	enter  0x6031,0xa5
  41e85f:	cmp    DWORD PTR [eax+0x29],ebp
  41e862:	lock lods al,BYTE PTR ds:[esi]
  41e864:	je     0x41e859
  41e866:	xchg   BYTE PTR [edi-0x74],al
  41e869:	popa   
  41e86a:	lock sub DWORD PTR [esi+0x5dedf4f0],0x9009b363
  41e875:	sti    
  41e876:	cmp    eax,0x38fbf926
  41e87b:	daa    
  41e87c:	stos   DWORD PTR es:[edi],eax
  41e87d:	xor    dh,BYTE PTR [ecx]
  41e87f:	lods   ax,WORD PTR ds:[esi]
  41e881:	ins    BYTE PTR es:[edi],dx
  41e882:	mov    bl,0x89
  41e884:	pop    ebx
  41e885:	iret   
  41e886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e887:	mov    bl,0x7
  41e889:	cmc    
  41e88a:	mov    dh,BYTE PTR [ebp-0x7f60b27f]
  41e890:	or     dl,BYTE PTR [esi+edi*4-0x454fa2e0]
  41e897:	push   eax
  41e898:	push   ebx
  41e899:	int    0x31
  41e89b:	cmp    al,0x66
  41e89d:	cmp    DWORD PTR [edi+edx*2+0x5c],0xffffffdf
  41e8a2:	fsubr  QWORD PTR [esi]
  41e8a4:	adc    BYTE PTR [eax+0x52dc8412],0x40
  41e8ab:	sbb    al,0x74
  41e8ad:	jne    0x41e85a
  41e8af:	dec    edx
  41e8b0:	xchg   edi,eax
  41e8b1:	cmp    DWORD PTR [edx-0x6df346a7],edx
  41e8b7:	cli    
  41e8b8:	xchg   esi,eax
  41e8b9:	cli    
  41e8ba:	xchg   ebp,eax
  41e8bb:	inc    edi
  41e8bc:	(bad)  
  41e8be:	repz xor eax,0x9ba803c7
  41e8c4:	daa    
  41e8c5:	mov    ebp,DWORD PTR [ebx]
  41e8c7:	out    0xd4,al
  41e8c9:	(bad)  
  41e8ca:	sub    dl,bl
  41e8cc:	xor    al,0xfa
  41e8ce:	sar    DWORD PTR [eax-0x1],0xc1
  41e8d2:	cmp    eax,0x427b64c0
  41e8d7:	ss xchg ecx,eax
  41e8d9:	and    DWORD PTR [edi],0xd5587ded
  41e8df:	and    cl,al
  41e8e1:	inc    esp
  41e8e2:	xchg   edi,eax
  41e8e3:	fcomp  DWORD PTR [ecx-0x67]
  41e8e6:	pop    edx
  41e8e7:	adc    ebx,DWORD PTR [edi+0x67]
  41e8ea:	pop    esi
  41e8eb:	mov    cl,0x52
  41e8ed:	repnz pop ds
  41e8ef:	shr    DWORD PTR [esi-0x77],cl
  41e8f2:	int    0xc3
  41e8f4:	cwde   
  41e8f5:	fwait
  41e8f6:	lahf   
  41e8f7:	xor    BYTE PTR [esi+0x1f2d749a],bh
  41e8fd:	nop
  41e8fe:	pop    ds
  41e8ff:	xor    eax,0x5cbe16ff
  41e904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e905:	push   0x39d2457a
  41e90a:	loop   0x41e8bb
  41e90c:	ds loop 0x41e8fb
  41e90f:	push   0x2d
  41e911:	pop    ebp
  41e912:	scas   eax,DWORD PTR es:[edi]
  41e913:	aaa    
  41e914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e915:	(bad)  
  41e916:	popa   
  41e917:	or     DWORD PTR [ecx],0x4e
  41e91a:	stc    
  41e91b:	std    
  41e91c:	aaa    
  41e91d:	clc    
  41e91e:	imul   esi,DWORD PTR [ecx+0x7c],0xffffffb4
  41e922:	sbb    eax,0xec4678ce
  41e927:	push   ebx
  41e928:	jnp    0x41e902
  41e92a:	and    al,0x69
  41e92c:	mov    edx,0xeea80370
  41e931:	push   esp
  41e932:	xor    esp,0xffffffc5
  41e935:	(bad)  
  41e937:	(bad)  
  41e938:	iret   
  41e939:	and    DWORD PTR [ecx],edx
  41e93b:	xor    bh,BYTE PTR [ecx]
  41e93d:	ret    
  41e93e:	pop    esp
  41e93f:	or     eax,0xc9b84627
  41e944:	in     eax,0x6c
  41e946:	shl    ah,cl
  41e948:	mov    bh,0x67
  41e94a:	add    eax,0xf3f0ded9
  41e94f:	les    esi,FWORD PTR [eax]
  41e951:	pop    ebp
  41e952:	in     al,0x81
  41e954:	dec    ecx
  41e955:	push   0xffffff80
  41e957:	lock adc eax,0x7c1a205a
  41e95d:	jg     0x41e8f3
  41e95f:	iret   
  41e960:	(bad)  
  41e961:	jbe    0x41e95f
  41e963:	xchg   edi,eax
  41e964:	rcl    DWORD PTR [ecx+edx*8],0xea
  41e968:	pushf  
  41e969:	dec    ecx
  41e96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e96b:	jae    0x41e9bb
  41e96d:	cmp    DWORD PTR ds:0x984da655,eax
  41e973:	xor    al,0xbc
  41e975:	xor    eax,0x6eba9029
  41e97a:	adc    al,0xe3
  41e97c:	mov    esi,0x90196c98
  41e981:	mov    ah,0x80
  41e983:	sbb    BYTE PTR [ebx+0xb8836fd],al
  41e989:	add    al,0x3f
  41e98b:	scas   eax,DWORD PTR es:[edi]
  41e98c:	and    al,BYTE PTR [edi+0x118cbb7d]
  41e992:	pop    esp
  41e993:	pop    ds
  41e994:	je     0x41e99e
  41e996:	add    BYTE PTR [esi-0x1ad8dc22],0x16
  41e99d:	inc    esp
  41e99e:	inc    edi
  41e99f:	cmp    al,0x1d
  41e9a1:	mov    DWORD PTR [edi],0xa9c3101a
  41e9a7:	(bad)  
  41e9a8:	mov    dl,0x78
  41e9aa:	arpl   di,si
  41e9ac:	xor    eax,0x66ec7bcc
  41e9b1:	rcr    DWORD PTR [ecx-0x1d543c14],1
  41e9b7:	sub    DWORD PTR [ecx+0x7000000],edi
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x9b9d51d0
  41e9cb:	cmp    eax,0x16702
  41e9d0:	test   DWORD PTR [edx],eax
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	lock fidivr DWORD PTR [edx+0x2b]
  41e9d8:	lock ror BYTE PTR [edi],1
  41e9db:	push   es
  41e9dc:	cmc    
  41e9dd:	sbb    cl,bl
  41e9df:	xor    edx,ecx
  41e9e1:	pop    esp
  41e9e2:	in     al,dx
  41e9e3:	nop
  41e9e4:	dec    ecx
  41e9e5:	xor    eax,0xd79ea651
  41e9ea:	xchg   edi,eax
  41e9eb:	and    ebp,DWORD PTR [ecx+0x7]
  41e9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9ef:	mov    edi,0x5496ffd5
  41e9f4:	add    ecx,esi
  41e9f6:	push   edx
  41e9f7:	cmp    esp,DWORD PTR [esi]
  41e9f9:	outs   dx,DWORD PTR ds:[esi]
  41e9fa:	jno    0x41e9a1
  41e9fc:	in     al,dx
  41e9fd:	test   al,0x55
  41e9ff:	jmp    0x5b85:0xe1bcca0c
  41ea06:	(bad)  
  41ea07:	fsub   st,st(0)
  41ea09:	into   
  41ea0a:	push   esi
  41ea0b:	cmp    eax,0x6326b95
  41ea10:	fsubr  QWORD PTR [edi+0xf]
  41ea13:	std    
  41ea14:	dec    edx
  41ea15:	es pop edx
  41ea17:	jecxz  0x41e9c2
  41ea19:	jl     0x41e9b5
  41ea1b:	test   DWORD PTR [edx+0x0],ecx
  41ea1e:	in     eax,dx
  41ea1f:	push   cs
  41ea20:	pushf  
  41ea21:	inc    ebp
  41ea22:	repz fnsave [ebx+0x1f]
  41ea26:	lods   al,BYTE PTR ds:[esi]
  41ea27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea28:	add    esi,edi
  41ea2a:	(bad)  
  41ea2b:	and    al,0xbe
  41ea2d:	(bad)  
  41ea2e:	add    BYTE PTR [ecx],cl
  41ea30:	cld    
  41ea31:	in     al,0xe7
  41ea33:	repz cs call 0xcc86c5f2
  41ea3a:	mov    cl,0x5f
  41ea3c:	adc    ch,ch
  41ea3e:	lods   al,BYTE PTR ds:[esi]
  41ea3f:	mov    dl,0x94
  41ea41:	cdq    
  41ea42:	xchg   edx,eax
  41ea43:	sbb    al,0xb1
  41ea45:	sub    al,0x67
  41ea47:	into   
  41ea48:	mov    DWORD PTR [edi+0x4a004f5c],ebp
  41ea4e:	test   al,0xf3
  41ea50:	popf   
  41ea51:	jb     0x41e9df
  41ea53:	call   0x6d07:0xa6431104
  41ea5a:	add    DWORD PTR [ecx],ebx
  41ea5c:	fld    DWORD PTR [ebp+0x37]
  41ea5f:	add    DWORD PTR [edi-0x5f271f80],ecx
  41ea65:	popa   
  41ea66:	or     cl,BYTE PTR [edi]
  41ea68:	in     al,0x9a
  41ea6a:	scas   al,BYTE PTR es:[edi]
  41ea6b:	icebp  
  41ea6c:	mov    es,WORD PTR [esi]
  41ea6e:	ins    BYTE PTR es:[edi],dx
  41ea6f:	jbe    0x41ea21
  41ea71:	dec    ebp
  41ea72:	aas    
  41ea73:	hlt    
  41ea74:	jl     0x41eaf0
  41ea76:	je     0x41ea70
  41ea78:	inc    esi
  41ea79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea7a:	jbe    0x41ea6d
  41ea7c:	push   ebx
  41ea7d:	ins    DWORD PTR es:[edi],dx
  41ea7e:	xor    BYTE PTR [ecx-0x8],ah
  41ea81:	lock arpl WORD PTR [ebx+edx*2],di
  41ea85:	adc    eax,0x69c23b3
  41ea8a:	inc    ecx
  41ea8b:	ret    0xb23
  41ea8e:	cmc    
  41ea8f:	xchg   edx,eax
  41ea90:	pop    esp
  41ea91:	cmc    
  41ea92:	gs xchg esi,eax
  41ea94:	arpl   WORD PTR [esi-0x2],cx
  41ea97:	sbb    eax,DWORD PTR ds:[ebx]
  41ea9a:	pop    es
  41ea9b:	mov    al,0xc5
  41ea9d:	mov    ebx,0xcff25b44
  41eaa2:	mov    ah,0x43
  41eaa4:	xchg   edi,eax
  41eaa5:	loopne 0x41eab8
  41eaa7:	pop    ss
  41eaa8:	or     dh,BYTE PTR [ebx+edx*2-0x4b]
  41eaac:	pop    es
  41eaad:	pop    esi
  41eaae:	sahf   
  41eaaf:	je     0x41eae2
  41eab1:	fadd   st(4),st
  41eab3:	lock loope 0x41eae9
  41eab6:	jmp    0x41ea80
  41eab8:	ret    0x36c7
  41eabb:	jmp    0xa2dd7cc3
  41eac0:	cmp    BYTE PTR [ecx-0x26088b],dl
  41eac6:	retf   
  41eac7:	scas   eax,DWORD PTR es:[edi]
  41eac8:	sub    BYTE PTR ds:[esi+0x6f],cl
  41eacc:	pusha  
  41eacd:	jle    0x41eb00
  41eacf:	xchg   ebp,eax
  41ead0:	call   0xb325c1b0
  41ead5:	into   
  41ead6:	jle    0x41ea85
  41ead8:	ss out 0x6e,al
  41eadb:	xor    BYTE PTR [ebx],cl
  41eadd:	xor    eax,DWORD PTR [edi+0x62]
  41eae0:	mov    ds:0x352bee22,eax
  41eae5:	dec    edi
  41eae6:	pop    edx
  41eae7:	mov    ebp,0xe00193cd
  41eaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaed:	mov    al,ds:0x853dfb6d
  41eaf2:	add    edx,edx
  41eaf4:	mov    ds:0x322bcb01,al
  41eaf9:	test   eax,0xd426cf85
  41eafe:	ret    
  41eaff:	pop    es
  41eb00:	inc    esi
  41eb01:	or     BYTE PTR [ecx+0x1b],0xa2
  41eb05:	sbb    ah,0x2d
  41eb08:	leave  
  41eb09:	push   ds
  41eb0a:	stos   DWORD PTR es:[edi],eax
  41eb0b:	outs   dx,BYTE PTR ds:[esi]
  41eb0c:	xor    DWORD PTR [ecx],0xffffffd8
  41eb0f:	scas   eax,DWORD PTR es:[edi]
  41eb10:	aaa    
  41eb11:	jmp    0xa4e9d98c
  41eb16:	addr16 mov al,ds:0x6996
  41eb1a:	or     DWORD PTR [edx+ecx*2-0x14d80370],ebx
  41eb21:	and    DWORD PTR [ebp+edx*2-0x65],0x5f666180
  41eb29:	jbe    0x41eb22
  41eb2b:	jecxz  0x41eadc
  41eb2d:	push   ebp
  41eb2e:	(bad)  
  41eb2f:	clc    
  41eb30:	mov    edx,0x39a687b2
  41eb35:	popa   
  41eb36:	xchg   esi,eax
  41eb37:	add    eax,0xc8d6aa3a
  41eb3c:	mov    edx,0x11942fdc
  41eb41:	(bad)
  41eb45:	fs jg  0x41eb9c
  41eb48:	or     BYTE PTR [edx+0x5993a46a],bl
  41eb4e:	dec    eax
  41eb4f:	dec    esi
  41eb50:	push   0xa0d50a6b
  41eb55:	pop    ebp
  41eb56:	and    al,0xc9
  41eb58:	push   ebp
  41eb59:	cmp    dl,BYTE PTR [ebp-0x4fc75929]
  41eb5f:	inc    edx
  41eb60:	xor    eax,0xdd707fb9
  41eb65:	xor    ecx,DWORD PTR [eax+0x329fe430]
  41eb6b:	stc    
  41eb6c:	aas    
  41eb6d:	dec    esp
  41eb6e:	xchg   dh,bl
  41eb70:	mov    cl,BYTE PTR [eax+0x4c]
  41eb73:	push   0xffffff98
  41eb75:	imul   BYTE PTR [esi-0x2f73060f]
  41eb7b:	gs sbb eax,0x41993ee3
  41eb81:	adc    DWORD PTR [eax+0x109d10b2],ebx
  41eb87:	sbb    eax,0xc91d86e2
  41eb8c:	mov    al,0xb0
  41eb8e:	cmp    DWORD PTR [edx-0x20ff00ea],esi
  41eb94:	ds (bad) 
  41eb96:	sub    al,0x27
  41eb98:	push   edi
  41eb99:	mov    dl,0xf7
  41eb9b:	ins    BYTE PTR es:[edi],dx
  41eb9c:	loope  0x41eb46
  41eb9e:	push   es
  41eb9f:	in     eax,dx
  41eba0:	jnp    0x41eb62
  41eba2:	pop    ebx
  41eba3:	stc    
  41eba4:	mov    fs,WORD PTR [eax]
  41eba6:	pop    ebp
  41eba7:	or     cl,cl
  41eba9:	cmp    DWORD PTR [ecx+ecx*4-0x10473fae],esp
  41ebb0:	push   edi
  41ebb1:	mov    ebx,0x197c12e
  41ebb6:	jmp    0x103bd249
  41ebbb:	mov    dh,0x69
  41ebbd:	jns    0x41eb8c
  41ebbf:	jge    0x41eb8b
  41ebc1:	scas   eax,DWORD PTR es:[edi]
  41ebc2:	int3   
  41ebc3:	push   ebp
  41ebc4:	loopne 0x41eba0
  41ebc6:	iret   
  41ebc7:	mov    edi,0x819f7e00
  41ebcc:	cmp    ebx,edi
  41ebce:	cli    
  41ebcf:	add    al,0x3
  41ebd1:	add    eax,0xae4a83fe
  41ebd6:	jl     0x41ebde
  41ebd8:	repnz push ebx
  41ebda:	addr16 mov ecx,0x9c58ab88
  41ebe0:	nop
  41ebe1:	inc    esp
  41ebe2:	sub    BYTE PTR [esi+0x31],ah
  41ebe5:	or     eax,0x1bd3aee3
  41ebea:	pop    ebx
  41ebeb:	or     BYTE PTR [edx],0xb
  41ebee:	xor    BYTE PTR [edi-0x2aa179ab],cl
  41ebf4:	call   0x3613:0xb85c7ad8
  41ebfb:	mov    esp,ecx
  41ebfd:	out    dx,al
  41ebfe:	or     cl,BYTE PTR [edi-0x8667297]
  41ec04:	adc    ebp,0xa1b7e9f8
  41ec0a:	adc    bh,BYTE PTR [eax+0x68]
  41ec0d:	mov    edx,0x6ac9e8c4
  41ec12:	fiadd  WORD PTR [edi-0x30]
  41ec15:	sub    DWORD PTR [esi-0x4a5846e8],0x4603f972
  41ec1f:	or     DWORD PTR [ebx-0x33db7f77],edi
  41ec25:	cmp    cl,dl
  41ec27:	xor    ch,BYTE PTR [eax-0x68]
  41ec2a:	mov    ah,0xaa
  41ec2c:	rcl    esp,0x59
  41ec2f:	(bad)  
  41ec30:	les    esi,FWORD PTR [ebx-0x1ea30528]
  41ec36:	sar    edi,1
  41ec38:	add    eax,0x8fbe1ef4
  41ec3d:	lods   al,BYTE PTR ds:[esi]
  41ec3e:	ret    
  41ec3f:	pushf  
  41ec40:	mov    al,ds:0xbef59be8
  41ec45:	or     eax,0xcf08b50a
  41ec4a:	mov    edi,0xcce83f44
  41ec4f:	mov    cl,0x9e
  41ec51:	jnp    0x41ec47
  41ec53:	je     0x41ec9c
  41ec55:	sbb    al,0xaf
  41ec57:	sbb    ebx,ebp
  41ec59:	add    BYTE PTR [eax],al
  41ec5b:	add    BYTE PTR [esi],bl
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	pushf  
  41ec69:	mov    dh,0xa7
  41ec6b:	aaa    
  41ec6c:	xchg   DWORD PTR [ecx+0x1],ebp
  41ec6f:	add    BYTE PTR [ebp+0x2e000002],al
  41ec75:	cmp    bh,BYTE PTR [ebp+0x1bd44e22]
  41ec7b:	cdq    
  41ec7c:	sbb    eax,0xebcfecff
  41ec81:	xor    DWORD PTR [edx],edi
  41ec83:	add    ch,BYTE PTR [ebp+0x63]
  41ec86:	sbb    dl,BYTE PTR [ebp+edi*2-0xb]
  41ec8a:	leave  
  41ec8b:	jmp    0xff99:0xc4289e66
  41ec92:	ds jl  0x41ecdc
  41ec95:	add    dh,BYTE PTR [ebx-0x2e]
  41ec98:	ja     0x41ec4b
  41ec9a:	mov    edi,0x9019ff8
  41ec9f:	xchg   ebx,eax
  41eca0:	add    cl,al
  41eca2:	mov    esi,0x3c646899
  41eca7:	push   ss
  41eca8:	xchg   edx,eax
  41eca9:	test   eax,0xbd89b03d
  41ecae:	jno    0x41ed1c
  41ecb0:	sub    eax,0xe8d0a58a
  41ecb5:	mov    ?,ecx
  41ecb7:	cmp    DWORD PTR [edi-0x77],edi
  41ecba:	jge    0x41ecb9
  41ecbc:	and    bl,bl
  41ecbe:	xchg   esp,eax
  41ecbf:	jne    0x41ec57
  41ecc1:	mov    eax,ds:0x22423370
  41ecc6:	mov    dl,0x9
  41ecc8:	xchg   esp,eax
  41ecc9:	push   0xffffffb4
  41eccb:	enter  0x5e07,0x61
  41eccf:	ror    esp,1
  41ecd1:	stc    
  41ecd2:	leave  
  41ecd3:	clc    
  41ecd4:	jmp    0x66192f89
  41ecd9:	jae    0x41ec6c
  41ecdb:	pop    ebp
  41ecdc:	add    edi,edx
  41ecde:	xchg   edx,eax
  41ecdf:	sub    esp,edx
  41ece1:	xchg   esp,eax
  41ece2:	and    al,0xf2
  41ece4:	mov    edx,ebp
  41ece6:	ins    DWORD PTR es:[edi],dx
  41ece7:	mov    esi,0x142f9477
  41ecec:	ss sti 
  41ecee:	imul   edi,DWORD PTR [ecx+0x30],0xb
  41ecf2:	cmp    BYTE PTR [edx-0x2df6e562],bl
  41ecf8:	and    eax,0x1d1c3e1a
  41ecfd:	pop    eax
  41ecfe:	int    0xd7
  41ed00:	xchg   esp,eax
  41ed01:	(bad)  
  41ed02:	jno    0x41ec94
  41ed04:	(bad)  
  41ed05:	loop   0x41ecd1
  41ed07:	dec    ecx
  41ed08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed09:	mov    ds:0xec2fcd48,eax
  41ed0e:	adc    bh,BYTE PTR ds:0x3d881915
  41ed14:	div    dh
  41ed16:	jg     0x41ed72
  41ed18:	mov    WORD PTR [edi],ds
  41ed1a:	jae    0x41ed99
  41ed1c:	sub    ah,cl
  41ed1e:	in     eax,0xc4
  41ed20:	sahf   
  41ed21:	fcmovnb st,st(3)
  41ed23:	out    dx,al
  41ed24:	cmp    al,0xab
  41ed26:	arpl   WORD PTR [eax+0x47a638f6],bp
  41ed2c:	(bad)  
  41ed2d:	shl    BYTE PTR [edi-0xeb940e2],cl
  41ed33:	rcr    BYTE PTR [edx+0x75],0xb5
  41ed37:	jbe    0x41ecc1
  41ed39:	mov    ds:0x9db60fc1,al
  41ed3e:	fcom   DWORD PTR [ebp+0x14781332]
  41ed44:	sbb    bl,dl
  41ed46:	mov    ebx,0xe887e3fd
  41ed4b:	lds    esi,FWORD PTR [ebp+edx*8-0x5]
  41ed4f:	aaa    
  41ed50:	jmp    0x41ed97
  41ed52:	xchg   BYTE PTR [edx+0x68],bh
  41ed55:	imul   eax,esp,0xae1e64ff
  41ed5b:	imul   ebx,DWORD PTR [eax+0x12],0x1b
  41ed5f:	pop    edx
  41ed60:	or     BYTE PTR [edx-0x5d],dh
  41ed63:	inc    ebp
  41ed64:	push   0xb96eea5d
  41ed69:	pop    ecx
  41ed6a:	cmp    DWORD PTR [eax-0x3c791aae],esp
  41ed70:	mov    dh,0x77
  41ed72:	cmp    al,0xe8
  41ed74:	mov    eax,0xb11a7202
  41ed79:	repz jle 0x41edd6
  41ed7c:	(bad)  
  41ed7d:	sbb    bl,BYTE PTR [esi+0x59]
  41ed80:	mov    eax,0xe656744b
  41ed85:	aad    0x6e
  41ed87:	(bad)  
  41ed88:	xor    eax,0x31aae2ca
  41ed8d:	and    eax,0xeb2fb8c4
  41ed92:	dec    ecx
  41ed93:	dec    ebp
  41ed94:	dec    esi
  41ed95:	rol    BYTE PTR ds:[ebx-0x3],1
  41ed99:	or     BYTE PTR [edi+0x29],cl
  41ed9c:	inc    edx
  41ed9d:	call   FWORD PTR [edi+eax*4+0x4f]
  41eda1:	and    al,0x4a
  41eda3:	loope  0x41ed92
  41eda5:	scas   al,BYTE PTR es:[edi]
  41eda6:	shl    BYTE PTR [ebp-0x60],0x75
  41edaa:	rol    BYTE PTR [edi-0x22c37fb7],cl
  41edb0:	pop    esi
  41edb1:	cs or  bl,dl
  41edb4:	or     ebp,DWORD PTR [ecx]
  41edb6:	daa    
  41edb7:	shl    esi,1
  41edb9:	out    0x3,al
  41edbb:	and    DWORD PTR [esi],ebx
  41edbd:	std    
  41edbe:	in     eax,0x18
  41edc0:	icebp  
  41edc1:	dec    esi
  41edc2:	scas   al,BYTE PTR es:[edi]
  41edc3:	dec    esp
  41edc4:	jnp    0x41ed68
  41edc6:	mov    bl,0xf1
  41edc8:	loopne 0x41edec
  41edca:	xor    dl,BYTE PTR [esi]
  41edcc:	rol    BYTE PTR [edx-0x1d58304],0x3e
  41edd3:	sbb    al,0x67
  41edd5:	cmp    bl,dl
  41edd7:	pop    ecx
  41edd8:	cli    
  41edd9:	inc    ecx
  41edda:	inc    ebp
  41eddb:	pop    edx
  41eddc:	rcl    DWORD PTR [ebp-0x55],0x10
  41ede0:	ins    DWORD PTR es:[edi],dx
  41ede1:	sub    eax,0x68833beb
  41ede6:	xchg   DWORD PTR [esi],eax
  41ede8:	mov    al,BYTE PTR [ecx+0x6ade35dc]
  41edee:	xor    ch,ah
  41edf0:	loop   0x41edb8
  41edf2:	xor    bh,BYTE PTR [eax]
  41edf4:	or     edx,ebp
  41edf6:	repz (bad)
  41edf9:	outs   dx,BYTE PTR ds:[esi]
  41edfa:	test   al,0x13
  41edfc:	ss call 0x9ffd60eb
  41ee02:	imul   ebx,DWORD PTR [eax-0x30],0x4496e219
  41ee09:	push   edx
  41ee0a:	inc    ebp
  41ee0b:	lea    ecx,[ebp-0x4d6d5af9]
  41ee11:	adc    DWORD PTR [esp+eiz*8+0x187394],0x1f84bdd8
  41ee1c:	xor    edi,esp
  41ee1e:	xor    eax,0x649166ff
  41ee23:	mov    eax,ds:0x64b15ea5
  41ee28:	add    al,bh
  41ee2a:	clc    
  41ee2b:	das    
  41ee2c:	sub    al,0x14
  41ee2e:	pusha  
  41ee2f:	mov    esi,0xd7383324
  41ee34:	jo     0x41ee3a
  41ee36:	into   
  41ee37:	das    
  41ee38:	mov    cl,0xf0
  41ee3a:	fcmovbe st,st(4)
  41ee3c:	inc    ebx
  41ee3d:	or     eax,esp
  41ee3f:	xlat   BYTE PTR ds:[ebx]
  41ee40:	xor    eax,0xdfc284b6
  41ee45:	rcl    BYTE PTR [eax-0x4d],cl
  41ee48:	rcl    eax,0x23
  41ee4b:	mov    WORD PTR [eax-0x515f63e3],?
  41ee51:	mov    ds:0x98214c33,al
  41ee56:	adc    eax,DWORD PTR ss:[edi+edx*1-0x62771895]
  41ee5e:	cmc    
  41ee5f:	shr    DWORD PTR [ecx+0x5f],1
  41ee62:	in     al,0x6c
  41ee64:	(bad)  
  41ee65:	ficom  DWORD PTR [edi-0xe2150d8]
  41ee6b:	cdq    
  41ee6c:	in     eax,dx
  41ee6d:	mov    ebp,0xd6eb014f
  41ee72:	jnp    0x41ee81
  41ee74:	loope  0x41ee59
  41ee76:	pop    ebx
  41ee77:	sbb    al,0xe8
  41ee79:	outs   dx,BYTE PTR ds:[esi]
  41ee7a:	loopne 0x41eed4
  41ee7c:	scas   al,BYTE PTR es:[edi]
  41ee7d:	xor    eax,esi
  41ee7f:	cmp    ebp,edi
  41ee81:	inc    esi
  41ee82:	data16 or dh,BYTE PTR [ecx-0x18275eea]
  41ee89:	jl     0x41eef6
  41ee8b:	call   0x4ca06e96
  41ee90:	fnsave [esi+0x0]
  41ee93:	pushf  
  41ee94:	ja     0x41eef1
  41ee96:	(bad)  
  41ee98:	jecxz  0x41ee90
  41ee9a:	sub    BYTE PTR [esi],dh
  41ee9c:	imul   ebp,DWORD PTR [eax+ecx*4+0x4fbe2e15],0x4655990d
  41eea7:	test   al,0xaf
  41eea9:	sub    BYTE PTR [ecx-0x10],bh
  41eeac:	xchg   esi,eax
  41eead:	jne    0x41ef1e
  41eeaf:	push   0xffffffc7
  41eeb1:	pop    ds
  41eeb2:	cmp    esp,DWORD PTR [edi+0x4]
  41eeb5:	mov    ebx,0xd60bc1c1
  41eeba:	pop    edi
  41eebb:	push   esi
  41eebc:	inc    eax
  41eebd:	mov    ebx,0xcf66dfbd
  41eec2:	repnz add edx,DWORD PTR [edi-0x3d55b177]
  41eec9:	(bad)  
  41eeca:	leave  
  41eecb:	outs   dx,BYTE PTR ds:[esi]
  41eecc:	popf   
  41eecd:	inc    eax
  41eece:	jg     0x41ef48
  41eed0:	fdiv   QWORD PTR [ebp+0x4]
  41eed3:	test   dh,ah
  41eed5:	rcl    BYTE PTR [ebx-0x77],0x71
  41eed9:	mov    cl,bh
  41eedb:	dec    esp
  41eedc:	retf   
  41eedd:	jnp    0x41ee94
  41eedf:	adc    eax,0xbe095491
  41eee4:	inc    ecx
  41eee5:	loop   0x41ef60
  41eee7:	fld    TBYTE PTR [edi-0x2]
  41eeea:	dec    ebp
  41eeeb:	dec    edi
  41eeec:	sub    BYTE PTR [esi],bh
  41eeee:	out    dx,al
  41eeef:	je     0x41ef10
  41eef1:	xchg   edx,eax
  41eef2:	stos   BYTE PTR es:[edi],al
  41eef3:	outs   dx,DWORD PTR ds:[esi]
  41eef4:	enter  0xaf80,0xce
  41eef8:	push   0x78000000
  41eefd:	mov    esp,esi
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x6e],ebp
  41ef09:	fimul  DWORD PTR [ebx+0x5]
  41ef0c:	or     al,0x6c
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	test   DWORD PTR [edx],eax
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	in     al,dx
  41ef15:	sti    
  41ef16:	repnz dec edx
  41ef18:	pop    ecx
  41ef19:	addps  xmm4,xmm6
  41ef1c:	inc    edx
  41ef1d:	leave  
  41ef1e:	cdq    
  41ef1f:	adc    BYTE PTR [esi],bl
  41ef21:	sub    dh,BYTE PTR [edi-0x1f]
  41ef24:	cmp    bh,dh
  41ef26:	sti    
  41ef27:	(bad)  
  41ef29:	push   ebx
  41ef2a:	lock and al,0x42
  41ef2d:	test   al,0xcc
  41ef2f:	repnz gs mov esi,0xe55153c6
  41ef36:	xor    eax,DWORD PTR ds:0xe2e7fb39
  41ef3c:	or     eax,0x71bd8c10
  41ef41:	sub    ecx,esi
  41ef43:	mov    ah,0x1
  41ef45:	(bad)  
  41ef46:	mov    edi,0x22628c6
  41ef4b:	and    al,0x62
  41ef4d:	jae    0x41eef3
  41ef4f:	cli    
  41ef50:	add    al,0x2d
  41ef52:	(bad)  
  41ef53:	and    DWORD PTR [ebp+0x3cda5079],esi
  41ef59:	je     0x41ef80
  41ef5b:	imul   BYTE PTR [ebp-0x23]
  41ef5e:	lock or ch,al
  41ef61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef62:	sub    eax,DWORD PTR ds:0x79aaa663
  41ef68:	adc    cl,dh
  41ef6a:	lock pushf 
  41ef6c:	aaa    
  41ef6d:	aaa    
  41ef6e:	pop    ebx
  41ef6f:	jle    0x41efb8
  41ef71:	in     al,dx
  41ef72:	and    edx,0xe5877d02
  41ef78:	mov    ebp,0x8b218ad8
  41ef7d:	or     ah,BYTE PTR [esi]
  41ef7f:	mov    ebx,DWORD PTR ds:0xf1d92703
  41ef85:	outs   dx,DWORD PTR ds:[esi]
  41ef86:	lds    edx,FWORD PTR [edx-0x14]
  41ef89:	repnz and eax,0xa1c888b2
  41ef8f:	int    0xca
  41ef91:	mov    ah,BYTE PTR [ebx-0x5b]
  41ef94:	push   cs
  41ef95:	lods   eax,DWORD PTR ds:[esi]
  41ef96:	fisubr DWORD PTR [eax-0x603d6f40]
  41ef9c:	(bad)  
  41ef9e:	test   BYTE PTR [ebx+0x2179cc1c],0x71
  41efa5:	dec    esp
  41efa6:	int3   
  41efa7:	pusha  
  41efa8:	out    0x2c,eax
  41efaa:	jb     0x41ef5a
  41efac:	int3   
  41efad:	xchg   esp,eax
  41efae:	dec    ecx
  41efaf:	xchg   edi,eax
  41efb0:	sbb    ch,BYTE PTR [esi+0x1927cd28]
  41efb6:	push   eax
  41efb7:	ja     0x41f003
  41efb9:	stc    
  41efba:	push   cs
  41efbb:	mov    edx,0xb8804cc9
  41efc0:	gs mov edx,0xa06ad9d7
  41efc6:	retf   0x29ae
  41efc9:	jle    0x41efc6
  41efcb:	sbb    DWORD PTR [edx-0x7b],0xa332f022
  41efd2:	and    al,0x8d
  41efd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd5:	pusha  
  41efd6:	(bad)
  41efda:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41efdc:	in     al,dx
  41efdd:	fadd   st(4),st
  41efdf:	xor    esi,DWORD PTR [esi-0x49]
  41efe2:	jle    0x41ef73
  41efe4:	bt     DWORD PTR [ebp+0x37],ebp
  41efe8:	xor    al,0x9e
  41efea:	outs   dx,BYTE PTR ds:[esi]
  41efeb:	(bad)  
  41efed:	sbb    eax,0x15d367c5
  41eff2:	aam    0x72
  41eff4:	icebp  
  41eff5:	mov    ebp,0x57454cb
  41effa:	iret   
  41effb:	cld    
  41effc:	nop
  41effd:	xor    DWORD PTR [edx],eax
  41efff:	or     BYTE PTR [edx+0x57af9926],ah
  41f005:	adc    bl,BYTE PTR [ebp-0x1a1d1648]
  41f00b:	pop    edi
  41f00c:	pop    ss
  41f00d:	mov    ebx,0x3719b4b6
  41f012:	pop    edi
  41f013:	(bad)
  41f018:	push   ecx
  41f019:	dec    ebx
  41f01a:	nop
  41f01b:	mov    bh,0xa3
  41f01d:	pop    ecx
  41f01e:	mov    ds:0x24e7dcae,eax
  41f023:	pushf  
  41f024:	retf   0x4173
  41f027:	xchg   esp,eax
  41f028:	cmp    DWORD PTR [ebp+0xb79dad1],edi
  41f02e:	cwde   
  41f02f:	add    eax,0x235aa45
  41f034:	(bad)  
  41f035:	arpl   WORD PTR [esi+0x29a3ce60],dx
  41f03b:	shr    DWORD PTR [edx],cl
  41f03d:	mov    esi,0x235e0aaa
  41f042:	sbb    ah,BYTE PTR [edi]
  41f044:	imul   edi,DWORD PTR [edx+0x41851d88],0x4d
  41f04b:	xor    eax,0x74f28166
  41f050:	popf   
  41f051:	call   0xa956f17
  41f056:	mov    ebp,0xbb3fb917
  41f05b:	mov    eax,ds:0xb7e4ecc
  41f060:	mov    ah,0x74
  41f062:	pop    eax
  41f063:	adc    esp,DWORD PTR [ebx]
  41f065:	or     edi,DWORD PTR [ebp+0x0]
  41f068:	add    al,0x3
  41f06a:	loopne 0x41effd
  41f06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06d:	push   edx
  41f06e:	out    dx,eax
  41f06f:	cmp    BYTE PTR [ebx-0x3a],ah
  41f072:	stos   DWORD PTR es:[edi],eax
  41f073:	sub    BYTE PTR [ebx-0x344bda7d],ch
  41f079:	ret    
  41f07a:	mov    ebx,0xb6afc8fb
  41f07f:	jmp    0x41f0de
  41f081:	jbe    0x41f05f
  41f083:	cmp    ebx,DWORD PTR [eax+0x47]
  41f086:	sahf   
  41f087:	jns    0x41f049
  41f089:	adc    ebx,DWORD PTR [edi+0x72]
  41f08c:	xor    al,0x76
  41f08e:	ret    0x4b9c
  41f091:	dec    ebx
  41f092:	xchg   ebp,eax
  41f093:	lds    edx,FWORD PTR [edi+ebp*8]
  41f096:	aad    0x1b
  41f098:	jae    0x41f081
  41f09a:	dec    esp
  41f09b:	mov    eax,ds:0xed85d600
  41f0a0:	call   0x7472:0xaa15c08e
  41f0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a8:	psubsw mm1,QWORD PTR [ebp-0x31182dd5]
  41f0af:	nop
  41f0b0:	mov    esi,edi
  41f0b2:	adc    edi,DWORD PTR fs:[edx]
  41f0b5:	ret    0x8fd3
  41f0b8:	mov    al,ds:0xb2e1dc85
  41f0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0be:	xchg   DWORD PTR [ebx-0x70],ebp
  41f0c1:	xor    ecx,DWORD PTR [edi+0x352a3f11]
  41f0c7:	lea    edi,[edx-0x41be5c55]
  41f0cd:	add    DWORD PTR [esi],ebp
  41f0cf:	mov    dh,0x6b
  41f0d1:	popa   
  41f0d2:	jle    0x41f0ea
  41f0d4:	pop    eax
  41f0d5:	xchg   ebx,eax
  41f0d6:	adc    eax,0xc7865f99
  41f0db:	push   cs
  41f0dc:	xchg   ebx,ebp
  41f0de:	and    DWORD PTR [eax-0x36],ebp
  41f0e1:	mov    ds:0xb778737a,eax
  41f0e6:	loopne 0x41f07f
  41f0e8:	test   eax,0x3a0cb8a8
  41f0ed:	test   DWORD PTR [edi],esi
  41f0ef:	pop    edx
  41f0f0:	dec    ebp
  41f0f1:	pop    esi
  41f0f2:	dec    edi
  41f0f3:	stc    
  41f0f4:	lds    ebp,FWORD PTR [eax+eiz*1-0xb]
  41f0f8:	sbb    bl,BYTE PTR [ecx-0x65cbb671]
  41f0fe:	ja     0x41f0f3
  41f100:	pop    ebx
  41f101:	aaa    
  41f102:	sbb    edx,DWORD PTR [ebp-0x72]
  41f105:	push   0x2d0d285b
  41f10a:	int    0xf6
  41f10c:	fisubr DWORD PTR [edi+ebx*2]
  41f10f:	jmp    0x326d4194
  41f114:	scas   eax,DWORD PTR es:[edi]
  41f115:	call   0x80804fc9
  41f11a:	push   ebp
  41f11b:	dec    ebp
  41f11c:	les    ebx,FWORD PTR [esi+0x6cad07d4]
  41f122:	frstor [eax]
  41f124:	mov    eax,0x2cf34acc
  41f129:	out    0xdb,eax
  41f12b:	pop    ds
  41f12c:	lahf   
  41f12d:	sbb    bl,BYTE PTR [edi+0x55011afc]
  41f133:	xchg   esi,eax
  41f134:	mov    ebp,0xc970381e
  41f139:	ret    0x3125
  41f13c:	jg     0x41f0f7
  41f13e:	(bad)  
  41f13f:	push   edx
  41f140:	add    DWORD PTR [ebp-0x2fda5fcf],eax
  41f146:	pop    edx
  41f147:	and    ecx,ebp
  41f149:	imul   edx,DWORD PTR fs:[ecx-0xe],0xffffffbc
  41f14e:	leave  
  41f14f:	les    ebp,FWORD PTR [ecx+edx*2+0x1afc7f77]
  41f156:	add    BYTE PTR [esp+eiz*4-0x44719742],cl
  41f15d:	sub    esp,0x4b4e8bf0
  41f163:	and    al,0x5e
  41f165:	imul   edi,DWORD PTR [edx+0x2c5f1ca0],0x50
  41f16c:	cmp    DWORD PTR [esi],esi
  41f16e:	leave  
  41f16f:	in     al,dx
  41f170:	mov    dh,0x1f
  41f172:	add    cl,bh
  41f174:	adc    al,0x82
  41f176:	mov    al,ds:0x6a1cad1
  41f17b:	(bad)  
  41f17c:	fdivr  DWORD PTR [ebp+0x1e]
  41f17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f180:	jp     0x41f1fa
  41f182:	and    ecx,esi
  41f184:	outs   dx,DWORD PTR ds:[esi]
  41f185:	xchg   BYTE PTR [ebp+0x325f6307],dh
  41f18b:	dec    eax
  41f18c:	stos   BYTE PTR es:[edi],al
  41f18d:	push   cs
  41f18e:	push   edi
  41f18f:	loope  0x41f1db
  41f191:	inc    edx
  41f192:	into   
  41f193:	sbb    eax,0x69c25a7d
  41f198:	call   0xb78a:0x5c000000
  41f19f:	imul   esi,edi,0x7f
  41f1a2:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41f1a8:	adc    eax,0x91b01ef0
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	test   DWORD PTR [edx],eax
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	dec    edx
  41f1b5:	cmp    DWORD PTR [ebp+ebp*4+0x21d50ed6],eax
  41f1bc:	mov    WORD PTR [eax+eax*8-0x7],?
  41f1c0:	ficom  DWORD PTR [ecx]
  41f1c2:	xchg   edx,eax
  41f1c3:	enter  0x68a5,0xa5
  41f1c7:	pop    ebp
  41f1c8:	mov    bh,0x2a
  41f1ca:	cld    
  41f1cb:	std    
  41f1cc:	call   0x828:0x2de98d8f
  41f1d3:	push   ss
  41f1d4:	bound  edi,QWORD PTR [ebp+0x31]
  41f1d7:	mov    cl,0xf8
  41f1d9:	inc    edx
  41f1da:	scas   eax,DWORD PTR es:[edi]
  41f1db:	xlat   BYTE PTR ds:[ebx]
  41f1dc:	inc    ebp
  41f1dd:	xchg   edx,eax
  41f1de:	clc    
  41f1df:	pop    eax
  41f1e0:	lock jp 0x41f228
  41f1e3:	jmp    0x41f176
  41f1e5:	maskmovq mm2,mm7
  41f1e8:	and    al,0x82
  41f1ea:	into   
  41f1eb:	push   ecx
  41f1ec:	stos   BYTE PTR es:[edi],al
  41f1ed:	xchg   edx,eax
  41f1ee:	clc    
  41f1ef:	mov    ebp,ebx
  41f1f1:	push   ds
  41f1f2:	fild   DWORD PTR [esi+0x664a6a7f]
  41f1f8:	shl    BYTE PTR [ecx+0x14],cl
  41f1fb:	jle    0x41f256
  41f1fd:	jb     0x41f206
  41f1ff:	adc    DWORD PTR [eax+0x4de03029],edx
  41f205:	jl     0x41f1f6
  41f207:	neg    DWORD PTR [edi+0x2a]
  41f20a:	iret   
  41f20b:	push   0xa4883580
  41f210:	(bad)  
  41f212:	push   ebx
  41f213:	xchg   esp,eax
  41f214:	and    ecx,esp
  41f216:	mov    dl,0x61
  41f218:	fisttp DWORD PTR [eax-0x3d30f598]
  41f21e:	fdivr  QWORD PTR [eax]
  41f220:	popf   
  41f221:	inc    ebx
  41f222:	icebp  
  41f223:	jle    0x41f1c5
  41f225:	pushf  
  41f226:	jg     0x41f25a
  41f228:	das    
  41f229:	iret   
  41f22a:	pop    ebx
  41f22b:	lahf   
  41f22c:	jg     0x41f1f1
  41f22e:	sbb    cl,BYTE PTR [eax+eax*2-0x2f3b913e]
  41f235:	cmp    dl,bl
  41f237:	jo     0x41f1c3
  41f239:	sbb    al,dh
  41f23b:	mov    bl,0x65
  41f23d:	mov    WORD PTR [ebx-0x31610842],ds
  41f243:	push   ebx
  41f244:	sub    al,0x48
  41f246:	jns    0x41f2a0
  41f248:	sbb    BYTE PTR [edx+0x15206a67],cl
  41f24e:	inc    eax
  41f24f:	xor    edi,esp
  41f251:	in     eax,0xa
  41f253:	jl     0x41f1f8
  41f255:	(bad)
  41f259:	and    eax,0xb5cda391
  41f25e:	mov    ds:0x142f25ea,al
  41f263:	jmp    0xd990cc5d
  41f268:	xchg   esi,eax
  41f269:	push   ss
  41f26a:	fstp   DWORD PTR [ecx+0x11]
  41f26d:	inc    esi
  41f26e:	inc    edi
  41f26f:	aam    0xad
  41f271:	dec    edi
  41f272:	xchg   edx,eax
  41f273:	jecxz  0x41f26f
  41f275:	stos   BYTE PTR es:[edi],al
  41f276:	in     eax,0x82
  41f278:	jns    0x41f2c0
  41f27a:	mov    al,0xa0
  41f27c:	and    ebx,DWORD PTR [edi]
  41f27e:	mov    bl,0x3c
  41f280:	(bad)  [esp+eiz*2-0x6c105a2d]
  41f287:	scas   al,BYTE PTR es:[edi]
  41f288:	jle    0x41f2f5
  41f28a:	xchg   BYTE PTR [esi+0x57],dh
  41f28d:	test   BYTE PTR [edi-0x3a],cl
  41f290:	pusha  
  41f291:	add    cl,cl
  41f293:	push   ds
  41f294:	jmp    DWORD PTR [edi+0x2c]
  41f297:	mov    cl,0xf
  41f299:	mov    eax,ds:0xd2e7ef5c
  41f29e:	adc    eax,0xb3e3cc59
  41f2a3:	sub    dl,cl
  41f2a5:	es mov eax,0x91bc267b
  41f2ab:	test   eax,0x2b5da425
  41f2b0:	ins    DWORD PTR es:[edi],dx
  41f2b1:	mov    dl,0x89
  41f2b3:	movups xmm7,xmm6
  41f2b6:	(bad)  
  41f2b7:	pop    esi
  41f2b8:	shl    BYTE PTR cs:[edi-0x20],0x9b
  41f2bd:	dec    esp
  41f2be:	jo     0x41f2cd
  41f2c0:	mov    dh,0x72
  41f2c2:	mov    ebp,0xf3ee0213
  41f2c7:	ret    
  41f2c8:	dec    ecx
  41f2c9:	pop    ds
  41f2ca:	cmc    
  41f2cb:	dec    ecx
  41f2cc:	xchg   DWORD PTR [ebx+0x6eb5ae27],edx
  41f2d2:	add    edx,DWORD PTR [esi+0x2e]
  41f2d5:	into   
  41f2d6:	cli    
  41f2d7:	sbb    edx,0xdc28a5b2
  41f2dd:	jne    0x41f326
  41f2df:	mov    DWORD PTR [eax+ebp*8+0x4c5c99ac],ebx
  41f2e6:	push   eax
  41f2e7:	pop    es
  41f2e8:	sbb    al,0xf9
  41f2ea:	sbb    DWORD PTR [esi-0x7d],ebx
  41f2ed:	jmp    0x41f2a9
  41f2ef:	inc    edi
  41f2f0:	hlt    
  41f2f1:	sub    ch,ch
  41f2f3:	dec    eax
  41f2f4:	sub    BYTE PTR [edi],ah
  41f2f6:	cmp    eax,0x9a64ece5
  41f2fb:	inc    ecx
  41f2fc:	paddusw mm4,QWORD PTR [ebx]
  41f2ff:	push   ecx
  41f300:	in     eax,dx
  41f301:	adc    BYTE PTR ds:0x1843df7c,ah
  41f307:	lahf   
  41f308:	cmp    bl,BYTE PTR [edi+0x67]
  41f30b:	jecxz  0x41f2f4
  41f30d:	nop
  41f30e:	add    eax,0x96c79f3b
  41f313:	mov    BYTE PTR [edi+0x74d90aad],bh
  41f319:	sbb    BYTE PTR ds:0xb79777a0,ch
  41f31f:	repz mov esi,0x510482d4
  41f325:	dec    edx
  41f326:	sbb    al,0x4d
  41f328:	loope  0x41f2c2
  41f32a:	(bad)  
  41f32b:	ficom  WORD PTR [edx]
  41f32d:	mov    ebx,0x84ca8499
  41f332:	mov    esp,0x4c755285
  41f337:	mov    dl,0x42
  41f339:	and    BYTE PTR [edx+0x1d],bh
  41f33c:	ja     0x41f38e
  41f33e:	(bad)  
  41f33f:	ins    DWORD PTR es:[edi],dx
  41f340:	push   cs
  41f341:	rol    ecx,1
  41f343:	adc    esp,ebx
  41f345:	test   DWORD PTR [esi*1-0x65548486],edx
  41f34c:	xor    al,0xa5
  41f34e:	xchg   ebp,eax
  41f34f:	fst    QWORD PTR [esi+edi*8+0xe0c88ca]
  41f356:	scas   al,BYTE PTR es:[edi]
  41f357:	aaa    
  41f358:	pop    eax
  41f359:	mov    dl,BYTE PTR [edi+ecx*4]
  41f35c:	call   0x2e4e:0x6432752a
  41f363:	in     eax,dx
  41f364:	and    BYTE PTR [eax+0x454f6218],0x30
  41f36b:	mov    ah,0xb0
  41f36d:	test   eax,0xf5286e1b
  41f372:	call   0x589c:0x31a3e01b
  41f379:	mov    ch,0xae
  41f37b:	or     DWORD PTR [eax+0x60],ecx
  41f37e:	jno    0x41f3bc
  41f380:	and    edx,ebp
  41f382:	xor    eax,0x8646b6f7
  41f387:	arpl   WORD PTR ds:0x341e218f,ax
  41f38d:	mov    edx,0xb60e226f
  41f392:	mov    DWORD PTR [ebx+eiz*8-0x7a],ebp
  41f396:	mov    ch,0xe2
  41f398:	nop
  41f399:	(bad)  
  41f39a:	jle    0x41f3cf
  41f39c:	cmp    bl,BYTE PTR [esi-0x2d938e1]
  41f3a2:	mov    ecx,0xdd4c471d
  41f3a7:	mov    eax,ds:0x6553093b
  41f3ac:	add    ch,al
  41f3ae:	fld    st(1)
  41f3b0:	dec    eax
  41f3b1:	cmp    al,BYTE PTR [ebx+0x17]
  41f3b4:	jb     0x41f3fe
  41f3b6:	lods   al,BYTE PTR ds:[esi]
  41f3b7:	cwde   
  41f3b8:	loopne 0x41f345
  41f3ba:	ins    DWORD PTR es:[edi],dx
  41f3bb:	mov    ?,ecx
  41f3bd:	push   cs
  41f3be:	mov    esi,0xac294e90
  41f3c3:	dec    esi
  41f3c4:	adc    cl,dl
  41f3c6:	or     ebp,DWORD PTR [ebp+0x4b]
  41f3c9:	mov    WORD PTR [esi-0x6c],ds
  41f3cc:	sar    DWORD PTR [esi+0x2ba19d99],cl
  41f3d2:	rcr    DWORD PTR [edi],0x76
  41f3d5:	mov    al,ds:0x60c43f4e
  41f3da:	test   DWORD PTR [edx+ecx*8+0x5257994],esi
  41f3e1:	dec    ebp
  41f3e2:	inc    ebx
  41f3e3:	gs stos DWORD PTR es:[edi],eax
  41f3e5:	(bad)  
  41f3e6:	std    
  41f3e7:	jge    0x41f44e
  41f3e9:	(bad)  
  41f3ea:	cmp    BYTE PTR [edx+0x6f1de0e0],dl
  41f3f0:	lahf   
  41f3f1:	jno    0x41f3b9
  41f3f3:	mov    BYTE PTR [ebp-0x71],dl
  41f3f6:	or     ebx,DWORD PTR [ecx+0x1d631982]
  41f3fc:	loop   0x41f47c
  41f3fe:	push   ss
  41f3ff:	in     al,0xe4
  41f401:	call   0x3b7b:0xb7f523a7
  41f408:	test   DWORD PTR [ebx-0x2f],ecx
  41f40b:	loope  0x41f3ce
  41f40d:	inc    eax
  41f40e:	test   DWORD PTR [ebp-0x782a8bc9],edx
  41f414:	and    BYTE PTR [ebx],al
  41f416:	dec    ecx
  41f417:	leave  
  41f418:	mov    eax,0xcfad7642
  41f41d:	iret   
  41f41e:	or     eax,DWORD PTR [eax-0x37]
  41f421:	push   0xffffffaa
  41f423:	jnp    0x41f3a7
  41f425:	out    dx,al
  41f426:	fild   WORD PTR [ebp-0x58]
  41f429:	jle    0x41f40a
  41f42b:	lahf   
  41f42c:	mov    al,ds:0xd94e578b
  41f431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f432:	inc    edx
  41f433:	bound  ecx,QWORD PTR [eax+ecx*2]
  41f436:	jno    0x41f3d6
  41f438:	rol    BYTE PTR [eax],0x0
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	mov    edx,0x16dc74cb
  41f44d:	jno    0x41f450
  41f44f:	add    BYTE PTR [ebp-0x2dfffffe],al
  41f455:	sub    DWORD PTR ds:0x6c529b06,esi
  41f45b:	add    DWORD PTR [ebx-0x535a3e2f],ebp
  41f461:	lods   eax,DWORD PTR ds:[esi]
  41f462:	pusha  
  41f463:	mov    dl,0xbf
  41f465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f466:	(bad)  
  41f467:	or     eax,0xe2dd3fc0
  41f46c:	xchg   ebp,eax
  41f46d:	sub    al,0xae
  41f46f:	ret    
  41f470:	scas   eax,DWORD PTR es:[edi]
  41f471:	std    
  41f472:	adc    edi,DWORD PTR ds:0xe6ca77c2
  41f478:	sbb    eax,0xfdf54781
  41f47d:	and    edi,0xcd838186
  41f483:	and    DWORD PTR [eax-0x66],0x52c08312
  41f48a:	xchg   ebx,edi
  41f48c:	jl     0x41f496
  41f48e:	sub    BYTE PTR [edi-0x46],0x7
  41f492:	xchg   ebx,eax
  41f493:	call   0xe566f53
  41f498:	adc    esi,edi
  41f49a:	out    dx,eax
  41f49b:	jnp    0x41f47c
  41f49d:	inc    ecx
  41f49e:	xchg   edx,eax
  41f49f:	mov    ebx,0x364a1bd1
  41f4a4:	jmp    DWORD PTR [ebx]
  41f4a6:	pop    es
  41f4a7:	dec    esp
  41f4a8:	outs   dx,DWORD PTR ds:[esi]
  41f4a9:	out    0xe5,eax
  41f4ab:	int3   
  41f4ac:	jbe    0x41f471
  41f4ae:	ins    BYTE PTR es:[edi],dx
  41f4af:	push   ebp
  41f4b0:	adc    eax,ecx
  41f4b2:	or     BYTE PTR [ecx],cl
  41f4b4:	jl     0x41f497
  41f4b6:	rcr    BYTE PTR [esi+0x231e1393],1
  41f4bc:	dec    ebp
  41f4bd:	pop    ds
  41f4be:	sbb    esi,DWORD PTR [ebp+0x117207e1]
  41f4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c5:	ins    DWORD PTR es:[edi],dx
  41f4c6:	mov    eax,DWORD PTR [edi+0x2170cb8]
  41f4cc:	in     al,0x27
  41f4ce:	adc    ecx,DWORD PTR [edx-0x6c66ea9e]
  41f4d4:	div    DWORD PTR [ebx-0x66]
  41f4d7:	es lahf 
  41f4d9:	jns    0x41f50d
  41f4db:	stc    
  41f4dc:	int    0x42
  41f4de:	cmc    
  41f4df:	dec    ebp
  41f4e0:	in     eax,0x6f
  41f4e2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f4e4:	sbb    ecx,DWORD PTR [ecx]
  41f4e6:	inc    esp
  41f4e7:	fdiv   DWORD PTR [edx]
  41f4e9:	mov    ebx,DWORD PTR [eax-0x16]
  41f4ec:	mov    ds:0xa0d50070,eax
  41f4f1:	pop    esp
  41f4f2:	mov    bh,BYTE PTR [ebp+0x66]
  41f4f5:	xchg   esi,eax
  41f4f6:	ins    BYTE PTR es:[edi],dx
  41f4f7:	jmp    0x41f488
  41f4f9:	mov    al,0xa8
  41f4fb:	shr    BYTE PTR [ecx+0xf378253],1
  41f501:	retf   0x18f1
  41f504:	or     eax,0x9291e030
  41f509:	mov    al,ds:0xb3b789cd
  41f50e:	sahf   
  41f50f:	scas   al,BYTE PTR es:[edi]
  41f510:	js     0x41f50e
  41f512:	fidivr DWORD PTR [esi]
  41f514:	jecxz  0x41f568
  41f516:	fwait
  41f517:	in     al,0xd3
  41f519:	jnp    0x41f575
  41f51b:	push   esi
  41f51c:	push   edx
  41f51d:	std    
  41f51e:	xor    al,BYTE PTR [edi+0x23]
  41f521:	mov    ebx,0x6a042719
  41f526:	aad    0x6e
  41f528:	fwait
  41f529:	sub    BYTE PTR [ecx-0x5edb7bdc],al
  41f52f:	mov    eax,0x4b2c0ee5
  41f534:	jae    0x41f52b
  41f536:	mov    ah,0x5f
  41f538:	aad    0x20
  41f53a:	imul   edi,ebp,0x6f
  41f53d:	rcr    BYTE PTR [ecx],1
  41f53f:	ins    BYTE PTR es:[edi],dx
  41f540:	mov    DWORD PTR [esi-0x6f],esp
  41f543:	jno    0x41f5b6
  41f545:	cmp    al,0x78
  41f547:	sbb    BYTE PTR [edx-0x4f16d71a],0xb1
  41f54e:	and    eax,0xf2c5f540
  41f553:	(bad)  
  41f554:	sub    DWORD PTR [edi+edi*2],eax
  41f557:	adc    eax,0xb390dafe
  41f55c:	idiv   BYTE PTR [edx]
  41f55e:	ret    
  41f55f:	arpl   bp,bp
  41f561:	es adc edx,edi
  41f564:	or     bh,BYTE PTR [edx-0x1fa67833]
  41f56a:	call   0x6e6d0bfb
  41f56f:	mov    WORD PTR [ebx+0xbd0d734],cs
  41f575:	push   eax
  41f576:	mov    dl,BYTE PTR [ebp-0x4f54b9de]
  41f57c:	pop    esp
  41f57d:	sbb    edi,DWORD PTR [eax]
  41f57f:	sbb    al,0xc7
  41f581:	dec    eax
  41f582:	ins    DWORD PTR es:[edi],dx
  41f583:	sbb    esi,esp
  41f585:	ret    0x1d3c
  41f588:	xor    BYTE PTR [esi+ebx*2+0x43eccfd0],ch
  41f58f:	or     BYTE PTR [esp+eiz*8],dh
  41f592:	lock int 0x76
  41f595:	lahf   
  41f596:	nop
  41f597:	push   cs
  41f598:	stos   DWORD PTR es:[edi],eax
  41f599:	push   ebx
  41f59a:	scas   al,BYTE PTR es:[edi]
  41f59b:	xchg   esi,eax
  41f59c:	mov    ebx,0x7f37013
  41f5a1:	jp     0x41f568
  41f5a3:	xchg   ecx,eax
  41f5a4:	cmp    dl,BYTE PTR [ecx]
  41f5a6:	daa    
  41f5a7:	adc    BYTE PTR [esi],0xce
  41f5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ab:	pop    ebx
  41f5ac:	ret    
  41f5ad:	cdq    
  41f5ae:	cmc    
  41f5af:	mov    ds:0x75f3722b,eax
  41f5b4:	es mov dh,0x8e
  41f5b7:	push   ebx
  41f5b8:	lea    edx,[ebx]
  41f5ba:	imul   edi,DWORD PTR [eax-0x4d],0xbff0f031
  41f5c1:	and    ebx,DWORD PTR [ebp-0x7b9cd504]
  41f5c7:	test   DWORD PTR [ebx+0x21],esp
  41f5ca:	sub    al,0xb5
  41f5cc:	sub    BYTE PTR [eax-0x58c3dbc5],al
  41f5d2:	jg     0x41f645
  41f5d4:	arpl   di,si
  41f5d6:	mov    dl,cl
  41f5d8:	push   es
  41f5d9:	je     0x41f57f
  41f5db:	ja     0x41f58d
  41f5dd:	pop    edx
  41f5de:	jae    0x41f589
  41f5e0:	js     0x41f646
  41f5e2:	jo     0x41f5e5
  41f5e4:	fldenv [edi]
  41f5e6:	cmc    
  41f5e7:	inc    ebx
  41f5e8:	(bad)  
  41f5e9:	retf   
  41f5ea:	loopne 0x41f581
  41f5ec:	ficomp WORD PTR ds:[eax-0x64022591]
  41f5f3:	cmp    al,0xaf
  41f5f5:	out    0x46,al
  41f5f7:	(bad)  
  41f5f8:	sub    al,0xd3
  41f5fa:	int    0xd4
  41f5fc:	jle    0x41f5aa
  41f5fe:	adc    DWORD PTR [ecx-0x52950f9c],ebx
  41f604:	sbb    al,0xb1
  41f606:	aaa    
  41f607:	jge    0x41f67c
  41f609:	xlat   BYTE PTR ds:[ebx]
  41f60a:	push   0x7e
  41f60c:	xlat   BYTE PTR ds:[ebx]
  41f60d:	dec    ebx
  41f60e:	scas   al,BYTE PTR es:[edi]
  41f60f:	(bad)  
  41f610:	xor    eax,DWORD PTR [eax-0xf]
  41f613:	cli    
  41f614:	mov    gs,eax
  41f616:	aas    
  41f617:	xchg   ebp,eax
  41f618:	jo     0x41f5c7
  41f61a:	sub    al,0x9
  41f61c:	mov    ebx,0x5eb867d5
  41f621:	inc    ecx
  41f622:	inc    ecx
  41f623:	or     bl,BYTE PTR [ecx+0x41]
  41f626:	push   eax
  41f627:	jle    0x41f673
  41f629:	int3   
  41f62a:	mov    dl,BYTE PTR [ecx-0x1d]
  41f62d:	mov    ds:0xc8cefe5b,eax
  41f632:	cmp    eax,0xdbb373d
  41f637:	mov    ch,0x93
  41f639:	in     eax,dx
  41f63a:	outs   dx,BYTE PTR ds:[esi]
  41f63b:	dec    ebp
  41f63c:	cmp    eax,DWORD PTR [edi-0x10]
  41f63f:	stc    
  41f640:	repz cld 
  41f642:	mov    bl,0x38
  41f644:	xchg   esi,eax
  41f645:	push   esp
  41f646:	sub    BYTE PTR [esi-0x4ca9c54a],bh
  41f64c:	aam    0xa5
  41f64e:	dec    ebx
  41f64f:	sbb    cl,al
  41f651:	adc    dh,BYTE PTR [esi+0x59]
  41f654:	or     BYTE PTR [edx-0x39d1a8bc],0x54
  41f65b:	arpl   WORD PTR [esi],si
  41f65d:	mov    ds:0xc6b46c49,al
  41f662:	rcl    BYTE PTR [eax],1
  41f664:	sub    DWORD PTR [ebx+ebx*2],esi
  41f667:	iret   
  41f668:	ficom  WORD PTR [edi-0x43]
  41f66b:	in     al,0xc8
  41f66d:	cmc    
  41f66e:	sub    ah,BYTE PTR [esi-0xa]
  41f671:	sbb    dh,cl
  41f673:	dec    ebx
  41f674:	jne    0x41f6be
  41f676:	hlt    
  41f677:	add    DWORD PTR [ebp+0x278d9012],esi
  41f67d:	mov    cl,BYTE PTR [ecx+0xb]
  41f680:	dec    edi
  41f681:	in     al,0xf6
  41f683:	inc    esi
  41f684:	scas   al,BYTE PTR es:[edi]
  41f685:	xchg   ebp,eax
  41f686:	leave  
  41f687:	aad    0xb
  41f689:	mov    edx,0x80bf8e61
  41f68e:	loopne 0x41f676
  41f690:	add    eax,0xf9513e3c
  41f695:	mov    edx,0x8cf73b69
  41f69a:	ins    BYTE PTR es:[edi],dx
  41f69b:	ds sub al,0xde
  41f69e:	ss pop es
  41f6a0:	das    
  41f6a1:	mov    dl,0x23
  41f6a3:	push   ecx
  41f6a4:	fstp   DWORD PTR [edi]
  41f6a6:	loopne 0x41f70c
  41f6a8:	lahf   
  41f6a9:	mov    dl,0x56
  41f6ab:	test   BYTE PTR [ebx+0xddcc08f],ah
  41f6b1:	mov    al,0xbd
  41f6b3:	jge    0x41f722
  41f6b5:	jb     0x41f723
  41f6b7:	repz stc 
  41f6b9:	add    ebx,edi
  41f6bb:	bnd jno 0x41f68d
  41f6be:	repnz fs sub ebp,ebp
  41f6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c3:	or     BYTE PTR es:[ecx],al
  41f6c6:	jo     0x41f704
  41f6c8:	aam    0x13
  41f6ca:	hlt    
  41f6cb:	dec    eax
  41f6cc:	cmc    
  41f6cd:	in     eax,0x76
  41f6cf:	aad    0x86
  41f6d1:	add    DWORD PTR [ebx],ebp
  41f6d3:	sub    bh,BYTE PTR [edx-0x13]
  41f6d6:	gs sti 
  41f6d8:	mov    al,BYTE PTR [eax]
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	popf   
  41f6dd:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	pop    ebx
  41f6e9:	add    DWORD PTR [ecx],ebx
  41f6eb:	jg     0x41f688
  41f6ed:	jae    0x41f6f0
  41f6ef:	add    BYTE PTR [ebp+0x20000002],al
  41f6f5:	sub    eax,0x5c61e2e1
  41f6fa:	adc    BYTE PTR [edx-0x67],cl
  41f6fd:	pop    esi
  41f6fe:	inc    eax
  41f6ff:	icebp  
  41f700:	or     eax,0xb12c514
  41f705:	jae    0x41f71d
  41f707:	(bad)  
  41f708:	sbb    ebx,ecx
  41f70a:	push   ebx
  41f70b:	xchg   BYTE PTR [eax-0x4a],dl
  41f70e:	pop    ecx
  41f70f:	and    al,0xbe
  41f711:	pop    ecx
  41f712:	cld    
  41f713:	ficomp DWORD PTR [edx+eiz*4]
  41f716:	jne    0x41f73b
  41f718:	call   0xcdaf:0x44773821
  41f71f:	fnsave [esi+0x5e]
  41f722:	mov    WORD PTR ds:0xde25edb8,gs
  41f728:	inc    esp
  41f729:	push   ss
  41f72a:	mov    BYTE PTR [ebx-0x17],ch
  41f72d:	enter  0xaf2f,0x55
  41f731:	loop   0x41f78e
  41f733:	push   ebx
  41f734:	cmp    al,0xc9
  41f736:	loopne 0x41f6db
  41f738:	xor    dl,BYTE PTR [edi-0x75d80fbe]
  41f73e:	adc    dh,BYTE PTR [ebp+0x3831ec6c]
  41f744:	lods   al,BYTE PTR ds:[esi]
  41f745:	cmp    dl,BYTE PTR [ecx+0x7355ce80]
  41f74b:	xor    eax,0xac831028
  41f750:	pop    esi
  41f751:	pop    ebp
  41f752:	daa    
  41f753:	pusha  
  41f754:	mov    ebp,0x626438ae
  41f759:	test   DWORD PTR [edx],eax
  41f75b:	test   DWORD PTR [edi+ebx*1-0x64313e87],esp
  41f762:	inc    esp
  41f763:	and    BYTE PTR [ebp-0x5c],dh
  41f766:	cmp    DWORD PTR [esi+0x7a9968ef],eax
  41f76c:	push   ebx
  41f76d:	(bad)  
  41f76e:	(bad)  
  41f76f:	dec    ebx
  41f770:	sub    eax,0x23a75682
  41f775:	jmp    0x41f729
  41f777:	loope  0x41f7d2
  41f779:	adc    eax,0x1d780ba0
  41f77e:	add    esi,ecx
  41f780:	fmul   DWORD PTR [ecx+ebx*4+0x2e]
  41f784:	sub    DWORD PTR [esi],eax
  41f786:	repnz or dh,bl
  41f789:	mov    eax,ds:0x6b6a30bb
  41f78e:	pusha  
  41f78f:	aad    0xc9
  41f791:	sbb    BYTE PTR [ebp-0x1b],0xf5
  41f795:	or     al,0xb7
  41f797:	sbb    edx,DWORD PTR [ecx+0x70ea7525]
  41f79d:	cmp    BYTE PTR [edi+0x4d88db9f],bl
  41f7a3:	add    al,0xfb
  41f7a5:	mov    DWORD PTR [ecx-0x747eedf3],esi
  41f7ab:	mov    edx,edi
  41f7ad:	and    DWORD PTR [eax+0x5b],edx
  41f7b0:	sar    bl,0xd1
  41f7b3:	push   cs
  41f7b4:	cmc    
  41f7b5:	data16 xor al,0x8d
  41f7b8:	icebp  
  41f7b9:	(bad)  [edx+0x4b555731]
  41f7c0:	(bad)  
  41f7c1:	call   0x127e:0x21ed8605
  41f7c8:	and    DWORD PTR [edi-0x2ce51e94],0x3cc07297
  41f7d2:	in     eax,dx
  41f7d3:	xchg   ebx,eax
  41f7d4:	xchg   BYTE PTR [ebp+0x6fbbbb90],dh
  41f7da:	push   eax
  41f7db:	and    BYTE PTR [edx],0xf8
  41f7de:	or     edx,esi
  41f7e0:	push   ebp
  41f7e1:	cmp    BYTE PTR [eax+0x2e674318],al
  41f7e7:	mov    bl,0x4
  41f7e9:	in     eax,dx
  41f7ea:	sbb    eax,0x25ab46ad
  41f7ef:	sub    al,0xc5
  41f7f1:	cld    
  41f7f2:	push   ebp
  41f7f3:	dec    edx
  41f7f4:	xor    al,0x48
  41f7f6:	lods   eax,DWORD PTR ds:[esi]
  41f7f7:	jle    0x41f78c
  41f7f9:	neg    BYTE PTR [ecx]
  41f7fb:	xchg   DWORD PTR [ebx+0x279f9f37],edx
  41f801:	mov    ebp,0x2e78c5de
  41f806:	ins    BYTE PTR es:[edi],dx
  41f807:	adc    ebp,DWORD PTR [ebp+0x14]
  41f80a:	add    eax,0x8f5bad34
  41f80f:	add    DWORD PTR [eax+0x10],0x2b
  41f813:	das    
  41f814:	ins    DWORD PTR es:[edi],dx
  41f815:	jb     0x41f848
  41f817:	jo     0x41f7ba
  41f819:	xchg   esi,eax
  41f81a:	mov    ch,0x8e
  41f81c:	mov    BYTE PTR [edi-0x72],cl
  41f81f:	xchg   edx,eax
  41f820:	cmp    al,0x99
  41f822:	test   eax,0xb22f05d4
  41f827:	push   ebp
  41f828:	or     al,al
  41f82a:	sbb    al,0x35
  41f82c:	(bad)  
  41f82d:	out    dx,eax
  41f82e:	xor    DWORD PTR [ecx-0x370506b1],esi
  41f834:	pop    edx
  41f836:	(bad)  
  41f838:	and    DWORD PTR [ebp-0x50],0x82e3ece4
  41f83f:	ds in  eax,dx
  41f841:	data16 or bh,bh
  41f844:	shl    BYTE PTR [ebx+0x6a9fa813],0x38
  41f84b:	and    eax,0xc4814ff
  41f850:	out    dx,eax
  41f851:	icebp  
  41f852:	icebp  
  41f853:	dec    ebx
  41f854:	sbb    al,0xc0
  41f856:	std    
  41f857:	inc    ebp
  41f858:	les    edi,FWORD PTR [ecx-0x56]
  41f85b:	repnz push ebx
  41f85d:	add    DWORD PTR [ebx],ebp
  41f85f:	iret   
  41f860:	daa    
  41f861:	dec    eax
  41f862:	test   al,0xc0
  41f864:	movlps xmm4,QWORD PTR [ebp-0x78]
  41f868:	xor    BYTE PTR [esi+0x33],cl
  41f86b:	fdivrp st(7),st
  41f86d:	dec    ebp
  41f86e:	lea    ecx,[esp+eax*4]
  41f871:	jg     0x41f89c
  41f873:	in     eax,dx
  41f874:	xlat   BYTE PTR ds:[ebx]
  41f875:	pop    ebx
  41f876:	jne    0x41f8e5
  41f878:	into   
  41f879:	ror    DWORD PTR [esi],1
  41f87b:	push   esi
  41f87c:	lods   al,BYTE PTR ds:[esi]
  41f87d:	pop    esp
  41f87e:	imul   bl
  41f880:	dec    esi
  41f881:	jno    0x41f883
  41f883:	sbb    dh,bh
  41f885:	mov    edx,0x4fd6e58c
  41f88a:	dec    BYTE PTR [ecx]
  41f88c:	sbb    al,0x4b
  41f88e:	pop    ebp
  41f88f:	pop    es
  41f890:	(bad)  
  41f891:	cmp    dl,BYTE PTR [ebx-0x11]
  41f894:	sbb    bl,BYTE PTR [ebx]
  41f896:	jmp    0xe5b0649a
  41f89b:	je     0x41f845
  41f89d:	push   ebx
  41f89e:	ret    
  41f89f:	or     DWORD PTR [edx-0x70],ecx
  41f8a2:	xor    bh,BYTE PTR [edx+0x17f35120]
  41f8a8:	or     bh,BYTE PTR [ecx-0x15]
  41f8ab:	xor    al,0xa3
  41f8ad:	bound  ebp,QWORD PTR [ecx+esi*4+0x6]
  41f8b1:	lea    ebp,[ebp-0x1e]
  41f8b4:	ds out dx,eax
  41f8b6:	ret    0x3254
  41f8b9:	popf   
  41f8ba:	pop    edx
  41f8bb:	stos   BYTE PTR es:[edi],al
  41f8bc:	cmp    al,0x5e
  41f8be:	or     DWORD PTR [ecx*2-0x797542c1],eax
  41f8c5:	jle    0x41f865
  41f8c7:	dec    ecx
  41f8c8:	std    
  41f8c9:	sub    eax,0xd743da9a
  41f8ce:	or     DWORD PTR [esi-0x31],esi
  41f8d1:	test   al,0xa7
  41f8d3:	imul   ebx,DWORD PTR [edi],0x2f
  41f8d6:	sub    BYTE PTR [eax],cl
  41f8d8:	xchg   edx,eax
  41f8d9:	into   
  41f8da:	popa   
  41f8db:	sbb    DWORD PTR [si-0x15],ecx
  41f8df:	inc    edi
  41f8e0:	and    al,0x64
  41f8e2:	and    eax,0x110c1c42
  41f8e7:	sub    al,0xd6
  41f8e9:	inc    esp
  41f8ea:	sub    eax,0x34fd2354
  41f8ef:	and    al,0xf4
  41f8f1:	enter  0x53de,0xb9
  41f8f5:	test   al,0x3c
  41f8f7:	in     eax,dx
  41f8f8:	add    al,0xdf
  41f8fa:	icebp  
  41f8fb:	stc    
  41f8fc:	fs cld 
  41f8fe:	jns    0x41f883
  41f900:	lock fstp DWORD PTR [edi+ecx*8]
  41f904:	push   ebx
  41f905:	or     BYTE PTR [ecx-0x298fc48c],0x81
  41f90c:	out    dx,al
  41f90d:	aam    0xd9
  41f90f:	or     eax,0x7582d9ed
  41f914:	cmp    DWORD PTR [edi],ebx
  41f916:	cdq    
  41f917:	jmp    0xd346a9b0
  41f91c:	cmp    eax,0xdfe89fac
  41f921:	popf   
  41f922:	push   edi
  41f923:	addr16 cwde 
  41f925:	je     0x41f905
  41f927:	daa    
  41f928:	pop    esp
  41f929:	loopne 0x41f96a
  41f92b:	add    al,0x49
  41f92d:	out    dx,eax
  41f92e:	cmp    DWORD PTR [edx],esp
  41f930:	and    BYTE PTR [ebx+0x1c],ah
  41f933:	mov    ds:0x3a464dc2,al
  41f938:	popf   
  41f939:	popf   
  41f93a:	mov    DWORD PTR [eax-0xd28cea8],esi
  41f940:	or     esi,DWORD PTR [edi-0xbb701c0]
  41f946:	xor    DWORD PTR [ebp+0x21],0x77
  41f94a:	jge    0x41f9b0
  41f94c:	push   es
  41f94d:	lahf   
  41f94e:	popf   
  41f94f:	xor    eax,DWORD PTR [esp+eax*2]
  41f952:	jp     0x41f927
  41f954:	test   BYTE PTR [ebx+0x1219971a],ch
  41f95a:	cwde   
  41f95b:	in     al,dx
  41f95c:	and    esp,DWORD PTR [edx-0x726c506f]
  41f962:	ja     0x41f909
  41f964:	dec    ebp
  41f965:	(bad)  
  41f966:	fwait
  41f967:	xor    BYTE PTR [esi-0x41],cl
  41f96a:	mov    cl,0x6b
  41f96c:	popf   
  41f96d:	inc    ebx
  41f96e:	xchg   BYTE PTR [esi-0x4a475241],dl
  41f974:	sahf   
  41f975:	mov    al,0x72
  41f977:	fsub   DWORD PTR [eax+eax*1]
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	and    BYTE PTR [esi],dl
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	add    BYTE PTR [esi+ebp*4-0x2],0x20
  41f98d:	jbe    0x41f990
  41f98f:	add    BYTE PTR [ebp-0x2cfffffe],al
  41f995:	mov    ah,0xb0
  41f997:	push   esp
  41f998:	mov    bh,0x51
  41f99a:	inc    esp
  41f99b:	and    ecx,DWORD PTR [eax+0x36ff2192]
  41f9a1:	inc    esp
  41f9a2:	arpl   WORD PTR [ecx],si
  41f9a4:	(bad)
  41f9a7:	sar    BYTE PTR [ebx+0x6bb58072],0x75
  41f9ae:	ret    0x6a8d
  41f9b1:	icebp  
  41f9b2:	mov    ecx,0x97f2d8e9
  41f9b7:	adc    DWORD PTR [edx+0x50],esi
  41f9ba:	stc    
  41f9bb:	pop    edx
  41f9bc:	mov    al,ds:0xb6d20800
  41f9c1:	xchg   esi,eax
  41f9c2:	inc    edx
  41f9c3:	sahf   
  41f9c4:	ret    0x214e
  41f9c7:	pushf  
  41f9c8:	out    dx,al
  41f9c9:	pop    es
  41f9ca:	sbb    edi,DWORD PTR ds:0xa3a9cbc0
  41f9d0:	loope  0x41f9bc
  41f9d2:	iret   
  41f9d3:	sti    
  41f9d4:	push   ebx
  41f9d5:	xchg   DWORD PTR fs:[edx],esi
  41f9d8:	mov    dh,0xa8
  41f9da:	stos   DWORD PTR es:[edi],eax
  41f9db:	aam    0x30
  41f9dd:	inc    ah
  41f9df:	daa    
  41f9e0:	jl     0x41f9c6
  41f9e2:	loop   0x41f9a5
  41f9e4:	sahf   
  41f9e5:	call   0x5319:0x6f508d8b
  41f9ec:	mov    dl,0x30
  41f9ee:	data16 fsub QWORD PTR [ecx]
  41f9f1:	les    ebx,FWORD PTR [ebp-0x21]
  41f9f4:	or     DWORD PTR [eax+0x34],edx
  41f9f7:	fwait
  41f9f8:	xor    BYTE PTR [eax],ah
  41f9fa:	pop    ecx
  41f9fb:	in     al,dx
  41f9fc:	push   edx
  41f9fd:	fdivr  DWORD PTR [ecx+0x5e]
  41fa00:	ja     0x41fa29
  41fa02:	mov    eax,ds:0x7400a43d
  41fa07:	mov    WORD PTR [esi-0x5fa728ac],es
  41fa0d:	jmp    0x41f998
  41fa0f:	(bad)  
  41fa10:	repnz ds dec esi
  41fa13:	mov    eax,0x287235fd
  41fa18:	jge    0x41f9a3
  41fa1a:	pop    eax
  41fa1b:	int    0xc5
  41fa1d:	icebp  
  41fa1e:	sub    BYTE PTR [ebp-0x74b72c73],dh
  41fa24:	mov    WORD PTR [ebp-0x12],cs
  41fa27:	xor    al,0x21
  41fa29:	jae    0x41fa9f
  41fa2b:	jmp    0x41faa0
  41fa2d:	idiv   BYTE PTR [edx+esi*1+0xa5c2ed4]
  41fa34:	pop    ebp
  41fa35:	repz mov cl,0x44
  41fa38:	lock jnp 0x41fa8b
  41fa3b:	and    cl,BYTE PTR [edx+0x7e620e03]
  41fa41:	popa   
  41fa42:	test   DWORD PTR [esi],0x32a62424
  41fa48:	cmp    al,0x3f
  41fa4a:	or     eax,0xa806819e
  41fa4f:	(bad)  
  41fa50:	mov    al,0xb1
  41fa52:	mov    ebx,0xbc149abb
  41fa57:	jno    0x41fa2e
  41fa59:	scas   eax,DWORD PTR es:[edi]
  41fa5a:	push   ecx
  41fa5b:	pop    esi
  41fa5c:	ror    BYTE PTR [esi],cl
  41fa5e:	pusha  
  41fa5f:	in     eax,0x74
  41fa61:	mov    al,ds:0x56f1c078
  41fa66:	lods   eax,DWORD PTR ds:[esi]
  41fa67:	adc    al,0xc
  41fa69:	mov    ?,WORD PTR [esi-0x1c]
  41fa6c:	add    BYTE PTR [edx-0x36],ch
  41fa6f:	into   
  41fa70:	push   ecx
  41fa71:	push   edx
  41fa72:	dec    eax
  41fa73:	add    ah,BYTE PTR [ecx+0x33]
  41fa76:	cli    
  41fa77:	call   0x3929112a
  41fa7c:	sahf   
  41fa7d:	jae    0x41faf0
  41fa7f:	add    eax,0xd58d391d
  41fa84:	add    eax,0x33fc594b
  41fa89:	jo     0x41fa78
  41fa8b:	xor    DWORD PTR [esp+esi*8-0x7d712ee5],eax
  41fa92:	add    eax,edx
  41fa94:	pop    eax
  41fa95:	icebp  
  41fa96:	or     ecx,DWORD PTR [ecx+0x1]
  41fa99:	sti    
  41fa9a:	outs   dx,BYTE PTR ds:[esi]
  41fa9b:	rol    DWORD PTR [edi-0x56],1
  41fa9e:	xor    bh,ah
  41faa0:	cmp    esi,edi
  41faa2:	outs   dx,BYTE PTR ds:[esi]
  41faa3:	sti    
  41faa4:	dec    esp
  41faa5:	xor    al,0x7b
  41faa7:	fs in  al,dx
  41faa9:	jmp    0x41faad
  41faab:	pushf  
  41faac:	out    dx,eax
  41faad:	cmp    al,0x34
  41faaf:	fs test eax,0xd66fd3bd
  41fab5:	mov    WORD PTR [ebp+0x64],cs
  41fab8:	and    ah,BYTE PTR [edx+0x316702c3]
  41fabe:	jp     0x41fac2
  41fac0:	lea    ecx,[esi]
  41fac2:	pop    ebp
  41fac3:	xchg   esp,eax
  41fac4:	arpl   WORD PTR [eax+0x27],si
  41fac7:	sbb    BYTE PTR ds:0xdd7d9677,al
  41facd:	add    esp,ecx
  41facf:	sbb    al,0xdf
  41fad1:	and    DWORD PTR ds:0xb16ed66d,ebx
  41fad7:	and    al,0x74
  41fad9:	lods   eax,DWORD PTR ds:[esi]
  41fada:	add    BYTE PTR [ebp+0x76220c29],dh
  41fae0:	and    eax,0x259aa1ee
  41fae5:	lods   al,BYTE PTR ds:[esi]
  41fae6:	or     DWORD PTR [edx],esp
  41fae8:	enter  0x2c9b,0x3b
  41faec:	mov    eax,0xd02cb63f
  41faf1:	inc    esp
  41faf2:	ret    
  41faf3:	rcr    DWORD PTR [edx+esi*4-0x7a],0xf2
  41faf8:	sbb    BYTE PTR [ebp+0x6bd4bd6d],dh
  41fafe:	jmp    0xf8cb:0xcec96f25
  41fb05:	sbb    al,0xde
  41fb07:	pop    ss
  41fb08:	imul   DWORD PTR [ecx]
  41fb0a:	(bad)  
  41fb0b:	push   ds
  41fb0c:	and    eax,0x72f5a8e8
  41fb11:	jmp    0x769d:0xfc119c7f
  41fb18:	data16 aam 0x50
  41fb1b:	sbb    bl,bl
  41fb1d:	lods   eax,DWORD PTR ds:[esi]
  41fb1e:	add    eax,0xc28ee5e4
  41fb23:	jle    0x41fb4b
  41fb25:	nop
  41fb26:	es stc 
  41fb28:	and    al,0x46
  41fb2a:	mov    WORD PTR [esi-0x7d2aa89b],gs
  41fb30:	or     bh,BYTE PTR [edx+0x20]
  41fb33:	imul   esp,DWORD PTR [edi],0xfffffffe
  41fb36:	stos   DWORD PTR es:[edi],eax
  41fb37:	ss mov ecx,0xaafca3d8
  41fb3d:	fs retf 
  41fb3f:	iret   
  41fb40:	lods   eax,DWORD PTR ds:[esi]
  41fb41:	or     al,dh
  41fb43:	sbb    BYTE PTR [ecx],cl
  41fb45:	scas   eax,DWORD PTR es:[edi]
  41fb46:	push   ebp
  41fb47:	imul   ebp
  41fb49:	inc    ecx
  41fb4a:	mov    esi,0x547fb666
  41fb4f:	cmc    
  41fb50:	in     eax,dx
  41fb51:	add    DWORD PTR [edx],ebx
  41fb53:	sub    BYTE PTR [ecx],bh
  41fb55:	jb     0x41fb89
  41fb57:	jp     0x41fbc9
  41fb59:	push   ds
  41fb5a:	adc    eax,0x372ccd6f
  41fb5f:	imul   eax,DWORD PTR [eax-0x43],0x57
  41fb63:	test   eax,0xa75b2739
  41fb68:	inc    esi
  41fb69:	or     ebp,DWORD PTR [ebx]
  41fb6b:	ins    BYTE PTR es:[edi],dx
  41fb6c:	cmp    BYTE PTR [eax+0x75],cl
  41fb6f:	inc    esi
  41fb70:	jmp    0x41fb7f
  41fb72:	and    DWORD PTR [edx-0x5c241dcc],0x140d0bea
  41fb7c:	or     BYTE PTR [eax+ebp*1],ch
  41fb7f:	shl    BYTE PTR [ebx],cl
  41fb81:	adc    bl,BYTE PTR [edi+edi*4]
  41fb84:	xchg   ebp,eax
  41fb85:	fst    QWORD PTR [edi-0x3c]
  41fb88:	or     cl,BYTE PTR [ebx]
  41fb8a:	push   cs
  41fb8b:	out    0xb0,eax
  41fb8d:	fnstsw WORD PTR ds:0x66e63c3a
  41fb93:	xlat   BYTE PTR ds:[ebx]
  41fb94:	xor    eax,0x3590f69a
  41fb99:	xchg   edx,eax
  41fb9a:	xchg   edx,eax
  41fb9b:	pop    ds
  41fb9c:	jecxz  0x41fbda
  41fb9e:	cs sbb al,0x55
  41fba1:	adc    al,0x64
  41fba3:	or     eax,0xd6694822
  41fba8:	jns    0x41fb2d
  41fbaa:	mov    al,ds:0xfbe21be1
  41fbaf:	(bad)  
  41fbb1:	mov    DWORD PTR [edx+0x34],edi
  41fbb4:	je     0x41fb37
  41fbb6:	mov    al,0xbe
  41fbb8:	aas    
  41fbb9:	cmc    
  41fbba:	js     0x41fc0c
  41fbbc:	ins    BYTE PTR es:[edi],dx
  41fbbd:	(bad)  
  41fbbe:	out    dx,al
  41fbbf:	fsub   st(6),st
  41fbc1:	sbb    eax,ecx
  41fbc3:	mov    bh,0x5c
  41fbc5:	int    0x44
  41fbc7:	or     bl,cl
  41fbc9:	out    dx,al
  41fbca:	das    
  41fbcb:	out    dx,eax
  41fbcc:	mov    dh,0x8e
  41fbce:	and    cl,0xbf
  41fbd1:	xchg   ebx,eax
  41fbd2:	std    
  41fbd3:	xchg   esp,eax
  41fbd4:	mov    ebx,0x2a54f89b
  41fbd9:	mov    dl,0x81
  41fbdb:	cmp    eax,0x19cf89c6
  41fbe0:	xchg   esi,eax
  41fbe1:	in     al,dx
  41fbe2:	dec    esi
  41fbe3:	sub    al,0xba
  41fbe5:	or     eax,0x5d0e15d7
  41fbea:	and    esi,ebx
  41fbec:	jmp    0xdfa04fc7
  41fbf1:	jp     0x41fb80
  41fbf3:	std    
  41fbf4:	fmul   DWORD PTR [ebx]
  41fbf6:	jp     0x41fbb5
  41fbf8:	int3   
  41fbf9:	stc    
  41fbfa:	loop   0x41fc3a
  41fbfc:	adc    eax,0x1f146add
  41fc01:	shl    DWORD PTR [edi-0x6c810f85],cl
  41fc07:	ds in  eax,dx
  41fc09:	mov    edx,ebx
  41fc0b:	sbb    eax,0x633667d9
  41fc10:	mov    al,0x37
  41fc12:	adc    al,0x18
  41fc14:	outs   dx,BYTE PTR ds:[esi]
  41fc15:	call   0x0:0xaad538
  41fc1c:	mov    al,0x33
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi-0x7363f342],esi
  41fc2a:	sahf   
  41fc2b:	xchg   edx,eax
  41fc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [ebp-0x1efffffe],al
  41fc35:	ins    BYTE PTR es:[edi],dx
  41fc36:	or     DWORD PTR [edx],0x3e030194
  41fc3c:	jbe    0x41fcb2
  41fc3e:	dec    ecx
  41fc3f:	mov    ds:0xf8a912c2,eax
  41fc44:	inc    esi
  41fc45:	retf   0x472a
  41fc48:	stc    
  41fc49:	dec    BYTE PTR [ebp+0x6fc350b]
  41fc4f:	fs cld 
  41fc51:	jnp    0x41fc03
  41fc53:	jne    0x41fcbd
  41fc55:	retf   
  41fc56:	xchg   esi,eax
  41fc57:	mov    esp,0x47857e72
  41fc5c:	jmp    0x41fc87
  41fc5e:	xor    eax,0xff4d11d2
  41fc63:	les    esi,FWORD PTR [edi-0x6a]
  41fc66:	jecxz  0x41fce1
  41fc68:	mov    ds:0x78b7d085,al
  41fc6d:	mov    ?,WORD PTR [edi]
  41fc6f:	out    dx,al
  41fc70:	test   al,0xb0
  41fc72:	or     al,0xb4
  41fc74:	addr16 push eax
  41fc76:	dec    ecx
  41fc77:	jecxz  0x41fc46
  41fc79:	retf   0x7f1d
  41fc7c:	ins    DWORD PTR es:[edi],dx
  41fc7d:	enter  0xce0e,0xfe
  41fc81:	shl    BYTE PTR [ebp+0x19accff4],1
  41fc87:	rcr    DWORD PTR [ebx],cl
  41fc89:	adc    eax,0x122989c4
  41fc8e:	dec    eax
  41fc8f:	or     ebp,DWORD PTR [ebx+ebp*8+0x641bef8]
  41fc96:	out    0xd6,eax
  41fc98:	popf   
  41fc99:	mov    esi,0xedb108f1
  41fc9e:	repnz (bad) 
  41fca0:	cs and eax,0xcaa82ea
  41fca6:	les    edx,FWORD PTR [ebp-0x1f]
  41fca9:	aaa    
  41fcaa:	jg     0x41fc4d
  41fcac:	mov    ds:0xade0ba90,al
  41fcb1:	cld    
  41fcb2:	pop    ebx
  41fcb3:	clc    
  41fcb4:	and    ebx,eax
  41fcb6:	or     DWORD PTR [ebx+0x70],0xd9999d2a
  41fcbd:	jecxz  0x41fc7a
  41fcbf:	lahf   
  41fcc0:	repz adc eax,0x5b441948
  41fcc6:	fst    QWORD PTR [edx-0x45]
  41fcc9:	push   eax
  41fcca:	xchg   BYTE PTR [edx+0x25],bl
  41fccd:	adc    edi,DWORD PTR [edi]
  41fccf:	mov    dl,0x68
  41fcd1:	sbb    edx,DWORD PTR [esp+ebp*4-0x7]
  41fcd5:	sub    eax,eax
  41fcd7:	in     eax,dx
  41fcd8:	cmp    esi,esp
  41fcda:	or     BYTE PTR [edi+ecx*1+0x5c],ah
  41fcde:	mov    al,ds:0x6e960827
  41fce3:	je     0x41fc9e
  41fce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce6:	and    al,0xf3
  41fce8:	retf   
  41fce9:	xchg   edx,eax
  41fcea:	lods   al,BYTE PTR ds:[esi]
  41fceb:	scas   al,BYTE PTR es:[edi]
  41fcec:	jne    0x41fd35
  41fcee:	rcr    DWORD PTR [esp+esi*4+0x3d],0xbc
  41fcf3:	jns    0x41fcdf
  41fcf5:	dec    ebp
  41fcf6:	pop    esi
  41fcf7:	adc    eax,0xa2420797
  41fcfc:	ret    0xb3fa
  41fcff:	sub    cl,cl
  41fd01:	push   ecx
  41fd02:	mov    ebx,0x4d08dc49
  41fd07:	int    0x45
  41fd09:	sbb    ch,ch
  41fd0b:	mov    ebx,0x87c3f32a
  41fd10:	in     al,dx
  41fd11:	int3   
  41fd12:	cmp    eax,DWORD PTR [ebx]
  41fd14:	out    0x64,eax
  41fd16:	ins    DWORD PTR es:[edi],dx
  41fd17:	(bad)  
  41fd18:	add    DWORD PTR [edx+0x7f3ed1aa],0xffffff91
  41fd1f:	mov    esi,es
  41fd21:	mov    WORD PTR [eax],es
  41fd23:	in     eax,dx
  41fd24:	jae    0x41fd5a
  41fd26:	sar    ecx,0x42
  41fd29:	jns    0x41fcb7
  41fd2b:	jne    0x41fd1c
  41fd2d:	xchg   edi,eax
  41fd2e:	and    al,0x42
  41fd30:	adc    eax,0x9f12b646
  41fd35:	jl     0x41fd77
  41fd37:	in     al,0x26
  41fd39:	and    eax,0x4d8c60f2
  41fd3e:	inc    edi
  41fd3f:	leave  
  41fd40:	mov    bl,0x8b
  41fd42:	jb     0x41fd0d
  41fd44:	mov    ecx,0x75fbe406
  41fd49:	fcomp  DWORD PTR [ecx-0x50]
  41fd4c:	lock ins BYTE PTR es:[edi],dx
  41fd4e:	arpl   WORD PTR [edi],ax
  41fd50:	and    cl,BYTE PTR [edi-0x369ca74c]
  41fd56:	mov    ds:0x96542546,al
  41fd5b:	mov    bl,0xfe
  41fd5d:	call   0x6a6b:0xe3699e1e
  41fd64:	test   DWORD PTR [edx+0x38],ebp
  41fd67:	dec    eax
  41fd68:	sub    ch,BYTE PTR [eax-0x1bfb7546]
  41fd6e:	jp     0x41fdc3
  41fd70:	bound  ebx,QWORD PTR [ecx]
  41fd72:	out    dx,al
  41fd73:	lahf   
  41fd74:	xor    al,0xcc
  41fd76:	mov    edi,0xf1f953ce
  41fd7b:	(bad)  
  41fd7d:	enter  0xbdd0,0xb1
  41fd81:	out    0x43,al
  41fd83:	jae    0x41fdde
  41fd85:	pop    ss
  41fd86:	inc    edi
  41fd87:	fwait
  41fd88:	or     eax,0x30a719ec
  41fd8d:	inc    ecx
  41fd8e:	retf   0x519
  41fd91:	push   eax
  41fd92:	je     0x41fd99
  41fd94:	ss (bad) 
  41fd96:	and    al,0x15
  41fd98:	pop    eax
  41fd99:	imul   eax,esi,0xffffffbf
  41fd9c:	inc    edx
  41fd9d:	push   ecx
  41fd9e:	dec    ecx
  41fd9f:	jb     0x41fd28
  41fda1:	cmp    ecx,DWORD PTR [ebp-0x710e50b8]
  41fda7:	and    ecx,DWORD PTR [edi]
  41fda9:	sbb    BYTE PTR fs:[ecx-0xc],ah
  41fdad:	bound  eax,QWORD PTR [edi-0x1a]
  41fdb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb1:	ins    DWORD PTR es:[edi],dx
  41fdb2:	out    0x3c,eax
  41fdb4:	outs   dx,DWORD PTR ds:[esi]
  41fdb5:	iret   
  41fdb6:	push   0xffffffbe
  41fdb8:	outs   dx,BYTE PTR ds:[esi]
  41fdb9:	test   BYTE PTR [edi+eiz*8+0xf],bh
  41fdbd:	cmp    edi,DWORD PTR [edx]
  41fdbf:	ja     0x41fdc9
  41fdc1:	mul    BYTE PTR [eax-0x79]
  41fdc4:	or     al,BYTE PTR [edx]
  41fdc6:	push   ds
  41fdc7:	ins    BYTE PTR es:[edi],dx
  41fdc8:	mov    BYTE PTR [esi-0x5b],ch
  41fdcb:	loopne 0x41fdd2
  41fdcd:	jge    0x41fe39
  41fdcf:	daa    
  41fdd0:	dec    eax
  41fdd1:	(bad)  
  41fdd2:	rol    BYTE PTR [edi],1
  41fdd4:	jecxz  0x41fd9b
  41fdd6:	dec    esp
  41fdd7:	das    
  41fdd8:	push   edi
  41fdd9:	test   eax,0x26e2f5d8
  41fdde:	jno    0x41fe49
  41fde0:	(bad)  
  41fde1:	popa   
  41fde2:	ds push 0x9bfe425e
  41fde8:	ja     0x41fe15
  41fdea:	add    DWORD PTR [esi],edi
  41fdec:	add    al,0xaa
  41fdee:	xor    BYTE PTR [ebp+0x5ee0f62f],ah
  41fdf4:	jg     0x41fdbc
  41fdf6:	mov    esi,0x97b5f143
  41fdfb:	mov    ebp,0xc9a6d877
  41fe00:	jns    0x41fd87
  41fe02:	sbb    eax,0x64ef48aa
  41fe07:	cmp    al,0x6b
  41fe09:	inc    ebp
  41fe0a:	jg     0x41fdec
  41fe0c:	and    bl,cl
  41fe0e:	test   eax,0x54d0f56e
  41fe13:	xor    cl,BYTE PTR [esi-0x69]
  41fe16:	mov    bl,0x84
  41fe18:	inc    ebp
  41fe19:	out    0x51,eax
  41fe1b:	push   eax
  41fe1c:	mov    al,ds:0x73451219
  41fe21:	pop    eax
  41fe22:	adc    BYTE PTR [ebx-0x74ba8da5],al
  41fe28:	adc    BYTE PTR [ecx],ah
  41fe2a:	stc    
  41fe2b:	int    0x2c
  41fe2d:	loop   0x41fe35
  41fe2f:	xchg   ecx,eax
  41fe30:	retf   
  41fe31:	dec    esp
  41fe32:	aad    0x31
  41fe34:	cmp    DWORD PTR [eax],edx
  41fe36:	das    
  41fe37:	imul   esi,DWORD PTR [esi+0x3c36b7f6],0xffffffe5
  41fe3e:	jle    0x41fdf7
  41fe40:	inc    ecx
  41fe41:	repz or edi,DWORD PTR [ebx]
  41fe44:	test   eax,0xe0dd4c34
  41fe49:	cmp    BYTE PTR [ebp+0x56955b82],dh
  41fe4f:	sbb    BYTE PTR [ebp+0x5dda6137],ch
  41fe55:	add    dl,BYTE PTR [edx-0x67]
  41fe58:	sbb    eax,DWORD PTR [eax-0x380d8512]
  41fe5e:	std    
  41fe5f:	push   ss
  41fe60:	pop    es
  41fe61:	mov    al,ds:0x1de939f1
  41fe66:	fsub   DWORD PTR [eax+edx*1-0x1e]
  41fe6a:	xor    DWORD PTR [ebp+0x42],eax
  41fe6d:	xchg   ebx,eax
  41fe6e:	aad    0x9a
  41fe70:	mov    ds:0x15675ae2,al
  41fe75:	das    
  41fe76:	dec    ecx
  41fe77:	fwait
  41fe78:	pop    esi
  41fe79:	add    dh,bl
  41fe7b:	cmp    DWORD PTR [edx],edi
  41fe7d:	and    al,0xa3
  41fe7f:	mov    eax,DWORD PTR ds:0x5a464fb9
  41fe85:	xor    ebp,ebp
  41fe87:	out    dx,eax
  41fe88:	fadd   QWORD PTR [edx-0x5647aa0e]
  41fe8e:	pop    es
  41fe8f:	fimul  DWORD PTR [esp+edi*8+0x6963d9a6]
  41fe96:	ret    0xa16e
  41fe99:	fnsave [eax]
  41fe9b:	lods   al,BYTE PTR ds:[esi]
  41fe9c:	mov    esp,DWORD PTR [edi+0x314d6e56]
  41fea2:	xchg   esp,eax
  41fea3:	pop    esi
  41fea4:	outs   dx,DWORD PTR ds:[esi]
  41fea5:	fist   DWORD PTR [ebx-0x66]
  41fea8:	or     BYTE PTR [esi-0x51],cl
  41feab:	cdq    
  41feac:	pop    ebx
  41fead:	std    
  41feae:	mov    ebx,DWORD PTR [ebp+0x609a3f1d]
  41feb4:	stc    
  41feb5:	xchg   edi,eax
  41feb6:	mov    edi,0xd908
  41febb:	add    BYTE PTR [ecx-0x6b36a2],ch
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	pushf  
  41fec9:	xor    dh,BYTE PTR [edx-0x6e]
  41fecc:	sub    bh,BYTE PTR [ebx+0x1]
  41fecf:	add    BYTE PTR [ebp+0x43000002],al
  41fed5:	stos   BYTE PTR es:[edi],al
  41fed6:	das    
  41fed7:	inc    esi
  41fed8:	rcl    cl,1
  41feda:	fdivrp st(6),st
  41fedc:	ja     0x41ff5b
  41fede:	jl     0x41ff04
  41fee0:	or     BYTE PTR [edx-0x4],dh
  41fee3:	inc    edx
  41fee4:	(bad)  
  41fee5:	jb     0x41ff58
  41fee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fee8:	mov    esp,0x8a956b07
  41feed:	and    al,cl
  41feef:	call   0xb25c1ebe
  41fef4:	retf   0x3c52
  41fef7:	jo     0x41ff24
  41fef9:	les    ebx,FWORD PTR [edi-0x5c25bf7b]
  41feff:	mov    ebx,0xd3eb0a41
  41ff04:	fcom   DWORD PTR [edi]
  41ff06:	(bad)  
  41ff08:	xor    edx,eax
  41ff0a:	stos   BYTE PTR es:[edi],al
  41ff0b:	add    al,0x36
  41ff0d:	out    dx,al
  41ff0e:	std    
  41ff0f:	jne    0x41feb6
  41ff11:	std    
  41ff12:	push   0xffffffcf
  41ff14:	inc    ebx
  41ff15:	push   edx
  41ff16:	jne    0x41ff33
  41ff18:	call   0x6cafa0e8
  41ff1d:	mov    edi,0x700ffcf6
  41ff22:	(bad)
  41ff25:	(bad)  
  41ff26:	mov    edx,0x98d8a468
  41ff2b:	scas   al,BYTE PTR es:[edi]
  41ff2c:	jge    0x41ff88
  41ff2e:	iret   
  41ff2f:	inc    esi
  41ff30:	mov    ecx,ebx
  41ff32:	(bad)  
  41ff33:	cwde   
  41ff34:	mov    bl,BYTE PTR [esi-0x19cd2426]
  41ff3a:	jnp    0x41ff55
  41ff3c:	enter  0xff84,0xbc
  41ff40:	mov    ah,0xde
  41ff42:	in     eax,0x85
  41ff44:	mov    cl,0x23
  41ff46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff47:	out    dx,al
  41ff48:	jae    0x41feef
  41ff4a:	es in  al,0x15
  41ff4d:	shl    BYTE PTR [esi+0xe36e9d2],1
  41ff53:	ds call 0xb77ce2b3
  41ff59:	xchg   ebp,eax
  41ff5a:	xor    ebp,edx
  41ff5c:	retf   
  41ff5d:	add    eax,ebp
  41ff5f:	inc    ecx
  41ff60:	retf   
  41ff61:	loopne 0x41ff14
  41ff63:	loopne 0x41ff93
  41ff65:	out    0x9a,eax
  41ff67:	dec    edi
  41ff68:	(bad)  
  41ff69:	jnp    0x41ffd2
  41ff6b:	leave  
  41ff6c:	adc    al,BYTE PTR [eax+0x62]
  41ff6f:	lahf   
  41ff70:	sub    BYTE PTR [eax-0x5e02b59c],bh
  41ff76:	je     0x41ffd1
  41ff78:	ins    BYTE PTR es:[edi],dx
  41ff79:	push   esp
  41ff7a:	sub    al,BYTE PTR [ecx+0x3d]
  41ff7d:	outs   dx,BYTE PTR ds:[esi]
  41ff7e:	mov    dh,BYTE PTR [eax+0x124c9943]
  41ff84:	and    eax,0x6d232337
  41ff89:	and    DWORD PTR [ebx],ebp
  41ff8b:	stos   BYTE PTR es:[edi],al
  41ff8c:	std    
  41ff8d:	hlt    
  41ff8e:	and    ebp,DWORD PTR [edi]
  41ff90:	ins    DWORD PTR es:[edi],dx
  41ff91:	push   ebp
  41ff92:	xor    cl,ah
  41ff94:	int3   
  41ff95:	aam    0xc2
  41ff97:	fistp  WORD PTR [esi]
  41ff99:	in     eax,dx
  41ff9a:	(bad)  
  41ff9e:	cmp    al,0x6d
  41ffa0:	out    dx,eax
  41ffa1:	call   0xfd7e8c1a
  41ffa6:	dec    edx
  41ffa7:	dec    ecx
  41ffa8:	add    ah,ah
  41ffaa:	sub    al,0xc3
  41ffac:	js     0x41ff9a
  41ffae:	shr    BYTE PTR [ebp+0x43],cl
  41ffb1:	mov    al,ds:0xbafd68c3
  41ffb6:	dec    ebx
  41ffb7:	or     eax,0xfa31ef72
  41ffbc:	push   0xf37ecd44
  41ffc1:	add    ah,BYTE PTR [ecx-0x4819755d]
  41ffc7:	pop    edx
  41ffc8:	mov    ch,0xf1
  41ffca:	mov    bl,0x5
  41ffcc:	xor    BYTE PTR [esi],bh
  41ffce:	(bad)  
  41ffcf:	cli    
  41ffd0:	mov    bl,0x1e
  41ffd2:	xchg   ebp,eax
  41ffd3:	cmc    
  41ffd4:	dec    edx
  41ffd5:	mov    ch,0x79
  41ffd7:	dec    esi
  41ffd8:	cli    
  41ffd9:	sar    DWORD PTR [esi-0x7a608a1e],cl
  41ffdf:	es inc ebx
  41ffe1:	retf   0x3a31
  41ffe4:	and    dh,BYTE PTR [eax-0x67]
  41ffe7:	push   eax
  41ffe8:	jno    0x420038
  41ffea:	popa   
  41ffeb:	push   ecx
  41ffec:	cmp    ah,BYTE PTR [ebx]
  41ffee:	or     DWORD PTR [ebp+0x455c1fd6],esp
  41fff4:	adc    eax,esi
  41fff6:	sbb    al,0x7b
  41fff8:	xchg   esp,eax
  41fff9:	xchg   ebp,eax
  41fffa:	stc    
  41fffb:	imul   ebp,DWORD PTR [ebx+0x19],0xffffff94
  41ffff:	test   eax,0xecb308ac
  420004:	or     edi,ebp
  420006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420007:	ds ins BYTE PTR es:[edi],dx
  420009:	dec    eax
  42000a:	(bad)  
  42000b:	sar    BYTE PTR [ebx+0x6434df0c],cl
  420011:	xor    BYTE PTR [esi],0xaa
  420014:	mov    ebp,0x96bc6f24
  420019:	cmp    al,0x59
  42001b:	cmp    eax,0xeb2e6a58
  420021:	mov    edi,0x6353bf92
  420026:	aad    0x60
  420028:	popa   
  420029:	popa   
  42002a:	push   cs
  42002b:	clc    
  42002c:	push   es
  42002d:	mov    al,ds:0x65469bdf
  420032:	dec    ebx
  420033:	sub    dh,dl
  420035:	imul   ebx,DWORD PTR [eax-0xebd2bd6],0x7fa2560a
  42003f:	int3   
  420040:	ja     0x42003f
  420042:	je     0x420066
  420044:	pop    es
  420045:	aam    0x38
  420047:	adc    eax,0xf2d5bf42
  42004c:	in     al,dx
  42004d:	lods   eax,DWORD PTR ds:[esi]
  42004e:	jb     0x420065
  420050:	jmp    0x2c03eeec
  420055:	push   ss
  420056:	jo     0x41ffe1
  420058:	inc    ebx
  420059:	aas    
  42005a:	xor    edx,DWORD PTR ds:0x2cc408c0
  420060:	(bad)  
  420062:	into   
  420063:	sub    al,0x28
  420065:	dec    eax
  420066:	out    dx,eax
  420067:	in     al,dx
  420068:	clc    
  420069:	mov    dh,0x49
  42006b:	mov    ch,0x92
  42006d:	dec    ecx
  42006e:	rol    BYTE PTR [edx+0x54],0x54
  420072:	xor    DWORD PTR ds:0xa31b825e,ecx
  420078:	mov    bh,0x78
  42007a:	cmp    DWORD PTR [eax+0x66f53d26],0xffffffe0
  420081:	aas    
  420082:	sbb    BYTE PTR [ecx+0x714d5337],dh
  420088:	push   eax
  420089:	call   0xc988b5e0
  42008e:	xchg   edi,eax
  42008f:	xchg   ebp,eax
  420090:	lock std 
  420092:	jecxz  0x420083
  420094:	cmp    BYTE PTR es:[ecx-0x396a1562],al
  42009b:	pop    edi
  42009c:	jae    0x420098
  42009e:	dec    ecx
  42009f:	inc    edx
  4200a0:	lea    ecx,[eax+ebx*2+0x707c416c]
  4200a7:	hlt    
  4200a8:	mov    esp,0xfcef0164
  4200ad:	stos   BYTE PTR es:[edi],al
  4200ae:	adc    ebp,ebx
  4200b0:	pushf  
  4200b1:	mov    al,ds:0xfc538dbd
  4200b6:	cmp    edx,DWORD PTR [edi-0x536f045d]
  4200bc:	and    al,0xad
  4200be:	add    bl,BYTE PTR [edi]
  4200c0:	in     eax,dx
  4200c1:	cmp    al,0x9e
  4200c3:	inc    DWORD PTR [edx+0x5f]
  4200c6:	push   esp
  4200c7:	cld    
  4200c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c9:	and    eax,0x60ef12f2
  4200ce:	dec    edi
  4200cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d0:	mov    eax,ds:0xfa1da2d2
  4200d5:	mov    dh,0xcb
  4200d7:	test   eax,0x6c781006
  4200dc:	pusha  
  4200dd:	sub    esi,edi
  4200df:	pusha  
  4200e0:	sub    eax,0xcee0b70d
  4200e5:	sub    dh,BYTE PTR [ecx]
  4200e7:	(bad)  
  4200e8:	sbb    al,0x42
  4200ea:	jle    0x42007b
  4200ec:	fadd   QWORD PTR fs:[esi-0x77]
  4200f0:	jge    0x4200be
  4200f2:	icebp  
  4200f3:	mov    bh,0xb0
  4200f5:	push   eax
  4200f6:	retf   
  4200f7:	in     al,0xd2
  4200f9:	and    eax,0x29c70b5a
  4200fe:	mov    al,0x4f
  420100:	ins    BYTE PTR es:[edi],dx
  420101:	cmove  ebx,DWORD PTR [ebp-0x1a]
  420105:	out    0x45,eax
  420107:	ins    BYTE PTR es:[edi],dx
  420108:	into   
  420109:	mov    ss,WORD PTR [ebp+0x1b]
  42010c:	fadd   DWORD PTR [esi+0x14fab78a]
  420112:	add    al,BYTE PTR [ebx+0x2c]
  420115:	inc    ebx
  420116:	cmp    DWORD PTR [eax-0x306f7e26],esp
  42011c:	fdivr  DWORD PTR [ebp-0x6b]
  42011f:	add    al,0xd0
  420121:	movsx  ebp,BYTE PTR [esi+0x2e2cdfb2]
  420128:	js     0x420138
  42012a:	test   dl,0xc7
  42012d:	and    DWORD PTR [ebx+0x2d372339],ebp
  420133:	dec    ecx
  420134:	std    
  420135:	sub    al,0x5a
  420137:	pop    eax
  420138:	cdq    
  420139:	xor    BYTE PTR [eax-0x6d7b2ed1],0x30
  420140:	inc    esi
  420141:	mov    ecx,0x6293ce9a
  420146:	shr    esi,0x96
  420149:	adc    BYTE PTR [esi],0x2e
  42014c:	mov    DWORD PTR [esi+0x6],0xdb1c01ae
  420153:	jge    0x420150
  420155:	inc    edx
  420156:	ret    0xb597
  420159:	add    BYTE PTR [eax],al
  42015b:	add    BYTE PTR [ebx+0x7d7539cf],bh
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0xed4f20f]
  42016b:	retf   0x7daf
  42016e:	add    DWORD PTR [eax],eax
  420170:	test   DWORD PTR [edx],eax
  420172:	add    BYTE PTR [eax],al
  420174:	pusha  
  420175:	fisubr WORD PTR [ecx+0x1b]
  420178:	sub    eax,0xbccb93d7
  42017d:	stos   BYTE PTR es:[edi],al
  42017e:	sbb    DWORD PTR [esi],eax
  420180:	out    dx,eax
  420181:	pop    esp
  420182:	lods   eax,DWORD PTR ds:[esi]
  420183:	sub    al,BYTE PTR [edx+edx*1]
  420186:	enter  0x4650,0x0
  42018a:	dec    ebp
  42018b:	ins    DWORD PTR es:[edi],dx
  42018c:	xor    al,BYTE PTR [ebx-0x34]
  42018f:	and    al,0xf7
  420191:	mov    dh,0xd5
  420193:	sbb    ch,BYTE PTR ds:0xcc35915a
  420199:	aad    0x5f
  42019b:	fs sbb bh,al
  42019e:	lds    eax,FWORD PTR [edx-0x34]
  4201a1:	clc    
  4201a2:	call   0xc82bfc9a
  4201a7:	mov    dl,BYTE PTR [ebx]
  4201a9:	loopne 0x420208
  4201ab:	jecxz  0x4201bb
  4201ad:	sub    dh,BYTE PTR [esi+0x2c333161]
  4201b3:	xchg   ebp,eax
  4201b4:	xchg   esi,eax
  4201b5:	retf   0xc101
  4201b8:	xor    bh,cl
  4201ba:	rcr    DWORD PTR ds:0xba88bcb9,cl
  4201c0:	fimul  WORD PTR [edx+0x2a]
  4201c3:	icebp  
  4201c4:	jmp    0x708f:0x14490057
  4201cb:	sub    eax,0xaff9aa11
  4201d0:	enter  0xc504,0x6c
  4201d4:	icebp  
  4201d5:	and    BYTE PTR [ecx-0x53],dh
  4201d8:	gs call 0x451edfd2
  4201de:	es add ecx,esi
  4201e1:	daa    
  4201e2:	mov    ebx,0xa35ce10
  4201e7:	lods   al,BYTE PTR ds:[esi]
  4201e8:	outs   dx,BYTE PTR ds:[esi]
  4201e9:	cmp    ah,BYTE PTR [esi+0x7e8845fb]
  4201ef:	and    BYTE PTR [eax-0x17],0x56
  4201f3:	test   al,0x3
  4201f5:	dec    esi
  4201f6:	adc    DWORD PTR [edi+0x7f32a018],ebx
  4201fc:	outs   dx,BYTE PTR ds:[esi]
  4201fd:	or     DWORD PTR [ebp+0x5980563a],esp
  420203:	push   es
  420204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420205:	dec    ebx
  420206:	into   
  420207:	pop    ebx
  420208:	(bad)  
  420209:	outs   dx,DWORD PTR ds:[esi]
  42020a:	cmovb  edi,DWORD PTR [edi+eiz*1]
  42020e:	add    eax,0x1997c5df
  420213:	inc    DWORD PTR es:[edi+edi*4]
  420217:	jb     0x4201c0
  420219:	out    0x24,al
  42021b:	mov    bl,0xec
  42021d:	mov    ch,BYTE PTR [edx]
  42021f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420220:	jmp    0x339d:0x179cfed2
  420227:	(bad)  
  420229:	adc    BYTE PTR [eax+0x10],bh
  42022c:	out    dx,eax
  42022d:	scas   al,BYTE PTR es:[edi]
  42022e:	mov    ebp,DWORD PTR [ecx-0x4857c006]
  420234:	shl    esi,0x91
  420237:	add    bh,dh
  420239:	or     BYTE PTR [esi+0x4c],dl
  42023c:	jge    0x42020f
  42023e:	xchg   bx,ax
  420240:	sar    DWORD PTR [ecx],1
  420242:	test   ch,cl
  420244:	jo     0x4201ce
  420246:	pop    es
  420247:	ja     0x420273
  420249:	push   ss
  42024a:	aas    
  42024b:	xor    eax,0xa9d48a49
  420250:	leave  
  420251:	clc    
  420252:	(bad)  
  420254:	in     eax,0x23
  420256:	push   es
  420257:	jmp    0x923cb64d
  42025c:	les    ebx,FWORD PTR [ecx+edi*4-0xa]
  420260:	stos   DWORD PTR es:[edi],eax
  420261:	mov    es,eax
  420263:	cmp    eax,DWORD PTR [ebp+0x169ef2b8]
  420269:	int    0x83
  42026b:	pop    edi
  42026c:	dec    esi
  42026d:	sub    al,0x98
  42026f:	push   ds
  420270:	mov    edx,0x6c3f0918
  420275:	test   eax,0x8a70ba57
  42027a:	add    ebp,edi
  42027c:	pop    ebp
  42027d:	sub    ebp,DWORD PTR ds:0x42864c1f
  420283:	cmp    BYTE PTR [eax+0x5a],dh
  420286:	adc    DWORD PTR [ebx+0x55],ebx
  420289:	dec    ebp
  42028a:	shl    DWORD PTR [esi],cl
  42028c:	xor    eax,0xb716680d
  420291:	pop    ecx
  420292:	int    0xbd
  420294:	stc    
  420295:	ret    0xd7a4
  420298:	into   
  420299:	mov    esi,0xec4693d1
  42029e:	dec    edx
  42029f:	dec    eax
  4202a0:	arpl   WORD PTR cs:[ebx+0x5c],si
  4202a4:	inc    edx
  4202a5:	pushf  
  4202a6:	call   DWORD PTR [ebp+0x21356269]
  4202ac:	mov    esi,0x1817bc5e
  4202b1:	fwait
  4202b2:	sbb    eax,0x70a98b02
  4202b7:	pop    edi
  4202b8:	and    eax,0x5850b606
  4202bd:	and    al,0x6
  4202bf:	mov    dh,0xad
  4202c1:	test   BYTE PTR [ebx+edx*1-0x2f],bh
  4202c5:	(bad)  
  4202c6:	inc    esi
  4202c7:	mov    es:0xd33838d1,eax
  4202cd:	xchg   ebp,eax
  4202ce:	push   edi
  4202cf:	test   al,0xbe
  4202d1:	cmp    ah,bl
  4202d3:	in     al,0xfd
  4202d5:	imul   esi,eax,0x41
  4202d8:	mov    dl,0x8c
  4202da:	or     eax,0xf55907b7
  4202df:	sbb    eax,0xf51492c5
  4202e4:	mov    al,0x14
  4202e6:	sub    eax,0x267f660
  4202eb:	cwde   
  4202ec:	dec    esp
  4202ed:	shr    ch,0x6f
  4202f0:	das    
  4202f1:	xor    BYTE PTR [esi+eiz*4+0x1ae51c42],bh
  4202f8:	jb     0x420329
  4202fa:	sar    edi,cl
  4202fc:	sub    ecx,0x7
  4202ff:	add    ebp,DWORD PTR [ebx]
  420301:	scas   al,BYTE PTR es:[edi]
  420302:	ins    BYTE PTR es:[edi],dx
  420303:	leave  
  420304:	mov    bl,bh
  420306:	pop    ds
  420307:	and    dl,bh
  420309:	arpl   dx,bp
  42030b:	shr    BYTE PTR [esp+edi*4-0x6a1d2f73],0x52
  420313:	sar    DWORD PTR [esi+0x4e],1
  420316:	sub    ch,bh
  420318:	mov    BYTE PTR [ebx-0x2a],al
  42031b:	cwde   
  42031c:	rol    WORD PTR [ecx+0x788e9bd3],cl
  420323:	imul   edi,DWORD PTR [ebp+eiz*4-0x39],0x45
  420328:	dec    ebp
  420329:	xchg   ebp,eax
  42032a:	dec    esi
  42032b:	cmp    ebp,esp
  42032d:	dec    esi
  42032e:	lods   al,BYTE PTR ds:[esi]
  42032f:	push   eax
  420330:	jge    0x420345
  420332:	dec    eax
  420333:	inc    ebx
  420334:	mov    ebx,0xd6049016
  420339:	pop    ss
  42033a:	shl    BYTE PTR [edi+0x18],0x40
  42033e:	sub    al,0xba
  420340:	cmc    
  420341:	scas   eax,DWORD PTR es:[edi]
  420342:	and    cl,ch
  420344:	jnp    0x4202c8
  420346:	cld    
  420347:	ret    0x74a8
  42034a:	jmp    0x420333
  42034c:	out    0x5f,eax
  42034e:	js     0x42034a
  420350:	sub    DWORD PTR [ecx+0x7b5b6976],ebp
  420356:	pushf  
  420357:	jns    0x420313
  420359:	out    dx,al
  42035a:	and    eax,0xf2194f02
  42035f:	sar    DWORD PTR [esp+esi*2],1
  420362:	push   ebp
  420363:	adc    eax,0x4e47e974
  420368:	pop    ebp
  420369:	les    esp,FWORD PTR ds:0xed08b796
  42036f:	(bad)  
  420370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420371:	or     BYTE PTR [ecx+ebp*4-0x154d7bb6],ah
  420378:	mov    WORD PTR [edi-0x71],ss
  42037b:	jle    0x4203cb
  42037d:	pop    esi
  42037e:	dec    edi
  42037f:	cmp    ecx,ebp
  420381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420382:	je     0x42032f
  420384:	mov    ch,0x6d
  420386:	retf   0x7b80
  420389:	pop    DWORD PTR [ecx]
  42038b:	loope  0x4203cf
  42038d:	gs sub al,0x24
  420390:	mov    es,edx
  420392:	inc    esp
  420393:	xor    bh,BYTE PTR [edx-0x5b]
  420396:	ja     0x4203a7
  420398:	dec    esp
  420399:	gs jge 0x420370
  42039c:	outs   dx,DWORD PTR ds:[esi]
  42039d:	push   0x41
  42039f:	outs   dx,BYTE PTR ds:[esi]
  4203a0:	inc    esi
  4203a1:	cmp    BYTE PTR [edx],ch
  4203a3:	mov    ds:0x72826f79,al
  4203a8:	jbe    0x4203ad
  4203aa:	sbb    esi,DWORD PTR [eax+0x63]
  4203ad:	sar    bl,0xad
  4203b0:	shr    DWORD PTR [edi],cl
  4203b2:	jge    0x420419
  4203b4:	mov    edx,0xbbe08dc4
  4203b9:	jp     0x42033f
  4203bb:	repz jb 0x42038e
  4203be:	push   0xfffffff5
  4203c0:	and    al,0x38
  4203c2:	aas    
  4203c3:	daa    
  4203c4:	push   ebx
  4203c5:	repnz mov esp,0xc265d2a
  4203cb:	and    dh,BYTE PTR [eax+0x1fd6367f]
  4203d1:	add    eax,0xaa898874
  4203d6:	xor    eax,0xb77fe0cc
  4203db:	scas   al,BYTE PTR es:[edi]
  4203dc:	mul    ecx
  4203de:	(bad)  
  4203df:	mov    ebx,0x72e1f73c
  4203e4:	fimul  DWORD PTR [eax]
  4203e6:	fwait
  4203e7:	(bad)  
  4203e8:	iret   
  4203e9:	cmp    eax,esi
  4203eb:	xor    ecx,esi
  4203ed:	fsubr  QWORD PTR ds:0x4f591eb3
  4203f3:	push   es
  4203f4:	jae    0x4203ec
  4203f6:	push   edx
  4203f7:	fdivr  DWORD PTR [ecx-0x12000000]
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x9e771b37
  42040b:	xor    DWORD PTR [eax+eax*4],0x1
  42040f:	add    BYTE PTR [ebp-0x6fffffe],al
  420415:	xchg   edx,eax
  420416:	ret    0x49d4
  420419:	mov    WORD PTR [edx+0x48],ss
  42041c:	or     al,0x63
  42041e:	push   ebp
  42041f:	inc    ecx
  420420:	retf   0x3be4
  420423:	cli    
  420424:	inc    esp
  420425:	in     al,dx
  420426:	xchg   esi,eax
  420427:	les    edi,FWORD PTR [esi-0xe]
  42042a:	jno    0x42041a
  42042c:	stc    
  42042d:	mov    dl,0x3a
  42042f:	inc    ebp
  420430:	jnp    0x420415
  420432:	retf   
  420433:	lock adc eax,0xe3870448
  420439:	inc    esi
  42043a:	sub    eax,0x7f121543
  42043f:	jae    0x420426
  420441:	xchg   ebx,eax
  420442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420443:	xchg   BYTE PTR ds:0xcff20900,bl
  420449:	or     al,0x1f
  42044b:	and    eax,0xad8ef0dc
  420450:	sub    BYTE PTR [ebx],ch
  420452:	mov    dh,ah
  420454:	popf   
  420455:	mov    ds:0x5c88dd64,al
  42045a:	mov    BYTE PTR [edx+0x2d294155],0xaf
  420461:	sbb    cl,BYTE PTR [esi-0x759b081b]
  420467:	stos   BYTE PTR es:[edi],al
  420468:	lock mov al,ds:0xca233395
  42046e:	push   eax
  42046f:	call   0xbdea2b7c
  420474:	xor    DWORD PTR [edi+0x5c174206],ebx
  42047a:	jno    0x420449
  42047c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047d:	ins    DWORD PTR es:[edi],dx
  42047e:	ds mov ebp,0x8183ea40
  420484:	outs   dx,BYTE PTR ds:[esi]
  420485:	(bad)  [edx]
  420487:	iret   
  420488:	mov    eax,esp
  42048a:	je     0x420470
  42048c:	int3   
  42048d:	lds    esi,FWORD PTR [ebp-0x79fd48d2]
  420493:	sub    DWORD PTR [ecx+ecx*8+0x1e7cddf8],esp
  42049a:	jmp    0x4204be
  42049c:	xchg   edx,eax
  42049d:	int    0xf
  42049f:	lods   eax,DWORD PTR ds:[esi]
  4204a0:	inc    esp
  4204a1:	sub    ah,BYTE PTR [edx-0x3a3b8ac8]
  4204a7:	call   0xc304:0xa176ce11
  4204ae:	mov    ch,0x22
  4204b0:	xor    edx,DWORD PTR [edi]
  4204b2:	imul   ecx,DWORD PTR [ebx],0x41
  4204b5:	push   esi
  4204b6:	lods   eax,DWORD PTR ds:[esi]
  4204b7:	sub    ebp,ebp
  4204b9:	int3   
  4204ba:	mov    ecx,0xcbe495c2
  4204bf:	jno    0x4204da
  4204c1:	jp     0x420471
  4204c3:	mov    eax,0x6b5e2914
  4204c8:	push   ebx
  4204c9:	cmp    ah,BYTE PTR [ecx]
  4204cb:	jo     0x420512
  4204cd:	mov    ebp,0x7cb0c190
  4204d2:	or     al,0xcf
  4204d4:	mov    ch,0x6a
  4204d6:	jle    0x420477
  4204d8:	popf   
  4204d9:	jmp    0x420509
  4204db:	sbb    BYTE PTR [ebx],0xa8
  4204de:	push   es
  4204df:	jbe    0x4204c2
  4204e1:	xor    DWORD PTR [ebp+0x10665474],0x3f
  4204e8:	xor    ebp,ebp
  4204ea:	dec    ebx
  4204eb:	stos   BYTE PTR es:[edi],al
  4204ec:	cmp    eax,0x995ea8e0
  4204f1:	pop    esp
  4204f2:	push   ebx
  4204f3:	sub    BYTE PTR [ecx+0xe47a146],dh
  4204f9:	retf   0xa05f
  4204fc:	rcl    BYTE PTR [edx+0x51],cl
  4204ff:	(bad)  
  420500:	imul   esi,DWORD PTR [esi],0xd3607f5d
  420506:	and    BYTE PTR [ecx+0x79],bh
  420509:	add    al,0x47
  42050b:	and    BYTE PTR [edx-0x72],ah
  42050e:	jo     0x4204c5
  420510:	dec    ebp
  420511:	repnz call FWORD PTR [esi-0x2]
  420515:	pop    edi
  420516:	rol    BYTE PTR [esi-0x1089504c],0x71
  42051d:	stc    
  42051e:	imul   ebx,edi,0xd312142b
  420524:	aaa    
  420525:	imul   ebx,DWORD PTR [ecx+0x46],0x11
  420529:	mov    DWORD PTR [edi+0x77300b56],0x2b5d7a9d
  420533:	cmc    
  420534:	jns    0x4204b9
  420536:	daa    
  420537:	outs   dx,BYTE PTR ds:[esi]
  420538:	(bad)  
  420539:	fld    st(2)
  42053b:	sub    BYTE PTR [edx-0x6425ea8b],dl
  420541:	jp     0x42058c
  420543:	push   esi
  420544:	mov    eax,0x6ef904ee
  420549:	or     eax,0x82ec814
  42054e:	cmp    dh,ch
  420550:	scas   eax,DWORD PTR es:[edi]
  420551:	in     eax,dx
  420552:	aad    0x1f
  420554:	and    ah,ch
  420556:	pop    ebx
  420557:	enter  0x9283,0x6
  42055b:	iret   
  42055c:	and    ch,BYTE PTR ds:0xf3d3207d
  420562:	pop    ss
  420563:	cmc    
  420564:	popf   
  420565:	test   al,0x75
  420567:	je     0x420555
  420569:	push   ebp
  42056a:	leave  
  42056b:	mov    ebp,0xf8730dc3
  420570:	xor    DWORD PTR [ebx+ebx*8],edx
  420573:	(bad)  
  420574:	adc    al,0xfb
  420576:	loopne 0x420550
  420578:	aas    
  420579:	or     ah,ch
  42057b:	add    eax,0x34ee4447
  420580:	pop    eax
  420581:	and    BYTE PTR [esi-0x58],cl
  420584:	push   ebp
  420585:	(bad)  [eax]
  420587:	push   es
  420588:	call   0x161c:0x8e9599cf
  42058f:	mov    ebx,0x1617d382
  420594:	or     esi,esp
  420596:	aam    0xdc
  420598:	aaa    
  420599:	out    dx,eax
  42059a:	add    DWORD PTR [esi+0x6d1e1efd],edi
  4205a0:	(bad)  
  4205a1:	mov    bl,0xbc
  4205a3:	ins    BYTE PTR es:[edi],dx
  4205a4:	retf   0x615c
  4205a7:	ins    BYTE PTR es:[edi],dx
  4205a8:	(bad)  
  4205a9:	call   0xf3128fe5
  4205ae:	mov    WORD PTR [ecx],ds
  4205b0:	scas   al,BYTE PTR es:[edi]
  4205b1:	mov    ds:0xd2aaf996,al
  4205b6:	test   DWORD PTR [ecx+0x19],edx
  4205b9:	lods   al,BYTE PTR ds:[esi]
  4205ba:	and    DWORD PTR [ecx+0x15],0x80479772
  4205c1:	or     al,0x8f
  4205c3:	and    eax,0xc3046b58
  4205c8:	add    eax,DWORD PTR gs:[ebx-0xb3cf214]
  4205cf:	nop
  4205d0:	sbb    ah,BYTE PTR [edx]
  4205d2:	push   esi
  4205d3:	retf   
  4205d4:	out    dx,eax
  4205d5:	xchg   esi,eax
  4205d6:	sti    
  4205d7:	jge    0x420576
  4205d9:	xor    bl,BYTE PTR [edx]
  4205db:	jle    0x42058d
  4205dd:	sti    
  4205de:	push   ecx
  4205df:	enter  0xa6c2,0x9d
  4205e3:	dec    ebp
  4205e4:	in     al,0xbf
  4205e6:	retf   0xbc61
  4205e9:	(bad)  
  4205ea:	dec    ebp
  4205eb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4205ed:	xchg   esi,eax
  4205ee:	and    al,0x9f
  4205f0:	sbb    ebp,DWORD PTR [eax+0x79]
  4205f3:	in     eax,0xb4
  4205f5:	jl     0x4205af
  4205f7:	mov    eax,0xde0816a1
  4205fc:	dec    ebp
  4205fd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4205ff:	je     0x42058c
  420601:	mov    ebx,0x5443e574
  420606:	out    dx,al
  420607:	jg     0x42066a
  420609:	add    bh,BYTE PTR [ecx+0x32]
  42060c:	fmul   QWORD PTR [edi-0x50]
  42060f:	push   0xffd48294
  420614:	adc    al,0xce
  420616:	test   DWORD PTR [esi-0x4cf4ec8f],0x6db07ea3
  420620:	xchg   ebp,eax
  420621:	popf   
  420622:	lods   al,BYTE PTR ds:[esi]
  420623:	add    DWORD PTR [ebp+0x2262dd3f],ebx
  420629:	lods   al,BYTE PTR ds:[esi]
  42062a:	out    dx,eax
  42062b:	enter  0x7c9,0x92
  42062f:	xor    dh,bl
  420631:	repnz pop esp
  420633:	mov    al,0x5e
  420635:	imul   esp,DWORD PTR gs:[ebx-0x45cbead2],0x5f5993ae
  420640:	or     bh,0xf3
  420643:	mov    dl,0x14
  420645:	test   DWORD PTR [ecx],edi
  420647:	dec    edx
  420648:	bound  edx,QWORD PTR [ecx-0x4f]
  42064b:	pop    ebx
  42064c:	adc    dh,BYTE PTR [ebp-0x75ba79cc]
  420652:	leave  
  420653:	out    0xfe,eax
  420655:	or     DWORD PTR [ecx-0x66],ebp
  420658:	jne    0x420673
  42065a:	fs push ebx
  42065c:	mov    edx,0xf9ef2d0c
  420661:	mov    ebx,0x65dd031f
  420666:	dec    edx
  420667:	cmp    bl,al
  420669:	jg     0x42060e
  42066b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42066c:	pop    esi
  42066d:	sahf   
  42066e:	adc    BYTE PTR [edi+0x4717a749],0x20
  420675:	mov    esp,0xe0294e03
  42067a:	ds into 
  42067c:	inc    eax
  42067d:	(bad)  
  42067e:	in     al,dx
  42067f:	add    esi,eax
  420681:	sub    eax,0x2572cee6
  420686:	bound  ebx,QWORD PTR [ebx-0x155c105]
  42068c:	stos   DWORD PTR es:[edi],eax
  42068d:	adc    al,0x7b
  420690:	inc    esp
  420691:	sub    BYTE PTR [edx+0x20],dh
  420694:	out    dx,eax
  420695:	mov    esp,0x5a62e2
  42069a:	add    BYTE PTR [eax],al
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82b9:0xa5e21a46
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	test   DWORD PTR [edx],eax
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	push   esp
  4206b5:	daa    
  4206b6:	mov    al,0xb0
  4206b8:	mov    DWORD PTR [ecx+esi*1],0x9be3dab
  4206bf:	pop    ss
  4206c0:	shr    BYTE PTR [ebp-0x12619634],cl
  4206c6:	or     eax,0x12c35fa0
  4206cb:	rcpps  xmm7,XMMWORD PTR [esi]
  4206ce:	icebp  
  4206cf:	dec    esi
  4206d0:	(bad)  
  4206d1:	shr    DWORD PTR [edi-0x4cbbb530],1
  4206d7:	(bad)  
  4206d9:	adc    BYTE PTR [ebx+0x48466209],0xf
  4206e0:	in     eax,dx
  4206e1:	in     eax,dx
  4206e2:	sbb    ebp,ebx
  4206e4:	ficomp DWORD PTR [edi+ebx*1]
  4206e7:	je     0x420674
  4206e9:	mov    WORD PTR [eiz*4+0x51471ad2],?
  4206f0:	xchg   edi,eax
  4206f1:	test   al,0x87
  4206f3:	ret    
  4206f4:	add    dh,BYTE PTR [eax-0x64]
  4206f7:	lds    esi,FWORD PTR [edi-0x220180b8]
  4206fd:	push   ecx
  4206fe:	shl    DWORD PTR [edx],cl
  420700:	enter  0xb4cc,0xb8
  420704:	cmp    al,BYTE PTR [ebx+0x72e35ad6]
  42070a:	stos   BYTE PTR es:[edi],al
  42070b:	sbb    al,0x9f
  42070d:	push   es
  42070e:	mov    esi,0x8a00026c
  420713:	cmp    al,BYTE PTR [ecx+ebx*8]
  420716:	mov    al,dh
  420718:	adc    edi,DWORD PTR [edi]
  42071a:	xor    ebp,ecx
  42071c:	idiv   DWORD PTR [ebp+0x435d6258]
  420722:	lea    eax,[eax-0x3a]
  420725:	push   es
  420726:	jnp    0x420712
  420728:	fwait
  420729:	xchg   edx,eax
  42072a:	mov    ebx,DWORD PTR [ecx+0x33]
  42072d:	dec    eax
  42072e:	clc    
  42072f:	mov    edx,0x4b5e0608
  420734:	xor    al,0x81
  420736:	push   0xe9d049e2
  42073b:	(bad)  
  42073c:	mov    dl,0xc8
  42073e:	push   ebp
  42073f:	imul   ecx,DWORD PTR [ebx-0x494117fa],0xb825a74b
  420749:	pop    edx
  42074a:	fnstcw WORD PTR [edx+0x73]
  42074d:	std    
  42074e:	sbb    ah,cl
  420750:	repz je 0x420793
  420753:	xchg   ebx,eax
  420754:	std    
  420755:	jnp    0x4206f0
  420757:	test   ah,0x1b
  42075a:	loop   0x4207c5
  42075c:	jg     0x42073e
  42075e:	hlt    
  42075f:	mov    ebx,0xb37433e
  420764:	jmp    0x5340c6ea
  420769:	aad    0x24
  42076b:	xor    eax,0xa382fb41
  420770:	xchg   ebx,eax
  420771:	add    ah,dl
  420773:	int3   
  420774:	or     ah,BYTE PTR [ebp+0x11dcb22]
  42077a:	add    al,0x30
  42077c:	sub    ebp,DWORD PTR [eax-0x176d9d82]
  420782:	xchg   edi,ecx
  420784:	sbb    DWORD PTR [eax-0x7aadd39e],0x66
  42078b:	nop
  42078c:	pop    ss
  42078d:	pop    ebp
  42078e:	cwde   
  42078f:	hlt    
  420790:	xchg   esp,eax
  420791:	iret   
  420792:	mov    dl,0xbe
  420794:	sbb    DWORD PTR [ebx-0x21215eeb],ebx
  42079a:	imul   esi,DWORD PTR [edx+edi*1+0x3fb1c3d6],0xa
  4207a2:	mov    ds:0x5372b72f,eax
  4207a7:	es inc eax
  4207a9:	xchg   esi,eax
  4207aa:	fwait
  4207ab:	mov    edi,0xd6bba4cd
  4207b0:	and    esi,DWORD PTR [ebx]
  4207b2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4207b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b5:	pushf  
  4207b6:	fisubr DWORD PTR [esi+0x67]
  4207b9:	jno    0x420832
  4207bb:	mov    ecx,0xa7422c46
  4207c0:	mov    ah,BYTE PTR [ecx]
  4207c2:	inc    edx
  4207c3:	fbld   TBYTE PTR [edi+0xf470cef]
  4207c9:	pop    esp
  4207ca:	and    al,0x86
  4207cc:	stc    
  4207cd:	push   eax
  4207ce:	icebp  
  4207cf:	mov    edi,0x4b9c16f7
  4207d4:	dec    edx
  4207d5:	add    DWORD PTR [esi+0x5e56dcde],0xddeb88a8
  4207df:	xchg   ecx,eax
  4207e0:	jae    0x4207d5
  4207e2:	xor    BYTE PTR [edi+0x58145f86],al
  4207e8:	push   ebx
  4207e9:	call   0x8005:0x61dffc7b
  4207f0:	inc    eax
  4207f1:	cmp    al,0x63
  4207f3:	xor    ebx,DWORD PTR [eax]
  4207f5:	aam    0xbf
  4207f7:	jp     0x42086f
  4207f9:	pop    esp
  4207fb:	push   ebx
  4207fc:	add    al,BYTE PTR [eax+0xf]
  4207ff:	stos   BYTE PTR es:[edi],al
  420800:	test   BYTE PTR [edx-0x484913b0],bl
  420806:	es pop edx
  420808:	mov    ds,edi
  42080a:	stc    
  42080b:	int3   
  42080c:	sub    ebp,DWORD PTR [eax]
  42080e:	mov    dh,0x42
  420810:	inc    ebx
  420811:	dec    esp
  420812:	out    dx,eax
  420813:	adc    eax,0x96fb1aed
  420818:	and    dl,BYTE PTR [eax+ecx*8+0x2a3436bb]
  42081f:	out    dx,eax
  420820:	leave  
  420821:	and    cl,BYTE PTR [ecx+0x60]
  420824:	push   0x69
  420826:	jo     0x420871
  420828:	push   ds
  420829:	jno    0x42084a
  42082b:	imul   esp,DWORD PTR [ebx-0x76],0x2c
  42082f:	push   0x6e
  420831:	imul   esi,DWORD PTR [esi],0x6cf345e7
  420837:	retf   0x3544
  42083a:	enter  0xc742,0xc5
  42083e:	cwde   
  42083f:	sbb    al,0xf
  420841:	mov    ah,ah
  420843:	and    BYTE PTR [esi],cl
  420845:	cwde   
  420846:	pop    eax
  420847:	outs   dx,DWORD PTR ds:[esi]
  420848:	aaa    
  420849:	(bad)  
  42084b:	or     BYTE PTR [ebx],bh
  42084d:	ficom  DWORD PTR [ebx-0x4d]
  420850:	mov    dl,0xc8
  420852:	dec    ebp
  420853:	std    
  420854:	les    eax,FWORD PTR [esi-0x2d]
  420857:	les    ecx,FWORD PTR [ebp+0x454a160f]
  42085d:	sbb    DWORD PTR [edx+0x78],eax
  420860:	adc    eax,0xa62ab036
  420865:	xor    edi,DWORD PTR [ebp+0x1d]
  420868:	mov    eax,0x55149fce
  42086d:	in     al,dx
  42086e:	mov    al,ds:0xffe0483c
  420873:	and    ebp,DWORD PTR [ebx-0x14d23424]
  420879:	jnp    0x420898
  42087b:	out    dx,eax
  42087c:	cmp    ebx,DWORD PTR [edx+esi*2]
  42087f:	adc    DWORD PTR [eax+0x7d3fa115],esp
  420885:	cmp    bl,bh
  420887:	mov    cl,0xb7
  420889:	hlt    
  42088a:	rol    BYTE PTR [edx+edx*1],cl
  42088d:	repnz sub al,0x8d
  420890:	pop    ebp
  420891:	xor    BYTE PTR [esi-0x499c85c2],0xa9
  420898:	mov    DWORD PTR [ebx],esp
  42089a:	js     0x42083e
  42089c:	push   eax
  42089d:	push   0xbb922604
  4208a2:	mov    ds:0xff39d379,al
  4208a7:	das    
  4208a8:	shr    BYTE PTR [ebx+0x31],cl
  4208ab:	fs out dx,eax
  4208ad:	je     0x420864
  4208af:	repz xor al,0xf2
  4208b2:	mov    ?,ecx
  4208b4:	push   ebp
  4208b5:	jne    0x4208a8
  4208b7:	add    al,0xb0
  4208b9:	sub    ebp,DWORD PTR [esi+0x2c]
  4208bc:	sar    DWORD PTR [ecx],1
  4208be:	push   ecx
  4208bf:	push   0xffffffd8
  4208c1:	cmp    al,0xff
  4208c3:	and    ch,BYTE PTR [edx]
  4208c5:	adc    eax,0x5b239e80
  4208ca:	push   esi
  4208cb:	jmp    0x420937
  4208cd:	add    al,0x44
  4208cf:	xor    al,0x37
  4208d1:	mov    dl,BYTE PTR [eax]
  4208d3:	call   0xe86a:0x4379df9e
  4208da:	fst    QWORD PTR [esi+0x6e]
  4208dd:	add    DWORD PTR [edx-0x47f9ece0],edi
  4208e3:	(bad)  
  4208e4:	jmp    0xd15e:0x5ff5b826
  4208eb:	sti    
  4208ec:	cmp    ch,bh
  4208ee:	sub    bl,ah
  4208f0:	or     esp,eax
  4208f2:	retf   0x43ed
  4208f5:	mov    cl,BYTE PTR [edi-0x1fa60446]
  4208fb:	push   ds
  4208fc:	push   esi
  4208fd:	lock xchg ecx,eax
  4208ff:	int3   
  420900:	pop    ebx
  420901:	ffree  st(5)
  420903:	fs cdq 
  420905:	out    0x36,eax
  420907:	aad    0xdf
  420909:	xchg   esp,eax
  42090a:	cld    
  42090b:	sub    edi,0x273e43dd
  420911:	mov    bh,ch
  420913:	pop    ds
  420914:	outs   dx,BYTE PTR ds:[esi]
  420915:	gs cmp eax,0x33ebcf9
  42091b:	pop    esp
  42091c:	mov    cl,0xf8
  42091e:	mov    ecx,0xdf3c5c66
  420923:	dec    ecx
  420924:	mov    dl,0x60
  420926:	test   BYTE PTR [edi-0x67],dh
  420929:	sbb    bh,BYTE PTR [ebx]
  42092b:	or     ebx,DWORD PTR [eax-0x33]
  42092e:	je     0x4209a5
  420930:	jecxz  0x4208ce
  420932:	dec    eax
  420933:	add    eax,0x46dcb508
  420938:	mov    cl,0x0
  42093a:	add    BYTE PTR [eax],al
  42093c:	adc    DWORD PTR [esi],ecx
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x7730fbda]
  420949:	cld    
  42094a:	mov    al,ds:0x1853e5f
  42094f:	add    BYTE PTR [ebp+0x11000002],al
  420955:	xor    eax,0xdc657de1
  42095a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42095c:	push   eax
  42095d:	inc    ecx
  42095e:	jle    0x420981
  420960:	ds dec esp
  420962:	xchg   esp,eax
  420963:	xor    eax,0x32c17670
  420968:	xor    cl,ah
  42096a:	arpl   WORD PTR [ebp-0x23c4dc00],dx
  420970:	call   0x2b27:0xb08e8821
  420977:	repz mov esi,0x65dc14c3
  42097d:	jbe    0x4209fc
  42097f:	dec    edi
  420980:	cmc    
  420981:	mov    al,0xc3
  420983:	xchg   ebx,eax
  420984:	lock mov edi,0xc2673864
  42098a:	mov    al,ds:0x79e4e791
  42098f:	inc    eax
  420990:	jge    0x420a04
  420992:	ss ds and eax,0x9527a20
  420999:	mov    ds:0x5494dc06,eax
  42099e:	and    al,0x1e
  4209a0:	jmp    0x39bafe29
  4209a5:	cmp    dh,BYTE PTR [ebp-0x6ea597e3]
  4209ab:	jecxz  0x4209d9
  4209ad:	inc    esp
  4209ae:	mov    ds:0x3ac3ee47,eax
  4209b3:	aaa    
  4209b4:	jge    0x42095a
  4209b6:	ds cmp eax,0x1b60037a
  4209bc:	push   ss
  4209bd:	add    al,0x56
  4209bf:	leave  
  4209c0:	pop    ds
  4209c1:	pop    edi
  4209c2:	fld    QWORD PTR [edi]
  4209c4:	jae    0x4209e7
  4209c6:	mov    bl,BYTE PTR [ebx]
  4209c8:	test   al,0x3
  4209ca:	adc    BYTE PTR [ebx+0x541e57c9],ch
  4209d0:	in     al,dx
  4209d1:	imul   esp,DWORD PTR [eax-0x14fd2ef0],0x7f
  4209d8:	inc    ecx
  4209d9:	leave  
  4209da:	(bad)  [edx+0x7d]
  4209dd:	shr    DWORD PTR [eax],0x58
  4209e0:	(bad)  
  4209e1:	test   eax,0x2d410963
  4209e6:	ins    BYTE PTR es:[edi],dx
  4209e7:	mov    fs,ebx
  4209e9:	jae    0x420984
  4209eb:	push   cs
  4209ec:	mov    edi,0x66351db7
  4209f1:	ret    0x648f
  4209f4:	in     al,0x81
  4209f6:	push   0x54393f8e
  4209fb:	je     0x420a24
  4209fd:	arpl   WORD PTR [eax+ebp*1],cx
  420a00:	or     esi,DWORD PTR [esi+0x2b]
  420a03:	aad    0x3c
  420a05:	or     eax,0x8d8b7928
  420a0a:	cmp    al,0x45
  420a0c:	cdq    
  420a0d:	retf   0xd028
  420a10:	(bad)  
  420a11:	enter  0x3969,0x8b
  420a15:	in     eax,0xf7
  420a17:	imul   edi,DWORD PTR [edi+eiz*2+0x2910e0ff],0xffffffad
  420a1f:	jmp    0x4209e5
  420a21:	push   ss
  420a22:	sub    al,0x3c
  420a24:	push   cs
  420a25:	pop    eax
  420a26:	and    dh,al
  420a28:	or     esp,DWORD PTR [edi+edx*8-0x23ad5ad2]
  420a2f:	adc    eax,0xbeca7658
  420a34:	add    BYTE PTR [ecx+eax*1-0x3e],bh
  420a38:	hlt    
  420a39:	mov    eax,0x19a3be3d
  420a3e:	adc    DWORD PTR [edi+ecx*2+0x4402880e],esi
  420a45:	das    
  420a46:	lea    eax,[eax+0x50efb29d]
  420a4c:	mov    edx,0x6adb83e0
  420a51:	dec    ecx
  420a52:	mov    esi,0x54bd6aaa
  420a57:	enter  0x252b,0x4c
  420a5b:	loopne 0x4209f1
  420a5d:	lea    edx,[edi+0x668d5083]
  420a63:	fimul  WORD PTR ds:0x9022761a
  420a69:	push   0xe4a1252c
  420a6e:	add    edi,DWORD PTR [ebp-0x2a140619]
  420a74:	cmp    BYTE PTR ds:0x219a72a1,dl
  420a7a:	xchg   ecx,eax
  420a7b:	push   edi
  420a7c:	mov    ecx,0xa612cc19
  420a81:	inc    esp
  420a82:	and    bl,bl
  420a84:	aam    0xec
  420a86:	jno    0x420a1b
  420a88:	push   ss
  420a89:	adc    ah,BYTE PTR ds:0x79398577
  420a8f:	ja     0x420a89
  420a91:	ficom  WORD PTR [eax]
  420a93:	and    ax,WORD PTR [edi]
  420a96:	ja     0x420ace
  420a98:	adc    dl,BYTE PTR [eax+edi*2]
  420a9b:	dec    esp
  420a9c:	daa    
  420a9d:	enter  0xd4cb,0x8
  420aa1:	cld    
  420aa2:	rcl    DWORD PTR [ecx-0x301ddedb],cl
  420aa8:	outs   dx,DWORD PTR ds:[esi]
  420aa9:	in     eax,dx
  420aaa:	mov    ah,cl
  420aac:	mov    al,ds:0x98f091f1
  420ab1:	pop    ss
  420ab2:	iret   
  420ab3:	jl     0x420a65
  420ab5:	outs   dx,BYTE PTR ds:[esi]
  420ab6:	fdiv   QWORD PTR [ecx-0x3f]
  420ab9:	out    0x3b,al
  420abb:	add    DWORD PTR [ecx],ebx
  420abd:	(bad)  
  420abf:	xchg   edx,eax
  420ac0:	leave  
  420ac1:	fimul  DWORD PTR [edx]
  420ac3:	cmp    DWORD PTR [esi-0x97a83a8],0x48ab951c
  420acd:	adc    al,0xcc
  420acf:	add    BYTE PTR [edx],ah
  420ad1:	push   es
  420ad2:	cli    
  420ad3:	inc    esi
  420ad4:	aam    0x86
  420ad6:	jbe    0x420aa0
  420ad8:	pushf  
  420ad9:	sub    al,0xee
  420adb:	aaa    
  420adc:	in     eax,dx
  420add:	or     esi,edi
  420adf:	les    edi,FWORD PTR ds:0x40091d1c
  420ae5:	or     eax,0x1a8e3b08
  420aea:	dec    edi
  420aeb:	into   
  420aec:	js     0x420aa7
  420aee:	pop    ds
  420aef:	(bad)  
  420af0:	cmp    BYTE PTR [ecx+0x1a],ch
  420af3:	jecxz  0x420b13
  420af5:	(bad)  
  420af6:	sbb    edx,DWORD PTR [ebp-0x55]
  420af9:	pop    edx
  420afa:	mov    ds:0x370f70bf,al
  420aff:	adc    BYTE PTR [edi],bl
  420b01:	cmp    bh,bh
  420b03:	fs dec esi
  420b05:	dec    esi
  420b06:	fdivrp st(4),st
  420b08:	ficomp DWORD PTR [edi]
  420b0a:	arpl   ax,di
  420b0c:	test   esi,esi
  420b0e:	(bad)  
  420b0f:	rol    DWORD PTR [esi-0x5b19d70d],cl
  420b15:	dec    ecx
  420b16:	adc    eax,DWORD PTR [eax-0x2437918e]
  420b1c:	pushf  
  420b1d:	jmp    0x420b6b
  420b1f:	fild   QWORD PTR [ebx]
  420b21:	js     0x420b6c
  420b23:	pushf  
  420b24:	pop    eax
  420b25:	icebp  
  420b26:	test   edx,ebx
  420b28:	jecxz  0x420b39
  420b2a:	int    0x9e
  420b2c:	jmp    0x1a18:0x6b95077f
  420b33:	lea    ecx,[edx+eax*4+0xa]
  420b37:	sub    ecx,DWORD PTR [edx+0x65af0c8b]
  420b3d:	jecxz  0x420b39
  420b3f:	fmul   QWORD PTR [eax-0x1b95b29d]
  420b45:	fcmovu st,st(2)
  420b47:	or     al,0xae
  420b49:	jbe    0x420b41
  420b4b:	popf   
  420b4c:	pop    esi
  420b4d:	cdq    
  420b4e:	ins    DWORD PTR es:[edi],dx
  420b4f:	jno    0x420b4d
  420b51:	jae    0x420b7a
  420b53:	cmc    
  420b54:	pop    edx
  420b55:	cmp    esi,ebx
  420b57:	inc    esi
  420b58:	imul   DWORD PTR [ebx-0x5]
  420b5b:	or     dl,dh
  420b5d:	loope  0x420b22
  420b5f:	xor    esp,ebx
  420b61:	repnz (bad) 
  420b63:	adc    dh,ah
  420b65:	mov    bl,0xa
  420b67:	retf   
  420b68:	dec    esp
  420b69:	pop    ss
  420b6a:	xchg   edx,eax
  420b6b:	or     ebx,DWORD PTR [esp+ebp*1]
  420b6e:	loope  0x420be1
  420b70:	enter  0x5ad7,0x6a
  420b74:	and    edx,DWORD PTR [eax]
  420b76:	adc    al,0x98
  420b78:	pop    eax
  420b79:	imul   eax,ebp,0xcface175
  420b7f:	icebp  
  420b80:	add    BYTE PTR [ebp-0x2d1dd94e],cl
  420b86:	dec    ebx
  420b87:	cmc    
  420b88:	xor    DWORD PTR [eax-0x29ce9ad2],0xffffffd1
  420b8f:	jb     0x420b93
  420b91:	loope  0x420b40
  420b93:	scas   al,BYTE PTR es:[edi]
  420b94:	and    BYTE PTR [ebx+eiz*4-0x370ae7d7],ah
  420b9b:	cmp    esi,DWORD PTR [edx]
  420b9d:	scas   eax,DWORD PTR es:[edi]
  420b9e:	and    BYTE PTR [esi-0x79],bh
  420ba1:	jns    0x420b3f
  420ba3:	fild   QWORD PTR [edx+0x3e26de55]
  420ba9:	cmp    ch,BYTE PTR [ebp+ecx*2+0x3cae6798]
  420bb0:	dec    edi
  420bb1:	xchg   ebp,eax
  420bb2:	(bad)  
  420bb3:	pushf  
  420bb4:	js     0x420c26
  420bb6:	mov    BYTE PTR [eax],dl
  420bb8:	out    dx,al
  420bb9:	xchg   edx,eax
  420bba:	mov    cl,0x8f
  420bbc:	dec    ecx
  420bbd:	xchg   ecx,eax
  420bbe:	adc    DWORD PTR [ebp-0x32fbeaee],ecx
  420bc4:	jnp    0x420b9f
  420bc6:	sti    
  420bc7:	push   esi
  420bc8:	adc    BYTE PTR [ebx-0xe553fe],0xd4
  420bcf:	ja     0x420c19
  420bd1:	ret    
  420bd2:	adc    DWORD PTR [ecx-0x8fbdee1],esi
  420bd8:	and    al,0x0
  420bda:	add    BYTE PTR [eax],al
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fsubr  DWORD PTR [esi-0x3ccedaca]
  420bed:	xchg   DWORD PTR [ecx],eax
  420bef:	add    BYTE PTR [ebp+0x1e000002],al
  420bf5:	mov    ds:0x5e95f4dc,al
  420bfa:	repz jnp 0x420be1
  420bfd:	lock sbb cl,dh
  420c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c01:	cmc    
  420c02:	mov    ah,0x85
  420c04:	sub    cl,dl
  420c06:	and    DWORD PTR [edx],edx
  420c08:	lods   eax,DWORD PTR ds:[esi]
  420c09:	add    ah,BYTE PTR [esi]
  420c0b:	xor    eax,0x9225a0c3
  420c10:	ret    0xa5d2
  420c13:	push   0xb788c893
  420c18:	mov    WORD PTR [ebx+0x24],es
  420c1b:	and    DWORD PTR [edi],0x6c6efaa9
  420c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c22:	rcr    BYTE PTR [eax-0x39],1
  420c25:	rcr    BYTE PTR [ecx-0xfcc1d47],1
  420c2b:	stc    
  420c2c:	out    0x4b,eax
  420c2e:	fisubr DWORD PTR [ebx+0x55]
  420c31:	mov    dl,0x46
  420c33:	aas    
  420c34:	fs or  ebp,edi
  420c37:	push   ds
  420c38:	add    ebp,DWORD PTR [ecx-0x42]
  420c3b:	and    al,BYTE PTR [ecx+0x14]
  420c3e:	mov    al,ds:0xb5a5546f
  420c43:	call   0xb022:0x4c7e1955
  420c4a:	lds    esi,FWORD PTR [esi-0x7469900d]
  420c50:	test   DWORD PTR [ecx],esp
  420c52:	dec    ebp
  420c53:	cmc    
  420c54:	cmp    DWORD PTR [ecx],eax
  420c56:	daa    
  420c57:	adc    eax,0x9a6b06b0
  420c5c:	sbb    al,BYTE PTR [ecx-0x305c4c1e]
  420c62:	test   dl,bh
  420c64:	(bad)  
  420c65:	dec    DWORD PTR [edx+eiz*4-0x2741ca95]
  420c6c:	sub    BYTE PTR ds:0xac6aea04,bh
  420c72:	sbb    al,0x25
  420c74:	mov    BYTE PTR [ebx+0x32],0x88
  420c78:	int3   
  420c79:	mov    ds:0x2f9b2d04,eax
  420c7e:	jne    0x420cc0
  420c80:	cmp    dh,BYTE PTR [eax-0x6ee8e3e9]
  420c86:	ss push cs
  420c88:	adc    al,BYTE PTR [esi+0x4e]
  420c8b:	repnz in al,dx
  420c8d:	rol    BYTE PTR [ecx],1
  420c8f:	cmp    ah,BYTE PTR [ebp-0x2c0c8438]
  420c95:	cmp    al,0xf
  420c97:	dec    ebp
  420c98:	add    al,0x63
  420c9a:	loopne 0x420c87
  420c9c:	rol    BYTE PTR [eax],cl
  420c9e:	push   es
  420c9f:	dec    ecx
  420ca0:	mov    bl,0x4f
  420ca2:	pop    edx
  420ca3:	inc    ecx
  420ca4:	sahf   
  420ca5:	push   eax
  420ca6:	es mov dh,0xf8
  420ca9:	xchg   edi,eax
  420caa:	push   esp
  420cab:	sub    eax,0x8ffab7c9
  420cb0:	adc    cl,BYTE PTR [ecx]
  420cb2:	cmp    BYTE PTR [edx+eiz*8-0x72],dl
  420cb6:	enter  0x921f,0x4d
  420cba:	pop    edx
  420cbb:	push   ebp
  420cbc:	fwait
  420cbd:	xchg   ebp,eax
  420cbe:	stc    
  420cbf:	iret   
  420cc0:	xor    eax,DWORD PTR [edi+0x1c]
  420cc3:	adc    dh,BYTE PTR [ecx]
  420cc5:	call   FWORD PTR [esi+esi*4+0x48]
  420cc9:	sahf   
  420cca:	enter  0x5656,0x95
  420cce:	jb     0x420d36
  420cd0:	mov    eax,ds:0x284bb83d
  420cd5:	push   cs
  420cd6:	aaa    
  420cd7:	xor    eax,0x34b453c6
  420cdc:	mov    ds:0xbf44e0fb,al
  420ce1:	xor    ebp,DWORD PTR [eax+0x179584f5]
  420ce7:	cmp    edx,DWORD PTR [eax*4-0x6875feda]
  420cee:	and    eax,0x60c625f
  420cf3:	cs jge 0x420d3c
  420cf6:	xor    bl,bl
  420cf8:	cmp    ebx,eax
  420cfa:	sbb    BYTE PTR ds:0x1d50983,bl
  420d00:	dec    ebx
  420d01:	icebp  
  420d02:	les    edx,FWORD PTR [edx-0x1a2e5105]
  420d08:	mov    ecx,0x7a36e375
  420d0d:	adc    eax,0x55946452
  420d12:	das    
  420d13:	push   0xcb5ab545
  420d18:	sbb    eax,0xacc3ff02
  420d1d:	test   eax,0x35d1a8fc
  420d22:	mov    esi,0xd75760b3
  420d27:	sbb    al,0x3b
  420d29:	xchg   edi,eax
  420d2a:	push   eax
  420d2b:	fld    QWORD PTR [esi+esi*4]
  420d2e:	mov    ds:0x5beb27d8,al
  420d33:	enter  0x353,0x84
  420d37:	mov    bh,0x9d
  420d39:	adc    edi,ebx
  420d3b:	mov    DWORD PTR [edx+0x68],ebx
  420d3e:	dec    ebx
  420d3f:	retf   
  420d40:	repnz pop es
  420d42:	and    edx,DWORD PTR [ecx]
  420d44:	push   edx
  420d45:	mov    ah,0xd3
  420d47:	fwait
  420d48:	imul   edx,DWORD PTR [ecx-0x76],0xffffffd4
  420d4c:	cmp    DWORD PTR [edx+0x4],edx
  420d4f:	fld    TBYTE PTR [edx+0x40]
  420d52:	into   
  420d53:	pushf  
  420d54:	dec    esi
  420d55:	mov    ecx,0x4d241c41
  420d5a:	bound  edx,QWORD PTR [edx+0x35c469b3]
  420d60:	inc    esi
  420d61:	jo     0x420dae
  420d63:	or     DWORD PTR [eax+0x543c95de],edx
  420d69:	pop    esp
  420d6a:	dec    edx
  420d6b:	dec    ecx
  420d6c:	cmp    al,0x39
  420d6e:	cdq    
  420d6f:	out    dx,eax
  420d70:	xchg   ebx,eax
  420d71:	sbb    DWORD PTR [ebx-0x19],0xe7921e3e
  420d78:	scas   eax,DWORD PTR es:[edi]
  420d79:	inc    ecx
  420d7a:	icebp  
  420d7b:	les    esi,FWORD PTR [ecx+esi*2]
  420d7e:	call   0x5ca:0x2a4b70eb
  420d85:	pop    ebp
  420d86:	loop   0x420d1e
  420d88:	ja     0x420d75
  420d8a:	mov    dh,0x6e
  420d8c:	jne    0x420ddb
  420d8e:	adc    BYTE PTR [ebp-0x48],bh
  420d91:	imul   BYTE PTR [ebx+0xd]
  420d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d95:	aad    0x61
  420d97:	sbb    BYTE PTR [edx],ch
  420d99:	inc    edi
  420d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d9b:	sub    al,0xfe
  420d9d:	ret    
  420d9e:	or     al,BYTE PTR [eax-0x3ffb3262]
  420da4:	fisttp DWORD PTR [edi+0x6bc90e39]
  420daa:	or     al,0x51
  420dac:	cmc    
  420dad:	inc    edi
  420dae:	(bad)  
  420daf:	loop   0x420da1
  420db1:	daa    
  420db2:	ret    
  420db3:	mov    al,ds:0x42620fd9
  420db8:	add    DWORD PTR [eax],eax
  420dba:	or     cl,ah
  420dbc:	xor    eax,0xba418c4d
  420dc1:	cmp    esi,DWORD PTR [ebx]
  420dc3:	jns    0x420d71
  420dc5:	jecxz  0x420ddd
  420dc7:	and    eax,0x6dc97c86
  420dcc:	dec    esp
  420dcd:	ins    BYTE PTR es:[edi],dx
  420dce:	lds    ebx,FWORD PTR [edx+ecx*1+0x31b561fd]
  420dd5:	sti    
  420dd6:	cmp    DWORD PTR [esp+ecx*2+0x679f71de],ebp
  420ddd:	das    
  420dde:	xor    DWORD PTR [eax-0x2532aeef],0xffffffe1
  420de5:	inc    esi
  420de6:	push   cs
  420de7:	sbb    al,0x37
  420de9:	in     al,dx
  420dea:	clc    
  420deb:	repnz mov BYTE PTR [ebx+0x24],bl
  420def:	pushf  
  420df0:	push   cs
  420df1:	cmp    dl,BYTE PTR [ebp+0x41b60bf5]
  420df7:	aad    0x5d
  420df9:	xor    cl,ch
  420dfb:	sub    BYTE PTR [ecx-0x34],al
  420dfe:	test   al,0x3
  420e00:	sahf   
  420e01:	mov    dh,0x26
  420e03:	cmp    BYTE PTR [edi+ebx*8-0x18],al
  420e07:	mov    edx,0x26adb6ca
  420e0c:	and    eax,DWORD PTR [ebx]
  420e0e:	inc    edi
  420e0f:	call   DWORD PTR [esi+ebp*2]
  420e12:	es adc ch,cl
  420e15:	repz cli 
  420e17:	xchg   ebx,eax
  420e18:	sar    al,cl
  420e1a:	aas    
  420e1b:	ja     0x420e77
  420e1d:	cmp    al,0xfd
  420e1f:	ss imul eax,ebx,0xd0996a9c
  420e26:	xor    BYTE PTR [esi],ch
  420e28:	rcpps  xmm1,XMMWORD PTR [edi]
  420e2b:	test   al,0x3d
  420e2d:	mov    al,ds:0x1621af94
  420e32:	je     0x420e0d
  420e34:	xchg   ebp,eax
  420e35:	sbb    DWORD PTR [ebx],edx
  420e37:	and    DWORD PTR [edx+ebx*8-0x3e],ecx
  420e3b:	dec    esi
  420e3c:	xchg   esp,eax
  420e3d:	ins    DWORD PTR es:[edi],dx
  420e3e:	mov    eax,ds:0xfb5615a6
  420e43:	jae    0x420e1d
  420e45:	adc    eax,0xb008f1fb
  420e4a:	test   DWORD PTR [esi+0x30],eax
  420e4d:	sbb    DWORD PTR [edi-0x604a716a],ebp
  420e53:	pop    edi
  420e54:	mov    ecx,ebp
  420e56:	pop    edx
  420e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e58:	mov    ds:0x92689ecf,al
  420e5d:	fdivr  QWORD PTR [esi-0x54]
  420e60:	jmp    0x9c16d6a7
  420e65:	dec    edx
  420e66:	fnsave gs:[edx+0x0]
  420e6a:	in     al,0x98
  420e6c:	mov    bh,0xd0
  420e6e:	push   esp
  420e6f:	daa    
  420e70:	xor    al,0x18
  420e72:	sahf   
  420e73:	mov    eax,0x408f5920
  420e78:	test   DWORD PTR [eax],0xef480000
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	dec    edx
  420e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8a:	loope  0x420e23
  420e8c:	dec    eax
  420e8d:	mov    al,BYTE PTR [ecx]
  420e8f:	add    BYTE PTR [ebp-0x8fffffe],al
  420e95:	mov    ah,0xec
  420e97:	xor    dh,al
  420e99:	mov    eax,ds:0xefb3d069
  420e9e:	jb     0x420e4b
  420ea0:	inc    ebp
  420ea1:	mov    eax,ds:0xd3e349eb
  420ea6:	inc    eax
  420ea7:	fnstsw WORD PTR [eax+0x6c]
  420eaa:	push   0x5a319b3f
  420eaf:	inc    esp
  420eb0:	mov    bl,0x1b
  420eb2:	int    0xa0
  420eb4:	jmp    0x420f00
  420eb6:	dec    ebp
  420eb7:	ins    DWORD PTR es:[edi],dx
  420eb8:	jns    0x420e8b
  420eba:	sub    eax,0x249cfe33
  420ebf:	outs   dx,BYTE PTR ds:[esi]
  420ec0:	in     eax,dx
  420ec1:	dec    ebx
  420ec2:	ins    DWORD PTR es:[edi],dx
  420ec3:	out    dx,eax
  420ec4:	sub    BYTE PTR [edi],0x4b
  420ec7:	jp     0x420ee2
  420ec9:	xor    al,al
  420ecb:	shl    BYTE PTR [eax],1
  420ecd:	mov    ds:0x5bd88d96,al
  420ed2:	mov    esi,0x1b78c319
  420ed7:	sahf   
  420ed8:	adc    ch,BYTE PTR [edi-0x6a97d64]
  420ede:	sub    ebp,DWORD PTR [edi]
  420ee0:	mov    bh,0xfd
  420ee2:	jnp    0x420eac
  420ee4:	mov    dl,0x74
  420ee6:	fisubr WORD PTR gs:[ebx-0x70e2c247]
  420eed:	pop    es
  420eee:	pop    ebx
  420eef:	mov    eax,0xed2c0e9c
  420ef4:	jle    0x420f44
  420ef6:	into   
  420ef7:	jb     0x420e8e
  420ef9:	xchg   esp,eax
  420efa:	out    dx,eax
  420efb:	cs jb  0x420ec9
  420efe:	adc    eax,0x5c39e20b
  420f03:	mov    al,ds:0xd419c978
  420f08:	cld    
  420f09:	cmp    dh,ch
  420f0b:	jns    0x420ecb
  420f0d:	shr    al,1
  420f0f:	cmovb  ebx,DWORD PTR [esi+0x4ca285d1]
  420f16:	and    DWORD PTR [edx-0x6ffd52cd],0x7556bbf4
  420f20:	outs   dx,BYTE PTR ds:[esi]
  420f21:	aaa    
  420f22:	scas   eax,DWORD PTR es:[edi]
  420f23:	jno    0x420ec0
  420f25:	jmp    0xe46c:0xd26335e1
  420f2c:	push   edx
  420f2d:	sub    eax,0xa19e481c
  420f32:	in     eax,0xba
  420f34:	mov    dh,0x61
  420f36:	repz or al,0x91
  420f39:	xchg   edi,eax
  420f3a:	es xchg edi,eax
  420f3c:	cmc    
  420f3d:	ret    0x641a
  420f40:	rcr    DWORD PTR [esi],cl
  420f42:	sahf   
  420f43:	popa   
  420f44:	dec    esp
  420f45:	out    dx,eax
  420f46:	dec    esp
  420f47:	add    esp,DWORD PTR [eax+0x523a9f7d]
  420f4d:	outs   dx,DWORD PTR ds:[esi]
  420f4e:	and    BYTE PTR [edi],cl
  420f50:	nop
  420f51:	cmp    al,dh
  420f53:	and    eax,0x581da577
  420f58:	inc    ecx
  420f59:	je     0x420f1b
  420f5b:	retf   
  420f5c:	test   DWORD PTR [edx+0x37],ebp
  420f5f:	fiadd  DWORD PTR [edx+ecx*4+0x20ea8be5]
  420f66:	lods   eax,DWORD PTR ds:[esi]
  420f67:	popa   
  420f68:	ficomp DWORD PTR [ebx-0x594ac144]
  420f6e:	mov    ch,0xa8
  420f70:	adc    DWORD PTR [edi+edx*8],0xd2f8ebef
  420f77:	jecxz  0x420f9f
  420f79:	rcr    DWORD PTR [edx+0x72dd0010],cl
  420f7f:	loope  0x420f24
  420f81:	sbb    BYTE PTR [ecx+edx*2-0xb00d0a1],bh
  420f88:	push   0xfffffff1
  420f8a:	inc    edx
  420f8b:	jo     0x420fd3
  420f8d:	mov    edx,DWORD PTR [eax]
  420f8f:	add    eax,0xeaa3cf89
  420f94:	test   eax,0x55e112de
  420f99:	mov    al,ds:0x6b137bba
  420f9e:	rcl    DWORD PTR [edi-0x6a9626b9],0xe4
  420fa5:	xor    eax,0x18991d9d
  420faa:	stos   BYTE PTR es:[edi],al
  420fab:	dec    esp
  420fac:	xlat   BYTE PTR ds:[ebx]
  420fad:	mov    bh,0x5c
  420faf:	arpl   cx,bx
  420fb1:	push   ebp
  420fb2:	mov    ebp,ds
  420fb4:	mov    esi,0x461f903e
  420fb9:	fisttp QWORD PTR [edx-0x34f51e4f]
  420fbf:	inc    esi
  420fc0:	sub    edi,DWORD PTR [esi+0xc]
  420fc3:	mov    edi,0x70b83d16
  420fc8:	adc    eax,ebx
  420fca:	popf   
  420fcb:	loope  0x420f7f
  420fcd:	mov    bh,0x22
  420fcf:	call   0x273d:0x3d532f6c
  420fd6:	push   ecx
  420fd7:	jnp    0x42100a
  420fd9:	jno    0x421040
  420fdb:	inc    DWORD PTR [ebx]
  420fdd:	or     eax,DWORD PTR [edi+0x40cc653c]
  420fe3:	cmp    edi,esp
  420fe5:	fwait
  420fe6:	hlt    
  420fe7:	int3   
  420fe8:	std    
  420fe9:	scas   al,BYTE PTR es:[edi]
  420fea:	push   0xa1d3d4c2
  420fef:	adc    al,ch
  420ff1:	inc    ebp
  420ff2:	push   0x28ffece0
  420ff7:	fisub  WORD PTR [eax-0x1dca615f]
  420ffd:	(bad)  
  420ffe:	jle    0x421043
  421000:	popf   
  421001:	out    0xb7,al
  421003:	mov    dl,0xfe
  421005:	inc    esp
  421006:	cld    
  421007:	mov    WORD PTR [ecx],ss
  421009:	inc    esp
  42100a:	bound  eax,QWORD PTR [ecx-0x1d72c906]
  421010:	repnz mov eax,0xd2ad0e51
  421016:	cmc    
  421017:	sbb    eax,DWORD PTR [edi-0xf3d9c77]
  42101d:	aas    
  42101e:	lahf   
  42101f:	push   cs
  421020:	scas   al,BYTE PTR es:[edi]
  421021:	add    eax,0xcf95d5c
  421026:	sbb    bh,BYTE PTR [ecx]
  421028:	xchg   edx,eax
  421029:	cmp    BYTE PTR [ecx+0x27],ah
  42102c:	retf   0xd692
  42102f:	mov    dl,BYTE PTR [edi]
  421031:	lock add eax,0x974cb9d8
  421037:	sbb    al,0x71
  421039:	lds    ecx,FWORD PTR [esi+esi*2+0x76]
  42103d:	sub    BYTE PTR [esi],dl
  42103f:	mov    ecx,DWORD PTR [esi]
  421041:	not    BYTE PTR ds:0x3ca39351
  421047:	enter  0x8550,0x68
  42104b:	mov    al,BYTE PTR [edx-0x61]
  42104e:	push   0x9d4a8dd4
  421053:	dec    eax
  421054:	leave  
  421055:	arpl   WORD PTR [esi],bx
  421057:	cdq    
  421058:	lahf   
  421059:	dec    edx
  42105a:	lods   eax,DWORD PTR ds:[esi]
  42105b:	cs pushf 
  42105d:	jne    0x421052
  42105f:	add    al,0x27
  421061:	dec    ecx
  421062:	lods   eax,DWORD PTR ds:[esi]
  421063:	pushf  
  421064:	adc    ecx,DWORD PTR ds:0x8d50b34b
  42106a:	xor    al,0x8d
  42106c:	daa    
  42106d:	push   ebx
  42106e:	ss loop 0x421047
  421071:	scas   eax,DWORD PTR es:[edi]
  421072:	pop    esi
  421073:	retf   
  421074:	(bad)  
  421075:	adc    bh,BYTE PTR [esi+0x8f01b9f]
  42107b:	mov    bh,BYTE PTR es:[ebp+0x1d]
  42107f:	mov    eax,ds:0xbaec6c7d
  421084:	mov    eax,0xa9ce08e9
  421089:	cmp    cl,0x37
  42108c:	pop    ss
  42108d:	sub    eax,0x769707e0
  421092:	imul   BYTE PTR [edx+edi*8-0x46]
  421096:	int3   
  421097:	mov    ah,0x4
  421099:	sbb    al,0x7d
  42109b:	mov    cl,0x95
  42109d:	xchg   ebx,eax
  42109e:	sub    eax,0x117a61b5
  4210a3:	xor    BYTE PTR [ebp+0x37],bl
  4210a6:	pop    ebx
  4210a7:	or     eax,0x1e3bff77
  4210ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210ad:	mov    bl,0xa6
  4210af:	rcl    ebx,cl
  4210b1:	aad    0x7f
  4210b3:	popf   
  4210b4:	and    BYTE PTR [ebx],bh
  4210b6:	xchg   esp,eax
  4210b7:	and    DWORD PTR [ecx+0x592ef86c],edi
  4210bd:	pop    edx
  4210be:	and    eax,DWORD PTR [esi]
  4210c0:	retf   
  4210c1:	jl     0x42113a
  4210c3:	cmp    bh,bh
  4210c5:	cmp    al,0xbb
  4210c7:	mov    ds:0x978efd2e,al
  4210cc:	(bad)  
  4210ce:	das    
  4210cf:	or     edx,DWORD PTR [ebx+0x8]
  4210d2:	push   esp
  4210d3:	or     BYTE PTR [eax-0x78],0xd5
  4210d7:	xchg   ebp,eax
  4210d8:	add    esi,0xfffffffb
  4210db:	in     eax,dx
  4210dc:	mov    dh,0x5a
  4210de:	sbb    BYTE PTR [eax-0x58],al
  4210e1:	and    BYTE PTR [eax+0x7b],0x22
  4210e5:	ret    
  4210e6:	inc    ecx
  4210e7:	push   esi
  4210e8:	es mov ebx,0x5151350c
  4210ee:	ror    DWORD PTR [eax-0x3ecf7d3f],1
  4210f4:	adc    DWORD PTR [ebx],esp
  4210f6:	dec    edi
  4210f7:	mov    dh,BYTE PTR [edi+ebx*4-0xc2cce90]
  4210fe:	and    dh,BYTE PTR [esi+edx*1]
  421101:	inc    esp
  421102:	cmp    BYTE PTR [edx],ah
  421104:	(bad)  
  421105:	jmp    0x2fc4:0xbbe4fb0c
  42110c:	dec    DWORD PTR [ecx-0x3fe221e4]
  421112:	sub    dh,BYTE PTR [eax+0x73]
  421115:	shr    DWORD PTR [edi+0xe87d],0x0
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [edi-0x32f7c30c],ebp
  42112d:	mov    WORD PTR [ecx],es
  42112f:	add    BYTE PTR [ebp-0x3fffffe],al
  421135:	ds inc eax
  421137:	and    eax,0xebd1914a
  42113c:	mov    ebx,0xdfee7aff
  421141:	and    edx,DWORD PTR [edi+eiz*4]
  421144:	rcr    al,1
  421146:	jne    0x4210f6
  421148:	cwde   
  421149:	xor    bh,BYTE PTR [ebp+0x7bb6e472]
  42114f:	mov    esi,0x31f25a17
  421154:	jmp    0x6bf1:0x62287037
  42115b:	add    al,0xc5
  42115d:	loop   0x4211ad
  42115f:	xchg   ebx,eax
  421160:	xor    ah,BYTE PTR [ecx-0x37]
  421163:	sahf   
  421164:	mov    cl,0x99
  421166:	cmc    
  421167:	or     DWORD PTR [edi+0x5ef8fe09],edx
  42116d:	pop    ebx
  42116e:	push   0xffffffb0
  421170:	add    cl,ah
  421172:	pop    ds
  421173:	add    BYTE PTR [ebx+ecx*2-0x49d13e04],bl
  42117a:	push   ecx
  42117b:	fisttp QWORD PTR [ebx]
  42117d:	jnp    0x4211f3
  42117f:	xchg   edi,eax
  421180:	lea    ebp,[edx+0x7073a22d]
  421186:	xchg   ebp,eax
  421187:	fnstsw WORD PTR [eax-0xd]
  42118a:	in     eax,dx
  42118b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118c:	cmp    ah,BYTE PTR [esi+0x28329185]
  421192:	sub    edx,DWORD PTR [edi]
  421194:	shl    DWORD PTR [ecx-0x355dad8b],1
  42119a:	push   edi
  42119b:	mov    eax,0x621b9ee2
  4211a0:	test   DWORD PTR [eax+0x68],0x74dc8bff
  4211a7:	mov    WORD PTR [eax],?
  4211a9:	add    edi,DWORD PTR [esi+eiz*8-0x5c]
  4211ad:	jno    0x42117e
  4211af:	popa   
  4211b0:	js     0x421167
  4211b2:	jns    0x4211a7
  4211b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b5:	sub    dl,BYTE PTR [edx]
  4211b7:	xor    al,BYTE PTR [ecx]
  4211b9:	hlt    
  4211ba:	(bad)  
  4211bb:	push   ds
  4211bc:	(bad)  
  4211bd:	cmc    
  4211be:	pop    ebx
  4211bf:	or     DWORD PTR [esp+ebp*1+0x49],esp
  4211c3:	mov    dl,0xa8
  4211c5:	sub    DWORD PTR [edi-0x6f],ecx
  4211c8:	dec    ecx
  4211c9:	ficom  WORD PTR [ebp-0x3f]
  4211cc:	xor    BYTE PTR [ebp+0x7ba4c0e3],0x58
  4211d3:	rol    DWORD PTR [ebx-0x520d8742],1
  4211d9:	sub    al,0x99
  4211db:	push   0x55
  4211dd:	rcl    DWORD PTR [ebx-0x25],1
  4211e0:	jg     0x42120a
  4211e2:	jmp    0x421246
  4211e4:	cdq    
  4211e5:	mov    edi,0x6457501e
  4211ea:	sub    ecx,ebx
  4211ec:	popa   
  4211ed:	push   esi
  4211ee:	call   0x5cb8fb5a
  4211f3:	pusha  
  4211f4:	ror    BYTE PTR [edx+ebx*4],cl
  4211f7:	mov    ebp,0x2ec5fcff
  4211fc:	aas    
  4211fd:	out    dx,al
  4211fe:	adc    bh,bh
  421200:	rol    ah,0x81
  421203:	and    ebx,DWORD PTR [ebp+0x5e]
  421206:	sbb    DWORD PTR [ebp-0x6],esp
  421209:	outs   dx,BYTE PTR ds:[esi]
  42120a:	lods   eax,DWORD PTR ds:[esi]
  42120b:	bound  edx,QWORD PTR [esi+0x48]
  42120e:	gs push 0x6dce8fdb
  421214:	test   BYTE PTR [ebp+0x58],cl
  421217:	in     al,0xd8
  421219:	repz mov edx,DWORD PTR [ecx-0xb63e24d]
  421220:	(bad)  
  421221:	lahf   
  421222:	repnz xchg esp,eax
  421224:	push   cs
  421225:	push   esi
  421226:	cs xchg esi,ebp
  421229:	retf   
  42122a:	dec    ecx
  42122b:	out    dx,eax
  42122c:	in     eax,dx
  42122d:	mov    esi,0x8088ff1a
  421232:	add    DWORD PTR [ebp-0x4c],esi
  421235:	(bad)  
  421236:	pop    esp
  421237:	xor    edi,0xffffff90
  42123a:	jne    0x421268
  42123c:	fs pushf 
  42123e:	pop    eax
  42123f:	(bad)  
  421240:	cli    
  421241:	popf   
  421242:	call   0xe210:0xc29fb234
  421249:	mov    bh,BYTE PTR [ebx]
  42124b:	mov    esp,0xf15f05c4
  421250:	inc    edx
  421251:	jl     0x421266
  421253:	clc    
  421254:	ja     0x42127e
  421256:	loop   0x4212b7
  421258:	imul   ebp,ebp,0x3e
  42125b:	xor    al,0x5a
  42125d:	in     eax,0x24
  42125f:	lock fldcw WORD PTR [ebx-0x33e0cf59]
  421266:	mov    bl,0x62
  421268:	sbb    ebp,DWORD PTR [edx+0xf]
  42126b:	das    
  42126c:	std    
  42126d:	mov    BYTE PTR [ebp+esi*2-0x1dc9063],bl
  421274:	outs   dx,DWORD PTR ds:[esi]
  421275:	lea    eax,[ebp-0x6c9b9242]
  42127b:	pop    edx
  42127c:	cs xor al,0x58
  42127f:	push   ecx
  421280:	sbb    al,0xdf
  421282:	test   ecx,esp
  421284:	sub    al,0xea
  421286:	sub    al,0x2b
  421288:	fistp  WORD PTR [ebx+0x12b0d791]
  42128e:	int    0x62
  421290:	push   edx
  421291:	loope  0x421264
  421293:	(bad)  
  421294:	(bad)  
  421295:	mov    edx,0x33c2a0dd
  42129a:	inc    eax
  42129b:	lahf   
  42129c:	mov    eax,ds:0x751d71c5
  4212a1:	pop    ds
  4212a2:	shl    ch,0xfa
  4212a5:	adc    dl,bl
  4212a7:	mov    al,ds:0x5bb6fb0c
  4212ac:	call   0x620d214c
  4212b1:	cmc    
  4212b2:	add    ebx,0x26
  4212b5:	bound  ecx,QWORD PTR [edi+0x36]
  4212b8:	mov    ?,WORD PTR ds:0xecc33926
  4212be:	inc    ecx
  4212bf:	out    0xd1,al
  4212c1:	xor    BYTE PTR [edi+ebp*4+0x27613f5a],dl
  4212c8:	pop    ds
  4212c9:	(bad)  ds:0x70ed0fa4
  4212cf:	jmp    0x305aa9a6
  4212d4:	mov    BYTE PTR [esp+ecx*8],0x1c
  4212d8:	fld    QWORD PTR [eax+0x30]
  4212db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212dc:	push   edi
  4212dd:	lahf   
  4212de:	xor    dh,BYTE PTR [esi]
  4212e0:	add    edx,0x7d9a881b
  4212e6:	inc    ebp
  4212e7:	push   esp
  4212e8:	jno    0x421300
  4212ea:	ficomp DWORD PTR [ebx-0x335d3191]
  4212f0:	out    dx,eax
  4212f1:	in     al,0xcd
  4212f3:	ja     0x4212b7
  4212f5:	pop    ecx
  4212f6:	iret   
  4212f7:	inc    edx
  4212f8:	pop    esp
  4212f9:	cmp    esp,esp
  4212fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fc:	mov    esp,DWORD PTR [ebx]
  4212fe:	push   eax
  4212ff:	ja     0x4212b3
  421301:	popa   
  421302:	call   0x9d7c:0x84086332
  421309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130a:	out    0x30,eax
  42130c:	pop    esp
  42130d:	mov    bh,0xd5
  42130f:	gs cmp al,dl
  421312:	mov    esi,0x5b7d7af9
  421317:	jg     0x421313
  421319:	xor    edi,DWORD PTR ds:0x94ac95f1
  42131f:	dec    esp
  421320:	jno    0x4212a9
  421322:	jo     0x421374
  421324:	call   0xf1c5:0x1fc9106c
  42132b:	mov    eax,0xe05b5198
  421330:	popf   
  421331:	jo     0x4212e2
  421333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421334:	pop    ebx
  421335:	cmp    BYTE PTR ds:0x565d31ca,dh
  42133b:	retf   
  42133c:	inc    ecx
  42133d:	cmp    al,0xa
  42133f:	into   
  421340:	pop    ss
  421341:	or     BYTE PTR [edx+ebx*8+0x25],dh
  421345:	add    eax,ecx
  421347:	push   edx
  421348:	bound  ebp,QWORD PTR ds:0xda62ee7f
  42134e:	add    BYTE PTR [esi+0x72],cl
  421351:	pop    edx
  421352:	add    eax,0xf1476d55
  421357:	test   al,0x3
  421359:	int    0x4c
  42135b:	push   edx
  42135c:	fwait
  42135d:	es js  0x42137e
  421360:	loopne 0x421344
  421362:	test   DWORD PTR [esi+0x52bfd9cf],esi
  421368:	daa    
  421369:	pop    esi
  42136a:	adc    esp,esp
  42136c:	inc    ecx
  42136d:	xchg   bl,bl
  42136f:	repz push cs
  421371:	mov    al,0x7b
  421373:	fist   WORD PTR [ebx+0x1aceb522]
  421379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42137a:	xor    eax,0x26f8a476
  42137f:	retf   
  421380:	pop    ds
  421381:	shl    DWORD PTR [ecx*4+0x2eff4b7b],0x89
  421389:	adc    al,0x24
  42138b:	imul   ecx,DWORD PTR [esi+0x7d],0x5779922d
  421392:	lock lods al,BYTE PTR ds:[esi]
  421394:	mov    esp,0x5494ed61
  421399:	sub    ecx,DWORD PTR [esp+esi*4]
  42139c:	leave  
  42139d:	pop    ds
  42139e:	leave  
  42139f:	push   ebp
  4213a0:	pop    es
  4213a1:	pop    edi
  4213a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a3:	jns    0x4213b6
  4213a5:	pop    eax
  4213a6:	sbb    ebp,ebp
  4213a8:	jo     0x4213ff
  4213aa:	inc    ecx
  4213ab:	ins    DWORD PTR es:[edi],dx
  4213ac:	out    0x17,al
  4213ae:	in     eax,0x1f
  4213b0:	stos   BYTE PTR es:[edi],al
  4213b1:	ficom  DWORD PTR [ebp+0x2d]
  4213b4:	xchg   ebx,eax
  4213b5:	xor    al,0x24
  4213b7:	leave  
  4213b8:	mov    BYTE PTR [eax],al
  4213ba:	add    BYTE PTR [eax],al
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0x858fade7
  4213cc:	push   edx
  4213cd:	pop    DWORD PTR [ecx]
  4213cf:	add    BYTE PTR [ebp+0x6c000002],al
  4213d5:	inc    edi
  4213d6:	push   edi
  4213d7:	jno    0x421386
  4213d9:	stos   DWORD PTR es:[edi],eax
  4213da:	cld    
  4213db:	dec    esi
  4213dc:	cld    
  4213dd:	cmp    DWORD PTR [ebx+ecx*1+0xabc4072],esi
  4213e4:	ficomp WORD PTR [ecx-0x3a]
  4213e7:	scas   eax,DWORD PTR es:[edi]
  4213e8:	sbb    BYTE PTR [edx+0x217ffa40],cl
  4213ee:	push   eax
  4213ef:	or     dh,BYTE PTR [esi+0x31]
  4213f2:	aas    
  4213f3:	mov    eax,ds:0x5cbb4ba1
  4213f8:	dec    ebx
  4213f9:	aad    0xf6
  4213fb:	in     eax,dx
  4213fc:	sub    BYTE PTR [edx+0x6e07700],0xec
  421403:	in     eax,dx
  421404:	xchg   edx,eax
  421405:	inc    edx
  421406:	test   BYTE PTR [ebp-0x571d066f],ah
  42140c:	stos   DWORD PTR es:[edi],eax
  42140d:	cmp    BYTE PTR [edi],ah
  42140f:	add    ebp,DWORD PTR ds:0x51efb52e
  421415:	aam    0xba
  421417:	pop    ecx
  421418:	mov    ch,0x5b
  42141a:	pop    edx
  42141b:	or     eax,0x42950a74
  421420:	rcr    DWORD PTR [ecx],0x7a
  421423:	xor    bl,BYTE PTR [ebp-0x3a]
  421426:	push   0x1b88b105
  42142b:	test   BYTE PTR [eax-0x5e],ch
  42142e:	call   0x59232a55
  421433:	dec    ebp
  421434:	adc    BYTE PTR [ebx-0x762436c9],bh
  42143a:	and    cl,BYTE PTR [eax+ebx*8]
  42143d:	mov    bl,0x9c
  42143f:	or     eax,esp
  421441:	pop    ss
  421442:	push   edx
  421443:	push   ecx
  421444:	sahf   
  421445:	xchg   edx,eax
  421446:	push   ebx
  421447:	mov    edx,0x749203ac
  42144c:	test   dh,cl
  42144e:	dec    edi
  42144f:	sbb    al,0x7c
  421451:	dec    ecx
  421452:	adc    DWORD PTR [ebx-0x35],ecx
  421455:	push   edi
  421456:	and    DWORD PTR ss:[ecx-0x736f17bf],eax
  42145d:	mov    esi,0x6b6d4eab
  421462:	mul    DWORD PTR [edi+eiz*2-0x5b07a1ac]
  421469:	mul    BYTE PTR [ebx+0x77]
  42146c:	lds    ebx,FWORD PTR [ecx]
  42146e:	fmul   st(4),st
  421470:	lock ins DWORD PTR es:[edi],dx
  421472:	push   esi
  421473:	loopne 0x42149b
  421475:	shr    ah,cl
  421477:	or     dl,dl
  421479:	sub    ebx,DWORD PTR [ebx+0x22]
  42147c:	add    DWORD PTR [ecx+0x417ad704],eax
  421482:	dec    esp
  421483:	ins    BYTE PTR es:[edi],dx
  421484:	jne    0x421406
  421486:	cmp    DWORD PTR es:[edi+0x44a151e8],edi
  42148d:	iret   
  42148e:	push   eax
  42148f:	call   0x2aba96e5
  421494:	fisttp QWORD PTR [edx+0x47895ce7]
  42149a:	push   eax
  42149b:	add    dl,BYTE PTR [edi+0x47]
  42149e:	aaa    
  42149f:	jno    0x3df30bf9
  4214a5:	pop    ebx
  4214a6:	loop   0x4214b8
  4214a8:	and    ecx,ebp
  4214aa:	pop    esp
  4214ab:	jmp    0x4214e3
  4214ad:	stos   DWORD PTR es:[edi],eax
  4214ae:	enter  0x31a7,0xf0
  4214b2:	repnz xchg ebx,eax
  4214b4:	jnp    0x4214b0
  4214b6:	lea    ecx,[eax]
  4214b8:	popa   
  4214b9:	jnp    0x421490
  4214bb:	xchg   esp,eax
  4214bc:	int    0xb3
  4214be:	pushf  
  4214bf:	inc    edx
  4214c0:	in     al,dx
  4214c1:	mov    al,ds:0x53c6ecbb
  4214c6:	daa    
  4214c7:	repnz mov WORD PTR [edi+0x42],cs
  4214cb:	sbb    al,BYTE PTR [edi-0x35]
  4214ce:	mov    edi,0x6e1d1a7a
  4214d3:	jns    0x421496
  4214d5:	mov    dh,0x44
  4214d7:	adc    esi,DWORD PTR [ecx+0x625475d3]
  4214dd:	rcl    BYTE PTR ds:0xc241778d,0xb9
  4214e4:	jl     0x421493
  4214e6:	retf   
  4214e7:	test   al,0x72
  4214e9:	add    cl,BYTE PTR ds:0xe399a67c
  4214ef:	push   0x1dfe3664
  4214f4:	push   ss
  4214f5:	(bad)  
  4214f7:	jle    0x4214f5
  4214f9:	es inc eax
  4214fb:	or     DWORD PTR [eax+eax*2-0x6e],ebp
  4214ff:	cmp    dh,bh
  421501:	inc    edi
  421502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421503:	add    edi,edi
  421505:	pop    edx
  421506:	outs   dx,DWORD PTR ds:[esi]
  421507:	push   edx
  421508:	fldl2t 
  42150a:	xchg   BYTE PTR [ebp+0x17],ah
  42150d:	aam    0x60
  42150f:	stos   DWORD PTR es:[edi],eax
  421510:	pop    esi
  421511:	add    bl,BYTE PTR [esi+ebp*2-0x79]
  421515:	adc    eax,0x39206059
  42151a:	adc    al,0x82
  42151c:	xchg   DWORD PTR [ebx-0x4b],eax
  42151f:	sbb    eax,0xcb7635f
  421524:	in     al,dx
  421525:	inc    BYTE PTR [ebx]
  421527:	retf   0xa7ec
  42152a:	dec    edi
  42152b:	xlat   BYTE PTR ds:[ebx]
  42152c:	pop    ebp
  42152d:	sbb    BYTE PTR [edx],bl
  42152f:	inc    esp
  421530:	shr    DWORD PTR [edx],0x2e
  421533:	jge    0x421531
  421535:	cmp    DWORD PTR [eax],0x35
  421538:	gs nop
  42153a:	cs repnz test esi,0x1379994e
  421542:	xchg   edx,eax
  421543:	xchg   ebx,eax
  421544:	mov    dh,0x41
  421546:	jb     0x42157b
  421548:	outs   dx,DWORD PTR ds:[esi]
  421549:	icebp  
  42154a:	jle    0x421542
  42154c:	xor    eax,0xb38fc890
  421551:	push   esp
  421552:	outs   dx,DWORD PTR ds:[esi]
  421553:	push   ebp
  421554:	aas    
  421555:	(bad)
  421558:	sbb    BYTE PTR cs:[ecx+0x7],0x10
  42155d:	mov    eax,ds:0xb7324881
  421562:	push   edx
  421563:	and    edi,ebx
  421565:	xchg   ebp,eax
  421566:	xlat   BYTE PTR ds:[ebx]
  421567:	add    dl,BYTE PTR [ebx-0x33]
  42156a:	push   ebp
  42156b:	fucomip st,st(7)
  42156d:	inc    ebx
  42156e:	and    BYTE PTR [esi+0x1b],dh
  421571:	int3   
  421572:	js     0x421594
  421574:	dec    ebx
  421575:	dec    edi
  421576:	mov    ch,0x99
  421578:	cdq    
  421579:	mov    BYTE PTR [ebx+0x7c],ch
  42157c:	cld    
  42157d:	aad    0xac
  42157f:	xchg   edx,eax
  421580:	jmp    0x71408db6
  421585:	or     al,0x87
  421587:	dec    ebp
  421588:	inc    edi
  421589:	sub    eax,0x3e8f80cc
  42158e:	push   0xd
  421590:	js     0x42159a
  421592:	shr    ecx,0x9
  421595:	push   edx
  421596:	xchg   BYTE PTR [eax-0xdd74134],al
  42159c:	push   ebp
  42159d:	cmp    BYTE PTR [ebx+edx*2+0x6e],ah
  4215a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215a2:	jo     0x4215ed
  4215a4:	lods   al,BYTE PTR ds:[esi]
  4215a5:	(bad)  
  4215a7:	les    edi,FWORD PTR [ecx+0x39]
  4215aa:	push   esi
  4215ab:	imul   edi,DWORD PTR [edx-0x5e],0x7d99e6c1
  4215b2:	(bad)  
  4215b3:	pop    ebx
  4215b4:	mov    DWORD PTR [ebx],esi
  4215b6:	mov    bl,0xf8
  4215b8:	mov    ebp,DWORD PTR ds:0xa7e6d2d7
  4215be:	aaa    
  4215bf:	mov    eax,ds:0x45d46dca
  4215c4:	lea    ebx,[edx-0x3744fdca]
  4215ca:	inc    edx
  4215cb:	pop    ebp
  4215cc:	and    ah,BYTE PTR [ebx]
  4215ce:	rcl    ebp,0x99
  4215d1:	adc    BYTE PTR [esi],bl
  4215d3:	lods   al,BYTE PTR ds:[esi]
  4215d4:	push   ebp
  4215d5:	adc    edx,DWORD PTR [edi-0x67725ae3]
  4215db:	xor    ah,bh
  4215dd:	cs mov ebp,0x25686abf
  4215e3:	inc    edi
  4215e4:	inc    esp
  4215e5:	dec    ebx
  4215e6:	inc    ecx
  4215e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e8:	icebp  
  4215e9:	push   es
  4215ea:	inc    ebp
  4215eb:	fisubr WORD PTR [eax-0x28]
  4215ee:	pusha  
  4215ef:	mov    DWORD PTR [esi+ebx*4],edi
  4215f2:	cli    
  4215f3:	mov    ebp,0xc4dac039
  4215f8:	popa   
  4215f9:	sti    
  4215fa:	std    
  4215fb:	ins    BYTE PTR es:[edi],dx
  4215fc:	adc    eax,0xd7962b99
  421601:	dec    esi
  421602:	pop    es
  421603:	je     0x42163a
  421605:	add    bh,dh
  421607:	add    al,0x58
  421609:	mov    ebp,0x7a3091c2
  42160e:	cwde   
  42160f:	mov    esi,0xff7072b2
  421614:	push   ebx
  421615:	or     BYTE PTR [eax],al
  421617:	imul   esp,DWORD PTR [edx],0x4d
  42161a:	push   cs
  42161b:	call   0x1158:0x693e015
  421622:	sub    DWORD PTR ds:0x3eca09bc,ebx
  421628:	jmp    0x421660
  42162a:	inc    ebp
  42162b:	ins    BYTE PTR es:[edi],dx
  42162c:	fcmovbe st,st(4)
  42162e:	or     dh,al
  421630:	loopne 0x421652
  421632:	mov    esi,0x5dffa3d2
  421637:	div    BYTE PTR [ebx+0x7026ca2d]
  42163d:	dec    DWORD PTR [eax+0x6a]
  421640:	loopne 0x421663
  421642:	pop    eax
  421643:	mov    ds:0x38eadb31,al
  421648:	(bad)  
  42164a:	sub    al,0xf7
  42164c:	adc    BYTE PTR [edi+0x1f],dl
  42164f:	imul   edx,DWORD PTR [edi+0x50],0x55cfe920
  421656:	add    eax,0xb6c3
  42165b:	add    cl,bh
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	mov    ds:0xd714305c,al
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	test   DWORD PTR [edx],eax
  421672:	add    BYTE PTR [eax],al
  421674:	(bad)  
  421675:	adc    al,0x43
  421677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421678:	or     esp,DWORD PTR [esi+eiz*2]
  42167b:	mov    bh,0x58
  42167d:	outs   dx,BYTE PTR ds:[esi]
  42167e:	jle    0x421630
  421680:	mov    ss,WORD PTR es:[eax+0x62]
  421684:	cdq    
  421685:	mov    dl,0xf5
  421687:	int3   
  421688:	cmp    edi,esp
  42168a:	mov    al,0x34
  42168c:	aaa    
  42168d:	add    eax,0x7b63379f
  421692:	xchg   ecx,eax
  421693:	inc    edi
  421694:	jae    0x4216ab
  421696:	std    
  421697:	pop    edx
  421698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421699:	test   bl,bl
  42169b:	imul   edi,ebx,0xffffffb1
  42169e:	out    0x6d,eax
  4216a0:	sti    
  4216a1:	adc    BYTE PTR [edi+ebx*2-0x26c9ed30],dl
  4216a8:	jg     0x4216b5
  4216aa:	ret    
  4216ab:	jnp    0x42169a
  4216ad:	push   es
  4216ae:	gs ins BYTE PTR es:[edi],dx
  4216b0:	sub    al,BYTE PTR [ecx+ebp*8+0x7e]
  4216b4:	loopne 0x4216b7
  4216b6:	in     eax,dx
  4216b7:	fwait
  4216b8:	sbb    ebp,DWORD PTR [edi-0x17]
  4216bb:	dec    ebx
  4216bc:	outs   dx,BYTE PTR ds:[esi]
  4216bd:	xor    al,0x74
  4216bf:	lods   al,BYTE PTR ds:[esi]
  4216c0:	xor    al,0x68
  4216c2:	scas   al,BYTE PTR es:[edi]
  4216c3:	pop    ebx
  4216c4:	jbe    0x4216f1
  4216c6:	mov    bh,0xef
  4216c8:	(bad)  
  4216c9:	in     al,dx
  4216ca:	push   esp
  4216cb:	out    0x86,eax
  4216cd:	test   eax,0x8e69e215
  4216d2:	sub    al,0x14
  4216d4:	shr    DWORD PTR [edx],0xb9
  4216d7:	loop   0x42171d
  4216d9:	jae    0x4216df
  4216db:	dec    edx
  4216dc:	push   esi
  4216dd:	add    BYTE PTR [eax],bl
  4216df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e0:	add    BYTE PTR [ecx+edi*1-0x4933a6b1],dh
  4216e7:	inc    ebx
  4216e8:	push   0xe78b9518
  4216ed:	in     al,dx
  4216ee:	adc    dl,cl
  4216f0:	push   0xffffffac
  4216f2:	pop    edi
  4216f3:	ja     0x42175c
  4216f5:	rcl    DWORD PTR [esi+0x4ea852f1],1
  4216fb:	xor    bh,BYTE PTR [edx-0x2a766d42]
  421701:	xor    ecx,eax
  421703:	cmp    eax,esi
  421705:	or     ch,BYTE PTR [ecx-0x48cc27bf]
  42170b:	add    eax,0x4cd121a9
  421710:	and    DWORD PTR [edi+ebp*2-0x482ed84b],0x2c67d551
  42171b:	inc    esp
  42171c:	jl     0x421713
  42171e:	sbb    DWORD PTR [edi-0x7c965f45],edx
  421724:	adc    DWORD PTR [ebp+esi*8-0x10],edi
  421728:	fstp   QWORD PTR [ebx*1+0x676cf090]
  42172f:	sbb    ecx,ebp
  421731:	push   0x13
  421733:	in     eax,dx
  421734:	inc    edi
  421735:	ror    bl,1
  421737:	bound  edx,QWORD PTR [ecx+0x48]
  42173a:	cmp    ch,BYTE PTR [edi-0x86f0e8c]
  421740:	ror    DWORD PTR [ebx-0x13f17bb8],0x37
  421747:	jmp    0x4216fa
  421749:	pop    ds
  42174a:	iret   
  42174b:	in     al,0xea
  42174d:	xchg   ebx,eax
  42174e:	popa   
  42174f:	jg     0x421718
  421751:	xor    al,0x3e
  421753:	cmp    dh,BYTE PTR cs:[esi+0x1ecdbe63]
  42175a:	bound  ebx,QWORD PTR [esi+ecx*4+0x44]
  42175e:	(bad)  
  42175f:	out    dx,al
  421760:	mov    eax,ds:0xaea4d40c
  421765:	aaa    
  421766:	lods   eax,DWORD PTR ds:[esi]
  421767:	(bad)  
  421768:	sub    al,0xd6
  42176a:	pop    ebp
  42176b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42176c:	test   DWORD PTR [ecx-0x70],esi
  42176f:	mov    edx,0xe1c55b27
  421774:	pop    ebx
  421775:	outs   dx,DWORD PTR ds:[esi]
  421776:	aaa    
  421777:	mov    WORD PTR [edx-0x375a751b],?
  42177d:	inc    eax
  42177e:	or     al,0x4d
  421780:	push   edi
  421781:	jne    0x421712
  421783:	mov    esi,0xcc68e1f1
  421788:	push   esi
  421789:	mov    ebx,0xb4b03ee0
  42178e:	std    
  42178f:	push   0x80b5edc6
  421794:	mov    edx,0x6d0bc3f1
  421799:	mov    eax,0xfae3a3de
  42179e:	mov    bl,0xb0
  4217a0:	test   al,0x98
  4217a2:	fcomi  st,st(0)
  4217a4:	cmp    BYTE PTR ds:0xb9dbfcca,bl
  4217aa:	mov    dl,0x77
  4217ac:	or     bl,BYTE PTR [esi+ecx*2]
  4217af:	dec    ebp
  4217b0:	jmp    0x53509207
  4217b5:	je     0x421749
  4217b7:	outs   dx,BYTE PTR ds:[esi]
  4217b8:	test   BYTE PTR [edi+0x3c],dl
  4217bb:	sub    eax,edx
  4217bd:	push   ds
  4217be:	shl    edi,0x7e
  4217c1:	out    dx,al
  4217c2:	fstp   DWORD PTR [edx]
  4217c4:	cld    
  4217c5:	and    BYTE PTR [ecx+eiz*2+0x5a8074c1],bl
  4217cc:	sub    bh,BYTE PTR [edx]
  4217ce:	enter  0xfa33,0xec
  4217d2:	xor    al,0xc7
  4217d4:	fmul   QWORD PTR [ebp-0x15]
  4217d7:	addr16 dec ecx
  4217d9:	ret    0xc9df
  4217dc:	outs   dx,DWORD PTR ds:[esi]
  4217dd:	dec    ebx
  4217de:	mov    BYTE PTR [edi+0x30e34d07],al
  4217e4:	add    BYTE PTR [ecx-0x12d438fb],dh
  4217ea:	adc    eax,0xa969802d
  4217ef:	les    ecx,FWORD PTR [ebx-0x33]
  4217f2:	add    eax,0x67c4e06d
  4217f7:	jo     0x42179b
  4217f9:	cs enter 0xddbc,0xda
  4217fe:	fldenv [esi+esi*1]
  421801:	inc    esi
  421802:	leave  
  421803:	test   BYTE PTR gs:[eax],dl
  421806:	dec    eax
  421807:	add    BYTE PTR [esi+0x114f1f7],bh
  42180d:	(bad)  
  42180e:	(bad)  
  42180f:	popf   
  421810:	fimul  WORD PTR [ebx-0x7b]
  421813:	jge    0x421872
  421815:	pop    ebx
  421816:	retf   
  421817:	dec    ebp
  421818:	jns    0x4217d0
  42181a:	sub    al,0x6c
  42181c:	mov    dl,BYTE PTR [edi+0xd915eb1]
  421822:	jnp    0x42182b
  421824:	cmp    BYTE PTR [edi-0x7c],0xeb
  421828:	scas   ax,WORD PTR es:[edi]
  42182a:	or     al,0x20
  42182c:	daa    
  42182d:	adc    al,0xce
  42182f:	dec    esi
  421830:	and    al,0x2a
  421832:	cdq    
  421833:	pop    ss
  421834:	sub    DWORD PTR [esi],esp
  421836:	into   
  421837:	dec    eax
  421838:	aam    0xc5
  42183a:	cli    
  42183b:	and    BYTE PTR [ebx+0x43],cl
  42183e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42183f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421840:	and    DWORD PTR [edi-0x7],0xa32a5b6b
  421847:	mov    ah,0xa5
  421849:	mov    ds:0xf387434e,al
  42184e:	add    eax,0x1d215fe9
  421853:	out    0x56,al
  421855:	dec    ecx
  421856:	xchg   ebx,eax
  421857:	push   edi
  421858:	popw   es
  42185a:	inc    edx
  42185b:	cmp    edx,DWORD PTR [ebp-0x75]
  42185e:	cld    
  42185f:	faddp  st(6),st
  421861:	or     al,0x28
  421863:	mov    ecx,0x16c6c164
  421868:	mov    eax,DWORD PTR [esi]
  42186a:	inc    ecx
  42186b:	mov    bl,0xb1
  42186d:	mov    esp,0x6a26eed8
  421872:	and    DWORD PTR [edi+0x21ed7530],edi
  421878:	pop    esp
  421879:	(bad)  
  42187a:	jecxz  0x421875
  42187c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42187e:	ss mov edi,0xd9ab1fae
  421884:	aam    0x66
  421886:	sti    
  421887:	push   es
  421888:	imul   edi,DWORD PTR [ecx+ebp*4],0xffffffc5
  42188c:	or     eax,0x230df5c0
  421891:	scas   eax,DWORD PTR es:[edi]
  421892:	dec    dx
  421894:	ds out 0x15,eax
  421897:	mov    esp,0x268874ff
  42189c:	iret   
  42189d:	sub    DWORD PTR [eax],edx
  42189f:	sub    eax,DWORD PTR [ebx]
  4218a1:	rcl    BYTE PTR [esi+eax*1-0x5891ab54],1
  4218a8:	xchg   ebp,eax
  4218a9:	shl    DWORD PTR [ebx+0x66],1
  4218ac:	hlt    
  4218ad:	pop    es
  4218ae:	enter  0x18a2,0xab
  4218b2:	adc    bh,BYTE PTR [ecx]
  4218b4:	push   ss
  4218b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b6:	jbe    0x42184a
  4218b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218b9:	xchg   ecx,eax
  4218ba:	sbb    eax,0xcf5ba81a
  4218bf:	pop    DWORD PTR [esi+0x5f62019a]
  4218c5:	fs mov ebp,0xf454672b
  4218cb:	ja     0x42189d
  4218cd:	add    ecx,DWORD PTR [eax-0xc]
  4218d0:	inc    ebp
  4218d1:	movzx  ebp,BYTE PTR [esi-0x1e918ccd]
  4218d8:	jno    0x421887
  4218da:	and    al,0x82
  4218dc:	mov    edi,0x6011cbdc
  4218e1:	call   0x481e:0x57eb9f6f
  4218e8:	mov    edx,0x46828f5c
  4218ed:	aam    0xe1
  4218ef:	outs   dx,BYTE PTR ds:[esi]
  4218f0:	inc    edi
  4218f1:	mov    ds,WORD PTR [edi+0x2c7d118e]
  4218f7:	inc    esi
  4218f8:	push   edx
  4218f9:	add    BYTE PTR [eax],al
  4218fb:	add    dl,dh
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	btc    edx,edi
  42190a:	sub    esp,esp
  42190c:	pop    esp
  42190d:	xchg   esp,eax
  42190e:	add    DWORD PTR [eax],eax
  421910:	test   DWORD PTR [edx],eax
  421912:	add    BYTE PTR [eax],al
  421914:	call   FWORD PTR [ebp-0x754bc46b]
  42191a:	retf   0xc415
  42191d:	das    
  42191e:	push   edi
  42191f:	mov    eax,0xaa9f9c66
  421924:	scas   al,BYTE PTR es:[edi]
  421925:	lods   al,BYTE PTR ds:[esi]
  421927:	stos   DWORD PTR es:[edi],eax
  421928:	ins    BYTE PTR es:[edi],dx
  421929:	sub    DWORD PTR [edx],esp
  42192b:	stos   BYTE PTR es:[edi],al
  42192c:	aas    
  42192d:	les    esp,FWORD PTR [bp+di]
  421930:	and    ah,BYTE PTR [eax+0x54f1c661]
  421936:	les    ecx,FWORD PTR [eax-0x2c]
  421939:	test   DWORD PTR [esi-0x1b5bdd92],edi
  42193f:	xchg   edi,eax
  421940:	pop    ecx
  421941:	es sbb al,dl
  421944:	xchg   BYTE PTR [ecx],bh
  421946:	imul   ebx,DWORD PTR [ebx-0x3514836b],0x9e633923
  421950:	and    dl,0xc7
  421953:	and    ecx,DWORD PTR [edi]
  421955:	mov    ecx,0x70466b1e
  42195a:	add    ebp,DWORD PTR [eax-0x41]
  42195d:	pop    edi
  42195e:	mov    bh,0x33
  421960:	and    ebp,ecx
  421962:	popf   
  421963:	sahf   
  421964:	jb     0x4219dd
  421966:	xor    dh,BYTE PTR ds:0x57df62ef
  42196c:	pop    ds
  42196d:	dec    esi
  42196e:	repz fisubr DWORD PTR [edi+0x7a62cd06]
  421975:	sbb    edi,DWORD PTR [ebx-0x68]
  421978:	xchg   ebx,eax
  421979:	out    dx,eax
  42197a:	mov    ebx,DWORD PTR [edx-0x12]
  42197d:	pop    es
  42197e:	dec    edi
  42197f:	aaa    
  421980:	jg     0x421964
  421982:	int    0xa9
  421984:	hlt    
  421985:	pushf  
  421986:	dec    eax
  421987:	dec    edi
  421988:	fild   WORD PTR [edi-0x197a77fc]
  42198e:	mov    cl,0xf
  421990:	xchg   DWORD PTR [esi],edi
  421992:	lock cmp BYTE PTR [edi+0x4d],al
  421996:	inc    esi
  421997:	(bad)  
  421998:	ror    BYTE PTR [ecx],0x4b
  42199b:	inc    ebp
  42199c:	add    DWORD PTR [ebp+eax*1+0x3],esi
  4219a0:	push   esi
  4219a1:	xor    ebp,edi
  4219a3:	lds    esp,FWORD PTR [ebx]
  4219a5:	push   esp
  4219a6:	push   ebp
  4219a7:	pop    edx
  4219a8:	jno    0x421954
  4219aa:	mov    ah,0x78
  4219ac:	xchg   ecx,eax
  4219ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ae:	jmp    0x421983
  4219b0:	add    dh,dl
  4219b2:	mov    bh,0x85
  4219b4:	pop    esi
  4219b5:	(bad)  
  4219b6:	sbb    eax,0x6a262278
  4219bb:	(bad)  
  4219bc:	xlat   BYTE PTR ds:[ebx]
  4219bd:	pop    edi
  4219be:	jle    0x421993
  4219c0:	adc    bh,dh
  4219c2:	adc    ch,BYTE PTR [edx-0x3100b5a8]
  4219c8:	mov    ebp,DWORD PTR [eax-0x2d09d86f]
  4219ce:	rol    DWORD PTR [ecx],cl
  4219d0:	inc    ecx
  4219d1:	daa    
  4219d2:	inc    esp
  4219d3:	sbb    BYTE PTR [ebx],0x5f
  4219d6:	xchg   edx,eax
  4219d7:	sub    eax,0x1a83b9e0
  4219dc:	add    eax,0x55174e01
  4219e1:	jecxz  0x4219a3
  4219e3:	inc    esi
  4219e4:	out    0x47,eax
  4219e6:	jmp    0xa51bd1dd
  4219eb:	dec    ecx
  4219ec:	aad    0x12
  4219ee:	xor    eax,0xd384b60c
  4219f3:	pop    es
  4219f4:	mov    DWORD PTR [ecx+0x16875b50],eax
  4219fa:	shl    BYTE PTR [ebx],cl
  4219fc:	stos   BYTE PTR es:[edi],al
  4219fd:	cmp    al,0xed
  4219ff:	imul   esi,DWORD PTR [esi+esi*1-0x5a4709b7],0x1ba9d9e2
  421a0a:	mov    ebx,0x688808bd
  421a0f:	xchg   esp,eax
  421a10:	add    BYTE PTR [ebx+eiz*1+0x20],cl
  421a14:	ja     0x4219e1
  421a16:	fcom   st(3)
  421a18:	and    eax,0xb86024ee
  421a1e:	(bad)  
  421a1f:	stos   BYTE PTR es:[edi],al
  421a20:	stos   DWORD PTR es:[edi],eax
  421a21:	adc    al,0xf6
  421a23:	int    0xdd
  421a25:	scas   eax,DWORD PTR es:[edi]
  421a26:	test   BYTE PTR [ecx-0x35],ch
  421a29:	jg     0x421a94
  421a2b:	repnz mov ebp,0xa6b15c65
  421a31:	or     edi,edx
  421a33:	pop    esi
  421a34:	cmp    eax,0x7f905de4
  421a39:	xlat   BYTE PTR ds:[ebx]
  421a3a:	mov    ebx,0x6ee9838f
  421a3f:	jecxz  0x421a33
  421a41:	je     0x421a0d
  421a43:	test   al,0xe5
  421a45:	lods   al,BYTE PTR ds:[esi]
  421a46:	cmp    al,0x67
  421a48:	mov    edx,0xc24a6b8a
  421a4d:	clc    
  421a4e:	fdiv   QWORD PTR [esi]
  421a50:	inc    edi
  421a51:	xor    al,0xdd
  421a53:	xchg   DWORD PTR [edi],ebx
  421a55:	fldenv [ecx]
  421a57:	(bad)  
  421a58:	push   cs
  421a59:	es aaa 
  421a5b:	push   es
  421a5c:	pop    es
  421a5d:	or     al,0x59
  421a5f:	sbb    esp,DWORD PTR [ebp-0x42]
  421a62:	cld    
  421a63:	adc    BYTE PTR [ecx+0x3b],0x33
  421a67:	mov    gs,ebp
  421a69:	xchg   edx,eax
  421a6a:	cmc    
  421a6b:	mov    esp,0x8d85f65c
  421a70:	pop    ss
  421a71:	mov    ch,0x6a
  421a73:	or     bh,0x52
  421a76:	sub    al,bh
  421a78:	mov    eax,0x2f8b651d
  421a7d:	and    bh,BYTE PTR ds:0xd0c2a20f
  421a83:	dec    ebp
  421a84:	xchg   esp,eax
  421a85:	or     al,cl
  421a87:	push   ebx
  421a88:	mov    bl,0x67
  421a8a:	fdiv   QWORD PTR [ebp+ebp*4+0x60]
  421a8e:	sbb    al,bh
  421a90:	dec    edi
  421a91:	es loop 0x421a1e
  421a94:	in     eax,dx
  421a95:	rep outs dx,BYTE PTR ds:[esi]
  421a97:	sti    
  421a98:	retf   0x2587
  421a9b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421a9d:	push   esi
  421a9e:	mov    DWORD PTR [edi-0x60c19607],esi
  421aa4:	dec    ebp
  421aa5:	jne    0x421ac7
  421aa7:	jl     0x421ac1
  421aa9:	cs xor al,0x75
  421aac:	ins    BYTE PTR es:[edi],dx
  421aad:	jge    0x421b26
  421aaf:	jnp    0x421a5b
  421ab1:	mov    eax,0x682f26
  421ab6:	or     BYTE PTR [esp+esi*4],bh
  421ab9:	sbb    eax,0x54272b6d
  421abe:	jmp    0x6f88:0xc73399cb
  421ac5:	sub    eax,0xa06e041e
  421aca:	push   0xffffff90
  421acc:	inc    edi
  421acd:	cdq    
  421ace:	iret   
  421acf:	lods   eax,DWORD PTR ds:[esi]
  421ad0:	ret    
  421ad1:	adc    dl,ah
  421ad3:	push   ecx
  421ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad5:	leave  
  421ad6:	mov    edx,0x15f05c97
  421adb:	addr16 push edi
  421add:	popa   
  421ade:	dec    edi
  421adf:	ja     0x421b3e
  421ae1:	sbb    ebp,DWORD PTR [edi-0x428cd28a]
  421ae7:	ror    DWORD PTR [esi-0x71],1
  421aea:	(bad)  
  421aeb:	or     ebp,edx
  421aed:	cwde   
  421aee:	pop    edi
  421aef:	fdivrp st(1),st
  421af1:	pop    ds
  421af2:	mov    bl,0xa6
  421af4:	pop    esi
  421af5:	jl     0x421b66
  421af7:	cs pop esp
  421af9:	sub    BYTE PTR [eax-0x49],bh
  421afc:	jbe    0x421b00
  421afe:	(bad)  
  421aff:	pusha  
  421b00:	pop    ss
  421b01:	loopne 0x421acd
  421b03:	xchg   edx,eax
  421b04:	mov    eax,ds:0xb3bb1baf
  421b09:	inc    edi
  421b0a:	mov    edi,0xe657dde1
  421b0f:	push   ss
  421b10:	addr16 cli 
  421b12:	out    0x64,eax
  421b14:	ficomp WORD PTR [ecx+0x4f]
  421b17:	mov    DWORD PTR [eax-0x9],ebp
  421b1a:	sahf   
  421b1b:	adc    DWORD PTR [edx+ebp*8+0x386eb0c3],esp
  421b22:	push   es
  421b23:	xchg   esi,eax
  421b24:	add    DWORD PTR [esi+0x5e3d3aec],eax
  421b2a:	ds mov ch,0x33
  421b2d:	pop    ebp
  421b2e:	adc    eax,0xbc9aacc1
  421b33:	and    al,0x2e
  421b35:	xlat   BYTE PTR ds:[ebx]
  421b36:	shl    dh,0xff
  421b39:	xchg   edi,eax
  421b3a:	inc    ebp
  421b3b:	cld    
  421b3c:	mov    al,0xe0
  421b3e:	cli    
  421b3f:	test   BYTE PTR [ebp-0x14],dh
  421b42:	jne    0x421ba8
  421b44:	pop    ss
  421b45:	jae    0x421b52
  421b47:	jge    0x421baa
  421b49:	dec    eax
  421b4a:	mov    esi,0x3d59366f
  421b4f:	push   ecx
  421b50:	or     DWORD PTR [eax+0xa],esi
  421b53:	lods   eax,DWORD PTR ds:[esi]
  421b54:	ficom  WORD PTR [edx]
  421b56:	test   eax,0x356828e
  421b5b:	nop
  421b5c:	adc    eax,0xebf34e4
  421b61:	sub    eax,0xd8d34b6d
  421b66:	ins    DWORD PTR es:[edi],dx
  421b67:	std    
  421b68:	(bad)  
  421b69:	aam    0x41
  421b6b:	dec    eax
  421b6c:	dec    edx
  421b6d:	aaa    
  421b6e:	cs cs sahf 
  421b71:	imul   ebx,DWORD PTR [ebx+0x4c],0x24872179
  421b78:	xor    eax,0xbc15cd20
  421b7d:	add    ch,BYTE PTR [eax-0x2585a5e]
  421b83:	xacquire xchg DWORD PTR [eax-0x75661579],edi
  421b8a:	add    eax,DWORD PTR [ebx+0x13957a8e]
  421b90:	sub    BYTE PTR [ebp-0x3],cl
  421b93:	pop    eax
  421b94:	xor    dl,bh
  421b96:	nop
  421b97:	(bad)  
  421b99:	add    BYTE PTR [eax],al
  421b9b:	add    BYTE PTR [ebx+0x41],al
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [ebx+0x65],bl
  421baa:	or     eax,0x196e17c
  421baf:	add    BYTE PTR [ebp+0x5d000002],al
  421bb5:	leave  
  421bb6:	pop    DWORD PTR ds:0xbc65c3e8
  421bbc:	pop    esp
  421bbd:	out    dx,eax
  421bbe:	xchg   ebx,eax
  421bbf:	loope  0x421c3f
  421bc1:	enter  0x98b7,0x18
  421bc5:	sti    
  421bc6:	or     ebx,eax
  421bc8:	daa    
  421bc9:	push   edi
  421bca:	int    0x8d
  421bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bcd:	in     eax,dx
  421bce:	mov    ebx,0x919c7421
  421bd3:	stos   DWORD PTR es:[edi],eax
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	xchg   edx,eax
  421bd6:	mov    ds:0x45088b52,al
  421bdb:	add    eax,0x3574c16b
  421be0:	scas   al,BYTE PTR es:[edi]
  421be1:	sub    DWORD PTR fs:[ecx+0x30],edx
  421be5:	dec    ebp
  421be6:	jecxz  0x421bd7
  421be8:	sub    eax,0xa813cbaa
  421bed:	sub    eax,0x33c3fb5f
  421bf2:	and    DWORD PTR [edi],eax
  421bf4:	push   edx
  421bf5:	outs   dx,DWORD PTR ds:[esi]
  421bf6:	ret    
  421bf7:	inc    edi
  421bf8:	xchg   ebp,eax
  421bf9:	dec    edx
  421bfa:	rcl    BYTE PTR [ebp+ebx*1+0x63],cl
  421bfe:	jg     0x421c77
  421c00:	outs   dx,DWORD PTR ds:[esi]
  421c01:	jne    0x421c48
  421c03:	aas    
  421c04:	fsubr  QWORD PTR [eax-0x56]
  421c07:	scas   eax,DWORD PTR es:[edi]
  421c08:	cwde   
  421c09:	jp     0x421c5e
  421c0b:	adc    ebp,edi
  421c0d:	aad    0xef
  421c0f:	mov    ah,0x72
  421c11:	(bad)  
  421c12:	daa    
  421c13:	outs   dx,DWORD PTR ds:[esi]
  421c14:	push   ebp
  421c15:	pop    eax
  421c16:	mov    ah,BYTE PTR ds:0x2c6e9cde
  421c1c:	(bad)  
  421c1d:	push   eax
  421c1e:	ins    BYTE PTR es:[edi],dx
  421c1f:	fwait
  421c20:	adc    edx,DWORD PTR [ebp-0x3863e193]
  421c26:	inc    esp
  421c27:	jno    0x421c66
  421c29:	outs   dx,BYTE PTR ds:[esi]
  421c2a:	mov    bl,0x2c
  421c2c:	sbb    esi,DWORD PTR [edx]
  421c2e:	push   ds
  421c2f:	sbb    BYTE PTR [ecx-0x27c420ed],dl
  421c35:	ficomp WORD PTR [eax]
  421c37:	es in  eax,0xa0
  421c3a:	neg    DWORD PTR [edx-0x56]
  421c3d:	loope  0x421c35
  421c3f:	jecxz  0x421c08
  421c41:	xor    BYTE PTR cs:[edi+0x42],0x6d
  421c46:	shl    DWORD PTR [edi],cl
  421c48:	aas    
  421c49:	pop    ebx
  421c4a:	cmp    al,0x6f
  421c4c:	icebp  
  421c4d:	cmp    BYTE PTR ds:0x6ed79dc,0xab
  421c54:	jg     0x421bfe
  421c56:	mov    ebp,0x43a718d4
  421c5b:	pop    ecx
  421c5c:	jmp    0x4272d7f0
  421c61:	shl    DWORD PTR [esi+ebp*2-0x79d0e900],cl
  421c68:	jmp    0x31ba3975
  421c6d:	shr    ecx,0xc
  421c70:	imul   ebx,DWORD PTR [esi-0x1cae40fd],0xffc6010c
  421c7a:	(bad)  
  421c7b:	mov    esp,0xe5dcdc6b
  421c80:	dec    esi
  421c81:	ret    0x70b0
  421c84:	mov    ebp,0xcd71023c
  421c89:	pop    edi
  421c8a:	jo     0x421c7d
  421c8c:	mov    bh,0x4
  421c8e:	xchg   ecx,eax
  421c8f:	(bad)  
  421c90:	cmc    
  421c91:	adc    DWORD PTR [eax],ebx
  421c93:	xor    BYTE PTR [edi+0x354637a2],ah
  421c99:	push   ss
  421c9a:	fcomi  st,st(7)
  421c9c:	push   ecx
  421c9d:	retf   0xe603
  421ca0:	push   ds
  421ca1:	loop   0x421cac
  421ca3:	pop    esp
  421ca4:	or     cl,BYTE PTR [ebp-0x39]
  421ca7:	sbb    ch,BYTE PTR [ebx]
  421ca9:	inc    ecx
  421caa:	add    dl,BYTE PTR [edx]
  421cac:	and    edi,DWORD PTR [eax]
  421cae:	and    eax,0xf33c4c50
  421cb3:	mov    esi,0xd7808da4
  421cb8:	xor    esp,DWORD PTR ds:[esi-0x1a4c71cf]
  421cbf:	lods   al,BYTE PTR ds:[esi]
  421cc0:	je     0x421cf7
  421cc2:	aad    0x5d
  421cc4:	jnp    0x421c7f
  421cc6:	fwait
  421cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cc8:	mov    esp,DWORD PTR [edi+esi*8-0xa]
  421ccc:	sbb    DWORD PTR [edx-0x32fc53f3],0x11cf4a87
  421cd6:	mov    esi,0xd3ba3c8c
  421cdb:	hlt    
  421cdc:	jl     0x421c73
  421cde:	scas   al,BYTE PTR es:[edi]
  421cdf:	fadd   QWORD PTR [ebx+eiz*2+0x77]
  421ce3:	jo     0x421d29
  421ce5:	sahf   
  421ce6:	imul   edi,DWORD PTR [edi],0x904b5ac4
  421cec:	cmp    DWORD PTR [ebp-0x77],0x516144c0
  421cf3:	mov    bl,0x28
  421cf5:	retf   0x7a66
  421cf8:	retf   
  421cf9:	mov    ebx,0xd7deb11c
  421cfe:	gs pop ebp
  421d00:	in     al,0x9a
  421d02:	fcomip st,st(3)
  421d04:	es or  eax,0x9d045552
  421d0a:	loopne 0x421ce0
  421d0c:	mov    eax,0xad2159ab
  421d11:	sti    
  421d12:	test   BYTE PTR [edx+0xf047c67],cl
  421d18:	push   edi
  421d19:	in     eax,dx
  421d1a:	pop    eax
  421d1b:	cmp    bh,BYTE PTR [esi+esi*8-0x4c]
  421d1f:	nop
  421d20:	push   cs
  421d21:	call   0x601:0xd47e22f7
  421d28:	fldcw  WORD PTR [eax]
  421d2a:	mov    ?,ebx
  421d2c:	cmp    al,0xe5
  421d2e:	retf   
  421d2f:	imul   esp
  421d31:	jo     0x421dad
  421d33:	add    dh,BYTE PTR [edx]
  421d35:	aaa    
  421d36:	push   cs
  421d37:	sub    eax,0xb8c94d39
  421d3c:	push   ebp
  421d3d:	cmp    al,0xca
  421d3f:	cld    
  421d40:	cli    
  421d41:	cmp    BYTE PTR [eax-0x6643642f],0x90
  421d48:	fmul   DWORD PTR [eax+0x42113548]
  421d4e:	(bad)  
  421d4f:	sar    DWORD PTR [eax+0x585ec371],1
  421d55:	call   0x2c9a936d
  421d5a:	mov    ch,0xfe
  421d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d5d:	push   esi
  421d5e:	xchg   esp,eax
  421d5f:	push   0xffffff92
  421d61:	add    edi,DWORD PTR [edi+ecx*1]
  421d64:	lea    ebx,[eax]
  421d66:	adc    edi,0x94fe5a17
  421d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6d:	test   dh,0x3a
  421d70:	cmp    bl,BYTE PTR [esi]
  421d72:	test   BYTE PTR [ecx+0x3c4ffcd8],bh
  421d78:	in     al,0x44
  421d7a:	lahf   
  421d7b:	aaa    
  421d7c:	ins    BYTE PTR es:[edi],dx
  421d7d:	jns    0x421dd0
  421d7f:	cmp    DWORD PTR [eax+eiz*2-0x59e60ad],eax
  421d86:	lahf   
  421d87:	pop    ds
  421d88:	nop
  421d89:	int3   
  421d8a:	es stc 
  421d8c:	pushf  
  421d8d:	mov    edi,0x40971fae
  421d92:	in     al,dx
  421d93:	sub    BYTE PTR [ecx-0x172f2b5f],al
  421d99:	dec    eax
  421d9a:	push   ds
  421d9b:	push   ecx
  421d9c:	mov    ds:0xbcf0d9e2,al
  421da1:	shl    DWORD PTR [esi],cl
  421da3:	inc    ebx
  421da4:	aaa    
  421da5:	push   eax
  421da6:	sar    DWORD PTR [eax],0x14
  421da9:	push   esi
  421daa:	adc    eax,0x60f5b46e
  421daf:	fs cmp al,0xc4
  421db2:	push   es
  421db3:	(bad)  
  421db4:	stc    
  421db5:	xor    eax,0x322c9724
  421dba:	fsubr  DWORD PTR [esi]
  421dbc:	pushf  
  421dbd:	pop    edx
  421dbe:	popf   
  421dbf:	mov    eax,0x747bdc8a
  421dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc5:	jmp    0xffcb:0x309b5ce
  421dcc:	dec    ebx
  421dcd:	pop    esp
  421dce:	fidivr WORD PTR [esi+ebx*8]
  421dd1:	test   DWORD PTR [edx-0x23],0x2f34fa95
  421dd8:	stos   BYTE PTR es:[edi],al
  421dd9:	stos   DWORD PTR es:[edi],eax
  421dda:	retf   
  421ddb:	ja     0x421e2d
  421ddd:	ja     0x421d7d
  421ddf:	jmp    0x6351:0x30190e57
  421de6:	mov    dl,0x8f
  421de8:	div    BYTE PTR ds:0x53597f3d
  421dee:	iret   
  421def:	jl     0x421deb
  421df1:	stos   BYTE PTR es:[edi],al
  421df2:	fcmovb st,st(0)
  421df4:	xchg   ebp,eax
  421df5:	stos   DWORD PTR es:[edi],eax
  421df6:	not    DWORD PTR [edi+esi*1-0x1e12fb78]
  421dfd:	push   ecx
  421dfe:	mov    ebx,0xab7278bf
  421e03:	add    DWORD PTR [edi-0x2d55cec],0xbb987b33
  421e0d:	or     DWORD PTR [ebx+0x5cb03990],0xffffffdc
  421e14:	mov    bl,al
  421e16:	(bad)  
  421e17:	mov    edx,0xf14337d
  421e1c:	shl    ah,1
  421e1e:	inc    esp
  421e1f:	adc    eax,0x193a48d6
  421e24:	cli    
  421e25:	ret    
  421e26:	cmp    DWORD PTR [edx-0x62],edx
  421e29:	ror    DWORD PTR [edx+0x14],0x83
  421e2d:	imul   ebp,DWORD PTR [edi+0x99cd9a6],0xa4421960
  421e37:	(bad)  
  421e38:	leave  
  421e39:	add    BYTE PTR [eax],al
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421df9
  421e49:	scas   al,BYTE PTR es:[edi]
  421e4a:	cmp    DWORD PTR [ecx+0x19966],ecx
  421e50:	test   DWORD PTR [edx],eax
  421e52:	add    BYTE PTR [eax],al
  421e54:	retf   0x624f
  421e57:	es ins BYTE PTR es:[edi],dx
  421e59:	cmp    BYTE PTR [edi+ebx*4+0x5f],bh
  421e5d:	jnp    0x421ddf
  421e5f:	les    eax,FWORD PTR [ecx+0x4c3ff099]
  421e65:	jmp    0x97b06657
  421e6a:	stc    
  421e6b:	repz mov dh,bh
  421e6e:	retf   
  421e6f:	sahf   
  421e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e71:	or     ch,bh
  421e73:	or     eax,0x6b1a6112
  421e78:	lahf   
  421e79:	or     eax,0x1f0911b2
  421e7e:	cld    
  421e7f:	jae    0x421e96
  421e81:	mov    BYTE PTR [ebx-0x3363f4a8],ch
  421e87:	ret    0x6a61
  421e8a:	(bad)  
  421e8b:	cmp    esp,DWORD PTR [edi+0x7a]
  421e8e:	add    esi,ebx
  421e90:	bound  edx,QWORD PTR [ecx-0x2f675750]
  421e96:	(bad)
  421e9a:	(bad)  gs:[ecx-0x6bce5cb3]
  421ea1:	jno    0x421e4d
  421ea3:	mov    ds:0x917d1108,al
  421ea8:	push   esp
  421ea9:	les    edi,FWORD PTR [esi+0x4c17e171]
  421eaf:	frndint 
  421eb1:	lea    edi,cs:[edx+0x3789db9f]
  421eb8:	and    al,ah
  421eba:	jae    0x421e75
  421ebc:	xchg   DWORD PTR [edx+0x38],esi
  421ebf:	lahf   
  421ec0:	jne    0x421f3f
  421ec2:	test   BYTE PTR [ebx],bh
  421ec4:	ror    DWORD PTR [ebx+0x33aff412],1
  421eca:	fst    QWORD PTR [esp+eiz*4]
  421ecd:	jmp    0x7ee2d726
  421ed2:	push   ecx
  421ed3:	mov    ebx,0x5f4da2d5
  421ed8:	jecxz  0x421ee2
  421eda:	cwde   
  421edb:	fistp  DWORD PTR [edi+0x367db825]
  421ee1:	jmp    FWORD PTR [ebx]
  421ee3:	jle    0x421ea8
  421ee5:	jle    0x421e98
  421ee7:	jae    0x421eea
  421ee9:	and    al,0xf6
  421eeb:	jp     0x421efd
  421eed:	add    bh,cl
  421eef:	mov    esi,0xa4f69a52
  421ef4:	jecxz  0x421f33
  421ef6:	mov    al,ds:0xc7041a2a
  421efb:	xchg   DWORD PTR [esi-0x1e],esi
  421efe:	retf   
  421eff:	(bad)  
  421f00:	fld    TBYTE PTR [ecx]
  421f02:	test   al,0x22
  421f04:	popf   
  421f05:	inc    edi
  421f06:	and    eax,0xa3dbf1b1
  421f0b:	arpl   WORD PTR [eax],bx
  421f0d:	inc    esp
  421f0e:	mov    gs,esi
  421f10:	mov    bh,dl
  421f12:	lods   al,BYTE PTR ds:[esi]
  421f13:	call   0xb2cac32f
  421f18:	jl     0x421f4f
  421f1a:	lds    ebp,FWORD PTR [ecx]
  421f1c:	fsub   QWORD PTR [ebx+0x696d4a8e]
  421f22:	pusha  
  421f23:	mov    esp,ecx
  421f25:	lock xor ebp,DWORD PTR [eax-0x6c1e79ae]
  421f2c:	pop    ebx
  421f2d:	frstor [ebp+0xa98ba06]
  421f33:	into   
  421f34:	repnz mov dh,dh
  421f37:	scas   al,BYTE PTR es:[edi]
  421f38:	pop    ecx
  421f39:	dec    ebx
  421f3a:	adc    ch,BYTE PTR [esi]
  421f3c:	retf   0x2bb9
  421f3f:	call   0x34360148
  421f44:	test   dl,dh
  421f46:	or     esp,DWORD PTR [esi+0x35]
  421f49:	fsubr  DWORD PTR [ebx+0x664ae193]
  421f4f:	in     al,dx
  421f50:	iret   
  421f51:	arpl   WORD PTR [edx-0x4388304e],si
  421f57:	xchg   ebx,eax
  421f58:	mov    ds,WORD PTR ds:0xeabc1e63
  421f5e:	sub    eax,DWORD PTR [ecx+0x62]
  421f61:	mov    esp,0xcc39c059
  421f66:	push   ss
  421f67:	imul   eax,DWORD PTR [esi-0x73],0xdf1ce8e8
  421f6e:	xor    ah,BYTE PTR [edi-0x3]
  421f71:	dec    eax
  421f72:	daa    
  421f73:	aam    0x76
  421f75:	xor    DWORD PTR [edx+0x170fa162],ebp
  421f7b:	pop    eax
  421f7c:	jb     0x421f35
  421f7e:	adc    eax,0xf4c9dde5
  421f83:	dec    edi
  421f84:	loopne 0x421f66
  421f86:	mul    bl
  421f88:	sub    BYTE PTR [edi-0x2c],dh
  421f8b:	imul   edx,ebx,0x66
  421f8e:	shl    DWORD PTR [eax+0x6b],cl
  421f91:	xchg   DWORD PTR [ebx+edx*2+0x47ff6aa3],ebp
  421f98:	dec    ecx
  421f99:	pop    ds
  421f9a:	shl    ch,cl
  421f9c:	retf   0x8e6f
  421f9f:	xor    edi,DWORD PTR [ecx+0xd]
  421fa2:	lahf   
  421fa3:	jle    0x421fa0
  421fa5:	push   edi
  421fa6:	daa    
  421fa7:	or     BYTE PTR [ecx-0x2dcc5227],0xd7
  421fae:	push   ebx
  421faf:	jge    0x421f33
  421fb1:	sbb    edx,DWORD PTR [eax+edi*2+0x6c]
  421fb5:	mov    ebx,0x1f2d18ee
  421fba:	mov    ebx,cs
  421fbc:	push   ds
  421fbd:	test   al,0xf3
  421fbf:	mov    esp,0x364c14db
  421fc4:	(bad)  
  421fc5:	push   edi
  421fc6:	ret    0x869f
  421fc9:	out    dx,eax
  421fca:	xor    DWORD PTR ds:[edx-0x6a],edx
  421fce:	les    esi,FWORD PTR [edx+0x20]
  421fd1:	or     BYTE PTR [ebx+ebp*1+0x37],bh
  421fd5:	into   
  421fd6:	push   ebp
  421fd7:	add    BYTE PTR [ecx-0x57],ch
  421fda:	and    eax,0xac0b5e66
  421fdf:	dec    ebx
  421fe0:	jns    0x421ffe
  421fe2:	inc    ebp
  421fe3:	repz aas 
  421fe5:	jo     0x421fc6
  421fe7:	dec    esi
  421fe8:	xor    eax,0x355e8610
  421fed:	mov    al,0xbc
  421fef:	jo     0x422025
  421ff1:	stos   BYTE PTR es:[edi],al
  421ff2:	imul   edx,DWORD PTR [esi+eiz*8-0x51],0x8f957b69
  421ffa:	pop    ecx
  421ffb:	cdq    
  421ffc:	sti    
  421ffd:	mov    ah,0x17
  421fff:	mov    eax,ds:0xe7f78d29
  422004:	pop    eax
  422005:	jae    0x421ff0
  422007:	cdq    
  422008:	sbb    esp,DWORD PTR [ebx]
  42200a:	jno    0x421fbe
  42200c:	inc    edi
  42200d:	mov    ebx,0x608cff6a
  422012:	call   0xe07:0x5913b2e1
  422019:	add    eax,DWORD PTR [ebp-0xbc02a80]
  42201f:	mov    ebx,0x57f2363f
  422024:	jmp    DWORD PTR [edi]
  422026:	repnz lea ecx,[ebp+0x5cfe70b]
  42202d:	dec    edi
  42202e:	lods   al,BYTE PTR ds:[esi]
  42202f:	test   eax,0x7a116163
  422034:	rep stos DWORD PTR es:[edi],eax
  422036:	retfw  
  422038:	stos   DWORD PTR es:[edi],eax
  422039:	pop    es
  42203a:	mov    BYTE PTR [ebp+ebp*2+0x3a],al
  42203e:	leave  
  42203f:	jle    0x422062
  422041:	and    eax,0xdf049939
  422046:	push   cs
  422047:	pusha  
  422048:	fwait
  422049:	lods   eax,DWORD PTR ds:[esi]
  42204a:	sub    cl,BYTE PTR [ecx+0x38564cb4]
  422050:	sbb    dl,BYTE PTR [ecx-0x1fdb56b4]
  422056:	pop    edx
  422057:	fs cmp edx,ecx
  42205a:	arpl   WORD PTR [eax-0x6aa4fd47],si
  422060:	and    bl,0xb
  422063:	mov    esp,0x5e78f30f
  422068:	scas   al,BYTE PTR es:[edi]
  422069:	mov    eax,ds:0xd7bbb3fe
  42206e:	xchg   edx,eax
  42206f:	pop    esi
  422070:	js     0x422090
  422072:	push   esi
  422073:	jno    0x422060
  422075:	std    
  422076:	mov    edx,0x1e95babe
  42207b:	dec    esi
  42207c:	push   esi
  42207d:	cmp    BYTE PTR [esi-0xbba66e5],ch
  422083:	pop    ss
  422084:	ins    DWORD PTR es:[edi],dx
  422085:	push   es
  422086:	aad    0x9b
  422088:	pushf  
  422089:	inc    ebp
  42208a:	adc    BYTE PTR [eax],bh
  42208c:	push   ebp
  42208d:	mov    bh,0x58
  42208f:	or     DWORD PTR [eax+0x52141554],0x18
  422096:	icebp  
  422097:	and    DWORD PTR [eax],eax
  422099:	out    dx,eax
  42209a:	ds inc esi
  42209c:	push   cs
  42209d:	sub    DWORD PTR [esi],0x6e
  4220a0:	or     edi,ebp
  4220a2:	test   DWORD PTR [ecx-0x7b36692a],esp
  4220a8:	or     DWORD PTR [edi],ecx
  4220aa:	and    BYTE PTR [ebx+0x3e2eca68],bl
  4220b0:	inc    ebp
  4220b1:	fdiv   DWORD PTR [eax+0x1d4c4fec]
  4220b7:	mov    al,0x78
  4220b9:	mov    bl,0xf0
  4220bb:	std    
  4220bc:	loope  0x422094
  4220be:	cmp    al,0x0
  4220c0:	xor    ebx,DWORD PTR [eax]
  4220c2:	pop    esp
  4220c3:	pop    esp
  4220c4:	sub    eax,0xc4c0edaf
  4220c9:	sbb    esi,ebx
  4220cb:	mov    ah,0xe7
  4220cd:	xchg   edx,eax
  4220ce:	in     al,dx
  4220cf:	mov    ch,0x67
  4220d1:	jge    0x4220cb
  4220d3:	loopne 0x4220d5
  4220d5:	xchg   esi,eax
  4220d6:	sbb    esi,DWORD PTR [esi-0x45]
  4220d9:	add    BYTE PTR [eax],al
  4220db:	add    dl,dl
  4220dd:	and    dl,BYTE PTR [esi-0x21410966]
  4220e3:	push   0x52
  4220e5:	push   ds
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    ah,bh
  4220e9:	mov    al,0x4d
  4220eb:	(bad)  
  4220ec:	jmp    0x422089
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	test   DWORD PTR [edx],eax
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	inc    edx
  4220f5:	ss xor bh,cl
  4220f8:	dec    edx
  4220f9:	shl    ecx,1
  4220fb:	pop    esi
  4220fc:	push   edi
  4220fd:	inc    ebx
  4220fe:	out    0x6d,eax
  422100:	mov    bl,dl
  422102:	push   ss
  422103:	std    
  422104:	mov    dl,0xe6
  422106:	(bad)  
  422107:	push   edx
  422108:	add    al,al
  42210a:	test   eax,0xe392130c
  42210f:	mov    dh,0x16
  422111:	inc    esi
  422112:	and    al,0x6b
  422114:	ins    DWORD PTR es:[edi],dx
  422115:	iret   
  422116:	mov    ds:0x95bcd22d,eax
  42211b:	and    eax,0x37f01c95
  422120:	push   cs
  422121:	xchg   ecx,eax
  422122:	xor    eax,0xefbe1374
  422127:	jg     0x4220c4
  422129:	cmp    al,0x87
  42212b:	shr    dh,cl
  42212d:	out    0xf,al
  42212f:	or     bh,BYTE PTR [ebx-0x55]
  422132:	mov    WORD PTR [esi-0x43c3bc60],gs
  422138:	xchg   ebx,eax
  422139:	sbb    esp,DWORD PTR [ebp-0x4f]
  42213c:	inc    edx
  42213d:	push   cs
  42213e:	bound  edi,QWORD PTR [esi+0x42]
  422141:	(bad)  
  422143:	mov    dl,0x2e
  422145:	(bad)  
  422147:	jmp    0x42215a
  422149:	pop    ds
  42214a:	dec    edi
  42214b:	daa    
  42214c:	aad    0xc7
  42214e:	fmul   QWORD PTR [ebx]
  422150:	sub    eax,0x263747da
  422155:	shl    ebp,1
  422157:	pop    es
  422158:	cmp    DWORD PTR [edi-0x68],edi
  42215b:	cmp    ebx,DWORD PTR [edx]
  42215d:	cdq    
  42215e:	push   ebx
  42215f:	dec    esi
  422160:	out    0xc,al
  422162:	ins    BYTE PTR es:[edi],dx
  422163:	jle    0x4221d4
  422165:	sbb    eax,0xc5a8d6af
  42216a:	push   eax
  42216b:	push   cs
  42216c:	js     0x42217c
  42216e:	cld    
  42216f:	test   eax,0xde4efbba
  422174:	xchg   DWORD PTR [ebx-0x4e],ecx
  422177:	dec    ebp
  422178:	(bad)  
  422179:	out    dx,eax
  42217a:	fidivr WORD PTR [esi]
  42217c:	les    edi,FWORD PTR [ebp-0x7e]
  42217f:	aaa    
  422180:	out    0x1,eax
  422182:	sub    eax,0x97e7b902
  422187:	jge    0x42219e
  422189:	cs ins BYTE PTR es:[di],dx
  42218c:	cmp    BYTE PTR fs:[ebx],0x9e
  422190:	mov    esp,0x2040698
  422195:	jge    0x422215
  422197:	sbb    BYTE PTR [ebx+0x58],ah
  42219a:	pop    edx
  42219b:	pop    ss
  42219c:	pop    es
  42219d:	fcomp  DWORD PTR ds:0x9b39be92
  4221a3:	aas    
  4221a4:	sub    al,0x7a
  4221a6:	aam    0x1e
  4221a8:	(bad)  
  4221a9:	aaa    
  4221aa:	sti    
  4221ab:	mov    gs,WORD PTR [edi+0x7c]
  4221ae:	push   ecx
  4221af:	call   0xa6260457
  4221b4:	pop    es
  4221b5:	andnps xmm6,XMMWORD PTR [ecx+0xa]
  4221b9:	lods   eax,DWORD PTR ds:[esi]
  4221ba:	cmc    
  4221bb:	adc    eax,0xce187eed
  4221c0:	retf   
  4221c1:	addr16 enter 0x6a11,0x7a
  4221c6:	dec    ebp
  4221c7:	jle    0x422180
  4221c9:	mov    eax,ds:0x104967b0
  4221ce:	aam    0xc
  4221d0:	scas   eax,DWORD PTR es:[edi]
  4221d1:	lods   al,BYTE PTR ds:[esi]
  4221d2:	xor    al,0x8d
  4221d4:	pop    ebp
  4221d5:	es mov ch,0x7e
  4221d8:	push   edi
  4221d9:	jmp    0x422172
  4221db:	lods   al,BYTE PTR ds:[esi]
  4221dc:	neg    DWORD PTR [edx-0x2ea7b469]
  4221e2:	int    0x64
  4221e4:	cld    
  4221e5:	sub    DWORD PTR ds:0x9a66d1d4,edx
  4221eb:	mov    ecx,0x1ee67b30
  4221f0:	ins    DWORD PTR es:[edi],dx
  4221f1:	imul   eax,DWORD PTR [ecx+eax*8-0x75],0x80bb5eaa
  4221f9:	jmp    0x4221ca
  4221fb:	mov    esi,0x91cdb651
  422200:	inc    esi
  422201:	ins    BYTE PTR es:[edi],dx
  422202:	adc    al,0x53
  422204:	add    esi,DWORD PTR [eax+0x31a6ea99]
  42220a:	push   ss
  42220b:	and    al,0x33
  42220d:	mov    ebp,0xa56cc9ca
  422212:	test   BYTE PTR [ecx+0x1e],bh
  422215:	mov    dl,0x32
  422217:	sbb    eax,0xf6212372
  42221c:	jmp    0x4221b4
  42221e:	lods   eax,DWORD PTR ds:[esi]
  42221f:	test   eax,0x99aa2c3c
  422224:	in     al,dx
  422225:	ds (bad) 
  422227:	scas   eax,DWORD PTR es:[edi]
  422228:	jge    0x422294
  42222a:	hlt    
  42222b:	mov    ch,0x8f
  42222d:	xor    DWORD PTR [edi-0x664e8ab7],edi
  422233:	cli    
  422234:	or     al,0x93
  422236:	dec    ebp
  422237:	test   DWORD PTR [ebx-0x50cfdb56],0x9bc03087
  422241:	das    
  422242:	shl    ah,cl
  422244:	pop    ebp
  422245:	sbb    ebp,DWORD PTR [ebp+0x6948c018]
  42224b:	mov    dl,0x22
  42224d:	(bad)  
  42224e:	dec    eax
  42224f:	inc    esi
  422250:	hlt    
  422251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422252:	cmc    
  422253:	adc    edx,DWORD PTR [edi+ebp*2+0x4b]
  422257:	mov    dl,0xc6
  422259:	sub    bl,bl
  42225b:	test   BYTE PTR [ebp-0x164a09d0],bh
  422261:	push   ecx
  422262:	sbb    al,0x27
  422264:	fcmovb st,st(5)
  422266:	idiv   ebx
  422268:	femms  
  42226a:	(bad)  [edx+0x0]
  42226d:	int    0xdf
  42226f:	in     eax,dx
  422270:	push   0x22
  422272:	scas   al,BYTE PTR es:[edi]
  422273:	rol    DWORD PTR [ecx+0x1b],cl
  422276:	dec    DWORD PTR [ebp+0x69]
  422279:	mov    ecx,0x908a843
  42227e:	pop    ss
  42227f:	lods   al,BYTE PTR ds:[esi]
  422280:	sbb    al,0x55
  422282:	inc    ebx
  422283:	ret    0xa30d
  422286:	pop    esp
  422287:	clc    
  422288:	or     DWORD PTR [esi+0x9],esp
  42228b:	retf   0x728f
  42228e:	xor    DWORD PTR [edi-0x4969b3a9],ebp
  422294:	retf   0x4d4f
  422297:	imul   ebp,ecx,0xcea47f98
  42229d:	call   0xbc8abfe3
  4222a2:	fcmovnb st,st(6)
  4222a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a5:	(bad)  
  4222a6:	sbb    eax,0xd74b30cc
  4222ab:	pop    ebp
  4222ac:	xchg   esp,eax
  4222ad:	dec    ebp
  4222ae:	frstor [esi]
  4222b0:	or     DWORD PTR es:[edi-0x10],esp
  4222b4:	lods   eax,DWORD PTR ds:[esi]
  4222b5:	mul    BYTE PTR [ebx-0x2c3809e7]
  4222bb:	rol    cl,cl
  4222bd:	aam    0xcd
  4222bf:	push   es
  4222c0:	fisttp DWORD PTR [ecx]
  4222c2:	call   0xb7a8:0xbd497822
  4222c9:	mov    ch,BYTE PTR [ebx]
  4222cb:	retf   0x5562
  4222ce:	and    BYTE PTR [ecx+edx*8],dh
  4222d1:	push   0x90a85ae4
  4222d6:	leave  
  4222d7:	xor    eax,0x53880f0d
  4222dc:	add    al,BYTE PTR [ecx+0x2e]
  4222df:	dec    edx
  4222e0:	gs push cs
  4222e2:	pop    ebp
  4222e3:	push   ss
  4222e4:	callw  0x44c0
  4222e8:	loop   0x4222c2
  4222ea:	or     eax,0x47c9ee26
  4222ef:	and    dh,BYTE PTR [ecx+0x3bb00f58]
  4222f5:	loop   0x422321
  4222f7:	adc    BYTE PTR [eax+0x40],0xb9
  4222fb:	sub    eax,0xa273b14b
  422300:	and    eax,0x18ae1819
  422305:	pop    ds
  422306:	out    dx,eax
  422307:	data16 test al,0x77
  42230a:	pop    ss
  42230b:	dec    esp
  42230c:	pop    esi
  42230d:	sub    edi,esi
  42230f:	adc    cl,BYTE PTR [edx+0x5d]
  422312:	lods   al,BYTE PTR ss:[esi]
  422314:	leave  
  422315:	loopne 0x4222f2
  422317:	shr    DWORD PTR [ecx+0x39],0xd3
  42231b:	and    dh,ah
  42231d:	mov    esp,0x17afe034
  422322:	dec    ebp
  422323:	mov    ebx,0xb50ef65a
  422328:	es pop ebp
  42232a:	pop    ebp
  42232b:	loope  0x42233d
  42232d:	or     eax,0xd0921efc
  422332:	add    ecx,ecx
  422334:	sbb    eax,0xfbf73189
  422339:	ja     0x422339
  42233b:	retf   
  42233c:	push   0xfffffffd
  42233e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42233f:	add    ch,BYTE PTR [ebx+0x5ef8fb0d]
  422345:	popf   
  422346:	xor    ah,cl
  422348:	xchg   BYTE PTR [esi],ch
  42234a:	pop    edx
  42234b:	ror    DWORD PTR [esi],cl
  42234d:	mov    eax,ds:0x74ce6688
  422352:	xchg   esp,eax
  422353:	and    ebx,DWORD PTR [edi+0x4911b73d]
  422359:	push   esi
  42235a:	or     bh,ch
  42235c:	push   eax
  42235d:	mov    eax,0xa895e385
  422362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422363:	lea    edi,[ebx]
  422365:	add    al,0xb4
  422367:	clc    
  422368:	int    0x63
  42236a:	jle    0x4223a4
  42236c:	js     0x422346
  42236e:	jae    0x422303
  422370:	mov    ecx,0x8ac19faa
  422375:	(bad)  
  422376:	sbb    DWORD PTR [edx+0x54],edx
  42237c:	fnstsw WORD PTR [edi+ecx*4]
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x67a2723f]
  42238a:	inc    edi
  42238b:	or     esi,DWORD PTR [eax-0x62]
  42238e:	add    DWORD PTR [eax],eax
  422390:	test   DWORD PTR [edx],eax
  422392:	add    BYTE PTR [eax],al
  422394:	scas   eax,DWORD PTR es:[edi]
  422395:	or     BYTE PTR [eax+0x7881c6c6],ah
  42239b:	jne    0x42231f
  42239d:	sar    BYTE PTR [ebx],1
  42239f:	push   edi
  4223a0:	mov    ecx,0xfee14647
  4223a5:	sub    eax,0x2fe6a20e
  4223aa:	(bad)  
  4223ab:	rol    BYTE PTR [esi],0xe1
  4223ae:	jle    0x422350
  4223b0:	dec    ebx
  4223b1:	xchg   DWORD PTR [edi-0x2e],ebp
  4223b4:	lods   al,BYTE PTR ds:[esi]
  4223b5:	test   eax,0x6783195c
  4223ba:	leave  
  4223bb:	dec    edi
  4223bc:	sub    DWORD PTR [edx-0x5f],edi
  4223bf:	sbb    BYTE PTR [ecx+0x2800889c],ah
  4223c5:	mov    cs,edx
  4223c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223c8:	xor    eax,0x3262cbcf
  4223cd:	inc    edx
  4223ce:	cwde   
  4223cf:	jns    0x4223b4
  4223d1:	fisub  WORD PTR [edi+ebp*1+0x70]
  4223d5:	ja     0x4223cb
  4223d7:	and    edi,esi
  4223d9:	and    DWORD PTR [ecx+0x7af9d3e8],esi
  4223df:	jo     0x4223bb
  4223e1:	mov    ebx,0x6e6499e1
  4223e6:	cmp    al,0xc1
  4223e8:	cmp    DWORD PTR [ebx-0xfb7201a],esp
  4223ee:	outs   dx,DWORD PTR ds:[esi]
  4223ef:	test   eax,0xb7a0d878
  4223f4:	cmp    al,0xf5
  4223f6:	or     eax,DWORD PTR [edx-0x168c3dee]
  4223fc:	mov    cl,0x51
  4223fe:	mov    ds:0x779b2830,eax
  422403:	adc    esi,eax
  422405:	sbb    ebx,DWORD PTR [ecx-0x6f]
  422408:	leave  
  422409:	aad    0x9e
  42240b:	pop    ecx
  42240c:	or     eax,0x1c33a574
  422411:	loope  0x42240c
  422413:	(bad)  
  422414:	sbb    ch,BYTE PTR [esi-0x54941017]
  42241a:	es inc esp
  42241c:	(bad)  
  42241d:	test   eax,0x9cf3607f
  422422:	test   cl,dl
  422424:	mov    dh,0x75
  422426:	push   ss
  422427:	(bad)
  42242a:	daa    
  42242b:	cld    
  42242c:	jno    0x42245e
  42242e:	add    al,0xa2
  422430:	push   esp
  422431:	push   ecx
  422432:	xchg   BYTE PTR [ecx+0x24],dl
  422435:	xchg   edx,eax
  422436:	fs cmp DWORD PTR fs:0x4082eff1,edi
  42243e:	in     al,dx
  42243f:	lods   al,BYTE PTR ds:[esi]
  422440:	xchg   esp,edx
  422442:	hlt    
  422443:	test   eax,0xa2906442
  422448:	ds mov edx,0x4cfec89
  42244e:	and    eax,0x94b028f7
  422453:	loop   0x4223e0
  422455:	scas   al,BYTE PTR es:[edi]
  422456:	adc    eax,0x36cac547
  42245b:	cld    
  42245c:	cld    
  42245d:	mov    BYTE PTR [edx+eiz*2-0x206b99ef],bh
  422464:	ins    BYTE PTR es:[edi],dx
  422465:	jbe    0x4224c1
  422467:	cld    
  422468:	cld    
  422469:	sub    ecx,DWORD PTR [edx+0x7062b090]
  42246f:	pusha  
  422470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422472:	ss xchg ebx,eax
  422475:	nop
  422476:	mov    ecx,0xe51890c7
  42247b:	dec    ecx
  42247c:	test   BYTE PTR [ebx-0x7],al
  42247f:	inc    ebx
  422480:	add    DWORD PTR [ebp+0x54],ecx
  422483:	aad    0xc0
  422485:	es inc ebx
  422487:	xchg   BYTE PTR [edi+0x7],cl
  42248a:	in     eax,dx
  42248b:	or     ecx,DWORD PTR [edi+0x7b5df3e7]
  422491:	jge    0x4224d0
  422493:	pop    ebp
  422494:	push   esp
  422495:	out    0xee,eax
  422497:	xor    esp,ebx
  422499:	jp     0x422435
  42249b:	xchg   edx,eax
  42249c:	push   eax
  42249d:	in     eax,0x49
  42249f:	and    eax,0x62fb937
  4224a4:	jmp    0x422448
  4224a6:	push   eax
  4224a7:	test   eax,0x4a3da7b9
  4224ac:	je     0x422494
  4224ae:	xor    eax,0xa86c4851
  4224b3:	xor    esp,esp
  4224b5:	push   es
  4224b6:	push   ebx
  4224b7:	jp     0x42250a
  4224b9:	mov    edx,0x65f45ba0
  4224be:	dec    edi
  4224bf:	mov    esp,DWORD PTR [ebp+0x48cac1cd]
  4224c5:	stc    
  4224c6:	push   0x40
  4224c8:	fisub  WORD PTR [ebp-0x15]
  4224cb:	cmp    DWORD PTR ds:0xb27de7f3,eax
  4224d1:	lds    ecx,FWORD PTR [ebp+0x29]
  4224d4:	pop    ebp
  4224d5:	daa    
  4224d6:	ftst   
  4224d8:	mov    ebp,0xa2038a28
  4224dd:	mov    ebx,DWORD PTR [ebx+0x2a02af0f]
  4224e3:	inc    eax
  4224e4:	push   ss
  4224e5:	lock pop es
  4224e7:	inc    edi
  4224e8:	inc    ebx
  4224e9:	dec    esp
  4224ea:	cmp    edx,edx
  4224ec:	xchg   esi,eax
  4224ed:	inc    edx
  4224ee:	cs or  ebx,eax
  4224f1:	jle    0x42250d
  4224f3:	sub    DWORD PTR [ecx],edi
  4224f5:	je     0x42249f
  4224f7:	pusha  
  4224f8:	and    BYTE PTR [eax],dl
  4224fa:	pop    edx
  4224fb:	lds    ecx,FWORD PTR [ebx+0x5658f51b]
  422501:	int3   
  422502:	mov    BYTE PTR [edi+ebp*2+0x11d70b5a],bh
  422509:	mov    WORD PTR [eax+0x6a],es
  42250c:	jecxz  0x422560
  42250e:	xchg   ebp,eax
  42250f:	push   esp
  422510:	add    BYTE PTR [ebp-0x67],dh
  422513:	push   esi
  422514:	xor    al,0xa7
  422516:	(bad)
  42251a:	jbe    0x4224b8
  42251c:	mov    eax,ds:0x9f1a4c9f
  422521:	rcr    DWORD PTR [ecx+0x7d127b9c],0xb4
  422528:	(bad)  
  42252a:	and    DWORD PTR [edi+0x76],edi
  42252d:	out    dx,al
  42252e:	outs   dx,DWORD PTR ds:[esi]
  42252f:	xchg   BYTE PTR [edx+0x22c118a3],cl
  422535:	xchg   esp,eax
  422536:	or     edx,DWORD PTR [eax+edx*4]
  422539:	cmc    
  42253a:	mov    gs,WORD PTR [edi-0x62]
  42253d:	jne    0x42258c
  42253f:	mov    BYTE PTR [ecx+0x6aed2ae6],bl
  422545:	dec    eax
  422546:	(bad)  
  422547:	jb     0x42253d
  422549:	push   cs
  42254a:	imul   esp,DWORD PTR [ecx],0xc86e7ce2
  422550:	out    0x4d,eax
  422552:	std    
  422553:	add    DWORD PTR fs:[ecx-0x25],esi
  422557:	inc    di
  422559:	add    eax,0x5bf11f65
  42255e:	jmp    0x9f84d054
  422563:	xchg   ebp,eax
  422564:	inc    eax
  422565:	mov    ecx,0x6e259924
  42256a:	lods   eax,DWORD PTR ds:[esi]
  42256b:	call   0x41fc7abd
  422570:	xor    ebx,DWORD PTR [eax-0x52e9f714]
  422576:	mov    esp,0xfcec9226
  42257b:	imul   esp,DWORD PTR [ecx],0x4e
  42257e:	mov    ds:0x6d567e49,eax
  422583:	xor    esi,DWORD PTR [ecx+eax*8-0x1c804366]
  42258a:	mov    bl,0x14
  42258c:	xchg   ecx,eax
  42258d:	les    edx,FWORD PTR [ebx]
  42258f:	mov    ds:0x29609722,eax
  422594:	retf   
  422595:	sbb    BYTE PTR [ecx+eax*8],al
  422598:	jo     0x422614
  42259a:	out    dx,eax
  42259b:	pop    esp
  42259c:	dec    ebx
  42259d:	mov    ebp,0xf845f637
  4225a2:	ins    BYTE PTR es:[edi],dx
  4225a3:	call   0x6a08:0xa203d3e1
  4225aa:	push   edx
  4225ab:	mov    ah,0x13
  4225ad:	mov    ah,0x4c
  4225af:	cmp    DWORD PTR [edx+0x44bd5bf5],edx
  4225b5:	fimul  WORD PTR [edi]
  4225b7:	mov    cl,0x7a
  4225b9:	pop    es
  4225ba:	and    DWORD PTR [ebx],0x2d
  4225bd:	fimul  WORD PTR [edx+0x66]
  4225c0:	dec    edi
  4225c1:	mov    ecx,0x4c667d2d
  4225c6:	dec    ebx
  4225c7:	je     0x42263d
  4225c9:	neg    BYTE PTR [ebp+eax*4-0x55ab1fbd]
  4225d0:	imul   ecx,DWORD PTR [ecx+eax*1-0x6b],0x7a7ed703
  4225d8:	data16 fidiv DWORD PTR [esi-0x6a]
  4225dc:	push   ecx
  4225dd:	fnstenv [edx+0x34]
  4225e0:	arpl   di,si
  4225e2:	(bad)  
  4225e3:	outs   dx,BYTE PTR ds:[esi]
  4225e4:	cmp    cl,BYTE PTR [eax+0x4196a0d4]
  4225ea:	pop    esi
  4225eb:	imul   edi,DWORD PTR [edi+0x54],0x3065e52f
  4225f2:	cwde   
  4225f3:	mov    BYTE PTR [ebx+0x5d],dl
  4225f6:	inc    esp
  4225f7:	fistp  QWORD PTR [ebx+0x20]
  4225fa:	add    DWORD PTR [esi-0x67],edx
  4225fd:	imul   ebp,DWORD PTR [ebp+0x32a48be9],0xffffffff
  422604:	imul   edx,DWORD PTR [ebx],0x4f1d07cc
  42260a:	inc    edi
  42260b:	in     eax,0x20
  42260d:	and    ebp,esi
  42260f:	sbb    edx,DWORD PTR [ecx-0x3319b2af]
  422615:	pop    ecx
  422616:	stc    
  422617:	(bad)  
  422619:	add    BYTE PTR [eax],al
  42261b:	add    BYTE PTR [esi-0x4fd6421],dh
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0x89ffc81b
  42262c:	cmc    
  42262d:	mov    al,ds:0x2850001
  422632:	add    BYTE PTR [eax],al
  422634:	dec    edi
  422635:	adc    eax,0x85c8c72b
  42263a:	mov    al,ds:0x1e0c220b
  42263f:	pop    ss
  422640:	fdivp  st(0),st
  422642:	bound  ebp,QWORD PTR [edi]
  422644:	xor    DWORD PTR [eax+0x6edc819f],esp
  42264a:	and    bl,BYTE PTR [eax-0x6f284abc]
  422650:	scas   al,BYTE PTR es:[edi]
  422651:	and    eax,0xe67f7476
  422656:	rcr    DWORD PTR [esi],1
  422658:	out    0xce,al
  42265a:	ss or  ebp,0x2634ba0c
  422661:	loop   0x4226b6
  422663:	sbb    ebx,DWORD PTR [edi-0x20]
  422666:	adc    eax,0x9b3947fd
  42266b:	cld    
  42266c:	pop    ds
  42266d:	call   0x9ad14ea9
  422672:	sub    ebx,ecx
  422674:	push   ebx
  422675:	pop    esi
  422676:	push   ss
  422677:	shr    BYTE PTR [edx+0x1],0x94
  42267b:	mov    dl,0x9e
  42267d:	push   es
  42267e:	mov    edi,0xd67091cd
  422683:	inc    ebp
  422684:	ret    
  422685:	mov    al,0x96
  422687:	or     ebx,edx
  422689:	std    
  42268a:	add    eax,0xab40dfea
  42268f:	jns    0x4226cf
  422691:	(bad)  
  422692:	repnz xor ebp,DWORD PTR [eax]
  422695:	repz test esp,0xe9f57c2a
  42269c:	test   al,0xfa
  42269e:	sub    eax,0x2f7e85b6
  4226a3:	in     al,0x7a
  4226a5:	outs   dx,DWORD PTR ds:[esi]
  4226a6:	fwait
  4226a7:	dec    edx
  4226a8:	push   edi
  4226a9:	mov    al,0x1f
  4226ab:	push   ebx
  4226ac:	mov    ds:0x6b691133,eax
  4226b1:	sub    al,BYTE PTR [ebp+0x617cef2e]
  4226b7:	and    BYTE PTR [edx],cl
  4226b9:	mov    ds:0x6777dc04,al
  4226be:	ds mov cl,0xc4
  4226c1:	int3   
  4226c2:	sub    al,0x70
  4226c4:	jg     0x42270f
  4226c6:	mov    al,0x84
  4226c8:	or     eax,DWORD PTR [esi-0x68d8d260]
  4226ce:	outs   dx,BYTE PTR ds:[esi]
  4226cf:	test   DWORD PTR [edx-0x5533cc23],eax
  4226d5:	xchg   BYTE PTR [edx+esi*2+0x41],cl
  4226d9:	pop    es
  4226da:	nop
  4226db:	mov    al,0x90
  4226dd:	cmp    DWORD PTR ds:0x576e6aab,esp
  4226e3:	xchg   edx,eax
  4226e4:	test   DWORD PTR [ecx],esp
  4226e6:	fwait
  4226e7:	xchg   DWORD PTR [ebx+0x699f00f3],ecx
  4226ed:	in     eax,dx
  4226ee:	(bad)  
  4226ef:	icebp  
  4226f0:	jbe    0x4226cc
  4226f2:	adc    edi,ecx
  4226f4:	jae    0x42274b
  4226f6:	in     al,0x1d
  4226f8:	push   es
  4226f9:	(bad)  
  4226fb:	(bad)  
  4226fc:	nop
  4226fd:	or     BYTE PTR [edi-0x6c],ch
  422700:	xlat   BYTE PTR ds:[ebx]
  422701:	fdiv   st,st(0)
  422703:	sub    DWORD PTR [edi+edi*8+0x47115adc],esi
  42270a:	out    0x1c,al
  42270c:	mov    ch,0xc6
  42270e:	add    DWORD PTR [eax],edx
  422710:	cmp    eax,0xb0671bbe
  422715:	push   ecx
  422716:	jmp    0x13a70d02
  42271b:	dec    edx
  42271c:	xchg   edx,edx
  42271e:	imul   ebx,DWORD PTR [ebx],0x6e
  422721:	ret    0xebd9
  422724:	in     eax,dx
  422725:	jg     0x4226aa
  422727:	dec    esi
  422728:	sbb    al,0xcd
  42272a:	push   ebp
  42272b:	mov    esi,ebp
  42272d:	xor    esp,DWORD PTR [edx-0x14b00ece]
  422733:	mov    esi,0x42e02cf4
  422738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422739:	or     BYTE PTR [edx],dl
  42273b:	scas   eax,DWORD PTR es:[edi]
  42273c:	loop   0x422756
  42273e:	cmp    BYTE PTR [ecx-0x5d],0x74
  422742:	addr16 mov dh,ah
  422745:	inc    ecx
  422746:	xor    al,0x24
  422748:	add    DWORD PTR [ecx],0xabe031c2
  42274e:	scas   al,BYTE PTR es:[edi]
  42274f:	push   esp
  422750:	or     eax,0xb49d1d2d
  422755:	mov    edx,DWORD PTR [esp+ebx*1]
  422758:	jl     0x4226dd
  42275a:	jmp    0x422745
  42275c:	and    eax,0xdd55b259
  422761:	mov    cl,bl
  422763:	add    eax,0xe2e4d3e8
  422768:	(bad)  
  422769:	sub    eax,0xad72857
  42276e:	mov    ah,0x7a
  422770:	fild   WORD PTR [edx]
  422772:	xor    DWORD PTR [esi],edi
  422774:	push   ds
  422775:	push   cs
  422776:	push   eax
  422777:	sbb    DWORD PTR [ebp+0x39],eax
  42277a:	cwde   
  42277b:	or     eax,0x87e9a40a
  422780:	out    dx,al
  422781:	call   0xbba3:0xd4ff8496
  422788:	mov    ebp,0xa6660f76
  42278d:	sub    BYTE PTR [eiz*8+0x3e73e0d2],0xa3
  422795:	out    0x57,al
  422797:	sub    eax,0xf0e76ff8
  42279c:	repz imul ebp,DWORD PTR [edx-0x59f65b03],0x9587d8e3
  4227a7:	inc    ebx
  4227a8:	fbld   TBYTE PTR [esi+edi*4]
  4227ab:	push   cs
  4227ac:	cdq    
  4227ad:	sbb    eax,0x966dc5b3
  4227b2:	inc    ecx
  4227b3:	inc    ebx
  4227b4:	pop    ebx
  4227b5:	jbe    0x4227b5
  4227b7:	shr    edi,1
  4227b9:	inc    ecx
  4227ba:	ret    
  4227bb:	inc    ebp
  4227bc:	push   0x73
  4227be:	cld    
  4227bf:	cmp    eax,0x5dbc561a
  4227c4:	test   DWORD PTR [edx+0xb5fe73a],0xd26ca1a9
  4227ce:	mul    DWORD PTR [ebx]
  4227d0:	ffree  st(5)
  4227d2:	fstp   DWORD PTR [edi-0x7d213bcc]
  4227d8:	aam    0xff
  4227da:	sub    cl,BYTE PTR [ecx]
  4227dc:	pop    ss
  4227dd:	dec    edi
  4227de:	dec    esp
  4227df:	call   0x4a260890
  4227e4:	call   DWORD PTR [di]
  4227e7:	sub    al,0xa6
  4227e9:	stos   DWORD PTR es:[edi],eax
  4227ea:	aaa    
  4227eb:	xor    DWORD PTR [esi+edx*1+0x1c],eax
  4227ef:	jle    0x422837
  4227f1:	rcl    dh,1
  4227f3:	mov    cl,0x33
  4227f5:	mov    ?,WORD PTR [ebx-0x6d]
  4227f8:	jg     0x4227ce
  4227fa:	xchg   esp,esp
  4227fc:	dec    ebx
  4227fd:	mov    bl,0xd2
  4227ff:	add    DWORD PTR [ebp+0x5c],ebp
  422802:	lods   eax,DWORD PTR ds:[esi]
  422803:	mov    esi,0x8376b381
  422808:	or     dh,0x2f
  42280b:	ja     0x422813
  42280d:	aaa    
  42280e:	jmp    0x422855
  422810:	inc    ecx
  422811:	mov    esi,ebp
  422813:	mov    al,ds:0xa10b43a7
  422818:	mov    cl,0xa7
  42281a:	xor    DWORD PTR [esi+eax*1+0x2c],0xb9a59480
  422822:	fwait
  422823:	aad    0xbb
  422825:	imul   edx,esi,0xd60d010d
  42282b:	into   
  42282c:	jb     0x4227f3
  42282e:	add    bl,BYTE PTR [ebp-0x28db8b56]
  422834:	push   ds
  422835:	lock nop
  422837:	xchg   esi,eax
  422838:	pop    edi
  422839:	je     0x422884
  42283b:	sbb    DWORD PTR [esi],ebp
  42283d:	dec    eax
  42283e:	lock mov edi,0x487a93fc
  422844:	shr    BYTE PTR [edx],0x4b
  422847:	jae    0x422820
  422849:	movaps xmm1,XMMWORD PTR [ecx-0x11]
  42284d:	pusha  
  42284e:	pop    edi
  42284f:	jo     0x422879
  422851:	rcl    DWORD PTR [edi-0x1c],0x1
  422855:	sbb    BYTE PTR [esi+0x63a04c2f],0x8c
  42285c:	and    edi,eax
  42285e:	(bad)  
  42285f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422860:	xchg   ebp,eax
  422861:	dec    ebp
  422862:	call   0xa8db:0xcfccc60
  422869:	fs xchg esp,eax
  42286b:	cmp    al,0xab
  42286d:	dec    ecx
  42286e:	pop    edx
  42286f:	dec    edi
  422870:	rcl    BYTE PTR [edx-0x45cece30],0x47
  422877:	sbb    al,0x8d
  422879:	xor    esi,DWORD PTR [ecx]
  42287b:	ins    DWORD PTR es:[edi],dx
  42287c:	mov    eax,ds:0xd0a42ba
  422881:	rcl    esi,1
  422883:	jle    0x4228ee
  422885:	jp     0x422817
  422887:	lds    ecx,FWORD PTR [ebx]
  422889:	inc    ebp
  42288a:	xchg   edi,eax
  42288b:	int3   
  42288c:	jmp    0xd1312cc6
  422891:	inc    eax
  422892:	adc    BYTE PTR [ebp+0x443f5499],cl
  422898:	jmp    0xeef1:0xe383f0f8
  42289f:	cmp    DWORD PTR [ecx-0x2f78555e],esi
  4228a5:	aam    0x13
  4228a7:	pop    esp
  4228a8:	out    dx,al
  4228a9:	in     eax,dx
  4228aa:	mov    bh,0x93
  4228ac:	cmp    bh,bh
  4228ae:	mov    ds:0x94f300a3,eax
  4228b3:	push   ebp
  4228b4:	test   ebx,ebx
  4228b6:	ret    0xa1b8
  4228b9:	add    BYTE PTR [eax],al
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x5a]
  4228c9:	sub    al,BYTE PTR [eax-0x7d]
  4228cc:	jp     0x422871
  4228ce:	add    DWORD PTR [eax],eax
  4228d0:	test   DWORD PTR [edx],eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d5:	arpl   bp,bp
  4228d7:	push   esp
  4228d8:	loope  0x4228ba
  4228da:	inc    edx
  4228db:	clc    
  4228dc:	and    cl,BYTE PTR [eax-0x338cb9de]
  4228e2:	mov    WORD PTR [ecx],?
  4228e4:	ins    BYTE PTR es:[edi],dx
  4228e5:	(bad)  
  4228e6:	push   edi
  4228e7:	jbe    0x42287f
  4228e9:	ret    
  4228ea:	dec    esp
  4228eb:	cmp    dh,bl
  4228ed:	sbb    BYTE PTR [esi],bl
  4228ef:	jmp    0x422962
  4228f1:	fprem1 
  4228f4:	leave  
  4228f5:	je     0x42296c
  4228f7:	cmp    esi,DWORD PTR [esi+0x70]
  4228fa:	mov    DWORD PTR [esi],eax
  4228fc:	(bad)  
  4228fd:	push   ss
  4228fe:	mov    dl,0xeb
  422900:	adc    DWORD PTR [esi+0x26ba69a2],0x59
  422907:	mov    eax,ds:0xf0d01c42
  42290c:	inc    esp
  42290d:	push   ebx
  42290e:	test   BYTE PTR [eax],ch
  422910:	call   0x55ac:0x9b74297f
  422917:	jecxz  0x42296b
  422919:	mov    bh,0x2
  42291b:	xor    BYTE PTR [ecx],al
  42291d:	xchg   esi,eax
  42291e:	push   es
  42291f:	in     al,0x1c
  422921:	or     cl,BYTE PTR [ecx]
  422923:	pop    edx
  422924:	adc    DWORD PTR [ecx-0x4a],esp
  422927:	jne    0x422952
  422929:	les    esp,FWORD PTR [ebx-0x386f5e0f]
  42292f:	aaa    
  422930:	shl    dh,cl
  422932:	sbb    DWORD PTR ds:0x652fa092,esi
  422938:	sub    ecx,DWORD PTR [eax-0x565597a7]
  42293e:	out    dx,eax
  42293f:	push   0x7098ff3f
  422944:	xor    dh,BYTE PTR [esi]
  422946:	inc    esi
  422947:	pop    ebp
  422948:	cmp    eax,0x2a092e3e
  42294d:	cmp    BYTE PTR [edx],0x13
  422950:	in     al,0x99
  422952:	lock or ecx,0x61bf4607
  422959:	xor    BYTE PTR [edi-0x6c],ah
  42295c:	mov    ds:0xcfe03dfd,eax
  422961:	or     al,0x1c
  422963:	cwde   
  422964:	sub    eax,0x1693ff53
  422969:	dec    ebx
  42296a:	inc    eax
  42296b:	xor    bl,dh
  42296d:	mov    DWORD PTR [ebx-0x455239f0],ecx
  422973:	(bad)  
  422974:	xor    BYTE PTR [ecx],dh
  422976:	idiv   BYTE PTR [eax]
  422978:	adc    eax,0xcd49810
  42297d:	out    0x9b,eax
  42297f:	or     dh,BYTE PTR [edi+eiz*4+0x22]
  422983:	xchg   edi,eax
  422984:	adc    al,0x22
  422986:	mov    ebx,0xd0b98fc3
  42298b:	rcl    DWORD PTR [edx-0x2ccc0fb8],0x71
  422992:	add    cl,BYTE PTR [ebp+0x3a]
  422995:	add    eax,0x24f4b705
  42299a:	adc    BYTE PTR [ebp+0x1c29c36e],ah
  4229a0:	hlt    
  4229a1:	mov    ch,0x0
  4229a3:	sbb    DWORD PTR [edx+0x47],esp
  4229a6:	iret   
  4229a7:	enter  0x289a,0xb5
  4229ab:	clc    
  4229ac:	or     al,0xe6
  4229ae:	(bad)  
  4229b0:	dec    ebx
  4229b1:	mov    al,ah
  4229b3:	loop   0x422991
  4229b5:	in     eax,0xb1
  4229b7:	call   0x1867efa4
  4229bc:	xor    ebx,ebx
  4229be:	xchg   ebp,eax
  4229bf:	mov    dh,0x74
  4229c1:	cdq    
  4229c2:	sub    eax,ecx
  4229c4:	xchg   edi,eax
  4229c5:	aaa    
  4229c6:	das    
  4229c7:	jle    0x422a1f
  4229c9:	jae    0x4229b5
  4229cb:	mov    ds:0xe466a398,eax
  4229d0:	sbb    eax,0xaea063f3
  4229d5:	jl     0x4229c1
  4229d7:	pop    edx
  4229d8:	call   0xc78d:0x83cc6ac
  4229df:	adc    al,0x40
  4229e1:	sub    BYTE PTR [ebx+0x1d],cl
  4229e4:	push   DWORD PTR [ecx]
  4229e6:	gs jg  0x422a5e
  4229e9:	dec    esp
  4229ea:	or     eax,0x10873f53
  4229ef:	pop    edi
  4229f0:	xchg   edx,eax
  4229f1:	lahf   
  4229f2:	push   ecx
  4229f3:	adc    al,0xa6
  4229f5:	jp     0x422992
  4229f7:	jp     0x422a5a
  4229f9:	and    DWORD PTR [ecx],0x60883dfa
  4229ff:	icebp  
  422a00:	arpl   bp,cx
  422a02:	shr    BYTE PTR [edx-0x7a],0x78
  422a06:	call   0x513b:0x60d2cbdd
  422a0d:	mov    ds:0x40b9f180,eax
  422a12:	(bad)  
  422a13:	fwait
  422a14:	xor    DWORD PTR [ebp+0x3e],esp
  422a17:	and    dl,dh
  422a19:	pop    ebx
  422a1a:	or     eax,0xd20fff8c
  422a1f:	icebp  
  422a20:	or     al,0x8
  422a22:	ror    ebp,0x14
  422a25:	out    dx,al
  422a26:	sbb    DWORD PTR [ecx-0x3b],eax
  422a29:	add    eax,0x882cce5e
  422a2e:	mov    al,ds:0x58e43d5a
  422a33:	ja     0x4229ca
  422a35:	sar    ebp,0x96
  422a38:	jp     0x4229d0
  422a3a:	xchg   ecx,eax
  422a3b:	pushf  
  422a3c:	add    al,BYTE PTR [edx]
  422a3e:	adc    esp,DWORD PTR [eax-0x3a]
  422a41:	movhps xmm5,QWORD PTR [ebp-0x6a]
  422a45:	push   0xd
  422a47:	das    
  422a48:	xchg   ebp,eax
  422a49:	test   BYTE PTR [ebx+0x75],ah
  422a4c:	xchg   esi,eax
  422a4d:	sbb    al,0x7b
  422a4f:	mov    eax,0xa96cc7fa
  422a54:	dec    ecx
  422a55:	test   al,0x24
  422a57:	cli    
  422a58:	inc    edx
  422a59:	mov    ebx,0x14fdc196
  422a5e:	sub    al,0x63
  422a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a61:	clc    
  422a62:	(bad)
  422a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a67:	and    ch,ah
  422a69:	jb     0x422a1e
  422a6b:	xchg   esi,eax
  422a6c:	adc    ah,BYTE PTR [edi+0x3f]
  422a6f:	lahf   
  422a70:	fadd   QWORD PTR [ebx-0x38974761]
  422a76:	xchg   ecx,eax
  422a77:	fmul   st,st(3)
  422a79:	into   
  422a7a:	retf   0x3811
  422a7d:	(bad)  
  422a7e:	lahf   
  422a7f:	(bad)  
  422a80:	or     BYTE PTR ds:0x4d048db1,bh
  422a86:	sub    dh,BYTE PTR [ebp+0x54dc321]
  422a8c:	dec    ebx
  422a8d:	xchg   edx,eax
  422a8e:	mov    esi,ecx
  422a90:	scas   eax,DWORD PTR es:[edi]
  422a91:	fincstp 
  422a93:	dec    eax
  422a94:	add    BYTE PTR [esi+edx*2-0x4],cl
  422a98:	dec    eax
  422a99:	add    ebp,DWORD PTR [ebx-0x48085a18]
  422a9f:	jp     0x422ad2
  422aa1:	and    al,0x4e
  422aa3:	add    esp,DWORD PTR [edx+0x58]
  422aa6:	dec    eax
  422aa7:	mov    edx,0x566b2666
  422aac:	leave  
  422aad:	mov    eax,ds:0x8d1b27be
  422ab2:	dec    ecx
  422ab3:	repz jmp 0x5290:0x16bff91a
  422abb:	dec    esi
  422abc:	adc    eax,0x367ac912
  422ac1:	mov    ecx,0xd41968b6
  422ac6:	jno    0x422ad5
  422ac8:	int    0xcf
  422aca:	mov    dh,0x47
  422acc:	jo     0x422b21
  422ace:	mov    DWORD PTR [edx],edx
  422ad0:	sub    cl,BYTE PTR [edx-0x1174fa37]
  422ad6:	dec    ebx
  422ad7:	mov    DWORD PTR [eax],ecx
  422ad9:	dec    esi
  422ada:	rcr    BYTE PTR [edx],cl
  422adc:	or     al,0x32
  422ade:	cmp    bl,BYTE PTR [ebp-0x27]
  422ae1:	push   0xffffffd3
  422ae3:	ror    ebx,cl
  422ae5:	stos   DWORD PTR es:[edi],eax
  422ae6:	add    cl,BYTE PTR [eax+0x5d71ae14]
  422aec:	fsubr  DWORD PTR [eax-0x39]
  422aef:	xchg   edx,eax
  422af0:	retf   0x6c55
  422af3:	and    ecx,esi
  422af5:	mov    esi,0xb9a27880
  422afa:	out    0x92,eax
  422afc:	pop    edx
  422afd:	adc    edi,ebx
  422aff:	loop   0x422b2b
  422b01:	sub    bl,ch
  422b03:	dec    di
  422b05:	in     al,dx
  422b06:	xor    edx,DWORD PTR [ebx-0x29f3c470]
  422b0c:	dec    ecx
  422b0d:	call   0x2b07:0xa71c8dc1
  422b14:	pusha  
  422b15:	adc    eax,0xe9edadef
  422b1a:	fnsave [esi-0x15]
  422b1d:	sub    al,0xdb
  422b1f:	in     eax,0x65
  422b21:	cmp    eax,0xfbfe1040
  422b26:	fsubr  QWORD PTR [edi+edx*1-0x7c]
  422b2a:	mov    eax,ds:0x701a50f8
  422b2f:	xchg   esp,eax
  422b30:	dec    eax
  422b31:	mov    esp,0x1904f88c
  422b36:	and    al,BYTE PTR [edi-0x42]
  422b39:	test   eax,0xb59983ae
  422b3e:	aaa    
  422b3f:	aam    0xd2
  422b41:	inc    esp
  422b42:	adc    al,dl
  422b44:	mov    ds,WORD PTR [ecx]
  422b46:	or     BYTE PTR ds:0x7e86e263,cl
  422b4c:	mov    ebx,0xcaa55ffa
  422b51:	call   0x610a:0x4ffa994
  422b58:	push   esp
  422b59:	add    BYTE PTR [eax],al
  422b5b:	add    BYTE PTR [ecx],bh
  422b5d:	sbb    al,0x89
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	xor    edx,0xffedeb50
  422b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	test   DWORD PTR [edx],eax
  422b72:	add    BYTE PTR [eax],al
  422b74:	shl    DWORD PTR [eax*4-0x2f2f1149],1
  422b7b:	sub    BYTE PTR [edi],al
  422b7d:	xchg   edi,eax
  422b7e:	or     DWORD PTR [edi+0x74ee5467],0x33f85afc
  422b88:	lock sbb BYTE PTR [edx+0x6a],dl
  422b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b8d:	sub    BYTE PTR [ebx+0x25c1fdac],dh
  422b93:	pop    esi
  422b94:	add    cl,cl
  422b96:	stos   BYTE PTR es:[edi],al
  422b97:	push   ss
  422b98:	in     eax,0x68
  422b9a:	test   DWORD PTR [ebx-0x54],edi
  422b9d:	cmp    DWORD PTR [ecx-0x1d],edi
  422ba0:	pop    edx
  422ba1:	xor    edi,DWORD PTR [ecx+0x5a9add8a]
  422ba7:	lea    eax,[edi]
  422ba9:	add    bh,BYTE PTR [eax]
  422bab:	push   ecx
  422bac:	dec    ebp
  422bad:	dec    ebx
  422bae:	imul   edi,DWORD PTR [edi+0x3c91cb68],0x6
  422bb5:	jno    0x422c11
  422bb7:	pop    esp
  422bb8:	push   ss
  422bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bba:	jae    0x422c39
  422bbc:	jle    0x422bc3
  422bbe:	call   0x911e4a7d
  422bc3:	(bad)  
  422bc4:	sub    BYTE PTR [edx+0x63eddaca],bh
  422bca:	pop    edx
  422bcb:	mov    eax,0xb026b536
  422bd0:	sbb    esp,DWORD PTR [ebx+ecx*1]
  422bd3:	or     dh,BYTE PTR [ebp+0x18]
  422bd6:	aad    0xbe
  422bd8:	fs mov edi,0x4200c23a
  422bde:	or     BYTE PTR [esi],ch
  422be0:	rcl    BYTE PTR [ecx+0x12],1
  422be3:	(bad)  
  422be4:	push   ds
  422be5:	jne    0x422b95
  422be7:	push   edi
  422be8:	ss dec ecx
  422bea:	push   0x406883ba
  422bef:	fild   WORD PTR [edi+ebp*1-0x21]
  422bf3:	jg     0x422bc1
  422bf5:	pop    esp
  422bf6:	imul   ebx,DWORD PTR [ebx+0x4e21d6ee],0x833623c4
  422c00:	jns    0x422c63
  422c02:	std    
  422c03:	jno    0x422c7a
  422c05:	xor    ebp,0x72
  422c08:	loope  0x422c2c
  422c0a:	fiadd  DWORD PTR [eax+0x77]
  422c0d:	aas    
  422c0e:	cmp    eax,0x83a57454
  422c13:	push   ds
  422c14:	jmp    0x422b9b
  422c16:	add    eax,0xa43b22ee
  422c1b:	out    0x1e,al
  422c1d:	cmp    edx,DWORD PTR [ebx+eax*8]
  422c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c21:	xchg   esp,eax
  422c22:	xchg   esi,eax
  422c23:	lahf   
  422c24:	fld    DWORD PTR [ebx]
  422c26:	outs   dx,DWORD PTR ds:[esi]
  422c27:	es xor al,0x95
  422c2a:	push   ebp
  422c2b:	jge    0x422c9c
  422c2d:	lahf   
  422c2e:	pop    es
  422c2f:	fcomp  QWORD PTR [edi-0x34b06f75]
  422c35:	mov    ebx,0xbed399a5
  422c3a:	dec    edi
  422c3b:	div    DWORD PTR [ecx-0xc]
  422c3e:	repz daa 
  422c40:	adc    BYTE PTR [edx-0x45],dh
  422c43:	cs in  al,0xd2
  422c46:	mov    ecx,esp
  422c48:	pop    edi
  422c49:	mov    cl,0x64
  422c4b:	repz adc bl,ch
  422c4e:	ss jae 0x422c08
  422c51:	repnz pop esp
  422c53:	adc    dh,BYTE PTR [eax]
  422c55:	test   eax,0x34713352
  422c5a:	push   ebp
  422c5b:	pop    ebp
  422c5c:	xchg   ebp,eax
  422c5d:	retf   0x676e
  422c60:	fs mov esp,esp
  422c63:	hlt    
  422c64:	fs es iret 
  422c67:	popa   
  422c68:	mov    ds,WORD PTR [ebx+0x2135a895]
  422c6e:	imul   ebx,DWORD PTR [eax+0xa481f42],0x77
  422c75:	sub    BYTE PTR gs:[ecx],0x8a
  422c79:	sub    bl,BYTE PTR [ecx]
  422c7b:	push   cs
  422c7c:	push   edi
  422c7d:	lods   eax,DWORD PTR ds:[esi]
  422c7e:	rcl    BYTE PTR [ebp+0x432c7a74],cl
  422c84:	and    ah,BYTE PTR [edi+0x361686fb]
  422c8a:	fcom   DWORD PTR [ecx]
  422c8c:	lahf   
  422c8d:	cli    
  422c8e:	(bad)  ds:0x5155b5e2
  422c94:	push   eax
  422c95:	rcr    BYTE PTR [esi],0x3c
  422c98:	mov    bl,0x32
  422c9a:	imul   bl
  422c9c:	xchg   edi,eax
  422c9d:	dec    ebx
  422c9e:	jnp    0x422d0a
  422ca0:	loope  0x422cd1
  422ca2:	sti    
  422ca3:	jo     0x422c87
  422ca5:	and    bh,BYTE PTR [esi+eax*4+0x4c1047f8]
  422cac:	cmp    BYTE PTR [edi],0x6b
  422caf:	les    eax,FWORD PTR [ecx+0x3d2e37c2]
  422cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb6:	adc    al,0x6d
  422cb8:	inc    edi
  422cb9:	sub    BYTE PTR [ecx+eiz*4+0x66867cd5],ah
  422cc0:	leave  
  422cc1:	aam    0x8a
  422cc3:	test   ebx,0xf6506de2
  422cc9:	or     ah,bh
  422ccb:	dec    edi
  422ccc:	rol    ebx,1
  422cce:	mov    ebp,0x89f11807
  422cd3:	stc    
  422cd4:	add    dl,BYTE PTR [ebx]
  422cd6:	jl     0x422d29
  422cd8:	mov    ch,0x3a
  422cda:	cmp    al,0xaa
  422cdc:	out    dx,al
  422cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cde:	les    esi,FWORD PTR [esi]
  422ce0:	push   edx
  422ce1:	pop    edi
  422ce2:	sub    al,0xb5
  422ce5:	jno    0x422cc5
  422ce7:	push   ecx
  422ce8:	(bad)  
  422ce9:	cdq    
  422cea:	xchg   esp,eax
  422ceb:	push   es
  422cec:	mov    edi,0xd5eedc62
  422cf1:	out    0xd8,al
  422cf3:	push   0xffffffe8
  422cf5:	jb     0x422c81
  422cf7:	ins    BYTE PTR es:[edi],dx
  422cf8:	mov    al,0x28
  422cfa:	rol    DWORD PTR [ebp+0x36],cl
  422cfd:	dec    ebp
  422cfe:	mov    ds:0x123af755,eax
  422d03:	test   al,0xaf
  422d05:	out    dx,al
  422d06:	fldlg2 
  422d08:	mov    DWORD PTR [ebp+edx*4-0x73],0x6679313
  422d10:	ins    BYTE PTR es:[edi],dx
  422d11:	add    eax,0x5d971090
  422d16:	lahf   
  422d17:	data16 and bh,BYTE PTR [eax+0x78]
  422d1b:	inc    ebx
  422d1c:	mov    edx,0x61d2e6d7
  422d21:	adc    eax,0x7473710e
  422d26:	push   ebx
  422d27:	dec    eax
  422d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d29:	jns    0x422cf4
  422d2b:	call   ecx
  422d2d:	call   0x9fac:0xba759ab2
  422d34:	ffreep st(7)
  422d36:	test   DWORD PTR [edi],edx
  422d38:	push   eax
  422d39:	xchg   edx,ebx
  422d3b:	ss mov edi,0x6f53c51e
  422d41:	cmp    dl,ch
  422d43:	in     eax,0x38
  422d45:	mov    dh,0x52
  422d47:	mov    ebx,0xfc09c545
  422d4c:	xchg   esp,eax
  422d4d:	gs push ds
  422d4f:	mov    ds:0x6bd3ca5e,eax
  422d54:	push   ebp
  422d55:	cmc    
  422d56:	lods   eax,DWORD PTR ds:[esi]
  422d57:	and    DWORD PTR [edx-0x4],edi
  422d5a:	add    cl,BYTE PTR [edx]
  422d5c:	xchg   edx,eax
  422d5d:	adc    eax,0xfe28c0a9
  422d62:	jmp    0xf2e2:0x539be6cd
  422d69:	mov    DWORD PTR [ebp-0x603ac354],ebp
  422d6f:	push   edx
  422d70:	ss mov ebx,0xa5ab83fe
  422d76:	inc    esi
  422d77:	ins    BYTE PTR es:[edi],dx
  422d78:	push   0x3b2036eb
  422d7d:	push   cs
  422d7e:	fcom   QWORD PTR [eax]
  422d80:	(bad)  
  422d81:	mov    DWORD PTR es:[ebp-0x64cedf79],ebp
  422d88:	pop    ds
  422d89:	push   0xfffffff9
  422d8b:	inc    esp
  422d8c:	pusha  
  422d8d:	add    bl,ah
  422d8f:	push   ss
  422d90:	repnz dec eax
  422d92:	mov    bh,0x87
  422d94:	rcl    ecx,cl
  422d96:	and    eax,0x9863cdd5
  422d9b:	fdivr  DWORD PTR [eax]
  422d9d:	fwait
  422d9e:	mov    bh,0x8
  422da0:	jp     0x422d43
  422da2:	or     dh,BYTE PTR [edi-0x6b]
  422da5:	pop    ebp
  422da6:	out    0xe1,al
  422da8:	jmp    0x422d37
  422daa:	dec    edx
  422dab:	jg     0x422d50
  422dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dae:	fcmovnbe st,st(6)
  422db0:	adc    edi,ecx
  422db2:	jecxz  0x422db0
  422db4:	mov    esp,0x7bdc901b
  422db9:	push   esi
  422dba:	add    DWORD PTR [edi+0x5d],ecx
  422dbd:	ret    0x764e
  422dc0:	aaa    
  422dc1:	cdq    
  422dc2:	mov    al,ds:0x8a4dc039
  422dc7:	ret    
  422dc8:	mov    ds:0x39f48a3b,eax
  422dce:	aaa    
  422dcf:	mov    cs,WORD PTR [eax+0x434e85de]
  422dd5:	inc    esp
  422dd6:	sub    BYTE PTR [ecx-0x1d769e7d],dl
  422ddc:	mov    cl,0x64
  422dde:	lea    eax,[eax+0x1d4a73c6]
  422de4:	mov    eax,0x20ffcce4
  422de9:	adc    bh,BYTE PTR [ecx]
  422deb:	xor    DWORD PTR [eax],eax
  422ded:	cmp    eax,0x9ea7afdc
  422df2:	sub    ebx,DWORD PTR [edi+0x58e66b52]
  422df8:	rol    BYTE PTR [eax],0x0
  422dfb:	add    BYTE PTR [ebp-0x4c],ah
  422dfe:	sbb    dh,bl
  422e00:	fsin   
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	idiv   al
  422e09:	cli    
  422e0a:	call   0x8500:0x1a88469
  422e11:	add    al,BYTE PTR [eax]
  422e13:	add    ch,dh
  422e15:	push   esp
  422e16:	js     0x422e70
  422e18:	shr    DWORD PTR [edi-0x3cc8fb54],0xb8
  422e1f:	mov    bh,0xa9
  422e21:	repz shl BYTE PTR [ebx-0x2a],cl
  422e25:	xchg   edx,eax
  422e26:	aas    
  422e27:	jmp    0xabec63a6
  422e2c:	imul   esi,DWORD PTR [esi+0x33],0x809c05a
  422e33:	stos   DWORD PTR es:[edi],eax
  422e34:	popa   
  422e35:	fs mov dh,0xf4
  422e38:	dec    eax
  422e39:	fnstcw WORD PTR ds:0x9e843ab1
  422e3f:	and    DWORD PTR [ebx],edi
  422e41:	in     al,dx
  422e42:	and    DWORD PTR [ebp-0x1e46c906],eax
  422e48:	cmp    ecx,DWORD PTR [edx-0x76]
  422e4b:	pop    ds
  422e4c:	ins    DWORD PTR es:[edi],dx
  422e4d:	stos   BYTE PTR es:[edi],al
  422e4e:	mov    ebp,0x9f4c2a2e
  422e53:	mov    bh,0xae
  422e55:	mov    bh,0x58
  422e57:	xor    DWORD PTR [ebp-0x40d8e4a1],edx
  422e5d:	ins    BYTE PTR es:[edi],dx
  422e5e:	fisttp QWORD PTR [eax]
  422e60:	mov    edi,0x2dbf2f05
  422e65:	sub    bl,BYTE PTR [ecx]
  422e67:	mov    WORD PTR [edi],gs
  422e69:	push   0x8f028f3e
  422e6e:	adc    bh,BYTE PTR [eax+0x56]
  422e71:	push   edi
  422e72:	repnz adc BYTE PTR [ebx+0x27],0x99
  422e77:	fucom  st(7)
  422e79:	bnd jmp 0x422e5d
  422e7c:	test   eax,0xc0c8a6a1
  422e81:	cs nop
  422e83:	or     eax,0x72c34ca8
  422e88:	out    0x6d,eax
  422e8a:	sar    al,cl
  422e8c:	push   edi
  422e8d:	xchg   edx,eax
  422e8e:	test   bl,ch
  422e90:	call   0xa1a0:0x48dec73b
  422e97:	inc    ecx
  422e98:	imul   ecx,DWORD PTR [esi+0x58],0x8b312396
  422e9f:	mov    dh,0xa4
  422ea1:	mov    esi,0xabfbda84
  422ea6:	rcr    BYTE PTR [eax-0x18],0xd9
  422eaa:	pop    ebx
  422eab:	xchg   edi,eax
  422eac:	outs   dx,DWORD PTR ds:[esi]
  422ead:	jge    0x422e54
  422eaf:	js     0x422f26
  422eb1:	and    DWORD PTR [esi+eiz*8],edx
  422eb4:	dec    ecx
  422eb5:	call   0x26bf:0xd036
  422ebb:	pop    ds
  422ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ebd:	xchg   ecx,eax
  422ebe:	mov    ebx,0x623fb6cf
  422ec3:	inc    ecx
  422ec5:	adc    DWORD PTR [esi],edx
  422ec7:	enter  0x37a9,0x5a
  422ecb:	or     BYTE PTR [edx],0x1f
  422ece:	mov    ds:0x91c890c0,eax
  422ed3:	push   edx
  422ed4:	nop
  422ed5:	cmp    BYTE PTR [ebx],ch
  422ed7:	and    ch,BYTE PTR [edi-0x35]
  422eda:	lea    eax,[edx-0x29860e10]
  422ee0:	hlt    
  422ee1:	mov    bh,0x85
  422ee3:	out    0xaf,al
  422ee5:	xor    esp,edx
  422ee7:	mov    fs,WORD PTR [ecx]
  422ee9:	aas    
  422eea:	pop    ss
  422eeb:	pop    ebp
  422eec:	clc    
  422eed:	mov    dh,0x56
  422eef:	pusha  
  422ef0:	mov    bl,0x1f
  422ef2:	fsubr  DWORD PTR [ecx+0x34caf9cd]
  422ef8:	pop    ecx
  422ef9:	das    
  422efa:	ret    0x91ca
  422efd:	mov    cl,0xfa
  422eff:	fcom   QWORD PTR [ecx-0x4be3d0ba]
  422f05:	xor    DWORD PTR [ecx+0x6d],ebx
  422f08:	iret   
  422f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f0a:	pop    edx
  422f0b:	mov    al,ds:0x535e700c
  422f10:	sbb    al,0x97
  422f12:	arpl   bx,bp
  422f14:	and    edx,DWORD PTR [ebx+0x5b]
  422f17:	mul    BYTE PTR [eax+eax*1-0x30be636d]
  422f1e:	test   DWORD PTR gs:[eax-0x573feb83],eax
  422f25:	sub    DWORD PTR [ebp+0x41],edx
  422f28:	test   al,0x9e
  422f2a:	xchg   ecx,eax
  422f2b:	scas   eax,DWORD PTR es:[edi]
  422f2c:	aad    0x6c
  422f2e:	sbb    bh,BYTE PTR [ebx-0x27]
  422f31:	sbb    DWORD PTR [ecx+0x44],esp
  422f34:	into   
  422f35:	adc    al,0x7b
  422f37:	xchg   ecx,eax
  422f38:	mov    ecx,0x8104d944
  422f3d:	dec    esp
  422f3e:	and    eax,0x6bdf0190
  422f43:	mov    ebp,0xfbfeffff
  422f48:	(bad)  
  422f49:	jge    0x422ef4
  422f4b:	inc    ebx
  422f4c:	add    eax,0x95e5102d
  422f51:	sbb    cl,BYTE PTR ds:0xe2b73908
  422f57:	cdq    
  422f58:	das    
  422f59:	xchg   ebx,eax
  422f5a:	jno    0x422f65
  422f5c:	das    
  422f5d:	and    DWORD PTR [ecx+0x5e],eax
  422f60:	shl    cl,cl
  422f62:	cmp    DWORD PTR [esi-0x56],esi
  422f65:	or     BYTE PTR [edx-0x31],dh
  422f68:	cmc    
  422f69:	pop    es
  422f6a:	pop    ds
  422f6b:	lods   al,BYTE PTR ds:[esi]
  422f6c:	sub    al,0x3f
  422f6e:	pop    ebp
  422f6f:	mov    fs,ecx
  422f71:	cli    
  422f72:	std    
  422f73:	inc    edx
  422f74:	jg     0x422fdf
  422f76:	mov    ds:0x24a6f35f,al
  422f7b:	dec    esi
  422f7c:	mov    ds:0xebb02f3c,al
  422f81:	stos   DWORD PTR es:[edi],eax
  422f82:	iret   
  422f83:	jb     0x422fbb
  422f85:	sub    esi,esp
  422f87:	adc    DWORD PTR [edi-0x5e],ebx
  422f8a:	shl    DWORD PTR [ebx-0x17],cl
  422f8d:	aaa    
  422f8e:	scas   al,BYTE PTR es:[edi]
  422f8f:	imul   DWORD PTR [eax+0x14]
  422f92:	mov    ds:0x13239226,eax
  422f97:	pop    ss
  422f98:	inc    esp
  422f99:	loopne 0x422fd1
  422f9b:	fsub   st,st(5)
  422f9d:	push   ss
  422f9e:	adc    ecx,DWORD PTR [edx-0x5e]
  422fa1:	mov    ebx,DWORD PTR [eax+edi*4-0x2d]
  422fa5:	scas   al,BYTE PTR es:[edi]
  422fa6:	adc    eax,0x173ce2fe
  422fab:	jle    0x423025
  422fad:	push   ebp
  422fae:	adc    edi,DWORD PTR [ebp-0x57b36c8d]
  422fb4:	mov    ch,0x8b
  422fb6:	jns    0x423017
  422fb8:	call   0xe990:0x74df1df1
  422fbf:	cmc    
  422fc0:	outs   dx,DWORD PTR ds:[esi]
  422fc1:	inc    esi
  422fc2:	nop
  422fc3:	pop    es
  422fc4:	retf   0xaee4
  422fc7:	mov    al,ds:0x5b10ac3f
  422fcc:	sti    
  422fcd:	fsub   QWORD PTR [ebp+ecx*8+0xf3c0cfa]
  422fd4:	repz stc 
  422fd6:	xchg   edx,eax
  422fd7:	push   esi
  422fd8:	push   edx
  422fd9:	icebp  
  422fda:	inc    eax
  422fdb:	test   DWORD PTR [ebx],edi
  422fdd:	sbb    eax,0x841edf4c
  422fe2:	out    dx,al
  422fe3:	mov    ebp,0x76ad3e96
  422fe8:	sbb    BYTE PTR gs:[ebp+0xa],0xe6
  422fed:	cmc    
  422fee:	js     0x423018
  422ff0:	mov    DWORD PTR [edi-0x43ab8150],edi
  422ff6:	inc    ecx
  422ff7:	cmp    eax,DWORD PTR [edi]
  422ff9:	pop    ebx
  422ffa:	jle    0x423013
  422ffc:	jp     0x422f83
  422ffe:	sbb    DWORD PTR [eax],0xf3910b2b
  423004:	jl     0x423000
  423006:	mov    dl,0x66
  423008:	or     DWORD PTR [edx-0x24],ebx
  42300b:	jge    0x423056
  42300d:	scas   eax,DWORD PTR es:[edi]
  42300e:	xor    cl,BYTE PTR [esi]
  423010:	or     esi,DWORD PTR [edx+0x44ffa38d]
  423016:	jbe    0x423004
  423018:	xor    al,0xa4
  42301a:	add    BYTE PTR [edx],dl
  42301c:	iret   
  42301d:	sub    al,0x4f
  42301f:	cwde   
  423020:	jmp    0xc2f798f7
  423025:	mov    dl,0x81
  423027:	fmul   st(6),st
  423029:	mov    edx,DWORD PTR [eax+0x7b8e717b]
  42302f:	sub    bl,BYTE PTR [ebp+0x68]
  423032:	mov    ebx,0xa8bc89a6
  423037:	mov    bl,0x14
  423039:	leave  
  42303a:	adc    BYTE PTR [ebx],cl
  42303c:	xchg   ebx,eax
  42303d:	jbe    0x42302f
  42303f:	jle    0x422fc8
  423041:	out    dx,eax
  423042:	push   eax
  423043:	ss cwde 
  423045:	jmp    0x42301a
  423047:	jg     0x423012
  423049:	inc    edx
  42304a:	cmp    edi,DWORD PTR [ebp-0x6d]
  42304d:	jne    0x42308a
  42304f:	jo     0x42306c
  423051:	popf   
  423052:	or     DWORD PTR [ebp+0xe],ebp
  423055:	in     eax,dx
  423056:	jo     0x423029
  423058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42305b:	cmp    al,0x52
  42305d:	cmp    al,0xf4
  42305f:	icebp  
  423060:	sar    ebp,1
  423062:	ret    0xadea
  423065:	(bad)  
  423066:	pcmpeqd mm0,mm1
  423069:	loope  0x42306e
  42306b:	jg     0x423026
  42306d:	(bad)  
  42306f:	cld    
  423070:	dec    ebp
  423071:	(bad)  
  423072:	pcmpgtd mm3,QWORD PTR [edi-0x1e927154]
  423079:	inc    ebp
  42307a:	ins    BYTE PTR es:[edi],dx
  42307b:	hlt    
  42307c:	dec    esp
  42307d:	mov    bh,0xdf
  42307f:	xchg   ecx,eax
  423080:	call   0xb13b:0xd56226aa
  423087:	loopne 0x4230b8
  423089:	and    ah,BYTE PTR [ecx+0x71]
  42308c:	fist   DWORD PTR [eax+0x2f]
  42308f:	adc    eax,0x1f769340
  423094:	mov    ds:0xb57ca0bd,al
  423099:	add    BYTE PTR [eax],al
  42309b:	add    BYTE PTR [edx],dl
  42309d:	fsub   DWORD PTR [ebx+0x72]
  4230a0:	jmp    0x42309d
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx-0x55227709]
  4230aa:	call   0x1ed39e8
  4230af:	add    BYTE PTR [ebp-0x1afffffe],al
  4230b5:	xchg   esi,eax
  4230b6:	addr16 dec esp
  4230b8:	adc    BYTE PTR [ebx+0x4409b908],ch
  4230be:	dec    ebx
  4230bf:	icebp  
  4230c0:	dec    esi
  4230c1:	iret   
  4230c2:	(bad)  
  4230c3:	push   edi
  4230c4:	sti    
  4230c5:	push   esp
  4230c6:	xchg   ebp,eax
  4230c7:	adc    al,0x5a
  4230c9:	mov    eax,ds:0xe6a1c2c
  4230ce:	dec    ebx
  4230cf:	or     edi,DWORD PTR [edi]
  4230d1:	scas   eax,DWORD PTR es:[edi]
  4230d2:	rcl    BYTE PTR [eax-0x539ae16f],1
  4230d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230d9:	lock and al,0x1c
  4230dc:	mov    al,0xe0
  4230de:	dec    ebp
  4230df:	push   edx
  4230e0:	mov    cl,0x93
  4230e2:	adc    ebx,DWORD PTR [esi-0x58359ca]
  4230e8:	adc    DWORD PTR [ebx-0x73],edx
  4230eb:	pop    esp
  4230ec:	jmp    0x9fb7:0xb5aa6681
  4230f3:	mov    ds:0xbbd00b6f,al
  4230f8:	test   BYTE PTR [esi+0x41],bh
  4230fb:	(bad)  
  4230fc:	adc    ch,BYTE PTR [ebp+0x15]
  4230ff:	add    eax,ebx
  423101:	std    
  423102:	jno    0x42311d
  423104:	dec    eax
  423105:	test   al,0x98
  423107:	test   eax,0x1a670775
  42310c:	add    BYTE PTR ds:0x710efec6,dh
  423112:	sbb    ebp,DWORD PTR [esi]
  423114:	lahf   
  423115:	add    BYTE PTR [ebp+0x42ad3c52],ch
  42311b:	xchg   DWORD PTR [esi+eiz*4],ebp
  42311e:	mov    dh,0x1c
  423120:	push   ecx
  423121:	adc    esi,DWORD PTR [esi-0x2e]
  423124:	shr    BYTE PTR ds:0xcc859668,1
  42312a:	jmp    0x24a1:0x7f54d030
  423131:	shl    esp,1
  423133:	popf   
  423134:	sar    DWORD PTR [ebx+0x512cee9d],1
  42313a:	and    eax,0x16e94783
  42313f:	jmp    0x3032:0x13801b1d
  423146:	hlt    
  423147:	mov    esi,0x734f4c4e
  42314c:	dec    esp
  42314d:	pusha  
  42314e:	mov    BYTE PTR [edx],ch
  423150:	out    0x69,al
  423152:	or     eax,0xab0aec4b
  423157:	adc    BYTE PTR [edi-0x7d],dh
  42315a:	lea    esi,[edx-0x5bdaa0e3]
  423160:	adc    bh,BYTE PTR [ecx-0x5d6022bb]
  423166:	pop    eax
  423167:	ret    
  423168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423169:	out    dx,eax
  42316a:	inc    ecx
  42316b:	js     0x423158
  42316d:	inc    ebx
  42316e:	mov    edi,0xa1297c05
  423173:	adc    ah,BYTE PTR [eax-0x390b3a6]
  423179:	xor    BYTE PTR [ebx+eax*8-0x24],0x2b
  42317e:	gs jnp 0x423119
  423181:	mov    eax,0x9c6da369
  423186:	pushf  
  423187:	jbe    0x42311b
  423189:	hlt    
  42318a:	shr    DWORD PTR [ebp+eax*8+0x40],0x7d
  42318f:	mov    BYTE PTR [esi+0x8],ch
  423192:	mov    WORD PTR [ebp-0x1d],gs
  423195:	aad    0xe2
  423197:	retf   
  423198:	mov    eax,esi
  42319a:	retf   0xc9cf
  42319d:	push   esp
  42319e:	ret    
  42319f:	xor    al,0x19
  4231a1:	cmc    
  4231a2:	out    0xfe,eax
  4231a4:	clc    
  4231a5:	sub    ah,al
  4231a7:	sub    BYTE PTR ds:0xea5986fb,dl
  4231ad:	pop    ds
  4231ae:	imul   edx,DWORD PTR [ebx-0x7c],0x4a
  4231b2:	loope  0x423164
  4231b4:	cmp    DWORD PTR [ecx+0xf],esi
  4231b7:	popa   
  4231b8:	pop    ss
  4231b9:	mov    ah,0xcf
  4231bb:	(bad)  
  4231bd:	(bad)  
  4231be:	adc    dh,BYTE PTR [edi+0x45e0123]
  4231c4:	fisubr DWORD PTR [esi]
  4231c6:	imul   ebx,ecx,0xfffffff2
  4231c9:	(bad)  
  4231ca:	dec    eax
  4231cb:	scas   eax,DWORD PTR es:[edi]
  4231cc:	add    bh,BYTE PTR [ebx+0x3f2a7fde]
  4231d2:	ins    DWORD PTR es:[edi],dx
  4231d3:	push   esi
  4231d4:	test   BYTE PTR ds:0x1ad5b567,cl
  4231da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231db:	enter  0xb47e,0xec
  4231df:	gs inc ebx
  4231e1:	adc    edi,esp
  4231e3:	add    al,0x51
  4231e5:	(bad)  
  4231e6:	call   0x5462df4e
  4231eb:	addr16 cdq 
  4231ed:	mov    ebx,0x6e091046
  4231f2:	add    al,0xc0
  4231f4:	into   
  4231f5:	pop    es
  4231f6:	popa   
  4231f7:	int    0x3c
  4231f9:	mov    edi,0x749e84ed
  4231fe:	add    ah,ah
  423200:	mov    ch,0x4a
  423202:	fsubr  QWORD PTR [ecx-0x400698ef]
  423208:	inc    edx
  423209:	sbb    eax,0xd639776f
  42320e:	in     al,dx
  42320f:	lock dec eax
  423211:	jbe    0x42320f
  423213:	loop   0x423276
  423215:	out    0x2f,eax
  423217:	loop   0x4231f1
  423219:	and    al,0x97
  42321b:	into   
  42321c:	mov    dh,0x6a
  42321e:	addr16 jg 0x4231ec
  423221:	inc    esp
  423222:	mov    ah,0xb3
  423224:	lods   al,BYTE PTR ds:[esi]
  423225:	mov    bl,0x70
  423227:	sbb    esp,esp
  423229:	pop    ebp
  42322a:	(bad)  
  42322b:	jp     0x42325a
  42322d:	in     al,dx
  42322e:	inc    edx
  42322f:	mov    ebx,ss
  423231:	sbb    bl,BYTE PTR [edi-0xd4760aa]
  423237:	je     0x4232a8
  423239:	in     al,0xe8
  42323b:	call   0x9322:0x93e1be03
  423242:	jl     0x423260
  423244:	adc    bl,ah
  423246:	inc    BYTE PTR [edi]
  423248:	dec    ebp
  423249:	mov    al,ds:0xf52df5f5
  42324e:	adc    cl,cl
  423250:	or     DWORD PTR ds:0xecec8281,0x65840709
  42325a:	js     0x423276
  42325c:	or     eax,0x6820521c
  423261:	bound  ebp,QWORD PTR ds:0x3b7976bc
  423267:	retf   
  423268:	aam    0x1c
  42326a:	aam    0x14
  42326c:	outs   dx,DWORD PTR ds:[esi]
  42326d:	pop    edi
  42326e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42326f:	xor    BYTE PTR [eax],bl
  423271:	add    al,0x3d
  423273:	mov    cs,edi
  423275:	mov    al,ds:0xa053ca32
  42327a:	inc    eax
  42327b:	pop    edi
  42327c:	out    dx,eax
  42327d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42327e:	outs   dx,BYTE PTR ds:[esi]
  42327f:	mov    bh,0x74
  423281:	popa   
  423282:	sub    al,0x4c
  423284:	das    
  423285:	mov    cs,esp
  423287:	out    0xc5,eax
  423289:	imul   esi,eax,0x372345d2
  42328f:	mov    ds:0xd305ca00,al
  423294:	ret    0x182d
  423297:	ret    
  423298:	xor    edx,eax
  42329a:	ret    
  42329b:	sbb    DWORD PTR [esi],edi
  42329d:	test   BYTE PTR [ebx+eax*4+0x5a],dl
  4232a1:	fwait
  4232a2:	std    
  4232a3:	jne    0x4232a2
  4232a5:	dec    DWORD PTR [esi]
  4232a7:	mov    eax,ds:0xc504bc37
  4232ac:	es data16 stc 
  4232af:	push   0xf03c0953
  4232b4:	lea    ebx,[edi]
  4232b6:	fcmovnu st,st(0)
  4232b8:	xchg   ebx,eax
  4232b9:	fmul   QWORD PTR [eax]
  4232bb:	lds    esi,FWORD PTR [edi+eiz*1-0x41d05df6]
  4232c2:	sbb    ebp,esi
  4232c4:	in     eax,dx
  4232c5:	xor    cl,bl
  4232c7:	imul   eax,DWORD PTR [eax+0x70],0x1e568fde
  4232ce:	rdtsc  
  4232d0:	fldenv [ecx+0x23138082]
  4232d6:	xchg   ecx,eax
  4232d7:	or     BYTE PTR [esi-0x479ace8f],ah
  4232dd:	pop    eax
  4232de:	pop    ebx
  4232df:	xchg   ecx,eax
  4232e0:	push   ebx
  4232e1:	mov    ebx,0x80899e1e
  4232e6:	in     al,0x46
  4232e8:	(bad)  
  4232e9:	xor    ebx,DWORD PTR [ebx-0x3e]
  4232ec:	jno    0x4232d4
  4232ee:	mov    BYTE PTR fs:[ebx-0x78c69d33],bh
  4232f5:	jg     0x4232b0
  4232f7:	es xchg edi,eax
  4232f9:	test   DWORD PTR [edi+0x6ec61d72],edx
  4232ff:	push   edx
  423300:	cli    
  423301:	das    
  423302:	test   al,0xbe
  423304:	frstor [esi]
  423306:	sbb    BYTE PTR [edi],0x1b
  423309:	and    BYTE PTR [esi+0x4606cf62],al
  42330f:	lea    esp,[esi]
  423311:	or     DWORD PTR [eax],ebx
  423313:	es out dx,al
  423315:	push   esi
  423316:	in     eax,0x6b
  423318:	sub    al,0x62
  42331a:	fsub   st(0),st
  42331c:	add    eax,0xe7dd9684
  423321:	sub    edx,esi
  423323:	aaa    
  423324:	or     eax,0xcb2ea854
  423329:	outs   dx,DWORD PTR ds:[esi]
  42332a:	inc    esp
  42332b:	daa    
  42332c:	call   0x15462db5
  423331:	pop    ds
  423332:	lods   al,BYTE PTR ds:[esi]
  423333:	or     al,0xf9
  423335:	rcl    BYTE PTR [eax-0x58],cl
  423338:	xchg   DWORD PTR [eax],eax
  42333a:	add    BYTE PTR [eax],al
  42333c:	push   cs
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x726d7643],edx
  423349:	add    eax,0x1ad8e98
  42334f:	add    BYTE PTR [ebp-0x71fffffe],al
  423355:	push   ebp
  423356:	addr16 jge 0x423300
  423359:	dec    BYTE PTR [esi+0x41]
  42335c:	pushf  
  42335d:	cdq    
  42335e:	fsub   st,st(0)
  423360:	jnp    0x4232e5
  423362:	(bad)  
  423363:	out    dx,al
  423364:	dec    esi
  423365:	push   edx
  423366:	lock pop ebx
  423368:	pop    ebx
  423369:	iret   
  42336a:	pop    edi
  42336b:	mov    edx,0x8b0ee662
  423370:	fdivr  QWORD PTR [edi-0x3f]
  423373:	bound  ebx,QWORD PTR [eax+0x7f5751a3]
  423379:	xchg   edx,eax
  42337a:	call   0x510e:0xa9e522b2
  423381:	inc    esi
  423382:	enter  0x8556,0x92
  423386:	sti    
  423387:	je     0x4233c0
  423389:	cmp    cl,cl
  42338b:	pop    ecx
  42338c:	xor    BYTE PTR [ebx],al
  42338e:	test   BYTE PTR [ecx+0x76],0x76
  423392:	push   eax
  423393:	mov    WORD PTR [edx*2-0x1ca653ab],?
  42339a:	fdiv   DWORD PTR [edx]
  42339c:	in     al,0x22
  42339e:	push   edx
  42339f:	mov    edi,0x56abf0c1
  4233a4:	test   eax,0x10686921
  4233a9:	xor    edx,DWORD PTR [ecx+edi*8-0x73128d46]
  4233b0:	mov    bl,0x5b
  4233b2:	mov    al,0xea
  4233b4:	add    edx,DWORD PTR [edx+ecx*1+0x5a]
  4233b8:	or     BYTE PTR [ecx-0x6d],0x5b
  4233bc:	in     al,0x4a
  4233be:	loopne 0x4233dd
  4233c0:	add    eax,0x34a9e1eb
  4233c5:	xor    al,0xa8
  4233c7:	xchg   esi,eax
  4233c8:	out    0xcd,al
  4233ca:	jno    0x4233c1
  4233cc:	push   ds
  4233cd:	pop    esp
  4233ce:	jo     0x423448
  4233d0:	int3   
  4233d1:	add    BYTE PTR [ecx],dh
  4233d3:	pop    esp
  4233d4:	sub    DWORD PTR [ebx+ebp*8],ebp
  4233d7:	int3   
  4233d8:	out    0x44,eax
  4233da:	in     al,dx
  4233db:	mov    ds:0xbb195d6a,eax
  4233e0:	ins    BYTE PTR es:[edi],dx
  4233e1:	addr16 mov ebp,0x1b2ebbb2
  4233e7:	sar    BYTE PTR [ebx],1
  4233e9:	xchg   DWORD PTR [ebp+0x7],ebx
  4233ec:	jne    0x42338f
  4233ee:	xlat   BYTE PTR ds:[ebx]
  4233ef:	dec    BYTE PTR [edi-0x57]
  4233f2:	jecxz  0x4233c4
  4233f4:	xor    esp,DWORD PTR [ebp-0x15]
  4233f7:	mov    ebx,0x2a4d9503
  4233fc:	out    0xf3,eax
  4233fe:	cld    
  4233ff:	jns    0x423465
  423401:	je     0x423409
  423403:	mov    ecx,0x60ed1e93
  423408:	aas    
  423409:	pop    edi
  42340a:	(bad)  
  42340b:	ds add eax,0x8f8476a4
  423411:	out    0x20,eax
  423413:	dec    BYTE PTR [eax+eax*8-0x74]
  423417:	into   
  423418:	mov    es,WORD PTR [ecx+0x10]
  42341b:	xchg   esp,eax
  42341c:	mov    eax,0x38eb1cc
  423421:	jne    0x4233d6
  423423:	pop    ss
  423424:	lods   al,BYTE PTR ds:[esi]
  423425:	cld    
  423426:	mov    al,ds:0x60824880
  42342b:	dec    esp
  42342c:	mov    dl,0x81
  42342e:	je     0x423462
  423430:	and    DWORD PTR [edi],esp
  423432:	cs inc esp
  423434:	sub    edx,DWORD PTR [ecx+0x3144a49a]
  42343a:	inc    esp
  42343b:	shl    DWORD PTR ds:0xbc2a180c,cl
  423441:	into   
  423442:	and    DWORD PTR [esi+eiz*8+0x1d],esi
  423446:	push   edx
  423447:	mov    edx,0xcd58b2a3
  42344c:	mov    ecx,0xc79712e9
  423451:	xchg   edi,eax
  423452:	lock adc dl,al
  423455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423456:	dec    esi
  423457:	adc    BYTE PTR [ecx],dl
  423459:	test   DWORD PTR [edx+0x21c69fda],ecx
  42345f:	xor    cl,BYTE PTR [ecx]
  423461:	rol    BYTE PTR [edx-0x51],0xfa
  423465:	push   edi
  423466:	in     al,0xe8
  423468:	mov    ds:0xf20cad4c,eax
  42346d:	push   0x275c89c6
  423472:	jne    0x423414
  423474:	outs   dx,DWORD PTR ds:[esi]
  423475:	repz mov eax,0x61e9dd7d
  42347b:	jae    0x4234aa
  42347d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42347e:	fdecstp 
  423480:	ret    0xb068
  423483:	jns    0x423418
  423485:	push   0xffffff9b
  423487:	rcl    BYTE PTR [edx+ebp*2+0x69247ec9],cl
  42348e:	mov    al,0x70
  423490:	mov    dh,0x6a
  423492:	lock xor bh,bl
  423495:	pop    ecx
  423496:	jne    0x4234d6
  423498:	xlat   BYTE PTR ds:[ebx]
  423499:	mov    ebp,0x13f735b7
  42349e:	sub    edx,ebp
  4234a0:	cmp    BYTE PTR [edx-0x4a],bh
  4234a3:	popa   
  4234a4:	mov    edx,DWORD PTR [edx]
  4234a6:	dec    bh
  4234a8:	sti    
  4234a9:	inc    esp
  4234aa:	fbstp  TBYTE PTR [ebx-0x15]
  4234ad:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4234af:	dec    esp
  4234b0:	mov    eax,ds:0x314f9825
  4234b5:	xchg   edi,eax
  4234b6:	push   cs
  4234b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234b8:	cld    
  4234b9:	push   ecx
  4234ba:	and    dh,BYTE PTR [edi-0x7c]
  4234bd:	rcr    BYTE PTR [ebx-0x4580fd7f],0xec
  4234c4:	inc    ecx
  4234c5:	mov    ebp,0xc26be6a1
  4234ca:	(bad)  
  4234cb:	shl    BYTE PTR [edi+0x20],1
  4234ce:	(bad)
  4234d2:	pandn  mm0,QWORD PTR [ebx+ebp*2+0x1876a24d]
  4234da:	out    dx,al
  4234db:	cdq    
  4234dc:	adc    dl,bl
  4234de:	shl    DWORD PTR [ebx+eax*8+0x1618e16f],cl
  4234e5:	out    dx,eax
  4234e6:	push   edx
  4234e7:	push   ebp
  4234e8:	in     eax,0x29
  4234ea:	in     eax,0xc8
  4234ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ed:	mov    al,ds:0xca08820a
  4234f2:	pop    ebp
  4234f3:	or     al,0x2b
  4234f5:	push   eax
  4234f6:	add    eax,0x84e35de9
  4234fb:	xor    DWORD PTR [eax],esp
  4234fd:	jne    0x423525
  4234ff:	loop   0x42357c
  423501:	cmp    eax,0x4d5ccdd8
  423506:	gs lock fstp QWORD PTR cs:[esp+ecx*2-0x1ef6a2b5]
  423510:	leave  
  423511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423512:	xor    edi,eax
  423514:	dec    esi
  423515:	cmp    al,0x88
  423517:	neg    dh
  423519:	lds    edi,FWORD PTR [ecx-0x14]
  42351c:	add    DWORD PTR [ecx-0x6],0xedbb0f7b
  423523:	adc    al,0xf5
  423525:	sbb    DWORD PTR [ecx-0x3759cd3f],edi
  42352b:	rol    DWORD PTR [ebp-0x73bc121a],0xb
  423532:	pop    ds
  423533:	pop    ss
  423534:	push   0x532e1a0d
  423539:	push   es
  42353a:	pop    DWORD PTR [ecx-0x5880a91d]
  423540:	or     DWORD PTR [eax],ebx
  423542:	sub    BYTE PTR [esi-0x7a],dl
  423545:	repnz (bad) 
  423547:	repnz dec esi
  423549:	xor    BYTE PTR [ebp+0xeb8b510],0x1c
  423550:	out    0x8b,eax
  423552:	retf   
  423553:	adc    DWORD PTR [edx+edi*2+0x29],edi
  423557:	data16 sub ch,BYTE PTR [bx+si-0x4b17]
  42355d:	or     eax,0x7cfb3ffa
  423562:	call   0xf02e:0xe283f82a
  423569:	fst    QWORD PTR [ebx+0x3164db6d]
  42356f:	sub    dl,bl
  423571:	push   ebx
  423572:	mov    al,0x3a
  423574:	retf   
  423575:	lock adc BYTE PTR [ecx+0x7b],ch
  423579:	ss fdiv st,st(7)
  42357c:	dec    esp
  42357d:	dec    esp
  42357e:	in     eax,0x33
  423580:	pop    ss
  423581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423582:	cs inc ebx
  423584:	push   ebx
  423585:	repz test eax,0x9c25cf3b
  42358b:	inc    edi
  42358c:	pop    eax
  42358d:	stc    
  42358e:	adc    bl,BYTE PTR [ebx+ebx*4]
  423591:	rol    DWORD PTR [esi-0x41],0x6f
  423595:	jno    0x423570
  423597:	std    
  423598:	ret    0x3259
  42359b:	sbb    edi,DWORD PTR [esi]
  42359d:	cmp    ebx,ebx
  42359f:	xchg   edi,eax
  4235a0:	addr16 jbe 0x4235b7
  4235a3:	fs jns 0x4235bb
  4235a6:	popf   
  4235a7:	jmp    0x4235a5
  4235a9:	mov    eax,ds:0xc4df520c
  4235ae:	xchg   ecx,eax
  4235af:	test   eax,0xb8892f8
  4235b4:	xor    al,0x13
  4235b6:	loope  0x4235b0
  4235b8:	inc    edi
  4235b9:	and    esi,DWORD PTR [edx]
  4235bb:	and    edx,DWORD PTR [ebp-0x5a]
  4235be:	push   cs
  4235bf:	sub    eax,0x77abe966
  4235c4:	(bad)  
  4235c5:	lea    esp,[ebx+0x214e77f2]
  4235cb:	arpl   cx,dx
  4235cd:	dec    edx
  4235ce:	aas    
  4235cf:	xchg   esi,eax
  4235d0:	cmp    ebp,DWORD PTR [eax+0x42b78812]
  4235d6:	jg     0x423644
  4235d8:	and    BYTE PTR [eax],al
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0x14335c1d
  4235eb:	inc    edx
  4235ec:	adc    esi,DWORD PTR [eax+0x2850001]
  4235f2:	add    BYTE PTR [eax],al
  4235f4:	(bad)  
  4235f5:	icebp  
  4235f6:	dec    ebx
  4235f7:	mov    cl,0x2e
  4235f9:	xchg   esp,ebp
  4235fb:	sbb    BYTE PTR [ebx],bl
  4235fd:	and    esi,edi
  4235ff:	retf   0xeedd
  423602:	ins    DWORD PTR es:[edi],dx
  423603:	mov    BYTE PTR [ebx+eax*2-0x29],al
  423607:	xor    eax,0x92d77465
  42360c:	xor    ah,BYTE PTR [edi-0x591fdecb]
  423612:	sub    al,0x99
  423614:	xor    dl,cl
  423616:	xchg   ebx,eax
  423617:	add    eax,0xb5a50376
  42361c:	call   0xdfa1a8de
  423621:	and    cl,BYTE PTR [eax+0x477fab2c]
  423627:	mov    BYTE PTR [esi-0x6bde3fb1],0x23
  42362e:	gs addr16 jmp 0x4235e0
  423632:	mov    al,ds:0xc63f7f5
  423637:	mov    dh,0x76
  423639:	iret   
  42363a:	mov    al,0x28
  42363c:	sbb    eax,0xd36639c2
  423641:	xor    ebp,DWORD PTR [ebx]
  423643:	sahf   
  423644:	sub    esi,esp
  423646:	lds    edi,FWORD PTR [ebx]
  423648:	ficomp DWORD PTR [eax]
  42364a:	fsub   st,st(5)
  42364c:	jmp    0x4236b7
  42364e:	mov    edx,0xa5a87684
  423653:	and    eax,0x550d24cf
  423658:	test   al,0xc1
  42365a:	xchg   ebp,eax
  42365b:	scas   eax,DWORD PTR es:[edi]
  42365c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365d:	fsubr  st(2),st
  42365f:	push   ecx
  423660:	or     edi,ebp
  423662:	stos   BYTE PTR es:[edi],al
  423663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423664:	inc    edi
  423665:	inc    esi
  423666:	sub    BYTE PTR [edx],0x79
  423669:	lods   eax,DWORD PTR ds:[esi]
  42366a:	scas   eax,DWORD PTR es:[edi]
  42366b:	pop    ebx
  42366c:	mov    ebp,0x4b30b508
  423671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423672:	jg     0x423684
  423674:	and    edx,ecx
  423676:	ror    BYTE PTR [ebp-0x71],0xb
  42367a:	mov    dh,0x1e
  42367c:	ins    BYTE PTR es:[edi],dx
  42367d:	inc    edi
  42367e:	and    BYTE PTR es:[edx-0x1588cb78],dl
  423685:	xchg   ebp,eax
  423686:	and    ebp,DWORD PTR [edx-0x53289d9f]
  42368c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42368d:	jnp    0x42368f
  42368f:	loopne 0x42366d
  423691:	and    DWORD PTR [ebx+0x1d75ef1a],ebx
  423697:	xchg   ebp,eax
  423698:	retf   
  423699:	fimul  WORD PTR [edi-0x13]
  42369c:	fstp   TBYTE PTR [edx]
  42369e:	repz repz call FWORD PTR [ebx+0x67]
  4236a3:	jo     0x4236a0
  4236a5:	push   eax
  4236a6:	jl     0x4236d9
  4236a8:	push   es
  4236a9:	(bad)  [ebx]
  4236ab:	adc    al,0xb6
  4236ad:	xchg   ecx,eax
  4236ae:	in     al,dx
  4236af:	or     DWORD PTR [eax],0x1887a6a5
  4236b5:	push   ss
  4236b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b7:	sub    DWORD PTR ds:0xa74d423,0x32712b73
  4236c1:	jae    0x4236bf
  4236c3:	(bad)
  4236c7:	leave  
  4236c8:	and    al,0x58
  4236ca:	out    0xd9,eax
  4236cc:	mov    al,0x94
  4236ce:	xor    ebp,DWORD PTR [edi]
  4236d0:	xchg   eax,ecx
  4236d2:	xchg   DWORD PTR [ecx+0x32245111],edx
  4236d8:	sti    
  4236d9:	mov    BYTE PTR [edx+0x1c],al
  4236dc:	pop    esi
  4236dd:	div    BYTE PTR [ebp+0x4f]
  4236e0:	pop    ebx
  4236e1:	in     eax,0xc5
  4236e3:	add    BYTE PTR [ecx],al
  4236e5:	xor    al,BYTE PTR [edi+0x345acdb5]
  4236eb:	test   al,0xa6
  4236ed:	add    eax,0x912dac03
  4236f2:	mov    bh,0xd2
  4236f4:	(bad)  
  4236f6:	mov    cl,0x4c
  4236f8:	popa   
  4236f9:	mov    cl,0x75
  4236fb:	sbb    eax,ecx
  4236fd:	in     eax,dx
  4236fe:	sub    BYTE PTR [eax+0x1b],cl
  423701:	xchg   ecx,eax
  423702:	inc    eax
  423703:	jnp    0x4236f6
  423705:	push   ecx
  423706:	mov    eax,ebp
  423708:	inc    ebp
  423709:	shr    DWORD PTR [edi-0x53],0x85
  42370d:	xor    edi,DWORD PTR [eax]
  42370f:	icebp  
  423710:	jnp    0x4236b6
  423712:	iret   
  423713:	sbb    BYTE PTR [edx-0xd],cl
  423716:	pop    eax
  423717:	inc    ebx
  423718:	mov    al,0x2d
  42371a:	mov    ss,esp
  42371c:	out    0xc5,al
  42371e:	(bad)  
  42371f:	jmp    0x2f5d:0x52c07ff0
  423726:	ins    BYTE PTR es:[edi],dx
  423727:	mov    ds:0x58d3b2f8,al
  42372c:	sbb    eax,0x9b0f72cc
  423731:	call   0x33775520
  423736:	mov    bl,0x73
  423738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42373a:	fnstenv [edx+0x43]
  42373d:	repz jle 0x423768
  423740:	jg     0x423791
  423742:	or     al,dh
  423744:	and    eax,0x7b2882bc
  423749:	dec    ebp
  42374a:	(bad)  
  42374b:	push   edi
  42374c:	and    al,dh
  42374e:	cdq    
  42374f:	out    dx,al
  423750:	leave  
  423751:	pop    ebx
  423752:	and    eax,0x83ef5117
  423757:	push   ecx
  423758:	leave  
  423759:	jmp    0x488644fd
  42375e:	mov    bh,0x4b
  423760:	aad    0xfe
  423762:	pop    es
  423763:	pop    esp
  423764:	jge    0x423760
  423766:	or     dl,dh
  423768:	(bad)
  42376b:	lds    edi,FWORD PTR [ecx-0x533be0a3]
  423771:	pop    esp
  423772:	fs das 
  423774:	sbb    BYTE PTR [ebx+0x1],cl
  423777:	out    dx,eax
  423778:	pusha  
  423779:	push   ss
  42377a:	and    BYTE PTR [edi+0x6669a825],bh
  423780:	dec    esi
  423781:	int3   
  423782:	xor    bh,dh
  423784:	sub    cl,BYTE PTR [edi]
  423786:	jb     0x42374a
  423788:	rcr    DWORD PTR [edi-0x4c6c00ef],cl
  42378e:	add    al,0xe
  423790:	push   es
  423791:	arpl   bp,ax
  423793:	gs out 0xc6,eax
  423796:	adc    al,0xb6
  423798:	push   0x4dfc18cc
  42379d:	cmc    
  42379e:	pop    DWORD PTR [ebx+0x544f508]
  4237a4:	sbb    esp,eax
  4237a6:	arpl   di,bx
  4237a8:	stos   BYTE PTR es:[edi],al
  4237a9:	clc    
  4237aa:	xor    eax,0xe4a09384
  4237af:	dec    ecx
  4237b0:	mov    ds:0xfeba6d06,eax
  4237b5:	inc    ecx
  4237b6:	mul    esp
  4237b8:	loop   0x4237f9
  4237ba:	pushf  
  4237bb:	dec    ebx
  4237bc:	fcomi  st,st(2)
  4237be:	push   0x68252045
  4237c3:	pushf  
  4237c4:	inc    ebp
  4237c5:	lods   al,BYTE PTR ds:[esi]
  4237c6:	sub    eax,0x3715dadc
  4237cb:	call   0x4007:0x4f6a2545
  4237d2:	sbb    BYTE PTR [ebx-0x30b40d9],bh
  4237d8:	mov    cl,0x37
  4237da:	jb     0x4237de
  4237dc:	cmp    edi,DWORD PTR [ebp-0xa]
  4237df:	icebp  
  4237e0:	sub    DWORD PTR [ebp-0x1a9c95ad],ebx
  4237e6:	ret    
  4237e7:	imul   esp,DWORD PTR [ebp-0x177e95cd],0xffffffa4
  4237ee:	bound  esp,QWORD PTR [ecx-0x11df6578]
  4237f4:	pop    esp
  4237f5:	leave  
  4237f6:	pop    ds
  4237f7:	xchg   esi,eax
  4237f8:	push   ebx
  4237f9:	xchg   BYTE PTR [ecx-0x3c],dh
  4237fc:	dec    edx
  4237fd:	jl     0x4237fd
  4237ff:	int    0x33
  423801:	mov    ebp,0xba511b4d
  423806:	inc    ebx
  423807:	repz mov ds:0xd89c2dba,eax
  42380d:	jae    0x423846
  42380f:	add    eax,DWORD PTR [esi+0x6712485d]
  423815:	test   edx,ebp
  423817:	in     eax,0x28
  423819:	lea    ebp,ds:[ebx]
  42381c:	scas   eax,DWORD PTR es:[edi]
  42381d:	rdtsc  
  42381f:	fisttp QWORD PTR [eax+0xc]
  423822:	cmp    cl,BYTE PTR [ebx]
  423824:	xchg   esi,eax
  423825:	popa   
  423826:	outs   dx,BYTE PTR ds:[esi]
  423827:	and    al,0x30
  423829:	mov    esp,0x5cec87b9
  42382e:	aad    0x98
  423830:	ret    
  423831:	pop    ebp
  423832:	mov    bh,0xed
  423834:	pop    edi
  423835:	mov    esp,0xf47cf0f7
  42383a:	adc    al,BYTE PTR [ecx-0x2834d6d6]
  423840:	mov    ecx,0x51a36057
  423845:	shl    BYTE PTR ss:[esi],1
  423848:	add    al,dl
  42384a:	icebp  
  42384b:	call   DWORD PTR [eax-0x35]
  42384e:	jg     0x4237ed
  423850:	xor    DWORD PTR [ecx+0x1e77c9b3],0xffffffb1
  423857:	inc    edi
  423858:	shl    DWORD PTR [ebx+0x7ee08b8a],1
  42385e:	fiadd  DWORD PTR [ecx+0x32b6ead1]
  423864:	push   ss
  423865:	out    dx,eax
  423866:	adc    DWORD PTR [ebp-0x45ce4597],0xcd828505
  423870:	mov    dl,0x3
  423872:	fwait
  423873:	mov    ch,0xb7
  423875:	cmp    BYTE PTR [esi],al
  423877:	mov    cl,0x20
  423879:	add    BYTE PTR [eax],al
  42387b:	add    BYTE PTR [ebx+0x55],al
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x50bca93d]
  423889:	cmp    al,0xed
  42388b:	xchg   edx,eax
  42388c:	cwde   
  42388d:	mov    dl,0x1
  42388f:	add    BYTE PTR [ebp-0x69fffffe],al
  423895:	test   eax,0x232a5302
  42389a:	ror    BYTE PTR ds:0x47edf3a9,1
  4238a0:	scas   eax,DWORD PTR es:[edi]
  4238a1:	jle    0x42387c
  4238a3:	pop    edi
  4238a4:	int3   
  4238a5:	aas    
  4238a6:	dec    edi
  4238a7:	sbb    BYTE PTR [edx+0x767976e2],ch
  4238ad:	out    0x0,eax
  4238af:	sub    ebp,DWORD PTR [ecx+ebp*8]
  4238b2:	sbb    DWORD PTR ss:[edx+0xa],edx
  4238b6:	cmp    edi,DWORD PTR [edi+0x2749ebc1]
  4238bc:	pop    eax
  4238bd:	out    0x68,eax
  4238bf:	in     eax,0x38
  4238c1:	sbb    eax,0x6a772911
  4238c6:	cld    
  4238c7:	enter  0x8c40,0x24
  4238cb:	sbb    ecx,0xa0553225
  4238d1:	cmp    bh,ah
  4238d3:	call   0x946d:0x1e7e45f9
  4238da:	imul   esi,DWORD PTR [ebp+0x54],0x1b0cd067
  4238e1:	repz pop ebx
  4238e3:	stc    
  4238e4:	mov    ds:0x9d2c3e76,al
  4238e9:	js     0x4238dc
  4238eb:	inc    esp
  4238ec:	mov    esp,0x91a7818a
  4238f1:	push   esi
  4238f2:	popa   
  4238f3:	push   ecx
  4238f4:	add    DWORD PTR [esi+ebx*8+0x17],esi
  4238f8:	xchg   esp,eax
  4238f9:	jnp    0x423882
  4238fb:	pop    bx
  4238fd:	sbb    bh,BYTE PTR [ebp-0x17]
  423900:	mov    ds,WORD PTR [ebp+0x2b]
  423903:	out    0xd0,eax
  423905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423906:	cld    
  423907:	add    ebx,eax
  423909:	shl    DWORD PTR [esi],0xd2
  42390c:	jae    0x4238e7
  42390e:	mov    edx,esi
  423910:	inc    ebx
  423911:	sbb    eax,0x4c431433
  423916:	je     0x423985
  423918:	mov    edx,ss
  42391a:	mov    edx,0xf28a7fe4
  42391f:	lods   eax,DWORD PTR ds:[esi]
  423920:	lods   eax,DWORD PTR ds:[esi]
  423921:	push   edx
  423922:	pop    ebx
  423923:	addr16 fadd st(2),st
  423926:	hlt    
  423927:	in     al,0xd
  423929:	adc    BYTE PTR [esi+0x4e],ah
  42392c:	adc    esp,DWORD PTR [edx+0x38cd8d09]
  423932:	xor    BYTE PTR [ebp+0x26709924],cl
  423938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423939:	push   edx
  42393a:	leave  
  42393b:	clc    
  42393c:	inc    esi
  42393d:	test   al,0xd3
  42393f:	sbb    eax,0x6865ea49
  423944:	repz cmovl edx,ebp
  423948:	retf   
  423949:	cmp    BYTE PTR [eax+0x17],bh
  42394c:	call   0x1b27:0x42242fe0
  423953:	fnstcw WORD PTR [edx+ebx*1+0x57ea6d2f]
  42395a:	mov    esi,0x3da3b455
  42395f:	iret   
  423960:	lea    edx,[edx-0x7e5c953f]
  423966:	dec    edi
  423967:	xchg   ecx,eax
  423968:	frndint 
  42396a:	jle    0x423996
  42396c:	xor    DWORD PTR [edi],0x54
  42396f:	ficom  DWORD PTR [esi+eiz*2]
  423972:	sahf   
  423973:	lods   eax,DWORD PTR ds:[esi]
  423974:	inc    edx
  423975:	sti    
  423976:	cwde   
  423977:	leave  
  423978:	dec    ebx
  423979:	dec    ebp
  42397a:	sub    bh,BYTE PTR [eax]
  42397c:	jmp    0xb47abfdc
  423981:	and    DWORD PTR [ebx+esi*1-0x76],0xffffffe7
  423986:	rcl    BYTE PTR ds:0x72593414,cl
  42398c:	jns    0x423993
  42398e:	popf   
  42398f:	hlt    
  423990:	xchg   ecx,eax
  423991:	repz test ah,al
  423994:	xor    BYTE PTR [bx],cl
  423997:	bound  esp,QWORD PTR [edx]
  423999:	arpl   WORD PTR ss:0x6892cdd0,cx
  4239a0:	inc    ecx
  4239a1:	ins    DWORD PTR es:[edi],dx
  4239a2:	call   0xfd093c71
  4239a7:	out    dx,eax
  4239a8:	aam    0xdf
  4239aa:	adc    al,0xbb
  4239ac:	inc    ecx
  4239ad:	lods   eax,DWORD PTR ds:[esi]
  4239ae:	add    esp,ecx
  4239b0:	pop    ecx
  4239b1:	pop    es
  4239b2:	dec    edi
  4239b3:	repz jbe 0x423936
  4239b6:	outs   dx,DWORD PTR ds:[esi]
  4239b7:	repnz std 
  4239b9:	adc    bl,BYTE PTR [ebx+0x6c]
  4239bc:	jns    0x423a21
  4239be:	dec    edx
  4239bf:	mov    al,0xe6
  4239c1:	adc    al,0x43
  4239c3:	sub    eax,0xc79327cd
  4239c8:	mov    eax,ds:0x5568a4c
  4239cd:	mov    esp,0x40fab779
  4239d2:	rep outs dx,BYTE PTR ds:[esi]
  4239d4:	xchg   esi,eax
  4239d5:	mov    esi,0xe3f99dee
  4239da:	lods   eax,DWORD PTR ds:[esi]
  4239db:	sbb    ah,BYTE PTR [ecx]
  4239dd:	xor    edx,ebp
  4239df:	mov    ah,BYTE PTR ds:0x8d3f8355
  4239e5:	mov    ah,0x9e
  4239e7:	fisttp WORD PTR [ebp+0x72]
  4239ea:	jl     0x4239ed
  4239ec:	dec    eax
  4239ed:	jl     0x423987
  4239ef:	adc    ebp,DWORD PTR [ebx]
  4239f1:	push   cs
  4239f2:	mov    BYTE PTR [ebx],dl
  4239f4:	sub    DWORD PTR [edi+0x5e],0x4613beeb
  4239fb:	gs dec ecx
  4239fd:	adc    eax,DWORD PTR [edi-0x67]
  423a00:	inc    eax
  423a01:	jecxz  0x4239de
  423a03:	mov    WORD PTR [edi-0x2a9c8ccc],?
  423a09:	ds retf 0xc57e
  423a0d:	adc    eax,0x997671a2
  423a12:	and    ebx,DWORD PTR [ecx]
  423a14:	push   edi
  423a15:	inc    eax
  423a16:	xchg   esi,eax
  423a17:	xchg   ebp,eax
  423a18:	cmp    al,0xd7
  423a1a:	loopne 0x4239d1
  423a1c:	cmp    ebx,DWORD PTR [edx+eiz*1-0x5ee3390]
  423a23:	sbb    ecx,DWORD PTR [eax+0x5d489c5d]
  423a29:	lock neg BYTE PTR [ebx+0x7efdf0fd]
  423a30:	lock lods eax,DWORD PTR ds:[esi]
  423a32:	jl     0x423a6c
  423a34:	cli    
  423a35:	mov    edx,0xc20583a2
  423a3a:	es (bad) 
  423a3c:	pushf  
  423a3d:	pop    edx
  423a3e:	sub    al,0xaf
  423a40:	in     eax,0x16
  423a42:	sub    cl,BYTE PTR [ecx-0x29]
  423a45:	sti    
  423a46:	mov    ecx,0x67e0167b
  423a4b:	nop
  423a4c:	mov    bh,0x95
  423a4e:	aad    0xf7
  423a50:	xor    ah,BYTE PTR [ebx]
  423a52:	fstp   QWORD PTR [ecx+esi*8-0x4499e69c]
  423a59:	scas   eax,DWORD PTR es:[edi]
  423a5a:	cmp    edx,edx
  423a5c:	test   BYTE PTR ss:[ecx-0x5b5ccddc],0xfe
  423a64:	scas   al,BYTE PTR es:[edi]
  423a65:	cmp    BYTE PTR [esi],bl
  423a67:	es sahf 
  423a69:	push   es
  423a6a:	aas    
  423a6b:	pop    edi
  423a6c:	adc    DWORD PTR [edi-0x41],esi
  423a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a70:	loope  0x423a4e
  423a72:	ja     0x423a66
  423a74:	cwde   
  423a75:	jp     0x423ad8
  423a77:	jp     0x423a9b
  423a79:	loop   0x423ab6
  423a7b:	pop    ebp
  423a7c:	popa   
  423a7d:	inc    eax
  423a7e:	pop    edx
  423a7f:	aad    0x72
  423a81:	js     0x423a0f
  423a83:	sbb    BYTE PTR [ebx-0x46d93b79],bl
  423a89:	mov    eax,0xc58170a2
  423a8e:	loopne 0x423a96
  423a90:	mov    esi,0x7a713865
  423a95:	inc    ebx
  423a96:	push   edx
  423a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a98:	or     dh,al
  423a9a:	les    ebp,FWORD PTR [ebx]
  423a9c:	ins    BYTE PTR es:[edi],dx
  423a9d:	sbb    eax,DWORD PTR [edx+0x7c0e030c]
  423aa3:	jnp    0x423b14
  423aa5:	dec    esi
  423aa6:	aaa    
  423aa7:	jl     0x423a80
  423aa9:	int3   
  423aaa:	int    0x5e
  423aac:	mov    bh,0x61
  423aae:	sti    
  423aaf:	popa   
  423ab0:	pop    ebp
  423ab1:	into   
  423ab2:	cmp    BYTE PTR ds:0xf45d4457,ah
  423ab8:	arpl   WORD PTR ds:0x2ea4745e,cx
  423abe:	or     al,0x61
  423ac0:	cmp    BYTE PTR [esi+0x34afa01f],0xc0
  423ac7:	adc    dh,BYTE PTR [eax+0x10]
  423aca:	in     al,0x8a
  423acc:	dec    edi
  423acd:	dec    eax
  423ace:	mov    eax,0x42201305
  423ad3:	inc    DWORD PTR [edx-0x417b0cdf]
  423ad9:	xor    al,0x14
  423adb:	xchg   ebp,eax
  423adc:	dec    edx
  423add:	sub    al,0xf6
  423adf:	cmp    ch,cl
  423ae1:	jmp    0xaab23721
  423ae6:	sbb    BYTE PTR [ecx],ah
  423ae8:	dec    ecx
  423ae9:	nop
  423aea:	add    BYTE PTR ss:[ecx],ch
  423aed:	hlt    
  423aee:	in     al,0xfe
  423af0:	(bad)  
  423af1:	mov    eax,DWORD PTR [ebx]
  423af3:	in     eax,0x4b
  423af5:	mov    al,ds:0x4f6b2a47
  423afa:	jmp    0x423b63
  423afc:	push   0xffffff9a
  423afe:	xlat   BYTE PTR ds:[ebx]
  423aff:	jae    0x423b24
  423b01:	mov    BYTE PTR [ecx],ch
  423b03:	cmp    al,0x36
  423b05:	je     0x423b5e
  423b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b08:	in     al,dx
  423b09:	out    0x94,eax
  423b0b:	repz loop 0x423aac
  423b0e:	pop    ebx
  423b0f:	ret    0x880f
  423b12:	out    dx,al
  423b13:	dec    edx
  423b14:	mov    ecx,0x87eb59e6
  423b19:	add    BYTE PTR [eax],al
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0x77
  423b29:	and    BYTE PTR ds:0x1b51da6,dh
  423b2f:	add    BYTE PTR [ebp+0xf000002],al
  423b35:	mov    cs,WORD PTR [ecx]
  423b37:	ja     0x423b86
  423b39:	dec    ebx
  423b3a:	into   
  423b3b:	lock jb 0x423b03
  423b3e:	xor    edi,edi
  423b40:	cmp    eax,0x8bb6e052
  423b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b46:	xor    DWORD PTR [edx-0x5b6c0b94],0xffffffda
  423b4d:	xchg   ecx,eax
  423b4e:	adc    dh,BYTE PTR [ebx-0x70]
  423b51:	daa    
  423b52:	fnstenv fs:[edx+0xf]
  423b56:	out    0xd0,al
  423b58:	iret   
  423b59:	sub    edx,DWORD PTR [ebx+0x6b82f93]
  423b5f:	sbb    DWORD PTR [edx-0x33],0xffffffd1
  423b63:	pop    ebp
  423b64:	pop    ebp
  423b65:	xor    DWORD PTR [edx],ecx
  423b67:	loope  0x423b4a
  423b69:	fild   QWORD PTR ds:0x87763e02
  423b6f:	xor    BYTE PTR [ebx+0x96dc789],al
  423b75:	push   cs
  423b76:	mov    dl,0x85
  423b78:	mov    ah,0xc7
  423b7a:	rol    esp,1
  423b7c:	add    al,0x22
  423b7e:	aad    0x2b
  423b80:	pop    edx
  423b81:	pushf  
  423b82:	push   ebp
  423b83:	sub    eax,0xa9169911
  423b88:	jmp    0x59d0:0x158b057e
  423b8f:	(bad)  
  423b90:	lahf   
  423b91:	inc    edx
  423b92:	(bad)  
  423b93:	bnd jp 0x423b83
  423b96:	jge    0x423b88
  423b98:	bound  esi,QWORD PTR [edi-0x3b49e960]
  423b9e:	(bad)  
  423b9f:	out    dx,eax
  423ba0:	or     eax,0x54215f00
  423ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ba6:	loop   0x423bd2
  423ba8:	cmp    dl,bh
  423baa:	adc    ecx,DWORD PTR [ebx+0x231c3c4]
  423bb0:	loope  0x423b3e
  423bb2:	sub    DWORD PTR [eax+0x57],edx
  423bb5:	out    0x7f,eax
  423bb7:	in     al,0x9
  423bb9:	jmp    0xff17:0x302da56d
  423bc0:	inc    edi
  423bc1:	cmp    edi,DWORD PTR [esi-0x6a82bbe9]
  423bc7:	leavew 
  423bc9:	jae    0x423b4b
  423bcb:	push   edx
  423bcc:	dec    ebx
  423bcd:	cmp    DWORD PTR [edx+0x171f4a02],esi
  423bd3:	sti    
  423bd4:	mov    WORD PTR [ecx+ecx*2],ds
  423bd7:	lock mov eax,0x2ae21360
  423bdd:	mov    esi,fs
  423bdf:	mov    esp,0xfe11bf7d
  423be4:	jmp    0xe25a:0x8c3ac648
  423beb:	inc    ebp
  423bec:	div    dh
  423bee:	dec    esi
  423bef:	add    dl,ch
  423bf1:	mov    WORD PTR [ebx+0x11298d80],cs
  423bf7:	lock jno 0x423bdb
  423bfa:	inc    ecx
  423bfb:	adc    edx,DWORD PTR [eax*2+0x4a8ab871]
  423c02:	cwde   
  423c03:	jmp    0x69fd:0x85226314
  423c0a:	loope  0x423bd8
  423c0c:	inc    eax
  423c0d:	xor    BYTE PTR [edi+0x6849f962],bh
  423c13:	dec    ebx
  423c14:	and    BYTE PTR ds:0xf0278409,bh
  423c1a:	dec    esp
  423c1b:	leave  
  423c1c:	push   0x4a
  423c1e:	adc    DWORD PTR [eax+0x1219c3c2],eax
  423c24:	and    BYTE PTR [ecx+0x11500fd0],bl
  423c2a:	(bad)  
  423c2b:	jb     0x423c86
  423c2d:	xchg   DWORD PTR [ebx],edx
  423c2f:	xchg   esp,eax
  423c30:	fadd   st,st(3)
  423c32:	test   DWORD PTR [eax],esi
  423c34:	stos   DWORD PTR es:[edi],eax
  423c35:	jle    0x423cb4
  423c37:	int3   
  423c38:	dec    ecx
  423c39:	aad    0xcb
  423c3b:	push   edx
  423c3c:	test   al,0x2c
  423c3e:	mov    ch,BYTE PTR [esi-0x37]
  423c41:	xchg   edi,eax
  423c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c43:	shl    DWORD PTR [eax],0x92
  423c46:	mov    eax,0x728b3141
  423c4b:	xchg   esp,eax
  423c4c:	jmp    0xf4c9:0x9fc19a88
  423c53:	lea    edx,ds:0x29f9b1c3
  423c59:	out    dx,al
  423c5a:	adc    ch,dh
  423c5c:	add    eax,0xcbcb1f0f
  423c61:	mov    edi,DWORD PTR [ecx]
  423c63:	(bad)  
  423c64:	mov    eax,ds:0xc6bd8cb9
  423c69:	iret   
  423c6a:	cmp    eax,0x3dab8e0a
  423c6f:	add    al,0x25
  423c71:	inc    ebp
  423c72:	sar    BYTE PTR [ebp-0x3058192d],0x36
  423c79:	in     al,0x82
  423c7b:	mov    ebx,0x32faec62
  423c80:	(bad)  
  423c81:	idiv   al
  423c83:	sbb    al,0x50
  423c85:	jo     0x423c12
  423c87:	fstp   st(7)
  423c89:	inc    eax
  423c8a:	sub    BYTE PTR [esi-0x48ccd89c],dh
  423c90:	push   0xfffffffc
  423c92:	mov    ebx,0xb63ef68a
  423c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c98:	addr16 mov ch,0xd9
  423c9b:	out    dx,al
  423c9c:	ret    0xc0da
  423c9f:	out    0xa5,eax
  423ca1:	jnp    0x423caa
  423ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ca4:	addr16 adc dh,bh
  423ca7:	(bad)  
  423ca8:	ja     0x423cd7
  423caa:	sub    al,0x7d
  423cac:	fldcw  WORD PTR [ebx]
  423cae:	or     al,0xc4
  423cb0:	hlt    
  423cb1:	xchg   edx,eax
  423cb2:	sub    bh,0x43
  423cb5:	or     DWORD PTR [ecx+0x6f],esp
  423cb8:	enter  0x6ec2,0xd1
  423cbc:	data16 jbe 0x423c92
  423cbf:	hlt    
  423cc0:	nop
  423cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc2:	push   esp
  423cc3:	jb     0x423d12
  423cc5:	xchg   edx,eax
  423cc6:	and    edx,DWORD PTR [ebp-0x2f]
  423cc9:	mov    cl,0xb6
  423ccb:	out    0x2e,al
  423ccd:	jge    0x423c57
  423ccf:	lea    eax,[eax+ecx*4+0x2cd3d9]
  423cd6:	mov    ds:0x695de2d0,al
  423cdb:	xchg   ecx,eax
  423cdc:	lock dec DWORD PTR [ebp+0x6abf244c]
  423ce3:	icebp  
  423ce4:	ja     0x423d40
  423ce6:	xor    DWORD PTR [edx],edx
  423ce8:	ja     0x423cbb
  423cea:	and    DWORD PTR [esi-0x447ffcc2],eax
  423cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf1:	stc    
  423cf2:	xchg   ecx,eax
  423cf3:	std    
  423cf4:	or     eax,0x8f0aaf6b
  423cf9:	inc    eax
  423cfa:	inc    ecx
  423cfb:	mov    ch,0xae
  423cfd:	es in  al,0x72
  423d00:	out    dx,eax
  423d01:	add    bh,0xab
  423d04:	sub    al,0x8f
  423d06:	pop    edx
  423d07:	cmp    ecx,DWORD PTR [edx+0x1d]
  423d0a:	popa   
  423d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0c:	cli    
  423d0d:	icebp  
  423d0e:	(bad)  
  423d0f:	cmp    eax,0x1e614a0d
  423d14:	xchg   edi,eax
  423d15:	test   BYTE PTR [edx],dl
  423d17:	jp     0x423d66
  423d19:	xchg   ebp,eax
  423d1a:	jmp    0x35329bc6
  423d1f:	sub    eax,0x96b5102a
  423d24:	scas   eax,DWORD PTR es:[edi]
  423d25:	mov    ds:0x41f01984,al
  423d2a:	and    bl,BYTE PTR [ebx+0x4e]
  423d2d:	nop
  423d2e:	xor    al,0xe9
  423d30:	out    dx,al
  423d31:	aam    0x22
  423d33:	pop    es
  423d34:	and    bh,dh
  423d36:	pop    esi
  423d37:	pop    ebx
  423d38:	mov    eax,0x512a3ad6
  423d3d:	int    0x46
  423d3f:	lea    edi,[edx-0x47]
  423d42:	push   ss
  423d43:	fbstp  TBYTE PTR [edi+0x40e16992]
  423d49:	fadd   QWORD PTR [ecx-0x7]
  423d4c:	dec    ebp
  423d4d:	mov    WORD PTR [ebx],?
  423d4f:	dec    esi
  423d51:	and    DWORD PTR [edi+0x396a5416],esi
  423d57:	test   eax,0x4048f3a7
  423d5c:	xchg   ecx,eax
  423d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5e:	ret    
  423d5f:	cwde   
  423d60:	push   edx
  423d61:	pop    esp
  423d62:	ror    DWORD PTR [edi-0x6eee5889],1
  423d68:	clc    
  423d69:	shr    BYTE PTR ds:0xf649268a,1
  423d6f:	inc    ebx
  423d70:	cmovnp eax,DWORD PTR [ebx-0x3c6bfadf]
  423d77:	jne    0x423d47
  423d79:	mov    al,ds:0x333f8cf6
  423d7e:	mov    edi,0x820db4c8
  423d83:	sbb    DWORD PTR [eax-0x16],ebx
  423d86:	mov    al,BYTE PTR [edx+0x0]
  423d89:	mov    dl,0xa9
  423d8b:	aam    0xae
  423d8d:	adc    ecx,edx
  423d8f:	(bad)  
  423d90:	loope  0x423dbd
  423d92:	pop    edx
  423d93:	mov    WORD PTR [eax+0x3d536bad],?
  423d99:	aad    0x89
  423d9b:	dec    esp
  423d9c:	and    edx,DWORD PTR [ebp+0xc]
  423d9f:	test   DWORD PTR [ebp+0x17],eax
  423da2:	retf   0xba50
  423da5:	cmc    
  423da6:	inc    ebp
  423da7:	xor    al,0x2
  423da9:	addr16 (bad) 
  423dab:	push   cs
  423dac:	xchg   edi,eax
  423dad:	inc    ebx
  423dae:	cmp    DWORD PTR [esi+ebp*1],esp
  423db1:	or     eax,0xbfd84616
  423db6:	leave  
  423db7:	jg     0x423d90
  423db9:	add    BYTE PTR [eax],al
  423dbb:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    ebx,DWORD PTR [ebx-0x59]
  423dca:	int    0xa
  423dcc:	mov    ds:0x850001b7,al
  423dd1:	add    al,BYTE PTR [eax]
  423dd3:	add    BYTE PTR [edx],bh
  423dd5:	ins    DWORD PTR es:[edi],dx
  423dd6:	test   BYTE PTR [eax-0x1e],bl
  423dd9:	mov    bh,cl
  423ddb:	mov    edx,0x2f5a8088
  423de0:	jmp    0x423e22
  423de2:	add    DWORD PTR [ebp+0x5c],edx
  423de5:	fwait
  423de6:	hlt    
  423de7:	jno    0x423e67
  423de9:	cmp    bl,BYTE PTR [edx]
  423deb:	cmc    
  423dec:	cmc    
  423ded:	pop    edx
  423dee:	sub    DWORD PTR [edx+0x51d6b9e0],edi
  423df4:	loope  0x423e19
  423df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423df7:	push   esi
  423df8:	es mov edi,0x1f55b499
  423dfe:	cmp    al,0x2d
  423e00:	fisttp DWORD PTR [ebx+0x1e]
  423e03:	xchg   ah,dh
  423e05:	push   cx
  423e07:	loop   0x423df5
  423e09:	pop    edi
  423e0a:	push   edx
  423e0b:	xchg   edx,eax
  423e0c:	aad    0x3c
  423e0e:	loop   0x423e76
  423e10:	(bad)  
  423e11:	xchg   edi,eax
  423e12:	push   cs
  423e13:	jmp    0x423d9c
  423e15:	inc    ecx
  423e16:	mov    edx,0x15b6a838
  423e1b:	sbb    DWORD PTR [ebx],edi
  423e1d:	or     DWORD PTR [eax+ebx*1+0x72],esi
  423e21:	add    eax,0xaa143607
  423e26:	ror    bl,0x60
  423e29:	bnd jg 0xe9b83268
  423e30:	div    BYTE PTR [ecx]
  423e32:	stc    
  423e33:	lods   al,BYTE PTR ds:[esi]
  423e34:	xchg   esp,eax
  423e35:	add    BYTE PTR [ebx],bl
  423e37:	out    dx,eax
  423e38:	pop    ebp
  423e39:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  423e3b:	mov    ebx,0x5f26e846
  423e40:	mov    esi,0x591c80b2
  423e45:	jns    0x423e17
  423e47:	loop   0x423e3b
  423e49:	icebp  
  423e4a:	gs dec ebp
  423e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e4d:	mov    al,0x9d
  423e4f:	sbb    BYTE PTR [esi],ah
  423e51:	xchg   ebp,eax
  423e52:	out    0x9b,eax
  423e54:	cli    
  423e55:	push   edx
  423e56:	enter  0xe0b3,0xb3
  423e5a:	call   0xf81205ec
  423e5f:	cmp    DWORD PTR [ebx-0x3c],edx
  423e62:	push   esi
  423e63:	dec    esi
  423e64:	daa    
  423e65:	pop    edx
  423e66:	iret   
  423e67:	dec    ebx
  423e68:	pop    edx
  423e69:	and    BYTE PTR ds:0x8e517f5e,0xb5
  423e70:	into   
  423e71:	enter  0xbc23,0xb3
  423e75:	scas   eax,DWORD PTR es:[edi]
  423e76:	cmp    ebp,DWORD PTR [edi+eiz*2]
  423e79:	lods   eax,DWORD PTR ds:[esi]
  423e7a:	jne    0x423e0e
  423e7c:	pop    esi
  423e7d:	xlat   BYTE PTR ds:[ebx]
  423e7e:	das    
  423e7f:	mov    ds:0x44b2a99,eax
  423e84:	jmp    0x5b76:0x789a0cd9
  423e8b:	(bad)  
  423e8c:	rcl    BYTE PTR [edx+ebp*1-0x1b],1
  423e90:	mov    esp,0x4052e04a
  423e95:	push   ebx
  423e96:	enter  0x4ba2,0xf1
  423e9a:	in     eax,dx
  423e9b:	add    eax,0x6b41c6f7
  423ea0:	sbb    eax,0x8945b20
  423ea5:	mov    edi,0xfe594e77
  423eaa:	retf   0xb9d5
  423ead:	jmp    DWORD PTR [esi]
  423eaf:	or     DWORD PTR [esi+0x2d5bb710],0xdd68037a
  423eb9:	aad    0xd8
  423ebb:	out    0x25,eax
  423ebd:	push   ds
  423ebe:	aaa    
  423ebf:	les    esp,FWORD PTR [ecx+0x6192098f]
  423ec5:	pop    ebp
  423ec6:	aas    
  423ec7:	imul   esi,DWORD PTR [ecx],0xffffffdc
  423eca:	mov    ds:0xfd02fe38,eax
  423ecf:	ret    0xca6b
  423ed2:	addr16 jmp 0x423f2f
  423ed5:	mov    ds,WORD PTR [edi-0x409c21ed]
  423edb:	loopne 0x423f4e
  423edd:	les    edx,FWORD PTR [edi-0x6f]
  423ee0:	pop    edi
  423ee1:	add    esp,DWORD PTR fs:[edi+0x573d6488]
  423ee8:	and    DWORD PTR [edx-0x50],edi
  423eeb:	inc    edx
  423eec:	mov    edx,0xc8dceff
  423ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ef2:	pop    esi
  423ef3:	dec    esi
  423ef4:	dec    ebx
  423ef5:	test   al,0x53
  423ef7:	add    DWORD PTR [esi],0xb6c9a2f8
  423efd:	out    0x51,al
  423eff:	cmp    BYTE PTR [edx+0x135e1529],0x34
  423f06:	sub    al,cl
  423f08:	aaa    
  423f09:	fcmovu st,st(1)
  423f0b:	push   0xffffffc2
  423f0d:	test   eax,0xd7c8a53a
  423f12:	jno    0x423f68
  423f14:	xor    eax,0xeb7488d6
  423f19:	jge    0x423ed6
  423f1b:	nop
  423f1c:	add    dh,al
  423f1e:	sub    al,0x12
  423f20:	mov    ch,ah
  423f22:	fiadd  WORD PTR gs:[esi]
  423f25:	out    dx,al
  423f26:	in     eax,0x81
  423f28:	ins    BYTE PTR es:[edi],dx
  423f29:	sub    edx,esp
  423f2b:	out    dx,eax
  423f2c:	lods   eax,DWORD PTR ds:[esi]
  423f2d:	mov    cs,WORD PTR [esp+edx*4+0x19]
  423f31:	push   eax
  423f32:	dec    esp
  423f33:	int    0xa3
  423f35:	lods   al,BYTE PTR ds:[esi]
  423f36:	data16 in al,dx
  423f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f39:	and    al,0xbe
  423f3b:	arpl   WORD PTR fs:[ecx],di
  423f3e:	jl     0x423ef1
  423f40:	dec    esp
  423f41:	mov    dh,0xb6
  423f43:	adc    DWORD PTR [edx+esi*2],0xffffffde
  423f47:	aaa    
  423f48:	sar    BYTE PTR [esi],0xbd
  423f4b:	fild   QWORD PTR [edi+0x5beef5a3]
  423f51:	mov    esp,0xa52ef93f
  423f56:	mov    BYTE PTR [eax-0x770dabfa],al
  423f5c:	loope  0x423f8f
  423f5e:	sub    eax,0x249246b9
  423f63:	cld    
  423f64:	xchg   BYTE PTR [edx+0x411cda0d],bh
  423f6a:	pop    esp
  423f6b:	jge    0x423fe0
  423f6d:	add    bh,BYTE PTR [edi+0x4a]
  423f70:	jbe    0x423fd0
  423f72:	cdq    
  423f73:	popf   
  423f74:	popf   
  423f75:	jne    0x423f80
  423f77:	lock cmp ebx,DWORD PTR [edx-0x125dfe35]
  423f7e:	sub    DWORD PTR [ebp+edi*2+0x2aa4fbb5],eax
  423f85:	int3   
  423f86:	loopne 0x423ff5
  423f88:	push   eax
  423f89:	pop    eax
  423f8a:	jl     0x423f18
  423f8c:	jne    0x423f37
  423f8e:	repnz rol edx,0x43
  423f92:	pop    es
  423f93:	fadd   QWORD PTR [edi]
  423f95:	pop    ss
  423f96:	inc    ebp
  423f97:	push   ebx
  423f98:	jg     0x423fbb
  423f9a:	mov    ebx,0x2f42d59a
  423f9f:	imul   esp,DWORD PTR [esi],0xffffffc2
  423fa2:	or     al,0x64
  423fa4:	call   0xef68:0x8adf90d0
  423fab:	mov    esp,0x8f8b14f1
  423fb0:	and    ah,bl
  423fb2:	mov    ebx,0x98b78692
  423fb7:	lods   al,BYTE PTR ds:[esi]
  423fb8:	cmp    DWORD PTR [eax+0x64],ecx
  423fbb:	mov    ah,0xa2
  423fbd:	daa    
  423fbe:	pop    ebp
  423fbf:	dec    edi
  423fc0:	nop
  423fc1:	loopne 0x423f81
  423fc3:	leave  
  423fc4:	push   esp
  423fc5:	jge    0x423f88
  423fc7:	add    edi,0xd20702e8
  423fcd:	sti    
  423fce:	mov    ah,0x9a
  423fd0:	leave  
  423fd1:	or     BYTE PTR [edx+0x3e],bh
  423fd4:	mov    esp,0x537787e2
  423fd9:	fidiv  WORD PTR [esi-0x10]
  423fdc:	mov    bl,0x7f
  423fde:	into   
  423fdf:	sub    ch,ah
  423fe1:	dec    edx
  423fe2:	lods   eax,DWORD PTR ds:[esi]
  423fe3:	jmp    0x424035
  423fe5:	test   eax,0x318fd0cc
  423fea:	pop    edx
  423feb:	leave  
  423fec:	xchg   ebp,eax
  423fed:	and    bl,ch
  423fef:	mov    al,0xf
  423ff1:	iret   
  423ff2:	push   edi
  423ff3:	xchg   DWORD PTR [ebx+0x3fb26265],esp
  423ff9:	dec    edx
  423ffa:	stos   DWORD PTR es:[edi],eax
  423ffb:	repnz mov eax,ds:0x6652a2b7
  424001:	call   0x244f130c
  424006:	adc    BYTE PTR [ebp-0x24],dl
  424009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42400a:	fsubr  QWORD PTR [edx]
  42400c:	clc    
  42400d:	pushf  
  42400e:	adc    al,0x59
  424010:	jge    0x42405e
  424012:	loopne 0x424091
  424014:	pfsubr mm4,QWORD PTR [edx]
  424018:	aam    0xa2
  42401a:	mov    ebp,0x57c02ce
  42401f:	(bad)  
  424020:	clc    
  424021:	ins    BYTE PTR es:[edi],dx
  424022:	out    0x2,al
  424024:	shr    BYTE PTR [esi-0x448f2624],cl
  42402a:	mov    ebx,0x51e692b0
  42402f:	mov    DWORD PTR [ecx],esp
  424031:	xor    edx,edx
  424033:	stos   DWORD PTR es:[edi],eax
  424034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424035:	add    bl,bh
  424037:	or     al,0xe7
  424039:	pop    edx
  42403a:	ret    0xfcda
  42403d:	in     eax,dx
  42403e:	into   
  42403f:	dec    esp
  424040:	adc    al,0xde
  424042:	mov    al,0x8f
  424044:	repz loope 0x424001
  424047:	sbb    cl,cl
  424049:	hlt    
  42404a:	xlat   BYTE PTR ds:[ebx]
  42404b:	mul    DWORD PTR [eax-0x36]
  42404e:	pop    ss
  42404f:	cld    
  424050:	sahf   
  424051:	inc    esp
  424052:	shl    BYTE PTR [edx-0x2fc8f692],0x61
  424059:	add    BYTE PTR [eax],al
  42405b:	add    BYTE PTR [ebx-0x73],al
  42405e:	pop    ds
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0x2320d8f0],dl
  42406a:	ins    DWORD PTR es:[edi],dx
  42406b:	pop    es
  42406c:	daa    
  42406d:	mov    edx,0x2850001
  424072:	add    BYTE PTR [eax],al
  424074:	jb     0x424055
  424076:	pop    ebp
  424077:	jmp    0x424004
  424079:	push   ecx
  42407a:	cld    
  42407b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42407c:	jecxz  0x42401e
  42407e:	adc    BYTE PTR [edx],ah
  424080:	dec    di
  424082:	(bad)  
  424084:	jle    0x4240f2
  424086:	jle    0x4240e1
  424088:	scas   eax,DWORD PTR es:[edi]
  424089:	add    BYTE PTR [ebx+0x7627808f],cl
  42408f:	mov    dl,0xce
  424091:	imul   ebp,DWORD PTR [ebp+0x4d4dff5d],0xffffffe9
  424098:	aas    
  424099:	push   ecx
  42409a:	pop    ds
  42409b:	dec    ecx
  42409c:	sbb    dh,dl
  42409e:	pusha  
  42409f:	pop    ss
  4240a0:	pop    esi
  4240a1:	call   0x7328:0x922c8126
  4240a8:	je     0x4240b8
  4240aa:	cmp    ecx,0x3b
  4240ad:	jbe    0x424099
  4240af:	xor    eax,0x43143355
  4240b4:	fistp  QWORD PTR [ebx+0x66]
  4240b7:	adc    BYTE PTR [edi+ecx*4-0x10508d6],ah
  4240be:	pop    esi
  4240bf:	pop    ss
  4240c0:	jmp    0x2160700b
  4240c5:	inc    ebp
  4240c6:	(bad)  
  4240c7:	cmp    dh,BYTE PTR [ebp+edx*2+0x54]
  4240cb:	push   ebx
  4240cc:	jg     0x4240d0
  4240ce:	xchg   ecx,eax
  4240cf:	pop    esp
  4240d0:	lahf   
  4240d1:	call   0x95bc143e
  4240d6:	and    eax,0x375b3ff8
  4240db:	rcpps  xmm6,XMMWORD PTR [ecx+ebp*2-0x7b10d51f]
  4240e3:	idiv   ch
  4240e5:	mov    eax,ds:0x8e6086af
  4240ea:	stc    
  4240eb:	mov    edx,0xe28c5a15
  4240f0:	push   esp
  4240f1:	dec    ebp
  4240f2:	arpl   si,cx
  4240f4:	outs   dx,BYTE PTR ds:[esi]
  4240f5:	dec    edi
  4240f6:	inc    esi
  4240f7:	cli    
  4240f8:	push   ebp
  4240f9:	jb     0x4240ff
  4240fb:	xchg   edx,eax
  4240fc:	jge    0x424124
  4240fe:	xor    ch,BYTE PTR [ebp+0x66]
  424101:	push   esi
  424102:	mov    WORD PTR [ebx+0x5c7993ea],?
  424108:	ss mov dl,0x11
  42410b:	call   0x5cb2aaa8
  424110:	push   edx
  424111:	gs xor ecx,ecx
  424114:	jo     0x424157
  424116:	mov    ds:0xfa2b7dd0,eax
  42411b:	jb     0x42415d
  42411d:	xlat   BYTE PTR ds:[ebx]
  42411e:	pop    ss
  42411f:	sub    al,0xd2
  424121:	or     edi,0x3f6824c9
  424127:	fst    DWORD PTR [edx]
  424129:	repnz push ss
  42412b:	or     edx,DWORD PTR [esi+ecx*8]
  42412e:	enter  0xf1eb,0x63
  424132:	(bad)  
  424133:	int3   
  424134:	and    eax,0x7713eb7d
  424139:	add    eax,0x56707770
  42413e:	cdq    
  42413f:	cmp    eax,0xed2125c2
  424144:	imul   esp,DWORD PTR [edx-0x15cde8c2],0x85751606
  42414e:	rep outs dx,DWORD PTR ds:[esi]
  424150:	fbld   TBYTE PTR [eax]
  424152:	dec    ebp
  424153:	jp     0x4240e9
  424155:	adc    BYTE PTR [ebx+0x1f],0xe2
  424159:	daa    
  42415a:	es and al,bl
  42415d:	sbb    cl,BYTE PTR [edx-0x18bfb67]
  424163:	sbb    al,0x7a
  424165:	mov    ?,WORD PTR [edi]
  424167:	jno    0x4241d5
  424169:	leave  
  42416a:	je     0x4241cc
  42416c:	adc    al,0x8f
  42416e:	stc    
  42416f:	or     DWORD PTR [eax-0x716f06d2],0x966395b9
  424179:	mov    bh,BYTE PTR [ebx+0xc]
  42417c:	cwde   
  42417d:	and    eax,DWORD PTR [edx+0x37]
  424180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424181:	inc    ebx
  424182:	retf   
  424183:	out    0x2e,al
  424185:	sbb    BYTE PTR [edi],0xd
  424188:	push   ebp
  424189:	xlat   BYTE PTR ds:[ebx]
  42418a:	pop    ebp
  42418b:	pushf  
  42418c:	fsubr  DWORD PTR [eax-0x2b53a967]
  424192:	adc    dl,BYTE PTR [eax-0x6492850e]
  424198:	xchg   edi,eax
  424199:	jl     0x424159
  42419b:	lds    ebx,FWORD PTR [eax-0x1b]
  42419e:	xchg   ecx,eax
  42419f:	and    bl,BYTE PTR [edi+0x2e67821e]
  4241a5:	(bad)  
  4241a6:	or     al,0xf8
  4241a8:	sub    ebp,DWORD PTR [edx+0x3a8c517b]
  4241ae:	xchg   dh,ah
  4241b0:	push   esi
  4241b2:	push   esi
  4241b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b4:	(bad)  
  4241b5:	std    
  4241b6:	push   es
  4241b7:	xor    al,0x3a
  4241b9:	cmp    BYTE PTR [ebx],0x23
  4241bc:	pop    ebp
  4241bd:	aam    0xc1
  4241bf:	sub    BYTE PTR [edx+0x5648449a],dl
  4241c5:	bound  edx,QWORD PTR [ebx+0x10]
  4241c8:	mov    BYTE PTR [ebx+edx*4+0x33],dh
  4241cc:	sar    ebx,1
  4241ce:	add    ecx,edi
  4241d0:	mov    eax,0x47bf1b39
  4241d5:	sbb    BYTE PTR [edx-0x7c],bl
  4241d8:	cmc    
  4241d9:	frndint 
  4241db:	fsub   QWORD PTR [eax+0x6e]
  4241de:	lahf   
  4241df:	ins    BYTE PTR es:[edi],dx
  4241e0:	fcom   DWORD PTR [edx+0x5b]
  4241e3:	loope  0x4241b3
  4241e5:	mov    ds:0x917ab8ff,al
  4241ea:	mov    esp,0x53534df6
  4241ef:	push   ecx
  4241f0:	xchg   edi,eax
  4241f1:	std    
  4241f2:	pop    edi
  4241f3:	lds    ecx,FWORD PTR [edx+esi*4]
  4241f6:	lock push ebx
  4241f8:	test   al,0xf3
  4241fa:	sbb    al,0x21
  4241fc:	dec    edx
  4241fd:	retf   0xfd49
  424200:	cmp    BYTE PTR [ecx],dl
  424202:	mov    edi,0x8da432e9
  424207:	xor    BYTE PTR [ebp+0x51],dl
  42420a:	xor    ch,BYTE PTR [ebx]
  42420c:	add    DWORD PTR [eax+0x73fdf40d],esi
  424212:	xor    BYTE PTR [eax],bh
  424214:	std    
  424215:	jno    0x42425f
  424217:	fisttp DWORD PTR [ebx]
  424219:	lods   al,BYTE PTR ds:[esi]
  42421a:	xor    cl,BYTE PTR [edi+0x4ca6183d]
  424220:	add    bh,BYTE PTR [esi-0x38]
  424223:	mov    ds:0xef357454,al
  424228:	leave  
  424229:	stc    
  42422a:	nop
  42422b:	out    0x52,al
  42422d:	push   edi
  42422e:	push   esp
  42422f:	dec    ebx
  424230:	jb     0x4241c0
  424232:	aad    0x21
  424234:	outs   dx,DWORD PTR ds:[esi]
  424235:	pop    ebp
  424236:	pop    edi
  424237:	xchg   esi,eax
  424238:	inc    ecx
  424239:	cmp    al,0x8a
  42423b:	das    
  42423c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42423d:	inc    ebx
  42423e:	and    DWORD PTR [esp+ecx*2],ebp
  424241:	inc    ecx
  424242:	dec    ecx
  424243:	pop    ss
  424244:	rcr    BYTE PTR [edx+0x1c],cl
  424247:	dec    eax
  424248:	je     0x42424b
  42424a:	dec    ebp
  42424b:	push   ds
  42424c:	or     bh,dl
  42424e:	(bad)  
  42424f:	or     BYTE PTR [esi+ecx*2-0x3eb8a97b],dh
  424256:	adc    DWORD PTR [edx+0x58],0xffffffee
  42425a:	fadd   st,st(1)
  42425c:	jecxz  0x424239
  42425e:	repnz mov esp,0xdd06bc5
  424264:	sti    
  424265:	xchg   BYTE PTR [ecx+0x1e],bh
  424268:	ds mov bl,0xe8
  42426b:	jns    0x424250
  42426d:	sub    bl,BYTE PTR [eax+0x91d546a]
  424273:	pop    ecx
  424274:	and    esi,0x424f1e6e
  42427a:	xchg   ebp,eax
  42427b:	adc    cl,BYTE PTR [ebx]
  42427d:	add    eax,DWORD PTR [edx]
  42427f:	dec    ebx
  424280:	frstor [eax]
  424282:	loopne 0x4242c8
  424284:	add    dl,BYTE PTR [ebp-0x424f364]
  42428a:	jge    0x4242df
  42428c:	sub    al,0x3b
  42428e:	pcmpeqw mm5,QWORD PTR [esi-0x1d]
  424292:	sbb    al,0x3f
  424294:	or     al,0x9e
  424296:	inc    ebp
  424297:	pop    edi
  424298:	mov    esp,0xaed31710
  42429d:	sti    
  42429e:	cmc    
  42429f:	aam    0x53
  4242a1:	arpl   si,bx
  4242a3:	fsub   QWORD PTR [eax]
  4242a5:	fsubr  QWORD PTR [ebp-0xb]
  4242a8:	or     al,0xc3
  4242aa:	push   es
  4242ab:	jl     0x4242ba
  4242ad:	imul   esp,DWORD PTR [ecx-0x23],0x41131602
  4242b4:	mov    esp,0xbe33caab
  4242b9:	mov    ah,0xff
  4242bb:	xlat   BYTE PTR ds:[ebx]
  4242bc:	outs   dx,DWORD PTR ds:[esi]
  4242bd:	push   esp
  4242be:	jnp    0x42424e
  4242c0:	int3   
  4242c1:	or     al,0x1f
  4242c3:	sbb    DWORD PTR [ecx],esi
  4242c5:	sbb    al,0x9c
  4242c7:	fild   QWORD PTR [edx+0x6b199d67]
  4242cd:	mov    cl,0x3d
  4242cf:	int    0xaa
  4242d1:	dec    eax
  4242d2:	jmp    0x4242c1
  4242d4:	in     eax,0xeb
  4242d6:	dec    eax
  4242d7:	mov    bh,0x51
  4242d9:	in     al,dx
  4242da:	test   al,0x6e
  4242dc:	retf   0x1bed
  4242df:	shr    DWORD PTR [esi-0x51],1
  4242e2:	jmp    0xbe77:0xcc858e9d
  4242e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242ea:	jae    0x424331
  4242ec:	repnz retf 0x5c24
  4242f0:	jnp    0x4242e7
  4242f2:	jmp    0x4242e6
  4242f4:	inc    esi
  4242f5:	pop    edi
  4242f6:	dec    esi
  4242f7:	test   DWORD PTR [eax],0xf4000000
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	mov    ds:0xacf9506f,al
  42430d:	mov    esp,0x2850001
  424312:	add    BYTE PTR [eax],al
  424314:	fld    DWORD PTR [ebx]
  424316:	jns    0x42435d
  424318:	push   cs
  424319:	jecxz  0x4242b4
  42431b:	or     edi,DWORD PTR [edx+0x65029d50]
  424321:	nop
  424322:	daa    
  424323:	mov    WORD PTR [edx+0x57004fd3],fs
  424329:	ficom  DWORD PTR [ecx+0x662b0c10]
  42432f:	out    dx,eax
  424330:	mov    dh,0xa6
  424332:	ds push esp
  424334:	psubw  mm7,mm0
  424337:	rcl    DWORD PTR [ebp-0x1e],1
  42433a:	mov    edi,0xce1f1718
  42433f:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424342:	mov    al,ds:0xccae31eb
  424347:	push   ebx
  424348:	(bad)  
  424349:	mov    dl,0x53
  42434b:	aaa    
  42434c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42434d:	ror    BYTE PTR [edx+0xf],0x89
  424351:	outs   dx,BYTE PTR ds:[esi]
  424352:	ds jae 0x424330
  424355:	jbe    0x42434c
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	and    DWORD PTR [ebx-0x7fa1cb71],0xffffffb0
  42435f:	int3   
  424360:	(bad)  
  424361:	(bad)  
  424363:	xor    bh,0xeb
  424366:	xor    al,BYTE PTR [ecx-0x57ee5a51]
  42436c:	xor    ch,BYTE PTR [bx+0x1ce2]
  424371:	cld    
  424372:	ja     0x4243f2
  424374:	loope  0x42430f
  424376:	jmp    0x32fe:0xc01443df
  42437d:	cmc    
  42437e:	xor    BYTE PTR [eax+0x64],ch
  424381:	(bad)  
  424382:	mov    dl,0xcb
  424384:	cli    
  424385:	mov    cl,0x89
  424387:	jmp    0x9da7eae7
  42438c:	sbb    ebx,eax
  42438e:	leave  
  42438f:	push   edi
  424390:	icebp  
  424391:	xchg   ecx,eax
  424392:	sbb    bh,bl
  424394:	or     ah,al
  424396:	or     bl,BYTE PTR [eax]
  424398:	in     eax,dx
  424399:	scas   al,BYTE PTR es:[edi]
  42439a:	jnp    0x4243de
  42439c:	mov    bl,0xda
  42439e:	leave  
  42439f:	data16 aam 0x3d
  4243a2:	push   ebp
  4243a3:	in     eax,dx
  4243a4:	jle    0x42440e
  4243a6:	xor    ch,bl
  4243a8:	mov    es,WORD PTR [edi+ecx*1+0x64]
  4243ac:	mov    bl,0x6f
  4243ae:	fdivr  st(7),st
  4243b0:	cmp    bl,dl
  4243b2:	ret    
  4243b3:	jg     0x424346
  4243b5:	push   ebp
  4243b6:	gs pop ss
  4243b8:	inc    eax
  4243b9:	(bad)  
  4243ba:	mov    eax,0x602aef1a
  4243bf:	or     al,0xd3
  4243c1:	mov    esp,0x85891412
  4243c6:	unpckhps xmm4,XMMWORD PTR [ebp-0x5d41125d]
  4243cd:	sub    eax,0x14652cc6
  4243d2:	push   0x7d
  4243d4:	std    
  4243d5:	inc    BYTE PTR [ecx+0x35c2a9d1]
  4243db:	aas    
  4243dc:	lods   al,BYTE PTR ds:[esi]
  4243dd:	mov    al,ds:0x952e0919
  4243e2:	enter  0xa996,0x4e
  4243e6:	rol    ch,0x28
  4243e9:	(bad)  
  4243ea:	sub    edx,esp
  4243ec:	jo     0x424429
  4243ee:	mov    al,0x6b
  4243f0:	(bad)  
  4243f1:	jmp    0x4243b9
  4243f3:	sar    esp,1
  4243f5:	shl    BYTE PTR ds:0x76278633,cl
  4243fb:	dec    edi
  4243fc:	pcmpgtb mm4,QWORD PTR [edx+0x5704550a]
  424403:	mov    esp,esp
  424405:	ins    DWORD PTR es:[edi],dx
  424406:	rol    BYTE PTR [edx-0x3283d82a],cl
  42440c:	pop    edi
  42440d:	dec    ebp
  42440e:	stos   BYTE PTR es:[edi],al
  42440f:	pop    ss
  424410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424411:	retf   
  424412:	rcl    DWORD PTR [eax],cl
  424414:	loop   0x4243ff
  424416:	leave  
  424417:	mov    ebx,0x8f134582
  42441c:	cmp    al,0x69
  42441e:	bnd jbe 0x424473
  424421:	repz (bad) 
  424423:	pop    esp
  424424:	or     edx,ebx
  424426:	imul   BYTE PTR [edx]
  424428:	stc    
  424429:	fwait
  42442a:	or     edx,DWORD PTR [edi-0x61]
  42442d:	dec    ebp
  42442e:	dec    esi
  42442f:	pop    esi
  424430:	push   esp
  424431:	lock mov esi,0x30905767
  424437:	mov    esp,0x50ef2f45
  42443c:	push   esi
  42443d:	or     eax,0x32330555
  424442:	out    dx,eax
  424443:	loope  0x4244b8
  424445:	aas    
  424446:	and    esi,esi
  424448:	cmp    al,0xc3
  42444a:	sub    eax,0x1166d5f7
  42444f:	jecxz  0x424447
  424451:	call   0xf4ff:0xb88fac1
  424458:	or     al,al
  42445a:	mov    bl,0x1
  42445c:	adc    dh,BYTE PTR [esp+esi*1]
  42445f:	sbb    cl,BYTE PTR [eax+0x29]
  424462:	mov    ecx,es
  424464:	dec    esp
  424465:	and    BYTE PTR [edx+ebp*2],al
  424468:	cmp    eax,0x64f331a7
  42446d:	jmp    0xaa56:0xc8af78f5
  424474:	jns    0x424499
  424476:	xor    DWORD PTR [ecx-0x47d46546],0xa8e509a4
  424480:	adc    cl,bl
  424482:	push   ds
  424483:	data16 rcl BYTE PTR [ebp-0x15],cl
  424487:	push   edi
  424488:	jne    0x4244db
  42448a:	fiadd  WORD PTR [ecx+0x61]
  42448d:	xchg   esi,eax
  42448e:	push   ecx
  42448f:	test   ebx,ebx
  424491:	aad    0x5d
  424493:	call   0x6b5e:0x44dde500
  42449a:	in     al,dx
  42449b:	inc    sp
  42449d:	repz cmp ch,BYTE PTR ds:0x5308c267
  4244a4:	add    bh,BYTE PTR [esi-0x1ef5049]
  4244aa:	aas    
  4244ab:	and    al,0x3e
  4244ad:	pop    esp
  4244ae:	mul    BYTE PTR [ebp-0x62721af1]
  4244b4:	cmp    eax,0xe161d82d
  4244b9:	dec    ebp
  4244ba:	push   0xffffff81
  4244bc:	mov    gs,WORD PTR [edx-0x63]
  4244bf:	push   esi
  4244c0:	inc    esi
  4244c1:	leave  
  4244c2:	clc    
  4244c3:	jecxz  0x42450f
  4244c5:	mov    BYTE PTR [ecx-0x3a],bh
  4244c8:	sbb    ebx,DWORD PTR [esi-0x10974f55]
  4244ce:	aaa    
  4244cf:	add    DWORD PTR [ebx],esi
  4244d1:	imul   esp,DWORD PTR [edx],0x9b1b29de
  4244d7:	jne    0x424532
  4244d9:	or     eax,0x1f72a6f4
  4244de:	and    al,BYTE PTR [eax+eiz*2+0x4fd5cf03]
  4244e5:	out    0x94,al
  4244e7:	dec    edx
  4244e8:	sbb    bl,BYTE PTR [ebp-0x1dd45bbb]
  4244ee:	test   al,0x62
  4244f0:	stos   BYTE PTR es:[edi],al
  4244f1:	and    BYTE PTR [edi+0x50],bh
  4244f4:	adc    ah,BYTE PTR [eax-0x79]
  4244f7:	and    al,BYTE PTR [edi+0x1d]
  4244fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244fb:	jmp    0xac96350f
  424500:	mov    bl,0xf1
  424502:	test   eax,0xf5725a6b
  424507:	mov    edi,0xcdab861a
  42450c:	ss adc al,0xb4
  42450f:	sbb    bl,BYTE PTR [ebx+0x62b5cd81]
  424515:	sub    DWORD PTR [ecx-0x7ec1298a],ebp
  42451b:	or     DWORD PTR [edi-0x78cc8a70],edi
  424521:	sub    edi,DWORD PTR [eax-0x2556c36c]
  424527:	arpl   WORD PTR [eax+eiz*4-0x78fa28ea],sp
  42452e:	test   BYTE PTR [edi],0xe2
  424531:	xor    ecx,DWORD PTR [ebx]
  424533:	dec    esp
  424534:	cmp    eax,0xef8db442
  424539:	or     BYTE PTR [edx+0x78fdd356],dl
  42453f:	fisub  WORD PTR [ebp+0x37d4af83]
  424545:	mov    ds:0x186d3ff9,eax
  42454a:	sahf   
  42454b:	mov    esp,0xcde69d4
  424550:	jae    0x4244fa
  424552:	mov    dl,0x7a
  424554:	scas   eax,DWORD PTR es:[edi]
  424555:	ret    
  424556:	pop    edx
  424557:	jb     0x42458b
  424559:	mov    ecx,0xd986f504
  42455e:	int3   
  42455f:	xchg   ebp,eax
  424560:	dec    ebx
  424561:	in     al,dx
  424562:	xchg   ecx,eax
  424563:	mov    ah,0x89
  424565:	sar    al,0x69
  424568:	in     eax,0xd7
  42456a:	sti    
  42456b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42456c:	mov    al,ds:0x857fd020
  424571:	inc    edi
  424572:	hlt    
  424573:	stos   DWORD PTR es:[edi],eax
  424574:	dec    ebx
  424575:	xor    BYTE PTR [ebp+0x12],cl
  424578:	add    DWORD PTR [ecx+esi*8+0x30],ecx
  42457c:	dec    ebx
  42457d:	push   ecx
  42457e:	(bad)  
  42457f:	and    al,0x21
  424581:	mov    al,ds:0xbc8ed986
  424586:	push   esi
  424587:	add    DWORD PTR [ebx-0x25],eax
  42458a:	add    bh,bh
  42458c:	push   gs
  42458e:	fwait
  42458f:	add    DWORD PTR [ebx+0x73],esi
  424592:	(bad)  
  424593:	sahf   
  424594:	out    0xc4,al
  424596:	jle    0x424546
  424598:	dec    edx
  424599:	add    BYTE PTR [eax],al
  42459b:	add    BYTE PTR [esi+edi*1+0x24],dl
  42459f:	sbb    DWORD PTR [esi+0x1b],ebp
  4245a2:	jge    0x424623
  4245a4:	(bad)  
  4245a5:	mov    eax,0x1ecfcfc0
  4245aa:	hlt    
  4245ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245ac:	xor    DWORD PTR [edi+0x2850001],edi
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	les    edi,FWORD PTR [ebx-0x73ea51f1]
  4245ba:	jne    0x424587
  4245bc:	mov    bh,0x6
  4245be:	adc    BYTE PTR gs:[eax],dh
  4245c1:	dec    ebx
  4245c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245c3:	cmp    eax,0xccacbb6b
  4245c8:	mov    bl,0x69
  4245ca:	mov    esp,0x777578e1
  4245cf:	int3   
  4245d0:	push   ecx
  4245d1:	dec    eax
  4245d2:	or     dh,BYTE PTR [edi+0x256e1a6d]
  4245d8:	inc    eax
  4245d9:	adc    ch,BYTE PTR [edi+eax*4-0x59]
  4245dd:	jge    0x424611
  4245df:	test   bh,dl
  4245e1:	add    edi,esi
  4245e3:	jp     0x42462c
  4245e5:	jg     0x42457c
  4245e7:	addr16 mov dl,0x57
  4245ea:	jnp    0x4245dd
  4245ec:	xchg   esp,eax
  4245ed:	or     bh,dl
  4245ef:	inc    eax
  4245f0:	lock fiadd DWORD PTR [esi-0x24]
  4245f4:	add    BYTE PTR [edx-0x2ca048a0],bh
  4245fa:	and    bl,cl
  4245fc:	or     al,0x59
  4245fe:	inc    eax
  4245ff:	leave  
  424600:	sbb    edx,ebp
  424602:	shr    DWORD PTR [edi-0xa3975c0],1
  424608:	add    eax,0x9387e29f
  42460d:	je     0x42468c
  42460f:	xchg   DWORD PTR [edx],esp
  424611:	or     esp,DWORD PTR [edx-0x39df530]
  424617:	inc    esp
  424618:	sub    esi,DWORD PTR [esi-0x23e78fc1]
  42461e:	in     eax,0x37
  424620:	mov    ds:0xecd396c6,al
  424625:	inc    esi
  424626:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424628:	push   ebp
  424629:	inc    edx
  42462a:	test   DWORD PTR [eax-0x32],esi
  42462d:	js     0x424660
  42462f:	xchg   esi,eax
  424630:	jp     0x42462b
  424632:	fild   DWORD PTR [edx+edi*4]
  424635:	or     ebx,DWORD PTR [edx+0x702b0a9c]
  42463b:	push   0xc2ec4474
  424640:	mov    ch,0x48
  424642:	aas    
  424643:	xor    DWORD PTR [edx-0x28],edi
  424646:	rcl    DWORD PTR [ebp+0x2b],0x8d
  42464a:	xchg   edi,eax
  42464b:	mov    bh,BYTE PTR [ebp-0x6e]
  42464e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42464f:	dec    ecx
  424650:	xchg   ebp,eax
  424651:	ja     0x424615
  424653:	adc    eax,0xd2ff2444
  424658:	xchg   edx,eax
  424659:	js     0x424683
  42465b:	cwde   
  42465c:	xchg   esp,eax
  42465d:	jne    0x424670
  42465f:	mov    edx,ecx
  424661:	push   edx
  424662:	push   edi
  424663:	faddp  st(6),st
  424665:	xchg   edx,eax
  424666:	in     eax,dx
  424667:	inc    ebp
  424668:	jle    0x424620
  42466a:	sub    BYTE PTR [ebp+edi*4-0xb80c27f],bl
  424671:	cmp    edi,DWORD PTR [ebp+0x3b83979a]
  424677:	cmp    DWORD PTR [ebx-0x7699f42c],edi
  42467d:	cs mov ch,0xc6
  424680:	push   es
  424681:	mov    dh,0x2
  424683:	not    DWORD PTR [edx-0x77]
  424686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424687:	mov    ah,0xf3
  424689:	inc    ebp
  42468a:	push   eax
  42468b:	or     dh,ch
  42468d:	push   0x8aaf3ce0
  424692:	cmp    DWORD PTR [eax+0x49421c99],edx
  424698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424699:	imul   ecx,ebp,0xed7a2897
  42469f:	jo     0x424713
  4246a1:	xor    ebx,DWORD PTR [eax+0x5b1875ac]
  4246a7:	xchg   esp,eax
  4246a8:	mov    eax,ds:0x4fb3ee77
  4246ad:	xchg   edx,eax
  4246ae:	arpl   WORD PTR [bx+di+0x72],si
  4246b2:	sbb    edx,DWORD PTR [edx-0x3]
  4246b5:	dec    eax
  4246b6:	dec    ebx
  4246b7:	xchg   ebp,eax
  4246b8:	xor    dh,ch
  4246ba:	pop    edx
  4246bb:	shl    DWORD PTR [edi+0x642a1d31],0xd3
  4246c2:	jmp    0xce1ab42f
  4246c7:	ror    DWORD PTR [edi-0x10],cl
  4246ca:	sahf   
  4246cb:	bswap  esp
  4246cd:	mov    dl,0x67
  4246cf:	add    al,0xa6
  4246d1:	sub    eax,0x8a2116a9
  4246d6:	sbb    ch,BYTE PTR ds:0x1002c29a
  4246dc:	pop    ds
  4246dd:	ret    
  4246de:	xor    BYTE PTR [eax+0x3c],bh
  4246e1:	add    dl,BYTE PTR [esi+ecx*8]
  4246e4:	mov    ds:0xc584c3b,al
  4246e9:	sbb    DWORD PTR [ebx+0x13f15d19],edx
  4246ef:	cmp    DWORD PTR [edx-0x49],edx
  4246f2:	cli    
  4246f3:	push   es
  4246f4:	(bad)
  4246f7:	dec    esp
  4246f8:	arpl   bx,si
  4246fa:	pop    ss
  4246fb:	mov    bh,0x8c
  4246fd:	test   eax,0x66f601a6
  424702:	lea    esi,[ebx-0x46]
  424705:	xor    eax,0x8e2f7c03
  42470a:	or     eax,0xd498c730
  42470f:	adc    bl,BYTE PTR [edi+0x14b94f71]
  424715:	ds dec esi
  424717:	xchg   BYTE PTR [eax+0x6db26983],al
  42471d:	rol    DWORD PTR [eax-0x76],1
  424720:	jo     0x4246c4
  424722:	mov    eax,0x3e412917
  424727:	xor    BYTE PTR cs:[edx+0x32],bh
  42472b:	sbb    esp,DWORD PTR [edi-0x4d67ad69]
  424731:	scas   al,BYTE PTR es:[edi]
  424732:	fs sbb al,0xb
  424735:	xor    ebx,DWORD PTR [esi]
  424737:	mov    ah,0xf1
  424739:	loop   0x424762
  42473b:	lahf   
  42473c:	push   ebx
  42473d:	xor    eax,0x76b8b198
  424742:	jns    0x4247c1
  424744:	pop    edi
  424745:	adc    edi,ecx
  424747:	aam    0xcc
  424749:	jmp    0x4246de
  42474b:	outs   dx,BYTE PTR ds:[esi]
  42474c:	ror    BYTE PTR [eax-0x22a11e84],1
  424752:	je     0x4247ac
  424754:	mul    BYTE PTR [ebp+0x4a]
  424757:	or     eax,0x21ded848
  42475c:	ins    BYTE PTR es:[edi],dx
  42475d:	jnp    0x4246e3
  42475f:	aaa    
  424760:	mov    bh,0xdc
  424762:	jp     0x424754
  424764:	pusha  
  424765:	mov    ds:0x2d9d4d44,eax
  42476a:	pop    ds
  42476b:	jo     0x4247b6
  42476d:	cdq    
  42476e:	add    al,0xb0
  424770:	adc    dl,BYTE PTR [edi]
  424772:	fimul  DWORD PTR [ebp+0x58]
  424775:	jbe    0x424728
  424777:	jmp    FWORD PTR [edi]
  424779:	mov    edi,0x8fc8ee71
  42477e:	repnz adc eax,eax
  424781:	push   edx
  424783:	push   edx
  424784:	jmp    0x4247fe
  424786:	pop    edi
  424787:	lahf   
  424788:	inc    edx
  424789:	shr    DWORD PTR [eax-0x6796639e],1
  42478f:	div    DWORD PTR [edx+0x3f98ee29]
  424795:	dec    eax
  424796:	aam    0xb3
  424798:	lods   al,BYTE PTR ds:[esi]
  424799:	jmp    0xcae66690
  42479e:	ins    DWORD PTR es:[edi],dx
  42479f:	imul   ebp,DWORD PTR [esi-0x6e],0x5b03828e
  4247a6:	mov    cl,0x88
  4247a8:	xor    eax,0xf0e4979b
  4247ad:	mov    WORD PTR [ecx],ds
  4247af:	retf   
  4247b0:	sahf   
  4247b1:	iret   
  4247b2:	dec    ebx
  4247b3:	add    eax,0xb3c4cc54
  4247b8:	mov    ebx,0x8c519816
  4247bd:	dec    ebx
  4247be:	test   DWORD PTR [ebx-0x60],esi
  4247c1:	pop    DWORD PTR [eax-0x21]
  4247c4:	dec    ecx
  4247c5:	nop
  4247c6:	mov    ecx,0xeba07644
  4247cb:	mov    edi,0x70ffe347
  4247d0:	mov    esp,0x9e3aef72
  4247d5:	push   0x1b
  4247d7:	mov    dl,al
  4247d9:	not    DWORD PTR [ebx+0x4a8c4e2a]
  4247df:	retf   0xb6ce
  4247e2:	popf   
  4247e3:	mov    al,0xf3
  4247e5:	enter  0x3de,0x2a
  4247e9:	inc    ebp
  4247ea:	popf   
  4247eb:	iret   
  4247ec:	mov    cl,0xe7
  4247ee:	push   eax
  4247ef:	loopne 0x4247bd
  4247f1:	mov    ebp,0x18586e28
  4247f6:	jecxz  0x424875
  4247f8:	stc    
  4247f9:	lock ficom DWORD PTR [edi+0x7b4df6f9]
  424800:	not    BYTE PTR [ecx]
  424802:	out    dx,eax
  424803:	mov    edi,0x5cb9f62a
  424808:	inc    ecx
  424809:	push   ebp
  42480a:	dec    esp
  42480b:	mov    WORD PTR [ebp+0x7e93d7ef],es
  424811:	adc    DWORD PTR [eax+esi*4-0x3b868fc3],edx
  424818:	enter  0x50f4,0x46
  42481c:	mov    al,ds:0x39f6270d
  424821:	xor    eax,DWORD PTR [edx+eiz*8+0x67]
  424825:	pop    ebx
  424826:	jl     0x42483c
  424828:	retf   0xdb01
  42482b:	ins    BYTE PTR es:[edi],dx
  42482c:	jecxz  0x42486a
  42482e:	rol    BYTE PTR [edi-0x25],0x2b
  424832:	out    dx,eax
  424833:	pop    es
  424834:	inc    esi
  424835:	cdq    
  424836:	loop   0x42487c
  424838:	add    BYTE PTR ss:[eax],al
  42483b:	add    BYTE PTR [esi+0x74ef74ea],bh
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    ch,BYTE PTR [ebp+0x5e]
  42484a:	cmp    eax,0x1c1b63b
  42484f:	add    BYTE PTR [ebp-0x44fffffe],al
  424855:	pop    edx
  424856:	pop    ebx
  424857:	mov    bh,0x65
  424859:	ss stc 
  42485b:	sub    edi,DWORD PTR [esi]
  42485d:	sub    al,0x2
  42485f:	xor    edx,DWORD PTR [ebp+0x11]
  424862:	dec    eax
  424863:	nop
  424864:	fucomip st,st(1)
  424866:	mov    dl,0x8a
  424868:	inc    edx
  424869:	jmp    0x4248b6
  42486b:	in     eax,dx
  42486c:	dec    esp
  42486d:	pop    esi
  42486e:	xchg   edi,eax
  42486f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424870:	les    edx,FWORD PTR [edi+0x31]
  424873:	scas   eax,DWORD PTR es:[edi]
  424874:	dec    ebx
  424875:	fisubr DWORD PTR ds:[eax+0x7]
  424879:	mov    dh,BYTE PTR [ebx+0x16cbda2]
  42487f:	(bad)  
  424880:	lock dec ebp
  424882:	test   DWORD PTR [edx+0xe],ecx
  424885:	xor    eax,0x28dbca97
  42488a:	outs   dx,DWORD PTR ds:[esi]
  42488b:	or     BYTE PTR [edi],cl
  42488d:	push   ds
  42488e:	cmc    
  42488f:	pop    es
  424890:	int3   
  424891:	add    al,0x78
  424893:	or     esp,DWORD PTR [eax+0x70d7150a]
  424899:	mov    eax,ds:0x62c379b9
  42489e:	adc    BYTE PTR [ebp-0x7471e906],bh
  4248a4:	jge    0x424891
  4248a6:	add    ch,al
  4248a8:	and    eax,0x7858438b
  4248ad:	jmp    0x6023:0x5f33f9c7
  4248b4:	loop   0x4248a2
  4248b6:	push   ecx
  4248b7:	rcr    BYTE PTR [ebx],1
  4248b9:	mov    ecx,0x786e04a1
  4248be:	les    edi,FWORD PTR [edi-0x2ff7cbbe]
  4248c4:	mov    ebx,0xa75e1cf8
  4248c9:	fidiv  WORD PTR [edx-0x1e]
  4248cc:	pop    esi
  4248cd:	pop    edi
  4248ce:	shl    DWORD PTR [edi],1
  4248d0:	mov    bh,0x62
  4248d2:	and    al,0xc
  4248d4:	dec    edi
  4248d5:	xchg   ebx,eax
  4248d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248d7:	or     ebp,DWORD PTR [ebp+ebx*2+0x36]
  4248db:	push   esp
  4248dc:	aam    0xfd
  4248de:	daa    
  4248df:	mov    dl,BYTE PTR [esi]
  4248e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248e2:	mov    ecx,0xf0b124e9
  4248e7:	push   ebp
  4248e8:	lods   eax,DWORD PTR ds:[esi]
  4248e9:	or     esi,esi
  4248eb:	pushf  
  4248ec:	push   ebp
  4248ed:	fsub   DWORD PTR [edx+edi*1]
  4248f0:	data16 das 
  4248f2:	dec    eax
  4248f3:	push   0xea4e4965
  4248f8:	sub    eax,0xc29648d3
  4248fd:	or     BYTE PTR es:[eax],ch
  424900:	xor    eax,DWORD PTR [ebx-0x32]
  424903:	jmp    0x424944
  424905:	mov    dl,0x79
  424907:	fldenv [edi]
  424909:	(bad)  [ebx-0x22]
  42490c:	test   al,0x64
  42490e:	lods   eax,DWORD PTR ds:[esi]
  42490f:	pop    eax
  424910:	scas   al,BYTE PTR es:[edi]
  424911:	push   ebx
  424912:	mov    dh,0x7a
  424914:	pop    eax
  424915:	add    eax,0xdd2f7902
  42491a:	jmp    0xc3709463
  42491f:	cmp    BYTE PTR [ebx+0x3b],bh
  424922:	cmp    DWORD PTR [ecx],ebp
  424924:	jno    0x4248d0
  424926:	xchg   edi,eax
  424927:	enterw 0xccc1,0x46
  42492c:	xor    eax,0x26aa8c05
  424931:	imul   edi,ebx,0xffffffe1
  424934:	test   DWORD PTR [edi+edx*8+0x1e],ebx
  424938:	sub    ebp,0x4d
  42493b:	fisub  WORD PTR [eax-0x53aa1c45]
  424941:	jmp    0x42494f
  424943:	dec    ebp
  424944:	pop    eax
  424945:	mov    bl,0x40
  424947:	inc    esi
  424948:	dec    edi
  424949:	adc    dh,BYTE PTR [edx+0x64]
  42494c:	jno    0x4249a2
  42494e:	inc    ebp
  42494f:	pop    eax
  424950:	jmp    0x9ab5ca46
  424955:	sub    BYTE PTR [esi+0x217da999],ch
  42495b:	xchg   DWORD PTR [edi+0x5f0f12ee],edi
  424961:	int3   
  424962:	in     eax,dx
  424963:	aas    
  424964:	test   DWORD PTR [edi+0x27d368f],ebp
  42496a:	jl     0x42492e
  42496c:	mov    dl,0xbc
  42496e:	dec    eax
  42496f:	pop    ebp
  424970:	xor    al,0x2e
  424972:	jg     0x4249a5
  424974:	xchg   DWORD PTR [ebx-0x53ef6420],eax
  42497a:	rcr    ecx,cl
  42497c:	dec    esi
  42497d:	into   
  42497e:	mov    ch,0x57
  424980:	cmc    
  424981:	fisubr DWORD PTR [edx]
  424983:	fsub   DWORD PTR [ebp-0x35385a4b]
  424989:	sbb    cl,0xec
  42498c:	sub    bh,BYTE PTR [ebp+0x398f8a54]
  424992:	xor    edx,DWORD PTR [ecx+0x45]
  424995:	sbb    eax,0x122a450e
  42499a:	inc    edx
  42499b:	adc    eax,0xd7fa6e72
  4249a0:	loopne 0x424947
  4249a2:	stos   BYTE PTR es:[edi],al
  4249a3:	mov    ds:0x947f5f71,al
  4249a8:	mov    ebp,0x2ee0d859
  4249ad:	int3   
  4249ae:	loopne 0x4249c0
  4249b0:	and    al,dl
  4249b2:	or     BYTE PTR [ebx+0x2521d4fd],0x4d
  4249b9:	mov    eax,ds:0xe12a2b23
  4249be:	aad    0x6b
  4249c0:	mov    ds:0x3900ab9d,al
  4249c5:	and    al,0x1c
  4249c7:	repnz test al,0xf6
  4249ca:	or     al,0x26
  4249cc:	out    0x90,eax
  4249ce:	cmp    BYTE PTR cs:[ebx+0x7c622026],cl
  4249d5:	and    cl,BYTE PTR [eax-0x3371935d]
  4249db:	daa    
  4249dc:	rcr    BYTE PTR [edx],1
  4249de:	xor    al,0x44
  4249e0:	mov    edi,0x9859cb66
  4249e5:	and    ch,BYTE PTR [esi]
  4249e7:	out    dx,eax
  4249e8:	adc    eax,0xb187a2bb
  4249ed:	hlt    
  4249ee:	iret   
  4249ef:	pop    eax
  4249f0:	sar    ecx,0xd0
  4249f3:	ins    DWORD PTR es:[edi],dx
  4249f4:	(bad)  
  4249f6:	adc    edx,DWORD PTR [ecx]
  4249f8:	lea    edx,[esi+0x71]
  4249fb:	push   ss
  4249fc:	out    dx,al
  4249fd:	mov    eax,0x42b36275
  424a02:	test   eax,0xb121503a
  424a07:	dec    ecx
  424a08:	jne    0x424a4c
  424a0a:	(bad)  
  424a0b:	scas   al,BYTE PTR es:[edi]
  424a0c:	jmp    0x4249d5
  424a0e:	push   ebp
  424a0f:	loope  0x424a7a
  424a11:	cld    
  424a12:	pop    ss
  424a13:	imul   ebp,ebp,0x996a09f9
  424a19:	jb     0x424a40
  424a1b:	shl    DWORD PTR [ebx-0x467493],1
  424a21:	inc    ebx
  424a22:	lahf   
  424a23:	dec    ebp
  424a24:	pop    esi
  424a25:	jo     0x4249e4
  424a27:	mov    edx,0x3fefc73e
  424a2c:	add    eax,0x121deec9
  424a31:	fwait
  424a32:	inc    ebx
  424a33:	xor    eax,0xda7c41b2
  424a38:	sahf   
  424a39:	jp     0x424a96
  424a3b:	adc    cl,dl
  424a3d:	das    
  424a3e:	xor    al,0xe5
  424a40:	(bad)  
  424a41:	and    ebx,DWORD PTR [ebx+0x5a]
  424a44:	call   0xee0c:0x3886b5ef
  424a4b:	(bad)
  424a4e:	mov    ds:0xedba0512,al
  424a53:	das    
  424a54:	push   esp
  424a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a56:	lds    esi,FWORD PTR [edi-0x262da0d0]
  424a5c:	aaa    
  424a5d:	xchg   ebx,eax
  424a5e:	mov    cl,0xbb
  424a60:	mov    ds:0xa12e852f,eax
  424a65:	pop    eax
  424a66:	or     eax,0x8e29a4fd
  424a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a6c:	popf   
  424a6d:	js     0x424a0f
  424a6f:	stos   DWORD PTR es:[edi],eax
  424a70:	sbb    eax,0x36b49b67
  424a75:	mov    ds:0x9e686fe1,al
  424a7a:	test   al,0x21
  424a7c:	sub    DWORD PTR [edx],ebx
  424a7e:	shl    DWORD PTR [esi+0x2c1303a3],cl
  424a84:	inc    ebp
  424a85:	dec    ebp
  424a86:	inc    edx
  424a87:	hlt    
  424a88:	pushf  
  424a89:	and    DWORD PTR [esi],ebx
  424a8b:	(bad)  
  424a8c:	jae    0x424a4e
  424a8e:	dec    eax
  424a8f:	leave  
  424a90:	xor    al,0x5b
  424a92:	imul   ecx,DWORD PTR [edx+0x7],0xfffffffe
  424a96:	enter  0x6b4c,0xf
  424a9a:	pop    esp
  424a9b:	(bad)  
  424a9c:	es call 0xbe8d2f63
  424aa2:	test   al,0xaf
  424aa4:	inc    ebx
  424aa5:	and    ah,BYTE PTR [ebx-0x69]
  424aa8:	mov    edi,DWORD PTR [ebx+0x294c767a]
  424aae:	std    
  424aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ab0:	jecxz  0x424aed
  424ab2:	call   FWORD PTR [ecx+0x26]
  424ab5:	pusha  
  424ab6:	out    dx,eax
  424ab7:	dec    esp
  424ab8:	xchg   DWORD PTR [edi],edi
  424aba:	neg    ebp
  424abc:	mov    esi,0x358f86e2
  424ac1:	nop
  424ac2:	mov    eax,ds:0xf7c2f98d
  424ac8:	imul   eax,DWORD PTR [esi+0x30],0x8434decd
  424acf:	ins    DWORD PTR es:[edi],dx
  424ad0:	sub    al,BYTE PTR [ecx+0x239ed449]
  424ad6:	dec    edx
  424ad7:	xchg   DWORD PTR [ebp+0x0],eax
  424ada:	add    BYTE PTR [eax],al
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    DWORD PTR [esi],ecx
  424ae9:	mov    ch,0xf4
  424aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aec:	cmp    eax,esp
  424aee:	add    DWORD PTR [eax],eax
  424af0:	test   DWORD PTR [edx],eax
  424af2:	add    BYTE PTR [eax],al
  424af4:	lea    esi,[ebx]
  424af6:	popf   
  424af7:	push   ecx
  424af8:	sahf   
  424af9:	push   ss
  424afa:	div    ah
  424afc:	push   ecx
  424afd:	imul   ebx,DWORD PTR [esi+0x13f81a65],0x36b129df
  424b07:	into   
  424b08:	sbb    dl,BYTE PTR [edx]
  424b0a:	xchg   edx,eax
  424b0b:	adc    BYTE PTR [edi],dh
  424b0d:	les    ecx,FWORD PTR [ebx+0x3ab7861f]
  424b13:	xor    eax,ecx
  424b15:	mov    ds:0x6b68d5a3,eax
  424b1a:	pop    ecx
  424b1b:	cld    
  424b1c:	sbb    eax,0xbffa1037
  424b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b22:	lods   al,BYTE PTR ds:[esi]
  424b23:	push   esp
  424b24:	lahf   
  424b25:	pop    ds
  424b26:	or     edx,esp
  424b28:	in     al,dx
  424b29:	retf   0x6370
  424b2c:	cmp    al,0x7d
  424b2e:	das    
  424b2f:	cmc    
  424b30:	pop    ebp
  424b31:	out    dx,eax
  424b32:	fistp  DWORD PTR [edi+0x7df724fa]
  424b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b39:	pop    ss
  424b3a:	and    eax,0xd720b4bb
  424b3f:	jae    0x424ae2
  424b41:	dec    esp
  424b42:	jns    0x424b4b
  424b44:	xor    dh,al
  424b46:	adc    DWORD PTR [esi],0x6530bea0
  424b4c:	add    eax,0x1d2abdcc
  424b51:	in     eax,0x49
  424b53:	mov    WORD PTR [ebx],fs
  424b55:	ja     0x424b2e
  424b57:	sub    eax,0xc5029fd9
  424b5c:	mov    edx,0xce27e5fc
  424b61:	ret    0x3a07
  424b64:	and    edi,ebx
  424b66:	cmc    
  424b67:	add    eax,0x6b2fd95f
  424b6c:	cmp    DWORD PTR [ebp+0x79894eb5],esp
  424b72:	jge    0x424b19
  424b74:	retf   
  424b75:	jmp    0xe79e0dc6
  424b7a:	test   DWORD PTR cs:[eax+0x59],eax
  424b7e:	retf   0x43b8
  424b81:	inc    ebx
  424b82:	pop    ss
  424b83:	call   0xe378:0xbab91bd2
  424b8a:	outs   dx,DWORD PTR ds:[esi]
  424b8b:	sti    
  424b8c:	and    eax,0xae7fc890
  424b91:	dec    ecx
  424b92:	xchg   ebx,eax
  424b93:	in     al,dx
  424b94:	lods   eax,DWORD PTR ds:[esi]
  424b95:	mov    esi,0x409a67fa
  424b9a:	sbb    bh,ah
  424b9c:	sub    esi,DWORD PTR ds:0xb953a94c
  424ba2:	rol    BYTE PTR ds:0x36a3d662,0xdf
  424ba9:	test   dl,ah
  424bab:	dec    esp
  424bac:	test   BYTE PTR [ecx],ch
  424bae:	aad    0x7c
  424bb0:	mov    bh,dl
  424bb2:	retw   
  424bb4:	push   eax
  424bb5:	sub    al,0x41
  424bb7:	jns    0x424c1b
  424bb9:	adc    DWORD PTR [edx-0x16e91edf],0xb068e49c
  424bc3:	scas   al,BYTE PTR es:[edi]
  424bc4:	cs cmp al,0x9a
  424bc7:	hlt    
  424bc8:	aaa    
  424bc9:	sar    dl,cl
  424bcb:	loop   0x424c04
  424bcd:	inc    eax
  424bce:	jp     0x424b81
  424bd0:	cmp    eax,0xe9993086
  424bd5:	push   esi
  424bd6:	dec    ebp
  424bd7:	jle    0x424c11
  424bd9:	mov    edi,0xad14d25b
  424bde:	or     BYTE PTR [edi],dl
  424be0:	(bad)  
  424be2:	loop   0x424bfd
  424be4:	or     al,0xa8
  424be6:	mov    cl,0x7c
  424be8:	and    DWORD PTR [ebx+eiz*1-0x32],ecx
  424bec:	pop    eax
  424bed:	push   eax
  424bee:	loop   0x424b84
  424bf0:	cld    
  424bf1:	push   esi
  424bf2:	scas   eax,DWORD PTR es:[edi]
  424bf3:	cwde   
  424bf4:	loope  0x424c06
  424bf6:	and    dl,0x2b
  424bf9:	push   ebp
  424bfa:	ret    
  424bfb:	aam    0x8
  424bfd:	cs ja  0x424b93
  424c00:	aam    0x9
  424c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c03:	mov    ecx,0xab9f1711
  424c08:	enter  0xc372,0x2
  424c0c:	js     0x424c3d
  424c0e:	jnp    0x424c5f
  424c10:	mov    ?,WORD PTR [ecx-0x6e3e8136]
  424c16:	lods   al,BYTE PTR ds:[esi]
  424c17:	pusha  
  424c18:	mov    edi,0x2b4a0342
  424c1d:	std    
  424c1e:	(bad)  
  424c1f:	popf   
  424c20:	icebp  
  424c21:	pop    ds
  424c22:	std    
  424c23:	xor    DWORD PTR [ebx+0x50653d5d],esp
  424c29:	outs   dx,BYTE PTR ds:[esi]
  424c2a:	mov    BYTE PTR [edx-0x13],dl
  424c2d:	mov    esp,0x89d5d2db
  424c32:	pop    ebx
  424c33:	mov    al,0xcd
  424c35:	dec    eax
  424c36:	les    esi,FWORD PTR ds:0xbd4f5fa5
  424c3c:	add    eax,esp
  424c3e:	mov    esi,0x60557cdd
  424c43:	jae    0x424c60
  424c45:	mov    al,BYTE PTR [ecx+0x7911c63e]
  424c4b:	sub    edi,DWORD PTR [edx+0x72]
  424c4e:	push   eax
  424c4f:	sbb    BYTE PTR [eax],0x6b
  424c52:	cmp    al,BYTE PTR [eax]
  424c54:	cld    
  424c55:	and    eax,DWORD PTR [ebx+0xf]
  424c58:	loope  0x424cb9
  424c5a:	ret    0x423c
  424c5d:	es xor al,0xda
  424c60:	cmp    dh,BYTE PTR [esi+0x65]
  424c63:	push   es
  424c64:	adc    DWORD PTR [eax-0x6379401b],esp
  424c6a:	fdivr  DWORD PTR [esp+ebx*1-0x18734ffa]
  424c71:	(bad)  
  424c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c73:	pop    ebp
  424c74:	iret   
  424c75:	xchg   esp,eax
  424c76:	xchg   esi,eax
  424c77:	cmp    edi,DWORD PTR [ecx-0x30]
  424c7a:	mov    edx,0x410f890c
  424c7f:	jmp    0x27cf4bc
  424c84:	shr    BYTE PTR [edx+ebx*4+0x1a],cl
  424c88:	mov    ebx,0x8c60225c
  424c8d:	out    dx,eax
  424c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c8f:	pop    edx
  424c90:	rol    BYTE PTR [eax+0x40],cl
  424c93:	mov    WORD PTR [ebp-0x3092093b],gs
  424c99:	push   ds
  424c9a:	inc    eax
  424c9b:	stc    
  424c9c:	mov    ebx,0x6ca4e25d
  424ca1:	dec    edx
  424ca2:	enter  0x596,0x9a
  424ca6:	aaa    
  424ca7:	iret   
  424ca8:	scas   eax,DWORD PTR es:[edi]
  424ca9:	jp     0x424cde
  424cab:	jmp    0xd6f35340
  424cb0:	mov    ah,ch
  424cb2:	sbb    eax,0x74407549
  424cb7:	test   al,0x5d
  424cb9:	cwde   
  424cba:	pop    ebx
  424cbb:	mov    cl,0xe5
  424cbd:	jle    0x424c6f
  424cbf:	leave  
  424cc0:	sbb    bh,bl
  424cc2:	das    
  424cc3:	mov    eax,ds:0x5d8b5703
  424cc8:	push   es
  424cc9:	fs and bl,al
  424ccc:	std    
  424ccd:	add    al,0x47
  424ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cd0:	stos   BYTE PTR es:[edi],al
  424cd1:	jmp    0x424cd0
  424cd3:	pop    eax
  424cd4:	jne    0x424d2a
  424cd6:	sbb    BYTE PTR [esp+ebp*2+0x73],ch
  424cda:	sub    al,0xaa
  424cdc:	sbb    al,0x29
  424cde:	ins    DWORD PTR es:[edi],dx
  424cdf:	(bad)  
  424ce1:	mov    esi,0x700ed0b3
  424ce6:	loopne 0x424cce
  424ce8:	cmp    DWORD PTR [eax+0x19],ebx
  424ceb:	jns    0x424c9a
  424ced:	mov    ebp,0x17b8ebc3
  424cf2:	adc    BYTE PTR [esp+esi*4+0x18bbe7a3],bh
  424cf9:	enter  0xf271,0xf4
  424cfd:	stos   DWORD PTR es:[edi],eax
  424cfe:	pop    esi
  424cff:	dec    esp
  424d00:	pop    ss
  424d01:	fstp   DWORD PTR [edi-0x5b6da27f]
  424d07:	push   ebp
  424d08:	test   eax,0xc6463935
  424d0d:	rol    BYTE PTR [esp+eax*8+0x23fe43c9],1
  424d14:	call   DWORD PTR [esi+edx*2+0x27]
  424d18:	icebp  
  424d19:	dec    ebx
  424d1b:	xor    esi,eax
  424d1d:	adc    edi,DWORD PTR [edx+0x50b9045]
  424d23:	pop    esp
  424d24:	adc    al,0x46
  424d26:	test   DWORD PTR [edi+0x56d79ca],esi
  424d2c:	cmp    eax,0x938cc74a
  424d31:	mov    ebx,0xc53b4237
  424d36:	lock push edx
  424d38:	mov    WORD PTR [eax+0x79],cs
  424d3b:	dec    ebx
  424d3c:	inc    esp
  424d3d:	dec    eax
  424d3e:	jmp    0x424d02
  424d40:	jmp    0x424d94
  424d42:	pop    eax
  424d43:	(bad)  
  424d44:	sub    eax,0xd3c0bc44
  424d49:	mov    dh,0xde
  424d4b:	or     DWORD PTR [edi-0x39deb9c1],ebx
  424d51:	imul   ecx,DWORD PTR [esi],0x6199d979
  424d57:	lahf   
  424d58:	inc    ebp
  424d59:	jae    0x424d03
  424d5b:	xor    ecx,DWORD PTR [ebp-0x40]
  424d5e:	inc    esp
  424d5f:	jl     0x424da9
  424d61:	pop    ebp
  424d62:	dec    ecx
  424d63:	push   edi
  424d64:	jbe    0x424db9
  424d66:	inc    edx
  424d67:	arpl   si,si
  424d69:	ds mov ebp,0x4cfe043b
  424d6f:	jne    0x424ddb
  424d71:	in     eax,0xd6
  424d73:	dec    eax
  424d74:	dec    ecx
  424d75:	mov    ecx,0x4618d6
  424d7a:	add    BYTE PTR [eax],al
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424de6
  424d89:	adc    DWORD PTR [esp+esi*1+0x1c6c0],eax
  424d90:	test   DWORD PTR [edx],eax
  424d92:	add    BYTE PTR [eax],al
  424d94:	jmp    0x424dfa
  424d96:	adc    al,BYTE PTR [edx]
  424d98:	mov    BYTE PTR [edi],ah
  424d9a:	(bad)  [ecx-0x1f41f8d7]
  424da0:	loope  0x424d34
  424da2:	mov    ?,WORD PTR [eax+0x65]
  424da5:	add    BYTE PTR [edx],dh
  424da7:	dec    edx
  424da8:	inc    ebx
  424da9:	and    eax,0x56ff99a7
  424dae:	in     eax,0xc8
  424db0:	push   cs
  424db1:	jl     0x424d37
  424db3:	jo     0x424e28
  424db5:	dec    esi
  424db6:	pushf  
  424db7:	xlat   BYTE PTR ds:[ebx]
  424db8:	mov    dl,0x32
  424dba:	sbb    BYTE PTR [esi+eax*2],bh
  424dbd:	jmp    0x9f3a:0x33e80e38
  424dc4:	ja     0x424e0c
  424dc6:	cmp    al,0x58
  424dc8:	hlt    
  424dc9:	add    bh,BYTE PTR [edi+0x1]
  424dcc:	mov    dl,0xb9
  424dce:	inc    esp
  424dcf:	js     0x424e41
  424dd1:	ret    0x9246
  424dd4:	ja     0x424dd6
  424dd6:	jns    0x424df4
  424dd8:	out    dx,eax
  424dd9:	mov    ds:0x60619a03,al
  424dde:	out    0xf3,al
  424de0:	repz sub dh,bl
  424de3:	xor    ecx,edx
  424de5:	sti    
  424de6:	into   
  424de7:	mov    ecx,0x791221a7
  424dec:	out    dx,eax
  424ded:	mov    ebp,0x6e6fabdc
  424df2:	inc    esp
  424df3:	jmp    0x424e6d
  424df5:	scas   eax,DWORD PTR es:[edi]
  424df6:	inc    esp
  424df7:	pop    ss
  424df8:	pop    ds
  424df9:	adc    BYTE PTR ds:0xa0a554a5,0xb5
  424e00:	(bad)  [esi+ebp*8-0x4f2adfc7]
  424e07:	mov    cl,0x5d
  424e09:	fist   DWORD PTR [esi]
  424e0b:	cmp    BYTE PTR [edi-0x6abb0591],0x61
  424e12:	cmp    al,0x63
  424e14:	ins    DWORD PTR es:[edi],dx
  424e15:	test   DWORD PTR [esi-0x3e],edi
  424e18:	or     dl,BYTE PTR [edi+0x5e]
  424e1b:	push   edi
  424e1c:	mov    esp,0x853ed131
  424e21:	cmc    
  424e22:	mov    dl,0xe1
  424e24:	arpl   WORD PTR [ecx],di
  424e26:	xor    DWORD PTR [esi+0x2145ba40],edi
  424e2c:	xchg   ecx,eax
  424e2d:	stos   BYTE PTR es:[edi],al
  424e2e:	add    DWORD PTR [edx+0x7c],ebx
  424e31:	pop    esi
  424e32:	fs jl  0x424dee
  424e35:	jmp    0x424e55
  424e37:	jo     0x424e15
  424e39:	out    dx,al
  424e3a:	xchg   BYTE PTR [ecx+esi*1-0x3],al
  424e3e:	push   ss
  424e3f:	mov    bh,0x46
  424e41:	dec    esp
  424e42:	cmp    al,0x9
  424e44:	adc    DWORD PTR [eax],esp
  424e46:	(bad)  
  424e48:	mov    ds:0x946f8127,eax
  424e4d:	daa    
  424e4e:	aas    
  424e4f:	retf   0x6f09
  424e52:	int3   
  424e53:	ins    DWORD PTR es:[edi],dx
  424e54:	outs   dx,DWORD PTR ds:[esi]
  424e55:	inc    edx
  424e56:	pop    ebx
  424e57:	or     BYTE PTR [eax+0x44],0x6c
  424e5b:	stc    
  424e5c:	gs lock jl 0x424de6
  424e60:	xchg   edi,eax
  424e61:	mov    esi,0xbec66636
  424e66:	pop    eax
  424e67:	and    dl,al
  424e69:	call   0xb539b8bb
  424e6e:	(bad)  
  424e70:	aad    0xa8
  424e72:	sbb    edx,0x24
  424e75:	ror    DWORD PTR [esi+eiz*4],0x7b
  424e79:	xchg   edx,eax
  424e7a:	outs   dx,BYTE PTR ds:[esi]
  424e7b:	ror    BYTE PTR [ebx+0x63],cl
  424e7e:	mov    ecx,DWORD PTR [ecx-0x6a99813c]
  424e84:	out    0x5,eax
  424e86:	ret    
  424e87:	cmp    DWORD PTR [edx-0x2caa03cc],esi
  424e8d:	and    dh,dh
  424e8f:	out    dx,al
  424e90:	fmul   DWORD PTR [edi-0x4644d670]
  424e96:	mov    ebp,0x40213af2
  424e9b:	mov    esi,0x542826a7
  424ea0:	mov    esi,0x85315d57
  424ea5:	and    edx,edx
  424ea7:	mul    edx
  424ea9:	ficom  WORD PTR [ebx]
  424eab:	dec    esp
  424eac:	xchg   edi,eax
  424ead:	gs cmp al,0x78
  424eb0:	and    eax,0x229b3e10
  424eb5:	jne    0x424f06
  424eb7:	xchg   ebx,eax
  424eb8:	sar    DWORD PTR [ebx-0x21f923e2],1
  424ebe:	fiadd  DWORD PTR [edi+0x3bad47ab]
  424ec4:	popa   
  424ec5:	push   ss
  424ec6:	inc    eax
  424ec7:	jno    0x424f1e
  424ec9:	jg     0x424f42
  424ecb:	cmp    ebp,esp
  424ecd:	xor    bh,BYTE PTR es:[esi+0x6f]
  424ed1:	stc    
  424ed2:	mov    WORD PTR [eax-0x79235c28],cs
  424ed8:	pusha  
  424ed9:	sbb    cl,0x7d
  424edc:	xor    eax,0xd0d06ec8
  424ee1:	sbb    DWORD PTR [ecx-0x7bdc1176],eax
  424ee7:	int    0x5e
  424ee9:	xchg   ebx,eax
  424eea:	clc    
  424eeb:	fsubp  st(6),st
  424eed:	into   
  424eee:	out    0x81,al
  424ef0:	ins    DWORD PTR es:[edi],dx
  424ef1:	pop    DWORD PTR [ebp+ecx*2+0x39]
  424ef5:	mov    ebx,0xe1ee865d
  424efa:	mov    eax,0x6af75bdd
  424eff:	clc    
  424f00:	mov    ah,0xba
  424f02:	idiv   DWORD PTR [ebp+0x1a84749f]
  424f08:	dec    edx
  424f09:	cmp    ebp,DWORD PTR [ebx+esi*8+0x959f83d]
  424f10:	stc    
  424f11:	inc    edi
  424f12:	inc    ebp
  424f13:	mov    dl,0xc3
  424f15:	push   ebx
  424f16:	jmp    0x424f87
  424f18:	xor    BYTE PTR gs:[ebp-0x30],0x2d
  424f1d:	stos   BYTE PTR es:[edi],al
  424f1e:	arpl   WORD PTR [eax+0x4d43717e],ax
  424f24:	(bad)  
  424f25:	jnp    0x424f4b
  424f27:	mov    edi,0x81369a52
  424f2c:	adc    eax,DWORD PTR [ebx]
  424f2e:	stos   BYTE PTR es:[edi],al
  424f2f:	outs   dx,DWORD PTR ds:[esi]
  424f30:	ffreep st(4)
  424f32:	je     0x424f6a
  424f34:	imul   esp,DWORD PTR [eax],0x3e
  424f37:	imul   ebp,DWORD PTR [ebp+0x312e1491],0xffffffb7
  424f3e:	mov    al,0x55
  424f40:	js     0x424f11
  424f42:	std    
  424f43:	push   ebx
  424f44:	adc    eax,0x6099647b
  424f49:	call   0x4ae98ce
  424f4e:	fsub   QWORD PTR [ecx]
  424f50:	mov    ecx,0x8d7e893f
  424f55:	push   esp
  424f56:	xor    BYTE PTR [eax-0x4cbaab7e],ah
  424f5c:	mov    eax,0x3c0163c0
  424f61:	xor    edi,DWORD PTR [eax]
  424f63:	add    BYTE PTR [ecx+0x53],bl
  424f66:	xor    DWORD PTR [edx],ebx
  424f68:	push   ebx
  424f69:	cmp    al,bl
  424f6b:	dec    ecx
  424f6c:	neg    dl
  424f6e:	jge    0x424f56
  424f70:	fcmovne st,st(7)
  424f72:	icebp  
  424f73:	imul   DWORD PTR [ebp-0x1320bd0c]
  424f79:	leave  
  424f7a:	pop    ecx
  424f7b:	popf   
  424f7c:	daa    
  424f7d:	xor    DWORD PTR [ebp+0x593c362d],esp
  424f83:	jg     0x424f99
  424f85:	push   0x4d
  424f87:	jge    0x424f32
  424f89:	sub    al,0x6c
  424f8b:	pop    ebx
  424f8c:	mov    bl,0xbf
  424f8e:	jnp    0x424fad
  424f90:	mov    ds:0xbb34903e,al
  424f95:	aaa    
  424f96:	push   esi
  424f97:	in     eax,dx
  424f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f99:	push   edi
  424f9a:	outs   dx,BYTE PTR ds:[esi]
  424f9b:	fs stos DWORD PTR es:[edi],eax
  424f9d:	dec    esp
  424f9e:	cmp    BYTE PTR [ecx-0x56],dl
  424fa1:	dec    esi
  424fa2:	xchg   esi,eax
  424fa3:	jno    0x424fa3
  424fa5:	pop    es
  424fa6:	stos   DWORD PTR es:[edi],eax
  424fa7:	outs   dx,DWORD PTR ds:[esi]
  424fa8:	cli    
  424fa9:	shl    DWORD PTR [ebx],0x1f
  424fac:	jp     0x42501a
  424fae:	lods   al,BYTE PTR ds:[esi]
  424faf:	inc    esi
  424fb0:	and    al,0xd7
  424fb2:	fstp   st(0)
  424fb4:	add    al,0x29
  424fb6:	or     BYTE PTR [esi],0x78
  424fb9:	push   esp
  424fba:	inc    edi
  424fbb:	(bad)  
  424fbc:	cs lahf 
  424fbe:	arpl   WORD PTR [esi+0x1e],di
  424fc1:	xchg   edi,eax
  424fc2:	(bad)  
  424fc3:	push   0xfbd52e90
  424fc8:	push   ebp
  424fc9:	mov    al,0xe9
  424fcb:	add    cl,ch
  424fcd:	xor    eax,0xc18d75dc
  424fd2:	dec    edi
  424fd3:	jnp    0x425040
  424fd5:	add    DWORD PTR [eax-0x3a65e94f],edi
  424fdb:	sti    
  424fdc:	xchg   ebx,eax
  424fdd:	inc    esp
  424fde:	(bad)  
  424fdf:	mov    edi,0xa26efb2c
  424fe4:	fstp   DWORD PTR [esi+0x23cbad4e]
  424fea:	inc    edx
  424feb:	(bad)  
  424fec:	fnstcw WORD PTR [ecx-0x38]
  424fef:	(bad)  
  424ff0:	add    al,0x41
  424ff2:	es xchg esi,eax
  424ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ff5:	and    eax,0x37b5f7b7
  424ffa:	xchg   edi,eax
  424ffb:	out    dx,eax
  424ffc:	dec    ebx
  424ffd:	sti    
  424ffe:	cmp    eax,DWORD PTR ds:0x76b36cf9
  425004:	enter  0xe157,0x47
  425008:	cmp    eax,0x3ae9cd2b
  42500d:	adc    BYTE PTR [edx+0x1d],0x7c
  425011:	fiadd  DWORD PTR [eax]
  425013:	cdq    
  425014:	xor    esp,DWORD PTR [eax+0x4e]
  425017:	sbb    eax,esp
  425019:	add    BYTE PTR [eax],al
  42501b:	add    BYTE PTR [edx-0x79],cl
  42501e:	push   edx
  42501f:	dec    esp
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0xaa4ae594
  42502c:	inc    ebp
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	test   DWORD PTR [edx],eax
  425032:	add    BYTE PTR [eax],al
  425034:	mov    DWORD PTR [ecx+0x2c0292ea],edx
  42503a:	imul   esp,DWORD PTR [ebx],0x59d49dfb
  425040:	add    al,0x74
  425042:	loop   0x425071
  425044:	push   esp
  425045:	call   0x6e92f32b
  42504a:	dec    eax
  42504b:	jnp    0x42503f
  42504d:	loop   0x4250cb
  42504f:	out    0xea,al
  425051:	in     eax,dx
  425052:	adc    bh,cl
  425054:	add    edx,DWORD PTR [esi+0x48]
  425057:	fcom   st(0)
  425059:	mov    esi,0xe6235387
  42505e:	(bad)  
  42505f:	dec    eax
  425060:	scas   eax,DWORD PTR es:[edi]
  425061:	loope  0x42503c
  425063:	jecxz  0x42507b
  425065:	xchg   edx,eax
  425066:	popf   
  425067:	bswap  edx
  425069:	xchg   ebp,edi
  42506b:	pop    ds
  42506c:	int    0x8a
  42506e:	add    al,0xe1
  425070:	mov    eax,ds:0x6c2281df
  425075:	cmp    edi,0xffffffe7
  425078:	xor    cl,0xa5
  42507b:	mov    al,0xaf
  42507d:	sbb    al,0x4d
  42507f:	cmp    DWORD PTR [ecx-0x4d1abc32],0xffffffd4
  425086:	and    ah,BYTE PTR [edx]
  425088:	jb     0x425011
  42508a:	jle    0x4250e8
  42508c:	out    0x8b,eax
  42508e:	adc    dh,ah
  425090:	jns    0x4250e7
  425092:	jno    0x42504a
  425094:	shr    edx,cl
  425096:	ins    BYTE PTR es:[edi],dx
  425097:	pop    ebx
  425098:	dec    esi
  425099:	dec    eax
  42509a:	sbb    DWORD PTR [eax],0x55
  42509d:	push   ss
  42509e:	push   ss
  42509f:	cli    
  4250a0:	sbb    edi,DWORD PTR [edx+eiz*1-0x9]
  4250a4:	dec    DWORD PTR [ebp+0x6c]
  4250a7:	or     eax,0x32ecfcb6
  4250ac:	inc    esi
  4250ad:	cmp    DWORD PTR [ebx+0x5c],edi
  4250b0:	cld    
  4250b1:	push   ss
  4250b2:	jp     0x4250de
  4250b4:	inc    esp
  4250b5:	pop    ss
  4250b6:	jne    0x425081
  4250b8:	ss in  eax,dx
  4250ba:	xchg   ebp,eax
  4250bb:	dec    esi
  4250bc:	inc    edi
  4250bd:	adc    ch,bl
  4250bf:	xchg   edx,eax
  4250c0:	cmp    al,0x39
  4250c2:	repnz sub esp,ecx
  4250c5:	rol    BYTE PTR [edi-0x3d187a1b],0x1e
  4250cc:	pop    edi
  4250cd:	popa   
  4250ce:	adc    esi,eax
  4250d0:	cmp    BYTE PTR ds:0x70533656,ah
  4250d6:	jnp    0x4250d2
  4250d8:	cdq    
  4250d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250db:	aas    
  4250dc:	jns    0x42512a
  4250de:	sbb    dl,bl
  4250e0:	clc    
  4250e1:	and    eax,0xb546322a
  4250e6:	rol    DWORD PTR [edx],1
  4250e8:	jecxz  0x425108
  4250ea:	loope  0x42506e
  4250ec:	mov    WORD PTR [eax-0x6661b3dc],fs
  4250f2:	icebp  
  4250f3:	gs repz dec ebp
  4250f6:	xchg   BYTE PTR [edx+0x21fa1f9e],dl
  4250fc:	mov    ebx,0xacc430e5
  425101:	popa   
  425102:	in     al,0x48
  425104:	lahf   
  425105:	and    bh,dh
  425107:	xchg   ebx,eax
  425108:	dec    ebp
  425109:	sub    eax,0xdb7202d6
  42510e:	out    dx,eax
  42510f:	dec    ecx
  425110:	or     cl,ch
  425112:	push   0xfffffff7
  425114:	stos   BYTE PTR es:[edi],al
  425115:	(bad)  
  425116:	cmp    ah,BYTE PTR [edx]
  425118:	dec    edi
  425119:	ja     0x4250a2
  42511b:	sub    eax,0x1ea952c3
  425120:	mov    ch,0x34
  425122:	out    dx,al
  425123:	psubq  mm1,QWORD PTR [eax-0x4a]
  425127:	pop    eax
  425128:	inc    ebx
  425129:	mov    DWORD PTR [ecx-0x65],eax
  42512c:	jne    0x42515a
  42512e:	sub    al,0x9
  425130:	lods   al,BYTE PTR ds:[esi]
  425131:	xchg   DWORD PTR [ecx-0x62],edx
  425134:	jg     0x425122
  425136:	adc    eax,0x466ac96d
  42513b:	cmp    bh,BYTE PTR [eax+0x66267612]
  425141:	sub    eax,0x78c0ce65
  425146:	sbb    eax,0xf64e9e1e
  42514b:	cmp    eax,0x87019792
  425150:	pop    edx
  425151:	fcomp  DWORD PTR [ebx+0x45]
  425154:	lods   eax,DWORD PTR ds:[esi]
  425155:	sbb    eax,0xe7c14846
  42515a:	bound  ebx,QWORD PTR ds:0xd337332a
  425160:	add    BYTE PTR [ecx],bl
  425162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425163:	push   ds
  425164:	mov    WORD PTR [esi-0x35],?
  425167:	xchg   esp,eax
  425168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425169:	push   ds
  42516a:	mov    al,ds:0xea73aba0
  42516f:	stc    
  425170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425171:	push   edi
  425172:	out    dx,al
  425173:	jmp    0x425101
  425175:	rcr    DWORD PTR [ebx],cl
  425177:	mov    bh,0x6
  425179:	push   0x42b48619
  42517e:	inc    eax
  42517f:	aas    
  425180:	inc    esp
  425181:	mov    al,ds:0xcea2e0fa
  425186:	loopne 0x4251d5
  425188:	shl    BYTE PTR [ecx+0x3d],1
  42518b:	mov    ecx,0xd354f449
  425190:	inc    BYTE PTR [ebp+0x53e353ec]
  425196:	add    DWORD PTR [edx+esi*1],esi
  425199:	pop    esi
  42519a:	push   ecx
  42519b:	imul   esp,DWORD PTR [eax-0xd9305db],0x69
  4251a2:	jmp    0x84ac:0x9533b37a
  4251a9:	jb     0x42514b
  4251ab:	dec    esp
  4251ac:	inc    eax
  4251ad:	pop    ebx
  4251ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251af:	gs mov esi,0x3b07fbd1
  4251b5:	fst    DWORD PTR [esi-0x24]
  4251b8:	inc    edx
  4251b9:	setnp  BYTE PTR [ebp+eax*4-0x11]
  4251be:	in     al,dx
  4251bf:	ss push es
  4251c1:	fsubr  DWORD PTR [ecx]
  4251c3:	cld    
  4251c4:	fcomp  QWORD PTR [esi+0x628b1747]
  4251ca:	jns    0x4251bb
  4251cc:	sahf   
  4251cd:	xor    ebx,edx
  4251cf:	jns    0x425212
  4251d1:	enter  0x7bf5,0xe6
  4251d5:	in     al,0x3b
  4251d7:	mov    edi,0x23ebe53a
  4251dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251dd:	xchg   ecx,eax
  4251de:	jp     0x4251c9
  4251e0:	add    al,0x10
  4251e3:	test   al,0x12
  4251e5:	push   ss
  4251e6:	dec    ecx
  4251e7:	add    al,ah
  4251e9:	daa    
  4251ea:	lock mov dh,BYTE PTR [edx+edi*2]
  4251ee:	mov    esp,0x8ece15d
  4251f3:	stc    
  4251f4:	mov    cl,0xa7
  4251f6:	mov    ds:0x709af2ab,al
  4251fb:	loope  0x425194
  4251fd:	sub    DWORD PTR [ebp+0x37cec11f],esi
  425203:	mov    ah,0xa8
  425205:	and    DWORD PTR [ebp+0x28],edi
  425208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425209:	(bad)  [edx+0x21]
  42520c:	cmp    dh,BYTE PTR [ebp+0x7c]
  42520f:	aas    
  425210:	aaa    
  425211:	jg     0x425210
  425213:	xor    DWORD PTR cs:[ebp-0x2ab82dde],0x31
  42521b:	data16 cld 
  42521d:	into   
  42521e:	sub    BYTE PTR [ebx],0x23
  425221:	stos   DWORD PTR es:[edi],eax
  425222:	mov    dl,0x22
  425224:	stc    
  425225:	mov    dh,0x54
  425227:	out    dx,eax
  425228:	pop    ebx
  425229:	(bad)  
  42522a:	xchg   ebx,eax
  42522b:	add    edi,ecx
  42522d:	repz aad 0x27
  425230:	dec    edx
  425231:	dec    ecx
  425232:	adc    ebx,DWORD PTR [ebx+0x47]
  425235:	jae    0x425271
  425237:	mov    dh,0x1a
  425239:	pop    esp
  42523a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42523b:	scas   eax,DWORD PTR es:[edi]
  42523c:	dec    edi
  42523d:	xor    DWORD PTR [esi-0x21],edx
  425240:	add    al,0x61
  425242:	mov    ch,0x37
  425244:	rcr    BYTE PTR [ebp+0x58],cl
  425247:	jle    0x4251da
  425249:	or     ebx,ecx
  42524b:	cmp    edx,eax
  42524d:	maskmovq mm3,(bad)
  42524e:	neg    DWORD PTR [ecx]
  425250:	shl    DWORD PTR [esp+ebp*1-0x42],0x3e
  425255:	mov    esp,0x8d1948b6
  42525a:	jmp    0x5df3:0xfc12219d
  425261:	cmp    bl,BYTE PTR [esi]
  425263:	adc    esp,eax
  425265:	sub    DWORD PTR [edx+eax*1],ecx
  425268:	sbb    al,0x3a
  42526a:	repnz mov dh,0x3b
  42526d:	dec    ecx
  42526e:	push   cs
  42526f:	aas    
  425270:	push   eax
  425271:	dec    esp
  425272:	test   DWORD PTR [ebx-0x8421837],ecx
  425278:	aaa    
  425279:	mov    esp,0x2e58f0ae
  42527e:	popa   
  42527f:	or     BYTE PTR [edx+0x55],0xcd
  425283:	xchg   ebx,esi
  425285:	sbb    eax,0x2049e991
  42528a:	lods   al,BYTE PTR ds:[esi]
  42528b:	into   
  42528c:	push   esp
  42528d:	inc    edx
  42528e:	and    esi,0xd5ce6ae9
  425294:	fs ret 
  425296:	push   0xfd72db95
  42529b:	or     ebx,DWORD PTR [ebx+ecx*8-0x72]
  42529f:	loop   0x42528f
  4252a1:	xchg   edx,eax
  4252a2:	xor    eax,0xb13ae5c3
  4252a7:	bound  eax,QWORD PTR [edi+esi*2-0x2b]
  4252ab:	dec    edi
  4252ac:	sub    bp,0x49
  4252b0:	(bad)  
  4252b1:	pusha  
  4252b2:	mov    eax,ds:0xb98eacb7
  4252b7:	(bad)  
  4252b8:	mov    BYTE PTR [eax],al
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	lea    ecx,[eiz*4-0x3435db2f]
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	test   DWORD PTR [edx],eax
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	jmp    0x395c:0xf4524ab6
  4252db:	mov    fs,WORD PTR [eax]
  4252dd:	pop    esi
  4252de:	xchg   esi,eax
  4252df:	int3   
  4252e0:	and    ebx,ebp
  4252e2:	repz in eax,0xcb
  4252e5:	fdiv   DWORD PTR ss:[edi-0x4f]
  4252e9:	add    BYTE PTR [ecx+eiz*2+0x4b5070cb],bl
  4252f0:	out    dx,al
  4252f1:	cmc    
  4252f2:	inc    ebp
  4252f3:	cmp    bh,al
  4252f5:	jle    0x4252c3
  4252f7:	mov    ah,0x45
  4252f9:	cmp    bl,BYTE PTR [esp+ebx*4+0x617dc478]
  425300:	test   BYTE PTR [ecx-0x35b73c22],bl
  425306:	cwde   
  425307:	jbe    0x4252fb
  425309:	clc    
  42530a:	xchg   ebp,eax
  42530b:	fld    QWORD PTR [ecx+0xa]
  42530e:	fdiv   QWORD PTR [esi]
  425310:	leave  
  425311:	js     0x42538e
  425313:	mov    eax,0x9ccb966
  425318:	fs jp  0x42529d
  42531b:	es mul ebx
  42531e:	jmp    0xe16347eb
  425323:	adc    edi,DWORD PTR [ebp+0x3413b4eb]
  425329:	pop    esp
  42532a:	add    eax,DWORD PTR [eax-0x5a]
  42532d:	(bad)  
  42532f:	xor    BYTE PTR [eax],bh
  425331:	cmc    
  425332:	cmc    
  425333:	and    BYTE PTR [ebx-0x1e01528d],ch
  425339:	leave  
  42533a:	jae    0x42534e
  42533c:	inc    edx
  42533d:	sbb    al,0x19
  42533f:	int3   
  425340:	xor    ecx,DWORD PTR [eax-0x63e07657]
  425346:	pop    ebp
  425347:	hlt    
  425348:	scas   eax,DWORD PTR es:[edi]
  425349:	fsubr  QWORD PTR [ebx-0x76b1f40f]
  42534f:	pop    esp
  425350:	sbb    dh,BYTE PTR [edx+0x2239dc3a]
  425356:	jge    0x42532d
  425358:	aas    
  425359:	mov    ebx,0x1c675866
  42535e:	push   0x73602a6c
  425363:	jo     0x425389
  425365:	and    al,0xf9
  425367:	sub    dl,ch
  425369:	cmp    BYTE PTR ds:0x14b582b2,0xb6
  425370:	cmp    DWORD PTR [edx-0x587e2606],esp
  425376:	aaa    
  425377:	xchg   edx,eax
  425378:	adc    ecx,DWORD PTR [ebx]
  42537a:	pop    edi
  42537b:	ja     0x4253c6
  42537d:	mov    ch,0x16
  42537f:	dec    esi
  425380:	mov    eax,0xc876513e
  425385:	fistp  QWORD PTR [ebp+0x16]
  425388:	pop    ds
  425389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42538a:	test   BYTE PTR [eax],bl
  42538c:	pop    eax
  42538d:	fild   WORD PTR [esi-0x15673eef]
  425393:	clc    
  425394:	dec    ebp
  425395:	ret    
  425396:	add    ebx,eax
  425398:	mov    ecx,0x929a542c
  42539d:	xor    al,0x82
  42539f:	fidiv  WORD PTR [eax-0x7a]
  4253a2:	xor    eax,0x9d936ee7
  4253a7:	fstp   TBYTE PTR [eax+0x33d0d23]
  4253ad:	(bad)  
  4253ae:	cs pushf 
  4253b0:	into   
  4253b1:	add    DWORD PTR [esi],ecx
  4253b3:	scas   eax,DWORD PTR es:[edi]
  4253b4:	jmp    FWORD PTR [ebp+0x6abd3bed]
  4253ba:	or     eax,0xd5cdc197
  4253bf:	mov    al,ds:0xd3fd21c2
  4253c4:	and    DWORD PTR [edi+ecx*2+0x2],ebx
  4253c8:	loop   0x425377
  4253ca:	adc    edi,0xea6a606e
  4253d0:	pusha  
  4253d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d2:	push   ebx
  4253d3:	xlat   BYTE PTR ds:[ebx]
  4253d4:	mov    ecx,0xf63ff951
  4253d9:	in     al,0x64
  4253db:	pusha  
  4253dc:	imul   eax,DWORD PTR [ebx+0x56c9e5ab],0xffffffc5
  4253e3:	fmul   st(0),st
  4253e5:	test   al,0xfd
  4253e7:	ins    BYTE PTR es:[edi],dx
  4253e8:	jne    0x4253e5
  4253ea:	sbb    bh,BYTE PTR ds:0xdbce6cb1
  4253f0:	outs   dx,DWORD PTR ds:[esi]
  4253f1:	adc    ebp,0x305ae3f4
  4253f7:	mov    cl,0xcb
  4253f9:	loope  0x425451
  4253fb:	inc    ebp
  4253fc:	and    al,0x6e
  4253fe:	dec    edi
  4253ff:	push   edx
  425400:	imul   eax,DWORD PTR [ebp+0x3d0db7a6],0x35
  425407:	arpl   WORD PTR [ebx+0x16],bp
  42540a:	ret    0x51a9
  42540d:	out    0xea,eax
  42540f:	and    DWORD PTR [ecx-0x4558e039],ecx
  425415:	push   ebx
  425416:	cld    
  425417:	mov    ecx,0xb506b1c
  42541c:	repnz inc ebx
  42541e:	imul   eax,DWORD PTR ds:0xb5a915a8,0xffffffcb
  425425:	push   0xffffffc7
  425427:	popa   
  425428:	jns    0x4254a9
  42542a:	or     DWORD PTR [ebx+0x3a],edi
  42542d:	shl    esi,1
  42542f:	xor    DWORD PTR ss:[ecx-0xdeb1e76],0x3b7ad839
  42543a:	add    ah,bh
  42543c:	int    0xbe
  42543e:	mov    ch,0xab
  425440:	imul   ebx,ebp,0xa755bf80
  425446:	retf   
  425447:	jae    0x42545a
  425449:	inc    esi
  42544a:	aad    0xac
  42544c:	in     eax,0x10
  42544e:	push   esi
  42544f:	mov    BYTE PTR [edx+0x7ce8f4eb],ch
  425455:	dec    esi
  425456:	mov    ebx,0x8a96050c
  42545b:	ja     0x4254ac
  42545d:	shr    esp,0xfc
  425460:	sub    BYTE PTR [edi+eax*4-0x3b3eb6b1],bh
  425467:	rcl    BYTE PTR [edi-0x71],cl
  42546a:	and    eax,0xd40a4a5a
  42546f:	sbb    DWORD PTR [edx],eax
  425471:	jge    0x425422
  425473:	fimul  DWORD PTR [edx]
  425475:	clc    
  425476:	cdq    
  425477:	fisttp DWORD PTR [edi-0x6c]
  42547a:	loope  0x425479
  42547c:	js     0x425409
  42547e:	mov    ds:0x536715c1,eax
  425483:	jo     0x4254a8
  425485:	stos   DWORD PTR es:[edi],eax
  425486:	and    ecx,DWORD PTR [eax]
  425488:	push   0xd357a1ca
  42548d:	bound  eax,QWORD PTR [edi+0x2f]
  425490:	retf   
  425491:	(bad)  
  425492:	test   al,0x6a
  425494:	push   edi
  425495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425496:	fiadd  WORD PTR [eax+0x19ccaa3b]
  42549c:	(bad)  
  42549d:	push   esp
  42549e:	push   ebp
  42549f:	inc    edx
  4254a0:	sub    eax,0x31a2ad62
  4254a5:	push   ds
  4254a6:	mov    ds:0x8af03daa,al
  4254ab:	lods   al,BYTE PTR ds:[esi]
  4254ac:	test   DWORD PTR [ebx],edi
  4254ae:	(bad)  
  4254af:	aas    
  4254b0:	adc    BYTE PTR ds:0x604430a7,0xf1
  4254b7:	test   BYTE PTR [edx-0x36],0xd7
  4254bb:	cmp    BYTE PTR [edx+eax*4+0x26],dl
  4254bf:	xchg   ecx,eax
  4254c0:	data16 into 
  4254c2:	add    ah,ch
  4254c4:	es or  eax,0xe1de4fc2
  4254ca:	add    ecx,esi
  4254cc:	push   eax
  4254cd:	adc    dl,BYTE PTR [esi-0x6541fc31]
  4254d3:	repnz scas al,BYTE PTR es:[edi]
  4254d5:	cmc    
  4254d6:	sub    al,0x65
  4254d8:	mov    es,WORD PTR [esi+0x32868ae2]
  4254de:	aaa    
  4254df:	out    0xad,eax
  4254e1:	mov    WORD PTR [edi],?
  4254e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254e4:	push   ebx
  4254e5:	scas   al,BYTE PTR es:[edi]
  4254e6:	fisttp QWORD PTR [ecx-0x609848fd]
  4254ec:	inc    edi
  4254ed:	sar    BYTE PTR [ebx+0x512e1b27],cl
  4254f3:	jb     0x42550e
  4254f5:	xor    al,0xf9
  4254f7:	enter  0xd5c1,0xe7
  4254fb:	cwde   
  4254fc:	xchg   esp,eax
  4254fd:	push   esp
  4254fe:	out    0xd0,al
  425500:	test   eax,0x47ee5edc
  425505:	test   al,0xb
  425507:	cld    
  425508:	push   esi
  425509:	or     eax,DWORD PTR ds:0x3a8e0ef3
  42550f:	mov    WORD PTR [edx],?
  425511:	adc    DWORD PTR [ecx],ecx
  425513:	sbb    cl,BYTE PTR [ebp+edi*4-0xf]
  425517:	mov    dl,ah
  425519:	(bad)  
  42551a:	leave  
  42551b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42551c:	mov    al,ds:0x95ba8fc9
  425521:	xor    esi,DWORD PTR ds:0x3cdbeff2
  425527:	sub    al,0x22
  425529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42552a:	and    eax,0xc1df8685
  42552f:	sbb    DWORD PTR [edx+0x61],ebp
  425532:	test   al,0x6
  425534:	bound  esp,QWORD PTR [edx+0x5297495]
  42553a:	or     ah,BYTE PTR [edx+0x3e92a969]
  425540:	dec    ecx
  425541:	pop    ebp
  425542:	clc    
  425543:	mov    ebp,0xe3db9dfc
  425548:	dec    ebp
  425549:	mov    esi,ecx
  42554b:	sbb    eax,0xee4d821a
  425550:	mov    edx,0xf6c95d80
  425555:	enter  0x8ca6,0x1c
  425559:	add    BYTE PTR [eax],al
  42555b:	add    bl,al
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	jno    0x4255cf
  42556a:	lods   al,BYTE PTR ds:[esi]
  42556b:	ror    DWORD PTR [edi-0x32],0x1
  42556f:	add    BYTE PTR [ebp+0x7d000002],al
  425575:	fsub   DWORD PTR [ebx]
  425577:	and    ebp,DWORD PTR [ecx-0x2cb8c94]
  42557d:	cmp    eax,0xcf0fb705
  425582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425583:	mov    bl,0x7d
  425585:	cmp    ch,dl
  425587:	imul   esp,ecx,0x14
  42558a:	add    edi,edi
  42558c:	fmulp  st(2),st
  42558e:	dec    eax
  42558f:	mov    ebp,0x18004017
  425594:	sbb    eax,0x9503f700
  425599:	dec    edi
  42559a:	neg    DWORD PTR gs:[edx]
  42559d:	jecxz  0x425613
  42559f:	cmp    edi,DWORD PTR [ecx]
  4255a1:	test   eax,0xb08c621
  4255a6:	pop    ebx
  4255a7:	add    DWORD PTR [edx+0x355ea8cd],0x2d95712e
  4255b1:	xor    cl,bl
  4255b3:	(bad)  
  4255b4:	mov    ecx,0x331a27e0
  4255b9:	add    bl,BYTE PTR [ecx]
  4255bb:	ret    
  4255bc:	mov    eax,edx
  4255be:	cmp    al,0xf5
  4255c0:	gs push cs
  4255c2:	mov    bl,0x24
  4255c4:	mov    edx,0xeeb4a3d5
  4255c9:	adc    BYTE PTR [edi],ah
  4255cb:	mov    gs,WORD PTR [edx-0x43]
  4255ce:	jne    0x4255f2
  4255d0:	sbb    BYTE PTR [edx],bh
  4255d2:	test   eax,0x1f3ad3bf
  4255d7:	xchg   DWORD PTR [ebx+0x5540562f],edx
  4255dd:	add    al,0x5e
  4255df:	ror    DWORD PTR [ecx+0x20],0x47
  4255e3:	pop    ecx
  4255e4:	clc    
  4255e5:	adc    DWORD PTR [ebx-0x7a8694a3],esp
  4255eb:	mov    esp,DWORD PTR [esi+0x6c]
  4255ee:	xor    BYTE PTR [esi-0x4c],0x9b
  4255f2:	lods   eax,DWORD PTR ds:[esi]
  4255f3:	pop    ecx
  4255f4:	and    eax,0x1de79931
  4255f9:	aam    0xf6
  4255fb:	mov    bl,0x39
  4255fd:	sbb    ecx,DWORD PTR [ecx-0x2a8baabc]
  425603:	in     eax,0x8d
  425605:	in     al,0x90
  425607:	or     al,0x5e
  425609:	adc    esi,DWORD PTR [eax-0x6b]
  42560c:	pop    esi
  42560d:	arpl   WORD PTR [ebx-0x13],ax
  425610:	and    DWORD PTR [edi-0x80],edx
  425613:	xchg   esp,eax
  425614:	pop    sp
  425616:	jl     0x42560f
  425618:	stc    
  425619:	cmp    eax,0x4435bdc2
  42561e:	or     ebp,edi
  425620:	vpaddw xmm1,xmm0,xmm3
  425624:	pop    ebx
  425625:	out    0xa8,al
  425627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425628:	jns    0x4255b9
  42562a:	bswap  esp
  42562c:	push   esi
  42562d:	cdq    
  42562e:	test   al,0x97
  425630:	pusha  
  425631:	fwait
  425632:	sbb    eax,DWORD PTR [eax-0x4e7ce188]
  425638:	push   ebx
  425639:	mov    DWORD PTR [edx-0x4f],0x27c9beef
  425640:	or     ebx,DWORD PTR [ecx]
  425642:	xor    ebp,esp
  425644:	xchg   edx,eax
  425645:	aas    
  425646:	aas    
  425647:	out    dx,al
  425648:	mov    ebp,0x960c0c7c
  42564d:	test   al,0x7e
  42564f:	sahf   
  425650:	push   esi
  425651:	push   edx
  425652:	pop    es
  425653:	(bad)  [ebp-0xd]
  425656:	sbb    dl,dh
  425658:	std    
  425659:	jl     0x42562a
  42565b:	push   esi
  42565c:	(bad)  
  42565d:	add    dh,cl
  42565f:	jmp    0xf10f:0x801c4579
  425666:	inc    esp
  425667:	xchg   esi,eax
  425668:	push   ecx
  425669:	push   DWORD PTR [edi]
  42566b:	or     ecx,ebp
  42566d:	aas    
  42566e:	fnstenv [edi-0x58]
  425671:	lahf   
  425672:	aam    0x1e
  425674:	mov    al,ds:0x29903b82
  425679:	adc    al,0x84
  42567b:	cmp    BYTE PTR [ebp+ebx*4+0x45],dh
  42567f:	mov    ah,0xf2
  425681:	call   0xbfc:0x5a5d49ea
  425688:	fisttp WORD PTR [edx-0x57fd98aa]
  42568e:	adc    ch,dh
  425690:	push   esi
  425691:	scas   al,BYTE PTR es:[edi]
  425692:	sbb    dh,bl
  425694:	jp     0x425651
  425696:	pop    ss
  425697:	int3   
  425698:	(bad)  
  425699:	ja     0x425639
  42569b:	(bad)  
  42569c:	mov    DWORD PTR [edx],esp
  42569e:	mov    esi,0xf56468b9
  4256a3:	add    BYTE PTR [esi+0x7],ah
  4256a6:	sub    eax,0x6c0ecd2c
  4256ab:	daa    
  4256ac:	inc    esi
  4256ad:	pop    ds
  4256ae:	imul   edi,DWORD PTR [edx-0x9b21906],0x848242de
  4256b8:	sub    eax,0xab1595f8
  4256bd:	je     0x42564b
  4256bf:	push   0x8ffc3d8a
  4256c4:	stos   DWORD PTR es:[edi],eax
  4256c5:	les    esp,FWORD PTR [edx-0x395e2692]
  4256cb:	add    eax,0xdeb44a6a
  4256d0:	cmp    esp,edx
  4256d2:	sub    DWORD PTR [ecx-0x7f],ebp
  4256d5:	scas   eax,DWORD PTR es:[edi]
  4256d6:	xor    eax,0xb4292ff7
  4256db:	adc    DWORD PTR ds:0xd90ac48a,esp
  4256e1:	add    ebp,0xf275dff1
  4256e7:	add    eax,0xb4c3044
  4256ec:	dec    edi
  4256ed:	cs mov dl,0xd9
  4256f0:	sub    ecx,DWORD PTR [ebx-0x24]
  4256f3:	out    dx,eax
  4256f4:	mov    esi,0x5edc3b49
  4256f9:	data16 test al,0xf8
  4256fc:	iret   
  4256fd:	or     ah,BYTE PTR [ecx]
  4256ff:	ins    DWORD PTR es:[edi],dx
  425700:	loopne 0x4256a4
  425702:	dec    edx
  425703:	sub    esp,eax
  425705:	xor    BYTE PTR ds:0x1fade9de,ch
  42570b:	lahf   
  42570c:	das    
  42570d:	ds or  eax,0x35e56188
  425713:	leave  
  425714:	stos   DWORD PTR es:[edi],eax
  425715:	call   0x76201d53
  42571a:	jo     0x425762
  42571c:	loop   0x4256ab
  42571e:	jno    0x4256f0
  425720:	and    esp,edi
  425722:	and    eax,0xf9ddb096
  425727:	loop   0x425700
  425729:	fst    QWORD PTR [ecx-0x7b]
  42572c:	mov    dl,0xa9
  42572e:	adc    ah,BYTE PTR ds:0x5dc26de1
  425734:	dec    esp
  425735:	add    esp,edi
  425737:	jecxz  0x4256e8
  425739:	jno    0x425721
  42573b:	std    
  42573c:	or     ax,0xe1ba
  425740:	les    ecx,FWORD PTR [ebx+0x68]
  425743:	add    ebx,DWORD PTR ds:0x241a03a8
  425749:	adc    ecx,0x6153a0cb
  42574f:	jbe    0x425705
  425751:	aam    0xca
  425753:	xlat   BYTE PTR ds:[ebx]
  425754:	mov    bh,0xad
  425756:	inc    edi
  425757:	pusha  
  425758:	pop    edx
  425759:	rcr    BYTE PTR [ebx+eax*1-0x713d86a3],1
  425760:	fstp   st(4)
  425762:	xor    al,0xbd
  425764:	mov    edx,DWORD PTR [esi-0xcb7005d]
  42576a:	fadd   QWORD PTR [esi-0x1d]
  42576d:	sbb    eax,0x1e7a447e
  425772:	jmp    0x285bf4f4
  425777:	imul   eax,DWORD PTR [edi+ebp*8],0x5288cad8
  42577e:	outs   dx,DWORD PTR ds:[esi]
  42577f:	mov    al,0xb2
  425781:	adc    DWORD PTR [ebx-0x65bdc037],eax
  425787:	out    0x4e,eax
  425789:	xchg   ebp,eax
  42578a:	xor    ecx,DWORD PTR [eax+0x58]
  42578d:	inc    ecx
  42578e:	adc    DWORD PTR [ebp+0x6d],ecx
  425791:	jo     0x425799
  425793:	pop    ecx
  425794:	mov    bl,0xe8
  425796:	or     BYTE PTR [esp+eax*1-0x2c],ah
  42579a:	pusha  
  42579b:	add    esi,ebx
  42579d:	repz neg DWORD PTR [edx+0x35f6ace6]
  4257a4:	mov    bl,0xc5
  4257a6:	in     al,dx
  4257a7:	popf   
  4257a8:	sub    edi,edx
  4257aa:	aas    
  4257ab:	arpl   WORD PTR [esi],bp
  4257ad:	ret    0x8bc8
  4257b0:	push   edx
  4257b1:	pop    ss
  4257b2:	shl    BYTE PTR [eax+0x677102f8],1
  4257b8:	xor    eax,DWORD PTR [edx]
  4257ba:	cmc    
  4257bb:	and    ch,dh
  4257bd:	add    DWORD PTR fs:[esi],ecx
  4257c0:	stc    
  4257c1:	sub    al,0x95
  4257c3:	xchg   edx,eax
  4257c4:	adc    eax,0x633e07d
  4257c9:	hlt    
  4257ca:	(bad)  [ebp+eax*8-0x7efabf5c]
  4257d1:	ds ins BYTE PTR es:[edi],dx
  4257d3:	imul   ebp,DWORD PTR [esi-0x3ca0e13a],0x179a35e2
  4257dd:	dec    edx
  4257de:	retf   0x8696
  4257e1:	es jbe 0x42576d
  4257e4:	jns    0x4257af
  4257e6:	mov    ah,0xb
  4257e8:	mul    DWORD PTR [ebp+esi*8+0x1de280df]
  4257ef:	rol    DWORD PTR [eax],0x1d
  4257f2:	jg     0x4257eb
  4257f4:	imul   ebx,DWORD PTR ds:0x5a89c0,0x0
  4257fb:	add    BYTE PTR [edx-0x101610a7],bl
  425801:	call   FWORD PTR [esi+0x5c5d437b]
  425807:	mov    cl,0x31
  425809:	in     eax,0xc8
  42580b:	mov    ebx,0x1d0d4
  425810:	test   DWORD PTR [edx],eax
  425812:	add    BYTE PTR [eax],al
  425814:	lar    edx,WORD PTR [ecx]
  425817:	in     eax,dx
  425818:	and    al,0xd4
  42581a:	inc    edi
  42581b:	and    ecx,DWORD PTR [eax+0x7f]
  42581e:	add    eax,0xd645fdb6
  425823:	ds pop ecx
  425825:	fs inc ebx
  425827:	imul   ebp,DWORD PTR [eax+0x7b172f96],0x195af259
  425831:	stc    
  425832:	mov    DWORD PTR [esi-0x79],edi
  425835:	adc    BYTE PTR [ebx],al
  425837:	sub    DWORD PTR [ecx-0x7b],edi
  42583a:	mov    al,0x1f
  42583c:	repz fstp QWORD PTR [esi-0x27]
  425840:	adc    al,0x96
  425842:	inc    edx
  425843:	sub    BYTE PTR [edx-0x60],ah
  425846:	les    ebx,FWORD PTR [ebx-0x6a]
  425849:	lahf   
  42584a:	pop    edi
  42584b:	popa   
  42584c:	clc    
  42584d:	adc    ecx,DWORD PTR [ebp+0x61]
  425850:	dec    ebp
  425851:	xchg   esp,ecx
  425853:	xchg   edx,eax
  425854:	(bad)  [edi+0x62]
  425857:	call   FWORD PTR [ebx]
  425859:	xor    DWORD PTR [ecx],ebx
  42585b:	js     0x425883
  42585d:	cli    
  42585e:	jns    0x425836
  425860:	mov    edx,0xf9beb74d
  425865:	sub    ah,BYTE PTR [esp+ecx*2+0x7]
  425869:	loopne 0x42584b
  42586b:	aad    0x3c
  42586d:	dec    esi
  42586e:	jge    0x4258bd
  425870:	jo     0x425831
  425872:	mov    bl,dh
  425874:	mov    esi,0xe0df27a0
  425879:	xor    dh,al
  42587b:	adc    ebp,0x86de6528
  425881:	jle    0x425861
  425883:	pop    eax
  425884:	xchg   edx,eax
  425885:	xchg   esp,eax
  425886:	sub    DWORD PTR [ebx+0xce41a0b],ebp
  42588c:	pop    esi
  42588d:	aad    0x3
  42588f:	aaa    
  425890:	jo     0x42588f
  425892:	jno    0x42588e
  425894:	pushf  
  425895:	dec    ecx
  425896:	scas   eax,DWORD PTR es:[edi]
  425897:	(bad)  
  425898:	push   cs
  425899:	dec    eax
  42589a:	fbstp  TBYTE PTR [edx+0x33a6b469]
  4258a0:	push   ss
  4258a1:	idiv   BYTE PTR [ebx-0x635e4364]
  4258a7:	ror    dl,cl
  4258a9:	jnp    0x42588e
  4258ab:	setp   BYTE PTR [esp+edi*4]
  4258af:	sbb    dh,BYTE PTR [esp+ecx*4]
  4258b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b3:	and    cl,ch
  4258b5:	jns    0x425931
  4258b7:	cmp    al,0x3a
  4258b9:	push   ecx
  4258ba:	push   esi
  4258bb:	shl    BYTE PTR [eax+0xe],0x50
  4258bf:	es cdq 
  4258c1:	cmp    BYTE PTR [esi+0x6e],0x2e
  4258c5:	cdq    
  4258c6:	test   al,0x12
  4258c8:	pop    eax
  4258c9:	dec    edx
  4258ca:	jmp    0xcf18868b
  4258cf:	and    ch,BYTE PTR [eax-0x5e69b9c]
  4258d5:	into   
  4258d6:	xchg   edi,eax
  4258d7:	mov    ah,0x12
  4258d9:	cmp    BYTE PTR [eax-0x70],al
  4258dc:	fmul   DWORD PTR [eax+0x29]
  4258df:	add    eax,0x7d4dde8f
  4258e4:	pop    edx
  4258e5:	sar    BYTE PTR fs:[ebx-0x42],1
  4258e9:	xor    bh,BYTE PTR [ecx-0x46]
  4258ec:	repnz mov DWORD PTR ds:0x6a421f10,0xc4737175
  4258f7:	adc    ah,dl
  4258f9:	inc    eax
  4258fa:	(bad)  ds:0x892f1ffb
  425900:	jb     0x4258ff
  425902:	xlat   BYTE PTR ds:[ebx]
  425903:	and    ebp,esp
  425905:	popa   
  425906:	inc    edx
  425907:	inc    ebp
  425908:	pusha  
  425909:	lock sbb BYTE PTR [edi-0x4b],al
  42590d:	mov    ds:0x14b8677,eax
  425912:	stos   BYTE PTR es:[edi],al
  425913:	sahf   
  425914:	aam    0xf3
  425916:	pusha  
  425917:	sbb    al,0x56
  425919:	aas    
  42591a:	mov    bh,0x49
  42591c:	add    BYTE PTR [edi+0x35],0x67
  425920:	cmp    ebx,DWORD PTR [eax+esi*1-0x66215b1a]
  425927:	stos   DWORD PTR es:[edi],eax
  425928:	les    eax,FWORD PTR [edx-0x77dd3843]
  42592e:	(bad)  
  42592f:	pop    esp
  425930:	enter  0xacc2,0x78
  425934:	inc    ebp
  425935:	mov    ds:0x4c9563c1,al
  42593a:	fadd   QWORD PTR [edi+0x4a]
  42593d:	sbb    ch,dl
  42593f:	jo     0x4259a5
  425941:	leave  
  425942:	pusha  
  425943:	inc    eax
  425944:	aad    0xea
  425946:	jg     0x42590e
  425948:	aas    
  425949:	pop    edi
  42594a:	and    eax,0x48ebb3
  42594f:	gs mov ecx,0xa0c7fac7
  425955:	pop    ebp
  425956:	and    dl,BYTE PTR [edx-0x6148fc2e]
  42595c:	(bad)  
  42595d:	aam    0x61
  42595f:	retf   
  425960:	pop    es
  425961:	sbb    edx,DWORD PTR cs:[esi+ebx*8-0x2c]
  425966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425967:	mov    al,0xc4
  425969:	scas   eax,DWORD PTR es:[edi]
  42596a:	xor    ah,bh
  42596c:	(bad)  
  42596d:	xchg   ebp,eax
  42596e:	call   0x43f8caf6
  425973:	stos   BYTE PTR es:[edi],al
  425974:	call   0x2901153e
  425979:	mov    bh,0x6b
  42597b:	call   0xe4ef:0xb17a93f8
  425982:	cwde   
  425983:	pop    edx
  425984:	pop    edx
  425985:	lea    ebp,[ecx]
  425987:	fucomp st(4)
  425989:	dec    esi
  42598a:	leave  
  42598b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598c:	push   es
  42598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42598e:	xchg   edx,eax
  42598f:	xor    DWORD PTR [edi+ebx*2],0x20
  425993:	xor    ecx,ecx
  425995:	aam    0xbc
  425997:	out    dx,eax
  425998:	or     bl,BYTE PTR [edi]
  42599a:	addr16 pop es
  42599c:	aam    0xee
  42599e:	mov    ds:0xc4dc1939,al
  4259a3:	or     eax,DWORD PTR [esi+esi*8-0x38]
  4259a7:	xlat   BYTE PTR ds:[ebx]
  4259a8:	jmp    0xd7c7be19
  4259ad:	push   es
  4259ae:	and    al,al
  4259b0:	dec    ebp
  4259b1:	pop    es
  4259b2:	sub    eax,0x5844a10
  4259b7:	adc    BYTE PTR [esi+edx*2],0xd9
  4259bb:	mov    BYTE PTR [esi],dh
  4259bd:	push   esi
  4259be:	iret   
  4259bf:	out    dx,eax
  4259c0:	dec    ebx
  4259c1:	xchg   ebx,eax
  4259c2:	loop   0x425993
  4259c4:	scas   eax,DWORD PTR es:[edi]
  4259c5:	das    
  4259c6:	stos   BYTE PTR es:[edi],al
  4259c7:	shr    ebx,0xc
  4259ca:	pop    ebp
  4259cb:	sbb    BYTE PTR [edx+0x2e],ch
  4259ce:	xor    esi,eax
  4259d0:	push   ss
  4259d1:	dec    esi
  4259d2:	cmp    DWORD PTR [edx-0x30454b51],ecx
  4259d8:	fsubrp st(1),st
  4259da:	lods   eax,DWORD PTR ds:[esi]
  4259db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259dc:	sahf   
  4259dd:	ins    DWORD PTR es:[edi],dx
  4259de:	imul   esp,DWORD PTR [eax+edx*4],0xffffff93
  4259e2:	push   ecx
  4259e3:	call   0x2a96:0x3c105ded
  4259ea:	test   DWORD PTR [edx+0x765036f3],ecx
  4259f0:	inc    esi
  4259f1:	push   ebp
  4259f2:	(bad)  
  4259f3:	adc    DWORD PTR [ebp-0x7b],ecx
  4259f6:	push   ebx
  4259f7:	inc    eax
  4259f8:	dec    ebp
  4259f9:	and    al,0xd7
  4259fb:	xchg   ebx,eax
  4259fc:	push   0xffffff95
  4259fe:	dec    edi
  4259ff:	aad    0x7f
  425a01:	pop    esi
  425a02:	les    esi,FWORD PTR [eax+ebx*2]
  425a05:	mov    cl,0xf5
  425a07:	mov    esi,0xd61f172a
  425a0c:	mov    BYTE PTR [ebx+0x2c8262a9],ah
  425a12:	mov    edx,0x4609150f
  425a17:	and    eax,DWORD PTR ds:0xfc83e5ea
  425a1d:	fst    st(4)
  425a1f:	push   es
  425a20:	mov    WORD PTR [eax-0x4f],fs
  425a23:	in     eax,dx
  425a24:	retf   0xab21
  425a27:	rcl    BYTE PTR [edx+esi*8+0x7634331],0x1b
  425a2f:	xlat   BYTE PTR ds:[ebx]
  425a30:	cmp    edx,esp
  425a32:	push   ss
  425a33:	(bad)
  425a36:	sti    
  425a37:	or     ecx,esi
  425a39:	push   eax
  425a3a:	cmc    
  425a3b:	arpl   WORD PTR [edx-0x6c],di
  425a3e:	sti    
  425a3f:	mov    cl,0x20
  425a41:	lods   al,BYTE PTR ds:[esi]
  425a42:	(bad)  
  425a43:	in     eax,0xb1
  425a45:	out    dx,eax
  425a46:	xlat   BYTE PTR ds:[ebx]
  425a47:	je     0x425a1a
  425a49:	add    edi,DWORD PTR ds:[ecx-0x64fecd1]
  425a50:	int3   
  425a51:	das    
  425a52:	mov    ch,0x55
  425a54:	jmp    0xd1de:0x6b024f67
  425a5b:	pop    ebx
  425a5c:	sbb    dl,cl
  425a5e:	inc    esi
  425a5f:	inc    edx
  425a60:	mov    cl,0x17
  425a62:	fdivp  st(1),st
  425a64:	mov    bh,0x7b
  425a66:	ret    0xebf2
  425a69:	(bad)  
  425a6a:	repnz mov ebx,0x73a87d57
  425a70:	test   BYTE PTR [esi-0x560bd3b0],ch
  425a76:	shr    BYTE PTR [eax+0x2f],1
  425a79:	mov    edi,0x82b861d8
  425a7e:	les    esp,FWORD PTR [eax+0x42bfe76d]
  425a84:	jmp    0x425aee
  425a86:	or     DWORD PTR [edx-0x66],eax
  425a89:	mov    ch,0xe1
  425a8b:	dec    eax
  425a8c:	inc    edx
  425a8d:	test   eax,0x1da6599d
  425a92:	mov    ch,0x59
  425a94:	inc    cl
  425a96:	ret    0x6cda
  425a99:	add    BYTE PTR [eax],al
  425a9b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fnsave [esi+0x596b1d3d]
  425aad:	rol    DWORD PTR [ecx],cl
  425aaf:	add    BYTE PTR [ebp-0x65fffffe],al
  425ab5:	add    esi,DWORD PTR [edx]
  425ab7:	mov    dl,0xda
  425ab9:	aaa    
  425aba:	and    cl,cl
  425abc:	ss dec edx
  425abe:	repnz shl DWORD PTR [esi],1
  425ac1:	fdiv   DWORD PTR [eax+0x13]
  425ac4:	outs   dx,DWORD PTR ds:[esi]
  425ac5:	clc    
  425ac6:	aas    
  425ac7:	lock mov esp,0x4e5a13e9
  425acd:	ret    
  425ace:	pop    es
  425acf:	popf   
  425ad0:	scas   al,BYTE PTR es:[edi]
  425ad1:	push   ds
  425ad2:	xor    eax,0xfb22fed1
  425ad7:	and    dl,cl
  425ad9:	fistp  DWORD PTR [esi]
  425adb:	add    DWORD PTR [ecx],ecx
  425add:	dec    esi
  425ade:	fs out dx,al
  425ae0:	push   eax
  425ae1:	add    al,0xd7
  425ae3:	sub    edx,eax
  425ae5:	sub    bh,dl
  425ae7:	inc    edi
  425ae8:	ja     0x425b16
  425aea:	in     eax,0xce
  425aec:	stos   BYTE PTR es:[edi],al
  425aed:	pushf  
  425aee:	and    eax,0xa531cc77
  425af3:	mov    bh,0x13
  425af5:	mov    esp,DWORD PTR [esi+ecx*2+0x55078da]
  425afc:	(bad)  
  425afd:	xchg   edi,eax
  425afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aff:	or     al,0xc6
  425b01:	adc    ebx,DWORD PTR [ecx]
  425b03:	push   ebx
  425b04:	push   0xffffffe4
  425b06:	ins    BYTE PTR es:[edi],dx
  425b07:	retf   
  425b08:	add    bl,bl
  425b0a:	out    0xec,al
  425b0c:	ja     0x425ab1
  425b0e:	dec    esi
  425b0f:	mov    ch,0x42
  425b11:	jne    0x425b5c
  425b13:	pusha  
  425b14:	cli    
  425b15:	lea    esp,[ebx-0x12]
  425b18:	dec    edx
  425b19:	xor    DWORD PTR [edx+0xb216d40],ebp
  425b1f:	jecxz  0x425aad
  425b21:	or     bh,BYTE PTR [esi-0x7]
  425b24:	aaa    
  425b25:	cmp    ch,ch
  425b27:	add    al,0xfb
  425b29:	mov    dh,0x32
  425b2b:	push   ebp
  425b2c:	push   cx
  425b2e:	adc    DWORD PTR [edx-0x7d],edx
  425b31:	cmc    
  425b32:	sub    esi,ebp
  425b34:	sbb    DWORD PTR [eax],eax
  425b36:	mov    edi,0x20dcd4c6
  425b3b:	pop    ebx
  425b3c:	or     DWORD PTR [edi+0x2c545ab6],0x17
  425b43:	ret    0xb6e
  425b46:	les    ebp,FWORD PTR [edx+0x68f8a770]
  425b4c:	leave  
  425b4d:	(bad)  
  425b4e:	pop    edx
  425b4f:	int3   
  425b50:	arpl   WORD PTR [edx],bx
  425b52:	jne    0x425b2b
  425b54:	xor    ebx,edx
  425b56:	stos   DWORD PTR es:[edi],eax
  425b57:	push   edi
  425b58:	jle    0x425bca
  425b5a:	nop
  425b5b:	leave  
  425b5c:	in     eax,0xf3
  425b5e:	out    0x71,al
  425b60:	inc    ebp
  425b61:	sahf   
  425b62:	mov    esi,0x9443b82a
  425b67:	dec    ebx
  425b68:	push   edx
  425b69:	jmp    0x8bd1:0x2154b118
  425b70:	aad    0xb3
  425b72:	xchg   BYTE PTR [edx-0x5],cl
  425b75:	sbb    al,BYTE PTR [esi-0x7442386a]
  425b7b:	xchg   ecx,eax
  425b7c:	test   al,0xb0
  425b7e:	(bad)  
  425b7f:	sbb    DWORD PTR [edi],ecx
  425b81:	mov    edi,DWORD PTR [ebx-0x6a]
  425b84:	icebp  
  425b85:	cs js  0x425b22
  425b88:	loop   0x425bb2
  425b8a:	push   edi
  425b8b:	aas    
  425b8c:	repz retf 0xc35
  425b90:	jns    0x425b96
  425b92:	sbb    al,0x4f
  425b94:	or     esi,esp
  425b96:	out    0xfb,eax
  425b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b99:	mov    al,ds:0xf1a022d9
  425b9e:	outs   dx,DWORD PTR ds:[esi]
  425b9f:	and    edx,0xa0704d1e
  425ba5:	cmp    DWORD PTR [ebp-0x1f47f66c],0xb
  425bac:	jo     0x425bb5
  425bae:	aam    0x82
  425bb0:	gs enter 0xf640,0x93
  425bb5:	add    DWORD PTR [edi],ebx
  425bb7:	hlt    
  425bb8:	xor    al,0x1e
  425bba:	retf   
  425bbb:	inc    eax
  425bbc:	pushf  
  425bbd:	xchg   DWORD PTR [edi-0x7],ebx
  425bc0:	pop    ecx
  425bc1:	scas   al,BYTE PTR es:[edi]
  425bc2:	sbb    DWORD PTR [ebx+edi*8],0x48286cf4
  425bc9:	jecxz  0x425b6c
  425bcb:	sub    dl,0x18
  425bce:	mov    esi,0x79b11b1a
  425bd3:	cli    
  425bd4:	out    dx,al
  425bd5:	jb     0x425b9b
  425bd7:	call   0x1ead060f
  425bdc:	stos   BYTE PTR es:[edi],al
  425bdd:	jle    0x425c48
  425bdf:	mov    al,ds:0x4885d78
  425be4:	aad    0x33
  425be6:	inc    ecx
  425be7:	mov    ebp,0xa990afa9
  425bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bed:	pop    eax
  425bee:	jne    0x425bff
  425bf0:	loope  0x425c1d
  425bf2:	popf   
  425bf3:	das    
  425bf4:	hlt    
  425bf5:	mov    eax,0xf1145f0b
  425bfa:	jb     0x425b9a
  425bfc:	div    BYTE PTR [edi]
  425bfe:	int3   
  425bff:	fimul  WORD PTR [edi-0x7a72efbc]
  425c05:	adc    edx,DWORD PTR [edi-0x4e027dac]
  425c0b:	fst    QWORD PTR [esi-0xc]
  425c0e:	test   DWORD PTR [ebp+0x25],ebx
  425c11:	xchg   ecx,eax
  425c12:	and    ecx,DWORD PTR [edi+ecx*4]
  425c15:	stos   DWORD PTR es:[edi],eax
  425c16:	or     ebx,edi
  425c18:	cmp    al,0x7e
  425c1a:	pop    eax
  425c1b:	jle    0x425c8f
  425c1d:	sti    
  425c1e:	daa    
  425c1f:	outs   dx,BYTE PTR ds:[esi]
  425c20:	rol    BYTE PTR [eax],0x31
  425c23:	clc    
  425c24:	fld    QWORD PTR [ebx]
  425c26:	mov    esp,0x274e4826
  425c2b:	sbb    BYTE PTR [edi],bh
  425c2d:	call   0x976605fd
  425c32:	fnstsw WORD PTR [ecx+edx*4-0xc32c065]
  425c39:	xchg   edi,eax
  425c3a:	cmp    edi,ebx
  425c3c:	sub    DWORD PTR [ebx+0x68c1674c],0x7f
  425c43:	xchg   esi,eax
  425c44:	sbb    BYTE PTR [esi],ah
  425c46:	(bad)  
  425c47:	mov    edx,0x58d106b5
  425c4c:	mov    bl,dh
  425c4e:	push   ebp
  425c4f:	adc    DWORD PTR [ebp+0x2c651290],edx
  425c55:	push   ecx
  425c56:	xor    edx,DWORD PTR [eax+0x359e36ab]
  425c5c:	imul   esi,DWORD PTR [eax-0x7f],0x4a741a61
  425c63:	dec    ebp
  425c64:	ss xchg esp,eax
  425c66:	stos   DWORD PTR es:[edi],eax
  425c67:	cmp    ah,bh
  425c69:	dec    esi
  425c6a:	out    0xed,al
  425c6c:	xchg   esp,eax
  425c6d:	mov    ds:0xe6f82c6e,eax
  425c72:	sub    al,0x46
  425c74:	(bad)  
  425c75:	in     al,0xaa
  425c77:	loop   0x425ccd
  425c79:	dec    esi
  425c7a:	lock push ecx
  425c7c:	out    dx,eax
  425c7d:	test   BYTE PTR [edi],al
  425c7f:	jmp    0x26571596
  425c84:	jns    0x425c11
  425c86:	cli    
  425c87:	lock and esp,DWORD PTR [ebp-0x576d647d]
  425c8e:	cli    
  425c8f:	mov    WORD PTR gs:[ebx+eax*4-0x44],?
  425c94:	xor    cl,dh
  425c96:	and    al,0x46
  425c98:	jno    0x425d03
  425c9a:	fs sub edx,edx
  425c9d:	in     al,dx
  425c9e:	push   eax
  425c9f:	arpl   di,bx
  425ca1:	and    dh,BYTE PTR [ebx+0x46d566f]
  425ca7:	lds    ecx,FWORD PTR [edx]
  425ca9:	fwait
  425caa:	repz lea esp,[esi+0x6c60913d]
  425cb1:	cld    
  425cb2:	shl    edi,1
  425cb4:	or     al,0x3d
  425cb6:	mov    edi,0xb1a0c34c
  425cbb:	in     eax,0x55
  425cbd:	sub    edx,DWORD PTR [ebp-0x6e46f89d]
  425cc3:	cs stos BYTE PTR es:[edi],al
  425cc5:	icebp  
  425cc6:	dec    eax
  425cc7:	jmp    0x425c6d
  425cc9:	add    al,0x3a
  425ccb:	sbb    al,BYTE PTR [eax+0x17ae64e7]
  425cd1:	out    dx,al
  425cd2:	sahf   
  425cd3:	sub    eax,0x8d3a5249
  425cd8:	dec    ebx
  425cd9:	retf   0x8388
  425cdc:	ins    DWORD PTR es:[edi],dx
  425cdd:	imul   ebx,DWORD PTR [eax],0x28
  425ce0:	std    
  425ce1:	arpl   WORD PTR [esp+ebp*1],di
  425ce4:	inc    esp
  425ce5:	icebp  
  425ce6:	les    edi,FWORD PTR [ebp-0x4b]
  425ce9:	imul   esp,DWORD PTR [ebx+0x4e],0xffffff99
  425ced:	fsubr  st,st(2)
  425cef:	or     eax,0x556a6f9e
  425cf4:	and    eax,DWORD PTR [ebx]
  425cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cf7:	push   eax
  425cf8:	inc    edi
  425cf9:	mov    ebx,esp
  425cfb:	inc    eax
  425cfc:	je     0x425cb6
  425cfe:	int    0x9c
  425d00:	fadd   DWORD PTR [ebx+ebp*2+0x3d8e5cff]
  425d07:	and    BYTE PTR [eax+esi*1+0x1e95ab1],al
  425d0e:	stos   BYTE PTR es:[edi],al
  425d0f:	inc    esp
  425d10:	mov    edx,eax
  425d12:	dec    ebx
  425d13:	clc    
  425d14:	ret    
  425d15:	in     eax,0xf4
  425d17:	hlt    
  425d18:	add    bh,dl
  425d1a:	jecxz  0x425d1d
  425d1c:	fwait
  425d1d:	add    al,0xae
  425d1f:	call   0x6dad:0x2ba10fdf
  425d26:	cmp    esi,DWORD PTR [ebx+0x4f]
  425d29:	inc    eax
  425d2a:	ror    edx,0x2a
  425d2d:	cld    
  425d2e:	pop    ebp
  425d2f:	add    DWORD PTR [edx+0x1fa9414],ecx
  425d35:	jmp    0x425d57
  425d37:	inc    ebx
  425d38:	add    BYTE PTR es:[eax],al
  425d3b:	add    BYTE PTR [eax-0x57e1776],dh
  425d41:	jecxz  0x425d3c
  425d43:	mov    ebx,0x99242062
  425d48:	jo     0x425dc3
  425d4a:	addr16 (bad) 
  425d4c:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	test   DWORD PTR [edx],eax
  425d52:	add    BYTE PTR [eax],al
  425d54:	jmp    0x7ca6:0x36c4ebe3
  425d5b:	pop    ss
  425d5c:	jp     0x425d7b
  425d5e:	je     0x425dc9
  425d60:	jle    0x425d73
  425d62:	int3   
  425d63:	jge    0x425de1
  425d65:	sbb    eax,0xffff4f7f
  425d6a:	pop    ebx
  425d6b:	(bad)  
  425d6d:	dec    ebp
  425d6e:	pop    ds
  425d6f:	jecxz  0x425d40
  425d71:	sti    
  425d72:	out    0x4a,al
  425d74:	adc    ebp,edi
  425d76:	fimul  WORD PTR [esi-0x70]
  425d79:	and    ebp,DWORD PTR [edi+0x59]
  425d7c:	fwait
  425d7d:	fwait
  425d7e:	add    eax,0xb93cbaaf
  425d83:	(bad)  
  425d84:	cli    
  425d85:	(bad)  
  425d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d87:	mov    DWORD PTR [ebx+0x62],esp
  425d8a:	data16 lahf 
  425d8c:	loopne 0x425d9b
  425d8e:	dec    ecx
  425d8f:	shr    ch,1
  425d91:	jl     0x425d38
  425d93:	les    eax,FWORD PTR [ebx+0x46d0399f]
  425d99:	popa   
  425d9a:	xor    edi,DWORD PTR [ebp-0x2acbc38d]
  425da0:	shl    DWORD PTR [ebp-0x47],cl
  425da3:	adc    eax,0xa2068737
  425da8:	je     0x425d4b
  425daa:	xor    eax,0xe74e1d32
  425daf:	fdiv   QWORD PTR [edx+0x73b9309b]
  425db5:	jecxz  0x425e22
  425db7:	jno    0x425d94
  425db9:	jno    0x425ddc
  425dbb:	or     al,0x63
  425dbd:	mov    ebx,0x19e390f4
  425dc2:	popa   
  425dc3:	cmp    BYTE PTR [esi+0x65],dh
  425dc6:	push   eax
  425dc7:	stos   BYTE PTR es:[edi],al
  425dc8:	je     0x425dd2
  425dca:	add    al,0xc6
  425dcc:	rcr    BYTE PTR [ebp+0x34],1
  425dcf:	or     DWORD PTR ds:0xca6616c5,edi
  425dd5:	mov    edx,edx
  425dd7:	pop    esp
  425dd8:	aam    0xd8
  425dda:	sti    
  425ddb:	fist   WORD PTR ds:0x45bf5dca
  425de1:	cmp    DWORD PTR [esi],0x3137bdd9
  425de7:	mov    BYTE PTR [esi+0x4fb38a65],dl
  425ded:	(bad)  
  425dee:	das    
  425def:	sub    eax,0x7d2fd5a3
  425df4:	bound  edx,QWORD PTR [edi+0x1f259c04]
  425dfa:	bound  ebp,QWORD PTR [eax]
  425dfc:	mov    cl,0xad
  425dfe:	mov    bl,0xfc
  425e00:	dec    edi
  425e01:	in     al,0xaa
  425e03:	lods   eax,DWORD PTR ds:[esi]
  425e04:	idiv   esp
  425e06:	stos   DWORD PTR es:[edi],eax
  425e07:	dec    ebp
  425e08:	out    dx,eax
  425e09:	jmp    0x1fe401f6
  425e0e:	cmp    al,dh
  425e10:	push   eax
  425e11:	mov    eax,ds:0xe3427894
  425e16:	(bad)  
  425e17:	(bad)  
  425e18:	pop    ecx
  425e19:	dec    esp
  425e1a:	jb     0x425e08
  425e1c:	or     eax,DWORD PTR [ebp-0x6]
  425e1f:	push   ds
  425e20:	test   eax,0x38c6577e
  425e25:	pop    es
  425e26:	int    0xc3
  425e28:	add    eax,0x585c984f
  425e2d:	retf   0x6df2
  425e30:	xchg   edi,eax
  425e31:	ret    
  425e32:	(bad)  
  425e33:	sub    bl,dl
  425e35:	pop    esp
  425e36:	sbb    BYTE PTR [ebp-0x57],ah
  425e39:	mov    al,ds:0x996d4d6d
  425e3e:	aad    0xcf
  425e40:	test   eax,esi
  425e42:	(bad)  
  425e43:	call   FWORD PTR [ebx-0x29]
  425e46:	in     eax,dx
  425e47:	push   ebx
  425e48:	xchg   esi,eax
  425e49:	and    eax,0xb13fa98a
  425e4e:	inc    esp
  425e4f:	popa   
  425e50:	pop    ss
  425e51:	adc    eax,0x9d9c5de4
  425e56:	push   ebx
  425e57:	daa    
  425e58:	mov    ebp,0x3e5db271
  425e5d:	shl    BYTE PTR [edx-0x7d9a565b],1
  425e63:	or     eax,0x748acb16
  425e68:	push   ss
  425e69:	mov    ebp,0x34e2de10
  425e6e:	cmp    eax,0x3c1052c0
  425e73:	fisttp DWORD PTR [eax]
  425e75:	(bad)  
  425e78:	pop    esi
  425e79:	rcr    DWORD PTR [eax],1
  425e7b:	scas   al,BYTE PTR es:[edi]
  425e7c:	rcl    bl,0x8b
  425e7f:	loope  0x425ef4
  425e81:	out    dx,al
  425e82:	iret   
  425e83:	pop    es
  425e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e85:	sahf   
  425e86:	xchg   DWORD PTR [edi+ecx*8],ecx
  425e89:	mov    al,0xc8
  425e8b:	cmp    DWORD PTR [edx-0xd],0x476a6271
  425e92:	mov    esi,0xa294ae60
  425e97:	add    BYTE PTR cs:[edi+0x7673d65a],bl
  425e9e:	mov    eax,0x3d0a8479
  425ea3:	std    
  425ea4:	idiv   DWORD PTR [eax]
  425ea6:	retf   
  425ea7:	test   eax,0xb0e51ec9
  425eac:	stmxcsr DWORD PTR [esi]
  425eaf:	mov    al,0xcf
  425eb1:	pop    esi
  425eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eb3:	out    0x7e,al
  425eb5:	imul   ebx,DWORD PTR [esi+ebp*1+0x4b],0xc414c535
  425ebd:	fst    DWORD PTR [edx+0x17]
  425ec0:	add    dh,0xc6
  425ec3:	pusha  
  425ec4:	data16 jp 0x425e84
  425ec7:	dec    esp
  425ec8:	test   al,0x1e
  425eca:	sbb    eax,DWORD PTR [ecx+0x4a]
  425ecd:	adc    al,0xff
  425ecf:	add    esp,DWORD PTR [esi+0x3c10fb37]
  425ed5:	xlat   BYTE PTR ds:[ebx]
  425ed6:	in     al,0xe1
  425ed8:	ss call 0xf2ee407e
  425ede:	or     al,BYTE PTR [esi-0x9]
  425ee1:	rol    bl,cl
  425ee3:	stos   BYTE PTR es:[edi],al
  425ee4:	jae    0x425f1c
  425ee6:	pop    ds
  425ee7:	mov    bl,0xf4
  425ee9:	xchg   esi,eax
  425eea:	pushf  
  425eeb:	fs mov esi,0x9769640
  425ef1:	mov    ebx,0x56922a30
  425ef6:	dec    ebp
  425ef7:	push   ss
  425ef8:	loop   0x425ea3
  425efa:	in     eax,0x6f
  425efc:	scas   al,BYTE PTR es:[edi]
  425efd:	pop    ss
  425efe:	fimul  WORD PTR [ebx+esi*4]
  425f01:	das    
  425f02:	mov    ds:0x4e272a5,eax
  425f07:	enter  0x564a,0x17
  425f0b:	push   0xc7ab94c0
  425f10:	call   FWORD PTR [edx-0x30ff788e]
  425f16:	int    0xe8
  425f18:	mov    dl,0x9d
  425f1a:	jle    0x425f13
  425f1c:	mov    DWORD PTR [ebx+0x15],esi
  425f1f:	jae    0x425f29
  425f21:	mov    ch,0xc
  425f23:	push   eax
  425f24:	mov    ah,0xe9
  425f26:	(bad)  
  425f27:	imul   ebx,edx,0x30d2dff2
  425f2d:	daa    
  425f2e:	and    BYTE PTR [edi-0x94a6fca],dl
  425f34:	or     DWORD PTR [ecx-0x1a230cce],eax
  425f3a:	adc    al,0xef
  425f3d:	int    0xa3
  425f3f:	add    al,0x24
  425f41:	ficom  WORD PTR [esi+0x4]
  425f44:	in     eax,0xe
  425f46:	adc    DWORD PTR [ebx-0x3a],edi
  425f49:	shl    ebp,cl
  425f4b:	add    dl,BYTE PTR [eax]
  425f4d:	adc    esi,DWORD PTR ds:0x914cfaa
  425f53:	ret    0x5527
  425f56:	mov    cl,cl
  425f58:	test   edi,edi
  425f5a:	inc    eax
  425f5b:	inc    edx
  425f5c:	mov    WORD PTR ds:[ebp-0x33],gs
  425f60:	add    edx,esp
  425f62:	mov    BYTE PTR [ecx-0x1c],al
  425f65:	jae    0x425f5a
  425f67:	and    eax,DWORD PTR [ebx-0x56]
  425f6a:	sbb    eax,0x5a6dacff
  425f6f:	jo     0x425fa0
  425f71:	sbb    ecx,DWORD PTR [ebp-0x54]
  425f74:	std    
  425f75:	jge    0x425fc1
  425f77:	in     eax,dx
  425f78:	push   0xffffffd2
  425f7a:	mov    WORD PTR [ebx-0x6a422829],es
  425f80:	(bad)  
  425f81:	hlt    
  425f82:	cmp    dl,ah
  425f84:	jnp    0x425fb5
  425f86:	push   ebx
  425f87:	pop    eax
  425f88:	add    BYTE PTR [ebx-0x71],ah
  425f8b:	(bad)
  425f90:	enter  0x6de,0xe5
  425f94:	adc    edi,DWORD PTR [edi+0x69863033]
  425f9a:	add    bh,BYTE PTR [esi+0x7b9f1892]
  425fa0:	call   0x4f890013
  425fa5:	push   esi
  425fa6:	mov    ebp,0x62bad91a
  425fab:	(bad)  
  425fac:	shl    BYTE PTR [edx+0x3456b2fa],cl
  425fb2:	and    al,BYTE PTR [ebp-0x1d]
  425fb5:	mov    edx,0x4f88a210
  425fba:	xor    bh,dl
  425fbc:	lods   al,BYTE PTR ds:[esi]
  425fbd:	sub    DWORD PTR [ebp+0x76],ebp
  425fc0:	dec    ecx
  425fc1:	nop
  425fc2:	mov    edi,0xa0287bef
  425fc7:	xor    ah,bh
  425fc9:	test   BYTE PTR [ecx+0x65df68a6],ch
  425fcf:	dec    edi
  425fd0:	adc    eax,0xc036e965
  425fd5:	mov    al,0x7c
  425fd7:	scas   al,BYTE PTR es:[edi]
  425fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd9:	add    BYTE PTR [eax],al
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [esi],cs
  425fe9:	or     BYTE PTR [esi-0x7c],ah
  425fec:	arpl   ax,bx
  425fee:	add    DWORD PTR [eax],eax
  425ff0:	test   DWORD PTR [edx],eax
  425ff2:	add    BYTE PTR [eax],al
  425ff4:	push   esi
  425ff5:	cmp    BYTE PTR [ebx+0x31],bh
  425ff8:	xlat   BYTE PTR ds:[ebx]
  425ff9:	cmp    BYTE PTR [ebx],dh
  425ffb:	sbb    DWORD PTR [ebp+0x553a0045],edx
  426001:	(bad)  
  426002:	jnp    0x425f93
  426004:	fild   DWORD PTR [eax]
  426006:	mov    esp,0x4c166142
  42600b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42600c:	fsubr  QWORD PTR [esi+0x4f9e09a5]
  426012:	mov    ds,ecx
  426014:	mov    edi,0xb3bbbc2d
  426019:	das    
  42601a:	dec    edi
  42601b:	adc    al,0x0
  42601d:	xor    al,0xc1
  42601f:	stos   BYTE PTR es:[edi],al
  426020:	push   ebx
  426021:	iret   
  426022:	xor    al,cl
  426024:	push   eax
  426025:	stos   BYTE PTR es:[edi],al
  426026:	fidiv  DWORD PTR [ebp-0x647d98f4]
  42602c:	lahf   
  42602d:	sti    
  42602e:	ret    0xf01a
  426031:	pop    ebx
  426032:	xchg   DWORD PTR [eax],eax
  426034:	add    eax,edi
  426036:	out    dx,al
  426037:	sbb    dh,BYTE PTR [eax+edx*8]
  42603a:	retf   
  42603b:	push   eax
  42603c:	imul   esi,DWORD PTR [edi+eiz*8+0x437290c5],0xffffff93
  426044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426045:	and    eax,0x82231e07
  42604a:	mov    edi,0x59f2f537
  42604f:	out    0x8f,al
  426051:	jge    0x42605f
  426053:	inc    ebx
  426054:	xchg   ebx,eax
  426055:	call   0x336f54d4
  42605a:	ret    0x2c34
  42605d:	es adc al,0x9e
  426060:	push   es
  426061:	sahf   
  426062:	mov    ecx,DWORD PTR [ebp+0x3d]
  426065:	mov    eax,0x7d553624
  42606a:	out    0xae,eax
  42606c:	popf   
  42606d:	xchg   ebx,eax
  42606e:	stos   DWORD PTR es:[edi],eax
  42606f:	add    al,BYTE PTR [ecx-0x25]
  426072:	loopne 0x4260b5
  426074:	out    dx,al
  426075:	lds    ebx,FWORD PTR [edx]
  426077:	push   ds
  426078:	mov    bh,BYTE PTR [ebp+eiz*8-0x607d9155]
  42607f:	mov    dh,0xf6
  426081:	loop   0x426085
  426083:	inc    ebp
  426084:	dec    esp
  426085:	mov    bl,0xf0
  426087:	mov    ah,dh
  426089:	add    BYTE PTR [edi],bh
  42608b:	scas   eax,DWORD PTR es:[edi]
  42608c:	daa    
  42608d:	(bad)  
  42608e:	sbb    eax,0x4ad6f318
  426093:	inc    edx
  426094:	push   eax
  426095:	push   ebx
  426096:	xchg   ecx,eax
  426097:	imul   edx,DWORD PTR [esi+0x32598dd4],0x76
  42609e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42609f:	lock aaa 
  4260a1:	pop    ebx
  4260a2:	outs   dx,BYTE PTR ds:[esi]
  4260a3:	dec    edx
  4260a4:	repnz adc al,0xd0
  4260a7:	or     DWORD PTR ds:0x2b903c8d,esp
  4260ad:	shl    BYTE PTR [ebx+eax*4-0x1796d328],cl
  4260b4:	js     0x4260e6
  4260b6:	xchg   ebp,eax
  4260b7:	iret   
  4260b8:	pop    edi
  4260b9:	lods   eax,DWORD PTR ds:[esi]
  4260ba:	es clc 
  4260bc:	fldenv [ebp+0x63]
  4260bf:	rcr    DWORD PTR [edx+0x61],0xc4
  4260c3:	or     ebx,DWORD PTR [ebx+0x1a379db6]
  4260c9:	or     al,BYTE PTR [ebx]
  4260cb:	retf   0xf98b
  4260ce:	cmp    dl,dh
  4260d0:	loope  0x4260cb
  4260d2:	mov    ?,WORD PTR [edi-0x48]
  4260d5:	mov    edi,0x93a8d852
  4260da:	dec    eax
  4260db:	not    BYTE PTR [edi-0x4eef0a3a]
  4260e1:	rol    DWORD PTR [edi+0x2b5ba0b0],cl
  4260e7:	inc    esp
  4260e8:	inc    ecx
  4260e9:	inc    ebp
  4260ea:	xor    esi,DWORD PTR [edi+0x5533d59]
  4260f0:	lods   eax,DWORD PTR ds:[esi]
  4260f1:	lds    edi,FWORD PTR [ecx+eax*1-0x67]
  4260f5:	popf   
  4260f6:	fldcw  WORD PTR [edi-0x1b]
  4260f9:	pushf  
  4260fa:	mov    ecx,0xeb1c9ad6
  4260ff:	pop    edi
  426100:	aam    0x4f
  426102:	sar    BYTE PTR [edi-0xe],1
  426105:	test   DWORD PTR [bp+si+0x3a4a],0xd181ebba
  42610e:	ds jl  0x426114
  426111:	ds jecxz 0x42618c
  426114:	adc    BYTE PTR [ebx],bh
  426116:	mov    bh,0x2e
  426118:	jno    0x4260e8
  42611a:	gs pop edx
  42611c:	xor    al,0x7d
  42611e:	ja     0x4260fd
  426120:	cld    
  426121:	bound  ebp,QWORD PTR [edi-0x1f]
  426124:	iret   
  426125:	mov    eax,ds:0x4048d0ad
  42612a:	adc    ch,dh
  42612c:	sbb    al,0xf5
  42612e:	xor    BYTE PTR [eax+0x34],bh
  426131:	sti    
  426132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426133:	cdq    
  426134:	iret   
  426135:	dec    eax
  426136:	push   ebx
  426137:	scas   eax,DWORD PTR es:[edi]
  426138:	mov    DWORD PTR fs:[eax-0x65ce3028],0x739904ec
  426143:	pop    esp
  426144:	jl     0x426118
  426146:	cmc    
  426147:	jge    0x42610e
  426149:	dec    esi
  42614a:	jne    0x42614c
  42614c:	addr16 xchg ebp,eax
  42614e:	out    dx,al
  42614f:	aam    0x7e
  426151:	mov    ds:0x306c0c58,eax
  426156:	jns    0x426125
  426158:	pop    ebp
  426159:	add    BYTE PTR [edx-0x72],dh
  42615c:	inc    esp
  42615d:	inc    esp
  42615e:	stc    
  42615f:	push   0x31
  426161:	lea    ebp,[ebx+0x34]
  426164:	inc    esi
  426165:	rol    BYTE PTR [edx-0x5f5cb040],cl
  42616b:	dec    ecx
  42616c:	add    al,BYTE PTR [ebp+0x63]
  42616f:	ret    0xb01
  426172:	and    al,0x59
  426174:	mov    ebx,0x15ef7819
  426179:	ja     0x4261d3
  42617b:	imul   esp,DWORD PTR [edi+0x5b],0x7bf6dd66
  426182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426183:	xor    eax,0xfbe3b738
  426188:	pop    edx
  426189:	popa   
  42618a:	and    DWORD PTR [esp+ebx*1+0x5e],esp
  42618e:	mov    bh,0xd1
  426190:	dec    edx
  426191:	test   al,0xfd
  426193:	mov    ?,WORD PTR [ecx-0x7ce0261f]
  426199:	pusha  
  42619a:	cmp    bl,bh
  42619c:	jmp    0x426204
  42619e:	pop    eax
  42619f:	mov    al,ds:0x7da62210
  4261a4:	or     DWORD PTR [eax+0x68],0x6d
  4261a8:	es push ds
  4261aa:	std    
  4261ab:	mov    ebp,0xde3f4ec9
  4261b0:	adc    BYTE PTR [ecx+0x14],0xbd
  4261b4:	jge    0x426172
  4261b6:	inc    esp
  4261b7:	ret    0x43fc
  4261ba:	ins    BYTE PTR es:[edi],dx
  4261bb:	sub    al,0x57
  4261bd:	or     dl,BYTE PTR [edx+0x2d681896]
  4261c3:	push   0x55
  4261c5:	dec    esp
  4261c6:	pop    ecx
  4261c7:	ins    DWORD PTR es:[edi],dx
  4261c8:	aad    0xad
  4261ca:	dec    ebx
  4261cb:	(bad)  
  4261cc:	(bad)  
  4261cd:	cli    
  4261ce:	frstor [ebx-0x7c]
  4261d1:	dec    BYTE PTR [edx-0x1c3fa97c]
  4261d7:	call   0xa445:0xc9c26fdd
  4261de:	std    
  4261df:	fxam   
  4261e1:	add    al,0xa3
  4261e3:	int    0x49
  4261e5:	pop    esi
  4261e6:	lahf   
  4261e7:	jb     0x4261d5
  4261e9:	gs and edx,eax
  4261ec:	inc    ebp
  4261ed:	pop    ebp
  4261ee:	out    0x8b,al
  4261f0:	(bad)  
  4261f1:	sub    BYTE PTR [esi-0x5e04923b],bh
  4261f7:	jnp    0x426186
  4261f9:	and    dh,dh
  4261fb:	(bad)  
  4261fd:	push   eax
  4261fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261ff:	pop    ebx
  426200:	cs adc al,0x50
  426203:	inc    eax
  426204:	leave  
  426205:	jbe    0x4261f5
  426207:	mov    eax,0xfd493be4
  42620c:	adc    DWORD PTR [esi-0x6f0ed93f],esp
  426212:	push   eax
  426213:	xchg   ebx,eax
  426214:	out    0xdb,al
  426216:	sbb    eax,DWORD PTR [ebx+0x15337987]
  42621c:	out    0xb3,eax
  42621e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42621f:	lock mov dh,0x9
  426222:	ss (bad) 
  426224:	mov    bl,0xfe
  426226:	int3   
  426227:	inc    eax
  426228:	fcom   DWORD PTR [ebx+0x3e49077e]
  42622e:	mov    ds:0xda74702a,al
  426233:	pusha  
  426234:	leave  
  426235:	lahf   
  426236:	sub    eax,0x6a1465c7
  42623b:	repnz out dx,eax
  42623d:	stc    
  42623e:	into   
  42623f:	scas   al,BYTE PTR es:[edi]
  426240:	mov    esi,0xf295c541
  426245:	adc    DWORD PTR [eax+esi*4+0x63],0xb7225d6e
  42624d:	aad    0x2b
  42624f:	into   
  426250:	push   ebp
  426251:	lds    esp,FWORD PTR [ebx-0x47]
  426254:	call   0xdb592f2b
  426259:	cmp    eax,0x1eb93965
  42625e:	test   esp,ebx
  426260:	pop    esp
  426261:	test   DWORD PTR ds:0x62414c55,ebp
  426267:	icebp  
  426268:	(bad)  
  426269:	inc    edi
  42626a:	xor    BYTE PTR [ebp+ebx*2-0x61af4949],bh
  426271:	mov    ebp,0xcaacfc18
  426276:	xor    bh,bl
  426278:	and    BYTE PTR [eax],al
  42627a:	add    BYTE PTR [eax],al
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0xae12:0x1065e400
  42628c:	call   0x8542646b
  426291:	add    al,BYTE PTR [eax]
  426293:	add    BYTE PTR [ecx-0x40ee9516],dl
  426299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42629a:	fwait
  42629b:	cmp    BYTE PTR [edi+eax*1-0x4b51c9b4],dh
  4262a2:	or     eax,0x4d054313
  4262a7:	fsubr  QWORD PTR [ecx+0x45]
  4262aa:	popa   
  4262ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262ac:	(bad)  
  4262ae:	xchg   ebp,eax
  4262af:	loope  0x426271
  4262b1:	pop    ss
  4262b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262b3:	adc    ah,dl
  4262b5:	icebp  
  4262b6:	aaa    
  4262b7:	jp     0x426301
  4262b9:	nop
  4262ba:	jg     0x426304
  4262bc:	out    dx,al
  4262bd:	adc    BYTE PTR [edi-0x60],bl
  4262c0:	sbb    eax,0x47d33691
  4262c5:	cli    
  4262c6:	adc    eax,0x8e671771
  4262cb:	jge    0x42629a
  4262cd:	retf   0xedbb
  4262d0:	shl    DWORD PTR [eax],cl
  4262d2:	shl    ebp,cl
  4262d4:	push   ds
  4262d5:	pop    esi
  4262d6:	mov    ebx,DWORD PTR [edi]
  4262d8:	mov    eax,0xd5f6c5
  4262dd:	inc    edi
  4262de:	std    
  4262df:	xchg   edx,eax
  4262e0:	pop    ecx
  4262e1:	test   DWORD PTR [ecx+0x3b],edi
  4262e4:	ins    DWORD PTR es:[edi],dx
  4262e5:	and    cl,BYTE PTR [ecx+0x7f]
  4262e8:	pop    edx
  4262e9:	pop    es
  4262ea:	xchg   esp,eax
  4262eb:	jmp    0x42631f
  4262ed:	push   esp
  4262ee:	jmp    0x426314
  4262f0:	mov    eax,0x9c283c1f
  4262f5:	mov    al,ds:0x5ac7c18
  4262fa:	dec    ebx
  4262fb:	pushf  
  4262fc:	and    bh,BYTE PTR [edi+0x9]
  4262ff:	jbe    0x4262f5
  426301:	add    al,0x9
  426303:	pop    esi
  426304:	push   esi
  426305:	mov    ch,0xc4
  426308:	sbb    esp,esp
  42630a:	lock (bad) 
  42630c:	int    0x9d
  42630e:	test   ebx,edx
  426310:	in     al,0xf5
  426312:	pop    ds
  426313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426314:	inc    ebp
  426315:	jae    0x4262fa
  426317:	mov    ds:0xf89de421,al
  42631c:	mov    esi,0x1c5a229f
  426321:	mov    al,0xab
  426323:	ror    DWORD PTR [esi],0x22
  426326:	mov    es,ebp
  426328:	mov    esp,0xcf8ef759
  42632d:	mov    dl,0xfd
  42632f:	fcom   DWORD PTR [edi+0x3a]
  426332:	dec    ebp
  426333:	loop   0x4263a2
  426335:	mov    cl,0xc9
  426337:	lea    ebp,[esi]
  426339:	jo     0x4262d6
  42633b:	addr16 add eax,esp
  42633e:	fxch   st(5)
  426340:	cmp    ebx,esi
  426342:	mov    bh,0x9f
  426344:	and    DWORD PTR [ebx-0x33],ebx
  426347:	xchg   BYTE PTR [esi+eiz*2-0x292ee1b3],al
  42634e:	push   esp
  42634f:	jmp    0x42631a
  426351:	and    DWORD PTR [ebx+edi*1],esi
  426354:	bsf    esp,DWORD PTR [esi+0xd]
  426358:	or     cl,BYTE PTR [eax+0x3b]
  42635b:	test   edx,ecx
  42635d:	jne    0x426314
  42635f:	or     ecx,DWORD PTR [ecx-0x73]
  426362:	sbb    al,0x8f
  426364:	stc    
  426365:	ja     0x42635b
  426367:	pop    ecx
  426368:	rcr    BYTE PTR [edi],1
  42636a:	pushf  
  42636b:	sti    
  42636c:	xchg   ecx,eax
  42636d:	lds    esp,FWORD PTR [edi]
  42636f:	pop    esi
  426370:	iret   
  426371:	mov    edi,0x14d6bae4
  426376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426377:	arpl   WORD PTR [ecx+0x1c],si
  42637a:	loope  0x4263a1
  42637c:	sub    BYTE PTR [edi+0x4e1f37c],cl
  426382:	push   ecx
  426383:	mov    ?,WORD PTR [ebx]
  426385:	mov    bl,0xd3
  426387:	call   0xeb6a:0x68c13219
  42638e:	xor    dl,ch
  426390:	iret   
  426391:	mov    ah,0x68
  426393:	enter  0x5074,0x76
  426397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426398:	push   ss
  426399:	aad    0x3e
  42639b:	fcmovu st,st(6)
  42639d:	pop    ebp
  42639e:	mov    ds:0xc81904f8,eax
  4263a3:	mov    cl,0x6f
  4263a5:	popf   
  4263a6:	jnp    0x426427
  4263a8:	adc    DWORD PTR [edx],ebx
  4263aa:	aas    
  4263ab:	mov    cl,dl
  4263ad:	hlt    
  4263ae:	sbb    al,0xe7
  4263b0:	xor    bl,BYTE PTR [edi+0x76fb64d9]
  4263b6:	and    BYTE PTR [ebx],ah
  4263b8:	xor    BYTE PTR [ecx+0x86b00f4],bh
  4263be:	into   
  4263bf:	jle    0x426373
  4263c1:	mov    BYTE PTR [ebp+0x4b],dh
  4263c4:	adc    bh,BYTE PTR [esi+ebp*4-0x4e]
  4263c8:	push   ds
  4263c9:	or     al,0xa7
  4263cb:	std    
  4263cc:	out    0x19,al
  4263ce:	stos   DWORD PTR es:[edi],eax
  4263cf:	mul    DWORD PTR [esp+edi*8-0x4ad56ee7]
  4263d6:	enter  0x40c4,0x4e
  4263da:	mov    al,0x6d
  4263dc:	and    al,0x1b
  4263de:	inc    edi
  4263df:	aas    
  4263e0:	xlat   BYTE PTR ds:[ebx]
  4263e1:	mov    edx,0x13994462
  4263e6:	sti    
  4263e7:	fwait
  4263e8:	jle    0x426432
  4263ea:	test   DWORD PTR [eax-0x2d],edi
  4263ed:	xchg   esp,eax
  4263ee:	imul   ecx,DWORD PTR ds:0x4d2c219e,0xb
  4263f5:	mov    ds:0xcdeebbf2,eax
  4263fa:	mul    BYTE PTR [edx]
  4263fc:	sub    ebx,DWORD PTR [eax]
  4263fe:	(bad)  
  4263ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426400:	mov    eax,ds:0x4414574e
  426405:	sub    bl,BYTE PTR [ebx+0x3b18594f]
  42640b:	add    al,0x44
  42640d:	jmp    0x4263ca
  42640f:	add    DWORD PTR [ebp+0x431c035a],edx
  426415:	push   ebp
  426416:	(bad)  
  426417:	dec    eax
  426418:	inc    edi
  426419:	ret    
  42641a:	aas    
  42641b:	les    esi,FWORD PTR [eax]
  42641d:	push   0x113c85eb
  426422:	cwde   
  426423:	fidivr WORD PTR [edx+0x32]
  426426:	dec    esi
  426427:	retf   0x8508
  42642a:	jl     0x426436
  42642c:	fisttp WORD PTR [edx-0x48532edd]
  426432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426433:	sbb    dh,bl
  426435:	sbb    al,0x2c
  426437:	push   es
  426438:	sub    DWORD PTR ds:0xe60e09f2,ebx
  42643e:	mov    esi,0x5ecba1db
  426443:	gs xor al,0xc7
  426446:	test   eax,0x535ab5b
  42644b:	adc    al,0x3f
  42644d:	popf   
  42644e:	outs   dx,DWORD PTR ds:[esi]
  42644f:	xor    al,BYTE PTR [ebx]
  426451:	in     al,dx
  426452:	mov    esp,0x7057a560
  426457:	mov    edi,0x192c0e87
  42645c:	mov    bl,0xca
  42645e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42645f:	mov    ds:0x1c914e6d,al
  426464:	cwde   
  426465:	pop    ebp
  426466:	xor    eax,0x7ba67e11
  42646b:	rcr    BYTE PTR [ebp-0x6e2a54f5],cl
  426471:	xchg   esi,eax
  426472:	inc    esp
  426473:	stos   DWORD PTR es:[edi],eax
  426474:	and    esi,esi
  426476:	jne    0x426484
  426478:	push   ebx
  426479:	repz test bh,cl
  42647c:	popf   
  42647d:	or     eax,0x5720bcbc
  426482:	jecxz  0x42642c
  426484:	aaa    
  426485:	scas   al,BYTE PTR es:[edi]
  426486:	mov    edx,0xa8690410
  42648b:	push   ecx
  42648c:	test   eax,0xdea43c0e
  426491:	mov    eax,ds:0x317cbfc3
  426496:	push   0x50
  426498:	ror    BYTE PTR [edi+eax*4],1
  42649b:	xor    BYTE PTR [edi],bh
  42649d:	and    eax,0xe8f55566
  4264a2:	add    al,bl
  4264a4:	push   0xa54338ec
  4264a9:	jg     0x426438
  4264ab:	outs   dx,BYTE PTR ds:[esi]
  4264ac:	popa   
  4264ad:	xchg   esi,eax
  4264ae:	inc    eax
  4264af:	add    DWORD PTR [ebx+0x22096fcf],0x10
  4264b6:	add    DWORD PTR [eax-0x3c],ecx
  4264b9:	loop   0x42652e
  4264bb:	mov    dl,0x1b
  4264bd:	xor    eax,0xc51d05f7
  4264c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264c3:	fdivr  st(5),st
  4264c5:	inc    edx
  4264c6:	ror    DWORD PTR [edi+ecx*2-0x4e16c88a],1
  4264cd:	xor    ah,BYTE PTR [esi]
  4264cf:	push   ebp
  4264d0:	add    BYTE PTR [eax],bh
  4264d2:	es dec ebx
  4264d4:	loop   0x4264c5
  4264d6:	lods   eax,DWORD PTR ds:[esi]
  4264d7:	push   ss
  4264d8:	cdq    
  4264d9:	mov    bl,0xbf
  4264db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264dc:	xlat   BYTE PTR ds:[ebx]
  4264dd:	ss mov ch,0xd
  4264e0:	jecxz  0x4264bf
  4264e2:	sub    BYTE PTR [edx],al
  4264e4:	mov    dh,0xb6
  4264e6:	shl    BYTE PTR [esi+0x62a89762],1
  4264ec:	iret   
  4264ed:	hlt    
  4264ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264ef:	cmp    eax,0xe537deef
  4264f4:	call   0x3a2f:0x266f4547
  4264fb:	mov    bh,0xd9
  4264fd:	or     al,0x96
  4264ff:	inc    esp
  426500:	ja     0x4264e6
  426502:	je     0x426524
  426504:	loope  0x426513
  426506:	out    0x47,eax
  426508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426509:	bswap  ebx
  42650b:	stos   BYTE PTR es:[edi],al
  42650c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42650d:	popa   
  42650e:	out    0x56,eax
  426510:	add    DWORD PTR [edx+0x20cb6c54],ebp
  426516:	fcmovnb st,st(7)
  426518:	mov    eax,0xb6000000
  42651d:	in     al,0xd7
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0x5ba3512a
  42652c:	ins    DWORD PTR es:[edi],dx
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [ebp+0x49000002],al
  426535:	sbb    BYTE PTR [ecx],0x30
  426538:	xchg   BYTE PTR [edx+0x1a],al
  42653b:	push   eax
  42653c:	retf   0xb86
  42653f:	push   edi
  426540:	jmp    0xbb8b:0xe073d441
  426547:	imul   ebx,DWORD PTR [eax-0x22b73f07],0xb07d7f19
  426551:	jo     0x426506
  426553:	shl    BYTE PTR [esi+ebx*2-0x5df9afcd],cl
  42655a:	mov    ebp,DWORD PTR [ecx]
  42655c:	inc    ecx
  42655d:	sbb    ah,BYTE PTR [ebx]
  42655f:	or     eax,0xad34459a
  426564:	xchg   esi,eax
  426565:	mov    ds:0x44ac0ea1,eax
  42656a:	mov    bh,BYTE PTR [ebp+0x55dac985]
  426570:	push   edi
  426571:	test   al,0x46
  426573:	es test eax,0xad2d110f
  426579:	ret    0x2881
  42657c:	shr    al,1
  42657e:	dec    DWORD PTR [eax]
  426580:	or     eax,0xa3a99eb0
  426585:	inc    ebx
  426586:	mov    DWORD PTR [edi-0x7356902c],ebx
  42658c:	add    esi,ebp
  42658e:	stos   BYTE PTR es:[edi],al
  42658f:	cdq    
  426590:	std    
  426591:	fist   WORD PTR [esp+ebp*8]
  426594:	xor    al,0xf8
  426596:	popa   
  426597:	test   BYTE PTR [esi-0x1ae904bc],dl
  42659d:	loope  0x42652a
  42659f:	mov    gs,WORD PTR [esi]
  4265a1:	inc    edi
  4265a2:	popa   
  4265a3:	and    DWORD PTR [eax],eax
  4265a5:	jge    0x4265d5
  4265a7:	gs mov eax,0xb40fb636
  4265ad:	adc    DWORD PTR [edi],esp
  4265af:	inc    edx
  4265b0:	(bad)  
  4265b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265b2:	xchg   DWORD PTR [ecx+0x7a],edi
  4265b5:	and    al,ah
  4265b7:	sub    DWORD PTR [eax-0x62f85cd2],edx
  4265bd:	sbb    edx,DWORD PTR [bx+0x43]
  4265c1:	outs   dx,BYTE PTR ds:[esi]
  4265c2:	sub    BYTE PTR [esi+ecx*8],bh
  4265c5:	xchg   esp,eax
  4265c6:	leave  
  4265c7:	lds    ecx,FWORD PTR [ebx-0x21]
  4265ca:	int3   
  4265cb:	xor    edx,DWORD PTR [esi]
  4265cd:	mov    eax,0xf3288315
  4265d2:	pop    ecx
  4265d3:	ror    esp,cl
  4265d5:	cmp    ebx,DWORD PTR [eax-0x698c086e]
  4265db:	(bad)  
  4265dc:	xchg   ecx,eax
  4265dd:	pop    es
  4265de:	test   BYTE PTR [ecx-0x3ca767b6],cl
  4265e4:	mov    DWORD PTR [edx+0x60a41a91],esp
  4265ea:	loop   0x42664a
  4265ec:	jnp    0x4265d2
  4265ee:	(bad)
  4265f2:	jg     0x4265cb
  4265f4:	or     edx,ebx
  4265f6:	add    DWORD PTR [ebx],esp
  4265f8:	shl    BYTE PTR [eax-0x221a8c67],1
  4265fe:	(bad)  
  4265ff:	mov    ecx,0x65a3386
  426604:	add    eax,0xd54e9e4b
  426609:	sbb    DWORD PTR [edi-0x706bfad3],ebx
  42660f:	pop    ss
  426610:	jmp    0x1bfc4b1a
  426615:	mov    dh,0xf9
  426617:	push   cs
  426618:	call   0x86bd:0x99dfe4c8
  42661f:	and    DWORD PTR [edi-0x3],edi
  426622:	and    BYTE PTR [edx+ecx*4+0x1a4c7baa],ch
  426629:	cwde   
  42662a:	inc    ecx
  42662b:	(bad)  
  42662c:	out    0xde,eax
  42662e:	sbb    DWORD PTR [eax+0x452f818f],0xffffffe8
  426635:	loopne 0x4265db
  426637:	invlpga 
  42663a:	add    DWORD PTR [edi-0x23617e53],esp
  426640:	jmp    0xcb67a5f3
  426645:	mov    esi,DWORD PTR [edx+0x29f6c7ab]
  42664b:	jl     0x4265d9
  42664d:	nop
  42664e:	inc    edx
  42664f:	mov    esp,0x26a4e194
  426654:	cli    
  426655:	popf   
  426656:	leave  
  426657:	xchg   DWORD PTR [ebp+0x6283e999],esp
  42665d:	mov    WORD PTR [eax+0x7f],fs
  426660:	cdq    
  426661:	adc    dl,BYTE PTR [ebx-0x55]
  426664:	xor    al,BYTE PTR [eax]
  426666:	cmp    esi,ebx
  426668:	call   0xa9b5:0x3b246b59
  42666f:	sub    eax,0xd4eff6fb
  426674:	adc    dh,ch
  426676:	loopne 0x4265fe
  426678:	lahf   
  426679:	sub    al,0x42
  42667b:	aam    0x42
  42667d:	push   ss
  42667e:	dec    eax
  42667f:	xchg   esp,eax
  426680:	rcr    ecx,0xb5
  426683:	sbb    edi,DWORD PTR [eax-0x313c13fe]
  426689:	jo     0x426687
  42668b:	or     DWORD PTR [ecx],ebx
  42668d:	dec    esi
  42668e:	sti    
  42668f:	iret   
  426690:	gs mov cl,0x68
  426693:	xchg   edi,eax
  426694:	cmp    al,0x4b
  426696:	mov    al,ds:0xeb1e4c9c
  42669b:	outs   dx,DWORD PTR ds:[esi]
  42669c:	adc    al,0x46
  42669e:	xchg   esp,eax
  42669f:	mov    eax,0x463bb294
  4266a4:	mov    edi,0x75d87e76
  4266a9:	push   ebx
  4266aa:	call   0x28382445
  4266af:	inc    esi
  4266b0:	nop
  4266b1:	into   
  4266b2:	add    eax,0xb4770de5
  4266b7:	jmp    0x30bc:0x253478a
  4266be:	xchg   BYTE PTR gs:[eax],bl
  4266c1:	or     ebx,DWORD PTR [ebp-0x1431c43a]
  4266c7:	inc    eax
  4266c8:	mov    ds:0x7b0bacc8,al
  4266cd:	stos   BYTE PTR es:[edi],al
  4266ce:	mov    eax,ds:0x842d75f1
  4266d3:	or     BYTE PTR [esi+0x7c],al
  4266d6:	ret    
  4266d7:	inc    ebx
  4266d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d9:	cmp    bh,ch
  4266db:	frstor [edx]
  4266dd:	fbstp  TBYTE PTR ds:0xaaf3ae56
  4266e3:	pop    esp
  4266e4:	aaa    
  4266e5:	sbb    eax,DWORD PTR [ebx+0x769e7754]
  4266eb:	sbb    eax,0x4835d609
  4266f0:	mov    ecx,0xef8fd511
  4266f5:	fimul  WORD PTR [ebx+0x8fc1873]
  4266fb:	dec    DWORD PTR [eax]
  4266fd:	jp     0x426770
  4266ff:	in     eax,dx
  426700:	fnstsw WORD PTR [edi+ecx*1-0x2b]
  426704:	cdq    
  426705:	xchg   edi,eax
  426706:	fs adc al,0xe8
  426709:	loop   0x426704
  42670b:	add    eax,0x4a78d042
  426710:	mov    ebx,0xc97ba62b
  426715:	sub    ebx,0xffffffcb
  426718:	jecxz  0x426730
  42671a:	push   0xffffffb3
  42671c:	adc    eax,0xaaf05ebe
  426721:	mov    dl,0x85
  426723:	fdivr  QWORD PTR [edi+0x5e70c0ba]
  426729:	fcomp  st(3)
  42672b:	ftst   
  42672d:	cmp    eax,0xd95295c2
  426732:	push   ecx
  426733:	loop   0x426708
  426735:	cmp    DWORD PTR [ecx+0x20ff1e7a],0x78026c91
  42673f:	mov    ds:0x30c70fcb,eax
  426744:	js     0x4267be
  426746:	adc    al,0xaa
  426748:	stos   DWORD PTR es:[edi],eax
  426749:	mov    cl,0x41
  42674b:	fisttp QWORD PTR [esi-0x3dde358f]
  426751:	out    0xbd,al
  426753:	cwde   
  426754:	xor    eax,0xbf83480a
  426759:	cmp    eax,0xbf69ee60
  42675e:	adc    al,0x4d
  426760:	jle    0x426790
  426762:	in     al,dx
  426763:	icebp  
  426764:	outs   dx,DWORD PTR ds:[esi]
  426765:	aas    
  426766:	out    dx,al
  426767:	les    esi,FWORD PTR [edx-0x1a8d8eef]
  42676d:	sub    al,0x98
  42676f:	aaa    
  426770:	mov    al,ss:0x5baa6997
  426776:	pop    edx
  426777:	dec    ebx
  426778:	loope  0x42677c
  42677a:	in     al,0x60
  42677c:	xchg   esp,eax
  42677d:	cmc    
  42677e:	(bad)  
  42677f:	fwait
  426780:	das    
  426781:	mov    ?,WORD PTR [eax]
  426783:	cli    
  426784:	stc    
  426785:	nop
  426786:	arpl   WORD PTR ds:0xd4f27372,sp
  42678c:	mov    BYTE PTR [edx*2+0x2b54e0f6],dh
  426793:	mov    eax,0x5d132f3a
  426798:	in     eax,dx
  426799:	and    eax,0xb0db99ed
  42679e:	gs inc edi
  4267a0:	aad    0x90
  4267a2:	xchg   ebp,eax
  4267a3:	mov    dl,0x15
  4267a5:	popa   
  4267a6:	fist   WORD PTR [edi+edx*2]
  4267a9:	lea    edi,[ecx-0x23976fd7]
  4267af:	cli    
  4267b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267b1:	imul   ebx,DWORD PTR [ebx],0x3d3d758a
  4267b7:	dec    edi
  4267b8:	push   edi
  4267b9:	add    BYTE PTR [eax],al
  4267bb:	add    dl,bh
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xf1c7bfe
  4267c9:	loop   0x4267dd
  4267cb:	(bad)  
  4267cc:	repnz fild WORD PTR [ecx]
  4267cf:	add    BYTE PTR [ebp-0x5fffffe],al
  4267d5:	(bad)  
  4267d7:	shl    ebp,cl
  4267d9:	jl     0x4267d6
  4267db:	and    BYTE PTR [edx-0x64],ch
  4267de:	xchg   edx,eax
  4267df:	bound  eax,QWORD PTR [edx]
  4267e1:	loope  0x4267ec
  4267e3:	xchg   ecx,eax
  4267e4:	in     al,dx
  4267e5:	push   esi
  4267e6:	push   ss
  4267e7:	mov    edi,DWORD PTR [esi+0x150e9e26]
  4267ed:	mov    DWORD PTR [ebx],esi
  4267ef:	cmp    eax,0x874d369
  4267f4:	inc    ebp
  4267f5:	xor    eax,0x530a94c4
  4267fa:	test   eax,0xc3421c48
  4267ff:	icebp  
  426800:	adc    dh,BYTE PTR [edi-0x34]
  426803:	jg     0x426881
  426805:	xchg   ebp,eax
  426806:	popf   
  426807:	mov    dh,0x70
  426809:	rcl    cl,0xfe
  42680c:	std    
  42680d:	dec    ecx
  42680e:	jnp    0x42687c
  426810:	data16 aaa 
  426812:	dec    edi
  426813:	cwde   
  426814:	out    dx,al
  426815:	and    ebx,DWORD PTR fs:[eax]
  426818:	xor    edx,DWORD PTR [edx+0x46]
  42681b:	push   ecx
  42681c:	push   ebx
  42681d:	fistp  WORD PTR [edi-0x7a]
  426820:	xchg   esp,eax
  426821:	aam    0xf3
  426823:	push   0xfffffffc
  426825:	dec    edx
  426826:	loop   0x426842
  426828:	or     bl,dl
  42682a:	leave  
  42682b:	jp     0x4267cb
  42682d:	push   eax
  42682e:	dec    edx
  42682f:	adc    ebp,edx
  426831:	es cs in eax,0xa6
  426835:	pop    ebx
  426836:	cwde   
  426837:	inc    esp
  426838:	cmp    eax,0xa05cf32a
  42683d:	dec    esi
  42683e:	dec    eax
  42683f:	inc    edx
  426840:	cmp    al,0x30
  426842:	push   esp
  426843:	repz push ebp
  426845:	push   esi
  426846:	bnd jmp 0x21d1ceca
  42684c:	jge    0x426898
  42684e:	jns    0x4267f4
  426850:	ret    
  426851:	jne    0x42685a
  426853:	frstor [eax-0x4]
  426856:	jle    0x426847
  426858:	sub    al,0xce
  42685a:	add    ebx,ebp
  42685c:	jns    0x426890
  42685e:	xchg   edi,eax
  42685f:	aad    0x95
  426861:	add    BYTE PTR [edx-0x35],ah
  426864:	je     0x42685d
  426866:	in     al,dx
  426867:	ins    BYTE PTR es:[edi],dx
  426868:	mov    ah,0x54
  42686a:	scas   eax,DWORD PTR es:[edi]
  42686b:	shl    DWORD PTR [eax],cl
  42686d:	xor    DWORD PTR [esp+eax*2],ebp
  426870:	sbb    eax,0xb14ea61d
  426875:	xchg   ecx,eax
  426876:	sub    DWORD PTR [esi+esi*4-0x21b1a887],0x33d4cceb
  426881:	loopne 0x42688d
  426883:	adc    dh,BYTE PTR [ebp-0x448475f9]
  426889:	int    0xd5
  42688b:	je     0x4268a7
  42688d:	inc    esi
  42688e:	cmp    dh,bl
  426890:	mov    WORD PTR [eax+esi*4-0x355544e0],?
  426897:	int3   
  426898:	jbe    0x42682f
  42689a:	xchg   ebp,eax
  42689b:	adc    al,0xa9
  42689d:	repz out 0x6a,eax
  4268a0:	mov    edi,0x28196743
  4268a5:	or     BYTE PTR [ebx+0x840e824],bh
  4268ab:	pop    ecx
  4268ac:	xor    al,0x64
  4268ae:	sbb    edi,edi
  4268b0:	and    DWORD PTR [eax+0xf],ebx
  4268b3:	leave  
  4268b4:	push   es
  4268b5:	hlt    
  4268b6:	sbb    ch,ch
  4268b8:	pop    ebp
  4268b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268ba:	cld    
  4268bb:	rol    DWORD PTR [ebx-0x116ab027],0x1a
  4268c2:	cmp    BYTE PTR [eax+edi*4-0x33],cl
  4268c6:	inc    edx
  4268c7:	cmp    al,0x4a
  4268c9:	std    
  4268ca:	scas   eax,DWORD PTR es:[edi]
  4268cb:	imul   esi,DWORD PTR [eax],0x2cb720e0
  4268d1:	sbb    DWORD PTR [eax],ebp
  4268d3:	(bad)  
  4268d4:	addr16 xor cl,bl
  4268d7:	sbb    al,0x4b
  4268d9:	pop    edx
  4268da:	add    al,0x58
  4268dc:	pop    es
  4268dd:	jns    0x4268ed
  4268df:	xor    esi,DWORD PTR [edi+0x43]
  4268e2:	outs   dx,BYTE PTR ds:[esi]
  4268e3:	adc    cl,BYTE PTR [ebp-0x4a5c0727]
  4268e9:	shl    cl,cl
  4268eb:	arpl   WORD PTR [ebx*8-0x87ff4cd],bp
  4268f2:	stos   DWORD PTR es:[edi],eax
  4268f3:	xlat   BYTE PTR ss:[ebx]
  4268f5:	pop    esi
  4268f6:	cli    
  4268f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268f8:	push   es
  4268f9:	and    ebx,esi
  4268fb:	sbb    esi,DWORD PTR [edx-0x570f11b8]
  426901:	ins    BYTE PTR es:[edi],dx
  426902:	imul   esp,DWORD PTR [eax],0xffffff83
  426905:	aad    0xfd
  426907:	adc    esi,DWORD PTR [ecx]
  426909:	pop    ecx
  42690a:	cmc    
  42690b:	pop    ds
  42690c:	loope  0x4268c6
  42690e:	rol    BYTE PTR [ebp+0x15],1
  426911:	and    eax,0xbd3b233a
  426916:	mov    eax,ds:0xb8f11554
  42691b:	in     al,dx
  42691c:	sti    
  42691d:	mov    al,ds:0xfe6426fd
  426922:	(bad)  
  426923:	or     eax,0x7c9fce3c
  426928:	inc    edi
  426929:	sar    DWORD PTR ds:0x8cf5d6fe,1
  42692f:	dec    ebx
  426930:	xchg   ebp,eax
  426931:	sub    bl,BYTE PTR [esi-0x4cc45825]
  426937:	sub    DWORD PTR [edx-0x64004bc9],ecx
  42693d:	add    bh,BYTE PTR [esi-0xf]
  426940:	mov    al,ds:0xdf3c6431
  426945:	jp     0x426937
  426947:	inc    ebp
  426948:	lods   al,BYTE PTR ds:[esi]
  426949:	test   DWORD PTR [ebx-0xaa6d1d8],esp
  42694f:	cdq    
  426950:	fmul   DWORD PTR [edx+0x46]
  426953:	mov    eax,ds:0xee21147
  426958:	push   esp
  426959:	loope  0x426933
  42695b:	and    al,0x59
  42695d:	shl    ebp,cl
  42695f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426960:	push   0xd264a367
  426965:	cli    
  426966:	push   ds
  426967:	jle    0x4269cf
  426969:	xlat   BYTE PTR ds:[ebx]
  42696a:	lahf   
  42696b:	pushf  
  42696c:	cmp    BYTE PTR [ecx],dl
  42696e:	(bad)  es:0x431374da
  426975:	and    eax,0x9c3312de
  42697a:	xchg   ecx,eax
  42697b:	add    al,0xc9
  42697d:	fist   DWORD PTR ss:[edi-0x57]
  426981:	xor    dh,BYTE PTR [edx-0x1c6dc83a]
  426987:	pushf  
  426988:	inc    eax
  426989:	jmp    0x4269a0
  42698b:	mov    ecx,0x4e8ff062
  426990:	inc    ecx
  426991:	fcomp  QWORD PTR [eax-0xd2fc181]
  426997:	jne    0x42695d
  426999:	cmc    
  42699a:	fimul  WORD PTR [ebp+0x6c7a8c89]
  4269a0:	aam    0xc0
  4269a2:	xchg   esp,eax
  4269a3:	push   ss
  4269a4:	add    BYTE PTR [esi+edi*4],bh
  4269a7:	push   edx
  4269a8:	bound  ebx,QWORD PTR ds:0x83428dbc
  4269ae:	popa   
  4269af:	cmc    
  4269b0:	jns    0x42699f
  4269b2:	xlat   BYTE PTR ds:[ebx]
  4269b3:	xchg   ebx,eax
  4269b4:	sub    eax,0x419a5ea2
  4269b9:	ins    DWORD PTR es:[edi],dx
  4269ba:	daa    
  4269bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269bc:	sbb    eax,0x9f5876cf
  4269c1:	inc    edi
  4269c2:	test   eax,0xa0ffb3cb
  4269c7:	add    al,0x8d
  4269c9:	pop    esp
  4269ca:	pop    ss
  4269cb:	mul    DWORD PTR [ecx]
  4269cd:	pushf  
  4269ce:	pusha  
  4269cf:	jae    0x426a13
  4269d1:	xchg   ebx,eax
  4269d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269d3:	sbb    BYTE PTR ds:0xe2826ccb,0xc6
  4269da:	pop    esi
  4269db:	mov    dh,0x1c
  4269dd:	mov    al,BYTE PTR [esi-0x32]
  4269e0:	ja     0x426a2f
  4269e2:	scas   al,BYTE PTR es:[edi]
  4269e3:	sar    ch,1
  4269e5:	jge    0x426a00
  4269e7:	xor    BYTE PTR [edx-0x4b8eda73],bh
  4269ed:	adc    al,0xa2
  4269ef:	dec    ebx
  4269f0:	inc    ecx
  4269f1:	fwait
  4269f2:	lahf   
  4269f3:	pop    edx
  4269f4:	mov    esi,0xd9ce224
  4269f9:	(bad)  
  4269fa:	clc    
  4269fb:	sub    cl,BYTE PTR [ecx]
  4269fd:	cmp    ah,BYTE PTR [edx+esi*1+0x3cfd5883]
  426a04:	inc    esp
  426a05:	mov    cl,BYTE PTR [ecx-0x28]
  426a08:	fisttp QWORD PTR [edi]
  426a0a:	fwait
  426a0b:	adc    DWORD PTR [edx+0x10a75590],esi
  426a11:	rcr    DWORD PTR [eax+0x2d],cl
  426a14:	div    BYTE PTR [ecx+ecx*8+0x70]
  426a18:	mov    BYTE PTR [esi+ecx*1],bh
  426a1b:	mov    bh,0xb6
  426a1d:	jne    0x426a2d
  426a1f:	and    al,0x8a
  426a21:	dec    esp
  426a22:	loopne 0x426a24
  426a24:	fs cld 
  426a26:	cmp    dh,BYTE PTR [ebx]
  426a28:	cwde   
  426a29:	sub    ecx,DWORD PTR [ecx+0x61]
  426a2c:	out    0xe5,al
  426a2e:	add    ebx,eax
  426a30:	jp     0x426a60
  426a32:	add    cl,BYTE PTR [ebx]
  426a34:	and    eax,0x11a759c4
  426a39:	popf   
  426a3a:	xor    BYTE PTR [esi],cl
  426a3c:	test   al,0xd9
  426a3e:	ins    BYTE PTR es:[edi],dx
  426a3f:	mov    edi,0xb3ef771c
  426a44:	jp     0x426a90
  426a46:	pusha  
  426a47:	dec    edi
  426a48:	hlt    
  426a49:	pop    es
  426a4a:	sub    eax,0x92374c00
  426a4f:	fsub   QWORD PTR [ecx+0xe]
  426a52:	in     al,0x71
  426a54:	aaa    
  426a55:	por    mm3,QWORD PTR [ecx]
  426a58:	jmp    0xcf426a5d
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	jmp    0x1e2:0x77894324
  426a6f:	add    BYTE PTR [ebp+0x1d000002],al
  426a75:	stc    
  426a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a77:	xlat   BYTE PTR ds:[ebx]
  426a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a79:	ins    DWORD PTR es:[edi],dx
  426a7a:	pop    eax
  426a7b:	mov    ah,0xf2
  426a7d:	rcl    DWORD PTR [edi],1
  426a7f:	ret    
  426a80:	inc    ebp
  426a81:	jle    0x426ad2
  426a83:	rol    ecx,1
  426a85:	jecxz  0x426a7e
  426a87:	ja     0x426a49
  426a89:	rcr    bh,cl
  426a8b:	not    ecx
  426a8d:	pop    ecx
  426a8e:	jg     0x426b01
  426a90:	push   0xdfcc95b7
  426a95:	int3   
  426a96:	mov    BYTE PTR [ebx+0x38],ah
  426a99:	pop    ecx
  426a9a:	adc    DWORD PTR [edx+0x23d7ac94],ebp
  426aa0:	jo     0x426ae5
  426aa2:	add    DWORD PTR [esi+0xaf4c679],esp
  426aa8:	adc    ch,BYTE PTR [esi-0x24]
  426aab:	sub    DWORD PTR [ecx+0x478a7e70],esp
  426ab1:	in     eax,0x89
  426ab3:	sbb    eax,0x5ef88780
  426ab8:	nop
  426ab9:	loopne 0x426a7a
  426abb:	fwait
  426abc:	dec    eax
  426abd:	pop    ss
  426abe:	cdq    
  426abf:	into   
  426ac0:	lods   al,BYTE PTR ds:[esi]
  426ac1:	retf   0x4e49
  426ac4:	push   esp
  426ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ac6:	mov    eax,0x71ba8b89
  426acb:	or     ebx,edx
  426acd:	inc    ebx
  426ace:	xchg   BYTE PTR [esi+0x2ce54483],cl
  426ad4:	lsl    eax,WORD PTR [ebx]
  426ad7:	rcl    DWORD PTR [ecx-0x40],1
  426ada:	lahf   
  426adb:	inc    edx
  426adc:	pop    esp
  426add:	or     ebp,DWORD PTR [eax+0x572891fb]
  426ae3:	dec    edi
  426ae4:	jnp    0x426aec
  426ae6:	xchg   esi,eax
  426ae7:	test   BYTE PTR [ebx],bh
  426ae9:	cli    
  426aea:	sub    esi,DWORD PTR [eax+0x66ec0aaa]
  426af0:	rcl    al,cl
  426af2:	mov    ch,ch
  426af4:	mov    cl,0xd8
  426af6:	add    al,0x7a
  426af8:	or     esp,DWORD PTR [eax]
  426afa:	mov    dl,0x45
  426afc:	push   0x79edcfe6
  426b01:	ss jl  0x426aad
  426b04:	lds    esi,FWORD PTR [ebx]
  426b06:	out    dx,al
  426b07:	vmwrite ebx,DWORD PTR gs:[edx-0x41]
  426b0c:	into   
  426b0d:	mov    al,0xb6
  426b0f:	int3   
  426b10:	mov    ch,ah
  426b12:	mov    bl,0xda
  426b14:	xchg   esp,eax
  426b15:	stc    
  426b16:	sbb    dl,BYTE PTR [ecx+0x7186594f]
  426b1c:	ret    0xfc75
  426b1f:	mov    ds:0x8e59bf27,al
  426b24:	and    BYTE PTR ds:[esi-0x7de8296d],dl
  426b2b:	cmp    eax,0x3161e25
  426b30:	push   ds
  426b31:	scas   eax,DWORD PTR es:[edi]
  426b32:	ss mov bp,0xa9c
  426b37:	mov    ch,0xc1
  426b39:	sbb    al,0xcd
  426b3b:	push   ss
  426b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b3d:	mov    ds:0x416b2f79,eax
  426b42:	jmp    0x2b68:0xe28910d1
  426b49:	push   esi
  426b4a:	mov    bh,0x3c
  426b4c:	mov    WORD PTR [edi+edi*1-0x8],es
  426b50:	sbb    esp,DWORD PTR [eax-0x43]
  426b53:	sub    ebx,DWORD PTR [ebp+0x44]
  426b56:	push   edi
  426b57:	add    DWORD PTR [edx+edi*4-0xf13c2ff],0x8feb5e75
  426b62:	push   0x28
  426b64:	popf   
  426b65:	ror    DWORD PTR [edi+0x3d98cf2d],1
  426b6b:	ror    DWORD PTR [ebp-0x134accaf],0xfb
  426b72:	pop    ds
  426b73:	pop    esp
  426b74:	lods   eax,DWORD PTR ds:[esi]
  426b75:	or     al,0x3b
  426b77:	je     0x426b55
  426b79:	or     eax,0x8907e8e6
  426b7e:	mov    edi,DWORD PTR [eax]
  426b80:	loopne 0x426b95
  426b82:	sbb    ebx,DWORD PTR [edi-0x30225f5]
  426b88:	imul   ecx,DWORD PTR [ecx-0x7b],0xffffffac
  426b8c:	or     eax,0x70a0fe7a
  426b91:	pop    ebx
  426b92:	out    0x7b,al
  426b94:	pop    ds
  426b95:	and    BYTE PTR [eax-0x10],ch
  426b98:	push   ecx
  426b99:	xchg   ebx,eax
  426b9a:	xor    eax,0xe6a0d2e2
  426b9f:	cmp    DWORD PTR [edx],esp
  426ba1:	ja     0x426b57
  426ba3:	pop    esi
  426ba4:	daa    
  426ba5:	call   DWORD PTR [edx-0x5d]
  426ba8:	stos   BYTE PTR es:[edi],al
  426ba9:	mov    BYTE PTR [edx+0x7c],dl
  426bac:	jne    0x426b8a
  426bae:	mov    bh,0x98
  426bb0:	ins    DWORD PTR es:[edi],dx
  426bb1:	int    0xa0
  426bb3:	retf   
  426bb4:	ins    DWORD PTR es:[edi],dx
  426bb5:	ret    0x1c8c
  426bb8:	jmp    0x80923843
  426bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bbe:	addr16 add eax,0x22ee7cd2
  426bc4:	jnp    0x426b9a
  426bc6:	sbb    edi,DWORD PTR [eax]
  426bc8:	into   
  426bc9:	inc    ebx
  426bca:	sahf   
  426bcb:	sub    eax,0x1dfec30
  426bd0:	inc    edi
  426bd1:	mov    ds:0x75081873,al
  426bd6:	mov    ch,0x56
  426bd8:	ins    DWORD PTR es:[edi],dx
  426bd9:	arpl   WORD PTR [ebp-0x25ac19a5],di
  426bdf:	sti    
  426be0:	(bad)  
  426be2:	add    al,0xb2
  426be4:	jl     0x426b9d
  426be6:	push   ds
  426be7:	push   esp
  426be8:	(bad)  
  426be9:	out    0x92,eax
  426beb:	imul   ebx,DWORD PTR [edx+ecx*1+0x52],0xffffffe3
  426bf0:	inc    ebp
  426bf1:	call   0x4493:0x8ad96fa7
  426bf8:	sub    DWORD PTR [ebx+0x28],edx
  426bfb:	es daa 
  426bfd:	jns    0x426c2c
  426bff:	sbb    DWORD PTR [ecx+0x57],edx
  426c02:	ja     0x426b9b
  426c04:	adc    dl,dh
  426c06:	cmp    al,0xcf
  426c08:	push   eax
  426c09:	ret    
  426c0a:	enter  0x74f4,0x3e
  426c0e:	add    eax,0x80274058
  426c13:	les    edx,FWORD PTR [ecx-0x7]
  426c16:	fdivr  DWORD PTR [eax+eiz*4]
  426c19:	rcl    BYTE PTR [edi+0x6796e3cb],cl
  426c1f:	dec    edi
  426c20:	dec    DWORD PTR [edi-0x7d]
  426c23:	clc    
  426c24:	fmul   QWORD PTR [esi+0x68]
  426c27:	lds    edi,FWORD PTR [ecx]
  426c29:	xor    eax,0x13015c66
  426c2e:	inc    ebx
  426c2f:	mov    BYTE PTR [ebx+0x1e],dh
  426c32:	inc    ebp
  426c33:	ss inc ecx
  426c35:	and    al,0xa5
  426c37:	lock add al,0x60
  426c3a:	inc    eax
  426c3b:	fwait
  426c3c:	lods   eax,DWORD PTR ds:[esi]
  426c3d:	js     0x426cab
  426c3f:	retf   0x9eed
  426c42:	fs jb  0x426c27
  426c45:	or     DWORD PTR [eax],0x147a8112
  426c4b:	sbb    DWORD PTR [ebx],edi
  426c4d:	dec    esi
  426c4e:	fdivr  DWORD PTR [ebx]
  426c50:	jb     0x426c75
  426c52:	inc    ebx
  426c54:	pop    ds
  426c55:	out    dx,eax
  426c56:	popf   
  426c57:	or     DWORD PTR [edx-0x7e375d12],0x5c4500b7
  426c61:	cmp    cl,cl
  426c63:	push   ss
  426c64:	mov    ds:0x37c0ffb8,al
  426c69:	(bad)  
  426c6a:	xlat   BYTE PTR ds:[ebx]
  426c6b:	rcr    BYTE PTR [eax-0x7084006c],cl
  426c71:	push   cs
  426c72:	push   ecx
  426c73:	sbb    BYTE PTR [eax],bl
  426c75:	push   cs
  426c76:	scas   al,BYTE PTR es:[edi]
  426c77:	pop    esi
  426c78:	pop    es
  426c79:	push   ds
  426c7a:	cld    
  426c7b:	sub    ebp,0x7
  426c7e:	iret   
  426c7f:	dec    ebx
  426c80:	fldcw  WORD PTR [ebx-0x643aabdc]
  426c86:	xor    al,0xe8
  426c88:	sub    bl,BYTE PTR [ecx+0x57]
  426c8b:	mov    bl,0xc5
  426c8d:	adc    eax,0xa10834df
  426c92:	stos   BYTE PTR es:[edi],al
  426c93:	enter  0x6b55,0x17
  426c97:	adc    bl,BYTE PTR [esi+eax*4]
  426c9a:	addr16 sbb al,0x3
  426c9d:	shl    DWORD PTR [ecx],1
  426c9f:	std    
  426ca0:	lea    ebp,[esi]
  426ca2:	repz adc esp,DWORD PTR [ecx+eiz*1+0x10]
  426ca7:	xor    al,0xfa
  426ca9:	add    DWORD PTR es:[ebp+0x83b9e79],esi
  426cb0:	aaa    
  426cb1:	mov    ds:0xce6a198,eax
  426cb6:	ss (bad) 
  426cb8:	jns    0x426c55
  426cba:	arpl   WORD PTR [eax-0x2e781b3],cx
  426cc0:	inc    ebp
  426cc1:	jle    0x426c90
  426cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cc4:	pop    ds
  426cc5:	int    0x41
  426cc7:	jg     0x426d1b
  426cc9:	xchg   ecx,eax
  426cca:	in     eax,0x9c
  426ccc:	or     DWORD PTR [esi+0x7],esi
  426ccf:	cmp    al,0xad
  426cd1:	enter  0xf37,0x42
  426cd5:	shl    DWORD PTR [edi],cl
  426cd7:	adc    eax,0x2917df33
  426cdc:	cmp    BYTE PTR ds:0x5b7b5e3d,0x10
  426ce3:	pop    ds
  426ce4:	mov    WORD PTR [ebp+0x7],es
  426ce7:	push   esp
  426ce8:	popa   
  426ce9:	stc    
  426cea:	out    dx,al
  426ceb:	sti    
  426cec:	lods   al,BYTE PTR ds:[esi]
  426ced:	stos   BYTE PTR es:[edi],al
  426cee:	fild   QWORD PTR [edx]
  426cf0:	mov    ds,WORD PTR [eax]
  426cf2:	sahf   
  426cf3:	mov    dh,0xa3
  426cf5:	push   edi
  426cf6:	mov    BYTE PTR [eax+0x7f],ch
  426cf9:	add    BYTE PTR [eax],al
  426cfb:	add    BYTE PTR [eax+0x23],ch
  426cfe:	sub    eax,0x7b1e6f1e
  426d03:	ja     0x426ce3
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	ss mov al,0x31
  426d09:	pop    esi
  426d0a:	icebp  
  426d0b:	xchg   edi,eax
  426d0c:	cld    
  426d0d:	in     al,0x1
  426d0f:	add    BYTE PTR [ebp+0x1d000002],al
  426d15:	dec    esp
  426d16:	mov    edx,0x8a185918
  426d1b:	pop    ss
  426d1c:	adc    eax,0xb3b6b616
  426d21:	xchg   edi,eax
  426d22:	xchg   esi,eax
  426d23:	(bad)  
  426d24:	sbb    ch,BYTE PTR [edi+0x1c]
  426d27:	repz mov ebx,DWORD PTR [esi-0x1]
  426d2b:	imul   ecx,DWORD PTR [edx+eax*8+0x36],0xffffffcf
  426d30:	pop    esi
  426d31:	dec    esi
  426d32:	jbe    0x426d0c
  426d34:	shr    BYTE PTR [si-0x36],cl
  426d38:	cmp    DWORD PTR [ebx-0x3c],esi
  426d3b:	inc    esi
  426d3c:	in     al,dx
  426d3d:	jae    0x426d05
  426d3f:	fisttp QWORD PTR [edi+0x60ffa0cf]
  426d45:	test   DWORD PTR [edi+0xb626fa9],0xe98860db
  426d4f:	jns    0x426dce
  426d51:	les    esi,FWORD PTR [eax+0x78720eb9]
  426d57:	or     DWORD PTR [ebx-0x7],edi
  426d5a:	jo     0x426d8c
  426d5c:	aaa    
  426d5d:	xor    bl,BYTE PTR [eax+0x4712fb83]
  426d63:	sub    ah,bh
  426d65:	fisttp WORD PTR [ecx]
  426d67:	xor    eax,0x15972e09
  426d6c:	bound  ebp,QWORD PTR [ebp+0x710ca5a9]
  426d72:	xor    esi,DWORD PTR [edi+edi*8-0x6a]
  426d76:	jnp    0x426d12
  426d78:	pusha  
  426d79:	xor    eax,0x7a336f5a
  426d7e:	xchg   esp,eax
  426d7f:	cdq    
  426d80:	rol    dh,1
  426d82:	aad    0x31
  426d84:	mov    ecx,DWORD PTR [edx+0x15]
  426d87:	pushf  
  426d88:	xor    esp,esp
  426d8a:	sub    esp,DWORD PTR [ebx-0x7dcc287e]
  426d90:	pop    ecx
  426d91:	adc    ecx,DWORD PTR [eax-0x2e]
  426d94:	inc    eax
  426d95:	clc    
  426d96:	sub    ecx,edi
  426d98:	adc    esp,DWORD PTR [ecx+0x5a]
  426d9b:	pop    ss
  426d9c:	pop    ecx
  426d9e:	(bad)  
  426d9f:	sbb    ch,ah
  426da1:	enter  0xad8e,0xc0
  426da5:	sahf   
  426da6:	mov    dl,0x51
  426da8:	and    eax,0xcba6db95
  426dad:	push   ebx
  426dae:	int    0x9a
  426db0:	fisubr WORD PTR [edx-0x36c296ae]
  426db6:	inc    edx
  426db7:	xor    eax,0xa4ca1679
  426dbc:	and    eax,0x32d83869
  426dc1:	xchg   ebx,eax
  426dc2:	mov    WORD PTR [esp+ebp*2],ds
  426dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc6:	push   ds
  426dc7:	ins    DWORD PTR es:[edi],dx
  426dc8:	pop    edi
  426dc9:	pop    ecx
  426dca:	adc    dh,dl
  426dcc:	cli    
  426dcd:	aas    
  426dce:	test   BYTE PTR [edx-0x38ad4d9a],0xf7
  426dd5:	call   0x2d7df154
  426dda:	ins    BYTE PTR es:[edi],dx
  426ddb:	shl    DWORD PTR [ebx-0x5c6a89bf],cl
  426de1:	xchg   esi,eax
  426de2:	xchg   edi,eax
  426de3:	pop    esi
  426de4:	rcr    BYTE PTR [ecx],0xc5
  426de7:	xor    DWORD PTR [ecx+0x3c],esi
  426dea:	ror    BYTE PTR [eax],cl
  426dec:	xor    al,0xf1
  426dee:	adc    bh,dh
  426df0:	push   es
  426df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426df2:	xchg   ebx,eax
  426df3:	add    edi,esp
  426df5:	xor    al,0xd4
  426df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426df8:	neg    eax
  426dfa:	jb     0x426e2d
  426dfc:	mov    esp,0x545dc9ca
  426e01:	mov    DWORD PTR [ebx-0x77599df9],ecx
  426e07:	sub    ebp,DWORD PTR [eax-0x1bcf0b2b]
  426e0d:	pop    ds
  426e0e:	adc    ecx,edx
  426e10:	cmp    al,cl
  426e12:	pop    ebp
  426e13:	mov    esp,0x32ee04b4
  426e18:	retf   
  426e19:	or     eax,0x30109ab3
  426e1e:	xchg   edx,eax
  426e1f:	mov    cl,0x60
  426e21:	bound  esp,QWORD PTR [esi+eiz*1-0x50249678]
  426e28:	dec    ecx
  426e29:	adc    al,0x2e
  426e2b:	sbb    ecx,DWORD PTR [ecx-0x75]
  426e2e:	sbb    DWORD PTR [edi],ecx
  426e30:	cmp    DWORD PTR [edx-0x28],ebp
  426e33:	cli    
  426e34:	sbb    ch,bh
  426e36:	inc    ch
  426e38:	pop    ebx
  426e39:	ret    
  426e3a:	add    al,BYTE PTR [ebp+0x4a]
  426e3d:	mov    ebp,0x85d1365f
  426e42:	clc    
  426e43:	mov    es,WORD PTR [edi+0x1ab6414a]
  426e49:	aaa    
  426e4a:	sub    DWORD PTR [esi+eax*4+0x21],0xffffffdb
  426e4f:	add    DWORD PTR [ebx],ebp
  426e51:	loopne 0x426e0c
  426e53:	sbb    bl,0x18
  426e56:	lea    edx,ds:0x87139c16
  426e5c:	add    al,0xe6
  426e5e:	nop
  426e5f:	adc    al,0xb7
  426e61:	ds sbb ch,bl
  426e64:	outs   dx,BYTE PTR ds:[esi]
  426e65:	arpl   WORD PTR [ebx],bp
  426e67:	into   
  426e68:	adc    ecx,DWORD PTR [bx+si]
  426e6b:	and    DWORD PTR ds:0x9ab2f9c6,edi
  426e71:	dec    ecx
  426e72:	adc    bl,bh
  426e74:	pop    ss
  426e75:	retf   
  426e76:	mov    ebp,0xecc4991e
  426e7b:	int3   
  426e7c:	push   ds
  426e7d:	loop   0x426e3f
  426e7f:	loope  0x426e0d
  426e81:	cdq    
  426e82:	jnp    0x426ecf
  426e84:	jne    0x426e4b
  426e86:	je     0x426e33
  426e88:	add    ebx,DWORD PTR [ecx+edx*4-0x7b]
  426e8c:	cmp    ah,BYTE PTR [edi+0x36042093]
  426e92:	mov    ebx,0x3942f800
  426e97:	push   0x77
  426e99:	inc    edx
  426e9a:	add    ecx,DWORD PTR [eax]
  426e9c:	vpunpcklbw xmm4,xmm6,XMMWORD PTR [ebx+0x4e53461a]
  426ea4:	pop    ebx
  426ea5:	sbb    BYTE PTR [edx],dh
  426ea7:	adc    eax,0xbc91912a
  426eac:	in     eax,dx
  426ead:	sbb    DWORD PTR [ecx-0x64ef534a],ebx
  426eb3:	jge    0x426e7c
  426eb5:	fxch   st(0)
  426eb7:	rol    ecx,0x2b
  426eba:	shl    DWORD PTR [edi-0xa39d132],1
  426ec0:	mov    edi,0xb9794e4a
  426ec5:	jp     0x426f09
  426ec7:	jne    0x426e83
  426ec9:	call   DWORD PTR [esi*1-0x7e68c46b]
  426ed0:	add    dl,BYTE PTR [edx+0x50545b5e]
  426ed6:	in     eax,0xf1
  426ed8:	mov    esi,0x7be86668
  426edd:	or     bl,dh
  426edf:	sbb    al,0xd8
  426ee1:	jo     0x426e94
  426ee3:	jl     0x426e7f
  426ee5:	xlat   BYTE PTR ds:[ebx]
  426ee6:	and    ebx,DWORD PTR [ebx]
  426ee8:	mov    WORD PTR ds:0x916689f1,fs
  426eee:	add    eax,0x27ee2e1d
  426ef3:	in     eax,dx
  426ef4:	xor    esp,edx
  426ef6:	scas   al,BYTE PTR es:[edi]
  426ef7:	je     0x426f3e
  426ef9:	xchg   edi,eax
  426efa:	jbe    0x426eab
  426efc:	loope  0x426ed3
  426efe:	xor    ch,BYTE PTR [esi]
  426f00:	push   0x5a8cee72
  426f05:	xchg   edi,eax
  426f06:	test   DWORD PTR [ebx],edi
  426f08:	ds push edx
  426f0a:	jne    0x426eeb
  426f0c:	xchg   ebp,eax
  426f0d:	jno    0x426f65
  426f0f:	imul   eax,DWORD PTR [ebp-0x50d053bf],0xffffffc5
  426f16:	pop    ebp
  426f17:	sub    BYTE PTR [eax],dl
  426f19:	mov    dh,ch
  426f1b:	adc    BYTE PTR [edi+0x4],al
  426f1e:	test   BYTE PTR [edi+0x7b],al
  426f21:	test   DWORD PTR [edx-0x766bb02],eax
  426f27:	xor    eax,0x204348e5
  426f2c:	pop    es
  426f2d:	cs xchg edi,eax
  426f2f:	lock aam 0x8d
  426f32:	dec    ecx
  426f33:	mov    eax,ds:0xa0a1c6ca
  426f38:	adc    DWORD PTR [eax],ebp
  426f3a:	xor    eax,0x5471fe5
  426f3f:	daa    
  426f40:	js     0x426f49
  426f42:	ja     0x426f4e
  426f44:	(bad)  
  426f45:	push   edx
  426f46:	stc    
  426f47:	shl    DWORD PTR [ecx],cl
  426f49:	test   eax,0x482e06dd
  426f4e:	mov    eax,0x68a576b1
  426f53:	es mov ebx,0xa0263169
  426f59:	aam    0xe6
  426f5b:	mov    eax,0x16884c76
  426f60:	jmp    0x426fe0
  426f62:	sahf   
  426f63:	cwde   
  426f64:	rep outs dx,BYTE PTR ds:[esi]
  426f66:	cmp    DWORD PTR ds:0x8f1e85db,edi
  426f6c:	clc    
  426f6d:	nop
  426f6e:	stos   BYTE PTR es:[edi],al
  426f6f:	push   esi
  426f70:	xchg   DWORD PTR [esp+ebp*8-0xb2cc563],esp
  426f77:	jns    0x426f35
  426f79:	lahf   
  426f7a:	push   ss
  426f7b:	es out 0xb5,al
  426f7e:	pop    edx
  426f7f:	out    dx,eax
  426f80:	dec    ebp
  426f81:	jns    0x426fe8
  426f83:	(bad)  
  426f85:	mov    al,ds:0x54ec0c66
  426f8a:	aam    0xdd
  426f8c:	add    cl,bh
  426f8e:	dec    edi
  426f8f:	pop    ss
  426f90:	mov    ds:0x257102df,eax
  426f95:	or     ecx,DWORD PTR [eax-0x35]
  426f98:	adc    eax,0x99000000
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	in     eax,0xbc
  426faa:	(bad)  
  426fab:	push   ss
  426fac:	and    edi,0x2850001
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	jmp    0x426fdf
  426fb6:	xor    al,0x64
  426fb8:	pop    es
  426fb9:	lods   al,BYTE PTR ds:[esi]
  426fba:	int    0xa7
  426fbc:	pop    ss
  426fbd:	jmp    0x426fa7
  426fbf:	jle    0x427005
  426fc1:	jecxz  0x42700f
  426fc3:	cmp    bh,al
  426fc5:	das    
  426fc6:	retf   
  426fc7:	mov    eax,0xa9205d54
  426fcc:	out    0x70,eax
  426fce:	int3   
  426fcf:	adc    ch,dh
  426fd1:	sbb    eax,0x5c145bed
  426fd6:	jno    0x426ff9
  426fd8:	xlat   BYTE PTR ds:[ebx]
  426fd9:	push   eax
  426fda:	loop   0x427054
  426fdc:	mov    dh,0x89
  426fde:	mov    ds:0xb91f11e9,al
  426fe3:	mov    BYTE PTR [eax+0x19],0xc8
  426fe7:	dec    edx
  426fe8:	cmp    bl,al
  426fea:	cmp    edx,DWORD PTR [edx]
  426fec:	jns    0x426f87
  426fee:	xchg   ebp,eax
  426fef:	add    eax,0xbe84d87c
  426ff4:	pop    esp
  426ff5:	pop    edi
  426ff6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426ff8:	cld    
  426ff9:	aam    0xe8
  426ffb:	adc    bl,al
  426ffd:	nop
  426ffe:	sub    DWORD PTR [eax],esp
  427000:	push   es
  427001:	aad    0xd7
  427003:	dec    edx
  427004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427005:	(bad)  
  427007:	ss scas al,BYTE PTR es:[edi]
  427009:	sti    
  42700a:	outs   dx,BYTE PTR ds:[esi]
  42700b:	cmp    BYTE PTR [ebp+edi*8-0x73e77202],ah
  427012:	std    
  427013:	in     eax,dx
  427014:	jb     0x42708c
  427016:	cmp    al,0x99
  427018:	fmul   st(5),st
  42701a:	fwait
  42701b:	pop    es
  42701c:	repnz das 
  42701e:	clc    
  42701f:	mov    cl,BYTE PTR [edi+0x272932d1]
  427025:	adc    dl,cl
  427027:	cdq    
  427028:	ss repz sub DWORD PTR ss:[ebx-0x7ba93a3d],0xffffffe4
  427032:	sbb    DWORD PTR [ebp+0x148ff1a3],edx
  427038:	js     0x427036
  42703a:	repz sahf 
  42703c:	mov    dh,0x39
  42703e:	inc    esi
  42703f:	mov    edx,0x475cecea
  427044:	imul   ebp,esi,0x4c
  427047:	inc    ecx
  427048:	mov    dl,0xeb
  42704a:	popa   
  42704b:	push   edi
  42704c:	adc    DWORD PTR [eax-0xca94d98],esp
  427052:	(bad)  
  427053:	jmp    0x7a427de5
  427058:	sub    eax,0x4feb3dad
  42705d:	(bad)  
  42705e:	cld    
  42705f:	cwd    
  427061:	mov    esp,0x4375a036
  427066:	jo     0x426ffc
  427068:	or     bl,dl
  42706a:	jle    0x42706d
  42706c:	jecxz  0x427043
  42706e:	pop    ecx
  42706f:	mov    ebp,DWORD PTR [edi+0x242b9a93]
  427075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427076:	push   0x1253d53f
  42707b:	ret    
  42707c:	adc    WORD PTR [edi-0x33],di
  427080:	je     0x427091
  427082:	push   ebp
  427083:	aam    0xde
  427085:	mov    ?,WORD PTR [edi]
  427087:	fsub   QWORD PTR [esi-0x9d41412]
  42708d:	clc    
  42708e:	and    al,0x4c
  427090:	xor    edx,ebp
  427092:	jp     0x427065
  427094:	out    dx,al
  427095:	ret    
  427096:	out    dx,al
  427097:	pop    ds
  427098:	mov    al,0x39
  42709a:	add    eax,0x4cf04394
  42709f:	outs   dx,BYTE PTR ds:[esi]
  4270a0:	pop    ds
  4270a1:	push   0x32
  4270a3:	xsha256 (bad)
  4270a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270a5:	adc    DWORD PTR [esi],esi
  4270a7:	repnz cdq 
  4270a9:	aas    
  4270aa:	rcl    DWORD PTR [esp+eiz*2],0x9
  4270ae:	inc    ecx
  4270af:	arpl   WORD PTR [eax+0x61],dx
  4270b2:	adc    ecx,DWORD PTR [ebp+0x2ccbce4a]
  4270b8:	inc    ebp
  4270b9:	mov    ch,0x5f
  4270bb:	dec    ebp
  4270bc:	push   edi
  4270bd:	outs   dx,BYTE PTR ds:[esi]
  4270be:	test   eax,edi
  4270c0:	arpl   WORD PTR [edi],sp
  4270c2:	out    dx,al
  4270c3:	add    eax,0x654cfec1
  4270c8:	push   cs
  4270c9:	daa    
  4270ca:	sahf   
  4270cb:	inc    eax
  4270cc:	call   FWORD PTR [eax]
  4270ce:	mov    ?,WORD PTR [ecx+0x3e]
  4270d1:	(bad)  
  4270d2:	aam    0xd5
  4270d4:	dec    eax
  4270d5:	cmp    eax,0x43bae1ac
  4270da:	hlt    
  4270db:	jae    0x4270dd
  4270dd:	cmp    ecx,DWORD PTR [edi-0x66f89d4d]
  4270e3:	xchg   ebp,ecx
  4270e5:	sub    edi,esi
  4270e7:	loop   0x4270b9
  4270e9:	(bad)  
  4270ea:	mov    esi,0x435e5389
  4270ef:	iret   
  4270f0:	jle    0x427086
  4270f2:	pushf  
  4270f3:	fucomi st,st(7)
  4270f5:	or     al,0xf4
  4270f7:	xchg   edx,eax
  4270f8:	rcr    BYTE PTR [ebx+0x7f0e3b46],cl
  4270fe:	lods   al,BYTE PTR ds:[esi]
  4270ff:	cwde   
  427100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427101:	xor    ah,BYTE PTR [edi-0x6a]
  427104:	and    ecx,DWORD PTR [edx-0x5508c7f6]
  42710a:	ds push ebp
  42710c:	adc    al,0xdc
  42710e:	js     0x427154
  427110:	inc    ebp
  427111:	fdivr  QWORD PTR [edi]
  427113:	cmp    eax,0xda4f46dc
  427118:	inc    ebx
  427119:	cmp    bl,BYTE PTR [esi-0x7]
  42711c:	jecxz  0x427168
  42711e:	pop    eax
  42711f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427120:	dec    esi
  427121:	ins    BYTE PTR es:[edi],dx
  427122:	test   BYTE PTR [edx+0x6d],ah
  427125:	aam    0x56
  427127:	jecxz  0x427102
  427129:	cmp    al,0x62
  42712b:	ds dec ecx
  42712d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42712e:	lahf   
  42712f:	sbb    al,0x3d
  427131:	push   ss
  427132:	mov    ebp,edi
  427134:	mov    esi,0x87c7c29f
  427139:	mov    ds:0xceab5503,al
  42713e:	mov    bl,0xf
  427140:	xor    DWORD PTR ss:[esi+ecx*4+0x241766d9],0x5b
  427149:	xor    al,0x3d
  42714b:	mov    ch,0xc4
  42714d:	addr16 call 0x9661:0x7bae35c7
  427155:	in     al,dx
  427156:	outs   dx,BYTE PTR ds:[esi]
  427157:	stos   DWORD PTR es:[edi],eax
  427158:	xchg   ecx,eax
  427159:	cmp    BYTE PTR [ebx-0x76b5edeb],0xe4
  427160:	sub    cl,ch
  427162:	mov    ecx,0x8b365705
  427167:	dec    edx
  427168:	add    dl,dl
  42716a:	out    dx,eax
  42716b:	push   es
  42716c:	dec    ecx
  42716d:	and    BYTE PTR [edx-0x55912b11],dh
  427173:	mov    bl,0x11
  427175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427176:	add    al,0xc2
  427178:	mov    al,ds:0x8a3012e8
  42717d:	sub    ah,BYTE PTR [edx*8-0x21eb1149]
  427184:	and    esi,DWORD PTR [eax+0x22f5f313]
  42718a:	xor    BYTE PTR [ebx*8-0x12c25ee8],ch
  427191:	std    
  427192:	sbb    ecx,DWORD PTR [ebx+0x76cedc15]
  427198:	aad    0x82
  42719a:	scas   eax,DWORD PTR es:[edi]
  42719b:	clc    
  42719c:	add    DWORD PTR [ebx],eax
  42719e:	or     eax,0x5c1d0815
  4271a3:	aas    
  4271a4:	int3   
  4271a5:	popf   
  4271a6:	loopne 0x4271c3
  4271a8:	cli    
  4271a9:	mov    DWORD PTR [ebx+0x4a],ecx
  4271ac:	ret    0x7dc0
  4271af:	call   0x2aa1a1c9
  4271b4:	call   0x9405:0xb591aac2
  4271bb:	icebp  
  4271bc:	jge    0x427142
  4271be:	jmp    0x42714c
  4271c0:	jp     0x4271a8
  4271c2:	cmp    bh,BYTE PTR [ebp+edi*8+0x5d]
  4271c6:	push   ebx
  4271c7:	cmp    DWORD PTR [edx+ebp*4-0x24e077d6],eax
  4271ce:	mov    ebp,0xf8b7868
  4271d3:	add    al,0x2a
  4271d5:	xor    bl,bh
  4271d7:	xchg   esi,eax
  4271d8:	cmc    
  4271d9:	rcr    BYTE PTR [ecx-0x9c001b],0xf7
  4271e0:	shr    BYTE PTR [edx-0x740c798],1
  4271e6:	sbb    ecx,DWORD PTR [bx+di-0x1425]
  4271eb:	jb     0x42726a
  4271ed:	cwde   
  4271ee:	in     eax,dx
  4271ef:	add    cl,cl
  4271f1:	xor    eax,0xe4b0f072
  4271f6:	call   0x7537:0x7cd01e86
  4271fd:	cdq    
  4271fe:	jmp    0x3410:0x27ebfd1e
  427205:	xchg   edi,eax
  427206:	adc    BYTE PTR [ecx-0x5f7f1798],dl
  42720c:	lods   al,BYTE PTR ds:[esi]
  42720d:	popf   
  42720e:	push   esp
  42720f:	cmp    dh,ch
  427211:	fdivr  QWORD PTR [esi-0x73775e35]
  427217:	ret    0x2b5f
  42721a:	mov    al,0xbf
  42721c:	xchg   edx,eax
  42721d:	xor    esi,DWORD PTR [edx]
  42721f:	ret    0x90fe
  427222:	mov    ebp,0xb17f456a
  427227:	es pop ds
  427229:	xchg   ecx,eax
  42722a:	aad    0x6
  42722c:	and    eax,DWORD PTR [edx-0x6ac34bf0]
  427232:	test   BYTE PTR [edx],dl
  427234:	and    ebx,ebx
  427236:	add    DWORD PTR [ebx+eax*4+0x0],0xa790000
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	dec    esp
  427249:	popf   
  42724a:	ja     0x427285
  42724c:	push   es
  42724d:	jmp    0x0:0x2850001
  427254:	pushf  
  427255:	outs   dx,DWORD PTR ds:[esi]
  427256:	rcl    edi,1
  427258:	test   al,0x60
  42725a:	idiv   BYTE PTR [ebp-0x57e1fe73]
  427260:	sbb    DWORD PTR [ebp-0x12],edx
  427263:	bound  ecx,QWORD PTR [edx-0x72]
  427266:	add    eax,0xe255b986
  42726b:	cmp    DWORD PTR [ebx+0x7d],esp
  42726e:	lahf   
  42726f:	(bad)  
  427270:	cwde   
  427271:	popf   
  427272:	add    BYTE PTR [ebx-0x4e],al
  427275:	(bad)  
  427276:	repnz cmp ecx,edx
  427279:	push   esi
  42727a:	pop    ebx
  42727b:	or     si,bp
  42727e:	xor    ebp,DWORD PTR [eax+0x79760402]
  427284:	lds    esi,FWORD PTR [ebx+0x7d]
  427287:	fiadd  DWORD PTR [edx+edi*2-0x1ae307dd]
  42728e:	adc    BYTE PTR [eax+esi*2],bl
  427291:	inc    edi
  427292:	loopne 0x42721b
  427294:	ds add al,0x66
  427297:	shl    cl,1
  427299:	and    BYTE PTR [eax+0x7],0xfc
  42729d:	lds    ebx,FWORD PTR [esi-0x5816be48]
  4272a3:	push   cs
  4272a4:	cmc    
  4272a5:	sbb    eax,0x512a026d
  4272aa:	mov    dh,0xe3
  4272ac:	sub    al,0x3a
  4272ae:	push   ss
  4272af:	xchg   esi,eax
  4272b0:	ror    BYTE PTR [ecx],cl
  4272b2:	outs   dx,BYTE PTR ds:[esi]
  4272b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272b4:	out    0x27,al
  4272b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272b7:	jp     0x4272c3
  4272b9:	and    BYTE PTR [ecx+0x6e],cl
  4272bc:	out    dx,al
  4272bd:	jbe    0x4272f5
  4272bf:	std    
  4272c0:	shr    DWORD PTR [ebx-0x33ea9029],0x87
  4272c7:	xchg   ebp,eax
  4272c8:	test   al,0x62
  4272ca:	and    al,ah
  4272cc:	push   es
  4272cd:	std    
  4272ce:	add    DWORD PTR [esi+edx*1],0xfa02bdbe
  4272d5:	shl    DWORD PTR [ebx+0x484747a6],cl
  4272db:	fmul   DWORD PTR [edx-0x136947f3]
  4272e1:	popf   
  4272e2:	xor    ebx,DWORD PTR [ebx+0x35cc7e07]
  4272e8:	mov    eax,ds:0x573a9a3c
  4272ed:	pop    ds
  4272ee:	jae    0x427292
  4272f0:	pop    edx
  4272f1:	js     0x42732b
  4272f3:	fcmovnu st,st(7)
  4272f5:	push   esi
  4272f6:	cld    
  4272f7:	cmp    esp,DWORD PTR [edx-0x5ad51962]
  4272fd:	jne    0x427280
  4272ff:	cwde   
  427300:	pop    ebp
  427301:	xchg   ecx,eax
  427302:	ja     0x427328
  427304:	ja     0x4272de
  427306:	cmp    al,0x4e
  427308:	aam    0x0
  42730a:	fwait
  42730b:	ret    
  42730c:	mov    ah,0x30
  42730e:	outs   dx,DWORD PTR ds:[esi]
  42730f:	push   esp
  427310:	mov    ds:0xe16fa2f5,al
  427315:	add    ecx,DWORD PTR [esi]
  427317:	push   edx
  427318:	ret    
  427319:	jnp    0x42730c
  42731b:	cmp    DWORD PTR [esi-0x80],ecx
  42731e:	mov    bh,bl
  427320:	popf   
  427321:	fsubr  DWORD PTR [ebp-0x74]
  427324:	push   0xffffffb2
  427326:	hlt    
  427327:	popf   
  427328:	mov    ds:0xc2d57524,eax
  42732d:	jae    0x427369
  42732f:	inc    edi
  427330:	add    DWORD PTR [esi-0x474c667b],edi
  427336:	add    esi,DWORD PTR [ebx-0x624cb949]
  42733c:	test   BYTE PTR [edi+0x41dd79ef],ch
  427342:	cmp    eax,0xfb780a8e
  427347:	retf   0xfcc5
  42734a:	inc    edi
  42734b:	pop    ecx
  42734c:	and    ebp,ecx
  42734e:	pop    eax
  42734f:	call   0x673becc5
  427354:	mov    dh,0x69
  427356:	cli    
  427357:	dec    eax
  427358:	mov    edi,0x23556291
  42735d:	retf   0xf3ae
  427360:	mov    edx,0x59b80d2
  427365:	adc    al,0xb5
  427367:	retf   0xfe0d
  42736a:	add    eax,0x36f1a5c6
  42736f:	jl     0x427374
  427371:	inc    ebx
  427372:	and    si,0xa543
  427377:	je     0x427364
  427379:	adc    al,0x90
  42737b:	and    DWORD PTR [ebp+0x6a],ebx
  42737e:	addr16 hlt 
  427380:	push   esp
  427381:	cmp    eax,0x96a6491f
  427386:	stc    
  427387:	inc    esp
  427388:	and    ebx,esp
  42738a:	das    
  42738b:	sub    al,0x56
  42738d:	sbb    DWORD PTR [edx],esp
  42738f:	xchg   ebx,eax
  427390:	add    eax,0x8429480c
  427395:	pushf  
  427396:	dec    edi
  427397:	int    0x77
  427399:	shl    BYTE PTR [ecx+0x2e71eeb2],cl
  42739f:	in     al,dx
  4273a0:	adc    eax,0xeb5467f3
  4273a5:	xchg   edx,eax
  4273a6:	out    0x51,al
  4273a8:	adc    ah,BYTE PTR gs:[esi+0x4787523c]
  4273af:	sub    dh,cl
  4273b1:	jae    0x4273b4
  4273b3:	gs add eax,0xb9d6f581
  4273b9:	in     eax,0x99
  4273bb:	aam    0x9a
  4273bd:	jbe    0x4273f1
  4273bf:	repz aad 0x5b
  4273c2:	fdiv   QWORD PTR [edx]
  4273c4:	jge    0x4273fc
  4273c6:	loope  0x427431
  4273c8:	xchg   esi,eax
  4273c9:	neg    ah
  4273cb:	mov    esi,0xdd59c650
  4273d0:	ret    
  4273d1:	mov    bl,0x2b
  4273d3:	inc    edi
  4273d4:	scas   al,BYTE PTR es:[edi]
  4273d5:	jno    0x4273ed
  4273d7:	and    eax,0xac7ef933
  4273dc:	jmp    eax
  4273de:	cdq    
  4273df:	or     BYTE PTR [esp+edi*2],bh
  4273e2:	adc    al,0xb2
  4273e4:	idiv   ebp
  4273e6:	pop    ecx
  4273e7:	xor    esi,eax
  4273e9:	inc    ebp
  4273ea:	fist   DWORD PTR [ebx+edx*2]
  4273ed:	fsubrp st(5),st
  4273ef:	adc    ebp,DWORD PTR [ecx]
  4273f1:	scas   al,BYTE PTR es:[edi]
  4273f2:	pop    ss
  4273f3:	test   DWORD PTR [ebx+0x647840ba],0x9900d7e1
  4273fd:	enter  0xef16,0x58
  427401:	aam    0x7
  427403:	jmp    0x557e:0x4de40b2a
  42740a:	je     0x42744e
  42740c:	push   edi
  42740d:	and    al,0xf3
  42740f:	in     al,0x10
  427411:	pop    edi
  427412:	dec    eax
  427413:	jle    0x4273a4
  427415:	dec    ebx
  427416:	or     al,0x9a
  427418:	push   edx
  427419:	sbb    eax,0xe14922b9
  42741e:	retf   0x383d
  427421:	cs add eax,0x2f344635
  427427:	and    BYTE PTR [ecx],0x99
  42742a:	sub    BYTE PTR [edx+0x13],dl
  42742d:	daa    
  42742e:	lahf   
  42742f:	mov    ch,0x96
  427431:	loope  0x427488
  427433:	mov    ds:0x4a944f45,eax
  427438:	pop    ds
  427439:	pop    eax
  42743a:	test   al,0xd9
  42743c:	dec    ebx
  42743d:	sbb    DWORD PTR [ecx-0x7b],ebx
  427440:	mov    esp,0xffa6faf2
  427445:	in     eax,0xd6
  427447:	arpl   WORD PTR ds:0xa06f982c,si
  42744d:	pop    ebp
  42744e:	sub    eax,DWORD PTR [edx-0x5883b1af]
  427454:	fld    st(3)
  427456:	mov    WORD PTR [ecx],?
  427458:	in     al,0xf1
  42745a:	sti    
  42745b:	xchg   ebx,eax
  42745c:	fwait
  42745d:	loope  0x4274d6
  42745f:	pop    ebp
  427460:	fisub  DWORD PTR [eax]
  427462:	pop    esi
  427463:	ja     0x427488
  427465:	mov    dl,0x77
  427467:	mov    ds:0x13dd2c87,eax
  42746c:	int3   
  42746d:	in     eax,0x69
  42746f:	xor    ecx,DWORD PTR [edx]
  427471:	loope  0x427448
  427473:	bound  ecx,QWORD PTR [ebx+0x3]
  427476:	dec    eax
  427477:	fs aam 0xb7
  42747a:	test   al,0xa2
  42747c:	xchg   DWORD PTR [di+0x5d],esi
  427480:	pop    es
  427481:	aaa    
  427482:	mov    eax,0xe2885dc7
  427487:	cmc    
  427488:	dec    ebp
  427489:	xlat   BYTE PTR ds:[ebx]
  42748a:	sbb    eax,0xd3f28482
  42748f:	sar    BYTE PTR [edx-0x7c154a0a],0x92
  427496:	pop    edx
  427497:	or     esp,DWORD PTR [esi]
  427499:	mov    esi,0x74a889df
  42749e:	icebp  
  42749f:	scas   eax,DWORD PTR es:[edi]
  4274a0:	retf   0xad33
  4274a3:	sub    DWORD PTR [esi+0x76],esp
  4274a6:	inc    ebx
  4274a7:	push   ecx
  4274a8:	aad    0x41
  4274aa:	jne    0x4274a0
  4274ac:	bound  ecx,QWORD PTR [ebp+0x75fe5da4]
  4274b2:	mov    bl,0x11
  4274b4:	fisttp QWORD PTR [edx-0x4c]
  4274b7:	mov    edx,0xdfcae14b
  4274bc:	stc    
  4274bd:	test   al,0x44
  4274bf:	sti    
  4274c0:	mov    esi,0x17124911
  4274c5:	out    0xc2,eax
  4274c7:	das    
  4274c8:	pushf  
  4274c9:	or     al,0x9d
  4274cb:	or     al,0xe0
  4274cd:	mov    ds:0x24d64a6f,al
  4274d2:	rol    DWORD PTR [ecx],cl
  4274d4:	inc    eax
  4274d5:	test   al,0x17
  4274d7:	xor    esi,esp
  4274d9:	add    BYTE PTR [eax],al
  4274db:	add    BYTE PTR [ecx+0x3],bl
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi-0x6369c146]
  4274ea:	stos   BYTE PTR es:[edi],al
  4274eb:	cwde   
  4274ec:	mov    ebp,esp
  4274ee:	add    DWORD PTR [eax],eax
  4274f0:	test   DWORD PTR [edx],eax
  4274f2:	add    BYTE PTR [eax],al
  4274f4:	mov    bl,0xf0
  4274f6:	ja     0x427556
  4274f8:	add    DWORD PTR [edx-0x4756f8b7],esp
  4274fe:	inc    edx
  4274ff:	xor    DWORD PTR [ecx-0x75],ebx
  427502:	imul   ebp,DWORD PTR [esi],0x3646a723
  427508:	scas   eax,DWORD PTR es:[edi]
  427509:	js     0x42755f
  42750b:	xchg   esp,eax
  42750c:	jg     0x427526
  42750e:	adc    al,0x47
  427510:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  427512:	inc    esi
  427513:	rcl    esi,cl
  427515:	push   ebx
  427516:	ret    
  427517:	jge    0x4274c9
  427519:	and    eax,0xe61631ec
  42751e:	sub    ch,BYTE PTR [ecx]
  427520:	popa   
  427521:	jne    0x42752d
  427523:	dec    ebp
  427524:	cmovs  ebp,edi
  427527:	jns    0x427565
  427529:	ins    DWORD PTR es:[edi],dx
  42752a:	or     al,0xaa
  42752c:	jns    0x4274e4
  42752e:	mov    dl,0xb0
  427530:	add    esi,DWORD PTR [edx+0x17]
  427533:	arpl   bx,cx
  427535:	push   ss
  427536:	call   0x24b8:0xe365ef8c
  42753d:	push   edi
  42753e:	push   esi
  42753f:	loopne 0x42754c
  427541:	xchg   ebp,eax
  427542:	sahf   
  427543:	(bad)
  427547:	dec    edi
  427548:	push   esp
  427549:	fdivr  DWORD PTR [eax-0x7c]
  42754c:	xchg   esp,eax
  42754d:	enter  0xb9ce,0x37
  427551:	and    ebx,esi
  427553:	mov    edx,0xb493eaee
  427558:	adc    eax,0xe339497b
  42755d:	(bad)  
  42755f:	jl     0x4275bc
  427561:	fisub  DWORD PTR [ecx]
  427563:	scas   eax,DWORD PTR es:[edi]
  427564:	xor    al,0x8e
  427566:	stc    
  427567:	int    0x2c
  427569:	jnp    0x427593
  42756b:	dec    ebx
  42756c:	jp     0x42750b
  42756e:	test   al,0x94
  427570:	xchg   esi,eax
  427571:	push   edx
  427572:	xchg   ebp,eax
  427573:	jecxz  0x427508
  427575:	or     eax,0x886389ac
  42757a:	jl     0x4275a3
  42757c:	xchg   esp,eax
  42757d:	idiv   BYTE PTR [edi+edi*1-0x310fc060]
  427584:	pop    edx
  427585:	dec    esp
  427586:	dec    esp
  427587:	pop    eax
  427588:	cmp    ch,BYTE PTR [ebp+0x23fbbbc5]
  42758e:	push   0xffffffca
  427590:	jbe    0x427570
  427592:	scas   eax,DWORD PTR es:[edi]
  427593:	push   ebp
  427594:	jl     0x4275cc
  427596:	sbb    BYTE PTR [ebx],al
  427598:	out    dx,al
  427599:	mulps  xmm5,xmm0
  42759c:	fsubrp st(1),st
  42759e:	mov    ecx,0xe7b399da
  4275a3:	mov    al,0x53
  4275a5:	lods   al,BYTE PTR ds:[esi]
  4275a6:	jns    0x42752a
  4275a8:	in     al,dx
  4275a9:	sub    eax,0xaa2c6170
  4275ae:	xchg   edi,eax
  4275af:	pop    esp
  4275b0:	inc    edi
  4275b1:	mov    ds:0xc53e6cbb,al
  4275b6:	rcl    DWORD PTR [eax+0x3ce77648],cl
  4275bc:	sub    bh,0x43
  4275bf:	mov    al,0xa
  4275c1:	test   al,0x9
  4275c3:	sbb    esp,esi
  4275c5:	mov    cl,0x1b
  4275c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275c8:	fcmovu st,st(6)
  4275ca:	mov    ds,WORD PTR [edi]
  4275cc:	inc    eax
  4275cd:	retf   0xcb87
  4275d0:	push   ss
  4275d1:	push   ebx
  4275d2:	and    DWORD PTR [edi-0x323223f9],ebp
  4275d8:	cwde   
  4275d9:	out    0x8f,eax
  4275db:	xchg   edi,eax
  4275dc:	push   esi
  4275dd:	or     ebp,DWORD PTR [eax+0x7eb435fa]
  4275e3:	and    bl,BYTE PTR [ebp+ebx*1-0x1d65f740]
  4275ea:	jns    0x427571
  4275ec:	adc    ah,BYTE PTR [esi-0x3365b12c]
  4275f2:	or     esp,DWORD PTR [esi]
  4275f4:	jmp    0x5249bd77
  4275f9:	lods   al,BYTE PTR ds:[esi]
  4275fa:	jge    0x4275d6
  4275fc:	sub    BYTE PTR [esi],cl
  4275fe:	outs   dx,DWORD PTR ds:[esi]
  4275ff:	(bad)  
  427601:	cmp    DWORD PTR [edi],esp
  427603:	mov    ch,0x5b
  427605:	ins    BYTE PTR es:[edi],dx
  427606:	ins    BYTE PTR es:[edi],dx
  427607:	adc    BYTE PTR [eax-0x57381fd8],ah
  42760d:	stos   BYTE PTR es:[edi],al
  42760e:	outs   dx,BYTE PTR ds:[esi]
  42760f:	inc    esp
  427610:	dec    ebx
  427611:	inc    eax
  427612:	call   0xdee7e286
  427617:	dec    eax
  427618:	mov    edx,0xca108258
  42761d:	adc    ecx,esi
  42761f:	mov    ah,0xca
  427621:	jno    0x42768a
  427623:	mov    ebx,0x4fbe6bd5
  427628:	ror    esp,1
  42762a:	into   
  42762b:	mov    eax,ds:0x40d98d6f
  427630:	mov    al,0xca
  427632:	loope  0x4275c3
  427634:	in     eax,0x33
  427636:	clc    
  427637:	nop
  427638:	das    
  427639:	mov    ebp,0xaa3bd1b0
  42763e:	imul   eax,DWORD PTR [esi-0xc9b0de0],0x18
  427645:	cli    
  427646:	pushf  
  427647:	arpl   WORD PTR [ebp+0x6b],bp
  42764a:	cdq    
  42764b:	mov    edi,0x6bdb3c28
  427650:	inc    ebp
  427651:	ds mov edx,0x2281bed4
  427657:	dec    eax
  427658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427659:	adc    ebp,DWORD PTR [eax+edx*2-0x6]
  42765d:	push   0x5480af5d
  427662:	dec    edx
  427663:	in     eax,dx
  427664:	clc    
  427665:	xlat   BYTE PTR ds:[ebx]
  427666:	cmp    cl,0x45
  427669:	das    
  42766a:	nop
  42766b:	dec    esp
  42766c:	push   edi
  42766d:	cmp    al,BYTE PTR [eax+0x7ddce7a]
  427673:	daa    
  427674:	(bad)  
  427675:	fild   WORD PTR [edx-0x39]
  427678:	out    0x2f,eax
  42767a:	int    0xf2
  42767c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42767d:	lods   ax,WORD PTR ds:[esi]
  42767f:	push   cs
  427680:	pop    ds
  427681:	mov    ch,0xd
  427683:	inc    ecx
  427684:	mov    ebx,0xe6c67a19
  427689:	cmp    DWORD PTR [edi-0x2a],esp
  42768c:	pop    ecx
  42768d:	add    eax,0x950bd0d3
  427692:	cmp    bh,BYTE PTR es:[eax-0x630be6fd]
  427699:	mov    esp,fs
  42769b:	popa   
  42769c:	pop    ds
  42769d:	push   ecx
  42769e:	push   0xffffff89
  4276a0:	dec    edi
  4276a1:	ins    DWORD PTR es:[edi],dx
  4276a2:	pushf  
  4276a3:	cwde   
  4276a4:	sbb    al,0x96
  4276a6:	cmp    BYTE PTR [edi+0x54],0xd2
  4276aa:	inc    eax
  4276ab:	sbb    al,0x86
  4276ad:	jge    0x4276c2
  4276af:	into   
  4276b0:	ins    DWORD PTR es:[edi],dx
  4276b1:	and    BYTE PTR [ecx],bh
  4276b3:	cmp    al,0x82
  4276b5:	repz xchg ebx,eax
  4276b7:	rcr    dl,0xe4
  4276ba:	add    eax,0x59727d3e
  4276bf:	aam    0xac
  4276c1:	je     0x42766b
  4276c3:	push   esi
  4276c4:	or     BYTE PTR [ecx-0x7e],bl
  4276c7:	ret    
  4276c8:	call   0x613a08e5
  4276cd:	push   ds
  4276ce:	(bad)  
  4276cf:	(bad)  
  4276d0:	fiadd  DWORD PTR [edx+0xd]
  4276d3:	cmp    DWORD PTR [ecx+0x644a75ea],ecx
  4276d9:	cmp    BYTE PTR [ebx-0x6a98f84e],0xaf
  4276e0:	and    dh,bl
  4276e2:	aad    0x15
  4276e4:	cs ret 
  4276e6:	es mov edi,0xad83da4c
  4276ec:	mov    eax,ds:0x5063e619
  4276f1:	xchg   esp,eax
  4276f2:	mov    al,BYTE PTR [ecx+edi*2+0x34]
  4276f6:	dec    ecx
  4276f7:	add    cl,BYTE PTR [ecx+0x54]
  4276fa:	pop    es
  4276fb:	add    cl,dl
  4276fd:	or     eax,0x10c62400
  427702:	out    0xa9,eax
  427704:	cld    
  427705:	ins    DWORD PTR es:[edi],dx
  427706:	cld    
  427707:	fiadd  DWORD PTR [edx+0x61]
  42770a:	mov    bl,0x76
  42770c:	adc    dl,dl
  42770e:	dec    edi
  42770f:	adc    DWORD PTR [ecx+0x4e],edx
  427712:	dec    esi
  427713:	sub    al,ah
  427715:	push   ss
  427716:	add    eax,0x21264f20
  42771b:	inc    esi
  42771c:	cmp    ah,0xdb
  42771f:	sbb    BYTE PTR [edi+0x1e8d858b],0x9
  427726:	cld    
  427727:	xchg   esp,eax
  427728:	in     eax,0xf3
  42772a:	dec    ecx
  42772b:	pop    eax
  42772c:	push   esi
  42772d:	cli    
  42772e:	jmp    0x8f3af6cb
  427733:	clc    
  427734:	or     BYTE PTR [edx-0x32],0x8d
  427738:	or     al,0x96
  42773a:	and    ebx,DWORD PTR [edi+0x9]
  42773d:	add    eax,0x6424aa16
  427742:	imul   ebp,DWORD PTR [ebp-0x48907c6a],0x59
  427749:	(bad)  
  42774b:	cli    
  42774c:	mov    ah,0x14
  42774e:	ror    bl,cl
  427750:	sub    eax,0x64b7175d
  427755:	ud1    ecx,DWORD PTR ds:0x30e0a8aa
  42775c:	iret   
  42775d:	ins    DWORD PTR es:[edi],dx
  42775e:	sub    al,al
  427760:	int    0x61
  427762:	mov    bh,0x85
  427764:	xor    ebx,edi
  427766:	dec    eax
  427767:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  427769:	xchg   ebp,eax
  42776a:	jnp    0x427710
  42776c:	sbb    al,0xaa
  42776e:	jl     0x42779c
  427770:	cmp    al,0xe8
  427772:	add    al,BYTE PTR [esp+edx*4-0x29d8ec4]
  427779:	add    BYTE PTR [eax],al
  42777b:	add    BYTE PTR [ebx],bl
  42777d:	daa    
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	push   edi
  427789:	mov    DWORD PTR [edx+0x1ef1020],esp
  42778f:	add    BYTE PTR [ebp-0x7dfffffe],al
  427795:	in     al,0x65
  427797:	ins    DWORD PTR es:[edi],dx
  427798:	data16 stc 
  42779a:	fnstsw WORD PTR [ebx-0x5c]
  42779d:	mov    ebp,0x19a57a96
  4277a2:	push   0xffffffb2
  4277a4:	xchg   edx,eax
  4277a5:	in     eax,0x4
  4277a7:	int3   
  4277a8:	pop    edi
  4277a9:	dec    ebp
  4277aa:	sub    eax,0x94f83f8f
  4277af:	mov    eax,ds:0x34d8314f
  4277b4:	mov    edi,0xc20b0adc
  4277b9:	in     al,0x86
  4277bb:	adc    DWORD PTR [ebx-0x5522b123],ecx
  4277c1:	pop    es
  4277c2:	push   ds
  4277c3:	test   eax,0x38e23d95
  4277c8:	ins    DWORD PTR es:[edi],dx
  4277c9:	retf   0x854b
  4277cc:	rol    DWORD PTR [esi+0x32273c5d],1
  4277d2:	sti    
  4277d3:	ins    BYTE PTR es:[edi],dx
  4277d4:	add    dh,BYTE PTR [edx-0x19133c2b]
  4277da:	or     al,0x8a
  4277dc:	(bad)  
  4277dd:	fwait
  4277de:	sbb    BYTE PTR fs:[ebp-0x7ac29c92],al
  4277e5:	or     ebp,edx
  4277e7:	mov    ecx,0x7b5ccd97
  4277ec:	bound  esi,QWORD PTR [ebx-0x31]
  4277ef:	in     al,dx
  4277f0:	sbb    dh,al
  4277f2:	fisub  DWORD PTR [ecx]
  4277f4:	jo     0x427802
  4277f6:	(bad)  
  4277f7:	addr16 or al,0x93
  4277fa:	jmp    0x42778e
  4277fc:	lds    edi,FWORD PTR [edx]
  4277fe:	nop
  4277ff:	inc    esi
  427800:	pop    ss
  427801:	ds inc edx
  427803:	mov    ecx,0x4e437b90
  427808:	sub    BYTE PTR [eax-0x5761fde1],cl
  42780e:	xor    al,0x65
  427810:	iret   
  427811:	pusha  
  427812:	loope  0x42787f
  427814:	push   0x36
  427816:	add    BYTE PTR [ebp-0x32b382de],ch
  42781c:	inc    ebx
  42781d:	int3   
  42781e:	and    eax,0xfbaad56f
  427823:	cmp    eax,0xa6432ffb
  427828:	mov    ebp,0xe5a86ee5
  42782d:	ins    DWORD PTR es:[edi],dx
  42782e:	or     al,0xff
  427830:	adc    ebx,esp
  427832:	xor    eax,DWORD PTR [edx+0x2691884c]
  427838:	mov    bl,0xdd
  42783a:	push   es
  42783b:	shl    DWORD PTR [esi-0x23],0x48
  42783f:	xchg   ecx,eax
  427840:	pusha  
  427841:	mov    WORD PTR [ebx-0x7a9342de],gs
  427847:	test   eax,0x1542e54c
  42784c:	outs   dx,BYTE PTR ds:[esi]
  42784d:	in     eax,0x8f
  42784f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427850:	adc    ecx,esp
  427852:	call   0x8db8:0x36715e
  427859:	ins    BYTE PTR es:[edi],dx
  42785a:	cmc    
  42785b:	dec    esi
  42785c:	enter  0xb14e,0x85
  427860:	mov    bh,0x7b
  427862:	mov    bh,0x89
  427864:	sub    al,0x2a
  427866:	or     edi,eax
  427868:	jmp    FWORD PTR [edi-0x2c496c20]
  42786e:	(bad)  
  427870:	mov    eax,0x38625ff9
  427875:	and    dh,BYTE PTR [ecx-0x26]
  427878:	jl     0x427899
  42787a:	cld    
  42787b:	call   0xdf9d:0x246b061
  427882:	pop    es
  427883:	or     al,0x9
  427885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427886:	and    DWORD PTR [ebx+0x20b77498],edi
  42788c:	dec    esp
  42788d:	xchg   esi,eax
  42788e:	(bad)  
  42788f:	xchg   edx,eax
  427890:	cmp    al,0xf1
  427892:	jmp    0x427874
  427894:	(bad)  
  427895:	push   edi
  427896:	inc    ebp
  427897:	outs   dx,BYTE PTR ds:[esi]
  427898:	or     al,0xdf
  42789a:	jbe    0x4278c5
  42789c:	stos   BYTE PTR es:[edi],al
  42789d:	adc    BYTE PTR [eax+edi*2-0x52d8becb],ah
  4278a4:	xchg   dh,cl
  4278a6:	call   0xd7db:0x47208533
  4278ad:	xchg   esp,eax
  4278ae:	jbe    0x427887
  4278b0:	push   0xffffff8a
  4278b2:	dec    ebp
  4278b3:	pop    ss
  4278b4:	aad    0x45
  4278b6:	push   0x14cd9dfa
  4278bb:	xchg   BYTE PTR ds:0x4ad18f65,ch
  4278c1:	mov    cl,0x7e
  4278c3:	push   ecx
  4278c4:	(bad)  
  4278c5:	retf   0x38b1
  4278c8:	adc    BYTE PTR [ebp+0x30],ah
  4278cb:	mov    dh,0xae
  4278cd:	into   
  4278ce:	unpcklps xmm7,xmm1
  4278d1:	mov    BYTE PTR [ebx+0x7bab2c98],bh
  4278d7:	mov    ebx,0x423e9b53
  4278dc:	jg     0x42792b
  4278de:	mov    DWORD PTR [ecx-0x5a],ebx
  4278e1:	jge    0x427885
  4278e3:	je     0x4278a8
  4278e5:	sbb    eax,0xd708507b
  4278ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278eb:	clc    
  4278ec:	cs popf 
  4278ee:	push   ds
  4278ef:	xchg   ebp,eax
  4278f0:	pop    es
  4278f1:	sbb    al,BYTE PTR [esi]
  4278f3:	jnp    0x427918
  4278f5:	rcl    DWORD PTR [edx],1
  4278f7:	fst    QWORD PTR [esi+0x70878c6c]
  4278fd:	pop    edi
  4278fe:	ret    
  4278ff:	mov    edx,0xae04442a
  427904:	mov    ebp,0xaa5f4645
  427909:	sub    DWORD PTR [edx-0x1f],eax
  42790c:	xor    esp,DWORD PTR [ebp+eiz*4+0x2f]
  427910:	ja     0x4278c9
  427912:	mov    esp,0xf549c848
  427917:	jecxz  0x427924
  427919:	lods   al,BYTE PTR ds:[esi]
  42791a:	sbb    ebp,DWORD PTR [ecx+0x17c20eb8]
  427920:	sbb    eax,0x10e4f84b
  427925:	sti    
  427926:	cmp    ebp,DWORD PTR [eax-0x5e243c01]
  42792c:	loop   0x4278ec
  42792e:	cdq    
  42792f:	xchg   edi,eax
  427930:	push   eax
  427931:	xchg   BYTE PTR [ecx],al
  427933:	inc    ebp
  427934:	into   
  427935:	retf   
  427936:	mov    ds:0x2ea8194a,al
  42793b:	sub    al,0xd1
  42793d:	retf   0xe984
  427940:	mov    eax,DWORD PTR [ecx+0x72]
  427943:	cmp    al,0x9b
  427945:	leave  
  427946:	mov    ebp,0x7ede17d1
  42794b:	pop    ss
  42794c:	call   FWORD PTR [esi-0x2237a4d2]
  427952:	jno    0x42795f
  427954:	retf   0x7de2
  427957:	ror    DWORD PTR [edi],cl
  427959:	mov    bh,0xa0
  42795b:	mov    esi,eax
  42795d:	ds pop ss
  42795f:	ins    BYTE PTR es:[edi],dx
  427960:	adc    esi,DWORD PTR [esi]
  427962:	cmc    
  427963:	dec    esp
  427964:	das    
  427965:	sub    ebx,0x352bcb64
  42796b:	addr16 jno 0x4278ef
  42796e:	pop    eax
  42796f:	inc    ebx
  427970:	sbb    eax,0xff97c7d2
  427975:	pop    ds
  427976:	cmp    ebp,esp
  427978:	out    dx,al
  427979:	jne    0x42795d
  42797b:	jno    0x42791b
  42797d:	int    0x79
  42797f:	cld    
  427980:	std    
  427981:	cld    
  427982:	mov    ds:0x3d7063fc,eax
  427987:	push   esp
  427988:	iret   
  427989:	out    dx,al
  42798a:	cmc    
  42798b:	cdq    
  42798c:	and    bh,dl
  42798e:	sub    BYTE PTR [edx+0x33],cl
  427991:	fmul   DWORD PTR [ebp-0x661a24a7]
  427997:	push   esi
  427998:	mov    edx,0xbc29265
  42799d:	outs   dx,BYTE PTR ds:[esi]
  42799e:	int3   
  42799f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279a0:	pop    esp
  4279a1:	pusha  
  4279a2:	loope  0x4279b6
  4279a4:	inc    ebp
  4279a5:	lock lds esp,FWORD PTR [ecx+0x7a]
  4279a9:	mov    bl,0x84
  4279ab:	adc    ch,BYTE PTR [edi+0x3845ff67]
  4279b1:	and    BYTE PTR [edx-0x18ef5714],cl
  4279b7:	popf   
  4279b8:	jge    0x427940
  4279ba:	lods   eax,DWORD PTR ds:[esi]
  4279bb:	ss (bad) 
  4279bd:	fisttp WORD PTR [esi]
  4279bf:	push   ebx
  4279c0:	js     0x4279ed
  4279c2:	loop   0x4279aa
  4279c4:	push   cs
  4279c5:	loop   0x4279ab
  4279c7:	sbb    eax,0xe6dc5110
  4279cc:	test   eax,0x3ec58123
  4279d1:	mov    dh,0xd0
  4279d3:	or     cl,BYTE PTR [ebp-0x15]
  4279d6:	add    dh,al
  4279d8:	jno    0x42799e
  4279da:	inc    ebx
  4279db:	call   DWORD PTR [edi]
  4279dd:	pop    ebx
  4279de:	add    DWORD PTR [esi],ebp
  4279e0:	(bad)  
  4279e1:	mov    eax,0xfbc2491e
  4279e6:	mov    ecx,ss
  4279e8:	sti    
  4279e9:	test   BYTE PTR [ecx],ah
  4279eb:	loopne 0x427a47
  4279ed:	inc    esi
  4279ee:	pop    ebp
  4279ef:	sbb    eax,0x62138524
  4279f4:	test   BYTE PTR [edi+0x7a],dh
  4279f7:	push   ss
  4279f8:	mov    edx,es
  4279fa:	es leave 
  4279fc:	fld    DWORD PTR ds:0x4bf54f82
  427a02:	leave  
  427a03:	shr    BYTE PTR es:[esi+0x7e],cl
  427a07:	stos   DWORD PTR es:[edi],eax
  427a08:	pop    ss
  427a09:	cwde   
  427a0a:	(bad)  
  427a0b:	jmp    0x598:0xaf79f198
  427a12:	and    BYTE PTR [ecx-0x669a3db3],dl
  427a18:	in     eax,dx
  427a19:	add    BYTE PTR [eax],al
  427a1b:	add    BYTE PTR [edx-0x107ddbc],bl
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0xaa67475
  427a2a:	sub    bh,bl
  427a2c:	xchg   ebp,eax
  427a2d:	icebp  
  427a2e:	add    DWORD PTR [eax],eax
  427a30:	test   DWORD PTR [edx],eax
  427a32:	add    BYTE PTR [eax],al
  427a34:	push   edi
  427a35:	add    BYTE PTR [edx-0x14],bl
  427a38:	sahf   
  427a39:	push   ecx
  427a3a:	ret    
  427a3b:	pop    es
  427a3c:	out    dx,eax
  427a3d:	test   eax,0x2db2e004
  427a42:	mov    bh,0x20
  427a44:	jg     0x427a39
  427a46:	aaa    
  427a47:	add    edx,DWORD PTR [edx-0x7c]
  427a4a:	mov    BYTE PTR [esi-0x38c194af],bh
  427a50:	xchg   di,ax
  427a52:	bound  ebx,QWORD PTR [esi-0x277749df]
  427a58:	ficomp WORD PTR [ecx]
  427a5a:	mov    esp,0x605d2b3a
  427a5f:	fwait
  427a60:	xor    edx,DWORD PTR [edx]
  427a62:	push   ebp
  427a63:	iret   
  427a64:	and    dl,dh
  427a66:	into   
  427a67:	push   cs
  427a68:	imul   ebp,DWORD PTR [ebx],0x2d7e0d13
  427a6e:	ss cmp al,0x5c
  427a71:	sub    edi,DWORD PTR [ebx+0x42b69270]
  427a77:	ins    DWORD PTR es:[edi],dx
  427a78:	dec    eax
  427a79:	xchg   DWORD PTR [edi],ebx
  427a7b:	pop    eax
  427a7c:	mov    ah,0x9d
  427a7e:	push   esp
  427a7f:	push   esp
  427a80:	pop    esp
  427a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a82:	add    eax,0x87211e07
  427a87:	in     eax,0xc7
  427a89:	(bad)  
  427a8a:	dec    DWORD PTR [ecx]
  427a8c:	sub    DWORD PTR [esi+esi*1-0x6f0c6607],ecx
  427a93:	add    BYTE PTR [ecx+eax*4-0x434d4956],0x90
  427a9b:	cwde   
  427a9c:	add    eax,DWORD PTR [ecx]
  427a9e:	test   eax,0x6352b2bb
  427aa3:	xor    al,0xdc
  427aa5:	push   ebx
  427aa6:	xchg   edi,eax
  427aa7:	jle    0x427a4f
  427aa9:	xor    eax,edi
  427aab:	sub    ch,bh
  427aad:	sbb    ebx,0x64
  427ab0:	jg     0x427b0b
  427ab2:	pop    edx
  427ab3:	cmp    dh,cl
  427ab5:	xchg   ebx,eax
  427ab6:	xchg   ebx,eax
  427ab7:	xchg   edi,eax
  427ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ab9:	dec    ebx
  427aba:	aas    
  427abb:	pushf  
  427abc:	pop    es
  427abd:	aaa    
  427abe:	ja     0x427a67
  427ac0:	inc    esi
  427ac1:	call   0xeb26:0x944592ca
  427ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ac9:	add    eax,0x9582ec97
  427ace:	push   0xb2dea4d0
  427ad3:	add    al,0x7c
  427ad5:	cli    
  427ad6:	outs   dx,DWORD PTR es:[esi]
  427ad8:	cmp    eax,0xa090a1c9
  427add:	cs xchg edx,eax
  427adf:	mov    ds:0x42625b59,al
  427ae4:	in     eax,0xc8
  427ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ae7:	out    0x4c,al
  427ae9:	jae    0x427a7b
  427aeb:	or     DWORD PTR [edi+eiz*1],edi
  427aee:	mov    eax,0x40d2ee29
  427af3:	push   0x4f
  427af5:	add    al,0xdd
  427af7:	add    BYTE PTR [eax*4-0x13b36971],0x21
  427aff:	add    esi,ebx
  427b01:	sbb    DWORD PTR [esi-0x7608fc2b],esi
  427b07:	icebp  
  427b08:	nop
  427b09:	jno    0x427ad1
  427b0b:	sti    
  427b0c:	mov    ebx,0xb0e6b470
  427b11:	lds    ebx,FWORD PTR [esp+esi*8]
  427b14:	and    edx,ecx
  427b16:	jns    0x427b53
  427b18:	(bad)  
  427b19:	jl     0x427b3d
  427b1b:	jg     0x427b59
  427b1d:	xor    ah,BYTE PTR [eax-0x17105108]
  427b23:	and    DWORD PTR [edi-0x7a],0x10
  427b27:	pop    edx
  427b28:	add    DWORD PTR [ecx+ecx*1],0xffffff8b
  427b2c:	retf   
  427b2d:	add    ebx,DWORD PTR [ebp-0x1cd4d18f]
  427b33:	popa   
  427b34:	rcr    DWORD PTR [edi+0x318b71bd],0x2
  427b3b:	or     al,0xb9
  427b3d:	inc    eax
  427b3e:	sbb    eax,0xc1b827cd
  427b43:	fidivr DWORD PTR [esi-0x64]
  427b46:	adc    DWORD PTR [esi+0x37b4eb4d],ebx
  427b4c:	push   0x8f6ace84
  427b51:	cli    
  427b52:	sbb    BYTE PTR [ebx],0x21
  427b55:	push   eax
  427b56:	jge    0x427b51
  427b58:	sbb    DWORD PTR [edx-0x60f1a2ae],edi
  427b5e:	cmp    al,0x5b
  427b60:	retf   
  427b61:	cli    
  427b62:	mov    cl,0x10
  427b64:	dec    edx
  427b65:	mov    ds:0xb7f6643d,eax
  427b6a:	jecxz  0x427b82
  427b6c:	pavgw  mm3,QWORD PTR [ecx+0x1166e274]
  427b73:	aam    0x87
  427b75:	jb     0x427b34
  427b77:	and    DWORD PTR [edx],edi
  427b79:	mov    ch,0x2
  427b7b:	fs xchg ebp,eax
  427b7d:	stos   BYTE PTR es:[edi],al
  427b7e:	outs   dx,DWORD PTR ds:[esi]
  427b7f:	cvtpi2ps xmm3,mm2
  427b82:	jmp    0x427b9d
  427b84:	xchg   esp,eax
  427b85:	fadd   DWORD PTR [ecx]
  427b87:	mov    dl,0xa0
  427b89:	ret    
  427b8a:	aaa    
  427b8b:	cs push cs
  427b8d:	inc    esp
  427b8e:	in     eax,0x8c
  427b90:	pop    ecx
  427b91:	sub    DWORD PTR [edx+0x19930e9f],0x78
  427b98:	fild   QWORD PTR [esi]
  427b9a:	and    BYTE PTR [edx+edx*4-0x59f1d7f6],0x93
  427ba2:	lods   eax,DWORD PTR es:[esi]
  427ba4:	jl     0x427b7b
  427ba6:	and    eax,DWORD PTR [ebx+eiz*1-0x72]
  427baa:	jo     0x427bca
  427bac:	xchg   esi,eax
  427bad:	jg     0x427c1d
  427baf:	fs out dx,al
  427bb1:	xchg   ecx,eax
  427bb2:	push   ebx
  427bb3:	xlat   BYTE PTR ds:[ebx]
  427bb4:	stc    
  427bb5:	pushf  
  427bb6:	stos   DWORD PTR es:[edi],eax
  427bb7:	mov    edi,eax
  427bb9:	push   0xbfad9922
  427bbe:	mov    ebp,0x7ff7325a
  427bc3:	dec    ebx
  427bc4:	ja     0x427b95
  427bc6:	ffreep st(5)
  427bc8:	jb     0x427b85
  427bca:	or     DWORD PTR [edx],esp
  427bcc:	add    eax,0xc07775bd
  427bd1:	scas   al,BYTE PTR es:[edi]
  427bd2:	in     eax,dx
  427bd3:	xchg   ebp,eax
  427bd4:	cmc    
  427bd5:	push   ecx
  427bd6:	mov    ebx,0xee3fe8d4
  427bdb:	in     al,0x42
  427bdd:	ret    
  427bde:	outs   dx,DWORD PTR ds:[esi]
  427bdf:	lods   eax,DWORD PTR ds:[esi]
  427be0:	ja     0x427b87
  427be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427be3:	mov    WORD PTR [esi],?
  427be5:	fcmovne st,st(6)
  427be7:	pop    ebp
  427be8:	scas   eax,DWORD PTR es:[edi]
  427be9:	ins    BYTE PTR es:[edi],dx
  427bea:	hlt    
  427beb:	cwde   
  427bec:	sbb    BYTE PTR [ecx+esi*8],0x91
  427bf0:	hlt    
  427bf1:	pop    ds
  427bf2:	pop    edx
  427bf3:	jl     0x427bad
  427bf5:	mov    bh,0x8e
  427bf7:	out    0x7d,eax
  427bf9:	xor    BYTE PTR [ebx],bh
  427bfb:	test   al,0x7e
  427bfd:	cmp    bl,bh
  427bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c00:	scas   al,BYTE PTR es:[edi]
  427c01:	or     esp,DWORD PTR cs:[di+0x5a23]
  427c07:	add    al,0x8b
  427c09:	js     0x427b8f
  427c0b:	scas   eax,DWORD PTR es:[edi]
  427c0c:	and    BYTE PTR [esp+edi*1-0x4ff5a98d],bl
  427c13:	inc    esp
  427c14:	call   0xfea5e201
  427c19:	scas   eax,DWORD PTR es:[edi]
  427c1a:	jmp    0x2fb5:0xe33e613
  427c21:	(bad)  
  427c22:	mov    eax,ds:0x1e6aefe8
  427c27:	hlt    
  427c28:	cmp    ecx,DWORD PTR [edx]
  427c2a:	and    eax,0x6c99fc39
  427c2f:	nop
  427c30:	sub    BYTE PTR [edi+0x769b87ad],0x9
  427c37:	cwde   
  427c38:	xor    al,BYTE PTR [eax-0x72b0b72]
  427c3e:	fsubr  st(6),st
  427c40:	out    dx,al
  427c41:	sbb    al,0xc2
  427c43:	mov    ds:0xd60a0e90,eax
  427c48:	jle    0x427cb5
  427c4a:	cmp    BYTE PTR [ecx+eax*8],bl
  427c4d:	adc    eax,0x45c16086
  427c52:	int3   
  427c53:	imul   eax,DWORD PTR [edx],0x1b
  427c56:	lea    ebx,[esp+edx*1]
  427c59:	jo     0x427c68
  427c5b:	push   0xffffffb3
  427c5d:	retf   0xe71c
  427c60:	add    ebx,DWORD PTR [edi+ebx*4-0x66d0034f]
  427c67:	inc    edi
  427c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c69:	shr    DWORD PTR [edi-0x43],cl
  427c6c:	outs   dx,BYTE PTR ds:[esi]
  427c6d:	inc    ebx
  427c6e:	pushf  
  427c6f:	push   edx
  427c70:	mov    cl,BYTE PTR [esi]
  427c72:	inc    esp
  427c73:	ss in  al,0x8d
  427c76:	mov    ?,eax
  427c78:	ja     0x427cb2
  427c7a:	and    al,0xd3
  427c7c:	gs jae 0x427c6d
  427c7f:	loop   0x427c0a
  427c81:	xor    eax,0xa25d596f
  427c86:	das    
  427c87:	in     eax,dx
  427c88:	test   BYTE PTR [esi-0x12],bh
  427c8b:	mov    dh,0x49
  427c8d:	pop    es
  427c8e:	loop   0x427c8d
  427c90:	mov    edi,0x7b6208d7
  427c95:	gs or  eax,0x85b18d1
  427c9b:	add    bh,BYTE PTR [ebx+0x65]
  427c9e:	pop    ss
  427c9f:	out    0xed,eax
  427ca1:	mov    gs,WORD PTR [edx-0x356c631b]
  427ca7:	pop    es
  427ca8:	pop    eax
  427ca9:	mov    BYTE PTR [ecx+edi*4+0x7e],ah
  427cad:	call   0x11af:0x3d115e15
  427cb4:	dec    esp
  427cb5:	jmp    0x473ef6
  427cba:	add    BYTE PTR [eax],al
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	xchg   ebx,eax
  427cc9:	push   esp
  427cca:	or     bl,bh
  427ccc:	sbb    dh,ah
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	test   DWORD PTR [edx],eax
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	ret    
  427cd5:	test   DWORD PTR [eax-0x4a],edx
  427cd8:	outs   dx,BYTE PTR ds:[esi]
  427cd9:	push   ds
  427cda:	(bad)  
  427cdb:	in     al,0x65
  427cdd:	mov    bl,0x5b
  427cdf:	loopne 0x427cc2
  427ce1:	fwait
  427ce2:	sub    esp,DWORD PTR [ecx]
  427ce4:	fwait
  427ce5:	pop    es
  427ce6:	call   0xf034:0x5f2bd84c
  427ced:	mov    eax,ss
  427cef:	mov    ecx,0x8858ed22
  427cf4:	add    al,0x8d
  427cf6:	adc    DWORD PTR [ecx+ecx*2-0x53],ebx
  427cfa:	scas   eax,DWORD PTR es:[edi]
  427cfb:	rcl    BYTE PTR [edx+edi*1-0x47],1
  427cff:	adc    BYTE PTR [eax-0x4adfca21],dl
  427d05:	add    al,0xb1
  427d07:	xchg   esi,eax
  427d08:	xor    eax,0x9e2dd2d0
  427d0d:	loopne 0x427d8d
  427d0f:	sbb    bl,dh
  427d11:	loop   0x427d5f
  427d13:	mov    bl,0xf8
  427d15:	mov    dh,0x60
  427d17:	mov    ds:0xd71aa05c,al
  427d1c:	sub    al,0xb8
  427d1e:	fistp  QWORD PTR [ecx-0x227e301f]
  427d24:	mov    BYTE PTR [ecx+eax*1+0x3b8eb4f5],bh
  427d2b:	sbb    dh,BYTE PTR [ebx]
  427d2d:	jecxz  0x427ce8
  427d2f:	enter  0x7df2,0x5b
  427d33:	push   cs
  427d34:	xor    eax,0x48c7c60a
  427d39:	pop    ss
  427d3a:	mov    ebx,0x5afe3da4
  427d3f:	mov    dh,0xe1
  427d41:	call   edx
  427d43:	xchg   BYTE PTR [esi+0x3b6b9ed8],dl
  427d49:	jbe    0x427cd8
  427d4b:	pop    ds
  427d4c:	sar    dh,0x37
  427d4f:	repz lds eax,FWORD PTR ds:0xa0db7a5e
  427d56:	sbb    ah,dl
  427d58:	sub    ebp,DWORD PTR [edx-0x2f3b892b]
  427d5e:	mov    eax,0xeda23802
  427d63:	xor    eax,0x815f30e3
  427d68:	jp     0x427d47
  427d6a:	prefetch BYTE PTR ds:0x9f8965c2
  427d71:	in     al,0xd
  427d73:	pop    edi
  427d75:	mov    ebx,0xd9d2a4c1
  427d7a:	lods   eax,DWORD PTR ds:[esi]
  427d7b:	adc    al,0x1c
  427d7d:	inc    ecx
  427d7e:	int    0x50
  427d80:	imul   ecx,DWORD PTR [ebp+0x36],0x58
  427d84:	scas   eax,DWORD PTR es:[edi]
  427d85:	dec    esp
  427d87:	(bad)  
  427d88:	cmp    BYTE PTR [ebp-0x2b0452],al
  427d8e:	mov    cl,0xe3
  427d90:	stos   DWORD PTR es:[edi],eax
  427d91:	and    eax,0x3644a0cb
  427d96:	repnz and cl,dl
  427d99:	dec    ecx
  427d9a:	leave  
  427d9b:	daa    
  427d9c:	push   esp
  427d9d:	sbb    eax,DWORD PTR ds:0xf2e61a02
  427da3:	mov    ah,bh
  427da5:	push   ds
  427da6:	add    BYTE PTR [ecx],0x4f
  427da9:	dec    edi
  427daa:	mov    eax,0x69e499e7
  427daf:	adc    edx,DWORD PTR [edi-0x53]
  427db2:	sub    eax,0x3ed813ec
  427db7:	sub    ebx,esi
  427db9:	cli    
  427dba:	les    edi,FWORD PTR [edi]
  427dbc:	xor    eax,DWORD PTR [ebx-0x7c]
  427dbf:	pop    esp
  427dc0:	and    eax,0x6a84295b
  427dc5:	stos   DWORD PTR es:[edi],eax
  427dc6:	out    0x47,eax
  427dc8:	jb     0x427db5
  427dca:	dec    edx
  427dcb:	fisttp DWORD PTR [eax-0x49]
  427dce:	es loopne 0x427df8
  427dd1:	adc    ebp,ecx
  427dd3:	inc    esp
  427dd4:	iret   
  427dd5:	and    edi,esp
  427dd7:	test   eax,0x3b810448
  427ddc:	cmp    BYTE PTR [ebx+0xd],ah
  427ddf:	inc    edx
  427de0:	add    ch,BYTE PTR [ebp-0x17112f78]
  427de6:	mov    BYTE PTR [esi],ch
  427de8:	mov    bh,bh
  427dea:	bound  edx,QWORD PTR ds:0xf08ecb4c
  427df0:	dec    edx
  427df1:	mov    edx,0x23bc01c1
  427df6:	retf   
  427df7:	je     0x427e2b
  427df9:	fmul   DWORD PTR [edx+0x2f]
  427dfc:	shl    DWORD PTR [edx+0x29],1
  427dff:	dec    edi
  427e00:	push   ss
  427e01:	mov    edx,0x9eac0815
  427e07:	pop    es
  427e08:	sbb    DWORD PTR [eax],esp
  427e0a:	add    dl,BYTE PTR [ebx-0x6f6e65aa]
  427e10:	nop
  427e11:	ins    DWORD PTR es:[edi],dx
  427e12:	cs in  eax,dx
  427e14:	inc    edi
  427e15:	and    DWORD PTR [esi-0x32],0x62
  427e19:	or     DWORD PTR [ecx+0x5660df8d],eax
  427e1f:	hlt    
  427e20:	fwait
  427e21:	sub    bl,BYTE PTR [ebx+0x47]
  427e24:	adc    DWORD PTR [ebx],edi
  427e26:	out    0xa5,al
  427e28:	inc    ecx
  427e29:	pushf  
  427e2a:	mov    dl,0xcf
  427e2c:	mov    bl,0x61
  427e2e:	daa    
  427e2f:	(bad)  
  427e30:	div    DWORD PTR [ecx-0x38]
  427e33:	fs inc ebp
  427e35:	lods   eax,DWORD PTR ds:[esi]
  427e36:	or     eax,0xbfa88bd9
  427e3b:	mov    esp,0x9568be08
  427e40:	jle    0x427e56
  427e42:	pop    ebx
  427e43:	pop    edi
  427e44:	push   esi
  427e45:	rcl    ch,0x55
  427e48:	and    eax,ebx
  427e4a:	mov    dh,BYTE PTR [esi+ebx*2]
  427e4d:	mov    al,ds:0x70980c63
  427e52:	or     al,0xe6
  427e54:	add    eax,0x981fcd1a
  427e59:	int3   
  427e5a:	xor    eax,0xe645e914
  427e5f:	ret    
  427e60:	and    al,BYTE PTR [ecx+0x67]
  427e63:	jmp    0x427e4e
  427e65:	xor    ch,BYTE PTR [ecx+0x416fd972]
  427e6b:	jbe    0x427e4e
  427e6d:	lds    ebp,FWORD PTR [ebx-0x2b]
  427e70:	sub    esi,esi
  427e72:	or     ebx,ecx
  427e74:	fucomi st,st(7)
  427e76:	pop    ds
  427e77:	or     al,0x55
  427e79:	adc    eax,0xf3d6ccc6
  427e7e:	test   BYTE PTR [ebp-0x2e],bl
  427e81:	mov    cl,0x4a
  427e83:	repnz repnz mov al,0xed
  427e87:	mov    DWORD PTR [ebx+0x6d],edi
  427e8a:	add    BYTE PTR [edi],bl
  427e8c:	enter  0xb45a,0xc0
  427e90:	mov    ebp,DWORD PTR [eax-0x65]
  427e93:	xlat   BYTE PTR ds:[ebx]
  427e94:	add    DWORD PTR [ecx+ecx*2],0xc
  427e98:	jns    0x427edf
  427e9a:	jo     0x427e58
  427e9c:	push   es
  427e9d:	mov    cl,0x9a
  427e9f:	les    eax,FWORD PTR [ecx+0x151a8ece]
  427ea5:	imul   ecx,eax,0x44396339
  427eab:	and    DWORD PTR [ebx+0x23],ebp
  427eae:	mov    ch,0x8a
  427eb0:	adc    eax,0x89f81707
  427eb5:	adc    eax,0xa032c719
  427eba:	popf   
  427ebb:	int3   
  427ebc:	imul   ebp,DWORD PTR [eax],0xc7df1410
  427ec2:	in     al,dx
  427ec3:	fistp  WORD PTR [edi]
  427ec5:	sub    bh,BYTE PTR ds:0x65eb28a9
  427ecb:	mov    bl,0x4f
  427ecd:	leave  
  427ece:	sbb    eax,0x3045c86e
  427ed4:	addr16 nop
  427ed6:	pop    esp
  427ed7:	ret    
  427ed8:	fwait
  427ed9:	xchg   edx,eax
  427eda:	sub    al,0xfd
  427edc:	xchg   ecx,eax
  427edd:	push   0x7a
  427edf:	cdq    
  427ee0:	jnp    0x427f1b
  427ee2:	cmp    ebp,DWORD PTR [edx]
  427ee4:	pop    ss
  427ee5:	sti    
  427ee6:	xchg   ebx,eax
  427ee7:	or     eax,0xdd830a64
  427eec:	inc    edx
  427eed:	sti    
  427eee:	addr16 mov ebx,0x6e538f73
  427ef4:	lods   al,BYTE PTR ds:[esi]
  427ef5:	fimul  WORD PTR [esi]
  427ef7:	cmp    DWORD PTR [edx*8+0x512fda8f],0x6c
  427eff:	push   0xe43edc9b
  427f04:	jno    0x427e96
  427f06:	out    0x67,eax
  427f08:	xor    BYTE PTR [ebp+0x66],ah
  427f0b:	pop    ebx
  427f0c:	leave  
  427f0d:	jecxz  0x427eb6
  427f0f:	push   ds
  427f10:	xor    al,0x98
  427f12:	adc    ebp,DWORD PTR [esi-0x680dcd1e]
  427f18:	loop   0x427f16
  427f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f1b:	repz jecxz 0x427ef8
  427f1e:	fsub   QWORD PTR ds:[edi+0x6c75ec22]
  427f25:	sbb    ebx,0xfffffff2
  427f28:	xchg   esp,eax
  427f29:	mov    eax,ds:0x905b2ae5
  427f2e:	loop   0x427f6d
  427f30:	int3   
  427f31:	ror    DWORD PTR [edx],cl
  427f33:	pop    eax
  427f34:	or     edx,DWORD PTR [edx+edx*8]
  427f37:	sub    eax,0x8dd0a77d
  427f3c:	int3   
  427f3d:	leave  
  427f3e:	mov    eax,0xb6676f98
  427f43:	xor    eax,DWORD PTR [esi-0x6e328867]
  427f49:	and    dl,BYTE PTR [edx+0x75be0268]
  427f4f:	xchg   esi,eax
  427f50:	pop    eax
  427f51:	inc    edi
  427f52:	xor    BYTE PTR [ebp+0x13],ah
  427f55:	(bad)  
  427f56:	xor    eax,0x81ed
  427f5b:	add    ch,bh
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	ret    0xe07f
  427f6b:	(bad)  
  427f6c:	lahf   
  427f6d:	test   BYTE PTR [ecx],0x0
  427f70:	test   DWORD PTR [edx],eax
  427f72:	add    BYTE PTR [eax],al
  427f74:	adc    ebx,DWORD PTR [edi]
  427f76:	sub    eax,0xd434b063
  427f7b:	sbb    bl,bh
  427f7d:	or     BYTE PTR [esi+edi*8-0x35],bh
  427f81:	test   eax,0x69199e95
  427f86:	int3   
  427f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f88:	retf   
  427f89:	fdivrp st(2),st
  427f8b:	fimul  WORD PTR [ecx]
  427f8d:	call   0xc8044409
  427f92:	push   ss
  427f93:	fidivr DWORD PTR [eax]
  427f95:	iret   
  427f96:	bound  esi,QWORD PTR [esi+edi*8+0x1fbf66da]
  427f9d:	fsubr  st(5),st
  427f9f:	and    al,0xa8
  427fa1:	arpl   di,di
  427fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fa4:	stos   DWORD PTR es:[edi],eax
  427fa5:	mov    eax,DWORD PTR [ebx]
  427fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fa8:	cdq    
  427fa9:	pop    es
  427faa:	int    0xbb
  427fac:	ret    
  427fad:	icebp  
  427fae:	dec    esp
  427faf:	mov    ds:0x298e84ac,eax
  427fb4:	and    DWORD PTR [ebp+0x2e203057],edx
  427fba:	dec    ecx
  427fbb:	or     esi,DWORD PTR [esi]
  427fbd:	ja     0x427f83
  427fbf:	adc    al,BYTE PTR [ecx]
  427fc1:	into   
  427fc2:	push   ebx
  427fc3:	js     0x427fd9
  427fc5:	shl    DWORD PTR [ecx+0x665a0152],0xbf
  427fcc:	fadd   DWORD PTR [ecx+ecx*8]
  427fcf:	inc    eax
  427fd0:	or     dh,ch
  427fd2:	fldenv [ebx+0x71]
  427fd5:	jne    0x427fd0
  427fd7:	pop    es
  427fd8:	add    DWORD PTR [edi],eax
  427fda:	fcomp  DWORD PTR [eax+0x63426cef]
  427fe0:	adc    al,0x23
  427fe2:	jmp    0xd3fd7a06
  427fe7:	and    eax,0x3ac4c78e
  427fec:	retf   0x3ed5
  427fef:	mov    edx,0xac7bdff
  427ff4:	dec    esi
  427ff5:	adc    ebp,DWORD PTR [esi-0x2b]
  427ff8:	scas   al,BYTE PTR es:[edi]
  427ff9:	loopne 0x427fd8
  427ffb:	and    esi,DWORD PTR [edx-0x52]
  427ffe:	out    dx,al
  427fff:	mov    ?,WORD PTR ds:0x8663e04b
  428005:	xchg   ebp,eax
  428006:	dec    eax
  428007:	add    BYTE PTR [edi+0x665ea026],bh
  42800d:	inc    cl
  42800f:	(bad)  
  428010:	push   eax
  428011:	xchg   edx,eax
  428012:	adc    dh,bh
  428014:	xchg   edi,eax
  428015:	sar    cl,1
  428017:	mov    ch,cl
  428019:	xchg   ebx,eax
  42801a:	inc    edx
  42801b:	xchg   esi,eax
  42801c:	stc    
  42801d:	cli    
  42801e:	mov    eax,0x365f613b
  428023:	ror    BYTE PTR [esi+0x5a792a5c],1
  428029:	mov    ah,BYTE PTR [edx-0x33aed5b6]
  42802f:	adc    bh,BYTE PTR [edi+ecx*8+0x21]
  428033:	sbb    eax,0xf9b72054
  428038:	(bad)  
  428039:	sub    DWORD PTR [esi+0x60cc2dee],ecx
  42803f:	ret    0x6a7
  428042:	dec    BYTE PTR [eax]
  428044:	in     al,0xcb
  428046:	xchg   esi,eax
  428047:	mov    ds:0x8148caf7,eax
  42804c:	scas   al,BYTE PTR es:[edi]
  42804d:	add    BYTE PTR [ebx],0xb7
  428050:	lahf   
  428051:	jp     0x427ff4
  428053:	jp     0x428052
  428055:	push   edi
  428056:	mov    ch,cl
  428058:	push   0x10
  42805a:	mov    ecx,0xa8232dfa
  42805f:	mov    dl,0x12
  428061:	test   esi,esi
  428063:	fild   QWORD PTR [edi-0x60]
  428066:	fld    st(7)
  428068:	popf   
  428069:	scas   eax,DWORD PTR es:[edi]
  42806a:	add    dl,BYTE PTR [ecx-0x3cfc213e]
  428070:	inc    edi
  428071:	sbb    esi,ebx
  428073:	push   ds
  428074:	sbb    ch,cl
  428076:	pusha  
  428077:	outs   dx,BYTE PTR ds:[esi]
  428078:	push   ebx
  428079:	outs   dx,DWORD PTR ds:[esi]
  42807a:	fbld   TBYTE PTR [ebp-0x51]
  42807d:	pop    es
  42807e:	and    DWORD PTR [eax],eax
  428080:	mov    bh,BYTE PTR [ecx-0x1]
  428083:	mov    eax,0xc7093904
  428088:	jmp    0x428056
  42808a:	rol    DWORD PTR [edi],1
  42808c:	sti    
  42808d:	push   ecx
  42808e:	push   esi
  42808f:	fdivr  st,st(6)
  428091:	cmp    DWORD PTR [esi-0xc37b551],0x51e9967d
  42809b:	adc    dh,BYTE PTR [edx]
  42809d:	pop    edi
  42809e:	mov    WORD PTR [esi-0x725aa69d],?
  4280a4:	add    cl,BYTE PTR [esi+0x4c19937a]
  4280aa:	adc    BYTE PTR [ebp-0x5],bl
  4280ad:	clc    
  4280ae:	sbb    ebp,DWORD PTR [ecx+0xc]
  4280b1:	cdq    
  4280b2:	pop    ebp
  4280b3:	jg     0x42806c
  4280b5:	sbb    DWORD PTR [esi-0x3b],ebx
  4280b8:	mov    edx,0x5b89a67a
  4280bd:	rol    BYTE PTR [edi+ecx*1-0x6cd054d5],1
  4280c4:	fcom   QWORD PTR [esi+eiz*1]
  4280c7:	add    al,0xb9
  4280c9:	idiv   edx
  4280cb:	add    eax,0xb3dde24f
  4280d0:	imul   DWORD PTR ds:[esi-0x1b]
  4280d4:	mov    bl,0x6e
  4280d6:	xor    eax,ebx
  4280d8:	mov    ah,0xc1
  4280da:	out    dx,eax
  4280db:	in     eax,0xf3
  4280dd:	adc    BYTE PTR [ecx+0x79],0x22
  4280e1:	and    eax,0xb01f2b78
  4280e6:	jmp    0x21f7:0xf8b1b78
  4280ed:	mov    eax,0x43492b57
  4280f2:	dec    ebp
  4280f3:	mov    dl,0x71
  4280f5:	add    eax,0x4f1b09c0
  4280fa:	fld    TBYTE PTR [eax+0x1ff2644]
  428100:	mov    cl,0x86
  428102:	mov    edi,0x5706bed6
  428107:	mov    ch,0x67
  428109:	sbb    edi,ebx
  42810b:	inc    esi
  42810c:	lock dec edx
  42810e:	nop
  42810f:	call   0xfd94821b
  428114:	pop    eax
  428115:	adc    al,0xfd
  428117:	not    ebp
  428119:	sbb    eax,0x992955d5
  42811e:	iret   
  42811f:	jp     0x4280c3
  428121:	mov    ds:0x238d9f7c,eax
  428126:	mov    bl,0x99
  428128:	dec    DWORD PTR [ebx]
  42812a:	fdivr  DWORD PTR [eax-0x74317f63]
  428130:	ja     0x4281ac
  428132:	inc    esi
  428133:	popa   
  428134:	mov    al,0x1f
  428136:	test   DWORD PTR [edi+eax*4+0x78],0x5c93565d
  42813e:	mov    esp,0xa0d7a47e
  428143:	push   edx
  428144:	add    esi,DWORD PTR [ecx]
  428146:	or     DWORD PTR [edx+0x3d9ac3a],edx
  42814c:	scas   al,BYTE PTR es:[edi]
  42814d:	ins    DWORD PTR es:[edi],dx
  42814e:	ss inc esi
  428150:	xchg   ecx,eax
  428151:	(bad)  
  428152:	mov    eax,ds:0x19a50afc
  428157:	xor    BYTE PTR [edi],bh
  428159:	(bad)  
  42815b:	mov    BYTE PTR [esi],0x2f
  42815e:	cmp    eax,0xdd66c44c
  428163:	aad    0x93
  428165:	add    DWORD PTR [edi-0x2e],0x2b085bc7
  42816c:	hlt    
  42816d:	fwait
  42816e:	mov    edx,0xc8be68d3
  428173:	sub    eax,0x8800f43c
  428178:	in     eax,0x37
  42817a:	aam    0x80
  42817c:	stc    
  42817d:	aam    0x72
  42817f:	mov    eax,ds:0x935d5984
  428184:	xchg   edx,eax
  428185:	inc    ebp
  428186:	mov    ch,0x87
  428188:	jb     0x428110
  42818a:	xchg   edi,eax
  42818b:	dec    edi
  42818c:	je     0x4281f5
  42818e:	xchg   edx,eax
  42818f:	mov    BYTE PTR [ebx+ebx*2],ah
  428192:	or     bh,BYTE PTR [edx+eiz*4+0x2b]
  428196:	aam    0xca
  428198:	mov    esi,0xc669e73e
  42819d:	dec    edi
  42819e:	pusha  
  42819f:	adc    bl,bh
  4281a1:	call   0x315504bf
  4281a6:	fs pop esp
  4281a8:	dec    ecx
  4281a9:	pop    ebx
  4281aa:	mov    ah,0xa8
  4281ac:	push   ebx
  4281ad:	lods   eax,DWORD PTR ds:[esi]
  4281ae:	es jl  0x4281da
  4281b1:	or     esi,DWORD PTR [edx-0x64]
  4281b4:	push   ss
  4281b5:	ins    DWORD PTR es:[edi],dx
  4281b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281b7:	mov    ds:0x598681ac,al
  4281bc:	or     DWORD PTR [ecx],0xd7991af2
  4281c2:	(bad)  
  4281c3:	leave  
  4281c4:	cmp    DWORD PTR [eax+edx*8-0x27],edi
  4281c8:	rcr    DWORD PTR [ebp-0x5c],cl
  4281cb:	pop    ebx
  4281cc:	les    ebx,FWORD PTR [edi-0xd4a4512]
  4281d2:	sub    eax,0xe4678037
  4281d7:	nop
  4281d8:	or     BYTE PTR [esi+0x10f781f7],dl
  4281de:	add    DWORD PTR [ebx],eax
  4281e0:	xlat   BYTE PTR ds:[ebx]
  4281e1:	cld    
  4281e2:	enter  0x1153,0xf0
  4281e6:	dec    eax
  4281e7:	fcomp  DWORD PTR [edi]
  4281e9:	add    DWORD PTR [ebp-0x5b],esp
  4281ec:	mov    ah,0x77
  4281ee:	test   ch,al
  4281f0:	iret   
  4281f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281f2:	and    DWORD PTR [ecx],esp
  4281f4:	adc    edx,ebx
  4281f6:	aaa    
  4281f7:	push   cs
  4281f8:	int3   
  4281f9:	add    BYTE PTR [eax],al
  4281fb:	add    BYTE PTR [ecx-0x7d39faf],ch
  428201:	cmp    eax,0x8ba9d5ed
  428206:	mov    ebx,0xbba2ab92
  42820b:	fisub  DWORD PTR [ecx+edi*8]
  42820e:	add    DWORD PTR [eax],eax
  428210:	adc    al,0x0
  428212:	add    BYTE PTR [eax],al
  428214:	addr16 das 
  428216:	popf   
  428217:	adc    eax,0x14bdefad
  42821c:	outs   dx,BYTE PTR ds:[esi]
  42821d:	pop    esi
  42821e:	bound  eax,QWORD PTR [ebp-0x4b]
  428221:	pop    ebp
  428222:	call   0x177f38c2
  428227:	sbb    BYTE PTR [eax],al
  428229:	add    BYTE PTR [eax],al
	...
