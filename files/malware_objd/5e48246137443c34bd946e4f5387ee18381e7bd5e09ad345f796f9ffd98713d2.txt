
5e48246137443c34bd946e4f5387ee18381e7bd5e09ad345f796f9ffd98713d2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	pop    ds
  4018d8:	inc    eax
  4018d9:	imul   ecx,ecx,0x83838383
  4018df:	dec    ebx
  4018e0:	pop    esi
  4018e1:	add    DWORD PTR [ebx+0x3c263128],0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	xor    eax,0x70737071
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	pop    ds
  401987:	add    BYTE PTR [esp+edx*1],bl
  40198a:	ds xchg esp,eax
  40198c:	mov    bl,al
  40198e:	in     al,dx
  40198f:	inc    esp
  401990:	or     eax,0xbfe0b2d1
  401995:	jmp    DWORD PTR [esi-0x49f043b3]
  40199b:	cmp    BYTE PTR [edx+0x55],bh
  40199e:	lods   al,BYTE PTR ds:[esi]
  40199f:	xchg   BYTE PTR ds:0x6d62766b,dh
  4019a5:	dec    esp
  4019a6:	mul    BYTE PTR [eax-0x7b47ac57]
  4019ac:	add    BYTE PTR [edi],bl
  4019ae:	out    0xc,al
  4019b0:	repz mov edi,0x72ab1aa1
  4019b6:	xor    al,0x21
  4019b8:	mov    eax,0x884c558
  4019bd:	push   ecx
  4019be:	inc    ebx
  4019bf:	ds mov esi,0x640d1595
  4019c5:	loop   0x4019bb
  4019c7:	cdq    
  4019c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019c9:	je     0x401a19
  4019cb:	retf   
  4019cc:	xor    al,dh
  4019ce:	lods   eax,DWORD PTR ds:[esi]
  4019cf:	cmp    ecx,DWORD PTR [edx]
  4019d1:	sub    eax,0x59c88acb
  4019d6:	out    0x64,eax
  4019d8:	fstp   QWORD PTR [edx]
  4019da:	jecxz  0x4019ff
  4019dc:	ds (bad) 
  4019de:	sbb    edi,eax
  4019e0:	and    al,BYTE PTR [edx]
  4019e2:	stos   BYTE PTR es:[edi],al
  4019e3:	or     esi,DWORD PTR [edx]
  4019e5:	imul   ebp,DWORD PTR [ecx-0x2b],0x19
  4019e9:	(bad)  
  4019ea:	aaa    
  4019eb:	xchg   edx,eax
  4019ec:	ds loopne 0x401a44
  4019ef:	ja     0x401a3d
  4019f1:	cmp    al,0x5c
  4019f3:	push   ecx
  4019f4:	jl     0x401982
  4019f6:	loop   0x401a17
  4019f8:	fwait
  4019f9:	repnz xchg ebx,eax
  4019fb:	retf   
  4019fc:	jmp    0xebe836f5
  401a01:	dec    ebx
  401a02:	push   ebx
  401a03:	aad    0x29
  401a05:	or     cl,0x86
  401a08:	ss sub bl,ch
  401a0b:	cmp    eax,0x1600bfc4
  401a10:	ret    
  401a11:	icebp  
  401a12:	sbb    eax,0xfd903071
  401a17:	fild   WORD PTR [edi-0x4e328075]
  401a1d:	pop    ebp
  401a1e:	sbb    esp,ebp
  401a20:	jp     0x4019e1
  401a22:	pop    ebx
  401a23:	ss jno 0x4019d4
  401a26:	aam    0xc5
  401a28:	xor    dh,BYTE PTR [ecx-0x2d302dc]
  401a2e:	gs shr dh,1
  401a31:	retf   
  401a32:	and    bl,BYTE PTR [eax]
  401a34:	es dec ebx
  401a36:	imul   esp,edi,0x688babe2
  401a3c:	dec    BYTE PTR [edx]
  401a3e:	mov    dh,0xc6
  401a40:	cmp    ch,BYTE PTR [ebp+0x2e]
  401a43:	call   0x22aa:0x7b43a532
  401a4a:	popa   
  401a4b:	ret    0x871a
  401a4e:	mov    ds:0xd106f255,eax
  401a53:	or     bh,BYTE PTR [esi+0x74]
  401a56:	fstp   TBYTE PTR [ebx]
  401a58:	jb     0x401a2d
  401a5a:	adc    DWORD PTR ds:0x661e8831,edi
  401a60:	push   es
  401a61:	aam    0x7f
  401a63:	sub    cl,0x37
  401a66:	xchg   edi,eax
  401a67:	es sbb al,0x48
  401a6a:	ret    0x869c
  401a6d:	adc    eax,0x4c7349c3
  401a72:	lods   eax,DWORD PTR ds:[esi]
  401a73:	add    DWORD PTR [ebp-0x3c06d320],edi
  401a79:	mov    ds:0x3c4c2424,eax
  401a7e:	cmp    eax,0xd057b169
  401a83:	pop    ecx
  401a84:	jecxz  0x401a1f
  401a86:	sub    DWORD PTR [esi+0x127d6eb9],esi
  401a8c:	int    0x53
  401a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a8f:	call   0xa70324dd
  401a94:	test   BYTE PTR ds:0x7097e650,dh
  401a9a:	inc    ebx
  401a9b:	xlat   BYTE PTR ds:[ebx]
  401a9c:	lods   al,BYTE PTR ds:[esi]
  401a9d:	and    DWORD PTR [edi+0x3ed754a4],ecx
  401aa3:	mov    al,al
  401aa5:	mov    bh,BYTE PTR [ecx+0x42b8423c]
  401aab:	cmp    DWORD PTR [edi+0x3e],esi
  401aae:	xchg   esp,eax
  401aaf:	mov    bh,0xe8
  401ab1:	xchg   BYTE PTR [ecx],dl
  401ab3:	mov    esi,0xeded4fe8
  401ab8:	push   edx
  401ab9:	in     al,0xc4
  401abb:	daa    
  401abc:	cs out 0xb,al
  401abf:	push   edx
  401ac0:	out    dx,eax
  401ac1:	and    bl,BYTE PTR ds:0x4f9d22eb
  401ac7:	xchg   ecx,eax
  401ac8:	ins    DWORD PTR es:[edi],dx
  401ac9:	dec    edx
  401aca:	std    
  401acb:	or     BYTE PTR [eax-0x6f],bl
  401ace:	into   
  401acf:	dec    eax
  401ad0:	rcl    DWORD PTR [esi-0x64],1
  401ad3:	jb     0x401b14
  401ad5:	(bad)  
  401ad6:	jmp    FWORD PTR [esi+ebp*1+0x6105bcf5]
  401add:	sub    DWORD PTR ds:0xadb4776f,edx
  401ae3:	xor    al,0xd3
  401ae5:	sbb    BYTE PTR [ecx+0x7edeb286],0x54
  401aec:	retf   
  401aed:	cmc    
  401aee:	pop    edx
  401aef:	enter  0x8eb4,0x8f
  401af3:	push   0xffffffe3
  401af5:	and    DWORD PTR [ebx-0x73a103d9],ebp
  401afb:	push   ebx
  401afc:	xchg   ebx,eax
  401afd:	jg     0x401aff
  401aff:	adc    esp,DWORD PTR [eax+0x1c]
  401b02:	or     BYTE PTR [ebp-0x53],al
  401b05:	inc    esi
  401b06:	sub    cl,bh
  401b08:	dec    ebx
  401b09:	fstp   TBYTE PTR [ebp+0x62d5a35c]
  401b0f:	ret    
  401b10:	mov    al,ds:0xc82164d1
  401b15:	pop    esp
  401b16:	dec    esp
  401b17:	je     0x401b73
  401b19:	and    al,cl
  401b1b:	add    al,0x18
  401b1d:	fcmovbe st,st(3)
  401b1f:	mov    ecx,es
  401b21:	adc    al,0x2
  401b23:	fidiv  WORD PTR [edx+0x5f4f5ca6]
  401b29:	push   ebp
  401b2a:	std    
  401b2b:	jae    0x401b6f
  401b2d:	cmp    esi,edi
  401b2f:	idiv   DWORD PTR [ebp+0xe90fb75]
  401b35:	lahf   
  401b36:	xchg   ecx,eax
  401b37:	dec    esi
  401b38:	cli    
  401b39:	adc    al,0x9a
  401b3b:	add    BYTE PTR [ecx],bh
  401b3d:	sub    DWORD PTR [ecx],esi
  401b3f:	rol    DWORD PTR [edx+0x42f88cba],0x99
  401b46:	les    edx,FWORD PTR [ebx+0x36]
  401b49:	mov    ds:0xf72c6cb6,al
  401b4e:	sbb    eax,0xa6825cdb
  401b53:	mov    bl,0xa5
  401b55:	js     0x401af1
  401b57:	mov    cl,0x21
  401b59:	out    dx,eax
  401b5a:	bound  esi,QWORD PTR [eax-0x918ec76]
  401b60:	mov    dl,0x71
  401b62:	es data16 sbb ah,bl
  401b66:	or     DWORD PTR gs:[ecx+ebp*1],ebx
  401b6a:	sub    esp,edx
  401b6c:	xchg   ebp,eax
  401b6d:	mov    fs,WORD PTR [ecx]
  401b6f:	mov    edi,0xefefd8e4
  401b74:	sahf   
  401b75:	test   al,0x3e
  401b77:	cwde   
  401b78:	clc    
  401b79:	cmp    dh,BYTE PTR [edi+ebp*2-0x63]
  401b7d:	or     al,0xdd
  401b7f:	jl     0x401b4b
  401b81:	jmp    0x7a0e7d7f
  401b86:	push   cs
  401b87:	leave  
  401b88:	cmp    BYTE PTR [eax-0x63],cl
  401b8b:	xchg   ecx,eax
  401b8c:	loopne 0x401b24
  401b8e:	outs   dx,DWORD PTR ds:[esi]
  401b8f:	mov    dl,0x25
  401b91:	es ins BYTE PTR es:[edi],dx
  401b93:	push   esp
  401b94:	sub    al,0x1e
  401b96:	add    eax,0x81190c59
  401b9c:	pop    ecx
  401b9d:	sbb    al,0x8b
  401b9f:	in     al,0x6a
  401ba1:	scas   eax,DWORD PTR es:[edi]
  401ba2:	jno    0x401b5b
  401ba4:	push   ecx
  401ba5:	stos   BYTE PTR es:[edi],al
  401ba6:	jb     0x401bc6
  401ba8:	jb     0x401c03
  401baa:	test   BYTE PTR [eax+edx*8+0x2b0e9f16],dl
  401bb1:	jo     0x401b88
  401bb3:	inc    esi
  401bb4:	je     0x401c08
  401bb6:	shr    DWORD PTR [esi],1
  401bb8:	retf   0x6d0e
  401bbb:	test   DWORD PTR [edi+0x53],ebx
  401bbe:	ror    DWORD PTR ds:0x53886894,0xf3
  401bc5:	sbb    esi,0x5db77178
  401bcb:	add    eax,0x91f0ddcb
  401bd0:	das    
  401bd1:	inc    esi
  401bd2:	add    ebp,ebp
  401bd4:	pop    es
  401bd5:	aas    
  401bd6:	loopne 0x401b58
  401bd8:	push   ebp
  401bd9:	sar    BYTE PTR [ecx+0x17a9ae7a],1
  401bdf:	(bad)  
  401be0:	enter  0xbc7,0xde
  401be4:	jmp    0x3f09:0x5da91fd3
  401beb:	xchg   BYTE PTR [edx],cl
  401bed:	jmp    0xa44afee5
  401bf2:	add    dh,BYTE PTR [esi-0x4b]
  401bf5:	pop    ss
  401bf6:	jecxz  0x401c24
  401bf8:	out    dx,al
  401bf9:	hlt    
  401bfa:	dec    esp
  401bfb:	mov    eax,0x726d42
  401c00:	push   0xffffffcb
  401c02:	pushf  
  401c03:	push   eax
  401c04:	xchg   edi,eax
  401c05:	scas   eax,DWORD PTR es:[edi]
  401c06:	rcr    BYTE PTR [ecx-0x3e],0x91
  401c0a:	cmp    dl,ch
  401c0c:	aad    0x19
  401c0e:	add    eax,0xc6d82d27
  401c13:	push   cs
  401c14:	in     eax,dx
  401c15:	jle    0x401c4a
  401c17:	push   ebx
  401c18:	push   es
  401c19:	mov    bl,0x71
  401c1b:	neg    DWORD PTR [ebx]
  401c1d:	sahf   
  401c1e:	les    ebx,FWORD PTR [edi+eiz*2-0x48]
  401c22:	lods   al,BYTE PTR ds:[esi]
  401c23:	ss mov ebx,edx
  401c26:	bound  edi,QWORD PTR [edi+eax*2]
  401c29:	cmp    esp,esp
  401c2b:	mov    edi,0xfe199588
  401c30:	lock repnz daa 
  401c33:	imul   ebp,DWORD PTR [edi],0x74
  401c36:	cli    
  401c37:	push   ds
  401c38:	lock stos BYTE PTR es:[edi],al
  401c3a:	and    BYTE PTR [ecx],dh
  401c3c:	mov    cl,ah
  401c3e:	mov    esp,0x704a0297
  401c43:	rcr    DWORD PTR [ecx-0x7983929d],cl
  401c49:	push   ecx
  401c4a:	jle    0x401c9e
  401c4c:	sar    esi,1
  401c4e:	lahf   
  401c4f:	cmp    ecx,DWORD PTR [ebx+0x73]
  401c52:	xor    DWORD PTR [ecx],esi
  401c54:	dec    ebp
  401c55:	cld    
  401c56:	sub    ecx,DWORD PTR [esi]
  401c58:	out    0xf7,al
  401c5a:	sub    esi,DWORD PTR [eax]
  401c5c:	sub    DWORD PTR [eax+0x4ae9e26c],edx
  401c62:	mov    dl,0xc0
  401c64:	int    0xc6
  401c66:	jnp    0x401cca
  401c68:	mov    ebp,0x2c26d400
  401c6d:	dec    esi
  401c6e:	pushf  
  401c6f:	out    dx,eax
  401c70:	cmp    ebx,eax
  401c72:	adc    bl,BYTE PTR [eax+0x363737d6]
  401c78:	jecxz  0x401ceb
  401c7a:	mov    ?,WORD PTR [ebp+0x56]
  401c7d:	mov    al,ds:0x4e5d1559
  401c82:	xor    BYTE PTR [edx],bl
  401c84:	and    ah,ah
  401c86:	test   al,0x6c
  401c88:	out    0x9d,al
  401c8a:	dec    DWORD PTR [ebx+0x7fa1556b]
  401c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c91:	sbb    edx,DWORD PTR [edx+0x77]
  401c94:	jbe    0x401cad
  401c96:	mov    ds:0x8eabcbd4,al
  401c9b:	mov    edi,0xda3e0707
  401ca0:	lds    ecx,FWORD PTR [eax]
  401ca2:	ins    DWORD PTR es:[edi],dx
  401ca3:	in     al,0x92
  401ca5:	mov    dl,0xfe
  401ca7:	mov    esi,0x96d8bf3e
  401cac:	daa    
  401cad:	scas   al,BYTE PTR es:[edi]
  401cae:	sti    
  401caf:	cdq    
  401cb0:	jae    0x401d0a
  401cb2:	xor    DWORD PTR [esi+0x73cc2ac0],ecx
  401cb8:	hlt    
  401cb9:	out    0x6d,eax
  401cbb:	ja     0x401d07
  401cbd:	jge    0x401ce1
  401cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc0:	bnd jno 0x401c8f
  401cc3:	sbb    ch,bl
  401cc5:	fsubr  st,st(0)
  401cc7:	push   edi
  401cc8:	(bad)  
  401cc9:	icebp  
  401cca:	push   es
  401ccb:	push   0x1b9c211b
  401cd0:	js     0x401ce2
  401cd2:	test   cl,dh
  401cd4:	add    ch,BYTE PTR [eax+0x72cf7d39]
  401cda:	dec    edx
  401cdb:	repz shr BYTE PTR [ebx],1
  401cde:	mov    eax,0x169fc730
  401ce3:	mov    bh,0x10
  401ce5:	push   esi
  401ce6:	pop    es
  401ce7:	xor    BYTE PTR [edx-0x26],bl
  401cea:	mov    esp,0x78b71769
  401cef:	cmc    
  401cf0:	xor    DWORD PTR [esi+esi*8],ecx
  401cf3:	hlt    
  401cf4:	lea    edx,[ebx+ebp*2]
  401cf7:	les    esi,FWORD PTR [ebx+esi*1]
  401cfa:	add    ebx,ebx
  401cfc:	adc    BYTE PTR [ebx],0x6b
  401cff:	push   esi
  401d00:	fisubr DWORD PTR [ebx-0x48e5c0b9]
  401d06:	inc    edx
  401d07:	daa    
  401d08:	daa    
  401d09:	mov    bl,BYTE PTR [ebx-0x21]
  401d0c:	sbb    eax,0xc1faf9da
  401d11:	inc    ecx
  401d12:	add    dh,BYTE PTR [ecx+ebx*1+0x5]
  401d16:	xlat   BYTE PTR ds:[ebx]
  401d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d18:	jmp    0xf73a572c
  401d1d:	add    ebx,edx
  401d1f:	cmp    DWORD PTR ds:0x310d9b2f,esi
  401d25:	pop    ds
  401d26:	arpl   WORD PTR [esp+ebx*1],cx
  401d29:	or     BYTE PTR [ebp-0x5a4be245],al
  401d2f:	adc    DWORD PTR [ecx-0x7a8e24a0],0xffffffa6
  401d36:	les    edx,FWORD PTR [ebp*8-0x28c9d2dd]
  401d3d:	js     0x401d0b
  401d3f:	cmc    
  401d40:	sub    BYTE PTR [edx],dh
  401d42:	clc    
  401d43:	in     al,0x8f
  401d45:	push   edx
  401d46:	or     dl,BYTE PTR [esp+eax*1]
  401d49:	cmp    al,0xf8
  401d4b:	scas   al,BYTE PTR es:[edi]
  401d4c:	pushf  
  401d4d:	loope  0x401d3a
  401d4f:	pop    ds
  401d50:	jle    0x401d27
  401d52:	sbb    eax,0x35f4416b
  401d57:	add    DWORD PTR [eax-0x7ce6b2ae],ecx
  401d5d:	add    esi,ebx
  401d5f:	neg    ecx
  401d61:	mov    al,0xc0
  401d63:	imul   esp,DWORD PTR [edx],0xcd2db463
  401d69:	xchg   BYTE PTR [edx],ch
  401d6b:	and    bl,BYTE PTR [ebx]
  401d6d:	and    DWORD PTR [ebx-0x3b4532d0],0xcacf7a6f
  401d77:	call   0xb6e6:0x5abfdade
  401d7e:	push   edi
  401d7f:	push   ebp
  401d80:	dec    eax
  401d81:	mov    ebx,0x652d58b4
  401d86:	add    DWORD PTR [edx-0x1f5742bc],esp
  401d8c:	adc    DWORD PTR [esi],ecx
  401d8e:	outs   dx,BYTE PTR ds:[esi]
  401d8f:	jae    0x401d1e
  401d91:	mov    bl,0xb7
  401d93:	and    DWORD PTR [ebp-0x49efdf0b],ebx
  401d99:	sub    al,0x57
  401d9b:	jo     0x401dc4
  401d9d:	inc    eax
  401d9e:	add    eax,0x6abd6add
  401da3:	pop    ecx
  401da4:	and    BYTE PTR ss:[esi+0x3],0x1c
  401da9:	xchg   esp,eax
  401daa:	sti    
  401dab:	fld    TBYTE PTR [ebx]
  401dad:	add    eax,0x1940e7f2
  401db2:	stc    
  401db3:	jo     0x401d52
  401db5:	loope  0x401dff
  401db7:	in     al,0xa5
  401db9:	gs ret 
  401dbb:	add    ch,BYTE PTR [ebp-0x4]
  401dbe:	fistp  QWORD PTR [edi-0x2e2549a8]
  401dc4:	and    BYTE PTR [edi-0x37e69679],al
  401dca:	fwait
  401dcb:	mov    al,0x9c
  401dcd:	jb     0x401deb
  401dcf:	into   
  401dd0:	int    0xdf
  401dd2:	pushf  
  401dd3:	mov    ah,0x2a
  401dd5:	xchg   edi,eax
  401dd6:	lods   al,BYTE PTR ds:[esi]
  401dd7:	xchg   al,ch
  401dd9:	mov    eax,ds:0x32a10f2d
  401dde:	and    BYTE PTR [ecx-0x41d0d644],dh
  401de4:	cmp    cl,BYTE PTR [ecx+edx*1-0x3]
  401de8:	mov    ah,0x88
  401dea:	sbb    al,0x6e
  401dec:	xchg   DWORD PTR [esi-0x6dccb0c8],edi
  401df2:	sub    eax,0xee56d84f
  401df7:	sub    DWORD PTR [ebp+0x38],ebp
  401dfa:	jne    0x401e3f
  401dfc:	mov    edi,0xd5dbe408
  401e01:	pop    esi
  401e02:	xchg   edx,eax
  401e03:	fstp   st(0)
  401e05:	repnz sbb BYTE PTR [eax+0x37],0x9f
  401e0a:	or     DWORD PTR [ecx+eiz*4-0x49],ecx
  401e0e:	pop    esi
  401e0f:	dec    ecx
  401e10:	rcr    DWORD PTR [eax],1
  401e12:	jp     0x401deb
  401e14:	push   edi
  401e15:	fimul  WORD PTR ds:0x53f5224
  401e1b:	ret    
  401e1c:	aam    0x7b
  401e1e:	xor    ah,BYTE PTR [esi-0x7af597d]
  401e24:	dec    edi
  401e25:	adc    edx,DWORD PTR [edx]
  401e27:	mov    al,ds:0x68bb8994
  401e2c:	mov    ebx,DWORD PTR [eax+0x7e63b9a9]
  401e32:	jle    0x401e06
  401e34:	int3   
  401e35:	test   eax,0x806fcc0e
  401e3a:	jbe    0x401e97
  401e3c:	nop
  401e3d:	cmp    dl,BYTE PTR [eax]
  401e3f:	and    BYTE PTR [esi-0x35],bl
  401e42:	nop
  401e43:	lock fnsave [edi+0x5b0f6f7e]
  401e4a:	das    
  401e4b:	stos   DWORD PTR es:[edi],eax
  401e4c:	aam    0x1e
  401e4e:	shl    ecx,0x4f
  401e51:	mov    dl,0x2c
  401e53:	jne    0x401e01
  401e55:	jmp    0x401e40
  401e57:	adc    bh,BYTE PTR [ecx-0x785c6094]
  401e5d:	pop    ebx
  401e5e:	(bad)  [ebp-0x1e]
  401e61:	mov    edx,edi
  401e63:	push   0xfffffffc
  401e65:	jmp    0x401edb
  401e67:	jbe    0x401ea5
  401e69:	mov    eax,ds:0x7504c625
  401e6e:	xchg   edi,eax
  401e6f:	jnp    0x401e03
  401e71:	sti    
  401e72:	push   cs
  401e73:	in     al,0xd1
  401e75:	in     eax,dx
  401e76:	inc    edx
  401e77:	pop    ss
  401e78:	fwait
  401e79:	or     BYTE PTR [edi+edx*1],cl
  401e7c:	sbb    cl,bh
  401e7e:	xor    al,0x20
  401e80:	xor    ebx,esp
  401e82:	inc    BYTE PTR [eax]
  401e84:	sub    bh,al
  401e86:	adc    BYTE PTR ds:0x465c8219,0x14
  401e8d:	(bad)  
  401e8e:	out    dx,eax
  401e8f:	inc    ecx
  401e90:	loop   0x401e5f
  401e92:	mov    eax,ds:0xfcb8385
  401e97:	xchg   ecx,eax
  401e98:	and    DWORD PTR [esi+0x67272170],ebp
  401e9e:	mov    esp,0xce90cb59
  401ea3:	mov    BYTE PTR [ecx-0x5d],cl
  401ea6:	or     BYTE PTR [ecx+ebp*1+0x2c],bl
  401eaa:	mov    cl,0x95
  401eac:	mov    edi,ebx
  401eae:	jo     0x401e8c
  401eb0:	fucom  st(4)
  401eb2:	inc    edx
  401eb3:	adc    al,bh
  401eb5:	mov    ch,BYTE PTR [esi-0x39e767e1]
  401ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ebc:	mov    ebx,0xe055b7e7
  401ec1:	or     bl,cl
  401ec3:	adc    DWORD PTR [edi],ecx
  401ec5:	sbb    BYTE PTR [edx-0x61b938fd],bh
  401ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ecc:	scas   al,BYTE PTR es:[edi]
  401ecd:	mov    eax,0x74e7d925
  401ed2:	pop    ds
  401ed3:	inc    edi
  401ed4:	or     eax,0x5c446626
  401ed9:	jno    0x401f53
  401edb:	jno    0x401ec2
  401edd:	rcr    BYTE PTR [edi+0x27],cl
  401ee0:	adc    ecx,edi
  401ee2:	in     al,0xd9
  401ee4:	retf   0xb579
  401ee7:	add    esp,DWORD PTR [edx+0x3a]
  401eea:	cmp    al,BYTE PTR ds:0x6571b974
  401ef0:	and    eax,0x91e18b7a
  401ef5:	jb     0x401f49
  401ef7:	mov    bl,0xde
  401ef9:	pop    edx
  401efa:	ret    
  401efb:	and    al,0xff
  401efd:	add    BYTE PTR [edx],al
  401eff:	and    esp,esi
  401f01:	push   esi
  401f02:	jecxz  0x401f4f
  401f04:	jp     0x401ea0
  401f06:	inc    ecx
  401f07:	push   edx
  401f08:	dec    ebx
  401f09:	push   esi
  401f0a:	dec    esp
  401f0b:	sbb    al,0x4b
  401f0d:	jle    0x401f49
  401f0f:	mov    dh,0x95
  401f11:	scas   eax,DWORD PTR es:[edi]
  401f12:	xor    ebx,DWORD PTR [eax-0x25]
  401f15:	pop    ss
  401f16:	sbb    ah,BYTE PTR [ebp+0x76d34aed]
  401f1c:	sbb    eax,0xde452c34
  401f21:	js     0x401f64
  401f23:	repnz cmp cl,BYTE PTR [edx+0x3b]
  401f27:	and    cl,BYTE PTR [edi-0x2d]
  401f2a:	sbb    eax,edx
  401f2c:	mov    dl,0x14
  401f2e:	fldln2 
  401f30:	cmp    DWORD PTR ds:0xcc2f0b2,ebp
  401f36:	jg     0x401f80
  401f38:	add    al,0x2b
  401f3a:	or     ch,al
  401f3c:	adc    esi,esp
  401f3e:	(bad)  
  401f3f:	mov    BYTE PTR [ecx-0x4f415403],dl
  401f45:	aaa    
  401f46:	cmp    eax,0x7b178f0
  401f4b:	pop    ecx
  401f4c:	cs cmp ebp,edi
  401f4f:	adc    eax,0x9d222a78
  401f54:	les    ebx,FWORD PTR [edx-0x20]
  401f57:	shld   DWORD PTR [eax+0x1b1dbbad],esi,0xb1
  401f5f:	adc    BYTE PTR [edx-0x1b0a8766],ch
  401f65:	ret    
  401f66:	jns    0x401fdf
  401f68:	data16 in al,dx
  401f6a:	add    al,0xed
  401f6c:	push   ecx
  401f6d:	test   DWORD PTR [edi+0x62],ecx
  401f70:	xchg   edi,edx
  401f72:	mov    esi,0xe3e5af8a
  401f77:	mov    eax,0x6f97ad05
  401f7c:	stos   DWORD PTR es:[edi],eax
  401f7d:	std    
  401f7e:	in     eax,dx
  401f7f:	cwde   
  401f80:	outs   dx,DWORD PTR ds:[esi]
  401f81:	pop    ds
  401f82:	pop    es
  401f83:	jle    0x401fc4
  401f85:	push   edx
  401f86:	mov    dh,0x3f
  401f88:	mov    esp,0xed37368e
  401f8d:	pop    es
  401f8e:	sub    al,0x21
  401f90:	pushf  
  401f91:	sbb    bh,BYTE PTR [esi+eax*8]
  401f94:	cli    
  401f95:	sub    al,BYTE PTR [edx+ebx*2-0x70d72e8c]
  401f9c:	cmc    
  401f9d:	mov    dh,0x2b
  401f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa0:	jbe    0x401fe5
  401fa2:	cmp    dl,bh
  401fa4:	push   ebx
  401fa5:	cmp    BYTE PTR [edi+0x5369a21],0x86
  401fac:	xchg   ecx,eax
  401fad:	and    BYTE PTR [ebp-0x52],cl
  401fb0:	cmp    DWORD PTR [ebx-0x26],0x13740f28
  401fb7:	aam    0x53
  401fb9:	sbb    esi,edx
  401fbb:	pop    esp
  401fbc:	mov    ecx,0xf395c867
  401fc1:	cs fmul st(7),st
  401fc4:	mov    ch,0x7d
  401fc6:	mov    edx,0x941b8826
  401fcb:	push   ebp
  401fcc:	add    BYTE PTR [ebp+0x34],0x8f
  401fd0:	and    al,0xb
  401fd2:	and    eax,0xef32aac4
  401fd7:	out    dx,eax
  401fd8:	les    ebp,FWORD PTR [esi-0x5963be33]
  401fde:	jp     0x402003
  401fe0:	pop    edi
  401fe1:	neg    BYTE PTR [edx]
  401fe3:	jno    0x40200a
  401fe5:	add    DWORD PTR [eax-0x9aa368a],edi
  401feb:	hlt    
  401fec:	inc    ebp
  401fed:	loope  0x402048
  401fef:	inc    esp
  401ff0:	pop    ds
  401ff1:	cmp    esp,DWORD PTR [ecx]
  401ff3:	addr16 push ebp
  401ff5:	dec    edx
  401ff6:	(bad)  
  401ff7:	in     al,0x67
  401ff9:	mov    bh,0xb8
  401ffb:	aaa    
  401ffc:	loopne 0x40203c
  401ffe:	aaa    
  401fff:	data16 fimul DWORD PTR [eax+0x2a]
  402003:	and    al,0x63
  402005:	jnp    0x402044
  402007:	mov    dl,0x16
  402009:	nop
  40200a:	lds    ebp,FWORD PTR [ecx-0x2e]
  40200d:	shr    BYTE PTR [ecx+0x179935c],1
  402013:	add    WORD PTR [edx],cx
  402016:	in     al,dx
  402017:	shl    esi,0xc7
  40201a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40201b:	jl     0x40204f
  40201d:	cs retf 0xcb41
  402021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402022:	pop    ecx
  402023:	mov    ah,0x3
  402025:	mul    DWORD PTR [ebp+0x3]
  402028:	xlat   BYTE PTR fs:[ebx]
  40202a:	sahf   
  40202b:	std    
  40202c:	lods   al,BYTE PTR ds:[esi]
  40202d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202e:	es leave 
  402030:	jbe    0x40202f
  402032:	ret    0xfb98
  402035:	ds jae 0x402013
  402038:	add    ebx,DWORD PTR [esi+ecx*1]
  40203b:	mov    esi,DWORD PTR [esp+edi*8-0x49]
  40203f:	pushf  
  402040:	adc    DWORD PTR [eax+0x4a55cab3],edx
  402046:	pop    esi
  402047:	out    0x1c,al
  402049:	out    dx,eax
  40204a:	mov    eax,0x89115105
  40204f:	scas   eax,DWORD PTR es:[edi]
  402050:	pop    ss
  402051:	cmp    al,0xbf
  402053:	fsub   QWORD PTR [edx+0x188ada9b]
  402059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40205a:	in     eax,dx
  40205b:	mov    WORD PTR [ebx-0x2a],gs
  40205e:	dec    edx
  40205f:	pop    edi
  402060:	mov    al,0x52
  402062:	xchg   edx,eax
  402063:	sub    BYTE PTR [ecx+0x38],bh
  402066:	push   ss
  402067:	cmp    BYTE PTR [ecx-0x8661dd],bl
  40206d:	(bad)  
  40206e:	adc    DWORD PTR [ebp+0x1],0xffffff80
  402072:	mov    cl,0x70
  402074:	mov    esp,0x3e0110ae
  402079:	pop    ds
  40207a:	leave  
  40207b:	push   edx
  40207c:	mov    ebx,0x2ae4b414
  402081:	mov    edx,0x943b0809
  402086:	mov    dh,0x48
  402088:	dec    ecx
  402089:	out    0x6e,al
  40208b:	mov    ecx,0x92baa12f
  402090:	xchg   edx,eax
  402091:	or     al,0xc5
  402093:	sub    dl,BYTE PTR [ebp+0x5]
  402096:	adc    edx,DWORD PTR [ebx*4+0x615ded4f]
  40209d:	inc    esi
  40209e:	or     eax,0xc15178d6
  4020a3:	sub    esi,esi
  4020a5:	xchg   BYTE PTR [ebx+ecx*8],bh
  4020a8:	bound  ecx,QWORD PTR [ebp-0x45]
  4020ab:	inc    esp
  4020ac:	enter  0x523e,0x65
  4020b0:	fstp   QWORD PTR [edi+ecx*8]
  4020b3:	stos   DWORD PTR es:[edi],eax
  4020b4:	add    al,0xac
  4020b6:	mov    ecx,0x821d7331
  4020bb:	fs je  0x4020f7
  4020be:	cli    
  4020bf:	pop    ecx
  4020c0:	push   0xe2c541b4
  4020c5:	add    esp,DWORD PTR [ebp+0x53]
  4020c8:	pop    eax
  4020c9:	jmp    DWORD PTR [edx+0x5]
  4020cc:	and    bh,BYTE PTR [edi+0x4a30f90f]
  4020d2:	xchg   ecx,eax
  4020d3:	out    dx,eax
  4020d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d5:	mov    dh,0xa7
  4020d7:	add    BYTE PTR [ebx+0x5e40ef32],dh
  4020dd:	(bad)  
  4020de:	fptan  
  4020e0:	out    0x3a,eax
  4020e2:	or     DWORD PTR [ebx-0x38],0x9
  4020e6:	aas    
  4020e7:	les    eax,FWORD PTR [edi-0x25]
  4020ea:	and    edx,DWORD PTR [eax+0x1f]
  4020ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ee:	dec    esi
  4020ef:	inc    ebx
  4020f0:	ss xchg edx,eax
  4020f2:	int3   
  4020f3:	out    dx,al
  4020f4:	dec    eax
  4020f5:	sbb    DWORD PTR cs:[edi+0x73],eax
  4020f9:	or     DWORD PTR [edi],0x2d
  4020fc:	push   0x9cd36971
  402101:	mov    ecx,0x15ac3535
  402106:	ins    DWORD PTR es:[edi],dx
  402107:	in     al,dx
  402108:	out    0x1,eax
  40210a:	(bad)  
  40210b:	retf   
  40210c:	jg     0x402127
  40210e:	fiadd  WORD PTR [ecx-0x62608b79]
  402114:	test   DWORD PTR [ebp-0x29fc3a3f],0xeedeaad4
  40211e:	mov    eax,0x817f110c
  402123:	shl    BYTE PTR [eax-0x2b4baac7],cl
  402129:	mov    ebx,esp
  40212b:	aaa    
  40212c:	sar    BYTE PTR [ecx-0x25],0xe1
  402130:	jnp    0x402184
  402132:	mov    bl,0xc7
  402134:	(bad)  
  402135:	icebp  
  402136:	scas   eax,DWORD PTR es:[edi]
  402137:	push   es
  402138:	retf   0x5cc0
  40213b:	pop    edi
  40213c:	retf   
  40213d:	push   0x35f4f08e
  402142:	icebp  
  402143:	clc    
  402144:	test   BYTE PTR [esi+ebp*1+0x4],dh
  402148:	or     eax,0x314acf30
  40214d:	rcr    DWORD PTR [eax+edi*2],1
  402150:	sbb    edx,esp
  402152:	shr    ebx,1
  402154:	ficom  DWORD PTR [ebp-0x33]
  402157:	and    DWORD PTR [ecx-0x71ec490e],ecx
  40215d:	std    
  40215e:	fwait
  40215f:	push   ecx
  402160:	push   eax
  402161:	repz rol DWORD PTR [esi-0x1a772a33],1
  402168:	sbb    BYTE PTR [edi-0x10],ah
  40216b:	sbb    dl,BYTE PTR [edi+0x67]
  40216e:	mov    eax,ds:0xd639db74
  402173:	dec    edi
  402174:	das    
  402175:	(bad)  
  402176:	push   0xd1d6cfe2
  40217b:	or     al,0x55
  40217d:	ja     0x4021da
  40217f:	sub    dl,BYTE PTR [ecx-0x13d84875]
  402185:	push   ds
  402186:	test   al,ah
  402188:	in     al,0x86
  40218a:	cmc    
  40218b:	cmp    esi,DWORD PTR [ecx-0x4fe69fe1]
  402191:	loop   0x4021a6
  402193:	in     eax,0xb2
  402195:	jecxz  0x402190
  402197:	ins    DWORD PTR es:[edi],dx
  402198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402199:	repnz stos BYTE PTR es:[edi],al
  40219b:	sbb    al,0xe2
  40219d:	add    DWORD PTR [ebx-0x774ab4bf],ebx
  4021a3:	pop    edx
  4021a4:	in     al,dx
  4021a5:	sub    bl,BYTE PTR [esi]
  4021a7:	stos   DWORD PTR es:[edi],eax
  4021a8:	pop    ds
  4021a9:	xchg   ebp,eax
  4021aa:	mov    dh,0x3a
  4021ac:	mov    al,0x35
  4021ae:	or     BYTE PTR [ebp-0x77593f3b],0x30
  4021b5:	cmp    al,0x7f
  4021b7:	jl     0x40222f
  4021b9:	ins    BYTE PTR es:[edi],dx
  4021ba:	ret    0x5fa2
  4021bd:	add    eax,0xe530d024
  4021c2:	out    0xb2,al
  4021c4:	shl    DWORD PTR [ebp-0x6642050],0xed
  4021cb:	and    eax,0xc03c5266
  4021d0:	add    eax,DWORD PTR [edi-0x52d0a1ca]
  4021d6:	dec    ecx
  4021d7:	stc    
  4021d8:	and    eax,0xd4491c88
  4021dd:	xor    BYTE PTR [ebp-0x61],ch
  4021e0:	dec    eax
  4021e1:	inc    esp
  4021e2:	stos   DWORD PTR es:[edi],eax
  4021e3:	pop    edi
  4021e4:	gs push esi
  4021e6:	cmp    DWORD PTR [ebx+eax*8-0x7e3c8600],0xffffffff
  4021ee:	jno    0x402216
  4021f0:	fld    DWORD PTR es:[ebx-0x6b]
  4021f4:	mov    esi,0x3f1ab2fd
  4021f9:	push   es
  4021fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021fb:	push   es
  4021fc:	popa   
  4021fd:	ss clc 
  4021ff:	push   esp
  402200:	sti    
  402201:	xor    al,0x58
  402203:	je     0x4021ca
  402205:	ret    0x259e
  402208:	popa   
  402209:	mov    cl,0x49
  40220b:	ret    
  40220c:	add    bh,dh
  40220e:	mov    cl,0x1
  402210:	iret   
  402211:	pop    edi
  402212:	pop    ebx
  402213:	mov    edi,ecx
  402215:	pop    edx
  402216:	jne    0x4021c1
  402218:	ss loopne 0x402272
  40221b:	(bad)  
  40221c:	retf   0xe1e
  40221f:	ja     0x4021ca
  402221:	mov    dh,0x51
  402223:	xchg   ecx,eax
  402224:	nop    DWORD PTR [edx]
  402227:	nop
  402228:	popa   
  402229:	push   DWORD PTR [eax+0xc]
  40222c:	fucomp st(7)
  40222e:	add    dh,dh
  402230:	or     al,0x4c
  402232:	mov    bh,0x97
  402234:	clc    
  402235:	sbb    bl,BYTE PTR [esi-0x171b5341]
  40223b:	je     0x40221f
  40223d:	mov    BYTE PTR [eax],0x7f
  402240:	shr    BYTE PTR [ebx-0x18de4343],cl
  402246:	mov    ds:0xfc8e54eb,eax
  40224b:	dec    ebx
  40224c:	xchg   ebx,eax
  40224d:	out    0x62,eax
  40224f:	mov    edx,0x1ccc8d80
  402254:	jl     0x4021ea
  402256:	and    esi,DWORD PTR [ebp-0x97ed520]
  40225c:	out    0xf9,eax
  40225e:	jnp    0x402223
  402260:	gs jb  0x402212
  402263:	loope  0x40222f
  402265:	pop    esp
  402266:	cmp    ebp,DWORD PTR [edi+0x7c3b907c]
  40226c:	add    bl,ch
  40226e:	mov    cl,0xaa
  402270:	mov    bl,0xa5
  402272:	mov    ebp,0x3ccf94b7
  402277:	pusha  
  402278:	rol    BYTE PTR [ecx+0x4d],0x8a
  40227c:	mul    BYTE PTR [ecx-0x43]
  40227f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402280:	cmp    DWORD PTR [ecx+0x24c5ffa8],eax
  402286:	jb     0x402294
  402288:	add    al,0x3e
  40228a:	fmul   DWORD PTR [eax+ebx*4-0x28]
  40228e:	push   edx
  40228f:	and    DWORD PTR [edi+0x5cdc4cd8],esp
  402295:	js     0x4022d0
  402297:	les    ebx,FWORD PTR [esi]
  402299:	xchg   esi,eax
  40229a:	cli    
  40229b:	enter  0xecb5,0xbf
  40229f:	adc    ecx,edi
  4022a1:	pushf  
  4022a2:	mov    ebp,DWORD PTR [esi+0x27]
  4022a5:	and    al,0x54
  4022a7:	sub    DWORD PTR [esi],ebp
  4022a9:	mov    bl,0x45
  4022ab:	jns    0x402294
  4022ad:	scas   eax,DWORD PTR es:[edi]
  4022ae:	xor    ch,cl
  4022b0:	add    DWORD PTR [edi+ebp*4-0x2fa81a02],edi
  4022b7:	push   esi
  4022b8:	sahf   
  4022b9:	repz fcom DWORD PTR [edi]
  4022bc:	push   esi
  4022bd:	(bad)  
  4022be:	cmp    dl,dl
  4022c0:	mov    ds:0x292b3e24,al
  4022c5:	cwde   
  4022c6:	mov    eax,0xf9960f31
  4022cb:	cmc    
  4022cc:	addr16 pushf 
  4022ce:	lea    edx,[eax+edi*2-0x73]
  4022d2:	and    edi,DWORD PTR [ebx-0x5e17c2ea]
  4022d8:	dec    ebx
  4022d9:	sub    al,0x49
  4022db:	ja     0x4022c9
  4022dd:	push   0x685cbc16
  4022e2:	int3   
  4022e3:	xor    BYTE PTR [ebp-0x29206c3c],ch
  4022e9:	lods   al,BYTE PTR ds:[esi]
  4022ea:	fist   WORD PTR [esi]
  4022ec:	push   edx
  4022ed:	loopne 0x4022a5
  4022ef:	jmp    0x2a4a455a
  4022f4:	jmp    0x7fc5:0xf7d928af
  4022fb:	jge    0x4022b1
  4022fd:	mov    cs,WORD PTR [ecx]
  4022ff:	fst    QWORD PTR [eax+0x58b91327]
  402305:	test   al,0x13
  402307:	int    0x9b
  402309:	ins    DWORD PTR es:[edi],dx
  40230a:	pop    edx
  40230b:	cmp    eax,0x9dc84cb
  402310:	sub    BYTE PTR [ebx+0x27],0xe7
  402314:	cmc    
  402315:	ret    0x1596
  402318:	xchg   BYTE PTR [edx],dh
  40231a:	inc    edi
  40231b:	adc    al,0xb2
  40231d:	push   esp
  40231e:	outs   dx,BYTE PTR ds:[esi]
  40231f:	dec    ecx
  402320:	stos   DWORD PTR es:[edi],eax
  402321:	mov    esi,0x5c6fb2d4
  402326:	jmp    0x49b005eb
  40232b:	into   
  40232c:	mov    bl,0x7b
  40232e:	dec    ebp
  40232f:	out    dx,al
  402330:	lea    ecx,[esi+0x70]
  402333:	and    BYTE PTR ds:0xdb10f084,ah
  402339:	jbe    0x402382
  40233b:	sbb    DWORD PTR [ebx+0xadb7482],edx
  402341:	(bad)  
  402342:	and    DWORD PTR [edx*4-0x77b1fc67],esi
  402349:	and    BYTE PTR [ebx],0xc3
  40234c:	sub    al,BYTE PTR [edi]
  40234e:	mov    edx,ecx
  402350:	cld    
  402351:	mov    ebp,0xa3ffb142
  402356:	mov    ecx,0x1cb5e913
  40235b:	out    0xee,al
  40235d:	ss push 0x64
  402360:	not    BYTE PTR [ebx-0x289ffe90]
  402366:	sar    DWORD PTR [ebp+ebx*8-0x138e90c6],0x20
  40236e:	mov    ds,WORD PTR [esi-0x51]
  402371:	out    0xf,al
  402373:	adc    ebp,edx
  402375:	add    bl,BYTE PTR [esi-0x22]
  402378:	enter  0xfc06,0x51
  40237c:	sbb    al,0x63
  40237e:	es jns 0x402342
  402381:	ds xchg ecx,eax
  402383:	inc    esp
  402384:	jnp    0x40236c
  402386:	xor    eax,0x4119fb48
  40238b:	mov    ds:0x6baea630,eax
  402390:	ds push edx
  402392:	jge    0x40237b
  402394:	inc    ebp
  402395:	out    0xa2,eax
  402397:	jecxz  0x4023ce
  402399:	push   ecx
  40239a:	and    al,0x96
  40239c:	js     0x40236c
  40239e:	cmp    DWORD PTR [ecx+0x3a],esi
  4023a1:	outs   dx,DWORD PTR ds:[esi]
  4023a2:	scas   eax,DWORD PTR es:[edi]
  4023a3:	mov    ah,0xe2
  4023a5:	repnz outs dx,BYTE PTR ds:[esi]
  4023a7:	loope  0x402361
  4023a9:	pop    esi
  4023aa:	dec    ebp
  4023ab:	jns    0x4023a9
  4023ad:	xor    eax,0xdf14b75b
  4023b2:	pop    ebp
  4023b3:	outs   dx,DWORD PTR ds:[esi]
  4023b4:	jbe    0x4023fb
  4023b6:	adc    al,0x93
  4023b8:	addr16 mov al,0x14
  4023bb:	(bad)
  4023c1:	xchg   esi,eax
  4023c2:	xchg   eax,esp
  4023c4:	push   edi
  4023c5:	lahf   
  4023c6:	das    
  4023c7:	popa   
  4023c8:	mov    eax,ds:0xa2b8b2b3
  4023cd:	test   al,0xe0
  4023cf:	cmp    eax,0x1f7f806f
  4023d4:	mov    ecx,0xce249810
  4023d9:	cli    
  4023da:	lahf   
  4023db:	xchg   edx,eax
  4023dc:	xor    ebp,esp
  4023de:	mov    al,ds:0xfddfcd40
  4023e3:	shl    BYTE PTR [esp+edi*4+0x75],0x69
  4023e8:	mov    ah,0x13
  4023ea:	repnz mov ebp,0x8a96af61
  4023f0:	mov    esi,0xa44cd53b
  4023f5:	adc    BYTE PTR [eax+0x6553e1ab],ah
  4023fb:	aam    0xcf
  4023fd:	jne    0x4023ec
  4023ff:	ins    DWORD PTR es:[edi],dx
  402400:	pushf  
  402401:	dec    ebp
  402402:	mov    bh,0xcf
  402404:	repnz sub BYTE PTR [esi],al
  402407:	adc    ebp,0x65a3268e
  40240d:	js     0x402476
  40240f:	pop    esi
  402410:	or     esi,edx
  402412:	std    
  402413:	cmovle esp,DWORD PTR ds:[ebx-0x22]
  402418:	lds    eax,FWORD PTR [edx]
  40241a:	xchg   ecx,eax
  40241b:	sub    ch,BYTE PTR [edx-0x20]
  40241e:	je     0x402412
  402420:	mov    cl,0x3d
  402422:	xor    DWORD PTR [edi],ecx
  402424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402425:	xchg   ecx,eax
  402426:	or     eax,0xed3bdeb0
  40242b:	sbb    BYTE PTR ds:0x507bfe4f,bh
  402431:	push   0xab8684a1
  402436:	dec    ecx
  402437:	call   0xfbff:0xae903ebb
  40243e:	cli    
  40243f:	cmp    edx,DWORD PTR [esi-0x786e7924]
  402445:	std    
  402446:	in     eax,dx
  402447:	loop   0x4024c4
  402449:	jl     0x40246f
  40244b:	jb     0x4023ce
  40244d:	into   
  40244e:	mov    bh,0x67
  402450:	dec    edx
  402451:	jbe    0x402460
  402453:	push   eax
  402454:	mov    eax,ds:0xdfadf13e
  402459:	mov    esi,0x9dcde2b6
  40245e:	jl     0x402451
  402460:	pop    ds
  402461:	stos   BYTE PTR es:[edi],al
  402462:	push   0xffffffc4
  402464:	(bad)
  402467:	pop    esi
  402468:	add    esi,DWORD PTR [esi-0x7980c21e]
  40246e:	push   0xffffff8c
  402470:	xor    al,0x4a
  402472:	and    eax,0x4622ac45
  402477:	sub    cl,BYTE PTR [edx]
  402479:	lock ss inc edx
  40247c:	mov    eax,ds:0xeace3e6e
  402481:	adc    BYTE PTR ds:0x9da4bb3,ah
  402487:	js     0x40242d
  402489:	push   ecx
  40248a:	call   0x456f:0x3d08a56
  402491:	(bad)  
  402492:	hlt    
  402493:	cmp    dh,BYTE PTR [ebp-0xf]
  402496:	imul   ah
  402498:	out    0xd8,al
  40249a:	jno    0x4024e1
  40249c:	push   es
  40249d:	das    
  40249e:	cdq    
  40249f:	inc    ebp
  4024a0:	(bad)  
  4024a2:	repz aas 
  4024a4:	pop    edx
  4024a5:	xor    dl,BYTE PTR [ebx-0x71]
  4024a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a9:	sbb    BYTE PTR [esi+eiz*4-0x7e884413],bl
  4024b0:	add    edi,DWORD PTR [ebx+eax*2+0x4]
  4024b4:	xchg   edx,eax
  4024b5:	ret    0xeedd
  4024b8:	retf   
  4024b9:	retf   0xd1d3
  4024bc:	jae    0x4024fd
  4024be:	or     edi,ebp
  4024c0:	aas    
  4024c1:	retf   0x1c89
  4024c4:	and    BYTE PTR [esi-0x2dea1e6c],0xf3
  4024cb:	mov    bh,0xd
  4024cd:	inc    esi
  4024ce:	pop    ss
  4024cf:	or     DWORD PTR [ecx+0x68],edx
  4024d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d3:	ret    
  4024d4:	fidiv  WORD PTR [edx-0x206a1bbb]
  4024da:	adc    DWORD PTR [esi],0xeeed8691
  4024e0:	std    
  4024e1:	inc    eax
  4024e2:	dec    esi
  4024e3:	mov    ds:0xfb6dcad4,eax
  4024e8:	hlt    
  4024e9:	mov    BYTE PTR [ecx+0x5f],dh
  4024ec:	test   al,0x8b
  4024ee:	dec    esp
  4024ef:	jge    0x40250c
  4024f1:	dec    ecx
  4024f2:	push   ax
  4024f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024f5:	xor    eax,0x541fa7b6
  4024fa:	jb     0x402481
  4024fc:	nop    DWORD PTR [ebx]
  4024ff:	out    0x87,eax
  402501:	add    eax,eax
  402503:	mov    bh,0xe9
  402505:	dec    esp
  402506:	push   0xffffffca
  402508:	pop    ecx
  402509:	cmp    ebp,DWORD PTR [ecx-0x40]
  40250c:	inc    ecx
  40250d:	jmp    0x402556
  40250f:	push   cs
  402510:	cmp    BYTE PTR [ebx],ah
  402512:	rcr    DWORD PTR [edx-0x3e],0xd
  402516:	mov    bl,0x28
  402518:	fxch   st(3)
  40251a:	dec    esi
  40251b:	mov    ebx,fs
  40251d:	or     cl,BYTE PTR [edi+0x2b969b4c]
  402523:	adc    DWORD PTR [edx-0x7c8692f0],ecx
  402529:	push   ebp
  40252a:	out    0x20,eax
  40252c:	or     eax,0xbdfade33
  402531:	pop    esp
  402532:	mov    bl,0xe6
  402534:	loop   0x40251f
  402536:	add    eax,DWORD PTR [edx]
  402538:	xlat   BYTE PTR ds:[ebx]
  402539:	or     bh,BYTE PTR [esi+0x1cc9b5cc]
  40253f:	sbb    al,0x86
  402541:	push   es
  402542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402543:	icebp  
  402544:	cmp    DWORD PTR [edx+0x4e],eax
  402547:	out    dx,al
  402548:	not    bh
  40254a:	adc    bh,dh
  40254c:	push   ss
  40254d:	dec    esp
  40254e:	push   cs
  40254f:	jae    0x402562
  402551:	inc    esp
  402552:	ins    BYTE PTR es:[edi],dx
  402553:	out    dx,al
  402554:	dec    ebp
  402555:	aam    0x7f
  402557:	ret    
  402558:	aas    
  402559:	inc    ecx
  40255a:	mov    ch,0x5c
  40255c:	sub    ecx,DWORD PTR [esi]
  40255e:	js     0x4025c0
  402560:	mov    al,0x9e
  402562:	cld    
  402563:	sub    esi,DWORD PTR [esi+0x3c]
  402566:	test   eax,0x29f52439
  40256b:	dec    esi
  40256c:	jle    0x402598
  40256e:	pop    es
  40256f:	in     al,dx
  402570:	add    DWORD PTR [edi-0x971078],ebp
  402576:	std    
  402577:	pop    es
  402578:	jl     0x4024fa
  40257a:	add    al,0x14
  40257c:	scas   eax,DWORD PTR es:[edi]
  40257d:	scas   al,BYTE PTR es:[edi]
  40257e:	dec    ebp
  40257f:	les    ecx,FWORD PTR [edi-0x64]
  402582:	or     bl,0xa2
  402585:	mov    cl,0x38
  402587:	aam    0x55
  402589:	aas    
  40258a:	xor    ah,dh
  40258c:	and    edx,ecx
  40258e:	push   esi
  40258f:	push   es
  402590:	retf   
  402591:	mov    edx,0x952b4873
  402596:	cmp    cl,bl
  402598:	imul   esi,DWORD PTR [edi-0x13],0x6a987592
  40259f:	hlt    
  4025a0:	mov    ebp,0x6ab49bed
  4025a5:	scas   al,BYTE PTR es:[edi]
  4025a6:	jmp    0x358cbeed
  4025ab:	inc    edi
  4025ac:	loopne 0x40253c
  4025ae:	cmp    ebp,DWORD PTR [ebx]
  4025b0:	jno    0x402560
  4025b2:	xor    BYTE PTR [edi],ah
  4025b4:	inc    DWORD PTR [ecx+0x58c3c93b]
  4025ba:	fst    QWORD PTR [esi+0x3d]
  4025bd:	and    eax,0x77ccf2cf
  4025c2:	sbb    BYTE PTR [edi-0x17cbdcb3],dl
  4025c8:	jg     0x4025f4
  4025ca:	pop    eax
  4025cb:	lods   al,BYTE PTR ds:[esi]
  4025cc:	nop    DWORD PTR [esi+ecx*8+0x6b]
  4025d1:	jp     0x40262a
  4025d3:	sub    esi,DWORD PTR [ebx]
  4025d5:	out    0xa5,eax
  4025d7:	jg     0x402589
  4025d9:	mov    al,0x6b
  4025db:	cmc    
  4025dc:	jb     0x402616
  4025de:	pushf  
  4025df:	xor    DWORD PTR [esi-0x57],0x87a99bc0
  4025e6:	cs popa 
  4025e8:	dec    edx
  4025e9:	std    
  4025ea:	in     al,0x83
  4025ec:	ins    DWORD PTR es:[edi],dx
  4025ed:	(bad)  
  4025ee:	cdq    
  4025ef:	imul   ebp,DWORD PTR [ecx+0x60c55bd6],0xc
  4025f6:	mov    cs,WORD PTR [eax+0x3f98d6fe]
  4025fc:	in     eax,dx
  4025fd:	fs push esi
  4025ff:	adc    DWORD PTR [eax],0xfffffffd
  402602:	dec    eax
  402603:	inc    edi
  402604:	xor    cl,bl
  402606:	pop    ebx
  402607:	push   es
  402608:	pop    eax
  402609:	adc    al,0x79
  40260b:	push   ecx
  40260c:	cs dec ebp
  40260e:	mov    WORD PTR [edx-0x44770a7b],ds
  402614:	xchg   edi,eax
  402615:	lea    ebp,[edi+0x3370d1ab]
  40261b:	mov    eax,0x420803e5
  402620:	stos   BYTE PTR es:[edi],al
  402621:	test   al,0x15
  402623:	lods   al,BYTE PTR ds:[esi]
  402624:	or     edx,DWORD PTR [esi+edx*8-0x3025d2a5]
  40262b:	(bad)  
  40262c:	loope  0x402617
  40262e:	inc    ecx
  40262f:	pop    esp
  402630:	push   ecx
  402631:	push   ds
  402632:	sbb    esi,DWORD PTR [edx+ebx*4+0x5bd24eba]
  402639:	or     eax,0xee7aca16
  40263e:	push   0xaa797e73
  402643:	lea    ecx,cs:[ecx+0x19]
  402647:	jl     0x402694
  402649:	dec    ecx
  40264a:	or     DWORD PTR [ebp+0x6215b997],edi
  402650:	aaa    
  402651:	outs   dx,DWORD PTR ds:[esi]
  402652:	or     DWORD PTR [edi],edi
  402654:	fs mov dh,0x98
  402657:	loop   0x402626
  402659:	xor    al,0x62
  40265b:	add    esp,DWORD PTR [edx-0x28a0b786]
  402661:	mov    ch,0xa8
  402663:	stos   DWORD PTR es:[edi],eax
  402664:	in     al,dx
  402665:	test   DWORD PTR [ebx+0x6b168b81],edx
  40266b:	mov    ah,0x7a
  40266d:	aas    
  40266e:	clc    
  40266f:	add    al,0x95
  402671:	pop    ecx
  402672:	sub    al,cl
  402674:	cdq    
  402675:	push   ds
  402676:	call   0x421b:0xecdfc651
  40267d:	adc    BYTE PTR ds:0x8db9ecad,ch
  402683:	jo     0x4026c0
  402685:	pop    edi
  402686:	mov    eax,ds:0x940912fd
  40268b:	outs   dx,BYTE PTR ds:[esi]
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268e:	repnz push edx
  402690:	repz (bad) 
  402692:	call   0xe5fb0abb
  402697:	mov    ch,0x9e
  402699:	sar    BYTE PTR [edi+0x30],cl
  40269c:	add    eax,0xdfee5f6
  4026a1:	(bad)  
  4026a2:	mov    ebp,0x8d2b769a
  4026a7:	jns    0x402632
  4026a9:	test   eax,0xd357f681
  4026ae:	xchg   ebx,ebp
  4026b0:	sbb    BYTE PTR [edi+0x7b],0xed
  4026b4:	cmp    esi,ebx
  4026b6:	push   0xb5727806
  4026bb:	jecxz  0x4026c8
  4026bd:	or     al,0x6f
  4026bf:	mov    ?,esi
  4026c1:	lds    ebx,FWORD PTR [edi-0x3e6dae38]
  4026c7:	int3   
  4026c8:	push   ebx
  4026c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ca:	jmp    0xdbd794ab
  4026cf:	pop    edx
  4026d0:	jbe    0x4026ad
  4026d2:	and    eax,0xbe3e9c36
  4026d7:	pop    eax
  4026d8:	ins    BYTE PTR es:[edi],dx
  4026d9:	(bad)  
  4026da:	mov    esi,0x5cba6c9d
  4026df:	cmp    ah,ah
  4026e1:	push   ss
  4026e2:	mov    edi,DWORD PTR [ecx-0xc]
  4026e5:	jnp    0x402766
  4026e7:	mov    edx,0xa5e6854b
  4026ec:	aam    0x24
  4026ee:	mov    esp,0x79d8c02
  4026f3:	add    al,0x8a
  4026f5:	mov    ebx,0x1a1c4b11
  4026fa:	sbb    al,0x9b
  4026fc:	loope  0x402755
  4026fe:	dec    edi
  4026ff:	addr16 out 0x65,eax
  402702:	or     BYTE PTR [ebx],dl
  402704:	ins    BYTE PTR es:[edi],dx
  402705:	data16 scas al,BYTE PTR es:[edi]
  402707:	repnz cmp BYTE PTR [esi+0x22],bh
  40270b:	pop    ebx
  40270c:	sub    ebp,eax
  40270e:	stos   BYTE PTR es:[edi],al
  40270f:	add    DWORD PTR [edx-0x25],ecx
  402712:	ds dec esp
  402714:	cmp    al,0xad
  402716:	out    0xb,eax
  402718:	(bad)  
  402719:	push   esp
  40271a:	sti    
  40271b:	je     0x40275f
  40271d:	inc    edi
  40271e:	stos   BYTE PTR es:[edi],al
  40271f:	repz mov ch,0xfd
  402722:	sbb    ah,0xab
  402725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402726:	mov    eax,ds:0xf008ce05
  40272b:	mov    dh,0xee
  40272d:	pop    edx
  40272e:	mov    edi,0xda9af9a2
  402733:	scas   al,BYTE PTR es:[edi]
  402734:	retf   0x7d1b
  402737:	(bad)  
  402738:	pop    edi
  402739:	push   cs
  40273a:	push   ecx
  40273b:	aam    0xbc
  40273d:	and    al,dl
  40273f:	rcl    DWORD PTR [eax+0x7210cff4],cl
  402745:	hlt    
  402746:	add    eax,0x1c1c0166
  40274b:	pop    ecx
  40274c:	push   ebp
  40274d:	fisubr DWORD PTR [esi+0x7c906201]
  402753:	es cld 
  402755:	add    al,0x74
  402757:	push   ebp
  402758:	clc    
  402759:	mov    ecx,DWORD PTR [esi+0x40]
  40275c:	xor    DWORD PTR [ebp+0x5aa0439c],ebp
  402762:	xchg   ebx,eax
  402763:	jl     0x4027b8
  402765:	or     ch,bl
  402767:	stos   BYTE PTR es:[edi],al
  402768:	cwde   
  402769:	xchg   BYTE PTR [esi-0x7a],ah
  40276c:	pop    edi
  40276d:	inc    edi
  40276e:	pushf  
  40276f:	test   BYTE PTR [esi+0x5b],ah
  402772:	or     bh,BYTE PTR [edx+edx*1-0x5178c227]
  402779:	mov    WORD PTR [ebx],es
  40277b:	add    ebx,DWORD PTR [esi+0x5d282627]
  402781:	adc    ch,BYTE PTR [edx+0x330a9ee1]
  402787:	call   0x135a7c48
  40278c:	fild   DWORD PTR [edx+0x5b]
  40278f:	sbb    eax,0xe3456e88
  402794:	daa    
  402795:	lods   al,BYTE PTR ds:[esi]
  402796:	call   0x8a23:0xafb7bee
  40279d:	add    ch,ah
  40279f:	push   ds
  4027a0:	loop   0x402769
  4027a2:	jno    0x4027c2
  4027a4:	adc    cl,BYTE PTR [ebp-0x5d]
  4027a7:	ret    
  4027a8:	sbb    dh,BYTE PTR [edx+edi*8]
  4027ab:	in     eax,dx
  4027ac:	outs   dx,DWORD PTR ds:[esi]
  4027ad:	sbb    DWORD PTR [eax-0x7725e843],ecx
  4027b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b4:	call   0xcdee2b0
  4027b9:	aas    
  4027ba:	inc    ebp
  4027bb:	mov    eax,0xeece1ba5
  4027c0:	pop    es
  4027c1:	in     eax,0x31
  4027c3:	leave  
  4027c4:	stos   BYTE PTR es:[edi],al
  4027c5:	cs stos BYTE PTR es:[edi],al
  4027c7:	lock xchg esi,eax
  4027c9:	inc    esp
  4027ca:	cmc    
  4027cb:	dec    ebp
  4027cc:	adc    eax,ecx
  4027ce:	js     0x402825
  4027d0:	lea    ecx,[esi+0x71]
  4027d3:	imul   esp,DWORD PTR [ecx+0x19a7cdd5],0x58e214d8
  4027dd:	push   esp
  4027de:	adc    BYTE PTR [esi+0x78],ah
  4027e1:	xor    dl,BYTE PTR [ebx-0x5b]
  4027e4:	jmp    0x4027d0
  4027e6:	xor    eax,0xd37cb9de
  4027eb:	jne    0x402818
  4027ed:	xacquire xchg DWORD PTR [esi],esp
  4027f0:	xchg   ecx,eax
  4027f1:	rol    ah,0x6c
  4027f4:	fs pop edi
  4027f6:	adc    dl,BYTE PTR [eax]
  4027f8:	and    eax,0x4fe90a90
  4027fd:	popa   
  4027fe:	test   DWORD PTR [esi-0x51704af6],ecx
  402804:	inc    eax
  402805:	loope  0x4027b7
  402807:	add    al,0x83
  402809:	nop
  40280a:	fnstsw WORD PTR [ecx-0x68aa9ba]
  402810:	push   eax
  402811:	mov    edx,0x779b2f1a
  402816:	xlat   BYTE PTR ds:[ebx]
  402817:	mov    dh,0xfe
  402819:	mov    esi,0x4eef076a
  40281e:	dec    ebp
  40281f:	ret    
  402820:	mov    ah,0x14
  402822:	xor    edx,0x33bf2e0
  402828:	push   ebp
  402829:	stc    
  40282a:	fadd   DWORD PTR [eax-0x3a]
  40282d:	pushf  
  40282e:	mov    esi,0x22027d5
  402833:	add    DWORD PTR [ebx],esi
  402835:	shl    BYTE PTR [edi-0x3],1
  402838:	push   edx
  402839:	or     eax,DWORD PTR [esi+0x1ae1ac19]
  40283f:	mov    WORD PTR [ecx-0x30],cs
  402842:	das    
  402843:	out    dx,eax
  402844:	sbb    DWORD PTR [ecx+0x27],esp
  402847:	mov    ebp,0x468974c8
  40284c:	and    dh,dl
  40284e:	mov    edx,0x838880f6
  402853:	adc    BYTE PTR [edx-0x16f12b16],0x85
  40285a:	and    DWORD PTR [ecx],ebx
  40285c:	retf   
  40285d:	stos   DWORD PTR es:[edi],eax
  40285e:	mov    ds:0x5962b91d,eax
  402863:	add    eax,0xad431df7
  402868:	xchg   esp,eax
  402869:	mov    ebx,0xfc7e8389
  40286e:	in     eax,0xef
  402870:	rcl    BYTE PTR [esi+0x1435d242],cl
  402876:	sbb    BYTE PTR [ecx+ecx*2],dh
  402879:	xchg   edx,eax
  40287a:	push   ebx
  40287b:	jbe    0x402871
  40287d:	or     eax,0xca887828
  402882:	sbb    BYTE PTR [esi+0x32e605a9],cl
  402888:	fist   DWORD PTR [ebx+edx*2-0x45]
  40288c:	call   0xe8e:0x5e1f32bd
  402893:	data16 adc bl,BYTE PTR [edi-0x21269f60]
  40289a:	fidivr WORD PTR [edi+0x1]
  40289d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40289e:	sar    DWORD PTR [ebp-0x45],0xae
  4028a2:	stos   BYTE PTR es:[edi],al
  4028a3:	gs test al,0xd5
  4028a6:	int    0x27
  4028a8:	retf   0x5cb9
  4028ab:	jl     0x402859
  4028ad:	mov    eax,0x7f0422a4
  4028b2:	inc    edi
  4028b3:	dec    eax
  4028b4:	pusha  
  4028b5:	retf   0xcd60
  4028b8:	lods   eax,DWORD PTR ds:[esi]
  4028b9:	scas   al,BYTE PTR es:[edi]
  4028ba:	js     0x402880
  4028bc:	push   0xdbc83777
  4028c1:	mov    edx,0x7a284140
  4028c6:	test   al,0xf7
  4028c8:	sub    BYTE PTR [ebp+0x61054833],bh
  4028ce:	jle    0x4028be
  4028d0:	push   edi
  4028d1:	ror    DWORD PTR ds:0x202bf568,1
  4028d7:	add    eax,0x432634ee
  4028dc:	mov    ecx,0x476f73f5
  4028e1:	mov    al,ds:0xa1e014d2
  4028e6:	xor    eax,0xc3424e33
  4028eb:	faddp  st(0),st
  4028ed:	inc    ecx
  4028ee:	push   eax
  4028ef:	dec    edi
  4028f0:	cmp    ebx,DWORD PTR [ebp-0x793c7c14]
  4028f6:	mov    eax,ds:0x839c1abb
  4028fb:	jge    0x4028c5
  4028fd:	xor    DWORD PTR [ebx-0x16],eax
  402900:	pop    ss
  402901:	cmp    eax,0x3f5b223d
  402906:	sti    
  402907:	xchg   DWORD PTR [ecx-0xc3ab04c],edi
  40290d:	test   bl,dl
  40290f:	retf   0xa4ed
  402912:	hlt    
  402913:	mov    eax,DWORD PTR [eax+ebp*1+0x664bf826]
  40291a:	dec    esp
  40291b:	jae    0x402957
  40291d:	dec    esp
  40291e:	push   edx
  40291f:	jge    0x402977
  402921:	in     eax,0x39
  402923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402924:	ja     0x4028fb
  402926:	(bad)  
  402927:	push   ds
  402928:	and    bh,BYTE PTR [ecx-0x27]
  40292b:	xchg   edx,eax
  40292c:	xor    al,0xc1
  40292e:	xchg   esp,eax
  40292f:	and    DWORD PTR [edx+0x8d97798],ebp
  402935:	cmp    al,0x19
  402937:	es (bad) 
  402939:	xor    DWORD PTR [ebp-0x40143bf1],ebx
  40293f:	mov    edi,0xc54fbe2
  402944:	xor    eax,DWORD PTR [edx+edi*2]
  402947:	jecxz  0x402984
  402949:	mov    ch,0xb0
  40294b:	das    
  40294c:	enter  0xfb11,0xed
  402950:	push   edi
  402951:	cwde   
  402952:	(bad)  
  402953:	loope  0x402910
  402955:	mov    edi,0x82960722
  40295a:	jns    0x40294e
  40295c:	sbb    al,dl
  40295e:	js     0x402932
  402960:	push   esp
  402961:	jmp    0x402966
  402963:	jecxz  0x4029e2
  402965:	mov    bl,0x6d
  402967:	pop    ss
  402968:	cdq    
  402969:	loop   0x4028ef
  40296b:	adc    esp,edx
  40296d:	pop    ebp
  40296e:	test   eax,0xf7613437
  402973:	and    al,0x2c
  402975:	jl     0x402924
  402977:	mov    esi,0x35213e90
  40297c:	cmp    bh,al
  40297e:	add    al,0x46
  402980:	xchg   ecx,eax
  402981:	and    bh,ch
  402983:	push   edx
  402984:	fdivr  DWORD PTR [ecx]
  402986:	pop    eax
  402987:	ja     0x402968
  402989:	xchg   DWORD PTR [edi+0x6a69dd90],ecx
  40298f:	pop    ds
  402990:	xor    bh,bl
  402992:	adc    eax,0xb55d6874
  402997:	mov    DWORD PTR [ebx],edi
  402999:	scas   al,BYTE PTR es:[edi]
  40299a:	mov    ecx,0xb67a630e
  40299f:	mov    bh,0xdc
  4029a1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4029a3:	loopne 0x4029bc
  4029a5:	xchg   ecx,ebp
  4029a7:	or     BYTE PTR [edx],al
  4029a9:	mov    eax,ds:0xf3d11c99
  4029ae:	adc    esi,eax
  4029b0:	cmp    edi,esi
  4029b2:	dec    edi
  4029b3:	and    DWORD PTR [edi+0xdbe0d73],edi
  4029b9:	pop    esi
  4029ba:	push   0x2b6f391b
  4029bf:	dec    ebp
  4029c0:	scas   eax,DWORD PTR es:[edi]
  4029c1:	aad    0xf6
  4029c3:	xchg   ebp,eax
  4029c4:	fisubr WORD PTR [esi]
  4029c6:	and    ebp,DWORD PTR [ebx-0x58fdce9d]
  4029cc:	fld    TBYTE PTR [eax-0x60ad793b]
  4029d3:	(bad)  
  4029d4:	arpl   WORD PTR [eax],di
  4029d6:	add    dh,BYTE PTR [esi+0x32]
  4029d9:	mov    fs,WORD PTR [esp+edx*4-0x7f]
  4029dd:	test   DWORD PTR [edx-0x44132343],0x303a0090
  4029e7:	fs sub ah,ch
  4029ea:	pop    es
  4029eb:	mov    dl,0x40
  4029ed:	mov    ch,0x54
  4029ef:	pop    ds
  4029f0:	jne    0x402a18
  4029f2:	xchg   esp,eax
  4029f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f4:	pop    ss
  4029f5:	pop    eax
  4029f6:	addr16 mov edx,0x13520278
  4029fc:	std    
  4029fd:	mov    ebp,0x881b6d1e
  402a02:	rol    ah,1
  402a04:	rcl    DWORD PTR [ecx+0x2f466379],0xf1
  402a0b:	dec    ebp
  402a0c:	idiv   BYTE PTR [edx]
  402a0e:	push   cs
  402a0f:	dec    eax
  402a10:	mov    DWORD PTR [eax],ebp
  402a12:	frstor [ebx-0x18]
  402a15:	cmp    esi,DWORD PTR [eax-0x4f]
  402a18:	jmp    0xf125c4c2
  402a1d:	mov    eax,ds:0x3eea4da5
  402a22:	jge    0x4029c3
  402a24:	dec    DWORD PTR [ebp+0x7573ded9]
  402a2a:	xor    eax,0xe62788ce
  402a2f:	xchg   ebx,eax
  402a30:	ss test al,0x16
  402a33:	jg     0x402a3d
  402a35:	sub    al,0x86
  402a37:	retf   0xc7e0
  402a3a:	ja     0x402a17
  402a3c:	jne    0x4029d5
  402a3e:	ds loopne 0x402a7d
  402a41:	dec    esp
  402a42:	push   edi
  402a43:	dec    ecx
  402a44:	fcom   st(7)
  402a46:	xchg   esp,eax
  402a47:	jecxz  0x4029e1
  402a49:	dec    ecx
  402a4a:	dec    esp
  402a4b:	jo     0x402aac
  402a4d:	jnp    0x402a46
  402a4f:	push   esi
  402a50:	shr    cl,1
  402a52:	mov    DWORD PTR [ebx],0xf2c529a2
  402a58:	stc    
  402a59:	mov    ebp,ecx
  402a5b:	hlt    
  402a5c:	fist   DWORD PTR [ebp+0x53fb7bac]
  402a62:	and    BYTE PTR [ebx-0x5c83298c],dl
  402a68:	data16 icebp 
  402a6a:	loopne 0x402a21
  402a6c:	daa    
  402a6d:	pop    ebx
  402a6e:	icebp  
  402a6f:	sub    eax,0x845ed69d
  402a74:	imul   ebx,DWORD PTR [ecx+0x6a],0x7b6a8697
  402a7b:	dec    ebp
  402a7c:	inc    ebx
  402a7d:	jmp    0x43958fdb
  402a82:	fsqrt  
  402a84:	das    
  402a85:	push   esp
  402a86:	aaa    
  402a87:	sbb    ch,BYTE PTR [ebp-0x78]
  402a8a:	cwde   
  402a8b:	cld    
  402a8c:	js     0x402a11
  402a8e:	xchg   ecx,eax
  402a8f:	ret    0xd0d7
  402a92:	bnd jg 0x402b0e
  402a95:	ins    DWORD PTR es:[edi],dx
  402a96:	stos   BYTE PTR es:[edi],al
  402a97:	fnsave [ebp+0x71]
  402a9a:	xchg   edi,eax
  402a9b:	lods   eax,DWORD PTR ds:[esi]
  402a9c:	rol    DWORD PTR [ebx+ebp*2],0x5
  402aa0:	push   es
  402aa1:	fild   WORD PTR [eax+0x56]
  402aa4:	cmp    bh,bh
  402aa6:	into   
  402aa7:	es jg  0x402a78
  402aaa:	xor    al,0xa4
  402aac:	adc    eax,0xb7172932
  402ab1:	out    0x97,eax
  402ab3:	stos   DWORD PTR es:[edi],eax
  402ab4:	lods   eax,DWORD PTR ds:[esi]
  402ab5:	mov    al,0xc
  402ab7:	pop    edx
  402ab8:	test   al,0x1b
  402aba:	push   ds
  402abb:	test   al,0xc2
  402abd:	ja     0x402a62
  402abf:	das    
  402ac0:	push   esp
  402ac1:	dec    ebx
  402ac2:	in     al,0x49
  402ac4:	nop
  402ac5:	jmp    0x23db484
  402aca:	ficom  WORD PTR gs:[ebx+ebp*2-0x76926b3a]
  402ad2:	pusha  
  402ad3:	add    bl,BYTE PTR [edi-0x14]
  402ad6:	sbb    cl,BYTE PTR [edx]
  402ad8:	stos   DWORD PTR es:[edi],eax
  402ad9:	aad    0x40
  402adb:	xchg   DWORD PTR [ebx+ebx*4+0x2b],ebp
  402adf:	(bad)  
  402ae0:	xor    dh,BYTE PTR [esi+edx*1+0x5466705e]
  402ae7:	and    DWORD PTR [ecx-0x26d78e6],0x78270196
  402af1:	inc    edx
  402af2:	jnp    0x402aa3
  402af4:	(bad)  
  402af5:	repnz ins DWORD PTR es:[edi],dx
  402af7:	and    BYTE PTR [eax+ebp*2],dh
  402afa:	add    eax,0xef3e7ce4
  402aff:	cmp    DWORD PTR [ebp+0x5d395e41],ecx
  402b05:	inc    edx
  402b06:	cmp    eax,0x194bdbca
  402b0b:	inc    ebx
  402b0c:	adc    esp,DWORD PTR [edx+0x66]
  402b0f:	dec    DWORD PTR [edi]
  402b11:	inc    eax
  402b12:	dec    esp
  402b13:	jmp    0x402b5c
  402b15:	pop    es
  402b16:	int    0x18
  402b18:	rcl    BYTE PTR [ebp-0x44495675],1
  402b1e:	arpl   di,di
  402b20:	mov    bl,0x87
  402b22:	add    ah,BYTE PTR [ebx-0x11215c29]
  402b28:	stc    
  402b29:	and    al,0xf
  402b2b:	sar    BYTE PTR [esi-0x58],0x3f
  402b2f:	pop    esp
  402b30:	imul   eax,edi,0x66ca9e34
  402b36:	scas   eax,DWORD PTR es:[edi]
  402b37:	aam    0x23
  402b39:	xchg   ecx,eax
  402b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b3b:	clc    
  402b3c:	or     eax,0x3896b219
  402b41:	in     al,dx
  402b42:	mov    WORD PTR [edi+ebp*8],?
  402b45:	xor    al,0x84
  402b47:	aam    0xc
  402b49:	xlat   BYTE PTR ds:[ebx]
  402b4a:	arpl   WORD PTR [edx],bp
  402b4c:	jle    0x402b1f
  402b4e:	aad    0xb6
  402b50:	xchg   esi,eax
  402b51:	sbb    al,0x9d
  402b53:	mov    cs,WORD PTR [eax+0x4a]
  402b56:	pop    edi
  402b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b58:	push   ebp
  402b59:	cmp    eax,0xe75fc603
  402b5e:	xor    eax,0xba1b89c4
  402b63:	sar    ch,1
  402b65:	scas   eax,DWORD PTR es:[edi]
  402b66:	stos   DWORD PTR es:[edi],eax
  402b67:	adc    DWORD PTR [eax+0x49],edi
  402b6a:	scas   eax,DWORD PTR es:[edi]
  402b6b:	cmp    BYTE PTR [ecx+0x2736ac6a],bl
  402b71:	mov    edx,0x58a65a85
  402b76:	popf   
  402b77:	out    dx,eax
  402b78:	jmp    0xbab2f9e5
  402b7d:	mov    cl,0xc5
  402b7f:	mov    al,ds:0x3b816c39
  402b84:	mov    al,ds:0xf4d0d19a
  402b89:	cmp    BYTE PTR [edx+ebx*2-0x6],ch
  402b8d:	xor    dh,BYTE PTR [ebx+0x76a13541]
  402b93:	sbb    DWORD PTR [eax-0xd2fb0bf],edi
  402b99:	arpl   WORD PTR [esi+0x6fbe54ff],bp
  402b9f:	push   es
  402ba0:	sahf   
  402ba1:	repz dec edx
  402ba3:	jmp    0x402b36
  402ba5:	dec    ebx
  402ba6:	jl     0x402b93
  402ba8:	fs sar dl,0xf4
  402bac:	cmp    edi,DWORD PTR [esi]
  402bae:	rol    BYTE PTR [eiz*1-0x5127b881],0x77
  402bb6:	or     ch,BYTE PTR [eax-0x53400208]
  402bbc:	xchg   ebp,eax
  402bbd:	mov    dh,BYTE PTR es:[ecx*8-0x56bb60e4]
  402bc5:	cdq    
  402bc6:	mov    bh,BYTE PTR [edi]
  402bc8:	jge    0x402b84
  402bca:	mov    ebx,0x77dd9210
  402bcf:	lock push 0x270758e5
  402bd5:	add    ecx,DWORD PTR [ecx]
  402bd7:	pop    ecx
  402bd8:	adc    eax,0x10f55f8a
  402bdd:	add    ch,BYTE PTR [ebp+edi*2+0x1d]
  402be1:	jb     0x402b91
  402be3:	or     bh,ch
  402be5:	mov    dh,0x4f
  402be7:	jg     0x402bf6
  402be9:	xchg   esi,eax
  402bea:	dec    esi
  402beb:	inc    ecx
  402bec:	adc    DWORD PTR [edx],edx
  402bee:	out    0x21,eax
  402bf0:	pop    ss
  402bf1:	add    al,0x62
  402bf3:	mov    ss,WORD PTR ds:0xf32be7b4
  402bf9:	dec    ecx
  402bfa:	rcr    BYTE PTR [edx+0x31],1
  402bfd:	mov    al,0x1e
  402bff:	test   BYTE PTR [ebx+0x143f69f5],ch
  402c05:	in     eax,dx
  402c06:	cmc    
  402c07:	dec    edx
  402c08:	ss popa 
  402c0a:	push   DWORD PTR [esp+ecx*8-0x1a5ece64]
  402c11:	push   esp
  402c12:	inc    eax
  402c13:	and    al,0xbf
  402c15:	mov    ds:0x2e7ab1ce,al
  402c1a:	fcmove st,st(5)
  402c1c:	jecxz  0x402c47
  402c1e:	jnp    0x402c23
  402c20:	fdivr  DWORD PTR [ebx-0xe]
  402c23:	lods   eax,DWORD PTR ds:[esi]
  402c24:	or     al,0xb
  402c26:	sub    edi,0xdeb2671f
  402c2c:	pop    edi
  402c2d:	fidivr WORD PTR [esi-0x21]
  402c30:	into   
  402c31:	mov    bh,0x3f
  402c33:	xlat   BYTE PTR ds:[ebx]
  402c34:	inc    esp
  402c35:	hlt    
  402c36:	fdiv   DWORD PTR [eax+0x3d]
  402c39:	or     BYTE PTR [ecx-0x3a4bfdd7],dl
  402c3f:	sub    al,0x43
  402c41:	out    0xb9,al
  402c43:	fstp   TBYTE PTR [ebx+0xb7c4563]
  402c49:	mov    ah,0xc7
  402c4b:	and    BYTE PTR [edi-0x48a261b2],dl
  402c51:	pop    ss
  402c52:	loop   0x402c58
  402c54:	adc    al,0xd4
  402c56:	repnz ins BYTE PTR es:[edi],dx
  402c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c59:	xchg   ebx,eax
  402c5a:	sar    DWORD PTR [ebp+0x19],cl
  402c5d:	sub    ecx,DWORD PTR ds:0x134eaed4
  402c63:	sub    cl,BYTE PTR ds:0xa0d8171
  402c69:	xchg   ebp,eax
  402c6a:	ins    BYTE PTR es:[edi],dx
  402c6b:	sbb    edx,DWORD PTR [ebp+0x55]
  402c6e:	fwait
  402c6f:	clc    
  402c70:	sbb    ebx,DWORD PTR [esp+ebx*8-0x48]
  402c74:	inc    ebp
  402c75:	rcr    DWORD PTR [edx-0x5d887ac],0xd
  402c7c:	int    0xcf
  402c7e:	jmp    0x5452:0x1ebf885e
  402c85:	aad    0xa8
  402c87:	mul    DWORD PTR [ecx+0x4b]
  402c8a:	in     eax,0x27
  402c8c:	push   esi
  402c8d:	jnp    0x402c3a
  402c8f:	popf   
  402c90:	stos   BYTE PTR es:[edi],al
  402c91:	(bad)  
  402c93:	aaa    
  402c94:	rol    BYTE PTR [ecx+edx*1+0x56],0x34
  402c99:	cld    
  402c9a:	jno    0x402ce7
  402c9c:	jmp    0x402c57
  402c9e:	sbb    BYTE PTR [ecx],ch
  402ca0:	xchg   edi,eax
  402ca1:	sbb    DWORD PTR [ebx-0x19],esp
  402ca4:	add    ebx,eax
  402ca6:	fcomp  QWORD PTR [eax]
  402ca8:	fstp   QWORD PTR [ecx-0xb4df3a3]
  402cae:	or     eax,0x64ec25f7
  402cb3:	mov    ebp,DWORD PTR [ecx-0x14]
  402cb6:	cwde   
  402cb7:	clc    
  402cb8:	fistp  DWORD PTR [edi+0x65]
  402cbb:	icebp  
  402cbc:	inc    esi
  402cbd:	mov    edi,0x35394969
  402cc2:	in     al,0x25
  402cc4:	jne    0x402c80
  402cc6:	jmp    0x7138f2be
  402ccb:	(bad)  
  402ccc:	and    al,0x18
  402cce:	add    eax,0xeefb6abf
  402cd3:	pusha  
  402cd4:	push   edx
  402cd5:	popf   
  402cd6:	xchg   edx,eax
  402cd7:	sbb    ch,dh
  402cd9:	push   esp
  402cda:	inc    ebx
  402cdb:	inc    esi
  402cdc:	int3   
  402cdd:	xchg   ebx,eax
  402cde:	imul   ebx,DWORD PTR [ecx-0x12],0xffffff81
  402ce2:	cdq    
  402ce3:	mov    ds:0xc237f3d1,al
  402ce8:	dec    ebp
  402ce9:	mov    ds:0xb06242d8,al
  402cee:	ins    DWORD PTR es:[edi],dx
  402cef:	inc    ecx
  402cf0:	cmp    al,0xc3
  402cf2:	or     BYTE PTR [ebx+0x13a52797],ah
  402cf8:	mov    ds:0xce3001da,al
  402cfd:	mov    eax,0xde72e4a2
  402d02:	out    0xf1,eax
  402d04:	xlat   BYTE PTR ds:[ebx]
  402d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d06:	xchg   BYTE PTR ds:0xa5979a34,ch
  402d0c:	or     DWORD PTR [ebx+ebx*2-0x48],eax
  402d10:	shl    BYTE PTR [ecx+0x123f6647],1
  402d16:	popa   
  402d17:	push   ss
  402d18:	(bad)  
  402d19:	in     al,dx
  402d1a:	and    edx,eax
  402d1c:	arpl   WORD PTR [esi-0x27],bp
  402d1f:	jge    0x402d02
  402d21:	xor    DWORD PTR [esi+0x5eecca64],ebx
  402d27:	dec    edi
  402d28:	push   esi
  402d29:	fwait
  402d2a:	sub    cl,dh
  402d2c:	imul   esp,DWORD PTR [edx],0x7d7e1379
  402d32:	sub    BYTE PTR [ecx+0x1f],ch
  402d35:	(bad)  
  402d36:	les    edi,FWORD PTR [edx-0x43]
  402d39:	pop    es
  402d3a:	out    0x94,eax
  402d3c:	xchg   BYTE PTR [esi+ebp*2],ah
  402d3f:	mov    dh,0x4
  402d41:	fs test al,0x89
  402d44:	adc    BYTE PTR [ebp-0x7e],0x2c
  402d48:	push   es
  402d49:	inc    edi
  402d4a:	cmc    
  402d4b:	loopne 0x402ce6
  402d4d:	cli    
  402d4e:	popa   
  402d4f:	imul   edx,DWORD PTR [edi+ebp*4+0x6a],0x2b
  402d54:	and    BYTE PTR ss:[eax-0x64d792f7],0xa7
  402d5c:	push   cs
  402d5d:	lock push cs
  402d5f:	mov    eax,0xdbb5d8a8
  402d64:	jmp    0x53b0:0xca06bb36
  402d6b:	add    ch,BYTE PTR [ebx-0xc]
  402d6e:	cli    
  402d6f:	xor    al,0x4
  402d71:	jge    0x402d92
  402d73:	retf   
  402d74:	sbb    bh,BYTE PTR [ebx-0x16488b35]
  402d7a:	add    esi,DWORD PTR [ebx+0x1c]
  402d7d:	in     al,0x18
  402d7f:	(bad)  
  402d80:	repz lahf 
  402d82:	lock out dx,eax
  402d84:	stc    
  402d85:	mov    al,BYTE PTR [esi+0x4a]
  402d88:	std    
  402d89:	popa   
  402d8a:	push   edx
  402d8b:	adc    esi,ebp
  402d8d:	hlt    
  402d8e:	cld    
  402d8f:	add    BYTE PTR [esi+edx*4],0x4b
  402d93:	dec    ebx
  402d94:	push   esp
  402d95:	mov    ah,0xa0
  402d97:	xor    al,0x46
  402d99:	mov    ds,WORD PTR [edx]
  402d9b:	shl    BYTE PTR [ebp-0x41],cl
  402d9e:	shr    edx,1
  402da0:	loop   0x402d33
  402da2:	ror    DWORD PTR [eax+edx*2-0x45],cl
  402da6:	push   ebp
  402da7:	sbb    ah,BYTE PTR [ebx+0x43]
  402daa:	xor    eax,0x86baea48
  402daf:	enter  0x27b2,0xfa
  402db3:	sbb    eax,0x107672b0
  402db8:	out    0x8c,al
  402dba:	xlat   BYTE PTR ds:[ebx]
  402dbb:	or     DWORD PTR ds:0x54131118,eax
  402dc1:	enter  0xd9b0,0xed
  402dc5:	iret   
  402dc6:	rep stos DWORD PTR es:[edi],eax
  402dc8:	push   ebp
  402dc9:	adc    al,0xbc
  402dcb:	adc    bh,BYTE PTR [ebx]
  402dcd:	push   ss
  402dce:	aaa    
  402dcf:	imul   BYTE PTR [ecx+0x21]
  402dd2:	lds    ebx,FWORD PTR [ebx]
  402dd4:	call   0x368bc69e
  402dd9:	inc    ebp
  402dda:	out    dx,al
  402ddb:	dec    eax
  402ddc:	pop    edx
  402ddd:	(bad)  
  402ddf:	clc    
  402de0:	push   edi
  402de1:	sbb    edi,ecx
  402de3:	dec    ebx
  402de4:	ins    BYTE PTR es:[edi],dx
  402de5:	int3   
  402de6:	mov    WORD PTR ds:0xe72ef8f3,ss
  402dec:	xor    eax,0x513825a8
  402df1:	mov    ebx,0xd4fbac9
  402df6:	jnp    0x402e56
  402df8:	stos   BYTE PTR es:[edi],al
  402df9:	retf   0x317e
  402dfc:	std    
  402dfd:	add    DWORD PTR [eax+eiz*8+0x66e1f394],ecx
  402e04:	jge    0x402e42
  402e06:	xchg   edx,eax
  402e07:	sub    ch,0x2e
  402e0a:	pop    ecx
  402e0b:	outs   dx,BYTE PTR ds:[esi]
  402e0c:	cmp    ecx,ebp
  402e0e:	xchg   ebp,eax
  402e0f:	fwait
  402e10:	jmp    0x402e66
  402e12:	jmp    0x402e58
  402e14:	jl     0x402e39
  402e16:	call   0x893a:0x2a972da3
  402e1d:	jns    0x402dd3
  402e1f:	inc    ebx
  402e20:	mov    dh,0xf
  402e22:	jns    0x402dc2
  402e24:	nop
  402e25:	dec    edx
  402e26:	shl    BYTE PTR [ebx-0xe],1
  402e29:	lock fild QWORD PTR [edi-0x57431a7f]
  402e30:	mov    eax,0x71a876b3
  402e35:	cmp    eax,0x9821a15d
  402e3a:	in     al,0xcf
  402e3c:	inc    esi
  402e3d:	loope  0x402e88
  402e3f:	push   DWORD PTR [edi+ebx*4+0x33c28bc0]
  402e46:	xchg   edi,eax
  402e47:	rcl    al,cl
  402e49:	xchg   ecx,eax
  402e4a:	mov    al,0xf9
  402e4c:	xchg   esp,eax
  402e4d:	xchg   ebx,eax
  402e4e:	cmp    eax,0x73fa0c3d
  402e53:	jg     0x402eb0
  402e55:	enter  0x874d,0x68
  402e59:	fs dec edx
  402e5b:	out    dx,eax
  402e5c:	push   eax
  402e5d:	repnz mov ebx,0x29c3e68c
  402e63:	or     ebx,DWORD PTR [edi+ebp*8+0x58]
  402e67:	adc    DWORD PTR [eax+0xf],eax
  402e6a:	retf   0x9379
  402e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e6e:	xchg   ebx,eax
  402e6f:	dec    edx
  402e70:	mov    edi,0x7b2642e4
  402e75:	dec    esi
  402e76:	inc    edx
  402e77:	push   ecx
  402e78:	adc    esp,0xdf046ab4
  402e7e:	jmp    0x402e43
  402e80:	xchg   edi,eax
  402e81:	cmp    dl,BYTE PTR [eax]
  402e83:	jmp    FWORD PTR [ebp-0x3a]
  402e86:	and    al,0x8a
  402e88:	clts   
  402e8a:	bound  esi,QWORD PTR [esi+0x71]
  402e8d:	std    
  402e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8f:	sahf   
  402e90:	je     0x402ed9
  402e92:	cwde   
  402e93:	aas    
  402e94:	lods   eax,DWORD PTR ds:[esi]
  402e95:	mov    edx,DWORD PTR [ebx-0x4d]
  402e98:	(bad)  
  402e99:	cmc    
  402e9a:	fldenv [eax]
  402e9c:	xor    BYTE PTR [ebp-0x30a0940e],ah
  402ea2:	sar    BYTE PTR [ebx+0x1288f3d8],cl
  402ea8:	sub    cl,BYTE PTR [edx]
  402eaa:	leave  
  402eab:	pop    ebx
  402eac:	fistp  WORD PTR [ecx+0x772ac78e]
  402eb2:	jg     0x402f09
  402eb4:	out    dx,eax
  402eb5:	push   0x7a
  402eb7:	dec    ebx
  402eb8:	adc    ah,BYTE PTR [eax]
  402eba:	xchg   ebx,eax
  402ebb:	pop    ecx
  402ebc:	imul   esp,DWORD PTR [edi],0xd0b51599
  402ec2:	retf   
  402ec3:	jbe    0x402f27
  402ec5:	pop    esi
  402ec6:	jge    0x402f22
  402ec8:	hlt    
  402ec9:	out    0xc5,al
  402ecb:	xchg   ebx,eax
  402ecc:	jg     0x402e91
  402ece:	cmp    bl,BYTE PTR [edi+0x5484bdf7]
  402ed4:	mov    eax,0x74b5590a
  402ed9:	add    eax,0xd7e41777
  402ede:	pop    edx
  402edf:	inc    esi
  402ee0:	test   eax,0x52d2acc
  402ee5:	push   esi
  402ee6:	idiv   BYTE PTR [edx+edi*8-0x2915ff3a]
  402eed:	adc    al,0xb5
  402eef:	out    0xd3,al
  402ef1:	push   ebp
  402ef2:	ret    0x4712
  402ef5:	xlat   BYTE PTR ds:[ebx]
  402ef6:	cmc    
  402ef7:	push   cs
  402ef8:	and    eax,0xca2f60ee
  402efd:	ret    
  402efe:	jmp    0x402e8a
  402f00:	sbb    al,0x9f
  402f02:	rcr    ebp,cl
  402f04:	test   DWORD PTR [ecx],ecx
  402f06:	cdq    
  402f07:	data16 ficomp DWORD PTR [ebx-0x30f2ce74]
  402f0e:	pusha  
  402f0f:	sub    al,0x4c
  402f11:	mov    esp,0x3e7afc3d
  402f16:	push   ss
  402f17:	popa   
  402f18:	repnz (bad) 
  402f1a:	sbb    ah,cl
  402f1c:	push   cs
  402f1d:	pop    eax
  402f1e:	mov    esi,0xc5bc703b
  402f23:	pop    ecx
  402f24:	mov    al,0x9f
  402f26:	adc    al,BYTE PTR [ebx-0x7a]
  402f29:	sbb    DWORD PTR [ecx],ebp
  402f2b:	jmp    0x8d5f:0x98906dc5
  402f32:	pop    eax
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	and    bh,ch
  402f36:	inc    esi
  402f37:	retf   0xc52e
  402f3a:	in     eax,dx
  402f3b:	sub    BYTE PTR [esi],ah
  402f3d:	mov    ebx,0xb11ea012
  402f42:	and    al,0x94
  402f44:	inc    esp
  402f45:	dec    eax
  402f46:	cmp    edi,edi
  402f48:	jp     0x402f88
  402f4a:	pusha  
  402f4b:	call   0xd14a:0x8d1ecc59
  402f52:	add    cl,BYTE PTR [ebp+edx*2+0x2]
  402f56:	inc    ebx
  402f57:	test   BYTE PTR [ebp+0x3a],bl
  402f5a:	call   0x22bf776
  402f5f:	push   esi
  402f60:	pushf  
  402f61:	loopne 0x402f78
  402f63:	sub    DWORD PTR [ecx-0x23],ebx
  402f66:	push   DWORD PTR [edx+0x9]
  402f69:	sti    
  402f6a:	push   ebp
  402f6b:	push   0xffffffad
  402f6d:	in     al,dx
  402f6e:	inc    ecx
  402f6f:	inc    edi
  402f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f71:	add    esi,DWORD PTR [ecx]
  402f73:	sbb    eax,0xfcde3168
  402f78:	data16 mov fs,WORD PTR [eax+0x32]
  402f7c:	mov    cl,0x1d
  402f7e:	mov    ebp,0xae0f195a
  402f83:	sub    eax,0xc90a6dd4
  402f88:	imul   esi,DWORD PTR [edx-0x745b0d89],0x31
  402f8f:	mov    edi,0x18c788d7
  402f94:	jecxz  0x402fac
  402f96:	imul   ebp,DWORD PTR [ecx+0x5d],0x2eac4336
  402f9d:	retf   
  402f9e:	iret   
  402f9f:	and    DWORD PTR [ebx+0x2716b901],ebx
  402fa5:	ret    0x14f4
  402fa8:	mov    al,0xa9
  402faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fab:	mov    bh,0x6c
  402fad:	nop
  402fae:	test   DWORD PTR [edx-0x28],ecx
  402fb1:	adc    al,0x4a
  402fb3:	scas   al,BYTE PTR es:[edi]
  402fb4:	jp     0x402fcc
  402fb6:	xor    al,0xb5
  402fb8:	shr    DWORD PTR [edi-0x2],0x6c
  402fbc:	sahf   
  402fbd:	stos   BYTE PTR es:[edi],al
  402fbe:	adc    DWORD PTR [ecx],edx
  402fc0:	cmp    al,0x65
  402fc2:	dec    ebx
  402fc3:	and    DWORD PTR [ebp+0x7e],0x8
  402fc7:	pop    eax
  402fc8:	inc    eax
  402fc9:	lock inc DWORD PTR ss:[ecx]
  402fcd:	call   0xea7d:0xd22a7172
  402fd4:	pushf  
  402fd5:	inc    esi
  402fd6:	into   
  402fd7:	cmp    DWORD PTR [eax-0x5db2a605],esp
  402fdd:	fisub  WORD PTR [esi+eiz*8]
  402fe0:	ror    cl,1
  402fe2:	dec    edx
  402fe3:	(bad)  
  402fe4:	mov    ah,0x18
  402fe7:	add    BYTE PTR [edi+0xf662cf4],ah
  402fed:	fsubr  QWORD PTR [esp+ebx*1+0xe69d3b]
  402ff4:	push   ss
  402ff5:	jo     0x40306e
  402ff7:	mov    esp,0x9317e978
  402ffc:	sub    al,ah
  402ffe:	xchg   esi,eax
  402fff:	dec    ecx
  403000:	cmp    DWORD PTR [edx],edi
  403002:	sbb    BYTE PTR [esi],dh
  403004:	push   esp
  403005:	stos   BYTE PTR es:[edi],al
  403006:	(bad)  
  403007:	jns    0x402fe9
  403009:	mov    bl,0xc5
  40300b:	xor    al,0x34
  40300d:	dec    ecx
  40300e:	mov    ah,0x2e
  403010:	or     esi,0x252bfad5
  403016:	dec    ebx
  403017:	aaa    
  403018:	push   0x814de835
  40301d:	xchg   esi,eax
  40301e:	jnp    0x40304b
  403020:	xchg   edx,eax
  403021:	in     eax,0x4e
  403023:	bnd jno 0x4030a1
  403026:	fidiv  DWORD PTR [edx]
  403028:	aam    0x93
  40302a:	in     eax,dx
  40302b:	int3   
  40302c:	jecxz  0x40303a
  40302e:	loop   0x40309f
  403030:	sbb    ebp,DWORD PTR [edx+0x66]
  403033:	jo     0x402fff
  403035:	dec    esp
  403036:	dec    ecx
  403037:	fcomp  st(6)
  403039:	out    dx,al
  40303a:	aad    0xf2
  40303c:	xor    dh,al
  40303e:	inc    eax
  40303f:	aad    0xc9
  403041:	sbb    BYTE PTR ds:0xf51622ec,0xdd
  403048:	loope  0x402ffc
  40304a:	pop    ebx
  40304b:	mul    cl
  40304d:	jge    0x40301f
  40304f:	jmp    0xa08b:0x1127b6ca
  403056:	out    0x90,eax
  403058:	cmp    al,0x29
  40305a:	jg     0x40301d
  40305c:	pop    edx
  40305d:	jg     0x403025
  40305f:	or     bh,BYTE PTR [ecx-0x24]
  403062:	mov    esi,0xb3e73c05
  403067:	add    DWORD PTR [esi+0x44],esi
  40306a:	dec    esi
  40306b:	fisttp DWORD PTR [esp+edx*4]
  40306e:	mov    eax,0x96da8379
  403073:	add    BYTE PTR [edi-0x6a10e8aa],al
  403079:	(bad)  
  40307b:	jne    0x403020
  40307d:	jno    0x4030aa
  40307f:	ins    DWORD PTR es:[edi],dx
  403080:	xchg   ebp,eax
  403081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403082:	ret    0x37ff
  403085:	imul   ebp,DWORD PTR ds:0x3fb13ce2,0xb38c473b
  40308f:	and    bl,BYTE PTR [edx]
  403091:	jmp    0x6839108c
  403096:	mov    fs,WORD PTR [ebp-0x415d1af7]
  40309c:	push   edx
  40309d:	shl    DWORD PTR [ebx+eax*8+0x4e],cl
  4030a1:	and    DWORD PTR [ecx-0x7207640b],eax
  4030a7:	mov    cl,BYTE PTR [ebx-0x3e]
  4030aa:	dec    ecx
  4030ab:	mov    gs,edx
  4030ad:	in     eax,0xfc
  4030af:	xor    ebp,DWORD PTR [edx]
  4030b1:	scas   eax,DWORD PTR es:[edi]
  4030b2:	rol    ebp,1
  4030b4:	outs   dx,DWORD PTR ds:[esi]
  4030b5:	mov    ah,0x85
  4030b7:	xlat   BYTE PTR ds:[ebx]
  4030b8:	ret    
  4030b9:	repnz mov ebx,0xff7b72db
  4030bf:	cmp    eax,0x21824021
  4030c4:	clc    
  4030c5:	sti    
  4030c6:	fdiv   st(4),st
  4030c8:	add    edx,ebp
  4030ca:	jno    0x4030a3
  4030cc:	cwde   
  4030cd:	adc    DWORD PTR [ecx-0x72c9a3ac],ecx
  4030d3:	imul   BYTE PTR [eax+esi*8-0x1ed02dce]
  4030da:	add    al,0xde
  4030dc:	adc    esi,ebx
  4030de:	je     0x40312c
  4030e0:	xlat   BYTE PTR ds:[ebx]
  4030e1:	jle    0x4030a2
  4030e3:	mov    ds:0x1cca86bf,eax
  4030e8:	shl    DWORD PTR [ebx-0x73c3c6c6],1
  4030ee:	mov    ds:0xef59a7ce,eax
  4030f3:	ja     0x403142
  4030f5:	ins    DWORD PTR es:[edi],dx
  4030f6:	pop    es
  4030f7:	int3   
  4030f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f9:	inc    esi
  4030fa:	rol    BYTE PTR [edi+esi*4-0x60],1
  4030fe:	or     edx,DWORD PTR [eax-0x30]
  403101:	das    
  403102:	iret   
  403103:	inc    edx
  403104:	sbb    dl,BYTE PTR [edi]
  403106:	push   ds
  403107:	jns    0x4030de
  403109:	jmp    DWORD PTR [ecx-0x3eb8069d]
  40310f:	xor    eax,0xb24b108e
  403114:	mov    BYTE PTR [esi+eax*4],cl
  403117:	xchg   DWORD PTR [ecx],eax
  403119:	push   ecx
  40311a:	retf   0x8bd7
  40311d:	test   BYTE PTR [edx-0x54],0xbf
  403121:	les    ebp,FWORD PTR [ebx]
  403123:	pushf  
  403124:	enter  0xfe77,0x7e
  403128:	jo     0x403175
  40312a:	popf   
  40312b:	jo     0x4030b6
  40312d:	dec    eax
  40312e:	retf   0x2c47
  403131:	outs   dx,DWORD PTR ds:[esi]
  403132:	in     al,0x71
  403134:	adc    DWORD PTR [ebp+0x687d5eaf],0x1a89bd49
  40313e:	or     BYTE PTR [edx-0x6d],dh
  403141:	push   edx
  403142:	es gs pushf 
  403145:	dec    esi
  403146:	mov    eax,ds:0x53ecb6ed
  40314b:	add    al,0x39
  40314d:	add    eax,0xa81df78b
  403152:	aam    0x2d
  403154:	mov    ah,0x9d
  403156:	dec    ebx
  403157:	(bad)  
  403158:	in     al,dx
  403159:	cmc    
  40315a:	sub    eax,0x46f20b61
  40315f:	inc    ebx
  403160:	(bad)  
  403161:	(bad)  
  403162:	call   DWORD PTR [edi+esi*4-0x6a73d072]
  403169:	arpl   WORD PTR [eax-0x11236530],bp
  40316f:	xchg   edx,ebx
  403171:	inc    ecx
  403172:	ror    BYTE PTR [ebx-0x5dd8772c],cl
  403178:	test   al,0x85
  40317a:	dec    eax
  40317b:	jmp    0xfa51:0x6c82c1cc
  403182:	fdivr  DWORD PTR [edx-0x2f]
  403185:	sbb    al,0x83
  403187:	aam    0x6
  403189:	push   edi
  40318a:	and    edi,DWORD PTR [eax+0x1d9ffd4a]
  403190:	or     al,0x6a
  403192:	addr16 je 0x40316c
  403195:	mov    bh,0xd9
  403197:	daa    
  403198:	push   ss
  403199:	out    dx,eax
  40319a:	ror    DWORD PTR [ebx+0x18],cl
  40319d:	popa   
  40319e:	cmp    al,0xc2
  4031a0:	shl    DWORD PTR [ebx-0x2e],cl
  4031a3:	ror    BYTE PTR ds:0x6a73ad05,cl
  4031a9:	nop
  4031aa:	mov    ds:0xfd4ca1dd,al
  4031af:	jns    0x403203
  4031b1:	adc    DWORD PTR [ecx],edi
  4031b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b4:	ret    
  4031b5:	mov    esi,0x6ee1f935
  4031ba:	push   0xffffffe3
  4031bc:	popf   
  4031bd:	cmp    DWORD PTR [eax],esp
  4031bf:	mov    ch,0x95
  4031c1:	mov    al,ds:0xd94f9650
  4031c6:	sbb    bh,bl
  4031c8:	mov    gs,WORD PTR [eax]
  4031ca:	dec    esp
  4031cb:	ds pop ebp
  4031cd:	(bad)  
  4031cf:	cwde   
  4031d0:	xchg   BYTE PTR [esi-0x3f],al
  4031d3:	push   edi
  4031d4:	fdivr  st,st(5)
  4031d6:	rep ins DWORD PTR es:[edi],dx
  4031d8:	push   ecx
  4031d9:	xchg   edx,eax
  4031da:	sbb    DWORD PTR [eax+0x3daa041f],esp
  4031e0:	pop    edx
  4031e1:	mov    bh,0x52
  4031e3:	sbb    dl,BYTE PTR [ecx]
  4031e5:	dec    ebx
  4031e6:	and    DWORD PTR [ecx+0x55],0x1c4dbae7
  4031ed:	scas   eax,DWORD PTR es:[edi]
  4031ee:	mov    edx,0x7d2c322b
  4031f3:	ficomp DWORD PTR [eax]
  4031f5:	xor    BYTE PTR [esi],0x11
  4031f8:	lahf   
  4031f9:	dec    esi
  4031fa:	or     DWORD PTR [esi+ecx*1-0x5e],ebx
  4031fe:	hlt    
  4031ff:	rcr    DWORD PTR [ebx],cl
  403201:	iret   
  403202:	inc    edx
  403203:	jmp    0x96606209
  403208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403209:	push   cs
  40320a:	mov    ebp,0xda9bc7c1
  40320f:	das    
  403210:	call   0x62a40ed3
  403215:	mov    bl,BYTE PTR [edi]
  403217:	jl     0x403285
  403219:	jle    0x403206
  40321b:	retf   
  40321c:	xor    cl,BYTE PTR [ecx-0x22]
  40321f:	sbb    al,bl
  403221:	inc    edi
  403222:	gs int3 
  403224:	aaa    
  403225:	nop
  403226:	sub    ebx,0x1c16f9
  40322c:	push   cs
  40322d:	stc    
  40322e:	mov    cs,edi
  403230:	(bad)  
  403231:	push   ds
  403232:	jne    0x4031c2
  403234:	mov    dl,bl
  403236:	imul   ebp,ebp,0x6
  403239:	or     DWORD PTR [edx+0x38],eax
  40323c:	lea    eax,[eax]
  40323e:	mov    WORD PTR [edi+0x3],?
  403241:	add    esi,DWORD PTR [eax-0x3f]
  403244:	mov    esp,DWORD PTR [ecx+0x738fc01a]
  40324a:	sbb    BYTE PTR [ecx],cl
  40324c:	inc    ebp
  40324d:	or     al,0xe4
  40324f:	push   ebx
  403250:	jmp    0xb14:0x5154d91c
  403257:	ins    BYTE PTR es:[edi],dx
  403258:	retf   0x84d
  40325b:	(bad)  
  40325d:	mov    BYTE PTR [edi+0x25a2bb8f],dl
  403263:	imul   ebp,DWORD PTR [edx],0x17
  403266:	imul   edi,DWORD PTR [eax-0x61],0x4163e2be
  40326d:	xchg   esi,eax
  40326e:	pop    es
  40326f:	dec    BYTE PTR [ebp+0x4e8d38db]
  403275:	test   eax,0x342faa80
  40327a:	xor    al,0x57
  40327c:	dec    esi
  40327d:	es sub ch,dh
  403280:	push   ebp
  403281:	fist   DWORD PTR [ecx+0x6b91261e]
  403287:	dec    esp
  403288:	in     eax,0xa3
  40328a:	xor    DWORD PTR [esi-0x28f97e8b],0x7
  403291:	aam    0x93
  403293:	icebp  
  403294:	(bad)  
  403295:	cmp    BYTE PTR [ebx+0x5f63b05e],cl
  40329b:	lods   eax,DWORD PTR ds:[esi]
  40329c:	inc    edi
  40329d:	mov    ch,0x3
  40329f:	cs in  eax,dx
  4032a1:	xchg   BYTE PTR [ebp-0x7dcf1801],ch
  4032a7:	pop    edi
  4032a8:	jecxz  0x4032df
  4032aa:	fsub   DWORD PTR [esp+eiz*4+0x2badd23f]
  4032b1:	add    dl,BYTE PTR [edi+0x5d4bc98]
  4032b7:	(bad)  
  4032b8:	pop    ds
  4032b9:	or     dh,BYTE PTR [ecx]
  4032bb:	add    al,0x31
  4032bd:	out    dx,eax
  4032be:	mov    dl,0xd7
  4032c0:	(bad)  
  4032c2:	fild   DWORD PTR [ecx]
  4032c4:	test   al,0x5d
  4032c6:	mov    bl,0xe
  4032c8:	(bad)  
  4032c9:	int3   
  4032ca:	jo     0x40326a
  4032cc:	pop    esp
  4032cd:	and    al,0x9c
  4032cf:	pop    edi
  4032d0:	xchg   esi,eax
  4032d1:	stc    
  4032d2:	xchg   DWORD PTR [edx-0x7f9ca996],edi
  4032d8:	dec    eax
  4032d9:	mov    ah,BYTE PTR [edi-0x4a]
  4032dc:	push   ebp
  4032dd:	dec    ecx
  4032de:	fld    QWORD PTR [edx+0x6ea7dac0]
  4032e4:	jno    0x4032b8
  4032e6:	es push esi
  4032e8:	inc    edi
  4032e9:	(bad)  
  4032ea:	ins    BYTE PTR es:[edi],dx
  4032eb:	push   ss
  4032ec:	(bad)  
  4032ed:	fmul   DWORD PTR [edx]
  4032ef:	jmp    0x2c663a30
  4032f4:	repz mov ds:0xcd8e6b49,eax
  4032fa:	pop    edx
  4032fb:	inc    edx
  4032fc:	mov    ecx,0xebce5de9
  403301:	xchg   edx,eax
  403302:	mov    WORD PTR [eax+eiz*1-0x1958aaf],?
  403309:	inc    esp
  40330a:	xor    ch,bl
  40330c:	stos   BYTE PTR es:[edi],al
  40330d:	je     0x40335b
  40330f:	stc    
  403310:	fs popf 
  403312:	data16 std 
  403314:	aas    
  403315:	mov    ebx,0xa28364e2
  40331a:	xor    al,0xf9
  40331c:	add    edx,DWORD PTR [ecx]
  40331e:	push   ss
  40331f:	fs fs xor ch,ah
  403323:	push   esi
  403324:	idiv   DWORD PTR [edi+esi*1+0x2b7cc7fc]
  40332b:	mov    bh,0x3c
  40332d:	out    0x98,al
  40332f:	xchg   ebp,eax
  403330:	dec    esp
  403331:	imul   BYTE PTR [eax]
  403333:	pop    esi
  403334:	lds    ebx,FWORD PTR [ebx]
  403336:	shl    BYTE PTR [edx-0x506d8017],cl
  40333c:	int    0x2b
  40333e:	mov    eax,ds:0x2e88c000
  403343:	repz pop bp
  403346:	not    ah
  403348:	xchg   ebp,eax
  403349:	adc    dh,BYTE PTR [ebx-0x12ba4ac4]
  40334f:	mov    bl,0xb2
  403351:	lock or BYTE PTR [edx-0x2e],ah
  403355:	stc    
  403356:	cmp    BYTE PTR ds:0x738ec20b,cl
  40335c:	mov    edi,0xe4278590
  403361:	and    ebx,DWORD PTR [edi]
  403363:	(bad)
  403367:	mov    eax,0x8aea05e6
  40336c:	push   es
  40336d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336e:	cld    
  40336f:	xor    DWORD PTR [ebp-0x41],ebx
  403372:	inc    eax
  403373:	and    DWORD PTR [ebp-0x7552e5df],eax
  403379:	add    eax,0x6c1bf783
  40337e:	mov    bl,0x1d
  403380:	cs jg  0x403397
  403383:	dec    esi
  403384:	stos   DWORD PTR es:[edi],eax
  403385:	or     ah,BYTE PTR [ebp-0x1678dd95]
  40338b:	mov    dl,0xf9
  40338d:	jl     0x403317
  40338f:	ds dec edi
  403391:	repnz fs dec eax
  403394:	retf   
  403395:	adc    eax,0xeebbaf5e
  40339a:	loopne 0x403382
  40339c:	dec    esi
  40339d:	jmp    0x403400
  40339f:	mov    DWORD PTR [edx],ebp
  4033a1:	cmp    ah,BYTE PTR [edx+0x3b187521]
  4033a7:	pushf  
  4033a8:	add    cl,cl
  4033aa:	xchg   BYTE PTR [ecx-0x1f],ch
  4033ad:	jp     0x403339
  4033af:	mov    es,WORD PTR [esi+0x4853374a]
  4033b5:	mov    ds:0x8cba6114,eax
  4033ba:	push   esi
  4033bb:	mov    eax,ds:0xe99db891
  4033c0:	cmc    
  4033c1:	in     al,0xb4
  4033c3:	aas    
  4033c4:	mov    DWORD PTR [edi],eax
  4033c6:	fdivp  st(6),st
  4033c8:	int    0xeb
  4033ca:	dec    esi
  4033cb:	das    
  4033cc:	and    eax,0xb3df6d4d
  4033d1:	sub    DWORD PTR [esi+0x29d15b58],ebp
  4033d7:	xchg   edi,eax
  4033d8:	xor    bl,BYTE PTR [edi+ecx*4-0x63]
  4033dc:	fist   WORD PTR [edi+0x19d6596]
  4033e2:	inc    eax
  4033e3:	xchg   ecx,eax
  4033e4:	gs inc edx
  4033e6:	mov    WORD PTR ds:0xb3622b5,cs
  4033ec:	mov    eax,ds:0xb91beaa3
  4033f1:	push   ecx
  4033f2:	inc    esp
  4033f3:	and    eax,edi
  4033f5:	sub    DWORD PTR [ebx-0x12],esi
  4033f8:	ja     0x4033a5
  4033fa:	retf   0x4553
  4033fd:	xchg   dx,ax
  4033ff:	arpl   WORD PTR [esi-0x6a],ax
  403402:	(bad)  
  403404:	push   0xffffffe6
  403406:	out    0xc8,al
  403408:	pop    es
  403409:	xchg   ebp,eax
  40340a:	mov    BYTE PTR [esi],bh
  40340c:	sub    ecx,esi
  40340e:	xor    ecx,DWORD PTR [edx+ecx*2+0x6a07c167]
  403415:	jb     0x403462
  403417:	popa   
  403418:	iret   
  403419:	mov    dl,0xf6
  40341b:	fcomp  QWORD PTR [edx]
  40341d:	in     eax,0x22
  40341f:	cmp    DWORD PTR [eax-0x27b41625],edi
  403425:	lds    eax,FWORD PTR [ecx-0x30]
  403428:	xor    esi,DWORD PTR [ebx-0x6755aaa8]
  40342e:	test   al,0x1d
  403430:	jbe    0x4033e7
  403432:	mov    al,ds:0x2ee60f5a
  403437:	lods   al,BYTE PTR ds:[esi]
  403438:	jns    0x4033ba
  40343a:	pop    edi
  40343b:	jp     0x4034ad
  40343d:	adc    DWORD PTR [esi],esi
  40343f:	mov    eax,0x7c5435fc
  403444:	or     BYTE PTR [ecx-0x7d754b8],ah
  40344a:	and    al,0xdf
  40344c:	(bad)  
  40344d:	sbb    bl,ah
  40344f:	dec    edx
  403450:	push   ebp
  403451:	add    eax,0xbfe35eb
  403456:	cmp    al,BYTE PTR [edi-0x72]
  403459:	outs   dx,BYTE PTR ds:[esi]
  40345a:	aam    0x8d
  40345c:	push   ecx
  40345d:	out    0x5d,al
  40345f:	jmp    0xb528c5b
  403464:	sar    BYTE PTR [ecx-0x69808482],1
  40346a:	xor    BYTE PTR [edi-0x3901f87b],ah
  403470:	xlat   BYTE PTR ds:[ebx]
  403471:	pop    ecx
  403472:	adc    dl,0x79
  403475:	pop    edx
  403476:	(bad)
  403479:	dec    edi
  40347a:	cld    
  40347b:	stos   BYTE PTR es:[edi],al
  40347c:	sbb    bl,ch
  40347e:	push   ecx
  40347f:	xchg   edi,eax
  403480:	mov    ch,0x58
  403482:	add    eax,0x68d03faf
  403487:	sub    DWORD PTR [edx],ebx
  403489:	sub    edx,DWORD PTR [eax+0x7b5967a0]
  40348f:	sub    esi,DWORD PTR [ebx-0x5b9c5751]
  403495:	inc    ecx
  403496:	sbb    bl,BYTE PTR [edx+0x74862b96]
  40349c:	jne    0x40342c
  40349e:	ret    
  40349f:	mov    bh,0x7c
  4034a1:	mov    dl,0xe3
  4034a3:	mov    eax,ds
  4034a5:	push   ebp
  4034a6:	add    al,0xf9
  4034a8:	cld    
  4034a9:	cmp    al,0xf9
  4034ab:	pop    ss
  4034ac:	popf   
  4034ad:	rcl    DWORD PTR [edx+0x4b],0x7a
  4034b1:	xchg   esp,eax
  4034b2:	pushf  
  4034b3:	fsub   DWORD PTR [ebx+0x15]
  4034b6:	sbb    esi,DWORD PTR [esi-0x36e2b67]
  4034bc:	cmp    al,0x15
  4034be:	inc    esp
  4034bf:	lods   al,BYTE PTR ds:[esi]
  4034c0:	rcl    DWORD PTR [ebx-0x1b2a303f],0xe
  4034c7:	stos   BYTE PTR es:[di],al
  4034c9:	xor    al,0x67
  4034cb:	mov    ebx,0xb0b5dc75
  4034d0:	cdq    
  4034d1:	aas    
  4034d2:	sub    dh,ch
  4034d4:	xchg   ebx,eax
  4034d5:	std    
  4034d6:	retf   0x71b5
  4034d9:	out    dx,al
  4034da:	bound  edx,QWORD PTR [eax-0x1f8715ce]
  4034e0:	stos   DWORD PTR es:[edi],eax
  4034e1:	or     ah,bl
  4034e3:	mov    bl,0x12
  4034e5:	sbb    ebp,edx
  4034e7:	leave  
  4034e8:	ds in  eax,0xfa
  4034eb:	ins    BYTE PTR es:[edi],dx
  4034ec:	ror    DWORD PTR [edx-0x38],1
  4034ef:	jo     0x403531
  4034f1:	sbb    BYTE PTR [ebp+0x55],bh
  4034f4:	fdivr  st,st(4)
  4034f6:	ja     0x40348f
  4034f8:	ror    BYTE PTR [eax+0x34f394ab],1
  4034fe:	push   eax
  4034ff:	js     0x4034fb
  403501:	push   0x38
  403503:	mov    DWORD PTR [eax],edi
  403505:	js     0x40357c
  403507:	fnstcw WORD PTR ds:0x76f8af25
  40350d:	push   es
  40350e:	pop    ds
  40350f:	mov    BYTE PTR fs:[ebp-0x2ceb539a],bh
  403516:	shl    ebx,1
  403518:	jg     0x4034a9
  40351a:	out    0xae,eax
  40351c:	mov    eax,0xe4a68acd
  403521:	dec    ebp
  403522:	mov    esi,0xa7af362f
  403527:	adc    al,0x8e
  403529:	mov    ah,0xd1
  40352b:	mov    al,0xe4
  40352d:	sbb    eax,0xf5e17db1
  403532:	dec    edi
  403533:	cmp    eax,0xca38fd51
  403538:	inc    edx
  403539:	lea    edi,[ebx+0x16fd8f08]
  40353f:	gs mov dl,0x86
  403542:	int    0xae
  403544:	bswap  esi
  403546:	sub    al,0x1d
  403548:	jg     0x4035ae
  40354a:	xor    edx,DWORD PTR [ebx]
  40354c:	inc    eax
  40354d:	mov    eax,ds:0x9f43908c
  403552:	pop    esi
  403553:	push   esi
  403554:	inc    edx
  403555:	in     eax,dx
  403556:	ficom  DWORD PTR [ebx]
  403558:	dec    esp
  403559:	and    dh,BYTE PTR [edi]
  40355b:	sbb    dh,BYTE PTR [esi+0x5f6725fa]
  403561:	(bad)  
  403563:	add    DWORD PTR [ebx-0x47],ecx
  403566:	lods   al,BYTE PTR ds:[esi]
  403567:	adc    DWORD PTR [edx-0x52],0x57
  40356b:	in     al,dx
  40356c:	sub    esp,ebx
  40356e:	inc    ecx
  40356f:	or     ch,ah
  403571:	fdivrp st(2),st
  403573:	shr    BYTE PTR [ebx-0x3c70024a],cl
  403579:	repnz sub eax,0x2ea465e0
  40357f:	xor    eax,0x5450a300
  403584:	lock fdiv st(4),st
  403587:	sbb    al,0x7d
  403589:	into   
  40358a:	bound  ebp,QWORD PTR [ecx-0x7caf1188]
  403590:	cwde   
  403591:	push   edx
  403592:	mov    ch,0x4
  403594:	aam    0x5c
  403596:	pusha  
  403597:	or     ecx,DWORD PTR [ecx]
  403599:	aad    0x88
  40359b:	retf   
  40359c:	adc    BYTE PTR [ebx+ebx*1],ch
  40359f:	clc    
  4035a0:	jmp    0x61c3:0x81f9b1d3
  4035a7:	inc    ebx
  4035a8:	push   cs
  4035a9:	int    0x49
  4035ab:	fwait
  4035ac:	popa   
  4035ad:	and    ah,BYTE PTR [ebp-0x6f812f47]
  4035b3:	pop    edx
  4035b4:	sar    DWORD PTR fs:[ecx+0x27669ed6],1
  4035bb:	dec    ebx
  4035bc:	fild   QWORD PTR [edi-0x55]
  4035bf:	mov    edi,gs
  4035c1:	pop    es
  4035c2:	sub    al,0xd0
  4035c4:	cmp    BYTE PTR [edx-0x76],dh
  4035c7:	sbb    ecx,esi
  4035c9:	mov    ds:0xff2f1f95,al
  4035ce:	mov    ds:0xa4190a8d,eax
  4035d3:	lea    edx,[ebp+0x20]
  4035d6:	add    al,BYTE PTR [edx+esi*2-0x7373cd3f]
  4035dd:	call   0xa2a45c7e
  4035e2:	outs   dx,BYTE PTR ds:[esi]
  4035e3:	push   ss
  4035e4:	ror    DWORD PTR [edi-0x3e],0x7b
  4035e8:	aas    
  4035e9:	(bad)  
  4035eb:	call   0x20c50ac9
  4035f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f1:	int    0xe
  4035f3:	out    dx,eax
  4035f4:	pop    es
  4035f5:	lods   al,BYTE PTR ds:[esi]
  4035f6:	test   al,0x0
  4035f8:	out    0x92,eax
  4035fa:	pop    esp
  4035fb:	mov    ebx,0xf9b06a51
  403600:	inc    esi
  403601:	pushf  
  403602:	(bad)  
  403603:	jp     0x4035c6
  403605:	mov    al,0xe3
  403607:	mov    al,0xc8
  403609:	push   0xcd34bf4d
  40360e:	sbb    dl,dh
  403610:	or     ch,BYTE PTR [ecx]
  403612:	cmp    eax,DWORD PTR [esi+0x3e310214]
  403618:	adc    DWORD PTR [ebp+eax*8+0x775eac75],ebp
  40361f:	add    eax,0x33f5344e
  403624:	rol    ch,1
  403626:	mov    al,ds:0x912a508f
  40362b:	lods   eax,DWORD PTR ds:[esi]
  40362c:	mov    cl,0x73
  40362e:	adc    DWORD PTR es:[ebx],ebp
  403631:	repnz gs in al,0xe6
  403635:	add    edx,DWORD PTR [ecx-0x1b]
  403638:	jbe    0x403652
  40363a:	outs   dx,BYTE PTR ds:[esi]
  40363b:	fst    DWORD PTR [esi]
  40363d:	jo     0x4035c7
  40363f:	mov    ch,0xba
  403641:	loopne 0x40366e
  403643:	xchg   edi,eax
  403644:	idiv   DWORD PTR [ecx]
  403646:	mov    cl,0xc5
  403648:	inc    ebp
  403649:	push   cs
  40364a:	add    DWORD PTR [edx],0x5dd9b603
  403650:	std    
  403651:	inc    eax
  403652:	(bad)  
  403653:	int3   
  403654:	add    cl,BYTE PTR [ecx]
  403656:	sar    cl,1
  403658:	mov    eax,ds:0x7998fa0
  40365d:	and    eax,0x5ebe8288
  403662:	cmpxchg DWORD PTR [ecx+0x45],edi
  403666:	push   ebx
  403667:	call   0x5813:0x8e690611
  40366e:	dec    esp
  40366f:	xchg   DWORD PTR [ebx+edx*1+0x7f91040c],eax
  403676:	inc    edi
  403677:	jmp    0x403685
  403679:	xor    DWORD PTR [ebx-0x1d419fda],0x11ba5242
  403683:	jmp    0xf3122c07
  403688:	mov    ebx,0x274fc4ad
  40368d:	cwde   
  40368e:	mov    ebp,0xccfed315
  403693:	push   esi
  403694:	cli    
  403695:	(bad)  
  403696:	dec    esp
  403697:	push   eax
  403698:	scas   al,BYTE PTR es:[edi]
  403699:	or     cl,BYTE PTR [eax-0x1bea5dd8]
  40369f:	scas   eax,DWORD PTR es:[edi]
  4036a0:	jae    0x40371b
  4036a2:	in     al,0xec
  4036a4:	popf   
  4036a5:	mov    ds:0x960324d,eax
  4036aa:	xchg   BYTE PTR [ebp-0x361cd610],dh
  4036b0:	in     eax,dx
  4036b1:	adc    DWORD PTR [edx+0x3318d079],esp
  4036b7:	mov    dl,0x2c
  4036b9:	fadd   QWORD PTR [ebx-0x632d0697]
  4036bf:	jb     0x403722
  4036c1:	sar    bh,1
  4036c3:	xchg   BYTE PTR [esi],al
  4036c5:	clc    
  4036c6:	mov    WORD PTR [esi+edx*2+0x10],?
  4036ca:	inc    ebx
  4036cb:	shl    DWORD PTR [edx+0x1c],cl
  4036ce:	idiv   DWORD PTR [edx+0x8]
  4036d1:	loop   0x403674
  4036d3:	and    bl,ch
  4036d5:	leave  
  4036d6:	int    0xa0
  4036d8:	leave  
  4036d9:	test   al,0xd3
  4036db:	scas   al,BYTE PTR es:[edi]
  4036dc:	mov    ah,0x39
  4036de:	aaa    
  4036df:	gs ja  0x40375f
  4036e2:	aas    
  4036e3:	pop    es
  4036e4:	std    
  4036e5:	fidiv  DWORD PTR gs:[edi-0x26]
  4036e9:	jge    0x40369e
  4036eb:	outs   dx,DWORD PTR ds:[esi]
  4036ec:	xchg   esp,eax
  4036ed:	std    
  4036ee:	loope  0x403746
  4036f0:	cmp    esi,0x2e
  4036f3:	addr16 pop ebx
  4036f5:	xchg   edi,eax
  4036f6:	dec    esi
  4036f7:	mov    ah,0x40
  4036f9:	outs   dx,DWORD PTR ds:[esi]
  4036fa:	fs xchg esp,eax
  4036fc:	mov    DWORD PTR [eax],edx
  4036fe:	aaa    
  4036ff:	dec    edi
  403700:	jl     0x4036b3
  403702:	or     ah,bl
  403704:	(bad)  
  403705:	loopne 0x403733
  403707:	inc    eax
  403708:	out    dx,al
  403709:	mov    BYTE PTR [ebp+0x25325627],dl
  40370f:	sbb    eax,0x81b85b3a
  403714:	arpl   bp,di
  403716:	fistp  WORD PTR [ebx+0x1ee387b0]
  40371c:	pop    ebx
  40371d:	into   
  40371e:	clc    
  40371f:	imul   ebx,ecx,0x20
  403722:	xchg   BYTE PTR [esi+0x634ff54e],ch
  403728:	fiadd  WORD PTR [edi]
  40372a:	mov    ds:0xa0fa8d07,al
  40372f:	push   0x434d3259
  403734:	cs aam 0x23
  403737:	arpl   WORD PTR [edx],di
  403739:	sar    ch,cl
  40373b:	outs   dx,BYTE PTR ds:[esi]
  40373c:	mov    bh,0xfa
  40373e:	gs mov bh,0xbb
  403741:	mov    al,BYTE PTR [ecx]
  403743:	ds out dx,al
  403745:	mov    esp,0xf8ff8112
  40374a:	fst    QWORD PTR [eax+0x5f]
  40374d:	imul   BYTE PTR [eax+0xf]
  403750:	mov    edi,0x79f173c9
  403755:	and    eax,0x3e
  403758:	push   ebx
  403759:	pop    esp
  40375a:	jo     0x40370a
  40375c:	add    ecx,DWORD PTR [eax+esi*4]
  40375f:	xchg   esi,eax
  403760:	mov    dl,BYTE PTR [eax+0x75]
  403763:	int3   
  403764:	xor    DWORD PTR [ebx+0x249ef012],ecx
  40376a:	ret    
  40376b:	je     0x40377d
  40376d:	sbb    al,0xb9
  40376f:	adc    BYTE PTR [ebp+0x63],dl
  403772:	mov    ebx,0x82db2651
  403777:	adc    ah,BYTE PTR [edi-0x62aff0bd]
  40377d:	fild   DWORD PTR [edx]
  40377f:	or     ah,BYTE PTR [ecx+0x27]
  403782:	stc    
  403783:	ss ins DWORD PTR es:[edi],dx
  403785:	cmp    al,0xc1
  403787:	lods   eax,DWORD PTR ds:[esi]
  403788:	fist   DWORD PTR [edx+edx*1]
  40378b:	es push 0xfffffffa
  40378e:	xchg   ecx,eax
  40378f:	rol    DWORD PTR [edi],1
  403791:	fmul   st(7),st
  403793:	fsubr  DWORD PTR [ebx+edx*2-0x36]
  403797:	sbb    eax,0x7d400b5c
  40379c:	mov    bl,0x18
  40379e:	enter  0x1b2d,0x49
  4037a2:	sub    al,0x0
  4037a4:	dec    ebp
  4037a5:	sti    
  4037a6:	or     DWORD PTR [ebx+0x38],0x20
  4037aa:	aam    0x8d
  4037ac:	call   FWORD PTR [ebx+0x6]
  4037af:	sub    eax,0xd805ae1d
  4037b4:	fdivr  DWORD PTR [esi+eiz*1-0xb]
  4037b8:	dec    eax
  4037b9:	inc    esi
  4037ba:	push   ebx
  4037bb:	mov    al,ds:0x782603c8
  4037c0:	leave  
  4037c1:	in     eax,0x2e
  4037c3:	push   esp
  4037c4:	mov    dh,0x95
  4037c6:	cld    
  4037c7:	cmp    ebp,DWORD PTR [edx]
  4037c9:	dec    edx
  4037ca:	jno    0x40381c
  4037cc:	mov    al,al
  4037ce:	das    
  4037cf:	shl    BYTE PTR [eax],0x4d
  4037d2:	in     eax,0xf1
  4037d4:	xor    eax,0x43bd3452
  4037d9:	cmp    BYTE PTR [ebx-0x3cfdfd7a],ah
  4037df:	sbb    dl,BYTE PTR [ebp-0x4aaf730]
  4037e5:	inc    ebx
  4037e6:	in     al,0x84
  4037e8:	daa    
  4037e9:	gs cmp al,0x51
  4037ec:	pop    edx
  4037ed:	inc    ebx
  4037ee:	pop    esi
  4037ef:	push   es
  4037f0:	sbb    al,0x42
  4037f2:	(bad)  [ecx+edx*1-0x511dcba9]
  4037f9:	dec    ebx
  4037fa:	call   0x94bb3863
  4037ff:	xchg   edx,eax
  403800:	cld    
  403801:	mov    dh,0xef
  403803:	mov    DWORD PTR [ebx+eiz*8+0x564be331],ebp
  40380a:	xor    BYTE PTR [edx-0x6daaa9b1],bh
  403810:	fadd   QWORD PTR [esi]
  403812:	mov    ebp,0xf7ad03d8
  403817:	fisttp WORD PTR [edi+0x2]
  40381a:	stc    
  40381b:	pushf  
  40381c:	enter  0x24aa,0xfc
  403820:	in     al,0x7
  403822:	adc    ebp,edi
  403824:	add    BYTE PTR ds:0x558eccfd,0x87
  40382b:	and    DWORD PTR [ebp-0x23a95f6],0x2
  403832:	add    BYTE PTR [esi],dl
  403834:	test   ebp,ecx
  403836:	sti    
  403837:	mov    BYTE PTR [edx+0x263a5c31],cl
  40383d:	pop    edi
  40383e:	aas    
  40383f:	cmp    al,0x34
  403841:	push   ds
  403842:	les    edi,FWORD PTR [esp+esi*8]
  403845:	and    ah,bh
  403847:	jecxz  0x403834
  403849:	push   esp
  40384a:	jmp    0x403829
  40384c:	gs pop ds
  40384e:	xor    DWORD PTR [ebx+ecx*1-0x64482ca8],eax
  403855:	xor    eax,0x30683ced
  40385a:	dec    edx
  40385b:	xor    dh,BYTE PTR [eax]
  40385d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40385e:	ins    DWORD PTR es:[edi],dx
  40385f:	jle    0x40383f
  403861:	pop    esi
  403862:	add    DWORD PTR [eax-0x147ddfb6],ecx
  403868:	in     eax,dx
  403869:	cdq    
  40386a:	jnp    0x4038df
  40386c:	and    BYTE PTR [ebx+ebx*8+0x45],bh
  403870:	cld    
  403871:	(bad)  
  403872:	rol    BYTE PTR [eax],1
  403874:	mov    eax,ds:0x58ce11aa
  403879:	stos   DWORD PTR es:[edi],eax
  40387a:	std    
  40387b:	mov    esi,0xa4ea56bb
  403880:	xchg   ebp,eax
  403881:	pop    ebx
  403882:	sbb    ah,ah
  403884:	push   esi
  403885:	mov    al,0x8e
  403887:	mov    BYTE PTR [edi],ch
  403889:	(bad)  
  40388a:	jo     0x4038d3
  40388c:	xor    bh,0x31
  40388f:	test   BYTE PTR [esi],cl
  403891:	es dec eax
  403893:	fadd   st(7),st
  403895:	outs   dx,BYTE PTR ds:[esi]
  403896:	es dec eax
  403898:	loop   0x4038b3
  40389a:	iret   
  40389b:	sub    ebp,ebp
  40389d:	mov    ah,BYTE PTR [eax]
  40389f:	and    eax,0xc1841aa5
  4038a4:	in     al,0xa7
  4038a6:	dec    ecx
  4038a7:	jb     0x403925
  4038a9:	sbb    DWORD PTR [esi-0x3edff2e3],esp
  4038af:	int3   
  4038b0:	jbe    0x403835
  4038b2:	out    dx,al
  4038b3:	push   0x27
  4038b5:	mov    dl,0xd
  4038b7:	mov    al,0x1f
  4038b9:	xor    BYTE PTR [eax+esi*1-0x70],0x83
  4038be:	dec    eax
  4038bf:	cmp    esi,DWORD PTR [eax-0x4474a18d]
  4038c5:	sbb    cl,BYTE PTR [edx+0x70]
  4038c8:	dec    ecx
  4038c9:	icebp  
  4038ca:	xchg   BYTE PTR [esi+ecx*8+0x76e8b88d],cl
  4038d1:	dec    edi
  4038d2:	inc    esp
  4038d3:	xor    bl,bh
  4038d5:	sbb    ah,0xf
  4038d8:	test   eax,0x78638c35
  4038dd:	push   esp
  4038de:	xor    dl,BYTE PTR [edi+0x52162c04]
  4038e4:	xor    edx,DWORD PTR [ecx+0xdecd8ea]
  4038ea:	xchg   ebx,eax
  4038eb:	popa   
  4038ec:	fsubr  DWORD PTR [ecx]
  4038ee:	cmp    al,0x59
  4038f0:	sbb    dl,dh
  4038f2:	adc    BYTE PTR [edi],0x7e
  4038f5:	jns    0x403905
  4038f7:	inc    ebp
  4038f8:	push   ebx
  4038f9:	jmp    0x683a20b0
  4038fe:	pop    ebp
  4038ff:	mov    ds:0x2164060c,al
  403904:	mov    es,WORD PTR [edi]
  403906:	cmc    
  403907:	mov    ah,0xa3
  403909:	xchg   esi,eax
  40390a:	ss (bad) 
  40390c:	in     eax,0x15
  40390e:	adc    al,0x61
  403910:	test   esi,ebx
  403912:	add    dl,dl
  403914:	call   0x394d175b
  403919:	retf   
  40391a:	sub    BYTE PTR [ebx],dl
  40391c:	(bad)  
  40391d:	xor    bl,0x3d
  403920:	pusha  
  403921:	rep stos BYTE PTR es:[edi],al
  403923:	push   ds
  403924:	or     al,0xf3
  403926:	and    DWORD PTR [edi+0x27a3e57e],0xccb9b6b7
  403930:	sub    DWORD PTR [esi],0x873e8909
  403936:	leave  
  403937:	call   0xe590380
  40393c:	push   0x4c
  40393e:	jnp    0x403976
  403940:	push   ebx
  403941:	push   ebp
  403942:	pop    eax
  403943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403944:	jle    0x403912
  403946:	adc    ah,BYTE PTR [edx+edi*1-0x528426ee]
  40394d:	xchg   ecx,eax
  40394e:	or     eax,0x1dbd2768
  403953:	stos   DWORD PTR es:[edi],eax
  403954:	jg     0x40393b
  403956:	sbb    al,0xd5
  403958:	int    0x51
  40395a:	inc    eax
  40395b:	out    dx,al
  40395c:	xchg   DWORD PTR [eax+edi*2-0x7a],edi
  403960:	(bad)  
  403961:	popa   
  403962:	xchg   esi,eax
  403963:	(bad)  
  403964:	push   esi
  403965:	inc    esp
  403966:	(bad)  
  403967:	je     0x4038fb
  403969:	hlt    
  40396a:	outs   dx,DWORD PTR ds:[esi]
  40396b:	div    BYTE PTR [edi+0x56]
  40396e:	push   esp
  40396f:	or     bh,BYTE PTR [eax+edi*2+0x29]
  403973:	sub    al,0xdc
  403975:	daa    
  403976:	aas    
  403977:	pop    es
  403978:	lds    ecx,FWORD PTR [esp+ebp*8+0x87ee9b]
  40397f:	mov    cl,0x6a
  403981:	cli    
  403982:	sub    bh,ch
  403984:	sub    eax,esp
  403986:	or     DWORD PTR [edx+eax*1+0x5e3d4f9a],ebx
  40398d:	aam    0x62
  40398f:	ror    BYTE PTR [edx],0x25
  403992:	int3   
  403993:	mov    dh,0xa6
  403995:	sub    ch,BYTE PTR [esi-0x4a]
  403998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403999:	scas   eax,DWORD PTR es:[edi]
  40399a:	mov    BYTE PTR [edx],bl
  40399c:	cmp    edi,DWORD PTR [eax-0x79ba21f4]
  4039a2:	inc    edi
  4039a3:	pop    ss
  4039a4:	xchg   DWORD PTR [ecx+0x303ca4fa],edx
  4039aa:	jmp    0x40394d
  4039ac:	sbb    al,0xb
  4039ae:	lods   eax,DWORD PTR ds:[esi]
  4039af:	jo     0x403986
  4039b1:	sub    dh,dh
  4039b3:	pop    ss
  4039b4:	popf   
  4039b5:	das    
  4039b6:	call   0x3554:0x8ab6f91
  4039bd:	ret    
  4039be:	fsub   QWORD PTR [edx+0x31]
  4039c1:	cmp    dl,BYTE PTR [eax+0x78]
  4039c4:	push   ds
  4039c5:	cwde   
  4039c6:	icebp  
  4039c7:	jns    0x4039ea
  4039c9:	je     0x403a2b
  4039cb:	cmp    DWORD PTR [esp+eax*1+0x6327e752],esi
  4039d2:	xchg   edi,eax
  4039d3:	xor    eax,0x7557e3e3
  4039d8:	daa    
  4039d9:	xchg   BYTE PTR [ebx+0xf8d0917],ch
  4039df:	ret    
  4039e0:	adc    edx,DWORD PTR [ebp+0x4e]
  4039e3:	pusha  
  4039e4:	mov    dl,0x19
  4039e6:	je     0x403974
  4039e8:	pop    ebp
  4039e9:	add    eax,0x5d883bf3
  4039ee:	mov    DWORD PTR fs:[eax],edi
  4039f1:	push   ecx
  4039f2:	gs pop ecx
  4039f4:	cli    
  4039f5:	fld    TBYTE PTR [eax]
  4039f7:	add    al,0x97
  4039f9:	sub    edi,DWORD PTR [ecx-0x202b8cf1]
  4039ff:	pop    esp
  403a00:	call   0x6340:0x52a0eb9a
  403a07:	outs   dx,BYTE PTR ds:[esi]
  403a08:	pop    esp
  403a09:	out    dx,eax
  403a0a:	pop    ecx
  403a0b:	imul   edi,esp,0x59
  403a0e:	sbb    al,0x34
  403a10:	bound  ecx,QWORD PTR [eax-0x2af56a4]
  403a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a18:	xchg   ecx,eax
  403a19:	test   al,0x2c
  403a1b:	call   0x32f4:0x65bb157
  403a22:	leave  
  403a23:	adc    bl,BYTE PTR [edx+ebx*8-0x4cc724e5]
  403a2a:	xchg   BYTE PTR [eax],ah
  403a2c:	xor    BYTE PTR [ebx-0x1e],bl
  403a2f:	idiv   esp
  403a31:	loop   0x4039b6
  403a33:	jbe    0x4039c1
  403a35:	(bad)  
  403a36:	vpcmpeqw ymm0,ymm3,YMMWORD PTR [esi+0x35]
  403a3b:	pop    esp
  403a3c:	scas   al,BYTE PTR es:[edi]
  403a3d:	mov    eax,0xb2fb2b8
  403a42:	adc    ecx,DWORD PTR [edi-0x24af7e2c]
  403a48:	dec    eax
  403a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a4a:	enter  0xcccc,0xc7
  403a4e:	xchg   esi,eax
  403a4f:	jno    0x403acb
  403a51:	add    BYTE PTR [esi+0x36efeb49],ch
  403a57:	repz pop esp
  403a59:	inc    eax
  403a5a:	sbb    DWORD PTR [ebp-0x67],edi
  403a5d:	jp     0x403a1b
  403a5f:	fst    QWORD PTR [edi+0x6]
  403a62:	sbb    al,0x57
  403a64:	and    esi,DWORD PTR [esi-0x30]
  403a67:	mov    ah,0xe4
  403a69:	adc    BYTE PTR [ebx],dh
  403a6b:	inc    eax
  403a6c:	out    dx,eax
  403a6d:	lods   eax,DWORD PTR ds:[esi]
  403a6e:	lock std 
  403a70:	dec    esp
  403a71:	fnsave [ebx]
  403a73:	(bad)  
  403a74:	shl    DWORD PTR [ebp-0x602897fb],cl
  403a7a:	(bad)  
  403a7b:	mov    edx,0x59f17f27
  403a80:	lahf   
  403a81:	(bad)  
  403a82:	dec    esi
  403a83:	inc    esp
  403a84:	jns    0x403aef
  403a86:	sbb    cl,al
  403a88:	jg     0x403a42
  403a8a:	not    ebx
  403a8c:	je     0x403acd
  403a8e:	rcl    BYTE PTR [edi+0xd8c4eaf],0xab
  403a95:	sbb    eax,0xc67ae8c7
  403a9a:	popf   
  403a9b:	je     0x403a4f
  403a9d:	xchg   edx,eax
  403a9e:	lods   al,BYTE PTR ds:[esi]
  403a9f:	add    ebp,DWORD PTR [edx-0x50cb32f5]
  403aa5:	add    al,0xf6
  403aa7:	jmp    0xcb28:0x8abaa77a
  403aae:	cmp    DWORD PTR [edi+0x1900bc2d],eax
  403ab4:	jno    0x403adb
  403ab6:	sahf   
  403ab7:	ficomp WORD PTR [edx-0x6e44a45c]
  403abd:	scas   eax,DWORD PTR es:[edi]
  403abe:	stos   DWORD PTR es:[edi],eax
  403abf:	jmp    0x930c:0xa0706c36
  403ac6:	dec    bl
  403ac8:	cmp    al,0xc
  403aca:	push   ss
  403acb:	inc    edx
  403acc:	lahf   
  403acd:	sbb    bh,ah
  403acf:	into   
  403ad0:	sbb    eax,0xb41a8c2
  403ad5:	mov    al,0x33
  403ad7:	jo     0x403a95
  403ad9:	aad    0x42
  403adb:	inc    edx
  403adc:	inc    edx
  403add:	sahf   
  403ade:	test   al,0x1f
  403ae0:	pop    ds
  403ae1:	xor    DWORD PTR [ebx-0xc975f71],ebx
  403ae7:	in     al,dx
  403ae8:	call   0x4ef9a067
  403aed:	pop    esi
  403aee:	test   al,0xb7
  403af0:	fadd   DWORD PTR [eax-0x7d]
  403af3:	(bad)  
  403af4:	fdivp  st(2),st
  403af6:	jle    0x403aef
  403af8:	push   eax
  403af9:	ins    BYTE PTR es:[edi],dx
  403afa:	iret   
  403afb:	js     0x403b16
  403afd:	mov    ds:0xdeae5bce,eax
  403b02:	dec    ebp
  403b03:	mov    fs,edx
  403b05:	cld    
  403b06:	fild   WORD PTR [edi-0x4179b035]
  403b0c:	dec    edx
  403b0d:	mov    eax,ds:0x12a00089
  403b12:	sbb    al,0xb2
  403b14:	cmp    bh,dh
  403b16:	pop    ss
  403b17:	ins    DWORD PTR es:[edi],dx
  403b18:	cmc    
  403b19:	scas   eax,DWORD PTR es:[edi]
  403b1a:	and    ah,BYTE PTR [ecx-0x36]
  403b1d:	xchg   esi,eax
  403b1e:	aas    
  403b1f:	xor    DWORD PTR [esi-0xc49f1ca],esp
  403b25:	(bad)  
  403b26:	test   DWORD PTR [ecx-0x1a],0xe6815bf
  403b2d:	sub    ch,bl
  403b2f:	ss pop eax
  403b31:	(bad)  
  403b32:	retf   0x3dbc
  403b35:	cs es sub bl,bl
  403b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b3a:	inc    ecx
  403b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b3c:	inc    eax
  403b3d:	inc    DWORD PTR [edi+0x2431499f]
  403b43:	dec    ebp
  403b44:	fisub  DWORD PTR [esi-0x2d110303]
  403b4a:	fistp  QWORD PTR [eax-0x15afe040]
  403b50:	enter  0xb6b1,0xe8
  403b54:	hlt    
  403b55:	loop   0x403b65
  403b57:	lods   al,BYTE PTR ds:[esi]
  403b58:	in     eax,0xc1
  403b5a:	adc    BYTE PTR [eax+0xdcb8982],ah
  403b60:	inc    ecx
  403b61:	cli    
  403b62:	xor    bh,BYTE PTR [ebp+0x44]
  403b65:	aas    
  403b66:	clc    
  403b67:	push   eax
  403b68:	add    eax,0xea477fbf
  403b6d:	(bad)  
  403b6e:	stos   DWORD PTR es:[edi],eax
  403b6f:	push   esi
  403b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b71:	dec    edx
  403b72:	aad    0x1c
  403b74:	dec    esp
  403b75:	ins    BYTE PTR es:[edi],dx
  403b76:	test   edi,ecx
  403b78:	pop    ebx
  403b79:	nop
  403b7a:	cmp    al,bl
  403b7c:	add    al,0x56
  403b7e:	pop    ds
  403b7f:	lahf   
  403b80:	std    
  403b81:	shr    BYTE PTR [edi],cl
  403b83:	das    
  403b84:	mov    DWORD PTR [ebx+0x31332f8e],edx
  403b8a:	xor    al,BYTE PTR [esi+eiz*1+0x64]
  403b8e:	ret    0x72dd
  403b91:	arpl   WORD PTR [edi+0x4c],cx
  403b94:	mov    ds:0x6a954a38,al
  403b99:	sbb    BYTE PTR [ecx-0x9],dh
  403b9c:	test   BYTE PTR [eax+0x60],0x1c
  403ba0:	jb     0x403b93
  403ba2:	ins    BYTE PTR es:[edi],dx
  403ba3:	mov    ds:0x4fb1362b,al
  403ba8:	add    edx,edx
  403baa:	jnp    0x403b76
  403bac:	and    al,0x2b
  403bae:	scas   eax,DWORD PTR es:[edi]
  403baf:	push   es
  403bb0:	mov    edi,0x376cdbec
  403bb5:	add    BYTE PTR [ebp-0x26b35e00],ah
  403bbb:	jmp    0x2ff7723e
  403bc0:	pop    es
  403bc1:	adc    ch,0x5e
  403bc4:	sbb    BYTE PTR [edi+0x3645331],cl
  403bca:	add    eax,0xe89f4b30
  403bcf:	sahf   
  403bd0:	xchg   esp,eax
  403bd1:	or     al,0x1d
  403bd3:	mov    eax,ds:0x20166405
  403bd8:	adc    al,0xfa
  403bda:	adc    dl,BYTE PTR [ebx+ecx*4]
  403bdd:	inc    edi
  403bde:	pop    ss
  403bdf:	loopne 0x403b68
  403be1:	pop    ebx
  403be2:	cmp    al,0x19
  403be4:	retf   
  403be5:	clc    
  403be6:	cmp    eax,DWORD PTR [edx-0x6d0c68fe]
  403bec:	sub    ch,BYTE PTR [ebp+0x378c9967]
  403bf2:	push   eax
  403bf3:	aam    0x8f
  403bf5:	mov    WORD PTR [ecx-0x33],es
  403bf8:	sahf   
  403bf9:	add    DWORD PTR [esi+edi*4+0x1b],edi
  403bfd:	(bad)  
  403bfe:	nop
  403bff:	mov    ebx,0x78bc1319
  403c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c05:	adc    al,0xdf
  403c07:	xchg   ecx,eax
  403c08:	mov    bl,0x5b
  403c0a:	imul   ecx,ebx,0xb
  403c0d:	lds    ecx,FWORD PTR [eax+0x47]
  403c10:	and    DWORD PTR [edi],esi
  403c12:	ins    BYTE PTR es:[edi],dx
  403c13:	lods   eax,DWORD PTR ds:[esi]
  403c14:	aas    
  403c15:	aam    0xaa
  403c17:	push   edi
  403c18:	inc    ebp
  403c19:	push   ss
  403c1a:	xor    eax,edi
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x56dd8915
  403dc4:	stc    
  403dc5:	ret    0x4bec
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x32
  403dd0:	and    al,0xde
  403dd2:	bound  ebp,QWORD PTR [ebx+ebx*4+0x69]
  403dd6:	inc    ebx
  403dd7:	daa    
  403dd8:	xchg   ebp,eax
  403dd9:	adc    ch,BYTE PTR [ecx+0xdfbef47]
  403ddf:	mov    edx,0x2f04647f
  403de4:	(bad)  
  403de6:	pop    edx
  403de7:	(bad)  
  403de8:	daa    
  403de9:	stc    
  403dea:	iret   
  403deb:	je     0x403e59
  403ded:	pop    esi
  403dee:	push   ds
  403def:	popa   
  403df0:	leave  
  403df1:	jl     0x403dda
  403df3:	xchg   DWORD PTR [edi],ebx
  403df5:	jae    0x403e5f
  403df7:	mov    WORD PTR [edi-0x8cecfc7],?
  403dfd:	out    0x69,eax
  403dff:	jge    0x403e00
  403e01:	inc    ebx
  403e02:	fisubr WORD PTR [esi+0x73]
  403e05:	inc    ebx
  403e06:	sbb    eax,0xc9aa3f3d
  403e0b:	mov    dh,0x66
  403e0d:	or     DWORD PTR [ecx+0x1],esp
  403e10:	sbb    esp,edx
  403e12:	xor    eax,0x19c0a28
  403e17:	and    edi,edx
  403e19:	(bad)  
  403e1a:	retf   0x202f
  403e1d:	inc    ebx
  403e1e:	and    ecx,DWORD PTR [edx-0x20ed8f4a]
  403e24:	mov    eax,ds:0x2fbc272a
  403e29:	xchg   BYTE PTR ds:0xfbd14c5d,ch
  403e2f:	imul   esi,DWORD PTR [ebx],0xffffff80
  403e32:	mov    bh,0x71
  403e34:	sti    
  403e35:	dec    ebp
  403e36:	sub    DWORD PTR [esi+0x10e57d7],0x33
  403e3d:	pop    ebx
  403e3e:	out    0x42,al
  403e40:	or     eax,0x793dda29
  403e45:	lods   eax,DWORD PTR ds:[esi]
  403e46:	mov    bl,0x5a
  403e48:	mov    ah,0xa6
  403e4a:	dec    ebx
  403e4b:	sub    bh,BYTE PTR [ecx]
  403e4d:	pop    edi
  403e4e:	mov    esp,0x8f14591c
  403e53:	dec    ebp
  403e54:	cmp    BYTE PTR [edi],ch
  403e56:	sub    edx,DWORD PTR [edi]
  403e58:	jns    0x403ec8
  403e5a:	xor    eax,DWORD PTR [edx]
  403e5c:	sti    
  403e5d:	imul   edi,DWORD PTR [ecx],0x242145f2
  403e63:	jle    0x403e2a
  403e65:	loope  0x403e32
  403e67:	cmp    cl,ah
  403e69:	out    dx,eax
  403e6a:	mov    edi,0x23e5bcc0
  403e6f:	dec    ecx
  403e70:	jns    0x403ee4
  403e72:	push   edx
  403e73:	cmp    BYTE PTR [edi],dh
  403e75:	mov    cl,0xe0
  403e77:	push   ebp
  403e78:	lods   al,BYTE PTR ds:[esi]
  403e79:	sub    BYTE PTR ds:0xc06ceeaa,ah
  403e7f:	mov    bl,0x52
  403e81:	cmp    esp,DWORD PTR [edx-0x6d]
  403e84:	cli    
  403e85:	call   0x1873:0x3ba552c
  403e8c:	ja     0x403eb6
  403e8e:	add    esi,DWORD PTR [edi]
  403e90:	xor    eax,DWORD PTR [eax-0x4fb4e6d]
  403e96:	(bad)  
  403e97:	daa    
  403e98:	loopne 0x403eb7
  403e9a:	pop    eax
  403e9b:	pop    ecx
  403e9c:	sbb    eax,0x1135840b
  403ea1:	jns    0x403e62
  403ea3:	jg     0x403e4e
  403ea5:	cmp    edi,edx
  403ea7:	fwait
  403ea8:	ret    0x2567
  403eab:	ins    BYTE PTR es:[edi],dx
  403eac:	shl    bh,0x11
  403eaf:	xchg   esi,eax
  403eb0:	dec    edx
  403eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb2:	clc    
  403eb3:	inc    ecx
  403eb4:	pop    ds
  403eb5:	xchg   ecx,eax
  403eb6:	cmp    al,0x31
  403eb8:	into   
  403eb9:	mov    edi,0x128021ea
  403ebe:	enter  0x13ea,0x10
  403ec2:	push   edi
  403ec3:	scas   eax,DWORD PTR es:[edi]
  403ec4:	push   ebx
  403ec5:	in     al,0x37
  403ec7:	cli    
  403ec8:	cmp    cl,BYTE PTR [edi+ebx*4-0x38]
  403ecc:	xor    DWORD PTR [esi],edi
  403ece:	dec    edx
  403ecf:	push   eax
  403ed0:	mov    ds:0x4dca8dd9,eax
  403ed5:	push   0xffffffff
  403ed7:	shl    DWORD PTR [edx],1
  403ed9:	int3   
  403eda:	shl    BYTE PTR [eax],1
  403edc:	loope  0x403f20
  403ede:	xchg   ecx,eax
  403edf:	sti    
  403ee0:	and    dh,bh
  403ee2:	jmp    0x8061b7f9
  403ee7:	mov    ds:0x2098edf3,eax
  403eec:	xlat   BYTE PTR ss:[ebx]
  403eee:	leave  
  403eef:	fwait
  403ef0:	or     DWORD PTR [ecx-0x3319155],ebp
  403ef6:	dec    eax
  403ef7:	dec    edx
  403ef8:	test   DWORD PTR [esi],edi
  403efa:	mov    bh,0xac
  403efc:	sbb    dh,BYTE PTR ds:0x6dd0aad2
  403f02:	xchg   esi,eax
  403f03:	stc    
  403f04:	imul   ebp,DWORD PTR [ecx+0x68],0xf52cdff
  403f0b:	pop    ds
  403f0c:	mov    eax,ds:0xef330a8e
  403f11:	clc    
  403f12:	add    al,0x53
  403f14:	push   esp
  403f15:	sbb    DWORD PTR [edx-0x80],ebp
  403f18:	cmp    DWORD PTR [ecx],0x8955c6ed
  403f1e:	sti    
  403f1f:	push   0xfffffff7
  403f21:	add    eax,0xf855029e
  403f26:	stos   DWORD PTR es:[edi],eax
  403f27:	shl    ch,1
  403f29:	mov    ah,0xe0
  403f2b:	fld    TBYTE PTR [ebp+0x28d33161]
  403f31:	sub    DWORD PTR [ecx+0x30636b2e],esi
  403f37:	push   edx
  403f38:	add    ebp,DWORD PTR [ecx+0x62]
  403f3b:	cdq    
  403f3c:	ret    
  403f3d:	int    0xd0
  403f3f:	jns    0x403f44
  403f41:	xchg   ch,bl
  403f43:	jg     0x403fa0
  403f45:	stos   BYTE PTR es:[edi],al
  403f46:	jge    0x403f14
  403f48:	xor    bh,BYTE PTR [ecx+edx*1-0x6693fcc5]
  403f4f:	ins    DWORD PTR es:[edi],dx
  403f50:	lds    ebp,FWORD PTR [ecx+ecx*4]
  403f53:	xchg   BYTE PTR [edx],dh
  403f55:	sub    ch,BYTE PTR [edx+eax*8-0x72]
  403f59:	gs pusha 
  403f5b:	repz adc ebx,ebx
  403f5e:	ss pop esi
  403f60:	(bad)  
  403f61:	rcl    BYTE PTR [ebx],1
  403f63:	xchg   BYTE PTR [esi],cl
  403f65:	aad    0xc3
  403f67:	adc    DWORD PTR [edi-0x4e],ebp
  403f6a:	sbb    bl,BYTE PTR [ecx-0x41]
  403f6d:	repnz cwde 
  403f6f:	(bad)  
  403f70:	neg    BYTE PTR ds:0x63021ccb
  403f76:	pop    esp
  403f77:	sub    DWORD PTR [ecx+esi*1],ecx
  403f7a:	pop    esi
  403f7b:	ja     0x403f50
  403f7d:	pop    ebx
  403f7e:	jge    0x403f72
  403f80:	jmp    esp
  403f82:	fnstenv [ebp+0x1c]
  403f85:	dec    esp
  403f86:	push   eax
  403f87:	fdiv   st(1),st
  403f89:	sahf   
  403f8a:	out    dx,al
  403f8b:	cmp    dl,0xec
  403f8e:	cmp    al,0x85
  403f90:	or     bl,ah
  403f92:	cmp    dh,ch
  403f94:	neg    BYTE PTR [edi+edx*1]
  403f97:	or     BYTE PTR [ecx-0x682159ea],0x3d
  403f9e:	shl    BYTE PTR [edx-0x67a60791],0xc7
  403fa5:	dec    esp
  403fa6:	gs or  al,dh
  403fa9:	ds loop 0x403ff5
  403fac:	add    eax,0x83fb6d78
  403fb1:	daa    
  403fb2:	inc    esi
  403fb3:	inc    ebx
  403fb4:	xchg   ebx,eax
  403fb5:	mov    esp,0xd24a2b08
  403fba:	cmp    DWORD PTR [ebx-0x20d1ffb4],esp
  403fc0:	cli    
  403fc1:	call   0x54f8:0xdecac6dc
  403fc8:	fsub   st(6),st
  403fca:	mov    cl,0x60
  403fcc:	sbb    dl,BYTE PTR [ebp+0x28091908]
  403fd2:	sub    eax,0x40f4109b
  403fd7:	push   0x47
  403fd9:	imul   esi,DWORD PTR [esp+edi*4],0xffffffc2
  403fdd:	sub    al,0x3
  403fdf:	sub    BYTE PTR [edx],dh
  403fe1:	lods   al,BYTE PTR ds:[esi]
  403fe2:	mov    edi,0x7840fd1e
  403fe7:	out    dx,al
  403fe8:	sti    
  403fe9:	mov    ds:0xf05ff9e1,al
  403fee:	jl     0x403f9d
  403ff0:	ds out dx,al
  403ff2:	xchg   ecx,eax
  403ff3:	cwde   
  403ff4:	inc    edi
  403ff5:	sar    BYTE PTR [edx+0x2291b489],cl
  403ffb:	ins    BYTE PTR es:[edi],dx
  403ffc:	pop    edx
  403ffd:	cdq    
  403ffe:	fs jle 0x404020
  404001:	sub    BYTE PTR [ebp-0x3f56496d],al
  404007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404008:	pop    es
  404009:	mov    eax,ds:0x3ecc73e0
  40400e:	or     esi,edx
  404010:	add    ebp,esi
  404012:	js     0x40407f
  404014:	xchg   edx,eax
  404015:	add    eax,0x9e067562
  40401a:	loop   0x403fbc
  40401c:	mov    ebx,0x5866f527
  404021:	fwait
  404022:	bound  edx,QWORD PTR [eax+edx*4]
  404025:	mov    eax,0xf57e32e1
  40402a:	xor    DWORD PTR [esi],esp
  40402c:	mov    ds:0x744f71cd,al
  404031:	dec    ecx
  404032:	out    0xb1,eax
  404034:	fcmovne st,st(7)
  404036:	in     eax,dx
  404037:	jl     0x4040a4
  404039:	in     eax,dx
  40403a:	sub    eax,0x415b731c
  40403f:	ss stc 
  404041:	push   cs
  404042:	test   al,0x9d
  404044:	es js  0x40405e
  404047:	mov    DWORD PTR [edi+0x5d374f2f],edx
  40404d:	add    al,0xc5
  40404f:	out    dx,al
  404050:	(bad)  
  404051:	sbb    dl,cl
  404053:	cmp    eax,0xa8b0e8a7
  404058:	sbb    al,0x2e
  40405a:	cdq    
  40405b:	or     ch,BYTE PTR [edx-0x26]
  40405e:	cmp    ch,ah
  404060:	sub    ah,BYTE PTR [eax+0x20]
  404063:	add    DWORD PTR [ebx+0x3c],ebp
  404066:	(bad)
  404069:	xchg   dl,ah
  40406b:	outs   dx,BYTE PTR ds:[esi]
  40406c:	add    al,0x30
  40406e:	rcr    edx,0xd4
  404071:	cmp    BYTE PTR [eax],bh
  404073:	pop    ebp
  404074:	pushf  
  404075:	in     eax,0x91
  404077:	ja     0x4040ab
  404079:	jl     0x404050
  40407b:	jo     0x4040b3
  40407d:	or     DWORD PTR [ebp-0x7c4b225e],esi
  404083:	fcom   DWORD PTR [eax+edx*4]
  404086:	imul   DWORD PTR [esi-0x4b7a42d6]
  40408c:	enter  0xdab8,0x9
  404090:	int    0x83
  404092:	jmp    0x70ce98f2
  404097:	dec    ecx
  404098:	add    bh,BYTE PTR [esi]
  40409a:	in     al,0xac
  40409c:	push   cs
  40409d:	jbe    0x404115
  40409f:	ss lahf 
  4040a1:	mov    ds:0xd39157f4,al
  4040a6:	jns    0x40411d
  4040a8:	nop
  4040a9:	xor    bl,al
  4040ab:	jp     0x4040d4
  4040ad:	(bad)  
  4040ae:	push   ecx
  4040af:	ds (bad) 
  4040b1:	std    
  4040b2:	(bad)  [esi]
  4040b4:	pop    edi
  4040b5:	inc    ebx
  4040b6:	dec    ebp
  4040b7:	(bad)  
  4040b8:	and    al,0x2d
  4040ba:	cli    
  4040bb:	inc    ecx
  4040bc:	aas    
  4040bd:	xchg   BYTE PTR [ebx+0x39ebd71a],bh
  4040c3:	cwde   
  4040c4:	scas   eax,DWORD PTR es:[edi]
  4040c5:	inc    ebx
  4040c6:	dec    esi
  4040c7:	mov    cl,cl
  4040c9:	xchg   ebx,eax
  4040ca:	shr    BYTE PTR [ebx-0x69],1
  4040cd:	jmp    0x404143
  4040cf:	jmp    0x7167:0xf60b11e1
  4040d6:	leave  
  4040d7:	sar    DWORD PTR [ebx+0x55],1
  4040da:	out    dx,eax
  4040db:	pop    ebp
  4040dc:	pusha  
  4040dd:	daa    
  4040de:	cwde   
  4040df:	ss icebp 
  4040e1:	lahf   
  4040e2:	cmp    BYTE PTR [edi],cl
  4040e4:	sbb    dh,0xf8
  4040e7:	dec    ebp
  4040e8:	fsubr  DWORD PTR [ecx]
  4040ea:	cdq    
  4040eb:	popa   
  4040ec:	ins    BYTE PTR es:[edi],dx
  4040ed:	inc    ecx
  4040ee:	inc    edx
  4040ef:	xchg   BYTE PTR [edi],ch
  4040f1:	out    dx,eax
  4040f2:	pop    ds
  4040f3:	js     0x404132
  4040f5:	pusha  
  4040f6:	mov    ds:0x96fca4a6,al
  4040fb:	and    eax,edi
  4040fd:	bound  esi,QWORD PTR [edi+0xa27630f]
  404103:	or     al,0x81
  404105:	pusha  
  404106:	les    edx,FWORD PTR [ebp-0x69]
  404109:	inc    eax
  40410a:	jmp    0x4040e7
  40410c:	scas   al,BYTE PTR es:[edi]
  40410d:	mov    ch,0x75
  40410f:	sub    al,0x3e
  404111:	push   edx
  404112:	div    DWORD PTR [esi]
  404114:	mov    WORD PTR [esi+0x1e],es
  404117:	leave  
  404118:	add    eax,0xa9804ba
  40411d:	jge    0x4040a2
  40411f:	dec    ebp
  404120:	sub    eax,0x61951cd2
  404125:	mov    ebp,0x584934ca
  40412a:	or     DWORD PTR [eax],ebp
  40412c:	cmp    eax,DWORD PTR [eax+0x7d]
  40412f:	in     al,dx
  404130:	or     ebx,edi
  404132:	xchg   ecx,eax
  404133:	mov    eax,0xeeea6184
  404138:	mov    edx,DWORD PTR [edi-0xa]
  40413b:	mov    esp,0x9e788b00
  404140:	or     esi,0xfffffff4
  404143:	mov    bh,0x7
  404145:	sbb    al,0x0
  404147:	sbb    al,0x89
  404149:	xchg   ecx,eax
  40414a:	mov    edi,DWORD PTR [edx-0x3d282125]
  404150:	inc    edi
  404151:	jb     0x404196
  404153:	popf   
  404154:	add    al,0x79
  404156:	cmp    BYTE PTR [edi+eiz*1+0x1d56632a],bl
  40415d:	push   eax
  40415e:	gs gs test eax,0x7bdfce7a
  404165:	and    DWORD PTR [ecx-0x2553ff80],edi
  40416b:	jnp    0x404170
  40416d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416e:	jno    0x404195
  404170:	dec    edx
  404171:	out    0x43,al
  404173:	iret   
  404174:	lods   al,BYTE PTR ds:[esi]
  404175:	dec    eax
  404176:	mov    al,ds:0x51e40677
  40417b:	jge    0x4041a7
  40417d:	ds out dx,eax
  40417f:	leave  
  404180:	and    DWORD PTR [edi-0x60dd3133],ecx
  404186:	(bad)  
  404187:	mov    ds:0xe0444d2f,eax
  40418c:	add    bh,BYTE PTR [esi]
  40418e:	jne    0x404127
  404190:	add    eax,0x2607871
  404195:	pop    ebx
  404196:	in     eax,dx
  404197:	xor    ebx,edx
  404199:	cmp    eax,0x41a4d382
  40419e:	mov    ebx,0xf3b7f2a1
  4041a3:	cmp    eax,0xaeeca475
  4041a8:	dec    edi
  4041a9:	dec    ecx
  4041aa:	test   eax,0xcec6f391
  4041af:	mov    ch,0xd3
  4041b1:	mov    edi,0xc2d7b7ac
  4041b6:	push   ebp
  4041b7:	call   0x8fa2:0x864ab03a
  4041be:	fmul   DWORD PTR [edi-0x14bb1027]
  4041c4:	adc    BYTE PTR ds:0x439d548f,0x34
  4041cb:	push   0xe0a06e15
  4041d0:	(bad)
  4041d3:	push   cs
  4041d4:	rcr    BYTE PTR [ecx],0xba
  4041d7:	mov    ecx,0xa4277412
  4041dc:	pushf  
  4041dd:	sbb    al,0x5e
  4041df:	mov    cl,0xb8
  4041e1:	lock imul bp,WORD PTR [ecx-0xc43b112],0xff87
  4041ea:	mov    ss,WORD PTR [esi+eax*8+0x61]
  4041ee:	jne    0x404259
  4041f0:	stos   BYTE PTR es:[edi],al
  4041f1:	jno    0x4041fd
  4041f3:	loop   0x404273
  4041f5:	rol    BYTE PTR [ebp+edx*1-0xb],0xdf
  4041fa:	push   esp
  4041fb:	sub    ecx,DWORD PTR [ebp-0x4a12132c]
  404201:	call   0x7e2dbedf
  404206:	leave  
  404207:	fld    st(6)
  404209:	xor    cl,BYTE PTR [edx-0x3c]
  40420c:	sbb    eax,0xecf1770a
  404211:	sbb    bl,bh
  404213:	xor    al,0x3a
  404215:	mov    ah,0xa5
  404217:	or     eax,0xda47733f
  40421c:	jg     0x404273
  40421e:	mov    dh,bh
  404220:	ret    
  404221:	mov    ebx,0xd38c7c4b
  404226:	mov    BYTE PTR [edi],0x69
  404229:	push   ebp
  40422a:	mov    ah,0x91
  40422c:	retf   
  40422d:	ja     0x40428b
  40422f:	cmp    edx,ebx
  404231:	sahf   
  404232:	xor    BYTE PTR [eax+esi*8+0x13],al
  404236:	mov    edx,?
  404238:	sbb    DWORD PTR [edx],edx
  40423a:	xchg   ecx,eax
  40423b:	adc    eax,0xea162c75
  404240:	push   edi
  404241:	sbb    al,dl
  404243:	inc    ebx
  404244:	stos   DWORD PTR es:[edi],eax
  404245:	jno    0x40422a
  404247:	mov    esp,0x13b7a681
  40424c:	sub    cl,dl
  40424e:	icebp  
  40424f:	pop    ds
  404250:	loope  0x404291
  404252:	pusha  
  404253:	mov    DWORD PTR gs:[ebx+0x188d7eba],esp
  40425a:	and    BYTE PTR [ebp+0x51],0x8a
  40425e:	pop    edi
  40425f:	pop    ds
  404260:	fisubr DWORD PTR [eax+ebp*4]
  404263:	dec    ecx
  404264:	mov    bl,0x99
  404266:	lds    ecx,FWORD PTR [edx+0x5a8af97d]
  40426c:	mov    dh,bl
  40426e:	aas    
  40426f:	sahf   
  404270:	out    0xc1,al
  404272:	rol    DWORD PTR [eax-0x77],0xe4
  404276:	mov    eax,?
  404278:	jge    0x404249
  40427a:	(bad)  
  40427b:	sbb    BYTE PTR [edi+0x1a68387b],bh
  404281:	test   eax,0xfc88c344
  404286:	and    al,0xcb
  404288:	xor    bh,dl
  40428a:	stc    
  40428b:	fiadd  WORD PTR [ebx-0x5df38b16]
  404291:	adc    al,ch
  404293:	test   BYTE PTR [edx-0x19aab4fc],ch
  404299:	data16 int3 
  40429b:	xchg   esp,eax
  40429c:	pop    ebp
  40429d:	lds    ebp,FWORD PTR [edx]
  40429f:	fadd   st(5),st
  4042a1:	test   al,0x3e
  4042a3:	shr    DWORD PTR [eax+0x5ad67def],1
  4042a9:	call   0x6703e5e9
  4042ae:	xchg   edi,eax
  4042af:	stc    
  4042b0:	adc    al,cl
  4042b2:	popa   
  4042b3:	jl     0x40424f
  4042b5:	inc    esp
  4042b6:	jmp    0x404239
  4042b8:	ins    DWORD PTR es:[edi],dx
  4042b9:	sahf   
  4042ba:	mov    ecx,0x515b99aa
  4042bf:	add    al,0x4c
  4042c1:	cmp    ebp,DWORD PTR [ebp+edx*1-0xa]
  4042c5:	jnp    0x404307
  4042c7:	pushf  
  4042c8:	stos   BYTE PTR es:[edi],al
  4042c9:	inc    eax
  4042ca:	stos   BYTE PTR es:[edi],al
  4042cb:	sub    esi,DWORD PTR [ebx-0x4302449a]
  4042d1:	xlat   BYTE PTR ds:[ebx]
  4042d2:	jo     0x4042d9
  4042d4:	add    al,0xf4
  4042d6:	pop    edx
  4042d7:	jl     0x404318
  4042d9:	sbb    BYTE PTR [ecx],dh
  4042db:	sbb    eax,0x3155bdaa
  4042e0:	sahf   
  4042e1:	and    edi,0x33
  4042e4:	call   0xe2de10be
  4042e9:	sub    eax,0xf7131cd0
  4042ee:	sbb    DWORD PTR [ebx-0x26],esp
  4042f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f2:	shl    BYTE PTR [edx-0x56],0xb6
  4042f6:	fild   WORD PTR ds:0x95b6bb33
  4042fc:	add    BYTE PTR [edi],ah
  4042fe:	xor    eax,0x7ccfcbe9
  404303:	in     eax,dx
  404304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404305:	leave  
  404306:	xchg   edx,eax
  404307:	rcr    edi,1
  404309:	inc    ebx
  40430a:	je     0x4042c7
  40430c:	scas   eax,DWORD PTR es:[edi]
  40430d:	loop   0x404376
  40430f:	dec    edx
  404310:	inc    ebx
  404311:	add    ch,BYTE PTR [ecx+edi*8]
  404314:	aas    
  404315:	gs mov ah,0x56
  404318:	cdq    
  404319:	aam    0xab
  40431b:	or     ebp,DWORD PTR [edi-0x71a44b91]
  404321:	add    eax,DWORD PTR [edx+edi*4+0x5f9fed33]
  404328:	in     eax,0xfe
  40432a:	loope  0x404332
  40432c:	out    dx,eax
  40432d:	int    0x45
  40432f:	(bad)  
  404330:	test   eax,0x2af9a5ae
  404335:	ins    BYTE PTR es:[edi],dx
  404336:	call   0x2f3d:0x7c9c94e0
  40433d:	jg     0x40438d
  40433f:	cwde   
  404340:	je     0x4043a2
  404342:	sar    BYTE PTR [ecx-0x66ea47d],0x8e
  404349:	add    DWORD PTR [edx-0x61585f39],ecx
  40434f:	cmp    ch,BYTE PTR [ebx-0x11d7be49]
  404355:	ss stc 
  404357:	mov    esi,0x84ed78d4
  40435c:	enter  0x35c6,0xe3
  404360:	xchg   edi,eax
  404361:	pusha  
  404362:	lahf   
  404363:	cdq    
  404364:	pop    ecx
  404365:	adc    eax,0x6fee842a
  40436a:	push   ebp
  40436b:	inc    ecx
  40436c:	fisttp QWORD PTR [eax+0x6ec0afab]
  404372:	mov    eax,0x29117b13
  404377:	sub    ah,bl
  404379:	mov    ebp,0xd8eb096b
  40437e:	xchg   edi,eax
  40437f:	cwde   
  404380:	jnp    0x4043da
  404382:	das    
  404383:	push   esp
  404384:	loop   0x40438e
  404386:	xchg   ecx,eax
  404387:	cdq    
  404388:	jle    0x4043ce
  40438a:	sti    
  40438b:	xchg   edx,eax
  40438c:	pop    eax
  40438d:	add    BYTE PTR [ebx+0x2787719e],dl
  404393:	(bad)  
  404394:	ds jl  0x4043b2
  404397:	xchg   ebp,eax
  404398:	test   esp,esp
  40439a:	push   esi
  40439b:	js     0x40439f
  40439d:	mov    bh,0xa9
  40439f:	mov    ebp,0x19f7ea89
  4043a4:	sub    al,0x88
  4043a6:	xchg   ebx,eax
  4043a7:	push   es
  4043a8:	add    BYTE PTR [esi-0x5a],dh
  4043ab:	pop    ebp
  4043ac:	jo     0x40440a
  4043ae:	stc    
  4043af:	js     0x4043a2
  4043b1:	ret    0x6c1c
  4043b4:	jo     0x404426
  4043b6:	push   0xecddc68e
  4043bb:	push   es
  4043bc:	xor    ebp,esi
  4043be:	test   BYTE PTR [ebx-0x5],dl
  4043c1:	call   0xafabc38a
  4043c6:	jno    0x4043f7
  4043c8:	cwde   
  4043c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ca:	es sub eax,0xf01e4dc6
  4043d0:	jecxz  0x404383
  4043d2:	pop    ss
  4043d3:	jmp    0xd6f2:0x66830760
  4043da:	bound  esi,QWORD PTR ds:0x21bed0dd
  4043e0:	xchg   esi,eax
  4043e1:	xchg   ebx,eax
  4043e2:	dec    eax
  4043e3:	add    al,bh
  4043e5:	out    0x17,eax
  4043e7:	xchg   BYTE PTR [edx+esi*2+0x1bcec3be],al
  4043ee:	outs   dx,BYTE PTR ds:[esi]
  4043ef:	add    BYTE PTR [edx-0x21],al
  4043f2:	lea    esp,[eax]
  4043f4:	(bad)  
  4043f5:	jb     0x4043d5
  4043f7:	inc    edx
  4043f8:	mov    dl,0x44
  4043fa:	fwait
  4043fb:	inc    edx
  4043fc:	shl    BYTE PTR [eax],1
  4043fe:	pushf  
  4043ff:	hlt    
  404400:	popf   
  404401:	push   ss
  404402:	shr    cl,1
  404404:	jnp    0x404423
  404406:	icebp  
  404407:	jb     0x40446e
  404409:	mov    gs:0x8c0b913e,eax
  40440f:	stos   BYTE PTR es:[edi],al
  404410:	cmp    bl,BYTE PTR [ebx-0x4]
  404413:	adc    al,0x73
  404415:	xchg   BYTE PTR [edx-0x27],bh
  404418:	gs mov dh,0x10
  40441b:	in     eax,dx
  40441c:	mov    ah,0x6c
  40441e:	test   BYTE PTR [edx+0x67],bl
  404421:	add    bh,ah
  404423:	jecxz  0x4043e1
  404425:	inc    ebx
  404426:	cmp    esp,DWORD PTR [edi]
  404428:	(bad)  
  404429:	fsubr  DWORD PTR [esi+0x5f]
  40442c:	js     0x40445e
  40442e:	ss cmp eax,0x248227dd
  404434:	lods   eax,DWORD PTR ds:[esi]
  404435:	aad    0x4c
  404437:	jge    0x4043c7
  404439:	ret    0xcab2
  40443c:	dec    eax
  40443d:	data16 ficom DWORD PTR [esi-0x73]
  404441:	dec    ecx
  404442:	push   ss
  404443:	retf   
  404444:	rcr    al,1
  404446:	and    ebx,DWORD PTR [ecx]
  404448:	push   ebx
  404449:	cmc    
  40444a:	retf   0x2237
  40444d:	sub    DWORD PTR ss:[ebx-0x80],0x3e278487
  404455:	dec    edi
  404456:	pop    esp
  404457:	adc    bl,BYTE PTR [esi]
  404459:	repz arpl WORD PTR [edi+0x1e2ce32b],sp
  404460:	inc    eax
  404461:	mov    eax,ds:0x91dbfd2f
  404466:	imul   esp,DWORD PTR gs:[ebp+0x3eec6d61],0x2d
  40446e:	(bad)  
  40446f:	cmova  eax,eax
  404472:	outs   dx,DWORD PTR ds:[esi]
  404473:	adc    dl,BYTE PTR [edx+0xaf8012]
  404479:	pop    ss
  40447a:	pop    ebx
  40447b:	adc    esi,DWORD PTR [ecx+0x104232f7]
  404481:	adc    DWORD PTR [ebx+ebx*1],esp
  404484:	and    esp,DWORD PTR [esi]
  404486:	inc    esi
  404487:	mov    ds:0xd45b77bc,al
  40448c:	sub    BYTE PTR [esi-0x4a],dh
  40448f:	aad    0x33
  404491:	mov    dl,0x78
  404493:	int3   
  404494:	dec    eax
  404495:	popa   
  404496:	and    BYTE PTR [ebx-0x1d],0x8e
  40449a:	add    eax,0xb8e919b
  40449f:	xchg   DWORD PTR [ecx+0x4994d9],esi
  4044a5:	(bad)  
  4044a6:	dec    ebx
  4044a7:	cs cwde 
  4044a9:	xor    bh,BYTE PTR [ebx]
  4044ab:	dec    esp
  4044ac:	mov    bl,0x2b
  4044ae:	lock fld st(5)
  4044b1:	stos   BYTE PTR es:[edi],al
  4044b2:	and    ebp,DWORD PTR [esi+ecx*1]
  4044b5:	mov    ebx,0x6b68d214
  4044ba:	jmp    0x19ca:0xd672c6da
  4044c1:	icebp  
  4044c2:	push   edi
  4044c3:	frstor [ebx+0x55972c68]
  4044c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ca:	inc    edx
  4044cb:	addr16 pushf 
  4044cd:	pop    edi
  4044ce:	and    eax,0xac10cfa5
  4044d3:	jbe    0x40451b
  4044d5:	gs faddp st(4),st
  4044d8:	adc    eax,0xc3e359a4
  4044dd:	or     BYTE PTR [esi+0x3a56447e],0xcd
  4044e4:	xchg   edx,eax
  4044e5:	inc    esi
  4044e6:	pushf  
  4044e7:	out    0xba,al
  4044e9:	cli    
  4044ea:	call   0x3c1:0xd1da8337
  4044f1:	in     al,dx
  4044f2:	sahf   
  4044f3:	jns    0x404569
  4044f5:	jns    0x404486
  4044f7:	lods   al,BYTE PTR ds:[esi]
  4044f8:	shl    DWORD PTR ds:0xc3fd0b8e,1
  4044fe:	mov    ?,WORD PTR [eax-0x47]
  404501:	cmp    ebp,ebp
  404503:	xchg   esp,eax
  404504:	call   0x3d83:0x6eca45a2
  40450b:	in     eax,0x80
  40450d:	lahf   
  40450e:	lods   eax,DWORD PTR ds:[esi]
  40450f:	loope  0x4044a8
  404511:	xchg   esp,eax
  404512:	fbld   TBYTE PTR [eax]
  404514:	loop   0x404508
  404516:	sbb    ebp,DWORD PTR [eax+ebx*4]
  404519:	jbe    0x40454d
  40451b:	and    eax,0xf020d135
  404520:	inc    edi
  404521:	jecxz  0x4044b8
  404523:	mov    ah,0x3c
  404525:	push   es
  404526:	add    DWORD PTR [eax-0x2c207d21],esi
  40452c:	out    0x45,al
  40452e:	xor    DWORD PTR [eax],0xad9d8745
  404534:	mov    esp,0x851bbc53
  404539:	mov    bh,0x82
  40453b:	jno    0x404534
  40453d:	jbe    0x4044fd
  40453f:	mov    eax,ds:0xfd224186
  404544:	sbb    al,0xd7
  404546:	mov    WORD PTR [esi-0x3c2ef608],cs
  40454c:	sub    BYTE PTR [edi],al
  40454e:	or     eax,0xd4f35a6d
  404553:	mov    ah,0x7
  404555:	cmp    al,0x0
  404557:	push   0x4bfd6446
  40455c:	dec    ecx
  40455d:	xor    WORD PTR [eax],ax
  404560:	test   al,0x2a
  404562:	int3   
  404563:	(bad)  
  404564:	sub    al,0x53
  404566:	mov    esp,0xbbf1a5ee
  40456b:	clc    
  40456c:	cmp    BYTE PTR [esi-0x8],0x34
  404570:	sub    dl,ah
  404572:	imul   BYTE PTR [edx+edx*4+0x7f8ace81]
  404579:	push   0x2cd44c6
  40457e:	and    ch,cl
  404580:	fucomip st,st(0)
  404582:	mov    edi,0x1aab164f
  404587:	dec    edx
  404588:	lods   al,BYTE PTR ds:[esi]
  404589:	mov    bl,0x5d
  40458b:	cmp    BYTE PTR ds:0x6845e496,dh
  404591:	push   ds
  404592:	push   0xd6188275
  404597:	cmp    eax,DWORD PTR [ecx-0x7a46bb27]
  40459d:	je     0x40452b
  40459f:	cmp    DWORD PTR [ebx],ebp
  4045a1:	adc    al,BYTE PTR ds:0x874e1927
  4045a7:	and    DWORD PTR [ebx-0x7d],esi
  4045aa:	call   0xaf18:0xf77cff13
  4045b1:	xchg   edx,eax
  4045b2:	sti    
  4045b3:	pushw  ss
  4045b5:	je     0x40453f
  4045b7:	sahf   
  4045b8:	out    dx,eax
  4045b9:	mov    edx,esp
  4045bb:	daa    
  4045bc:	sbb    DWORD PTR [edi],ecx
  4045be:	das    
  4045bf:	fbstp  TBYTE PTR [ecx+esi*1]
  4045c2:	outs   dx,DWORD PTR ds:[esi]
  4045c3:	icebp  
  4045c4:	xor    al,BYTE PTR [ebp+0xc]
  4045c7:	push   ebp
  4045c8:	xchg   esi,eax
  4045c9:	dec    eax
  4045ca:	mov    BYTE PTR [ebx+0x375ac745],dl
  4045d0:	xor    edx,DWORD PTR [eax]
  4045d2:	push   eax
  4045d3:	and    al,0x62
  4045d5:	neg    BYTE PTR [edi-0xa670faa]
  4045db:	pop    ds
  4045dc:	xchg   edx,eax
  4045dd:	add    al,0x8f
  4045df:	add    DWORD PTR [edx-0x5d84705c],ebp
  4045e5:	jge    0x4045ed
  4045e7:	loopne 0x404656
  4045e9:	sbb    DWORD PTR [eax+0x3c0d4627],0xac4bb361
  4045f3:	or     al,0xf6
  4045f5:	xchg   ebp,eax
  4045f6:	cmp    al,BYTE PTR [edi]
  4045f8:	pop    esp
  4045f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045fa:	ins    BYTE PTR es:[edi],dx
  4045fb:	xor    dh,ch
  4045fd:	dec    ecx
  4045fe:	(bad)  
  4045ff:	in     eax,dx
  404600:	out    dx,eax
  404601:	ret    0x3927
  404604:	xchg   dl,cl
  404606:	and    bh,cl
  404608:	mov    eax,0xd2bdfc38
  40460d:	bound  ecx,QWORD PTR [ecx-0x18]
  404610:	adc    DWORD PTR [esi+ecx*2],esp
  404613:	icebp  
  404614:	pop    ebx
  404615:	inc    esp
  404616:	push   0xa11b272f
  40461b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461c:	jne    0x404679
  40461e:	mov    ebp,0x5fa2fbfd
  404623:	cmp    BYTE PTR [ecx-0x967c871],dl
  404629:	in     eax,dx
  40462a:	mov    esp,DWORD PTR [ecx+0x77]
  40462d:	(bad)  
  40462e:	retf   
  40462f:	pop    ss
  404630:	cmc    
  404631:	and    BYTE PTR [eax-0x7d],ah
  404634:	xlat   BYTE PTR ds:[ebx]
  404635:	in     eax,dx
  404636:	jae    0x40463a
  404638:	(bad)
  40463c:	nop
  40463d:	fmul   DWORD PTR [ecx]
  40463f:	data16 mov al,0xf8
  404642:	aas    
  404643:	xchg   esi,eax
  404644:	(bad)
  404647:	mov    ebx,0xa0513845
  40464c:	sbb    ecx,DWORD PTR [edi-0xb068502]
  404652:	xchg   DWORD PTR [esi+0x37e7d8bd],ebx
  404658:	xor    eax,0x22403ab9
  40465d:	stc    
  40465e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465f:	xchg   edx,eax
  404660:	rcl    DWORD PTR [eax],0xca
  404663:	rol    BYTE PTR [ecx+0x60],cl
  404666:	call   0xe3427f4e
  40466b:	cld    
  40466c:	sbb    esi,DWORD PTR [ebp+0x61]
  40466f:	fadd   st(4),st
  404671:	jl     0x4045fe
  404673:	pushf  
  404674:	ds out 0x56,eax
  404677:	stc    
  404678:	nop
  404679:	in     al,0xb7
  40467b:	pop    eax
  40467c:	stos   DWORD PTR es:[edi],eax
  40467d:	xchg   esp,eax
  40467e:	xchg   DWORD PTR [edi],esi
  404680:	and    BYTE PTR [ebx+0x32],dl
  404683:	jp     0x4046f3
  404685:	outs   dx,DWORD PTR ds:[esi]
  404686:	addr16 or al,0x6a
  404689:	in     eax,0x40
  40468b:	inc    ecx
  40468c:	ins    DWORD PTR es:[edi],dx
  40468d:	clc    
  40468e:	iret   
  40468f:	aas    
  404690:	pop    esi
  404691:	lods   al,BYTE PTR ds:[esi]
  404692:	mov    ax,ds:0x1a2baf6
  404698:	lds    esi,FWORD PTR [esp+eax*1+0x13]
  40469c:	mov    edi,0x59055c8f
  4046a1:	sub    dh,dl
  4046a3:	or     eax,0x3fa1273c
  4046a8:	sbb    DWORD PTR [ebp+0x5c],esp
  4046ab:	test   eax,0x8c95078a
  4046b0:	das    
  4046b1:	js     0x4046f9
  4046b3:	push   ss
  4046b4:	mov    al,ds:0x437eadb1
  4046b9:	or     eax,DWORD PTR [ebx+ebp*2+0x47]
  4046bd:	xor    bl,BYTE PTR [esi-0x2f]
  4046c0:	or     dl,al
  4046c2:	jnp    0x4046c5
  4046c4:	and    bh,bh
  4046c6:	cmp    DWORD PTR [ecx],ebp
  4046c8:	rol    BYTE PTR [esi+0x5f44c1c6],0xfa
  4046cf:	shl    DWORD PTR [esi-0x73],1
  4046d2:	pop    es
  4046d3:	pop    DWORD PTR [edi]
  4046d5:	fisttp WORD PTR [ecx+0x21aff2b3]
  4046db:	(bad)  
  4046dc:	in     eax,0x49
  4046de:	and    BYTE PTR [ecx+0x13502f37],ah
  4046e4:	jl     0x40466a
  4046e6:	jmp    0x404680
  4046e8:	out    dx,al
  4046e9:	mov    dh,0x39
  4046eb:	mov    ds:0x6a19449c,eax
  4046f0:	sub    BYTE PTR [ecx+edi*4-0x2f733710],bh
  4046f7:	aaa    
  4046f8:	test   eax,0x445f4420
  4046fd:	dec    esi
  4046fe:	dec    esi
  4046ff:	jmp    0x4046be
  404701:	mov    dl,0x5
  404703:	add    dh,0xaa
  404706:	push   ds
  404707:	cmp    eax,DWORD PTR [edx-0x642c568b]
  40470d:	lea    ebx,[edx+eax*2]
  404710:	retf   0x2102
  404713:	shl    DWORD PTR es:[edi+0x30],cl
  404717:	dec    ecx
  404718:	fist   WORD PTR [esi+0x306e73d0]
  40471e:	cdq    
  40471f:	in     al,dx
  404720:	push   esi
  404721:	neg    DWORD PTR [bx+si+0x169d]
  404726:	je     0x404736
  404728:	hlt    
  404729:	jge    0x4046b1
  40472b:	loop   0x404721
  40472d:	icebp  
  40472e:	stos   DWORD PTR es:[edi],eax
  40472f:	retf   0xfe3e
  404732:	dec    ecx
  404733:	(bad)  
  404734:	retf   
  404735:	push   ecx
  404736:	fistp  DWORD PTR [edx]
  404738:	xchg   ecx,eax
  404739:	outs   dx,DWORD PTR ds:[esi]
  40473a:	dec    ebx
  40473b:	dec    eax
  40473c:	daa    
  40473d:	jmp    0x54eaf02c
  404742:	xchg   edx,eax
  404743:	inc    edi
  404744:	jge    0x40474e
  404746:	das    
  404747:	jp     0x4046ec
  404749:	dec    esp
  40474a:	lods   eax,DWORD PTR ds:[esi]
  40474b:	mov    ds:0x88ac8010,al
  404750:	mov    esi,0xe75e573d
  404755:	ins    BYTE PTR es:[edi],dx
  404756:	dec    edi
  404757:	cwde   
  404758:	in     al,0x6e
  40475a:	add    eax,0x5ebf2dea
  40475f:	leave  
  404760:	xchg   esi,eax
  404761:	adc    BYTE PTR [ebp-0x2a0967c5],al
  404767:	not    BYTE PTR [eax+esi*2-0x64]
  40476b:	ret    
  40476c:	jmp    0xb6123097
  404771:	dec    edx
  404772:	pusha  
  404773:	mov    bl,0x0
  404775:	in     eax,dx
  404776:	pop    ss
  404777:	aam    0x61
  404779:	lahf   
  40477a:	stos   BYTE PTR es:[edi],al
  40477b:	out    0x8e,al
  40477d:	xchg   edx,eax
  40477e:	stc    
  40477f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404780:	cmp    ah,BYTE PTR [edx]
  404782:	jmp    0x40474b
  404784:	push   ds
  404785:	sbb    al,0x59
  404787:	mov    al,ds:0xd247a8c7
  40478c:	sub    dl,dl
  40478e:	fsubp  st(4),st
  404790:	or     al,0xf7
  404792:	icebp  
  404793:	aaa    
  404794:	xlat   BYTE PTR ds:[ebx]
  404795:	pop    ecx
  404796:	stos   BYTE PTR es:[edi],al
  404797:	mov    cl,cl
  404799:	fld    DWORD PTR ds:0x5f8e0e8a
  40479f:	sahf   
  4047a0:	in     eax,0x6f
  4047a2:	in     al,0x28
  4047a4:	mov    ebx,0x34a8287e
  4047a9:	sub    DWORD PTR [edx],0xffffff9a
  4047ac:	jne    0x404809
  4047ae:	push   cs
  4047af:	(bad)  
  4047b0:	retf   
  4047b1:	sbb    al,0xef
  4047b3:	fadd   DWORD PTR [ecx+0x9]
  4047b6:	xchg   ebx,eax
  4047b7:	inc    ebx
  4047b8:	loopne 0x404769
  4047ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047bb:	inc    ecx
  4047bc:	out    0x3d,eax
  4047be:	xor    dl,BYTE PTR [ebp+0x2d]
  4047c1:	add    al,0xa6
  4047c3:	mov    bh,0xe1
  4047c5:	add    cl,bh
  4047c7:	jp     0x4047c0
  4047c9:	pop    ds
  4047ca:	out    0x55,eax
  4047cc:	cmc    
  4047cd:	in     al,dx
  4047ce:	and    DWORD PTR [edx-0x6f6f98f2],0xffffffe9
  4047d5:	adc    ebx,ebp
  4047d7:	hlt    
  4047d8:	call   0x3af2280d
  4047dd:	xchg   esp,eax
  4047de:	test   eax,0x402425c1
  4047e3:	leave  
  4047e4:	cs int3 
  4047e6:	sub    al,0x35
  4047e8:	inc    ebx
  4047e9:	retf   
  4047ea:	pop    ebp
  4047eb:	retf   
  4047ec:	mov    al,0x38
  4047ee:	icebp  
  4047ef:	cwde   
  4047f0:	cwde   
  4047f1:	aam    0x47
  4047f3:	or     ch,BYTE PTR [edx-0x18]
  4047f6:	mov    ebx,0xfa1c9d69
  4047fb:	jb     0x40479b
  4047fd:	ss out 0x53,eax
  404800:	rol    BYTE PTR [ecx],1
  404802:	fistp  DWORD PTR [ebp+ebx*8-0x87a23e5]
  404809:	sub    eax,0x2c2b5daf
  40480e:	mov    ecx,0x59efd8d5
  404813:	jnp    0x404866
  404815:	xchg   esp,ecx
  404817:	inc    esp
  404818:	ret    
  404819:	(bad)  
  40481a:	in     al,0x88
  40481c:	dec    edx
  40481d:	xchg   esi,eax
  40481e:	inc    eax
  40481f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404820:	xor    ch,BYTE PTR [esi+0x10]
  404823:	nop
  404824:	inc    ebx
  404825:	fcom   QWORD PTR fs:[esi-0x757ef36]
  40482c:	and    esi,ebp
  40482e:	popa   
  40482f:	aaa    
  404830:	pop    ss
  404831:	gs inc ebx
  404833:	leave  
  404834:	sbb    DWORD PTR [ebp+0x12f1a488],ebx
  40483a:	xchg   ebp,eax
  40483b:	es dec eax
  40483d:	fisub  WORD PTR [ebx+esi*4+0x3a]
  404841:	sub    al,0x4
  404843:	xchg   ecx,eax
  404844:	and    ebp,ecx
  404846:	mov    ebx,0xde9a8a7b
  40484b:	pushf  
  40484c:	and    DWORD PTR [edi+0x967b967],ecx
  404852:	xor    BYTE PTR [edx+0x5ac7f7b5],bl
  404858:	adc    al,0xa4
  40485a:	cdq    
  40485b:	pop    ebp
  40485c:	cs aaa 
  40485e:	lea    ecx,[ebx-0x6e]
  404861:	sub    eax,0xb83144ab
  404866:	sahf   
  404867:	ja     0x404894
  404869:	and    DWORD PTR [ecx-0x37],esi
  40486c:	(bad)  
  40486d:	fcomp  st(1)
  40486f:	js     0x4048f0
  404871:	push   ecx
  404872:	dec    esi
  404873:	sti    
  404874:	pop    esp
  404875:	scas   eax,DWORD PTR es:[edi]
  404876:	mov    dh,0xf8
  404878:	pop    ss
  404879:	push   es
  40487a:	sub    dh,0x8
  40487d:	and    al,0xe0
  40487f:	aad    0x51
  404881:	fsubr  DWORD PTR [esi-0x1f]
  404884:	test   ecx,esp
  404886:	jecxz  0x404906
  404888:	pop    ecx
  404889:	fwait
  40488a:	mov    dl,0x67
  40488c:	jecxz  0x404892
  40488e:	mov    ecx,0x3b585d9f
  404893:	mov    es,WORD PTR [edi-0x3cbb6bfa]
  404899:	mov    ecx,0x1ddddc21
  40489e:	add    ebp,ecx
  4048a0:	out    dx,eax
  4048a1:	mov    ebp,0x999aed2
  4048a6:	dec    esp
  4048a7:	int3   
  4048a8:	xchg   esp,eax
  4048a9:	xor    eax,0x22609fbc
  4048ae:	int3   
  4048af:	pop    esi
  4048b0:	pop    ds
  4048b1:	jmp    0x7885:0xa755a647
  4048b8:	cmp    ecx,DWORD PTR [ecx*2+0x1523de58]
  4048bf:	icebp  
  4048c0:	(bad)  [ecx]
  4048c2:	mov    edi,0xb7cf5234
  4048c7:	pusha  
  4048c8:	clc    
  4048c9:	xor    al,0x67
  4048cb:	jb     0x404907
  4048cd:	outs   dx,BYTE PTR ds:[esi]
  4048ce:	dec    ecx
  4048cf:	fist   WORD PTR [eax+ebp*1]
  4048d2:	xchg   edi,eax
  4048d3:	mov    DWORD PTR [ebp+0x79],esi
  4048d6:	and    DWORD PTR [esi],0xffffffb3
  4048d9:	iret   
  4048da:	mov    eax,0xe9360849
  4048df:	gs cs ins BYTE PTR es:[edi],dx
  4048e2:	ret    
  4048e3:	ret    0xc86d
  4048e6:	enter  0xae04,0x30
  4048ea:	scas   al,BYTE PTR es:[edi]
  4048eb:	mov    ds:0x89304977,eax
  4048f0:	xchg   esi,eax
  4048f1:	shl    DWORD PTR [ecx],0xdc
  4048f4:	das    
  4048f5:	lods   al,BYTE PTR ds:[esi]
  4048f6:	add    BYTE PTR [ecx+0x79],0x1e
  4048fa:	movmskps edx,xmm1
  4048fd:	pushf  
  4048fe:	sub    dl,BYTE PTR [edx+0x53]
  404901:	dec    ebx
  404902:	mov    ebx,0x658c97d1
  404907:	fld    DWORD PTR [ebx+0x49ab7ff5]
  40490d:	sub    DWORD PTR [eax-0x67],0xf53c57a2
  404914:	add    eax,0x6c9b3685
  404919:	xchg   esp,eax
  40491a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40491b:	out    dx,eax
  40491c:	cmp    DWORD PTR [ebx],ecx
  40491e:	xchg   ebp,eax
  40491f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404920:	xchg   ebp,eax
  404921:	inc    eax
  404922:	mov    esp,0x618bf4b
  404927:	sahf   
  404928:	call   0xd908:0x253f779
  40492f:	mov    eax,ds:0xc1aff9aa
  404934:	xor    cl,dl
  404936:	in     eax,dx
  404937:	pop    eax
  404938:	push   0xffffffef
  40493a:	sbb    al,0xd
  40493c:	sbb    BYTE PTR [ecx-0x25],0x36
  404940:	add    edi,DWORD PTR [esp+ecx*4-0x541696d4]
  404947:	popf   
  404948:	iret   
  404949:	dec    ebp
  40494a:	xchg   DWORD PTR [edi-0x39],edx
  40494d:	bound  esi,QWORD PTR [edi]
  40494f:	test   DWORD PTR [edi-0x2c9e02f8],0x62b8f7a7
  404959:	inc    esi
  40495a:	push   edi
  40495b:	fmulp  st(5),st
  40495d:	iret   
  40495e:	pavgw  mm7,mm0
  404961:	jae    0x404927
  404963:	mov    ch,0xe2
  404965:	adc    al,0xb2
  404967:	ror    BYTE PTR [edi-0x45fd5867],1
  40496d:	and    BYTE PTR [ebx],ch
  40496f:	push   es
  404970:	mov    ebx,0x8ba22348
  404975:	ror    BYTE PTR [eax-0x7e],cl
  404978:	adc    DWORD PTR [edx-0x7c],edx
  40497b:	pop    ss
  40497c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40497d:	sub    DWORD PTR [edi],0xffffffc5
  404980:	jg     0x404953
  404982:	fst    QWORD PTR [ebx+0x36]
  404985:	jae    0x404995
  404987:	add    al,0x45
  404989:	jno    0x40494c
  40498b:	jl     0x4049ae
  40498d:	or     esp,eax
  40498f:	or     BYTE PTR [eax+0x10bcbb1d],ch
  404995:	cmp    DWORD PTR [eax-0xd],esp
  404998:	leave  
  404999:	push   edi
  40499a:	ficomp DWORD PTR [eax]
  40499c:	mov    BYTE PTR [edi],ah
  40499e:	and    dh,BYTE PTR [edi+0x17]
  4049a1:	rcr    DWORD PTR [edi-0x29db7ccb],0xd7
  4049a8:	mov    ebx,0xe301685e
  4049ad:	mov    ebx,0x29324f2e
  4049b2:	(bad)  
  4049b3:	jnp    0x4049b5
  4049b5:	aam    0xe4
  4049b7:	in     al,dx
  4049b8:	clc    
  4049b9:	popf   
  4049ba:	jae    0x404a21
  4049bc:	out    dx,al
  4049bd:	add    bl,BYTE PTR [edi+0x27]
  4049c0:	das    
  4049c1:	div    BYTE PTR gs:[edi-0x233d2176]
  4049c8:	stos   BYTE PTR es:[edi],al
  4049c9:	(bad)  
  4049ca:	sti    
  4049cb:	sub    eax,DWORD PTR [ecx]
  4049cd:	call   FWORD PTR [ebx-0x3a]
  4049d0:	js     0x404964
  4049d2:	sbb    al,0x1d
  4049d4:	mov    edi,0x27f9bb65
  4049d9:	sub    eax,0xfe512f6c
  4049de:	and    DWORD PTR [esi],0x72
  4049e1:	push   edi
  4049e2:	pop    esp
  4049e3:	adc    eax,0x446f6829
  4049e8:	test   ebx,ebx
  4049ea:	fnsave [ecx]
  4049ec:	xor    BYTE PTR ss:[edi],cl
  4049ef:	out    dx,al
  4049f0:	lods   al,BYTE PTR ds:[esi]
  4049f1:	push   0x8c8bbcc
  4049f6:	pop    esp
  4049f7:	sti    
  4049f8:	cdq    
  4049f9:	fs push ss
  4049fb:	inc    esi
  4049fc:	aas    
  4049fd:	jbe    0x404a0f
  4049ff:	add    cl,bl
  404a01:	(bad)  
  404a02:	lods   eax,DWORD PTR ds:[esi]
  404a03:	push   eax
  404a04:	ficom  DWORD PTR [ebp+0x6adec5c2]
  404a0a:	fwait
  404a0b:	or     ch,BYTE PTR [ebx-0x3bfa106f]
  404a11:	xchg   edx,eax
  404a12:	int    0x2
  404a14:	mov    bh,0x50
  404a16:	mov    al,ds:0xd83a0810
  404a1b:	bound  edx,QWORD PTR [eax]
  404a1d:	fyl2x  
  404a1f:	dec    esp
  404a20:	jae    0x4049d6
  404a22:	fisubr WORD PTR [edi+eiz*8-0x31]
  404a26:	(bad)  
  404a27:	jg     0x404a1a
  404a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a2a:	mov    ebx,0xa4331060
  404a2f:	mov    BYTE PTR [ebp-0x3511cf1c],bl
  404a35:	lods   eax,DWORD PTR ds:[esi]
  404a36:	bound  edi,QWORD PTR [edx+ebp*4]
  404a39:	lock repnz data16 stos BYTE PTR es:[edi],al
  404a3d:	pop    esi
  404a3e:	push   edx
  404a3f:	and    eax,0x21b72f78
  404a44:	add    DWORD PTR [ebx-0x4f],eax
  404a47:	cdq    
  404a48:	xor    BYTE PTR [ecx-0x2c858a04],al
  404a4e:	pop    esp
  404a4f:	lea    ecx,[ecx+ecx*4-0x39]
  404a53:	push   edx
  404a54:	(bad)  
  404a56:	or     edi,esi
  404a58:	pop    esp
  404a59:	xor    DWORD PTR [eax+0x24],0x2876d29d
  404a60:	shr    edi,cl
  404a62:	test   DWORD PTR ds:0xd3d64d2f,edi
  404a68:	iret   
  404a69:	(bad)  
  404a6a:	ret    
  404a6b:	and    DWORD PTR [ecx+0x619a2092],edx
  404a71:	cmc    
  404a72:	sbb    al,BYTE PTR [edi-0x34ee6a64]
  404a78:	xlat   BYTE PTR ds:[ebx]
  404a79:	clc    
  404a7a:	sub    edx,DWORD PTR [eax]
  404a7c:	push   ds
  404a7d:	xchg   BYTE PTR [ebp+0x3c472257],al
  404a83:	cmp    ebx,DWORD PTR [edi+0x114f768c]
  404a89:	cs dec edi
  404a8b:	inc    ebx
  404a8c:	clc    
  404a8d:	cli    
  404a8e:	ja     0x404a34
  404a90:	sub    al,0x29
  404a92:	and    ebp,DWORD PTR [eax-0x35]
  404a95:	xchg   edi,eax
  404a96:	(bad)  
  404a97:	emms   
  404a99:	push   esi
  404a9a:	and    dh,BYTE PTR [esi-0x15]
  404a9d:	xor    ebx,esi
  404a9f:	mov    ch,0xc5
  404aa1:	inc    ecx
  404aa2:	adc    eax,0x11e4e4cc
  404aa7:	sbb    eax,0x7dfb26ba
  404aac:	xchg   ebx,eax
  404aad:	jo     0x404add
  404aaf:	push   esi
  404ab0:	daa    
  404ab1:	push   eax
  404ab2:	fild   DWORD PTR [edi+edx*2+0x9]
  404ab6:	in     al,dx
  404ab7:	inc    esi
  404ab8:	jb     0x404ae8
  404aba:	fxtract 
  404abc:	xor    ecx,ecx
  404abe:	cmp    BYTE PTR [edx],al
  404ac0:	ins    DWORD PTR es:[edi],dx
  404ac1:	mov    al,ds:0x5ab4ce4e
  404ac6:	fmul   st,st(7)
  404ac8:	aas    
  404ac9:	outs   dx,DWORD PTR ds:[esi]
  404aca:	imul   edi,DWORD PTR [edi-0x4e],0x72
  404ace:	imul   DWORD PTR [ebp+0x56]
  404ad1:	jge    0x404ad9
  404ad3:	pushf  
  404ad4:	add    eax,0x7591681e
  404ad9:	or     esi,esi
  404adb:	mov    al,ds:0x5eec8dc3
  404ae0:	sub    BYTE PTR [eax],ah
  404ae2:	aad    0xc4
  404ae4:	sbb    dh,bh
  404ae6:	jmp    0x61ec7ea6
  404aeb:	xchg   BYTE PTR [eax],ah
  404aed:	mov    DWORD PTR [eax+0x75],ebx
  404af0:	fucomp st(0)
  404af2:	aaa    
  404af3:	cli    
  404af4:	inc    eax
  404af5:	xchg   DWORD PTR [ecx+esi*4-0x58],eax
  404af9:	pop    eax
  404afa:	pop    ecx
  404afb:	push   edx
  404afc:	sbb    eax,0x701e38b1
  404b01:	retf   0x1702
  404b04:	inc    eax
  404b05:	mov    edx,eax
  404b07:	cdq    
  404b08:	mov    esp,0xd1cecbe4
  404b0d:	mov    ah,cl
  404b0f:	nop
  404b10:	push   ebx
  404b11:	(bad)  
  404b12:	shl    DWORD PTR [eax+0x7e],1
  404b15:	(bad)  
  404b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b17:	cs daa 
  404b19:	cld    
  404b1a:	jne    0x404aa0
  404b1c:	xor    eax,0xcefe894f
  404b21:	xlat   BYTE PTR ds:[ebx]
  404b22:	ins    BYTE PTR es:[edi],dx
  404b23:	out    dx,al
  404b24:	push   ebx
  404b25:	out    0x48,eax
  404b27:	sbb    BYTE PTR [ebx-0x4f],dl
  404b2a:	add    DWORD PTR [edx],esp
  404b2c:	ds jnp 0x404aba
  404b2f:	icebp  
  404b30:	jg     0x404b74
  404b32:	inc    ebx
  404b33:	sbb    cx,WORD PTR [esi-0x2]
  404b37:	dec    esi
  404b38:	xlat   BYTE PTR ds:[ebx]
  404b39:	pop    esp
  404b3a:	shl    DWORD PTR [ebx+0x7e34d469],cl
  404b40:	(bad)  [edx-0x9a17653]
  404b46:	pop    esp
  404b47:	mov    dl,BYTE PTR [edx]
  404b49:	out    0x1a,al
  404b4b:	mov    bh,0xcf
  404b4d:	mov    cl,BYTE PTR [ecx]
  404b4f:	addr16 push edi
  404b51:	and    al,0xfe
  404b53:	xchg   BYTE PTR [esi+0x184ca885],dl
  404b59:	mov    bh,0x56
  404b5b:	adc    ebx,edx
  404b5d:	ror    DWORD PTR ds:0x48132d59,1
  404b63:	cmp    eax,0x9c408272
  404b68:	and    ch,BYTE PTR [eax-0x418b3346]
  404b6e:	inc    ecx
  404b6f:	inc    edx
  404b70:	or     DWORD PTR [eax],eax
  404b72:	loop   0x404b09
  404b74:	imul   ecx,esi,0xffffffcb
  404b77:	outs   dx,DWORD PTR ss:[esi]
  404b79:	sub    DWORD PTR [ebx+ebx*4+0x13],ecx
  404b7d:	xor    al,0xe
  404b7f:	add    esi,DWORD PTR [ebp+ecx*8-0x22217e94]
  404b86:	jle    0x404b81
  404b88:	mov    edi,0x6f2c531
  404b8d:	sub    dl,BYTE PTR [eax]
  404b8f:	or     BYTE PTR [eax],ch
  404b91:	mov    esi,cs
  404b93:	jl     0x404b7a
  404b95:	push   es
  404b96:	shl    BYTE PTR [esi+0xf],cl
  404b99:	mov    ds:0xd44168ce,al
  404b9e:	outs   dx,DWORD PTR ds:[esi]
  404b9f:	xor    ecx,ebp
  404ba1:	enter  0x1514,0x3c
  404ba5:	dec    ebx
  404ba6:	scas   al,BYTE PTR es:[edi]
  404ba7:	fst    DWORD PTR [ebx-0x19]
  404baa:	mov    ch,0x1a
  404bac:	push   ds
  404bad:	inc    edi
  404bae:	cmc    
  404baf:	in     eax,0x30
  404bb1:	(bad)  
  404bb2:	loope  0x404b80
  404bb4:	in     al,dx
  404bb5:	mov    ecx,0xfbdbf1ff
  404bba:	or     al,0x80
  404bbc:	in     eax,0xe5
  404bbe:	dec    esi
  404bbf:	mov    eax,0x1de36e2b
  404bc4:	bound  ebp,QWORD PTR [edi+0x2c72ec0f]
  404bca:	and    bl,0xa9
  404bcd:	icebp  
  404bce:	stos   BYTE PTR es:[edi],al
  404bcf:	daa    
  404bd0:	sub    al,0xbc
  404bd2:	ins    DWORD PTR es:[edi],dx
  404bd3:	push   esi
  404bd4:	hlt    
  404bd5:	es ins BYTE PTR es:[edi],dx
  404bd7:	mov    fs,WORD PTR [edx+0x16a2073a]
  404bdd:	inc    ebx
  404bde:	inc    ebp
  404bdf:	sbb    edx,DWORD PTR [ebx]
  404be1:	(bad)  
  404be2:	adc    ax,bp
  404be5:	cwde   
  404be6:	sub    DWORD PTR [esi+eax*2+0x635065b8],0x49
  404bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bef:	xchg   edx,eax
  404bf0:	mov    esi,0xc23a2c36
  404bf5:	and    eax,0x86dbee5d
  404bfa:	jge    0x404c1b
  404bfc:	mov    ebx,0x68f3655b
  404c01:	idiv   ebp
  404c03:	fist   DWORD PTR [ebp-0x53]
  404c06:	mov    bh,0xcc
  404c08:	loope  0x404c2d
  404c0a:	ror    DWORD PTR [eax+ebx*1+0x67],cl
  404c0e:	lock inc edi
  404c10:	out    dx,eax
  404c11:	mov    eax,ds:0x838cdbd
  404c16:	sub    BYTE PTR [edx+0x1],bh
  404c19:	aas    
  404c1a:	cmp    bh,BYTE PTR [ecx]
  404c1c:	test   ah,al
  404c1e:	call   0x2dcc6bb4
  404c23:	fst    QWORD PTR [ebp-0x2b]
  404c26:	gs jmp 0x41e7:0x8169a478
  404c2e:	std    
  404c2f:	int3   
  404c30:	push   ds
  404c31:	outs   dx,BYTE PTR ds:[esi]
  404c32:	cld    
  404c33:	inc    esi
  404c34:	clc    
  404c35:	fdiv   st,st(7)
  404c37:	aaa    
  404c38:	ror    BYTE PTR [edi+edi*8],cl
  404c3b:	jl     0x404c3f
  404c3d:	mov    BYTE PTR [esi+0x8],ah
  404c40:	and    BYTE PTR [edi+ecx*1+0x61cfc05],ch
  404c47:	cli    
  404c48:	hlt    
  404c49:	(bad)  
  404c4a:	retf   0x712c
  404c4d:	adc    dh,bl
  404c4f:	loope  0x404c68
  404c51:	neg    DWORD PTR ss:[esi+0x2008fa0a]
  404c58:	test   al,0xa1
  404c5a:	jns    0x404caa
  404c5c:	pop    eax
  404c5d:	retf   0x503
  404c60:	jo     0x404bff
  404c62:	adc    eax,0x673a819f
  404c67:	mov    ch,dl
  404c69:	xchg   ebp,eax
  404c6a:	mov    dh,0xb9
  404c6c:	ds ror BYTE PTR ds:[edx-0x2696ea15],cl
  404c74:	jp     0x404cf4
  404c76:	mov    dh,0xe6
  404c78:	icebp  
  404c79:	xchg   edx,eax
  404c7a:	push   0xd6a5a2d3
  404c7f:	stc    
  404c80:	mov    al,0x91
  404c82:	loop   0x404ccc
  404c84:	hlt    
  404c85:	inc    eax
  404c86:	ficomp WORD PTR [eax]
  404c88:	dec    esp
  404c89:	add    ecx,DWORD PTR [ecx]
  404c8b:	scas   al,BYTE PTR es:[edi]
  404c8c:	mov    ecx,DWORD PTR [edx+0x10ec72ff]
  404c92:	scas   al,BYTE PTR es:[edi]
  404c93:	out    dx,al
  404c94:	bnd jle 0x404cbb
  404c97:	add    dh,BYTE PTR [edx+0x1d]
  404c9a:	addr16 xchg esp,eax
  404c9c:	test   eax,0x73014ce0
  404ca1:	jge    0x404c4a
  404ca3:	jnp    0x404cbe
  404ca5:	inc    eax
  404ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca8:	(bad)  
  404ca9:	jecxz  0x404d0f
  404cab:	scas   al,BYTE PTR es:[edi]
  404cac:	cmovle ebp,edx
  404caf:	mov    ah,0x10
  404cb1:	mov    dl,0x3
  404cb3:	repnz push ebp
  404cb5:	or     eax,0xc7be7c73
  404cba:	xchg   DWORD PTR [esi-0x1],esp
  404cbd:	data16 into 
  404cbf:	jl     0x404d10
  404cc1:	inc    ebp
  404cc2:	adc    ebx,DWORD PTR [ebx-0x39]
  404cc5:	jbe    0x404c5d
  404cc7:	mov    BYTE PTR [ecx-0x1563aaca],ch
  404ccd:	in     eax,dx
  404cce:	cmp    ch,BYTE PTR ds:0x380b516a
  404cd4:	sbb    eax,0xf21b0693
  404cd9:	or     dh,BYTE PTR [eax-0x33098db]
  404cdf:	loopne 0x404c8b
  404ce1:	nop
  404ce2:	(bad)  
  404ce3:	add    BYTE PTR [ecx],cl
  404ce5:	dec    edi
  404ce6:	jns    0x404ce9
  404ce8:	mov    ds:0xed4bcd5b,eax
  404ced:	fist   DWORD PTR ds:0xc02f6dc7
  404cf3:	sbb    eax,0xaa277634
  404cf8:	je     0x404c81
  404cfa:	jae    0x404cf9
  404cfc:	push   edi
  404cfd:	rol    cl,1
  404cff:	cmp    al,0xb2
  404d01:	and    al,0x50
  404d03:	imul   ebx,DWORD PTR [ebx],0xffffffe5
  404d06:	jmp    0x404cbb
  404d08:	sbb    BYTE PTR [ecx-0x25],ah
  404d0b:	jecxz  0x404d38
  404d0d:	jg     0x404cde
  404d0f:	xor    DWORD PTR [ebx+0x45e3e724],ebx
  404d15:	sbb    ch,BYTE PTR [esi+eiz*2+0x429a2dc9]
  404d1c:	mov    bl,BYTE PTR [edi-0x3a]
  404d1f:	pop    esi
  404d20:	pop    ecx
  404d21:	lock jg 0x404d59
  404d24:	ins    BYTE PTR es:[edi],dx
  404d25:	sub    al,0xd7
  404d27:	(bad)  
  404d28:	mov    dh,0xe
  404d2a:	mov    al,0xb2
  404d2c:	sub    DWORD PTR [esi],esi
  404d2e:	mov    BYTE PTR [ebx+esi*8],dh
  404d31:	or     edi,DWORD PTR [ecx]
  404d33:	pop    ebx
  404d34:	pop    edi
  404d35:	and    eax,esi
  404d37:	(bad)  
  404d38:	not    DWORD PTR [ebx]
  404d3a:	xor    ebx,edx
  404d3c:	cmp    al,0x1b
  404d3e:	sub    ebp,ebx
  404d40:	dec    ecx
  404d41:	lods   eax,DWORD PTR ds:[esi]
  404d42:	ds jp  0x404cd2
  404d45:	pop    edi
  404d46:	leave  
  404d47:	jnp    0x404cf4
  404d49:	xor    al,0x11
  404d4b:	mov    bl,0xe9
  404d4d:	adc    BYTE PTR [ebp-0x33],ah
  404d50:	cmp    bl,BYTE PTR [ebx]
  404d52:	arpl   sp,bx
  404d54:	out    dx,al
  404d55:	or     BYTE PTR [ecx-0x68],bh
  404d58:	data16 jle 0x404dbe
  404d5b:	je     0x404d86
  404d5d:	ror    bl,cl
  404d5f:	xchg   esi,eax
  404d60:	mov    esp,0xc5c6921b
  404d65:	loop   0x404da0
  404d67:	push   ss
  404d68:	retf   
  404d69:	adc    DWORD PTR [esi],esp
  404d6b:	jb     0x404d8e
  404d6d:	lock xchg edx,eax
  404d6f:	jecxz  0x404d65
  404d71:	xchg   ebp,eax
  404d72:	pop    ecx
  404d73:	cmp    edi,DWORD PTR [esi-0x1865b4b6]
  404d79:	push   esi
  404d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7d:	into   
  404d7e:	jno    0x404dca
  404d80:	popa   
  404d81:	dec    edi
  404d82:	sub    edi,DWORD PTR [esi]
  404d84:	mov    DWORD PTR [edx-0x42],0x51dc2ca6
  404d8b:	push   cs
  404d8c:	and    dh,BYTE PTR [esi+0x5a4eb0a0]
  404d92:	or     ebx,ebp
  404d94:	dec    edx
  404d95:	fadd   DWORD PTR [ebp-0x5d]
  404d98:	sbb    BYTE PTR [ebx-0xc],ch
  404d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9c:	xor    al,0x4d
  404d9e:	pop    es
  404d9f:	fcmovb st,st(0)
  404da1:	aaa    
  404da2:	and    edi,esp
  404da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da5:	ins    DWORD PTR es:[edi],dx
  404da6:	push   ds
  404da7:	retf   
  404da8:	inc    ecx
  404da9:	outs   dx,BYTE PTR ds:[esi]
  404daa:	jae    0x404d58
  404dac:	jmp    0xdc99:0xf6a7d670
  404db3:	call   0x1a69:0x66f27df9
  404dba:	cmp    BYTE PTR [esi-0x7f],dh
  404dbd:	inc    ebx
  404dbe:	sub    eax,0x2a1a847e
  404dc3:	mov    edi,0x1442bed
  404dc8:	xor    ah,BYTE PTR [edi]
  404dca:	xchg   DWORD PTR [ecx-0x68],esi
  404dcd:	fdivp  st(7),st
  404dcf:	out    dx,eax
  404dd0:	fistp  DWORD PTR [ebp+0x5ba5675f]
  404dd6:	jno    0x404df1
  404dd8:	xchg   ecx,eax
  404dd9:	jle    0x404da5
  404ddb:	adc    dl,bh
  404ddd:	add    ebp,edx
  404ddf:	inc    ecx
  404de0:	jnp    0x404d8b
  404de2:	xor    eax,0xf9272b51
  404de7:	push   ss
  404de8:	mov    esi,DWORD PTR [eax+0x76]
  404deb:	push   ebp
  404dec:	add    edx,DWORD PTR [ebp+edx*8-0x60536114]
  404df3:	adc    eax,0x84bacfac
  404df8:	cmp    eax,0x45e2059
  404dfd:	out    dx,al
  404dfe:	call   0x5b7bfa4e
  404e03:	mov    al,ch
  404e05:	xchg   BYTE PTR [eax+0x7d22c],bl
  404e0b:	push   0x2d
  404e0d:	data16 daa 
  404e0f:	inc    ebp
  404e10:	adc    cl,ah
  404e12:	stos   BYTE PTR es:[edi],al
  404e13:	adc    eax,0x674c78c9
  404e18:	fdivr  st(1),st
  404e1a:	add    dh,BYTE PTR [ecx]
  404e1c:	out    0x78,al
  404e1e:	dec    edx
  404e1f:	(bad)  
  404e20:	jmp    0x7e229a20
  404e25:	push   esi
  404e26:	adc    DWORD PTR ds:[ebp+0x41],eax
  404e2a:	inc    eax
  404e2b:	fs imul eax,ebp,0xfffffffa
  404e2f:	or     ah,bl
  404e31:	mov    dl,0x29
  404e33:	(bad)  
  404e34:	or     DWORD PTR [eax],eax
  404e36:	lods   al,BYTE PTR ds:[esi]
  404e37:	add    eax,0xa728a9b6
  404e3c:	test   eax,0x65fe170
  404e41:	data16 (bad) 
  404e43:	loopne 0x404e16
  404e45:	push   di
  404e47:	sahf   
  404e48:	jmp    0x404e8c
  404e4a:	fldenv [eax-0x40b3fac0]
  404e50:	mov    al,ds:0xf3b6324c
  404e55:	and    esi,DWORD PTR [esp+esi*2+0x21]
  404e59:	(bad)  
  404e5a:	fst    DWORD PTR [edi]
  404e5c:	ins    DWORD PTR es:[edi],dx
  404e5d:	sbb    al,0xde
  404e5f:	out    0xfa,eax
  404e61:	xlat   BYTE PTR ds:[ebx]
  404e62:	adc    dl,BYTE PTR [eax]
  404e64:	push   esi
  404e65:	xchg   ebp,eax
  404e66:	mov    cl,0xa4
  404e68:	pusha  
  404e69:	dec    esp
  404e6a:	dec    edx
  404e6b:	or     esi,DWORD PTR [ecx+0x44da375c]
  404e71:	mov    ds,WORD PTR [eax]
  404e73:	ret    0xa16d
  404e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e77:	dec    esi
  404e78:	imul   ebp,DWORD PTR [edi-0x16],0x5e
  404e7c:	sub    al,bh
  404e7e:	retf   0xcd2f
  404e81:	mov    ds:0x6f04d563,al
  404e86:	in     eax,dx
  404e87:	scas   eax,DWORD PTR es:[edi]
  404e88:	js     0x404ec6
  404e8a:	mov    BYTE PTR [esi+0x1c6a2404],bh
  404e90:	aas    
  404e91:	mov    bl,0xe6
  404e93:	mov    eax,0xb29e04a
  404e98:	mov    bl,0xaf
  404e9a:	push   0xffffffbd
  404e9c:	xchg   esi,eax
  404e9d:	mov    edi,DWORD PTR [eax]
  404e9f:	pop    edi
  404ea0:	push   eax
  404ea1:	xchg   edi,eax
  404ea2:	xchg   DWORD PTR [ecx+eax*2],eax
  404ea5:	fst    QWORD PTR [edx+eax*1]
  404ea8:	xor    esi,DWORD PTR [edi]
  404eaa:	jg     0x404ecd
  404eac:	push   ebp
  404ead:	xor    BYTE PTR [ebp+0x60],dh
  404eb0:	scas   eax,DWORD PTR es:[edi]
  404eb1:	mov    dl,0xbc
  404eb3:	bound  esp,QWORD PTR [esi+0xa]
  404eb6:	mov    eax,0x4568502c
  404ebb:	pop    ecx
  404ebc:	xor    BYTE PTR es:[ebx+0x3e8de9d6],bh
  404ec3:	mov    edx,0xe15b4a71
  404ec8:	xlat   BYTE PTR ds:[ebx]
  404ec9:	adc    bh,BYTE PTR [edx-0x1a831142]
  404ecf:	mov    edx,0xe8b794af
  404ed5:	cwde   
  404ed6:	jle    0x404ee9
  404ed8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404eda:	stos   BYTE PTR es:[edi],al
  404edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404edd:	fimul  DWORD PTR [ebx+0x38f7942a]
  404ee3:	sar    BYTE PTR [edi],cl
  404ee5:	ret    0x1b15
  404ee8:	cli    
  404ee9:	fdivr  QWORD PTR [esi-0x234d7dad]
  404eef:	push   esi
  404ef0:	loop   0x404f4e
  404ef2:	push   0x31
  404ef4:	cli    
  404ef5:	pusha  
  404ef6:	clc    
  404ef7:	and    al,0x39
  404ef9:	out    dx,eax
  404efa:	or     BYTE PTR [edi+0x3999b41b],bl
  404f00:	mov    ah,0xa7
  404f02:	sbb    BYTE PTR [edx],dl
  404f04:	test   bh,cl
  404f06:	mov    al,ds:0x7b4bb022
  404f0b:	(bad)  
  404f0c:	xchg   ebp,eax
  404f0d:	sub    ebx,DWORD PTR gs:[edx]
  404f10:	test   DWORD PTR [ebp+eax*1-0x6502f668],edx
  404f17:	repz xor eax,DWORD PTR [esp+edi*2+0x714b07fd]
  404f1f:	retf   
  404f20:	adc    DWORD PTR [ebx+0x75],0xd
  404f24:	mul    DWORD PTR [eax+0x894af5e]
  404f2a:	push   edx
  404f2b:	call   0x621d:0x816fe820
  404f32:	aad    0x2d
  404f34:	jp     0x404f6b
  404f36:	stos   BYTE PTR es:[edi],al
  404f37:	xchg   ebx,eax
  404f38:	dec    ebp
  404f39:	sbb    DWORD PTR [ebp+esi*8+0x6faee833],ebp
  404f40:	std    
  404f41:	mov    WORD PTR [ecx+0x79],ss
  404f44:	inc    edi
  404f45:	nop
  404f46:	add    eax,0x5c12d6d4
  404f4b:	pop    edi
  404f4c:	aam    0x5f
  404f4e:	dec    DWORD PTR [ecx-0x18503f8b]
  404f54:	test   eax,0xa431addb
  404f59:	loop   0x404ef3
  404f5b:	nop
  404f5c:	stos   BYTE PTR es:[edi],al
  404f5d:	div    DWORD PTR [ecx]
  404f5f:	pop    edx
  404f60:	outs   dx,DWORD PTR ds:[esi]
  404f61:	adc    DWORD PTR [eax+0x6fb96512],eax
  404f67:	jl     0x404f17
  404f69:	scas   eax,DWORD PTR es:[edi]
  404f6a:	in     eax,0x52
  404f6c:	mov    ecx,0x8b813c27
  404f71:	fcom   DWORD PTR [esi+0x2f]
  404f74:	aas    
  404f75:	fild   QWORD PTR [edi-0x65]
  404f78:	scas   eax,DWORD PTR es:[edi]
  404f79:	into   
  404f7a:	call   0xd32df55f
  404f7f:	pop    DWORD PTR [esi-0x6]
  404f82:	add    eax,esi
  404f84:	cmp    ebx,DWORD PTR [edx+0x6996e986]
  404f8a:	inc    ecx
  404f8b:	shl    BYTE PTR [esi-0x30],cl
  404f8e:	pusha  
  404f8f:	xchg   ecx,eax
  404f90:	inc    esi
  404f91:	push   edx
  404f92:	fsincos 
  404f94:	jmp    0xd8a1e858
  404f99:	pop    ebx
  404f9a:	add    ch,cl
  404f9c:	cwde   
  404f9d:	pop    esi
  404f9e:	fidiv  WORD PTR [ecx+0x32]
  404fa1:	mov    al,0xb1
  404fa3:	fcomp  QWORD PTR [eax]
  404fa5:	pop    esi
  404fa6:	and    eax,ebp
  404fa8:	push   ebp
  404fa9:	and    eax,0x876cf358
  404fae:	xchg   esp,eax
  404faf:	xchg   ebp,eax
  404fb0:	add    DWORD PTR [esi-0x26],eax
  404fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb4:	popa   
  404fb5:	jno    0x404f51
  404fb7:	lds    edx,FWORD PTR [eax]
  404fb9:	pcmpeqb mm1,mm6
  404fbc:	xor    esi,DWORD PTR [edi-0x6e]
  404fbf:	dec    ebx
  404fc0:	imul   eax,DWORD PTR [ebx],0xfb4390aa
  404fc6:	xchg   esp,eax
  404fc7:	xchg   esi,eax
  404fc8:	shl    BYTE PTR [esi],cl
  404fca:	gs int 0x53
  404fcd:	in     al,0x83
  404fcf:	mov    eax,?
  404fd1:	js     0x404f88
  404fd3:	js     0x404f55
  404fd5:	aas    
  404fd6:	jl     0x405041
  404fd8:	jno    0x404f62
  404fda:	and    ebx,DWORD PTR [ecx+0x3803178b]
  404fe0:	call   0xe2a6dc71
  404fe5:	ja     0x404f6b
  404fe7:	stc    
  404fe8:	sti    
  404fe9:	ins    DWORD PTR es:[edi],dx
  404fea:	jnp    0x404fae
  404fec:	stos   BYTE PTR es:[edi],al
  404fed:	jl     0x404fdb
  404fef:	jbe    0x40501f
  404ff1:	ds int3 
  404ff3:	xchg   edi,eax
  404ff4:	mov    eax,0xc35fb57
  404ff9:	cwde   
  404ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ffb:	mov    ecx,0x5d209692
  405000:	mov    ds:0xaf1aa843,al
  405005:	mov    edi,0x844e1f07
  40500a:	cmp    BYTE PTR [esi-0x42],bh
  40500d:	xor    cl,BYTE PTR [ebx-0x13]
  405010:	fwait
  405011:	mov    ds:0x3aa29cc3,al
  405016:	sub    esi,edx
  405018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405019:	inc    edi
  40501a:	mov    eax,0x40d6a182
  40501f:	mov    esi,0x7a1c7786
  405024:	mov    bl,0x88
  405026:	pushf  
  405027:	cmp    DWORD PTR [esp+edx*1],0x4b
  40502b:	pop    eax
  40502c:	xchg   ebp,eax
  40502d:	bound  esp,QWORD PTR [ecx]
  40502f:	(bad)  
  405030:	fs aam 0xdd
  405033:	aad    0x9e
  405035:	nop
  405036:	test   eax,0x453b3007
  40503b:	out    dx,al
  40503c:	hlt    
  40503d:	add    ah,ch
  40503f:	xor    al,BYTE PTR [ecx+eax*1]
  405042:	ficomp WORD PTR [edi-0x78f886ed]
  405048:	jge    0x404fd4
  40504a:	retf   0xe5cb
  40504d:	outs   dx,BYTE PTR ds:[esi]
  40504e:	fucomp st(6)
  405050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405052:	and    eax,0xf63b30ed
  405057:	loopne 0x40505b
  405059:	jne    0x404ffd
  40505b:	addr16 and eax,0x85eab56c
  405061:	gs jnp 0x40503b
  405064:	retf   0x1246
  405067:	fldenv [ebp+0x15]
  40506a:	add    eax,0x28e6cbd4
  40506f:	adc    al,0x64
  405071:	or     ch,BYTE PTR [ebp-0x73]
  405074:	mov    dl,0x46
  405076:	pop    es
  405077:	sub    al,0x80
  405079:	inc    esp
  40507a:	sub    cl,dl
  40507c:	aad    0x11
  40507e:	aaa    
  40507f:	adc    eax,0xa4c34d6e
  405084:	adc    esi,0xffffffe7
  405087:	inc    esi
  405088:	dec    ebp
  405089:	pop    eax
  40508a:	outs   dx,BYTE PTR ds:[esi]
  40508b:	push   ecx
  40508c:	jmp    0x3aec:0xd18e51cd
  405093:	(bad)  
  405094:	in     al,0xa4
  405096:	lds    eax,FWORD PTR [ebp+0x21]
  405099:	pop    edi
  40509a:	adc    BYTE PTR [ebp-0x10f92f53],ch
  4050a0:	mov    ebx,DWORD PTR [ecx*1+0x62402852]
  4050a7:	aad    0xaa
  4050a9:	adc    al,0x2
  4050ab:	push   cs
  4050ac:	(bad)  
  4050ae:	sahf   
  4050af:	cli    
  4050b0:	out    0x51,eax
  4050b2:	in     al,dx
  4050b3:	mov    eax,ds:0xa7154472
  4050b8:	test   al,0x73
  4050ba:	pop    ss
  4050bb:	leave  
  4050bc:	dec    ebp
  4050bd:	lahf   
  4050be:	push   esp
  4050bf:	adc    eax,0x4da11bf6
  4050c4:	mov    al,BYTE PTR [esi]
  4050c6:	out    0xf0,eax
  4050c8:	shl    BYTE PTR [ebx+0x3a],cl
  4050cb:	aad    0x2e
  4050cd:	cs push eax
  4050cf:	xchg   edi,eax
  4050d0:	fisttp QWORD PTR [ebx-0x35fb8804]
  4050d6:	push   ebp
  4050d7:	fcmovne st,st(3)
  4050d9:	mov    esp,0xd157ec1
  4050de:	and    BYTE PTR [edx],ah
  4050e0:	aas    
  4050e1:	xor    ah,BYTE PTR [ebx-0xd]
  4050e4:	rcl    BYTE PTR [ebx-0x4767268a],cl
  4050ea:	mov    ds,WORD PTR [esi+0x25]
  4050ed:	jge    0x405082
  4050ef:	inc    ebx
  4050f0:	mov    ds:0xc92148b2,eax
  4050f5:	jnp    0x40514a
  4050f7:	mov    dh,0x69
  4050f9:	or     BYTE PTR ds:0x662dc976,al
  4050ff:	ficomp WORD PTR [esi+ecx*8+0x2a64cdac]
  405106:	mov    esi,0x830adaaf
  40510b:	daa    
  40510c:	stos   DWORD PTR es:[edi],eax
  40510d:	xchg   ebx,esi
  40510f:	fiadd  WORD PTR [esp+edx*8-0x6c]
  405113:	push   ebp
  405114:	fdiv   DWORD PTR ds:0xbbb4db15
  40511a:	(bad)  
  40511b:	fdiv   QWORD PTR [edx]
  40511d:	fisttp WORD PTR [ebp+0x45]
  405120:	push   esp
  405121:	inc    esp
  405122:	les    eax,FWORD PTR [eax]
  405124:	clc    
  405125:	and    BYTE PTR [esi+0x58],0x6c
  405129:	xchg   esp,eax
  40512a:	stos   DWORD PTR es:[edi],eax
  40512b:	mov    BYTE PTR [esp+ecx*1+0x24affcdb],al
  405132:	add    bh,BYTE PTR [edi]
  405134:	mov    cl,0x69
  405136:	into   
  405137:	sbb    DWORD PTR [esi*8-0x144f6001],ebx
  40513e:	sub    al,BYTE PTR [edx+0x1b]
  405141:	daa    
  405142:	jno    0x405168
  405144:	lods   al,BYTE PTR gs:[esi]
  405146:	cli    
  405147:	cmp    eax,0xc8159bd5
  40514c:	aaa    
  40514d:	mov    al,0x7a
  40514f:	xor    DWORD PTR [edx+0x27],edi
  405152:	mov    esi,0xd921099d
  405157:	iret   
  405158:	sub    DWORD PTR [edi],esi
  40515a:	dec    ebp
  40515b:	loopne 0x405158
  40515d:	repz (bad) 
  40515f:	cwde   
  405160:	cmp    BYTE PTR [eax+0x2c],ch
  405163:	test   eax,0xd431f97
  405168:	cwde   
  405169:	(bad)
  40516d:	daa    
  40516e:	jmp    0x2efedc4e
  405173:	pop    ebp
  405174:	(bad)  
  405175:	rcr    edi,1
  405177:	fld    st(7)
  405179:	fnsave [ebp+0x20686eaa]
  40517f:	and    al,0x27
  405181:	aad    0xb
  405183:	test   al,0xb6
  405185:	in     al,dx
  405186:	mov    ds:0xd39b8d6b,eax
  40518b:	test   DWORD PTR [ebx],0xa667c377
  405191:	or     BYTE PTR [esi-0x41e0788],ah
  405197:	(bad)  
  405198:	sti    
  405199:	cs mov al,0xa0
  40519d:	add    edx,DWORD PTR [esi]
  40519f:	ficomp DWORD PTR [esi+ebp*1-0x785d1fa0]
  4051a6:	dec    eax
  4051a7:	sbb    al,0x6f
  4051a9:	cmc    
  4051aa:	loope  0x40518a
  4051ac:	cld    
  4051ad:	jae    0x4051b7
  4051af:	leave  
  4051b0:	cdq    
  4051b1:	das    
  4051b2:	mov    bl,dl
  4051b4:	adc    ebp,esi
  4051b6:	nop
  4051b7:	cmp    esp,DWORD PTR [ebx+0x76]
  4051ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051bb:	arpl   sp,si
  4051bd:	mov    dl,0x82
  4051bf:	shl    DWORD PTR [ecx+0x71],1
  4051c2:	bts    DWORD PTR [esi],0xf
  4051c6:	mov    eax,ds:0xd1f77f50
  4051cb:	adc    ah,bl
  4051cd:	shl    BYTE PTR [esi-0x3a],cl
  4051d0:	(bad)  
  4051d2:	cmp    cl,ah
  4051d4:	ja     0x40518d
  4051d6:	jg     0x4051a0
  4051d8:	sbb    edx,DWORD PTR [ebx]
  4051da:	jno    0x4051d2
  4051dc:	shl    BYTE PTR [edx],cl
  4051de:	mov    al,ds:0x1f399ce6
  4051e3:	inc    edx
  4051e4:	jp     0x4051b8
  4051e6:	loopne 0x40520d
  4051e8:	sub    BYTE PTR [eax+ecx*4-0x14],bh
  4051ec:	xchg   esi,eax
  4051ed:	hlt    
  4051ee:	dec    edi
  4051ef:	std    
  4051f0:	jg     0x4051e5
  4051f2:	pushf  
  4051f3:	in     al,dx
  4051f4:	mov    eax,ds:0xea8ef430
  4051f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051fa:	imul   ebx,DWORD PTR [ecx-0x29],0x76d84e85
  405201:	dec    ebx
  405202:	mov    dl,BYTE PTR [ebx]
  405204:	and    eax,0x4df0931
  405209:	sub    eax,esp
  40520b:	mov    WORD PTR [ecx],cs
  40520d:	outs   dx,BYTE PTR ds:[esi]
  40520e:	mov    esi,0x5cd1d3fd
  405213:	int3   
  405214:	and    esp,eax
  405216:	fs out 0xca,al
  405219:	or     ah,al
  40521b:	das    
  40521c:	js     0x4051ba
  40521e:	jmp    0x4051de
  405220:	xchg   edi,eax
  405221:	mov    ch,0xc4
  405223:	arpl   WORD PTR [eax],dx
  405225:	(bad)  
  405226:	(bad)  
  405227:	mov    ebx,0x68805b84
  40522c:	mov    ch,0xf1
  40522e:	stos   DWORD PTR es:[edi],eax
  40522f:	adc    dl,BYTE PTR ds:0xc13038f8
  405235:	xchg   edi,eax
  405236:	sbb    eax,0xfc04ed2b
  40523b:	scas   al,BYTE PTR es:[edi]
  40523c:	jae    0x405261
  40523e:	stos   BYTE PTR es:[edi],al
  40523f:	out    dx,al
  405240:	xchg   ecx,eax
  405241:	jb     0x40526a
  405243:	inc    ebp
  405244:	sub    dh,BYTE PTR [edx+eiz*8-0x1]
  405248:	push   esp
  405249:	mov    dl,0x0
  40524b:	push   es
  40524c:	or     ah,dl
  40524e:	mov    ds:0x716f6e54,al
  405253:	xchg   edx,eax
  405254:	and    BYTE PTR [ebx+0x56],ch
  405257:	cld    
  405258:	xor    BYTE PTR [eax+eiz*4],al
  40525b:	imul   ebp,DWORD PTR [ecx+0x6c8fbfe7],0xffffffaf
  405262:	hlt    
  405263:	mov    ch,0x34
  405265:	mov    ebp,0x9901b08a
  40526a:	mov    ds:0x6315c901,al
  40526f:	out    0xcf,al
  405271:	adc    ecx,DWORD PTR [edi+0xa]
  405274:	scas   al,BYTE PTR es:[edi]
  405275:	repnz push 0x7e135534
  40527b:	out    0x11,al
  40527d:	xchg   BYTE PTR [esi],ch
  40527f:	(bad)  
  405280:	add    DWORD PTR [edx+0x4d047c01],esp
  405286:	mov    dh,0x28
  405288:	adc    BYTE PTR [ecx+0x3b57b1b7],bl
  40528e:	and    esi,DWORD PTR [ebx-0x26]
  405291:	inc    esp
  405292:	xchg   esp,eax
  405293:	out    dx,al
  405294:	xor    DWORD PTR [ebp+eax*2+0x1f],eax
  405298:	gs and ebx,esi
  40529b:	fs scas al,BYTE PTR es:[edi]
  40529d:	fnstenv [ebp-0x57]
  4052a0:	adc    DWORD PTR [edi-0x5ff23302],edi
  4052a6:	dec    esp
  4052a7:	(bad)  
  4052a8:	jg     0x405256
  4052aa:	and    al,0x58
  4052ac:	aas    
  4052ad:	(bad)  
  4052ae:	cmp    eax,0xb1101731
  4052b3:	cmp    al,0xf3
  4052b5:	inc    edi
  4052b6:	int    0xb0
  4052b8:	add    cl,BYTE PTR [esi+0x50]
  4052bb:	inc    ebp
  4052bc:	inc    edx
  4052bd:	dec    edi
  4052be:	xchg   ebp,eax
  4052bf:	inc    esp
  4052c0:	push   ss
  4052c1:	cmp    DWORD PTR [edi-0x254e3fba],ecx
  4052c7:	imul   eax,DWORD PTR [esi-0x29],0xffffff86
  4052cb:	xchg   DWORD PTR [edi],esi
  4052cd:	xor    BYTE PTR [esi],al
  4052cf:	and    dh,BYTE PTR [esi-0x28]
  4052d2:	imul   DWORD PTR [ebx-0x1854c6a5]
  4052d8:	pop    ss
  4052d9:	scas   eax,DWORD PTR es:[edi]
  4052da:	mov    dh,0xa4
  4052dc:	in     eax,0xc6
  4052de:	cmp    BYTE PTR [edx+ecx*8+0x34],bh
  4052e2:	pop    ecx
  4052e3:	xor    bl,0x99
  4052e6:	icebp  
  4052e7:	xchg   edi,eax
  4052e8:	cli    
  4052e9:	scas   al,BYTE PTR es:[edi]
  4052ea:	inc    edx
  4052eb:	xor    eax,0x68c9e3f0
  4052f0:	leave  
  4052f1:	add    eax,0xc86c8fc3
  4052f6:	jae    0x405339
  4052f8:	(bad)  
  4052f9:	leave  
  4052fa:	adc    al,0x5
  4052fc:	and    al,0xe4
  4052fe:	bound  ebx,QWORD PTR [esi]
  405300:	and    eax,0x339f5ed3
  405305:	ficom  WORD PTR [eax-0xb6452a5]
  40530b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40530c:	rol    DWORD PTR [edx],cl
  40530e:	call   0x6484fec1
  405313:	lods   al,BYTE PTR ds:[esi]
  405314:	sbb    esp,0x1fa8994b
  40531a:	fcomp  DWORD PTR [edx+0x7f]
  40531d:	sbb    al,0x8b
  40531f:	pop    esi
  405320:	test   ch,ch
  405322:	inc    ecx
  405323:	mov    bl,0x72
  405325:	jecxz  0x405389
  405327:	sub    BYTE PTR [edx-0x2eeec82a],ah
  40532d:	sbb    esi,DWORD PTR [edx-0x9]
  405330:	je     0x405361
  405332:	add    ebx,ebx
  405334:	jp     0x405318
  405336:	sbb    edx,DWORD PTR [edi+0x76e05c4e]
  40533c:	jae    0x4052ce
  40533e:	(bad)  
  40533f:	iret   
  405340:	add    eax,0xf1ca773
  405345:	dec    edi
  405346:	in     al,0x15
  405348:	dec    eax
  405349:	fsub   QWORD PTR [edx+ecx*4-0x31b09912]
  405350:	mov    cl,0x18
  405352:	cwde   
  405353:	inc    eax
  405354:	jge    0x4052e6
  405356:	mov    ecx,0x90ddf8b3
  40535b:	test   BYTE PTR [ebx],ch
  40535d:	or     DWORD PTR [ecx-0x44],ebx
  405360:	mov    bl,0x3d
  405362:	sub    DWORD PTR [ebx-0x6a],ebx
  405365:	sahf   
  405366:	mov    esi,DWORD PTR [ecx]
  405368:	mov    edi,0x15b419db
  40536d:	sbb    eax,0x5a678c37
  405372:	mov    esp,0xa9681bb7
  405377:	out    0xc5,al
  405379:	out    dx,eax
  40537a:	mov    edi,0x7076cbdb
  40537f:	dec    ebx
  405380:	jmp    0xd2068100
  405385:	imul   edx,DWORD PTR [ecx+0x46e1fd1b],0xf932284f
  40538f:	xchg   BYTE PTR [ecx],ah
  405391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405392:	out    dx,eax
  405393:	ds (bad) 
  405395:	gs inc edi
  405397:	pusha  
  405398:	pop    ss
  405399:	fcomp  DWORD PTR [ebx+0x68]
  40539c:	xchg   ebp,eax
  40539d:	sar    cl,cl
  40539f:	and    bl,cl
  4053a1:	xor    edi,ebp
  4053a3:	xchg   esi,eax
  4053a4:	lahf   
  4053a5:	cs dec edi
  4053a7:	mov    esp,0x9231898e
  4053ac:	push   ebx
  4053ad:	data16 xchg dh,al
  4053b0:	stos   BYTE PTR es:[edi],al
  4053b1:	popa   
  4053b2:	in     eax,0x2b
  4053b4:	aam    0x7
  4053b6:	test   DWORD PTR [ebp+edi*4-0x14028ab6],esi
  4053bd:	mov    bl,0x6f
  4053bf:	push   ebp
  4053c0:	push   ebx
  4053c1:	push   ss
  4053c2:	in     eax,0x30
  4053c4:	sti    
  4053c5:	mov    dl,0x6
  4053c7:	cmp    eax,DWORD PTR [ebp+eiz*1+0x16db818c]
  4053ce:	outs   dx,DWORD PTR ds:[esi]
  4053cf:	stos   BYTE PTR es:[edi],al
  4053d0:	ret    
  4053d1:	pop    edx
  4053d2:	inc    ebx
  4053d3:	push   cs
  4053d4:	fdivr  QWORD PTR [ebx]
  4053d6:	or     BYTE PTR [eax+0x69],cl
  4053d9:	dec    eax
  4053da:	ret    0x7ddc
  4053dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053de:	mov    BYTE PTR [ebx],bh
  4053e0:	test   BYTE PTR [edx+0x2d],0x38
  4053e4:	dec    edx
  4053e5:	xor    DWORD PTR [esi-0x1f],ebp
  4053e8:	aas    
  4053e9:	sbb    eax,0x1ff816d4
  4053ee:	sti    
  4053ef:	lea    ebx,[edx-0x4bd91fa1]
  4053f5:	add    eax,0x9bab0d35
  4053fa:	or     DWORD PTR [ecx],edx
  4053fc:	repnz pop ebx
  4053fe:	pop    ss
  4053ff:	stos   DWORD PTR es:[edi],eax
  405400:	inc    eax
  405401:	cs test al,0xeb
  405404:	ins    DWORD PTR es:[edi],dx
  405405:	loopne 0x405433
  405407:	pop    eax
  405408:	mov    cl,BYTE PTR [ebx+0x4]
  40540b:	jns    0x4053f4
  40540d:	sar    bh,0x2f
  405410:	imul   edi,DWORD PTR [edx+0x56164047],0x8763f6
  40541a:	mul    BYTE PTR [si+0x22]
  40541e:	dec    ebp
  40541f:	jne    0x405431
  405421:	rcr    BYTE PTR ds:0x48d886a0,1
  405427:	pushf  
  405428:	retf   0xec43
  40542b:	xchg   edi,eax
  40542c:	adc    DWORD PTR [ecx],0x11dd02cf
  405432:	xchg   esi,eax
  405433:	mov    ds:0x3c9fbf90,eax
  405438:	xchg   edi,eax
  405439:	jg     0x405479
  40543b:	push   eax
  40543c:	(bad)  
  40543d:	stos   BYTE PTR es:[edi],al
  40543e:	jmp    0x40542a
  405440:	in     eax,0xe1
  405442:	test   DWORD PTR [edi+0x76],0x98181a75
  405449:	cmp    bh,BYTE PTR [eiz*4-0x43d5ecb2]
  405450:	mov    cl,0xa8
  405452:	out    0x1e,al
  405454:	retf   0x1a08
  405457:	ja     0x405429
  405459:	aad    0x24
  40545b:	jo     0xd528569a
  405461:	inc    ebp
  405462:	mov    ?,ecx
  405464:	mov    al,0x8
  405466:	das    
  405467:	fcomp  DWORD PTR [ebx+0x2c2fce3b]
  40546d:	mov    esi,DWORD PTR [ebx]
  40546f:	push   edi
  405470:	sbb    DWORD PTR [ebx+edx*2-0x4a13ebf6],edi
  405477:	mov    dh,0xc7
  405479:	pusha  
  40547a:	into   
  40547b:	dec    esi
  40547c:	and    eax,0x97a92e93
  405481:	test   al,0xe7
  405483:	push   0xa3d547d1
  405488:	push   edi
  405489:	popf   
  40548a:	push   ss
  40548b:	mov    ch,0x5a
  40548d:	or     cl,BYTE PTR [ecx]
  40548f:	mov    eax,ds:0xd52ab94b
  405494:	pop    eax
  405495:	or     dl,ch
  405497:	pop    edi
  405498:	cmp    al,0xe7
  40549a:	idiv   BYTE PTR ss:[edi]
  40549d:	leave  
  40549e:	adc    cl,bl
  4054a0:	jns    0x40551c
  4054a2:	mov    dl,0x9a
  4054a4:	lahf   
  4054a5:	loope  0x40547b
  4054a7:	les    edx,FWORD PTR [esi]
  4054a9:	pop    esp
  4054aa:	ficom  DWORD PTR [ecx+ebp*8-0x5c]
  4054ae:	sub    BYTE PTR [ecx],bh
  4054b0:	sub    al,0x67
  4054b2:	sbb    BYTE PTR [ebx+0x43113d9d],0xe8
  4054b9:	mov    BYTE PTR [edi+0x2b45c06c],bh
  4054bf:	pop    ebx
  4054c0:	(bad)  
  4054c1:	fiadd  DWORD PTR [ebx]
  4054c3:	push   ecx
  4054c4:	xor    ebp,ebx
  4054c6:	adc    BYTE PTR [esi-0x2b190f8e],dh
  4054cc:	dec    eax
  4054cd:	test   al,0x3
  4054cf:	mov    es,WORD PTR [ebx]
  4054d1:	inc    ecx
  4054d2:	into   
  4054d3:	mul    DWORD PTR [ebp+edx*8-0x62be8112]
  4054da:	dec    edi
  4054db:	mov    ebp,0x1863c832
  4054e0:	ja     0x4054c8
  4054e2:	fidiv  DWORD PTR [ebp-0x5c]
  4054e5:	and    DWORD PTR [edi],eax
  4054e7:	shl    ch,cl
  4054e9:	pop    esp
  4054ea:	jge    0x405515
  4054ec:	sub    al,bl
  4054ee:	add    al,dl
  4054f0:	test   eax,0x4027d9b5
  4054f5:	ins    BYTE PTR es:[edi],dx
  4054f6:	loope  0x405550
  4054f8:	mov    eax,ds:0x35ca5e6b
  4054fd:	(bad)  
  4054fe:	call   0x2b51c807
  405503:	cmp    esp,DWORD PTR [ebx]
  405505:	inc    ebp
  405506:	fdivr  DWORD PTR ds:0xadc8c434
  40550c:	add    BYTE PTR [ebx+0x37],0x0
  405510:	call   DWORD PTR [esp+edx*1+0x1e46b4de]
  405517:	sub    eax,0xb1a1d979
  40551c:	jns    0x4054e0
  40551e:	lock data16 fwait
  405521:	dec    edi
  405522:	jns    0x4054d2
  405524:	sbb    al,0x6d
  405526:	xor    al,dh
  405528:	in     eax,0xc2
  40552a:	inc    edx
  40552b:	fcomp  DWORD PTR [ebp-0x68e211f1]
  405531:	retf   
  405532:	push   esi
  405533:	sub    BYTE PTR ds:0x819993b8,bl
  405539:	pop    ebp
  40553a:	add    edi,esi
  40553c:	xchg   ebx,eax
  40553d:	addr16 cmp eax,0xd8043693
  405543:	sbb    ebp,DWORD PTR [edx+0x43257093]
  405549:	lea    esi,[edi]
  40554b:	cwde   
  40554c:	dec    esi
  40554d:	retf   0x5a73
  405550:	pop    edx
  405551:	inc    eax
  405552:	cmp    DWORD PTR [ecx-0x5c115e31],eax
  405558:	inc    esp
  405559:	leave  
  40555a:	je     0x4055ba
  40555c:	pop    esp
  40555d:	jae    0x405552
  40555f:	add    ecx,ebx
  405561:	sub    al,0xf9
  405563:	mov    cl,0x7a
  405565:	jbe    0x40559e
  405567:	fild   WORD PTR [eax]
  405569:	arpl   WORD PTR [edx+0x39],bx
  40556c:	or     BYTE PTR [ebx+ebp*2-0x17b949a0],bh
  405573:	or     cl,BYTE PTR [eax]
  405575:	jp     0x405543
  405577:	sti    
  405578:	mov    esi,0x605fd79
  40557d:	adc    ecx,ecx
  40557f:	loopne 0x40557d
  405581:	jnp    0x4055c2
  405583:	jmp    0xf619:0xde044159
  40558a:	bound  eax,QWORD PTR [eax+0x23a57dcd]
  405590:	mov    ch,0x40
  405592:	mov    DWORD PTR [esi],ecx
  405594:	xor    ecx,DWORD PTR [ebx]
  405596:	inc    esp
  405597:	and    ebp,DWORD PTR [eax]
  405599:	jle    0x4055b1
  40559b:	cs add al,0xf5
  40559e:	dec    eax
  40559f:	inc    edx
  4055a0:	aam    0x38
  4055a2:	xchg   ecx,eax
  4055a3:	lods   al,BYTE PTR ds:[esi]
  4055a4:	enter  0xe88e,0x50
  4055a8:	jmp    0xf3a9:0x3d859434
  4055af:	ins    BYTE PTR es:[edi],dx
  4055b0:	jl     0x40558d
  4055b2:	sub    bh,ah
  4055b4:	sbb    DWORD PTR [ebp-0x6b6aed70],esi
  4055ba:	outs   dx,DWORD PTR ds:[esi]
  4055bb:	sub    DWORD PTR [ebx],ebp
  4055bd:	(bad)  
  4055be:	leave  
  4055bf:	xchg   DWORD PTR [ebx],ebp
  4055c1:	push   ebx
  4055c2:	inc    ecx
  4055c3:	inc    eax
  4055c4:	popa   
  4055c5:	and    ebp,DWORD PTR ds:0x5c2105b5
  4055cb:	fisub  DWORD PTR [edi]
  4055cd:	pop    esi
  4055ce:	or     esp,ecx
  4055d0:	rol    eax,cl
  4055d2:	test   al,0x9
  4055d4:	adc    edi,ecx
  4055d6:	push   ss
  4055d7:	or     al,0xe6
  4055d9:	jmp    0x84da:0xf656b89d
  4055e0:	add    eax,0xf7ed2554
  4055e5:	mov    eax,ds:0x124f7e39
  4055ea:	or     ecx,DWORD PTR [esi]
  4055ec:	sub    BYTE PTR [eax+ebx*4-0x3ed27a97],dl
  4055f3:	fdivr  QWORD PTR [eax-0x731d2f83]
  4055f9:	adc    eax,DWORD PTR ds:0xc7998b11
  4055ff:	mov    dh,0x18
  405601:	push   cs
  405602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405603:	ins    BYTE PTR es:[edi],dx
  405604:	jb     0x4055a1
  405606:	les    eax,FWORD PTR [esi+0x602a1821]
  40560c:	inc    ecx
  40560d:	adc    dl,bh
  40560f:	xchg   esi,eax
  405610:	iret   
  405611:	jns    0x405602
  405613:	outs   dx,DWORD PTR ds:[esi]
  405614:	cmp    DWORD PTR [ecx],0x4c
  405617:	mov    edx,0xd80d2af4
  40561c:	sbb    BYTE PTR [ecx+0x7a],0xd8
  405620:	or     al,dl
  405622:	jno    0x405694
  405624:	and    al,0xd4
  405626:	daa    
  405627:	call   FWORD PTR [ebp-0x3ba1b770]
  40562d:	adc    ah,ah
  40562f:	jo     0x405612
  405631:	cs loop 0x405633
  405634:	fcomip st,st(2)
  405636:	dec    esi
  405637:	adc    BYTE PTR [edx+0x6f],dh
  40563a:	xchg   DWORD PTR [ecx+edx*4],ecx
  40563d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40563e:	hlt    
  40563f:	(bad)  
  405641:	or     DWORD PTR [ecx],edx
  405643:	push   edx
  405644:	inc    ecx
  405645:	mov    BYTE PTR [esi+ebx*4+0x340e5ffa],cl
  40564c:	mov    cl,0x44
  40564e:	pop    edx
  40564f:	loope  0x40568f
  405651:	jbe    0x40565e
  405653:	mov    dl,al
  405655:	mov    bl,0x7d
  405657:	push   esi
  405658:	aam    0xa1
  40565a:	pop    esp
  40565b:	out    0xbb,eax
  40565d:	cs aam 0xce
  405660:	add    BYTE PTR [ebx-0x7e52cb9],0x2c
  405667:	repnz sub DWORD PTR ds:[ecx-0x1413b738],ecx
  40566f:	dec    ebx
  405670:	in     eax,dx
  405671:	push   0xffffffbf
  405673:	xor    edi,DWORD PTR [eax]
  405675:	std    
  405676:	mov    bl,0xfd
  405678:	inc    eax
  405679:	inc    esp
  40567a:	into   
  40567b:	inc    edi
  40567c:	leave  
  40567d:	leave  
  40567e:	pop    ebx
  40567f:	je     0x4056a2
  405681:	sub    BYTE PTR [edi+0x49a857b9],bl
  405687:	push   0x41b3f488
  40568c:	mov    bh,0x6e
  40568e:	in     eax,0x18
  405690:	(bad)  
  405691:	cmp    al,0x8c
  405693:	pusha  
  405694:	jne    0x4056f1
  405696:	ret    
  405697:	adc    eax,0xc5657988
  40569c:	sti    
  40569d:	mov    eax,0xd7df02fe
  4056a2:	out    dx,al
  4056a3:	je     0x4056b6
  4056a5:	cdq    
  4056a6:	(bad)  
  4056a7:	xor    BYTE PTR [esi-0x1297a916],cl
  4056ad:	retf   
  4056ae:	sub    esi,eax
  4056b0:	pop    esi
  4056b1:	cmp    bh,BYTE PTR [esi+esi*2+0x24]
  4056b5:	mov    bl,0xfc
  4056b7:	icebp  
  4056b8:	fimul  DWORD PTR [ebx]
  4056ba:	retf   0x421c
  4056bd:	cld    
  4056be:	repz pop esi
  4056c0:	loope  0x4056c0
  4056c2:	aam    0x7c
  4056c4:	add    eax,0x3e752891
  4056c9:	inc    eax
  4056ca:	mov    al,BYTE PTR [eax+0x53]
  4056cd:	mov    ds:0xd4d753a2,al
  4056d2:	test   BYTE PTR [ebp-0x41],bl
  4056d5:	sub    eax,0xd61f3aaf
  4056da:	je     0x405670
  4056dc:	mov    bl,0x4a
  4056de:	dec    ebx
  4056df:	inc    edx
  4056e0:	cmp    DWORD PTR [eax+esi*1+0x20],esp
  4056e4:	sub    BYTE PTR [esp+eax*1-0x58896a02],bl
  4056eb:	pop    ss
  4056ec:	sbb    eax,0xa38d326
  4056f1:	in     eax,dx
  4056f2:	and    bh,BYTE PTR [eax-0xa72b59]
  4056f8:	cdq    
  4056f9:	mov    DWORD PTR [edx],edi
  4056fb:	aad    0x9e
  4056fd:	cmp    al,dh
  4056ff:	pop    edx
  405700:	mov    bl,0xd5
  405702:	sbb    al,BYTE PTR ds:0x50c68373
  405708:	call   0xa50884aa
  40570d:	aam    0x40
  40570f:	jge    0x40573f
  405711:	pop    edx
  405712:	mov    ebp,0x879a369d
  405717:	sbb    BYTE PTR [edx+edx*2+0x68],bl
  40571b:	mov    ecx,0x1dd2f285
  405720:	jg     0x40574b
  405722:	(bad)  
  405723:	cmp    BYTE PTR [eax],dh
  405725:	shl    DWORD PTR ds:0x93ecb5ed,0xa2
  40572c:	cmp    bh,BYTE PTR [esi-0x5158fbcf]
  405732:	idiv   edx
  405734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405735:	xchg   edi,eax
  405736:	xor    al,0x86
  405738:	inc    esp
  405739:	das    
  40573a:	outs   dx,BYTE PTR ds:[esi]
  40573b:	imul   ebp,DWORD PTR [edx],0x36
  40573e:	leave  
  40573f:	sub    al,0xa7
  405741:	xor    DWORD PTR [ebp+0x15e10515],eax
  405747:	sub    BYTE PTR [esi],0x6f
  40574a:	add    BYTE PTR [eax-0x6],ah
  40574d:	dec    esp
  40574e:	jecxz  0x40571b
  405750:	(bad)  
  405751:	and    BYTE PTR ds:0x79ba6047,bh
  405757:	push   esi
  405758:	mov    bl,0xd8
  40575a:	mov    eax,0x89daa988
  40575f:	push   0x7f3a73fd
  405764:	out    dx,eax
  405765:	jno    0x405757
  405767:	loop   0x4057df
  405769:	mov    DWORD PTR [eax+0x4df0ade1],ecx
  40576f:	ret    
  405770:	lods   al,BYTE PTR ds:[esi]
  405771:	xchg   ebp,eax
  405772:	xor    al,BYTE PTR [edx]
  405774:	pusha  
  405775:	mov    eax,0xfbf46553
  40577a:	pop    ebx
  40577b:	out    0xdc,al
  40577d:	xchg   edi,eax
  40577e:	push   eax
  40577f:	or     eax,0xd48fd3dc
  405784:	fadd   st,st(6)
  405786:	sbb    DWORD PTR [ebx-0x4],edi
  405789:	cmp    al,0x35
  40578b:	jmp    0x18d5:0xd65e7280
  405792:	mov    eax,0x826ba078
  405797:	add    bl,dl
  405799:	mov    cl,0x5e
  40579b:	bound  esi,QWORD PTR [esi+0x6354aea3]
  4057a1:	dec    ebx
  4057a2:	pop    eax
  4057a3:	jl     0x4057dd
  4057a5:	inc    ebx
  4057a6:	jae    0x40580b
  4057a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057aa:	or     bl,BYTE PTR [esi+0x16340ea5]
  4057b0:	cmp    ebx,DWORD PTR [esi+ebx*8]
  4057b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b4:	repz test eax,0x855de41e
  4057ba:	jns    0x405813
  4057bc:	or     edi,DWORD PTR [ebx]
  4057be:	pop    edi
  4057bf:	into   
  4057c0:	outs   dx,DWORD PTR ds:[esi]
  4057c1:	add    ebp,ebx
  4057c3:	pop    ebp
  4057c4:	sbb    DWORD PTR [edx+eiz*4+0x1b],ebx
  4057c8:	shr    BYTE PTR [edi],cl
  4057ca:	xchg   esp,eax
  4057cb:	clc    
  4057cc:	mov    bl,0x2e
  4057ce:	sti    
  4057cf:	xor    BYTE PTR [edx-0x5f1496ae],0x92
  4057d6:	inc    eax
  4057d7:	lea    esi,[edx-0x36888afd]
  4057dd:	push   ebp
  4057de:	out    dx,al
  4057df:	mov    dh,0x59
  4057e1:	loop   0x405771
  4057e3:	jno    0x4057d7
  4057e5:	pop    ds
  4057e6:	and    bl,BYTE PTR [ebp+eiz*4+0x7da3261c]
  4057ed:	int    0x7e
  4057ef:	cwde   
  4057f0:	jg     0x405796
  4057f2:	inc    esi
  4057f3:	retf   
  4057f4:	(bad)  
  4057f6:	dec    edi
  4057f7:	scas   al,BYTE PTR es:[edi]
  4057f8:	pop    esp
  4057f9:	cmp    edi,DWORD PTR [edi]
  4057fb:	mov    ch,0x3e
  4057fd:	push   0x1e
  4057ff:	pop    ss
  405800:	sub    BYTE PTR [ebp+0x42],al
  405803:	ret    
  405804:	add    BYTE PTR [ebp-0x75],ah
  405807:	cpuid  
  405809:	ins    BYTE PTR es:[edi],dx
  40580a:	inc    edx
  40580b:	mov    al,0x66
  40580d:	pop    ecx
  40580e:	pop    eax
  40580f:	mov    ebx,0x2d62b42f
  405814:	ret    0xf266
  405817:	lods   eax,DWORD PTR ds:[esi]
  405818:	(bad)  
  40581a:	pop    ebx
  40581b:	dec    eax
  40581c:	sbb    BYTE PTR [eax+0x7e424aa9],dl
  405822:	je     0x405878
  405824:	sub    al,0x96
  405826:	or     eax,0x1ae017fa
  40582b:	aaa    
  40582c:	push   edx
  40582d:	xor    edx,eax
  40582f:	mov    al,ch
  405831:	cmp    BYTE PTR [edx-0x30],ah
  405834:	mov    bh,BYTE PTR [edi-0x5c97628f]
  40583a:	mov    ds:0xf57e9322,al
  40583f:	mov    ecx,0x6bc82252
  405844:	xchg   ebp,eax
  405845:	not    BYTE PTR [ecx+eiz*8]
  405848:	or     al,bl
  40584a:	xchg   esi,eax
  40584b:	aad    0x9f
  40584d:	les    ebx,FWORD PTR [ecx+0x15385897]
  405853:	lock push esp
  405855:	inc    ebx
  405856:	repnz outs dx,BYTE PTR ds:[esi]
  405858:	xchg   ch,bl
  40585a:	mov    esp,DWORD PTR [esi]
  40585c:	faddp  st(3),st
  40585e:	imul   ecx,DWORD PTR [edi+0x5b127657],0x2a
  405865:	fwait
  405866:	push   edx
  405867:	and    eax,0x7d9bf3f2
  40586c:	loop   0x4058b5
  40586e:	cwde   
  40586f:	xchg   ebx,eax
  405870:	and    BYTE PTR [esi+0x4],al
  405873:	mov    ebx,0x6556f411
  405878:	xchg   ebx,esi
  40587a:	sar    DWORD PTR [edi],1
  40587c:	jnp    0x4058d7
  40587e:	das    
  40587f:	test   DWORD PTR [eax],0xc19ae29b
  405885:	call   0xbda96286
  40588a:	out    0x89,eax
  40588c:	adc    edi,DWORD PTR [ebp+0x4db591b5]
  405892:	jo     0x40583a
  405894:	ins    DWORD PTR es:[edi],dx
  405895:	idiv   BYTE PTR [edx]
  405897:	ror    DWORD PTR [ecx],cl
  405899:	sbb    DWORD PTR [ebp+0x7b],ebx
  40589c:	push   esp
  40589d:	dec    esi
  40589e:	fs jnp 0x4058b7
  4058a1:	jne    0x405889
  4058a3:	xchg   esi,eax
  4058a4:	je     0x40586a
  4058a6:	mov    bh,0xe9
  4058a8:	aad    0x8b
  4058aa:	cmc    
  4058ab:	xchg   edi,eax
  4058ac:	daa    
  4058ad:	adc    BYTE PTR [ebx+eiz*1],bh
  4058b0:	lods   eax,DWORD PTR ds:[esi]
  4058b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b2:	hlt    
  4058b3:	loopne 0x405904
  4058b5:	pop    ds
  4058b6:	dec    esp
  4058b7:	aad    0x68
  4058b9:	ins    DWORD PTR es:[edi],dx
  4058ba:	shr    DWORD PTR [ebx+0x42521ffd],cl
  4058c0:	pop    ecx
  4058c1:	repz das 
  4058c3:	cli    
  4058c4:	cwde   
  4058c5:	mov    gs,eax
  4058c7:	fcomi  st,st(7)
  4058c9:	dec    ebp
  4058ca:	adc    al,0x6b
  4058cc:	fdivr  DWORD PTR [ebx+ebp*8+0x66880ebf]
  4058d3:	add    DWORD PTR [esi],0x81f835c1
  4058d9:	mov    esi,0xae7174ae
  4058de:	xchg   esi,edx
  4058e0:	inc    ecx
  4058e1:	cmp    eax,0x32f6a897
  4058e6:	mov    edi,0xc2b1939b
  4058eb:	add    BYTE PTR [ebp+0x54be48f0],al
  4058f1:	std    
  4058f2:	dec    DWORD PTR [edi-0x4c]
  4058f5:	sub    al,0xee
  4058f7:	test   BYTE PTR [eax+0x700b8d1e],bh
  4058fd:	dec    eax
  4058fe:	sti    
  4058ff:	dec    ebx
  405900:	pushf  
  405901:	ret    
  405902:	dec    edi
  405903:	inc    ebx
  405904:	xchg   ch,bh
  405906:	xor    eax,0x323003ea
  40590b:	aaa    
  40590c:	xchg   esp,eax
  40590d:	sub    BYTE PTR [edi],bl
  40590f:	mov    edx,DWORD PTR [edi+0x5c]
  405912:	dec    edi
  405913:	push   ebp
  405914:	mov    bh,0xc3
  405916:	out    dx,al
  405917:	xlat   BYTE PTR ds:[ebx]
  405918:	xchg   edi,eax
  405919:	push   ebp
  40591a:	jb     0x40590c
  40591c:	iret   
  40591d:	shr    BYTE PTR [ebx],1
  40591f:	int3   
  405920:	jo     0x4058d4
  405922:	add    eax,eax
  405924:	bound  edi,QWORD PTR [eax+edi*1-0x314dfa94]
  40592b:	icebp  
  40592c:	sbb    BYTE PTR [ebx-0x5a],ch
  40592f:	hlt    
  405930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405931:	ficom  DWORD PTR [edi]
  405933:	retf   0x1025
  405936:	pop    fs
  405938:	mov    esi,0x6c90cd8f
  40593d:	mov    ah,0xb7
  40593f:	frstor [edx-0x76]
  405942:	stc    
  405943:	adc    eax,DWORD PTR ds:0x1f2053e1
  405949:	stc    
  40594a:	push   cs
  40594b:	dec    ebp
  40594c:	stc    
  40594d:	xlat   BYTE PTR ds:[ebx]
  40594e:	cdq    
  40594f:	out    dx,eax
  405950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405951:	xor    dl,dl
  405953:	add    bl,BYTE PTR [eax-0x2a]
  405956:	dec    ebp
  405957:	int3   
  405958:	enter  0x58a3,0x31
  40595c:	jmp    0xc842:0x3792d800
  405963:	sbb    eax,0x4af42533
  405968:	mov    WORD PTR [ebx],fs
  40596a:	sbb    dl,BYTE PTR [edi+0x50]
  40596d:	add    DWORD PTR [ebp-0x2e],0x2d
  405971:	pusha  
  405972:	mov    cl,0x54
  405974:	jno    0xb06c3eab
  40597a:	dec    esi
  40597b:	cld    
  40597c:	pop    ds
  40597d:	adc    edx,esi
  40597f:	mov    ah,BYTE PTR ds:0x684751c8
  405985:	and    dh,BYTE PTR [ebx-0xa7e735c]
  40598b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40598c:	cdq    
  40598d:	add    BYTE PTR [edx],dh
  40598f:	(bad)  
  405990:	(bad)  
  405992:	aam    0x4e
  405994:	push   es
  405995:	retf   0x5019
  405998:	or     ebx,DWORD PTR [edi-0x5ff95d34]
  40599e:	push   cs
  40599f:	loopne 0x4059e9
  4059a1:	pop    esp
  4059a2:	ss push ss
  4059a4:	sub    al,0xac
  4059a6:	les    esi,FWORD PTR [ecx+0x2b]
  4059a9:	dec    ebx
  4059aa:	push   ss
  4059ab:	mov    ecx,0x4b8363af
  4059b1:	xor    eax,0xf8646694
  4059b6:	sbb    edi,esp
  4059b8:	mov    esp,0xb658ba46
  4059bd:	(bad)  
  4059be:	mov    dh,0x58
  4059c0:	sahf   
  4059c1:	mov    dh,0xbc
  4059c3:	cwde   
  4059c4:	push   esi
  4059c5:	xor    eax,0xfffffffa
  4059c8:	fucomi st,st(2)
  4059ca:	xchg   edx,eax
  4059cb:	mov    eax,0x1f3e69a
  4059d0:	inc    esi
  4059d1:	scas   al,BYTE PTR es:[edi]
  4059d2:	and    DWORD PTR [edi-0x28],0xffffff9a
  4059d6:	jnp    0x4059bc
  4059d8:	inc    ebx
  4059d9:	fwait
  4059da:	loope  0x405979
  4059dc:	or     al,0xda
  4059de:	jbe    0x405a21
  4059e0:	push   ds
  4059e1:	jns    0x4059f6
  4059e3:	fild   WORD PTR [eax]
  4059e5:	xchg   ebp,eax
  4059e6:	test   eax,0x4e40705f
  4059eb:	push   0xaee68f82
  4059f0:	ret    
  4059f1:	sbb    eax,0xbad9e5dd
  4059f6:	hlt    
  4059f7:	mov    ebp,0x9c820b33
  4059fc:	std    
  4059fd:	push   eax
  4059fe:	das    
  4059ff:	int    0xcc
  405a01:	push   ss
  405a02:	int    0x8e
  405a04:	push   ebx
  405a05:	jmp    0x75e2:0x36fdb6a4
  405a0c:	dec    esi
  405a0d:	stos   DWORD PTR es:[edi],eax
  405a0e:	mov    eax,ebp
  405a10:	mov    al,0x23
  405a12:	add    bh,0x4
  405a15:	mov    DWORD PTR [ecx+0x438c76c6],edx
  405a1b:	pop    ss
  405a1c:	ror    dh,cl
  405a1e:	stc    
  405a1f:	(bad)  
  405a20:	clc    
  405a21:	mov    esp,0x12648e09
  405a26:	enter  0x4a4f,0x91
  405a2a:	jl     0x405a12
  405a2c:	mov    ebx,0x3e252dba
  405a31:	(bad)  
  405a32:	hlt    
  405a33:	push   esi
  405a34:	jno    0x405ab4
  405a36:	mov    edi,0x4567eb11
  405a3b:	fild   QWORD PTR [edi-0x5]
  405a3e:	pop    ebp
  405a3f:	jnp    0x405a1d
  405a41:	sub    eax,0x99c4464d
  405a46:	dec    edx
  405a47:	sub    eax,0xab32cfff
  405a4c:	add    BYTE PTR [edx-0x58],cl
  405a4f:	les    ebx,FWORD PTR [ebp-0x55]
  405a52:	sahf   
  405a53:	js     0x405a87
  405a55:	imul   ecx,ecx,0x859b093a
  405a5b:	ins    BYTE PTR es:[edi],dx
  405a5c:	mov    ecx,0xcab92fc7
  405a61:	out    0xd0,al
  405a63:	xchg   edx,eax
  405a64:	mov    dl,0xe9
  405a66:	mov    dl,0xa4
  405a68:	push   edx
  405a69:	mov    bh,0x5b
  405a6b:	es in  eax,dx
  405a6d:	push   edx
  405a6e:	int    0x67
  405a70:	adc    al,0x24
  405a72:	cmp    bh,0xdf
  405a75:	(bad)  
  405a76:	lock inc eax
  405a78:	push   ebx
  405a79:	and    eax,0x6b849592
  405a7e:	adc    al,0x2c
  405a80:	inc    edx
  405a81:	pop    esi
  405a82:	popa   
  405a83:	pop    esi
  405a84:	cmp    bl,BYTE PTR [eax]
  405a86:	inc    ebp
  405a87:	scas   eax,DWORD PTR es:[edi]
  405a88:	pop    ebx
  405a89:	sar    ecx,cl
  405a8b:	jo     0x405ae0
  405a8d:	fwait
  405a8e:	inc    eax
  405a8f:	dec    ebp
  405a90:	mov    eax,ds:0x2e0074c7
  405a95:	mov    DWORD PTR [ebp-0x17bcd6f6],esi
  405a9b:	inc    edx
  405a9c:	test   DWORD PTR [edi+edx*4+0x169dbbb9],ebp
  405aa3:	call   0xfd8c7f0d
  405aa8:	xor    DWORD PTR ds:0xf0d582c0,0xffffff97
  405aaf:	fnstenv [ebx-0x34]
  405ab2:	xor    BYTE PTR [edi-0x43],cl
  405ab5:	mov    BYTE PTR [ecx+0x38],bl
  405ab8:	cdq    
  405ab9:	repz (bad) 
  405abb:	cmp    BYTE PTR [esi+0x6162245e],ch
  405ac1:	xor    al,0x80
  405ac3:	fcomip st,st(5)
  405ac5:	mov    ds:0xe41c24cc,al
  405aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405acb:	icebp  
  405acc:	cld    
  405acd:	les    eax,FWORD PTR [edx]
  405acf:	push   es
  405ad0:	mov    ecx,0x3d342b5
  405ad5:	pushf  
  405ad6:	out    dx,al
  405ad7:	into   
  405ad8:	adc    ebx,DWORD PTR [edi]
  405ada:	inc    esi
  405adb:	mov    ah,0x12
  405add:	popf   
  405ade:	je     0x405af5
  405ae0:	jne    0x405b38
  405ae2:	xor    edi,DWORD PTR [edx]
  405ae4:	mov    al,0x63
  405ae6:	pop    ss
  405ae7:	jmp    0xc59d:0x28cb6412
  405aee:	push   ebp
  405aef:	sbb    al,BYTE PTR [eax+0x1fcfc0ce]
  405af5:	push   0xfffffff6
  405af7:	imul   eax,DWORD PTR [edi+0x12],0x14
  405afb:	js     0x405b66
  405afd:	pushf  
  405afe:	mov    ah,0x5d
  405b00:	add    DWORD PTR [ecx+0x2dcdf69b],ebx
  405b06:	and    eax,0x2e859afd
  405b0b:	cmp    BYTE PTR [edx-0x18d73bea],ch
  405b11:	les    ebx,FWORD PTR [eax]
  405b13:	inc    esi
  405b14:	dec    esi
  405b15:	mov    eax,ds:0xe4da5f17
  405b1a:	es out 0xe2,al
  405b1d:	adc    DWORD PTR [eax],0xd840c178
  405b23:	inc    ebp
  405b24:	leave  
  405b25:	push   eax
  405b26:	enter  0x167d,0xa1
  405b2a:	jnp    0x405b0c
  405b2c:	or     al,0xf0
  405b2e:	inc    ebp
  405b2f:	fwait
  405b30:	xor    DWORD PTR [edx+0x4b],0x31d59ef9
  405b37:	sub    eax,0x4c8adde9
  405b3c:	adc    al,0x3c
  405b3e:	ins    BYTE PTR es:[edi],dx
  405b3f:	dec    ebp
  405b40:	push   cs
  405b41:	cmp    DWORD PTR [esi+eax*1-0x7f],ecx
  405b45:	outs   dx,BYTE PTR ds:[esi]
  405b46:	(bad)  
  405b48:	mov    bh,BYTE PTR [edx]
  405b4a:	xchg   ebx,eax
  405b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b4c:	mov    ebp,0x4209a9cd
  405b51:	pushf  
  405b52:	mov    dh,BYTE PTR [esp+edx*8+0x3]
  405b56:	ja     0x405b3d
  405b58:	and    ah,BYTE PTR [edx+0x2bfbd62c]
  405b5e:	popa   
  405b5f:	or     eax,0x11ba11ff
  405b64:	adc    DWORD PTR [ebp-0x70],esi
  405b67:	jecxz  0x405b19
  405b69:	inc    edx
  405b6a:	shl    BYTE PTR [ecx],1
  405b6c:	or     eax,0xe9d9b345
  405b71:	sub    al,0xa9
  405b73:	in     al,dx
  405b74:	adc    dh,BYTE PTR [ecx-0x1729ebad]
  405b7a:	cld    
  405b7b:	xchg   edi,eax
  405b7c:	pop    DWORD PTR [edx]
  405b7e:	jmp    0x405be5
  405b80:	add    bl,BYTE PTR [edx+0x31]
  405b83:	mov    ecx,0x16d92fca
  405b88:	imul   ecx,esi,0xdb831fb
  405b8e:	leave  
  405b8f:	outs   dx,BYTE PTR ds:[esi]
  405b90:	ds (bad) 
  405b92:	fdivr  DWORD PTR [esi]
  405b94:	inc    edx
  405b95:	xchg   esi,eax
  405b96:	xchg   al,dl
  405b98:	jg     0x405b5c
  405b9a:	ror    DWORD PTR [edi+0x18409b56],1
  405ba0:	pop    esi
  405ba1:	xor    DWORD PTR [ecx-0x4f383a5b],ecx
  405ba7:	push   esp
  405ba8:	and    al,0xdc
  405baa:	mov    esi,0xb1305ddc
  405baf:	aam    0x17
  405bb1:	jae    0x405b9c
  405bb3:	into   
  405bb4:	aas    
  405bb5:	add    BYTE PTR [esi-0x31e2b9b8],ah
  405bbb:	jecxz  0x405bab
  405bbd:	loopne 0x405be2
  405bbf:	mov    al,0x59
  405bc1:	in     eax,dx
  405bc2:	rcl    DWORD PTR [ecx+0x13],0x71
  405bc6:	fcmovbe st,st(6)
  405bc8:	std    
  405bc9:	sub    ch,BYTE PTR [ebp+0x29ebba3a]
  405bcf:	aas    
  405bd0:	adc    BYTE PTR [edi+0x7df7482e],al
  405bd6:	icebp  
  405bd7:	(bad)  
  405bd8:	je     0x405b5c
  405bda:	push   edi
  405bdb:	and    eax,0x92de7290
  405be0:	stos   BYTE PTR es:[edi],al
  405be1:	pop    esp
  405be2:	push   esi
  405be3:	add    al,0x67
  405be5:	push   edx
  405be6:	inc    ebx
  405be7:	imul   edx,DWORD PTR [ecx+0x1eb2bb85],0x608a1bf3
  405bf1:	push   edx
  405bf2:	push   ecx
  405bf3:	inc    ebp
  405bf4:	out    0xc3,eax
  405bf6:	mov    BYTE PTR [ebx-0x76750781],cl
  405bfc:	cmp    al,0x7b
  405bfe:	lea    esp,[esi]
  405c00:	stos   DWORD PTR es:[edi],eax
  405c01:	iret   
  405c02:	cmp    esp,DWORD PTR [edi+edi*4-0x7d]
  405c06:	sets   ah
  405c09:	mov    esp,0x1a4aef96
  405c0e:	cmp    BYTE PTR [edx],al
  405c10:	cdq    
  405c11:	arpl   ax,cx
  405c13:	clc    
  405c14:	es aas 
  405c16:	push   ebp
  405c17:	jg     0x405c35
  405c19:	cmp    eax,0xdda333b6
  405c1e:	jl     0x405bc0
  405c20:	xor    al,0x32
  405c22:	dec    esp
  405c23:	push   edx
  405c24:	and    eax,0x6b6593b8
  405c29:	aad    0xf4
  405c2b:	cmc    
  405c2c:	jo     0x405c70
  405c2e:	cld    
  405c2f:	nop
  405c30:	(bad)  
  405c31:	dec    esp
  405c32:	adc    ebp,DWORD PTR [esi+0x65]
  405c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c36:	push   esi
  405c37:	pusha  
  405c38:	es in  al,0xc4
  405c3b:	push   edi
  405c3c:	or     al,0x70
  405c3e:	mov    eax,0x33293b49
  405c43:	xchg   dl,dh
  405c45:	jae    0x405bc9
  405c47:	retf   0x3dd3
  405c4a:	ins    BYTE PTR es:[edi],dx
  405c4b:	lods   eax,DWORD PTR ds:[esi]
  405c4c:	xor    esi,DWORD PTR [edx+ecx*1+0x231da0d9]
  405c53:	out    dx,al
  405c54:	mov    ds:0x994b9b17,al
  405c59:	imul   DWORD PTR [edi-0x11]
  405c5c:	outs   dx,BYTE PTR ds:[esi]
  405c5d:	stos   DWORD PTR es:[edi],eax
  405c5e:	cpuid  
  405c60:	jmp    0x6a280a31
  405c65:	stc    
  405c66:	xchg   esp,eax
  405c67:	in     al,dx
  405c68:	dec    esi
  405c69:	add    DWORD PTR [ecx-0x48],edx
  405c6c:	mov    ch,0xa9
  405c6e:	mov    WORD PTR [esi],cs
  405c70:	loopne 0x405cdc
  405c72:	jecxz  0x405c25
  405c74:	ins    BYTE PTR es:[edi],dx
  405c75:	and    eax,0x42f0a1a4
  405c7a:	inc    esp
  405c7b:	leave  
  405c7c:	shl    ch,0x94
  405c7f:	push   ebp
  405c80:	pop    ecx
  405c81:	xchg   ecx,eax
  405c82:	sub    al,0x1d
  405c84:	jp     0x405cfd
  405c86:	enter  0x6410,0x60
  405c8a:	cdq    
  405c8b:	add    ebp,ebx
  405c8d:	jmp    0x11bee448
  405c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c93:	inc    esi
  405c94:	jle    0x405d15
  405c96:	xchg   ebp,eax
  405c97:	out    0x10,eax
  405c99:	sbb    eax,0xbe6bee1f
  405c9e:	daa    
  405c9f:	add    dl,BYTE PTR [eax-0x3cb308f3]
  405ca5:	pop    edi
  405ca6:	mov    bh,0x71
  405ca8:	imul   eax,DWORD PTR [esp+eax*1],0xffffffa5
  405cac:	sub    ecx,DWORD PTR [edi]
  405cae:	push   ebx
  405caf:	(bad)  
  405cb0:	fimul  DWORD PTR ds:0xcb747d2f
  405cb6:	sub    DWORD PTR [edx-0x5e439f0f],ebp
  405cbc:	lods   al,BYTE PTR ds:[esi]
  405cbd:	sub    al,dl
  405cbf:	hlt    
  405cc0:	(bad)  
  405cc1:	or     bl,BYTE PTR [eax-0x65a6628d]
  405cc7:	mov    ds:0xe5089d82,eax
  405ccc:	imul   esi,DWORD PTR ds:0x6568fb37,0xffffffdb
  405cd3:	stc    
  405cd4:	loopne 0x405cee
  405cd6:	pop    edi
  405cd7:	fcomp  DWORD PTR [ebp-0x64]
  405cda:	test   eax,0xfe7fbdf2
  405cdf:	mov    esp,ebp
  405ce1:	das    
  405ce2:	(bad)  
  405ce4:	ja     0x405c69
  405ce6:	sbb    BYTE PTR [ecx+0x14b31461],0x7c
  405ced:	add    DWORD PTR [eax-0x664c4d1d],0x8e22bfdc
  405cf7:	int3   
  405cf8:	(bad)  
  405cf9:	push   ss
  405cfa:	mov    ecx,DWORD PTR [ecx]
  405cfc:	push   ebx
  405cfd:	fidivr DWORD PTR [edx+0x72]
  405d00:	mov    edx,0xe7036d96
  405d05:	lods   eax,DWORD PTR ds:[esi]
  405d06:	repz mov ah,dh
  405d09:	psubw  mm2,QWORD PTR [esi]
  405d0c:	mov    ebp,0x7d25a2f6
  405d11:	pushf  
  405d12:	ss pop ecx
  405d14:	push   edi
  405d15:	rcr    DWORD PTR [ebp-0x14c69cb7],cl
  405d1b:	retf   0x30d0
  405d1e:	test   ebx,0x1d4e0f09
  405d24:	push   0xfe74690
  405d29:	outs   dx,DWORD PTR ds:[esi]
  405d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d2b:	mov    edi,0x22fa3fe
  405d30:	das    
  405d31:	pusha  
  405d32:	int    0xa6
  405d34:	mov    ebx,0xdb2e79f8
  405d39:	mov    DWORD PTR [edi+0x336040fa],esi
  405d3f:	xchg   ebx,eax
  405d40:	cld    
  405d41:	cmp    BYTE PTR [edi+ebx*1-0x3a],ah
  405d45:	lahf   
  405d46:	sub    DWORD PTR ds:0x2da96128,ecx
  405d4c:	inc    edi
  405d4d:	lds    edi,FWORD PTR [edi+0x60]
  405d50:	pop    ds
  405d51:	sbb    BYTE PTR [ecx-0x893fd73],ch
  405d57:	inc    esp
  405d58:	imul   esi,eax,0x513b4d4c
  405d5e:	and    esi,DWORD PTR [edi]
  405d60:	aas    
  405d61:	sahf   
  405d62:	(bad)  
  405d64:	nop
  405d65:	out    dx,eax
  405d66:	and    eax,0x1fe1c03d
  405d6b:	repz adc eax,0xfdadbe0f
  405d71:	mov    ch,ah
  405d73:	dec    esi
  405d74:	rol    BYTE PTR [eax+edi*4],1
  405d77:	add    eax,0x68f532e8
  405d7c:	imul   ebx,DWORD PTR [ebp-0x25f1476a],0xbb9b4d2e
  405d86:	push   eax
  405d87:	sbb    BYTE PTR [esi-0x67],0x90
  405d8b:	ins    BYTE PTR es:[edi],dx
  405d8c:	imul   esi,DWORD PTR [edi-0xa2f8788],0x48
  405d93:	inc    esp
  405d94:	ins    DWORD PTR es:[edi],dx
  405d95:	jbe    0x405db5
  405d97:	test   BYTE PTR [ecx],al
  405d99:	cli    
  405d9a:	or     bl,BYTE PTR [edi-0x4f165061]
  405da0:	(bad)  
  405da1:	xchg   edi,eax
  405da2:	shl    BYTE PTR [ebx+0x4c],0x3d
  405da6:	div    BYTE PTR [ecx]
  405da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da9:	cmp    BYTE PTR [ebx+0x64ef4e76],bl
  405daf:	push   esi
  405db0:	outs   dx,DWORD PTR ds:[esi]
  405db1:	mov    bl,0xd8
  405db3:	xchg   ebx,eax
  405db4:	les    ecx,FWORD PTR [edx-0x2e]
  405db7:	xchg   ecx,eax
  405db8:	push   0xab12625
  405dbd:	adc    eax,0x5a468bc8
  405dc2:	mov    ds:0x49d70073,al
  405dc7:	jns    0x405ddb
  405dc9:	or     eax,0x9dd097f2
  405dce:	mov    ebp,0x925a2311
  405dd3:	fidivr WORD PTR [eax-0x47]
  405dd6:	pop    ebp
  405dd7:	cld    
  405dd8:	pop    edx
  405dd9:	cwde   
  405dda:	icebp  
  405ddb:	add    al,0xc1
  405ddd:	iret   
  405dde:	cmp    al,BYTE PTR [edi]
  405de0:	mov    edx,0xfe0a48d7
  405de5:	push   edx
  405de6:	mov    edi,0x7a102c01
  405deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dec:	push   ds
  405ded:	mov    ebp,0xeb761beb
  405df2:	ud0    ebx,DWORD PTR [eax]
  405df5:	ja     0x405e6d
  405df7:	in     eax,dx
  405df8:	add    edi,DWORD PTR [ebp-0x2b]
  405dfb:	shl    BYTE PTR [ebx-0x15],0x4b
  405dff:	daa    
  405e00:	push   esi
  405e01:	pusha  
  405e02:	sub    DWORD PTR [esi],edx
  405e04:	or     eax,0xd6251692
  405e09:	mov    ebx,DWORD PTR [ebx]
  405e0b:	xor    al,0x2d
  405e0d:	or     BYTE PTR [ecx+0x5b],cl
  405e10:	xor    ebx,edi
  405e12:	xchg   ebp,eax
  405e13:	lods   al,BYTE PTR ds:[esi]
  405e14:	loopne 0x405e89
  405e16:	aaa    
  405e17:	ja     0x405e25
  405e19:	or     al,0xaf
  405e1b:	out    dx,eax
  405e1c:	scas   eax,DWORD PTR es:[edi]
  405e1d:	xchg   edi,eax
  405e1e:	xchg   edx,eax
  405e1f:	jecxz  0x405e5e
  405e21:	adc    al,0xa9
  405e23:	mov    esp,0x960b623f
  405e28:	xchg   edi,eax
  405e29:	and    ah,BYTE PTR [ebp-0x2b4bd815]
  405e2f:	dec    ecx
  405e30:	pusha  
  405e31:	sub    dh,BYTE PTR [edx]
  405e33:	int    0xfb
  405e35:	scas   al,BYTE PTR es:[edi]
  405e36:	add    BYTE PTR [eax],dh
  405e38:	xchg   ebp,eax
  405e39:	ja     0x405e3f
  405e3b:	cmp    esp,DWORD PTR [ebx+ecx*8+0xb]
  405e3f:	or     esi,DWORD PTR [esi+0x40]
  405e42:	push   ds
  405e43:	mov    eax,0x64d84159
  405e48:	imul   esi,DWORD PTR [ecx-0x74],0x17
  405e4c:	leave  
  405e4d:	sar    esi,cl
  405e4f:	stos   DWORD PTR es:[edi],eax
  405e50:	loope  0x405ec3
  405e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e53:	leave  
  405e54:	push   0x993afba5
  405e59:	add    BYTE PTR [ecx+ebx*1-0x3c077fb],ch
  405e60:	jmp    0x6c38ba9f
  405e65:	sub    esp,DWORD PTR ds:0x1e4fe953
  405e6b:	mov    ecx,0x63c1d797
  405e70:	inc    edx
  405e71:	jge    0x405e54
  405e73:	ins    DWORD PTR es:[edi],dx
  405e74:	sti    
  405e75:	mov    DWORD PTR [eax],edx
  405e77:	scas   al,BYTE PTR es:[edi]
  405e78:	cmp    DWORD PTR [ebp+0x22fb86a6],eax
  405e7e:	and    al,BYTE PTR [ebx+ebx*2-0xed6232d]
  405e85:	sbb    eax,0x67e398b2
  405e8a:	jmp    0x911f:0xe2cd3bd8
  405e91:	ja     0x9293049d
  405e97:	into   
  405e98:	dec    edx
  405e99:	ror    dl,0xe3
  405e9c:	cld    
  405e9d:	add    eax,0x45750464
  405ea2:	jb     0x405ea6
  405ea4:	gs test bh,bh
  405ea7:	aas    
  405ea8:	ins    DWORD PTR es:[edi],dx
  405ea9:	hlt    
  405eaa:	sbb    BYTE PTR [ebp+0x1c37cb31],dh
  405eb0:	call   0xb298:0xe192ab9e
  405eb7:	cmp    eax,0x89d1489
  405ebc:	xchg   ebx,eax
  405ebd:	stos   DWORD PTR es:[edi],eax
  405ebe:	push   0x5f
  405ec0:	fcomp  QWORD PTR [edi+0x30]
  405ec3:	dec    esi
  405ec4:	out    0x67,eax
  405ec6:	loop   0x405eb6
  405ec8:	into   
  405ec9:	and    esp,ecx
  405ecb:	push   ds
  405ecc:	mov    eax,0x1780c2ae
  405ed1:	pop    ss
  405ed2:	(bad)  
  405ed3:	sub    ch,0x57
  405ed6:	push   ebp
  405ed7:	loopne 0x405ece
  405ed9:	scas   eax,DWORD PTR es:[edi]
  405eda:	inc    edx
  405edb:	neg    BYTE PTR [edx-0x72]
  405ede:	aas    
  405edf:	mov    al,ds:0x79eae864
  405ee4:	mov    DWORD PTR [esi-0x3cbb0153],edi
  405eea:	pop    esp
  405eeb:	fs mov dl,0x70
  405eee:	fist   DWORD PTR [ebp+0x7fa5090e]
  405ef4:	or     al,0x61
  405ef6:	shl    BYTE PTR [edx+ecx*8-0x76cb84bf],cl
  405efd:	iret   
  405efe:	adc    ecx,0xfffffff1
  405f01:	inc    edx
  405f02:	xchg   al,bl
  405f04:	and    al,0x1c
  405f06:	rol    DWORD PTR [eax+0x22],0x44
  405f0a:	pushf  
  405f0b:	(bad)  
  405f0d:	or     dl,BYTE PTR [ecx+ebx*2+0x6f]
  405f11:	or     BYTE PTR [edi-0x69],ah
  405f14:	jge    0x405f73
  405f16:	dec    eax
  405f17:	std    
  405f18:	mov    ds:0xeb0c8ee5,eax
  405f1d:	jge    0x405f9d
  405f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f20:	stc    
  405f21:	out    0x77,eax
  405f23:	jmp    0x405ee3
  405f25:	mov    bl,0x8c
  405f27:	shr    DWORD PTR [ebp+0x2791c0fb],cl
  405f2d:	pop    edx
  405f2e:	or     cl,al
  405f30:	adc    al,0xe9
  405f32:	ja     0x405f64
  405f34:	sub    bl,ah
  405f36:	in     eax,0x98
  405f38:	sub    DWORD PTR [eax-0x3a2aa7b2],ebx
  405f3e:	push   ecx
  405f3f:	stos   DWORD PTR es:[edi],eax
  405f40:	pusha  
  405f41:	pop    edx
  405f42:	push   ebp
  405f43:	xor    bl,BYTE PTR [ecx-0x1d2155f9]
  405f49:	out    dx,eax
  405f4a:	cdq    
  405f4b:	ret    0x905b
  405f4e:	cmc    
  405f4f:	lock push 0xc4a2b177
  405f55:	mov    esp,DWORD PTR [edi]
  405f57:	mov    DWORD PTR [eax+0x11],esp
  405f5a:	fstp   TBYTE PTR [eax]
  405f5c:	xor    eax,0x4aab27a5
  405f61:	add    al,0xc6
  405f63:	sbb    eax,0x967631ac
  405f68:	jge    0x405fce
  405f6a:	std    
  405f6b:	gs aas 
  405f6d:	push   es
  405f6e:	imul   edx,ebx,0xba9c8885
  405f74:	ret    
  405f75:	and    eax,0xc5bb77fd
  405f7a:	mov    dh,bh
  405f7c:	out    0x55,eax
  405f7e:	ss sub al,0xb5
  405f81:	pop    ebx
  405f82:	mov    al,0x9e
  405f84:	mov    DWORD PTR [eax+0x347d90cf],eax
  405f8a:	add    BYTE PTR [edx+edi*2+0x1e],bl
  405f8e:	mov    WORD PTR [ebp-0x1],gs
  405f91:	push   esp
  405f92:	iret   
  405f93:	push   0xf69097a7
  405f98:	mov    cl,0xb0
  405f9a:	mov    dl,0xbd
  405f9c:	sar    BYTE PTR [edi],1
  405f9e:	jmp    0x74238c97
  405fa3:	mov    edi,0x79b37612
  405fa8:	inc    edi
  405fa9:	mov    ebx,0x1da3281e
  405fae:	ds inc esp
  405fb0:	jbe    0x405ffe
  405fb2:	and    DWORD PTR [eax+0x1f9fdeab],esi
  405fb8:	leave  
  405fb9:	std    
  405fba:	call   0x848aebf8
  405fbf:	cmc    
  405fc0:	xchg   ebp,eax
  405fc2:	mov    ah,0x3e
  405fc4:	mov    ch,0xe3
  405fc6:	add    esp,ebx
  405fc8:	loop   0x405f5c
  405fca:	lds    esp,FWORD PTR [ebx-0x7fd4d68f]
  405fd0:	retf   0x8e66
  405fd3:	(bad)  [ecx+0x11]
  405fd6:	cmp    al,0xfb
  405fd8:	das    
  405fd9:	mov    esi,0xe594beb0
  405fde:	dec    edi
  405fdf:	out    dx,eax
  405fe0:	mov    DWORD PTR ds:0xe5f3f2dc,esp
  405fe6:	test   eax,0x10646abf
  405feb:	test   BYTE PTR [edx+eiz*8+0x5612a14d],bl
  405ff2:	pop    esp
  405ff3:	pop    ebx
  405ff4:	sbb    al,0x50
  405ff6:	inc    edx
  405ff7:	inc    ecx
  405ff8:	int3   
  405ff9:	in     al,0xf1
  405ffb:	and    ecx,edx
  405ffd:	push   ds
  405ffe:	dec    eax
  406000:	stos   DWORD PTR es:[edi],eax
  406001:	sub    BYTE PTR [ebp+eax*1-0x5e],ah
  406005:	or     DWORD PTR [esi-0x68],0xfffffff6
  406009:	push   es
  40600a:	pop    esi
  40600b:	or     ebx,DWORD PTR [ecx-0x61a3c7ac]
  406011:	xchg   edi,ecx
  406013:	jae    0x40606c
  406015:	or     DWORD PTR [eax],ebp
  406017:	out    dx,al
  406018:	lock into 
  40601a:	push   eax
  40601b:	ins    BYTE PTR es:[edi],dx
  40601c:	sub    al,0x4c
  40601e:	push   edi
  40601f:	aam    0x30
  406021:	and    ebx,edi
  406023:	sbb    al,0xea
  406025:	push   esp
  406026:	sub    esi,DWORD PTR [ebp-0x404305db]
  40602c:	and    al,0xd6
  40602e:	stc    
  40602f:	add    ah,dh
  406031:	iret   
  406032:	xor    BYTE PTR [edi+eiz*4-0x24],bh
  406036:	xchg   ebx,eax
  406037:	loopne 0x4060b4
  406039:	mov    ecx,0x7313ee2b
  40603e:	sub    eax,0xb69896d1
  406043:	in     al,dx
  406044:	mov    bh,0x73
  406046:	mov    eax,0x93f6a2f3
  40604b:	pop    ebp
  40604c:	enter  0x6046,0xfd
  406050:	dec    esi
  406051:	inc    eax
  406052:	rep stos BYTE PTR es:[edi],al
  406054:	jno    0x40601d
  406056:	stos   BYTE PTR es:[edi],al
  406057:	pop    esi
  406058:	repnz fwait
  40605a:	pop    ecx
  40605b:	dec    edi
  40605c:	jns    0x405fdf
  40605e:	icebp  
  40605f:	rcr    BYTE PTR [ebx+0x20],0x7e
  406063:	fs mov al,0x1c
  406066:	(bad)  
  406067:	xchg   esp,eax
  406068:	xor    esp,DWORD PTR [eax-0x2b]
  40606b:	shl    eax,cl
  40606d:	push   edx
  40606e:	push   ds
  40606f:	repnz mov esp,0x171ccdb
  406075:	fld    DWORD PTR [ebx-0x16203e8b]
  40607b:	call   0xa2a72f1c
  406080:	pusha  
  406081:	sub    edx,ebx
  406083:	xor    BYTE PTR [edi+0x3a],ah
  406086:	int    0x92
  406088:	dec    ebp
  406089:	add    eax,0x5421a368
  40608e:	push   0xffffff86
  406090:	cmp    ebp,DWORD PTR [ebp+0x40]
  406093:	sbb    eax,0x4d4957d3
  406098:	sbb    BYTE PTR [esi],dh
  40609a:	cmp    BYTE PTR [eax-0x246b552a],bl
  4060a0:	xchg   ebx,eax
  4060a1:	xchg   BYTE PTR [ebx+0x5fcb7a9],dl
  4060a7:	xor    ah,ch
  4060a9:	xchg   edx,eax
  4060aa:	adc    bh,ah
  4060ac:	ja     0x40605c
  4060ae:	gs nop
  4060b0:	pop    eax
  4060b1:	adc    BYTE PTR [ecx+edx*8+0x33],bl
  4060b5:	cmp    al,0x5b
  4060b7:	mov    ebp,0xa84ed0e1
  4060bc:	pop    esp
  4060bd:	adc    DWORD PTR [esi+0x41641677],ebp
  4060c3:	jae    0x4060f3
  4060c5:	or     BYTE PTR [edx+0x33],cl
  4060c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060c9:	push   ecx
  4060ca:	sbb    BYTE PTR [edx],bh
  4060cc:	das    
  4060cd:	js     0x4060d6
  4060cf:	mov    edx,0x37d70cde
  4060d4:	stc    
  4060d5:	push   edi
  4060d6:	xor    dl,BYTE PTR [eax]
  4060d8:	cmp    ecx,esi
  4060da:	push   ebx
  4060db:	(bad)  
  4060dc:	ins    BYTE PTR es:[edi],dx
  4060dd:	std    
  4060de:	sub    BYTE PTR [ebx],ah
  4060e0:	xchg   edi,eax
  4060e1:	push   cs
  4060e2:	mov    al,ds:0xeacf6f47
  4060e7:	out    dx,eax
  4060e8:	or     al,0x2d
  4060ea:	in     eax,0x64
  4060ec:	adc    esi,DWORD PTR [esi-0x5a]
  4060ef:	sub    BYTE PTR [edi+0xb],al
  4060f2:	inc    esp
  4060f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f4:	inc    ebp
  4060f5:	jle    0x406102
  4060f7:	sub    BYTE PTR [ebx-0x43a545b8],0xe
  4060fe:	jnp    0x4060f0
  406100:	cli    
  406101:	(bad)  
  406102:	mov    esp,DWORD PTR [esi-0x77bafa34]
  406108:	add    al,0x1a
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	(bad)  
  40688e:	mov    al,ds:0x833d1356
  406893:	or     DWORD PTR [esi+ebx*2],0xffffff83
  406897:	xor    DWORD PTR [edi],0x40
  40689a:	add    esi,eax
  40689c:	inc    esi
  40689d:	dec    ebp
  40689e:	les    esi,FWORD PTR [edx+0x5f]
  4068a1:	mov    edi,0x94ceac85
  4068a6:	popf   
  4068a7:	cli    
  4068a8:	stc    
  4068a9:	(bad)  
  4068aa:	jp     0x40691d
  4068ac:	gs (bad) 
  4068ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068af:	sub    al,BYTE PTR [edx]
  4068b1:	mov    al,fs:0xe79645dc
  4068b7:	outs   dx,DWORD PTR ds:[esi]
  4068b8:	add    edx,DWORD PTR [ebx]
  4068ba:	in     al,dx
  4068bb:	sbb    cl,dh
  4068bd:	sbb    eax,0xcfdbb005
  4068c2:	adc    eax,0xcaa2c722
  4068c7:	jbe    0x4068d2
  4068c9:	inc    edi
  4068ca:	xchg   esi,eax
  4068cb:	lahf   
  4068cc:	icebp  
  4068cd:	or     ecx,edi
  4068cf:	xor    ecx,DWORD PTR [edi-0x516df603]
  4068d5:	data16 sti 
  4068d7:	rcl    DWORD PTR [ebp-0x68baf239],cl
  4068dd:	fisubr DWORD PTR [edx+edi*1+0x41]
  4068e1:	addr16 mov al,0x34
  4068e4:	lea    esi,[esi+0x56a27a25]
  4068ea:	sahf   
  4068eb:	add    eax,ebp
  4068ed:	bound  ebx,QWORD PTR [ecx-0x19]
  4068f0:	mov    dh,0x8a
  4068f2:	fidivr DWORD PTR [ebx+0x77]
  4068f5:	adc    eax,0x9cbe6c32
  4068fa:	sbb    dl,BYTE PTR [esi]
  4068fc:	pop    eax
  4068fd:	jnp    0x4068a9
  4068ff:	test   al,0xb7
  406901:	push   eax
  406902:	fwait
  406903:	stos   BYTE PTR es:[edi],al
  406904:	ficomp WORD PTR [ecx+ecx*1+0x7a]
  406908:	test   DWORD PTR [esi-0x43],0x89b78ac2
  40690f:	nop
  406910:	push   ds
  406911:	dec    ebp
  406912:	or     al,0x2e
  406914:	in     eax,0x9a
  406916:	xchg   esi,eax
  406917:	pop    ds
  406918:	(bad)  
  406919:	jae    0x4068a9
  40691b:	ret    0xf7b9
  40691e:	sbb    eax,0x82b211d
  406923:	lods   al,BYTE PTR ds:[esi]
  406924:	outs   dx,DWORD PTR ds:[esi]
  406925:	xchg   esi,eax
  406926:	mov    ch,0x51
  406928:	mov    al,0xee
  40692a:	sub    dh,bl
  40692c:	and    DWORD PTR [ebp+0x1ffec4a],ebp
  406932:	call   0xf8c4:0xca6a3ebd
  406939:	dec    edx
  40693a:	xor    ebp,ebx
  40693c:	pop    ebx
  40693d:	inc    edi
  40693e:	je     0x406933
  406940:	adc    al,BYTE PTR [ecx]
  406942:	outs   dx,DWORD PTR ds:[esi]
  406943:	jecxz  0x4069ba
  406945:	pop    ecx
  406946:	push   edi
  406947:	push   ebp
  406948:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40694a:	inc    esi
  40694b:	scas   eax,DWORD PTR es:[edi]
  40694c:	mov    BYTE PTR [edi+esi*8+0x2dd86599],dh
  406953:	lahf   
  406954:	mov    ch,0x7f
  406956:	mov    bl,0x98
  406958:	or     DWORD PTR [ecx-0x5fe8fa89],edx
  40695e:	ss outs dx,BYTE PTR ds:[esi]
  406961:	pop    ebx
  406962:	adc    eax,0x4205d0e6
  406967:	fabs   
  406969:	push   0x17da8083
  40696e:	dec    edi
  40696f:	in     al,0x10
  406971:	fisttp QWORD PTR [eax+0x59]
  406974:	lods   eax,DWORD PTR ds:[esi]
  406975:	mov    edi,0xa358dc0e
  40697a:	mov    al,0x55
  40697c:	push   ebx
  40697d:	push   0xa
  40697f:	mov    cl,0xf4
  406981:	pop    eax
  406982:	std    
  406983:	adc    al,0xba
  406985:	sub    al,BYTE PTR [edi-0x72f6474e]
  40698b:	push   ds
  40698c:	or     al,cl
  40698e:	or     eax,0x572dc238
  406993:	je     0x40695a
  406995:	lods   eax,DWORD PTR ds:[esi]
  406996:	add    al,0xe1
  406998:	dec    ebx
  406999:	sbb    DWORD PTR [ecx+ebp*2],ebp
  40699c:	out    dx,eax
  40699d:	into   
  40699e:	xor    al,0xce
  4069a0:	pop    ecx
  4069a1:	lahf   
  4069a2:	nop
  4069a3:	dec    eax
  4069a4:	xor    BYTE PTR [esi],dh
  4069a6:	jl     0x406a0d
  4069a8:	adc    BYTE PTR [bp+di-0x3b],al
  4069ac:	inc    esi
  4069ad:	cld    
  4069ae:	cwde   
  4069af:	mov    dh,0x38
  4069b1:	push   edi
  4069b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b3:	and    al,0x8
  4069b5:	or     DWORD PTR [edx-0x22a1f809],0x1a5722d3
  4069bf:	loopne 0x4069ae
  4069c1:	xchg   esi,eax
  4069c2:	xor    BYTE PTR [esi+0x7e],0x2
  4069c6:	mov    cl,0xea
  4069c8:	mov    ds:0xab72c745,al
  4069cd:	push   DWORD PTR [esi+0x15]
  4069d0:	add    DWORD PTR ds:0x37a8b520,ecx
  4069d6:	push   ds
  4069d7:	repnz push ebp
  4069d9:	mov    esp,0x94744569
  4069de:	ss cmp eax,0xa817e62c
  4069e4:	jno    0x406a5f
  4069e6:	gs aas 
  4069e8:	nop
  4069e9:	or     BYTE PTR [edx],dl
  4069eb:	fstp   DWORD PTR [ecx]
  4069ed:	mov    eax,0xc070ea04
  4069f2:	push   edx
  4069f3:	jmp    0x5b5c898d
  4069f8:	xor    ch,BYTE PTR [esp+edi*2+0x285e12f4]
  4069ff:	in     al,0x70
  406a01:	fst    st(6)
  406a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a04:	(bad)  
  406a05:	jb     0x406994
  406a07:	loope  0x4069c4
  406a09:	sbb    bl,BYTE PTR [ecx]
  406a0b:	pop    ecx
  406a0c:	or     BYTE PTR [esi+edx*1+0x2206c20f],al
  406a13:	sahf   
  406a14:	push   es
  406a15:	xchg   BYTE PTR [eax-0xe5e4784],bl
  406a1b:	xor    esp,DWORD PTR [esi]
  406a1d:	int3   
  406a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1f:	shr    BYTE PTR [ebx],cl
  406a21:	les    edx,FWORD PTR [ecx+eiz*1]
  406a24:	xor    al,al
  406a26:	aas    
  406a27:	mov    BYTE PTR [ebp+edx*1+0x12],ah
  406a2b:	pop    esp
  406a2c:	adc    esi,0xffffffa1
  406a2f:	and    esi,DWORD PTR [eax+esi*8-0x25]
  406a33:	fdiv   QWORD PTR [esi]
  406a35:	jae    0x406a38
  406a37:	adc    DWORD PTR [eax],edi
  406a39:	push   ecx
  406a3a:	jp     0x406a03
  406a3c:	dec    ebx
  406a3d:	ror    DWORD PTR [ebx+edi*1+0x66f4911b],cl
  406a44:	pop    ebp
  406a45:	push   0x3b
  406a47:	and    esp,esi
  406a49:	arpl   WORD PTR [ebx-0x36],si
  406a4c:	icebp  
  406a4d:	cwde   
  406a4e:	out    0xca,al
  406a50:	retf   
  406a51:	lea    esp,[ecx-0x2710db67]
  406a57:	cld    
  406a58:	jnp    0x406a7f
  406a5a:	jmp    0x406a12
  406a5c:	adc    eax,0x24166eb9
  406a61:	div    BYTE PTR [ecx-0x36]
  406a64:	scas   eax,DWORD PTR es:[edi]
  406a65:	loop   0x4069ea
  406a67:	push   edx
  406a68:	mov    dl,0x15
  406a6a:	or     BYTE PTR [edi-0x3f],dh
  406a6d:	mov    cl,0x9b
  406a6f:	fwait
  406a70:	(bad)  
  406a71:	sub    ah,BYTE PTR [ebx]
  406a73:	cmp    eax,0x85aca724
  406a78:	cwde   
  406a79:	sbb    esi,DWORD PTR [ecx-0x3ce38727]
  406a7f:	cmc    
  406a80:	cmp    al,0x85
  406a82:	das    
  406a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a84:	stos   DWORD PTR es:[edi],eax
  406a85:	retf   
  406a86:	push   ecx
  406a87:	mov    dl,0xed
  406a89:	dec    ebp
  406a8a:	mov    bh,0x53
  406a8c:	xlat   BYTE PTR ds:[ebx]
  406a8d:	nop
  406a8e:	or     cl,ah
  406a90:	push   cs
  406a91:	lahf   
  406a92:	pop    eax
  406a93:	popf   
  406a94:	adc    BYTE PTR [esp+ecx*4],dh
  406a97:	lods   eax,DWORD PTR ds:[esi]
  406a98:	xor    al,0x25
  406a9a:	dec    edx
  406a9b:	mov    edx,eax
  406a9d:	mov    ecx,gs
  406a9f:	outs   dx,DWORD PTR ds:[esi]
  406aa0:	cli    
  406aa1:	inc    esp
  406aa2:	pop    eax
  406aa3:	popf   
  406aa4:	rcl    BYTE PTR [edi-0x4c05d93],0xd9
  406aab:	cmpxchg ecx,ebp
  406aae:	or     DWORD PTR [esi+eiz*8-0x61],esp
  406ab2:	pop    ss
  406ab3:	fsubr  QWORD PTR [eax]
  406ab5:	mov    cl,0x54
  406ab7:	es repz in eax,0x1
  406abb:	das    
  406abc:	xor    al,0x20
  406abe:	jno    0x406a80
  406ac0:	es mov esp,0xde57df3b
  406ac6:	xor    bl,BYTE PTR [edi]
  406ac8:	inc    esp
  406ac9:	fstp   DWORD PTR ds:0xcdaba235
  406acf:	aad    0x4e
  406ad1:	and    al,0x26
  406ad3:	clc    
  406ad4:	dec    eax
  406ad5:	loop   0x406ade
  406ad7:	sbb    bh,al
  406ad9:	loope  0x406ad0
  406adb:	les    ebx,FWORD PTR [edx+0x6]
  406ade:	xchg   ecx,eax
  406adf:	mul    BYTE PTR [ebp+0x17d697f5]
  406ae5:	sub    al,0xda
  406ae7:	div    DWORD PTR [eax+0x57579935]
  406aed:	std    
  406aee:	jl     0x406b45
  406af0:	jns    0x406b57
  406af2:	adc    ebp,DWORD PTR [ecx-0x3bc70b88]
  406af8:	or     ebp,ecx
  406afa:	sbb    DWORD PTR [ebx],ebp
  406afc:	inc    edx
  406afd:	ret    0x52ab
  406b00:	js     0x406b33
  406b02:	mov    ebp,DWORD PTR [ebp+0x29b031e5]
  406b08:	jno    0x406abc
  406b0a:	dec    ebp
  406b0b:	inc    eax
  406b0c:	ficom  WORD PTR [ebx+0x28b5743c]
  406b12:	loope  0x406b29
  406b14:	test   ecx,eax
  406b16:	lods   eax,DWORD PTR ds:[esi]
  406b17:	dec    eax
  406b18:	clc    
  406b19:	ds mov cl,0x45
  406b1c:	jns    0x406b32
  406b1e:	iret   
  406b1f:	pushf  
  406b20:	mov    es,WORD PTR ds:0x655283ef
  406b26:	or     eax,0x8a4826f
  406b2b:	jge    0x406b84
  406b2d:	adc    eax,0x605bb5b1
  406b32:	adc    al,0xa
  406b34:	dec    edi
  406b35:	loop   0x406b13
  406b37:	(bad)  
  406b39:	jns    0x406adb
  406b3b:	inc    ebp
  406b3c:	out    dx,eax
  406b3d:	out    dx,eax
  406b3e:	or     al,0x90
  406b40:	cmp    eax,0x81df2b44
  406b45:	(bad)  
  406b46:	inc    dx
  406b48:	sub    al,0xfd
  406b4a:	add    al,0xd2
  406b4c:	pushf  
  406b4d:	pop    esp
  406b4e:	mov    cl,0x1d
  406b50:	pop    esi
  406b51:	popa   
  406b52:	jb     0x406b47
  406b54:	out    dx,al
  406b55:	int3   
  406b56:	add    ch,BYTE PTR [ebx-0x790b751d]
  406b5c:	add    bh,bh
  406b5e:	sti    
  406b5f:	pop    esi
  406b60:	add    eax,0xcef88390
  406b65:	push   DWORD PTR [eax]
  406b67:	cmp    DWORD PTR [ecx+0x4d],edx
  406b6a:	pop    ebp
  406b6b:	sub    dh,bh
  406b6d:	push   ecx
  406b6e:	cdq    
  406b6f:	xlat   BYTE PTR ds:[ebx]
  406b70:	jbe    0x406afc
  406b72:	and    al,0x6a
  406b74:	and    al,0x9c
  406b76:	inc    edx
  406b77:	mov    ch,BYTE PTR [ecx-0x4c7ebf5c]
  406b7d:	sub    BYTE PTR [ecx],0xb3
  406b80:	sbb    eax,0xc015f462
  406b85:	test   BYTE PTR [edi-0x4ad0eb1f],ah
  406b8b:	das    
  406b8c:	jo     0x406bc8
  406b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8f:	add    BYTE PTR [ebp+0x2d],dh
  406b92:	jmp    0x406b29
  406b94:	jle    0x406b5d
  406b96:	sbb    BYTE PTR [ebp+eax*2-0x1167c8c3],bh
  406b9d:	mov    eax,0x90321c4a
  406ba2:	pop    ebx
  406ba3:	in     al,0x1b
  406ba5:	jo     0x406bef
  406ba7:	adc    DWORD PTR [esi],ebp
  406ba9:	and    DWORD PTR [ebp-0x30],ecx
  406bac:	loop   0x406bdc
  406bae:	jg     0x406bef
  406bb0:	cmp    ch,dh
  406bb2:	in     al,dx
  406bb3:	pusha  
  406bb4:	xchg   ebp,eax
  406bb5:	outs   dx,DWORD PTR ds:[esi]
  406bb6:	adc    bh,ah
  406bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb9:	arpl   ax,cx
  406bbb:	outs   dx,DWORD PTR ds:[esi]
  406bbc:	mov    esi,0xe025f43d
  406bc1:	push   ss
  406bc2:	inc    esp
  406bc3:	mov    cs,WORD PTR [ebx+esi*8+0x72]
  406bc7:	jne    0x406bbe
  406bc9:	push   es
  406bca:	jae    0x406bc9
  406bcc:	xchg   edx,eax
  406bcd:	inc    esp
  406bce:	ret    
  406bcf:	cmc    
  406bd0:	fimul  WORD PTR ds:0xe535cc7f
  406bd6:	sub    ah,BYTE PTR [edx+0x750c1414]
  406bdc:	cmp    al,0x45
  406bde:	mov    ah,0xc6
  406be0:	mov    ds:0x901d8f3b,eax
  406be5:	fs iret 
  406be7:	mov    ds:0x37478bdd,eax
  406bec:	cmp    DWORD PTR [esi-0xf],eax
  406bef:	inc    esp
  406bf0:	cli    
  406bf1:	push   ebp
  406bf2:	out    0x9c,al
  406bf4:	loopne 0x406bb9
  406bf6:	push   edx
  406bf7:	inc    edi
  406bf8:	xor    eax,0x922164f9
  406bfd:	xor    BYTE PTR [esi-0x5694ddbe],cl
  406c03:	push   0x70
  406c05:	add    bh,al
  406c07:	xchg   ebp,eax
  406c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c09:	fdiv   QWORD PTR [esi+ecx*4]
  406c0c:	vpsraw ymm7,ymm3,0x1f
  406c11:	or     esp,DWORD PTR [ebx]
  406c13:	retf   
  406c14:	push   ss
  406c15:	icebp  
  406c16:	push   ds
  406c17:	cmp    BYTE PTR [ebp+0x79],0x85
  406c1b:	mov    dh,0xc5
  406c1d:	push   es
  406c1e:	fisubr WORD PTR cs:[ebx]
  406c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c22:	(bad)  
  406c23:	sub    al,0x4d
  406c25:	push   esp
  406c26:	push   ebx
  406c27:	loope  0x406c46
  406c29:	fadd   DWORD PTR [edi+0x6d]
  406c2c:	or     dl,BYTE PTR [ecx+0x56]
  406c2f:	cmc    
  406c30:	jg     0x406bcc
  406c32:	lods   eax,DWORD PTR ds:[esi]
  406c33:	push   0x4e
  406c35:	test   BYTE PTR ds:0x90d6e75a,cl
  406c3b:	mov    al,0x6a
  406c3d:	pop    edx
  406c3e:	ja     0x406c0c
  406c40:	pop    ds
  406c41:	inc    edi
  406c42:	xchg   BYTE PTR [eax],bl
  406c44:	sbb    edx,0xffffffaf
  406c47:	jno    0x406bd7
  406c49:	add    ebx,DWORD PTR [esi-0x331665b0]
  406c4f:	call   0x2ec6:0xee8c1f79
  406c56:	scas   al,BYTE PTR es:[edi]
  406c57:	sbb    ecx,DWORD PTR [edx+0x69f67df9]
  406c5d:	dec    ebx
  406c5e:	or     DWORD PTR [esi],ecx
  406c60:	fwait
  406c61:	stc    
  406c62:	inc    esp
  406c63:	ins    BYTE PTR es:[edi],dx
  406c64:	addr16 mov eax,ds:0xc10
  406c68:	xchg   esp,eax
  406c69:	ficom  DWORD PTR [eax]
  406c6b:	out    0x14,eax
  406c6d:	mov    WORD PTR [esi-0x70e8f5a0],ds
  406c73:	(bad)  
  406c74:	shl    bh,0xa0
  406c77:	or     ch,BYTE PTR [ebp+edx*8+0x69]
  406c7b:	or     esi,DWORD PTR [ecx-0x7e77a76d]
  406c81:	aas    
  406c82:	pop    edx
  406c83:	mov    ebx,0x53fbfdcd
  406c88:	add    eax,0x39b1c8fe
  406c8d:	cwde   
  406c8e:	scas   eax,DWORD PTR es:[edi]
  406c8f:	pop    esp
  406c90:	xchg   ecx,eax
  406c91:	aaa    
  406c92:	loopne 0x406c48
  406c94:	add    BYTE PTR [edi+0x6d],ah
  406c97:	cdq    
  406c98:	xor    ebx,DWORD PTR [ecx]
  406c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c9b:	jae    0x406cf3
  406c9d:	scas   al,BYTE PTR es:[edi]
  406c9e:	xchg   edi,eax
  406c9f:	xlat   BYTE PTR ds:[ebx]
  406ca0:	loope  0x406c55
  406ca2:	cmp    esi,edx
  406ca4:	test   BYTE PTR [edx+0x3f8a12b3],bh
  406caa:	mov    eax,0x30d8a7d4
  406caf:	(bad)  
  406cb0:	push   esp
  406cb1:	add    eax,esp
  406cb3:	dec    esi
  406cb4:	mov    edi,0x11a0a230
  406cb9:	lods   eax,DWORD PTR ds:[esi]
  406cba:	jmp    0x5255:0x11db9aa5
  406cc1:	add    esp,esi
  406cc3:	addr16 jb 0x406d1e
  406cc6:	iret   
  406cc7:	rol    DWORD PTR [esi-0x33c7745d],1
  406ccd:	int3   
  406cce:	ret    0x2444
  406cd1:	push   0xd
  406cd3:	add    DWORD PTR [edx-0x63],esi
  406cd6:	daa    
  406cd7:	xchg   ebx,eax
  406cd8:	jl     0x406c95
  406cda:	aam    0x58
  406cdc:	jp     0x406cff
  406cde:	sub    DWORD PTR [ebx-0xa9367f6],esi
  406ce4:	add    ebx,DWORD PTR [ecx]
  406ce6:	aad    0xcb
  406ce8:	fs dec ebx
  406cea:	inc    eax
  406ceb:	test   al,0x2
  406ced:	call   DWORD PTR [edx+ebp*4]
  406cf0:	sbb    BYTE PTR [ecx-0x7ddffd37],al
  406cf6:	xchg   edi,eax
  406cf7:	and    BYTE PTR [edx+esi*2],dl
  406cfa:	out    dx,al
  406cfb:	arpl   WORD PTR [edx+0x3aa519be],bx
  406d01:	cmp    BYTE PTR [ecx-0x5e],ah
  406d04:	jno    0x406d02
  406d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d07:	and    al,0x4f
  406d09:	adc    edi,DWORD PTR [edx-0x31]
  406d0c:	retf   0xa54c
  406d0f:	inc    edi
  406d10:	xlat   BYTE PTR ds:[ebx]
  406d11:	lods   al,BYTE PTR ds:[esi]
  406d12:	jae    0x406d40
  406d14:	(bad)
  406d19:	cld    
  406d1a:	sub    ch,BYTE PTR [edi-0x3f]
  406d1d:	push   esi
  406d1e:	add    DWORD PTR [esi-0x622f6331],edi
  406d24:	fisttp WORD PTR [esi+0x73]
  406d27:	push   ss
  406d28:	jb     0x406d68
  406d2a:	xchg   ecx,eax
  406d2b:	cmp    BYTE PTR [esi-0x63],0xfd
  406d2f:	test   eax,0x4c36e7dc
  406d34:	hlt    
  406d35:	or     BYTE PTR [ebp-0x40],ch
  406d38:	jmp    0x406d99
  406d3a:	mov    eax,ds:0x3135efad
  406d3f:	push   es
  406d40:	mov    ch,0x37
  406d42:	xor    al,0x91
  406d44:	test   al,0x8
  406d46:	and    eax,0x97f72ec5
  406d4b:	mov    al,bl
  406d4d:	cmp    al,ch
  406d4f:	fsubr  QWORD PTR [ecx]
  406d51:	test   DWORD PTR [ebp+edx*1+0x5d],esi
  406d55:	inc    eax
  406d56:	and    al,0xcd
  406d58:	jle    0x406d00
  406d5a:	repnz mov ebx,DWORD PTR [edi+esi*2-0x70]
  406d5f:	adc    esp,ecx
  406d61:	enter  0x1b1c,0x6c
  406d65:	mov    ah,0xce
  406d67:	pusha  
  406d68:	(bad)  
  406d69:	mov    ebp,0x665a64df
  406d6e:	shl    ah,cl
  406d70:	push   es
  406d71:	add    DWORD PTR [ecx+edx*1-0x7bec3de1],edi
  406d78:	nop
  406d79:	xor    bh,BYTE PTR [ebx]
  406d7b:	dec    ebx
  406d7c:	mov    ch,0x1d
  406d7e:	mov    edx,0xe3683f92
  406d83:	mov    eax,ds:0xadef6a62
  406d88:	jae    0x406da2
  406d8a:	add    ebx,DWORD PTR [edi]
  406d8c:	adc    eax,0xb126eb73
  406d91:	popf   
  406d92:	dec    ebp
  406d93:	inc    ebp
  406d94:	loop   0x406da5
  406d96:	mov    bl,ch
  406d98:	push   es
  406d99:	add    BYTE PTR [ecx-0x5],bh
  406d9c:	test   BYTE PTR [eax-0x7232cf84],0x87
  406da3:	pushw  cs
  406da5:	daa    
  406da6:	cli    
  406da7:	sub    al,0xe4
  406da9:	add    ecx,esp
  406dab:	imul   edx,DWORD PTR [ecx+ebp*8-0x6e],0xffffffb3
  406db0:	push   ebx
  406db1:	test   al,0x94
  406db3:	ja     0x406daf
  406db5:	cmc    
  406db6:	mov    ds:0x1ec9c6d5,eax
  406dbb:	dec    ebx
  406dbc:	fdivr  QWORD PTR [edi-0x27]
  406dbf:	xor    edi,DWORD PTR [ecx-0x28]
  406dc2:	or     DWORD PTR es:[ecx+0x2],edx
  406dc6:	fnstsw WORD PTR [eax-0x4627ca4d]
  406dcc:	pop    ebx
  406dcd:	fadd   QWORD PTR [ebx+esi*2-0x2e]
  406dd1:	out    0xf6,eax
  406dd3:	jge    0x406e41
  406dd5:	add    ebx,esp
  406dd7:	test   eax,0x41fac67a
  406ddc:	pop    edi
  406ddd:	aam    0xc3
  406ddf:	cmp    ah,BYTE PTR [ebx+edx*2]
  406de2:	jl     0x406d9b
  406de4:	jmp    0x1c53:0x56541f9
  406deb:	mov    dl,0x63
  406ded:	call   0x62bc:0xca90c932
  406df4:	ins    BYTE PTR es:[edi],dx
  406df5:	add    DWORD PTR [edx],ebx
  406df7:	adc    esi,DWORD PTR [ebp+0x59]
  406dfa:	lods   eax,DWORD PTR ds:[esi]
  406dfb:	mov    edi,DWORD PTR [esi-0x56005773]
  406e01:	jl     0x406e19
  406e03:	addr16 call 0xfce64f5e
  406e09:	push   ebx
  406e0a:	ja     0x406e88
  406e0c:	inc    eax
  406e0d:	ficomp DWORD PTR [ebx-0x3a1a0890]
  406e13:	cmp    eax,0xa1a8418b
  406e18:	jb     0x406dec
  406e1a:	or     eax,0x553ccc12
  406e1f:	fdivp  st(0),st
  406e21:	shl    DWORD PTR [ebx-0x483f58cf],cl
  406e27:	fimul  DWORD PTR [ebp+0x5f038193]
  406e2d:	arpl   WORD PTR [edx],ax
  406e2f:	ret    
  406e30:	mov    dl,0xe4
  406e32:	cdq    
  406e33:	sub    bh,BYTE PTR [edx]
  406e35:	cmp    DWORD PTR [eax+esi*4],eax
  406e38:	cmp    al,0xfb
  406e3a:	shl    DWORD PTR [edx+0x3246a9ab],1
  406e40:	scas   al,BYTE PTR es:[edi]
  406e41:	in     eax,0x40
  406e43:	push   ebx
  406e44:	inc    esp
  406e45:	fidivr DWORD PTR [ebx-0x13]
  406e48:	repz cli 
  406e4a:	mov    bh,BYTE PTR [edi-0x37db5f7d]
  406e50:	mov    eax,ds:0x8a8ec6f2
  406e55:	pop    edi
  406e56:	mov    ecx,0x98ec3e37
  406e5b:	bnd jo 0x406df7
  406e5e:	retf   
  406e5f:	popa   
  406e60:	jmp    0x406e6d
  406e62:	daa    
  406e63:	cli    
  406e64:	retf   
  406e65:	dec    esp
  406e66:	retf   
  406e67:	(bad)  
  406e69:	rdpmc  
  406e6b:	add    al,0xbe
  406e6d:	gs int 0xce
  406e70:	stc    
  406e71:	sti    
  406e72:	jmp    0x406e79
  406e74:	(bad)  
  406e75:	adc    BYTE PTR cs:[edi+0x74697ac2],dh
  406e7c:	jmp    0xca03ea28
  406e81:	and    bh,BYTE PTR [edx]
  406e83:	imul   esp,DWORD PTR [esi+0xae38526],0xffffff99
  406e8a:	sbb    DWORD PTR [edi-0x7cce73d7],esi
  406e90:	add    dh,BYTE PTR [edi+0xe]
  406e93:	xlat   BYTE PTR ds:[ebx]
  406e94:	in     al,0xcb
  406e96:	xchg   ecx,eax
  406e97:	xchg   esp,eax
  406e98:	pop    edx
  406e99:	mov    al,0x65
  406e9b:	xchg   ebx,ebx
  406e9d:	out    dx,al
  406e9e:	pop    eax
  406e9f:	fist   WORD PTR ds:0x5122707f
  406ea5:	or     ah,BYTE PTR [ecx-0x37b15a58]
  406eab:	mul    ecx
  406ead:	push   ebp
  406eae:	jns    0x406f2a
  406eb0:	pop    esp
  406eb1:	fwait
  406eb2:	adc    al,0xa3
  406eb4:	neg    BYTE PTR [ebx-0x19]
  406eb7:	add    BYTE PTR [edi-0x4d],dl
  406eba:	test   al,0xdb
  406ebc:	(bad)  
  406ebd:	outs   dx,DWORD PTR ds:[esi]
  406ebe:	push   0x54
  406ec0:	ja     0x406eda
  406ec2:	pop    esi
  406ec3:	mov    eax,ds:0xa3fc35ec
  406ec8:	push   ss
  406ec9:	dec    ecx
  406eca:	pop    es
  406ecb:	gs inc eax
  406ecd:	and    al,0x2b
  406ecf:	in     eax,dx
  406ed0:	add    ecx,DWORD PTR [edx+esi*2+0x60]
  406ed4:	sub    eax,0x7fd4f253
  406ed9:	sub    ch,BYTE PTR [esp+esi*8+0x8]
  406edd:	xor    DWORD PTR [ecx],ebx
  406edf:	mov    dl,0xa6
  406ee1:	or     DWORD PTR [edx+edx*1],ecx
  406ee4:	sub    ch,BYTE PTR ss:[esi]
  406ee7:	and    DWORD PTR [eax+edi*4-0x67],eax
  406eeb:	hlt    
  406eec:	mov    cl,0x8
  406eee:	sbb    cl,ch
  406ef0:	ds jp  0x406f6c
  406ef3:	ret    
  406ef4:	mov    edi,0x117faabc
  406ef9:	pop    eax
  406efa:	push   edi
  406efb:	mov    dh,0x38
  406efd:	ret    0x41eb
  406f00:	retf   
  406f01:	or     BYTE PTR [esi],al
  406f03:	fcmovb st,st(6)
  406f05:	test   al,0x3d
  406f07:	dec    esi
  406f08:	jo     0x406f1d
  406f0a:	clc    
  406f0b:	push   0xd7b9751f
  406f10:	mov    al,0x1e
  406f12:	add    BYTE PTR [ebx+0x21],dh
  406f15:	loope  0x406f8c
  406f17:	mov    edx,0xe6371aa6
  406f1c:	mov    esp,0x4276fe5f
  406f21:	sub    dl,BYTE PTR [ecx]
  406f23:	rcl    BYTE PTR [ecx],0xf8
  406f26:	ffreep st(7)
  406f28:	bound  ecx,QWORD PTR [esi+0x80afe6a]
  406f2e:	int    0x1a
  406f30:	rcl    BYTE PTR [edx+0x6df21aed],1
  406f36:	xor    esi,0x197ab0fc
  406f3c:	fmulp  st(2),st
  406f3e:	xchg   esp,eax
  406f3f:	cdq    
  406f40:	rol    BYTE PTR [eax],1
  406f42:	les    esp,FWORD PTR [esi]
  406f44:	stos   DWORD PTR es:[edi],eax
  406f45:	cwde   
  406f46:	and    esp,DWORD PTR [ebx]
  406f48:	ret    0xc108
  406f4b:	loopne 0x406f2f
  406f4d:	and    DWORD PTR [esi+0x27],edx
  406f50:	aad    0x8
  406f52:	cmp    eax,0x822e5b48
  406f57:	adc    al,0xb8
  406f59:	cli    
  406f5a:	push   ecx
  406f5b:	cld    
  406f5c:	mov    dl,0xba
  406f5e:	mov    DWORD PTR [ebp+0x15],esi
  406f61:	sub    dh,BYTE PTR [edx+0x1cad675e]
  406f67:	retf   
  406f68:	sub    al,0x6
  406f6a:	cmp    BYTE PTR [ecx+0x4b2f445f],al
  406f70:	test   eax,0x542bf28c
  406f75:	sbb    DWORD PTR [edx+0xb7fe69f],0xd6e008f8
  406f7f:	pop    esp
  406f80:	push   ebp
  406f81:	add    ecx,DWORD PTR [eax-0x16]
  406f84:	push   es
  406f85:	leave  
  406f86:	into   
  406f87:	leave  
  406f88:	inc    edi
  406f89:	cdq    
  406f8a:	repnz cwde 
  406f8c:	div    DWORD PTR [ecx+esi*8+0x4019c25b]
  406f93:	fs scas al,BYTE PTR es:[edi]
  406f95:	test   ebp,edi
  406f97:	mov    bl,0x19
  406f99:	cwde   
  406f9a:	jg     0x407006
  406f9c:	cli    
  406f9d:	or     DWORD PTR [esi-0x692a63a2],esi
  406fa3:	sbb    al,0x9d
  406fa5:	aad    0xec
  406fa7:	xor    BYTE PTR [edx+0x4c312e79],bl
  406fad:	mov    ds:0xe14eb107,al
  406fb2:	push   ds
  406fb3:	push   es
  406fb4:	mov    dl,0x80
  406fb6:	jp     0x406f4e
  406fb8:	inc    esi
  406fb9:	arpl   WORD PTR [eax],di
  406fbb:	loop   0x406f5e
  406fbd:	shl    BYTE PTR [eax],cl
  406fbf:	ret    
  406fc0:	cwde   
  406fc1:	xor    al,0xa6
  406fc3:	mov    ebx,DWORD PTR [ecx+0xa028970]
  406fc9:	sbb    al,0x75
  406fcb:	stc    
  406fcc:	cmp    eax,0x130c933d
  406fd1:	cld    
  406fd2:	push   ds
  406fd3:	jmp    0xba99:0xf951ff7c
  406fda:	mov    esp,0x8029da3c
  406fdf:	dec    edx
  406fe0:	mov    es,WORD PTR ds:0x17a28580
  406fe6:	and    eax,0x55f119f2
  406feb:	and    BYTE PTR ds:0x2c27a039,al
  406ff1:	sub    DWORD PTR [edx-0x36],ecx
  406ff4:	leave  
  406ff5:	jne    0x406f93
  406ff7:	xchg   ebp,eax
  406ff8:	sub    BYTE PTR [esi-0x6619f467],bl
  406ffe:	es xchg DWORD PTR ss:[edx],eax
  407002:	idiv   BYTE PTR ds:0x57da27da
  407008:	mov    dh,0x37
  40700a:	xchg   edi,eax
  40700b:	popa   
  40700c:	xor    BYTE PTR [ebp+0x18f9d9f3],bh
  407012:	or     eax,ecx
  407014:	inc    edi
  407015:	mov    ds:0x40c2edf2,al
  40701a:	sub    eax,0xb08793d4
  40701f:	gs ja  0x406ffc
  407022:	pop    ecx
  407023:	nop
  407024:	int3   
  407025:	xor    DWORD PTR [esi+0x4d8cee09],edx
  40702b:	aaa    
  40702c:	test   DWORD PTR [edx+0x577eee63],ebp
  407032:	push   0x7f319c4c
  407037:	ins    DWORD PTR es:[edi],dx
  407038:	or     DWORD PTR [ebx],ebx
  40703a:	sbb    eax,0x173e0b54
  40703f:	daa    
  407040:	sbb    ebx,DWORD PTR [edi-0x7ca37e19]
  407046:	out    dx,eax
  407047:	sahf   
  407048:	int3   
  407049:	xor    ch,BYTE PTR [edi]
  40704b:	div    cl
  40704d:	loop   0x4070be
  40704f:	mov    edi,0x73cdef04
  407054:	push   ecx
  407055:	or     BYTE PTR [ecx+0x21],ah
  407058:	xchg   ecx,eax
  407059:	add    esi,DWORD PTR [edx]
  40705b:	bound  ebx,QWORD PTR [ebx-0x5312728a]
  407061:	or     eax,DWORD PTR [ebx+0x3196dae7]
  407067:	or     DWORD PTR [ebx+0x7e],edx
  40706a:	popa   
  40706b:	dec    esp
  40706c:	hlt    
  40706d:	cmc    
  40706e:	shl    BYTE PTR [ebx+0x28294952],0x2c
  407075:	xcrypt-cfb (bad)
  407076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407077:	(bad)  
  407078:	frstor ds:0x53823457
  40707e:	mov    al,ds:0xc775515b
  407083:	mov    BYTE PTR [ebx-0x462df9e8],bh
  407089:	xchg   edx,eax
  40708a:	and    BYTE PTR [ebx-0x59],bl
  40708d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708e:	xchg   esi,eax
  40708f:	out    dx,al
  407090:	cmp    ch,BYTE PTR [eax+0x7deab0b2]
  407096:	fcom   DWORD PTR [eax-0x36b1c5cc]
  40709c:	xchg   edi,eax
  40709d:	push   ebp
  40709e:	pop    esp
  40709f:	and    DWORD PTR [edi-0x25bea4a1],ecx
  4070a5:	and    BYTE PTR [edx],0x48
  4070a8:	das    
  4070a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070aa:	jno    0x407045
  4070ac:	or     bh,0xfe
  4070af:	in     eax,0xf
  4070b1:	sub    eax,DWORD PTR [eax-0x5fad2cda]
  4070b7:	ss pop ebx
  4070b9:	sbb    bl,BYTE PTR [ebx-0x42]
  4070bc:	xchg   edi,eax
  4070bd:	or     DWORD PTR [ebp-0xc],esi
  4070c0:	out    dx,al
  4070c1:	ret    
  4070c2:	push   edi
  4070c3:	push   eax
  4070c4:	push   esp
  4070c5:	pop    edx
  4070c6:	js     0x407104
  4070c8:	sub    DWORD PTR [ebp-0x521546af],ecx
  4070ce:	xor    DWORD PTR [esi],ebp
  4070d0:	mov    esp,0xc3e75f80
  4070d5:	jecxz  0x4070db
  4070d7:	pop    es
  4070d8:	inc    ebx
  4070d9:	jnp    0x40710c
  4070db:	ja     0x407119
  4070dd:	lds    eax,FWORD PTR [esi+0xbae35d9]
  4070e3:	(bad)  [ecx-0x65]
  4070e6:	aaa    
  4070e7:	cmc    
  4070e8:	fsubr  DWORD PTR [ecx+0x1531222d]
  4070ee:	xchg   ecx,eax
  4070ef:	xchg   BYTE PTR [edi+0x1b],ah
  4070f2:	cmp    eax,0x387c6a3b
  4070f7:	push   ds
  4070f8:	cdq    
  4070f9:	mov    al,ds:0x2076550c
  4070fe:	std    
  4070ff:	or     DWORD PTR [esi],ebp
  407101:	sbb    cl,BYTE PTR [edi+0x312552a5]
  407107:	jle    0x407167
  407109:	aad    0xc1
  40710b:	and    DWORD PTR [edx+edx*8],0xffffffba
  40710f:	sub    DWORD PTR [esi-0x56ee2cd5],0x821c6518
  407119:	jl     0x407168
  40711b:	outs   dx,DWORD PTR ds:[esi]
  40711c:	fmul   QWORD PTR [ecx+0x1d9883]
  407122:	hlt    
  407123:	pop    edi
  407124:	mov    ah,0xf9
  407126:	pop    eax
  407127:	mov    ds:0x70cabecf,eax
  40712c:	inc    eax
  40712d:	stos   DWORD PTR es:[edi],eax
  40712e:	push   ds
  40712f:	mov    cl,0x2d
  407131:	in     eax,0x30
  407133:	push   edi
  407134:	aam    0xee
  407136:	test   dl,ah
  407138:	add    DWORD PTR [ebx+0x675cb311],esp
  40713e:	push   ss
  40713f:	adc    cl,BYTE PTR [ebp-0x5]
  407142:	mov    cl,0x3
  407144:	or     al,0xb5
  407146:	jb     0x407172
  407148:	mov    esi,0x8bd9f85a
  40714d:	mov    cl,0x97
  40714f:	out    dx,al
  407150:	gs mov esp,0x37af09b0
  407156:	cmp    eax,0x3d437800
  40715b:	dec    edi
  40715c:	mov    bl,BYTE PTR [esi+0x306b0f72]
  407162:	jge    0x407147
  407164:	mov    ds:0x4f2ebd41,eax
  407169:	or     al,0xc4
  40716b:	xor    al,0xaa
  40716d:	inc    edi
  40716e:	adc    BYTE PTR [ebx],al
  407170:	mov    esp,0xcd7fd6be
  407175:	repz int 0x36
  407178:	adc    eax,0x13e9909f
  40717d:	dec    esi
  40717e:	call   0xc3b64a5a
  407183:	mov    DWORD PTR [edi-0xe],ecx
  407186:	push   ss
  407187:	into   
  407188:	jmp    0x706b73bf
  40718d:	push   0x47355c88
  407192:	inc    esp
  407193:	or     DWORD PTR [edx-0x1a],0x2b541191
  40719a:	cdq    
  40719b:	imul   esp,DWORD PTR [esi+esi*8+0x78],0x474d217
  4071a3:	xchg   ebx,eax
  4071a4:	js     0x407201
  4071a6:	test   eax,0xa3eb3626
  4071ab:	or     DWORD PTR ds:0x9a39aefa,eax
  4071b1:	hlt    
  4071b2:	adc    al,0x2b
  4071b4:	xor    DWORD PTR [edi-0x31],esp
  4071b7:	(bad)  
  4071b8:	sbb    al,0xec
  4071ba:	rol    BYTE PTR [ebx-0x44],0x97
  4071be:	jbe    0x40714d
  4071c0:	dec    ebp
  4071c1:	mov    dl,0x6a
  4071c3:	jecxz  0x407181
  4071c5:	or     eax,ecx
  4071c7:	icebp  
  4071c8:	and    eax,0x2be1fbb7
  4071cd:	fnstenv [ecx+0x72]
  4071d0:	daa    
  4071d1:	ficomp DWORD PTR [edx]
  4071d3:	jmp    0x1a11:0x682b4572
  4071da:	shl    BYTE PTR [esi+edi*8],cl
  4071dd:	fwait
  4071de:	and    BYTE PTR [edi-0x390fdd4a],ch
  4071e4:	add    eax,0x47c5655d
  4071e9:	mov    esi,0xd98b4920
  4071ee:	or     ecx,DWORD PTR [edi]
  4071f0:	sbb    DWORD PTR ds:0xfe7faf23,esp
  4071f6:	dec    esi
  4071f7:	sub    al,0xf7
  4071f9:	nop
  4071fa:	std    
  4071fb:	aas    
  4071fc:	add    bh,dl
  4071fe:	jl     0x407233
  407200:	dec    eax
  407201:	fst    QWORD PTR [ecx+0x7e]
  407204:	retf   0x463
  407207:	sbb    BYTE PTR [edi-0x708918fd],cl
  40720d:	ins    DWORD PTR es:[edi],dx
  40720e:	inc    esi
  40720f:	adc    al,BYTE PTR [ebp+0x28]
  407212:	mov    edx,0x63e4c4b7
  407217:	je     0x407250
  407219:	shl    BYTE PTR [esi-0x37],0xc5
  40721d:	dec    ebp
  40721e:	add    ch,BYTE PTR [eax+eiz*8+0x57]
  407222:	sub    edi,DWORD PTR [ebx-0x7f721c17]
  407228:	rol    BYTE PTR ds:0x82527538,cl
  40722e:	jle    0x40726a
  407230:	lds    edx,FWORD PTR [ecx-0x5c43e88e]
  407236:	sbb    BYTE PTR [edi-0xb],al
  407239:	pop    ebx
  40723a:	or     BYTE PTR [edi-0x360052ff],dh
  407240:	test   eax,0x6256d690
  407245:	cmp    BYTE PTR [ecx-0x26231a17],al
  40724b:	dec    esp
  40724c:	push   0xfffffff8
  40724e:	jb     0x407205
  407250:	aas    
  407251:	inc    BYTE PTR [esi-0x1ab5c3e]
  407257:	test   al,0x3e
  407259:	stos   BYTE PTR es:[edi],al
  40725a:	retf   0xe621
  40725d:	mov    eax,0xf00d0c73
  407262:	sub    dh,cl
  407264:	or     DWORD PTR [ebp+0x1e355131],esp
  40726a:	cmp    al,0x79
  40726c:	in     al,0x94
  40726e:	lods   eax,DWORD PTR ds:[esi]
  40726f:	mov    ebp,0x2e324dd7
  407274:	jbe    0x4072e6
  407276:	mov    ebx,0xabaf2d34
  40727b:	mov    ?,WORD PTR [eax]
  40727d:	pop    ebx
  40727e:	js     0xd946198a
  407284:	sub    eax,0xf2954de9
  407289:	cdq    
  40728a:	in     eax,0x2d
  40728c:	mov    bl,0xd1
  40728e:	mov    edi,0x489d19cc
  407293:	jg     0x4072c0
  407295:	and    DWORD PTR [edi],ecx
  407297:	push   esi
  407298:	push   cs
  407299:	aad    0x9
  40729b:	ret    
  40729c:	mov    dl,cl
  40729e:	xor    al,0x5d
  4072a0:	and    edx,edx
  4072a2:	cld    
  4072a3:	push   ecx
  4072a4:	adc    BYTE PTR [eax+0x5],ah
  4072a7:	sbb    DWORD PTR [edi+0x2e],ebp
  4072aa:	pop    ds
  4072ab:	cwde   
  4072ac:	addr16 in eax,dx
  4072ae:	dec    ebp
  4072af:	add    DWORD PTR [ebx+0x6d],eax
  4072b2:	cmc    
  4072b3:	aad    0x3d
  4072b5:	mov    ah,0x53
  4072b7:	dec    ebp
  4072b8:	push   esi
  4072b9:	jbe    0x407298
  4072bb:	div    BYTE PTR [esi-0x29]
  4072be:	mov    eax,ds:0xeab6715e
  4072c3:	pop    es
  4072c4:	in     eax,dx
  4072c5:	repnz popf 
  4072c7:	mov    al,ds:0xb4fc5ee2
  4072cc:	push   esp
  4072cd:	fwait
  4072ce:	in     al,dx
  4072cf:	leave  
  4072d0:	xor    dl,dl
  4072d2:	pop    edi
  4072d3:	xchg   ecx,eax
  4072d4:	out    dx,al
  4072d5:	sbb    DWORD PTR [ecx+0x5b12d816],0x39
  4072dc:	pop    ss
  4072dd:	(bad)  
  4072de:	icebp  
  4072df:	inc    ecx
  4072e0:	pop    esp
  4072e1:	int3   
  4072e2:	rol    DWORD PTR [esi-0x80348f9],1
  4072e8:	mov    ds:0x2b998be8,al
  4072ed:	fld    DWORD PTR [ebp+0x25]
  4072f0:	adc    BYTE PTR [esi],0xe9
  4072f3:	sbb    dl,dl
  4072f5:	int3   
  4072f6:	les    eax,FWORD PTR [edx-0x2727a77f]
  4072fc:	mov    BYTE PTR [ecx-0x1ef1350c],dl
  407302:	shrd   ebx,ebx,0x5d
  407306:	sub    esi,DWORD PTR [esp+edi*4-0xe413083]
  40730d:	cmp    dh,BYTE PTR [edx+eiz*1+0x76]
  407311:	pop    ss
  407312:	data16 sub bl,al
  407315:	dec    eax
  407316:	repz pop es
  407318:	ds popf 
  40731a:	out    0x48,eax
  40731c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731d:	dec    esi
  40731e:	push   es
  40731f:	mov    edx,0x96caba37
  407324:	dec    ecx
  407325:	add    BYTE PTR [esi],0x7c
  407328:	pop    ebx
  407329:	(bad)  
  40732a:	cld    
  40732b:	nop
  40732c:	mov    bh,BYTE PTR [edi-0x67]
  40732f:	cmp    eax,0x4aa00c9d
  407334:	sub    BYTE PTR [edi+0xe5ec044],0x96
  40733b:	neg    DWORD PTR [ebp-0x778e3eff]
  407341:	jmp    0xc63d7a05
  407346:	push   esi
  407347:	aam    0x94
  407349:	xchg   ebx,eax
  40734a:	pop    ss
  40734b:	lods   eax,DWORD PTR ds:[esi]
  40734c:	sbb    BYTE PTR [ecx],ch
  40734e:	sahf   
  40734f:	popf   
  407350:	xor    dl,ah
  407352:	ret    0xd96c
  407355:	push   ebx
  407356:	out    0xe1,eax
  407358:	jbe    0x407385
  40735a:	(bad)  
  40735b:	out    0xe8,al
  40735d:	mov    dl,0x3a
  40735f:	mov    ecx,0x15d888ee
  407364:	xlat   BYTE PTR ds:[ebx]
  407365:	ja     0x407311
  407367:	pop    ebp
  407368:	push   edi
  407369:	out    dx,al
  40736a:	inc    esi
  40736b:	les    edx,FWORD PTR [edx+0x5c]
  40736e:	jmp    0x407313
  407370:	lods   al,BYTE PTR ds:[esi]
  407371:	add    eax,0x835f8fc
  407376:	xor    ebx,DWORD PTR [eax+0xe21e7ed]
  40737c:	xor    ah,BYTE PTR [edx+0x2c]
  40737f:	xchg   edi,eax
  407380:	sub    al,bh
  407382:	pop    ds
  407383:	out    dx,eax
  407384:	lock xor al,0xc2
  407387:	push   es
  407388:	repz and ah,al
  40738b:	push   ss
  40738c:	and    BYTE PTR [ebp-0x56],al
  40738f:	xchg   esi,eax
  407390:	mov    dh,ch
  407392:	jae    0x4073c7
  407394:	push   0xffffff8a
  407396:	add    DWORD PTR [eax-0x5b0f4885],eax
  40739c:	ins    DWORD PTR es:[edi],dx
  40739d:	pusha  
  40739e:	push   0x831de5f3
  4073a3:	cmp    DWORD PTR [esi+esi*8-0x7d],edi
  4073a7:	aam    0x5a
  4073a9:	aad    0x30
  4073ab:	mov    esp,0x9161c212
  4073b0:	fcomp  DWORD PTR [esi+0x0]
  4073b3:	cmc    
  4073b4:	aas    
  4073b5:	gs scas eax,DWORD PTR es:[edi]
  4073b7:	fadd   QWORD PTR [edi+0x45]
  4073ba:	out    dx,al
  4073bb:	ins    BYTE PTR es:[edi],dx
  4073bc:	xor    DWORD PTR [esi],edi
  4073be:	and    BYTE PTR [ecx+ebx*1-0x5e51e172],dh
  4073c5:	in     eax,dx
  4073c6:	jmp    0x7ffb8c60
  4073cb:	inc    esi
  4073cc:	das    
  4073cd:	sub    BYTE PTR [esi+0x6f00317a],dl
  4073d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d4:	fcomp  QWORD PTR ds:0xbe6f1626
  4073da:	stos   BYTE PTR es:[edi],al
  4073db:	fcomp  DWORD PTR [ecx]
  4073dd:	or     DWORD PTR ds:0x2a5a2217,edx
  4073e3:	dec    esp
  4073e4:	fdiv   QWORD PTR [edi-0x9]
  4073e7:	data16 adc BYTE PTR [ebx+edi*4+0x36],ah
  4073ec:	mov    ebx,0x3ac26c4d
  4073f1:	(bad)  
  4073f2:	mov    ds:0x15429921,eax
  4073f7:	test   BYTE PTR [esp+edx*8-0x45eb2d86],cl
  4073fe:	sbb    ebx,DWORD PTR [edi+0xd]
  407401:	(bad)  [ecx+esi*2-0x26]
  407405:	adc    ecx,eax
  407407:	push   0xffffff83
  407409:	and    eax,0x1fd73028
  40740e:	jns    0x407411
  407410:	pop    ebx
  407411:	repnz or BYTE PTR [edx+0x5a],al
  407415:	ds clc 
  407417:	dec    esp
  407418:	sbb    BYTE PTR [esi-0x17636522],bl
  40741e:	in     al,0xe2
  407420:	dec    ebp
  407421:	in     eax,dx
  407422:	xchg   edi,eax
  407423:	shr    BYTE PTR [eax+esi*8+0x41],cl
  407427:	mov    ds:0x977213a6,al
  40742c:	push   esi
  40742d:	mov    edi,0x6291818a
  407432:	jo     0x407491
  407434:	fadd   st,st(4)
  407436:	mov    edi,0xf1fdf4b1
  40743b:	or     ecx,edi
  40743d:	loope  0x4074a7
  40743f:	cmp    al,0x42
  407441:	daa    
  407442:	mov    bl,0x1
  407444:	xor    BYTE PTR [edx+edi*1+0x45],0xc2
  407449:	std    
  40744a:	arpl   WORD PTR [ebx+0x66],di
  40744d:	inc    ebx
  40744e:	loop   0x407476
  407450:	mov    esp,0x6cc6ce5e
  407455:	lahf   
  407456:	and    al,0xbc
  407458:	xor    eax,eax
  40745a:	pop    edx
  40745b:	ret    0x6a33
  40745e:	loope  0x4073fc
  407460:	xlat   BYTE PTR ds:[ebx]
  407462:	jp     0x4073f5
  407464:	ret    0x11dd
  407467:	cmp    al,0x8e
  407469:	mov    esp,DWORD PTR [ebp+0x3c5ff9d0]
  40746f:	adc    WORD PTR [ebp+0x40],dx
  407473:	aad    0xb6
  407475:	mov    ebp,0x5420ccd0
  40747a:	add    eax,DWORD PTR [edx+eax*4-0x7c]
  40747e:	pop    eax
  40747f:	add    DWORD PTR [edi+0x40],ecx
  407482:	fwait
  407483:	and    esi,0x36
  407486:	ja     0x407439
  407488:	popa   
  407489:	outs   dx,BYTE PTR ds:[esi]
  40748a:	mov    eax,0x21f36cd6
  40748f:	fld    DWORD PTR [edx+0x7f]
  407492:	sbb    al,0x37
  407494:	fdivr  QWORD PTR [ebp+0x421c89d5]
  40749a:	aas    
  40749b:	dec    DWORD PTR [ebx]
  40749d:	rcr    al,cl
  40749f:	mov    ebx,0xfb1e018e
  4074a4:	jp     0x407493
  4074a6:	pop    edi
  4074a7:	mov    ecx,0xc9624326
  4074ac:	shl    DWORD PTR [ebp-0x1cddb470],1
  4074b2:	pop    ecx
  4074b3:	xchg   esp,eax
  4074b4:	test   esi,ebx
  4074b6:	enter  0xb318,0x3a
  4074ba:	and    eax,0x18ecd95c
  4074bf:	mov    ds,WORD PTR [edi+0x376964a7]
  4074c5:	ret    0xaaf5
  4074c8:	sbb    BYTE PTR [edx-0x30],ah
  4074cb:	inc    ebx
  4074cc:	leave  
  4074cd:	aas    
  4074ce:	jmp    0x40746b
  4074d0:	fimul  DWORD PTR [esi]
  4074d2:	sar    esp,cl
  4074d4:	mov    eax,ds:0x32830523
  4074d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074da:	aas    
  4074db:	cld    
  4074dc:	les    ebp,FWORD PTR [esi+0x1b]
  4074df:	xlat   BYTE PTR ds:[ebx]
  4074e0:	xchg   esi,eax
  4074e1:	hlt    
  4074e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e3:	retf   0xf181
  4074e6:	pop    ecx
  4074e7:	aad    0x48
  4074e9:	pop    ds
  4074ea:	add    eax,0xe7270176
  4074ef:	iret   
  4074f0:	cmp    DWORD PTR [ecx],ebp
  4074f2:	push   ebp
  4074f3:	stos   DWORD PTR es:[edi],eax
  4074f4:	dec    ebp
  4074f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f6:	test   al,0x8b
  4074f8:	cmp    BYTE PTR [ebx+0x44],0x79
  4074fc:	add    DWORD PTR [edx+0x79],ebp
  4074ff:	jp     0x407487
  407501:	loopne 0x407580
  407503:	push   cs
  407504:	adc    eax,0x5c442190
  407509:	dec    esi
  40750a:	push   edi
  40750b:	sub    DWORD PTR ds:0xabb4afed,eax
  407511:	mov    ds:0xbad364a6,al
  407516:	inc    edx
  407517:	gs jg  0x40758b
  40751a:	inc    BYTE PTR [edi-0x19]
  40751d:	jno    0x407539
  40751f:	fsubr  DWORD PTR [ebx]
  407521:	outs   dx,BYTE PTR ds:[esi]
  407522:	hlt    
  407523:	mov    dl,0x36
  407525:	lods   eax,DWORD PTR ds:[esi]
  407526:	or     BYTE PTR [esi],bh
  407528:	js     0x407587
  40752a:	in     eax,0x6
  40752c:	mov    ds:0x707c5151,al
  407531:	adc    al,0xcc
  407533:	fld    TBYTE PTR [edi]
  407535:	jle    0x407588
  407537:	inc    ecx
  407538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407539:	cmc    
  40753a:	sub    DWORD PTR ds:[eax],ecx
  40753d:	mov    al,ds:0xb0443cdd
  407542:	shl    DWORD PTR [edx+0x64],cl
  407545:	xchg   esi,eax
  407546:	les    edx,FWORD PTR [esi-0x17fce9a8]
  40754c:	xchg   ebx,eax
  40754d:	jmp    0xc96a:0x3732a618
  407554:	inc    ebx
  407555:	mov    edi,0x8a30a18
  40755a:	and    eax,0x9d40988b
  40755f:	sub    al,0x12
  407561:	sub    BYTE PTR [esi-0x14],0x6e
  407565:	jbe    0x407593
  407567:	push   0x39
  407569:	dec    esp
  40756a:	xchg   esi,eax
  40756b:	inc    ecx
  40756c:	outs   dx,BYTE PTR ds:[esi]
  40756d:	into   
  40756e:	sub    ch,BYTE PTR cs:[edi-0x38e9d3b8]
  407575:	(bad)  
  407576:	jns    0x407573
  407578:	mov    eax,ds:0x64112387
  40757d:	jno    0x4075bc
  40757f:	outs   dx,BYTE PTR ds:[esi]
  407580:	adc    eax,0x3ced91a5
  407585:	mov    DWORD PTR [edx-0x16],edi
  407588:	jecxz  0x4075de
  40758a:	xor    al,0x45
  40758c:	or     eax,0x6b1be8d9
  407591:	push   ebp
  407592:	xor    DWORD PTR [edi-0x6f],eax
  407595:	mov    eax,ds:0xfd6bf014
  40759a:	push   esi
  40759b:	jmp    0xeba5f649
  4075a0:	or     al,0xbb
  4075a2:	mov    cl,0xe3
  4075a4:	adc    al,0x9d
  4075a6:	jp     0x4075a3
  4075a8:	jl     0x4075de
  4075aa:	or     DWORD PTR [ecx+0x24],0x54802c06
  4075b1:	rcr    dh,cl
  4075b3:	push   ss
  4075b4:	pusha  
  4075b5:	inc    ecx
  4075b6:	ss pushf 
  4075b8:	ja     0x4075ab
  4075ba:	jp     0x407613
  4075bc:	je     0x407561
  4075be:	pop    esi
  4075bf:	inc    ebx
  4075c0:	push   ds
  4075c1:	sbb    bh,BYTE PTR [edi+0x4b]
  4075c4:	lock int3 
  4075c6:	mov    edx,0xd2bfcdc6
  4075cb:	dec    eax
  4075cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cd:	mov    bh,ch
  4075cf:	xchg   edi,eax
  4075d0:	or     al,0xb8
  4075d2:	test   al,0x40
  4075d4:	cli    
  4075d5:	mov    esp,0xd59a0d76
  4075da:	cmp    eax,ecx
  4075dc:	dec    ecx
  4075dd:	mov    BYTE PTR [edx+0x48547d1c],ah
  4075e3:	inc    edx
  4075e4:	in     eax,dx
  4075e5:	mov    edx,0x5b9bd32d
  4075ea:	sbb    dl,BYTE PTR ds:0xce7ea0a5
  4075f0:	ins    BYTE PTR es:[edi],dx
  4075f1:	test   eax,0x76213c34
  4075f6:	mov    ecx,0xba6f23f
  4075fb:	xchg   esi,eax
  4075fc:	clc    
  4075fd:	inc    edi
  4075fe:	adc    eax,0x22febb22
  407603:	jmp    0x5dda:0xd1e0d18f
  40760a:	retf   
  40760b:	jbe    0x407650
  40760d:	cli    
  40760e:	dec    ebp
  40760f:	mov    eax,0x4b50f206
  407614:	outs   dx,BYTE PTR ds:[esi]
  407615:	test   al,0xe
  407617:	daa    
  407618:	add    DWORD PTR [eax*8-0x230b1b73],0xaa84028b
  407623:	xlat   BYTE PTR ds:[ebx]
  407624:	mov    ah,0xbb
  407626:	mov    ds:0x2d395493,eax
  40762b:	cmp    dl,ch
  40762d:	stc    
  40762e:	cli    
  40762f:	fcmovnu st,st(1)
  407631:	pop    ds
  407632:	or     bh,BYTE PTR gs:[edx-0x591be8f6]
  407639:	lods   eax,DWORD PTR ds:[esi]
  40763a:	push   cs
  40763b:	ficomp WORD PTR [ecx+0x23]
  40763e:	in     eax,0x92
  407640:	popa   
  407641:	lds    ebp,FWORD PTR [edx-0x3e]
  407644:	retf   
  407645:	lahf   
  407646:	loopne 0x407695
  407648:	pop    ecx
  407649:	test   BYTE PTR ds:0x733c1fda,dl
  40764f:	and    ebp,ecx
  407651:	aad    0x78
  407653:	call   0xadca:0x67471b9
  40765a:	jo     0x40761e
  40765c:	addr16 ds cs push esi
  407660:	ret    0x6deb
  407663:	das    
  407664:	dec    ebx
  407665:	xor    ah,BYTE PTR ds:0x2e018433
  40766b:	or     edi,edx
  40766d:	repnz pop eax
  40766f:	aaa    
  407670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407671:	dec    esp
  407672:	jns    0x40763a
  407674:	(bad)  
  407675:	mov    ecx,0x5d514ddc
  40767a:	dec    edx
  40767b:	popa   
  40767c:	icebp  
  40767d:	sbb    ch,BYTE PTR ds:0x666fe9a3
  407683:	push   esp
  407684:	dec    si
  407686:	jge    0x4076d1
  407688:	dec    eax
  407689:	int    0x9b
  40768b:	add    DWORD PTR [edx],0x3b
  40768e:	or     eax,0x7108a41d
  407693:	mov    ds:0x8bff54b1,eax
  407698:	push   0xd0f8a080
  40769d:	mov    al,BYTE PTR [ecx]
  40769f:	xlat   BYTE PTR ds:[ebx]
  4076a0:	xchg   BYTE PTR [edx-0x29],ch
  4076a3:	sub    BYTE PTR [eax+0x70],dl
  4076a6:	sbb    al,0x16
  4076a8:	popa   
  4076a9:	push   0x1a0800d8
  4076ae:	enter  0xcadf,0x11
  4076b2:	push   edx
  4076b3:	add    DWORD PTR [edi-0x65],esp
  4076b6:	xchg   ebp,eax
  4076b7:	lock mov DWORD PTR fs:[eax-0x61],edx
  4076bc:	xchg   esi,eax
  4076bd:	sub    eax,0xef1d97c2
  4076c2:	ror    BYTE PTR [eax+0x7840d6f6],cl
  4076c8:	fs push esi
  4076ca:	shr    DWORD PTR [esp+esi*1-0x49],0x61
  4076cf:	mov    ds,eax
  4076d1:	je     0x407721
  4076d3:	out    0xb6,eax
  4076d5:	mov    ?,WORD PTR [ebx]
  4076d7:	imul   ebp,DWORD PTR [eax+0x63],0x12
  4076db:	add    al,0xc5
  4076dd:	call   0x1c87398c
  4076e2:	mov    BYTE PTR [ebx-0x13c2fb7f],dh
  4076e8:	push   ecx
  4076e9:	adc    al,0xae
  4076eb:	and    al,0x13
  4076ed:	dec    esi
  4076ee:	repz push ss
  4076f0:	add    al,0x7f
  4076f2:	data16 xlat BYTE PTR ds:[ebx]
  4076f4:	in     eax,dx
  4076f5:	cwde   
  4076f6:	mov    ecx,0x1724c8da
  4076fb:	test   BYTE PTR [eax],dl
  4076fd:	out    0x2b,eax
  4076ff:	daa    
  407700:	pop    esi
  407701:	stos   DWORD PTR es:[edi],eax
  407702:	inc    eax
  407703:	(bad)  
  407704:	fnstenv [edi]
  407706:	or     DWORD PTR [ecx-0x5a],edi
  407709:	jb     0x407735
  40770b:	or     al,0x4c
  40770d:	mov    eax,ds:0x89580e14
  407712:	sbb    eax,0x90de5bd4
  407717:	mov    eax,ds:0xbd251f71
  40771c:	cld    
  40771d:	test   eax,0xd37500f3
  407722:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407724:	xchg   ecx,eax
  407725:	mov    ebx,DWORD PTR [eax+0x1e052559]
  40772b:	ret    0x63c6
  40772e:	cwde   
  40772f:	(bad)  
  407730:	sbb    DWORD PTR [edx-0x5f1d647e],ecx
  407736:	push   ebp
  407737:	or     al,0xb
  407739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773a:	and    DWORD PTR [esi+0x4d26e440],0x47d84599
  407744:	inc    ecx
  407745:	stos   DWORD PTR es:[edi],eax
  407746:	out    0xc0,eax
  407748:	xor    DWORD PTR [ecx-0x69233abb],edi
  40774e:	ret    
  40774f:	and    edi,esp
  407751:	out    0x86,eax
  407753:	xchg   esp,eax
  407754:	daa    
  407755:	retf   
  407756:	push   ebp
  407757:	pop    esi
  407758:	lock mov bl,0x28
  40775b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40775c:	addr16 sahf 
  40775e:	xor    DWORD PTR [ebp-0x58956383],esi
  407764:	shl    BYTE PTR [ebx+0x65],1
  407767:	stos   BYTE PTR es:[edi],al
  407768:	mov    eax,ds:0xd1ccd612
  40776d:	es mov dh,0xed
  407770:	test   DWORD PTR [ebx],edi
  407772:	mov    ch,0x56
  407774:	(bad)
  407777:	sti    
  407778:	cmp    al,0xe8
  40777a:	sub    DWORD PTR [ebx-0x5cd02f48],ecx
  407780:	sar    al,1
  407782:	cmp    al,BYTE PTR [esi+0x532bf853]
  407788:	sub    eax,0xaf57aa43
  40778d:	leave  
  40778e:	sar    DWORD PTR [edi-0x3169bc2d],cl
  407794:	pop    ds
  407795:	loopne 0x4077c4
  407797:	es jg  0x40772f
  40779a:	js     0x4077a1
  40779c:	pop    edx
  40779d:	push   cs
  40779e:	xchg   BYTE PTR [ebx+0x1],cl
  4077a1:	outs   dx,BYTE PTR ds:[esi]
  4077a2:	xor    DWORD PTR ds:0xad2b1831,ebp
  4077a8:	sbb    BYTE PTR [ecx+0x356fe33c],dh
  4077ae:	or     BYTE PTR [eax+0x2f],ch
  4077b1:	cld    
  4077b2:	mov    eax,ds:0xceaa73ac
  4077b7:	mov    ch,0xac
  4077b9:	loop   0x407822
  4077bb:	adc    DWORD PTR [edx+0x46e88f3f],ebp
  4077c1:	or     ebx,DWORD PTR [ebx-0x6c]
  4077c4:	std    
  4077c5:	sar    DWORD PTR [ebx-0x16],cl
  4077c8:	(bad)  
  4077c9:	push   ecx
  4077ca:	sub    esi,edx
  4077cc:	push   es
  4077cd:	adc    ch,BYTE PTR [ecx+0x9]
  4077d0:	das    
  4077d1:	jle    0x4077ae
  4077d3:	cmc    
  4077d4:	inc    edx
  4077d5:	fdiv   QWORD PTR ds:0xb10bf061
  4077db:	jbe    0x407799
  4077dd:	pop    eax
  4077de:	xchg   ebp,eax
  4077df:	lea    esi,[esi+0x15b0e124]
  4077e5:	in     al,0x66
  4077e7:	xchg   esp,eax
  4077e8:	data16 sub al,0x98
  4077eb:	xchg   esi,eax
  4077ec:	arpl   WORD PTR [ecx+0x4],di
  4077ef:	sbb    DWORD PTR [ebx+0x7196919e],edx
  4077f5:	adc    DWORD PTR [ecx+ebp*2],0x64
  4077f9:	idiv   BYTE PTR [ebx+0xe52586d]
  4077ff:	mov    DWORD PTR [eax-0x5f],eax
  407802:	xor    ah,ah
  407804:	shl    BYTE PTR [ebx],0x5c
  407807:	pop    ebx
  407808:	in     eax,dx
  407809:	push   edx
  40780a:	pop    edi
  40780b:	cdq    
  40780c:	mov    cs,WORD PTR ds:0x79a291d7
  407812:	bound  edx,QWORD PTR [ecx]
  407814:	push   ecx
  407815:	mov    ds:0xfeda34dc,eax
  40781a:	es sahf 
  40781c:	xor    eax,0x4e7a23b1
  407821:	retf   
  407822:	sar    BYTE PTR [eax-0x43936990],0x37
  407829:	mov    ds:0x76844f0e,al
  40782e:	cmp    dh,dh
  407830:	pusha  
  407831:	xchg   ecx,eax
  407832:	outs   dx,BYTE PTR ds:[esi]
  407833:	pop    eax
  407834:	dec    edx
  407835:	fcmovnu st,st(7)
  407837:	outs   dx,BYTE PTR ds:[esi]
  407838:	clc    
  407839:	arpl   bx,si
  40783b:	push   0xffffffac
  40783d:	cmp    dh,ch
  40783f:	adc    ebp,esi
  407841:	mov    ecx,0x7a334b45
  407846:	aam    0x77
  407848:	ins    DWORD PTR es:[edi],dx
  407849:	rcr    BYTE PTR [esi-0x23],0x56
  40784d:	shl    BYTE PTR [ebp-0x5ae1f5d8],0xa9
  407854:	cld    
  407855:	ds dec ebp
  407857:	sbb    edx,DWORD PTR [ecx+0x652ced36]
  40785d:	mov    edx,0xed48a839
  407862:	jmp    0x40782f
  407864:	std    
  407865:	xchg   edi,eax
  407866:	in     eax,0x4
  407868:	nop
  407869:	jp     0x4077fa
  40786b:	jb     0x7d63e138
  407871:	aaa    
  407872:	mov    bh,0x8f
  407874:	adc    DWORD PTR [ecx+0x35b73f50],ebp
  40787a:	add    eax,0x879a94d1
  40787f:	lea    edx,[edi-0x14e871c]
  407885:	in     eax,0xd7
  407887:	mov    al,ds:0xa17f8d6a
  40788c:	dec    edx
  40788d:	mov    edx,0xcaaada2a
  407892:	mov    edx,0x22c54816
  407897:	and    eax,0xcbb52d09
  40789c:	mov    dl,0xa8
  40789e:	add    esi,DWORD PTR [edx+0x7a9e4418]
  4078a4:	shl    ah,1
  4078a6:	xor    al,BYTE PTR [edi+edx*2-0x22]
  4078aa:	out    0x16,eax
  4078ac:	cwde   
  4078ad:	jo     0x4078ca
  4078af:	leave  
  4078b0:	mov    dh,0xe9
  4078b2:	mov    ebp,ebx
  4078b4:	loopne 0x4078ab
  4078b6:	lds    ebp,FWORD PTR ds:0x65c2985
  4078bc:	ret    
  4078bd:	pop    ds
  4078be:	arpl   WORD PTR [edx],si
  4078c0:	arpl   WORD PTR ds:0xa2ea0aba,sp
  4078c6:	sar    BYTE PTR [ecx-0x74ee1a0d],1
  4078cc:	mov    esp,0x9130fd64
  4078d1:	xor    DWORD PTR [ecx+0x1506aa6f],ecx
  4078d7:	ror    BYTE PTR [ecx],cl
  4078d9:	mov    ds:0x7c182ac2,al
  4078de:	jmp    0x4078bc
  4078e0:	add    DWORD PTR [ebx-0x6253130a],0xffffffad
  4078e7:	mov    cl,0x48
  4078e9:	jl     0x407946
  4078eb:	add    al,0x24
  4078ed:	rcl    DWORD PTR [edi],cl
  4078ef:	jo     0x407890
  4078f1:	mov    eax,DWORD PTR [eax+0x70f7468b]
  4078f7:	sbb    ecx,edi
  4078f9:	fstp   DWORD PTR [ecx]
  4078fb:	jecxz  0x407969
  4078fd:	dec    esi
  4078fe:	in     eax,0x49
  407900:	mov    ch,BYTE PTR [ecx]
  407902:	or     BYTE PTR [ebx+0x4e],al
  407905:	js     0x4078b2
  407907:	ins    BYTE PTR es:[edi],dx
  407908:	into   
  407909:	push   ss
  40790a:	addr16 pushf 
  40790c:	pop    es
  40790d:	lea    edi,[edi]
  40790f:	mov    cl,0x73
  407911:	or     ah,ch
  407913:	cli    
  407914:	cmp    bh,ah
  407916:	ins    BYTE PTR es:[edi],dx
  407917:	pop    edx
  407918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407919:	(bad)  
  40791a:	enter  0x323e,0x40
  40791e:	and    eax,0x2956e6b
  407923:	stos   BYTE PTR es:[edi],al
  407924:	rcl    ebp,1
  407926:	(bad)  
  407927:	mov    esp,0x53ff4aff
  40792c:	pop    ds
  40792d:	daa    
  40792e:	test   DWORD PTR [ebx+0x6897b8b7],0x5e25f475
  407938:	stos   DWORD PTR es:[edi],eax
  407939:	mov    dl,0xe2
  40793b:	cmp    al,BYTE PTR [edx+0x5b1f3f8c]
  407941:	nop
  407942:	mov    eax,0xdb91ed8
  407947:	repz shl BYTE PTR [esi-0x2c],1
  40794b:	retf   
  40794c:	mov    ah,0xed
  40794e:	mov    edx,DWORD PTR [esi-0x73]
  407951:	add    BYTE PTR [ebp-0x7020446a],bh
  407957:	fld    DWORD PTR [ebp+0xa86ab16]
  40795d:	inc    eax
  40795e:	inc    eax
  40795f:	ja     0x40791e
  407961:	add    eax,DWORD PTR [edi-0x1e]
  407964:	jb     0x407916
  407966:	sbb    esi,edi
  407968:	mov    eax,0x807ae335
  40796d:	pop    edx
  40796e:	ror    BYTE PTR [esi+0x25],0x66
  407972:	in     al,0x72
  407974:	(bad)
  407979:	adc    ebx,esp
  40797b:	fisubr DWORD PTR [esi-0x98105b7]
  407981:	xchg   DWORD PTR [edi],esp
  407983:	retf   
  407984:	xlat   BYTE PTR ds:[ebx]
  407985:	inc    esi
  407986:	mov    edx,0x5f68da95
  40798b:	xchg   DWORD PTR [edi],edx
  40798d:	jns    0x4079b8
  40798f:	test   DWORD PTR [ebx-0x695f8cfa],0x7514fe51
  407999:	xchg   esi,eax
  40799a:	jp     0x407965
  40799c:	outs   dx,DWORD PTR ds:[esi]
  40799d:	mov    ah,0x84
  40799f:	xlat   BYTE PTR ds:[ebx]
  4079a0:	fsub   QWORD PTR [esi+0x3b]
  4079a3:	arpl   WORD PTR [eax+0x10094799],dx
  4079a9:	js     0x40794d
  4079ab:	adc    DWORD PTR [ecx+ecx*8],ebx
  4079ae:	mov    BYTE PTR [ebp+eiz*4+0xb],cl
  4079b2:	push   0x6132db85
  4079b7:	test   al,0x4c
  4079b9:	aas    
  4079ba:	mov    esi,0xe279a6c2
  4079bf:	push   edx
  4079c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c1:	in     eax,dx
  4079c2:	shr    BYTE PTR [ecx+0x1c15b1ad],cl
  4079c8:	adc    eax,0xd550e036
  4079cd:	jmp    0xe78e:0x357b9a61
  4079d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d5:	ficomp DWORD PTR [ecx+0x73]
  4079d8:	cwde   
  4079d9:	jo     0x40795c
  4079db:	cmp    ecx,DWORD PTR [esi+0x5685427d]
  4079e1:	inc    edx
  4079e2:	xor    DWORD PTR [eax],esi
  4079e4:	cmp    ah,bl
  4079e6:	push   edx
  4079e7:	xor    edi,ecx
  4079e9:	je     0x40798a
  4079eb:	in     eax,dx
  4079ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ed:	loop   0x4079e4
  4079ef:	jg     0x407a3d
  4079f1:	and    esi,esp
  4079f3:	outs   dx,BYTE PTR ds:[esi]
  4079f4:	cmp    al,0xc6
  4079f6:	repz push es
  4079f8:	(bad)  
  4079f9:	xchg   ebp,eax
  4079fa:	or     eax,0x7017e2f8
  4079ff:	jns    0x407a73
  407a01:	ins    BYTE PTR es:[edi],dx
  407a02:	mov    edx,0xd6c2ffda
  407a07:	rol    BYTE PTR [ebx+0x5f],cl
  407a0a:	iret   
  407a0b:	shl    dl,0xd3
  407a0e:	mov    esp,0x60a48af6
  407a13:	push   esi
  407a14:	das    
  407a15:	repnz call 0x73cf:0x5ef88ace
  407a1d:	jns    0x407a78
  407a1f:	out    0xa4,eax
  407a21:	mov    ebx,0xd5099e4b
  407a26:	pop    ebp
  407a27:	mov    ebx,0x3cc4c36c
  407a2c:	jns    0x407a57
  407a2e:	shl    BYTE PTR [esi-0x57],1
  407a31:	ins    DWORD PTR es:[edi],dx
  407a32:	jmp    0x6bd6cae6
  407a37:	mov    ebx,0x5716e9e9
  407a3c:	dec    ecx
  407a3d:	mov    ebp,0x6151bcb8
  407a42:	cmp    edi,DWORD PTR [edx+0x33]
  407a45:	out    dx,eax
  407a46:	or     DWORD PTR ds:0xc01ea063,ecx
  407a4c:	out    dx,eax
  407a4d:	sbb    al,0xf6
  407a4f:	test   eax,0x864cb305
  407a54:	add    BYTE PTR [ecx-0x15bc8761],al
  407a5a:	xchg   edx,eax
  407a5b:	das    
  407a5c:	enter  0x23c6,0x91
  407a60:	pop    eax
  407a61:	cmp    BYTE PTR [ebx+ebp*8+0x10aacd6a],dl
  407a68:	out    0xb9,al
  407a6a:	cmp    eax,0x23bb2b64
  407a6f:	xor    edx,edx
  407a71:	adc    DWORD PTR [ebp+0x35491814],0xffffffc5
  407a78:	ja     0x407a16
  407a7a:	jb     0x407a1d
  407a7c:	shr    BYTE PTR [edi+0x20],0x39
  407a80:	mov    edi,0xb8184822
  407a85:	in     al,dx
  407a86:	add    al,0xa0
  407a88:	hlt    
  407a89:	fimul  WORD PTR [esi-0x19]
  407a8c:	(bad)  
  407a8d:	rcl    edi,1
  407a8f:	or     al,0xcc
  407a91:	and    BYTE PTR [ebx],ch
  407a93:	jnp    0x407af4
  407a95:	clc    
  407a96:	xor    eax,DWORD PTR [edi-0x18]
  407a99:	test   al,0xfb
  407a9b:	and    al,0x80
  407a9d:	mov    edx,0xc8bcc620
  407aa2:	mov    esp,DWORD PTR [ebx-0x6b3a5251]
  407aa8:	jne    0x407a53
  407aaa:	fucom  st(2)
  407aac:	mov    eax,ds:0xf949d8d8
  407ab1:	mov    eax,0x1a87f2f8
  407ab6:	ins    BYTE PTR es:[edi],dx
  407ab7:	jmp    0xb138:0xbb06bb95
  407abe:	lods   eax,DWORD PTR gs:[si]
  407ac1:	dec    edx
  407ac2:	lock inc eax
  407ac4:	pop    ecx
  407ac5:	or     BYTE PTR [ecx-0x24],dh
  407ac8:	adc    DWORD PTR [ebx+0x43],edx
  407acb:	lahf   
  407acc:	adc    DWORD PTR [edx],edi
  407ace:	xor    DWORD PTR [ebp+0x48],0xc
  407ad2:	mov    ebx,0xfcaa60a2
  407ad7:	loope  0x407a87
  407ad9:	out    0x90,eax
  407adb:	fld    TBYTE PTR [edx-0x36]
  407ade:	scas   al,BYTE PTR es:[edi]
  407adf:	mov    DWORD PTR [ecx],esp
  407ae1:	inc    ecx
  407ae2:	out    0x12,eax
  407ae4:	scas   eax,DWORD PTR es:[edi]
  407ae5:	jo     0x407aa2
  407ae7:	dec    esp
  407ae8:	or     eax,0xb5cbf67f
  407aed:	inc    ecx
  407aee:	adc    ecx,esp
  407af0:	push   ebp
  407af1:	into   
  407af2:	or     eax,0x21d39196
  407af7:	or     BYTE PTR [ebp-0x61],cl
  407afa:	std    
  407afb:	mov    es,WORD PTR [ebx-0x72]
  407afe:	sub    bh,BYTE PTR [eax-0x676c015d]
  407b04:	outs   dx,DWORD PTR ds:[esi]
  407b05:	aaa    
  407b06:	cwde   
  407b07:	fist   DWORD PTR [ebp-0x36]
  407b0a:	jnp    0x407b5a
  407b0c:	sbb    BYTE PTR [ecx-0x28],cl
  407b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b10:	inc    ebx
  407b11:	adc    BYTE PTR [ebx+eax*4],bh
  407b14:	loopne 0x407b3c
  407b16:	push   es
  407b17:	cli    
  407b18:	add    BYTE PTR [ebx],al
  407b1a:	out    0x52,al
  407b1c:	sbb    esp,DWORD PTR [edi+ebx*2]
  407b1f:	jb     0x407b28
  407b21:	cs mov ch,0x5e
  407b24:	clc    
  407b25:	in     al,dx
  407b26:	cs lock xor eax,0xf453fa70
  407b2d:	or     ebx,DWORD PTR [eax+0xe]
  407b30:	or     al,0x38
  407b32:	shl    DWORD PTR [eax-0x2caec6c3],1
  407b38:	data16 sbb al,0x70
  407b3b:	push   eax
  407b3c:	cli    
  407b3d:	loope  0x407b54
  407b3f:	stc    
  407b40:	xchg   BYTE PTR [edi],ah
  407b42:	jmp    0xd26f:0x6f9c72fc
  407b49:	pop    ebx
  407b4a:	pusha  
  407b4b:	cs out 0x62,eax
  407b4e:	inc    DWORD PTR [ecx+eax*8+0x46]
  407b52:	inc    eax
  407b53:	xchg   ebx,eax
  407b54:	sar    edi,cl
  407b56:	mov    al,ds:0xec5a9b1f
  407b5b:	mov    ds:0x529ac66,eax
  407b60:	fisttp WORD PTR [ebx+ecx*2]
  407b63:	shl    DWORD PTR [esi+ebp*8+0x78],1
  407b67:	push   ds
  407b68:	out    0xe4,al
  407b6a:	cmc    
  407b6b:	fisub  WORD PTR [ecx+0x5a]
  407b6e:	jb     0x407b07
  407b70:	loopne 0x407b1a
  407b72:	sub    ch,BYTE PTR [edx-0x5d3f2508]
  407b78:	push   esi
  407b79:	mov    esi,0x71b30d50
  407b7e:	xchg   BYTE PTR [eax+edi*8+0x6],ah
  407b82:	add    cl,BYTE PTR [edx+0x1c]
  407b85:	sbb    dh,cl
  407b87:	in     al,0x1c
  407b89:	stc    
  407b8a:	lock std 
  407b8c:	add    ch,dl
  407b8e:	retf   0xd757
  407b91:	repz repnz out 0x94,al
  407b95:	adc    esi,ebx
  407b97:	sub    al,0xbd
  407b99:	mov    bl,ch
  407b9b:	loope  0x407b75
  407b9d:	jecxz  0x407bcf
  407b9f:	retf   
  407ba0:	out    dx,eax
  407ba1:	lahf   
  407ba2:	inc    ebp
  407ba3:	sahf   
  407ba4:	inc    eax
  407ba5:	(bad)  
  407ba6:	jb     0x407be0
  407ba8:	cdq    
  407ba9:	in     eax,dx
  407baa:	adc    dl,cl
  407bac:	sub    edi,DWORD PTR [esi+0x33]
  407baf:	imul   DWORD PTR [eax+0x7a029150]
  407bb5:	test   ecx,eax
  407bb7:	js     0x407c07
  407bb9:	jbe    0x407b58
  407bbb:	sbb    eax,0x439dcf07
  407bc0:	mov    ebx,0x2ab182ac
  407bc5:	test   DWORD PTR [ebx+0x71ca46aa],edx
  407bcb:	push   0xc3d28843
  407bd0:	jnp    0x407b9b
  407bd2:	call   0xb5491173
  407bd7:	mov    ebp,0x45195d98
  407bdc:	in     eax,0x5b
  407bde:	(bad)  
  407bdf:	out    0x39,eax
  407be1:	mov    ebx,0xbf7c2838
  407be6:	hlt    
  407be7:	push   es
  407be8:	adc    dh,cl
  407bea:	jbe    0x407c51
  407bec:	hlt    
  407bed:	add    al,0x20
  407bef:	xchg   ebp,eax
  407bf0:	dec    edi
  407bf1:	test   eax,0xb6fc6ca6
  407bf6:	pop    ds
  407bf7:	dec    esp
  407bf8:	ins    BYTE PTR es:[edi],dx
  407bf9:	retf   0x1e7
  407bfc:	pop    ecx
  407bfd:	aaa    
  407bfe:	or     DWORD PTR [eax+ebx*2-0x3cb8c093],esi
  407c05:	movlps QWORD PTR [edi-0x13],xmm7
  407c09:	xor    eax,0x1fab14f8
  407c0e:	xchg   DWORD PTR [edi+eax*1+0x68],ebp
  407c12:	enter  0x825c,0x61
  407c16:	cld    
  407c17:	push   ebp
  407c18:	mov    ah,0xab
  407c1a:	int3   
  407c1b:	push   ss
  407c1c:	adc    al,0x20
  407c1e:	sbb    al,0x5e
  407c20:	std    
  407c21:	mov    eax,ds:0x73e7255
  407c26:	fldcw  WORD PTR ds:0x91c5038a
  407c2c:	mov    ebx,0x1cc037c4
  407c31:	fwait
  407c32:	add    DWORD PTR [eax],eax
  407c34:	dec    esi
  407c35:	ret    0xd480
  407c38:	adc    eax,0x2d0cb3e0
  407c3d:	mov    edx,0x5a175ff3
  407c42:	adc    DWORD PTR [esp+eiz*4+0x792e8714],edx
  407c49:	mov    BYTE PTR [edi-0x6ba18288],cl
  407c4f:	push   0xffffffa1
  407c51:	jmp    0x407c60
  407c53:	pop    esi
  407c54:	dec    esi
  407c55:	(bad)  
  407c56:	jnp    0x407c66
  407c58:	push   esp
  407c59:	daa    
  407c5a:	xchg   DWORD PTR [edx-0x199ff6ad],ebp
  407c60:	retf   
  407c61:	pop    esi
  407c62:	iret   
  407c63:	jecxz  0x407ce4
  407c65:	cmp    dh,bl
  407c67:	iret   
  407c68:	fidiv  DWORD PTR [ecx]
  407c6a:	inc    edx
  407c6b:	adc    DWORD PTR [esi-0x6ad3c0eb],eax
  407c71:	mov    ds:0x5ceb1c56,al
  407c76:	adc    al,0x87
  407c78:	outs   dx,DWORD PTR ds:[esi]
  407c79:	xor    dl,BYTE PTR [bx+di+0x1f]
  407c7d:	jg     0x407c75
  407c7f:	jne    0x407c9e
  407c81:	cwde   
  407c82:	nop
  407c83:	xchg   DWORD PTR [edx],ecx
  407c85:	sbb    DWORD PTR [edx],esi
  407c87:	or     edi,DWORD PTR [edi]
  407c89:	jbe    0x407cbd
  407c8b:	mov    dh,0xed
  407c8d:	add    eax,0xc79a0554
  407c92:	inc    ecx
  407c93:	div    BYTE PTR ds:0x78e646e
  407c99:	inc    ebp
  407c9a:	fcomp  st(2)
  407c9c:	add    edi,DWORD PTR [edi]
  407c9e:	or     BYTE PTR [eax+eax*1-0x6e33a0c5],ah
  407ca5:	cs das 
  407ca7:	(bad)  
  407ca8:	cmp    BYTE PTR [edi-0x7e275248],ch
  407cae:	xor    DWORD PTR [edx-0x42],ecx
  407cb1:	push   edi
  407cb2:	adc    eax,0xa58ac8d7
  407cb7:	add    ebx,DWORD PTR ds:0xd5da8aa5
  407cbd:	outs   dx,DWORD PTR ds:[esi]
  407cbe:	cmp    ebx,DWORD PTR [esi+0x42]
  407cc1:	pop    edx
  407cc2:	or     dh,bh
  407cc4:	add    eax,0x3015a67f
  407cc9:	out    dx,al
  407cca:	dec    edi
  407ccb:	ss cwde 
  407ccd:	mov    BYTE PTR [ecx+0x2a756ee3],bh
  407cd3:	ret    0xc849
  407cd6:	in     eax,0x87
  407cd8:	mov    edx,DWORD PTR [bx+0x25b]
  407cdd:	jne    0x407c7a
  407cdf:	mov    ebx,DWORD PTR [esi]
  407ce1:	pop    es
  407ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce3:	addr16 adc eax,0x77a5d90e
  407ce9:	jb     0x407cd5
  407ceb:	outs   dx,BYTE PTR ds:[esi]
  407cec:	aaa    
  407ced:	and    esp,edx
  407cef:	xor    al,0xf0
  407cf1:	lods   eax,DWORD PTR ds:[esi]
  407cf2:	jnp    0x407cfe
  407cf4:	jp     0x407d16
  407cf6:	pushf  
  407cf7:	sub    edx,DWORD PTR [edi-0x20]
  407cfa:	mov    al,ds:0xbb52f0f2
  407cff:	jmp    0x8471:0xe27a020d
  407d06:	icebp  
  407d07:	sub    BYTE PTR [ebx+0x18],cl
  407d0a:	or     eax,ecx
  407d0c:	cmp    DWORD PTR [ebp-0x3c],esp
  407d0f:	inc    edi
  407d10:	mov    al,0xfc
  407d12:	icebp  
  407d13:	cli    
  407d14:	or     esp,esi
  407d16:	xor    cl,cl
  407d18:	stos   DWORD PTR es:[edi],eax
  407d19:	xor    DWORD PTR [ecx],edi
  407d1b:	mov    esp,0xefed48e7
  407d20:	mov    dl,0x99
  407d22:	out    dx,eax
  407d23:	mov    edi,0xb0c2af02
  407d28:	mov    ecx,0x5cd2d7bd
  407d2d:	pop    edi
  407d2e:	rcl    bh,1
  407d30:	scas   al,BYTE PTR es:[edi]
  407d31:	xor    edi,esi
  407d33:	(bad)  [esi+0x4481f70a]
  407d39:	iret   
  407d3a:	sbb    BYTE PTR [esp+ebp*4-0x2c],0xae
  407d3f:	fsub   QWORD PTR [esi-0x56]
  407d42:	sbb    DWORD PTR [edx+0x32],ebx
  407d45:	popf   
  407d46:	clc    
  407d47:	mov    al,0xf
  407d49:	call   0x897:0x5c78966
  407d50:	pop    edi
  407d51:	in     eax,0x19
  407d53:	ss xor eax,0xde92ef84
  407d59:	add    BYTE PTR [edi+0x71],dh
  407d5c:	lea    eax,[esi]
  407d5e:	in     eax,dx
  407d5f:	test   eax,0xc347e890
  407d64:	ins    DWORD PTR es:[edi],dx
  407d65:	in     al,dx
  407d66:	add    DWORD PTR [ecx+0x103c0c79],ebp
  407d6c:	imul   ebx,eax,0xffffffff
  407d6f:	rcl    BYTE PTR [edi+0x4c288047],cl
  407d75:	mov    esi,0x4780830a
  407d7a:	mov    eax,ds:0xdde2f463
  407d7f:	push   ebp
  407d80:	mov    eax,0xd93ef3da
  407d85:	jecxz  0x407d83
  407d87:	inc    edi
  407d88:	int3   
  407d89:	mov    esi,0xbfb408b3
  407d8e:	fimul  DWORD PTR [ebp+0x47]
  407d91:	in     eax,dx
  407d92:	into   
  407d93:	mov    dl,BYTE PTR [edi+0x69]
  407d96:	test   eax,0x193bc1a
  407d9b:	or     eax,0xd3631553
  407da0:	ins    DWORD PTR es:[edi],dx
  407da1:	sbb    ah,bl
  407da3:	shr    esi,cl
  407da5:	add    al,0xc8
  407da7:	xchg   edx,eax
  407da8:	scas   eax,DWORD PTR es:[edi]
  407da9:	mov    edx,DWORD PTR [eax-0x31]
  407dac:	sbb    esi,DWORD PTR [eax+0x45]
  407daf:	jbe    0x407e2f
  407db1:	aas    
  407db2:	js     0x407d64
  407db4:	push   ss
  407db5:	shl    esp,1
  407db7:	std    
  407db8:	mov    ch,0x2
  407dba:	mov    ?,WORD PTR [ebp-0x6dfccc96]
  407dc0:	clc    
  407dc1:	xor    ebx,DWORD PTR [esi]
  407dc3:	lgdtd  [esp+ecx*8+0x49]
  407dc8:	xchg   edx,eax
  407dc9:	mov    ecx,0xeef8d20a
  407dce:	fsub   DWORD PTR [ebp-0x8]
  407dd1:	and    esi,DWORD PTR [edx]
  407dd3:	js     0x407d55
  407dd5:	sbb    eax,0x4468583d
  407dda:	popa   
  407ddb:	aas    
  407ddc:	xor    BYTE PTR [ebx+eax*4],bl
  407ddf:	xchg   ebp,eax
  407de0:	daa    
  407de1:	mov    esi,DWORD PTR [eax-0x65ba4df2]
  407de7:	fstp   TBYTE PTR [edi]
  407de9:	imul   eax,DWORD PTR [edx-0x73349fc5],0x618e28b
  407df3:	(bad)  
  407df4:	jmp    eax
  407df6:	mov    edx,edx
  407df8:	outs   dx,DWORD PTR ds:[esi]
  407df9:	dec    ebp
  407dfa:	setae  BYTE PTR [esi+0x77]
  407dfe:	daa    
  407dff:	xchg   esp,eax
  407e00:	cmp    eax,0x9241577e
  407e05:	and    edi,0xffffff99
  407e08:	in     eax,dx
  407e09:	adc    dh,dh
  407e0b:	int    0xa
  407e0d:	push   ss
  407e0e:	xchg   esi,eax
  407e0f:	not    BYTE PTR [edi+eax*4]
  407e12:	mov    al,ds:0x6c832aa7
  407e17:	adc    al,0x9
  407e19:	and    eax,0x8173655d
  407e1e:	xchg   ebx,eax
  407e1f:	dec    edx
  407e20:	mov    esp,0x2f3e91c2
  407e25:	jb     0x407e70
  407e27:	add    ch,BYTE PTR [edx+0x69]
  407e2a:	bound  edi,QWORD PTR [ebx]
  407e2c:	loop   0x407e2a
  407e2e:	test   eax,0x31b367a9
  407e33:	adc    DWORD PTR [ebp+0x728d1113],ebp
  407e39:	pop    ss
  407e3a:	pop    ds
  407e3b:	outs   dx,BYTE PTR ds:[esi]
  407e3c:	retf   
  407e3d:	jecxz  0x407e50
  407e3f:	cld    
  407e40:	inc    ecx
  407e41:	dec    esi
  407e42:	mov    edi,0x350d86a6
  407e47:	pop    esi
  407e48:	sub    edx,DWORD PTR [edx+0x3f]
  407e4b:	loope  0x407dfe
  407e4d:	mov    cl,0xdc
  407e4f:	xchg   edi,eax
  407e50:	jmp    0x407ddf
  407e52:	je     0x407e73
  407e54:	push   ds
  407e55:	xchg   ebp,eax
  407e56:	outs   dx,BYTE PTR ds:[esi]
  407e57:	push   ds
  407e58:	pop    es
  407e59:	or     eax,0x3dce04a3
  407e5e:	and    edi,DWORD PTR [ebp+0x7f883dd3]
  407e64:	xchg   ebx,eax
  407e65:	xchg   ebp,eax
  407e66:	fdiv   QWORD PTR [ebx+0x4]
  407e69:	rcr    BYTE PTR [ecx+0x67],1
  407e6c:	mov    cl,0xdf
  407e6e:	loop   0x407ec9
  407e70:	mov    dh,0x62
  407e72:	mov    WORD PTR [eax*8+0x488d7316],ds
  407e79:	jnp    0x407ee7
  407e7b:	inc    ebp
  407e7c:	cmp    al,BYTE PTR [eax-0x13]
  407e7f:	aaa    
  407e80:	jge    0x407efd
  407e82:	mov    ebx,0xf753e489
  407e87:	outs   dx,DWORD PTR ds:[esi]
  407e88:	or     dl,bh
  407e8a:	popf   
  407e8b:	aad    0x4
  407e8d:	or     esi,DWORD PTR [ebx]
  407e8f:	cli    
  407e90:	jecxz  0x407e6a
  407e92:	bound  ebx,QWORD PTR [edi+ebx*8-0x46]
  407e96:	sbb    bl,al
  407e98:	popa   
  407e99:	xchg   ebx,eax
  407e9a:	je     0x407ef4
  407e9c:	dec    edx
  407e9d:	daa    
  407e9e:	inc    ecx
  407e9f:	push   0xffffffdc
  407ea1:	int    0x78
  407ea3:	scas   eax,DWORD PTR es:[edi]
  407ea4:	out    dx,al
  407ea5:	repnz push esi
  407ea7:	ins    BYTE PTR es:[edi],dx
  407ea8:	push   edx
  407ea9:	ins    BYTE PTR es:[edi],dx
  407eaa:	add    eax,0xdc9ee04
  407eaf:	sahf   
  407eb0:	dec    eax
  407eb1:	rcr    bh,cl
  407eb3:	dec    ecx
  407eb4:	mov    edi,DWORD PTR [ebx+0x7]
  407eb7:	jge    0x407ed9
  407eb9:	jg     0x407f2c
  407ebb:	mov    cl,0x85
  407ebd:	adc    BYTE PTR [ebx-0x3d],al
  407ec0:	shr    dl,cl
  407ec2:	call   0xaabad228
  407ec7:	and    ch,BYTE PTR [ecx]
  407ec9:	cmp    al,0x47
  407ecb:	retf   0xde6f
  407ece:	sbb    ch,al
  407ed0:	mov    ebx,0xdcb81f49
  407ed5:	mov    cl,0xd8
  407ed7:	test   eax,0xb7519e13
  407edc:	dec    esi
  407edd:	xchg   esi,eax
  407ede:	fdiv   st,st(3)
  407ee0:	sbb    BYTE PTR [ecx],bh
  407ee2:	mov    ds:0x43deeeb9,al
  407ee7:	and    ebp,DWORD PTR ds:0x6875cd8c
  407eed:	ss out 0xdf,al
  407ef0:	jnp    0x407f52
  407ef2:	jmp    0xee1ab4f3
  407ef7:	jnp    0x407eeb
  407ef9:	xor    BYTE PTR [ecx-0x7a6042a1],ch
  407eff:	lea    ebp,[edx-0x2]
  407f02:	sub    DWORD PTR [ecx+0x60e444c6],ecx
  407f08:	xchg   ebx,eax
  407f09:	jb     0x407ecb
  407f0b:	mov    ebp,0x3365651
  407f10:	imul   ebp,DWORD PTR [ebx-0x50],0x9a865d24
  407f17:	or     bh,dl
  407f19:	jle    0x407f70
  407f1b:	ss sahf 
  407f1d:	scas   al,BYTE PTR es:[edi]
  407f1e:	scas   al,BYTE PTR es:[edi]
  407f1f:	jp     0x407f0e
  407f21:	xor    eax,DWORD PTR [ebp-0x72]
  407f24:	pop    es
  407f25:	mov    cl,0x6d
  407f27:	(bad)  
  407f28:	out    0x83,al
  407f2a:	mov    ds:0x25847a75,eax
  407f2f:	mov    dl,0x6e
  407f31:	inc    BYTE PTR [ebx+edi*2]
  407f34:	std    
  407f35:	inc    esp
  407f36:	dec    DWORD PTR [edx-0x80]
  407f39:	adc    bh,BYTE PTR ds:[ecx-0x56c7afce]
  407f40:	dec    ebx
  407f41:	fdivr  st(2),st
  407f43:	xor    dl,BYTE PTR [ebx+eax*1]
  407f46:	lds    esp,FWORD PTR [eax+edi*4]
  407f49:	mov    ebp,0xb507d547
  407f4e:	inc    esi
  407f4f:	jmp    0x407fb2
  407f51:	push   esp
  407f52:	ss out 0xfc,eax
  407f55:	call   FWORD PTR [edx-0x44a8c79a]
  407f5b:	cmp    BYTE PTR [eax-0x63187c18],bl
  407f61:	rcr    DWORD PTR [ecx],cl
  407f63:	repz imul edi,DWORD PTR [edx+0x57b08a23],0x1a
  407f6b:	sub    ebx,edi
  407f6d:	cmp    eax,0x65cd8e3e
  407f72:	lods   eax,DWORD PTR ds:[esi]
  407f73:	fstp   QWORD PTR [edx+0x50]
  407f76:	xchg   esi,eax
  407f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f78:	rcr    BYTE PTR [eax],cl
  407f7a:	inc    edi
  407f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f7c:	or     ch,BYTE PTR [esi]
  407f7e:	mov    al,ds:0x60c495b3
  407f83:	pminsw mm1,mm0
  407f86:	leave  
  407f87:	rcl    DWORD PTR [ebx+esi*8-0x27],0xac
  407f8c:	cmc    
  407f8d:	sti    
  407f8e:	bound  eax,QWORD PTR [edx-0x7823b49a]
  407f94:	cld    
  407f95:	sub    DWORD PTR [ebx+eax*1-0x2b40765a],eax
  407f9c:	cwde   
  407f9d:	or     al,0xa8
  407f9f:	fisub  DWORD PTR [eax+0x55]
  407fa2:	jmp    0x87941730
  407fa7:	or     ch,al
  407fa9:	leave  
  407faa:	mov    edi,0x44cbb7e7
  407faf:	lods   al,BYTE PTR ds:[esi]
  407fb0:	mov    bl,0x38
  407fb2:	ins    DWORD PTR es:[edi],dx
  407fb3:	or     dh,ch
  407fb5:	rol    BYTE PTR [edi+0x3a44be43],cl
  407fbb:	dec    ebp
  407fbc:	lea    edi,[ebp+0xf6b3806]
  407fc2:	inc    ecx
  407fc3:	stos   BYTE PTR es:[edi],al
  407fc4:	popf   
  407fc5:	inc    esp
  407fc6:	iret   
  407fc7:	into   
  407fc8:	add    al,0x2c
  407fca:	add    al,0x3
  407fcc:	(bad)  
  407fcd:	xchg   ebp,eax
  407fce:	ja     0x407f5c
  407fd0:	(bad)  
  407fd1:	xchg   esi,eax
  407fd2:	std    
  407fd3:	pop    esp
  407fd4:	out    0xe3,eax
  407fd6:	jle    0x407f8c
  407fd8:	lods   eax,DWORD PTR ds:[esi]
  407fd9:	icebp  
  407fda:	nop
  407fdb:	popa   
  407fdc:	mov    esi,0x283dd50c
  407fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fe2:	add    ah,BYTE PTR [ebx+0x60]
  407fe5:	xor    esp,DWORD PTR [eax]
  407fe7:	adc    al,0x31
  407fe9:	jle    0x408022
  407feb:	shr    DWORD PTR [edi+0x16ee0cc7],cl
  407ff1:	mov    ch,0xd
  407ff3:	push   cs
  407ff4:	cmp    DWORD PTR [ebp-0x6f],eax
  407ff7:	sub    eax,esp
  407ff9:	adc    al,0x7f
  407ffb:	cmp    eax,0xad778518
  408000:	aas    
  408001:	scas   al,BYTE PTR es:[edi]
  408002:	aaa    
  408003:	jl     0x407fa9
  408005:	xor    al,0x31
  408007:	ins    BYTE PTR es:[edi],dx
  408008:	(bad)  
  408009:	or     dl,BYTE PTR [si+0x4c]
  40800d:	into   
  40800e:	loop   0x408010
  408010:	(bad)  
  408011:	pop    eax
  408012:	mov    ebp,0xe5ec62c8
  408017:	data16 icebp 
  408019:	lds    edi,FWORD PTR ds:0x764f18f
  40801f:	pushw  cs
  408021:	and    al,0xd2
  408023:	mov    ds:0x9759b0b3,eax
  408028:	out    dx,eax
  408029:	imul   ebp,esp,0x2138e2fb
  40802f:	retf   
  408030:	test   esp,esi
  408032:	loopne 0x40807e
  408034:	icebp  
  408035:	mov    eax,ds:0xceb40ef6
  40803a:	sub    esi,DWORD PTR [ebx-0x743c0825]
  408040:	jae    0x408082
  408042:	cwde   
  408043:	mov    ecx,0xb8dd6356
  408048:	pop    ds
  408049:	push   esi
  40804a:	add    al,0x2f
  40804c:	out    0xd1,al
  40804e:	inc    esp
  40804f:	loopne 0x407fe2
  408051:	retf   0xd2f3
  408054:	xor    edx,esp
  408056:	push   esi
  408057:	dec    esi
  408058:	dec    edi
  408059:	(bad)  
  40805b:	fdiv   QWORD PTR [eax-0x4c]
  40805e:	nop
  40805f:	pop    es
  408060:	or     bh,dl
  408062:	dec    edi
  408063:	pop    ebp
  408064:	push   esi
  408065:	push   ss
  408066:	push   cs
  408067:	cmp    edi,DWORD PTR [edi+0x7b43e0f2]
  40806d:	jmp    0x408011
  40806f:	pop    edi
  408070:	dec    edx
  408071:	sub    DWORD PTR [ebp-0x464ae6d1],ebx
  408077:	addr16 in al,0x57
  40807a:	mov    al,ds:0x64e9807a
  40807f:	inc    edi
  408080:	outs   dx,BYTE PTR ds:[esi]
  408081:	adc    edi,DWORD PTR [eax+esi*8+0x7b]
  408085:	rol    ebx,1
  408087:	push   ebp
  408088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408089:	mov    esp,0xa59930e3
  40808e:	mov    esp,0x196bc239
  408093:	xor    ebx,DWORD PTR [ecx-0x6371fa54]
  408099:	call   0x2850bcf0
  40809e:	or     al,0x2a
  4080a0:	out    dx,eax
  4080a1:	xchg   DWORD PTR [ecx-0x47938c6],ebx
  4080a7:	jl     0x4080d2
  4080a9:	mov    ebp,0x157d84d8
  4080ae:	lods   al,BYTE PTR ds:[esi]
  4080af:	inc    esp
  4080b0:	ins    DWORD PTR es:[edi],dx
  4080b1:	imul   edx,ebx,0x64
  4080b4:	jo     0x4080fa
  4080b6:	inc    ecx
  4080b7:	sub    DWORD PTR [esp+ecx*1],edi
  4080ba:	sahf   
  4080bb:	mov    edi,0x99056b
  4080c0:	jo     0x40805a
  4080c2:	call   0x8eee:0xc6a68b68
  4080c9:	in     al,0xb7
  4080cb:	out    dx,eax
  4080cc:	es dec edx
  4080ce:	sub    ch,cl
  4080d0:	fisttp WORD PTR [ebx+eiz*2]
  4080d3:	or     DWORD PTR [ebp-0x35],edi
  4080d6:	mov    edi,0xd9c22541
  4080db:	dec    edi
  4080dc:	sub    DWORD PTR [eax],ecx
  4080de:	cmp    al,0x8d
  4080e0:	pop    esi
  4080e1:	pusha  
  4080e2:	xor    al,cl
  4080e4:	xor    eax,0xd9e1541e
  4080e9:	xor    al,0x66
  4080eb:	jo     0x4080f9
  4080ed:	imul   ebp,edi,0x65854718
  4080f3:	and    edi,esi
  4080f5:	pop    ds
  4080f6:	jns    0x4080d4
  4080f8:	xchg   edi,eax
  4080f9:	lods   al,BYTE PTR ds:[esi]
  4080fa:	das    
  4080fb:	fdivr  st(6),st
  4080fd:	xchg   edi,eax
  4080fe:	lea    ebp,[edi+0x7df84e04]
  408104:	or     dh,BYTE PTR [ebp+0x10]
  408107:	or     DWORD PTR fs:[eax+0x25],ebx
  40810b:	fs gs jecxz 0x4080e9
  40810f:	or     ebp,DWORD PTR [eax-0x3948297e]
  408115:	xor    dl,bh
  408117:	mov    dl,0x6d
  408119:	push   eax
  40811a:	outs   dx,DWORD PTR ds:[esi]
  40811b:	inc    ebp
  40811c:	xor    ecx,esp
  40811e:	test   BYTE PTR [edi+0x20],0x89
  408122:	lods   al,BYTE PTR ds:[esi]
  408123:	push   ecx
  408124:	mov    bl,0xb9
  408126:	add    BYTE PTR [edx-0x43],al
  408129:	inc    esp
  40812a:	push   ds
  40812b:	(bad)  
  40812c:	mov    ch,0xcc
  40812e:	inc    esi
  40812f:	out    dx,al
  408130:	lods   al,BYTE PTR ds:[esi]
  408131:	ja     0x4081b1
  408133:	xchg   BYTE PTR [edx+0x58],dh
  408136:	xchg   ecx,eax
  408137:	repz inc ebp
  408139:	inc    eax
  40813a:	dec    DWORD PTR [edx]
  40813c:	aas    
  40813d:	(bad)  
  40813e:	test   BYTE PTR [esi],0x52
  408141:	xchg   esp,eax
  408142:	ja     0x40819e
  408144:	imul   edx,DWORD PTR [eax],0xc931a507
  40814a:	inc    edi
  40814b:	test   DWORD PTR [ecx-0x20],ebx
  40814e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40814f:	add    eax,DWORD PTR ss:[edi+0x1]
  408153:	ja     0x408125
  408155:	cli    
  408156:	pop    ds
  408157:	mov    bl,0xb6
  408159:	cmc    
  40815a:	inc    ecx
  40815b:	in     al,0x3b
  40815d:	sbb    BYTE PTR [eax+0x63],ah
  408160:	mov    edx,0xedc419f6
  408165:	out    0xb,eax
  408167:	cmp    BYTE PTR [edi+0x28],0x8e
  40816b:	push   cs
  40816c:	mov    WORD PTR [edx],ss
  40816e:	ins    BYTE PTR es:[edi],dx
  40816f:	push   esi
  408170:	jb     0x4081d5
  408172:	xchg   edi,eax
  408173:	shl    BYTE PTR [ecx],0x71
  408176:	fimul  WORD PTR [ecx]
  408178:	into   
  408179:	mul    BYTE PTR [ecx-0x71129efd]
  40817f:	push   0x7a
  408181:	jge    0x4081f1
  408183:	popa   
  408184:	outs   dx,DWORD PTR ds:[esi]
  408185:	in     eax,0x5
  408187:	(bad)  
  408188:	ds rcl DWORD PTR gs:[ecx-0x38],1
  40818d:	fdiv   st,st(5)
  40818f:	aad    0x7f
  408191:	mov    ah,0x4a
  408193:	aad    0xdd
  408195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408196:	mov    edi,0x58da0a54
  40819b:	xor    BYTE PTR [edi-0x50f71005],0x32
  4081a2:	adc    BYTE PTR [ebx-0x52],cl
  4081a5:	jecxz  0x40818a
  4081a7:	stos   BYTE PTR es:[edi],al
  4081a8:	les    esi,FWORD PTR [esi+0x33]
  4081ab:	stos   DWORD PTR es:[edi],eax
  4081ac:	add    BYTE PTR [esi],bh
  4081ae:	loop   0x408130
  4081b0:	and    esi,ebp
  4081b2:	scas   eax,DWORD PTR es:[edi]
  4081b3:	fcom   DWORD PTR [ebp+0x5c]
  4081b6:	imul   ebx,DWORD PTR [ecx+0x73],0xefa8c472
  4081bd:	push   0x5799c5d3
  4081c2:	aas    
  4081c3:	ins    DWORD PTR es:[edi],dx
  4081c4:	cmp    DWORD PTR [ecx+0x7f35a054],0x32350072
  4081ce:	lods   eax,DWORD PTR ds:[esi]
  4081cf:	jae    0x408153
  4081d1:	add    DWORD PTR [edx-0x3d],esp
  4081d4:	stos   BYTE PTR es:[edi],al
  4081d5:	out    0x7b,al
  4081d7:	sbb    al,0x5
  4081d9:	mov    al,ds:0x61456998
  4081de:	and    eax,0xeec1bf76
  4081e3:	rol    BYTE PTR [eax],0x56
  4081e6:	push   0xffffffdc
  4081e8:	jns    0x4081ee
  4081ea:	sub    edx,esi
  4081ec:	mov    bl,0x8b
  4081ee:	std    
  4081ef:	aas    
  4081f0:	dec    edi
  4081f1:	pop    ecx
  4081f2:	mov    bh,0x4d
  4081f4:	fst    QWORD PTR [ebx-0x6ef0fb97]
  4081fa:	rcr    bl,cl
  4081fc:	or     BYTE PTR [esi+0x50],0x77
  408200:	add    eax,0xabd09373
  408205:	out    0x37,eax
  408207:	pop    ebx
  408208:	sub    al,0x1
  40820a:	xor    BYTE PTR [ebp+0x68d6bc19],0x9f
  408211:	sar    DWORD PTR [edi-0x2f],0xee
  408215:	(bad)  
  408217:	rcr    ch,cl
  408219:	push   ecx
  40821a:	retf   
  40821b:	mov    al,0xdc
  40821d:	xor    DWORD PTR [ebx],esp
  40821f:	xchg   edx,eax
  408220:	sub    edi,DWORD PTR [ebx]
  408222:	shl    DWORD PTR [edi+0x52],0x9b
  408226:	test   esp,0xcd34c3ff
  40822c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822d:	and    esp,DWORD PTR [edx+0x41ad1004]
  408233:	test   BYTE PTR [ebx-0x4dd9aed5],bh
  408239:	add    eax,0xb19d1f9a
  40823e:	test   edx,edi
  408240:	or     ebx,DWORD PTR [ecx+0x4c]
  408243:	or     ch,BYTE PTR [edi]
  408245:	sub    eax,DWORD PTR [esi]
  408247:	jno    0x408246
  408249:	mov    dh,0x80
  40824b:	mov    cl,0x6
  40824d:	push   cs
  40824e:	adc    ch,BYTE PTR [edi-0x285a5f21]
  408254:	xor    ebx,edi
  408256:	adc    dh,BYTE PTR [ecx+0x1d]
  408259:	(bad)  
  40825a:	fucomi st,st(5)
  40825c:	lods   al,BYTE PTR ds:[esi]
  40825d:	or     ebp,DWORD PTR [edx+0x29d9d618]
  408263:	push   edx
  408264:	aam    0x7
  408266:	push   es
  408267:	cdq    
  408268:	cmp    bh,cl
  40826a:	inc    ecx
  40826b:	xchg   ebx,eax
  40826c:	loop   0x408280
  40826e:	cld    
  40826f:	xchg   ecx,eax
  408270:	imul   ecx,DWORD PTR [edx+ecx*1+0xd],0x65
  408275:	pop    esp
  408276:	jge    0x408203
  408278:	or     DWORD PTR [ebx-0x4c9ed19d],esp
  40827e:	int3   
  40827f:	inc    eax
  408280:	frstor [eax-0x6eaf4624]
  408286:	scas   eax,DWORD PTR es:[edi]
  408287:	daa    
  408288:	mov    eax,0x77546ef4
  40828d:	cmp    ecx,esi
  40828f:	div    esp
  408291:	sbb    edx,eax
  408293:	outs   dx,DWORD PTR ds:[esi]
  408294:	mov    BYTE PTR [edx+0x34],dh
  408297:	lahf   
  408298:	pop    ecx
  408299:	inc    edi
  40829a:	adc    BYTE PTR [esi+edx*2],dl
  40829d:	dec    ebx
  40829f:	inc    edx
  4082a0:	fst    QWORD PTR [ebx]
  4082a2:	je     0x40823d
  4082a4:	pop    ecx
  4082a5:	arpl   WORD PTR [eax],si
  4082a7:	adc    al,0x88
  4082a9:	sub    ecx,edi
  4082ab:	mov    ecx,0x90057008
  4082b0:	add    dl,BYTE PTR [edx]
  4082b2:	stos   BYTE PTR es:[edi],al
  4082b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b4:	fst    QWORD PTR [ebx-0x626676fc]
  4082ba:	or     al,0x21
  4082bc:	cmp    ebp,esp
  4082be:	xor    DWORD PTR [ebx],eax
  4082c0:	inc    esi
  4082c1:	ja     0x408248
  4082c3:	std    
  4082c4:	pop    eax
  4082c5:	sub    eax,DWORD PTR [ebp-0x10]
  4082c8:	pop    eax
  4082c9:	mov    bl,0x1f
  4082cb:	retfw  0xbcb8
  4082cf:	mov    esi,0x13af3dec
  4082d4:	cmc    
  4082d5:	adc    ah,al
  4082d7:	jmp    0x408336
  4082d9:	retf   0xedd5
  4082dc:	lahf   
  4082dd:	int    0xbb
  4082df:	and    eax,0xb348d0fb
  4082e4:	pop    ebp
  4082e5:	or     esp,DWORD PTR [ebx]
  4082e7:	out    0x98,al
  4082e9:	mov    al,0x87
  4082eb:	push   esi
  4082ec:	pop    ss
  4082ed:	pusha  
  4082ee:	addr16 mov ds:0x8ffc,al
  4082f2:	cli    
  4082f3:	leave  
  4082f4:	lods   al,BYTE PTR ds:[esi]
  4082f5:	pop    es
  4082f6:	jmp    DWORD PTR [ecx+0x2e]
  4082f9:	and    edx,ebx
  4082fb:	dec    ebx
  4082fc:	xor    DWORD PTR [edi],0xd67ea5b7
  408302:	daa    
  408303:	cmp    al,0xa9
  408305:	mov    dh,0x99
  408307:	pushf  
  408308:	mov    dh,0x10
  40830a:	mov    eax,0x177f7260
  40830f:	jecxz  0x408293
  408311:	dec    edi
  408312:	push   cs
  408313:	push   esp
  408314:	div    BYTE PTR [eax-0x2]
  408317:	ror    BYTE PTR [esi-0x5d],0xb6
  40831b:	aas    
  40831c:	push   ebp
  40831d:	icebp  
  40831e:	arpl   WORD PTR [esi-0xf112fd3],ax
  408324:	and    DWORD PTR [edx],eax
  408326:	mov    esp,0x79b79c75
  40832b:	nop
  40832c:	loope  0x4082fa
  40832e:	(bad)  
  40832f:	lock repnz ins DWORD PTR es:[edi],dx
  408332:	push   ds
  408333:	ror    DWORD PTR [ebp-0x22c24cfa],cl
  408339:	sub    al,0x76
  40833b:	data16 cmp BYTE PTR [edi-0x4f538f2f],0x92
  408343:	sti    
  408344:	xchg   edi,eax
  408345:	loope  0x408343
  408347:	xchg   DWORD PTR [eax+0x7c],eax
  40834a:	fcmovb st,st(3)
  40834c:	lods   al,BYTE PTR ds:[esi]
  40834d:	jecxz  0x408346
  40834f:	jb     0x4082db
  408351:	xchg   edx,eax
  408352:	loope  0x4083bf
  408354:	imul   ecx,DWORD PTR [edi-0x1c0924f5],0xffffff9b
  40835b:	mov    ebx,0x5b17837f
  408360:	sahf   
  408361:	shl    DWORD PTR [ebp+0x49],1
  408364:	pop    esp
  408365:	imul   edi,DWORD PTR [ecx],0xffffffe9
  408368:	mov    WORD PTR [ebp+ebp*2+0x40],fs
  40836c:	iret   
  40836d:	jbe    0x40839b
  40836f:	ror    DWORD PTR [ecx-0x5b8ff038],1
  408375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408376:	jl     0x4083eb
  408378:	adc    eax,0x867c95df
  40837d:	pop    edx
  40837e:	dec    esi
  40837f:	retf   
  408380:	and    eax,0x68c85bd0
  408385:	out    dx,al
  408386:	fstp   TBYTE PTR [ecx+0x5a442c41]
  40838c:	jmp    0xac05:0x88912923
  408393:	mov    ebp,0x314ab703
  408398:	adc    DWORD PTR [eax+0x2d19c3e2],edx
  40839e:	dec    edx
  40839f:	or     DWORD PTR [edx-0x7635fd0d],esi
  4083a5:	inc    ecx
  4083a6:	sbb    BYTE PTR [eax],ch
  4083a8:	imul   ebp,esi,0x46d3d6df
  4083ae:	sar    DWORD PTR [esi],1
  4083b0:	repz ss push ss
  4083b3:	mov    edi,0xa230687
  4083b8:	mov    dh,0x19
  4083ba:	aas    
  4083bb:	retf   
  4083bc:	inc    esp
  4083bd:	fsubr  DWORD PTR [ecx+0x1d2eb264]
  4083c3:	mov    edx,0xf0ab9d4a
  4083c8:	add    cl,BYTE PTR [ebp-0x2342668b]
  4083ce:	(bad)  [edi-0x1e]
  4083d1:	cmc    
  4083d2:	dec    edi
  4083d3:	out    0x15,al
  4083d5:	sbb    ebp,DWORD PTR [ebp-0x6a]
  4083d8:	xor    dh,BYTE PTR [esi-0x28c74a96]
  4083de:	call   0x5b2e29fa
  4083e3:	(bad)
  4083e7:	jecxz  0x408409
  4083e9:	inc    edx
  4083ea:	into   
  4083eb:	packuswb mm7,mm3
  4083ee:	aam    0x43
  4083f0:	sub    eax,0x6932736d
  4083f5:	out    dx,eax
  4083f6:	repnz scas al,BYTE PTR es:[edi]
  4083f8:	xor    DWORD PTR [ebx-0x7e],esp
  4083fb:	sbb    eax,0x6d239167
  408400:	aaa    
  408401:	add    BYTE PTR [ebx-0x1c],ch
  408404:	outs   dx,BYTE PTR ds:[esi]
  408405:	mov    bh,0x73
  408407:	lods   eax,DWORD PTR ds:[esi]
  408408:	mov    ebp,DWORD PTR [eax+0x35511eb5]
  40840e:	push   ecx
  40840f:	stos   DWORD PTR es:[edi],eax
  408410:	xlat   BYTE PTR ds:[ebx]
  408411:	pop    esi
  408412:	add    ah,BYTE PTR [esi+edi*2-0x5edbb366]
  408419:	mov    ds:0x80b8dcab,eax
  40841e:	in     eax,dx
  40841f:	iret   
  408420:	jg     0x408461
  408422:	pop    ebx
  408423:	test   eax,0xbbfbd900
  408428:	mov    ds:0xf0c90267,eax
  40842d:	and    DWORD PTR [edx-0x7c],esp
  408430:	stc    
  408431:	xchg   esp,eax
  408432:	sub    eax,0x9f8a91c9
  408437:	mov    dh,0x82
  408439:	pop    esi
  40843a:	or     al,al
  40843c:	je     0x408451
  40843e:	inc    ecx
  40843f:	inc    edx
  408440:	pop    es
  408441:	cmp    eax,0x6592c97e
  408446:	outs   dx,BYTE PTR ds:[esi]
  408447:	test   eax,0x966997a8
  40844c:	sub    eax,0x3a9b24f1
  408451:	jns    0x40842f
  408453:	clc    
  408454:	lahf   
  408455:	int3   
  408456:	sub    DWORD PTR [edi+esi*4],0x7e33b0be
  40845d:	je     0x408436
  40845f:	cmp    esp,DWORD PTR [ebx-0x49f3f8e2]
  408465:	or     BYTE PTR [ecx+0x54b9ec83],al
  40846b:	retf   
  40846c:	cli    
  40846d:	into   
  40846e:	ret    
  40846f:	mov    ds,WORD PTR [edi+0xe]
  408472:	outs   dx,DWORD PTR ds:[esi]
  408473:	mov    eax,0xa1a81043
  408478:	push   esi
  408479:	repz and dh,BYTE PTR [esi-0x43e6dd53]
  408480:	gs lahf 
  408482:	xchg   ebp,eax
  408483:	pop    eax
  408484:	pop    esi
  408486:	outs   dx,DWORD PTR ds:[esi]
  408487:	and    al,0xaf
  408489:	adc    DWORD PTR [eax+0x72],eax
  40848c:	out    0x68,al
  40848e:	lods   al,BYTE PTR ds:[esi]
  40848f:	push   ds
  408490:	mov    BYTE PTR [esi],cl
  408492:	(bad)  
  408493:	in     al,0x2f
  408495:	jmp    0xa2bc:0x1de2
  40849b:	fist   DWORD PTR [edx+esi*4+0x8eecb94]
  4084a2:	inc    ebx
  4084a3:	mov    eax,0xd18280a2
  4084a8:	inc    eax
  4084a9:	jne    0x408480
  4084ab:	or     ebx,esp
  4084ad:	loopne 0x408494
  4084af:	scas   eax,DWORD PTR es:[edi]
  4084b0:	lea    ebp,[esi+0x400dff85]
  4084b6:	adc    BYTE PTR [edx-0x2d],bl
  4084b9:	mov    eax,ds:0x626b208c
  4084be:	es imul edi,edx,0xffffffbb
  4084c2:	pop    esi
  4084c3:	mov    bl,0x4d
  4084c5:	scas   eax,DWORD PTR es:[edi]
  4084c6:	out    dx,eax
  4084c7:	stos   DWORD PTR es:[edi],eax
  4084c8:	dec    esp
  4084c9:	and    DWORD PTR [ecx+esi*1],0x76
  4084cd:	push   0x6e30a2c1
  4084d2:	sbb    eax,DWORD PTR [eax+edi*2-0x28d9dcc7]
  4084d9:	stos   DWORD PTR es:[edi],eax
  4084da:	cmovle edx,edi
  4084dd:	aad    0x1d
  4084df:	xchg   ecx,eax
  4084e0:	out    dx,eax
  4084e1:	xchg   ecx,eax
  4084e2:	pop    ds
  4084e3:	pop    esi
  4084e4:	mov    ds:0xa807471d,al
  4084e9:	fs inc edx
  4084eb:	cmc    
  4084ec:	or     ebx,DWORD PTR [ebx+edi*4+0x53a2c1d]
  4084f3:	adc    eax,ebp
  4084f5:	shl    edi,0x3e
  4084f8:	xchg   edx,eax
  4084f9:	jno    0x408575
  4084fb:	adc    DWORD PTR es:[eax+ebp*4-0x48e0520a],0xbbf01bb4
  408507:	push   cs
  408508:	sub    cl,BYTE PTR [esi+0x61e2f7c8]
  40850e:	mov    ch,0xe8
  408510:	jo     0x40853d
  408512:	aaa    
  408513:	shr    DWORD PTR [edi-0x5f17205e],cl
  408519:	add    esi,esp
  40851b:	data16 stos BYTE PTR es:[edi],al
  40851d:	fst    DWORD PTR [eax-0x4d]
  408520:	popf   
  408521:	ss adc eax,0x30363d8a
  408527:	sbb    BYTE PTR [eax+0x3b5bab7c],0x83
  40852e:	imul   BYTE PTR ds:0x95ca401b
  408534:	lds    edi,FWORD PTR [eax]
  408536:	push   eax
  408537:	retf   
  408538:	or     eax,0xc59796d
  40853d:	sbb    al,0xd2
  40853f:	sub    eax,edi
  408541:	std    
  408542:	nop
  408543:	aaa    
  408544:	mul    BYTE PTR [ebp+0x34]
  408547:	or     al,0xd3
  408549:	test   al,0xd3
  40854b:	repnz xchg edi,eax
  40854d:	cmp    al,0x5
  40854f:	bound  eax,QWORD PTR [ecx+0x7d81423d]
  408555:	mov    ch,0x28
  408557:	cmp    al,0x6a
  408559:	pop    ds
  40855a:	icebp  
  40855b:	xor    edx,DWORD PTR [esi]
  40855d:	jb     0x4084f7
  40855f:	mov    edi,0x6683df07
  408564:	pop    esi
  408565:	idiv   BYTE PTR [esi-0x58c7ab87]
  40856b:	dec    ebx
  40856c:	mov    edi,0xe441a3ed
  408571:	out    dx,al
  408572:	push   cs
  408573:	lahf   
  408574:	stos   BYTE PTR es:[edi],al
  408575:	into   
  408576:	sar    ecx,cl
  408578:	mov    BYTE PTR [edx],ch
  40857a:	inc    edx
  40857b:	aas    
  40857c:	les    ecx,FWORD PTR [ecx]
  40857e:	dec    esp
  40857f:	lock sbb al,0x6e
  408582:	cmp    cl,BYTE PTR [edx-0x2645923]
  408588:	sar    BYTE PTR [eax-0x2daa69f0],cl
  40858e:	add    eax,0x2ef65f82
  408593:	aaa    
  408594:	ds aam 0x1d
  408597:	mov    ecx,0x1676eacb
  40859c:	mov    al,0xfb
  40859e:	sar    DWORD PTR [edi+0x7a],0x78
  4085a2:	push   cs
  4085a3:	fld    TBYTE PTR [eax]
  4085a5:	sub    DWORD PTR [edx+eiz*1],ebx
  4085a8:	push   0xffffffb2
  4085aa:	mov    esi,0xf2e57a9e
  4085af:	retf   
  4085b0:	ins    DWORD PTR es:[edi],dx
  4085b1:	push   0x8d23ead
  4085b6:	jmp    0x766ca54a
  4085bb:	inc    esi
  4085bc:	arpl   sp,bx
  4085be:	push   cs
  4085bf:	push   ebx
  4085c0:	cwde   
  4085c1:	jbe    0x408614
  4085c3:	or     BYTE PTR [ebx-0x7d],bh
  4085c6:	cdq    
  4085c7:	xor    ecx,DWORD PTR [ebp-0x30]
  4085ca:	and    dl,BYTE PTR [edx+eiz*8]
  4085cd:	loopne 0x408589
  4085cf:	fcom   QWORD PTR [ecx]
  4085d1:	or     ebp,esp
  4085d3:	adc    BYTE PTR [edx+ebx*1-0x58],cl
  4085d7:	xor    al,0x9a
  4085d9:	or     ah,BYTE PTR [ebp-0x467c7fae]
  4085df:	fcom   QWORD PTR [esi]
  4085e1:	test   BYTE PTR [ebp-0x20],bl
  4085e4:	cmp    eax,0xd8ea3d16
  4085e9:	into   
  4085ea:	mov    dh,0xfa
  4085ec:	push   edi
  4085ed:	mov    ds:0x4552a5d9,eax
  4085f2:	xchg   ecx,eax
  4085f3:	sub    ch,cl
  4085f5:	stos   BYTE PTR es:[edi],al
  4085f6:	cmp    al,0x2
  4085f8:	pop    eax
  4085f9:	add    ecx,DWORD PTR [ecx-0x75be592e]
  4085ff:	cmp    BYTE PTR [edx-0xb],al
  408602:	jp     0x4085e8
  408604:	shr    DWORD PTR [ebp+0x2a6fbebe],0xf9
  40860b:	add    BYTE PTR [eax+0x7e237d4f],0x2c
  408612:	adc    eax,0x83e9db9c
  408617:	call   0xe783:0x6e28fa9f
  40861e:	iret   
  40861f:	pop    edx
  408620:	ins    BYTE PTR es:[edi],dx
  408621:	pop    ss
  408622:	adc    DWORD PTR [edx+0x25],ebp
  408625:	test   ecx,eax
  408627:	rcl    DWORD PTR [ebp+0x4e],1
  40862a:	out    0xf3,al
  40862c:	in     al,dx
  40862d:	jns    0x408650
  40862f:	mov    bl,BYTE PTR [ecx]
  408631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408632:	fld    QWORD PTR [ecx+0x7b5daff7]
  408638:	jne    0x408646
  40863a:	lds    edx,FWORD PTR [ebp-0x2c]
  40863d:	mov    esi,0x6b3ce4b5
  408642:	test   BYTE PTR [ebx-0x76a5cae2],dl
  408648:	out    dx,eax
  408649:	and    eax,0xc4e07b17
  40864e:	frstor [ecx]
  408650:	jb     0x4086b8
  408652:	mov    ah,0x1
  408654:	pop    ebp
  408655:	pop    esi
  408656:	ins    BYTE PTR es:[edi],dx
  408657:	pop    esp
  408658:	mov    ebp,0x343eb66a
  40865d:	(bad)  
  40865e:	out    0x37,al
  408660:	stos   BYTE PTR es:[edi],al
  408661:	inc    ecx
  408662:	jns    0x408662
  408664:	xor    edx,esi
  408666:	cli    
  408667:	xor    eax,0x38b7e2b5
  40866c:	sti    
  40866d:	rol    DWORD PTR ds:0x56091df1,0xad
  408674:	addr16 or ebp,ebp
  408677:	rol    ah,1
  408679:	dec    ebp
  40867a:	cmp    bl,BYTE PTR [eax-0x6e5fcdcd]
  408680:	and    DWORD PTR [eax+0x27],eax
  408683:	sub    bh,ch
  408685:	push   ebp
  408686:	enter  0x8334,0x64
  40868a:	jmp    0x4086ca
  40868c:	arpl   WORD PTR [edx+0x54],ax
  40868f:	vprotd xmm9,xmm5,[edx-0x13]
  408695:	ror    BYTE PTR [ebx-0x71],cl
  408698:	outs   dx,BYTE PTR ds:[esi]
  408699:	dec    eax
  40869a:	add    esp,DWORD PTR [esi+eiz*2]
  40869d:	inc    ebx
  40869e:	je     0x4086a4
  4086a0:	or     eax,0x8d282450
  4086a5:	mov    ch,0x14
  4086a7:	aaa    
  4086a8:	sub    ebx,ebx
  4086aa:	mov    ch,0xd6
  4086ac:	inc    edx
  4086ad:	or     BYTE PTR ds:[ebx+0x44],dh
  4086b1:	inc    ecx
  4086b2:	add    ecx,DWORD PTR [edi+0x1a25539b]
  4086b8:	pusha  
  4086b9:	adc    al,0xe8
  4086bb:	xor    BYTE PTR [ebp-0x14],0x30
  4086bf:	sar    BYTE PTR fs:[esi-0x1c],cl
  4086c3:	test   edi,ebp
  4086c5:	call   0xbee8c707
  4086ca:	mov    cl,0xd0
  4086cc:	jmp    0x85dfee8b
  4086d1:	push   edi
  4086d2:	mov    dh,0x60
  4086d4:	or     BYTE PTR [ecx-0x23e0e0e4],dl
  4086da:	int    0xb
  4086dc:	mov    ch,BYTE PTR [edx+0x1e]
  4086df:	out    dx,eax
  4086e0:	jne    0x408706
  4086e2:	jmp    0x40872d
  4086e4:	popa   
  4086e5:	int    0x94
  4086e7:	mov    ds:0xdf921db3,eax
  4086ec:	sub    BYTE PTR [edx],bh
  4086ee:	sbb    eax,0xbba1b7c6
  4086f3:	in     al,dx
  4086f4:	scas   eax,DWORD PTR es:[edi]
  4086f5:	xchg   bl,dh
  4086f7:	mov    DWORD PTR [edi-0x32],esi
  4086fa:	repnz iret 
  4086fc:	push   es
  4086fd:	in     al,dx
  4086fe:	mov    ch,0xeb
  408700:	sbb    BYTE PTR [ebx],al
  408702:	pop    edx
  408703:	clc    
  408704:	pop    ebx
  408705:	add    edi,DWORD PTR [esi+ecx*1]
  408708:	loopne 0x4086df
  40870a:	aad    0xf6
  40870c:	sbb    esp,DWORD PTR [edx+0x5f0c0d8a]
  408712:	je     0x4086f1
  408714:	call   0x72a9d2ea
  408719:	test   BYTE PTR [esi-0x1e47cedb],bh
  40871f:	pop    ss
  408720:	pop    eax
  408721:	aaa    
  408722:	mov    ch,0x56
  408724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408725:	mov    ah,0xf2
  408727:	sub    BYTE PTR [esi+0x6bd0b7f6],bh
  40872d:	push   edi
  40872e:	mov    ds,WORD PTR [ebx]
  408730:	fs repz inc esp
  408733:	dec    esi
  408734:	sub    BYTE PTR [eax+0x3e],0xfd
  408738:	jbe    0x408753
  40873a:	test   BYTE PTR [edx+0x7d],0x30
  40873e:	gs cdq 
  408740:	pop    ecx
  408741:	xor    eax,0xe2af3f43
  408746:	ret    
  408747:	lahf   
  408748:	pop    eax
  408749:	jmp    0x3d124a4
  40874e:	sbb    DWORD PTR [edx+eiz*4-0x46],ebx
  408752:	es push ecx
  408754:	mov    esp,0x8c66b280
  408759:	add    al,BYTE PTR [ebx-0x2b38ce18]
  40875f:	sbb    al,0x50
  408761:	cmp    cl,0x0
  408764:	xchg   edx,eax
  408765:	fcomp  QWORD PTR [eax]
  408767:	adc    cl,BYTE PTR [ecx-0x712e8f46]
  40876d:	mov    ds:0xcff192cc,al
  408772:	or     DWORD PTR es:[edi],edi
  408775:	lock add bl,cl
  408778:	lods   eax,DWORD PTR ds:[esi]
  408779:	js     0x408778
  40877b:	mov    fs,WORD PTR [esi]
  40877d:	aas    
  40877e:	mov    fs,WORD PTR [ebx-0x59]
  408781:	cmp    BYTE PTR [ecx-0x4f],bh
  408784:	push   esp
  408785:	sti    
  408786:	aad    0xb0
  408788:	cmp    dh,cl
  40878a:	add    eax,0x4740893f
  40878f:	adc    BYTE PTR [eax-0x14],bl
  408792:	rol    esi,0xd1
  408795:	jecxz  0x408738
  408797:	jns    0x4087f6
  408799:	clc    
  40879a:	pusha  
  40879b:	sar    BYTE PTR [edi],cl
  40879d:	inc    edx
  40879e:	add    edi,DWORD PTR [ebx]
  4087a0:	mov    eax,0x1ddf4c0e
  4087a5:	pop    esp
  4087a6:	loopne 0x4087f0
  4087a8:	into   
  4087a9:	jbe    0x40872b
  4087ab:	push   edx
  4087ac:	lods   eax,DWORD PTR ds:[esi]
  4087ad:	sbb    eax,0x84ef6310
  4087b2:	jo     0x4087fe
  4087b4:	in     al,0xc4
  4087b6:	stos   BYTE PTR es:[edi],al
  4087b7:	add    al,0x30
  4087b9:	add    DWORD PTR [ebp-0xe],0x1d
  4087bd:	and    ch,dl
  4087bf:	mov    ch,0xae
  4087c1:	mov    dl,0x12
  4087c3:	sub    eax,DWORD PTR [eax-0x7dea00]
  4087c9:	into   
  4087ca:	push   esi
  4087cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087cc:	push   edi
  4087cd:	je     0x40876f
  4087cf:	xchg   esp,eax
  4087d0:	jb     0x408801
  4087d2:	je     0x4087a1
  4087d4:	test   BYTE PTR [esi-0x6448ea89],bh
  4087da:	in     eax,0xe
  4087dc:	sbb    BYTE PTR [edx+0x5f],dh
  4087df:	je     0x40882d
  4087e1:	std    
  4087e2:	ss dec eax
  4087e4:	cmp    ch,BYTE PTR [edx+0x3152abf6]
  4087ea:	mov    esp,0x81670e23
  4087ef:	(bad)  
  4087f0:	xor    ebp,esi
  4087f2:	bound  edx,QWORD PTR [ebx-0x3c94fdc6]
  4087f8:	push   0xffffffe9
  4087fa:	mov    esp,0x8482ea3c
  4087ff:	data16 sti 
  408801:	lock cmc 
  408803:	inc    esp
  408804:	test   BYTE PTR [edx+0x7286fd84],cl
  40880a:	aad    0x1e
  40880c:	addr16 and ebp,esi
  40880f:	pop    esp
  408810:	cmp    DWORD PTR [esi],0x8b0c4bc6
  408816:	(bad)  
  408817:	lahf   
  408818:	xor    dh,0x2a
  40881b:	(bad)  
  40881c:	in     eax,dx
  40881d:	daa    
  40881e:	sub    DWORD PTR [ecx],esi
  408820:	(bad)  
  408821:	adc    edx,esp
  408823:	push   0xfffffff5
  408825:	lods   al,BYTE PTR ds:[esi]
  408826:	pop    ebp
  408827:	mov    edi,0xa32b7ac5
  40882c:	adc    ch,dl
  40882e:	imul   edi,ebp,0xc9ce069c
  408834:	add    al,0x87
  408836:	aas    
  408837:	xor    cl,BYTE PTR ds:0x8b03d151
  40883d:	das    
  40883e:	inc    esp
  40883f:	sbb    dl,BYTE PTR ds:0xafa39c09
  408845:	shr    ch,1
  408847:	pop    ds
  408848:	loop   0x408838
  40884a:	and    bl,BYTE PTR [esp+ebp*2]
  40884d:	xchg   bl,al
  40884f:	pop    ebp
  408850:	xlat   BYTE PTR ds:[ebx]
  408851:	push   esp
  408852:	mov    ds:0x55ed6d63,eax
  408857:	xchg   DWORD PTR [edi],ecx
  408859:	loop   0x40883b
  40885b:	or     ch,BYTE PTR [edi-0x322d95d4]
  408861:	xchg   edi,eax
  408862:	or     bh,BYTE PTR [esi+eax*8-0x6e06e1b2]
  408869:	pop    esi
  40886a:	sub    BYTE PTR [edi-0x20479e39],bl
  408870:	mov    ecx,0x4e33f074
  408875:	pop    ax
  408877:	mov    al,ds:0xcbf2c0da
  40887c:	push   ebp
  40887d:	(bad)  
  40887e:	mov    esp,0x6b100b9a
  408883:	push   esp
  408884:	add    BYTE PTR [esi],0x9b
  408887:	sub    ebp,DWORD PTR [edx-0x22c9978a]
  40888d:	sbb    eax,0xf99baade
  408892:	sub    al,0x40
  408894:	popf   
  408895:	das    
  408896:	adc    al,0x78
  408898:	out    dx,eax
  408899:	jmp    0x4088d9
  40889b:	inc    ebp
  40889c:	mov    ds:0x4a99a2bb,eax
  4088a1:	xlat   BYTE PTR ds:[ebx]
  4088a2:	enter  0x62a,0x26
  4088a6:	add    ecx,ecx
  4088a8:	jns    0x40889a
  4088aa:	das    
  4088ab:	loope  0x408916
  4088ad:	jo     0x4088eb
  4088af:	cmp    esi,esi
  4088b1:	pop    esi
  4088b2:	pop    ds
  4088b3:	popa   
  4088b4:	dec    ecx
  4088b5:	retf   
  4088b6:	sbb    BYTE PTR ds:0xbd54b7f0,ah
  4088bc:	jge    0x408904
  4088be:	push   ecx
  4088bf:	int    0xe7
  4088c1:	push   esi
  4088c2:	imul   edx,edx,0x6a
  4088c5:	push   esi
  4088c6:	in     al,dx
  4088c7:	lds    esi,FWORD PTR [edx-0x61243551]
  4088cd:	jbe    0x4088a7
  4088cf:	gs dec esi
  4088d1:	jg     0x4088d4
  4088d3:	imul   al
  4088d5:	rol    BYTE PTR [eax],0xf4
  4088d8:	cmc    
  4088d9:	fld    QWORD PTR [ebx]
  4088db:	inc    edx
  4088dc:	fmulp  st(7),st
  4088de:	leave  
  4088df:	mov    dh,0xb0
  4088e1:	push   esp
  4088e2:	or     ebp,DWORD PTR [edi+0x26fc1f95]
  4088e8:	enter  0x42e0,0x7f
  4088ec:	pusha  
  4088ed:	xchg   bh,dh
  4088ef:	inc    ecx
  4088f0:	push   ss
  4088f1:	(bad)  [ebx-0x9]
  4088f4:	mov    ds:0x745da00c,eax
  4088f9:	clc    
  4088fa:	mov    ah,0xe6
  4088fc:	into   
  4088fd:	mov    ebx,DWORD PTR [ecx]
  4088ff:	pusha  
  408900:	mov    al,0xe2
  408902:	and    esp,DWORD PTR [edi-0xa]
  408905:	retf   
  408906:	arpl   WORD PTR [esi],dx
  408908:	repnz shr DWORD PTR [eax-0x4f],cl
  40890c:	inc    ecx
  40890d:	sbb    ebp,DWORD PTR [ecx+0xf2a5e64]
  408913:	ss ja  0x408903
  408916:	outs   dx,BYTE PTR ds:[esi]
  408917:	lea    ebx,[edi+0x61cc932a]
  40891d:	outs   dx,BYTE PTR ds:[esi]
  40891e:	push   edx
  40891f:	inc    esi
  408920:	fwait
  408921:	and    eax,0x45b40e50
  408926:	cld    
  408927:	iret   
  408928:	ins    DWORD PTR es:[edi],dx
  408929:	lods   eax,DWORD PTR ds:[esi]
  40892a:	out    dx,eax
  40892b:	xchg   DWORD PTR [esi+0x523bba33],edx
  408931:	mov    ecx,0x79f947cc
  408936:	adc    BYTE PTR [ecx+0x7c30a2d7],cl
  40893c:	mov    bh,0xd7
  40893e:	xchg   edi,eax
  40893f:	bound  ebp,QWORD PTR [edi+0x46]
  408942:	outs   dx,DWORD PTR ds:[esi]
  408943:	mov    ebp,DWORD PTR [ecx-0x39865920]
  408949:	lock cmp ch,0x1c
  40894d:	jle    0x408960
  40894f:	arpl   dx,dx
  408951:	add    eax,0xa3ee84c
  408956:	jg     0x408934
  408958:	xchg   ebx,eax
  408959:	aam    0x89
  40895b:	push   esi
  40895c:	sub    eax,0x601852b5
  408961:	xor    al,0x1f
  408963:	push   eax
  408964:	xor    eax,0x42625322
  408969:	dec    ecx
  40896a:	mov    al,0x21
  40896c:	and    DWORD PTR [eax],ebp
  40896e:	loopne 0x4089a5
  408970:	rcr    BYTE PTR [ebp-0x5a],1
  408973:	or     ebx,0x2b21fc07
  408979:	pusha  
  40897a:	cld    
  40897b:	data16 aam 0xc4
  40897e:	rcr    DWORD PTR [edx-0x11],1
  408981:	cli    
  408982:	adc    eax,0x6166a23e
  408987:	xor    BYTE PTR [edi],cl
  408989:	imul   DWORD PTR [eax+0x21]
  40898c:	js     0x40892b
  40898e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898f:	sahf   
  408990:	add    al,0x43
  408992:	nop
  408993:	sbb    BYTE PTR [eax+0x429a4c60],ah
  408999:	pop    es
  40899a:	inc    ebx
  40899b:	leave  
  40899c:	cwde   
  40899d:	xor    BYTE PTR [ebp-0x28e737f0],ah
  4089a3:	mov    esp,0x2cec3274
  4089a8:	test   BYTE PTR [edx],al
  4089aa:	cmp    dh,BYTE PTR [esi+0x70]
  4089ad:	mov    dh,0x64
  4089af:	mov    ebp,eax
  4089b1:	into   
  4089b2:	mov    eax,ds:0x9828053a
  4089b7:	add    eax,0xc9221aa8
  4089bc:	mov    ah,0x44
  4089be:	clc    
  4089bf:	mov    edi,DWORD PTR [esi*2+0x10d42ba7]
  4089c6:	push   cs
  4089c7:	cli    
  4089c8:	mul    BYTE PTR [ebp+0x7b]
  4089cb:	or     DWORD PTR [eax+0x6321649b],edx
  4089d1:	jne    0x4089ac
  4089d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d4:	sbb    eax,0x709d5d36
  4089d9:	retf   0x7afb
  4089dc:	mov    esp,0xc6aa3d49
  4089e1:	push   eax
  4089e2:	out    0x19,eax
  4089e4:	idiv   DWORD PTR [ecx+0x3c]
  4089e7:	iret   
  4089e8:	test   DWORD PTR [ecx],edx
  4089ea:	dec    eax
  4089eb:	and    al,0x91
  4089ed:	retf   0x2c7f
  4089f0:	adc    al,0x7a
  4089f2:	inc    edi
  4089f3:	pop    edx
  4089f4:	jnp    0x4089cf
  4089f6:	inc    esi
  4089f7:	sahf   
  4089f8:	add    al,0x83
  4089fa:	mov    eax,ds:0x1cc2d373
  4089ff:	(bad)  
  408a00:	jg     0x408a40
  408a02:	in     eax,0x40
  408a04:	cmp    ebx,DWORD PTR [ecx+0x20]
  408a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a08:	mov    cs,WORD PTR [ecx]
  408a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a0b:	hlt    
  408a0c:	icebp  
  408a0d:	pop    ds
  408a0e:	in     eax,0x49
  408a10:	daa    
  408a11:	in     eax,dx
  408a12:	in     eax,0x3e
  408a14:	mov    ecx,0xc6d7686e
  408a19:	pop    edi
  408a1a:	fcomp  DWORD PTR [edi-0x18]
  408a1d:	or     BYTE PTR [ebx+0x52d28f33],dh
  408a23:	or     ecx,edi
  408a25:	sub    ebx,edi
  408a27:	test   eax,0x4ac53924
  408a2c:	xor    eax,0xebad9098
  408a31:	enter  0x5baf,0x75
  408a35:	loop   0x4089f2
  408a37:	or     DWORD PTR [eax],esi
  408a39:	push   ecx
  408a3a:	js     0x408a10
  408a3c:	mov    al,0xad
  408a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a3f:	(bad)  
  408a40:	or     ah,BYTE PTR [ebp-0x7d7c91fb]
  408a46:	neg    DWORD PTR [ebp+0x10e084f5]
  408a4c:	loopne 0x408a97
  408a4e:	mov    ds:0xa1fe1b74,al
  408a54:	jo     0x4089fd
  408a56:	sbb    al,0x9c
  408a58:	pop    ebp
  408a59:	and    esi,edx
  408a5b:	in     al,dx
  408a5c:	std    
  408a5d:	xchg   ebx,eax
  408a5e:	xor    bh,BYTE PTR [esi-0xf72dd42]
  408a64:	out    0xfe,al
  408a66:	div    BYTE PTR [ebx]
  408a68:	pushf  
  408a69:	cmp    ebx,0x3b
  408a6c:	xor    BYTE PTR [ecx+0x3452f3fe],dl
  408a72:	outs   dx,BYTE PTR ds:[esi]
  408a73:	aad    0xef
  408a75:	les    edi,FWORD PTR [esi-0x57]
  408a78:	sub    al,0xa
  408a7a:	pop    ds
  408a7b:	add    edi,DWORD PTR [ecx+0xfbd25e2]
  408a81:	into   
  408a82:	fadd   DWORD PTR [edx]
  408a84:	fs das 
  408a86:	jge    0x408ac9
  408a88:	sbb    DWORD PTR [esi-0x39],eax
  408a8b:	add    al,0x84
  408a8d:	inc    edx
  408a8e:	sub    BYTE PTR [ebx],bl
  408a90:	push   cs
  408a91:	imul   si,si,0x6aa9
  408a96:	shl    ebx,0x29
  408a99:	cmp    DWORD PTR [eax-0xf098300],esp
  408a9f:	enter  0x2f1a,0xfa
  408aa3:	jnp    0x408a65
  408aa5:	jo     0x408ad9
  408aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa8:	fmul   QWORD PTR [esi-0x349a9edb]
  408aae:	sub    BYTE PTR ds:0x3afd1fb7,dl
  408ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab5:	cdq    
  408ab6:	mov    al,0x83
  408ab8:	shl    edx,cl
  408aba:	cwde   
  408abb:	call   0x1c5c9aa2
  408ac0:	push   cs
  408ac1:	rcr    DWORD PTR gs:[eax],1
  408ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac5:	jp     0x408a9d
  408ac7:	dec    ecx
  408ac8:	jo     0x408ad1
  408aca:	aam    0x54
  408acc:	in     eax,0x37
  408ace:	mov    dl,0x57
  408ad0:	cld    
  408ad1:	pop    ecx
  408ad2:	cli    
  408ad3:	fs jno 0x408a9a
  408ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad7:	(bad)  
  408ad8:	fmul   QWORD PTR [ebx-0x5c87226a]
  408ade:	add    eax,0x783ab5e2
  408ae3:	jne    0x408a93
  408ae5:	and    ch,ah
  408ae7:	outs   dx,BYTE PTR ds:[esi]
  408ae8:	mov    eax,DWORD PTR [ebx+0x65bca242]
  408aee:	cdq    
  408aef:	daa    
  408af0:	test   eax,0x4893254b
  408af5:	repnz loope 0x408aeb
  408af8:	or     ecx,DWORD PTR [ecx-0x2e]
  408afb:	aas    
  408afc:	push   eax
  408afd:	xchg   ebp,eax
  408afe:	jo     0x408b2b
  408b00:	pop    ss
  408b01:	sbb    al,0xa8
  408b03:	js     0x408a8b
  408b05:	sbb    DWORD PTR [eax],ebx
  408b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b08:	add    al,0xfa
  408b0a:	nop
  408b0b:	icebp  
  408b0c:	mov    bh,0x9f
  408b0e:	xchg   ebp,eax
  408b0f:	and    ah,BYTE PTR [esi]
  408b11:	push   ebp
  408b12:	add    DWORD PTR [eax],eax
  408b14:	inc    edi
  408b15:	fmul   QWORD PTR [edi]
  408b17:	ret    0xf264
  408b1a:	das    
  408b1b:	loopne 0x408b8a
  408b1d:	enter  0x20fd,0x7
  408b21:	sub    eax,0x814ce733
  408b26:	(bad)  
  408b27:	popa   
  408b28:	pop    esp
  408b29:	frstor [ebx-0x312469bc]
  408b2f:	adc    BYTE PTR [esi],bh
  408b31:	push   ebp
  408b32:	dec    edi
  408b33:	mul    BYTE PTR [ebp-0x2a]
  408b36:	or     al,0x44
  408b38:	scas   eax,DWORD PTR es:[edi]
  408b39:	sbb    al,0xf3
  408b3b:	sub    cl,ch
  408b3d:	pop    ds
  408b3e:	gs push es
  408b40:	stc    
  408b41:	daa    
  408b42:	addr16 icebp 
  408b44:	ins    BYTE PTR es:[edi],dx
  408b45:	inc    esi
  408b46:	pop    es
  408b47:	test   BYTE PTR [edx],dh
  408b49:	add    eax,0xf11499c4
  408b4e:	or     BYTE PTR [ebx-0x43],cl
  408b51:	sti    
  408b52:	inc    edx
  408b53:	test   BYTE PTR [ebx-0x46],0xfd
  408b57:	sbb    al,0xa5
  408b59:	mov    ebp,0xaa615df6
  408b5e:	push   ds
  408b5f:	cdq    
  408b60:	cmp    bh,BYTE PTR [edi-0x2b]
  408b63:	and    ch,BYTE PTR [edi]
  408b65:	dec    ebp
  408b66:	sub    eax,DWORD PTR [ebx-0x1062bd42]
  408b6c:	mov    BYTE PTR [edx+0x52],bl
  408b6f:	das    
  408b70:	dec    esi
  408b71:	(bad)  
  408b72:	call   FWORD PTR [esi]
  408b74:	cmp    cl,BYTE PTR [esi+0x11]
  408b77:	mov    edi,0x6d7f888d
  408b7c:	inc    BYTE PTR ds:0xb1e2861c
  408b82:	rcl    bl,0x35
  408b85:	sub    eax,0x859c9879
  408b8a:	sub    ecx,edi
  408b8c:	xor    DWORD PTR [ecx-0x7e],ecx
  408b8f:	fs jp  0x408b9b
  408b92:	in     eax,dx
  408b93:	mov    eax,0x8384683a
  408b98:	or     eax,0x502e8961
  408b9d:	push   eax
  408b9e:	inc    esp
  408b9f:	add    eax,DWORD PTR [ecx]
  408ba1:	xchg   ecx,eax
  408ba2:	adc    cl,BYTE PTR [eax-0x5c6dd233]
  408ba8:	mov    cl,BYTE PTR [edi]
  408baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bab:	pop    ds
  408bac:	pop    es
  408bad:	lea    ebx,[esi-0x5f]
  408bb0:	lahf   
  408bb1:	push   esp
  408bb2:	sub    DWORD PTR [ebx+0xd],0x350f228c
  408bb9:	inc    edi
  408bba:	call   0x98575be2
  408bbf:	into   
  408bc0:	stos   DWORD PTR es:[edi],eax
  408bc1:	pop    DWORD PTR [ecx]
  408bc3:	in     al,0x6
  408bc5:	push   esp
  408bc6:	xor    ch,BYTE PTR [edi+eax*4-0x67]
  408bca:	scas   al,BYTE PTR es:[edi]
  408bcb:	dec    esp
  408bcc:	test   eax,0x404df44d
  408bd1:	imul   edx,DWORD PTR [ecx+0x3d],0xafbd1b6e
  408bd8:	mov    ecx,DWORD PTR [esi+0x3f82d51e]
  408bde:	repnz not DWORD PTR [edx]
  408be1:	or     edi,ecx
  408be3:	add    BYTE PTR [edi+0x2b],0x29
  408be7:	sub    al,ah
  408be9:	loope  0x408c5b
  408beb:	rcr    BYTE PTR [esi-0x42],1
  408bee:	ficom  DWORD PTR [esi]
  408bf0:	pop    edi
  408bf1:	fist   WORD PTR [bx+di+0x1c8b]
  408bf6:	call   FWORD PTR [edi+0x48d926b2]
  408bfc:	aas    
  408bfd:	push   0x7b
  408bff:	push   DWORD PTR [ebp+0x51]
  408c02:	stc    
  408c03:	push   0xffffffe8
  408c05:	dec    eax
  408c06:	mov    bl,0x3
  408c08:	cmp    DWORD PTR [ebx-0x4e],edi
  408c0b:	jecxz  0x408be3
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x55a0dd2a
  408c4f:	sbb    bl,BYTE PTR [eax+ebx*1+0x5e0c8383]
  408c56:	add    DWORD PTR [ebx+0x3a27cde],0xffffffc0
  408c5d:	push   edi
  408c5e:	sahf   
  408c5f:	or     ebx,edi
  408c61:	(bad)  
  408c62:	loop   0x408cb9
  408c64:	out    dx,al
  408c65:	dec    ebx
  408c66:	mov    al,BYTE PTR [ebp+0x521902]
  408c6c:	inc    edi
  408c6d:	pop    es
  408c6e:	jmp    0xa1dc:0x889d02
  408c75:	fldenv [edx-0x60]
  408c78:	mov    bh,0xc3
  408c7a:	loop   0x408c32
  408c7c:	fcmovbe st,st(7)
  408c7e:	inc    ebp
  408c7f:	mov    edi,0x285b765b
  408c84:	push   0x58a2dfec
  408c89:	in     al,0x6a
  408c8b:	sar    ebp,1
  408c8d:	ins    BYTE PTR es:[edi],dx
  408c8e:	hlt    
  408c8f:	leave  
  408c90:	nop
  408c91:	pop    ds
  408c92:	data16 push bx
  408c95:	and    BYTE PTR ds:0xb1207333,cl
  408c9b:	sub    DWORD PTR [esi],eax
  408c9d:	mov    dh,0x9e
  408c9f:	loopne 0x408c63
  408ca1:	daa    
  408ca2:	pop    eax
  408ca3:	loop   0x408d24
  408ca5:	mov    ds:0xde9fc643,eax
  408caa:	sbb    DWORD PTR [eax+0x2f],0xa4a43b35
  408cb1:	dec    esi
  408cb2:	call   0x8707:0x86fbb8b
  408cb9:	adc    al,cl
  408cbb:	push   cs
  408cbc:	imul   edi,DWORD PTR [ecx],0x17
  408cbf:	mov    dh,0xe4
  408cc1:	popa   
  408cc2:	sbb    al,0x6e
  408cc4:	aas    
  408cc5:	jp     0x408d13
  408cc7:	pop    esp
  408cc8:	hlt    
  408cc9:	or     eax,0xba154569
  408cce:	adc    al,bl
  408cd0:	pop    esi
  408cd1:	cmp    eax,0xa0720ec3
  408cd6:	ja     0x408d04
  408cd8:	inc    ebp
  408cd9:	clc    
  408cda:	xchg   ebx,eax
  408cdb:	pop    esp
  408cdc:	into   
  408cdd:	loop   0x408cc6
  408cdf:	popa   
  408ce0:	mov    bh,0x2d
  408ce2:	je     0x408d10
  408ce4:	mov    DWORD PTR [eax+0x4f],esi
  408ce7:	dec    ebp
  408ce8:	or     eax,esp
  408cea:	push   cs
  408ceb:	pop    es
  408cec:	mov    eax,ebp
  408cee:	pop    esi
  408cef:	aam    0xce
  408cf1:	test   DWORD PTR [ebp-0x388297ee],ebx
  408cf7:	add    cl,BYTE PTR [esi]
  408cf9:	pop    eax
  408cfa:	imul   ecx,esp,0x76d74b53
  408d00:	loope  0x408d08
  408d02:	mov    ecx,0x43110e97
  408d07:	dec    ebp
  408d08:	xchg   DWORD PTR ds:0xd57980f5,esp
  408d0e:	mov    al,ds:0xded45360
  408d13:	lahf   
  408d14:	inc    ebx
  408d15:	aam    0xf
  408d17:	in     eax,dx
  408d18:	and    edx,eax
  408d1a:	rol    BYTE PTR [esi+ecx*4+0x51],1
  408d1e:	not    dl
  408d20:	fwait
  408d21:	cmp    BYTE PTR [edx-0x14],ah
  408d24:	mov    edx,0x490ca3cf
  408d29:	xor    DWORD PTR [esi],edx
  408d2b:	hlt    
  408d2c:	pop    eax
  408d2d:	pop    es
  408d2e:	xchg   esi,eax
  408d2f:	jmp    0x408d1b
  408d31:	jno    0x408d0d
  408d33:	pusha  
  408d34:	retf   0xfd8e
  408d37:	or     DWORD PTR [edx-0x67],ebx
  408d3a:	sub    al,0x72
  408d3c:	(bad)  
  408d3d:	fidivr DWORD PTR [edx-0x5b]
  408d40:	mov    dh,BYTE PTR [ebp+0x3c]
  408d43:	mov    eax,0x9e47b1aa
  408d48:	xor    al,0xc6
  408d4a:	xchg   esi,eax
  408d4b:	(bad)  
  408d4c:	push   eax
  408d4d:	ret    
  408d4e:	out    0xa4,al
  408d50:	cmp    BYTE PTR [ebx-0x36168c92],bh
  408d56:	jmp    0x3f3b:0x7be4ecf7
  408d5d:	mov    dl,0xd8
  408d5f:	mov    bl,0x38
  408d61:	push   edi
  408d62:	push   ebx
  408d63:	adc    al,0xbf
  408d65:	mov    cl,0xb4
  408d67:	imul   esp,DWORD PTR [edx],0x31
  408d6a:	out    0xbc,eax
  408d6c:	or     al,0x73
  408d6e:	popf   
  408d6f:	fdiv   DWORD PTR [eax+ebp*1]
  408d72:	hlt    
  408d73:	dec    esp
  408d74:	inc    edi
  408d75:	(bad)  
  408d76:	sti    
  408d77:	mov    ebp,0xdbd8c5b0
  408d7c:	jne    0x408d7b
  408d7e:	sub    BYTE PTR [edx+0x68],0x20
  408d82:	enter  0x42df,0x71
  408d86:	std    
  408d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d88:	or     bh,BYTE PTR [ecx]
  408d8a:	pop    ds
  408d8b:	ret    0xd093
  408d8e:	add    al,0x9d
  408d90:	into   
  408d91:	loopne 0x408dfb
  408d93:	mov    esp,0x68feaca
  408d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d99:	inc    ecx
  408d9a:	pop    ds
  408d9b:	jae    0x408d65
  408d9d:	add    BYTE PTR [edi-0x1e0a02a8],0xd8
  408da4:	xor    BYTE PTR [ebx],bl
  408da6:	jl     0x408db6
  408da8:	or     DWORD PTR [esi],esi
  408daa:	popf   
  408dab:	das    
  408dac:	(bad)  
  408dad:	icebp  
  408dae:	or     DWORD PTR [eax+0x65340273],eax
  408db4:	test   al,0xc
  408db6:	jmp    0xe6ca:0x3cf0bb7e
  408dbd:	push   edi
  408dbe:	push   esp
  408dbf:	arpl   WORD PTR [esi],ax
  408dc1:	neg    BYTE PTR [edi+0x5818c145]
  408dc7:	adc    al,0xff
  408dc9:	neg    DWORD PTR [ebx-0xb2b3546]
  408dcf:	loop   0x408deb
  408dd1:	mov    edx,0xd9376942
  408dd6:	sub    DWORD PTR [edi+0x79bd1a13],0xffffff92
  408ddd:	cmc    
  408dde:	push   es
  408ddf:	add    cl,BYTE PTR [ebp-0x7c]
  408de2:	fsubr  DWORD PTR ds:[eax-0x5f209ff9]
  408de9:	add    ebx,DWORD PTR [eax+0x473e315a]
  408def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df0:	scas   al,BYTE PTR es:[edi]
  408df1:	mov    bl,BYTE PTR [ebp+0x748e7cc]
  408df7:	outs   dx,DWORD PTR ds:[esi]
  408df8:	mov    ebp,0x26f6275e
  408dfd:	call   0x55bd:0x13bfb4f1
  408e04:	inc    ebx
  408e05:	nop
  408e06:	js     0x408dc2
  408e08:	not    DWORD PTR [ebx+0x50]
  408e0b:	ror    ch,cl
  408e0d:	call   0x6e7f22c
  408e12:	cmp    BYTE PTR [ebx-0x55],al
  408e15:	mov    ecx,0x9cc3a5d6
  408e1a:	lods   eax,DWORD PTR ds:[esi]
  408e1b:	fadd   QWORD PTR [edi+0x49]
  408e1e:	fyl2x  
  408e20:	nop
  408e21:	not    BYTE PTR [esi-0x50]
  408e24:	cld    
  408e25:	in     al,dx
  408e26:	push   edx
  408e27:	sbb    eax,0xa7a46661
  408e2c:	fsub   QWORD PTR [ebx]
  408e2e:	ja     0x408ea0
  408e30:	test   eax,0xf90cc28e
  408e35:	rcl    BYTE PTR [ecx-0x355f752e],1
  408e3b:	int    0x20
  408e3d:	mov    ch,BYTE PTR [edi]
  408e3f:	ja     0x408e79
  408e41:	ins    BYTE PTR es:[edi],dx
  408e42:	mov    ebx,0x64548222
  408e47:	cli    
  408e48:	pop    es
  408e49:	mov    bl,0xa6
  408e4b:	mov    dl,0x22
  408e4d:	xchg   ebp,eax
  408e4e:	popa   
  408e4f:	pop    edi
  408e50:	xor    bl,BYTE PTR [esi]
  408e52:	inc    edi
  408e53:	mov    ebx,DWORD PTR [edi-0x10c43351]
  408e59:	ficom  DWORD PTR [esp+ecx*8+0x48c2a4ac]
  408e60:	jmp    0x1c566905
  408e65:	bound  ebx,QWORD PTR ds:0xce35474d
  408e6b:	sbb    edi,DWORD PTR [edi+0x787cbccc]
  408e71:	dec    edi
  408e72:	mov    cl,0x8a
  408e74:	and    eax,0xc6f5e8e4
  408e79:	leave  
  408e7a:	dec    esi
  408e7b:	(bad)  
  408e7c:	fldcw  WORD PTR [ecx]
  408e7e:	and    DWORD PTR [ebp-0x7536f369],0x8da6238e
  408e88:	ins    DWORD PTR es:[edi],dx
  408e89:	ins    DWORD PTR es:[edi],dx
  408e8a:	inc    edi
  408e8b:	sbb    eax,0xe5736cc2
  408e90:	mov    esi,ebx
  408e92:	sbb    al,0x15
  408e94:	sar    BYTE PTR [ecx],1
  408e96:	mov    ch,0xb3
  408e98:	push   eax
  408e99:	repnz mov dl,0xbd
  408e9c:	inc    ebx
  408e9d:	and    BYTE PTR [esi],bh
  408e9f:	aad    0x1c
  408ea1:	scas   al,BYTE PTR es:[edi]
  408ea2:	and    al,0x20
  408ea4:	idiv   DWORD PTR ss:[edi+ecx*4+0x22]
  408ea9:	lea    edx,[eax+0x1294653d]
  408eaf:	add    ch,BYTE PTR [edi-0x71]
  408eb2:	retf   
  408eb3:	test   BYTE PTR [edx-0x2dc85937],bl
  408eb9:	shr    esp,0x4
  408ebc:	mov    DWORD PTR [ebx+0x78],esp
  408ebf:	out    0x6d,eax
  408ec1:	mov    ebx,0xc66530c0
  408ec6:	mov    ecx,0x5069009d
  408ecb:	aaa    
  408ecc:	pop    ecx
  408ecd:	nop
  408ece:	mov    ecx,0xd5f451f0
  408ed3:	and    BYTE PTR ss:[eax-0x15],0xbd
  408ed8:	pop    esp
  408ed9:	je     0x408edf
  408edb:	mov    ebp,0x8b849f8b
  408ee0:	dec    ebx
  408ee1:	pop    ds
  408ee2:	push   ebx
  408ee3:	sub    al,0x51
  408ee5:	or     ecx,DWORD PTR gs:[ecx-0x51f255d5]
  408eec:	xor    eax,0x95427c73
  408ef1:	outs   dx,DWORD PTR ds:[esi]
  408ef2:	repz and al,0x2a
  408ef5:	add    al,0xb9
  408ef7:	adc    bh,BYTE PTR [ebx-0x1e]
  408efa:	xchg   ebp,eax
  408efb:	jle    0x408f04
  408efd:	push   cs
  408efe:	psraw  mm2,mm7
  408f01:	jb     0x408f29
  408f03:	adc    BYTE PTR [ebx+esi*8],ah
  408f06:	ret    0x3935
  408f09:	sub    al,BYTE PTR [ecx-0x35]
  408f0c:	or     al,0xda
  408f0e:	inc    ecx
  408f0f:	lock mov edx,0xb518be3b
  408f15:	inc    eax
  408f16:	sbb    DWORD PTR [edx],esp
  408f18:	xor    ch,bl
  408f1a:	push   ebp
  408f1b:	push   ebp
  408f1c:	leave  
  408f1d:	loop   0x408eea
  408f1f:	mov    ecx,0xabbdd000
  408f24:	shl    DWORD PTR [ecx-0xc],0x97
  408f28:	pop    edi
  408f29:	call   0x71e95aa
  408f2e:	fst    DWORD PTR [ecx-0x64]
  408f31:	sub    BYTE PTR [edx-0x6e],ah
  408f34:	dec    ecx
  408f35:	jmp    0x408f9e
  408f37:	sub    DWORD PTR [ebp+0x61],edi
  408f3a:	add    al,0x8c
  408f3c:	mov    ds:0xfcb0c1f1,eax
  408f41:	ds fdiv st(3),st
  408f44:	fdivr  QWORD PTR [eax]
  408f46:	xor    BYTE PTR [edi-0x9],dl
  408f49:	ins    BYTE PTR es:[edi],dx
  408f4a:	xor    DWORD PTR [eax-0x2cddc883],ebp
  408f50:	mov    ah,0x1e
  408f52:	sbb    edi,DWORD PTR [ecx]
  408f54:	fidiv  WORD PTR [ebp+0x3f]
  408f57:	xor    BYTE PTR [ecx+0x4],ch
  408f5a:	ja     0x408f71
  408f5c:	loop   0x408f38
  408f5e:	and    dh,BYTE PTR [edx-0x23]
  408f61:	lahf   
  408f62:	out    dx,al
  408f63:	cmp    al,0x5a
  408f65:	aam    0xab
  408f67:	mov    ebx,0xd73bcae3
  408f6c:	sub    eax,0x23a1cb52
  408f71:	lahf   
  408f72:	enter  0x663a,0x77
  408f76:	cli    
  408f77:	loope  0x408f9a
  408f79:	mov    BYTE PTR [ecx],cl
  408f7b:	enter  0xc904,0x2d
  408f7f:	sti    
  408f80:	push   edx
  408f81:	cmc    
  408f82:	repz inc eax
  408f84:	inc    ecx
  408f85:	xor    ah,BYTE PTR [edx]
  408f87:	mov    dh,0xc0
  408f89:	shl    ecx,0x41
  408f8c:	xor    ebx,DWORD PTR [ecx]
  408f8e:	sbb    BYTE PTR ss:[edi-0x12],ah
  408f92:	into   
  408f93:	jge    0x408fd4
  408f95:	or     eax,0x643cadfa
  408f9a:	push   0x68
  408f9c:	dec    esi
  408f9d:	dec    edx
  408f9e:	mov    cl,0x28
  408fa0:	mov    ch,0x19
  408fa2:	stos   DWORD PTR es:[edi],eax
  408fa3:	add    DWORD PTR [ebp-0x20099bc3],edx
  408fa9:	das    
  408faa:	aaa    
  408fab:	jns    0x408f57
  408fad:	retf   
  408fae:	adc    edx,DWORD PTR gs:[edi+0x7220b380]
  408fb5:	push   0x9de19320
  408fba:	out    dx,al
  408fbb:	outs   dx,DWORD PTR ds:[esi]
  408fbc:	call   0xadaac598
  408fc1:	cld    
  408fc2:	dec    eax
  408fc3:	and    eax,0x21316a70
  408fc8:	test   eax,0xe4a33f14
  408fcd:	xlat   BYTE PTR ds:[ebx]
  408fce:	test   dl,dl
  408fd0:	xlat   BYTE PTR ds:[ebx]
  408fd1:	inc    ecx
  408fd2:	inc    esp
  408fd3:	(bad)  ds:0xc1e61966
  408fd9:	lock push 0xc42c9c80
  408fdf:	stc    
  408fe0:	ins    BYTE PTR es:[edi],dx
  408fe1:	mov    bh,0x6b
  408fe3:	int    0xc9
  408fe5:	lods   al,BYTE PTR ds:[esi]
  408fe6:	fstp   TBYTE PTR [ecx]
  408fe8:	je     0x408fe4
  408fea:	pop    ss
  408feb:	pusha  
  408fec:	pop    ds
  408fed:	fucom  st(5)
  408fef:	lds    ebp,FWORD PTR [ebp+0x30ce5ca1]
  408ff5:	fild   DWORD PTR [ebx]
  408ff7:	ja     0x408fca
  408ff9:	lods   eax,DWORD PTR ds:[esi]
  408ffa:	cdq    
  408ffb:	inc    ebp
  408ffc:	jcxz   0x409061
  408fff:	jge    0x40902d
  409001:	jl     0x409060
  409003:	cs sbb al,0xdd
  409006:	fwait
  409007:	(bad)  
  409008:	fsubr  QWORD PTR [ecx-0xed307b8]
  40900e:	jb     0x409047
  409010:	add    BYTE PTR [eax+0x6cd8e081],ah
  409016:	mov    edx,0x4732ec8c
  40901b:	push   ss
  40901c:	fdivr  DWORD PTR [ecx]
  40901e:	mov    esp,DWORD PTR [ebp-0x6]
  409021:	and    dl,cl
  409023:	push   cs
  409024:	pop    ecx
  409026:	sbb    BYTE PTR [eax-0x5a0631ca],ah
  40902c:	inc    ecx
  40902d:	repnz or BYTE PTR [ecx],ah
  409030:	rcl    ebx,cl
  409032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409033:	sbb    al,0x9d
  409035:	sbb    BYTE PTR [ebp-0x10],ch
  409038:	sbb    DWORD PTR [edi+ecx*1],esi
  40903b:	(bad)  [esi]
  40903d:	jae    0x409088
  40903f:	fiadd  DWORD PTR [ecx+0x769f7758]
  409045:	add    eax,DWORD PTR [eax-0x39]
  409048:	outs   dx,BYTE PTR ds:[esi]
  409049:	daa    
  40904a:	inc    edx
  40904b:	div    BYTE PTR [esi]
  40904d:	call   0x62bf:0x587f5837
  409054:	aam    0x78
  409056:	xor    eax,0x4405e8fc
  40905b:	mov    dl,BYTE PTR [edi]
  40905d:	ret    0x91f9
  409060:	enter  0x56c2,0xfa
  409064:	adc    al,0x34
  409066:	adc    esi,ebp
  409068:	data16 add BYTE PTR [edi+edx*4+0x43c53dc9],cl
  409070:	hlt    
  409071:	aam    0x6a
  409073:	daa    
  409074:	paddsw mm1,QWORD PTR [ecx-0x794635bb]
  40907b:	sbb    al,0x8b
  40907d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907e:	pop    ds
  40907f:	dec    esp
  409080:	adc    al,0x5b
  409082:	xor    ebp,DWORD PTR [ecx+0x48]
  409085:	in     al,dx
  409086:	xor    al,0x70
  409088:	loop   0x409093
  40908a:	inc    esi
  40908b:	mov    ah,0xfa
  40908d:	add    esi,DWORD PTR [edi+esi*1-0x18]
  409091:	add    DWORD PTR [ebx+0x65],ebp
  409094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409095:	fnstsw WORD PTR [ebp+0x2a9c9077]
  40909b:	cmp    DWORD PTR [esi-0x7d],esi
  40909e:	and    bl,BYTE PTR [ecx-0x22e0e5c7]
  4090a4:	add    al,0x1f
  4090a6:	cmp    DWORD PTR [edx-0x6d54c8ef],edi
  4090ac:	cmc    
  4090ad:	dec    ebx
  4090ae:	pop    ss
  4090af:	adc    esi,edx
  4090b1:	push   eax
  4090b2:	(bad)  [ebx]
  4090b4:	cwde   
  4090b5:	pop    ds
  4090b6:	ds in  eax,dx
  4090b8:	and    BYTE PTR [ecx-0x2f],bl
  4090bb:	jecxz  0x4090f1
  4090bd:	mov    eax,ds:0x3cf9c5a3
  4090c2:	mov    edx,0xdbcc6946
  4090c7:	xchg   DWORD PTR [edx+0x3c],edi
  4090ca:	sar    DWORD PTR [edi+edx*4],cl
  4090cd:	pop    edi
  4090ce:	iret   
  4090cf:	adc    eax,0x7c266820
  4090d5:	hlt    
  4090d6:	dec    ebx
  4090d7:	lds    ecx,FWORD PTR [esi+0x59]
  4090da:	mov    esp,0x9173714a
  4090df:	ret    
  4090e0:	mov    bl,0x3c
  4090e2:	daa    
  4090e3:	mov    eax,0xdd095e7e
  4090e8:	jb     0x4090cb
  4090ea:	jecxz  0x409091
  4090ec:	inc    esp
  4090ed:	cmp    al,0x37
  4090ef:	sbb    edx,edi
  4090f1:	push   esp
  4090f2:	mov    cl,0x19
  4090f4:	jl     0x4090f2
  4090f6:	aam    0xbc
  4090f8:	inc    ebp
  4090f9:	stc    
  4090fa:	jne    0x4090e0
  4090fc:	fwait
  4090fd:	push   edx
  4090fe:	and    DWORD PTR [esi],edi
  409100:	sub    bl,BYTE PTR [esi+0x55]
  409103:	sbb    edx,esi
  409105:	sub    dl,BYTE PTR [esi-0x3c3199d6]
  40910b:	pop    edi
  40910c:	test   BYTE PTR [edi],al
  40910e:	jo     0x409129
  409110:	fld    QWORD PTR [edi+0x2a]
  409113:	pop    es
  409114:	jecxz  0x4090b9
  409116:	mov    BYTE PTR cs:[ebp-0x12],bl
  40911a:	lock aad 0x58
  40911d:	imul   ebx,DWORD PTR [ebx+0x3eb606d0],0x7c
  409124:	scas   eax,DWORD PTR es:[edi]
  409125:	mov    ah,0x6
  409127:	stos   DWORD PTR es:[edi],eax
  409128:	inc    ecx
  409129:	ja     0x4090eb
  40912b:	fadd   DWORD PTR [edx-0x192206e]
  409131:	fwait
  409132:	test   BYTE PTR [edx+0x669c8a4e],bl
  409138:	adc    al,0x62
  40913a:	bound  eax,QWORD PTR [ecx+0x1f]
  40913d:	rol    BYTE PTR ds:0xeb7a2c5a,1
  409143:	push   ebx
  409144:	jae    0x409111
  409146:	aas    
  409147:	into   
  409148:	fisub  WORD PTR [ebp-0x7e]
  40914b:	add    eax,0xdf66e942
  409150:	loopne 0x40913d
  409152:	cmp    DWORD PTR [esi-0x73],ebp
  409155:	repnz inc BYTE PTR [esi]
  409158:	(bad)  
  409159:	pop    edi
  40915a:	(bad)  
  40915b:	mov    dh,0xdf
  40915d:	icebp  
  40915e:	dec    ebp
  40915f:	mov    ah,0x25
  409161:	fimul  DWORD PTR [esi+0x7c]
  409164:	add    ch,0xdf
  409167:	mov    ds:0x3bae1d2c,al
  40916c:	push   esp
  40916d:	jge    0x4091dd
  40916f:	push   ecx
  409170:	fist   DWORD PTR [edi-0xf6d1786]
  409176:	sbb    eax,0x8120341
  40917b:	push   esp
  40917c:	daa    
  40917d:	xlat   BYTE PTR ds:[ebx]
  40917e:	jae    0x409196
  409180:	cld    
  409181:	mov    al,ds:0xd6786b4f
  409186:	inc    ebp
  409187:	test   BYTE PTR [edx-0x6e],bh
  40918a:	pop    ecx
  40918b:	out    dx,eax
  40918c:	js     0x409186
  40918e:	addr16 mov esp,0xb38aa18c
  409194:	(bad)  
  409195:	(bad)  
  409196:	fmul   DWORD PTR [ebx]
  409198:	popa   
  409199:	sbb    DWORD PTR [ebx+0x11f2f18a],esp
  40919f:	jl     0x4091f2
  4091a1:	nop
  4091a2:	adc    al,0xfb
  4091a4:	in     eax,dx
  4091a5:	addr16 sub al,0x61
  4091a8:	inc    ecx
  4091a9:	cwde   
  4091aa:	daa    
  4091ab:	lods   al,BYTE PTR ds:[esi]
  4091ac:	std    
  4091ad:	ins    DWORD PTR es:[edi],dx
  4091ae:	aaa    
  4091af:	push   es
  4091b0:	js     0x40913d
  4091b2:	xchg   edi,eax
  4091b3:	mov    ds:0xacf3e830,al
  4091b8:	and    DWORD PTR [ebp-0x24],esi
  4091bb:	sar    BYTE PTR [ecx],1
  4091bd:	ret    0x9862
  4091c0:	outs   dx,BYTE PTR ds:[esi]
  4091c1:	pop    eax
  4091c2:	nop
  4091c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c5:	(bad)  
  4091c6:	and    DWORD PTR [ebx+0x10a79d87],edx
  4091cc:	mov    ds:0x15bc1bfa,al
  4091d1:	cmp    bl,ah
  4091d3:	or     ah,0xd0
  4091d6:	pop    esp
  4091d7:	dec    esi
  4091d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d9:	ja     0x409256
  4091db:	stc    
  4091dc:	inc    ebp
  4091dd:	push   ebp
  4091de:	push   esi
  4091df:	mov    al,ds:0xa22a3b0c
  4091e4:	ror    DWORD PTR [edx-0x4a],cl
  4091e7:	adc    al,0x67
  4091e9:	push   esp
  4091ea:	gs mov dl,0x65
  4091ed:	mov    dh,BYTE PTR [ebp*4+0x7a2bcee3]
  4091f4:	and    edx,DWORD PTR [ebx+0x32a209e0]
  4091fa:	jbe    0x40919e
  4091fc:	inc    edx
  4091fd:	dec    ebx
  4091fe:	xchg   esp,eax
  4091ff:	dec    ecx
  409200:	cmp    DWORD PTR [edx-0x5e7770d7],ebx
  409206:	xchg   esi,ebp
  409208:	mov    ds:0x394c2b5d,eax
  40920d:	aas    
  40920e:	push   eax
  40920f:	lahf   
  409210:	fsub   QWORD PTR [si]
  409213:	(bad)  
  409214:	lea    edi,[ecx+0x3084416b]
  40921a:	ss add esp,esp
  40921d:	jb     0x40920f
  40921f:	cmc    
  409220:	sahf   
  409221:	jecxz  0x4091d1
  409223:	dec    edx
  409224:	inc    edx
  409225:	clc    
  409226:	cs pushw 0xff83
  40922a:	test   eax,0x3f1a5f37
  40922f:	xchg   edi,eax
  409230:	add    eax,0x3789230b
  409235:	stc    
  409236:	inc    esi
  409237:	fmul   st(2),st
  409239:	mov    eax,0x38d16089
  40923e:	fidivr DWORD PTR cs:[esi-0x4c]
  409242:	nop
  409243:	imul   ebp,DWORD PTR ds:0x33267c75,0xffffffdf
  40924a:	pushf  
  40924b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40924c:	adc    ebx,DWORD PTR [eax-0xc]
  40924f:	stc    
  409250:	push   0x3
  409252:	stos   BYTE PTR es:[edi],al
  409253:	int3   
  409254:	add    ebx,DWORD PTR [ecx]
  409256:	mov    bl,0xf4
  409258:	lods   eax,DWORD PTR ds:[esi]
  409259:	sub    DWORD PTR [edi+0x4ddc9e2e],ebx
  40925f:	sub    eax,0x86b2285e
  409264:	mov    dl,BYTE PTR ds:0xba217ac6
  40926a:	inc    esp
  40926b:	dec    ebx
  40926c:	enter  0xa800,0xdd
  409270:	pop    ss
  409271:	stc    
  409272:	mov    esp,0xb0aa7cd6
  409277:	jl     0x409290
  409279:	int3   
  40927a:	scas   eax,DWORD PTR es:[edi]
  40927b:	pop    edi
  40927c:	ror    DWORD PTR [esp+edi*4+0x2e],0x8
  409281:	aas    
  409282:	pop    ebx
  409283:	sub    al,0xfb
  409285:	(bad)  
  409286:	mov    ebp,0xd5999d98
  40928b:	jg     0x4092b4
  40928d:	push   es
  40928e:	pop    ebx
  40928f:	cdq    
  409290:	push   edi
  409291:	(bad)  
  409292:	frstor [esi]
  409294:	cmp    eax,0x4cf434ab
  409299:	inc    ebp
  40929a:	in     eax,dx
  40929b:	adc    ah,al
  40929d:	repnz imul esp,DWORD PTR [edx],0x53
  4092a1:	sbb    DWORD PTR [edi+0x25],edx
  4092a4:	stc    
  4092a5:	mov    BYTE PTR [ecx+0x8293854],ah
  4092ab:	or     eax,0xefaf044c
  4092b0:	xchg   edi,eax
  4092b1:	xor    eax,0x67a552a3
  4092b6:	xchg   edx,eax
  4092b7:	jl     0x40923a
  4092b9:	ror    DWORD PTR [ebp-0x4c712197],0x7a
  4092c0:	not    BYTE PTR [ebx-0x1cd1d712]
  4092c6:	xor    BYTE PTR [ecx-0x6dc556bf],0x86
  4092cd:	push   cs
  4092ce:	pop    ecx
  4092cf:	arpl   WORD PTR [ebp-0x60],sp
  4092d2:	dec    esi
  4092d3:	mov    esi,0x86c647d2
  4092d8:	inc    ebp
  4092d9:	inc    ebp
  4092da:	rcr    DWORD PTR [edx],cl
  4092dc:	xchg   ebx,eax
  4092dd:	xor    DWORD PTR [ebx+edx*8],ebp
  4092e0:	sbb    ebx,eax
  4092e2:	add    ebp,ebx
  4092e4:	cmc    
  4092e5:	xor    al,0xf7
  4092e7:	xor    cl,BYTE PTR [edi+ebx*1-0x2449742e]
  4092ee:	scas   eax,DWORD PTR es:[edi]
  4092ef:	jno    0x4092d0
  4092f1:	ret    
  4092f2:	nop
  4092f3:	dec    edx
  4092f4:	punpcklwd mm2,DWORD PTR [ebp-0x52]
  4092f8:	out    0xb0,eax
  4092fa:	sbb    al,0x2c
  4092fc:	clc    
  4092fd:	scas   al,BYTE PTR es:[edi]
  4092fe:	loope  0x4092ab
  409300:	cld    
  409301:	pop    ds
  409302:	mov    bl,0x4c
  409304:	dec    ebx
  409305:	pop    esp
  409306:	jae    0x4092c8
  409308:	pop    eax
  409309:	pop    esp
  40930a:	in     al,dx
  40930b:	je     0x409356
  40930d:	into   
  40930e:	aaa    
  40930f:	sti    
  409310:	sbb    DWORD PTR ds:0x931ae820,edi
  409316:	(bad)  
  409317:	jg     0x4092f1
  409319:	xchg   esp,eax
  40931a:	xor    cl,ah
  40931c:	stc    
  40931d:	stos   BYTE PTR es:[edi],al
  40931e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931f:	leave  
  409320:	push   cs
  409321:	dec    eax
  409322:	not    BYTE PTR [ebp+ebx*1+0x2c867d75]
  409329:	outs   dx,DWORD PTR ds:[esi]
  40932a:	jge    0x40936f
  40932c:	xchg   esi,eax
  40932d:	stc    
  40932e:	fwait
  40932f:	pushf  
  409330:	out    0xec,eax
  409332:	es push ebx
  409334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409335:	dec    ebp
  409336:	lds    eax,FWORD PTR [ecx+ebp*1]
  409339:	js     0x409379
  40933b:	pop    es
  40933c:	fnstcw WORD PTR [ebx-0x622d04d8]
  409342:	mov    ebx,0x11b0ba1e
  409347:	arpl   WORD PTR [edx+edi*1],cx
  40934a:	repz xchg ebx,eax
  40934c:	repz (bad) 
  40934f:	pop    ebp
  409350:	iret   
  409351:	push   esp
  409352:	mov    edi,0xd5836a40
  409357:	imul   edx,DWORD PTR [edi-0x6f],0xe1bacb6b
  40935e:	(bad)  
  40935f:	jb     0x40938c
  409361:	jmpw   0x971e
  409365:	mov    ebx,fs
  409367:	dec    ebx
  409368:	imul   DWORD PTR [edi+eiz*1-0x1fc36b6]
  40936f:	mov    ch,0x44
  409371:	(bad)  
  409372:	rol    BYTE PTR [esi-0x1b],cl
  409375:	jg     0x4093f3
  409377:	lock loop 0x40936b
  40937a:	retf   
  40937b:	loope  0x40931f
  40937d:	retf   0x7dfb
  409380:	cmpxchg DWORD PTR [eax-0x1c],ebp
  409384:	inc    si
  409386:	imul   edx,DWORD PTR [edi-0x3d],0xc9bd47c1
  40938d:	push   ss
  40938e:	sbb    DWORD PTR [edx-0x6f741699],eax
  409394:	loopne 0x40940a
  409396:	int    0xe2
  409398:	sbb    al,bh
  40939a:	mov    eax,0x7e1175dc
  40939f:	aas    
  4093a0:	xor    bh,BYTE PTR [ecx-0x36]
  4093a3:	mov    dh,BYTE PTR [eax-0x3b]
  4093a6:	cmp    BYTE PTR [ebx-0xe],al
  4093a9:	stos   DWORD PTR es:[edi],eax
  4093aa:	idiv   ecx
  4093ac:	out    0xb3,al
  4093ae:	pop    ebx
  4093af:	pop    esp
  4093b0:	or     al,BYTE PTR [esi+0xd]
  4093b3:	rol    BYTE PTR [edi+0x2fc3ebfa],1
  4093b9:	pushf  
  4093ba:	dec    eax
  4093bb:	jb     0x409392
  4093bd:	jnp    0x40938c
  4093bf:	or     al,0x32
  4093c1:	js     0x409409
  4093c3:	dec    ecx
  4093c4:	or     al,0xc1
  4093c6:	mov    esi,0x1a2f2dea
  4093cb:	pop    edx
  4093cc:	out    0x61,eax
  4093ce:	xor    eax,ebx
  4093d0:	daa    
  4093d1:	push   ds
  4093d2:	mov    edi,0x18eb3b3c
  4093d7:	aam    0x78
  4093d9:	xchg   ebp,eax
  4093da:	jb     0x4093e1
  4093dc:	xor    esi,DWORD PTR [ebx]
  4093de:	xchg   esp,eax
  4093df:	ds js  0x409377
  4093e2:	jg     0x40941b
  4093e4:	push   ss
  4093e5:	mov    ecx,0x3811716b
  4093ea:	imul   esp,DWORD PTR [esi+0xb],0xfcaa5098
  4093f1:	ret    
  4093f2:	(bad)  
  4093f4:	pop    edi
  4093f5:	sub    bl,ch
  4093f7:	outs   dx,DWORD PTR ds:[esi]
  4093f8:	inc    ah
  4093fa:	or     dh,BYTE PTR [esi]
  4093fc:	push   ss
  4093fd:	jae    0x4093a5
  4093ff:	cmp    al,0x30
  409401:	add    eax,0xd9dc346f
  409406:	(bad)  
  409407:	outs   dx,BYTE PTR ds:[esi]
  409408:	dec    esi
  409409:	imul   esp,DWORD PTR [ebp-0x3a],0x26
  40940d:	jl     0x409469
  40940f:	mov    ebx,0x6c50ca5a
  409414:	xchg   ebx,eax
  409415:	jo     0x409401
  409417:	xchg   ecx,eax
  409418:	push   ebp
  409419:	or     ecx,DWORD PTR [eax+0x4695f1ff]
  40941f:	in     al,0x98
  409421:	push   ebp
  409422:	das    
  409423:	sub    esi,DWORD PTR [esi-0x32]
  409426:	in     eax,dx
  409427:	mov    ebp,0x890f32fd
  40942c:	xchg   al,al
  40942e:	lea    esp,[ebp+0x3f]
  409431:	retf   0x6192
  409434:	mov    ebx,0xaac4387a
  409439:	ss icebp 
  40943b:	repnz add esi,DWORD PTR [esi]
  40943e:	(bad)  
  40943f:	push   ds
  409440:	fcmovu st,st(7)
  409443:	lea    ecx,[esi-0x79a2a11b]
  409449:	fadd   QWORD PTR [esi+0x60]
  40944c:	mov    edx,0x517d5a8b
  409451:	mov    dl,0x21
  409453:	or     al,0xc1
  409455:	ja     0x40947d
  409457:	in     al,0x3f
  409459:	sub    eax,0x49491ecd
  40945e:	(bad)  
  40945f:	push   ds
  409460:	adc    eax,0xd7d27fcb
  409465:	xchg   edx,eax
  409466:	es push esp
  409468:	cs enter 0xb48a,0x32
  40946d:	inc    edi
  40946e:	dec    ebp
  40946f:	fsubr  DWORD PTR [ebx-0x8]
  409472:	push   0xb
  409474:	arpl   sp,bx
  409476:	xchg   esp,eax
  409477:	call   0x68b93d1a
  40947c:	inc    esi
  40947d:	jle    0x409470
  40947f:	sbb    BYTE PTR [ebp+0x74],bl
  409482:	and    BYTE PTR [edi+0x1ee55364],bl
  409488:	(bad)  
  409489:	sbb    BYTE PTR [esi],cl
  40948b:	or     BYTE PTR [esp+ebx*1+0x4b],al
  40948f:	xchg   ecx,eax
  409490:	jb     0x4094c0
  409492:	add    DWORD PTR [edi-0x5d6e9962],esp
  409498:	jns    0x40945b
  40949a:	jmp    0x1e2647e4
  40949f:	add    esp,eax
  4094a1:	(bad)  
  4094a2:	push   esi
  4094a3:	pop    eax
  4094a4:	shr    DWORD PTR [esp+edi*8],cl
  4094a7:	push   eax
  4094a8:	sbb    BYTE PTR [ebp-0x72],dh
  4094ab:	jmp    0xf911:0xb794cb3b
  4094b2:	sbb    ecx,ebx
  4094b4:	test   ah,cl
  4094b6:	pop    esi
  4094b7:	sub    eax,0xe5025a23
  4094bc:	ja     0x40948a
  4094be:	(bad)  
  4094bf:	jecxz  0x409467
  4094c1:	lods   eax,DWORD PTR ds:[esi]
  4094c2:	push   0x23
  4094c4:	or     eax,0xe8086dbb
  4094c9:	inc    ebx
  4094ca:	xchg   ecx,eax
  4094cb:	iret   
  4094cc:	out    dx,eax
  4094cd:	sbb    bl,BYTE PTR ds:0x438cdebe
  4094d3:	iret   
  4094d4:	retf   
  4094d5:	or     ch,BYTE PTR [eax+0x24]
  4094d8:	das    
  4094d9:	std    
  4094da:	jp     0x4094a6
  4094dc:	fisttp WORD PTR [ebx+ebp*1-0x5c]
  4094e0:	ins    BYTE PTR es:[edi],dx
  4094e1:	xchg   edx,eax
  4094e2:	scas   eax,DWORD PTR es:[edi]
  4094e3:	jmp    0x4094b3
  4094e5:	push   ebp
  4094e6:	add    DWORD PTR [eax+ebp*2+0x539a2030],edx
  4094ed:	mov    eax,0xda765072
  4094f2:	mov    dl,0xef
  4094f4:	lock jo 0x409535
  4094f7:	xlat   BYTE PTR ds:[ebx]
  4094f8:	mov    al,ds:0x42d01a50
  4094fd:	ficomp DWORD PTR [ebx]
  4094ff:	fnsave [ecx-0x1c]
  409502:	inc    ebp
  409503:	adc    bh,BYTE PTR [esi+0x5d]
  409506:	xchg   BYTE PTR [ecx-0x679f7d65],dl
  40950c:	jecxz  0x4094a9
  40950e:	mov    dh,0x79
  409510:	mov    edi,0xb90c7e3a
  409515:	retf   
  409516:	pop    ecx
  409517:	dec    eax
  409518:	loope  0x409531
  40951a:	push   esi
  40951b:	loop   0x409511
  40951d:	dec    BYTE PTR ds:0x234da487
  409523:	sub    ah,dh
  409525:	cwde   
  409526:	pop    esp
  409527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409528:	movq   mm1,QWORD PTR gs:[ecx]
  40952c:	test   eax,0xaf762ad1
  409531:	mov    BYTE PTR [edx+edi*2-0xd6889ff],cl
  409538:	aad    0x94
  40953a:	xor    BYTE PTR [edi+0x0],bl
  40953d:	into   
  40953e:	adc    DWORD PTR [edi+0x3f4d68ff],ebp
  409544:	(bad)  
  409545:	push   edx
  409546:	xchg   esp,eax
  409547:	xchg   edx,eax
  409548:	pop    edx
  409549:	sub    ebp,DWORD PTR [edi+0x16b68b87]
  40954f:	pop    ss
  409550:	shr    DWORD PTR gs:[ebp-0xc],cl
  409554:	jae    0x409572
  409556:	loopne 0x40958f
  409558:	into   
  409559:	and    DWORD PTR [ecx+0x48546ff8],esp
  40955f:	xor    edx,eax
  409561:	es out 0x80,al
  409564:	xchg   ebp,eax
  409565:	arpl   WORD PTR [esi],sp
  409567:	push   ecx
  409568:	loope  0x409566
  40956a:	and    BYTE PTR [ebx-0x4b9d5fc9],cl
  409570:	xlat   BYTE PTR ds:[ebx]
  409571:	add    esi,DWORD PTR [edi]
  409573:	fild   DWORD PTR [edx]
  409575:	sub    dl,BYTE PTR [esi+edx*4+0x114782e3]
  40957c:	fs test eax,0xc68f1b16
  409582:	xchg   ecx,eax
  409583:	xchg   DWORD PTR [ecx-0x36],ebx
  409586:	mov    eax,0x3a5d1145
  40958b:	into   
  40958c:	fwait
  40958d:	pop    es
  40958e:	inc    esi
  40958f:	stos   DWORD PTR es:[edi],eax
  409590:	test   DWORD PTR [esi],edx
  409592:	std    
  409593:	dec    eax
  409594:	mov    ch,0x94
  409596:	cmp    cl,BYTE PTR [esi]
  409598:	cmp    esp,DWORD PTR [ecx-0x4fa3af5d]
  40959e:	xor    esp,esp
  4095a0:	mov    ebx,0xef4aec2a
  4095a5:	cli    
  4095a6:	add    eax,0xfdf0bd96
  4095ab:	mov    cl,0xe2
  4095ad:	xor    eax,0x5f26d675
  4095b2:	sbb    eax,0x2edc0aaa
  4095b7:	jecxz  0x4095ba
  4095b9:	pop    edi
  4095ba:	repz jno 0x409547
  4095bd:	mov    dh,0x65
  4095bf:	inc    esi
  4095c0:	mov    dh,0x88
  4095c2:	mov    eax,0xbfa53f4a
  4095c7:	les    esi,FWORD PTR [edi+0x36]
  4095ca:	test   eax,0xc50ba248
  4095cf:	sar    BYTE PTR [esi],cl
  4095d1:	sbb    eax,0xb10bb8f
  4095d6:	pop    ecx
  4095d7:	mov    cl,0xc3
  4095d9:	mov    bl,0x1b
  4095db:	xchg   esi,eax
  4095dc:	push   ss
  4095dd:	shl    dl,1
  4095df:	les    esp,FWORD PTR [edi+0x12495348]
  4095e5:	cli    
  4095e6:	test   BYTE PTR [edi-0x4f],dh
  4095e9:	jecxz  0x4095aa
  4095eb:	test   eax,0x80e7b7e1
  4095f0:	mov    ecx,0x6df46647
  4095f5:	outs   dx,BYTE PTR ds:[esi]
  4095f6:	in     eax,dx
  4095f7:	test   eax,0xf14922fd
  4095fc:	mov    edx,0xebb240cc
  409601:	std    
  409602:	lahf   
  409603:	fdivrp st(2),st
  409605:	in     al,dx
  409606:	ss je  0x40961a
  409609:	std    
  40960a:	ret    
  40960b:	idiv   al
  40960d:	fcom   DWORD PTR [eax+0x5]
  409610:	mov    ch,0xe5
  409612:	stos   BYTE PTR es:[edi],al
  409613:	shl    BYTE PTR [ecx-0x3e],cl
  409616:	cmc    
  409617:	retf   0x61b0
  40961a:	dec    esi
  40961b:	vmread DWORD PTR [eax-0x44],edx
  40961f:	shr    BYTE PTR [edx+0x7bce78b],1
  409625:	je     0x4095f8
  409627:	or     al,0x3e
  40962a:	fistp  QWORD PTR [edi+0x6acf71f3]
  409630:	xchg   DWORD PTR [eax+0x29f9c5bc],esi
  409636:	push   cs
  409637:	test   cl,0xe6
  40963a:	stc    
  40963b:	ins    BYTE PTR es:[edi],dx
  40963c:	jmp    0xa95dc3c8
  409641:	xchg   edx,eax
  409643:	inc    edi
  409644:	inc    edx
  409645:	jns    0x409689
  409647:	mov    ch,0xa4
  409649:	sub    edx,ebx
  40964b:	sub    eax,DWORD PTR [ebx-0x74]
  40964e:	add    ebp,DWORD PTR [ecx]
  409650:	loope  0x4095ef
  409652:	mov    edi,0x93e68d33
  409657:	fxch   st(7)
  409659:	aam    0xb4
  40965b:	mov    ecx,ebp
  40965d:	jmp    0x7f80d051
  409662:	loopne 0x4096c6
  409664:	cmp    dl,bl
  409666:	ins    BYTE PTR es:[edi],dx
  409667:	and    eax,0xabb34ec3
  40966c:	mov    ds:0xfc26f5f1,al
  409671:	jb     0x40965d
  409673:	adc    al,0x30
  409675:	fwait
  409676:	sbb    al,0x33
  409678:	lds    ebp,FWORD PTR [ecx-0x55ef0dc4]
  40967e:	push   ecx
  40967f:	and    edi,DWORD PTR [eax-0x79]
  409682:	lock pop ebp
  409684:	clc    
  409685:	mov    bl,0x99
  409687:	jno    0x409653
  409689:	jo     0x4096f9
  40968b:	hlt    
  40968c:	sub    al,0xb0
  40968e:	jp     0x4096cd
  409690:	fs aad 0x28
  409693:	push   edi
  409694:	ret    0x68ed
  409697:	test   DWORD PTR [edi-0x733574b0],ecx
  40969d:	adc    DWORD PTR [edx-0x7e7d0322],esp
  4096a3:	aas    
  4096a4:	cdq    
  4096a5:	sahf   
  4096a6:	xchg   DWORD PTR [ebp+0x2d],ebx
  4096a9:	dec    ebx
  4096aa:	mov    esp,0xf26e9384
  4096af:	adc    al,BYTE PTR [edx]
  4096b1:	xchg   ecx,eax
  4096b2:	jmp    0x4096a3
  4096b4:	xchg   ebp,eax
  4096b5:	pop    ds
  4096b6:	jg     0x40964b
  4096b8:	adc    edi,DWORD PTR [edi+0x69c51982]
  4096be:	mov    edi,0x6171f245
  4096c3:	mov    WORD PTR [esp+esi*8+0x3952617e],?
  4096ca:	mov    ch,0xce
  4096cc:	dec    eax
  4096cd:	mov    ds:0x1ae5705b,eax
  4096d2:	xchg   edx,eax
  4096d3:	jmp    0x4096a9
  4096d5:	call   0x7e65c73f
  4096da:	int    0x2f
  4096dc:	inc    edi
  4096dd:	jle    0x4096c2
  4096df:	sub    ah,al
  4096e1:	sahf   
  4096e2:	ret    
  4096e3:	adc    ecx,DWORD PTR [ebx]
  4096e5:	jbe    0x4096ac
  4096e7:	xchg   dl,dh
  4096e9:	sbb    eax,0xb724315d
  4096ee:	call   0x87fe:0xc507288e
  4096f5:	xor    eax,0x16453f07
  4096fa:	aad    0xc6
  4096fc:	stos   BYTE PTR es:[edi],al
  4096fd:	call   0x5c4b6ac5
  409702:	mov    dl,0x7c
  409704:	mov    WORD PTR [ebx],es
  409706:	push   es
  409707:	pop    es
  409708:	mov    ebp,0x78aad814
  40970d:	js     0x409721
  40970f:	call   0x681:0xc769a181
  409716:	(bad)  
  409717:	sti    
  409718:	add    ebp,DWORD PTR [ebx]
  40971a:	hlt    
  40971b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971c:	mov    edx,0x3a525a0d
  409721:	add    esp,edx
  409723:	ins    BYTE PTR es:[edi],dx
  409724:	xor    BYTE PTR [esi],ah
  409726:	es out dx,al
  409728:	inc    ebx
  409729:	mov    BYTE PTR [ebp+edi*1-0x15c1bbcd],ch
  409730:	aaa    
  409731:	xor    eax,0x8794fb39
  409736:	adc    BYTE PTR [eax-0x5729769a],bl
  40973c:	xchg   DWORD PTR [ebp+0x22a3bd64],edi
  409742:	in     al,dx
  409743:	daa    
  409744:	xor    bl,BYTE PTR [eax]
  409746:	mov    dh,0x47
  409748:	add    edi,ebx
  40974a:	inc    edi
  40974b:	test   al,0xd0
  40974d:	int    0xcc
  40974f:	xchg   edi,eax
  409750:	push   ds
  409751:	push   ebp
  409752:	sub    al,0xdb
  409754:	inc    ebx
  409755:	(bad)  ds:0x98a69946
  40975b:	add    eax,0x3d2b5157
  409760:	call   0xb58f59dd
  409765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409766:	ret    0xef63
  409769:	dec    esi
  40976a:	mov    WORD PTR [ebx-0x4e],?
  40976d:	or     eax,0xa84ca001
  409772:	sub    eax,ebx
  409774:	pop    ss
  409775:	sub    al,0xbf
  409777:	jne    0x409715
  409779:	add    dh,dh
  40977b:	mov    al,0x86
  40977d:	xor    al,0x94
  40977f:	loope  0x409724
  409781:	sbb    al,0x5f
  409783:	jmp    0x40972b
  409785:	xchg   esi,eax
  409786:	inc    ebx
  409787:	clc    
  409788:	sti    
  409789:	sub    esi,DWORD PTR [eax+0x47]
  40978c:	mov    edi,0x5f9d346d
  409791:	mov    al,0xf8
  409793:	(bad)  
  409795:	jnp    0x40974b
  409797:	adc    BYTE PTR es:[ebx+0x39],bh
  40979b:	dec    ecx
  40979c:	sub    ebx,esp
  40979e:	mov    bl,BYTE PTR [edi+0x69a6d0e1]
  4097a4:	fnstsw ax
  4097a6:	lods   eax,DWORD PTR ds:[esi]
  4097a7:	scas   al,BYTE PTR es:[edi]
  4097a8:	push   es
  4097a9:	xor    bh,0xf3
  4097ac:	jmp    0x64123465
  4097b1:	jmp    0x9a24:0xb57018cf
  4097b8:	pop    es
  4097b9:	test   al,0xf6
  4097bb:	dec    edi
  4097bc:	adc    eax,0x3edb8531
  4097c1:	cld    
  4097c2:	in     al,dx
  4097c3:	ins    DWORD PTR es:[edi],dx
  4097c4:	jno    0x409801
  4097c6:	dec    edx
  4097c7:	in     al,0x28
  4097c9:	test   BYTE PTR [ebp+0x47],ch
  4097cc:	inc    edi
  4097cd:	scas   eax,DWORD PTR es:[edi]
  4097ce:	repz jp 0x4097ae
  4097d1:	mov    gs,esi
  4097d3:	ss add al,0x41
  4097d6:	xchg   edi,eax
  4097d7:	pop    eax
  4097d8:	dec    edx
  4097d9:	fisttp WORD PTR [eax]
  4097db:	popf   
  4097dc:	fcmovbe st,st(3)
  4097de:	aad    0x22
  4097e0:	popa   
  4097e1:	shr    BYTE PTR [edi],1
  4097e3:	daa    
  4097e4:	inc    ebp
  4097e5:	not    BYTE PTR [ebp-0x4e9d2744]
  4097eb:	push   edi
  4097ec:	mov    ds:0x809ac4c0,al
  4097f1:	iret   
  4097f2:	mov    ch,0xaf
  4097f4:	dec    DWORD PTR [edi-0x76c661f7]
  4097fa:	dec    esi
  4097fb:	mov    DWORD PTR [ebx],edx
  4097fd:	bndldx (bad),[edx+eiz*1+0x4a]
  409802:	pop    eax
  409803:	xor    DWORD PTR [edi+0x15],esi
  409806:	mov    BYTE PTR [ebx+0x6fbf92a6],ah
  40980c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40980d:	xor    DWORD PTR [ecx-0x1],edx
  409810:	fnstsw WORD PTR [edx]
  409812:	loop   0x4097d2
  409814:	cld    
  409815:	inc    ebx
  409816:	sbb    BYTE PTR ds:0x1ffdea1f,cl
  40981c:	imul   BYTE PTR [eax]
  40981e:	inc    ebp
  40981f:	or     eax,DWORD PTR [edi-0x6a]
  409822:	fs jg  0x40988c
  409825:	outs   dx,DWORD PTR ds:[esi]
  409826:	jno    0x409895
  409828:	sbb    al,BYTE PTR [edi-0x703bf76e]
  40982e:	retf   0xb804
  409831:	cmp    ebp,esi
  409833:	in     al,dx
  409834:	popf   
  409835:	mov    bl,0x3b
  409837:	xor    DWORD PTR [esp+ecx*1+0x51559297],eax
  40983e:	mov    edx,0x24a6bbb1
  409843:	jp     0x409891
  409845:	adc    bl,al
  409847:	inc    edx
  409848:	sbb    bh,BYTE PTR [edi+0x38221812]
  40984e:	or     BYTE PTR [esi-0x70],bl
  409851:	pop    es
  409852:	daa    
  409853:	aad    0x75
  409855:	lods   al,BYTE PTR ds:[esi]
  409856:	or     al,0x3f
  409858:	out    0x21,al
  40985a:	jb     0x409826
  40985c:	out    dx,al
  40985d:	xchg   edx,eax
  40985e:	movntps XMMWORD PTR [edx+esi*1-0x47abf74b],xmm4
  409866:	(bad)  
  409867:	out    0xb8,al
  409869:	test   DWORD PTR [ebx+ecx*4],0xfdb9b64e
  409870:	cmp    al,0x76
  409872:	ficomp DWORD PTR [ecx-0x15b46c23]
  409878:	pop    ecx
  409879:	jnp    0x409895
  40987b:	cs (bad) 
  40987d:	(bad)  
  40987e:	(bad)  
  40987f:	sbb    BYTE PTR [edx],bh
  409881:	(bad)  
  409882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409883:	mov    ecx,0x706be889
  409888:	jp     0x409819
  40988a:	or     eax,0xc0c24c8c
  40988f:	imul   edi,esi,0x9c3dd63d
  409895:	push   esi
  409896:	pushf  
  409897:	add    al,0xe4
  409899:	xchg   ecx,eax
  40989a:	in     al,0xe4
  40989c:	ins    BYTE PTR es:[edi],dx
  40989d:	jge    0x4098fe
  40989f:	test   al,0xe9
  4098a1:	out    0x43,al
  4098a3:	mov    ecx,0x36172594
  4098a8:	xor    dh,BYTE PTR [edi]
  4098aa:	mov    eax,ds:0x29c87e26
  4098af:	sub    BYTE PTR [edi+eiz*1+0x242cd9cb],ch
  4098b6:	mov    ecx,0xf00982ba
  4098bb:	ss mov ebp,esp
  4098be:	add    al,BYTE PTR [edi]
  4098c0:	push   es
  4098c1:	pop    es
  4098c2:	adc    dl,BYTE PTR ds:0xf65e371f
  4098c8:	xchg   edx,eax
  4098c9:	pop    esi
  4098ca:	pop    edx
  4098cb:	sub    ah,BYTE PTR [edx+0x6b1f06cf]
  4098d1:	lods   eax,DWORD PTR ds:[esi]
  4098d2:	xchg   ebp,eax
  4098d3:	clc    
  4098d4:	sar    BYTE PTR [ebp-0x27f0dfaa],0x41
  4098db:	jno    0x4098ea
  4098dd:	xor    BYTE PTR [ecx-0x1ff7b5f1],dh
  4098e3:	sub    eax,DWORD PTR [ecx-0x5f]
  4098e6:	int    0x48
  4098e8:	xor    eax,0x7414fae9
  4098ed:	fiadd  DWORD PTR [esi]
  4098ef:	jp     0x409929
  4098f1:	stc    
  4098f2:	pop    es
  4098f3:	pop    esi
  4098f4:	jg     0x409947
  4098f6:	clc    
  4098f7:	inc    ebp
  4098f8:	and    eax,0x4e4454a2
  4098fd:	cmp    edx,esp
  4098ff:	jb     0x40990a
  409901:	test   eax,0xc725be7c
  409906:	(bad)  
  409907:	ja     0x409959
  409909:	add    al,ch
  40990b:	in     al,dx
  40990c:	in     al,0x9e
  40990e:	adc    eax,0xb1d28b64
  409913:	xchg   ecx,eax
  409914:	mov    ebp,0x6e3ef6cc
  409919:	push   esi
  40991a:	and    al,0x85
  40991c:	mov    ch,0xed
  40991e:	sbb    BYTE PTR [esp+edx*2-0x7b],0xa6
  409923:	dec    edx
  409924:	imul   ebp,DWORD PTR [ecx+0x73142264],0x6d
  40992b:	xlat   BYTE PTR ds:[ebx]
  40992c:	leave  
  40992d:	stc    
  40992e:	gs push esp
  409930:	or     ah,BYTE PTR [esi-0x64]
  409933:	cmp    eax,0x9522329b
  409938:	fwait
  409939:	aam    0xba
  40993b:	adc    esp,DWORD PTR [esi+0x3]
  40993e:	sbb    eax,0x7d7fe0b4
  409943:	mov    ds:0x866018c3,eax
  409948:	jg     0x40994e
  40994a:	xor    dl,BYTE PTR [edx+0x61]
  40994d:	enter  0xb19,0x7
  409951:	out    dx,eax
  409952:	jl     0x409964
  409954:	inc    ecx
  409955:	mov    dh,0xed
  409957:	xchg   ebp,esp
  409959:	aas    
  40995a:	fcmovb st,st(4)
  40995c:	std    
  40995d:	std    
  40995e:	(bad)  
  40995f:	ins    DWORD PTR es:[edi],dx
  409960:	in     al,0x3c
  409962:	ret    0xc460
  409965:	repz mov eax,ds:0xd2d6db42
  40996b:	fdivr  DWORD PTR [ebx]
  40996d:	jnp    0x4098f7
  40996f:	cmp    dl,al
  409971:	scas   eax,DWORD PTR es:[edi]
  409972:	push   eax
  409973:	sbb    ecx,ebx
  409975:	push   0xffffffcc
  409977:	inc    edx
  409978:	loopne 0x40995b
  40997a:	gs cmp bh,cl
  40997d:	in     eax,0xca
  40997f:	out    dx,eax
  409980:	pop    esi
  409981:	test   ecx,0x16ccbd11
  409987:	xor    DWORD PTR [edi+eiz*1+0x2d223984],0x78
  40998f:	ror    BYTE PTR [edx+0x12],0x3d
  409993:	in     al,dx
  409994:	pusha  
  409995:	pop    edx
  409996:	inc    ebx
  409997:	dec    esi
  409998:	scas   al,BYTE PTR es:[edi]
  409999:	in     eax,dx
  40999a:	cmp    al,0x6a
  40999c:	shl    bl,1
  40999e:	stc    
  40999f:	add    eax,0xbb8cddbb
  4099a4:	aaa    
  4099a5:	ins    BYTE PTR es:[edi],dx
  4099a6:	mov    eax,ds:0x5d0f0c0e
  4099ab:	fadd   DWORD PTR [ebx+0x41ac35ac]
  4099b1:	shl    DWORD PTR [edx],1
  4099b3:	scas   al,BYTE PTR es:[edi]
  4099b4:	and    BYTE PTR [eax-0x16],ah
  4099b7:	fldcw  WORD PTR [edx]
  4099b9:	rol    cl,cl
  4099bb:	push   esi
  4099bc:	sub    DWORD PTR [edi-0x2f],edi
  4099bf:	xchg   ebx,eax
  4099c0:	cmp    eax,0xbe85da62
  4099c5:	mov    esp,0xf03b6998
  4099ca:	mov    fs,WORD PTR [edi-0x68]
  4099cd:	in     eax,dx
  4099ce:	pusha  
  4099cf:	ins    BYTE PTR es:[edi],dx
  4099d0:	ss fwait
  4099d2:	loope  0x4099ca
  4099d4:	sub    BYTE PTR [ebp+ebp*4+0x43df84d8],bh
  4099db:	xor    edi,DWORD PTR [eax-0x5a]
  4099de:	lock jmp 0xd1c4:0xaa81b4c
  4099e6:	aam    0x9a
  4099e8:	sbb    BYTE PTR ds:0x1c451028,dh
  4099ee:	lea    ebp,ds:0x71846d5c
  4099f4:	xchg   BYTE PTR [ebp+0x7f069210],cl
  4099fa:	jmp    0x357f:0xafd5895a
  409a01:	aam    0x37
  409a03:	les    edx,FWORD PTR [ebp+0x58]
  409a06:	pop    esi
  409a07:	cdq    
  409a08:	scas   al,BYTE PTR es:[edi]
  409a09:	sbb    esp,ebp
  409a0b:	jmp    0x477672d4
  409a10:	xchg   esp,eax
  409a11:	lahf   
  409a12:	and    BYTE PTR [esi],0x59
  409a15:	mov    edi,esp
  409a17:	dec    ebp
  409a18:	push   0xfffffff9
  409a1a:	mov    cl,0x46
  409a1c:	xchg   edi,eax
  409a1d:	xchg   edx,eax
  409a1e:	xor    DWORD PTR [ebx],ebp
  409a20:	test   DWORD PTR [esi],ecx
  409a22:	mov    ebp,cs
  409a24:	inc    esp
  409a25:	out    0x47,eax
  409a27:	iret   
  409a28:	mov    bh,0xac
  409a2a:	and    al,0xb
  409a2c:	inc    ebx
  409a2d:	and    DWORD PTR [edx],edi
  409a2f:	sub    bl,0x11
  409a32:	jp     0x409a63
  409a34:	cwde   
  409a35:	or     esp,DWORD PTR [ecx-0x5ecfa743]
  409a3b:	enter  0x1bcd,0x12
  409a3f:	fnstcw WORD PTR ds:0x5e8c6be4
  409a45:	inc    esi
  409a46:	sahf   
  409a47:	leave  
  409a48:	inc    esp
  409a49:	ins    BYTE PTR es:[edi],dx
  409a4a:	cmc    
  409a4b:	and    cl,BYTE PTR [ebp-0x6f]
  409a4e:	push   edi
  409a4f:	leave  
  409a50:	xchg   ebx,eax
  409a51:	jmp    0xa0be1430
  409a56:	pop    es
  409a57:	int3   
  409a58:	outs   dx,DWORD PTR ds:[esi]
  409a59:	or     BYTE PTR [edi-0x2d251d6a],0xf2
  409a60:	or     ch,ch
  409a62:	in     al,dx
  409a63:	stc    
  409a64:	scas   eax,DWORD PTR es:[edi]
  409a65:	add    DWORD PTR [edx+0x325850ee],ebp
  409a6b:	xchg   BYTE PTR [edi],dl
  409a6d:	or     dh,BYTE PTR [edx+0x1a1abd09]
  409a73:	ds scas al,BYTE PTR es:[edi]
  409a75:	fbstp  TBYTE PTR [eax-0x16]
  409a78:	adc    eax,0x384d3010
  409a7d:	iret   
  409a7e:	les    eax,FWORD PTR [eax+0x5734d9c0]
  409a84:	jp     0x409a6e
  409a86:	mov    ebp,0xa92cccda
  409a8b:	js     0x409a39
  409a8d:	add    al,0xb1
  409a8f:	inc    edx
  409a90:	sahf   
  409a91:	push   ebp
  409a92:	out    dx,eax
  409a93:	ds push esi
  409a95:	stos   DWORD PTR es:[edi],eax
  409a96:	xchg   esp,eax
  409a97:	adc    al,0x4a
  409a99:	popa   
  409a9a:	mov    bh,0xbb
  409a9c:	mov    gs,WORD PTR [edi]
  409a9e:	sub    DWORD PTR [eax+0x2be3fc7c],edi
  409aa4:	xchg   esi,eax
  409aa5:	mov    ebp,0x5536223d
  409aaa:	retf   0xd5ab
  409aad:	aad    0x1a
  409aaf:	mov    al,0x62
  409ab1:	adc    al,0x85
  409ab3:	scas   eax,DWORD PTR es:[edi]
  409ab4:	ret    
  409ab5:	int    0x97
  409ab7:	mov    ebp,0x2fac92da
  409abc:	cmp    eax,0x703894f2
  409ac1:	ss in  al,0x2f
  409ac4:	jbe    0x409a8f
  409ac6:	leave  
  409ac7:	pop    ebx
  409ac8:	push   ebx
  409ac9:	(bad)  
  409aca:	aam    0x12
  409acc:	push   0xf32e2dc7
  409ad1:	outs   dx,BYTE PTR ds:[esi]
  409ad2:	int3   
  409ad3:	mov    esi,0xf73683c6
  409ad8:	sub    ebx,DWORD PTR [edx+0xc]
  409adb:	scas   al,BYTE PTR es:[edi]
  409adc:	and    eax,0xce29d7c6
  409ae2:	cld    
  409ae3:	outs   dx,DWORD PTR ds:[esi]
  409ae4:	fcom   QWORD PTR [ebp+0x1b450160]
  409aea:	aas    
  409aeb:	pop    esi
  409aec:	cmp    ch,BYTE PTR [ebx-0x27]
  409aef:	jmp    0x409a99
  409af1:	icebp  
  409af2:	cmc    
  409af3:	jbe    0x409b31
  409af5:	sahf   
  409af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af7:	dec    esp
  409af8:	xchg   ebx,eax
  409af9:	xor    BYTE PTR [ebp-0x4b1d1605],0xcd
  409b00:	mov    bl,bl
  409b02:	pop    ebx
  409b03:	xor    esi,DWORD PTR [ebx]
  409b05:	or     eax,0x4717f883
  409b0a:	pop    ebx
  409b0b:	into   
  409b0c:	hlt    
  409b0d:	dec    eax
  409b0e:	dec    edi
  409b0f:	mov    BYTE PTR [edi+0x30],dh
  409b12:	jp     0x409b3d
  409b14:	inc    DWORD PTR ds:0xeb55ab4a
  409b1a:	lods   eax,DWORD PTR ds:[esi]
  409b1b:	test   DWORD PTR [edi+edi*1-0x63726849],edi
  409b22:	sahf   
  409b23:	adc    eax,0x370f1f7b
  409b28:	out    dx,eax
  409b29:	aaa    
  409b2a:	cmp    dh,al
  409b2c:	addr16 xchg ecx,eax
  409b2e:	sbb    al,0xe8
  409b30:	cdq    
  409b31:	out    0x17,al
  409b33:	jg     0x409b53
  409b35:	enter  0xe8e6,0xe0
  409b39:	mov    esi,0x6da7d71f
  409b3e:	push   es
  409b3f:	test   al,0x2b
  409b41:	pop    esi
  409b42:	jecxz  0x409af1
  409b44:	xor    DWORD PTR [ebx+0x44],esi
  409b47:	jg     0x409ba0
  409b49:	inc    edi
  409b4a:	out    dx,al
  409b4b:	adc    BYTE PTR [ecx+0x7ddd43d0],ah
  409b51:	retf   
  409b52:	ret    
  409b53:	sbb    BYTE PTR [eax-0x2d514f28],0x9f
  409b5a:	cmp    ah,dh
  409b5c:	and    BYTE PTR [esp+ebx*1+0xe],cl
  409b60:	xor    ah,BYTE PTR [edx]
  409b62:	arpl   WORD PTR [eax+0x10df5bde],di
  409b68:	jae    0x409b07
  409b6a:	mov    al,ds:0x52f6c6b2
  409b6f:	add    BYTE PTR [edi],cl
  409b71:	fiadd  DWORD PTR [eax+0x66]
  409b74:	jb     0x409b76
  409b76:	lock popf 
  409b78:	push   eax
  409b79:	lock ins DWORD PTR es:[edi],dx
  409b7b:	push   0x21
  409b7d:	pop    ebx
  409b7e:	ss test al,0x35
  409b81:	jle    0x409baf
  409b83:	imul   edi,DWORD PTR ds:0x9e6044cf,0x4a0b4599
  409b8d:	daa    
  409b8e:	imul   esi,DWORD PTR [ebp-0x69],0xffffffb8
  409b92:	mov    BYTE PTR [edx],al
  409b94:	das    
  409b95:	and    bh,BYTE PTR cs:[edx-0x56090f60]
  409b9c:	pusha  
  409b9d:	or     edx,DWORD PTR ds:[eax-0x241ec9b2]
  409ba4:	popa   
  409ba5:	xchg   ebp,eax
  409ba6:	ins    BYTE PTR es:[edi],dx
  409ba7:	jno    0xb50a0536
  409bad:	(bad)  
  409bae:	push   es
  409baf:	xchg   esi,eax
  409bb0:	dec    edi
  409bb1:	stc    
  409bb2:	call   0x3d91:0x828b6b8c
  409bb9:	mov    dh,ah
  409bbb:	sub    DWORD PTR [esi],edi
  409bbd:	inc    esp
  409bbe:	add    DWORD PTR [eax+0x5299caee],0xbf16caa8
  409bc8:	mov    edi,0xd4f63c49
  409bcd:	mov    ds:0x232ec1a0,al
  409bd2:	xor    al,0x36
  409bd4:	inc    edi
  409bd5:	test   BYTE PTR [eax+0x7a],dh
  409bd8:	loop   0x409ba2
  409bda:	sbb    ch,BYTE PTR [esi+eiz*8-0x36135935]
  409be1:	sbb    DWORD PTR [edx-0x775129f3],edx
  409be7:	mov    ecx,0x96f8dbc2
  409bec:	mov    WORD PTR [esi],ss
  409bee:	mov    esi,0x1ca526ef
  409bf3:	sbb    ebx,edx
  409bf5:	lods   eax,DWORD PTR ds:[esi]
  409bf6:	int3   
  409bf7:	add    eax,0x634df907
  409bfc:	push   ecx
  409bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bfe:	mov    ebx,0x6579a658
  409c03:	dec    esi
  409c04:	mov    eax,ds:0x86c03c5c
  409c09:	sahf   
  409c0a:	call   0xd95a:0xd2c14bd0
  409c11:	(bad)  
  409c12:	lea    ebx,[ebp+0x4b2a286]
  409c18:	or     al,BYTE PTR [ebp+0x76]
  409c1b:	and    BYTE PTR [edi-0x4e2bcf10],0xe1
  409c22:	mov    al,ds:0x9cd92b09
  409c27:	arpl   WORD PTR [esi-0x5d],sp
  409c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2b:	ret    0x877
  409c2e:	inc    eax
  409c2f:	js     0x409bbe
  409c31:	sub    BYTE PTR [edx+0x3f],0xf2
  409c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c36:	sub    DWORD PTR [edx],0x23
  409c39:	test   al,0x40
  409c3b:	(bad)  
  409c3c:	pop    eax
  409c3d:	and    DWORD PTR [ebx+esi*8-0x2a],ebp
  409c41:	or     BYTE PTR [edi],0xbe
  409c44:	or     DWORD PTR [ebp-0x7977a75b],esi
  409c4a:	retf   0xdb17
  409c4d:	ret    0xb0c4
  409c50:	inc    edx
  409c51:	xchg   edi,eax
  409c52:	mov    esp,0x2b143cd8
  409c57:	sub    ebp,eax
  409c59:	cmp    BYTE PTR [edx],al
  409c5b:	sbb    bl,BYTE PTR [edx+esi*4+0x7b]
  409c5f:	lea    esi,[edx+0x71]
  409c62:	jae    0x409c27
  409c64:	es ss ss pop ebx
  409c68:	or     dl,BYTE PTR [ecx+0x54]
  409c6b:	aad    0xcd
  409c6d:	dec    ecx
  409c6e:	xchg   DWORD PTR [ebp+0x5df94952],edx
  409c74:	pushf  
  409c75:	ins    BYTE PTR es:[edi],dx
  409c76:	sub    esp,DWORD PTR [edx-0x2ab4f643]
  409c7c:	xchg   ebx,eax
  409c7d:	inc    edx
  409c7e:	(bad)  [esp+ebp*2]
  409c81:	adc    al,0xa9
  409c83:	cmp    al,0x88
  409c85:	pushf  
  409c86:	es (bad) 
  409c88:	mov    dh,0x3e
  409c8a:	mov    ebp,0x128bae52
  409c8f:	sub    BYTE PTR [ebx],al
  409c91:	test   BYTE PTR [ebx+0x27],ah
  409c94:	and    esp,DWORD PTR [edx+0x2a98242c]
  409c9a:	loopne 0x409cdf
  409c9c:	clc    
  409c9d:	push   0xffffffe7
  409c9f:	fucomip st,st(5)
  409ca1:	mov    dh,0xe5
  409ca3:	push   ecx
  409ca4:	daa    
  409ca5:	mov    edi,0x349a8243
  409caa:	in     al,dx
  409cab:	xchg   edx,eax
  409cac:	push   ebx
  409cad:	pop    eax
  409cae:	call   FWORD PTR [esi]
  409cb0:	lea    ebx,[ebx]
  409cb2:	mov    ch,0x76
  409cb4:	sbb    al,0x35
  409cb6:	bound  ebp,QWORD PTR [esi]
  409cb8:	loopne 0x409d03
  409cba:	push   es
  409cbb:	mov    BYTE PTR [eax+0x487f3e3d],dl
  409cc1:	sub    ax,0xda39
  409cc5:	inc    ecx
  409cc6:	fstp   st(4)
  409cc8:	dec    ebx
  409cc9:	in     al,dx
  409cca:	rcl    DWORD PTR [ecx+0x5824e825],1
  409cd0:	inc    ebx
  409cd1:	pop    esi
  409cd2:	mov    al,ds:0x73f761ed
  409cd7:	cmp    BYTE PTR [esi-0xf],ah
  409cda:	pushf  
  409cdb:	sahf   
  409cdc:	mov    al,ds:0x66133b76
  409ce1:	fnstcw WORD PTR ds:0xbafcba83
  409ce7:	mov    al,ds:0xe225f08e
  409cec:	push   ecx
  409ced:	mov    ebp,0x90adf448
  409cf2:	rcl    BYTE PTR [esi-0x4],0x53
  409cf6:	add    esi,0x76
  409cf9:	jne    0x409d18
  409cfb:	cmp    esi,DWORD PTR [eax+0x6d]
  409cfe:	fcom   DWORD PTR [esi-0x2260ccfe]
  409d04:	iret   
  409d05:	iret   
  409d06:	sar    BYTE PTR [ebp+0x678e36e8],1
  409d0c:	jns    0x409cd9
  409d0e:	test   eax,0xb34372a9
  409d13:	loopne 0x409cc2
  409d15:	push   esp
  409d16:	dec    edi
  409d17:	mov    eax,0x2deb7328
  409d1c:	fld    QWORD PTR [edi+0x2295a131]
  409d22:	retf   0x85ec
  409d25:	cmp    ecx,esp
  409d27:	and    DWORD PTR [edx+0x27cb1508],edx
  409d2d:	jae    0x409ce2
  409d2f:	or     eax,0xfcb7a1f8
  409d34:	nop
  409d35:	push   edi
  409d36:	clc    
  409d37:	icebp  
  409d38:	sub    al,0xbe
  409d3a:	and    eax,0xfe9a1249
  409d3f:	ret    
  409d40:	(bad)  
  409d41:	cld    
  409d42:	pop    esi
  409d43:	add    al,0x54
  409d45:	pop    es
  409d46:	sbb    bh,BYTE PTR [ebx]
  409d48:	sbb    ebp,DWORD PTR [edx-0x1d8cbec5]
  409d4e:	mov    es,WORD PTR [edx-0x515f0174]
  409d54:	cmp    DWORD PTR [ecx+0x5ec93243],eax
  409d5a:	jae    0x409cff
  409d5c:	push   cs
  409d5d:	aaa    
  409d5e:	mov    ch,0xa
  409d60:	fwait
  409d61:	mov    esp,0x6428f861
  409d66:	and    eax,0x59902ea1
  409d6b:	add    BYTE PTR [ebx-0xc],dh
  409d6e:	xchg   edx,eax
  409d6f:	ret    
  409d70:	cmp    al,0x6a
  409d72:	xchg   ecx,eax
  409d73:	xchg   esi,eax
  409d74:	(bad)  
  409d75:	push   edx
  409d76:	push   ds
  409d77:	push   es
  409d78:	sar    DWORD PTR [ebx],0x11
  409d7b:	lea    edx,[esi]
  409d7d:	(bad)  
  409d7e:	ja     0x409d39
  409d80:	jae    0x409d38
  409d82:	mov    ebx,0x95db84e0
  409d87:	sbb    al,0x94
  409d89:	cmp    BYTE PTR [eax],ch
  409d8b:	push   ss
  409d8c:	ret    0x95b2
  409d8f:	jae    0x409d95
  409d91:	add    eax,0x66
  409d94:	adc    esi,DWORD PTR [edi+edx*8-0x2230779d]
  409d9b:	aad    0xe4
  409d9d:	cld    
  409d9e:	in     al,0xa0
  409da0:	cmp    BYTE PTR [ebx+0x761282d3],dl
  409da6:	push   ecx
  409da7:	jecxz  0x409d57
  409da9:	int    0xf7
  409dab:	and    bh,ch
  409dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dae:	fld    QWORD PTR [edi+0x30d145b4]
  409db4:	cmp    BYTE PTR [ecx+0x456c3e50],0x15
  409dbb:	inc    esp
  409dbc:	jg     0x409d5c
  409dbe:	call   0x66c6a708
  409dc3:	scas   eax,DWORD PTR es:[edi]
  409dc4:	jae    0x409da8
  409dc6:	add    DWORD PTR [edi+0x39a6bc88],ebx
  409dcc:	mov    al,0x1c
  409dce:	sbb    eax,0xe561225c
  409dd3:	lea    edx,[edi]
  409dd5:	mov    cl,al
  409dd7:	xchg   esi,eax
  409dd8:	les    eax,FWORD PTR [ecx-0x3f]
  409ddb:	cmp    edx,DWORD PTR [eax+0x2e]
  409dde:	aam    0x3
  409de0:	mov    ecx,edi
  409de2:	out    dx,eax
  409de3:	scas   al,BYTE PTR es:[edi]
  409de4:	push   esi
  409de5:	xchg   ecx,eax
  409de6:	mov    ss,WORD PTR [eax+0x5cacc325]
  409dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ded:	fild   QWORD PTR [edi-0x373bf14a]
  409df3:	push   es
  409df4:	inc    ebx
  409df5:	lds    esp,FWORD PTR [ebx]
  409df7:	push   ss
  409df8:	std    
  409df9:	sahf   
  409dfa:	sahf   
  409dfb:	adc    edi,DWORD PTR [esi+0x6a]
  409dfe:	retf   0xa122
  409e01:	aaa    
  409e02:	dec    ecx
  409e03:	adc    BYTE PTR [bp+di+0x21],0xae
  409e08:	and    DWORD PTR [ebp+0x4a3cf418],esp
  409e0e:	pop    ebp
  409e0f:	out    0x9b,eax
  409e11:	mov    ds:0x8b56b495,al
  409e16:	repnz ins DWORD PTR es:[edi],dx
  409e18:	cdq    
  409e19:	xchg   ebx,eax
  409e1a:	sar    DWORD PTR [eax-0x7f],cl
  409e1d:	mov    ecx,0x34e754e7
  409e22:	outs   dx,DWORD PTR ds:[esi]
  409e23:	dec    ecx
  409e24:	aad    0xd8
  409e26:	sub    edx,edx
  409e28:	jl     0x409ddd
  409e2a:	adc    bl,BYTE PTR [edx]
  409e2c:	mov    ebp,0xd463d119
  409e31:	mov    esp,0xef2d43f9
  409e36:	mov    ebp,0x723923fc
  409e3b:	xor    al,0x29
  409e3d:	sub    bh,bh
  409e3f:	out    0xb0,al
  409e41:	fdiv   DWORD PTR [ebp+0x21]
  409e44:	pop    es
  409e45:	inc    ebx
  409e46:	daa    
  409e47:	or     DWORD PTR [edx],ecx
  409e49:	mov    ebx,0x7fc33df9
  409e4e:	das    
  409e4f:	add    al,0x29
  409e51:	(bad)
  409e54:	sub    al,dl
  409e56:	push   edi
  409e57:	loope  0x409ece
  409e59:	xchg   DWORD PTR [ecx+0x3c],eax
  409e5c:	mov    eax,0x53c62d9f
  409e61:	inc    esi
  409e62:	add    BYTE PTR [esi+edi*4-0x79],ah
  409e66:	inc    ebx
  409e67:	ds pop es
  409e69:	xchg   edi,eax
  409e6a:	jmp    0x409e28
  409e6c:	push   esi
  409e6d:	jl     0x409e7e
  409e6f:	(bad)  
  409e70:	aad    0x74
  409e72:	test   BYTE PTR [edx-0x32952ec7],al
  409e78:	jg     0x409e6b
  409e7a:	ds clc 
  409e7c:	shl    bh,1
  409e7e:	test   al,0x15
  409e80:	adc    ah,dl
  409e82:	cmp    eax,0x9fd13db9
  409e87:	das    
  409e88:	aaa    
  409e89:	aas    
  409e8a:	cdq    
  409e8b:	mov    al,ds:0x1ec57a92
  409e90:	xor    BYTE PTR ds:0xeba6a3dd,cl
  409e96:	cmp    ah,BYTE PTR [edi+eiz*4]
  409e99:	pusha  
  409e9a:	fiadd  DWORD PTR [edx+0x5f5b91bc]
  409ea0:	fs int 0x6b
  409ea3:	jae    0x409ee2
  409ea5:	sub    al,0x4c
  409ea7:	out    0xa8,eax
  409ea9:	das    
  409eaa:	push   0x408bbfcc
  409eaf:	out    0x4f,eax
  409eb1:	int3   
  409eb2:	push   ecx
  409eb3:	xor    al,0xa7
  409eb5:	retf   
  409eb6:	(bad)  
  409eb8:	fucom  st(6)
  409eba:	cmp    eax,0x94e0b073
  409ebf:	aam    0x25
  409ec1:	(bad)  [esi+0x49]
  409ec4:	test   eax,0x7e21b64c
  409ec9:	outs   dx,BYTE PTR ds:[esi]
  409eca:	outs   dx,BYTE PTR ds:[esi]
  409ecb:	into   
  409ecc:	out    dx,al
  409ecd:	(bad)  
  409ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecf:	gs inc edx
  409ed1:	push   es
  409ed2:	loop   0x409e99
  409ed4:	add    edi,0xffffffd9
  409ed7:	cmc    
  409ed8:	pop    ebp
  409ed9:	jno    0x409eea
  409edb:	fld    st(3)
  409edd:	stos   DWORD PTR es:[edi],eax
  409ede:	ret    
  409edf:	in     eax,dx
  409ee0:	jb     0x409ee8
  409ee2:	(bad)  
  409ee3:	faddp  st(4),st
  409ee5:	push   es
  409ee6:	pop    ds
  409ee7:	lds    edi,FWORD PTR [ebx]
  409ee9:	ja     0x409e75
  409eeb:	mul    DWORD PTR [ebp+0x31115f15]
  409ef1:	sbb    ebp,DWORD PTR [ecx]
  409ef3:	mov    es,WORD PTR [esi+0x179225ab]
  409ef9:	outs   dx,DWORD PTR ds:[esi]
  409efa:	pop    esp
  409efb:	mov    dh,0xf6
  409efd:	loop   0x409f76
  409eff:	push   edx
  409f00:	xchg   esp,eax
  409f01:	dec    esp
  409f02:	(bad)  
  409f04:	mov    al,ds:0x2e14ca4f
  409f09:	or     ebp,DWORD PTR [esi-0x54]
  409f0c:	aam    0xa
  409f0e:	jns    0x409e92
  409f10:	(bad)  
  409f11:	dec    ecx
  409f12:	outs   dx,DWORD PTR ds:[esi]
  409f13:	sub    ebx,ebx
  409f15:	mov    ah,0xa9
  409f17:	add    cx,WORD PTR [eax]
  409f1a:	scas   al,BYTE PTR es:[edi]
  409f1b:	(bad)  
  409f1c:	fldenv [esi-0x5c]
  409f1f:	fcmovb st,st(2)
  409f21:	push   0xffffffd8
  409f23:	xor    ebp,edx
  409f25:	arpl   bp,bx
  409f27:	mov    ah,BYTE PTR [edi-0x7f]
  409f2a:	or     eax,0x6439a2bf
  409f2f:	out    dx,al
  409f30:	(bad)  
  409f31:	ins    DWORD PTR es:[edi],dx
  409f32:	shl    BYTE PTR [eax],cl
  409f34:	(bad)  
  409f36:	pcmpeqd mm6,QWORD PTR [ecx+0x16]
  409f3a:	dec    ebp
  409f3b:	pop    ds
  409f3c:	mov    ebx,0xedfdb988
  409f41:	lds    esp,FWORD PTR [edx-0x13a3e4e5]
  409f47:	inc    edi
  409f48:	dec    edx
  409f49:	div    DWORD PTR [ecx+esi*2-0x3952e8e]
  409f50:	and    eax,0xf0767061
  409f55:	adc    al,0x5e
  409f57:	xchg   esi,eax
  409f58:	dec    ebx
  409f59:	int3   
  409f5a:	nop
  409f5b:	jge    0x409f35
  409f5d:	mov    ebx,es
  409f5f:	outs   dx,BYTE PTR ds:[esi]
  409f60:	fisttp QWORD PTR [esi]
  409f62:	ins    BYTE PTR es:[edi],dx
  409f63:	mov    BYTE PTR [eax+edx*4+0x3cf3ded7],dl
  409f6a:	outs   dx,DWORD PTR ds:[esi]
  409f6b:	jbe    0x409f2c
  409f6d:	fldcw  WORD PTR ds:0x118787f2
  409f73:	add    eax,0xbdd8b269
  409f78:	shr    bh,cl
  409f7a:	cmp    DWORD PTR [edx-0x74],edi
  409f7d:	push   0x963d6e5a
  409f82:	xor    DWORD PTR [ebp+0x65128ad],ebx
  409f88:	lds    ebp,FWORD PTR [ecx+esi*4]
  409f8b:	push   eax
  409f8c:	ficomp WORD PTR [eax+0x45]
  409f8f:	aas    
  409f90:	mov    al,0x1f
  409f92:	lods   eax,DWORD PTR ds:[esi]
  409f93:	sub    ah,BYTE PTR [ebx]
  409f95:	push   ecx
  409f96:	sbb    ah,dh
  409f98:	and    eax,DWORD PTR [esi+0x7b]
  409f9b:	bound  esp,QWORD PTR [edx+0x4ad14849]
  409fa1:	test   al,0x1f
  409fa3:	imul   ecx,DWORD PTR [ebp+0x48ff1554],0x138f0fe7
  409fad:	retf   
  409fae:	es loopne 0x409fa0
  409fb1:	add    al,0xb1
  409fb3:	lds    ebx,FWORD PTR [esp+edi*4+0x66883428]
  409fba:	xchg   edi,eax
  409fbb:	call   0xaee8:0x929f94d0
  409fc2:	jl     0x409f66
  409fc4:	mov    bh,BYTE PTR [ebx-0x3]
  409fc7:	sub    ebp,DWORD PTR [eax]
  409fc9:	mov    dh,0x14
  409fcb:	mov    ebp,0xc4c7fccc
  409fd0:	and    dh,0xa1
  409fd3:	sbb    eax,0x16cd12a7
  409fd8:	mov    WORD PTR ds:0xf7f50bba,fs
  409fde:	dec    eax
  409fdf:	fs cmp eax,0xa2c56685
  409fe5:	sbb    al,0xe8
  409fe7:	and    al,al
  409fe9:	mul    BYTE PTR [edx+0x638a4f2]
  409fef:	cmp    WORD PTR [ebp+0x71],dx
  409ff3:	dec    ebx
  409ff4:	inc    esp
  409ff5:	mov    dh,BYTE PTR [ebp-0x75117ae2]
  409ffb:	ja     0x40a01d
  409ffd:	(bad)  
  409ffe:	adc    dl,BYTE PTR es:[edx-0x7d079612]
  40a005:	xor    ecx,DWORD PTR [ebx-0x37]
  40a008:	shr    BYTE PTR [esi+0x65],cl
  40a00b:	fsub   QWORD PTR [ebp+ebp*8+0x2ae79c8d]
  40a012:	aas    
  40a013:	sti    
  40a014:	xchg   DWORD PTR [ebp-0x743d2c37],eax
  40a01a:	int    0x5b
  40a01c:	(bad)  
  40a01d:	loopne 0x40a036
  40a01f:	aam    0xba
  40a021:	mov    dl,BYTE PTR [edi]
  40a023:	jl     0x409fb2
  40a025:	and    ch,dl
  40a027:	inc    esp
  40a028:	sub    ecx,DWORD PTR [ebx]
  40a02a:	lea    ebx,[esp+esi*2]
  40a02d:	mov    ebp,0x3d1786c
  40a032:	sbb    DWORD PTR [ebx+ebp*4],ecx
  40a035:	add    edx,ebx
  40a037:	cli    
  40a038:	in     al,0x80
  40a03a:	sti    
  40a03b:	xor    eax,0x594ef3a9
  40a040:	dec    edi
  40a041:	add    ecx,DWORD PTR [ebx]
  40a043:	sbb    ch,cl
  40a045:	fidivr DWORD PTR [ebx-0x65eb8e92]
  40a04b:	sub    BYTE PTR [edx+0x56],bh
  40a04e:	loope  0x40a099
  40a050:	inc    eax
  40a051:	and    al,0x6
  40a053:	pop    ss
  40a054:	pop    ebx
  40a055:	jae    0x40a0a5
  40a057:	jp     0x40a01d
  40a059:	or     edx,DWORD PTR [edi+edi*2+0x73]
  40a05d:	sbb    ah,BYTE PTR [eax]
  40a05f:	test   BYTE PTR [eax],dl
  40a061:	hlt    
  40a062:	mov    al,ds:0xbdbdeef3
  40a067:	pushf  
  40a068:	inc    edi
  40a069:	add    esp,ecx
  40a06b:	rcl    BYTE PTR [edx-0x27],0x9c
  40a06f:	test   DWORD PTR [ecx],esi
  40a071:	je     0x40a0d8
  40a073:	inc    edi
  40a074:	mov    al,ds:0xa77df8b5
  40a079:	ss fcmovnb st,st(4)
  40a07c:	dec    ebp
  40a07d:	ret    
  40a07e:	sar    DWORD PTR [esi+esi*2-0x492abdef],0xc9
  40a086:	pop    es
  40a087:	add    BYTE PTR [edi-0x2],0xce
  40a08b:	jnp    0x40a06b
  40a08d:	out    dx,al
  40a08e:	ins    BYTE PTR es:[edi],dx
  40a08f:	dec    esp
  40a090:	pop    edx
  40a091:	xor    esi,edi
  40a093:	psrlw  mm0,mm4
  40a096:	add    esi,edx
  40a098:	and    ebx,DWORD PTR [ecx-0x67942753]
  40a09e:	sub    eax,0x70b05fd3
  40a0a3:	and    ecx,DWORD PTR [edx+0x58890b9c]
  40a0a9:	dec    esp
  40a0aa:	popf   
  40a0ab:	sbb    dl,bh
  40a0ad:	dec    ecx
  40a0ae:	iret   
  40a0af:	cwde   
  40a0b0:	gs inc ecx
  40a0b2:	js     0x40a089
  40a0b4:	dec    edx
  40a0b5:	loope  0x40a087
  40a0b7:	repz and eax,0xed61048e
  40a0bd:	pop    edi
  40a0be:	hlt    
  40a0bf:	mov    ah,0x59
  40a0c1:	pop    ebp
  40a0c2:	add    BYTE PTR [ebp-0x7c],bl
  40a0c5:	addr16 dec edi
  40a0c7:	ss push ds
  40a0c9:	popa   
  40a0ca:	scas   al,BYTE PTR es:[edi]
  40a0cb:	adc    ebp,ebp
  40a0cd:	enter  0x9ea7,0xfb
  40a0d1:	jne    0x40a13e
  40a0d3:	cmp    al,0xd1
  40a0d5:	xor    DWORD PTR [ecx-0x24],ebx
  40a0d8:	push   cs
  40a0d9:	aad    0xe8
  40a0db:	lea    ebx,[ebx+0x27]
  40a0de:	inc    eax
  40a0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e0:	adc    al,0xf3
  40a0e2:	in     eax,dx
  40a0e3:	mov    ebx,0x974e7819
  40a0e8:	out    dx,al
  40a0e9:	mov    al,0xcd
  40a0eb:	dec    eax
  40a0ec:	outs   dx,DWORD PTR ds:[esi]
  40a0ed:	sub    DWORD PTR [ebp+0xc986d05],ecx
  40a0f3:	adc    esp,DWORD PTR [ecx-0x4739e8da]
  40a0f9:	fld    TBYTE PTR [edx+0x44d0b3d1]
  40a0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a100:	sbb    eax,DWORD PTR [ecx-0x53]
  40a103:	adc    eax,0x3f2af6f3
  40a108:	into   
  40a109:	push   0xdc1e7231
  40a10e:	jle    0x40a141
  40a110:	mov    ds:0x6959435c,al
  40a115:	add    ebp,DWORD PTR [eax-0x7a]
  40a118:	cmove  ecx,DWORD PTR [ebp-0x48efb7fd]
  40a11f:	loope  0x40a162
  40a121:	daa    
  40a122:	out    dx,al
  40a123:	je     0x40a18b
  40a125:	push   edi
  40a126:	sbb    eax,0xfc552ee2
  40a12b:	xchg   DWORD PTR [edx],ecx
  40a12d:	cdq    
  40a12e:	fwait
  40a12f:	adc    dl,BYTE PTR [edx]
  40a131:	mov    edi,0x9df52238
  40a136:	out    dx,eax
  40a137:	(bad)  
  40a138:	popa   
  40a139:	mov    al,0x85
  40a13b:	pop    es
  40a13c:	and    al,0x5e
  40a13e:	or     eax,0xe0038cd4
  40a143:	ret    0x730a
  40a146:	sbb    dh,BYTE PTR [ebx+eiz*1]
  40a149:	dec    edx
  40a14a:	daa    
  40a14b:	push   ds
  40a14c:	pushf  
  40a14d:	out    dx,eax
  40a14e:	jmp    FWORD PTR [edi]
  40a150:	mov    WORD PTR [ebp-0x77],gs
  40a153:	sub    DWORD PTR [ebx+0x32218ac7],0xffffffb3
  40a15a:	test   al,0x2a
  40a15c:	or     BYTE PTR ss:[ecx],al
  40a15f:	or     BYTE PTR [edx+0x25],cl
  40a162:	sub    eax,0x806ff138
  40a167:	das    
  40a168:	or     al,0x39
  40a16a:	mov    al,0x9d
  40a16c:	push   ebx
  40a16d:	push   edx
  40a16e:	xor    al,0x0
  40a170:	fucomi st,st(4)
  40a172:	lock mov bh,0xc0
  40a175:	(bad)  
  40a176:	adc    DWORD PTR [edx-0x1d59988d],ebx
  40a17c:	xlat   BYTE PTR ds:[ebx]
  40a17d:	nop
  40a17e:	cmc    
  40a17f:	and    edi,DWORD PTR [eax-0x45]
  40a182:	fcomp  st(1)
  40a184:	icebp  
  40a185:	adc    eax,0x4c688d8
  40a18a:	push   cs
  40a18b:	fstp   TBYTE PTR [edx+0xa]
  40a18e:	mov    ecx,0xdd2527f
  40a193:	xor    al,0xee
  40a195:	mov    ecx,0x231d6d8d
  40a19a:	pop    ds
  40a19b:	icebp  
  40a19c:	pop    ecx
  40a19d:	lock mov BYTE PTR [edx+0x1c980249],al
  40a1a4:	leave  
  40a1a5:	sbb    DWORD PTR [esi+0x15],ebp
  40a1a8:	ins    DWORD PTR es:[edi],dx
  40a1a9:	xchg   ebp,eax
  40a1aa:	pop    eax
  40a1ab:	in     al,0x8f
  40a1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ae:	mov    bh,0x48
  40a1b0:	dec    esi
  40a1b1:	xor    eax,0x3188afa1
  40a1b6:	inc    ebx
  40a1b7:	lods   eax,DWORD PTR ds:[esi]
  40a1b8:	fst    QWORD PTR [ebp-0x1301068f]
  40a1be:	mov    al,0xd6
  40a1c0:	xchg   ebp,eax
  40a1c1:	xchg   BYTE PTR ds:0x259537ee,bh
  40a1c7:	addr16 xchg ebp,eax
  40a1c9:	test   al,0x8
  40a1cb:	repz mov ah,0x78
  40a1ce:	xor    BYTE PTR [ebp+edi*2-0x42e1c006],al
  40a1d5:	cdq    
  40a1d6:	int3   
  40a1d7:	in     al,0x49
  40a1d9:	outs   dx,BYTE PTR ds:[esi]
  40a1da:	test   DWORD PTR [ebx-0x69],esp
  40a1dd:	push   ds
  40a1de:	jmp    0x8fe8b17e
  40a1e3:	mov    dh,0x48
  40a1e5:	mov    cl,0x2
  40a1e7:	inc    eax
  40a1e8:	and    esp,ecx
  40a1ea:	inc    edi
  40a1eb:	(bad)  
  40a1ec:	faddp  st(5),st
  40a1ee:	add    edi,edx
  40a1f0:	repz into 
  40a1f2:	xor    ch,cl
  40a1f4:	and    eax,DWORD PTR [eax-0x56]
  40a1f7:	push   ebp
  40a1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f9:	leave  
  40a1fa:	sti    
  40a1fb:	mov    al,ds:0x3c5f0aa7
  40a200:	lahf   
  40a201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a202:	cmp    eax,0x52785796
  40a207:	mov    ebx,0x5331b51
  40a20c:	add    esp,0xfffffffb
  40a20f:	popa   
  40a210:	ins    BYTE PTR es:[edi],dx
  40a211:	lds    ebx,FWORD PTR [esi+edx*2]
  40a214:	or     DWORD PTR [eax+0x33],edx
  40a217:	stc    
  40a218:	and    eax,0x8cc60d69
  40a21d:	jno    0x40a263
  40a21f:	jb     0x40a21b
  40a221:	xchg   ecx,eax
  40a222:	jge    0x40a1fd
  40a224:	jl     0x40a1cf
  40a226:	mov    eax,0x9af5f977
  40a22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a22c:	rcl    BYTE PTR [eax+0x15a14490],cl
  40a232:	fwait
  40a233:	jg     0x40a1b7
  40a235:	outs   dx,BYTE PTR ds:[esi]
  40a236:	gs daa 
  40a238:	in     eax,dx
  40a239:	icebp  
  40a23a:	aas    
  40a23b:	in     eax,0xf6
  40a23d:	pop    esi
  40a23e:	xchg   ebp,eax
  40a23f:	(bad)  
  40a240:	popa   
  40a241:	(bad)  
  40a242:	and    eax,0xcaceb6bd
  40a247:	xor    eax,0xe137fedd
  40a24c:	xchg   ebx,eax
  40a24d:	xor    DWORD PTR [edi+0x24923fb7],eax
  40a253:	in     al,0xa7
  40a255:	loopne 0x40a280
  40a257:	mov    bh,0x16
  40a259:	xor    BYTE PTR [edx],0xce
  40a25c:	mov    edx,0x34ca2820
  40a261:	lock mov cl,0xae
  40a264:	mov    eax,0x553fb08f
  40a269:	dec    esi
  40a26a:	push   esi
  40a26b:	cmp    al,ch
  40a26d:	cmp    ebp,edi
  40a26f:	out    dx,al
  40a270:	pop    ds
  40a271:	add    eax,0x87bbfd02
  40a276:	inc    edx
  40a277:	push   edi
  40a278:	cld    
  40a279:	xor    eax,0xe56a9011
  40a27e:	test   DWORD PTR [ecx+eax*1+0x37b316c3],ecx
  40a285:	push   ecx
  40a286:	ret    0x5c7
  40a289:	dec    ecx
  40a28a:	xchg   ecx,eax
  40a28b:	pop    eax
  40a28c:	or     al,0x43
  40a28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28f:	mov    ds:0xa54991f8,eax
  40a294:	jp     0x40a23c
  40a296:	(bad)  
  40a298:	nop
  40a299:	test   eax,ebp
  40a29b:	retf   0x2736
  40a29e:	sub    al,0xb7
  40a2a0:	out    0x18,al
  40a2a2:	add    BYTE PTR [esi-0x5f],bh
  40a2a5:	ret    
  40a2a6:	pop    esi
  40a2a7:	and    DWORD PTR [esi],esp
  40a2a9:	jle    0x40a247
  40a2ab:	pop    esp
  40a2ac:	pushf  
  40a2ad:	ret    0x3df5
  40a2b0:	sub    DWORD PTR [esi-0x23],ebx
  40a2b3:	out    0xa8,al
  40a2b5:	and    al,0x39
  40a2b7:	or     al,dl
  40a2b9:	leave  
  40a2ba:	push   esi
  40a2bb:	inc    eax
  40a2bc:	mov    ecx,0x9ec93544
  40a2c1:	jmp    0x40a296
  40a2c3:	stos   BYTE PTR es:[edi],al
  40a2c4:	and    dl,BYTE PTR cs:[ebp+0x653a9a81]
  40a2cb:	mov    cl,0x5f
  40a2cd:	mov    eax,0xd9b2be1c
  40a2d2:	or     DWORD PTR [esi+0x57],edi
  40a2d5:	outs   dx,BYTE PTR ds:[esi]
  40a2d6:	or     ebp,esp
  40a2d8:	push   edx
  40a2d9:	imul   esi,DWORD PTR [eax+0x44],0xe4a415e4
  40a2e0:	sub    DWORD PTR [ebx+0x38cd5440],0x5e
  40a2e7:	dec    ecx
  40a2e8:	leave  
  40a2e9:	sti    
  40a2ea:	ja     0x40a2f9
  40a2ec:	and    al,0xbd
  40a2ee:	or     dh,dh
  40a2f0:	retf   
  40a2f1:	into   
  40a2f2:	xchg   ebp,eax
  40a2f3:	loopne 0x40a2b8
  40a2f5:	inc    esp
  40a2f6:	imul   edi,DWORD PTR [ebp-0x60],0x15
  40a2fa:	pop    es
  40a2fb:	into   
  40a2fc:	pop    edi
  40a2fd:	mov    esp,0x3d53795c
  40a302:	test   BYTE PTR [ebx+0x131ee53d],dh
  40a308:	jbe    0x40a294
  40a30a:	push   0xffffffdd
  40a30c:	jl     0x63d414e9
  40a312:	jns    0x40a303
  40a314:	fwait
  40a315:	jle    0x40a37d
  40a317:	adc    DWORD PTR [esi-0x31],esp
  40a31a:	enter  0x4030,0x7
  40a31e:	dec    DWORD PTR [eax-0x4b0fe678]
  40a324:	cld    
  40a325:	pushf  
  40a326:	push   es
  40a327:	lods   eax,DWORD PTR ds:[esi]
  40a328:	outs   dx,BYTE PTR ds:[esi]
  40a329:	jge    0x40a3a2
  40a32b:	sti    
  40a32c:	xchg   ebp,eax
  40a32d:	cli    
  40a32e:	sub    BYTE PTR [ebp+0x3e],cl
  40a331:	push   ebx
  40a332:	cmp    BYTE PTR [ecx],dh
  40a334:	ficomp DWORD PTR [edx+0x244bd3ad]
  40a33a:	pop    eax
  40a33b:	stos   BYTE PTR es:[edi],al
  40a33c:	hlt    
  40a33d:	call   FWORD PTR [ecx+eiz*8-0x486bf5e8]
  40a344:	push   eax
  40a345:	add    BYTE PTR [eax],ch
  40a347:	adc    al,dl
  40a349:	in     eax,dx
  40a34a:	cwde   
  40a34b:	xor    ah,BYTE PTR [esi]
  40a34d:	popa   
  40a34e:	pop    ds
  40a34f:	jnp    0x40a3b7
  40a351:	cmc    
  40a352:	cs inc edx
  40a354:	xchg   esp,eax
  40a355:	ins    DWORD PTR es:[edi],dx
  40a356:	mov    al,ds:0x4c8c7ba
  40a35b:	punpckhbw mm4,mm2
  40a35e:	fs imul ebx
  40a361:	xor    bh,0x61
  40a364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a365:	imul   esp,DWORD PTR [ebp+0x7fa4a525],0xffffffe3
  40a36c:	out    dx,al
  40a36d:	retf   
  40a36e:	and    eax,0xc776c8ce
  40a373:	xor    bl,ch
  40a375:	or     al,0xea
  40a377:	fdivr  QWORD PTR [ecx+0x48]
  40a37a:	nop
  40a37b:	test   ebp,esp
  40a37d:	in     eax,dx
  40a37e:	ins    BYTE PTR es:[edi],dx
  40a37f:	outs   dx,DWORD PTR ds:[esi]
  40a380:	dec    edx
  40a381:	and    dh,bl
  40a383:	jo     0x40a376
  40a385:	lods   al,BYTE PTR ds:[esi]
  40a386:	sub    bh,BYTE PTR [edx-0x4c]
  40a389:	xchg   ebx,eax
  40a38a:	or     BYTE PTR [ebx],al
  40a38c:	xchg   edi,eax
  40a38d:	in     eax,dx
  40a38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a38f:	jmp    0x1eea2f12
  40a394:	inc    eax
  40a395:	clc    
  40a396:	stos   BYTE PTR es:[edi],al
  40a397:	push   eax
  40a398:	in     eax,dx
  40a399:	inc    ecx
  40a39a:	and    al,0xcd
  40a39c:	sub    BYTE PTR ds:0x6423cf06,dl
  40a3a2:	aam    0x47
  40a3a4:	test   BYTE PTR [ebp+0x19],bh
  40a3a7:	jg     0x40a33d
  40a3a9:	out    0x42,eax
  40a3ab:	mov    ecx,0x7382fc80
  40a3b0:	test   al,0xcf
  40a3b2:	cmp    edi,DWORD PTR [ebx+0x22b5d332]
  40a3b8:	sbb    BYTE PTR [edx+0x11],dl
  40a3bb:	dec    ebx
  40a3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3bd:	sub    eax,0xcd02b83e
  40a3c2:	jge    0x40a41e
  40a3c4:	loope  0x40a398
  40a3c6:	pop    ebx
  40a3c7:	mov    esi,0x8174edc9
  40a3cc:	in     al,dx
  40a3cd:	xchg   ebx,eax
  40a3ce:	hlt    
  40a3cf:	loopne 0x40a42a
  40a3d1:	xor    ebp,DWORD PTR [ebx]
  40a3d3:	repz mov edi,ds
  40a3d6:	loop   0x40a43d
  40a3d8:	(bad)  
  40a3d9:	pop    ebp
  40a3da:	mov    esp,0x67fb18f2
  40a3df:	xchg   edi,eax
  40a3e0:	and    ch,cl
  40a3e2:	inc    esp
  40a3e3:	or     BYTE PTR [ebx+ebp*4+0x2],cl
  40a3e7:	popa   
  40a3e8:	leave  
  40a3e9:	mov    ecx,0x35892a7a
  40a3ee:	mov    bh,0xbf
  40a3f0:	mov    eax,0x55323f72
  40a3f5:	les    esi,FWORD PTR [ecx-0x5029f62f]
  40a3fb:	dec    ebp
  40a3fc:	int3   
  40a3fd:	add    esp,esi
  40a3ff:	jmp    0x40a450
  40a401:	(bad)  
  40a402:	inc    esi
  40a403:	inc    edx
  40a404:	daa    
  40a405:	push   ebx
  40a406:	std    
  40a407:	dec    esp
  40a408:	dec    edx
  40a409:	dec    edi
  40a40a:	pop    esi
  40a40b:	dec    eax
  40a40c:	cmp    DWORD PTR [ebp-0x8],ecx
  40a40f:	push   esi
  40a410:	sti    
  40a411:	iret   
  40a412:	and    ecx,DWORD PTR [edx-0x7bf25f3f]
  40a418:	jg     0x40a3df
  40a41a:	mov    edx,0x195fc13d
  40a41f:	dec    ebp
  40a420:	call   0x8e20:0xfa3fec9e
  40a427:	loop   0x40a425
  40a429:	add    ah,dl
  40a42b:	push   edi
  40a42c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42d:	xor    ah,BYTE PTR [ebx-0x3d]
  40a430:	add    eax,0xebf89d4c
  40a435:	mov    esp,0x6bcbbbea
  40a43a:	(bad)  
  40a43b:	or     esi,ecx
  40a43d:	jo     0x40a465
  40a43f:	dec    ebx
  40a440:	sahf   
  40a441:	clc    
  40a442:	stos   DWORD PTR es:[edi],eax
  40a443:	push   ds
  40a444:	add    ch,BYTE PTR [ebx-0xb1a30d0]
  40a44a:	daa    
  40a44b:	or     DWORD PTR [ecx+0xf],ebp
  40a44e:	pusha  
  40a44f:	dec    edi
  40a450:	jl     0x40a47f
  40a452:	cli    
  40a453:	mov    ch,0xcf
  40a455:	sbb    ah,dl
  40a457:	dec    esp
  40a458:	cmp    bl,BYTE PTR [eax+edi*1]
  40a45b:	test   DWORD PTR [ecx],ecx
  40a45d:	sbb    DWORD PTR [ecx],ecx
  40a45f:	add    ch,BYTE PTR [edx+edx*2-0x765aeafd]
  40a466:	leave  
  40a467:	nop
  40a468:	dec    ebp
  40a469:	loopne 0x40a436
  40a46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a46c:	enter  0xfe61,0x46
  40a470:	xor    DWORD PTR [ebx],eax
  40a472:	aam    0xe
  40a474:	iret   
  40a475:	adc    DWORD PTR [edi+ebx*4],edx
  40a478:	pop    esi
  40a479:	jecxz  0x40a4fa
  40a47b:	push   ebp
  40a47c:	pop    ds
  40a47d:	ins    DWORD PTR es:[edi],dx
  40a47e:	dec    edx
  40a47f:	or     BYTE PTR [eax-0x7],bl
  40a482:	loopne 0x40a40b
  40a484:	push   edx
  40a485:	sbb    DWORD PTR [edx+0x38],ecx
  40a488:	or     al,0x39
  40a48a:	sbb    BYTE PTR [edx-0x12],ch
  40a48d:	enter  0x344d,0xa
  40a491:	sbb    ebp,DWORD PTR [ebx+0x33b04105]
  40a497:	and    ebp,DWORD PTR [eax+0x1]
  40a49a:	pop    ebp
  40a49b:	jge    0x40a4f1
  40a49d:	mov    esp,0x996fbb72
  40a4a2:	xor    al,0x16
  40a4a4:	adc    eax,0x5e827d37
  40a4a9:	push   edi
  40a4aa:	adc    BYTE PTR [edx+0x46f9b504],bl
  40a4b0:	sti    
  40a4b1:	int3   
  40a4b2:	add    al,0x15
  40a4b4:	sbb    al,0x61
  40a4b6:	jne    0x40a4d2
  40a4b8:	test   DWORD PTR ds:0x8916967a,esi
  40a4be:	sub    DWORD PTR [edi+0x624f8b11],edx
  40a4c4:	repnz outs dx,BYTE PTR ds:[esi]
  40a4c6:	in     eax,0x3
  40a4c8:	iret   
  40a4c9:	dec    eax
  40a4ca:	std    
  40a4cb:	repnz sar BYTE PTR [eax-0x5eb5dc5f],1
  40a4d2:	into   
  40a4d3:	cmc    
  40a4d4:	add    al,0x7d
  40a4d6:	xchg   DWORD PTR [edx-0x3e61f4db],esp
  40a4dc:	aaa    
  40a4dd:	mov    esp,0xb51741e8
  40a4e2:	rcl    BYTE PTR [ecx-0x1b94e90],cl
  40a4e8:	ja     0x40a55f
  40a4ea:	shr    BYTE PTR [esi+ecx*1+0x3b],cl
  40a4ee:	add    eax,0x2ad36ad0
  40a4f3:	mov    edi,0x797f23d4
  40a4f8:	lea    ebp,[edi]
  40a4fa:	rcr    edi,0x17
  40a4fd:	mov    ch,0x91
  40a4ff:	inc    eax
  40a500:	jmp    0x40a57f
  40a502:	sub    eax,0x97acdf2b
  40a507:	js     0x40a52d
  40a509:	fwait
  40a50a:	call   0x5ff4:0x1b1ad688
  40a511:	mov    ebx,0x42ec8de3
  40a516:	bound  ebp,QWORD PTR [esi-0x12f81569]
  40a51c:	sub    dh,cl
  40a51e:	dec    edi
  40a51f:	addr16 xor eax,0xf45802bd
  40a525:	xchg   edx,eax
  40a526:	fucom  st(6)
  40a528:	mov    cl,0x39
  40a52a:	rol    BYTE PTR [esi-0x11bbfbe3],0x9b
  40a531:	fadd   DWORD PTR [edi]
  40a533:	mov    al,ds:0xcd83196b
  40a538:	jno    0x40a5ab
  40a53a:	stc    
  40a53b:	dec    ecx
  40a53c:	mov    edx,0x21d2e8d0
  40a541:	cmp    DWORD PTR [esi],ebx
  40a543:	and    DWORD PTR [eax-0x6d],esp
  40a546:	data16 fst QWORD PTR [ebx]
  40a549:	pop    DWORD PTR [ecx+0x3]
  40a54c:	aaa    
  40a54d:	sbb    eax,0xf945eab6
  40a552:	cmp    esi,eax
  40a554:	in     al,dx
  40a555:	imul   ebp,DWORD PTR [ebp+0x67],0x38
  40a559:	pop    eax
  40a55a:	pusha  
  40a55b:	das    
  40a55c:	jge    0x40a52d
  40a55e:	jb     0x40a5b1
  40a560:	in     eax,0x99
  40a562:	jl     0x40a5b0
  40a564:	pushf  
  40a565:	mov    DWORD PTR [ebx],ecx
  40a567:	xchg   BYTE PTR [ecx],dl
  40a569:	add    al,BYTE PTR [edx+0x41f72c52]
  40a56f:	sub    eax,0x37841f30
  40a574:	(bad)  
  40a575:	in     eax,0x8c
  40a577:	inc    ebx
  40a578:	or     DWORD PTR [eax+esi*2-0x23529c67],ecx
  40a57f:	push   ds
  40a580:	add    eax,0xb15fc182
  40a585:	mov    bh,bl
  40a587:	inc    edx
  40a588:	ds enter 0x95b0,0x79
  40a58d:	sub    DWORD PTR [ebx-0x600779f],eax
  40a593:	mov    esi,0x54bc0f29
  40a598:	push   edi
  40a599:	retf   
  40a59a:	mov    dh,0x18
  40a59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59d:	fild   DWORD PTR [eax]
  40a59f:	movd   mm1,DWORD PTR [ecx+0x30]
  40a5a3:	add    DWORD PTR [edx+0x4b],edx
  40a5a6:	lods   al,BYTE PTR ss:[esi]
  40a5a8:	add    al,0x17
  40a5aa:	imul   edi,DWORD PTR [edi],0x22
  40a5ad:	mov    al,ds:0x2fcbffec
  40a5b2:	jmp    0xdc30:0x6606ecff
  40a5b9:	sub    al,0xfb
  40a5bb:	(bad)  
  40a5bc:	xor    DWORD PTR [ecx-0x2da31db],ecx
  40a5c2:	add    eax,0xbb8fc0bf
  40a5c7:	fist   DWORD PTR ds:0x7287b9d1
  40a5cd:	push   esi
  40a5ce:	imul   ecx,DWORD PTR [esi-0x765d6240],0xffffffaf
  40a5d5:	cli    
  40a5d6:	repnz sahf 
  40a5d8:	sub    DWORD PTR [edx+0x3059cd65],edx
  40a5de:	xor    DWORD PTR [ecx+0x22677866],eax
  40a5e4:	imul   ecx,DWORD PTR [esp+eax*8-0x2127faf1],0x4111b005
  40a5ef:	in     eax,0xa7
  40a5f1:	xor    eax,0x1c4c6f89
  40a5f6:	adc    edi,DWORD PTR [edx-0x54]
  40a5f9:	fcmovne st,st(1)
  40a5fb:	cmp    eax,0xf00af49a
  40a600:	loope  0x40a5bf
  40a602:	outs   dx,BYTE PTR ds:[esi]
  40a603:	jl     0x40a621
  40a605:	aad    0x5a
  40a607:	adc    cl,0xac
  40a60a:	jbe    0x40a5ae
  40a60c:	clc    
  40a60d:	jg     0x40a5cc
  40a60f:	(bad)  
  40a610:	xor    eax,ebp
  40a612:	xchg   ebp,eax
  40a613:	jnp    0x40a5bd
  40a615:	sbb    edx,DWORD PTR [ecx-0x59fb2837]
  40a61b:	inc    esp
  40a61c:	scas   eax,DWORD PTR es:[edi]
  40a61d:	push   edi
  40a61e:	cmp    DWORD PTR [ebx-0x65fe636c],edi
  40a624:	xor    dh,BYTE PTR [esi-0x58e2fc51]
  40a62a:	mov    ds:0x9f681a54,al
  40a62f:	es dec esp
  40a631:	push   cs
  40a632:	push   ecx
  40a633:	ins    BYTE PTR es:[edi],dx
  40a634:	sbb    al,0x18
  40a636:	sbb    edi,DWORD PTR [esp+ecx*4+0xe]
  40a63a:	mov    gs,esi
  40a63c:	add    bh,0xf5
  40a63f:	fst    DWORD PTR [esp+eiz*2]
  40a642:	jo     0x40a647
  40a644:	sti    
  40a645:	iret   
  40a646:	mov    ah,0x27
  40a648:	inc    ecx
  40a649:	cmp    bh,BYTE PTR [edi-0x6]
  40a64c:	cs cld 
  40a64e:	frstor [esi]
  40a650:	mov    edi,0xb5a6fd9f
  40a655:	(bad)  
  40a656:	xchg   ecx,eax
  40a657:	sub    edx,esi
  40a659:	xchg   esi,eax
  40a65a:	pop    eax
  40a65b:	rcr    BYTE PTR [eax+0x2e21c45e],1
  40a661:	mov    eax,0x621b7eed
  40a666:	test   DWORD PTR [ecx+ecx*4+0x2b765cfb],ebx
  40a66d:	adc    BYTE PTR [edx+0x58],0x9c
  40a671:	shl    DWORD PTR [edx+0xd0b9023],cl
  40a677:	jg     0x40a64e
  40a679:	repnz or ecx,esp
  40a67c:	adc    eax,0x9815361f
  40a681:	jae    0x40a64f
  40a683:	ss pop ebx
  40a685:	pop    ss
  40a686:	loope  0x40a6d7
  40a688:	xchg   ecx,eax
  40a689:	fwait
  40a68a:	repz mov al,ds:0xc7025bdc
  40a690:	jl     0x40a657
  40a692:	int3   
  40a693:	loope  0x40a67e
  40a695:	je     0x40a661
  40a697:	leave  
  40a698:	sbb    esi,edi
  40a69a:	shl    BYTE PTR [edi+0x26],cl
  40a69d:	and    DWORD PTR [edi+eiz*1-0x11827ed9],eax
  40a6a4:	mov    ch,ch
  40a6a6:	xchg   esp,eax
  40a6a7:	mov    ch,0x94
  40a6a9:	pop    edx
  40a6aa:	jmp    FWORD PTR [esi-0x4fae8e02]
  40a6b0:	mov    esp,0x3ef66f2b
  40a6b5:	into   
  40a6b6:	and    ch,0x84
  40a6b9:	sbb    DWORD PTR [esi],ebp
  40a6bb:	cli    
  40a6bc:	int    0x1a
  40a6be:	sbb    BYTE PTR [eax+0x1a8d24fb],al
  40a6c4:	sbb    esp,ebx
  40a6c6:	rcr    ecx,1
  40a6c8:	imul   WORD PTR [ebx+0x59]
  40a6cc:	mov    dh,0x6e
  40a6ce:	aam    0x20
  40a6d0:	imul   ecx,DWORD PTR [ebp-0x72],0xb79a1d7c
  40a6d7:	sub    DWORD PTR [edi+eax*4-0xff24688],ebx
  40a6de:	fisub  WORD PTR [ebx-0x25]
  40a6e1:	cld    
  40a6e2:	cmp    ebp,DWORD PTR [edi+0x9c6fabc]
  40a6e8:	iret   
  40a6e9:	pop    edi
  40a6ea:	mov    al,ds:0x8d9dd666
  40a6ef:	mov    ?,ebp
  40a6f1:	cmp    eax,0xba76ce2a
  40a6f6:	jbe    0x40a757
  40a6f8:	fisttp DWORD PTR [ecx+0x34]
  40a6fb:	sahf   
  40a6fc:	outs   dx,DWORD PTR ds:[esi]
  40a6fd:	adc    DWORD PTR [esi],esp
  40a6ff:	cmp    ecx,edi
  40a701:	dec    ebp
  40a702:	and    ebx,edi
  40a704:	pop    edi
  40a705:	(bad)  
  40a706:	lahf   
  40a707:	or     dl,BYTE PTR [eax+0x424207c3]
  40a70d:	sub    bh,0x4b
  40a710:	push   esi
  40a711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a712:	pop    es
  40a713:	sahf   
  40a714:	dec    esp
  40a715:	cli    
  40a716:	popa   
  40a717:	jg     0x40a782
  40a719:	jmp    0x40a728
  40a71b:	cmp    al,0x3f
  40a71d:	cli    
  40a71e:	(bad)  
  40a71f:	out    0x68,al
  40a721:	les    esi,FWORD PTR [edx+0x3d]
  40a724:	repz data16 fist DWORD PTR [esi+0x327d47c]
  40a72c:	sub    DWORD PTR [edx+0x2dcb3108],eax
  40a732:	daa    
  40a733:	or     DWORD PTR [edi+0x19],edx
  40a736:	ror    DWORD PTR [ebx-0x1a03c886],1
  40a73c:	rcr    DWORD PTR [ebx-0x1c8aa643],1
  40a742:	ja     0x40a76e
  40a744:	mov    ebp,0x39c2570f
  40a749:	pop    ebx
  40a74a:	push   eax
  40a74b:	adc    edi,DWORD PTR [ebx]
  40a74d:	xchg   edi,eax
  40a74e:	pop    ebp
  40a74f:	test   esi,0xa4d1d481
  40a755:	sti    
  40a756:	mov    esp,0x5180ce7a
  40a75b:	jmp    0xd11c40a7
  40a760:	aam    0x31
  40a762:	imul   ecx,DWORD PTR [esi+0xa],0xfffffff5
  40a766:	lods   al,BYTE PTR ss:[esi]
  40a768:	or     eax,0xa39f70f5
  40a76d:	xlat   BYTE PTR ds:[ebx]
  40a76e:	pop    esp
  40a76f:	repz fld TBYTE PTR [edx]
  40a772:	mov    WORD PTR [ebp+0x5e1e8166],ss
  40a778:	js     0x40a773
  40a77a:	jbe    0x40a7a3
  40a77c:	outs   dx,DWORD PTR ds:[esi]
  40a77d:	cmp    al,0xa4
  40a77f:	cwde   
  40a780:	in     eax,dx
  40a781:	stc    
  40a782:	in     al,0xcd
  40a784:	and    eax,0x597c82c0
  40a789:	and    cl,cl
  40a78b:	cmc    
  40a78c:	out    dx,eax
  40a78d:	addr16 mov al,0x2
  40a790:	(bad)  
  40a791:	push   ecx
  40a792:	shr    BYTE PTR [ebx-0x53d0f65a],0x28
  40a799:	and    ch,dl
  40a79b:	sbb    DWORD PTR [ebx+0x44],esi
  40a79e:	fs in  eax,0x37
  40a7a1:	ins    DWORD PTR es:[edi],dx
  40a7a2:	imul   edx,DWORD PTR [edx+ecx*1],0x5d2f676f
  40a7a9:	and    cl,BYTE PTR [eax]
  40a7ab:	xchg   ebp,eax
  40a7ac:	xchg   edx,eax
  40a7ad:	pop    ebx
  40a7ae:	adc    al,cl
  40a7b0:	cmc    
  40a7b1:	gs mov ch,0xdd
  40a7b4:	cwde   
  40a7b5:	popf   
  40a7b6:	cmp    ah,BYTE PTR [ebx]
  40a7b8:	cmc    
  40a7b9:	pop    ss
  40a7ba:	out    0x92,eax
  40a7bc:	das    
  40a7bd:	not    BYTE PTR [ebx-0x20]
  40a7c0:	mov    esi,0xf23b151
  40a7c5:	imul   esi,DWORD PTR [ecx],0xffffffe5
  40a7c8:	sahf   
  40a7c9:	sbb    BYTE PTR [ebp+0x29e673cf],dl
  40a7cf:	mov    ds:0x2ac87348,al
  40a7d4:	cli    
  40a7d5:	push   edx
  40a7d6:	rol    BYTE PTR [ebp-0x5e6b39c7],1
  40a7dc:	popf   
  40a7dd:	jmp    0x59943c9a
  40a7e2:	pop    es
  40a7e3:	sahf   
  40a7e4:	cld    
  40a7e5:	xchg   esp,eax
  40a7e6:	shr    DWORD PTR [ecx+0x68],cl
  40a7e9:	fs call 0xf7b8793a
  40a7ef:	adc    al,0xed
  40a7f1:	mov    fs,WORD PTR [ebp-0x42]
  40a7f4:	lock xchg edx,eax
  40a7f6:	jnp    0x40a83d
  40a7f8:	lock cld 
  40a7fa:	shl    BYTE PTR [ebp-0x47087b69],1
  40a800:	and    DWORD PTR [edi-0x7fce520e],ecx
  40a806:	add    ebx,edi
  40a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a809:	push   es
  40a80a:	test   edi,edx
  40a80c:	(bad)
  40a810:	xor    al,0xf6
  40a812:	push   0xffffffdf
  40a814:	push   0xd4d74506
  40a819:	dec    esp
  40a81a:	pop    edx
  40a81b:	inc    ebp
  40a81c:	lods   eax,DWORD PTR ds:[esi]
  40a81d:	in     eax,dx
  40a81e:	ss clc 
  40a820:	mov    cl,0x96
  40a822:	dec    ebx
  40a823:	xchg   esi,eax
  40a824:	fld    TBYTE PTR [ebp-0x6492cec1]
  40a82a:	cmp    DWORD PTR [ebx+0x3f],ecx
  40a82d:	xchg   BYTE PTR [ebx+0x601707ab],al
  40a833:	loopne 0x40a7ff
  40a835:	aaa    
  40a836:	scas   al,BYTE PTR es:[edi]
  40a837:	jg     0x40a7c9
  40a839:	ins    DWORD PTR es:[edi],dx
  40a83a:	out    0x36,eax
  40a83c:	sti    
  40a83d:	lods   al,BYTE PTR ds:[esi]
  40a83e:	sbb    eax,0x35ea1593
  40a843:	push   0x77474702
  40a848:	xchg   esi,eax
  40a849:	clc    
  40a84a:	and    ebp,esp
  40a84c:	push   esp
  40a84d:	(bad)  
  40a84e:	lahf   
  40a84f:	and    al,0xec
  40a851:	mov    al,ds:0xbd589f62
  40a856:	cmp    al,0xc7
  40a858:	repnz repnz sub al,BYTE PTR [edx-0x6e]
  40a85d:	ins    DWORD PTR es:[edi],dx
  40a85e:	ja     0x40a81c
  40a860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a861:	call   0x54b1:0xa65c5513
  40a868:	xchg   ebx,eax
  40a869:	mov    ecx,0x2f410580
  40a86e:	imul   esp,edi,0x417753c9
  40a874:	inc    ebx
  40a875:	int    0x27
  40a877:	pop    esi
  40a878:	lock div BYTE PTR [ecx+0x66]
  40a87c:	pop    ss
  40a87d:	mov    ds:0x9316f21d,eax
  40a882:	inc    ecx
  40a883:	jg     0x40a89f
  40a885:	mov    DWORD PTR [ebx],0x594b0508
  40a88b:	pop    ss
  40a88c:	cmp    dh,dh
  40a88e:	aam    0x85
  40a890:	adc    ch,BYTE PTR [esi]
  40a892:	push   edx
  40a893:	inc    esp
  40a894:	aad    0x89
  40a896:	lods   al,BYTE PTR ds:[esi]
  40a897:	push   eax
  40a898:	lods   al,BYTE PTR ds:[esi]
  40a899:	imul   bh
  40a89b:	idiv   BYTE PTR ds:0xaf6f6ded
  40a8a1:	pop    es
  40a8a2:	inc    ecx
  40a8a3:	enter  0x1805,0x48
  40a8a7:	je     0x40a91a
  40a8a9:	inc    ebp
  40a8aa:	pop    DWORD PTR [edi+eax*4+0x6d]
  40a8ae:	sub    eax,0x4a7d055e
  40a8b3:	repz in al,dx
  40a8b5:	pop    ds
  40a8b6:	cli    
  40a8b7:	arpl   WORD PTR fs:[eax-0xd09c861],dx
  40a8be:	call   0xa9c87b09
  40a8c3:	mov    esi,fs
  40a8c5:	jbe    0x40a85b
  40a8c7:	jne    0x40a8ce
  40a8c9:	push   edx
  40a8ca:	retf   
  40a8cb:	inc    ebx
  40a8cc:	pop    eax
  40a8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ce:	mov    ebp,0xbcca93b
  40a8d3:	mov    eax,ds:0xa2fa7f45
  40a8d8:	xchg   esi,eax
  40a8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8da:	fld    QWORD PTR ds:[ebx]
  40a8dd:	push   ebp
  40a8de:	jbe    0x40a8e2
  40a8e0:	sub    al,0xe2
  40a8e2:	fbld   TBYTE PTR ds:[eax-0x3d]
  40a8e6:	pop    es
  40a8e7:	push   ecx
  40a8e8:	lock loopne 0x40a8b9
  40a8eb:	cwde   
  40a8ec:	sbb    ecx,DWORD PTR [ecx-0x2fefbe27]
  40a8f2:	pop    edx
  40a8f3:	nop
  40a8f4:	xor    eax,0xb362e37
  40a8f9:	mov    BYTE PTR [ebx],dl
  40a8fb:	das    
  40a8fc:	pop    edx
  40a8fd:	adc    DWORD PTR ds:0x46406e34,ecx
  40a903:	fs mov cl,0x71
  40a906:	mov    esp,0x3d5392b
  40a90b:	mov    fs,WORD PTR [esi+0x2259c355]
  40a911:	out    0x99,al
  40a913:	jge    0x40a96d
  40a915:	dec    edx
  40a916:	mov    ebp,0xe66c38bb
  40a91b:	mov    ss,WORD PTR [ecx+0x6d04180]
  40a921:	sbb    ah,BYTE PTR [edi-0x3d]
  40a924:	repnz lods eax,DWORD PTR ds:[esi]
  40a926:	xchg   edx,eax
  40a927:	push   ecx
  40a928:	gs ret 
  40a92a:	dec    esi
  40a92b:	stos   BYTE PTR es:[edi],al
  40a92c:	out    dx,eax
  40a92d:	test   al,0xa6
  40a92f:	dec    ebp
  40a930:	clc    
  40a931:	cmp    al,bh
  40a933:	pusha  
  40a934:	test   ecx,ebp
  40a936:	jae    0x40a916
  40a938:	aad    0x11
  40a93a:	pop    edi
  40a93b:	cs fwait
  40a93d:	sub    al,0x66
  40a93f:	lods   eax,DWORD PTR ds:[esi]
  40a940:	and    ch,BYTE PTR [edi]
  40a942:	cdq    
  40a943:	(bad)
  40a947:	fidiv  WORD PTR ss:[ecx]
  40a94a:	mov    ecx,0x2188046c
  40a94f:	ins    BYTE PTR es:[edi],dx
  40a950:	hlt    
  40a951:	aam    0xd9
  40a953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a954:	add    al,0x3b
  40a956:	push   ss
  40a957:	mov    ch,0x5
  40a959:	xor    al,0xde
  40a95b:	in     eax,0x60
  40a95d:	and    edx,esp
  40a95f:	push   eax
  40a960:	lods   al,BYTE PTR ds:[esi]
  40a961:	add    al,0xb
  40a963:	and    al,0x13
  40a965:	or     al,0x58
  40a967:	pop    ebx
  40a968:	scas   eax,DWORD PTR es:[edi]
  40a969:	jle    0x40a9b8
  40a96b:	or     al,0x8b
  40a96d:	rcr    BYTE PTR [eax-0x66],0xc5
  40a971:	and    DWORD PTR [edi+0x18c6f6f1],ecx
  40a977:	inc    ecx
  40a978:	add    edx,DWORD PTR [eax]
  40a97a:	mov    al,ds:0xbf49dad8
  40a97f:	cmp    DWORD PTR [ecx+eiz*2],esi
  40a982:	popa   
  40a983:	test   DWORD PTR [ecx+0x12f85b56],edi
  40a989:	cs aad 0xda
  40a98c:	leave  
  40a98d:	jns    0x40a9ac
  40a98f:	sbb    BYTE PTR [edi],0x80
  40a992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a993:	nop
  40a994:	in     eax,0x5c
  40a996:	mov    esi,0x54cb6373
  40a99b:	mov    esi,0xf17f5bbc
  40a9a0:	xchg   DWORD PTR [edi+0x76],eax
  40a9a3:	cmp    DWORD PTR [edi-0x19bc3822],0x65
  40a9aa:	inc    edx
  40a9ab:	jb     0x40a9a6
  40a9ad:	jl     0x40a9a0
  40a9af:	add    BYTE PTR [edx],0x19
  40a9b2:	adc    dl,BYTE PTR [eax+0x637bd99a]
  40a9b8:	mul    BYTE PTR [eax+0x25]
  40a9bb:	nop
  40a9bc:	iret   
  40a9bd:	sub    edx,DWORD PTR ds:0xac9da89
  40a9c3:	lahf   
  40a9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c5:	in     al,0x6b
  40a9c7:	in     eax,dx
  40a9c8:	or     DWORD PTR [esi+eax*1+0x53469070],eax
  40a9cf:	fsub   st,st(7)
  40a9d1:	mov    eax,0x339a1d64
  40a9d6:	retf   
  40a9d7:	xchg   edx,eax
  40a9d8:	lods   eax,DWORD PTR ds:[esi]
  40a9d9:	sahf   
  40a9da:	add    eax,DWORD PTR [ebx]
  40a9dc:	sub    cl,BYTE PTR [ebx]
  40a9de:	int    0x27
  40a9e0:	jle    0x40a967
  40a9e2:	scas   al,BYTE PTR es:[edi]
  40a9e3:	mov    ah,0x18
  40a9e5:	adc    dl,BYTE PTR [esi+eax*8+0x1c]
  40a9e9:	sbb    al,0xdc
  40a9eb:	dec    edi
  40a9ec:	in     al,dx
  40a9ed:	ins    DWORD PTR es:[edi],dx
  40a9ee:	in     al,0xc7
  40a9f0:	sub    DWORD PTR fs:[esi-0x331e3d87],edi
  40a9f7:	xor    DWORD PTR [edi+0x71e3ce41],esi
  40a9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fe:	popa   
  40a9ff:	imul   ch
  40aa01:	(bad)  
  40aa02:	push   ds
  40aa03:	sti    
  40aa04:	fld    DWORD PTR [edx-0x5235ed6e]
  40aa0a:	inc    edi
  40aa0b:	and    eax,0x547792ff
  40aa10:	test   eax,0x5d1bcd9e
  40aa15:	leave  
  40aa16:	sub    BYTE PTR [edi+0x472e0dcd],bh
  40aa1c:	or     bh,BYTE PTR [esi+0x4cdc40d8]
  40aa22:	int3   
  40aa23:	push   esi
  40aa24:	ins    DWORD PTR es:[edi],dx
  40aa25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa26:	cmp    dh,BYTE PTR [ebp+0x608adcbf]
  40aa2c:	sbb    al,0x85
  40aa2e:	push   esi
  40aa2f:	(bad)  
  40aa30:	das    
  40aa31:	adc    DWORD PTR [esi],ebp
  40aa33:	movnti DWORD PTR [ebp-0x2571f7eb],esi
  40aa3a:	jg     0x40aaae
  40aa3c:	or     edx,DWORD PTR [esi]
  40aa3e:	xor    ebp,DWORD PTR [edx+ebx*8]
  40aa41:	sbb    al,0xa3
  40aa43:	loop   0x40aa35
  40aa45:	xor    edi,ebp
  40aa47:	test   eax,0xee49f12c
  40aa4c:	aaa    
  40aa4d:	or     ch,bl
  40aa4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa50:	fild   DWORD PTR [eax-0x32]
  40aa53:	jnp    0x40aacb
  40aa55:	add    al,0xbb
  40aa57:	mov    dh,0xa8
  40aa59:	es loopne 0x40a9fb
  40aa5c:	jns    0x40aa6e
  40aa5e:	arpl   WORD PTR [edx-0x76d3f84],dx
  40aa64:	inc    edi
  40aa65:	mov    dh,dl
  40aa67:	retf   0x79e4
  40aa6a:	cmp    WORD PTR [edi],dx
  40aa6d:	div    BYTE PTR [ecx+0x766b44e3]
  40aa73:	test   al,0x51
  40aa75:	repnz dec ecx
  40aa77:	stc    
  40aa78:	fsubp  st(5),st
  40aa7a:	(bad)  
  40aa7b:	imul   bx,bp,0x5d
  40aa7f:	je     0x40aa8d
  40aa81:	les    edi,FWORD PTR ds:0xacbd1c2a
  40aa87:	aam    0x4e
  40aa89:	push   ebx
  40aa8a:	adc    dh,BYTE PTR [eax+0x69537ee4]
  40aa90:	ss push edx
  40aa92:	mov    BYTE PTR [esi+eiz*8],cl
  40aa95:	push   esi
  40aa96:	(bad)  
  40aa97:	mov    eax,0x11ed8882
  40aa9c:	enter  0x9c25,0x6d
  40aaa0:	push   0xe62ed5d9
  40aaa5:	mov    bh,0x26
  40aaa7:	or     DWORD PTR [esi+0x61],ecx
  40aaaa:	xchg   ebp,eax
  40aaab:	shl    DWORD PTR [esi+0x77],0xbe
  40aaaf:	inc    esp
  40aab0:	mov    cl,0x1d
  40aab2:	mov    dl,ah
  40aab4:	mov    esp,0xaa774ebf
  40aab9:	dec    edx
  40aaba:	jae    0x40aa4c
  40aabc:	add    esp,DWORD PTR [edx]
  40aabe:	jo     0x40ab2b
  40aac0:	add    BYTE PTR [edi],0xc5
  40aac3:	mov    ds:0x56148c1,eax
  40aac8:	xchg   esp,eax
  40aac9:	push   esi
  40aaca:	jge    0x40aa7c
  40aacc:	push   cs
  40aacd:	dec    eax
  40aace:	xchg   edx,eax
  40aacf:	pop    edx
  40aad0:	sbb    eax,0x8099eef4
  40aad5:	repz add eax,0x9d643f7f
  40aadb:	out    dx,al
  40aadc:	jno    0x40ab18
  40aade:	mov    bh,BYTE PTR [ecx-0x28]
  40aae1:	(bad)  
  40aae2:	cdq    
  40aae3:	neg    DWORD PTR [ebx-0x6077aeb]
  40aae9:	cmp    ebx,DWORD PTR [ebx+0x2a]
  40aaec:	and    DWORD PTR [ebx+0x54],edx
  40aaef:	cmp    edx,DWORD PTR [edx+0x183bf367]
  40aaf5:	imul   ecx,DWORD PTR [ecx+0x34f2a309],0xffffffb6
  40aafc:	sbb    BYTE PTR [eax-0x50],dh
  40aaff:	in     eax,dx
  40ab00:	pop    ds
  40ab01:	and    eax,0xe6bfc17b
  40ab06:	cs pop ecx
  40ab08:	mov    ecx,0xd8d55d02
  40ab0d:	dec    eax
  40ab0e:	sahf   
  40ab0f:	jbe    0x40ab4a
  40ab11:	fild   DWORD PTR [edx]
  40ab13:	es push cs
  40ab15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab16:	sub    DWORD PTR [eax],ebp
  40ab18:	mov    bh,0xe2
  40ab1a:	sbb    edi,DWORD PTR [ebp+0x716dbe37]
  40ab20:	xchg   ebp,eax
  40ab21:	and    edi,ecx
  40ab23:	jmp    0x800aefe3
  40ab28:	out    0x26,al
  40ab2a:	mov    edi,0x337178a9
  40ab2f:	sbb    al,0xa9
  40ab31:	sbb    eax,0xd408fb2e
  40ab36:	(bad)  
  40ab38:	repnz in eax,dx
  40ab3a:	pop    esp
  40ab3b:	iret   
  40ab3c:	mov    ds,WORD PTR [edx+0x58]
  40ab3f:	out    0x2f,eax
  40ab41:	stos   BYTE PTR es:[edi],al
  40ab42:	pop    ebp
  40ab43:	nop
  40ab44:	and    al,0x2d
  40ab46:	fidiv  DWORD PTR [edi-0x552f7cb0]
  40ab4c:	add    al,0x1
  40ab4e:	out    dx,eax
  40ab4f:	popf   
  40ab50:	imul   esi,DWORD PTR [esi+0x4760d494],0x65
  40ab57:	pop    esi
  40ab58:	ja     0x40aae4
  40ab5a:	push   ebp
  40ab5b:	or     DWORD PTR [ebp-0x1145e4fa],0x1e
  40ab62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab63:	dec    eax
  40ab64:	mov    al,0xec
  40ab66:	sar    BYTE PTR [ebx+0x23437c6b],cl
  40ab6c:	ror    esi,0xf9
  40ab6f:	jb     0x40ab5c
  40ab71:	inc    DWORD PTR [ecx+ecx*8]
  40ab74:	lods   eax,DWORD PTR ds:[esi]
  40ab75:	mov    eax,0xfca2019e
  40ab7a:	bound  edx,QWORD PTR [eax+0x2a]
  40ab7d:	not    DWORD PTR [ecx+0x37ddc845]
  40ab83:	mov    esi,DWORD PTR [edx-0x55]
  40ab86:	aam    0x89
  40ab88:	cmp    edi,DWORD PTR [eax]
  40ab8a:	sub    ebx,DWORD PTR [edx-0x766bc3e6]
  40ab90:	and    eax,0xcd04edd7
  40ab95:	inc    ebx
  40ab96:	(bad)  
  40ab97:	(bad)  [edi-0x3ea4e93b]
  40ab9d:	sub    DWORD PTR ds:0x2f7f555e,esi
  40aba3:	add    BYTE PTR [eax+0x38],dl
  40aba6:	jge    0x40abd7
  40aba8:	addr16 jbe 0x40ab30
  40abab:	test   eax,0xf73b9c8
  40abb0:	arpl   WORD PTR [eax+eiz*4],di
  40abb3:	sbb    BYTE PTR [esi+0x434d5faa],ch
  40abb9:	mov    eax,0xdb917553
  40abbe:	mov    ds,WORD PTR [esi-0x74]
  40abc1:	dec    esi
  40abc2:	(bad)  
  40abc3:	popf   
  40abc4:	es or  al,0xb0
  40abc7:	mov    ds:0xdfe164cc,al
  40abcc:	jge    0x40abeb
  40abce:	nop
  40abcf:	sub    al,0x50
  40abd1:	fnstcw WORD PTR cs:[ebp-0x7f]
  40abd5:	xchg   edx,eax
  40abd6:	enter  0x6e6d,0xb4
  40abda:	jmp    0x742f:0xfb20d451
  40abe1:	jno    0x40ab6a
  40abe3:	out    dx,eax
  40abe4:	mov    ch,0x78
  40abe6:	jmp    0x40ab79
  40abe8:	popf   
  40abe9:	in     al,0x3a
  40abeb:	test   eax,0x357afdca
  40abf0:	xlat   BYTE PTR ds:[ebx]
  40abf1:	sbb    DWORD PTR [edi-0xd],0xa542be7d
  40abf8:	add    eax,0xfbc890a2
  40abfd:	fsub   QWORD PTR [ebp+0x39dc66c8]
  40ac03:	sub    al,0x43
  40ac05:	fld    DWORD PTR [edx-0x3a]
  40ac08:	jle    0x40abb5
  40ac0a:	nop
  40ac0b:	adc    al,0x39
  40ac0d:	gs jbe 0x40abaa
  40ac10:	(bad)  
  40ac11:	mov    ds:0xeb75f27d,al
  40ac16:	out    dx,al
  40ac17:	mov    ds,ebx
  40ac19:	push   0x357113e8
  40ac1e:	pop    ecx
  40ac1f:	sbb    eax,0xa7e11159
  40ac24:	lea    esp,[edx]
  40ac26:	dec    esi
  40ac27:	push   ds
  40ac28:	fisubr DWORD PTR [edi-0x1cdf7b28]
  40ac2e:	lock push DWORD PTR [edi+0x8]
  40ac32:	push   cs
  40ac33:	and    edi,DWORD PTR gs:[ecx-0x30]
  40ac37:	xor    dl,BYTE PTR [ebx+0x6b497290]
  40ac3d:	jg     0x40acaa
  40ac3f:	adc    ecx,edi
  40ac41:	retf   0x9d39
  40ac44:	lods   eax,DWORD PTR ds:[esi]
  40ac45:	je     0x40ac26
  40ac47:	jmp    0x40abfa
  40ac49:	jmp    0x7226:0xabf2196d
  40ac50:	push   eax
  40ac51:	test   BYTE PTR [eax+esi*8],bl
  40ac54:	mov    eax,ds:0x70b986fa
  40ac59:	scas   al,BYTE PTR es:[edi]
  40ac5a:	xor    DWORD PTR [edi+0x62],edi
  40ac5d:	in     eax,dx
  40ac5e:	jae    0x40acd3
  40ac60:	mov    WORD PTR [edi],fs
  40ac62:	int    0x22
  40ac64:	retf   0xc45a
  40ac67:	rol    DWORD PTR [edi-0x13],cl
  40ac6a:	test   eax,0x8d5674a6
  40ac6f:	ins    DWORD PTR es:[edi],dx
  40ac70:	(bad)  
  40ac71:	sbb    DWORD PTR [ebx-0x1c],edx
  40ac74:	jmp    0x9853:0x88ee765d
  40ac7b:	enter  0xe0f4,0x13
  40ac7f:	sahf   
  40ac80:	and    esi,esi
  40ac82:	mov    dh,0xe7
  40ac84:	jae    0x40ac10
  40ac86:	call   DWORD PTR [esi-0x28]
  40ac89:	aad    0x2b
  40ac8b:	out    dx,eax
  40ac8c:	outs   dx,DWORD PTR ds:[esi]
  40ac8d:	push   esi
  40ac8e:	sbb    BYTE PTR [edx],ch
  40ac90:	inc    ebx
  40ac91:	fnstcw WORD PTR [ecx+ebp*2+0x2c4cde87]
  40ac98:	pusha  
  40ac99:	push   ebx
  40ac9a:	in     eax,dx
  40ac9b:	pop    ds
  40ac9c:	sti    
  40ac9d:	jo     0x40ac44
  40ac9f:	(bad)  [eax-0x64]
  40aca2:	and    ch,cl
  40aca4:	stc    
  40aca5:	int3   
  40aca6:	push   ebx
  40aca7:	mov    WORD PTR [edx+0x7da68eb3],ss
  40acad:	pop    esi
  40acae:	test   eax,0x7745d1b0
  40acb3:	pusha  
  40acb4:	leave  
  40acb5:	in     al,0xd8
  40acb7:	xchg   BYTE PTR [ecx-0x7d],cl
  40acba:	push   eax
  40acbb:	sar    edx,1
  40acbd:	pop    edi
  40acbe:	out    dx,ax
  40acc0:	sti    
  40acc1:	push   0x24685ba0
  40acc6:	inc    ebp
  40acc7:	add    al,0xec
  40acc9:	mov    edx,0x846467f4
  40acce:	mov    ds:0xf5a6f78c,eax
  40acd3:	pop    ds
  40acd4:	clc    
  40acd5:	popa   
  40acd6:	jne    0x40ac76
  40acd8:	and    BYTE PTR [ebp+edi*8+0x51f76804],cl
  40acdf:	inc    ecx
  40ace0:	pop    esp
  40ace1:	enter  0x6fdb,0x4
  40ace5:	inc    DWORD PTR [edi]
  40ace7:	mov    al,ds:0xd9e68557
  40acec:	in     al,0x71
  40acee:	or     eax,0x67465319
  40acf3:	jmp    0x24963077
  40acf8:	das    
  40acf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acfa:	ins    BYTE PTR es:[edi],dx
  40acfb:	gs inc esp
  40acfd:	push   ss
  40acfe:	das    
  40acff:	retf   
  40ad00:	mov    edi,0x7983ed6c
  40ad05:	mov    ss,WORD PTR [edx-0x4a]
  40ad08:	pusha  
  40ad09:	pop    es
  40ad0a:	fild   QWORD PTR [esi-0x49]
  40ad0d:	sub    cl,bh
  40ad0f:	mov    edi,0xb468a15b
  40ad14:	shl    ebp,0xb7
  40ad17:	add    BYTE PTR [ebx-0xd],0xa3
  40ad1b:	and    dl,0x64
  40ad1e:	mov    WORD PTR [ecx],gs
  40ad20:	cwde   
  40ad21:	int3   
  40ad22:	cmp    eax,0x5dd51170
  40ad27:	jo     0x40ad79
  40ad29:	sbb    BYTE PTR [ecx-0xf],0xaf
  40ad2d:	call   0x3ea2:0xcc30c99e
  40ad34:	hlt    
  40ad35:	fidiv  DWORD PTR [eax+0x61]
  40ad38:	pushf  
  40ad39:	(bad)  
  40ad3a:	(bad)  
  40ad3c:	jmp    0x40ada7
  40ad3e:	or     eax,0xf2cc7630
  40ad43:	push   edi
  40ad44:	scas   al,BYTE PTR es:[edi]
  40ad45:	daa    
  40ad46:	mov    DWORD PTR [ecx],esp
  40ad48:	lahf   
  40ad49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad4a:	clc    
  40ad4b:	push   edx
  40ad4c:	mov    ecx,0x4ddcb56
  40ad51:	mov    eax,ds:0x533e0c3d
  40ad56:	mov    bh,0x57
  40ad58:	inc    ebp
  40ad59:	push   ebx
  40ad5a:	fldcw  WORD PTR ds:[ebp-0x58]
  40ad5e:	push   eax
  40ad5f:	adc    ebp,ebx
  40ad61:	out    0xef,eax
  40ad63:	jns    0x40ad53
  40ad65:	dec    ebx
  40ad66:	in     eax,dx
  40ad67:	dec    edx
  40ad68:	inc    ebx
  40ad69:	push   esi
  40ad6a:	arpl   di,di
  40ad6c:	mov    edx,0x8f09b44e
  40ad71:	retf   
  40ad72:	or     BYTE PTR [esi+0x65],ch
  40ad75:	retf   0xb64b
  40ad78:	leave  
  40ad79:	mov    esi,0xdad0ba4d
  40ad7e:	pop    eax
  40ad7f:	or     ebp,DWORD PTR [eax+0x52ee0399]
  40ad85:	outs   dx,BYTE PTR ds:[esi]
  40ad86:	cmc    
  40ad87:	in     eax,dx
  40ad88:	pop    ds
  40ad89:	push   ebx
  40ad8a:	fdivrp st(2),st
  40ad8c:	mov    cs,esp
  40ad8e:	xor    al,0xf4
  40ad90:	mov    eax,0x2b387050
  40ad95:	mov    ebp,0x7df94d7a
  40ad9a:	cdq    
  40ad9b:	or     BYTE PTR [edi-0x24],bh
  40ad9e:	jnp    0x40ada5
  40ada0:	cmp    DWORD PTR [esi-0x27],eax
  40ada3:	add    ebp,DWORD PTR [edi]
  40ada5:	adc    esp,DWORD PTR [edx+0x1c6f6963]
  40adab:	js     0x40ad5c
  40adad:	xchg   edi,eax
  40adae:	in     eax,0x40
  40adb0:	pop    es
  40adb1:	fwait
  40adb2:	scas   eax,DWORD PTR es:[edi]
  40adb3:	xchg   esi,eax
  40adb4:	data16 mov ch,bh
  40adb7:	out    0x5d,al
  40adb9:	adc    al,0x3b
  40adbb:	xchg   edi,eax
  40adbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbd:	nop
  40adbe:	jp     0x40ae22
  40adc0:	mov    al,0xec
  40adc2:	hlt    
  40adc3:	inc    esp
  40adc4:	repz sbb DWORD PTR [edx+0x4a1e99dd],edx
  40adcb:	test   eax,0x1bae91bf
  40add0:	adc    DWORD PTR [edi-0x4c],edx
  40add3:	push   ds
  40add4:	dec    edi
  40add5:	add    al,0xa4
  40add7:	cmp    eax,0x6cd429e6
  40addc:	sbb    bl,BYTE PTR [ecx-0x170215ee]
  40ade2:	(bad)  [edx+ebp*2+0x23]
  40ade6:	cmp    al,0x3f
  40ade8:	push   ds
  40ade9:	and    eax,0xce09b755
  40adee:	gs pushf 
  40adf0:	loop   0x40ad78
  40adf2:	adc    al,0xb7
  40adf4:	sbb    DWORD PTR [eax-0x65cfee69],esi
  40adfa:	rcr    DWORD PTR [eax],1
  40adfc:	cmp    BYTE PTR [eax+0x2c],bh
  40adff:	dec    edx
  40ae00:	into   
  40ae01:	adc    esi,DWORD PTR [eax]
  40ae03:	fsubr  DWORD PTR [ebx-0x33]
  40ae06:	jg     0x40ae0e
  40ae08:	inc    ebp
  40ae09:	ja     0x40ae08
  40ae0b:	call   0xf280235e
  40ae10:	ret    0x869d
  40ae13:	aam    0xc3
  40ae15:	xchg   BYTE PTR [ecx],ah
  40ae17:	push   0xffffffdd
  40ae19:	push   edi
  40ae1a:	cld    
  40ae1b:	mov    bh,0x5
  40ae1d:	or     al,0x93
  40ae1f:	xchg   edx,eax
  40ae20:	push   ecx
  40ae21:	neg    BYTE PTR [edi+ebp*1+0x57]
  40ae25:	ret    
  40ae26:	and    DWORD PTR [ebx-0x53df571a],esp
  40ae2c:	ins    BYTE PTR es:[edi],dx
  40ae2d:	cld    
  40ae2e:	and    al,0x74
  40ae30:	aaa    
  40ae31:	fadd   DWORD PTR [edx]
  40ae33:	mov    ds:0x9f6bee,al
  40ae38:	hlt    
  40ae39:	das    
  40ae3a:	into   
  40ae3b:	popa   
  40ae3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae3d:	inc    ebx
  40ae3e:	out    0xbf,eax
  40ae40:	stos   DWORD PTR es:[edi],eax
  40ae41:	in     al,0x97
  40ae43:	or     ecx,edi
  40ae45:	sub    esi,DWORD PTR [esi]
  40ae47:	mov    ch,0x57
  40ae49:	repnz (bad) 
  40ae4b:	pop    esi
  40ae4c:	outs   dx,BYTE PTR ds:[esi]
  40ae4d:	add    BYTE PTR [edx+eax*2+0x40],dh
  40ae51:	push   edi
  40ae52:	fld    st(5)
  40ae54:	ficomp DWORD PTR [ebx+0x6a]
  40ae57:	or     eax,0x6a4d63be
  40ae5c:	dec    esi
  40ae5d:	pop    edi
  40ae5e:	test   BYTE PTR [esi+0x54a6f162],dh
  40ae64:	sbb    DWORD PTR [esi-0x35dfec8],edx
  40ae6a:	jmp    0x2e6:0x9918bdc
  40ae71:	pusha  
  40ae72:	dec    edx
  40ae73:	and    al,0x5a
  40ae75:	jg     0x40ae01
  40ae77:	aaa    
  40ae78:	rol    ebx,cl
  40ae7a:	enter  0x856d,0x6d
  40ae7e:	fxch   st(2)
  40ae80:	cmp    BYTE PTR [edx+ebx*1-0x3cb25d8],bl
  40ae87:	xor    bl,BYTE PTR [edi-0x52747b66]
  40ae8d:	jne    0x40aec1
  40ae8f:	dec    eax
  40ae90:	mov    bh,0x2b
  40ae92:	sbb    BYTE PTR [edi+0x1b],ch
  40ae95:	call   0x1d00:0xd64c5bc1
  40ae9c:	or     ah,bl
  40ae9e:	add    DWORD PTR [ebx],eax
  40aea0:	mov    ecx,0xbf37d1ab
  40aea5:	cli    
  40aea6:	jle    0x40af15
  40aea8:	sbb    al,0xd7
  40aeaa:	shl    BYTE PTR [esp+ecx*4-0x80],0x51
  40aeaf:	sub    edi,DWORD PTR [edi-0x4c]
  40aeb2:	fistp  WORD PTR [esi+ebx*2]
  40aeb5:	jge    0x40af2b
  40aeb7:	mov    ds,WORD PTR [edi-0x3d]
  40aeba:	fst    DWORD PTR [edx]
  40aebc:	(bad)  
  40aebd:	xor    al,0xfc
  40aebf:	xor    al,BYTE PTR [esi+0xe]
  40aec2:	mov    ds:0xbe701626,eax
  40aec7:	mov    ds:0x1c251e11,al
  40aecc:	add    ecx,DWORD PTR [eax-0x3e]
  40aecf:	xchg   ecx,eax
  40aed0:	jno    0x40aeb6
  40aed2:	hlt    
  40aed3:	jle    0x40aed6
  40aed5:	les    esp,FWORD PTR [ebx+eiz*1+0x73]
  40aed9:	test   eax,0x41b742ed
  40aede:	dec    edi
  40aedf:	and    DWORD PTR [edi],esi
  40aee1:	add    bh,BYTE PTR [edi*1+0x1a1f6caa]
  40aee8:	pop    ebp
  40aee9:	mov    cl,0x79
  40aeeb:	xchg   esp,eax
  40aeec:	inc    edx
  40aeed:	xchg   ecx,eax
  40aeee:	adc    eax,0xfe58f2e0
  40aef3:	mov    bh,0x7b
  40aef5:	jno    0x40af01
  40aef7:	in     al,dx
  40aef8:	loope  0x40aef3
  40aefa:	and    BYTE PTR [ecx],bl
  40aefc:	jl     0x40aec8
  40aefe:	sahf   
  40aeff:	lock pop edi
  40af01:	xor    al,0x4d
  40af03:	pop    es
  40af04:	aad    0x24
  40af06:	push   ecx
  40af07:	leave  
  40af08:	or     BYTE PTR [eax-0x16],dl
  40af0b:	(bad)  
  40af0c:	push   ebx
  40af0d:	xlat   BYTE PTR ds:[ebx]
  40af0e:	cmp    ebp,DWORD PTR [ecx+0x5b]
  40af11:	dec    esp
  40af12:	pusha  
  40af13:	enter  0x7490,0x76
  40af17:	sar    DWORD PTR [ebx+edi*2-0x41],cl
  40af1b:	gs adc bh,dh
  40af1e:	stc    
  40af1f:	fnop   
  40af21:	inc    ebx
  40af22:	iret   
  40af23:	sbb    BYTE PTR [esi+0x32],al
  40af26:	adc    al,BYTE PTR [edi-0x6238fc59]
  40af2c:	std    
  40af2d:	xor    eax,0x3e5fa440
  40af32:	cld    
  40af33:	add    al,0x77
  40af35:	loope  0x40af20
  40af37:	mov    esp,0x2004813
  40af3c:	jns    0x40af6f
  40af3e:	shr    dh,1
  40af40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af41:	sti    
  40af42:	cmp    DWORD PTR [ebx],esp
  40af44:	outs   dx,BYTE PTR ds:[esi]
  40af45:	dec    esp
  40af46:	jecxz  0x40af0c
  40af48:	mov    dh,0x74
  40af4a:	shl    DWORD PTR [edx-0x26],1
  40af4d:	sub    BYTE PTR [edi-0x66],0x7
  40af51:	push   0x8edcac7e
  40af56:	je     0x40aed9
  40af58:	push   esp
  40af59:	jmp    0x96f4:0xc04dbdeb
  40af60:	loopne 0x40aef9
  40af62:	(bad)  
  40af63:	pop    esp
  40af64:	cwde   
  40af65:	repnz imul sp,WORD PTR [ebx+0x12070409],0x40
  40af6e:	push   ebx
  40af6f:	(bad)  
  40af70:	retf   0xbdb3
  40af73:	sub    ah,BYTE PTR [esi+0x1e978984]
  40af79:	sbb    al,0xa
  40af7b:	(bad)  
  40af7c:	mov    dh,0x5a
  40af7e:	frstor [edi]
  40af80:	and    eax,0x523c7254
  40af85:	pusha  
  40af86:	rcr    BYTE PTR [edx-0x2bff0b24],1
  40af8c:	in     eax,dx
  40af8d:	mov    cs,WORD PTR [ebp-0x37]
  40af90:	fwait
  40af91:	leave  
  40af92:	mov    dl,0xd1
  40af94:	xchg   DWORD PTR [esi+ebx*4+0x35ad32e2],eax
  40af9b:	test   BYTE PTR [ebx+eax*1+0xe],ch
  40af9f:	dec    ebp
  40afa0:	add    bh,dl
  40afa2:	(bad)  
  40afa3:	sbb    ebp,DWORD PTR [ebp-0x3f0c721c]
  40afa9:	pop    DWORD PTR gs:[esi+0x4db26f01]
  40afb0:	stc    
  40afb1:	mov    es,ebx
  40afb3:	sub    bl,bl
  40afb5:	sub    ebx,ecx
  40afb7:	mov    eax,0xdaccc0e
  40afbc:	mov    dh,0x54
  40afbe:	pop    si
  40afc0:	mov    dh,0xfb
  40afc2:	dec    edx
  40afc3:	les    ebx,FWORD PTR [edx+0x6f]
  40afc6:	inc    edx
  40afc7:	mov    eax,0xe58ae6e5
  40afcc:	xlat   BYTE PTR ds:[ebx]
  40afcd:	mov    eax,DWORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x8129b0d0,0x13
  40afff:	mov    ds:0x83f4292b,al
  40b004:	or     DWORD PTR [esi+ebx*2],0xffffff83
  40b008:	cmp    esi,0x22
  40b00b:	adc    al,0x40
  40b00d:	push   cs
  40b00e:	adc    al,0x3d
  40b010:	jmp    0xb28282a6
  40b015:	inc    esi
  40b016:	out    0x6c,al
  40b018:	lds    edx,FWORD PTR [edi]
  40b01a:	or     DWORD PTR [edi+0x4eb013ca],esi
  40b020:	ret    0x1531
  40b023:	test   BYTE PTR [ebx-0x22],al
  40b026:	fs lahf 
  40b028:	cmp    DWORD PTR [edx+0x5e],ebx
  40b02b:	(bad)  
  40b02c:	mov    esi,0x5294b527
  40b031:	jb     0x40afc1
  40b033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b034:	mov    eax,ecx
  40b036:	in     al,dx
  40b037:	das    
  40b038:	push   ss
  40b039:	pop    ss
  40b03a:	mov    eax,ds:0xf88a0e5e
  40b03f:	jne    0x40b095
  40b041:	loop   0x40b043
  40b043:	push   0xffffff90
  40b045:	xchg   edi,eax
  40b046:	ror    BYTE PTR [edx+edx*4],cl
  40b049:	addr16 push edx
  40b04b:	les    ecx,FWORD PTR [ecx]
  40b04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04e:	int3   
  40b04f:	fistp  WORD PTR ss:[ecx+0xcdb5619]
  40b056:	out    0x6c,eax
  40b058:	mov    eax,ds
  40b05a:	cwde   
  40b05b:	mov    esp,0x60db5f6b
  40b060:	(bad)  
  40b062:	push   esp
  40b063:	sub    esp,ebp
  40b065:	jge    0x40b0ba
  40b067:	xchg   esi,eax
  40b068:	pop    ecx
  40b069:	mov    edi,DWORD PTR [ecx+0x4d7ff08a]
  40b06f:	xor    al,cl
  40b071:	popf   
  40b072:	sbb    bl,BYTE PTR [ebx+0x24]
  40b075:	les    ecx,FWORD PTR [ebx+ecx*4]
  40b078:	jbe    0x40b016
  40b07a:	iret   
  40b07b:	push   ds
  40b07c:	jne    0x40b0ec
  40b07e:	dec    ebx
  40b07f:	mov    ah,0xd7
  40b081:	sbb    eax,0x15aaa2d9
  40b086:	cmp    bl,al
  40b088:	dec    edi
  40b089:	rol    DWORD PTR [ebx+ebx*4+0xd2bd26],0x31
  40b091:	ins    BYTE PTR es:[edi],dx
  40b092:	nop
  40b093:	sbb    al,0x3
  40b095:	in     al,0xce
  40b097:	mov    cl,0x6b
  40b099:	dec    edx
  40b09a:	dec    esi
  40b09b:	fisubr DWORD PTR ds:0x52987fb9
  40b0a1:	cs aaa 
  40b0a3:	fs repnz in al,0x97
  40b0a7:	stos   DWORD PTR es:[edi],eax
  40b0a8:	mov    cl,0x5c
  40b0aa:	cld    
  40b0ab:	retf   0xfbc0
  40b0ae:	dec    esp
  40b0af:	jg     0x40b033
  40b0b1:	mov    WORD PTR [esi],?
  40b0b3:	inc    ebp
  40b0b4:	in     al,0xd4
  40b0b6:	test   al,0xc7
  40b0b8:	mov    WORD PTR [esi-0x12524fff],fs
  40b0be:	or     eax,DWORD PTR [ebx+ecx*2]
  40b0c1:	(bad)  
  40b0c2:	jge    0x40b10d
  40b0c4:	sbb    eax,0xa181af59
  40b0c9:	inc    eax
  40b0ca:	fimul  DWORD PTR [ecx]
  40b0cc:	lock out dx,al
  40b0ce:	mov    WORD PTR [esi],ds
  40b0d0:	jp     0x40b0fc
  40b0d2:	xchg   ebp,eax
  40b0d3:	rol    ch,1
  40b0d5:	sbb    BYTE PTR [esi+0x7c],0x6e
  40b0d9:	mov    cl,0x2c
  40b0db:	icebp  
  40b0dc:	mov    ecx,0x7e0f6628
  40b0e1:	aaa    
  40b0e2:	sub    bl,BYTE PTR [edi-0x33]
  40b0e5:	pop    es
  40b0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0e7:	cmp    ecx,DWORD PTR [edx]
  40b0e9:	mov    cl,0x74
  40b0eb:	xchg   BYTE PTR [ecx],bl
  40b0ed:	popa   
  40b0ee:	xchg   edi,eax
  40b0ef:	push   edx
  40b0f0:	xor    ecx,DWORD PTR [edx-0x1b]
  40b0f3:	nop
  40b0f4:	push   cs
  40b0f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f6:	adc    bl,bl
  40b0f8:	and    ah,BYTE PTR [esi+0x729c85af]
  40b0fe:	cmp    BYTE PTR [bp-0x1d],cl
  40b102:	jno    0x40b16d
  40b104:	jnp    0x40b115
  40b106:	arpl   WORD PTR [eax+0x40],si
  40b109:	aas    
  40b10a:	inc    eax
  40b10b:	into   
  40b10c:	sub    al,0x15
  40b10e:	jmp    0x9c30:0xe141b604
  40b115:	dec    edx
  40b116:	pop    esi
  40b117:	das    
  40b118:	sti    
  40b119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11a:	stos   DWORD PTR es:[edi],eax
  40b11b:	inc    esp
  40b11c:	ins    DWORD PTR es:[edi],dx
  40b11d:	pop    edi
  40b11e:	rol    edi,cl
  40b120:	cli    
  40b121:	pop    edi
  40b122:	xor    esi,DWORD PTR [eax-0x3b33ba7]
  40b128:	push   edi
  40b129:	jl     0x40b0d2
  40b12b:	loope  0x40b135
  40b12d:	repz and al,0x99
  40b130:	sbb    BYTE PTR [ebx+0x7c],al
  40b133:	add    al,0x6e
  40b135:	dec    edx
  40b136:	mov    al,ds:0x2d6fb6c6
  40b13b:	(bad)  
  40b13c:	or     al,0xf9
  40b13e:	push   edx
  40b13f:	cli    
  40b140:	mov    cl,0x3
  40b142:	adc    eax,DWORD PTR [ecx+0x50]
  40b145:	sbb    eax,ebx
  40b147:	jle    0x40b144
  40b149:	adc    al,0x26
  40b14b:	cmp    BYTE PTR [edx-0x6211f372],0xd3
  40b152:	jb     0x40b0d5
  40b154:	add    esp,esp
  40b156:	add    eax,0xc40004b6
  40b15b:	call   0x1e66d18a
  40b160:	les    edx,FWORD PTR [edi]
  40b162:	dec    ebp
  40b163:	sbb    BYTE PTR [ebx+0x32fc6824],dl
  40b169:	test   eax,0xdc6398e8
  40b16e:	aas    
  40b16f:	and    bl,BYTE PTR [esi+0x284279b8]
  40b175:	clc    
  40b176:	lds    esp,FWORD PTR [ebx-0xce7f964]
  40b17c:	dec    edx
  40b17d:	pop    edi
  40b17e:	not    DWORD PTR [edx+edx*1-0x5ccaea54]
  40b185:	dec    ebx
  40b186:	jmp    0x40b1f2
  40b188:	mov    dh,0xd2
  40b18a:	xlat   BYTE PTR ds:[ebx]
  40b18b:	sbb    eax,0x49d7f5a7
  40b190:	mov    dl,0xed
  40b192:	jnp    0x40b1d8
  40b194:	push   cs
  40b195:	sbb    DWORD PTR [edx],ebp
  40b197:	xor    ah,BYTE PTR [ecx]
  40b199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19a:	out    0x6f,al
  40b19c:	out    0x16,al
  40b19e:	retf   0xcf0d
  40b1a1:	loopne 0x40b1e6
  40b1a3:	mov    ebp,0xfa3ba9ce
  40b1a8:	aad    0x2a
  40b1aa:	sahf   
  40b1ab:	mov    bl,0xde
  40b1ad:	popa   
  40b1ae:	test   eax,edx
  40b1b0:	aas    
  40b1b1:	(bad)  
  40b1b2:	mov    WORD PTR [edi-0x61a31fde],gs
  40b1b8:	or     esp,0xffffff83
  40b1bb:	fmulp  st(6),st
  40b1bd:	scas   al,BYTE PTR es:[edi]
  40b1be:	ret    
  40b1bf:	xchg   si,ax
  40b1c1:	xor    bl,BYTE PTR [esi-0x6cd87476]
  40b1c7:	xchg   ebp,eax
  40b1c8:	test   al,0x3
  40b1cb:	jnp    0x40b174
  40b1cd:	push   ds
  40b1ce:	mov    al,bh
  40b1d0:	mov    ds:0x255e3e34,al
  40b1d5:	daa    
  40b1d6:	outs   dx,DWORD PTR ds:[esi]
  40b1d7:	enter  0x6a77,0x9c
  40b1db:	pop    edx
  40b1dc:	or     BYTE PTR [ecx-0x45],0xb8
  40b1e0:	fld    TBYTE PTR [ebx-0x5ef4344e]
  40b1e6:	cdq    
  40b1e7:	mov    esp,0x4b99b7dc
  40b1ec:	sbb    esi,DWORD PTR [ebp+0x5366a213]
  40b1f2:	aam    0x73
  40b1f4:	mov    ds:0x204aa0ef,eax
  40b1f9:	or     ebx,DWORD PTR [ebx]
  40b1fb:	ret    0xeb5b
  40b1fe:	xchg   ebp,eax
  40b1ff:	sub    BYTE PTR [edi+0x75],dl
  40b202:	call   0x7cb7:0x276f3ad
  40b209:	adc    eax,0x7af4f34e
  40b20e:	jnp    0x40b22c
  40b210:	lea    ebx,cs:[ecx]
  40b213:	ins    DWORD PTR es:[edi],dx
  40b214:	push   ecx
  40b215:	(bad)  
  40b216:	sub    al,0x55
  40b218:	inc    ecx
  40b219:	mov    bl,0x8
  40b21b:	inc    ecx
  40b21c:	hlt    
  40b21d:	jle    0x40b21f
  40b21f:	jmp    0x76b04c4
  40b224:	scas   eax,DWORD PTR es:[edi]
  40b225:	inc    edx
  40b226:	or     ebp,DWORD PTR [edi-0x56e9e280]
  40b22c:	dec    ebp
  40b22d:	push   esi
  40b22e:	rcl    DWORD PTR [edi],1
  40b230:	loopne 0x40b1de
  40b232:	pop    eax
  40b233:	push   es
  40b234:	mov    gs,eax
  40b236:	mov    al,BYTE PTR [ebx-0x31deb115]
  40b23c:	sti    
  40b23d:	pop    ds
  40b23e:	jg     0x40b219
  40b240:	in     eax,0x62
  40b242:	mov    ebp,DWORD PTR [edx-0x40]
  40b245:	fwait
  40b246:	push   si
  40b248:	loopne 0x40b2aa
  40b24a:	loopne 0x40b2b6
  40b24c:	add    DWORD PTR [edi],eax
  40b24e:	jns    0x40b259
  40b250:	les    ebp,FWORD PTR [eax-0x28]
  40b253:	inc    ebp
  40b254:	jle    0x40b1df
  40b256:	mov    dl,0x9a
  40b258:	outs   dx,DWORD PTR ds:[esi]
  40b259:	pop    esp
  40b25a:	sub    bl,bl
  40b25c:	lods   eax,DWORD PTR ds:[esi]
  40b25d:	fdiv   QWORD PTR [edx+0x14244bc6]
  40b263:	and    eax,0x13a53ebe
  40b268:	mov    ch,0x1e
  40b26a:	dec    esp
  40b26b:	dec    ebx
  40b26c:	xor    DWORD PTR [edi-0x6e],esp
  40b26f:	and    edx,ecx
  40b271:	icebp  
  40b272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b273:	rcl    esp,cl
  40b275:	push   cs
  40b276:	jmp    0xb68d8360
  40b27b:	jmp    0x9406:0xa0917e66
  40b282:	(bad)  
  40b283:	into   
  40b284:	das    
  40b285:	sbb    al,0x1d
  40b288:	inc    ebx
  40b289:	cdq    
  40b28a:	xor    edx,eax
  40b28c:	int3   
  40b28d:	fs sub eax,0x1e385f62
  40b293:	cmp    BYTE PTR [eax-0x7bb89d6b],0x3a
  40b29a:	pop    ss
  40b29b:	xchg   edx,eax
  40b29c:	scas   eax,DWORD PTR es:[edi]
  40b29d:	add    ebp,DWORD PTR [eax+0x4a]
  40b2a0:	fwait
  40b2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a2:	aaa    
  40b2a3:	lods   al,BYTE PTR ds:[esi]
  40b2a4:	fisttp QWORD PTR [eax]
  40b2a6:	out    0xac,al
  40b2a8:	lea    edx,[ebp-0x7c77bec7]
  40b2ae:	or     ecx,edi
  40b2b0:	xor    ebp,esp
  40b2b2:	mov    ebp,DWORD PTR [esi]
  40b2b4:	div    BYTE PTR [ecx+ecx*4]
  40b2b7:	mov    WORD PTR [ecx+0x571da256],ds
  40b2bd:	lea    ecx,[esi+0x76]
  40b2c0:	fwait
  40b2c1:	adc    edx,esi
  40b2c3:	loopne 0x40b26b
  40b2c5:	in     al,0x39
  40b2c7:	mov    edx,0x21a0a730
  40b2cc:	(bad)  
  40b2ce:	jle    0x40b2e8
  40b2d0:	ds fs xchg esp,eax
  40b2d3:	aad    0xc7
  40b2d5:	push   edi
  40b2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d7:	cmp    eax,0x13befd1a
  40b2dc:	adc    BYTE PTR [edi-0x4edafac5],0x60
  40b2e3:	dec    edi
  40b2e4:	pop    es
  40b2e5:	in     al,0x35
  40b2e7:	mov    dl,BYTE PTR [ecx-0x360915e1]
  40b2ed:	(bad)  
  40b2ee:	in     al,dx
  40b2ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2f0:	sub    bh,cl
  40b2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f3:	arpl   dx,dx
  40b2f5:	xor    eax,0x91047998
  40b2fa:	in     al,dx
  40b2fb:	(bad)  
  40b2fc:	std    
  40b2fd:	adc    DWORD PTR [edx-0x19],esp
  40b300:	dec    ecx
  40b301:	stc    
  40b302:	cmp    eax,DWORD PTR [edx]
  40b304:	adc    ebp,DWORD PTR [ebx]
  40b306:	in     al,dx
  40b307:	xchg   edi,eax
  40b308:	mov    edi,DWORD PTR [ecx-0x4759d0be]
  40b30e:	ins    DWORD PTR es:[edi],dx
  40b30f:	je     0x40b29e
  40b311:	(bad)  
  40b312:	cmp    eax,DWORD PTR [eax]
  40b314:	cmp    BYTE PTR [esi+0x7da5e8fb],dl
  40b31a:	mov    dh,0x32
  40b31c:	mov    ds:0xacea9041,al
  40b321:	push   esi
  40b322:	fs loope 0x40b2c4
  40b325:	mov    ah,dh
  40b327:	mov    ebx,0xba235e64
  40b32c:	pop    ecx
  40b32d:	and    eax,0x25ba2ab4
  40b332:	fnstenv [ebx+0x54c97f09]
  40b338:	pop    esp
  40b339:	iret   
  40b33a:	xchg   BYTE PTR [bp-0x66],ch
  40b33e:	in     al,dx
  40b33f:	jp     0x40b35d
  40b341:	les    eax,FWORD PTR [esi]
  40b343:	mov    dx,0xd27f
  40b347:	aam    0xf9
  40b349:	neg    DWORD PTR [edx+ecx*1-0x61bdf548]
  40b350:	adc    cl,BYTE PTR [edi-0x7e]
  40b353:	mov    esi,0x82ac3174
  40b358:	cmp    DWORD PTR [ebp+0x4222e2d4],eax
  40b35e:	push   cs
  40b35f:	ror    BYTE PTR [ebx],0x0
  40b362:	das    
  40b363:	out    dx,eax
  40b364:	scas   al,BYTE PTR es:[edi]
  40b365:	jb     0x40b385
  40b367:	jne    0x40b32b
  40b369:	mov    ?,WORD PTR [ebx+0x67a5af1a]
  40b36f:	paddsw mm0,QWORD PTR [ecx]
  40b372:	dec    ecx
  40b373:	or     ah,BYTE PTR [eax+0x29a42c46]
  40b379:	out    dx,eax
  40b37a:	xchg   esp,eax
  40b37b:	pop    ebp
  40b37c:	outs   dx,BYTE PTR ds:[esi]
  40b37d:	fcmovbe st,st(2)
  40b37f:	push   ecx
  40b380:	repz fcom DWORD PTR [edx-0x27]
  40b384:	cmp    eax,0x94eba516
  40b389:	mov    ds:0x2a2024d5,eax
  40b38e:	idiv   DWORD PTR ds:0xdd5b7f71
  40b394:	cmp    ecx,DWORD PTR [ebx-0x55e978d2]
  40b39a:	aaa    
  40b39b:	pop    esp
  40b39c:	cmp    esi,ebp
  40b39e:	mov    edi,DWORD PTR [ebp-0x5c1b1b57]
  40b3a4:	cld    
  40b3a5:	out    0xad,eax
  40b3a7:	mov    edx,0x28f0703c
  40b3ac:	rep lods eax,DWORD PTR ds:[esi]
  40b3ae:	repz pop ebp
  40b3b0:	sbb    DWORD PTR [eax-0x4f],edi
  40b3b3:	aas    
  40b3b4:	(bad)  
  40b3b5:	cli    
  40b3b6:	mov    ?,WORD PTR [edi+0xe8e7391]
  40b3bc:	adc    al,0xc6
  40b3be:	pop    es
  40b3bf:	repnz and eax,0x322d674a
  40b3c5:	jge    0x40b3fb
  40b3c7:	lea    esp,[edi+0x1c]
  40b3ca:	out    0xae,al
  40b3cc:	sub    al,BYTE PTR [edi+0x1f3bcae2]
  40b3d2:	xor    eax,0xfcd3e00
  40b3d7:	ds inc ebx
  40b3d9:	fbld   TBYTE PTR [eax-0x29]
  40b3dc:	ret    0x8c4a
  40b3df:	push   edi
  40b3e0:	lods   al,BYTE PTR ds:[esi]
  40b3e1:	xor    eax,0xaeaa821f
  40b3e6:	and    ebp,DWORD PTR [edi]
  40b3e8:	mov    cl,0x7f
  40b3ea:	dec    ecx
  40b3eb:	icebp  
  40b3ec:	sub    esp,ebx
  40b3ee:	jl     0x40b3af
  40b3f0:	(bad)  
  40b3f1:	jae    0x40b441
  40b3f3:	es dec esp
  40b3f5:	jp     0x40b3e9
  40b3f7:	xchg   esp,eax
  40b3f8:	dec    esp
  40b3f9:	aaa    
  40b3fa:	outs   dx,BYTE PTR ds:[esi]
  40b3fb:	icebp  
  40b3fc:	fimul  DWORD PTR [ecx]
  40b3fe:	push   0x955c10f3
  40b403:	xchg   esp,eax
  40b404:	stc    
  40b405:	cmc    
  40b406:	xor    ebp,DWORD PTR [eax-0x5b990fd7]
  40b40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40d:	or     DWORD PTR [edx+0x773dd4e6],eax
  40b413:	dec    esi
  40b414:	gs cs push edx
  40b417:	jge    0x40b43a
  40b419:	daa    
  40b41a:	test   al,0xbb
  40b41c:	aam    0x97
  40b41e:	xor    BYTE PTR [esi],0x1b
  40b421:	jmp    0x5b293c5b
  40b426:	cmp    al,0x3
  40b428:	test   eax,0x7a009727
  40b42d:	add    edx,ecx
  40b42f:	cmp    bl,dl
  40b431:	lds    esi,FWORD PTR [ecx]
  40b433:	add    al,0x3c
  40b435:	xor    al,0x66
  40b437:	loop   0x40b478
  40b439:	jge    0x40b435
  40b43b:	in     eax,0x5f
  40b43d:	js     0x40b475
  40b43f:	sub    al,0x1f
  40b441:	inc    esp
  40b442:	xchg   edi,eax
  40b443:	mov    DWORD PTR [ebx+ebp*4-0x7f],esi
  40b447:	inc    edi
  40b448:	mov    edx,0xb995449b
  40b44d:	xchg   DWORD PTR [esi+0x28b28e20],esi
  40b453:	in     eax,dx
  40b454:	cld    
  40b455:	not    BYTE PTR [ebx+0x4a]
  40b458:	fs scas eax,DWORD PTR es:[edi]
  40b45a:	or     al,0x20
  40b45c:	jae    0x40b43d
  40b45e:	jmp    0x45ffe1ca
  40b463:	adc    BYTE PTR [esi-0x67],ch
  40b466:	dec    edx
  40b467:	mov    al,0x84
  40b469:	xchg   DWORD PTR [ebx+0x5c],ecx
  40b46c:	call   0x2bec:0xc5a8e342
  40b473:	test   al,0x63
  40b475:	jg     0x40b4a2
  40b477:	rcr    esi,cl
  40b479:	test   BYTE PTR [esi],cl
  40b47b:	fiadd  WORD PTR [ebp+0x39]
  40b47e:	xchg   edx,eax
  40b47f:	jae    0x40b475
  40b481:	inc    ebx
  40b482:	fimul  DWORD PTR [ebx+eiz*1+0x49]
  40b486:	in     eax,0x7c
  40b488:	and    BYTE PTR [ebp+0x43],ah
  40b48b:	shl    BYTE PTR [edi-0x4cf3deaf],1
  40b491:	and    al,0xf9
  40b493:	ret    0xc332
  40b496:	adc    eax,0x26566462
  40b49b:	and    ecx,DWORD PTR ds:0x50817408
  40b4a1:	push   0x51
  40b4a3:	popa   
  40b4a4:	jp     0x40b4aa
  40b4a6:	or     eax,0xab0f1cd9
  40b4ab:	call   0xa2e2:0xcad208af
  40b4b2:	retf   0x2273
  40b4b5:	cld    
  40b4b6:	push   ebx
  40b4b7:	mov    ds:0xdd500981,eax
  40b4bc:	xor    al,0x56
  40b4be:	ss dec eax
  40b4c0:	(bad)  
  40b4c1:	out    0xaa,eax
  40b4c3:	dec    ebx
  40b4c4:	xchg   ebp,eax
  40b4c5:	das    
  40b4c6:	scas   al,BYTE PTR es:[edi]
  40b4c7:	xor    al,0xe3
  40b4c9:	fsqrt  
  40b4cb:	sub    al,0x5e
  40b4cd:	arpl   WORD PTR ds:0x8550888c,bp
  40b4d3:	test   eax,0xdf59e64a
  40b4d8:	jl     0x40b469
  40b4da:	into   
  40b4db:	xchg   edi,eax
  40b4dc:	loop   0x40b558
  40b4de:	cmp    DWORD PTR [ecx+0x14562db7],ebx
  40b4e4:	int3   
  40b4e5:	test   DWORD PTR [esi],edx
  40b4e7:	stos   BYTE PTR es:[edi],al
  40b4e8:	mov    DWORD PTR [eax+eiz*4+0x5c530c1c],edx
  40b4ef:	push   0x7d
  40b4f1:	mov    ds:0x15dcbc8e,eax
  40b4f6:	xor    eax,0xeb4b42ce
  40b4fb:	sbb    BYTE PTR [edi-0x453279db],0x7
  40b502:	dec    esi
  40b503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b504:	loope  0x40b4cb
  40b506:	inc    ecx
  40b507:	jge    0x40b48b
  40b509:	mov    edi,DWORD PTR [ebx]
  40b50b:	lea    ecx,[edi-0x1a075d72]
  40b511:	stc    
  40b512:	dec    ebx
  40b513:	stos   BYTE PTR es:[edi],al
  40b514:	push   0xa07f4d64
  40b519:	cld    
  40b51a:	aad    0x1a
  40b51c:	pop    es
  40b51d:	or     bl,BYTE PTR [ebx-0x26da7f04]
  40b523:	shl    DWORD PTR [ecx],0x81
  40b526:	pop    ds
  40b527:	iret   
  40b528:	fistp  WORD PTR [edx-0x26]
  40b52b:	xchg   ebp,eax
  40b52c:	stos   BYTE PTR es:[edi],al
  40b52d:	scas   eax,DWORD PTR es:[edi]
  40b52e:	out    0x8a,al
  40b530:	push   ecx
  40b531:	push   eax
  40b532:	mov    ds:0xe6c376aa,al
  40b537:	add    BYTE PTR [edi],ah
  40b539:	test   eax,0x809dc8cc
  40b53e:	shl    BYTE PTR [edx+0x13fd492],1
  40b544:	jns    0x40b510
  40b546:	and    eax,0x339f01d0
  40b54b:	xchg   esi,eax
  40b54c:	(bad)  
  40b54d:	or     eax,0xe979598
  40b552:	xor    ecx,DWORD PTR [ecx]
  40b554:	cdq    
  40b555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b556:	(bad)  
  40b558:	jae    0x40b556
  40b55a:	aam    0xa1
  40b55c:	jmp    0xe89c29fc
  40b561:	in     eax,dx
  40b562:	adc    ah,BYTE PTR [esi]
  40b564:	fmul   DWORD PTR [ebp+0xe]
  40b567:	add    DWORD PTR [esi-0x1b22f5f6],ecx
  40b56d:	jbe    0x40b543
  40b56f:	mov    esp,0x28347a5f
  40b574:	mov    dh,0x57
  40b576:	pop    ebx
  40b577:	hlt    
  40b578:	add    BYTE PTR [ebp-0x68b1a8cd],bh
  40b57e:	(bad)  
  40b57f:	jl     0x47e91b06
  40b585:	rcr    ebx,cl
  40b587:	stos   DWORD PTR es:[edi],eax
  40b588:	pusha  
  40b589:	jecxz  0x40b546
  40b58b:	(bad)  
  40b58c:	dec    eax
  40b58d:	push   ss
  40b58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58f:	out    dx,al
  40b590:	rol    BYTE PTR [esi-0x2a],0x30
  40b594:	jmp    0x29e2:0x68937ae1
  40b59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b59c:	push   ss
  40b59d:	add    eax,0x6d0207fb
  40b5a2:	pop    ebx
  40b5a3:	ret    0xa7a3
  40b5a6:	(bad)  
  40b5a7:	dec    edi
  40b5a8:	and    al,0x34
  40b5aa:	dec    ecx
  40b5ab:	or     bl,al
  40b5ad:	fbld   TBYTE PTR [ebx]
  40b5af:	push   edx
  40b5b0:	mov    ebp,0xae1662de
  40b5b5:	cmp    BYTE PTR [ecx+0x103600ea],0xde
  40b5bc:	inc    ecx
  40b5bd:	jno    0x40b60d
  40b5bf:	int    0xff
  40b5c1:	xchg   edx,eax
  40b5c2:	cmp    eax,DWORD PTR [ebp-0x62702df0]
  40b5c8:	cwde   
  40b5c9:	xchg   BYTE PTR [eax+0x40],ch
  40b5cc:	lahf   
  40b5cd:	int3   
  40b5ce:	(bad)  
  40b5cf:	jno    0x40b5fd
  40b5d1:	mov    edi,0xf81ebc35
  40b5d6:	das    
  40b5d7:	and    ecx,DWORD PTR ds:0xaf7995ca
  40b5dd:	mov    ebp,0xc1055074
  40b5e2:	rcl    BYTE PTR [esi+0x48],0x77
  40b5e6:	daa    
  40b5e7:	test   eax,0x1d440ad9
  40b5ec:	test   DWORD PTR [edx-0x1884d608],ebp
  40b5f2:	aas    
  40b5f3:	mov    ch,0xde
  40b5f5:	into   
  40b5f6:	xor    eax,0x4b2e440f
  40b5fb:	iret   
  40b5fc:	loop   0x40b665
  40b5fe:	cli    
  40b5ff:	pop    edx
  40b600:	xchg   ecx,eax
  40b601:	addr16 in eax,dx
  40b603:	jecxz  0x40b5c3
  40b605:	cmp    ah,BYTE PTR [edx+eax*4]
  40b608:	xlat   BYTE PTR ds:[ebx]
  40b609:	mov    bl,dl
  40b60b:	mov    DWORD PTR [esi+0x3e],0xbaa4bbc2
  40b612:	jg     0x40b629
  40b614:	xchg   ecx,eax
  40b615:	fwait
  40b616:	push   edx
  40b617:	fcom   DWORD PTR [edx]
  40b619:	js     0x40b65e
  40b61b:	inc    ebx
  40b61c:	push   cs
  40b61d:	cs adc eax,0x70f1c1c2
  40b623:	data16 jbe 0x40b654
  40b626:	lds    edi,FWORD PTR [ebx-0x74]
  40b629:	lea    edi,[eax+0x16]
  40b62c:	xor    dh,dl
  40b62e:	mov    cl,0xfe
  40b630:	add    al,BYTE PTR [esi-0x3a34cd18]
  40b636:	dec    ecx
  40b637:	xor    BYTE PTR [ebx-0x70c6000a],dl
  40b63d:	xchg   esp,eax
  40b63e:	call   0xb8d86195
  40b643:	in     eax,dx
  40b644:	imul   esi,DWORD PTR [eax+0x79],0xd086075c
  40b64b:	jp     0x40b5fb
  40b64d:	mov    ds:0x4a6999a,eax
  40b652:	cmp    ecx,DWORD PTR [esi+0x7737f726]
  40b658:	inc    ebx
  40b659:	fmul   DWORD PTR [edi]
  40b65b:	add    BYTE PTR [ecx-0x4e],bl
  40b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b65f:	mov    edi,ss
  40b661:	scas   al,BYTE PTR es:[edi]
  40b662:	cdq    
  40b663:	xlat   BYTE PTR ds:[ebx]
  40b664:	push   ebx
  40b665:	ds jae 0x40b673
  40b668:	ror    DWORD PTR [esi+0x63],1
  40b66b:	xchg   DWORD PTR [eax+0x6759c054],ebp
  40b671:	mov    ecx,?
  40b673:	adc    ebx,ebp
  40b675:	xchg   edx,esp
  40b677:	sbb    al,0xd7
  40b679:	mov    al,ds:0x65e544f8
  40b67e:	jle    0x40b606
  40b680:	inc    ecx
  40b681:	mov    es,WORD PTR [ecx]
  40b683:	(bad)  
  40b684:	push   DWORD PTR [edi-0x52]
  40b687:	push   eax
  40b688:	clc    
  40b689:	dec    ecx
  40b68a:	jo     0x40b60f
  40b68c:	push   cs
  40b68d:	outs   dx,DWORD PTR ds:[esi]
  40b68e:	or     al,0x10
  40b690:	fisub  WORD PTR [edx-0x3c3e56bd]
  40b696:	sub    eax,0x8c77a92
  40b69b:	cdq    
  40b69c:	or     DWORD PTR [ebx-0x10],ebp
  40b69f:	push   0x78
  40b6a1:	cli    
  40b6a2:	sti    
  40b6a3:	retf   0x81b2
  40b6a6:	sbb    BYTE PTR [edx*1+0x1ae29584],bl
  40b6ad:	sub    eax,DWORD PTR [ecx+esi*1+0x4a976908]
  40b6b4:	cs dec ebx
  40b6b6:	mov    ds:0x3f2216d7,al
  40b6bb:	and    al,0x96
  40b6bd:	push   edi
  40b6be:	adc    ah,BYTE PTR [edi+0xd]
  40b6c1:	test   DWORD PTR [edi+0x1b91abcd],ebx
  40b6c7:	imul   eax
  40b6c9:	scas   eax,DWORD PTR es:[edi]
  40b6ca:	add    al,BYTE PTR [esi]
  40b6cc:	rol    DWORD PTR [ebx],0x8c
  40b6cf:	cmp    eax,0xc0115855
  40b6d4:	aam    0xaf
  40b6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d7:	pop    esp
  40b6d8:	pop    ebp
  40b6d9:	dec    BYTE PTR [ebx+esi*2-0x5351163f]
  40b6e0:	pop    edx
  40b6e1:	pusha  
  40b6e2:	call   eax
  40b6e4:	jb     0x40b679
  40b6e6:	imul   ecx,DWORD PTR [eax+edi*4-0x73],0xffffffdd
  40b6eb:	sar    bh,1
  40b6ed:	ret    0x2219
  40b6f0:	pop    esi
  40b6f1:	imul   esp,DWORD PTR [edx-0xc452dd2],0x3ee15fc8
  40b6fb:	in     al,0x51
  40b6fd:	cmp    dh,BYTE PTR [esi]
  40b6ff:	xor    ebp,DWORD PTR es:[ebx-0x3b3b29fd]
  40b706:	fcmovu st,st(6)
  40b708:	dec    ecx
  40b709:	mov    bl,0x9c
  40b70b:	sahf   
  40b70c:	dec    ebp
  40b70d:	sar    BYTE PTR [eax-0x35],1
  40b710:	pop    ss
  40b711:	aad    0xe8
  40b713:	rcl    esi,cl
  40b715:	ret    
  40b716:	fldcw  WORD PTR [edi+0x6edbc301]
  40b71c:	ds out dx,eax
  40b71e:	pop    es
  40b71f:	fs aaa 
  40b721:	cli    
  40b722:	sub    DWORD PTR [eax-0x5c34b0d3],ebp
  40b728:	imul   esp,DWORD PTR [ebp-0x67],0x4a
  40b72c:	jo     0x40b72c
  40b72e:	cwde   
  40b72f:	fisttp QWORD PTR [edx]
  40b731:	mov    edx,0x51a6c487
  40b736:	adc    edx,DWORD PTR [edi+0x130efca6]
  40b73c:	pop    edi
  40b73d:	and    esp,DWORD PTR [edx+0x52]
  40b740:	mov    al,BYTE PTR [ebp-0x5d6554b]
  40b746:	das    
  40b747:	cld    
  40b748:	mov    edx,0xc93550c8
  40b74d:	xchg   ecx,eax
  40b74e:	jge    0x40b7b9
  40b750:	sahf   
  40b751:	xlat   BYTE PTR ds:[ebx]
  40b752:	and    cl,BYTE PTR [esi]
  40b754:	retf   0xab85
  40b757:	sbb    eax,0xc82bd164
  40b75c:	add    BYTE PTR [ebp+0x17e2dbff],cl
  40b762:	pop    esp
  40b763:	mov    ch,BYTE PTR [ebx-0x8]
  40b766:	int3   
  40b767:	test   eax,0x30efc130
  40b76c:	repz fstp QWORD PTR [ebx+ebx*4-0x2]
  40b771:	retf   0xbb22
  40b774:	repz fmulp st(0),st
  40b777:	ret    0x7c9a
  40b77a:	xchg   edi,eax
  40b77b:	inc    eax
  40b77c:	sbb    DWORD PTR [eax],edx
  40b77e:	neg    BYTE PTR [edx]
  40b780:	pop    ebp
  40b781:	mov    dh,0x33
  40b783:	jnp    0x40b7d6
  40b785:	shl    DWORD PTR [eax],1
  40b787:	das    
  40b788:	and    al,BYTE PTR [ebp-0x22]
  40b78b:	int    0x2e
  40b78d:	(bad)  
  40b78f:	sub    DWORD PTR ds:0x9c36f41a,edi
  40b795:	sub    edi,edx
  40b797:	fmulp  st(2),st
  40b799:	sbb    esp,eax
  40b79b:	out    0x77,eax
  40b79d:	ror    DWORD PTR [ebp-0x5e],cl
  40b7a0:	jnp    0x40b808
  40b7a2:	and    al,0xb5
  40b7a4:	ret    
  40b7a5:	xchg   edi,eax
  40b7a6:	mov    WORD PTR [ecx],?
  40b7a8:	dec    esp
  40b7a9:	mov    BYTE PTR [ebp+0x20],al
  40b7ac:	mov    ch,BYTE PTR [edi+0x55a5712f]
  40b7b2:	stos   BYTE PTR es:[edi],al
  40b7b3:	rcl    edx,cl
  40b7b5:	retf   0x6ef
  40b7b8:	mov    gs,ecx
  40b7ba:	mov    dh,0x85
  40b7bc:	test   al,0xa6
  40b7be:	sub    ch,bh
  40b7c0:	push   esi
  40b7c1:	adc    ebp,DWORD PTR [ebx-0x70]
  40b7c4:	retf   0xd1e6
  40b7c7:	mov    ecx,0xe1a6695e
  40b7cc:	aad    0xc9
  40b7ce:	mov    ds:0x3fbe2ee2,eax
  40b7d3:	dec    edi
  40b7d4:	or     eax,0x22e1492f
  40b7d9:	and    dh,0x1b
  40b7dc:	ds xor eax,0x3eee5342
  40b7e2:	sub    al,BYTE PTR [esp+edi*4]
  40b7e5:	mov    edi,0xb9fc2133
  40b7ea:	jne    0x40b858
  40b7ec:	dec    edi
  40b7ed:	cwde   
  40b7ee:	out    0x8c,al
  40b7f0:	dec    eax
  40b7f1:	pushf  
  40b7f2:	xor    al,0xe3
  40b7f4:	adc    esp,DWORD PTR [edx+0x4d325bed]
  40b7fa:	gs out dx,eax
  40b7fc:	inc    ecx
  40b7fd:	and    edi,DWORD PTR [ebp+edx*2+0x3b]
  40b801:	fldenv [edi]
  40b803:	scas   eax,DWORD PTR es:[edi]
  40b804:	jne    0x40b7d2
  40b806:	aam    0x79
  40b808:	push   cs
  40b809:	add    eax,0x228d50fd
  40b80e:	cwde   
  40b80f:	mov    al,0xd1
  40b811:	inc    esi
  40b812:	inc    ecx
  40b813:	dec    ebp
  40b814:	pop    ds
  40b815:	scas   eax,DWORD PTR es:[edi]
  40b816:	imul   eax,DWORD PTR [ebx],0xffffffae
  40b819:	cmc    
  40b81a:	ds jge 0x40b869
  40b81d:	ret    0x944d
  40b820:	loopne 0x40b7e9
  40b822:	lock lods al,BYTE PTR ss:[esi]
  40b825:	fild   WORD PTR [ebx]
  40b827:	rcr    bl,cl
  40b829:	(bad)  
  40b82a:	push   0x603ea9fd
  40b82f:	xor    edx,eax
  40b831:	in     eax,0x73
  40b833:	test   eax,0x59dc0f5f
  40b838:	fcom   DWORD PTR [eax-0x4835079a]
  40b83e:	inc    ebx
  40b83f:	jmp    0x40b8a2
  40b841:	mov    dl,0x1e
  40b843:	int    0x7c
  40b845:	sub    BYTE PTR [edi-0x6089017],dh
  40b84b:	mov    eax,0x194c4428
  40b850:	xchg   ebx,eax
  40b851:	inc    BYTE PTR [eax+0x467a4443]
  40b857:	cmp    DWORD PTR [edi+0x5],esi
  40b85a:	xchg   ebp,eax
  40b85b:	retf   
  40b85c:	inc    eax
  40b85d:	aaa    
  40b85e:	adc    BYTE PTR [edx+0x8f2bae5],cl
  40b864:	jnp    0x40b8b0
  40b866:	push   ds
  40b867:	sbb    DWORD PTR [ebx+edx*2+0x7b],esp
  40b86b:	mov    dh,0x8d
  40b86d:	out    dx,eax
  40b86e:	dec    ebx
  40b86f:	ss inc ebx
  40b871:	add    eax,esi
  40b873:	mov    dh,0xdc
  40b875:	loop   0x40b810
  40b877:	inc    eax
  40b878:	inc    ebp
  40b879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87a:	js     0x40b857
  40b87c:	cwde   
  40b87d:	fmul   st,st(7)
  40b87f:	sub    bl,BYTE PTR [edi+edx*1]
  40b882:	sahf   
  40b883:	mov    al,BYTE PTR [edx-0x6a]
  40b886:	pop    ebp
  40b887:	loopne 0x40b882
  40b889:	xchg   esp,eax
  40b88a:	mov    ecx,0x32a7f48b
  40b88f:	pop    ebx
  40b890:	push   0x70
  40b892:	fisttp QWORD PTR [eax-0x3f99adfd]
  40b898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b899:	inc    edi
  40b89a:	out    dx,al
  40b89b:	fidiv  WORD PTR [ebx+0x59]
  40b89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89f:	test   DWORD PTR [esi-0x37],edi
  40b8a2:	outs   dx,DWORD PTR ds:[esi]
  40b8a3:	dec    eax
  40b8a4:	and    ecx,DWORD PTR [edi+ebp*2]
  40b8a7:	inc    ebp
  40b8a8:	pop    ds
  40b8a9:	sbb    DWORD PTR [edx+0x16349e5b],eax
  40b8af:	cmp    BYTE PTR [edi-0x4f9a355b],cl
  40b8b5:	ins    BYTE PTR es:[edi],dx
  40b8b6:	in     al,dx
  40b8b7:	xchg   esp,eax
  40b8b8:	fsub   st(4),st
  40b8ba:	mov    ebx,0x7c19376
  40b8bf:	mov    WORD PTR [ecx+0x18233fc2],fs
  40b8c5:	mov    ds:0x642a53d3,eax
  40b8ca:	adc    DWORD PTR [ecx-0x4f],ebp
  40b8cd:	loopne 0x40b914
  40b8cf:	push   0x758cd3a
  40b8d4:	mov    ds:0xa29870ab,al
  40b8d9:	(bad)  
  40b8db:	dec    ecx
  40b8dc:	stos   BYTE PTR es:[edi],al
  40b8dd:	xor    BYTE PTR [ecx-0x3b],0xb
  40b8e1:	push   edx
  40b8e2:	mov    esi,DWORD PTR [eax+edx*8]
  40b8e5:	mov    edi,0xd296850a
  40b8ea:	mov    BYTE PTR [esi],al
  40b8ec:	into   
  40b8ed:	cmp    ecx,ebp
  40b8ef:	push   ss
  40b8f0:	inc    ebp
  40b8f1:	ret    
  40b8f2:	ins    BYTE PTR es:[edi],dx
  40b8f3:	and    esi,0x458fcf51
  40b8f9:	adc    BYTE PTR [eax+0x5d49e7dd],0x7c
  40b900:	push   cs
  40b901:	dec    esp
  40b902:	(bad)  
  40b904:	jb     0x40b8fb
  40b906:	jnp    0x40b8a4
  40b908:	mov    dh,0x7c
  40b90a:	push   eax
  40b90b:	xchg   DWORD PTR [ebp-0x6d],ebp
  40b90e:	xor    al,0xf3
  40b910:	jg     0x40b8b1
  40b912:	cdq    
  40b913:	out    dx,eax
  40b914:	adc    dh,BYTE PTR [edx]
  40b916:	mov    DWORD PTR [esp+edi*4-0x3c],0x5634b4a5
  40b91e:	je     0x40b8e3
  40b920:	mov    ebp,0xdf7b8bd4
  40b925:	add    al,0x1a
  40b927:	fdivp  st(4),st
  40b929:	xor    al,0xff
  40b92b:	leave  
  40b92c:	repnz fwait
  40b92e:	mov    ds:0x92e3c4d8,al
  40b933:	js     0x40b98d
  40b935:	mov    bl,0x74
  40b937:	xor    al,0xd5
  40b939:	sub    DWORD PTR [edi],edi
  40b93b:	adc    al,0xd
  40b93d:	cwde   
  40b93e:	inc    ebp
  40b93f:	jg     0x40b8f4
  40b941:	ja     0x40b94e
  40b943:	and    BYTE PTR [ebp+0x73e8c98b],cl
  40b949:	int3   
  40b94a:	nop
  40b94b:	sub    DWORD PTR [eax],esi
  40b94d:	call   0xaafe:0x7b9c0880
  40b954:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b956:	popf   
  40b957:	mov    ecx,0xa8d26db6
  40b95c:	pop    ds
  40b95d:	(bad)  
  40b95e:	cmp    edx,DWORD PTR [ecx-0x37]
  40b961:	mov    esp,0x153ab9ce
  40b966:	js     0x40b9c1
  40b968:	call   0x8df131aa
  40b96d:	aad    0x3b
  40b96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b970:	jle    0x40b990
  40b972:	fs scas eax,DWORD PTR es:[edi]
  40b974:	mov    ecx,0x479c9dba
  40b979:	and    al,0xc4
  40b97b:	lea    ebx,[ebx+ecx*4+0x57f00525]
  40b982:	fidivr WORD PTR [edx+0x7d]
  40b985:	std    
  40b986:	jecxz  0x40b9e9
  40b988:	nop
  40b989:	xchg   DWORD PTR [eax-0x5c9ba739],ecx
  40b98f:	repnz (bad) 
  40b992:	ins    DWORD PTR es:[edi],dx
  40b993:	iret   
  40b994:	sbb    edi,DWORD PTR [edi+0x39]
  40b997:	das    
  40b998:	popf   
  40b999:	retf   
  40b99a:	retf   0xedae
  40b99d:	ror    ebx,1
  40b99f:	gs idiv esi
  40b9a2:	test   eax,0xa6ab52d6
  40b9a7:	hlt    
  40b9a8:	jb     0x40b9e3
  40b9aa:	repz iret 
  40b9ac:	xlat   BYTE PTR ds:[ebx]
  40b9ad:	call   0x7db:0xa1c9c681
  40b9b4:	mov    al,0x22
  40b9b6:	ret    
  40b9b7:	pop    edx
  40b9b8:	stos   BYTE PTR es:[edi],al
  40b9b9:	mov    eax,DWORD PTR [ecx]
  40b9bb:	shl    DWORD PTR [ebx+0x4],cl
  40b9be:	mov    dh,0xcb
  40b9c0:	jmp    0x6729:0xc2e7440a
  40b9c7:	mov    ds:0x2c825233,al
  40b9cc:	(bad)  
  40b9cd:	imul   edi,DWORD PTR [ebx-0xd08c7e3],0x4d
  40b9d4:	push   edi
  40b9d5:	fcmovne st,st(2)
  40b9d7:	or     eax,0xe228cfcc
  40b9dc:	or     edx,0x70fd0bc0
  40b9e2:	repz leave 
  40b9e4:	clc    
  40b9e5:	xchg   ecx,eax
  40b9e6:	pop    ds
  40b9e7:	sbb    eax,0x3025b80f
  40b9ec:	sub    al,0x92
  40b9ee:	inc    eax
  40b9ef:	test   al,0xd2
  40b9f1:	ja     0x40b9f2
  40b9f3:	mov    ebx,0xa363a5f
  40b9f8:	add    BYTE PTR [ecx-0x12071f9a],0xf1
  40b9ff:	inc    BYTE PTR [eax+0x4bd92b7c]
  40ba05:	pop    edx
  40ba06:	adc    bh,BYTE PTR ds:0x1aa6aab
  40ba0c:	inc    eax
  40ba0d:	xchg   ebx,eax
  40ba0e:	sbb    al,dl
  40ba10:	jmp    DWORD PTR [ecx+0x5188b0f8]
  40ba16:	les    edi,FWORD PTR [ebx-0x30]
  40ba19:	fldcw  WORD PTR [edx-0x312cc307]
  40ba1f:	or     DWORD PTR [esi],ebx
  40ba21:	data16 sbb al,0xe8
  40ba24:	mov    DWORD PTR [ecx],edi
  40ba26:	int3   
  40ba27:	xchg   esp,eax
  40ba28:	jmp    0x5ba8e4c7
  40ba2d:	inc    edx
  40ba2e:	lahf   
  40ba2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba30:	mov    dh,0x6e
  40ba32:	test   BYTE PTR [ebx-0x752844b2],0xdb
  40ba39:	cld    
  40ba3a:	and    al,0xec
  40ba3c:	xor    ecx,ecx
  40ba3e:	dec    ecx
  40ba3f:	jl     0x40ba16
  40ba41:	fild   QWORD PTR [edi+0xd]
  40ba44:	call   0x70e51526
  40ba49:	jne    0x40ba85
  40ba4b:	or     bl,BYTE PTR [ecx]
  40ba4d:	xchg   BYTE PTR [ebx+0x29f24738],ah
  40ba53:	push   ecx
  40ba54:	cs inc ebx
  40ba56:	or     esp,DWORD PTR [ebx-0x5c26720c]
  40ba5c:	mov    ebp,0x2a5b2de2
  40ba61:	loopne 0x40bad3
  40ba63:	retf   
  40ba64:	push   edi
  40ba65:	dec    ebx
  40ba66:	xchg   edx,eax
  40ba67:	das    
  40ba68:	cdq    
  40ba69:	cdq    
  40ba6a:	sub    al,0x95
  40ba6c:	sahf   
  40ba6d:	aam    0x5e
  40ba6f:	imul   esi,DWORD PTR [ecx-0x5f],0xd59307e
  40ba76:	repnz sub bh,BYTE PTR [ecx-0x48]
  40ba7a:	xor    BYTE PTR [edx],bh
  40ba7c:	js     0x40ba6c
  40ba7e:	sahf   
  40ba7f:	sqrtps xmm5,XMMWORD PTR [ebx+0x13]
  40ba83:	mov    ch,0x3b
  40ba85:	adc    al,dh
  40ba87:	or     edx,DWORD PTR [eax+0x26]
  40ba8a:	jo     0x40ba18
  40ba8c:	xchg   esp,eax
  40ba8d:	push   ecx
  40ba8e:	mov    eax,0x2df981e7
  40ba93:	mov    al,0x52
  40ba95:	push   edi
  40ba96:	pop    eax
  40ba97:	sahf   
  40ba98:	ss pop ebp
  40ba9a:	mov    al,ds:0xe252c0a3
  40ba9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa0:	retf   
  40baa1:	aas    
  40baa2:	inc    edi
  40baa3:	or     dh,BYTE PTR [edx-0x169b719a]
  40baa9:	std    
  40baaa:	rcr    DWORD PTR [esp+esi*1],0x7
  40baae:	cli    
  40baaf:	mov    bh,0xe3
  40bab1:	mov    ds:0x6bae6d29,eax
  40bab6:	mov    dl,0xa6
  40bab8:	add    eax,0x4ede0378
  40babd:	inc    esi
  40babe:	xchg   DWORD PTR [ebx],esi
  40bac0:	imul   ecx,DWORD PTR [edx-0x23],0xc
  40bac4:	gs loopne 0x40bb36
  40bac7:	or     al,0x7d
  40bac9:	call   0x328da93c
  40bace:	test   DWORD PTR [ebx+0x68a8a19],ebx
  40bad4:	popa   
  40bad5:	pushaw 
  40bad7:	aad    0x40
  40bad9:	inc    esi
  40bada:	jl     0x40ba7a
  40badc:	std    
  40badd:	sub    BYTE PTR [eax+0x5d],bh
  40bae0:	mov    cl,0xca
  40bae2:	sub    esp,DWORD PTR [ecx+0x78]
  40bae5:	into   
  40bae6:	adc    cl,BYTE PTR [edx-0x4d]
  40bae9:	or     bl,BYTE PTR [edx]
  40baeb:	push   edi
  40baec:	hlt    
  40baed:	jno    0x40ba7c
  40baef:	pop    ebx
  40baf0:	in     eax,dx
  40baf1:	push   esi
  40baf2:	fild   WORD PTR [edi-0x2fbe10c5]
  40baf8:	mov    al,ds:0x19630368
  40bafd:	cwde   
  40bafe:	fwait
  40baff:	add    BYTE PTR [ebp-0x5ff47878],ah
  40bb05:	ret    
  40bb06:	or     eax,0x3be8ac29
  40bb0b:	(bad)  
  40bb0c:	ja     0x40bae9
  40bb0e:	into   
  40bb0f:	cmp    esi,DWORD PTR [ecx]
  40bb11:	rcr    ecx,0x4e
  40bb14:	xchg   edi,eax
  40bb15:	xor    al,bh
  40bb17:	and    cl,BYTE PTR [eax]
  40bb19:	imul   esp,DWORD PTR ds:[esi-0x30],0x99cbe43b
  40bb21:	shl    DWORD PTR [esi],0x5b
  40bb24:	popf   
  40bb25:	imul   ecx,DWORD PTR [esi+eax*4-0xe],0x29b9f593
  40bb2d:	(bad)  
  40bb2e:	out    dx,eax
  40bb2f:	jne    0x40bb1c
  40bb31:	cs push cs
  40bb33:	es sub al,0x3f
  40bb36:	and    DWORD PTR [ebx+edx*4+0x71],esp
  40bb3a:	int3   
  40bb3b:	mov    cl,0xb6
  40bb3d:	outs   dx,DWORD PTR ds:[esi]
  40bb3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb3f:	out    0xae,eax
  40bb41:	push   ecx
  40bb42:	es (bad) 
  40bb44:	and    edi,DWORD PTR [edx-0x71]
  40bb47:	mov    edx,0x1730c9b6
  40bb4c:	pop    ecx
  40bb4d:	addr16 mov esp,0x8fbadcc
  40bb53:	jne    0x40bb94
  40bb55:	out    0xd3,eax
  40bb57:	add    al,0x4c
  40bb59:	adc    al,0x69
  40bb5b:	cld    
  40bb5c:	lods   eax,DWORD PTR ds:[esi]
  40bb5d:	jb     0x40bbbe
  40bb5f:	imul   ebx,DWORD PTR [ecx+0x530910db],0x14df8467
  40bb69:	pusha  
  40bb6a:	fdivr  DWORD PTR [edx]
  40bb6c:	add    DWORD PTR [eax-0x77],ecx
  40bb6f:	cld    
  40bb70:	xor    dh,dl
  40bb72:	ss xchg esi,eax
  40bb74:	and    ah,BYTE PTR [eax+0x1b7ddd84]
  40bb7a:	in     eax,dx
  40bb7b:	jmp    0x40bba3
  40bb7d:	cmp    esi,ebx
  40bb7f:	fisub  WORD PTR [ecx+esi*2+0x4c]
  40bb83:	stc    
  40bb84:	lods   al,BYTE PTR ds:[esi]
  40bb85:	shr    dh,0x98
  40bb88:	pop    edx
  40bb89:	scas   eax,DWORD PTR es:[edi]
  40bb8a:	mov    ecx,0xd8d80345
  40bb8f:	inc    ecx
  40bb90:	fild   DWORD PTR [ebp-0x67]
  40bb93:	inc    esi
  40bb94:	icebp  
  40bb95:	xchg   ebx,eax
  40bb96:	add    DWORD PTR [esi-0x7f],0xffffff93
  40bb9a:	fcmovbe st,st(6)
  40bb9c:	jmp    0x1b54a9d
  40bba1:	mov    bh,0x15
  40bba3:	add    al,0x7d
  40bba5:	mov    edi,0x75661b0b
  40bbaa:	rcr    ebp,1
  40bbac:	mov    esi,0x98c36095
  40bbb1:	dec    ebp
  40bbb2:	call   0x52bbbe18
  40bbb7:	mov    WORD PTR [ecx],?
  40bbb9:	xchg   edx,eax
  40bbba:	mov    ah,BYTE PTR [eax-0x6f]
  40bbbd:	push   eax
  40bbbe:	stos   DWORD PTR es:[edi],eax
  40bbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc0:	add    BYTE PTR ds:0x8214baee,bh
  40bbc6:	ret    0xc596
  40bbc9:	push   ecx
  40bbca:	int    0xd5
  40bbcc:	leave  
  40bbcd:	ret    
  40bbce:	cmp    edi,DWORD PTR [edi+0x1]
  40bbd1:	je     0x40bb64
  40bbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd4:	test   al,0xd4
  40bbd6:	loop   0x40bb7a
  40bbd8:	test   eax,0x88843877
  40bbdd:	jnp    0x40bc5b
  40bbdf:	inc    esi
  40bbe0:	shr    BYTE PTR [edi+0xe54385f],cl
  40bbe6:	dec    ebp
  40bbe7:	icebp  
  40bbe8:	push   esp
  40bbe9:	div    DWORD PTR [esi]
  40bbeb:	popf   
  40bbec:	mov    edx,0x82c8f353
  40bbf1:	fsubp  st(7),st
  40bbf3:	out    dx,eax
  40bbf4:	cmp    DWORD PTR [ebp-0x57e957d0],0x645e54c0
  40bbfe:	push   esi
  40bbff:	aaa    
  40bc00:	jg     0x40bc79
  40bc02:	push   eax
  40bc03:	in     eax,dx
  40bc04:	ss (bad) 
  40bc06:	in     al,0x17
  40bc08:	pop    esi
  40bc09:	fnstenv [edi]
  40bc0b:	out    dx,eax
  40bc0c:	int    0x27
  40bc0e:	add    DWORD PTR [ebx],edi
  40bc10:	lock or al,0x75
  40bc13:	adc    al,0xbb
  40bc15:	mov    ecx,0xf02362ec
  40bc1a:	cmovno ebx,DWORD PTR [ecx+0x38]
  40bc1e:	push   esi
  40bc1f:	mov    al,ds:0x45fb31a2
  40bc24:	es add al,0xc4
  40bc27:	and    eax,0x4179e780
  40bc2c:	inc    esp
  40bc2d:	pop    ds
  40bc2e:	retf   0xf7b1
  40bc31:	xchg   ebp,eax
  40bc32:	popf   
  40bc33:	div    ebx
  40bc35:	or     dh,bh
  40bc37:	push   0x14600cd9
  40bc3c:	daa    
  40bc3d:	out    dx,eax
  40bc3e:	and    DWORD PTR ds:0xba3101c3,ebx
  40bc44:	test   BYTE PTR [edx+0x10a81720],bl
  40bc4a:	inc    edx
  40bc4b:	jnp    0x40bc93
  40bc4d:	mov    cl,0x2
  40bc4f:	xlat   BYTE PTR ds:[ebx]
  40bc50:	sbb    al,0xf4
  40bc52:	push   ss
  40bc53:	and    ah,0xe9
  40bc56:	test   BYTE PTR [ebp+0x1b],dh
  40bc59:	mov    bh,cl
  40bc5b:	popa   
  40bc5c:	fcomi  st,st(5)
  40bc5e:	mov    eax,ds:0x3f873ed7
  40bc63:	push   ebx
  40bc64:	xchg   ah,bl
  40bc66:	and    al,0xf7
  40bc68:	in     eax,dx
  40bc69:	or     DWORD PTR [ebx],0xffffffec
  40bc6c:	enter  0x9a9a,0xec
  40bc70:	mov    edx,es
  40bc72:	stos   DWORD PTR es:[edi],eax
  40bc73:	fiadd  WORD PTR [esi+ebp*1-0x13789aea]
  40bc7a:	imul   edx,DWORD PTR [esp+ecx*8],0x63491b28
  40bc81:	sub    DWORD PTR [edi-0x1],ebp
  40bc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc85:	xchg   ebx,eax
  40bc86:	sub    eax,0x68eedef1
  40bc8b:	imul   ebp,DWORD PTR [edi+0x6aa92b50],0xd2d0c4b4
  40bc95:	add    DWORD PTR [edx-0x27db9c88],esi
  40bc9b:	mov    bh,0x29
  40bc9d:	jecxz  0x40bd15
  40bc9f:	jecxz  0x40bc46
  40bca1:	pop    esi
  40bca2:	shr    BYTE PTR [ebx-0x6ee8c7d6],cl
  40bca8:	and    DWORD PTR [esi+edi*1+0x16],esi
  40bcac:	and    edx,DWORD PTR [eax+0x46]
  40bcaf:	add    BYTE PTR [edi],dl
  40bcb1:	mov    edi,edx
  40bcb3:	ja     0x40bcf9
  40bcb5:	mov    ds:0x34f7f525,al
  40bcba:	enter  0x3363,0x2e
  40bcbe:	fdiv   DWORD PTR [edx-0x4c0a2411]
  40bcc4:	out    0xd8,al
  40bcc6:	mov    ds:0x3aaf392f,eax
  40bccb:	jbe    0x40bce3
  40bccd:	pop    edi
  40bcce:	add    ah,0x1f
  40bcd1:	stos   BYTE PTR es:[edi],al
  40bcd2:	xor    eax,0x4911618d
  40bcd7:	jae    0x40bd18
  40bcd9:	lods   al,BYTE PTR ds:[esi]
  40bcda:	jmp    0x8d0c:0xe8bbb93e
  40bce1:	(bad)  
  40bce2:	mov    ch,0xd1
  40bce4:	cwde   
  40bce5:	rcl    DWORD PTR [esi],0x26
  40bce8:	scas   al,BYTE PTR es:[edi]
  40bce9:	push   ss
  40bcea:	push   0x23f4d536
  40bcef:	push   ss
  40bcf0:	test   DWORD PTR [edx],esp
  40bcf2:	fisttp WORD PTR [edx]
  40bcf4:	stc    
  40bcf5:	xchg   bh,dh
  40bcf7:	icebp  
  40bcf8:	mov    edi,0xab5ac57d
  40bcfd:	imul   edi,DWORD PTR [ebx+0x51],0x40a7fa7a
  40bd04:	sbb    ecx,DWORD PTR [edx-0x7f]
  40bd07:	sti    
  40bd08:	ins    DWORD PTR es:[edi],dx
  40bd09:	and    eax,0x5e820a9c
  40bd0e:	sbb    al,0xf4
  40bd10:	mov    esi,0xbaae81fd
  40bd15:	cmp    DWORD PTR [edi-0x29],0xffffff99
  40bd19:	cli    
  40bd1a:	xchg   ebx,eax
  40bd1b:	sub    al,ch
  40bd1d:	jl     0x40bd74
  40bd1f:	sub    DWORD PTR [ebp+0x22d41a03],0x1e
  40bd26:	js     0x40bd10
  40bd28:	ror    BYTE PTR [esi],1
  40bd2a:	test   dl,0xa7
  40bd2d:	mov    BYTE PTR [ebp+0x2d6c19f4],bl
  40bd33:	in     al,0xdb
  40bd35:	cmp    DWORD PTR [edi-0x3d7a593b],0xe04b6e66
  40bd3f:	test   al,0xf3
  40bd41:	gs mov eax,0x8a84d01
  40bd47:	push   esi
  40bd48:	jmp    0x776d:0x850eff65
  40bd4f:	jnp    0x40bcd5
  40bd51:	xchg   edi,eax
  40bd52:	xchg   al,dl
  40bd54:	push   esp
  40bd55:	pop    edx
  40bd56:	jmp    0xaa22a30
  40bd5b:	pushf  
  40bd5c:	out    0x4,eax
  40bd5e:	xor    bl,BYTE PTR [edi+0x549ee094]
  40bd64:	hlt    
  40bd65:	mov    ebp,0xac10063b
  40bd6a:	(bad)  [ecx+0x6c]
  40bd6d:	(bad)  
  40bd6e:	seto   ch
  40bd71:	rcr    esp,1
  40bd73:	sbb    ebp,DWORD PTR [eax-0x1792ac]
  40bd79:	pop    ds
  40bd7a:	sub    ebp,ebx
  40bd7c:	mov    WORD PTR [edx-0x4dc68355],cs
  40bd82:	out    dx,al
  40bd83:	sti    
  40bd84:	lea    esi,[ebp+0x79507acb]
  40bd8a:	sub    bh,BYTE PTR [edx]
  40bd8c:	or     eax,0x1c90bec0
  40bd91:	in     al,0xee
  40bd93:	push   esp
  40bd94:	xor    BYTE PTR ds:0x6b5c637e,ch
  40bd9a:	mov    edx,0x4c0211c9
  40bd9f:	mov    edx,0x1afea8bb
  40bda4:	sub    eax,0xd900d0a8
  40bda9:	ja     0x40bdbc
  40bdab:	pusha  
  40bdac:	push   0xbe3ed134
  40bdb1:	jnp    0x40be31
  40bdb3:	and    eax,0x10b79398
  40bdb8:	or     DWORD PTR [edi+0x7d7892f8],esp
  40bdbe:	sti    
  40bdbf:	je     0x40be0c
  40bdc1:	xchg   esp,eax
  40bdc2:	mov    DWORD PTR [edx],0x67bd5b30
  40bdc8:	inc    ebx
  40bdc9:	out    dx,eax
  40bdca:	or     eax,0xd67368ca
  40bdcf:	mov    eax,0xc4460c3
  40bdd4:	repz push ecx
  40bdd6:	stos   BYTE PTR es:[edi],al
  40bdd7:	jp     0x40be33
  40bdd9:	stos   DWORD PTR es:[edi],eax
  40bdda:	cs cmp cl,ah
  40bddd:	scas   eax,DWORD PTR es:[edi]
  40bdde:	xor    al,BYTE PTR [ebx+0x52012020]
  40bde4:	into   
  40bde5:	jmp    0x9a84071c
  40bdea:	sti    
  40bdeb:	push   ebp
  40bdec:	gs pop eax
  40bdee:	out    dx,eax
  40bdef:	or     DWORD PTR [ecx+0x8291793],0xc32022cf
  40bdf9:	jmp    0x4cbb460a
  40bdfe:	mov    ds:0x7d924aa5,al
  40be03:	lods   eax,DWORD PTR ds:[esi]
  40be04:	xor    al,0x8e
  40be06:	sub    bl,BYTE PTR [ebx+ebx*4+0x72]
  40be0a:	lods   al,BYTE PTR ds:[esi]
  40be0b:	and    BYTE PTR [eax],ah
  40be0d:	les    esp,FWORD PTR [ecx]
  40be0f:	sub    DWORD PTR [ebx-0x63],esi
  40be12:	aam    0x88
  40be14:	das    
  40be15:	sub    al,0xcd
  40be17:	add    al,0xe1
  40be19:	call   0xcf9:0x1c99790e
  40be20:	mov    eax,ds:0x7d54657f
  40be25:	mov    bl,0xae
  40be27:	cdq    
  40be28:	jle    0x40bde7
  40be2a:	(bad)  
  40be2b:	addr16 cmp al,0xbb
  40be2e:	pushf  
  40be2f:	retf   
  40be30:	into   
  40be31:	cwde   
  40be32:	fsubr  st(5),st
  40be34:	push   0x68
  40be36:	jns    0x40be04
  40be38:	pop    esp
  40be39:	xchg   DWORD PTR [eax*8+0x52ba8834],ecx
  40be40:	sub    al,0xdd
  40be42:	mov    BYTE PTR [edi],ch
  40be44:	pop    esi
  40be45:	fmul   DWORD PTR [ebx+0x2b]
  40be48:	rol    BYTE PTR [ecx+0x39b63d95],1
  40be4e:	lods   eax,DWORD PTR ds:[esi]
  40be4f:	outs   dx,BYTE PTR ds:[esi]
  40be50:	mov    cl,0x55
  40be52:	adc    eax,0xac27f48
  40be57:	adc    eax,DWORD PTR [ecx-0x50]
  40be5a:	in     al,dx
  40be5b:	jne    0x40bec0
  40be5d:	sub    BYTE PTR [ebp+0x6fcb8ebc],bh
  40be63:	push   esp
  40be64:	(bad)  
  40be65:	out    0x31,eax
  40be67:	adc    eax,0x361ff91c
  40be6c:	clc    
  40be6d:	fdiv   QWORD PTR [eax+0x622b7b34]
  40be73:	mov    edi,0xbf707e2a
  40be78:	pop    eax
  40be79:	mov    ds:0xf61a8035,al
  40be7e:	icebp  
  40be7f:	out    0xfc,al
  40be81:	mov    DWORD PTR [esi-0xb74a997],ebx
  40be87:	pop    ebp
  40be88:	ja     0x40be35
  40be8a:	leave  
  40be8b:	cmc    
  40be8c:	rol    DWORD PTR [edi+0x5faf08b5],cl
  40be92:	jecxz  0x40be17
  40be94:	mov    dl,0x50
  40be96:	inc    esi
  40be97:	adc    BYTE PTR [ecx-0x26318ff3],0xc6
  40be9e:	add    al,0x72
  40bea0:	add    eax,0x3947486b
  40bea5:	in     eax,0xd4
  40bea7:	pop    ss
  40bea8:	hlt    
  40bea9:	adc    BYTE PTR [ebx-0x2c],al
  40beac:	clc    
  40bead:	add    al,0x11
  40beaf:	aas    
  40beb0:	int    0x6
  40beb2:	aam    0x7
  40beb4:	add    DWORD PTR [esi+esi*4+0x1079c152],eax
  40bebb:	push   ebx
  40bebc:	fadd   QWORD PTR [edi+edx*8-0x3b]
  40bec0:	xchg   BYTE PTR [ebx-0x132803be],al
  40bec6:	cwde   
  40bec7:	xor    eax,0x3c67ca21
  40becc:	in     eax,0xd7
  40bece:	mov    edi,0x50e54655
  40bed3:	adc    eax,0x76a6fbeb
  40bed8:	add    ch,dl
  40beda:	retf   0xaaa2
  40bedd:	retf   0xea63
  40bee0:	(bad)  
  40bee1:	lock cdq 
  40bee3:	lods   eax,DWORD PTR ds:[esi]
  40bee4:	sbb    al,0xe4
  40bee6:	pop    edx
  40bee7:	xchg   edx,eax
  40bee8:	loop   0x40be8b
  40beea:	xor    eax,0x1e076bc8
  40bef0:	mov    cl,0x8
  40bef2:	ins    BYTE PTR es:[edi],dx
  40bef3:	push   ecx
  40bef4:	ja     0x40be95
  40bef6:	sub    edx,ecx
  40bef8:	ret    
  40bef9:	dec    eax
  40befa:	jmp    DWORD PTR [ecx+0x3ffe48a1]
  40bf00:	test   eax,0xb0614164
  40bf05:	dec    dx
  40bf07:	mov    dh,0x3f
  40bf09:	out    dx,eax
  40bf0a:	sub    edi,DWORD PTR [ebp-0x1d]
  40bf0d:	shl    dl,cl
  40bf0f:	ret    
  40bf10:	rcl    DWORD PTR [eax],0x13
  40bf13:	xor    bh,BYTE PTR [edi+ebp*4-0x47]
  40bf17:	or     eax,0xf0f977df
  40bf1c:	pushf  
  40bf1d:	xchg   edi,eax
  40bf1e:	lahf   
  40bf1f:	xchg   edi,eax
  40bf20:	(bad)  
  40bf21:	cli    
  40bf22:	cmp    BYTE PTR [esi+eax*1],ah
  40bf25:	iret   
  40bf26:	mov    edx,0xeb1002a9
  40bf2b:	bound  ecx,QWORD PTR [edi]
  40bf2d:	add    BYTE PTR [edx],bl
  40bf2f:	mov    edi,0xa9e01658
  40bf34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf35:	mov    dl,0x64
  40bf37:	xchg   DWORD PTR [eax-0x58a4f1bc],ebp
  40bf3d:	into   
  40bf3e:	test   DWORD PTR [edi-0xa5c519c],edi
  40bf44:	outs   dx,DWORD PTR ds:[esi]
  40bf45:	(bad)  
  40bf46:	sbb    al,0xb0
  40bf48:	int3   
  40bf49:	fdiv   QWORD PTR [ecx+0x60c50781]
  40bf4f:	or     al,0x75
  40bf51:	mov    WORD PTR [ebp-0x6efdb1b3],cs
  40bf57:	sub    bh,BYTE PTR [ebx-0x52]
  40bf5a:	jae    0x40beee
  40bf5c:	xchg   esi,eax
  40bf5d:	cld    
  40bf5e:	aaa    
  40bf5f:	in     al,0x88
  40bf61:	fadd   DWORD PTR [esi+0x46]
  40bf64:	dec    ecx
  40bf65:	gs jns 0x40bf95
  40bf68:	fcomp  QWORD PTR [ecx]
  40bf6a:	jl     0x40bf9c
  40bf6c:	pop    ecx
  40bf6d:	aad    0x8e
  40bf6f:	sahf   
  40bf70:	jecxz  0x40bf21
  40bf72:	setp   BYTE PTR ds:0x1236f804
  40bf79:	adc    dl,BYTE PTR [esi]
  40bf7b:	jmp    0x40bfd0
  40bf7d:	sub    ebp,DWORD PTR [ebx-0x7b]
  40bf80:	xchg   ecx,eax
  40bf81:	add    esp,eax
  40bf83:	into   
  40bf84:	or     ch,BYTE PTR [edx-0x3ee7221c]
  40bf8a:	(bad)  
  40bf8b:	xchg   ebx,eax
  40bf8c:	sub    al,0xbc
  40bf8e:	test   DWORD PTR [edi-0x62],ebp
  40bf91:	mov    bl,0xaf
  40bf93:	or     al,0xb6
  40bf95:	ins    DWORD PTR es:[edi],dx
  40bf96:	mov    ch,0x32
  40bf98:	mov    WORD PTR [ecx-0x11],?
  40bf9b:	mov    bh,0xd0
  40bf9d:	mov    ah,0x95
  40bf9f:	dec    ecx
  40bfa0:	mov    ecx,0x1f088836
  40bfa5:	add    DWORD PTR [esp+ebx*2],0xffffffe4
  40bfa9:	inc    esp
  40bfaa:	sbb    al,0x4c
  40bfac:	xchg   esp,eax
  40bfad:	out    0x80,al
  40bfaf:	push   ecx
  40bfb0:	xor    edx,DWORD PTR [ecx+0x53]
  40bfb3:	neg    DWORD PTR [ecx]
  40bfb5:	stos   DWORD PTR es:[edi],eax
  40bfb6:	stos   BYTE PTR es:[edi],al
  40bfb7:	imul   edx,DWORD PTR [edx],0x75
  40bfba:	adc    eax,0x8ea7c142
  40bfbf:	dec    edx
  40bfc0:	mov    ch,0x6d
  40bfc2:	test   BYTE PTR [edx],al
  40bfc4:	sub    DWORD PTR ds:[ebp+0x78958f62],ecx
  40bfcb:	pushf  
  40bfcc:	cmp    ah,BYTE PTR [edi+0x6693b53d]
  40bfd2:	xchg   ah,bl
  40bfd4:	in     eax,dx
  40bfd5:	sub    bh,ch
  40bfd7:	xor    edx,0x79
  40bfda:	mov    dh,dl
  40bfdc:	add    ch,BYTE PTR [eax-0x17]
  40bfdf:	pop    edi
  40bfe0:	fsubr  QWORD PTR [edi+ebx*8+0x5e49fc8f]
  40bfe7:	fst    st(7)
  40bfe9:	mov    ds:0xd024870e,eax
  40bfee:	push   0xffffff88
  40bff0:	rcl    DWORD PTR [eax-0x74],0x80
  40bff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff5:	pand   mm7,QWORD PTR [edx+0x40]
  40bff9:	add    eax,0x81ab7054
  40bffe:	mov    esi,0xe957ba06
  40c003:	dec    ebp
  40c004:	les    ebp,FWORD PTR gs:[eax-0x68db0059]
  40c00b:	mov    cl,BYTE PTR [edi]
  40c00d:	scas   al,BYTE PTR es:[edi]
  40c00e:	repz or al,0x4f
  40c011:	jmp    0x40bfd9
  40c013:	sbb    BYTE PTR [ebx],0x6d
  40c016:	sbb    BYTE PTR [edi+edx*8-0x5a626fd7],al
  40c01d:	loope  0x40c082
  40c01f:	xchg   ebx,eax
  40c020:	in     eax,dx
  40c021:	or     eax,0x1af62034
  40c026:	outs   dx,DWORD PTR ds:[esi]
  40c027:	ret    
  40c028:	jns    0x40bfdf
  40c02a:	in     al,0x14
  40c02c:	add    BYTE PTR [ebx+edx*4],al
  40c02f:	int3   
  40c030:	mov    al,0x9d
  40c032:	cmp    eax,0x5c8d3e19
  40c037:	pushf  
  40c038:	dec    edx
  40c039:	aam    0x9c
  40c03b:	das    
  40c03c:	adc    ch,ch
  40c03e:	xchg   edx,eax
  40c03f:	and    esp,eax
  40c041:	int    0x4e
  40c043:	jmp    0x40c0ab
  40c045:	xchg   ecx,eax
  40c046:	jl     0x40c010
  40c048:	popf   
  40c049:	sbb    DWORD PTR [eax],esi
  40c04b:	fmul   st(2),st
  40c04d:	(bad)  
  40c04e:	imul   edi,DWORD PTR [ecx+0x1f662c3d],0xa48b3ef
  40c058:	cmp    eax,ecx
  40c05a:	xor    BYTE PTR [edx+edx*8],cl
  40c05d:	(bad)  
  40c05e:	sar    BYTE PTR [eax],1
  40c060:	fsubp  st(0),st
  40c062:	xchg   edi,eax
  40c063:	shr    DWORD PTR [eax],0x54
  40c066:	pop    ebp
  40c067:	fcmovb st,st(6)
  40c069:	cmp    bh,cl
  40c06b:	adc    DWORD PTR [ebx+ebx*1-0x78],0xffffff8b
  40c070:	mov    DWORD PTR [eax],ebx
  40c072:	mov    edi,0x5df6b1e2
  40c077:	int    0xaa
  40c079:	jg     0x40c072
  40c07b:	cmp    BYTE PTR [eax+0x14],ah
  40c07e:	cs sub bl,bl
  40c081:	jb     0x40c057
  40c083:	or     DWORD PTR [esi+0x63b68c9a],ebp
  40c089:	or     BYTE PTR [edx+edi*8],cl
  40c08c:	or     DWORD PTR [esi-0x620c471e],ecx
  40c092:	mov    ecx,0x963927d0
  40c097:	lods   eax,DWORD PTR ds:[esi]
  40c098:	retf   0x7719
  40c09b:	pop    edx
  40c09c:	stos   DWORD PTR es:[edi],eax
  40c09d:	repnz push edi
  40c09f:	cmc    
  40c0a0:	dec    eax
  40c0a1:	adc    ebp,DWORD PTR [esi+0x34e18480]
  40c0a7:	dec    esp
  40c0a8:	test   eax,0x93eaf58d
  40c0ad:	push   ebp
  40c0ae:	push   0x6a
  40c0b0:	mov    bh,0xde
  40c0b2:	mov    BYTE PTR [ebx-0x14812171],dh
  40c0b8:	das    
  40c0b9:	(bad)  
  40c0bb:	dec    esi
  40c0bc:	xchg   ecx,eax
  40c0bd:	call   0x75c0:0x7c86504d
  40c0c4:	mov    dh,0xb5
  40c0c6:	or     DWORD PTR [ebx+0x22],edx
  40c0c9:	outs   dx,DWORD PTR ds:[esi]
  40c0ca:	jno    0x40c119
  40c0cc:	pop    es
  40c0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ce:	xchg   BYTE PTR [ebx],dl
  40c0d0:	ja     0x40c0d4
  40c0d2:	mov    esi,0x19a68562
  40c0d7:	mov    dl,0x2c
  40c0d9:	pop    ss
  40c0da:	repz push ecx
  40c0dc:	es imul edx,edx,0xe305b1c2
  40c0e3:	sub    ebx,DWORD PTR [esi-0x6d5228de]
  40c0e9:	fsub   DWORD PTR [ecx-0x7570cb8b]
  40c0ef:	jo     0x40c118
  40c0f1:	test   al,0xa5
  40c0f3:	pop    edx
  40c0f4:	cmp    dl,BYTE PTR [eax]
  40c0f6:	mov    ds:0x57a5f2e7,al
  40c0fb:	(bad)  
  40c0fc:	loope  0x40c0db
  40c0fe:	or     al,dh
  40c100:	jo     0x40c176
  40c102:	sbb    al,0x8b
  40c104:	out    0xa4,al
  40c106:	nop
  40c107:	adc    BYTE PTR [ecx+0x2d],0x1f
  40c10b:	dec    esi
  40c10c:	jne    0x40c0b4
  40c10e:	out    0x96,eax
  40c110:	fcmovbe st,st(4)
  40c112:	loope  0x40c09d
  40c114:	(bad)  
  40c115:	jp     0x40c158
  40c117:	inc    esp
  40c118:	frstor [ebp-0x2d9394a7]
  40c11e:	cs inc esp
  40c120:	jecxz  0x40c17a
  40c122:	adc    esp,DWORD PTR [ebp-0x558b384a]
  40c128:	sub    eax,0xd398106b
  40c12d:	(bad)  
  40c12e:	pop    ds
  40c12f:	(bad)  
  40c131:	mov    ecx,0xc353dd53
  40c136:	enter  0x5de9,0xbc
  40c13a:	repz add dl,BYTE PTR [ebx-0x21b889c8]
  40c141:	add    eax,0x5b0de678
  40c146:	and    ah,ch
  40c148:	fcomp  DWORD PTR [ebp-0x242ad1f9]
  40c14e:	mov    dl,0x76
  40c151:	sahf   
  40c152:	out    dx,al
  40c153:	and    BYTE PTR [esi],dh
  40c155:	scas   al,BYTE PTR es:[edi]
  40c156:	out    dx,al
  40c157:	add    bl,BYTE PTR [ebx+0x49d35ecd]
  40c15d:	add    eax,0x1328af86
  40c162:	jmp    FWORD PTR [esi]
  40c164:	scas   al,BYTE PTR es:[edi]
  40c165:	and    eax,0x177eeede
  40c16a:	dec    ebp
  40c16b:	cmp    al,0xe3
  40c16d:	cmp    eax,0xb5885626
  40c172:	mov    WORD PTR [esp+edi*8-0x27f6fa83],cs
  40c179:	sbb    edx,esi
  40c17b:	pop    edi
  40c17c:	sar    BYTE PTR [esi+0x120eb1c8],1
  40c182:	(bad)  
  40c183:	mov    ds:0x66735604,al
  40c188:	(bad)  
  40c189:	stos   BYTE PTR es:[edi],al
  40c18a:	aad    0xc1
  40c18c:	pop    eax
  40c18d:	mov    ecx,0x135afe6b
  40c192:	xlat   BYTE PTR ds:[ebx]
  40c193:	aaa    
  40c194:	lods   al,BYTE PTR ds:[esi]
  40c195:	or     al,BYTE PTR [edi-0x3]
  40c198:	push   edx
  40c199:	pop    eax
  40c19a:	cmp    bl,BYTE PTR [ecx-0x3a4831b5]
  40c1a0:	ds scas al,BYTE PTR es:[edi]
  40c1a2:	mov    dl,0x7e
  40c1a4:	test   al,0x20
  40c1a6:	dec    ecx
  40c1a7:	add    DWORD PTR [eax+0x15e23814],ebp
  40c1ad:	push   ecx
  40c1ae:	int    0x7c
  40c1b0:	lods   al,BYTE PTR ds:[esi]
  40c1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b2:	mov    dl,0xa2
  40c1b4:	rcr    BYTE PTR [ebp+0x166663c8],0x73
  40c1bb:	adc    cl,BYTE PTR [esi-0x3c]
  40c1be:	sbb    al,0xf7
  40c1c0:	shl    BYTE PTR [esp+ebp*2+0x4],0x5c
  40c1c5:	add    al,0xe3
  40c1c7:	xchg   edi,eax
  40c1c8:	adc    ecx,edx
  40c1ca:	cmp    eax,0x7d526138
  40c1cf:	adc    eax,0x5296a195
  40c1d4:	or     BYTE PTR [esi],cl
  40c1d6:	xchg   edi,eax
  40c1d7:	cmp    eax,0x5d69282
  40c1dc:	(bad)  
  40c1dd:	fldenv [ebx+ebp*2+0x36aa4198]
  40c1e4:	mov    ecx,0x40bc14ad
  40c1e9:	inc    esi
  40c1ea:	sahf   
  40c1eb:	mov    esi,0x28eec0fb
  40c1f0:	sub    BYTE PTR [ecx+0x758185b9],0x27
  40c1f7:	stc    
  40c1f8:	sahf   
  40c1f9:	sub    DWORD PTR [ebx+0x5c143370],esi
  40c1ff:	sbb    al,BYTE PTR [eax-0x593abfff]
  40c205:	retf   0x6c1e
  40c208:	jecxz  0x40c1cf
  40c20a:	push   esp
  40c20b:	xchg   ebp,eax
  40c20c:	cdq    
  40c20d:	shl    BYTE PTR [edx-0x1f],1
  40c210:	adc    ax,0xe56c
  40c214:	jne    0x40c205
  40c216:	(bad)  
  40c217:	push   edi
  40c218:	sub    eax,0x6f3a587
  40c21d:	outs   dx,DWORD PTR ds:[esi]
  40c21e:	out    0x76,eax
  40c220:	jo     0x40c1bb
  40c222:	add    bl,bl
  40c224:	pop    edi
  40c225:	jne    0x40c1e0
  40c227:	adc    BYTE PTR [ecx+ebp*8-0x30],0x68
  40c22c:	xchg   ebp,eax
  40c22d:	xor    al,0x1c
  40c22f:	sti    
  40c230:	mov    esi,0x6da75a7f
  40c235:	loope  0x40c241
  40c237:	int    0xb2
  40c239:	inc    edi
  40c23a:	push   ebx
  40c23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23c:	lods   al,BYTE PTR ds:[esi]
  40c23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c23e:	push   esi
  40c23f:	cmp    eax,0x3296f6f2
  40c244:	fxch   st(5)
  40c246:	cdq    
  40c247:	call   0x8db2ad32
  40c24c:	mov    ebx,DWORD PTR [edx]
  40c24e:	inc    ecx
  40c24f:	push   ds
  40c250:	add    esi,0x41
  40c253:	adc    BYTE PTR [edi-0x3],bh
  40c256:	leave  
  40c257:	ret    
  40c258:	lock add ch,cl
  40c25b:	pusha  
  40c25c:	xchg   ecx,eax
  40c25d:	imul   ebx,esi,0x4c2b6daf
  40c263:	hlt    
  40c264:	and    BYTE PTR [edi-0x772b660f],0xf1
  40c26b:	out    0xd0,eax
  40c26d:	xchg   esp,eax
  40c26e:	pushf  
  40c26f:	shl    BYTE PTR [esp+eiz*2+0x2d],cl
  40c273:	scas   eax,DWORD PTR es:[edi]
  40c274:	inc    edi
  40c275:	fsub   DWORD PTR ds:0x5a0be5da
  40c27b:	ins    DWORD PTR es:[edi],dx
  40c27c:	xor    eax,0x2f991699
  40c281:	cmp    al,0xc1
  40c283:	dec    edx
  40c284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c285:	mov    eax,0xd0716d6c
  40c28a:	jbe    0x40c219
  40c28c:	push   ds
  40c28d:	jo     0x40c25a
  40c28f:	jmp    0xd7c7950e
  40c294:	stc    
  40c295:	loop   0x40c2e9
  40c297:	out    0x4,al
  40c299:	add    eax,0x1ce15101
  40c29e:	loopne 0x40c2a5
  40c2a0:	in     eax,dx
  40c2a1:	in     al,dx
  40c2a2:	dec    esi
  40c2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a4:	js     0x40c2eb
  40c2a6:	cli    
  40c2a7:	(bad)  
  40c2a8:	in     al,0x47
  40c2aa:	sub    al,0x17
  40c2ac:	fild   QWORD PTR [ecx]
  40c2ae:	iret   
  40c2af:	sar    dl,cl
  40c2b1:	ins    DWORD PTR es:[edi],dx
  40c2b2:	xlat   BYTE PTR ds:[ebx]
  40c2b3:	popa   
  40c2b4:	shr    BYTE PTR [edx+ebx*1],0x51
  40c2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b9:	mov    al,ds:0x767ac113
  40c2be:	js     0x40c2a4
  40c2c0:	inc    edx
  40c2c1:	push   edi
  40c2c2:	push   ebp
  40c2c3:	inc    ecx
  40c2c4:	add    BYTE PTR [edi],cl
  40c2c6:	dec    ebx
  40c2c7:	adc    bl,BYTE PTR [ebp+0x79d9235b]
  40c2cd:	mov    al,ds:0x3e9187c0
  40c2d2:	jmp    0xb:0xaedacf46
  40c2d9:	xchg   ecx,eax
  40c2da:	mov    ds:0xf26d368d,al
  40c2df:	or     BYTE PTR [eax-0x3f],al
  40c2e2:	inc    eax
  40c2e3:	dec    ecx
  40c2e4:	jbe    0x40c2e0
  40c2e6:	jo     0x40c2da
  40c2e8:	and    al,BYTE PTR [eax-0x7ef129ae]
  40c2ee:	xchg   esi,eax
  40c2ef:	iret   
  40c2f0:	inc    edi
  40c2f1:	ret    0xee68
  40c2f4:	mov    eax,0x4f06cee7
  40c2f9:	adc    dl,dh
  40c2fb:	xor    al,BYTE PTR [edx+0x706a5cb4]
  40c301:	mov    bh,cl
  40c303:	xchg   ebp,eax
  40c304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c305:	adc    DWORD PTR [ecx+0x4a],edi
  40c308:	push   0x60
  40c30a:	jmp    0x40c383
  40c30c:	pop    eax
  40c30d:	sbb    ch,BYTE PTR [ebp+0x35]
  40c310:	adc    edx,ebx
  40c312:	pop    ds
  40c313:	sub    BYTE PTR [ebp+ebx*4+0x37f911a1],dl
  40c31a:	(bad)  
  40c31b:	pop    edi
  40c31c:	push   es
  40c31d:	lods   eax,DWORD PTR gs:[esi]
  40c31f:	or     ebp,DWORD PTR [esi+0x55cf45d9]
  40c325:	pop    ebx
  40c326:	mov    bh,al
  40c328:	div    cl
  40c32a:	je     0x40c312
  40c32c:	push   esp
  40c32d:	int3   
  40c32e:	loope  0x40c342
  40c330:	outs   dx,BYTE PTR ds:[esi]
  40c331:	es xchg ebx,eax
  40c333:	dec    esp
  40c334:	sbb    DWORD PTR [edx-0x52b2c95b],ecx
  40c33a:	push   ecx
  40c33b:	jno    0x40c3b0
  40c33d:	imul   ecx,edi,0x6b
  40c340:	cmp    bh,BYTE PTR [edx+edi*4-0x63b15f0b]
  40c347:	and    esi,ecx
  40c349:	sub    ch,BYTE PTR [ebp+0x2d924a2f]
  40c34f:	and    DWORD PTR [ebp-0x16],ebp
  40c352:	pusha  
  40c353:	mov    bh,0xbc
  40c355:	cs out dx,eax
  40c357:	outs   dx,DWORD PTR ds:[esi]
  40c358:	cmp    al,0xe4
  40c35a:	(bad)  
  40c35b:	call   0x3d51:0x724fc122
  40c362:	pop    ss
  40c363:	cdq    
  40c364:	inc    esp
  40c365:	pop    esi
  40c366:	dec    esi
  40c367:	mov    ds:0xee086523,eax
  40c36c:	test   DWORD PTR [ecx-0x343f0be],ebp
  40c372:	leave  
  40c373:	jns    0x40c3de
  40c375:	dec    ebp
  40c376:	or     esi,esi
  40c378:	mov    BYTE PTR [eax+0x2c146092],ch
  40c37e:	loop   0x40c3dc
  40c380:	test   eax,0x4990b188
  40c385:	adc    al,0x92
  40c387:	(bad)  
  40c388:	jmp    0x34e0:0x9486cb25
  40c38f:	jle    0x40c3b7
  40c391:	add    al,0xd5
  40c393:	je     0x40c40e
  40c395:	cli    
  40c396:	in     eax,dx
  40c397:	lahf   
  40c398:	sub    BYTE PTR [eax+0x13],ah
  40c39b:	cwde   
  40c39c:	(bad)  
  40c39d:	leave  
  40c39e:	or     BYTE PTR [esi+0x49],dl
  40c3a1:	sbb    eax,0xd9ffe6b7
  40c3a6:	mov    eax,ds:0xbc73bd10
  40c3ab:	jmp    0x89aa:0x3aacc983
  40c3b2:	stos   DWORD PTR es:[edi],eax
  40c3b3:	or     DWORD PTR [ebp+0x55],esp
  40c3b6:	push   eax
  40c3b7:	jg     0x40c351
  40c3b9:	sbb    eax,0x632e83b8
  40c3be:	sahf   
  40c3bf:	pop    eax
  40c3c0:	int3   
  40c3c1:	push   0x68f6f65a
  40c3c6:	push   0xffffffa0
  40c3c8:	into   
  40c3c9:	push   0x64fe4efd
  40c3ce:	dec    ebx
  40c3cf:	mov    bl,0x8a
  40c3d1:	outs   dx,DWORD PTR ds:[esi]
  40c3d2:	sti    
  40c3d3:	daa    
  40c3d4:	push   cs
  40c3d5:	jp     0x40c418
  40c3d7:	retf   0xdac3
  40c3da:	js     0x40c35c
  40c3dc:	mov    ebx,0x110ab5df
  40c3e1:	and    DWORD PTR [ecx-0x9],ecx
  40c3e4:	pop    es
  40c3e5:	fwait
  40c3e6:	repnz in eax,dx
  40c3e8:	mov    BYTE PTR [ebx-0x21],cl
  40c3eb:	inc    esi
  40c3ec:	test   al,0x9
  40c3ee:	das    
  40c3ef:	mov    bl,0xde
  40c3f1:	jge    0x40c44c
  40c3f3:	in     al,0xdf
  40c3f5:	call   0x26cb:0x1d600fe6
  40c3fc:	(bad)  
  40c3fd:	and    al,0x9a
  40c3ff:	mov    ebp,0xf279309e
  40c404:	leave  
  40c405:	sbb    edi,DWORD PTR [ecx]
  40c407:	sub    eax,0x75fd8688
  40c40c:	inc    edx
  40c40d:	dec    esi
  40c40e:	call   0xfa57:0x75f68378
  40c415:	ret    
  40c416:	and    al,BYTE PTR [eax]
  40c418:	and    dh,BYTE PTR [edi+0x24]
  40c41b:	sbb    bl,ch
  40c41d:	clc    
  40c41e:	cmp    cl,BYTE PTR [edi-0x4d]
  40c421:	into   
  40c422:	sbb    bl,ch
  40c424:	mov    ds:0xa5957f13,eax
  40c429:	dec    esi
  40c42a:	sbb    BYTE PTR [edx],0x22
  40c42d:	(bad)  
  40c42e:	scas   eax,DWORD PTR es:[edi]
  40c42f:	xor    ch,cl
  40c431:	sub    eax,DWORD PTR [ebx-0x50]
  40c434:	cmp    edi,DWORD PTR ds:0x9edb0f01
  40c43a:	mov    ch,0xb5
  40c43c:	mov    al,0xe7
  40c43e:	xchg   ecx,eax
  40c43f:	(bad)  
  40c440:	out    dx,eax
  40c441:	stos   DWORD PTR es:[di],eax
  40c443:	retf   
  40c444:	icebp  
  40c445:	ds jmp 0x8cbd04b9
  40c44b:	fcom   QWORD PTR [ebx-0x18e928b7]
  40c451:	inc    ebp
  40c452:	sbb    BYTE PTR [ecx-0x44],al
  40c455:	rol    DWORD PTR [edx],1
  40c457:	jge    0x40c4d2
  40c459:	jl     0x40c41f
  40c45b:	push   edi
  40c45c:	and    al,0x3c
  40c45e:	xor    DWORD PTR [esi],ebx
  40c460:	mov    bl,0xd4
  40c462:	pop    ds
  40c463:	jg     0x40c477
  40c465:	(bad)  
  40c466:	fs enter 0xbe0d,0xe2
  40c46b:	arpl   di,di
  40c46d:	xlat   BYTE PTR ds:[bx]
  40c46f:	in     al,dx
  40c470:	(bad)
  40c474:	int    0x86
  40c476:	loope  0x40c435
  40c478:	jp     0x40c42e
  40c47a:	xchg   ecx,eax
  40c47b:	loopne 0x40c478
  40c47d:	arpl   WORD PTR [esi+ecx*2+0x2ee057b2],sp
  40c484:	add    al,0x89
  40c486:	arpl   WORD PTR [ebp+0x1a3a70b2],bp
  40c48c:	int    0xd8
  40c48e:	mov    BYTE PTR [eax],dl
  40c490:	sbb    al,0xc7
  40c492:	into   
  40c493:	test   DWORD PTR gs:[ebp-0x6d],ebp
  40c497:	outs   dx,DWORD PTR ds:[esi]
  40c498:	jmp    0xde0:0xba903528
  40c49f:	fst    DWORD PTR [ebp-0x3d]
  40c4a2:	imul   esi,DWORD PTR [ebx+0x1c0c9ba8],0xca3ab9f6
  40c4ac:	mov    edi,0x1e9a392f
  40c4b1:	cdq    
  40c4b2:	ret    0x8e47
  40c4b5:	add    al,0xca
  40c4b7:	loop   0x40c527
  40c4b9:	enter  0x9141,0x43
  40c4bd:	js     0x40c527
  40c4bf:	in     eax,dx
  40c4c0:	cmp    eax,0x9eec268e
  40c4c5:	cmp    dl,0xb2
  40c4c8:	fs cmc 
  40c4ca:	ficom  DWORD PTR [ebx]
  40c4cc:	loopne 0x40c523
  40c4ce:	jl     0x40c498
  40c4d0:	aad    0x22
  40c4d2:	icebp  
  40c4d3:	aaa    
  40c4d4:	stos   DWORD PTR es:[edi],eax
  40c4d5:	mov    al,ds:0x1b81b302
  40c4da:	push   ebx
  40c4db:	sub    BYTE PTR [ebp-0x79],ch
  40c4de:	mov    fs,WORD PTR [esi-0x36]
  40c4e1:	inc    esi
  40c4e2:	fldl2e 
  40c4e4:	mov    dh,BYTE PTR [ebp+eax*1+0x7abdc37a]
  40c4eb:	ins    DWORD PTR es:[edi],dx
  40c4ec:	xor    BYTE PTR [edx+0x53],bl
  40c4ef:	popa   
  40c4f0:	out    0x8b,al
  40c4f2:	sbb    al,0x9f
  40c4f4:	xchg   ebx,eax
  40c4f5:	daa    
  40c4f6:	fdiv   st,st(1)
  40c4f8:	dec    ecx
  40c4f9:	mov    edx,0xd91a8496
  40c4fe:	adc    DWORD PTR [eax-0x4e],esp
  40c501:	mov    DWORD PTR [ebp+0x19],edi
  40c504:	cmp    eax,0xe7466c4
  40c509:	jg     0x40c524
  40c50b:	stos   BYTE PTR es:[edi],al
  40c50c:	push   0x4c21c065
  40c511:	or     bl,BYTE PTR [esi+0x5b]
  40c514:	xchg   ebx,eax
  40c515:	ins    DWORD PTR es:[edi],dx
  40c516:	inc    edi
  40c517:	mov    dl,0x53
  40c519:	inc    ebx
  40c51a:	push   edi
  40c51b:	aaa    
  40c51c:	pop    ebp
  40c51d:	mov    ds:0xcef6edcb,eax
  40c522:	dec    edi
  40c523:	pop    esi
  40c524:	mov    esp,0x68f2495c
  40c529:	leave  
  40c52a:	adc    al,0xbf
  40c52c:	xor    BYTE PTR [esi],0x4b
  40c52f:	jne    0x40c502
  40c531:	std    
  40c532:	push   cs
  40c533:	sti    
  40c534:	mov    edx,0xd3fb1aa5
  40c539:	rcr    DWORD PTR [edi+ecx*1+0x7aa8ba9e],cl
  40c540:	enter  0xee73,0xec
  40c544:	imul   ecx,DWORD PTR [edx-0xa],0x4
  40c548:	jg     0x40c53a
  40c54a:	cmp    al,0x81
  40c54c:	ret    
  40c54d:	lea    esi,gs:[edx+ebp*1-0x5]
  40c552:	mov    ch,0x63
  40c554:	sahf   
  40c555:	add    DWORD PTR [edi],edi
  40c557:	cmp    eax,0xdd7aa73b
  40c55c:	outs   dx,DWORD PTR ds:[esi]
  40c55d:	ja     0x40c542
  40c55f:	arpl   WORD PTR [edi-0x11a4c968],bp
  40c565:	scas   eax,DWORD PTR es:[edi]
  40c566:	mov    edi,0xc08b81b1
  40c56b:	push   eax
  40c56c:	adc    cl,BYTE PTR [ecx]
  40c56e:	jg     0x40c5c2
  40c570:	sbb    DWORD PTR [eax+0x1e6f9535],ebx
  40c576:	inc    esi
  40c577:	mov    WORD PTR [ebp+ebx*2+0x3536b647],gs
  40c57e:	or     DWORD PTR [ebx-0x21],edx
  40c581:	les    esi,FWORD PTR [edi]
  40c583:	addr16 adc ch,ah
  40c586:	aad    0xd2
  40c588:	inc    esp
  40c589:	or     esi,DWORD PTR [eax-0x4e]
  40c58c:	cmp    BYTE PTR [ecx-0xbebd32d],ch
  40c592:	cwde   
  40c593:	sub    ecx,DWORD PTR [ebp*1+0x58e8b6f0]
  40c59a:	fst    DWORD PTR [ebx+0x19]
  40c59d:	ret    
  40c59e:	push   ss
  40c59f:	and    esp,ebx
  40c5a1:	retf   0xa5a0
  40c5a4:	imul   ebx,DWORD PTR [esi],0xeae39e82
  40c5aa:	push   esp
  40c5ab:	int    0xaa
  40c5ad:	neg    DWORD PTR [edi+0x71]
  40c5b0:	add    BYTE PTR [ebp-0xa],dl
  40c5b3:	js     0x40c5c5
  40c5b5:	pop    eax
  40c5b6:	jl     0x40c580
  40c5b8:	pop    ebx
  40c5b9:	cli    
  40c5ba:	shr    BYTE PTR [esi],0x6c
  40c5bd:	pop    edx
  40c5be:	mov    BYTE PTR [edx-0x7c498aab],0x1b
  40c5c5:	push   ebx
  40c5c6:	jne    0x40c5e2
  40c5c8:	dec    ebp
  40c5c9:	sub    eax,0xb78a852a
  40c5ce:	jb     0x40c550
  40c5d0:	adc    DWORD PTR [ecx],esi
  40c5d2:	sub    ebp,DWORD PTR [ebx]
  40c5d4:	cs (bad) 
  40c5d6:	aas    
  40c5d7:	adc    cl,0xd9
  40c5da:	jmp    0x5f8a:0x24007219
  40c5e1:	hlt    
  40c5e2:	push   0xffffffbe
  40c5e4:	into   
  40c5e5:	sti    
  40c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e7:	and    DWORD PTR [esi],ebp
  40c5e9:	xchg   ebx,eax
  40c5ea:	lea    esp,[ebx-0x1b]
  40c5ed:	xchg   ebx,eax
  40c5ee:	ret    0x7f21
  40c5f1:	cli    
  40c5f2:	push   es
  40c5f3:	sahf   
  40c5f4:	mov    edi,0x4aa56bd5
  40c5f9:	sar    DWORD PTR [ebp+edi*1-0x77af4659],1
  40c600:	inc    ebp
  40c601:	jl     0x40c5e2
  40c603:	pop    ecx
  40c604:	ror    esi,1
  40c606:	xchg   BYTE PTR [ebx+0x46],bh
  40c609:	mov    ah,0x57
  40c60b:	or     ecx,DWORD PTR [ecx+0x29]
  40c60e:	inc    ebp
  40c60f:	xchg   edi,eax
  40c610:	adc    eax,0xb5d0795d
  40c615:	fsubr  st(7),st
  40c617:	je     0x40c623
  40c619:	test   BYTE PTR [esi-0x58],cl
  40c61c:	or     DWORD PTR [eax+0x6],edx
  40c61f:	fnstsw WORD PTR [ebp+0x5584fc9]
  40c625:	cmp    eax,ecx
  40c627:	xor    DWORD PTR [ebp-0x2e],eax
  40c62a:	and    cl,ch
  40c62c:	aas    
  40c62d:	adc    DWORD PTR [ecx-0xe],edi
  40c630:	jmp    0x1eff:0x5e0325a5
  40c637:	add    eax,0x6d739b3d
  40c63c:	popa   
  40c63d:	ret    0xff14
  40c640:	std    
  40c641:	in     eax,0xdc
  40c643:	sub    eax,0x70d9fa1
  40c648:	ficomp WORD PTR [ebx+0x76]
  40c64b:	push   ecx
  40c64c:	outs   dx,BYTE PTR ds:[esi]
  40c64d:	add    eax,0xbee49b8a
  40c652:	rcr    BYTE PTR [esi+esi*4-0x5a7ba869],1
  40c659:	in     eax,0x6c
  40c65b:	inc    ebp
  40c65c:	and    esi,esi
  40c65e:	inc    eax
  40c65f:	mov    eax,0x285fd70b
  40c664:	jg     0x40c690
  40c666:	pusha  
  40c667:	ret    0x18f2
  40c66a:	push   esp
  40c66b:	ins    BYTE PTR es:[edi],dx
  40c66c:	jp     0x40c6c5
  40c66e:	jmp    0x40c62f
  40c670:	test   eax,0xfb22ab00
  40c675:	pusha  
  40c676:	push   0x41
  40c678:	xor    al,0xf2
  40c67a:	sub    edx,edx
  40c67c:	pusha  
  40c67d:	(bad)  
  40c67e:	aas    
  40c67f:	sbb    bh,BYTE PTR [eax+0x2]
  40c682:	add    BYTE PTR [ebp+0x25],dl
  40c685:	(bad)  
  40c686:	popa   
  40c687:	jle    0x40c6b2
  40c689:	fcomi  st,st(1)
  40c68b:	cli    
  40c68c:	adc    cl,BYTE PTR [ecx+ecx*8+0xc]
  40c690:	fdivr  QWORD PTR [ebx-0x1c5ad7b8]
  40c696:	cmc    
  40c697:	sub    DWORD PTR [ecx+0x19],eax
  40c69a:	fldenv fs:[esi+edi*1]
  40c69e:	pop    edi
  40c69f:	cmp    al,0xfb
  40c6a1:	pop    edx
  40c6a2:	inc    edx
  40c6a3:	jmp    0x1656:0x80a752a1
  40c6aa:	xchg   ebx,eax
  40c6ab:	dec    ebp
  40c6ac:	xchg   DWORD PTR [edx+0x6e],esi
  40c6af:	aad    0x92
  40c6b1:	sbb    esp,DWORD PTR [edi]
  40c6b3:	pop    esi
  40c6b4:	adc    DWORD PTR [ecx-0x69],edx
  40c6b7:	fs sti 
  40c6b9:	shl    DWORD PTR [ebp-0x3a],1
  40c6bc:	sti    
  40c6bd:	or     edi,DWORD PTR [ebx+0x2c]
  40c6c0:	sar    bl,0x9b
  40c6c3:	stos   DWORD PTR es:[edi],eax
  40c6c4:	ja     0x40c715
  40c6c6:	inc    ebx
  40c6c7:	mov    bl,0x93
  40c6c9:	aad    0x8b
  40c6cb:	mov    dl,0x38
  40c6cd:	push   ss
  40c6ce:	lods   al,BYTE PTR ds:[esi]
  40c6cf:	sbb    esp,DWORD PTR [ecx]
  40c6d1:	cmp    BYTE PTR [ecx+0x17],0x4b
  40c6d5:	pop    esi
  40c6d6:	test   BYTE PTR [edi],0xff
  40c6d9:	int    0x33
  40c6db:	rcr    ebx,cl
  40c6dd:	sti    
  40c6de:	rcr    BYTE PTR [ebp+0x623ca170],0xea
  40c6e5:	lea    ebx,[edi-0x6966521b]
  40c6eb:	pop    edx
  40c6ec:	xchg   BYTE PTR [ebx+ebp*8-0x20],ch
  40c6f0:	je     0x40c68d
  40c6f2:	out    dx,eax
  40c6f3:	mov    cl,0x7b
  40c6f5:	nop
  40c6f6:	sbb    al,0xb1
  40c6f8:	push   edi
  40c6f9:	add    al,0x98
  40c6fb:	cmp    ebx,DWORD PTR [esi+0x4f590090]
  40c701:	loop   0x40c769
  40c703:	ja     0x40c721
  40c705:	inc    esp
  40c706:	das    
  40c707:	shl    eax,cl
  40c709:	mov    dh,BYTE PTR gs:[esi+0x27e8d659]
  40c710:	lds    ebp,FWORD PTR [ebp+0x2c9bab8e]
  40c716:	mov    eax,ds:0x75a47fa2
  40c71b:	(bad)  
  40c71d:	mov    esp,0x6a110ff5
  40c722:	rcl    DWORD PTR [eax],cl
  40c724:	dec    eax
  40c725:	mov    bh,0x40
  40c727:	sbb    ebp,DWORD PTR [edi+0x30035466]
  40c72d:	jg     0x40c777
  40c72f:	fdivr  QWORD PTR [edx+0x10]
  40c732:	call   0x41e5:0xd38dfe3a
  40c739:	or     eax,0x71b9d751
  40c73e:	jg     0x40c725
  40c740:	mov    ds:0x631cc542,al
  40c745:	xor    eax,0xd98f749a
  40c74a:	xchg   edx,eax
  40c74b:	in     al,0x33
  40c74d:	mov    ah,BYTE PTR fs:[eax-0xc]
  40c751:	sub    ah,BYTE PTR [ebp+0x6ccf7244]
  40c757:	cmp    al,0x91
  40c759:	in     eax,0xee
  40c75b:	gs ret 
  40c75d:	lods   al,BYTE PTR ds:[esi]
  40c75e:	(bad)
  40c762:	push   es
  40c763:	push   ds
  40c764:	jg     0x40c752
  40c766:	pop    eax
  40c767:	pop    ebp
  40c768:	mov    eax,0x57457d5d
  40c76d:	addr16 xor al,0x25
  40c770:	leave  
  40c771:	mov    ds:0xd583bcb4,eax
  40c776:	enter  0xacd9,0x6e
  40c77a:	xchg   edx,eax
  40c77b:	push   es
  40c77c:	stc    
  40c77d:	xor    DWORD PTR [ebp+0x6ebcee9d],eax
  40c783:	test   BYTE PTR [ebx-0x1640bfa1],ch
  40c789:	mov    cs:0x6a34d44a,al
  40c78f:	(bad)  [edi-0x68bf651]
  40c795:	xchg   ebp,eax
  40c796:	int    0x36
  40c798:	pop    eax
  40c799:	dec    eax
  40c79a:	nop
  40c79b:	sar    BYTE PTR [ecx],cl
  40c79d:	ja     0x40c7c5
  40c79f:	dec    ah
  40c7a1:	and    eax,0x9611d7e9
  40c7a6:	mov    bl,0x70
  40c7a8:	popa   
  40c7a9:	pop    eax
  40c7aa:	inc    edi
  40c7ab:	or     eax,0x302546bf
  40c7b0:	pop    ds
  40c7b1:	ins    BYTE PTR es:[edi],dx
  40c7b2:	sbb    eax,0x7d6a8431
  40c7b7:	pushf  
  40c7b8:	nop
  40c7b9:	popf   
  40c7ba:	in     eax,dx
  40c7bb:	xor    BYTE PTR [ebp+0x22],dh
  40c7be:	push   cs
  40c7bf:	div    DWORD PTR [edx]
  40c7c1:	in     al,0xe8
  40c7c3:	sub    DWORD PTR [ebp-0x1f],esi
  40c7c6:	cmp    esi,DWORD PTR [eax+0x414449b9]
  40c7cc:	xor    eax,0x8c85db1f
  40c7d1:	add    ebx,DWORD PTR [ecx]
  40c7d3:	add    al,0x69
  40c7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d6:	xlat   BYTE PTR ds:[ebx]
  40c7d7:	imul   ebp,DWORD PTR [ebx+edi*8+0x56],0x21
  40c7dc:	mov    ebp,0x84a5a8b
  40c7e1:	add    edx,eax
  40c7e3:	and    DWORD PTR [eax-0x34],ecx
  40c7e6:	jp     0x40c82f
  40c7e8:	push   esp
  40c7e9:	cwde   
  40c7ea:	in     eax,0x78
  40c7ec:	retf   
  40c7ed:	ss ret 
  40c7ef:	int    0xc0
  40c7f1:	mov    ebx,0x62c19df8
  40c7f6:	stc    
  40c7f7:	ffreep st(2)
  40c7f9:	cmp    DWORD PTR [ecx],esp
  40c7fb:	js     0x40c7df
  40c7fd:	push   0xc32e6da5
  40c802:	push   esi
  40c803:	xor    ebp,DWORD PTR [edx+ebx*4-0x5609d8c3]
  40c80a:	loopne 0x40c825
  40c80c:	in     al,0x38
  40c80e:	aad    0xb6
  40c810:	xor    eax,0x353fad5a
  40c815:	xchg   edx,eax
  40c816:	jl     0x40c892
  40c818:	mov    esp,DWORD PTR [ebx]
  40c81a:	popf   
  40c81b:	fstp   QWORD PTR [eax+edx*2+0x45]
  40c81f:	imul   esp,ebp,0xffffffd3
  40c822:	(bad)
  40c826:	mov    ebp,0xf6423c46
  40c82b:	(bad)  
  40c82d:	adc    al,0xe8
  40c82f:	push   edx
  40c830:	mov    eax,ds:0xd42453d9
  40c835:	lock repz jle 0x40c835
  40c839:	pop    ecx
  40c83a:	fwait
  40c83b:	mov    dh,0x62
  40c83d:	and    eax,0xbf7bc89e
  40c842:	rdpmc  
  40c844:	call   0xf0041c41
  40c849:	fbld   TBYTE PTR [eax+0x33]
  40c84c:	xchg   ecx,eax
  40c84d:	clc    
  40c84e:	xchg   ecx,eax
  40c84f:	(bad)
  40c852:	(bad)  
  40c854:	call   0xc088:0x48245108
  40c85b:	int3   
  40c85c:	repnz dec edi
  40c85e:	hlt    
  40c85f:	pop    esp
  40c860:	sbb    DWORD PTR [ecx-0x59994d9],edx
  40c866:	mov    edi,0xfe5cf0f0
  40c86b:	xor    BYTE PTR [eax-0x4],ah
  40c86e:	dec    eax
  40c86f:	xor    al,0x7c
  40c871:	repnz pop edx
  40c873:	or     eax,0x41c8d5e8
  40c878:	inc    edx
  40c879:	jg     0x40c848
  40c87b:	xor    eax,edi
  40c87d:	lods   eax,DWORD PTR ds:[esi]
  40c87e:	mov    eax,ds:0x3f47c0e0
  40c883:	ror    DWORD PTR [esi-0x2f897274],1
  40c889:	repz cmp al,0x55
  40c88c:	cmp    DWORD PTR [ecx+0x6b],esp
  40c88f:	cmp    cl,BYTE PTR [eax]
  40c891:	loop   0x40c867
  40c893:	adc    esp,esp
  40c895:	jg     0x40c8cc
  40c897:	shl    BYTE PTR [ebx],0x4a
  40c89a:	arpl   WORD PTR [ebx-0x80],bx
  40c89d:	mov    cl,0xe8
  40c89f:	iret   
  40c8a0:	imul   DWORD PTR ds:0x60ed8817
  40c8a6:	push   ecx
  40c8a7:	dec    esp
  40c8a8:	sub    bh,BYTE PTR [eax+0x4500961]
  40c8ae:	jne    0x40c8cf
  40c8b0:	sub    BYTE PTR [edx+0x7aabfcae],dh
  40c8b6:	mov    eax,ds:0x33aa925d
  40c8bb:	mov    esi,0x7839feb5
  40c8c0:	clc    
  40c8c1:	sbb    BYTE PTR [edx],bh
  40c8c3:	cmc    
  40c8c4:	fdiv   QWORD PTR [ecx]
  40c8c6:	push   es
  40c8c7:	or     esi,esi
  40c8c9:	jecxz  0x40c8eb
  40c8cb:	xor    al,0xec
  40c8cd:	jl     0x40c874
  40c8cf:	adc    BYTE PTR [esi+0x78454166],bh
  40c8d5:	xchg   ebp,eax
  40c8d6:	xlat   BYTE PTR cs:[ebx]
  40c8d8:	pop    ss
  40c8d9:	cmp    bl,bl
  40c8db:	outs   dx,BYTE PTR ds:[esi]
  40c8dc:	repz push eax
  40c8de:	clc    
  40c8df:	mov    ch,0x1d
  40c8e1:	fiadd  WORD PTR [edi-0x1a]
  40c8e4:	retf   0x908c
  40c8e7:	div    cl
  40c8e9:	lock push 0xa6aee9fd
  40c8ef:	int3   
  40c8f0:	(bad)  
  40c8f1:	pop    ss
  40c8f2:	ret    0x9de9
  40c8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f6:	mov    eax,0xf79dc134
  40c8fb:	in     al,0x77
  40c8fd:	stos   BYTE PTR es:[edi],al
  40c8fe:	std    
  40c8ff:	dec    esi
  40c900:	sbb    al,0x89
  40c902:	sbb    ch,ch
  40c904:	arpl   WORD PTR [eax-0x18679c0b],cx
  40c90a:	neg    DWORD PTR [eax-0x7f899ce7]
  40c910:	mov    esi,0xbcb87126
  40c915:	and    al,0xeb
  40c917:	lods   al,BYTE PTR ds:[esi]
  40c918:	mov    edx,0x901971e6
  40c91d:	js     0x40c90e
  40c91f:	add    edi,DWORD PTR [ebx-0x2907e2d5]
  40c925:	adc    eax,DWORD PTR [ebx]
  40c927:	retf   0xc7cf
  40c92a:	push   0xca46d73b
  40c92f:	mov    ds:0x9a269609,al
  40c934:	ret    0x76b2
  40c937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c938:	or     al,0xd0
  40c93a:	ds mov ebp,0x740a851b
  40c940:	aad    0x14
  40c942:	(bad)  
  40c943:	aam    0xad
  40c945:	shl    eax,1
  40c947:	inc    ebx
  40c948:	pop    ss
  40c949:	stos   DWORD PTR es:[edi],eax
  40c94a:	mov    ch,0x2b
  40c94c:	test   al,0xa9
  40c94e:	sub    eax,0x2708f396
  40c953:	jmp    0xd55b1d36
  40c958:	ret    0x47f4
  40c95b:	or     DWORD PTR [edi],ebx
  40c95d:	je     0x40c9a2
  40c95f:	rcr    esp,cl
  40c961:	pop    ss
  40c962:	or     esp,0xffffffb8
  40c965:	enter  0xebce,0x79
  40c969:	adc    al,0x2c
  40c96b:	fild   DWORD PTR ds:0x3ce7f58a
  40c971:	adc    DWORD PTR ds:0xa0d79311,ebp
  40c977:	xor    DWORD PTR [edx+0x4f],eax
  40c97a:	paddd  mm0,mm0
  40c97d:	retf   
  40c97e:	imul   esp,DWORD PTR [ebx],0x27c411cc
  40c984:	adc    ah,dl
  40c986:	scas   eax,DWORD PTR es:[edi]
  40c987:	imul   edx,DWORD PTR [eax-0x2d],0x3f
  40c98b:	imul   eax,DWORD PTR [eax-0x69c6bf11],0x43926a9e
  40c995:	dec    edi
  40c996:	push   ds
  40c997:	out    0x9,al
  40c999:	and    dh,BYTE PTR [ebx-0x3e]
  40c99c:	call   0x9db7:0x3004ef93
  40c9a3:	call   0x90ba:0x591ac88e
  40c9aa:	jecxz  0x40ca08
  40c9ac:	push   edx
  40c9ad:	out    dx,al
  40c9ae:	fdivr  DWORD PTR [ecx+ebx*2-0x44]
  40c9b2:	sub    eax,0x7f25979c
  40c9b7:	aaa    
  40c9b8:	mov    esi,0xa4a4fe3b
  40c9bd:	fucom  st(6)
  40c9bf:	inc    edx
  40c9c0:	mov    DWORD PTR [eax-0x655489c3],eax
  40c9c6:	cmp    eax,0x951249d0
  40c9cb:	cmc    
  40c9cc:	mov    cl,bl
  40c9ce:	mov    ebx,0xc25876e7
  40c9d3:	mov    ebx,0x20d638b
  40c9d8:	jne    0x40ca30
  40c9da:	sub    al,0xea
  40c9dc:	addr16 dec edx
  40c9de:	dec    eax
  40c9df:	retf   0x84f9
  40c9e2:	out    0xf5,al
  40c9e4:	mov    cl,0x77
  40c9e6:	pop    edx
  40c9e7:	xchg   ebx,eax
  40c9e8:	adc    edi,esi
  40c9ea:	pop    edx
  40c9eb:	fiadd  DWORD PTR [esi-0x26]
  40c9ee:	xchg   esp,eax
  40c9ef:	push   es
  40c9f0:	mov    al,ds:0x13d3b0b2
  40c9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f6:	mov    dl,0x77
  40c9f8:	call   0xffb1:0x29ebb74
  40c9ff:	xor    ebp,DWORD PTR [esi+0x1a]
  40ca02:	and    DWORD PTR [edx-0x64710478],0x597a72e3
  40ca0c:	ret    0x4892
  40ca0f:	lds    eax,FWORD PTR [edx+0x46aca1d0]
  40ca15:	(bad)  
  40ca16:	push   edi
  40ca17:	add    eax,0x14b55fe0
  40ca1c:	cmp    bh,BYTE PTR [esi+ebx*8-0xea13947]
  40ca23:	leave  
  40ca24:	rcr    BYTE PTR ds:0xd535e869,cl
  40ca2a:	inc    esi
  40ca2b:	lds    ebp,FWORD PTR [eax-0x21]
  40ca2e:	cdq    
  40ca2f:	ror    ch,0x1b
  40ca32:	add    edi,DWORD PTR [ebx+0x78]
  40ca35:	dec    esp
  40ca36:	xchg   ebx,eax
  40ca37:	dec    esp
  40ca38:	jmp    0x71b5:0xc5df0495
  40ca3f:	jns    0x40c9e5
  40ca41:	int3   
  40ca42:	packuswb mm4,QWORD PTR [edi]
  40ca45:	cmp    DWORD PTR [edi+0x793e497],eax
  40ca4b:	fild   WORD PTR [edi+eax*4]
  40ca4e:	gs cdq 
  40ca50:	leave  
  40ca51:	stos   BYTE PTR es:[edi],al
  40ca52:	mov    eax,ds:0xa373164f
  40ca57:	mov    al,0x5d
  40ca59:	cmp    ch,BYTE PTR [ebx+0x19]
  40ca5c:	out    0xb6,al
  40ca5e:	mov    DWORD PTR [ebx-0x2df5755a],ecx
  40ca64:	and    ch,BYTE PTR [edx]
  40ca66:	inc    eax
  40ca67:	mov    bl,0x2b
  40ca69:	or     esi,DWORD PTR [esi+0x1ba80d3c]
  40ca6f:	or     BYTE PTR [ebx+esi*1],0xf4
  40ca73:	add    DWORD PTR [edx+0xf23a72b],0xffffffcc
  40ca7a:	sti    
  40ca7b:	gs xchg ebx,eax
  40ca7d:	pop    eax
  40ca7e:	shr    ecx,0xc9
  40ca81:	retf   
  40ca82:	cmp    al,BYTE PTR [edx-0x6b]
  40ca85:	mov    dl,0x2e
  40ca87:	jne    0x40ca09
  40ca89:	mov    esp,0xe1fdb6e0
  40ca8e:	pushf  
  40ca8f:	arpl   WORD PTR [eax+0x2f],ax
  40ca92:	aas    
  40ca93:	adc    DWORD PTR [edx+esi*8],esp
  40ca96:	dec    ebp
  40ca97:	or     al,BYTE PTR [ebp+0x60eddb72]
  40ca9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9e:	mov    dh,0x23
  40caa0:	es shl al,1
  40caa3:	or     BYTE PTR [ecx],bl
  40caa5:	inc    eax
  40caa6:	sbb    bh,ch
  40caa8:	gs fdiv DWORD PTR gs:[edx]
  40caac:	push   ebp
  40caad:	sbb    BYTE PTR [esi+0x3b],dh
  40cab0:	adc    DWORD PTR [eax],ebp
  40cab2:	xchg   BYTE PTR [edx],dl
  40cab4:	jo     0x40caed
  40cab6:	mov    ebp,0x5a92e753
  40cabb:	out    0xd5,al
  40cabd:	mov    WORD PTR [ebp-0x34dbc502],ds
  40cac3:	pop    ds
  40cac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac5:	xchg   esi,eax
  40cac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac7:	cs adc al,0xba
  40caca:	and    al,0x3b
  40cacc:	jp     0x40ca59
  40cace:	mov    ds:0x7d11e68d,al
  40cad3:	out    dx,eax
  40cad4:	mov    DWORD PTR [ebx+0x36b22d1c],edx
  40cada:	div    esi
  40cadc:	int3   
  40cadd:	jno    0x40cad0
  40cadf:	push   es
  40cae0:	jp     0x40caa4
  40cae2:	fcom   DWORD PTR [edx-0x67]
  40cae5:	cmc    
  40cae6:	xor    dl,BYTE PTR ds:0xfbb31879
  40caec:	jge    0x40cb2e
  40caee:	adc    ecx,ebp
  40caf0:	cmp    al,BYTE PTR [edi-0x5634be8f]
  40caf6:	daa    
  40caf7:	arpl   WORD PTR [ecx-0x1b3c8a8a],si
  40cafd:	mov    edi,0x4fd7200b
  40cb02:	mov    dl,0x78
  40cb04:	and    edi,ebp
  40cb06:	test   eax,0xaf28706f
  40cb0b:	pop    ebx
  40cb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0d:	bound  ebp,QWORD PTR [eax]
  40cb0f:	in     eax,0x55
  40cb11:	shr    BYTE PTR [edx-0x7a],1
  40cb14:	pushf  
  40cb15:	mov    WORD PTR [esi],es
  40cb17:	enter  0x386a,0x13
  40cb1b:	mov    eax,0x61e1f262
  40cb20:	cs into 
  40cb22:	and    ebx,DWORD PTR [ecx-0x22877d79]
  40cb28:	sar    BYTE PTR [ecx+edx*8],1
  40cb2b:	dec    esp
  40cb2c:	data16 sti 
  40cb2e:	outs   dx,DWORD PTR ds:[esi]
  40cb2f:	es pushf 
  40cb31:	inc    esp
  40cb32:	repz cs sbb al,0x5f
  40cb36:	or     BYTE PTR [esi+0x29fcb790],0x6c
  40cb3d:	ficomp WORD PTR [esi+0x6afe7a21]
  40cb43:	(bad)  [ecx-0x8]
  40cb46:	or     al,0x62
  40cb48:	stos   DWORD PTR es:[edi],eax
  40cb49:	pop    ss
  40cb4a:	popa   
  40cb4b:	jecxz  0x40cb5e
  40cb4d:	jmp    0x6b5e9654
  40cb52:	or     al,0x3b
  40cb54:	mov    esp,0x3827a600
  40cb59:	mov    ecx,0xe28dd4a7
  40cb5e:	or     BYTE PTR [edx-0x50],dh
  40cb61:	inc    esi
  40cb62:	xchg   ecx,eax
  40cb63:	scas   eax,DWORD PTR es:[edi]
  40cb64:	test   eax,0x23a450e7
  40cb69:	push   eax
  40cb6a:	add    BYTE PTR [edi+edx*1+0x6c],dh
  40cb6e:	leave  
  40cb6f:	leave  
  40cb70:	adc    BYTE PTR [edi],0x55
  40cb73:	xchg   BYTE PTR [ebx+0x186c8ea],cl
  40cb79:	jg     0x40cbeb
  40cb7b:	cmp    BYTE PTR ds:0xc49a65c7,dh
  40cb81:	outs   dx,DWORD PTR ds:[esi]
  40cb82:	js     0x40cb9c
  40cb84:	xor    DWORD PTR [edx+eax*1],0xffffffe1
  40cb88:	sbb    cl,BYTE PTR [ebx]
  40cb8a:	fist   WORD PTR [esi-0x5b]
  40cb8d:	jo     0x40cbe9
  40cb8f:	xor    al,bh
  40cb91:	pop    ecx
  40cb92:	vpackuswb xmm4,xmm4,XMMWORD PTR [edx+0x4d]
  40cb97:	jno    0x40cb43
  40cb99:	cmc    
  40cb9a:	xchg   esp,eax
  40cb9b:	push   eax
  40cb9c:	and    DWORD PTR [ebx-0x1c939ca5],ecx
  40cba2:	xchg   esi,eax
  40cba3:	pop    ds
  40cba4:	arpl   ax,di
  40cba6:	xor    ebx,DWORD PTR [ebp-0x6e6318a6]
  40cbac:	dec    edx
  40cbad:	je     0x40cc02
  40cbaf:	inc    edi
  40cbb0:	push   es
  40cbb1:	cs jmp 0x40cc1b
  40cbb4:	loopne 0x40cbee
  40cbb6:	and    esi,0x7d
  40cbb9:	test   BYTE PTR ds:0xe12e758d,ch
  40cbbf:	inc    edx
  40cbc0:	out    0x16,eax
  40cbc2:	sbb    edx,DWORD PTR [edi+eax*2-0x55aaf146]
  40cbc9:	stos   BYTE PTR es:[edi],al
  40cbca:	sbb    al,0xd8
  40cbcd:	retf   
  40cbce:	(bad)  
  40cbcf:	popa   
  40cbd0:	mov    gs,WORD PTR [ecx+0x75]
  40cbd3:	scas   eax,DWORD PTR es:[edi]
  40cbd4:	push   cs
  40cbd5:	or     DWORD PTR ds:0x85e57be2,0xcd1ed18d
  40cbdf:	(bad)  
  40cbe1:	xor    bh,BYTE PTR [ebp+0x715deeb7]
  40cbe7:	dec    eax
  40cbe8:	dec    eax
  40cbe9:	add    DWORD PTR [ecx-0x40],ecx
  40cbec:	test   eax,0x23be7bae
  40cbf1:	sub    eax,esi
  40cbf3:	mov    edi,0x4ddf6793
  40cbf8:	jns    0x40cc44
  40cbfa:	add    ebp,esi
  40cbfc:	or     BYTE PTR [ebx-0x3bbb8b79],cl
  40cc02:	idiv   edx
  40cc04:	sbb    al,0x46
  40cc06:	adc    ch,0x8e
  40cc09:	dec    ebp
  40cc0a:	sub    dh,BYTE PTR [edx-0x28]
  40cc0d:	lahf   
  40cc0e:	cmp    DWORD PTR [ecx],ebx
  40cc10:	imul   DWORD PTR [eax]
  40cc12:	inc    edx
  40cc13:	aas    
  40cc14:	add    al,0x73
  40cc16:	inc    ebp
  40cc17:	jae    0x40cc90
  40cc19:	dec    ecx
  40cc1a:	lea    ebp,ds:0x2c280d24
  40cc20:	lahf   
  40cc21:	push   ebx
  40cc22:	cmp    BYTE PTR [ecx],cl
  40cc24:	in     al,dx
  40cc25:	retf   
  40cc26:	cli    
  40cc27:	sbb    dh,bl
  40cc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc2a:	mov    edx,0x957a6a3b
  40cc2f:	mov    cl,0x17
  40cc31:	div    DWORD PTR [eax-0x3dc87587]
  40cc37:	adc    al,0x48
  40cc39:	add    edx,DWORD PTR [edx+0x2c]
  40cc3c:	cld    
  40cc3d:	mov    dh,0x55
  40cc3f:	sti    
  40cc40:	sbb    al,0x3c
  40cc42:	js     0x40cc65
  40cc44:	ror    DWORD PTR [eax+esi*8+0x3],1
  40cc48:	mov    ah,BYTE PTR cs:[edx]
  40cc4b:	daa    
  40cc4c:	mov    cl,0xbd
  40cc4e:	xchg   edx,eax
  40cc4f:	loope  0x40cbe4
  40cc51:	push   edx
  40cc52:	cmp    bl,BYTE PTR [edi+0x26622506]
  40cc58:	movups xmm6,XMMWORD PTR [ebp-0x2e11a6c3]
  40cc5f:	push   ds
  40cc60:	sahf   
  40cc61:	mov    ds:0x475ad622,eax
  40cc66:	mov    ds:0x2c0e1438,eax
  40cc6b:	not    dh
  40cc6d:	mov    al,0xb1
  40cc6f:	jne    0x40cca6
  40cc71:	mov    ds:0x91a328ac,al
  40cc76:	in     eax,dx
  40cc77:	mov    edi,0x2559ead3
  40cc7c:	mov    eax,ds:0xfc42dc40
  40cc81:	adc    al,BYTE PTR [ecx]
  40cc83:	rcl    ebx,cl
  40cc85:	or     eax,esp
  40cc87:	scas   eax,DWORD PTR es:[edi]
  40cc88:	push   edx
  40cc89:	sub    DWORD PTR [ecx-0x7d],ebp
  40cc8c:	push   esi
  40cc8d:	sti    
  40cc8e:	ss retf 
  40cc90:	push   ecx
  40cc91:	push   ds
  40cc92:	out    0x82,al
  40cc94:	xor    dl,BYTE PTR [edx]
  40cc96:	adc    al,0x98
  40cc98:	pop    DWORD PTR [edx]
  40cc9a:	mov    edx,0x6927f49e
  40cc9f:	jge    0x40cd06
  40cca1:	sub    edi,esp
  40cca3:	mov    ds:0x5e31d2a8,eax
  40cca9:	jns    0x40cc4d
  40ccab:	add    BYTE PTR [ecx+0x4c75af8e],bh
  40ccb1:	mov    ecx,0x920a349b
  40ccb6:	adc    esp,edx
  40ccb8:	xchg   ebx,eax
  40ccb9:	rcr    DWORD PTR [esi+0x43],1
  40ccbc:	or     eax,0x8fc21f35
  40ccc1:	sar    cl,0x8d
  40ccc4:	dec    edx
  40ccc5:	sar    BYTE PTR [ebx+0x2bdbe5ea],cl
  40cccb:	je     0x40ccc8
  40cccd:	iret   
  40ccce:	add    edi,DWORD PTR [edi]
  40ccd0:	inc    edx
  40ccd1:	fisttp QWORD PTR [ebp+0x56c6b5de]
  40ccd7:	mov    esp,0xe746bf25
  40ccdc:	inc    ebx
  40ccdd:	add    al,BYTE PTR [ebp+edi*8+0x4a39d0d6]
  40cce4:	or     al,0x41
  40cce6:	xor    eax,0x38b582f4
  40cceb:	sbb    BYTE PTR [ebx],bl
  40cced:	jge    0x40cc9a
  40ccef:	and    al,0xae
  40ccf1:	je     0x40cd42
  40ccf3:	dec    ebp
  40ccf4:	aaa    
  40ccf5:	repz jmp 0xb07d:0x7625202
  40ccfd:	or     BYTE PTR [esi+0x57],cl
  40cd00:	call   0xd163:0x33f96fc9
  40cd07:	pop    edi
  40cd08:	cwde   
  40cd09:	loope  0x40cd5d
  40cd0b:	retf   
  40cd0c:	cmp    al,0x6
  40cd0e:	xor    bl,al
  40cd10:	add    eax,0x50bce3b3
  40cd15:	test   al,0x5e
  40cd17:	push   ebx
  40cd18:	dec    ebx
  40cd19:	test   BYTE PTR [ebx+0x39e82b3c],ah
  40cd1f:	jp     0x40cd80
  40cd21:	mov    DWORD PTR [ebp+0x5e],ebp
  40cd24:	jmp    0x40cd25
  40cd26:	sub    edi,0x46
  40cd29:	xchg   edx,eax
  40cd2a:	add    al,0xf2
  40cd2c:	mov    eax,0xa833c73a
  40cd31:	sbb    al,BYTE PTR [edi+0x24173f8e]
  40cd37:	mov    esp,0xfe6fdc86
  40cd3c:	lahf   
  40cd3d:	dec    esi
  40cd3e:	mov    ds:0xac1419f7,eax
  40cd43:	jns    0x40cda8
  40cd45:	rcl    BYTE PTR [ecx-0x77],0x4d
  40cd49:	mov    ebp,0xa656793b
  40cd4e:	xchg   edx,eax
  40cd4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd50:	ret    0x1785
  40cd53:	jo     0x40cd47
  40cd55:	push   esi
  40cd56:	inc    ebp
  40cd57:	test   BYTE PTR [ebx],ch
  40cd59:	int3   
  40cd5a:	imul   esi,ebx,0xd70934e9
  40cd60:	ins    BYTE PTR es:[edi],dx
  40cd61:	(bad)  
  40cd62:	jae    0x40cd1b
  40cd64:	test   DWORD PTR [eax-0x13ef613a],eax
  40cd6a:	sub    al,0xd1
  40cd6c:	add    al,0x17
  40cd6e:	push   esi
  40cd6f:	jo     0x40cd9a
  40cd71:	push   0xeabecb0f
  40cd76:	mov    edx,edx
  40cd78:	cmc    
  40cd79:	adc    eax,0x79c04add
  40cd7e:	pop    ebx
  40cd7f:	pop    esi
  40cd80:	rcr    DWORD PTR [eax+0x2c],cl
  40cd83:	inc    edi
  40cd84:	dec    edx
  40cd85:	test   DWORD PTR [eax],ebx
  40cd87:	dec    eax
  40cd88:	ins    DWORD PTR es:[edi],dx
  40cd89:	push   ds
  40cd8a:	cmp    BYTE PTR [edi-0x6a],bl
  40cd8d:	pop    edx
  40cd8e:	cwde   
  40cd8f:	jp     0x40cd15
  40cd91:	popa   
  40cd92:	or     ch,BYTE PTR [edi-0x1a]
  40cd95:	mov    al,ds:0x6dd5c215
  40cd9a:	jp     0x40cd49
  40cd9c:	push   ds
  40cd9d:	sub    al,0x34
  40cd9f:	ins    DWORD PTR es:[edi],dx
  40cda0:	add    bl,ah
  40cda2:	retf   
  40cda3:	ror    cl,0xb6
  40cda6:	nop
  40cda7:	or     dh,BYTE PTR [esi]
  40cda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdaa:	daa    
  40cdab:	sar    BYTE PTR [ebx],1
  40cdad:	add    BYTE PTR [ebp-0x2a],0x27
  40cdb1:	call   0x3dee:0xf63b16d9
  40cdb8:	fmul   DWORD PTR ds:0xa677d754
  40cdbe:	adc    ah,BYTE PTR [esi+ebp*1-0x45124def]
  40cdc5:	mov    ds:0xf00af5b0,eax
  40cdca:	call   0xb2bc:0x48aa9188
  40cdd1:	mov    bh,0xf9
  40cdd3:	fidivr WORD PTR [eax+eax*4]
  40cdd6:	jnp    0x40cdcd
  40cdd8:	lods   eax,DWORD PTR ds:[esi]
  40cdd9:	iret   
  40cdda:	test   eax,0x83c249a2
  40cddf:	sahf   
  40cde0:	std    
  40cde1:	rcl    BYTE PTR [edi+0x34230855],1
  40cde7:	pop    ebx
  40cde8:	push   ss
  40cde9:	lea    edi,[ecx+0x40]
  40cdec:	in     al,0x1d
  40cdee:	xchg   DWORD PTR [ebp+0x1c4cf925],esi
  40cdf4:	xchg   esi,eax
  40cdf5:	or     DWORD PTR [eax-0x358047d6],ecx
  40cdfb:	int3   
  40cdfc:	fimul  WORD PTR [esi]
  40cdfe:	xchg   BYTE PTR [ebx+edx*1-0x6ce856a8],ch
  40ce05:	jne    0x40ce76
  40ce07:	jle    0x40ce04
  40ce09:	mov    WORD PTR [ebx-0x51],ss
  40ce0c:	mov    esi,0x5f39f66
  40ce11:	lea    edi,[ebp+0x5a8fa083]
  40ce17:	fs xchg ecx,eax
  40ce19:	xchg   ebp,eax
  40ce1a:	pushf  
  40ce1b:	test   BYTE PTR [edi],cl
  40ce1d:	cld    
  40ce1e:	cs pop ecx
  40ce20:	xchg   cx,ax
  40ce22:	stc    
  40ce23:	dec    ebx
  40ce24:	xor    esi,DWORD PTR [ecx-0x51]
  40ce27:	inc    esi
  40ce28:	push   0x42
  40ce2a:	pop    eax
  40ce2b:	pop    es
  40ce2c:	fld    DWORD PTR [edx-0x23]
  40ce2f:	inc    ecx
  40ce30:	aam    0xe5
  40ce32:	pusha  
  40ce33:	shl    bh,0xec
  40ce36:	pop    ss
  40ce37:	or     edx,0x71
  40ce3a:	inc    edi
  40ce3b:	clc    
  40ce3c:	and    dh,ah
  40ce3e:	rol    DWORD PTR [ecx+eiz*2+0x54],0x63
  40ce43:	add    BYTE PTR [edx],cl
  40ce45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce46:	sub    esi,0xffffffc5
  40ce49:	es mov cl,0x6f
  40ce4c:	enter  0xeba,0xb5
  40ce50:	lods   eax,DWORD PTR ds:[esi]
  40ce51:	lods   eax,DWORD PTR ds:[esi]
  40ce52:	jg     0x40cdd7
  40ce54:	dec    esi
  40ce55:	mov    ah,0xb7
  40ce57:	outs   dx,BYTE PTR ds:[esi]
  40ce58:	xchg   BYTE PTR [edi],ch
  40ce5a:	test   BYTE PTR ds:0x4cbf7c6,cl
  40ce60:	popa   
  40ce61:	push   ds
  40ce62:	sbb    BYTE PTR [ecx],dh
  40ce64:	mov    dl,0xf9
  40ce66:	jb     0x40cdf0
  40ce68:	mov    ds:0xe7f1efe2,al
  40ce6d:	jl     0x40ceca
  40ce6f:	pop    esp
  40ce70:	shl    DWORD PTR [eax+0x10ea51c0],0x4c
  40ce77:	dec    edx
  40ce78:	add    bh,BYTE PTR [ebp+eax*4+0x439254af]
  40ce7f:	adc    eax,0xd9b8cd57
  40ce84:	jne    0x40ceb6
  40ce86:	xchg   BYTE PTR [edi-0x58],dl
  40ce89:	mov    ch,0x61
  40ce8b:	adc    BYTE PTR [ebx-0x36],al
  40ce8e:	and    eax,0x223800eb
  40ce93:	pop    ss
  40ce94:	data16 jb 0x40cf0f
  40ce97:	cdq    
  40ce98:	jno    0x40cedf
  40ce9a:	shr    ch,0xab
  40ce9d:	xor    al,0x76
  40ce9f:	adc    BYTE PTR [ebx+0x6e800b12],al
  40cea5:	and    ecx,DWORD PTR [esi-0x67ac5cec]
  40ceab:	jo     0x40ce2e
  40cead:	mov    eax,ds:0xbce88e80
  40ceb2:	jnp    0x40ce5e
  40ceb4:	out    0xa7,al
  40ceb6:	(bad)  
  40ceb7:	xor    al,0x37
  40ceb9:	sbb    ah,ch
  40cebb:	xchg   DWORD PTR [eax+0x3d],esp
  40cebe:	dec    ebx
  40cebf:	fsubr  DWORD PTR [edx]
  40cec1:	pop    ss
  40cec2:	fmul   st,st(3)
  40cec4:	outs   dx,BYTE PTR ds:[esi]
  40cec5:	shl    DWORD PTR [esi+0x2be5a980],cl
  40cecb:	jl     0x40cee8
  40cecd:	ficom  WORD PTR [edx-0x56989a4a]
  40ced3:	enter  0x5f6e,0x5e
  40ced7:	dec    esi
  40ced8:	cmp    BYTE PTR [ebx],0x3
  40cedb:	ins    DWORD PTR es:[edi],dx
  40cedc:	fwait
  40cedd:	dec    esi
  40cede:	lods   eax,DWORD PTR ds:[esi]
  40cedf:	sbb    bl,bh
  40cee1:	loope  0x40cee5
  40cee3:	aas    
  40cee4:	aaa    
  40cee5:	sbb    DWORD PTR [ebx-0x2c],esi
  40cee8:	data16 aam 0xf1
  40ceeb:	jmp    0x1779a730
  40cef0:	pusha  
  40cef1:	mov    esi,0x4dc385da
  40cef6:	out    dx,al
  40cef7:	push   ss
  40cef8:	out    dx,al
  40cef9:	jns    0x40ce7c
  40cefb:	mov    ebp,0x59f08227
  40cf00:	mov    esi,0xc058c940
  40cf05:	adc    esi,DWORD PTR [di-0x35a6]
  40cf0a:	popf   
  40cf0b:	dec    edi
  40cf0c:	ss mov al,0x26
  40cf0f:	mov    ds:0x7e535457,al
  40cf14:	push   cs
  40cf15:	lods   eax,DWORD PTR ds:[esi]
  40cf16:	xchg   ebp,eax
  40cf17:	aad    0xb1
  40cf19:	addr16 push cs
  40cf1b:	pop    ecx
  40cf1c:	cs gs imul ebx,eax,0x56
  40cf21:	bound  ecx,QWORD PTR [edi]
  40cf23:	cld    
  40cf24:	adc    eax,0x974bc73f
  40cf29:	jmp    0xfc7c:0x6d7c8908
  40cf30:	lods   al,BYTE PTR ds:[esi]
  40cf31:	mov    esi,0x80c0a1b8
  40cf36:	bnd call 0x13261ccd
  40cf3c:	push   edi
  40cf3d:	ret    0xed97
  40cf40:	or     eax,esp
  40cf42:	fist   WORD PTR [edi+0x1acbf0b4]
  40cf48:	clc    
  40cf49:	jge    0x40cfc3
  40cf4b:	jne    0x40cf4d
  40cf4d:	not    esp
  40cf4f:	jne    0x40cf5d
  40cf51:	and    ebx,DWORD PTR [esi+0x5bb3c0f8]
  40cf57:	inc    edi
  40cf58:	adc    edi,DWORD PTR [esi+0x53]
  40cf5b:	sub    eax,0x2c7cb6a9
  40cf60:	sub    dh,BYTE PTR [ecx+ecx*1]
  40cf63:	jp     0x40cfb2
  40cf65:	or     al,0xf6
  40cf67:	fidiv  WORD PTR [ecx+0x38]
  40cf6a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40cf6c:	mov    esp,0xdc790b72
  40cf71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf72:	daa    
  40cf73:	inc    esi
  40cf74:	scas   eax,DWORD PTR es:[edi]
  40cf75:	imul   esp,DWORD PTR [esi+0x2f798352],0xebb0b35d
  40cf7f:	test   DWORD PTR [ecx+0x4c],eax
  40cf82:	push   ebp
  40cf83:	xchg   edi,eax
  40cf84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf85:	test   BYTE PTR [esi-0x58],dl
  40cf88:	sub    al,0x75
  40cf8a:	ins    DWORD PTR es:[edi],dx
  40cf8b:	add    al,0x93
  40cf8d:	aaa    
  40cf8e:	xchg   esp,edi
  40cf90:	inc    ebp
  40cf91:	dec    esp
  40cf92:	ss out dx,eax
  40cf94:	cmp    DWORD PTR [edi+0x779d60b],ebx
  40cf9a:	push   ebx
  40cf9b:	adc    al,BYTE PTR [ebp-0x4b]
  40cf9e:	test   eax,0xd04df34b
  40cfa3:	add    al,0xe5
  40cfa5:	out    0xc0,eax
  40cfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa8:	lods   al,BYTE PTR ds:[esi]
  40cfa9:	lea    ebx,[edi-0x36]
  40cfac:	push   edi
  40cfad:	xchg   ebx,eax
  40cfae:	imul   edx
  40cfb0:	mov    ah,0x74
  40cfb2:	pop    ebx
  40cfb3:	inc    edi
  40cfb4:	xor    eax,0x99c0f88c
  40cfb9:	sbb    esp,ebx
  40cfbb:	dec    eax
  40cfbc:	mov    DWORD PTR [eax],ebx
  40cfbe:	jmp    0x43b0:0x2a7c4d53
  40cfc5:	or     al,0x0
  40cfc7:	push   0xffffffe4
  40cfc9:	(bad)  
  40cfca:	jae    0x40cf68
  40cfcc:	fadd   st,st(2)
  40cfce:	add    al,0xee
  40cfd0:	ss pop ds
  40cfd2:	iret   
  40cfd3:	jbe    0x40cfcf
  40cfd5:	lahf   
  40cfd6:	sbb    DWORD PTR [edx-0x438e42ff],ebp
  40cfdc:	lahf   
  40cfdd:	adc    eax,DWORD PTR [ebx-0x2d]
  40cfe0:	push   ecx
  40cfe1:	cs push ebx
  40cfe3:	arpl   bp,si
  40cfe5:	or     al,0x97
  40cfe7:	cmp    DWORD PTR [ebx],esi
  40cfe9:	ins    DWORD PTR es:[edi],dx
  40cfea:	and    bl,BYTE PTR [ebp+0x1f]
  40cfed:	sbb    ecx,esp
  40cfef:	call   0x94a3:0x89c0a51e
  40cff6:	test   eax,0x5795f4cc
  40cffb:	mov    ah,al
  40cffd:	stos   DWORD PTR es:[edi],eax
  40cffe:	arpl   cx,dx
  40d000:	jns    0x40cf86
  40d002:	mov    bl,0x90
  40d004:	retf   0xd9f0
  40d007:	mov    bl,0x13
  40d009:	repnz add ebx,esp
  40d00c:	fs push edx
  40d00e:	mov    bl,0xc3
  40d010:	cdq    
  40d011:	imul   esi,esp,0xffffffc9
  40d014:	and    ebx,DWORD PTR [ecx]
  40d016:	mov    al,0x79
  40d018:	or     BYTE PTR [edx],ch
  40d01a:	popa   
  40d01b:	mov    eax,0x467e70b1
  40d020:	pop    edx
  40d021:	and    al,0x5c
  40d023:	adc    bh,dh
  40d025:	sub    DWORD PTR [eax],0x3858089d
  40d02b:	inc    ebx
  40d02c:	dec    edx
  40d02d:	ds clc 
  40d02f:	dec    ebp
  40d030:	inc    edi
  40d031:	jbe    0x40d01e
  40d033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d034:	lock leave 
  40d036:	mov    al,ds:0x86e0d11d
  40d03b:	adc    DWORD PTR [ecx+0x18],edi
  40d03e:	inc    ebx
  40d03f:	xchg   ebp,eax
  40d040:	xchg   edi,eax
  40d041:	cs add al,0xe9
  40d044:	ret    
  40d045:	xor    esp,DWORD PTR [edx-0x1019bfe6]
  40d04b:	ret    
  40d04c:	aam    0x5
  40d04e:	xchg   ch,al
  40d050:	push   es
  40d051:	xchg   ebp,eax
  40d052:	pop    edx
  40d053:	mov    ds:0x761dcf52,eax
  40d058:	std    
  40d059:	std    
  40d05a:	out    0xfa,al
  40d05c:	daa    
  40d05d:	fs push cs
  40d05f:	jecxz  0x40d05a
  40d061:	mov    DWORD PTR [ebp+0x5c],edi
  40d064:	(bad)  
  40d065:	pop    ds
  40d066:	sbb    BYTE PTR es:[edx+ecx*1+0x2820893e],ah
  40d06e:	pop    ss
  40d06f:	popf   
  40d070:	das    
  40d071:	fst    QWORD PTR [ebx-0x75]
  40d074:	or     al,0x8f
  40d076:	rcr    BYTE PTR [ebx+0x6c88c4e2],0x67
  40d07d:	outs   dx,BYTE PTR ds:[esi]
  40d07e:	mov    BYTE PTR [ebx-0x792c5a06],dh
  40d084:	ficomp DWORD PTR [ecx+0x798c9ed6]
  40d08a:	dec    ecx
  40d08b:	mov    esi,0x84407a83
  40d090:	cld    
  40d091:	and    BYTE PTR [esi],bh
  40d093:	sub    BYTE PTR [eax],cl
  40d095:	in     al,0xb2
  40d097:	pushf  
  40d098:	add    al,0x70
  40d09a:	shl    DWORD PTR [ebp-0x67],0xab
  40d09e:	(bad)  
  40d09f:	cdq    
  40d0a0:	mov    bh,0x14
  40d0a2:	clc    
  40d0a3:	pop    ecx
  40d0a4:	and    BYTE PTR [edi-0x7c],0x4f
  40d0a8:	mov    edi,0x38004ba2
  40d0ad:	iret   
  40d0ae:	addr16 addr16 loope 0x40d095
  40d0b2:	mov    eax,0x6fdea1c
  40d0b7:	out    dx,al
  40d0b8:	or     al,0x8e
  40d0ba:	sub    eax,0x6d0cb097
  40d0bf:	ret    0x6db6
  40d0c2:	hlt    
  40d0c3:	mov    ebp,eax
  40d0c5:	ss xor ebp,ecx
  40d0c8:	inc    edx
  40d0c9:	jbe    0x40d092
  40d0cb:	fadd   QWORD PTR [ebx-0xa]
  40d0ce:	aaa    
  40d0cf:	ja     0x40d0c3
  40d0d1:	push   cs
  40d0d2:	dec    esp
  40d0d3:	inc    BYTE PTR [eax+0x6a72a36b]
  40d0d9:	or     al,0xb5
  40d0db:	sbb    eax,0x1dfd8300
  40d0e0:	mov    fs,ecx
  40d0e2:	stos   DWORD PTR es:[edi],eax
  40d0e3:	jae    0x40d0ec
  40d0e5:	call   0xfefa345e
  40d0ea:	lods   al,BYTE PTR ds:[esi]
  40d0eb:	push   ebp
  40d0ec:	test   al,0xf
  40d0ee:	test   DWORD PTR [ebp-0x5584b084],edx
  40d0f4:	ja     0x40d086
  40d0f6:	pop    ds
  40d0f7:	in     eax,dx
  40d0f8:	inc    eax
  40d0f9:	push   0x78
  40d0fb:	lea    ebp,[ebx]
  40d0fd:	call   FWORD PTR [eax]
  40d0ff:	jo     0x40d0cb
  40d101:	test   DWORD PTR [esi+0x579c0ebf],0x9cea1d64
  40d10b:	rcr    ch,1
  40d10d:	loopne 0x40d0c3
  40d10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d110:	xchg   ebp,eax
  40d111:	mov    edx,0x247d91bd
  40d116:	mov    ds:0x7154e5db,eax
  40d11b:	test   eax,0x4f469033
  40d120:	lods   al,BYTE PTR ds:[esi]
  40d121:	test   BYTE PTR [eax-0x61f99508],bl
  40d127:	in     al,0x5a
  40d129:	cmp    al,0x14
  40d12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d12c:	dec    ebx
  40d12d:	xlat   BYTE PTR ds:[ebx]
  40d12e:	scas   al,BYTE PTR es:[edi]
  40d12f:	cmp    al,0x84
  40d131:	test   eax,0x720e7793
  40d136:	(bad)  
  40d137:	js     0x40d121
  40d139:	js     0x40d0c7
  40d13b:	lods   eax,DWORD PTR ds:[esi]
  40d13c:	xor    cl,ch
  40d13e:	inc    edx
  40d13f:	inc    edi
  40d140:	cld    
  40d141:	sub    al,0xdb
  40d143:	xchg   edi,eax
  40d144:	xchg   DWORD PTR [ebx+0xea02cac],ecx
  40d14a:	aad    0xc2
  40d14c:	fs mov edi,0xb58b8e4e
  40d152:	and    dl,al
  40d154:	mov    bl,0xff
  40d156:	pop    edi
  40d157:	stos   DWORD PTR es:[edi],eax
  40d158:	and    eax,0xbd7526df
  40d15d:	xor    DWORD PTR [edx-0x47],ecx
  40d160:	ins    DWORD PTR es:[edi],dx
  40d161:	or     al,0x92
  40d163:	pop    ss
  40d164:	pop    ax
  40d166:	jg     0x40d149
  40d168:	loopne 0x40d1c0
  40d16a:	outs   dx,DWORD PTR ds:[esi]
  40d16b:	lea    cx,[di]
  40d16f:	enter  0x164f,0x74
  40d173:	in     eax,dx
  40d174:	sbb    eax,0x70b09afe
  40d179:	dec    DWORD PTR [edx-0x1520ffd3]
  40d17f:	push   cs
  40d180:	push   ebx
  40d181:	test   eax,0xba9e698d
  40d186:	inc    ecx
  40d187:	sub    edi,eax
  40d189:	mov    edx,0x5ee312e3
  40d18e:	xchg   ebx,eax
  40d18f:	xchg   edi,eax
  40d190:	and    BYTE PTR [esi+0x29dc88d6],0x8f
  40d197:	fisttp DWORD PTR [ebx-0x345a54db]
  40d19d:	or     bh,ah
  40d19f:	fwait
  40d1a0:	mov    eax,ebx
  40d1a2:	outs   dx,BYTE PTR ds:[esi]
  40d1a3:	mov    ecx,0xeec3c0f1
  40d1a8:	add    bl,BYTE PTR [edi]
  40d1aa:	enter  0x4709,0xae
  40d1ae:	push   ebx
  40d1af:	loope  0x40d1e4
  40d1b1:	fst    QWORD PTR [eax-0x668f4952]
  40d1b7:	daa    
  40d1b8:	push   ebp
  40d1b9:	mov    bl,0x75
  40d1bb:	pop    ss
  40d1bc:	(bad)  
  40d1bd:	jae    0x40d1ae
  40d1bf:	dec    edx
  40d1c0:	add    DWORD PTR [eax],ecx
  40d1c2:	and    edx,0xffffffab
  40d1c5:	mov    ebx,0x9c9ade1d
  40d1ca:	mov    esi,0x84a1366
  40d1cf:	inc    esi
  40d1d0:	dec    ebp
  40d1d1:	scas   al,BYTE PTR es:[edi]
  40d1d2:	sbb    DWORD PTR [edi],esp
  40d1d4:	inc    esi
  40d1d5:	jae    0x40d1d5
  40d1d7:	xor    BYTE PTR [edx-0x12],cl
  40d1da:	shr    BYTE PTR [ecx-0x38],0x4
  40d1de:	inc    eax
  40d1df:	or     ebx,DWORD PTR [eax+0x4531ed60]
  40d1e5:	jmp    0x3b76:0x94c483f9
  40d1ec:	fnclex 
  40d1ee:	lods   al,BYTE PTR ds:[esi]
  40d1ef:	ficomp DWORD PTR [edx-0x704bcb6f]
  40d1f5:	rol    BYTE PTR [esi+0x19],cl
  40d1f8:	shl    DWORD PTR [ebx-0xf],1
  40d1fb:	cmp    eax,0x20711d7d
  40d200:	out    0x9f,al
  40d202:	in     al,0xef
  40d204:	push   esp
  40d205:	sub    dl,dl
  40d207:	popf   
  40d208:	or     al,0x59
  40d20a:	cmp    dh,bh
  40d20c:	mov    esp,0x4e79a191
  40d211:	mov    ecx,0xb354f71e
  40d216:	(bad)  
  40d217:	push   esp
  40d218:	jl     0x40d1a3
  40d21a:	push   esi
  40d21b:	sub    esp,DWORD PTR [ebx]
  40d21d:	popf   
  40d21e:	addr16 pop esp
  40d220:	mov    eax,0xb42da0e0
  40d225:	outs   dx,DWORD PTR ds:[esi]
  40d226:	push   esi
  40d227:	mov    ebx,0xa7cf37be
  40d22c:	fstp   DWORD PTR [ebx-0x677e75ca]
  40d232:	push   ecx
  40d233:	out    0xa4,eax
  40d235:	imul   BYTE PTR [eax]
  40d237:	adc    al,BYTE PTR [ebx+0x63d2c072]
  40d23d:	ins    BYTE PTR es:[edi],dx
  40d23e:	jnp    0x40d1df
  40d240:	push   ds
  40d241:	gs out dx,al
  40d243:	imul   esi,DWORD PTR [esi+0x12],0x61
  40d247:	mov    edi,0x281b3241
  40d24c:	sub    eax,0x3ede039
  40d251:	loopne 0x40d2cd
  40d253:	inc    eax
  40d254:	sub    al,0x70
  40d256:	and    esi,edx
  40d258:	and    eax,esi
  40d25a:	and    DWORD PTR [ebx],edx
  40d25c:	xor    ch,BYTE PTR [ecx+0x2b]
  40d25f:	shr    esp,1
  40d261:	leave  
  40d262:	push   0xd0f9395f
  40d267:	pop    ecx
  40d268:	mov    dh,0xa5
  40d26a:	pop    ecx
  40d26b:	jbe    0x40d25a
  40d26d:	aad    0x51
  40d26f:	push   ebp
  40d270:	mov    al,ds:0x6ef53154
  40d275:	cmp    bh,ch
  40d277:	pusha  
  40d278:	xchg   edi,eax
  40d279:	sbb    eax,0xa13ae02c
  40d27e:	and    DWORD PTR [edi-0x43678947],edx
  40d284:	sbb    al,0xdf
  40d286:	mov    eax,ds:0xfac48b5e
  40d28b:	loope  0x40d2ca
  40d28d:	test   edi,esp
  40d28f:	lods   eax,DWORD PTR ds:[esi]
  40d290:	cmp    DWORD PTR [edi-0x42],esi
  40d293:	pusha  
  40d294:	mov    al,ds:0x4ea5e6e6
  40d299:	xlat   BYTE PTR ds:[ebx]
  40d29a:	dec    ebp
  40d29b:	dec    esi
  40d29c:	pop    ecx
  40d29d:	call   0x679fdc0
  40d2a2:	rol    BYTE PTR [ebx],0x5c
  40d2a5:	mov    ecx,0xd9179138
  40d2aa:	int    0x97
  40d2ac:	dec    esi
  40d2ad:	and    eax,0x5f813c86
  40d2b2:	retf   
  40d2b3:	jmp    0x40d2ac
  40d2b5:	jb     0x40d301
  40d2b7:	add    eax,0xe2ed35bb
  40d2bc:	dec    eax
  40d2bd:	dec    edi
  40d2be:	push   cs
  40d2bf:	xchg   eax,ebp
  40d2c1:	pop    eax
  40d2c2:	es gs xchg ebx,eax
  40d2c5:	lahf   
  40d2c6:	push   ecx
  40d2c7:	push   esi
  40d2c8:	sub    eax,0xec0b86c8
  40d2cd:	lods   al,BYTE PTR ds:[esi]
  40d2ce:	mov    eax,ds:0x27373f8e
  40d2d3:	and    ecx,edx
  40d2d5:	pop    es
  40d2d6:	push   ds
  40d2d7:	cmp    dh,BYTE PTR [ecx+eiz*4]
  40d2da:	iret   
  40d2db:	push   0xffffffc6
  40d2dd:	dec    ebp
  40d2de:	fsub   st,st(3)
  40d2e0:	xor    DWORD PTR [ebx+0x59],ebx
  40d2e3:	pushf  
  40d2e4:	(bad)  
  40d2e5:	stos   BYTE PTR es:[edi],al
  40d2e6:	pop    ebp
  40d2e7:	loop   0x40d26b
  40d2e9:	cmp    ch,bh
  40d2eb:	pop    esi
  40d2ec:	fcom   DWORD PTR [edi+0x5018c3d7]
  40d2f2:	push   edx
  40d2f3:	push   ebp
  40d2f4:	das    
  40d2f5:	mov    edi,0x8ec407f0
  40d2fa:	or     eax,0x3ec09d0e
  40d2ff:	inc    edi
  40d300:	test   DWORD PTR [edi-0x6a8eeb1e],esp
  40d306:	jp     0x40d2a0
  40d308:	sub    DWORD PTR ds:0xfe0d3ca5,ebx
  40d30e:	neg    edx
  40d310:	sbb    al,0x2d
  40d312:	int3   
  40d313:	ret    
  40d314:	hlt    
  40d315:	mov    dh,0xe6
  40d317:	sahf   
  40d318:	inc    ecx
  40d319:	ror    esp,0xaf
  40d31c:	aas    
  40d31d:	mov    ebp,0x4c841ec0
  40d322:	aad    0x70
  40d324:	dec    ecx
  40d325:	xor    BYTE PTR [eax-0x1a],bh
  40d328:	cwde   
  40d329:	mov    dl,BYTE PTR [ebx-0x5d]
  40d32c:	mov    eax,ds:0x3dcec3e2
  40d331:	push   ecx
  40d332:	loop   0x40d39e
  40d334:	sbb    dh,BYTE PTR ds:0xe24f97f0
  40d33a:	daa    
  40d33b:	mov    edi,0x1bb4169a
  40d340:	es push esi
  40d342:	mov    WORD PTR [edi],fs
  40d344:	aad    0x9e
  40d346:	mov    WORD PTR [eax+0x21516424],es
  40d34c:	scas   al,BYTE PTR es:[edi]
  40d34d:	test   ebp,edx
  40d34f:	mov    edx,0x52bef177
  40d354:	std    
  40d355:	shl    DWORD PTR [eax+0x39a81f5f],0xb2
  40d35c:	mov    al,0x4c
  40d35e:	data16 sub bl,BYTE PTR fs:[ecx-0x3f2e8f97]
  40d366:	pop    ss
  40d367:	add    ecx,DWORD PTR [edi+0x30eeb29a]
  40d36d:	and    BYTE PTR [ecx-0x5e82a324],al
  40d373:	fmul   st(1),st
  40d375:	cmp    edx,edi
  40d377:	js     0x40d366
  40d379:	and    eax,0x543e2f82
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	push   cs
  40d3d1:	xchg   ecx,eax
  40d3d2:	sbb    dl,dl
  40d3d4:	mov    dl,0xd3
  40d3d6:	add    DWORD PTR [ebx-0x7c7ca1f4],0x33
  40d3dd:	int    0x54
  40d3df:	adc    eax,0xcbe54fd
  40d3e4:	cli    
  40d3e5:	aam    0xd
  40d3e7:	mov    edi,0x648d2fbb
  40d3ec:	lea    ebx,ds:0xc3e40224
  40d3f2:	or     DWORD PTR [esp+eax*1-0x6a856c1f],esp
  40d3f9:	jmp    0xd3619537
  40d3fe:	std    
  40d3ff:	xor    eax,DWORD PTR [ecx]
  40d401:	push   ebp
  40d402:	sbb    BYTE PTR [edx+0x5b],cl
  40d405:	and    al,0x65
  40d407:	xor    al,0x91
  40d409:	and    cl,dh
  40d40b:	jle    0x40d3e7
  40d40d:	shl    DWORD PTR [edx+edi*1+0x1418bc59],1
  40d414:	mov    eax,0x4511fc3
  40d419:	outs   dx,DWORD PTR ds:[esi]
  40d41a:	push   ss
  40d41b:	in     eax,0x7f
  40d41d:	nop
  40d41e:	jb     0x40d49a
  40d420:	or     ch,dh
  40d422:	fcom   DWORD PTR [ebp+eiz*1+0x29]
  40d426:	mov    eax,ds:0x4f90047a
  40d42b:	fnstenv ds:0x2b0335b3
  40d431:	and    BYTE PTR [ecx+ebp*4],al
  40d434:	hlt    
  40d435:	or     DWORD PTR [ebp+0x72e33704],edi
  40d43b:	mov    al,0xef
  40d43d:	adc    BYTE PTR [ebx+0x27],0xf
  40d441:	cs out dx,eax
  40d443:	(bad)  
  40d444:	sbb    al,dh
  40d446:	pop    eax
  40d447:	jecxz  0x40d446
  40d449:	call   0xf92719c1
  40d44e:	push   eax
  40d44f:	loopne 0x40d477
  40d451:	ins    BYTE PTR es:[edi],dx
  40d452:	int    0x58
  40d454:	jmp    0x326b:0xfdb5f661
  40d45b:	adc    DWORD PTR [ebx-0x512d7d3f],0xfd05f53e
  40d465:	les    ebp,FWORD PTR [ecx-0x60]
  40d468:	and    BYTE PTR [ebp-0x308491b9],bl
  40d46e:	out    dx,al
  40d46f:	mov    al,ds:0x45f81a3e
  40d474:	rcl    BYTE PTR [ebp-0x72],cl
  40d477:	lea    edi,[ebx+0x2b]
  40d47a:	add    ch,BYTE PTR [edx]
  40d47c:	push   eax
  40d47d:	sahf   
  40d47e:	sub    al,BYTE PTR ds:0xe14bbeff
  40d484:	mov    ah,0x2d
  40d486:	mov    ds:0xf870d484,eax
  40d48b:	cwde   
  40d48c:	jmp    0x4172:0x6f298621
  40d493:	out    0x8,al
  40d495:	aam    0x1c
  40d497:	add    edi,edi
  40d499:	mov    ds,WORD PTR [ebp+0x7d]
  40d49c:	stos   BYTE PTR es:[edi],al
  40d49d:	mov    ah,BYTE PTR fs:[ebp-0x304ca126]
  40d4a4:	sti    
  40d4a5:	cmc    
  40d4a6:	jmp    0xc7e9:0xd6918b86
  40d4ad:	retf   
  40d4ae:	iret   
  40d4af:	xchg   BYTE PTR gs:[edi],ch
  40d4b2:	in     al,dx
  40d4b3:	scas   al,BYTE PTR es:[edi]
  40d4b4:	outs   dx,BYTE PTR ds:[esi]
  40d4b5:	scas   al,BYTE PTR es:[edi]
  40d4b6:	mov    esp,0x4be96a4d
  40d4bb:	out    0x95,eax
  40d4bd:	mov    ds,WORD PTR [edi+eax*1+0x1b0de8d9]
  40d4c4:	outs   dx,DWORD PTR ds:[esi]
  40d4c5:	and    dl,BYTE PTR [esp+edx*4+0x55955a4f]
  40d4cc:	inc    ebp
  40d4cd:	test   esi,ebp
  40d4cf:	jbe    0x40d53c
  40d4d1:	xchg   esp,eax
  40d4d2:	add    al,0x98
  40d4d4:	nop
  40d4d5:	xlat   BYTE PTR ds:[ebx]
  40d4d6:	rcr    DWORD PTR gs:[eax-0x4f],cl
  40d4da:	lods   eax,DWORD PTR ds:[esi]
  40d4db:	(bad)
  40d4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4df:	(bad)  
  40d4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e1:	cmp    edi,eax
  40d4e3:	cmp    edi,0xffffffa9
  40d4e6:	cwde   
  40d4e7:	or     al,0x32
  40d4e9:	jae    0x40d483
  40d4eb:	xchg   ebp,eax
  40d4ec:	scas   al,BYTE PTR es:[edi]
  40d4ed:	sar    DWORD PTR [edx-0x37386c53],1
  40d4f3:	sar    BYTE PTR [ecx+0x1f],0x13
  40d4f7:	add    ch,dh
  40d4f9:	push   esi
  40d4fa:	mov    al,cl
  40d4fc:	jp     0x40d52a
  40d4fe:	pop    eax
  40d4ff:	mov    eax,ds:0x40bf424f
  40d504:	jmp    0x7d52:0x7781c4c0
  40d50b:	dec    eax
  40d50c:	mov    edx,0x90842cee
  40d511:	(bad)  
  40d512:	cmp    ebp,DWORD PTR [ebx-0xf]
  40d515:	pusha  
  40d516:	mov    esi,0x60433ce0
  40d51b:	mov    edx,0x64ce8bea
  40d520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d521:	ins    DWORD PTR es:[edi],dx
  40d522:	mov    edi,edx
  40d524:	mov    al,0xba
  40d526:	add    si,WORD PTR [esi-0x76]
  40d52a:	jbe    0x40d566
  40d52c:	rcr    DWORD PTR [ebx-0x3aebcfde],1
  40d532:	xchg   DWORD PTR [esi+0x73],esi
  40d535:	sbb    eax,0xf7e98cd1
  40d53a:	add    dl,BYTE PTR [ebp-0x23]
  40d53d:	mov    esp,0xf04129e3
  40d542:	jmp    0xeee4e725
  40d547:	retf   
  40d548:	fimul  WORD PTR [edx*2-0x4f572c1d]
  40d54f:	repz (bad)
  40d552:	cdq    
  40d553:	mov    esi,DWORD PTR [ecx]
  40d555:	sub    ebx,DWORD PTR [esi]
  40d557:	adc    dl,BYTE PTR [esp+edx*4]
  40d55a:	xlat   BYTE PTR ds:[ebx]
  40d55b:	dec    esp
  40d55c:	adc    al,0x7e
  40d55e:	cmc    
  40d55f:	mov    ah,0xa9
  40d561:	pop    ss
  40d562:	iret   
  40d563:	or     ecx,DWORD PTR [ecx]
  40d565:	sti    
  40d566:	fstp   QWORD PTR [esi+0x3f]
  40d569:	in     eax,dx
  40d56a:	mov    DWORD PTR [ebp+0x56],edx
  40d56d:	dec    eax
  40d56e:	pop    ecx
  40d56f:	pop    ebx
  40d570:	mov    eax,ds:0xbf4076dd
  40d575:	sbb    BYTE PTR [ebp-0x42],ch
  40d578:	or     DWORD PTR [eax+eax*8+0x6dcbdfc5],esp
  40d57f:	jbe    0x40d50e
  40d581:	mov    edx,0x8667e58c
  40d586:	pop    esp
  40d587:	les    esi,FWORD PTR [ecx]
  40d589:	xor    al,ch
  40d58b:	sub    al,BYTE PTR [ecx+0x45b05c6f]
  40d591:	sbb    DWORD PTR [esi],esi
  40d593:	repz sub bl,BYTE PTR [ebx-0x20]
  40d597:	xlat   BYTE PTR ds:[ebx]
  40d598:	int    0x95
  40d59a:	pushf  
  40d59b:	or     dl,BYTE PTR [esi-0x55c847c0]
  40d5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a2:	aaa    
  40d5a3:	jns    0x40d605
  40d5a5:	cli    
  40d5a6:	adc    eax,0xc2117937
  40d5ab:	lock iret 
  40d5ad:	and    esi,esi
  40d5af:	and    bh,cl
  40d5b1:	push   edi
  40d5b2:	mov    bl,0x8
  40d5b4:	adc    esp,DWORD PTR [ebp+0x38]
  40d5b7:	rcl    DWORD PTR fs:[esi-0x9511663],1
  40d5be:	xor    al,0x8b
  40d5c0:	jle    0x40d625
  40d5c2:	adc    ah,BYTE PTR [ebp+0x47565696]
  40d5c8:	mov    ch,0xf
  40d5ca:	sub    eax,0xbdd6d149
  40d5cf:	lods   eax,DWORD PTR ds:[esi]
  40d5d0:	sub    BYTE PTR [ecx+ebx*8+0x516191da],dl
  40d5d7:	rcr    dl,0x34
  40d5da:	push   edi
  40d5db:	adc    DWORD PTR [eax+0x73],0xdd08fdf8
  40d5e2:	test   eax,0xfc832d31
  40d5e7:	cdq    
  40d5e8:	pusha  
  40d5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5ea:	xor    DWORD PTR [esi],ebx
  40d5ec:	pushf  
  40d5ed:	cs sub bh,bh
  40d5f0:	xor    DWORD PTR [edx+ebp*1-0x60dfc7cb],ebp
  40d5f7:	lea    eax,ds:0x26f51ebb
  40d5fd:	(bad)  
  40d5fe:	scas   eax,DWORD PTR es:[edi]
  40d5ff:	jmp    0x954de1c7
  40d604:	mov    dl,BYTE PTR [edi-0x41]
  40d607:	in     eax,0x4a
  40d609:	lock rol DWORD PTR [ebp+0x1c],0xda
  40d60e:	adc    esi,DWORD PTR ss:[ebx]
  40d611:	xor    BYTE PTR [edi+0x48],bl
  40d614:	push   edx
  40d615:	clc    
  40d616:	mov    WORD PTR [esi-0x7e],ds
  40d619:	mov    ecx,0xf3fc45b9
  40d61e:	xchg   esi,eax
  40d61f:	mov    ecx,0x79b4f538
  40d624:	adc    ch,cl
  40d626:	cmp    al,0xa3
  40d628:	sti    
  40d629:	outs   dx,DWORD PTR ds:[esi]
  40d62a:	addr16 cwde 
  40d62c:	icebp  
  40d62d:	mov    al,ds:0x6a100913
  40d632:	jmp    0xfec8:0x4e288e23
  40d639:	ret    
  40d63a:	(bad)  [ecx]
  40d63c:	test   DWORD PTR [ecx+ecx*8+0x6750fad6],0x3ce61774
  40d647:	xchg   edi,eax
  40d648:	dec    eax
  40d649:	xchg   ebp,eax
  40d64a:	sub    eax,0x21b8fdfa
  40d64f:	jmp    0xb6f7:0x8be408c2
  40d656:	out    0xf,eax
  40d658:	pop    esp
  40d659:	shl    BYTE PTR [ecx-0x5f],cl
  40d65c:	inc    esp
  40d65d:	mov    edi,0x9423b84f
  40d662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d663:	jno    0x40d67a
  40d665:	mov    ch,BYTE PTR ds:0xbda35767
  40d66b:	push   es
  40d66c:	ss lock pop ebx
  40d66f:	cld    
  40d670:	pop    ebp
  40d671:	cli    
  40d672:	add    eax,0x66542395
  40d677:	adc    al,0x73
  40d679:	xlat   BYTE PTR ds:[ebx]
  40d67a:	dec    ebp
  40d67b:	adc    ebp,DWORD PTR [esi+ebx*4]
  40d67e:	(bad)  
  40d67f:	push   0xfcc130a2
  40d684:	sahf   
  40d685:	test   dh,ah
  40d687:	ja     0x40d6d5
  40d689:	xchg   BYTE PTR [edi+ebx*4-0x13],dl
  40d68d:	int    0xe8
  40d68f:	sbb    esi,DWORD PTR [ebp+0x51d16363]
  40d695:	outs   dx,DWORD PTR ds:[esi]
  40d696:	pop    eax
  40d697:	pop    ds
  40d698:	xor    DWORD PTR [eax+eax*8-0x4f],0xffffffa8
  40d69d:	outs   dx,BYTE PTR ds:[esi]
  40d69e:	dec    edx
  40d69f:	addr16 push ecx
  40d6a1:	and    ah,BYTE PTR [edx+0x10fe0a49]
  40d6a7:	outs   dx,BYTE PTR ds:[esi]
  40d6a8:	or     bh,BYTE PTR [edi]
  40d6aa:	xor    edx,DWORD PTR [edi]
  40d6ac:	xchg   ebp,eax
  40d6ad:	add    eax,0x320d488a
  40d6b2:	and    DWORD PTR [esi+0x7c],0xffffffd7
  40d6b6:	sbb    BYTE PTR [ebp-0x5b044876],bh
  40d6bc:	cmp    BYTE PTR [edi+eax*8-0x3f],dl
  40d6c0:	push   esi
  40d6c1:	adc    ecx,ecx
  40d6c3:	in     al,dx
  40d6c4:	dec    ecx
  40d6c5:	mov    dh,0xb4
  40d6c7:	dec    edx
  40d6c8:	xchg   esp,eax
  40d6c9:	adc    BYTE PTR [edx-0x1e1a24fb],bh
  40d6cf:	pop    ds
  40d6d0:	loope  0x40d699
  40d6d2:	neg    bl
  40d6d4:	add    esp,ecx
  40d6d6:	jmp    0x60d65bc8
  40d6db:	aam    0x7
  40d6dd:	test   dl,0x79
  40d6e0:	js     0x40d73f
  40d6e2:	pop    edi
  40d6e3:	sub    BYTE PTR [ebx-0x632ab723],ah
  40d6e9:	xchg   esi,eax
  40d6ea:	pop    ebx
  40d6eb:	inc    eax
  40d6ec:	cmp    eax,0x84f3dbd7
  40d6f1:	out    0x59,al
  40d6f3:	(bad)  
  40d6f4:	mov    edi,0x74e556d9
  40d6f9:	dec    ecx
  40d6fa:	rcl    bh,1
  40d6fc:	retf   
  40d6fd:	popf   
  40d6fe:	lea    ebp,[esi-0x38176435]
  40d704:	dec    ebx
  40d705:	ret    0x4763
  40d708:	fst    QWORD PTR [edi-0x1d7ce093]
  40d70e:	(bad)  
  40d710:	sbb    eax,0xc
  40d713:	xlat   BYTE PTR ds:[ebx]
  40d714:	adc    BYTE PTR [ebp-0x30],ch
  40d717:	xchg   DWORD PTR [eax],edi
  40d719:	mov    eax,0x9f8760bf
  40d71e:	pop    es
  40d71f:	fwait
  40d720:	jbe    0x40d6fc
  40d722:	mov    ch,BYTE PTR [edi+0x73]
  40d725:	push   cs
  40d726:	rcr    BYTE PTR [eax],cl
  40d728:	push   ecx
  40d729:	and    al,0x6e
  40d72b:	scas   eax,DWORD PTR es:[edi]
  40d72c:	pop    edx
  40d72d:	dec    esp
  40d72e:	iret   
  40d72f:	add    ecx,ebx
  40d731:	adc    BYTE PTR [edi+0x301126dd],bl
  40d737:	loop   0x40d7ab
  40d739:	out    dx,al
  40d73a:	add    eax,0x4707053e
  40d73f:	cs (bad) 
  40d741:	out    dx,eax
  40d742:	adc    BYTE PTR [esi+0x70],al
  40d745:	stos   BYTE PTR es:[edi],al
  40d746:	jns    0x40d71e
  40d748:	xor    eax,0xfc1c1833
  40d74d:	xchg   ebp,eax
  40d74e:	popa   
  40d74f:	pop    ds
  40d750:	div    esp
  40d752:	xchg   ecx,eax
  40d753:	push   ecx
  40d754:	ficomp DWORD PTR [edi+0x273fafaf]
  40d75a:	sub    BYTE PTR [ebp+0x3ca3c709],al
  40d760:	fsubp  st(6),st
  40d762:	stos   BYTE PTR es:[edi],al
  40d763:	xchg   ebp,eax
  40d764:	mov    ecx,0xe649ddb0
  40d769:	jo     0x40d72c
  40d76b:	dec    eax
  40d76c:	xchg   DWORD PTR [ecx-0x4bfc22a8],ebx
  40d772:	les    edi,FWORD PTR [ebx+0xe]
  40d775:	adc    bh,dh
  40d777:	stc    
  40d778:	mov    eax,0xb9b704f8
  40d77d:	adc    bl,BYTE PTR [ebp+0x16805552]
  40d783:	jp     0x40d722
  40d785:	inc    eax
  40d786:	imul   edx,DWORD PTR [ecx],0x0
  40d789:	push   cs
  40d78a:	pminsw mm5,QWORD PTR [edx+0x54]
  40d78e:	push   ebp
  40d78f:	sahf   
  40d790:	xchg   DWORD PTR [ebx],ebx
  40d792:	adc    al,0x93
  40d794:	mul    BYTE PTR [ebx+0x7b]
  40d797:	outs   dx,DWORD PTR ds:[esi]
  40d798:	pop    es
  40d799:	(bad)  
  40d79a:	mov    dl,0x4b
  40d79c:	int    0xf9
  40d79e:	mov    WORD PTR [ecx+0x66ccffd0],cs
  40d7a4:	cmp    eax,0x350d14e6
  40d7aa:	push   edi
  40d7ab:	in     al,dx
  40d7ac:	dec    esi
  40d7ad:	or     BYTE PTR [ebp+0x14573894],ch
  40d7b3:	jl     0x40d7c5
  40d7b5:	in     al,dx
  40d7b6:	sbb    eax,0xcdc56c7c
  40d7bb:	mov    ah,0xaa
  40d7bd:	outs   dx,DWORD PTR ds:[esi]
  40d7be:	xchg   DWORD PTR [edi+esi*4+0x7f],ebx
  40d7c2:	out    0x3d,al
  40d7c4:	pop    ds
  40d7c5:	pop    edx
  40d7c6:	xlat   BYTE PTR ds:[ebx]
  40d7c7:	pop    ss
  40d7c8:	fld    st(0)
  40d7ca:	ja     0x40d7a9
  40d7cc:	inc    eax
  40d7cd:	add    DWORD PTR gs:[esi+ebp*1],esi
  40d7d1:	jno    0x40d78a
  40d7d3:	enter  0x8666,0xcc
  40d7d7:	mov    edi,0xeef77d90
  40d7dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7dd:	icebp  
  40d7de:	xor    dh,BYTE PTR [ecx]
  40d7e0:	jae    0x40d796
  40d7e2:	pop    ecx
  40d7e3:	loopne 0x40d7f6
  40d7e5:	(bad)  ds:0x99f5b6d0
  40d7eb:	mov    ah,BYTE PTR [esi-0x1a6746ae]
  40d7f1:	xor    eax,0x59176369
  40d7f6:	pop    es
  40d7f7:	mov    al,ds:0x2c651092
  40d7fc:	jecxz  0x40d7d1
  40d7fe:	or     edx,0x78
  40d801:	enter  0xc693,0xe4
  40d805:	cmp    al,0x79
  40d807:	repnz mov eax,eax
  40d80a:	mov    edi,DWORD PTR [esi+0x2dcc007f]
  40d810:	jg     0x40d871
  40d812:	mov    edx,0xe4fd66b7
  40d817:	cli    
  40d818:	(bad)  
  40d819:	push   0x3d
  40d81b:	rcr    BYTE PTR [ecx],1
  40d81d:	dec    edi
  40d81e:	cmp    al,0x56
  40d820:	shr    DWORD PTR [esi+0x6f],0xd6
  40d824:	fadd   st(4),st
  40d826:	jl     0x40d7d6
  40d828:	shl    BYTE PTR [edi-0x1],0xa1
  40d82c:	aam    0xb7
  40d82e:	xchg   BYTE PTR [eax-0x77],bh
  40d831:	xor    al,0x80
  40d833:	mov    al,ds:0x6b3743bd
  40d838:	mov    ah,BYTE PTR [ecx-0x4934997c]
  40d83e:	shl    DWORD PTR [edi+0x4afb5568],1
  40d844:	inc    edi
  40d845:	adc    eax,0x6edda62d
  40d84a:	mov    esp,0x3256f633
  40d84f:	jp     0x40d8a6
  40d851:	packuswb mm7,mm0
  40d854:	rcl    BYTE PTR [esi+0x4e],1
  40d857:	jmp    0x40d7ed
  40d859:	mov    BYTE PTR [edi+eiz*2-0x67],ah
  40d85d:	mov    ds:0x56edf0f9,eax
  40d862:	(bad)
  40d866:	inc    eax
  40d867:	clc    
  40d868:	lahf   
  40d869:	ss retf 
  40d86b:	outs   dx,BYTE PTR ds:[esi]
  40d86c:	daa    
  40d86d:	xchg   ebx,eax
  40d86e:	mov    ?,WORD PTR ds:0x62d9f7ca
  40d874:	(bad)  
  40d875:	arpl   WORD PTR [eax-0x3d66c8d0],bx
  40d87b:	or     eax,0x793ea93a
  40d880:	fwait
  40d881:	jo     0x40d84f
  40d883:	mov    ecx,0x354f63c4
  40d888:	and    ebp,DWORD PTR [esi]
  40d88a:	popf   
  40d88b:	jno    0x40d8a3
  40d88d:	mov    al,ds:0x744f1ed5
  40d892:	ja     0x40d900
  40d894:	jb     0x40d87e
  40d896:	inc    esi
  40d897:	outs   dx,BYTE PTR ds:[esi]
  40d898:	stos   BYTE PTR es:[edi],al
  40d899:	sbb    DWORD PTR [ebx+edx*8],eax
  40d89c:	mov    esp,0xecd3d9b1
  40d8a1:	push   esi
  40d8a2:	cmp    ebp,DWORD PTR [ebx-0x3e]
  40d8a5:	lods   al,BYTE PTR ds:[esi]
  40d8a6:	pop    es
  40d8a7:	or     al,0xec
  40d8a9:	fsub   DWORD PTR ds:0x1e2b4473
  40d8af:	(bad)  
  40d8b0:	cmp    ah,BYTE PTR [edx]
  40d8b2:	ret    0x41ab
  40d8b5:	sbb    al,cl
  40d8b7:	ud1    ebx,DWORD PTR ds:0x544e1e46
  40d8be:	(bad)  
  40d8bf:	xor    ch,BYTE PTR [ebx-0x56]
  40d8c2:	iret   
  40d8c3:	mov    edi,0x93de7ce
  40d8c8:	ror    BYTE PTR [ebx],1
  40d8ca:	cs stc 
  40d8cc:	retf   
  40d8cd:	fstp   TBYTE PTR [ecx-0x60]
  40d8d0:	fstp   TBYTE PTR ds:0x80314cbb
  40d8d6:	push   eax
  40d8d7:	push   ebx
  40d8d8:	call   0x8f6123e6
  40d8dd:	fidivr DWORD PTR [ecx-0x35]
  40d8e0:	xor    al,0xc6
  40d8e2:	fbld   TBYTE PTR [ebp+0x38]
  40d8e5:	push   0x23
  40d8e7:	sub    al,0xcf
  40d8e9:	jns    0x40d8c3
  40d8eb:	mov    DWORD PTR [ecx-0x78f9a6a5],edx
  40d8f1:	hlt    
  40d8f2:	stc    
  40d8f3:	inc    ecx
  40d8f4:	popa   
  40d8f5:	add    DWORD PTR [edi-0x4d],ebp
  40d8f8:	sbb    BYTE PTR [edx+ebx*2+0x5e8d2d88],dh
  40d8ff:	push   0xfffffff0
  40d901:	cli    
  40d902:	ins    DWORD PTR es:[edi],dx
  40d903:	xchg   edi,eax
  40d904:	cdq    
  40d905:	mov    cl,0x5
  40d907:	mov    cl,0xe2
  40d909:	imul   BYTE PTR [edx+eiz*2]
  40d90c:	out    0xbc,eax
  40d90e:	cmc    
  40d90f:	test   BYTE PTR [esp+edi*8],dh
  40d912:	jg     0x40d982
  40d914:	test   BYTE PTR [ebx-0x6a171c6c],dh
  40d91a:	stos   BYTE PTR es:[edi],al
  40d91b:	loopne 0x40d96c
  40d91d:	retf   
  40d91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91f:	lea    esi,[eax]
  40d921:	mov    ebx,0x5826314d
  40d926:	push   ds
  40d927:	push   esi
  40d928:	sahf   
  40d929:	push   cs
  40d92a:	imul   esi,DWORD PTR [esi-0x3ca54054],0x6
  40d931:	adc    eax,0x81e8468b
  40d936:	aaa    
  40d937:	mov    dh,0x31
  40d939:	mov    bh,0xf5
  40d93b:	imul   ebx,DWORD PTR [edx+0x6e],0x36
  40d93f:	loop   0x40d939
  40d941:	scas   al,BYTE PTR es:[edi]
  40d942:	test   al,0x7b
  40d944:	rcl    BYTE PTR [edi],cl
  40d946:	jl     0x40d99a
  40d948:	xor    eax,0x51405935
  40d94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d94e:	repz ficom WORD PTR [ecx-0x55]
  40d952:	loop   0x40d929
  40d954:	mov    ah,0xc4
  40d956:	std    
  40d957:	in     al,0xbf
  40d959:	outs   dx,DWORD PTR ds:[esi]
  40d95a:	fs adc eax,0x63d6e61f
  40d960:	xchg   ecx,eax
  40d961:	cmp    BYTE PTR [ebx+0x17],0x9a
  40d965:	and    DWORD PTR [edx],eax
  40d967:	in     eax,0xfb
  40d969:	adc    BYTE PTR [edi],dl
  40d96b:	push   esp
  40d96c:	jns    0x40d9c1
  40d96e:	pushf  
  40d96f:	add    esi,ebp
  40d971:	adc    ebp,eax
  40d973:	imul   BYTE PTR [eax]
  40d975:	mov    dl,BYTE PTR [edx+eax*4]
  40d978:	test   DWORD PTR ds:[esi],0x7cea2f23
  40d97f:	fstp   TBYTE PTR [esi-0x45]
  40d982:	loopne 0x40d9b7
  40d984:	jne    0x40d97b
  40d986:	(bad)  
  40d987:	into   
  40d988:	add    BYTE PTR [ebx+0x4b2d9b8],dh
  40d98e:	add    DWORD PTR [esi],esi
  40d990:	clc    
  40d991:	jmp    FWORD PTR [esi+0x44]
  40d994:	push   edx
  40d995:	inc    edi
  40d996:	and    DWORD PTR [esi-0x7e],edi
  40d999:	pop    ebp
  40d99a:	mov    ecx,0xff89c6c9
  40d99f:	daa    
  40d9a0:	repnz mov ebx,0x648f02de
  40d9a6:	cmp    BYTE PTR [eax-0x1211e159],dh
  40d9ac:	xor    eax,0xf609fcd7
  40d9b1:	mov    bl,0x69
  40d9b3:	rcl    BYTE PTR [ecx+ebx*8],0x75
  40d9b7:	or     ecx,edx
  40d9b9:	mov    ebp,0x3a3a49cd
  40d9be:	test   al,0x54
  40d9c0:	std    
  40d9c1:	aaa    
  40d9c2:	scas   eax,DWORD PTR es:[edi]
  40d9c3:	retf   0x4ee8
  40d9c6:	or     al,0x8
  40d9c8:	inc    esi
  40d9c9:	mov    ebp,0xef41dfbc
  40d9ce:	mov    ah,BYTE PTR [ebp+eax*4-0x65645ff3]
  40d9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d6:	mov    bh,0x5f
  40d9d8:	jmp    0x90a75b27
  40d9dd:	and    esp,DWORD PTR [eax-0xe]
  40d9e0:	xchg   ebp,eax
  40d9e1:	outs   dx,BYTE PTR ds:[esi]
  40d9e2:	les    esp,FWORD PTR [ecx-0x5e33b978]
  40d9e8:	sub    DWORD PTR [esi+0x42a1ba96],eax
  40d9ee:	enter  0x77d9,0xda
  40d9f2:	stos   BYTE PTR es:[edi],al
  40d9f3:	jl     0x40da0a
  40d9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f7:	push   edx
  40d9f8:	xchg   edx,eax
  40d9f9:	or     eax,DWORD PTR [edx-0x4f]
  40d9fc:	(bad)  
  40d9fd:	sahf   
  40d9fe:	jno    0x40d99d
  40da00:	js     0x40d9c8
  40da02:	pop    ebx
  40da03:	mov    ebp,0x91835371
  40da08:	cld    
  40da09:	sbb    BYTE PTR [edi-0xcb62c],al
  40da0f:	mov    esi,0x8797494b
  40da14:	fsub   DWORD PTR [edi-0x4f897210]
  40da1a:	jne    0x40d9e5
  40da1c:	inc    ebx
  40da1d:	pop    ebx
  40da1e:	(bad)  
  40da1f:	mov    dh,0xd6
  40da21:	fwait
  40da22:	data16 hlt 
  40da24:	repz mov ?,ebp
  40da27:	les    ebp,FWORD PTR [eax]
  40da29:	nop
  40da2a:	fld    QWORD PTR [esi-0x72a74c]
  40da30:	in     eax,dx
  40da31:	sbb    DWORD PTR [edx],0xa3a39207
  40da37:	mov    ecx,0xb8be5f30
  40da3c:	xchg   esp,eax
  40da3d:	jge    0x40da5a
  40da3f:	test   dl,al
  40da41:	xor    BYTE PTR [edi-0x6e],al
  40da44:	add    DWORD PTR [esp+esi*4+0x5d148848],ebx
  40da4b:	xchg   DWORD PTR [esi+edi*1],edi
  40da4e:	or     ebx,DWORD PTR [eax+0x47]
  40da51:	into   
  40da52:	loop   0x40dab8
  40da54:	xor    esp,DWORD PTR [ebx+eax*4+0x512b2bdc]
  40da5b:	add    ebp,DWORD PTR [eax]
  40da5d:	inc    esi
  40da5e:	cmp    BYTE PTR [ebx],bh
  40da60:	fprem  
  40da62:	dec    eax
  40da63:	push   ecx
  40da64:	icebp  
  40da65:	shl    DWORD PTR [edx+0x55],cl
  40da68:	mov    al,ds:0xdf8d95b8
  40da6d:	aad    0x93
  40da6f:	jp     0x40dab3
  40da71:	xor    ah,BYTE PTR [edx-0x42]
  40da74:	aad    0x49
  40da76:	lahf   
  40da77:	arpl   WORD PTR [ebx-0x4f],sp
  40da7a:	ins    BYTE PTR es:[edi],dx
  40da7b:	ins    BYTE PTR es:[edi],dx
  40da7c:	pop    esp
  40da7d:	cdq    
  40da7e:	ins    BYTE PTR es:[edi],dx
  40da7f:	add    al,0xad
  40da81:	jg     0x40da9b
  40da83:	sbb    eax,0x5b1e8d9b
  40da88:	push   esp
  40da89:	inc    edi
  40da8a:	loopne 0x40dad4
  40da8c:	retf   
  40da8d:	dec    ebx
  40da8e:	ret    
  40da8f:	mov    eax,0x2c4d68fd
  40da94:	xor    edx,DWORD PTR [edi+ebx*8-0x1e9ad153]
  40da9b:	cmp    eax,0x6576fe7f
  40daa0:	cmp    DWORD PTR [edx-0x482976ad],edx
  40daa6:	xor    esp,esp
  40daa8:	in     al,dx
  40daa9:	outs   dx,BYTE PTR ds:[esi]
  40daaa:	jmp    0x93d1:0x4596aff8
  40dab1:	(bad)  
  40dab2:	adc    al,0xf6
  40dab4:	daa    
  40dab5:	scas   eax,DWORD PTR es:[edi]
  40dab6:	loope  0x40da6d
  40dab8:	das    
  40dab9:	inc    esi
  40daba:	ss aad 0x70
  40dabd:	scas   al,BYTE PTR es:[di]
  40dabf:	xor    eax,0x391230ee
  40dac4:	dec    ebp
  40dac5:	popf   
  40dac6:	mov    esi,DWORD PTR [eax+esi*1-0x25]
  40daca:	sub    ah,BYTE PTR [eax]
  40dacc:	loope  0x40db1c
  40dace:	in     eax,dx
  40dacf:	fdiv   QWORD PTR [esi-0x25e45c21]
  40dad5:	ret    
  40dad6:	and    BYTE PTR [edi],dl
  40dad8:	push   esi
  40dad9:	adc    DWORD PTR [edi-0x1698061f],edx
  40dadf:	dec    esp
  40dae0:	out    0xce,eax
  40dae2:	xchg   DWORD PTR [esi-0x152dcdf7],esp
  40dae8:	pop    ebx
  40dae9:	cmp    DWORD PTR es:[esi+eax*4],edi
  40daed:	jb     0x40dab4
  40daef:	(bad)  
  40daf0:	jg     0x40daa9
  40daf2:	test   eax,0xd47f0438
  40daf7:	and    al,0x8b
  40daf9:	mov    ah,0x41
  40dafb:	push   0x95cd0606
  40db00:	test   esi,esi
  40db02:	dec    ebp
  40db03:	fsub   st(6),st
  40db05:	inc    edi
  40db06:	push   ss
  40db07:	pop    ebp
  40db08:	and    BYTE PTR [eax+0xdc8ffbe],ch
  40db0e:	inc    edx
  40db0f:	fsub   DWORD PTR [ecx]
  40db11:	add    eax,0xe8bf897f
  40db16:	ret    
  40db17:	and    bl,ah
  40db19:	xchg   ebx,eax
  40db1a:	hlt    
  40db1b:	fs das 
  40db1d:	or     al,0x9a
  40db1f:	sbb    eax,0x5be7624e
  40db24:	mov    DWORD PTR [esp+eiz*2+0x3a],esi
  40db28:	xchg   edx,eax
  40db29:	sbb    DWORD PTR es:0xcc14de23,ebp
  40db30:	test   BYTE PTR [esi-0x6a3c55e4],ch
  40db36:	jmp    0x40dafa
  40db38:	xlat   BYTE PTR ds:[ebx]
  40db39:	xchg   BYTE PTR gs:[eax],al
  40db3c:	pop    ebp
  40db3d:	stos   DWORD PTR es:[edi],eax
  40db3e:	in     al,0xe0
  40db40:	stos   DWORD PTR es:[edi],eax
  40db41:	popa   
  40db42:	mov    ds:0xb365a295,eax
  40db47:	mov    ch,0x7b
  40db49:	scas   al,BYTE PTR es:[edi]
  40db4a:	call   0x2aaf:0x8f354b18
  40db51:	shl    DWORD PTR [ebp-0x7e],1
  40db54:	pop    edi
  40db55:	push   edx
  40db56:	adc    edx,esi
  40db58:	jbe    0x40db72
  40db5a:	push   0xffffff91
  40db5c:	sub    eax,0xba4ffbbc
  40db61:	cmp    bl,bh
  40db63:	jo     0x40db22
  40db65:	imul   eax,DWORD PTR [eax-0x319a1d6],0xbb663d95
  40db6f:	mov    al,ds:0x976b2510
  40db74:	cmp    DWORD PTR [ecx],ebx
  40db76:	dec    DWORD PTR [edx+0x67]
  40db79:	dec    ebp
  40db7a:	retf   
  40db7b:	lds    ecx,FWORD PTR [esi+0x29]
  40db7e:	adc    dh,bh
  40db80:	mov    eax,0xa3cd391a
  40db85:	outs   dx,DWORD PTR ds:[esi]
  40db86:	mov    edx,0x177ccb36
  40db8b:	mov    bl,0x6a
  40db8d:	ja     0x40db9c
  40db8f:	xor    al,0x68
  40db91:	jne    0x40db91
  40db93:	cdq    
  40db94:	sub    al,0x4
  40db96:	popf   
  40db97:	push   ss
  40db98:	or     al,0x7d
  40db9a:	push   ss
  40db9b:	fld    TBYTE PTR [esp+ebx*8+0x18cb14]
  40dba2:	in     eax,dx
  40dba3:	and    al,0x97
  40dba5:	jo     0x40db50
  40dba7:	lock test BYTE PTR [edx+0x3de85eab],bh
  40dbae:	retf   
  40dbaf:	add    eax,0xce22337b
  40dbb4:	pop    ebx
  40dbb5:	dec    eax
  40dbb6:	adc    BYTE PTR [edx+edi*1+0x4c],ah
  40dbba:	cdq    
  40dbbb:	push   edx
  40dbbc:	and    al,0x11
  40dbbe:	jo     0x40db61
  40dbc0:	sbb    BYTE PTR [eax],bh
  40dbc2:	call   0x1d1f7adb
  40dbc7:	aam    0xb5
  40dbc9:	cmp    ch,bh
  40dbcb:	outs   dx,DWORD PTR ds:[esi]
  40dbcc:	or     eax,DWORD PTR [eax+edi*8+0x19]
  40dbd0:	push   esi
  40dbd2:	adc    ch,bh
  40dbd4:	(bad)  [ebx-0x5d]
  40dbd7:	inc    eax
  40dbd8:	pushf  
  40dbd9:	dec    esp
  40dbda:	cwde   
  40dbdb:	pop    ebp
  40dbdc:	shr    BYTE PTR ds:0x18b13613,cl
  40dbe2:	inc    ebp
  40dbe3:	fwait
  40dbe4:	mov    ch,0xa3
  40dbe6:	fs fwait
  40dbe8:	cmc    
  40dbe9:	scas   al,BYTE PTR es:[edi]
  40dbea:	xor    DWORD PTR [ebp*1+0x5f8a92d1],esi
  40dbf1:	lods   al,BYTE PTR ds:[esi]
  40dbf2:	int3   
  40dbf3:	push   ebx
  40dbf4:	fisubr WORD PTR [ebx]
  40dbf6:	push   edx
  40dbf7:	stos   DWORD PTR es:[edi],eax
  40dbf8:	push   ds
  40dbf9:	push   ds
  40dbfa:	nop
  40dbfb:	add    edi,DWORD PTR [eax+0x5c]
  40dbfe:	cdq    
  40dbff:	or     DWORD PTR [edx],ebx
  40dc01:	jl     0x40dbe4
  40dc03:	in     eax,0x2
  40dc05:	cmc    
  40dc06:	stc    
  40dc07:	mov    al,ds:0xc93416ec
  40dc0c:	int3   
  40dc0d:	push   0x323d9dd2
  40dc12:	xor    BYTE PTR [eax],al
  40dc14:	sub    eax,0x2d0c333d
  40dc19:	aas    
  40dc1a:	cmp    DWORD PTR [esi-0x3b],eax
  40dc1d:	scas   al,BYTE PTR es:[edi]
  40dc1e:	mov    edx,0x95de9883
  40dc23:	jle    0x40dc0f
  40dc25:	mov    ch,dh
  40dc27:	inc    ebx
  40dc28:	imul   edi,DWORD PTR [ebp+esi*1-0x95d109f],0xffffffb6
  40dc30:	cli    
  40dc31:	popf   
  40dc32:	xchg   edi,eax
  40dc33:	fwait
  40dc34:	mov    BYTE PTR ds:0xcf96b5b8,0x17
  40dc3b:	mov    ?,esp
  40dc3d:	push   esi
  40dc3e:	sub    al,0xbf
  40dc40:	mov    edi,0x1f44bb29
  40dc45:	adc    al,0xc
  40dc47:	push   ds
  40dc48:	loope  0x40dc10
  40dc4a:	and    DWORD PTR [ebx+0x61db446a],0x8cc7282a
  40dc54:	sbb    DWORD PTR [eax+0x4263efbb],0xcdfc5ec5
  40dc5e:	cwde   
  40dc5f:	clc    
  40dc60:	xor    eax,0x5fef6efe
  40dc65:	or     BYTE PTR [eax+0x45],ch
  40dc68:	jp     0x40dc93
  40dc6a:	push   ebp
  40dc6b:	(bad)  
  40dc6c:	sti    
  40dc6d:	cld    
  40dc6e:	popa   
  40dc6f:	cmp    edi,DWORD PTR [ebx+0x7cf968bb]
  40dc75:	and    edi,edx
  40dc77:	mov    cl,0x78
  40dc79:	jg     0x40dccc
  40dc7b:	test   al,0x61
  40dc7d:	sahf   
  40dc7e:	mov    DWORD PTR [esi],esp
  40dc80:	or     DWORD PTR [esi],esi
  40dc82:	xor    eax,0xdea4da7f
  40dc87:	cwde   
  40dc88:	call   0x3ecc:0x7bac51c2
  40dc8f:	es repz push 0xffffffee
  40dc93:	out    dx,al
  40dc94:	adc    DWORD PTR [ebx+0xbdabb9c],ebp
  40dc9a:	call   DWORD PTR [esi]
  40dc9c:	fcmovu st,st(6)
  40dc9e:	bound  esp,QWORD PTR [ebp-0x7e0be350]
  40dca4:	push   ebx
  40dca5:	pop    es
  40dca6:	mov    bh,0xf2
  40dca8:	aam    0x1f
  40dcaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcab:	xor    eax,0x3405e234
  40dcb0:	cmp    BYTE PTR [ebp+0x431171a6],cl
  40dcb6:	xchg   BYTE PTR [esi],al
  40dcb8:	jl     0x40dd36
  40dcba:	loopne 0x40dcc9
  40dcbc:	xor    al,0x3d
  40dcbe:	cdq    
  40dcbf:	dec    ebx
  40dcc0:	pop    ecx
  40dcc1:	and    esp,DWORD PTR [esi+ebp*1-0x2c1d1f26]
  40dcc8:	adc    eax,0xe6890551
  40dccd:	test   al,0x51
  40dccf:	xor    bl,BYTE PTR [ecx-0x3d]
  40dcd2:	and    DWORD PTR [ebx*4+0x7a67d610],esp
  40dcd9:	push   esp
  40dcda:	ror    edx,0x24
  40dcdd:	nop
  40dcde:	mov    eax,ds:0x70037674
  40dce3:	ins    DWORD PTR es:[edi],dx
  40dce4:	adc    eax,0x9dd7b85b
  40dce9:	jecxz  0x40dd62
  40dceb:	test   BYTE PTR [ecx],ah
  40dced:	mov    eax,ds:0x57ced64e
  40dcf2:	imul   eax,DWORD PTR [esi],0x59
  40dcf5:	ja     0x40dcdc
  40dcf7:	test   al,0x3c
  40dcf9:	adc    al,0x22
  40dcfb:	push   ebp
  40dcfc:	add    BYTE PTR [edx+0x333fb64c],ch
  40dd02:	mov    WORD PTR [ebp-0x2a70a923],?
  40dd08:	mov    ebx,eax
  40dd0a:	jb     0x40dd04
  40dd0c:	fild   QWORD PTR [edi-0x27f0a5f8]
  40dd12:	ss js  0x40dd29
  40dd15:	mov    esi,0x1b986bb5
  40dd1a:	xchg   ebx,eax
  40dd1b:	xchg   DWORD PTR [edi-0x2d17d294],eax
  40dd21:	retf   0xd4f7
  40dd24:	fisubr DWORD PTR [edi+0x3b]
  40dd27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd28:	sub    al,0x82
  40dd2a:	mov    ebp,0x48a85ec4
  40dd2f:	in     al,0xa4
  40dd31:	sahf   
  40dd32:	xor    esi,DWORD PTR [eax-0x179ffaa]
  40dd38:	pop    ebx
  40dd39:	xchg   ebp,eax
  40dd3a:	fldz   
  40dd3c:	sub    eax,0x74d2943
  40dd41:	jle    0x40dd7f
  40dd43:	mov    edx,0x4cafe9c
  40dd48:	xor    DWORD PTR [ebx-0x13d869e5],ecx
  40dd4e:	sbb    eax,0xa821b865
  40dd53:	pop    edx
  40dd54:	inc    ecx
  40dd55:	inc    edx
  40dd56:	and    edi,DWORD PTR [edi+0x6b7f9c1f]
  40dd5c:	les    ecx,FWORD PTR [ebx*8-0x352a8cc0]
  40dd63:	push   es
  40dd64:	mov    edi,0x61f736f
  40dd69:	pushf  
  40dd6a:	test   DWORD PTR [ecx+0x70b2e657],esi
  40dd70:	div    BYTE PTR [ebx-0x3c4b36d1]
  40dd76:	pusha  
  40dd77:	jmp    0x2fde:0x344c0f28
  40dd7e:	ficomp WORD PTR [ebx+0x1ef36a3f]
  40dd84:	hlt    
  40dd85:	outs   dx,DWORD PTR ds:[esi]
  40dd86:	ds and ah,ch
  40dd89:	in     al,0xd1
  40dd8b:	das    
  40dd8c:	sahf   
  40dd8d:	repnz mov eax,ds:0x62a3477
  40dd93:	mov    al,0x86
  40dd95:	out    dx,al
  40dd96:	adc    BYTE PTR [esi-0x4c389d5b],ch
  40dd9c:	in     al,0x1
  40dd9e:	das    
  40dd9f:	shr    bl,cl
  40dda1:	sbb    BYTE PTR [edx-0x64],ah
  40dda4:	jb     0x40de10
  40dda6:	xchg   edx,eax
  40dda7:	jp     0x40dd8d
  40dda9:	adc    BYTE PTR [ebx-0x136c22e2],bh
  40ddaf:	jmp    0x65f0034
  40ddb4:	jle    0x40dd9a
  40ddb6:	mov    ecx,0x7533b72b
  40ddbb:	(bad)  
  40ddbc:	mov    ebx,0x3087661a
  40ddc1:	sub    al,0x52
  40ddc3:	popa   
  40ddc4:	and    DWORD PTR [ecx-0x2c],0x54
  40ddc8:	es into 
  40ddca:	out    0x5d,al
  40ddcc:	xchg   esp,eax
  40ddcd:	mul    DWORD PTR [eax-0x52344784]
  40ddd3:	jno    0x40de01
  40ddd5:	(bad)  
  40ddd6:	scas   eax,DWORD PTR es:[edi]
  40ddd7:	jl     0x40ddd7
  40ddd9:	jle    0x40de0c
  40dddb:	xchg   edi,eax
  40dddc:	cdq    
  40dddd:	stc    
  40ddde:	xchg   ecx,eax
  40dddf:	pop    ebx
  40dde0:	pop    eax
  40dde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde2:	cli    
  40dde3:	inc    edx
  40dde4:	hlt    
  40dde5:	xchg   edx,eax
  40dde6:	lods   eax,DWORD PTR ds:[esi]
  40dde7:	jno    0x40de5c
  40dde9:	shr    BYTE PTR [ebp-0x5b53b75b],0x90
  40ddf0:	or     ecx,esp
  40ddf2:	test   BYTE PTR [ebp+0x783ed5d3],0xfe
  40ddf9:	adc    esi,DWORD PTR [ebx+edi*1-0x7ec1eb82]
  40de00:	or     DWORD PTR [esi+0x62],0x30
  40de04:	jmp    0x40dd90
  40de06:	out    dx,eax
  40de07:	push   ds
  40de08:	adc    esi,DWORD PTR [eax]
  40de0a:	cld    
  40de0b:	pop    eax
  40de0c:	cmp    al,BYTE PTR [ebx]
  40de0e:	out    dx,al
  40de0f:	daa    
  40de10:	scas   eax,DWORD PTR es:[edi]
  40de11:	and    BYTE PTR [edx-0x33],ch
  40de14:	pop    edi
  40de15:	fcmovnu st,st(2)
  40de17:	not    DWORD PTR [eax-0x4e]
  40de1a:	mov    esi,0xf9073b6d
  40de1f:	jmp    0x13df:0xddb539d9
  40de26:	xchg   ebx,eax
  40de27:	mov    ecx,0x3f9b6731
  40de2c:	inc    ecx
  40de2d:	adc    eax,0x863a0c7
  40de32:	and    BYTE PTR [ecx],ah
  40de34:	pushf  
  40de35:	pop    edx
  40de36:	mov    esi,0x10812e8d
  40de3b:	xor    BYTE PTR [ecx],0x80
  40de3e:	mov    bh,0xbd
  40de40:	test   eax,0xe108b3b0
  40de45:	lods   al,BYTE PTR ds:[esi]
  40de46:	mov    dl,0x7e
  40de48:	jge    0x40de8d
  40de4a:	jnp    0x40de0d
  40de4c:	adc    eax,0x8d911c6c
  40de51:	mov    ah,0xe3
  40de53:	xchg   ecx,eax
  40de54:	jl     0x40dea7
  40de56:	inc    eax
  40de57:	mov    dl,0xbb
  40de59:	leave  
  40de5a:	mov    al,ds:0x70da2f40
  40de5f:	(bad)  
  40de60:	rcl    BYTE PTR [ebp-0xb9419c4],1
  40de66:	int3   
  40de67:	inc    ebx
  40de68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de69:	aas    
  40de6a:	loopne 0x40de47
  40de6c:	sbb    al,0xd0
  40de6e:	sbb    ah,BYTE PTR [ebx-0x2c3e122c]
  40de74:	daa    
  40de75:	push   ebp
  40de76:	jmp    0x1ec7:0x7a8f0249
  40de7d:	push   esp
  40de7e:	out    dx,al
  40de7f:	mov    ebx,0xb55d5678
  40de84:	sbb    esi,DWORD PTR [ebx+0x2]
  40de87:	dec    edx
  40de88:	jle    0x40dea3
  40de8a:	das    
  40de8b:	or     eax,0x60df4689
  40de90:	(bad)  
  40de91:	inc    ebx
  40de92:	or     al,BYTE PTR [edx]
  40de94:	inc    ebx
  40de95:	and    eax,0x749339d4
  40de9a:	xlat   BYTE PTR ds:[ebx]
  40de9b:	arpl   WORD PTR [eax+eiz*1],si
  40de9e:	enter  0x4b9c,0xb7
  40dea2:	imul   edx,DWORD PTR [ebp+0x48bd3f31],0x40
  40dea9:	pop    ebx
  40deaa:	dec    edi
  40deab:	push   esp
  40deac:	inc    edi
  40dead:	mov    ds:0x3cb11d27,eax
  40deb2:	bound  ebx,QWORD PTR [ecx+0x328ac343]
  40deb8:	or     esi,DWORD PTR [ebp+0x42b59b64]
  40debe:	call   0x29a6bf03
  40dec3:	cmp    dl,al
  40dec5:	out    dx,eax
  40dec6:	dec    esp
  40dec7:	fisub  DWORD PTR [ecx]
  40dec9:	xchg   ebp,eax
  40deca:	mov    ds:0x45bde6e7,eax
  40decf:	mov    ds:0x8d48410c,al
  40ded4:	mov    cl,0xa5
  40ded6:	loope  0x40de65
  40ded8:	mov    bh,ch
  40deda:	inc    esp
  40dedb:	add    DWORD PTR [ecx-0x7f4bda2e],esi
  40dee1:	jo     0x40de66
  40dee3:	dec    ebx
  40dee4:	inc    ebx
  40dee5:	mov    ebp,0xd62efc81
  40deea:	adc    ah,BYTE PTR [edx-0x18]
  40deed:	sub    al,0x83
  40deef:	pusha  
  40def0:	pusha  
  40def1:	lds    ecx,FWORD PTR ds:0x7d59a7eb
  40def7:	pop    edx
  40def8:	mov    BYTE PTR [ebp-0x1d],ch
  40defb:	ficom  DWORD PTR [ebx-0x73]
  40defe:	add    esp,edx
  40df00:	test   DWORD PTR [ebx],ebx
  40df02:	hlt    
  40df03:	ss stc 
  40df05:	mov    dh,0xc7
  40df07:	add    al,0xd1
  40df09:	pop    esi
  40df0a:	fcmovb st,st(0)
  40df0c:	xchg   esp,eax
  40df0d:	push   esi
  40df0e:	js     0x40df2b
  40df10:	bound  ebp,QWORD PTR [esi+0x7f1c7c2b]
  40df16:	rol    edi,cl
  40df18:	retf   
  40df19:	repz mov ch,0xc7
  40df1c:	sar    WORD PTR [ecx+0x60],1
  40df20:	xchg   BYTE PTR [esp+eiz*8-0x47199da7],ah
  40df27:	repz shl edi,1
  40df2a:	rcr    BYTE PTR [ecx+0x6832912d],0x43
  40df31:	xor    ah,dh
  40df33:	pop    ecx
  40df34:	xchg   edx,eax
  40df35:	dec    esi
  40df36:	(bad)  [ebp+0x56e88265]
  40df3c:	cmp    DWORD PTR [ecx+ebx*4],edx
  40df3f:	test   eax,0x7df08e29
  40df44:	xchg   ecx,eax
  40df45:	test   DWORD PTR [esi],ecx
  40df47:	jb     0x40decb
  40df49:	in     al,dx
  40df4a:	aam    0xd4
  40df4c:	outs   dx,BYTE PTR ds:[esi]
  40df4d:	jae    0x40df7f
  40df4f:	out    0x49,al
  40df51:	inc    ecx
  40df52:	inc    edx
  40df53:	adc    eax,esp
  40df55:	mov    edx,0x276154fe
  40df5a:	cmp    DWORD PTR ds:0x5a188b65,0x77
  40df61:	in     al,dx
  40df62:	push   ebp
  40df63:	dec    esi
  40df64:	and    BYTE PTR [esi+ebp*2],0x18
  40df68:	ret    
  40df69:	push   0x5632787
  40df6e:	(bad)  
  40df70:	push   ss
  40df71:	sub    al,0x50
  40df73:	jle    0x40df68
  40df75:	loope  0x40dfaa
  40df77:	mov    ch,0x92
  40df79:	mov    al,0xcf
  40df7b:	test   eax,0x2dfc796c
  40df80:	xor    al,0xcc
  40df82:	outs   dx,BYTE PTR ds:[esi]
  40df83:	mov    BYTE PTR [ebx-0x78],al
  40df86:	sbb    ah,0x6b
  40df89:	imul   ebp,DWORD PTR [esi+0x67],0xf78d3e7f
  40df90:	rol    BYTE PTR [edi-0x6d],0x1e
  40df94:	cld    
  40df95:	pop    ecx
  40df96:	sbb    cx,WORD PTR [ecx-0x52eb6417]
  40df9d:	ret    
  40df9e:	inc    eax
  40df9f:	xchg   esi,eax
  40dfa0:	not    BYTE PTR [esi-0xb10a836]
  40dfa6:	dec    ebp
  40dfa7:	cld    
  40dfa8:	mov    esp,0xf11aa5ed
  40dfad:	jecxz  0x40e029
  40dfaf:	ja     0x40dfb5
  40dfb1:	cmp    edi,DWORD PTR [edx+eax*4-0x7235e215]
  40dfb8:	das    
  40dfb9:	and    DWORD PTR [esi-0x36ea2c5f],edi
  40dfbf:	pop    eax
  40dfc0:	push   0x3a
  40dfc2:	and    ah,BYTE PTR [ebp+0x48]
  40dfc5:	shr    esp,1
  40dfc7:	xor    ebx,DWORD PTR [eax-0x7db41604]
  40dfcd:	push   eax
  40dfce:	bound  edx,QWORD PTR [edx]
  40dfd0:	fsub   st,st(0)
  40dfd2:	dec    edx
  40dfd3:	stos   DWORD PTR es:[edi],eax
  40dfd4:	nop
  40dfd5:	jp     0x40df8a
  40dfd7:	sbb    DWORD PTR [ebx-0x5],eax
  40dfda:	outs   dx,BYTE PTR ds:[esi]
  40dfdb:	adc    BYTE PTR [edx-0x56],dl
  40dfde:	cmp    dh,BYTE PTR [ebx-0x225b99dd]
  40dfe4:	int    0x1e
  40dfe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe7:	xor    esp,0xffffffa0
  40dfea:	push   edx
  40dfeb:	adc    DWORD PTR [ecx-0x74182c16],edi
  40dff1:	sbb    BYTE PTR [ebx-0x46f3282b],al
  40dff7:	push   0x9c8dbf45
  40dffc:	mov    BYTE PTR [ecx-0x52],ah
  40dfff:	stos   BYTE PTR es:[edi],al
  40e000:	in     eax,dx
  40e001:	add    esi,ebx
  40e003:	rcl    BYTE PTR [edx+0x49929070],0xe4
  40e00a:	pop    esi
  40e00b:	push   eax
  40e00c:	lar    ebx,WORD PTR fs:[esi]
  40e010:	mov    bh,0x3f
  40e012:	mov    edi,0xa7ba3348
  40e017:	mov    WORD PTR [eax],?
  40e019:	inc    eax
  40e01a:	lds    edx,FWORD PTR ds:0x2ba72f18
  40e020:	nop
  40e021:	fsub   QWORD PTR [esi+0x72]
  40e024:	xchg   ebp,eax
  40e025:	push   ebp
  40e026:	ins    BYTE PTR es:[edi],dx
  40e027:	retf   
  40e028:	mov    edi,0xe999b6e4
  40e02d:	les    ecx,FWORD PTR [edx+0x3274d93d]
  40e033:	inc    ecx
  40e034:	(bad)
  40e037:	fmul   DWORD PTR [edx]
  40e039:	mov    ebp,DWORD PTR [ecx]
  40e03b:	adc    DWORD PTR [edx+0x5ff6305c],esi
  40e041:	dec    ecx
  40e042:	packuswb mm1,QWORD PTR [ebp+0x4c418fbb]
  40e049:	shr    DWORD PTR [ebp+0x7],0xc6
  40e04d:	fadd   DWORD PTR [esi+0x75]
  40e050:	push   0xc0309ef0
  40e055:	jmp    0x40e0d2
  40e057:	add    BYTE PTR [ebx],al
  40e059:	mov    eax,ds:0x8c6e7b37
  40e05e:	xor    esp,DWORD PTR [eax]
  40e060:	dec    eax
  40e061:	or     ecx,DWORD PTR [edi]
  40e063:	xchg   ebp,eax
  40e064:	shl    DWORD PTR [edi],1
  40e066:	mov    ss:0x8dedf83e,al
  40e06c:	dec    ebx
  40e06d:	loope  0x40e064
  40e06f:	inc    esi
  40e070:	dec    ecx
  40e071:	bound  ebp,QWORD PTR [esp+eiz*8]
  40e074:	inc    eax
  40e075:	cmp    edx,DWORD PTR [ebx]
  40e077:	dec    edi
  40e078:	cmc    
  40e079:	mov    BYTE PTR [edx+0x358dc702],ah
  40e07f:	mov    esp,0x58924e5b
  40e084:	cmp    DWORD PTR [ebx-0x7f7db86],edx
  40e08a:	jle    0x40e033
  40e08c:	mov    edi,0x854f94e8
  40e091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e092:	(bad)
  40e095:	out    0xc4,eax
  40e097:	add    bl,BYTE PTR [edx]
  40e099:	cwde   
  40e09a:	mov    ebx,0x37cd1a53
  40e09f:	xor    edi,DWORD PTR [edx]
  40e0a1:	ins    BYTE PTR es:[edi],dx
  40e0a2:	gs test al,0x99
  40e0a5:	bound  edi,QWORD PTR [ecx-0x3a666c3e]
  40e0ab:	out    0x18,eax
  40e0ad:	repz xchg esp,eax
  40e0af:	int3   
  40e0b0:	add    eax,0x729b3859
  40e0b5:	(bad)  
  40e0b6:	fs dec edx
  40e0b8:	scas   eax,DWORD PTR es:[edi]
  40e0b9:	retf   0x888
  40e0bc:	push   ss
  40e0bd:	xchg   edi,eax
  40e0be:	js     0x40e0fb
  40e0c0:	cmp    BYTE PTR [ecx+ebx*1+0x1d],0xc3
  40e0c5:	mov    fs,edi
  40e0c7:	push   edi
  40e0c8:	fidiv  WORD PTR gs:[eax+eax*1+0x1cc6c439]
  40e0d0:	jo     0x40e0e3
  40e0d2:	je     0x40e0c0
  40e0d4:	jg     0x40e0b3
  40e0d6:	adc    al,BYTE PTR [edi+0x68]
  40e0d9:	mov    dh,0x99
  40e0db:	pop    ebp
  40e0dc:	ja     0x40e12e
  40e0de:	mov    fs,WORD PTR [esi-0x26]
  40e0e1:	(bad)
  40e0e5:	or     esp,DWORD PTR [edx+0x4a]
  40e0e8:	jnp    0x40e0fa
  40e0ea:	mov    edi,0x371ee5f8
  40e0ef:	fsub   DWORD PTR [ebp-0x1]
  40e0f2:	mov    ah,0xf4
  40e0f4:	add    dh,BYTE PTR [ecx]
  40e0f6:	aaa    
  40e0f7:	in     eax,dx
  40e0f8:	push   cs
  40e0f9:	ins    DWORD PTR es:[edi],dx
  40e0fa:	inc    ecx
  40e0fb:	xchg   ebx,eax
  40e0fc:	shr    dh,1
  40e0fe:	cli    
  40e0ff:	out    dx,al
  40e100:	int    0x98
  40e102:	pop    edi
  40e103:	jge    0x40e0a6
  40e105:	out    0x8f,al
  40e107:	fs jle 0x40e0ac
  40e10a:	mov    ebp,0x19663654
  40e10f:	push   ebp
  40e110:	mov    dl,0x2e
  40e112:	mov    al,ds:0xf2a1043a
  40e117:	dec    ecx
  40e118:	dec    edx
  40e119:	cwde   
  40e11a:	mov    ds:0xa1bb9b29,eax
  40e11f:	add    eax,0xaec9f1ef
  40e124:	pop    ebx
  40e125:	jnp    0x40e110
  40e127:	jg     0x40e13a
  40e129:	sbb    BYTE PTR [edx],ch
  40e12b:	jb     0x40e129
  40e12d:	(bad)  
  40e12e:	std    
  40e12f:	or     DWORD PTR ds:0x5153de1,esp
  40e135:	cmp    eax,0x61a5767d
  40e13a:	(bad)  
  40e13c:	jae    0x40e0f3
  40e13e:	fs mov ebp,0x809d6a9d
  40e144:	test   DWORD PTR [edx-0x2118087d],edi
  40e14a:	mov    esp,0x7d47bab8
  40e14f:	aad    0xc8
  40e151:	jo     0x40e0ff
  40e153:	jl     0x40e0f7
  40e155:	cmp    cl,BYTE PTR [esi]
  40e157:	pop    esi
  40e158:	mov    ds:0xe404f9a3,al
  40e15d:	and    DWORD PTR [esi-0x75],esi
  40e160:	cmp    BYTE PTR [eax-0x1d],0xee
  40e164:	xchg   ebp,eax
  40e165:	sub    BYTE PTR [esp+ecx*8],bl
  40e168:	xor    al,0xc4
  40e16a:	cmp    BYTE PTR [edx+0x77ddc869],0xbe
  40e171:	jecxz  0x40e153
  40e173:	push   edi
  40e174:	cmp    edx,DWORD PTR cs:[esi]
  40e177:	mov    cl,0x4
  40e179:	es mov al,0x75
  40e17c:	xchg   esp,eax
  40e17d:	loopne 0x40e17c
  40e17f:	and    DWORD PTR [eax+0x5e8c7036],ebx
  40e185:	push   esi
  40e186:	leave  
  40e187:	in     al,dx
  40e188:	(bad)  
  40e189:	rol    BYTE PTR [eax+0x7b023c38],cl
  40e18f:	xchg   edi,eax
  40e190:	in     al,dx
  40e191:	arpl   di,cx
  40e193:	mov    esp,0xa275d23d
  40e198:	push   edi
  40e199:	sbb    DWORD PTR [edx],edi
  40e19b:	adc    al,dl
  40e19d:	jae    0x40e181
  40e19f:	jg     0x40e1af
  40e1a1:	jecxz  0x40e13c
  40e1a3:	cmp    cl,BYTE PTR [edi+edx*4]
  40e1a6:	stos   DWORD PTR es:[edi],eax
  40e1a7:	icebp  
  40e1a8:	ret    
  40e1a9:	dec    ebx
  40e1aa:	xor    dh,BYTE PTR [ebp+0x1c7d4f0d]
  40e1b0:	cld    
  40e1b1:	mov    ebx,0x6653d79f
  40e1b6:	mov    ch,0x77
  40e1b8:	mov    ecx,gs
  40e1ba:	mov    edi,eax
  40e1bc:	inc    ebx
  40e1bd:	fbld   TBYTE PTR [ecx]
  40e1bf:	jmp    0x6451:0x728c6094
  40e1c6:	test   BYTE PTR [edi-0x77],ah
  40e1c9:	stc    
  40e1ca:	ins    BYTE PTR es:[edi],dx
  40e1cb:	add    DWORD PTR [ecx],0xffffff88
  40e1ce:	xchg   edx,eax
  40e1cf:	jnp    0x40e19c
  40e1d1:	scas   al,BYTE PTR es:[edi]
  40e1d2:	outs   dx,DWORD PTR ds:[esi]
  40e1d3:	leave  
  40e1d4:	jns    0x40e1cc
  40e1d6:	jge    0x40e188
  40e1d8:	dec    esi
  40e1d9:	loope  0x40e17f
  40e1db:	ds push ebp
  40e1dd:	lea    eax,[eax+0x31df7db]
  40e1e3:	or     al,0xe4
  40e1e5:	js     0x40e256
  40e1e7:	pop    ss
  40e1e8:	adc    DWORD PTR [eax-0x44],0xffffff84
  40e1ec:	push   0x89d77cb8
  40e1f1:	retf   
  40e1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f3:	jo     0x40e187
  40e1f5:	sti    
  40e1f6:	cmp    bh,bl
  40e1f8:	sbb    ecx,DWORD PTR [ebx-0x656025ef]
  40e1fe:	fdiv   QWORD PTR [ebx]
  40e200:	into   
  40e201:	fisub  WORD PTR ds:0x45982fd8
  40e207:	push   ss
  40e208:	sub    DWORD PTR [ebx-0x7b],esi
  40e20b:	cmp    esi,DWORD PTR [ecx]
  40e20d:	cmp    esi,esp
  40e20f:	pop    eax
  40e210:	(bad)  
  40e211:	jae    0x40e219
  40e213:	fcmovnb st,st(5)
  40e215:	(bad)  
  40e216:	push   eax
  40e217:	jecxz  0x40e1ab
  40e219:	dec    ebx
  40e21a:	or     ecx,DWORD PTR [esi]
  40e21c:	imul   edx,DWORD PTR [ecx+0x12fe7f09],0x2e
  40e223:	mov    ecx,0x2330996e
  40e228:	and    ebp,DWORD PTR [esi]
  40e22a:	xor    ecx,edi
  40e22c:	sbb    bh,BYTE PTR ds:0x10d612d2
  40e232:	cmp    BYTE PTR [esi+0x4],bl
  40e235:	pop    eax
  40e236:	call   0x8985e90a
  40e23b:	mov    ch,0xaf
  40e23d:	sbb    bl,BYTE PTR [ebp-0x10cf6022]
  40e243:	adc    BYTE PTR [edi+ecx*4],cl
  40e246:	adc    ebx,DWORD PTR [edx+0x6b]
  40e249:	jecxz  0x40e235
  40e24b:	fs jmp 0x40e269
  40e24e:	test   DWORD PTR [ebp-0x50f96bb6],eax
  40e254:	sti    
  40e255:	sub    al,0x6f
  40e257:	sub    eax,0x4bf44953
  40e25c:	lods   al,BYTE PTR ds:[esi]
  40e25d:	sub    BYTE PTR [esi],0x57
  40e260:	dec    ebx
  40e261:	fwait
  40e262:	jne    0x40e25d
  40e264:	neg    BYTE PTR [eax+0x50]
  40e267:	dec    DWORD PTR [ebp+0xc46cfc5]
  40e26d:	fwait
  40e26e:	xor    DWORD PTR [ebx+edi*4],ebx
  40e271:	mov    al,0xfc
  40e273:	add    DWORD PTR [eax-0x49],esp
  40e276:	and    eax,DWORD PTR [esi+0x526096ee]
  40e27c:	push   eax
  40e27d:	aas    
  40e27e:	add    BYTE PTR [esp+edi*2],dl
  40e281:	add    DWORD PTR [ecx*2+0x2d2cbfa8],eax
  40e288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e289:	(bad)  
  40e28a:	dec    ebp
  40e28b:	int    0xef
  40e28d:	nop
  40e28e:	sbb    DWORD PTR [ebx-0x6c],0x36
  40e292:	and    BYTE PTR [edi+0xa],bl
  40e295:	fs cs cs pop esi
  40e299:	push   esi
  40e29a:	add    BYTE PTR [esi],bh
  40e29c:	jae    0x40e239
  40e29e:	mov    dl,0x43
  40e2a0:	and    ecx,edi
  40e2a2:	jmp    0x514e:0x8dd85f52
  40e2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2aa:	xor    bh,BYTE PTR [edi-0x40211504]
  40e2b0:	(bad)  
  40e2b1:	jecxz  0x40e296
  40e2b3:	test   eax,0x7257d01d
  40e2b8:	pop    esi
  40e2b9:	leave  
  40e2ba:	cmp    eax,0x60e69787
  40e2bf:	jbe    0x40e281
  40e2c1:	cmp    esp,DWORD PTR [eax+0x6e]
  40e2c4:	leave  
  40e2c5:	popa   
  40e2c6:	xchg   ebp,eax
  40e2c7:	push   edi
  40e2c8:	adc    DWORD PTR [edx+0x2feec6af],edi
  40e2ce:	dec    ebp
  40e2cf:	retf   
  40e2d0:	call   0x532c06b9
  40e2d5:	mov    edx,0x702029a1
  40e2da:	out    0x6d,al
  40e2dc:	xlat   BYTE PTR ds:[ebx]
  40e2dd:	in     al,dx
  40e2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2df:	mov    bl,0x66
  40e2e1:	cmp    bl,ch
  40e2e3:	test   al,0xba
  40e2e5:	adc    ebp,edi
  40e2e7:	inc    ebx
  40e2e8:	jl     0x40e304
  40e2ea:	xchg   esi,eax
  40e2eb:	pusha  
  40e2ec:	(bad)  
  40e2ed:	mov    esi,0x1917bf0f
  40e2f2:	scas   al,BYTE PTR es:[edi]
  40e2f3:	mov    ch,0x48
  40e2f5:	and    bl,BYTE PTR [edx]
  40e2f7:	lahf   
  40e2f8:	jb     0x40e299
  40e2fa:	jnp    0x40e2e1
  40e2fc:	mov    al,ds:0xd118b76f
  40e301:	fidivr WORD PTR [edi+0x46]
  40e304:	sub    ch,BYTE PTR [esi]
  40e306:	cmp    si,ax
  40e309:	jo     0x40e2bb
  40e30b:	or     eax,0x8b3442b4
  40e310:	scas   al,BYTE PTR es:[edi]
  40e311:	lea    esp,[ebp+eax*8-0x445a10f5]
  40e318:	xlat   BYTE PTR ds:[ebx]
  40e319:	(bad)  
  40e31a:	hlt    
  40e31b:	add    dh,ah
  40e31d:	adc    al,0xd
  40e31f:	adc    DWORD PTR [ebx],0xc426a58d
  40e325:	cmp    al,al
  40e327:	cld    
  40e328:	jge    0x40e35a
  40e32a:	hlt    
  40e32b:	arpl   cx,di
  40e32d:	in     al,0x46
  40e32f:	xchg   ecx,eax
  40e330:	sub    eax,DWORD PTR [eax+edi*4]
  40e333:	sub    BYTE PTR [esi-0x63],al
  40e336:	sbb    edi,esi
  40e338:	fs push ss
  40e33a:	ret    
  40e33b:	and    al,0xc8
  40e33d:	fidivr DWORD PTR [ebx-0x3a]
  40e340:	cmp    DWORD PTR [eax+0x3886511e],ebx
  40e346:	aad    0x3f
  40e348:	lods   eax,DWORD PTR ds:[esi]
  40e349:	idiv   bh
  40e34b:	icebp  
  40e34c:	jnp    0x40e2f3
  40e34e:	adc    BYTE PTR [eax-0x46a8e02d],bh
  40e354:	cld    
  40e355:	icebp  
  40e356:	push   ss
  40e357:	xchg   edi,eax
  40e358:	and    BYTE PTR [ebx+0x582bb580],0x36
  40e35f:	in     eax,dx
  40e360:	aam    0x11
  40e362:	stc    
  40e363:	addr16 pop edi
  40e365:	mov    eax,0x483fa777
  40e36a:	mov    eax,ds:0xfed297e0
  40e36f:	jb     0x40e326
  40e371:	and    al,0x42
  40e373:	enter  0x9648,0x47
  40e377:	imul   ebp,DWORD PTR ds:0x1a1e25ab,0x19
  40e37e:	push   0x6bd35562
  40e383:	stos   BYTE PTR es:[edi],al
  40e384:	shl    edi,0x63
  40e387:	xlat   BYTE PTR ds:[ebx]
  40e388:	addr16 shl ebp,cl
  40e38b:	push   eax
  40e38c:	jl     0x40e34b
  40e38e:	mov    bl,0x76
  40e390:	push   edi
  40e391:	and    DWORD PTR [edi],ebx
  40e393:	mov    ebx,0x523b92fd
  40e398:	or     DWORD PTR [esi+0x3d],ebp
  40e39b:	inc    edi
  40e39c:	fcmovnbe st,st(5)
  40e39e:	mov    esp,DWORD PTR [eax-0xc]
  40e3a1:	push   edx
  40e3a2:	mov    bl,0x56
  40e3a4:	mov    dh,BYTE PTR [esi+0x71fbbac]
  40e3aa:	ss push cs
  40e3ac:	out    0xee,al
  40e3ae:	out    dx,eax
  40e3af:	aaa    
  40e3b0:	lds    ebp,FWORD PTR [edi+ebx*2]
  40e3b3:	cs and edi,0x1e56a4ed
  40e3ba:	test   eax,0xa62cff5f
  40e3bf:	push   esi
  40e3c0:	(bad)  
  40e3c1:	mov    edx,0xde98d312
  40e3c6:	jl     0x40e382
  40e3c8:	arpl   bp,si
  40e3ca:	retf   0xae4c
  40e3cd:	fwait
  40e3ce:	mov    esi,0x7ce285f7
  40e3d3:	aad    0xba
  40e3d5:	shr    DWORD PTR [ebp+0x76],0x75
  40e3d9:	xchg   ecx,eax
  40e3da:	mov    bl,0x96
  40e3dc:	pop    ecx
  40e3dd:	mov    DWORD PTR [eax+ebp*2+0x5ca819bf],edx
  40e3e4:	sub    BYTE PTR [edi],dh
  40e3e6:	push   esp
  40e3e7:	xchg   esp,eax
  40e3e8:	mov    al,ds:0x36b88ea0
  40e3ed:	pop    ds
  40e3ee:	lods   al,BYTE PTR ds:[esi]
  40e3ef:	(bad)  
  40e3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f1:	jecxz  0x40e3f8
  40e3f3:	inc    edx
  40e3f4:	in     al,dx
  40e3f5:	pop    esi
  40e3f6:	loope  0x40e37f
  40e3f8:	sahf   
  40e3f9:	dec    eax
  40e3fa:	jne    0x40e37c
  40e3fc:	leave  
  40e3fd:	test   BYTE PTR [esi],0x2e
  40e400:	push   0x307cc247
  40e405:	jo     0x40e3ea
  40e407:	mov    ch,0xed
  40e409:	dec    esi
  40e40a:	mov    dl,BYTE PTR [ecx-0x1494f21a]
  40e410:	mov    ds:0x6b9bf69a,al
  40e415:	cmc    
  40e416:	ret    0xdf1a
  40e419:	jmp    0xa236:0x7106b28e
  40e420:	cmp    DWORD PTR [esi],0xffffff94
  40e423:	punpckldq mm6,DWORD PTR [edx]
  40e426:	sbb    eax,0xd8b02894
  40e42b:	call   0x5ef11abb
  40e430:	jbe    0x40e463
  40e432:	nop
  40e433:	jne    0x40e41d
  40e435:	add    al,0xa7
  40e437:	jecxz  0x40e3cc
  40e439:	daa    
  40e43a:	push   eax
  40e43b:	xchg   edx,eax
  40e43c:	pusha  
  40e43d:	xor    ecx,DWORD PTR [edx]
  40e43f:	in     eax,dx
  40e440:	xor    DWORD PTR [ecx-0x2b73476a],ebp
  40e446:	and    dh,ch
  40e448:	add    al,dl
  40e44a:	mov    edi,0x62952361
  40e44f:	inc    edi
  40e450:	sbb    bl,BYTE PTR [edi-0xd]
  40e453:	stc    
  40e454:	xchg   ah,al
  40e456:	push   ds
  40e457:	sub    ah,ch
  40e459:	aaa    
  40e45a:	and    DWORD PTR [edx-0x73],0x3d
  40e45e:	aam    0xf3
  40e460:	jbe    0x40e3ee
  40e462:	stos   BYTE PTR es:[edi],al
  40e463:	push   ecx
  40e464:	mov    ch,0x3d
  40e466:	and    DWORD PTR [esi-0x3526016a],edi
  40e46c:	dec    cl
  40e46e:	or     eax,0x536eed88
  40e473:	sbb    eax,0x30f77b1c
  40e478:	and    al,0x95
  40e47a:	pxor   mm5,QWORD PTR [ecx]
  40e47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e47e:	inc    edx
  40e47f:	jmp    0xf9f55f0
  40e484:	cmp    edi,ebp
  40e486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e487:	shr    edi,0x60
  40e48a:	dec    edi
  40e48b:	in     ax,dx
  40e48d:	mov    esp,0x98f4a791
  40e492:	ins    BYTE PTR es:[edi],dx
  40e493:	lock sub esp,ebx
  40e496:	call   0x85a194af
  40e49b:	cmp    DWORD PTR [ebx+esi*1],ecx
  40e49e:	outs   dx,DWORD PTR ds:[esi]
  40e49f:	into   
  40e4a0:	fild   DWORD PTR [ebx+0x49]
  40e4a3:	cmp    edi,ebp
  40e4a5:	(bad)  
  40e4a6:	jge    0x40e44b
  40e4a8:	xlat   BYTE PTR ds:[ebx]
  40e4a9:	lds    esp,FWORD PTR [ecx+0x12]
  40e4ac:	adc    al,BYTE PTR [eax+0x581dcb18]
  40e4b2:	xchg   ebp,eax
  40e4b3:	xor    DWORD PTR [ecx],esp
  40e4b5:	test   eax,0x2d5ae7fb
  40e4ba:	dec    eax
  40e4bb:	xchg   edi,eax
  40e4bc:	dec    esp
  40e4bd:	push   cs
  40e4be:	jb     0x40e484
  40e4c0:	jb     0x40e4c2
  40e4c2:	xor    al,0x2f
  40e4c4:	mov    esi,0x981afb6
  40e4c9:	fidivr DWORD PTR [ecx+eax*8+0x6d]
  40e4cd:	fbstp  TBYTE PTR ds:0x6c33416c
  40e4d3:	(bad)  
  40e4d4:	fst    QWORD PTR [ebx]
  40e4d6:	das    
  40e4d7:	add    BYTE PTR [ecx-0x66],ch
  40e4da:	ds jno 0x40e481
  40e4dd:	mov    cl,0x99
  40e4df:	dec    eax
  40e4e0:	mov    dh,dl
  40e4e2:	retf   0xa0a0
  40e4e5:	xchg   ecx,eax
  40e4e6:	jbe    0x40e545
  40e4e8:	out    dx,eax
  40e4e9:	aam    0x3b
  40e4eb:	ret    
  40e4ec:	mov    WORD PTR [esi-0x16],?
  40e4ef:	push   ebp
  40e4f0:	push   ebp
  40e4f1:	mov    ebx,DWORD PTR [ebp-0x10]
  40e4f4:	sbb    BYTE PTR [edi],dh
  40e4f6:	test   al,0x22
  40e4f8:	test   BYTE PTR [edi],dl
  40e4fa:	pop    ebp
  40e4fb:	stos   BYTE PTR es:[edi],al
  40e4fc:	inc    eax
  40e4fd:	test   al,0x7c
  40e4ff:	in     al,dx
  40e500:	in     eax,0x67
  40e502:	push   esi
  40e503:	cmp    ebp,ecx
  40e505:	leave  
  40e506:	lea    ebx,[ecx-0x64492edf]
  40e50c:	adc    BYTE PTR [ecx+esi*1+0x2b],ch
  40e510:	pop    eax
  40e511:	mov    eax,0x6a897f77
  40e516:	mov    ds:0x35671059,al
  40e51b:	pop    edx
  40e51c:	jbe    0x40e576
  40e51e:	iret   
  40e51f:	sub    dl,ah
  40e521:	ins    BYTE PTR es:[edi],dx
  40e522:	lock sbb ebx,esp
  40e525:	int    0xc6
  40e527:	and    eax,ecx
  40e529:	sbb    DWORD PTR [eax],ecx
  40e52b:	out    0x94,eax
  40e52d:	aas    
  40e52e:	sbb    al,BYTE PTR ds:0xad15d60f
  40e534:	ds call 0x27ec9411
  40e53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e53b:	neg    BYTE PTR [edx-0x40eb6b68]
  40e541:	repz push ebp
  40e543:	pop    ecx
  40e544:	pop    esp
  40e545:	inc    esi
  40e546:	cmc    
  40e547:	sub    DWORD PTR [esi],esi
  40e549:	test   DWORD PTR [edx+esi*4+0xf3419f2],edx
  40e550:	pop    edi
  40e551:	clc    
  40e552:	pop    edi
  40e553:	cwde   
  40e554:	xor    BYTE PTR [esi],ah
  40e556:	add    edi,DWORD PTR [ebp*4-0x18536e34]
  40e55d:	sbb    ch,BYTE PTR [esp+ecx*4-0x31]
  40e561:	retf   
  40e562:	jecxz  0x40e541
  40e564:	push   ss
  40e565:	rcl    BYTE PTR [ebx+0x26b7fbbd],cl
  40e56b:	mov    bl,0x7b
  40e56d:	ror    BYTE PTR [esi],1
  40e56f:	sbb    ebx,esp
  40e571:	je     0x40e5cb
  40e573:	fstp   DWORD PTR [eax-0x79642295]
  40e579:	push   esp
  40e57a:	sub    bl,ch
  40e57c:	daa    
  40e57d:	inc    ebx
  40e57e:	jo     0x40e5f8
  40e580:	cmp    eax,0xc581e0c1
  40e585:	mov    WORD PTR [edx],?
  40e587:	aam    0x1
  40e589:	jl     0x40e55c
  40e58b:	mov    fs,WORD PTR [edi-0x6]
  40e58e:	jmp    0x9977:0xfdbcd705
  40e595:	(bad)  
  40e596:	pop    eax
  40e597:	rol    BYTE PTR [edx-0x29],1
  40e59a:	in     al,0x9
  40e59c:	jmp    0x40e586
  40e59e:	xchg   edi,edi
  40e5a0:	mov    bl,0xa3
  40e5a2:	or     al,0x54
  40e5a4:	push   DWORD PTR [ebx-0x75]
  40e5a7:	jo     0x40e602
  40e5a9:	pop    es
  40e5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ab:	out    0x44,al
  40e5ad:	rcl    BYTE PTR [edi],cl
  40e5af:	pop    ebx
  40e5b0:	cmp    al,0x8
  40e5b2:	(bad)  
  40e5b3:	call   0x1ce2a960
  40e5b8:	cmp    eax,0x1b1e91d6
  40e5bd:	jecxz  0x40e547
  40e5bf:	push   0xb
  40e5c1:	scas   al,BYTE PTR es:[edi]
  40e5c2:	js     0x40e56e
  40e5c4:	xchg   esp,eax
  40e5c6:	xor    esp,esp
  40e5c8:	dec    esp
  40e5c9:	stos   DWORD PTR es:[edi],eax
  40e5ca:	mov    esp,0xda9dc72a
  40e5cf:	xor    al,ch
  40e5d1:	dec    ebp
  40e5d2:	(bad)  
  40e5d3:	leave  
  40e5d4:	mov    ch,0x24
  40e5d6:	data16 stc 
  40e5d8:	mov    esp,0x67b2142
  40e5dd:	add    bl,ch
  40e5df:	adc    eax,DWORD PTR [ecx-0x183f612]
  40e5e5:	jns    0x40e58d
  40e5e7:	xchg   ebp,eax
  40e5e8:	push   cs
  40e5e9:	lods   al,BYTE PTR ds:[esi]
  40e5ea:	adc    DWORD PTR es:[eax+0x9d53961],esi
  40e5f1:	cmp    DWORD PTR [ebx-0x12],0x7a
  40e5f5:	or     BYTE PTR [ebx+0x28],ch
  40e5f8:	sub    esp,DWORD PTR [esi-0x14]
  40e5fb:	cmp    dh,al
  40e5fd:	adc    BYTE PTR [edi],ch
  40e5ff:	movaps xmm2,xmm1
  40e602:	xchg   esi,eax
  40e603:	push   ss
  40e604:	cmc    
  40e605:	xor    al,0x59
  40e607:	pop    ss
  40e608:	xchg   ecx,eax
  40e609:	xchg   edi,eax
  40e60a:	sub    ebx,esi
  40e60c:	push   edx
  40e60d:	jmp    0x40e5a2
  40e60f:	inc    esp
  40e610:	mov    DWORD PTR ss:[esp+eiz*4-0x4f],ecx
  40e615:	push   es
  40e616:	fiadd  WORD PTR [edx]
  40e618:	scas   al,BYTE PTR es:[edi]
  40e619:	xor    BYTE PTR [eax+0x144fe7a2],0xab
  40e620:	outs   dx,DWORD PTR ds:[esi]
  40e621:	mul    bh
  40e623:	mov    bh,0x7f
  40e625:	stc    
  40e626:	xchg   ebp,eax
  40e627:	push   edi
  40e628:	and    bh,BYTE PTR [eax]
  40e62a:	mov    ecx,0x7cca12b1
  40e62f:	test   eax,0xc83db934
  40e634:	loopne 0x40e697
  40e636:	sub    ch,BYTE PTR fs:[eax+0x7e80642f]
  40e63d:	fistp  WORD PTR [edx+0x76f2e71f]
  40e643:	in     al,dx
  40e644:	clc    
  40e645:	mov    ebx,0x49f71f6d
  40e64a:	mov    DWORD PTR [eax],ebx
  40e64c:	std    
  40e64d:	sbb    al,ch
  40e64f:	in     eax,0x2c
  40e651:	jno    0x40e64c
  40e653:	and    bl,BYTE PTR [esi+0x18205dcd]
  40e659:	fcmovne st,st(7)
  40e65b:	mov    ch,0x74
  40e65d:	xchg   esi,eax
  40e65e:	jge    0x40e6d3
  40e660:	(bad)  
  40e662:	sbb    bh,BYTE PTR [ebp-0x3]
  40e665:	adc    al,0x3
  40e667:	std    
  40e668:	je     0x40e670
  40e66a:	pop    ss
  40e66b:	pusha  
  40e66c:	mov    ch,0x61
  40e66e:	xlat   BYTE PTR ds:[ebx]
  40e66f:	mov    cl,BYTE PTR [eax]
  40e671:	sub    dl,BYTE PTR [ebx]
  40e673:	dec    esi
  40e674:	repz fbld TBYTE PTR [edx+0x2f]
  40e678:	in     al,0x46
  40e67a:	ret    0xfe0
  40e67d:	jo     0x40e6db
  40e67f:	fnclex 
  40e681:	dec    ebp
  40e682:	sahf   
  40e683:	outs   dx,DWORD PTR ds:[esi]
  40e684:	add    esi,0x9b0d8ce5
  40e68a:	ds ret 
  40e68c:	push   ds
  40e68d:	dec    esi
  40e68e:	pop    esp
  40e68f:	and    DWORD PTR [ebp+edx*2-0x1d],edx
  40e693:	int3   
  40e694:	outs   dx,BYTE PTR ds:[esi]
  40e695:	in     al,0x47
  40e697:	xchg   edi,eax
  40e698:	mov    edx,DWORD PTR [edx-0x465750a2]
  40e69e:	mov    cs,WORD PTR [edi+0xbe8ed49]
  40e6a4:	mov    DWORD PTR [ecx],ebp
  40e6a6:	outs   dx,DWORD PTR ds:[esi]
  40e6a7:	cdq    
  40e6a8:	sub    dh,ah
  40e6aa:	loope  0x40e6bf
  40e6ac:	jnp    0x40e69b
  40e6ae:	lods   al,BYTE PTR ds:[esi]
  40e6af:	inc    edi
  40e6b0:	fdivrp st(4),st
  40e6b2:	sub    DWORD PTR ss:[ebp+0x2c0bb412],0xffffffb8
  40e6ba:	adc    ebp,DWORD PTR [eax+0x71]
  40e6bd:	inc    ebx
  40e6be:	add    eax,0xc24cedf0
  40e6c3:	push   edi
  40e6c4:	dec    ebp
  40e6c5:	or     eax,0xa89ed009
  40e6ca:	jbe    0x40e743
  40e6cc:	mov    ecx,0xba0ed164
  40e6d1:	jnp    0x40e6cf
  40e6d3:	pop    ecx
  40e6d4:	ja     0x40e658
  40e6d6:	mov    ?,WORD PTR [edi]
  40e6d8:	mov    ecx,0xdbf47acc
  40e6dd:	or     eax,0xc05e1558
  40e6e2:	mov    eax,0xdf38b8f3
  40e6e7:	scas   al,BYTE PTR es:[edi]
  40e6e8:	aas    
  40e6e9:	inc    ebp
  40e6ea:	mov    al,ds:0x85e877cd
  40e6ef:	je     0x40e694
  40e6f1:	ss mov dh,0x54
  40e6f4:	fwait
  40e6f5:	push   esp
  40e6f6:	sub    edi,ecx
  40e6f8:	push   edi
  40e6f9:	push   ecx
  40e6fa:	ret    0x1096
  40e6fd:	popa   
  40e6fe:	repnz rol DWORD PTR [ebp+0x35cb95cf],cl
  40e705:	rcr    cl,1
  40e707:	xor    ah,al
  40e709:	mov    dh,0x35
  40e70b:	aaa    
  40e70c:	sub    dh,BYTE PTR [edx+edx*2-0x74]
  40e710:	cdq    
  40e711:	je     0x40e78f
  40e713:	cld    
  40e714:	xchg   edx,eax
  40e715:	adc    ecx,edi
  40e717:	or     BYTE PTR [ebx],0x85
  40e71a:	les    edx,FWORD PTR [esi-0x2d]
  40e71d:	mov    ebx,0xa9eaf626
  40e722:	adc    BYTE PTR [esi],ch
  40e724:	bound  ebx,QWORD PTR [ebp+0x3dd6fedf]
  40e72a:	arpl   bx,di
  40e72c:	test   eax,0xbfc2ac0d
  40e731:	inc    esp
  40e732:	cmp    BYTE PTR [edx-0x34],ah
  40e735:	xlat   BYTE PTR ds:[ebx]
  40e736:	add    DWORD PTR [ecx+0x67],eax
  40e739:	call   0x6b42e3cf
  40e73e:	fistp  WORD PTR [edi+0x34]
  40e741:	pop    eax
  40e742:	pop    ecx
  40e743:	ins    BYTE PTR es:[edi],dx
  40e744:	(bad)  
  40e745:	fild   WORD PTR [eax]
  40e747:	jns    0x40e7af
  40e749:	push   cs
  40e74a:	dec    esi
  40e74b:	ins    DWORD PTR es:[edi],dx
  40e74c:	test   al,0xc7
  40e74e:	pop    ecx
  40e74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e750:	pop    ss
  40e751:	cmp    DWORD PTR [edx+0x458b108d],edi
  40e757:	leave  
  40e758:	inc    esi
  40e759:	push   eax
  40e75a:	aad    0xd0
  40e75c:	mov    ebx,DWORD PTR [edi]
  40e75e:	xchg   ebp,eax
  40e75f:	test   BYTE PTR [ebp-0x16],ah
  40e762:	mov    eax,ds:0x9b9c0f87
  40e767:	in     eax,0xf3
  40e769:	inc    ebp
  40e76a:	xchg   esp,eax
  40e76b:	inc    esp
  40e76c:	test   al,0x74
  40e76e:	mov    bl,0xf1
  40e770:	push   ebp
  40e771:	popf   
  40e772:	int3   
  40e773:	push   esp
  40e774:	repz push 0x24f996e0
  40e77a:	out    0x4c,eax
  40e77c:	add    ebp,esi
  40e77e:	pop    ecx
  40e77f:	cmp    ecx,DWORD PTR [ecx+ebp*8+0x8c5a6ef]
  40e786:	inc    esp
  40e787:	cdq    
  40e788:	lods   al,BYTE PTR ds:[esi]
  40e789:	pop    esp
  40e78a:	ret    0x293
  40e78d:	dec    ebp
  40e78e:	ss pop eax
  40e790:	sahf   
  40e791:	mov    ch,0xa
  40e793:	jne    0x40e76c
  40e795:	bound  edi,QWORD PTR [eax]
  40e797:	push   ds
  40e798:	mov    al,ds:0x2951b209
  40e79d:	mov    al,BYTE PTR [esi-0x4c]
  40e7a0:	and    bh,BYTE PTR [ebx-0x5d9bf989]
  40e7a6:	inc    ebp
  40e7a7:	sub    BYTE PTR [edi],bl
  40e7a9:	ja     0x40e780
  40e7ab:	mov    eax,0x85e8ab5f
  40e7b0:	div    edi
  40e7b2:	ror    DWORD PTR [esi],cl
  40e7b4:	mov    dh,0x71
  40e7b6:	xchg   esp,eax
  40e7b7:	sahf   
  40e7b8:	or     al,0x56
  40e7ba:	or     edx,edx
  40e7bc:	mov    esi,0x7f087492
  40e7c1:	addr16 inc edi
  40e7c3:	retf   0x86ee
  40e7c6:	sbb    eax,0xb1377ebc
  40e7cb:	(bad)  
  40e7cc:	fidiv  DWORD PTR [edi+0x43]
  40e7cf:	ds push ds
  40e7d1:	out    dx,al
  40e7d2:	sbb    cl,BYTE PTR [edi+0x77972ecd]
  40e7d8:	dec    esi
  40e7d9:	inc    ecx
  40e7da:	retf   0x2ba3
  40e7dd:	rcr    DWORD PTR [edi+0x1a866ad2],cl
  40e7e3:	mov    al,ds:0xc1abcd8
  40e7e8:	nop    DWORD PTR [ebx-0x24]
  40e7ec:	push   cs
  40e7ed:	or     DWORD PTR [edx-0xc],ebp
  40e7f0:	ror    DWORD PTR [ebx+0x43],cl
  40e7f3:	les    edx,FWORD PTR [ebp+0xea0f824]
  40e7f9:	fcom   QWORD PTR [ecx+0x44]
  40e7fc:	mov    ebp,0x2e276a23
  40e801:	je     0x40e7f4
  40e803:	or     al,0x69
  40e805:	pop    ebp
  40e806:	retf   
  40e807:	ficomp WORD PTR [edi]
  40e809:	xchg   esp,eax
  40e80a:	mov    edi,DWORD PTR [eax]
  40e80c:	dec    ecx
  40e80d:	test   al,0xcf
  40e80f:	jle    0x40e87c
  40e811:	aas    
  40e812:	icebp  
  40e813:	outs   dx,BYTE PTR ds:[esi]
  40e814:	or     eax,0x874bcd55
  40e819:	mov    ebp,0x4a4edbe0
  40e81e:	inc    DWORD PTR [ebx-0xe784292]
  40e824:	mov    edi,DWORD PTR [edi+0x34397c6b]
  40e82a:	xchg   edi,eax
  40e82b:	sub    DWORD PTR [ebp-0x76d5aea6],0xffffff84
  40e832:	sbb    DWORD PTR [edi],0x92074ad7
  40e838:	adc    dl,dl
  40e83a:	icebp  
  40e83b:	jo     0x40e833
  40e83d:	rcr    DWORD PTR [edi],cl
  40e83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e840:	xchg   esi,eax
  40e841:	lods   eax,DWORD PTR ds:[esi]
  40e842:	std    
  40e843:	sar    DWORD PTR [eax],1
  40e845:	repz je 0x40e813
  40e848:	sbb    bh,al
  40e84a:	inc    edi
  40e84b:	xchg   ebp,eax
  40e84c:	js     0x40e8c8
  40e84e:	imul   DWORD PTR [esi+0x59bf59b5]
  40e854:	lods   eax,DWORD PTR ds:[esi]
  40e855:	dec    esp
  40e856:	mov    ah,0xf8
  40e858:	aam    0x4a
  40e85a:	and    ecx,edx
  40e85c:	mov    al,0xb5
  40e85e:	ror    esp,cl
  40e860:	or     edi,DWORD PTR [ebx+ebp*2]
  40e863:	dec    BYTE PTR [edx+0x4c2c9d3a]
  40e869:	mov    ch,ah
  40e86b:	pushf  
  40e86c:	jl     0x40e889
  40e86e:	push   edx
  40e86f:	cmp    eax,0xe4c1d2f9
  40e874:	aad    0x4a
  40e876:	and    dh,al
  40e878:	xlat   BYTE PTR ds:[ebx]
  40e879:	(bad)  
  40e87a:	std    
  40e87b:	or     DWORD PTR [ebx+0x52eabf32],esi
  40e881:	test   al,0x17
  40e883:	ror    DWORD PTR [ecx],0x3e
  40e886:	call   0x82dcddc4
  40e88b:	js     0x40e858
  40e88d:	fadd   st,st(5)
  40e88f:	das    
  40e890:	jg     0x40e88c
  40e892:	or     DWORD PTR [edi*8+0x6a95a5e9],0xffffffec
  40e89a:	ds mov ebx,0x12cfb854
  40e8a0:	shl    DWORD PTR [eax+edi*1-0x1],cl
  40e8a4:	fsub   QWORD PTR [ebp-0x12]
  40e8a7:	cmp    edx,edi
  40e8a9:	or     DWORD PTR [ecx-0x15],esi
  40e8ac:	std    
  40e8ad:	aad    0x63
  40e8af:	jns    0x40e854
  40e8b1:	stc    
  40e8b2:	dec    esp
  40e8b3:	mov    esi,DWORD PTR [edi-0xd]
  40e8b6:	ja     0x40e8d8
  40e8b8:	jecxz  0x40e8a9
  40e8ba:	cs mov esp,0xb85c2571
  40e8c0:	mov    es,WORD PTR [ecx-0x60]
  40e8c3:	or     eax,0xa47ec0b0
  40e8c8:	dec    BYTE PTR [ebx+0x60]
  40e8cb:	sbb    ebx,DWORD PTR [ecx+0x23f7e88]
  40e8d1:	jbe    0x40e91e
  40e8d3:	pop    ecx
  40e8d4:	inc    DWORD PTR [ecx+0x69e8f7e5]
  40e8da:	(bad)  
  40e8db:	cmc    
  40e8dc:	cmp    BYTE PTR [edx+ecx*4-0xb],bl
  40e8e0:	sti    
  40e8e1:	or     eax,0x3b7b9e62
  40e8e6:	divps  xmm6,XMMWORD PTR [edi]
  40e8e9:	retf   
  40e8ea:	lods   eax,DWORD PTR ds:[esi]
  40e8eb:	jle    0x40e8a9
  40e8ed:	push   ebp
  40e8ee:	jle    0x40e939
  40e8f0:	hlt    
  40e8f1:	les    esi,FWORD PTR [ebx+0x7]
  40e8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f5:	mov    al,0xbd
  40e8f7:	je     0x40e962
  40e8f9:	sub    bl,bh
  40e8fb:	push   edi
  40e8fc:	cmp    eax,0x1118eca7
  40e901:	pushf  
  40e902:	ins    BYTE PTR es:[edi],dx
  40e903:	xchg   ebx,eax
  40e904:	ins    DWORD PTR es:[edi],dx
  40e905:	(bad)  
  40e906:	js     0x40e962
  40e908:	fistp  DWORD PTR [edi-0x735f6abd]
  40e90e:	mov    DWORD PTR [eax+0x7],esi
  40e911:	test   al,0x3a
  40e913:	adc    DWORD PTR [edi+ecx*4+0x38],ecx
  40e917:	mov    eax,ds:0x8646cd8f
  40e91c:	test   cl,dh
  40e91e:	and    eax,0x13d54bb9
  40e923:	sub    BYTE PTR [esp+edx*8+0x6c8b2d25],al
  40e92a:	and    BYTE PTR [bx+di+0x71],al
  40e92e:	mov    ecx,0x25b8c5c3
  40e933:	xchg   bl,bh
  40e935:	xor    al,0xc3
  40e937:	imul   ebp,DWORD PTR es:[ebx-0x8],0x72
  40e93c:	stos   BYTE PTR es:[edi],al
  40e93d:	mov    ch,BYTE PTR [ecx-0x1a52c796]
  40e943:	scas   al,BYTE PTR es:[edi]
  40e944:	mov    al,ds:0x90e44a66
  40e949:	mov    ch,0x3
  40e94b:	or     eax,esp
  40e94d:	fdivr  QWORD PTR [ecx+eiz*2]
  40e950:	push   edi
  40e951:	fcomp  QWORD PTR [esi+0x6e28e214]
  40e957:	and    edx,ebx
  40e959:	std    
  40e95a:	sti    
  40e95b:	mov    ebx,0xe45ca2e2
  40e960:	arpl   WORD PTR [esi-0x78],ax
  40e963:	stos   BYTE PTR es:[edi],al
  40e964:	mov    eax,0x1a5ae579
  40e969:	int    0xb7
  40e96b:	es jge 0x40e9e0
  40e96e:	das    
  40e96f:	enter  0x7185,0x75
  40e973:	mov    BYTE PTR [edi],cl
  40e975:	mov    ebp,esp
  40e977:	or     edi,DWORD PTR [esi-0x5b]
  40e97a:	jo     0x40e9a5
  40e97c:	push   0xe9a986dc
  40e981:	pop    edx
  40e982:	pop    esi
  40e983:	fadd   DWORD PTR [eax-0x2a]
  40e986:	mov    esp,0x881929f1
  40e98b:	leave  
  40e98c:	or     DWORD PTR [esi],0xd0b627f0
  40e992:	jae    0x40e9e0
  40e994:	xor    cl,BYTE PTR [edx+0x1926a3c3]
  40e99a:	daa    
  40e99b:	std    
  40e99c:	lahf   
  40e99d:	sub    BYTE PTR [edi+0x54],ch
  40e9a0:	cmp    edx,eax
  40e9a2:	and    ax,0x24f1
  40e9a6:	ja     0x40e9ca
  40e9a8:	js     0x40ea0b
  40e9aa:	dec    ebp
  40e9ab:	sub    ebp,DWORD PTR [eax]
  40e9ad:	(bad)  
  40e9ae:	sub    ebp,DWORD PTR [eax-0x1300f152]
  40e9b4:	sbb    al,0x28
  40e9b6:	ror    DWORD PTR [esi],0x66
  40e9b9:	mov    DWORD PTR [eax+ebx*8+0x3ec88be2],esp
  40e9c0:	call   0x88ad:0x21e3a3dd
  40e9c7:	xor    ecx,DWORD PTR [edi]
  40e9c9:	stos   DWORD PTR es:[edi],eax
  40e9ca:	imul   esi,DWORD PTR [edi+0x7a9dc8f6],0x6436444e
  40e9d4:	cmp    al,0x5d
  40e9d6:	jo     0x40e9c7
  40e9d8:	shl    DWORD PTR [ebx],0xf3
  40e9db:	loope  0x40e964
  40e9dd:	addr16 test edi,ecx
  40e9e0:	jne    0x40ea3c
  40e9e2:	add    BYTE PTR [eax-0x36c65887],bh
  40e9e8:	mov    eax,ds:0xe636a87e
  40e9ed:	cld    
  40e9ee:	pop    ecx
  40e9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f0:	or     DWORD PTR [ebx+0x53],esp
  40e9f3:	xor    DWORD PTR [edx-0x32],0xffffffcc
  40e9f7:	sbb    al,0x1a
  40e9f9:	stc    
  40e9fa:	or     al,0x7b
  40e9fc:	push   edx
  40e9fd:	mov    ch,0xf4
  40e9ff:	add    eax,0xd54b5dc2
  40ea04:	and    ebp,DWORD PTR [ebx+ebx*2+0x32e988f2]
  40ea0b:	dec    esp
  40ea0c:	jl     0x40ea2c
  40ea0e:	aam    0x74
  40ea10:	ror    BYTE PTR [esi+0x78b1ede5],cl
  40ea16:	(bad)  
  40ea17:	xor    DWORD PTR [esi+0x5f854771],ecx
  40ea1d:	sbb    eax,0x6885d305
  40ea22:	cmp    BYTE PTR [eax+0x4d],dl
  40ea25:	jno    0x40e9c0
  40ea27:	mov    es:0x787fb66c,eax
  40ea2d:	cmp    BYTE PTR [ecx],0x1e
  40ea30:	pop    ss
  40ea31:	mov    ss,WORD PTR [esi]
  40ea33:	in     eax,dx
  40ea34:	sub    eax,0xbc11464
  40ea39:	jle    0x40e9d8
  40ea3b:	add    al,0x2
  40ea3d:	mov    ebx,0x865ef622
  40ea42:	jb     0x40ea71
  40ea44:	add    BYTE PTR [ebx+0x15],ch
  40ea47:	fprem  
  40ea49:	pop    es
  40ea4a:	lods   eax,DWORD PTR ds:[esi]
  40ea4b:	jmp    0x19749b6c
  40ea50:	dec    esi
  40ea51:	std    
  40ea52:	push   edi
  40ea53:	(bad)  
  40ea54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea55:	and    DWORD PTR [esi],ebx
  40ea57:	lea    edx,[edx-0x1ce84d93]
  40ea5d:	int    0x82
  40ea5f:	clc    
  40ea60:	fs in  eax,dx
  40ea62:	mov    edx,0xc2d016e8
  40ea67:	sub    eax,0x26b81d58
  40ea6c:	lea    edx,[edi-0x4dd509c8]
  40ea72:	imul   eax
  40ea74:	cmp    DWORD PTR [ebx+0x60e022eb],edi
  40ea7a:	not    DWORD PTR [esi+0x760bf7c]
  40ea80:	into   
  40ea81:	mov    dh,0x3
  40ea83:	js     0x40ea96
  40ea85:	jmp    0x4797:0xf6db2a75
  40ea8c:	(bad)  
  40ea8d:	ins    BYTE PTR es:[edi],dx
  40ea8e:	loop   0x40eab3
  40ea90:	pop    esi
  40ea91:	jmp    0xc871:0x6193aa7
  40ea98:	lahf   
  40ea99:	adc    BYTE PTR [edx+0x2a],al
  40ea9c:	pop    ecx
  40ea9d:	and    esp,DWORD PTR [esi]
  40ea9f:	ror    DWORD PTR [ebp*8+0x25ca5644],0x49
  40eaa7:	xchg   ebp,eax
  40eaa8:	pop    ecx
  40eaa9:	pop    es
  40eaaa:	(bad)  
  40eaab:	adc    ch,BYTE PTR [ecx]
  40eaad:	dec    BYTE PTR [ecx]
  40eaaf:	push   0x29407869
  40eab4:	je     0x40eae2
  40eab6:	repz cmp al,0x12
  40eab9:	enter  0x9bc,0xae
  40eabd:	mov    bh,0xc6
  40eabf:	test   BYTE PTR [esi],0xb6
  40eac2:	sub    al,0x72
  40eac4:	loop   0x40eaa1
  40eac6:	sbb    DWORD PTR [edi-0x5f6a6a83],ecx
  40eacc:	cmp    ecx,DWORD PTR [eax-0x36ea2469]
  40ead2:	imul   ebp,DWORD PTR [edx+0x43d87ac3],0xf3f23b55
  40eadc:	cdq    
  40eadd:	pop    edx
  40eade:	xor    edx,DWORD PTR ds:0x8a36af20
  40eae4:	shl    BYTE PTR [esi-0x6a],0x3d
  40eae8:	icebp  
  40eae9:	jmp    0x73c70d36
  40eaee:	add    BYTE PTR [ecx+esi*1],dl
  40eaf1:	or     BYTE PTR [esi-0x4a8f9a95],0xbd
  40eaf8:	jg     0x40eb1d
  40eafa:	adc    al,0xa0
  40eafc:	mov    WORD PTR [ecx+0x52],fs
  40eaff:	pop    DWORD PTR [edi-0x3c]
  40eb02:	sbb    esp,DWORD PTR [ebp-0x1cf24f1e]
  40eb08:	push   edi
  40eb09:	xchg   ecx,eax
  40eb0a:	ficom  DWORD PTR [ecx-0x5c]
  40eb0d:	xor    eax,0xc7b99ecb
  40eb12:	dec    ebx
  40eb13:	xor    ecx,edi
  40eb15:	and    DWORD PTR ds:0x570cf0fa,0xffffffaf
  40eb1c:	mov    eax,ds:0x9f050157
  40eb21:	pop    es
  40eb22:	mov    bl,0xdc
  40eb24:	pop    ss
  40eb25:	pop    esi
  40eb26:	push   ecx
  40eb27:	add    BYTE PTR [esi-0x59],ah
  40eb2a:	je     0x40eb18
  40eb2c:	jno    0x40eb7e
  40eb2e:	jp     0x40eb62
  40eb30:	ret    
  40eb31:	pop    ds
  40eb32:	(bad)  
  40eb34:	fwait
  40eb35:	mov    dh,0xe9
  40eb37:	fnstsw WORD PTR [ebx+0x8]
  40eb3a:	xchg   DWORD PTR ds:0x6a8a6374,ecx
  40eb40:	mov    BYTE PTR [ebx-0x61],ah
  40eb43:	dec    edx
  40eb44:	mov    ds:0x7a607d18,eax
  40eb49:	push   ds
  40eb4a:	sbb    DWORD PTR [esi],eax
  40eb4c:	adc    eax,0x7b36894b
  40eb51:	cmp    al,BYTE PTR [edx]
  40eb53:	mov    eax,ds:0xb421382a
  40eb58:	pop    ebx
  40eb59:	pop    ebx
  40eb5a:	scas   eax,DWORD PTR es:[edi]
  40eb5b:	mov    BYTE PTR [ebp+0x15f9d338],ch
  40eb61:	push   ecx
  40eb62:	adc    eax,0x699fc78b
  40eb67:	and    al,0x51
  40eb69:	push   eax
  40eb6a:	or     DWORD PTR [edi-0x7ac27e3d],ebx
  40eb70:	and    DWORD PTR [eax],ebp
  40eb72:	lahf   
  40eb73:	or     DWORD PTR [ebp+0x4c2d73a5],ebx
  40eb79:	(bad)  
  40eb7a:	xchg   esp,eax
  40eb7b:	push   esp
  40eb7c:	(bad)  
  40eb7d:	aas    
  40eb7e:	xor    eax,0xcdd67165
  40eb83:	scas   al,BYTE PTR es:[edi]
  40eb84:	add    dh,bh
  40eb86:	and    esi,DWORD PTR ds:0x3532f182
  40eb8c:	outs   dx,BYTE PTR ds:[esi]
  40eb8d:	mov    edx,edi
  40eb8f:	sub    ah,cl
  40eb91:	mov    bh,BYTE PTR [ebp-0xf5a52ef]
  40eb97:	nop
  40eb98:	in     eax,0x2a
  40eb9a:	adc    BYTE PTR [edx-0x35a63835],cl
  40eba0:	in     al,0x23
  40eba2:	mov    dh,0xbd
  40eba4:	int    0xae
  40eba6:	fcomi  st,st(1)
  40eba8:	jge    0x40ebe3
  40ebaa:	mov    ch,BYTE PTR [edx]
  40ebac:	ror    BYTE PTR [eax-0x11c84891],cl
  40ebb2:	lods   al,BYTE PTR ds:[esi]
  40ebb3:	scas   eax,DWORD PTR es:[edi]
  40ebb4:	push   ebp
  40ebb5:	(bad)  
  40ebb6:	mov    edx,0x213c2b55
  40ebbb:	mov    dl,0x3d
  40ebbd:	cld    
  40ebbe:	mov    ebx,ebp
  40ebc0:	cmp    ch,BYTE PTR [eax]
  40ebc2:	inc    ebx
  40ebc3:	leave  
  40ebc4:	popa   
  40ebc5:	repz shr BYTE PTR [ebx+edi*4],0x99
  40ebca:	inc    esp
  40ebcb:	adc    cl,BYTE PTR [edi]
  40ebcd:	or     DWORD PTR [edx],0xb3907eb0
  40ebd3:	mov    esi,0x79c94d23
  40ebd8:	ror    BYTE PTR [ecx],1
  40ebda:	pop    edx
  40ebdb:	mov    dh,0x29
  40ebdd:	sbb    BYTE PTR [ecx],0xbd
  40ebe0:	push   edx
  40ebe1:	pop    edx
  40ebe2:	adc    bh,BYTE PTR [edx-0x45d10f2f]
  40ebe8:	sub    ebx,DWORD PTR [ebp+0x7e83c274]
  40ebee:	lea    edx,[esi+0x15]
  40ebf1:	push   edx
  40ebf2:	jecxz  0x40ec0d
  40ebf4:	jae    0x40ebcc
  40ebf6:	stc    
  40ebf7:	call   0x90fa577b
  40ebfc:	(bad)  [ebp+esi*2+0x8ffbdbf]
  40ec03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec04:	arpl   di,bp
  40ec06:	cli    
  40ec07:	popf   
  40ec08:	pop    es
  40ec09:	loopne 0x40eb9f
  40ec0b:	jmp    0x40ec30
  40ec0d:	aam    0xf8
  40ec0f:	(bad)  
  40ec10:	shl    BYTE PTR [ecx],1
  40ec12:	(bad)  
  40ec13:	pop    ecx
  40ec14:	pop    ds
  40ec15:	idiv   DWORD PTR [esi-0x7a]
  40ec18:	sub    al,0x1c
  40ec1a:	and    esp,DWORD PTR [esi+0x48397304]
  40ec20:	add    DWORD PTR [ecx+0x1f58feea],ecx
  40ec26:	loope  0x40ec67
  40ec28:	inc    edi
  40ec29:	inc    esi
  40ec2a:	data16 outs dx,BYTE PTR ds:[esi]
  40ec2c:	mov    esi,0x3687d95d
  40ec31:	fisubr WORD PTR [eax+eiz*1]
  40ec34:	mov    esi,0x896fb8
  40ec39:	inc    ebx
  40ec3a:	cmp    al,0x20
  40ec3c:	push   es
  40ec3d:	push   es
  40ec3e:	in     eax,dx
  40ec3f:	sbb    ah,BYTE PTR [edx-0x22d83daa]
  40ec45:	in     al,0x1
  40ec47:	pop    edx
  40ec48:	int3   
  40ec49:	stc    
  40ec4a:	cli    
  40ec4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec4c:	mov    edx,0x5d81ce8d
  40ec51:	xchg   ebx,eax
  40ec52:	inc    ebp
  40ec53:	test   edi,esp
  40ec55:	icebp  
  40ec56:	jl     0x40ec11
  40ec58:	ror    BYTE PTR [eax+0x6979a53a],0xc4
  40ec5f:	shr    BYTE PTR [ecx+0xa],cl
  40ec62:	inc    edi
  40ec63:	addr16 inc ebp
  40ec65:	cld    
  40ec66:	or     ch,dh
  40ec68:	idiv   DWORD PTR [eax+0x35ce1d82]
  40ec6e:	mov    esp,0xa76bb92a
  40ec73:	sub    al,0xa7
  40ec75:	cmp    BYTE PTR [ecx+0x3e3d6fbf],bh
  40ec7b:	fdivr  DWORD PTR [ebx]
  40ec7d:	inc    esi
  40ec7e:	outs   dx,BYTE PTR ds:[esi]
  40ec7f:	je     0x40ec36
  40ec81:	bnd jmp 0x40ecf3
  40ec84:	inc    edx
  40ec85:	mov    eax,0x8855b898
  40ec8a:	mov    ds:0xb9596a0a,al
  40ec8f:	hlt    
  40ec90:	sub    DWORD PTR [esi],edi
  40ec92:	out    0x73,eax
  40ec94:	sub    ch,BYTE PTR [ebx-0x64f562b6]
  40ec9a:	call   0xec2a3bae
  40ec9f:	mov    BYTE PTR [edi],bh
  40eca1:	push   eax
  40eca2:	das    
  40eca3:	int3   
  40eca4:	push   ecx
  40eca5:	mul    DWORD PTR [eax+0x2f]
  40eca8:	add    esp,DWORD PTR [ebx+0x3e]
  40ecab:	in     eax,dx
  40ecac:	into   
  40ecad:	les    edi,FWORD PTR [edi+0x7a]
  40ecb0:	jge    0x40ed26
  40ecb2:	inc    ecx
  40ecb3:	adc    cl,ch
  40ecb5:	(bad)
  40ecb8:	push   ds
  40ecb9:	and    BYTE PTR [ebp-0x63],al
  40ecbc:	imul   edi,ebp,0xffffff91
  40ecbf:	lds    edx,FWORD PTR [esi]
  40ecc1:	retf   0xe36e
  40ecc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc5:	xchg   DWORD PTR [eax+0xc859cbc],edi
  40eccb:	hlt    
  40eccc:	jne    0x40ece4
  40ecce:	loope  0x40ece9
  40ecd0:	mov    eax,0xef6f71cf
  40ecd5:	push   ebp
  40ecd6:	jnp    0x40ed38
  40ecd8:	push   ecx
  40ecd9:	ret    0x9318
  40ecdc:	pop    edi
  40ecdd:	test   DWORD PTR [eax-0x5f5b7b94],edi
  40ece3:	inc    edx
  40ece4:	and    al,bl
  40ece6:	xor    al,0x22
  40ece8:	popa   
  40ece9:	jle    0x40ecc0
  40eceb:	cmp    ch,dh
  40eced:	int    0x12
  40ecef:	cmp    BYTE PTR [ebx-0x78],dl
  40ecf2:	dec    edx
  40ecf3:	sbb    edx,DWORD PTR [esi]
  40ecf5:	xor    DWORD PTR [edx+0x60],edx
  40ecf8:	sahf   
  40ecf9:	ja     0x40ed21
  40ecfb:	cmp    ch,cl
  40ecfd:	stos   BYTE PTR es:[edi],al
  40ecfe:	sub    al,al
  40ed00:	cli    
  40ed01:	add    esi,eax
  40ed03:	jns    0x40ec9f
  40ed05:	aam    0x33
  40ed07:	xchg   ecx,eax
  40ed08:	inc    esi
  40ed09:	out    0x3b,eax
  40ed0b:	xor    DWORD PTR [edx+ebp*4],edi
  40ed0e:	(bad)  
  40ed0f:	xor    ah,dl
  40ed11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed12:	lods   eax,DWORD PTR ds:[esi]
  40ed13:	pcmpgtb mm6,QWORD PTR [edx]
  40ed16:	out    dx,al
  40ed17:	repnz rcr BYTE PTR [ebx],0xb6
  40ed1b:	ret    
  40ed1c:	mov    ecx,0x96c67f71
  40ed21:	(bad)  
  40ed22:	dec    ecx
  40ed23:	nop
  40ed24:	sbb    BYTE PTR [eax],bh
  40ed26:	hlt    
  40ed27:	add    al,0x71
  40ed29:	mov    ah,0x3a
  40ed2b:	push   ss
  40ed2c:	jae    0x40eda2
  40ed2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2f:	push   edi
  40ed30:	add    DWORD PTR [eax+0x3e],eax
  40ed33:	addr16 mov al,ds:0xd59f
  40ed37:	inc    ebx
  40ed38:	push   0x8
  40ed3a:	stc    
  40ed3b:	and    DWORD PTR [eax-0x49c69368],ebx
  40ed41:	fisub  WORD PTR [ecx]
  40ed43:	pushf  
  40ed44:	js     0x40eda4
  40ed46:	dec    esp
  40ed47:	fdivr  DWORD PTR [ebx-0xdb8af1b]
  40ed4d:	(bad)  
  40ed4e:	mov    edi,0x8d852bd9
  40ed53:	js     0x40ed07
  40ed55:	(bad)  [esp+edx*1-0x8]
  40ed59:	inc    ebp
  40ed5a:	in     eax,0x22
  40ed5c:	xchg   ebp,eax
  40ed5d:	mov    ecx,DWORD PTR [ecx]
  40ed5f:	cmp    ebx,DWORD PTR [esi-0x6c]
  40ed62:	jecxz  0x40edcb
  40ed64:	inc    edx
  40ed65:	jae    0x40ed08
  40ed67:	adc    bh,0xb9
  40ed6a:	inc    edx
  40ed6b:	or     eax,0x65080920
  40ed70:	pop    edx
  40ed71:	cwde   
  40ed72:	pop    edi
  40ed73:	inc    edi
  40ed74:	data16 stos BYTE PTR es:[edi],al
  40ed76:	pop    ss
  40ed77:	jb     0x40eddc
  40ed79:	xchg   ebx,eax
  40ed7a:	ret    
  40ed7b:	jp     0x40ed13
  40ed7d:	xchg   esi,eax
  40ed7e:	shl    BYTE PTR ss:[ebp-0x44],cl
  40ed82:	je     0x40ed06
  40ed84:	daa    
  40ed85:	mul    BYTE PTR [ebx]
  40ed87:	mov    WORD PTR [esi+0x5d],ds
  40ed8a:	cmc    
  40ed8b:	clc    
  40ed8c:	stos   DWORD PTR es:[edi],eax
  40ed8d:	adc    al,dl
  40ed8f:	pop    esp
  40ed90:	adc    al,0x1c
  40ed92:	stos   BYTE PTR es:[edi],al
  40ed93:	sti    
  40ed94:	mov    dh,0xd3
  40ed96:	outs   dx,DWORD PTR ds:[esi]
  40ed97:	or     al,0x5e
  40ed99:	sub    DWORD PTR [ebx],ecx
  40ed9b:	or     al,0xf5
  40ed9d:	lods   al,BYTE PTR ds:[esi]
  40ed9e:	sub    dh,BYTE PTR ss:[esi]
  40eda1:	xchg   ebp,eax
  40eda2:	ins    DWORD PTR es:[edi],dx
  40eda3:	and    BYTE PTR ds:0xcaba1984,dl
  40eda9:	cmp    bh,dh
  40edab:	jno    0x40ed9f
  40edad:	adc    DWORD PTR [edi-0x19],ebx
  40edb0:	sub    al,0xb0
  40edb2:	adc    bh,ah
  40edb4:	test   DWORD PTR [eax],esp
  40edb6:	adc    BYTE PTR [eax-0x26505758],dh
  40edbc:	cld    
  40edbd:	and    esp,ebx
  40edbf:	push   0xbce9fb5e
  40edc4:	or     al,BYTE PTR [ecx]
  40edc6:	in     eax,dx
  40edc7:	mov    edx,0xf733e91b
  40edcc:	out    0x57,eax
  40edce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcf:	mov    ds:0xb0350ac,eax
  40edd4:	push   eax
  40edd5:	adc    eax,DWORD PTR [ebx]
  40edd7:	ds and ah,bl
  40edda:	call   0x1705:0x699d5e4c
  40ede1:	repnz std 
  40ede3:	int3   
  40ede4:	jge    0x40edd5
  40ede6:	cmp    edi,DWORD PTR [eax+0x3c024720]
  40edec:	int3   
  40eded:	add    ah,BYTE PTR [ecx-0x3114a031]
  40edf3:	es pushf 
  40edf5:	lods   eax,DWORD PTR ds:[esi]
  40edf6:	hlt    
  40edf7:	stc    
  40edf8:	(bad)  
  40edf9:	leave  
  40edfa:	dec    edi
  40edfb:	fsubr  DWORD PTR ds:0x375733af
  40ee01:	loope  0x40ee7d
  40ee03:	jle    0x40ee63
  40ee05:	pop    ds
  40ee06:	call   0x802790a5
  40ee0b:	sbb    eax,0x55dfc999
  40ee10:	push   DWORD PTR [edx+edx*4-0x354626e5]
  40ee17:	ins    BYTE PTR es:[di],dx
  40ee19:	inc    ebp
  40ee1a:	inc    ebx
  40ee1b:	and    ch,BYTE PTR [ecx]
  40ee1d:	jge    0x40ee4a
  40ee1f:	pop    esp
  40ee20:	ror    BYTE PTR [eax-0x4d],1
  40ee23:	cwde   
  40ee24:	retf   
  40ee25:	fdiv   QWORD PTR [ebx]
  40ee27:	jnp    0x40ee0c
  40ee29:	rol    BYTE PTR [esp+edx*2+0x34f82275],cl
  40ee30:	fdiv   QWORD PTR [ebp-0x1e9c186f]
  40ee36:	cs daa 
  40ee38:	xchg   ecx,eax
  40ee39:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee3b:	push   0x91e2fb0
  40ee40:	(bad)
  40ee44:	sub    esp,DWORD PTR es:[edi]
  40ee47:	(bad)  
  40ee48:	push   eax
  40ee49:	lods   al,BYTE PTR ds:[esi]
  40ee4a:	gs add ebx,esp
  40ee4d:	test   DWORD PTR [edi],esi
  40ee4f:	add    BYTE PTR ds:0x1bc938d8,al
  40ee55:	push   edx
  40ee56:	jae    0x40eded
  40ee58:	inc    ebp
  40ee59:	int3   
  40ee5a:	push   0xaa52b4fb
  40ee5f:	test   BYTE PTR [ebx],dh
  40ee61:	or     al,0x79
  40ee63:	into   
  40ee64:	dec    ebx
  40ee65:	dec    ebx
  40ee66:	sbb    BYTE PTR [edx-0x674192],ch
  40ee6c:	arpl   WORD PTR [ecx+0x19],cx
  40ee6f:	push   ebx
  40ee70:	ins    BYTE PTR es:[edi],dx
  40ee71:	test   DWORD PTR [ebx],eax
  40ee73:	mov    eax,ds:0x429fc398
  40ee78:	sti    
  40ee79:	inc    esp
  40ee7a:	inc    edx
  40ee7b:	xchg   esp,eax
  40ee7c:	pop    edx
  40ee7d:	jnp    0x40eef6
  40ee7f:	outs   dx,BYTE PTR ds:[esi]
  40ee80:	inc    eax
  40ee81:	hlt    
  40ee82:	xchg   BYTE PTR [esi],dl
  40ee84:	jo     0x40eea3
  40ee86:	lods   eax,DWORD PTR ds:[esi]
  40ee87:	ret    0xaefe
  40ee8a:	inc    ebx
  40ee8b:	cmp    eax,0x43aff103
  40ee90:	push   ss
  40ee91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee93:	hlt    
  40ee94:	pop    edi
  40ee95:	mov    esp,0x8dacfa3
  40ee9a:	push   0x42fe3d7a
  40ee9f:	neg    BYTE PTR ds:0xf127951f
  40eea5:	shl    BYTE PTR [ecx+0x165f56ec],1
  40eeab:	xchg   DWORD PTR [eax+0x5d345ca6],ecx
  40eeb1:	sbb    al,0x51
  40eeb3:	in     al,0xbe
  40eeb5:	rol    BYTE PTR [ebx-0x24a9b424],1
  40eebb:	xlat   BYTE PTR ds:[ebx]
  40eebc:	xor    al,0x7
  40eebe:	and    al,0x59
  40eec0:	pop    ebp
  40eec1:	iret   
  40eec2:	cmp    DWORD PTR [ebp-0x76],ebp
  40eec5:	in     eax,0x55
  40eec7:	pop    ebx
  40eec8:	cmp    edi,ebx
  40eeca:	fldenv [ebx+0x6b0fb300]
  40eed0:	push   ecx
  40eed1:	(bad)  
  40eed3:	mov    ch,0x8c
  40eed5:	push   ss
  40eed6:	mov    bh,0x7e
  40eed8:	popa   
  40eed9:	pop    edx
  40eeda:	les    edi,FWORD PTR [edx]
  40eedc:	mov    eax,0xb1cc3836
  40eee1:	push   ecx
  40eee2:	adc    al,0xd7
  40eee4:	jbe    0x40eeb1
  40eee6:	sbb    BYTE PTR [eax-0x17],ch
  40eee9:	mov    esi,0xccb78d45
  40eeee:	add    eax,0xf5c92f25
  40eef3:	pop    ebx
  40eef4:	xchg   esp,eax
  40eef5:	add    edx,DWORD PTR [ecx+eax*2-0x69468fb]
  40eefc:	inc    ecx
  40eefd:	jmp    0x40ef70
  40eeff:	mov    ecx,0x3accf875
  40ef04:	ss out dx,eax
  40ef06:	aaa    
  40ef07:	inc    ebp
  40ef08:	inc    eax
  40ef09:	or     BYTE PTR [edi+ecx*8-0x3e],bh
  40ef0d:	icebp  
  40ef0e:	scas   eax,DWORD PTR es:[edi]
  40ef0f:	jmp    0xfbc5a4a4
  40ef14:	mov    eax,0xfe2bc474
  40ef19:	popf   
  40ef1a:	aam    0xb0
  40ef1c:	ins    BYTE PTR es:[edi],dx
  40ef1d:	cmp    ebx,edx
  40ef1f:	repnz adc bh,BYTE PTR [edi+0x45]
  40ef23:	sbb    BYTE PTR [edx+0x6c8803c9],dl
  40ef29:	jge    0x40ef6b
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	cmp    eax,0xe65d4edd
  40ef31:	cld    
  40ef32:	mov    eax,0xe8d8d3f0
  40ef37:	and    al,0x9e
  40ef39:	mov    ds:0xb3c40bd0,al
  40ef3e:	push   ss
  40ef3f:	jge    0x40ef25
  40ef41:	out    0xc7,eax
  40ef43:	mov    ah,0x90
  40ef45:	out    dx,eax
  40ef46:	mov    ds:0x3e5424a2,eax
  40ef4b:	mov    ebp,0xac8dd49e
  40ef50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef51:	pop    ss
  40ef52:	adc    ebp,DWORD PTR [esp+eiz*2]
  40ef55:	(bad)  
  40ef56:	pop    eax
  40ef57:	push   eax
  40ef58:	push   esp
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	mov    esi,0xfab4b9ae
  40ef5f:	add    ebx,DWORD PTR [ebp+0x64]
  40ef62:	call   DWORD PTR [esi+0x326142b7]
  40ef68:	jecxz  0x40ef15
  40ef6a:	leave  
  40ef6b:	add    al,0x5b
  40ef6d:	idiv   bh
  40ef6f:	adc    BYTE PTR [esi+0x69315928],0x47
  40ef76:	(bad)  
  40ef77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef78:	sbb    BYTE PTR [ecx],dl
  40ef7a:	xor    dl,BYTE PTR [edi+ebp*2]
  40ef7d:	les    eax,FWORD PTR [eax+0x32]
  40ef80:	scas   eax,DWORD PTR es:[edi]
  40ef81:	call   DWORD PTR [eax+eax*8+0x73]
  40ef85:	or     al,0x75
  40ef87:	add    al,BYTE PTR [ecx]
  40ef89:	clc    
  40ef8a:	pop    es
  40ef8b:	adc    ebp,esp
  40ef8d:	pop    eax
  40ef8e:	in     al,dx
  40ef8f:	je     0x40ef8b
  40ef91:	push   esi
  40ef92:	jmp    0x7291:0x4be96289
  40ef99:	mov    cl,0x5b
  40ef9b:	cld    
  40ef9c:	push   es
  40ef9d:	pop    ss
  40ef9e:	add    eax,0x3defd508
  40efa3:	adc    DWORD PTR [edi-0x1635e67],0xffffff92
  40efaa:	mov    al,0x85
  40efac:	jbe    0x40effa
  40efae:	inc    edi
  40efaf:	daa    
  40efb0:	sbb    eax,0x782834a9
  40efb5:	dec    esp
  40efb6:	push   esi
  40efb7:	adc    dl,BYTE PTR [ecx+0x205ada01]
  40efbd:	pop    ss
  40efbe:	cli    
  40efbf:	ret    
  40efc0:	pop    ecx
  40efc1:	mov    eax,0xd56048d5
  40efc6:	adc    BYTE PTR ds:0x7e0d30ca,dl
  40efcc:	jno    0x40efcc
  40efce:	mov    dl,0x46
  40efd0:	pop    edi
  40efd1:	sub    cl,BYTE PTR [edx+esi*2-0x43512762]
  40efd8:	or     esi,DWORD PTR [edx]
  40efda:	call   FWORD PTR [esi+0x78]
  40efdd:	popf   
  40efde:	sbb    esi,edi
  40efe0:	(bad)  
  40efe1:	into   
  40efe2:	or     eax,0xe548dfa2
  40efe7:	repz xchg edi,eax
  40efe9:	dec    edi
  40efea:	std    
  40efeb:	out    dx,al
  40efec:	xor    eax,0x1a956763
  40eff1:	cmp    DWORD PTR [eax+0x8c6bf8f],esp
  40eff7:	retf   0x2098
  40effa:	ins    BYTE PTR es:[edi],dx
  40effb:	push   0x28a8b52a
  40f000:	clc    
  40f001:	dec    ebx
  40f002:	stos   BYTE PTR es:[edi],al
  40f003:	imul   ebx,DWORD PTR [ebx+eax*4-0x42],0x1f29c95b
  40f00b:	xchg   edi,eax
  40f00c:	add    BYTE PTR [edi-0x18],ch
  40f00f:	arpl   WORD PTR [ebx+0x2e76d093],di
  40f015:	xchg   edi,eax
  40f016:	mov    eax,esi
  40f018:	jae    0x40f048
  40f01a:	pop    edx
  40f01b:	cli    
  40f01c:	popa   
  40f01d:	aas    
  40f01e:	jb     0x40f06e
  40f020:	fiadd  DWORD PTR [esi+0x77]
  40f023:	inc    edi
  40f024:	ins    DWORD PTR es:[edi],dx
  40f025:	mov    ebx,0x8a9d110a
  40f02a:	push   edx
  40f02b:	xor    dh,BYTE PTR [esi+0x66b3e7e]
  40f031:	mul    DWORD PTR [esi-0x7389fc78]
  40f037:	cmc    
  40f038:	fwait
  40f039:	or     ax,0x2b17
  40f03d:	add    BYTE PTR [ebp+ecx*8-0x67],bl
  40f041:	mov    eax,0x9d7d9c5
  40f046:	div    dl
  40f048:	sbb    ah,ah
  40f04a:	jae    0x40f024
  40f04c:	push   ebp
  40f04d:	test   DWORD PTR [ebx-0x247d94f8],ebp
  40f053:	sub    eax,0xfd8dda9d
  40f058:	and    BYTE PTR [edi+0x33dc4618],dh
  40f05e:	jnp    0x40f029
  40f060:	dec    ebx
  40f061:	out    dx,al
  40f062:	mov    al,0xf
  40f064:	cmc    
  40f065:	mov    ds:0x5aa8c0c2,eax
  40f06a:	xor    DWORD PTR [edi+0x21],edi
  40f06d:	jg     0x40f0da
  40f06f:	pop    edi
  40f070:	sahf   
  40f071:	mov    cl,0xf1
  40f073:	mov    ebp,0x3f42e776
  40f078:	std    
  40f079:	test   al,0x8c
  40f07b:	xor    DWORD PTR [ecx+0x3a36e1b0],ecx
  40f081:	pop    ecx
  40f082:	push   ds
  40f083:	adc    BYTE PTR [edi],0x46
  40f086:	pop    esp
  40f087:	adc    DWORD PTR [esi],ebp
  40f089:	stos   BYTE PTR es:[edi],al
  40f08a:	and    ebp,ecx
  40f08c:	push   ebp
  40f08d:	jne    0x40f087
  40f08f:	ficomp WORD PTR [ecx-0x8981d0f]
  40f095:	mov    esi,0x1ab4036c
  40f09a:	pop    ebp
  40f09b:	pop    esi
  40f09c:	mov    esp,ss
  40f09e:	sub    DWORD PTR [eax+ebx*4],esp
  40f0a1:	(bad)  
  40f0a2:	lock dec ebp
  40f0a4:	clc    
  40f0a5:	sbb    esi,eax
  40f0a7:	pop    esp
  40f0a8:	or     ah,bl
  40f0aa:	and    bl,BYTE PTR [esi]
  40f0ac:	sub    al,0xd1
  40f0ae:	push   esp
  40f0af:	xor    ah,BYTE PTR [ebx]
  40f0b1:	push   cs
  40f0b2:	xchg   DWORD PTR [eax+esi*4-0x1e366aae],ebx
  40f0b9:	dec    ecx
  40f0ba:	lock cmp esi,DWORD PTR [esi-0x4b]
  40f0be:	push   ecx
  40f0bf:	(bad)  
  40f0c0:	pushf  
  40f0c1:	mov    esi,0x919d05f9
  40f0c6:	dec    esp
  40f0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c8:	int3   
  40f0c9:	pop    ss
  40f0ca:	aam    0xaf
  40f0cc:	cmp    BYTE PTR [eax-0x3c],cl
  40f0cf:	xchg   ecx,eax
  40f0d0:	inc    ecx
  40f0d1:	sbb    ebp,DWORD PTR [ecx-0x263e4dbd]
  40f0d7:	pop    eax
  40f0d8:	xchg   DWORD PTR [edx+0x35],edi
  40f0db:	jno    0x40f14a
  40f0dd:	outs   dx,DWORD PTR ds:[esi]
  40f0de:	xor    al,al
  40f0e0:	lahf   
  40f0e1:	mov    ds:0x97dd543d,al
  40f0e6:	dec    esp
  40f0e7:	xchg   ebx,eax
  40f0e8:	or     DWORD PTR [ecx],ebx
  40f0ea:	scas   al,BYTE PTR es:[edi]
  40f0eb:	ror    esp,0xbb
  40f0ee:	push   ecx
  40f0ef:	data16 aad 0xc4
  40f0f2:	add    DWORD PTR [eax-0x9],esp
  40f0f5:	or     al,0x14
  40f0f7:	dec    edi
  40f0f8:	and    al,0xca
  40f0fa:	adc    BYTE PTR [edx+0x72],ch
  40f0fd:	je     0x40f0b1
  40f0ff:	xor    DWORD PTR [edi],0x21
  40f102:	cmp    cl,BYTE PTR [ecx+0xacd5896]
  40f108:	jb     0x40f0aa
  40f10a:	popa   
  40f10b:	pop    esi
  40f10c:	cmp    DWORD PTR [edi-0x3c],0xf218f897
  40f113:	loopne 0x40f141
  40f115:	imul   edx,DWORD PTR [edi-0x2d1df0e6],0xb8ecf719
  40f11f:	test   BYTE PTR [ebx+0x37200b03],al
  40f125:	lea    edi,[ecx-0x339c8113]
  40f12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f12c:	jg     0x40f0d7
  40f12e:	cmp    al,bl
  40f130:	jnp    0x40f11d
  40f132:	jmp    0x40f18a
  40f134:	sub    DWORD PTR [esi+0x65],edi
  40f137:	retf   
  40f138:	out    dx,eax
  40f139:	jp     0x40f18b
  40f13b:	outs   dx,DWORD PTR ds:[esi]
  40f13c:	loopne 0x40f157
  40f13e:	mov    ch,0x5f
  40f140:	test   BYTE PTR [esi+esi*1+0x69],ah
  40f144:	je     0x40f113
  40f146:	dec    ebp
  40f147:	xchg   esi,eax
  40f148:	int3   
  40f149:	sbb    al,0xa1
  40f14b:	xchg   ebx,eax
  40f14c:	jo     0x40f0f7
  40f14e:	lods   eax,DWORD PTR ds:[esi]
  40f14f:	and    esi,ecx
  40f151:	mov    dl,0xdb
  40f153:	sbb    dl,al
  40f155:	popf   
  40f156:	leave  
  40f157:	or     DWORD PTR [edx],ebp
  40f159:	adc    al,0x1b
  40f15b:	retf   
  40f15c:	xchg   edx,eax
  40f15d:	scas   eax,DWORD PTR es:[edi]
  40f15e:	mov    eax,ds:0x78d5d064
  40f163:	int3   
  40f164:	stc    
  40f165:	(bad)  
  40f166:	pop    ds
  40f167:	mov    ecx,DWORD PTR [esi-0x20]
  40f16a:	iret   
  40f16b:	sbb    BYTE PTR [ecx-0x53],ch
  40f16e:	cli    
  40f16f:	cmp    dh,BYTE PTR [edi]
  40f171:	cmp    edi,DWORD PTR [esi-0x7fadbc5e]
  40f177:	fs xchg edi,ecx
  40f17a:	adc    bh,BYTE PTR [ebp+0x79]
  40f17d:	or     eax,0xbc8b61bc
  40f182:	ins    DWORD PTR es:[edi],dx
  40f183:	cmc    
  40f184:	loop   0x40f110
  40f186:	xchg   ebp,eax
  40f187:	loope  0x40f1ff
  40f189:	icebp  
  40f18a:	inc    ebx
  40f18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f18c:	retf   0x18c5
  40f18f:	leave  
  40f190:	ins    DWORD PTR es:[edi],dx
  40f191:	imul   dh
  40f193:	jns    0x40f1b4
  40f195:	fsub   QWORD PTR [edx]
  40f197:	inc    eax
  40f198:	xor    DWORD PTR [edi+0x2b0af1a0],edi
  40f19e:	cmp    eax,0x53c11b2e
  40f1a3:	mov    ebx,0x2446c7
  40f1a8:	(bad)  
  40f1a9:	mov    dl,0x1f
  40f1ab:	cmp    DWORD PTR [edi],edx
  40f1ad:	inc    BYTE PTR [eax]
  40f1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b0:	xchg   ecx,eax
  40f1b1:	jmp    FWORD PTR [ebx-0x13]
  40f1b4:	nop
  40f1b5:	xchg   BYTE PTR [ecx],ah
  40f1b7:	popa   
  40f1b8:	imul   esp,DWORD PTR [eax+eiz*1-0x566b432a],0xffffffb7
  40f1c0:	imul   eax,DWORD PTR [esi+ebx*4-0x31],0xbe6f6f72
  40f1c8:	push   edi
  40f1c9:	jnp    0x40f1df
  40f1cb:	cmp    eax,DWORD PTR [edx+0x31]
  40f1ce:	sbb    DWORD PTR [edx-0x67002784],edx
  40f1d4:	jmp    0x40f1d7
  40f1d6:	ss (bad) 
  40f1d8:	pop    eax
  40f1d9:	fldenv [edi]
  40f1db:	jae    0x40f21b
  40f1dd:	cli    
  40f1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1df:	imul   ebp,DWORD PTR [edi-0x1809c06f],0x574e486d
  40f1e9:	xor    eax,0x5204f061
  40f1ee:	xchg   edx,eax
  40f1ef:	mov    ch,0x29
  40f1f1:	jg     0x40f184
  40f1f3:	inc    esp
  40f1f4:	add    ch,BYTE PTR [esi]
  40f1f6:	push   cs
  40f1f7:	test   al,0xcd
  40f1f9:	rcl    BYTE PTR [eax],0x56
  40f1fc:	icebp  
  40f1fd:	jae    0x40f1a7
  40f1ff:	bound  ecx,QWORD PTR [ecx-0x41]
  40f202:	and    DWORD PTR [ebx*2-0x44ced922],ebp
  40f209:	mov    edi,0x2412c620
  40f20e:	mov    cl,0xc8
  40f210:	rcr    ch,0x3a
  40f213:	jmp    0x615d:0xa21dcd05
  40f21a:	pop    ss
  40f21b:	push   esp
  40f21c:	and    BYTE PTR [ebx+ebx*8-0x39e4a4ac],0xc6
  40f224:	aaa    
  40f225:	scas   eax,DWORD PTR es:[edi]
  40f226:	jg     0x40f1e8
  40f228:	jb     0x40f291
  40f22a:	les    edi,FWORD PTR [ebx+0x25]
  40f22d:	xor    edx,ebp
  40f22f:	lods   al,BYTE PTR ds:[esi]
  40f230:	add    eax,0xe55e0d52
  40f235:	cmc    
  40f236:	or     esi,ebx
  40f238:	cwde   
  40f239:	cmovg  ebx,edx
  40f23c:	outs   dx,BYTE PTR ds:[esi]
  40f23d:	outs   dx,BYTE PTR ds:[esi]
  40f23e:	mov    eax,0xdddeab1e
  40f243:	adc    DWORD PTR [ecx],0xffffffeb
  40f246:	pop    ebp
  40f247:	je     0x40f254
  40f249:	mov    cs,WORD PTR [esi-0x1e]
  40f24c:	imul   edi,ebx,0xffffffd6
  40f24f:	push   ebp
  40f250:	scas   al,BYTE PTR es:[edi]
  40f251:	(bad)  
  40f252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f253:	mov    eax,ds:0xdc969c83
  40f258:	into   
  40f259:	ret    
  40f25a:	(bad)  
  40f25b:	ds ins BYTE PTR es:[edi],dx
  40f25d:	lock or eax,0xa710dd63
  40f263:	inc    edi
  40f264:	pop    esi
  40f265:	scas   al,BYTE PTR es:[edi]
  40f266:	addr16 icebp 
  40f268:	clc    
  40f269:	jnp    0x40f20b
  40f26b:	dec    edi
  40f26c:	mov    eax,0x5099dec8
  40f271:	into   
  40f272:	xchg   ecx,eax
  40f273:	dec    eax
  40f274:	jbe    0x40f2e1
  40f276:	stc    
  40f277:	mov    dl,0x81
  40f279:	mov    bh,0x4c
  40f27b:	xchg   edx,eax
  40f27c:	or     BYTE PTR [edi+edx*8+0x74a2f3e8],al
  40f283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f284:	jle    0x40f2f3
  40f286:	(bad)  
  40f287:	mov    ds:0xb9412000,al
  40f28c:	jns    0x40f233
  40f28e:	jb     0x40f2fb
  40f290:	inc    esp
  40f291:	pop    ebp
  40f292:	hlt    
  40f293:	dec    edx
  40f294:	sub    al,0xbe
  40f296:	and    eax,0x6b7de809
  40f29b:	ja     0x40f245
  40f29d:	sbb    ecx,edi
  40f29f:	mov    ds:0x8afdbb0b,eax
  40f2a4:	int    0x6d
  40f2a6:	into   
  40f2a7:	fidiv  WORD PTR [edx-0x36fb5eff]
  40f2ad:	jl     0x40f2f1
  40f2af:	test   esi,edx
  40f2b1:	inc    eax
  40f2b2:	pop    esi
  40f2b3:	jg     0x40f2d5
  40f2b5:	fwait
  40f2b6:	(bad)  
  40f2b7:	(bad)  
  40f2b8:	sub    ch,BYTE PTR [ebx+0x34b4c774]
  40f2be:	enter  0x8d5,0x42
  40f2c2:	mov    DWORD PTR [ebx+0x2b],esp
  40f2c5:	cmp    BYTE PTR [edi+0x58],dl
  40f2c8:	imul   ebp,DWORD PTR [eax+0x1130fabf],0x764b2b03
  40f2d2:	cmp    ebx,ecx
  40f2d4:	add    eax,0x3ec099f8
  40f2d9:	sub    BYTE PTR [edi],cl
  40f2db:	inc    esi
  40f2dc:	lock push ss
  40f2de:	pop    esi
  40f2df:	loopne 0x40f26b
  40f2e1:	les    esi,FWORD PTR [ebp-0x5e0dcdbe]
  40f2e7:	fwait
  40f2e8:	call   0xe8af:0x6442b3f7
  40f2ef:	jne    0x40f355
  40f2f1:	mov    ch,0x4c
  40f2f3:	mov    cl,0x13
  40f2f5:	ins    BYTE PTR es:[edi],dx
  40f2f6:	lahf   
  40f2f7:	cdq    
  40f2f8:	icebp  
  40f2f9:	or     ebp,DWORD PTR [eax-0x40a40f44]
  40f2ff:	(bad)  
  40f300:	repz push ebp
  40f302:	xchg   cl,bl
  40f304:	ret    0x2ba7
  40f307:	mov    ecx,0x892fb1b3
  40f30c:	bound  ebx,QWORD PTR [eax+0x34]
  40f30f:	sub    eax,0x36bca2b3
  40f314:	dec    ecx
  40f315:	mov    ecx,ebx
  40f317:	dec    ecx
  40f318:	xor    BYTE PTR [edi+0x38],ch
  40f31b:	push   ds
  40f31c:	cld    
  40f31d:	inc    ecx
  40f31e:	mov    eax,0x443c102f
  40f323:	push   edi
  40f324:	inc    esp
  40f325:	xchg   ebx,eax
  40f326:	jecxz  0x40f347
  40f328:	and    eax,0x16403bc9
  40f32d:	or     bl,bh
  40f32f:	fdivr  DWORD PTR [eax-0xecb673a]
  40f335:	in     eax,0xa7
  40f337:	out    0xd3,eax
  40f339:	xchg   esi,eax
  40f33a:	cdq    
  40f33b:	out    0x37,eax
  40f33d:	call   0xabece548
  40f342:	sbb    al,0x50
  40f344:	mov    ecx,ss
  40f346:	sub    bl,BYTE PTR ds:0x3eba5e63
  40f34c:	dec    edi
  40f34d:	xchg   edx,eax
  40f34e:	outs   dx,BYTE PTR ds:[esi]
  40f34f:	gs scas eax,DWORD PTR es:[edi]
  40f351:	popf   
  40f352:	inc    esp
  40f353:	adc    BYTE PTR [eax-0xb725024],0x70
  40f35a:	or     BYTE PTR [ebp-0x28e1a761],0x98
  40f361:	fidiv  DWORD PTR [ebx]
  40f363:	test   bl,dl
  40f365:	pusha  
  40f366:	mov    ch,dh
  40f368:	inc    esi
  40f369:	pusha  
  40f36a:	icebp  
  40f36b:	jecxz  0x40f351
  40f36d:	xchg   edx,eax
  40f36e:	cs ret 
  40f370:	out    dx,al
  40f371:	or     ebp,ebx
  40f373:	je     0x40f37a
  40f375:	cdq    
  40f376:	and    BYTE PTR [ebx],0x4c
  40f379:	mov    eax,ds:0x97327766
  40f37e:	cdq    
  40f37f:	pop    ebp
  40f380:	push   esp
  40f381:	inc    ebx
  40f382:	xor    DWORD PTR [edi+0xa],ecx
  40f385:	pop    ebx
  40f386:	call   0x7e237991
  40f38b:	pop    ebx
  40f38c:	loopne 0x40f3ff
  40f38e:	dec    edi
  40f38f:	push   ebp
  40f390:	(bad)  
  40f391:	jno    0x40f3d8
  40f393:	outs   dx,DWORD PTR ds:[esi]
  40f394:	add    dh,dh
  40f396:	inc    eax
  40f397:	jne    0x40f3d2
  40f399:	mov    ch,0x12
  40f39b:	(bad)  
  40f39c:	jbe    0x40f378
  40f39e:	gs jmp 0x399d34bd
  40f3a4:	jo     0x40f3ae
  40f3a6:	cli    
  40f3a7:	push   edi
  40f3a8:	adc    eax,ebp
  40f3aa:	and    dh,bh
  40f3ac:	sub    BYTE PTR [edx-0x53],ah
  40f3af:	stos   BYTE PTR es:[edi],al
  40f3b0:	lods   al,BYTE PTR ds:[esi]
  40f3b1:	rcl    DWORD PTR [edx+ebx*2+0x3dc0b2c3],1
  40f3b8:	arpl   WORD PTR [ebx+0x30dcce72],di
  40f3be:	push   edi
  40f3bf:	lods   eax,DWORD PTR ds:[esi]
  40f3c0:	mov    al,ds:0x76376a54
  40f3c5:	and    BYTE PTR [ebx],0x48
  40f3c8:	mov    BYTE PTR [edi],ah
  40f3ca:	outs   dx,DWORD PTR ds:[esi]
  40f3cb:	or     al,0x6a
  40f3cd:	xchg   edi,eax
  40f3ce:	(bad)  
  40f3d0:	pop    edi
  40f3d1:	xor    al,0x5d
  40f3d3:	icebp  
  40f3d4:	in     al,0x6d
  40f3d6:	push   ds
  40f3d7:	add    ebx,ebx
  40f3d9:	lahf   
  40f3da:	push   ss
  40f3db:	leave  
  40f3dc:	add    al,0xed
  40f3de:	shl    BYTE PTR [edx+0x2023c6e],cl
  40f3e4:	sbb    edi,DWORD PTR [edx-0x49]
  40f3e7:	pop    ecx
  40f3e8:	and    eax,0x3a9724f4
  40f3ed:	shl    al,cl
  40f3ef:	jmp    0x28ec913f
  40f3f4:	sub    eax,0xa8672901
  40f3f9:	nop
  40f3fa:	addr16 jb 0x40f3f3
  40f3fd:	or     DWORD PTR [ecx],esp
  40f3ff:	jmp    0x186b:0xe3799770
  40f406:	ins    BYTE PTR es:[edi],dx
  40f407:	jo     0x40f3b0
  40f409:	cmp    al,0x55
  40f40b:	(bad)  
  40f40c:	out    0x55,eax
  40f40e:	jmp    0x40f3a6
  40f410:	push   es
  40f411:	lods   al,BYTE PTR ds:[esi]
  40f412:	inc    esp
  40f413:	add    eax,0x29a5b153
  40f418:	in     al,dx
  40f419:	lds    edi,FWORD PTR [ecx+0x61b10e02]
  40f41f:	addr16 dec ebp
  40f421:	bound  ebx,QWORD PTR [ebx-0x873f739]
  40f427:	in     eax,dx
  40f428:	jbe    0x40f48f
  40f42a:	retf   0x7420
  40f42d:	shl    BYTE PTR ds:0x29091eb5,0x33
  40f434:	pop    edi
  40f435:	ins    BYTE PTR es:[edi],dx
  40f436:	xor    ecx,DWORD PTR [edx+0x4]
  40f439:	jg     0x40f449
  40f43b:	pop    esp
  40f43c:	pop    esi
  40f43d:	sub    DWORD PTR [esi],0xffffffb4
  40f440:	ss mov edi,0x7b689de9
  40f446:	mov    ebp,0xc9502e61
  40f44b:	xor    al,0xd1
  40f44d:	es test cl,ch
  40f450:	sbb    ch,BYTE PTR [edx-0x50]
  40f453:	push   ecx
  40f454:	xchg   esi,eax
  40f455:	out    dx,eax
  40f456:	sahf   
  40f457:	cmp    al,0xa8
  40f459:	xlat   BYTE PTR ds:[ebx]
  40f45a:	cmp    al,0xec
  40f45c:	repz test BYTE PTR [ebx-0x4ea8e8c2],0x8b
  40f464:	test   eax,0xe1a5c0b3
  40f469:	cdq    
  40f46a:	sahf   
  40f46b:	or     al,ch
  40f46d:	xor    bh,ah
  40f46f:	jns    0x40f494
  40f471:	inc    eax
  40f472:	and    al,0xef
  40f474:	push   eax
  40f475:	adc    edi,ecx
  40f477:	ret    
  40f478:	dec    ecx
  40f479:	loopne 0x40f49a
  40f47b:	mov    al,0x8f
  40f47d:	xchg   ecx,eax
  40f47e:	push   edi
  40f47f:	lock or al,cl
  40f482:	mov    cl,0xb5
  40f484:	iret   
  40f485:	push   ecx
  40f486:	sahf   
  40f487:	xor    BYTE PTR [edx+0x7d0241a9],cl
  40f48d:	daa    
  40f48e:	dec    ebp
  40f48f:	sbb    ebp,esp
  40f491:	lahf   
  40f492:	fsubr  st(4),st
  40f494:	jb     0x40f440
  40f496:	scas   al,BYTE PTR es:[edi]
  40f497:	leave  
  40f498:	mov    esp,0x17a305d3
  40f49d:	mov    DWORD PTR [eax+0x22],edi
  40f4a0:	push   cs
  40f4a1:	pop    ds
  40f4a2:	imul   edx,DWORD PTR [esp+eax*2],0xffffffa9
  40f4a6:	daa    
  40f4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a8:	jecxz  0x40f46e
  40f4aa:	mov    edi,esi
  40f4ac:	imul   esp,DWORD PTR [ecx+0x3a],0x2e
  40f4b0:	ins    BYTE PTR es:[edi],dx
  40f4b1:	sbb    eax,0x3b8a9d2
  40f4b6:	xor    eax,0xfce1dc4
  40f4bb:	dec    ebx
  40f4bc:	jmp    0x3bf9:0xb9a4b078
  40f4c3:	xlat   BYTE PTR ds:[ebx]
  40f4c4:	and    bl,BYTE PTR [ecx-0x24]
  40f4c7:	or     eax,0x22647f2
  40f4cc:	shr    edx,cl
  40f4ce:	fist   DWORD PTR [eax-0x3b2c38d]
  40f4d4:	add    BYTE PTR [edi],bh
  40f4d6:	fldcw  WORD PTR [ebp-0x2c]
  40f4d9:	dec    edx
  40f4da:	fild   DWORD PTR [ebp+0xa]
  40f4dd:	loop   0x40f4fc
  40f4df:	ins    DWORD PTR es:[edi],dx
  40f4e0:	sub    eax,0xa5dc37b6
  40f4e5:	pusha  
  40f4e6:	and    esi,DWORD PTR [esi]
  40f4e8:	pop    esi
  40f4e9:	mov    dh,0xb0
  40f4eb:	xor    al,0xda
  40f4ed:	push   ds
  40f4ee:	jecxz  0x40f563
  40f4f0:	or     al,0x1c
  40f4f2:	loop   0x40f4d5
  40f4f4:	xchg   ebx,eax
  40f4f5:	dec    esi
  40f4f6:	dec    ebx
  40f4f7:	cdq    
  40f4f8:	sti    
  40f4f9:	loope  0x40f56a
  40f4fb:	loopne 0x40f490
  40f4fd:	in     eax,dx
  40f4fe:	loop   0x40f4b1
  40f500:	shr    BYTE PTR [esi+0x3c33e93e],cl
  40f506:	cmp    eax,0x61d1b186
  40f50b:	retf   0x442d
  40f50e:	das    
  40f50f:	pop    ds
  40f510:	jle    0x40f4ac
  40f512:	or     ch,bh
  40f514:	sti    
  40f515:	daa    
  40f516:	ins    BYTE PTR es:[edi],dx
  40f517:	addr16 ret 0xcf32
  40f51b:	cdq    
  40f51c:	sub    BYTE PTR [bp+di+0x1e],ch
  40f520:	ja     0x40f4aa
  40f522:	xchg   esi,eax
  40f523:	fucomip st,st(0)
  40f525:	mov    edx,0x2a50c3f2
  40f52a:	(bad)  
  40f52b:	stc    
  40f52c:	daa    
  40f52d:	mov    cl,0x74
  40f52f:	sbb    BYTE PTR [eax-0x4ac4ba1c],bl
  40f535:	push   esi
  40f536:	ret    0xa3ae
  40f539:	into   
  40f53a:	xchg   ebx,eax
  40f53b:	inc    esi
  40f53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f53d:	retf   
  40f53e:	(bad)  
  40f53f:	out    dx,eax
  40f540:	mov    eax,DWORD PTR [ecx+ebp*1+0x7c]
  40f544:	ds pop ecx
  40f546:	(bad)  [ebp+0x0]
  40f549:	fisubr WORD PTR [ebx]
  40f54b:	and    BYTE PTR [esi],dl
  40f54d:	cwde   
  40f54e:	sub    bl,ch
  40f550:	stos   DWORD PTR es:[edi],eax
  40f551:	fwait
  40f552:	(bad)  
  40f553:	lock pop ds
  40f555:	adc    al,BYTE PTR [edx]
  40f557:	les    edi,FWORD PTR [ecx-0x4333a737]
  40f55d:	add    eax,0xb4ca83f0
  40f562:	jle    0x40f57f
  40f564:	rol    DWORD PTR [edi+0x4ce6ffb2],cl
  40f56a:	aam    0x4e
  40f56c:	adc    eax,0x8119ac3
  40f571:	addr16 push eax
  40f573:	adc    ah,BYTE PTR [ecx+0x2dbbefa8]
  40f579:	out    dx,eax
  40f57a:	dec    edx
  40f57b:	ficom  WORD PTR [esi+0x76]
  40f57e:	dec    ecx
  40f57f:	pop    ds
  40f580:	scas   al,BYTE PTR es:[edi]
  40f581:	cmp    BYTE PTR [ebp+0x10],bh
  40f584:	inc    eax
  40f585:	stos   DWORD PTR es:[edi],eax
  40f586:	addr16 xchg esp,eax
  40f588:	dec    ecx
  40f589:	hlt    
  40f58a:	xor    ah,BYTE PTR [edi]
  40f58c:	aas    
  40f58d:	cld    
  40f58e:	clc    
  40f58f:	data16 fcmovnu st,st(7)
  40f592:	adc    DWORD PTR [edi],edi
  40f594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f595:	mov    ?,edi
  40f597:	enter  0x7785,0x46
  40f59b:	xchg   esi,eax
  40f59c:	mov    ch,0xfc
  40f59e:	hlt    
  40f59f:	enter  0x51c7,0x73
  40f5a3:	shl    bl,0xb7
  40f5a6:	add    al,0xb9
  40f5a8:	mov    edx,DWORD PTR [ebp+0x6e813d36]
  40f5ae:	or     esi,ecx
  40f5b0:	adc    edi,0xffffffa3
  40f5b3:	shl    edi,0x2b
  40f5b6:	adc    ecx,DWORD PTR [ebp-0x1c]
  40f5b9:	mov    ch,0x50
  40f5bb:	sahf   
  40f5bc:	cmp    DWORD PTR [ebx],eax
  40f5be:	aaa    
  40f5bf:	mov    cr1,ebp
  40f5c2:	sub    bh,BYTE PTR [ebx-0x21]
  40f5c5:	mov    edx,0x1f9e9a74
  40f5ca:	les    ecx,FWORD PTR [ebx]
  40f5cc:	dec    edi
  40f5cd:	mov    ebp,0xdfa56e5f
  40f5d2:	gs popa 
  40f5d4:	push   esi
  40f5d5:	lods   al,BYTE PTR ds:[esi]
  40f5d6:	pop    esp
  40f5d7:	adc    al,0x86
  40f5d9:	std    
  40f5da:	xor    eax,0xf21842e3
  40f5df:	dec    ebx
  40f5e0:	mov    edx,0x72c3524f
  40f5e5:	xchg   esi,eax
  40f5e6:	xor    BYTE PTR [edi],bl
  40f5e8:	jl     0x40f63d
  40f5ea:	pop    edi
  40f5eb:	iret   
  40f5ec:	mov    ah,0x2c
  40f5ee:	lods   eax,DWORD PTR ds:[esi]
  40f5ef:	pop    esp
  40f5f0:	fwait
  40f5f1:	sub    DWORD PTR es:[edx-0x4f3a0448],ebx
  40f5f8:	loop   0x40f64e
  40f5fa:	je     0x40f5b7
  40f5fc:	fisttp QWORD PTR ds:0x239699d3
  40f602:	or     al,0xa0
  40f604:	add    al,dh
  40f606:	lods   eax,DWORD PTR ds:[esi]
  40f607:	loop   0x40f595
  40f609:	shl    BYTE PTR [edi-0x4b],0x7a
  40f60d:	add    eax,0x58a3e7fc
  40f612:	mov    ds:0xd5b0dd0d,al
  40f617:	jne    0x40f5ab
  40f619:	add    BYTE PTR ds:0xd74ebf1e,dh
  40f61f:	(bad)  
  40f620:	fwait
  40f621:	(bad)  
  40f622:	pop    edx
  40f623:	mov    al,0xba
  40f625:	cmp    al,0x7
  40f627:	cmp    eax,DWORD PTR [ebp+0xdab46f8]
  40f62d:	ins    BYTE PTR es:[edi],dx
  40f62e:	out    0x39,eax
  40f630:	inc    ebp
  40f631:	jle    0x40f66d
  40f633:	fsubr  QWORD PTR [ebx+ebp*1]
  40f636:	xchg   edx,eax
  40f637:	loopne 0x40f62c
  40f639:	add    BYTE PTR [eax+0x55],bh
  40f63c:	loop   0x40f6a7
  40f63e:	aam    0xf5
  40f640:	adc    ch,al
  40f642:	fcomp  QWORD PTR [eax-0x6d]
  40f645:	sbb    eax,0xb48a5af5
  40f64a:	pop    ss
  40f64b:	vpsubsb xmm2,xmm0,XMMWORD PTR [eax+ebx*1-0x34]
  40f651:	push   0xffffffec
  40f653:	xchg   BYTE PTR [edx],dh
  40f655:	jno    0x40f6b6
  40f657:	cwde   
  40f658:	jmp    0x6639:0x38266a44
  40f65f:	fld    TBYTE PTR [eax+0x7a]
  40f662:	leave  
  40f663:	jl     0x40f6b0
  40f665:	xchg   al,al
  40f667:	loope  0x40f627
  40f669:	mov    WORD PTR [ebp-0x1e],ss
  40f66c:	mov    cl,0xd1
  40f66e:	lock cdq 
  40f670:	adc    eax,0x66550da8
  40f675:	mov    ebx,0x77fdeaa8
  40f67a:	enter  0x2936,0x93
  40f67e:	pop    esp
  40f67f:	push   ebx
  40f680:	xchg   edi,eax
  40f681:	mov    DWORD PTR [ecx],eax
  40f683:	sahf   
  40f684:	icebp  
  40f685:	nop
  40f686:	retf   0x1765
  40f689:	call   0x1d9e6847
  40f68e:	mov    al,0xef
  40f690:	push   edx
  40f691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f692:	and    al,0xed
  40f694:	adc    eax,0xb97a3523
  40f699:	rcl    bh,cl
  40f69b:	sti    
  40f69c:	and    eax,0xb65afcdc
  40f6a1:	and    BYTE PTR [ecx+0x3d],bl
  40f6a4:	mov    eax,ds:0x93c563cc
  40f6a9:	mov    ds:0xc1259c63,eax
  40f6ae:	shl    DWORD PTR [edx],1
  40f6b0:	pop    es
  40f6b1:	sbb    eax,0x3f5de3af
  40f6b6:	dec    edx
  40f6b7:	jmp    0x6974ffba
  40f6bc:	sub    DWORD PTR [ebp+0x4711c0f7],esp
  40f6c2:	clc    
  40f6c3:	and    al,0xf8
  40f6c5:	jbe    0x40f68f
  40f6c7:	cmp    eax,0x6a9c92e
  40f6cc:	ja     0x40f6bb
  40f6ce:	jnp    0x40f66a
  40f6d0:	and    DWORD PTR [ebp-0x55d78931],ebp
  40f6d6:	iret   
  40f6d7:	or     esi,DWORD PTR [ebp-0x1c]
  40f6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6db:	into   
  40f6dc:	fdiv   DWORD PTR [edi+eax*1-0x45]
  40f6e0:	lock adc esi,ebx
  40f6e3:	lds    ebx,FWORD PTR [esi-0x1a]
  40f6e6:	xchg   ecx,eax
  40f6e7:	push   edx
  40f6e8:	iret   
  40f6e9:	mov    edx,0x608e9235
  40f6ee:	jp     0x40f716
  40f6f0:	sub    ah,BYTE PTR [eiz*2+0x1e0c7177]
  40f6f7:	and    ah,BYTE PTR [esp+esi*1+0x2114ea7a]
  40f6fe:	icebp  
  40f6ff:	pushf  
  40f700:	je     0x40f710
  40f702:	xchg   esi,eax
  40f703:	mov    cl,0x4d
  40f705:	fxch   st(1)
  40f707:	or     esp,ebp
  40f709:	add    dh,cl
  40f70b:	jb     0x40f788
  40f70d:	xchg   edx,eax
  40f70e:	mov    edi,0x4c4aae9
  40f713:	push   ecx
  40f714:	xor    bh,BYTE PTR [edi-0x18930072]
  40f71a:	test   DWORD PTR [ebx],ecx
  40f71c:	pop    esi
  40f71d:	cdq    
  40f71e:	jge    0x40f6f8
  40f720:	add    bh,BYTE PTR [edx+edx*4+0x6103013e]
  40f727:	or     dh,bl
  40f729:	xor    ebp,edx
  40f72b:	jo     0x40f6f4
  40f72d:	push   dx
  40f72f:	pop    ebp
  40f730:	jecxz  0x40f766
  40f732:	pop    ds
  40f733:	xchg   ecx,eax
  40f734:	ret    0x2685
  40f737:	in     eax,dx
  40f738:	sbb    DWORD PTR [edi+ecx*2+0x7e8e598f],ebx
  40f73f:	xor    bl,BYTE PTR gs:[edx+0x331bdc01]
  40f746:	hlt    
  40f747:	pop    ebp
  40f748:	push   esp
  40f749:	pop    ds
  40f74a:	mov    eax,DWORD PTR [eax-0x4a]
  40f74d:	jns    0x40f7b8
  40f74f:	and    ebx,0x3
  40f752:	loopne 0x40f6e6
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xdd18
  41000c:	add    DWORD PTR [esi+0x3f],eax
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xffffff86
  410017:	sbb    DWORD PTR [edi],edx
  410019:	clc    
  41001a:	pop    ds
  41001b:	inc    ebp
  41001c:	add    DWORD PTR [ebx+eax*1-0x52],esp
  410020:	push   ebx
  410021:	leave  
  410022:	dec    esp
  410023:	aam    0x7d
  410025:	mov    ds,WORD PTR [ebx+0x45]
  410028:	xor    al,0xfb
  41002a:	loope  0x41006c
  41002c:	test   eax,0xd812d67d
  410031:	cs pop ds
  410033:	out    0xb8,al
  410035:	or     DWORD PTR [ebx+esi*8+0x3a012b7f],edx
  41003c:	jne    0x4100af
  41003e:	mov    edx,DWORD PTR [edx-0x3d]
  410041:	pop    ebx
  410042:	inc    ecx
  410043:	(bad)  [eax]
  410045:	loop   0x410047
  410047:	cdq    
  410048:	pop    esi
  410049:	std    
  41004a:	enter  0x4797,0x18
  41004e:	pop    edx
  41004f:	test   dl,cl
  410051:	push   ds
  410052:	stos   DWORD PTR es:[edi],eax
  410053:	xor    ch,BYTE PTR [edi]
  410055:	cdq    
  410056:	and    dh,dh
  410058:	lods   eax,DWORD PTR ds:[esi]
  410059:	rcr    ecx,1
  41005b:	dec    esp
  41005c:	ins    BYTE PTR es:[edi],dx
  41005d:	out    dx,eax
  41005e:	outs   dx,BYTE PTR ds:[esi]
  41005f:	and    eax,0xc47f0285
  410064:	pextrw esp,(bad),0xc5
  410066:	pusha  
  410067:	sti    
  410068:	mul    DWORD PTR [esi+0x71]
  41006b:	popf   
  41006c:	popf   
  41006d:	push   ebx
  41006e:	shl    DWORD PTR [edi+edi*2-0x29],1
  410072:	bnd jnp 0x410069
  410075:	int3   
  410076:	sahf   
  410077:	xchg   edi,eax
  410078:	std    
  410079:	(bad)
  41007c:	cmp    BYTE PTR ds:0x65c3e841,0x34
  410083:	js     0x410065
  410085:	fbld   TBYTE PTR [ebx-0x43]
  410088:	pop    esi
  410089:	cmp    ah,BYTE PTR [ebp+0x667a9cc2]
  41008f:	fbld   TBYTE PTR [edx+0x4573c77a]
  410095:	dec    esp
  410096:	sbb    al,0xdb
  410098:	mov    bl,0x9e
  41009a:	sub    BYTE PTR [edx+ebx*4],ah
  41009d:	push   edx
  41009e:	add    dl,cl
  4100a0:	xchg   ebp,eax
  4100a1:	mov    ch,0x17
  4100a3:	(bad)  
  4100a4:	sub    eax,0x3e463c9c
  4100a9:	loopne 0x4100d5
  4100ab:	or     DWORD PTR ds:0x4473c24a,edx
  4100b1:	outs   dx,BYTE PTR ds:[esi]
  4100b2:	sar    BYTE PTR [edx-0x48b8d032],1
  4100b8:	adc    DWORD PTR [ebp-0x53],esp
  4100bb:	xchg   eax,edx
  4100bd:	xor    esp,DWORD PTR [eax+0x3a4af358]
  4100c3:	jge    0x4100c4
  4100c5:	cmp    al,0xa6
  4100c7:	add    edi,DWORD PTR [ebp+eiz*1+0x2a0864c7]
  4100ce:	jno    0x4100a1
  4100d0:	sbb    BYTE PTR [ecx+eiz*1-0x1b],0xf5
  4100d5:	leave  
  4100d6:	sbb    dh,bh
  4100d8:	nop
  4100d9:	popf   
  4100da:	mov    esp,0xdc42d326
  4100df:	mov    ah,0x63
  4100e1:	and    ebp,DWORD PTR [ecx+esi*2-0x4e]
  4100e5:	jl     0x410124
  4100e7:	ret    0x9516
  4100ea:	fimul  WORD PTR [edx-0x331a847a]
  4100f0:	mov    eax,gs:0x5dfed38f
  4100f6:	ins    BYTE PTR es:[edi],dx
  4100f7:	mov    ah,0x46
  4100f9:	xchg   ebp,edx
  4100fb:	xor    eax,0xd95ad469
  410100:	rcl    DWORD PTR [ebp-0x6f],1
  410103:	out    0x58,al
  410105:	bound  ecx,QWORD PTR [ecx-0x51]
  410108:	xchg   DWORD PTR [esi+0x4c],esp
  41010b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41010c:	sbb    BYTE PTR [eax],0xa1
  41010f:	mov    ecx,0xef3e43c2
  410114:	dec    esp
  410115:	pop    edx
  410116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410117:	jge    0x4100d7
  410119:	inc    ecx
  41011a:	shl    BYTE PTR [eax-0x1460918c],cl
  410120:	(bad)  
  410121:	shl    DWORD PTR ds:0x49d74461,1
  410127:	xor    al,0xee
  410129:	retf   
  41012a:	(bad)  
  41012b:	mov    ds:0xfcdbd855,al
  410130:	inc    esi
  410131:	xchg   ecx,eax
  410132:	pop    ecx
  410133:	into   
  410134:	xchg   edi,eax
  410135:	cld    
  410136:	sub    dh,BYTE PTR [eax-0x31]
  410139:	xor    eax,0xc0e41bca
  41013e:	call   0x27c5229d
  410143:	call   DWORD PTR [eax+0x68]
  410146:	sub    eax,edx
  410148:	sub    al,0x5e
  41014a:	ret    0xfa54
  41014d:	mov    eax,0x6000a5fc
  410152:	mov    WORD PTR [ebx],gs
  410154:	repz in al,0x9d
  410157:	or     BYTE PTR [ebx-0x58],bl
  41015a:	hlt    
  41015b:	pop    edi
  41015c:	repz pop ebx
  41015e:	push   cs
  41015f:	(bad)  
  410160:	in     eax,0x8c
  410162:	push   0xffffffc4
  410164:	push   edx
  410165:	pop    ecx
  410166:	int    0x3d
  410168:	rcl    ebx,cl
  41016a:	mov    eax,0x2f954ae8
  41016f:	leave  
  410170:	repnz pusha 
  410172:	xchg   edi,eax
  410173:	adc    al,0x10
  410175:	jo     0x41017b
  410177:	jno    0x410116
  410179:	cdq    
  41017a:	lahf   
  41017b:	sbb    eax,0x1cab3499
  410180:	mov    fs:0x50402da,al
  410186:	and    eax,0xcb3e2e20
  41018b:	lods   al,BYTE PTR ds:[esi]
  41018c:	or     esp,DWORD PTR [edi-0x21200ebb]
  410192:	push   cs
  410193:	inc    ebp
  410194:	pxor   mm2,mm4
  410197:	ret    
  410198:	inc    eax
  410199:	and    ebp,edi
  41019b:	shr    DWORD PTR ds:0x81726965,0xd1
  4101a2:	scas   eax,DWORD PTR es:[edi]
  4101a3:	push   es
  4101a4:	mov    ecx,0x44770eb7
  4101a9:	shr    BYTE PTR [eax+0x48],cl
  4101ac:	mov    al,0xd3
  4101ae:	xchg   DWORD PTR [esi-0x5b716a1c],edi
  4101b4:	add    al,0xec
  4101b6:	in     al,0xa1
  4101b8:	repnz adc ebp,DWORD PTR [ecx-0x8]
  4101bc:	sbb    eax,0x476b8fbd
  4101c1:	push   es
  4101c2:	stos   BYTE PTR es:[edi],al
  4101c3:	test   DWORD PTR [eax+0x29],ebp
  4101c6:	sar    BYTE PTR [edx-0x5b],1
  4101c9:	fdivrp st(6),st
  4101cb:	push   0x39b3da7
  4101d0:	xchg   esp,eax
  4101d1:	je     0x410243
  4101d3:	shl    DWORD PTR [ecx],1
  4101d5:	sub    dl,BYTE PTR [esi]
  4101d7:	enter  0x6b31,0xa
  4101db:	icebp  
  4101dc:	jbe    0x41016a
  4101de:	das    
  4101df:	out    0x24,al
  4101e1:	call   0xde4241b7
  4101e6:	mov    al,ds:0x14409393
  4101eb:	add    eax,0x1ef9d171
  4101f0:	lahf   
  4101f1:	cmp    BYTE PTR [eax+0x12],ah
  4101f4:	adc    dh,ah
  4101f6:	lds    ebx,FWORD PTR [ecx+edi*1-0x37094093]
  4101fd:	pop    edi
  4101fe:	test   eax,0x16e61307
  410203:	ret    0xea65
  410206:	sbb    edi,DWORD PTR [esi-0x67]
  410209:	es enter 0xb63c,0xe2
  41020e:	sbb    eax,0xff7b628a
  410213:	outs   dx,BYTE PTR ds:[esi]
  410214:	mov    DWORD PTR [ebp+0x379d296e],edx
  41021a:	repnz les ecx,FWORD PTR [edx]
  41021d:	scas   eax,DWORD PTR es:[edi]
  41021e:	adc    eax,0xb11b7dec
  410223:	call   0x6914:0xd40d3fbd
  41022a:	lods   eax,DWORD PTR ds:[esi]
  41022b:	scas   al,BYTE PTR es:[edi]
  41022c:	mov    bl,0x8e
  41022e:	push   ebp
  41022f:	mul    DWORD PTR [ebx-0x5]
  410232:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410234:	es fwait
  410236:	lock getsec 
  410239:	and    al,0x94
  41023b:	(bad)  
  41023c:	adc    eax,0x13238b12
  410241:	popf   
  410242:	cmp    al,0x25
  410244:	lods   eax,DWORD PTR ds:[esi]
  410245:	xor    dh,ch
  410247:	and    DWORD PTR [edx+0x62],edx
  41024a:	sar    BYTE PTR es:[ecx-0x49],1
  41024e:	sbb    eax,DWORD PTR [edx+ebp*1+0x2b]
  410252:	inc    esp
  410253:	ror    BYTE PTR [edx+ecx*2+0x4433b317],1
  41025a:	sar    esi,0xc2
  41025d:	fist   WORD PTR [ecx+0x38]
  410260:	xchg   ebx,eax
  410261:	mov    ch,0xec
  410263:	mov    WORD PTR [eax],?
  410265:	push   ecx
  410266:	stos   DWORD PTR es:[edi],eax
  410267:	mov    dl,0xb7
  410269:	clc    
  41026a:	imul   DWORD PTR fs:[edx+0x649ba979]
  410271:	popf   
  410272:	mov    esi,0xcd2af23b
  410277:	add    DWORD PTR [ebx],0x64
  41027a:	aaa    
  41027b:	mov    ebx,0x2b19f914
  410280:	call   0xd17f7211
  410285:	aad    0x61
  410287:	ret    
  410288:	adc    cl,cl
  41028a:	add    eax,0x199b7d2a
  41028f:	ds push 0xce11ef28
  410295:	inc    ebp
  410296:	inc    ebx
  410297:	mov    ah,0xfc
  410299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029a:	add    al,0x75
  41029c:	test   BYTE PTR [esi+edx*8+0x34],bl
  4102a0:	fcomip st,st(5)
  4102a2:	pop    ds
  4102a3:	out    0x5,al
  4102a5:	jns    0x410276
  4102a7:	jecxz  0x4102bb
  4102a9:	pop    ecx
  4102aa:	add    al,0xd6
  4102ac:	jle    0x4102ba
  4102ae:	mov    ch,0x6d
  4102b0:	mov    ebp,0x6812d1a1
  4102b5:	adc    edi,ebx
  4102b7:	rcr    bh,cl
  4102b9:	into   
  4102ba:	mov    ebx,0x1ff41631
  4102bf:	sub    esi,DWORD PTR [ecx-0x73]
  4102c2:	mov    eax,ds:0x2752f60
  4102c7:	retf   
  4102c8:	xchg   ecx,eax
  4102c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ca:	mov    WORD PTR [ecx],gs
  4102cc:	retf   
  4102cd:	or     DWORD PTR [ebx+0x4374a6d4],edi
  4102d3:	jecxz  0x41027a
  4102d5:	(bad)  
  4102d6:	cdq    
  4102d7:	add    bh,bh
  4102d9:	test   al,0x4a
  4102db:	daa    
  4102dc:	jno    0x41029c
  4102de:	adc    esp,edx
  4102e0:	scas   eax,DWORD PTR es:[edi]
  4102e1:	and    cl,BYTE PTR [eax-0x5e]
  4102e4:	imul   edx,ebx,0xdea06f99
  4102ea:	and    ebx,DWORD PTR [eax-0x71]
  4102ed:	in     eax,0x27
  4102ef:	jae    0x4102a2
  4102f1:	ss pop esi
  4102f3:	shl    BYTE PTR [ebx],1
  4102f5:	fnstcw WORD PTR [ecx+0x20]
  4102f8:	cmp    edi,eax
  4102fa:	push   esi
  4102fb:	sbb    ecx,DWORD PTR [eax+0x29e8c7be]
  410301:	fs push edi
  410303:	xor    DWORD PTR [esi+0x46],edi
  410306:	ret    
  410307:	jmp    0x4102bf
  410309:	outs   dx,BYTE PTR ds:[esi]
  41030a:	test   DWORD PTR [edi-0x74b128dd],esp
  410310:	ret    0xa6b7
  410313:	sbb    DWORD PTR [ebx-0x40f41429],ebx
  410319:	push   ebx
  41031a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41031b:	dec    eax
  41031d:	rcl    BYTE PTR [ecx+0x4f],1
  410320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410321:	data16 mov WORD PTR [esp+ecx*8],ds
  410325:	mov    dl,0x1d
  410327:	add    al,0x52
  410329:	and    bl,dl
  41032b:	fwait
  41032c:	jno    0x410326
  41032e:	adc    al,0xcc
  410330:	and    eax,0xa2783b8e
  410335:	aad    0x8d
  410337:	fadd   st(5),st
  410339:	or     eax,0x3f8a8f3
  41033e:	pop    edi
  41033f:	and    DWORD PTR [eax+0x69],edi
  410342:	lds    esi,FWORD PTR [ebx+0x3de5b1f2]
  410348:	inc    eax
  410349:	leave  
  41034a:	cmp    edx,esi
  41034c:	stc    
  41034d:	dec    edx
  41034e:	mov    eax,ds:0x19f5d847
  410353:	mov    ebx,0xdbf62082
  410358:	fdiv   QWORD PTR [edi+ebp*1+0x5ea978e4]
  41035f:	ins    DWORD PTR es:[edi],dx
  410360:	daa    
  410361:	ret    0xb8f2
  410364:	retf   0xa9f7
  410367:	cmp    BYTE PTR [ebp+edi*4-0x1f],dh
  41036b:	shl    DWORD PTR [ecx],0xdd
  41036e:	or     BYTE PTR [esi-0x2d],al
  410371:	mov    al,0xe
  410373:	or     al,0xb0
  410375:	imul   ebp,DWORD PTR [edi-0x1192d449],0x901ed35a
  41037f:	jmp    0x5e1f:0x7fe47103
  410386:	mov    bh,0x6d
  410388:	lock fmul QWORD PTR [edi+0x17]
  41038c:	call   eax
  41038e:	jb     0x4103c9
  410390:	stos   BYTE PTR es:[edi],al
  410391:	xor    DWORD PTR [edx+ebp*8-0x6e30062e],esp
  410398:	mov    edi,ebp
  41039a:	ficom  WORD PTR [edi]
  41039c:	stos   BYTE PTR es:[edi],al
  41039d:	ror    DWORD PTR [eax],0x42
  4103a0:	jle    0x4103a1
  4103a2:	and    BYTE PTR [esi-0x504bbc04],ch
  4103a8:	xor    al,0xb4
  4103aa:	pushf  
  4103ab:	dec    eax
  4103ac:	addr16 or ch,ch
  4103af:	xchg   BYTE PTR [ebx],al
  4103b1:	shl    DWORD PTR [edx],1
  4103b3:	adc    dh,0xa8
  4103b6:	pop    ds
  4103b7:	cdq    
  4103b8:	inc    ecx
  4103b9:	cmp    ebp,ebp
  4103bb:	inc    ebp
  4103bc:	sub    eax,0xefd143dc
  4103c1:	int    0xc3
  4103c3:	(bad)  
  4103c4:	in     eax,dx
  4103c5:	xor    eax,0x7402dd4
  4103ca:	imul   ebx,DWORD PTR [esi],0xffffff96
  4103cd:	and    DWORD PTR [ecx-0x71],edx
  4103d0:	inc    edx
  4103d1:	mov    bh,0x4
  4103d3:	ret    0x93e1
  4103d6:	fs leave 
  4103d8:	pusha  
  4103d9:	xlat   BYTE PTR ds:[ebx]
  4103da:	enter  0xd0a6,0x20
  4103de:	scas   al,BYTE PTR es:[edi]
  4103df:	ins    BYTE PTR es:[edi],dx
  4103e0:	cmp    BYTE PTR [ebx-0x22],bh
  4103e3:	jp     0x4103ff
  4103e5:	test   DWORD PTR [edx+eiz*4+0x21cf1823],edx
  4103ec:	push   ecx
  4103ed:	add    eax,0xd4bee3fd
  4103f2:	fst    DWORD PTR [edi]
  4103f4:	not    BYTE PTR [ebp+0x54eae3f1]
  4103fa:	jae    0x41042f
  4103fc:	scas   eax,DWORD PTR es:[edi]
  4103fd:	icebp  
  4103fe:	mov    ds,WORD PTR [edi-0x5d38c4f4]
  410404:	dec    edx
  410405:	xchg   esp,eax
  410406:	jl     0x410447
  410408:	jp     0x410475
  41040a:	jg     0x41044b
  41040c:	add    ebp,DWORD PTR [edi]
  41040e:	retf   
  41040f:	cmp    al,ch
  410411:	test   al,0xf0
  410413:	adc    dl,ch
  410415:	retf   
  410416:	lods   eax,DWORD PTR ds:[esi]
  410417:	mov    ebp,0xc0e7b693
  41041c:	add    BYTE PTR [edx-0x270dfd1d],cl
  410422:	push   edi
  410423:	cmovle ecx,DWORD PTR ds:[edi-0x76]
  410428:	mov    ?,WORD PTR [edi-0x7527163b]
  41042e:	popa   
  41042f:	ss dec edx
  410431:	xchg   edx,eax
  410432:	cmp    cl,ah
  410434:	ror    DWORD PTR [ebp+0x3129f30c],0x7
  41043b:	(bad)  
  41043d:	cmp    bl,BYTE PTR [ebp+eiz*4+0x61]
  410441:	dec    ebp
  410442:	sti    
  410443:	ror    ah,cl
  410445:	jge    0x4103e1
  410447:	xchg   DWORD PTR [ebx+edx*8-0x3d],edi
  41044b:	push   0x68
  41044d:	push   ecx
  41044e:	mov    ds:0x54dbdfb,al
  410453:	fwait
  410454:	call   0x6a68:0x3b2d118e
  41045b:	xor    ah,BYTE PTR [eax]
  41045d:	popa   
  41045e:	inc    ebx
  41045f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410460:	aam    0x27
  410462:	fbstp  TBYTE PTR [ebx+0x11]
  410465:	mov    edi,0x761666cc
  41046a:	fcomp  DWORD PTR [esi]
  41046c:	ja     0x410471
  41046e:	push   0xffffffe1
  410470:	mov    DWORD PTR [eax+0x6b],0xc5165c46
  410477:	cld    
  410478:	jbe    0x41043f
  41047a:	push   edi
  41047b:	sbb    eax,0x64131db
  410480:	xchg   esp,edi
  410482:	inc    esp
  410483:	(bad)  
  410484:	cmp    ah,dl
  410486:	xchg   edi,eax
  410487:	mov    al,ds:0xec27eb55
  41048c:	int    0xe9
  41048e:	sub    ch,0x2
  410491:	and    eax,0x8b9492f1
  410496:	add    dh,BYTE PTR [ecx+0x3e9a706b]
  41049c:	fcomp  DWORD PTR ds:0x89db805e
  4104a2:	jl     0x410466
  4104a4:	push   ebx
  4104a5:	jnp    0x410450
  4104a7:	dec    edi
  4104a8:	int    0x31
  4104aa:	pop    es
  4104ab:	(bad)  
  4104ac:	out    0x5a,al
  4104ae:	mov    ebp,0x719cc5fa
  4104b3:	mov    ecx,0x39759172
  4104b8:	mov    ch,0x26
  4104ba:	xchg   BYTE PTR [ecx-0x660d3253],ah
  4104c0:	and    dl,BYTE PTR [ebp-0xfecc40d]
  4104c6:	aas    
  4104c7:	sbb    edi,ecx
  4104c9:	xor    DWORD PTR [edi-0x12a6039d],edx
  4104cf:	dec    eax
  4104d0:	out    0xeb,al
  4104d2:	cld    
  4104d3:	mov    dh,0x39
  4104d5:	dec    esi
  4104d6:	pop    ebx
  4104d7:	cmp    al,0x11
  4104d9:	jns    0x410520
  4104db:	hlt    
  4104dc:	dec    esi
  4104dd:	jecxz  0x410497
  4104df:	jmp    0xc1a6b162
  4104e4:	mov    cl,BYTE PTR [edx]
  4104e6:	mov    esp,0x4968a7cd
  4104eb:	cld    
  4104ec:	sbb    BYTE PTR [ecx+0x15],al
  4104ef:	mov    edi,0xfcca1db0
  4104f4:	push   edi
  4104f5:	jge    0x41051f
  4104f7:	sub    DWORD PTR [eax+0x5c],esi
  4104fa:	mov    bh,0x43
  4104fc:	xor    ch,bl
  4104fe:	mov    ebp,0x519944c0
  410503:	call   0x618acb7e
  410508:	inc    ebx
  410509:	and    BYTE PTR [edi*8-0x59dd8169],bl
  410510:	jmp    0x8a14:0xa63915b7
  410517:	out    dx,al
  410518:	cmc    
  410519:	sbb    al,0x2f
  41051b:	adc    al,0x95
  41051d:	xchg   ebp,eax
  41051e:	cdq    
  41051f:	repnz std 
  410521:	popf   
  410522:	dec    ebp
  410523:	inc    ebp
  410524:	dec    ecx
  410525:	push   edx
  410526:	rcr    BYTE PTR [edi],0x89
  410529:	test   BYTE PTR [ebp-0xd],0x7f
  41052d:	sbb    BYTE PTR [ecx+0xe6e646d],ah
  410533:	cmp    bl,BYTE PTR [ecx]
  410535:	je     0x410556
  410537:	pop    esi
  410538:	inc    edx
  410539:	xchg   edi,eax
  41053a:	sub    bh,al
  41053c:	mov    eax,0x4acb4c1f
  410541:	repz out 0x6e,al
  410544:	ficom  WORD PTR [esi-0x3c4cfc9e]
  41054a:	fiadd  DWORD PTR [ebp+0x1bde3f4e]
  410550:	push   0x5b3dee0d
  410555:	rsqrtps xmm2,XMMWORD PTR [ebp-0x5]
  410559:	adc    al,0x9f
  41055b:	add    al,0x89
  41055d:	aad    0x7a
  41055f:	or     eax,DWORD PTR ds:0x6b6eb2fa
  410565:	(bad)  
  410566:	pop    ebx
  410567:	and    DWORD PTR [ecx+ebp*8],esp
  41056a:	loope  0x4105e2
  41056c:	cmp    eax,0x82b06726
  410571:	ja     0x4105c3
  410573:	scas   eax,DWORD PTR es:[edi]
  410574:	mov    ecx,0xc32b91a6
  410579:	scas   al,BYTE PTR es:[edi]
  41057a:	cmp    al,ch
  41057c:	jnp    0x4105c2
  41057e:	pop    es
  41057f:	sub    edi,DWORD PTR [esi+0x6fe630e6]
  410585:	or     eax,0x78cf1b5e
  41058a:	sbb    cl,dl
  41058c:	adc    al,0x3
  41058e:	xor    DWORD PTR [esi],ebp
  410590:	cmp    BYTE PTR [ebx-0x2d0097d2],0x8a
  410597:	mov    ebp,0x1bcaa321
  41059c:	cmp    al,0xc8
  41059e:	retf   0x8f77
  4105a1:	rcl    BYTE PTR ds:0x735eb08a,cl
  4105a7:	sbb    eax,0xb1b12e8
  4105ac:	into   
  4105ad:	shr    DWORD PTR [esi+eiz*2+0x6024587a],1
  4105b4:	push   ds
  4105b5:	test   DWORD PTR [edx-0x717524cd],0x5cf68d3
  4105bf:	sbb    al,0xb8
  4105c1:	add    eax,0xb33734d0
  4105c6:	mov    ah,0xff
  4105c8:	lahf   
  4105c9:	dec    ebx
  4105ca:	pop    ebx
  4105cb:	push   ebp
  4105cc:	mov    esi,edx
  4105ce:	xchg   edx,eax
  4105cf:	push   DWORD PTR [ecx]
  4105d1:	fmul   DWORD PTR [ecx+eiz*4+0x3]
  4105d5:	data16 mov WORD PTR [esi+eiz*2-0x2bfc00e9],?
  4105dd:	push   es
  4105de:	mov    BYTE PTR [edx+0x2e04a0f6],cl
  4105e4:	sub    cl,BYTE PTR [esi+eax*8+0x79114d33]
  4105eb:	push   edx
  4105ec:	push   ds
  4105ed:	fst    DWORD PTR [edi]
  4105ef:	dec    edi
  4105f0:	fldenv [ebx-0x3880d598]
  4105f6:	dec    eax
  4105f7:	mov    dl,0xa7
  4105f9:	(bad)
  4105fc:	add    DWORD PTR [edi+0x3ff73c21],0x6
  410603:	retf   0x3f00
  410606:	sbb    BYTE PTR [esi-0x2c8dea64],al
  41060c:	and    ch,dl
  41060e:	sub    ecx,DWORD PTR [esi-0x37]
  410611:	add    eax,0x13c1dbd4
  410616:	cmp    al,0xaa
  410618:	xchg   esp,eax
  410619:	test   BYTE PTR [eax*2-0x2e7b5281],dl
  410620:	mov    esp,0x621233ac
  410625:	lods   eax,DWORD PTR ds:[esi]
  410626:	cmp    eax,0x70d3ef6b
  41062b:	aas    
  41062c:	fwait
  41062d:	mov    bl,0xb
  41062f:	loop   0x4106af
  410631:	mov    BYTE PTR [edx+ebx*2+0x3342496e],bl
  410638:	addr16 cdq 
  41063a:	inc    ebp
  41063b:	mov    esi,0x880eedd2
  410640:	call   0xefa5:0x2022ddf8
  410647:	dec    edx
  410648:	add    eax,0xc37ecc86
  41064d:	lahf   
  41064e:	push   edx
  41064f:	imul   edi,DWORD PTR [ebx+0x58],0x773ac3f4
  410656:	ins    DWORD PTR es:[edi],dx
  410657:	mov    bh,0x2
  410659:	mov    ds:0x3282139a,al
  41065e:	bound  esi,QWORD PTR [edi]
  410660:	lods   eax,DWORD PTR ds:[esi]
  410661:	cmc    
  410662:	test   eax,0xe60ab4f5
  410667:	dec    edi
  410668:	pop    ss
  410669:	add    eax,0x9310f3f0
  41066e:	loopne 0x4106bf
  410670:	and    ebp,DWORD PTR [ecx+0x1f]
  410673:	push   cs
  410674:	xchg   cl,ch
  410676:	pusha  
  410677:	and    edi,DWORD PTR [edx]
  410679:	cmp    al,0x45
  41067b:	xchg   edx,eax
  41067c:	cs xchg ebx,eax
  41067e:	fs jle 0x41067c
  410681:	jp     0x41068f
  410683:	fnstcw WORD PTR [edi-0x3d1e21ba]
  410689:	int    0x3e
  41068b:	out    dx,eax
  41068c:	pusha  
  41068d:	sub    ch,BYTE PTR [edx+0x1d]
  410690:	jmp    0x87914f11
  410695:	dec    ebp
  410696:	push   edx
  410697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410698:	mov    bh,0x99
  41069a:	dec    ecx
  41069b:	push   ds
  41069c:	rcr    edx,0x19
  41069f:	ret    0xbe2a
  4106a2:	(bad)  
  4106a3:	js     0x410697
  4106a5:	sub    bl,bh
  4106a7:	scas   al,BYTE PTR es:[edi]
  4106a8:	jmp    0x8960c1a5
  4106ad:	xor    eax,0x611e9975
  4106b2:	lods   al,BYTE PTR ds:[esi]
  4106b3:	mov    ebx,0xf3333747
  4106b8:	sbb    BYTE PTR [edx],bl
  4106ba:	xchg   esi,eax
  4106bb:	test   BYTE PTR [esi],cl
  4106bd:	xor    eax,0x1390c2b2
  4106c2:	shl    DWORD PTR [ecx+0x30],1
  4106c5:	cmp    al,BYTE PTR [edx-0x76ce0b1b]
  4106cb:	mov    ch,0x2f
  4106cd:	cmp    DWORD PTR [edi],ecx
  4106cf:	repz int3 
  4106d1:	sti    
  4106d2:	dec    esp
  4106d3:	shr    BYTE PTR [edi],0x62
  4106d6:	sbb    esp,DWORD PTR [ecx-0x6c]
  4106d9:	mov    dl,0xad
  4106db:	stc    
  4106dc:	cld    
  4106dd:	or     eax,0x74c003bc
  4106e2:	imul   eax,DWORD PTR [eax+0x6f],0x59e2055e
  4106e9:	sar    DWORD PTR ds:0xf70a8c34,0x19
  4106f0:	shr    BYTE PTR [eax+ebx*2-0x3d],0x7d
  4106f5:	push   0x74a62a78
  4106fa:	fisttp DWORD PTR [ebp+0x52]
  4106fd:	out    dx,eax
  4106fe:	stos   BYTE PTR es:[edi],al
  4106ff:	into   
  410700:	mov    esi,0xd7fbcc40
  410705:	cmp    DWORD PTR [esi-0x63],esp
  410708:	in     eax,0x5d
  41070a:	jmp    0x45876b13
  41070f:	cs xchg edx,eax
  410711:	xchg   edi,eax
  410712:	mov    al,0x67
  410714:	or     eax,0xe5dcb7f6
  410719:	aaa    
  41071a:	loop   0x410733
  41071c:	jmp    0x41070f
  41071e:	push   ds
  41071f:	mov    ds:0xed6ef6c4,eax
  410724:	push   edx
  410725:	pop    ds
  410726:	cmp    al,cl
  410728:	mov    dh,0x1f
  41072a:	or     eax,0xa049871e
  41072f:	sub    BYTE PTR [esi-0x54],bh
  410732:	dec    eax
  410733:	scas   eax,DWORD PTR es:[edi]
  410734:	xor    edx,edi
  410736:	out    dx,al
  410737:	or     ch,BYTE PTR cs:[edx-0xc025c07]
  41073e:	popa   
  41073f:	inc    edi
  410740:	ds pop esp
  410742:	xchg   esi,eax
  410743:	xchg   edx,eax
  410744:	jmp    0x4106df
  410746:	jns    0x41079d
  410748:	xor    eax,0x116155a5
  41074d:	sub    edx,DWORD PTR [edx+0x73afe346]
  410753:	scas   al,BYTE PTR es:[edi]
  410754:	dec    esi
  410755:	jle    0x4107cd
  410757:	or     ch,BYTE PTR [ebp+0x72]
  41075a:	nop
  41075b:	pushf  
  41075c:	cmp    cl,ah
  41075e:	sub    eax,DWORD PTR [esp+eax*4]
  410761:	dec    edi
  410762:	cli    
  410763:	adc    DWORD PTR [ecx+edi*4],esp
  410766:	mov    fs,WORD PTR [eax]
  410768:	and    eax,0xe40a4d00
  41076d:	sahf   
  41076e:	ror    BYTE PTR [eax],1
  410770:	xor    BYTE PTR [edi-0x4f],bh
  410773:	pop    ebx
  410774:	push   esi
  410775:	jg     0x41073f
  410777:	pop    ebp
  410778:	or     bl,BYTE PTR [esi+0x52]
  41077b:	sbb    esi,DWORD PTR [eax+0x2fb703e2]
  410781:	adc    ebx,ebx
  410783:	add    BYTE PTR [edx-0x33],ah
  410786:	lahf   
  410787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410788:	scas   al,BYTE PTR es:[edi]
  410789:	mov    cl,0x82
  41078b:	mov    ?,esi
  41078d:	jne    0x410777
  41078f:	mov    edx,0xa97875d1
  410794:	loopne 0x41078a
  410796:	or     esi,esi
  410798:	das    
  410799:	enter  0xb435,0xc9
  41079d:	cwde   
  41079e:	push   edi
  41079f:	fild   WORD PTR [ebp+0xdc77435]
  4107a5:	add    eax,0xc85c72f
  4107aa:	add    BYTE PTR gs:[ecx],dh
  4107ad:	jmp    FWORD PTR [edx+0x0]
  4107b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b1:	fwait
  4107b2:	xchg   BYTE PTR [ecx],bl
  4107b4:	test   eax,0xb3df025a
  4107b9:	out    0xc2,eax
  4107bb:	jmp    0x9543:0x404e7921
  4107c2:	in     al,0xe6
  4107c4:	retf   0xfdf1
  4107c7:	int    0xcf
  4107c9:	and    al,0x88
  4107cb:	in     eax,dx
  4107cc:	and    edi,0x3c
  4107cf:	push   es
  4107d0:	cld    
  4107d1:	and    bl,BYTE PTR [esi-0x17]
  4107d4:	out    0x8a,eax
  4107d6:	(bad)  
  4107d7:	xchg   esi,eax
  4107d8:	daa    
  4107d9:	shr    BYTE PTR [ebp-0x5bf3e0dd],1
  4107df:	rol    BYTE PTR [ebx-0x17],1
  4107e2:	xor    eax,DWORD PTR [ebx]
  4107e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e5:	aaa    
  4107e6:	popa   
  4107e7:	xchg   esp,eax
  4107e8:	push   0x1b
  4107ea:	leave  
  4107eb:	in     al,dx
  4107ec:	imul   BYTE PTR [eax+0x2944b7e8]
  4107f2:	clc    
  4107f3:	sbb    eax,0xd59a8559
  4107f8:	ins    DWORD PTR es:[edi],dx
  4107f9:	mov    ebx,0xe2977cdc
  4107fe:	retf   
  4107ff:	outs   dx,BYTE PTR ds:[esi]
  410800:	sbb    eax,0xb15abb8b
  410805:	jbe    0x410836
  410807:	fist   WORD PTR [edi+0x24]
  41080a:	lods   eax,DWORD PTR ds:[esi]
  41080b:	leave  
  41080c:	sbb    dh,0xfe
  41080f:	cmp    bl,BYTE PTR ds:0x5152967c
  410815:	jmp    0xf7338b44
  41081a:	sahf   
  41081b:	std    
  41081c:	into   
  41081d:	jmp    0x9fd8:0x20de1e7e
  410824:	pop    esi
  410825:	xchg   edi,eax
  410826:	pusha  
  410827:	xlat   BYTE PTR ds:[ebx]
  410828:	jb     0x410834
  41082a:	int3   
  41082b:	pusha  
  41082c:	jl     0x41087a
  41082e:	cmp    al,0x66
  410830:	gs sub eax,0x6336e251
  410836:	push   ss
  410837:	pushf  
  410838:	jo     0x4107fe
  41083a:	cmp    DWORD PTR [esp+eax*2+0x13180f85],ebx
  410841:	mov    edx,DWORD PTR [ecx+ebx*1+0x68]
  410845:	aaa    
  410846:	push   ebx
  410847:	(bad)  
  410848:	sub    DWORD PTR [esi-0x58e7c0b3],ebx
  41084e:	cmp    DWORD PTR [edx-0x66],edi
  410851:	out    0xa4,al
  410853:	fs neg al
  410856:	fs sahf 
  410858:	in     al,0x5e
  41085a:	inc    edi
  41085b:	pop    ds
  41085c:	sub    esi,DWORD PTR [edx+ebp*4+0x5b50c326]
  410863:	adc    DWORD PTR [ecx],0x56
  410866:	inc    ebp
  410867:	hlt    
  410868:	loopne 0x4108e4
  41086a:	mov    ebx,0xc8ee7711
  41086f:	ds test eax,0xa0830a32
  410875:	cmovno ecx,DWORD PTR [eax]
  410878:	shl    DWORD PTR [esi-0x64],0x66
  41087c:	sub    al,0x92
  41087e:	ja     0x4108ac
  410880:	lds    eax,FWORD PTR ds:0xa688e934
  410886:	neg    BYTE PTR [esi+0x275e9a5f]
  41088c:	mov    dl,0x3d
  41088e:	jle    0x41081f
  410890:	push   edx
  410891:	xor    al,0x69
  410893:	lea    esp,[eax]
  410895:	cmp    al,0xf5
  410897:	int3   
  410898:	mov    esi,0x475267d
  41089d:	inc    ecx
  41089e:	dec    ebx
  41089f:	add    eax,0xd055e61e
  4108a4:	sti    
  4108a5:	xlat   BYTE PTR ds:[ebx]
  4108a6:	aam    0xe5
  4108a8:	(bad)  
  4108a9:	dec    ebp
  4108aa:	inc    ebp
  4108ab:	pop    ecx
  4108ac:	enter  0x2e2e,0xf9
  4108b0:	(bad)  
  4108b1:	mov    ebx,0x6881f96
  4108b6:	mov    al,ds:0x2f090767
  4108bb:	(bad)  
  4108bd:	out    dx,eax
  4108be:	inc    edi
  4108bf:	sbb    cl,BYTE PTR [eax]
  4108c1:	clc    
  4108c2:	mov    ch,0x77
  4108c4:	lds    eax,FWORD PTR [ecx-0x18]
  4108c7:	fs pop ecx
  4108c9:	jb     0x410910
  4108cb:	sub    eax,0x578b9d44
  4108d0:	xchg   BYTE PTR [edx-0x360ef14d],ah
  4108d6:	mov    al,0xe
  4108d8:	mov    eax,0xb3b2ee92
  4108dd:	in     al,0x15
  4108df:	mov    cl,0xee
  4108e1:	jge    0x4108a1
  4108e3:	and    eax,0x1ee56f12
  4108e8:	lds    ebx,FWORD PTR [edx]
  4108ea:	lods   eax,DWORD PTR ds:[esi]
  4108eb:	xlat   BYTE PTR ds:[ebx]
  4108ec:	add    edx,DWORD PTR [esi]
  4108ee:	daa    
  4108ef:	inc    edx
  4108f0:	xchg   DWORD PTR [eax+0x55],ebp
  4108f3:	fbld   TBYTE PTR [ecx+0x2840314d]
  4108f9:	pop    ds
  4108fa:	adc    al,0xe9
  4108fc:	(bad)  
  4108fd:	mov    esp,0xc2f6231
  410902:	shl    edx,1
  410904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410905:	pusha  
  410906:	in     eax,dx
  410907:	cdq    
  410908:	out    dx,eax
  410909:	push   ds
  41090a:	jg     0x41090a
  41090c:	jle    0x41089e
  41090e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41090f:	mov    eax,0x1a715af2
  410914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410915:	sbb    eax,DWORD PTR [ecx+0x6a347a1]
  41091b:	sbb    esp,DWORD PTR ds:0xe35b86d0
  410921:	inc    esp
  410922:	int    0xcd
  410924:	jmp    0x1cf4:0x554dafcb
  41092b:	imul   eax,DWORD PTR [ecx+ecx*2],0x1c
  41092f:	call   0xa45d2a62
  410934:	add    al,0x9a
  410936:	xchg   ecx,eax
  410937:	dec    edx
  410938:	lds    ecx,FWORD PTR [edi]
  41093a:	ret    
  41093b:	in     eax,0x4
  41093d:	test   eax,0x6eb52444
  410942:	inc    ebx
  410943:	rcr    ebp,0xfe
  410946:	scas   eax,DWORD PTR es:[edi]
  410947:	and    eax,0x4f921153
  41094c:	xor    eax,0xe3a7590
  410951:	(bad)  
  410952:	mov    cl,0xb5
  410954:	sar    DWORD PTR [edx],0xac
  410957:	js     0x41090c
  410959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41095a:	sub    edi,eax
  41095c:	stos   DWORD PTR es:[edi],eax
  41095d:	in     eax,dx
  41095e:	dec    BYTE PTR [ebp+0xc]
  410961:	add    edx,DWORD PTR [edx-0x71]
  410964:	shl    DWORD PTR [ecx-0x2c2ff012],0x24
  41096b:	mov    bl,BYTE PTR [ebp+eax*8+0x365ae416]
  410972:	jb     0x410924
  410974:	sub    al,0x7
  410976:	in     al,dx
  410977:	mov    al,0xec
  410979:	adc    al,dh
  41097b:	in     eax,dx
  41097c:	into   
  41097d:	popa   
  41097e:	push   ss
  41097f:	or     BYTE PTR [ebp+0x30],0xc7
  410983:	(bad)  
  410984:	sar    BYTE PTR [esi+0x70],cl
  410987:	popf   
  410988:	int3   
  410989:	dec    edi
  41098a:	sbb    cl,BYTE PTR [ecx-0x309fa021]
  410990:	repz icebp 
  410992:	pusha  
  410993:	ds pop ebx
  410995:	loope  0x4109af
  410997:	cmp    ebx,eax
  410999:	je     0x410994
  41099b:	fimul  DWORD PTR [edi]
  41099d:	mov    ?,edi
  41099f:	jmp    0x2f07aeb5
  4109a4:	or     BYTE PTR [edx-0x1b3c2cd6],ch
  4109aa:	push   ebx
  4109ab:	(bad)  
  4109ac:	fist   DWORD PTR [edx+0x5f879f4e]
  4109b2:	xchg   ebp,eax
  4109b3:	call   0xcc7c:0x43682e91
  4109ba:	pop    ecx
  4109bb:	dec    esp
  4109bc:	repnz scas eax,DWORD PTR es:[edi]
  4109be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109bf:	call   0x371c:0x4addf92b
  4109c6:	imul   ebp,DWORD PTR [esi+0x5c],0xffffffd1
  4109ca:	ret    
  4109cb:	pop    ebx
  4109cc:	jle    0x410956
  4109ce:	push   es
  4109cf:	mov    al,ds:0x55f55e54
  4109d4:	out    dx,al
  4109d5:	sub    BYTE PTR [edi],bh
  4109d7:	rcr    DWORD PTR [edi],1
  4109d9:	adc    DWORD PTR [edi+0x17ffda6c],ecx
  4109df:	cmp    ecx,ebx
  4109e1:	push   ebp
  4109e2:	push   eax
  4109e3:	cld    
  4109e4:	jmp    0x410a15
  4109e6:	jg     0x4109ab
  4109e8:	cdq    
  4109e9:	or     edi,DWORD PTR [edx]
  4109eb:	test   BYTE PTR [esi+0x48],dh
  4109ee:	aas    
  4109ef:	shl    DWORD PTR [edi+edi*8],cl
  4109f2:	pop    ebp
  4109f3:	mov    cl,BYTE PTR [ebx+0xbd9a143]
  4109f9:	test   al,0x80
  4109fb:	(bad)  
  4109fc:	mov    ebx,0x47dbd2b7
  410a01:	adc    al,0xb4
  410a03:	out    0x8a,al
  410a05:	(bad)  
  410a07:	mov    DWORD PTR [ebp-0x5726ea65],eax
  410a0d:	in     al,dx
  410a0e:	(bad)  
  410a0f:	xor    dh,BYTE PTR [ecx-0x5ece720f]
  410a15:	mov    ds:0x88ca2e1a,eax
  410a1a:	pushf  
  410a1b:	add    bl,BYTE PTR [edi+0x7030ddc4]
  410a21:	pop    ss
  410a22:	clc    
  410a23:	fcmovb st,st(2)
  410a25:	ret    
  410a26:	addr16 jne 0x4109cc
  410a29:	sbb    edx,DWORD PTR [ebp-0x100b8d53]
  410a2f:	sti    
  410a30:	add    al,0x7
  410a32:	pop    esp
  410a33:	(bad)  
  410a35:	aam    0x7a
  410a37:	dec    ecx
  410a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a39:	adc    eax,0x6c4fbf0f
  410a3e:	or     al,0x3f
  410a40:	pop    ebp
  410a41:	cmp    al,0xff
  410a43:	cli    
  410a44:	push   0x81950c67
  410a49:	shl    BYTE PTR [esi],cl
  410a4b:	int    0x65
  410a4d:	(bad)  
  410a4e:	in     al,0xcd
  410a50:	sbb    BYTE PTR [edx],dh
  410a52:	pop    eax
  410a53:	fist   DWORD PTR [edi+0x6be5c05c]
  410a59:	pop    esp
  410a5a:	xor    eax,DWORD PTR ds:0xce94644c
  410a60:	ror    dh,cl
  410a62:	inc    ebx
  410a63:	cmp    eax,0x309229cc
  410a68:	(bad)  
  410a69:	stos   DWORD PTR es:[edi],eax
  410a6a:	cwde   
  410a6b:	inc    edi
  410a6c:	shl    esi,0xcb
  410a6f:	push   esi
  410a70:	add    BYTE PTR [ebp-0xca34e28],dl
  410a76:	add    DWORD PTR [ebp-0x13],0x61
  410a7a:	mov    DWORD PTR [edx-0x4133912c],ebx
  410a80:	or     BYTE PTR [ebx+0x51],dh
  410a83:	cmp    eax,0xa7cfbb5e
  410a88:	mov    edx,0x333d1979
  410a8d:	cmp    al,0xbe
  410a8f:	shr    DWORD PTR [ebx],1
  410a91:	push   0x6f
  410a93:	jae    0x410a9f
  410a95:	imul   edi,ebx,0x7be65182
  410a9b:	rcr    DWORD PTR [edi-0x38a2b79f],0x5a
  410aa2:	sahf   
  410aa3:	dec    esi
  410aa4:	ror    BYTE PTR [edi+0x50d27e8],cl
  410aaa:	leave  
  410aab:	sub    BYTE PTR [edx],bl
  410aad:	jmp    0x410b14
  410aaf:	scas   al,BYTE PTR es:[edi]
  410ab0:	fisttp WORD PTR [edi-0x18]
  410ab3:	push   ebx
  410ab4:	add    eax,0x164f9bb7
  410ab9:	jle    0x410a83
  410abb:	aam    0xf8
  410abd:	arpl   dx,dx
  410abf:	stc    
  410ac0:	sub    eax,0x804b1341
  410ac5:	ins    DWORD PTR es:[edi],dx
  410ac6:	scas   al,BYTE PTR es:[edi]
  410ac7:	adc    BYTE PTR [edi+esi*4-0x256343fc],ah
  410ace:	das    
  410acf:	cld    
  410ad0:	loop   0x410a6a
  410ad2:	sbb    DWORD PTR [ecx+0x27c13e52],0xffffffaf
  410ad9:	sub    cl,BYTE PTR [edx+0xa]
  410adc:	add    eax,0xb581205f
  410ae1:	add    dh,BYTE PTR [edi+eax*1-0x1e]
  410ae5:	push   esp
  410ae6:	rol    DWORD PTR [edi-0x5a],0xf8
  410aea:	mov    dh,0xa2
  410aec:	adc    eax,0x5f936d1
  410af1:	sbb    DWORD PTR [edx],esp
  410af3:	mov    ebx,0x7d179676
  410af8:	xor    DWORD PTR [edx+0x3aa12aec],0xffffffa7
  410aff:	cmc    
  410b00:	popa   
  410b01:	in     eax,0xa2
  410b03:	cmp    BYTE PTR [edi-0x66],ah
  410b06:	mov    edx,0xacd3b8a0
  410b0b:	sub    edx,DWORD PTR [edx-0x3766dfc]
  410b11:	sub    al,0x72
  410b13:	mov    esi,0x387793ea
  410b18:	mov    al,0xe2
  410b1a:	loopne 0x410ad4
  410b1c:	imul   ecx,DWORD PTR [edx+edx*4],0xf514ffd0
  410b23:	sub    al,0x33
  410b25:	adc    eax,0xa0d6172c
  410b2a:	jmp    0x8dff:0xa4ba733e
  410b31:	jnp    0x410b1f
  410b33:	daa    
  410b34:	out    0x89,al
  410b36:	jb     0x410b79
  410b38:	in     al,0xc0
  410b3a:	jmp    0x5ece7c34
  410b3f:	std    
  410b40:	adc    DWORD PTR [esi+esi*1-0x2f],edx
  410b44:	xchg   ecx,eax
  410b45:	pusha  
  410b46:	xor    edx,esi
  410b48:	test   al,0x1c
  410b4a:	das    
  410b4b:	pcmpgtd mm5,QWORD PTR [ebx]
  410b4e:	jle    0x410b78
  410b50:	or     BYTE PTR [ebp+0x75d676f],dl
  410b56:	cli    
  410b57:	pop    es
  410b58:	enter  0x8295,0x51
  410b5c:	lahf   
  410b5d:	cmp    ecx,edi
  410b5f:	mov    eax,0x88b2de8d
  410b64:	push   esi
  410b65:	jns    0x410b62
  410b67:	inc    esi
  410b68:	rol    BYTE PTR [esi+0x17ebbf44],0x89
  410b6f:	jb     0x410be8
  410b71:	dec    edi
  410b72:	shr    BYTE PTR [eax],cl
  410b74:	fs or  eax,0x269ecede
  410b7a:	jge    0x410bb9
  410b7c:	das    
  410b7d:	xor    edx,esi
  410b7f:	int    0x3a
  410b81:	mov    esi,0xa3e426d3
  410b86:	jmp    0xcb03eb6e
  410b8b:	test   BYTE PTR [eax+0x422bced8],dh
  410b91:	add    BYTE PTR [edi+esi*2+0x5065d990],0x61
  410b99:	jmp    0x15c0:0x3988591d
  410ba0:	push   edx
  410ba1:	mov    edi,0x42989356
  410ba6:	sbb    BYTE PTR [edi-0x66],dh
  410ba9:	or     eax,0xddf7b67c
  410bae:	or     eax,0x1467bc84
  410bb3:	sub    al,0xa1
  410bb5:	icebp  
  410bb6:	stos   DWORD PTR es:[edi],eax
  410bb7:	mov    eax,ds:0xac0e2d2e
  410bbc:	jae    0x410bb3
  410bbe:	xor    dh,BYTE PTR [edi-0x7b8e16c3]
  410bc4:	mov    ebx,0x8fb19727
  410bc9:	in     al,0x41
  410bcb:	xor    dl,BYTE PTR [ebx+0xa]
  410bce:	loop   0x410bd4
  410bd0:	pop    ebx
  410bd1:	jg     0x410b9a
  410bd3:	test   DWORD PTR [ecx],ebx
  410bd5:	dec    ebx
  410bd6:	lods   al,BYTE PTR ds:[esi]
  410bd7:	mov    ebp,0xce8fb2ee
  410bdc:	into   
  410bdd:	fnsave [ecx-0x48]
  410be0:	or     DWORD PTR [ecx+0x37a59f5a],esp
  410be6:	mov    fs,WORD PTR [eax+0x5ffbfddf]
  410bec:	test   BYTE PTR [esp+edx*4+0x1f],bh
  410bf0:	ja     0x410b7c
  410bf2:	mov    ebx,0xbd0ccc69
  410bf7:	add    ebp,ecx
  410bf9:	inc    ebp
  410bfb:	popa   
  410bfc:	out    dx,al
  410bfd:	cld    
  410bfe:	inc    esi
  410bff:	push   esi
  410c00:	lock aaa 
  410c02:	fidivr WORD PTR [ebx-0x3c]
  410c05:	adc    DWORD PTR [esi-0x73],ebp
  410c08:	mov    ebx,0xbd68268a
  410c0d:	gs xchg ecx,eax
  410c0f:	fstp   QWORD PTR [esi-0x1ddf9d38]
  410c15:	addr16 (bad) 
  410c17:	jae    0x410c09
  410c19:	adc    ch,BYTE PTR [eax]
  410c1b:	pop    ebx
  410c1c:	mov    eax,ds:0xc9b1521a
  410c21:	push   edi
  410c22:	(bad)  
  410c23:	pop    esi
  410c24:	arpl   WORD PTR [eax-0x44ac1079],dx
  410c2a:	stos   BYTE PTR es:[edi],al
  410c2b:	sub    DWORD PTR [ebx+0x2c],0xffffffbf
  410c2f:	add    DWORD PTR [ebx+0x347d90e4],edi
  410c35:	inc    eax
  410c36:	mov    cl,0x7b
  410c38:	stos   BYTE PTR es:[edi],al
  410c39:	mov    eax,ds:0x637e8e65
  410c3e:	cmp    al,0x43
  410c40:	rcl    DWORD PTR [edi+esi*8+0xe],cl
  410c44:	mov    ebx,0x172c7845
  410c49:	imul   ebp,DWORD PTR [esi-0x7b335764],0x16722614
  410c53:	cmp    ecx,DWORD PTR [ecx-0x4938ecc4]
  410c59:	inc    edi
  410c5a:	xchg   BYTE PTR [eax-0x54],cl
  410c5d:	or     DWORD PTR ds:0x121a2daf,esi
  410c63:	jge    0x410c0c
  410c65:	lar    esp,WORD PTR [ebx+0x43204f7]
  410c6c:	rol    DWORD PTR [edx-0x78],0xb9
  410c70:	scas   eax,DWORD PTR es:[edi]
  410c71:	fwait
  410c72:	jmp    0x9a6b:0x2014fe7c
  410c79:	xchg   edx,eax
  410c7a:	ror    DWORD PTR [ecx],0xb3
  410c7d:	mov    WORD PTR [eax+0x34bc5988],?
  410c83:	or     esp,DWORD PTR [ebx+0x46803e63]
  410c89:	and    BYTE PTR [esi+0x4ac9a0c3],dl
  410c8f:	loopne 0x410c8c
  410c91:	jb     0x410cf3
  410c93:	scas   eax,DWORD PTR es:[edi]
  410c94:	mov    ch,0xde
  410c96:	add    BYTE PTR [esi+0x7610b7b0],ah
  410c9c:	or     al,0xe8
  410c9e:	mov    ebp,0xebcc2e61
  410ca3:	inc    esi
  410ca4:	cwde   
  410ca5:	test   al,0xd5
  410ca7:	and    eax,0x9343a23b
  410cac:	retf   0x72a0
  410caf:	pop    esp
  410cb0:	jne    0x410c9b
  410cb2:	xlat   BYTE PTR ds:[ebx]
  410cb3:	mov    dl,0x5f
  410cb5:	inc    esi
  410cb6:	xchg   BYTE PTR ds:0x1856ba70,dh
  410cbc:	xchg   BYTE PTR [edi],dh
  410cbe:	loop   0x410c7f
  410cc0:	cwde   
  410cc1:	mov    al,ds:0xba191f30
  410cc6:	rcl    BYTE PTR [ecx+0x709c417f],1
  410ccc:	adc    dh,dh
  410cce:	cli    
  410ccf:	jge    0x410ca8
  410cd1:	popa   
  410cd2:	xchg   ch,bl
  410cd4:	loopne 0x410c77
  410cd6:	jle    0x410caf
  410cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd9:	adc    eax,0xb53e5efe
  410cde:	jne    0x410c7c
  410ce0:	or     cl,BYTE PTR [edx+0x75]
  410ce3:	fst    DWORD PTR [edi-0x1213b91b]
  410ce9:	(bad)  
  410cea:	mov    eax,0x50f84717
  410cef:	inc    ebp
  410cf0:	xchg   edi,eax
  410cf1:	sub    eax,0x158d32fe
  410cf6:	pushf  
  410cf7:	jl     0x410cef
  410cf9:	push   edx
  410cfa:	push   ebp
  410cfb:	out    0x57,al
  410cfd:	push   0xa27f7d93
  410d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d03:	das    
  410d04:	xlat   BYTE PTR ds:[ebx]
  410d05:	sbb    dh,bh
  410d07:	mov    cl,0x68
  410d09:	mov    ds:0x5dc22503,eax
  410d0e:	mov    BYTE PTR [ebp-0x7c637a49],ch
  410d14:	dec    edx
  410d15:	add    BYTE PTR [esp+esi*4+0xb],cl
  410d19:	jns    0x410cf3
  410d1b:	xchg   ecx,eax
  410d1c:	fwait
  410d1d:	xchg   BYTE PTR [eax+0xf],al
  410d20:	shl    BYTE PTR [ecx-0x3c7ec31a],1
  410d26:	fisubr DWORD PTR [ecx]
  410d28:	pop    ds
  410d29:	popf   
  410d2a:	inc    eax
  410d2b:	mov    eax,0x5e366710
  410d30:	push   ecx
  410d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d32:	xor    BYTE PTR [edi+0x44],dh
  410d35:	cmp    edx,DWORD PTR [ecx-0x24f91c8a]
  410d3b:	loope  0x410d10
  410d3d:	int3   
  410d3e:	fdivr  st,st(3)
  410d40:	push   cs
  410d41:	in     eax,0x7b
  410d43:	sar    DWORD PTR [ecx+0x1814dbae],1
  410d49:	dec    edi
  410d4a:	mov    bh,0x6c
  410d4c:	mov    ecx,0x7e33637c
  410d51:	mov    cl,0xee
  410d53:	ror    BYTE PTR [edi+0x1ce34a1a],0xbf
  410d5a:	js     0x410d90
  410d5c:	xor    al,0x3f
  410d5e:	fwait
  410d5f:	sbb    al,0xde
  410d61:	pop    esp
  410d62:	or     al,0xf8
  410d64:	xchg   ecx,eax
  410d65:	xlat   BYTE PTR ds:[ebx]
  410d66:	inc    ecx
  410d67:	shl    BYTE PTR ds:0xfbce3af2,0xbd
  410d6e:	inc    ebp
  410d6f:	sub    al,0x9a
  410d71:	adc    al,0x84
  410d73:	shl    BYTE PTR [eax],1
  410d75:	xchg   edx,eax
  410d76:	aas    
  410d77:	(bad)  
  410d78:	jns    0x410d3b
  410d7a:	ret    0xd2b9
  410d7d:	cli    
  410d7e:	push   esi
  410d7f:	dec    ebp
  410d80:	out    0x6,eax
  410d82:	dec    edx
  410d83:	xchg   esi,eax
  410d84:	shl    al,cl
  410d86:	ret    
  410d87:	sti    
  410d88:	push   eax
  410d89:	call   0xbac5:0x5be3ce0
  410d90:	adc    eax,0x8af5be32
  410d95:	cmp    dh,BYTE PTR [ecx-0x3d]
  410d98:	mov    ebx,0x1ddb411a
  410d9d:	push   ecx
  410d9e:	push   eax
  410d9f:	push   0x6a1cc4a0
  410da4:	lods   eax,DWORD PTR ds:[esi]
  410da5:	scas   eax,DWORD PTR es:[edi]
  410da6:	es adc ch,BYTE PTR es:[edi]
  410daa:	lds    esp,FWORD PTR [esi+ebp*1-0x4e02dfd3]
  410db1:	fistp  QWORD PTR [ebp-0x61]
  410db4:	push   eax
  410db5:	sahf   
  410db6:	leave  
  410db7:	or     ah,BYTE PTR [ebp-0x48]
  410dba:	xchg   esp,eax
  410dbb:	nop
  410dbc:	mov    bl,0x3
  410dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dbf:	mov    ecx,0xc3828a49
  410dc4:	sbb    eax,0x2a88ac43
  410dc9:	ja     0x410e3e
  410dcb:	sti    
  410dcc:	or     cl,dh
  410dce:	sub    eax,0xa3c12020
  410dd3:	ins    BYTE PTR es:[edi],dx
  410dd4:	test   al,0xd0
  410dd6:	mov    ebp,0x93bb7ff2
  410ddb:	pop    esi
  410ddc:	xchg   esp,eax
  410ddd:	sti    
  410dde:	repnz pop ss
  410de0:	dec    ebp
  410de1:	pop    es
  410de2:	test   ah,al
  410de4:	mov    BYTE PTR [eax-0x2c],ah
  410de7:	mov    ebx,0xd3eb0f1e
  410dec:	or     esi,DWORD PTR [ecx+0x6f4866e8]
  410df2:	or     esi,edi
  410df4:	add    eax,0x5a041721
  410df9:	loop   0x410da4
  410dfb:	mov    eax,0x9ca6edf9
  410e00:	dec    ebp
  410e01:	aad    0xbf
  410e03:	adc    al,0xe0
  410e05:	mov    ecx,0x31796b8a
  410e0a:	imul   esp,esp,0x0
  410e0d:	jns    0x410e2d
  410e0f:	aaa    
  410e10:	sbb    DWORD PTR [ebp+0x37b179aa],0xffffffcb
  410e17:	jl     0x410e2c
  410e19:	xchg   esi,eax
  410e1a:	fmul   QWORD PTR [edx]
  410e1c:	xchg   ebp,eax
  410e1d:	cld    
  410e1e:	sti    
  410e1f:	out    0x74,eax
  410e21:	mov    edi,0x78e1b2c1
  410e26:	ret    
  410e27:	je     0x410e1f
  410e29:	es aaa 
  410e2b:	push   edi
  410e2d:	cmp    al,0x14
  410e2f:	xor    edi,ecx
  410e31:	xor    BYTE PTR [esi+0x16fb205c],al
  410e37:	push   esp
  410e38:	sti    
  410e39:	cmp    eax,0x7d68da89
  410e3e:	xlat   BYTE PTR ds:[ebx]
  410e3f:	jge    0x410dd5
  410e41:	dec    ebp
  410e42:	fs inc ecx
  410e44:	adc    ch,BYTE PTR [ebp+0xfb0d579]
  410e4a:	push   eax
  410e4b:	push   ebx
  410e4c:	adc    DWORD PTR [ecx],edi
  410e4e:	xchg   ecx,eax
  410e4f:	js     0x410e87
  410e51:	nop
  410e52:	ficom  DWORD PTR [eax+0x65]
  410e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e56:	cmp    al,0x94
  410e58:	pop    ds
  410e59:	jg     0x410eda
  410e5b:	ret    0xeecc
  410e5e:	jecxz  0x410e88
  410e60:	mov    bl,0xe6
  410e62:	add    eax,0x20cd734d
  410e67:	cmp    al,0xab
  410e69:	imul   ebp,DWORD PTR [ecx-0x42],0xc
  410e6d:	daa    
  410e6e:	push   ecx
  410e6f:	cmp    esp,DWORD PTR [ecx+0x78]
  410e72:	pop    ss
  410e73:	(bad)  
  410e74:	jae    0x410ee0
  410e76:	js     0x410e02
  410e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e79:	mov    ecx,0x2a4ff382
  410e7e:	mov    ds:0xffa07d9d,eax
  410e83:	add    eax,0xdea5367e
  410e88:	cld    
  410e89:	jo     0x410e21
  410e8b:	pop    ebx
  410e8c:	xor    BYTE PTR [ebx],bh
  410e8e:	cmp    BYTE PTR [esi],ah
  410e90:	adc    al,dl
  410e92:	outs   dx,DWORD PTR ds:[esi]
  410e93:	inc    ebx
  410e94:	fstp   st(3)
  410e96:	ins    BYTE PTR es:[edi],dx
  410e97:	stos   BYTE PTR es:[edi],al
  410e98:	xor    eax,0xec1070cf
  410e9d:	push   es
  410e9e:	dec    ebp
  410e9f:	scas   eax,DWORD PTR es:[edi]
  410ea0:	mov    ch,0x4a
  410ea2:	ror    BYTE PTR [edx+0x4e],cl
  410ea5:	sub    cl,BYTE PTR [ecx-0xf]
  410ea8:	mov    eax,0xd3844659
  410ead:	mov    esi,0x11dc493
  410eb2:	pop    ss
  410eb3:	jg     0x410ecc
  410eb5:	push   ds
  410eb6:	out    0x5f,eax
  410eb8:	sbb    DWORD PTR [eax+esi*8+0x11],0x62
  410ebd:	fsub   QWORD PTR [edx-0x58]
  410ec0:	push   cs
  410ec1:	popf   
  410ec2:	sti    
  410ec3:	fadd   st(4),st
  410ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec6:	sbb    al,0x5c
  410ec8:	clc    
  410ec9:	repz inc ebx
  410ecb:	inc    edi
  410ecc:	stos   BYTE PTR es:[edi],al
  410ecd:	ins    DWORD PTR es:[edi],dx
  410ece:	je     0x410ea9
  410ed0:	cmp    dh,BYTE PTR [esi-0x41]
  410ed3:	dec    BYTE PTR [esi+0x1b]
  410ed6:	aaa    
  410ed7:	adc    al,0x44
  410ed9:	pusha  
  410eda:	mov    cl,0x30
  410edc:	shl    DWORD PTR [edx+0x3],cl
  410edf:	pop    ebx
  410ee0:	or     al,0xcc
  410ee2:	push   ds
  410ee3:	mov    bh,0x70
  410ee5:	std    
  410ee6:	jle    0x410e69
  410ee8:	adc    DWORD PTR [ecx+0x2e78c348],esp
  410eee:	cmp    BYTE PTR es:[edi],ch
  410ef1:	(bad)  
  410ef3:	push   es
  410ef4:	jmp    0xaff:0xa86fb03
  410efb:	(bad)  [eax+0x6362405f]
  410f01:	xchg   edi,eax
  410f02:	pusha  
  410f03:	push   ebx
  410f04:	sbb    bl,BYTE PTR [edx+0xf]
  410f07:	jge    0x410ebf
  410f09:	push   0x26
  410f0b:	pusha  
  410f0c:	rol    DWORD PTR [edi+0x16],1
  410f0f:	int    0x99
  410f11:	fild   QWORD PTR [edx]
  410f13:	stos   DWORD PTR es:[edi],eax
  410f14:	dec    ebp
  410f15:	pushf  
  410f16:	mov    bl,0xe3
  410f18:	xchg   esi,eax
  410f19:	ds jmp 0xc7bb1cee
  410f1f:	cmp    eax,0x677db739
  410f24:	addr16 xchg esi,eax
  410f26:	dec    ecx
  410f27:	pop    ds
  410f28:	xchg   ebp,eax
  410f29:	test   eax,0xfa796835
  410f2e:	cmp    al,0x31
  410f30:	cmp    DWORD PTR ss:[ebx+0x72],esp
  410f34:	add    DWORD PTR [esp+ebx*1+0x21d39193],esp
  410f3b:	bnd ret 0x8fcd
  410f3f:	jl     0x410f2d
  410f41:	in     al,dx
  410f42:	xor    eax,0x933daf8c
  410f47:	mov    ds:0xb1413cbe,eax
  410f4c:	data16 sti 
  410f4e:	(bad)  
  410f4f:	dec    ebx
  410f50:	(bad)  
  410f51:	xchg   ecx,eax
  410f52:	rcr    edi,0x5c
  410f55:	sbb    esi,0xffffffe7
  410f58:	sti    
  410f59:	arpl   WORD PTR [ebx-0x301b07a9],ax
  410f5f:	test   BYTE PTR [edx+0x4802bcf],dl
  410f65:	pop    eax
  410f66:	sbb    eax,0x7677bcfc
  410f6b:	mov    cs,edx
  410f6d:	mov    cl,0x84
  410f6f:	sbb    ebx,edi
  410f71:	aas    
  410f72:	fimul  WORD PTR [bx+di+0xbbd]
  410f77:	mov    edx,ecx
  410f79:	xchg   ebx,eax
  410f7a:	(bad)  
  410f7b:	stos   DWORD PTR es:[edi],eax
  410f7c:	jmp    0x410f1f
  410f7e:	addr16 mov dh,0x40
  410f81:	cwde   
  410f82:	mov    cl,0xbd
  410f84:	ja     0x410f62
  410f86:	sbb    esi,ebx
  410f88:	cdq    
  410f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f8a:	fldl2t 
  410f8c:	or     bl,bh
  410f8e:	lods   al,BYTE PTR ds:[esi]
  410f8f:	or     DWORD PTR [esp+esi*2-0x437216f1],edx
  410f96:	rcr    edx,1
  410f98:	mov    bl,al
  410f9a:	xchg   BYTE PTR [ebx],cl
  410f9c:	mov    bx,0x8f44
  410fa0:	xchg   ebp,eax
  410fa1:	je     0x410fc3
  410fa3:	inc    esi
  410fa4:	mov    al,ds:0x360b5686
  410fa9:	push   0xe43cd4bf
  410fae:	adc    al,0x83
  410fb0:	push   0x7ed24c26
  410fb5:	mov    eax,ds:0x2a5c4dc9
  410fba:	lods   eax,DWORD PTR ds:[esi]
  410fbb:	and    DWORD PTR [esi],0x27
  410fbe:	shr    BYTE PTR [ebp+0x77],0x7c
  410fc2:	int3   
  410fc3:	dec    ecx
  410fc4:	mov    ds:0x3d9797a5,al
  410fc9:	adc    al,0xa9
  410fcb:	cli    
  410fcc:	xor    ah,BYTE PTR [edi+0x79ccb9ac]
  410fd2:	gs mov cl,0x86
  410fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd6:	jg     0x410f9a
  410fd8:	rol    dh,cl
  410fda:	ins    BYTE PTR es:[edi],dx
  410fdb:	add    ah,BYTE PTR [esi-0x62a222]
  410fe1:	icebp  
  410fe2:	adc    DWORD PTR [ebx-0x2047e2a5],ebx
  410fe8:	lods   eax,DWORD PTR ds:[esi]
  410fe9:	test   eax,0x5a250550
  410fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fef:	pop    esp
  410ff0:	je     0x41102f
  410ff2:	lea    ebx,[ebx-0x43]
  410ff5:	mov    ss,WORD PTR [edi-0x16]
  410ff8:	and    al,0x6f
  410ffa:	lds    eax,FWORD PTR [eax-0x66]
  410ffd:	inc    ebp
  410ffe:	inc    ebp
  410fff:	xchg   ebx,eax
  411000:	je     0x411013
  411002:	cld    
  411003:	and    DWORD PTR [edx-0x7f],esi
  411006:	std    
  411007:	jp     0x410fb3
  411009:	pop    ss
  41100a:	or     BYTE PTR [eax-0x7ac848e],al
  411010:	ret    
  411011:	bound  ebx,QWORD PTR ds:0x32db05d8
  411017:	xor    DWORD PTR [edx],0x34
  41101a:	test   eax,0xa2a79dbd
  41101f:	ret    
  411020:	hlt    
  411021:	mov    ds:0x2fde649d,eax
  411026:	pusha  
  411027:	adc    ch,ah
  411029:	pop    eax
  41102a:	pusha  
  41102b:	icebp  
  41102c:	dec    edx
  41102d:	jb     0x410fc7
  41102f:	or     eax,0x735e9ee7
  411034:	lods   al,BYTE PTR ds:[esi]
  411035:	xlat   BYTE PTR ds:[ebx]
  411036:	mov    cl,0x16
  411038:	cmp    al,0x20
  41103a:	xchg   DWORD PTR ds:0x5496b7f2,ecx
  411040:	and    BYTE PTR [ecx-0x7bd23adc],al
  411046:	push   0xc45b2970
  41104b:	test   al,0x9f
  41104d:	push   esp
  41104e:	sub    ch,BYTE PTR [edx+0x78]
  411051:	cmp    DWORD PTR [eax-0x4c],0x3bcb54db
  411058:	mov    dh,0x17
  41105a:	jne    0x411070
  41105c:	mov    ch,0xe9
  41105e:	inc    edi
  41105f:	dec    ecx
  411060:	xchg   esi,eax
  411061:	and    DWORD PTR fs:[edx+0x7ac2a387],ebx
  411068:	mov    BYTE PTR [esi],bl
  41106a:	cmp    esp,DWORD PTR [eax+eiz*4]
  41106d:	int    0x11
  41106f:	add    DWORD PTR [ebp+esi*8+0x61a04c25],0x1c
  411077:	mov    BYTE PTR [ebx+0x73],dh
  41107a:	stc    
  41107b:	xchg   esp,eax
  41107d:	hlt    
  41107e:	cmp    eax,0x7bf12048
  411083:	dec    edi
  411084:	mov    edi,0xeb3c4c0a
  411089:	push   0x21
  41108b:	dec    ecx
  41108c:	sbb    ecx,0x93133052
  411092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411093:	jl     0x411080
  411095:	jae    0x4110b0
  411097:	sahf   
  411098:	pushf  
  411099:	mov    ch,BYTE PTR [edx]
  41109b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41109c:	or     al,BYTE PTR [eax]
  41109e:	xor    eax,0x737cfa60
  4110a3:	sahf   
  4110a4:	in     al,0x93
  4110a6:	fsubr  DWORD PTR [ebx-0x1e]
  4110a9:	sub    bh,dl
  4110ab:	inc    ecx
  4110ac:	jle    0x411075
  4110ae:	rcl    ebx,cl
  4110b0:	in     al,0xd9
  4110b2:	jb     0x411097
  4110b4:	fs inc esi
  4110b6:	sar    DWORD PTR [eax+edi*2],cl
  4110b9:	push   ds
  4110ba:	inc    edx
  4110bb:	shl    BYTE PTR [edx-0xa5c060b],0x9a
  4110c2:	push   esp
  4110c3:	cdq    
  4110c4:	fisub  WORD PTR [ebp-0x4affc11f]
  4110ca:	sahf   
  4110cb:	jl     0x411054
  4110cd:	pop    ecx
  4110ce:	popa   
  4110cf:	push   esp
  4110d0:	cli    
  4110d1:	push   ecx
  4110d2:	repz mov ebx,0xf8621133
  4110d8:	ror    DWORD PTR [eax+0x13],cl
  4110db:	mov    ebx,0x1d6cbf7a
  4110e0:	lea    ebx,[edx]
  4110e2:	xchg   esi,eax
  4110e3:	xchg   DWORD PTR [eax-0x3d85590f],ebp
  4110e9:	mov    cl,0xef
  4110eb:	jle    0x4110b0
  4110ed:	fld    DWORD PTR [esi]
  4110ef:	mov    al,ds:0xd367469
  4110f4:	mov    ecx,?
  4110f6:	jae    0x411125
  4110f8:	xlat   BYTE PTR ds:[ebx]
  4110f9:	dec    edi
  4110fa:	(bad)  
  4110fb:	hlt    
  4110fc:	mov    edx,0x13d4215d
  411101:	xor    esi,DWORD PTR [ebx+0x2]
  411104:	adc    al,0x5e
  411106:	mov    dl,0x50
  411108:	dec    ebp
  411109:	test   DWORD PTR ds:0x12ba3093,ecx
  41110f:	lods   al,BYTE PTR ds:[esi]
  411110:	fst    DWORD PTR ds:0xc36059d2
  411116:	push   ss
  411117:	test   BYTE PTR [ebx],ch
  411119:	inc    ebx
  41111a:	sub    BYTE PTR [ecx+0x39978a92],bl
  411120:	jp     0x41117b
  411122:	sbb    al,ah
  411124:	cs mov edx,ss
  411127:	jno    0x41115d
  411129:	popa   
  41112a:	sbb    DWORD PTR [ecx+0x2a99793c],0xffffffb5
  411131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411132:	mov    cl,0x95
  411134:	add    ah,dl
  411136:	aas    
  411137:	and    bh,BYTE PTR [edx+0x725abd49]
  41113d:	adc    cl,BYTE PTR [edx+0x333d17d9]
  411143:	and    DWORD PTR [edi+0x53],esp
  411146:	stos   DWORD PTR es:[edi],eax
  411147:	pop    ebx
  411148:	pop    edx
  411149:	loope  0x411146
  41114b:	lds    edx,FWORD PTR [ecx-0x32]
  41114e:	sub    cl,BYTE PTR [edx+0x610aab]
  411154:	aad    0xbd
  411156:	sub    al,0xdb
  411158:	lock outs dx,DWORD PTR ds:[esi]
  41115a:	in     eax,0xd2
  41115c:	(bad)  
  41115d:	sbb    dh,dh
  41115f:	mov    dl,0xcd
  411161:	lea    ebp,ss:0x5c8095ad
  411168:	inc    edi
  411169:	sub    BYTE PTR [edi+0x6b],al
  41116c:	pusha  
  41116d:	mov    cl,0xd3
  41116f:	and    edi,DWORD PTR [esi-0x41750666]
  411175:	adc    edx,edx
  411177:	sbb    al,0xe2
  411179:	mov    ch,BYTE PTR [ebx+edi*4]
  41117c:	xor    edi,DWORD PTR [eax]
  41117e:	leave  
  41117f:	cmp    DWORD PTR [esi-0x67c5b498],ebp
  411185:	cmp    DWORD PTR [esi-0x7d6b07d5],0x5f39e5a4
  41118f:	mov    cl,0x45
  411191:	test   BYTE PTR [ecx-0x66be6a0e],dh
  411197:	xlat   BYTE PTR ds:[ebx]
  411198:	pushf  
  411199:	or     bh,BYTE PTR [esp+edx*1]
  41119c:	and    al,0x29
  41119e:	in     al,0x1d
  4111a0:	xchg   ebx,eax
  4111a1:	call   0x83cb:0xdb50c183
  4111a8:	and    edi,DWORD PTR [ecx+0x5b]
  4111ab:	jmp    0x4111bd
  4111ad:	xchg   esi,eax
  4111ae:	inc    esp
  4111af:	sub    ebx,0x1a
  4111b2:	in     eax,dx
  4111b3:	xchg   edx,eax
  4111b4:	xchg   esi,eax
  4111b5:	jmp    0x8c064ec7
  4111ba:	fisubr DWORD PTR [edi+edi*2]
  4111bd:	or     ebx,DWORD PTR [ecx+0x1dd2273c]
  4111c3:	cld    
  4111c4:	xchg   edx,eax
  4111c5:	jmp    0x411203
  4111c7:	je     0x4111b7
  4111c9:	inc    esi
  4111ca:	sbb    DWORD PTR [edi-0x2ba82131],ecx
  4111d0:	lock repnz gs inc edx
  4111d4:	les    esi,FWORD PTR [ecx]
  4111d6:	out    dx,eax
  4111d7:	pop    ss
  4111d8:	push   edi
  4111d9:	fdivr  st,st(7)
  4111db:	dec    eax
  4111dc:	add    esi,DWORD PTR fs:[ecx+ebp*2+0x71cb1688]
  4111e4:	lods   al,BYTE PTR ds:[esi]
  4111e5:	(bad)  
  4111e6:	lods   eax,DWORD PTR ds:[esi]
  4111e7:	(bad)  
  4111e8:	cmp    cl,BYTE PTR [ecx+0x261e946b]
  4111ee:	test   eax,0xdae5a66a
  4111f3:	inc    ebp
  4111f4:	rol    WORD PTR [ecx+0x7250142c],cl
  4111fb:	pop    DWORD PTR [edi]
  4111fd:	sbb    bl,dl
  4111ff:	sub    edx,DWORD PTR [ebp+ebx*4+0x23]
  411203:	shl    DWORD PTR [edx+0x2e],0xa4
  411207:	xchg   ebx,eax
  411208:	xor    BYTE PTR [ebx+ebx*1],ch
  41120b:	pusha  
  41120c:	inc    esp
  41120d:	sbb    ah,ch
  41120f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411210:	aam    0xec
  411212:	fnsave [eax+eiz*8-0x3]
  411216:	push   ds
  411217:	cmp    BYTE PTR [esi],bl
  411219:	(bad)  
  41121a:	das    
  41121b:	pop    es
  41121c:	inc    esi
  41121d:	ins    BYTE PTR es:[edi],dx
  41121e:	sbb    eax,0x47fbe86b
  411223:	ds inc esp
  411225:	jmp    0x1769:0xea78a3d9
  41122c:	enter  0x9dea,0x33
  411230:	jecxz  0x4111e6
  411232:	pop    edx
  411233:	adc    eax,0xc8fdd696
  411238:	jl     0x41124d
  41123a:	fidivr WORD PTR [ebp+ebp*1-0x3a]
  41123e:	and    cl,0xeb
  411241:	mov    dl,0x17
  411243:	adc    eax,DWORD PTR [edx]
  411245:	push   esi
  411246:	outs   dx,BYTE PTR ds:[esi]
  411247:	xchg   ebx,eax
  411248:	mov    ebp,DWORD PTR [eax]
  41124a:	pop    ecx
  41124b:	add    al,dh
  41124d:	xor    esp,esi
  41124f:	clc    
  411250:	mov    ch,BYTE PTR [eax+0x13d35acf]
  411256:	(bad)  
  411257:	outs   dx,BYTE PTR ds:[esi]
  411258:	inc    esp
  411259:	or     ebp,DWORD PTR [eax+0x21]
  41125c:	gs mov eax,0xaf1a0478
  411262:	sub    bl,BYTE PTR ds:0x82fc7b99
  411268:	mov    dl,0x26
  41126a:	ins    DWORD PTR es:[edi],dx
  41126b:	call   0xf8f4:0xc570
  411271:	dec    edx
  411272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411273:	(bad)  
  411274:	fwait
  411275:	adc    bl,bl
  411277:	outs   dx,DWORD PTR ds:[esi]
  411278:	adc    ch,BYTE PTR [edi+ebx*1]
  41127b:	and    DWORD PTR [edx-0x3850259c],ecx
  411281:	mov    eax,ds:0x6f919ca6
  411286:	fcmovu st,st(6)
  411288:	clc    
  411289:	mov    cl,0x2
  41128b:	fmul   DWORD PTR ds:0xd2dfb939
  411291:	dec    eax
  411292:	xor    dl,BYTE PTR [ebx-0x3c6d3e8b]
  411298:	mov    edi,0x602e59fa
  41129d:	xchg   esp,eax
  41129e:	sar    edi,0xc5
  4112a1:	ds aas 
  4112a3:	or     ch,BYTE PTR [edx-0x2ba68440]
  4112a9:	rcl    BYTE PTR [ebx-0x76],cl
  4112ac:	jmp    0x73e3:0xa1e276e4
  4112b3:	sbb    DWORD PTR [esi+0x6e],edx
  4112b6:	shr    DWORD PTR [edi+0x5c],0x70
  4112ba:	pop    esi
  4112bb:	pop    edx
  4112bc:	add    al,0x85
  4112be:	and    DWORD PTR [edx-0x3f769ca5],0xacb7b6b8
  4112c8:	mov    dl,0xb9
  4112ca:	repz (bad) 
  4112cd:	mov    BYTE PTR [ecx],cl
  4112cf:	xchg   DWORD PTR [edi],edx
  4112d1:	std    
  4112d2:	dec    ebp
  4112d3:	aad    0x30
  4112d5:	fbstp  TBYTE PTR [ebx-0x2596dd60]
  4112db:	scas   al,BYTE PTR es:[edi]
  4112dc:	mov    ds:0x26561521,al
  4112e1:	push   ss
  4112e2:	jae    0x41128e
  4112e4:	scas   al,BYTE PTR es:[edi]
  4112e5:	push   ebx
  4112e6:	push   esp
  4112e7:	push   es
  4112e8:	jbe    0x4112bb
  4112ea:	iret   
  4112eb:	inc    ecx
  4112ec:	and    edi,ebx
  4112ee:	jmp    0x41128f
  4112f0:	mov    dl,0x50
  4112f2:	cmp    edx,DWORD PTR [ebp-0x18]
  4112f5:	(bad)  
  4112f6:	mov    eax,ds:0x9d41c58f
  4112fb:	mov    eax,0x8a044ffe
  411300:	int3   
  411301:	ja     0x411304
  411303:	cmp    dh,BYTE PTR [ecx-0x4707bac9]
  411309:	outs   dx,DWORD PTR ds:[esi]
  41130a:	push   0x0
  41130c:	jnp    0x41132e
  41130e:	aaa    
  41130f:	js     0x41136c
  411311:	stos   BYTE PTR es:[edi],al
  411312:	sbb    esi,esp
  411314:	add    DWORD PTR [edx+0x4e800472],0x3b68efd
  41131e:	test   BYTE PTR [eax-0x16c8176d],0x20
  411325:	cmp    edi,DWORD PTR [esi]
  411327:	gs jecxz 0x41139b
  41132a:	fs popa 
  41132c:	pop    esp
  41132d:	not    DWORD PTR [eax+edi*8]
  411330:	sub    eax,0xc8285ec1
  411335:	enter  0x4a83,0x50
  411339:	and    ebp,edx
  41133b:	(bad)  
  41133e:	dec    ebp
  41133f:	dec    ecx
  411340:	ja     0x4113be
  411342:	mov    esi,0xb07a56ef
  411347:	push   esp
  411348:	icebp  
  411349:	aaa    
  41134a:	(bad)  
  41134b:	fiadd  WORD PTR [ebp+eax*2+0x13]
  41134f:	or     eax,0x29644b91
  411354:	pop    ecx
  411355:	fiadd  DWORD PTR [ebx]
  411357:	cld    
  411358:	shl    eax,0xfc
  41135b:	dec    ebp
  41135c:	pop    eax
  41135d:	test   esi,0x575decd9
  411363:	cli    
  411364:	leave  
  411365:	addr16 aam 0xcf
  411368:	and    esp,ebx
  41136a:	aaa    
  41136b:	mov    cl,0x5f
  41136d:	sub    dh,dl
  41136f:	add    BYTE PTR [eax-0x19],ah
  411372:	jmp    0x3657:0xb57a278f
  411379:	push   0x896f5908
  41137e:	shr    BYTE PTR [esi+ebx*1+0x1f],0x76
  411383:	mov    esi,0x4e55c9a0
  411388:	bound  ecx,QWORD PTR [eax]
  41138a:	loopne 0x4113a1
  41138c:	(bad)  
  41138d:	loope  0x4113ae
  41138f:	adc    ebx,ecx
  411391:	push   ebp
  411392:	cwde   
  411393:	aam    0x0
  411395:	mov    ?,WORD PTR [ebp+0x6442becb]
  41139b:	mov    bl,0xa6
  41139d:	cmp    BYTE PTR [edi-0x7],dh
  4113a0:	fucomi st,st(5)
  4113a2:	std    
  4113a3:	mov    ch,0x96
  4113a5:	ins    BYTE PTR es:[edi],dx
  4113a6:	mov    al,es:0xcb2c2cc7
  4113ac:	in     al,dx
  4113ad:	(bad)  
  4113ae:	pop    ecx
  4113af:	sbb    DWORD PTR [ebx+ebx*2],0x3c
  4113b3:	push   cs
  4113b4:	repz or ah,BYTE PTR [eax-0x1f79f65b]
  4113bb:	jge    0x4113f6
  4113bd:	push   ss
  4113be:	xor    bh,BYTE PTR [ecx-0x7b7398c4]
  4113c4:	jb     0x4113c1
  4113c6:	das    
  4113c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c8:	cdq    
  4113c9:	mov    ds:0x892ea7e0,al
  4113ce:	call   FWORD PTR [eax+0x75cc65b2]
  4113d4:	and    ecx,DWORD PTR [esi-0x4a]
  4113d7:	xor    DWORD PTR [ebx-0x18df91a6],ebx
  4113dd:	push   ds
  4113de:	dec    ecx
  4113df:	jl     0x41140e
  4113e1:	ss sbb eax,0xfc95df66
  4113e7:	popa   
  4113e8:	xchg   ebp,eax
  4113e9:	pop    esi
  4113ea:	xchg   ecx,eax
  4113eb:	mov    ds:0xb353aa80,eax
  4113f0:	js     0x411388
  4113f2:	and    dl,dl
  4113f4:	mov    bl,0xb9
  4113f6:	mov    ebp,0x2ec4ff9d
  4113fb:	mov    edi,0x7a9b51d3
  411400:	pop    ds
  411401:	ror    DWORD PTR [ebx-0x37],cl
  411404:	daa    
  411405:	rol    BYTE PTR [ebp-0x41038ad3],0x8b
  41140c:	je     0x411469
  41140e:	mov    ah,0x94
  411410:	mov    ?,WORD PTR [ecx]
  411412:	scas   eax,DWORD PTR es:[edi]
  411413:	sbb    DWORD PTR [edx-0x74],ebp
  411416:	shl    DWORD PTR [esi-0x76],1
  411419:	add    edx,ebx
  41141b:	push   es
  41141c:	call   0x320890e6
  411421:	hlt    
  411422:	out    0x43,eax
  411424:	adc    BYTE PTR [esi+0x7f],ah
  411427:	sar    BYTE PTR [edi],cl
  411429:	adc    ah,BYTE PTR [esi+0x69]
  41142c:	xor    al,0xaf
  41142e:	mov    edi,0xc65f224f
  411433:	add    DWORD PTR ds:0xc55ea5dd,eax
  411439:	stc    
  41143a:	xchg   esp,eax
  41143b:	inc    ecx
  41143c:	pop    ds
  41143d:	sbb    eax,0x1b6b761d
  411442:	imul   DWORD PTR ds:0x7f69d209
  411448:	mov    WORD PTR [eax-0x47ad11ad],gs
  41144e:	mov    esi,0x63ff73c9
  411453:	enter  0x4834,0x25
  411457:	mov    eax,ds:0xfa98631f
  41145c:	xor    dl,BYTE PTR [edi]
  41145e:	push   0xffffff91
  411460:	lods   eax,DWORD PTR ds:[esi]
  411461:	div    BYTE PTR [ecx+0x43]
  411464:	xor    eax,0x26d0b973
  411469:	gs push cs
  41146b:	fs dec esp
  41146d:	in     al,0xb8
  41146f:	jmp    0x40c40905
  411474:	mov    eax,0xec1abbdf
  411479:	jmp    0x2df9:0x2af221bf
  411480:	add    cl,bl
  411482:	push   edi
  411483:	repz sbb eax,0xc7db4636
  411489:	icebp  
  41148a:	pop    ss
  41148b:	add    bh,BYTE PTR [edi]
  41148d:	call   0x671c4ac0
  411492:	out    0x9,eax
  411494:	repnz inc ebp
  411496:	cmp    DWORD PTR [esi-0x32],0x687f93ef
  41149d:	fadd   QWORD PTR [ebx+0x35]
  4114a0:	rol    BYTE PTR [edx+0x7f1622a6],1
  4114a6:	xlat   BYTE PTR ds:[ebx]
  4114a7:	out    0xde,al
  4114a9:	sbb    edx,0xffffffaa
  4114ac:	xchg   esi,eax
  4114ad:	cmp    al,0xab
  4114af:	push   eax
  4114b0:	inc    eax
  4114b1:	in     al,0xac
  4114b3:	push   ss
  4114b4:	sbb    edx,eax
  4114b6:	inc    edx
  4114b7:	daa    
  4114b8:	mov    WORD PTR [edx*4-0x52e1ba9c],cs
  4114bf:	mov    ebx,DWORD PTR [ecx+0x71]
  4114c2:	or     DWORD PTR [esi+0x0],ecx
  4114c5:	ss nop
  4114c7:	rcl    BYTE PTR [ebx+0x30fa335f],cl
  4114cd:	mov    eax,ds:0x66d9f82a
  4114d2:	pop    edx
  4114d3:	call   0x7e877d6
  4114d8:	out    0x3,al
  4114da:	sbb    DWORD PTR es:[ebx+0x497fec0d],ecx
  4114e1:	xchg   ebx,eax
  4114e2:	es cwde 
  4114e4:	mov    BYTE PTR [esi],ah
  4114e6:	xchg   esi,eax
  4114e7:	add    esp,DWORD PTR es:[eax-0x765ad13d]
  4114ee:	imul   ebx,DWORD PTR [ebx-0x73],0xb99104de
  4114f5:	cmp    al,0x60
  4114f7:	or     ebp,DWORD PTR [esi]
  4114f9:	ja     0x41150a
  4114fb:	sbb    ebp,DWORD PTR ds:0xa44df85a
  411501:	dec    edx
  411502:	aad    0x35
  411504:	sar    BYTE PTR [ebp-0x5e9e65fc],0x1b
  41150b:	inc    eax
  41150c:	mov    bh,0x25
  41150e:	jg     0x4114bc
  411510:	(bad)  
  411512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411513:	sub    DWORD PTR [ebx],ebx
  411515:	mov    edx,DWORD PTR [edx-0x2]
  411518:	popf   
  411519:	push   0x1f
  41151b:	or     edi,edi
  41151d:	or     al,0x7c
  41151f:	jp     0x41157f
  411521:	jbe    0x41152d
  411523:	hlt    
  411524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411525:	icebp  
  411526:	sub    al,0x77
  411528:	(bad)  
  411529:	sub    DWORD PTR [eax*4+0x6b30ec43],edi
  411530:	push   ecx
  411531:	daa    
  411532:	sbb    dl,al
  411534:	adc    eax,0x73e759eb
  411539:	lahf   
  41153a:	scas   al,BYTE PTR es:[edi]
  41153b:	and    al,0x24
  41153d:	ficom  WORD PTR [ebx+edi*8]
  411540:	pop    es
  411541:	jne    0x41158f
  411543:	dec    ecx
  411544:	or     DWORD PTR [ebx+eiz*8-0x2c9fdc14],0x1d628a30
  41154f:	test   dh,ch
  411551:	inc    esp
  411552:	sub    BYTE PTR [esi],bl
  411554:	add    bl,dh
  411556:	xor    al,0xb6
  411558:	sub    eax,0xb6b15dcd
  41155d:	lds    esp,FWORD PTR [ebx+0x5a]
  411560:	pusha  
  411561:	dec    edi
  411562:	sti    
  411563:	sub    ch,BYTE PTR [ebx-0x6f]
  411566:	out    dx,al
  411567:	(bad)  
  411568:	pop    ss
  411569:	or     esp,DWORD PTR [edi+0x4bf1c946]
  41156f:	aam    0x74
  411571:	or     ebp,DWORD PTR [ecx+0x21]
  411574:	push   ecx
  411575:	nop
  411576:	(bad)  
  411577:	pusha  
  411578:	ds mov ebx,0x8aecdd86
  41157e:	mov    dl,0x44
  411580:	rol    ah,1
  411582:	mov    esi,ebx
  411584:	jecxz  0x411556
  411586:	mov    ?,WORD PTR ds:[ebx]
  411589:	imul   esi,DWORD PTR [ecx+0x5f],0xffffffb3
  41158d:	mov    dh,0x92
  41158f:	loope  0x4115f9
  411591:	dec    ecx
  411592:	clc    
  411593:	adc    ch,BYTE PTR [ebp+0x44bd3b00]
  411599:	inc    eax
  41159a:	rcl    BYTE PTR [eax+0x69],cl
  41159d:	xchg   esi,eax
  41159e:	push   ds
  41159f:	fmul   QWORD PTR [esi+0x63698347]
  4115a5:	xchg   esi,eax
  4115a6:	mov    ebp,0x62fd4f23
  4115ab:	pop    es
  4115ac:	imul   ebx,ebx,0x62
  4115af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b0:	xor    cl,BYTE PTR [edx]
  4115b2:	int3   
  4115b3:	test   al,0x11
  4115b5:	inc    edx
  4115b6:	ret    
  4115b7:	jle    0x4115b0
  4115b9:	out    dx,eax
  4115ba:	or     eax,DWORD PTR [edx+0x572c9c2e]
  4115c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115c1:	mov    dl,0x29
  4115c3:	cmp    al,0x39
  4115c5:	cmp    ecx,ecx
  4115c7:	sub    eax,0x6159688
  4115cc:	mov    dl,0x67
  4115ce:	xchg   DWORD PTR ds:[esi+0xd869772],esp
  4115d5:	and    bh,BYTE PTR [ecx]
  4115d7:	into   
  4115d8:	and    ch,BYTE PTR [edi]
  4115da:	push   ebp
  4115db:	or     DWORD PTR [ebp-0x4dd25080],ebx
  4115e1:	push   ebp
  4115e2:	icebp  
  4115e3:	xlat   BYTE PTR ds:[ebx]
  4115e4:	jp     0x41162a
  4115e6:	aas    
  4115e7:	jge    0x41162c
  4115e9:	sbb    ecx,DWORD PTR [esi]
  4115eb:	sub    eax,DWORD PTR [edx]
  4115ed:	fs jg  0x41158c
  4115f0:	xchg   edi,eax
  4115f1:	ja     0x411622
  4115f3:	mov    edx,0x7bb5d15
  4115f8:	in     al,0xa8
  4115fa:	retf   0xf79b
  4115fd:	dec    edx
  4115fe:	or     BYTE PTR [esi+0x47d7f476],bh
  411604:	(bad)  
  411605:	loop   0x4115c5
  411607:	addr16 sbb eax,0x69078b8c
  41160d:	fwait
  41160e:	xchg   DWORD PTR [esi-0x52],eax
  411611:	icebp  
  411612:	mov    eax,0xac42aea4
  411617:	call   0x9d44:0x5b059914
  41161e:	jns    0x4115ef
  411620:	xor    edx,eax
  411622:	inc    esi
  411623:	dec    ebp
  411624:	inc    ecx
  411625:	aaa    
  411626:	lods   eax,DWORD PTR ds:[esi]
  411627:	xor    edx,0x2
  41162a:	and    ah,ah
  41162c:	mov    eax,0x81ac580a
  411631:	pop    ebp
  411632:	cmp    al,0x1c
  411634:	adc    al,0x10
  411636:	cmc    
  411637:	lds    edi,FWORD PTR [ebx-0x6a0576f6]
  41163d:	push   ds
  41163e:	iret   
  41163f:	fstp   DWORD PTR [edx-0x4c]
  411642:	and    BYTE PTR [ecx],dh
  411644:	dec    ebx
  411645:	scas   eax,DWORD PTR es:[edi]
  411646:	sti    
  411647:	xor    dh,BYTE PTR [edx]
  411649:	cld    
  41164a:	or     dh,BYTE PTR [ecx+0x3a]
  41164d:	in     eax,dx
  41164e:	dec    ebx
  41164f:	push   ecx
  411650:	xor    bl,BYTE PTR [edi+eax*8]
  411653:	les    ecx,FWORD PTR ds:[esi+0x3c493c3a]
  41165a:	out    dx,al
  41165b:	retf   0x96c7
  41165e:	and    eax,0xee7d1720
  411663:	inc    edi
  411664:	pop    es
  411665:	lahf   
  411666:	jnp    0x41169f
  411668:	jo     0x4116bd
  41166a:	add    al,0x44
  41166c:	xchg   esi,eax
  41166d:	in     eax,0x71
  41166f:	scas   eax,DWORD PTR es:[edi]
  411670:	imul   ebx,esp,0x907fbca0
  411676:	xchg   BYTE PTR [ecx-0x55],bh
  411679:	cmc    
  41167a:	popf   
  41167b:	mov    esp,0x4f3abf79
  411680:	xchg   ebp,eax
  411681:	dec    eax
  411682:	outs   dx,BYTE PTR ds:[esi]
  411683:	stos   DWORD PTR es:[edi],eax
  411684:	enter  0x903f,0xf2
  411688:	adc    BYTE PTR [ebx+edx*4+0x4107c6eb],al
  41168f:	mov    al,0x9d
  411691:	(bad)  
  411692:	fistp  DWORD PTR [edx-0x63f24ac6]
  411698:	jmp    0xeb4a:0xb5c85ca9
  41169f:	cmp    BYTE PTR [ebp-0x3dc2545f],bl
  4116a5:	add    edi,DWORD PTR [edx-0x64]
  4116a8:	and    eax,0x2cd46f4d
  4116ad:	lods   eax,DWORD PTR ds:[esi]
  4116ae:	adc    bh,dh
  4116b0:	fwait
  4116b1:	jle    0x411663
  4116b3:	mov    ds:0x2e449b94,al
  4116b8:	mov    dl,0xe1
  4116ba:	hlt    
  4116bb:	fst    st(1)
  4116bd:	cmp    edi,DWORD PTR [esp+esi*8]
  4116c0:	nop
  4116c1:	mov    dh,0x87
  4116c3:	les    ebp,FWORD PTR ds:0xc21d4f41
  4116c9:	cli    
  4116ca:	in     eax,0x91
  4116cc:	das    
  4116cd:	jp     0x4116c8
  4116cf:	scas   al,BYTE PTR es:[edi]
  4116d0:	int    0x57
  4116d2:	shr    cl,0xc6
  4116d5:	jb     0x4116e1
  4116d7:	leave  
  4116d8:	jmp    0x494d:0x4eef0f62
  4116df:	fstp   TBYTE PTR [ebx]
  4116e1:	call   0x37c6:0x538ffa68
  4116e8:	ja     0x4116d5
  4116ea:	xchg   esp,eax
  4116eb:	mov    edx,0x26325526
  4116f0:	sbb    DWORD PTR [esi],eax
  4116f2:	mov    ebx,0xf544363e
  4116f7:	add    DWORD PTR [ebp+0x7e],eax
  4116fa:	adc    edx,esp
  4116fc:	fidiv  WORD PTR [edx-0x55]
  4116ff:	and    edi,esp
  411701:	push   es
  411702:	int    0xba
  411704:	and    BYTE PTR [esi],bl
  411706:	dec    esp
  411707:	cdq    
  411708:	push   es
  411709:	outs   dx,DWORD PTR ds:[esi]
  41170a:	scas   al,BYTE PTR es:[edi]
  41170b:	or     bl,ch
  41170d:	mov    esp,0xbc7fe8cd
  411712:	jp     0x411757
  411714:	cdq    
  411715:	cs dec esi
  411717:	std    
  411718:	cld    
  411719:	mov    DWORD PTR [esi],ebp
  41171b:	jnp    0x411791
  41171d:	sti    
  41171e:	push   0x53ff1b41
  411723:	xchg   esi,eax
  411724:	lods   al,BYTE PTR ds:[esi]
  411725:	push   esp
  411726:	test   al,0x11
  411728:	and    al,cl
  41172a:	ins    BYTE PTR es:[edi],dx
  41172b:	sbb    al,al
  41172d:	cmp    edi,DWORD PTR [edi]
  41172f:	xchg   dl,ah
  411731:	cdq    
  411732:	jb     0x411740
  411734:	mov    ecx,0xd66134e2
  411739:	pop    ecx
  41173a:	scas   al,BYTE PTR es:[edi]
  41173b:	ins    DWORD PTR es:[edi],dx
  41173c:	mov    BYTE PTR [ecx-0x2b4311a8],dh
  411742:	push   esp
  411743:	outs   dx,BYTE PTR ds:[esi]
  411744:	adc    al,0x6
  411746:	loope  0x4116f7
  411748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411749:	adc    BYTE PTR [edi+eax*2],ah
  41174c:	adc    esp,esp
  41174e:	mov    eax,ds:0xd706c106
  411753:	pop    es
  411754:	and    esi,DWORD PTR [ebx+0x61]
  411757:	outs   dx,DWORD PTR ds:[esi]
  411758:	out    0xe7,eax
  41175a:	pop    edi
  41175b:	pop    ebp
  41175c:	data16 mov ds:0x8d00cfca,al
  411762:	push   es
  411763:	hlt    
  411764:	test   DWORD PTR [ecx],edx
  411766:	mov    BYTE PTR [esi+ebp*8],dl
  411769:	sbb    DWORD PTR [eax+0x7a],esp
  41176c:	sub    al,0x6f
  41176e:	pop    ecx
  41176f:	lahf   
  411770:	dec    ebp
  411771:	sti    
  411772:	jle    0x41179b
  411774:	or     eax,0x1b265013
  411779:	or     bl,al
  41177b:	mov    bl,0xd9
  41177d:	mov    ds:0xf3092a53,eax
  411782:	gs push esp
  411784:	dec    esi
  411785:	xchg   BYTE PTR [ebx+0x60],ch
  411788:	loope  0x411764
  41178a:	(bad)  
  41178b:	rcl    dh,1
  41178d:	push   0xffffffb8
  41178f:	ret    
  411790:	cmc    
  411791:	imul   ecx,DWORD PTR [ecx+0x22],0x6c056ff3
  411798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411799:	out    0x31,al
  41179b:	xchg   edi,eax
  41179c:	push   es
  41179d:	jns    0x411794
  41179f:	ret    
  4117a0:	cdq    
  4117a1:	ror    eax,1
  4117a3:	aad    0xa1
  4117a5:	ret    
  4117a6:	and    al,0x63
  4117a8:	jl     0x411820
  4117aa:	xchg   edi,eax
  4117ab:	mov    ebp,0xc1619cd4
  4117b0:	test   eax,0x31cea961
  4117b5:	inc    esi
  4117b6:	cmc    
  4117b7:	fwait
  4117b8:	aaa    
  4117b9:	rcl    DWORD PTR [ebx+0x1c],1
  4117bc:	mov    ch,0x9d
  4117be:	mov    dl,0x7
  4117c0:	push   edi
  4117c1:	sub    edx,edx
  4117c3:	in     al,dx
  4117c4:	lea    esi,[edi+0x57493117]
  4117ca:	add    DWORD PTR [ebp+0x58],ebx
  4117cd:	xchg   esp,eax
  4117ce:	repz stc 
  4117d0:	ret    
  4117d1:	push   edi
  4117d2:	xor    ecx,DWORD PTR [ebp+0x45]
  4117d5:	pop    edx
  4117d6:	mov    ds,esi
  4117d8:	push   ebx
  4117d9:	pop    ebx
  4117da:	pop    ebp
  4117db:	retf   
  4117dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117dd:	imul   DWORD PTR [ecx]
  4117df:	cwde   
  4117e0:	loop   0x4117ac
  4117e2:	jecxz  0x41181b
  4117e4:	stc    
  4117e5:	mov    ?,WORD PTR [ecx]
  4117e7:	sub    eax,0x469827ac
  4117ec:	mov    ds:0x4f9ee874,al
  4117f1:	sub    ebp,DWORD PTR [ebx+0x101a7f75]
  4117f7:	(bad)  
  4117f8:	int    0x50
  4117fa:	fidivr WORD PTR [edi+0x660690f3]
  411800:	sub    bl,ah
  411802:	stos   BYTE PTR es:[edi],al
  411803:	sbb    al,0x69
  411805:	jecxz  0x4117b6
  411807:	lahf   
  411808:	sti    
  411809:	data16 jo 0x411873
  41180c:	mov    ah,0xdb
  41180e:	pop    es
  41180f:	pop    esp
  411810:	imul   edi,DWORD PTR [ecx+0x1],0xffffffd6
  411814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411815:	mov    ah,0x36
  411817:	inc    ebx
  411818:	retf   0x544a
  41181b:	and    eax,0x3e274e54
  411820:	lds    esp,FWORD PTR [eax+0x6a]
  411823:	cli    
  411824:	aaa    
  411825:	dec    edx
  411826:	and    al,0x70
  411828:	mul    BYTE PTR [esp+edi*4]
  41182b:	repnz das 
  41182d:	pop    eax
  41182e:	pop    edi
  41182f:	mov    edx,0xbd9168f7
  411834:	add    eax,0xd874f2d3
  411839:	jnp    0x41187a
  41183b:	xchg   edx,eax
  41183c:	inc    ecx
  41183d:	xchg   DWORD PTR [edi],edi
  41183f:	dec    edi
  411840:	or     esi,ebp
  411842:	repnz cmp al,0x3e
  411845:	and    eax,DWORD PTR [ebx+0x74f0d9f1]
  41184b:	or     DWORD PTR [eiz*2+0x72652c84],0x7a4f34fd
  411856:	add    ch,BYTE PTR [ebx]
  411858:	hlt    
  411859:	mov    al,ds:0x9c1802ac
  41185e:	int3   
  41185f:	cli    
  411860:	xchg   DWORD PTR [ebx+edi*4+0x22],eax
  411864:	lea    esi,[eax+ecx*8]
  411867:	cmp    BYTE PTR [edx],ch
  411869:	ins    DWORD PTR es:[edi],dx
  41186a:	or     BYTE PTR [edi+0x58917d15],0x22
  411871:	xchg   esi,eax
  411872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411873:	(bad)  [ecx+0x3c178981]
  411879:	jb     0x411887
  41187b:	xor    edx,DWORD PTR [ebp-0x44]
  41187e:	dec    ebx
  41187f:	arpl   WORD PTR [esp],di
  411882:	sbb    eax,0xb03748e1
  411887:	or     al,0x6e
  411889:	inc    DWORD PTR [esi+0x4b]
  41188c:	lods   al,BYTE PTR ds:[esi]
  41188d:	push   esp
  41188e:	mov    BYTE PTR [esp+eax*4],dh
  411891:	and    al,0x5a
  411893:	mov    esp,0xd9f98f3
  411898:	cld    
  411899:	mov    ds:0x4ffdd5ab,al
  41189e:	dec    edx
  41189f:	enter  0x856a,0x89
  4118a3:	and    al,0x93
  4118a5:	mov    ch,BYTE PTR [ebp+0x8]
  4118a8:	mov    eax,ds:0x6a7870c1
  4118ad:	aam    0x15
  4118af:	fwait
  4118b0:	xchg   esi,eax
  4118b1:	pop    ecx
  4118b2:	jo     0x411887
  4118b4:	rcr    BYTE PTR [esi-0x51],1
  4118b7:	nop
  4118b8:	aas    
  4118b9:	sbb    eax,0x76192972
  4118be:	add    BYTE PTR [eax+0x5c9ec8de],al
  4118c4:	cmp    eax,0x27f78d8d
  4118c9:	cmp    eax,0x9070853d
  4118ce:	fistp  DWORD PTR [edi-0x35]
  4118d1:	ror    bl,1
  4118d3:	adc    eax,0x4afa4a0a
  4118d8:	gs retf 
  4118da:	fsub   DWORD PTR [edx-0x22]
  4118dd:	mov    al,ds:0x9d7bbf3b
  4118e2:	loop   0x411954
  4118e4:	push   esp
  4118e5:	scas   eax,DWORD PTR es:[edi]
  4118e6:	test   ecx,eax
  4118e8:	fld    DWORD PTR [esp+edx*2]
  4118eb:	inc    eax
  4118ec:	jae    0x4118a2
  4118ee:	push   cs
  4118ef:	xchg   esi,eax
  4118f0:	sub    ah,BYTE PTR [edi]
  4118f2:	ds out dx,eax
  4118f4:	mov    ebp,0x6ab6e07c
  4118f9:	fcmovne st,st(5)
  4118fb:	or     eax,0xcfe05168
  411900:	stc    
  411901:	outs   dx,BYTE PTR ds:[esi]
  411902:	ja     0x411967
  411904:	inc    ebp
  411905:	ss retf 
  411907:	sahf   
  411908:	fwait
  411909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190a:	cld    
  41190b:	js     0x411900
  41190d:	stc    
  41190e:	pop    edx
  41190f:	jns    0x4118ea
  411911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411912:	fwait
  411913:	mov    ds:0x1039b5bf,al
  411918:	push   edi
  411919:	jnp    0x41195d
  41191b:	(bad)  
  41191c:	sbb    eax,ebp
  41191e:	or     edi,esp
  411920:	inc    ebp
  411921:	ins    DWORD PTR es:[edi],dx
  411922:	mov    WORD PTR [eax-0x15a46f03],ss
  411928:	test   al,0xac
  41192a:	les    edx,FWORD PTR [eax]
  41192c:	stc    
  41192d:	mov    DWORD PTR [edx],edx
  41192f:	outs   dx,BYTE PTR ds:[esi]
  411930:	fdiv   DWORD PTR [esi+eiz*8+0x2e]
  411934:	jae    0x4119a6
  411936:	daa    
  411937:	out    dx,al
  411938:	js     0x41193d
  41193a:	mov    bh,BYTE PTR [ecx]
  41193c:	ret    
  41193d:	cmp    al,0xbc
  41193f:	push   ss
  411940:	cmp    BYTE PTR [edi-0x688df229],cl
  411946:	sbb    ecx,edx
  411948:	push   ss
  411949:	(bad)  
  41194a:	pusha  
  41194b:	push   esp
  41194c:	js     0x4118e4
  41194e:	sbb    eax,0xa74d811c
  411953:	ins    BYTE PTR es:[edi],dx
  411954:	pop    edi
  411955:	inc    edx
  411956:	jp     0x41196f
  411958:	(bad)  [edi-0x1c]
  41195b:	cld    
  41195c:	ja     0x41192a
  41195e:	dec    edx
  41195f:	(bad)  
  411960:	jbe    0x41196b
  411962:	push   0xcaa1de09
  411967:	or     al,BYTE PTR [ebp+eiz*4-0x7c]
  41196b:	fidiv  WORD PTR [ecx+0x1942041e]
  411971:	sbb    esp,ebx
  411973:	jae    0x411938
  411975:	mov    al,ds:0xfa01621b
  41197a:	push   ecx
  41197b:	scas   al,BYTE PTR es:[edi]
  41197c:	pop    esi
  41197d:	or     cl,bl
  41197f:	bound  esi,QWORD PTR [ecx+edi*2+0x58]
  411983:	in     eax,0x8f
  411985:	out    dx,al
  411986:	out    dx,al
  411987:	std    
  411988:	(bad)  
  411989:	pop    eax
  41198a:	bound  esi,QWORD PTR [edi+0x24]
  41198d:	jge    0x4119cc
  41198f:	inc    ebx
  411990:	add    BYTE PTR [eax-0xff844a5],bh
  411996:	adc    eax,0xb9441911
  41199b:	dec    ebp
  41199c:	jns    0x411a13
  41199e:	inc    edi
  41199f:	sahf   
  4119a0:	ds and eax,0x3d34d5a6
  4119a6:	inc    edx
  4119a7:	loope  0x411a23
  4119a9:	mov    ah,BYTE PTR [ecx-0x5fb9c862]
  4119af:	sub    bh,BYTE PTR [ebx]
  4119b1:	jae    0x4119b7
  4119b3:	jecxz  0x4119b7
  4119b5:	mov    dh,0x67
  4119b7:	adc    eax,0x41f3d508
  4119bc:	xlat   BYTE PTR ds:[ebx]
  4119bd:	retf   0x4f0d
  4119c0:	jno    0x4119f2
  4119c2:	in     eax,dx
  4119c3:	data16 loopne 0x4119b1
  4119c6:	cmp    esp,esi
  4119c8:	mov    edi,cs
  4119ca:	xchg   edx,eax
  4119cb:	mov    ds:0x7d7bbe05,eax
  4119d0:	pop    DWORD PTR [bx+di-0x3d0e]
  4119d5:	fcomp  DWORD PTR [edi-0x1f]
  4119d8:	mov    WORD PTR [edi+ebx*2-0x224b0841],cs
  4119df:	call   0x7fd9:0xa8ac9f03
  4119e6:	mov    ebx,0xecee11f8
  4119eb:	fcomp  DWORD PTR [ecx-0x35]
  4119ee:	mov    ds:0x748e3a06,eax
  4119f3:	dec    ecx
  4119f4:	lahf   
  4119f5:	add    ecx,DWORD PTR [ecx]
  4119f7:	bound  edi,QWORD PTR [ecx+eax*2-0x35]
  4119fb:	aam    0xe1
  4119fd:	popf   
  4119fe:	mov    BYTE PTR [eax+esi*2-0x742a8a71],0x61
  411a06:	sbb    al,0x3c
  411a08:	mov    dh,BYTE PTR [edx+edx*1-0x67212d12]
  411a0f:	cmp    eax,0x4074aa10
  411a14:	mov    eax,0x8238215f
  411a19:	pop    ecx
  411a1a:	and    bl,0x30
  411a1d:	xor    ecx,DWORD PTR [edx]
  411a1f:	adc    BYTE PTR [esi],al
  411a21:	jb     0x411a97
  411a23:	jns    0x4119c1
  411a25:	xor    DWORD PTR [ebx+0x4b],0x58dc2107
  411a2c:	nop
  411a2d:	imul   ebx,DWORD PTR [edx-0x4cc2fa18],0xa9b75499
  411a37:	ja     0x411a41
  411a39:	mov    dl,0xa2
  411a3b:	adc    eax,0xb86dfb39
  411a40:	cmp    eax,0x889d9ea
  411a45:	repnz clc 
  411a47:	sub    al,BYTE PTR [ebx]
  411a49:	retf   
  411a4a:	test   esi,0x120ba147
  411a50:	fs out 0x12,eax
  411a53:	test   DWORD PTR [esi+ebx*1],ebp
  411a56:	add    esi,DWORD PTR [edi-0x65]
  411a59:	test   DWORD PTR [esi+eiz*8],ebp
  411a5c:	in     al,0xe2
  411a5e:	cmp    edi,DWORD PTR [ebx+0x66]
  411a61:	fmulp  st(2),st
  411a63:	ins    BYTE PTR es:[edi],dx
  411a64:	jp     0x411aaa
  411a66:	dec    esi
  411a67:	xor    ebp,DWORD PTR [edi]
  411a69:	stos   BYTE PTR es:[edi],al
  411a6a:	xchg   ch,dh
  411a6c:	push   cs
  411a6d:	fmul   DWORD PTR [edx-0x63]
  411a70:	(bad)  
  411a71:	fist   WORD PTR [esp+edx*2-0x1f]
  411a75:	int    0xab
  411a77:	nop
  411a78:	jle    0x411a60
  411a7a:	or     ch,bl
  411a7c:	jb     0x411af1
  411a7e:	popa   
  411a7f:	jg     0x411ad4
  411a81:	int3   
  411a82:	test   ch,dl
  411a84:	and    al,0xdf
  411a86:	mov    ch,0xb0
  411a88:	fsub   QWORD PTR [edi]
  411a8a:	(bad)  
  411a8b:	mov    dh,0x56
  411a8d:	mov    ebp,DWORD PTR [ecx-0xf]
  411a90:	inc    esp
  411a91:	cdq    
  411a92:	or     al,0x44
  411a94:	mov    ecx,0x8f866dd5
  411a99:	adc    edi,DWORD PTR [edx]
  411a9b:	push   ecx
  411a9c:	push   eax
  411a9d:	in     eax,0x93
  411a9f:	xchg   ebx,eax
  411aa0:	shl    BYTE PTR [ebx+ebp*4+0x4d7cf198],1
  411aa7:	xchg   edx,eax
  411aa8:	add    BYTE PTR [ecx+edx*2],0xde
  411aac:	out    0x0,eax
  411aae:	push   es
  411aaf:	inc    edx
  411ab0:	add    al,0x1b
  411ab2:	js     0x411b2a
  411ab4:	les    edx,FWORD PTR [esi-0x289436b1]
  411aba:	mov    ecx,DWORD PTR [esi]
  411abc:	xchg   edi,eax
  411abd:	cmc    
  411abe:	sbb    esi,DWORD PTR [ecx]
  411ac0:	mov    cl,0xc3
  411ac2:	sub    DWORD PTR [edx+0x13],eax
  411ac5:	mov    ds:0xde7c50a7,al
  411aca:	fdivr  QWORD PTR [eax-0x976d95f]
  411ad0:	fadd   st,st(2)
  411ad2:	pop    ebx
  411ad3:	xchg   edx,eax
  411ad4:	inc    ebx
  411ad5:	popf   
  411ad6:	out    dx,al
  411ad7:	or     ecx,DWORD PTR [ecx+0x2d5c8fb1]
  411add:	xchg   edx,eax
  411ade:	ror    BYTE PTR [ecx],1
  411ae0:	sbb    edi,DWORD PTR [ebx-0x502cdaf7]
  411ae6:	ds adc edx,0xa02b7296
  411aed:	sub    ebp,esi
  411aef:	mov    ?,WORD PTR [ebx-0x1c]
  411af2:	fwait
  411af3:	add    eax,0x5054974a
  411af8:	fsubrp st(6),st
  411afa:	dec    ebp
  411afb:	leave  
  411afc:	push   ss
  411afd:	pop    esp
  411afe:	fsub   QWORD PTR [eax+0x163d137c]
  411b04:	dec    ecx
  411b05:	mov    BYTE PTR [eax+ebp*2],ch
  411b08:	sub    DWORD PTR [eax+0x6c],edx
  411b0b:	out    0x61,al
  411b0d:	leave  
  411b0e:	retf   
  411b0f:	dec    edi
  411b10:	ror    edx,0x71
  411b13:	out    0x99,eax
  411b15:	xor    ecx,esp
  411b17:	or     eax,0x3190e389
  411b1c:	xlat   BYTE PTR ds:[ebx]
  411b1d:	xlat   BYTE PTR ds:[ebx]
  411b1e:	pusha  
  411b1f:	mov    edi,0xe5387660
  411b24:	sti    
  411b25:	call   0xb69e:0xebe0d043
  411b2c:	xchg   edi,eax
  411b2d:	hlt    
  411b2e:	dec    esi
  411b2f:	sbb    al,0x53
  411b31:	mov    ds:0xd79b7e6b,al
  411b36:	out    dx,eax
  411b37:	mov    edi,DWORD PTR ds:0x73302de0
  411b3d:	test   al,0xd6
  411b3f:	aas    
  411b40:	fcmovb st,st(1)
  411b42:	push   edx
  411b43:	push   ebp
  411b44:	xchg   esi,eax
  411b45:	cmp    DWORD PTR [edx],edx
  411b47:	xchg   ebp,eax
  411b48:	xor    eax,0x4a80ae06
  411b4d:	pop    esp
  411b4e:	mov    cl,0xc1
  411b50:	aaa    
  411b51:	push   eax
  411b52:	dec    esi
  411b53:	push   cs
  411b54:	or     eax,DWORD PTR [edi+0x79]
  411b57:	jne    0x411b07
  411b59:	cmp    BYTE PTR [esi+0x57],ch
  411b5c:	iret   
  411b5d:	dec    esp
  411b5e:	mov    edx,esi
  411b60:	repnz mov ebx,0xb620583c
  411b66:	fs scas al,BYTE PTR es:[edi]
  411b68:	or     al,0xc5
  411b6a:	ror    DWORD PTR [edx],0x53
  411b6d:	imul   ecx,DWORD PTR [esp+esi*8+0x8],0x9530b278
  411b75:	outs   dx,BYTE PTR ds:[esi]
  411b76:	jns    0x411bdf
  411b78:	iret   
  411b79:	mov    ds:0xe6a5770d,al
  411b7e:	dec    edi
  411b7f:	cmp    BYTE PTR [ecx+0x6f],dh
  411b82:	icebp  
  411b83:	jo     0x411b1f
  411b85:	mov    esp,0x9941fa75
  411b8a:	cmp    eax,0x7322c104
  411b8f:	add    ebx,DWORD PTR [ecx-0x4aa90d19]
  411b95:	jns    0x411b1e
  411b97:	fdivr  QWORD PTR [eax-0x478dc858]
  411b9d:	out    0xb,eax
  411b9f:	adc    DWORD PTR [eax+0x7d2a8b7f],edx
  411ba5:	sbb    DWORD PTR ds:0x760c992d,ecx
  411bab:	fs add eax,0xac73f2c4
  411bb1:	or     edi,ecx
  411bb3:	mov    edx,0x79974c3e
  411bb8:	cmp    BYTE PTR [ebp-0x5f913722],dl
  411bbe:	pop    edx
  411bbf:	aaa    
  411bc0:	ret    0x7954
  411bc3:	pop    ebx
  411bc4:	fst    st(2)
  411bc6:	ss stos BYTE PTR es:[edi],al
  411bc8:	mov    BYTE PTR [ebp-0x729495b7],dh
  411bce:	psrlw  mm7,mm6
  411bd1:	mov    eax,0x7c0d419a
  411bd6:	enter  0x9bc4,0x94
  411bda:	stos   BYTE PTR es:[edi],al
  411bdb:	aad    0x21
  411bdd:	wrmsr  
  411bdf:	mov    edi,DWORD PTR [ecx-0x2205b569]
  411be5:	jnp    0x411c42
  411be7:	int3   
  411be8:	jo     0x411c54
  411bea:	inc    esp
  411beb:	sub    esi,edx
  411bed:	xor    BYTE PTR [edi+0x1bc2be40],al
  411bf3:	adc    eax,0xaf2696ed
  411bf8:	int3   
  411bf9:	mov    ch,BYTE PTR [esi]
  411bfb:	xlat   BYTE PTR ds:[ebx]
  411bfc:	daa    
  411bfd:	dec    ecx
  411bfe:	push   ss
  411bff:	lds    ebx,FWORD PTR [esi+0x7b947227]
  411c05:	adc    eax,DWORD PTR [ebp+0x56398411]
  411c0b:	into   
  411c0c:	out    0xf1,al
  411c0e:	or     eax,0x7d414da3
  411c13:	hlt    
  411c14:	xor    esp,eax
  411c16:	stos   DWORD PTR es:[edi],eax
  411c17:	lea    ecx,[ebx+0x1e4d654d]
  411c1d:	mov    ebx,0x34630a81
  411c22:	mov    DWORD PTR [eax],ecx
  411c24:	rcl    DWORD PTR [edx],1
  411c26:	xchg   esp,eax
  411c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c28:	test   al,0xf5
  411c2a:	add    dh,dh
  411c2c:	out    0xb8,al
  411c2e:	xor    bl,BYTE PTR [ebx+ecx*1+0x7a]
  411c32:	sbb    edi,DWORD PTR [edi]
  411c34:	icebp  
  411c35:	shl    BYTE PTR ds:0x7ea3708b,cl
  411c3b:	mov    cl,0x3c
  411c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c3e:	inc    ebp
  411c3f:	int    0xae
  411c41:	cmp    DWORD PTR [edi],esi
  411c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c44:	push   dx
  411c46:	inc    edx
  411c47:	sub    al,0xb
  411c49:	add    DWORD PTR [esi-0xda8e51d],0xffffffd8
  411c50:	pop    ebp
  411c51:	adc    edi,edx
  411c53:	out    0x13,al
  411c55:	sbb    al,BYTE PTR [edi+0x2b]
  411c58:	cmp    bl,bh
  411c5a:	mov    esp,0x693cf4b7
  411c5f:	add    dh,bh
  411c61:	xor    ebp,DWORD PTR [edx-0x46]
  411c64:	inc    ecx
  411c65:	inc    esp
  411c66:	imul   edi,DWORD PTR [edx+0x2a],0x5bfaaa58
  411c6d:	test   BYTE PTR [ebx],0x85
  411c70:	fwait
  411c71:	js     0x411c4f
  411c73:	push   ecx
  411c74:	popa   
  411c75:	in     eax,0x3e
  411c77:	loop   0x411c07
  411c79:	jb     0x411c2d
  411c7b:	add    bh,cl
  411c7d:	cld    
  411c7e:	stos   DWORD PTR es:[edi],eax
  411c7f:	mov    esp,0xd88b3331
  411c84:	cmp    esp,DWORD PTR [edi+ecx*8-0x73]
  411c88:	outs   dx,BYTE PTR ds:[esi]
  411c89:	mov    eax,ds:0x7a57c540
  411c8e:	aad    0x2f
  411c90:	jbe    0x411c23
  411c92:	stos   BYTE PTR es:[edi],al
  411c93:	dec    ebx
  411c94:	sti    
  411c95:	loope  0x411c6d
  411c97:	mov    ecx,0xf06e3f12
  411c9c:	sbb    DWORD PTR [edi+eiz*4],esi
  411c9f:	pop    ecx
  411ca0:	mov    bl,0xff
  411ca2:	cld    
  411ca3:	xor    edx,DWORD PTR [edi+0x44]
  411ca6:	pop    ecx
  411ca7:	mov    WORD PTR [eax-0x73],ds
  411caa:	mov    ds:0x3f91f2d8,al
  411caf:	pop    ebx
  411cb0:	jge    0x411c3a
  411cb2:	nop
  411cb3:	rol    cl,1
  411cb5:	cld    
  411cb6:	lods   eax,DWORD PTR ds:[esi]
  411cb7:	test   al,0x84
  411cb9:	or     al,0xb9
  411cbb:	xchg   esi,eax
  411cbc:	mov    bh,0x65
  411cbe:	inc    ecx
  411cbf:	fist   WORD PTR [ecx]
  411cc1:	outs   dx,DWORD PTR ds:[esi]
  411cc2:	dec    ecx
  411cc3:	mov    bh,0x82
  411cc5:	je     0x411cce
  411cc7:	adc    DWORD PTR [esi+0x6816c2b2],ebx
  411ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cce:	pop    DWORD PTR [edi+0x18]
  411cd1:	jbe    0x411caa
  411cd3:	jb     0x411ca2
  411cd5:	xchg   edi,eax
  411cd6:	ja     0x411d17
  411cd8:	adc    BYTE PTR [edi],bl
  411cda:	aam    0x6e
  411cdc:	inc    ebp
  411cdd:	push   es
  411cde:	mov    al,0x7a
  411ce0:	sbb    DWORD PTR [ebp+0x17225540],ebp
  411ce6:	pusha  
  411ce7:	imul   esi,DWORD PTR [esi-0x4a1e1001],0xd0a763ce
  411cf1:	dec    esp
  411cf2:	sub    bh,BYTE PTR [eax]
  411cf4:	mov    esi,0x583f6c7a
  411cf9:	aaa    
  411cfa:	add    ebx,DWORD PTR [ebx-0x77f82fc1]
  411d00:	dec    esp
  411d01:	scas   eax,DWORD PTR es:[edi]
  411d02:	pop    ecx
  411d03:	mov    gs,WORD PTR fs:0x78034c47
  411d0a:	inc    DWORD PTR [ebp+0x21]
  411d0d:	adc    eax,0xcb6d5e6a
  411d12:	bnd jns 0x411cc3
  411d15:	retf   0x7820
  411d18:	mov    bl,0xb0
  411d1a:	aaa    
  411d1b:	xchg   DWORD PTR [edx-0x17d49bc],esp
  411d21:	pushf  
  411d22:	(bad)  
  411d23:	fisubr DWORD PTR [esi]
  411d25:	pop    esi
  411d26:	shl    cl,1
  411d28:	popf   
  411d29:	xchg   esp,eax
  411d2a:	dec    edi
  411d2b:	je     0x411d8e
  411d2d:	scas   eax,DWORD PTR es:[edi]
  411d2e:	xlat   BYTE PTR ds:[ebx]
  411d2f:	cmp    DWORD PTR [ebx+0x70c8429f],esp
  411d35:	or     esi,DWORD PTR [ebp+esi*2+0x74]
  411d39:	rol    DWORD PTR [eax+0x44],cl
  411d3c:	arpl   WORD PTR [eax-0x1e],si
  411d3f:	jns    0x411d5b
  411d41:	cmovns ebx,DWORD PTR [ebp-0x62]
  411d45:	inc    esi
  411d46:	xchg   BYTE PTR [edx],dh
  411d48:	pop    ss
  411d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d4a:	jo     0x411dc5
  411d4c:	jo     0x411d10
  411d4e:	jns    0x411d43
  411d50:	cmc    
  411d51:	mov    al,0xba
  411d53:	lods   al,BYTE PTR ds:[esi]
  411d54:	xor    eax,0xd7e401d
  411d59:	mov    ebx,0x5836502c
  411d5e:	inc    edx
  411d5f:	pop    eax
  411d60:	hlt    
  411d61:	sahf   
  411d62:	aad    0xbd
  411d64:	pop    ds
  411d65:	jns    0x411d1a
  411d67:	mov    bh,0xd3
  411d69:	mov    esp,0x466dc724
  411d6e:	in     al,dx
  411d6f:	pop    es
  411d70:	int    0x73
  411d72:	in     eax,0x96
  411d74:	jae    0x411da2
  411d76:	pop    es
  411d77:	xlat   BYTE PTR ds:[ebx]
  411d78:	jo     0x411d4d
  411d7a:	add    BYTE PTR [eax],0xae
  411d7d:	sub    al,0xf
  411d7f:	inc    edx
  411d80:	loopne 0x411daf
  411d82:	mov    dl,0x52
  411d84:	js     0x411dee
  411d86:	xchg   ecx,eax
  411d87:	pop    ds
  411d88:	outs   dx,DWORD PTR ds:[esi]
  411d89:	inc    edx
  411d8a:	pop    ecx
  411d8b:	cmp    DWORD PTR [ebx+0x52cc2351],ebp
  411d91:	stos   DWORD PTR es:[edi],eax
  411d92:	rol    esp,1
  411d94:	dec    ecx
  411d95:	push   esp
  411d96:	mov    al,0x2e
  411d98:	xor    esp,DWORD PTR [esi-0x60]
  411d9b:	jecxz  0x411d6f
  411d9d:	scas   eax,DWORD PTR es:[edi]
  411d9e:	in     eax,dx
  411d9f:	jo     0x411dea
  411da1:	stc    
  411da2:	pop    ecx
  411da3:	sar    BYTE PTR [edx+eax*2-0x39],0xb6
  411da8:	test   al,0x64
  411daa:	mov    cl,0x9a
  411dac:	int3   
  411dad:	fist   DWORD PTR [eax-0x67]
  411db0:	jmp    0x19312e46
  411db5:	lock or al,0x19
  411db8:	jl     0x411def
  411dba:	(bad)  
  411dbb:	idiv   BYTE PTR [eax-0x7758ad1e]
  411dc1:	cld    
  411dc2:	out    dx,al
  411dc3:	inc    eax
  411dc4:	sub    BYTE PTR [ecx],al
  411dc6:	data16 jo 0x411e33
  411dc9:	mov    ds:0xa3425b20,eax
  411dce:	lahf   
  411dcf:	cmp    al,0xc3
  411dd1:	dec    esp
  411dd2:	stos   DWORD PTR es:[edi],eax
  411dd3:	bound  ebp,QWORD PTR [eax-0x62]
  411dd6:	loop   0x411e23
  411dd8:	sbb    DWORD PTR [ecx+eax*8+0x42],edx
  411ddc:	test   eax,0x78643cdc
  411de1:	mov    ecx,0xd953f9d1
  411de6:	inc    ecx
  411de7:	std    
  411de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de9:	add    bh,BYTE PTR [eax-0x66]
  411dec:	retf   0x803f
  411def:	sbb    ax,0x3740
  411df3:	clc    
  411df4:	pop    edx
  411df5:	loope  0x411e20
  411df7:	dec    ecx
  411df8:	jmp    0x7dbf:0x16d51162
  411dff:	sbb    esp,edi
  411e01:	xchg   esp,edx
  411e03:	repz imul BYTE PTR [ebp+0x39a6f935]
  411e0a:	mov    bl,dh
  411e0c:	cmp    BYTE PTR [ebx-0x6dc721df],cl
  411e12:	sti    
  411e13:	push   0xa6cafe0
  411e18:	fild   WORD PTR [ecx+0x6f2f9003]
  411e1e:	push   esp
  411e1f:	cmp    edx,DWORD PTR [ecx+esi*4]
  411e22:	or     eax,0x7d5a096
  411e27:	pop    ecx
  411e28:	dec    eax
  411e29:	imul   ebx,edi,0x3f
  411e2c:	outs   dx,DWORD PTR ds:[esi]
  411e2d:	push   edi
  411e2e:	fbld   TBYTE PTR [ebx-0xc577c45]
  411e34:	xor    ecx,ebx
  411e36:	test   ecx,eax
  411e38:	xchg   esi,eax
  411e39:	aam    0xa0
  411e3b:	retf   0x8a4
  411e3e:	daa    
  411e3f:	imul   ecx,DWORD PTR [ecx-0x4e],0xb85cbc9
  411e46:	mov    WORD PTR [esi],cs
  411e48:	xor    dh,BYTE PTR [ebp+eax*4-0x5d79c8b1]
  411e4f:	shl    BYTE PTR [ebp-0x25ba7bc1],cl
  411e55:	sub    BYTE PTR [esi-0x24],ch
  411e58:	std    
  411e59:	(bad)  
  411e5b:	test   ch,0x9d
  411e5e:	ret    0xe17
  411e61:	pusha  
  411e62:	mov    bh,BYTE PTR [ebx+0x5a]
  411e65:	sar    BYTE PTR [ebx+0x2d],0xf4
  411e69:	add    cl,BYTE PTR [ebx]
  411e6b:	jae    0x411ee2
  411e6d:	pop    ecx
  411e6e:	mov    cl,0xd5
  411e70:	test   eax,0x5932f3b4
  411e75:	pop    ss
  411e76:	les    esi,FWORD PTR [edi-0x6f]
  411e79:	inc    ebp
  411e7a:	(bad)  
  411e7b:	and    ebp,edi
  411e7d:	or     ebp,0x5d5e968e
  411e83:	sbb    ebp,DWORD PTR [esi-0x3afe7228]
  411e89:	ret    0x5b8
  411e8c:	scas   al,BYTE PTR es:[edi]
  411e8d:	add    bl,dl
  411e8f:	sub    al,BYTE PTR [ebx]
  411e91:	xchg   BYTE PTR [ebx-0x680602e4],bh
  411e97:	dec    esp
  411e98:	pop    esp
  411e99:	dec    eax
  411e9a:	mov    esi,0x4574debd
  411e9f:	stos   DWORD PTR es:[edi],eax
  411ea0:	loope  0x411e66
  411ea2:	adc    ebx,DWORD PTR [edi]
  411ea4:	loop   0x411eeb
  411ea6:	ja     0x411ee5
  411ea8:	push   edx
  411ea9:	sub    cl,BYTE PTR [esi+0x78]
  411eac:	mov    ecx,0x25e19099
  411eb1:	xchg   esp,eax
  411eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb3:	shl    DWORD PTR [ebx],0xf1
  411eb6:	sub    al,0x20
  411eb8:	pop    es
  411eb9:	bound  esi,QWORD PTR [edx+eax*2-0x5527d3f9]
  411ec0:	dec    eax
  411ec1:	ret    0xd84b
  411ec4:	mov    edi,0x7e83ba2f
  411ec9:	ins    BYTE PTR es:[edi],dx
  411eca:	push   eax
  411ecb:	ror    BYTE PTR [ecx-0x76ac80d5],1
  411ed1:	or     DWORD PTR [ecx-0x360683eb],esi
  411ed7:	jle    0x411ea8
  411ed9:	repnz mov esi,0xcb6ccd07
  411edf:	jmp    0xcaad6571
  411ee4:	cmc    
  411ee5:	and    eax,0xbf718ad9
  411eea:	(bad)
  411eed:	cmp    al,0x63
  411eef:	stos   DWORD PTR es:[edi],eax
  411ef0:	pushf  
  411ef1:	adc    DWORD PTR [ebx-0x6253f360],0x13
  411ef8:	shl    BYTE PTR [ecx+esi*4+0x7d6165f3],1
  411eff:	fisub  DWORD PTR [edi+0xb674275]
  411f05:	sbb    al,dl
  411f07:	retf   
  411f08:	ja     0x411f2c
  411f0a:	sbb    eax,0x4211e3ab
  411f0f:	jl     0x411f42
  411f11:	adc    DWORD PTR [edi-0x2a],0xffffffbb
  411f15:	pop    esp
  411f16:	add    eax,0x737b0ebe
  411f1b:	jnp    0x411ec8
  411f1d:	dec    esp
  411f1e:	rcl    BYTE PTR [ebx-0x35e566a9],cl
  411f24:	pop    esi
  411f25:	mov    ch,0x72
  411f27:	imul   edi,DWORD PTR [ecx+ebx*4-0x2a],0x2a68083
  411f2f:	pop    edx
  411f30:	sub    ecx,edx
  411f32:	pop    edx
  411f33:	rcr    BYTE PTR [edi+0x3b32f6e6],cl
  411f39:	retf   
  411f3a:	test   ch,cl
  411f3c:	icebp  
  411f3d:	je     0x411f55
  411f3f:	push   ebp
  411f40:	dec    edx
  411f41:	inc    edx
  411f42:	cmp    edx,edi
  411f44:	mov    cl,0x3d
  411f46:	pop    ebx
  411f47:	xchg   esi,eax
  411f48:	xor    al,0x6
  411f4a:	fadd   QWORD PTR [esi-0x364effe2]
  411f50:	mov    bh,0x82
  411f52:	das    
  411f53:	neg    BYTE PTR [esi-0x62]
  411f56:	xchg   BYTE PTR [eax],ch
  411f58:	scas   al,BYTE PTR es:[edi]
  411f59:	lar    esi,WORD PTR [ecx-0x6d]
  411f5d:	dec    ebx
  411f5e:	(bad)  
  411f5f:	not    BYTE PTR [edx+ecx*4-0x1183b3b6]
  411f66:	mov    eax,0x80908727
  411f6b:	fwait
  411f6c:	mov    esi,0xec04efd3
  411f71:	lahf   
  411f72:	sbb    al,0x1c
  411f74:	pop    ds
  411f75:	cmc    
  411f76:	or     BYTE PTR [ebp+0x2d641be],bl
  411f7c:	daa    
  411f7d:	cmp    ebp,0x796610a5
  411f83:	bound  ebx,QWORD PTR [eax+eiz*1-0x63c0c0f2]
  411f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8b:	enter  0x30ef,0x35
  411f8f:	jb     0x411f98
  411f91:	fcomp  QWORD PTR [eax+0x16]
  411f94:	popa   
  411f95:	jle    0x411fb9
  411f97:	sbb    al,0x24
  411f99:	sahf   
  411f9a:	pop    ebx
  411f9b:	sub    ebp,ebp
  411f9d:	jbe    0x411f40
  411f9f:	mov    bh,0x64
  411fa1:	mov    dh,ah
  411fa3:	sbb    ebp,DWORD PTR [ecx]
  411fa5:	push   edx
  411fa6:	fstsw  WORD PTR [ebx+0x32]
  411faa:	je     0x411fcc
  411fac:	test   esp,0x32e29dbb
  411fb2:	push   ss
  411fb3:	push   esi
  411fb4:	retf   
  411fb5:	pop    edx
  411fb6:	or     edx,ebp
  411fb8:	in     eax,0xae
  411fba:	sub    esi,DWORD PTR [edi-0x52e07f46]
  411fc0:	mov    bh,0x1d
  411fc2:	mov    cs,WORD PTR [ecx-0x156879d1]
  411fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc9:	jmp    0x411fbe
  411fcb:	pop    ds
  411fcc:	sbb    esi,DWORD PTR [ebx+edx*8]
  411fcf:	shr    DWORD PTR ds:0xec85679e,cl
  411fd5:	sbb    DWORD PTR [edx+0xfbb58b9],ecx
  411fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fdc:	push   ecx
  411fdd:	sbb    BYTE PTR [ebp+0x4d97a3c2],ch
  411fe3:	sub    BYTE PTR [bx+0x79],0x5f
  411fe8:	mov    BYTE PTR [eax-0x1b],bl
  411feb:	retf   
  411fec:	push   0x62
  411fee:	fld    QWORD PTR [esp+edi*2+0x52]
  411ff2:	inc    eax
  411ff3:	push   edi
  411ff4:	cmp    al,0xbe
  411ff6:	mov    cs,esp
  411ff8:	call   FWORD PTR [edi-0x47]
  411ffb:	gs jnp 0x411ffe
  411ffe:	push   eax
  411fff:	xor    eax,0x7764e461
  412004:	es pushf 
  412006:	or     al,0x2c
  412008:	sahf   
  412009:	xlat   BYTE PTR ds:[ebx]
  41200a:	hlt    
  41200b:	call   0xa1af:0xc7a6dca1
  412012:	push   eax
  412013:	inc    edx
  412014:	xor    esp,0x5102fd84
  41201a:	cwde   
  41201b:	pop    esi
  41201c:	push   es
  41201d:	scas   al,BYTE PTR es:[edi]
  41201e:	int    0xc8
  412020:	daa    
  412021:	ror    DWORD PTR ds:0x73495645,1
  412027:	stos   BYTE PTR es:[edi],al
  412028:	push   ebx
  412029:	retf   0x59ab
  41202c:	out    dx,al
  41202d:	sub    ch,bl
  41202f:	mov    ch,0xed
  412031:	repnz add BYTE PTR [ebp+eax*8+0xa],cl
  412036:	cli    
  412037:	xor    eax,0xb6f94f5d
  41203c:	enter  0xca81,0x68
  412040:	in     eax,dx
  412041:	aad    0xa6
  412043:	ss cld 
  412045:	mov    ch,0xc
  412047:	icebp  
  412048:	jp     0x412040
  41204a:	hlt    
  41204b:	xchg   esi,eax
  41204c:	mov    ecx,0x9a89dd79
  412051:	out    0x19,al
  412053:	pop    eax
  412054:	push   esi
  412055:	or     al,0xaa
  412057:	pop    edi
  412058:	cwde   
  412059:	sbb    DWORD PTR [ecx-0x51c6825e],edi
  41205f:	add    BYTE PTR [edx-0x15],dl
  412062:	(bad)
  412066:	or     BYTE PTR [edi+0x59],dl
  412069:	add    DWORD PTR [ebx+0x1e21dbfd],edi
  41206f:	repz jne 0x4120ee
  412072:	(bad)  
  412073:	mov    edi,0xc2c25462
  412078:	inc    ebx
  412079:	push   0x77629c5a
  41207e:	sub    al,0x5e
  412080:	add    eax,0xf36b064b
  412085:	les    esp,FWORD PTR cs:[ebx+eax*2-0x5565cb2b]
  41208d:	sti    
  41208e:	lods   eax,DWORD PTR ds:[esi]
  41208f:	popa   
  412090:	jmp    0xb4f0:0x9152a934
  412097:	test   BYTE PTR [edi],ah
  412099:	mov    bh,0x3
  41209b:	push   edi
  41209c:	xchg   BYTE PTR [esi-0x226f96e8],bh
  4120a2:	pop    ecx
  4120a3:	pop    edx
  4120a4:	push   edx
  4120a5:	sbb    cl,BYTE PTR [ecx]
  4120a7:	cmp    DWORD PTR [edi],ebp
  4120a9:	fisub  WORD PTR [eax+0x198fe59e]
  4120af:	loopne 0x412069
  4120b1:	adc    BYTE PTR [ebx],al
  4120b3:	dec    esp
  4120b4:	sahf   
  4120b5:	stos   DWORD PTR es:[edi],eax
  4120b6:	out    0x1f,eax
  4120b8:	imul   edi,DWORD PTR [ebp+0x53],0x675d676a
  4120bf:	cdq    
  4120c0:	and    al,0xb8
  4120c2:	shl    BYTE PTR [edx-0x7ddbeb77],0x1f
  4120c9:	stos   DWORD PTR es:[edi],eax
  4120ca:	xor    cl,BYTE PTR ds:0xf6faa322
  4120d0:	shl    DWORD PTR [eax+0x5f507b7a],1
  4120d6:	add    DWORD PTR [edx+0x64f2c006],edi
  4120dc:	dec    DWORD PTR [edi+0x1f]
  4120df:	mov    edx,0xc9801da9
  4120e4:	mov    DWORD PTR [esi+edi*1],ecx
  4120e7:	cli    
  4120e8:	inc    ebx
  4120e9:	add    DWORD PTR [ebx+edx*1],eax
  4120ec:	jmp    0x412094
  4120ee:	xchg   ebx,eax
  4120ef:	cmp    al,0x6e
  4120f1:	ins    DWORD PTR es:[edi],dx
  4120f2:	shr    DWORD PTR [ebx],0x1b
  4120f5:	or     al,0xfc
  4120f7:	push   edi
  4120f8:	cmp    dl,BYTE PTR [esi-0x62]
  4120fb:	gs pop esi
  4120fd:	and    bl,BYTE PTR [ebx-0x4a]
  412100:	push   ecx
  412101:	jns    0x4120c2
  412103:	mov    BYTE PTR ds:0xab14c0c,al
  412109:	push   ecx
  41210a:	mov    eax,ds:0xb834b998
  41210f:	test   DWORD PTR ds:0x7fc80b93,0x756648cf
  412119:	test   eax,eax
  41211b:	pop    edx
  41211c:	(bad)  
  41211d:	jmp    0xe5c9c3ad
  412122:	neg    DWORD PTR [ecx+0x1ccac441]
  412128:	test   cl,dh
  41212a:	cs loopne 0x412195
  41212d:	bound  eax,QWORD PTR [edi+ecx*1-0x15692506]
  412134:	mov    ah,0x38
  412136:	clc    
  412137:	fidivr DWORD PTR [ebx+0x2eacda6f]
  41213d:	push   ebx
  41213e:	sub    cl,BYTE PTR [edx]
  412140:	cli    
  412141:	push   ebp
  412142:	fldenv [esi-0x39]
  412145:	jno    0x4120f0
  412147:	jp     0x412186
  412149:	inc    edx
  41214a:	pusha  
  41214b:	(bad)
  41214e:	and    eax,0x2d426ac5
  412153:	imul   ebx,DWORD PTR [ebp-0x53],0x4a
  412157:	fisub  DWORD PTR [edx+0x1a]
  41215a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215b:	dec    esi
  41215c:	or     DWORD PTR [ecx+0x6c3f7cfb],ecx
  412162:	mov    ah,0x9b
  412164:	loopne 0x4120f1
  412166:	repz stc 
  412168:	jno    0x41217c
  41216a:	dec    ecx
  41216b:	jmp    0x4121e9
  41216d:	loope  0x412101
  41216f:	cld    
  412170:	(bad)  
  412171:	fistp  WORD PTR [edx+0xd4d3888]
  412177:	adc    DWORD PTR [eax-0x118e2007],0x3cb21fbb
  412181:	test   al,0xf3
  412183:	addr16 (bad) 
  412185:	loop   0x412151
  412187:	add    al,0x62
  412189:	aas    
  41218a:	and    eax,0x1fdeaecb
  41218f:	aaa    
  412190:	test   DWORD PTR [eax],esi
  412192:	dec    ebp
  412193:	sar    BYTE PTR [edi-0x19],0x37
  412197:	sub    esp,edx
  412199:	sbb    BYTE PTR [edx+0x7f6ffb4d],ch
  41219f:	gs inc ebx
  4121a1:	push   0xfe085d45
  4121a6:	fstp   DWORD PTR [edi-0xf3d94bc]
  4121ac:	sbb    DWORD PTR [edx+0x2b],esi
  4121af:	add    DWORD PTR [ebx],esi
  4121b1:	or     cl,dl
  4121b3:	push   esp
  4121b4:	inc    edx
  4121b5:	dec    esi
  4121b6:	push   es
  4121b7:	pop    esp
  4121b8:	loope  0x41213a
  4121ba:	fbstp  TBYTE PTR [eax-0x1]
  4121bd:	in     eax,0xc6
  4121bf:	xor    bh,BYTE PTR [edx-0x4c07d918]
  4121c5:	mov    BYTE PTR ds:0xfaa0819b,dh
  4121cb:	xchg   edi,eax
  4121cc:	inc    esi
  4121cd:	jp     0x412229
  4121cf:	push   edi
  4121d0:	fsubr  DWORD PTR [ecx+eiz*8+0x56]
  4121d4:	(bad)  
  4121d5:	or     al,0x43
  4121d7:	stos   DWORD PTR es:[edi],eax
  4121d8:	call   0x6592:0xd35a1ffc
  4121df:	pop    ecx
  4121e0:	pop    ss
  4121e1:	jmp    0xbfb0:0xb2feda8b
  4121e8:	inc    ebp
  4121e9:	idiv   BYTE PTR [ecx]
  4121eb:	mov    edx,0x2e3e2c74
  4121f0:	imul   ebx,DWORD PTR [esi+ebx*8+0x11078aca],0xffffffcd
  4121f8:	xchg   edx,eax
  4121f9:	cmp    al,0xf0
  4121fb:	enter  0x8e0e,0x1f
  4121ff:	xchg   ebx,eax
  412200:	loop   0x41220c
  412202:	inc    ecx
  412203:	pop    eax
  412204:	cmc    
  412205:	pop    ecx
  412206:	push   0xffffffc6
  412208:	adc    al,0x22
  41220a:	mov    esi,0x1f2f0e9
  41220f:	mov    esi,0xedbe27a6
  412214:	xor    bl,BYTE PTR [esi]
  412216:	xchg   edi,eax
  412217:	fwait
  412218:	jl     0x412230
  41221a:	mov    al,0x62
  41221c:	int    0x61
  41221e:	mov    ch,0xd9
  412220:	sub    eax,DWORD PTR [edi+0x41c8805e]
  412226:	unpckhps xmm7,XMMWORD PTR [eax]
  412229:	dec    esp
  41222a:	out    dx,eax
  41222b:	mov    ebx,eax
  41222d:	push   esi
  41222e:	aad    0xbd
  412230:	sub    ch,BYTE PTR [edx]
  412232:	push   edx
  412233:	iret   
  412234:	xor    ebp,esp
  412236:	sbb    al,0x1c
  412238:	test   eax,0x5015a609
  41223d:	lods   al,BYTE PTR ds:[esi]
  41223e:	sub    al,0x69
  412240:	enter  0xb9b,0x46
  412244:	mov    ds:0x11eb2705,eax
  412249:	pop    ebp
  41224a:	xchg   BYTE PTR [edi+0x6b],cl
  41224d:	pushf  
  41224e:	ret    
  41224f:	mov    DWORD PTR [edi+0x4a],eax
  412252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412253:	cli    
  412254:	sub    eax,0x8588302e
  412259:	inc    esi
  41225a:	inc    eax
  41225b:	fiadd  DWORD PTR [eax+esi*1-0x2b]
  41225f:	xchg   esp,eax
  412260:	or     DWORD PTR [ecx-0x32],0xb8dba66c
  412267:	lock lods al,BYTE PTR ds:[esi]
  412269:	popf   
  41226a:	mov    eax,ds:0x56293f47
  41226f:	test   eax,0x7533fc15
  412274:	aaa    
  412275:	fdivr  DWORD PTR [ecx+ebx*8+0x443b0599]
  41227c:	push   ecx
  41227d:	add    al,BYTE PTR [ebp-0x69]
  412280:	add    BYTE PTR [edi-0x23956b62],al
  412286:	inc    ebp
  412287:	arpl   WORD PTR [ebx+0x7a],si
  41228a:	fiadd  DWORD PTR [esi]
  41228c:	inc    eax
  41228d:	pop    esi
  41228e:	ret    0xc39c
  412291:	adc    DWORD PTR [eax-0x68],0xa
  412295:	push   cs
  412296:	fcomp  DWORD PTR [esi+edi*1]
  412299:	ja     0x4122fd
  41229b:	add    ebp,DWORD PTR [edx+0x2a]
  41229e:	mov    edi,0x1936766c
  4122a3:	jle    0x41224d
  4122a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122a6:	pushf  
  4122a7:	sub    al,0x6d
  4122a9:	(bad)  [edx]
  4122ab:	or     al,0xe2
  4122ad:	pop    ecx
  4122ae:	jne    0x4122f8
  4122b0:	push   ds
  4122b1:	stos   BYTE PTR es:[edi],al
  4122b2:	sub    DWORD PTR [edi-0x1857340e],ecx
  4122b8:	ins    BYTE PTR es:[edi],dx
  4122b9:	mov    cl,0xac
  4122bb:	and    al,0xd7
  4122bd:	inc    ebx
  4122be:	xor    DWORD PTR [edi+ecx*1-0x2],esi
  4122c2:	rcr    al,1
  4122c4:	cmp    ebp,0x75
  4122c7:	xor    al,0x3a
  4122c9:	cs cmp eax,0xdbbd19d8
  4122cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d0:	xor    BYTE PTR [esi],ah
  4122d2:	shl    BYTE PTR [eax-0x5e],1
  4122d5:	add    BYTE PTR [edx+0x5d],ch
  4122d8:	jmp    0x3cee60d7
  4122dd:	sbb    eax,eax
  4122df:	(bad)  
  4122e0:	dec    ebp
  4122e1:	pshufw mm6,QWORD PTR [ecx+0x65],0x43
  4122e6:	sahf   
  4122e7:	out    dx,al
  4122e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e9:	stc    
  4122ea:	sub    cl,dh
  4122ec:	push   0x9da1e7f9
  4122f1:	xor    eax,0xb0c6fb98
  4122f6:	mov    ?,WORD PTR ds:[edi-0x17]
  4122fa:	cld    
  4122fb:	push   ss
  4122fc:	idiv   esi
  4122fe:	ins    DWORD PTR es:[edi],dx
  4122ff:	jmp    0x4122fc
  412301:	adc    ch,BYTE PTR [ecx]
  412303:	fadd   DWORD PTR [ebx]
  412305:	pusha  
  412306:	pop    es
  412307:	fsub   DWORD PTR [edx-0x2d5d443]
  41230d:	adc    al,0x23
  41230f:	aam    0xe4
  412311:	xor    al,0xc1
  412313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412314:	daa    
  412315:	jne    0x4122bf
  412317:	jg     0x412358
  412319:	repnz pop ds
  41231b:	cs mov cl,0xc0
  41231e:	adc    ebx,ebp
  412320:	and    DWORD PTR [eax-0x7a356859],esp
  412326:	inc    esi
  412327:	cmp    bh,BYTE PTR [edx-0x6e]
  41232a:	fisub  DWORD PTR [ecx]
  41232c:	ret    
  41232d:	loop   0x412322
  41232f:	test   DWORD PTR [eax+0x59],ebp
  412332:	xchg   esi,eax
  412333:	repnz in al,dx
  412335:	shr    DWORD PTR [esi-0x15],1
  412338:	ret    
  412339:	dec    edi
  41233a:	(bad)  
  41233b:	mov    ecx,0xd2e35db3
  412340:	xchg   ebp,eax
  412341:	mov    BYTE PTR [ecx+ebp*4],ah
  412344:	or     cl,BYTE PTR [esi]
  412346:	xchg   DWORD PTR [ecx+0x23],edi
  412349:	out    dx,al
  41234a:	push   ecx
  41234b:	or     al,bl
  41234d:	fadd   QWORD PTR [edi]
  41234f:	jmp    0xd5bc:0xa1c9ff11
  412356:	xchg   BYTE PTR [eax+0x28],ah
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [ebx],0x26
  412568:	or     ebp,DWORD PTR [esi-0x7c7c7506]
  41256e:	ds pop esi
  412570:	add    DWORD PTR [ebx+0x3be83138],0x1c
  412577:	add    al,0x24
  412579:	xchg   ebp,eax
  41257a:	and    eax,0x9f333851
  41257f:	or     bh,BYTE PTR [ecx]
  412581:	aad    0x3c
  412583:	stc    
  412584:	sar    DWORD PTR [eax-0x70808d9d],1
  41258a:	imul   esi,DWORD PTR [edx-0x3c],0xffffffd3
  41258e:	aas    
  41258f:	dec    ebp
  412590:	loopne 0x41257c
  412592:	mov    es,WORD PTR [eax+0x63]
  412595:	jmp    0x412565
  412597:	das    
  412598:	iret   
  412599:	sub    edx,DWORD PTR [ebx]
  41259b:	test   eax,ebp
  41259d:	mov    bl,0x6f
  41259f:	iret   
  4125a0:	sbb    BYTE PTR [ecx+eiz*8-0x7f],ah
  4125a4:	aas    
  4125a5:	jo     0x412625
  4125a7:	dec    esp
  4125a8:	cld    
  4125a9:	push   esi
  4125aa:	adc    eax,0xfe19c0e
  4125af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b0:	ret    0x46f0
  4125b3:	in     al,0x86
  4125b5:	jb     0x412634
  4125b7:	div    BYTE PTR [eax]
  4125b9:	in     al,dx
  4125ba:	mov    cl,0xb0
  4125bc:	sbb    eax,0x3aeb1612
  4125c1:	les    edx,FWORD PTR [edi]
  4125c3:	sbb    eax,0xd18767aa
  4125c8:	lds    ecx,FWORD PTR [edx]
  4125ca:	mov    edi,0x1ba0bfbf
  4125cf:	repz ror ah,1
  4125d2:	mov    edi,0x9d5c06d9
  4125d7:	mov    al,0xff
  4125d9:	stc    
  4125da:	gs sbb al,0x38
  4125dd:	add    dl,bh
  4125df:	imul   esi,ebx,0x3e
  4125e2:	stos   BYTE PTR es:[edi],al
  4125e3:	push   cs
  4125e4:	add    BYTE PTR [ecx+0x7d],bh
  4125e7:	outs   dx,BYTE PTR ds:[esi]
  4125e8:	cs adc eax,0xdd17aecc
  4125ee:	ret    
  4125ef:	mov    edx,0x3774c93f
  4125f4:	cmp    DWORD PTR [eax-0x1ee4052d],ecx
  4125fa:	and    ah,bh
  4125fc:	sbb    esi,DWORD PTR [edi+0x212c6606]
  412602:	mov    ds:0xb2a9cc78,eax
  412607:	bound  esp,QWORD PTR [eax]
  412609:	ja     0x4125c0
  41260b:	push   ebx
  41260c:	add    eax,0x4953ab50
  412611:	jmp    0xabc1f8d8
  412616:	fbld   TBYTE PTR [ecx-0x21db8400]
  41261c:	jmp    0x298c:0x3423c0b2
  412623:	loopne 0x41265e
  412625:	lods   eax,DWORD PTR ds:[esi]
  412626:	dec    edi
  412627:	mov    BYTE PTR [ebp+0xfac8822],ah
  41262d:	xlat   BYTE PTR ds:[ebx]
  41262e:	test   eax,0x17675fd
  412633:	xor    al,0xa0
  412635:	mov    esi,0xf5fb835e
  41263a:	clc    
  41263b:	add    DWORD PTR [esi],ebp
  41263d:	test   dh,bl
  41263f:	bound  edx,QWORD PTR [edx-0x40]
  412642:	xchg   edi,eax
  412643:	rcr    BYTE PTR [esi+0xa48ba2e],0x8c
  41264a:	call   0xf26a:0x599fbbf
  412651:	fst    DWORD PTR [edi]
  412653:	cmp    eax,0x9286606c
  412658:	lods   al,BYTE PTR ds:[esi]
  412659:	mov    dl,BYTE PTR [eax]
  41265b:	inc    edx
  41265c:	in     al,0xc6
  41265e:	mov    ch,BYTE PTR [ebx]
  412660:	mov    bh,0x7
  412662:	cs test esp,edx
  412665:	cmp    ecx,DWORD PTR [edi]
  412667:	sub    DWORD PTR [esi],eax
  412669:	aas    
  41266a:	das    
  41266b:	mov    ah,0x1e
  41266d:	jne    0x4126c9
  41266f:	pop    ebx
  412670:	jns    0x4126aa
  412672:	inc    ebx
  412673:	jl     0x412642
  412675:	scas   eax,DWORD PTR es:[edi]
  412676:	pop    esp
  412677:	ret    
  412678:	jle    0x41266e
  41267a:	cdq    
  41267b:	lods   al,BYTE PTR ds:[esi]
  41267c:	xor    eax,0x1e422e07
  412681:	xor    ecx,ebx
  412683:	popa   
  412684:	shl    ch,cl
  412686:	pop    es
  412687:	arpl   WORD PTR [edi],di
  412689:	fcom   QWORD PTR [ebp-0xe119a4b]
  41268f:	scas   eax,DWORD PTR es:[edi]
  412690:	scas   al,BYTE PTR es:[edi]
  412691:	outs   dx,DWORD PTR ds:[esi]
  412692:	lods   al,BYTE PTR ds:[esi]
  412693:	fdivr  DWORD PTR [ebx+0x7c9940f0]
  412699:	jle    0x4126bd
  41269b:	sar    DWORD PTR [esi-0x7f],1
  41269e:	dec    ebp
  41269f:	shr    esp,1
  4126a1:	mov    ebx,DWORD PTR [eax]
  4126a3:	loope  0x41268d
  4126a5:	mov    ah,0x2b
  4126a7:	fs or  ebp,esi
  4126aa:	sbb    BYTE PTR [edi],ah
  4126ac:	fdiv   DWORD PTR [ebx+0x79]
  4126af:	sub    dl,BYTE PTR [edx]
  4126b1:	lods   al,BYTE PTR ds:[esi]
  4126b2:	push   0xffffff9e
  4126b4:	in     al,dx
  4126b5:	sub    BYTE PTR ds:0x9df9965e,ch
  4126bb:	push   es
  4126bc:	aad    0x70
  4126be:	xor    ch,BYTE PTR [eax+0x4]
  4126c1:	out    dx,al
  4126c2:	out    dx,eax
  4126c3:	ins    DWORD PTR es:[edi],dx
  4126c4:	fnstsw WORD PTR [edx]
  4126c6:	adc    eax,ecx
  4126c8:	xchg   ebp,eax
  4126c9:	out    0x61,eax
  4126cb:	add    al,bh
  4126cd:	mov    ah,0x94
  4126cf:	pop    esp
  4126d0:	jge    0x412732
  4126d2:	(bad)  
  4126d3:	fbld   TBYTE PTR [esi-0x71]
  4126d6:	sbb    eax,0x42324050
  4126db:	std    
  4126dc:	pushf  
  4126dd:	mov    ch,0x70
  4126df:	mov    bh,0xa5
  4126e1:	xor    BYTE PTR [ecx+0x3fed9920],dh
  4126e7:	push   0xb2223238
  4126ec:	dec    edx
  4126ed:	sub    esp,esi
  4126ef:	cmp    eax,0x86eaeab8
  4126f4:	(bad)  
  4126f5:	and    eax,0x9bfed16a
  4126fa:	dec    eax
  4126fb:	fnsave [edi]
  4126fd:	or     eax,DWORD PTR [eax-0x25c10015]
  412703:	std    
  412704:	gs add edi,eax
  412707:	xchg   ebp,eax
  412708:	sbb    al,0x23
  41270a:	mov    ecx,0x20415fca
  41270f:	sbb    ch,BYTE PTR [eax-0x66]
  412712:	popf   
  412713:	mov    gs,WORD PTR [ecx-0x3065245a]
  412719:	mov    DWORD PTR [ebp+0x12e929e4],ecx
  41271f:	fstp   QWORD PTR [ebp-0x23]
  412722:	cmp    BYTE PTR [eax],bl
  412724:	cwde   
  412725:	repnz cmp BYTE PTR [ebp-0x58],al
  412729:	cmp    BYTE PTR [ecx],al
  41272b:	and    BYTE PTR ss:[edi-0x11c550e4],cl
  412732:	jge    0x4126f5
  412734:	or     al,0x69
  412736:	cmp    BYTE PTR [edx+ebp*2+0x5d],0x88
  41273b:	mov    eax,ds:0x51f9434e
  412740:	push   ecx
  412741:	xchg   ebx,eax
  412742:	aam    0x3b
  412744:	adc    BYTE PTR [edi+0x46],dl
  412747:	jo     0x412752
  412749:	adc    esi,0x372c232a
  41274f:	(bad)  
  412750:	arpl   WORD PTR [ebx+0x61],bx
  412753:	(bad)  
  412754:	push   edx
  412755:	mov    ecx,0x3dc08451
  41275a:	test   al,0xf3
  41275c:	(bad)  
  41275d:	push   esp
  41275e:	pop    edx
  41275f:	loop   0x412766
  412761:	stc    
  412762:	dec    eax
  412763:	push   ds
  412764:	xor    DWORD PTR [edx-0x60],ebx
  412767:	fs aaa 
  412769:	or     al,0x10
  41276b:	into   
  41276c:	retf   
  41276d:	ror    DWORD PTR [edx-0x5ebdf6b2],cl
  412773:	rcr    DWORD PTR [ebx+0x5f3f0a45],cl
  412779:	and    eax,0x732c8cb8
  41277e:	jmp    0x297f:0xdb4a1d68
  412785:	sbb    BYTE PTR [ebp+0x1fe1c244],al
  41278b:	aas    
  41278c:	pop    ecx
  41278d:	pop    eax
  41278e:	sub    dl,BYTE PTR [eax-0x43]
  412791:	(bad)  
  412792:	imul   ebx,DWORD PTR [ebx-0x2d9946a3],0xd8137b74
  41279c:	sub    DWORD PTR [esp+ebx*2+0x47],ebp
  4127a0:	or     DWORD PTR [ebx],0x5da73f8f
  4127a6:	dec    eax
  4127a7:	fild   DWORD PTR [ecx-0x19]
  4127aa:	mov    bl,0x61
  4127ac:	mov    BYTE PTR [ebp-0x1e],0x84
  4127b0:	jns    0x41281c
  4127b2:	sbb    eax,0xfc91ef27
  4127b7:	ja     0x4127d0
  4127b9:	or     eax,0xe8b58432
  4127be:	sub    edx,DWORD PTR [eax]
  4127c0:	std    
  4127c1:	xchg   edx,eax
  4127c2:	mov    DWORD PTR [edx],edx
  4127c4:	and    esp,0x7b
  4127c7:	rcl    DWORD PTR [eax-0x65],1
  4127ca:	mov    esp,0x62d0fcaa
  4127cf:	shl    BYTE PTR [edi],1
  4127d1:	pushf  
  4127d2:	xor    edx,DWORD PTR [ebx+0x56]
  4127d5:	xchg   ebp,eax
  4127d6:	jge    0x4127ba
  4127d8:	cmp    eax,edx
  4127da:	aam    0xb8
  4127dc:	das    
  4127dd:	jmp    0x542a:0x1aba68f2
  4127e4:	push   ebp
  4127e5:	gs sti 
  4127e7:	fs (bad) 
  4127ea:	sahf   
  4127eb:	loop   0x4127e7
  4127ed:	add    ecx,DWORD PTR ds:0xb8119179
  4127f3:	popf   
  4127f4:	dec    ebp
  4127f5:	adc    BYTE PTR [edx+eiz*4],dl
  4127f8:	jo     0x4127ab
  4127fa:	xchg   ebp,eax
  4127fb:	xchg   BYTE PTR [ebp+0x3ccd972a],bh
  412801:	loop   0x41286c
  412803:	push   ss
  412804:	dec    edx
  412805:	inc    edi
  412806:	sti    
  412807:	or     eax,0x3661d1ff
  41280c:	frstor [eax-0x568d2234]
  412812:	sbb    BYTE PTR [ebp+ebp*1-0x20],0x6b
  412817:	not    DWORD PTR [edx]
  412819:	aaa    
  41281a:	mov    cl,0x47
  41281c:	sbb    cl,ch
  41281e:	fsubr  DWORD PTR [edx-0x23]
  412821:	mov    bh,0xba
  412823:	or     eax,0x928d863
  412828:	jecxz  0x4127cf
  41282a:	fisttp QWORD PTR [esi]
  41282c:	in     eax,dx
  41282d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41282e:	pop    ebx
  41282f:	retf   
  412830:	pop    ds
  412831:	inc    ebp
  412832:	iret   
  412833:	mov    ds:0x19971208,eax
  412838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412839:	or     DWORD PTR [esi+esi*8],edi
  41283c:	cli    
  41283d:	mov    dl,0xaa
  41283f:	enter  0x897b,0x2f
  412843:	xchg   ecx,eax
  412844:	mov    eax,ds:0xf356104b
  412849:	cmp    eax,0x5bc14305
  41284e:	js     0x41286c
  412850:	pop    esi
  412851:	xor    edi,eax
  412853:	fimul  WORD PTR [ebx+0x23946ba2]
  412859:	test   ebx,0xd8be945f
  41285f:	es das 
  412861:	sub    edx,DWORD PTR [edx-0x46cbf19e]
  412867:	aad    0xfd
  412869:	lods   eax,DWORD PTR ds:[esi]
  41286a:	enter  0x9eae,0x57
  41286e:	dec    esi
  41286f:	sub    al,0x6f
  412871:	daa    
  412872:	hlt    
  412873:	jns    0x41280c
  412875:	jns    0x41283c
  412877:	inc    edx
  412878:	cmp    DWORD PTR [eax],esp
  41287a:	mov    dh,BYTE PTR [edi]
  41287c:	push   es
  41287d:	ret    
  41287e:	js     0x412888
  412880:	in     al,0xf0
  412882:	pop    edx
  412883:	(bad)  
  412886:	xor    eax,0x50c31360
  41288b:	jno    0x412886
  41288d:	sbb    eax,0x56655918
  412892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412893:	arpl   WORD PTR [esi+0x23f355d7],dx
  412899:	xlat   BYTE PTR ds:[ebx]
  41289a:	pop    ebx
  41289b:	rcl    ah,1
  41289d:	loope  0x412874
  41289f:	icebp  
  4128a0:	(bad)  
  4128a1:	dec    ebx
  4128a2:	lods   al,BYTE PTR ds:[esi]
  4128a3:	mov    al,0x92
  4128a5:	sub    ah,BYTE PTR [esi+0x8]
  4128a8:	mov    cl,0x88
  4128aa:	out    dx,eax
  4128ab:	(bad)  
  4128ac:	fxch   st(2)
  4128ae:	loope  0x4128ff
  4128b0:	int    0x39
  4128b2:	dec    ebx
  4128b3:	call   0xbe160716
  4128b8:	fcmovbe st,st(5)
  4128ba:	adc    cl,BYTE PTR [ecx+edi*4+0x56afc7ae]
  4128c1:	xor    DWORD PTR [eax-0x13c1c1e],0x31
  4128c8:	dec    ecx
  4128c9:	xchg   esi,eax
  4128ca:	and    al,0x5c
  4128cc:	adc    BYTE PTR [ebx+0x72a6d298],0xe3
  4128d3:	push   edx
  4128d4:	data16 stc 
  4128d6:	pop    es
  4128d7:	inc    esi
  4128d8:	ja     0x412869
  4128da:	outs   dx,DWORD PTR ds:[esi]
  4128db:	cmp    BYTE PTR [eax-0x56],dl
  4128de:	into   
  4128df:	xor    eax,0x5eca8332
  4128e4:	sbb    eax,0x1df90c50
  4128e9:	loop   0x41289a
  4128eb:	push   edx
  4128ec:	hlt    
  4128ed:	je     0x412942
  4128ef:	hlt    
  4128f0:	pop    esp
  4128f1:	xchg   ebx,esp
  4128f3:	mov    BYTE PTR [eax+eax*8+0x6a],bh
  4128f7:	cmp    eax,0x21ec82c4
  4128fc:	ret    0xc997
  4128ff:	pop    esp
  412900:	sub    al,0x2d
  412902:	inc    ebp
  412903:	mov    ds:0xcf66a090,eax
  412908:	imul   edi,DWORD PTR [ebx+0x6c],0xffffffa9
  41290c:	dec    eax
  41290d:	addr16 xchg edi,eax
  41290f:	pop    esi
  412910:	jge    0x41291a
  412912:	ret    
  412913:	mov    dh,0x6
  412915:	aas    
  412916:	loop   0x412942
  412918:	add    BYTE PTR [ebx+0x141e9be0],dl
  41291e:	inc    edx
  41291f:	mov    dl,0x90
  412921:	add    al,0xd
  412923:	add    ebp,DWORD PTR [edx]
  412925:	or     al,0xb2
  412927:	ja     0x4128bc
  412929:	and    al,0x96
  41292b:	(bad)  [esp+esi*8+0x3b]
  41292f:	sbb    ebp,DWORD PTR [esi]
  412931:	push   ss
  412932:	pop    esp
  412933:	(bad)  
  412934:	mov    bl,0xd
  412936:	dec    ebx
  412937:	xor    edi,DWORD PTR [esi+0x6c236ffd]
  41293d:	iret   
  41293e:	jg     0x41290f
  412940:	les    edx,FWORD PTR [ebx-0x653a6c8c]
  412946:	mov    DWORD PTR ds:0x7eda0966,ebx
  41294c:	inc    edi
  41294d:	jno    0x4129ca
  41294f:	and    ch,ah
  412951:	call   0xb2447322
  412956:	pop    ebp
  412957:	in     al,dx
  412958:	jg     0x412982
  41295a:	jecxz  0x4129c9
  41295c:	jbe    0x41291b
  41295e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41295f:	es mov sp,0x6978
  412964:	mov    esi,0x95ddc64b
  412969:	(bad)  
  41296a:	jnp    0x412943
  41296c:	mov    BYTE PTR ds:0xc9b734a4,ch
  412972:	inc    ebp
  412973:	dec    ecx
  412974:	mov    al,0xec
  412976:	pop    edi
  412977:	inc    edi
  412978:	(bad)  
  412979:	pop    eax
  41297a:	aaa    
  41297b:	push   esp
  41297c:	pop    ss
  41297d:	shr    ch,0xd0
  412980:	jle    0x412942
  412982:	in     eax,dx
  412983:	imul   esi,DWORD PTR [ebp+0x1c],0xf0427cc8
  41298a:	push   ebx
  41298b:	cdq    
  41298c:	clc    
  41298d:	cmp    eax,edx
  41298f:	jno    0x4129bc
  412991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412992:	imul   esi,DWORD PTR [esi],0x12
  412995:	and    al,0x30
  412997:	sub    eax,0x24117f3d
  41299c:	scas   eax,DWORD PTR es:[edi]
  41299d:	and    al,0x98
  41299f:	ret    
  4129a0:	aas    
  4129a1:	add    ebp,DWORD PTR [eax-0xb3b0c3e]
  4129a7:	xchg   DWORD PTR [esi+0x45],ebx
  4129aa:	aad    0xa5
  4129ac:	mov    ebp,0x3426a2af
  4129b1:	add    ch,bh
  4129b3:	and    al,0x7c
  4129b5:	dec    ecx
  4129b6:	into   
  4129b7:	and    edx,DWORD PTR [ecx]
  4129b9:	ret    
  4129ba:	xchg   esp,eax
  4129bb:	(bad)  ds:0x2d4ec479
  4129c1:	dec    esi
  4129c2:	pop    esp
  4129c3:	lods   eax,DWORD PTR ds:[esi]
  4129c4:	rcr    ebp,cl
  4129c6:	push   ebp
  4129c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c8:	pop    ds
  4129c9:	jns    0x4129d8
  4129cb:	mov    al,0xb1
  4129cd:	fcom   QWORD PTR [ecx+0x73]
  4129d0:	test   DWORD PTR [esi],esp
  4129d2:	mov    dh,0x7d
  4129d4:	pop    ds
  4129d5:	sub    ebp,DWORD PTR ds:0x149e8d59
  4129db:	cwde   
  4129dc:	test   eax,0x3ebbbfec
  4129e1:	(bad)  
  4129e2:	cmc    
  4129e3:	mov    ch,0x67
  4129e5:	pop    ecx
  4129e6:	lds    edx,FWORD PTR fs:[ebp-0x1384ab3c]
  4129ed:	mov    bh,0xff
  4129ef:	xor    dl,BYTE PTR [esp+edi*1+0x17]
  4129f3:	in     al,0xc5
  4129f5:	loopne 0x412a4d
  4129f7:	scas   eax,DWORD PTR es:[edi]
  4129f8:	fldcw  WORD PTR [edi-0x57]
  4129fb:	xchg   edx,eax
  4129fc:	cld    
  4129fd:	pushf  
  4129fe:	outs   dx,BYTE PTR ds:[esi]
  4129ff:	scas   al,BYTE PTR es:[edi]
  412a00:	xchg   bl,cl
  412a02:	mov    edi,0xf3fa9180
  412a07:	jl     0x412a58
  412a09:	dec    esi
  412a0a:	jne    0x41298f
  412a0c:	fwait
  412a0d:	cmp    al,0x12
  412a0f:	cmc    
  412a10:	xor    dh,BYTE PTR [ecx+0x48]
  412a13:	push   edx
  412a14:	psrad  mm6,mm0
  412a17:	sbb    ebp,ecx
  412a19:	mov    cl,0x97
  412a1b:	mov    esi,edi
  412a1d:	mov    eax,0x36474a02
  412a22:	mov    eax,0x144a03c5
  412a27:	adc    DWORD PTR [edi+0x2dfa1ae7],ecx
  412a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a2e:	ret    0x5c7c
  412a31:	mov    ?,WORD PTR [edi-0x593237cc]
  412a37:	mov    dl,0x69
  412a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3a:	or     DWORD PTR [ecx+0x16e28fba],0xffffffcc
  412a41:	sbb    BYTE PTR [esi],cl
  412a43:	js     0x412a95
  412a45:	jmp    0x1c771c3d
  412a4a:	les    ebp,FWORD PTR [ecx]
  412a4c:	imul   esp,DWORD PTR ds:0xfea89cf1,0x1b
  412a53:	stos   BYTE PTR es:[edi],al
  412a54:	imul   esi,ebx,0xbbe57c08
  412a5a:	mov    ch,BYTE PTR [edi+0x572a569]
  412a60:	popf   
  412a61:	cwde   
  412a62:	or     DWORD PTR [ebx+ecx*8+0x7],0x6562cfcd
  412a6a:	add    BYTE PTR [edx],bl
  412a6c:	add    al,0xf9
  412a6e:	xchg   ebp,eax
  412a6f:	add    bh,BYTE PTR [edx]
  412a71:	xlat   BYTE PTR ds:[ebx]
  412a72:	and    DWORD PTR [ecx-0x7f577692],ebx
  412a78:	cmova  edx,DWORD PTR [eax]
  412a7b:	out    0x59,al
  412a7d:	test   DWORD PTR [ebp+0x73],esi
  412a80:	or     eax,0xcedffdde
  412a85:	mov    WORD PTR [ebx-0x33dd2143],ds
  412a8b:	daa    
  412a8c:	lea    ebx,[eax+ebx*1-0x9]
  412a90:	dec    esi
  412a91:	mov    al,ds:0x22c5ce2
  412a96:	dec    BYTE PTR [ecx]
  412a98:	es pushf 
  412a9a:	(bad)  
  412a9b:	jno    0x412a89
  412a9d:	xchg   DWORD PTR [edx],edx
  412a9f:	push   cs
  412aa0:	call   0xbb0b:0xc6875d65
  412aa7:	inc    ebp
  412aa8:	rol    BYTE PTR [ecx-0x35],cl
  412aab:	mov    ds:0xa29af67c,al
  412ab0:	mov    dh,0x15
  412ab2:	fist   WORD PTR [esi+ebx*4+0x23]
  412ab6:	mov    DWORD PTR [ebp+0x4792b14f],ebx
  412abc:	(bad)  
  412abd:	cmp    bh,ch
  412abf:	stos   BYTE PTR es:[edi],al
  412ac0:	std    
  412ac1:	cwde   
  412ac2:	mov    esp,0x846f2c01
  412ac7:	fimul  WORD PTR [ecx]
  412ac9:	push   es
  412aca:	repnz test BYTE PTR [edi],cl
  412acd:	mov    dh,0x60
  412acf:	lock ror BYTE PTR [ebx-0x12],0x6d
  412ad4:	mov    dl,0x7f
  412ad6:	mov    al,bl
  412ad8:	xor    ah,bh
  412ada:	cmovbe eax,DWORD PTR [ebx+0x2a9fb2b7]
  412ae1:	adc    bl,dl
  412ae3:	fdivr  DWORD PTR [ebp+0x66]
  412ae6:	jne    0x412ac3
  412ae8:	data16 jge 0x412aa6
  412aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aec:	jmp    0x920fdec4
  412af1:	pop    esi
  412af2:	aaa    
  412af3:	neg    BYTE PTR [ecx+0x308cbe1d]
  412af9:	cmp    al,dl
  412afb:	std    
  412afc:	xlat   BYTE PTR ds:[ebx]
  412afd:	arpl   WORD PTR [edi+0x1363f2a7],ax
  412b03:	in     al,0x1d
  412b05:	mov    ebx,0xa2045b28
  412b0a:	fisttp DWORD PTR [ecx+0x17]
  412b0d:	test   eax,0xf3fdd0ca
  412b12:	inc    edx
  412b13:	imul   edi,DWORD PTR [esi+0x4e44d199],0xffffffbd
  412b1a:	std    
  412b1b:	push   0xffffffea
  412b1d:	mov    al,0x7f
  412b1f:	jmp    0xf0ab:0xdba336ba
  412b26:	test   al,0xed
  412b28:	repnz sub ebx,eax
  412b2b:	jo     0x412b30
  412b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b2e:	into   
  412b2f:	imul   ebp,edi,0xffffffc8
  412b32:	cld    
  412b33:	retf   
  412b34:	shr    BYTE PTR [edx],cl
  412b36:	aaa    
  412b37:	pop    esi
  412b38:	aas    
  412b39:	out    0x80,eax
  412b3b:	mov    dl,0xdd
  412b3d:	pop    sp
  412b3f:	lods   al,BYTE PTR ds:[esi]
  412b40:	jmp    0xc9e0:0x79a3086a
  412b47:	loope  0x412b8c
  412b49:	add    BYTE PTR ds:0x24f28e62,dh
  412b4f:	loope  0x412b51
  412b51:	daa    
  412b52:	test   eax,ebp
  412b54:	fisub  WORD PTR [edi+0x33]
  412b57:	xor    eax,0x9a1293fa
  412b5c:	iret   
  412b5d:	shr    BYTE PTR [ebp-0x2d147fbd],0xe8
  412b64:	shl    esp,0xcd
  412b67:	retf   
  412b68:	cmp    al,0x25
  412b6a:	out    0x55,eax
  412b6c:	in     eax,0xb7
  412b6e:	add    al,0xf7
  412b70:	sbb    eax,0xbf57d32
  412b75:	rcl    ch,0xcc
  412b78:	call   0x6735:0xecf8cab
  412b7f:	and    ebp,DWORD PTR [edi]
  412b81:	aaa    
  412b82:	cmp    al,0x4
  412b84:	mov    bl,0x49
  412b86:	mov    esp,DWORD PTR [edx]
  412b88:	jno    0x412bdc
  412b8a:	inc    ebx
  412b8b:	hlt    
  412b8c:	or     eax,0x90cf198f
  412b91:	cli    
  412b92:	xchg   edi,eax
  412b93:	(bad)  
  412b94:	and    eax,DWORD PTR [bp-0x6688]
  412b99:	mov    eax,0xa3c30ef0
  412b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9f:	out    dx,eax
  412ba0:	cmp    al,0xc5
  412ba2:	repz push 0x8ad81baf
  412ba8:	inc    ebp
  412ba9:	adc    esi,DWORD PTR [edi-0x6cb81995]
  412baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bb0:	and    esi,DWORD PTR [ecx]
  412bb2:	push   0x5996ff41
  412bb7:	push   0x1935172
  412bbc:	mov    ah,bl
  412bbe:	jne    0x412bfb
  412bc0:	pop    edx
  412bc1:	stos   BYTE PTR es:[edi],al
  412bc2:	and    eax,0x62aa2910
  412bc7:	cmc    
  412bc8:	adc    edi,ebp
  412bca:	ficom  WORD PTR [esi+0x41c4d0bd]
  412bd0:	add    ch,BYTE PTR [eax+ebx*1+0x24e6c475]
  412bd7:	(bad)  
  412bd8:	in     al,dx
  412bd9:	xchg   ebp,eax
  412bda:	jmp    0xdbd6:0x882d3361
  412be1:	rol    cl,1
  412be3:	and    cl,cl
  412be5:	cmp    edi,ebp
  412be7:	sub    eax,0x50312429
  412bec:	retf   0x6747
  412bef:	pop    edx
  412bf0:	sahf   
  412bf1:	push   eax
  412bf2:	clc    
  412bf3:	outs   dx,BYTE PTR ds:[esi]
  412bf4:	mov    ebx,0x9f8b414f
  412bf9:	outs   dx,DWORD PTR ds:[esi]
  412bfa:	(bad)  
  412bfb:	sub    DWORD PTR [eax+ebp*2+0x32],ebx
  412bff:	hlt    
  412c00:	leave  
  412c01:	(bad)  
  412c03:	cmp    eax,0x4e42d593
  412c08:	aad    0x0
  412c0a:	pop    esi
  412c0b:	dec    ebp
  412c0c:	cmc    
  412c0d:	xor    eax,0x408eb78e
  412c12:	data16 jecxz 0x412c23
  412c15:	xchg   edi,eax
  412c16:	xchg   edx,eax
  412c17:	and    al,0x68
  412c19:	mov    bh,0x17
  412c1b:	call   0x40e5a6b0
  412c20:	push   eax
  412c21:	fldenv [eax+0x33766fd0]
  412c27:	lock ins DWORD PTR es:[edi],dx
  412c29:	je     0x412bcb
  412c2b:	(bad)  
  412c2c:	sbb    bh,al
  412c2e:	push   edx
  412c2f:	aaa    
  412c30:	push   0xe9aa6825
  412c35:	add    bh,BYTE PTR [edi-0x6de55161]
  412c3b:	dec    ebp
  412c3c:	jbe    0x412ca9
  412c3e:	test   al,0x32
  412c40:	fcomp  QWORD PTR [edi+edx*4+0x7b7a15ca]
  412c47:	sbb    BYTE PTR [eax+0x4c876f1c],0xcd
  412c4e:	mov    bl,0x45
  412c50:	repz or BYTE PTR [eax-0x6840f9c0],cl
  412c57:	imul   edi,ecx,0x66ee0845
  412c5d:	aas    
  412c5e:	ds add esp,0x811a5506
  412c65:	(bad)  
  412c66:	mov    ebx,0x86fe79a8
  412c6b:	jnp    0x412c2c
  412c6d:	adc    DWORD PTR [eax-0x4c],ebx
  412c70:	pushf  
  412c71:	dec    ecx
  412c72:	cdq    
  412c73:	and    DWORD PTR [ebp+0x43],ebx
  412c76:	mov    ebx,0xc670c95
  412c7b:	mov    ds:0x27b33d3e,eax
  412c80:	addr16 pop ds
  412c82:	adc    esp,DWORD PTR [ecx+0x4]
  412c85:	dec    ecx
  412c86:	jns    0x412c70
  412c88:	jo     0x412c3d
  412c8a:	iret   
  412c8b:	sbb    cl,dh
  412c8d:	cmc    
  412c8e:	and    edx,DWORD PTR [ebx-0x2c906213]
  412c94:	inc    esp
  412c95:	scas   al,BYTE PTR es:[edi]
  412c96:	int    0x75
  412c98:	arpl   cx,di
  412c9a:	xchg   edx,eax
  412c9b:	cmp    edi,esp
  412c9d:	mov    al,0xf0
  412c9f:	hlt    
  412ca0:	in     eax,0x6
  412ca2:	test   al,0xca
  412ca4:	loope  0x412d20
  412ca6:	mov    ds:0x8faf8205,al
  412cab:	fidivr DWORD PTR [ebx-0x5856e867]
  412cb1:	aaa    
  412cb2:	inc    ebx
  412cb3:	sub    ebp,DWORD PTR [edi]
  412cb5:	ss test cl,cl
  412cb8:	or     ebx,DWORD PTR [edi-0x33]
  412cbb:	in     eax,dx
  412cbc:	int3   
  412cbd:	cmp    esp,ebx
  412cbf:	daa    
  412cc0:	cmp    DWORD PTR gs:[edx-0x73415515],ebp
  412cc7:	xor    DWORD PTR [ebx],esi
  412cc9:	les    ecx,FWORD PTR [ecx-0x6cb01813]
  412ccf:	or     eax,0x2cc577ee
  412cd4:	mov    ecx,DWORD PTR [ebx-0x2dd0204e]
  412cda:	loope  0x412cb2
  412cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdd:	out    dx,eax
  412cde:	adc    BYTE PTR [eax+0x147dbee],dl
  412ce4:	popf   
  412ce5:	adc    edi,DWORD PTR [esi]
  412ce7:	adc    BYTE PTR [ebx+0x47],ch
  412cea:	jae    0x412ca5
  412cec:	test   eax,0x792a33c4
  412cf1:	inc    ebp
  412cf2:	xor    ah,dl
  412cf4:	adc    BYTE PTR [edi+0x4f],dh
  412cf7:	test   eax,0xaceeecd8
  412cfc:	(bad)  
  412cfd:	aad    0x8b
  412cff:	jo     0x412c8f
  412d01:	fwait
  412d02:	ja     0x412d05
  412d04:	inc    ebx
  412d05:	stos   BYTE PTR es:[edi],al
  412d06:	test   DWORD PTR [ebx+0x18637511],0x622a6d22
  412d10:	jmp    0x412ccc
  412d12:	cwde   
  412d13:	dec    ebx
  412d14:	cld    
  412d15:	pop    eax
  412d16:	jl     0x412d76
  412d18:	inc    esi
  412d19:	dec    ebp
  412d1a:	add    ebx,edi
  412d1c:	stc    
  412d1d:	mov    bl,0x74
  412d1f:	and    edx,DWORD PTR [edi]
  412d21:	mov    edx,0xdb1c0dfb
  412d26:	arpl   WORD PTR [edx-0x7c5f70d3],dx
  412d2c:	ss ins DWORD PTR es:[edi],dx
  412d2e:	push   cs
  412d2f:	cmp    ebp,0x9fc50274
  412d35:	sahf   
  412d36:	shl    BYTE PTR [eax+0x3],0x21
  412d3a:	mov    bh,0x17
  412d3c:	jne    0x412db8
  412d3e:	mov    ecx,DWORD PTR [ebx+0x47]
  412d41:	cmp    ecx,esi
  412d43:	push   edx
  412d44:	les    edi,FWORD PTR [edi]
  412d46:	les    ecx,FWORD PTR ds:0xbdaf3a0a
  412d4c:	ins    BYTE PTR es:[edi],dx
  412d4d:	sub    eax,0xeee172f5
  412d52:	xor    DWORD PTR [edi+0x2c],edx
  412d55:	in     al,dx
  412d56:	js     0x412d8d
  412d58:	jmp    0x412d80
  412d5a:	xchg   BYTE PTR [edi-0x5b60cfd3],ah
  412d60:	ja     0x412d99
  412d62:	(bad)  
  412d63:	inc    DWORD PTR [esi+0x62]
  412d66:	xor    eax,0x9894b0b3
  412d6b:	dec    eax
  412d6c:	mov    eax,0x6425c055
  412d71:	sar    DWORD PTR [edx+0x7b],cl
  412d74:	in     al,dx
  412d75:	adc    al,0xf4
  412d77:	jbe    0x412d18
  412d79:	je     0x412d11
  412d7b:	pushf  
  412d7c:	pop    ebp
  412d7d:	in     al,dx
  412d7e:	mov    eax,0xc2a80ee1
  412d83:	xor    BYTE PTR [ecx+0x1991b3f8],bh
  412d89:	js     0x412da5
  412d8b:	mov    al,al
  412d8d:	cmp    bl,BYTE PTR [eax]
  412d8f:	xchg   ebx,eax
  412d90:	icebp  
  412d91:	adc    ecx,ecx
  412d93:	mov    ebp,0xc294d5c4
  412d98:	in     eax,dx
  412d99:	in     al,dx
  412d9a:	inc    ebp
  412d9b:	sub    al,0x88
  412d9d:	push   edi
  412d9e:	add    DWORD PTR [eax+0x19],esp
  412da1:	fld    TBYTE PTR cs:[ecx-0x3627b682]
  412da8:	xchg   ebx,eax
  412da9:	mov    esp,0xcc9064b6
  412dae:	ficom  WORD PTR [edx]
  412db0:	xchg   edi,eax
  412db1:	xor    dl,al
  412db3:	sbb    BYTE PTR [esi+0x1],0xdf
  412db7:	push   eax
  412db8:	inc    ebp
  412db9:	ss or  eax,0xa545ba2e
  412dbf:	stos   BYTE PTR es:[edi],al
  412dc0:	mov    DWORD PTR [eax],esi
  412dc2:	in     al,0xd3
  412dc4:	ins    DWORD PTR es:[edi],dx
  412dc5:	or     eax,0x3ae9378a
  412dca:	nop
  412dcb:	in     al,dx
  412dcc:	sub    dl,ah
  412dce:	adc    ebp,DWORD PTR [ebx]
  412dd0:	adc    ah,BYTE PTR [ebp-0x354a729c]
  412dd6:	aaa    
  412dd7:	jle    0x412dbd
  412dd9:	add    esp,DWORD PTR [ecx+0x5e]
  412ddc:	ja     0x412d9a
  412dde:	ins    BYTE PTR es:[edi],dx
  412ddf:	jp     0x412e07
  412de1:	cdq    
  412de2:	inc    esp
  412de3:	ror    BYTE PTR [ebp+0xc],1
  412de6:	xchg   DWORD PTR [edx+0x1f],edi
  412de9:	cdq    
  412dea:	pop    ds
  412deb:	jp     0x412e47
  412ded:	(bad)  
  412dee:	aad    0xd5
  412df0:	enter  0x8da3,0xe2
  412df4:	out    0xde,eax
  412df6:	push   0x8b2ffa8a
  412dfb:	sub    ch,al
  412dfd:	cs loop 0x412dc0
  412e00:	xlat   BYTE PTR ds:[ebx]
  412e01:	inc    ebx
  412e02:	ja     0x412db7
  412e04:	popa   
  412e05:	rol    ebp,1
  412e07:	pop    ecx
  412e08:	mov    bl,0x96
  412e0a:	jo     0x412dd4
  412e0c:	fwait
  412e0d:	(bad)  
  412e0e:	data16 loopne 0x412d99
  412e11:	mov    dl,0x4
  412e13:	test   edx,0x8c890398
  412e19:	sub    al,0x2a
  412e1b:	pavgb  mm5,QWORD PTR [eax-0x28]
  412e1f:	nop
  412e20:	or     DWORD PTR [ebx+eiz*1+0x45fa818],0x8872d25e
  412e2b:	fucom  st(6)
  412e2d:	addr16 push ds
  412e2f:	fwait
  412e30:	or     ah,BYTE PTR [ebx-0x51]
  412e33:	call   0xc5ed2ef6
  412e38:	sbb    al,0xc2
  412e3a:	inc    eax
  412e3b:	push   cs
  412e3c:	xchg   esi,eax
  412e3d:	push   ds
  412e3e:	mov    eax,0x38a62180
  412e43:	gs loop 0x412e67
  412e46:	int3   
  412e47:	in     al,dx
  412e48:	lods   eax,DWORD PTR ds:[esi]
  412e49:	out    dx,eax
  412e4a:	pop    ebp
  412e4b:	dec    edx
  412e4c:	rcr    BYTE PTR [edi],0xba
  412e4f:	stc    
  412e50:	xchg   ecx,eax
  412e51:	push   esp
  412e52:	icebp  
  412e53:	in     al,dx
  412e54:	lock rcr DWORD PTR [edi+0x32d5c586],cl
  412e5b:	sub    DWORD PTR [eax+esi*2],eax
  412e5e:	and    eax,0x40b789db
  412e63:	scas   eax,DWORD PTR es:[edi]
  412e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e65:	xor    DWORD PTR [edx-0x7d1b80d0],ecx
  412e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6c:	lahf   
  412e6d:	dec    esp
  412e6e:	mov    ah,0xbc
  412e70:	clc    
  412e71:	pop    ebp
  412e72:	mov    edx,0x9d9d2017
  412e77:	inc    ebp
  412e78:	jecxz  0x412eeb
  412e7a:	xchg   edi,eax
  412e7b:	pop    edx
  412e7c:	jmp    0xf381:0x67497f5b
  412e83:	jmp    FWORD PTR [esi+0x79e1215e]
  412e89:	aaa    
  412e8a:	cmp    eax,0x4876b150
  412e8f:	(bad)  
  412e90:	inc    DWORD PTR [esi]
  412e92:	addr16 sub eax,0xbcc5b4b8
  412e98:	dec    ebx
  412e99:	neg    DWORD PTR [edi+0x24]
  412e9c:	data16 jnp 0x412ea6
  412e9f:	mov    BYTE PTR [esi+0x6c36f4e5],al
  412ea5:	pushw  ss
  412ea7:	xchg   BYTE PTR [esi],bh
  412ea9:	cmp    BYTE PTR [ebx+0x53],al
  412eac:	in     eax,dx
  412ead:	dec    esi
  412eae:	pop    edi
  412eaf:	inc    edx
  412eb0:	std    
  412eb1:	add    BYTE PTR [edi+0x4c73e5e6],ah
  412eb7:	sar    DWORD PTR ds:0x47a4fae7,cl
  412ebd:	xchg   ebx,eax
  412ebe:	cmp    bh,BYTE PTR [eax]
  412ec0:	dec    edx
  412ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec2:	add    ebp,DWORD PTR [ecx+ebp*2-0x53]
  412ec6:	pop    ss
  412ec7:	cmp    al,0x2f
  412ec9:	int    0x7f
  412ecb:	fadd   QWORD PTR [edi]
  412ecd:	mov    WORD PTR [esp+edi*8],gs
  412ed0:	push   esi
  412ed1:	call   0x8a73:0xa2e87354
  412ed8:	mov    cl,0xb2
  412eda:	popa   
  412edb:	imul   ebp,DWORD PTR [ebx],0xa9c391e1
  412ee1:	ror    BYTE PTR ds:0x5ccfd212,0x46
  412ee8:	mov    WORD PTR [eax+0x74],bx
  412eec:	xor    ebp,DWORD PTR [ebp-0x3]
  412eef:	pusha  
  412ef0:	inc    esi
  412ef1:	lea    esi,[esi+0x572f5ed5]
  412ef7:	or     ebp,DWORD PTR [esi+eax*2+0x64ab4252]
  412efe:	pop    ebx
  412eff:	pop    ebp
  412f00:	shr    bl,1
  412f02:	hlt    
  412f03:	push   0x15
  412f05:	fsubr  QWORD PTR [eax]
  412f07:	(bad)  
  412f09:	fisub  DWORD PTR [edx]
  412f0b:	pushf  
  412f0c:	leave  
  412f0d:	loope  0x412f4f
  412f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f10:	mov    eax,ds:0x937eb1bb
  412f15:	xchg   edx,eax
  412f16:	adc    bh,BYTE PTR [edi]
  412f18:	and    DWORD PTR [edx+0x491d64ca],esi
  412f1e:	adc    al,0xd8
  412f20:	mov    bl,0x94
  412f22:	adc    cl,bh
  412f24:	add    al,0xe9
  412f26:	dec    esp
  412f27:	adc    edi,DWORD PTR [ebx+0x57]
  412f2a:	dec    ecx
  412f2b:	xor    al,BYTE PTR [ebx+0x7c]
  412f2e:	jne    0x412ede
  412f30:	jmp    0x412f41
  412f32:	jae    0x412edd
  412f34:	scas   eax,DWORD PTR es:[edi]
  412f35:	push   es
  412f36:	jmp    0xcd8ec416
  412f3b:	ins    DWORD PTR es:[edi],dx
  412f3c:	into   
  412f3d:	mov    esi,DWORD PTR [esi]
  412f3f:	xchg   esi,eax
  412f40:	ja     0x412f8e
  412f42:	mov    ah,0x7b
  412f44:	cld    
  412f45:	mov    ds:0x315a722,al
  412f4a:	dec    esp
  412f4b:	cmp    ecx,edi
  412f4d:	out    dx,al
  412f4e:	imul   BYTE PTR [eax+ebx*4]
  412f51:	sbb    al,0x6c
  412f53:	mov    ecx,0x174dd4e2
  412f58:	pop    ds
  412f59:	icebp  
  412f5a:	mov    al,ds:0x8ee6d1e7
  412f5f:	jl     0x412efe
  412f61:	push   cs
  412f62:	retf   
  412f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f64:	push   0xc36bfe3e
  412f69:	sub    ch,BYTE PTR ds:0x37a4d639
  412f6f:	pop    edx
  412f70:	pop    esp
  412f71:	jbe    0x412ef5
  412f73:	sub    esp,DWORD PTR [edx+0x38]
  412f76:	in     al,0xa
  412f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f79:	aam    0x9b
  412f7b:	pop    esp
  412f7c:	(bad)  
  412f7d:	xlat   BYTE PTR ds:[ebx]
  412f7e:	outs   dx,DWORD PTR ds:[esi]
  412f7f:	out    dx,eax
  412f80:	cmp    esi,ecx
  412f82:	jle    0x412f33
  412f84:	out    0x79,al
  412f86:	fst    DWORD PTR [eax+0x3532a39d]
  412f8d:	arpl   WORD PTR [esi+edx*4],dx
  412f90:	aas    
  412f91:	push   ss
  412f92:	stos   DWORD PTR es:[edi],eax
  412f93:	xchg   edi,eax
  412f94:	inc    ebp
  412f95:	jo     0x412f2a
  412f97:	call   0x4809:0xcf74671c
  412f9e:	ins    DWORD PTR es:[edi],dx
  412f9f:	sub    cl,BYTE PTR [esi+0xe]
  412fa2:	inc    ebp
  412fa3:	bound  edi,QWORD PTR ds:0xeec01df6
  412fa9:	gs pop ebp
  412fab:	pop    ebp
  412fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fad:	clc    
  412fae:	fadd   st(5),st
  412fb0:	data16 adc al,0x2c
  412fb3:	fdivr  QWORD PTR [edi-0x3050a32e]
  412fb9:	add    al,dh
  412fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbc:	dec    edx
  412fbd:	pop    ss
  412fbe:	push   esp
  412fbf:	push   edi
  412fc0:	repz cmp edi,DWORD PTR [eax]
  412fc3:	or     eax,0x6b0ff91a
  412fc8:	fwait
  412fc9:	push   ebp
  412fca:	lods   eax,DWORD PTR ds:[esi]
  412fcb:	cmp    esi,edx
  412fcd:	lea    edi,[esp-0x7b]
  412fd1:	repnz cmp ebx,DWORD PTR [ebp+edi*4+0x72a52b59]
  412fd9:	jns    0x412f97
  412fdb:	or     al,0x79
  412fdd:	mov    esp,0x801a3f75
  412fe2:	sub    ebx,DWORD PTR [eax]
  412fe4:	inc    ecx
  412fe5:	ret    0x8842
  412fe8:	or     bh,BYTE PTR [eax-0x7009cc1f]
  412fee:	pushf  
  412fef:	inc    esp
  412ff0:	cmp    ebp,ebp
  412ff2:	ret    
  412ff3:	aad    0xdb
  412ff5:	aam    0xca
  412ff7:	loop   0x412fa0
  412ff9:	(bad)
  412ffd:	cld    
  412ffe:	loope  0x413025
  413000:	aam    0x5e
  413002:	mov    edi,0xf8c11851
  413007:	ds mov esi,0x3493cc36
  41300d:	retf   
  41300e:	xlat   BYTE PTR ds:[ebx]
  41300f:	mov    fs,WORD PTR [esi]
  413011:	pop    esi
  413012:	pop    eax
  413013:	lea    eax,[eax+ebp*2-0x6f]
  413017:	cwde   
  413018:	js     0x41303f
  41301a:	mov    ds:0xa4530e21,al
  41301f:	fst    st(1)
  413021:	sub    ah,dl
  413023:	test   eax,0xfcccac60
  413028:	aad    0x10
  41302a:	push   edx
  41302b:	and    al,0x83
  41302d:	pop    ebp
  41302e:	adc    ah,BYTE PTR [eax-0x1e]
  413031:	xor    ebp,DWORD PTR [esi+eax*4+0x41]
  413035:	retf   0xb84d
  413038:	pusha  
  413039:	mov    edx,0xfbb5fe42
  41303e:	lock sub DWORD PTR [ecx],0x27e64fd1
  413045:	aas    
  413046:	push   edx
  413047:	mov    ebp,0x745af427
  41304c:	mov    ds:0xb13da16a,eax
  413051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413052:	xchg   DWORD PTR [esi-0x52],edi
  413055:	test   DWORD PTR [ecx-0x33],eax
  413058:	out    0x2b,al
  41305a:	(bad)  
  41305b:	in     al,0x93
  41305d:	xchg   BYTE PTR [edx-0x49],cl
  413060:	outs   dx,DWORD PTR ds:[esi]
  413061:	cmc    
  413062:	mov    ds:0xe30f133,eax
  413067:	push   ebp
  413068:	aaa    
  413069:	jo     0x41305f
  41306b:	retf   0x5a7b
  41306e:	xchg   ebx,eax
  41306f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413070:	jo     0x413054
  413072:	cwde   
  413073:	xchg   BYTE PTR [edx+0x22],dl
  413076:	inc    eax
  413077:	fucomi st,st(6)
  413079:	shl    BYTE PTR ds:0x1b8e01b1,1
  41307f:	mov    esi,0x7303ece6
  413084:	jmp    0x382a:0x2d230b44
  41308b:	xchg   edi,eax
  41308c:	lods   al,BYTE PTR ds:[esi]
  41308d:	into   
  41308e:	es clc 
  413090:	lahf   
  413091:	jo     0x413025
  413093:	test   eax,ebx
  413095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413096:	and    DWORD PTR [eax-0x21],edi
  413099:	pop    edx
  41309a:	mov    cl,0xcc
  41309c:	arpl   cx,si
  41309e:	pop    edx
  41309f:	mov    edi,0x4c7f17db
  4130a4:	test   al,0x90
  4130a6:	xchg   DWORD PTR [esi+0x17],ebx
  4130a9:	cs inc edx
  4130ab:	sbb    edx,esi
  4130ad:	xchg   esi,eax
  4130ae:	jmp    0xb6b:0xd1ac2c9
  4130b5:	mov    dl,0x75
  4130b7:	push   0x1db6a0c3
  4130bc:	out    0xe,eax
  4130be:	into   
  4130bf:	sub    al,0xbd
  4130c1:	test   eax,0xb25dcd36
  4130c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c7:	repnz stos BYTE PTR es:[edi],al
  4130c9:	adc    al,0x2b
  4130cb:	xor    bl,BYTE PTR [eax-0x6a]
  4130ce:	out    dx,eax
  4130cf:	push   eax
  4130d0:	mov    ch,0x35
  4130d2:	xchg   ebx,eax
  4130d3:	jmp    0xb77ebbae
  4130d8:	xchg   edx,eax
  4130d9:	jl     0x413076
  4130db:	sbb    DWORD PTR [ebx],ebp
  4130dd:	cdq    
  4130de:	test   al,ch
  4130e0:	fwait
  4130e1:	jb     0x4130ef
  4130e3:	mov    eax,ds:0x4b63322f
  4130e8:	sbb    BYTE PTR ds:0x14b27a4a,ah
  4130ee:	(bad)  
  4130ef:	retf   
  4130f0:	xchg   esi,edx
  4130f2:	enter  0x8ba,0xa8
  4130f6:	add    al,BYTE PTR [esi]
  4130f8:	mov    ch,0x41
  4130fa:	lods   al,BYTE PTR ds:[si]
  4130fc:	xor    BYTE PTR [eax-0x7b],0x15
  413100:	pusha  
  413101:	aam    0x82
  413103:	jp     0x41315a
  413105:	cld    
  413106:	popf   
  413107:	arpl   WORD PTR [edi-0x1d],bx
  41310a:	sahf   
  41310b:	mov    ?,WORD PTR [edx]
  41310d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310e:	jecxz  0x4130d1
  413110:	sti    
  413111:	inc    ecx
  413112:	xchg   ecx,eax
  413113:	leave  
  413114:	inc    edi
  413115:	sbb    eax,0x5a4f194a
  41311a:	push   0xffffff8e
  41311c:	cmp    ecx,ebp
  41311e:	jno    0x41317e
  413120:	push   edx
  413121:	mov    edx,0xbd5f6782
  413126:	or     eax,0xccffce27
  41312c:	loop   0x413113
  41312e:	rcl    DWORD PTR [ebx+esi*1-0x628c0fd],1
  413135:	xchg   edx,eax
  413136:	js     0x413175
  413138:	or     al,0x1e
  41313a:	retf   
  41313b:	xchg   esp,eax
  41313c:	xor    edi,ebp
  41313e:	lahf   
  41313f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413140:	or     al,0xa0
  413142:	out    dx,eax
  413143:	popa   
  413144:	cmp    bl,0x59
  413147:	add    ah,al
  413149:	in     al,dx
  41314a:	scas   eax,DWORD PTR es:[edi]
  41314b:	push   edx
  41314c:	dec    esp
  41314d:	int3   
  41314e:	ins    DWORD PTR es:[edi],dx
  41314f:	out    dx,eax
  413150:	fsub   DWORD PTR [esi-0x39]
  413153:	call   0x77b5:0x13f7bb22
  41315a:	cli    
  41315b:	in     eax,dx
  41315c:	bound  ebp,QWORD PTR [edi]
  41315e:	push   edx
  41315f:	pop    edi
  413160:	jge    0x413108
  413162:	int3   
  413163:	(bad)  
  413164:	jb     0x413140
  413166:	mov    ebx,DWORD PTR [eax+0x35]
  413169:	pop    ebp
  41316a:	dec    ebp
  41316b:	cmp    ecx,esi
  41316d:	in     eax,dx
  41316e:	xchg   ebx,eax
  41316f:	stos   BYTE PTR es:[edi],al
  413170:	(bad)  
  413172:	call   0xf93940c6
  413177:	or     ch,cl
  413179:	jb     0x4131b4
  41317b:	ret    
  41317c:	aam    0x2a
  41317e:	xor    DWORD PTR [ebx+0x2557857f],edi
  413184:	gs sbb eax,0x2d20ec34
  41318a:	mov    esi,0xac22b55c
  41318f:	and    ah,BYTE PTR [ebp+0x78]
  413192:	fdiv   DWORD PTR [ebp+0x75]
  413195:	ja     0x4131c0
  413197:	pop    ds
  413198:	stc    
  413199:	in     eax,dx
  41319a:	ror    dl,1
  41319c:	sub    al,0x7a
  41319e:	push   ebx
  41319f:	outs   dx,DWORD PTR ds:[esi]
  4131a0:	in     al,dx
  4131a1:	in     al,0x74
  4131a3:	arpl   ax,cx
  4131a5:	dec    ebx
  4131a6:	add    dh,BYTE PTR [eax+0x779ba06d]
  4131ac:	loopne 0x4131b0
  4131ae:	add    al,0xb6
  4131b0:	shl    esp,0xa1
  4131b3:	mov    esi,0xdc0a7bb4
  4131b8:	(bad)  
  4131b9:	loopne 0x4131f2
  4131bb:	mov    eax,0x8a8e1c76
  4131c0:	loopne 0x41319b
  4131c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c3:	lock call 0x240a:0x762a20fc
  4131cb:	push   edi
  4131cc:	xor    ecx,DWORD PTR [ebx]
  4131ce:	ficom  WORD PTR [esi]
  4131d0:	div    BYTE PTR [edi-0x244823ed]
  4131d6:	mov    bl,0x19
  4131d8:	lock mov cl,0x81
  4131db:	or     al,0xf6
  4131dd:	out    dx,eax
  4131de:	mov    bh,BYTE PTR [esi-0x3f]
  4131e1:	pop    ds
  4131e2:	sub    eax,0x984e3e81
  4131e7:	pop    ss
  4131e8:	test   eax,0x9699e004
  4131ed:	mov    bl,0x81
  4131ef:	(bad)  
  4131f0:	push   edi
  4131f1:	cmp    al,0xe3
  4131f3:	mov    al,ds:0x9fd6b90
  4131f8:	lds    edx,FWORD PTR [edi+0x36]
  4131fb:	ds xchg esp,eax
  4131fd:	rol    cl,0xc2
  413200:	dec    edi
  413201:	adc    dl,bl
  413203:	(bad)  
  413205:	cmp    al,0x36
  413207:	mov    ecx,0x99893252
  41320c:	push   ds
  41320d:	out    0xc9,eax
  41320f:	loope  0x413265
  413211:	loop   0x413227
  413213:	inc    ebp
  413214:	xchg   DWORD PTR [ebx],eax
  413216:	xlat   BYTE PTR ds:[ebx]
  413217:	push   esi
  413218:	int3   
  413219:	ds inc esi
  41321b:	shr    BYTE PTR [ebp+eax*4+0x3c94a62d],1
  413222:	cs push 0x9c0c7b3c
  413228:	retf   
  413229:	push   esi
  41322a:	add    dl,BYTE PTR [ecx+0x1a]
  41322d:	mov    fs,WORD PTR [edi]
  41322f:	push   cx
  413231:	mov    ds:0xe836493,eax
  413236:	mov    ds:0x3ecf1ee3,eax
  41323b:	out    0x7d,eax
  41323d:	enter  0x5cbe,0xbe
  413241:	inc    edi
  413242:	push   es
  413243:	pop    es
  413244:	and    cl,BYTE PTR [ecx-0x25]
  413247:	lea    eax,[ebx]
  413249:	inc    edx
  41324a:	stc    
  41324b:	sti    
  41324c:	fldenv [esi+edx*2-0x3c3fec6a]
  413253:	loope  0x413226
  413255:	pop    eax
  413256:	(bad)  
  413258:	mov    DWORD PTR [ebx+0x979f2e5],ecx
  41325e:	adc    eax,0x60c354d1
  413263:	xor    eax,0x8ad04104
  413268:	add    eax,0x61d1bfb7
  41326d:	(bad)  
  41326e:	stc    
  41326f:	sub    ecx,DWORD PTR [edx]
  413271:	pop    edi
  413272:	pop    ss
  413273:	fwait
  413274:	test   ebx,0x2fe6967a
  41327a:	sti    
  41327b:	jnp    0x413254
  41327d:	mov    cl,0xbe
  41327f:	int3   
  413280:	bound  eax,QWORD PTR [ebx+ebx*2]
  413283:	pop    ebp
  413284:	jle    0x41327e
  413286:	dec    edx
  413287:	dec    ebp
  413288:	lods   eax,DWORD PTR ds:[esi]
  413289:	jne    0x413306
  41328b:	ret    
  41328c:	xor    eax,0x7ce961d5
  413291:	cwde   
  413292:	arpl   WORD PTR [bp-0x203b],sp
  413297:	sub    BYTE PTR [edi+0x5c942081],0xc3
  41329e:	mov    esp,0xa08eca97
  4132a3:	pop    edi
  4132a4:	icebp  
  4132a5:	out    dx,al
  4132a6:	dec    edx
  4132a7:	lods   al,BYTE PTR ds:[esi]
  4132a8:	xchg   BYTE PTR [ebp-0x2be02c19],ah
  4132ae:	pop    edi
  4132af:	stc    
  4132b0:	inc    eax
  4132b1:	outs   dx,BYTE PTR ds:[esi]
  4132b2:	jg     0x4132b5
  4132b4:	mov    ebp,0xe73a5872
  4132b9:	mov    ch,0x33
  4132bb:	dec    esi
  4132bc:	sub    ch,ah
  4132be:	cmp    al,BYTE PTR [edx]
  4132c0:	adc    dh,BYTE PTR [ebp+0x25]
  4132c3:	rol    BYTE PTR [ebp+0x4f0e0fcf],1
  4132c9:	aad    0xba
  4132cb:	mov    al,ds:0x99b83c84
  4132d0:	mov    bh,BYTE PTR [esi+0x2c]
  4132d3:	ins    DWORD PTR es:[edi],dx
  4132d4:	pop    es
  4132d5:	xchg   DWORD PTR [edi+0x13f3eeb6],esi
  4132db:	js     0x413342
  4132dd:	push   ecx
  4132de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132df:	and    DWORD PTR [edi-0x50],ebx
  4132e2:	or     ecx,DWORD PTR [edx-0x694d6c80]
  4132e8:	xchg   edi,eax
  4132e9:	dec    ebp
  4132ea:	pop    ebx
  4132eb:	outs   dx,BYTE PTR ds:[esi]
  4132ec:	fs and ax,0x8525
  4132f1:	test   al,0xe9
  4132f3:	mov    bh,0x4
  4132f5:	jne    0x4132fc
  4132f7:	ins    BYTE PTR es:[edi],dx
  4132f8:	test   DWORD PTR [edx-0x73],0x644f1085
  4132ff:	cmp    eax,0x254743a8
  413304:	cmc    
  413305:	mov    ebx,0x8b7288e7
  41330a:	ret    
  41330b:	(bad)  
  41330c:	aad    0x4f
  41330e:	xor    ecx,DWORD PTR [eax-0x49]
  413311:	(bad)  
  413312:	in     al,dx
  413313:	std    
  413314:	arpl   WORD PTR [esp+ecx*2],ax
  413317:	(bad)  
  413318:	(bad)
  41331b:	mov    eax,0x409e9f66
  413320:	cdq    
  413321:	push   edi
  413322:	or     ah,BYTE PTR [edi+edx*1-0x4f4852a6]
  413329:	dec    edi
  41332a:	js     0x4132c7
  41332c:	inc    esp
  41332d:	sub    DWORD PTR [ebx+0x3c],ebx
  413330:	or     BYTE PTR [edx],cl
  413332:	xchg   BYTE PTR [esi],ah
  413334:	xor    eax,0xc9ad8510
  413339:	cmp    eax,0xf4a4b86a
  41333e:	mov    DWORD PTR [eax+0x1b5761f0],esi
  413344:	scas   eax,DWORD PTR es:[edi]
  413345:	cmp    bh,ah
  413347:	sub    eax,0x1c2062fe
  41334c:	inc    esp
  41334d:	xor    ch,al
  41334f:	je     0x413359
  413351:	sub    ebx,DWORD PTR [edx]
  413353:	call   FWORD PTR [edi+0x49]
  413356:	inc    ebx
  413357:	bound  edi,QWORD PTR [edi]
  413359:	adc    BYTE PTR [ebx+eax*1+0x8b13aa0],0x37
  413361:	test   BYTE PTR [ebp+0x5a],bh
  413364:	into   
  413365:	push   0xffffffec
  413367:	jae    0x41335c
  413369:	js     0x41334b
  41336b:	add    eax,0x7d5a0ebf
  413370:	shl    BYTE PTR [ebp-0x4b5d3610],cl
  413376:	jne    0x41335a
  413378:	ins    DWORD PTR es:[edi],dx
  413379:	ret    0x53de
  41337c:	xor    DWORD PTR [edx+edx*8-0x7],eax
  413380:	xor    al,0x84
  413382:	in     eax,0x1e
  413384:	and    DWORD PTR [edi-0x3db1cf31],ebx
  41338a:	mov    BYTE PTR [ecx],bh
  41338c:	jp     0x4133da
  41338e:	mov    ds,WORD PTR [ecx+0x76]
  413391:	dec    edi
  413392:	sti    
  413393:	add    BYTE PTR [edi+0x3f1c6460],0xc2
  41339a:	mov    esi,0xf5d0c081
  41339f:	xchg   BYTE PTR [ecx],dh
  4133a1:	call   0xa6ba:0xce2f9ce0
  4133a8:	js     0x41337e
  4133aa:	(bad)  
  4133ab:	adc    BYTE PTR [ebx-0x23],bh
  4133ae:	sbb    eax,0xffffffde
  4133b1:	inc    esi
  4133b2:	in     al,0x5e
  4133b4:	jp     0x413339
  4133b6:	jo     0x413367
  4133b8:	int3   
  4133b9:	fild   WORD PTR [edi-0x7f4602c4]
  4133bf:	xchg   ecx,eax
  4133c0:	fcom   QWORD PTR [eax+0x40]
  4133c3:	hlt    
  4133c4:	sbb    edi,eax
  4133c6:	mov    esi,0xdf5066bc
  4133cb:	nop
  4133cc:	(bad)  
  4133cd:	cmp    ch,BYTE PTR [ebx+0x54]
  4133d0:	and    bh,ah
  4133d2:	add    eax,0xf4c8e025
  4133d7:	mov    dl,0xe6
  4133d9:	cmp    cl,0xdb
  4133dc:	rcl    DWORD PTR [edi-0x55c7f709],1
  4133e2:	ja     0x413368
  4133e4:	(bad)  
  4133e5:	adc    ebp,DWORD PTR ds:0x85033db
  4133eb:	jmp    0x490e96
  4133f0:	lea    ebx,[eax+0x749f442f]
  4133f6:	fwait
  4133f7:	push   es
  4133f8:	addr16 xor al,0x37
  4133fb:	mov    ?,WORD PTR [ecx-0x2f]
  4133fe:	arpl   WORD PTR [eax+edx*1],si
  413401:	jmp    0x413440
  413403:	iret   
  413404:	inc    eax
  413405:	cdq    
  413406:	(bad)  
  413407:	jmp    ebx
  413409:	(bad)  
  41340a:	ror    DWORD PTR [ecx-0x1408bd3c],0x46
  413411:	shl    BYTE PTR [esp+edx*4],cl
  413414:	xor    eax,0x6cf2bfd
  413419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341a:	inc    eax
  41341b:	das    
  41341c:	sub    cl,dh
  41341e:	mov    eax,ds:0xee818484
  413423:	pushf  
  413424:	xadd   DWORD PTR [eax+0x5],eax
  413428:	les    eax,FWORD PTR [edx-0x756773a6]
  41342e:	lds    esp,FWORD PTR [ebx+0x22]
  413431:	jecxz  0x41347a
  413433:	(bad)  
  413434:	aad    0x36
  413436:	xor    DWORD PTR [edx-0x7f8828ff],eax
  41343c:	scas   eax,DWORD PTR es:[edi]
  41343d:	mov    esi,0x52b8697b
  413442:	push   ds
  413443:	ret    0xd0dd
  413446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413447:	mov    esp,gs
  413449:	aas    
  41344a:	mov    eax,ds:0xd33a91ee
  41344f:	(bad)
  413452:	or     al,0xae
  413454:	int3   
  413455:	jbe    0x413481
  413457:	jmp    0xe3c8:0xaeabaed8
  41345e:	dec    ebp
  41345f:	jp     0x41347a
  413461:	pop    ss
  413462:	nop
  413463:	jnp    0x413448
  413465:	js     0x4134b6
  413467:	popa   
  413468:	and    DWORD PTR [ebx+0x42],0xffffff9a
  41346c:	push   ss
  41346d:	cmp    bl,BYTE PTR [edi+ebx*8-0x5a]
  413471:	or     ch,ah
  413473:	xchg   ebp,eax
  413474:	nop
  413475:	cmc    
  413476:	add    BYTE PTR [ebp+0xb],al
  413479:	or     eax,0xb5134b7e
  41347e:	fcmovnb st,st(2)
  413480:	(bad)  
  413481:	in     al,dx
  413482:	sub    esp,DWORD PTR [edx-0x213e9792]
  413488:	and    eax,0x4b3a799f
  41348d:	stc    
  41348e:	ror    BYTE PTR [ebx],0xb
  413491:	dec    edx
  413492:	jle    0x41347b
  413494:	cli    
  413495:	nop
  413496:	test   eax,0x81e9ff47
  41349b:	xor    esp,DWORD PTR [ebx+0x71078313]
  4134a1:	cmc    
  4134a2:	mov    eax,0x55ff1972
  4134a7:	imul   ebp,DWORD PTR [ebx+0x46],0xffffffd7
  4134ab:	clc    
  4134ac:	sbb    eax,0x79837e6e
  4134b1:	mov    ebp,0xbb90c75b
  4134b6:	outs   dx,BYTE PTR ds:[esi]
  4134b7:	icebp  
  4134b8:	mov    al,0xc6
  4134ba:	cwde   
  4134bb:	cwde   
  4134bc:	cmp    eax,0x622788d1
  4134c1:	pop    ecx
  4134c2:	sahf   
  4134c3:	push   eax
  4134c4:	push   0xe1aded3
  4134c9:	or     DWORD PTR [edi],ebp
  4134cb:	xor    edi,eax
  4134cd:	sub    eax,0xdd073a89
  4134d2:	fs aaa 
  4134d4:	add    eax,0xe62494d2
  4134d9:	popa   
  4134da:	lods   al,BYTE PTR ds:[esi]
  4134db:	pop    ecx
  4134dc:	mov    dh,ah
  4134de:	mov    ebx,0xb22d2fd6
  4134e3:	jg     0x4134ec
  4134e5:	std    
  4134e6:	adc    DWORD PTR [edi],edi
  4134e8:	adc    BYTE PTR [ebp+0x32],ch
  4134eb:	xchg   edi,eax
  4134ec:	sub    al,0x25
  4134ee:	loopne 0x413569
  4134f0:	inc    edi
  4134f1:	lock sbb eax,0xc6e63742
  4134f7:	adc    DWORD PTR [edx+0x2d3fc469],ebp
  4134fd:	retf   0x7db6
  413500:	xchg   DWORD PTR [ebp-0x7dcc85ec],esp
  413506:	sbb    ah,BYTE PTR [ebx+eiz*8+0x469d1bd2]
  41350d:	loop   0x41353d
  41350f:	mov    ah,0x2f
  413511:	cmp    eax,0x25375add
  413516:	inc    eax
  413517:	dec    eax
  413518:	jae    0x41352e
  41351a:	fcmovne st,st(2)
  41351c:	inc    edi
  41351d:	das    
  41351e:	mov    cl,0x9
  413520:	sbb    BYTE PTR [ebx-0x13],ah
  413523:	mov    esi,0x5b5e47ea
  413528:	adc    eax,DWORD PTR [ebp+ebp*1-0x9071ff0]
  41352f:	cdq    
  413530:	push   0xffffff98
  413532:	push   ecx
  413533:	mov    ebx,DWORD PTR [esi+0x38]
  413536:	add    eax,0xcea81ba7
  41353b:	cmc    
  41353c:	inc    esi
  41353d:	inc    esp
  41353e:	sub    eax,0x85727fe8
  413543:	and    DWORD PTR [esi+0x26],edi
  413546:	mov    esi,ebp
  413548:	cmc    
  413549:	fidivr DWORD PTR [ebp+0x5c6ae878]
  41354f:	loopne 0x4135cb
  413551:	call   0x98f5:0xd2147042
  413558:	jae    0x413521
  41355a:	pop    ds
  41355b:	data16 rcl bl,0x3
  41355f:	adc    BYTE PTR [edx+0x7a],al
  413562:	jb     0x4135d6
  413564:	jmp    0x4135c5
  413566:	shl    DWORD PTR [ebx-0x44e6051f],0x2c
  41356d:	(bad)  
  41356e:	out    dx,al
  41356f:	mov    esp,0xa6c1ffac
  413574:	sub    DWORD PTR [esi+0x5ee102d3],0xdc2284d1
  41357e:	push   ds
  41357f:	lahf   
  413580:	pop    ebx
  413581:	sub    eax,DWORD PTR [ebx-0x4744065c]
  413587:	and    BYTE PTR [edi+0x6e],dh
  41358a:	cwde   
  41358b:	call   DWORD PTR [edx]
  41358d:	xor    esi,esp
  41358f:	in     eax,0x40
  413591:	sahf   
  413592:	sbb    ah,BYTE PTR [edi+0x33]
  413595:	xor    eax,0xea67830
  41359a:	inc    ebp
  41359b:	stc    
  41359c:	shl    esp,cl
  41359e:	mov    DWORD PTR [edx],ebx
  4135a0:	subps  xmm1,XMMWORD PTR [ecx-0x3f84dfd3]
  4135a7:	xor    esp,DWORD PTR [edi+edi*1-0x41325346]
  4135ae:	(bad)  
  4135af:	adc    eax,0x93117321
  4135b4:	test   BYTE PTR [edi-0x1f],ch
  4135b7:	inc    esp
  4135b8:	shl    BYTE PTR [edi-0x10c36720],1
  4135be:	test   BYTE PTR [eax+0x21cb280],cl
  4135c4:	mov    edx,fs
  4135c6:	sub    al,0x35
  4135c8:	push   ecx
  4135c9:	lods   eax,DWORD PTR ds:[esi]
  4135ca:	cmp    DWORD PTR [eax+0x2c],eax
  4135cd:	call   0xdb501b2f
  4135d2:	sbb    eax,DWORD PTR [eax+0x5d39e657]
  4135d8:	pop    ebx
  4135d9:	mov    cl,0xab
  4135db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135dc:	xchg   ebx,eax
  4135dd:	into   
  4135de:	jecxz  0x4135e1
  4135e0:	iret   
  4135e1:	xlat   BYTE PTR ds:[ebx]
  4135e2:	or     al,0x6b
  4135e4:	jmp    0x4135f7
  4135e6:	imul   ebx,DWORD PTR [ecx],0x1c
  4135e9:	sbb    ecx,DWORD PTR [edx-0x37d7b7ec]
  4135ef:	mov    eax,0x7144f13
  4135f4:	mov    dl,al
  4135f6:	mov    ebx,0x83fcacf3
  4135fb:	and    dh,BYTE PTR [edi]
  4135fd:	mov    fs,WORD PTR [ecx+0x5e869baf]
  413603:	lods   al,BYTE PTR ds:[esi]
  413604:	into   
  413605:	bnd jno 0x413598
  413608:	mov    al,bh
  41360a:	loopne 0x4135f7
  41360c:	xlat   BYTE PTR ds:[ebx]
  41360d:	adc    eax,0xd741b4ce
  413612:	sub    bh,BYTE PTR [edi]
  413614:	xchg   ebx,eax
  413615:	and    eax,0x8d47e71c
  41361a:	mov    esi,0xaf8f40e1
  41361f:	xor    BYTE PTR [esi-0x38],0xde
  413623:	mov    al,ds:0x6d397423
  413628:	add    al,0x90
  41362a:	jle    0x413637
  41362c:	mov    bl,0xe4
  41362e:	dec    edi
  41362f:	pop    esp
  413630:	cmc    
  413631:	shr    DWORD PTR [ebx-0x8c0b753],0x7
  413638:	mov    cl,0x2f
  41363a:	xchg   BYTE PTR [ebx+esi*8],al
  41363d:	mov    edx,0x6524dfb0
  413642:	fcom   DWORD PTR [ecx+0x77e4abde]
  413648:	push   edi
  413649:	push   0x1b
  41364b:	dec    ecx
  41364c:	push   ss
  41364d:	fsubr  QWORD PTR [ecx-0x5a]
  413650:	add    al,0x1d
  413652:	ja     0x4136bd
  413654:	inc    ebx
  413655:	pop    esi
  413656:	pop    ds
  413657:	inc    esp
  413658:	sbb    edx,DWORD PTR [ebp-0x70]
  41365b:	pop    ebx
  41365c:	sbb    dh,BYTE PTR [edi+ebx*8-0x74]
  413660:	mov    esi,cs
  413662:	pop    es
  413663:	int3   
  413664:	in     al,dx
  413665:	aam    0x5a
  413667:	test   al,0x5e
  413669:	shr    DWORD PTR [esi-0x4b],1
  41366c:	lahf   
  41366d:	sub    eax,0x80e0b7ce
  413672:	(bad)  
  413673:	fistp  WORD PTR ds:0xff11b73f
  413679:	xchg   esi,eax
  41367a:	jnp    0x4136e8
  41367c:	inc    ebx
  41367d:	jne    0x413676
  41367f:	pusha  
  413680:	or     eax,0x4640aee9
  413685:	lahf   
  413686:	mov    ebp,0xb1593e6c
  41368b:	mov    ecx,0x9042db48
  413690:	sbb    ebx,0x32
  413693:	dec    esp
  413694:	scas   eax,DWORD PTR es:[edi]
  413695:	pop    esi
  413696:	or     dl,bl
  413698:	sub    bh,dl
  41369a:	lods   eax,DWORD PTR ds:[esi]
  41369b:	lock std 
  41369d:	xchg   edi,eax
  41369e:	push   ss
  41369f:	jp     0x41370e
  4136a1:	add    BYTE PTR [ebp-0x59ec1be1],ah
  4136a7:	sbb    ebp,DWORD PTR [edx-0x7046dc01]
  4136ad:	in     eax,dx
  4136ae:	jns    0x4136b4
  4136b0:	dec    ebp
  4136b1:	popf   
  4136b2:	mov    bh,0x8d
  4136b4:	add    BYTE PTR [edi+0x555bcb86],bh
  4136ba:	dec    edi
  4136bb:	jge    0x4136ec
  4136bd:	lahf   
  4136be:	scas   al,BYTE PTR es:[edi]
  4136bf:	hlt    
  4136c0:	stos   BYTE PTR es:[edi],al
  4136c1:	out    dx,al
  4136c2:	push   edi
  4136c3:	popa   
  4136c4:	jo     0x413658
  4136c6:	xchg   esp,eax
  4136c7:	out    dx,eax
  4136c8:	push   es
  4136c9:	mov    esi,0x3065b013
  4136ce:	push   ebx
  4136cf:	fstp   DWORD PTR [eax+ebp*1+0x18]
  4136d3:	loop   0x41365d
  4136d5:	mov    eax,esi
  4136d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d8:	xchg   DWORD PTR ds:0x118e2d3b,edi
  4136de:	jl     0x413708
  4136e0:	xor    ecx,DWORD PTR [edx-0x54]
  4136e3:	push   ss
  4136e4:	or     eax,esp
  4136e6:	xchg   BYTE PTR [edx+0x55],ch
  4136e9:	mov    bl,0xb2
  4136eb:	adc    ebx,DWORD PTR [ebx-0x282cdc2d]
  4136f1:	lods   al,BYTE PTR ds:[esi]
  4136f2:	stc    
  4136f3:	jnp    0x413680
  4136f5:	into   
  4136f6:	fdiv   DWORD PTR [edx-0x5c]
  4136f9:	push   ds
  4136fa:	in     al,dx
  4136fb:	jmp    0x9addde5f
  413700:	add    DWORD PTR ds:0x45688e4e,ebx
  413706:	fs sti 
  413708:	cmp    bh,BYTE PTR [eax]
  41370a:	out    dx,eax
  41370b:	inc    esp
  41370c:	rcr    BYTE PTR [edi+eiz*8-0x17],cl
  413710:	out    dx,eax
  413711:	inc    esp
  413712:	es jle 0x413780
  413715:	and    ecx,DWORD PTR [edi-0x63]
  413718:	pop    es
  413719:	lods   eax,DWORD PTR ds:[esi]
  41371a:	sbb    BYTE PTR [ecx-0x2796373b],bh
  413720:	mov    ch,0x70
  413722:	xor    BYTE PTR [ebx+edi*1+0x10],bh
  413726:	adc    eax,0xd8f04ed8
  41372b:	and    al,0xe3
  41372d:	and    DWORD PTR [edi-0x469c2279],eax
  413733:	sbb    edx,esp
  413735:	mov    al,0x60
  413737:	push   cs
  413738:	sbb    al,0x1d
  41373a:	out    dx,al
  41373b:	lock repnz inc ebp
  41373e:	not    BYTE PTR [bp+si+0x6f49]
  413743:	lock popf 
  413745:	sub    BYTE PTR [edx+0x15],dh
  413748:	dec    ebx
  413749:	jae    0x413727
  41374b:	div    DWORD PTR [eax]
  41374d:	xor    eax,0x36ba9de7
  413752:	aaa    
  413753:	aas    
  413754:	test   al,0xb1
  413756:	popa   
  413757:	shl    DWORD PTR [ebx],0xd7
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	dec    ebx
  41375c:	fistp  DWORD PTR [ecx]
  41375e:	jb     0x4136f7
  413760:	push   es
  413761:	dec    esi
  413762:	cmp    DWORD PTR [ecx+edx*2-0x11],ebx
  413766:	shr    DWORD PTR [esi+0x19],0x5b
  41376a:	or     eax,ecx
  41376c:	xor    BYTE PTR [eax-0x3e],bl
  41376f:	mov    ecx,0x9b7c1a8b
  413774:	pop    edi
  413775:	xchg   esp,eax
  413776:	in     al,0x38
  413778:	jle    0x4136ff
  41377a:	sbb    BYTE PTR [esi+0x24],ah
  41377d:	int3   
  41377e:	ins    BYTE PTR es:[edi],dx
  41377f:	aaa    
  413780:	iret   
  413781:	xchg   ebp,eax
  413782:	xchg   esp,eax
  413783:	pusha  
  413784:	push   edi
  413785:	stc    
  413786:	test   BYTE PTR [eax-0x8a2f81c],0x52
  41378d:	sub    edx,ecx
  41378f:	dec    ebp
  413790:	cmp    ah,BYTE PTR [edi+0x47]
  413793:	js     0x413766
  413795:	pop    esp
  413796:	jl     0x41371f
  413798:	and    ah,bh
  41379a:	retf   
  41379b:	dec    esp
  41379c:	gs or  al,0x4a
  41379f:	pushf  
  4137a0:	(bad)  
  4137a1:	jnp    0x413822
  4137a3:	(bad)  
  4137a4:	aam    0x69
  4137a6:	xchg   edx,eax
  4137a7:	cli    
  4137a8:	idiv   BYTE PTR [edi+0x6f5537b5]
  4137ae:	(bad)  
  4137af:	mov    ah,0x8d
  4137b1:	dec    eax
  4137b2:	pusha  
  4137b3:	cs xchg esp,eax
  4137b5:	dec    esp
  4137b6:	aad    0x8c
  4137b8:	mov    dl,0xab
  4137ba:	(bad)  
  4137bb:	std    
  4137bc:	aas    
  4137bd:	popa   
  4137be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bf:	in     eax,0x49
  4137c1:	mov    dh,0xb
  4137c3:	bswap  edi
  4137c5:	sti    
  4137c6:	xor    al,0x68
  4137c8:	add    dh,BYTE PTR [ebx]
  4137ca:	and    ebx,esp
  4137cc:	enter  0x3e61,0xcf
  4137d0:	ja     0x413842
  4137d2:	mov    ch,0x17
  4137d4:	pop    ecx
  4137d5:	sub    esi,eax
  4137d7:	jl     0x4137e0
  4137d9:	cmp    cl,BYTE PTR ds:0x8d117ca5
  4137df:	pop    ss
  4137e0:	shl    BYTE PTR [edx+0xe],0x26
  4137e4:	faddp  st(2),st
  4137e6:	pop    esi
  4137e7:	lock push es
  4137e9:	cld    
  4137ea:	das    
  4137eb:	jle    0x4137f8
  4137ed:	mov    dl,0xd1
  4137ef:	icebp  
  4137f0:	cmp    eax,0xd2e4fe26
  4137f5:	nop
  4137f6:	mov    ah,0x1
  4137f8:	mov    ebx,0xd1bc168
  4137fd:	sahf   
  4137fe:	push   es
  4137ff:	fstp   DWORD PTR [edx-0x7e]
  413802:	sbb    eax,0xfbf7ac43
  413807:	adc    BYTE PTR [ebx-0x3bebf4e8],ah
  41380d:	mov    al,0xe0
  41380f:	fdivr  st,st(3)
  413811:	fldcw  WORD PTR [ecx]
  413813:	add    BYTE PTR [edx-0x51],bl
  413816:	xlat   BYTE PTR ds:[ebx]
  413817:	jecxz  0x413896
  413819:	push   ecx
  41381a:	push   ss
  41381b:	jmp    0xca4d:0x8cb7683f
  413822:	imul   BYTE PTR [esi+0x44725fe4]
  413828:	dec    esi
  413829:	bnd jl 0x4137c8
  41382c:	mov    WORD PTR [ebp+0x54],gs
  41382f:	and    DWORD PTR [ecx+0x45],edx
  413832:	or     BYTE PTR [esi+edx*4-0xdc487e1],ah
  413839:	xor    eax,0xc628b9e2
  41383e:	sahf   
  41383f:	fwait
  413840:	push   esp
  413841:	mov    WORD PTR [eax-0x38],gs
  413844:	mov    BYTE PTR [ecx],ah
  413846:	leave  
  413847:	cmp    al,0x8f
  413849:	stos   BYTE PTR es:[edi],al
  41384a:	xor    DWORD PTR [ebx-0x6],eax
  41384d:	and    eax,0x8354a7ec
  413852:	retf   0x7f73
  413855:	dec    esp
  413856:	gs and ecx,esp
  413859:	mov    ecx,0xcb436e7d
  41385e:	mov    al,0xdd
  413860:	mov    dh,0xbd
  413862:	sbb    eax,0x4d97d52a
  413867:	test   eax,0x5b17f6b9
  41386c:	add    eax,0x426b0f30
  413871:	push   cs
  413872:	clc    
  413873:	scas   al,BYTE PTR es:[edi]
  413874:	dec    edx
  413875:	xchg   BYTE PTR [edx],dh
  413877:	fldenv [ebx+0x5b29c5a7]
  41387d:	scas   eax,DWORD PTR es:[edi]
  41387e:	mov    DWORD PTR [esi+0x15],0x1e76717b
  413885:	add    al,0xd5
  413887:	pop    edx
  413888:	out    dx,eax
  413889:	jb     0x413848
  41388b:	in     al,0x86
  41388d:	shr    edi,1
  41388f:	faddp  st(7),st
  413891:	inc    ebx
  413892:	pop    ds
  413893:	cmp    al,bl
  413895:	xor    esi,DWORD PTR [edi-0x67]
  413898:	into   
  413899:	add    ah,ah
  41389b:	mov    esp,0xeffa8854
  4138a0:	(bad)  
  4138a1:	mov    ah,0x8d
  4138a3:	pop    edi
  4138a4:	paddusw mm4,mm6
  4138a7:	mov    ebp,0xb6daa959
  4138ac:	loop   0x41387d
  4138ae:	and    al,0x6
  4138b0:	jg     0x4138f2
  4138b2:	jmp    DWORD PTR [eax+0x28]
  4138b5:	mov    eax,ds:0x86d8069f
  4138ba:	push   0x2cf3fee0
  4138bf:	mul    DWORD PTR [esi+0x56]
  4138c2:	and    eax,0xe884ec1b
  4138c7:	xor    DWORD PTR [ebx],ebp
  4138c9:	idiv   BYTE PTR [edi]
  4138cb:	pop    ss
  4138cc:	cmp    eax,0x114116a2
  4138d1:	inc    esi
  4138d2:	adc    BYTE PTR [ebx+0x73f7a9a7],0x16
  4138d9:	sub    dh,ah
  4138db:	inc    edx
  4138dc:	pop    ecx
  4138dd:	and    ebx,eax
  4138df:	or     BYTE PTR [ebp+0x1f],0xc9
  4138e3:	dec    ecx
  4138e4:	js     0x4138ac
  4138e6:	xlat   BYTE PTR ds:[ebx]
  4138e7:	xor    al,0x8
  4138e9:	ds jae 0x4138c5
  4138ec:	pop    ebp
  4138ed:	in     eax,dx
  4138ee:	adc    al,0x59
  4138f0:	mov    ah,0xb
  4138f2:	push   eax
  4138f3:	imul   edi,esi,0x75
  4138f6:	sbb    eax,0xfdd06574
  4138fb:	or     DWORD PTR ds:[edx-0xdd7995a],ebx
  413902:	cs jb  0x413971
  413905:	push   0x15
  413907:	jge    0x41389f
  413909:	jg     0x4138c8
  41390b:	es pop eax
  41390d:	cmp    al,0x3d
  41390f:	mov    eax,ds:0x1a29e353
  413914:	mov    dh,0x40
  413916:	inc    esi
  413917:	adc    dh,BYTE PTR [eax+0x6a]
  41391a:	das    
  41391b:	mov    cl,0x4b
  41391d:	mov    edi,0xb7c0d388
  413922:	xchg   edx,eax
  413923:	mov    ch,0xe5
  413925:	cmp    bl,BYTE PTR [edx-0x1ccd1639]
  41392b:	icebp  
  41392c:	xchg   ebx,eax
  41392d:	mov    ebp,DWORD PTR [esi+0x9]
  413930:	jns    0x413939
  413932:	leave  
  413933:	sbb    BYTE PTR [ebp+0x100d312c],dl
  413939:	rcr    DWORD PTR [esi-0xb310072],0x65
  413940:	rol    BYTE PTR ds:0x90a494a8,0x12
  413947:	test   cl,ah
  413949:	dec    ebp
  41394a:	inc    ecx
  41394b:	xor    eax,ebx
  41394d:	pop    es
  41394e:	push   0x717468d7
  413953:	cmp    eax,0xecaef529
  413958:	sahf   
  413959:	(bad)  
  41395a:	(bad)  
  41395b:	call   0x4284:0x7ae86a5c
  413962:	add    al,0x44
  413964:	sub    DWORD PTR [ebp+0x92ce548],edi
  41396a:	adc    dh,0x99
  41396d:	aad    0x1d
  41396f:	or     al,0x3
  413971:	cmp    DWORD PTR [eax-0x56],edx
  413974:	xchg   ebx,eax
  413975:	scas   al,BYTE PTR es:[edi]
  413976:	sti    
  413977:	pop    edx
  413978:	adc    DWORD PTR es:[edi+eax*1-0xd],ebp
  41397d:	dec    eax
  41397e:	ficom  DWORD PTR [esi-0x79aeb537]
  413984:	mov    eax,ds:0xb4fab1a0
  413989:	sbb    DWORD PTR [ecx+eiz*8-0x55],esp
  41398d:	adc    esi,ecx
  41398f:	push   edx
  413990:	sbb    DWORD PTR [esi+0x1cf238ea],esi
  413996:	add    ch,ah
  413998:	and    BYTE PTR [edx],dh
  41399a:	dec    edx
  41399b:	js     0x41392b
  41399d:	and    dl,BYTE PTR [edx*4-0x2e4c091d]
  4139a4:	outs   dx,DWORD PTR ds:[esi]
  4139a5:	fstp   QWORD PTR [edx-0x2]
  4139a8:	call   0xe2000ca7
  4139ad:	stos   DWORD PTR es:[edi],eax
  4139ae:	loope  0x4139c4
  4139b0:	fild   DWORD PTR [edx]
  4139b2:	mov    eax,ds:0x33b3f05e
  4139b7:	push   0x68239044
  4139bc:	mov    DWORD PTR [eax+edi*2+0x67],ecx
  4139c0:	sbb    BYTE PTR [eax+0x452e6cea],0x55
  4139c7:	aas    
  4139c8:	enter  0x150d,0xec
  4139cc:	scas   eax,DWORD PTR es:[edi]
  4139cd:	mov    al,ds:0x45649265
  4139d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d3:	pushf  
  4139d4:	inc    edi
  4139d5:	loope  0x4139d3
  4139d7:	pop    esp
  4139d8:	cmp    ebp,ebp
  4139da:	inc    edi
  4139db:	sbb    DWORD PTR [eax-0x4c8948b8],eax
  4139e1:	shl    DWORD PTR ds:0xc4f4a18,cl
  4139e7:	push   edx
  4139e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e9:	rcr    DWORD PTR [eax],1
  4139eb:	adc    eax,0xccb14cc2
  4139f0:	mov    ebx,0xf4c0d375
  4139f5:	ffreep st(4)
  4139f7:	dec    edx
  4139f8:	into   
  4139f9:	(bad)  
  4139fa:	jnp    0x413a14
  4139fc:	mov    esi,0xe4620b07
  413a01:	xor    cl,BYTE PTR [ebp-0x1a]
  413a04:	pop    eax
  413a05:	out    0xec,al
  413a07:	xchg   BYTE PTR [ecx-0x3],dl
  413a0a:	and    edx,esi
  413a0c:	test   BYTE PTR [edx-0x1d69a8c],bl
  413a12:	aad    0x96
  413a14:	std    
  413a15:	enter  0xa48e,0x63
  413a19:	mov    dl,0xc
  413a1b:	in     eax,dx
  413a1c:	inc    esi
  413a1d:	mov    ebp,0xef69158e
  413a22:	mov    bh,bh
  413a24:	push   0xffffffd8
  413a26:	adc    bl,BYTE PTR [ebx+esi*8-0x6974d65e]
  413a2d:	(bad)  
  413a2f:	dec    edx
  413a30:	fidivr WORD PTR [eax+0x3a]
  413a33:	daa    
  413a34:	xchg   edx,eax
  413a35:	mov    edi,0x36869267
  413a3a:	push   0x7fb51ffd
  413a3f:	std    
  413a40:	call   0xb8a:0x358eb10d
  413a47:	xor    DWORD PTR [eax-0x44],eax
  413a4a:	push   ds
  413a4b:	dec    ebp
  413a4c:	xlat   BYTE PTR ds:[ebx]
  413a4d:	sub    DWORD PTR ds:0xeda1f11b,ebx
  413a53:	mov    ds:0x640b83b4,eax
  413a58:	popa   
  413a59:	pop    edx
  413a5a:	jl     0x413ad7
  413a5c:	dec    ebp
  413a5d:	cmp    edi,eax
  413a5f:	mov    eax,gs
  413a61:	push   edi
  413a62:	push   ebp
  413a63:	fisttp WORD PTR [esi+0x519849ec]
  413a69:	mov    ecx,0x2f53bec1
  413a6e:	pop    edx
  413a6f:	leave  
  413a70:	fcomi  st,st(3)
  413a72:	sbb    eax,0xa4152147
  413a77:	call   0xbd85:0xe5145384
  413a7e:	ins    DWORD PTR es:[edi],dx
  413a7f:	ret    
  413a80:	mov    ch,dl
  413a82:	call   0x9dae891b
  413a87:	in     eax,dx
  413a88:	test   BYTE PTR [edx],0x76
  413a8b:	(bad)  
  413a8c:	cli    
  413a8d:	pop    edx
  413a8e:	mov    ds:0x55d600a,eax
  413a93:	pop    es
  413a94:	mov    ebx,0x875d5b3b
  413a99:	stos   DWORD PTR es:[edi],eax
  413a9a:	sbb    edi,esp
  413a9c:	xor    DWORD PTR [esi+ebp*4-0x20d5dcb4],esi
  413aa3:	jl     0x413aae
  413aa5:	mov    dl,0x7c
  413aa7:	sbb    al,0x4a
  413aa9:	adc    eax,0x8af294b
  413aae:	mov    ch,0x11
  413ab0:	cli    
  413ab1:	test   DWORD PTR [esi+0x1cd307a6],eax
  413ab7:	jl     0x413b29
  413ab9:	leave  
  413aba:	xor    esi,DWORD PTR [eax+edx*4-0x3e44e5cb]
  413ac1:	mov    ds:0x7ed10f69,eax
  413ac6:	(bad)  
  413ac7:	inc    DWORD PTR [eax+ebp*1+0x191bc88f]
  413ace:	lds    esi,FWORD PTR [ebp-0x4343ac86]
  413ad4:	pop    ecx
  413ad5:	mov    ebx,0x187bc123
  413ada:	adc    eax,DWORD PTR [eax+eiz*1+0x107d7827]
  413ae1:	(bad)  
  413ae3:	in     al,dx
  413ae4:	lods   eax,DWORD PTR ds:[esi]
  413ae5:	push   esi
  413ae6:	out    dx,eax
  413ae7:	pusha  
  413ae8:	out    dx,al
  413ae9:	rcr    cl,1
  413aeb:	sti    
  413aec:	leave  
  413aed:	inc    ebx
  413aee:	gs jp  0x413b5b
  413af1:	xchg   ebp,eax
  413af2:	(bad)
  413af5:	pop    ebp
  413af6:	mov    ebp,0xc776ea3f
  413afb:	xchg   esp,eax
  413afc:	mul    BYTE PTR [edx]
  413afe:	imul   eax,DWORD PTR [eax-0x3],0xfe8ce92c
  413b05:	retf   0xea94
  413b08:	gs cmp cl,bl
  413b0b:	pop    es
  413b0c:	xchg   ecx,eax
  413b0d:	fs std 
  413b0f:	icebp  
  413b10:	fnstsw WORD PTR [edx]
  413b12:	leave  
  413b13:	pop    edi
  413b14:	adc    BYTE PTR [eax+ecx*8],0xfe
  413b18:	pop    eax
  413b19:	xchg   esi,eax
  413b1a:	sbb    BYTE PTR [edi],al
  413b1c:	and    DWORD PTR [edi+0x4901e837],ecx
  413b22:	dec    esi
  413b23:	add    al,0x9c
  413b25:	dec    ecx
  413b26:	loope  0x413b26
  413b28:	jmp    0xcea3bc06
  413b2d:	ret    
  413b2e:	fnstcw WORD PTR [ebx]
  413b30:	pop    edi
  413b31:	adc    cl,ch
  413b33:	scas   eax,DWORD PTR es:[edi]
  413b34:	in     al,0x5e
  413b36:	push   ebp
  413b37:	and    BYTE PTR [edi],0x26
  413b3a:	or     DWORD PTR [esi+0x7d],esp
  413b3d:	cmp    edx,ebx
  413b3f:	enter  0x9fb5,0x4c
  413b43:	push   esp
  413b44:	repnz push esp
  413b46:	aaa    
  413b47:	pop    ecx
  413b48:	test   DWORD PTR [esi],ebx
  413b4a:	pop    ebx
  413b4b:	cmc    
  413b4c:	sbb    al,0xd4
  413b4e:	aad    0x6f
  413b50:	sub    DWORD PTR [eax-0x63],edx
  413b53:	jge    0x413b24
  413b55:	mov    cl,0x67
  413b57:	pop    esi
  413b58:	xchg   ebx,eax
  413b59:	ror    BYTE PTR [ecx],0x44
  413b5c:	mov    edx,DWORD PTR [edi-0x703f3dd7]
  413b62:	addr16 pop edi
  413b64:	out    dx,eax
  413b65:	fs push esi
  413b67:	outs   dx,DWORD PTR ds:[esi]
  413b68:	push   0x4f19e253
  413b6d:	add    al,0xa1
  413b6f:	cs (bad) 
  413b71:	jnp    0x413b79
  413b73:	out    dx,al
  413b74:	inc    eax
  413b75:	jp     0x413bd3
  413b77:	data16 sahf 
  413b79:	outs   dx,BYTE PTR ds:[esi]
  413b7a:	push   cs
  413b7b:	or     esi,eax
  413b7d:	mov    ch,0x92
  413b7f:	sub    DWORD PTR [edx],eax
  413b81:	jmp    0x413b9b
  413b83:	cmp    dh,BYTE PTR [eax]
  413b85:	sahf   
  413b86:	gs shr esp,0x41
  413b8a:	push   eax
  413b8b:	int3   
  413b8c:	clc    
  413b8d:	lods   eax,DWORD PTR ds:[esi]
  413b8e:	or     cl,ch
  413b90:	mov    ebp,0x66a26d1f
  413b95:	mov    dl,0x88
  413b97:	or     al,0x7b
  413b99:	push   esi
  413b9a:	sahf   
  413b9b:	nop
  413b9c:	jnp    0x413ba4
  413b9e:	lahf   
  413b9f:	and    al,al
  413ba1:	pop    edi
  413ba2:	dec    esp
  413ba3:	nop
  413ba4:	push   0x2c
  413ba6:	ret    0x6506
  413ba9:	push   ecx
  413baa:	fsub   QWORD PTR [ecx+ebx*8+0xc]
  413bae:	loope  0x413c24
  413bb0:	pop    ebx
  413bb1:	lods   eax,DWORD PTR ds:[esi]
  413bb3:	pop    edi
  413bb4:	imul   BYTE PTR [ebx]
  413bb6:	xor    edi,DWORD PTR [eax]
  413bb8:	test   DWORD PTR [ebp+0x3e013f29],ebp
  413bbe:	inc    eax
  413bbf:	sub    bl,dl
  413bc1:	hlt    
  413bc2:	test   DWORD PTR [edx+ebp*2-0x7d],esp
  413bc6:	stc    
  413bc7:	sbb    ch,0x3d
  413bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bcb:	push   ss
  413bcc:	and    bh,BYTE PTR ds:0x1ac8d80c
  413bd2:	jb     0x413bab
  413bd4:	push   edi
  413bd5:	loopne 0x413be8
  413bd7:	adc    al,BYTE PTR [ebp-0x32]
  413bda:	mov    al,bl
  413bdc:	rcr    eax,0xeb
  413bdf:	inc    ebp
  413be0:	aas    
  413be1:	and    ebp,DWORD PTR [ecx-0x3c]
  413be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be5:	jb     0x413c24
  413be7:	adc    al,0xcd
  413bea:	xchg   esp,eax
  413beb:	push   es
  413bec:	es loopne 0x413baf
  413bef:	test   al,0x22
  413bf1:	or     BYTE PTR [ebp+0x52],dh
  413bf4:	push   esp
  413bf5:	or     eax,0xdebd0130
  413bfa:	dec    edi
  413bfb:	fwait
  413bfc:	pop    edi
  413bfd:	lock aad 0xf3
  413c00:	(bad)  
  413c01:	or     edx,DWORD PTR ds:0x6d2508e5
  413c07:	cmp    eax,0x42339a7a
  413c0c:	test   BYTE PTR [esi],cl
  413c0e:	jae    0x413b9c
  413c10:	xor    al,0x58
  413c12:	push   esp
  413c13:	js     0x413be1
  413c15:	pop    edi
  413c16:	in     al,dx
  413c17:	in     eax,dx
  413c18:	mov    al,ds:0xc675d3ef
  413c1d:	dec    esp
  413c1e:	push   ss
  413c1f:	pop    eax
  413c20:	push   ss
  413c21:	shl    BYTE PTR [eax+0x1866f878],cl
  413c27:	mov    dh,0x87
  413c29:	imul   esp,esp,0xc375bb81
  413c2f:	cdq    
  413c30:	cwde   
  413c31:	sbb    DWORD PTR [ecx-0x3e],ebp
  413c34:	dec    edi
  413c35:	or     ebp,DWORD PTR es:[edx]
  413c38:	outs   dx,DWORD PTR ds:[esi]
  413c39:	mov    ch,0x95
  413c3b:	adc    eax,0x69f3603b
  413c40:	cmp    dl,al
  413c42:	sbb    dh,BYTE PTR [edi-0x45]
  413c45:	shl    bh,1
  413c47:	fisubr DWORD PTR [esp-0x757c6a5a]
  413c4e:	xor    esi,DWORD PTR [edi+edi*2+0x22f3467f]
  413c55:	mov    ah,0x40
  413c57:	je     0x413c45
  413c59:	fwait
  413c5a:	pop    edx
  413c5b:	pop    edi
  413c5c:	xchg   edx,eax
  413c5d:	rcl    BYTE PTR [esi+esi*2],0x75
  413c61:	(bad)
  413c64:	cmp    al,0x45
  413c66:	sub    DWORD PTR [esi-0x24],esi
  413c69:	jae    0x413c5f
  413c6b:	xchg   edi,eax
  413c6c:	cmp    eax,0xb076e720
  413c71:	inc    esi
  413c72:	loopne 0x413c92
  413c74:	mov    ch,0x4d
  413c76:	add    BYTE PTR [ecx-0x7df5b8bd],dh
  413c7c:	js     0x413c31
  413c7e:	cli    
  413c7f:	ret    
  413c80:	je     0x413ce9
  413c82:	cmp    esi,edi
  413c84:	pop    eax
  413c85:	loopne 0x413c71
  413c87:	dec    edx
  413c88:	sar    BYTE PTR [ebp+0x17],1
  413c8b:	inc    ebp
  413c8c:	pusha  
  413c8d:	sbb    DWORD PTR [ebx+0x6a4b0756],esi
  413c93:	out    dx,al
  413c94:	ss push ebx
  413c96:	adc    DWORD PTR [eax],edi
  413c98:	or     dh,BYTE PTR [ecx+0xa]
  413c9b:	mov    al,0x2d
  413c9d:	push   ds
  413c9e:	mov    eax,ds:0x140559ee
  413ca3:	out    dx,al
  413ca4:	js     0x413cc5
  413ca6:	push   es
  413ca7:	jle    0x413cf8
  413ca9:	stos   DWORD PTR es:[edi],eax
  413caa:	scas   eax,DWORD PTR es:[edi]
  413cab:	jo     0x413c74
  413cad:	and    DWORD PTR [edi-0x5cebaa51],0xcc396af
  413cb7:	test   DWORD PTR [eax-0x66],ecx
  413cba:	fsubr  st(7),st
  413cbc:	ficom  WORD PTR [ebx+0x6a83f993]
  413cc2:	mov    ebx,es
  413cc4:	xchg   DWORD PTR [esp+0x6f9e1393],eax
  413ccb:	sub    DWORD PTR [ebp-0x3e024e0d],0x6f1e44e7
  413cd5:	pushf  
  413cd6:	into   
  413cd7:	imul   eax,esp,0x69
  413cda:	test   eax,0xc36c184c
  413cdf:	pop    esi
  413ce0:	add    eax,0xe45ac37e
  413ce5:	fucomi st,st(6)
  413ce7:	mov    BYTE PTR [edx+0x71],bh
  413cea:	enter  0x7121,0x81
  413cee:	repnz adc cl,BYTE PTR [esi]
  413cf1:	ins    DWORD PTR es:[edi],dx
  413cf2:	cdq    
  413cf3:	lods   eax,DWORD PTR ds:[esi]
  413cf4:	sub    al,BYTE PTR [esi+0x10]
  413cf7:	jmp    0x3b3611db
  413cfc:	rol    DWORD PTR [esi-0x2],0x27
  413d00:	jns    0x413ce2
  413d02:	dec    ebx
  413d03:	test   DWORD PTR [esi],ecx
  413d05:	push   esp
  413d06:	mov    edi,0x6dea2839
  413d0b:	shr    DWORD PTR [ebx],cl
  413d0d:	lock imul ecx,DWORD PTR [eax+0x1cd0a177],0xffffff9e
  413d15:	in     eax,dx
  413d16:	cmp    BYTE PTR [edx+esi*4],ch
  413d19:	mov    BYTE PTR [esi+0x72],bl
  413d1c:	jns    0x413d30
  413d1e:	and    dh,cl
  413d20:	push   esi
  413d21:	dec    ebp
  413d22:	pushf  
  413d23:	dec    ebx
  413d24:	pop    esi
  413d25:	arpl   WORD PTR ds:0x6f1cf1cb,bx
  413d2b:	cwde   
  413d2c:	push   ebx
  413d2d:	mov    BYTE PTR [edx],0x7c
  413d30:	ret    
  413d31:	pop    esp
  413d32:	dec    ebp
  413d33:	mul    BYTE PTR [ebp-0xb70310f]
  413d39:	imul   edi,esp,0x64
  413d3c:	push   ebx
  413d3d:	(bad)
  413d42:	jmp    0x413d01
  413d44:	jge    0x413cf3
  413d46:	adc    edx,DWORD PTR [ebx+0x66d02851]
  413d4c:	ja     0x413d39
  413d4e:	cmp    al,0x54
  413d50:	mov    esi,0x3d642ae8
  413d55:	sbb    al,0xd5
  413d57:	xor    esi,DWORD PTR [ebp-0x22200ccb]
  413d5d:	and    eax,0x5d31fda9
  413d62:	call   DWORD PTR ds:0xa28b0879
  413d68:	add    esi,ecx
  413d6a:	and    dl,BYTE PTR [edx]
  413d6c:	repz scas al,BYTE PTR es:[edi]
  413d6e:	pop    ebx
  413d6f:	mov    al,ds:0xde68d46f
  413d74:	scas   al,BYTE PTR es:[edi]
  413d75:	push   ebx
  413d76:	jmp    0xd435:0xb2e12ef6
  413d7d:	call   0xa8cbd7f2
  413d82:	mov    cl,0x94
  413d84:	out    dx,al
  413d85:	(bad)  
  413d86:	sbb    cl,ah
  413d88:	cmp    ebp,esp
  413d8a:	adc    ecx,DWORD PTR [edi]
  413d8c:	pop    esp
  413d8d:	sub    DWORD PTR [ecx-0x20a7693b],edx
  413d93:	test   eax,0x96ed88de
  413d98:	adc    dh,ah
  413d9a:	add    bl,BYTE PTR [ecx-0xb2a9846]
  413da0:	fdiv   DWORD PTR [edi-0x3f]
  413da3:	ret    0x7918
  413da6:	xor    edi,DWORD PTR [esi+0x44584cb8]
  413dac:	push   edi
  413dad:	mov    esp,0xdf215c73
  413db2:	mov    edx,0x381d1783
  413db7:	lea    esi,ds:0xac0c172e
  413dbd:	and    al,0x8b
  413dbf:	push   ss
  413dc0:	rol    DWORD PTR [eax+0xa],1
  413dc3:	imul   eax,DWORD PTR [eax+edx*1-0x20ecb2b9],0xfc70fa55
  413dce:	or     eax,0x61ed81ae
  413dd3:	mov    ?,WORD PTR [edx]
  413dd5:	mov    ds:0x9f8d910f,al
  413dda:	add    DWORD PTR [edx+0x3bacfdc7],0x17
  413de1:	push   0xffffff9e
  413de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413de4:	cwde   
  413de5:	push   esp
  413de6:	mov    al,0xba
  413de8:	xchg   esi,eax
  413de9:	jb     0x413e2b
  413deb:	lahf   
  413dec:	mov    gs,WORD PTR [ebx+edx*4]
  413def:	in     eax,dx
  413df0:	and    esi,DWORD PTR [eax+0x22732f0f]
  413df6:	gs dec ebx
  413df8:	mov    al,ds:0x6541dc50
  413dfd:	out    dx,al
  413dfe:	or     DWORD PTR [esp+edx*2],esi
  413e01:	mov    dh,0x1
  413e03:	jg     0x413df6
  413e05:	adc    dl,ah
  413e07:	test   eax,0x7d9c8e7e
  413e0c:	pop    ss
  413e0d:	repnz add DWORD PTR [esi],ebx
  413e10:	loop   0x413e32
  413e12:	test   al,0x40
  413e14:	test   eax,0x48356fb5
  413e19:	(bad)  
  413e1a:	adc    ebp,DWORD PTR [ecx]
  413e1c:	push   ebx
  413e1d:	add    DWORD PTR [ecx+0x78],0xffffffb4
  413e21:	repz sub al,0xfc
  413e24:	push   cs
  413e25:	cmp    eax,0xa0d9e607
  413e2a:	jmp    0x5b29:0xa2ed5f81
  413e31:	sar    esp,1
  413e33:	xchg   edi,eax
  413e34:	imul   ecx,DWORD PTR [edx],0xffffffa7
  413e37:	mov    bl,0x65
  413e39:	pop    ss
  413e3a:	icebp  
  413e3b:	hlt    
  413e3c:	(bad)  
  413e3d:	pop    esi
  413e3e:	or     DWORD PTR [edx],esp
  413e40:	mov    dl,0x4e
  413e42:	aad    0x9f
  413e44:	sub    BYTE PTR [esi-0x22],bl
  413e47:	xor    ebx,esp
  413e49:	out    0xca,al
  413e4b:	jmp    0xa0186f93
  413e50:	out    dx,eax
  413e51:	adc    ah,BYTE PTR [ecx+0x54]
  413e54:	inc    esi
  413e55:	push   0x96d9b67e
  413e5a:	sbb    DWORD PTR [esi+0x63719148],eax
  413e60:	jns    0x413de9
  413e62:	das    
  413e63:	jns    0x413eb4
  413e65:	(bad)  
  413e66:	jle    0x413deb
  413e68:	pop    es
  413e69:	test   al,0x9e
  413e6b:	jg     0x413e62
  413e6d:	fistp  QWORD PTR [eax-0x3b75510]
  413e73:	mov    esi,0x4b98e28b
  413e78:	ss loop 0x413e4b
  413e7b:	dec    edi
  413e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e7d:	pusha  
  413e7e:	mov    ?,WORD PTR [edi-0x2714ca5c]
  413e84:	adc    eax,0x1b162e4b
  413e89:	shl    DWORD PTR [eax-0x28],cl
  413e8c:	sbb    DWORD PTR [edi],0xa40e17a1
  413e92:	mov    ecx,0x83d87f1d
  413e97:	xor    eax,0x66572817
  413e9c:	dec    edx
  413e9d:	sbb    eax,0x2231b7
  413ea2:	imul   edx,DWORD PTR [esi+edi*1+0x53],0x607f3cac
  413eaa:	sbb    ecx,eax
  413eac:	imul   edi,DWORD PTR [ebx],0xf818f937
  413eb2:	or     BYTE PTR [eax-0x1a],ah
  413eb5:	loop   0x413e3e
  413eb7:	inc    edi
  413eb8:	jne    0x413ec9
  413eba:	cmp    BYTE PTR [ebp+0x71],cl
  413ebd:	imul   edx,DWORD PTR [edx+0x40],0x97c8a0a4
  413ec4:	fild   DWORD PTR [eax-0x5b]
  413ec7:	mov    edx,0x208333e4
  413ecc:	les    edx,FWORD PTR [esi+ebp*8+0x771802f1]
  413ed3:	jnp    0x413eba
  413ed5:	std    
  413ed6:	jbe    0x413ecc
  413ed8:	outs   dx,DWORD PTR ds:[esi]
  413ed9:	dec    BYTE PTR [eax+0x40]
  413edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413edd:	hlt    
  413ede:	jnp    0x413f0b
  413ee0:	adc    eax,0x743679ae
  413ee5:	fidivr DWORD PTR [esi+0xa]
  413ee8:	fist   WORD PTR [edx+0xce6fe5]
  413eee:	scas   eax,DWORD PTR es:[edi]
  413eef:	scas   eax,DWORD PTR es:[edi]
  413ef0:	push   esi
  413ef1:	ror    DWORD PTR [edi+ebx*4],0xa6
  413ef5:	jecxz  0x413f33
  413ef7:	neg    BYTE PTR [edi+0x3b]
  413efa:	aaa    
  413efb:	inc    esi
  413efc:	cmp    eax,esp
  413efe:	ja     0x413f4d
  413f00:	add    ebp,DWORD PTR [edx+ecx*2]
  413f03:	jnp    0x413f1a
  413f05:	cld    
  413f06:	or     ebx,ebp
  413f08:	jnp    0x413e9a
  413f0a:	aam    0x91
  413f0c:	pop    ds
  413f0d:	dec    esp
  413f0e:	jbe    0x413eb8
  413f10:	sbb    BYTE PTR [eax+0x7e],al
  413f13:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413f15:	add    bl,BYTE PTR [edx-0x57]
  413f18:	adc    cl,bh
  413f1a:	ret    
  413f1b:	emms   
  413f1d:	and    al,BYTE PTR ds:0x698cad0d
  413f23:	add    DWORD PTR [ebx],edi
  413f25:	mov    edx,0x5387b68d
  413f2a:	sub    al,0x92
  413f2c:	or     ecx,DWORD PTR [eax]
  413f2e:	mov    edi,0x695c9260
  413f33:	mov    edx,0x312fef09
  413f38:	add    eax,0x35814bf2
  413f3d:	scas   al,BYTE PTR es:[edi]
  413f3e:	sbb    eax,0x6cc583b0
  413f43:	xor    al,0x47
  413f45:	pop    edx
  413f46:	enter  0xb0fa,0x3e
  413f4a:	sbb    dh,BYTE PTR ds:0xf5c0fc0e
  413f50:	pop    ebx
  413f51:	call   FWORD PTR [edx+0x52]
  413f54:	(bad)  
  413f55:	in     al,0x2c
  413f57:	sub    eax,ebp
  413f59:	stos   BYTE PTR es:[edi],al
  413f5a:	scas   al,BYTE PTR es:[edi]
  413f5b:	jmp    0x81f9:0x19512f18
  413f62:	lahf   
  413f63:	mov    bl,0xe5
  413f65:	retf   
  413f66:	jo     0x413fd5
  413f68:	test   BYTE PTR [ecx],bl
  413f6a:	sbb    eax,0xf6ce000d
  413f6f:	push   0xffffffb5
  413f71:	dec    eax
  413f72:	push   edx
  413f73:	mov    cl,0xce
  413f75:	stos   BYTE PTR es:[edi],al
  413f76:	std    
  413f77:	fidiv  DWORD PTR [edi+0x7208c1ad]
  413f7d:	(bad)  
  413f7e:	pop    esp
  413f7f:	fnstcw WORD PTR [edi]
  413f81:	dec    ebx
  413f82:	arpl   dx,bp
  413f84:	outs   dx,BYTE PTR ds:[esi]
  413f85:	ret    0x9a92
  413f88:	shl    ah,1
  413f8a:	nop
  413f8b:	lea    esi,[esi+0x50]
  413f8e:	add    bh,al
  413f90:	xlat   BYTE PTR ds:[ebx]
  413f91:	sahf   
  413f92:	std    
  413f93:	jg     0x413f6a
  413f95:	cld    
  413f96:	mov    ebp,0x4ff9249c
  413f9b:	or     BYTE PTR [edi+eax*8-0x6ca1e543],al
  413fa2:	sub    al,0xfa
  413fa4:	mov    ebx,eax
  413fa6:	stos   DWORD PTR es:[edi],eax
  413fa7:	loope  0x413f47
  413fa9:	lock fimul DWORD PTR [edx]
  413fac:	and    edi,DWORD PTR [ebp-0x73]
  413faf:	lea    edi,[eax]
  413fb1:	popf   
  413fb2:	bound  eax,QWORD PTR [edi]
  413fb4:	into   
  413fb5:	ds push ecx
  413fb7:	test   eax,0xe047ce24
  413fbc:	add    ebx,ebp
  413fbe:	ins    BYTE PTR es:[edi],dx
  413fbf:	pop    ds
  413fc0:	push   esp
  413fc1:	leave  
  413fc2:	cwde   
  413fc3:	(bad)  
  413fc4:	stos   BYTE PTR es:[edi],al
  413fc5:	push   0x44
  413fc7:	icebp  
  413fc8:	mov    ah,0x4f
  413fca:	mov    edx,gs
  413fcc:	addr16 sti 
  413fce:	into   
  413fcf:	stos   DWORD PTR es:[edi],eax
  413fd0:	push   edi
  413fd1:	inc    esp
  413fd2:	adc    ch,BYTE PTR ds:0xc3b577ae
  413fd8:	xchg   edx,eax
  413fd9:	xor    edi,DWORD PTR [edi]
  413fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fdc:	(bad)  
  413fdd:	sub    DWORD PTR [ecx],ebp
  413fdf:	in     al,dx
  413fe0:	out    0x1f,al
  413fe2:	and    edx,DWORD PTR [edx+0x24]
  413fe5:	hlt    
  413fe6:	cmp    ecx,ebx
  413fe8:	stc    
  413fe9:	add    ebx,DWORD PTR [eax-0x2e]
  413fec:	in     al,0xd3
  413fee:	inc    edx
  413fef:	pushf  
  413ff0:	ror    BYTE PTR cs:[ebx-0x56585c33],1
  413ff7:	cli    
  413ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff9:	cmp    BYTE PTR [ebx+0x31618bb3],bh
  413fff:	les    edi,FWORD PTR [eax+esi*8]
  414002:	daa    
  414003:	and    eax,esi
  414005:	xbegin 0x4a7ab2f8
  41400b:	pop    esp
  41400c:	xchg   edi,eax
  41400d:	and    dh,dl
  41400f:	xchg   edi,eax
  414010:	xor    bl,dh
  414012:	lahf   
  414013:	push   0xffffffde
  414015:	push   ss
  414016:	push   edx
  414017:	mov    esp,0xfb1106d6
  41401c:	lea    eax,[ecx]
  41401e:	out    0xa9,eax
  414020:	ds cmp eax,0xda6d818b
  414026:	mov    bl,0x52
  414028:	push   edx
  414029:	ja     0x414011
  41402b:	retf   
  41402c:	ficomp WORD PTR [eax]
  41402e:	(bad)  
  41402f:	call   0x236c:0xd5e24043
  414036:	(bad)  [ecx]
  414038:	popa   
  414039:	popa   
  41403a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41403b:	cmp    DWORD PTR [edx],edi
  41403d:	push   0xa19a52c3
  414042:	mov    cl,0xe4
  414044:	pop    ecx
  414045:	sbb    cl,0x44
  414048:	pop    edx
  414049:	mov    edx,0x39515311
  41404e:	sbb    eax,0x5540378
  414053:	sub    eax,0xf3d2ef39
  414058:	lds    esi,FWORD PTR [ebx+0x7e197d57]
  41405e:	push   ebp
  41405f:	mov    esp,ebp
  414061:	adc    al,0xa2
  414063:	sub    DWORD PTR [esi],eax
  414065:	mov    BYTE PTR [edi+0x3fe15864],al
  41406b:	xchg   ebp,eax
  41406c:	sti    
  41406d:	(bad)  
  41406e:	in     eax,dx
  41406f:	dec    ebp
  414070:	pop    ecx
  414071:	xchg   ebx,eax
  414072:	imul   ecx,DWORD PTR [edi-0x3d36530],0x14058425
  41407c:	test   bl,dh
  41407e:	rol    eax,cl
  414080:	ja     0x414095
  414082:	pusha  
  414083:	adc    ah,bh
  414085:	inc    ebx
  414086:	dec    ebp
  414087:	ret    
  414088:	jno    0x414107
  41408a:	sar    ch,0x6e
  41408d:	cmp    DWORD PTR [ecx-0x68781fb0],edx
  414093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414094:	ins    DWORD PTR es:[edi],dx
  414095:	xor    edx,esp
  414097:	xor    al,0x90
  414099:	(bad)  
  41409a:	adc    esp,ebx
  41409c:	inc    ecx
  41409d:	pop    ss
  41409e:	and    eax,DWORD PTR [edx+edx*2+0x4b]
  4140a2:	mov    ebx,0x5d5a4969
  4140a7:	adc    eax,0x52ec0304
  4140ac:	add    ah,0xf5
  4140af:	bound  ebx,QWORD PTR [ecx]
  4140b1:	add    edx,DWORD PTR [esi+0x39]
  4140b4:	mov    al,0x6a
  4140b6:	push   ss
  4140b7:	xchg   BYTE PTR [ebp-0xbe1f7f4],dh
  4140bd:	jmp    0x414126
  4140bf:	add    DWORD PTR cs:[esi-0x5c],edi
  4140c3:	stc    
  4140c4:	inc    ebp
  4140c5:	cmp    ebx,0xffffffdb
  4140c8:	ss jg  0x414068
  4140cb:	fcom   DWORD PTR [esi]
  4140cd:	jnp    0x4140ff
  4140cf:	jno    0x414121
  4140d1:	cmp    eax,0x4fcd6552
  4140d6:	imul   ecx,DWORD PTR [eax],0xffffff97
  4140d9:	add    BYTE PTR ds:0xa90aad5c,bl
  4140df:	pop    ecx
  4140e0:	lea    ebp,[ebx+ecx*2-0x3a]
  4140e4:	out    0x79,eax
  4140e6:	fcom   st(0)
  4140e8:	dec    ebp
  4140e9:	inc    ecx
  4140ea:	xchg   ebx,eax
  4140eb:	mov    eax,ds:0x9d14a1d3
  4140f0:	or     cl,BYTE PTR [esi+0x784c772e]
  4140f6:	daa    
  4140f7:	and    al,0xed
  4140f9:	and    DWORD PTR [edi],esi
  4140fb:	push   ebp
  4140fc:	mov    dh,0xd5
  4140fe:	or     BYTE PTR [esi+0x1e],bh
  414101:	push   es
  414102:	jle    0x414084
  414104:	xchg   edx,eax
  414105:	fmul   QWORD PTR ds:0xe3899787
  41410b:	xor    DWORD PTR [ecx+0x79],eax
  41410e:	pop    ds
  41410f:	pop    eax
  414110:	xor    DWORD PTR [eax-0x572261c0],esi
  414116:	sbb    ebx,DWORD PTR [eax+0x2b01c08d]
  41411c:	aaa    
  41411d:	or     DWORD PTR ds:0x325ae578,0x69be3b7b
  414127:	popa   
  414128:	jmp    0x92ac:0x816a212d
  41412f:	cmp    DWORD PTR [edi+0x25b0cf6b],edx
  414135:	sbb    ah,dl
  414137:	lds    ebx,FWORD PTR [esi]
  414139:	ins    BYTE PTR es:[edi],dx
  41413a:	adc    al,0x3e
  41413c:	shr    esi,cl
  41413e:	mov    dh,0x92
  414140:	int    0x2b
  414142:	cli    
  414143:	repz pop ss
  414145:	and    al,0xcf
  414147:	mov    al,ds:0xdd2d6dda
  41414c:	or     DWORD PTR [esp+edx*1-0xd],0x869397b3
  414154:	rol    dh,0xe9
  414157:	(bad)  
  414158:	sti    
  414159:	loopne 0x41411d
  41415b:	jmp    0xa9c6259a
  414160:	aad    0x38
  414162:	jb     0x41414e
  414164:	push   eax
  414165:	in     eax,0xf5
  414167:	ins    DWORD PTR es:[edi],dx
  414168:	or     eax,0x6f713be3
  41416d:	outs   dx,BYTE PTR ds:[esi]
  41416e:	add    al,0x82
  414170:	(bad)  
  414171:	adc    ch,ah
  414173:	jge    0x414159
  414175:	loopne 0x41412b
  414177:	imul   ebp,edx,0xffffff92
  41417a:	jge    0x414166
  41417c:	cwde   
  41417d:	and    eax,0x72f130de
  414182:	das    
  414183:	enter  0xc178,0xaf
  414187:	icebp  
  414188:	outs   dx,BYTE PTR ds:[esi]
  414189:	sub    al,0x2d
  41418b:	cmp    BYTE PTR [edx-0x7d5bae68],dh
  414191:	dec    edi
  414193:	(bad)  
  414194:	cli    
  414195:	fsubr  DWORD PTR [edi+0x572180ee]
  41419b:	jmp    0x81f83a2e
  4141a0:	add    bl,ch
  4141a2:	inc    edx
  4141a3:	xchg   ebx,eax
  4141a4:	push   ds
  4141a5:	mov    eax,0x88a3652c
  4141aa:	adc    al,0xc0
  4141ac:	jle    0x414170
  4141ae:	nop
  4141af:	lods   al,BYTE PTR ds:[esi]
  4141b0:	ret    
  4141b1:	je     0x41413c
  4141b3:	aam    0xdf
  4141b5:	test   eax,0xa474e32e
  4141ba:	jp     0x414143
  4141bc:	and    BYTE PTR [esi+0x4065025a],dh
  4141c2:	sti    
  4141c3:	mov    edx,0xef5f8418
  4141c8:	cwde   
  4141c9:	sub    esi,esi
  4141cb:	mov    BYTE PTR [edi-0x1ad153fd],ah
  4141d1:	adc    edi,DWORD PTR [ecx]
  4141d3:	mov    al,ds:0x863b6bfd
  4141d8:	xor    ah,BYTE PTR [edi]
  4141da:	push   ds
  4141db:	sar    BYTE PTR [ebp+0x1027a9f8],1
  4141e1:	pop    edx
  4141e2:	fld    DWORD PTR [edi+0x895f2e7]
  4141e8:	ret    0xece4
  4141eb:	leave  
  4141ec:	mov    ch,0xc1
  4141ee:	mov    bh,0x1a
  4141f0:	fs mov ebx,0x27600802
  4141f6:	fcmove st,st(4)
  4141f8:	adc    edi,eax
  4141fa:	les    eax,FWORD PTR [edx+0x6825d957]
  414200:	xor    DWORD PTR [esi+0x42d935c6],edi
  414206:	or     DWORD PTR [ecx+0xc],ecx
  414209:	xlat   BYTE PTR ds:[ebx]
  41420a:	fwait
  41420b:	sbb    eax,0xc06cff28
  414210:	push   ss
  414211:	popa   
  414212:	jge    0x4141fe
  414214:	fs pusha 
  414216:	sbb    dl,BYTE PTR [edi]
  414218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414219:	add    esp,DWORD PTR ds:0x387abf9f
  41421f:	cli    
  414220:	stc    
  414221:	in     al,0xd8
  414223:	out    dx,eax
  414224:	dec    ecx
  414225:	stos   BYTE PTR es:[edi],al
  414226:	add    DWORD PTR [edx-0x104aa820],ecx
  41422c:	jmp    0x414278
  41422e:	lock inc esi
  414230:	daa    
  414231:	ins    BYTE PTR es:[edi],dx
  414232:	sar    DWORD PTR [eax-0x68],cl
  414235:	aam    0x5f
  414237:	jle    0x414205
  414239:	sub    edi,DWORD PTR [ecx-0x108564a]
  41423f:	in     al,0xf2
  414241:	or     dh,BYTE PTR [eax+0x3]
  414244:	xchg   ebx,eax
  414245:	push   edx
  414246:	clc    
  414247:	or     bh,BYTE PTR [ecx+0x5f8c206c]
  41424d:	push   es
  41424e:	daa    
  41424f:	lock outs dx,BYTE PTR ds:[esi]
  414251:	mov    esp,0xcf2855d7
  414256:	inc    eax
  414257:	or     esi,esp
  414259:	mov    BYTE PTR [edx+0x402849b9],cl
  41425f:	scas   al,BYTE PTR es:[edi]
  414260:	ficomp DWORD PTR [esi+0x44a842a9]
  414266:	xchg   ecx,eax
  414267:	fcomp  QWORD PTR [edx-0x7e]
  41426a:	in     al,0xa7
  41426c:	xchg   BYTE PTR [ebp-0x33cdfae5],ah
  414272:	push   es
  414273:	test   DWORD PTR [eax+eax*8+0x5],eax
  414277:	pop    edx
  414278:	inc    esp
  414279:	mov    bl,0x36
  41427b:	add    dh,BYTE PTR [esi-0x391d5a59]
  414281:	pop    ss
  414282:	jmp    0x7391dc7
  414287:	aam    0x5d
  414289:	pop    ecx
  41428a:	cmp    DWORD PTR [edi+0x796be304],0xffffffd7
  414291:	push   ecx
  414292:	adc    BYTE PTR ds:0x8d27717c,0xdc
  414299:	daa    
  41429a:	aad    0xb6
  41429c:	call   0x23a5:0xebddb53e
  4142a3:	xchg   ecx,eax
  4142a4:	jle    0x414232
  4142a6:	ds retf 
  4142a8:	(bad)  
  4142a9:	test   al,0xb9
  4142ab:	aam    0x76
  4142ad:	or     al,0x4d
  4142af:	rcr    DWORD PTR [ebp+0x41],1
  4142b2:	mov    ah,0x4f
  4142b4:	and    ebp,ecx
  4142b6:	pop    eax
  4142b7:	js     0x414291
  4142b9:	dec    edi
  4142ba:	int3   
  4142bb:	lods   eax,DWORD PTR ds:[esi]
  4142bc:	mov    dh,0x8b
  4142be:	pop    ebp
  4142bf:	push   ebx
  4142c0:	pop    ebx
  4142c1:	mov    ch,cl
  4142c3:	add    al,0x6
  4142c5:	mov    esp,0x5794327a
  4142ca:	mov    cl,0x51
  4142cc:	mov    BYTE PTR [esi-0x1241d76c],cl
  4142d2:	sbb    edi,ecx
  4142d4:	arpl   bx,sp
  4142d6:	xor    bl,BYTE PTR [eax+0x6]
  4142d9:	jmp    0x41429d
  4142db:	sub    BYTE PTR [ecx-0x7f],0x81
  4142df:	add    eax,0xb063505c
  4142e4:	xchg   esp,eax
  4142e5:	dec    esi
  4142e6:	or     edi,DWORD PTR [ecx+0x71]
  4142e9:	popa   
  4142ea:	jb     0x4142e2
  4142ec:	inc    edx
  4142ed:	xchg   ebp,ecx
  4142ef:	gs sti 
  4142f1:	push   0x61
  4142f3:	dec    edx
  4142f4:	jmp    0x2c72708d
  4142f9:	lods   al,BYTE PTR ds:[esi]
  4142fa:	arpl   WORD PTR [ebx-0x55523ca8],di
  414300:	imul   edx,DWORD PTR [ecx+ebp*8+0xf],0xffffffd2
  414305:	out    dx,al
  414306:	into   
  414307:	mov    bh,0x35
  414309:	add    eax,DWORD PTR [edx]
  41430b:	push   cs
  41430c:	stc    
  41430d:	stos   BYTE PTR es:[edi],al
  41430e:	imul   edx,DWORD PTR [ebx+0x32fb3d38],0x70707d83
  414318:	push   ebx
  414319:	add    ecx,DWORD PTR [edi-0x64ce7020]
  41431f:	cmp    DWORD PTR [edi],eax
  414321:	pop    ss
  414322:	cli    
  414323:	cmp    al,0x2f
  414325:	sbb    ah,BYTE PTR [ecx-0x7a7206a9]
  41432b:	fisttp WORD PTR [ebp+0xb]
  41432e:	inc    ecx
  41432f:	cmp    al,0xf
  414331:	in     eax,0x3a
  414333:	adc    eax,0x28029ac5
  414338:	mov    ds:0xb5110444,al
  41433d:	dec    esp
  41433e:	pop    eax
  41433f:	mov    dl,0x59
  414341:	mov    WORD PTR [eax],ds
  414343:	fcomp  DWORD PTR [eax+esi*4+0x19]
  414347:	cmp    cl,BYTE PTR [esi-0x5ceff671]
  41434d:	inc    DWORD PTR [ecx+edx*4-0x7]
  414351:	fild   DWORD PTR [edi]
  414353:	and    eax,0xd107cb7c
  414358:	mov    bl,0xe2
  41435a:	imul   esi,esi,0xffffffa9
  41435d:	jns    0x41434d
  41435f:	cwde   
  414360:	test   al,0xc5
  414362:	sar    DWORD PTR [esi],0xbd
  414365:	nop
  414366:	vunpckhps ymm2,ymm2,ymm1
  41436a:	sub    DWORD PTR [esi-0x63],edi
  41436d:	call   0x8737cf1b
  414372:	dec    ebp
  414373:	or     esp,esp
  414375:	pop    eax
  414376:	sub    dl,BYTE PTR [edi]
  414378:	mov    esi,0xfeff8dfc
  41437d:	dec    edi
  41437e:	add    dl,al
  414380:	sbb    DWORD PTR [ebx+0xd480a78],edx
  414386:	das    
  414387:	xchg   DWORD PTR [edx-0x4a34ea22],esp
  41438d:	pop    edx
  41438e:	aas    
  41438f:	in     al,dx
  414390:	in     al,dx
  414391:	mov    al,ds:0x2edcc116
  414396:	out    dx,al
  414397:	cmp    ebx,esp
  414399:	sub    al,0x3b
  41439b:	fwait
  41439c:	push   0xffffffb7
  41439e:	mov    ds:0x2850f08d,al
  4143a3:	lock adc bh,dh
  4143a6:	and    al,0x52
  4143a8:	imul   esi,DWORD PTR [ebp+0x1644c4ec],0xaba76d8f
  4143b2:	mov    esi,0xf68bb772
  4143b7:	cwde   
  4143b8:	xchg   esi,eax
  4143b9:	scas   eax,DWORD PTR es:[edi]
  4143ba:	xor    BYTE PTR [esi-0x77eecda7],dl
  4143c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c1:	fidiv  DWORD PTR [ebp-0x26]
  4143c4:	mov    esi,0xce315215
  4143c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ca:	sub    al,0xa1
  4143cc:	into   
  4143cd:	mov    eax,0x5428c087
  4143d2:	je     0x4143b4
  4143d4:	and    eax,0x5dc41bba
  4143d9:	pop    ds
  4143da:	jns    0x41441f
  4143dc:	dec    esp
  4143dd:	aaa    
  4143de:	push   cs
  4143df:	pop    esi
  4143e0:	mov    ds:0x5693cbb5,eax
  4143e5:	and    dh,ah
  4143e7:	mov    ebp,0xd9c70a01
  4143ec:	aad    0x23
  4143ee:	or     eax,0x6b5a5d20
  4143f4:	xchg   ebx,eax
  4143f5:	xchg   edx,eax
  4143f6:	sar    BYTE PTR [edx+0x58151635],0x2a
  4143fd:	jne    0x414427
  4143ff:	daa    
  414400:	push   edx
  414401:	xchg   ecx,eax
  414402:	xchg   ebx,eax
  414403:	sbb    eax,0x3427c350
  414408:	mov    bl,0x87
  41440a:	xchg   ebp,eax
  41440b:	add    cl,BYTE PTR [ebp-0x35]
  41440e:	lea    edi,[eax-0x10]
  414411:	adc    cl,BYTE PTR [esi-0x204bdf0a]
  414417:	pop    ds
  414418:	push   ebx
  414419:	sbb    esp,ebx
  41441b:	stos   DWORD PTR es:[edi],eax
  41441c:	sub    al,0x79
  41441e:	pusha  
  41441f:	ins    BYTE PTR es:[edi],dx
  414420:	jb     0x4143f7
  414422:	xchg   esi,eax
  414423:	retf   
  414424:	push   es
  414425:	or     al,0xf3
  414427:	xor    DWORD PTR [esi+0x76],esp
  41442a:	aaa    
  41442b:	out    dx,eax
  41442c:	cwde   
  41442d:	mov    bh,0x85
  41442f:	ja     0x414435
  414431:	retf   0xe3c8
  414434:	aas    
  414435:	mov    fs,WORD PTR [ecx+0x39d7c735]
  41443b:	or     DWORD PTR [eax+0x3fbdc811],esp
  414441:	outs   dx,DWORD PTR ds:[esi]
  414442:	nop
  414443:	xchg   DWORD PTR [ecx-0x20],edx
  414446:	sub    edx,DWORD PTR ds:0x8c5d7c26
  41444c:	ins    BYTE PTR es:[edi],dx
  41444d:	and    dl,dl
  41444f:	outs   dx,DWORD PTR ds:[esi]
  414450:	push   edi
  414451:	fwait
  414452:	mov    DWORD PTR [edx],eax
  414454:	fmul   DWORD PTR [ecx-0x18]
  414457:	mov    ds:0xe4d1983f,al
  41445c:	push   ss
  41445d:	clc    
  41445e:	fnstcw WORD PTR [ebp*2+0xded4753]
  414465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414466:	iret   
  414467:	mul    BYTE PTR [esi]
  414469:	lods   eax,DWORD PTR ds:[esi]
  41446a:	pop    es
  41446b:	sbb    DWORD PTR [eax],esi
  41446d:	and    DWORD PTR ds:0x88397b0,0x5ac70af5
  414477:	fisttp DWORD PTR [ebp-0x650d26ac]
  41447d:	adc    BYTE PTR [ebp-0x6f],dh
  414480:	jle    0x4144ec
  414482:	cld    
  414483:	jns    0x4144c5
  414485:	inc    ecx
  414486:	inc    ecx
  414487:	imul   ecx,DWORD PTR [edx],0x30516c4c
  41448d:	mov    DWORD PTR [edx-0x4b],eax
  414490:	mov    gs,WORD PTR [eax+edx*1]
  414493:	sbb    eax,DWORD PTR [eax-0x49]
  414496:	dec    ebx
  414497:	stc    
  414498:	fnsave [edx-0x2b]
  41449b:	popf   
  41449c:	pusha  
  41449d:	in     al,dx
  41449e:	xchg   esi,eax
  41449f:	xchg   edi,eax
  4144a0:	dec    edx
  4144a1:	sub    al,0x1a
  4144a3:	xor    DWORD PTR [ebx],0x2f
  4144a6:	jns    0x414522
  4144a8:	inc    esi
  4144a9:	sar    DWORD PTR [edx+0x32],0x2f
  4144ad:	push   ebp
  4144ae:	clc    
  4144af:	rol    BYTE PTR [eax],1
  4144b1:	jb     0x4144e0
  4144b3:	fdiv   QWORD PTR [ebp+ecx*1-0x13]
  4144b7:	sahf   
  4144b8:	jp     0x414508
  4144ba:	xor    eax,0x6baf017
  4144bf:	push   0xfc5fc366
  4144c4:	inc    esi
  4144c5:	pop    eax
  4144c6:	xchg   edi,eax
  4144c7:	push   ebx
  4144c8:	pandn  mm2,QWORD PTR [ebx]
  4144cb:	hlt    
  4144cc:	push   0xb4073d51
  4144d1:	aam    0x59
  4144d3:	inc    edi
  4144d4:	cmp    DWORD PTR [edx+esi*1-0x76fd7a16],eax
  4144db:	dec    eax
  4144dc:	popf   
  4144dd:	das    
  4144de:	xchg   esp,eax
  4144df:	icebp  
  4144e0:	mov    ebx,0x3f7e6b37
  4144e5:	fstp   QWORD PTR [ecx-0x41]
  4144e8:	mov    BYTE PTR [ebp-0x70a701bc],dl
  4144ee:	icebp  
  4144ef:	(bad)  
  4144f0:	sti    
  4144f1:	cmp    al,BYTE PTR [edi-0x7e97ed4f]
  4144f7:	sbb    DWORD PTR [ebx+0x66a71a2e],edx
  4144fd:	or     DWORD PTR [ebx-0x4a],ebx
  414500:	add    al,0x7a
  414502:	scas   eax,DWORD PTR es:[edi]
  414503:	test   BYTE PTR [ebx],bh
  414505:	leave  
  414506:	push   esp
  414507:	aad    0x38
  414509:	mov    eax,ds:0xc82fcfde
  41450e:	sub    bl,BYTE PTR [ebx]
  414510:	xor    DWORD PTR [edx+0x31],ecx
  414513:	aas    
  414514:	fsubr  DWORD PTR [ecx]
  414516:	xor    al,BYTE PTR [esi]
  414518:	or     DWORD PTR [edx],esi
  41451a:	pop    edi
  41451b:	xchg   DWORD PTR [eax],edx
  41451d:	inc    esp
  41451e:	sbb    DWORD PTR [esi+0x69],0xe3cdfed1
  414525:	sbb    bl,BYTE PTR [esi-0x305d1990]
  41452b:	cmp    al,0x7f
  41452d:	adc    DWORD PTR [eax+0x2],ebx
  414530:	and    ebp,esp
  414532:	pusha  
  414533:	pop    es
  414534:	mov    ecx,0xbbb1f461
  414539:	xor    edx,DWORD PTR [edi]
  41453b:	lock cmp al,0x99
  41453e:	push   es
  41453f:	repnz mov ds:0x7d7e47d2,al
  414545:	xchg   ebp,eax
  414546:	ret    
  414547:	sub    esp,ebx
  414549:	aam    0x1c
  41454b:	sub    eax,0x339c5cd4
  414550:	cdq    
  414551:	int3   
  414552:	pop    ds
  414553:	pop    esi
  414554:	sbb    ah,BYTE PTR [ebx]
  414556:	fistp  QWORD PTR [edi+0x58]
  414559:	sub    ah,0x3f
  41455c:	inc    ebp
  41455d:	jmp    0x54a0f7f6
  414562:	aas    
  414563:	mov    BYTE PTR [esi+eax*1],0x93
  414567:	add    ch,BYTE PTR [esi-0x3f]
  41456a:	retf   
  41456b:	sbb    al,0x1a
  41456d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456e:	xor    bl,ch
  414570:	pop    ecx
  414571:	jp     0x4145cf
  414573:	(bad)  
  414575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414576:	cs mov edx,0x9e68354d
  41457c:	mov    gs,WORD PTR [ebp-0x656cc71c]
  414582:	imul   DWORD PTR ds:0x44a8a998
  414588:	xchg   ecx,eax
  414589:	imul   esp,DWORD PTR ds:0xab5ebdd9,0x28
  414590:	stos   DWORD PTR es:[edi],eax
  414591:	mov    eax,0x57c77a6d
  414596:	mov    ebp,0xe5484661
  41459b:	and    cl,BYTE PTR [eax-0x4b]
  41459e:	push   ebp
  41459f:	stos   BYTE PTR es:[edi],al
  4145a0:	js     0x414557
  4145a2:	retf   0x3409
  4145a5:	fidivr DWORD PTR [eax+ebp*8-0xf9ac9ed]
  4145ac:	imul   ebx,DWORD PTR [ecx+0x10983c5e],0x4a
  4145b3:	xchg   edi,eax
  4145b4:	ins    BYTE PTR es:[edi],dx
  4145b5:	loop   0x414567
  4145b7:	mov    ebp,0x224fc452
  4145bc:	cld    
  4145bd:	adc    eax,0xbd66385b
  4145c2:	aad    0xee
  4145c4:	mov    bl,BYTE PTR [ecx]
  4145c6:	mov    eax,0x88a62924
  4145cb:	add    BYTE PTR [edx+0x26],ch
  4145ce:	arpl   WORD PTR [edi],si
  4145d0:	test   BYTE PTR [esi],ch
  4145d2:	xchg   BYTE PTR [eax],al
  4145d4:	jo     0x4145a6
  4145d6:	mov    esp,DWORD PTR [edx-0x12c484cd]
  4145dc:	pop    esi
  4145dd:	push   ebp
  4145de:	neg    DWORD PTR [edi]
  4145e0:	fwait
  4145e1:	sahf   
  4145e2:	jb     0x4145f9
  4145e4:	sub    DWORD PTR [eax-0x16],ebx
  4145e7:	mov    eax,ds:0x17296710
  4145ec:	neg    BYTE PTR [esp+esi*8]
  4145ef:	mov    al,bh
  4145f1:	add    edx,DWORD PTR [esi-0x23e6ebae]
  4145f7:	push   eax
  4145f8:	mov    ecx,edi
  4145fa:	jl     0x41464d
  4145fc:	push   es
  4145fd:	fdiv   st,st(3)
  4145ff:	inc    ebp
  414600:	inc    edx
  414601:	jbe    0x414671
  414603:	popa   
  414604:	fwait
  414605:	enter  0x4b21,0x3
  414609:	lods   al,BYTE PTR ds:[esi]
  41460a:	or     DWORD PTR [esi],eax
  41460c:	loop   0x4145da
  41460e:	nop
  41460f:	dec    edx
  414610:	push   ebp
  414611:	adc    esp,eax
  414613:	push   0xc8f555ab
  414618:	pop    edx
  414619:	lds    ecx,FWORD PTR ds:0x74aa2592
  414620:	addr16 add al,dh
  414623:	mov    al,0x40
  414625:	pop    eax
  414626:	fs ret 0x1b6
  41462a:	and    DWORD PTR [ecx],ebp
  41462c:	mov    ds:0x6b7d4450,eax
  414631:	ss mov edx,DWORD PTR cs:[ebx]
  414635:	push   edx
  414636:	into   
  414637:	pop    ds
  414638:	cmp    BYTE PTR [eax+ebx*4+0x73a20362],0x31
  414640:	sub    ebp,DWORD PTR [ecx]
  414642:	shl    BYTE PTR [ecx-0x3744080c],1
  414648:	mov    esp,0x29b42a76
  41464d:	xchg   ebx,eax
  41464e:	lods   al,BYTE PTR ds:[esi]
  41464f:	mov    dl,0x3f
  414651:	mov    ah,0x66
  414653:	push   ebp
  414654:	push   ds
  414655:	inc    edx
  414656:	cmc    
  414657:	fmul   st(1),st
  414659:	or     DWORD PTR [ebx+0x54cd6148],eax
  41465f:	std    
  414660:	loopne 0x414680
  414662:	lock dec ecx
  414664:	pop    edx
  414665:	in     eax,dx
  414666:	push   edx
  414667:	xchg   edi,eax
  414668:	test   esi,edi
  41466a:	inc    ecx
  41466b:	push   ecx
  41466c:	repz fstp DWORD PTR [eax]
  41466f:	mov    bl,0x8b
  414671:	gs pop esi
  414673:	inc    ebp
  414674:	out    dx,al
  414675:	push   eax
  414676:	int3   
  414677:	cli    
  414678:	jb     0x41463c
  41467a:	int    0xf2
  41467c:	mov    WORD PTR [eax-0x8],ds
  41467f:	out    dx,al
  414680:	mov    DWORD PTR [ebp+0x4b],esp
  414683:	fs das 
  414685:	sbb    BYTE PTR [ebx-0x3b],dh
  414688:	syscall 
  41468a:	or     eax,0xb9c76e4
  41468f:	js     0x4146a0
  414691:	shl    BYTE PTR [edx-0x56],cl
  414694:	retf   
  414695:	cwde   
  414696:	xchg   ebx,eax
  414697:	mov    BYTE PTR [edx+edi*1],dh
  41469a:	mov    ?,ebp
  41469c:	inc    ebp
  41469d:	sbb    ah,ah
  41469f:	cmp    al,0xe1
  4146a1:	dec    edx
  4146a2:	arpl   WORD PTR [ecx+0x26],si
  4146a5:	xchg   ebx,eax
  4146a6:	not    bl
  4146a8:	inc    eax
  4146a9:	or     al,0xe6
  4146ab:	sar    BYTE PTR [eax],0xec
  4146ae:	push   esi
  4146af:	(bad)  
  4146b0:	push   ecx
  4146b1:	fisttp QWORD PTR [eax+ecx*2]
  4146b4:	ds xchg ebp,eax
  4146b6:	sub    DWORD PTR [ebp-0x22c361b2],esp
  4146bc:	inc    esi
  4146bd:	iret   
  4146be:	or     DWORD PTR [edi],esp
  4146c0:	stc    
  4146c1:	int    0x59
  4146c3:	adc    eax,0xcd3e4d3d
  4146c8:	lods   eax,DWORD PTR ds:[esi]
  4146c9:	cmp    edx,DWORD PTR [ecx]
  4146cb:	add    BYTE PTR [ebx+eiz*4+0x2fd52d],al
  4146d2:	mov    esi,0xca9a35e3
  4146d7:	xor    eax,0x6fde63d5
  4146dc:	fadd   DWORD PTR [ebx]
  4146de:	les    esi,FWORD PTR [eax+0x52657f90]
  4146e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e5:	xchg   ebp,eax
  4146e6:	test   BYTE PTR [edi+0x45db5af1],bh
  4146ec:	xchg   edx,eax
  4146ed:	sbb    ebp,DWORD PTR [ecx-0x49]
  4146f0:	mov    bh,0x1d
  4146f2:	(bad)  ds:0xfb899e12
  4146f8:	sub    DWORD PTR [ecx+0x57],0xfffffff1
  4146fc:	adc    ah,bl
  4146fe:	mov    dh,al
  414700:	push   cs
  414701:	adc    al,0x43
  414703:	or     BYTE PTR [edi-0x35],al
  414706:	(bad)  
  414707:	fnsave [edx-0x3]
  41470a:	lods   eax,DWORD PTR ds:[esi]
  41470b:	shl    DWORD PTR [ebx+0x583fe6b3],1
  414711:	dec    ebp
  414712:	mov    esi,0x3bc44531
  414717:	fcomp  st(4)
  414719:	jl     0x414722
  41471b:	popf   
  41471c:	ja     0x4146b2
  41471e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471f:	xchg   ecx,edi
  414721:	cmp    dl,ch
  414723:	mov    dl,0x18
  414725:	jmp    0xc4d1:0xeebc7a03
  41472c:	cs jp  0x414792
  41472f:	int3   
  414730:	retf   
  414731:	mov    BYTE PTR [esi+ecx*1-0x48f479e5],bh
  414738:	pop    esp
  414739:	inc    esi
  41473a:	and    ebx,DWORD PTR [eax-0xd]
  41473d:	pop    edx
  41473e:	ins    BYTE PTR es:[edi],dx
  41473f:	pusha  
  414740:	or     BYTE PTR [ebx-0x4c],bl
  414743:	inc    eax
  414744:	(bad)  
  414745:	xchg   ebp,eax
  414746:	pushf  
  414747:	mov    dh,0x4a
  414749:	mov    eax,0xb8e0fbba
  41474e:	in     al,dx
  41474f:	mov    bl,0x2a
  414751:	add    edx,DWORD PTR [ecx+0x37]
  414754:	mov    dl,BYTE PTR [ebp-0x7d]
  414757:	pop    es
  414758:	leave  
  414759:	sbb    BYTE PTR [edx+esi*1+0x7a0e1b42],cl
  414760:	das    
  414761:	or     al,0x15
  414763:	(bad)  
  414764:	sub    esp,DWORD PTR [esi]
  414766:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414768:	sbb    BYTE PTR [ebx],al
  41476a:	mov    edi,0xc6a5ac26
  41476f:	ficomp WORD PTR [ebp-0x205180cc]
  414775:	fild   DWORD PTR [ebx+edx*2-0x56]
  414779:	mov    esp,0x885b5131
  41477e:	xor    BYTE PTR [ecx],ah
  414780:	mov    DWORD PTR [esi-0x2],edx
  414783:	clc    
  414784:	jecxz  0x414763
  414786:	mov    al,ds:0x5741039a
  41478b:	arpl   WORD PTR [edi],bp
  41478d:	dec    ebx
  41478e:	sub    eax,0x9ad77e2d
  414793:	dec    ecx
  414794:	jo     0x4147d1
  414796:	sub    BYTE PTR [eax+0x190e4e04],dh
  41479c:	sar    DWORD PTR [edx+0x29],1
  41479f:	aam    0xfa
  4147a1:	add    BYTE PTR [edx+0x17],dl
  4147a4:	cwde   
  4147a5:	and    ch,BYTE PTR gs:[ebp-0x7948fd4d]
  4147ac:	and    eax,0xf1c0c09c
  4147b1:	and    eax,0x6602e2e0
  4147b6:	sub    al,0xbf
  4147b8:	mov    edi,0xac9f8cfe
  4147bd:	std    
  4147be:	ret    
  4147bf:	xor    BYTE PTR [ebx-0x6b2494a1],bh
  4147c5:	sar    DWORD PTR [ebx],cl
  4147c7:	clc    
  4147c8:	test   BYTE PTR [eax],dh
  4147ca:	jb     0x41476a
  4147cc:	inc    bx
  4147ce:	outs   dx,BYTE PTR ds:[esi]
  4147cf:	test   al,0x6a
  4147d1:	or     cl,cl
  4147d3:	xor    BYTE PTR [ecx],ah
  4147d5:	(bad)
  4147d8:	lahf   
  4147d9:	push   es
  4147da:	clc    
  4147db:	ja     0x414811
  4147dd:	xor    ecx,DWORD PTR [ebp+0x53984f09]
  4147e3:	cwde   
  4147e4:	in     al,0xbd
  4147e6:	not    DWORD PTR [ebx+0x7c]
  4147e9:	or     BYTE PTR [eax+0x7b],cl
  4147ec:	je     0x41478b
  4147ee:	int    0x3d
  4147f0:	adc    BYTE PTR [ebx+0x6e9ab590],ah
  4147f6:	addr16 pop ebp
  4147f8:	xor    al,0x52
  4147fa:	cwde   
  4147fb:	loop   0x414830
  4147fd:	mov    ds:0x4c4c0ea3,eax
  414802:	inc    esp
  414803:	pop    edi
  414804:	in     al,0x34
  414806:	mov    ebx,0x9017dd92
  41480b:	pop    edi
  41480c:	repnz das 
  41480e:	adc    al,0x6
  414810:	xor    dl,BYTE PTR [esi]
  414812:	sub    cl,al
  414814:	pop    es
  414815:	inc    esp
  414816:	push   ds
  414817:	push   edx
  414818:	push   eax
  414819:	push   esp
  41481a:	push   eax
  41481b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481c:	adc    DWORD PTR [esi-0x23c30799],ecx
  414822:	jecxz  0x41489e
  414824:	fimul  DWORD PTR ss:0x9af24ed1
  41482b:	mov    es,WORD PTR [edi+ebx*4+0x73408e53]
  414832:	scas   al,BYTE PTR es:[edi]
  414833:	push   ebp
  414834:	sahf   
  414835:	mov    al,ds:0xa2ea65bf
  41483a:	scas   eax,DWORD PTR es:[edi]
  41483b:	add    dl,BYTE PTR [eax-0x6d4091fe]
  414841:	add    al,0xf6
  414843:	icebp  
  414844:	jle    0x414816
  414846:	push   edi
  414847:	mov    ecx,0x96bac33b
  41484c:	das    
  41484d:	add    BYTE PTR [ebx+edi*2+0x79],0x67
  414852:	push   eax
  414853:	cmp    dh,ah
  414855:	jg     0x41489d
  414857:	push   ebx
  414858:	mov    esp,0xbdffa6d2
  41485d:	outs   dx,DWORD PTR ds:[esi]
  41485e:	add    al,cl
  414860:	pop    ebp
  414861:	hlt    
  414862:	dec    ecx
  414863:	jae    0x4148d5
  414865:	mov    dl,BYTE PTR [edi]
  414867:	scas   eax,DWORD PTR es:[edi]
  414868:	dec    edi
  414869:	sub    al,0x65
  41486b:	sysexit 
  41486d:	pushf  
  41486e:	es addr16 sbb ecx,ebx
  414872:	int3   
  414873:	and    ecx,DWORD PTR [ecx]
  414875:	cdq    
  414876:	sub    ah,BYTE PTR [ebp+edx*2+0x49]
  41487a:	ins    DWORD PTR es:[edi],dx
  41487b:	xor    DWORD PTR [edx-0x566981c0],edx
  414881:	sub    dh,ah
  414883:	sub    eax,0x9f4ade2f
  414888:	out    dx,eax
  414889:	mov    dh,0xca
  41488b:	inc    ebx
  41488c:	imul   esp,DWORD PTR [eax],0x570c942
  414892:	inc    ebx
  414893:	test   BYTE PTR [ebp-0x20a5d39c],ch
  414899:	adc    BYTE PTR [ecx],dl
  41489b:	jecxz  0x4148bd
  41489d:	mov    al,0x39
  41489f:	push   edx
  4148a0:	xchg   DWORD PTR [eax+0x5a],ecx
  4148a3:	leave  
  4148a4:	and    ecx,edx
  4148a6:	push   cs
  4148a7:	jmp    0xb14c:0xb6e328e5
  4148ae:	cld    
  4148af:	hlt    
  4148b0:	adc    DWORD PTR [esi-0x19],edi
  4148b3:	add    BYTE PTR ds:0x3308558b,0xd0
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x8ec02bf
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x500c3169],0x46
  414952:	push   0x8eaec221
  414957:	mov    ss,WORD PTR [eax-0x260460ea]
  41495d:	setl   ah
  414960:	xor    esi,DWORD PTR [ebx+0x4e79634c]
  414966:	add    al,0xfe
  414968:	std    
  414969:	ins    DWORD PTR es:[edi],dx
  41496a:	mov    ecx,0x10ded89
  41496f:	mov    ds:0x5312a9c9,eax
  414974:	pop    esi
  414975:	and    edx,DWORD PTR [esp+ebx*2-0x5f]
  414979:	push   esi
  41497a:	cli    
  41497b:	popa   
  41497c:	xor    ebp,esi
  41497e:	xchg   DWORD PTR [ebx],ecx
  414980:	xchg   ebp,eax
  414981:	mov    eax,ds:0x3e0ad3fe
  414986:	jmp    0x41495d
  414988:	out    0xbd,al
  41498a:	sub    eax,0xe7f9c7b7
  41498f:	cmc    
  414990:	loope  0x414989
  414992:	xor    eax,0xe105a470
  414997:	arpl   WORD PTR [edx-0x3a],di
  41499a:	rcl    ah,0xa7
  41499d:	dec    ecx
  41499e:	jp     0x4149ba
  4149a0:	jge    0x4149d7
  4149a2:	loop   0x4149fa
  4149a4:	adc    ebp,DWORD PTR [ecx]
  4149a6:	outs   dx,BYTE PTR ds:[esi]
  4149a7:	pop    edi
  4149a8:	push   ebx
  4149a9:	jae    0x4149dd
  4149ab:	loope  0x4149f8
  4149ad:	inc    esp
  4149ae:	pop    ds
  4149af:	scas   eax,DWORD PTR es:[edi]
  4149b0:	mov    al,ds:0x8b87c97d
  4149b5:	out    0xed,al
  4149b7:	lock ds mov cl,0x29
  4149bb:	mov    cl,0xc6
  4149bd:	jmp    0x6fd2cbac
  4149c2:	dec    ebx
  4149c3:	sub    eax,DWORD PTR [esi]
  4149c5:	imul   edi
  4149c7:	jg     0x4149ec
  4149c9:	mov    bh,BYTE PTR [eax+0x3c5f978d]
  4149cf:	pop    ss
  4149d0:	adc    bh,bl
  4149d2:	sub    BYTE PTR [esi+ebp*2],cl
  4149d5:	pop    esi
  4149d6:	dec    ecx
  4149d7:	setno  BYTE PTR [edx+0x2b]
  4149db:	pop    edx
  4149dc:	fsub   DWORD PTR [ecx]
  4149de:	or     DWORD PTR [edx],edi
  4149e0:	fdiv   DWORD PTR [esi]
  4149e2:	ins    BYTE PTR es:[edi],dx
  4149e3:	fwait
  4149e4:	pop    ebx
  4149e5:	mov    ebx,0x6cca9c80
  4149ea:	and    dl,BYTE PTR [edx-0x7ad94ce0]
  4149f0:	ins    BYTE PTR es:[edi],dx
  4149f1:	sbb    ch,0xed
  4149f4:	and    DWORD PTR [ebx+edx*8],ebp
  4149f7:	repz xchg ecx,eax
  4149f9:	outs   dx,DWORD PTR ds:[esi]
  4149fa:	jg     0x414a45
  4149fc:	stc    
  4149fd:	or     DWORD PTR [ebx+eiz*2],ebp
  414a00:	jmp    0x8814:0x65554ff5
  414a07:	cwde   
  414a08:	stc    
  414a09:	fnstcw WORD PTR [ebx+0x4b]
  414a0c:	xor    DWORD PTR [ebx+eiz*2],ebx
  414a0f:	sub    al,0xff
  414a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a12:	xchg   edi,eax
  414a13:	or     esi,esi
  414a15:	pop    esp
  414a16:	shl    ch,1
  414a18:	jo     0x41499d
  414a1a:	bound  ebx,QWORD PTR [esi+0x615e7103]
  414a20:	jbe    0x4149f3
  414a22:	ja     0x414a7e
  414a24:	out    dx,al
  414a25:	(bad)  
  414a26:	pusha  
  414a27:	pop    edx
  414a28:	add    eax,0x38c337c2
  414a2d:	jl     0x414a2c
  414a2f:	pop    esi
  414a30:	imul   eax,DWORD PTR [ebx-0x972d03d],0x19
  414a37:	repnz pop es
  414a39:	sahf   
  414a3a:	(bad)  ds:0x259005
  414a40:	sti    
  414a41:	add    eax,DWORD PTR [esi]
  414a43:	push   eax
  414a44:	sbb    dl,al
  414a46:	int    0xac
  414a48:	(bad)  
  414a49:	xor    eax,0xac1fd08
  414a4e:	jo     0x414a00
  414a50:	clc    
  414a51:	cmc    
  414a52:	push   cs
  414a53:	push   ecx
  414a54:	or     eax,0xf112e616
  414a59:	xlat   BYTE PTR ds:[ebx]
  414a5a:	adc    ecx,DWORD PTR [edx]
  414a5c:	cmp    eax,0xf61befa6
  414a61:	ss and eax,0x118f3b30
  414a67:	xor    DWORD PTR [ecx+0x3a1d2605],edx
  414a6d:	dec    edi
  414a6e:	in     eax,0x54
  414a70:	inc    ecx
  414a71:	xchg   ebx,eax
  414a72:	or     DWORD PTR [ecx],esp
  414a74:	mov    ecx,0x3dfbdb29
  414a79:	cmp    ch,ah
  414a7b:	push   eax
  414a7c:	jno    0x414a8b
  414a7e:	adc    bh,ah
  414a80:	sub    al,0x4
  414a82:	retf   0x87d1
  414a85:	jne    0x414a3f
  414a87:	call   0x3c4b0800
  414a8c:	not    esi
  414a8e:	mov    ebx,0xc03eda04
  414a93:	sbb    eax,0xf16d7695
  414a98:	inc    eax
  414a99:	ret    
  414a9a:	add    esi,DWORD PTR [edx+0x51]
  414a9d:	mov    BYTE PTR [edi+eax*8+0x2e],bl
  414aa1:	sub    eax,0x2db5a4f
  414aa6:	and    al,0xec
  414aa8:	xor    BYTE PTR [ebx-0x26],bh
  414aab:	ins    DWORD PTR es:[edi],dx
  414aac:	das    
  414aad:	mov    edi,0x619e038a
  414ab2:	mov    ch,0x20
  414ab4:	inc    ebp
  414ab5:	jl     0x414a4a
  414ab7:	popf   
  414ab8:	outs   dx,BYTE PTR ds:[esi]
  414ab9:	lds    ecx,FWORD PTR [ecx]
  414abb:	(bad)  
  414abc:	mov    edx,0x20cda54b
  414ac1:	or     DWORD PTR [eax+0x42],esp
  414ac4:	cmp    DWORD PTR [eax+0x60],esi
  414ac7:	gs mov ebx,0x8ae2cc57
  414acd:	inc    ecx
  414ace:	xchg   BYTE PTR [edi+0x29],cl
  414ad1:	test   DWORD PTR [eax+0x27601ad],esi
  414ad7:	shl    ah,cl
  414ad9:	or     BYTE PTR [ebx],dl
  414adb:	sti    
  414adc:	stc    
  414add:	inc    esi
  414ade:	push   edx
  414adf:	data16 test BYTE PTR [edx+0x51],cl
  414ae3:	adc    ebx,esi
  414ae5:	nop
  414ae6:	adc    edi,ebp
  414ae8:	inc    edi
  414ae9:	sub    DWORD PTR [edx+0x2f],0xffffffed
  414aed:	mov    bh,BYTE PTR [esi-0x1b011c23]
  414af3:	inc    eax
  414af4:	(bad)  
  414af5:	mov    al,ds:0xae327b9b
  414afa:	or     eax,0xa61131a5
  414aff:	dec    ebp
  414b00:	fild   DWORD PTR [esi-0x6079bc8]
  414b06:	dec    ebp
  414b07:	dec    edx
  414b08:	pop    eax
  414b09:	mov    ?,WORD PTR [ebp-0x588c252a]
  414b0f:	cmc    
  414b10:	sbb    DWORD PTR [edx+0x14],ebx
  414b13:	out    dx,al
  414b14:	ins    DWORD PTR es:[edi],dx
  414b15:	mov    cl,0xcf
  414b17:	leave  
  414b18:	push   0xffffffcf
  414b1a:	daa    
  414b1b:	daa    
  414b1c:	icebp  
  414b1d:	out    0x40,al
  414b1f:	test   DWORD PTR [ebp+0x3d],ebp
  414b22:	cs mov ecx,edi
  414b25:	push   ds
  414b26:	push   esi
  414b27:	inc    esp
  414b28:	or     DWORD PTR [ecx-0x56473775],0x9b505673
  414b32:	loope  0x414ba1
  414b34:	mov    al,0xd2
  414b36:	cdq    
  414b37:	xchg   edx,eax
  414b38:	push   edi
  414b39:	sbb    ecx,DWORD PTR [eax]
  414b3b:	mov    eax,0xdeb29301
  414b40:	push   es
  414b41:	jl     0x414aeb
  414b43:	nop
  414b44:	pop    es
  414b45:	push   ds
  414b46:	pop    ecx
  414b47:	ins    BYTE PTR es:[edi],dx
  414b48:	add    BYTE PTR [esi*1+0x644215c0],ch
  414b4f:	or     BYTE PTR [esi+edx*2-0x2fffb063],dl
  414b56:	jne    0x414b46
  414b58:	mov    BYTE PTR [edi+edx*1],al
  414b5b:	sbb    DWORD PTR [ebx+0x4c38a633],ebx
  414b61:	shl    ecx,cl
  414b63:	mov    ah,0xf
  414b65:	std    
  414b66:	xor    al,0xd3
  414b68:	mov    ch,BYTE PTR [eax-0x71bf2f14]
  414b6e:	repz call 0x1b4c:0x326a7938
  414b76:	push   ebp
  414b77:	mov    eax,0x93c884ca
  414b7c:	mov    ebx,0xdfcbecaf
  414b81:	pushf  
  414b82:	cmp    esi,DWORD PTR [eax]
  414b84:	or     ebp,edx
  414b86:	inc    ebx
  414b87:	push   es
  414b88:	mov    BYTE PTR [ebx+0x27926ae1],dh
  414b8e:	arpl   WORD PTR [esi+esi*8-0x44fb1af9],sp
  414b95:	je     0x414b98
  414b97:	into   
  414b98:	lods   eax,DWORD PTR ds:[esi]
  414b99:	push   esp
  414b9a:	mov    esp,0x1c724832
  414b9f:	or     ebp,esp
  414ba1:	popa   
  414ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba3:	(bad)  
  414ba4:	xchg   ebx,eax
  414ba5:	mov    WORD PTR [eax-0x16a550aa],cs
  414bab:	mov    edx,0xaffbf2bd
  414bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb1:	xor    BYTE PTR [ecx-0x31b0953c],0xfb
  414bb8:	into   
  414bb9:	aaa    
  414bba:	push   edx
  414bbb:	mov    eax,0x556a5a58
  414bc0:	repz ja 0x414bb1
  414bc3:	xchg   esi,eax
  414bc4:	arpl   WORD PTR [edi],dx
  414bc6:	sub    ecx,esp
  414bc8:	inc    ecx
  414bc9:	push   0x3cf6ced1
  414bce:	push   ds
  414bcf:	pop    ecx
  414bd0:	popf   
  414bd1:	jg     0x414c14
  414bd3:	xchg   ecx,eax
  414bd4:	pop    DWORD PTR [edx+0x37d064ae]
  414bda:	cmp    ecx,edi
  414bdc:	int3   
  414bdd:	inc    ecx
  414bde:	fimul  DWORD PTR [ebx-0x45]
  414be1:	test   BYTE PTR [edx+esi*4-0xd],ah
  414be5:	shr    BYTE PTR [edi+0x60],cl
  414be8:	(bad)  
  414be9:	pop    ds
  414bea:	pop    ecx
  414beb:	pop    edi
  414bec:	rcl    eax,1
  414bee:	ret    0x54be
  414bf1:	pusha  
  414bf2:	cmp    al,ch
  414bf4:	dec    ebp
  414bf5:	dec    esi
  414bf6:	loopne 0x414c26
  414bf8:	test   eax,ebx
  414bfa:	data16 sbb BYTE PTR [edx+0x64],cl
  414bfe:	and    al,0xd3
  414c00:	das    
  414c01:	pslld  xmm3,xmm2
  414c05:	out    0x9f,eax
  414c07:	ret    0xb9c5
  414c0a:	jp     0x414c4a
  414c0c:	icebp  
  414c0d:	popf   
  414c0e:	or     cl,BYTE PTR [eax+edi*8+0x707a4cd6]
  414c15:	pop    ebp
  414c16:	push   ebx
  414c17:	loop   0x414be2
  414c19:	loop   0x414bb3
  414c1b:	inc    ebp
  414c1c:	shl    BYTE PTR [edx],1
  414c1e:	into   
  414c1f:	mov    ah,0xd9
  414c21:	sbb    dh,BYTE PTR [esi]
  414c23:	rcl    dl,cl
  414c25:	(bad)  
  414c26:	jmp    0xea9f:0x7b6983c3
  414c2d:	test   eax,0xb61b19c1
  414c32:	fsub   QWORD PTR [ecx+0x4b]
  414c35:	sub    bh,dh
  414c37:	mov    bl,0x87
  414c39:	ds pop ecx
  414c3b:	cmp    al,0x4d
  414c3d:	arpl   WORD PTR [esi+0x73b4a714],cx
  414c43:	ja     0x414bcd
  414c45:	mov    al,ds:0xa2a9d9f
  414c4a:	(bad)  
  414c4b:	inc    edi
  414c4c:	shl    DWORD PTR [ecx+0x18],cl
  414c4f:	outs   dx,BYTE PTR ds:[esi]
  414c50:	dec    ecx
  414c51:	fistp  QWORD PTR [eax]
  414c53:	jno    0x414ca9
  414c55:	sbb    dl,bh
  414c57:	jae    0x414c15
  414c59:	sub    al,0x3c
  414c5b:	icebp  
  414c5c:	jle    0x414bde
  414c5e:	pushf  
  414c5f:	loop   0x414c7f
  414c61:	xchg   esp,eax
  414c62:	outs   dx,DWORD PTR ds:[esi]
  414c63:	js     0x414cdb
  414c65:	jae    0x414cae
  414c67:	daa    
  414c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c69:	outs   dx,DWORD PTR ds:[esi]
  414c6a:	xlat   BYTE PTR ds:[ebx]
  414c6b:	das    
  414c6c:	rcr    BYTE PTR [esi],cl
  414c6e:	bound  ecx,QWORD PTR [eax-0x459dcbc1]
  414c74:	mov    eax,0xfc093dc2
  414c79:	dec    edx
  414c7a:	loope  0x414cb2
  414c7c:	es sbb eax,0x3543f96f
  414c82:	jp     0x414cf4
  414c84:	xchg   DWORD PTR [ebx+0xac0e74f],esp
  414c8a:	xor    DWORD PTR [eax+0x59],edi
  414c8d:	retf   
  414c8e:	mov    eax,ds:0x4842d339
  414c93:	call   0xfb12:0xe485513c
  414c9a:	inc    edx
  414c9b:	fadd   QWORD PTR [ecx+0x4f]
  414c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9f:	scas   al,BYTE PTR es:[edi]
  414ca0:	mov    eax,0x5813fced
  414ca5:	jg     0x414c4a
  414ca7:	and    eax,0xc3f74c95
  414cac:	enter  0x62c5,0x82
  414cb0:	or     ch,BYTE PTR [ebx]
  414cb2:	ror    BYTE PTR [eax-0x7f],0x2c
  414cb6:	repz imul eax,DWORD PTR [esi+0x244a6def],0x833f0e82
  414cc1:	stos   DWORD PTR es:[edi],eax
  414cc2:	dec    eax
  414cc3:	pop    es
  414cc4:	cmp    BYTE PTR [ebp-0x341068],al
  414cca:	adc    eax,0x528afc9b
  414ccf:	fucomip st,st(4)
  414cd1:	sahf   
  414cd2:	sub    bh,BYTE PTR [ebx-0x2e]
  414cd5:	jge    0x414d1c
  414cd7:	outs   dx,BYTE PTR ds:[esi]
  414cd8:	pop    ebp
  414cd9:	push   ss
  414cda:	push   es
  414cdb:	inc    eax
  414cdc:	test   edx,0x258eba47
  414ce2:	pop    ds
  414ce3:	xor    cl,BYTE PTR [edx-0x4f5011d3]
  414ce9:	icebp  
  414cea:	sub    ebp,DWORD PTR [edx]
  414cec:	add    esi,edx
  414cee:	lods   eax,DWORD PTR ds:[esi]
  414cef:	iret   
  414cf0:	cmp    eax,0xbca1f06e
  414cf5:	jmp    0x79decd29
  414cfa:	js     0x414d3b
  414cfc:	xor    al,0xb9
  414cfe:	mov    ecx,0x6da327e7
  414d03:	add    esp,esp
  414d05:	sbb    DWORD PTR [eax+0xf430c72],ebx
  414d0b:	pusha  
  414d0c:	std    
  414d0d:	inc    eax
  414d0e:	adc    eax,0x24a933b2
  414d13:	dec    esp
  414d14:	lods   al,BYTE PTR ds:[esi]
  414d15:	(bad)  [esp+0x4e342274]
  414d1c:	or     bl,BYTE PTR [esi-0x29]
  414d1f:	rcl    DWORD PTR ds:0x7f13482,0x8
  414d26:	mov    edi,0xe47c28fc
  414d2b:	xchg   esp,eax
  414d2c:	adc    BYTE PTR [edi],bl
  414d2e:	mov    edx,0x16bc7a99
  414d33:	in     eax,0xc2
  414d35:	(bad)  
  414d36:	(bad)  
  414d37:	jp     0x414d7d
  414d39:	xor    DWORD PTR [esi],esp
  414d3b:	mov    BYTE PTR [ebx-0x2],0xa7
  414d3f:	or     dl,BYTE PTR [ecx+edx*4+0x1870431f]
  414d46:	lahf   
  414d47:	mov    ds:0x33dedc10,al
  414d4c:	mov    ds:0xe57133a0,al
  414d51:	jbe    0x414cdd
  414d53:	xor    esp,DWORD PTR [edx+0x5553510]
  414d59:	inc    ebx
  414d5a:	dec    eax
  414d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d5c:	loopne 0x414dbe
  414d5e:	dec    ecx
  414d5f:	dec    esp
  414d60:	inc    ebp
  414d61:	sbb    DWORD PTR [esi],ebp
  414d63:	sbb    al,0x63
  414d65:	jne    0x414d0d
  414d67:	out    0xe3,al
  414d69:	(bad)  
  414d6a:	sti    
  414d6b:	out    0x1b,al
  414d6d:	mov    esi,0x7a6dfdc4
  414d73:	shl    DWORD PTR [esi+0x1ce5af7b],1
  414d79:	pop    edx
  414d7a:	fcomip st,st(7)
  414d7c:	dec    ebp
  414d7d:	pop    edx
  414d7e:	xchg   DWORD PTR [edi+0x71cffc02],ebx
  414d84:	(bad)  
  414d85:	sub    DWORD PTR [eax*2+0x21108e92],esi
  414d8c:	sbb    DWORD PTR [ecx+ecx*1],edi
  414d8f:	sub    BYTE PTR [edi],bh
  414d91:	ins    BYTE PTR es:[edi],dx
  414d92:	mov    dh,0xa9
  414d94:	(bad)  
  414d95:	(bad)  
  414d96:	(bad)  
  414d97:	enter  0x3dbc,0x6f
  414d9b:	lds    ebx,FWORD PTR [edx+0x30]
  414d9e:	arpl   WORD PTR [edx-0x5fb8c80c],ax
  414da4:	sbb    eax,0x5f92b7b9
  414da9:	push   edx
  414daa:	cmp    al,0xc4
  414dac:	retf   
  414dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414daf:	out    0xa0,al
  414db1:	adc    BYTE PTR [edx],ch
  414db3:	lahf   
  414db4:	std    
  414db5:	xchg   edi,eax
  414db6:	jle    0x414d87
  414db8:	loop   0x414e02
  414dba:	repnz adc edi,ebp
  414dbd:	xor    al,0x4b
  414dbf:	retf   
  414dc0:	cmp    eax,ebx
  414dc2:	dec    ebp
  414dc3:	dec    edx
  414dc4:	cli    
  414dc5:	repz cld 
  414dc7:	and    ebx,DWORD PTR [eax]
  414dc9:	fmul   QWORD PTR [ebx-0x7fadb6ff]
  414dcf:	adc    eax,0xea06206
  414dd4:	xor    ebx,esi
  414dd6:	push   edx
  414dd7:	retf   0xd6d4
  414dda:	daa    
  414ddb:	push   edx
  414ddc:	ret    
  414ddd:	or     al,0x28
  414ddf:	mov    ds:0xbeb968c5,al
  414de4:	addr16 pop esi
  414de6:	mov    esp,0xf2d29410
  414deb:	js     0x414d7c
  414ded:	int3   
  414dee:	aas    
  414def:	add    bl,ch
  414df1:	out    0x19,eax
  414df3:	or     BYTE PTR [edi-0x69aab2f3],ah
  414df9:	not    DWORD PTR [ebx-0x4b36f2a6]
  414dff:	mov    cl,0x22
  414e01:	mov    edx,0x22d2c131
  414e06:	test   eax,0x2db19de4
  414e0b:	imul   esi,DWORD PTR [esi-0x4e88a41b],0x10aca415
  414e15:	out    dx,eax
  414e16:	stc    
  414e17:	(bad)  
  414e18:	aam    0x93
  414e1a:	dec    esi
  414e1b:	push   esp
  414e1c:	xor    DWORD PTR [eax+0x5dcd4249],eax
  414e22:	add    edx,ecx
  414e24:	pop    ebp
  414e25:	sbb    eax,0xcdfce341
  414e2a:	mov    ch,0xba
  414e2c:	dec    ecx
  414e2d:	shl    DWORD PTR [ecx-0x75],0x17
  414e31:	jmp    0xbf51:0x2018ab15
  414e38:	xchg   edx,eax
  414e39:	push   ss
  414e3a:	stos   BYTE PTR es:[edi],al
  414e3b:	outs   dx,DWORD PTR ds:[esi]
  414e3c:	jle    0x414e18
  414e3e:	les    esp,FWORD PTR [eax-0x4b0959a0]
  414e44:	(bad)  
  414e45:	cli    
  414e46:	mov    ch,0x86
  414e48:	push   es
  414e49:	ss daa 
  414e4b:	xchg   esi,eax
  414e4c:	push   esi
  414e4d:	nop
  414e4e:	pop    ebx
  414e4f:	inc    edx
  414e50:	(bad)  {k4}{z}
  414e55:	cwde   
  414e56:	jnp    0x414e9b
  414e58:	or     esp,DWORD PTR cs:0x12405b68
  414e5f:	sbb    al,0xc9
  414e61:	imul   ebp,DWORD PTR [edx],0xffffff98
  414e64:	outs   dx,DWORD PTR ds:[esi]
  414e65:	idiv   DWORD PTR [ebx-0x7d15ae96]
  414e6b:	cli    
  414e6c:	fs jmp 0x596b:0xf52b79e3
  414e74:	dec    edx
  414e75:	fcom   st(7)
  414e77:	push   ecx
  414e78:	test   DWORD PTR [eax+0x68],edi
  414e7b:	loopne 0x414e81
  414e7d:	std    
  414e7e:	push   eax
  414e7f:	stos   DWORD PTR es:[edi],eax
  414e80:	mov    ds:0x507adb57,al
  414e85:	sbb    cl,ah
  414e87:	out    0x30,eax
  414e89:	call   0xc21:0xf04ae71f
  414e90:	pop    esi
  414e91:	and    esp,DWORD PTR [eax]
  414e93:	aad    0x15
  414e95:	shl    BYTE PTR ds:0x4e91fcd6,0xea
  414e9c:	cmp    al,0xaa
  414e9e:	shr    bl,cl
  414ea0:	xchg   DWORD PTR [esi-0x78],ecx
  414ea3:	call   DWORD PTR [ebx+0x47]
  414ea6:	pop    es
  414ea7:	cld    
  414ea8:	dec    ecx
  414ea9:	adc    eax,0xede5bc34
  414eae:	int    0x75
  414eb0:	sti    
  414eb1:	add    BYTE PTR [eax],bl
  414eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb4:	mov    dh,0xd3
  414eb6:	xchg   ebp,eax
  414eb7:	mov    eax,0x952ef7cc
  414ebc:	fsubr  QWORD PTR [esi-0x743aa1c4]
  414ec2:	(bad)  
  414ec4:	or     eax,0x146bd265
  414ec9:	(bad)  
  414eca:	sub    al,0xce
  414ecc:	xor    al,dl
  414ece:	bound  ebp,QWORD PTR [ecx+0x52f4bef9]
  414ed4:	(bad)  
  414ed5:	push   esi
  414ed6:	ret    
  414ed7:	ror    BYTE PTR [eax-0x178455b5],0xd
  414ede:	cmp    al,0xe9
  414ee0:	data16 mov ah,0x1c
  414ee3:	sbb    DWORD PTR [ebp-0x4c],ebp
  414ee6:	(bad)  
  414ee7:	jge    0x414e84
  414ee9:	and    dl,BYTE PTR [esi+ebx*4-0x23]
  414eed:	and    al,dl
  414eef:	sub    eax,0xa521c92f
  414ef4:	fst    QWORD PTR [ebp-0x26f83cb7]
  414efa:	and    esi,esi
  414efc:	mov    cl,BYTE PTR [ecx-0x65]
  414eff:	jp     0x414ebb
  414f01:	jmp    0x414e85
  414f03:	and    ecx,DWORD PTR [ecx-0x6f6ec7ef]
  414f09:	call   0x8f2f9534
  414f0e:	aas    
  414f0f:	and    BYTE PTR [ebx],0x52
  414f12:	pop    esp
  414f13:	mov    ds:0xe9e7d0d5,al
  414f18:	sub    BYTE PTR [ebx+0x1c],bl
  414f1b:	mov    ebp,0x25d72add
  414f20:	in     eax,dx
  414f21:	xchg   esp,eax
  414f22:	rcr    DWORD PTR [esi+0x66],0x59
  414f26:	cmp    DWORD PTR [edx],0xde24e651
  414f2c:	fsub   DWORD PTR [ebx-0x6a241994]
  414f32:	jg     0x414f10
  414f34:	pop    edx
  414f35:	in     eax,0x88
  414f37:	inc    esp
  414f38:	lods   eax,DWORD PTR ds:[esi]
  414f39:	ins    DWORD PTR es:[edi],dx
  414f3a:	ins    BYTE PTR es:[edi],dx
  414f3b:	dec    esp
  414f3c:	dec    ecx
  414f3d:	xor    BYTE PTR [ebx],0x58
  414f40:	les    esi,FWORD PTR ds:0xc235cd43
  414f46:	test   BYTE PTR [edi+eax*2],al
  414f49:	pop    ebp
  414f4a:	in     al,0x16
  414f4c:	hlt    
  414f4d:	enter  0xc9f7,0x40
  414f51:	mov    al,ds:0x9d75f7
  414f56:	push   edx
  414f57:	imul   edx,DWORD PTR [edx+0x7f40a748],0xffffffb8
  414f5e:	push   esi
  414f5f:	inc    esi
  414f60:	push   cs
  414f61:	ret    
  414f62:	inc    ecx
  414f63:	jle    0x414f2c
  414f65:	stos   DWORD PTR es:[edi],eax
  414f66:	dec    eax
  414f67:	jbe    0x414fe4
  414f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6a:	xchg   ebx,eax
  414f6b:	rcr    BYTE PTR [eax+ebx*1],0x8a
  414f6f:	push   esi
  414f70:	(bad)  
  414f71:	jno    0x414f03
  414f73:	fdivrp st(4),st
  414f75:	sti    
  414f76:	icebp  
  414f77:	xchg   DWORD PTR [edi-0x42],edi
  414f7a:	nop
  414f7b:	sbb    BYTE PTR [edi+0x33],0x98
  414f7f:	mov    ds:0x360ecac4,eax
  414f84:	dec    edi
  414f85:	mov    ebx,0xe364d7a5
  414f8a:	sub    al,0xd
  414f8c:	lock into 
  414f8e:	ss jmp 0x414fea
  414f91:	xchg   esp,eax
  414f92:	push   ebx
  414f93:	sbb    al,0x34
  414f95:	cvtps2pi mm1,xmm5
  414f98:	mov    ebp,0xb1967852
  414f9d:	or     bh,BYTE PTR [eax+0x2a]
  414fa0:	inc    ebx
  414fa1:	mov    esp,0xc95a6152
  414fa6:	jp     0x415003
  414fa8:	inc    esi
  414fa9:	shr    BYTE PTR [edx+edx*8],cl
  414fac:	test   DWORD PTR [edx],ebp
  414fae:	sbb    BYTE PTR [ebx-0x4164728e],cl
  414fb4:	(bad)  
  414fb5:	xlat   BYTE PTR ds:[ebx]
  414fb6:	cwde   
  414fb7:	push   ss
  414fb8:	out    dx,eax
  414fb9:	dec    BYTE PTR [edi+0x6d4e8640]
  414fbf:	cmp    edx,DWORD PTR [eax+0xd]
  414fc2:	or     esp,DWORD PTR ss:[esi-0x6c0e7661]
  414fc9:	push   cs
  414fca:	mov    ebp,0x865845f3
  414fcf:	dec    edi
  414fd0:	repnz out 0xa6,al
  414fd3:	mov    ebx,0xb2907a5d
  414fd8:	popf   
  414fd9:	sbb    BYTE PTR [edx-0x222c7992],0xe3
  414fe0:	inc    eax
  414fe2:	mov    BYTE PTR [edx-0x4fae442f],dl
  414fe8:	mov    ecx,0x3136d8d7
  414fed:	mov    eax,ds:0xac457b35
  414ff2:	add    BYTE PTR [ebp+eiz*4+0x55ba80b0],cl
  414ff9:	push   esi
  414ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ffb:	or     esi,DWORD PTR [esi+0x713faa32]
  415001:	xor    eax,0x7cece861
  415006:	push   eax
  415007:	pusha  
  415008:	xchg   ebx,eax
  415009:	and    al,BYTE PTR [ebx]
  41500b:	sub    al,BYTE PTR [esi+0x3e6c8934]
  415011:	rcr    BYTE PTR [esi+edx*1+0x6934722f],cl
  415018:	dec    ebp
  415019:	jg     0x414fa1
  41501b:	out    dx,eax
  41501c:	adc    cl,BYTE PTR [esi+0x65]
  41501f:	(bad)  
  415020:	repz dec edx
  415022:	data16 das 
  415024:	mov    BYTE PTR [ebp+ebx*8+0x6a],ah
  415028:	in     al,0xce
  41502a:	adc    eax,0xe756380e
  41502f:	push   esp
  415030:	je     0x41506e
  415032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415033:	adc    DWORD PTR [ebx],ebx
  415035:	clc    
  415036:	push   edi
  415037:	and    eax,0xcf2b5eb1
  41503c:	les    ebx,FWORD PTR [edx+0x1cccdd06]
  415042:	cmp    al,0xfd
  415044:	add    ah,dh
  415046:	dec    ebx
  415047:	aas    
  415048:	stc    
  415049:	fsub   st,st(5)
  41504b:	push   ecx
  41504c:	push   edi
  41504d:	out    dx,eax
  41504e:	popa   
  41504f:	cmc    
  415050:	push   cs
  415051:	lds    edi,FWORD PTR [esi+0x59]
  415054:	sub    dh,BYTE PTR [ebp-0x295ac8b2]
  41505a:	stos   DWORD PTR es:[edi],eax
  41505b:	je     0x41503c
  41505d:	jo     0x414fed
  41505f:	cmp    eax,0x5a2432eb
  415064:	test   BYTE PTR [esp+ebp*2-0x12],bl
  415068:	cmp    eax,0x5f75e863
  41506d:	loope  0x41502e
  41506f:	mov    BYTE PTR [ebx+ecx*8+0x6cfbd835],0xa7
  415077:	and    eax,0xf40a6105
  41507c:	outs   dx,DWORD PTR ds:[esi]
  41507d:	stc    
  41507e:	push   0x632bd272
  415083:	loopne 0x4150eb
  415085:	(bad)  
  415086:	jl     0x4150c3
  415088:	cs adc eax,0x885a26a4
  41508e:	and    eax,DWORD PTR [esi-0x58]
  415091:	and    ecx,DWORD PTR [eax-0x80]
  415094:	std    
  415095:	jno    0x41502b
  415097:	push   0x91fb54dc
  41509c:	sub    DWORD PTR [ebx+eiz*2-0x7d64ddf2],0x71
  4150a4:	imul   edx,edx,0xffffffa7
  4150a7:	imul   edi,DWORD PTR [ebp+0x18],0x5b
  4150ab:	add    eax,0x84490b25
  4150b0:	pop    eax
  4150b1:	cmp    BYTE PTR [edx],ah
  4150b3:	push   0xffffffe3
  4150b5:	pop    ss
  4150b6:	(bad)  
  4150b7:	hlt    
  4150b8:	fisttp QWORD PTR [edx-0x27327aa]
  4150be:	xchg   ecx,eax
  4150bf:	push   0xffffffec
  4150c1:	and    cl,bh
  4150c3:	adc    edx,DWORD PTR [ebx+0x44]
  4150c6:	jle    0x415101
  4150c8:	jl     0x415077
  4150ca:	adc    DWORD PTR [ecx+0x36],ecx
  4150cd:	push   eax
  4150ce:	adc    eax,0xd0541f3d
  4150d3:	mov    edi,0x2058cd48
  4150d8:	and    ch,BYTE PTR [ecx+0x44]
  4150db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150dc:	cwde   
  4150dd:	jae    0x41512c
  4150df:	aas    
  4150e0:	loope  0x4150d9
  4150e2:	jno    0x41513a
  4150e4:	rcr    ah,0xa
  4150e7:	pop    eax
  4150e8:	loope  0x415165
  4150ea:	push   0xffffffc0
  4150ec:	nop
  4150ed:	pop    edx
  4150ee:	sbb    eax,0x4987410d
  4150f3:	add    al,0x80
  4150f5:	imul   edx,DWORD PTR [edx-0x7cd9f0b2],0x5d
  4150fc:	jge    0x415084
  4150fe:	pop    edi
  4150ff:	out    0xa6,eax
  415101:	ja     0x415158
  415103:	shl    ebp,1
  415105:	mov    ds:0x4b89d644,al
  41510a:	fiadd  WORD PTR [esi]
  41510c:	push   esi
  41510d:	(bad)  
  41510e:	push   0x9cdd2add
  415113:	das    
  415114:	fcomi  st,st(4)
  415116:	arpl   WORD PTR [edx],si
  415118:	imul   ebp,DWORD PTR [edi-0x3],0x48b61e8e
  41511f:	xchg   BYTE PTR [ebx+edi*8],dh
  415122:	push   ss
  415123:	inc    ebp
  415124:	xchg   esi,eax
  415125:	enter  0xcc70,0xf
  415129:	test   eax,0xb78fe610
  41512e:	jge    0x415100
  415130:	in     eax,dx
  415131:	push   0xffffffb1
  415133:	pop    ds
  415134:	or     DWORD PTR [edi],esp
  415136:	jns    0x415150
  415138:	cmc    
  415139:	scas   al,BYTE PTR es:[edi]
  41513a:	bound  ebp,QWORD PTR [edi+0x35]
  41513d:	fadd   st,st(3)
  41513f:	aad    0xef
  415141:	loopne 0x41519e
  415143:	pop    es
  415144:	jns    0x415191
  415146:	xchg   BYTE PTR [edi],dh
  415148:	sub    eax,0xac007c2a
  41514d:	mov    es,ebx
  41514f:	les    edx,FWORD PTR [ebp-0x1792a31d]
  415155:	dec    ebp
  415156:	sahf   
  415157:	ds pop esi
  415159:	dec    eax
  41515a:	(bad)  
  41515b:	fisttp QWORD PTR [edi+ecx*2+0x7604530b]
  415162:	mov    esp,0x3b63063
  415167:	push   es
  415168:	lds    edi,FWORD PTR [edi+0x12]
  41516b:	repz test al,0x59
  41516e:	std    
  41516f:	(bad)  
  415170:	in     eax,0xd1
  415172:	cmp    esi,ebp
  415174:	jle    0x415140
  415176:	hlt    
  415177:	iret   
  415178:	in     eax,0x6d
  41517a:	push   0x66f22118
  41517f:	in     eax,dx
  415180:	popa   
  415181:	lock int 0x75
  415184:	push   ecx
  415185:	push   ebx
  415186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415187:	sbb    eax,0x92d525b0
  41518c:	(bad)  
  41518d:	or     DWORD PTR [edx+0x41],esi
  415190:	in     eax,0x9f
  415192:	jp     0x4151c0
  415194:	sub    eax,0x95a48c2e
  415199:	dec    eax
  41519a:	stos   BYTE PTR es:[edi],al
  41519b:	loope  0x41512d
  41519d:	outs   dx,DWORD PTR ds:[esi]
  41519e:	add    dh,BYTE PTR [edi]
  4151a0:	mov    ebp,0xf115c2f3
  4151a5:	mov    WORD PTR [ebx],es
  4151a7:	jnp    0x4151e6
  4151a9:	scas   al,BYTE PTR es:[edi]
  4151aa:	das    
  4151ab:	push   es
  4151ac:	sub    al,0x1a
  4151ae:	or     eax,0x5c69ca8
  4151b3:	mov    al,ds:0x49c7ac14
  4151b8:	repz xor ebx,DWORD PTR [esi+ecx*4-0x1d]
  4151bd:	mov    dl,0x6f
  4151bf:	push   ss
  4151c0:	lods   al,BYTE PTR ds:[esi]
  4151c1:	jg     0x415151
  4151c3:	icebp  
  4151c4:	cld    
  4151c5:	sbb    al,0xa9
  4151c7:	jns    0x4151a5
  4151c9:	add    eax,edx
  4151cb:	mov    al,0x2c
  4151cd:	(bad)  
  4151cf:	test   al,0x63
  4151d1:	addr16 push ebp
  4151d3:	pop    ecx
  4151d4:	stc    
  4151d5:	dec    edx
  4151d6:	lea    eax,[eax+0x16]
  4151d9:	mov    dl,0x70
  4151db:	jle    0x4151b7
  4151dd:	adc    BYTE PTR [ebx+ebx*2+0x66dad39],bh
  4151e4:	bound  esi,QWORD PTR [edi]
  4151e6:	inc    eax
  4151e7:	call   0x6e54850e
  4151ec:	jmp    0x4151d9
  4151ee:	jp     0x415191
  4151f0:	xor    dh,BYTE PTR [esi+0x6d066482]
  4151f6:	in     eax,0xa8
  4151f8:	repz adc edx,esp
  4151fb:	dec    edi
  4151fc:	xor    bh,BYTE PTR ds:0xda6511ab
  415202:	adc    eax,0x6ba17144
  415207:	fld    TBYTE PTR [ebx+0x35]
  41520a:	data16 sahf 
  41520c:	loop   0x4151d5
  41520e:	jecxz  0x4151c0
  415210:	(bad)  
  415211:	sahf   
  415212:	in     al,0xf1
  415214:	cmp    dl,BYTE PTR [ebp+0xc]
  415217:	pop    edx
  415218:	and    al,0xe7
  41521a:	xchg   ecx,eax
  41521b:	jg     0x415244
  41521d:	xchg   esi,eax
  41521e:	fstp   TBYTE PTR [eiz*4-0x72e705aa]
  415225:	std    
  415226:	or     BYTE PTR [eax-0x5ca204db],ch
  41522c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41522d:	enter  0xf4a7,0xd0
  415231:	inc    edi
  415232:	sub    esp,DWORD PTR [ebp-0x50]
  415235:	mov    bh,BYTE PTR [edi+0x6349e78a]
  41523b:	daa    
  41523c:	in     al,0xe4
  41523e:	mov    esp,0xd8119a5a
  415243:	adc    DWORD PTR [esi],esi
  415245:	mov    dh,0x75
  415247:	pop    ss
  415248:	in     al,dx
  415249:	adc    eax,edi
  41524b:	xor    bh,cl
  41524d:	fs dec bx
  415250:	pop    ecx
  415251:	mov    dh,0x6e
  415253:	push   0x6f99d1a8
  415258:	jo     0x4151e7
  41525a:	mov    dl,0xc3
  41525c:	addr16 js 0x415267
  41525f:	add    eax,0x7ee512a1
  415264:	out    dx,eax
  415265:	adc    BYTE PTR [esi+0x44],dl
  415268:	dec    si
  41526a:	xchg   ecx,eax
  41526b:	fstp   DWORD PTR [edi]
  41526d:	mov    ebp,0xb3456f37
  415272:	iret   
  415273:	xor    esi,ecx
  415275:	in     eax,0xf0
  415277:	icebp  
  415278:	cdq    
  415279:	imul   edx,esp,0x96a82331
  41527f:	adc    DWORD PTR [ecx],edx
  415281:	jge    0x415213
  415283:	jl     0x4152a4
  415285:	fsub   st(0),st
  415287:	gs sbb al,0x2c
  41528a:	push   es
  41528b:	sub    dh,BYTE PTR [edi-0x9dfd8f1]
  415291:	adc    eax,0x3a67746d
  415296:	inc    esp
  415297:	jp     0x415304
  415299:	std    
  41529a:	lahf   
  41529b:	push   ecx
  41529c:	dec    esp
  41529d:	add    eax,0x7526da09
  4152a2:	mov    eax,0xbf7ccc67
  4152a7:	mov    dl,0x7f
  4152a9:	jmp    0x4152b7
  4152ab:	jb     0x415262
  4152ad:	xchg   ebp,eax
  4152ae:	mov    edx,0x3f48d860
  4152b3:	test   al,0x81
  4152b5:	and    ebx,DWORD PTR [edi]
  4152b7:	outs   dx,DWORD PTR ds:[esi]
  4152b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b9:	push   ss
  4152ba:	loopne 0x4152ac
  4152bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bd:	lods   al,BYTE PTR ds:[esi]
  4152be:	scas   al,BYTE PTR es:[edi]
  4152bf:	mov    ch,0x53
  4152c1:	ja     0x415329
  4152c3:	test   al,0x16
  4152c5:	jmp    0xdc6f751f
  4152ca:	sahf   
  4152cb:	sbb    cl,BYTE PTR [esi-0x7067e647]
  4152d1:	push   ebp
  4152d2:	inc    ebx
  4152d3:	sub    al,BYTE PTR [edx+0x1e]
  4152d6:	cwde   
  4152d7:	jl     0x41534d
  4152d9:	add    BYTE PTR [esi],bl
  4152db:	jle    0x415276
  4152dd:	dec    edi
  4152de:	sbb    DWORD PTR [ebx+0x1f0b6d4d],eax
  4152e4:	aam    0x1b
  4152e6:	icebp  
  4152e7:	imul   edx,DWORD PTR [ecx-0x4c],0xffffffc7
  4152eb:	in     eax,0xfb
  4152ed:	push   cs
  4152ee:	mov    esi,DWORD PTR [eax+0x7d]
  4152f1:	add    al,0x1f
  4152f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f4:	pop    ds
  4152f5:	leave  
  4152f6:	ja     0x415349
  4152f8:	jae    0x4152a2
  4152fa:	dec    esi
  4152fb:	jmp    0x19df35d1
  415300:	es pop esp
  415302:	js     0x415310
  415304:	and    dh,BYTE PTR [eax]
  415306:	inc    edx
  415307:	jge    0x41530c
  415309:	jmp    0xa8e74351
  41530e:	loope  0x4152b7
  415310:	(bad)  
  415311:	dec    ecx
  415312:	dec    eax
  415313:	loope  0x4152fc
  415315:	js     0x415361
  415317:	mov    edi,0x35745663
  41531c:	imul   edi,DWORD PTR [ebp+0x32],0xcbc37d7
  415323:	pop    eax
  415324:	stos   BYTE PTR es:[edi],al
  415325:	add    eax,0x1b80b46
  41532a:	(bad)  
  41532b:	pop    ecx
  41532c:	mov    ebp,0x28dc78d6
  415331:	pop    ebx
  415332:	stc    
  415333:	jle    0x41535f
  415335:	in     al,0xcc
  415337:	shr    esp,cl
  415339:	ret    0x7843
  41533c:	ja     0x415307
  41533e:	sbb    ebp,DWORD PTR [eax]
  415340:	out    0x74,eax
  415342:	je     0x41531e
  415344:	in     al,0x72
  415346:	sub    ebp,eax
  415348:	sbb    al,0x6f
  41534a:	pop    es
  41534b:	lock xchg BYTE PTR [ecx+0x2c],dl
  41534f:	test   BYTE PTR [eax+edi*2-0xa],dl
  415353:	mov    ds:0xe2d10c6e,al
  415358:	jmp    0xdd7ce81c
  41535d:	dec    eax
  41535e:	add    BYTE PTR ds:0x9e37bcba,0x74
  415365:	enter  0xbaa7,0x89
  415369:	aaa    
  41536a:	dec    edx
  41536b:	jns    0x41530f
  41536d:	sub    bh,cl
  41536f:	repz std 
  415371:	aad    0x2d
  415373:	jnp    0x4153c5
  415375:	mov    cs,WORD PTR [eax]
  415377:	add    BYTE PTR [esi],ch
  415379:	cs div dl
  41537c:	and    esp,DWORD PTR [esi-0x61]
  41537f:	jmp    0x4153ee
  415381:	fisttp QWORD PTR [ebp+0x34728b4f]
  415387:	jnp    0x415395
  415389:	fwait
  41538a:	pushf  
  41538b:	jl     0x415374
  41538d:	jne    0x4153f2
  41538f:	mov    cl,0xd8
  415391:	loope  0x415410
  415393:	and    BYTE PTR [ecx+ebp*8],bl
  415396:	sub    DWORD PTR [edx],0xc6e1ce8
  41539c:	xchg   edx,eax
  41539d:	jbe    0x415417
  41539f:	xchg   ecx,eax
  4153a0:	adc    eax,0x3a48b7e5
  4153a5:	pop    esi
  4153a6:	push   esi
  4153a7:	add    esp,DWORD PTR [edx+0x5b7bcafa]
  4153ad:	mov    ch,0x90
  4153af:	bswap  edi
  4153b1:	mov    ecx,0x389e3a34
  4153b6:	out    0x29,al
  4153b8:	xor    cl,BYTE PTR [ebp-0x7f94659b]
  4153be:	or     dl,bl
  4153c0:	dec    eax
  4153c1:	add    eax,0x28add1e0
  4153c6:	cdq    
  4153c7:	addr16 out dx,eax
  4153c9:	sub    ah,BYTE PTR [edx+0x7c]
  4153cc:	dec    ebx
  4153cd:	in     eax,dx
  4153ce:	jp     0x4153cd
  4153d0:	out    0xaa,eax
  4153d2:	xor    eax,0xe2fb8107
  4153d7:	retf   
  4153d8:	xor    eax,0xa4a6ac2a
  4153dd:	cdq    
  4153de:	sub    ebp,ebx
  4153e0:	sbb    BYTE PTR [edi],ah
  4153e2:	loop   0x415455
  4153e4:	repnz cmp al,BYTE PTR [ecx]
  4153e7:	mov    eax,ds:0x9d8e8bc3
  4153ec:	stc    
  4153ed:	rcl    eax,1
  4153ef:	adc    DWORD PTR [edi],ebx
  4153f1:	cld    
  4153f2:	add    ebp,DWORD PTR [ebx]
  4153f4:	mov    ch,0x5d
  4153f6:	pop    ecx
  4153f7:	push   0xf4dc6884
  4153fc:	or     esi,edx
  4153fe:	shl    bh,0x57
  415401:	push   ebx
  415402:	ja     0x415453
  415404:	mov    DWORD PTR [esp+edx*1+0x263204a3],0x4e9a983a
  41540f:	retf   0xc1c
  415412:	outs   dx,BYTE PTR ds:[esi]
  415413:	jecxz  0x415412
  415415:	aaa    
  415416:	mov    ecx,0xb242b800
  41541b:	adc    ecx,esi
  41541d:	(bad)  
  41541e:	cmp    al,0xfb
  415420:	icebp  
  415421:	mov    cl,ah
  415423:	das    
  415424:	lahf   
  415425:	mov    al,0x77
  415427:	mov    BYTE PTR [edx+0x14ef8d12],dl
  41542d:	(bad)  
  41542e:	or     eax,0xe4096f9d
  415433:	xor    al,0xb5
  415435:	pop    ebx
  415436:	add    ebp,edx
  415438:	leave  
  415439:	leave  
  41543a:	mov    cl,0xbd
  41543c:	rcr    DWORD PTR [edx-0x4e09bb34],0x3d
  415443:	inc    esi
  415444:	les    eax,FWORD PTR [ebp-0x70]
  415447:	(bad)  
  415448:	sub    eax,0x5daa6903
  41544d:	sub    ch,BYTE PTR [ebp-0x497961d9]
  415453:	ja     0x41545f
  415455:	xchg   ebx,eax
  415456:	stc    
  415457:	call   0x5c14:0xb0ebac9f
  41545e:	(bad)
  415461:	inc    eax
  415462:	xchg   DWORD PTR [esi],ecx
  415464:	lods   eax,DWORD PTR ds:[esi]
  415465:	sti    
  415466:	jge    0x4154de
  415468:	mov    cl,0xaa
  41546a:	jmp    0x71cd:0xbd933903
  415471:	int    0xdf
  415473:	dec    eax
  415474:	(bad)  
  415475:	push   edi
  415476:	mov    ebp,0x9f4c7a09
  41547b:	lock fild DWORD PTR [ecx-0x533e3f3]
  415482:	nop
  415483:	pop    esp
  415484:	das    
  415485:	ja     0x4154fe
  415487:	gs pop esp
  415489:	test   al,0x37
  41548b:	pop    edi
  41548c:	jnp    0x4154b5
  41548e:	inc    edx
  41548f:	ja     0x4154f4
  415491:	push   ebp
  415492:	xor    eax,0xacea301c
  415497:	aam    0x6
  415499:	jb     0x415463
  41549b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549c:	inc    ebp
  41549d:	sbb    DWORD PTR ss:0xd5378749,ecx
  4154a4:	aas    
  4154a5:	sbb    ecx,edi
  4154a7:	xor    ebx,DWORD PTR [ebp+0x6d]
  4154aa:	jbe    0x4154ec
  4154ac:	cmp    eax,0x30ea9bf8
  4154b1:	inc    ecx
  4154b2:	xchg   esp,eax
  4154b3:	rcr    DWORD PTR [ebp+ebp*8+0x234e73dd],0xd0
  4154bb:	div    esp
  4154bd:	mov    al,BYTE PTR [eax]
  4154bf:	mov    DWORD PTR [esp+ebx*2-0x5],ecx
  4154c3:	mov    ecx,0x80583631
  4154c8:	add    BYTE PTR [ebx-0x58],al
  4154cb:	test   eax,0x9e62f5c0
  4154d0:	cli    
  4154d1:	dec    eax
  4154d2:	int3   
  4154d3:	mov    esp,DWORD PTR [esi-0x66]
  4154d6:	ret    0xb527
  4154d9:	fwait
  4154da:	jl     0x41546d
  4154dc:	push   eax
  4154dd:	push   esi
  4154de:	out    dx,eax
  4154df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e0:	lock add BYTE PTR ds:[esi+ebx*2+0x60],cl
  4154e6:	mov    esi,0xa980c03c
  4154eb:	inc    ebx
  4154ec:	inc    esp
  4154ed:	iret   
  4154ee:	cmc    
  4154ef:	int3   
  4154f0:	aaa    
  4154f1:	test   ah,0x9c
  4154f4:	daa    
  4154f5:	and    eax,0x512a99ab
  4154fa:	lds    esi,FWORD PTR [eax]
  4154fc:	daa    
  4154fd:	les    ebx,FWORD PTR [ecx]
  4154ff:	das    
  415500:	and    BYTE PTR [ebx],bl
  415502:	out    dx,al
  415503:	jns    0x41550d
  415505:	mov    bl,0x20
  415507:	push   esp
  415508:	xor    al,0xf7
  41550a:	jbe    0x41550b
  41550c:	pause  
  41550e:	dec    ebx
  41550f:	mov    ds:0x93def2a8,eax
  415514:	in     al,dx
  415515:	xchg   edx,eax
  415516:	mov    cl,bl
  415518:	pop    ebp
  415519:	imul   esp,ebp,0x19
  41551c:	jp     0x41549e
  41551e:	jne    0x415583
  415520:	mov    edi,0xd596658f
  415525:	add    bh,bl
  415527:	xchg   ebx,eax
  415528:	pusha  
  415529:	mov    eax,ds:0xbf108c0e
  41552e:	push   ecx
  41552f:	scas   eax,DWORD PTR es:[edi]
  415530:	fdivr  QWORD PTR [ecx]
  415532:	mov    bl,0x5b
  415534:	int    0xd7
  415536:	repnz test DWORD PTR [ecx-0x3a],ecx
  41553a:	sub    eax,0xdcf0e657
  41553f:	or     ebx,esi
  415541:	mov    ecx,DWORD PTR [eax+0x1207c40c]
  415547:	push   cs
  415548:	loopne 0x415514
  41554a:	or     esp,DWORD PTR [esi+0x2b]
  41554d:	mov    ebp,DWORD PTR [edx]
  41554f:	inc    ebx
  415550:	popf   
  415551:	test   eax,0x7a8eafde
  415556:	cmp    DWORD PTR [edx],esi
  415558:	pop    es
  415559:	test   DWORD PTR [esp+ebx*1+0x692009c8],ebp
  415560:	sar    DWORD PTR [edx+0x5],0xaa
  415564:	adc    ch,bl
  415566:	(bad)  [edx-0x2a93f8ab]
  41556c:	sbb    eax,0x5a96d82a
  415571:	scas   eax,DWORD PTR es:[edi]
  415572:	ja     0x41552f
  415574:	in     eax,0x4
  415576:	dec    DWORD PTR [edx-0x1b]
  415579:	inc    ebx
  41557a:	push   edx
  41557b:	push   edi
  41557c:	cmp    edx,DWORD PTR [edx-0x336ba2a9]
  415582:	adc    cl,ah
  415584:	loopne 0x4155be
  415586:	int    0xfb
  415588:	bsr    esi,DWORD PTR [edx]
  41558b:	in     al,dx
  41558c:	test   al,cl
  41558e:	leave  
  41558f:	mov    edi,0x9ad25513
  415594:	std    
  415595:	enter  0xebde,0x49
  415599:	mov    ds:0x94f7c540,eax
  41559e:	div    eax
  4155a0:	jb     0x41557d
  4155a2:	jl     0x415585
  4155a4:	jmp    0xf017:0xd0626fe1
  4155ab:	and    al,0xe1
  4155ad:	je     0x4155ac
  4155af:	and    ebx,DWORD PTR [esi+0x293ebd1d]
  4155b5:	pop    ss
  4155b6:	cmp    BYTE PTR [esi],ch
  4155b8:	mov    esp,0x167a8ad1
  4155bd:	lds    ebx,FWORD PTR [edx]
  4155bf:	pop    ss
  4155c0:	std    
  4155c1:	mov    bh,0xec
  4155c3:	jmp    0x415594
  4155c5:	pop    ebp
  4155c6:	mov    ecx,0xbaa1b93b
  4155cb:	xor    BYTE PTR [ebx-0x1950b064],bh
  4155d1:	adc    DWORD PTR [ebp+0xf],eax
  4155d4:	cmp    edi,DWORD PTR [ecx]
  4155d6:	sbb    DWORD PTR [edi+0x70],0x9afee2a1
  4155dd:	xchg   DWORD PTR [edx-0x40],ebx
  4155e0:	scas   eax,DWORD PTR es:[edi]
  4155e1:	jno    0x41563d
  4155e3:	mov    DWORD PTR ds:[eax],esp
  4155e6:	mov    DWORD PTR [ebx+0x43],ecx
  4155e9:	mov    ds:0xa7eefaed,al
  4155ee:	push   es
  4155ef:	pop    es
  4155f0:	bound  esp,QWORD PTR [ecx+0x43]
  4155f3:	push   ds
  4155f4:	xor    BYTE PTR [edi],0x66
  4155f7:	mov    WORD PTR [ebx],es
  4155f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fa:	mov    ah,0x74
  4155fc:	dec    ebp
  4155fd:	es or  al,0x38
  415600:	jb     0x41565b
  415602:	test   dl,0xe1
  415605:	mov    ss,WORD PTR [eax-0x2944a70b]
  41560b:	mov    ah,0xf9
  41560d:	sub    esi,edi
  41560f:	xchg   esi,eax
  415610:	push   es
  415611:	inc    ecx
  415612:	sub    eax,0xf40af1a2
  415617:	sbb    bl,BYTE PTR [edi-0x718ac76b]
  41561d:	pop    ss
  41561e:	adc    BYTE PTR [ecx-0x22],dl
  415621:	xchg   ecx,eax
  415622:	mov    ch,0xf9
  415624:	(bad)  
  415625:	mov    ds:0x2fc1ebd9,eax
  41562a:	cmp    BYTE PTR [eax+0x32bfa361],0x2a
  415631:	xchg   esi,eax
  415632:	popf   
  415633:	jns    0x41569d
  415635:	jo     0x41564c
  415637:	shl    esi,0x5d
  41563a:	loop   0x415621
  41563c:	push   esp
  41563d:	mov    eax,ds:0xf6b3f9f7
  415642:	mov    esp,0x1e251558
  415647:	mov    ebx,0x83d0c2f
  41564c:	fs cmc 
  41564e:	fisubr WORD PTR [ebx+0x76083d3c]
  415654:	scas   eax,DWORD PTR es:[edi]
  415655:	or     DWORD PTR [edi+0x6],edx
  415658:	xchg   edi,eax
  415659:	adc    al,ch
  41565b:	pop    es
  41565c:	cdq    
  41565d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565e:	lea    ebx,[ebp-0x1b]
  415661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415662:	arpl   WORD PTR [edi+0x31],cx
  415665:	mov    ecx,ebx
  415667:	pusha  
  415668:	outs   dx,BYTE PTR ds:[esi]
  415669:	fcomp  DWORD PTR [edi-0x4d]
  41566c:	outs   dx,DWORD PTR ds:[esi]
  41566d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41566e:	or     al,0x3e
  415670:	retf   
  415671:	dec    edi
  415672:	out    dx,eax
  415673:	mov    ebp,0x9e8fe5c2
  415678:	sub    esp,DWORD PTR [ecx]
  41567a:	(bad)  
  41567c:	add    eax,0xbb2eab83
  415681:	fisubr DWORD PTR [edx]
  415683:	mov    esp,0x4c1b66be
  415688:	fdiv   DWORD PTR [ecx+ebp*4+0x45c0ca88]
  41568f:	mov    ds:0x536d25fd,eax
  415695:	cmp    DWORD PTR [eax-0x79],ecx
  415698:	sub    bl,dl
  41569a:	mov    ecx,0xfcd25ff5
  41569f:	imul   edi,DWORD PTR [ebp+0x62004562],0x6b98f02a
  4156a9:	jmp    0x4156d9
  4156ab:	in     eax,dx
  4156ac:	test   al,0xb0
  4156ae:	jbe    0x41572c
  4156b0:	stos   DWORD PTR es:[edi],eax
  4156b1:	jb     0x4156ff
  4156b3:	fbstp  TBYTE PTR [esp+ebp*2+0x2c0939e6]
  4156ba:	repnz or edx,DWORD PTR [ebp+0x29]
  4156be:	das    
  4156bf:	mov    ebx,0x2be5dff8
  4156c4:	mov    es,WORD PTR [ebx]
  4156c6:	sub    bh,BYTE PTR [ecx+0x54]
  4156c9:	(bad)  
  4156ca:	jae    0x41569e
  4156cc:	gs scas al,BYTE PTR es:[edi]
  4156ce:	pop    ss
  4156cf:	push   ecx
  4156d0:	push   edi
  4156d1:	and    DWORD PTR [ebp-0x437e1f93],edi
  4156d7:	jae    0x4156b4
  4156d9:	dec    ebx
  4156da:	clc    
  4156db:	push   ds
  4156dc:	imul   BYTE PTR [eax]
  4156de:	outs   dx,BYTE PTR ds:[esi]
  4156df:	sbb    esi,ebx
  4156e1:	mov    BYTE PTR [ebp+ebx*1-0x38],cl
  4156e5:	mov    DWORD PTR [eax-0x47ee2c64],esi
  4156eb:	fnstsw WORD PTR [eax+0x70]
  4156ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156f0:	sub    esp,DWORD PTR [ebx]
  4156f2:	xchg   esp,eax
  4156f4:	test   BYTE PTR [ebp-0xd],dl
  4156f7:	retf   
  4156f8:	xor    eax,0x25c25181
  4156fd:	mov    dl,0x51
  4156ff:	idiv   ebp
  415701:	pop    esp
  415702:	rcr    DWORD PTR [ebx+edx*1],cl
  415705:	adc    al,0x11
  415707:	mov    eax,0x4d911a23
  41570c:	xchg   ebp,eax
  41570d:	daa    
  41570e:	(bad)  
  41570f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415710:	sub    BYTE PTR [edx],dh
  415712:	cmp    eax,0xf2bcbf52
  415717:	xor    al,0xa6
  415719:	jo     0x4156dd
  41571b:	das    
  41571c:	cmp    ah,dl
  41571e:	cmc    
  41571f:	xor    dl,bh
  415721:	(bad)  
  415722:	std    
  415723:	aad    0xe9
  415725:	test   al,0xd5
  415727:	xor    DWORD PTR [eax-0x20],edi
  41572a:	or     bh,cl
  41572c:	ror    DWORD PTR [ecx+0x39170d79],0xb1
  415733:	fstp   TBYTE PTR [ebp-0x1b]
  415736:	xor    eax,0xa76cdba4
  41573b:	loopne 0x415739
  41573d:	push   edx
  41573e:	jo     0x415767
  415740:	cmp    eax,0xe1c102ad
  415745:	add    eax,ebx
  415747:	dec    esi
  415748:	call   0xd9aded9e
  41574d:	mov    edx,0x63070e79
  415752:	cmp    al,0x1a
  415754:	cmp    BYTE PTR [esi-0x5],cl
  415757:	js     0x41579e
  415759:	jns    0x415776
  41575b:	push   0x2c
  41575d:	pop    ebx
  41575e:	adc    eax,0x2cc3b052
  415763:	cmp    al,0x3b
  415765:	retf   
  415766:	imul   eax,DWORD PTR [edi+ecx*8+0x8b4b83e],0xffffffc2
  41576e:	inc    edx
  41576f:	mov    edi,0xf843f090
  415774:	add    eax,edi
  415776:	int    0xab
  415778:	mov    bh,0x82
  41577a:	mov    DWORD PTR [eax],esp
  41577c:	or     eax,0xae3005f
  415781:	shl    DWORD PTR [ecx+0x24b63c44],0xad
  415788:	cmp    DWORD PTR ds:0x691cbdba,esp
  41578e:	mov    ecx,0xd1d012f5
  415793:	mov    al,0xeb
  415795:	dec    eax
  415796:	push   ebx
  415797:	add    BYTE PTR [eax+0x7c],ch
  41579a:	sub    eax,0xf0b14b54
  41579f:	dec    esp
  4157a0:	mov    ebx,0x5aa3c341
  4157a5:	inc    ebp
  4157a6:	mov    ds:0x484dadef,eax
  4157ab:	aad    0x7c
  4157ad:	cld    
  4157ae:	xchg   ebp,eax
  4157af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b0:	scas   al,BYTE PTR es:[edi]
  4157b1:	int    0xb6
  4157b3:	ins    DWORD PTR es:[edi],dx
  4157b4:	fldcw  WORD PTR [ebp+0x51]
  4157b7:	push   ebp
  4157b9:	sub    al,0x7f
  4157bb:	not    BYTE PTR ds:0xd192e202
  4157c1:	push   esi
  4157c2:	mov    ds:0x27b21dc3,al
  4157c7:	popa   
  4157c8:	add    al,0x7b
  4157ca:	dec    eax
  4157cb:	into   
  4157cc:	adc    DWORD PTR [edi+0x7b5f43a8],0xf
  4157d3:	sahf   
  4157d4:	test   BYTE PTR [ecx+0x1d],dh
  4157d7:	inc    BYTE PTR fs:[eax-0x5a3d0347]
  4157de:	mov    ebx,0xc3abb0b3
  4157e3:	push   0xffffffdc
  4157e5:	jns    0x415820
  4157e7:	adc    eax,0x2ca60306
  4157ec:	ja     0x41584e
  4157ee:	ins    BYTE PTR es:[edi],dx
  4157ef:	fs out dx,al
  4157f1:	add    edi,esi
  4157f3:	mov    eax,ds:0xa37f37f0
  4157f8:	or     ebp,DWORD PTR [ecx-0x103a38cc]
  4157fe:	addr16 add al,0x84
  415801:	test   BYTE PTR [ebx],ch
  415803:	lea    esi,[ecx]
  415805:	dec    eax
  415806:	test   eax,0x1d7a3d85
  41580b:	push   ss
  41580c:	mov    ebp,0x27e72348
  415811:	ret    
  415812:	je     0x415865
  415814:	adc    eax,0xe3626304
  415819:	aam    0xbe
  41581b:	mov    al,BYTE PTR [edx]
  41581d:	std    
  41581e:	inc    esp
  41581f:	lods   eax,DWORD PTR ds:[esi]
  415820:	cmp    esp,DWORD PTR [esi-0x6d]
  415823:	push   esp
  415824:	icebp  
  415825:	je     0x415868
  415827:	imul   esp,DWORD PTR [eax],0x6dffc063
  41582d:	(bad)  
  41582e:	std    
  41582f:	retf   
  415830:	outs   dx,BYTE PTR ds:[esi]
  415831:	pop    ds
  415832:	pop    ecx
  415833:	and    BYTE PTR [esi],bl
  415835:	or     BYTE PTR [edx+0x7dd77a3e],dl
  41583b:	gs enter 0xde3d,0x48
  415840:	cdq    
  415841:	jg     0x415815
  415843:	add    eax,0xe9a1c6ee
  415848:	xchg   BYTE PTR [eax-0x70],cl
  41584b:	stos   BYTE PTR es:[edi],al
  41584c:	xchg   DWORD PTR [edi+0x4ca68c12],esp
  415852:	mov    edx,gs
  415854:	push   esp
  415855:	fbstp  TBYTE PTR [esi+0x183dfd55]
  41585b:	fsubrp st(6),st
  41585d:	mov    ebx,0xcd35c47b
  415863:	sbb    al,dh
  415865:	mov    esp,0x57a58fdb
  41586a:	not    BYTE PTR ds:0x8518f228
  415870:	pop    esi
  415871:	adc    eax,DWORD PTR [ebx-0x65ee5ae]
  415877:	adc    eax,0x36312e99
  41587c:	sbb    BYTE PTR ds:0x611c5480,ah
  415882:	and    ecx,edx
  415884:	mov    WORD PTR [eax+0x2c0d6728],gs
  41588a:	pop    eax
  41588b:	push   ds
  41588c:	enter  0x39f8,0x9d
  415890:	ret    
  415891:	sub    bh,cl
  415893:	mov    al,ds:0x21e20a5f
  415898:	in     al,0x69
  41589a:	aaa    
  41589b:	outs   dx,DWORD PTR ds:[esi]
  41589c:	(bad)  
  41589d:	sub    dl,BYTE PTR [esp+eiz*8+0x3b89a5b1]
  4158a4:	xchg   esi,eax
  4158a5:	xchg   ecx,eax
  4158a6:	cmc    
  4158a7:	mov    al,ds:0x34ab9e3d
  4158ac:	pop    eax
  4158ad:	cmp    eax,0xbf619b50
  4158b2:	in     eax,dx
  4158b3:	jnp    0x415835
  4158b5:	and    dl,BYTE PTR [edx-0x7f86c916]
  4158bb:	rol    BYTE PTR [ebp-0x30],0x78
  4158bf:	sahf   
  4158c0:	or     DWORD PTR [ebp+ecx*8+0x67],eax
  4158c4:	jne    0x415902
  4158c6:	mov    al,ds:0x6e479994
  4158cb:	sbb    al,0x73
  4158cd:	out    dx,al
  4158ce:	jge    0x41590c
  4158d0:	add    eax,0x96b5d5c2
  4158d5:	xchg   edi,eax
  4158d6:	cmp    esi,0x1b
  4158d9:	ret    0x481f
  4158dc:	ret    
  4158dd:	mov    ?,WORD PTR [ecx-0x1f26fae1]
  4158e3:	(bad)  
  4158e4:	dec    ebx
  4158e5:	popa   
  4158e6:	dec    esi
  4158e7:	push   edx
  4158e8:	outs   dx,BYTE PTR ds:[esi]
  4158e9:	aas    
  4158ea:	and    ebp,0xffffffbe
  4158ed:	xor    DWORD PTR [bx+si-0x6e],esp
  4158f1:	(bad)  [eax-0x756ff3fa]
  4158f7:	sub    DWORD PTR [edi-0x42a8216],edx
  4158fd:	lods   eax,DWORD PTR ds:[esi]
  4158fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ff:	fst    QWORD PTR [edx+0x46]
  415902:	mov    al,0x74
  415904:	pop    ss
  415905:	mov    ebx,0xdff5964a
  41590a:	jo     0x4158f5
  41590c:	aad    0x91
  41590e:	out    0x91,al
  415910:	pop    ss
  415911:	fs es push es
  415914:	mov    cl,0xc8
  415916:	jle    0x41593d
  415918:	icebp  
  415919:	aas    
  41591a:	(bad)  
  41591b:	test   eax,0xaddc9e60
  415920:	sbb    esi,DWORD PTR [ebp-0x3b8be54b]
  415926:	lods   eax,DWORD PTR ds:[esi]
  415927:	test   al,0x9a
  415929:	xor    ch,BYTE PTR [ecx-0xc]
  41592c:	repz cmp al,0xdc
  41592f:	into   
  415930:	push   ds
  415931:	sahf   
  415932:	(bad)  
  415933:	cdq    
  415934:	jp     0x415974
  415936:	jne    0x4158ed
  415938:	push   esp
  415939:	std    
  41593a:	inc    edx
  41593b:	sbb    ah,dh
  41593d:	scas   al,BYTE PTR es:[edi]
  41593e:	ss in  al,dx
  415940:	ror    BYTE PTR [ebx-0x79],cl
  415943:	push   edx
  415944:	xchg   ebx,eax
  415945:	xchg   edi,eax
  415946:	mul    BYTE PTR [eax+0x4397bfa6]
  41594c:	imul   ebp,DWORD PTR [edx-0x50af23f9],0x796afe0d
  415956:	inc    esi
  415957:	daa    
  415958:	clc    
  415959:	fs retf 
  41595b:	xchg   BYTE PTR [ebx-0x4e721e4c],cl
  415961:	mov    ebp,0x4c3fd393
  415966:	retf   
  415967:	add    al,0x0
  415969:	xchg   ebx,eax
  41596a:	or     ebx,DWORD PTR [edx]
  41596c:	rol    esp,0x83
  41596f:	adc    al,0x68
  415971:	rcr    BYTE PTR [edi+0x3a7716a5],0x49
  415978:	push   ss
  415979:	retf   
  41597a:	xor    ebp,DWORD PTR [ebx+ecx*2+0x46819c26]
  415981:	sti    
  415982:	(bad)  
  415983:	pop    eax
  415984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415985:	lods   al,BYTE PTR ds:[esi]
  415986:	scas   eax,DWORD PTR es:[edi]
  415987:	mov    ebx,0xbcc31b67
  41598c:	outs   dx,DWORD PTR ds:[esi]
  41598d:	enter  0x62dc,0x94
  415991:	adc    ebx,eax
  415993:	nop
  415994:	icebp  
  415995:	mov    ebx,0xcf2c9593
  41599a:	inc    ecx
  41599b:	adc    dl,BYTE PTR [ebx+0x57a647dd]
  4159a1:	dec    ebx
  4159a2:	ret    0xdd45
  4159a5:	ds into 
  4159a7:	mov    eax,ds:0x5fb5d7ce
  4159ac:	sub    eax,0xd2402bd3
  4159b1:	(bad)  
  4159b2:	sub    dh,BYTE PTR [ebx-0x6e]
  4159b5:	ret    
  4159b6:	enter  0x2fcf,0x42
  4159ba:	pop    ecx
  4159bb:	stos   BYTE PTR es:[edi],al
  4159bc:	xor    eax,0xdba15564
  4159c1:	jno    0x415a0b
  4159c3:	fisttp WORD PTR [edi]
  4159c5:	and    BYTE PTR [esi-0x4fd99a86],ah
  4159cb:	sbb    eax,0x1c632e8e
  4159d0:	dec    ebp
  4159d1:	adc    eax,0x857770ce
  4159d6:	cmp    al,0x48
  4159d8:	divps  xmm2,XMMWORD PTR [esi]
  4159db:	push   ebp
  4159dc:	loope  0x415a34
  4159de:	lahf   
  4159df:	js     0x415962
  4159e1:	cdq    
  4159e2:	sub    esi,0x3d
  4159e5:	pop    ecx
  4159e6:	ss jp  0x415972
  4159e9:	sub    al,0x44
  4159eb:	and    dh,BYTE PTR [ebx+0x29]
  4159ee:	cs pop edi
  4159f0:	int    0x5c
  4159f2:	or     ecx,edx
  4159f4:	and    cl,cl
  4159f6:	popf   
  4159f7:	and    edi,DWORD PTR [ecx+0x3b827116]
  4159fd:	hlt    
  4159fe:	or     ecx,ebx
  415a00:	cld    
  415a01:	mov    al,0x63
  415a03:	xor    ecx,ecx
  415a05:	mov    eax,0x8f121f36
  415a0a:	mov    ecx,edx
  415a0c:	mov    al,ds:0x69daf016
  415a11:	jne    0x415a7c
  415a13:	mov    edx,ebp
  415a15:	xor    eax,0xc5cb2d3a
  415a1a:	xor    eax,0xce92dc76
  415a1f:	gs pushf 
  415a21:	cmp    bl,BYTE PTR [esi]
  415a23:	fiadd  DWORD PTR [eax+0x7075dc1]
  415a29:	push   ebp
  415a2a:	fisub  WORD PTR [ebx+0x9]
  415a2d:	jecxz  0x4159c0
  415a2f:	loope  0x4159fe
  415a31:	xchg   BYTE PTR [ebx+0x7d],ch
  415a34:	fldcw  WORD PTR [ebp-0x6]
  415a37:	jbe    0x4159c0
  415a39:	fidivr DWORD PTR [edx]
  415a3b:	jns    0x415a54
  415a3d:	push   esp
  415a3e:	push   0x233da6c4
  415a43:	leave  
  415a44:	sub    DWORD PTR [edx-0x64eda34f],edi
  415a4a:	mov    al,0x4b
  415a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4d:	lods   al,BYTE PTR ds:[esi]
  415a4e:	int3   
  415a4f:	xchg   ebp,eax
  415a50:	retf   0xe75d
  415a53:	xchg   ah,cl
  415a55:	cld    
  415a56:	repz pop ecx
  415a58:	mov    eax,ds:0x76f33c68
  415a5d:	dec    esp
  415a5e:	cli    
  415a5f:	addr16 add eax,0x2ca0dd51
  415a65:	push   ds
  415a66:	(bad)  
  415a67:	aam    0xb5
  415a69:	push   ss
  415a6a:	sbb    BYTE PTR [ebp-0x16f0220],al
  415a70:	adc    eax,0x1517bd17
  415a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a76:	jmp    0x771ea389
  415a7b:	retf   0xe4ce
  415a7e:	inc    esp
  415a7f:	mov    DWORD PTR [eax-0x57c15709],edi
  415a85:	into   
  415a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a87:	push   ebp
  415a88:	mov    esp,0xd36bec7
  415a8d:	pop    ss
  415a8e:	out    dx,al
  415a8f:	loop   0x415a51
  415a91:	pop    ss
  415a92:	popf   
  415a93:	imul   eax,DWORD PTR [edi+0x4e],0xae48bddc
  415a9a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415a9c:	cdq    
  415a9d:	sub    eax,DWORD PTR [edx+edx*2+0x34]
  415aa1:	mov    dl,0xe6
  415aa3:	outs   dx,DWORD PTR ds:[esi]
  415aa4:	pushf  
  415aa5:	out    dx,ax
  415aa7:	push   ecx
  415aa8:	dec    esi
  415aa9:	push   0xffffff81
  415aab:	mov    bl,bh
  415aad:	sub    DWORD PTR [ebp+0x17fac985],esp
  415ab3:	push   0x6c
  415ab5:	lods   al,BYTE PTR ds:[esi]
  415ab6:	sbb    bl,BYTE PTR [ebx]
  415ab8:	cmp    al,BYTE PTR [ecx]
  415aba:	stos   BYTE PTR es:[edi],al
  415abb:	popa   
  415abc:	xor    eax,0x82b27240
  415ac1:	sahf   
  415ac2:	in     al,dx
  415ac3:	nop
  415ac4:	shl    BYTE PTR [esi],1
  415ac6:	xchg   dl,dl
  415ac8:	xchg   BYTE PTR [esi+0x71],cl
  415acb:	adc    BYTE PTR [ebx-0x424b7c5f],0xc2
  415ad2:	gs fstp TBYTE PTR cs:[edi-0x467d7ae5]
  415ada:	ins    BYTE PTR es:[edi],dx
  415adb:	or     BYTE PTR [eax+edx*2-0x271a85fe],ch
  415ae2:	stos   DWORD PTR es:[edi],eax
  415ae3:	add    BYTE PTR [edx],0xf3
  415ae6:	add    bh,BYTE PTR [esi-0x5a]
  415ae9:	mov    eax,ds:0x441f2a8
  415aee:	ss dec esi
  415af0:	jmp    FWORD PTR [edx-0xa]
  415af3:	aad    0x2c
  415af5:	in     eax,0xe9
  415af7:	out    0x2c,al
  415af9:	dec    esp
  415afa:	dec    ebx
  415afb:	ret    
  415afc:	(bad)  
  415afd:	in     eax,dx
  415afe:	ss push ecx
  415b00:	das    
  415b01:	jle    0x415b70
  415b03:	xlat   BYTE PTR ds:[ebx]
  415b04:	mov    ebx,0xcea7633f
  415b09:	js     0x415ad8
  415b0b:	sbb    DWORD PTR [ecx+0x22],eax
  415b0e:	daa    
  415b0f:	aam    0xde
  415b11:	or     eax,DWORD PTR [ebx]
  415b13:	push   edx
  415b14:	dec    ebp
  415b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b16:	fstp   DWORD PTR [ebp+0x42]
  415b19:	pop    edi
  415b1a:	scas   eax,DWORD PTR es:[edi]
  415b1b:	xlat   BYTE PTR ds:[ebx]
  415b1c:	jmp    0x415b45
  415b1e:	ins    BYTE PTR es:[edi],dx
  415b1f:	sub    DWORD PTR [edi-0x9],ecx
  415b22:	cmp    esi,DWORD PTR [edi+ecx*8-0x7c]
  415b26:	aam    0x9e
  415b28:	xchg   BYTE PTR [edx],cl
  415b2a:	ds mov edx,0xd1fe1e1e
  415b30:	pop    esp
  415b31:	stc    
  415b32:	ins    BYTE PTR es:[edi],dx
  415b33:	add    al,bh
  415b35:	inc    edx
  415b36:	stos   DWORD PTR es:[edi],eax
  415b37:	fsubr  DWORD PTR [edi+edi*8]
  415b3a:	cli    
  415b3b:	push   esp
  415b3c:	add    dh,dh
  415b3e:	pop    es
  415b3f:	rcr    BYTE PTR [ebp-0xe],0xcb
  415b43:	lea    edi,[eax]
  415b45:	add    DWORD PTR [eax+0x5c],eax
  415b48:	and    esi,DWORD PTR [edi]
  415b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b4b:	inc    ecx
  415b4c:	mov    bh,0x43
  415b4e:	wrmsr  
  415b50:	adc    DWORD PTR [ecx-0x6d1bd2ae],ebx
  415b56:	inc    eax
  415b57:	test   eax,0x1a76ac0e
  415b5c:	pop    es
  415b5d:	mov    WORD PTR [edx+eax*2],fs
  415b60:	aaa    
  415b61:	mov    bh,0x8e
  415b63:	sbb    eax,0x6b8d4f25
  415b68:	test   cl,ch
  415b6a:	xchg   esi,eax
  415b6b:	bound  edi,QWORD PTR [ebp+eax*4-0xb]
  415b6f:	add    al,0x48
  415b71:	stos   BYTE PTR es:[edi],al
  415b72:	mov    ebp,0xe7cea24
  415b77:	pop    ecx
  415b78:	call   0x49985f61
  415b7d:	adc    edx,edi
  415b7f:	xchg   ecx,eax
  415b80:	mov    ds:0x8e48df88,al
  415b85:	sbb    cl,BYTE PTR [edx]
  415b87:	sbb    DWORD PTR [eax],0xffffff83
  415b8a:	scas   al,BYTE PTR es:[edi]
  415b8b:	test   DWORD PTR [edx],esi
  415b8d:	push   eax
  415b8e:	dec    edi
  415b8f:	retf   
  415b90:	jp     0x415bb3
  415b92:	pop    ss
  415b93:	ret    0xa64d
  415b96:	xchg   esi,eax
  415b97:	aad    0xad
  415b99:	cmp    ebx,DWORD PTR [edx+0x46]
  415b9c:	mov    ch,0x33
  415b9e:	cmp    bh,BYTE PTR [esi+ebx*4]
  415ba1:	int    0xbc
  415ba3:	or     DWORD PTR [esi-0x33],0x6b
  415ba7:	adc    DWORD PTR [ebx-0x1c02a5c7],eax
  415bad:	push   ebp
  415bae:	ror    dl,cl
  415bb0:	outs   dx,BYTE PTR ds:[esi]
  415bb1:	jnp    0x415bbe
  415bb3:	push   ecx
  415bb4:	or     al,0x14
  415bb6:	jne    0x415bb9
  415bb8:	sub    DWORD PTR [edx+ebx*4],0x30
  415bbc:	push   esp
  415bbd:	pop    ecx
  415bbe:	sbb    BYTE PTR [edi-0x66e75569],bl
  415bc4:	sbb    BYTE PTR [ebp-0x4d3e22e8],bl
  415bca:	loop   0x415b65
  415bcc:	and    BYTE PTR [edx],ah
  415bce:	fwait
  415bcf:	xchg   al,ch
  415bd1:	xchg   ebx,eax
  415bd2:	jae    0x415bc4
  415bd4:	loopne 0x415b83
  415bd6:	jecxz  0x415b7c
  415bd8:	xlat   BYTE PTR ds:[ebx]
  415bd9:	jge    0x415bd8
  415bdb:	repz das 
  415bdd:	aas    
  415bde:	inc    edx
  415bdf:	repnz sub eax,0xe6e11a08
  415be5:	out    dx,al
  415be6:	add    BYTE PTR [eax+0x6b7eaed5],cl
  415bec:	jecxz  0x415b7f
  415bee:	pop    ebp
  415bef:	sbb    al,0x52
  415bf1:	mov    ebx,DWORD PTR [ebx+0x5b8ec647]
  415bf7:	ror    ebp,1
  415bf9:	stos   DWORD PTR es:[edi],eax
  415bfa:	enter  0xa23c,0x79
  415bfe:	inc    esi
  415bff:	mov    ?,WORD PTR [ebp-0x516b7bfd]
  415c05:	push   edi
  415c06:	jge    0x415c1e
  415c08:	(bad)  
  415c09:	dec    ebx
  415c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0b:	xchg   ecx,eax
  415c0c:	repnz leave 
  415c0e:	sbb    DWORD PTR ds:0x8b1eb6c0,0xffffffb6
  415c15:	ds mov bl,0xf7
  415c18:	xor    ebx,DWORD PTR [esi-0x25]
  415c1b:	cs jecxz 0x415c36
  415c1e:	pusha  
  415c1f:	jnp    0x415bc2
  415c21:	lock daa 
  415c23:	mov    esp,0x889bd897
  415c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c29:	adc    ah,al
  415c2b:	pop    ecx
  415c2c:	xor    DWORD PTR [esi],ebx
  415c2e:	dec    esp
  415c2f:	sbb    edi,DWORD PTR [ebp+0x18]
  415c32:	jae    0x415bf7
  415c34:	jmp    0x415c08
  415c36:	mov    dl,0xd8
  415c38:	pop    ds
  415c39:	mov    al,ds:0x866599c
  415c3e:	aam    0x93
  415c40:	xchg   ecx,eax
  415c41:	fwait
  415c42:	stc    
  415c43:	aad    0x5c
  415c45:	sub    eax,0x11de44ed
  415c4a:	in     eax,0x70
  415c4c:	shr    cl,cl
  415c4e:	test   ch,ch
  415c50:	cmp    esi,DWORD PTR [ecx-0x20b9e958]
  415c56:	push   edx
  415c57:	pop    ecx
  415c58:	into   
  415c59:	xor    DWORD PTR [eax],edx
  415c5b:	xchg   esi,eax
  415c5c:	and    al,0x9
  415c5e:	stos   BYTE PTR es:[edi],al
  415c5f:	cmc    
  415c60:	dec    eax
  415c61:	mov    esi,0xf78eed0b
  415c66:	mov    al,ds:0xba2cfcc1
  415c6b:	movq   QWORD PTR [ecx],mm4
  415c6e:	xchg   edi,eax
  415c6f:	push   ebp
  415c70:	or     eax,0x60c7b5bf
  415c75:	jns    0x415cd7
  415c77:	aad    0x83
  415c79:	and    al,BYTE PTR [ebx-0x7771a699]
  415c7f:	mul    DWORD PTR [edi+ecx*2-0x43]
  415c83:	icebp  
  415c84:	mov    ah,0xd6
  415c86:	xchg   BYTE PTR [esi-0x3a],bh
  415c89:	call   0xfbf6:0x2f9d9511
  415c90:	ror    BYTE PTR [edi],cl
  415c92:	mov    ecx,0x5c5c5b62
  415c97:	(bad)  
  415c98:	fnsave [esi]
  415c9a:	mov    al,0xce
  415c9c:	fidivr DWORD PTR [ebx-0x37]
  415c9f:	mov    ecx,0x9f4ae924
  415ca4:	scas   al,BYTE PTR es:[edi]
  415ca5:	adc    eax,DWORD PTR [ebx+0x59eef4ce]
  415cab:	or     eax,0x44ddf4d8
  415cb0:	push   ebx
  415cb1:	dec    eax
  415cb2:	add    BYTE PTR [edi-0x663989f8],0x4c
  415cb9:	pusha  
  415cba:	ins    BYTE PTR es:[edi],dx
  415cbb:	test   eax,0xd9603577
  415cc0:	shl    DWORD PTR [ecx+eax*4],cl
  415cc3:	ss dec eax
  415cc5:	fsub   QWORD PTR [edx]
  415cc7:	and    BYTE PTR [eax],bl
  415cc9:	test   ch,0xed
  415ccc:	push   ss
  415ccd:	sar    DWORD PTR [ebx],cl
  415ccf:	sub    WORD PTR [edi],ax
  415cd2:	daa    
  415cd3:	mov    edi,DWORD PTR [ecx-0x775e5d91]
  415cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cda:	or     al,0x12
  415cdc:	cld    
  415cdd:	clc    
  415cde:	adc    esi,edx
  415ce0:	fistp  QWORD PTR [ecx+0x515fc4fc]
  415ce6:	mov    al,0xe3
  415ce8:	sahf   
  415ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cea:	out    0xf6,al
  415cec:	mov    ch,0xdb
  415cee:	inc    edx
  415cef:	lea    eax,[eax-0x1b147d4d]
  415cf5:	in     eax,0x46
  415cf7:	jne    0x415d1c
  415cf9:	jl     0x415cb7
  415cfb:	pop    es
  415cfc:	in     al,dx
  415cfd:	and    ecx,DWORD PTR ds:0x6dd1c3c8
  415d03:	cmp    dl,cl
  415d05:	mov    edi,0xc9fb7bcc
  415d0a:	mov    ch,dl
  415d0c:	xchg   BYTE PTR gs:[ecx-0x3e],al
  415d10:	xor    DWORD PTR [eax+0x4],0xd2ceba86
  415d17:	fwait
  415d18:	and    al,0xe3
  415d1a:	leave  
  415d1b:	xchg   esi,eax
  415d1c:	fidiv  DWORD PTR [edi]
  415d1e:	fmul   DWORD PTR [ebp-0x55]
  415d21:	xor    al,0x43
  415d23:	and    bh,BYTE PTR [ebx+0x79]
  415d26:	aam    0x94
  415d28:	outs   dx,BYTE PTR ds:[esi]
  415d29:	imul   ebp,ebp,0x86be4439
  415d2f:	loop   0x415d53
  415d31:	(bad)  
  415d32:	pop    ebx
  415d33:	shl    DWORD PTR [ebp+eax*2-0x279a6407],0x85
  415d3b:	fstp   TBYTE PTR [ebx]
  415d3d:	pop    es
  415d3e:	lds    edi,FWORD PTR [bp+si-0x6d02]
  415d43:	in     eax,0xb4
  415d45:	xor    BYTE PTR [ecx+0x19d80a8c],bl
  415d4b:	test   ebp,esi
  415d4d:	xor    al,0x50
  415d4f:	scas   eax,DWORD PTR es:[edi]
  415d50:	nop
  415d51:	mov    dl,0x60
  415d53:	push   esi
  415d54:	jne    0x415d6d
  415d56:	xchg   esp,eax
  415d57:	dec    ebp
  415d58:	xchg   edi,eax
  415d59:	push   ebp
  415d5a:	cmp    DWORD PTR [esi],ebp
  415d5c:	call   0xdd2090d9
  415d61:	ins    DWORD PTR es:[edi],dx
  415d62:	sti    
  415d63:	jae    0x415d26
  415d65:	push   0x79
  415d67:	pop    ebx
  415d68:	push   cs
  415d69:	jp     0x415d28
  415d6b:	dec    edx
  415d6c:	fs aam 0x60
  415d6f:	jg     0x415d19
  415d71:	xchg   DWORD PTR [ecx+0xa0c859e],ebp
  415d77:	fs pop ecx
  415d79:	jmp    0xc065f8cc
  415d7e:	or     esi,edi
  415d80:	daa    
  415d81:	mov    dh,0x5a
  415d83:	inc    edi
  415d84:	mov    ecx,0x77f337e0
  415d89:	sub    eax,0x4715c43c
  415d8e:	outs   dx,DWORD PTR ds:[esi]
  415d8f:	inc    edx
  415d90:	mov    edx,0xaf0d2c85
  415d95:	popa   
  415d96:	iret   
  415d97:	aam    0x32
  415d99:	sub    eax,0x23cc0fef
  415d9e:	lock sub eax,0x4f4a300e
  415da4:	test   al,0x3e
  415da6:	xor    al,0x23
  415da8:	mul    BYTE PTR [ebx+0x27]
  415dab:	inc    esi
  415dac:	int    0x57
  415dae:	shl    DWORD PTR [edi],cl
  415db0:	jae    0x415daf
  415db2:	cli    
  415db3:	cs in  eax,dx
  415db5:	inc    ebp
  415db6:	push   esp
  415db7:	in     eax,dx
  415db8:	pusha  
  415db9:	out    dx,al
  415dba:	test   eax,0x9b09a81b
  415dbf:	es push ss
  415dc1:	cs mov dh,0x29
  415dc4:	mov    ah,0x17
  415dc6:	mov    ch,BYTE PTR [ebp+ebx*8+0x2e]
  415dca:	outs   dx,DWORD PTR ds:[esi]
  415dcb:	pusha  
  415dcc:	jae    0x415da2
  415dce:	xchg   ebp,eax
  415dcf:	sahf   
  415dd0:	(bad)  
  415dd1:	mov    ds:0x52de5fa5,al
  415dd6:	xor    al,0xea
  415dd8:	ins    DWORD PTR es:[edi],dx
  415dd9:	push   es
  415dda:	retf   
  415ddb:	push   0xa5852592
  415de0:	pop    edx
  415de1:	call   0x29229a18
  415de6:	xchg   ebp,eax
  415de7:	jecxz  0x415d73
  415de9:	out    dx,eax
  415dea:	xlat   BYTE PTR ds:[ebx]
  415deb:	nop    eax
  415dee:	pop    ds
  415def:	jnp    0x415e1e
  415df1:	ffree  st(6)
  415df3:	test   al,0x9
  415df5:	pop    edi
  415df6:	jg     0x415d87
  415df8:	mov    eax,ds:0x57d91788
  415dfd:	xchg   ecx,eax
  415dfe:	ss repz or al,0x7
  415e02:	loopne 0x415dd3
  415e04:	idiv   dl
  415e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e07:	mov    esp,0x43f4c64b
  415e0c:	mov    dh,0x9a
  415e0e:	push   esp
  415e0f:	inc    eax
  415e10:	mul    DWORD PTR [eax]
  415e12:	lds    edx,FWORD PTR [edx]
  415e14:	pop    esi
  415e15:	pushf  
  415e16:	arpl   WORD PTR [eax+0x56],cx
  415e19:	sbb    al,BYTE PTR [ecx+edi*8+0x6d34047]
  415e20:	outs   dx,BYTE PTR ds:[esi]
  415e21:	jno    0x415df0
  415e23:	jle    0x415e2c
  415e25:	mov    ecx,DWORD PTR [edi-0x5ff2f3b7]
  415e2b:	adc    ecx,DWORD PTR [ecx]
  415e2d:	stc    
  415e2e:	int    0xc1
  415e30:	scas   eax,DWORD PTR es:[edi]
  415e31:	ss mov ah,0xbe
  415e34:	clc    
  415e35:	scas   eax,DWORD PTR es:[edi]
  415e36:	mov    bl,ch
  415e38:	(bad)  
  415e39:	aad    0x7b
  415e3b:	mov    bh,0x7a
  415e3d:	into   
  415e3e:	dec    eax
  415e3f:	dec    esi
  415e40:	xchg   esp,eax
  415e41:	jecxz  0x415eac
  415e43:	and    eax,0x3d3f3ef
  415e48:	sub    DWORD PTR ds:0x2dedda80,0x773372d0
  415e52:	add    edi,ecx
  415e54:	in     al,0x8
  415e56:	adc    BYTE PTR [ecx],bl
  415e58:	or     ebx,DWORD PTR [esi+ebx*2-0x54]
  415e5c:	adc    cl,dh
  415e5e:	mov    BYTE PTR [ebp+0x20],ch
  415e61:	mov    ?,WORD PTR [edi+0x5b]
  415e64:	xchg   edi,eax
  415e65:	fsin   
  415e67:	cli    
  415e68:	cli    
  415e69:	enter  0x79,0xd0
  415e6d:	in     al,dx
  415e6e:	scas   al,BYTE PTR es:[edi]
  415e6f:	mov    ebx,ecx
  415e71:	test   DWORD PTR [edx],ecx
  415e73:	ins    DWORD PTR es:[edi],dx
  415e74:	retf   0x138f
  415e77:	cs push eax
  415e79:	lea    ebp,ds:0x4a08e2a
  415e7f:	data16 jmp 0x415ed6
  415e82:	xor    al,BYTE PTR [edx+0x4cd68014]
  415e88:	shl    BYTE PTR [ebp-0x1cf92f83],cl
  415e8e:	ret    
  415e8f:	fldcw  WORD PTR [edx+0x65]
  415e92:	sub    al,0xd3
  415e94:	jle    0x415e82
  415e96:	clc    
  415e97:	out    dx,eax
  415e98:	mov    cs,WORD PTR [eax+0xb]
  415e9b:	mov    esi,ebp
  415e9d:	mov    esi,0xfdf1472d
  415ea2:	mov    ch,0x7f
  415ea4:	cmp    esp,DWORD PTR [edi+0x77]
  415ea7:	imul   esp
  415ea9:	and    DWORD PTR [esp+ebp*2-0x5b8e8fd5],esp
  415eb0:	lods   eax,DWORD PTR ds:[esi]
  415eb1:	mov    edx,0x6d57f03a
  415eb6:	popf   
  415eb7:	dec    eax
  415eb8:	ins    BYTE PTR es:[edi],dx
  415eb9:	cwde   
  415eba:	jne    0x415e97
  415ebc:	loope  0x415e8e
  415ebe:	cli    
  415ebf:	icebp  
  415ec0:	mov    ecx,0xe4d4d061
  415ec5:	and    DWORD PTR [edx],ecx
  415ec7:	(bad)  
  415ec8:	imul   edx,DWORD PTR [ecx],0x3f
  415ecb:	push   edi
  415ecc:	ror    DWORD PTR [esi+ebp*1-0x166d2d66],cl
  415ed3:	test   al,0x16
  415ed5:	mov    ch,bh
  415ed7:	adc    cl,BYTE PTR ds:0xa6b128b6
  415edd:	(bad)  
  415edf:	mov    ds:0x443b4af1,al
  415ee4:	lds    edi,FWORD PTR [esi]
  415ee6:	and    al,0x6b
  415ee8:	jb     0x415e7c
  415eea:	(bad)  
  415eeb:	mov    ebp,0xebb1271f
  415ef0:	pop    ds
  415ef1:	ficom  WORD PTR [edi-0x7b]
  415ef4:	mov    bl,0x6
  415ef6:	ins    DWORD PTR es:[edi],dx
  415ef7:	dec    esi
  415ef8:	push   esi
  415ef9:	(bad)  
  415efa:	adc    al,0x67
  415efc:	jp     0x415e85
  415efe:	std    
  415eff:	jno    0x415f11
  415f01:	xchg   esi,eax
  415f02:	jmp    0x415ec6
  415f04:	aam    0xf3
  415f06:	push   esp
  415f07:	add    al,0x2
  415f09:	imul   ebx,DWORD PTR [ebp-0x564bc6ec],0xb3c2ab9
  415f13:	push   edi
  415f14:	(bad)
  415f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f18:	cmp    edx,esp
  415f1a:	sub    DWORD PTR [edx],esi
  415f1c:	js     0x415ea1
  415f1e:	mov    esi,0x1aae5b9
  415f23:	sub    ebx,esi
  415f25:	jp     0x415eb1
  415f27:	imul   ecx,DWORD PTR [edx],0xf3b2863f
  415f2d:	test   al,0x9a
  415f2f:	(bad)  
  415f30:	fmul   DWORD PTR [ebp+0x31837c29]
  415f36:	dec    ecx
  415f37:	push   ebx
  415f38:	xlat   BYTE PTR ds:[ebx]
  415f39:	jns    0x415f0e
  415f3b:	cmp    dh,BYTE PTR [ecx]
  415f3d:	mov    al,0x31
  415f3f:	mov    ah,0xef
  415f41:	js     0x415f4b
  415f43:	rcr    BYTE PTR [ebx-0x5c264321],0xe9
  415f4a:	js     0x415f5b
  415f4c:	dec    edi
  415f4d:	push   edi
  415f4e:	jnp    0x415f58
  415f50:	add    BYTE PTR [edx],bl
  415f52:	jge    0x415f54
  415f54:	je     0x415eec
  415f56:	and    esi,ecx
  415f58:	mov    al,ds:0xaed479a7
  415f5d:	dec    edi
  415f5e:	mov    ah,0xac
  415f60:	daa    
  415f61:	xor    DWORD PTR [eax-0x1c],0x44
  415f65:	lock jb 0x415f4d
  415f68:	lods   al,BYTE PTR ds:[esi]
  415f69:	pop    edi
  415f6a:	inc    ebp
  415f6b:	inc    eax
  415f6c:	cld    
  415f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6e:	scas   eax,DWORD PTR es:[edi]
  415f6f:	in     al,dx
  415f70:	adc    DWORD PTR [ecx+0x568ae3ea],ebx
  415f76:	aam    0xdb
  415f78:	imul   ecx,ecx,0x83f5541e
  415f7e:	inc    ebx
  415f7f:	aas    
  415f80:	xchg   ebx,eax
  415f81:	bound  esp,QWORD PTR [ecx]
  415f83:	out    dx,eax
  415f84:	push   ebx
  415f85:	not    al
  415f87:	(bad)  
  415f88:	cmc    
  415f89:	arpl   WORD PTR [ebx+0x6b],bx
  415f8c:	loop   0x415f4f
  415f8e:	or     ch,BYTE PTR [edx]
  415f90:	cmovp  esp,DWORD PTR [ebx+0x6419e98d]
  415f97:	fsubrp st(3),st
  415f99:	call   0xe453:0x1ff9c17f
  415fa0:	lock hlt 
  415fa2:	xlat   BYTE PTR ds:[ebx]
  415fa3:	pop    edi
  415fa4:	push   ebp
  415fa5:	xchg   ecx,eax
  415fa6:	out    dx,al
  415fa7:	sub    DWORD PTR [edx-0x10],ebx
  415faa:	in     al,0x3b
  415fac:	call   FWORD PTR [edi-0x2fb0ae0e]
  415fb2:	fs cmp ebp,ecx
  415fb5:	push   0x21283a48
  415fba:	fdivr  DWORD PTR [ebp+0x6c]
  415fbd:	pop    es
  415fbe:	fsubp  st(1),st
  415fc0:	ins    BYTE PTR es:[edi],dx
  415fc1:	popa   
  415fc2:	in     eax,dx
  415fc3:	pop    esp
  415fc4:	add    DWORD PTR [edx+ebx*1],eax
  415fc7:	sbb    eax,0xaf762cda
  415fcc:	add    BYTE PTR [edi],al
  415fce:	mov    ch,0x3
  415fd0:	pop    edx
  415fd1:	jnp    0x415f74
  415fd3:	dec    edx
  415fd4:	mov    dh,0x1e
  415fd6:	jae    0x41603c
  415fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd9:	jecxz  0x415fcc
  415fdb:	(bad)  [edx-0xa]
  415fde:	call   0x2aee5d1e
  415fe3:	cmc    
  415fe4:	inc    eax
  415fe5:	pop    ebp
  415fe6:	je     0x416025
  415fe8:	shl    ch,1
  415fea:	adc    eax,0x5ca6a360
  415fef:	loope  0x416039
  415ff1:	xor    BYTE PTR [esp+ecx*8-0x72128a20],ch
  415ff8:	cld    
  415ff9:	inc    esp
  415ffa:	pop    ecx
  415ffc:	add    al,BYTE PTR [edi+0x16]
  415fff:	and    dl,dl
  416001:	pop    ebp
  416002:	sbb    DWORD PTR [esi+0x2f],edx
  416005:	add    DWORD PTR [ebp-0x265695a9],edx
  41600b:	add    eax,DWORD PTR [esp+edx*1]
  41600e:	sbb    bl,BYTE PTR [ecx+0x4a]
  416011:	stc    
  416012:	jb     0x41607d
  416014:	imul   esp,DWORD PTR [edi+0x59],0xffffffff
  416018:	push   ebp
  416019:	xchg   BYTE PTR [eax+0xe],bh
  41601c:	imul   edx,DWORD PTR [edi+0x2d],0xffffff85
  416020:	(bad)
  416023:	mov    bh,BYTE PTR [edx-0x72]
  416026:	xor    ebx,DWORD PTR [ecx]
  416028:	(bad)  
  416029:	hlt    
  41602a:	mov    esi,0x5358a7ea
  41602f:	clc    
  416030:	ins    DWORD PTR es:[edi],dx
  416031:	xchg   edx,eax
  416032:	nop
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	mov    cl,0xc1
  416036:	mov    esp,0x46db348
  41603b:	cli    
  41603c:	xor    dl,BYTE PTR [edx]
  41603e:	aad    0xc6
  416040:	xchg   edi,eax
  416041:	xchg   DWORD PTR [ebx-0x1b],esp
  416044:	add    dh,BYTE PTR [ecx]
  416046:	fistp  DWORD PTR [ecx+0x3a]
  416049:	xor    eax,0x3f1ff364
  41604e:	sbb    eax,0x922dba12
  416053:	xchg   edi,eax
  416054:	retf   
  416055:	sub    ebx,DWORD PTR [esi-0x6e7c868c]
  41605b:	inc    esi
  41605c:	sbb    dh,bh
  41605e:	pop    esi
  41605f:	mov    ds:0x4a35e974,al
  416064:	or     BYTE PTR [esi+0x4d3722e7],al
  41606a:	jne    0x416021
  41606c:	jae    0x4160cc
  41606e:	or     BYTE PTR [edi],cl
  416070:	xor    DWORD PTR [edi+0x699749fd],ebx
  416076:	out    dx,al
  416077:	jo     0x416027
  416079:	push   ds
  41607a:	mov    ah,0x63
  41607c:	inc    ecx
  41607d:	pop    ebp
  41607e:	push   0xffffffa8
  416080:	mov    ds:0x21c57770,al
  416085:	outs   dx,DWORD PTR ds:[esi]
  416086:	into   
  416087:	mov    cl,0x9c
  416089:	in     al,dx
  41608a:	and    BYTE PTR [esi-0x22532246],al
  416090:	jbe    0x4160fd
  416092:	pop    edx
  416093:	add    al,BYTE PTR [ecx+ebx*1+0x567d9191]
  41609a:	mov    BYTE PTR [edi-0x76],ch
  41609d:	jnp    0x4160da
  41609f:	pusha  
  4160a0:	jge    0x4160c8
  4160a2:	jb     0x41603b
  4160a4:	sbb    bh,BYTE PTR [ecx+0x6ea86d17]
  4160aa:	inc    esp
  4160ab:	mov    DWORD PTR [ebx+esi*4-0x2f],edi
  4160af:	mov    BYTE PTR [edi],dl
  4160b1:	dec    edi
  4160b2:	fisubr WORD PTR [esi]
  4160b4:	push   eax
  4160b5:	jl     0x416061
  4160b7:	out    0x16,al
  4160b9:	xchg   esp,eax
  4160ba:	dec    ebp
  4160bb:	add    al,cl
  4160bd:	xchg   edi,eax
  4160be:	push   ds
  4160bf:	pop    esi
  4160c0:	repnz inc edi
  4160c2:	mov    ch,0x71
  4160c4:	xchg   edx,eax
  4160c5:	ror    DWORD PTR [esi-0x73],0x2e
  4160c9:	dec    ecx
  4160ca:	sbb    BYTE PTR [ebx-0x5a6b3997],0xf0
  4160d1:	repnz in eax,dx
  4160d3:	rol    BYTE PTR [ebx-0x34f95e4],0xfa
  4160da:	mov    dh,0x1f
  4160dc:	stos   DWORD PTR es:[edi],eax
  4160dd:	fld    DWORD PTR [esi+edi*8]
  4160e0:	or     dh,ah
  4160e2:	push   ss
  4160e3:	sub    BYTE PTR [ecx],bh
  4160e5:	(bad)  
  4160e6:	cmp    BYTE PTR [edx+esi*4+0x721d7471],ch
  4160ed:	add    eax,0xad95db51
  4160f2:	test   bh,al
  4160f4:	sbb    dl,BYTE PTR [edi]
  4160f6:	out    0xbe,al
  4160f8:	adc    al,0xb7
  4160fa:	inc    edx
  4160fb:	adc    BYTE PTR [edx-0x73],ch
  4160fe:	fsubr  DWORD PTR [ebp+0x68]
  416101:	enter  0x96ac,0x3c
  416105:	scas   al,BYTE PTR es:[edi]
  416106:	pop    edx
  416107:	jecxz  0x4160a9
  416109:	jae    0x4160ec
  41610b:	push   ecx
  41610c:	or     dl,BYTE PTR [ebp+0x2c]
  41610f:	fcom   DWORD PTR [edx+0x7a307540]
  416115:	pop    eax
  416116:	lahf   
  416117:	lods   eax,DWORD PTR ds:[esi]
  416118:	mov    al,0x76
  41611a:	xchg   ecx,eax
  41611b:	pop    ds
  41611c:	adc    ch,BYTE PTR [ecx]
  41611e:	adc    bh,BYTE PTR [edx-0x30]
  416121:	js     0x4161a1
  416123:	sbb    al,0xb0
  416125:	and    DWORD PTR [ecx+0x3b],0x1742f6df
  41612c:	mov    ds:0x9f872cd1,eax
  416131:	inc    ebp
  416132:	das    
  416133:	jo     0x41615a
  416135:	call   0x7502c33
  41613a:	gs pop ss
  41613c:	stos   BYTE PTR es:[edi],al
  41613d:	icebp  
  41613e:	test   edi,ebx
  416140:	arpl   WORD PTR [eax-0x19757e35],sp
  416146:	add    ch,al
  416148:	xchg   edi,eax
  416149:	mov    esp,0x5162efe6
  41614e:	bound  edi,QWORD PTR [eax+0x15b4d4ad]
  416154:	aas    
  416155:	imul   ebx,DWORD PTR [edx],0x2
  416158:	sar    BYTE PTR [edi+0x72],0x7c
  41615c:	scas   eax,DWORD PTR es:[edi]
  41615d:	ins    DWORD PTR es:[edi],dx
  41615e:	cmp    al,0x14
  416160:	push   ebx
  416161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416162:	scas   eax,DWORD PTR es:[edi]
  416163:	ffreep st(1)
  416165:	add    ebp,DWORD PTR [ecx+eiz*4+0x23c1a5f7]
  41616c:	scas   eax,DWORD PTR es:[edi]
  41616d:	sbb    al,0xe3
  41616f:	fwait
  416170:	mov    ?,edx
  416172:	push   ecx
  416173:	nop
  416174:	push   ecx
  416175:	xor    eax,0x60ffd835
  41617a:	fistp  DWORD PTR [ebx+0x6772e56d]
  416180:	scas   eax,DWORD PTR es:[edi]
  416181:	jle    0x416134
  416183:	js     0x4161cc
  416185:	mov    esp,0xe6ab0a24
  41618a:	add    eax,0x20e35bdf
  41618f:	arpl   WORD PTR [edx+0x63],ax
  416192:	(bad)  
  416193:	retf   0x5a37
  416196:	jnp    0x416140
  416198:	stc    
  416199:	inc    esp
  41619a:	mov    ecx,DWORD PTR [eax-0x3]
  41619d:	dec    esp
  41619f:	(bad)  
  4161a0:	jmp    0x1874:0xd1184c9c
  4161a7:	push   eax
  4161a8:	xor    ebx,edi
  4161aa:	js     0x4161b9
  4161ac:	and    BYTE PTR [edi-0x4f866353],cl
  4161b2:	jp     0x416212
  4161b4:	or     BYTE PTR [edi-0x2f],0xa0
  4161b8:	add    dl,BYTE PTR [ecx]
  4161ba:	mov    ah,0xf9
  4161bc:	cld    
  4161bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161be:	push   esp
  4161bf:	loop   0x416235
  4161c1:	sub    DWORD PTR [ecx-0x5e8f1736],esp
  4161c7:	and    al,0x51
  4161c9:	repz aad 0xa2
  4161cc:	push   esp
  4161cd:	ds clc 
  4161cf:	fwait
  4161d0:	xor    ecx,ecx
  4161d2:	cmp    DWORD PTR [eax+edi*1+0x55],ebx
  4161d6:	adc    eax,0xccf85665
  4161db:	in     eax,0xab
  4161dd:	clc    
  4161de:	pop    eax
  4161df:	dec    esp
  4161e0:	or     BYTE PTR [ecx],cl
  4161e2:	lds    edx,FWORD PTR [ecx]
  4161e4:	mov    al,gs:0x8fbf54dc
  4161ea:	addr16 push eax
  4161ec:	clc    
  4161ed:	call   0x34d6:0x9bad36ad
  4161f4:	pop    ds
  4161f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161f6:	adc    eax,0x60f2ce15
  4161fb:	sbb    DWORD PTR [edx],0x62
  4161fe:	cmp    BYTE PTR [ebp-0xa],dh
  416201:	pop    eax
  416202:	adc    BYTE PTR cs:[edi+0xdb9d8d5],bl
  416209:	dec    edx
  41620a:	nop
  41620b:	ficom  DWORD PTR [ebp+eiz*8-0x33]
  41620f:	aas    
  416210:	push   0x2e
  416212:	dec    esi
  416213:	imul   ebx,DWORD PTR [edx-0x30],0x312a1e05
  41621a:	out    dx,al
  41621b:	and    DWORD PTR [esi+0x3d],0xe8cb9726
  416222:	dec    esi
  416223:	sub    BYTE PTR [eax-0x29a1a7b9],ah
  416229:	(bad)  [edi]
  41622b:	cmp    BYTE PTR [edx-0x1b214120],ch
  416231:	rcl    DWORD PTR [ebx+0x1d],cl
  416234:	repz xchg esi,eax
  416236:	fs cmp eax,0xf847be7b
  41623c:	jb     0x416268
  41623e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623f:	loop   0x41625d
  416241:	aam    0x37
  416243:	mov    ebp,0x39a7f1db
  416248:	push   edx
  416249:	mov    ah,0x2f
  41624b:	mov    dh,bl
  41624d:	dec    esp
  41624e:	es jl  0x416237
  416251:	jmp    0x4162c7
  416253:	outs   dx,DWORD PTR ds:[esi]
  416254:	(bad)  
  416255:	push   edx
  416256:	pushf  
  416257:	jb     0x416225
  416259:	jmp    0x4161fa
  41625b:	mov    eax,edi
  41625d:	ins    DWORD PTR es:[edi],dx
  41625e:	xchg   edi,eax
  41625f:	jne    0x416246
  416261:	std    
  416262:	sub    eax,0x94a5151a
  416267:	loop   0x4162e4
  416269:	sti    
  41626a:	loope  0x41624c
  41626c:	or     al,0xbc
  41626e:	jle    0x4161ff
  416270:	fld    TBYTE PTR [ebx-0x38]
  416273:	ficom  WORD PTR [eax]
  416275:	scas   eax,DWORD PTR es:[edi]
  416276:	(bad)
  41627b:	and    cl,BYTE PTR [esi-0x402d8db5]
  416281:	inc    eax
  416283:	xor    BYTE PTR [esi],0xc8
  416286:	inc    esi
  416287:	or     ah,cl
  416289:	out    dx,al
  41628a:	pop    esi
  41628b:	pop    ebp
  41628c:	jmp    0x77c0:0x969a26ee
  416293:	push   es
  416294:	push   es
  416295:	mov    edi,0xdcc186b0
  41629a:	gs fs push esp
  41629d:	mov    dh,0x6e
  41629f:	into   
  4162a0:	cmp    DWORD PTR [ecx+0x61],ecx
  4162a3:	push   ds
  4162a4:	(bad)
  4162a7:	into   
  4162a8:	mov    esp,0x8c1e87a9
  4162ad:	cdq    
  4162ae:	repz inc esi
  4162b0:	adc    al,0x4b
  4162b2:	and    DWORD PTR [ecx],0xffffffc5
  4162b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b6:	pop    edi
  4162b7:	adc    ah,0x30
  4162ba:	pop    eax
  4162bb:	scas   al,BYTE PTR es:[edi]
  4162bc:	ficom  WORD PTR [edi]
  4162be:	pop    ebp
  4162bf:	fnsave [esi+0x5c4be7ee]
  4162c5:	(bad)  
  4162c6:	loop   0x416344
  4162c8:	xor    eax,0x10053797
  4162cd:	fistp  QWORD PTR [edx-0x12b8154e]
  4162d3:	nop
  4162d4:	adc    BYTE PTR [esi+0x27],dl
  4162d7:	adc    BYTE PTR [ecx-0x1ac1ba5],al
  4162dd:	push   esp
  4162de:	fidiv  DWORD PTR [ecx-0x5e]
  4162e1:	xor    eax,0x77e86a8f
  4162e6:	and    al,0xf8
  4162e8:	outs   dx,DWORD PTR ds:[esi]
  4162e9:	jo     0x4162e8
  4162eb:	jns    0x4162d4
  4162ed:	retf   0x54da
  4162f0:	ret    
  4162f1:	iret   
  4162f2:	cdq    
  4162f3:	jbe    0x4162d9
  4162f5:	mov    eax,ds:0xb2bdc909
  4162fa:	add    DWORD PTR [ebx-0x2c57b4b8],edi
  416300:	je     0x4162bf
  416302:	iret   
  416303:	jge    0x41633c
  416305:	sti    
  416306:	out    dx,eax
  416307:	jle    0x416350
  416309:	fild   QWORD PTR [ebx+0x7caac1e4]
  41630f:	mov    dh,0xbb
  416311:	mov    cl,0xa0
  416313:	ss and eax,0x6493be7
  416319:	add    DWORD PTR [ebx-0x3ab0c763],ecx
  41631f:	or     eax,0x3fb9f859
  416324:	fld    DWORD PTR [ebp+0x7b7502ce]
  41632a:	sub    BYTE PTR [ecx+0x4e],al
  41632d:	inc    edi
  41632e:	dec    ebp
  41632f:	or     al,0x46
  416331:	fcom   st(1)
  416333:	mov    ch,0xd8
  416335:	lods   eax,DWORD PTR ds:[esi]
  416336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416337:	or     eax,0xe133e6e2
  41633c:	push   ds
  41633d:	cmc    
  41633e:	push   eax
  41633f:	aam    0x3c
  416341:	idiv   DWORD PTR [ecx+edi*1+0x79]
  416345:	and    ecx,edi
  416347:	xor    eax,0x2f495d2e
  41634c:	jnp    0x41636d
  41634e:	(bad)  
  41634f:	sbb    bh,bh
  416351:	fwait
  416352:	or     al,BYTE PTR [eax-0x35907626]
  416358:	cmp    DWORD PTR [edx-0x4d],ebp
  41635b:	xchg   edx,eax
  41635c:	xor    ecx,ebp
  41635e:	sbb    edx,DWORD PTR [ebx]
  416360:	add    DWORD PTR [ecx+0x24],ebp
  416363:	int3   
  416364:	call   0x2aaac1c4
  416369:	(bad)  
  41636a:	mov    edx,0xd38e2648
  41636f:	or     eax,0xcadfd267
  416374:	lea    eax,[edi+0x12]
  416377:	sbb    cl,BYTE PTR [eax+0xcd6f1a9]
  41637d:	aam    0x93
  41637f:	jecxz  0x416392
  416381:	adc    DWORD PTR [esi],ebx
  416383:	add    cl,BYTE PTR [edi+0x51]
  416386:	popf   
  416387:	mov    ebx,0x3ff7fe15
  41638c:	lds    ebx,FWORD PTR [edx+0x7cbee1ba]
  416392:	pop    eax
  416393:	or     al,0xc0
  416395:	cli    
  416396:	mov    ds:0x636134fc,eax
  41639b:	mov    dh,0x4b
  41639d:	dec    ebp
  41639e:	cmp    DWORD PTR [edi-0x21569f36],eax
  4163a4:	ror    DWORD PTR [edx+edi*4-0x696ee1f2],cl
  4163ab:	or     eax,DWORD PTR [ebp+0x7b26c20e]
  4163b1:	fdivr  DWORD PTR ds:0x680607b3
  4163b7:	push   eax
  4163b8:	retf   
  4163b9:	(bad)  
  4163ba:	(bad)  
  4163bb:	call   0x40f93d13
  4163c0:	stos   BYTE PTR es:[edi],al
  4163c1:	mov    eax,ds:0x734fc41d
  4163c6:	aad    0xec
  4163c8:	or     esp,eax
  4163ca:	pop    ss
  4163cb:	ds test al,0x5a
  4163ce:	cmp    DWORD PTR [eax+0x451cc73f],ebx
  4163d4:	inc    eax
  4163d5:	loope  0x416418
  4163d7:	retf   0xfb3f
  4163da:	or     al,0x3b
  4163dc:	pushf  
  4163dd:	dec    BYTE PTR [esp+ebx*4]
  4163e0:	lahf   
  4163e1:	push   ebx
  4163e2:	sub    DWORD PTR [eax],eax
  4163e4:	popa   
  4163e5:	jnp    0x4163ea
  4163e7:	clc    
  4163e8:	ss cwde 
  4163ea:	in     al,dx
  4163eb:	and    ah,BYTE PTR [edi]
  4163ed:	aam    0xd8
  4163ef:	adc    eax,0x473b2583
  4163f4:	fadd   DWORD PTR [esi]
  4163f6:	mov    eax,0x4a6b24d1
  4163fb:	inc    eax
  4163fc:	dec    eax
  4163fd:	inc    ecx
  4163fe:	les    edx,FWORD PTR [edx+edx*2+0x33194377]
  416405:	repnz mov dh,0x3c
  416408:	int3   
  416409:	mov    eax,ds:0x6f2a7edd
  41640e:	into   
  41640f:	repz mov ebx,0xa6f7cb9d
  416415:	pusha  
  416416:	add    al,0x69
  416418:	out    0x5f,al
  41641a:	add    al,BYTE PTR [ebp+0x20]
  41641d:	push   esp
  41641e:	adc    eax,DWORD PTR [ecx-0x34858e5a]
  416424:	(bad)  
  416426:	leave  
  416427:	arpl   WORD PTR [edx-0x37a4ff71],di
  41642d:	enter  0x4be1,0xe6
  416431:	pusha  
  416432:	repz pop esp
  416434:	repz or DWORD PTR [ebp+0x756a2855],ecx
  41643b:	xor    al,BYTE PTR ds:0xeae38d8
  416441:	test   eax,0x5daa1024
  416446:	dec    ebp
  416447:	xor    al,bh
  416449:	inc    edx
  41644a:	jp     0x4164cb
  41644c:	mov    eax,gs:0x9d3eaeb3
  416452:	xchg   edi,eax
  416453:	imul   BYTE PTR [esi-0xdb8f410]
  416459:	stc    
  41645a:	inc    esp
  41645b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41645c:	cmp    BYTE PTR [ebx-0x46],bl
  41645f:	push   ds
  416460:	xchg   ecx,eax
  416461:	fiadd  WORD PTR [edi+0x26b1276a]
  416467:	xchg   ebx,eax
  416468:	adc    eax,DWORD PTR [esi]
  41646a:	push   edi
  41646b:	imul   ebp,DWORD PTR [esi+0x77d08ffd],0x7d
  416472:	fwait
  416473:	retf   0xc02d
  416476:	pop    ss
  416477:	or     BYTE PTR [ecx-0x4ee3c7be],ah
  41647d:	xor    al,0xaf
  41647f:	lods   eax,DWORD PTR ds:[esi]
  416480:	adc    DWORD PTR [esi],0xd69c8d07
  416486:	mov    ebx,0x7331a46a
  41648b:	jns    0x41646d
  41648d:	cli    
  41648e:	fimul  DWORD PTR [eax]
  416490:	inc    esi
  416491:	(bad)  
  416492:	loop   0x416488
  416494:	jle    0x4164b8
  416496:	das    
  416497:	mov    gs,WORD PTR [edi]
  416499:	fcom   QWORD PTR [ebx-0x799c36f1]
  41649f:	ins    DWORD PTR es:[edi],dx
  4164a0:	sbb    eax,0x3e021a2b
  4164a5:	sub    al,0xc1
  4164a7:	fwait
  4164a8:	mov    ds:0xf58a2b9b,eax
  4164ad:	mov    edi,esp
  4164af:	ds cmp dh,bh
  4164b2:	xchg   ebx,eax
  4164b3:	pop    ecx
  4164b4:	je     0x41651d
  4164b6:	dec    esi
  4164b7:	dec    ecx
  4164b8:	imul   eax,DWORD PTR ds:0xc627545b,0x6b085d3a
  4164c2:	xor    DWORD PTR [esi],esi
  4164c4:	jae    0x41645c
  4164c6:	jo     0x4164b4
  4164c8:	leave  
  4164c9:	push   ecx
  4164ca:	shr    BYTE PTR [eax],1
  4164cc:	sub    ebx,ebx
  4164ce:	mov    ebx,DWORD PTR [ebp-0x69]
  4164d1:	lods   al,BYTE PTR ds:[esi]
  4164d2:	jle    0x41646b
  4164d4:	cmc    
  4164d5:	test   ecx,ebp
  4164d7:	and    ecx,esi
  4164d9:	sar    BYTE PTR [eax],1
  4164db:	mov    cl,0x97
  4164dd:	pop    eax
  4164de:	xor    eax,0x9d3066f9
  4164e3:	ja     0x416535
  4164e5:	sbb    eax,0xcf615958
  4164ea:	outs   dx,BYTE PTR ds:[esi]
  4164eb:	loopne 0x416508
  4164ed:	ja     0x41654f
  4164ef:	ins    BYTE PTR es:[edi],dx
  4164f0:	outs   dx,BYTE PTR ds:[esi]
  4164f1:	sub    BYTE PTR [esi],dl
  4164f3:	ins    BYTE PTR es:[edi],dx
  4164f4:	mov    eax,ds:0xbf6d0205
  4164f9:	sbb    al,0x9f
  4164fb:	dec    edx
  4164fc:	aam    0x9a
  4164fe:	bound  edi,QWORD PTR [edx+eiz*2-0x20]
  416502:	popf   
  416503:	mov    esp,esp
  416505:	cs xor esi,esp
  416508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416509:	and    BYTE PTR [edx+0x7ee16b9d],dl
  41650f:	or     ah,BYTE PTR [edx-0x199a4ffc]
  416515:	xor    dl,BYTE PTR [ebx]
  416517:	jecxz  0x41657c
  416519:	pop    ebp
  41651a:	iret   
  41651b:	out    0x31,al
  41651d:	aaa    
  41651e:	imul   BYTE PTR [edx+0x31]
  416521:	mov    ecx,esp
  416523:	ret    
  416524:	sbb    al,0x9d
  416526:	pop    ecx
  416527:	into   
  416528:	stos   DWORD PTR es:[edi],eax
  416529:	xchg   ebx,eax
  41652a:	xchg   edx,eax
  41652b:	es mov dh,0xb3
  41652e:	dec    ecx
  41652f:	aaa    
  416530:	je     0x4164be
  416532:	inc    esi
  416533:	mov    esi,0x1c42c41f
  416538:	inc    edx
  416539:	repz das 
  41653b:	test   eax,0xc725e94
  416540:	test   al,0xab
  416542:	sbb    eax,0xafb23dc8
  416547:	sbb    DWORD PTR [edx],esi
  416549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654a:	xor    BYTE PTR [ecx-0x21],ch
  41654d:	outs   dx,BYTE PTR ds:[esi]
  41654e:	into   
  41654f:	dec    eax
  416550:	ds xchg edi,eax
  416552:	dec    eax
  416553:	sbb    ch,cl
  416555:	aad    0xed
  416557:	test   DWORD PTR [ecx],edx
  416559:	mov    ebx,0xc94b69fa
  41655f:	mov    ds:0x6afd3fa4,eax
  416564:	push   0xffffff81
  416566:	enter  0xe5f4,0xa2
  41656a:	neg    BYTE PTR ds:0x9315c7eb
  416570:	daa    
  416571:	pop    edx
  416572:	gs jmp 0x4165b2
  416575:	test   eax,0x2b67895c
  41657a:	cwde   
  41657b:	mov    bh,0x33
  41657d:	iret   
  41657e:	jp     0x41657c
  416580:	jbe    0x416545
  416582:	ret    
  416583:	pop    ecx
  416584:	leave  
  416585:	cdq    
  416586:	mov    dh,0x6f
  416588:	imul   DWORD PTR [eax]
  41658a:	jle    0x4165d7
  41658c:	data16 mov bl,0x49
  41658f:	dec    esi
  416590:	jbe    0x41655b
  416592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416593:	sar    DWORD PTR [edx+0x25],cl
  416596:	cs fsubrp st(4),st
  416599:	sub    al,0x80
  41659b:	xchg   ebx,eax
  41659c:	xchg   edi,eax
  41659d:	test   BYTE PTR [ecx],ah
  41659f:	fadd   st(0),st
  4165a1:	mov    bh,0xf0
  4165a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a4:	pop    edi
  4165a5:	push   ss
  4165a6:	les    ebp,FWORD PTR [ebp-0x68b1e371]
  4165ac:	or     ecx,DWORD PTR [ebp-0x73]
  4165af:	cli    
  4165b0:	xchg   ebx,esi
  4165b2:	int    0x66
  4165b4:	ror    BYTE PTR [ecx+0x59],0x84
  4165b8:	aam    0x95
  4165ba:	and    edi,esp
  4165bc:	jns    0x4165ea
  4165be:	popa   
  4165bf:	push   ebx
  4165c0:	jmp    0x45762bf7
  4165c5:	shl    DWORD PTR [edx],1
  4165c7:	in     al,dx
  4165c8:	xchg   ebp,eax
  4165c9:	mov    ecx,0x8e392c64
  4165ce:	sar    BYTE PTR [edx-0x3ae4f785],1
  4165d4:	adc    bh,dl
  4165d6:	lahf   
  4165d7:	popa   
  4165d8:	test   DWORD PTR ds:0x692fbb3,ebx
  4165de:	nop
  4165df:	repnz out 0x10,eax
  4165e2:	jnp    0x4165fc
  4165e4:	xchg   esp,eax
  4165e5:	fiadd  DWORD PTR [esi-0x32]
  4165e8:	lds    ebp,FWORD PTR [edx]
  4165ea:	and    edi,DWORD PTR [ebx+0x70d0e2f0]
  4165f0:	pop    ebp
  4165f1:	fcom   DWORD PTR [ecx-0x4c]
  4165f4:	jmp    0x41659c
  4165f6:	sar    DWORD PTR [ebx+0x54f7b2fe],0x4f
  4165fd:	or     eax,ebp
  4165ff:	nop
  416600:	fcom   DWORD PTR [eax-0x5d]
  416603:	je     0x4165a8
  416605:	xchg   BYTE PTR [esi-0x4c],ch
  416608:	push   ecx
  416609:	mov    ds:0xffa37930,eax
  41660e:	sahf   
  41660f:	sbb    esi,esi
  416611:	popf   
  416612:	cdq    
  416613:	mul    BYTE PTR [edx-0x2c]
  416616:	repz hlt 
  416618:	jl     0x41662b
  41661a:	test   eax,0xf2d760d7
  41661f:	mov    edx,0x1c093c55
  416624:	pusha  
  416625:	fisttp DWORD PTR ds:[edx-0x54]
  416629:	pop    ss
  41662a:	stc    
  41662b:	pop    edi
  41662c:	ins    BYTE PTR es:[edi],dx
  41662d:	dec    esp
  41662e:	dec    esi
  41662f:	outs   dx,BYTE PTR ds:[esi]
  416630:	out    dx,eax
  416631:	ret    
  416632:	test   ebp,eax
  416634:	cdq    
  416635:	xor    al,BYTE PTR [esp+edi*1]
  416638:	fmul   DWORD PTR [ecx-0x2b2af413]
  41663e:	in     al,dx
  41663f:	pop    ss
  416640:	sbb    eax,0x5307f42e
  416645:	cmc    
  416646:	push   ebx
  416647:	imul   esp,esi,0xc6a027d8
  41664d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664f:	xor    eax,0x1e327fb5
  416654:	fiadd  DWORD PTR [ebx+0x8cb15d9]
  41665a:	fldcw  WORD PTR [ebx+0x64ad300e]
  416660:	sbb    DWORD PTR [esi],edi
  416662:	std    
  416663:	shl    ch,0xe5
  416666:	sbb    DWORD PTR [ebx-0x44],0x2f
  41666a:	ja     0x416649
  41666c:	sbb    bl,bh
  41666e:	data16 std 
  416670:	rcl    ch,cl
  416672:	test   al,0xd9
  416674:	aad    0xc1
  416676:	int3   
  416677:	mov    ds:0xd587b9fc,al
  41667c:	jno    0x41663b
  41667e:	popf   
  41667f:	cdq    
  416680:	mov    bl,0xf8
  416682:	mov    al,ds:0x3a156605
  416687:	stos   DWORD PTR es:[edi],eax
  416688:	or     DWORD PTR [edx-0x6d86f027],0x88b99063
  416692:	add    DWORD PTR [esi],ebp
  416694:	add    edx,DWORD PTR [esi+0x38]
  416697:	xchg   esi,eax
  416698:	ror    BYTE PTR [ebp+0x2e],cl
  41669b:	stc    
  41669c:	in     al,dx
  41669d:	push   ds
  41669e:	(bad)  
  41669f:	(bad)  
  4166a1:	cli    
  4166a2:	lea    edi,ds:0x17d9a47a
  4166a8:	imul   esi,DWORD PTR [ebx-0x67ecdc0b],0xf88fa191
  4166b2:	and    dh,al
  4166b4:	retf   
  4166b5:	stos   BYTE PTR es:[edi],al
  4166b6:	fwait
  4166b7:	pusha  
  4166b8:	pop    ds
  4166b9:	retf   0x712b
  4166bc:	xor    al,0xd
  4166be:	jbe    0x416641
  4166c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c1:	pop    esp
  4166c2:	cmp    bh,al
  4166c4:	sbb    esi,DWORD PTR [ebx+0x72]
  4166c7:	push   es
  4166c8:	jae    0x416665
  4166ca:	mov    cl,0x63
  4166cc:	popf   
  4166cd:	xor    ecx,DWORD PTR [ecx+0x4b27ae26]
  4166d3:	es adc eax,0xd0d90a26
  4166d9:	scas   eax,DWORD PTR es:[edi]
  4166da:	js     0x41665d
  4166dc:	pop    esi
  4166dd:	sub    ch,BYTE PTR ds:0x1f40bf00
  4166e3:	pop    eax
  4166e5:	scas   eax,DWORD PTR es:[edi]
  4166e6:	jg     0x416732
  4166e8:	jnp    0x4166f3
  4166ea:	or     esi,DWORD PTR [edi-0x59d14d74]
  4166f0:	lods   al,BYTE PTR ds:[esi]
  4166f1:	push   ecx
  4166f2:	pop    ebx
  4166f3:	lods   al,BYTE PTR ds:[esi]
  4166f4:	and    ebp,eax
  4166f6:	jno    0x416719
  4166f8:	add    al,BYTE PTR [eax-0x5386fd53]
  4166fe:	add    BYTE PTR [eax],bl
  416700:	clc    
  416701:	enter  0xd05e,0xa7
  416705:	mov    bh,0xfe
  416707:	test   BYTE PTR es:[esi+0x153a2bc2],dh
  41670e:	iret   
  41670f:	jae    0x416774
  416711:	sub    eax,0xaf5fc0a7
  416716:	mov    DWORD PTR ss:[edx],0x77959d53
  41671d:	pop    esp
  41671e:	cmp    cl,ah
  416720:	test   eax,0xd1341683
  416725:	mov    DWORD PTR [eax+0x76172e63],ebp
  41672b:	sbb    eax,0xbfc6e0b0
  416730:	es push edx
  416732:	in     eax,0x4e
  416734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416735:	bound  edx,QWORD PTR [ebx]
  416737:	jbe    0x416759
  416739:	fidivr WORD PTR [esi-0x42]
  41673c:	cmp    esp,esp
  41673e:	mov    cl,0xdf
  416740:	fldcw  WORD PTR es:[edi+0xc]
  416744:	dec    eax
  416745:	jl     0x41678d
  416747:	jle    0x416709
  416749:	sar    DWORD PTR [eax+0xbba39bd],0xe9
  416750:	shr    DWORD PTR ds:0x1dab0636,0x0
  416757:	mov    ecx,DWORD PTR [ebx-0x58]
  41675a:	sub    DWORD PTR [eax],0xdd11736b
  416760:	push   0x351d074e
  416765:	pop    ds
  416766:	adc    eax,DWORD PTR [edx+0x4812344]
  41676c:	inc    eax
  41676d:	pop    es
  41676e:	sub    eax,0xfd9098dd
  416773:	xor    eax,0xe9bc447a
  416778:	pop    ss
  416779:	cld    
  41677a:	add    BYTE PTR [edx-0x71718636],dl
  416780:	pusha  
  416781:	out    0x5f,al
  416783:	fldenv [eax]
  416785:	pop    eax
  416786:	mov    edx,0xebece7a1
  41678b:	xor    al,0xe5
  41678d:	xchg   DWORD PTR [ecx],ebx
  41678f:	data16 mov ah,0x86
  416792:	push   ds
  416793:	push   ebx
  416794:	cmp    eax,0xb437a0bf
  416799:	std    
  41679a:	ficom  DWORD PTR [eax+0x3e941735]
  4167a0:	push   ss
  4167a1:	cmp    edi,DWORD PTR [esi]
  4167a3:	je     0x416798
  4167a5:	fst    QWORD PTR [ecx-0x9]
  4167a8:	or     DWORD PTR [eax+0x3f1ed3f3],0xfffffff9
  4167af:	rcr    BYTE PTR [ebp-0x6546d20d],0x26
  4167b6:	stos   DWORD PTR es:[edi],eax
  4167b7:	popa   
  4167b8:	push   0xffffff87
  4167ba:	mov    esi,0xb1500aaa
  4167bf:	subps  xmm4,XMMWORD PTR [esi-0x4b]
  4167c3:	mul    DWORD PTR [ecx+0x4f]
  4167c6:	gs cld 
  4167c8:	hlt    
  4167c9:	pop    edx
  4167ca:	add    bl,0xb2
  4167cd:	pop    edx
  4167ce:	cs out dx,al
  4167d0:	xlat   BYTE PTR ds:[ebx]
  4167d1:	ror    DWORD PTR [esi+0xd17b1ac],cl
  4167d7:	xor    DWORD PTR [edi],esi
  4167d9:	and    al,0x56
  4167db:	mov    WORD PTR [ebx+0x12],ss
  4167de:	pop    esp
  4167df:	mov    ecx,0x6d8645db
  4167e4:	mov    esp,0xa5331949
  4167e9:	sar    DWORD PTR [eax],0x21
  4167ec:	ja     0x416775
  4167ee:	mov    ah,0x4c
  4167f0:	mov    edi,0x97c54135
  4167f5:	and    BYTE PTR [ebx],dh
  4167f7:	out    dx,eax
  4167f8:	inc    edi
  4167f9:	jb     0x416802
  4167fb:	xchg   ecx,eax
  4167fc:	dec    ecx
  4167fd:	jl     0x416862
  4167ff:	jae    0x4167db
  416801:	push   ebp
  416802:	xchg   BYTE PTR [ecx-0x7a],bl
  416805:	scas   eax,DWORD PTR es:[edi]
  416806:	enter  0xda37,0x4a
  41680a:	les    ecx,FWORD PTR [ebx]
  41680c:	sub    BYTE PTR ds:[ebx],bh
  41680f:	lods   al,BYTE PTR ds:[esi]
  416810:	push   esi
  416811:	test   eax,0x7a5bf4f0
  416816:	sbb    BYTE PTR [esi+ebp*2-0x649274ee],bl
  41681d:	xor    bl,BYTE PTR [ebp+0x36]
  416820:	repnz shl BYTE PTR [ebp+ebx*8+0x509a2c2b],1
  416828:	add    eax,0x8166d4cb
  41682d:	mov    cl,0xfd
  41682f:	mov    dh,0x8f
  416831:	push   ds
  416832:	sbb    ch,BYTE PTR [edx-0x75]
  416835:	mov    ebx,0xe1d96c98
  41683a:	shl    DWORD PTR [eax],cl
  41683c:	mov    bh,0x1b
  41683e:	and    BYTE PTR [esi+0x65b35f19],dh
  416844:	xchg   esi,eax
  416845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416846:	aam    0xdb
  416848:	ins    BYTE PTR es:[edi],dx
  416849:	and    BYTE PTR [eax-0x16],0x18
  41684d:	sbb    eax,0x7811c93b
  416852:	sbb    esp,DWORD PTR ds:0xab47ba6e
  416858:	xchg   edi,eax
  416859:	(bad)  
  41685a:	(bad)  
  41685b:	in     al,0xc1
  41685d:	cmp    DWORD PTR [ecx-0x4a],esp
  416860:	or     eax,DWORD PTR [edx-0x7e]
  416863:	cmp    al,0xe
  416865:	loope  0x4168a5
  416867:	and    ecx,DWORD PTR [ecx]
  416869:	dec    esp
  41686a:	jae    0x4168a1
  41686c:	jb     0x4167ff
  41686e:	mov    edx,0x4b698aaa
  416873:	mov    eax,ebp
  416875:	push   cs
  416876:	xchg   edx,eax
  416877:	inc    edx
  416878:	sti    
  416879:	cmp    eax,0xa9893169
  41687e:	jns    0x4168a2
  416880:	ret    0xbdf3
  416883:	pop    ebp
  416884:	mov    eax,ds:0xec17fef9
  416889:	xor    al,0x29
  41688b:	push   cs
  41688c:	pop    ebx
  41688d:	pusha  
  41688e:	loope  0x4168e8
  416890:	lods   al,BYTE PTR ds:[esi]
  416891:	inc    eax
  416892:	dec    esi
  416893:	lds    eax,FWORD PTR [ebp+esi*2-0x2e12f27f]
  41689a:	fucomp st(1)
  41689c:	dec    eax
  41689d:	in     al,0x2c
  41689f:	jge    0x4168be
  4168a1:	jmp    0xed289f6
  4168a6:	cmp    al,0x5c
  4168a8:	mov    esi,0x3f68f434
  4168ad:	into   
  4168ae:	popa   
  4168af:	sbb    edi,DWORD PTR [edi+0x25]
  4168b2:	popa   
  4168b3:	test   BYTE PTR [edx],dl
  4168b5:	pop    eax
  4168b6:	xchg   ebp,eax
  4168b7:	imul   edx,DWORD PTR [edx],0x3c
  4168ba:	fcomp  DWORD PTR [edx+0x4bd449ea]
  4168c0:	sbb    bh,al
  4168c2:	(bad)  
  4168c3:	fcom   QWORD PTR [ebp+ebx*8-0x74]
  4168c7:	or     eax,0x9f376d69
  4168cc:	mov    bl,0xcb
  4168ce:	mov    ah,0xd6
  4168d0:	mov    ds:0xc2c09fc,al
  4168d5:	ret    
  4168d6:	dec    edi
  4168d7:	or     edx,DWORD PTR [eax+0x7a6091b2]
  4168dd:	ds push 0x905c3858
  4168e3:	jecxz  0x4168e0
  4168e5:	pop    ecx
  4168e6:	push   esi
  4168e7:	into   
  4168e8:	cmp    ah,BYTE PTR [ebx+esi*8]
  4168eb:	inc    ebp
  4168ec:	sub    eax,0xfb1080fc
  4168f1:	or     al,0x2c
  4168f3:	outs   dx,DWORD PTR ds:[esi]
  4168f4:	pop    esp
  4168f5:	mov    dl,0x58
  4168f7:	or     al,0x14
  4168f9:	mov    ecx,DWORD PTR [esi+ecx*4+0x1417047a]
  416900:	mov    al,0x2e
  416902:	fcmovu st,st(4)
  416904:	iret   
  416905:	lock jle 0x41690e
  416908:	xor    al,BYTE PTR [ebx]
  41690a:	dec    esi
  41690b:	sbb    bl,BYTE PTR [eax]
  41690d:	fidiv  WORD PTR [ebx+0x64]
  416910:	or     eax,0x783a4a51
  416915:	pop    ebp
  416916:	sub    al,0xa9
  416918:	adc    DWORD PTR [ebx],0x29
  41691b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41691c:	leave  
  41691d:	bound  esp,QWORD PTR [ebp+0x4375ceb8]
  416923:	inc    esp
  416924:	add    BYTE PTR [eax+0x308bca3e],0x60
  41692b:	(bad)  
  41692c:	mov    ebp,gs
  41692e:	inc    edx
  41692f:	push   edi
  416930:	or     al,0xf3
  416932:	sub    esi,edx
  416934:	int    0xca
  416936:	lods   al,BYTE PTR ds:[esi]
  416937:	mov    esp,0x795e653f
  41693c:	fwait
  41693d:	js     0x416944
  41693f:	dec    DWORD PTR [ebx]
  416941:	stos   DWORD PTR es:[edi],eax
  416942:	add    eax,0x184c93c6
  416947:	cld    
  416948:	or     BYTE PTR [di-0x20],bh
  41694c:	xor    BYTE PTR [esi+0x36],cl
  41694f:	cmc    
  416950:	push   0x44feaba1
  416955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416956:	dec    edx
  416957:	lds    esi,FWORD PTR [eax+ecx*1]
  41695a:	test   eax,0x3f2001dd
  41695f:	in     eax,dx
  416960:	xor    al,0x4e
  416962:	imul   eax,ecx,0x326c8186
  416968:	in     al,0x37
  41696a:	call   0x4061:0xf2ed884a
  416971:	dec    edx
  416972:	sub    eax,0x9a3f52bb
  416977:	daa    
  416978:	inc    ecx
  416979:	push   ebp
  41697a:	(bad)  
  41697b:	ja     0x41696b
  41697d:	outs   dx,BYTE PTR ds:[esi]
  41697e:	adc    al,0xef
  416980:	cmp    BYTE PTR [esi+0x63],dl
  416983:	(bad)  
  416984:	push   esp
  416985:	out    0x31,eax
  416987:	and    ch,BYTE PTR [esi-0x20]
  41698a:	out    dx,eax
  41698b:	mov    esp,0x915ac750
  416990:	repz inc ebx
  416992:	cmp    cl,BYTE PTR [esi+0x5c6d12c1]
  416998:	mov    dh,0x32
  41699a:	into   
  41699b:	inc    cl
  41699d:	add    eax,0xc15da465
  4169a2:	cmp    eax,0x2b65d476
  4169a7:	xchg   ecx,eax
  4169a8:	imul   ecx,DWORD PTR [ecx],0xebc18a2c
  4169ae:	pop    edx
  4169af:	sbb    DWORD PTR [edi-0x31],esp
  4169b2:	cs mov esp,0x89845216
  4169b8:	test   eax,ebx
  4169ba:	jge    0x416a22
  4169bc:	pop    ebp
  4169bd:	and    ebx,DWORD PTR es:[esi-0x2b7810c4]
  4169c4:	imul   esi,DWORD PTR [edi],0x78
  4169c7:	and    esi,ecx
  4169c9:	or     ebx,DWORD PTR [ecx]
  4169cb:	push   ebx
  4169cc:	hlt    
  4169cd:	xchg   ebx,eax
  4169ce:	cs jmp 0x416966
  4169d1:	bound  ecx,QWORD PTR ds:0x53ed83e2
  4169d7:	imul   edi,DWORD PTR [edi],0x9c7deaad
  4169dd:	jo     0x416a28
  4169df:	sbb    DWORD PTR ds:0x1787211c,0xbfdbc624
  4169e9:	sahf   
  4169ea:	iret   
  4169eb:	icebp  
  4169ec:	std    
  4169ed:	mov    al,BYTE PTR [ebp+0x63ed0e0c]
  4169f3:	push   esi
  4169f4:	mov    ebx,0xc4351a44
  4169f9:	mov    ?,WORD PTR [ebx+eax*8+0x48]
  4169fd:	cmp    ch,BYTE PTR [eax]
  4169ff:	jno    0x4169f1
  416a01:	scas   al,BYTE PTR es:[edi]
  416a02:	xlat   BYTE PTR ds:[ebx]
  416a03:	leave  
  416a04:	sub    ebp,DWORD PTR [eax-0x37fca029]
  416a0a:	enter  0x5617,0xdf
  416a0e:	shl    edx,0x87
  416a11:	mov    bh,BYTE PTR [ecx-0x18]
  416a14:	jmp    0x4536954
  416a19:	iret   
  416a1a:	xor    DWORD PTR [ebp*8+0x1583b96a],esi
  416a21:	mov    esp,0xc8854512
  416a26:	add    eax,0x37f7f332
  416a2b:	test   DWORD PTR [edx],0xb7bde53
  416a31:	retf   0xac3b
  416a34:	sub    al,0xf2
  416a36:	inc    esi
  416a37:	jo     0x4169ce
  416a39:	xchg   esi,eax
  416a3a:	mov    dh,0x7a
  416a3c:	sahf   
  416a3d:	jle    0x416abb
  416a3f:	mov    edx,0x9e7ba1c6
  416a44:	or     al,0x38
  416a46:	dec    esi
  416a47:	jbe    0x4169e3
  416a49:	mov    ch,0x19
  416a4b:	cld    
  416a4c:	(bad)  
  416a4d:	pop    ebp
  416a4e:	psraw  mm2,QWORD PTR fs:0xf770a1ee
  416a56:	xor    bl,BYTE PTR ds:0x1d241968
  416a5c:	call   DWORD PTR [edx]
  416a5e:	mov    ah,0x1
  416a60:	test   DWORD PTR [esi-0x13042e4d],0x3a7808cc
  416a6a:	jmp    0x16737a7f
  416a6f:	xlat   BYTE PTR ds:[ebx]
  416a70:	outs   dx,DWORD PTR ds:[esi]
  416a71:	fdiv   st,st(3)
  416a73:	in     al,0x30
  416a75:	outs   dx,DWORD PTR ds:[esi]
  416a76:	jg     0x416aa8
  416a78:	fwait
  416a79:	xchg   ebp,eax
  416a7a:	push   edx
  416a7b:	jae    0x416a37
  416a7d:	jne    0x416aa5
  416a7f:	sbb    esi,DWORD PTR [edi]
  416a81:	add    dh,BYTE PTR [ebx-0x5d254c33]
  416a87:	inc    edi
  416a88:	jge    0x416ab4
  416a8a:	xlat   BYTE PTR ds:[ebx]
  416a8b:	jl     0x416a6c
  416a8d:	sub    DWORD PTR [edi-0x6cc12bd6],ebx
  416a93:	adc    DWORD PTR [edi+0x56],0xffffffd2
  416a97:	fild   DWORD PTR [edi+ecx*4-0x76]
  416a9b:	cmp    bh,BYTE PTR [di-0x63]
  416a9f:	mov    ch,0xfd
  416aa1:	jmp    0x416a8c
  416aa3:	lods   eax,DWORD PTR ds:[esi]
  416aa4:	mov    BYTE PTR [edx+0x30],ch
  416aa7:	retf   
  416aa8:	stos   BYTE PTR es:[edi],al
  416aa9:	mov    edx,0xd60d2a5a
  416aae:	icebp  
  416aaf:	pop    es
  416ab0:	cmc    
  416ab1:	(bad)  
  416ab2:	rcr    BYTE PTR [edx-0x26],0xd8
  416ab6:	pop    ss
  416ab7:	je     0x416b24
  416ab9:	mov    WORD PTR [edi+0x5ef19b61],es
  416abf:	jo     0x416aae
  416ac1:	outs   dx,DWORD PTR ds:[esi]
  416ac2:	pop    esi
  416ac3:	push   esi
  416ac4:	inc    edi
  416ac5:	inc    DWORD PTR [eax]
  416ac7:	adc    BYTE PTR [eax+0x1e],dl
  416aca:	stos   DWORD PTR es:[edi],eax
  416acb:	xchg   DWORD PTR [ecx+0x52b8b44e],eax
  416ad1:	loop   0x416b1f
  416ad3:	cmc    
  416ad4:	shl    DWORD PTR [ebx+0x4a26c56e],cl
  416ada:	sahf   
  416adb:	pop    ecx
  416adc:	mov    edx,DWORD PTR [ecx]
  416ade:	adc    BYTE PTR [eax],al
  416ae0:	in     eax,dx
  416ae1:	cmc    
  416ae2:	xor    al,0x98
  416ae4:	(bad)  
  416ae5:	ins    BYTE PTR es:[edi],dx
  416ae6:	xchg   DWORD PTR [edx-0x76],ebx
  416ae9:	pop    esp
  416aea:	mov    BYTE PTR [eax-0x4a],0x7c
  416aee:	xor    al,0x1
  416af0:	sub    eax,0x969edece
  416af5:	mov    BYTE PTR [edx-0x53a95217],al
  416afb:	xor    dl,BYTE PTR ds:0x8a262921
  416b01:	jl     0x416b2e
  416b03:	loop   0x416b7a
  416b05:	out    0x1d,al
  416b07:	jp     0x416aa1
  416b09:	pop    ds
  416b0a:	xchg   ebx,eax
  416b0b:	pop    ds
  416b0c:	xchg   dx,ax
  416b0e:	out    dx,al
  416b0f:	sub    eax,0x82ec8512
  416b14:	popf   
  416b15:	lds    edi,FWORD PTR [eax]
  416b17:	xchg   di,ax
  416b19:	das    
  416b1a:	mov    esp,0x12db2467
  416b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b20:	push   0x7f
  416b22:	xor    bh,BYTE PTR [ecx]
  416b24:	jge    0x416af3
  416b26:	sti    
  416b27:	(bad)  
  416b28:	jo     0x416ab3
  416b2a:	jle    0x416acc
  416b2c:	jle    0x416b88
  416b2e:	and    DWORD PTR [eax+0x31],eax
  416b31:	lods   eax,DWORD PTR ds:[esi]
  416b32:	push   ebx
  416b33:	mov    ah,0x42
  416b35:	adc    al,0xa2
  416b37:	fsub   DWORD PTR [edi]
  416b39:	in     eax,dx
  416b3a:	xor    dh,bl
  416b3c:	pop    ss
  416b3d:	out    0xee,al
  416b3f:	cs jne 0x416ade
  416b42:	ds pop ebx
  416b44:	xchg   esp,eax
  416b45:	lea    edi,[ebx]
  416b47:	jns    0x416af0
  416b49:	call   0xdca5b6c4
  416b4e:	popf   
  416b4f:	rcl    DWORD PTR [edx+0x15],0xe
  416b53:	and    edx,DWORD PTR [esi-0x1c]
  416b56:	out    dx,al
  416b57:	js     0x416b5c
  416b59:	fs lahf 
  416b5b:	loopne 0x416ba0
  416b5d:	popa   
  416b5e:	loop   0x416baf
  416b60:	jne    0x416aeb
  416b62:	sbb    esp,DWORD PTR [eax-0x530a625]
  416b68:	je     0x416b89
  416b6a:	inc    edx
  416b6b:	loop   0x416bb2
  416b6d:	mov    esi,0x7bcb1277
  416b72:	push   es
  416b73:	sbb    al,0xd9
  416b75:	sahf   
  416b76:	ficomp DWORD PTR [eax-0x4a]
  416b79:	push   edx
  416b7a:	dec    esi
  416b7b:	loop   0x416b93
  416b7d:	or     eax,0x1f6c4abf
  416b82:	sub    eax,DWORD PTR [eax-0x770ada65]
  416b88:	dec    ebp
  416b89:	(bad)  
  416b8a:	iret   
  416b8b:	mov    cl,0x3c
  416b8d:	mov    al,ds:0x4d2c29ab
  416b92:	retf   
  416b93:	and    edi,DWORD PTR [ebx]
  416b95:	cli    
  416b96:	and    eax,0x4d6d2633
  416b9b:	push   ecx
  416b9c:	out    dx,eax
  416b9d:	not    ch
  416b9f:	inc    esi
  416ba0:	xchg   edi,eax
  416ba1:	retf   
  416ba2:	push   ebp
  416ba3:	out    0xdd,eax
  416ba5:	jns    0x416ba3
  416ba7:	cmp    edx,DWORD PTR [edx-0x5d]
  416baa:	xchg   edx,eax
  416bab:	mov    al,0x64
  416bad:	mov    ecx,cs
  416baf:	jae    0x416b49
  416bb1:	xchg   BYTE PTR [esi],bh
  416bb3:	or     cl,BYTE PTR [eax+0x77469ef9]
  416bb9:	add    eax,0x459f0c6a
  416bbe:	pop    edi
  416bbf:	xchg   ebp,eax
  416bc0:	fwait
  416bc1:	bound  eax,QWORD PTR [edx+0x67]
  416bc4:	test   DWORD PTR [esp+esi*2-0x6082491a],ebp
  416bcb:	mov    ds:0x40fe528,al
  416bd0:	jne    0x416c35
  416bd2:	sub    DWORD PTR [esi+eiz*1],ecx
  416bd5:	push   esi
  416bd6:	js     0x416c41
  416bd8:	data16 cmc 
  416bda:	jg     0x416b83
  416bdc:	jg     0x416b71
  416bde:	and    DWORD PTR ds:0x95a8f89b,edi
  416be4:	add    al,0x20
  416be6:	das    
  416be7:	ss pop ss
  416be9:	adc    DWORD PTR [ecx+0x66],ecx
  416bec:	xchg   ebp,eax
  416bed:	fadd   DWORD PTR [edx]
  416bef:	sbb    eax,0x43052058
  416bf4:	add    ch,bl
  416bf6:	mov    bh,bh
  416bf8:	mov    ebx,0xbd59f9b
  416bfd:	cdq    
  416bfe:	rcr    BYTE PTR [esi],cl
  416c00:	pop    eax
  416c01:	and    DWORD PTR [esi+eax*2],edx
  416c04:	fisub  DWORD PTR [edi]
  416c06:	push   esp
  416c07:	jne    0x416c5c
  416c09:	xchg   DWORD PTR [eax-0x70],ebp
  416c0c:	push   cs
  416c0d:	mov    ebp,0x1856e4dd
  416c12:	adc    al,0xcf
  416c14:	enter  0x42b8,0xdc
  416c18:	dec    esp
  416c19:	int    0xbb
  416c1b:	aas    
  416c1c:	and    bh,BYTE PTR [esi+edx*4+0x74]
  416c20:	jg     0x416c7b
  416c22:	xor    BYTE PTR [ecx],ch
  416c24:	xchg   ebp,eax
  416c25:	and    dh,BYTE PTR [edx+0x39f5305a]
  416c2b:	cmp    DWORD PTR ds:0xdb41a583,ecx
  416c31:	fmul   QWORD PTR [esi]
  416c33:	sbb    al,BYTE PTR [ecx+0x2e]
  416c36:	and    DWORD PTR [edi+0x1f82aed8],ebx
  416c3c:	dec    ebp
  416c3d:	pop    edi
  416c3e:	fstp   QWORD PTR [eax]
  416c40:	fiadd  WORD PTR [ebx-0x70]
  416c43:	lahf   
  416c44:	xlat   BYTE PTR ds:[ebx]
  416c45:	xchg   BYTE PTR [edx+ecx*8-0x29849d84],dh
  416c4c:	stos   DWORD PTR es:[edi],eax
  416c4d:	inc    BYTE PTR [edx-0x61]
  416c50:	sbb    BYTE PTR [esi-0x9fcc2ba],dh
  416c56:	fmul   st,st(2)
  416c58:	sbb    eax,0xd6d6c61f
  416c5d:	out    0x27,al
  416c5f:	jbe    0x416c3c
  416c61:	bnd jb 0x416cbd
  416c64:	(bad)  
  416c65:	cs or  eax,0xb3552a34
  416c6b:	pop    ecx
  416c6c:	bnd jae 0x416ce8
  416c6f:	into   
  416c70:	sub    eax,0xa01f54f1
  416c75:	mov    ecx,0x79da9cb5
  416c7a:	pop    ebx
  416c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7c:	xor    al,BYTE PTR [esi+ecx*1+0x64]
  416c80:	sbb    DWORD PTR [eax-0x1e],edx
  416c83:	xlat   BYTE PTR ds:[ebx]
  416c84:	inc    ebx
  416c85:	sbb    al,0x3f
  416c87:	call   0xaef6:0xab9b37b0
  416c8e:	push   esi
  416c8f:	aam    0x8b
  416c91:	pop    ebp
  416c92:	clc    
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [edx+0x74ca25ad],bh
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0xf3
  416e00:	lahf   
  416e01:	ss (bad) 
  416e03:	or     esi,DWORD PTR [ecx+0x1c0c01ea]
  416e09:	das    
  416e0a:	add    DWORD PTR [edi],esp
  416e0c:	inc    ebx
  416e0d:	dec    edi
  416e0e:	xor    eax,0x1bf60a47
  416e13:	push   esp
  416e14:	xor    DWORD PTR [ebx-0x322781d8],ebx
  416e1a:	and    ebp,esi
  416e1c:	stos   BYTE PTR es:[edi],al
  416e1d:	jae    0x416e07
  416e1f:	shl    BYTE PTR [esi],1
  416e21:	dec    eax
  416e22:	cs adc eax,0x771fc375
  416e28:	leave  
  416e29:	jmp    0x416e14
  416e2b:	lea    edx,[eax+0x11]
  416e2e:	mov    ?,WORD PTR [eax]
  416e30:	mov    eax,0xae3ae98a
  416e35:	mov    al,ds:0x222dcf20
  416e3a:	gs sub eax,0xa5dfb756
  416e40:	xchg   esp,eax
  416e41:	add    al,0x38
  416e43:	add    ecx,eax
  416e45:	scas   al,BYTE PTR es:[edi]
  416e46:	mov    dh,0x0
  416e48:	neg    ecx
  416e4a:	repnz outs dx,BYTE PTR ds:[esi]
  416e4c:	xor    BYTE PTR [edi],0xa8
  416e4f:	cmp    eax,0x5b672e8c
  416e54:	dec    ebp
  416e55:	int    0x18
  416e57:	mov    edx,0x8e17a683
  416e5c:	jae    0x416e14
  416e5e:	xchg   ecx,eax
  416e5f:	sbb    eax,0xe164a381
  416e64:	dec    sp
  416e66:	ds sbb al,0x8d
  416e69:	lock mov cl,0xf2
  416e6c:	aam    0xb2
  416e6e:	lods   al,BYTE PTR ds:[esi]
  416e6f:	cmp    cl,dl
  416e71:	stos   DWORD PTR es:[edi],eax
  416e72:	adc    DWORD PTR [esi],ecx
  416e74:	xor    ch,dh
  416e76:	sar    DWORD PTR [eax+0x60],1
  416e79:	sbb    bh,BYTE PTR [ebx+0x4597f703]
  416e7f:	fimul  WORD PTR [edi+0x4d3a5b8c]
  416e85:	rol    DWORD PTR [ecx+0x42e11004],0x59
  416e8c:	scas   eax,DWORD PTR es:[edi]
  416e8d:	pop    edi
  416e8e:	pop    eax
  416e8f:	mov    eax,ds:0xacbb354e
  416e94:	sub    cl,ah
  416e96:	fs jl  0x416e84
  416e99:	push   ds
  416e9a:	into   
  416e9b:	lock fild QWORD PTR [edx+edi*2-0x1c00e88c]
  416ea3:	icebp  
  416ea4:	sbb    DWORD PTR [eax],edx
  416ea6:	inc    esp
  416ea7:	mov    ebp,0x9ed9fd1b
  416eac:	ins    DWORD PTR es:[edi],dx
  416ead:	inc    eax
  416eae:	sub    esp,DWORD PTR [esi]
  416eb0:	shl    DWORD PTR [esi+0x58],0xa3
  416eb4:	dec    eax
  416eb5:	(bad)  
  416eb6:	repz into 
  416eb8:	push   ds
  416eb9:	loop   0x416e63
  416ebb:	bound  esi,QWORD PTR [ebx-0x57]
  416ebe:	sbb    ch,BYTE PTR [eax+0x2f35754f]
  416ec4:	dec    ebx
  416ec5:	or     esp,DWORD PTR [eax-0x7]
  416ec8:	pop    edi
  416ec9:	jmp    0x708b2707
  416ece:	xchg   edx,eax
  416ecf:	pop    ebx
  416ed0:	and    BYTE PTR ds:0x2d96bef2,bl
  416ed6:	dec    ecx
  416ed7:	push   eax
  416ed8:	sub    bl,dh
  416eda:	cmp    BYTE PTR [ebx+eax*1+0x2f],bl
  416ede:	cwde   
  416edf:	xor    BYTE PTR [edx+0x7f],bl
  416ee2:	mov    cl,BYTE PTR [ecx+0xf]
  416ee5:	adc    eax,0x3732f9a9
  416eea:	xor    al,0xe2
  416eec:	ja     0x416ed6
  416eee:	popa   
  416eef:	cmp    eax,0xb8ad6aba
  416ef4:	or     BYTE PTR [eax-0x1a33c3f],bl
  416efa:	push   cs
  416efb:	add    eax,0x32ff64
  416f00:	aam    0x51
  416f02:	loop   0x416e98
  416f04:	ins    BYTE PTR es:[edi],dx
  416f05:	mov    DWORD PTR [ebp+0x61],ecx
  416f08:	mov    al,ds:0x7ebc15d7
  416f0d:	add    BYTE PTR [edi+edi*1+0x25],ch
  416f11:	sub    al,0xf3
  416f13:	aad    0xce
  416f15:	cli    
  416f16:	inc    edx
  416f17:	jle    0x416f04
  416f19:	jb     0x416f73
  416f1b:	inc    edi
  416f1c:	sub    esi,ebp
  416f1e:	cmc    
  416f1f:	mov    ecx,0x21d0c59c
  416f24:	ret    
  416f25:	loop   0x416f62
  416f27:	test   eax,0xfafad9d8
  416f2c:	sti    
  416f2d:	mov    cl,0xa2
  416f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f30:	ins    BYTE PTR es:[edi],dx
  416f31:	mov    ecx,0x74090788
  416f36:	mov    ds:0x6c35f48f,al
  416f3b:	ret    
  416f3c:	adc    al,0x1f
  416f3e:	scas   al,BYTE PTR es:[edi]
  416f3f:	xor    al,al
  416f41:	jp     0x416f92
  416f43:	aaa    
  416f44:	or     eax,0x2dee0942
  416f49:	jbe    0x416f95
  416f4b:	or     dh,BYTE PTR [esi]
  416f4d:	sub    dh,BYTE PTR [eax]
  416f4f:	or     eax,0xeb3592b
  416f54:	pop    ds
  416f55:	mov    bl,0xb
  416f57:	cld    
  416f58:	adc    ecx,DWORD PTR ds:0x8908855
  416f5e:	sub    eax,DWORD PTR [ebp+0x6e]
  416f61:	sub    DWORD PTR [ebp+0x54db23a1],eax
  416f67:	add    BYTE PTR [esi],0x15
  416f6a:	inc    esp
  416f6b:	fidivr DWORD PTR [edx]
  416f6d:	jmp    0x416f2f
  416f6f:	ss pushf 
  416f71:	xor    DWORD PTR [ecx-0x7a],edi
  416f74:	push   ecx
  416f75:	icebp  
  416f76:	sbb    al,0x29
  416f78:	out    dx,al
  416f79:	add    BYTE PTR [esp+0x6f],bl
  416f7d:	gs dec ebp
  416f7f:	out    dx,eax
  416f80:	xor    esi,DWORD PTR [eax]
  416f82:	xor    DWORD PTR [ebx+eax*2-0x5a],0xffffffbf
  416f87:	xchg   edx,eax
  416f88:	(bad)  
  416f89:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8b:	adc    eax,DWORD PTR [esi+0x59dab79e]
  416f91:	mov    eax,ds:0x39cbcb96
  416f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f97:	xchg   edx,eax
  416f98:	add    al,0xf3
  416f9a:	dec    esi
  416f9b:	fidivr DWORD PTR [eax-0x6b]
  416f9e:	pop    ebp
  416f9f:	outs   dx,DWORD PTR ds:[esi]
  416fa0:	mov    al,ds:0x9abbef78
  416fa5:	mov    ebx,0x100bd9e5
  416faa:	fst    DWORD PTR [edx+0x6e]
  416fad:	push   esp
  416fae:	mov    edx,0xcebd7d93
  416fb3:	out    0x15,eax
  416fb5:	dec    edx
  416fb6:	xchg   ecx,eax
  416fb7:	jne    0x416f8d
  416fb9:	rcr    ch,0x5c
  416fbc:	adc    bl,BYTE PTR [ecx]
  416fbe:	sub    DWORD PTR [ecx+edx*1],0xffffffef
  416fc2:	jmp    DWORD PTR [edx]
  416fc4:	pop    eax
  416fc5:	add    eax,0x44960c8a
  416fca:	sbb    eax,0xbec1c698
  416fcf:	out    dx,eax
  416fd0:	and    ch,BYTE PTR [ebx+0x2c570d30]
  416fd6:	adc    al,0xe6
  416fd8:	dec    edx
  416fd9:	adc    al,0x20
  416fdb:	xchg   edi,eax
  416fdc:	pop    edx
  416fdd:	or     BYTE PTR [ecx-0x73],0x46
  416fe1:	out    0x34,al
  416fe3:	cwde   
  416fe4:	call   0x81a:0x3490c8ce
  416feb:	iret   
  416fec:	inc    esp
  416fed:	imul   dl
  416fef:	mov    BYTE PTR [eax+0x1f],dl
  416ff2:	mov    dl,0xa3
  416ff4:	dec    edi
  416ff5:	xchg   ebx,eax
  416ff6:	push   esp
  416ff7:	adc    DWORD PTR [edi+0x1346dd8a],esp
  416ffd:	xchg   esi,eax
  416ffe:	out    dx,eax
  416fff:	lea    edi,[edx]
  417001:	dec    edx
  417002:	dec    ebp
  417003:	imul   eax,DWORD PTR [eax+0x65bece96],0x4dc6fc71
  41700d:	inc    ebx
  41700e:	cmp    bh,BYTE PTR [ecx]
  417010:	adc    esi,ecx
  417012:	outs   dx,DWORD PTR ds:[esi]
  417013:	loope  0x416fae
  417015:	mov    bl,0x1b
  417017:	out    dx,al
  417018:	jnp    0x416fda
  41701a:	mov    ds,ebx
  41701c:	cld    
  41701d:	test   BYTE PTR [ecx-0x7a1f0026],dh
  417023:	int3   
  417024:	scas   eax,DWORD PTR es:[edi]
  417025:	sar    dl,1
  417027:	pop    esi
  417028:	popa   
  417029:	dec    ebx
  41702a:	jl     0x416fe1
  41702c:	or     al,0xcb
  41702e:	mov    ecx,DWORD PTR [ebp+0x38fd7aca]
  417034:	xchg   esp,eax
  417035:	loopne 0x4170b0
  417037:	sbb    DWORD PTR [edi],0x673a0f4d
  41703d:	adc    bl,BYTE PTR [ecx-0x22]
  417040:	xor    ebp,ebx
  417042:	xchg   DWORD PTR ds:0x2d99d15f,ebp
  417048:	aas    
  417049:	daa    
  41704a:	frstor [ecx]
  41704c:	pop    ebp
  41704d:	xor    al,0xb
  41704f:	ror    ecx,1
  417051:	mov    ds:0x70899f69,eax
  417056:	mov    ebx,0x3fbd290e
  41705c:	and    ah,BYTE PTR [edx+ecx*4-0x1070c8d7]
  417063:	stos   DWORD PTR es:[edi],eax
  417064:	leave  
  417065:	fldcw  WORD PTR cs:[esi+0x7b]
  417069:	stos   BYTE PTR es:[edi],al
  41706a:	(bad)  
  41706b:	mov    ecx,0xb2496ab5
  417070:	mov    ch,0xd7
  417072:	ror    BYTE PTR [edx-0x489c61be],0x21
  417079:	outs   dx,DWORD PTR ds:[esi]
  41707a:	xchg   esi,eax
  41707b:	or     eax,0x25babee2
  417080:	icebp  
  417081:	sub    cl,al
  417083:	mov    esp,0x25dafed5
  417088:	(bad)
  41708b:	mov    gs,WORD PTR [esi]
  41708d:	add    al,BYTE PTR [edi-0x17]
  417090:	pushf  
  417091:	stos   BYTE PTR es:[edi],al
  417092:	adc    ebp,ebx
  417094:	imul   edx,edx,0x4b260301
  41709a:	lea    ecx,[edi-0x64]
  41709d:	dec    eax
  41709e:	and    dl,BYTE PTR ds:0x8855c581
  4170a4:	in     eax,dx
  4170a5:	ror    BYTE PTR [esi-0x6caf59a5],cl
  4170ab:	mov    cl,0x7
  4170ad:	sbb    ecx,DWORD PTR [eax+esi*2+0x6a]
  4170b1:	fdiv   QWORD PTR [eax]
  4170b3:	jle    0x4170c9
  4170b5:	jmp    0x49ac3ac4
  4170ba:	aad    0x66
  4170bc:	aas    
  4170bd:	jp     0x417086
  4170bf:	push   ebp
  4170c0:	ins    DWORD PTR es:[edi],dx
  4170c1:	sub    BYTE PTR [ecx+0x470ab0f3],bh
  4170c7:	mov    bl,0x1b
  4170c9:	xchg   DWORD PTR [edi-0x1c],esi
  4170cc:	jno    0x4170c9
  4170ce:	mov    esp,0x937d0611
  4170d3:	mul    DWORD PTR [ebx-0x13fb2183]
  4170d9:	ror    DWORD PTR [edi-0x1b],cl
  4170dc:	jle    0x41708d
  4170de:	inc    edi
  4170df:	jl     0x4170c7
  4170e1:	mov    dl,0x1c
  4170e3:	clc    
  4170e4:	mov    cl,BYTE PTR [ebx+0x35]
  4170e7:	cmp    eax,0x2e914d55
  4170ec:	inc    esp
  4170ed:	dec    esp
  4170ee:	cmc    
  4170ef:	push   ss
  4170f0:	push   0x635fa91f
  4170f5:	(bad)  [ebp-0x4b]
  4170f8:	and    DWORD PTR [ebx+0x328777b2],0x6f
  4170ff:	(bad)  
  417101:	aam    0x18
  417103:	mov    ecx,0x964638e5
  417108:	push   cs
  417109:	push   esp
  41710a:	xor    al,0xd5
  41710c:	or     edi,DWORD PTR [ecx-0x5d258f4]
  417112:	mov    dh,BYTE PTR [ebx+edi*2]
  417115:	mov    ebx,0x3ed0b268
  41711a:	sub    DWORD PTR [edi+0x3ec1699e],0x1d
  417121:	not    DWORD PTR [ebx]
  417123:	imul   esp,DWORD PTR [ecx-0x39cb7746],0xffffffcb
  41712a:	arpl   WORD PTR [ebx+ebx*8+0x7741076c],cx
  417131:	pop    ds
  417132:	cmp    dl,BYTE PTR [esi+0x532dbf62]
  417138:	mov    BYTE PTR [eax],ah
  41713a:	add    ah,bh
  41713c:	popa   
  41713d:	aas    
  41713e:	sbb    DWORD PTR [esi-0x78],ecx
  417141:	sbb    dh,bl
  417143:	inc    edx
  417144:	call   0x22280f4d
  417149:	xor    bl,BYTE PTR [edi-0x3160fd6e]
  41714f:	cmp    al,0xd3
  417151:	mov    BYTE PTR [esi],ch
  417153:	popf   
  417154:	pop    eax
  417155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417156:	das    
  417157:	lods   eax,DWORD PTR ds:[esi]
  417158:	jge    0x41716d
  41715a:	aad    0x4f
  41715c:	out    dx,al
  41715d:	repnz adc eax,0xfabf50b
  417163:	fisubr WORD PTR [edx-0x77]
  417166:	cwde   
  417167:	push   es
  417168:	loope  0x4171b3
  41716a:	xor    cl,BYTE PTR [edx+0x7b3f8b8b]
  417170:	or     al,0x59
  417172:	add    eax,0xbaba46d8
  417177:	in     al,0x9e
  417179:	add    BYTE PTR [edi+0x33],0x21
  41717d:	inc    esi
  41717e:	inc    esp
  41717f:	aad    0x1f
  417181:	test   DWORD PTR [edi+0x49],ebp
  417184:	add    al,0xc3
  417186:	mov    eax,0x3c9b2772
  41718b:	pop    ds
  41718c:	retf   
  41718d:	adc    eax,0x627e0994
  417192:	lds    eax,FWORD PTR [ebx+eiz*4-0x29]
  417196:	or     eax,0xabe6c545
  41719b:	pop    ecx
  41719c:	jo     0x41720e
  41719e:	sahf   
  41719f:	push   0xa9822886
  4171a4:	and    esp,edi
  4171a6:	xchg   DWORD PTR [eax+0x70],esp
  4171a9:	ins    BYTE PTR es:[edi],dx
  4171aa:	or     BYTE PTR [esi+0x1347fe6f],dh
  4171b0:	dec    esi
  4171b1:	xchg   ebp,eax
  4171b2:	xchg   BYTE PTR [edi+eiz*2],bh
  4171b5:	mov    WORD PTR [edi+0x323797f3],es
  4171bb:	push   0x60
  4171bd:	jns    0x4171de
  4171bf:	jl     0x4171cf
  4171c1:	add    eax,0xd13f96c
  4171c6:	cs jge 0x417228
  4171c9:	(bad)  
  4171ca:	fcom   QWORD PTR [esi-0x59]
  4171cd:	bound  esi,QWORD PTR [ecx]
  4171cf:	cmp    al,0xfe
  4171d1:	adc    al,0xd
  4171d3:	sahf   
  4171d4:	mov    dh,0x2b
  4171d6:	xor    ah,BYTE PTR [eax]
  4171d8:	out    0xa4,eax
  4171da:	push   ecx
  4171db:	push   ebp
  4171dc:	pop    ecx
  4171dd:	xchg   edi,eax
  4171de:	out    dx,al
  4171df:	add    al,0x57
  4171e1:	mov    BYTE PTR [eax],ah
  4171e3:	mov    ch,0x5c
  4171e5:	lahf   
  4171e6:	iret   
  4171e7:	(bad)  ds:0xfb64d787
  4171ed:	or     ch,BYTE PTR [edx+0x6ef5f5e9]
  4171f3:	mov    DWORD PTR [edi+0x40],ecx
  4171f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f7:	das    
  4171f8:	stos   DWORD PTR es:[edi],eax
  4171f9:	lods   eax,DWORD PTR ds:[esi]
  4171fa:	in     al,0x4a
  4171fc:	mov    edx,0xe03902cb
  417201:	or     al,0x67
  417203:	mov    edi,0xb5e4c76d
  417208:	sbb    DWORD PTR [edx],edx
  41720a:	cld    
  41720b:	stc    
  41720c:	in     eax,dx
  41720d:	mov    ebp,edx
  41720f:	jb     0x417263
  417211:	pushf  
  417212:	sbb    BYTE PTR [ecx+eax*1+0x4bf67edb],ch
  417219:	push   ebx
  41721a:	or     al,0x5a
  41721c:	push   esp
  41721d:	mov    eax,0xad782574
  417222:	xchg   esp,eax
  417223:	nop
  417224:	test   eax,0xa3252193
  417229:	in     eax,dx
  41722a:	add    edx,DWORD PTR [edi]
  41722c:	mov    ch,0x53
  41722e:	fidiv  WORD PTR [ebx+eax*8+0x2e234c2b]
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	xchg   ecx,eax
  417237:	iret   
  417238:	pop    eax
  417239:	sahf   
  41723a:	xchg   edx,eax
  41723b:	adc    bl,BYTE PTR [esi]
  41723d:	or     dl,dh
  41723f:	stos   DWORD PTR es:[edi],eax
  417240:	sar    DWORD PTR [ebp-0x4ea9bcd6],0x27
  417247:	fist   WORD PTR [ecx]
  417249:	pop    ecx
  41724a:	add    ah,BYTE PTR ds:0x873e862c
  417250:	daa    
  417251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417252:	inc    edi
  417253:	inc    eax
  417254:	es pop es
  417256:	ja     0x41721a
  417258:	or     DWORD PTR [ecx],ebp
  41725a:	jbe    0x417248
  41725c:	inc    edx
  41725d:	xor    DWORD PTR [esi-0x30],esi
  417260:	stos   DWORD PTR es:[edi],eax
  417261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417262:	js     0x41723d
  417264:	popa   
  417265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417266:	or     bh,al
  417268:	cmp    al,0x3a
  41726a:	fistp  DWORD PTR [esi+ebp*1-0x27]
  41726e:	test   BYTE PTR [edx],ah
  417270:	dec    esp
  417271:	ins    DWORD PTR es:[edi],dx
  417272:	push   ebx
  417273:	cmp    bh,BYTE PTR [edi+ebp*2-0x3c]
  417277:	xor    DWORD PTR [edi+0x583b4564],ebx
  41727d:	test   DWORD PTR [ebx],ebx
  41727f:	and    BYTE PTR [ebx-0x5101868f],dl
  417285:	inc    eax
  417286:	fiadd  DWORD PTR [ecx]
  417288:	push   ecx
  417289:	push   ecx
  41728a:	(bad)  
  41728c:	out    dx,al
  41728d:	xor    dh,BYTE PTR [ebx]
  41728f:	mov    cl,0x72
  417291:	cmp    edx,DWORD PTR [ecx+ecx*4]
  417294:	mov    WORD PTR [esi-0xf5db908],cs
  41729a:	mov    esp,0x9faf9d5f
  41729f:	cmp    al,0x16
  4172a1:	mov    edx,0x923d840a
  4172a6:	sub    bl,0x7c
  4172a9:	or     cl,BYTE PTR [esi]
  4172ab:	mov    ebp,DWORD PTR ds:0xfd7d47a
  4172b1:	fs inc ebp
  4172b3:	jg     0x417283
  4172b5:	and    DWORD PTR [ebx],0xffffffd3
  4172b8:	and    ebx,DWORD PTR [ecx]
  4172ba:	or     BYTE PTR [edi],ch
  4172bc:	scas   al,BYTE PTR es:[edi]
  4172bd:	shl    DWORD PTR [ecx+0x56],1
  4172c0:	shl    DWORD PTR [edi+eiz*1],0x7c
  4172c4:	sahf   
  4172c5:	push   eax
  4172c6:	lds    eax,FWORD PTR [edx+0x6e]
  4172c9:	fild   DWORD PTR [ecx+0x44]
  4172cc:	sbb    esp,DWORD PTR [edx]
  4172ce:	lea    ecx,ds:0xaf9a2511
  4172d4:	mov    WORD PTR [ebx+eax*2],gs
  4172d7:	hlt    
  4172d8:	mov    esp,0x5039e483
  4172dd:	aaa    
  4172de:	inc    eax
  4172df:	enter  0x60d3,0x96
  4172e3:	outs   dx,BYTE PTR ds:[esi]
  4172e4:	mov    dl,0xf6
  4172e6:	outs   dx,DWORD PTR ds:[esi]
  4172e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e8:	mov    ebp,0xd4f8ad27
  4172ed:	add    ecx,0xba62ab05
  4172f3:	shl    DWORD PTR [ecx+0x42119910],cl
  4172f9:	dec    esi
  4172fa:	icebp  
  4172fb:	shl    BYTE PTR [esi-0x17d38bb5],1
  417301:	in     eax,0x53
  417303:	in     al,dx
  417304:	cwde   
  417305:	out    dx,al
  417306:	out    0xe8,eax
  417308:	repz mov ecx,0x45b41e9c
  41730e:	mov    ah,0x56
  417310:	pusha  
  417311:	adc    eax,0x9337ac2b
  417316:	sbb    esi,DWORD PTR [esi+0x4c2d07ad]
  41731c:	fadd   st,st(4)
  41731e:	xchg   ebx,eax
  41731f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417320:	shl    BYTE PTR [eax],0x37
  417323:	push   ss
  417324:	out    0xcb,al
  417326:	jmp    0x417378
  417328:	mul    DWORD PTR [edi+edi*8]
  41732b:	sub    al,0x75
  41732d:	xchg   esi,eax
  41732e:	add    DWORD PTR [edi-0x6ecfbb6a],eax
  417334:	add    eax,0x15521b2b
  417339:	xchg   esp,eax
  41733a:	and    BYTE PTR [edx-0x1f],0x3c
  41733e:	jp     0x41738e
  417340:	push   cs
  417341:	popa   
  417342:	clc    
  417343:	xor    BYTE PTR [ebp+edx*8+0x74],cl
  417347:	and    al,BYTE PTR [eax+0x43]
  41734a:	dec    edi
  41734b:	jae    0x41731e
  41734d:	jnp    0x4172f7
  41734f:	xchg   edx,eax
  417350:	or     DWORD PTR [esi],edi
  417352:	repz inc edi
  417354:	pop    ecx
  417355:	add    eax,0x13a2c364
  41735a:	adc    DWORD PTR [esi],0x13ec8423
  417360:	sbb    eax,0xbe1bbb44
  417365:	out    dx,al
  417366:	push   0xe4348f01
  41736b:	and    eax,0x3c4924e
  417370:	jb     0x417345
  417372:	mov    cl,0x59
  417374:	test   eax,0x3f017a83
  417379:	sub    al,0x9c
  41737b:	xchg   ebp,eax
  41737c:	in     eax,0xa6
  41737e:	inc    ebp
  41737f:	mov    fs:0x669504db,eax
  417385:	or     ebx,DWORD PTR [edi]
  417387:	xchg   BYTE PTR [edi+0x548bc978],cl
  41738d:	fwait
  41738e:	jae    0x41736f
  417390:	mov    BYTE PTR [ebx-0x1a],0xa7
  417394:	mov    ch,0xdf
  417396:	add    al,0x71
  417398:	loop   0x417393
  41739a:	mov    al,ds:0x1b1a68ed
  41739f:	xor    BYTE PTR [ebx-0x55],ch
  4173a2:	test   al,0x5c
  4173a4:	add    al,0xcb
  4173a6:	mov    ebp,0xf4b07cbe
  4173ab:	rcr    DWORD PTR [edx],cl
  4173ad:	mov    ecx,0xcfba15ea
  4173b2:	sub    edx,DWORD PTR [esi+0x621e9525]
  4173b8:	stos   DWORD PTR es:[edi],eax
  4173b9:	xchg   esi,eax
  4173ba:	jmp    0x3498:0x7a7cbc45
  4173c1:	mov    cl,0x4d
  4173c3:	seta   BYTE PTR [esi+ecx*1]
  4173c7:	arpl   WORD PTR [ebx],cx
  4173c9:	inc    ebx
  4173ca:	mov    esp,0x8ff86a7d
  4173cf:	vshufpd ymm5,ymm2,YMMWORD PTR [ebp+0x63],0x1f
  4173d5:	sbb    al,0x4
  4173d7:	addr16 mov ch,0x3c
  4173da:	imul   ebx,DWORD PTR [eax],0xffffff8b
  4173dd:	xchg   ebp,eax
  4173de:	loop   0x417363
  4173e0:	push   esi
  4173e1:	stos   BYTE PTR es:[edi],al
  4173e2:	jne    0x4173ae
  4173e4:	pop    ecx
  4173e5:	or     DWORD PTR [edx-0x1a],edx
  4173e8:	fnstsw WORD PTR [eax+0x6add8cf5]
  4173ee:	fist   WORD PTR [esp+ebx*2]
  4173f1:	fist   WORD PTR [ecx]
  4173f3:	cdq    
  4173f4:	inc    esi
  4173f5:	cmp    ebp,0x78
  4173f8:	std    
  4173f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173fa:	rcl    DWORD PTR [esi+0x1388d90e],cl
  417400:	add    DWORD PTR [esi+0x69],0xffffff8a
  417404:	jp     0x417455
  417406:	fldcw  WORD PTR [edi-0x5]
  417409:	ins    BYTE PTR es:[edi],dx
  41740a:	and    bl,BYTE PTR [edx+edi*4-0x56]
  41740e:	hlt    
  41740f:	sub    eax,0x756b9e58
  417414:	xchg   edi,eax
  417415:	fist   DWORD PTR [ebx-0x13]
  417418:	mov    edi,0xee18f6a1
  41741d:	or     bh,BYTE PTR [ebx-0x7644dde2]
  417423:	cmp    ch,BYTE PTR [ebx]
  417425:	retf   
  417426:	sbb    bh,ah
  417428:	jg     0x4173ce
  41742a:	xchg   esp,eax
  41742b:	xchg   BYTE PTR [edx+0x6dc8516d],ch
  417431:	mov    edi,0x9f47650b
  417436:	pusha  
  417437:	xor    dh,BYTE PTR [ecx+0x7]
  41743a:	test   BYTE PTR [edx-0x6],dh
  41743d:	push   ebx
  41743e:	xchg   BYTE PTR [esp+ecx*1],dl
  417441:	cmp    esi,DWORD PTR [ebx]
  417443:	mov    eax,0xe6b901d
  417448:	xchg   BYTE PTR [ecx+0x75],ch
  41744b:	daa    
  41744c:	push   edx
  41744d:	icebp  
  41744e:	mov    edx,0x87c6ba26
  417453:	xor    al,0xc
  417455:	in     al,0x7c
  417457:	test   al,0xbe
  417459:	cwde   
  41745a:	mov    al,ds:0x4af08243
  41745f:	add    al,0x6d
  417461:	or     ebp,edx
  417463:	and    DWORD PTR [edx],edi
  417465:	lods   eax,DWORD PTR ds:[esi]
  417466:	sub    al,BYTE PTR ds:0x5d550b95
  41746c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746d:	dec    BYTE PTR [ebp+ebx*2-0x63]
  417471:	inc    edx
  417472:	dec    esi
  417473:	lahf   
  417474:	inc    esp
  417475:	fsubr  QWORD PTR [edi+ebx*4]
  417478:	push   0x4d
  41747a:	ins    BYTE PTR es:[edi],dx
  41747b:	int3   
  41747c:	out    0xff,eax
  41747e:	xchg   ebp,eax
  41747f:	sbb    DWORD PTR [eax+0x1919aea3],eax
  417485:	arpl   WORD PTR [ebp-0x3d],bp
  417488:	bound  ebp,QWORD PTR [edi-0x2c]
  41748b:	mov    ebx,0x63ff3a23
  417490:	cli    
  417491:	(bad)  
  417492:	loope  0x41750d
  417494:	stos   BYTE PTR es:[edi],al
  417495:	or     ebx,ebp
  417497:	in     eax,dx
  417498:	lock adc al,0xfa
  41749b:	xchg   ebp,eax
  41749c:	pop    edi
  41749d:	pop    esp
  41749e:	jno    0x4174c5
  4174a0:	repnz xchg edx,eax
  4174a2:	popa   
  4174a3:	xor    ebx,DWORD PTR [edx]
  4174a5:	call   0x524c:0xaed9f56d
  4174ac:	loopne 0x417432
  4174ae:	shl    BYTE PTR [eax+0x4c],0xb2
  4174b2:	out    dx,al
  4174b3:	inc    esi
  4174b4:	jae    0x4174a3
  4174b6:	outs   dx,DWORD PTR ds:[esi]
  4174b7:	loope  0x41748c
  4174b9:	cli    
  4174ba:	mov    ds:0xcedd72c0,eax
  4174bf:	dec    edi
  4174c0:	mov    eax,0x528aa1a2
  4174c5:	lds    ebx,FWORD PTR [ebx+0x73]
  4174c8:	daa    
  4174c9:	and    BYTE PTR [edi+esi*2+0x24afbb31],ch
  4174d0:	fild   DWORD PTR [bx-0x751a]
  4174d5:	adc    eax,0x6f6b3b2c
  4174da:	cmc    
  4174db:	hlt    
  4174dc:	mov    edx,0x4972597f
  4174e1:	and    eax,0x1954579c
  4174e6:	je     0x417484
  4174e8:	in     al,0xfe
  4174ea:	call   0x1e3fde3d
  4174ef:	sti    
  4174f0:	adc    ecx,DWORD PTR [edi+0x7e]
  4174f3:	cmp    BYTE PTR [edi-0x3d],bh
  4174f6:	lods   al,BYTE PTR ds:[esi]
  4174f7:	jle    0x41755b
  4174f9:	pop    esi
  4174fa:	leave  
  4174fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174fc:	xor    eax,0x425a0cd0
  417501:	test   eax,0x39d2ec8
  417506:	outs   dx,BYTE PTR ds:[esi]
  417507:	xchg   ebp,eax
  417508:	retf   
  417509:	sub    al,0xfe
  41750b:	or     eax,0xe9bd3084
  417510:	jne    0x417502
  417512:	mov    ds:0xda9bb80a,eax
  417517:	or     eax,0xc4e045f7
  41751c:	and    esi,DWORD PTR ds:0xdb477256
  417522:	stos   BYTE PTR es:[edi],al
  417523:	or     cl,BYTE PTR [esi+0x21]
  417526:	adc    eax,DWORD PTR [edi+0x5f]
  417529:	int    0x7
  41752b:	or     al,0x22
  41752d:	adc    cl,BYTE PTR [edi+0x40]
  417530:	dec    edi
  417531:	mov    gs,edi
  417533:	mov    bl,BYTE PTR [ebx]
  417535:	popa   
  417536:	jo     0x417541
  417538:	int    0xf8
  41753a:	xchg   BYTE PTR [esi],al
  41753c:	xor    dl,cl
  41753e:	data16 lods al,BYTE PTR ds:[esi]
  417540:	call   DWORD PTR [esi]
  417542:	add    esi,edx
  417544:	push   edx
  417545:	cmp    eax,edi
  417547:	std    
  417548:	push   ebx
  417549:	pop    eax
  41754a:	popa   
  41754b:	cmova  ebx,ecx
  41754e:	mov    bl,0xcd
  417550:	imul   ch
  417552:	add    al,0x8d
  417554:	(bad)  
  417555:	mov    esi,0x7f720eed
  41755a:	and    BYTE PTR [ecx],al
  41755c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755e:	retf   0x2b4
  417561:	iret   
  417562:	test   edi,eax
  417564:	sub    al,0x72
  417566:	dec    esp
  417567:	test   al,0x99
  417569:	std    
  41756a:	cmp    DWORD PTR [esi],0xffffffe5
  41756d:	mov    esp,0xadb6368f
  417572:	xchg   edi,eax
  417573:	out    0x9c,eax
  417575:	stc    
  417576:	add    eax,0xbef6e162
  41757b:	mov    eax,0xe3bc063a
  417580:	shl    BYTE PTR [ebx+0x7b33cea1],0x6
  417587:	lea    ecx,[ecx]
  417589:	push   cs
  41758a:	push   0x28
  41758c:	fld    TBYTE PTR [ebp-0x2e2c6976]
  417592:	retf   0x444c
  417595:	ret    0x5d1d
  417598:	xchg   edi,eax
  417599:	loope  0x4175aa
  41759b:	fdivr  QWORD PTR [esi+0x2b]
  41759e:	xor    al,0x58
  4175a0:	lods   al,BYTE PTR ds:[esi]
  4175a1:	repz ret 0x1e4c
  4175a5:	into   
  4175a6:	xchg   edx,eax
  4175a7:	ja     0x4175e7
  4175a9:	(bad)  
  4175aa:	out    0x86,al
  4175ac:	mov    ah,0x91
  4175ae:	mov    ch,0x37
  4175b0:	inc    esi
  4175b1:	fdivr  QWORD PTR [esi]
  4175b3:	cs dec ecx
  4175b5:	pop    ds
  4175b6:	and    BYTE PTR [eax+eax*4+0x4db4aff0],ch
  4175bd:	(bad)  
  4175be:	push   0x7d
  4175c0:	push   0xffffffbe
  4175c2:	imul   edi,DWORD PTR ds:0x633871d8,0x52
  4175c9:	cmp    BYTE PTR [ecx-0x10d6121],ah
  4175cf:	scas   eax,DWORD PTR es:[edi]
  4175d0:	sbb    DWORD PTR [ebx+0x11],edx
  4175d3:	pusha  
  4175d4:	test   DWORD PTR [eax+edx*2+0x3a],0x3e621936
  4175dc:	jns    0x417592
  4175de:	outs   dx,BYTE PTR ds:[esi]
  4175df:	pop    esi
  4175e0:	sub    eax,0x8df03f39
  4175e5:	and    DWORD PTR [ecx+0x44],ebp
  4175e8:	xchg   edi,eax
  4175e9:	add    BYTE PTR [ecx],0xa4
  4175ec:	repnz retf 0x1f0b
  4175f0:	jae    0x4175e6
  4175f2:	int    0x1b
  4175f4:	in     al,0xf5
  4175f6:	loopne 0x417620
  4175f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175f9:	cmp    al,BYTE PTR [esi-0x41]
  4175fc:	das    
  4175fd:	mov    al,0x6c
  4175ff:	add    DWORD PTR [ecx-0x4a879594],ebx
  417605:	and    edx,ebp
  417607:	mov    cl,0x1c
  417609:	retf   0xfffd
  41760c:	out    0xb0,al
  41760e:	fwait
  41760f:	clc    
  417610:	ss ja  0x4175d7
  417613:	popa   
  417614:	sub    DWORD PTR [esp+edi*8-0x5c],edx
  417618:	adc    al,0xe2
  41761a:	aas    
  41761b:	or     DWORD PTR [ebp-0x34],edx
  41761e:	mov    edi,0xd8744ead
  417623:	jl     0x4175e0
  417625:	popf   
  417626:	out    0x6b,eax
  417628:	fldenv [ebx]
  41762a:	push   esi
  41762b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41762c:	push   cs
  41762d:	mov    esi,0xc963c74
  417632:	jnp    0x4175e8
  417634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417635:	pushf  
  417636:	add    ah,BYTE PTR [ebp+0x78]
  417639:	pop    edi
  41763a:	out    dx,eax
  41763b:	inc    ecx
  41763c:	add    eax,0xc29f42c0
  417641:	pop    es
  417642:	inc    edi
  417643:	into   
  417644:	sti    
  417645:	sub    al,0x30
  417647:	cdq    
  417648:	push   ebp
  417649:	or     eax,DWORD PTR [esi+0x2c7483f5]
  41764f:	and    bh,BYTE PTR [eax+0x79]
  417652:	je     0x417668
  417654:	sbb    eax,0x13e5840
  417659:	test   bl,bl
  41765b:	jo     0x417624
  41765d:	dec    ebx
  41765e:	(bad)  
  41765f:	xchg   ecx,eax
  417660:	shr    bh,cl
  417662:	sbb    DWORD PTR ds:0xac390704,0xffffff87
  417669:	cld    
  41766a:	test   ebx,esp
  41766c:	leave  
  41766d:	mov    al,ds:0xeec5a585
  417672:	popf   
  417673:	push   ds
  417674:	pop    ebx
  417675:	xchg   edx,eax
  417676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417677:	retf   
  417678:	mov    ebp,0xd60c76e5
  41767d:	adc    DWORD PTR [esp+eiz*2],edi
  417680:	pushf  
  417681:	stos   BYTE PTR es:[edi],al
  417682:	mov    ds:0xb3475667,al
  417687:	sti    
  417688:	je     0x417668
  41768a:	inc    ebp
  41768b:	bound  edx,QWORD PTR [edi]
  41768d:	xchg   esi,eax
  41768e:	jb     0x417664
  417690:	cs stc 
  417692:	inc    ebx
  417693:	retf   0x2ed
  417696:	rcl    BYTE PTR gs:[ebx+ebp*8+0x20],cl
  41769b:	cmp    eax,0xd14d409a
  4176a0:	and    ah,0xe
  4176a3:	mov    esi,0x4fd7cec6
  4176a8:	repz and al,BYTE PTR [edi]
  4176ab:	cmp    al,0x7a
  4176ad:	pop    es
  4176ae:	sar    BYTE PTR [esi+edx*8+0x20],0xda
  4176b3:	aam    0x78
  4176b5:	jecxz  0x417704
  4176b7:	arpl   WORD PTR [esi+0x209997ed],di
  4176bd:	repnz mov ecx,0x659fcb82
  4176c3:	pop    edx
  4176c4:	or     ch,dl
  4176c6:	push   edi
  4176c7:	(bad)  
  4176c8:	test   eax,0x7babe745
  4176cd:	fstp   st(5)
  4176cf:	(bad)  
  4176d0:	push   0x60
  4176d2:	ficom  WORD PTR ds:0x8f459aa8
  4176d8:	xchg   ebx,eax
  4176d9:	out    dx,al
  4176da:	fmul   st(7),st
  4176dc:	mov    ebx,0x81d46947
  4176e1:	push   ebp
  4176e2:	add    ecx,DWORD PTR [edx+esi*1]
  4176e5:	pop    esi
  4176e6:	cmp    ch,ch
  4176e8:	ins    DWORD PTR es:[edi],dx
  4176e9:	loope  0x417695
  4176eb:	add    esi,DWORD PTR [edx+ebx*2-0xa]
  4176ef:	sbb    eax,0xf72c41ee
  4176f4:	addr16 jle 0x417724
  4176f7:	pop    ecx
  4176f8:	jmp    0x417732
  4176fa:	xor    BYTE PTR [eax],al
  4176fc:	outs   dx,DWORD PTR ds:[esi]
  4176fd:	imul   esp,DWORD PTR [ebp+0x43a925fe],0xffffffcd
  417704:	adc    BYTE PTR [ebx-0x6cb1b61f],al
  41770a:	rol    BYTE PTR [esi],1
  41770c:	lds    sp,DWORD PTR [ebp+0x6070297b]
  417713:	mov    bh,0x48
  417715:	stc    
  417716:	loope  0x4176de
  417718:	xor    eax,0x33fd7893
  41771d:	sub    dl,BYTE PTR [ebx]
  41771f:	mov    al,0x23
  417721:	jne    0x417799
  417723:	outs   dx,DWORD PTR ds:[esi]
  417724:	mov    edi,0xfc880d6e
  417729:	jecxz  0x4176ea
  41772b:	outs   dx,BYTE PTR es:[esi]
  41772d:	imul   esp,DWORD PTR [ecx-0x7c3b860f],0x6b
  417734:	ret    
  417735:	jb     0x417726
  417737:	dec    esp
  417738:	mov    cl,0xe1
  41773a:	jno    0x417714
  41773c:	or     ebp,DWORD PTR [ebx+0x357270d9]
  417742:	scas   al,BYTE PTR es:[edi]
  417743:	shl    DWORD PTR [ecx],0x9c
  417746:	test   DWORD PTR [edi+0x6d7c1dee],esi
  41774c:	inc    ecx
  41774d:	rcl    dl,cl
  41774f:	jecxz  0x41770b
  417751:	pop    ecx
  417752:	cld    
  417753:	test   BYTE PTR [esi+0x29ef8993],ah
  417759:	mov    cl,0x63
  41775b:	dec    edi
  41775c:	jno    0x4177aa
  41775e:	nop
  41775f:	retf   0x829f
  417762:	fstp   TBYTE PTR [ebx]
  417764:	adc    al,0xbe
  417766:	push   edi
  417767:	(bad)  
  417768:	mov    bh,0x89
  41776a:	sbb    dl,BYTE PTR [ebx]
  41776c:	int3   
  41776d:	pop    esp
  41776e:	stos   BYTE PTR es:[edi],al
  41776f:	and    edi,esp
  417771:	fist   DWORD PTR [edx-0x5f]
  417774:	loope  0x417718
  417776:	(bad)  
  417777:	lock out dx,eax
  417779:	adc    bh,bh
  41777b:	dec    edi
  41777c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41777d:	fcom   DWORD PTR [ebx+edi*8]
  417780:	xlat   BYTE PTR ds:[ebx]
  417781:	cwde   
  417782:	inc    ebx
  417783:	ficomp WORD PTR [ecx-0x37]
  417786:	jecxz  0x4177e3
  417788:	frstor [eax]
  41778b:	clc    
  41778c:	mov    eax,0x299c640d
  417791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417792:	sti    
  417793:	jp     0x41772d
  417795:	fmul   st(3),st
  417797:	je     0x417763
  417799:	cdq    
  41779a:	popf   
  41779b:	push   ss
  41779c:	add    ebp,DWORD PTR [edx+0x71]
  41779f:	sbb    BYTE PTR [ecx],bh
  4177a1:	int    0x40
  4177a3:	fst    DWORD PTR ds:0x1f8a7378
  4177a9:	and    eax,0x5e937fe0
  4177ae:	jae    0x4177a5
  4177b0:	shr    edi,0x4c
  4177b3:	pop    dx
  4177b5:	ud1    ecx,ebx
  4177b8:	daa    
  4177b9:	(bad)
  4177be:	(bad)  
  4177bf:	enter  0xec60,0x8f
  4177c3:	xchg   ecx,eax
  4177c4:	sub    DWORD PTR [ebp-0x6d],edx
  4177c7:	call   0xa4f61bf8
  4177cc:	inc    edx
  4177cd:	xlat   BYTE PTR ds:[ebx]
  4177ce:	jns    0x417806
  4177d0:	hlt    
  4177d1:	cmp    al,0x4f
  4177d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d4:	xor    ecx,DWORD PTR [eax+0x2d]
  4177d7:	mov    ebx,DWORD PTR [eax+0x8]
  4177da:	mov    ds:0x98ea6995,eax
  4177df:	push   ebp
  4177e0:	dec    ecx
  4177e1:	sti    
  4177e2:	mov    bh,0xbc
  4177e4:	cdq    
  4177e5:	in     eax,dx
  4177e6:	xor    dh,al
  4177e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e9:	loop   0x417857
  4177eb:	pushf  
  4177ec:	dec    eax
  4177ed:	pop    edi
  4177ee:	cmp    eax,0x7585eaa0
  4177f3:	mov    ch,0x63
  4177f5:	imul   esi,DWORD PTR [edi-0x5e],0x5e08baf6
  4177fc:	dec    ebx
  4177fd:	out    dx,al
  4177fe:	mov    es,esp
  417800:	jge    0x4177b6
  417802:	jmp    0x4177da
  417804:	mov    cl,0xe2
  417806:	bound  edx,QWORD PTR ss:[eax+ebx*8]
  41780a:	retf   
  41780b:	mov    al,0xa
  41780d:	call   0x2f39:0x7beb4581
  417814:	add    dl,ah
  417816:	push   ebx
  417817:	in     eax,0x2e
  417819:	mov    ah,0x2a
  41781b:	sub    DWORD PTR [ecx],ebp
  41781d:	push   ss
  41781e:	retf   0xa226
  417821:	(bad)  
  417822:	fdiv   QWORD PTR [edi-0x33]
  417825:	jbe    0x4177c7
  417827:	and    bl,BYTE PTR [ebp+ecx*2+0x6f]
  41782b:	cmp    al,0xe7
  41782d:	lods   eax,DWORD PTR ds:[esi]
  41782e:	jb     0x417879
  417830:	mov    al,ds:0xe384242a
  417835:	jle    0x41780d
  417837:	nop
  417838:	sbb    al,0x3
  41783a:	cdq    
  41783b:	clc    
  41783c:	scas   eax,DWORD PTR es:[edi]
  41783d:	in     al,0xb7
  41783f:	xchg   esi,eax
  417840:	push   edx
  417841:	(bad)  
  417843:	cmp    DWORD PTR [ebp+0x2a],esi
  417846:	loopne 0x4177d8
  417848:	push   cs
  417849:	fstp   QWORD PTR [eax]
  41784b:	out    0x8d,al
  41784d:	out    dx,ax
  41784f:	cmp    bh,BYTE PTR [edx-0x6cf5e311]
  417855:	or     DWORD PTR [edi],0x73
  417858:	fnstsw WORD PTR [edx]
  41785a:	push   edi
  41785b:	cmp    eax,0x313f3a8
  417860:	xchg   al,bh
  417862:	stc    
  417863:	stos   DWORD PTR es:[edi],eax
  417864:	push   ds
  417865:	xchg   DWORD PTR [ebp-0x1f],edx
  417868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417869:	inc    edx
  41786a:	stos   DWORD PTR es:[edi],eax
  41786b:	aam    0xf4
  41786d:	ins    DWORD PTR es:[edi],dx
  41786e:	push   cs
  41786f:	data16 (bad) [edx+0x23]
  417873:	in     eax,0xdf
  417875:	add    ch,BYTE PTR ds:0x164d3772
  41787b:	mov    ebp,0x50bc73fd
  417880:	rcr    BYTE PTR [ebx-0x2dfb2614],0xd8
  417887:	rol    BYTE PTR [edi],cl
  417889:	mov    ds:0xe920c3d7,eax
  41788e:	add    edx,eax
  417890:	imul   esp,DWORD PTR [eax-0x68],0xa01cc01
  417897:	sub    BYTE PTR [edx+0x42de7742],0x58
  41789e:	stos   BYTE PTR es:[edi],al
  41789f:	retf   0x5ff4
  4178a2:	pop    eax
  4178a3:	pop    eax
  4178a4:	inc    ebx
  4178a5:	stos   BYTE PTR es:[edi],al
  4178a6:	dec    edi
  4178a7:	in     eax,dx
  4178a8:	aad    0x43
  4178aa:	std    
  4178ab:	inc    edx
  4178ac:	ret    
  4178ad:	inc    edi
  4178ae:	ret    0xea26
  4178b1:	cli    
  4178b2:	jnp    0x417887
  4178b4:	loop   0x4178e5
  4178b6:	jno    0x417885
  4178b8:	mov    esi,0xc0e1df8c
  4178bd:	icebp  
  4178be:	fisub  DWORD PTR [edi+esi*8-0x3e057307]
  4178c5:	jmp    0x41791a
  4178c7:	in     eax,0x53
  4178c9:	mov    ecx,0x89dfcd07
  4178ce:	xchg   BYTE PTR [esi],dl
  4178d0:	in     eax,0x82
  4178d2:	add    edi,edi
  4178d4:	mov    edx,0xf0fb31f2
  4178d9:	stos   DWORD PTR es:[edi],eax
  4178da:	lahf   
  4178db:	dec    edi
  4178dc:	push   eax
  4178dd:	shl    DWORD PTR [edi-0x1],cl
  4178e0:	scas   eax,DWORD PTR es:[edi]
  4178e1:	shl    DWORD PTR [edi-0x25f22ed3],1
  4178e7:	sub    BYTE PTR [ebx],dh
  4178e9:	push   cs
  4178ea:	cmp    ecx,ebp
  4178ec:	xchg   ebx,eax
  4178ed:	push   DWORD PTR [ebp+0x5a71a8a1]
  4178f3:	pop    ds
  4178f4:	or     DWORD PTR [ebp-0x1ff68e72],edx
  4178fa:	mov    al,ds:0x58386570
  4178ff:	mov    bl,0x20
  417901:	mov    ds:0x6b55b8b6,al
  417906:	or     BYTE PTR [ecx+0x7e],al
  417909:	adc    esp,DWORD PTR [edi+0x60]
  41790c:	inc    esp
  41790d:	cmp    eax,0x3daf5f29
  417912:	(bad)  
  417913:	sti    
  417914:	pop    edx
  417915:	ror    BYTE PTR [edx-0x32],cl
  417918:	mov    bl,0xbf
  41791a:	sbb    BYTE PTR [ebx+0x10b4cb58],dl
  417920:	popf   
  417921:	sub    al,0xf6
  417923:	xor    al,BYTE PTR [ebx+0x64]
  417926:	adc    eax,0x33cc4421
  41792b:	dec    edx
  41792c:	sbb    DWORD PTR [edi-0x546af722],esp
  417932:	jl     0x41799b
  417934:	mov    cl,0x4c
  417936:	dec    edi
  417937:	fstsw  WORD PTR [ecx+0x7bb62f26]
  41793e:	sub    ebp,DWORD PTR [ebp-0x2a83fca3]
  417944:	xchg   esp,eax
  417945:	push   cs
  417946:	call   0xe57a5266
  41794b:	fnclex 
  41794d:	(bad)  
  41794e:	arpl   WORD PTR [edi+0x2eb30337],bp
  417954:	shl    DWORD PTR [ecx+0x6a],0x12
  417958:	(bad)  [edi-0xb3b561b]
  41795e:	stos   DWORD PTR es:[edi],eax
  41795f:	lahf   
  417960:	mov    dl,0x1f
  417962:	sti    
  417963:	inc    edi
  417964:	or     esi,DWORD PTR [esi+0x559c9094]
  41796a:	jmp    0x677b:0x3caf3d95
  417971:	int3   
  417972:	pusha  
  417973:	(bad)  
  417974:	in     al,0x4a
  417976:	dec    esp
  417977:	mov    ecx,edi
  417979:	fst    DWORD PTR [edi]
  41797b:	pop    ss
  41797c:	and    al,0x98
  41797e:	xchg   esi,eax
  41797f:	enter  0xf612,0x13
  417983:	jle    0x4179ee
  417985:	repnz (bad) 
  417987:	stos   BYTE PTR es:[edi],al
  417988:	gs mov dh,0xd1
  41798b:	dec    eax
  41798c:	retf   0xb76a
  41798f:	stos   DWORD PTR es:[edi],eax
  417990:	cmp    DWORD PTR [esi-0x3eb6f4f8],esp
  417996:	lds    ecx,FWORD PTR [ebp+0x45]
  417999:	cwde   
  41799a:	lahf   
  41799b:	or     eax,0xa13f80de
  4179a0:	sbb    BYTE PTR [edi],al
  4179a2:	xor    BYTE PTR [eax],al
  4179a4:	sub    eax,0xd91f2944
  4179a9:	rcl    DWORD PTR [edx],0x86
  4179ac:	scas   eax,DWORD PTR es:[edi]
  4179ad:	sbb    eax,0xd7d3db29
  4179b2:	xchg   ebx,eax
  4179b3:	pop    edi
  4179b4:	lahf   
  4179b5:	push   edi
  4179b6:	inc    edi
  4179b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b8:	cli    
  4179b9:	data16 mov ch,0x50
  4179bc:	sbb    al,0xf3
  4179be:	imul   esi,DWORD PTR [ecx+0x2c],0xffffff99
  4179c2:	outs   dx,DWORD PTR ds:[esi]
  4179c3:	sbb    ebx,edx
  4179c5:	or     eax,0xbfceb68c
  4179ca:	ret    
  4179cb:	mov    bl,BYTE PTR [ebx+0x39]
  4179ce:	cmp    DWORD PTR [edi-0x51],esi
  4179d1:	jnp    0x417a0d
  4179d3:	mov    al,0x60
  4179d5:	fsub   QWORD PTR [edi-0x3277e4e3]
  4179db:	push   cs
  4179dc:	cmp    BYTE PTR [ebp*2-0x101d9932],ch
  4179e3:	xor    ah,BYTE PTR [esi-0x20]
  4179e6:	ins    DWORD PTR es:[edi],dx
  4179e7:	mov    eax,ds:0x56057392
  4179ec:	fwait
  4179ed:	push   ecx
  4179ee:	fdivr  QWORD PTR [ecx+edx*4-0x34869839]
  4179f5:	inc    eax
  4179f6:	daa    
  4179f7:	outs   dx,DWORD PTR ds:[esi]
  4179f8:	inc    eax
  4179f9:	add    eax,0x8afc7e7b
  4179fe:	adc    bh,BYTE PTR [esp+esi*8]
  417a01:	ins    BYTE PTR es:[edi],dx
  417a02:	pop    ecx
  417a03:	add    ecx,DWORD PTR [edi+0x66063b21]
  417a09:	fcomp  DWORD PTR [ebp-0x7]
  417a0c:	sti    
  417a0d:	inc    eax
  417a0e:	test   BYTE PTR [ecx-0x5f],0xb1
  417a12:	js     0x4179cf
  417a14:	cmp    al,0xbe
  417a16:	rcr    BYTE PTR [ebx-0x39],0x57
  417a1a:	(bad)  
  417a1b:	(bad)  
  417a1c:	enter  0x3118,0x27
  417a20:	int3   
  417a21:	xor    BYTE PTR [ebp+0x19],bl
  417a24:	xlat   BYTE PTR ds:[ebx]
  417a25:	fcmovnbe st,st(1)
  417a27:	cmc    
  417a28:	adc    esp,esi
  417a2a:	dec    edx
  417a2b:	sti    
  417a2c:	cmp    BYTE PTR [eax],0xb2
  417a2f:	cmp    BYTE PTR [ecx+0x50],ch
  417a32:	add    ebp,DWORD PTR [edi]
  417a34:	adc    BYTE PTR [ecx-0x74e37675],ah
  417a3a:	xchg   esi,eax
  417a3b:	addr16 sbb al,0x6
  417a3e:	lods   eax,DWORD PTR ds:[esi]
  417a3f:	cld    
  417a40:	loop   0x417a99
  417a42:	push   eax
  417a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a44:	add    ah,BYTE PTR [edx+0x4171b7a8]
  417a4a:	add    eax,0xcec795f6
  417a4f:	pop    edi
  417a50:	jmp    0x78354d76
  417a55:	in     eax,0xbc
  417a57:	scas   al,BYTE PTR es:[edi]
  417a58:	retf   0x2fcb
  417a5b:	pop    ebp
  417a5c:	mov    esi,0x752e667d
  417a61:	add    ah,0x43
  417a64:	mov    bl,0x37
  417a66:	cmc    
  417a67:	mov    ebx,0x9e1b2e02
  417a6c:	inc    esi
  417a6d:	shl    BYTE PTR es:[eax+0x5312e834],0xb7
  417a75:	inc    ecx
  417a76:	aad    0x54
  417a78:	inc    edx
  417a79:	dec    ecx
  417a7a:	das    
  417a7b:	adc    dh,ah
  417a7d:	lahf   
  417a7e:	shl    DWORD PTR [ebp-0x3a],cl
  417a81:	jbe    0x417a4d
  417a83:	fstp   QWORD PTR [ecx+0x59f92d80]
  417a89:	mov    al,0xc0
  417a8b:	(bad)  
  417a8c:	cwde   
  417a8d:	cld    
  417a8e:	add    ebx,DWORD PTR [esi]
  417a90:	pop    ebx
  417a91:	sbb    ecx,DWORD PTR [esi+0x627164cf]
  417a97:	push   ds
  417a98:	add    DWORD PTR [edi-0x279a1f9a],esi
  417a9e:	in     eax,dx
  417a9f:	jno    0x417a72
  417aa1:	cmc    
  417aa2:	add    BYTE PTR ds:0x3a965006,0x23
  417aa9:	lock inc ecx
  417aab:	mov    edi,0x25cdf293
  417ab0:	mov    ebx,0x58fe8b01
  417ab5:	or     edx,DWORD PTR [ecx-0x5e]
  417ab8:	mov    cl,0x79
  417aba:	sbb    al,0xa1
  417abc:	push   eax
  417abd:	pop    ebp
  417abe:	pop    es
  417abf:	fmulp  st(7),st
  417ac1:	jns    0x417b16
  417ac3:	jae    0x417ac0
  417ac5:	pop    ds
  417ac6:	or     BYTE PTR [ecx+ebp*4+0x6d49a2d5],dh
  417acd:	retf   
  417ace:	mov    edi,0xb08136c8
  417ad3:	aad    0xe1
  417ad5:	(bad)  
  417ad6:	fild   WORD PTR [edx]
  417ad8:	(bad)  
  417ad9:	jmp    0x9043:0x4f09ace
  417ae0:	jnp    0x417b27
  417ae2:	(bad)  
  417ae4:	push   ss
  417ae5:	jbe    0x417b60
  417ae7:	pop    ebx
  417ae8:	mov    DWORD PTR [ecx+0x1],esp
  417aeb:	aad    0xbb
  417aed:	ins    BYTE PTR es:[edi],dx
  417aee:	inc    edx
  417aef:	addr16 push ds
  417af1:	push   cs
  417af2:	sub    DWORD PTR [eax],ecx
  417af4:	sub    bh,0x3d
  417af7:	shl    BYTE PTR [ebp-0x54],0x9e
  417afb:	enter  0xd364,0x8d
  417aff:	mov    edx,0x795b5
  417b04:	or     esp,esi
  417b06:	push   es
  417b07:	pop    edx
  417b08:	or     DWORD PTR [edi+0x41],esi
  417b0b:	and    dh,BYTE PTR [ebp-0x75]
  417b0e:	aas    
  417b0f:	out    0xbb,al
  417b11:	sar    DWORD PTR [ecx],1
  417b13:	adc    al,0x15
  417b15:	jmp    FWORD PTR [eax+0x5]
  417b18:	test   al,cl
  417b1a:	and    DWORD PTR [esi+0x6d],ebp
  417b1d:	pop    ecx
  417b1e:	xor    al,0x8f
  417b20:	jmp    0x417b8c
  417b22:	xor    ecx,ebp
  417b24:	les    eax,FWORD PTR [ecx-0x3]
  417b27:	sub    eax,0x5ef4ce0a
  417b2c:	jle    0x417ac2
  417b2e:	sub    eax,0xa4dc553c
  417b33:	sbb    dl,bh
  417b35:	and    eax,0x15900504
  417b3a:	xchg   esi,eax
  417b3b:	lds    edx,FWORD PTR [eax-0x18]
  417b3e:	mov    bl,BYTE PTR [esi-0x3d48858d]
  417b44:	pop    edx
  417b45:	in     eax,0xc3
  417b47:	dec    ecx
  417b48:	jo     0x417ae7
  417b4a:	lds    ecx,FWORD PTR [edi]
  417b4c:	jmp    0xf171:0x6a9887bb
  417b53:	mov    eax,0x46f6fd11
  417b58:	jo     0x417b1c
  417b5a:	inc    ecx
  417b5b:	sbb    eax,esp
  417b5d:	cmp    bl,BYTE PTR [ebp-0x5b]
  417b60:	mov    eax,ds:0x746a0519
  417b65:	das    
  417b66:	sbb    ecx,esi
  417b68:	(bad)  
  417b69:	pop    ebx
  417b6a:	ins    DWORD PTR es:[edi],dx
  417b6b:	sbb    esp,DWORD PTR [eax-0x21d5ef43]
  417b71:	int    0x5e
  417b73:	fstp   TBYTE PTR [eax-0x1c2a709c]
  417b79:	outs   dx,BYTE PTR ds:[esi]
  417b7a:	lods   eax,DWORD PTR ds:[esi]
  417b7b:	loopne 0x417b6f
  417b7d:	adc    DWORD PTR [ebp-0x4b56a250],ebp
  417b83:	repz cmp bl,ah
  417b86:	cwde   
  417b87:	sti    
  417b88:	mov    al,ds:0x44115d7c
  417b8d:	test   eax,0xfb21d275
  417b92:	pusha  
  417b93:	xor    al,0x2c
  417b95:	jae    0x417b3b
  417b97:	mov    al,0xe
  417b99:	mov    dh,0x5
  417b9b:	clc    
  417b9c:	dec    ebp
  417b9d:	cmp    ecx,ecx
  417b9f:	sti    
  417ba0:	add    esi,ebp
  417ba2:	cmc    
  417ba3:	push   ebp
  417ba4:	mov    edx,0xb3c80616
  417ba9:	repnz xchg ebp,eax
  417bab:	repnz push ds
  417bad:	out    dx,eax
  417bae:	ret    0x346b
  417bb1:	in     al,0xad
  417bb3:	add    al,0xe
  417bb5:	fld    TBYTE PTR [esi]
  417bb7:	inc    ebp
  417bb8:	dec    ebx
  417bb9:	retf   0xd2d7
  417bbc:	popa   
  417bbd:	jne    0x417b71
  417bbf:	adc    edi,ebx
  417bc1:	mov    dh,0xea
  417bc3:	jno    0x417b97
  417bc5:	aas    
  417bc6:	dec    DWORD PTR [eax+0x18]
  417bc9:	lahf   
  417bca:	xor    BYTE PTR [eax],cl
  417bcc:	popf   
  417bcd:	mov    BYTE PTR [ebp+esi*8+0x7f2194c8],al
  417bd4:	mov    DWORD PTR [edi-0x5aedff94],ebp
  417bda:	test   al,0x16
  417bdc:	cmp    dl,BYTE PTR [esi+esi*1+0x404b3f03]
  417be3:	mov    WORD PTR [ecx],ss
  417be5:	add    al,0xc
  417be7:	pop    ds
  417be8:	sbb    eax,0x9ffc6dcf
  417bed:	das    
  417bee:	ja     0x417b76
  417bf0:	push   esp
  417bf1:	add    DWORD PTR [ebx+0xf73b035],eax
  417bf7:	pop    edx
  417bf8:	add    DWORD PTR [edx],ebp
  417bfa:	sahf   
  417bfb:	fistp  DWORD PTR [esi-0x4a]
  417bfe:	sbb    edx,esi
  417c00:	or     eax,0x481be691
  417c05:	test   DWORD PTR [ebp+0xf914d6f],ebx
  417c0b:	push   0x6dd11c0d
  417c10:	jne    0x87075f3a
  417c16:	sub    ecx,esi
  417c18:	outs   dx,BYTE PTR ds:[esi]
  417c19:	mov    esp,0x4192bc2a
  417c1e:	sbb    eax,0x9df7003
  417c23:	and    al,0xfb
  417c25:	push   ebx
  417c26:	(bad)  
  417c28:	punpckhbw mm7,mm0
  417c2b:	loop   0x417c51
  417c2d:	sub    eax,0x996ac962
  417c32:	add    eax,0x256160aa
  417c37:	mov    ds,ebp
  417c39:	and    ecx,edx
  417c3b:	aad    0x9e
  417c3d:	jl     0x417c5b
  417c3f:	cmp    BYTE PTR [ebp+esi*8+0x7304c699],0x8a
  417c47:	cdq    
  417c48:	jmp    0x417c2b
  417c4a:	mov    bh,0xd0
  417c4c:	mov    cl,0x24
  417c4e:	push   ecx
  417c4f:	mov    BYTE PTR [ebp-0x10],bl
  417c52:	dec    ebx
  417c53:	xchg   edx,eax
  417c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c55:	gs pop edi
  417c57:	mov    ds:0xa88e74ab,eax
  417c5c:	push   ebp
  417c5d:	and    dh,BYTE PTR [ebp+0x4d315328]
  417c63:	sbb    BYTE PTR [ebp-0x61],ah
  417c66:	dec    eax
  417c67:	retf   0x4f1
  417c6a:	push   ebx
  417c6b:	jb     0x417c9a
  417c6d:	test   BYTE PTR [ecx],bl
  417c6f:	loope  0x417cb3
  417c71:	cdq    
  417c72:	in     al,dx
  417c73:	in     al,dx
  417c74:	push   edx
  417c75:	xchg   ebx,eax
  417c76:	imul   ebp,DWORD PTR [ecx-0x1e],0xffffffb9
  417c7a:	cmp    eax,0x3a9e898f
  417c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c80:	sub    al,BYTE PTR [edx-0x71]
  417c83:	loop   0x417c60
  417c85:	das    
  417c86:	aas    
  417c87:	sub    ebx,0x29c67bfc
  417c8d:	sbb    BYTE PTR [ebx-0x39afad44],ah
  417c93:	xchg   edi,eax
  417c94:	dec    eax
  417c95:	jo     0x417c9b
  417c97:	cmp    BYTE PTR [ecx-0x5624a55f],dl
  417c9d:	xchg   ebx,eax
  417c9e:	xor    eax,0x65df5986
  417ca3:	jne    0x417c9b
  417ca5:	mov    esi,0x9cbfaef6
  417caa:	mov    DWORD PTR [esi],esi
  417cac:	pop    ebp
  417cad:	push   esp
  417cae:	sbb    dl,BYTE PTR [ebx+0x5177ac8]
  417cb4:	sbb    ebp,DWORD PTR [edi]
  417cb6:	cdq    
  417cb7:	or     DWORD PTR [edi+0x67e19775],edx
  417cbd:	scas   eax,DWORD PTR es:[edi]
  417cbe:	cs mov al,0xd5
  417cc1:	imul   edi,DWORD PTR [esi],0xffffffda
  417cc4:	clc    
  417cc5:	int3   
  417cc6:	outs   dx,DWORD PTR ds:[esi]
  417cc7:	cmp    al,0x1e
  417cc9:	cmp    cl,cl
  417ccb:	fistp  WORD PTR [eax+0x1fa74bb5]
  417cd1:	js     0x417d09
  417cd3:	push   ecx
  417cd4:	imul   ecx,DWORD PTR [ebx+0xb],0xa1cc303f
  417cdb:	aam    0x91
  417cdd:	jle    0x417d07
  417cdf:	pop    esp
  417ce0:	mov    edx,0x804b6c38
  417ce5:	add    eax,0x56e93e2e
  417cea:	fmul   DWORD PTR [edx-0x257cc9fa]
  417cf0:	or     BYTE PTR [ebx],cl
  417cf2:	xlat   BYTE PTR ds:[ebx]
  417cf3:	bound  eax,QWORD PTR [ebx-0x486d2488]
  417cf9:	ins    DWORD PTR es:[edi],dx
  417cfa:	push   cs
  417cfb:	cli    
  417cfc:	cmp    eax,0xdb38660b
  417d01:	inc    edi
  417d02:	cmp    al,0xf5
  417d04:	sub    ch,cl
  417d06:	push   edi
  417d07:	pop    ebx
  417d08:	fisubr DWORD PTR [eax+ecx*1]
  417d0b:	xor    bh,BYTE PTR [eax+0x1fa0c213]
  417d11:	outs   dx,DWORD PTR ds:[esi]
  417d12:	cmc    
  417d13:	ss repz scas al,BYTE PTR es:[edi]
  417d16:	(bad)  
  417d17:	fs test cl,bl
  417d1a:	sub    dl,BYTE PTR [ebx]
  417d1c:	shr    DWORD PTR [eax-0x78380155],0x7a
  417d23:	mov    edx,DWORD PTR [ebp+ebx*4-0x246854bf]
  417d2a:	out    0xf7,al
  417d2c:	rcl    ecx,0x7e
  417d2f:	pop    es
  417d30:	lods   al,BYTE PTR ds:[esi]
  417d31:	in     al,0xa8
  417d33:	push   0xffffffcc
  417d35:	gs add BYTE PTR gs:[ebx],ah
  417d39:	fiadd  DWORD PTR [edi-0x5b649213]
  417d3f:	push   eax
  417d40:	cmp    eax,ecx
  417d42:	scas   al,BYTE PTR es:[edi]
  417d43:	and    esp,ebp
  417d45:	lds    edi,FWORD PTR [edx+0x54]
  417d48:	(bad)  
  417d49:	rol    DWORD PTR [edi+0x7a],cl
  417d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d4d:	sub    BYTE PTR [ecx-0x6b],dl
  417d50:	ja     0x417d85
  417d52:	jecxz  0x417da6
  417d54:	loopne 0x417daf
  417d56:	pushf  
  417d57:	push   edi
  417d58:	in     eax,dx
  417d59:	jmp    0xc8f5:0x9a4ccd08
  417d60:	ja     0x417d00
  417d62:	mov    ah,0x8b
  417d64:	sti    
  417d65:	je     0x417db9
  417d67:	or     DWORD PTR [eax-0x27326be7],esi
  417d6d:	inc    ebx
  417d6e:	sbb    al,0x13
  417d70:	mov    WORD PTR ds:0xfaf3a523,fs
  417d76:	ret    0x84c4
  417d79:	stos   BYTE PTR es:[edi],al
  417d7a:	repz or ch,BYTE PTR [eax]
  417d7d:	mov    cl,BYTE PTR [edx]
  417d7f:	repz push cs
  417d81:	imul   eax,DWORD PTR [edi],0xffffff82
  417d84:	mov    edi,0x6d1031c3
  417d89:	in     eax,0x13
  417d8b:	adc    al,0xe8
  417d8d:	gs jns 0x417db9
  417d90:	retf   
  417d91:	adc    esp,ecx
  417d93:	add    BYTE PTR [eax-0x34],cl
  417d96:	inc    ebp
  417d97:	mov    esi,0xecc0753d
  417d9c:	pop    ecx
  417d9d:	popf   
  417d9e:	add    bl,al
  417da0:	sub    eax,0xb0b6a16
  417da5:	div    DWORD PTR ds:0xe7dc0ffa
  417dab:	sbb    eax,0x82bb24e4
  417db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db2:	add    BYTE PTR [eax-0x11011338],cl
  417db8:	je     0x417df8
  417dba:	jb     0x417d5c
  417dbc:	inc    ecx
  417dbd:	fnstcw WORD PTR [edx-0x3e710d34]
  417dc3:	xchg   ebp,eax
  417dc4:	mov    WORD PTR [eax],ds
  417dc6:	cmp    ebx,DWORD PTR [ebp-0x534914a9]
  417dcc:	retf   0x7f31
  417dcf:	sbb    esi,DWORD PTR [edx-0x77]
  417dd2:	dec    esi
  417dd3:	lahf   
  417dd4:	xor    DWORD PTR [edi-0x5915311c],esi
  417dda:	(bad)  
  417ddb:	sub    bl,BYTE PTR [edi+0xa3fa375]
  417de1:	sub    bh,BYTE PTR [esi+0x225f35ca]
  417de7:	(bad)  [edi]
  417de9:	and    DWORD PTR [edx+0x5dbb09c5],0xb904ff31
  417df3:	pop    ebp
  417df4:	push   ds
  417df5:	cmp    DWORD PTR [edi+0x42],0x5b153454
  417dfc:	sbb    BYTE PTR [edx+edi*4-0x33],ah
  417e00:	shr    DWORD PTR [ebp-0x5c],cl
  417e03:	imul   ebp,edi,0xffffff9e
  417e06:	out    0xeb,eax
  417e08:	inc    ebp
  417e09:	in     eax,dx
  417e0a:	lods   al,BYTE PTR ds:[esi]
  417e0b:	pop    esi
  417e0c:	pop    edi
  417e0d:	xchg   DWORD PTR [esi-0x4b],ecx
  417e10:	pusha  
  417e11:	les    ebx,FWORD PTR [edi]
  417e13:	test   BYTE PTR [ecx+0x5],dh
  417e16:	mov    ebp,0x17b9d5f0
  417e1b:	rol    bl,1
  417e1d:	mov    eax,ds:0x71ae905
  417e22:	sub    bl,BYTE PTR [ebx+0x4679781d]
  417e28:	jmp    0xce73d385
  417e2d:	loop   0x417deb
  417e2f:	jae    0x417dfa
  417e31:	jns    0x417e9c
  417e33:	lahf   
  417e34:	into   
  417e35:	sbb    al,BYTE PTR [esi]
  417e37:	scas   eax,DWORD PTR es:[edi]
  417e38:	aam    0x4a
  417e3a:	je     0x417e34
  417e3c:	sbb    BYTE PTR [ebx-0x38],0xcd
  417e40:	pop    ebp
  417e41:	lea    edi,[ecx+esi*1]
  417e44:	inc    ecx
  417e45:	push   ss
  417e46:	mov    WORD PTR [edi-0x39],es
  417e49:	fst    QWORD PTR [edi+0x3f19c9ba]
  417e4f:	or     DWORD PTR [edi+0x47],eax
  417e52:	push   eax
  417e53:	push   0x2
  417e55:	lock les esp,FWORD PTR ds:[ecx]
  417e59:	push   ds
  417e5a:	inc    edi
  417e5b:	xchg   ch,ah
  417e5d:	ret    
  417e5e:	ficom  DWORD PTR [edi+edx*8]
  417e61:	dec    edx
  417e62:	mov    dh,0x17
  417e64:	test   BYTE PTR [edi],0x72
  417e67:	cmovl  edi,DWORD PTR [edx]
  417e6a:	fwait
  417e6b:	sub    esp,ebx
  417e6d:	mov    bh,0x61
  417e6f:	xor    ah,bh
  417e71:	fnstenv [ecx-0x5465050d]
  417e77:	sar    DWORD PTR [edi+eax*8+0x7d],0x49
  417e7c:	add    eax,0x19400a58
  417e81:	call   0xbbb9152c
  417e86:	push   ebp
  417e87:	retf   
  417e88:	mov    ebp,0xb4ac7e87
  417e8d:	mov    al,dh
  417e8f:	and    esi,DWORD PTR [esp+ebp*4+0x53]
  417e93:	jp     0x417e46
  417e95:	mov    esi,0x6335cd91
  417e9a:	out    0xa1,al
  417e9c:	sbb    BYTE PTR [edi+0x58f643a],ah
  417ea2:	xchg   esi,eax
  417ea3:	jge    0x417e41
  417ea5:	test   DWORD PTR [ecx],esp
  417ea7:	and    ebx,DWORD PTR [edi]
  417ea9:	fadd   DWORD PTR [edx-0x6f]
  417eac:	rcl    DWORD PTR [esi-0x76c14c4b],cl
  417eb2:	ficom  WORD PTR [ecx+0x6a]
  417eb5:	hlt    
  417eb6:	and    eax,0xd2cb89ff
  417ebb:	dec    esp
  417ebc:	int3   
  417ebd:	call   0xc14a:0x839e985
  417ec4:	jns    0x417f28
  417ec6:	cmp    BYTE PTR [edx],dl
  417ec8:	lods   al,BYTE PTR ds:[esi]
  417ec9:	in     al,0xed
  417ecb:	neg    BYTE PTR [ecx]
  417ecd:	(bad)  
  417ece:	hlt    
  417ecf:	push   ebp
  417ed0:	inc    edx
  417ed1:	jnp    0x417f3d
  417ed3:	sbb    DWORD PTR [esp+edi*2],ecx
  417ed6:	addr16 push ss
  417ed8:	jl     0x417f1b
  417eda:	inc    esi
  417edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417edc:	clc    
  417edd:	rcr    dh,cl
  417edf:	inc    ebx
  417ee0:	or     DWORD PTR [edi],ebp
  417ee2:	mov    al,ds:0xff307248
  417ee7:	mov    dh,0xd2
  417ee9:	lods   al,BYTE PTR ds:[esi]
  417eea:	gs add eax,esi
  417eed:	cmp    eax,0xa8ca8b1a
  417ef2:	pop    ebx
  417ef3:	inc    esi
  417ef4:	mov    ebp,0x730da535
  417ef9:	pushf  
  417efa:	jo     0x417eb2
  417efc:	nop
  417efd:	mov    dh,0xf5
  417eff:	push   es
  417f00:	xor    al,0xf0
  417f02:	retf   0x7852
  417f05:	xchg   ebp,eax
  417f06:	sbb    al,0x47
  417f08:	xor    ebx,DWORD PTR [edx+edx*1]
  417f0b:	sbb    al,0x19
  417f0d:	ror    al,0x1a
  417f10:	icebp  
  417f11:	add    al,ah
  417f13:	xchg   BYTE PTR [ebp-0x34c01324],ch
  417f19:	cmp    cl,cl
  417f1b:	sub    BYTE PTR [edx-0x11],dl
  417f1e:	mov    DWORD PTR [ecx+edx*4+0x69],ecx
  417f22:	into   
  417f23:	pop    edx
  417f24:	mov    dl,0x71
  417f26:	cmp    BYTE PTR [esi-0x60],ah
  417f29:	sub    edx,DWORD PTR [eax+0x62]
  417f2c:	sub    BYTE PTR [eax-0x1f1d46cb],cl
  417f32:	jno    0x417fb1
  417f34:	test   BYTE PTR [ecx],ah
  417f36:	sbb    BYTE PTR ds:0x1a418f3e,0xc5
  417f3e:	ss jge 0x417f3e
  417f41:	xchg   ebx,eax
  417f42:	sub    eax,0x5bac0751
  417f47:	imul   ebx,DWORD PTR [ebx],0x7000c7d1
  417f4d:	dec    edx
  417f4e:	pop    ds
  417f4f:	jne    0x417f98
  417f51:	jecxz  0x417f6d
  417f53:	fdiv   DWORD PTR [edi+0x291cebfb]
  417f59:	sbb    DWORD PTR [ecx],0x5d
  417f5c:	js     0x417fb7
  417f5e:	aas    
  417f5f:	pop    ebx
  417f60:	adc    eax,0xc0411893
  417f65:	in     al,dx
  417f66:	cmc    
  417f67:	out    0xa0,eax
  417f69:	mov    al,0x59
  417f6b:	fstp   DWORD PTR [ecx+eiz*8]
  417f6e:	repz inc edx
  417f70:	mov    al,0x37
  417f72:	mov    al,0xc0
  417f74:	leave  
  417f75:	cmp    ch,BYTE PTR [edx]
  417f77:	sbb    BYTE PTR [edi-0x4279f5a4],al
  417f7d:	lods   al,BYTE PTR es:[esi]
  417f7f:	dec    esi
  417f80:	jmp    0xfe3:0x297e7aac
  417f87:	xor    dh,bl
  417f89:	xchg   esp,eax
  417f8a:	das    
  417f8b:	test   BYTE PTR [esp+ebx*2+0x29],dh
  417f8f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f91:	or     DWORD PTR [ebx],eax
  417f93:	outs   dx,DWORD PTR ds:[esi]
  417f94:	imul   ebx,edi,0xf4d70531
  417f9a:	mov    ebx,0x78f4f067
  417f9f:	lahf   
  417fa0:	clc    
  417fa1:	into   
  417fa2:	push   0xabb49989
  417fa7:	cmp    al,0xdd
  417fa9:	jp     0x417f8b
  417fab:	jno    0x417ffb
  417fad:	(bad)  
  417fae:	lahf   
  417faf:	stc    
  417fb0:	test   eax,0x8dcacd3d
  417fb5:	out    0xb2,al
  417fb7:	ret    0x5e48
  417fba:	dec    eax
  417fbb:	pop    es
  417fbc:	out    dx,eax
  417fbd:	retf   0x982c
  417fc0:	stos   DWORD PTR es:[edi],eax
  417fc1:	add    bl,cl
  417fc3:	xchg   ch,al
  417fc5:	mov    ch,0xf6
  417fc7:	mov    ch,0x65
  417fc9:	mov    esi,0x5e57377c
  417fce:	rol    ebp,1
  417fd0:	and    DWORD PTR [ebp+0x37e4e3ce],ecx
  417fd6:	adc    eax,0xdf943d31
  417fdb:	push   ss
  417fdc:	lods   eax,DWORD PTR ds:[esi]
  417fdd:	popa   
  417fde:	jne    0x417ff3
  417fe0:	and    al,0xc
  417fe2:	xlat   BYTE PTR ds:[ebx]
  417fe3:	push   ss
  417fe4:	scas   al,BYTE PTR es:[edi]
  417fe5:	lea    ecx,[esi]
  417fe7:	popa   
  417fe8:	je     0x417ffb
  417fea:	jmp    0x418026
  417fec:	daa    
  417fed:	lahf   
  417fee:	dec    eax
  417fef:	or     ah,ch
  417ff1:	ficom  WORD PTR [ecx-0x10]
  417ff4:	jmp    0x418075
  417ff6:	stc    
  417ff7:	mov    dl,0xe1
  417ff9:	pop    esp
  417ffa:	cdq    
  417ffb:	xchg   edi,eax
  417ffc:	dec    ebp
  417ffd:	and    esp,eax
  417fff:	and    al,0xa7
  418001:	rcl    DWORD PTR [edi+eiz*4-0x5ab49e00],cl
  418008:	cmp    ah,dh
  41800a:	not    BYTE PTR [esi+0x151553e7]
  418010:	add    eax,0x4806d1cb
  418015:	mov    edi,0x95d4f1d8
  41801a:	add    al,dl
  41801c:	cs (bad) 
  41801f:	out    0x68,eax
  418021:	gs popf 
  418023:	sbb    DWORD PTR [ecx-0xb],edx
  418026:	(bad)  
  418027:	scas   eax,DWORD PTR es:[edi]
  418028:	nop
  418029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41802a:	adc    edx,DWORD PTR [ecx-0x1d]
  41802d:	sub    ebp,DWORD PTR ds:0x7ed8c5b4
  418033:	in     al,dx
  418034:	jb     0x418061
  418036:	and    al,dh
  418038:	push   ebp
  418039:	mov    fs,esi
  41803b:	stc    
  41803c:	mul    esi
  41803e:	dec    edx
  41803f:	lods   al,BYTE PTR ds:[esi]
  418040:	lea    esi,[edx-0x33]
  418043:	(bad)  
  418044:	fdivr  DWORD PTR [edi+0x738870f8]
  41804a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804b:	pop    ebp
  41804c:	inc    ecx
  41804d:	xlat   BYTE PTR ds:[ebx]
  41804e:	gs push ebp
  418050:	ret    
  418051:	sub    al,bl
  418053:	push   0xaf576b7c
  418058:	js     0x4180b1
  41805a:	push   es
  41805b:	in     al,0x6c
  41805d:	pusha  
  41805e:	test   al,0xd5
  418060:	and    ah,dl
  418062:	sub    bl,BYTE PTR [edi+0x14363ca5]
  418068:	cli    
  418069:	in     eax,dx
  41806a:	cmc    
  41806b:	push   esp
  41806c:	call   0x5ac82cb
  418071:	adc    esp,DWORD PTR [ebx-0x7]
  418074:	mov    esp,esi
  418076:	dec    ebp
  418077:	cwde   
  418078:	jnp    0x4180df
  41807a:	jg     0x4180f8
  41807c:	mov    ecx,0x414bc153
  418081:	jb     0x4180a8
  418083:	mov    DWORD PTR [edx-0x75727d2d],ebp
  418089:	les    ebx,FWORD PTR [esi]
  41808b:	xor    eax,0x2d06a4cf
  418090:	xchg   esp,eax
  418091:	out    0xd7,eax
  418093:	popf   
  418094:	retf   
  418095:	pop    eax
  418096:	test   DWORD PTR [esp+ebp*1],ebp
  418099:	push   edi
  41809a:	popa   
  41809b:	mov    bl,0x76
  41809d:	mov    edi,0x1695178b
  4180a2:	sti    
  4180a3:	in     eax,dx
  4180a4:	loop   0x4180c6
  4180a6:	bound  ebx,QWORD PTR ds:0xe4e79100
  4180ac:	push   0x713efae7
  4180b1:	xchg   edx,eax
  4180b2:	imul   edi,eax,0xb3afc927
  4180b8:	ret    0x92fd
  4180bb:	jno    0x418100
  4180bd:	cs daa 
  4180bf:	(bad)  
  4180c0:	sub    eax,0x6ecfff4
  4180c5:	call   0x8bf0745c
  4180ca:	jno    0x4180f7
  4180cc:	mov    bh,0x3e
  4180ce:	sti    
  4180cf:	xor    ch,BYTE PTR [ebx-0x123a97d5]
  4180d5:	inc    esp
  4180d6:	lds    ebx,FWORD PTR [ecx-0x3d]
  4180d9:	icebp  
  4180da:	fstp   TBYTE PTR [edx+0x5d]
  4180dd:	push   esp
  4180de:	lahf   
  4180df:	in     al,0x31
  4180e1:	dec    edi
  4180e2:	psrad  mm0,mm0
  4180e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180e6:	pop    ds
  4180e7:	sbb    ch,BYTE PTR es:[edx+0x421fec66]
  4180ee:	int3   
  4180ef:	mov    esp,0x6a356bac
  4180f4:	push   edi
  4180f5:	dec    edx
  4180f6:	ror    WORD PTR [ebx+0x7bc2287d],cl
  4180fd:	add    eax,0x7a7bcfcf
  418102:	in     eax,dx
  418103:	mov    bl,0x78
  418105:	inc    esi
  418106:	mov    esi,0xad61269b
  41810b:	jne    0x41814c
  41810d:	jbe    0x418117
  41810f:	div    DWORD PTR [ecx]
  418111:	jl     0x41817b
  418113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418114:	mov    edx,ebx
  418116:	retf   0xa31e
  418119:	leave  
  41811a:	sbb    ebx,ecx
  41811c:	loope  0x418157
  41811e:	xor    edi,DWORD PTR [ecx+0x7b]
  418121:	mov    edi,0x836971fb
  418126:	mov    bh,0x61
  418128:	jmp    DWORD PTR [ecx]
  41812a:	ins    DWORD PTR es:[edi],dx
  41812b:	hlt    
  41812c:	jle    0x4180ee
  41812e:	and    BYTE PTR [esi+0x7],ah
  418131:	push   ecx
  418132:	test   ecx,ecx
  418134:	cmp    ebp,ebx
  418136:	(bad)  
  418137:	push   0xffffffd0
  418139:	xlat   BYTE PTR ds:[ebx]
  41813a:	test   esp,eax
  41813c:	hlt    
  41813d:	emms   
  41813f:	xor    al,0x1b
  418141:	adc    eax,0x54f7cecf
  418146:	scas   eax,DWORD PTR es:[edi]
  418147:	adc    eax,0x41d0f40f
  41814c:	or     ah,ch
  41814e:	mov    bh,0xb2
  418150:	add    ebx,ecx
  418152:	stc    
  418153:	dec    esi
  418154:	add    DWORD PTR [ebx-0x300bfd2b],0x76ea59f5
  41815e:	push   es
  41815f:	sbb    eax,0x27f2b679
  418164:	sub    DWORD PTR [ebx+0x6f],0x36
  418168:	or     BYTE PTR [esi+0x65],dl
  41816b:	lds    eax,FWORD PTR ds:0x29230a57
  418171:	mov    ecx,0xf1180562
  418176:	fidivr WORD PTR [eax+0x1f]
  418179:	in     al,dx
  41817a:	nop
  41817b:	data16 sbb BYTE PTR [ecx],dl
  41817e:	fbld   TBYTE PTR [ebx+eax*4+0x7caa2985]
  418185:	cdq    
  418186:	and    BYTE PTR [edx],ch
  418188:	test   BYTE PTR [edi-0x2f1f0441],dl
  41818e:	mov    al,0x42
  418190:	outs   dx,BYTE PTR ds:[esi]
  418191:	mov    edx,DWORD PTR ds:0x2959ba12
  418197:	lods   al,BYTE PTR ds:[esi]
  418198:	xchg   esi,eax
  418199:	or     DWORD PTR [edx-0x4d],edx
  41819c:	out    0xda,eax
  41819e:	mov    esp,0xd4c27e9d
  4181a3:	xor    edi,ebx
  4181a5:	mov    bh,0xe7
  4181a7:	loopne 0x418181
  4181a9:	rol    BYTE PTR [esi-0x4a],cl
  4181ac:	icebp  
  4181ad:	pushf  
  4181ae:	repz call 0xe511ca5d
  4181b4:	inc    eax
  4181b5:	test   al,0x68
  4181b7:	add    DWORD PTR [eax-0x2d],edi
  4181ba:	xor    esp,DWORD PTR [ecx]
  4181bc:	jo     0x418211
  4181be:	push   esi
  4181bf:	out    dx,eax
  4181c0:	mov    al,0xe
  4181c2:	das    
  4181c3:	sub    eax,0x5f394e99
  4181c8:	sbb    DWORD PTR [ebp-0x7546cc02],0xffffff8c
  4181cf:	sub    BYTE PTR [ebx],0x66
  4181d2:	jg     0x4181c0
  4181d4:	jnp    0x4181cd
  4181d6:	jge    0x418238
  4181d8:	sub    eax,0xe940b89c
  4181dd:	fsub   DWORD PTR [eax+0x299c32db]
  4181e3:	cmp    DWORD PTR [edx],edi
  4181e5:	mov    dh,0x15
  4181e7:	retf   0x1027
  4181ea:	sbb    al,0xf4
  4181ec:	int    0xc6
  4181ee:	int3   
  4181ef:	mov    ah,0x3d
  4181f1:	push   0x4036d34d
  4181f6:	inc    esi
  4181f7:	inc    eax
  4181f8:	jo     0x4181f7
  4181fa:	pop    esi
  4181fb:	cwde   
  4181fc:	fld    st(0)
  4181fe:	sbb    DWORD PTR [esi],eax
  418200:	mov    esp,0x9646e7c5
  418205:	lahf   
  418206:	jns    0x418257
  418208:	cld    
  418209:	xor    BYTE PTR [ebx+0x39],ah
  41820c:	retf   
  41820d:	lahf   
  41820e:	mov    dl,0x6d
  418210:	xchg   edx,eax
  418211:	pop    esp
  418212:	add    esi,edx
  418214:	aaa    
  418215:	or     DWORD PTR [edi],0xdce032fe
  41821b:	pusha  
  41821c:	scas   al,BYTE PTR es:[edi]
  41821d:	das    
  41821e:	shl    BYTE PTR [esp+edi*4-0x69b14750],cl
  418225:	mov    dl,0xc8
  418227:	nop
  418228:	mov    ds:0x364831b2,eax
  41822d:	sar    edi,cl
  41822f:	jp     0x4181ba
  418231:	xor    DWORD PTR [ebx],ecx
  418233:	adc    eax,0x3a76e77b
  418238:	pop    ecx
  418239:	imul   esp,ebp,0xf4983ab1
  41823f:	xchg   ebp,eax
  418240:	jge    0x4181cf
  418242:	add    al,0x8c
  418244:	push   esp
  418245:	push   0xffffff82
  418247:	aam    0xee
  418249:	sub    BYTE PTR [ecx-0x75],bh
  41824c:	fwait
  41824d:	push   cs
  41824e:	inc    edi
  41824f:	fmul   DWORD PTR [eax+0x5e]
  418252:	jb     0x418205
  418254:	adc    BYTE PTR [ebx+eax*4+0x6e],dh
  418258:	ret    0x1025
  41825b:	je     0x418251
  41825d:	push   ecx
  41825f:	sbb    BYTE PTR [edx+eiz*4+0x4873a562],ah
  418266:	cmp    ah,BYTE PTR [ecx+0x22381035]
  41826c:	add    BYTE PTR [edx],cl
  41826e:	fucompp 
  418270:	fwait
  418271:	jae    0x418211
  418273:	push   edi
  418274:	jns    0x418260
  418276:	or     al,0xd2
  418278:	adc    BYTE PTR [edi],bh
  41827a:	enter  0xc9b7,0x54
  41827e:	adc    dh,BYTE PTR [edi]
  418280:	sbb    DWORD PTR [ebp-0x26],0x78
  418284:	cmp    ebx,DWORD PTR [ebp+0x640c6673]
  41828a:	fiadd  DWORD PTR [ebp+0x7b012776]
  418290:	pop    es
  418291:	push   eax
  418292:	scas   eax,DWORD PTR es:[edi]
  418293:	fst    QWORD PTR [edi-0x7a]
  418296:	repz push edx
  418298:	shr    BYTE PTR [ebp-0x35],cl
  41829b:	pushf  
  41829c:	jge    0x4182df
  41829e:	rcl    ch,cl
  4182a0:	sub    bh,BYTE PTR [ebp+0x108ec829]
  4182a6:	call   0x1b5838bc
  4182ab:	dec    edx
  4182ac:	dec    ebx
  4182ad:	mov    ah,0x9b
  4182af:	pop    edx
  4182b0:	rol    DWORD PTR [edx+0x42697176],0x63
  4182b7:	sub    BYTE PTR ds:0x26b7adc0,cl
  4182bd:	jo     0x4182c7
  4182bf:	or     al,0xb9
  4182c1:	xchg   edx,eax
  4182c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182c3:	sub    ebx,DWORD PTR [edx]
  4182c5:	sub    edx,DWORD PTR [ebp-0x46144355]
  4182cb:	mov    ebx,0x1640f47b
  4182d0:	or     DWORD PTR [eax],esp
  4182d2:	mov    esi,0x371aa587
  4182d7:	out    0x5a,eax
  4182d9:	or     al,0x51
  4182db:	(bad)  
  4182dc:	and    dh,al
  4182de:	pop    ss
  4182df:	cli    
  4182e0:	jmp    0xaf84:0x4ba76771
  4182e7:	out    dx,al
  4182e8:	xchg   edx,eax
  4182e9:	xchg   DWORD PTR [ebx+0x28afdc3b],eax
  4182ef:	sub    al,0x3f
  4182f1:	arpl   WORD PTR [edi],di
  4182f3:	adc    al,0x2f
  4182f5:	es sub bh,al
  4182f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f9:	xor    DWORD PTR [edi+ecx*4-0xe],edx
  4182fd:	and    bh,dl
  4182ff:	or     bl,BYTE PTR [ebp+0x6a22aedd]
  418305:	push   ebp
  418306:	in     eax,0x9b
  418308:	dec    edx
  418309:	enter  0xf53a,0xf6
  41830d:	xchg   esp,eax
  41830e:	int    0x48
  418310:	data16 add dh,al
  418313:	add    al,0x21
  418315:	dec    esp
  418316:	dec    esi
  418317:	popa   
  418318:	add    al,0x6c
  41831a:	or     dl,ah
  41831c:	nop    edx
  41831f:	sub    esp,edx
  418321:	mov    esp,0x9330ccdb
  418326:	or     dl,cl
  418328:	mov    al,0x90
  41832a:	mov    al,0xad
  41832d:	fcomip st,st(6)
  41832f:	xlat   BYTE PTR ds:[bx]
  418331:	cwde   
  418332:	xor    DWORD PTR ss:[edi-0x675ce534],edx
  418339:	mov    edi,0x2612a576
  41833e:	dec    ebx
  41833f:	xchg   edi,eax
  418340:	jp     0x4182ca
  418342:	xchg   ebx,eax
  418343:	fs add al,0xb2
  418346:	fisttp QWORD PTR [edi]
  418348:	jecxz  0x4182e0
  41834a:	xor    BYTE PTR [ebp-0x1e7d1f8c],ah
  418350:	jl     0x41837c
  418352:	jecxz  0x4183be
  418354:	jbe    0x4183b6
  418356:	cdq    
  418357:	mov    BYTE PTR [eax-0x7],ch
  41835a:	mov    ds:0x1219dacd,eax
  41835f:	and    esi,DWORD PTR [ebx+ebp*4+0xf60bb35]
  418366:	push   ss
  418367:	mov    DWORD PTR [edx+0x3c],esi
  41836a:	mov    ch,BYTE PTR [esp+edx*1+0x2e8dfa1a]
  418371:	pop    edi
  418372:	mov    edx,0xba98fa66
  418377:	aam    0x68
  418379:	mov    edx,DWORD PTR [ebx+0x2d]
  41837c:	cs stos BYTE PTR es:[edi],al
  41837e:	inc    eax
  41837f:	cmp    BYTE PTR [esi+0x24],dl
  418382:	sbb    ch,cl
  418384:	mov    dl,0x6f
  418386:	dec    esi
  418387:	dec    ecx
  418388:	dec    DWORD PTR [ecx-0x64]
  41838b:	xchg   esi,eax
  41838c:	mov    ecx,0xbaf9ab7f
  418391:	mov    dl,0x53
  418393:	sub    eax,0xd9c003f5
  418398:	popa   
  418399:	sbb    ah,ch
  41839b:	xchg   DWORD PTR [ebp+0x6f],ebp
  41839e:	aas    
  41839f:	mov    ebx,edi
  4183a1:	and    eax,0x6141ff7f
  4183a6:	dec    esi
  4183a7:	mov    BYTE PTR [edi+ebx*4-0x409189c9],dl
  4183ae:	outs   dx,BYTE PTR ds:[esi]
  4183af:	inc    ebp
  4183b0:	sti    
  4183b1:	push   0xe781e69b
  4183b6:	jge    0x418382
  4183b8:	out    0xc7,al
  4183ba:	cwde   
  4183bb:	sar    BYTE PTR [esi],0xbe
  4183be:	pop    ds
  4183bf:	mov    ch,0xd4
  4183c1:	popa   
  4183c2:	mov    ds:0x147ecdc4,al
  4183c7:	jae    0x4183fe
  4183c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183ca:	push   ebx
  4183cb:	add    edx,DWORD PTR [eax-0x705d412d]
  4183d1:	retf   
  4183d2:	in     eax,dx
  4183d3:	in     al,dx
  4183d4:	add    BYTE PTR [eax+0x49fee4a1],ah
  4183da:	loopne 0x418433
  4183dc:	sub    eax,0x932fa1b4
  4183e1:	pushf  
  4183e2:	mov    ebx,0xf2539159
  4183e7:	enter  0xdf9f,0xea
  4183eb:	lods   eax,DWORD PTR ds:[esi]
  4183ec:	sub    eax,0x8de0330e
  4183f1:	data16 sbb BYTE PTR [ecx-0x2f],bl
  4183f5:	push   ebp
  4183f6:	jmp    0x6dc7:0x91c17b06
  4183fd:	push   0x3f
  4183ff:	in     eax,0x8
  418401:	lods   al,BYTE PTR ds:[esi]
  418402:	push   ds
  418403:	arpl   si,bp
  418405:	ins    DWORD PTR es:[edi],dx
  418406:	outs   dx,BYTE PTR ds:[esi]
  418407:	neg    DWORD PTR [esi]
  418409:	jno    0x4183f8
  41840b:	push   ebp
  41840c:	jge    0x4183ee
  41840e:	xchg   DWORD PTR [esi],ebp
  418410:	lea    edx,[eax]
  418412:	dec    eax
  418413:	mov    ch,0x9c
  418415:	mov    ecx,ebx
  418417:	mov    esi,0x785125d7
  41841c:	cmp    edi,DWORD PTR [ebp-0x57f0939e]
  418422:	leave  
  418423:	adc    DWORD PTR [esi+0x53],ebp
  418426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418427:	adc    BYTE PTR [ebx],ch
  418429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842a:	es push esi
  41842d:	sub    DWORD PTR [eax+0x184a3cae],edx
  418433:	test   ebp,esi
  418435:	mov    dl,0x11
  418437:	inc    BYTE PTR [ecx-0x19]
  41843a:	sub    BYTE PTR ds:0xd431dcd,bh
  418440:	and    al,0x78
  418442:	sbb    BYTE PTR [edi+0x20],dh
  418445:	push   esi
  418446:	mov    WORD PTR [edx-0x2ecfdd2f],ds
  41844c:	psubsb mm7,mm7
  41844f:	jp     0x418405
  418451:	xlat   BYTE PTR ds:[ebx]
  418452:	or     bh,BYTE PTR [edi-0x63ca2ab2]
  418458:	push   cs
  418459:	and    al,0x10
  41845b:	xchg   esi,eax
  41845c:	leave  
  41845d:	xchg   edi,eax
  41845e:	repnz mov DWORD PTR [ebx-0x27],edi
  418462:	nop
  418463:	and    DWORD PTR [edx-0x7948b59c],ebx
  418469:	sub    ebx,DWORD PTR [edi]
  41846b:	inc    ebx
  41846c:	jne    0x4184e4
  41846e:	in     al,dx
  41846f:	int3   
  418470:	xlat   BYTE PTR ds:[ebx]
  418471:	js     0x4184c2
  418473:	fidivr WORD PTR [edi+0x3]
  418476:	data16 jnp 0x41849f
  418479:	adc    DWORD PTR [eax],esi
  41847b:	repz pop edx
  41847d:	stc    
  41847e:	inc    esi
  41847f:	pop    esi
  418480:	adc    eax,0xca6b6b24
  418485:	jb     0x4184f4
  418487:	cwde   
  418488:	mov    bl,0xdf
  41848a:	inc    ebx
  41848b:	and    DWORD PTR [esi+ebx*2+0x152a596],0xe641e321
  418496:	cmp    bl,BYTE PTR ds:0x55f9ac52
  41849c:	jmp    0x9aa0:0x459b034e
  4184a3:	inc    edi
  4184a4:	jae    0xa616ae6e
  4184aa:	or     DWORD PTR [ebx],0x37766f27
  4184b0:	cmp    ebp,ebp
  4184b2:	(bad)  
  4184b3:	in     eax,dx
  4184b4:	stc    
  4184b5:	push   ecx
  4184b6:	(bad)  [eax+0x31]
  4184b9:	loope  0x4184d8
  4184bb:	mov    edi,0x9d45c7e9
  4184c0:	push   esp
  4184c1:	or     ecx,DWORD PTR [ecx+eax*8-0x24d916dc]
  4184c8:	mov    dl,0x26
  4184ca:	call   0xea5c7a34
  4184cf:	pusha  
  4184d0:	sbb    ebp,edx
  4184d2:	push   ecx
  4184d3:	inc    edx
  4184d4:	jnp    0x41848e
  4184d6:	pop    esi
  4184d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184d8:	test   BYTE PTR [esi+0x75],ah
  4184db:	(bad)  
  4184dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184dd:	jle    0x4184a5
  4184df:	cld    
  4184e0:	jmp    0x8707:0x14e8091b
  4184e7:	fsub   QWORD PTR [ebp-0x4e2abda2]
  4184ed:	stos   DWORD PTR es:[edi],eax
  4184ee:	js     0x4184a3
  4184f0:	push   ds
  4184f1:	jg     0x418495
  4184f3:	dec    esi
  4184f4:	(bad)  
  4184f5:	mov    ecx,0xde82ba00
  4184fa:	inc    ebp
  4184fb:	ds sub cl,cl
  4184fe:	push   ebx
  4184ff:	mov    ch,0x5f
  418501:	sbb    eax,0x5989b211
  418506:	sub    eax,0x6f6d46a7
  41850b:	dec    esi
  41850c:	mov    al,ds:0xbecaf515
  418511:	mov    ebp,0xa70e7107
  418516:	cmp    DWORD PTR [ebx+0x414f5fcd],0x2f375c50
  418520:	sbb    edx,DWORD PTR [edx-0x64]
  418523:	pop    edi
  418524:	scas   eax,DWORD PTR es:[edi]
  418525:	sub    ecx,DWORD PTR [ebx-0x1873d6eb]
  41852b:	xchg   esi,eax
  41852c:	push   esi
  41852d:	(bad)  
  41852e:	rcr    al,0x77
  418531:	adc    BYTE PTR [eax+0x3ba349f],dl
  418537:	jp     0x418568
  418539:	mov    edi,0xca2a1e4
  41853e:	fadd   DWORD PTR [ecx+0x58]
  418541:	popa   
  418542:	stc    
  418543:	repz push 0x6e
  418546:	cmp    eax,0xe013aad
  41854b:	adc    bh,bh
  41854d:	sahf   
  41854e:	mov    ecx,0x20d2c46f
  418553:	in     al,dx
  418554:	jmp    0x4184eb
  418556:	jbe    0x418527
  418558:	imul   BYTE PTR [ebp+0x1d]
  41855b:	pop    ds
  41855c:	out    dx,al
  41855d:	jmp    DWORD PTR [edx-0x6149e1ec]
  418563:	adc    al,0x2c
  418565:	(bad)  
  418567:	ins    BYTE PTR es:[edi],dx
  418568:	ins    BYTE PTR es:[edi],dx
  418569:	push   0x51
  41856b:	xor    edi,DWORD PTR [ebp+0x76]
  41856e:	mov    ch,0xbe
  418570:	adc    DWORD PTR [esi+ebx*2+0x1c],0xffffffbd
  418575:	and    esi,DWORD PTR [ebp+0x7c]
  418578:	mov    eax,ds:0xa87dae5e
  41857d:	and    eax,0x292e583
  418582:	pop    ecx
  418583:	pop    ecx
  418584:	and    BYTE PTR [eax-0x1ff3ca80],al
  41858a:	adc    ch,BYTE PTR [ecx+0x6f9bd4a9]
  418590:	pop    ss
  418591:	xor    DWORD PTR [ecx+0x2425a2af],edx
  418597:	sub    al,0xd0
  418599:	xchg   edx,eax
  41859a:	clc    
  41859b:	and    eax,0xa5f9e457
  4185a0:	lea    eax,[ecx]
  4185a2:	ins    DWORD PTR es:[edi],dx
  4185a3:	(bad)  
  4185a5:	outs   dx,BYTE PTR ds:[esi]
  4185a6:	(bad)  
  4185a7:	std    
  4185a8:	pop    edx
  4185a9:	retf   
  4185aa:	mov    ah,0xe7
  4185ac:	xchg   ecx,eax
  4185ad:	xchg   edx,eax
  4185ae:	jge    0x418575
  4185b0:	mov    dh,0xfd
  4185b2:	inc    edi
  4185b3:	mov    ch,0x4c
  4185b5:	lds    esi,FWORD PTR [eax-0x9]
  4185b8:	or     bh,dl
  4185ba:	int    0xd5
  4185bc:	popa   
  4185bd:	mov    edi,0xa22d0a3e
  4185c2:	dec    esp
  4185c3:	ret    0x7b67
  4185c6:	or     eax,0xd157d36
  4185cb:	mov    al,ds:0x336ffbe0
  4185d0:	push   ecx
  4185d1:	rol    BYTE PTR [edx+0x2d],cl
  4185d4:	dec    ecx
  4185d5:	pop    ebx
  4185d6:	js     0x4185cc
  4185d8:	and    al,0xcf
  4185da:	inc    edi
  4185db:	sbb    eax,DWORD PTR [ebp-0x75]
  4185de:	ins    BYTE PTR es:[edi],dx
  4185df:	xchg   ebx,eax
  4185e0:	adc    DWORD PTR [ebp-0xf131c22],esp
  4185e6:	lahf   
  4185e7:	or     al,0x4d
  4185e9:	push   cs
  4185ea:	cmp    al,BYTE PTR [edi]
  4185ec:	xchg   edx,eax
  4185ed:	jl     0x41863c
  4185ef:	(bad)  
  4185f0:	fimul  DWORD PTR [ecx]
  4185f2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4185f4:	frstor [ebp-0x3f6c4f0]
  4185fa:	jae    0x41863c
  4185fc:	and    al,0xd8
  4185fe:	scas   ax,WORD PTR es:[edi]
  418600:	es cwde 
  418602:	loope  0x418671
  418604:	adc    DWORD PTR [eax-0x54],edi
  418607:	pop    ebp
  418608:	mov    fs,WORD PTR ds:0xf459811b
  41860e:	aaa    
  41860f:	or     eax,0xf3186559
  418614:	idiv   BYTE PTR ss:[edi+ecx*1+0x1a57ef3]
  41861c:	adc    BYTE PTR [ebp-0x74],cl
  41861f:	xchg   ecx,eax
  418620:	popa   
  418621:	mov    ah,0xe0
  418623:	xor    dl,BYTE PTR [ebx-0x41]
  418626:	cmp    BYTE PTR [ebx+0x29],bl
  418629:	push   0x69923bd2
  41862e:	mov    dh,0x11
  418630:	jnp    0x4185c6
  418632:	scas   eax,DWORD PTR es:[edi]
  418633:	std    
  418634:	pop    ebp
  418635:	retf   0x5fb0
  418638:	scas   al,BYTE PTR es:[edi]
  418639:	push   esi
  41863a:	push   ds
  41863b:	dec    esp
  41863c:	repnz (bad) [ebx+edi*2+0x5b]
  418641:	ja     0x4185f1
  418643:	cli    
  418644:	mov    al,ah
  418646:	stos   BYTE PTR es:[edi],al
  418647:	in     al,dx
  418648:	jb     0x41866d
  41864a:	and    ch,ah
  41864c:	mov    eax,ds:0x7f388042
  418651:	mov    dl,0x3
  418653:	in     eax,dx
  418654:	call   0xc9f89d81
  418659:	mov    ah,0xf9
  41865b:	sbb    eax,esp
  41865d:	imul   BYTE PTR [ecx+ecx*2]
  418660:	or     DWORD PTR [esi+0x7],eax
  418663:	push   edi
  418664:	fst    QWORD PTR [edi]
  418666:	ficomp DWORD PTR [edi+0x3]
  418669:	sub    dh,BYTE PTR [esi-0x3e7dc76d]
  41866f:	mov    ebx,0x72c7f81
  418674:	in     eax,dx
  418675:	jle    0x4185fb
  418677:	xlat   BYTE PTR ds:[ebx]
  418678:	and    al,0xe7
  41867a:	stc    
  41867b:	jl     0x4186f4
  41867d:	leave  
  41867e:	fisubr DWORD PTR [esi-0x14f1a4ce]
  418684:	pop    esp
  418685:	cmp    BYTE PTR [eax],cl
  418687:	xchg   edi,eax
  418688:	pop    ss
  418689:	pop    es
  41868a:	push   edi
  41868b:	xchg   edx,eax
  41868c:	xchg   esp,eax
  41868d:	(bad)  
  41868e:	mov    eax,ds:0x612f20c
  418693:	test   DWORD PTR [ebx+0x7e],ebp
  418696:	into   
  418697:	call   0xab63265b
  41869c:	cmp    DWORD PTR [edi+0x2a],esp
  41869f:	aas    
  4186a0:	ds ds loopne 0x4186e8
  4186a4:	cmp    DWORD PTR [eax],esp
  4186a6:	adc    edx,DWORD PTR [ecx]
  4186a8:	pop    esp
  4186a9:	jnp    0x418689
  4186ab:	mov    esp,DWORD PTR [ebp-0x57]
  4186ae:	(bad)  
  4186af:	mov    WORD PTR [ebx],?
  4186b1:	inc    ebx
  4186b2:	mov    ?,esi
  4186b4:	jb     0x418693
  4186b6:	repz push es
  4186b8:	xor    al,0x21
  4186ba:	dec    BYTE PTR [ebx+0x79de38b1]
  4186c0:	es aam 0xe
  4186c3:	sub    al,0x19
  4186c5:	sbb    esp,eax
  4186c7:	rol    esp,cl
  4186c9:	or     DWORD PTR [esi-0x715c2005],0x3
  4186d0:	out    dx,al
  4186d1:	ror    DWORD PTR [eax+0x7a33b597],0x6c
  4186d8:	sub    DWORD PTR [ecx+0x42],edi
  4186db:	mov    ch,0x63
  4186dd:	xchg   BYTE PTR [ebx+0x77],al
  4186e0:	loopne 0x418709
  4186e2:	mov    ebp,0xc2761c2c
  4186e8:	sbb    BYTE PTR [ebx],al
  4186ea:	mov    edx,0xe5310c17
  4186ef:	mul    BYTE PTR [ecx]
  4186f1:	mov    eax,0x1a84ef36
  4186f6:	inc    esp
  4186f7:	push   esi
  4186f8:	xchg   ecx,eax
  4186f9:	or     ebp,ecx
  4186fb:	popa   
  4186fc:	xor    DWORD PTR [ebp+0x5],0x7262ef86
  418703:	pop    esi
  418704:	pusha  
  418705:	xchg   edi,eax
  418706:	ja     0x4186e0
  418708:	gs push esi
  41870a:	in     eax,0x99
  41870c:	fsubr  QWORD PTR [esi]
  41870e:	sub    bl,ch
  418710:	mov    ds:0x618d29f4,eax
  418716:	push   edx
  418717:	mov    BYTE PTR [edi+0x67],bh
  41871a:	fcomp  st(1)
  41871c:	inc    esp
  41871d:	xchg   edi,eax
  41871e:	mov    dh,0xf1
  418720:	inc    edx
  418721:	ja     0x4186a5
  418723:	jne    0x41871e
  418725:	mov    esi,0xc97e9adf
  41872a:	shr    BYTE PTR [ebp-0xca93398],1
  418730:	call   0x272d:0x4f1c7b18
  418737:	sub    DWORD PTR [ebx+0x5a],edi
  41873a:	mov    ah,0xa0
  41873c:	adc    esp,eax
  41873e:	das    
  41873f:	xor    dh,dl
  418741:	jmp    0xbf18ba6e
  418746:	push   ss
  418747:	rcl    DWORD PTR ds:0x39cedcb5,1
  41874d:	add    al,0x6e
  41874f:	cli    
  418750:	jno    0x41876e
  418752:	sbb    al,0x78
  418754:	inc    ebp
  418755:	out    0x76,al
  418757:	int3   
  418758:	test   al,0x92
  41875a:	fmul   QWORD PTR [ebp+0x376f16fc]
  418760:	mov    al,ds:0xdf527f6d
  418765:	sar    edi,cl
  418767:	add    eax,0x3ac7df12
  41876c:	inc    ch
  41876e:	xchg   ebx,eax
  41876f:	mov    WORD PTR [ebp+0x73],gs
  418772:	jg     0x41879a
  418774:	pop    edi
  418775:	mov    DWORD PTR [edi-0x25b62cf7],edi
  41877b:	sbb    eax,0x192dbb6e
  418780:	ins    DWORD PTR es:[edi],dx
  418781:	mov    bh,0xf9
  418783:	cmp    eax,0x974c9f88
  418788:	in     eax,dx
  418789:	popf   
  41878a:	aaa    
  41878b:	shl    ebx,cl
  41878d:	call   0x9d98f5d0
  418792:	lahf   
  418793:	retf   
  418794:	dec    ebp
  418795:	bound  eax,QWORD PTR [ebx-0x5d61a67a]
  41879b:	pushf  
  41879c:	and    BYTE PTR [ecx],ch
  41879e:	movlps QWORD PTR [eax],xmm5
  4187a1:	dec    ebp
  4187a2:	iret   
  4187a3:	xor    al,0x53
  4187a5:	ss mov ebx,0x3a95b2e9
  4187ab:	and    ecx,ecx
  4187ad:	add    edi,ebx
  4187af:	or     dh,BYTE PTR [ebx+0xb]
  4187b2:	pop    ss
  4187b3:	int3   
  4187b4:	mov    ch,0xb
  4187b6:	fwait
  4187b7:	mov    ecx,0xcc79d899
  4187bc:	pop    esp
  4187bd:	xor    BYTE PTR [edi],bh
  4187bf:	jnp    0x41877b
  4187c1:	imul   edi,DWORD PTR [ebx+0x66],0xffffffd5
  4187c5:	es xchg ecx,eax
  4187c7:	loop   0x41880b
  4187c9:	jmp    0x4187ff
  4187cb:	jae    0x41883f
  4187cd:	xlat   BYTE PTR ds:[ebx]
  4187ce:	sar    DWORD PTR [edx+0x4b6bf5b6],1
  4187d4:	push   ds
  4187d5:	aam    0x81
  4187d7:	cmp    edx,DWORD PTR [ebp+0x5d]
  4187da:	xor    cl,ah
  4187dc:	inc    esp
  4187dd:	stc    
  4187de:	or     DWORD PTR [edx],edx
  4187e0:	gs loopne 0x4187b7
  4187e3:	mov    DWORD PTR [ebx-0x32],ebx
  4187e6:	fld    TBYTE PTR [ebp*4+0x244d0486]
  4187ed:	xor    al,0xa1
  4187ef:	xchg   esp,eax
  4187f0:	pop    edi
  4187f1:	pop    eax
  4187f2:	mov    edi,0xa6aad9b9
  4187f7:	pop    esp
  4187f8:	pop    ebp
  4187f9:	and    ebp,DWORD PTR [ecx]
  4187fb:	mov    al,ds:0x1ae23cd9
  418800:	xor    BYTE PTR [ecx+0x5e],ah
  418803:	inc    ebx
  418804:	jge    0x4187f1
  418806:	and    ebp,0x7f00abae
  41880c:	mov    WORD PTR [eax],cs
  41880e:	push   ds
  41880f:	mov    ch,0x5e
  418811:	lods   al,BYTE PTR ds:[esi]
  418812:	xor    eax,0x320914f1
  418817:	lahf   
  418818:	xchg   bh,al
  41881a:	cmp    al,0xb9
  41881c:	in     eax,0x29
  41881e:	cmp    BYTE PTR [edx-0x4922b7f3],0xd
  418825:	mov    dh,0xa4
  418827:	loopne 0x4187f6
  418829:	imul   esp,DWORD PTR [esi-0x37c00ff6],0x18ae99f8
  418833:	jge    0x4187e8
  418835:	mov    bl,0xf4
  418837:	ror    BYTE PTR [esi],0x4c
  41883a:	hlt    
  41883b:	ds push eax
  41883d:	or     BYTE PTR [edi+0x7237c21b],cl
  418843:	ret    0x93c
  418846:	scas   al,BYTE PTR es:[edi]
  418847:	push   ebx
  418848:	aaa    
  418849:	add    al,0x64
  41884b:	dec    ecx
  41884c:	mov    ebp,0x29c7f7b6
  418851:	jecxz  0x418830
  418853:	jle    0x418889
  418855:	cli    
  418856:	ins    BYTE PTR es:[edi],dx
  418857:	jle    0x418847
  418859:	test   BYTE PTR [esi-0xefcbba5],ch
  41885f:	mov    ds:0x99d81f68,al
  418864:	mov    dh,0xd9
  418866:	dec    eax
  418867:	or     eax,0xd4caf032
  41886c:	(bad)  
  41886d:	sub    edi,DWORD PTR [esi+0x5f]
  418870:	dec    esp
  418871:	cmp    ebp,DWORD PTR [esi+0x3e2d021e]
  418877:	push   eax
  418878:	enter  0x4dee,0x11
  41887c:	xor    BYTE PTR [ebx-0x2e],bl
  41887f:	out    0x73,al
  418881:	sbb    DWORD PTR [esp+eiz*4],edi
  418884:	push   ebp
  418885:	scas   al,BYTE PTR es:[edi]
  418886:	jb     0x4188ce
  418888:	mov    bh,0x11
  41888a:	cs std 
  41888c:	jmp    0xfea39c99
  418891:	jecxz  0x4188e7
  418893:	shl    dl,0xe3
  418896:	add    BYTE PTR [ecx+0x96c0dcb],0x13
  41889d:	push   eax
  41889e:	int    0x7e
  4188a0:	fdivr  QWORD PTR [eax-0x7bb670a7]
  4188a6:	mov    WORD PTR [edi+0x66],ds
  4188a9:	dec    esi
  4188aa:	pop    eax
  4188ab:	imul   ebx,DWORD PTR [ebx+0x48],0x11
  4188af:	jmp    0x9023:0xf93114d9
  4188b6:	retf   
  4188b7:	enter  0x5e3a,0x3
  4188bb:	jge    0x41884b
  4188bd:	mov    es,WORD PTR [eax-0xb]
  4188c0:	mov    bl,0x44
  4188c2:	mov    ecx,0xdfba0bf7
  4188c7:	ficomp DWORD PTR [ecx]
  4188c9:	push   es
  4188ca:	das    
  4188cb:	or     DWORD PTR [eax],edi
  4188cd:	scas   al,BYTE PTR es:[edi]
  4188ce:	ds cmp dl,bl
  4188d1:	cli    
  4188d2:	out    dx,al
  4188d3:	add    BYTE PTR [ebx-0x504ba778],dh
  4188d9:	mov    al,ds:0x677bbe78
  4188de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188df:	sbb    BYTE PTR [edx+0x18],ch
  4188e2:	pop    esi
  4188e3:	xchg   esi,eax
  4188e4:	aas    
  4188e5:	sbb    cl,ch
  4188e7:	sbb    al,0xa8
  4188e9:	push   ss
  4188ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188eb:	jmp    0x418923
  4188ed:	nop
  4188ee:	inc    esp
  4188ef:	inc    esp
  4188f0:	stos   DWORD PTR es:[edi],eax
  4188f1:	sar    BYTE PTR [eax],cl
  4188f3:	add    al,0x90
  4188f5:	gs loopne 0x41894a
  4188f8:	(bad)  
  4188f9:	xor    DWORD PTR [esi+eiz*8+0x23],ebx
  4188fd:	les    edi,FWORD PTR [edx+edi*4+0x483b79a4]
  418904:	jno    0x4188f6
  418906:	sub    al,0x55
  418908:	xchg   ebp,eax
  418909:	ins    BYTE PTR es:[edi],dx
  41890a:	dec    ecx
  41890b:	mov    edx,0x7c86fd98
  418910:	aad    0xa9
  418912:	cmp    DWORD PTR [ebp+0x74b23a4c],ebp
  418918:	sti    
  418919:	out    0x44,eax
  41891b:	jmp    0xb0e1906a
  418920:	inc    edx
  418921:	fldenv ss:[edx+esi*4+0x4f]
  418926:	add    DWORD PTR [eax],ecx
  418928:	out    0xfd,al
  41892a:	jle    0x4188e7
  41892c:	mov    al,ds:0x88e41500
  418931:	pop    ebp
  418932:	mov    eax,0x30596ecd
  418937:	jbe    0x418935
  418939:	loope  0x41891d
  41893b:	std    
  41893c:	das    
  41893d:	repnz (bad)
  418940:	js     0x41894a
  418942:	sbb    DWORD PTR [eax-0x23],ebp
  418945:	aaa    
  418946:	cmp    BYTE PTR [edi-0x21f657f5],dl
  41894c:	pop    esp
  41894d:	inc    esi
  41894e:	cmp    ebp,DWORD PTR [ecx-0x80]
  418951:	loopne 0x418906
  418953:	sar    BYTE PTR [esp+esi*8-0xb1d0d83],1
  41895a:	data16 aad 0x8a
  41895d:	pop    ecx
  41895e:	call   0x4d5e:0x130b770f
  418965:	popf   
  418966:	cmp    bh,bh
  418968:	test   eax,0xba1664e2
  41896d:	pop    eax
  41896e:	xor    eax,DWORD PTR [eax]
  418970:	push   0x68
  418972:	fadd   DWORD PTR [ebx]
  418974:	xchg   edi,eax
  418975:	les    edx,FWORD PTR [edi-0x22]
  418978:	mov    esp,DWORD PTR [ebx-0x56075b3]
  41897e:	lahf   
  41897f:	mov    ebx,0x332f9241
  418984:	jno    0x41894f
  418986:	xor    eax,0x3655b4e2
  41898b:	xor    eax,0xa3ee20c9
  418990:	repz fild WORD PTR [ebp-0xe1a6869]
  418997:	fsubr  st(3),st
  418999:	or     al,0x21
  41899b:	xchg   edi,eax
  41899c:	in     al,0x45
  41899e:	sbb    eax,0x392652a0
  4189a3:	jmp    0x418995
  4189a5:	rcl    BYTE PTR [esi+0x91e7687],1
  4189ab:	adc    al,BYTE PTR gs:[eax+0x3c]
  4189af:	repz push edi
  4189b1:	push   esi
  4189b2:	int3   
  4189b3:	and    BYTE PTR [ebx],al
  4189b5:	mov    edi,0xb95f3f69
  4189ba:	pop    ecx
  4189bb:	push   ecx
  4189bc:	fistp  QWORD PTR [eax+0x38d162ee]
  4189c2:	and    al,0xf6
  4189c4:	lods   eax,DWORD PTR ds:[esi]
  4189c5:	xchg   BYTE PTR [edx],bl
  4189c7:	push   eax
  4189c8:	or     cl,BYTE PTR [ebx-0x34]
  4189cb:	add    al,0x92
  4189cd:	or     BYTE PTR [ecx+esi*1],dl
  4189d0:	jne    0x4189fe
  4189d2:	and    BYTE PTR [ebx-0x7],bh
  4189d5:	or     al,0x61
  4189d7:	or     cl,BYTE PTR [edi-0x7f]
  4189da:	les    edi,FWORD PTR [ebx-0xc]
  4189dd:	xor    bx,cx
  4189e0:	sub    al,0xf9
  4189e2:	jnp    0x4189ed
  4189e4:	inc    edx
  4189e5:	inc    edx
  4189e6:	enter  0x9624,0x4
  4189ea:	outs   dx,DWORD PTR ds:[esi]
  4189eb:	or     eax,0xad8168a1
  4189f0:	pop    esi
  4189f1:	jbe    0x4189d8
  4189f3:	call   0x2663:0x82ca4f6b
  4189fa:	xor    al,0x63
  4189fc:	test   eax,0x81b492e8
  418a01:	sub    DWORD PTR [edx+0x67],0xffffffaa
  418a05:	sbb    ecx,edi
  418a07:	jo     0x418a35
  418a09:	dec    ecx
  418a0a:	(bad)  
  418a0c:	push   0xb4f82299
  418a11:	sbb    al,0x9e
  418a13:	xchg   edx,eax
  418a14:	(bad)  
  418a15:	(bad)  [edx+0x12]
  418a18:	cdq    
  418a19:	sbb    BYTE PTR [esi],dl
  418a1b:	retf   0x219e
  418a1e:	adc    edi,DWORD PTR [esi+0xf1ad3be]
  418a24:	and    al,0xa8
  418a26:	daa    
  418a27:	sbb    ebx,DWORD PTR [edx-0x7d]
  418a2a:	dec    ebx
  418a2b:	test   eax,0x6d003d2d
  418a30:	fwait
  418a31:	loopne 0x418a25
  418a33:	pop    eax
  418a34:	mov    ch,0x36
  418a36:	pop    es
  418a37:	jle    0x418a08
  418a39:	fst    DWORD PTR [edi]
  418a3b:	pop    ecx
  418a3c:	jmp    0x5bba:0x42d104c3
  418a43:	out    0xe3,al
  418a45:	xchg   ebp,eax
  418a46:	ret    
  418a47:	jp     0x418a83
  418a49:	ins    BYTE PTR es:[edi],dx
  418a4a:	hlt    
  418a4b:	pop    ebx
  418a4c:	mov    ecx,DWORD PTR [edx-0x12]
  418a4f:	leave  
  418a50:	dec    esi
  418a51:	push   ss
  418a52:	add    edi,DWORD PTR [esi-0x49]
  418a55:	mov    ds:0x993cdbcc,eax
  418a5a:	test   eax,0x785cd7ac
  418a5f:	ins    BYTE PTR es:[edi],dx
  418a60:	pop    ss
  418a61:	lahf   
  418a62:	aam    0x71
  418a64:	xchg   esi,eax
  418a65:	nop
  418a66:	adc    ecx,DWORD PTR [ecx-0x378fab8]
  418a6c:	cmp    BYTE PTR [eax+eax*8],0x9
  418a70:	imul   edx,edx,0x9b4be00b
  418a76:	retf   
  418a77:	sbb    eax,0x9376a28a
  418a7c:	cwde   
  418a7d:	shr    BYTE PTR [esi-0x7a],cl
  418a80:	and    ebp,DWORD PTR [edx-0x62]
  418a83:	leave  
  418a84:	jle    0x418a5a
  418a86:	pop    edx
  418a87:	popa   
  418a88:	pop    eax
  418a89:	adc    DWORD PTR [eax+0x1d3a1dd3],eax
  418a8f:	jbe    0x418aa0
  418a91:	xor    al,0x1f
  418a93:	pop    esi
  418a94:	push   ecx
  418a95:	(bad)  
  418a96:	loop   0x418a5b
  418a98:	push   ds
  418a99:	aas    
  418a9a:	xchg   DWORD PTR [ebx],ebx
  418a9c:	dec    ebx
  418a9d:	or     esp,DWORD PTR [esi]
  418a9f:	stos   BYTE PTR es:[edi],al
  418aa0:	test   BYTE PTR [edi+0x24feb133],0x8c
  418aa7:	int    0x8b
  418aa9:	fisubr DWORD PTR [ecx+0x57]
  418aac:	repnz inc esi
  418aae:	jmp    0xbea69d27
  418ab3:	mov    DWORD PTR [edi],0xec9fb33e
  418ab9:	or     eax,0x7c81873
  418abe:	mov    ah,0x88
  418ac0:	sub    al,ch
  418ac2:	sub    eax,0x89eb34c3
  418ac7:	inc    DWORD PTR [eax]
  418ac9:	pop    ebp
  418aca:	mov    ebx,0xd09be4e8
  418acf:	daa    
  418ad0:	imul   DWORD PTR [edi-0x14]
  418ad3:	jg     0x418ae3
  418ad5:	fnstenv [edx]
  418ad7:	xlat   BYTE PTR ds:[ebx]
  418ad8:	in     al,0x4a
  418ada:	sub    ch,0xa9
  418add:	pop    ds
  418ade:	mov    WORD PTR [ebx-0x24f6340c],ss
  418ae4:	pop    ds
  418ae5:	jmp    0x418a76
  418ae7:	xor    BYTE PTR [edx],dh
  418ae9:	ror    edi,cl
  418aeb:	icebp  
  418aec:	adc    eax,0xb1e1e049
  418af1:	enter  0xe19f,0x38
  418af5:	aam    0x81
  418af7:	mov    dh,BYTE PTR [eax-0x68854cd6]
  418afd:	(bad)  
  418afe:	dec    ebp
  418aff:	pop    edi
  418b00:	fldcw  WORD PTR cs:[esi+eiz*4+0x246ca898]
  418b08:	cli    
  418b09:	out    dx,eax
  418b0a:	shl    BYTE PTR es:[ecx+0x6c6aa754],1
  418b11:	or     DWORD PTR [edx+eiz*8-0x4e6bfa80],eax
  418b18:	jns    0x418af4
  418b1a:	add    BYTE PTR [edi-0x58],0x12
  418b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1f:	inc    esi
  418b20:	mov    dh,0xc4
  418b22:	jo     0x418ada
  418b24:	mov    edx,0xc305e85d
  418b29:	xor    dh,BYTE PTR [ebx+0x31]
  418b2c:	adc    al,0x49
  418b2e:	cdq    
  418b2f:	test   BYTE PTR [eax+0x79],dl
  418b32:	sbb    DWORD PTR [eax+0x17ed615a],0x35f4bcbd
  418b3c:	jae    0x418af9
  418b3e:	xchg   edx,eax
  418b3f:	mov    esi,0x5d0d92b7
  418b44:	ins    DWORD PTR es:[edi],dx
  418b45:	jno    0x418b45
  418b47:	into   
  418b48:	dec    eax
  418b49:	and    al,BYTE PTR [esp+eiz*4]
  418b4c:	push   0x21
  418b4e:	lahf   
  418b4f:	pop    ebx
  418b50:	aad    0x10
  418b52:	dec    ecx
  418b53:	mov    BYTE PTR [esi+0x7e],bh
  418b56:	enter  0x6627,0x80
  418b5a:	and    dh,BYTE PTR [ecx]
  418b5c:	mov    ebx,0xf1e8217e
  418b61:	lods   eax,DWORD PTR ds:[esi]
  418b62:	std    
  418b63:	iret   
  418b64:	lea    ebx,[edi]
  418b66:	dec    esp
  418b67:	loope  0x418baa
  418b69:	dec    DWORD PTR [esp+eiz*2-0x4b9498d8]
  418b70:	inc    edi
  418b71:	jge    0x418bdf
  418b73:	mov    dh,0x9
  418b75:	mov    bl,0x7c
  418b77:	pop    ss
  418b78:	in     eax,0xcb
  418b7a:	inc    esi
  418b7b:	sub    ch,bl
  418b7d:	mov    ah,bl
  418b7f:	mov    cl,0xb7
  418b81:	adc    dl,bh
  418b83:	dec    ebx
  418b84:	aam    0x3f
  418b86:	push   ebp
  418b87:	add    esi,DWORD PTR [edi+eiz*1-0x3d0fc26c]
  418b8e:	cmp    BYTE PTR [ecx],dh
  418b90:	jmp    0x418b15
  418b92:	sbb    DWORD PTR [eax+0x7cc83f8d],edi
  418b98:	das    
  418b99:	xlat   BYTE PTR ds:[ebx]
  418b9a:	test   eax,0xb61266f3
  418b9f:	call   FWORD PTR [esi]
  418ba1:	mov    ds:0x9cd1e0ff,eax
  418ba6:	call   0x433ce043
  418bab:	add    DWORD PTR [eax+0x6f0bb509],ebp
  418bb1:	jae    0x418bf5
  418bb3:	aam    0x5a
  418bb5:	enter  0x347e,0xa4
  418bb9:	mov    ah,0x82
  418bbb:	repz inc edi
  418bbd:	(bad)  
  418bbe:	in     al,0xd7
  418bc0:	mov    ebp,0x4abccd49
  418bc5:	push   0xbb9ab41d
  418bca:	sar    DWORD PTR [ebp-0x73],cl
  418bcd:	cmc    
  418bce:	sub    eax,0x1eb1b1dd
  418bd3:	in     al,0x5b
  418bd5:	xor    eax,0x5d51a2d0
  418bda:	std    
  418bdb:	inc    edx
  418bdc:	div    BYTE PTR [ebp+0x22]
  418bdf:	cld    
  418be0:	iret   
  418be1:	mov    ds,WORD PTR [eax-0x41b2b3e5]
  418be7:	cmc    
  418be8:	scas   eax,DWORD PTR es:[edi]
  418be9:	gs das 
  418beb:	mov    ds:0x291a1382,al
  418bf0:	push   esi
  418bf1:	xor    dl,0x9a
  418bf4:	mov    esp,0xeb03c505
  418bf9:	xchg   bh,al
  418bfb:	lea    esi,[edi-0x64f33b56]
  418c01:	push   ss
  418c02:	repz sar ah,0xf3
  418c06:	sub    esi,ecx
  418c08:	pop    ss
  418c09:	je     0x418c6d
  418c0b:	(bad)  
  418c0c:	sti    
  418c0d:	push   ebp
  418c0e:	jne    0x418c01
  418c10:	mov    ecx,DWORD PTR ds:0xf829d51f
  418c16:	mov    al,ds:0xedb572d8
  418c1b:	bound  ebx,QWORD PTR [ebx-0x4b]
  418c1e:	cld    
  418c1f:	or     esp,DWORD PTR [ebx]
  418c21:	cmp    eax,0xcc53dc53
  418c26:	inc    esi
  418c27:	jno    0x418beb
  418c29:	aad    0xa6
  418c2b:	fwait
  418c2c:	jae    0x418c9b
  418c2e:	fsubr  st,st(1)
  418c30:	test   al,0xf2
  418c32:	cmp    BYTE PTR [eax-0x303d20bc],dl
  418c38:	xchg   ecx,eax
  418c39:	mov    ebp,0x368e8938
  418c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3f:	xor    BYTE PTR [edi],ch
  418c41:	fld    QWORD PTR [edx+ebx*4-0x65]
  418c45:	lods   eax,DWORD PTR ds:[esi]
  418c46:	inc    ebp
  418c47:	js     0x418c4b
  418c49:	adc    eax,0x82edadc3
  418c4e:	dec    eax
  418c4f:	jp     0x418c1f
  418c51:	xchg   ebx,eax
  418c52:	jns    0x418c1f
  418c54:	inc    esi
  418c55:	sbb    ch,BYTE PTR [ebx-0x3b]
  418c58:	ds add al,0x52
  418c5b:	aad    0x11
  418c5d:	or     eax,0x683d8066
  418c62:	sar    DWORD PTR [esi],cl
  418c64:	mov    ds:0x9d4e7fb6,eax
  418c69:	fs adc al,0x5a
  418c6c:	out    0x18,al
  418c6e:	mov    bl,0x15
  418c70:	sub    eax,edi
  418c72:	das    
  418c73:	clc    
  418c74:	leave  
  418c75:	xor    dl,al
  418c77:	daa    
  418c78:	adc    DWORD PTR [ebp+eax*2-0x44],ebx
  418c7c:	mov    ds:0xa7d938d4,al
  418c81:	jno    0x418cdd
  418c83:	lahf   
  418c84:	cli    
  418c85:	dec    edi
  418c86:	adc    DWORD PTR [ebx+0x2b],ecx
  418c89:	rcr    eax,cl
  418c8b:	ror    DWORD PTR [edx+0x75fcc711],1
  418c91:	sub    DWORD PTR [edx+ecx*4+0x7],eax
  418c95:	push   ebx
  418c96:	pop    ebp
  418c97:	add    eax,0x458c2262
  418c9c:	(bad)  
  418c9d:	cwde   
  418c9e:	inc    ecx
  418c9f:	in     eax,0x59
  418ca1:	in     eax,0x78
  418ca3:	sti    
  418ca4:	addr16 jns 0x418c8c
  418ca7:	test   BYTE PTR [eax],dl
  418ca9:	mov    ds:0x592c89d8,eax
  418cae:	jp     0x418d24
  418cb0:	sahf   
  418cb1:	jne    0x418ca9
  418cb3:	mov    esp,esi
  418cb5:	push   edx
  418cb6:	es mov DWORD PTR fs:[edx-0x6ad971e2],ebx
  418cbe:	jmp    0xe7fad44e
  418cc3:	xchg   DWORD PTR [edi],esi
  418cc5:	fucompp 
  418cc7:	xor    cl,ch
  418cc9:	leave  
  418cca:	aam    0x75
  418ccc:	int    0x4f
  418cce:	mov    al,ds:0x68a3ec5f
  418cd3:	mov    ch,0xb2
  418cd5:	push   esi
  418cd6:	inc    ch
  418cd8:	sub    DWORD PTR [ebp-0x25],eax
  418cdb:	(bad)  
  418cdc:	sbb    dh,BYTE PTR [edi]
  418cde:	jae    0x418c6e
  418ce0:	adc    cl,0x83
  418ce3:	stos   BYTE PTR es:[edi],al
  418ce4:	jne    0x418c9b
  418ce6:	push   es
  418ce7:	jo     0x418d00
  418ce9:	mov    esp,0x1a109987
  418cee:	shl    DWORD PTR ds:0x9cc9826e,0xa6
  418cf5:	cwde   
  418cf6:	or     dl,BYTE PTR [ebp+0x31819f15]
  418cfc:	iret   
  418cfd:	fcomp  DWORD PTR [ebx-0x2a404a9c]
  418d03:	(bad)  
  418d04:	jge    0x418d75
  418d06:	mov    ah,BYTE PTR [eax+ecx*8]
  418d09:	dec    esp
  418d0a:	xor    DWORD PTR [edi+0x1d],0xa7f010e0
  418d11:	(bad)  
  418d12:	loop   0x418d0c
  418d14:	jae    0x418d3a
  418d16:	aam    0x66
  418d18:	sub    eax,0x901f7ab5
  418d1d:	rcr    BYTE PTR [esi+ebp*4+0x67c3e94e],1
  418d24:	mov    esi,DWORD PTR [ecx]
  418d26:	cmp    DWORD PTR [ebx],0xb38970f1
  418d2c:	stos   DWORD PTR es:[edi],eax
  418d2d:	sub    al,BYTE PTR [esi-0x18]
  418d30:	push   ss
  418d31:	test   eax,0xe734e19e
  418d36:	(bad)  
  418d37:	bound  esi,QWORD PTR [edx+0x5a]
  418d3a:	rcr    DWORD PTR [ebx+0x333c0cad],1
  418d40:	fisttp QWORD PTR ds:0xa653e6fc
  418d46:	pop    ebx
  418d47:	bound  ecx,QWORD PTR [eax-0x77e02761]
  418d4d:	data16 (bad) 
  418d4f:	jmp    DWORD PTR [edx-0x41]
  418d52:	mov    esi,0xc15b99b3
  418d57:	xchg   ecx,eax
  418d58:	outs   dx,DWORD PTR ds:[esi]
  418d59:	push   ebp
  418d5a:	clc    
  418d5b:	scas   al,BYTE PTR es:[edi]
  418d5c:	push   eax
  418d5d:	ins    BYTE PTR es:[edi],dx
  418d5e:	lods   eax,DWORD PTR ds:[esi]
  418d5f:	test   al,0x3b
  418d61:	and    BYTE PTR [edx+ebx*8+0x8],cl
  418d65:	lock cdq 
  418d67:	pop    ebp
  418d68:	mov    edi,0xae2b104a
  418d6d:	and    al,0x5b
  418d6f:	fcmovnb st,st(2)
  418d71:	in     al,0xde
  418d73:	sbb    ch,0xed
  418d76:	jne    0x418dc2
  418d78:	mov    WORD PTR ds:0x82c8b802,ds
  418d7e:	adc    DWORD PTR [edi+0x2d9ae551],esp
  418d84:	(bad)  
  418d85:	cwde   
  418d86:	sub    ch,BYTE PTR [ecx-0x6b]
  418d89:	ins    DWORD PTR es:[edi],dx
  418d8a:	or     DWORD PTR [eax+0x430a7322],edi
  418d90:	and    cl,BYTE PTR ds:0x3be5b4b4
  418d96:	in     al,0xba
  418d98:	xor    dh,BYTE PTR [ecx+0x2f908aaf]
  418d9e:	cmp    al,0xfb
  418da0:	fwait
  418da1:	mov    ch,dl
  418da3:	aaa    
  418da4:	(bad)  
  418da5:	js     0x418de5
  418da7:	loop   0x418d73
  418da9:	mov    ebp,0xd946322b
  418dae:	imul   ecx,ebp,0xffffffbe
  418db1:	inc    esp
  418db2:	inc    eax
  418db3:	repz icebp 
  418db5:	xlat   BYTE PTR ds:[ebx]
  418db6:	sub    DWORD PTR [edi],0x5df8198f
  418dbc:	jns    0x418db4
  418dbe:	mov    ?,WORD PTR [edx+0x44]
  418dc1:	out    dx,eax
  418dc2:	loope  0x418dcb
  418dc4:	pop    eax
  418dc5:	pop    esp
  418dc6:	mov    esi,0x65869d0f
  418dcb:	repz push ecx
  418dcd:	jo     0x418e3b
  418dcf:	pop    eax
  418dd0:	enter  0xb065,0xd7
  418dd4:	imul   ebx,DWORD PTR [edx],0xffffffae
  418dd7:	popa   
  418dd8:	adc    ebx,DWORD PTR [ebx-0x24]
  418ddb:	inc    ecx
  418ddc:	add    esi,DWORD PTR [ebx+0x1091c078]
  418de2:	enter  0x3a76,0xba
  418de6:	or     ebp,DWORD PTR [ebp-0x1b]
  418de9:	mov    ah,0x3f
  418deb:	jae    0x418e2d
  418ded:	mul    dh
  418def:	xor    esi,ebp
  418df1:	dec    eax
  418df2:	lds    edi,FWORD PTR [edi+0x44]
  418df5:	daa    
  418df6:	push   ss
  418df7:	sbb    eax,0x58611e04
  418dfc:	cdq    
  418dfd:	sub    BYTE PTR [ebx-0x6f],dh
  418e00:	pop    esp
  418e01:	ret    0x3e5d
  418e04:	sbb    DWORD PTR [edi+0x39298f06],eax
  418e0a:	mov    esp,eax
  418e0c:	scas   eax,DWORD PTR es:[edi]
  418e0d:	push   esi
  418e0e:	idiv   BYTE PTR [ebx+eax*2-0x9]
  418e12:	das    
  418e13:	mov    gs,WORD PTR [ecx+0x1f89c34f]
  418e19:	pop    ss
  418e1a:	mov    al,0x38
  418e1c:	retf   
  418e1d:	rol    DWORD PTR [edx+0x7dccea1e],cl
  418e23:	imul   eax,ecx,0xffffffad
  418e26:	leave  
  418e27:	xchg   edx,eax
  418e28:	out    0x8b,eax
  418e2a:	paddb  mm2,QWORD PTR [esi+0x6037f5e5]
  418e31:	jo     0x418e52
  418e33:	dec    eax
  418e34:	(bad)  
  418e35:	lods   al,BYTE PTR ds:[esi]
  418e36:	xor    edx,edi
  418e38:	add    al,0xe0
  418e3a:	dec    ebx
  418e3b:	mov    edx,0x18a89e9a
  418e40:	mov    cl,0xb
  418e42:	add    dl,BYTE PTR [edi+0x4a]
  418e45:	push   cs
  418e46:	mov    esp,0x3fb2d5b2
  418e4b:	mov    ds:0x3cb81097,eax
  418e50:	int    0x3a
  418e52:	js     0x418e18
  418e54:	int3   
  418e55:	and    ch,ch
  418e57:	mov    ebp,DWORD PTR [eax+ebp*4-0x34]
  418e5b:	mov    BYTE PTR [ecx],cl
  418e5d:	add    dl,0xd8
  418e60:	add    eax,0x4481d81a
  418e65:	out    dx,al
  418e66:	add    esp,DWORD PTR [ecx]
  418e68:	dec    edi
  418e69:	inc    BYTE PTR [ebx+ecx*1+0x4d92c3c8]
  418e70:	fisttp WORD PTR [esp+ebp*8+0x772a0ce3]
  418e77:	jns    0x418e70
  418e79:	ss out dx,al
  418e7b:	imul   ebp,ebx,0x437669bf
  418e81:	data16 lods al,BYTE PTR ds:[esi]
  418e83:	in     al,dx
  418e84:	imul   ebp,ebp,0x9aac08fb
  418e8a:	sbb    ah,BYTE PTR [edi-0x6312ada9]
  418e90:	rcl    DWORD PTR [esi],cl
  418e92:	inc    edx
  418e93:	sti    
  418e94:	sbb    dl,al
  418e96:	push   eax
  418e97:	mov    ebp,0xf66c5b5f
  418e9c:	mov    WORD PTR [ebp-0x30],cs
  418e9f:	xchg   ebx,eax
  418ea0:	retf   
  418ea1:	(bad)  
  418ea2:	mov    ss,WORD PTR [edi-0x327ba120]
  418ea8:	out    0xe6,eax
  418eaa:	adc    al,bl
  418eac:	out    0x77,eax
  418eae:	jge    0x418ea6
  418eb0:	xlat   BYTE PTR ds:[ebx]
  418eb1:	pop    eax
  418eb2:	mov    ds:0xf54ca51a,al
  418eb7:	inc    esi
  418eb8:	add    bl,al
  418eba:	cmp    BYTE PTR [esi-0x4b52aabb],ch
  418ec0:	imul   ebx,eax,0xffffffa2
  418ec3:	std    
  418ec4:	(bad)  
  418ec5:	cmp    eax,0x9cbfec7c
  418eca:	ins    BYTE PTR es:[edi],dx
  418ecb:	stos   DWORD PTR es:[edi],eax
  418ecc:	sub    eax,DWORD PTR [ebx-0x3c82cf85]
  418ed2:	adc    esp,ecx
  418ed4:	ret    
  418ed5:	jmp    0x7660:0x11ef8c6e
  418edc:	pop    es
  418edd:	push   ecx
  418ede:	aaa    
  418edf:	ja     0x418ece
  418ee1:	shrd   DWORD PTR [edx],esp,0xbd
  418ee5:	mov    ss,WORD PTR [ebx-0x5e]
  418ee8:	cmp    eax,0xb8bcdc23
  418eed:	xor    BYTE PTR [edi],0xb7
  418ef0:	call   0xf860:0x4c0aa330
  418ef7:	or     al,0x99
  418ef9:	mov    eax,0x13e4c5dd
  418efe:	jl     0x418ef1
  418f00:	retf   0xfb07
  418f03:	mov    edi,0x61e35b5d
  418f08:	add    esp,DWORD PTR [eax-0x72]
  418f0b:	push   edi
  418f0c:	mov    ecx,0xe64cf975
  418f11:	xchg   esp,eax
  418f12:	inc    esi
  418f13:	(bad)  
  418f14:	push   ss
  418f15:	mov    eax,ds:0x98d91fb4
  418f1a:	outs   dx,BYTE PTR es:[esi]
  418f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1d:	add    eax,DWORD PTR [ebx-0x550d3dc6]
  418f23:	dec    ecx
  418f24:	push   ds
  418f25:	xor    eax,0xed967b
  418f2a:	pop    esi
  418f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2c:	lahf   
  418f2d:	ret    
  418f2e:	cdq    
  418f2f:	xchg   esp,eax
  418f30:	call   0x8287c47c
  418f35:	push   ss
  418f36:	out    dx,eax
  418f37:	inc    ebx
  418f38:	sub    bh,BYTE PTR [ecx-0x4f]
  418f3b:	cmp    cl,BYTE PTR [edi+0x23]
  418f3e:	cs push ecx
  418f40:	fwait
  418f41:	mov    ebx,ebp
  418f43:	inc    ebx
  418f44:	push   cs
  418f45:	add    dh,dl
  418f47:	aam    0x98
  418f49:	addr16 popa 
  418f4b:	adc    eax,0xe0e5aa87
  418f50:	mov    bl,0x5e
  418f52:	mov    bh,BYTE PTR [edi+0x47]
  418f55:	jo     0x418f42
  418f57:	enter  0x46ba,0x91
  418f5b:	xor    eax,0x5a2eb4fa
  418f60:	inc    esp
  418f61:	mov    al,cs:0xd14932ad
  418f67:	add    eax,0x6ea61cc0
  418f6c:	mov    fs,WORD PTR [edi]
  418f6e:	jmp    0x418f99
  418f70:	lea    edi,[ebx-0x1f]
  418f73:	gs adc ebx,esp
  418f76:	imul   ah
  418f78:	dec    eax
  418f79:	mov    dh,0x5f
  418f7b:	push   0x70bad20f
  418f80:	dec    DWORD PTR [esi+0x65]
  418f83:	mov    ecx,0x59727e72
  418f88:	repz pop esi
  418f8a:	pop    esi
  418f8b:	mov    eax,edi
  418f8d:	mov    WORD PTR [edi+edx*4+0x233b82d1],ss
  418f94:	push   ecx
  418f95:	(bad)  
  418f96:	fs js  0x418f58
  418f99:	dec    eax
  418f9a:	cmp    bl,BYTE PTR ds:0x56c9846e
  418fa0:	daa    
  418fa1:	lods   eax,DWORD PTR ds:[esi]
  418fa2:	inc    esp
  418fa3:	inc    ebx
  418fa4:	and    BYTE PTR [edi],0x18
  418fa7:	jmp    0x418fc5
  418fa9:	add    BYTE PTR [edi+ecx*2+0x3e],ch
  418fad:	(bad)  
  418fae:	mov    ebp,0x23e4c6fb
  418fb3:	test   al,0xa4
  418fb5:	enter  0x5b9b,0xc9
  418fb9:	cs mov eax,0x1c1ed05e
  418fbf:	or     eax,0xe9ce4e28
  418fc4:	test   bh,0xf9
  418fc7:	xor    dh,dl
  418fc9:	lds    ebx,FWORD PTR [esi-0x504441bd]
  418fcf:	lea    edx,[eax]
  418fd1:	inc    edx
  418fd2:	call   0x8474158c
  418fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd9:	pop    ss
  418fda:	push   cs
  418fdb:	jbe    0x418f5d
  418fdd:	push   ecx
  418fde:	fadd   st,st(5)
  418fe0:	dec    esp
  418fe1:	fcomp  DWORD PTR [eax-0x3d]
  418fe4:	cmp    ah,BYTE PTR [eax]
  418fe6:	out    0x34,al
  418fe8:	je     0x419037
  418fea:	sub    BYTE PTR [eax],0x25
  418fed:	jle    0x418fe7
  418fef:	xchg   edx,eax
  418ff0:	or     bl,BYTE PTR [edx]
  418ff2:	popf   
  418ff3:	sub    DWORD PTR [ecx],ebp
  418ff5:	jge    0x419073
  418ff7:	sub    al,0x35
  418ff9:	pop    ax
  418ffb:	cld    
  418ffc:	ret    
  418ffd:	in     eax,dx
  418ffe:	jno    0x41905b
  419000:	mov    eax,ds:0x1b512124
  419005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419006:	jecxz  0x419012
  419008:	push   ebx
  419009:	or     al,0x37
  41900b:	fstp   DWORD PTR [esi+0x3b5c06a2]
  419011:	sub    DWORD PTR [ecx+0x3131feed],edx
  419017:	or     BYTE PTR [esi-0x3bc7e91a],bh
  41901d:	es hlt 
  41901f:	lea    eax,[edx]
  419021:	sub    al,0x8d
  419023:	ret    
  419024:	test   DWORD PTR [ecx+0x2f],esi
  419027:	dec    ebx
  419028:	test   al,0x87
  41902a:	retf   0x73bb
  41902d:	inc    ebx
  41902e:	xchg   ebp,eax
  41902f:	and    DWORD PTR [edi+0x59af9bfe],ebp
  419035:	pop    ecx
  419036:	push   edi
  419037:	call   0x82ca387a
  41903c:	idiv   DWORD PTR [ebp-0x6d]
  41903f:	xor    eax,0x9448f4f9
  419044:	test   edi,edi
  419046:	aas    
  419047:	cmc    
  419048:	clc    
  419049:	pushf  
  41904a:	xchg   esp,eax
  41904b:	xchg   esp,eax
  41904c:	xlat   BYTE PTR ds:[ebx]
  41904d:	es out 0x65,eax
  419050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419052:	or     dh,BYTE PTR [ecx+0x6a]
  419055:	repz cmp cl,ch
  419058:	dec    edi
  419059:	cmp    cl,bh
  41905b:	fild   DWORD PTR [edi+0x52]
  41905e:	or     BYTE PTR [ecx+ebp*1-0x5e],cl
  419062:	stos   BYTE PTR es:[edi],al
  419063:	sub    bl,BYTE PTR [esi-0x3641ab4b]
  419069:	mov    ebp,0x7f14348d
  41906e:	cmp    ebp,DWORD PTR [esi+edi*4-0x9]
  419072:	pop    eax
  419073:	mov    dl,BYTE PTR [edx]
  419075:	and    eax,0xc78fe260
  41907a:	adc    eax,0xbfdf2163
  41907f:	je     0x41904d
  419081:	sbb    DWORD PTR [esi],ecx
  419083:	xor    BYTE PTR [ebp+0x6b2a581b],dl
  419089:	popf   
  41908a:	xor    al,0xe8
  41908c:	ja     0x419093
  41908e:	add    al,0xc3
  419090:	fldcw  WORD PTR [ebp+0x5c6e547c]
  419096:	int    0x3
  419098:	jne    0x419038
  41909a:	jecxz  0x41904e
  41909c:	mov    bl,0xb3
  41909e:	xchg   esp,eax
  41909f:	dec    cl
  4190a1:	ins    BYTE PTR es:[edi],dx
  4190a2:	and    bl,BYTE PTR [ecx]
  4190a4:	lds    esp,FWORD PTR [edi]
  4190a6:	dec    eax
  4190a7:	pop    esi
  4190a8:	mov    ebx,0xa4f5a5af
  4190ad:	add    DWORD PTR [ecx+0x63635851],0x946ec6b9
  4190b7:	or     DWORD PTR [eax+0x61],esi
  4190ba:	and    BYTE PTR [ecx+0x71],al
  4190bd:	in     al,dx
  4190be:	push   ecx
  4190bf:	adc    BYTE PTR [edx],al
  4190c1:	pop    esp
  4190c2:	(bad)  
  4190c4:	inc    edi
  4190c5:	xchg   esp,eax
  4190c6:	dec    eax
  4190c7:	mov    esp,0xd87ff638
  4190cc:	mov    bh,0xa0
  4190ce:	frstpm(287 only) 
  4190d0:	shr    BYTE PTR [esi-0x1a],cl
  4190d3:	push   ebp
  4190d4:	or     BYTE PTR [esi],bh
  4190d6:	push   esp
  4190d7:	sub    esi,ecx
  4190d9:	out    0x90,al
  4190db:	sub    BYTE PTR [esi-0x16e73dbf],dl
  4190e1:	sub    dh,BYTE PTR [ecx+esi*2-0x77]
  4190e5:	out    0x34,al
  4190e7:	cmp    BYTE PTR [edi-0x38],ah
  4190ea:	outs   dx,DWORD PTR ds:[esi]
  4190eb:	into   
  4190ec:	sub    BYTE PTR [edi+0x1],0x72
  4190f0:	gs (bad) 
  4190f2:	mov    ebx,0x470fa648
  4190f7:	fwait
  4190f8:	mov    ebp,?
  4190fa:	pusha  
  4190fb:	sub    al,0x83
  4190fd:	push   0xffffffd5
  4190ff:	xchg   ebx,eax
  419100:	xor    al,0xd2
  419102:	xchg   edi,eax
  419103:	xchg   DWORD PTR [esi],esp
  419105:	scas   eax,DWORD PTR es:[edi]
  419106:	popf   
  419107:	or     eax,0xa5f4f128
  41910c:	out    0x55,al
  41910e:	clc    
  41910f:	mov    ebx,0x9dc0d065
  419114:	in     al,0x1f
  419116:	mov    ss,eax
  419118:	push   eax
  419119:	out    dx,eax
  41911a:	push   ecx
  41911b:	push   cs
  41911c:	in     al,dx
  41911d:	sar    BYTE PTR [edi+ebx*2],0xf3
  419121:	call   0xe7d5:0xe8797b4f
  419128:	adc    al,0xb8
  41912a:	sub    DWORD PTR [esi-0xa2a4112],ebp
  419130:	cwde   
  419131:	or     eax,0x3337c97
  419136:	add    ebx,esp
  419138:	jno    0x41914f
  41913a:	jmp    0xe8df:0x8f9e2c00
  419141:	pop    ecx
  419142:	mov    DWORD PTR [ebp-0x50],edx
  419145:	mov    edx,DWORD PTR [ebp+0x8]
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x6df7278c]
  419207:	pop    edi
  419208:	in     eax,0x1c
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x25
  419213:	dec    eax
  419214:	pusha  
  419215:	jne    0x41922e
  419217:	jns    0x41928f
  419219:	adc    BYTE PTR [esi+0x1b7e1530],bh
  41921f:	ins    BYTE PTR es:[edi],dx
  419220:	fst    DWORD PTR [ecx+eiz*8]
  419223:	ror    BYTE PTR [edi+0x5c98a916],1
  419229:	lods   al,BYTE PTR ds:[esi]
  41922a:	fst    DWORD PTR [ebp-0x4c7a9be7]
  419230:	or     edi,DWORD PTR [esi-0x53081d84]
  419236:	sti    
  419237:	cld    
  419238:	xor    cl,BYTE PTR [esi-0xe]
  41923b:	ret    0x20a3
  41923e:	in     eax,0xb8
  419240:	inc    ecx
  419241:	mov    ecx,0xcbaf47e8
  419246:	imul   ecx,DWORD PTR [esi-0x12],0x5d
  41924a:	and    esi,DWORD PTR [ebx+0x5cf2569d]
  419250:	jo     0x419276
  419252:	add    eax,0xdf11ad76
  419257:	in     al,0xfa
  419259:	lods   eax,DWORD PTR ds:[esi]
  41925a:	sti    
  41925b:	adc    DWORD PTR [eax+0x545ff5e9],0x33b1e79f
  419265:	mov    cl,0x3d
  419267:	mov    al,ds:0x1bc8104f
  41926c:	cmp    ch,BYTE PTR [edi+eax*8+0xe]
  419270:	ins    BYTE PTR es:[edi],dx
  419271:	(bad)  
  419272:	sub    eax,0x9646c448
  419277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419278:	es push ebp
  41927a:	add    dh,dh
  41927c:	aam    0x11
  41927e:	cmp    ecx,DWORD PTR [edi]
  419280:	add    BYTE PTR ds:0xe5172929,al
  419286:	push   0xce6d5241
  41928b:	adc    ch,dl
  41928d:	retf   
  41928e:	enter  0x7aa1,0xb6
  419292:	adc    BYTE PTR [ebx+edi*2+0x1c489fb2],cl
  419299:	xor    eax,esp
  41929b:	bound  esp,QWORD PTR [ebx-0x57]
  41929e:	pop    edi
  41929f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a0:	bound  ebx,QWORD PTR [esi]
  4192a2:	stos   DWORD PTR es:[edi],eax
  4192a3:	push   eax
  4192a4:	jb     0x419304
  4192a6:	fs cdq 
  4192a8:	daa    
  4192a9:	addr16 jno 0x419251
  4192ac:	je     0x419293
  4192ae:	call   0x47b131bc
  4192b3:	icebp  
  4192b4:	loopne 0x419253
  4192b6:	(bad)  
  4192b7:	and    eax,0x75a66831
  4192bc:	add    dl,BYTE PTR [eax-0x70]
  4192bf:	outs   dx,BYTE PTR ds:[esi]
  4192c0:	pop    ds
  4192c1:	mov    dh,0xf9
  4192c3:	fidiv  DWORD PTR [esi+edx*8]
  4192c6:	imul   ecx,ecx,0x73aa0bb9
  4192cc:	call   0x5b0:0x217c08c5
  4192d3:	pop    esi
  4192d4:	or     dl,BYTE PTR ds:0x2ea1fee4
  4192da:	jl     0x41927d
  4192dc:	fwait
  4192dd:	mov    bl,0x70
  4192df:	dec    ecx
  4192e0:	sub    eax,0xba8e8585
  4192e5:	mov    ds:0x2f614d6e,al
  4192ea:	ja     0x419299
  4192ec:	sti    
  4192ed:	shl    DWORD PTR [esi-0xabdfc63],cl
  4192f3:	sub    cl,ah
  4192f5:	mov    dl,0xc4
  4192f7:	mov    dl,0x2
  4192f9:	pop    edx
  4192fa:	ds dec esp
  4192fc:	femms  
  4192fe:	push   ebp
  4192ff:	in     al,0xff
  419301:	xchg   edx,eax
  419302:	jmp    0x4192aa
  419304:	cmp    BYTE PTR [ebp-0xcf39cf4],0x7a
  41930b:	pop    ebx
  41930c:	fwait
  41930d:	dec    edx
  41930e:	mov    eax,0x383294af
  419313:	xlat   BYTE PTR ds:[ebx]
  419314:	pop    ds
  419315:	xchg   DWORD PTR [ecx+0x6b91d03],edx
  41931b:	std    
  41931c:	and    al,0x30
  41931e:	add    DWORD PTR [edx+0x62c0bec9],esp
  419324:	mov    BYTE PTR [edx-0x4d],cl
  419327:	fst    DWORD PTR [ebx-0x42cd4281]
  41932d:	pop    esp
  41932e:	in     eax,dx
  41932f:	or     DWORD PTR [esi-0x212bcdfb],eax
  419335:	pusha  
  419336:	dec    ebp
  419337:	(bad)  
  419338:	jne    0x419317
  41933a:	pop    ss
  41933b:	test   DWORD PTR [ebx-0x65],ebx
  41933e:	ss scas al,BYTE PTR es:[edi]
  419340:	sub    al,0x24
  419342:	jnp    0x4192ee
  419344:	into   
  419345:	aaa    
  419346:	mov    cl,0x6
  419348:	cwde   
  419349:	cmc    
  41934a:	out    0xf9,al
  41934c:	mov    ?,WORD PTR [ebx+0x2e]
  41934f:	int    0xae
  419351:	addr16 in al,0x8a
  419354:	mov    edx,0x756aad29
  419359:	lods   eax,DWORD PTR ds:[esi]
  41935a:	sbb    bh,bl
  41935c:	mov    al,0x10
  41935e:	rol    BYTE PTR [esi+0x5d21a0f],0x9
  419365:	shl    bl,1
  419367:	aad    0xa1
  419369:	mov    fs,WORD PTR [edi-0x33f69923]
  41936f:	lods   al,BYTE PTR ds:[esi]
  419370:	mov    bh,ah
  419372:	loope  0x419355
  419374:	leave  
  419375:	cmp    dh,BYTE PTR [ebp-0x56]
  419378:	or     al,0xe1
  41937a:	test   BYTE PTR [ebx-0x1b],bl
  41937d:	sar    BYTE PTR [edx],0x30
  419380:	shr    DWORD PTR [edi+edx*2+0x6d],cl
  419384:	mov    dh,0xbd
  419386:	push   cs
  419387:	xor    eax,0xcdba55f3
  41938c:	jae    0x4193ec
  41938e:	outs   dx,BYTE PTR ds:[esi]
  41938f:	sub    BYTE PTR [esi+0x6a1d1bd2],cl
  419395:	pop    ebx
  419396:	push   ds
  419397:	test   al,0x1b
  419399:	cmc    
  41939a:	mov    edx,0x2ad856b5
  41939f:	add    eax,DWORD PTR [ecx]
  4193a1:	jnp    0x4193f6
  4193a3:	inc    esi
  4193a4:	das    
  4193a5:	(bad)  
  4193a7:	jl     0x4193db
  4193a9:	xchg   esi,ebp
  4193ab:	ret    0x6840
  4193ae:	fidivr WORD PTR [edx]
  4193b0:	xchg   DWORD PTR [edx-0x1],esp
  4193b3:	push   edx
  4193b4:	cld    
  4193b5:	into   
  4193b6:	cdq    
  4193b7:	lds    ecx,FWORD PTR [ebx+0x7f66103b]
  4193bd:	rol    ebp,0xb2
  4193c0:	or     eax,0x182bd898
  4193c5:	repz inc ebp
  4193c7:	pop    ebx
  4193c8:	ficom  WORD PTR [esi-0x2d94e737]
  4193ce:	repnz dec edi
  4193d0:	cwde   
  4193d1:	and    cl,dl
  4193d3:	sbb    DWORD PTR [esi-0x30],0x4a
  4193d7:	xchg   ebp,ebx
  4193d9:	cmp    bl,ah
  4193db:	cmp    eax,0xc2f37085
  4193e0:	adc    al,0x68
  4193e2:	aaa    
  4193e3:	imul   ebp,ebp,0x142be16a
  4193e9:	cmc    
  4193ea:	adc    edx,DWORD PTR [esi+0x3d]
  4193ed:	mov    BYTE PTR [ebp-0x10805f1e],al
  4193f3:	lock inc ebp
  4193f5:	add    dh,BYTE PTR [ebp-0x7]
  4193f8:	or     BYTE PTR [edi+0x404be58f],dl
  4193fe:	add    al,0x5d
  419400:	push   0x9041e673
  419405:	xchg   ebp,eax
  419406:	ret    
  419407:	lock dec ecx
  419409:	in     al,0xe7
  41940b:	loope  0x4193bb
  41940d:	outs   dx,DWORD PTR ds:[esi]
  41940e:	xchg   ebp,eax
  41940f:	out    dx,eax
  419410:	mov    ebx,0x887ea2c5
  419415:	cld    
  419416:	mov    esp,DWORD PTR [esi]
  419418:	cld    
  419419:	jnp    0x41940a
  41941b:	or     al,0x42
  41941d:	lods   al,BYTE PTR ds:[esi]
  41941e:	or     eax,0xa1ae9896
  419423:	push   esp
  419424:	mov    ds:0x5eb7d8da,al
  419429:	lock mov WORD PTR [ebx],gs
  41942c:	xchg   DWORD PTR [edi+0x3d],esp
  41942f:	cs out dx,eax
  419431:	aaa    
  419432:	add    eax,0xb72f06da
  419437:	inc    eax
  419438:	mov    edx,DWORD PTR [edx+0x4892cad2]
  41943e:	fdiv   DWORD PTR [edx-0x57143725]
  419444:	cmp    BYTE PTR [eax],0x36
  419447:	xor    DWORD PTR [ebp-0x4e703775],ecx
  41944d:	mov    bl,0x33
  41944f:	lds    eax,FWORD PTR [esi-0x5b4e5f7d]
  419455:	xchg   edx,eax
  419456:	inc    ebx
  419457:	inc    edi
  419458:	scas   al,BYTE PTR es:[edi]
  419459:	xor    al,0xfa
  41945b:	retf   0x6673
  41945e:	or     esp,DWORD PTR [edx+0x2a]
  419461:	hlt    
  419462:	xchg   edx,eax
  419463:	cmp    DWORD PTR [eax],edx
  419465:	fnstsw WORD PTR [edi+0x56454d2e]
  41946b:	sahf   
  41946c:	loope  0x4194e4
  41946e:	pop    ebp
  41946f:	and    ebp,DWORD PTR [ebx+0x68a30b6e]
  419475:	push   ss
  419476:	mov    ah,0xf
  419478:	fsub   st(5),st
  41947a:	lods   eax,DWORD PTR ds:[esi]
  41947b:	and    ch,BYTE PTR [ecx+eiz*2]
  41947e:	mov    DWORD PTR [ebx+0x7b],eax
  419481:	bound  esp,QWORD PTR [ebp-0x2ebb2ed0]
  419487:	sbb    ah,BYTE PTR [ebx-0x28]
  41948a:	inc    edx
  41948b:	(bad)  
  41948c:	retf   0x1035
  41948f:	mov    bl,0x8d
  419491:	or     eax,0xeb552668
  419496:	jmp    0x41946c
  419498:	add    cl,BYTE PTR [eax-0x22a1b72b]
  41949e:	lods   al,BYTE PTR ds:[esi]
  41949f:	ja     0x419438
  4194a1:	aam    0x4c
  4194a3:	jge    0x4194c1
  4194a5:	xchg   ecx,eax
  4194a6:	push   0xfdf22f1f
  4194ab:	je     0x419495
  4194ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ae:	mov    ds:0x5196a201,al
  4194b3:	shl    DWORD PTR ds:0x53d407bf,1
  4194b9:	push   ds
  4194ba:	dec    eax
  4194bb:	ret    0x1740
  4194be:	ja     0x41950d
  4194c0:	stos   DWORD PTR es:[edi],eax
  4194c1:	cwde   
  4194c2:	cdq    
  4194c3:	ss inc eax
  4194c5:	in     al,dx
  4194c6:	push   ds
  4194c7:	retf   0x7b97
  4194ca:	in     al,dx
  4194cb:	and    dh,al
  4194cd:	mov    ebx,0xb5f162a7
  4194d2:	mov    eax,ds:0x1d509a2f
  4194d7:	nop
  4194d8:	push   ss
  4194d9:	ret    0x7a09
  4194dc:	loop   0x4194ce
  4194de:	sbb    BYTE PTR [ebx+0x3af601ae],dl
  4194e4:	xchg   esi,eax
  4194e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e6:	nop
  4194e7:	dec    esp
  4194e8:	ins    BYTE PTR es:[edi],dx
  4194e9:	mov    WORD PTR [esi+0x6809067f],cs
  4194ef:	push   edx
  4194f0:	mov    ebp,0x1a2edce1
  4194f5:	cwde   
  4194f6:	sbb    ecx,DWORD PTR [esi]
  4194f8:	inc    eax
  4194f9:	outs   dx,BYTE PTR ds:[esi]
  4194fa:	outs   dx,DWORD PTR ds:[esi]
  4194fb:	jmp    0x301d:0x5c2a1fc2
  419502:	std    
  419503:	ds cmp bl,bl
  419506:	or     ah,ch
  419508:	retf   
  419509:	push   ecx
  41950a:	cmp    DWORD PTR [ebp-0x59de8409],esi
  419510:	fs mov eax,0x47bed86c
  419517:	es sbb al,0x15
  41951a:	mov    edx,edi
  41951c:	(bad)  
  41951e:	cs jl  0x4194fd
  419521:	outs   dx,DWORD PTR ds:[esi]
  419522:	gs in  al,dx
  419524:	cmp    BYTE PTR [eax+0x271bf08d],bh
  41952a:	xchg   ebp,eax
  41952b:	pop    edi
  41952c:	lea    ecx,[edi]
  41952e:	sub    al,0xd5
  419530:	adc    bh,BYTE PTR [ecx-0x5e18a4c2]
  419536:	sbb    DWORD PTR [ebp+0x4ea21ab],0xe3c35b42
  419540:	cli    
  419541:	add    BYTE PTR [eax],ah
  419543:	pop    ecx
  419544:	(bad)  [ebx+eax*4-0x92876d0]
  41954b:	cwde   
  41954c:	leave  
  41954d:	rcl    esp,1
  41954f:	sbb    DWORD PTR [edx-0x16],ebx
  419552:	arpl   dx,bx
  419554:	sub    BYTE PTR [edx],ch
  419556:	shl    BYTE PTR [edx+0x7c],0x2
  41955a:	mov    bl,0x1f
  41955c:	lahf   
  41955d:	repnz fisubr DWORD PTR [esi]
  419560:	xchg   edi,eax
  419561:	addr16 iret 
  419563:	in     al,dx
  419564:	(bad)  
  419565:	fwait
  419566:	stc    
  419567:	dec    edx
  419568:	aad    0x35
  41956a:	fcomp  DWORD PTR [edx+0x3a712983]
  419570:	dec    esi
  419571:	mov    dh,0xa0
  419573:	xchg   BYTE PTR [ebx+0x4aa50642],al
  419579:	xchg   ebp,eax
  41957a:	cmp    DWORD PTR [ebp+0x2a],ebx
  41957d:	bound  ebx,QWORD PTR [ebp-0x47]
  419580:	add    bl,BYTE PTR [eax+0x64]
  419583:	sub    eax,DWORD PTR [esi]
  419585:	or     DWORD PTR [edi+0x58a0dbe0],ebx
  41958b:	push   cs
  41958c:	sbb    bh,bl
  41958e:	and    edi,ebp
  419590:	dec    edi
  419591:	loope  0x41951a
  419593:	les    ebx,FWORD PTR [edx]
  419595:	lds    edi,FWORD PTR [eax]
  419597:	aas    
  419598:	mov    ebx,DWORD PTR [eax+0x25]
  41959b:	dec    esi
  41959c:	imul   esp,esp,0xfd62519b
  4195a2:	loope  0x419532
  4195a4:	push   ds
  4195a5:	xchg   ebx,eax
  4195a6:	test   al,0x23
  4195a8:	(bad)  
  4195a9:	arpl   WORD PTR [esi],bp
  4195ab:	mov    edi,0x40a96d70
  4195b0:	loope  0x419624
  4195b2:	sbb    ah,cl
  4195b4:	adc    BYTE PTR [eax+0x1258feb6],ah
  4195ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195bb:	jmp    0x41962b
  4195bd:	cdq    
  4195be:	push   esi
  4195bf:	loope  0x4195c4
  4195c1:	push   edx
  4195c2:	clc    
  4195c3:	pop    ebx
  4195c4:	ins    BYTE PTR es:[edi],dx
  4195c5:	mov    bh,0x34
  4195c7:	dec    ebx
  4195c8:	lock mov DWORD PTR [eax-0x27],edi
  4195cc:	pop    ss
  4195cd:	out    dx,al
  4195ce:	aad    0xad
  4195d0:	xchg   ecx,eax
  4195d1:	call   0x9fa4:0xe5c21974
  4195d8:	(bad)  
  4195d9:	pushf  
  4195da:	push   ebp
  4195db:	push   ds
  4195dc:	rcr    BYTE PTR [esi],cl
  4195de:	jae    0x4195d1
  4195e0:	retf   0xd8b4
  4195e3:	(bad)  
  4195e4:	call   0xed6f6c6b
  4195e9:	adc    DWORD PTR [edi+0x12],ebx
  4195ec:	je     0x419589
  4195ee:	adc    ebx,DWORD PTR [ebx-0x572e3d5f]
  4195f4:	fsubr  st,st(6)
  4195f6:	sub    al,0xaa
  4195f8:	and    eax,0x3f74abae
  4195fd:	pop    edi
  4195fe:	sbb    edx,0xc1371509
  419604:	jge    0x419637
  419606:	pop    ss
  419607:	and    eax,0x1d34a4ef
  41960c:	xlat   BYTE PTR ds:[ebx]
  41960d:	mov    DWORD PTR [edx+0x43],edi
  419610:	sub    BYTE PTR [edx+ecx*4],cl
  419613:	inc    ebp
  419614:	loope  0x41968c
  419616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419617:	pushf  
  419618:	mov    dl,0xf1
  41961a:	cmp    DWORD PTR [ebx+0x415c9c64],ebp
  419620:	lds    ecx,FWORD PTR [ebp-0x15c52477]
  419626:	add    ch,bh
  419628:	push   ds
  419629:	retf   0x5969
  41962c:	push   0x8f5f007f
  419631:	outs   dx,BYTE PTR ds:[esi]
  419632:	out    dx,al
  419633:	mov    BYTE PTR [ebx-0x1b],bl
  419636:	outs   dx,DWORD PTR ds:[esi]
  419637:	jl     0x41961f
  419639:	(bad)  
  41963a:	fld    QWORD PTR [ecx-0x17f554dc]
  419640:	ins    DWORD PTR es:[edi],dx
  419641:	mov    dl,0x14
  419643:	push   es
  419644:	add    eax,0x1ff8f8d4
  419649:	xor    eax,0xe58f89a8
  41964e:	fistp  WORD PTR [ebx-0x68]
  419651:	rol    DWORD PTR [ebp+0x479d61dc],1
  419657:	out    0x19,al
  419659:	mov    al,0xcd
  41965b:	rol    BYTE PTR [ecx+0x769f7a3a],cl
  419661:	cmp    al,0xa3
  419663:	mov    dl,0x8f
  419665:	lods   al,BYTE PTR ds:[esi]
  419666:	lock xchg esi,eax
  419668:	scas   eax,DWORD PTR es:[edi]
  419669:	jl     0x419679
  41966b:	fimul  DWORD PTR [esi-0x3744321c]
  419671:	popf   
  419672:	push   ebp
  419673:	jo     0x4196a2
  419675:	add    BYTE PTR [edi-0x63],dh
  419678:	jo     0x41960d
  41967a:	aad    0x72
  41967c:	push   0x3fa56744
  419681:	sbb    DWORD PTR [esi-0x5e],edi
  419684:	add    DWORD PTR [esi],ecx
  419686:	dec    ecx
  419687:	stos   BYTE PTR es:[edi],al
  419688:	std    
  419689:	les    ebx,FWORD PTR [ecx-0x29]
  41968c:	inc    ebp
  41968d:	mov    cl,0x65
  41968f:	and    BYTE PTR [ebx-0x1b],0xbb
  419693:	adc    cl,bh
  419695:	test   DWORD PTR gs:[ebp-0x23209892],esp
  41969c:	add    eax,0xf49d4f2b
  4196a1:	inc    esp
  4196a2:	xlat   BYTE PTR ds:[ebx]
  4196a3:	aam    0x26
  4196a5:	mov    WORD PTR [eax-0x30334623],ss
  4196ab:	sbb    eax,0x668df990
  4196b0:	fs jmp 0xeee258a3
  4196b6:	cdq    
  4196b7:	shl    DWORD PTR [esi+0x588efddd],1
  4196bd:	xchg   ecx,eax
  4196be:	sbb    dl,al
  4196c0:	cld    
  4196c1:	pushf  
  4196c2:	inc    edx
  4196c3:	fisub  WORD PTR [eax+0x1f]
  4196c6:	inc    ebx
  4196c7:	sbb    ebx,DWORD PTR [ecx-0x3a411f0a]
  4196cd:	inc    esp
  4196ce:	xor    DWORD PTR [ebx+ebx*8],ebx
  4196d1:	dec    WORD PTR [edx+0x1d66131f]
  4196d8:	fst    QWORD PTR [ebx-0x10593d94]
  4196de:	xchg   edi,eax
  4196df:	repnz add al,0xe6
  4196e2:	and    dh,BYTE PTR [eax-0x28be0d59]
  4196e8:	cmp    al,0x6f
  4196ea:	call   0x12b1ee25
  4196ef:	mov    ecx,DWORD PTR [ecx+0x5abbd6b6]
  4196f5:	and    DWORD PTR [esi],edx
  4196f7:	sti    
  4196f8:	pop    eax
  4196f9:	addr16 dec ebx
  4196fb:	(bad)  
  4196fd:	retf   
  4196fe:	popf   
  4196ff:	scas   al,BYTE PTR es:[edi]
  419700:	int3   
  419701:	add    eax,0x87e9f19d
  419706:	test   al,0xda
  419708:	add    DWORD PTR [eax+0x17b627ff],ecx
  41970e:	push   ebx
  41970f:	popf   
  419710:	add    dl,BYTE PTR [esi]
  419712:	icebp  
  419713:	stos   DWORD PTR es:[edi],eax
  419714:	jge    0x419737
  419716:	push   ds
  419717:	ret    0x312b
  41971a:	add    ecx,DWORD PTR [ebx+eiz*8-0x4a]
  41971e:	and    eax,0x964d3d68
  419723:	push   esi
  419724:	int    0x11
  419726:	retf   0xf39
  419729:	mul    BYTE PTR [esi+0x78ec854e]
  41972f:	repz and BYTE PTR [ebp-0x6a],0x42
  419734:	lds    ebx,FWORD PTR [ebp-0x79]
  419737:	pusha  
  419738:	test   esp,edi
  41973a:	push   ds
  41973b:	mov    WORD PTR [esi+eax*8+0x7dc5e3e5],ds
  419742:	fnstcw WORD PTR [edx-0x6c1dfc59]
  419748:	add    ebp,esp
  41974a:	push   ebp
  41974b:	xor    edi,eax
  41974d:	dec    edx
  41974e:	inc    edi
  41974f:	leave  
  419750:	mul    DWORD PTR [ebx+0x69]
  419753:	push   ebp
  419754:	or     al,0xc3
  419756:	mov    edi,0x55727515
  41975b:	or     eax,0xfa6ddf6d
  419760:	(bad)  
  419761:	popf   
  419762:	inc    esp
  419763:	sub    BYTE PTR [ebp-0x1b93bfb],al
  419769:	push   cs
  41976a:	cmp    eax,0xf6ce7b0c
  41976f:	je     0x4197c4
  419771:	mov    eax,0xaf3bf2eb
  419776:	push   esi
  419777:	xchg   edx,eax
  419778:	mov    al,0x4d
  41977a:	mov    ch,cl
  41977c:	and    al,0x2e
  41977e:	shl    DWORD PTR [edi-0x40],1
  419781:	shr    BYTE PTR [eax-0x3f],1
  419784:	lea    edx,[ebp-0x3e221bd]
  41978a:	add    eax,0x5518e8d4
  41978f:	jmp    0x41976b
  419791:	fstp   QWORD PTR [edi+0x2e]
  419794:	in     al,0x18
  419796:	push   eax
  419797:	fld    TBYTE PTR [eax+0x58]
  41979a:	push   ebx
  41979b:	or     eax,0xbf082bc6
  4197a0:	cld    
  4197a1:	and    esi,eax
  4197a3:	mov    ds:0xedb77662,al
  4197a8:	gs std 
  4197aa:	out    0xc,eax
  4197ac:	inc    esp
  4197ad:	sbb    eax,0xbf5d538a
  4197b2:	mov    ebp,0x13d09bb3
  4197b7:	adc    ch,BYTE PTR [ecx+0x18]
  4197ba:	sbb    al,0xe
  4197bc:	aas    
  4197bd:	jmp    0x41974c
  4197bf:	mov    ch,0x7e
  4197c1:	mov    ds,WORD PTR [ecx+0x4ee28028]
  4197c7:	dec    eax
  4197c8:	repz sub DWORD PTR [eax+0x4e],esp
  4197cc:	pop    edi
  4197cd:	mov    es,WORD PTR [edx+0x457ff8af]
  4197d3:	pop    ds
  4197d4:	out    0x76,al
  4197d6:	mov    ecx,0xd94b58e
  4197db:	jae    0x4197aa
  4197dd:	pop    ss
  4197de:	pop    eax
  4197df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e0:	es aam 0x83
  4197e3:	add    eax,0x9d101693
  4197e8:	xor    BYTE PTR [edx+0x47],al
  4197eb:	mov    ebx,0xdd6d420d
  4197f0:	jae    0x419819
  4197f2:	and    bh,0x65
  4197f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f6:	and    DWORD PTR ds:0x8c0b5287,ebp
  4197fc:	dec    esi
  4197fd:	sbb    eax,0x648ebe9a
  419802:	aad    0x22
  419804:	pusha  
  419805:	pop    ecx
  419806:	xor    eax,0x533036b1
  41980b:	sub    al,0x43
  41980d:	test   bh,dh
  41980f:	ins    DWORD PTR es:[edi],dx
  419810:	jns    0x41985a
  419812:	push   0xffffff8c
  419814:	push   0x6f137f5e
  419819:	push   0xffffff80
  41981b:	mov    cl,0xe0
  41981d:	loope  0x419833
  41981f:	leave  
  419820:	sahf   
  419821:	inc    esi
  419822:	mov    ds:0x7b9977c6,eax
  419827:	add    DWORD PTR [ecx],ebp
  419829:	xchg   BYTE PTR [ebx+0x7f49e51d],cl
  41982f:	jl     0x4197bc
  419831:	jle    0x419870
  419833:	mov    esp,0xc2086fb3
  419838:	ins    BYTE PTR es:[edi],dx
  419839:	adc    cl,BYTE PTR [esi]
  41983b:	jge    0x41986e
  41983d:	mov    edi,ecx
  41983f:	ds fwait
  419841:	outs   dx,DWORD PTR ds:[esi]
  419842:	ins    BYTE PTR es:[edi],dx
  419843:	mov    bh,BYTE PTR [esi-0x23]
  419846:	jecxz  0x419846
  419848:	daa    
  419849:	sbb    BYTE PTR [esi-0x71e9ae3f],0xfb
  419850:	adc    eax,0x7cf97565
  419855:	xor    DWORD PTR [esi+edx*8+0x3874ceef],edi
  41985c:	xor    eax,0x3858e4a
  419861:	xchg   ecx,eax
  419862:	and    ebx,esp
  419864:	sbb    cl,bh
  419866:	into   
  419867:	cli    
  419868:	add    al,0xc6
  41986a:	mov    ecx,0x23099c29
  41986f:	pop    esi
  419870:	jae    0x419859
  419872:	scas   al,BYTE PTR es:[edi]
  419873:	push   ecx
  419874:	jge    0x4198ee
  419876:	int    0x52
  419878:	sbb    al,bh
  41987a:	nop    ecx
  41987d:	ficom  WORD PTR [eax-0x1c]
  419880:	cld    
  419881:	cs xchg esp,eax
  419883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419884:	mov    ch,0xd5
  419886:	nop
  419887:	adc    BYTE PTR [eax+0x23],bh
  41988a:	xchg   ecx,eax
  41988b:	aas    
  41988c:	in     al,0x44
  41988e:	jo     0x419866
  419890:	xchg   esp,eax
  419891:	jbe    0x41983e
  419893:	inc    ebp
  419894:	lea    ecx,[esi]
  419896:	add    BYTE PTR [edi+0x35fae806],ch
  41989c:	je     0x419890
  41989e:	std    
  41989f:	popa   
  4198a0:	push   esi
  4198a1:	mov    cl,0xf5
  4198a3:	mov    dh,0xea
  4198a5:	mov    ecx,0xd6446ea8
  4198aa:	push   esi
  4198ab:	or     al,0xa2
  4198ad:	push   ebp
  4198ae:	clc    
  4198af:	sub    eax,0x2e60ed48
  4198b4:	mov    ds:0x62295802,eax
  4198b9:	in     al,dx
  4198ba:	xchg   DWORD PTR [edi+0x63],edx
  4198bd:	stos   DWORD PTR es:[edi],eax
  4198be:	push   ds
  4198bf:	cmp    dh,BYTE PTR [eax-0x17b328d7]
  4198c5:	push   0x53dfc492
  4198ca:	mov    BYTE PTR [esi],ch
  4198cc:	lods   eax,DWORD PTR ds:[esi]
  4198cd:	and    dl,BYTE PTR [edi+0x48]
  4198d0:	mov    bl,0x82
  4198d2:	ret    0x7d3b
  4198d5:	ret    
  4198d6:	jnp    0x419920
  4198d8:	mov    eax,ds:0xff7d51d8
  4198dd:	sahf   
  4198de:	dec    ecx
  4198df:	push   esp
  4198e0:	ins    WORD PTR es:[edi],dx
  4198e2:	fidiv  DWORD PTR [ecx-0x4a]
  4198e5:	inc    esp
  4198e6:	leave  
  4198e7:	jb     0x419926
  4198e9:	hlt    
  4198ea:	pop    esp
  4198eb:	enter  0xb905,0xf3
  4198ef:	js     0x4198ed
  4198f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f2:	mov    es,edx
  4198f4:	jmp    0x4198f6
  4198f6:	or     DWORD PTR [esi+ebx*4-0x41],esp
  4198fa:	mov    ds:0xcd25a80f,al
  4198ff:	mov    ebx,0x8ade4d99
  419904:	xchg   ch,bh
  419906:	inc    ebp
  419907:	cmp    DWORD PTR [edi+eiz*1],edi
  41990a:	lods   eax,DWORD PTR ds:[esi]
  41990b:	sar    DWORD PTR [eax-0x45],cl
  41990e:	mov    DWORD PTR [ebx+0x17],esi
  419911:	and    DWORD PTR [ebx+0x3b],0xc00299c2
  419918:	and    BYTE PTR [esp+ebp*8-0x52],cl
  41991c:	rcr    bl,0x70
  41991f:	icebp  
  419920:	add    al,0x3e
  419922:	dec    edx
  419923:	test   ecx,esp
  419925:	cwde   
  419926:	cwde   
  419927:	cmp    ah,ah
  419929:	and    edx,DWORD PTR [edx+0x5edc7da8]
  41992f:	cli    
  419930:	mov    edi,0xe5ed1cee
  419935:	sbb    eax,0x8e9385c8
  41993a:	jnp    0x419996
  41993c:	gs push 0x62
  41993f:	jbe    0x419969
  419941:	mov    dh,0x2d
  419943:	or     bh,dl
  419945:	retf   
  419946:	sbb    ecx,edx
  419948:	outs   dx,DWORD PTR ds:[esi]
  419949:	push   ds
  41994a:	sub    DWORD PTR [edi],esp
  41994c:	in     al,dx
  41994d:	add    dl,BYTE PTR [ebx]
  41994f:	cmc    
  419950:	lods   eax,DWORD PTR ds:[esi]
  419951:	mov    edx,0x1237512e
  419956:	arpl   WORD PTR ds:0xe52fed45,dx
  41995c:	sbb    eax,0xfc054dd4
  419961:	(bad)  
  419962:	and    dl,BYTE PTR [ebx]
  419964:	mov    edx,0x2f984cc2
  419969:	les    ecx,FWORD PTR [eax-0x15]
  41996c:	and    al,0xb4
  41996e:	mov    ebx,0xe33c7c3c
  419973:	mov    al,0xe3
  419975:	retf   0xcca2
  419978:	imul   BYTE PTR [edx-0x326be0eb]
  41997e:	call   DWORD PTR [eax-0xb820fbc]
  419984:	or     esp,DWORD PTR ds:0x437c48f6
  41998a:	push   ecx
  41998b:	push   0x2
  41998d:	sahf   
  41998e:	and    ah,cl
  419990:	jbe    0x41997c
  419992:	divps  xmm2,XMMWORD PTR [esi]
  419995:	inc    edi
  419996:	or     BYTE PTR [esi],bl
  419998:	outs   dx,BYTE PTR ds:[esi]
  419999:	inc    edi
  41999a:	inc    ebp
  41999b:	cmp    BYTE PTR [ecx*8+0x2a3795c0],bl
  4199a2:	push   ebp
  4199a3:	rcpps  xmm1,XMMWORD PTR [eax-0x1c7a79a]
  4199aa:	mov    ah,0x61
  4199ac:	adc    edx,esi
  4199ae:	shl    BYTE PTR [eax+0x3f],0x3b
  4199b2:	aas    
  4199b3:	imul   edx,DWORD PTR [ecx+0x629ea8eb],0x7af3c254
  4199bd:	jne    0x419a07
  4199bf:	not    esi
  4199c1:	test   eax,0xa9bfa635
  4199c6:	fisttp QWORD PTR [ebp-0x59bab454]
  4199cc:	sbb    al,0x29
  4199ce:	mov    ch,0x9f
  4199d0:	and    bl,al
  4199d2:	in     eax,dx
  4199d3:	push   0xe23656c0
  4199d8:	mov    edx,0x99629b5
  4199dd:	rcr    BYTE PTR [esi-0x39],1
  4199e0:	pop    edi
  4199e1:	adc    edx,DWORD PTR [eax-0x62]
  4199e4:	sahf   
  4199e5:	mov    dh,dh
  4199e7:	dec    ecx
  4199e8:	mov    eax,ds:0xdbadf315
  4199ed:	jnp    0x41999b
  4199ef:	(bad)  
  4199f0:	dec    edi
  4199f1:	cmp    BYTE PTR [ebx-0x7f],bl
  4199f4:	jecxz  0x419a21
  4199f6:	and    eax,0xfc0c28e
  4199fb:	mov    esi,0x8b6898b5
  419a00:	(bad)  
  419a01:	push   eax
  419a02:	pop    ebx
  419a03:	cld    
  419a04:	test   BYTE PTR [esi-0x633a1b3b],cl
  419a0a:	add    eax,0x708ba5c7
  419a0f:	cmp    bl,BYTE PTR [ebp-0x4c]
  419a12:	dec    ebx
  419a13:	xchg   edi,eax
  419a14:	les    ecx,FWORD PTR [ebx+0x1]
  419a17:	ret    0x8bb6
  419a1a:	dec    esp
  419a1b:	push   es
  419a1c:	push   ebx
  419a1d:	add    eax,0x27545287
  419a22:	(bad)  
  419a24:	xor    ecx,DWORD PTR [ecx-0x22]
  419a27:	lods   al,BYTE PTR ds:[esi]
  419a28:	lods   al,BYTE PTR ds:[esi]
  419a29:	lahf   
  419a2a:	stos   BYTE PTR es:[edi],al
  419a2b:	and    BYTE PTR [esp+eax*2-0xb],0xcd
  419a30:	cmp    eax,0xf1acbd42
  419a35:	jns    0x419a26
  419a37:	mov    ds:0x4b45f4c7,al
  419a3c:	shl    DWORD PTR [esi+0x6347bcb2],0xe9
  419a43:	dec    ebp
  419a44:	xchg   ecx,eax
  419a45:	pop    eax
  419a46:	aad    0x73
  419a48:	repnz out 0xc4,eax
  419a4b:	inc    ecx
  419a4c:	mov    ds,WORD PTR [eax]
  419a4e:	repnz test BYTE PTR [edx],al
  419a51:	or     al,0xfa
  419a53:	outs   dx,DWORD PTR ds:[esi]
  419a54:	fs out 0xd4,eax
  419a57:	popf   
  419a58:	out    dx,al
  419a59:	xchg   edi,eax
  419a5a:	sbb    ebx,DWORD PTR [edi-0x6c]
  419a5d:	dec    edi
  419a5e:	pop    ebp
  419a5f:	jnp    0x419a43
  419a61:	fst    DWORD PTR [ebp+0x57]
  419a64:	repz (bad) 
  419a66:	mov    ds:0x9ef49412,al
  419a6b:	ret    
  419a6c:	shl    DWORD PTR [ecx-0x6e],1
  419a6f:	popf   
  419a70:	cmp    eax,0x58274d1c
  419a75:	shl    eax,1
  419a77:	in     eax,dx
  419a78:	rcl    DWORD PTR [edi+0x1a1c40dc],1
  419a7e:	repnz dec ebx
  419a80:	pop    ds
  419a81:	xlat   BYTE PTR ds:[ebx]
  419a82:	jp     0x419a6e
  419a84:	dec    edi
  419a85:	push   edx
  419a86:	in     eax,dx
  419a87:	jbe    0x419ae1
  419a89:	xchg   edi,eax
  419a8a:	jno    0x419ace
  419a8c:	aaa    
  419a8d:	jne    0x419a4f
  419a8f:	rcl    cl,0x29
  419a92:	inc    edi
  419a93:	rol    BYTE PTR [edi],1
  419a95:	lods   al,BYTE PTR ds:[esi]
  419a96:	test   BYTE PTR [ebp+0x33332d35],bl
  419a9c:	cmp    eax,0x4e93c0ad
  419aa1:	jae    0x419a79
  419aa3:	sub    bl,cl
  419aa5:	cld    
  419aa6:	xchg   ebx,eax
  419aa7:	out    0x8c,eax
  419aa9:	test   eax,0xbac020d9
  419aae:	add    BYTE PTR [edi+0x6f],dl
  419ab1:	push   edx
  419ab2:	and    eax,DWORD PTR [ecx-0x1f9044dc]
  419ab8:	lods   eax,DWORD PTR ds:[esi]
  419ab9:	fisttp QWORD PTR [eax+0x192e14e1]
  419abf:	xchg   ecx,eax
  419ac0:	loop   0x419afa
  419ac2:	out    0x72,al
  419ac4:	test   BYTE PTR ds:0x5de1f91,al
  419aca:	pusha  
  419acb:	mov    bl,0xba
  419acd:	pop    ss
  419ace:	mov    edi,0x794c0472
  419ad3:	pcmpgtb mm6,QWORD PTR [edx-0x7932c239]
  419ada:	adc    BYTE PTR [ebx-0x54],dl
  419add:	cli    
  419ade:	jae    0x419af9
  419ae0:	jb     0x419abd
  419ae2:	(bad)  
  419ae3:	pop    edi
  419ae4:	and    DWORD PTR [ecx],esi
  419ae6:	dec    edx
  419ae7:	in     eax,0xc1
  419ae9:	jns    0x419aab
  419aeb:	xor    dl,dh
  419aed:	and    DWORD PTR es:[ebx+0x2d],0x574704c7
  419af5:	dec    ecx
  419af6:	jmp    0x419a9d
  419af8:	pop    ds
  419af9:	pop    ebx
  419afa:	or     al,0xe2
  419afc:	pop    edi
  419afd:	mov    DWORD PTR [edx-0x578dafb7],edx
  419b03:	inc    ecx
  419b04:	aaa    
  419b05:	xor    BYTE PTR [ebp-0x679d20af],dl
  419b0b:	loopne 0x419b56
  419b0d:	call   0x6ce09086
  419b12:	jae    0x419ad5
  419b14:	out    dx,al
  419b15:	fcomip st,st(0)
  419b17:	add    DWORD PTR [ebx+0x1df01b35],edx
  419b1d:	(bad)  
  419b1e:	out    0x57,al
  419b20:	jge    0x419aa9
  419b22:	inc    esp
  419b23:	mov    esp,0xbabcec3b
  419b28:	cmp    BYTE PTR [esi],dl
  419b2a:	int3   
  419b2b:	ret    
  419b2c:	or     dl,dh
  419b2e:	iret   
  419b2f:	mov    esi,0x6030bad6
  419b34:	sbb    eax,0x1450b4eb
  419b39:	mov    edi,0xa750d72a
  419b3e:	inc    eax
  419b3f:	ss loop 0x419adc
  419b42:	add    BYTE PTR [ebp+0x7f],dl
  419b45:	popf   
  419b46:	lods   al,BYTE PTR ds:[esi]
  419b47:	mov    ah,0xa3
  419b49:	push   es
  419b4a:	cmp    al,0xda
  419b4c:	sbb    al,0x2
  419b4e:	(bad)  
  419b4f:	xchg   ebp,eax
  419b50:	mov    bl,BYTE PTR [eax]
  419b52:	imul   eax,DWORD PTR [ebx+0x2820d4bd],0x64
  419b59:	or     al,0x1
  419b5b:	add    BYTE PTR [ebp-0x41cb8ce2],bh
  419b61:	and    DWORD PTR [ebp+ecx*1+0x4f],esp
  419b65:	xor    ebp,edi
  419b67:	sub    cl,bh
  419b69:	mov    esp,0xe6806bde
  419b6e:	cld    
  419b6f:	xchg   edi,eax
  419b70:	jge    0x419b62
  419b72:	xor    eax,0x4f
  419b75:	xchg   ecx,eax
  419b76:	jl     0x419b3b
  419b78:	in     eax,0xd5
  419b7a:	or     cl,bh
  419b7c:	test   BYTE PTR [edx],dh
  419b7e:	loope  0x419bff
  419b80:	test   ecx,esi
  419b82:	aas    
  419b83:	jl     0x419ba7
  419b85:	mov    cl,BYTE PTR [edi-0x32]
  419b88:	jno    0x419ba5
  419b8a:	xchg   BYTE PTR [edi+0x16],bl
  419b8d:	shl    BYTE PTR [ecx],1
  419b8f:	push   0xffffffb9
  419b91:	mov    WORD PTR [esi+0x5b],ds
  419b94:	into   
  419b95:	(bad)  
  419b97:	mov    eax,ds:0x95fb086a
  419b9c:	jg     0x419b84
  419b9e:	xchg   esp,eax
  419b9f:	mov    edi,0xaee0878b
  419ba4:	pop    esp
  419ba5:	clc    
  419ba6:	sbb    BYTE PTR [edx+0x4feb0085],0xc3
  419bad:	fidiv  WORD PTR [ecx+ecx*8-0x4b38d434]
  419bb4:	cdq    
  419bb5:	mov    ds:0xd01f0a60,eax
  419bba:	inc    eax
  419bbb:	mov    bp,0x762a
  419bbf:	mov    eax,0xb66fecbd
  419bc4:	or     ah,dh
  419bc6:	in     eax,0x6c
  419bc8:	or     eax,DWORD PTR [edi-0x4a]
  419bcb:	mov    ds:0xd42ed820,eax
  419bd0:	add    al,0xd5
  419bd2:	ror    BYTE PTR [eax],cl
  419bd4:	out    dx,eax
  419bd5:	push   esi
  419bd6:	add    dh,ah
  419bd8:	mov    ebp,0x2a44466a
  419bdd:	push   edx
  419bde:	inc    edx
  419bdf:	ss pop esi
  419be1:	push   eax
  419be2:	fldcw  WORD PTR [ecx]
  419be4:	inc    edi
  419be5:	cmp    al,0x2b
  419be7:	sahf   
  419be8:	mov    esp,0x69d2d3fd
  419bed:	add    DWORD PTR [ecx-0x53268f12],0x7e
  419bf4:	xchg   BYTE PTR [edi],bh
  419bf6:	jns    0x419c1d
  419bf8:	aad    0xa6
  419bfa:	inc    ebx
  419bfb:	shl    DWORD PTR [esi],1
  419bfd:	jle    0x419beb
  419bff:	ins    DWORD PTR es:[edi],dx
  419c00:	jmp    0x419b83
  419c02:	jmp    0x419c09
  419c04:	jle    0x419bd1
  419c06:	push   0x2d
  419c08:	xchg   ecx,eax
  419c09:	je     0x419bd7
  419c0b:	call   FWORD PTR [esi]
  419c0d:	xor    BYTE PTR [ebx],ah
  419c0f:	mov    ebx,0xc2ae48fd
  419c14:	es xor eax,0x55bb2e12
  419c1a:	ja     0x419bda
  419c1c:	fcomp  QWORD PTR [ebp-0x29]
  419c1f:	(bad)  
  419c20:	and    DWORD PTR [esi],esp
  419c22:	(bad)  
  419c23:	sar    DWORD PTR [ebx-0x5dfcd5ae],1
  419c29:	in     al,0xf2
  419c2b:	sbb    ecx,ebp
  419c2d:	aad    0x3f
  419c2f:	js     0x419c4a
  419c31:	xchg   edx,eax
  419c32:	ret    
  419c33:	dec    edx
  419c34:	int    0x47
  419c36:	inc    ecx
  419c37:	stos   BYTE PTR es:[edi],al
  419c38:	xchg   esp,eax
  419c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c3a:	dec    ebx
  419c3b:	xchg   edx,eax
  419c3d:	jge    0x419c5e
  419c3f:	push   es
  419c40:	arpl   WORD PTR [eax-0x5a],cx
  419c43:	xor    dh,BYTE PTR [eax+ebp*2-0x33]
  419c47:	cwde   
  419c48:	fist   DWORD PTR [esi+0x79e1e5ee]
  419c4e:	inc    ebx
  419c4f:	and    al,0x8c
  419c51:	popf   
  419c52:	push   esp
  419c53:	loope  0x419c2a
  419c55:	fst    QWORD PTR [ebx-0x49c53eb0]
  419c5b:	xchg   BYTE PTR [eax],ch
  419c5d:	add    BYTE PTR [edx],cl
  419c5f:	jmp    0xd765:0x3ad2c565
  419c66:	ss xchg ebp,eax
  419c68:	ficomp DWORD PTR [ebx]
  419c6a:	mov    al,0x2e
  419c6c:	int    0x6d
  419c6e:	mov    al,ds:0x9023c748
  419c73:	add    esp,DWORD PTR [edx-0x186f9537]
  419c79:	(bad)  [edx-0x773f9b43]
  419c7f:	loope  0x419c36
  419c81:	adc    al,0x4
  419c83:	jmp    0x340c:0x917f4641
  419c8a:	(bad)  
  419c8c:	mov    esi,0x4f78710d
  419c91:	ins    BYTE PTR es:[edi],dx
  419c92:	push   0xc0706a0a
  419c97:	repnz mov al,ds:0x140517de
  419c9d:	test   BYTE PTR [eax+0x33db5604],cl
  419ca3:	ds jle 0x419d18
  419ca6:	and    BYTE PTR [eax],dl
  419ca8:	mov    ds:0x36ef6e4a,eax
  419cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cae:	sbb    DWORD PTR [edx],eax
  419cb0:	pusha  
  419cb1:	mov    eax,ds:0x4815bafa
  419cb6:	dec    esi
  419cb7:	jecxz  0x419c95
  419cb9:	into   
  419cba:	nop
  419cbb:	cmp    dl,BYTE PTR [edi-0x386be786]
  419cc1:	lock lock cdq 
  419cc4:	or     al,ch
  419cc6:	jl     0x419d24
  419cc8:	in     eax,dx
  419cc9:	xchg   esp,eax
  419cca:	mov    eax,ds:0x50cb42ab
  419ccf:	loopne 0x419c6a
  419cd1:	into   
  419cd2:	test   eax,0xbbb8d435
  419cd7:	mov    cl,0x86
  419cd9:	scas   eax,DWORD PTR es:[edi]
  419cda:	sbb    BYTE PTR [ecx],0x7f
  419cdd:	and    eax,0xb21ad3db
  419ce2:	int    0x88
  419ce4:	push   ebx
  419ce5:	out    0x1b,eax
  419ce7:	lock mov DWORD PTR [ebx+0x165d14a],edi
  419cee:	sbb    al,0xb2
  419cf0:	xor    esp,DWORD PTR cs:[ebx+0x4dfcece1]
  419cf7:	(bad)  
  419cf9:	xchg   DWORD PTR [eax],esi
  419cfb:	retf   
  419cfc:	iret   
  419cfd:	inc    edi
  419cfe:	or     edx,eax
  419d00:	pop    esi
  419d01:	or     DWORD PTR [edi+eiz*8+0x4f127f9c],0xffffffd3
  419d09:	rcr    eax,0x6c
  419d0c:	push   esp
  419d0d:	out    dx,al
  419d0e:	dec    edi
  419d0f:	jp     0x419ce5
  419d11:	sbb    eax,DWORD PTR [esi+ebx*1-0x50]
  419d15:	xor    BYTE PTR [ecx+esi*4-0x1989c2e1],ch
  419d1c:	mov    ecx,0x5d426610
  419d21:	xchg   edi,eax
  419d22:	jl     0x419d8d
  419d24:	push   cs
  419d25:	aad    0x8
  419d27:	mov    ebp,DWORD PTR [ebx]
  419d29:	call   0x1068:0x72e3d857
  419d30:	test   eax,0x270a0340
  419d35:	gs mov edi,0x87dc5dc
  419d3b:	adc    eax,0x6ed6bf6a
  419d40:	push   esp
  419d41:	fbld   TBYTE PTR [edx-0x1da663a4]
  419d47:	icebp  
  419d48:	mov    ebx,DWORD PTR [ebx-0x8]
  419d4b:	dec    ebx
  419d4c:	in     eax,0xe
  419d4e:	jns    0x419cf1
  419d50:	arpl   WORD PTR [ecx-0x192c8026],bx
  419d56:	mov    ds:0xdcf6ffba,al
  419d5b:	or     eax,0x71dd010f
  419d60:	test   eax,0xdcd8cc82
  419d65:	fisub  WORD PTR [ebx]
  419d67:	cs jmp 0x53bf5575
  419d6d:	test   BYTE PTR [edi+edx*1-0x8],0x30
  419d72:	fsub   DWORD PTR [ecx-0x4359ea1a]
  419d78:	jo     0x419cfa
  419d7a:	sub    dh,0xa5
  419d7d:	jle    0x419dec
  419d7f:	in     eax,dx
  419d80:	out    dx,al
  419d81:	les    edx,FWORD PTR [edi+0x1a]
  419d84:	mov    ch,dl
  419d86:	push   0xd66979a9
  419d8b:	daa    
  419d8c:	and    eax,0x74edd7e
  419d91:	pushf  
  419d92:	add    edx,DWORD PTR [ebp+0x3182e959]
  419d98:	pusha  
  419d99:	dec    esp
  419d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d9b:	inc    esi
  419d9c:	xchg   ecx,eax
  419d9d:	out    0xe3,eax
  419d9f:	aaa    
  419da0:	jmp    0x419daf
  419da2:	retf   
  419da3:	push   ss
  419da4:	rol    DWORD PTR [esi],cl
  419da6:	out    0x25,al
  419da8:	sub    DWORD PTR [ecx-0x39ada6f2],esi
  419dae:	add    BYTE PTR [ecx-0x2],al
  419db1:	and    esp,DWORD PTR [ecx-0x5b]
  419db4:	mov    ebp,0x433d2205
  419db9:	ret    0xe0b1
  419dbc:	xchg   esi,eax
  419dbd:	sub    eax,0xbbc57ed7
  419dc2:	pop    edx
  419dc3:	fwait
  419dc4:	adc    eax,0x84ac5564
  419dc9:	adc    cl,bh
  419dcb:	faddp  st(5),st
  419dcd:	mov    ch,0x44
  419dcf:	js     0x419e17
  419dd1:	lahf   
  419dd2:	popa   
  419dd3:	cld    
  419dd4:	test   ah,bh
  419dd6:	jbe    0x419e1e
  419dd8:	daa    
  419dd9:	jecxz  0x419d73
  419ddb:	and    eax,0x51684e3d
  419de0:	dec    ebx
  419de1:	clc    
  419de2:	xchg   esp,eax
  419de3:	in     al,dx
  419de4:	clc    
  419de5:	push   esp
  419de6:	pop    edi
  419de7:	cwde   
  419de8:	test   eax,0x51cc395
  419ded:	cmp    ebx,DWORD PTR [eax-0x75]
  419df0:	add    al,bh
  419df2:	test   eax,0xda11ee0a
  419df7:	aam    0x90
  419df9:	fucomp st(1)
  419dfb:	mov    bh,0x85
  419dfd:	push   0xffffff87
  419dff:	inc    ecx
  419e00:	and    ah,cl
  419e02:	pop    ss
  419e03:	or     BYTE PTR [edi+0x6a],cl
  419e06:	daa    
  419e07:	aad    0xdc
  419e09:	ror    DWORD PTR [esi-0x7],cl
  419e0c:	leave  
  419e0d:	inc    edi
  419e0e:	mov    ebp,0x23dacc97
  419e13:	test   DWORD PTR [ecx+0x6e2181],eax
  419e19:	call   0xfe9ea2b6
  419e1e:	repz into 
  419e20:	outs   dx,DWORD PTR ds:[esi]
  419e21:	jbe    0x419e7f
  419e23:	pop    esi
  419e24:	and    al,0xf3
  419e26:	mov    edi,0x5b147ac3
  419e2b:	loopne 0x419df5
  419e2d:	xchg   ecx,eax
  419e2e:	ds xchg esp,eax
  419e30:	ja     0x419e42
  419e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e33:	push   cs
  419e34:	jb     0x419db7
  419e36:	fsub   DWORD PTR [edx*2+0x174be0e5]
  419e3d:	loopne 0x419e6a
  419e3f:	mov    gs,WORD PTR [ecx+0x4c89ab50]
  419e45:	jb     0x419dfb
  419e47:	sbb    eax,0x5ac1cdbb
  419e4c:	add    al,0x7f
  419e4e:	jo     0x419e96
  419e50:	in     al,0xbd
  419e52:	pushf  
  419e53:	lds    ecx,FWORD PTR [edx]
  419e55:	jle    0x419e39
  419e57:	lods   eax,DWORD PTR ds:[esi]
  419e58:	ret    
  419e59:	jge    0x419eba
  419e5b:	bound  esi,QWORD PTR [ebx]
  419e5d:	ins    BYTE PTR es:[edi],dx
  419e5e:	sub    BYTE PTR [eax+0x3da9a3c2],0xfc
  419e65:	jnp    0x419e17
  419e67:	stos   DWORD PTR es:[edi],eax
  419e68:	shr    DWORD PTR [edi],0x96
  419e6b:	popa   
  419e6c:	add    DWORD PTR [ecx-0x3e06e245],esp
  419e72:	fimul  WORD PTR [eax]
  419e74:	push   ecx
  419e75:	sub    DWORD PTR [ecx],0x76
  419e78:	shl    edx,0xf3
  419e7b:	mov    bl,0xce
  419e7d:	stc    
  419e7e:	inc    esp
  419e7f:	push   ebx
  419e80:	xchg   edi,eax
  419e81:	fucomp st(6)
  419e83:	call   0x4045f884
  419e88:	jb     0x419ea5
  419e8a:	lahf   
  419e8b:	out    0x5,eax
  419e8d:	call   0x6f03:0xc4650688
  419e94:	jmp    0xbef85d12
  419e99:	call   0x57a4:0x76eeedf8
  419ea0:	pop    edx
  419ea1:	dec    ebp
  419ea2:	and    cl,dl
  419ea4:	mov    dh,0xc5
  419ea6:	rcl    BYTE PTR [ebx-0x59],0xc5
  419eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eab:	jp     0x419ea6
  419ead:	add    ebp,esp
  419eaf:	imul   eax,DWORD PTR [ebp+0x39],0xffffffd6
  419eb3:	test   DWORD PTR [ecx],eax
  419eb5:	data16 sub al,dh
  419eb8:	out    0x8c,eax
  419eba:	push   0xc
  419ebc:	xor    al,0xa6
  419ebe:	sbb    DWORD PTR [esi+0x3],edi
  419ec1:	shr    al,0x49
  419ec4:	sti    
  419ec5:	xchg   BYTE PTR [edi-0x6cea3a91],dl
  419ecb:	mov    eax,ds:0xa7d541e3
  419ed0:	jmp    0x419e5d
  419ed2:	sbb    DWORD PTR [esi+0x52],eax
  419ed5:	inc    esi
  419ed6:	sub    dl,al
  419ed8:	dec    esi
  419ed9:	add    eax,0xeb12d7ce
  419ede:	ror    DWORD PTR [ecx-0x63],cl
  419ee1:	fxch   st(1)
  419ee3:	jno    0x419e8d
  419ee5:	dec    esi
  419ee6:	ret    0x9569
  419ee9:	pop    ds
  419eea:	adc    BYTE PTR [eax],bh
  419eec:	mov    ds:0xef42bf27,al
  419ef1:	bnd jl 0x419eba
  419ef4:	repz inc esp
  419ef6:	and    DWORD PTR [eax+0x2f3dfd53],esp
  419efc:	imul   esp,edi,0xf50a2f7f
  419f02:	mov    ebp,DWORD PTR [edi]
  419f04:	cmp    eax,esi
  419f06:	lods   al,BYTE PTR ds:[esi]
  419f07:	push   cs
  419f08:	not    BYTE PTR [esi+ebx*8-0x533d6429]
  419f0f:	hlt    
  419f10:	mov    ebp,0xa0d1a375
  419f15:	out    0xab,eax
  419f17:	and    al,0x3b
  419f19:	lahf   
  419f1a:	pushf  
  419f1b:	sbb    esp,DWORD PTR [ecx+ecx*4+0xdf50de9]
  419f22:	xor    dh,BYTE PTR [eax]
  419f24:	cmp    ebx,edx
  419f26:	sub    al,0x36
  419f28:	add    eax,0x5f7c02e
  419f2d:	push   0xffffffb8
  419f2f:	push   ds
  419f30:	adc    BYTE PTR [ebp+0x62a2140e],0xcd
  419f37:	dec    esi
  419f38:	data16 int 0x9c
  419f3b:	mov    WORD PTR [ebx],ss
  419f3d:	add    al,BYTE PTR [edi-0x22]
  419f40:	jg     0x419f6b
  419f42:	(bad)  
  419f43:	mov    ah,0xc2
  419f45:	cld    
  419f46:	mov    dl,0x2f
  419f48:	mov    dh,cl
  419f4a:	outs   dx,BYTE PTR ds:[esi]
  419f4b:	aas    
  419f4c:	push   0x7fa4ff0c
  419f51:	and    eax,0x5ef800c8
  419f56:	nop
  419f57:	pop    esi
  419f58:	mov    dl,BYTE PTR [edi-0x2c]
  419f5b:	sub    BYTE PTR ds:0x55a615c0,0xea
  419f62:	std    
  419f63:	clc    
  419f64:	push   ecx
  419f65:	(bad)  
  419f66:	mov    dh,0x68
  419f68:	push   ecx
  419f69:	mov    es,WORD PTR [ebx]
  419f6b:	mov    esp,0x4f665fb0
  419f70:	in     eax,0x7c
  419f72:	frstor [edi+0x23bf0d59]
  419f78:	mov    ecx,DWORD PTR [eax*1+0x3549f18c]
  419f7f:	mov    ah,BYTE PTR [eax]
  419f81:	(bad)  
  419f82:	sbb    ah,BYTE PTR [esi+0x35c79b9f]
  419f88:	(bad)  
  419f89:	pop    ecx
  419f8a:	push   esp
  419f8b:	in     al,dx
  419f8c:	dec    esp
  419f8d:	push   cs
  419f8e:	je     0x419fe4
  419f90:	aam    0x3f
  419f92:	sub    bl,BYTE PTR [esi-0x79]
  419f95:	int    0x5b
  419f97:	and    BYTE PTR [eax-0x184871c0],al
  419f9d:	mov    dl,0x73
  419f9f:	inc    esp
  419fa0:	pop    ebp
  419fa1:	adc    eax,0xf5375ea0
  419fa6:	pop    edx
  419fa7:	in     al,0x56
  419fa9:	cmp    al,0x98
  419fab:	cmp    eax,DWORD PTR [ebp+ebp*2-0x2c57ab1e]
  419fb2:	pop    edx
  419fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb4:	ins    DWORD PTR es:[edi],dx
  419fb5:	ins    BYTE PTR es:[edi],dx
  419fb6:	mov    bh,0xf7
  419fb8:	add    eax,0xcf513487
  419fbd:	push   fs
  419fbf:	mov    ecx,0x63f69dd3
  419fc4:	cli    
  419fc5:	or     eax,0xa6f85ec7
  419fca:	xchg   ecx,eax
  419fcb:	std    
  419fcc:	sbb    al,0x80
  419fce:	cwde   
  419fcf:	repz and bh,BYTE PTR [edx+edi*2-0x11883099]
  419fd7:	add    ebx,ebx
  419fd9:	inc    edi
  419fda:	int3   
  419fdb:	xlat   BYTE PTR ds:[ebx]
  419fdc:	cmp    DWORD PTR [ebp-0x38],edx
  419fdf:	imul   BYTE PTR [edi-0x7bff7f4e]
  419fe5:	lds    edi,FWORD PTR [eax]
  419fe7:	xchg   ebp,eax
  419fe8:	sub    DWORD PTR [eax],ebp
  419fea:	in     eax,dx
  419feb:	adc    DWORD PTR [edi+0x4f9a664d],0x37e02f56
  419ff5:	mul    DWORD PTR [eax+0x759824ba]
  419ffb:	(bad)  
  419ffc:	test   BYTE PTR [ecx],dl
  419ffe:	aas    
  419fff:	cwde   
  41a000:	mov    bl,0x2b
  41a002:	lahf   
  41a003:	and    esp,DWORD PTR [ecx+ebp*8+0x4addb335]
  41a00a:	idiv   BYTE PTR [ebp+0x2a1e564d]
  41a010:	adc    BYTE PTR [ebx],0x4f
  41a013:	gs push edx
  41a015:	imul   DWORD PTR [ecx-0x67]
  41a018:	sahf   
  41a019:	ins    DWORD PTR es:[edi],dx
  41a01a:	pop    edx
  41a01b:	xchg   edi,eax
  41a01c:	mov    eax,ds:0xa9c21946
  41a021:	jno    0x419fb5
  41a023:	add    eax,0x28d89713
  41a028:	bound  ebx,QWORD PTR [esi+0x4a8c0b2e]
  41a02e:	jcxz   0x41a06e
  41a031:	mov    fs,WORD PTR [ebx-0x7d5cca6d]
  41a037:	add    BYTE PTR [edi],0xa2
  41a03a:	js     0x419fd1
  41a03c:	sub    al,0x6a
  41a03e:	pop    edx
  41a03f:	mov    esi,0x312f929e
  41a044:	and    ecx,DWORD PTR [ebx+ebp*8-0x45a4d952]
  41a04b:	push   0x56
  41a04d:	int3   
  41a04e:	cld    
  41a04f:	retf   
  41a050:	dec    eax
  41a051:	sub    al,0x64
  41a053:	xlat   BYTE PTR ds:[ebx]
  41a054:	daa    
  41a055:	xchg   BYTE PTR [esi+0x6deb484c],bl
  41a05b:	mov    ch,0xff
  41a05d:	or     BYTE PTR [edx+0x41ece516],ch
  41a063:	push   0xeb1371dd
  41a068:	jne    0x419ff1
  41a06a:	shr    dh,1
  41a06c:	pop    ss
  41a06d:	fchs   
  41a06f:	mov    cl,0x87
  41a071:	jmp    0x858e:0xe123c783
  41a078:	test   esi,esi
  41a07a:	pop    ecx
  41a07b:	scas   eax,DWORD PTR es:[edi]
  41a07c:	pop    esi
  41a07d:	dec    eax
  41a07e:	dec    edx
  41a07f:	stos   BYTE PTR es:[edi],al
  41a080:	lock cld 
  41a082:	mov    esp,0x7295c682
  41a087:	cmp    eax,0xfcd0b1ef
  41a08c:	cmp    al,0x8e
  41a08e:	scas   al,BYTE PTR es:[edi]
  41a08f:	push   ds
  41a090:	mov    bl,BYTE PTR [ebp+ecx*8+0x471a2b2f]
  41a097:	jg     0x41a0d7
  41a099:	ja     0x41a06c
  41a09b:	(bad)  [edi-0xb]
  41a09e:	out    dx,eax
  41a09f:	adc    eax,edi
  41a0a1:	cmp    BYTE PTR [edx],ch
  41a0a3:	imul   eax,DWORD PTR [edi],0xffffffc0
  41a0a6:	mov    bl,0xa1
  41a0a8:	dec    edx
  41a0a9:	stos   BYTE PTR es:[edi],al
  41a0aa:	push   cs
  41a0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ac:	or     ebp,DWORD PTR [ebp+0x6c]
  41a0af:	fiadd  WORD PTR [edi]
  41a0b1:	daa    
  41a0b2:	stos   DWORD PTR es:[edi],eax
  41a0b3:	out    dx,al
  41a0b4:	ja     0x41a11d
  41a0b6:	sar    BYTE PTR [ebp-0x49],1
  41a0b9:	xor    dl,BYTE PTR [eax]
  41a0bb:	fwait
  41a0bc:	lods   eax,DWORD PTR ds:[esi]
  41a0bd:	push   ebp
  41a0be:	icebp  
  41a0bf:	and    al,BYTE PTR [ebp+eiz*4+0x33]
  41a0c3:	in     al,0x9f
  41a0c5:	xchg   BYTE PTR [ecx-0x2f],ah
  41a0c8:	btc    ebx,ebx
  41a0cb:	nop
  41a0cc:	shl    BYTE PTR [edi+0x283beb25],1
  41a0d2:	mov    ecx,0x7232ad93
  41a0d7:	sbb    esp,DWORD PTR [eax+0x2f]
  41a0da:	iret   
  41a0db:	push   ebx
  41a0dc:	sar    BYTE PTR [ebp+0x67],1
  41a0df:	inc    ecx
  41a0e0:	out    dx,eax
  41a0e1:	hlt    
  41a0e2:	add    eax,0xe75d3392
  41a0e7:	out    dx,al
  41a0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e9:	js     0x41a124
  41a0eb:	mov    al,0x0
  41a0ed:	retf   
  41a0ee:	(bad)  
  41a0ef:	cmp    BYTE PTR es:0x3db8fcf,0x93
  41a0f7:	inc    ecx
  41a0f8:	dec    ebp
  41a0f9:	sbb    ch,BYTE PTR [esi+edi*2+0x71]
  41a0fd:	and    bh,BYTE PTR [ecx-0x3c]
  41a100:	add    eax,0xaef19b39
  41a105:	xor    BYTE PTR [edi-0x9e5d4a1],bh
  41a10b:	out    0x5f,al
  41a10d:	mov    ds:0xd76acf5b,eax
  41a112:	sub    al,0xac
  41a114:	fistp  WORD PTR [ebp-0x19a0118b]
  41a11a:	mov    dl,0x73
  41a11c:	xchg   edi,eax
  41a11d:	fcmovne st,st(4)
  41a11f:	adc    BYTE PTR [esi],dh
  41a121:	add    eax,0xe10910fc
  41a126:	ret    
  41a127:	mov    ah,0x8c
  41a129:	cmp    esi,DWORD PTR [ebp+ebp*1-0x7821e3b9]
  41a130:	mov    ah,0x12
  41a132:	fcomp  QWORD PTR [esi+0x7714f6f2]
  41a138:	mov    DWORD PTR [esi*8+0x33c1415b],edi
  41a13f:	(bad)  
  41a141:	xchg   BYTE PTR [ecx-0x6f],al
  41a144:	mov    bh,0xf4
  41a146:	ja     0x41a0f6
  41a148:	or     bh,BYTE PTR [ebp+0x7ee54972]
  41a14e:	or     bh,BYTE PTR [esi-0x6361645a]
  41a154:	clc    
  41a155:	mov    ebx,0xf74430e1
  41a15a:	aam    0xc9
  41a15c:	push   edx
  41a15d:	or     eax,0x3ae172f2
  41a162:	cmp    al,0xd0
  41a164:	popa   
  41a165:	jbe    0x41a1d9
  41a167:	in     eax,dx
  41a168:	les    eax,FWORD PTR [edx+0x5916e0e8]
  41a16e:	jle    0x41a1a3
  41a170:	outs   dx,DWORD PTR ds:[esi]
  41a171:	jo     0x41a128
  41a173:	cmp    cl,BYTE PTR [esi-0xd]
  41a176:	sub    al,BYTE PTR [ebx]
  41a178:	add    ch,BYTE PTR [ebx]
  41a17a:	jp     0x41a17d
  41a17c:	sub    bl,BYTE PTR [eax+edx*2-0x5c51bf1]
  41a183:	dec    ebx
  41a184:	lods   eax,DWORD PTR ds:[esi]
  41a185:	inc    esp
  41a186:	mov    al,0x4e
  41a188:	mov    esi,ebp
  41a18a:	jmp    0x1c9ffd84
  41a18f:	neg    DWORD PTR [ecx-0x2769b8c1]
  41a195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a196:	dec    edx
  41a197:	inc    eax
  41a198:	add    eax,0x84a66b6d
  41a19d:	fucomi st,st(7)
  41a19f:	jecxz  0x41a18e
  41a1a1:	iret   
  41a1a2:	and    eax,0x2c716f38
  41a1a7:	pusha  
  41a1a8:	not    DWORD PTR [ebx]
  41a1aa:	out    0x5e,eax
  41a1ac:	mov    al,ds:0x1a99e897
  41a1b1:	cmp    DWORD PTR es:[ecx+eax*1-0x562bd56d],eax
  41a1b9:	push   edx
  41a1ba:	inc    esp
  41a1bb:	mov    ebp,0x71999004
  41a1c0:	jge    0x41a167
  41a1c2:	and    cl,dl
  41a1c4:	retf   0xfac6
  41a1c7:	jb     0x41a235
  41a1c9:	js     0x41a182
  41a1cb:	nop
  41a1cc:	out    0x42,eax
  41a1ce:	test   BYTE PTR [edi],bl
  41a1d0:	(bad)  
  41a1d1:	or     eax,0x5ff85272
  41a1d6:	imul   edi,DWORD PTR [ebx*8-0xf6372c2],0x20b73205
  41a1e1:	test   BYTE PTR [edx],bl
  41a1e3:	mov    ds:0x4d14d8b8,eax
  41a1e8:	stos   BYTE PTR es:[edi],al
  41a1e9:	dec    eax
  41a1ea:	pop    esi
  41a1eb:	and    BYTE PTR [ecx-0x3d],bh
  41a1ee:	ret    
  41a1ef:	add    BYTE PTR [edx+0x64fefec1],bh
  41a1f5:	sbb    al,0xee
  41a1f7:	push   es
  41a1f8:	xor    ecx,DWORD PTR [ecx-0x1c]
  41a1fb:	sub    esi,eax
  41a1fd:	test   bh,0xe6
  41a200:	bound  esp,QWORD PTR [ecx+0x24b95ed7]
  41a206:	stos   BYTE PTR es:[edi],al
  41a207:	mov    bl,0xa4
  41a209:	sahf   
  41a20a:	add    dh,BYTE PTR [ebx-0x19]
  41a20d:	dec    edi
  41a20e:	mov    ecx,0x4c55a945
  41a213:	gs pop ebp
  41a215:	(bad)  
  41a216:	mov    BYTE PTR [esi-0x58],0x70
  41a21a:	adc    BYTE PTR [eax-0x48b67529],ah
  41a220:	dec    ebp
  41a221:	fldenv [ebp-0x7e]
  41a224:	push   ecx
  41a225:	add    DWORD PTR ds:0x56fe7a5a,eax
  41a22b:	mov    ds:0x8e60117f,eax
  41a230:	cmp    DWORD PTR [ebx-0x22afd076],edx
  41a236:	out    0x35,eax
  41a238:	mov    BYTE PTR [ecx],ch
  41a23a:	xor    DWORD PTR [esi],ecx
  41a23c:	sub    DWORD PTR [eax-0x4d],ebx
  41a23f:	in     al,0xd
  41a241:	push   esp
  41a242:	jl     0x41a29c
  41a244:	mov    dh,dh
  41a246:	gs gs mov cl,dh
  41a24a:	mov    esp,0x4f536137
  41a24f:	sahf   
  41a250:	stc    
  41a251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a252:	mov    bl,0xa2
  41a254:	les    ebp,FWORD PTR [edx+0x2c92f7ff]
  41a25a:	and    eax,0x20ef4ea
  41a25f:	loopne 0x41a1ec
  41a261:	lea    edi,[ebx+0x10]
  41a264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a265:	scas   eax,DWORD PTR es:[edi]
  41a266:	push   cs
  41a267:	jo     0x41a280
  41a269:	mov    edi,0x5b8ebb88
  41a26e:	dec    ebp
  41a26f:	bound  edx,QWORD PTR [ebx-0x20]
  41a272:	mov    eax,ds:0x98747d5
  41a277:	push   ebp
  41a278:	lock or ecx,DWORD PTR [eax]
  41a27b:	add    esp,DWORD PTR [ebp+0x1a]
  41a27e:	dec    eax
  41a27f:	push   0xecaef620
  41a284:	sub    DWORD PTR [edi-0x19],esi
  41a287:	out    dx,al
  41a288:	sbb    eax,ebx
  41a28a:	rcr    dh,1
  41a28c:	imul   edi,DWORD PTR [eax-0x77f40d88],0x43bc0e11
  41a296:	imul   esi,ebx,0xd61b6e3e
  41a29c:	jge    0x41a314
  41a29e:	fcom   DWORD PTR ds:0x8b7bbf75
  41a2a4:	ins    DWORD PTR es:[edi],dx
  41a2a5:	inc    ecx
  41a2a6:	and    esi,DWORD PTR [eax+0x70]
  41a2a9:	sbb    ecx,DWORD PTR [eax+0xcac7170]
  41a2af:	add    ah,BYTE PTR [eax-0x184a696e]
  41a2b5:	ret    
  41a2b6:	lds    edx,FWORD PTR [ebp-0x13743e99]
  41a2bc:	and    eax,0x659b40a9
  41a2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c2:	int    0xda
  41a2c4:	cmp    al,dl
  41a2c6:	popf   
  41a2c7:	xchg   ebp,eax
  41a2c8:	adc    eax,0x214a85a3
  41a2cd:	shl    BYTE PTR [ecx-0x3a],cl
  41a2d0:	mov    al,ds:0x3f48b2cc
  41a2d5:	aaa    
  41a2d6:	mov    dh,0x83
  41a2d8:	std    
  41a2d9:	cmp    edx,DWORD PTR [ecx-0x70]
  41a2dc:	cli    
  41a2dd:	lods   al,BYTE PTR ds:[esi]
  41a2de:	ret    0x68e
  41a2e1:	lods   eax,DWORD PTR ds:[esi]
  41a2e2:	popa   
  41a2e3:	test   eax,0x1bce5eb0
  41a2e8:	pop    esp
  41a2e9:	call   FWORD PTR [esi+ebp*8+0x6d]
  41a2ed:	xchg   edx,eax
  41a2ee:	mov    dh,0xea
  41a2f0:	cmp    ebx,edi
  41a2f2:	dec    edi
  41a2f3:	loope  0x41a2b7
  41a2f5:	aaa    
  41a2f6:	outs   dx,BYTE PTR ds:[esi]
  41a2f7:	mov    eax,0x715e6294
  41a2fc:	stc    
  41a2fd:	or     eax,0xb6477280
  41a302:	fwait
  41a303:	jbe    0x41a348
  41a305:	xor    bl,BYTE PTR [edi]
  41a307:	mov    ds:0xbecdddd8,al
  41a30c:	add    al,0xad
  41a30e:	scas   eax,DWORD PTR es:[edi]
  41a30f:	outs   dx,BYTE PTR ds:[esi]
  41a310:	fmul   DWORD PTR [esi+0x32]
  41a313:	push   ss
  41a314:	push   edx
  41a315:	jmp    0x41a368
  41a317:	(bad)  [ebp-0x7]
  41a31a:	(bad)  
  41a31b:	mov    ah,0xad
  41a31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a31e:	in     al,0xef
  41a320:	push   ebp
  41a321:	or     dl,BYTE PTR [edx+0x37]
  41a324:	xor    DWORD PTR [esi],0x36666638
  41a32a:	gs jb  0x41a2af
  41a32d:	mov    esi,0x930b2ab9
  41a332:	dec    eax
  41a333:	imul   BYTE PTR [edx-0x28e4accb]
  41a339:	cmp    DWORD PTR [edi],eax
  41a33b:	adc    ax,0x5075
  41a33f:	rcr    BYTE PTR [eax-0x20],0xdb
  41a343:	pop    eax
  41a344:	xchg   ebp,eax
  41a345:	mov    BYTE PTR [esi+ebp*4+0x666813aa],dh
  41a34c:	mov    ah,0xa5
  41a34e:	push   eax
  41a34f:	add    eax,0x416d3751
  41a354:	lods   al,BYTE PTR ds:[esi]
  41a355:	(bad)  
  41a356:	and    DWORD PTR [ecx-0x56],esp
  41a359:	pop    es
  41a35a:	xchg   DWORD PTR [edi+0x3a],ebp
  41a35d:	xor    ebp,DWORD PTR [ebp-0x4a]
  41a360:	sti    
  41a361:	adc    al,0xf
  41a363:	xor    eax,0xf7ff497d
  41a368:	imul   BYTE PTR ds:0x33ceea16
  41a36e:	ins    BYTE PTR es:[edi],dx
  41a36f:	popa   
  41a370:	sub    BYTE PTR [esi+ecx*1-0x66],ch
  41a374:	mov    ds:0xc64a1086,eax
  41a379:	cli    
  41a37a:	vmulps ymm5,ymm5,DWORD PTR [ecx]{1to8}
  41a380:	jns    0x41a36d
  41a382:	int3   
  41a383:	fild   QWORD PTR [ecx+edi*8-0x41]
  41a387:	(bad)  
  41a388:	(bad)  
  41a389:	dec    ecx
  41a38a:	and    BYTE PTR [edx],cl
  41a38c:	mov    cl,0xf7
  41a38e:	enter  0x1f14,0x39
  41a392:	shl    dl,0xa3
  41a395:	jg     0x41a32f
  41a397:	repnz fxch st(4)
  41a39a:	pop    esp
  41a39b:	push   0xffffffa9
  41a39d:	xchg   esp,eax
  41a39e:	xchg   DWORD PTR [eax-0x3e],ebx
  41a3a1:	into   
  41a3a2:	std    
  41a3a3:	and    BYTE PTR [edi+esi*4],bh
  41a3a6:	mov    esi,0xcd551d2b
  41a3ab:	sbb    DWORD PTR [esi-0x1b],eax
  41a3ae:	cmp    eax,0x119338d3
  41a3b3:	mov    bl,0xe
  41a3b5:	sar    BYTE PTR [ecx+0x6c9a655b],0xb
  41a3bc:	hlt    
  41a3bd:	push   ebp
  41a3be:	cmp    al,0x9c
  41a3c0:	enter  0x5323,0xe9
  41a3c4:	ss shr esp,1
  41a3c7:	enter  0x1ecc,0x10
  41a3cb:	mov    edi,0x56b785ce
  41a3d0:	pop    ds
  41a3d1:	xchg   esp,eax
  41a3d2:	shl    DWORD PTR [edi+0x4f],cl
  41a3d5:	ja     0x41a367
  41a3d7:	imul   BYTE PTR [esi+0x23]
  41a3da:	jecxz  0x41a37f
  41a3dc:	pop    ds
  41a3dd:	bound  edx,QWORD PTR [edx-0x53]
  41a3e0:	gs inc ecx
  41a3e2:	cmp    BYTE PTR [edx+0x3a9cd2df],al
  41a3e8:	mov    esi,eax
  41a3ea:	sbb    al,dl
  41a3ec:	sbb    eax,0xbc1b9006
  41a3f1:	xlat   BYTE PTR ds:[ebx]
  41a3f2:	out    dx,eax
  41a3f3:	push   cs
  41a3f4:	adc    BYTE PTR [ecx],0x84
  41a3f7:	sbb    eax,0xbb903016
  41a3fc:	cld    
  41a3fd:	repz sub ebx,ecx
  41a400:	dec    edx
  41a401:	stos   DWORD PTR es:[edi],eax
  41a402:	ins    BYTE PTR es:[edi],dx
  41a403:	sbb    eax,0x7f712298
  41a408:	mov    ds:0x9bc327c5,eax
  41a40d:	das    
  41a40e:	sbb    DWORD PTR [edx-0x3],edx
  41a411:	push   esi
  41a412:	mov    al,0x23
  41a414:	lods   eax,DWORD PTR ds:[esi]
  41a415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a416:	and    eax,ecx
  41a418:	xchg   esi,eax
  41a419:	(bad)  
  41a41a:	xor    edx,DWORD PTR ds:0xe24af9f7
  41a420:	outs   dx,BYTE PTR ds:[esi]
  41a421:	xor    eax,0x73a374f5
  41a426:	scas   eax,DWORD PTR es:[edi]
  41a427:	push   ecx
  41a428:	ret    0x7d87
  41a42b:	mov    cl,0x7d
  41a42d:	lock or BYTE PTR [eax+0x16b457ee],al
  41a434:	add    BYTE PTR [esi-0x45],0xda
  41a438:	arpl   ax,bx
  41a43a:	(bad)  
  41a43c:	cmp    edx,DWORD PTR [ebx+0x23dc01fd]
  41a442:	ds pop ds
  41a444:	pop    esi
  41a445:	sub    eax,0xaf62e471
  41a44a:	out    0x3e,al
  41a44c:	adc    BYTE PTR [esi],dl
  41a44e:	out    dx,eax
  41a44f:	repnz retf 
  41a451:	push   ebx
  41a452:	jne    0x41a4a4
  41a454:	xchg   ebp,eax
  41a455:	mov    esp,0x7a1ed8fb
  41a45a:	xchg   edi,eax
  41a45b:	mov    eax,0x61c67da3
  41a460:	and    al,0x9f
  41a462:	xchg   esi,eax
  41a463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a464:	mov    WORD PTR [esi+0x7a8ae981],gs
  41a46a:	dec    eax
  41a46b:	in     eax,0x1b
  41a46d:	in     al,dx
  41a46e:	pusha  
  41a46f:	cmc    
  41a470:	(bad)  
  41a471:	(bad)  
  41a472:	sub    edi,DWORD PTR [esp+eiz*8+0x5c]
  41a476:	out    dx,al
  41a477:	push   0xfb8e41a
  41a47c:	adc    DWORD PTR [ebp+0x10],ebx
  41a47f:	loope  0x41a45b
  41a481:	test   eax,0x476ff01f
  41a486:	inc    edx
  41a487:	je     0x41a44e
  41a489:	into   
  41a48a:	fwait
  41a48b:	inc    ebx
  41a48c:	and    al,0xc4
  41a48e:	xor    eax,0x47aed1ba
  41a493:	cli    
  41a494:	inc    esi
  41a495:	jge    0x41a4ce
  41a497:	popf   
  41a498:	lea    edx,[edx+0x5653ed95]
  41a49e:	inc    ebp
  41a49f:	jmp    0x6e921ae9
  41a4a4:	jge    0x41a439
  41a4a6:	pop    ebp
  41a4a7:	mov    esp,0x5062a
  41a4ac:	mov    ch,0xa8
  41a4ae:	pop    ebx
  41a4af:	mov    ds:0xbb7354bc,al
  41a4b4:	clc    
  41a4b5:	cld    
  41a4b6:	sbb    dh,0x1b
  41a4b9:	popa   
  41a4ba:	popa   
  41a4bb:	lods   eax,DWORD PTR ds:[esi]
  41a4bc:	dec    edx
  41a4bd:	(bad)  
  41a4be:	and    edx,eax
  41a4c0:	and    eax,0x5a1e70c8
  41a4c5:	std    
  41a4c6:	ins    BYTE PTR es:[edi],dx
  41a4c7:	fnstsw WORD PTR ds:0x75ace12e
  41a4cd:	pop    esp
  41a4ce:	xor    eax,0x5419f8a3
  41a4d3:	mov    bl,0x85
  41a4d5:	imul   eax,DWORD PTR [esp+edi*1+0xe],0x56cd2213
  41a4dd:	dec    ebp
  41a4de:	loopne 0x41a51f
  41a4e0:	jns    0x41a481
  41a4e2:	dec    esi
  41a4e3:	sub    al,0x73
  41a4e5:	add    DWORD PTR [eax+0x48],edi
  41a4e8:	dec    ebp
  41a4e9:	out    dx,eax
  41a4ea:	dec    esi
  41a4eb:	loope  0x41a541
  41a4ed:	jp     0x41a4db
  41a4ef:	mov    dh,0xb5
  41a4f1:	jl     0x41a567
  41a4f3:	mov    ecx,DWORD PTR [ebx+0x5a]
  41a4f6:	mov    cl,0x75
  41a4f8:	shr    DWORD PTR [ecx],cl
  41a4fa:	jo     0x41a53b
  41a4fc:	xchg   ebx,eax
  41a4fd:	sbb    BYTE PTR [esp+ebx*2+0x6cef4666],ah
  41a504:	sub    al,0x70
  41a506:	sbb    eax,0x9b8f4f64
  41a50b:	xor    al,0x26
  41a50d:	inc    esi
  41a50e:	inc    edx
  41a50f:	jbe    0x41a56c
  41a511:	sahf   
  41a512:	and    al,0xcc
  41a514:	jo     0x41a4a5
  41a516:	cwde   
  41a517:	dec    eax
  41a518:	into   
  41a519:	mov    al,ds:0xd197b776
  41a51e:	cmp    eax,0x8c602e29
  41a523:	shr    DWORD PTR [ebx-0x2e],cl
  41a526:	cmp    eax,0x50082e11
  41a52b:	and    eax,0x38d7a0b3
  41a530:	jg     0x41a582
  41a532:	xchg   BYTE PTR [edx+0x60],dl
  41a535:	pop    ebx
  41a536:	jae    0x41a4db
  41a538:	je     0x41a50a
  41a53a:	mov    ebp,0x514eae88
  41a53f:	cdq    
  41a540:	(bad)  
  41a541:	stos   DWORD PTR es:[edi],eax
  41a542:	ja     0x41a573
  41a544:	je     0x41a559
  41a546:	les    ecx,FWORD PTR [edx-0x15]
  41a549:	cs pop eax
  41a54b:	in     eax,dx
  41a54c:	and    dl,BYTE PTR [ecx+0x5abd4815]
  41a552:	mov    ds:0xdadacee9,al
  41a557:	sbb    eax,0x59e1f0f1
  41a55c:	or     al,0x7
  41a55e:	mov    esi,eax
  41a560:	xchg   ecx,eax
  41a561:	adc    ah,bh
  41a563:	aam    0x42
  41a565:	lods   al,BYTE PTR ds:[esi]
  41a566:	jecxz  0x41a563
  41a568:	push   edi
  41a569:	cli    
  41a56a:	outs   dx,BYTE PTR ds:[esi]
  41a56b:	inc    edx
  41a56c:	fmul   DWORD PTR [ecx+0x1a3881cf]
  41a572:	scas   al,BYTE PTR es:[edi]
  41a573:	pusha  
  41a574:	iret   
  41a575:	sahf   
  41a576:	and    BYTE PTR [edi-0x1c],al
  41a579:	inc    edx
  41a57a:	jbe    0x41a506
  41a57c:	sahf   
  41a57d:	movzx  edi,BYTE PTR [ebp+eax*1+0x24f7c040]
  41a585:	push   eax
  41a586:	mul    DWORD PTR [edx]
  41a588:	stc    
  41a589:	loope  0x41a51c
  41a58b:	mov    al,0xf4
  41a58d:	inc    esi
  41a58e:	xchg   DWORD PTR [ebp-0x38],esp
  41a591:	out    0x5f,al
  41a593:	cmp    al,0x5
  41a595:	cmp    ebp,DWORD PTR [esi]
  41a597:	or     ecx,DWORD PTR [ecx-0x3f6f7ec7]
  41a59d:	popa   
  41a59e:	and    DWORD PTR [esi],eax
  41a5a0:	cwde   
  41a5a1:	push   edx
  41a5a2:	(bad)  
  41a5a3:	xor    al,0x4b
  41a5a5:	push   esi
  41a5a6:	sbb    ch,ch
  41a5a8:	retf   
  41a5a9:	push   ss
  41a5aa:	push   edx
  41a5ab:	cs scas al,BYTE PTR es:[edi]
  41a5ad:	loope  0x41a554
  41a5af:	add    edx,ebx
  41a5b1:	fiadd  WORD PTR [edx+0x3091f7b5]
  41a5b7:	mov    al,0x3
  41a5b9:	adc    al,0xe7
  41a5bb:	aad    0x63
  41a5bd:	push   es
  41a5be:	xor    al,BYTE PTR [ecx+ecx*1+0x13451c0f]
  41a5c5:	and    esp,edx
  41a5c7:	jae    0x41a5c3
  41a5c9:	stos   DWORD PTR es:[edi],eax
  41a5ca:	sub    DWORD PTR [esi-0x7a],edx
  41a5cd:	idiv   DWORD PTR [ebx+edx*4+0x1d67d4a8]
  41a5d4:	pop    eax
  41a5d5:	xchg   edi,eax
  41a5d6:	mov    cl,0xf9
  41a5d8:	mov    ds:0x2e6b8d2d,eax
  41a5dd:	retf   0xe410
  41a5e0:	cmp    BYTE PTR [ebp+0x5c],0x24
  41a5e4:	(bad)  
  41a5e6:	inc    esp
  41a5e7:	push   edx
  41a5e8:	or     al,0xc2
  41a5ea:	call   0x5a756763
  41a5ef:	scas   eax,DWORD PTR es:[edi]
  41a5f0:	adc    esp,DWORD PTR [ebp-0x36]
  41a5f3:	cdq    
  41a5f4:	rcl    DWORD PTR [esi-0x12],1
  41a5f7:	lods   eax,DWORD PTR ds:[esi]
  41a5f8:	push   esi
  41a5f9:	add    ebp,ecx
  41a5fb:	mov    dl,0x98
  41a5fd:	in     eax,dx
  41a5fe:	add    eax,0x67f6566f
  41a603:	xlat   BYTE PTR ds:[ebx]
  41a604:	cmp    bh,BYTE PTR [ebp-0x46ebc03d]
  41a60a:	cdq    
  41a60b:	adc    ch,BYTE PTR [edi]
  41a60d:	jns    0x41a5b1
  41a60f:	adc    eax,0x13687f8f
  41a614:	dec    ebx
  41a615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a616:	in     al,0x5
  41a618:	inc    edi
  41a619:	mov    al,0xac
  41a61b:	mov    eax,ds:0x642b7735
  41a620:	jns    0x41a693
  41a622:	jbe    0x41a657
  41a624:	push   edx
  41a625:	add    eax,0x49f19c18
  41a62a:	sahf   
  41a62b:	enter  0xfada,0x84
  41a62f:	sbb    eax,0x1114065b
  41a634:	jmp    0xc350:0x5f8b5117
  41a63b:	js     0x41a5bd
  41a63d:	sub    BYTE PTR [ebp+eiz*2+0x640f07bc],dh
  41a644:	outs   dx,DWORD PTR ds:[esi]
  41a645:	in     al,0x55
  41a647:	(bad)  
  41a648:	fisttp DWORD PTR [eax]
  41a64a:	inc    ebx
  41a64b:	or     bl,dl
  41a64d:	fnstcw WORD PTR [ebx+0x17]
  41a650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a651:	add    DWORD PTR [eax],0xffffffc0
  41a654:	xor    dl,al
  41a656:	adc    al,BYTE PTR [eax]
  41a658:	into   
  41a659:	xchg   ebx,eax
  41a65a:	into   
  41a65b:	js     0x41a601
  41a65d:	repz out dx,eax
  41a65f:	and    eax,0x21b13e46
  41a664:	scas   eax,DWORD PTR es:[edi]
  41a665:	sbb    ax,0xe811
  41a669:	jno    0x41a62c
  41a66b:	sub    BYTE PTR [edx-0x67d7424],ah
  41a671:	xchg   ebp,eax
  41a672:	int3   
  41a673:	int3   
  41a674:	sub    BYTE PTR [ecx+0x7cb1bd0b],ch
  41a67a:	rcr    DWORD PTR [edi],1
  41a67c:	sub    eax,0xac8de18c
  41a681:	pop    ebx
  41a682:	xor    BYTE PTR [ecx+0x5d],dl
  41a685:	xchg   DWORD PTR [edi-0x1cc15820],ebp
  41a68b:	je     0x41a6e3
  41a68d:	pop    edx
  41a68e:	loopne 0x41a6b2
  41a690:	aas    
  41a691:	and    BYTE PTR [ebx],ah
  41a693:	aas    
  41a694:	push   ecx
  41a695:	push   esp
  41a696:	mov    edx,0xb105b323
  41a69b:	xchg   BYTE PTR [edi+0x53],dh
  41a69e:	leavew 
  41a6a0:	retf   
  41a6a1:	fucomi st,st(6)
  41a6a3:	add    al,0xdf
  41a6a5:	pop    ds
  41a6a6:	sub    eax,0x453de0c1
  41a6ab:	xchg   ebx,eax
  41a6ac:	xor    BYTE PTR [esi-0x231859e1],dl
  41a6b2:	test   BYTE PTR [eax-0x6],ch
  41a6b5:	call   0xbde0e50b
  41a6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6bb:	cmp    eax,0xa3a43d9f
  41a6c0:	xchg   edx,eax
  41a6c1:	ins    BYTE PTR es:[edi],dx
  41a6c2:	dec    eax
  41a6c3:	push   ebp
  41a6c4:	mov    dl,BYTE PTR [esi+0x62]
  41a6c7:	scas   eax,DWORD PTR es:[edi]
  41a6c8:	xlat   BYTE PTR ds:[ebx]
  41a6c9:	sbb    esi,DWORD PTR [esp+ebx*4-0xef71fab]
  41a6d0:	mov    ebp,0xe69115f0
  41a6d5:	jb     0x41a729
  41a6d7:	stc    
  41a6d8:	test   al,0xfb
  41a6da:	dec    edx
  41a6db:	xchg   DWORD PTR [eax],ecx
  41a6dd:	int3   
  41a6de:	stos   BYTE PTR es:[edi],al
  41a6df:	inc    esp
  41a6e0:	jnp    0x41a694
  41a6e2:	rol    BYTE PTR [ecx],cl
  41a6e4:	xor    BYTE PTR [edi+eiz*8-0x10],bh
  41a6e8:	ret    0x2342
  41a6eb:	(bad)  
  41a6ec:	cmp    al,0x31
  41a6ee:	xor    eax,0xd69b12cc
  41a6f3:	stos   DWORD PTR es:[edi],eax
  41a6f4:	call   DWORD PTR [ecx]
  41a6f6:	or     ch,BYTE PTR [ecx]
  41a6f8:	jns    0x41a6d9
  41a6fa:	or     bh,ch
  41a6fc:	les    ebp,FWORD PTR [ecx]
  41a6fe:	inc    edi
  41a6ff:	hlt    
  41a700:	jns    0x41a6c8
  41a702:	pop    es
  41a703:	cmc    
  41a704:	test   BYTE PTR [esi],ch
  41a706:	jne    0x41a6f4
  41a708:	jo     0x41a789
  41a70a:	js     0x41a738
  41a70c:	scas   al,BYTE PTR es:[edi]
  41a70d:	or     BYTE PTR [ebp-0x16],dh
  41a710:	in     al,0xbf
  41a712:	sub    al,0x4a
  41a714:	jle    0x41a706
  41a716:	aam    0xe2
  41a718:	ss fwait
  41a71a:	retf   0xccb6
  41a71d:	mov    edi,DWORD PTR [edi+ebp*1]
  41a720:	lahf   
  41a721:	mov    dl,0xa3
  41a723:	push   ebp
  41a724:	dec    ebp
  41a725:	pop    edi
  41a726:	imul   esp,DWORD PTR ds:0x451ece59,0x15
  41a72d:	sbb    ecx,esi
  41a72f:	add    edx,DWORD PTR [esi+0xc]
  41a732:	xchg   edi,eax
  41a733:	dec    ebx
  41a734:	cmp    eax,0xdaa00248
  41a739:	pop    esp
  41a73a:	xchg   DWORD PTR [edi+0x2cf65edf],ecx
  41a740:	mov    al,ds:0x33494b3f
  41a745:	mov    dl,0x88
  41a747:	sbb    edx,DWORD PTR [ebp-0x30]
  41a74a:	hlt    
  41a74b:	cmp    BYTE PTR [edx+0x19],cl
  41a74e:	cmp    eax,esi
  41a750:	sub    dh,cl
  41a752:	test   BYTE PTR [edi],0x47
  41a755:	ins    DWORD PTR es:[edi],dx
  41a756:	data16 test BYTE PTR [ecx],0x6f
  41a75a:	call   0x2ee2:0xe5909f22
  41a761:	mov    eax,0xbc49a106
  41a766:	xor    ch,BYTE PTR [ebx]
  41a768:	daa    
  41a769:	cld    
  41a76a:	fidivr DWORD PTR es:[edi]
  41a76d:	dec    ebp
  41a76e:	xchg   esp,eax
  41a76f:	in     eax,0x6e
  41a771:	inc    DWORD PTR [esi]
  41a773:	adc    al,0x8a
  41a775:	cld    
  41a776:	jbe    0x41a7af
  41a778:	add    eax,0x79f5729
  41a77d:	inc    eax
  41a77e:	fsubr  st(4),st
  41a780:	pop    ecx
  41a781:	fistp  DWORD PTR [eax]
  41a783:	mov    ah,0xc8
  41a785:	jb     0x41a755
  41a787:	fidivr WORD PTR ds:0xc8407ec0
  41a78d:	mov    ds:0x12898611,eax
  41a792:	jb     0x41a75d
  41a794:	cmp    eax,0x7096f42b
  41a799:	mov    al,0xb4
  41a79b:	clc    
  41a79c:	outs   dx,BYTE PTR ds:[esi]
  41a79d:	xchg   DWORD PTR [edi-0x41],ebp
  41a7a0:	sub    esi,DWORD PTR [eax-0x28]
  41a7a3:	push   ecx
  41a7a4:	inc    edi
  41a7a5:	(bad)  
  41a7a7:	ins    DWORD PTR es:[edi],dx
  41a7a8:	ret    0xc821
  41a7ab:	(bad)  
  41a7ac:	mov    edi,0x504f09a5
  41a7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b2:	pop    es
  41a7b3:	mov    eax,ds:0x14fccd0
  41a7b8:	pop    esp
  41a7b9:	sti    
  41a7ba:	jp     0x41a780
  41a7bc:	mov    ecx,0xe01c8717
  41a7c1:	repz sbb dl,cl
  41a7c4:	fbstp  TBYTE PTR [edx-0x3e]
  41a7c7:	sbb    dl,BYTE PTR ds:0x886d7327
  41a7cd:	aam    0x77
  41a7cf:	mov    bh,0x2d
  41a7d1:	or     al,0xd8
  41a7d3:	addr16 cmp al,0x38
  41a7d7:	daa    
  41a7d8:	jg     0x41a80f
  41a7da:	adc    dl,BYTE PTR [eax-0x19962500]
  41a7e0:	mov    cl,0x60
  41a7e2:	lea    esp,[edi-0x6accc69b]
  41a7e8:	inc    eax
  41a7e9:	in     al,dx
  41a7ea:	and    BYTE PTR [ecx+0x4d5196f4],dl
  41a7f0:	or     dl,bh
  41a7f2:	fdiv   QWORD PTR [ebx+0x79]
  41a7f5:	mov    BYTE PTR [ecx+0x696f7b1c],al
  41a7fb:	loope  0x41a843
  41a7fd:	aas    
  41a7fe:	xchg   DWORD PTR [edx+0xd],ecx
  41a801:	inc    ebp
  41a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a803:	(bad)  
  41a804:	out    dx,al
  41a805:	mov    ah,0xef
  41a807:	jne    0x41a797
  41a809:	ds arpl ax,di
  41a80c:	call   0xb39a4c51
  41a811:	addr16 jle 0x41a81c
  41a814:	dec    edi
  41a815:	mov    ah,0x92
  41a817:	jmp    0x41a7a6
  41a819:	in     al,0x4f
  41a81b:	push   ecx
  41a81c:	clc    
  41a81d:	fdivp  st(3),st
  41a81f:	jnp    0x41a89e
  41a821:	fiadd  DWORD PTR [ecx+0x5d]
  41a824:	jo     0x41a819
  41a826:	add    ebx,ecx
  41a828:	pop    ecx
  41a829:	loope  0x41a7da
  41a82b:	pop    ecx
  41a82c:	icebp  
  41a82d:	mov    al,0x1e
  41a82f:	aas    
  41a830:	xchg   edi,eax
  41a831:	xor    DWORD PTR [ecx],0xffffffe5
  41a834:	push   ss
  41a835:	mov    cl,0x46
  41a837:	daa    
  41a838:	pushf  
  41a839:	repnz xlat BYTE PTR ds:[ebx]
  41a83b:	ret    
  41a83c:	fistp  QWORD PTR [eax+0x6e]
  41a83f:	mov    al,0x8d
  41a841:	arpl   ax,ax
  41a843:	icebp  
  41a844:	leave  
  41a845:	ficom  DWORD PTR [esi]
  41a847:	pop    ecx
  41a848:	sbb    eax,0xd362c143
  41a84d:	sahf   
  41a84e:	aaa    
  41a84f:	pop    ds
  41a850:	hlt    
  41a851:	adc    BYTE PTR [ecx-0x63ed7c80],bl
  41a857:	not    DWORD PTR [edi]
  41a859:	inc    ecx
  41a85a:	test   DWORD PTR [ebx-0xa66738f],0x39e01288
  41a864:	mov    ah,0x5d
  41a866:	aas    
  41a867:	push   0xe280d9a9
  41a86c:	dec    edx
  41a86d:	mov    esi,0xe1aed67c
  41a872:	ss sub al,0x22
  41a875:	push   ebp
  41a876:	mov    ch,0x31
  41a878:	ret    0x39fe
  41a87b:	sahf   
  41a87c:	and    DWORD PTR [ebx+0x22eecac1],esp
  41a882:	inc    ebx
  41a883:	shr    eax,0xfd
  41a886:	not    DWORD PTR [ebx-0x2f]
  41a889:	jmp    0x41a82a
  41a88b:	mov    ch,0x7d
  41a88d:	dec    edx
  41a88e:	jecxz  0x41a81a
  41a890:	push   eax
  41a891:	fstp   QWORD PTR [ebp-0x47]
  41a894:	clc    
  41a895:	imul   edi,ebx,0xf8f7fc78
  41a89b:	out    dx,eax
  41a89c:	jge    0x41a86f
  41a89e:	adc    ebp,DWORD PTR [edx-0x55]
  41a8a1:	dec    edx
  41a8a2:	sub    ebx,DWORD PTR [ebx-0x53]
  41a8a5:	push   es
  41a8a6:	loop   0x41a921
  41a8a8:	cmc    
  41a8a9:	pop    ss
  41a8aa:	ss (bad) 
  41a8ac:	or     DWORD PTR [eax+esi*1-0x45],ecx
  41a8b0:	or     DWORD PTR [esi],edi
  41a8b2:	repnz lods al,BYTE PTR ds:[esi]
  41a8b4:	scas   eax,DWORD PTR es:[edi]
  41a8b5:	mul    BYTE PTR [esi+0x36d4d80]
  41a8bb:	inc    ebx
  41a8bc:	fsub   DWORD PTR [ebp-0x7b699f98]
  41a8c2:	rcr    DWORD PTR [esi+0x4c],cl
  41a8c5:	add    ebp,DWORD PTR [eax-0x44]
  41a8c8:	push   esi
  41a8c9:	ficom  WORD PTR [edx-0x4e32b1be]
  41a8cf:	(bad)  
  41a8d0:	xor    DWORD PTR [esi-0x2455c068],esi
  41a8d6:	xchg   esi,eax
  41a8d7:	gs xchg esp,eax
  41a8d9:	pop    ds
  41a8da:	sub    DWORD PTR [ecx-0x737068b9],0xcf02f7eb
  41a8e4:	cwde   
  41a8e5:	stos   DWORD PTR es:[edi],eax
  41a8e6:	jnp    0x41a906
  41a8e8:	adc    DWORD PTR [edi+0x3e0df1b3],eax
  41a8ee:	outs   dx,BYTE PTR ds:[esi]
  41a8ef:	adc    ebx,DWORD PTR [edx-0x3a]
  41a8f2:	mov    al,ds:0xb20c0c0c
  41a8f7:	stos   DWORD PTR es:[edi],eax
  41a8f8:	rcl    DWORD PTR [edx],0xc2
  41a8fb:	sbb    DWORD PTR [esi-0x6f1ff777],esp
  41a901:	stos   BYTE PTR es:[edi],al
  41a902:	idiv   BYTE PTR [esi-0x40]
  41a905:	xor    eax,0xa2603351
  41a90a:	sub    BYTE PTR [ebp-0x4ccb2291],bh
  41a910:	cdq    
  41a911:	jo     0x41a991
  41a913:	icebp  
  41a914:	push   ebp
  41a915:	push   eax
  41a916:	xchg   BYTE PTR [ebx+0x5557ce17],ch
  41a91c:	adc    bh,BYTE PTR [eax]
  41a91e:	mov    edi,esi
  41a920:	and    ecx,esp
  41a922:	jb     0x41a98d
  41a924:	push   ebx
  41a925:	jb     0x41a942
  41a927:	std    
  41a928:	stos   BYTE PTR es:[edi],al
  41a929:	fiadd  DWORD PTR [edx+ecx*1]
  41a92c:	or     BYTE PTR [esi],dl
  41a92e:	mov    al,ds:0x2db17e84
  41a933:	sbb    al,0x88
  41a935:	push   0xda8b2025
  41a93a:	mov    ds:0x2fdcfaa,al
  41a93f:	sahf   
  41a940:	sub    dh,BYTE PTR [edx]
  41a942:	mov    ds:0xeeeea4d0,al
  41a947:	or     al,0xd9
  41a949:	retf   0x7c8e
  41a94c:	adc    ch,bh
  41a94e:	stos   DWORD PTR es:[edi],eax
  41a94f:	adc    BYTE PTR [ebx+esi*2],cl
  41a952:	jecxz  0x41a9bf
  41a954:	jge    0x41a901
  41a956:	xchg   ebx,ecx
  41a958:	mov    esi,0x62c79848
  41a95d:	xchg   ebp,eax
  41a95e:	jb     0x41a935
  41a960:	outs   dx,BYTE PTR ds:[esi]
  41a961:	dec    ebx
  41a962:	std    
  41a963:	mov    bh,0xee
  41a965:	sbb    ebx,esi
  41a967:	test   BYTE PTR [esi],0x8c
  41a96a:	popa   
  41a96b:	jl     0x41a97b
  41a96d:	mov    cl,0x38
  41a96f:	xor    dh,BYTE PTR [ebx-0x2a]
  41a972:	adc    bh,BYTE PTR [esi+eiz*4-0x30]
  41a976:	scas   eax,DWORD PTR es:[edi]
  41a977:	icebp  
  41a978:	ja     0x41a988
  41a97a:	and    ch,BYTE PTR [eax-0x670fdac]
  41a980:	inc    ebx
  41a981:	adc    bl,BYTE PTR [eax+0x2b]
  41a984:	pop    ebp
  41a985:	jbe    0x41a925
  41a987:	mov    dl,0x78
  41a989:	dec    ebx
  41a98a:	sub    ah,BYTE PTR [ecx]
  41a98c:	sbb    bl,bh
  41a98e:	cs xchg ebx,eax
  41a990:	mov    ebp,0x6f6f0e39
  41a995:	mov    ch,0x73
  41a997:	push   ebx
  41a998:	enter  0xbbc,0x84
  41a99c:	lds    ebp,FWORD PTR [edi+0xa]
  41a99f:	dec    eax
  41a9a0:	nop
  41a9a1:	(bad)  
  41a9a2:	mov    WORD PTR [ebp-0x3cca9697],cs
  41a9a8:	mov    eax,0xee595714
  41a9ad:	xchg   DWORD PTR [ecx],edx
  41a9af:	out    0x62,al
  41a9b1:	or     ecx,DWORD PTR [ebp+0x3c595a0e]
  41a9b7:	adc    DWORD PTR [ecx+esi*4],ecx
  41a9ba:	dec    esi
  41a9bb:	sbb    al,0x95
  41a9bd:	jne    0x41a9e4
  41a9bf:	add    DWORD PTR [eax],esi
  41a9c1:	and    eax,0x43ee1927
  41a9c6:	sub    ah,ch
  41a9c8:	lods   al,BYTE PTR ds:[esi]
  41a9c9:	jno    0x41aa2c
  41a9cb:	dec    esi
  41a9cc:	je     0x41a9be
  41a9ce:	outs   dx,DWORD PTR ds:[esi]
  41a9cf:	cmp    BYTE PTR [esi-0x231274fa],0x57
  41a9d6:	test   BYTE PTR [eax+0x6f0053a2],bl
  41a9dc:	push   es
  41a9dd:	(bad)  
  41a9de:	push   esi
  41a9df:	cmp    DWORD PTR [ecx+0x57],edx
  41a9e2:	add    bh,BYTE PTR [edx]
  41a9e4:	(bad)  
  41a9e5:	fidiv  DWORD PTR [eax-0x7a19e70f]
  41a9eb:	sub    eax,0xd3da24a4
  41a9f0:	addr16 popf 
  41a9f2:	cmp    al,0xef
  41a9f4:	add    al,0x1a
  41a9f6:	iret   
  41a9f7:	call   0x5692ef36
  41a9fc:	pop    es
  41a9fd:	stc    
  41a9fe:	hlt    
  41a9ff:	cwde   
  41aa00:	stc    
  41aa01:	pop    es
  41aa02:	cmp    BYTE PTR [edi+0x25],0x19
  41aa06:	cld    
  41aa07:	cmc    
  41aa08:	test   DWORD PTR [edx+esi*2],0x9d91fc74
  41aa0f:	aam    0xa8
  41aa11:	inc    edi
  41aa12:	pop    esi
  41aa13:	hlt    
  41aa14:	push   edi
  41aa15:	sbb    esp,ebp
  41aa17:	jecxz  0x41aa2c
  41aa19:	cmp    eax,0xd9d06b0d
  41aa1e:	xor    esi,eax
  41aa20:	mov    dl,0x98
  41aa22:	add    bl,BYTE PTR [esi+edi*1+0x7c]
  41aa26:	shl    bh,0x3
  41aa29:	mov    esi,0xa706fcbb
  41aa2e:	mov    DWORD PTR [ebx+0x4b25519d],edx
  41aa34:	pop    es
  41aa35:	jp     0x41a9ba
  41aa37:	sbb    dh,BYTE PTR [ebx-0x6ed85034]
  41aa3d:	cmp    al,BYTE PTR [edx-0xc]
  41aa40:	mov    al,ds:0xd2c1480a
  41aa45:	mov    dh,0x68
  41aa47:	shr    BYTE PTR ss:[edi+ecx*4],1
  41aa4b:	cmp    eax,ebx
  41aa4d:	cli    
  41aa4e:	xor    edx,eax
  41aa50:	dec    ebx
  41aa51:	add    eax,0x1591cca5
  41aa56:	cmp    eax,0x836b11fa
  41aa5b:	jmp    0xd210:0x55af1633
  41aa62:	int    0x2d
  41aa64:	xchg   bl,al
  41aa66:	or     ah,BYTE PTR [ecx-0x68]
  41aa69:	and    esp,DWORD PTR ds:0xeee4246a
  41aa6f:	daa    
  41aa70:	push   cs
  41aa71:	mov    bh,0x8a
  41aa73:	jmp    0xc2bd:0x63d7319e
  41aa7a:	xor    al,0xbf
  41aa7c:	(bad)  
  41aa7d:	cmc    
  41aa7e:	das    
  41aa7f:	mov    bh,0x8f
  41aa81:	mov    dl,0xf1
  41aa83:	std    
  41aa84:	in     eax,dx
  41aa85:	(bad)  
  41aa86:	mov    ebx,0xb1e5ad89
  41aa8b:	mov    ebp,0xcd7400c0
  41aa90:	mov    al,ds:0xdd5b70a1
  41aa95:	xor    al,0x81
  41aa97:	(bad)  
  41aa99:	add    al,0x88
  41aa9b:	xlat   BYTE PTR ds:[ebx]
  41aa9c:	push   ebx
  41aa9d:	ret    
  41aa9e:	cmp    ebx,DWORD PTR [ebx+0x23]
  41aaa1:	dec    ebx
  41aaa2:	int    0x61
  41aaa4:	or     BYTE PTR [edi-0x77],dl
  41aaa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa8:	jbe    0x41aa61
  41aaaa:	jmp    0x41aa79
  41aaac:	in     al,0xd4
  41aaae:	mov    bh,dh
  41aab0:	pop    ebp
  41aab1:	nop
  41aab2:	sub    dh,BYTE PTR [edx+0x71]
  41aab5:	xlat   BYTE PTR ds:[ebx]
  41aab6:	out    dx,al
  41aab7:	inc    esi
  41aab8:	fdivr  st(1),st
  41aaba:	pop    ebx
  41aabb:	dec    edi
  41aabc:	in     al,dx
  41aabd:	popa   
  41aabe:	mov    esi,0x78fb32fe
  41aac3:	or     BYTE PTR [esi],ah
  41aac5:	mov    esp,0xc627abd4
  41aaca:	test   ch,dh
  41aacc:	sub    DWORD PTR [edx+0x70265f25],edx
  41aad2:	inc    ecx
  41aad3:	std    
  41aad4:	mov    edi,0xa15af1da
  41aad9:	shr    DWORD PTR [ebx+0x12],cl
  41aadc:	dec    edi
  41aadd:	lea    ebp,[esi]
  41aadf:	fmul   st(0),st
  41aae1:	xchg   DWORD PTR [eax-0x31f3b9a6],esi
  41aae7:	mov    ah,dh
  41aae9:	aas    
  41aaea:	mov    ebp,0x42cb3c7c
  41aaef:	xor    bh,0x18
  41aaf2:	push   ds
  41aaf3:	dec    eax
  41aaf4:	pop    eax
  41aaf5:	ja     0x41aad9
  41aaf7:	xchg   edi,eax
  41aaf8:	mov    esp,0xfd966e79
  41aafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aafe:	sbb    BYTE PTR ds:0xad0dd1f,dh
  41ab04:	pop    esp
  41ab05:	sub    bh,BYTE PTR [edx]
  41ab07:	dec    eax
  41ab08:	sub    DWORD PTR [esi],esi
  41ab0a:	and    eax,0x5c2d804b
  41ab0f:	dec    ecx
  41ab10:	cmp    al,0x89
  41ab12:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab14:	mov    DWORD PTR [esi+esi*4],ecx
  41ab17:	or     edx,esp
  41ab19:	popf   
  41ab1a:	loop   0x41aad2
  41ab1c:	inc    ebp
  41ab1d:	cmp    eax,0x1e21c856
  41ab22:	add    BYTE PTR ds:0x8dc628d3,0x4b
  41ab29:	repz sbb dl,BYTE PTR [eax]
  41ab2c:	jbe    0x41ab9a
  41ab2e:	xlat   BYTE PTR ds:[ebx]
  41ab2f:	ror    DWORD PTR [edx+ebx*8],1
  41ab32:	push   eax
  41ab33:	(bad)  
  41ab34:	ins    DWORD PTR es:[edi],dx
  41ab35:	and    eax,0x9304f3b7
  41ab3a:	pop    edi
  41ab3b:	popa   
  41ab3c:	scas   al,BYTE PTR es:[edi]
  41ab3d:	lahf   
  41ab3e:	jns    0x41ab61
  41ab40:	bound  ecx,QWORD PTR [ebx+0x671a2491]
  41ab46:	jmp    0x4193d54
  41ab4b:	xchg   edi,eax
  41ab4c:	adc    ah,cl
  41ab4e:	mov    esp,0x63d240f
  41ab53:	or     DWORD PTR [ebx],eax
  41ab55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab56:	inc    ebx
  41ab57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab58:	cmp    eax,0x7bddfd4e
  41ab5d:	jmp    0x41abc0
  41ab5f:	rol    BYTE PTR [edi],1
  41ab61:	mov    al,ds:0x990e1d2d
  41ab66:	dec    ecx
  41ab67:	stos   DWORD PTR es:[edi],eax
  41ab68:	mov    al,0x50
  41ab6a:	cmp    edi,DWORD PTR [edi]
  41ab6c:	test   eax,0xd10970f3
  41ab71:	adc    DWORD PTR [ebx+ebp*4-0x21],esp
  41ab75:	sar    DWORD PTR [ebx],1
  41ab77:	jb     0x41ab3c
  41ab79:	mov    ds:0x449ca650,eax
  41ab7e:	(bad)  
  41ab7f:	ja     0x41aba6
  41ab81:	push   ss
  41ab82:	xchg   ebx,eax
  41ab83:	or     DWORD PTR ds:0x50017ff2,eax
  41ab89:	retf   0x8f95
  41ab8c:	cmp    DWORD PTR [esi-0x77cbf376],esp
  41ab92:	fisttp QWORD PTR [eax-0x99147c6]
  41ab98:	dec    eax
  41ab99:	xor    eax,0x71c163fa
  41ab9e:	ins    BYTE PTR es:[edi],dx
  41ab9f:	push   es
  41aba0:	sbb    al,0x59
  41aba2:	outs   dx,BYTE PTR ds:[esi]
  41aba3:	jns    0x41ab34
  41aba5:	scas   al,BYTE PTR es:[edi]
  41aba6:	ret    0x466a
  41aba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abaa:	mov    eax,ds:0xc7bf9ace
  41abaf:	cmp    bl,cl
  41abb1:	pushf  
  41abb2:	mov    dh,0xcb
  41abb4:	out    0x86,eax
  41abb6:	pop    ebx
  41abb7:	add    DWORD PTR [ecx+0x3a64c033],edi
  41abbd:	retf   
  41abbe:	xchg   ecx,eax
  41abbf:	pushf  
  41abc0:	dec    edi
  41abc1:	xor    DWORD PTR [edx+esi*4],edi
  41abc4:	and    al,0x6f
  41abc6:	retf   
  41abc7:	leave  
  41abc8:	loop   0x41ab75
  41abca:	or     BYTE PTR [eax],cl
  41abcc:	das    
  41abcd:	nop
  41abce:	pop    edx
  41abcf:	or     ebp,esp
  41abd1:	inc    ecx
  41abd2:	fld    st(2)
  41abd4:	pop    edx
  41abd5:	shr    BYTE PTR [eax],0x68
  41abd8:	(bad)  
  41abda:	retf   0xed94
  41abdd:	aaa    
  41abde:	ins    BYTE PTR es:[edi],dx
  41abdf:	push   esp
  41abe0:	mov    eax,0xa99401c9
  41abe5:	into   
  41abe6:	inc    ebp
  41abe7:	mov    dl,0x4d
  41abe9:	ins    DWORD PTR es:[edi],dx
  41abea:	test   DWORD PTR [edx+0x50ec8cf5],edx
  41abf0:	mov    ch,0x23
  41abf2:	in     eax,dx
  41abf3:	js     0x41aba1
  41abf5:	mov    ch,0x92
  41abf7:	in     al,0x40
  41abf9:	push   0xde97f81e
  41abfe:	in     al,0x53
  41ac00:	fisub  DWORD PTR [ebp+0x60420eb5]
  41ac06:	mov    esp,0x28a75068
  41ac0b:	inc    ecx
  41ac0c:	mov    WORD PTR [esi+edx*2-0x5319e8c3],gs
  41ac13:	fwait
  41ac14:	adc    ecx,DWORD PTR [eax-0x17]
  41ac17:	stc    
  41ac18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac19:	mov    ebx,0x673582c3
  41ac1e:	mov    ds:0x8f307906,al
  41ac23:	(bad)  
  41ac24:	call   0x37b8afc4
  41ac29:	cmc    
  41ac2a:	vmaxss xmm6,xmm6,xmm2
  41ac2e:	jmp    0x41ac8a
  41ac30:	jp     0x41ac45
  41ac32:	rcl    DWORD PTR [ebx+0x2a8eda2d],0x40
  41ac39:	pop    eax
  41ac3a:	mov    ecx,0x32c33048
  41ac3f:	pop    eax
  41ac40:	daa    
  41ac41:	sbb    al,0xdb
  41ac43:	test   eax,0x1eb6ea2a
  41ac48:	ret    0xe73
  41ac4b:	mov    ds:0x13c49df3,eax
  41ac50:	repz pop edi
  41ac52:	retf   
  41ac53:	cmp    al,0xf7
  41ac55:	jle    0x41ac1c
  41ac57:	jl     0x41acc8
  41ac59:	adc    bl,al
  41ac5b:	adc    cl,BYTE PTR [esi+0x64b67ef9]
  41ac61:	sbb    al,0xe2
  41ac63:	shl    DWORD PTR ss:[edi-0x360b677d],1
  41ac6a:	jle    0x41ac18
  41ac6c:	xchg   esi,eax
  41ac6d:	mov    ds:0xbc777c98,al
  41ac72:	out    0xda,al
  41ac74:	cmp    BYTE PTR [esp+esi*2-0x1f20e379],bl
  41ac7b:	stos   DWORD PTR es:[edi],eax
  41ac7c:	fistp  DWORD PTR [esi-0x13463a4b]
  41ac82:	jo     0x41ac16
  41ac84:	push   esp
  41ac85:	std    
  41ac86:	inc    bl
  41ac88:	fsubr  DWORD PTR [edx-0x32]
  41ac8b:	xor    al,0xa
  41ac8d:	outs   dx,BYTE PTR ds:[esi]
  41ac8e:	test   ax,0xb91a
  41ac92:	aaa    
  41ac93:	dec    ebp
  41ac94:	jo     0x41ac7a
  41ac96:	inc    DWORD PTR [ebx-0x7f]
  41ac99:	(bad)  
  41ac9a:	mov    edi,0xbcc9dbf1
  41ac9f:	xor    al,0x6a
  41aca1:	pop    ds
  41aca2:	mov    cl,0x8c
  41aca4:	ret    
  41aca5:	in     eax,dx
  41aca6:	rol    BYTE PTR [esi-0x214f31f1],1
  41acac:	push   cs
  41acad:	sbb    dl,BYTE PTR [edx+0x6c1f5866]
  41acb3:	jp     0x41aca6
  41acb5:	fwait
  41acb6:	nop
  41acb7:	shl    DWORD PTR [edx+edx*4-0x46],0x6b
  41acbc:	push   ds
  41acbd:	jb     0x41ac95
  41acbf:	div    BYTE PTR [ebx+0x4c786f67]
  41acc5:	xor    bl,BYTE PTR [edi-0x53]
  41acc8:	outs   dx,DWORD PTR ds:[esi]
  41acc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acca:	test   BYTE PTR [edi+0x1d04f0ec],dl
  41acd0:	xlat   BYTE PTR ds:[ebx]
  41acd1:	or     al,0x79
  41acd3:	cwde   
  41acd4:	jle    0x41acf0
  41acd6:	mov    esp,0xa099e6e4
  41acdb:	pusha  
  41acdc:	mov    esi,0x6f17e8f3
  41ace1:	or     esp,DWORD PTR [ebx-0x6f]
  41ace4:	and    DWORD PTR [ebx+0x2c],ebp
  41ace7:	pop    ebp
  41ace8:	jge    0x41ad0c
  41acea:	jmp    0xc9e2a326
  41acef:	sti    
  41acf0:	jl     0x41acee
  41acf2:	push   cs
  41acf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf4:	and    DWORD PTR [edi+0x35],0x2d
  41acf8:	test   al,0xba
  41acfa:	dec    esi
  41acfb:	fdiv   st,st(6)
  41acfd:	sbb    ecx,edi
  41acff:	sub    edx,DWORD PTR [ebp-0x41e407a5]
  41ad05:	test   DWORD PTR [esi+0x4fbf5c47],ebp
  41ad0b:	aaa    
  41ad0c:	xchg   edx,eax
  41ad0d:	outs   dx,DWORD PTR ds:[esi]
  41ad0e:	mov    ch,0xc8
  41ad10:	mov    ebp,0x55a2ce48
  41ad15:	cmp    eax,0x8bf469ce
  41ad1a:	inc    edi
  41ad1b:	jl     0x41ad8e
  41ad1d:	call   0xe9f7:0x61df576b
  41ad24:	mov    dl,bl
  41ad26:	adc    ah,BYTE PTR [esi]
  41ad28:	retf   0xaf32
  41ad2b:	mov    es,WORD PTR [eax]
  41ad2d:	sbb    BYTE PTR [ebx],bl
  41ad2f:	call   0x2dec:0x985350b4
  41ad36:	in     eax,0xbe
  41ad38:	mov    ebx,0xd98dc989
  41ad3d:	mov    edi,0xe85aab22
  41ad42:	test   BYTE PTR [ebx],dh
  41ad44:	cli    
  41ad45:	inc    eax
  41ad46:	dec    ecx
  41ad47:	push   esi
  41ad48:	test   eax,0x663030ba
  41ad4d:	shl    dh,0x5a
  41ad50:	mov    al,ds:0x9f937dbd
  41ad55:	mov    edx,esp
  41ad57:	pusha  
  41ad58:	mov    esp,0x582e766
  41ad5d:	jg     0x41ad3e
  41ad5f:	stc    
  41ad60:	sbb    ecx,DWORD PTR [ebx]
  41ad62:	add    BYTE PTR [esi-0x1720975],0x73
  41ad69:	sbb    esp,DWORD PTR [ebx+0x3384d537]
  41ad6f:	add    edx,edi
  41ad71:	arpl   WORD PTR [ebp-0x1d0f90b1],bx
  41ad77:	repz mov cs,WORD PTR [edx+0x49]
  41ad7b:	or     dh,BYTE PTR ds:[esi-0x1602b43e]
  41ad82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad83:	push   edi
  41ad84:	sub    al,BYTE PTR [eax]
  41ad86:	aam    0x6e
  41ad88:	fild   QWORD PTR [esi+0x5f0ac970]
  41ad8e:	sbb    BYTE PTR [eax+0xd],ah
  41ad91:	jmp    0xe62295ba
  41ad96:	jns    0x41addd
  41ad98:	push   ecx
  41ad99:	(bad)  
  41ad9a:	push   DWORD PTR [ebx]
  41ad9c:	out    0x4f,al
  41ad9e:	push   ecx
  41ad9f:	xor    bh,BYTE PTR [ecx+0x7d]
  41ada2:	xchg   ebp,eax
  41ada3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ada4:	mov    bh,0x3e
  41ada6:	jne    0x41ad59
  41ada8:	repnz xchg ebp,eax
  41adaa:	dec    esi
  41adab:	or     eax,DWORD PTR [eax+edi*4+0x1b]
  41adaf:	add    BYTE PTR ds:0x490e77b1,bl
  41adb5:	jo     0x41ad77
  41adb7:	xchg   ecx,eax
  41adb8:	inc    edi
  41adb9:	das    
  41adba:	(bad)  
  41adbb:	(bad)  
  41adbc:	ss (bad) 
  41adbe:	jbe    0x41ae09
  41adc0:	or     al,0x1d
  41adc2:	fadd   st,st(6)
  41adc4:	add    bl,BYTE PTR [ecx-0x6fdc9cc1]
  41adca:	aas    
  41adcb:	dec    esi
  41adcc:	lock xor esi,edi
  41adcf:	pop    es
  41add0:	mov    dh,0xfd
  41add2:	jmp    0x140dd802
  41add7:	cli    
  41add8:	das    
  41add9:	addr16 dec esp
  41addb:	dec    ebx
  41addc:	inc    ecx
  41addd:	call   0xfe242f0e
  41ade2:	dec    ebx
  41ade3:	fstp   DWORD PTR [edi-0x667630d]
  41ade9:	jmp    0x41ae02
  41adeb:	loop   0x41adb2
  41aded:	scas   eax,DWORD PTR es:[edi]
  41adee:	retf   
  41adef:	pop    edx
  41adf0:	sbb    BYTE PTR ds:0x84ab77f1,dl
  41adf6:	ins    DWORD PTR es:[edi],dx
  41adf7:	dec    esi
  41adf8:	adc    ah,ch
  41adfa:	nop
  41adfb:	daa    
  41adfc:	scas   eax,DWORD PTR es:[edi]
  41adfd:	ja     0x41ae01
  41adff:	sub    DWORD PTR [edi+0x32],0x70
  41ae03:	sub    eax,0x78ea7c87
  41ae08:	retf   0x85a9
  41ae0b:	hlt    
  41ae0c:	sub    eax,0xe87a5172
  41ae11:	leave  
  41ae12:	dec    eax
  41ae13:	mov    cl,0xd6
  41ae15:	(bad)  
  41ae16:	jb     0x41ae6b
  41ae18:	shr    ecx,cl
  41ae1a:	xlat   BYTE PTR ds:[ebx]
  41ae1b:	adc    dh,al
  41ae1d:	aas    
  41ae1e:	int3   
  41ae1f:	mov    eax,ds:0x84f6b54e
  41ae24:	fsub   QWORD PTR [ebx]
  41ae26:	sub    BYTE PTR [eax],ch
  41ae28:	lods   eax,DWORD PTR ds:[esi]
  41ae29:	dec    ecx
  41ae2a:	push   0x3a
  41ae2c:	mov    ch,0xb4
  41ae2e:	sbb    al,0x84
  41ae30:	call   0x1f99:0x81e4e07e
  41ae37:	mov    ds:0xa07b21c1,eax
  41ae3c:	sub    ebp,esp
  41ae3e:	stos   DWORD PTR es:[edi],eax
  41ae3f:	add    eax,0x802bdf34
  41ae44:	xor    al,0xdb
  41ae46:	inc    ebx
  41ae47:	mov    bl,BYTE PTR [ebx-0x4e4afedb]
  41ae4d:	call   0x3427:0x5437508e
  41ae54:	inc    ebx
  41ae55:	mov    ebx,DWORD PTR [eax+0x56]
  41ae58:	xchg   ebx,eax
  41ae59:	out    dx,al
  41ae5a:	xchg   edx,eax
  41ae5b:	add    DWORD PTR [edi-0x586b0271],0x36
  41ae62:	loop   0x41aec9
  41ae64:	test   al,0xfa
  41ae66:	das    
  41ae67:	das    
  41ae68:	test   BYTE PTR [ebx-0x6d41f17a],ch
  41ae6e:	push   es
  41ae6f:	clc    
  41ae70:	sbb    DWORD PTR [ecx],0x4708ad44
  41ae76:	adc    esi,0x81acce20
  41ae7c:	dec    esp
  41ae7d:	aad    0x16
  41ae7f:	in     eax,dx
  41ae80:	or     BYTE PTR [edi+0x777075a2],ah
  41ae86:	jbe    0x41ae50
  41ae88:	int3   
  41ae89:	xchg   esi,eax
  41ae8a:	push   cs
  41ae8b:	pop    ecx
  41ae8c:	mov    gs,edx
  41ae8e:	adc    eax,0x555e859
  41ae93:	push   ebp
  41ae94:	lods   al,BYTE PTR ds:[esi]
  41ae95:	pop    ebx
  41ae96:	ds adc eax,0xd6934110
  41ae9c:	iret   
  41ae9d:	inc    edi
  41ae9e:	mov    ds,WORD PTR [ebx-0x6f]
  41aea1:	adc    eax,0xa9448496
  41aea6:	sar    BYTE PTR [eax-0x48],0x63
  41aeaa:	in     eax,0xe0
  41aeac:	je     0x41aecc
  41aeae:	cmp    cl,dh
  41aeb0:	enter  0x35b7,0x3e
  41aeb4:	lds    esp,FWORD PTR [ecx]
  41aeb6:	inc    ebp
  41aeb7:	xor    dl,cl
  41aeb9:	xor    DWORD PTR [esp+eax*2],edx
  41aebc:	dec    ebx
  41aebd:	retf   0xa29b
  41aec0:	xchg   BYTE PTR [ebx-0x1b0b3af7],cl
  41aec6:	addr16 inc edi
  41aec8:	add    dl,cl
  41aeca:	dec    ecx
  41aecb:	cmp    eax,0xf31f9ac6
  41aed0:	ins    DWORD PTR es:[edi],dx
  41aed1:	jns    0x41ae67
  41aed3:	mov    edx,0x28bb2621
  41aed8:	aas    
  41aed9:	add    dl,dl
  41aedb:	cmp    eax,DWORD PTR [ebx+edx*1+0x3f]
  41aedf:	loop   0x41aead
  41aee1:	push   0xffffff8b
  41aee3:	dec    esi
  41aee4:	fisubr WORD PTR [ebp+0x60cf380a]
  41aeea:	imul   ecx,DWORD PTR [edx-0x3b],0x16
  41aeee:	(bad)  
  41aeef:	fsubr  st,st(5)
  41aef1:	add    dh,bl
  41aef3:	inc    cl
  41aef5:	stos   DWORD PTR es:[edi],eax
  41aef6:	out    0xa8,al
  41aef8:	fnstsw WORD PTR [esp+ecx*4+0x38]
  41aefc:	mov    dl,0xf
  41aefe:	mov    DWORD PTR [ecx-0x17],esp
  41af01:	fucomip st,st(4)
  41af03:	mov    dl,0x70
  41af05:	add    al,cl
  41af07:	pop    edx
  41af08:	in     al,0x8b
  41af0a:	data16 adc BYTE PTR [edi-0x3255d55c],bh
  41af11:	jo     0x41af8d
  41af13:	sbb    dl,BYTE PTR [ebp+0x4d1d2616]
  41af19:	push   0x9d5f03a8
  41af1e:	call   0xddba344e
  41af23:	jg     0x41aecd
  41af25:	ds pop esp
  41af27:	test   eax,0x795bd89d
  41af2c:	mov    ch,0x19
  41af2e:	xchg   ecx,eax
  41af2f:	mov    esp,0xac4a5dcc
  41af34:	inc    ecx
  41af35:	and    ah,BYTE PTR [edi]
  41af37:	les    ebp,FWORD PTR [ecx+0x3]
  41af3a:	inc    eax
  41af3b:	imul   ebp,DWORD PTR [edx+0x75],0x6a
  41af3f:	jb     0x41aec3
  41af41:	je     0x41aee8
  41af43:	mov    ebx,0xb5868fc1
  41af48:	push   esi
  41af49:	in     al,dx
  41af4a:	test   eax,0x6db9fabd
  41af4f:	adc    eax,0x375fe5a2
  41af54:	add    DWORD PTR [ebp-0x36],0x26
  41af58:	test   BYTE PTR [edx],dl
  41af5a:	add    BYTE PTR [edi-0xb],ah
  41af5d:	mov    ecx,0x5183e9ea
  41af62:	shl    BYTE PTR [eax],1
  41af64:	fisub  WORD PTR [edx+eax*4+0x3f5ec526]
  41af6b:	adc    al,0x30
  41af6d:	in     eax,0xa0
  41af6f:	dec    esi
  41af70:	adc    BYTE PTR [edi],bh
  41af72:	mov    WORD PTR ds:0xa94eed89,gs
  41af78:	and    BYTE PTR [ebp+eiz*8-0x71],bh
  41af7c:	iret   
  41af7d:	or     eax,0x11b7cdcb
  41af82:	fild   WORD PTR [esi-0x7d]
  41af85:	nop
  41af86:	(bad)  
  41af87:	addr16 hlt 
  41af89:	cmp    ecx,ebp
  41af8b:	js     0x41afc9
  41af8d:	mov    ch,ch
  41af8f:	dec    DWORD PTR [esi-0x5e62803a]
  41af95:	ins    BYTE PTR es:[edi],dx
  41af96:	mov    ebx,0x4dfafb14
  41af9b:	push   esi
  41af9c:	ret    0xc2ae
  41af9f:	pop    edx
  41afa0:	cs sahf 
  41afa2:	xchg   esi,eax
  41afa3:	pusha  
  41afa4:	icebp  
  41afa5:	ficomp WORD PTR [eax+0x1df82a0d]
  41afab:	and    ch,BYTE PTR [edi+0x2abc9073]
  41afb1:	adc    eax,0xf57ee910
  41afb6:	loop   0x41af43
  41afb8:	inc    DWORD PTR [ecx-0x3c45880d]
  41afbe:	(bad)  
  41afbf:	mov    al,0x67
  41afc1:	mov    ds:0x3ef7b2a3,eax
  41afc6:	mov    ah,0x5f
  41afc8:	inc    esp
  41afc9:	gs cld 
  41afcb:	repnz out 0x74,eax
  41afce:	ds stc 
  41afd0:	mov    eax,ds:0x9c464157
  41afd5:	or     eax,0x27b56eda
  41afda:	fadd   DWORD PTR [edx-0x2bb91f3b]
  41afe0:	ss (bad) 
  41afe2:	mul    DWORD PTR [esi+0x6679766b]
  41afe8:	repnz dec edx
  41afea:	popf   
  41afeb:	and    DWORD PTR [edx-0x29],esi
  41afee:	push   edi
  41afef:	mov    eax,DWORD PTR [ebx+edi*8+0x31]
  41aff3:	(bad)  
  41aff5:	inc    ecx
  41aff6:	icebp  
  41aff7:	xchg   edx,eax
  41aff8:	test   ecx,edx
  41affa:	inc    edx
  41affb:	lods   eax,DWORD PTR ds:[esi]
  41affc:	jbe    0x41b043
  41affe:	mov    ebp,0xec2985db
  41b003:	add    edi,DWORD PTR [edx+0x60a1002e]
  41b009:	add    BYTE PTR [edi-0x25],bh
  41b00c:	xchg   BYTE PTR [edi-0x57],dl
  41b00f:	out    0x5a,eax
  41b011:	rcl    ebp,cl
  41b013:	push   ebx
  41b014:	out    dx,al
  41b015:	xchg   edx,eax
  41b016:	pop    edi
  41b017:	mov    dl,0x54
  41b019:	scas   eax,DWORD PTR es:[edi]
  41b01a:	xlat   BYTE PTR ds:[ebx]
  41b01b:	ss push cs
  41b01d:	and    bh,bl
  41b01f:	sbb    eax,0x27c0af3e
  41b024:	jae    0x41b086
  41b026:	mov    eax,ds:0xfa7d5b30
  41b02b:	sar    DWORD PTR [edi+0x14a1b1ab],0x8e
  41b032:	or     al,0xd6
  41b034:	add    al,0x40
  41b036:	or     ch,BYTE PTR [ecx+edx*2+0x36d9b7b]
  41b03d:	mov    ds:0xf2ef8d0d,eax
  41b042:	pop    esi
  41b043:	pop    esi
  41b044:	mov    edi,es
  41b046:	push   es
  41b047:	xor    BYTE PTR [edi+0x15],al
  41b04a:	and    eax,0xd6025f88
  41b04f:	aas    
  41b050:	imul   esi,DWORD PTR [ebx],0x64018477
  41b056:	mov    dl,0x7b
  41b058:	sar    eax,1
  41b05a:	xchg   ecx,eax
  41b05b:	or     eax,0xe849d86c
  41b060:	scas   al,BYTE PTR es:[edi]
  41b061:	push   0x1ea52776
  41b066:	mov    eax,ds:0x22b7c0ef
  41b06b:	scas   eax,DWORD PTR es:[edi]
  41b06c:	(bad)  
  41b06d:	out    0x66,al
  41b06f:	aas    
  41b070:	data16 xor BYTE PTR [ebx-0x4e],ch
  41b074:	mov    al,0xe6
  41b076:	out    0x42,eax
  41b078:	or     ch,ch
  41b07a:	add    ebp,ecx
  41b07c:	leave  
  41b07d:	shl    DWORD PTR [ecx],1
  41b07f:	mov    eax,0xd9d7b8cd
  41b084:	aad    0x48
  41b086:	pop    eax
  41b087:	(bad)  
  41b088:	repz add DWORD PTR [esi-0x69],esi
  41b08c:	cmc    
  41b08d:	(bad)  
  41b08e:	mov    cl,0xdd
  41b091:	clc    
  41b092:	leave  
  41b093:	pop    edi
  41b094:	or     BYTE PTR ds:[edx-0x1e],bl
  41b098:	jmp    DWORD PTR [esi]
  41b09a:	(bad)  
  41b09b:	dec    ebx
  41b09c:	call   0x142446e2
  41b0a1:	mov    ds:0x31f3316d,eax
  41b0a6:	enter  0x3678,0x52
  41b0aa:	mov    ds:0x2bb9d183,eax
  41b0af:	or     BYTE PTR [ebx+ecx*2-0x2d885c34],0x14
  41b0b7:	adc    ebx,DWORD PTR [eax+edx*1]
  41b0ba:	sbb    DWORD PTR [ebp+0x2],eax
  41b0bd:	nop
  41b0be:	inc    esi
  41b0bf:	pop    ss
  41b0c0:	imul   esp,ebx,0x2573d79c
  41b0c6:	mov    edi,0x541bd55f
  41b0cb:	in     eax,0xb4
  41b0cd:	clc    
  41b0ce:	sahf   
  41b0cf:	sar    DWORD PTR [bx+di],0xf4
  41b0d3:	retf   0x2fcb
  41b0d6:	test   eax,0x3273c45a
  41b0db:	add    DWORD PTR [edx],esp
  41b0dd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b0df:	jle    0x41b089
  41b0e1:	(bad)  
  41b0e2:	fld    QWORD PTR [edx]
  41b0e4:	sbb    dh,dh
  41b0e6:	adc    al,0x39
  41b0e8:	or     al,0xe
  41b0ea:	outs   dx,BYTE PTR ds:[esi]
  41b0eb:	push   ss
  41b0ec:	jl     0x41b0f4
  41b0ee:	inc    ecx
  41b0ef:	dec    esp
  41b0f0:	aaa    
  41b0f1:	fsub   DWORD PTR [eax+eiz*4]
  41b0f4:	fbstp  TBYTE PTR [esi-0xd31e6f5]
  41b0fa:	pop    ecx
  41b0fb:	xchg   ecx,eax
  41b0fc:	stos   DWORD PTR es:[edi],eax
  41b0fd:	aaa    
  41b0fe:	out    0x9,al
  41b100:	ja     0x41b132
  41b102:	dec    esp
  41b103:	icebp  
  41b104:	ss nop
  41b106:	push   ebx
  41b107:	int3   
  41b108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b109:	gs retf 
  41b10b:	xor    DWORD PTR [ebp+0x409d9121],0x9
  41b112:	jbe    0x41b152
  41b114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b115:	pop    ds
  41b116:	inc    ebx
  41b117:	adc    al,0x75
  41b119:	fdiv   st,st(4)
  41b11b:	je     0x41b0cb
  41b11d:	(bad)  
  41b11e:	adc    cl,BYTE PTR [edi]
  41b120:	mov    WORD PTR [eax+0x6c],fs
  41b123:	adc    BYTE PTR [ecx],ah
  41b125:	sbb    eax,0x8ec35666
  41b12a:	sbb    DWORD PTR [edx],ebx
  41b12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b12d:	mov    cl,0x73
  41b12f:	mov    BYTE PTR ds:0x12d3d084,cl
  41b135:	jle    0x41b158
  41b137:	ins    BYTE PTR es:[edi],dx
  41b138:	sbb    al,BYTE PTR [ebx+ebx*1+0x73e1d82b]
  41b13f:	leave  
  41b140:	xor    bl,0x89
  41b143:	cmc    
  41b144:	pop    ds
  41b145:	test   DWORD PTR [edx],ebp
  41b147:	ror    BYTE PTR [edi+eax*8],1
  41b14a:	enter  0x21d3,0x6
  41b14e:	push   0x173341fe
  41b153:	aam    0x66
  41b155:	or     DWORD PTR [esi],ebp
  41b157:	pop    eax
  41b158:	sahf   
  41b159:	or     edx,DWORD PTR [edi+0x67]
  41b15c:	sahf   
  41b15d:	loop   0x41b14e
  41b15f:	pop    esi
  41b160:	aaa    
  41b161:	mov    ebx,0x6e851c60
  41b166:	dec    edi
  41b167:	fnstenv [ecx+ecx*1-0x48ac65f4]
  41b16e:	fisubr WORD PTR ds:0x25ce8fad
  41b174:	inc    ecx
  41b175:	add    esp,DWORD PTR [eax]
  41b177:	mov    esi,0x237f7e7f
  41b17c:	ins    DWORD PTR es:[edi],dx
  41b17d:	inc    edx
  41b17e:	pop    edx
  41b17f:	inc    esi
  41b180:	jmp    0xdb0b:0xe17a0b05
  41b187:	add    ah,BYTE PTR [esi-0x54]
  41b18a:	lahf   
  41b18b:	es inc ebp
  41b18d:	sysexit 
  41b18f:	(bad)  
  41b190:	stc    
  41b191:	push   es
  41b192:	push   ebx
  41b193:	xchg   esi,eax
  41b194:	enter  0xfcdf,0x87
  41b198:	sbb    DWORD PTR [ecx+0xf],0x29
  41b19c:	sub    DWORD PTR [ecx+0x49],ebx
  41b19f:	or     al,0xa0
  41b1a1:	sub    al,BYTE PTR [ecx+0x3b]
  41b1a4:	or     ebp,DWORD PTR [esi+0x8f00799]
  41b1aa:	test   eax,0xe57f857a
  41b1af:	cmp    eax,0x17d53ab5
  41b1b4:	sub    DWORD PTR [ebx+esi*4],esi
  41b1b7:	scas   al,BYTE PTR es:[edi]
  41b1b8:	push   esp
  41b1b9:	or     DWORD PTR [ecx-0x5d3f598],edx
  41b1bf:	and    cl,BYTE PTR [edi]
  41b1c1:	rcr    DWORD PTR [esi+ebx*1+0x7ba02653],1
  41b1c8:	in     eax,dx
  41b1c9:	xchg   ecx,eax
  41b1ca:	sub    al,0xb6
  41b1cc:	pop    edi
  41b1cd:	in     al,0x51
  41b1cf:	sub    al,0x1c
  41b1d1:	xchg   ebx,eax
  41b1d2:	fist   WORD PTR ds:0x9d1162c7
  41b1d8:	ror    edx,0x65
  41b1db:	ret    
  41b1dc:	sahf   
  41b1dd:	push   0xffffffad
  41b1df:	push   esp
  41b1e0:	sub    al,0xfa
  41b1e2:	hlt    
  41b1e3:	pusha  
  41b1e4:	sahf   
  41b1e5:	data16 mov bh,0x68
  41b1e8:	jnp    0x41b1e0
  41b1ea:	sti    
  41b1eb:	call   0x77563c44
  41b1f0:	push   edi
  41b1f1:	dec    esp
  41b1f2:	dec    edi
  41b1f3:	jge    0x41b1d6
  41b1f5:	es scas eax,DWORD PTR es:[edi]
  41b1f7:	mov    bl,0x32
  41b1f9:	ror    DWORD PTR [edx+0x2412a04a],cl
  41b1ff:	pop    esi
  41b200:	sbb    al,0x92
  41b202:	cmp    DWORD PTR [esi-0x2ee2997],edi
  41b208:	jnp    0x41b1b8
  41b20a:	js     0x41b21a
  41b20c:	sub    al,0x79
  41b20e:	pop    ecx
  41b20f:	xchg   ebx,eax
  41b210:	jne    0x41b220
  41b212:	xor    bh,BYTE PTR [ebx+0x56df82b8]
  41b218:	add    BYTE PTR [edx-0x497361dc],0x1f
  41b21f:	push   edx
  41b220:	stc    
  41b221:	aad    0xb4
  41b223:	xor    eax,0x2dece0dd
  41b228:	mov    ?,WORD PTR [ecx+0x77]
  41b22b:	cwde   
  41b22c:	rol    DWORD PTR [ecx-0x2f],0x7c
  41b230:	pop    esi
  41b231:	and    esi,esi
  41b233:	sub    bh,bh
  41b235:	sbb    bl,bl
  41b237:	mov    BYTE PTR [esi-0x77],cl
  41b23a:	mov    esi,DWORD PTR [esi+0x564f5b06]
  41b240:	cmp    eax,0x6dd58735
  41b245:	std    
  41b246:	data16 outs dx,BYTE PTR ds:[esi]
  41b248:	jp     0x41b223
  41b24a:	xchg   ebx,eax
  41b24b:	fcmovb st,st(6)
  41b24d:	push   edi
  41b24e:	dec    esp
  41b24f:	inc    esp
  41b250:	sub    al,0xa6
  41b252:	fmulp  st(4),st
  41b254:	sub    eax,ebp
  41b256:	and    BYTE PTR [ebx],ch
  41b258:	jecxz  0x41b282
  41b25a:	scas   eax,DWORD PTR es:[edi]
  41b25b:	jnp    0x41b2a4
  41b25d:	xchg   esi,eax
  41b25e:	add    cl,dl
  41b260:	jae    0x41b262
  41b262:	adc    BYTE PTR [edi+edx*2-0x12],dh
  41b266:	pop    eax
  41b267:	repnz (bad) 
  41b269:	push   edx
  41b26a:	sbb    al,0xe9
  41b26c:	mov    ecx,0x6d1bc9c6
  41b271:	mov    edi,0xe25e282a
  41b276:	jb     0x41b2e4
  41b278:	arpl   WORD PTR [eax-0x3e100f6d],di
  41b27e:	add    DWORD PTR [edx],ecx
  41b280:	enter  0x4cf6,0x20
  41b284:	gs inc ebp
  41b286:	adc    DWORD PTR [ebx],ebp
  41b288:	(bad)  
  41b289:	clc    
  41b28a:	iret   
  41b28b:	mov    ds:0x70ab335d,eax
  41b290:	push   eax
  41b291:	inc    eax
  41b292:	mov    DWORD PTR [edx-0x23e5dc6b],edi
  41b298:	inc    ecx
  41b299:	les    ecx,FWORD PTR [ebx]
  41b29b:	or     al,0xae
  41b29d:	xor    edi,DWORD PTR [esi]
  41b29f:	aad    0xf1
  41b2a1:	xor    eax,0xd410bd27
  41b2a6:	mov    ecx,0x125f763
  41b2ab:	loope  0x41b26d
  41b2ad:	mov    edi,0x2e3dc298
  41b2b2:	mov    bl,BYTE PTR [edi-0x987af3]
  41b2b8:	and    BYTE PTR [esi+esi*2+0x3143dc24],dl
  41b2bf:	shl    dh,0xc3
  41b2c2:	pop    edi
  41b2c3:	(bad)  
  41b2c4:	hlt    
  41b2c5:	mov    eax,ds:0xc2be0e6d
  41b2ca:	rcl    DWORD PTR gs:[edx],cl
  41b2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ce:	pusha  
  41b2cf:	inc    eax
  41b2d0:	push   edx
  41b2d1:	into   
  41b2d2:	call   0x7bc610
  41b2d7:	mov    eax,0xd31c234e
  41b2dc:	setp   BYTE PTR [ebp-0x5c7f9fd7]
  41b2e3:	popa   
  41b2e4:	xchg   ecx,eax
  41b2e5:	shl    BYTE PTR [eax-0x2310272e],0xbe
  41b2ec:	fbstp  TBYTE PTR [ebx-0x12c051a5]
  41b2f2:	xchg   edx,eax
  41b2f3:	inc    ecx
  41b2f4:	aad    0x52
  41b2f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2f7:	and    BYTE PTR [esi-0x2a0e58d2],cl
  41b2fd:	sub    al,0x20
  41b2ff:	neg    DWORD PTR [ecx+0x18573975]
  41b305:	push   esi
  41b306:	loop   0x41b2fd
  41b308:	cwde   
  41b309:	inc    ebp
  41b30a:	clc    
  41b30b:	pop    eax
  41b30c:	xor    bh,dl
  41b30e:	nop
  41b30f:	sbb    ebp,edx
  41b311:	jns    0x41b2a1
  41b313:	and    ch,al
  41b315:	jb     0x41b317
  41b317:	(bad)  [ebx+0x45]
  41b31a:	adc    al,0x71
  41b31c:	iret   
  41b31d:	lds    ebp,FWORD PTR [ebp-0x4]
  41b320:	loopne 0x41b36c
  41b322:	das    
  41b323:	retf   0x7972
  41b326:	pop    ebx
  41b327:	fsub   QWORD PTR [edx+0x6c]
  41b32a:	out    0x82,al
  41b32c:	add    eax,0x6da02750
  41b331:	fcmovb st,st(5)
  41b333:	in     al,dx
  41b334:	cmp    bh,BYTE PTR [esi+0x7d3adeda]
  41b33a:	(bad)  [esi]
  41b33c:	sbb    esi,DWORD PTR [ebp+0x79a44d8c]
  41b342:	sbb    esi,DWORD PTR [edx-0xd]
  41b345:	inc    ebx
  41b346:	(bad)  
  41b347:	dec    BYTE PTR [edx+0x3]
  41b34a:	lock dec eax
  41b34c:	mov    bh,0x49
  41b34e:	stos   DWORD PTR es:[edi],eax
  41b34f:	jnp    0x41b396
  41b351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b352:	push   ecx
  41b353:	jmp    0x41b309
  41b355:	push   0xffffffe8
  41b357:	mov    al,0x6a
  41b359:	cmp    DWORD PTR [edx+0x70],esp
  41b35c:	fisttp WORD PTR [edi-0x1e]
  41b35f:	jl     0x41b342
  41b361:	pop    ebx
  41b362:	mov    bh,ch
  41b364:	popa   
  41b365:	cs dec ebp
  41b367:	pop    esi
  41b368:	rcl    DWORD PTR [eax+0x4f],0xec
  41b36c:	jg     0x41b3ae
  41b36e:	cmp    dh,BYTE PTR [edx+0x759b0baf]
  41b374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b375:	xchg   BYTE PTR [ebp-0x4d],cl
  41b378:	cwde   
  41b379:	mov    esp,0x6b6d7161
  41b37e:	es xchg edx,eax
  41b380:	add    BYTE PTR [ebx-0x5c],al
  41b383:	in     al,0x64
  41b385:	push   0x3772f1da
  41b38a:	aas    
  41b38b:	aaa    
  41b38c:	jge    0x41b350
  41b38e:	out    dx,al
  41b38f:	jnp    0x41b36e
  41b391:	pop    esi
  41b392:	adc    ch,al
  41b394:	xor    ah,0x9e
  41b397:	sar    BYTE PTR [edi],1
  41b399:	inc    esi
  41b39a:	pop    esi
  41b39b:	add    dh,BYTE PTR [edx]
  41b39d:	xchg   ebp,eax
  41b39e:	ins    DWORD PTR es:[edi],dx
  41b39f:	add    ebp,eax
  41b3a1:	jmp    0xda0f3c17
  41b3a6:	mov    edi,0x33f0a249
  41b3ab:	or     edi,eax
  41b3ad:	jbe    0x41b3c7
  41b3af:	inc    edx
  41b3b0:	jp     0x41b3f3
  41b3b2:	pop    edx
  41b3b3:	lock fcmovu st,st(0)
  41b3b6:	xchg   esp,eax
  41b3b7:	cmp    al,0x4e
  41b3b9:	mov    ebp,DWORD PTR [edx-0x12d6df75]
  41b3bf:	xchg   edi,eax
  41b3c0:	scas   al,BYTE PTR es:[edi]
  41b3c1:	imul   esi,DWORD PTR [esi+0x65336092],0xffffff81
  41b3c8:	std    
  41b3c9:	test   DWORD PTR [edx+0x4264ab55],edx
  41b3cf:	in     al,0x10
  41b3d1:	adc    DWORD PTR [eax-0x57],esp
  41b3d4:	push   ebp
  41b3d5:	or     DWORD PTR ds:0x9787f84f,0x48
  41b3dc:	jecxz  0x41b38e
  41b3de:	adc    ch,BYTE PTR [ecx+0x2e488d89]
  41b3e4:	xchg   ebp,eax
  41b3e5:	cld    
  41b3e6:	ja     0x41b3cd
  41b3e8:	enter  0x4eff,0xb4
  41b3ec:	or     al,0x27
  41b3ee:	call   0x3b2c475f
  41b3f3:	fwait
  41b3f4:	sbb    eax,0xdc415d09
  41b3f9:	or     al,dh
  41b3fb:	lods   eax,DWORD PTR ds:[esi]
  41b3fc:	xor    dh,BYTE PTR [ebx-0x1a]
  41b3ff:	mov    ds:0xf5acb45e,al
  41b405:	(bad)  
  41b406:	push   esp
  41b407:	mov    eax,ds:0xb32f371d
  41b40c:	inc    esi
  41b40d:	psubd  mm0,mm3
  41b410:	jne    0x41b3cf
  41b412:	add    cl,BYTE PTR [eax+0x257c952e]
  41b418:	div    al
  41b41a:	xor    al,0xc1
  41b41c:	push   ebp
  41b41d:	or     eax,0x892933ff
  41b422:	scas   eax,DWORD PTR es:[edi]
  41b423:	jg     0x41b441
  41b425:	cmp    edi,0xffffffe1
  41b428:	(bad)  
  41b42a:	xor    BYTE PTR [edx],0xbe
  41b42d:	push   ecx
  41b42e:	mov    esi,0x694f4bf7
  41b433:	test   BYTE PTR [eax+0x75],ch
  41b436:	out    dx,eax
  41b437:	jmp    DWORD PTR [esi-0x74]
  41b43a:	mul    BYTE PTR [ebp-0x47818636]
  41b440:	add    BYTE PTR [esi+0x4eb67067],ch
  41b446:	outs   dx,BYTE PTR ds:[esi]
  41b447:	bound  ecx,QWORD PTR [eax-0x3b04dee8]
  41b44d:	test   al,0x6e
  41b44f:	aaa    
  41b450:	jbe    0x41b4c1
  41b452:	cdq    
  41b453:	add    al,0xe6
  41b455:	frstor [ebx]
  41b457:	cpuid  
  41b459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45a:	xchg   esi,ebx
  41b45c:	inc    ecx
  41b45d:	inc    edi
  41b45e:	(bad)  
  41b45f:	or     DWORD PTR [edx+eiz*4],ecx
  41b462:	ins    DWORD PTR es:[edi],dx
  41b463:	fs icebp 
  41b465:	xchg   ecx,eax
  41b466:	cmp    al,0x8f
  41b468:	mov    al,ds:0x862f38b
  41b46d:	mov    cl,0xd4
  41b46f:	fcom   st(0)
  41b471:	imul   edi,DWORD PTR [edx],0x16
  41b474:	nop
  41b475:	(bad)
  41b478:	push   ecx
  41b479:	(bad)  
  41b47a:	mov    ah,0xca
  41b47c:	fadd   DWORD PTR [ecx+eiz*2+0x2b3eb7c]
  41b483:	pop    ebx
  41b484:	or     DWORD PTR ds:0x12ae6be1,ecx
  41b48a:	data16 int 0x7b
  41b48d:	jnp    0x41b4c6
  41b48f:	dec    eax
  41b490:	jecxz  0x41b44a
  41b492:	dec    ebp
  41b494:	sbb    eax,0x5dc6f6b9
  41b499:	mov    ebx,0xa43dc516
  41b49e:	int    0x91
  41b4a0:	inc    ebx
  41b4a1:	aas    
  41b4a2:	push   esi
  41b4a3:	adc    BYTE PTR [ebx-0x54],dh
  41b4a6:	or     DWORD PTR [ecx-0x1],ebp
  41b4a9:	cmp    dl,BYTE PTR [ebx]
  41b4ab:	jge    0x41b447
  41b4ad:	das    
  41b4ae:	push   es
  41b4af:	in     al,0xd7
  41b4b1:	mov    cl,0xc1
  41b4b3:	loop   0x41b4cd
  41b4b5:	push   0xa23c9333
  41b4ba:	xor    al,dh
  41b4bc:	mov    al,ds:0x272ed875
  41b4c1:	rol    DWORD PTR [ebp-0x121e50af],cl
  41b4c7:	jg     0x41b4d7
  41b4c9:	xor    al,0x62
  41b4cb:	push   edi
  41b4cc:	shr    BYTE PTR [eax+eax*8-0x2b],0x3f
  41b4d1:	push   edi
  41b4d2:	jge    0x41b4af
  41b4d4:	scas   eax,DWORD PTR es:[edi]
  41b4d5:	pop    es
  41b4d6:	and    DWORD PTR [eax+edx*4],ecx
  41b4d9:	ins    DWORD PTR es:[edi],dx
  41b4da:	mov    bl,0xf9
  41b4dc:	cmp    DWORD PTR [esi-0x4],edx
  41b4df:	and    DWORD PTR [esi+ebp*8],0x3395b5f
  41b4e6:	xchg   BYTE PTR [ebp-0x29c83895],al
  41b4ec:	shl    ebp,1
  41b4ee:	jne    0x41b50b
  41b4f0:	mov    ch,0x8a
  41b4f2:	sbb    BYTE PTR [ebp+0x73e3e333],ch
  41b4f8:	xchg   esp,eax
  41b4f9:	fstp   DWORD PTR [edx]
  41b4fb:	cmc    
  41b4fc:	inc    ebp
  41b4fd:	icebp  
  41b4fe:	adc    al,0xbb
  41b500:	call   0x84298289
  41b505:	lods   eax,DWORD PTR ds:[esi]
  41b506:	mov    ds:0x16d5f660,eax
  41b50b:	mov    ds:0xd6ce3fbd,al
  41b510:	mov    bh,0x81
  41b512:	mov    edx,DWORD PTR [edx]
  41b514:	adc    cl,bh
  41b516:	pusha  
  41b517:	adc    ecx,ecx
  41b519:	sub    eax,0xdc828dd2
  41b51e:	test   al,0xbb
  41b520:	pushf  
  41b521:	sahf   
  41b522:	fprem  
  41b524:	mov    ecx,DWORD PTR [edx+0x39]
  41b527:	repnz mov ah,BYTE PTR [ecx]
  41b52a:	nop
  41b52b:	dec    ecx
  41b52c:	std    
  41b52d:	ficomp DWORD PTR es:[edx+0x2ee1ce22]
  41b534:	xlat   BYTE PTR cs:[ebx]
  41b536:	cmp    DWORD PTR [edi+0x46],0xffffff9f
  41b53a:	lea    edi,[esi+0x6b]
  41b53d:	enter  0x4f62,0x28
  41b541:	adc    DWORD PTR [eax+0x47ab9ce8],esp
  41b547:	retf   
  41b548:	push   eax
  41b549:	mov    ebp,0x67770b6
  41b54e:	jge    0x41b4e8
  41b550:	sbb    DWORD PTR [ecx],edi
  41b552:	xor    BYTE PTR [ecx+0x84d8b10],bl
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	push   0xfffffff6
  41b872:	test   eax,0x80ffee6d
  41b877:	or     DWORD PTR [edi],0x5e
  41b87a:	add    DWORD PTR [ebx-0x422070c7],0xffffff9b
  41b881:	mov    ecx,0x26075dea
  41b886:	aad    0x3
  41b888:	or     bl,BYTE PTR [edi+0x665e8328]
  41b88e:	sub    ah,dh
  41b890:	dec    esp
  41b891:	push   esi
  41b892:	leave  
  41b893:	jle    0x41b820
  41b895:	cmp    BYTE PTR [eax],bl
  41b897:	cmp    DWORD PTR [edi],ebp
  41b899:	sbb    esp,ebx
  41b89b:	mov    eax,ds:0xcd0a846c
  41b8a0:	into   
  41b8a1:	popf   
  41b8a2:	cmp    eax,0x1bc968e3
  41b8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8a8:	inc    ebx
  41b8a9:	push   cs
  41b8aa:	packssdw mm7,mm5
  41b8ad:	ret    0x10df
  41b8b0:	push   edx
  41b8b1:	cwde   
  41b8b2:	std    
  41b8b3:	pop    edx
  41b8b4:	stc    
  41b8b5:	xchg   ecx,eax
  41b8b6:	popf   
  41b8b7:	stos   DWORD PTR es:[edi],eax
  41b8b8:	and    al,0x5a
  41b8ba:	xchg   DWORD PTR [eax-0x2e80d88a],ebx
  41b8c0:	pop    ebx
  41b8c1:	pop    es
  41b8c2:	add    bh,al
  41b8c4:	in     al,0x38
  41b8c6:	cmp    esi,0xffffffbb
  41b8c9:	cs and eax,0x90472a95
  41b8cf:	cmp    al,0xd5
  41b8d1:	and    dl,BYTE PTR fs:[esi-0x11]
  41b8d5:	xchg   edx,eax
  41b8d6:	pop    esi
  41b8d7:	jecxz  0x41b930
  41b8d9:	inc    eax
  41b8da:	or     ecx,0x34
  41b8dd:	dec    esi
  41b8de:	pop    ecx
  41b8df:	push   cs
  41b8e0:	jmp    0xc44d2c2e
  41b8e5:	imul   eax,DWORD PTR [ebx-0x76],0x36ff4e1a
  41b8ec:	inc    ebx
  41b8ed:	lahf   
  41b8ee:	push   edx
  41b8ef:	xor    eax,0xd99d6f0c
  41b8f4:	xor    eax,0x46e7c427
  41b8f9:	in     eax,0xe8
  41b8fb:	je     0x41b930
  41b8fd:	ja     0x41b92e
  41b8ff:	mov    bh,0xc
  41b901:	inc    esp
  41b902:	push   edx
  41b903:	imul   edx,edx,0x17
  41b906:	xor    eax,0xa1a67e91
  41b90b:	dec    eax
  41b90c:	test   DWORD PTR [edi+0x34390f68],ebp
  41b912:	cs in  al,dx
  41b914:	mov    ds:0xe70533d0,eax
  41b919:	cmp    al,0x62
  41b91b:	jp     0x41b95b
  41b91d:	mov    ebp,0xa330df2a
  41b922:	sbb    esp,esp
  41b924:	xchg   esi,eax
  41b925:	ret    0x178
  41b928:	inc    esp
  41b929:	loopne 0x41b97a
  41b92b:	aad    0x72
  41b92d:	mov    ds:0x129d7ebd,eax
  41b932:	pop    eax
  41b933:	les    ebp,FWORD PTR [ebp-0x2]
  41b936:	dec    ebp
  41b937:	addr16 inc edx
  41b939:	repnz ds int 0xfb
  41b93d:	push   eax
  41b93e:	inc    eax
  41b93f:	enter  0xa55d,0xc2
  41b943:	mov    dh,0xb8
  41b945:	(bad)  
  41b946:	(bad)  
  41b947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b948:	jb     0x41b9b7
  41b94a:	and    eax,0x7f25b373
  41b94f:	push   0xffffffda
  41b951:	(bad)  
  41b952:	call   0x6072:0x8db401dd
  41b959:	dec    ebx
  41b95a:	pop    esp
  41b95b:	cli    
  41b95c:	ret    
  41b95d:	xor    DWORD PTR [ecx],0xcafe4b57
  41b963:	mov    ds:0xeb013dee,al
  41b968:	es mov dh,bl
  41b96b:	adc    cl,bh
  41b96d:	scas   al,BYTE PTR es:[edi]
  41b96e:	xchg   esi,eax
  41b96f:	icebp  
  41b970:	push   0x2e
  41b972:	and    BYTE PTR [edi+0x3c18c349],0x32
  41b979:	adc    DWORD PTR [edx+eiz*2-0x39],0xffffffb9
  41b97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b97f:	cmc    
  41b980:	call   0xe38e80dd
  41b985:	fucom  st(7)
  41b987:	cmp    BYTE PTR [edx],dl
  41b989:	repnz push ebx
  41b98b:	add    BYTE PTR [ebx-0x685d5ac],ah
  41b991:	lods   al,BYTE PTR ds:[esi]
  41b992:	out    dx,al
  41b993:	inc    esp
  41b994:	test   eax,0xe7e13344
  41b999:	push   edx
  41b99a:	ss dec edx
  41b99c:	fimul  DWORD PTR [ecx]
  41b99e:	in     al,dx
  41b99f:	retf   
  41b9a0:	adc    bl,BYTE PTR [edx+ebx*1]
  41b9a3:	push   esi
  41b9a4:	xchg   ebp,ecx
  41b9a6:	mov    esi,cs
  41b9a8:	sbb    al,BYTE PTR cs:[ecx]
  41b9ab:	test   al,0x4c
  41b9ad:	inc    ecx
  41b9ae:	mov    eax,ds:0xba55d83d
  41b9b3:	add    ebp,esp
  41b9b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9b6:	push   ss
  41b9b7:	adc    BYTE PTR [eax+esi*4+0x19106869],ah
  41b9be:	(bad)  
  41b9bf:	mov    ch,0x2b
  41b9c1:	dec    edi
  41b9c2:	add    eax,0x8a5530cc
  41b9c7:	mov    al,0x9c
  41b9c9:	loope  0x41ba3d
  41b9cb:	mov    al,0x62
  41b9cd:	ins    DWORD PTR es:[edi],dx
  41b9ce:	mov    esi,0x4fd10092
  41b9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9d4:	or     al,0x21
  41b9d6:	dec    esp
  41b9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9d8:	push   edx
  41b9d9:	push   cs
  41b9da:	mov    bh,BYTE PTR [eax+0x12]
  41b9dd:	rep outs dx,BYTE PTR ds:[esi]
  41b9df:	pop    ebx
  41b9e0:	jns    0x41b9cc
  41b9e2:	lds    edx,FWORD PTR [ebp+0x28501af3]
  41b9e8:	sbb    eax,0x1a1c1319
  41b9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ee:	mov    eax,ds:0xe33b2d63
  41b9f3:	pop    esi
  41b9f4:	add    BYTE PTR [edx+0x510a4331],cl
  41b9fa:	packssdw mm3,QWORD PTR [edi]
  41b9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9fe:	das    
  41b9ff:	gs xchg ebx,eax
  41ba01:	push   edx
  41ba02:	sbb    bh,al
  41ba04:	pop    edi
  41ba05:	test   eax,0xdbbc2a20
  41ba0a:	dec    ebp
  41ba0b:	retf   
  41ba0c:	and    al,0xa
  41ba0e:	out    dx,al
  41ba0f:	lock cld 
  41ba11:	pop    esp
  41ba12:	push   ebp
  41ba13:	std    
  41ba14:	inc    ecx
  41ba15:	(bad)  
  41ba16:	jge    0x41ba41
  41ba18:	or     cl,cl
  41ba1a:	in     eax,0x79
  41ba1c:	dec    edx
  41ba1d:	inc    edx
  41ba1e:	jno    0x41ba48
  41ba20:	xchg   BYTE PTR [ecx-0x37],dh
  41ba23:	daa    
  41ba24:	out    dx,al
  41ba25:	retf   0x5f44
  41ba28:	xchg   ebx,eax
  41ba29:	in     al,dx
  41ba2a:	push   esi
  41ba2b:	fld    QWORD PTR [edx+0x7705c3]
  41ba31:	enter  0xb304,0x81
  41ba35:	aam    0x77
  41ba37:	cmp    DWORD PTR [ecx+0x79],eax
  41ba3a:	mov    esp,0x885a38d1
  41ba3f:	sahf   
  41ba40:	stc    
  41ba41:	ins    BYTE PTR es:[edi],dx
  41ba42:	pusha  
  41ba43:	das    
  41ba44:	repz mov edi,0x2ab4c884
  41ba4a:	push   ss
  41ba4b:	jmpw   0x789b
  41ba4f:	mov    DWORD PTR [bx+0x6625],eax
  41ba54:	xor    ebx,DWORD PTR [edx+0xf]
  41ba57:	sbb    DWORD PTR [ebx],ebp
  41ba59:	xchg   BYTE PTR [ebp+0x2f07eb87],dl
  41ba5f:	shr    DWORD PTR [ebx],1
  41ba61:	xchg   edx,eax
  41ba62:	xor    eax,0x2262ce6d
  41ba67:	mov    esp,0x4626225c
  41ba6c:	pusha  
  41ba6d:	sub    cl,BYTE PTR [edx-0x1]
  41ba70:	outs   dx,DWORD PTR ds:[esi]
  41ba71:	cdq    
  41ba72:	sub    esi,DWORD PTR [esi-0xa]
  41ba75:	aam    0xa1
  41ba77:	into   
  41ba78:	ins    DWORD PTR es:[edi],dx
  41ba79:	pop    ss
  41ba7a:	sti    
  41ba7b:	jg     0x41ba9a
  41ba7d:	push   ss
  41ba7e:	push   es
  41ba7f:	push   0xffffffdb
  41ba81:	mov    ?,WORD PTR [edx-0x14]
  41ba84:	cwde   
  41ba85:	xor    dl,ah
  41ba87:	jno    0x41ba2f
  41ba89:	add    al,0x7f
  41ba8b:	lock ror DWORD PTR ds:0xba0a6be3,cl
  41ba92:	sub    BYTE PTR [edx],ah
  41ba94:	test   ah,ah
  41ba96:	loop   0x41ba2f
  41ba98:	call   0x90079ce9
  41ba9d:	in     al,dx
  41ba9e:	pop    ebx
  41ba9f:	lahf   
  41baa0:	aad    0xf7
  41baa2:	(bad)  
  41baa3:	out    0x67,al
  41baa5:	das    
  41baa6:	scas   al,BYTE PTR es:[edi]
  41baa7:	adc    esp,DWORD PTR [edx]
  41baa9:	xchg   ebx,eax
  41baaa:	(bad)  
  41baab:	aas    
  41baac:	es popf 
  41baae:	sub    ah,BYTE PTR [esi+0x10]
  41bab1:	xor    al,0xa
  41bab3:	call   DWORD PTR [edx]
  41bab5:	cld    
  41bab6:	icebp  
  41bab7:	ds dec edi
  41bab9:	and    eax,0xb7ae16e6
  41babe:	loopne 0x41bb00
  41bac0:	mov    bh,0xb1
  41bac2:	mov    esi,0x6a602b19
  41bac7:	in     al,0x3c
  41bac9:	cwde   
  41baca:	ror    BYTE PTR es:[ebp+eiz*1-0x266f913f],0xd2
  41bad3:	jecxz  0x41bb01
  41bad5:	stos   BYTE PTR es:[edi],al
  41bad6:	int    0x78
  41bad8:	pop    esi
  41bad9:	xor    BYTE PTR ds:0x3df91527,ch
  41badf:	mov    ?,WORD PTR [ecx-0x42dde602]
  41bae5:	repnz stos WORD PTR es:[edi],ax
  41bae8:	jbe    0x41bafa
  41baea:	stos   BYTE PTR es:[edi],al
  41baeb:	es pop edx
  41baed:	push   eax
  41baee:	mov    ebp,0x7adbd9b3
  41baf3:	aaa    
  41baf4:	add    esi,DWORD PTR ds:0xaa45b576
  41bafa:	jo     0x41bb37
  41bafc:	cdq    
  41bafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bafe:	dec    ebx
  41baff:	hlt    
  41bb00:	popf   
  41bb01:	(bad)  
  41bb02:	or     al,0xc0
  41bb04:	or     esi,DWORD PTR [edx-0x3b8d944b]
  41bb0a:	test   DWORD PTR [edi],ebp
  41bb0c:	sub    eax,0x20e3a68
  41bb11:	push   esp
  41bb12:	xor    al,0x17
  41bb14:	es inc ebx
  41bb16:	jg     0x41baa4
  41bb18:	call   0xef1d:0x1f934d8c
  41bb1f:	les    edx,FWORD PTR [ebx+ebx*2]
  41bb22:	inc    ebx
  41bb23:	pop    eax
  41bb24:	mov    ecx,0x4dbf2e99
  41bb29:	fcomp  st(3)
  41bb2b:	in     eax,dx
  41bb2c:	ss push 0x7804c1fe
  41bb32:	ss mov edi,0xf3d5ce87
  41bb38:	sub    BYTE PTR [esi],dh
  41bb3a:	cmc    
  41bb3b:	mov    eax,ds:0xe0dfa2e0
  41bb40:	inc    edi
  41bb41:	xchg   DWORD PTR [eax-0x5ea44248],esp
  41bb47:	or     dh,BYTE PTR [esi-0x38]
  41bb4a:	lea    ebx,[edi+0x5f]
  41bb4d:	sbb    dh,bh
  41bb4f:	outs   dx,DWORD PTR ds:[esi]
  41bb50:	repnz not DWORD PTR [esi-0x1d]
  41bb54:	aad    0x96
  41bb56:	icebp  
  41bb57:	(bad)  
  41bb58:	jmp    DWORD PTR [edx+0x763c6e36]
  41bb5e:	mov    ebp,0x5eaac3e2
  41bb63:	adc    dh,ah
  41bb65:	aam    0xc7
  41bb67:	jo     0x41bb8d
  41bb69:	stos   BYTE PTR es:[edi],al
  41bb6a:	xor    cl,BYTE PTR [bx+0x38]
  41bb6e:	jmp    0x6261751e
  41bb73:	gs in  al,0x52
  41bb76:	push   esp
  41bb77:	pop    ss
  41bb78:	xor    ah,BYTE PTR [edx-0x3a81aa4f]
  41bb7e:	inc    edi
  41bb7f:	jmp    0x22d0ee8d
  41bb84:	cld    
  41bb85:	outs   dx,DWORD PTR ds:[esi]
  41bb86:	xchg   esp,eax
  41bb87:	push   eax
  41bb88:	pop    es
  41bb89:	leave  
  41bb8a:	repz add eax,0x6e136ded
  41bb90:	adc    ebx,DWORD PTR [ecx+0x22]
  41bb93:	push   esi
  41bb94:	and    BYTE PTR [esi+0x59],ch
  41bb97:	out    dx,al
  41bb98:	jg     0x41bb90
  41bb9a:	sbb    ebp,eax
  41bb9c:	iret   
  41bb9d:	(bad)  
  41bb9e:	cmp    al,0x2a
  41bba0:	adc    DWORD PTR [edx+0x1b],esp
  41bba3:	cmp    DWORD PTR [ebp-0x57],ecx
  41bba6:	mov    edi,0xaeaddbcb
  41bbab:	fbld   TBYTE PTR [ebp+0x32]
  41bbae:	adc    ah,dl
  41bbb0:	xor    eax,0xc89caf7b
  41bbb5:	cs jnp 0x41bb6f
  41bbb8:	pop    ecx
  41bbb9:	cld    
  41bbba:	lahf   
  41bbbb:	adc    ch,dh
  41bbbd:	xchg   ebx,eax
  41bbbe:	popa   
  41bbbf:	pop    eax
  41bbc0:	ret    0xf714
  41bbc3:	in     al,0x59
  41bbc5:	repnz mov DWORD PTR [ebx+0x2e],0x52d48b0a
  41bbcd:	scas   al,BYTE PTR es:[edi]
  41bbce:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41bbd0:	scas   eax,DWORD PTR es:[edi]
  41bbd1:	ds cmp edi,eax
  41bbd4:	out    0x78,eax
  41bbd6:	or     DWORD PTR [eax+0x23acde4c],ecx
  41bbdc:	cmp    bl,bl
  41bbde:	add    bl,bh
  41bbe0:	xchg   BYTE PTR [ecx-0x4d69bd3e],bh
  41bbe6:	jmp    0x47c6:0x6b538945
  41bbed:	jecxz  0x41bc11
  41bbef:	ss stc 
  41bbf1:	sbb    DWORD PTR [esi],ecx
  41bbf3:	jns    0x41bb9d
  41bbf5:	retf   0x1275
  41bbf8:	pop    es
  41bbf9:	lahf   
  41bbfa:	jge    0x41bc71
  41bbfc:	popf   
  41bbfd:	and    bh,al
  41bbff:	push   cs
  41bc00:	mov    dh,0x8f
  41bc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc03:	inc    esi
  41bc04:	cwde   
  41bc05:	sub    eax,0x71791725
  41bc0a:	mov    eax,0x10549ea6
  41bc0f:	or     BYTE PTR ds:0xefc5f118,0x7f
  41bc16:	int3   
  41bc17:	ds call 0x4315:0x505ee9f4
  41bc1f:	mov    eax,0x50f8b5ac
  41bc24:	test   al,0x5c
  41bc26:	xchg   esp,eax
  41bc27:	sti    
  41bc28:	rol    DWORD PTR [ecx+ecx*2-0x4b0435b9],cl
  41bc2f:	add    eax,0xdee54183
  41bc34:	push   ss
  41bc35:	mov    al,0x20
  41bc37:	add    dl,BYTE PTR [edi-0x39]
  41bc3a:	or     BYTE PTR [ebp-0x5904d267],bl
  41bc40:	push   ebx
  41bc41:	mov    ebx,DWORD PTR [edi-0x53a30fb7]
  41bc47:	lea    edx,[ebx+ebp*1]
  41bc4a:	inc    ebx
  41bc4b:	mov    dh,0xd2
  41bc4d:	ds xchg ebx,eax
  41bc4f:	dec    ecx
  41bc50:	push   ds
  41bc51:	clts   
  41bc53:	jle    0x41bc9d
  41bc55:	add    BYTE PTR [esi],ah
  41bc57:	push   edx
  41bc58:	aam    0xa3
  41bc5a:	lods   eax,DWORD PTR ds:[esi]
  41bc5b:	imul   ebp,DWORD PTR [esi-0x60],0xffffffc0
  41bc5f:	adc    dl,dh
  41bc61:	sti    
  41bc62:	shr    DWORD PTR [edx+0x34],cl
  41bc65:	loope  0x41bc5b
  41bc67:	inc    ecx
  41bc68:	call   FWORD PTR [ebx]
  41bc6a:	dec    eax
  41bc6b:	pop    edi
  41bc6c:	push   esp
  41bc6d:	add    esi,ecx
  41bc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc70:	mov    ds:0x8a29f048,eax
  41bc75:	and    dh,BYTE PTR [ebp-0x7d]
  41bc78:	addr16 xchg edx,eax
  41bc7a:	jo     0x41bcc5
  41bc7c:	mov    WORD PTR [edx-0x3c833da3],fs
  41bc82:	shr    BYTE PTR [eax+0x3eea83f2],1
  41bc88:	jns    0x41bcc7
  41bc8a:	iret   
  41bc8b:	loop   0x41bced
  41bc8d:	dec    ebp
  41bc8e:	arpl   dx,si
  41bc90:	(bad)
  41bc95:	mov    bh,0x4d
  41bc97:	or     eax,0xbf41c2fd
  41bc9c:	jl     0x41bc50
  41bc9e:	dec    eax
  41bc9f:	push   esp
  41bca0:	(bad)  
  41bca1:	xchg   edi,eax
  41bca2:	mov    gs:0x441e73ad,eax
  41bca8:	xor    eax,0x65d3382f
  41bcad:	push   edx
  41bcae:	mov    dl,0x1a
  41bcb0:	mov    ah,0x7a
  41bcb2:	adc    al,0x7d
  41bcb4:	aas    
  41bcb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb6:	out    dx,al
  41bcb7:	loop   0x41bcb5
  41bcb9:	jbe    0x41bd17
  41bcbb:	push   edi
  41bcbc:	loop   0x41bd37
  41bcbe:	pop    esp
  41bcbf:	call   0x7a6299f6
  41bcc4:	pushf  
  41bcc5:	out    dx,eax
  41bcc6:	aas    
  41bcc7:	inc    eax
  41bcc8:	sbb    BYTE PTR [edi+0x34],bl
  41bccb:	aad    0x59
  41bccd:	mov    cs,WORD PTR [ebx-0x15c8b6e]
  41bcd3:	mov    edi,0x1ccf12af
  41bcd8:	lods   al,BYTE PTR ds:[esi]
  41bcd9:	imul   edi,eax,0xe2f24410
  41bcdf:	aam    0xfe
  41bce1:	ja     0x41bd61
  41bce3:	xchg   edx,eax
  41bce4:	inc    esi
  41bce5:	sub    DWORD PTR [ecx+0x5f],esi
  41bce8:	pop    edi
  41bce9:	stos   DWORD PTR es:[edi],eax
  41bcea:	jle    0x41bcfa
  41bcec:	add    bh,BYTE PTR [ebx-0x15]
  41bcef:	mov    esp,0xc5d3e821
  41bcf4:	xor    BYTE PTR [ecx+0x857ab5],0xab
  41bcfb:	xchg   esi,eax
  41bcfc:	jno    0x41bcf8
  41bcfe:	cmp    al,0x18
  41bd00:	out    0x31,eax
  41bd02:	in     eax,0x49
  41bd04:	sub    dh,BYTE PTR cs:[ebp-0x41]
  41bd08:	add    ebx,ecx
  41bd0a:	pop    eax
  41bd0b:	imul   esi,DWORD PTR [ebx-0x1e],0xde763352
  41bd12:	adc    al,0x3a
  41bd14:	or     BYTE PTR [eax+edx*1+0x7e36962b],0xa9
  41bd1c:	cmovns edx,DWORD PTR [ecx]
  41bd1f:	cdq    
  41bd20:	xor    esp,esi
  41bd22:	mov    eax,0x83f6a23d
  41bd27:	sub    DWORD PTR [edi],0x813a9915
  41bd2d:	mov    bh,0x1f
  41bd2f:	js     0x41bd7b
  41bd31:	mov    dl,cl
  41bd33:	mov    esp,DWORD PTR [ebx-0x64]
  41bd36:	fiadd  WORD PTR [esi+eiz*2+0x2f]
  41bd3a:	rcr    DWORD PTR [ecx-0x6a],0x3c
  41bd3e:	sbb    BYTE PTR [ebp-0x24],0x38
  41bd42:	jge    0x41bd30
  41bd44:	adc    cl,BYTE PTR [ebp+eax*8+0x31]
  41bd48:	xchg   esi,eax
  41bd49:	jg     0x41bdb9
  41bd4b:	xchg   ecx,eax
  41bd4c:	push   edi
  41bd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd4e:	xor    DWORD PTR [esi],ebp
  41bd50:	mov    ecx,DWORD PTR [edx-0x27574779]
  41bd56:	repnz or bl,BYTE PTR [ebx+0x13c772e0]
  41bd5d:	sub    al,0xbc
  41bd5f:	jge    0x41bd6c
  41bd61:	shr    DWORD PTR [esi-0x35],1
  41bd64:	ins    BYTE PTR es:[edi],dx
  41bd65:	ins    BYTE PTR es:[edi],dx
  41bd66:	fmul   QWORD PTR [ecx-0x2afbcae5]
  41bd6c:	lahf   
  41bd6d:	inc    edi
  41bd6e:	push   eax
  41bd6f:	sahf   
  41bd70:	fild   WORD PTR [edi+0x3b]
  41bd73:	mov    edi,0x82c239ee
  41bd78:	(bad)  
  41bd79:	mov    dh,0xfb
  41bd7b:	push   esp
  41bd7c:	xchg   ebp,eax
  41bd7d:	(bad)  [ecx]
  41bd7f:	push   esp
  41bd80:	sub    BYTE PTR [edi-0x65],bl
  41bd83:	or     DWORD PTR [ecx+0x64],ebx
  41bd86:	retf   
  41bd87:	push   ss
  41bd88:	fcmove st,st(3)
  41bd8a:	pop    es
  41bd8b:	dec    eax
  41bd8c:	call   0xbf6d:0x8600b97
  41bd93:	stos   BYTE PTR es:[edi],al
  41bd94:	push   edx
  41bd95:	jb     0x41bd6e
  41bd97:	and    BYTE PTR [ebx-0x80],cl
  41bd9a:	test   DWORD PTR [esi-0x4e444c34],0x99b1569f
  41bda4:	(bad)  
  41bda6:	cwde   
  41bda7:	xor    edx,DWORD PTR [ebp+0x2584187c]
  41bdad:	jmp    0x41be0f
  41bdaf:	cs dec eax
  41bdb1:	sbb    bh,BYTE PTR [esp+edi*8+0x7345be61]
  41bdb8:	inc    eax
  41bdb9:	inc    esp
  41bdba:	xchg   ebp,eax
  41bdbb:	jbe    0x41bd5f
  41bdbd:	(bad)  
  41bdbf:	scas   al,BYTE PTR es:[edi]
  41bdc0:	ja     0x41bda0
  41bdc2:	push   eax
  41bdc3:	add    al,0xc5
  41bdc5:	retf   0x7996
  41bdc8:	ds mov dl,0x1
  41bdcb:	mov    ebx,0x15968abc
  41bdd0:	push   edx
  41bdd1:	(bad)  
  41bdd2:	(bad)  
  41bdd3:	pop    edx
  41bdd4:	jne    0x41bda2
  41bdd6:	cwde   
  41bdd7:	js     0x41bdd0
  41bdd9:	pop    ebp
  41bdda:	jne    0x41be32
  41bddc:	ins    BYTE PTR es:[edi],dx
  41bddd:	push   ds
  41bdde:	inc    esp
  41bddf:	in     eax,0x95
  41bde1:	test   al,0xe0
  41bde3:	(bad)  
  41bde4:	scas   eax,DWORD PTR es:[edi]
  41bde5:	test   DWORD PTR [ecx],esi
  41bde7:	retf   
  41bde8:	bound  esp,QWORD PTR [esi+0x1f]
  41bdeb:	mov    bh,0x5
  41bded:	sbb    dh,al
  41bdef:	mov    al,0x3f
  41bdf1:	jmp    0x9935:0x8ec62b9e
  41bdf8:	or     bl,BYTE PTR [ebp+0x542a2d6f]
  41bdfe:	aaa    
  41bdff:	shl    ebp,cl
  41be01:	dec    eax
  41be02:	outs   dx,DWORD PTR ds:[esi]
  41be03:	test   DWORD PTR [ecx+0x69],ecx
  41be06:	push   0x1d
  41be08:	sahf   
  41be09:	neg    BYTE PTR [ecx]
  41be0b:	mov    BYTE PTR [ebx+0x77fde316],ah
  41be11:	or     dl,BYTE PTR [ecx+0x3b]
  41be14:	gs cli 
  41be16:	sub    al,0x4
  41be18:	stos   BYTE PTR es:[edi],al
  41be19:	mov    esi,0x4352eac4
  41be1e:	sahf   
  41be1f:	lds    eax,FWORD PTR [eax]
  41be21:	ret    
  41be22:	stc    
  41be23:	fcomp  st(5)
  41be25:	dec    edi
  41be26:	les    ebx,FWORD PTR [edx+0x11add62f]
  41be2c:	mov    dh,0x12
  41be2e:	jae    0x41bdcb
  41be30:	out    0xfd,eax
  41be32:	mov    eax,DWORD PTR [eax+0x1443e7fa]
  41be38:	int    0x4a
  41be3a:	pop    esp
  41be3b:	frstor [ecx+0x2fa12abc]
  41be41:	lock imul ebp,edx,0xffffff85
  41be45:	jns    0x41be41
  41be47:	mov    edi,edx
  41be49:	jmp    0x41be2a
  41be4b:	enter  0xdc1b,0x2a
  41be4f:	jmp    0x41be39
  41be51:	mov    dl,cl
  41be53:	aam    0x2d
  41be55:	mov    ah,0xdc
  41be57:	test   eax,0xd51ef224
  41be5c:	push   ds
  41be5d:	js     0x41be10
  41be5f:	jne    0x41be09
  41be61:	xchg   ch,dl
  41be63:	jne    0x41be9f
  41be65:	hlt    
  41be66:	aas    
  41be67:	icebp  
  41be68:	rol    DWORD PTR [edx-0x5f],1
  41be6b:	push   ecx
  41be6c:	dec    esi
  41be6d:	xchg   ebx,eax
  41be6e:	jb     0x41be79
  41be70:	idiv   BYTE PTR [ebx+0x18a95fe3]
  41be76:	pop    ecx
  41be77:	adc    al,0x3
  41be79:	pop    esi
  41be7a:	leave  
  41be7b:	ja     0x41be17
  41be7d:	clc    
  41be7e:	popa   
  41be7f:	xor    al,0xf1
  41be81:	mov    esp,0x543ba5b1
  41be86:	inc    edx
  41be87:	fwait
  41be88:	mov    edi,0xe3bdc049
  41be8d:	inc    edx
  41be8e:	popf   
  41be8f:	xor    DWORD PTR [edi+0x60c1b48b],edi
  41be95:	push   ds
  41be96:	jae    0x41bf00
  41be98:	xor    DWORD PTR [ecx+0x312b0fdb],0x68eb2c0a
  41bea2:	add    DWORD PTR fs:[edx-0x48],edi
  41bea6:	sti    
  41bea7:	stos   DWORD PTR es:[edi],eax
  41bea8:	cmp    eax,0xfd0de474
  41bead:	mov    ecx,0x9ed18377
  41beb2:	cli    
  41beb3:	cmp    DWORD PTR [edi+0x56],esi
  41beb6:	scas   al,BYTE PTR es:[edi]
  41beb7:	loop   0x41be8c
  41beb9:	add    esp,esi
  41bebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bebc:	push   ss
  41bebd:	push   ecx
  41bebe:	ret    
  41bebf:	test   al,0x79
  41bec1:	jb     0x41bef5
  41bec3:	sbb    ecx,DWORD PTR [ebx-0x4b]
  41bec6:	xor    BYTE PTR [edi-0x6f42dd46],cl
  41becc:	mov    bh,0xd5
  41bece:	fst    QWORD PTR [edi+0x32]
  41bed1:	cmp    eax,DWORD PTR [edi+esi*8+0x67]
  41bed5:	mov    ebx,ss
  41bed7:	pusha  
  41bed8:	or     eax,0xbd8796cd
  41bedd:	out    0x18,eax
  41bedf:	mov    DWORD PTR [ebx+0x1d287e91],eax
  41bee5:	pop    ecx
  41bee6:	push   ecx
  41bee7:	shl    DWORD PTR [ebp+0x7d],1
  41beea:	xchg   ecx,eax
  41beeb:	sbb    BYTE PTR [edx-0x7f9d7a50],bh
  41bef1:	add    BYTE PTR [esi],0x14
  41bef4:	mov    ebx,0x342ebeaf
  41bef9:	pop    es
  41befa:	mov    cl,0xa
  41befc:	xor    DWORD PTR [ecx-0xf],esp
  41beff:	cmp    DWORD PTR [ebp+0x24ff26a],ebp
  41bf05:	and    eax,0xa6fdb5b9
  41bf0a:	lahf   
  41bf0b:	xchg   edi,eax
  41bf0c:	jno    0x41bed1
  41bf0e:	(bad)  
  41bf0f:	in     eax,dx
  41bf10:	neg    esi
  41bf12:	imul   esi,DWORD PTR [eax+0x22],0xffffff93
  41bf16:	and    BYTE PTR [edi+0x5c],bl
  41bf19:	popa   
  41bf1a:	pop    es
  41bf1b:	mov    DWORD PTR [esi-0x14dec2aa],edi
  41bf21:	push   edx
  41bf22:	mov    DWORD PTR [eax-0x55c318f2],0x749f36c8
  41bf2c:	iret   
  41bf2d:	mov    ebx,0x4e306612
  41bf32:	jge    0x41bf7d
  41bf34:	push   edx
  41bf35:	pop    esi
  41bf36:	popa   
  41bf37:	sub    BYTE PTR [esi+0x7d9c846c],cl
  41bf3d:	clc    
  41bf3e:	das    
  41bf3f:	mov    eax,ds:0x9b9c3731
  41bf44:	and    DWORD PTR [edx],edi
  41bf46:	sub    eax,DWORD PTR [ecx+0x391a4ca1]
  41bf4c:	adc    bl,BYTE PTR [eax]
  41bf4e:	enter  0xa2b5,0x9a
  41bf52:	enter  0x7710,0x65
  41bf56:	adc    ebx,DWORD PTR [eax]
  41bf58:	pop    ss
  41bf59:	xchg   ebp,eax
  41bf5a:	push   edi
  41bf5b:	out    0x8c,eax
  41bf5d:	lods   eax,DWORD PTR ds:[esi]
  41bf5e:	and    al,cl
  41bf60:	loope  0x41bf84
  41bf62:	xchg   edi,eax
  41bf63:	dec    edi
  41bf64:	jmp    0xaa82593
  41bf69:	dec    esp
  41bf6a:	jecxz  0x41bf91
  41bf6c:	fnsetpm(287 only) 
  41bf6e:	icebp  
  41bf6f:	dec    eax
  41bf70:	sbb    eax,0x215c2d27
  41bf75:	or     BYTE PTR [eax],al
  41bf77:	dec    ebp
  41bf78:	ja     0x41bf1d
  41bf7a:	push   esp
  41bf7b:	push   esi
  41bf7c:	mov    ebp,0xf7a51171
  41bf81:	addr16 inc sp
  41bf84:	loopne 0x41bff3
  41bf86:	(bad)  
  41bf88:	aam    0x46
  41bf8a:	ficomp DWORD PTR [ebx]
  41bf8c:	ds adc dl,dl
  41bf8f:	mov    ecx,0x84d7dfb5
  41bf94:	pusha  
  41bf95:	call   0xc349:0x9451ea91
  41bf9c:	sti    
  41bf9d:	(bad)  
  41bf9e:	push   edi
  41bf9f:	cli    
  41bfa0:	jmp    0x746795f3
  41bfa5:	push   es
  41bfa6:	cmc    
  41bfa7:	lods   al,BYTE PTR ds:[esi]
  41bfa8:	in     al,0x33
  41bfaa:	rcr    BYTE PTR [esi+ebx*1],cl
  41bfad:	xor    al,0x57
  41bfaf:	xor    al,0xd
  41bfb1:	sbb    ch,cl
  41bfb3:	ins    DWORD PTR es:[edi],dx
  41bfb4:	jb     0x41bf64
  41bfb6:	mov    cl,0xc3
  41bfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb9:	std    
  41bfba:	jbe    0x41bf70
  41bfbc:	ror    ebx,cl
  41bfbe:	(bad)  
  41bfbf:	pusha  
  41bfc0:	and    ecx,ecx
  41bfc2:	xchg   edi,eax
  41bfc3:	sbb    dl,BYTE PTR [eax-0x549ee24]
  41bfc9:	or     eax,0x63e29002
  41bfce:	aam    0xdd
  41bfd0:	div    DWORD PTR [edi-0x79fe5711]
  41bfd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd7:	cs jbe 0x41bfd6
  41bfda:	in     eax,0x36
  41bfdc:	int3   
  41bfdd:	aad    0xa2
  41bfdf:	mov    ecx,0xdcfe6b94
  41bfe4:	outs   dx,BYTE PTR ss:[esi]
  41bfe6:	bound  ecx,QWORD PTR [eax]
  41bfe8:	out    dx,al
  41bfe9:	and    al,0x81
  41bfeb:	sub    DWORD PTR [esi+0x3b],ebp
  41bfee:	or     DWORD PTR [edi],edx
  41bff0:	mov    bh,0xad
  41bff2:	mov    edi,0x56aa72ef
  41bff7:	dec    ecx
  41bff8:	jne    0x41c059
  41bffa:	xor    eax,DWORD PTR [eax+edi*8]
  41bffd:	fsub   st,st(4)
  41bfff:	cmp    dl,cl
  41c001:	push   eax
  41c002:	jmp    0x41c007
  41c004:	push   esp
  41c005:	xchg   esp,eax
  41c006:	and    DWORD PTR [ebx+0x4e2ea7d2],esi
  41c00c:	push   ds
  41c00d:	aaa    
  41c00e:	xlat   BYTE PTR ds:[ebx]
  41c00f:	icebp  
  41c010:	retf   0xa9ba
  41c013:	xchg   ebx,eax
  41c014:	push   cs
  41c015:	loopne 0x41bfbe
  41c017:	mov    al,ds:0x90856fe1
  41c01c:	cwde   
  41c01d:	mov    es,eax
  41c01f:	push   edx
  41c020:	stos   DWORD PTR es:[edi],eax
  41c021:	or     al,ch
  41c023:	in     al,dx
  41c024:	pop    ebx
  41c025:	mov    ebp,0xe241a268
  41c02a:	push   ecx
  41c02b:	push   edx
  41c02c:	sahf   
  41c02d:	add    bl,BYTE PTR [edx+0x220d0d41]
  41c033:	xchg   BYTE PTR fs:[edx+0x6b],ch
  41c037:	stos   BYTE PTR es:[edi],al
  41c038:	test   eax,0x9a2d0bab
  41c03d:	std    
  41c03e:	and    ebp,DWORD PTR [ecx-0x2088aec9]
  41c044:	and    al,0x9e
  41c046:	mov    esi,0x160dbbfd
  41c04b:	jo     0x41bfd5
  41c04d:	xor    DWORD PTR [ecx-0x13c4c0fa],esi
  41c053:	mov    ebp,0xfee80332
  41c058:	ins    DWORD PTR es:[edi],dx
  41c059:	dec    edx
  41c05a:	mov    dl,0x91
  41c05c:	adc    edx,DWORD PTR [ebp-0x78cf5358]
  41c062:	test   DWORD PTR [esi+0x659b09c2],edx
  41c068:	ja     0x41c0e4
  41c06a:	sub    ebx,DWORD PTR [eax+eax*8+0x254f0213]
  41c071:	bound  ebx,QWORD PTR [edi+0x74]
  41c074:	fisubr DWORD PTR [edx+0x7513a492]
  41c07a:	xor    al,0xeb
  41c07c:	adc    eax,0xd4724353
  41c081:	rcr    dh,1
  41c083:	mov    esi,0x77c40c87
  41c088:	push   0x3683d2b6
  41c08d:	sbb    ch,BYTE PTR [ecx-0x2a]
  41c090:	sub    eax,0x403c1d4c
  41c095:	add    DWORD PTR [eax-0x6a626fc2],edi
  41c09b:	fld    TBYTE PTR [ecx]
  41c09d:	add    edi,DWORD PTR [ecx-0x45087d96]
  41c0a3:	lods   eax,DWORD PTR ds:[esi]
  41c0a4:	mov    esp,0x51385a5b
  41c0a9:	mov    ds:0x63b3750d,eax
  41c0ae:	xor    dh,ah
  41c0b0:	mov    ecx,0xc75996da
  41c0b5:	dec    edx
  41c0b6:	dec    edi
  41c0b7:	adc    ebp,DWORD PTR [ebx-0x6]
  41c0ba:	add    eax,0x2b1599db
  41c0bf:	sahf   
  41c0c0:	ins    BYTE PTR es:[edi],dx
  41c0c1:	les    ecx,FWORD PTR [edi+0x55b30af4]
  41c0c7:	jg     0x41c143
  41c0c9:	(bad)  
  41c0ca:	fdivr  DWORD PTR [esi-0x2d]
  41c0cd:	push   cs
  41c0ce:	std    
  41c0cf:	pusha  
  41c0d0:	out    0x75,al
  41c0d2:	mov    ds:0x88a3d93d,eax
  41c0d7:	stos   DWORD PTR es:[edi],eax
  41c0d8:	lock mov al,0xd2
  41c0db:	addr16 fcom st(3)
  41c0de:	dec    esp
  41c0df:	ret    
  41c0e0:	dec    esi
  41c0e1:	push   ss
  41c0e2:	and    DWORD PTR [eax-0x3121bff6],edx
  41c0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e9:	ret    0xc4d1
  41c0ec:	push   0x5653ed6f
  41c0f1:	lds    ecx,FWORD PTR [ebx+ebx*2]
  41c0f4:	and    DWORD PTR [eax],0xffffffbc
  41c0f7:	cmp    eax,0xd222e7a8
  41c0fc:	into   
  41c0fd:	stos   DWORD PTR es:[edi],eax
  41c0fe:	fcom   st(7)
  41c100:	sub    ah,dh
  41c102:	jl     0x41c134
  41c104:	push   esi
  41c105:	and    ch,dh
  41c107:	ror    DWORD PTR [edx+0x1d],cl
  41c10a:	pop    esp
  41c10b:	pop    esp
  41c10c:	(bad)  
  41c10d:	maxps  xmm0,XMMWORD PTR [eax+0xce8fb7f]
  41c114:	test   DWORD PTR [ebx],0x4d815c07
  41c11a:	int3   
  41c11b:	scas   al,BYTE PTR es:[edi]
  41c11c:	add    bl,ah
  41c11e:	mov    eax,0xc4b47b5b
  41c123:	lock sahf 
  41c125:	ins    DWORD PTR es:[edi],dx
  41c126:	xor    DWORD PTR [ebx+0x63],0x75
  41c12a:	repz dec ebp
  41c12c:	ds jg  0x41c19a
  41c12f:	adc    DWORD PTR [edx-0x11b09989],0x21
  41c136:	ins    DWORD PTR es:[edi],dx
  41c137:	dec    ebx
  41c138:	(bad)  
  41c139:	cld    
  41c13a:	adc    BYTE PTR [esi+0x7e7ff436],ch
  41c140:	loope  0x41c0e4
  41c142:	into   
  41c143:	cmp    bh,ch
  41c145:	nop
  41c146:	test   BYTE PTR [edx-0x3a],bl
  41c149:	fistp  QWORD PTR [edi+0x194689ce]
  41c14f:	sbb    al,0xf9
  41c151:	adc    BYTE PTR [edi-0x8],dl
  41c154:	xor    eax,0x961d62d8
  41c159:	add    eax,0x60d4c2c
  41c15e:	mov    DWORD PTR [ebp-0xf358ae3],0x4c9b21de
  41c168:	jmp    0x41c120
  41c16a:	adc    al,0xce
  41c16c:	adc    esi,DWORD PTR [ebx-0x14]
  41c16f:	call   0x41b5:0x923a620d
  41c176:	dec    ecx
  41c177:	sub    BYTE PTR [edi+0x40],0x12
  41c17b:	mov    al,ds:0x5e48b73a
  41c180:	mov    esp,0x2922d029
  41c185:	pusha  
  41c186:	jno    0x41c184
  41c188:	pop    ecx
  41c189:	cmp    al,0xf9
  41c18b:	loop   0x41c173
  41c18d:	mov    ?,WORD PTR [esi+0x48df7486]
  41c193:	sahf   
  41c194:	xchg   ebp,eax
  41c195:	fmul   QWORD PTR [ecx-0x6a977866]
  41c19b:	ins    BYTE PTR es:[edi],dx
  41c19c:	pop    esi
  41c19d:	and    DWORD PTR [eax],ebp
  41c19f:	(bad)  
  41c1a0:	jmp    0x1bd:0x1d48ffd9
  41c1a7:	cwde   
  41c1a8:	hlt    
  41c1a9:	icebp  
  41c1aa:	lods   eax,DWORD PTR ds:[esi]
  41c1ab:	pusha  
  41c1ac:	push   edi
  41c1ad:	push   ebx
  41c1ae:	ret    0x81b8
  41c1b1:	push   ds
  41c1b2:	mov    ebx,0x7e6b64d9
  41c1b7:	mov    ds:0x585bfb25,al
  41c1bc:	push   cs
  41c1bd:	mov    edi,0x8c45da7c
  41c1c2:	push   esi
  41c1c3:	inc    esi
  41c1c4:	dec    esi
  41c1c5:	loop   0x41c1d8
  41c1c7:	cld    
  41c1c8:	repz and ax,0x3981
  41c1cd:	lahf   
  41c1ce:	sbb    al,0x92
  41c1d0:	jge    0x41c21a
  41c1d2:	push   0x4befb4f7
  41c1d7:	int    0x8a
  41c1d9:	stos   DWORD PTR es:[edi],eax
  41c1da:	xchg   ecx,eax
  41c1db:	jecxz  0x41c18e
  41c1dd:	lahf   
  41c1de:	mov    ds:0x9a6b32db,eax
  41c1e3:	loop   0x41c1ef
  41c1e5:	clc    
  41c1e6:	sbb    ah,BYTE PTR [edi]
  41c1e8:	pop    ds
  41c1e9:	neg    ebp
  41c1eb:	cmp    BYTE PTR [ecx],ah
  41c1ed:	icebp  
  41c1ee:	lahf   
  41c1ef:	scas   al,BYTE PTR es:[edi]
  41c1f0:	xor    DWORD PTR [esi],edx
  41c1f2:	xchg   DWORD PTR [ebx-0x9],edx
  41c1f5:	retf   
  41c1f6:	xchg   ebp,eax
  41c1f7:	mov    ds:0xcc4b08b5,eax
  41c1fc:	or     ch,dh
  41c1fe:	ret    
  41c1ff:	test   DWORD PTR [ecx-0x21],eax
  41c202:	test   al,0xb7
  41c204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c205:	es aas 
  41c207:	xchg   esp,eax
  41c209:	rol    edx,1
  41c20b:	inc    edx
  41c20c:	shl    BYTE PTR ds:0x1a21dc80,cl
  41c212:	addr16 xchg edx,eax
  41c214:	lock fcom QWORD PTR [ebx]
  41c217:	or     eax,DWORD PTR [edx]
  41c219:	push   ss
  41c21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c21b:	sbb    DWORD PTR [ecx],ecx
  41c21d:	and    edx,DWORD PTR [ecx+0x10]
  41c220:	rcl    DWORD PTR [esi-0x5f239a13],cl
  41c226:	call   0xd617:0xf44aa803
  41c22d:	in     al,dx
  41c22e:	imul   edi,esp,0x32
  41c231:	mov    edi,DWORD PTR [ebx+edi*1-0x5f5f399d]
  41c238:	icebp  
  41c239:	ret    0xc681
  41c23c:	jg     0x41c1d1
  41c23e:	inc    esp
  41c23f:	pop    es
  41c240:	mov    eax,0x8a233392
  41c245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c246:	arpl   WORD PTR [ebp+0x10],cx
  41c249:	push   esp
  41c24a:	test   DWORD PTR [esi+0x5f8965f0],eax
  41c250:	sbb    al,0xd
  41c252:	in     eax,dx
  41c253:	rdmsr  
  41c255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c256:	add    DWORD PTR [edi],edx
  41c258:	mov    WORD PTR [ebp+eiz*2+0x343ecb8d],fs
  41c25f:	cmc    
  41c260:	(bad)  
  41c261:	retf   0x61c4
  41c264:	push   es
  41c265:	fwait
  41c266:	inc    edx
  41c267:	daa    
  41c268:	xchg   DWORD PTR [eax-0x34],ebx
  41c26b:	mov    ds:0x203d8e18,al
  41c270:	fprem  
  41c272:	data16 mov bl,0xd
  41c275:	mov    edi,ebp
  41c277:	inc    ebx
  41c278:	pop    edx
  41c279:	pop    eax
  41c27a:	add    DWORD PTR [ecx-0x4ec25b98],ecx
  41c280:	or     DWORD PTR ds:0x17a887dd,edx
  41c286:	jae    0x41c25d
  41c288:	dec    ecx
  41c289:	pop    ss
  41c28a:	arpl   WORD PTR [esi+0x148b6bed],bx
  41c290:	push   0x27
  41c292:	into   
  41c293:	pushf  
  41c294:	push   ecx
  41c295:	adc    al,0x3c
  41c297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c298:	add    DWORD PTR [eax],0x20572206
  41c29e:	jnp    0x41c2af
  41c2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a1:	push   ss
  41c2a2:	xor    al,0x6e
  41c2a4:	stos   DWORD PTR es:[edi],eax
  41c2a5:	xor    bh,BYTE PTR [eax-0x7f]
  41c2a8:	fiadd  WORD PTR [ebp+0x7f47af86]
  41c2ae:	fs dec edx
  41c2b0:	pop    ss
  41c2b1:	add    al,0x48
  41c2b3:	add    dh,BYTE PTR [ebx-0x5c]
  41c2b6:	cmp    dl,0x48
  41c2b9:	cmp    al,0xa6
  41c2bb:	adc    bh,ah
  41c2bd:	test   bh,dh
  41c2bf:	push   eax
  41c2c0:	in     eax,dx
  41c2c1:	mov    dh,0xfd
  41c2c3:	mov    BYTE PTR [ebx-0x19],dh
  41c2c6:	or     al,0x73
  41c2c8:	fidiv  DWORD PTR [ebx]
  41c2ca:	add    BYTE PTR [edx+0x5],ch
  41c2cd:	mov    edi,0xe9532f05
  41c2d2:	in     al,0xb0
  41c2d4:	sub    edi,DWORD PTR [edx-0x7b]
  41c2d7:	push   edi
  41c2d8:	out    dx,eax
  41c2d9:	add    BYTE PTR [eax],cl
  41c2db:	lods   eax,DWORD PTR ds:[esi]
  41c2dc:	out    0xa8,al
  41c2de:	call   0x51f:0xef0fc232
  41c2e5:	xor    dl,al
  41c2e7:	imul   BYTE PTR [ecx-0xf1294e2]
  41c2ed:	stos   DWORD PTR es:[edi],eax
  41c2ee:	(bad)  
  41c2ef:	out    dx,al
  41c2f0:	xchg   ecx,eax
  41c2f1:	xor    ecx,DWORD PTR es:[ecx]
  41c2f4:	and    DWORD PTR [ebp-0x79],0x4d
  41c2f8:	scas   eax,DWORD PTR es:[edi]
  41c2f9:	sub    eax,0xca9fabdb
  41c2fe:	cmp    DWORD PTR [ecx],0xffffff93
  41c301:	sub    cl,BYTE PTR [edi+eiz*2-0x3f4c655]
  41c308:	int    0x7e
  41c30a:	fidivr WORD PTR [esi+ecx*2-0x3adbe740]
  41c311:	sbb    eax,0x92d019af
  41c316:	sahf   
  41c317:	pop    ds
  41c318:	mov    WORD PTR [ebx+ebx*2+0x6],?
  41c31c:	mov    cl,ah
  41c31e:	and    esi,edx
  41c320:	hlt    
  41c321:	dec    esi
  41c322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c323:	xchg   al,bl
  41c325:	cmp    BYTE PTR [eax-0x70723b5c],bl
  41c32b:	adc    eax,0xec69ab6
  41c330:	iret   
  41c331:	pop    ss
  41c332:	dec    edx
  41c333:	je     0x41c321
  41c335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c336:	or     al,bh
  41c338:	fadd   st,st(6)
  41c33a:	idiv   BYTE PTR [ebx-0x23]
  41c33d:	fs stos BYTE PTR es:[edi],al
  41c33f:	enter  0x3396,0x2d
  41c343:	mov    dl,BYTE PTR [esp+ecx*8]
  41c346:	inc    eax
  41c347:	sbb    esi,eax
  41c349:	setg   BYTE PTR [edx]
  41c34c:	outs   dx,BYTE PTR ds:[esi]
  41c34d:	sub    al,BYTE PTR [ebp+0x1190a26f]
  41c353:	inc    edx
  41c354:	and    DWORD PTR [edx+0x234eea02],ecx
  41c35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c35b:	(bad)  
  41c35c:	mov    cl,0x79
  41c35e:	stos   DWORD PTR es:[edi],eax
  41c35f:	loope  0x41c3c0
  41c361:	add    eax,0xa1b04b24
  41c366:	cdq    
  41c367:	cmp    edi,ebp
  41c369:	push   ebp
  41c36a:	push   cs
  41c36b:	ins    BYTE PTR es:[edi],dx
  41c36c:	(bad)  
  41c36e:	add    ecx,esp
  41c370:	mov    ds:0x1364d9b6,eax
  41c375:	add    ecx,DWORD PTR [esi]
  41c377:	je     0x41c34e
  41c379:	repz jge 0x41c3b8
  41c37c:	imul   esi,DWORD PTR [esi+0x6b9c8f10],0x67
  41c383:	mov    dl,0x66
  41c385:	ja     0x41c38f
  41c387:	pop    esp
  41c388:	pop    ebx
  41c389:	mov    ebx,0x504ce90a
  41c38e:	call   0xb611:0xdfa01f27
  41c395:	cdq    
  41c396:	mov    ds:0x3061f1b3,eax
  41c39b:	mov    DWORD PTR [eax-0x59a8aa88],ebp
  41c3a1:	mov    ah,0x87
  41c3a3:	sbb    BYTE PTR [eax],bh
  41c3a5:	jo     0x41c3ac
  41c3a7:	jmp    0x41c366
  41c3a9:	ins    DWORD PTR es:[edi],dx
  41c3aa:	xor    ah,ch
  41c3ac:	sbb    eax,0xf708a133
  41c3b1:	imul   ebp,DWORD PTR [eax],0x825fd202
  41c3b7:	or     edi,esi
  41c3b9:	mov    eax,ds:0x41c1035f
  41c3be:	xor    eax,0xb7312e1f
  41c3c3:	cmc    
  41c3c4:	sub    DWORD PTR [ecx+0x183dfa8],ebp
  41c3ca:	jp     0x41c367
  41c3cc:	addr16 cli 
  41c3ce:	shr    DWORD PTR [ebx+0x55],cl
  41c3d1:	xchg   edi,eax
  41c3d2:	sbb    BYTE PTR [edx-0x28ecc38a],dh
  41c3d8:	fwait
  41c3d9:	out    0xb8,eax
  41c3db:	out    0x3e,eax
  41c3dd:	scas   eax,DWORD PTR es:[edi]
  41c3de:	jl     0x41c424
  41c3e0:	mov    ebp,0x65e3c079
  41c3e5:	jmp    0x41c426
  41c3e7:	mov    ebp,DWORD PTR [eax+0x56]
  41c3ea:	dec    edi
  41c3eb:	sub    eax,0x4fcec91e
  41c3f0:	cli    
  41c3f1:	push   0x59
  41c3f3:	dec    ecx
  41c3f4:	shl    BYTE PTR [eax-0x2f],1
  41c3f7:	sub    edx,ebx
  41c3f9:	pop    eax
  41c3fa:	sbb    bh,BYTE PTR [eax-0x6e]
  41c3fd:	mov    bh,0xaf
  41c3ff:	fidivr WORD PTR [eax+0x7a]
  41c402:	mov    esi,DWORD PTR [ecx+esi*4+0x31]
  41c406:	leave  
  41c407:	jmp    0x41c444
  41c409:	add    bl,BYTE PTR [ebx]
  41c40b:	sub    eax,0x26b3cc9c
  41c410:	mov    dl,0x1f
  41c412:	cmp    edx,edi
  41c414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c415:	push   0x83209663
  41c41a:	inc    ebx
  41c41b:	mov    eax,ds:0x2957e929
  41c420:	mov    bh,BYTE PTR [edx+esi*8]
  41c423:	pop    DWORD PTR [esi-0x4bdae2ef]
  41c429:	sti    
  41c42a:	(bad)  
  41c42b:	in     al,0x80
  41c42d:	add    dl,BYTE PTR [edi]
  41c42f:	pop    es
  41c430:	repnz pop ss
  41c432:	aad    0xd7
  41c434:	or     dl,BYTE PTR [edx-0x7f68f586]
  41c43a:	dec    ebx
  41c43b:	adc    cl,BYTE PTR [ebx+edx*2-0x52]
  41c43f:	mov    eax,0x4994a839
  41c444:	jp     0x41c45f
  41c446:	hlt    
  41c447:	add    BYTE PTR [eax-0x55],0x60
  41c44b:	arpl   bp,dx
  41c44d:	adc    BYTE PTR [ecx-0x37],dl
  41c450:	and    eax,0x315a90ac
  41c455:	(bad)  
  41c456:	retf   
  41c457:	clc    
  41c458:	ins    DWORD PTR es:[edi],dx
  41c459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c45a:	cli    
  41c45b:	repnz test DWORD PTR [eax],edx
  41c45e:	retf   
  41c45f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c461:	push   0x5b
  41c463:	xor    al,0x9e
  41c465:	fwait
  41c466:	in     al,dx
  41c467:	dec    edx
  41c468:	mov    esi,0x6be3fd50
  41c46d:	mov    ebx,0xa88640f5
  41c472:	push   esi
  41c473:	ficomp DWORD PTR [ecx-0x44b2cf45]
  41c479:	bound  eax,QWORD PTR [ebx]
  41c47b:	call   0x14fcab9b
  41c480:	mov    edx,0x4fbfa957
  41c486:	cli    
  41c487:	adc    bh,BYTE PTR [ebp-0x6f4a1ad8]
  41c48d:	pop    esp
  41c48e:	jle    0x41c493
  41c490:	push   ds
  41c491:	enter  0x1e98,0xeb
  41c495:	aam    0x9a
  41c497:	leave  
  41c498:	xchg   edi,ecx
  41c49a:	fst    st(6)
  41c49c:	(bad)  
  41c49d:	ins    DWORD PTR es:[edi],dx
  41c49e:	or     DWORD PTR [edi],ecx
  41c4a0:	adc    ch,BYTE PTR [esi+0x31edbf27]
  41c4a6:	sbb    al,0xd
  41c4a8:	add    al,0x82
  41c4aa:	retf   
  41c4ab:	cmp    al,0x42
  41c4ad:	and    ecx,0x357b8b58
  41c4b3:	sbb    BYTE PTR [esi],ah
  41c4b5:	ret    0xf7b5
  41c4b8:	jmp    edx
  41c4ba:	fadd   DWORD PTR [ebx]
  41c4bc:	mov    al,ds:0x5de0b86b
  41c4c1:	stc    
  41c4c2:	add    eax,0xd14925e0
  41c4c7:	mov    ds:0xd804eed5,al
  41c4cc:	fisttp WORD PTR [ebp+ebx*2+0x2a]
  41c4d0:	(bad)  
  41c4d1:	jp     0x41c4e2
  41c4d3:	adc    al,0xa3
  41c4d5:	lods   al,BYTE PTR ds:[esi]
  41c4d6:	mov    al,ds:0x8811ffbd
  41c4db:	push   ebp
  41c4dc:	in     eax,dx
  41c4dd:	in     eax,dx
  41c4de:	cmp    BYTE PTR [ebp-0x1d],ch
  41c4e1:	retf   0xd088
  41c4e4:	imul   edi,DWORD PTR ds:0x3bf8397f,0xba5ba7be
  41c4ee:	cmp    edx,esi
  41c4f0:	add    BYTE PTR [ebx+edi*2+0x3616a821],al
  41c4f7:	or     esp,DWORD PTR [ebp-0x1d]
  41c4fa:	inc    edx
  41c4fb:	(bad)  [ebx]
  41c4fd:	pop    ebp
  41c4fe:	ja     0x41c4f8
  41c500:	mov    ch,0xa6
  41c502:	sbb    eax,0xcee25ca9
  41c507:	jg     0x41c51e
  41c509:	sbb    BYTE PTR [edi-0x7e],al
  41c50c:	add    eax,0xc991e300
  41c511:	cmp    ch,bh
  41c513:	cmp    BYTE PTR [eax-0x41],bh
  41c516:	adc    bh,BYTE PTR [edi+0x3b]
  41c519:	or     eax,0xb8101bb1
  41c51e:	xchg   DWORD PTR [eax-0x1bf43d7e],esp
  41c524:	je     0x41c552
  41c526:	push   esp
  41c527:	mov    eax,ds:0x1c403579
  41c52c:	dec    DWORD PTR [eax-0x2b]
  41c52f:	or     eax,0xc4eb30a8
  41c534:	cmp    al,0xb2
  41c536:	dec    ecx
  41c537:	aad    0xbd
  41c539:	je     0x41c591
  41c53b:	dec    BYTE PTR [esi]
  41c53d:	sub    ch,BYTE PTR [eax]
  41c53f:	leave  
  41c540:	or     eax,0x4358d2c5
  41c545:	icebp  
  41c546:	jecxz  0x41c594
  41c548:	repz or eax,0x2c411e49
  41c54e:	(bad)  
  41c54f:	(bad)  
  41c550:	ds jb  0x41c539
  41c553:	imul   ebx,esp,0x7f
  41c556:	jmp    0xb40ecd76
  41c55b:	mov    dl,0xee
  41c55d:	dec    edx
  41c55e:	push   edx
  41c55f:	sbb    BYTE PTR [ebp-0x5ae7dcb],dh
  41c565:	xor    al,0x67
  41c567:	lods   al,BYTE PTR ds:[esi]
  41c568:	add    ebp,0xffffffcd
  41c56b:	jae    0x41c560
  41c56d:	es je  0x41c5e5
  41c570:	xchg   ebp,eax
  41c571:	out    dx,al
  41c572:	and    edx,0x7954f1c8
  41c578:	sar    BYTE PTR [edx+0x25],cl
  41c57b:	nop
  41c57c:	imul   ebx,DWORD PTR [edx],0x1b
  41c57f:	not    DWORD PTR [esi-0x1df712cf]
  41c585:	lods   eax,DWORD PTR ds:[esi]
  41c586:	dec    edx
  41c587:	inc    esp
  41c588:	adc    eax,DWORD PTR ds:0xe97b66ee
  41c58e:	daa    
  41c58f:	mov    ecx,0x2a0574a1
  41c594:	es pop eax
  41c596:	int    0x9c
  41c598:	shr    BYTE PTR ds:[ebx],0x30
  41c59c:	push   eax
  41c59d:	daa    
  41c59e:	test   BYTE PTR [ecx-0x1b],cl
  41c5a1:	jns    0x41c55a
  41c5a3:	retf   
  41c5a4:	jbe    0x41c58a
  41c5a6:	data16 lock daa 
  41c5a9:	or     al,0x34
  41c5ab:	les    ebp,FWORD PTR [ebp+0xe498541]
  41c5b1:	in     eax,0x1d
  41c5b3:	shr    DWORD PTR [ebx-0x43eb0a7f],1
  41c5b9:	dec    edi
  41c5ba:	into   
  41c5bb:	fisub  DWORD PTR [edi-0x6b241e4d]
  41c5c1:	loop   0x41c5c3
  41c5c3:	sub    BYTE PTR [edi-0x20aabcfa],cl
  41c5c9:	es xchg esp,eax
  41c5cb:	mov    esi,0x4d109a77
  41c5d0:	xchg   ecx,eax
  41c5d1:	daa    
  41c5d2:	out    dx,eax
  41c5d3:	sub    al,0xc0
  41c5d5:	out    0x31,eax
  41c5d7:	dec    ebx
  41c5d8:	push   ss
  41c5d9:	inc    ecx
  41c5da:	test   al,0xae
  41c5dc:	(bad)  
  41c5dd:	aam    0x83
  41c5df:	add    eax,0x369cd34b
  41c5e4:	sti    
  41c5e5:	jmp    0xb4841344
  41c5ea:	add    edx,DWORD PTR ds:0xf7672225
  41c5f0:	leave  
  41c5f1:	repnz add eax,0xe9b09718
  41c5f7:	push   eax
  41c5f8:	pop    esp
  41c5f9:	xchg   esi,eax
  41c5fa:	cmc    
  41c5fb:	push   ebx
  41c5fc:	cmp    DWORD PTR [ebx+ebx*2+0x34ac13bf],ebx
  41c603:	in     al,0x2b
  41c605:	mov    edi,0x2125bb53
  41c60a:	fnstsw WORD PTR [ebp+esi*8+0x799b3d04]
  41c611:	repnz fmul QWORD PTR [esi+0x416051d2]
  41c618:	mov    edx,DWORD PTR [esp+edi*8+0x70996cf6]
  41c61f:	scas   eax,DWORD PTR es:[edi]
  41c620:	cwde   
  41c621:	test   dl,ah
  41c623:	push   edx
  41c624:	(bad)  
  41c625:	cmc    
  41c626:	xor    eax,0x389ee8d7
  41c62b:	scas   eax,DWORD PTR es:[edi]
  41c62c:	jae    0x41c5c9
  41c62e:	repnz ror edi,cl
  41c631:	cmp    esp,DWORD PTR [edx+0x6]
  41c634:	jl     0x41c6af
  41c636:	clc    
  41c637:	add    al,0x9a
  41c639:	div    BYTE PTR gs:[edi+0x4cda23ea]
  41c640:	mov    bl,0xfe
  41c642:	loope  0x41c678
  41c644:	cmp    ebx,ebx
  41c646:	push   esp
  41c647:	lods   al,BYTE PTR ds:[esi]
  41c648:	pop    esp
  41c649:	ficom  WORD PTR [ecx-0x68]
  41c64c:	xor    al,ch
  41c64e:	enter  0x60ad,0x18
  41c652:	in     eax,dx
  41c653:	iret   
  41c654:	popf   
  41c655:	fbstp  TBYTE PTR [eax+0x5]
  41c658:	lods   al,BYTE PTR ds:[esi]
  41c659:	push   ebp
  41c65a:	or     dh,ch
  41c65c:	call   DWORD PTR [edx]
  41c65e:	pop    ebp
  41c65f:	pushf  
  41c660:	dec    edi
  41c661:	dec    ecx
  41c662:	mov    edi,0x7f74d8f0
  41c667:	repnz and esp,DWORD PTR [ecx+esi*8+0x147769b6]
  41c66f:	mov    ebx,0x5b1356b
  41c674:	enter  0x75ac,0x58
  41c678:	xchg   esp,eax
  41c679:	pushf  
  41c67a:	imul   al
  41c67c:	push   0xffffff98
  41c67e:	mov    al,ds:0x17c3ca44
  41c683:	mov    ch,0x57
  41c685:	les    edx,FWORD PTR [esi+0x68]
  41c688:	aaa    
  41c689:	pop    ebp
  41c68a:	sub    BYTE PTR [edi],0xa5
  41c68d:	push   edx
  41c68e:	xor    DWORD PTR [ecx],esp
  41c690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c691:	inc    esi
  41c692:	push   ebx
  41c693:	add    dh,cl
  41c695:	mov    ecx,0x2b26280e
  41c69a:	inc    esp
  41c69b:	shl    BYTE PTR [eax+0x10],0xbb
  41c69f:	out    0x5b,al
  41c6a1:	and    eax,0x585b8769
  41c6a6:	pop    ebp
  41c6a7:	bound  edx,QWORD PTR [edi+ecx*8-0x4d]
  41c6ab:	add    ah,dh
  41c6ad:	mov    ecx,0x36e47477
  41c6b2:	adc    eax,0x4f8d95f8
  41c6b7:	adc    ah,BYTE PTR [ebx-0x3b]
  41c6ba:	dec    ebx
  41c6bb:	repnz addr16 std 
  41c6be:	loopne 0x41c64f
  41c6c0:	daa    
  41c6c1:	sub    eax,0x226e7dd1
  41c6c6:	sbb    al,0x6d
  41c6c8:	mov    ds:0x964efc85,eax
  41c6cd:	sub    esi,DWORD PTR [ecx-0x1a]
  41c6d0:	stos   BYTE PTR es:[edi],al
  41c6d1:	aam    0xb3
  41c6d3:	sub    BYTE PTR [esi+0x76],dh
  41c6d6:	inc    esp
  41c6d7:	mov    cl,0x6a
  41c6d9:	sahf   
  41c6da:	sahf   
  41c6db:	sub    BYTE PTR [ebx+0x39a62a2a],bl
  41c6e1:	and    eax,0xcafffdc8
  41c6e6:	ins    BYTE PTR es:[edi],dx
  41c6e7:	xchg   BYTE PTR [eax+0x10386188],dh
  41c6ed:	hlt    
  41c6ee:	pop    ecx
  41c6ef:	push   esp
  41c6f0:	sbb    ch,al
  41c6f2:	std    
  41c6f3:	cmp    edi,0x1711bfee
  41c6f9:	jnp    0x41c6ca
  41c6fb:	jmp    0x4bef:0xd6d423e1
  41c702:	std    
  41c703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c704:	xchg   BYTE PTR [ebp+0x615cf491],bl
  41c70a:	test   al,ah
  41c70c:	sbb    eax,0x17beeebe
  41c711:	mov    esp,0xf3ef6d9f
  41c716:	xor    BYTE PTR gs:[edx-0x10],0x24
  41c71b:	fimul  WORD PTR [esi]
  41c71d:	rdtsc  
  41c71f:	outs   dx,BYTE PTR ds:[esi]
  41c720:	scas   al,BYTE PTR es:[edi]
  41c721:	call   0x634dd6c8
  41c726:	into   
  41c727:	xlat   BYTE PTR ds:[ebx]
  41c728:	mov    ebp,ecx
  41c72a:	or     eax,0xb402be5e
  41c72f:	push   edi
  41c730:	test   DWORD PTR [edx],ebx
  41c732:	mov    bl,0x38
  41c735:	sub    ebp,DWORD PTR [edx-0x766a9e5c]
  41c73b:	imul   ebp,DWORD PTR [esi+0x51],0x6a
  41c73f:	fadd   DWORD PTR [esi+ebp*2-0x289f252b]
  41c746:	xor    dl,BYTE PTR [ecx-0x73a7c35]
  41c74c:	adc    ecx,DWORD PTR ds:0x711d1abd
  41c752:	xchg   edi,eax
  41c753:	cmp    DWORD PTR [ecx],ecx
  41c755:	inc    esi
  41c756:	and    al,0x58
  41c758:	xor    DWORD PTR ds:0xb14ad2ec,0x3c8ba5bf
  41c762:	(bad)  
  41c764:	jno    0x41c7dc
  41c766:	dec    esi
  41c767:	jne    0x41c7e1
  41c769:	loop   0x41c7e3
  41c76b:	and    eax,0x84cff984
  41c770:	cwde   
  41c771:	mov    dl,BYTE PTR [edi+0x7]
  41c774:	aas    
  41c775:	push   edx
  41c776:	shl    BYTE PTR [edi+eiz*2+0x5cfa5680],cl
  41c77d:	sbb    dl,BYTE PTR [ebp-0x40]
  41c780:	call   0x4af0:0xb583289b
  41c787:	shl    BYTE PTR [esi-0x1c],0x16
  41c78b:	ins    DWORD PTR es:[edi],dx
  41c78c:	mov    DWORD PTR [ebp-0x6d05fe68],esi
  41c792:	sbb    edx,ecx
  41c794:	xchg   edi,eax
  41c795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c796:	mov    edx,0x89c7acfc
  41c79b:	cmp    DWORD PTR ds:0xcc20ef0d,edi
  41c7a1:	rcr    DWORD PTR cs:[ecx-0xa],cl
  41c7a5:	or     BYTE PTR [edx+0x2f83c2f],al
  41c7ab:	aam    0x4e
  41c7ad:	xchg   ecx,eax
  41c7ae:	push   ecx
  41c7af:	adc    BYTE PTR [ebx+esi*4],bh
  41c7b2:	pushf  
  41c7b3:	adc    al,0xf5
  41c7b5:	cmp    al,0x20
  41c7b7:	mov    esi,0x40f07114
  41c7bc:	dec    ebx
  41c7bd:	jp     0x41c807
  41c7bf:	test   DWORD PTR [esi+0x8],0x906522ad
  41c7c6:	int    0x99
  41c7c8:	gs dec ebx
  41c7ca:	dec    esi
  41c7cb:	fs enter 0xe35,0xf7
  41c7d0:	push   eax
  41c7d1:	jo     0x41c785
  41c7d3:	loope  0x41c845
  41c7d5:	loopne 0x41c759
  41c7d7:	push   ds
  41c7d8:	mov    edx,0xfd9e8c3c
  41c7dd:	scas   eax,DWORD PTR es:[edi]
  41c7de:	fs pop ss
  41c7e0:	jle    0x41c7be
  41c7e2:	jg     0x41c78f
  41c7e4:	cpuid  
  41c7e6:	cli    
  41c7e7:	out    0x4f,eax
  41c7e9:	lock ffree st(7)
  41c7ec:	(bad)
  41c7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f0:	lea    edi,[edi]
  41c7f2:	lahf   
  41c7f3:	pop    edx
  41c7f4:	or     bl,bh
  41c7f6:	xor    DWORD PTR [edx+ebx*8-0x33049a23],ebx
  41c7fd:	xor    al,0x91
  41c7ff:	cmp    ebx,esp
  41c801:	pushf  
  41c802:	test   DWORD PTR [esi],esp
  41c804:	call   0x1ba96904
  41c809:	int    0x12
  41c80b:	out    0x4b,eax
  41c80d:	pop    edx
  41c80e:	sub    eax,0xe5591212
  41c813:	bound  esp,QWORD PTR [ebx+0x1a]
  41c816:	dec    edx
  41c817:	push   ds
  41c818:	adc    al,0xae
  41c81a:	xor    BYTE PTR [edi],ah
  41c81c:	mov    dh,0x31
  41c81e:	inc    ecx
  41c81f:	ins    DWORD PTR es:[edi],dx
  41c820:	add    eax,0x33c23cba
  41c825:	or     BYTE PTR [ebx],cl
  41c827:	and    esp,DWORD PTR [esi+0x7]
  41c82a:	shr    DWORD PTR [edi+0xe],cl
  41c82d:	xor    ebx,eax
  41c82f:	xchg   BYTE PTR [edi+0x32],cl
  41c832:	rcl    DWORD PTR [ebx],cl
  41c834:	cld    
  41c835:	adc    ah,BYTE PTR [edx+ecx*1]
  41c838:	lds    esp,FWORD PTR [edi]
  41c83a:	(bad)  
  41c83b:	jl     0x41c85d
  41c83d:	addr16 retfw 
  41c840:	add    dh,BYTE PTR [eax-0x70bc53cc]
  41c846:	dec    esi
  41c847:	loope  0x41c7dd
  41c849:	jle    0x41c8a7
  41c84b:	daa    
  41c84c:	inc    esi
  41c84d:	gs cdq 
  41c84f:	mov    bh,0xc6
  41c851:	pop    edx
  41c852:	stos   DWORD PTR es:[edi],eax
  41c853:	push   ebx
  41c854:	call   0x8764:0x5bdb016
  41c85b:	xchg   ecx,eax
  41c85c:	gs mov edx,0xd8b581b4
  41c862:	pop    eax
  41c863:	mov    cl,0x77
  41c865:	daa    
  41c866:	xor    al,0x4d
  41c868:	fstp   TBYTE PTR ss:[eax+0x6a3c092a]
  41c86f:	in     eax,dx
  41c870:	pop    eax
  41c871:	dec    edi
  41c872:	iret   
  41c873:	cld    
  41c874:	out    dx,eax
  41c875:	cwde   
  41c876:	(bad)  [ebp+esi*2-0x6d]
  41c87a:	(bad)  
  41c87b:	add    eax,0xa64cbcb8
  41c880:	test   DWORD PTR [eax],ebx
  41c882:	mov    al,ds:0x6e0128d
  41c887:	and    edx,DWORD PTR [eax-0x15]
  41c88a:	jno    0x41c858
  41c88c:	sbb    al,0x93
  41c88e:	xor    eax,0xcf863be0
  41c893:	ficom  WORD PTR [ebx+edx*4-0x48191828]
  41c89a:	retf   0x337f
  41c89d:	(bad)  
  41c89e:	or     bl,BYTE PTR [edi+0xbc4762f]
  41c8a4:	dec    ebp
  41c8a5:	mov    esp,0x264a8810
  41c8aa:	in     al,dx
  41c8ab:	sub    BYTE PTR [ecx-0x8],al
  41c8ae:	repnz lds esp,FWORD PTR [ecx+0x777b818c]
  41c8b5:	sbb    ebx,ebp
  41c8b7:	dec    ecx
  41c8b8:	mov    edi,0x85494da8
  41c8bd:	cmp    esi,DWORD PTR [ecx-0x5635ecb0]
  41c8c3:	dec    ebp
  41c8c4:	aad    0xe3
  41c8c6:	adc    eax,0x48057460
  41c8cb:	das    
  41c8cc:	pusha  
  41c8cd:	xchg   esp,eax
  41c8ce:	mov    ecx,0xaa354b47
  41c8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d4:	stc    
  41c8d5:	cmp    ah,BYTE PTR [ebp-0x40351a03]
  41c8db:	fisubr WORD PTR [eax]
  41c8dd:	jmp    0x2693eb51
  41c8e2:	test   DWORD PTR [ecx-0x56],0x19eba0f8
  41c8e9:	pop    esp
  41c8ea:	xchg   edx,eax
  41c8eb:	int    0xf8
  41c8ed:	xor    BYTE PTR [ecx],dl
  41c8ef:	outs   dx,BYTE PTR ds:[esi]
  41c8f0:	sub    eax,0x65b20b46
  41c8f5:	jae    0x41c90e
  41c8f7:	dec    edx
  41c8f8:	imul   ebp,DWORD PTR [esi+0x30],0xca065471
  41c8ff:	popf   
  41c900:	jl     0x41c961
  41c902:	clc    
  41c903:	xchg   BYTE PTR [ecx-0x31],bh
  41c906:	int    0xb9
  41c908:	test   al,0x2d
  41c90a:	aaa    
  41c90b:	fimul  DWORD PTR [edx+ebp*8+0x4]
  41c90f:	retf   0xf9f
  41c912:	jg     0x41c93c
  41c914:	dec    ebp
  41c915:	imul   ecx,DWORD PTR [ecx*8+0xe564247],0xffffffb5
  41c91d:	aaa    
  41c91e:	rcr    eax,0x70
  41c921:	mov    edi,0x845cbae9
  41c926:	out    dx,eax
  41c927:	sbb    ebx,DWORD PTR [edi]
  41c929:	sbb    eax,0x44e72d43
  41c92e:	jl     0x41c972
  41c930:	cmc    
  41c931:	mov    ebp,0xaf15209b
  41c936:	pop    es
  41c937:	push   esp
  41c938:	pusha  
  41c939:	push   0xf2ab401e
  41c93e:	loopne 0x41c96b
  41c940:	arpl   ax,ax
  41c942:	ss int3 
  41c944:	call   0xdee5:0xec369153
  41c94b:	aam    0x9f
  41c94d:	stos   DWORD PTR es:[edi],eax
  41c94e:	push   0xffffff93
  41c950:	mul    DWORD PTR ds:0xec02c83b
  41c956:	pop    esi
  41c957:	and    esi,edi
  41c959:	pusha  
  41c95a:	add    DWORD PTR [edx+eax*2+0x1a110631],ebx
  41c961:	add    al,0x7c
  41c963:	imul   ebx,ecx,0xfffffff0
  41c966:	jg     0x41c924
  41c968:	jmp    0xd4f71f55
  41c96d:	inc    ebx
  41c96e:	inc    esi
  41c96f:	push   ss
  41c970:	xchg   di,ax
  41c972:	js     0x41c911
  41c974:	pop    esp
  41c975:	int    0x46
  41c977:	fsub   DWORD PTR [edi]
  41c979:	pushf  
  41c97a:	clc    
  41c97b:	outs   dx,DWORD PTR ds:[esi]
  41c97c:	add    al,0x73
  41c97e:	and    eax,0xfd6eb74
  41c983:	pushf  
  41c984:	or     cl,BYTE PTR [edi+0x70f6e999]
  41c98a:	aad    0x85
  41c98c:	or     ecx,DWORD PTR [edx+0x39e78c90]
  41c992:	xchg   esi,eax
  41c993:	mov    edi,0x46cb92ae
  41c998:	sbb    bh,BYTE PTR [edi+0x55de11b7]
  41c99e:	sbb    eax,0x3469fc1a
  41c9a3:	jne    0x41c949
  41c9a5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a7:	sub    ecx,ebx
  41c9a9:	fld    DWORD PTR [esi+0x4e]
  41c9ac:	into   
  41c9ad:	dec    ebx
  41c9ae:	push   ecx
  41c9af:	xchg   BYTE PTR [ebx],dh
  41c9b1:	or     eax,0x8602180e
  41c9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b7:	cmp    eax,0xa81cd26a
  41c9bc:	(bad)  
  41c9bd:	fmulp  st(5),st
  41c9bf:	mov    dl,0xa8
  41c9c1:	mov    ecx,0x9ec4e429
  41c9c6:	jg     0x41c9e5
  41c9c8:	xchg   edx,eax
  41c9c9:	lods   eax,DWORD PTR ds:[esi]
  41c9ca:	loop   0x41c9e7
  41c9cc:	ror    BYTE PTR [eax+0x5a],0x5e
  41c9d0:	fwait
  41c9d1:	add    cl,BYTE PTR [eax+0x1d]
  41c9d4:	xchg   edi,eax
  41c9d5:	pop    ss
  41c9d6:	int    0xb6
  41c9d8:	jle    0x41ca31
  41c9da:	(bad)
  41c9de:	sbb    eax,0xadcca2bb
  41c9e3:	xchg   edx,eax
  41c9e4:	push   ds
  41c9e5:	xor    bl,BYTE PTR [edi-0x71]
  41c9e8:	scas   al,BYTE PTR es:[edi]
  41c9e9:	jp     0x41ca29
  41c9eb:	dec    ebp
  41c9ec:	or     al,cl
  41c9ee:	mov    ah,0x56
  41c9f0:	test   dh,0x87
  41c9f3:	jmp    0x3af0:0x8ce00463
  41c9fa:	in     al,dx
  41c9fb:	push   0xa2cb0866
  41ca00:	pop    ds
  41ca01:	add    bh,dl
  41ca03:	test   DWORD PTR [ebp+esi*8-0x65586c43],ecx
  41ca0a:	jmp    DWORD PTR [ecx+0x1e]
  41ca0d:	mov    ebx,0x8f6a6e0e
  41ca12:	mov    bh,BYTE PTR [edi]
  41ca14:	jmp    0xd86b6f79
  41ca19:	inc    esi
  41ca1a:	jnp    0x41c9f0
  41ca1c:	mov    bh,0x43
  41ca1e:	jle    0x41ca76
  41ca20:	ss xor al,0x8d
  41ca23:	les    ebx,FWORD PTR [esi+0x2d]
  41ca26:	mov    edx,0x6839ea3e
  41ca2b:	aam    0xa0
  41ca2d:	retf   0x843e
  41ca30:	push   es
  41ca31:	fs mov bl,dl
  41ca34:	les    ecx,FWORD PTR [edi-0x30b24bcf]
  41ca3a:	int    0x64
  41ca3c:	mov    ebp,0xdf3dab21
  41ca41:	stc    
  41ca42:	or     BYTE PTR [ebx-0x47],bh
  41ca45:	pushf  
  41ca46:	push   0x7f
  41ca48:	push   ecx
  41ca49:	jl     0x41c9f1
  41ca4b:	call   0xd8e5:0x58cc25da
  41ca52:	sbb    esp,ecx
  41ca54:	jo     0x41cab1
  41ca56:	ret    0xc5
  41ca59:	je     0xa74583fa
  41ca5f:	fadd   st,st(6)
  41ca61:	leave  
  41ca62:	shr    DWORD PTR [eax],1
  41ca64:	or     eax,0x1c39eaa2
  41ca69:	or     al,0xe6
  41ca6b:	jns    0x41ca93
  41ca6d:	sti    
  41ca6e:	xor    bl,BYTE PTR [ebx+0xc]
  41ca71:	jno    0x41caa1
  41ca73:	scas   eax,DWORD PTR es:[edi]
  41ca74:	test   DWORD PTR [ebx+0x18],ebp
  41ca77:	and    al,0x3b
  41ca79:	jmp    0x9984:0xe7e7e65f
  41ca80:	outs   dx,BYTE PTR ds:[esi]
  41ca81:	pop    esp
  41ca82:	in     eax,dx
  41ca83:	lods   eax,DWORD PTR ds:[esi]
  41ca84:	idiv   DWORD PTR [esi+edx*4]
  41ca87:	lea    esp,[eax-0x8]
  41ca8a:	sbb    DWORD PTR ds:0x9b3e799d,edi
  41ca90:	dec    esi
  41ca91:	pop    ebx
  41ca92:	pop    edi
  41ca93:	mov    ds:0x23b8404f,al
  41ca98:	jle    0x41cac0
  41ca9a:	mov    ch,0x9
  41ca9c:	xlat   BYTE PTR ds:[ebx]
  41ca9d:	(bad)  
  41ca9e:	out    0xa1,eax
  41caa0:	in     eax,dx
  41caa1:	pop    esp
  41caa2:	inc    ebp
  41caa3:	sub    esi,DWORD PTR [esi]
  41caa5:	test   eax,0xc02efd48
  41caaa:	adc    BYTE PTR [edx-0x1329d146],dl
  41cab0:	aas    
  41cab1:	sub    al,al
  41cab3:	in     eax,0xb1
  41cab5:	pop    ds
  41cab6:	clc    
  41cab7:	retf   0xcefb
  41caba:	adc    BYTE PTR [esi],dl
  41cabc:	ins    DWORD PTR es:[edi],dx
  41cabd:	shl    BYTE PTR [edi-0x6567e6af],cl
  41cac3:	jb     0x41cb44
  41cac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac6:	jns    0x41ca79
  41cac8:	shr    BYTE PTR [edx],1
  41caca:	cmp    edi,DWORD PTR [eax+0x45]
  41cacd:	jl     0x41cace
  41cacf:	out    0xbb,al
  41cad1:	push   ds
  41cad2:	add    edx,edx
  41cad4:	push   esp
  41cad5:	add    BYTE PTR [ecx-0xa6e5053],dh
  41cadb:	ds cwde 
  41cadd:	mov    cl,0x82
  41cadf:	lods   al,BYTE PTR ds:[esi]
  41cae0:	in     al,dx
  41cae1:	fld    DWORD PTR [ebx-0x286e865e]
  41cae7:	ins    DWORD PTR es:[edi],dx
  41cae8:	cmp    al,0x5f
  41caea:	(bad)  
  41caeb:	and    ebp,edi
  41caed:	push   ss
  41caee:	mul    DWORD PTR [edx-0x3b]
  41caf1:	mov    WORD PTR [edx],gs
  41caf3:	xchg   ecx,eax
  41caf4:	gs pop edx
  41caf6:	jle    0x41cb2c
  41caf8:	adc    BYTE PTR [ebx],bh
  41cafa:	mov    esi,0x3b09f27b
  41caff:	int    0x4e
  41cb01:	push   esp
  41cb02:	sti    
  41cb03:	hlt    
  41cb04:	lahf   
  41cb05:	(bad)  
  41cb06:	shr    BYTE PTR [esi],cl
  41cb08:	add    bl,dl
  41cb0a:	clc    
  41cb0b:	fucom  st(1)
  41cb0d:	nop
  41cb0e:	fstp   TBYTE PTR [ecx+0x27]
  41cb11:	fcomip st,st(6)
  41cb13:	enter  0x727f,0x76
  41cb17:	repnz or DWORD PTR [edx],ebp
  41cb1a:	enter  0x7e04,0x47
  41cb1e:	(bad)  
  41cb1f:	lock xchg BYTE PTR [edi-0x33],ch
  41cb23:	cmp    al,bl
  41cb25:	mov    eax,0xa862e01d
  41cb2a:	out    0xa3,al
  41cb2c:	mov    ebx,0x4450f846
  41cb31:	jns    0x41cb62
  41cb33:	pop    ebx
  41cb34:	loope  0x41cb35
  41cb36:	test   BYTE PTR [eax+ebx*1+0x75],0x58
  41cb3b:	inc    edi
  41cb3c:	shl    DWORD PTR ds:0x970686ce,cl
  41cb42:	push   0x55
  41cb44:	mov    ebp,0xa7f155c4
  41cb49:	fwait
  41cb4a:	out    dx,al
  41cb4b:	xchg   esp,eax
  41cb4c:	fcmovb st,st(1)
  41cb4e:	fidivr DWORD PTR [ebp+0x65]
  41cb51:	and    eax,0x35f371c6
  41cb56:	or     eax,0x1ae5f896
  41cb5b:	test   eax,0xc6bbab1d
  41cb60:	out    0xd2,al
  41cb62:	ret    
  41cb63:	scas   eax,DWORD PTR es:[edi]
  41cb64:	fnstsw WORD PTR [eax-0x15]
  41cb67:	ins    BYTE PTR es:[edi],dx
  41cb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb69:	jle    0x41cba6
  41cb6b:	es (bad) 
  41cb6d:	jmp    0x41cb79
  41cb6f:	repz push es
  41cb71:	out    dx,eax
  41cb72:	(bad)  
  41cb73:	push   0xaaf6fd5
  41cb78:	add    dh,dh
  41cb7a:	sbb    DWORD PTR ds:0x25ff5f98,ecx
  41cb80:	ss js  0x41cb0e
  41cb83:	push   ecx
  41cb84:	mov    ch,0x53
  41cb86:	push   ecx
  41cb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb88:	sub    al,0x6b
  41cb8a:	call   DWORD PTR [eax-0x4b954edb]
  41cb90:	fist   WORD PTR [ecx+0x45]
  41cb93:	test   ah,ah
  41cb95:	or     eax,0x6b2c974d
  41cb9a:	sub    dl,BYTE PTR ds:0xf0d87c45
  41cba0:	in     eax,0x8c
  41cba2:	ds pop edx
  41cba4:	add    edi,DWORD PTR [edx]
  41cba6:	pop    ebp
  41cba7:	fnstsw WORD PTR [edi-0x5f]
  41cbaa:	xor    eax,0x5a135d01
  41cbaf:	jg     0x41cbc8
  41cbb1:	aas    
  41cbb2:	mov    ds:0x78e49030,al
  41cbb7:	es xchg ecx,eax
  41cbb9:	inc    esp
  41cbba:	mov    al,ds:0x2769d9a0
  41cbbf:	out    dx,eax
  41cbc0:	pusha  
  41cbc1:	cmp    bl,dl
  41cbc3:	je     0x41cb59
  41cbc5:	and    BYTE PTR ss:[ebx-0x72],dl
  41cbc9:	and    al,0x13
  41cbcb:	leave  
  41cbcc:	mov    bl,0x81
  41cbce:	scas   al,BYTE PTR es:[edi]
  41cbcf:	jbe    0x41cbea
  41cbd1:	psrlw  mm4,QWORD PTR ds:0x8e4fbfbc
  41cbd8:	mov    bh,0x86
  41cbda:	clc    
  41cbdb:	es push edi
  41cbdd:	xchg   ebx,eax
  41cbde:	or     eax,0xc78d045
  41cbe3:	sbb    eax,0x2f503daa
  41cbe8:	pop    edi
  41cbe9:	ja     0x41cbfb
  41cbeb:	out    0x25,eax
  41cbed:	cmp    DWORD PTR [eax+0x35],edi
  41cbf0:	cld    
  41cbf1:	jbe    0x41cc23
  41cbf3:	jnp    0x41cbc8
  41cbf5:	fild   QWORD PTR [edx-0x18]
  41cbf8:	cs xor esp,edx
  41cbfb:	inc    ebp
  41cbfc:	jmp    0x9a110c63
  41cc01:	aam    0xe
  41cc03:	sub    al,0xa3
  41cc05:	or     ah,dl
  41cc07:	xchg   esi,eax
  41cc08:	mov    DWORD PTR [edi],esi
  41cc0a:	mov    WORD PTR [edi],?
  41cc0c:	dec    eax
  41cc0d:	pop    edi
  41cc0e:	inc    ebx
  41cc0f:	inc    ebx
  41cc10:	dec    edi
  41cc11:	sub    DWORD PTR [eax],edx
  41cc13:	or     al,0xf
  41cc15:	sub    ecx,DWORD PTR [eax]
  41cc17:	mov    eax,0x9bccdab8
  41cc1c:	or     DWORD PTR [esi-0x80],edx
  41cc1f:	inc    ebp
  41cc20:	mov    bh,cl
  41cc22:	popf   
  41cc23:	add    BYTE PTR [edi+0xd9337d],0xe8
  41cc2a:	jmp    0xa79a:0xd63ab85a
  41cc31:	inc    ecx
  41cc32:	jb     0x41cbe7
  41cc34:	repnz lahf 
  41cc36:	or     cl,BYTE PTR [eax+0x39be30d7]
  41cc3c:	jb     0x41cc25
  41cc3e:	arpl   WORD PTR [edx+0x2b],di
  41cc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc42:	mov    cl,0x20
  41cc44:	or     eax,0xcd15e79f
  41cc49:	inc    eax
  41cc4a:	push   eax
  41cc4b:	ins    DWORD PTR es:[edi],dx
  41cc4c:	cwde   
  41cc4d:	fisttp DWORD PTR [edx+0x7f1ff162]
  41cc53:	jmp    0x2f7a:0x40ed35bf
  41cc5a:	mov    bl,0xfa
  41cc5c:	imul   esi,ebx,0x9282e025
  41cc62:	sub    edx,DWORD PTR [ebp-0x68f450dc]
  41cc68:	aaa    
  41cc69:	mov    ebp,ebp
  41cc6b:	push   es
  41cc6c:	mov    es:0x5aa0e54,eax
  41cc72:	adc    bl,BYTE PTR [edi]
  41cc74:	outs   dx,BYTE PTR ds:[esi]
  41cc75:	rcl    eax,0x47
  41cc78:	sub    dh,BYTE PTR [ecx+ebp*2-0x5bfe7386]
  41cc7f:	cmp    al,0x3e
  41cc81:	dec    edx
  41cc82:	stos   BYTE PTR es:[edi],al
  41cc83:	je     0x41cc88
  41cc85:	test   eax,0x379924e3
  41cc8b:	(bad)  
  41cc8c:	pop    ebx
  41cc8d:	iret   
  41cc8e:	mov    BYTE PTR [eax],cl
  41cc90:	xchg   edx,eax
  41cc91:	xchg   ecx,eax
  41cc92:	fild   QWORD PTR [esi]
  41cc94:	retf   
  41cc95:	jno    0x41cc22
  41cc97:	das    
  41cc98:	push   ebp
  41cc99:	adc    eax,0x9e6d4601
  41cc9e:	outs   dx,DWORD PTR ds:[esi]
  41cc9f:	jbe    0x41cca2
  41cca1:	sti    
  41cca2:	inc    edi
  41cca3:	or     DWORD PTR [ecx-0x56],ebx
  41cca6:	and    BYTE PTR [edi+edi*1-0xc],bh
  41ccaa:	fdiv   DWORD PTR [edi-0x474791f8]
  41ccb0:	ins    BYTE PTR es:[edi],dx
  41ccb1:	shl    DWORD PTR [edx-0x336b4f00],1
  41ccb7:	outs   dx,BYTE PTR ds:[esi]
  41ccb8:	push   ebx
  41ccb9:	xchg   ecx,eax
  41ccba:	out    dx,eax
  41ccbb:	shl    BYTE PTR [eax],cl
  41ccbd:	sub    DWORD PTR [edx-0x44],0x12cc018e
  41ccc4:	(bad)  
  41ccc5:	adc    eax,0xd1014288
  41ccca:	push   es
  41cccb:	mov    ebp,?
  41cccd:	mov    edi,0xc6948628
  41ccd2:	test   al,0x12
  41ccd4:	call   0x66f86775
  41ccd9:	ds ins DWORD PTR es:[edi],dx
  41ccdb:	inc    eax
  41ccdc:	add    eax,0xbfb149b1
  41cce1:	stos   DWORD PTR es:[edi],eax
  41cce2:	push   ebx
  41cce3:	push   ds
  41cce4:	int    0x41
  41cce6:	jg     0x41cc73
  41cce8:	pop    edi
  41cce9:	mov    al,0xbc
  41cceb:	ror    DWORD PTR [ecx+0x63fc07e1],cl
  41ccf1:	adc    ebp,DWORD PTR [eax+edx*1-0x20]
  41ccf5:	pop    ebp
  41ccf6:	push   ebx
  41ccf7:	push   esp
  41ccf8:	out    0x9c,al
  41ccfa:	add    BYTE PTR [esi+0x7],ch
  41ccfd:	xor    al,0x5d
  41ccff:	test   ah,bh
  41cd01:	pop    esp
  41cd02:	into   
  41cd03:	mov    edi,0x77024e81
  41cd08:	xchg   BYTE PTR [edx],ch
  41cd0a:	scas   al,BYTE PTR es:[edi]
  41cd0b:	enter  0x3db9,0x8a
  41cd0f:	call   0x4ed6:0x9540c650
  41cd16:	jp     0x41cd91
  41cd18:	std    
  41cd19:	or     BYTE PTR [ebx-0x69],dh
  41cd1c:	lods   eax,DWORD PTR ds:[esi]
  41cd1d:	repz push ebx
  41cd1f:	jecxz  0x41ccf5
  41cd21:	bound  edx,QWORD PTR [edi-0x18]
  41cd24:	imul   ecx,DWORD PTR [edx-0x3f],0x18ff5be6
  41cd2b:	mov    bh,0x81
  41cd2d:	push   ss
  41cd2e:	push   0xbfe13718
  41cd33:	xor    eax,0xfd3b4e19
  41cd38:	aad    0x36
  41cd3a:	fs fwait
  41cd3c:	scas   eax,DWORD PTR es:[edi]
  41cd3d:	jmp    DWORD PTR [eax-0x59bc4279]
  41cd43:	jmp    0x5649:0x8aa83dc1
  41cd4a:	dec    esp
  41cd4b:	add    cl,bl
  41cd4d:	jbe    0x41cd4f
  41cd4f:	dec    edi
  41cd50:	jb     0x41ccea
  41cd52:	iret   
  41cd53:	stos   DWORD PTR es:[edi],eax
  41cd54:	cmp    al,0xcb
  41cd56:	inc    esi
  41cd57:	or     al,0x10
  41cd59:	mov    dl,0xb8
  41cd5b:	imul   ecx,DWORD PTR ds:0xe118e254,0x8ef3454d
  41cd65:	loope  0x41cd65
  41cd67:	sub    BYTE PTR [edi+0x47],0x14
  41cd6b:	jae    0x41cd4c
  41cd6d:	pop    ds
  41cd6e:	fisttp QWORD PTR [ebx+ebx*8-0x35fe8607]
  41cd75:	sbb    BYTE PTR [edx],0xbd
  41cd78:	das    
  41cd79:	out    0x55,al
  41cd7b:	test   BYTE PTR [ecx-0x1027746f],dl
  41cd81:	sbb    bh,BYTE PTR [ebp+0x76]
  41cd84:	pop    edi
  41cd85:	mov    ecx,0x7ef51134
  41cd8a:	jmp    0x6670bf2c
  41cd8f:	sbb    esp,esp
  41cd91:	sub    BYTE PTR [ebp-0x338cfaef],dh
  41cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd98:	or     DWORD PTR [esp+esi*1],ecx
  41cd9b:	push   ecx
  41cd9c:	sub    eax,0x87cf561c
  41cda1:	cmp    DWORD PTR [ebx-0x50b42c0],edi
  41cda7:	call   0x2b736415
  41cdac:	loope  0x41ce03
  41cdae:	inc    eax
  41cdaf:	(bad)  
  41cdb0:	out    0x70,eax
  41cdb2:	js     0x41ce0b
  41cdb4:	arpl   WORD PTR [ecx-0x7ea48c4f],si
  41cdba:	bound  edi,QWORD PTR [esi]
  41cdbc:	sub    dl,0xb5
  41cdbf:	mov    dh,0xae
  41cdc1:	fisttp WORD PTR [edx-0x71]
  41cdc4:	popf   
  41cdc5:	pushf  
  41cdc6:	fmul   st,st(4)
  41cdc8:	dec    eax
  41cdc9:	ret    
  41cdca:	mov    ch,0x3f
  41cdcc:	lods   eax,DWORD PTR gs:[esi]
  41cdce:	push   esi
  41cdcf:	jmp    0x41cdb2
  41cdd1:	pop    ds
  41cdd2:	rcr    DWORD PTR [edi+0x2b],0x82
  41cdd6:	and    ecx,DWORD PTR [ecx-0x2]
  41cdd9:	xlat   BYTE PTR ds:[ebx]
  41cdda:	xlat   BYTE PTR ds:[ebx]
  41cddb:	aam    0x77
  41cddd:	loopne 0x41ce11
  41cddf:	or     edi,DWORD PTR [ecx+0x4412bf53]
  41cde5:	jbe    0x41cde1
  41cde7:	pop    edx
  41cde8:	sbb    BYTE PTR ds:0x472c7587,al
  41cdee:	jb     0x41ce12
  41cdf0:	mov    edx,0x8fceb09c
  41cdf5:	ret    0x52b2
  41cdf8:	icebp  
  41cdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdfa:	adc    eax,0xf936782f
  41cdff:	push   ss
  41ce00:	mov    dl,0x18
  41ce02:	xchg   ebx,eax
  41ce03:	push   0x1de2cf7e
  41ce08:	or     eax,0x85334931
  41ce0d:	xchg   ebx,eax
  41ce0e:	fs jecxz 0x41ce27
  41ce11:	xlat   BYTE PTR ds:[ebx]
  41ce12:	mov    bh,0x7a
  41ce14:	test   eax,0x350711b
  41ce19:	mov    ebx,0x34f38070
  41ce1e:	xor    DWORD PTR [edi-0x1f],0x19c9855c
  41ce25:	jg     0x41ce42
  41ce27:	fcmovbe st,st(2)
  41ce29:	dec    edx
  41ce2a:	xlat   BYTE PTR ds:[ebx]
  41ce2b:	and    eax,0xed7bf2c6
  41ce30:	push   0xffffff94
  41ce32:	mov    cl,BYTE PTR [esi-0x704c4bb4]
  41ce38:	pop    eax
  41ce39:	aaa    
  41ce3a:	inc    esi
  41ce3b:	adc    eax,0xa685ba4d
  41ce40:	and    ebp,DWORD PTR [esi+0x7b]
  41ce43:	stc    
  41ce44:	sub    cl,BYTE PTR [edx+0x320aa0d]
  41ce4a:	aam    0xf
  41ce4c:	dec    esi
  41ce4d:	sbb    bl,al
  41ce4f:	xchg   esi,eax
  41ce50:	ss ret 0xaa00
  41ce54:	add    al,BYTE PTR [ebp+0x1724677a]
  41ce5a:	outs   dx,DWORD PTR ds:[esi]
  41ce5b:	jg     0x41ce5b
  41ce5d:	ins    DWORD PTR es:[edi],dx
  41ce5e:	or     ah,BYTE PTR [edi+ecx*4]
  41ce61:	sbb    dh,ch
  41ce63:	push   0x95bcf3fe
  41ce68:	iret   
  41ce69:	and    DWORD PTR [ecx-0x1ceb5607],esp
  41ce6f:	in     al,0xdd
  41ce71:	mov    dh,0xb4
  41ce73:	xchg   esp,eax
  41ce74:	xrelease xchg BYTE PTR [edx-0x2f],bh
  41ce78:	sbb    bh,al
  41ce7a:	(bad)  
  41ce7c:	int3   
  41ce7d:	lods   eax,DWORD PTR ds:[esi]
  41ce7e:	lds    eax,FWORD PTR [esi+0x13ae8a7b]
  41ce84:	adc    ah,BYTE PTR [edi-0x33]
  41ce87:	out    0xf4,eax
  41ce89:	xchg   ebx,eax
  41ce8a:	dec    edi
  41ce8b:	and    cl,al
  41ce8d:	test   BYTE PTR [edx-0x4f],cl
  41ce90:	pusha  
  41ce91:	out    0xcc,eax
  41ce93:	add    edx,DWORD PTR [ebx+0x51]
  41ce96:	cmp    ah,BYTE PTR [eax+0x4efbcdb2]
  41ce9c:	shl    BYTE PTR [ecx+0x4b455f9],0xc8
  41cea3:	dec    esi
  41cea4:	sbb    DWORD PTR [ebp-0x7b],ebp
  41cea7:	push   0xdb5287db
  41ceac:	std    
  41cead:	clc    
  41ceae:	test   al,dl
  41ceb0:	push   es
  41ceb1:	xchg   BYTE PTR [eax-0x21],ah
  41ceb4:	ret    
  41ceb5:	dec    eax
  41ceb6:	xor    eax,0xc64d003f
  41cebb:	xchg   edi,eax
  41cebc:	jecxz  0x41cec1
  41cebe:	pop    es
  41cebf:	int    0xeb
  41cec1:	push   edi
  41cec2:	rcpps  xmm0,XMMWORD PTR [ebx+0x2d]
  41cec6:	sbb    BYTE PTR [edi],bl
  41cec8:	xor    al,0xca
  41ceca:	adc    eax,0x9bc3041e
  41cecf:	popf   
  41ced0:	sbb    DWORD PTR [ebx+0x2],edx
  41ced3:	out    0xcc,eax
  41ced5:	or     esi,edx
  41ced7:	jne    0x41cef3
  41ced9:	sti    
  41ceda:	dec    esp
  41cedb:	xchg   DWORD PTR [eax-0x7e173b6e],esi
  41cee1:	sbb    BYTE PTR [ebx+eax*1-0x42],0xbd
  41cee6:	jle    0x41cf20
  41cee8:	mov    ch,0xff
  41ceea:	mov    ebx,DWORD PTR [ebp+0x7a0a8cc7]
  41cef0:	sub    esp,DWORD PTR [edx-0x849c4d5]
  41cef6:	xchg   ebp,eax
  41cef7:	mov    ah,0xcf
  41cef9:	sbb    ch,BYTE PTR [esi-0x11]
  41cefc:	add    edi,DWORD PTR [esi+0x4eaa2190]
  41cf02:	loop   0x41cf22
  41cf04:	(bad)  
  41cf05:	dec    esi
  41cf06:	sub    DWORD PTR [eax-0x2928b902],0xfd78b247
  41cf10:	adc    bl,BYTE PTR [eax]
  41cf12:	pop    ss
  41cf13:	pusha  
  41cf14:	xchg   esp,eax
  41cf15:	pop    edx
  41cf16:	jl     0x41ce9e
  41cf18:	(bad)  
  41cf19:	sbb    dl,dl
  41cf1b:	fidivr WORD PTR [edx]
  41cf1d:	pop    ds
  41cf1e:	mov    al,0x60
  41cf20:	gs inc esp
  41cf22:	jae    0x41cf80
  41cf24:	and    BYTE PTR [edi+edx*2],0x95
  41cf28:	and    edi,edi
  41cf2a:	cli    
  41cf2b:	sbb    eax,0xe22234d3
  41cf30:	(bad)  
  41cf31:	sbb    esi,DWORD PTR [esi+edx*8]
  41cf34:	pop    ebx
  41cf35:	jmp    0x5541674
  41cf3a:	mov    eax,0xbed5ce97
  41cf3f:	pop    ecx
  41cf40:	add    al,dh
  41cf42:	mov    al,0x6d
  41cf44:	lahf   
  41cf45:	cmp    DWORD PTR [ecx-0x26],0xac8ef959
  41cf4c:	jne    0x41cf0e
  41cf4e:	and    eax,ebp
  41cf50:	xlat   BYTE PTR ds:[ebx]
  41cf51:	mov    ch,0x71
  41cf53:	adc    BYTE PTR [esi-0x6d],dl
  41cf56:	data16 mov bl,0xa6
  41cf59:	or     eax,0xf9c00237
  41cf5e:	sub    BYTE PTR [esp+edi*8],cl
  41cf61:	loope  0x41cee8
  41cf63:	and    DWORD PTR [esp+edi*2],eax
  41cf66:	push   ds
  41cf67:	(bad)  
  41cf68:	jl     0x41cf5f
  41cf6a:	loop   0x41cfa7
  41cf6c:	or     al,0xcf
  41cf6e:	xchg   esp,eax
  41cf6f:	pop    ebp
  41cf70:	cmp    eax,0xd02546a6
  41cf75:	(bad)  
  41cf77:	out    dx,al
  41cf78:	push   eax
  41cf79:	stc    
  41cf7a:	xchg   edx,eax
  41cf7b:	add    al,0xb2
  41cf7d:	stos   DWORD PTR es:[edi],eax
  41cf7e:	jns    0x41cf98
  41cf80:	add    ecx,edi
  41cf82:	push   esp
  41cf83:	imul   esp,esp,0x28
  41cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf87:	sub    ah,BYTE PTR [ecx+0x46]
  41cf8a:	xlat   BYTE PTR ds:[ebx]
  41cf8b:	and    dh,dh
  41cf8d:	cdq    
  41cf8e:	add    bl,BYTE PTR [edx]
  41cf90:	mov    WORD PTR [ebp+0x201a0c93],fs
  41cf96:	push   esp
  41cf97:	xchg   esp,eax
  41cf98:	xchg   ebp,eax
  41cf99:	inc    ebp
  41cf9a:	mov    ch,0x75
  41cf9c:	aad    0xa9
  41cf9e:	or     al,0xcd
  41cfa0:	test   eax,0x97ee9da0
  41cfa5:	fcomp  DWORD PTR [esi]
  41cfa7:	mov    ebp,0xbdd50292
  41cfac:	das    
  41cfad:	push   esi
  41cfae:	call   0x5455:0xf5aa1517
  41cfb5:	int3   
  41cfb6:	cs in  al,0x73
  41cfb9:	and    eax,0x66f4da2c
  41cfbe:	inc    ebx
  41cfbf:	push   cs
  41cfc0:	neg    DWORD PTR [edi-0x6737b5f4]
  41cfc6:	xor    eax,ecx
  41cfc8:	ds push ebx
  41cfca:	(bad)  
  41cfcb:	popa   
  41cfcc:	mov    ch,0xf7
  41cfce:	stc    
  41cfcf:	pop    ecx
  41cfd0:	push   edi
  41cfd1:	pop    edx
  41cfd2:	pop    esp
  41cfd3:	dec    edx
  41cfd4:	cmp    ebp,eax
  41cfd6:	call   0x6e54:0xf33c75c6
  41cfdd:	dec    esp
  41cfde:	stos   DWORD PTR es:[edi],eax
  41cfdf:	fdiv   DWORD PTR [ecx+0x7658449d]
  41cfe5:	fwait
  41cfe6:	cmp    bl,BYTE PTR [ebp-0xd27a99e]
  41cfec:	xor    DWORD PTR [esi],edi
  41cfee:	fnsave [ebp-0x3135f3b6]
  41cff4:	shr    ebx,0x57
  41cff7:	popf   
  41cff8:	loop   0x41d01e
  41cffa:	jnp    0x41cf90
  41cffc:	fistp  WORD PTR [ebp+0x2d]
  41cfff:	outs   dx,BYTE PTR ds:[esi]
  41d000:	loop   0x41cff4
  41d002:	out    dx,al
  41d003:	xlat   BYTE PTR ds:[ebx]
  41d005:	ins    DWORD PTR es:[edi],dx
  41d006:	add    edx,ebx
  41d008:	jmp    0xa6ff:0xfcaa6968
  41d00f:	and    BYTE PTR ds:0x5a35893,bh
  41d015:	pop    esi
  41d016:	xor    ebp,ebp
  41d018:	jb     0x41d015
  41d01a:	data16 loop 0x41cf9e
  41d01d:	push   ebp
  41d01e:	cmp    al,0xc6
  41d020:	test   DWORD PTR [esi+0x73],ecx
  41d023:	std    
  41d024:	and    eax,0xa88a766e
  41d029:	sbb    BYTE PTR [ebx+eax*8+0x4b],ch
  41d02d:	(bad)  
  41d02e:	dec    eax
  41d02f:	rcr    DWORD PTR [edx+ecx*4+0x8aaed8c],cl
  41d036:	hlt    
  41d037:	sti    
  41d038:	dec    ebx
  41d039:	lds    ebp,FWORD PTR ds:[ecx]
  41d03c:	fldcw  WORD PTR ds:[esp+eax*8]
  41d040:	in     al,0x6b
  41d042:	sub    esi,esp
  41d044:	xchg   edx,eax
  41d045:	mov    ah,BYTE PTR [esi-0x50]
  41d048:	cld    
  41d049:	jbe    0x41d009
  41d04b:	or     DWORD PTR [eax+0x0],eax
  41d04e:	gs loope 0x41d04d
  41d051:	ret    
  41d052:	push   eax
  41d053:	sub    DWORD PTR [edx-0x5f],ebx
  41d056:	sub    DWORD PTR [edx+0x3ff3df1d],esp
  41d05c:	sbb    eax,DWORD PTR [edx+0xa]
  41d05f:	sar    bl,0xd0
  41d062:	ror    DWORD PTR [ebp+ebp*8-0x66d4d90e],1
  41d069:	push   0xb8f1beb1
  41d06e:	jg     0x41d065
  41d070:	fbld   TBYTE PTR [ecx+0x55eee041]
  41d076:	aad    0x59
  41d078:	or     al,0xd4
  41d07a:	add    BYTE PTR [ebx+0x18],ch
  41d07d:	js     0x41d005
  41d07f:	ret    0x266
  41d082:	push   es
  41d083:	fcmovbe st,st(3)
  41d085:	mov    ebp,0xf2769462
  41d08a:	jecxz  0x41d0aa
  41d08c:	and    edx,DWORD PTR [edx-0x15900ca9]
  41d092:	sbb    DWORD PTR [eax+0x52],ecx
  41d095:	adc    esp,DWORD PTR [ebp+0xe]
  41d098:	push   ss
  41d099:	enter  0xbabc,0x89
  41d09d:	mov    ebx,edi
  41d09f:	ja     0x41d053
  41d0a1:	div    DWORD PTR [esi+0x7c]
  41d0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a5:	stos   BYTE PTR es:[edi],al
  41d0a6:	xchg   ecx,eax
  41d0a7:	xchg   BYTE PTR [esi],bh
  41d0a9:	mov    ah,0x19
  41d0ab:	aas    
  41d0ac:	cwde   
  41d0ad:	jmp    0xbed:0x1eac16e8
  41d0b4:	cs mov edx,0xd83812e1
  41d0ba:	fimul  DWORD PTR [ebx]
  41d0bc:	loopne 0x41d04c
  41d0be:	pop    esp
  41d0bf:	repz mov edi,0x60f5ed59
  41d0c5:	scas   al,BYTE PTR es:[edi]
  41d0c6:	outs   dx,DWORD PTR ds:[esi]
  41d0c7:	push   ebp
  41d0c8:	bound  ecx,QWORD PTR [esi]
  41d0ca:	or     BYTE PTR es:[esi],dh
  41d0cd:	mov    ah,0xf
  41d0cf:	or     BYTE PTR ds:0xd544f3e4,bh
  41d0d5:	sbb    edi,DWORD PTR [edx]
  41d0d7:	fimul  WORD PTR [edx+0x346fb22b]
  41d0dd:	fcom   DWORD PTR [edi+0x2d928613]
  41d0e3:	je     0x41d135
  41d0e5:	jns    0x41d110
  41d0e7:	or     DWORD PTR [ebp-0xcab3b96],edx
  41d0ed:	data16 (bad) 
  41d0ef:	(bad)  
  41d0f0:	lock fld TBYTE PTR [ebp+0x2e4b5605]
  41d0f7:	mov    edx,0x5f45703a
  41d0fc:	mov    esi,0x29e52a56
  41d101:	fucom  st(2)
  41d103:	adc    DWORD PTR [ebp+0x75c6444d],ebp
  41d109:	repnz dec edi
  41d10b:	mov    ebx,0x8473e770
  41d110:	sub    al,0x2d
  41d112:	push   edi
  41d113:	mov    ah,BYTE PTR [ebp-0x3b]
  41d116:	int    0x27
  41d118:	push   ss
  41d119:	jno    0x41d114
  41d11b:	pop    esp
  41d11c:	in     al,0x63
  41d11e:	mov    eax,0x2c4ee24
  41d123:	idiv   dh
  41d125:	jbe    0x41d170
  41d127:	or     bl,0x89
  41d12a:	adc    ch,0x90
  41d12d:	fstp   TBYTE PTR [esp+esi*2+0x14]
  41d131:	ins    BYTE PTR es:[edi],dx
  41d132:	mov    ebp,edx
  41d134:	gs push 0xdfceb1f
  41d13a:	jbe    0x41d12b
  41d13c:	cmp    eax,0xdca0607f
  41d141:	sub    bh,BYTE PTR [edx]
  41d143:	shl    DWORD PTR [edi+0x3dbb5005],0xd1
  41d14a:	sbb    al,0x8c
  41d14c:	or     BYTE PTR [esi+eiz*8-0x6dd19925],dh
  41d153:	inc    eax
  41d154:	push   esp
  41d155:	xor    BYTE PTR [ebx-0x32c85526],bh
  41d15b:	or     BYTE PTR [esi+0x634bb7b8],cl
  41d161:	sub    al,0x5b
  41d163:	fidivr WORD PTR [edx-0x34bd4514]
  41d169:	sbb    esi,ecx
  41d16b:	pushf  
  41d16c:	inc    ebx
  41d16d:	jo     0x41d16f
  41d16f:	mov    al,0xc8
  41d171:	arpl   bp,cx
  41d173:	sbb    eax,0xe90d44c9
  41d178:	test   ah,0x39
  41d17b:	int3   
  41d17c:	fs out dx,al
  41d17e:	dec    ecx
  41d17f:	stc    
  41d180:	rcr    BYTE PTR [edi-0x37c27962],0x91
  41d187:	jge    0x41d1e3
  41d189:	std    
  41d18a:	lea    ebp,[ecx-0x3a82b17d]
  41d190:	jge    0x41d1e1
  41d192:	or     eax,0x4477ee4b
  41d197:	scas   eax,DWORD PTR es:[edi]
  41d198:	les    esi,FWORD PTR [ebx+0x42]
  41d19b:	push   cs
  41d19c:	mov    ch,0x80
  41d19e:	ss stos BYTE PTR es:[edi],al
  41d1a0:	or     al,0x1f
  41d1a2:	xor    ah,BYTE PTR [ecx-0x13]
  41d1a5:	push   0x3a
  41d1a7:	dec    ebp
  41d1a8:	jp     0x41d177
  41d1aa:	shl    dh,0xfd
  41d1ad:	pop    ds
  41d1ae:	inc    ecx
  41d1af:	out    dx,al
  41d1b0:	and    cl,BYTE PTR [edi-0x3ee51c7e]
  41d1b6:	push   ss
  41d1b7:	sub    DWORD PTR [eax],eax
  41d1b9:	jge    0x41d15f
  41d1bb:	mov    esp,0x36ad63d
  41d1c0:	pop    ds
  41d1c1:	jae    0x41d22d
  41d1c3:	pop    esp
  41d1c4:	mov    dl,0x61
  41d1c6:	pop    edx
  41d1c7:	repnz out 0x75,eax
  41d1ca:	cmp    al,0xc1
  41d1cc:	lahf   
  41d1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ce:	pop    edi
  41d1cf:	(bad)  
  41d1d0:	cmp    al,0xf7
  41d1d2:	aad    0x6a
  41d1d4:	sub    al,BYTE PTR [esi+0x3a]
  41d1d7:	mov    esp,0x35a55068
  41d1dc:	pop    esp
  41d1dd:	jecxz  0x41d1bb
  41d1df:	add    edi,0x2f10a436
  41d1e5:	das    
  41d1e6:	add    esi,DWORD PTR [esi+eax*1]
  41d1e9:	lods   eax,DWORD PTR ds:[esi]
  41d1ea:	fiadd  WORD PTR [eax]
  41d1ec:	jl     0x41d23c
  41d1ee:	pop    ds
  41d1ef:	dec    esi
  41d1f0:	sbb    edi,DWORD PTR [ecx+0x60849dd0]
  41d1f6:	(bad)
  41d1f9:	imul   esp,esi,0xea75fcd
  41d1ff:	push   ebp
  41d200:	int3   
  41d201:	out    dx,al
  41d202:	dec    edx
  41d203:	mov    edi,esp
  41d205:	and    ch,ah
  41d207:	sbb    eax,0x37a02755
  41d20c:	inc    esp
  41d20d:	mov    BYTE PTR ds:0x8378496c,al
  41d213:	and    eax,0x470dc3fe
  41d218:	(bad)  
  41d219:	and    al,0x4a
  41d21b:	arpl   WORD PTR [edi+0x1f],bp
  41d21e:	arpl   WORD PTR [edi-0x28040b6a],si
  41d224:	jmp    0x41d210
  41d226:	cld    
  41d227:	sub    BYTE PTR [edx-0x7a],ch
  41d22a:	sbb    BYTE PTR [edi+0x19ec287],ch
  41d230:	call   0x7881c6d6
  41d235:	in     eax,dx
  41d236:	inc    ebp
  41d237:	inc    eax
  41d238:	int3   
  41d239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d23a:	dec    esi
  41d23b:	jp     0x41d22f
  41d23d:	cmp    bh,al
  41d23f:	cs aaa 
  41d241:	mov    esi,0x2879a243
  41d246:	in     eax,0x3f
  41d248:	mov    esp,ecx
  41d24a:	push   cs
  41d24b:	push   edx
  41d24c:	stc    
  41d24d:	out    0x8e,al
  41d24f:	inc    edi
  41d250:	fdiv   DWORD PTR [ecx+edi*8]
  41d253:	cwde   
  41d254:	sub    al,0xfd
  41d256:	jle    0x41d248
  41d258:	cmp    eax,0x2becac4a
  41d25d:	pop    edi
  41d25e:	fstp   QWORD PTR [ebp-0x215839a3]
  41d264:	into   
  41d265:	std    
  41d266:	and    al,0x5
  41d268:	jns    0x41d21e
  41d26a:	xchg   ebp,eax
  41d26b:	inc    edi
  41d26d:	mov    dl,0x7f
  41d26f:	xchg   ebx,eax
  41d270:	adc    BYTE PTR [edx-0x7d992a5a],cl
  41d276:	in     eax,0x92
  41d278:	call   0x130f2f3c
  41d27d:	rcl    BYTE PTR [ecx+0xa],1
  41d280:	push   ecx
  41d281:	lea    ebx,[ecx-0x50]
  41d284:	mov    bl,BYTE PTR [eax+esi*2+0x3f]
  41d288:	adc    eax,0xd22ffcbd
  41d28d:	dec    eax
  41d28e:	outs   dx,BYTE PTR ds:[esi]
  41d28f:	int    0xa
  41d291:	push   ss
  41d292:	mov    esi,0xd15a5ec8
  41d297:	adc    edx,DWORD PTR [ebx+0x6462f8a1]
  41d29d:	xchg   DWORD PTR ds:0x4e9a4889,esp
  41d2a3:	cld    
  41d2a4:	cmp    dl,cl
  41d2a6:	cmp    ah,BYTE PTR [edx]
  41d2a8:	dec    ecx
  41d2a9:	sbb    eax,0x12b6128a
  41d2ae:	enter  0x102,0xa4
  41d2b2:	dec    ebx
  41d2b3:	or     dh,cl
  41d2b5:	jo     0x41d2a7
  41d2b7:	cmp    DWORD PTR [esi+0x59],ebx
  41d2ba:	mov    esi,0xbf2518d4
  41d2bf:	retf   0x2762
  41d2c2:	mov    dh,0x66
  41d2c4:	imul   edi
  41d2c6:	or     BYTE PTR [esi+0x7d],bl
  41d2c9:	hlt    
  41d2ca:	mov    bh,0xc9
  41d2cc:	adc    eax,0xa1273720
  41d2d1:	mov    al,0xf5
  41d2d3:	add    BYTE PTR [eax-0x3],0x2
  41d2d7:	enter  0xce8,0x88
  41d2db:	lahf   
  41d2dc:	xor    dl,ch
  41d2de:	outs   dx,BYTE PTR ds:[esi]
  41d2df:	fsub   st(5),st
  41d2e1:	mov    esp,0x862bbac
  41d2e6:	mov    ah,0xc
  41d2e8:	in     eax,dx
  41d2e9:	shr    BYTE PTR [ebx+ebp*8+0x7d4dde2],1
  41d2f0:	jns    0x41d2fb
  41d2f2:	loopne 0x41d364
  41d2f4:	lods   eax,DWORD PTR ds:[esi]
  41d2f5:	inc    ecx
  41d2f6:	sbb    cl,BYTE PTR [ebx]
  41d2f8:	xor    DWORD PTR [eax],ebp
  41d2fa:	pop    eax
  41d2fb:	loope  0x41d27d
  41d2fd:	push   esi
  41d2fe:	shl    ebx,1
  41d300:	and    eax,0x772c4246
  41d305:	hlt    
  41d306:	adc    DWORD PTR [esi+0x79aa6263],ebx
  41d30c:	push   eax
  41d30d:	add    ebx,DWORD PTR [esi-0x2efe1c2d]
  41d313:	sub    BYTE PTR [edx+0x774149bf],al
  41d319:	gs imul edx,ecx,0x76
  41d31d:	popa   
  41d31e:	mov    WORD PTR [edx+edi*4+0x26],?
  41d322:	repz adc ecx,DWORD PTR [esi+0xd]
  41d326:	or     BYTE PTR [ebp-0x46427763],ah
  41d32c:	stos   DWORD PTR es:[edi],eax
  41d32d:	enter  0x83a8,0x1f
  41d331:	into   
  41d332:	repz test BYTE PTR [edx],bh
  41d335:	xchg   BYTE PTR [edx+0xb],al
  41d338:	aas    
  41d339:	xchg   ebx,eax
  41d33a:	inc    edi
  41d33b:	rcr    DWORD PTR [edx+0xa1d9cb4],0x29
  41d342:	popa   
  41d343:	pop    ecx
  41d344:	dec    esi
  41d345:	and    DWORD PTR [esi],ebx
  41d347:	pushf  
  41d348:	adc    BYTE PTR [edx+esi*4+0x4e],0x7a
  41d34d:	int    0x79
  41d34f:	mov    bl,0x2f
  41d351:	cmp    BYTE PTR [ebx],bl
  41d353:	add    ch,BYTE PTR ds:0x43a16da0
  41d359:	xlat   BYTE PTR ds:[ebx]
  41d35a:	adc    DWORD PTR [bx+si],ecx
  41d35d:	into   
  41d35e:	pop    edi
  41d35f:	sbb    al,0xc6
  41d361:	jl     0x41d348
  41d363:	cld    
  41d364:	xchg   edx,eax
  41d365:	mov    al,BYTE PTR [edi-0x5d841d86]
  41d36b:	mov    ecx,0xce9bac89
  41d370:	mov    eax,0xe2a736c1
  41d375:	ins    BYTE PTR es:[edi],dx
  41d376:	mov    ebx,DWORD PTR gs:[esi-0x58]
  41d37a:	jecxz  0x41d3ec
  41d37c:	xchg   esi,eax
  41d37d:	fwait
  41d37e:	push   ds
  41d37f:	fcomp  DWORD PTR [eax]
  41d381:	cmp    al,0xa9
  41d383:	in     al,dx
  41d384:	fisttp DWORD PTR [ebx]
  41d386:	aaa    
  41d387:	enter  0x5744,0x5f
  41d38b:	push   ebx
  41d38c:	cmp    BYTE PTR [eax],ah
  41d38e:	mov    ecx,0x9d9210e3
  41d393:	jecxz  0x41d3cc
  41d395:	inc    esp
  41d396:	int    0xa7
  41d398:	mov    bh,0x8e
  41d39a:	into   
  41d39b:	or     al,0x7
  41d39d:	out    dx,al
  41d39e:	push   0xc8d034fb
  41d3a3:	sbb    ebp,DWORD PTR [eax]
  41d3a5:	mov    DWORD PTR [ebx-0x29],0xe5549e8a
  41d3ac:	iret   
  41d3ad:	dec    esp
  41d3ae:	repz cmp edi,0x12
  41d3b2:	cmc    
  41d3b3:	mov    esi,0xd7a30771
  41d3b8:	xor    eax,0x4a2589f2
  41d3bd:	dec    esi
  41d3be:	cmp    al,0x38
  41d3c0:	or     al,0x3c
  41d3c2:	lods   al,BYTE PTR ds:[esi]
  41d3c3:	and    DWORD PTR [edx+0x4dcb9cb1],edx
  41d3c9:	xor    eax,0xa209a994
  41d3ce:	test   edx,ebx
  41d3d0:	cmp    al,ch
  41d3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d3:	pop    ebx
  41d3d4:	sub    BYTE PTR [ecx+0x25],bh
  41d3d7:	stos   DWORD PTR es:[edi],eax
  41d3d8:	(bad)  
  41d3d9:	shl    DWORD PTR [ecx-0x4a50337a],cl
  41d3df:	imul   edx,DWORD PTR [ecx],0x15
  41d3e2:	imul   ebp,DWORD PTR [edi+0x7fde87d1],0x6f07e0a3
  41d3ec:	add    al,0xa2
  41d3ee:	xlat   BYTE PTR ds:[ebx]
  41d3ef:	push   ds
  41d3f0:	adc    ch,bh
  41d3f2:	fcom   DWORD PTR [ebp-0x59b7eef2]
  41d3f8:	push   ds
  41d3f9:	xchg   edi,eax
  41d3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fb:	pop    esi
  41d3fc:	add    DWORD PTR [edi+eiz*8-0x6b],0x4a
  41d401:	pop    ebp
  41d402:	js     0x41d476
  41d404:	(bad)  
  41d405:	pop    esi
  41d406:	xchg   esp,eax
  41d407:	jp     0x41d41a
  41d409:	adc    al,0x93
  41d40b:	ins    DWORD PTR es:[edi],dx
  41d40c:	and    bl,ah
  41d40e:	(bad)  
  41d40f:	stos   BYTE PTR es:[edi],al
  41d410:	jmp    0x41d486
  41d412:	(bad)  
  41d413:	sbb    DWORD PTR [ebx],ebp
  41d415:	mov    al,0x5f
  41d417:	push   ebp
  41d418:	mov    al,0x4e
  41d41a:	sub    BYTE PTR [esi+0x32],al
  41d41d:	push   0x6
  41d41f:	retf   0xe1f5
  41d422:	pushf  
  41d423:	add    BYTE PTR es:0xfb759f78,bl
  41d42a:	sub    ch,BYTE PTR [edx+0x1d]
  41d42d:	dec    edi
  41d42e:	fistp  DWORD PTR [edx]
  41d430:	xor    bh,0x52
  41d433:	and    ebx,0xffffff85
  41d436:	xlat   BYTE PTR ds:[ebx]
  41d437:	es mov ebp,0xd41ef047
  41d43d:	mov    edx,0x7f68f91b
  41d442:	div    BYTE PTR [esi]
  41d444:	or     BYTE PTR [ebp+0xb],ah
  41d447:	call   0x3b43:0x4904aca5
  41d44e:	outs   dx,BYTE PTR ds:[esi]
  41d44f:	std    
  41d450:	aad    0xef
  41d452:	adc    BYTE PTR [ebp-0x27],ah
  41d455:	jle    0x41d42b
  41d457:	out    dx,al
  41d458:	nop
  41d459:	out    dx,al
  41d45a:	mov    ebp,0x9e73a81b
  41d45f:	icebp  
  41d460:	cmp    eax,0x25d9e82b
  41d465:	stc    
  41d466:	push   edx
  41d467:	repnz retf 0xa6bc
  41d46b:	aam    0xfc
  41d46d:	aam    0xd
  41d46f:	push   es
  41d470:	xor    BYTE PTR [edi+eiz*2],dl
  41d473:	pop    eax
  41d474:	cmp    al,0x5e
  41d476:	jg     0x41d42a
  41d478:	push   ds
  41d479:	test   BYTE PTR [edi+0x57938b05],al
  41d47f:	adc    BYTE PTR [edi-0x7df78546],dh
  41d485:	pop    ecx
  41d486:	in     al,dx
  41d487:	or     eax,0xcc6f5f7c
  41d48c:	xor    al,0xa3
  41d48e:	mov    ebx,0x94dee335
  41d493:	icebp  
  41d494:	pop    edx
  41d495:	jae    0x41d4a2
  41d497:	(bad)  
  41d498:	hlt    
  41d499:	sbb    eax,0x54c1ca27
  41d49e:	xlat   BYTE PTR ds:[ebx]
  41d49f:	inc    ebp
  41d4a0:	or     ebx,DWORD PTR [ebx]
  41d4a2:	outs   dx,BYTE PTR ds:[esi]
  41d4a3:	pop    es
  41d4a4:	lds    ecx,FWORD PTR ds:0x93a75643
  41d4aa:	loope  0x41d44c
  41d4ac:	gs das 
  41d4ae:	push   0xffffff96
  41d4b0:	(bad)  
  41d4b1:	mov    dh,0x58
  41d4b3:	(bad)  
  41d4b5:	and    ecx,DWORD PTR [esi+0x67]
  41d4b8:	jnp    0x41d43a
  41d4ba:	add    BYTE PTR [ebx+ecx*1-0x2dbfcb6b],0x83
  41d4c2:	ins    BYTE PTR es:[edi],dx
  41d4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c4:	add    dl,BYTE PTR [edi+ebp*2]
  41d4c7:	pushf  
  41d4c8:	neg    BYTE PTR [ecx+0x23]
  41d4cb:	mov    DWORD PTR [esi+0x7],esp
  41d4ce:	xchg   ebx,eax
  41d4cf:	xchg   esi,eax
  41d4d0:	adc    DWORD PTR [ebx],esi
  41d4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d3:	cmp    al,BYTE PTR [edi-0x5c]
  41d4d6:	repz mov dh,0x2
  41d4d9:	xchg   esi,eax
  41d4da:	bound  ebx,QWORD PTR [eax+esi*1]
  41d4dd:	push   ecx
  41d4de:	(bad)  
  41d4df:	lock out 0x56,al
  41d4e2:	push   cs
  41d4e3:	xor    al,0x16
  41d4e5:	sbb    BYTE PTR ds:[eax-0x378d87ce],0x9c
  41d4ed:	mov    bl,0xf8
  41d4ef:	retf   
  41d4f0:	pop    edi
  41d4f1:	and    ah,BYTE PTR [ebp+0xa]
  41d4f4:	add    ebx,eax
  41d4f6:	dec    ecx
  41d4f7:	dec    ebx
  41d4f8:	in     eax,0x2a
  41d4fa:	add    esi,DWORD PTR [esp+edx*1-0xd625c73]
  41d501:	in     al,dx
  41d502:	shr    DWORD PTR [ecx-0x6b],1
  41d505:	retf   
  41d506:	adc    DWORD PTR [ecx+0x3db55387],esi
  41d50c:	and    ch,0x93
  41d50f:	fstp   TBYTE PTR [eax+0x4c6e35e6]
  41d515:	xor    DWORD PTR [ebx],eax
  41d517:	xor    BYTE PTR [ebp-0x80],0x38
  41d51b:	jp     0x41d4e9
  41d51d:	jno    0x41d53c
  41d51f:	add    al,0x1a
  41d521:	pop    ds
  41d522:	adc    edx,DWORD PTR [edi-0x41]
  41d525:	jb     0x41d574
  41d527:	inc    eax
  41d528:	sub    eax,0x672720d2
  41d52d:	(bad)  
  41d52e:	js     0x41d518
  41d530:	mov    dl,0x2a
  41d532:	mov    dl,0xaa
  41d534:	inc    esp
  41d535:	(bad)  
  41d536:	mov    ecx,0x8ad8fb8b
  41d53b:	or     ebx,DWORD PTR [esi+0x3bfa53be]
  41d541:	jbe    0x41d5ac
  41d543:	addr16 int 0xe2
  41d546:	test   eax,0x355e4ea
  41d54b:	adc    al,0x1a
  41d54d:	(bad)  
  41d54e:	cmp    al,BYTE PTR [ecx-0x52feb152]
  41d554:	setns  BYTE PTR [edx+ebp*1+0x51]
  41d559:	aam    0xf3
  41d55b:	call   0x2c91ccb5
  41d560:	jmp    0x41d52e
  41d562:	icebp  
  41d563:	(bad)  
  41d564:	sbb    BYTE PTR [edx],bl
  41d566:	mov    al,ds:0xc1c292a
  41d56b:	stc    
  41d56c:	cmp    eax,DWORD PTR [eax+0x57]
  41d56f:	nop
  41d570:	push   ebx
  41d571:	pop    eax
  41d572:	push   ebx
  41d573:	mov    dl,0x3f
  41d575:	push   eax
  41d576:	sar    BYTE PTR [ecx],1
  41d578:	mov    esp,0x2457a499
  41d57d:	push   cs
  41d57e:	push   esi
  41d57f:	rol    BYTE PTR [ecx+0x17c688c7],cl
  41d585:	sbb    eax,0x35d0a2f0
  41d58a:	addr16 xchg esi,eax
  41d58c:	sbb    al,0xe5
  41d58e:	repz xor bh,al
  41d591:	jl     0x41d516
  41d593:	pusha  
  41d594:	cwde   
  41d595:	pop    esi
  41d596:	sbb    dl,BYTE PTR [ecx-0x24]
  41d599:	adc    bh,BYTE PTR [ebx]
  41d59b:	(bad)  
  41d59c:	mov    dl,0x2b
  41d59e:	push   0x6e882b44
  41d5a3:	in     eax,0x92
  41d5a5:	hlt    
  41d5a6:	dec    ecx
  41d5a7:	pop    ebp
  41d5a8:	leave  
  41d5a9:	(bad)  
  41d5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ab:	cld    
  41d5ac:	and    al,0xe6
  41d5ae:	xchg   ebx,eax
  41d5af:	into   
  41d5b0:	mov    ch,0xbd
  41d5b2:	xor    ah,BYTE PTR [edx]
  41d5b4:	je     0x41d5c1
  41d5b6:	shl    BYTE PTR [ebp+0x7f],cl
  41d5b9:	adc    eax,0xd4811167
  41d5be:	fimul  WORD PTR [esi-0x68]
  41d5c1:	jge    0x41d5e6
  41d5c3:	js     0x41d5f9
  41d5c5:	mov    cl,0xf1
  41d5c7:	add    ecx,DWORD PTR [eax]
  41d5c9:	push   0xffffffd2
  41d5cb:	xbegin 0x26bc9cab
  41d5d1:	out    0xba,al
  41d5d3:	mov    esp,0x75da1cdd
  41d5d8:	push   0xcf593cbc
  41d5dd:	mov    al,0x96
  41d5df:	jo     0x41d5d0
  41d5e1:	xchg   ebx,eax
  41d5e2:	ror    DWORD PTR [edi],0x14
  41d5e5:	outs   dx,BYTE PTR ds:[esi]
  41d5e6:	push   esi
  41d5e7:	pusha  
  41d5e8:	es mov eax,0xf2f67b49
  41d5ee:	iret   
  41d5ef:	loope  0x41d620
  41d5f1:	leave  
  41d5f2:	sbb    eax,0xbbf375a
  41d5f7:	mov    dh,0x7d
  41d5f9:	ret    
  41d5fa:	and    DWORD PTR [edx+0x64],0xffffffc6
  41d5fe:	pop    ds
  41d5ff:	ins    BYTE PTR es:[edi],dx
  41d600:	adc    eax,0x5fa85a55
  41d605:	or     BYTE PTR [ebx+0x69],dh
  41d608:	adc    DWORD PTR [esi-0x3e],ebx
  41d60b:	pop    ebp
  41d60c:	int3   
  41d60d:	pop    ds
  41d60e:	sbb    eax,0x9094db8b
  41d613:	xor    ecx,DWORD PTR [esi+0x7f9cba45]
  41d619:	adc    al,0x8e
  41d61b:	enter  0x6f12,0xb5
  41d61f:	adc    bl,BYTE PTR [esi-0x65]
  41d622:	aad    0xdf
  41d624:	fadd   DWORD PTR [edx-0x17]
  41d627:	push   0x55
  41d629:	mov    ecx,DWORD PTR [ebx]
  41d62b:	lea    eax,[ebx-0x2ac48335]
  41d631:	push   esi
  41d632:	aaa    
  41d633:	or     ch,dl
  41d635:	and    al,0xe7
  41d637:	mov    bl,BYTE PTR [esi]
  41d639:	mov    bl,0x31
  41d63b:	mov    ds:0x8e3f45f6,al
  41d640:	test   DWORD PTR [edx-0x79e198b8],ecx
  41d646:	xchg   ebp,eax
  41d647:	mov    BYTE PTR ds:0xe41f5065,bl
  41d64d:	sub    esp,DWORD PTR [esi]
  41d64f:	sbb    eax,0x132787c7
  41d654:	fmul   DWORD PTR [eax]
  41d656:	dec    esp
  41d657:	xchg   ebx,eax
  41d658:	sahf   
  41d659:	push   ecx
  41d65a:	stos   BYTE PTR es:[edi],al
  41d65b:	mov    ecx,0x68fce5dd
  41d660:	pop    ecx
  41d661:	xor    eax,0xec80096d
  41d666:	and    esi,DWORD PTR [ecx+eax*8-0x5069155f]
  41d66d:	sahf   
  41d66e:	mov    ebx,0x842f2fc9
  41d673:	out    dx,al
  41d674:	inc    ecx
  41d675:	out    0x52,eax
  41d677:	test   al,0xe7
  41d679:	dec    ebx
  41d67a:	sbb    eax,0xb698c1d6
  41d67f:	sub    BYTE PTR [ecx],0x45
  41d682:	jecxz  0x41d6e3
  41d684:	(bad)  
  41d685:	idiv   DWORD PTR [ebp+0x4e]
  41d688:	jle    0x41d672
  41d68a:	repnz push edx
  41d68c:	push   esp
  41d68d:	call   edx
  41d68f:	outs   dx,DWORD PTR ds:[esi]
  41d690:	mov    edx,0x6899c203
  41d695:	and    eax,0x4eea2b4b
  41d69a:	adc    eax,0xc3c2a21c
  41d69f:	and    bh,0x0
  41d6a2:	out    0x6b,al
  41d6a4:	inc    eax
  41d6a5:	mov    DWORD PTR [esi],esi
  41d6a7:	into   
  41d6a8:	(bad)  
  41d6a9:	or     BYTE PTR [edx+edi*4],ah
  41d6ac:	shl    DWORD PTR [esi-0x69],0x69
  41d6b0:	pop    esi
  41d6b1:	test   al,0xc9
  41d6b3:	push   0xbe689a0d
  41d6b8:	xchg   BYTE PTR [esi+0xeeb1841],bh
  41d6be:	push   cs
  41d6bf:	xor    esi,DWORD PTR [edi]
  41d6c1:	sub    BYTE PTR [eax-0x31],ch
  41d6c4:	sub    dl,bh
  41d6c6:	sbb    esp,DWORD PTR [esi+0x3df98f77]
  41d6cc:	mov    esi,0x46c7e39c
  41d6d1:	and    al,0xd1
  41d6d3:	fsubrp st(3),st
  41d6d5:	mov    edi,0x96d12a9c
  41d6da:	frstor [ecx+0x7f37ce74]
  41d6e0:	xor    BYTE PTR [edi+0x53],bh
  41d6e3:	rcl    BYTE PTR [ebp+0x68],1
  41d6e6:	shr    BYTE PTR [esi],0xae
  41d6e9:	aam    0x8c
  41d6eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ec:	scas   al,BYTE PTR es:[edi]
  41d6ed:	in     eax,0xfc
  41d6ef:	xchg   edi,eax
  41d6f0:	jo     0x41d71e
  41d6f2:	ds mov esi,0x6be5e720
  41d6f8:	inc    esp
  41d6f9:	dec    esi
  41d6fa:	dec    esi
  41d6fb:	and    dl,cl
  41d6fd:	cld    
  41d6fe:	jae    0x41d6c0
  41d700:	xor    ecx,DWORD PTR [ebp-0x64bde772]
  41d706:	cwde   
  41d707:	sub    DWORD PTR [edx+0x52b1e28e],esi
  41d70d:	int3   
  41d70e:	repz and eax,0x5f66669f
  41d714:	xchg   BYTE PTR [ebx-0x3ceb0319],dl
  41d71a:	adc    BYTE PTR [esi+ecx*2+0x1365c75c],al
  41d721:	test   BYTE PTR [eax-0x72],ch
  41d724:	ins    BYTE PTR es:[edi],dx
  41d725:	mov    dh,0x7c
  41d727:	inc    ecx
  41d728:	call   DWORD PTR [eax]
  41d72a:	mov    eax,0xe7c354b8
  41d72f:	sbb    al,0xb9
  41d731:	push   es
  41d732:	jne    0x41d76d
  41d734:	push   ebx
  41d735:	fadd   DWORD PTR [ebp+0x270dfc81]
  41d73b:	mov    edx,DWORD PTR [eax+0x7]
  41d73e:	(bad)  
  41d73f:	mov    edi,0xa2e42a9d
  41d744:	dec    ebx
  41d745:	push   ecx
  41d746:	mov    eax,DWORD PTR [eax+0x37a20a82]
  41d74c:	mov    dl,0xc6
  41d74e:	add    DWORD PTR [ecx+0xc],ecx
  41d751:	repz imul ebx,DWORD PTR [eax+0x18],0x12
  41d756:	jo     0x41d7d2
  41d758:	add    BYTE PTR [ebp+0x24be00c],0xab
  41d75f:	mov    DWORD PTR [edx],esp
  41d761:	xor    eax,0x97b906de
  41d766:	clc    
  41d767:	ret    0x51dc
  41d76a:	fs xchg edx,eax
  41d76c:	mov    ch,bl
  41d76e:	and    al,0x31
  41d770:	fcomi  st,st(4)
  41d772:	rol    DWORD PTR [ebx-0x2019e37b],cl
  41d778:	iret   
  41d779:	pop    ebp
  41d77a:	inc    esi
  41d77b:	lea    ebp,gs:[ebx]
  41d77e:	cmovne edx,DWORD PTR [ebx]
  41d781:	cmp    dh,BYTE PTR [ebp+0x5e5cb5e6]
  41d787:	dec    edi
  41d788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d789:	(bad)  
  41d78a:	aam    0x8f
  41d78c:	pusha  
  41d78d:	inc    esi
  41d78e:	fiadd  DWORD PTR [eax]
  41d790:	pop    edx
  41d791:	xchg   edx,eax
  41d792:	mov    edx,0x33df8ab5
  41d797:	dec    ebx
  41d798:	iret   
  41d799:	lea    ecx,ds:0x2edaf7e6
  41d79f:	mov    edi,0x4204fc55
  41d7a4:	adc    DWORD PTR [esi-0xa8d8caf],esi
  41d7aa:	or     ebp,DWORD PTR [ecx+edx*2-0x42]
  41d7ae:	add    ebp,esi
  41d7b0:	mov    BYTE PTR [ebp-0x44],bl
  41d7b3:	aam    0xa6
  41d7b5:	inc    edx
  41d7b6:	in     al,0xcf
  41d7b8:	push   ebx
  41d7b9:	xor    eax,0xdbda3952
  41d7be:	sub    al,0x84
  41d7c0:	jnp    0x41d7e0
  41d7c2:	jne    0x41d815
  41d7c4:	lahf   
  41d7c5:	outs   dx,BYTE PTR ds:[esi]
  41d7c6:	fucomip st,st(1)
  41d7c8:	sbb    BYTE PTR [edi+0x20],0xf5
  41d7cc:	xor    ebx,DWORD PTR [ebp-0x37f67fbc]
  41d7d2:	icebp  
  41d7d3:	sub    DWORD PTR [edx+ebp*4],eax
  41d7d6:	in     eax,0x60
  41d7d8:	sbb    al,0x85
  41d7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7db:	mov    ebx,DWORD PTR [ecx+esi*1-0x5b]
  41d7df:	gs stos BYTE PTR es:[edi],al
  41d7e1:	ja     0x41d7bf
  41d7e3:	aam    0x7e
  41d7e5:	fsub   QWORD PTR [esi+0x43]
  41d7e8:	icebp  
  41d7e9:	shl    DWORD PTR [esi],0x3
  41d7ec:	inc    DWORD PTR [edx]
  41d7ee:	and    al,0xb4
  41d7f0:	xor    cl,bl
  41d7f2:	cmp    ebx,esi
  41d7f4:	mov    edi,ebp
  41d7f6:	sbb    ebx,DWORD PTR [edx]
  41d7f8:	(bad)  
  41d7f9:	lods   eax,DWORD PTR ds:[esi]
  41d7fa:	xchg   edx,eax
  41d7fb:	es test al,0xcb
  41d7fe:	out    dx,al
  41d7ff:	int    0xd9
  41d801:	rol    edx,cl
  41d803:	nop
  41d804:	add    al,0x16
  41d806:	jno    0x41d7ff
  41d808:	xchg   ecx,eax
  41d809:	inc    esp
  41d80a:	scas   al,BYTE PTR es:[edi]
  41d80b:	cs enter 0x7382,0xbd
  41d810:	clc    
  41d811:	inc    eax
  41d812:	daa    
  41d813:	ret    
  41d814:	mov    esp,0xe696dbfc
  41d819:	cmp    edi,edi
  41d81b:	jmp    0x41d815
  41d81d:	adc    eax,0xfb21bf51
  41d822:	mov    dl,cl
  41d824:	mov    ecx,0x28dcd093
  41d829:	cmp    ch,BYTE PTR [ebx]
  41d82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d82c:	test   al,0x46
  41d82e:	mul    BYTE PTR [eax+0x17]
  41d831:	rcl    DWORD PTR [ebx+0x73c32a6a],0xb8
  41d838:	push   es
  41d839:	mov    dl,0xa1
  41d83b:	sbb    BYTE PTR [ecx-0x1cfb198],cl
  41d841:	push   eax
  41d842:	mov    esp,0x208e2f6f
  41d847:	xor    BYTE PTR [eax],dl
  41d849:	xor    DWORD PTR [edx-0x4565f117],0xffffff98
  41d850:	mov    eax,0xa1aca1d9
  41d855:	ror    ebx,1
  41d857:	inc    ebp
  41d858:	jmp    0x41d8d5
  41d85a:	scas   eax,DWORD PTR es:[edi]
  41d85b:	or     DWORD PTR [eax-0x24111c90],edi
  41d861:	pop    edx
  41d862:	(bad)  
  41d863:	gs sub al,0x9d
  41d866:	retf   0x887d
  41d869:	pop    eax
  41d86a:	test   BYTE PTR [esi],bh
  41d86c:	(bad)  
  41d86d:	stos   DWORD PTR es:[edi],eax
  41d86e:	imul   ecx,DWORD PTR [ecx+0x70a8fb0e],0xa
  41d875:	xchg   edx,eax
  41d876:	xlat   BYTE PTR ds:[ebx]
  41d877:	bound  edx,QWORD PTR [edx+0x2c]
  41d87a:	test   ebp,0xf91d7b2d
  41d880:	dec    esp
  41d881:	fwait
  41d882:	pop    ds
  41d883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d884:	ins    DWORD PTR es:[edi],dx
  41d885:	repz xchg edx,eax
  41d887:	js     0x41d8ac
  41d889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d88a:	jns    0x41d886
  41d88c:	arpl   WORD PTR [eax],dx
  41d88e:	cdq    
  41d88f:	stos   BYTE PTR es:[edi],al
  41d890:	xchg   edi,eax
  41d891:	inc    edi
  41d892:	enter  0xa471,0xfe
  41d896:	dec    edx
  41d897:	push   DWORD PTR [ecx+0x4f95bdb7]
  41d89d:	in     al,dx
  41d89e:	hlt    
  41d89f:	lahf   
  41d8a0:	enter  0x9ed4,0xb1
  41d8a4:	retf   
  41d8a5:	rsqrtps xmm1,xmm6
  41d8a8:	std    
  41d8a9:	inc    ebx
  41d8aa:	mov    bh,0x4d
  41d8ac:	inc    eax
  41d8ad:	daa    
  41d8ae:	sbb    DWORD PTR [ebx-0x24],edi
  41d8b1:	dec    eax
  41d8b2:	mov    esp,0x96f97a57
  41d8b7:	int3   
  41d8b8:	sbb    BYTE PTR [ebx+0x440f2737],al
  41d8be:	(bad)  
  41d8bf:	jo     0x41d855
  41d8c1:	mov    ds:0x4fa53f5e,eax
  41d8c6:	adc    eax,0x3f32cf
  41d8cb:	mov    ch,0xcd
  41d8cd:	xor    BYTE PTR [ebx],bl
  41d8cf:	and    al,0xe2
  41d8d1:	lahf   
  41d8d2:	xor    eax,0x7020ffae
  41d8d7:	mov    eax,ds:0x7bfe2ba4
  41d8dc:	xchg   edi,eax
  41d8dd:	out    0xda,eax
  41d8df:	(bad)  
  41d8e0:	sbb    DWORD PTR [esi-0x55cae007],edi
  41d8e6:	lahf   
  41d8e7:	sbb    edx,DWORD PTR [ecx-0x8b79ab6]
  41d8ed:	mov    bl,0xc0
  41d8ef:	xchg   edi,eax
  41d8f0:	xchg   DWORD PTR [esp+esi*2+0x42],ebp
  41d8f4:	lods   eax,DWORD PTR ds:[esi]
  41d8f5:	inc    ebp
  41d8f6:	repz jmp 0x29dbd1ab
  41d8fc:	out    dx,eax
  41d8fd:	(bad)
  41d901:	mov    ds:0x77c8a324,eax
  41d906:	sbb    eax,0x7c6ab352
  41d90b:	mov    ?,WORD PTR [eax+0x45fa0c2a]
  41d911:	leave  
  41d912:	shr    DWORD PTR [edi+0x75116a8c],cl
  41d918:	push   ebx
  41d919:	xor    al,0x3c
  41d91b:	or     BYTE PTR [edx+0x4d],bh
  41d91e:	sbb    al,0x75
  41d920:	cwde   
  41d921:	dec    ebx
  41d922:	cmp    DWORD PTR [esi+edi*2],esi
  41d925:	inc    edi
  41d926:	mov    ds:0xc6760757,eax
  41d92b:	pop    ds
  41d92c:	test   DWORD PTR [ecx-0x6e],0x44d6e8e2
  41d933:	and    eax,0x736580ab
  41d938:	inc    edi
  41d939:	push   ss
  41d93a:	ins    BYTE PTR es:[edi],dx
  41d93b:	mov    gs,WORD PTR [edx]
  41d93d:	add    ebp,DWORD PTR [esi-0x1e844492]
  41d943:	pop    ebx
  41d944:	inc    esp
  41d945:	mov    edi,0x9f7c3c95
  41d94a:	pop    edi
  41d94b:	xchg   ebp,eax
  41d94c:	je     0x41d951
  41d94e:	in     eax,0x3f
  41d950:	rcr    BYTE PTR [ecx+ebx*8],cl
  41d953:	adc    DWORD PTR [esi],esp
  41d955:	cmp    eax,0x8e1604b9
  41d95a:	mov    eax,0x91c29163
  41d95f:	xlat   BYTE PTR ds:[ebx]
  41d960:	sub    ah,dh
  41d962:	xchg   esp,eax
  41d963:	sbb    eax,0x3539d415
  41d968:	(bad)  
  41d969:	fld    QWORD PTR [ecx-0x38]
  41d96c:	enter  0x4aea,0xa6
  41d970:	pop    esi
  41d971:	les    ecx,FWORD PTR [esi]
  41d973:	mov    ah,BYTE PTR [ebx+0x5a006d8f]
  41d979:	dec    ecx
  41d97a:	push   es
  41d97b:	stc    
  41d97c:	popf   
  41d97d:	mov    edi,0xaaca7f
  41d982:	mov    al,ds:0x760c0ff6
  41d987:	data16 fist DWORD PTR [ecx+0x33]
  41d98b:	pop    ebp
  41d98c:	mov    al,0xc2
  41d98e:	xor    al,0xa8
  41d990:	push   edi
  41d991:	push   cs
  41d992:	pop    ebx
  41d993:	and    al,0xeb
  41d995:	jae    0x41da0e
  41d997:	aad    0x2f
  41d999:	adc    edi,ebx
  41d99b:	sub    DWORD PTR [ecx],ecx
  41d99d:	fst    QWORD PTR fs:[ebx+eax*8-0x312cca62]
  41d9a5:	bound  esp,QWORD PTR [edx+ebp*1+0x5f]
  41d9a9:	adc    esp,ebx
  41d9ab:	cmc    
  41d9ac:	loope  0x41da0f
  41d9ae:	inc    edi
  41d9af:	(bad)  
  41d9b1:	cld    
  41d9b2:	cli    
  41d9b3:	sbb    BYTE PTR [ebp-0x3f],ah
  41d9b6:	ja     0x41da13
  41d9b8:	or     eax,0xba35ceac
  41d9bd:	push   0x1c2226af
  41d9c2:	pop    ebx
  41d9c3:	xchg   esp,eax
  41d9c4:	or     eax,DWORD PTR [edx+0x638f986]
  41d9ca:	pop    ebp
  41d9cb:	icebp  
  41d9cc:	sub    DWORD PTR [edi],eax
  41d9ce:	hlt    
  41d9cf:	in     eax,dx
  41d9d0:	and    BYTE PTR ds:0xdb6d2504,bh
  41d9d6:	retf   
  41d9d7:	xchg   BYTE PTR [ebx+0x5e],bl
  41d9da:	pop    ebp
  41d9db:	xor    BYTE PTR [ecx],dl
  41d9dd:	shl    ebp,1
  41d9df:	adc    BYTE PTR [ebp-0x66],ah
  41d9e2:	data16 jbe 0x41da0f
  41d9e5:	xor    BYTE PTR [eax-0x70cf7960],al
  41d9eb:	pop    es
  41d9ec:	sbb    BYTE PTR [ebx+0x6bbccafa],0x42
  41d9f3:	lea    eax,[esi]
  41d9f5:	sahf   
  41d9f6:	push   ebx
  41d9f7:	dec    ebp
  41d9f8:	xchg   edx,eax
  41d9f9:	sar    BYTE PTR [edx],cl
  41d9fb:	out    0x83,al
  41d9fd:	xor    BYTE PTR [eax],0xcd
  41da00:	jp     0x41da1d
  41da02:	sahf   
  41da03:	or     bh,bl
  41da05:	test   DWORD PTR [edx-0x41176fce],ebx
  41da0b:	mov    ebp,DWORD PTR [edx]
  41da0d:	test   eax,0x70fed74c
  41da12:	fs loop 0x41da3d
  41da15:	and    eax,0x688a4502
  41da1a:	dec    DWORD PTR [ecx-0x3e]
  41da1d:	sahf   
  41da1e:	jle    0x41da3a
  41da20:	sub    al,0x67
  41da22:	mov    ch,0x50
  41da24:	mov    bl,0xdc
  41da26:	imul   edx,DWORD PTR [ebx+0x2f],0xffffffb2
  41da2a:	xchg   edi,eax
  41da2b:	inc    esp
  41da2c:	xchg   DWORD PTR [edx+0x10],ecx
  41da2f:	outs   dx,DWORD PTR ds:[esi]
  41da30:	out    dx,eax
  41da31:	pop    es
  41da32:	xor    eax,0x181f071b
  41da37:	je     0x41da56
  41da39:	dec    ebx
  41da3a:	gs jmp 0x991bed0d
  41da40:	push   es
  41da41:	rol    DWORD PTR [eax+0x18],0x88
  41da45:	(bad)  
  41da46:	leave  
  41da47:	sbb    DWORD PTR [ecx-0x2a7298c2],edx
  41da4d:	inc    ebp
  41da4e:	xchg   edi,eax
  41da4f:	rol    DWORD PTR [esi-0x78],cl
  41da52:	daa    
  41da53:	dec    edx
  41da54:	lds    esp,FWORD PTR [ebx-0x53]
  41da57:	dec    esp
  41da58:	jle    0x41d9f6
  41da5a:	xchg   ebx,eax
  41da5b:	out    dx,al
  41da5c:	pop    ds
  41da5d:	jg     0x41dabf
  41da5f:	out    0x90,al
  41da61:	add    BYTE PTR [edx+edx*2],0x95
  41da65:	mov    bl,0x18
  41da67:	popa   
  41da68:	(bad)  
  41da69:	pop    edi
  41da6a:	push   ecx
  41da6b:	ror    BYTE PTR [edi+0x634884ea],cl
  41da71:	mov    eax,0xeac54232
  41da76:	mov    ebx,0xd2a97eff
  41da7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da7c:	repz mov ebp,0x59431b4d
  41da82:	pop    ebp
  41da83:	jecxz  0x41da44
  41da85:	mov    ah,al
  41da87:	call   0x66ea1866
  41da8c:	inc    ebx
  41da8d:	daa    
  41da8e:	aam    0xe5
  41da90:	into   
  41da91:	mov    ch,0x75
  41da93:	jns    0x41da93
  41da95:	aam    0x90
  41da97:	aas    
  41da98:	lods   al,BYTE PTR ds:[esi]
  41da99:	jae    0x41dad4
  41da9b:	push   ds
  41da9c:	setno  BYTE PTR [esi-0x284ddc5]
  41daa3:	inc    edx
  41daa4:	pop    ds
  41daa5:	pop    ebp
  41daa6:	xor    BYTE PTR [edx+0x13],ch
  41daa9:	lods   eax,DWORD PTR ds:[esi]
  41daaa:	fadd   st,st(5)
  41daac:	adc    DWORD PTR [ebx-0x27],ebx
  41daaf:	lea    edi,[eax+0x5e591a7b]
  41dab5:	dec    ebx
  41dab6:	(bad)  
  41dab7:	mov    ebx,0x9c82b45d
  41dabc:	sbb    BYTE PTR [edx+0x7c],0x89
  41dac0:	ja     0x41db00
  41dac2:	and    ah,cl
  41dac4:	mov    al,0xce
  41dac6:	mov    ah,0x71
  41dac8:	cld    
  41dac9:	js     0x41da5b
  41dacb:	(bad)  
  41dacc:	sub    edx,edi
  41dace:	dec    BYTE PTR [ebx]
  41dad0:	call   0xc934:0xdb5e23a3
  41dad7:	xor    eax,0xc71ea88
  41dadc:	(bad)  
  41dadd:	in     eax,dx
  41dade:	push   ds
  41dadf:	jnp    0x41db2f
  41dae1:	cwde   
  41dae2:	mov    ecx,0x2a4e228
  41dae7:	sub    al,0xce
  41dae9:	in     al,0x15
  41daeb:	jnp    0x41da8d
  41daed:	(bad)  
  41daee:	mov    eax,0x9bc9b91d
  41daf3:	outs   dx,DWORD PTR ds:[esi]
  41daf4:	and    ebx,DWORD PTR [esi+0x28]
  41daf7:	cmp    esi,DWORD PTR [ebx+ecx*2]
  41dafa:	(bad)  
  41dafb:	frstor [esi-0x73]
  41dafe:	adc    ax,0x25c
  41db02:	(bad)  
  41db03:	jge    0x41daaf
  41db05:	push   esi
  41db06:	mov    edx,0x71cdb5f6
  41db0b:	xchg   ebp,eax
  41db0c:	iret   
  41db0d:	out    0xc1,al
  41db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db10:	xor    al,BYTE PTR [edi]
  41db12:	fdivr  st(2),st
  41db14:	es jnp 0x41da9b
  41db17:	imul   ebx
  41db19:	out    dx,al
  41db1a:	pop    es
  41db1b:	mov    ah,0x94
  41db1d:	mov    ds,WORD PTR [eax+0x504a9edc]
  41db23:	sub    eax,0x7f22ca11
  41db28:	dec    esp
  41db29:	push   eax
  41db2a:	dec    esi
  41db2b:	push   eax
  41db2c:	jge    0x41db5b
  41db2e:	mov    eax,ds:0xca6bedb6
  41db33:	aas    
  41db34:	dec    ebp
  41db35:	or     DWORD PTR [edi+0x6f35068f],eax
  41db3b:	int    0x9b
  41db3d:	idiv   edi
  41db3f:	jnp    0x41db67
  41db41:	sti    
  41db42:	dec    edi
  41db43:	dec    ebp
  41db44:	push   esp
  41db45:	add    eax,0x62578231
  41db4a:	stc    
  41db4b:	sbb    al,0x31
  41db4d:	xchg   ecx,eax
  41db4e:	in     eax,0xbb
  41db50:	inc    edi
  41db51:	mov    sp,0xa427
  41db55:	dec    edx
  41db56:	push   ecx
  41db57:	mov    eax,ds:0x53f1284b
  41db5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5d:	cmp    bh,BYTE PTR [ecx]
  41db5f:	push   esp
  41db60:	loop   0x41db5f
  41db62:	cwde   
  41db63:	cmp    BYTE PTR [ecx],bl
  41db65:	pop    eax
  41db66:	push   eax
  41db67:	cmp    eax,0xf77c9c08
  41db6c:	(bad)  
  41db6d:	fisub  DWORD PTR [esi-0x5c]
  41db70:	cwde   
  41db71:	arpl   WORD PTR [ecx-0x21580245],ax
  41db77:	xchg   bh,cl
  41db79:	arpl   WORD PTR [edx-0x375d16a9],sp
  41db7f:	jno    0x41dbfa
  41db81:	sahf   
  41db82:	mov    ah,0xc1
  41db84:	fisubr DWORD PTR [eax+0x34]
  41db87:	push   ds
  41db88:	add    ecx,ebx
  41db8a:	xlat   BYTE PTR ds:[ebx]
  41db8b:	adc    DWORD PTR [ebx+0x49cdc692],0x163c28e3
  41db95:	ins    BYTE PTR es:[edi],dx
  41db96:	or     eax,0xd222cb1b
  41db9b:	les    edi,FWORD PTR [eax-0x48affcf]
  41dba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba2:	test   BYTE PTR [esi-0x2b],bh
  41dba5:	loopne 0x41dbac
  41dba7:	lea    esi,[esi-0x763b9f19]
  41dbad:	push   edx
  41dbae:	pop    esi
  41dbaf:	mov    ds:0x4568f122,al
  41dbb4:	or     al,0x35
  41dbb6:	enter  0xb719,0x76
  41dbba:	in     al,0xe7
  41dbbc:	dec    edx
  41dbbd:	cmp    DWORD PTR [edx],ebx
  41dbbf:	mul    BYTE PTR [esi-0x33]
  41dbc2:	cli    
  41dbc3:	push   edi
  41dbc4:	clc    
  41dbc5:	cmp    edx,esi
  41dbc7:	fsubr  QWORD PTR [ebx-0x1de5889d]
  41dbcd:	sub    al,0x5c
  41dbcf:	xchg   edi,eax
  41dbd0:	inc    edx
  41dbd1:	sub    ah,BYTE PTR [edx]
  41dbd3:	mov    esi,0x35db3329
  41dbd8:	dec    edi
  41dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbda:	mov    eax,0x2cd55e1
  41dbdf:	adc    DWORD PTR [edx-0x1213cb16],esp
  41dbe5:	popf   
  41dbe6:	arpl   WORD PTR [edi+ebx*1-0x44b93f6e],bx
  41dbed:	test   BYTE PTR [edx+0x2c],cl
  41dbf0:	mov    DWORD PTR [ebp-0x10],eax
  41dbf3:	mov    ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs push ecx
  41dc7b:	cmp    DWORD PTR [edx],ecx
  41dc7d:	xchg   edx,eax
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0x93
  41dc87:	add    eax,0xc3542c04
  41dc8c:	stos   BYTE PTR es:[edi],al
  41dc8d:	adc    eax,0x8bc229e2
  41dc92:	daa    
  41dc93:	cmp    al,0x2f
  41dc95:	add    DWORD PTR [ebp-0x4c62f667],0xa1107ee7
  41dc9f:	ins    DWORD PTR es:[edi],dx
  41dca0:	hlt    
  41dca1:	or     al,0x60
  41dca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dca4:	mov    eax,ds:0x573f497b
  41dca9:	push   ebp
  41dcaa:	jo     0x41dcaa
  41dcac:	in     eax,0xdf
  41dcae:	mov    esp,0x240caa13
  41dcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb4:	adc    eax,0xe20db562
  41dcb9:	xor    BYTE PTR [edi+0x70f5405d],cl
  41dcbf:	adc    al,BYTE PTR [ecx+ebp*8-0x3]
  41dcc3:	mov    esi,0x5f036459
  41dcc8:	mov    bh,0x21
  41dcca:	jg     0x41dd2a
  41dccc:	ret    0x9b0d
  41dccf:	jbe    0x41dcc1
  41dcd1:	push   ecx
  41dcd2:	mov    eax,0x77fb9886
  41dcd7:	ds sahf 
  41dcd9:	ins    DWORD PTR es:[edi],dx
  41dcda:	mov    dh,0xd8
  41dcdc:	mov    eax,0x1473477e
  41dce1:	iret   
  41dce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce3:	or     dl,bh
  41dce5:	js     0x41dcfb
  41dce7:	adc    al,0xef
  41dce9:	mov    ds:0x9baa9991,al
  41dcee:	pop    edi
  41dcef:	shr    esp,1
  41dcf1:	in     al,dx
  41dcf2:	nop
  41dcf3:	mov    ebp,0x76cb1916
  41dcf8:	mov    eax,0x15205a23
  41dcfd:	cmc    
  41dcfe:	scas   al,BYTE PTR es:[edi]
  41dcff:	mov    cl,0xdc
  41dd01:	dec    eax
  41dd02:	mov    BYTE PTR [ebp-0x752843e7],bh
  41dd08:	dec    esp
  41dd09:	clc    
  41dd0a:	dec    ecx
  41dd0b:	loopne 0x41dcb5
  41dd0d:	mov    ah,0x8c
  41dd0f:	cli    
  41dd10:	or     esi,DWORD PTR [eax]
  41dd12:	mov    WORD PTR [ebx-0x75],es
  41dd15:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd17:	mov    cl,BYTE PTR [esi+eax*4]
  41dd1a:	loop   0x41dcf2
  41dd1c:	iret   
  41dd1d:	mov    edx,0x39609eca
  41dd22:	xchg   ecx,eax
  41dd23:	ret    0xafe6
  41dd26:	retf   
  41dd27:	in     al,0xa9
  41dd29:	cwde   
  41dd2a:	mul    BYTE PTR [eax+0x44f07d72]
  41dd30:	add    eax,0x5911eb2e
  41dd35:	fwait
  41dd36:	dec    esi
  41dd37:	mul    BYTE PTR [ebp+0x47181cf4]
  41dd3d:	or     esp,ebx
  41dd3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd40:	mov    ds:0xa9089eae,al
  41dd45:	dec    ecx
  41dd46:	addr16 and dl,dh
  41dd49:	lods   al,BYTE PTR ds:[esi]
  41dd4a:	mov    ebx,0xe98178a6
  41dd4f:	aas    
  41dd50:	arpl   cx,bp
  41dd52:	pop    ebx
  41dd53:	mov    ds:0xff49813b,al
  41dd58:	stc    
  41dd59:	retf   
  41dd5a:	push   esp
  41dd5b:	fiadd  WORD PTR [ebx+0x2d6ea4a3]
  41dd61:	and    bh,ah
  41dd63:	lahf   
  41dd64:	jbe    0x41ddbb
  41dd66:	in     al,0xc0
  41dd68:	xchg   esi,eax
  41dd69:	sub    BYTE PTR [esp+esi*2+0x6ba01f7f],0x3
  41dd71:	xor    DWORD PTR [edi+ebp*4-0x60bb9ba8],edi
  41dd78:	hlt    
  41dd79:	xor    eax,0x351bb813
  41dd7e:	pop    edi
  41dd7f:	add    al,0x43
  41dd81:	push   ecx
  41dd82:	pop    ebx
  41dd83:	test   eax,ebx
  41dd85:	call   0x727c:0x155bdec8
  41dd8c:	sbb    cl,BYTE PTR [ebp+0x6a]
  41dd8f:	pop    edx
  41dd90:	mov    ebp,0x2cb8b0dc
  41dd95:	cld    
  41dd96:	(bad)  
  41dd98:	rcl    BYTE PTR [ebx+0x593c1b31],cl
  41dd9e:	fcom   QWORD PTR [ecx-0x22]
  41dda1:	test   edi,eax
  41dda3:	mov    cl,0x74
  41dda5:	adc    edi,0x6e
  41dda8:	add    bh,BYTE PTR [ebx]
  41ddaa:	popa   
  41ddab:	mov    WORD PTR [eax],cs
  41ddad:	out    dx,eax
  41ddae:	mov    ds:0x410caf91,al
  41ddb3:	sub    eax,0xd0b3f239
  41ddb8:	cli    
  41ddb9:	adc    DWORD PTR [ecx],0xffffff96
  41ddbc:	push   ds
  41ddbd:	cmp    edx,ebp
  41ddbf:	push   0xffffffa0
  41ddc1:	mov    esi,0x9ba92b0f
  41ddc6:	addr16 out 0xc4,al
  41ddc9:	mov    cl,0xb1
  41ddcb:	leave  
  41ddcc:	fnstcw WORD PTR [ecx]
  41ddce:	shl    DWORD PTR ds:0xfaf5f4d4,0x17
  41ddd5:	mov    bl,0xd3
  41ddd7:	inc    edx
  41ddd8:	mov    ah,0x72
  41ddda:	mov    esi,0xc58a312c
  41dddf:	mov    dh,0xb4
  41dde1:	out    0xeb,al
  41dde3:	xchg   edx,eax
  41dde4:	es jle 0x41de26
  41dde7:	les    eax,FWORD PTR [eax+0x6e]
  41ddea:	call   0xe78a5613
  41ddef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddf0:	in     eax,dx
  41ddf1:	ret    
  41ddf2:	int    0xe9
  41ddf4:	test   DWORD PTR ds:0xef4b3022,0x963f212d
  41ddfe:	nop
  41ddff:	das    
  41de00:	aam    0x65
  41de02:	pop    ds
  41de03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de04:	jb     0x41de24
  41de06:	push   ds
  41de07:	(bad)  [edi]
  41de09:	xor    ecx,0xffffffa3
  41de0c:	into   
  41de0d:	jle    0x41dda6
  41de0f:	or     dl,dh
  41de11:	cli    
  41de12:	jno    0x41de7f
  41de14:	fistp  WORD PTR [edi]
  41de16:	mov    eax,0xa99efe96
  41de1b:	dec    ebx
  41de1c:	mov    cl,0x8b
  41de1e:	xchg   ebx,eax
  41de1f:	hlt    
  41de20:	sub    cl,BYTE PTR [esi]
  41de22:	jo     0x41de04
  41de24:	scas   eax,DWORD PTR es:[edi]
  41de25:	ficomp DWORD PTR [ebx]
  41de27:	cdq    
  41de28:	das    
  41de29:	in     eax,0xd3
  41de2b:	in     eax,dx
  41de2c:	xchg   ebp,eax
  41de2d:	sbb    al,0x7c
  41de2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de30:	push   ds
  41de31:	xlat   BYTE PTR ds:[ebx]
  41de32:	fsub   QWORD PTR [ecx]
  41de34:	dec    ecx
  41de35:	and    edi,ecx
  41de37:	lods   al,BYTE PTR ds:[esi]
  41de38:	out    0x52,eax
  41de3a:	in     eax,0x75
  41de3c:	sub    BYTE PTR [eax+0x7346cccb],0x3e
  41de43:	scas   al,BYTE PTR es:[edi]
  41de44:	jne    0x41de6c
  41de46:	sti    
  41de47:	mov    ecx,0x2d2277f7
  41de4c:	mov    esp,ebx
  41de4e:	xchg   DWORD PTR [edx-0x40],ebp
  41de51:	and    eax,0x873c2d80
  41de56:	inc    ecx
  41de57:	pop    ecx
  41de58:	sub    ecx,DWORD PTR [ebx+0x75]
  41de5b:	push   ebp
  41de5c:	pushf  
  41de5d:	add    ax,0x863e
  41de61:	ret    
  41de62:	jl     0x41ddeb
  41de64:	aaa    
  41de65:	es sbb al,0xa4
  41de68:	in     al,0xe6
  41de6a:	and    DWORD PTR [edx+0x27],edi
  41de6d:	popa   
  41de6e:	adc    eax,0x6eee5150
  41de73:	dec    esp
  41de74:	pop    ds
  41de75:	loope  0x41de26
  41de77:	cmp    eax,0xdd6f952e
  41de7c:	sbb    eax,0xd8d1aa1f
  41de81:	data16 shl BYTE PTR [eax-0xa5387d0],0x3e
  41de89:	clc    
  41de8a:	call   0x98a7:0x863a19ec
  41de91:	adc    ecx,esp
  41de93:	xchg   edi,eax
  41de94:	mov    ah,ah
  41de96:	xor    eax,0xebbdbd9e
  41de9b:	js     0x41de94
  41de9d:	stos   DWORD PTR es:[edi],eax
  41de9e:	(bad)  
  41de9f:	push   ebx
  41dea0:	cmc    
  41dea1:	lock neg ecx
  41dea4:	test   esp,esp
  41dea6:	or     DWORD PTR [eax],ebx
  41dea8:	mov    esi,DWORD PTR [ebx-0x6d]
  41deab:	nop
  41deac:	xor    al,0xcf
  41deae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deaf:	js     0x41de6e
  41deb1:	stc    
  41deb2:	call   FWORD PTR [edi+0x39c7f4d]
  41deb8:	dec    eax
  41deb9:	repnz cmp bh,BYTE PTR [ebp-0xbaa4430]
  41dec0:	arpl   di,bp
  41dec2:	stc    
  41dec3:	cwde   
  41dec4:	mov    dh,0x76
  41dec6:	pop    ecx
  41dec7:	cmp    ebp,ebp
  41dec9:	call   0x5e5c31f9
  41dece:	add    ch,BYTE PTR [esi+0x3fe8e99c]
  41ded4:	inc    ebp
  41ded5:	fucompp 
  41ded7:	jl     0x41df36
  41ded9:	push   cs
  41deda:	addr16 push esp
  41dedc:	jne    0x41df05
  41dede:	mov    ch,0x1f
  41dee0:	fist   WORD PTR [ecx*4-0x5b162a1c]
  41dee7:	dec    esi
  41dee8:	pusha  
  41dee9:	push   0x77ebf082
  41deee:	ror    DWORD PTR [eax],cl
  41def0:	sub    BYTE PTR [edx*4+0x669d540e],ch
  41def7:	icebp  
  41def8:	rcl    DWORD PTR [eax+0x6820ce97],0xcb
  41deff:	and    al,0x4a
  41df01:	xchg   BYTE PTR ds:0xf468f50c,al
  41df07:	cmp    BYTE PTR [ecx],dh
  41df09:	dec    eax
  41df0a:	popa   
  41df0b:	loop   0x41dedc
  41df0d:	fs jo  0x41dea5
  41df10:	pushf  
  41df11:	scas   eax,DWORD PTR es:[edi]
  41df12:	shl    BYTE PTR [eax-0x4373edfb],cl
  41df18:	test   DWORD PTR ds:[edi],esi
  41df1b:	sub    edi,ebp
  41df1d:	xor    al,0xfd
  41df1f:	jle    0x41deea
  41df21:	mov    ah,0x12
  41df23:	lahf   
  41df24:	ja     0x41def1
  41df26:	push   edx
  41df27:	pop    ds
  41df28:	xlat   BYTE PTR ds:[ebx]
  41df29:	(bad)  
  41df2a:	(bad)  
  41df2b:	mov    ds:0xfea5ce0f,al
  41df30:	adc    ah,ch
  41df32:	test   DWORD PTR [eax-0x2a37b8a0],edx
  41df38:	jl     0x41df09
  41df3a:	and    bl,BYTE PTR [ecx]
  41df3c:	mov    ebp,0x2e006856
  41df41:	enter  0x1b3e,0x84
  41df45:	sbb    eax,0x61475a4c
  41df4a:	or     dh,BYTE PTR [esi+0x5bbf7ad3]
  41df50:	add    al,0xd5
  41df52:	adc    BYTE PTR [eax],dl
  41df54:	add    BYTE PTR [edx],bl
  41df56:	mov    bh,ch
  41df58:	dec    esi
  41df59:	jl     0x41df8f
  41df5b:	and    al,0x31
  41df5d:	fwait
  41df5e:	js     0x41df57
  41df60:	mov    al,ds:0xb12e7763
  41df65:	adc    al,0xbe
  41df67:	iret   
  41df68:	into   
  41df69:	mov    al,0xaa
  41df6b:	mov    edi,0x80e9de7
  41df70:	rcl    DWORD PTR [ebx+edx*1+0x1202d577],0xcb
  41df78:	pop    ebp
  41df79:	push   eax
  41df7a:	xchg   edx,esp
  41df7c:	pop    es
  41df7d:	(bad)  
  41df7e:	in     al,dx
  41df7f:	fwait
  41df80:	retf   0x13a7
  41df83:	jmp    0x41dfd4
  41df85:	arpl   sp,si
  41df87:	cld    
  41df88:	push   edx
  41df89:	js     0x41df3f
  41df8b:	test   DWORD PTR [ecx+0x1b],eax
  41df8e:	mov    esp,0x2581daa9
  41df93:	sub    eax,0x439752d7
  41df98:	jecxz  0x41e009
  41df9a:	dec    esp
  41df9b:	add    DWORD PTR ds:0xbada4575,0xaedc4859
  41dfa5:	lea    edx,[esi]
  41dfa7:	aad    0x8c
  41dfa9:	shr    DWORD PTR [esi+edx*1],1
  41dfac:	add    bh,BYTE PTR [eax+0x4203a331]
  41dfb2:	adc    BYTE PTR [ecx+eiz*1+0x21],bl
  41dfb6:	add    al,0x81
  41dfb8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41dfba:	push   edx
  41dfbb:	sbb    eax,0xf67ac96c
  41dfc0:	leave  
  41dfc1:	test   DWORD PTR [eax+0x40],ebx
  41dfc4:	mov    edi,0xa90057b4
  41dfc9:	ja     0x41e01b
  41dfcb:	pusha  
  41dfcc:	and    eax,0x37eb8a90
  41dfd1:	push   0x4b38290a
  41dfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd8:	fldln2 
  41dfda:	push   es
  41dfdb:	into   
  41dfdc:	out    0xf6,al
  41dfde:	mov    cl,0x8c
  41dfe0:	xchg   ebp,eax
  41dfe1:	jmp    0x41e040
  41dfe3:	adc    esp,DWORD PTR [edi]
  41dfe5:	or     ebp,DWORD PTR [edi]
  41dfe7:	xlat   BYTE PTR ds:[ebx]
  41dfe8:	add    al,0xa8
  41dfea:	or     ch,BYTE PTR ds:0xc7bc249b
  41dff0:	push   edi
  41dff1:	pop    esp
  41dff2:	out    0x96,eax
  41dff4:	popf   
  41dff5:	jno    0x41e00d
  41dff7:	cmp    al,0x44
  41dff9:	and    eax,ecx
  41dffb:	adc    esi,DWORD PTR [ecx-0x640c53ef]
  41e001:	and    DWORD PTR [edi-0x4bfb695c],ebx
  41e007:	adc    ecx,edx
  41e009:	lahf   
  41e00a:	loope  0x41e02a
  41e00c:	test   al,0xe5
  41e00e:	jp     0x41e05a
  41e010:	mov    esp,0xd6530c32
  41e015:	test   eax,0x6597faa4
  41e01a:	pushf  
  41e01b:	inc    ebp
  41e01c:	and    edi,ebp
  41e01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e01f:	push   eax
  41e020:	(bad)  
  41e021:	xchg   edx,eax
  41e022:	adc    al,0x50
  41e024:	pop    ebp
  41e025:	xor    BYTE PTR cs:[eax+0x23c1abac],bh
  41e02c:	scas   eax,DWORD PTR es:[edi]
  41e02d:	sub    DWORD PTR [esi+0x2e3abfc0],ebx
  41e033:	sub    BYTE PTR [edx+0x6a1332bf],dh
  41e039:	aam    0xe5
  41e03b:	cmc    
  41e03c:	int3   
  41e03d:	outs   dx,BYTE PTR ds:[esi]
  41e03e:	ficomp WORD PTR [ebp+0x77d9fc2c]
  41e044:	inc    ebp
  41e045:	je     0x41e053
  41e047:	push   es
  41e048:	(bad)  
  41e049:	and    eax,0x9a7e639e
  41e04e:	and    al,0xe7
  41e050:	sbb    al,0xb0
  41e052:	ret    
  41e053:	adc    BYTE PTR [edi],0x36
  41e056:	outs   dx,BYTE PTR ds:[esi]
  41e057:	adc    eax,0x2c2be1c4
  41e05c:	fild   DWORD PTR [ebx+0x25eb8986]
  41e062:	mov    ah,0xd5
  41e064:	hlt    
  41e065:	jne    0x41e05d
  41e067:	inc    ebp
  41e068:	jne    0x41e0cb
  41e06a:	and    dh,dh
  41e06c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41e06e:	mov    al,ds:0xd38b1f7a
  41e073:	pop    ebp
  41e074:	sub    al,bl
  41e076:	inc    edi
  41e077:	mov    gs,WORD PTR [edx+esi*1-0x1d]
  41e07b:	out    0xa8,al
  41e07d:	mov    cl,0x8f
  41e07f:	dec    edx
  41e080:	xor    dl,al
  41e082:	jno    0x41e0ba
  41e084:	push   esi
  41e085:	test   DWORD PTR [edi+0x35af228f],ecx
  41e08b:	sub    al,0xf9
  41e08d:	sti    
  41e08e:	lods   eax,DWORD PTR ds:[esi]
  41e08f:	fidivr WORD PTR [ebx+0x4f]
  41e092:	dec    edx
  41e093:	pop    ebp
  41e094:	loopne 0x41e052
  41e096:	mov    eax,0x8a4455
  41e09b:	push   ebp
  41e09c:	pusha  
  41e09d:	ret    
  41e09e:	mov    eax,0xed40172c
  41e0a3:	test   al,0x2b
  41e0a5:	shr    DWORD PTR [edi],cl
  41e0a7:	es cdq 
  41e0a9:	and    eax,0x34df2dd7
  41e0ae:	mov    ecx,esi
  41e0b0:	xchg   BYTE PTR [esi+ecx*4+0x20],bl
  41e0b4:	loope  0x41e0b1
  41e0b6:	add    eax,0x84faab4f
  41e0bb:	clc    
  41e0bc:	stc    
  41e0bd:	jle    0x41e131
  41e0bf:	cmp    esp,DWORD PTR [eax]
  41e0c1:	shl    cl,1
  41e0c3:	dec    ecx
  41e0c4:	call   DWORD PTR [edx+0x306e622d]
  41e0ca:	aam    0x75
  41e0cc:	outs   dx,DWORD PTR ds:[esi]
  41e0cd:	sub    edi,DWORD PTR [edi+eax*8+0x449ea587]
  41e0d4:	std    
  41e0d5:	std    
  41e0d6:	enter  0xa45c,0x15
  41e0da:	aad    0x6
  41e0dc:	fisub  WORD PTR [ecx-0x7dd3958d]
  41e0e2:	(bad)  
  41e0e3:	xlat   BYTE PTR ds:[ebx]
  41e0e4:	leave  
  41e0e5:	add    ecx,DWORD PTR [eax+0x57]
  41e0e8:	mov    al,ds:0xfb9479b8
  41e0ed:	jmp    0x1affaea7
  41e0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f3:	imul   ecx
  41e0f5:	mov    ds:0x48d09b,al
  41e0fa:	and    ax,0x53c3
  41e0fe:	outs   dx,BYTE PTR ds:[esi]
  41e0ff:	(bad)  ss:[edi+0x6f32ce0c]
  41e106:	je     0x41e0ff
  41e108:	jnp    0x41e0f6
  41e10a:	arpl   WORD PTR [edi],sp
  41e10c:	ss push es
  41e10e:	fidiv  DWORD PTR [edi+ebp*2-0x496458c9]
  41e115:	retf   0x99d
  41e118:	(bad)  
  41e119:	pop    eax
  41e11a:	or     ecx,DWORD PTR [ecx-0x60]
  41e11d:	xchg   BYTE PTR ds:0x3cbc098d,ch
  41e123:	cmp    BYTE PTR ds:0xd6b71cca,ah
  41e129:	xchg   DWORD PTR [edi],ecx
  41e12b:	retf   0x9f37
  41e12e:	push   es
  41e12f:	xchg   ebp,eax
  41e130:	inc    esp
  41e131:	test   BYTE PTR [eax+0x34],0x8d
  41e135:	out    0x5d,al
  41e137:	mov    dl,0xb2
  41e139:	nop
  41e13a:	out    0xd6,al
  41e13c:	jbe    0x41e11c
  41e13e:	pop    ebx
  41e13f:	popa   
  41e140:	pusha  
  41e141:	pop    ecx
  41e142:	jg     0x41e0d4
  41e144:	repnz mov ds:0x173fa861,eax
  41e14a:	inc    ecx
  41e14b:	push   ebx
  41e14c:	lods   al,BYTE PTR ds:[esi]
  41e14d:	not    BYTE PTR [ebp+ebx*8-0x36]
  41e151:	push   edx
  41e152:	sti    
  41e153:	into   
  41e154:	shr    BYTE PTR [ecx+0x9f0ef25],1
  41e15a:	ret    0xfe74
  41e15d:	cli    
  41e15e:	mov    esi,0x9274de51
  41e163:	pop    esp
  41e164:	repz call 0x4d4e7009
  41e16a:	sar    ch,0x7f
  41e16d:	aam    0x8c
  41e16f:	(bad)  
  41e170:	mov    dh,0x79
  41e172:	sbb    eax,DWORD PTR [eax+0x28]
  41e175:	retf   0xfee8
  41e178:	in     eax,dx
  41e179:	mov    dl,0xf0
  41e17b:	out    0x28,eax
  41e17d:	push   esp
  41e17e:	adc    DWORD PTR ss:[edi],edi
  41e181:	jle    0x41e19c
  41e183:	xor    DWORD PTR [ecx-0x15],ebp
  41e186:	sbb    eax,eax
  41e188:	daa    
  41e189:	mov    cl,0x15
  41e18b:	nop
  41e18c:	inc    ecx
  41e18d:	sbb    esi,DWORD PTR [esi]
  41e18f:	or     ebp,DWORD PTR [edx+0x2e699e3f]
  41e195:	cmovns ebp,DWORD PTR [ebx]
  41e198:	arpl   WORD PTR [ebp+0x77b916a4],di
  41e19e:	jne    0x41e195
  41e1a0:	(bad)  
  41e1a1:	ret    0xc2de
  41e1a4:	cmp    al,0xba
  41e1a6:	arpl   WORD PTR [ecx],si
  41e1a8:	dec    ebx
  41e1a9:	mov    esp,0x2fcb48d5
  41e1ae:	mov    ebp,0xfb9fd700
  41e1b3:	dec    edi
  41e1b4:	data16 fidiv DWORD PTR [edi]
  41e1b7:	repnz and DWORD PTR [eax+0x70],ecx
  41e1bb:	jbe    0x41e19b
  41e1bd:	adc    BYTE PTR [ebx+0x1e86413b],ch
  41e1c3:	or     ebp,0xfffffff5
  41e1c6:	fmul   DWORD PTR [edi+0x539d5e60]
  41e1cc:	push   es
  41e1cd:	push   ds
  41e1ce:	mov    ds:0xcd535e4c,al
  41e1d3:	stos   BYTE PTR es:[edi],al
  41e1d4:	ror    DWORD PTR [edx],cl
  41e1d6:	mov    ecx,0xe9d6308e
  41e1db:	(bad)  
  41e1dc:	push   0x33
  41e1de:	arpl   WORD PTR [esi+edi*1],cx
  41e1e1:	outs   dx,BYTE PTR ds:[esi]
  41e1e2:	loopne 0x41e16b
  41e1e4:	inc    ebx
  41e1e5:	pop    eax
  41e1e6:	cmovle ebx,DWORD PTR [ebx-0x20]
  41e1ea:	int3   
  41e1eb:	push   ebx
  41e1ec:	clc    
  41e1ed:	or     DWORD PTR [edx-0x49bd75],edi
  41e1f3:	or     BYTE PTR [eax],al
  41e1f5:	call   0x92fc499d
  41e1fa:	push   cs
  41e1fb:	jmp    0x4fee:0xbc3af6be
  41e202:	mov    eax,0x5d881efc
  41e207:	jns    0x41e260
  41e209:	jg     0x41e26e
  41e20b:	add    bh,BYTE PTR [edi-0x385ef24]
  41e211:	wbinvd 
  41e213:	jo     0x41e229
  41e215:	aas    
  41e216:	cwde   
  41e217:	and    BYTE PTR [ebx],bh
  41e219:	mov    cl,0x45
  41e21b:	pop    edi
  41e21c:	sbb    edx,DWORD PTR [esp+ecx*2+0x47d0eebc]
  41e223:	(bad)  
  41e224:	clc    
  41e225:	aam    0xca
  41e227:	jnp    0x41e1ef
  41e229:	fst    QWORD PTR [ebp+0x66e82020]
  41e22f:	xor    BYTE PTR [edx+eax*4],al
  41e232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e233:	push   es
  41e234:	or     ah,BYTE PTR [ebp-0x62da3f2e]
  41e23a:	sbb    bh,BYTE PTR [edx]
  41e23c:	and    al,0xc7
  41e23e:	mov    al,BYTE PTR [esi-0x7cdcf585]
  41e244:	in     eax,0x33
  41e246:	jno    0x41e1f2
  41e248:	cmp    eax,0x6ea6c18d
  41e24d:	mov    WORD PTR [ebp-0x1637e97f],?
  41e253:	addr16 mov ah,0xb8
  41e256:	jmp    0x3881e4ce
  41e25b:	jbe    0x41e1df
  41e25d:	enter  0xf8ec,0x45
  41e261:	push   ebx
  41e262:	mov    edx,0xb50e3fd3
  41e267:	pop    edi
  41e268:	pslld  mm5,QWORD PTR [edx-0x2b759961]
  41e26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e270:	retf   0x6d09
  41e273:	and    eax,0x5f2ca528
  41e278:	adc    DWORD PTR [edx+0x1ff8cbd1],esp
  41e27e:	clc    
  41e27f:	ss inc eax
  41e281:	cdq    
  41e282:	(bad)  
  41e283:	mov    bh,0x76
  41e285:	xor    eax,0xb8ffc123
  41e28a:	cs pop ebx
  41e28c:	stos   BYTE PTR es:[edi],al
  41e28d:	jp     0x41e2a3
  41e28f:	mov    ah,0x70
  41e291:	push   0x24
  41e293:	jmp    0x1abf2095
  41e298:	loope  0x41e26d
  41e29a:	lods   eax,DWORD PTR ds:[esi]
  41e29c:	pop    edi
  41e29d:	add    BYTE PTR [ebx],0x6e
  41e2a0:	shr    BYTE PTR [ebx],1
  41e2a2:	lahf   
  41e2a3:	mov    cs,WORD PTR [edi+0x1b93a8b4]
  41e2a9:	inc    esi
  41e2aa:	dec    ebx
  41e2ab:	mov    eax,ds:0x533011af
  41e2b0:	push   edi
  41e2b1:	or     DWORD PTR [esi+0x7a4f173],ebx
  41e2b7:	cld    
  41e2b8:	adc    cl,BYTE PTR [edx]
  41e2ba:	jecxz  0x41e272
  41e2bc:	inc    ecx
  41e2bd:	pop    ebx
  41e2be:	mov    esp,0x6078f974
  41e2c3:	dec    edx
  41e2c4:	mov    BYTE PTR [ebp+0x4f],dh
  41e2c7:	add    al,0x3a
  41e2c9:	arpl   WORD PTR [ebx+0x73],bx
  41e2cc:	outs   dx,BYTE PTR ds:[esi]
  41e2cd:	mov    edi,ecx
  41e2cf:	(bad)  
  41e2d0:	mov    ecx,0x9ef5a659
  41e2d5:	xor    DWORD PTR [esi-0x4a7aa37f],edi
  41e2db:	jae    0x41e358
  41e2dd:	fist   WORD PTR [ecx-0x6edac090]
  41e2e3:	outs   dx,DWORD PTR ds:[esi]
  41e2e4:	sbb    eax,0x1daec0b9
  41e2e9:	cmp    al,BYTE PTR [esi-0x2251989b]
  41e2ef:	not    BYTE PTR [eax]
  41e2f1:	mov    BYTE PTR [esi],0xe7
  41e2f4:	gs sti 
  41e2f6:	jecxz  0x41e288
  41e2f8:	pop    esi
  41e2f9:	mov    al,ds:0x3ad1625a
  41e2fe:	jns    0x41e321
  41e300:	dec    eax
  41e301:	in     al,dx
  41e302:	mov    cl,0xdf
  41e304:	(bad)  
  41e305:	cld    
  41e306:	es pop ds
  41e308:	xor    esi,DWORD PTR [esi]
  41e30a:	sub    ax,bp
  41e30d:	pop    ebx
  41e30e:	in     al,0x4f
  41e310:	dec    edx
  41e311:	cmp    dh,ch
  41e313:	sub    eax,DWORD PTR [eax]
  41e315:	cmp    DWORD PTR [eax],ecx
  41e317:	(bad)  
  41e318:	into   
  41e319:	imul   esi,esi,0x39838b8c
  41e31f:	mov    ebp,0xfe8454b9
  41e324:	test   DWORD PTR [esi-0x743c389e],esp
  41e32a:	lods   al,BYTE PTR ds:[esi]
  41e32b:	adc    cl,BYTE PTR [ecx-0x422b35a8]
  41e331:	jo     0x41e342
  41e333:	and    BYTE PTR [ebx+0x4a97701e],0x8f
  41e33a:	pop    edx
  41e33b:	adc    BYTE PTR [esp+esi*1],dh
  41e33e:	test   BYTE PTR [eax],bl
  41e340:	xor    bl,BYTE PTR [ecx+edx*1+0x3e01b5eb]
  41e347:	imul   ecx,DWORD PTR [ebp+ebx*1+0xb7c0143],0x9450b04e
  41e352:	xchg   ecx,eax
  41e353:	mov    edx,0xce8af0f
  41e358:	cwde   
  41e359:	popf   
  41e35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e35b:	and    edi,ebx
  41e35d:	sbb    eax,0xe5100626
  41e362:	aad    0x26
  41e364:	xchg   esp,eax
  41e365:	(bad)  
  41e366:	in     al,0x2f
  41e368:	adc    DWORD PTR [edi+0x71],eax
  41e36b:	mov    eax,ds:0xb2ab4cb8
  41e370:	add    bh,bh
  41e372:	dec    esi
  41e373:	xor    eax,DWORD PTR [edx-0x745ec090]
  41e379:	mov    ebx,0xc3f619cd
  41e37e:	fbld   TBYTE PTR gs:[esi+0x479d2ef]
  41e385:	mov    ecx,0x804b01a7
  41e38a:	not    BYTE PTR [edx]
  41e38c:	aaa    
  41e38d:	lods   eax,DWORD PTR ds:[esi]
  41e38e:	cmp    DWORD PTR [ecx-0x14],edx
  41e391:	jb     0x41e34c
  41e393:	adc    al,0x90
  41e395:	xchg   esi,eax
  41e396:	mov    bl,ch
  41e398:	rol    BYTE PTR [edi+ebp*8-0x3a4b2d82],0x51
  41e3a0:	jmp    0x41e39e
  41e3a2:	push   ecx
  41e3a3:	xor    eax,0x23145506
  41e3a8:	xor    ebx,DWORD PTR [ecx+0x5]
  41e3ab:	fimul  DWORD PTR [eax]
  41e3ad:	cld    
  41e3ae:	jb     0x41e381
  41e3b0:	or     DWORD PTR [edx-0xc],ebx
  41e3b3:	push   ds
  41e3b4:	jp     0x41e430
  41e3b6:	xchg   esi,eax
  41e3b7:	ins    DWORD PTR es:[edi],dx
  41e3b8:	mov    BYTE PTR [eax],0xcf
  41e3bb:	xor    ebp,DWORD PTR [ebp+0x4a]
  41e3be:	lds    esp,FWORD PTR ds:0x4de4b746
  41e3c4:	add    DWORD PTR [esi-0x2bc8ad20],0xfa809117
  41e3ce:	(bad)  
  41e3cf:	pop    edx
  41e3d0:	xchg   BYTE PTR [edx-0x75],ch
  41e3d3:	inc    esi
  41e3d4:	xchg   ebx,eax
  41e3d5:	or     edi,eax
  41e3d7:	mov    DWORD PTR [edi-0x26],ecx
  41e3da:	enter  0x76cf,0x17
  41e3de:	xor    dl,BYTE PTR [ebx+ebx*1-0x73]
  41e3e2:	out    0x76,eax
  41e3e4:	mov    bh,0xce
  41e3e6:	or     cl,0x21
  41e3e9:	push   cs
  41e3ea:	call   0x6cdbd94
  41e3ef:	les    esi,FWORD PTR [eax]
  41e3f1:	fdiv   QWORD PTR [ebp-0x4c0d9c3e]
  41e3f7:	in     eax,dx
  41e3f8:	call   0x4d22:0x345af88b
  41e3ff:	rcl    DWORD PTR [ebp-0x4d],cl
  41e402:	test   DWORD PTR [ecx-0x11],0xd9f199d0
  41e409:	mov    eax,ds:0x9e46efca
  41e40e:	jnp    0xcf449b40
  41e414:	sar    DWORD PTR [esi],1
  41e416:	int3   
  41e417:	pushf  
  41e418:	or     BYTE PTR [ecx],cl
  41e41a:	test   eax,0x3f81e0b1
  41e41f:	xchg   edi,eax
  41e420:	and    DWORD PTR [edx-0x47e989c],esi
  41e426:	repz mov edx,0x98db7773
  41e42c:	sub    al,0xb5
  41e42e:	xchg   ebx,eax
  41e42f:	fstp   DWORD PTR [ebp-0x2]
  41e432:	jmp    0x41e3d4
  41e434:	pop    es
  41e435:	sub    cl,BYTE PTR [esi]
  41e437:	test   BYTE PTR [ecx],bl
  41e439:	stos   BYTE PTR es:[edi],al
  41e43a:	loop   0x41e413
  41e43c:	sub    ebx,DWORD PTR [ebp+0x470dc331]
  41e442:	inc    ecx
  41e443:	in     eax,0x1a
  41e445:	(bad)  
  41e446:	cmp    BYTE PTR [ecx],dh
  41e448:	dec    esi
  41e449:	xor    eax,0xbe2fa3e0
  41e44e:	cwde   
  41e44f:	jmp    0xb4af:0x698cde7f
  41e456:	add    esp,DWORD PTR [edi-0x31]
  41e459:	sbb    al,0x98
  41e45b:	les    esi,FWORD PTR [ebx-0x58]
  41e45e:	in     al,0xc1
  41e460:	push   esi
  41e461:	mov    dh,dh
  41e463:	fst    QWORD PTR [edx]
  41e465:	mov    edi,0xa8d53c62
  41e46a:	std    
  41e46b:	std    
  41e46c:	mov    dh,0xdc
  41e46e:	xchg   edx,ebx
  41e470:	repnz or BYTE PTR [ecx],dh
  41e473:	leave  
  41e474:	mov    ecx,0x534700c5
  41e479:	aas    
  41e47a:	push   cs
  41e47b:	jno    0x41e4bf
  41e47d:	mov    edx,0x47d41dc9
  41e482:	(bad)  
  41e483:	push   ebx
  41e484:	xchg   ebx,eax
  41e485:	arpl   WORD PTR [eax*4+0x2a6f2865],bp
  41e48c:	call   0x2652d866
  41e491:	cmp    DWORD PTR [edx+edi*1+0x28],esp
  41e495:	mov    al,0x3c
  41e497:	aad    0xec
  41e499:	daa    
  41e49a:	jge    0x41e4c5
  41e49c:	adc    ah,BYTE PTR [eax+0x19172deb]
  41e4a2:	mov    esi,0x1327037e
  41e4a7:	out    0xb9,eax
  41e4a9:	xlat   BYTE PTR ds:[ebx]
  41e4aa:	in     eax,0x74
  41e4ac:	das    
  41e4ad:	jbe    0x41e458
  41e4af:	jmp    0x111:0xb711f386
  41e4b6:	or     BYTE PTR [ebx],dh
  41e4b8:	sub    eax,0x301e0488
  41e4bd:	and    eax,0xbfe0f5d9
  41e4c2:	icebp  
  41e4c3:	push   esp
  41e4c4:	push   eax
  41e4c5:	xor    DWORD PTR [esi],ecx
  41e4c7:	sbb    DWORD PTR [edx],0x7a
  41e4ca:	jmp    0x41e45a
  41e4cc:	jle    0x41e4e9
  41e4ce:	stos   DWORD PTR es:[edi],eax
  41e4cf:	sub    al,0xf9
  41e4d1:	jno    0x41e46b
  41e4d3:	loop   0x41e4df
  41e4d5:	jo     0x41e538
  41e4d7:	jg     0x41e4b4
  41e4d9:	push   edx
  41e4da:	mov    dh,0x29
  41e4dc:	push   cs
  41e4dd:	fld    TBYTE PTR [edi]
  41e4df:	in     al,dx
  41e4e0:	iret   
  41e4e1:	ret    0x2cb5
  41e4e4:	push   cs
  41e4e5:	dec    esp
  41e4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e7:	cmp    ah,dl
  41e4e9:	jge    0x41e500
  41e4eb:	ds jne 0x41e4be
  41e4ee:	inc    esi
  41e4ef:	in     eax,0x98
  41e4f1:	iret   
  41e4f2:	lods   eax,DWORD PTR ds:[esi]
  41e4f3:	scas   al,BYTE PTR es:[edi]
  41e4f4:	xchg   DWORD PTR [edi],ebp
  41e4f6:	pop    ebp
  41e4f7:	ret    
  41e4f8:	sbb    bl,bl
  41e4fa:	in     al,dx
  41e4fb:	cmc    
  41e4fc:	cwde   
  41e4fd:	add    BYTE PTR [edi-0x60],ch
  41e500:	out    dx,al
  41e501:	xor    dl,BYTE PTR [ebx+ecx*4+0x11]
  41e505:	inc    DWORD PTR [ecx-0x4a]
  41e508:	push   ebp
  41e509:	or     BYTE PTR [edi-0x3],0xf2
  41e50d:	int3   
  41e50e:	cs repz das 
  41e511:	push   ebx
  41e512:	mov    al,0x82
  41e514:	lds    ebx,FWORD PTR [esi+0x14]
  41e517:	jne    0x41e527
  41e519:	adc    al,0x38
  41e51b:	(bad)  
  41e51c:	sub    edi,edx
  41e51e:	retf   0xabcb
  41e521:	mov    eax,0x3b783372
  41e526:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e528:	int    0x5d
  41e52a:	cwde   
  41e52b:	and    esp,DWORD PTR [ecx+0x1b4f5d32]
  41e531:	and    dl,dl
  41e533:	loop   0x41e510
  41e535:	bound  ebx,QWORD PTR [ebx-0x4ffef8f7]
  41e53b:	sbb    eax,0xb6ce8bfe
  41e540:	mov    edx,0xff9ee9cb
  41e545:	aas    
  41e546:	test   al,0x34
  41e548:	bound  ebp,QWORD PTR [edx-0x61]
  41e54b:	stos   BYTE PTR es:[edi],al
  41e54c:	mov    al,ds:0xad7fd32a
  41e551:	sub    cl,cl
  41e553:	push   cs
  41e554:	cld    
  41e555:	ror    BYTE PTR [edx+0x6a563439],cl
  41e55b:	aad    0xcc
  41e55d:	aaa    
  41e55e:	(bad)  
  41e55f:	mov    ecx,ds
  41e561:	mov    esi,0x6a09d7b7
  41e566:	dec    esi
  41e567:	and    eax,DWORD PTR [ecx+0x7dea15a1]
  41e56d:	push   eax
  41e56e:	imul   ecx,DWORD PTR [edx+eax*2-0x16dc27ad],0x205e32df
  41e579:	sbb    esp,DWORD PTR [esi]
  41e57b:	add    al,0xc4
  41e57d:	jbe    0x41e534
  41e57f:	out    0xd4,al
  41e581:	clc    
  41e582:	adc    dh,al
  41e584:	dec    esp
  41e585:	js     0x41e5d9
  41e587:	pop    edi
  41e588:	xlat   BYTE PTR ds:[ebx]
  41e589:	mov    edi,0x2a02e14f
  41e58e:	jno    0x41e5c9
  41e590:	inc    eax
  41e591:	popa   
  41e592:	test   eax,0xcade668c
  41e597:	jae    0x41e52b
  41e599:	pop    ss
  41e59a:	pop    ebp
  41e59b:	jae    0x41e575
  41e59d:	test   BYTE PTR [esi+0x75],bh
  41e5a0:	or     al,0xa4
  41e5a2:	sbb    eax,0x8ebf4d4b
  41e5a7:	mov    dl,0xe3
  41e5a9:	xor    DWORD PTR [eax+0x504e344c],esi
  41e5af:	cmp    BYTE PTR [ebp+0x3551216d],al
  41e5b5:	call   0x200d:0xe9197099
  41e5bc:	repnz xchg edi,eax
  41e5be:	faddp  st(3),st
  41e5c0:	xchg   DWORD PTR [ebp+0x6ba11cb8],eax
  41e5c6:	jno    0x41e5f4
  41e5c8:	sub    eax,0x14179840
  41e5cd:	push   0x28354fe6
  41e5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d3:	rcl    DWORD PTR [ebp+0x293fbd36],0x72
  41e5da:	loopne 0x41e61b
  41e5dc:	into   
  41e5dd:	xor    al,0xcd
  41e5df:	or     DWORD PTR [ebx-0x1c],ebx
  41e5e2:	pop    es
  41e5e3:	loopne 0x41e5ea
  41e5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e6:	mov    ch,0xab
  41e5e8:	add    DWORD PTR [esi],ebx
  41e5ea:	xchg   ebp,eax
  41e5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ec:	lock ins BYTE PTR es:[edi],dx
  41e5ee:	gs push 0xffffffc8
  41e5f1:	dec    esi
  41e5f2:	test   BYTE PTR [edx-0x49e0f20f],0x80
  41e5f9:	jge    0x41e669
  41e5fb:	mov    al,ds:0x69014420
  41e600:	xchg   ebx,eax
  41e601:	lods   eax,DWORD PTR ds:[esi]
  41e602:	ret    
  41e603:	std    
  41e604:	sub    eax,DWORD PTR [ecx-0x40dd9856]
  41e60a:	or     cl,BYTE PTR [eax-0x1d]
  41e60d:	es ret 
  41e60f:	mov    ebx,0x9c4d71e9
  41e614:	bnd jo 0x41e5e8
  41e617:	and    eax,eax
  41e619:	pop    edx
  41e61a:	sbb    eax,ecx
  41e61c:	jecxz  0x41e627
  41e61e:	ins    DWORD PTR es:[edi],dx
  41e61f:	pop    es
  41e620:	push   eax
  41e621:	mov    bl,0x17
  41e623:	pusha  
  41e624:	cld    
  41e625:	call   0x3d51:0xbc679cfd
  41e62c:	fucomip st,st(1)
  41e62e:	retf   
  41e62f:	pop    es
  41e630:	mov    edi,0x6eac264e
  41e635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e636:	ins    BYTE PTR es:[edi],dx
  41e637:	cmp    al,0x54
  41e639:	and    ebx,ecx
  41e63b:	enter  0x27ce,0xee
  41e63f:	xlat   BYTE PTR ds:[ebx]
  41e640:	outs   dx,BYTE PTR ds:[esi]
  41e641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e642:	dec    ecx
  41e643:	pop    ebx
  41e644:	xchg   DWORD PTR [eax-0x602a3fad],ebp
  41e64a:	mov    ebx,0x5da6123b
  41e64f:	repnz sti 
  41e651:	jmp    0x41e6ba
  41e653:	push   edx
  41e654:	mov    bh,0xb3
  41e656:	shl    BYTE PTR [edi+0x355c5642],cl
  41e65c:	sub    DWORD PTR [ebx],esp
  41e65e:	shl    ebp,0xd0
  41e661:	sbb    esp,ebx
  41e663:	jecxz  0x41e68d
  41e665:	pop    es
  41e666:	or     dh,BYTE PTR [edi+esi*2-0x7efbc167]
  41e66d:	jae    0x41e615
  41e66f:	push   ecx
  41e670:	mov    WORD PTR [ebx+0x2ac61ce6],fs
  41e676:	prefetch BYTE PTR [ecx-0x21ee28fd]
  41e67d:	aam    0xb9
  41e67f:	(bad)  
  41e680:	and    esi,DWORD PTR [eax+0x326c3ebf]
  41e686:	cmc    
  41e687:	jb     0x41e652
  41e689:	out    0x17,al
  41e68b:	loope  0x41e631
  41e68d:	cmc    
  41e68e:	fwait
  41e68f:	inc    edx
  41e690:	xor    DWORD PTR [esi-0x1d],edi
  41e693:	mov    dl,0x12
  41e695:	mov    al,ds:0x864870fc
  41e69a:	push   ebp
  41e69b:	mov    al,ds:0x8effd2b1
  41e6a0:	sbb    cl,cl
  41e6a2:	add    ch,ah
  41e6a4:	(bad)  
  41e6a5:	clc    
  41e6a6:	xor    esp,DWORD PTR [edx+eiz*8-0xe]
  41e6aa:	dec    ebp
  41e6ab:	imul   eax,DWORD PTR [ebp-0x76e58cd1],0xfffffffe
  41e6b2:	or     BYTE PTR [edi],dl
  41e6b4:	jbe    0x41e6ff
  41e6b6:	mov    eax,ds:0xf31784bf
  41e6bb:	addr16 xchg ebx,eax
  41e6bd:	or     al,0x8b
  41e6bf:	outs   dx,BYTE PTR ds:[esi]
  41e6c0:	push   esi
  41e6c1:	sub    ah,ah
  41e6c3:	xchg   ecx,eax
  41e6c4:	fisttp DWORD PTR [eax+0x5d6884d5]
  41e6ca:	and    ah,al
  41e6cc:	mov    DWORD PTR [ebx-0x4e],ebx
  41e6cf:	xchg   edx,eax
  41e6d0:	xchg   DWORD PTR [edi+0x7215710a],ebp
  41e6d6:	sbb    ebp,DWORD PTR [ebp+0x3ccc1f3c]
  41e6dc:	adc    ebx,DWORD PTR [esp+ebx*2+0xb]
  41e6e0:	mov    bl,0x2e
  41e6e2:	std    
  41e6e3:	and    ebx,DWORD PTR [ebx-0x13]
  41e6e6:	cs stos DWORD PTR es:[edi],eax
  41e6e8:	mov    dh,0x78
  41e6ea:	cmc    
  41e6eb:	ja     0x41e687
  41e6ed:	inc    edx
  41e6ee:	sbb    BYTE PTR [eax-0x29],0xe3
  41e6f2:	ror    DWORD PTR [edi+0x30],0x97
  41e6f6:	mov    ds:0xcc6b0be,ax
  41e6fc:	xchg   DWORD PTR [ebx-0x2518f148],ecx
  41e702:	dec    esi
  41e703:	sti    
  41e704:	sbb    al,0xd0
  41e706:	mov    WORD PTR [eax+0x52],?
  41e709:	sub    esp,DWORD PTR [ecx]
  41e70b:	adc    al,0xc4
  41e70d:	int    0xe5
  41e70f:	inc    esi
  41e710:	cmp    esi,DWORD PTR [esi*8-0x46b4e0b4]
  41e717:	inc    ebp
  41e718:	int3   
  41e719:	popa   
  41e71a:	out    dx,eax
  41e71b:	xchg   ebp,eax
  41e71c:	fidiv  WORD PTR ds:0x618439b3
  41e722:	and    BYTE PTR [edi-0x2],dh
  41e725:	arpl   WORD PTR [ebx],cx
  41e727:	sub    esp,DWORD PTR ds:0xfa619835
  41e72d:	add    al,BYTE PTR [eax-0x4a]
  41e730:	mov    ds,WORD PTR [edi]
  41e732:	xor    al,0x92
  41e734:	out    dx,eax
  41e735:	test   eax,0x1db3476a
  41e73a:	ret    0xb4a3
  41e73d:	jmp    0xa2d2:0x11fc27bf
  41e744:	mov    esp,0xe9be5da9
  41e749:	add    ah,dl
  41e74b:	scas   eax,DWORD PTR es:[edi]
  41e74c:	fld    st(7)
  41e74e:	add    esi,DWORD PTR [edx]
  41e750:	cs mov edx,0x8befc3a7
  41e756:	or     eax,esp
  41e758:	in     eax,0x26
  41e75a:	mov    BYTE PTR [esi+0x6c914477],dh
  41e760:	dec    esp
  41e761:	pop    ds
  41e762:	out    dx,eax
  41e763:	mov    bl,dh
  41e765:	adc    cl,BYTE PTR [ebp-0x9c8c8ef]
  41e76b:	pop    esp
  41e76c:	cmp    eax,0x6e5e5088
  41e771:	dec    ebx
  41e772:	add    al,0xf7
  41e774:	inc    ebx
  41e775:	test   al,0x4c
  41e777:	and    al,0xbd
  41e779:	xor    bl,BYTE PTR [esi+0x5f]
  41e77c:	shr    ebp,1
  41e77e:	xchg   esi,eax
  41e77f:	test   al,0xae
  41e781:	mov    ecx,0x8c4e0d2c
  41e786:	ret    
  41e787:	test   BYTE PTR [ecx+ecx*1],cl
  41e78a:	dec    esp
  41e78b:	push   esp
  41e78c:	pop    edi
  41e78d:	dec    edx
  41e78e:	mov    gs,WORD PTR [eax+0x5a]
  41e791:	mov    bh,0x69
  41e793:	xchg   edi,eax
  41e794:	sub    eax,0x7f5404e0
  41e799:	mov    ch,0xbf
  41e79b:	sub    al,0x67
  41e79d:	sbb    eax,0x639e5e45
  41e7a2:	xchg   esp,eax
  41e7a3:	or     ah,bh
  41e7a5:	jnp    0x41e7ef
  41e7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a8:	dec    ecx
  41e7a9:	push   ebx
  41e7aa:	xchg   BYTE PTR [ebp+0x5],bh
  41e7ad:	int    0x4d
  41e7af:	sbb    al,0x8c
  41e7b1:	inc    ebx
  41e7b2:	adc    ebp,DWORD PTR [ebp+0x648d795]
  41e7b8:	push   edx
  41e7b9:	sub    BYTE PTR [edx],dh
  41e7bb:	sub    ah,BYTE PTR [edx+eiz*2-0xc]
  41e7bf:	rcr    DWORD PTR [edx],1
  41e7c1:	ss in  al,dx
  41e7c3:	jmp    DWORD PTR [ebp-0x72]
  41e7c6:	bound  esi,QWORD PTR [edx]
  41e7c8:	ss xchg ecx,eax
  41e7ca:	popf   
  41e7cb:	loop   0x41e7d2
  41e7cd:	imul   esp,ebx,0xdc64a1e
  41e7d3:	lahf   
  41e7d4:	shl    DWORD PTR [eax+0x116bd236],0xf2
  41e7db:	int3   
  41e7dc:	lock add al,0x16
  41e7df:	iret   
  41e7e0:	mov    ebx,0x2ab93dc7
  41e7e5:	sbb    DWORD PTR [ecx-0x18e7a803],edx
  41e7eb:	iret   
  41e7ec:	enter  0xfcee,0xfe
  41e7f0:	cmp    al,0x7d
  41e7f2:	mov    ebp,0xb4a5d31
  41e7f7:	packssdw mm1,mm1
  41e7fa:	hlt    
  41e7fb:	cwde   
  41e7fc:	pop    esi
  41e7fd:	dec    ecx
  41e7fe:	icebp  
  41e7ff:	aaa    
  41e800:	leave  
  41e801:	pop    es
  41e802:	into   
  41e803:	fld    QWORD PTR [bx-0x19]
  41e807:	sub    al,0x8
  41e809:	sbb    ah,BYTE PTR [edx]
  41e80b:	enter  0xb5b9,0xfb
  41e80f:	jge    0x41e7e8
  41e811:	xor    DWORD PTR [edx],ecx
  41e813:	repnz fcmovu st,st(7)
  41e816:	dec    ebx
  41e817:	mov    dh,0xc8
  41e819:	rol    BYTE PTR [eax+0x2fa09ec5],1
  41e81f:	jg     0x41e896
  41e821:	mov    eax,0xd9336b2
  41e826:	(bad)  
  41e827:	sub    esi,DWORD PTR [edi]
  41e829:	mov    al,ds:0xe86d470a
  41e82e:	shl    DWORD PTR [ecx],cl
  41e830:	aas    
  41e831:	loop   0x41e7f8
  41e833:	data16 into 
  41e835:	shl    DWORD PTR [eax+eax*4-0x615d242],0x40
  41e83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e83e:	enter  0x72bd,0x5c
  41e842:	nop
  41e843:	sbb    al,0xa5
  41e845:	in     al,0xf
  41e847:	pop    es
  41e848:	mov    dl,0x8
  41e84a:	jbe    0x41e86f
  41e84c:	leave  
  41e84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84e:	xor    DWORD PTR [eax+0x6f29eb5],edi
  41e854:	out    0xf3,eax
  41e856:	outs   dx,BYTE PTR ds:[esi]
  41e857:	xchg   BYTE PTR [esi+0x2b],bl
  41e85a:	lods   al,BYTE PTR ds:[esi]
  41e85b:	dec    edi
  41e85c:	push   ds
  41e85d:	mov    ch,0x9b
  41e85f:	fdiv   DWORD PTR [ecx]
  41e861:	push   eax
  41e862:	loop   0x41e7ef
  41e864:	sub    edi,DWORD PTR ds:0x76d32ca8
  41e86a:	add    BYTE PTR [esp+eiz*4-0x16],ah
  41e86e:	(bad)  
  41e86f:	sahf   
  41e870:	(bad)  
  41e872:	pop    ss
  41e873:	jge    0x41e8d0
  41e875:	pop    edi
  41e876:	and    DWORD PTR [eax-0x5cea9e21],edx
  41e87c:	pusha  
  41e87d:	jl     0x41e8f0
  41e87f:	push   0xffffffaf
  41e881:	jl     0x41e83a
  41e883:	(bad)  
  41e884:	call   esp
  41e886:	in     eax,dx
  41e887:	ja     0x41e8fc
  41e889:	jecxz  0x41e885
  41e88b:	not    dh
  41e88d:	or     eax,0x1d698ef9
  41e892:	mov    DWORD PTR [ebx-0x16],0x937468fd
  41e899:	(bad)  [eax+0x46]
  41e89c:	mov    esp,0x9fbf8b72
  41e8a1:	push   ds
  41e8a2:	and    esi,DWORD PTR [ebx-0x76c92190]
  41e8a8:	or     DWORD PTR ds:0xfac8c05d,ecx
  41e8ae:	jae    0x41e882
  41e8b0:	mov    ch,0x7c
  41e8b2:	(bad)  
  41e8b3:	mov    ds:0xecb35abb,eax
  41e8b8:	dec    ecx
  41e8b9:	ficom  DWORD PTR [esi-0x606387e]
  41e8bf:	inc    esi
  41e8c0:	shr    dh,1
  41e8c2:	(bad)  
  41e8c3:	and    DWORD PTR [ecx+0x767e10c4],edi
  41e8c9:	fdiv   DWORD PTR [ebx-0x6e]
  41e8cc:	es mov ah,0x58
  41e8cf:	enter  0xc68b,0x12
  41e8d3:	xchg   BYTE PTR [esi+0x4a],cl
  41e8d6:	push   ds
  41e8d7:	out    0x5a,eax
  41e8d9:	fcomp  QWORD PTR [ebx+edi*1-0x21]
  41e8dd:	ja     0x41e942
  41e8df:	sbb    DWORD PTR ds:0xfdff5719,0xffffffa0
  41e8e6:	sub    al,0x1f
  41e8e8:	pop    edx
  41e8e9:	xchg   esp,eax
  41e8ea:	jmp    0x8737b434
  41e8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f0:	dec    esi
  41e8f1:	jg     0x41e883
  41e8f3:	dec    edi
  41e8f4:	sub    al,0xd5
  41e8f6:	sbb    al,BYTE PTR [edx]
  41e8f8:	rol    DWORD PTR [ebx],cl
  41e8fa:	push   cs
  41e8fb:	loope  0x41e8fb
  41e8fd:	xor    BYTE PTR [edx+0x3],cl
  41e900:	ins    DWORD PTR es:[edi],dx
  41e901:	test   DWORD PTR [ecx+0x6799ac8],edx
  41e907:	inc    ecx
  41e908:	mov    ebx,0x9af311cb
  41e90d:	test   edi,0x7023cce1
  41e913:	mov    eax,0xc33c3039
  41e918:	sub    BYTE PTR [edi-0x137df6a9],cl
  41e91e:	jo     0x41e99e
  41e920:	mov    ecx,ebx
  41e922:	and    BYTE PTR [esi],bl
  41e924:	stos   DWORD PTR es:[edi],eax
  41e925:	and    DWORD PTR [ebp-0x554d3eb9],0x42
  41e92c:	inc    ebp
  41e92d:	jno    0x41e8da
  41e92f:	test   al,0xcd
  41e931:	cmc    
  41e932:	and    esi,ecx
  41e934:	mov    esp,0x2754fcf1
  41e939:	jno    0x41e8f7
  41e93b:	(bad)  [ebx+0x48866d8]
  41e941:	dec    ecx
  41e942:	jmp    0x91585aea
  41e947:	jbe    0x41e943
  41e949:	sbb    bh,dl
  41e94b:	xchg   bl,dl
  41e94d:	sbb    ah,BYTE PTR [esp+esi*2-0xfb72aac]
  41e954:	stos   BYTE PTR es:[edi],al
  41e955:	popa   
  41e956:	sar    BYTE PTR [edi+edx*8],cl
  41e959:	(bad)  
  41e95a:	loop   0x41e9be
  41e95c:	dec    ebx
  41e95d:	fmul   QWORD PTR [ebp+0x47399b3]
  41e963:	sti    
  41e964:	lods   al,BYTE PTR ds:[esi]
  41e965:	call   0xfeede3eb
  41e96a:	and    eax,0x5b8a8e8e
  41e96f:	jge    0x41e9a1
  41e971:	loope  0x41e975
  41e973:	jb     0x41e903
  41e975:	out    dx,eax
  41e976:	xchg   edi,eax
  41e977:	mov    edx,0x343c9b59
  41e97c:	and    ebp,ecx
  41e97e:	(bad)  
  41e97f:	lds    ebp,FWORD PTR [eax+esi*2-0x6c]
  41e983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e984:	push   ds
  41e985:	xor    eax,0xa358dab4
  41e98a:	push   esi
  41e98b:	push   edi
  41e98c:	push   esi
  41e98d:	pop    ecx
  41e98e:	or     al,0x43
  41e990:	mov    esi,0xef7493eb
  41e995:	leave  
  41e996:	test   al,bh
  41e998:	stos   DWORD PTR es:[edi],eax
  41e999:	adc    al,0x1c
  41e99b:	and    eax,0x51cf2556
  41e9a0:	dec    eax
  41e9a1:	stc    
  41e9a2:	add    ebx,DWORD PTR [esi]
  41e9a4:	pop    ebx
  41e9a5:	and    ebp,0x199feda3
  41e9ab:	push   ss
  41e9ac:	dec    edi
  41e9ad:	push   cs
  41e9ae:	or     BYTE PTR [ebx],dl
  41e9b0:	aaa    
  41e9b1:	sbb    ah,cl
  41e9b3:	jmp    0x41e94e
  41e9b5:	test   DWORD PTR [eax-0x55781806],0xe22ddba3
  41e9bf:	lock jmp 0x41ea26
  41e9c2:	lahf   
  41e9c3:	mov    ah,0x6e
  41e9c5:	mov    ds:0x93c7f525,al
  41e9ca:	je     0x41e9f5
  41e9cc:	push   cs
  41e9cd:	nop
  41e9ce:	push   esi
  41e9cf:	pop    ss
  41e9d0:	pop    edx
  41e9d1:	or     DWORD PTR [esi-0x14],edx
  41e9d4:	push   ebx
  41e9d5:	sbb    DWORD PTR [edi-0x728721f3],ecx
  41e9db:	pop    esi
  41e9dc:	pop    ebx
  41e9dd:	mov    ch,dh
  41e9df:	inc    edx
  41e9e0:	retf   
  41e9e1:	iret   
  41e9e2:	mov    ebx,0x6e13ef81
  41e9e7:	pushf  
  41e9e8:	lds    ebp,FWORD PTR [edx]
  41e9ea:	outs   dx,BYTE PTR ds:[esi]
  41e9eb:	adc    eax,0x706d1362
  41e9f0:	pop    ds
  41e9f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f2:	xor    dl,bh
  41e9f4:	cmp    eax,0xf978ece0
  41e9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9fa:	mov    bh,0xb3
  41e9fc:	nop
  41e9fd:	repnz push ebp
  41e9ff:	dec    ebp
  41ea00:	xchg   DWORD PTR [ebp+0x49],edx
  41ea03:	jb     0x41e9e2
  41ea05:	bound  ebp,QWORD PTR [eax]
  41ea07:	push   es
  41ea08:	in     eax,dx
  41ea09:	cmp    BYTE PTR [edx],al
  41ea0b:	(bad)  
  41ea0d:	imul   esp,DWORD PTR [esi],0xfb00268d
  41ea13:	call   0xce700511
  41ea18:	or     dh,ah
  41ea1a:	jl     0x41e99f
  41ea1c:	jb     0x41e9a8
  41ea1e:	in     eax,dx
  41ea1f:	and    ah,BYTE PTR gs:[eax-0x32]
  41ea23:	add    DWORD PTR [eax-0x29],0x56
  41ea27:	or     BYTE PTR [ebx*2+0x7df5a7b0],al
  41ea2e:	sahf   
  41ea2f:	jl     0x41e9f9
  41ea31:	jp     0x41ea44
  41ea33:	jmp    0xfa3580a8
  41ea38:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea3a:	sar    BYTE PTR [ebx+0x4c],cl
  41ea3d:	fidiv  DWORD PTR [ebx]
  41ea3f:	lods   al,BYTE PTR ds:[esi]
  41ea40:	ja     0x41ea7f
  41ea42:	cmp    ah,BYTE PTR [ebx-0x7d]
  41ea45:	loopne 0x41ea8e
  41ea47:	das    
  41ea48:	dec    ecx
  41ea49:	aas    
  41ea4a:	xchg   ebx,eax
  41ea4b:	jle    0x41ea52
  41ea4d:	int    0x1c
  41ea4f:	call   0x61944a45
  41ea54:	inc    ebx
  41ea55:	jge    0x41ea3b
  41ea57:	test   esi,edi
  41ea59:	int    0x81
  41ea5b:	push   esi
  41ea5c:	mov    ebp,0xc85807c3
  41ea61:	jns    0x41ea3d
  41ea63:	pop    edx
  41ea64:	mov    dl,0x16
  41ea66:	ja     0x41ea28
  41ea68:	sub    esp,DWORD PTR [edx-0x7be7e658]
  41ea6e:	inc    esp
  41ea6f:	in     al,0x76
  41ea71:	jae    0x41eae0
  41ea73:	out    dx,eax
  41ea74:	sub    cl,BYTE PTR [ebp-0x4a192b71]
  41ea7a:	cmp    al,0xaf
  41ea7c:	pop    ds
  41ea7d:	and    BYTE PTR ds:0xf3ef3ca3,cl
  41ea83:	shl    DWORD PTR [ecx-0x30b0bcc1],0x1f
  41ea8a:	je     0x41eab5
  41ea8c:	pop    ebp
  41ea8d:	dec    ebp
  41ea8e:	int3   
  41ea8f:	push   cs
  41ea90:	fisub  DWORD PTR [ebx+0x33]
  41ea93:	daa    
  41ea94:	imul   ebp,ebx,0xca38f57
  41ea9a:	pushf  
  41ea9b:	sbb    DWORD PTR [ebx+0x22],0x96bccde
  41eaa2:	and    BYTE PTR [eax-0x56],ch
  41eaa5:	cwde   
  41eaa6:	mov    esp,0x20affd76
  41eaab:	or     ah,bh
  41eaad:	gs xchg esp,eax
  41eaaf:	out    dx,eax
  41eab0:	xchg   edi,eax
  41eab1:	xor    eax,0x5e37b613
  41eab6:	fisttp QWORD PTR gs:[esi-0x4d]
  41eaba:	daa    
  41eabb:	inc    edi
  41eabc:	pop    ebp
  41eabd:	iret   
  41eabe:	mov    ch,0x22
  41eac0:	daa    
  41eac1:	das    
  41eac2:	and    ah,BYTE PTR [ebp-0x72]
  41eac5:	inc    ecx
  41eac6:	push   ds
  41eac7:	mov    edi,0x1f7ff1d9
  41eacc:	xchg   ebp,eax
  41eacd:	jae    0x41eaea
  41eacf:	aam    0xfa
  41ead1:	mov    dh,0xd6
  41ead3:	sahf   
  41ead4:	jge    0x41eab6
  41ead6:	pop    eax
  41ead7:	adc    DWORD PTR [esi+0x53a4a798],edx
  41eadd:	int    0xf9
  41eadf:	inc    ecx
  41eae0:	idiv   BYTE PTR [edx+0x13]
  41eae3:	mov    al,0xf8
  41eae5:	scas   al,BYTE PTR es:[edi]
  41eae6:	mul    esp
  41eae8:	pop    ebp
  41eae9:	cmp    dl,bh
  41eaeb:	mov    ch,0x98
  41eaed:	cld    
  41eaee:	mov    ecx,0x7242a3a1
  41eaf3:	scas   al,BYTE PTR es:[edi]
  41eaf4:	not    cl
  41eaf6:	fistp  DWORD PTR [ecx+eiz*8]
  41eaf9:	xchg   ah,bh
  41eafb:	sub    al,0x48
  41eafd:	jge    0x41eac8
  41eaff:	ins    BYTE PTR es:[edi],dx
  41eb00:	imul   edi,DWORD PTR [esi],0x3032f78e
  41eb06:	push   ds
  41eb07:	pop    eax
  41eb08:	push   esi
  41eb09:	and    BYTE PTR [edx-0x7cfbe102],bh
  41eb0f:	ficom  WORD PTR [esi]
  41eb11:	iret   
  41eb12:	sbb    eax,0x62300a0f
  41eb17:	(bad)  
  41eb18:	loop   0x41eb97
  41eb1a:	js     0x41eb29
  41eb1c:	xor    dh,BYTE PTR [edx-0x32]
  41eb1f:	mov    eax,0x4f491ec
  41eb24:	aam    0xee
  41eb26:	mov    WORD PTR [esi],cs
  41eb28:	sub    BYTE PTR [esi],dl
  41eb2a:	jmp    0x20f8:0x6efd1f38
  41eb31:	stos   DWORD PTR es:[edi],eax
  41eb32:	cmp    ebx,0x156bc429
  41eb38:	pushf  
  41eb39:	sbb    bh,BYTE PTR [edi+0x46]
  41eb3c:	mov    DWORD PTR [edx+0x6cbfe7c4],esp
  41eb42:	mov    ah,0xab
  41eb44:	dec    edi
  41eb45:	repnz sar esi,0xb7
  41eb49:	push   esi
  41eb4a:	stos   BYTE PTR es:[edi],al
  41eb4b:	fsubr  DWORD PTR [edx-0x3648e7af]
  41eb51:	xor    esi,ecx
  41eb53:	mov    esp,0xeba9ce07
  41eb58:	out    dx,al
  41eb59:	mov    ebx,0xffaa955e
  41eb5e:	mov    ds:0xa37dcbda,al
  41eb63:	mov    ebp,0xa867bc73
  41eb68:	ins    DWORD PTR es:[edi],dx
  41eb69:	push   es
  41eb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb6b:	imul   esi,DWORD PTR [ebx+edi*1+0x2a],0x1c
  41eb70:	jmp    0x41eaf3
  41eb72:	push   edi
  41eb73:	pop    edi
  41eb74:	mov    ch,0x51
  41eb76:	mov    ecx,0x9e1ce2bf
  41eb7b:	stc    
  41eb7c:	imul   edx,DWORD PTR es:[edx-0x3],0x66
  41eb81:	sub    ah,BYTE PTR [ebp+0x1f]
  41eb84:	xor    edi,DWORD PTR [esi]
  41eb86:	jge    0x41eb58
  41eb88:	and    al,0xbb
  41eb8a:	ror    DWORD PTR [esi-0x7fbb7b31],0x6c
  41eb91:	jg     0x41eb83
  41eb93:	sbb    DWORD PTR [esi],eax
  41eb95:	xchg   esp,eax
  41eb96:	lods   al,BYTE PTR ds:[esi]
  41eb97:	hlt    
  41eb98:	push   esi
  41eb99:	mov    DWORD PTR [esi],edx
  41eb9b:	push   ds
  41eb9c:	cmp    eax,0x20f315e5
  41eba1:	jge    0x41eba2
  41eba3:	mov    bh,0xa4
  41eba5:	pop    ebx
  41eba6:	in     eax,dx
  41eba7:	xor    edi,DWORD PTR [ebp-0x16e52669]
  41ebad:	or     dh,0x48
  41ebb0:	push   0xaffd04
  41ebb5:	cdq    
  41ebb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb7:	(bad)  
  41ebb9:	fstp   DWORD PTR [esi+0x6d]
  41ebbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebbd:	int3   
  41ebbe:	push   esp
  41ebbf:	pushf  
  41ebc0:	sub    BYTE PTR [edx+0x1a],cl
  41ebc3:	inc    esi
  41ebc4:	mov    eax,0xc86e49b
  41ebc9:	adc    DWORD PTR [esi-0x76],0x907f68ec
  41ebd0:	mov    ebx,0x4598440b
  41ebd5:	push   DWORD PTR [ebp+0x2b]
  41ebd8:	xchg   BYTE PTR [ecx],dl
  41ebda:	gs ins DWORD PTR es:[edi],dx
  41ebdc:	cdq    
  41ebdd:	retf   0xcfea
  41ebe0:	dec    edi
  41ebe1:	test   BYTE PTR [edi+0x3a],0x6c
  41ebe5:	cmp    eax,0xe85d98a8
  41ebea:	inc    edi
  41ebeb:	xchg   ebx,eax
  41ebec:	ror    DWORD PTR ds:0x67e2f873,1
  41ebf2:	int    0x7d
  41ebf4:	ins    BYTE PTR es:[edi],dx
  41ebf5:	hlt    
  41ebf6:	lock push edx
  41ebf8:	int    0x63
  41ebfa:	cmp    dl,BYTE PTR [ebx]
  41ebfc:	in     al,dx
  41ebfd:	and    DWORD PTR [ecx-0x7c97b311],edi
  41ec03:	lods   eax,DWORD PTR ds:[esi]
  41ec04:	sub    ch,BYTE PTR [edx]
  41ec06:	ins    BYTE PTR es:[edi],dx
  41ec07:	jb     0x41eb8d
  41ec09:	icebp  
  41ec0a:	mov    ebx,0x9f94739a
  41ec0f:	jnp    0x41ebb5
  41ec11:	into   
  41ec12:	add    eax,0x55457539
  41ec17:	push   ebp
  41ec18:	test   BYTE PTR [edi-0x34b8744d],bh
  41ec1e:	jmp    0x2b2f:0xcbde91c8
  41ec25:	add    ecx,DWORD PTR [ebp+0x3f]
  41ec28:	dec    esp
  41ec29:	dec    ebx
  41ec2a:	shr    DWORD PTR ds:0x95859ab4,0x2f
  41ec31:	mov    WORD PTR [ebp-0x4500cec4],es
  41ec37:	aas    
  41ec38:	inc    ebx
  41ec39:	in     eax,0xa5
  41ec3b:	jns    0x41ec6c
  41ec3d:	ret    0xd3b7
  41ec40:	mov    bh,BYTE PTR [esi+0x59]
  41ec43:	add    ch,BYTE PTR [ebx]
  41ec45:	mov    al,0xe8
  41ec47:	fld    TBYTE PTR [ecx+ecx*1]
  41ec4a:	or     dl,dh
  41ec4c:	pop    DWORD PTR [edi]
  41ec4e:	loope  0x41ec1c
  41ec50:	loop   0x41ec83
  41ec52:	leave  
  41ec53:	nop
  41ec54:	int    0xfa
  41ec56:	jle    0x41ecc7
  41ec58:	sahf   
  41ec59:	jp     0x41eca6
  41ec5b:	(bad)  
  41ec5c:	stos   DWORD PTR es:[edi],eax
  41ec5d:	or     ah,BYTE PTR [ecx+0x1b63d181]
  41ec63:	das    
  41ec64:	hlt    
  41ec65:	and    eax,0x34e9be85
  41ec6a:	lahf   
  41ec6b:	xchg   ebx,eax
  41ec6c:	inc    esi
  41ec6d:	sysenter 
  41ec6f:	xor    al,0x9c
  41ec71:	push   edx
  41ec72:	cmp    al,0x2b
  41ec74:	cli    
  41ec75:	push   esp
  41ec76:	mov    BYTE PTR [esi],dh
  41ec78:	std    
  41ec79:	sar    DWORD PTR [ebx+0x3847bf23],0x6e
  41ec80:	stos   BYTE PTR es:[edi],al
  41ec81:	(bad)  
  41ec83:	push   0x3dd9f74b
  41ec88:	aam    0xaf
  41ec8a:	jge    0x41ecb0
  41ec8c:	fisubr DWORD PTR [ebp-0x2195d799]
  41ec92:	cs std 
  41ec94:	ret    
  41ec95:	dec    esp
  41ec96:	cmc    
  41ec97:	retf   
  41ec98:	adc    eax,DWORD PTR [esi+0x2d]
  41ec9b:	add    al,0x98
  41ec9d:	mov    al,0x4
  41ec9f:	aam    0x12
  41eca1:	iret   
  41eca2:	dec    esp
  41eca3:	mov    edx,DWORD PTR [eax+0x55]
  41eca6:	adc    ah,0x7e
  41eca9:	cmc    
  41ecaa:	sub    al,0xf4
  41ecac:	call   0x5c50:0x2d16cdfc
  41ecb3:	arpl   WORD PTR [ebx*2-0x53178e44],bx
  41ecba:	fimul  DWORD PTR [ebx+eax*1]
  41ecbd:	adc    eax,0xd1308d57
  41ecc2:	sti    
  41ecc3:	loopne 0x41ed1a
  41ecc5:	sbb    edx,eax
  41ecc7:	sub    al,0xa2
  41ecc9:	adc    bl,dl
  41eccb:	jge    0x41ed32
  41eccd:	xor    DWORD PTR [esp+ebp*2+0x285765ff],edi
  41ecd4:	mov    ds:0x1ee8f456,al
  41ecd9:	je     0x41ecff
  41ecdb:	sub    ebp,DWORD PTR [esi-0x2b7133c6]
  41ece1:	or     al,BYTE PTR [ebx]
  41ece3:	push   0x9dbd0f0d
  41ece8:	(bad)  
  41ece9:	and    DWORD PTR [edx],esp
  41eceb:	rcr    al,1
  41eced:	cli    
  41ecee:	into   
  41ecef:	xor    ebx,DWORD PTR [edi-0x61ef8378]
  41ecf5:	icebp  
  41ecf6:	adc    ebp,edx
  41ecf8:	jae    0x41ed30
  41ecfa:	adc    edi,DWORD PTR [edx-0x49]
  41ecfd:	outs   dx,DWORD PTR ds:[esi]
  41ecfe:	ja     0x41ec9d
  41ed00:	xchg   esi,eax
  41ed01:	add    esi,DWORD PTR [ecx-0x3ce5aa54]
  41ed07:	dec    ebp
  41ed08:	jge    0x41ed1c
  41ed0a:	adc    bh,cl
  41ed0c:	dec    esi
  41ed0d:	cdq    
  41ed0e:	stc    
  41ed0f:	loopne 0x41ed06
  41ed11:	lahf   
  41ed12:	push   ds
  41ed13:	push   0xffffffc9
  41ed15:	or     al,0x3c
  41ed17:	ins    BYTE PTR es:[edi],dx
  41ed18:	ret    0xa9aa
  41ed1b:	test   DWORD PTR [ecx],ecx
  41ed1d:	add    DWORD PTR ds:0x6caa3c72,0xffffffb7
  41ed24:	push   edi
  41ed25:	push   ebx
  41ed26:	mov    bl,dl
  41ed28:	and    eax,0xa9bf0604
  41ed2d:	xor    edi,esp
  41ed2f:	fsubrp st(2),st
  41ed31:	add    DWORD PTR [eax+eax*1-0x5be71115],esi
  41ed38:	mov    al,0x8a
  41ed3a:	dec    esp
  41ed3b:	and    eax,0xa4620f14
  41ed40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed41:	test   eax,0x368f24ad
  41ed46:	popa   
  41ed47:	xchg   edx,eax
  41ed48:	pop    ss
  41ed49:	test   eax,0x8d5aa9fa
  41ed4e:	pop    esp
  41ed4f:	pushf  
  41ed50:	in     al,dx
  41ed51:	push   0x589232fb
  41ed56:	sbb    al,0x21
  41ed58:	test   DWORD PTR [eax+0x12],eax
  41ed5b:	ficom  WORD PTR [edi+0x35]
  41ed5e:	mov    edx,0x981bbca1
  41ed63:	adc    dh,BYTE PTR [ebp+0x4ebb1d20]
  41ed69:	add    DWORD PTR [edi+0x55bc303c],0xffffff83
  41ed70:	jns    0x41ed01
  41ed72:	cmp    eax,0xf402d9ef
  41ed77:	sub    DWORD PTR [ebx],esi
  41ed79:	sbb    DWORD PTR ds:0x2ce915a7,ebx
  41ed7f:	sbb    BYTE PTR [ecx+0x6f],cl
  41ed82:	test   bl,ch
  41ed84:	sub    eax,0x24a372ba
  41ed89:	ss loop 0x41ed1d
  41ed8c:	(bad)  
  41ed8d:	cmc    
  41ed8e:	mov    ds:0x1fbe251d,eax
  41ed93:	fcom   QWORD PTR [ebx+0x4]
  41ed96:	sub    ebx,ecx
  41ed98:	jnp    0x41ed8f
  41ed9a:	add    eax,0xf40457da
  41ed9f:	test   al,0x7f
  41eda1:	div    BYTE PTR [esi+edx*1]
  41eda4:	jae    0x41ed91
  41eda6:	sbb    BYTE PTR gs:[ecx-0x24],bh
  41edaa:	mov    ds,WORD PTR [eax-0x3f]
  41edad:	stos   DWORD PTR es:[edi],eax
  41edae:	scas   eax,DWORD PTR es:[edi]
  41edaf:	call   0xf2ba65f1
  41edb4:	fild   DWORD PTR [ebx]
  41edb6:	aas    
  41edb7:	std    
  41edb8:	jp     0x41ed47
  41edba:	mov    dl,0x9
  41edbc:	sahf   
  41edbd:	jb     0x41ed8b
  41edbf:	jmp    0xa902:0x726e0278
  41edc6:	mov    esp,0xd04c5ba6
  41edcb:	pop    ecx
  41edcc:	mov    edi,0xcbab5dca
  41edd1:	mov    ah,0x9a
  41edd3:	jbe    0x41ed88
  41edd5:	inc    ebx
  41edd6:	sbb    DWORD PTR [ebx],esp
  41edd8:	sub    al,0xf6
  41edda:	push   edi
  41eddb:	in     eax,dx
  41eddc:	mov    dl,0x2a
  41edde:	add    edx,DWORD PTR [ebx+edx*8+0x3]
  41ede2:	pop    ebx
  41ede3:	cmp    al,0xdb
  41ede5:	in     eax,dx
  41ede6:	pop    esi
  41ede7:	dec    edi
  41ede8:	addr16 and eax,0x6df56223
  41edee:	mov    bl,0x9c
  41edf0:	or     ah,BYTE PTR [ebp+0x2b]
  41edf3:	xchg   esi,eax
  41edf4:	mov    esp,0x31e3d330
  41edf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfa:	jnp    0x41ee0a
  41edfc:	push   ds
  41edfd:	adc    BYTE PTR [eax-0x21ac08ad],ch
  41ee03:	stos   BYTE PTR es:[edi],al
  41ee04:	int3   
  41ee05:	mov    ds:0xed86a931,al
  41ee0a:	imul   edx,DWORD PTR [ecx],0xb
  41ee0d:	push   ebx
  41ee0e:	lods   eax,DWORD PTR ds:[esi]
  41ee0f:	test   edi,eax
  41ee11:	or     edi,esp
  41ee13:	dec    ecx
  41ee14:	dec    esi
  41ee15:	jecxz  0x41ee06
  41ee17:	jns    0x41ee30
  41ee19:	rol    DWORD PTR [ebx-0x73bf0ff5],1
  41ee1f:	mov    WORD PTR [eax],?
  41ee21:	xor    DWORD PTR [edx],esp
  41ee23:	pushf  
  41ee24:	out    0x2f,al
  41ee26:	adc    eax,0x296d3686
  41ee2b:	pop    edx
  41ee2c:	out    0xc,eax
  41ee2e:	cmp    edx,DWORD PTR [edx+edx*4-0x1d68adcb]
  41ee35:	mov    edi,0x2846667f
  41ee3a:	scas   eax,DWORD PTR es:[edi]
  41ee3b:	inc    ebx
  41ee3c:	ss push cs
  41ee3e:	outs   dx,DWORD PTR ds:[esi]
  41ee3f:	and    eax,0x9bfcd8a4
  41ee44:	mov    eax,0x765cb43c
  41ee49:	jae    0x41ee70
  41ee4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4c:	cs in  eax,dx
  41ee4e:	push   edi
  41ee4f:	stc    
  41ee50:	je     0x41eec8
  41ee52:	cmp    DWORD PTR [eax+0x19],ecx
  41ee55:	test   al,0x9a
  41ee57:	xchg   BYTE PTR [edi],ch
  41ee59:	inc    esi
  41ee5a:	mov    bl,0x7b
  41ee5c:	add    DWORD PTR [edi+0x766387ca],ecx
  41ee62:	mov    DWORD PTR [ecx+0x66],esi
  41ee65:	adc    ch,BYTE PTR [ebp+ebx*8+0x41]
  41ee69:	jo     0x41eeba
  41ee6b:	sbb    edx,DWORD PTR ds:0xcb1ab7a5
  41ee71:	gs xchg ebp,eax
  41ee73:	jnp    0x41eec6
  41ee75:	rcl    edx,cl
  41ee77:	push   0xffffffde
  41ee79:	hlt    
  41ee7a:	jecxz  0x41eedc
  41ee7c:	push   es
  41ee7d:	das    
  41ee7e:	loope  0x41ee9b
  41ee80:	pop    edi
  41ee81:	mov    ch,0x5d
  41ee83:	mov    bh,0xea
  41ee85:	sub    DWORD PTR [eax],0xffffffbb
  41ee88:	xor    DWORD PTR [ebx+0x1181a6ad],ecx
  41ee8e:	push   edi
  41ee8f:	es je  0x4662f828
  41ee96:	jmp    0x3216:0x500a3ed1
  41ee9d:	lahf   
  41ee9e:	fstp   st(6)
  41eea0:	std    
  41eea1:	pop    es
  41eea2:	(bad)  
  41eea3:	jle    0x41ee5e
  41eea5:	jl     0x41eec0
  41eea7:	xor    eax,0xa5961f72
  41eeac:	cld    
  41eead:	fsubr  DWORD PTR [eax-0x51]
  41eeb0:	aas    
  41eeb1:	bound  ebp,QWORD PTR [edx+0x6f750eba]
  41eeb7:	je     0x41ee58
  41eeb9:	add    eax,ecx
  41eebb:	stos   DWORD PTR es:[edi],eax
  41eebc:	(bad)  
  41eebe:	sub    al,0xf2
  41eec0:	and    eax,0x54a6f283
  41eec5:	les    eax,FWORD PTR ds:0x733a78cc
  41eecb:	aam    0x56
  41eecd:	loop   0x41ef45
  41eecf:	push   ecx
  41eed0:	and    al,0x13
  41eed2:	mov    eax,ds:0x3988b970
  41eed7:	int3   
  41eed8:	shl    DWORD PTR [ecx],1
  41eeda:	adc    DWORD PTR [esi],0x5608f563
  41eee0:	repnz out 0xe3,al
  41eee3:	ins    DWORD PTR es:[edi],dx
  41eee4:	and    al,0x17
  41eee6:	inc    ebx
  41eee7:	add    eax,0xec4500ae
  41eeec:	jbe    0x41ef39
  41eeee:	ds sbb dh,0x5c
  41eef2:	mov    eax,0x94a3b889
  41eef7:	xor    DWORD PTR [edi+0x22],0x6f28dde4
  41eefe:	test   DWORD PTR [ecx+eiz*2],ebx
  41ef01:	cmp    ah,BYTE PTR [edi+0x2f]
  41ef04:	out    0x15,eax
  41ef06:	ins    DWORD PTR es:[edi],dx
  41ef07:	lahf   
  41ef08:	push   ebx
  41ef09:	mov    ebx,DWORD PTR [esi]
  41ef0b:	mov    BYTE PTR [edx],bh
  41ef0d:	and    BYTE PTR [edx+ebx*4+0x4253e88a],bh
  41ef14:	add    ah,BYTE PTR ds:0xc1a77881
  41ef1a:	es call 0x13538db9
  41ef20:	clc    
  41ef21:	mov    cl,0x82
  41ef23:	adc    DWORD PTR [eax+ebx*1],ebx
  41ef26:	or     cl,ch
  41ef28:	or     al,dl
  41ef2a:	add    esp,ebp
  41ef2c:	imul   ecx,DWORD PTR [ebx-0x74154eba],0xffffffce
  41ef33:	addr16 fwait
  41ef35:	push   0x72d89a04
  41ef3a:	dec    esi
  41ef3b:	fimul  WORD PTR [ecx+0x7bbf8bdf]
  41ef41:	fbld   TBYTE PTR [ecx]
  41ef43:	jnp    0x41ef50
  41ef45:	pop    eax
  41ef46:	push   eax
  41ef47:	jl     0x41ef33
  41ef49:	out    0x60,al
  41ef4b:	stos   BYTE PTR es:[edi],al
  41ef4c:	add    eax,0xd45a3910
  41ef51:	popa   
  41ef52:	ret    
  41ef53:	push   esi
  41ef54:	pop    eax
  41ef55:	jns    0x41ef2c
  41ef57:	lock dec esp
  41ef59:	cmp    al,0xcd
  41ef5b:	sbb    bh,bh
  41ef5d:	mov    ecx,0xa9ea1560
  41ef62:	test   al,0xee
  41ef64:	dec    ebx
  41ef65:	ja     0x41ef07
  41ef67:	inc    esi
  41ef68:	xchg   edi,eax
  41ef69:	scas   al,BYTE PTR es:[edi]
  41ef6a:	and    DWORD PTR [esi+edi*1],ebp
  41ef6d:	aas    
  41ef6e:	fild   QWORD PTR [esi]
  41ef70:	cld    
  41ef71:	sbb    BYTE PTR [edx+0x42],ch
  41ef74:	xor    al,0xdd
  41ef76:	add    bl,BYTE PTR [esi-0x36759126]
  41ef7c:	mov    ah,0x13
  41ef7e:	dec    esp
  41ef7f:	out    0x78,al
  41ef81:	inc    edx
  41ef82:	xlat   BYTE PTR ds:[ebx]
  41ef83:	mov    ecx,0xcd44548c
  41ef88:	inc    ebp
  41ef89:	dec    edi
  41ef8a:	cmp    al,0x28
  41ef8c:	pand   mm3,QWORD PTR [esi+0x77ac1f45]
  41ef93:	into   
  41ef94:	mov    edx,0x21300a51
  41ef99:	iret   
  41ef9a:	inc    edx
  41ef9b:	jno    0x41ef86
  41ef9d:	mov    eax,ds:0x85b24e2c
  41efa2:	outs   dx,BYTE PTR ds:[esi]
  41efa3:	mov    DWORD PTR [edx+0x21],0xeb444c5f
  41efaa:	into   
  41efab:	mov    esp,0xfce4f2ef
  41efb0:	mov    ds:0x71de12d3,al
  41efb5:	xor    eax,0xfbc791b1
  41efba:	mov    edi,0xe52c312
  41efbf:	fsubr  DWORD PTR [esi-0x9]
  41efc2:	fidiv  DWORD PTR [edx-0xb]
  41efc5:	ds (bad) 
  41efc7:	adc    eax,0x54b36c96
  41efcc:	sbb    edx,DWORD PTR [esi+0x76]
  41efcf:	sub    DWORD PTR [ebp-0x5d],esi
  41efd2:	out    0x76,al
  41efd4:	popf   
  41efd5:	pop    esi
  41efd6:	pop    es
  41efd7:	sbb    dl,cl
  41efd9:	fs fwait
  41efdb:	cmp    ebx,DWORD PTR [edi-0x76679590]
  41efe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efe2:	std    
  41efe3:	into   
  41efe4:	es cmp eax,0xcf12f1d4
  41efea:	pusha  
  41efeb:	mov    ebx,0x9aef99a9
  41eff0:	cmp    al,bl
  41eff2:	jbe    0x41f014
  41eff4:	inc    esi
  41eff5:	(bad)  
  41eff6:	xor    al,0x60
  41eff8:	bound  edi,QWORD PTR [edi-0x3e]
  41effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effc:	out    0xf9,al
  41effe:	adc    BYTE PTR [edi+edx*1],bl
  41f001:	je     0x41efe6
  41f003:	fst    QWORD PTR ds:0x7de2e941
  41f009:	dec    eax
  41f00a:	inc    ecx
  41f00b:	(bad)  
  41f00d:	in     al,dx
  41f00e:	pop    edi
  41f00f:	ja     0x41f06d
  41f011:	ret    
  41f012:	loop   0x41f01a
  41f014:	xchg   esp,eax
  41f015:	test   al,0x91
  41f017:	ror    DWORD PTR [edi+eiz*1-0x7f],0xa7
  41f01c:	out    0x34,al
  41f01e:	loop   0x41eff1
  41f020:	sub    al,0x20
  41f022:	imul   ecx,DWORD PTR [eax-0x66],0x7a
  41f026:	add    eax,0xeec14e2
  41f02b:	out    dx,al
  41f02c:	jecxz  0x41f090
  41f02e:	adc    edi,ebx
  41f030:	call   0x72446a20
  41f035:	adc    bl,cl
  41f037:	and    bh,bh
  41f039:	arpl   WORD PTR [esi],bp
  41f03b:	and    bl,BYTE PTR [ecx]
  41f03d:	je     0x41efea
  41f03f:	xchg   ebp,eax
  41f040:	out    0x37,eax
  41f042:	mov    DWORD PTR [esi-0x2fde3c21],ebx
  41f048:	mov    dl,0x7a
  41f04a:	outs   dx,BYTE PTR ds:[esi]
  41f04b:	jo     0x41f0cc
  41f04d:	jnp    0x41f041
  41f04f:	lods   eax,DWORD PTR ds:[esi]
  41f050:	pusha  
  41f051:	jecxz  0x41f0b0
  41f053:	mov    ds:0xee655324,eax
  41f058:	xchg   esi,eax
  41f059:	or     bl,al
  41f05b:	pop    ss
  41f05c:	push   edi
  41f05d:	pushf  
  41f05e:	or     al,0xde
  41f060:	arpl   WORD PTR ds:0x78c2675f,cx
  41f066:	adc    DWORD PTR [ecx+0x5c6de8f9],0xfffffff9
  41f06d:	mov    edi,0x13b20b4d
  41f072:	daa    
  41f073:	je     0x41f063
  41f075:	(bad)
  41f078:	mov    bh,0xb8
  41f07a:	xor    al,0xe6
  41f07c:	inc    esi
  41f07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f07e:	aad    0x58
  41f080:	xor    dl,ah
  41f082:	lock cmp dh,dl
  41f085:	stos   BYTE PTR es:[edi],al
  41f086:	and    BYTE PTR [ecx+0x5a],al
  41f089:	mov    dl,0xe1
  41f08b:	gs ss cli 
  41f08e:	scas   al,BYTE PTR es:[edi]
  41f08f:	ret    
  41f090:	icebp  
  41f091:	fiadd  WORD PTR [ebp-0x36]
  41f094:	and    DWORD PTR [ebp+0x16],0xffffffbe
  41f098:	and    edi,DWORD PTR [ebx]
  41f09a:	and    BYTE PTR [ecx+0x4a],0x7e
  41f09e:	int3   
  41f09f:	mov    ecx,0x55ca1512
  41f0a4:	xchg   edx,eax
  41f0a5:	out    dx,eax
  41f0a6:	test   edi,esi
  41f0a8:	retf   0x382a
  41f0ab:	add    al,0x69
  41f0ad:	es popf 
  41f0af:	arpl   WORD PTR [ebx+0x6a5f0893],si
  41f0b5:	dec    esp
  41f0b6:	mov    edx,0x100fb957
  41f0bb:	fisttp WORD PTR [ecx+0x742fd19b]
  41f0c1:	or     ecx,esi
  41f0c3:	adc    BYTE PTR [esp+ecx*1],bh
  41f0c6:	pop    esp
  41f0c7:	outs   dx,DWORD PTR ds:[esi]
  41f0c8:	mov    esi,0x4ab55920
  41f0cd:	ins    BYTE PTR es:[edi],dx
  41f0ce:	xor    al,BYTE PTR cs:[ebp-0x7a7173ea]
  41f0d5:	mov    eax,ds:0xa546e7d7
  41f0da:	push   ecx
  41f0db:	add    ch,0xe
  41f0de:	xchg   DWORD PTR [ecx-0x671e94b7],ebp
  41f0e4:	imul   ecx,DWORD PTR [ebx+0x627c37d8],0x4a46ddc0
  41f0ee:	push   ebx
  41f0ef:	add    BYTE PTR [edx-0x3a75c8eb],ah
  41f0f5:	mov    BYTE PTR [esi+ebx*4+0x3d],bl
  41f0f9:	hlt    
  41f0fa:	popf   
  41f0fb:	xlat   BYTE PTR ds:[ebx]
  41f0fc:	cmp    bh,cl
  41f0fe:	dec    edx
  41f0ff:	xchg   esp,eax
  41f100:	mov    bl,0x23
  41f102:	push   0xffffffa7
  41f104:	jno    0x41f11f
  41f106:	in     al,dx
  41f107:	daa    
  41f108:	xlat   BYTE PTR ds:[ebx]
  41f109:	mov    edi,ss
  41f10b:	leave  
  41f10c:	push   ss
  41f10d:	cmp    dl,bh
  41f10f:	call   0x276b:0x5a374772
  41f116:	mov    ds:0x249c64b4,al
  41f11b:	leave  
  41f11c:	aaa    
  41f11d:	xchg   ecx,eax
  41f11e:	aad    0xbb
  41f120:	pop    esi
  41f121:	lahf   
  41f122:	aam    0x7a
  41f124:	adc    DWORD PTR [esp+edi*4-0x2c7b1ce7],ebx
  41f12b:	loop   0x41f0f8
  41f12d:	lods   eax,DWORD PTR ds:[esi]
  41f12e:	cs in  al,0xb4
  41f131:	jno    0x41f0fa
  41f133:	and    DWORD PTR [edx],0x44cc4d23
  41f139:	ret    0x14a5
  41f13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13d:	repnz int3 
  41f13f:	loope  0x41f11a
  41f141:	xchg   ecx,eax
  41f142:	xor    cl,bh
  41f144:	loope  0x41f16c
  41f146:	mov    al,0xac
  41f148:	add    edi,DWORD PTR [edx-0x61493a39]
  41f14e:	outs   dx,BYTE PTR ds:[esi]
  41f14f:	stos   DWORD PTR es:[edi],eax
  41f150:	xchg   edi,eax
  41f151:	and    eax,0x635eaf7c
  41f156:	add    eax,0x7fc14d14
  41f15b:	aaa    
  41f15c:	xchg   edx,eax
  41f15d:	(bad)  
  41f15e:	xlat   BYTE PTR ds:[ebx]
  41f15f:	ins    DWORD PTR es:[edi],dx
  41f160:	outs   dx,BYTE PTR ds:[esi]
  41f161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f162:	fwait
  41f163:	sub    BYTE PTR [edx-0x56038dc2],bh
  41f169:	mov    esi,0x1a4f7a46
  41f16e:	inc    edi
  41f16f:	inc    edx
  41f170:	ja     0x41f175
  41f172:	push   ds
  41f173:	sti    
  41f174:	mov    ecx,DWORD PTR [ebx-0x7484e90a]
  41f17a:	sti    
  41f17b:	stos   BYTE PTR es:[edi],al
  41f17c:	adc    cl,BYTE PTR ds:0x7fddea03
  41f182:	push   0x7dadc2fb
  41f187:	jbe    0x41f189
  41f189:	xor    al,0xe0
  41f18b:	sbb    eax,DWORD PTR [edx]
  41f18d:	rcl    ch,cl
  41f18f:	sub    ah,BYTE PTR [edx-0x26]
  41f192:	push   esp
  41f193:	dec    ecx
  41f194:	pop    ss
  41f195:	clc    
  41f196:	test   edx,ebx
  41f198:	mov    ds,ecx
  41f19a:	scas   al,BYTE PTR es:[edi]
  41f19b:	pop    edx
  41f19c:	mov    al,0x1f
  41f19e:	je     0x41f18c
  41f1a0:	test   al,0x43
  41f1a2:	(bad)  
  41f1a3:	aas    
  41f1a4:	mov    dl,0xb0
  41f1a6:	pop    edi
  41f1a7:	bts    DWORD PTR [ecx+ebx*2+0x14],esi
  41f1ac:	pop    ebp
  41f1ad:	lahf   
  41f1ae:	out    0x7f,eax
  41f1b0:	test   BYTE PTR [eax-0x1e3e9f99],0x78
  41f1b7:	xchg   edi,eax
  41f1b8:	or     edi,esp
  41f1ba:	jl     0x41f170
  41f1bc:	das    
  41f1bd:	jae    0x41f1f4
  41f1bf:	adc    DWORD PTR [ecx+0x18fdd18f],eax
  41f1c5:	xor    al,0x3
  41f1c7:	xchg   edx,eax
  41f1c8:	xor    al,0x36
  41f1ca:	xchg   edi,eax
  41f1cb:	mov    edi,ds
  41f1cd:	sahf   
  41f1ce:	(bad)  
  41f1d0:	cmp    BYTE PTR [esi+0x4c],al
  41f1d3:	push   edx
  41f1d4:	and    al,bl
  41f1d6:	mov    ebp,0x318e7cc9
  41f1db:	push   edi
  41f1dc:	dec    eax
  41f1dd:	enter  0xaf46,0x15
  41f1e1:	add    BYTE PTR cs:[ecx+0x64],al
  41f1e5:	mov    edx,0x1707e7b2
  41f1ea:	mov    dh,al
  41f1ec:	repnz scas al,BYTE PTR es:[edi]
  41f1ee:	and    esp,edx
  41f1f0:	int    0xa2
  41f1f2:	mov    ah,0x8
  41f1f4:	lahf   
  41f1f5:	sbb    BYTE PTR [ebp-0x10912698],bh
  41f1fb:	shr    DWORD PTR [edx],0x55
  41f1fe:	fisttp QWORD PTR ds:0x628faf
  41f204:	jmp    0xbad0fa59
  41f209:	in     eax,dx
  41f20a:	add    bl,BYTE PTR [edx]
  41f20c:	daa    
  41f20d:	sub    eax,0xe6ad5baa
  41f212:	aaa    
  41f213:	lea    ebx,[edx]
  41f215:	sub    edx,esp
  41f217:	pop    ds
  41f218:	aaa    
  41f219:	in     eax,dx
  41f21a:	ss scas eax,DWORD PTR es:[edi]
  41f21c:	pusha  
  41f21d:	popa   
  41f21e:	dec    ebp
  41f21f:	push   0x24b61baf
  41f224:	mov    ebp,0x6aaa4083
  41f229:	fwait
  41f22a:	adc    al,0xf6
  41f22c:	pop    esi
  41f22d:	(bad)  
  41f22e:	fld    DWORD PTR [ebx+0x25]
  41f231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f232:	daa    
  41f233:	dec    ebx
  41f234:	mov    esi,0xd4eb0bce
  41f239:	sub    ebx,DWORD PTR [edi]
  41f23b:	add    DWORD PTR [esi-0x4a],eax
  41f23e:	or     ebp,ebp
  41f240:	pushf  
  41f241:	mov    al,ds:0x2664b834
  41f246:	mov    ah,0xa0
  41f248:	sar    DWORD PTR [ecx+0x6fe6d45b],0x84
  41f24f:	adc    ecx,DWORD PTR [eax-0x2a]
  41f252:	hlt    
  41f253:	iret   
  41f254:	xchg   esp,eax
  41f255:	adc    eax,0xfbc28c4e
  41f25a:	ret    0xf214
  41f25d:	inc    ebp
  41f25e:	fisttp QWORD PTR [edx+eiz*1-0x6c]
  41f262:	mov    bl,0xe2
  41f264:	pop    ds
  41f265:	push   es
  41f266:	mov    esp,0x23090ed5
  41f26b:	mov    ?,WORD PTR [ecx+0x1f]
  41f26e:	pop    ss
  41f26f:	sub    al,BYTE PTR [edi-0x37ccd1ab]
  41f275:	inc    esp
  41f276:	add    esp,ebp
  41f278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f279:	test   edx,esp
  41f27b:	loopne 0x41f2cb
  41f27d:	xchg   ecx,eax
  41f27e:	arpl   WORD PTR ds:0x4b8ad4df,di
  41f284:	adc    DWORD PTR [edx],esi
  41f286:	mov    ds:0x1b43d5a8,eax
  41f28b:	xor    eax,0x6a4a72c8
  41f290:	inc    ecx
  41f291:	imul   si,WORD PTR [ebx-0x6e593393],0x52
  41f299:	sub    al,0xa4
  41f29c:	jno    0x41f2c6
  41f29e:	cdq    
  41f29f:	ja     0x41f2d6
  41f2a1:	dec    BYTE PTR [edx+ebx*8]
  41f2a4:	bound  edx,QWORD PTR [ebx]
  41f2a6:	pop    edx
  41f2a7:	jnp    0x41f252
  41f2a9:	pop    ecx
  41f2aa:	outs   dx,DWORD PTR ds:[esi]
  41f2ab:	mov    ebx,0x3808235a
  41f2b0:	fst    QWORD PTR [ebx+0x7a7a39af]
  41f2b6:	inc    edx
  41f2b7:	mov    ecx,0x9f37eb64
  41f2bc:	pop    ebp
  41f2bd:	ja     0x41f31a
  41f2bf:	jl     0x41f336
  41f2c1:	and    eax,0xa78f4f0
  41f2c6:	pusha  
  41f2c7:	or     al,BYTE PTR [esi+0x21]
  41f2ca:	ins    DWORD PTR es:[edi],dx
  41f2cb:	mov    dl,0x15
  41f2cd:	fsub   DWORD PTR [edx+0x21df8d9]
  41f2d3:	aas    
  41f2d4:	pop    edx
  41f2d5:	push   ds
  41f2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d7:	inc    esi
  41f2d8:	and    dl,bh
  41f2da:	cmp    ebp,DWORD PTR [ecx-0x4c094045]
  41f2e0:	jge    0x41f2b7
  41f2e2:	push   ebx
  41f2e3:	and    eax,0x3e0bbe58
  41f2e8:	rol    BYTE PTR [edi],0x60
  41f2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ec:	jb     0x41f331
  41f2ee:	adc    BYTE PTR [edi+0x35],bl
  41f2f1:	dec    ecx
  41f2f2:	mov    cl,0x3a
  41f2f4:	jb     0x41f36f
  41f2f6:	sub    dl,bl
  41f2f8:	ret    
  41f2f9:	das    
  41f2fa:	or     BYTE PTR [ecx],ch
  41f2fc:	sbb    bh,BYTE PTR [edi-0x4e]
  41f2ff:	adc    al,0x24
  41f301:	fidiv  WORD PTR [edx-0x1be92bde]
  41f307:	xchg   esi,eax
  41f308:	retf   
  41f309:	push   eax
  41f30a:	jb     0x41f34b
  41f30c:	push   cs
  41f30d:	test   al,0x12
  41f30f:	pop    ebp
  41f310:	imul   esi,DWORD PTR [edi-0x43],0x75
  41f314:	jbe    0x41f319
  41f316:	add    DWORD PTR [edx],esi
  41f318:	push   ds
  41f319:	push   edx
  41f31a:	addr16 xchg ecx,eax
  41f31c:	jl     0x41f39a
  41f31e:	push   0x1e9ec0f8
  41f323:	xor    eax,0xadb50833
  41f328:	enter  0x1273,0xcd
  41f32c:	cmp    eax,0xcdecb90c
  41f331:	inc    esi
  41f332:	jae    0x41f2fe
  41f334:	nop    DWORD PTR [esi+edx*8-0x5ac5943d]
  41f33c:	fimul  WORD PTR [ecx]
  41f33e:	fstp   QWORD PTR [ebx+0x5eb29e44]
  41f344:	retf   0xa0d0
  41f347:	ins    BYTE PTR es:[edi],dx
  41f348:	mov    gs,WORD PTR [ebp+ebx*8+0x7a]
  41f34c:	xchg   esp,eax
  41f34d:	cmp    DWORD PTR [edi+0x8],edi
  41f350:	inc    eax
  41f351:	push   ds
  41f352:	xor    ebx,DWORD PTR [edx+0x1ba73399]
  41f358:	mov    DWORD PTR ds:0xd5e2a479,0x15e3c388
  41f362:	jo     0x41f369
  41f364:	out    0xab,al
  41f366:	mov    WORD PTR ds:0x9174f8b3,?
  41f36c:	sbb    BYTE PTR es:[edi+0x42dd0389],al
  41f373:	daa    
  41f374:	add    eax,0xdec4950a
  41f379:	es push esp
  41f37b:	mov    cl,0xf0
  41f37d:	(bad)  
  41f37e:	fbld   TBYTE PTR [ebx+ebp*4+0x3d4635aa]
  41f385:	inc    esi
  41f386:	test   DWORD PTR ss:[ecx+ebx*1],ebp
  41f38a:	test   DWORD PTR [edx+0x16dc8fe7],0x4e1bcd4b
  41f394:	(bad)  
  41f395:	mov    cl,0x66
  41f397:	mov    ecx,0xcd858ee4
  41f39c:	in     al,0x8f
  41f39e:	push   esi
  41f39f:	aaa    
  41f3a0:	mov    edx,0x78bb4fc0
  41f3a5:	call   DWORD PTR [edx+ebx*8]
  41f3a8:	push   ecx
  41f3a9:	ja     0x41f414
  41f3ab:	stc    
  41f3ac:	pop    esi
  41f3ad:	test   bh,dl
  41f3af:	pop    ss
  41f3b0:	sti    
  41f3b1:	pop    ebx
  41f3b2:	and    dl,BYTE PTR [eax+0x6b]
  41f3b5:	and    al,0x18
  41f3b7:	std    
  41f3b8:	and    ebx,DWORD PTR [ebp+0x4524a45a]
  41f3be:	bound  eax,QWORD PTR ds:0xde731258
  41f3c4:	outs   dx,DWORD PTR ds:[esi]
  41f3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c6:	ret    0x2ec5
  41f3c9:	pop    eax
  41f3ca:	and    bl,BYTE PTR ds:0xe868c61b
  41f3d0:	aam    0x51
  41f3d2:	jp     0x41f3cb
  41f3d4:	std    
  41f3d5:	xchg   esi,eax
  41f3d6:	push   ecx
  41f3d7:	or     al,0xad
  41f3d9:	push   ds
  41f3da:	lahf   
  41f3db:	pop    edx
  41f3dc:	push   0x16
  41f3de:	mov    ebp,0xf6d788f5
  41f3e3:	je     0x41f38a
  41f3e5:	test   BYTE PTR ds:0x8aef,dl
  41f3ea:	cmp    BYTE PTR [eax],bh
  41f3ec:	pop    ecx
  41f3ed:	mov    DWORD PTR [ebx-0x1d],esp
  41f3f0:	add    eax,0x7092975f
  41f3f5:	shl    BYTE PTR [edx],cl
  41f3f7:	fild   DWORD PTR [eax]
  41f3f9:	inc    edx
  41f3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3fb:	hlt    
  41f3fc:	(bad)  
  41f3fd:	out    dx,eax
  41f3fe:	pop    ebp
  41f3ff:	xchg   edi,eax
  41f400:	and    eax,0x62b1a6a6
  41f405:	xchg   edx,eax
  41f406:	imul   ebx,DWORD PTR [edx-0x27],0x5f
  41f40a:	mov    bl,0x57
  41f40c:	adc    eax,0x1bef8003
  41f411:	or     DWORD PTR [ecx],esi
  41f413:	xchg   esi,eax
  41f414:	je     0x41f433
  41f416:	(bad)  
  41f417:	push   esi
  41f418:	mov    ebp,0xa110527b
  41f41d:	jae    0x41f3dc
  41f41f:	xacquire xchg DWORD PTR [esi-0xd],ecx
  41f423:	fidivr WORD PTR [esp+eax*4]
  41f426:	xchg   esi,eax
  41f427:	icebp  
  41f428:	push   0x6a
  41f42a:	jno    0x41f3c7
  41f42c:	cmp    BYTE PTR [ebx+0x77f3015c],cl
  41f432:	pop    ebx
  41f433:	shrd   DWORD PTR [ebx-0x71],eax,cl
  41f437:	mov    edi,0x1b1212ce
  41f43c:	pop    ebp
  41f43d:	cmc    
  41f43e:	jbe    0x41f4b3
  41f440:	xchg   ebx,eax
  41f441:	push   ds
  41f442:	jmp    0xf1f953cf
  41f447:	scas   al,BYTE PTR es:[edi]
  41f448:	jno    0x41f421
  41f44a:	inc    esp
  41f44b:	pusha  
  41f44c:	ds clc 
  41f44e:	mov    ch,BYTE PTR [eax+0x4fdecd1a]
  41f454:	xchg   ebx,eax
  41f455:	popa   
  41f456:	clc    
  41f457:	test   eax,0xff57b356
  41f45c:	add    edx,0x8d03f59c
  41f462:	pop    esi
  41f463:	lods   al,BYTE PTR ds:[esi]
  41f464:	jmp    0xf591:0x173b4a14
  41f46b:	mov    ds:0x5d9e66af,eax
  41f470:	icebp  
  41f471:	mov    eax,DWORD PTR [eax+0x57af8d72]
  41f477:	xchg   ebx,eax
  41f478:	pop    ds
  41f479:	add    DWORD PTR [eax-0x41],edx
  41f47c:	pushf  
  41f47d:	push   ebx
  41f47e:	push   edx
  41f47f:	je     0x41f49c
  41f481:	pop    ebx
  41f482:	pusha  
  41f483:	xchg   edx,eax
  41f484:	loop   0x41f504
  41f486:	push   0xed377318
  41f48b:	xlat   BYTE PTR ds:[ebx]
  41f48c:	cmp    eax,DWORD PTR [ebx+0x4c085af1]
  41f492:	ss mov ah,0xf5
  41f495:	inc    esi
  41f496:	cmp    al,0xaa
  41f498:	inc    edi
  41f499:	xchg   esp,eax
  41f49a:	pushf  
  41f49b:	sbb    eax,0x2f28bc35
  41f4a0:	inc    edi
  41f4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4a2:	lods   eax,DWORD PTR ds:[esi]
  41f4a3:	dec    ebp
  41f4a4:	sbb    bl,BYTE PTR [edi]
  41f4a6:	or     DWORD PTR [eax],esi
  41f4a8:	(bad)  
  41f4a9:	call   0xf8e30992
  41f4ae:	mov    edx,ecx
  41f4b0:	stos   BYTE PTR es:[edi],al
  41f4b1:	dec    eax
  41f4b2:	cmc    
  41f4b3:	jns    0x41f44d
  41f4b5:	ret    
  41f4b6:	adc    al,0xc0
  41f4b8:	pop    esi
  41f4b9:	add    eax,0xe642fe22
  41f4be:	sbb    edx,ebp
  41f4c0:	add    eax,0x2c0346bc
  41f4c5:	cmp    al,0xe
  41f4c7:	popf   
  41f4c8:	aad    0x78
  41f4ca:	imul   eax,eax,0xffffff90
  41f4cd:	ins    BYTE PTR es:[edi],dx
  41f4ce:	xchg   BYTE PTR [edx+ebp*8],bh
  41f4d1:	adc    BYTE PTR [ecx+0x61],bl
  41f4d4:	inc    esp
  41f4d5:	into   
  41f4d6:	aas    
  41f4d7:	mov    al,0x67
  41f4d9:	mov    WORD PTR [edi+edx*4-0x3df9fd60],ds
  41f4e0:	ret    
  41f4e1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e3:	xchg   BYTE PTR [ebx],bh
  41f4e5:	add    ah,bl
  41f4e7:	adc    al,0xe8
  41f4e9:	sub    ecx,DWORD PTR [esi]
  41f4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4ec:	repnz dec ecx
  41f4ee:	dec    ecx
  41f4ef:	loop   0x41f51f
  41f4f1:	(bad)  
  41f4f2:	xor    dh,BYTE PTR [esi]
  41f4f4:	bound  eax,QWORD PTR [edi-0x32]
  41f4f7:	xchg   esi,eax
  41f4f8:	ret    0xd05b
  41f4fb:	daa    
  41f4fc:	sbb    al,0xaa
  41f4fe:	fstp   TBYTE PTR [ebp-0x9]
  41f501:	sub    DWORD PTR [edi+edx*2+0x37bc282e],ebx
  41f508:	sub    bh,BYTE PTR [esi+0x713ca7ec]
  41f50e:	push   esp
  41f50f:	push   ss
  41f510:	dec    edx
  41f511:	mov    dl,0xd9
  41f513:	int    0x2e
  41f515:	add    BYTE PTR ss:[edx+0x553a445c],0x24
  41f51d:	pop    edi
  41f51e:	or     edx,DWORD PTR [eax-0x63ddc58b]
  41f524:	jecxz  0x41f566
  41f526:	add    al,cl
  41f528:	cmp    al,0x64
  41f52a:	jne    0x41f4c5
  41f52c:	pop    ebx
  41f52d:	push   ebx
  41f52e:	dec    edi
  41f52f:	stc    
  41f530:	sub    edi,esp
  41f532:	jns    0x41f551
  41f534:	imul   ebx,eax,0x33
  41f537:	push   edx
  41f538:	jae    0x41f508
  41f53a:	add    eax,0x9f6216a8
  41f53f:	ins    BYTE PTR es:[edi],dx
  41f540:	inc    eax
  41f541:	fist   WORD PTR [ecx-0xca1cf0b]
  41f547:	leave  
  41f548:	scas   al,BYTE PTR es:[edi]
  41f549:	xchg   edi,eax
  41f54a:	fsubr  DWORD PTR es:[edx]
  41f54d:	jp     0x41f52f
  41f54f:	mov    al,ds:0xe9e27b66
  41f554:	out    dx,al
  41f555:	retf   
  41f556:	les    edi,FWORD PTR [esi-0x513af19c]
  41f55c:	xchg   BYTE PTR ds:0xc215006b,ah
  41f562:	pop    ebx
  41f563:	ret    
  41f564:	pop    ebp
  41f565:	push   edi
  41f566:	imul   ecx,DWORD PTR [edx-0x7e75374],0xffffff90
  41f56d:	mul    DWORD PTR [edi+0x78]
  41f570:	pop    ebx
  41f571:	lods   al,BYTE PTR ds:[esi]
  41f572:	adc    al,0x40
  41f574:	(bad)  
  41f576:	neg    BYTE PTR [esi+0x2d]
  41f579:	stos   DWORD PTR es:[edi],eax
  41f57a:	jae    0x41f56a
  41f57c:	stos   BYTE PTR es:[edi],al
  41f57d:	and    dl,BYTE PTR [eax]
  41f57f:	push   ss
  41f580:	inc    edx
  41f581:	repnz mov ebx,0xbbed8ed0
  41f587:	cmc    
  41f588:	retf   0x54a0
  41f58b:	or     BYTE PTR [esp+eax*4-0x23],ch
  41f58f:	xor    esp,DWORD PTR [ecx+0x1035a99c]
  41f595:	xor    ah,BYTE PTR ds:0xc9ff5a3c
  41f59b:	xchg   DWORD PTR [edx+ecx*1],edx
  41f59e:	pusha  
  41f59f:	jbe    0x41f5f0
  41f5a1:	(bad)  
  41f5a2:	retf   
  41f5a3:	call   0xcf1:0x7053b639
  41f5aa:	sbb    al,0x32
  41f5ac:	in     eax,0x4b
  41f5ae:	retf   0xefee
  41f5b1:	test   eax,0x7c0b082a
  41f5b6:	xchg   BYTE PTR cs:[ecx],bl
  41f5b9:	sub    eax,0x54e10981
  41f5be:	dec    ecx
  41f5bf:	xchg   esp,eax
  41f5c0:	jb     0x41f584
  41f5c2:	repz or eax,0x7ce60448
  41f5c8:	bound  ebx,QWORD PTR [edx-0x42]
  41f5cb:	adc    eax,0xb3709d21
  41f5d0:	fisubr WORD PTR [edi+0x3]
  41f5d3:	add    BYTE PTR [eax+0x24],0xcc
  41f5d7:	arpl   ax,si
  41f5d9:	push   0x1622b12c
  41f5de:	test   bh,al
  41f5e0:	sub    BYTE PTR [ecx-0x34ae354e],dl
  41f5e6:	mov    cl,0xe4
  41f5e8:	mov    ecx,0x648882e0
  41f5ed:	jmp    0xe7d1:0xf1be632a
  41f5f4:	or     al,0x15
  41f5f6:	dec    ecx
  41f5f7:	enter  0x1ecb,0xeb
  41f5fb:	cmp    DWORD PTR [edx+ecx*8-0x5afcae20],ebx
  41f602:	xlat   BYTE PTR ds:[ebx]
  41f603:	mov    bh,0x37
  41f605:	aas    
  41f606:	scas   al,BYTE PTR es:[edi]
  41f607:	push   edx
  41f608:	mov    ds:0x50367ab2,al
  41f60d:	and    DWORD PTR [ecx-0x5e4f17fe],edx
  41f613:	mov    BYTE PTR [esi+0x4df78cab],dh
  41f619:	cli    
  41f61a:	cmp    al,0x58
  41f61c:	jo     0x41f634
  41f61e:	jb     0x41f65a
  41f620:	inc    ecx
  41f621:	das    
  41f622:	fld    TBYTE PTR [eax+0x3a]
  41f625:	xor    DWORD PTR [ebx+0x2cbfb693],0xffffffb8
  41f62c:	stc    
  41f62d:	ja     0x41f650
  41f62f:	ins    BYTE PTR es:[di],dx
  41f631:	or     ebp,DWORD PTR [edi-0x497cc0a3]
  41f637:	or     eax,0x132633a8
  41f63c:	daa    
  41f63d:	test   BYTE PTR [esi],cl
  41f63f:	jmp    0x42537509
  41f644:	loop   0x41f5d7
  41f646:	mov    al,0x6d
  41f648:	mov    al,ds:0xd87d8243
  41f64d:	pop    ss
  41f64e:	shl    DWORD PTR [eax-0xe],1
  41f651:	into   
  41f652:	push   edx
  41f653:	add    ch,BYTE PTR [eax+0x13]
  41f656:	sub    BYTE PTR [esi],bl
  41f658:	in     eax,dx
  41f659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65a:	pop    ds
  41f65b:	ss fwait
  41f65d:	das    
  41f65e:	fcomp  DWORD PTR [eax-0x32]
  41f661:	es ds pop es
  41f664:	aas    
  41f665:	and    ah,BYTE PTR [edx+0x5a]
  41f668:	cli    
  41f669:	mov    esi,DWORD PTR [edi-0x1a6aada2]
  41f66f:	push   esi
  41f670:	add    bl,BYTE PTR [eax-0x1f5a08ea]
  41f676:	or     eax,0x47f8132b
  41f67b:	imul   edi,DWORD PTR [edx*4-0x36e5a3ed],0xffffffe2
  41f683:	mov    ch,BYTE PTR [esi+edx*1-0x6]
  41f687:	and    ecx,DWORD PTR [ebx+0x13]
  41f68a:	lods   eax,DWORD PTR ds:[esi]
  41f68b:	xor    al,0x71
  41f68d:	mov    eax,0xfae3e35a
  41f692:	stos   BYTE PTR es:[edi],al
  41f693:	js     0x41f67f
  41f695:	mov    BYTE PTR [eax],bl
  41f697:	js     0x41f70d
  41f699:	cmp    edi,0x6c
  41f69c:	(bad)  
  41f69d:	hlt    
  41f69e:	adc    DWORD PTR ds:0xd2f58d4f,esi
  41f6a4:	jge    0x41f6bf
  41f6a6:	sbb    dl,bl
  41f6a8:	gs jns 0x41f654
  41f6ab:	loopne 0x41f687
  41f6ad:	(bad)  
  41f6ae:	pop    ebp
  41f6af:	or     BYTE PTR ds:0x196241bb,0x6e
  41f6b6:	push   ss
  41f6b7:	cmp    ebx,DWORD PTR [esi+0x5f091cb4]
  41f6bd:	push   ebx
  41f6be:	mov    ch,0xf7
  41f6c0:	mov    ds:0x7dc826fd,eax
  41f6c5:	inc    esp
  41f6c6:	jns    0x41f734
  41f6c8:	and    al,0xa9
  41f6ca:	int3   
  41f6cb:	jo     0x41f697
  41f6cd:	rol    DWORD PTR [ecx-0x56fffa0a],1
  41f6d3:	fcomp  DWORD PTR [ebx+0xa]
  41f6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6d7:	jno    0x41f6b4
  41f6d9:	add    BYTE PTR [edx+0x4ed8688c],bl
  41f6df:	mov    al,ds:0x15449b37
  41f6e4:	pop    es
  41f6e5:	sub    bh,BYTE PTR [edx+0x60c90f1a]
  41f6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ec:	ss jl  0x41f6f8
  41f6ef:	pop    edx
  41f6f0:	cmc    
  41f6f1:	je     0x41f767
  41f6f3:	shl    BYTE PTR ss:[edx-0x6d7d992e],1
  41f6fa:	pop    eax
  41f6fb:	fnsave [edx]
  41f6fd:	(bad)  
  41f6fe:	test   al,0xb1
  41f700:	setne  BYTE PTR [ebx+ebx*8-0x55]
  41f705:	mov    WORD PTR [esi],ss
  41f707:	repz retf 
  41f709:	adc    edi,edi
  41f70b:	or     bh,BYTE PTR [edi]
  41f70d:	add    esi,DWORD PTR [edi+0x637bf25c]
  41f713:	push   0x26f0463d
  41f718:	mov    bh,0xdf
  41f71a:	mov    al,0x1b
  41f71c:	mov    cl,0x85
  41f71e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41f720:	aam    0x1c
  41f722:	push   ds
  41f723:	sahf   
  41f724:	jae    0x41f6b0
  41f726:	(bad)  
  41f727:	jp     0x41f784
  41f729:	outs   dx,BYTE PTR ds:[esi]
  41f72a:	mov    ds:0x8f672e3,al
  41f72f:	cwde   
  41f730:	adc    DWORD PTR [ecx-0x38],esi
  41f733:	inc    esi
  41f734:	dec    edi
  41f735:	jp     0x41f71c
  41f737:	std    
  41f738:	pop    ss
  41f739:	inc    eax
  41f73a:	mov    al,ds:0xe7bea023
  41f73f:	inc    edx
  41f740:	xchg   esp,eax
  41f741:	pop    ds
  41f742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f743:	cmp    eax,0xeed6cef4
  41f748:	pop    ebx
  41f749:	fadd   QWORD PTR [edi+0x53]
  41f74c:	dec    ebp
  41f74d:	out    dx,eax
  41f74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74f:	test   al,0xa
  41f751:	div    DWORD PTR [edx-0xd]
  41f754:	cdq    
  41f755:	scas   eax,DWORD PTR es:[edi]
  41f756:	mov    al,ds:0x53c01469
  41f75b:	shl    BYTE PTR [ecx+0x18ef9128],0xd8
  41f762:	test   BYTE PTR [esi+0x60],al
  41f765:	inc    ebp
  41f766:	and    BYTE PTR [ecx-0x31],bh
  41f769:	sar    BYTE PTR [esi],1
  41f76b:	retf   
  41f76c:	xchg   ebx,eax
  41f76d:	push   ebx
  41f76e:	fidivr WORD PTR [ecx]
  41f770:	(bad)  
  41f771:	out    dx,eax
  41f772:	mov    dh,0xdc
  41f774:	mov    bl,0xee
  41f776:	sahf   
  41f777:	int3   
  41f778:	in     al,0x8d
  41f77a:	imul   ebx,ebp,0x9024a9fa
  41f780:	pop    eax
  41f781:	imul   ebp,DWORD PTR [esi+0x43],0xeaea65aa
  41f788:	stc    
  41f789:	xor    ecx,DWORD PTR fs:0x3e742888
  41f790:	push   ecx
  41f791:	xor    DWORD PTR [ecx-0x33],ebx
  41f794:	fisttp WORD PTR gs:[edx+eax*8+0x119607fa]
  41f79c:	dec    edi
  41f79d:	push   ecx
  41f79e:	sub    ch,dl
  41f7a0:	sahf   
  41f7a1:	stos   BYTE PTR es:[edi],al
  41f7a2:	jns    0x41f7ee
  41f7a4:	jle    0x41f7d4
  41f7a6:	mov    esp,DWORD PTR [eax]
  41f7a8:	jne    0x41f75d
  41f7aa:	or     BYTE PTR [ebx],0x47
  41f7ad:	xchg   edi,eax
  41f7ae:	fcmove st,st(2)
  41f7b0:	iret   
  41f7b1:	fldcw  WORD PTR [edx]
  41f7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b4:	std    
  41f7b5:	fsubr  QWORD PTR [edx+0x50]
  41f7b8:	pop    ss
  41f7b9:	mov    ds,WORD PTR ds:0xc3a95a59
  41f7bf:	shr    BYTE PTR [esi-0x3b618186],0x42
  41f7c6:	pop    edx
  41f7c7:	sub    DWORD PTR [esi+ecx*8+0x244b71a0],esi
  41f7ce:	sbb    BYTE PTR [ecx+edx*4],al
  41f7d1:	mov    ah,0x21
  41f7d3:	and    al,BYTE PTR [eax]
  41f7d5:	popa   
  41f7d6:	ror    dl,1
  41f7d8:	jl     0x41f789
  41f7da:	mov    cl,0xa9
  41f7dc:	fldcw  WORD PTR [edi]
  41f7de:	and    eax,0x169b308a
  41f7e3:	push   cs
  41f7e4:	sbb    ebp,0xffffffec
  41f7e7:	adc    al,0xb3
  41f7e9:	mov    ebx,0xd9296505
  41f7ee:	mov    ah,BYTE PTR [edi]
  41f7f0:	add    BYTE PTR [ebx+ecx*1-0x6fa60c3],dh
  41f7f7:	fnstenv [eax]
  41f7f9:	xchg   esi,eax
  41f7fa:	push   edi
  41f7fb:	sub    ch,BYTE PTR [ebp-0x2741a1e4]
  41f801:	ins    DWORD PTR es:[edi],dx
  41f802:	int    0x9d
  41f804:	jl     0x41f817
  41f806:	add    eax,0x4ac9332f
  41f80b:	and    eax,DWORD PTR [ecx+0x63c6ffd1]
  41f811:	jmp    0x41f872
  41f813:	sub    eax,0xa0de3ce
  41f818:	and    edx,DWORD PTR ds:0x9a4e7a1c
  41f81e:	jmp    0x41f84e
  41f820:	ds inc esi
  41f822:	pop    esi
  41f823:	ins    DWORD PTR es:[edi],dx
  41f824:	iret   
  41f825:	mov    edi,0xe793f735
  41f82a:	dec    esp
  41f82b:	gs ret 
  41f82d:	sub    DWORD PTR [esi+0x48],eax
  41f830:	push   esp
  41f831:	imul   ebx,DWORD PTR [ebx+eiz*4+0x54fa5d61],0x79
  41f839:	sar    DWORD PTR [esi+0x57],1
  41f83c:	pop    eax
  41f83d:	dec    ebp
  41f83f:	add    BYTE PTR [ecx+0x5c],bh
  41f842:	mov    ebp,0xfeecdd22
  41f847:	shl    BYTE PTR [edi],0x9f
  41f84a:	push   ebx
  41f84b:	sbb    edi,DWORD PTR [edx-0x5a58e283]
  41f851:	enter  0xf72c,0x83
  41f855:	dec    esp
  41f856:	fimul  DWORD PTR gs:[edx]
  41f859:	repz xlat BYTE PTR ds:[ebx]
  41f85b:	push   0xffffffd4
  41f85d:	loope  0x41f846
  41f85f:	lds    esi,FWORD PTR [esi+0x64]
  41f862:	dec    edi
  41f863:	add    DWORD PTR [ebp-0x5d],esp
  41f866:	push   ecx
  41f867:	and    cl,BYTE PTR [eax]
  41f869:	xor    DWORD PTR [eax-0xfd5b278],ebx
  41f86f:	stc    
  41f870:	inc    DWORD PTR [esi]
  41f872:	mov    cl,0xd2
  41f874:	je     0x41f8b9
  41f876:	jge    0x41f8d6
  41f878:	fs jmp 0x71f46302
  41f87e:	xchg   esp,eax
  41f87f:	fcom   st(2)
  41f881:	xor    ch,BYTE PTR [edx+0x68]
  41f884:	sti    
  41f885:	add    dl,dl
  41f887:	std    
  41f888:	repnz mov DWORD PTR [edi],esi
  41f88b:	loop   0x41f8ad
  41f88d:	mov    dh,0x82
  41f88f:	ss and eax,0x73d686db
  41f895:	mov    BYTE PTR [ebp-0x6e],dl
  41f898:	inc    eax
  41f899:	pop    edx
  41f89a:	mov    edi,0xd244a1c9
  41f89f:	jmp    0xf97ce9f7
  41f8a4:	enter  0xa52d,0x19
  41f8a8:	mov    eax,ds:0xeba0179f
  41f8ad:	and    eax,0x33ddf923
  41f8b2:	cmp    dh,BYTE PTR [ecx+0x35]
  41f8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b6:	outs   dx,BYTE PTR ds:[esi]
  41f8b7:	adc    al,0x32
  41f8b9:	jmp    0x51a9ee1f
  41f8be:	mov    WORD PTR [esi-0x68537f88],ds
  41f8c4:	jg     0x41f935
  41f8c6:	jmp    0xabdca271
  41f8cb:	mov    cl,BYTE PTR [eax]
  41f8cd:	retf   
  41f8ce:	mov    ebx,0xca964cac
  41f8d3:	popa   
  41f8d4:	sbb    eax,ebx
  41f8d6:	adc    DWORD PTR [ebx-0x398a0d0a],ebx
  41f8dc:	jmp    0xef3d:0x172667c9
  41f8e3:	xor    eax,DWORD PTR [edi+eiz*4]
  41f8e6:	ror    eax,cl
  41f8e8:	mov    bl,0x21
  41f8ea:	fwait
  41f8eb:	jge    0x41f8b9
  41f8ed:	dec    ecx
  41f8ee:	cli    
  41f8ef:	fsubp  st(0),st
  41f8f1:	inc    ebx
  41f8f2:	pop    ecx
  41f8f3:	out    dx,eax
  41f8f4:	pop    ebx
  41f8f5:	and    ebx,DWORD PTR [eax]
  41f8f7:	xchg   ebp,eax
  41f8f8:	or     bl,dh
  41f8fa:	and    cl,bl
  41f8fc:	xchg   ecx,eax
  41f8fd:	popf   
  41f8fe:	js     0x41f88b
  41f900:	in     eax,0x57
  41f902:	xchg   ebx,eax
  41f903:	jp     0x41f8cb
  41f905:	jmp    0x41f950
  41f907:	mov    ebx,0x6386935
  41f90c:	popf   
  41f90d:	sbb    al,0x3d
  41f90f:	(bad)  
  41f910:	push   ds
  41f911:	(bad)  
  41f912:	das    
  41f913:	sub    edx,eax
  41f915:	mov    al,0x3
  41f917:	ror    BYTE PTR [edx+0x1f2aa62e],0x48
  41f91e:	int    0x70
  41f920:	daa    
  41f921:	sbb    esp,edi
  41f923:	int    0x87
  41f925:	add    bl,BYTE PTR [ebp+0x18e52e6b]
  41f92b:	bound  esi,QWORD PTR [ebp+0x21daf33c]
  41f931:	xchg   ebx,eax
  41f932:	push   edi
  41f933:	push   edx
  41f934:	xchg   BYTE PTR [edx+0x70bfb3e3],ch
  41f93a:	xchg   ecx,eax
  41f93b:	mov    ds:0x3ded5635,al
  41f940:	xor    ecx,edi
  41f942:	pop    es
  41f943:	enter  0xdf29,0x38
  41f947:	add    eax,0xbc92e20d
  41f94c:	push   esp
  41f94d:	sar    ecx,1
  41f94f:	jle    0x41f90d
  41f951:	div    DWORD PTR [esi]
  41f953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f954:	jbe    0x41f989
  41f956:	outs   dx,DWORD PTR ds:[esi]
  41f957:	div    BYTE PTR [ecx+0x3dc18105]
  41f95d:	pop    eax
  41f95e:	aad    0xe6
  41f960:	xor    eax,0x128bed3
  41f965:	jge    0x41f9a1
  41f967:	int3   
  41f968:	mov    bh,0xa5
  41f96a:	aam    0xc6
  41f96c:	pop    esp
  41f96d:	retf   
  41f96e:	(bad)  
  41f96f:	cmp    eax,0x9e06f18e
  41f974:	pop    esi
  41f975:	nop
  41f976:	xor    DWORD PTR [ebp-0x3404fd70],ebp
  41f97c:	call   0xe203:0x78f1
  41f982:	cmp    bh,BYTE PTR [eax]
  41f984:	iret   
  41f985:	lds    edi,FWORD PTR [esp+eax*4-0x61]
  41f989:	out    0xef,al
  41f98b:	rcl    BYTE PTR [ecx-0x283874c5],1
  41f991:	clc    
  41f992:	lock in al,dx
  41f994:	fsub   DWORD PTR [esi+ebx*1-0x68]
  41f998:	arpl   WORD PTR [eax+0x12],bp
  41f99b:	add    al,0x7
  41f99d:	loope  0x41f980
  41f99f:	loope  0x41f9c4
  41f9a1:	fs popf 
  41f9a3:	pushf  
  41f9a4:	pusha  
  41f9a5:	stos   DWORD PTR es:[edi],eax
  41f9a6:	sub    al,BYTE PTR [ebx+esi*1]
  41f9a9:	or     BYTE PTR [edi+0x58fc82c],bh
  41f9af:	(bad)
  41f9b2:	repnz mov dl,0x45
  41f9b5:	test   eax,0x74261aa8
  41f9ba:	jl     0x41fa0c
  41f9bc:	stos   DWORD PTR es:[edi],eax
  41f9bd:	or     dl,BYTE PTR [esi-0x7]
  41f9c0:	repnz repz dec esi
  41f9c3:	sbb    ah,ah
  41f9c5:	adc    DWORD PTR [eax-0x3e],0x3c
  41f9c9:	or     DWORD PTR [edx+0x768c4c13],edi
  41f9cf:	icebp  
  41f9d0:	into   
  41f9d1:	nop
  41f9d2:	rol    BYTE PTR [ebx],1
  41f9d4:	or     ah,ch
  41f9d6:	xor    al,0x41
  41f9d8:	push   ss
  41f9d9:	jecxz  0x41f998
  41f9db:	add    DWORD PTR [esi+edi*8],ebp
  41f9de:	(bad)  
  41f9df:	fldenv [edi+0x61]
  41f9e2:	mov    ch,BYTE PTR [esi+0x4a0f5be2]
  41f9e8:	ss push 0x2f
  41f9eb:	das    
  41f9ec:	inc    eax
  41f9ed:	scas   eax,DWORD PTR es:[edi]
  41f9ee:	js     0x41fa60
  41f9f0:	test   eax,0x217d187
  41f9f5:	mov    edx,0x798ea107
  41f9fa:	je     0x41fa5f
  41f9fc:	add    al,0xfe
  41f9fe:	fst    DWORD PTR [ecx+0xe]
  41fa01:	cld    
  41fa02:	cmp    DWORD PTR [ebx+0xd],ecx
  41fa05:	outs   dx,BYTE PTR ds:[esi]
  41fa06:	lods   al,BYTE PTR ds:[esi]
  41fa07:	jmp    0x41f9bd
  41fa09:	in     al,0xe7
  41fa0b:	inc    ebp
  41fa0c:	mov    WORD PTR [ebx],cs
  41fa0e:	pop    edi
  41fa0f:	mov    dh,0x6a
  41fa11:	push   edi
  41fa12:	jne    0x41fa40
  41fa14:	imul   edi,esi,0xffffff9a
  41fa17:	ret    0x5652
  41fa1a:	mov    eax,0x374d6cc
  41fa1f:	(bad)  
  41fa20:	call   0xa1b53f49
  41fa25:	adc    eax,DWORD PTR [ebp-0x62]
  41fa28:	or     DWORD PTR [esi+0x29],eax
  41fa2b:	call   0xd786653a
  41fa30:	lods   eax,DWORD PTR ds:[esi]
  41fa31:	xchg   edi,eax
  41fa32:	adc    al,0x30
  41fa34:	jnp    0x41fa20
  41fa36:	lahf   
  41fa37:	dec    esp
  41fa38:	xchg   DWORD PTR [edx-0x1efbafdf],esp
  41fa3e:	push   ebx
  41fa3f:	js     0x41fa2a
  41fa41:	jg     0x41fa8b
  41fa43:	jo     0x41faae
  41fa45:	dec    ecx
  41fa46:	push   ecx
  41fa47:	mov    al,ds:0x2962c58e
  41fa4c:	std    
  41fa4d:	sar    DWORD PTR [ecx+0x8],0x69
  41fa51:	test   BYTE PTR [ebp+0x66c0ffe8],bl
  41fa57:	loope  0x41fa93
  41fa59:	(bad)  
  41fa5a:	mov    cl,0x1b
  41fa5c:	push   cs
  41fa5d:	adc    ah,cl
  41fa5f:	dec    ebp
  41fa60:	out    0xb4,al
  41fa62:	pop    ss
  41fa63:	rcr    BYTE PTR [ebp-0x7],cl
  41fa66:	in     eax,dx
  41fa67:	adc    BYTE PTR [ecx],dl
  41fa69:	test   al,0x73
  41fa6b:	cmp    al,cl
  41fa6d:	and    ecx,DWORD PTR [ebx+0x53]
  41fa70:	xchg   BYTE PTR [eax-0x29810d40],bl
  41fa76:	jmp    0xa570:0xf2f7b6bf
  41fa7d:	test   BYTE PTR [eax],bh
  41fa7f:	cld    
  41fa80:	dec    ebp
  41fa81:	rcl    cl,cl
  41fa83:	push   0xffffffc7
  41fa85:	mov    esp,0xec218686
  41fa8a:	pop    esp
  41fa8b:	push   esi
  41fa8c:	mov    ebp,0x45f96e55
  41fa91:	ja     0x41fa57
  41fa93:	(bad)  
  41fa94:	mov    ds:0x7b5c901c,eax
  41fa99:	xchg   BYTE PTR [eax],bl
  41fa9b:	icebp  
  41fa9c:	sti    
  41fa9d:	loope  0x41fad5
  41fa9f:	shr    dl,1
  41faa1:	scas   eax,DWORD PTR es:[edi]
  41faa2:	fsub   QWORD PTR [eax-0x93777cf]
  41faa8:	inc    eax
  41faaa:	pop    eax
  41faab:	or     edx,esi
  41faad:	sbb    DWORD PTR [esp+ecx*1+0x4e],ecx
  41fab1:	jmp    0xf914fa5e
  41fab6:	(bad)  
  41fab7:	sar    DWORD PTR [eax-0x1b0dc50d],1
  41fabd:	cdq    
  41fabe:	or     al,0xa7
  41fac0:	or     ebx,DWORD PTR [ebp+0xcd793d9]
  41fac6:	jmp    0x8fa2bab3
  41facb:	dec    edx
  41facc:	aad    0x9d
  41face:	sub    al,0x34
  41fad0:	int3   
  41fad1:	rcr    DWORD PTR [edx-0x49828e50],1
  41fad7:	jo     0x41fa8e
  41fad9:	and    DWORD PTR [edi-0x3e],edi
  41fadc:	pop    es
  41fadd:	push   0x3
  41fadf:	pop    ecx
  41fae0:	movaps XMMWORD PTR es:[eax],xmm5
  41fae4:	sti    
  41fae5:	cmp    eax,0xfa6fba1a
  41faea:	push   ebx
  41faeb:	aaa    
  41faec:	push   edi
  41faed:	loope  0x41fb23
  41faef:	push   0xffffff92
  41faf1:	pop    esp
  41faf2:	lods   eax,DWORD PTR ds:[esi]
  41faf3:	into   
  41faf4:	adc    eax,0xa1e97479
  41faf9:	mov    ds:0xd1c16ae1,al
  41fafe:	mov    ebx,0x343d99e0
  41fb03:	pop    ss
  41fb04:	(bad)  
  41fb05:	outs   dx,DWORD PTR ds:[esi]
  41fb06:	add    esp,DWORD PTR [edx+0x7e]
  41fb09:	cmp    DWORD PTR [ecx-0x735c2aaa],0x8cad1528
  41fb13:	mov    ah,0xf5
  41fb15:	mov    ah,0x1a
  41fb17:	and    al,0x34
  41fb19:	xor    ebp,DWORD PTR [ebp+0x5a]
  41fb1c:	xchg   esi,eax
  41fb1d:	das    
  41fb1e:	jb     0x41fb1f
  41fb20:	test   DWORD PTR [edi+0x451fd328],ebx
  41fb26:	enter  0x33d4,0x3c
  41fb2a:	dec    ebp
  41fb2b:	sbb    eax,ecx
  41fb2d:	mul    DWORD PTR [edi]
  41fb2f:	xchg   BYTE PTR [edx+ebp*2+0x2c],bl
  41fb33:	lahf   
  41fb34:	test   al,0xd3
  41fb36:	cmc    
  41fb37:	and    DWORD PTR [ecx+0x7c],edx
  41fb3a:	into   
  41fb3b:	jno    0x41faf1
  41fb3d:	lock sub BYTE PTR [ecx-0x26],bh
  41fb41:	jle    0x41facc
  41fb43:	iret   
  41fb44:	mov    eax,0x326a4629
  41fb49:	cmp    DWORD PTR [eax-0x1d],eax
  41fb4c:	retf   0x61b2
  41fb4f:	or     eax,DWORD PTR [eax+0x3a592fcd]
  41fb55:	add    ch,BYTE PTR [eax]
  41fb57:	adc    eax,0x30c1786e
  41fb5c:	(bad)  
  41fb5d:	sti    
  41fb5e:	leave  
  41fb5f:	xor    al,0x8a
  41fb61:	jmp    0xbadd8d89
  41fb66:	js     0x41fbb9
  41fb68:	mov    esi,0x326e8b87
  41fb6d:	popf   
  41fb6e:	add    ah,BYTE PTR [edx]
  41fb70:	dec    esi
  41fb71:	in     al,dx
  41fb72:	inc    ebx
  41fb73:	lock add al,0x95
  41fb76:	jne    0x41fb63
  41fb78:	pop    edi
  41fb79:	nop
  41fb7a:	les    edi,FWORD PTR [edx+0x41]
  41fb7d:	xor    DWORD PTR [ecx+0x5d],eax
  41fb80:	fisubr DWORD PTR ss:[ebp+0x489c83bc]
  41fb87:	mov    edi,0x751b6783
  41fb8c:	into   
  41fb8d:	push   cs
  41fb8e:	sub    dh,bh
  41fb90:	fwait
  41fb91:	sub    al,0xd8
  41fb93:	push   eax
  41fb94:	sub    DWORD PTR ds:0xd97efdea,eax
  41fb9a:	jmp    0x41fb8e
  41fb9c:	(bad)  
  41fb9d:	mov    ebp,0xc9c8e5a1
  41fba2:	popf   
  41fba3:	fdivr  DWORD PTR [ebp-0x3e]
  41fba6:	rol    DWORD PTR [eax-0x78da24f4],1
  41fbac:	mov    BYTE PTR [edi],al
  41fbae:	adc    BYTE PTR [eax-0x3f51b4e8],bl
  41fbb4:	mov    ebx,0xc6ba5fcf
  41fbb9:	add    DWORD PTR ds:0xf07cc51,esi
  41fbbf:	push   es
  41fbc0:	add    eax,0x104d642d
  41fbc5:	loop   0x41fbd8
  41fbc7:	pop    edi
  41fbc8:	jg     0x41fb99
  41fbca:	mov    edi,0xcb00bd8f
  41fbcf:	popa   
  41fbd0:	daa    
  41fbd1:	leave  
  41fbd2:	mov    edi,0x8ac5efa7
  41fbd7:	adc    eax,0xcaff4e3
  41fbdc:	push   esi
  41fbdd:	or     al,0xe7
  41fbdf:	in     al,0x7b
  41fbe1:	adc    eax,0x9d0ccac3
  41fbe6:	outs   dx,DWORD PTR ds:[esi]
  41fbe7:	mov    eax,0x43a69f85
  41fbec:	push   edi
  41fbed:	popf   
  41fbee:	jb     0x41fc3f
  41fbf0:	loop   0x41fc1a
  41fbf2:	mov    esi,0x35442a36
  41fbf7:	dec    ebx
  41fbf8:	fisub  WORD PTR [ecx-0x72]
  41fbfb:	push   es
  41fbfc:	scas   eax,DWORD PTR es:[edi]
  41fbfd:	enter  0x15d4,0x9e
  41fc01:	inc    ebx
  41fc02:	mov    ebx,0x442376ec
  41fc07:	push   ecx
  41fc08:	test   al,0xe1
  41fc0a:	in     al,dx
  41fc0b:	jo     0x41fc5d
  41fc0d:	shl    eax,cl
  41fc0f:	sub    al,0x4d
  41fc11:	rcr    BYTE PTR [esi+0x3301d3ac],0xe5
  41fc18:	inc    edx
  41fc19:	lds    edi,FWORD PTR [edi+0xf]
  41fc1c:	jno    0x41fc06
  41fc1e:	test   eax,0xae6e28d7
  41fc23:	pop    esp
  41fc24:	push   ss
  41fc25:	sub    DWORD PTR [eax+ebx*8],esi
  41fc28:	add    edx,esp
  41fc2a:	xchg   esi,ebx
  41fc2c:	dec    esp
  41fc2d:	mov    dl,cl
  41fc2f:	push   edx
  41fc30:	jns    0x41fc39
  41fc32:	sub    eax,DWORD PTR [edi-0x4b]
  41fc35:	and    DWORD PTR [esi],esi
  41fc37:	scas   eax,DWORD PTR es:[edi]
  41fc38:	(bad)  
  41fc39:	das    
  41fc3a:	push   esi
  41fc3b:	inc    esi
  41fc3c:	(bad)  
  41fc3d:	loope  0x41fbde
  41fc3f:	cmp    BYTE PTR [edx+ebx*2+0x331e9bc4],al
  41fc46:	mov    dl,0xf8
  41fc48:	inc    edi
  41fc49:	fucomp st(3)
  41fc4b:	push   edx
  41fc4c:	ret    
  41fc4d:	mov    esp,0x11a451d0
  41fc52:	adc    BYTE PTR [edx+0x23acc9ec],dl
  41fc58:	std    
  41fc59:	mov    edx,0x7753c8b6
  41fc5e:	in     eax,dx
  41fc5f:	aad    0x2c
  41fc61:	(bad)  
  41fc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc63:	mov    fs,WORD PTR [esi]
  41fc65:	mov    ds:0x66e64317,eax
  41fc6a:	jp     0x41fca2
  41fc6c:	int    0x1
  41fc6e:	scas   al,BYTE PTR es:[edi]
  41fc6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc70:	jae    0x41fcb0
  41fc72:	mov    dh,0x70
  41fc74:	xchg   esp,eax
  41fc75:	pop    ebp
  41fc76:	or     ecx,DWORD PTR [eax]
  41fc78:	movd   mm5,DWORD PTR ds:0x45011d98
  41fc7f:	or     eax,0x3449337b
  41fc84:	and    BYTE PTR [esi+edi*2],bl
  41fc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc88:	ret    0x7133
  41fc8b:	call   0x4e7:0x862d822a
  41fc92:	ret    0xddcb
  41fc95:	sbb    al,0xb4
  41fc97:	stos   BYTE PTR es:[edi],al
  41fc98:	push   0xfc38f210
  41fc9d:	inc    esi
  41fc9e:	inc    edx
  41fc9f:	xor    bh,BYTE PTR [ebx+0x398ad131]
  41fca5:	push   0x6d
  41fca7:	imul   ebx,DWORD PTR [eax],0x5cff735f
  41fcad:	and    cl,BYTE PTR [ebx]
  41fcaf:	xchg   esi,eax
  41fcb0:	or     DWORD PTR [edi-0x4c],0xffffffea
  41fcb4:	xor    al,0xc8
  41fcb6:	jl     0x41fcf6
  41fcb8:	cmp    DWORD PTR [edx+0x374cb51a],edx
  41fcbe:	jno    0x41fc9c
  41fcc0:	mov    edx,0x62cd0fa
  41fcc5:	ja     0x41fcb1
  41fcc7:	sbb    BYTE PTR [ebx+ebp*4+0x6e1216fc],dl
  41fcce:	sub    cl,BYTE PTR [ecx-0x352e026a]
  41fcd4:	dec    edx
  41fcd5:	jl     0x41fcce
  41fcd7:	add    ch,BYTE PTR [ecx+0x62584d4a]
  41fcdd:	cmp    BYTE PTR ds:0x48ce3efe,cl
  41fce3:	or     esi,edi
  41fce5:	sbb    ecx,ecx
  41fce7:	sbb    ecx,DWORD PTR [esi+ebx*4+0x6e]
  41fceb:	ret    0x5a71
  41fcee:	and    eax,0x5284ba70
  41fcf3:	or     al,BYTE PTR [edx]
  41fcf5:	sbb    eax,0x48ba2824
  41fcfa:	(bad)  
  41fcfb:	adc    DWORD PTR [ecx-0x71],eax
  41fcfe:	sbb    ah,BYTE PTR [eax+0x687923fb]
  41fd04:	int    0x8f
  41fd06:	inc    esi
  41fd07:	mov    cl,0x71
  41fd09:	mov    ah,0x69
  41fd0b:	ins    DWORD PTR es:[edi],dx
  41fd0c:	xchg   esi,eax
  41fd0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd0e:	daa    
  41fd0f:	imul   eax,DWORD PTR [ebx],0xffffffc2
  41fd12:	mov    edx,0x94107f91
  41fd17:	scas   eax,DWORD PTR es:[edi]
  41fd18:	push   edx
  41fd19:	xor    ebx,edx
  41fd1b:	jg     0x41fd38
  41fd1d:	mov    ah,0x93
  41fd1f:	(bad)  
  41fd20:	fistp  DWORD PTR [eax-0x2e35c90b]
  41fd26:	adc    ch,BYTE PTR [edx+0x3af9620e]
  41fd2c:	(bad)  
  41fd2d:	daa    
  41fd2e:	mov    esp,0x15ddf665
  41fd33:	das    
  41fd34:	cmc    
  41fd35:	or     DWORD PTR [ebx],eax
  41fd37:	cmc    
  41fd38:	add    edi,DWORD PTR [ebp+edi*1+0x457c86af]
  41fd3f:	sbb    al,0x66
  41fd41:	sub    ah,0x22
  41fd44:	or     al,0xb2
  41fd46:	add    DWORD PTR [esi],ebx
  41fd48:	pop    eax
  41fd49:	sbb    eax,0x4953b91a
  41fd4e:	inc    edx
  41fd4f:	add    edx,ebx
  41fd51:	pop    ebx
  41fd52:	jns    0x41fd96
  41fd54:	inc    esi
  41fd55:	xchg   DWORD PTR [ecx],ebx
  41fd57:	ins    BYTE PTR es:[edi],dx
  41fd58:	sub    eax,ebp
  41fd5a:	loope  0x41fd16
  41fd5c:	(bad)  
  41fd5d:	div    bh
  41fd5f:	sbb    al,0xbe
  41fd61:	nop
  41fd62:	loope  0x41fdbd
  41fd64:	xor    DWORD PTR [edx],ebx
  41fd66:	pop    edx
  41fd67:	mov    WORD PTR [esi+0x4adc2957],fs
  41fd6d:	sbb    al,0x9
  41fd6f:	imul   ecx,DWORD PTR [edx+0x1],0x7d43e3c8
  41fd76:	xor    BYTE PTR [ecx],bh
  41fd78:	stos   BYTE PTR es:[edi],al
  41fd79:	add    edx,ebx
  41fd7b:	mov    esp,0xb8eff6c4
  41fd80:	inc    eax
  41fd81:	jmp    0x41fd09
  41fd83:	mov    ds:0x28e8af60,al
  41fd88:	in     al,dx
  41fd89:	fld    DWORD PTR [edx+0x32]
  41fd8c:	ja     0x41fd28
  41fd8e:	cmp    esp,esp
  41fd90:	xor    al,0x7e
  41fd92:	inc    ecx
  41fd93:	or     al,0x7f
  41fd95:	(bad)  
  41fd97:	rcr    DWORD PTR [esp+ecx*4],cl
  41fd9a:	pop    ebx
  41fd9b:	add    al,0xef
  41fd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd9e:	rcl    edi,1
  41fda0:	pop    ebp
  41fda1:	lock mov ds:0x1b8f6e5a,al
  41fda7:	jb     0x41fd77
  41fda9:	fild   WORD PTR [edi-0x38870f62]
  41fdaf:	mov    BYTE PTR ds:0x3aac9761,cl
  41fdb5:	lds    edx,FWORD PTR [edx]
  41fdb7:	outs   dx,DWORD PTR ds:[esi]
  41fdb8:	mov    ds:0xaf4be457,eax
  41fdbd:	daa    
  41fdbe:	fs popa 
  41fdc0:	adc    eax,0x9905a6d4
  41fdc5:	stos   DWORD PTR es:[edi],eax
  41fdc6:	retf   0x11b5
  41fdc9:	xor    DWORD PTR [eax+0x33],esi
  41fdcc:	stc    
  41fdcd:	push   ds
  41fdce:	xchg   ebx,eax
  41fdcf:	bound  edx,QWORD PTR [edi-0x876898a]
  41fdd5:	mov    ds:0xb5694f2b,al
  41fdda:	in     al,dx
  41fddb:	mov    esi,esi
  41fddd:	outs   dx,DWORD PTR ds:[esi]
  41fdde:	jbe    0x41fe14
  41fde0:	(bad)  
  41fde1:	ins    DWORD PTR es:[edi],dx
  41fde2:	mov    ds:0x3666223f,eax
  41fde7:	int3   
  41fde8:	pop    ecx
  41fde9:	jecxz  0x41fda4
  41fdeb:	cmp    DWORD PTR [eax],edi
  41fded:	int    0x22
  41fdef:	repz sar DWORD PTR [ebp+0x22304bd9],cl
  41fdf6:	retf   0xa805
  41fdf9:	xor    DWORD PTR [edi+0x3f4de136],eax
  41fdff:	inc    ebp
  41fe00:	cli    
  41fe01:	(bad)  
  41fe02:	icebp  
  41fe03:	mov    ch,0xed
  41fe05:	add    BYTE PTR [eax],dh
  41fe07:	xchg   edi,eax
  41fe08:	outs   dx,DWORD PTR ds:[esi]
  41fe09:	jb     0x41fdd3
  41fe0b:	mov    eax,ds:0x6bc535cf
  41fe10:	es enter 0x756c,0x5f
  41fe15:	sub    dl,ch
  41fe17:	add    al,0x9d
  41fe1a:	nop
  41fe1b:	cmp    DWORD PTR [eax+ecx*2],ebx
  41fe1e:	cmp    al,0xd9
  41fe20:	xchg   esi,eax
  41fe21:	lea    edi,[eax]
  41fe23:	gs dec edi
  41fe25:	mov    edi,0xf511f3be
  41fe2a:	push   0x55
  41fe2c:	or     ch,BYTE PTR [esi+0x25]
  41fe2f:	(bad)  
  41fe31:	mul    esp
  41fe33:	lods   eax,DWORD PTR ds:[esi]
  41fe34:	test   eax,0x2c5ad600
  41fe39:	push   cs
  41fe3a:	enter  0x2405,0x1b
  41fe3e:	mov    al,ds:0xf3bc1aec
  41fe43:	aad    0xcc
  41fe45:	loopne 0x41fe8f
  41fe47:	sub    bl,bh
  41fe49:	jl     0x41fdf9
  41fe4b:	mov    cs,ecx
  41fe4d:	or     eax,0xda6bccc7
  41fe52:	cld    
  41fe53:	inc    eax
  41fe54:	add    BYTE PTR [edx-0x1e],bl
  41fe57:	fistp  WORD PTR [ebp+edx*8-0x63057bb4]
  41fe5e:	outs   dx,BYTE PTR ds:[esi]
  41fe5f:	out    0x88,al
  41fe61:	jns    0x41fe96
  41fe63:	xchg   cl,cl
  41fe65:	mov    eax,0x9a670454
  41fe6a:	inc    esp
  41fe6b:	dec    edx
  41fe6c:	xor    al,0x6c
  41fe6e:	jmp    0xfaa6:0x34dd0d75
  41fe75:	call   0x4740991
  41fe7a:	mov    eax,ds:0xd7e8842d
  41fe7f:	pop    eax
  41fe80:	pop    esi
  41fe81:	pop    ss
  41fe82:	pop    eax
  41fe83:	cmp    al,0x10
  41fe85:	icebp  
  41fe86:	jp     0x41fe71
  41fe88:	mov    ch,0xff
  41fe8a:	pushf  
  41fe8b:	and    eax,0x43b91bdc
  41fe90:	xor    BYTE PTR cs:[ebx],ah
  41fe93:	xor    eax,0xf2c127df
  41fe98:	jecxz  0x41fe65
  41fe9a:	cld    
  41fe9b:	jnp    0x41fef9
  41fe9d:	out    0xae,al
  41fe9f:	mov    eax,ds:0x5696d9a7
  41fea4:	call   0x4522:0xfbbf757e
  41feab:	cmp    ch,cl
  41fead:	sbb    ah,BYTE PTR [esi+0x67]
  41feb0:	or     ecx,ecx
  41feb2:	sbb    eax,0xc0b27d0c
  41feb7:	pop    esi
  41feb8:	icebp  
  41feb9:	ret    0x95ea
  41febc:	dec    edx
  41febd:	xor    BYTE PTR [ebp+0x14d2aa4a],0x9a
  41fec4:	aaa    
  41fec5:	mov    DWORD PTR [ebx+0x63],0x294e3b48
  41fecc:	out    dx,al
  41fecd:	fs push esp
  41fecf:	clc    
  41fed0:	sahf   
  41fed1:	sbb    esi,DWORD PTR [edi-0x15]
  41fed4:	pop    ebx
  41fed5:	lahf   
  41fed6:	jl     0x41fef5
  41fed8:	ins    DWORD PTR es:[edi],dx
  41fed9:	mov    ebx,0x4b007d4a
  41fede:	inc    eax
  41fedf:	mov    ebp,0xd1855cd0
  41fee4:	xor    eax,0x3c9fd3b8
  41fee9:	clc    
  41feea:	ss dec eax
  41feec:	mov    cs,WORD PTR [edi]
  41feee:	xor    edx,0x0
  41fef1:	(bad)  
  41fef2:	mov    ah,0xba
  41fef4:	or     eax,0xcc298e88
  41fef9:	mov    eax,ds:0xd49de30e
  41fefe:	push   ss
  41feff:	rcr    BYTE PTR [edi+edi*1+0x15b88d4],0x47
  41ff07:	mov    eax,0x8c93ba37
  41ff0c:	xchg   ecx,eax
  41ff0d:	inc    ecx
  41ff0e:	ror    BYTE PTR [ebx-0x1a],cl
  41ff11:	or     al,0xc1
  41ff13:	pop    ebx
  41ff14:	inc    edx
  41ff15:	add    eax,0x6451239c
  41ff1a:	mov    esp,0x465a738a
  41ff1f:	mov    edx,0xc7f3bd46
  41ff24:	dec    ecx
  41ff25:	lods   al,BYTE PTR ds:[esi]
  41ff26:	les    edx,FWORD PTR [eax+0x4a]
  41ff29:	add    eax,0x315931f4
  41ff2e:	pop    ss
  41ff2f:	jle    0x41fef0
  41ff31:	or     eax,0xa8fe3bc7
  41ff36:	(bad)  
  41ff37:	shl    DWORD PTR [ecx+0x29657fc7],cl
  41ff3d:	sahf   
  41ff3e:	popa   
  41ff3f:	je     0x41fee3
  41ff41:	cdq    
  41ff42:	xchg   ecx,eax
  41ff43:	mov    eax,0xb2e44716
  41ff48:	pop    ss
  41ff49:	jnp    0x41ff32
  41ff4b:	iret   
  41ff4c:	pop    ds
  41ff4d:	fsub   QWORD PTR [edi+ecx*2]
  41ff50:	pusha  
  41ff51:	icebp  
  41ff52:	adc    ch,BYTE PTR [ebp-0x1e3c41b0]
  41ff58:	rol    esi,cl
  41ff5a:	icebp  
  41ff5b:	mov    DWORD PTR [eax+0x3f],ebx
  41ff5e:	jp     0x41ffaf
  41ff60:	adc    ch,ah
  41ff62:	sti    
  41ff63:	fs and esp,ebx
  41ff66:	sahf   
  41ff67:	movups XMMWORD PTR [edi+0x33],xmm6
  41ff6b:	jb     0x41ff00
  41ff6d:	mov    BYTE PTR [ebx],bl
  41ff6f:	and    edi,DWORD PTR [ecx]
  41ff71:	loop   0x41ffbe
  41ff73:	loopne 0x41ffd8
  41ff75:	pop    ebp
  41ff76:	cmp    eax,0x2d4d131e
  41ff7b:	ficom  DWORD PTR [ebx-0x57]
  41ff7e:	or     DWORD PTR [edx],ebx
  41ff80:	mov    bl,0x61
  41ff82:	pop    es
  41ff83:	xchg   esp,eax
  41ff84:	cmp    DWORD PTR [eax],esp
  41ff86:	xor    BYTE PTR [eax+0x60],bh
  41ff89:	mov    cl,bl
  41ff8b:	adc    dl,ah
  41ff8d:	(bad)  
  41ff8f:	retf   0x8321
  41ff92:	mov    dh,BYTE PTR [edi]
  41ff94:	jl     0x41ff59
  41ff96:	mov    ecx,0x7b5389f7
  41ff9b:	stos   BYTE PTR es:[edi],al
  41ff9c:	inc    ecx
  41ff9d:	fiadd  DWORD PTR [ebx-0x42]
  41ffa0:	inc    eax
  41ffa1:	mov    ch,0x75
  41ffa3:	push   ebx
  41ffa4:	xchg   ebp,eax
  41ffa5:	test   DWORD PTR [esi+0xf1a0967],edi
  41ffab:	fnstenv [esp+edx*8]
  41ffae:	push   es
  41ffaf:	call   0xc750d895
  41ffb4:	dec    eax
  41ffb5:	shr    BYTE PTR [ecx-0x7942c47c],1
  41ffbb:	xlat   BYTE PTR ds:[ebx]
  41ffbc:	or     al,0x60
  41ffbe:	pop    esp
  41ffbf:	paddw  mm1,mm6
  41ffc2:	ret    0xcb20
  41ffc5:	in     al,0xcd
  41ffc7:	pop    DWORD PTR [edi]
  41ffc9:	loopne 0x41ffb6
  41ffcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcc:	sbb    eax,0xc2a4088b
  41ffd1:	jns    0x41ffa5
  41ffd3:	aad    0xb8
  41ffd5:	icebp  
  41ffd6:	mov    eax,0x539f0b43
  41ffdb:	push   ds
  41ffdc:	xor    ecx,DWORD PTR [edx+0x16]
  41ffdf:	mov    dx,0xaa3
  41ffe3:	jnp    0x41ffdb
  41ffe5:	push   0x37
  41ffe7:	mov    bh,0x44
  41ffe9:	popa   
  41ffea:	(bad)  [eax*1+0xf4c319b]
  41fff1:	mov    edx,0x6da0d22f
  41fff6:	pop    esi
  41fff7:	push   edi
  41fff8:	push   edi
  41fff9:	cmp    DWORD PTR [ebx-0x3ed417b3],ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x1504f90a
  420121:	rol    DWORD PTR [esi],0xb6
  420124:	add    BYTE PTR [ebx-0x7c7ca1f1],0xa3
  42012b:	sub    DWORD PTR [esi-0x2f9b7484],eax
  420131:	pause  
  420133:	jmp    0x42018e
  420135:	pop    edx
  420136:	sahf   
  420137:	std    
  420138:	scas   al,BYTE PTR es:[edi]
  420139:	cmp    BYTE PTR [ecx],0x84
  42013c:	popf   
  42013d:	pop    ss
  42013e:	mov    eax,0xc15a2a37
  420143:	jmp    0x420178
  420145:	rol    edi,1
  420147:	jp     0x42019c
  420149:	pop    ds
  42014a:	stos   DWORD PTR es:[edi],eax
  42014b:	ror    BYTE PTR [edi-0x179d0bd3],0xe6
  420152:	and    BYTE PTR [ebx-0x59],0x94
  420156:	push   esp
  420157:	lahf   
  420158:	mov    ds:0xdb128714,eax
  42015d:	sar    BYTE PTR [ecx+0x6d],cl
  420160:	out    0x43,eax
  420162:	inc    eax
  420163:	xor    al,BYTE PTR [edi]
  420165:	mov    esp,cs
  420167:	jge    0x42014c
  420169:	pushf  
  42016a:	es pop edx
  42016c:	sbb    cl,BYTE PTR [ebx]
  42016e:	jnp    0x420156
  420170:	or     BYTE PTR [ecx],bl
  420172:	and    DWORD PTR [ebp+0x510551a4],0x66535767
  42017c:	jae    0x420116
  42017e:	pop    DWORD PTR [edx+0x758efcbd]
  420184:	int3   
  420185:	fcmovnbe st,st(7)
  420187:	hlt    
  420188:	xor    al,0x8
  42018a:	cld    
  42018b:	xor    edi,ebx
  42018d:	sbb    eax,0x8e2d2007
  420192:	imul   ecx,DWORD PTR [eax+0x3f6e5995],0xad879a1e
  42019c:	xchg   esp,eax
  42019d:	shl    BYTE PTR [eax],1
  42019f:	dec    edx
  4201a0:	loopne 0x420163
  4201a2:	push   cs
  4201a3:	push   ds
  4201a4:	jge    0x4201af
  4201a6:	inc    ecx
  4201a7:	bound  esp,QWORD PTR [ebx-0x77]
  4201aa:	or     BYTE PTR [edi-0x66],al
  4201ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ae:	or     bh,BYTE PTR [edx-0xe]
  4201b1:	jae    0x42020a
  4201b3:	in     al,dx
  4201b4:	int    0xe3
  4201b6:	jp     0x420153
  4201b8:	(bad)  
  4201b9:	ins    BYTE PTR es:[edi],dx
  4201ba:	sti    
  4201bb:	and    al,0xef
  4201bd:	xor    BYTE PTR [ebx+0x41e91796],ch
  4201c3:	shl    bl,cl
  4201c5:	sbb    al,0xa3
  4201c7:	add    al,dl
  4201c9:	test   cl,al
  4201cb:	(bad)  
  4201cc:	lock nop
  4201ce:	adc    bl,BYTE PTR [edx+0x63]
  4201d1:	mov    bl,0x8f
  4201d3:	lds    ecx,FWORD PTR [ebx]
  4201d5:	and    BYTE PTR [edi+0x4c806947],bl
  4201db:	loop   0x42016c
  4201dd:	fisttp WORD PTR [eax+0x90f10cd]
  4201e3:	rcl    BYTE PTR [ecx+0x4736cc28],1
  4201e9:	mov    ebp,0x49cd7039
  4201ee:	mov    al,ds:0xe3198629
  4201f3:	jg     0x4201b1
  4201f5:	jae    0x42025b
  4201f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201f8:	adc    ah,dh
  4201fa:	rdmsr  
  4201fc:	fnsave [eax]
  4201fe:	lea    ebp,[ecx]
  420200:	sbb    DWORD PTR [ebx+0x2a135915],ecx
  420206:	in     eax,dx
  420207:	inc    ebp
  420208:	ins    DWORD PTR es:[edi],dx
  420209:	mov    edi,0xc089917b
  42020e:	mov    DWORD PTR [esp+eiz*8+0xd],esp
  420212:	ret    
  420213:	enter  0xa810,0x6e
  420217:	mov    DWORD PTR [eax+ebp*4],edx
  42021a:	(bad)  
  42021c:	jae    0x420276
  42021e:	ret    0xb950
  420221:	test   al,0x3b
  420223:	sub    BYTE PTR [ecx+0x6da34312],dl
  420229:	push   cs
  42022a:	add    eax,0x741554d9
  42022f:	jnp    0x420277
  420231:	and    bh,BYTE PTR [eax-0x51]
  420234:	jecxz  0x4201f7
  420236:	jo     0x420273
  420238:	lock xchg esi,eax
  42023a:	or     BYTE PTR [ebp-0x37e4ea39],0x77
  420241:	(bad)  
  420243:	std    
  420244:	imul   eax,eax,0xa0a4f564
  42024a:	cmp    DWORD PTR [eax+0x5f861a61],edx
  420250:	adc    ch,BYTE PTR [ebp+0x1104a58c]
  420256:	push   ecx
  420257:	mov    edi,0xc7b4a304
  42025c:	or     esi,DWORD PTR ds:0xd7a77142
  420262:	xchg   esi,eax
  420263:	aaa    
  420264:	push   ebp
  420265:	jge    0x420232
  420267:	mov    ebx,0xdd64548a
  42026c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42026d:	jnp    0x420269
  42026f:	jge    0x420276
  420271:	jno    0x420246
  420273:	mov    ds:0x9f126e72,eax
  420278:	mov    BYTE PTR [esi],ch
  42027a:	inc    ecx
  42027b:	adc    DWORD PTR [ebx-0x1d],0xdffebfb8
  420282:	ret    0xf29
  420285:	sub    esp,DWORD PTR [edx+eax*2+0x59ffc6f6]
  42028c:	and    eax,0x9cbc728c
  420291:	sub    BYTE PTR [eax],bh
  420293:	in     eax,dx
  420294:	mov    cl,0xfa
  420296:	ja     0x420269
  420298:	pop    ebp
  420299:	adc    al,0x9e
  42029b:	sbb    ah,BYTE PTR [edi-0x10]
  42029e:	sbb    edx,DWORD PTR [ebx+0x6ff58e40]
  4202a4:	sub    edx,ecx
  4202a6:	bound  ebx,QWORD PTR [ebx+ebx*1-0x2e0cd0cd]
  4202ad:	fdivr  QWORD PTR [ebx-0x3f63eba8]
  4202b3:	add    BYTE PTR [edx-0x79b090c4],cl
  4202b9:	pop    ecx
  4202ba:	sbb    DWORD PTR [eax-0x18],ecx
  4202bd:	fstp   QWORD PTR [ecx-0x10]
  4202c0:	loop   0x420276
  4202c2:	test   DWORD PTR [ebx+0x3ac8286e],esp
  4202c8:	dec    ecx
  4202c9:	sbb    dl,BYTE PTR [esi]
  4202cb:	push   0xffffffdb
  4202cd:	mov    BYTE PTR [eax+0x13],ch
  4202d0:	sub    BYTE PTR [eax-0x6b34eafe],bl
  4202d6:	mov    dh,0x88
  4202d8:	cmp    DWORD PTR [esi],esp
  4202da:	cmc    
  4202db:	shl    BYTE PTR [edi],1
  4202dd:	nop
  4202de:	(bad)  
  4202df:	push   ss
  4202e0:	(bad)  
  4202e1:	mov    ?,ebx
  4202e3:	xchg   DWORD PTR [ebx+0x147675c6],edx
  4202e9:	adc    dl,BYTE PTR [ebp*2-0x3adb5f82]
  4202f0:	mov    bh,0xf5
  4202f2:	push   ebx
  4202f3:	push   edi
  4202f4:	jg     0x420319
  4202f6:	repnz sub ebp,esp
  4202f9:	enter  0x50c5,0x58
  4202fd:	mov    edx,0x22db734f
  420302:	pop    ds
  420303:	sbb    al,0x8e
  420305:	sbb    dh,cl
  420307:	sub    ebp,0xa1a7453b
  42030d:	jl     0x4202b2
  42030f:	sub    dl,bh
  420311:	std    
  420312:	clc    
  420313:	fmul   st,st(4)
  420315:	sub    al,0x31
  420317:	sbb    BYTE PTR [ebp+ecx*2-0x7f5ab1bf],ch
  42031e:	shr    DWORD PTR [esi],1
  420320:	add    al,0xb6
  420322:	add    ebx,DWORD PTR [edx+edx*2+0x5c]
  420326:	std    
  420327:	in     al,0x44
  420329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42032a:	les    eax,FWORD PTR [ebp-0x59f7b2f7]
  420330:	out    0x4e,al
  420332:	dec    edi
  420333:	mov    ds:0xd5546c0a,eax
  420338:	add    edx,DWORD PTR [ecx+0x236d7682]
  42033e:	outs   dx,BYTE PTR ds:[esi]
  42033f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420340:	repnz fbstp TBYTE PTR [ebx+0x66c77cb8]
  420347:	(bad)
  42034b:	scas   eax,DWORD PTR es:[edi]
  42034c:	int3   
  42034d:	pop    ecx
  42034e:	sbb    ebp,DWORD PTR [ebp-0x4ade3d5a]
  420354:	pop    ebx
  420355:	shl    DWORD PTR [eax-0x6b5c54b1],0x88
  42035c:	sub    bl,ah
  42035e:	xor    BYTE PTR [ebp+0x7decd947],bl
  420364:	inc    edi
  420365:	pop    ebp
  420366:	mov    edx,0xd2679b91
  42036b:	mov    dl,0xaa
  42036d:	jecxz  0x42033b
  42036f:	inc    eax
  420370:	xor    DWORD PTR [ebp-0x6c],0xc478aa4f
  420377:	ficomp WORD PTR [ebp+0x47]
  42037a:	pop    edi
  42037b:	fidivr WORD PTR [edi+0x45b60c11]
  420382:	out    dx,al
  420383:	jne    0x420365
  420385:	(bad)  
  420386:	leave  
  420387:	pop    esp
  420388:	pop    ebx
  420389:	test   DWORD PTR [edi],eax
  42038b:	call   0x72202311
  420390:	lods   eax,DWORD PTR ds:[esi]
  420391:	shr    DWORD PTR [esi+esi*1+0x48c6c75],1
  420398:	in     al,0xe3
  42039a:	jno    0x4203e7
  42039c:	mov    esp,0x32841021
  4203a1:	loop   0x4203b0
  4203a3:	lods   eax,DWORD PTR ds:[esi]
  4203a4:	pop    ebp
  4203a5:	cmp    al,0xb3
  4203a7:	cdq    
  4203a8:	jns    0x420400
  4203aa:	mov    es,ebp
  4203ac:	jbe    0x420340
  4203ae:	cdq    
  4203af:	or     edx,ecx
  4203b1:	ins    BYTE PTR es:[edi],dx
  4203b2:	call   0xbbb45f0
  4203b7:	and    al,0xe9
  4203b9:	mov    cl,0x13
  4203bb:	in     al,0x4c
  4203bd:	dec    eax
  4203be:	xchg   esi,eax
  4203bf:	mov    dh,0xc3
  4203c1:	shr    eax,cl
  4203c3:	addr16 push esi
  4203c5:	sub    eax,0x97319aeb
  4203ca:	scas   al,BYTE PTR es:[edi]
  4203cb:	push   edx
  4203cc:	mov    bl,0x6
  4203ce:	mov    DWORD PTR [edx+0x7a],edx
  4203d1:	outs   dx,BYTE PTR ds:[esi]
  4203d2:	out    0xe4,al
  4203d4:	je     0x420411
  4203d6:	inc    ecx
  4203d7:	jns    0x42044f
  4203d9:	pop    ebp
  4203da:	xchg   esp,eax
  4203db:	xchg   esi,eax
  4203dc:	fidivr WORD PTR [ebp+eax*4-0xedd58ec]
  4203e3:	call   0x6957a9c5
  4203e8:	and    al,0x2d
  4203ea:	test   eax,0xe30813e3
  4203ef:	and    eax,0x851e8d10
  4203f4:	add    dl,BYTE PTR [esi]
  4203f6:	inc    esi
  4203f7:	jae    0x420393
  4203f9:	ins    BYTE PTR es:[edi],dx
  4203fa:	(bad)
  4203fd:	pop    eax
  4203fe:	mov    eax,0xc39ac1c4
  420403:	cs ret 0x5bab
  420407:	xchg   esi,eax
  420408:	mov    cl,BYTE PTR [ebx]
  42040a:	shl    DWORD PTR [esi+0x52],1
  42040d:	fsubrp st(2),st
  42040f:	sub    DWORD PTR [ebx],esi
  420411:	fld1   
  420413:	mov    BYTE PTR [esi-0x56],dh
  420416:	inc    DWORD PTR [esi+0x3161f72a]
  42041c:	xor    eax,0x76873698
  420421:	hlt    
  420422:	aad    0x7c
  420424:	mov    ebp,0xd4c72f1b
  420429:	mov    al,0xc7
  42042b:	fst    QWORD PTR [ebp-0x1a467da1]
  420431:	call   0xcd9708d8
  420436:	cli    
  420437:	(bad)  
  420438:	cld    
  420439:	aad    0x5f
  42043b:	xchg   DWORD PTR [edx+0x6],ebx
  42043e:	or     ecx,ecx
  420440:	fdivr  st,st(5)
  420442:	shl    BYTE PTR [ebx],cl
  420444:	or     bl,ah
  420446:	aaa    
  420447:	pop    edi
  420448:	cwde   
  420449:	ss jle 0x420497
  42044c:	jmp    0xb8de:0x72f101e3
  420453:	retf   0x41b1
  420456:	das    
  420457:	inc    ebp
  420458:	ins    DWORD PTR es:[edi],dx
  420459:	pop    edi
  42045a:	xchg   ecx,eax
  42045b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42045c:	je     0x420458
  42045e:	sub    DWORD PTR [edx+0x7b87d0ff],edx
  420464:	inc    ebx
  420465:	fdivr  QWORD PTR [ecx-0x3e4759c1]
  42046b:	ret    
  42046c:	ins    DWORD PTR es:[edi],dx
  42046d:	fisubr DWORD PTR [eax+0x3e54486e]
  420473:	stc    
  420474:	aaa    
  420475:	les    ebx,FWORD PTR [eax]
  420477:	or     ch,BYTE PTR [edi]
  420479:	xor    al,0x5c
  42047b:	outs   dx,DWORD PTR ds:[esi]
  42047c:	mov    esp,0x165f2b74
  420481:	rol    ebp,0x88
  420484:	and    esi,esi
  420486:	adc    esp,ebp
  420488:	or     DWORD PTR [ebx],ecx
  42048a:	sbb    BYTE PTR [ebp-0x665f2a01],ch
  420490:	fadd   DWORD PTR [esi+0x70]
  420493:	jo     0x42047a
  420495:	gs jecxz 0x4204b9
  420498:	push   cs
  420499:	cmp    ebx,DWORD PTR [edi-0x37]
  42049c:	push   ecx
  42049d:	and    al,0x88
  42049f:	lods   al,BYTE PTR ds:[esi]
  4204a0:	(bad)  
  4204a1:	repz pop esi
  4204a3:	push   0xffffffae
  4204a5:	xor    bh,BYTE PTR [eax+0x24ac27e8]
  4204ab:	test   al,0xf6
  4204ad:	mov    eax,ds:0x69bf8bcb
  4204b2:	popf   
  4204b3:	jno    0x420481
  4204b5:	xchg   esp,eax
  4204b6:	js     0x420473
  4204b8:	xor    ch,BYTE PTR [eax-0x63c36e75]
  4204be:	cdq    
  4204bf:	sub    ah,BYTE PTR [eax+0x247c3816]
  4204c5:	cdq    
  4204c6:	push   esp
  4204c7:	(bad)  
  4204c8:	sti    
  4204c9:	mov    ebp,DWORD PTR [eax-0x7a56d84e]
  4204cf:	fnstenv [eax]
  4204d1:	and    DWORD PTR [edx],edi
  4204d3:	in     eax,0x6c
  4204d5:	ficomp DWORD PTR [edx-0x42]
  4204d8:	test   BYTE PTR [edi+0x4486f210],bl
  4204de:	and    dh,BYTE PTR [edi]
  4204e0:	pop    eax
  4204e1:	jae    0x4204c2
  4204e3:	(bad)  
  4204e4:	pop    ds
  4204e5:	dec    eax
  4204e6:	das    
  4204e7:	xchg   DWORD PTR [edx-0x3746bff4],ebx
  4204ed:	sbb    edi,DWORD PTR [esi]
  4204ef:	in     al,0xd
  4204f1:	mov    eax,0xfa3bcb25
  4204f6:	fsubr  DWORD PTR ds:0xa065fca7
  4204fc:	ja     0x420511
  4204fe:	clc    
  4204ff:	dec    edx
  420500:	lods   eax,DWORD PTR ds:[esi]
  420501:	jbe    0x420492
  420503:	(bad)  
  420504:	shr    cl,1
  420506:	inc    eax
  420507:	rcr    DWORD PTR [ebx+0x1eb6455],cl
  42050d:	xchg   ebp,eax
  42050e:	dec    eax
  42050f:	int3   
  420510:	adc    esi,DWORD PTR [edi]
  420512:	mov    bl,0x8c
  420514:	inc    eax
  420515:	(bad)  
  420516:	in     al,dx
  420517:	mov    edx,0x10e99ba1
  42051c:	xor    eax,0xce15f980
  420521:	add    BYTE PTR [esi-0x23],0x69
  420525:	shr    BYTE PTR [eax-0x5965c668],1
  42052b:	pop    edx
  42052c:	enter  0x8645,0xe1
  420530:	jmp    0x5a56fbef
  420535:	imul   BYTE PTR [eax+edx*2+0x1e]
  420539:	stos   BYTE PTR es:[edi],al
  42053a:	and    al,0xee
  42053c:	jnp    0x42054e
  42053e:	xchg   dh,cl
  420540:	adc    al,0x35
  420542:	sub    edi,ebp
  420544:	or     eax,0x6b4f7b2d
  420549:	adc    bh,bh
  42054b:	mov    esi,0x28bbfe56
  420550:	add    BYTE PTR [eax-0x1b3ea36e],0xae
  420557:	dec    ecx
  420558:	cmp    eax,eax
  42055a:	and    al,0x31
  42055c:	mov    ch,0x9a
  42055e:	xor    bh,ah
  420560:	dec    eax
  420561:	adc    al,0x41
  420563:	out    dx,eax
  420564:	lock sar BYTE PTR [edx+0xf0c6541],cl
  42056b:	ja     0x420592
  42056d:	out    dx,al
  42056e:	pusha  
  42056f:	into   
  420570:	lea    ebp,[ebx]
  420572:	push   cs
  420573:	(bad)  
  420575:	mov    bl,0x94
  420577:	pop    ebx
  420578:	adc    eax,0xf2221556
  42057d:	(bad)  
  42057e:	dec    esi
  42057f:	call   FWORD PTR [esi+0x55b68a9d]
  420585:	jge    0x42057f
  420587:	das    
  420588:	cld    
  420589:	xor    dl,BYTE PTR [ebx-0x6c]
  42058c:	(bad)  
  42058d:	sbb    ecx,ebx
  42058f:	outs   dx,BYTE PTR ds:[esi]
  420590:	jne    0x4205a3
  420592:	popf   
  420593:	cli    
  420594:	pop    ebp
  420595:	call   0x7832:0x9e7f03a0
  42059c:	pop    edi
  42059d:	adc    eax,0xcab63fa
  4205a2:	aas    
  4205a3:	(bad)  
  4205a4:	ds in  al,0x38
  4205a7:	test   DWORD PTR [ecx+0x634b8b2e],ecx
  4205ad:	dec    eax
  4205ae:	dec    ebp
  4205af:	(bad)  [ecx]
  4205b1:	retf   
  4205b2:	jae    0x420623
  4205b4:	xchg   esp,eax
  4205b5:	test   al,0x45
  4205b7:	in     eax,dx
  4205b8:	add    eax,0x7ea91921
  4205bd:	mov    bh,0xfb
  4205bf:	sub    al,BYTE PTR [edx+0x49]
  4205c2:	cdq    
  4205c3:	nop
  4205c4:	pusha  
  4205c5:	xchg   edi,eax
  4205c6:	sbb    DWORD PTR [ebp-0x227da61d],esi
  4205cc:	iret   
  4205cd:	cs popf 
  4205cf:	sub    eax,0xce50491f
  4205d4:	xchg   al,ah
  4205d6:	in     al,dx
  4205d7:	and    ebp,DWORD PTR [ebp-0x32c18a33]
  4205dd:	and    eax,esp
  4205df:	mov    edi,0x855bcac1
  4205e4:	sbb    al,0x89
  4205e6:	dec    esi
  4205e7:	sub    eax,0x17e96954
  4205ec:	mov    eax,ds:0xefe7f0fe
  4205f1:	test   eax,0x252350b9
  4205f6:	cmp    DWORD PTR [ecx-0x5e228227],0xffffff93
  4205fd:	dec    edx
  4205fe:	daa    
  4205ff:	add    DWORD PTR [esi+0xe],esp
  420602:	arpl   WORD PTR [esi+0x24346a2c],bp
  420608:	cli    
  420609:	push   ss
  42060a:	inc    edx
  42060b:	jle    0x420657
  42060d:	lock call 0x7c00daec
  420613:	inc    ecx
  420614:	fs loop 0x42065a
  420617:	cli    
  420618:	pop    edi
  420619:	jne    0x420648
  42061b:	daa    
  42061c:	mov    al,ds:0x1be736f3
  420621:	mov    edx,0x50a919e3
  420626:	jae    0x4205d2
  420628:	cmc    
  420629:	(bad)  
  42062a:	(bad)  
  42062b:	fst    DWORD PTR [ebx]
  42062d:	adc    BYTE PTR [eax-0x55],ch
  420630:	int3   
  420631:	cs je  0x4205dc
  420634:	rcr    DWORD PTR [esi],cl
  420636:	push   edi
  420637:	lds    edi,FWORD PTR [ecx-0x195ccacf]
  42063d:	jns    0x4205f2
  42063f:	cmp    dh,BYTE PTR [ecx]
  420641:	je     0x4205e4
  420643:	or     eax,0x85d69f99
  420648:	shr    esp,1
  42064a:	mov    al,es:0xd7d1a6be
  420650:	pop    eax
  420651:	jnp    0x420687
  420653:	rol    DWORD PTR [ebx-0x5],0x9
  420657:	loopne 0x420679
  420659:	mov    ?,WORD PTR [eax+0x7b9e03df]
  42065f:	shl    BYTE PTR [esp+esi*4+0xaacbd21],1
  420666:	jmp    0x31b3:0x9b004b7a
  42066d:	xor    al,0xb1
  42066f:	and    dh,dh
  420671:	fs loope 0x42066f
  420674:	or     DWORD PTR [esi-0x2e01bcb6],ebx
  42067a:	pop    edi
  42067b:	or     DWORD PTR [edi-0x5b0ee041],ebx
  420681:	leave  
  420682:	mov    WORD PTR [ebx-0xb272fd3],cs
  420688:	ret    0x2f
  42068b:	add    esi,DWORD PTR [ebp-0x75a1193e]
  420691:	stc    
  420692:	rcr    BYTE PTR [edx],1
  420694:	xor    BYTE PTR [ebp-0x7fae1611],bh
  42069a:	addr16 dec eax
  42069c:	div    BYTE PTR [ebx]
  42069e:	mov    eax,ds:0x8f99531b
  4206a3:	inc    ebx
  4206a4:	push   esi
  4206a5:	clc    
  4206a6:	gs mov eax,0x8cc96ef9
  4206ac:	mov    bh,0xfe
  4206ae:	or     cl,dh
  4206b0:	scas   al,BYTE PTR es:[edi]
  4206b1:	jae    0x4206a3
  4206b3:	inc    edx
  4206b4:	sub    BYTE PTR [ebp+0x5a8a066c],cl
  4206ba:	mov    ch,0x73
  4206bc:	jecxz  0x420643
  4206be:	loope  0x42068a
  4206c0:	ret    
  4206c1:	or     esp,eax
  4206c3:	pop    ecx
  4206c4:	xor    dl,BYTE PTR ds:0x14ced648
  4206ca:	sahf   
  4206cb:	hlt    
  4206cc:	stos   DWORD PTR es:[edi],eax
  4206cd:	rol    ch,cl
  4206cf:	icebp  
  4206d0:	mov    eax,0x998d1b38
  4206d5:	sub    BYTE PTR [esi-0x75922f9],0x51
  4206dc:	mov    al,0x1e
  4206de:	jp     0x420712
  4206e0:	push   edx
  4206e1:	ret    0x6f84
  4206e4:	mov    ebx,0xcfe6d257
  4206e9:	and    eax,0xdf8ef1c3
  4206ee:	test   al,0xb6
  4206f0:	or     al,BYTE PTR [ebx-0x2261ed32]
  4206f6:	cmp    eax,0x52ad35d6
  4206fb:	arpl   sp,bx
  4206fd:	ror    DWORD PTR [esi+0x50692b98],1
  420703:	retf   0xfda3
  420706:	sbb    eax,0xf466f195
  42070b:	and    bl,BYTE PTR [edx+0x29]
  42070e:	jno    0x4206d4
  420710:	push   ss
  420711:	ja     0x4206b5
  420713:	shl    BYTE PTR [ecx],0xda
  420716:	add    edi,DWORD PTR [edi]
  420718:	popf   
  420719:	inc    esi
  42071a:	sbb    ebp,eax
  42071c:	cmp    al,0x2c
  42071e:	rcl    DWORD PTR [ebx+0x20837b5e],0xf8
  420725:	add    al,0xad
  420727:	dec    esi
  420728:	repz push edx
  42072a:	mov    eax,ds:0x42d6288e
  42072f:	jge    0x420701
  420731:	out    dx,al
  420732:	push   es
  420733:	push   0xf449189e
  420738:	lods   al,BYTE PTR ds:[esi]
  420739:	repnz xor DWORD PTR [edx+edi*4+0x5781902e],ebx
  420741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420742:	lea    esi,ds:0x52174564
  420748:	sbb    eax,DWORD PTR [ecx-0x4a285c39]
  42074e:	xor    al,BYTE PTR [ebx-0x1a48425b]
  420754:	gs out 0x56,al
  420757:	sbb    esp,DWORD PTR [edi-0x23180b8e]
  42075d:	push   0xbd4f54b9
  420762:	leave  
  420763:	imul   ebp,DWORD PTR [edi+0x11],0xffffffaa
  420767:	imul   ebp,esp,0x64
  42076a:	pop    ds
  42076b:	jmp    0x324aedd4
  420770:	dec    esp
  420771:	and    DWORD PTR [esi-0x5f9881a8],eax
  420777:	sbb    ah,bl
  420779:	aaa    
  42077a:	mov    ecx,0xfb675851
  42077f:	sti    
  420780:	aam    0xe3
  420782:	bound  edi,QWORD PTR [ebx-0xe]
  420785:	cdq    
  420786:	scas   al,BYTE PTR es:[edi]
  420787:	addr16 into 
  420789:	popf   
  42078a:	(bad)  
  42078b:	mov    edi,0x402507a9
  420790:	sar    bl,cl
  420792:	xlat   BYTE PTR ds:[ebx]
  420793:	adc    dl,BYTE PTR [edi]
  420795:	ss mov edx,cs
  420798:	adc    esp,edi
  42079a:	sub    eax,0x19f40343
  42079f:	sbb    edi,DWORD PTR [edx-0x71]
  4207a2:	icebp  
  4207a3:	fwait
  4207a4:	mov    eax,ds:0x1f341724
  4207a9:	jmp    0x83ec:0xb48219de
  4207b0:	mov    ds:0xa06df357,eax
  4207b5:	mov    BYTE PTR [ebp+0x4a272ad1],0x20
  4207bc:	lods   eax,DWORD PTR ds:[esi]
  4207bd:	sub    BYTE PTR [eax+0x52],dl
  4207c0:	daa    
  4207c1:	xchg   BYTE PTR [ecx+0x61bbfaba],ch
  4207c7:	and    al,0x65
  4207c9:	jle    0x4207c0
  4207cb:	or     eax,0x37871234
  4207d0:	lds    esp,FWORD PTR [ebx+0x8b1c646]
  4207d6:	fs icebp 
  4207d8:	xor    esi,DWORD PTR [edi]
  4207da:	xchg   esp,eax
  4207db:	mov    esp,DWORD PTR [eax-0x5a]
  4207de:	xchg   edx,eax
  4207df:	sar    DWORD PTR [edi+0x384c82c2],cl
  4207e5:	pop    ds
  4207e6:	fsubp  st(6),st
  4207e8:	sar    DWORD PTR [esi],0xbc
  4207eb:	mov    ebx,0xd311751b
  4207f0:	pop    di
  4207f2:	mov    edx,0xd746a28f
  4207f7:	test   al,0xbe
  4207f9:	jno    0x4207c5
  4207fb:	stos   BYTE PTR es:[edi],al
  4207fc:	sbb    BYTE PTR cs:[ebp+0x37],0x6a
  420801:	push   cs
  420802:	cmp    ax,WORD PTR [edi]
  420805:	test   eax,0xa4408e27
  42080a:	xchg   ebp,eax
  42080b:	cld    
  42080c:	(bad)  
  42080d:	js     0x420812
  42080f:	(bad)  
  420810:	loop   0x420859
  420812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420813:	add    al,BYTE PTR [esi+0x166836ac]
  420819:	or     dl,al
  42081b:	mov    ch,0x54
  42081d:	arpl   bp,si
  42081f:	mov    edi,0x8a0c3023
  420824:	add    DWORD PTR [edi],0xffffff8b
  420827:	jp     0x42087e
  420829:	jecxz  0x42083c
  42082b:	mov    ebp,esi
  42082d:	test   bl,dl
  42082f:	(bad)  
  420830:	push   ss
  420831:	pop    ss
  420832:	mov    esp,0xccce4278
  420837:	xchg   ebx,eax
  420838:	cld    
  420839:	xchg   edi,eax
  42083a:	add    bh,BYTE PTR [eax+0x19]
  42083d:	mov    bh,0x35
  42083f:	stos   BYTE PTR es:[edi],al
  420840:	sbb    DWORD PTR [edx],edx
  420842:	aam    0x7b
  420844:	push   edx
  420845:	dec    ebp
  420846:	mov    BYTE PTR [ebx],cl
  420848:	sub    ecx,0x31
  42084b:	into   
  42084c:	mov    bh,0x6
  42084e:	shl    DWORD PTR [edx+edi*8+0x70],1
  420852:	and    ebp,ecx
  420854:	pop    ebp
  420855:	cmp    al,0x49
  420857:	aad    0xe2
  420859:	dec    esi
  42085a:	in     al,0xcd
  42085c:	add    ebx,DWORD PTR [ebx-0xe329c35]
  420862:	fsubp  st(5),st
  420864:	mov    dl,0x61
  420866:	dec    esp
  420867:	mov    ah,0xa0
  420869:	jmp    0xe90a:0x13ed875d
  420870:	mov    ds:0xb3c54315,al
  420875:	fdiv   DWORD PTR [eax-0x62f2ce7e]
  42087b:	aam    0xaf
  42087d:	loop   0x42087b
  42087f:	inc    ecx
  420880:	xchg   edi,eax
  420881:	xchg   ecx,eax
  420882:	nop
  420883:	mov    al,ds:0xe40ce90f
  420888:	test   al,0x25
  42088a:	xchg   edi,eax
  42088b:	inc    ebp
  42088c:	into   
  42088d:	sub    dl,ch
  42088f:	dec    eax
  420890:	pop    ss
  420891:	add    BYTE PTR [edx+0x652f8f93],ah
  420897:	div    BYTE PTR [ecx+0x3528e4f5]
  42089d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089e:	jp     0x42082c
  4208a0:	xchg   ebp,eax
  4208a1:	cmp    BYTE PTR [eax+0xf],al
  4208a4:	loopne 0x42090a
  4208a6:	sbb    BYTE PTR [ebx],dl
  4208a8:	cmp    al,0x63
  4208aa:	inc    ebp
  4208ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ac:	mov    ch,0x13
  4208ae:	bound  esi,QWORD PTR [edx+edx*2-0x7b]
  4208b2:	(bad)  
  4208b3:	push   ecx
  4208b4:	not    BYTE PTR [ecx-0x27]
  4208b7:	in     eax,dx
  4208b8:	sub    al,0x48
  4208ba:	leave  
  4208bb:	jg     0x4208ba
  4208bd:	jmp    0xc14e:0x1cdfd605
  4208c4:	shr    DWORD PTR ds:0xba8ffef8,1
  4208ca:	mov    edi,0x6f193438
  4208cf:	mov    eax,0x937be2c5
  4208d4:	sbb    DWORD PTR [ecx+eiz*8+0x39],eax
  4208d8:	(bad)  
  4208d9:	sti    
  4208da:	and    DWORD PTR [ebp+0x215bfaa8],edx
  4208e0:	imul   edi,ebx,0x1464e838
  4208e6:	daa    
  4208e7:	cmp    ah,bh
  4208e9:	mov    DWORD PTR [ecx+0x70237dd],ecx
  4208ef:	mov    ah,0x50
  4208f1:	cli    
  4208f2:	dec    ebp
  4208f3:	in     eax,dx
  4208f4:	jbe    0x4208f5
  4208f6:	mov    fs,edi
  4208f8:	lods   al,BYTE PTR ds:[esi]
  4208f9:	pop    edi
  4208fa:	shr    ch,1
  4208fc:	xchg   BYTE PTR [esp+eiz*8+0x6d],ch
  420900:	xchg   ebx,eax
  420901:	sub    bh,BYTE PTR [ebx]
  420903:	pop    esi
  420904:	cs popf 
  420906:	out    0x1c,al
  420908:	mov    ecx,0x19789c09
  42090d:	pop    edx
  42090e:	(bad)  
  420910:	cwde   
  420911:	jmp    0x4208b8
  420913:	test   eax,0x189e1a8
  420918:	add    eax,0x4ccc5922
  42091d:	inc    eax
  42091e:	adc    ebx,DWORD PTR [ecx-0x6d]
  420921:	(bad)  
  420922:	call   0x4f923ab2
  420927:	adc    dh,bh
  420929:	repnz adc eax,DWORD PTR [eax+0x5c]
  42092d:	push   0x617e8699
  420932:	mov    esi,0xd36c8fd8
  420937:	push   eax
  420938:	lods   al,BYTE PTR ds:[esi]
  420939:	pop    ecx
  42093a:	ss pop edx
  42093c:	stos   BYTE PTR es:[edi],al
  42093d:	add    BYTE PTR [edx],0x8f
  420940:	pop    esp
  420941:	mov    eax,0xa900a78f
  420946:	fistp  DWORD PTR [ecx+0x3750f191]
  42094c:	(bad)
  42094f:	repnz sub ebp,DWORD PTR [ebx+0x17]
  420953:	push   edx
  420954:	sahf   
  420955:	jge    0x420995
  420957:	mov    ds:0xae9d6d4e,eax
  42095c:	inc    eax
  42095d:	(bad)  [ebp-0x1e]
  420960:	es adc al,0x2c
  420963:	retf   
  420964:	fistp  QWORD PTR [ebp+0x6f]
  420967:	xchg   edx,eax
  420968:	retf   0x3656
  42096b:	and    al,0x82
  42096d:	xchg   BYTE PTR [esp+edx*2+0x72fd82b2],bh
  420974:	cmp    eax,0x112d1667
  420979:	inc    edx
  42097a:	in     al,0xbd
  42097c:	loope  0x420934
  42097e:	enter  0x8671,0x1e
  420982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420983:	daa    
  420984:	xchg   BYTE PTR [ecx-0x73],dh
  420987:	loope  0x42093a
  420989:	retf   0xf13d
  42098c:	jge    0x42092d
  42098e:	cdq    
  42098f:	ror    BYTE PTR [eax-0x6a],1
  420992:	cmp    ebx,0x47
  420995:	adc    bh,BYTE PTR [ebx]
  420997:	lods   al,BYTE PTR ds:[esi]
  420998:	sbb    cl,BYTE PTR [edi-0x4]
  42099b:	xor    al,0x9f
  42099d:	xor    DWORD PTR [ecx],eax
  42099f:	mov    dl,0x13
  4209a1:	push   es
  4209a2:	xor    esi,DWORD PTR [esi-0x43]
  4209a5:	imul   esi,DWORD PTR [eax],0xffffffa7
  4209a8:	pop    eax
  4209a9:	aaa    
  4209aa:	not    BYTE PTR [eax+edx*8]
  4209ad:	mov    esp,0x1a4a0220
  4209b2:	imul   dl
  4209b4:	dec    edx
  4209b5:	and    cl,BYTE PTR [eax-0x78]
  4209b8:	mov    ebx,0x660ffbe3
  4209bd:	sub    dl,BYTE PTR [ecx]
  4209bf:	xor    ecx,esi
  4209c1:	pop    esi
  4209c2:	jnp    0x420954
  4209c4:	jns    0x420a22
  4209c6:	jle    0x4209ae
  4209c8:	dec    edi
  4209c9:	push   edi
  4209ca:	adc    BYTE PTR [eax],ch
  4209cc:	xor    al,0x8c
  4209ce:	xor    eax,0xa8d52c14
  4209d3:	cmp    BYTE PTR [ebx+0x62e05fda],0xce
  4209da:	ret    0x6fdb
  4209dd:	imul   edi,DWORD PTR ds:0x48eef78a,0x291419b1
  4209e7:	les    ecx,FWORD PTR [ecx*2+0x5f7969cd]
  4209ee:	int3   
  4209ef:	push   eax
  4209f0:	ja     0x420a40
  4209f2:	stos   BYTE PTR es:[edi],al
  4209f3:	cwde   
  4209f4:	repnz mov ss,WORD PTR es:[esi+0x65]
  4209f9:	(bad)  
  4209fa:	cld    
  4209fb:	push   edx
  4209fc:	ret    0xcfd1
  4209ff:	jno    0x420a3b
  420a01:	sti    
  420a02:	xchg   edi,eax
  420a03:	(bad)  
  420a05:	inc    edx
  420a06:	daa    
  420a07:	xchg   DWORD PTR [edx+0x2e83a1d5],edx
  420a0d:	push   ss
  420a0e:	sbb    esp,ecx
  420a10:	or     al,dl
  420a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a13:	mov    eax,0xa5d8e2bc
  420a18:	dec    esp
  420a19:	mov    edi,0x26cacabd
  420a1e:	jg     0x420a9d
  420a20:	jle    0x4209f7
  420a22:	and    bh,BYTE PTR [ebp+0x1b]
  420a25:	and    BYTE PTR [eax+0x329484a5],bl
  420a2b:	xor    DWORD PTR [eax],esp
  420a2d:	stos   DWORD PTR es:[edi],eax
  420a2e:	test   dh,al
  420a30:	and    ebp,DWORD PTR [edx+esi*4-0x51]
  420a34:	fnstenv ds:0xeed6c0f
  420a3a:	sub    dl,bl
  420a3c:	push   eax
  420a3d:	iret   
  420a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a3f:	out    0xc7,al
  420a41:	mov    BYTE PTR [esp+ecx*8+0x19],al
  420a45:	int3   
  420a46:	rol    DWORD PTR [ebx],1
  420a48:	xchg   ebx,eax
  420a49:	aad    0xcc
  420a4b:	sub    al,0x89
  420a4d:	sbb    DWORD PTR [ebx+0x1f],ebx
  420a50:	mov    eax,DWORD PTR [eax+0x2fba37bf]
  420a56:	inc    eax
  420a57:	cmc    
  420a58:	or     DWORD PTR [eax-0x33],0x38
  420a5c:	in     eax,0x8c
  420a5e:	js     0x420a02
  420a60:	xchg   esi,eax
  420a61:	test   eax,0xc0670f92
  420a66:	cmp    BYTE PTR [ebp+0x4a],0x78
  420a6a:	leave  
  420a6b:	rcr    BYTE PTR [edi+0x54],cl
  420a6e:	jmp    0x32a32ec7
  420a73:	or     eax,0x866073d6
  420a78:	jle    0x420a84
  420a7a:	adc    edx,esp
  420a7c:	pop    esp
  420a7d:	mov    ds:0x81498794,eax
  420a82:	xor    DWORD PTR [ebx+0x4],eax
  420a85:	imul   edx,DWORD PTR [esi+0x20],0xffffffe7
  420a89:	jbe    0x420af0
  420a8b:	inc    esi
  420a8c:	fs test eax,0x1d44dceb
  420a92:	xchg   ebp,eax
  420a93:	in     eax,dx
  420a94:	cmp    al,0xe
  420a96:	inc    eax
  420a98:	fsub   DWORD PTR [esi]
  420a9a:	or     ah,0xca
  420a9d:	stc    
  420a9e:	pop    esi
  420a9f:	in     al,0xae
  420aa1:	jb     0x420ade
  420aa3:	xor    al,0x67
  420aa5:	loopne 0x420a3d
  420aa7:	or     ebx,DWORD PTR [ebp+eax*2+0x5e3881da]
  420aae:	sub    cl,0x20
  420ab1:	je     0x420b09
  420ab3:	cmp    BYTE PTR [esi+0x64],0xb6
  420ab7:	mov    edi,0x517dc1cc
  420abc:	in     eax,dx
  420abd:	add    BYTE PTR [eax+0x45],0x69
  420ac1:	pop    es
  420ac2:	mov    cl,0x5a
  420ac4:	pop    ecx
  420ac5:	sbb    ebx,eax
  420ac7:	jno    0x420b3a
  420ac9:	lock data16 jp 0x420a62
  420acd:	mov    bl,0x86
  420acf:	xor    eax,0x3edccbc4
  420ad4:	pop    ecx
  420ad5:	out    0x96,al
  420ad7:	mov    al,gs:0xc094db92
  420add:	mov    ch,0x36
  420adf:	push   esi
  420ae0:	jne    0x420b37
  420ae2:	cmp    eax,0x99510387
  420ae7:	inc    edi
  420ae8:	mov    DWORD PTR fs:[ecx-0x334590f2],esp
  420aef:	and    ecx,DWORD PTR [ebp+edi*2-0x1e]
  420af3:	inc    eax
  420af4:	lock inc edi
  420af6:	out    0x6c,al
  420af8:	stc    
  420af9:	mov    ds:0x23e36172,al
  420afe:	pop    ds
  420aff:	mov    edi,0xadf746dc
  420b04:	cmp    edx,ecx
  420b06:	inc    eax
  420b07:	mov    dl,BYTE PTR [ebp+0x16644e77]
  420b0d:	pop    eax
  420b0e:	pop    ecx
  420b0f:	lods   al,BYTE PTR ds:[esi]
  420b10:	bound  ebx,QWORD PTR es:[ebp+0x3a]
  420b14:	fild   QWORD PTR [edi-0xd81cda7]
  420b1a:	and    al,0x10
  420b1c:	xor    eax,0x12760691
  420b21:	cli    
  420b22:	es sahf 
  420b24:	in     eax,dx
  420b25:	xor    BYTE PTR [esi-0x2c378c67],bl
  420b2b:	test   DWORD PTR [edi+eiz*1-0x7e],esi
  420b2f:	adc    BYTE PTR [edi+0x23b04262],0xe9
  420b36:	daa    
  420b37:	call   0x2f15:0x84f8485c
  420b3e:	shl    DWORD PTR [esp+eiz*8-0x667326f9],1
  420b45:	ja     0x420b2a
  420b47:	xchg   esi,eax
  420b48:	mov    cl,0x26
  420b4a:	pusha  
  420b4b:	shl    DWORD PTR [ecx],cl
  420b4d:	iret   
  420b4e:	imul   ecx,ebx,0x539405a1
  420b54:	mov    eax,ds:0x98aef306
  420b59:	sbb    DWORD PTR [ebp+0x7c8b62e5],esi
  420b5f:	mov    gs,ebx
  420b61:	es ds mov bh,0x8d
  420b65:	dec    esi
  420b66:	call   0xcaa1:0x69cdce11
  420b6d:	es inc ebx
  420b6f:	in     al,0xb7
  420b71:	push   esp
  420b72:	jmp    0x420ba5
  420b74:	retf   
  420b75:	jno    0x420b1c
  420b77:	in     al,dx
  420b78:	mov    bl,0xa2
  420b7a:	clc    
  420b7b:	sub    al,0x53
  420b7d:	dec    ecx
  420b7e:	push   ecx
  420b7f:	sub    BYTE PTR [edx],bh
  420b81:	dec    ecx
  420b82:	nop
  420b83:	pop    edx
  420b84:	push   0x34470c1f
  420b89:	mov    bh,0x60
  420b8b:	retf   0x4b88
  420b8e:	out    dx,al
  420b8f:	mov    dl,0xdd
  420b91:	sti    
  420b92:	xchg   ecx,eax
  420b93:	jbe    0x420bed
  420b95:	push   ecx
  420b96:	push   es
  420b97:	jle    0x420b1d
  420b99:	xor    DWORD PTR [ebp-0x1441e11e],edi
  420b9f:	and    al,0x45
  420ba1:	pop    ebp
  420ba2:	dec    ecx
  420ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ba4:	mov    bl,0xf5
  420ba6:	xchg   DWORD PTR [esi-0x30d25d89],esi
  420bac:	jbe    0x420b4a
  420bae:	push   eax
  420baf:	test   BYTE PTR [edx],bl
  420bb1:	sub    al,0xfa
  420bb3:	cdq    
  420bb4:	and    eax,0xf15b7377
  420bb9:	push   ecx
  420bba:	lock outs dx,BYTE PTR ds:[esi]
  420bbc:	pop    ss
  420bbd:	out    dx,al
  420bbe:	inc    edi
  420bbf:	mov    ebp,0xb67d4b51
  420bc4:	pop    es
  420bc5:	mov    edx,0xc61abc6a
  420bca:	frstor [edx+0x2c]
  420bcd:	jl     0x420b6c
  420bcf:	mov    al,0x24
  420bd1:	or     al,0x36
  420bd3:	enter  0x694c,0xf
  420bd7:	mov    ebp,0xe55b2ef8
  420bdc:	pop    ebp
  420bdd:	sub    dh,ch
  420bdf:	js     0x420b80
  420be1:	push   edi
  420be2:	mov    cl,0x6b
  420be4:	ds scas al,BYTE PTR es:[edi]
  420be6:	jmp    FWORD PTR [esi-0x2b]
  420be9:	sub    eax,0x2c75eb3f
  420bee:	ret    0xff13
  420bf1:	enter  0x8221,0x19
  420bf5:	dec    ebp
  420bf6:	sbb    eax,0x42748167
  420bfb:	fcmovu st,st(3)
  420bfd:	sahf   
  420bfe:	fucomi st,st(0)
  420c00:	add    al,0x7
  420c02:	cmp    esi,DWORD PTR [ecx-0x1c00c491]
  420c08:	je     0x420ba2
  420c0a:	test   DWORD PTR [esi+0x461f01a8],ebp
  420c10:	pop    eax
  420c11:	fwait
  420c12:	push   ebp
  420c13:	test   BYTE PTR [edx],0x9e
  420c16:	dec    esi
  420c17:	mov    ebp,0x52b2f9ce
  420c1c:	scas   eax,DWORD PTR es:[edi]
  420c1d:	aaa    
  420c1e:	aad    0x90
  420c20:	pop    ecx
  420c21:	or     BYTE PTR [ecx-0xd],dl
  420c24:	mov    ebx,0x8ff9fa93
  420c29:	rcr    BYTE PTR [edi+edi*4],cl
  420c2c:	data16 xchg BYTE PTR [esi+0x28],dl
  420c30:	pop    esi
  420c31:	mov    ebx,0xd35c7fea
  420c36:	pop    ds
  420c37:	or     BYTE PTR [ebx+ebx*4-0x7d3d089f],dl
  420c3e:	daa    
  420c3f:	sti    
  420c40:	and    BYTE PTR [esi-0x18],ch
  420c43:	ret    
  420c44:	pushf  
  420c45:	fst    QWORD PTR [edx+0x415d3780]
  420c4b:	dec    esp
  420c4c:	fadd   DWORD PTR [esp+edx*2]
  420c4f:	int3   
  420c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c51:	retf   
  420c52:	cmc    
  420c53:	xchg   ecx,eax
  420c54:	push   ebx
  420c55:	cmovg  ebp,DWORD PTR ds:0xbfafbb63
  420c5c:	cmc    
  420c5d:	push   0xb140c8a7
  420c62:	shr    DWORD PTR [esi],1
  420c64:	xor    BYTE PTR [ecx+0x27caf4f1],ah
  420c6a:	xchg   esp,eax
  420c6b:	adc    eax,ebp
  420c6d:	xor    dh,BYTE PTR [ebp-0x6bcc21c8]
  420c73:	clc    
  420c74:	xlat   BYTE PTR ds:[ebx]
  420c75:	or     al,0xc
  420c77:	data16 int3 
  420c79:	pushf  
  420c7a:	ret    
  420c7b:	call   0x2842:0x19ca8478
  420c82:	sbb    eax,DWORD PTR [edx+0x3279d3d8]
  420c88:	pop    ss
  420c89:	sub    eax,0xc1a5da79
  420c8e:	adc    dl,ch
  420c90:	jb     0x420c4f
  420c92:	add    eax,0x126f6e2b
  420c97:	bound  ebx,QWORD PTR [esi-0x76500cfd]
  420c9d:	gs jp  0x420c64
  420ca0:	dec    ecx
  420ca1:	(bad)  
  420ca2:	cmp    edx,edi
  420ca4:	xchg   ebx,eax
  420ca5:	jnp    0x420c5e
  420ca7:	jo     0x420cdb
  420ca9:	mov    BYTE PTR [esi],0xc
  420cac:	imul   esi,DWORD PTR [ecx-0x3e02a715],0x4e
  420cb3:	jp     0x420cd2
  420cb5:	ds dec esi
  420cb7:	leave  
  420cb8:	dec    ebp
  420cb9:	xchg   ecx,eax
  420cba:	pop    eax
  420cbb:	sub    al,ch
  420cbd:	sbb    DWORD PTR [ebx+0x2c],ebx
  420cc0:	dec    edi
  420cc1:	xlat   BYTE PTR ds:[ebx]
  420cc2:	and    DWORD PTR cs:[ebp-0x40],esp
  420cc6:	xor    ebp,DWORD PTR [eax]
  420cc8:	mov    cl,0xad
  420cca:	loopne 0x420d15
  420ccc:	inc    esp
  420ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cce:	inc    ebx
  420ccf:	pop    ds
  420cd0:	dec    eax
  420cd1:	fmul   DWORD PTR [ebp-0x52316300]
  420cd7:	cmp    BYTE PTR [edi+eax*2],cl
  420cda:	mov    ds:0x2a699c4d,al
  420cdf:	sub    bl,ah
  420ce1:	jmp    0x420d3b
  420ce3:	sbb    eax,0xddcfede8
  420ce8:	or     DWORD PTR [edi-0x5932f27b],ecx
  420cee:	jecxz  0x420cc9
  420cf0:	xor    al,0xa3
  420cf2:	stos   DWORD PTR es:[edi],eax
  420cf3:	sbb    eax,0x260a2820
  420cf8:	(bad)
  420cfb:	cmp    ebx,ebp
  420cfd:	mov    ss,WORD PTR [eax]
  420cff:	add    DWORD PTR gs:[esi-0x477e9cc0],0x725d5d2a
  420d0a:	sub    dl,BYTE PTR [edx]
  420d0c:	ins    DWORD PTR es:[edi],dx
  420d0d:	xchg   ecx,eax
  420d0e:	unpckhps xmm6,XMMWORD PTR [edx+0x39]
  420d12:	jmp    0x4487:0xa3fb5373
  420d19:	pushf  
  420d1a:	dec    ecx
  420d1b:	lds    ebx,FWORD PTR [eax+ebp*4-0x66]
  420d1f:	adc    BYTE PTR [ebx-0x2b],cl
  420d22:	sar    bl,1
  420d24:	nop
  420d25:	jge    0x420d56
  420d27:	xchg   DWORD PTR [esi],ebx
  420d29:	shr    DWORD PTR [edi],1
  420d2b:	cmp    eax,0x60906ab1
  420d30:	fidiv  DWORD PTR [edx-0x2a8120b6]
  420d36:	cwde   
  420d37:	and    esp,edi
  420d39:	inc    edx
  420d3a:	sahf   
  420d3b:	scas   al,BYTE PTR es:[edi]
  420d3c:	pop    edi
  420d3d:	ins    DWORD PTR es:[edi],dx
  420d3e:	fs popf 
  420d40:	inc    esi
  420d41:	repnz add al,0x95
  420d44:	sbb    esp,esi
  420d46:	sub    al,0xf3
  420d48:	ret    
  420d49:	cli    
  420d4a:	and    al,0x11
  420d4c:	jno    0x420cfc
  420d4e:	es pushf 
  420d50:	push   cs
  420d51:	ret    
  420d52:	pop    ds
  420d53:	push   0x703ae87e
  420d58:	std    
  420d59:	mov    eax,0xf63d4354
  420d5e:	and    ch,bl
  420d60:	adc    BYTE PTR [edx],0x51
  420d63:	out    dx,eax
  420d64:	add    esi,DWORD PTR [ebp-0x2abccfd1]
  420d6a:	gs push ds
  420d6c:	or     ebx,DWORD PTR [eax-0x1d]
  420d6f:	mov    WORD PTR [eax],es
  420d71:	lock iret 
  420d73:	test   BYTE PTR [edx],bl
  420d75:	inc    edi
  420d76:	jmp    0x5eb0e274
  420d7b:	jecxz  0x420d16
  420d7d:	bnd call 0xb7483884
  420d83:	rol    BYTE PTR [ebx],0xa5
  420d86:	inc    esp
  420d87:	and    ecx,DWORD PTR [eax-0x36]
  420d8a:	(bad)  
  420d8b:	leave  
  420d8c:	aaa    
  420d8d:	call   0x1d66:0x72fb8eba
  420d94:	pop    ebx
  420d95:	mov    ebx,eax
  420d97:	test   DWORD PTR [edi+ebx*2+0x440f7aa0],esp
  420d9e:	popa   
  420d9f:	std    
  420da0:	(bad)  
  420da1:	repnz pop ebp
  420da3:	jecxz  0x420dbc
  420da5:	and    eax,0x3ade61a3
  420daa:	xchg   edi,eax
  420dab:	cmp    BYTE PTR [esi-0xe],0x1e
  420daf:	rcl    DWORD PTR [eax-0x2e],1
  420db2:	xor    esi,edx
  420db4:	inc    edi
  420db5:	aam    0x31
  420db7:	pop    esp
  420db8:	and    eax,DWORD PTR ds:0xab3e2a4a
  420dbe:	popf   
  420dbf:	ret    
  420dc0:	sub    eax,0x8a9ee860
  420dc5:	sub    esi,0x66
  420dc8:	scas   al,BYTE PTR es:[edi]
  420dc9:	out    0xa,eax
  420dcb:	enter  0x7c3a,0xe7
  420dcf:	dec    ebx
  420dd0:	daa    
  420dd1:	cwde   
  420dd2:	retf   0xc13e
  420dd5:	in     al,0x2d
  420dd7:	xor    BYTE PTR [edi+0x3e398e2d],cl
  420ddd:	push   eax
  420dde:	sbb    bl,ch
  420de0:	enter  0x2bd1,0x49
  420de4:	es and al,0x4f
  420de7:	and    bh,BYTE PTR [edi-0x15]
  420dea:	lock mov esp,ss
  420ded:	test   al,0xed
  420def:	ins    DWORD PTR es:[edi],dx
  420df0:	pop    ebp
  420df1:	int3   
  420df2:	cmc    
  420df3:	loope  0x420db0
  420df5:	mov    ah,0xc5
  420df7:	es (bad) 
  420df9:	xor    al,0x3b
  420dfb:	inc    DWORD PTR [edx]
  420dfd:	sti    
  420dfe:	fimul  DWORD PTR [eax+0x24]
  420e01:	pop    esi
  420e02:	fstp   QWORD PTR [ecx]
  420e04:	inc    ecx
  420e05:	bound  edi,QWORD PTR [esi]
  420e07:	mov    ah,0xad
  420e09:	test   DWORD PTR [ecx-0x6a],0x949987dd
  420e10:	pop    ebx
  420e11:	or     ch,ah
  420e13:	sub    BYTE PTR [eax-0x39169039],dh
  420e19:	mov    ch,0xc3
  420e1b:	jp     0x420dd8
  420e1d:	cmp    al,0x38
  420e1f:	pusha  
  420e20:	mov    ebx,0xd871d51f
  420e25:	out    0x4e,eax
  420e27:	pop    edi
  420e28:	imul   ebx,DWORD PTR [edx-0x1fefb00e],0x5a
  420e2f:	imul   edi,DWORD PTR [esi],0xf4e7b9f8
  420e35:	mov    ebp,0x21f5a28c
  420e3a:	dec    ebp
  420e3b:	jns    0x420e74
  420e3d:	int    0x4c
  420e3f:	popf   
  420e40:	mov    eax,ds:0x35f3ea7
  420e45:	call   edx
  420e47:	in     al,dx
  420e48:	jl     0x420df1
  420e4a:	repz mov ch,BYTE PTR [esi+0x4]
  420e4e:	dec    ebx
  420e4f:	dec    ecx
  420e50:	dec    ebp
  420e51:	into   
  420e52:	test   al,0x7a
  420e54:	dec    ebp
  420e55:	icebp  
  420e56:	dec    eax
  420e57:	cwde   
  420e58:	sub    BYTE PTR [ebx+0x35],0xb0
  420e5c:	adc    al,0xc
  420e5e:	cmc    
  420e5f:	push   ds
  420e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e61:	test   DWORD PTR [ebp-0x41882f67],esi
  420e67:	mov    edi,0xdfc55e14
  420e6c:	push   eax
  420e6d:	mov    dl,0x6a
  420e6f:	sbb    eax,0xb38d3cdb
  420e74:	sahf   
  420e75:	dec    BYTE PTR [esi]
  420e77:	mov    DWORD PTR [esi+esi*2+0x53772c27],ebx
  420e7e:	and    BYTE PTR [edx+0xa],bh
  420e81:	add    edi,DWORD PTR gs:[esi+0x31f4db56]
  420e88:	fidiv  DWORD PTR [edi+eiz*8-0x5e7fc58c]
  420e8f:	add    ah,cl
  420e91:	xor    eax,0xe4f839b2
  420e96:	pop    ecx
  420e97:	pop    es
  420e98:	gs push eax
  420e9a:	xor    bh,0x87
  420e9d:	retf   0xf9de
  420ea0:	(bad)  
  420ea1:	xchg   edx,eax
  420ea2:	cli    
  420ea3:	inc    eax
  420ea4:	jne    0x420f12
  420ea6:	sub    BYTE PTR es:[edi+0x6e],bh
  420eaa:	or     bl,al
  420eac:	mov    dh,BYTE PTR [ecx]
  420eae:	cmp    eax,0x9e6f1630
  420eb3:	mov    dl,0x4e
  420eb5:	(bad)  
  420eb6:	lea    ebp,[ebp-0x5375ae8f]
  420ebc:	and    al,0x75
  420ebe:	rcr    cl,cl
  420ec0:	push   ss
  420ec1:	lahf   
  420ec2:	test   DWORD PTR [edx],0x17d76287
  420ec8:	ret    0xc529
  420ecb:	retf   
  420ecc:	mov    BYTE PTR [eax],bl
  420ece:	push   ebp
  420ecf:	push   esp
  420ed0:	fs add eax,0x2c5f47e2
  420ed6:	and    DWORD PTR [eax-0x65],edi
  420ed9:	dec    ebp
  420eda:	adc    ebp,ecx
  420edc:	sub    ebx,DWORD PTR [eax]
  420ede:	jecxz  0x420f03
  420ee0:	fdiv   st(4),st
  420ee2:	(bad)  
  420ee4:	and    esp,edx
  420ee6:	add    eax,0x2d3a080b
  420eeb:	xchg   BYTE PTR ds:0xcd33389,bh
  420ef1:	jecxz  0x420f40
  420ef3:	test   DWORD PTR [edx-0x1],esi
  420ef6:	int    0x5a
  420ef8:	fs stos BYTE PTR es:[edi],al
  420efa:	frstor [ebx+0x20]
  420efd:	daa    
  420efe:	fcmovne st,st(3)
  420f00:	cdq    
  420f01:	frstpm(287 only) 
  420f03:	inc    edi
  420f04:	mov    esp,0x45d2419f
  420f09:	sbb    DWORD PTR [esi-0x25b9b3bc],esp
  420f0f:	or     eax,0xa360625e
  420f14:	aam    0x47
  420f16:	jecxz  0x420eef
  420f18:	pop    ebx
  420f19:	jmp    0x420ee1
  420f1b:	sti    
  420f1c:	dec    DWORD PTR [ebx+edi*4+0x44]
  420f20:	pushf  
  420f21:	pop    ecx
  420f22:	(bad)  
  420f23:	push   ebp
  420f24:	mov    bh,0x23
  420f26:	fnstenv [eax]
  420f28:	inc    edi
  420f29:	call   0xe6009726
  420f2e:	or     ebx,DWORD PTR [eax+esi*1]
  420f31:	xchg   BYTE PTR [esi+0x77031dde],ah
  420f37:	sub    cl,BYTE PTR [edx]
  420f39:	jbe    0x420ec8
  420f3b:	push   es
  420f3c:	jb     0x420f21
  420f3e:	dec    ecx
  420f3f:	adc    cl,BYTE PTR [ebx+0x4570ecdb]
  420f45:	push   ecx
  420f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f47:	dec    ebp
  420f48:	addr16 add dh,cl
  420f4b:	xchg   ecx,eax
  420f4c:	inc    ebx
  420f4d:	jnp    0x420f30
  420f4f:	xor    cl,BYTE PTR [ebx+0x158ce258]
  420f55:	sbb    BYTE PTR [ecx-0x44],0x16
  420f59:	dec    edx
  420f5a:	inc    esp
  420f5b:	cli    
  420f5c:	popf   
  420f5d:	pop    ebp
  420f5e:	fist   WORD PTR [edx]
  420f60:	inc    ecx
  420f61:	ja     0x420fce
  420f63:	sbb    eax,0xeb02ca00
  420f68:	push   ss
  420f69:	test   eax,0x58db289a
  420f6e:	les    ebp,FWORD PTR [ebx+edi*2]
  420f71:	dec    edx
  420f72:	jo     0x420f04
  420f74:	inc    ebx
  420f75:	mov    bl,BYTE PTR [edx-0x4566f2aa]
  420f7b:	(bad)  
  420f7c:	push   eax
  420f7d:	push   0xee8bf66
  420f82:	jl     0x420f63
  420f84:	sub    al,0x9c
  420f86:	es push edx
  420f88:	mov    esp,0xe72cab4d
  420f8d:	push   ecx
  420f8e:	sub    eax,0x97bd2147
  420f93:	test   al,0x4e
  420f95:	xor    DWORD PTR [edx],0xfbb2896a
  420f9b:	inc    ecx
  420f9c:	sbb    BYTE PTR [ebx],dl
  420f9e:	jb     0x420fc2
  420fa0:	sbb    ecx,DWORD PTR [ebx-0x49]
  420fa3:	add    al,0x22
  420fa5:	mov    ebp,0xdc3310be
  420faa:	fidivr DWORD PTR [ebp+0x25]
  420fad:	jne    0x421018
  420faf:	fstp   st(5)
  420fb1:	jmp    0x420fbf
  420fb3:	imul   DWORD PTR [esi+0x68ec2d3b]
  420fb9:	call   0xdbba:0xd983d67b
  420fc0:	xchg   ecx,eax
  420fc1:	add    bh,BYTE PTR [ebx+0x75]
  420fc4:	push   edx
  420fc5:	in     eax,dx
  420fc6:	in     al,0xac
  420fc8:	sub    DWORD PTR [ecx+0x74],ecx
  420fcb:	popa   
  420fcc:	repz pusha 
  420fce:	inc    esi
  420fcf:	xchg   ebp,eax
  420fd0:	xor    DWORD PTR [ebp+0x6a],esi
  420fd3:	mov    BYTE PTR [esi],bl
  420fd5:	aaa    
  420fd6:	inc    eax
  420fd7:	pushf  
  420fd8:	(bad)  
  420fda:	data16 mov al,BYTE PTR [ecx]
  420fdd:	enter  0x35,0x3e
  420fe1:	mov    ds:0x6d782528,eax
  420fe6:	imul   ebp,eax,0xffffffed
  420fe9:	push   cs
  420fea:	into   
  420feb:	push   ebp
  420fec:	test   esi,ebx
  420fee:	call   0x7b18144f
  420ff3:	sbb    ah,BYTE PTR [edi+0x4fb39e40]
  420ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ffa:	or     BYTE PTR [ecx-0x22465b9d],bl
  421000:	fcmovb st,st(0)
  421002:	(bad)  
  421003:	aas    
  421004:	bound  ecx,QWORD PTR [ebx+0x6e]
  421007:	jno    0x42100a
  421009:	(bad)  
  42100a:	in     al,dx
  42100b:	mov    BYTE PTR [ebx],bh
  42100d:	jg     0x420fb1
  42100f:	(bad)  
  421010:	or     cl,BYTE PTR [edx-0x50838797]
  421016:	xchg   edx,eax
  421017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421018:	das    
  421019:	mov    dl,0x5c
  42101b:	(bad)  
  42101c:	jg     0x42104b
  42101e:	xchg   BYTE PTR [esi],ch
  421020:	fldenv [ecx-0x73e000a3]
  421026:	add    al,0xcb
  421028:	in     al,0xe1
  42102a:	imul   edx
  42102c:	xor    eax,0x94ac42e2
  421031:	sbb    al,0xb8
  421033:	pop    ecx
  421034:	retf   0xd032
  421037:	jne    0x420fe9
  421039:	(bad)  
  42103a:	shr    DWORD PTR [ecx+0xd],cl
  42103d:	cmp    ebp,DWORD PTR [edx+eax*4+0x7b]
  421041:	retf   0x9bff
  421044:	mov    al,0xb
  421046:	mov    dl,BYTE PTR [edx+0x45]
  421049:	retf   
  42104a:	jno    0x420fed
  42104c:	mov    eax,0x297436cd
  421051:	cld    
  421052:	in     eax,dx
  421053:	mov    dl,0x96
  421055:	mov    eax,0x2c329cd5
  42105a:	dec    edi
  42105b:	jp     0x420fe1
  42105d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42105e:	loop   0x4210a0
  421060:	xor    BYTE PTR [ebp+eiz*2-0x57],0x66
  421065:	ret    
  421066:	fnstcw WORD PTR [esi+0x21]
  421069:	lods   al,BYTE PTR ds:[esi]
  42106a:	pop    ds
  42106b:	push   cs
  42106c:	pop    eax
  42106d:	inc    esi
  42106e:	xchg   edx,eax
  42106f:	inc    ebx
  421070:	xchg   ebx,eax
  421071:	jne    0x421025
  421073:	arpl   bx,bp
  421075:	aam    0xbb
  421077:	lahf   
  421078:	xchg   esi,eax
  421079:	addr16 pop ecx
  42107b:	jbe    0x42106a
  42107d:	fsubr  QWORD PTR [ebp-0x64a4976c]
  421083:	mov    ebx,0x7f17fb1f
  421088:	ins    DWORD PTR es:[edi],dx
  421089:	(bad)  
  42108a:	jae    0x421064
  42108c:	fwait
  42108d:	test   al,0x21
  42108f:	stc    
  421090:	lock sbb al,0x75
  421093:	dec    ebx
  421094:	ins    DWORD PTR es:[edi],dx
  421095:	mul    DWORD PTR [eax]
  421097:	jle    0x42108d
  421099:	not    cl
  42109b:	jl     0x421059
  42109d:	hlt    
  42109e:	mov    esi,0xf3b514e3
  4210a3:	fidivr DWORD PTR [ebp-0x3b9e469e]
  4210a9:	or     BYTE PTR [edx+0x2c],al
  4210ac:	adc    DWORD PTR [edx],0x36
  4210af:	pop    esi
  4210b0:	pop    esi
  4210b1:	xor    edx,DWORD PTR [ebp-0x5844075]
  4210b7:	ss push ebp
  4210b9:	mov    ebp,0x75ceae54
  4210be:	enter  0x2455,0xad
  4210c2:	mov    ds:0x6bab6f0f,eax
  4210c7:	sub    BYTE PTR [ebx],0xcd
  4210ca:	dec    edi
  4210cb:	call   0x47d9:0x94a74763
  4210d2:	pop    ebp
  4210d3:	cdq    
  4210d4:	mov    al,0xc0
  4210d6:	dec    esp
  4210d7:	out    0xf9,al
  4210d9:	or     esp,DWORD PTR [esi-0x384acb1b]
  4210df:	and    ebp,DWORD PTR [ebp+0xc]
  4210e2:	xor    al,0x56
  4210e4:	cmp    al,0x70
  4210e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210e7:	lock call 0x8baba45d
  4210ed:	imul   ebx,DWORD PTR [ebx+0x4f58abf9],0x756c6c8f
  4210f7:	not    BYTE PTR [ecx+edi*8-0x1670acbd]
  4210fe:	fsub   DWORD PTR [ebx-0x69cbcae9]
  421104:	adc    bh,bh
  421106:	loope  0x421165
  421108:	push   ebx
  421109:	leave  
  42110a:	ins    DWORD PTR es:[edi],dx
  42110b:	mov    BYTE PTR [ecx+esi*2+0xd4b1243],ah
  421112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421113:	mov    esi,DWORD PTR [eax-0x1ebb52c]
  421119:	cmp    dh,dh
  42111b:	mov    eax,0x95935565
  421120:	cmp    eax,0xaec179d0
  421125:	data16 sub BYTE PTR [esi+0x5],ah
  421129:	retf   
  42112a:	or     eax,0xc2b080b4
  42112f:	loopne 0x421185
  421131:	mov    eax,0xcf17c7bf
  421136:	mov    BYTE PTR [esi],al
  421138:	enter  0xae0c,0x13
  42113c:	adc    eax,0x1da3dcd0
  421141:	add    ch,BYTE PTR [esi+ebp*2+0x5e]
  421145:	and    ecx,ebp
  421147:	jge    0x421124
  421149:	xor    edi,DWORD PTR [edi+0x33]
  42114c:	adc    eax,0x59911b
  421151:	or     BYTE PTR [ecx],0xc7
  421154:	sbb    bh,BYTE PTR ds:0xad52c322
  42115a:	mov    DWORD PTR [eax-0x53],ebp
  42115d:	xchg   esp,eax
  42115e:	ins    DWORD PTR es:[edi],dx
  42115f:	test   BYTE PTR [ecx],al
  421161:	push   cs
  421162:	adc    ah,ch
  421164:	fucomi st,st(7)
  421166:	out    0xa0,eax
  421168:	clc    
  421169:	xchg   esi,eax
  42116a:	fs xchg esp,eax
  42116c:	pop    ebx
  42116d:	loope  0x4210f2
  42116f:	fist   DWORD PTR [edx+0x7c]
  421172:	and    bh,bl
  421174:	or     ch,BYTE PTR [esi+ecx*8+0x44c8ab81]
  42117b:	ins    DWORD PTR es:[edi],dx
  42117c:	nop
  42117d:	loop   0x4211bf
  42117f:	cmp    DWORD PTR [esp+eiz*4+0x79],edx
  421183:	jbe    0x4211b6
  421185:	mov    edi,0x9fe177d1
  42118a:	sbb    DWORD PTR [ebx+ebx*1],esi
  42118d:	push   esi
  42118e:	mov    eax,0xe1e1d276
  421193:	call   0x2ea72f2c
  421198:	mov    ah,0xaa
  42119a:	sub    DWORD PTR [ebx],edi
  42119c:	xchg   edx,eax
  42119d:	pushf  
  42119e:	inc    edi
  42119f:	ret    0xbaf1
  4211a2:	(bad)  
  4211a3:	je     0x4211d8
  4211a5:	jnp    0x421203
  4211a7:	int3   
  4211a8:	nop
  4211a9:	pop    es
  4211aa:	out    dx,al
  4211ab:	sub    BYTE PTR [edx-0x29399674],bl
  4211b1:	jnp    0x4211b1
  4211b3:	adc    BYTE PTR ds:0xfb2cb2eb,dl
  4211b9:	sbb    al,0x4f
  4211bb:	fist   WORD PTR [esi+0xb]
  4211be:	bound  edx,QWORD PTR [ebp+0x7db938f9]
  4211c4:	pusha  
  4211c5:	cmc    
  4211c6:	mov    ah,BYTE PTR [ecx]
  4211c8:	jl     0x421175
  4211ca:	and    al,0x9c
  4211cc:	adc    DWORD PTR [edx],edi
  4211ce:	retf   
  4211cf:	popf   
  4211d0:	call   0x29534203
  4211d5:	pop    eax
  4211d6:	fcom   QWORD PTR [edx-0x76e1c7ba]
  4211dc:	and    DWORD PTR [ecx],esp
  4211de:	mov    dl,0x32
  4211e0:	in     al,0x40
  4211e2:	xchg   bp,ax
  4211e4:	pop    edx
  4211e5:	arpl   WORD PTR [ebp-0x40ad37ea],di
  4211eb:	push   ebx
  4211ec:	int    0x13
  4211ee:	xchg   esp,eax
  4211ef:	aam    0xaf
  4211f1:	not    esi
  4211f3:	icebp  
  4211f4:	mov    ebx,DWORD PTR [ecx-0x67fabb37]
  4211fa:	jg     0x421210
  4211fc:	jge    0x42125a
  4211fe:	mov    edi,0xfbea67bb
  421203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421204:	inc    esi
  421205:	cmp    bl,BYTE PTR [ecx]
  421207:	push   eax
  421208:	jg     0x4211f6
  42120a:	cld    
  42120b:	pop    es
  42120c:	inc    edx
  42120d:	cmp    dl,al
  42120f:	ffreep st(2)
  421211:	jle    0x42119f
  421213:	and    DWORD PTR [esi-0x3a],esp
  421216:	in     al,0x9d
  421218:	inc    edi
  421219:	mov    DWORD PTR [eax],esp
  42121b:	mov    ebx,0x1207e7ac
  421220:	fsub   st(3),st
  421222:	xchg   esp,eax
  421223:	imul   edi,edi,0xffffffb0
  421226:	ins    DWORD PTR es:[edi],dx
  421227:	or     edi,DWORD PTR [ebx+0x1498f539]
  42122d:	mov    DWORD PTR [ebp-0x3982fecc],0xde7b3000
  421237:	mov    ds:0x13f7acee,eax
  42123c:	mov    edx,0x311fe4ca
  421241:	sub    al,0x68
  421243:	jae    0x421272
  421245:	leave  
  421246:	dec    esi
  421247:	jge    0x421206
  421249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42124a:	adc    esi,DWORD PTR gs:[edx-0xd]
  42124e:	jae    0x421206
  421250:	push   edx
  421251:	fs push cs
  421253:	dec    edx
  421254:	sbb    BYTE PTR [ebx],al
  421256:	sbb    BYTE PTR [edi-0x36287175],dh
  42125c:	lahf   
  42125d:	stos   BYTE PTR es:[edi],al
  42125e:	and    BYTE PTR [edi+0x41],bh
  421261:	in     eax,0x1a
  421263:	mov    cl,0xa8
  421265:	out    dx,eax
  421266:	pop    ds
  421267:	inc    BYTE PTR [esi-0x60]
  42126a:	pop    es
  42126b:	jo     0x4212c2
  42126d:	mov    DWORD PTR [edx-0x31a2ebcc],eax
  421273:	jp     0x42121e
  421275:	xor    ch,dh
  421277:	mov    ecx,?
  421279:	push   edx
  42127a:	jp     0x421213
  42127c:	loop   0x4212a6
  42127e:	(bad)  
  42127f:	retf   0x4610
  421282:	loopne 0x421258
  421284:	cdq    
  421285:	es aam 0xd8
  421288:	push   cs
  421289:	xchg   ebx,eax
  42128a:	nop
  42128b:	and    DWORD PTR [eax-0x35],0x7a
  42128f:	jb     0x4212c4
  421291:	call   0xdc798890
  421296:	fnstenv [ecx-0x7addea8]
  42129c:	cmp    al,0x78
  42129e:	nop
  42129f:	adc    BYTE PTR [edi+esi*4],ch
  4212a2:	adc    ebx,DWORD PTR [ecx]
  4212a4:	cmc    
  4212a5:	out    0x94,al
  4212a7:	jl     0x421310
  4212a9:	ins    DWORD PTR es:[edi],dx
  4212aa:	mov    DWORD PTR [ebp-0x71],0x1f2d28ef
  4212b1:	stos   BYTE PTR es:[edi],al
  4212b2:	icebp  
  4212b3:	push   esi
  4212b4:	or     BYTE PTR [ebx+0xfe6fd38],0xf9
  4212bb:	and    BYTE PTR [esi],cl
  4212bd:	popa   
  4212be:	or     al,0xb5
  4212c0:	mov    ebp,eax
  4212c2:	lods   eax,DWORD PTR ds:[esi]
  4212c3:	dec    esp
  4212c4:	js     0x4212f6
  4212c6:	inc    edi
  4212c7:	and    eax,0x2d8090f6
  4212cc:	add    BYTE PTR [edx-0x459e5cb],cl
  4212d2:	gs repnz inc esi
  4212d5:	cs stos DWORD PTR es:[edi],eax
  4212d7:	pop    ss
  4212d8:	or     edi,DWORD PTR [eax+0x44]
  4212db:	jb     0x42127e
  4212dd:	jl     0x42132a
  4212df:	add    BYTE PTR [edx],0x2b
  4212e2:	mov    esp,0xbcaf669a
  4212e7:	pop    es
  4212e8:	(bad)  
  4212e9:	xor    DWORD PTR [edx],ebp
  4212eb:	arpl   WORD PTR [ebp+0x707e3a6c],dx
  4212f1:	xchg   ebx,eax
  4212f2:	dec    esi
  4212f3:	push   0xeac4b35e
  4212f8:	push   0xffffff9c
  4212fa:	adc    DWORD PTR [ecx],ebp
  4212fc:	(bad)
  421300:	rcl    DWORD PTR [ebx+edi*8-0x72],cl
  421304:	pop    edi
  421305:	data16 mov bl,0xa3
  421308:	mov    ds:0x742d367b,al
  42130d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42130e:	neg    edx
  421310:	inc    BYTE PTR [edi-0x2112f858]
  421316:	repz xlat BYTE PTR ds:[ebx]
  421318:	loopne 0x42131f
  42131a:	jge    0x42138a
  42131c:	jae    0x421311
  42131e:	pop    edx
  42131f:	loopne 0x421392
  421321:	fadd   DWORD PTR [eax-0x67]
  421324:	div    DWORD PTR ds:0xe14a06ca
  42132a:	xchg   ebx,eax
  42132b:	fdivp  st(3),st
  42132d:	imul   ebp,DWORD PTR [esi-0x8],0xffffffb6
  421331:	dec    ecx
  421332:	jg     0x4212bb
  421334:	sub    eax,0xbc93b2a8
  421339:	xor    edx,ebp
  42133b:	push   ebx
  42133c:	pop    ecx
  42133d:	jg     0x42133a
  42133f:	add    eax,0x21473638
  421344:	or     ecx,ebp
  421346:	push   eax
  421347:	inc    ecx
  421348:	mov    edx,0xfecf5f28
  42134d:	mov    WORD PTR [esi],cs
  42134f:	fcom   DWORD PTR [ebp-0xe]
  421352:	inc    edi
  421353:	mov    edx,0x7a027f5a
  421358:	ret    
  421359:	fstp   TBYTE PTR [edi]
  42135b:	sbb    eax,0x7cdbcab
  421360:	shl    DWORD PTR [eax+eax*8],0xac
  421364:	jne    0x4212fb
  421366:	xchg   esi,eax
  421367:	or     DWORD PTR [esi-0x553fc95b],0x30
  42136e:	mov    WORD PTR [edx-0x425ff20c],cs
  421374:	out    dx,eax
  421375:	pop    edi
  421376:	sub    ebp,edx
  421378:	xchg   esi,eax
  421379:	jle    0x42135b
  42137b:	mov    bh,0xae
  42137d:	imul   esp,DWORD PTR [edi+eax*2-0x29],0xfffffff9
  421382:	cmp    DWORD PTR [edi+0x4370674b],esi
  421388:	or     BYTE PTR [ebx+ecx*2],bl
  42138b:	xchg   ebp,eax
  42138c:	inc    eax
  42138d:	loop   0x421353
  42138f:	outs   dx,BYTE PTR ds:[esi]
  421390:	inc    esi
  421391:	mov    ss,WORD PTR [edi]
  421393:	call   0x3b21:0xe3b1438e
  42139a:	cli    
  42139b:	mov    ebp,0xb3d726b2
  4213a0:	repnz push ebp
  4213a2:	or     DWORD PTR [eax+0x6b],edi
  4213a5:	dec    edi
  4213a6:	enter  0x9bce,0x23
  4213aa:	sbb    esi,DWORD PTR [ebx]
  4213ac:	mov    edi,ecx
  4213ae:	xor    eax,0x6cbefd5a
  4213b3:	xchg   esi,eax
  4213b4:	bound  edi,QWORD PTR [ecx+0x6d]
  4213b7:	addr16 mov al,0xe6
  4213ba:	fistp  QWORD PTR [edi+0x73cb5031]
  4213c0:	inc    ecx
  4213c1:	test   eax,0xbdd1e366
  4213c6:	jp     0x42142d
  4213c8:	std    
  4213c9:	or     ebp,DWORD PTR [edi+0x1826b57e]
  4213cf:	cmp    al,al
  4213d1:	sub    al,0x35
  4213d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d4:	ja     0x42140a
  4213d6:	sub    BYTE PTR [edi+0x733baa03],bh
  4213dc:	fstp   TBYTE PTR [eax+0xb]
  4213df:	mov    eax,0x28c120cd
  4213e4:	sub    esp,ebx
  4213e6:	sub    ah,BYTE PTR [ebx-0x5f91dd06]
  4213ec:	leave  
  4213ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ee:	inc    esp
  4213ef:	outs   dx,BYTE PTR ds:[esi]
  4213f0:	das    
  4213f1:	fwait
  4213f2:	dec    esi
  4213f3:	jae    0x4213dc
  4213f5:	icebp  
  4213f6:	mov    ch,0xc9
  4213f8:	in     al,0x82
  4213fa:	fistp  WORD PTR [edx-0x5e]
  4213fd:	push   ecx
  4213fe:	xlat   BYTE PTR ds:[ebx]
  4213ff:	sbb    BYTE PTR [ecx-0x1bf47a8a],dl
  421405:	add    DWORD PTR [ebx+0x4a],ebp
  421408:	cmp    DWORD PTR [eax],0xa88d0688
  42140e:	ficom  WORD PTR ds:0xd0877c2f
  421414:	cmp    BYTE PTR [eax+0x0],bh
  421417:	test   al,0x88
  421419:	mov    al,0xe0
  42141b:	xchg   esp,ebx
  42141d:	sub    al,0x8e
  42141f:	aad    0x26
  421421:	iret   
  421422:	mov    ah,0xb7
  421424:	ins    DWORD PTR es:[edi],dx
  421425:	pop    ss
  421426:	pop    ebp
  421427:	pop    es
  421428:	xchg   ecx,eax
  421429:	(bad)  
  42142a:	in     al,dx
  42142b:	shr    DWORD PTR [esi],cl
  42142d:	sahf   
  42142e:	leave  
  42142f:	and    WORD PTR [edx+esi*1+0x4f],bx
  421434:	int3   
  421435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421436:	pop    ds
  421437:	cmp    BYTE PTR [eax+0x53],0x2e
  42143b:	mov    ah,0xaf
  42143d:	dec    ebx
  42143e:	cwde   
  42143f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421440:	bound  eax,QWORD PTR ds:0x6fa30500
  421446:	pop    esp
  421447:	ds jbe 0x42149e
  42144a:	xchg   esi,eax
  42144b:	mov    ebp,0xa716e305
  421450:	jmp    0x42140d
  421452:	push   ds
  421453:	stc    
  421454:	shl    DWORD PTR [ebp-0x1e6d20cd],cl
  42145a:	mov    ds:0xa47e9dc5,eax
  42145f:	dec    edx
  421460:	lahf   
  421461:	dec    ecx
  421462:	imul   ebp,DWORD PTR [ecx],0xffffffde
  421465:	sub    eax,0xe2965861
  42146a:	jmp    0x6bbd5a2
  42146f:	aas    
  421470:	out    dx,eax
  421471:	sub    ebp,eax
  421473:	jbe    0x421419
  421475:	mov    BYTE PTR [ebx],bh
  421477:	call   0x5246e8ba
  42147c:	jecxz  0x42147e
  42147e:	in     eax,0xc9
  421480:	sahf   
  421481:	sbb    BYTE PTR [ebp-0x70],bl
  421484:	adc    BYTE PTR fs:0xe2cce497,ah
  42148b:	push   0xffffffe6
  42148d:	(bad)  
  42148e:	mov    eax,ds:0x7c0f64fa
  421493:	jge    0x421468
  421495:	dec    edx
  421496:	stos   BYTE PTR es:[edi],al
  421497:	or     al,0x23
  42149a:	out    0xa4,eax
  42149c:	push   esi
  42149d:	(bad)  
  42149e:	loopne 0x4214a6
  4214a0:	xchg   edx,eax
  4214a1:	cmp    eax,0x3b369148
  4214a6:	outs   dx,DWORD PTR ds:[esi]
  4214a7:	cwde   
  4214a8:	dec    esp
  4214a9:	sbb    eax,0xc50e1e49
  4214ae:	(bad)  
  4214af:	and    DWORD PTR [edx+0x6b],edi
  4214b2:	scas   eax,DWORD PTR es:[edi]
  4214b3:	mov    es,WORD PTR [ecx-0x6e9e7c91]
  4214b9:	pop    esp
  4214ba:	pop    edi
  4214bb:	cmc    
  4214bc:	call   0xb7b7:0xb387a6c5
  4214c3:	cmp    DWORD PTR [edx],ebp
  4214c5:	xchg   ebp,eax
  4214c6:	fistp  QWORD PTR [esi+ebx*1-0xf]
  4214ca:	pop    esp
  4214cb:	xchg   esp,eax
  4214cc:	push   ebx
  4214cd:	pop    ebx
  4214ce:	jmp    0x2981d03e
  4214d3:	dec    esp
  4214d4:	or     esp,edx
  4214d6:	pop    ds
  4214d7:	sub    bl,BYTE PTR [eax]
  4214d9:	inc    eax
  4214da:	jo     0x421548
  4214dc:	sub    DWORD PTR [edx-0x49],esp
  4214df:	clc    
  4214e0:	or     dh,BYTE PTR [ebp-0x7e032bb5]
  4214e6:	xchg   esp,eax
  4214e7:	test   BYTE PTR ds:0xde7e35ca,dh
  4214ed:	add    bl,bh
  4214ef:	cmp    ecx,DWORD PTR [esi-0x696b35b9]
  4214f5:	xor    cl,BYTE PTR fs:[ebp-0x10]
  4214f9:	sti    
  4214fa:	je     0x421520
  4214fc:	js     0x421554
  4214fe:	and    al,0x98
  421500:	cmp    al,0xad
  421502:	or     DWORD PTR [ebp+0x77],ebx
  421505:	loopne 0x42151d
  421507:	mov    bh,0x95
  421509:	xchg   ebx,eax
  42150a:	push   ss
  42150b:	stos   DWORD PTR es:[edi],eax
  42150c:	popf   
  42150d:	xchg   edi,eax
  42150e:	mov    ah,0x9e
  421510:	pop    ss
  421511:	xchg   esp,eax
  421512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421513:	fstp   DWORD PTR [ebx+0x37d80ee0]
  421519:	pop    ecx
  42151a:	inc    ebx
  42151b:	mov    bh,0xb4
  42151d:	sar    DWORD PTR [ebx],0x63
  421520:	pop    esp
  421521:	mov    ebp,0x4e6d0e3b
  421526:	pop    ds
  421527:	push   edi
  421528:	(bad)  
  421529:	shl    BYTE PTR [esi-0x78],1
  42152c:	lea    eax,[ebp+ecx*4+0x77]
  421530:	add    DWORD PTR [esi+0x1bf50e0a],ecx
  421536:	sbb    bh,al
  421538:	fnstcw WORD PTR [edx]
  42153a:	and    al,0xd6
  42153c:	adc    ah,cl
  42153e:	mov    bl,0xf9
  421540:	js     0x4214c4
  421542:	ja     0x421556
  421544:	stos   BYTE PTR es:[edi],al
  421545:	ja     0x4214d5
  421547:	dec    esi
  421548:	or     DWORD PTR [edi+edi*4+0x5c0dc2d9],edx
  42154f:	fwait
  421550:	xchg   esp,eax
  421551:	fwait
  421552:	aas    
  421553:	jecxz  0x421506
  421555:	jmp    0x4214fd
  421557:	dec    edx
  421558:	inc    esp
  421559:	sbb    BYTE PTR [edx+0x2c],dh
  42155c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42155d:	aam    0xc8
  42155f:	jo     0x421588
  421561:	jle    0x4215a5
  421563:	imul   eax,DWORD PTR ds:0x123eeae8,0xffffffd5
  42156a:	pop    esp
  42156b:	xchg   BYTE PTR [edi+edx*8-0x58ba2fbf],cl
  421572:	(bad)  
  421573:	mov    ebp,0x86f08bb6
  421578:	and    eax,0x8fc0c5a7
  42157d:	retf   0xab21
  421580:	or     cl,cl
  421582:	pushf  
  421583:	push   ss
  421584:	idiv   DWORD PTR [edx+0x5a6cdcdd]
  42158a:	outs   dx,DWORD PTR ds:[esi]
  42158b:	jmp    DWORD PTR [esi-0x9efb660]
  421591:	int3   
  421592:	push   0x1707563c
  421597:	sahf   
  421598:	cmp    ah,BYTE PTR [edi+0x5b]
  42159b:	xor    BYTE PTR [edx],al
  42159d:	sbb    cl,dh
  42159f:	ds aad 0x64
  4215a2:	sub    bl,BYTE PTR [edx+0x3d]
  4215a5:	je     0x421555
  4215a7:	into   
  4215a8:	sti    
  4215a9:	jg     0x4215e2
  4215ab:	cmp    bl,BYTE PTR ss:[ecx]
  4215ae:	push   0xffffffd8
  4215b0:	inc    ebp
  4215b1:	xor    cl,ah
  4215b3:	or     BYTE PTR [ebx],0x50
  4215b6:	in     al,dx
  4215b7:	fistp  DWORD PTR [esi+edi*8]
  4215ba:	popa   
  4215bb:	rol    DWORD PTR [ecx+ecx*2+0x5c],0xe5
  4215c0:	pop    ds
  4215c1:	lock inc edx
  4215c3:	push   0xeedbfa24
  4215c8:	je     0x42155c
  4215ca:	add    DWORD PTR [esi],edx
  4215cc:	fstp   DWORD PTR [ebx-0x5bdfa870]
  4215d2:	mov    edx,0xd115bb8d
  4215d7:	sub    ecx,eax
  4215d9:	jecxz  0x4215ba
  4215db:	push   esi
  4215dc:	ds leave 
  4215de:	fimul  DWORD PTR [ebp-0x67e6df0d]
  4215e4:	or     dl,BYTE PTR [edx+0x19]
  4215e7:	lods   al,BYTE PTR ds:[esi]
  4215e8:	test   DWORD PTR [edi+0x69d2b621],0x65500d0f
  4215f2:	mov    esi,0x93973f3b
  4215f7:	and    esi,DWORD PTR [eax+eax*1-0x536ba8e8]
  4215fe:	cmp    DWORD PTR ds:[edx+ebx*8],esi
  421602:	push   cs
  421603:	daa    
  421604:	xchg   edi,eax
  421605:	mov    ds:0x221b2725,al
  42160a:	shr    DWORD PTR [esp+eax*4+0x197ff225],1
  421611:	xor    BYTE PTR ds:0x873cc2cf,cl
  421617:	rcl    DWORD PTR [ecx+0x17291d19],0x46
  42161e:	inc    esi
  42161f:	aam    0x35
  421621:	dec    ebp
  421622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421623:	fcmovu st,st(3)
  421625:	je     0x421603
  421627:	or     eax,0xaecc4919
  42162c:	popf   
  42162d:	fisttp QWORD PTR [esi-0x62]
  421630:	fmul   QWORD PTR gs:[ebx]
  421633:	outs   dx,DWORD PTR ds:[esi]
  421634:	add    eax,0x87643e73
  421639:	dec    esi
  42163a:	fdivr  st(7),st
  42163c:	enter  0xbc0,0x11
  421640:	sub    BYTE PTR [eax],0x30
  421643:	sti    
  421644:	fcom   DWORD PTR [ecx]
  421646:	inc    ebp
  421647:	int    0x6b
  421649:	dec    esi
  42164a:	lahf   
  42164b:	mov    esi,0xa14150c4
  421650:	rep outs dx,BYTE PTR ds:[esi]
  421652:	mov    esp,0xcffb9f15
  421657:	out    0xea,eax
  421659:	not    BYTE PTR [ebp+0xd]
  42165c:	data16 shl BYTE PTR [edi],cl
  42165f:	pop    ss
  421660:	popa   
  421661:	fadd   QWORD PTR [edi+0x71]
  421664:	(bad)  
  421665:	cld    
  421666:	adc    ebp,DWORD PTR [ebx-0x4fa4b1]
  42166c:	dec    esp
  42166d:	cwde   
  42166e:	and    eax,edx
  421670:	adc    eax,0x69f51535
  421675:	sbb    ch,bh
  421677:	pop    ebp
  421678:	jle    0x421683
  42167a:	xor    eax,0x868b1222
  42167f:	or     eax,0x695716ae
  421684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421685:	jo     0x42168a
  421687:	lahf   
  421688:	leave  
  421689:	xor    dl,bh
  42168b:	adc    al,0xc
  42168d:	fdiv   DWORD PTR [edi+edx*1-0x502dbd97]
  421694:	ss retf 
  421696:	mov    ebx,0x58780274
  42169b:	inc    esp
  42169c:	xchg   ecx,eax
  42169d:	imul   eax,DWORD PTR [esi],0x59
  4216a0:	aaa    
  4216a1:	or     DWORD PTR [edx+0x71935893],edi
  4216a7:	adc    BYTE PTR [ecx-0x7d],bl
  4216aa:	in     al,dx
  4216ab:	fsub   DWORD PTR [ecx+0xe]
  4216ae:	inc    eax
  4216af:	cmp    al,0xef
  4216b1:	clc    
  4216b2:	and    bh,bl
  4216b4:	sbb    DWORD PTR [esi+0x46165503],edx
  4216ba:	push   0x2f
  4216bc:	inc    esp
  4216bd:	push   0x3f8764a8
  4216c2:	scas   al,BYTE PTR es:[edi]
  4216c3:	inc    ebx
  4216c4:	and    edx,DWORD PTR [edx-0x1715d771]
  4216ca:	mov    ch,0xb4
  4216cc:	cmp    DWORD PTR [eax+0x6fce72fa],ecx
  4216d2:	test   al,0xa9
  4216d4:	ins    BYTE PTR es:[edi],dx
  4216d5:	pushf  
  4216d6:	popf   
  4216d7:	js     0x4216c2
  4216d9:	mov    ds:0xefe4404b,eax
  4216de:	mov    eax,ss
  4216e0:	aam    0x69
  4216e2:	inc    ecx
  4216e3:	cmp    esp,DWORD PTR [ebx+0x3c]
  4216e6:	inc    ebx
  4216e7:	jl     0x4216a1
  4216e9:	jp     0x421673
  4216eb:	out    0xd1,eax
  4216ed:	mov    dl,ah
  4216ef:	xchg   edi,eax
  4216f0:	push   ebx
  4216f1:	lods   eax,DWORD PTR ds:[esi]
  4216f2:	cmp    al,0x46
  4216f4:	ret    0x6c76
  4216f7:	addr16 cwde 
  4216f9:	sahf   
  4216fa:	pop    ss
  4216fb:	jg     0x421749
  4216fd:	jecxz  0x421691
  4216ff:	shr    BYTE PTR [ebx+0x6bcaf299],1
  421705:	ds (bad) 
  421708:	fnstenv [ecx-0x5]
  42170b:	out    0xce,eax
  42170d:	shr    BYTE PTR [eax+0x56],0x90
  421711:	(bad)  
  421712:	xlat   BYTE PTR ds:[ebx]
  421713:	aaa    
  421714:	push   es
  421715:	cli    
  421716:	jecxz  0x4216aa
  421718:	jae    0x42178b
  42171a:	sbb    esp,0xffffffc1
  42171d:	push   0x3838ce39
  421722:	arpl   WORD PTR ds:0x69af13fd,sp
  421728:	pushf  
  421729:	sbb    bl,BYTE PTR [edi+0x68]
  42172c:	or     esi,esi
  42172e:	lock test eax,0x22926f4c
  421734:	std    
  421735:	pop    ebx
  421736:	jmp    0xfc3e252e
  42173b:	pop    ebp
  42173c:	jmp    0x3366:0xf8dba118
  421743:	sub    DWORD PTR [ebp+0x541d3171],edx
  421749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42174a:	enter  0x3b62,0x74
  42174e:	nop
  42174f:	addr16 pop ds
  421751:	dec    edx
  421752:	add    ebp,DWORD PTR [ebx+0x18]
  421755:	xor    ah,dh
  421757:	rol    BYTE PTR [edx+ecx*4],cl
  42175a:	adc    dh,BYTE PTR ds:0x99669a40
  421760:	jo     0x4216f5
  421762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421763:	adc    DWORD PTR [ebp+ecx*2-0x6a59fa89],ecx
  42176a:	leave  
  42176b:	cmc    
  42176c:	mov    ecx,0xcd5c42d8
  421771:	das    
  421772:	mov    cs,WORD PTR [ecx]
  421774:	mov    DWORD PTR [eax+0x3e33ca2b],0xdb9b774c
  42177e:	jle    0x42177b
  421780:	add    ch,BYTE PTR ds:0xa00b9879
  421786:	mov    eax,0x4a9f70e2
  42178b:	jecxz  0x4217f2
  42178d:	sub    dl,0x4f
  421790:	sbb    al,0x67
  421792:	mul    BYTE PTR [edi-0x5d0d8879]
  421798:	ins    DWORD PTR es:[edi],dx
  421799:	or     DWORD PTR [ebp-0x25c0c112],ecx
  42179f:	shl    BYTE PTR [ecx+0x3576c0c2],1
  4217a5:	hlt    
  4217a6:	dec    eax
  4217a7:	es push edx
  4217a9:	cmp    BYTE PTR [edi-0x6363ae03],0x48
  4217b0:	cdq    
  4217b1:	xor    al,0x38
  4217b3:	cdq    
  4217b4:	dec    esp
  4217b5:	sti    
  4217b6:	mov    ah,0xad
  4217b8:	cmp    DWORD PTR [edx+edi*4],eax
  4217bb:	into   
  4217bc:	mov    bl,0x67
  4217be:	push   ebp
  4217bf:	ss pop ecx
  4217c1:	push   edi
  4217c2:	inc    esi
  4217c3:	pop    es
  4217c4:	fadd   QWORD PTR [ecx-0x1bd1ef2e]
  4217ca:	pop    ebp
  4217cb:	inc    ebp
  4217cc:	pop    ebx
  4217cd:	lea    ecx,[edx+0x157736fa]
  4217d3:	xor    ah,al
  4217d5:	scas   eax,DWORD PTR es:[edi]
  4217d6:	inc    edx
  4217d7:	ins    DWORD PTR es:[edi],dx
  4217d8:	adc    edi,ebx
  4217da:	pop    ecx
  4217db:	in     al,dx
  4217dc:	call   0x5f74:0xf7b19bbb
  4217e3:	push   esp
  4217e4:	gs imul esi,esp,0x3a
  4217e8:	pop    edi
  4217e9:	int3   
  4217ea:	add    cl,ch
  4217ec:	data16 sahf 
  4217ee:	jge    0x421796
  4217f0:	ds xchg esi,eax
  4217f2:	dec    esp
  4217f3:	or     BYTE PTR [ebx],dl
  4217f5:	or     eax,0x5ee4f2ec
  4217fa:	push   ecx
  4217fb:	xor    al,0x44
  4217fd:	or     al,0x40
  4217ff:	push   ds
  421800:	adc    BYTE PTR [edi-0x30],ch
  421803:	push   esp
  421804:	dec    esp
  421805:	mov    ds,WORD PTR [esi]
  421807:	lahf   
  421808:	jo     0x4217d1
  42180a:	out    0x8f,al
  42180c:	sub    al,0x60
  42180e:	add    DWORD PTR [edi+edx*8],ebx
  421811:	aad    0xbf
  421813:	add    ah,ah
  421815:	cld    
  421816:	(bad)  
  421817:	aam    0x3e
  421819:	cmp    al,0x10
  42181b:	add    dl,bl
  42181d:	sbb    ch,BYTE PTR [ebx+0x7c296f3b]
  421823:	jl     0x421826
  421825:	mov    dl,0xbe
  421827:	sbb    eax,0x2fff07f5
  42182c:	cmp    esi,DWORD PTR [ebx-0x6cc5d701]
  421832:	mov    bh,0x2b
  421834:	ins    BYTE PTR es:[edi],dx
  421835:	stos   BYTE PTR es:[edi],al
  421836:	pop    ss
  421837:	pop    edi
  421838:	xor    al,0x96
  42183a:	and    eax,DWORD PTR [edi]
  42183c:	stos   BYTE PTR es:[edi],al
  42183d:	mov    esi,0x8e8f9f47
  421842:	mov    cl,0x5c
  421844:	call   0x9305dda3
  421849:	sti    
  42184a:	xchg   edx,eax
  42184b:	adc    DWORD PTR [edx-0x109c7af4],0x3e
  421852:	mov    ecx,0x9ca27623
  421857:	add    BYTE PTR [ebp-0x3d9d7d9a],0xf8
  42185e:	icebp  
  42185f:	pop    esp
  421860:	cli    
  421861:	inc    ebx
  421862:	xchg   ebp,eax
  421863:	xchg   ecx,eax
  421864:	std    
  421865:	ja     0x4218d5
  421867:	push   edi
  421868:	pop    ebx
  421869:	sbb    DWORD PTR [ebp+0x13],edx
  42186c:	stos   DWORD PTR es:[edi],eax
  42186d:	mov    al,ds:0x21580b29
  421872:	pop    ecx
  421873:	xchg   esp,eax
  421874:	xchg   esp,eax
  421875:	mov    edi,DWORD PTR [edi]
  421877:	mov    eax,ds:0x1fde4a34
  42187c:	sub    eax,0xcea36a7f
  421881:	fdiv   DWORD PTR [ebx]
  421883:	mov    ebx,0xc2f6760d
  421888:	mov    dh,0x16
  42188a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42188b:	clc    
  42188c:	test   eax,0xb2f3a22
  421891:	mov    edi,0xa7e80f12
  421896:	aas    
  421897:	dec    ebx
  421898:	and    bl,ah
  42189a:	or     eax,0x3f688faf
  42189f:	jbe    0x4218f8
  4218a1:	adc    ah,cl
  4218a3:	repz call 0x3249:0x9f70c114
  4218ab:	dec    edx
  4218ac:	js     0x421872
  4218ae:	xor    DWORD PTR [ecx],edi
  4218b0:	jae    0x421839
  4218b2:	call   0xa0d776be
  4218b7:	push   0xffffffba
  4218b9:	cmc    
  4218ba:	pop    ebp
  4218bb:	xchg   edi,eax
  4218bc:	in     al,dx
  4218bd:	pop    es
  4218be:	xlat   BYTE PTR ds:[ebx]
  4218bf:	scas   ax,WORD PTR es:[edi]
  4218c1:	out    dx,al
  4218c2:	fdivr  st,st(5)
  4218c4:	scas   eax,DWORD PTR es:[edi]
  4218c5:	test   DWORD PTR [edx+0x2187c18a],eax
  4218cb:	jne    0x421851
  4218cd:	stos   DWORD PTR es:[edi],eax
  4218ce:	sbb    DWORD PTR [ebx+eiz*8+0x37],ebp
  4218d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d3:	(bad)  ds:0x77c1eed9
  4218d9:	sbb    BYTE PTR [ebx-0x100c35a2],dh
  4218df:	imul   ebx,DWORD PTR [edx],0xffffffff
  4218e2:	imul   ebp,DWORD PTR [esi+ebp*2],0x64c2c5be
  4218e9:	xchg   ecx,eax
  4218ea:	push   eax
  4218eb:	jl     0x4218f5
  4218ed:	xchg   ecx,eax
  4218ee:	and    DWORD PTR ds:0xae95fe06,esi
  4218f4:	stos   DWORD PTR es:[edi],eax
  4218f5:	jae    0x4218f0
  4218f7:	mov    al,0xce
  4218f9:	test   eax,0x1a2ba84a
  4218fe:	es das 
  421900:	inc    edi
  421901:	adc    eax,0x3a510d87
  421906:	dec    ecx
  421907:	and    BYTE PTR [edi-0x54],bh
  42190a:	(bad)  [ebx]
  42190c:	mov    ebp,0xbbebc809
  421911:	pop    DWORD PTR [edx-0x20f40c46]
  421917:	and    ebx,DWORD PTR [eax-0x77233c42]
  42191d:	dec    esp
  42191e:	test   ebp,esi
  421920:	add    al,0x9
  421922:	jnp    0x4218f8
  421924:	push   edi
  421925:	test   BYTE PTR [ecx],ch
  421927:	xchg   esp,eax
  421928:	sub    BYTE PTR [ebx-0x3f],al
  42192b:	stc    
  42192c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42192d:	(bad)  
  42192e:	mov    ah,0x91
  421930:	cdq    
  421931:	dec    ebp
  421932:	aaa    
  421933:	inc    ecx
  421934:	pop    ds
  421935:	scas   al,BYTE PTR es:[edi]
  421936:	jns    0x42196f
  421938:	xchg   edx,eax
  421939:	sar    BYTE PTR gs:0xad34250f,1
  421940:	test   edi,edi
  421942:	shl    DWORD PTR [eax+0x85911c1],1
  421948:	ins    BYTE PTR es:[edi],dx
  421949:	push   esi
  42194a:	add    al,al
  42194c:	mov    esp,0x40c75b8
  421951:	adc    DWORD PTR ds:0xff1a086d,esp
  421957:	(bad)  
  421958:	or     BYTE PTR [ebx],0xaa
  42195b:	inc    edi
  42195c:	adc    al,bh
  42195e:	clc    
  42195f:	imul   esi,DWORD PTR [ebp+0x67],0x13
  421963:	lahf   
  421964:	sbb    DWORD PTR [ecx],esp
  421966:	mov    ecx,0xb63e750d
  42196b:	clc    
  42196c:	mov    DWORD PTR [esi],esp
  42196e:	mov    edx,0xd5917d56
  421973:	sbb    ah,dl
  421975:	or     edi,eax
  421977:	push   ecx
  421978:	call   0x8cc51b04
  42197d:	or     al,0x66
  42197f:	xchg   ebp,eax
  421980:	inc    ecx
  421981:	fidivr DWORD PTR [ecx-0x54cff2a2]
  421987:	fiadd  DWORD PTR [eax+0x3a]
  42198a:	and    bh,BYTE PTR [ebp+edx*8-0x611673b0]
  421991:	daa    
  421992:	mov    edi,0xa11f4b66
  421997:	lahf   
  421998:	jmp    0x421a0e
  42199a:	cld    
  42199b:	lods   eax,DWORD PTR ds:[esi]
  42199c:	aam    0x1f
  42199e:	neg    DWORD PTR [ecx]
  4219a0:	dec    esp
  4219a1:	mov    eax,esi
  4219a3:	mov    dh,0x55
  4219a5:	mov    esp,0x6115d44b
  4219aa:	adc    ecx,edi
  4219ac:	sub    bh,dh
  4219ae:	(bad)  
  4219af:	mov    bl,0x54
  4219b1:	stos   BYTE PTR es:[edi],al
  4219b2:	jp     0x421a18
  4219b4:	test   al,0xab
  4219b6:	and    DWORD PTR [edi+edi*2-0x492ebdb3],ebx
  4219bd:	push   ss
  4219be:	shl    BYTE PTR [eax],0xda
  4219c1:	out    0x45,al
  4219c3:	add    dh,ch
  4219c5:	pop    ss
  4219c6:	dec    esi
  4219c7:	pop    edx
  4219c8:	xor    ax,0x8f1d
  4219cc:	(bad)
  4219d0:	shr    BYTE PTR [esi+0x39],cl
  4219d3:	sub    edi,esi
  4219d5:	sbb    bl,BYTE PTR [eax-0x2c]
  4219d8:	pop    eax
  4219d9:	not    DWORD PTR [ecx+0x67]
  4219dc:	sub    ecx,esp
  4219de:	ror    DWORD PTR ss:[esi+0x20],1
  4219e2:	mov    al,ds:0x8a27db8
  4219e7:	mov    esi,0xc6625ac7
  4219ec:	aam    0x3b
  4219ee:	mov    ecx,0xe0f62ae
  4219f3:	jno    0x421a29
  4219f5:	jne    0x42197a
  4219f7:	test   eax,0x667965b2
  4219fc:	pop    ecx
  4219fd:	sub    ebp,edi
  4219ff:	adc    ecx,DWORD PTR [ebp+ebp*4+0x1]
  421a03:	push   ebx
  421a04:	mov    ds:0x7da70e5,eax
  421a09:	loopne 0x421a3b
  421a0b:	fcmovb st,st(6)
  421a0d:	push   ebp
  421a0e:	or     al,0xf
  421a10:	sub    BYTE PTR [edi-0x6e],cl
  421a13:	pop    es
  421a14:	jae    0x4219a7
  421a16:	add    bl,BYTE PTR [esi-0x61d47c0]
  421a1c:	bound  edi,QWORD PTR [edx]
  421a1e:	aas    
  421a1f:	xor    ah,0x9e
  421a22:	and    ah,BYTE PTR [edx-0x67ee4ff0]
  421a28:	pop    edx
  421a29:	clc    
  421a2a:	enter  0xf86f,0x80
  421a2e:	clc    
  421a2f:	pop    eax
  421a30:	push   0x296e6005
  421a35:	bswap  edi
  421a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a38:	je     0x4219bd
  421a3a:	jg     0x421a9c
  421a3c:	fwait
  421a3d:	int    0x13
  421a3f:	imul   ebx,ebp,0x5b
  421a42:	adc    DWORD PTR [esi-0x3c],0x29
  421a46:	sahf   
  421a47:	ret    
  421a48:	retf   0x8e49
  421a4b:	mov    esi,0xecedf0a6
  421a50:	jg     0x421a2a
  421a52:	mov    dh,0xb0
  421a54:	cmp    edx,DWORD PTR [ebp-0x45]
  421a57:	xor    DWORD PTR [esi-0x28],esp
  421a5a:	sub    bh,BYTE PTR [edi]
  421a5c:	outs   dx,DWORD PTR ds:[esi]
  421a5d:	shr    BYTE PTR [edx+ecx*4-0x67ef512],cl
  421a64:	xchg   edx,eax
  421a65:	mov    edx,0x745ce05d
  421a6a:	scas   eax,DWORD PTR es:[edi]
  421a6b:	mov    dl,0x70
  421a6d:	push   ecx
  421a6e:	pop    esi
  421a6f:	add    DWORD PTR [ebx],0xffffffdf
  421a72:	out    0x18,al
  421a74:	daa    
  421a75:	cdq    
  421a76:	push   ss
  421a77:	mov    WORD PTR [eax-0x369edf69],?
  421a7d:	cmp    BYTE PTR [ebx],bl
  421a7f:	in     al,0x77
  421a81:	mov    ah,0xaa
  421a83:	stos   BYTE PTR es:[edi],al
  421a84:	jl     0x421a0e
  421a86:	pop    ebp
  421a87:	mov    dh,0x35
  421a89:	std    
  421a8a:	ja     0x421a7f
  421a8c:	in     al,0x73
  421a8e:	and    al,0x9f
  421a90:	loop   0x421ad7
  421a92:	push   edi
  421a93:	push   esp
  421a94:	mov    dh,BYTE PTR [ebx]
  421a96:	cwde   
  421a97:	ret    
  421a98:	jecxz  0x421ab1
  421a9a:	add    bh,dl
  421a9c:	les    ebx,FWORD PTR [ebx]
  421a9e:	sub    cl,dh
  421aa0:	adc    bh,ah
  421aa2:	jmp    0x421ae5
  421aa4:	or     eax,0x4adaa444
  421aa9:	jmp    FWORD PTR [edx+0x6c]
  421aac:	bound  eax,QWORD PTR [esi+eax*4+0x71]
  421ab0:	aad    0x53
  421ab2:	divps  xmm5,XMMWORD PTR [ebp+0x3e]
  421ab6:	and    dl,cl
  421ab8:	cwde   
  421ab9:	jge    0x421a88
  421abb:	dec    ebx
  421abc:	or     BYTE PTR ds:0x90652773,ah
  421ac2:	xor    bh,bl
  421ac4:	out    0xad,al
  421ac6:	cld    
  421ac7:	mov    ch,0x8d
  421ac9:	call   0xfdf246ff
  421ace:	(bad)  
  421ad0:	imul   eax,DWORD PTR [ecx],0xd74dc327
  421ad6:	xchg   ebx,eax
  421ad7:	ss sti 
  421ad9:	inc    eax
  421ada:	loopne 0x421ac9
  421adc:	or     eax,0x87033daf
  421ae1:	add    al,BYTE PTR [edi+0x74997804]
  421ae7:	dec    ecx
  421ae8:	pop    eax
  421ae9:	or     al,0x94
  421aeb:	push   esi
  421aec:	popf   
  421aed:	xor    eax,0x81274861
  421af2:	mov    ah,0x52
  421af4:	sub    BYTE PTR [eax],ch
  421af6:	mov    esp,eax
  421af8:	sbb    ebp,DWORD PTR [edx+0x2c0973c4]
  421afe:	cmc    
  421aff:	xchg   ebp,eax
  421b00:	xor    DWORD PTR [esp+edx*2],ecx
  421b03:	add    al,0xce
  421b05:	inc    ebx
  421b06:	cmp    DWORD PTR [edx+0x5d],esp
  421b09:	jmp    0x421acc
  421b0b:	sub    BYTE PTR [edi-0x23],0x74
  421b0f:	pop    ss
  421b10:	xor    ah,ah
  421b12:	sub    ah,BYTE PTR [esi-0x2d1a7b26]
  421b18:	nop
  421b19:	jge    0x421b8c
  421b1b:	iret   
  421b1c:	add    DWORD PTR ds:0x49cec896,esp
  421b22:	sub    BYTE PTR [edi+0x3060ce41],ah
  421b28:	bound  ecx,QWORD PTR [eax]
  421b2a:	push   ebx
  421b2b:	ja     0x421ae0
  421b2d:	jmp    0x63210a2e
  421b32:	fbld   TBYTE PTR [ecx]
  421b34:	inc    esp
  421b35:	out    0x82,al
  421b37:	mov    WORD PTR ds:0x282fc607,es
  421b3d:	ror    DWORD PTR [ebp-0x712b4da0],cl
  421b43:	xor    ecx,ecx
  421b45:	aad    0xda
  421b47:	je     0x421b96
  421b49:	mov    ah,0x9f
  421b4b:	pop    ebp
  421b4c:	into   
  421b4d:	repz aaa 
  421b4f:	in     al,dx
  421b50:	mov    eax,0x4219efc1
  421b55:	pop    ecx
  421b56:	sub    al,0xa2
  421b58:	mov    cl,0xa8
  421b5a:	mov    bl,0xd2
  421b5c:	push   edx
  421b5d:	iret   
  421b5e:	xchg   ecx,eax
  421b5f:	cmp    eax,0x54a44d76
  421b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b65:	loop   0x421b19
  421b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b68:	xchg   BYTE PTR [esi+edi*8-0x2164c84f],cl
  421b6f:	add    al,0x8c
  421b71:	mov    cl,0xe9
  421b73:	fmul   QWORD PTR [esi-0x3f]
  421b76:	push   ebp
  421b77:	mov    ds,WORD PTR [edi+0x4750e005]
  421b7d:	test   ebx,0x6481197f
  421b83:	add    ebp,ebx
  421b85:	and    BYTE PTR [eax-0x2],ah
  421b88:	sar    ch,0xec
  421b8b:	add    BYTE PTR [ebp-0x4ece421b],0x20
  421b92:	jmp    0x421be7
  421b94:	cmp    al,0x85
  421b96:	int3   
  421b97:	cli    
  421b98:	mov    BYTE PTR [edx+0x642feff7],al
  421b9e:	or     al,0x63
  421ba0:	es push esp
  421ba2:	and    DWORD PTR [ebx+0xb],ebx
  421ba5:	ja     0x421be2
  421ba7:	inc    ebp
  421ba8:	sub    al,0xea
  421baa:	mov    BYTE PTR [eax+0x2e5eab2f],bh
  421bb0:	xchg   esp,eax
  421bb1:	xor    al,0x4c
  421bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb4:	push   esp
  421bb5:	pusha  
  421bb6:	test   al,0x38
  421bb8:	pop    ds
  421bb9:	xchg   DWORD PTR [ebp+0x56],ebp
  421bbc:	xchg   ecx,eax
  421bbd:	scas   eax,DWORD PTR es:[edi]
  421bbe:	jne    0x421bc2
  421bc0:	or     eax,0x2f23649f
  421bc5:	jae    0x421b6f
  421bc7:	(bad)  
  421bc8:	cli    
  421bc9:	dec    esi
  421bca:	popa   
  421bcb:	imul   esp,DWORD PTR [esi],0x6a
  421bce:	xchg   DWORD PTR [edx+0x52671597],esp
  421bd4:	mov    dl,0xc4
  421bd6:	cwde   
  421bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd8:	dec    ebx
  421bd9:	push   0x5e
  421bdb:	stos   BYTE PTR es:[edi],al
  421bdc:	or     eax,0xf82f5408
  421be1:	add    al,0xbc
  421be3:	(bad)  
  421be4:	xchg   edi,eax
  421be5:	push   ebx
  421be6:	jbe    0x421c27
  421be8:	in     eax,dx
  421be9:	xchg   edi,eax
  421bea:	jmp    0x421c35
  421bec:	jae    0x421c28
  421bee:	jecxz  0x421b8b
  421bf0:	lods   eax,DWORD PTR ds:[esi]
  421bf1:	cmp    al,0x90
  421bf3:	cld    
  421bf4:	cmp    cl,dl
  421bf6:	sub    cl,bh
  421bf8:	cmc    
  421bf9:	fwait
  421bfa:	retf   
  421bfb:	jae    0x421bf1
  421bfd:	pop    edi
  421bfe:	mov    cl,0x9c
  421c00:	pop    edx
  421c01:	sbb    DWORD PTR [edi],ecx
  421c03:	mov    ds,WORD PTR [ecx+0x27]
  421c06:	pop    esi
  421c07:	adc    esp,DWORD PTR [ebx+ebp*1-0x12]
  421c0b:	aas    
  421c0c:	push   edi
  421c0d:	call   0x5660:0x9e765235
  421c14:	cmp    DWORD PTR [ebp-0x74525542],esi
  421c1a:	mov    al,ds:0xeeaa6bf2
  421c1f:	out    dx,al
  421c20:	lods   eax,DWORD PTR ds:[esi]
  421c21:	dec    esi
  421c22:	call   0x89fada1d
  421c27:	xchg   DWORD PTR [esi-0x527bcad1],esi
  421c2d:	add    al,0xaf
  421c2f:	sbb    al,BYTE PTR [ebp+0xfd51ddb]
  421c35:	loopne 0x421c40
  421c37:	ds data16 jo 0x421c77
  421c3b:	cmp    DWORD PTR [ebp-0x2f58cd6a],ebx
  421c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c42:	mov    cl,0x1a
  421c44:	jno    0x421bca
  421c46:	out    dx,al
  421c47:	sbb    eax,0xf28f62a0
  421c4c:	mov    ebx,0x68b77541
  421c51:	fld    st(2)
  421c53:	dec    edx
  421c54:	stos   DWORD PTR es:[edi],eax
  421c55:	stos   DWORD PTR es:[edi],eax
  421c56:	lea    ebp,[ebx+0x5b]
  421c59:	fdivr  DWORD PTR [ebx]
  421c5b:	lods   eax,DWORD PTR ds:[esi]
  421c5c:	pusha  
  421c5d:	cmp    eax,0xb0f5a681
  421c62:	dec    esp
  421c63:	pop    ecx
  421c64:	sar    DWORD PTR [eax-0x41],0x0
  421c68:	jmp    0xb4e7:0xc907fa5
  421c6f:	ror    DWORD PTR [ebp-0xe],1
  421c72:	dec    ebx
  421c73:	inc    edi
  421c74:	cmp    al,0x4c
  421c76:	scas   eax,DWORD PTR es:[edi]
  421c77:	dec    esp
  421c78:	es cmc 
  421c7a:	or     DWORD PTR [ebx-0x17b64a93],eax
  421c80:	mov    DWORD PTR [esi-0x347ead96],eax
  421c86:	dec    ebx
  421c87:	xchg   edi,eax
  421c88:	sub    cl,ch
  421c8a:	jl     0x421c8e
  421c8c:	rol    DWORD PTR [esi],1
  421c8e:	adc    ah,BYTE PTR [edx]
  421c90:	scas   al,BYTE PTR es:[edi]
  421c91:	sub    eax,0xf317842
  421c96:	scas   al,BYTE PTR es:[edi]
  421c97:	xchg   edx,eax
  421c98:	pop    ds
  421c99:	and    bh,BYTE PTR [esi+0x252d4eba]
  421c9f:	cld    
  421ca0:	hlt    
  421ca1:	pop    ds
  421ca2:	mov    ds:0xada6dd2e,al
  421ca7:	jmp    0x34c7:0xde93dfb4
  421cae:	adc    BYTE PTR [edx-0x7ca667b4],cl
  421cb4:	arpl   WORD PTR [ebx+eiz*8+0x17],bp
  421cb8:	cmp    ebx,DWORD PTR [ecx]
  421cba:	mov    esp,0xb0bf468b
  421cbf:	scas   eax,DWORD PTR es:[edi]
  421cc0:	scas   eax,DWORD PTR es:[edi]
  421cc1:	addr16 dec esi
  421cc3:	mov    BYTE PTR [edi+edi*4-0x5b],bh
  421cc7:	fdiv   st,st(6)
  421cc9:	cld    
  421cca:	pop    eax
  421ccb:	jne    0x421ced
  421ccd:	shl    DWORD PTR [eax],cl
  421ccf:	inc    eax
  421cd0:	loopne 0x421c7a
  421cd2:	sbb    BYTE PTR [ebx],dh
  421cd4:	and    ch,BYTE PTR [eax+0x13]
  421cd7:	xor    al,0x13
  421cd9:	xchg   esp,eax
  421cda:	fwait
  421cdb:	mov    esp,0xc14e3cc3
  421ce0:	and    eax,0xc854e829
  421ce5:	das    
  421ce6:	icebp  
  421ce7:	lahf   
  421ce8:	inc    ebx
  421ce9:	dec    ecx
  421cea:	xor    al,0x97
  421cec:	and    cl,BYTE PTR [edx+0x69]
  421cef:	inc    ecx
  421cf0:	retf   0x7e80
  421cf3:	in     eax,dx
  421cf4:	leave  
  421cf5:	xchg   edx,eax
  421cf6:	or     al,0x64
  421cf8:	jb     0x421cb9
  421cfa:	fisub  WORD PTR [esi]
  421cfc:	adc    ch,BYTE PTR [esp+ecx*4-0x5b]
  421d00:	or     DWORD PTR fs:[ecx-0x68],eax
  421d04:	cdq    
  421d05:	adc    BYTE PTR [edi-0x605ed65e],dh
  421d0b:	rcr    edi,1
  421d0d:	cwde   
  421d0e:	inc    ecx
  421d0f:	clc    
  421d10:	pop    edi
  421d11:	enter  0x40c3,0x83
  421d15:	pop    ebx
  421d16:	fisttp WORD PTR [esi*1+0x4b6f6785]
  421d1d:	add    esp,edi
  421d1f:	ror    BYTE PTR [ecx],cl
  421d21:	cmp    BYTE PTR [ebx-0x2e],0xf2
  421d25:	push   es
  421d26:	push   ecx
  421d27:	jnp    0x421cd1
  421d29:	jns    0x421cfd
  421d2b:	out    0xed,al
  421d2d:	add    DWORD PTR [edi],ebp
  421d2f:	pushf  
  421d30:	out    dx,eax
  421d31:	dec    esi
  421d32:	mov    eax,ds:0x485e3c3
  421d37:	mov    esi,0xa61bab9c
  421d3c:	mov    esp,0x63971c59
  421d41:	jnp    0x421d7b
  421d43:	in     al,0x0
  421d45:	mov    esp,0x4d6f7269
  421d4a:	xor    BYTE PTR [ebp-0x4c796c55],dl
  421d50:	sub    dl,BYTE PTR [edx]
  421d52:	frstor [edx+0x39f0ba2f]
  421d58:	pop    ds
  421d59:	or     BYTE PTR [ebx],ah
  421d5b:	jmp    0xa4a9:0xeb0e9cb5
  421d62:	xchg   ebx,eax
  421d63:	push   ebp
  421d64:	cdq    
  421d65:	ret    0xeeb
  421d68:	jmp    DWORD PTR [ebp-0x51]
  421d6b:	sar    DWORD PTR [eax],1
  421d6d:	dec    ebp
  421d6e:	fs jne 0x421d85
  421d71:	inc    esi
  421d72:	adc    BYTE PTR [ebp+0x39e4e2a2],bh
  421d78:	js     0x421d9c
  421d7a:	push   esp
  421d7b:	push   esp
  421d7c:	sbb    BYTE PTR [edx-0x11a205b],dl
  421d82:	(bad)  [edi+0x2132ef01]
  421d88:	int3   
  421d89:	jg     0x421d47
  421d8b:	(bad)  
  421d8c:	mov    ds:0xa9faeee9,al
  421d91:	ds mov ebp,0x9d830a96
  421d97:	mov    al,0xbd
  421d99:	mov    al,0x7e
  421d9b:	jno    0x421d8d
  421d9d:	inc    ebx
  421d9e:	jbe    0x421dde
  421da0:	dec    esp
  421da1:	jnp    0x421dc8
  421da3:	inc    edi
  421da4:	mov    BYTE PTR [ecx+0x7e],cl
  421da7:	xchg   esp,ebx
  421da9:	add    al,0xd
  421dab:	adc    eax,0xefbce193
  421db0:	or     BYTE PTR [edi-0x70d9aead],ch
  421db6:	mov    al,ds:0x977ba350
  421dbb:	push   esi
  421dbc:	sti    
  421dbd:	mov    WORD PTR [edi+0x28],ss
  421dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc1:	repz mov bl,0x75
  421dc4:	mov    cs,WORD PTR [edx-0x3f]
  421dc7:	rcl    DWORD PTR [ebx],cl
  421dc9:	or     edi,DWORD PTR [edi+0x5cd7e489]
  421dcf:	and    al,0xa4
  421dd1:	inc    edi
  421dd2:	sub    BYTE PTR [ecx],bh
  421dd4:	or     al,0x60
  421dd6:	out    0x97,al
  421dd8:	sub    BYTE PTR [edi+0x44],0xea
  421ddc:	scas   eax,DWORD PTR es:[edi]
  421ddd:	mov    esi,0xa1515148
  421de2:	mov    ch,0xc6
  421de4:	inc    eax
  421de5:	push   0xcc658e34
  421dea:	mov    WORD PTR [ecx-0x47a03c48],es
  421df0:	inc    ebx
  421df1:	pop    ss
  421df2:	jl     0x421dfe
  421df4:	repz cli 
  421df6:	in     al,0xc8
  421df8:	enter  0xeacf,0x46
  421dfc:	mov    ch,0x11
  421dfe:	ja     0x421e1e
  421e00:	cmp    esp,DWORD PTR [ecx+0x41f752c5]
  421e06:	cmp    dl,BYTE PTR [edi-0x6161b782]
  421e0c:	and    ecx,DWORD PTR [ebp-0x510c769c]
  421e12:	jmp    0x5ea:0xa8f0364d
  421e19:	popa   
  421e1a:	call   0x6423:0x9ad041f2
  421e21:	push   esp
  421e22:	stos   BYTE PTR es:[edi],al
  421e23:	out    dx,eax
  421e24:	pop    ebp
  421e25:	sub    al,ah
  421e27:	fisttp QWORD PTR [edx-0x3ca0ed65]
  421e2d:	cwde   
  421e2e:	sub    DWORD PTR ds:0x874d1fae,0xabda73e7
  421e39:	mov    eax,ds:0x823067ea
  421e3e:	dec    ecx
  421e3f:	or     dh,bl
  421e41:	dec    BYTE PTR [edi-0x4a73c976]
  421e47:	mov    ?,WORD PTR [edi+0x16]
  421e4a:	mov    es,WORD PTR [ecx+0x79a8f86b]
  421e50:	jb     0x421eb1
  421e52:	lods   eax,DWORD PTR ds:[esi]
  421e53:	lods   eax,DWORD PTR ds:[esi]
  421e54:	mov    al,0x2e
  421e56:	xor    dl,BYTE PTR [eax+0x1de6854e]
  421e5c:	adc    ebp,ecx
  421e5e:	in     al,0x9b
  421e60:	jecxz  0x421eb7
  421e62:	adc    ebx,DWORD PTR ds:0x992e3784
  421e68:	jmp    0x421ea0
  421e6a:	push   edi
  421e6b:	pop    ebx
  421e6c:	mov    WORD PTR [edi+0x8],gs
  421e6f:	test   BYTE PTR [ebp+0x2e],0x58
  421e73:	mov    bl,0x56
  421e75:	hlt    
  421e76:	sbb    BYTE PTR cs:[ebp+0x25],al
  421e7a:	push   cs
  421e7b:	in     al,dx
  421e7c:	lahf   
  421e7d:	mov    ebp,0xd5544222
  421e82:	(bad)  
  421e83:	lahf   
  421e84:	sub    DWORD PTR [ecx],esp
  421e86:	mov    ds:0x313c973b,eax
  421e8b:	cmp    BYTE PTR [ebx-0x4],dl
  421e8e:	adc    bl,BYTE PTR [ebp+0x1c7ff0db]
  421e94:	js     0x421ef6
  421e96:	test   eax,0x82fec2fa
  421e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9c:	adc    eax,0x118d5de5
  421ea1:	xchg   edx,eax
  421ea2:	dec    esp
  421ea3:	dec    eax
  421ea4:	mov    cl,0xe0
  421ea6:	cmp    al,0x3f
  421ea8:	aas    
  421ea9:	xadd   bl,bh
  421eac:	mov    bh,0xcb
  421eae:	adc    bl,bh
  421eb0:	mov    bl,0xcf
  421eb2:	loope  0x421f2c
  421eb4:	cmp    al,0xe
  421eb6:	cld    
  421eb7:	pop    esp
  421eb8:	lea    edi,[eax+0x5ac6c53]
  421ebe:	or     BYTE PTR [ebx+0x313de2ba],bl
  421ec4:	dec    esp
  421ec5:	sub    dh,dl
  421ec7:	cmp    eax,0xa5cd3256
  421ecc:	data16 sahf 
  421ece:	inc    eax
  421ecf:	jge    0x421f1e
  421ed1:	sub    DWORD PTR [edx+eiz*2],eax
  421ed4:	and    esp,DWORD PTR [esi-0x74]
  421ed7:	cmp    eax,0x711e1a23
  421edc:	rcl    DWORD PTR [eax],1
  421ede:	xor    BYTE PTR [ecx-0x9],bl
  421ee1:	add    eax,0x975cef4f
  421ee6:	ins    BYTE PTR es:[edi],dx
  421ee7:	leave  
  421ee8:	or     DWORD PTR [edi],0x3de65b15
  421eee:	in     al,dx
  421eef:	sub    DWORD PTR [edi-0x64043364],0xffffffb8
  421ef6:	fstp   QWORD PTR [ecx]
  421ef8:	call   0xa46e:0xff390339
  421eff:	push   ebp
  421f00:	in     eax,dx
  421f01:	mov    ebx,DWORD PTR [ecx+eax*1]
  421f04:	pusha  
  421f05:	inc    edx
  421f06:	sbb    DWORD PTR [eax-0x22],0xffffffd5
  421f0a:	cmp    al,dh
  421f0c:	ret    
  421f0d:	jp     0x421ebe
  421f0f:	sub    BYTE PTR [esi+0x685f7e7e],ch
  421f15:	scas   al,BYTE PTR es:[edi]
  421f16:	aaa    
  421f17:	ins    BYTE PTR es:[edi],dx
  421f18:	mov    al,ds:0x8407e95
  421f1d:	nop
  421f1e:	mov    dl,0xa3
  421f20:	lods   eax,DWORD PTR ds:[esi]
  421f21:	xchg   BYTE PTR [edx+0x663f12db],ah
  421f27:	and    BYTE PTR [ebx-0x2a],0x87
  421f2b:	lahf   
  421f2c:	aas    
  421f2d:	out    dx,eax
  421f2e:	jmp    0x87b1b8db
  421f33:	inc    esp
  421f34:	jae    0x421fa1
  421f36:	les    ecx,FWORD PTR [ebp-0x7d]
  421f39:	popf   
  421f3a:	(bad)  
  421f3b:	mov    ebx,0x97a61717
  421f40:	sbb    eax,0xc56b8787
  421f45:	fnsave [ebp-0x38]
  421f48:	dec    esp
  421f49:	retf   0x64ec
  421f4c:	xor    DWORD PTR gs:[ebx+0x60],esp
  421f50:	dec    esi
  421f51:	mov    dl,0x28
  421f53:	mov    esi,0xa15ef6fc
  421f58:	ins    DWORD PTR es:[edi],dx
  421f59:	and    eax,DWORD PTR [ecx+eax*8]
  421f5c:	jns    0x421f42
  421f5e:	lods   al,BYTE PTR ds:[esi]
  421f5f:	pop    es
  421f60:	sub    al,0xb1
  421f62:	bound  edi,QWORD PTR [ecx]
  421f64:	cld    
  421f65:	inc    eax
  421f66:	mov    eax,ds:0xfc94dc68
  421f6b:	imul   esi,DWORD PTR [ecx+0x29],0xffffffa2
  421f6f:	aad    0xc7
  421f71:	xor    eax,0x6039a1f4
  421f76:	pop    ebp
  421f77:	or     al,0x7f
  421f79:	pusha  
  421f7a:	dec    esi
  421f7b:	ret    
  421f7c:	call   0x7958:0x8eb41a20
  421f83:	arpl   WORD PTR [eax+0x58],bx
  421f86:	fcmovb st,st(1)
  421f88:	pop    edx
  421f89:	mov    esp,0xad649ba1
  421f8e:	xchg   esp,eax
  421f8f:	ret    0x1217
  421f92:	and    ebx,edi
  421f94:	push   esp
  421f95:	cdq    
  421f96:	enter  0xffdd,0x3e
  421f9a:	scas   al,BYTE PTR es:[edi]
  421f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f9c:	adc    eax,0xfdf8f975
  421fa1:	mov    ch,0x1f
  421fa3:	push   ds
  421fa4:	cmp    eax,0xbf0573da
  421fa9:	push   ds
  421faa:	xchg   edx,eax
  421fab:	adc    ah,BYTE PTR [edi+edx*8-0x47054d3]
  421fb2:	xor    BYTE PTR [ebx+0x43],ah
  421fb5:	add    DWORD PTR [ebx+0x47],esp
  421fb8:	or     dh,BYTE PTR [ecx+0x258607f4]
  421fbe:	push   0xffffffa8
  421fc0:	fcomp  QWORD PTR [edi+0x196f1593]
  421fc6:	ds inc esi
  421fc8:	out    dx,al
  421fc9:	xchg   DWORD PTR [ecx+0x56ab05da],esp
  421fcf:	stc    
  421fd0:	xor    al,0x5
  421fd2:	mov    dl,0xa9
  421fd4:	loope  0x421fae
  421fd6:	add    al,0x0
  421fd8:	ror    bh,1
  421fda:	jp     0x421fb1
  421fdc:	sub    esp,DWORD PTR ds:0xd3ad5b01
  421fe2:	mov    bh,0xd3
  421fe4:	enter  0xcac2,0xae
  421fe8:	sbb    ecx,DWORD PTR [ebx]
  421fea:	std    
  421feb:	nop
  421fec:	dec    ebx
  421fed:	jne    0x421fc0
  421fef:	enter  0xc39c,0xf4
  421ff3:	ins    DWORD PTR es:[edi],dx
  421ff4:	mov    ch,BYTE PTR [edx-0x4f007526]
  421ffa:	std    
  421ffb:	stos   DWORD PTR es:[edi],eax
  421ffc:	call   FWORD PTR [edx*8-0x2d314408]
  422003:	sbb    dl,bh
  422005:	cmp    eax,0x73103e5b
  42200a:	xchg   esp,eax
  42200b:	daa    
  42200c:	dec    ebp
  42200d:	xchg   ebp,eax
  42200e:	mov    eax,DWORD PTR [eax]
  422010:	dec    esi
  422011:	adc    eax,0x80aec4ae
  422016:	add    edi,DWORD PTR [edi]
  422018:	scas   al,BYTE PTR es:[edi]
  422019:	inc    edx
  42201a:	ins    BYTE PTR es:[edi],dx
  42201b:	inc    esp
  42201c:	aas    
  42201d:	xor    eax,0x80d58d4c
  422022:	mov    gs,WORD PTR [ebx-0x45]
  422025:	gs add ebx,edi
  422028:	ins    BYTE PTR es:[edi],dx
  422029:	xchg   edx,eax
  42202a:	or     BYTE PTR [edx+0x1d],0x51
  42202e:	ja     0x4220ab
  422030:	repz rcr DWORD PTR [ecx],0x1
  422034:	inc    esi
  422035:	mov    ebp,0x2445b073
  42203a:	jecxz  0x42203e
  42203c:	je     0x4220a8
  42203e:	imul   edx,eax,0xffffffff
  422041:	cwde   
  422042:	imul   edx,DWORD PTR [eiz*4+0x5a4973c3],0x43
  42204a:	(bad)  
  42204b:	call   0xa1e9:0x3b6ffc12
  422052:	(bad)  
  422053:	pop    edx
  422054:	and    eax,0x1d5ab842
  422059:	xor    ebp,DWORD PTR [ecx+0x50]
  42205c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205d:	gs and al,0x53
  422060:	add    BYTE PTR [esi-0x3f],bl
  422063:	call   0x369:0x389f2a03
  42206a:	mov    ch,dh
  42206c:	enter  0xba5e,0xe7
  422070:	jecxz  0x42200a
  422072:	mov    al,0x23
  422074:	adc    BYTE PTR [ebx-0x12],dh
  422077:	stos   DWORD PTR es:[edi],eax
  422078:	sub    BYTE PTR ds:0xf2662e2b,dl
  42207e:	div    BYTE PTR [edx]
  422080:	lods   eax,DWORD PTR ds:[esi]
  422081:	push   ebx
  422082:	int    0x1a
  422084:	jg     0x42203d
  422086:	jne    0x422076
  422088:	cwde   
  422089:	cmp    dh,BYTE PTR [ebx]
  42208b:	cdq    
  42208c:	into   
  42208d:	cmp    eax,0x80e841c7
  422092:	or     DWORD PTR [ebp+0x71],0x59ba71d0
  422099:	cmp    edx,esp
  42209b:	adc    al,0x3b
  42209d:	jb     0x422096
  42209f:	adc    ebx,esp
  4220a1:	shl    BYTE PTR [edi],0xab
  4220a4:	mov    al,0x3c
  4220a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a7:	mov    bl,0x13
  4220a9:	or     DWORD PTR ds:0x2f86f2e7,edx
  4220af:	cli    
  4220b0:	outs   dx,BYTE PTR ds:[esi]
  4220b1:	or     BYTE PTR [eax+0x43],bl
  4220b4:	loop   0x422103
  4220b6:	cmp    dh,dl
  4220b8:	es pop edx
  4220ba:	jg     0x4220a3
  4220bc:	(bad)  
  4220bd:	fadd   DWORD PTR [ebx+0x7fd5287f]
  4220c3:	(bad)  
  4220c4:	jae    0x4220b3
  4220c6:	dec    esi
  4220c7:	retf   0x5aff
  4220ca:	out    dx,eax
  4220cb:	imul   edi,DWORD PTR [edi+ebx*4+0x57],0x594cad58
  4220d3:	test   dl,0x31
  4220d6:	push   ebx
  4220d7:	dec    ecx
  4220d8:	xchg   ecx,eax
  4220d9:	dec    edi
  4220da:	pop    esp
  4220db:	add    BYTE PTR ds:0xfde1b4a1,0x65
  4220e2:	out    dx,eax
  4220e3:	pop    es
  4220e4:	push   edx
  4220e5:	repz jp 0x4220b2
  4220e8:	push   es
  4220e9:	or     eax,0x5561d819
  4220ee:	dec    ecx
  4220ef:	and    eax,0x8c1fbfe0
  4220f4:	sbb    al,0x51
  4220f6:	sahf   
  4220f7:	jecxz  0x4220f6
  4220f9:	jge    0x42216c
  4220fb:	mov    esp,DWORD PTR [edx]
  4220fd:	sub    ecx,DWORD PTR [ebx+ecx*2-0x57]
  422101:	popa   
  422102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422103:	outs   dx,DWORD PTR ds:[esi]
  422104:	jae    0x4220c2
  422106:	jmp    0x42dc:0xbb3e70a4
  42210d:	fwait
  42210e:	pop    DWORD PTR [esi+0x26b56e44]
  422114:	jg     0x42213a
  422116:	fisubr WORD PTR [esi]
  422118:	in     eax,dx
  422119:	push   0x1296a0a6
  42211e:	test   DWORD PTR [eax+0x4d],0xa1eda393
  422125:	inc    edi
  422126:	inc    ebp
  422127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422128:	jge    0x422118
  42212a:	pop    ecx
  42212b:	dec    edi
  42212c:	dec    ebx
  42212d:	add    DWORD PTR [esi-0x911c1ce],ebx
  422133:	mov    eax,ds:0xfdc8e530
  422138:	mov    ds:0xbe036518,al
  42213d:	sbb    al,0x59
  42213f:	scas   al,BYTE PTR es:[edi]
  422140:	xor    edi,DWORD PTR [edi-0x1f5a7d3f]
  422146:	jae    0x422156
  422148:	test   BYTE PTR [eax-0x4f184e70],ch
  42214e:	pushf  
  42214f:	push   edx
  422150:	or     al,0x26
  422152:	push   eax
  422153:	sub    DWORD PTR [edi],edx
  422155:	out    0x8e,eax
  422157:	aaa    
  422158:	scas   al,BYTE PTR es:[edi]
  422159:	adc    DWORD PTR [edx],edi
  42215b:	cmp    eax,0xe4123304
  422160:	sub    eax,0x4a9a4e31
  422165:	pop    ecx
  422166:	push   ebx
  422167:	ins    DWORD PTR es:[edi],dx
  422168:	jb     0x42215e
  42216a:	in     eax,dx
  42216b:	sbb    dl,BYTE PTR [edi+esi*2-0xd]
  42216f:	call   0x44d25b31
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	icebp  
  422176:	cdq    
  422177:	and    al,0x2f
  422179:	push   0xfffffffc
  42217b:	and    BYTE PTR [eax-0x55],bl
  42217e:	ja     0x422117
  422180:	inc    ebx
  422181:	mov    edx,0xb40f4010
  422186:	and    esp,esi
  422188:	rol    DWORD PTR ds:[ecx],0xd8
  42218c:	out    dx,al
  42218d:	sbb    al,0x20
  42218f:	int3   
  422190:	inc    esi
  422191:	test   al,0x6e
  422193:	and    DWORD PTR [ebx-0x508dde00],edi
  422199:	add    esi,DWORD PTR [esi-0x61578add]
  42219f:	ins    BYTE PTR es:[edi],dx
  4221a0:	inc    esi
  4221a1:	fistp  DWORD PTR [ecx]
  4221a3:	cmp    eax,0x1f97270e
  4221a8:	and    al,0xa1
  4221aa:	leave  
  4221ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ac:	pop    ecx
  4221ad:	repz dec ecx
  4221af:	clc    
  4221b0:	loope  0x422219
  4221b2:	dec    edi
  4221b3:	sbb    eax,0xc7765db1
  4221b8:	cwde   
  4221b9:	leave  
  4221ba:	leave  
  4221bb:	(bad)  
  4221bc:	mov    esi,0x6dc48ed0
  4221c1:	push   edx
  4221c2:	loopne 0x4221b1
  4221c4:	in     eax,0x3c
  4221c6:	nop
  4221c7:	mov    esi,0xc3517f3f
  4221cc:	adc    bh,bh
  4221ce:	xchg   dh,cl
  4221d0:	xor    esi,DWORD PTR [ecx]
  4221d2:	jne    0x4221e1
  4221d4:	push   es
  4221d5:	adc    al,0x9
  4221d7:	cs mov bh,0xf7
  4221da:	outs   dx,BYTE PTR ds:[esi]
  4221db:	inc    ebx
  4221dc:	retf   0x12f0
  4221df:	nop
  4221e0:	mov    ch,0xf9
  4221e2:	jmp    0xa6e4:0x3485f760
  4221e9:	cli    
  4221ea:	cwde   
  4221eb:	(bad)  
  4221ec:	jmp    0x4221ae
  4221ee:	lds    ebx,FWORD PTR [ecx+0x2e]
  4221f1:	push   0xb094a2b2
  4221f6:	sti    
  4221f7:	jo     0x42224f
  4221f9:	mov    ebx,DWORD PTR [esi+0x6ed1913c]
  4221ff:	cmp    ecx,edx
  422201:	sbb    BYTE PTR [esi+0xe086137],bh
  422207:	jmp    0x42222e
  422209:	icebp  
  42220a:	(bad)  
  42220b:	je     0x422238
  42220d:	mov    bh,0x60
  42220f:	jnp    0x4221d0
  422211:	mov    ds:0xd78ebf71,eax
  422216:	(bad)  
  422217:	jge    0x422286
  422219:	and    eax,DWORD PTR [esi+0x3]
  42221c:	dec    ebx
  42221d:	push   ebx
  42221e:	xor    dh,BYTE PTR [ecx]
  422220:	rcl    cl,cl
  422222:	cwde   
  422223:	push   ecx
  422224:	outs   dx,BYTE PTR ds:[esi]
  422225:	mov    BYTE PTR [edx],0x17
  422228:	xchg   esp,eax
  422229:	lds    esi,FWORD PTR [esi-0x15]
  42222c:	jp     0x42223f
  42222e:	push   0x4ef6b463
  422233:	pop    esi
  422234:	xor    al,0x85
  422236:	sahf   
  422237:	fcmovu st,st(2)
  422239:	std    
  42223a:	pop    edi
  42223b:	outs   dx,DWORD PTR ds:[esi]
  42223c:	lea    eax,[ebp+0x20c29d2f]
  422242:	xchg   esi,eax
  422243:	mov    edi,0x891f8cc7
  422248:	out    dx,eax
  422249:	stos   BYTE PTR es:[edi],al
  42224a:	mov    edx,0xdc4fa2de
  42224f:	jle    0x4222b8
  422251:	repz rcr al,0x13
  422255:	xor    al,0x73
  422257:	or     DWORD PTR [edi+eiz*2+0x1e],edi
  42225b:	aas    
  42225c:	cmp    eax,ebx
  42225e:	(bad)  
  42225f:	lods   eax,DWORD PTR ds:[esi]
  422260:	mov    esi,0xbd733461
  422265:	pop    ecx
  422266:	mov    eax,ds:0x3b14f8a8
  42226b:	pusha  
  42226c:	mov    ebx,0x34bcca62
  422271:	fidiv  WORD PTR [ecx+ecx*2+0x51]
  422275:	xchg   BYTE PTR [edi+0x20],dh
  422278:	xchg   edx,eax
  422279:	xor    al,0x9d
  42227b:	sub    edi,edi
  42227d:	ret    0x4b95
  422280:	mov    cs,WORD PTR ds:[ebp-0x1]
  422284:	aam    0xbc
  422286:	lds    esp,FWORD PTR [esi-0x45]
  422289:	je     0x422294
  42228b:	push   edi
  42228c:	gs sti 
  42228e:	push   ebp
  42228f:	xchg   al,al
  422291:	inc    edx
  422292:	sub    al,0xb8
  422294:	mov    ebx,0x17be4019
  422299:	or     ch,BYTE PTR [esi]
  42229b:	xor    cl,ch
  42229d:	ja     0x4222b2
  42229f:	call   0xc2d45e0e
  4222a4:	add    al,0xe7
  4222a7:	ds pop ds
  4222a9:	out    dx,al
  4222aa:	aas    
  4222ab:	add    bl,bl
  4222ad:	(bad)  
  4222ae:	cmp    ebx,DWORD PTR [ebp-0x7fb25a9d]
  4222b4:	aaa    
  4222b5:	cmp    bh,BYTE PTR [esi-0x38]
  4222b8:	push   0x7
  4222ba:	aad    0xc6
  4222bc:	stos   BYTE PTR es:[edi],al
  4222bd:	push   ss
  4222be:	xchg   edi,eax
  4222bf:	xor    dl,al
  4222c1:	ss mov ebp,0x8be5cdfc
  4222c7:	mov    bl,ch
  4222c9:	push   0xffffff8e
  4222cb:	sub    al,0x5d
  4222cd:	aaa    
  4222ce:	dec    ebx
  4222d0:	stos   DWORD PTR es:[edi],eax
  4222d1:	xchg   esp,eax
  4222d2:	fisub  DWORD PTR [ebx-0x71]
  4222d5:	cwde   
  4222d6:	fsubr  st(7),st
  4222d8:	sbb    al,0x8e
  4222da:	adc    bh,BYTE PTR [ecx-0x5a7b161f]
  4222e0:	scas   al,BYTE PTR es:[edi]
  4222e1:	mov    dl,0x53
  4222e3:	out    dx,eax
  4222e4:	mov    eax,ds:0xab3fc876
  4222e9:	cdq    
  4222ea:	pop    ebp
  4222eb:	inc    edx
  4222ec:	sbb    al,0xa8
  4222ee:	loope  0x422364
  4222f0:	in     al,0xad
  4222f2:	addr16 inc ebp
  4222f4:	fnstenv [ebx+esi*8-0x6b]
  4222f8:	dec    esp
  4222f9:	(bad)  
  4222fa:	mov    ds:0xb12a8935,eax
  4222ff:	outs   dx,BYTE PTR ds:[esi]
  422300:	and    DWORD PTR [esi*2-0x2730de69],eax
  422307:	or     eax,DWORD PTR [esi-0x62]
  42230a:	icebp  
  42230b:	mov    WORD PTR [edx+0x5c],es
  42230e:	or     eax,edx
  422310:	rcl    BYTE PTR [ebx-0x2b],0xed
  422314:	inc    eax
  422315:	je     0x4222c1
  422317:	pop    edx
  422318:	and    DWORD PTR [ecx-0x50],0x3ff2ebde
  42231f:	jbe    0x42231b
  422321:	cmp    edi,ebp
  422323:	mov    dh,0xb7
  422325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422326:	(bad)  
  422327:	fcmovb st,st(5)
  422329:	fsubr  QWORD PTR [edi+0x6b]
  42232c:	push   ss
  42232d:	mov    eax,ds:0x829de7fa
  422332:	mov    cl,0xc0
  422334:	push   ecx
  422335:	out    dx,al
  422336:	mov    ebx,0xe153990
  42233b:	dec    esp
  42233c:	imul   ebp,DWORD PTR [ebp-0x1e],0x68
  422340:	call   0x236f:0x5f717dd5
  422347:	test   BYTE PTR [esi-0x314ef967],0x2
  42234e:	cmp    ch,BYTE PTR [esi-0x3d]
  422351:	stos   DWORD PTR es:[edi],eax
  422352:	adc    ebx,DWORD PTR [edx+0x6e091711]
  422358:	lock std 
  42235a:	xor    edx,DWORD PTR [eax+edx*1]
  42235d:	sub    ecx,DWORD PTR [ecx]
  42235f:	mov    ecx,0xb1dbd840
  422364:	shr    DWORD PTR ds:0x6734963a,1
  42236a:	inc    edx
  42236b:	or     cl,cl
  42236d:	std    
  42236e:	js     0x4222f0
  422370:	lods   eax,DWORD PTR ds:[esi]
  422371:	mov    BYTE PTR [edi-0x34],ah
  422374:	daa    
  422375:	out    dx,eax
  422376:	sar    DWORD PTR [edi+ebx*8-0x7f],1
  42237a:	jg     0x42237e
  42237c:	pop    esp
  42237d:	test   eax,0xf86fcb85
  422382:	test   BYTE PTR [ecx+0x7aed702a],al
  422388:	dec    eax
  422389:	pop    ebp
  42238a:	jns    0x4223d9
  42238c:	test   DWORD PTR [ebx+0x37],esi
  42238f:	add    ch,BYTE PTR [eax-0x6d91475b]
  422395:	iret   
  422396:	adc    eax,0x8c820ff4
  42239b:	xchg   dl,bh
  42239d:	retf   0xb7fa
  4223a0:	sbb    BYTE PTR [ecx-0xdaada7f],al
  4223a6:	cmp    bl,BYTE PTR [ebx-0x73]
  4223a9:	fwait
  4223aa:	cli    
  4223ab:	lock jnp 0x422390
  4223ae:	add    DWORD PTR [ecx],esi
  4223b0:	pop    ecx
  4223b1:	jmp    0x4223f8
  4223b3:	les    esi,FWORD PTR [edi+0x50918116]
  4223b9:	aad    0x78
  4223bb:	dec    esi
  4223bc:	outs   dx,DWORD PTR ds:[esi]
  4223bd:	xchg   edx,eax
  4223be:	jb     0x422377
  4223c0:	push   eax
  4223c1:	das    
  4223c2:	jmp    0x5370:0xa78db6bf
  4223c9:	inc    esi
  4223ca:	inc    eax
  4223cb:	mov    al,0xfd
  4223cd:	sbb    BYTE PTR [ecx+0x71a85107],dl
  4223d3:	jl     0x422390
  4223d5:	pop    ebx
  4223d6:	in     eax,dx
  4223d7:	mov    edx,0x7f458351
  4223dc:	xchg   ebx,eax
  4223dd:	leave  
  4223de:	jg     0x422459
  4223e0:	popa   
  4223e1:	mov    ds:0x78979b6a,eax
  4223e6:	mov    edx,0x1091fca
  4223eb:	addr16 out dx,eax
  4223ed:	scas   al,BYTE PTR es:[edi]
  4223ee:	call   0x3678:0x39860504
  4223f5:	lock jbe 0x4223e1
  4223f8:	and    cl,BYTE PTR [ebx-0x281e8e12]
  4223fe:	ficomp DWORD PTR [ebp-0x4]
  422401:	sar    BYTE PTR [edx-0x69],0x29
  422405:	xor    ah,BYTE PTR [edx+0x58b37638]
  42240b:	retf   
  42240c:	and    eax,0xffffff90
  42240f:	jle    0x4223c7
  422411:	call   FWORD PTR [ebx]
  422413:	aam    0x35
  422415:	nop    DWORD PTR [eax]
  422418:	cmp    al,0x7
  42241a:	int3   
  42241b:	lods   eax,DWORD PTR ds:[esi]
  42241c:	pop    eax
  42241d:	ss (bad) 
  42241f:	mov    WORD PTR [ebx-0x595b6be3],?
  422425:	push   esi
  422426:	push   es
  422427:	ins    BYTE PTR es:[edi],dx
  422428:	mov    ebp,0xab31239f
  42242d:	sub    esp,ebx
  42242f:	mov    bl,0x86
  422431:	add    DWORD PTR [edx-0x49f26270],ebx
  422437:	(bad)  
  422439:	mov    al,0xa2
  42243b:	mov    ah,0xc8
  42243d:	lods   al,BYTE PTR ds:[esi]
  42243e:	lds    ecx,FWORD PTR [esi-0x508cd420]
  422444:	mov    al,ds:0xa4210148
  422449:	sbb    ch,al
  42244b:	mov    bl,BYTE PTR [ebp+edx*1-0x5226c408]
  422452:	je     0x42245d
  422454:	mov    dl,0x94
  422456:	push   0xffffffb3
  422458:	sar    bh,0x61
  42245b:	aas    
  42245c:	cwde   
  42245d:	jmp    0xad681545
  422462:	shr    DWORD PTR [ecx-0xf9b45b2],0xef
  422469:	sbb    bh,dh
  42246b:	mov    edi,0x5025f931
  422470:	mov    ecx,0x80173874
  422475:	jmp    0x1fdcc4ed
  42247a:	test   al,0x9f
  42247c:	arpl   di,si
  42247e:	ins    DWORD PTR es:[edi],dx
  42247f:	test   al,0x52
  422481:	inc    ecx
  422482:	sub    al,0x5d
  422484:	pop    esi
  422485:	stc    
  422486:	push   esp
  422487:	xor    ebp,edi
  422489:	outs   dx,DWORD PTR ds:[esi]
  42248a:	push   ecx
  42248b:	jmp    0x27b40e7d
  422490:	adc    ch,bh
  422492:	rcl    DWORD PTR [esi-0x4b6f7f10],1
  422498:	(bad)  
  422499:	adc    cl,BYTE PTR [ebx]
  42249b:	ins    BYTE PTR es:[edi],dx
  42249c:	cdq    
  42249d:	xlat   BYTE PTR ds:[ebx]
  42249e:	push   DWORD PTR [ebp-0x24]
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425836
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0xe52776ec
  4242c9:	pop    ebp
  4242ca:	sub    bl,BYTE PTR [ecx]
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c93df],0xf3
  4242d5:	pop    ecx
  4242d6:	lds    ecx,FWORD PTR [esi-0x29e28464]
  4242dc:	jno    0x4242d8
  4242de:	push   esi
  4242df:	mov    ds:0xd4c79636,eax
  4242e4:	jo     0x424330
  4242e6:	les    ebp,FWORD PTR [eax+0x61]
  4242e9:	loopne 0x424281
  4242eb:	mov    edi,0xd5e8884a
  4242f0:	jns    0x424274
  4242f2:	dec    ebp
  4242f3:	pusha  
  4242f4:	stos   DWORD PTR es:[edi],eax
  4242f5:	adc    edx,eax
  4242f7:	ds (bad) 
  4242f9:	pop    ss
  4242fa:	fnstenv [eax-0x359b6f1c]
  424300:	outs   dx,BYTE PTR ds:[esi]
  424301:	test   edi,eax
  424303:	fs xor esi,ebp
  424306:	add    cl,ch
  424308:	cdq    
  424309:	fbstp  TBYTE PTR fs:[edi-0x4e9e7d7f]
  424310:	adc    dl,BYTE PTR [si]
  424313:	xor    al,ch
  424315:	outs   dx,BYTE PTR ds:[esi]
  424316:	sbb    eax,0x7667abc6
  42431b:	daa    
  42431c:	jns    0x424343
  42431e:	sub    al,0x34
  424320:	mov    ecx,0xb3d71225
  424325:	add    esi,DWORD PTR [edi+0x25cf0968]
  42432b:	fstp   TBYTE PTR [ebx+0x3]
  42432e:	cwde   
  42432f:	mov    edx,0x14d4cd69
  424334:	xchg   ebp,edx
  424336:	mov    al,ds:0xb42dd37d
  42433b:	lds    ebp,FWORD PTR ds:0x8ac3ffef
  424341:	ja     0x424323
  424343:	adc    al,0xee
  424345:	adc    BYTE PTR [edx+0xc],0x2a
  424349:	or     al,0xa3
  42434b:	dec    edi
  42434c:	mov    cl,0xd5
  42434e:	jbe    0x424326
  424350:	dec    edi
  424351:	cmp    al,0x94
  424353:	call   0x105a:0x8f1acec1
  42435a:	cmp    DWORD PTR [esi-0xdadac78],0x906fab0f
  424364:	into   
  424365:	add    DWORD PTR [ebx+esi*2+0x20213fea],esp
  42436c:	mov    ecx,ebx
  42436e:	cmp    DWORD PTR [ebx-0x6f],ecx
  424371:	div    DWORD PTR [edi+0x22c0513]
  424377:	(bad)  
  424378:	fwait
  424379:	sbb    ch,BYTE PTR [eax-0x26]
  42437c:	es cwde 
  42437e:	aam    0xe9
  424380:	add    esi,DWORD PTR [ecx-0x61aceb84]
  424386:	mov    BYTE PTR [eax+eax*2-0xcf7fb06],bh
  42438d:	sub    DWORD PTR [edi-0x9],ebp
  424390:	jbe    0x424350
  424392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424393:	jg     0x424328
  424395:	adc    cl,al
  424397:	mov    ah,0xdb
  424399:	mov    ds:0xff32ff8b,al
  42439e:	and    al,0xc7
  4243a0:	mov    al,0xcf
  4243a2:	push   ebp
  4243a3:	rol    ah,0xf8
  4243a6:	jmp    0x2100:0x891371c9
  4243ad:	gs pushf 
  4243af:	pop    ebx
  4243b0:	(bad)  
  4243b1:	fwait
  4243b2:	rcl    bh,1
  4243b4:	cli    
  4243b5:	popa   
  4243b6:	jmp    0x3f4d:0xbba93c60
  4243bd:	data16 jl 0x42439e
  4243c0:	das    
  4243c1:	das    
  4243c2:	jns    0x424345
  4243c4:	inc    esp
  4243c5:	fild   DWORD PTR [esp+edi*2]
  4243c8:	mov    ebx,0x6dc198a8
  4243cd:	cmp    BYTE PTR [ecx],bl
  4243cf:	pop    ds
  4243d0:	xchg   esi,eax
  4243d1:	pop    ebx
  4243d2:	xor    eax,0xdbaa8d9f
  4243d7:	ins    BYTE PTR es:[edi],dx
  4243d8:	fsub   QWORD PTR [ebp-0x7a]
  4243db:	add    eax,0x39296079
  4243e0:	setnp  BYTE PTR [ecx+0x22c110a1]
  4243e7:	mov    eax,0xdb7cc982
  4243ec:	sbb    bl,al
  4243ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243ef:	dec    esi
  4243f0:	dec    esp
  4243f1:	or     DWORD PTR [ecx*2+0x4f485dce],ebx
  4243f8:	loope  0x424381
  4243fa:	out    dx,al
  4243fb:	ds addr16 mov eax,0x1528576a
  424402:	fcomp  DWORD PTR [edx-0x2d]
  424405:	aam    0xa1
  424407:	arpl   WORD PTR [edx],bp
  424409:	pop    es
  42440a:	test   eax,0x1582cd57
  42440f:	cmc    
  424410:	xor    eax,0x65e3f5b7
  424415:	sbb    eax,0x8db45caf
  42441a:	or     al,0xea
  42441c:	mov    dl,0x2a
  42441e:	jmp    FWORD PTR [edi+0x1d]
  424421:	in     eax,0xd5
  424423:	mov    cl,0xbd
  424425:	pop    esi
  424426:	add    eax,0x64f04ecf
  42442b:	jbe    0x424421
  42442d:	mov    bh,0x8c
  42442f:	mov    bl,0x23
  424431:	dec    eax
  424432:	cmp    eax,0xc6862f4
  424437:	lahf   
  424438:	cmp    BYTE PTR [eax],dh
  42443a:	jae    0x424432
  42443c:	ficom  WORD PTR [esi]
  42443e:	sub    ecx,edi
  424440:	add    DWORD PTR [edi],esi
  424442:	sub    BYTE PTR [ebx-0x37],ch
  424445:	fninit 
  424447:	repnz sbb DWORD PTR [esi],ebx
  42444a:	stos   DWORD PTR es:[edi],eax
  42444b:	test   BYTE PTR [esi],dh
  42444d:	stos   DWORD PTR es:[edi],eax
  42444e:	idiv   dh
  424450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424451:	xor    BYTE PTR [edi+ecx*1+0x2f],0xed
  424456:	fwait
  424457:	loope  0x424433
  424459:	out    0x27,al
  42445b:	neg    DWORD PTR [edi]
  42445d:	lds    edx,FWORD PTR ds:[esi+esi*8+0xf]
  424462:	xor    al,0xb2
  424464:	(bad)  
  424465:	mov    ecx,0x65c7ac1f
  42446a:	and    eax,0x56077e9e
  424470:	out    dx,eax
  424471:	push   cs
  424472:	sub    al,0xb9
  424474:	add    DWORD PTR [ebx],0xffffff9c
  424477:	mov    ecx,0xe990b189
  42447c:	push   ds
  42447d:	pop    edx
  42447e:	lea    edi,[edi-0x18]
  424481:	or     ecx,DWORD PTR [edx]
  424483:	cmp    cl,BYTE PTR [edx+edi*4+0x12580931]
  42448a:	lock mov esp,0x51a7a5bc
  424490:	or     ebx,ecx
  424492:	inc    eax
  424493:	in     eax,dx
  424494:	loope  0x4244a9
  424496:	jbe    0x424423
  424498:	add    dh,ah
  42449a:	out    dx,al
  42449b:	dec    dl
  42449d:	rol    BYTE PTR [eax+0x57],1
  4244a0:	xor    bh,bl
  4244a2:	ja     0x424466
  4244a4:	cmc    
  4244a5:	mov    dh,0x45
  4244a7:	push   ecx
  4244a8:	(bad)  
  4244a9:	sbb    BYTE PTR es:[edx+0x19a46df8],dl
  4244b0:	mov    ebp,0x2dec6d6c
  4244b5:	fucomip st,st(3)
  4244b7:	lahf   
  4244b8:	jbe    0x4244ef
  4244ba:	mov    al,0xcb
  4244bc:	sub    BYTE PTR [ecx+0x7],bl
  4244bf:	dec    ebp
  4244c0:	sbb    BYTE PTR [esp+eiz*4-0x49],dh
  4244c4:	cwde   
  4244c5:	std    
  4244c6:	inc    ecx
  4244c7:	jnp    0x4244a5
  4244c9:	and    DWORD PTR [esi],0x58e062e5
  4244cf:	sbb    eax,0xddb11564
  4244d4:	add    eax,0x3c383f05
  4244d9:	arpl   WORD PTR [ecx+0x3c],bp
  4244dc:	mov    eax,0xc0121cfa
  4244e1:	bound  esp,QWORD PTR [ebp+0x5a]
  4244e4:	leave  
  4244e5:	ret    
  4244e6:	(bad)  
  4244e7:	sbb    eax,0x11ce0142
  4244ec:	sbb    esi,DWORD PTR [ebx]
  4244ee:	sar    DWORD PTR [esi+eiz*4+0x31b35e46],1
  4244f5:	inc    eax
  4244f6:	jb     0x424512
  4244f8:	adc    ch,dl
  4244fa:	xor    dl,BYTE PTR [edx]
  4244fc:	fldcw  WORD PTR [eax+0x30602789]
  424502:	call   0x68b6:0xde6342ee
  424509:	xor    ch,0x98
  42450c:	(bad)  
  42450e:	sub    bh,BYTE PTR [eax-0x7a]
  424511:	shr    BYTE PTR [ebp-0x2c],cl
  424514:	ret    0xb009
  424517:	add    ch,ah
  424519:	in     al,dx
  42451a:	push   eax
  42451b:	mov    ds:0xbe3227d3,al
  424520:	loop   0x42456e
  424522:	xor    al,0x32
  424524:	add    esp,DWORD PTR [edi]
  424526:	mov    bh,0xa9
  424528:	sahf   
  424529:	ins    BYTE PTR es:[edi],dx
  42452a:	adc    eax,0xe3db4899
  42452f:	rcr    BYTE PTR [edx],cl
  424531:	xor    DWORD PTR ds:0xa442984d,eax
  424537:	loope  0x424578
  424539:	sub    eax,0x9f048968
  42453e:	imul   edx,edi,0xffffffc3
  424541:	lods   al,BYTE PTR ds:[esi]
  424542:	gs stos BYTE PTR es:[edi],al
  424544:	and    BYTE PTR [esi-0x65e9da52],ch
  42454a:	pop    esp
  42454b:	stos   DWORD PTR es:[edi],eax
  42454c:	iret   
  42454d:	leave  
  42454e:	inc    edi
  42454f:	inc    esp
  424550:	fisubr DWORD PTR [edi-0x8df2d4d]
  424556:	xor    al,0x68
  424558:	xchg   esp,eax
  424559:	test   eax,0x4d3b5c45
  42455e:	in     eax,dx
  42455f:	int    0x4d
  424561:	mov    al,0x45
  424563:	hlt    
  424564:	in     al,dx
  424565:	mov    bl,0xa5
  424567:	cdq    
  424568:	scas   al,BYTE PTR es:[edi]
  424569:	mov    ds:0xfc2d07ef,eax
  42456e:	es call 0x5c81:0x7674699b
  424576:	inc    edi
  424577:	sbb    al,0xbe
  424579:	cmp    al,dh
  42457b:	mov    edi,edi
  42457d:	nop
  42457e:	inc    edx
  42457f:	pop    ebp
  424580:	pop    esp
  424581:	and    al,0x65
  424583:	fs sub eax,0x8cf4950d
  424589:	vaddsubps ymm1,ymm0,ymm6
  42458d:	retf   0x95b5
  424590:	mov    ch,0xd1
  424592:	mov    al,ds:0x9f002078
  424597:	(bad)  
  424598:	or     al,0xbe
  42459a:	fiadd  WORD PTR [edx]
  42459c:	mov    ah,BYTE PTR [ecx+edx*1]
  42459f:	pop    ebx
  4245a0:	push   edx
  4245a1:	mov    bl,0xa9
  4245a3:	outs   dx,BYTE PTR ds:[esi]
  4245a4:	push   ss
  4245a5:	icebp  
  4245a6:	xor    al,0x5c
  4245a8:	sti    
  4245a9:	pushf  
  4245aa:	daa    
  4245ab:	gs sbb bl,bl
  4245ae:	cmovbe eax,DWORD PTR [ecx-0x60]
  4245b2:	mov    ss,WORD PTR [esp+esi*1+0x21ce3150]
  4245b9:	pop    ds
  4245ba:	xchg   ebx,eax
  4245bb:	mov    esi,0x2ae4b725
  4245c0:	imul   DWORD PTR [eax-0x76]
  4245c3:	shr    BYTE PTR [ebp+0x4c],cl
  4245c6:	loope  0x424576
  4245c8:	or     esi,0xffffff94
  4245cb:	cwde   
  4245cc:	adc    dh,cl
  4245ce:	gs jmp 0x1ab6:0x7571bcdc
  4245d6:	push   ecx
  4245d7:	mov    al,0x72
  4245d9:	pop    es
  4245da:	and    eax,0xc9877fa3
  4245df:	aad    0x47
  4245e1:	pop    edi
  4245e2:	cdq    
  4245e3:	xchg   edi,eax
  4245e4:	js     0x4245ec
  4245e6:	jl     0x424582
  4245e8:	dec    esp
  4245e9:	ror    DWORD PTR [esi],cl
  4245eb:	stc    
  4245ec:	stos   DWORD PTR es:[edi],eax
  4245ed:	jae    0x424641
  4245ef:	mov    ah,0x8
  4245f1:	cld    
  4245f2:	outs   dx,BYTE PTR ds:[esi]
  4245f3:	mov    ebx,0x36a1e5de
  4245f8:	or     esi,DWORD PTR [eax-0x42]
  4245fb:	dec    edi
  4245fc:	test   eax,0xc34eacb7
  424601:	ud1    esp,DWORD PTR [eax]
  424604:	xor    ecx,DWORD PTR [eax+0x5dfcf59c]
  42460a:	into   
  42460b:	mov    dl,0xae
  42460d:	jp     0x4245fe
  42460f:	out    dx,al
  424610:	mov    esi,0x5c26ad7b
  424615:	inc    esp
  424616:	sbb    esi,DWORD PTR [esi-0x6b6ad134]
  42461c:	jp     0x424656
  42461e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42461f:	fisttp DWORD PTR [edi]
  424621:	inc    ecx
  424622:	aas    
  424623:	mov    ds:0xd0193e9c,eax
  424628:	and    eax,DWORD PTR [ebx-0x68748fe3]
  42462e:	add    DWORD PTR [ecx+0x18],edi
  424631:	mov    DWORD PTR [edi-0x3d5adad0],esi
  424637:	iret   
  424638:	and    esp,edx
  42463a:	jecxz  0x42466e
  42463c:	dec    edi
  42463d:	or     al,0x6b
  42463f:	jmp    0x9d47:0xd8f7f34
  424646:	sti    
  424647:	jg     0x424619
  424649:	movsx  eax,ax
  42464c:	iret   
  42464d:	stos   BYTE PTR es:[edi],al
  42464e:	cld    
  42464f:	ja     0x42462b
  424651:	leave  
  424652:	sbb    esp,esp
  424654:	nop
  424655:	mov    ah,BYTE PTR [ebp+0x1bbb85f8]
  42465b:	stc    
  42465c:	loope  0x424637
  42465e:	add    BYTE PTR [esi+0x3f5bb0dc],cl
  424664:	push   ss
  424665:	inc    ebx
  424666:	test   DWORD PTR [eax],ebp
  424668:	jnp    0x4246c2
  42466a:	test   eax,0xe1f59114
  42466f:	pushf  
  424670:	jmp    0x4246a7
  424672:	xor    BYTE PTR [eax],ch
  424674:	cmp    al,0x1
  424676:	fadd   DWORD PTR ds:0x10989ac1
  42467c:	ins    DWORD PTR es:[edi],dx
  42467d:	retf   0xcb91
  424680:	sbb    dl,BYTE PTR [ecx-0x10]
  424683:	imul   ebx,DWORD PTR [edi+eax*4],0xa06d3053
  42468a:	xchg   DWORD PTR [eax-0x61],ebx
  42468d:	lods   al,BYTE PTR ds:[esi]
  42468e:	add    DWORD PTR [eax],esp
  424690:	(bad)  
  424691:	or     eax,0xc5781d78
  424696:	jmp    0x424714
  424698:	mov    ds:0xf98546a7,al
  42469d:	jb     0x4246a6
  42469f:	loope  0x4246f4
  4246a1:	mov    ecx,0x2fbfaf75
  4246a6:	mov    DWORD PTR [ecx],eax
  4246a8:	xor    al,0x17
  4246aa:	fcmovb st,st(2)
  4246ac:	stos   BYTE PTR es:[edi],al
  4246ad:	xor    ebx,DWORD PTR [ebx-0x33]
  4246b0:	hlt    
  4246b1:	cld    
  4246b2:	pop    esp
  4246b3:	test   BYTE PTR [esp+ecx*8-0x489d7035],bh
  4246ba:	inc    edx
  4246bb:	dec    ecx
  4246bc:	sbb    DWORD PTR [ebx],edx
  4246be:	or     dl,dh
  4246c0:	ins    BYTE PTR es:[edi],dx
  4246c1:	dec    ebp
  4246c2:	popa   
  4246c3:	mov    ds:0x11aeb1e1,eax
  4246c8:	cwde   
  4246c9:	dec    esp
  4246ca:	inc    edx
  4246cb:	out    0x7,al
  4246cd:	rcl    bh,1
  4246cf:	loope  0x42470e
  4246d1:	std    
  4246d2:	pop    ss
  4246d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246d4:	jle    0x4246b1
  4246d6:	mov    ebx,0xccc6b689
  4246db:	sahf   
  4246dc:	sbb    dh,BYTE PTR [edx+esi*4]
  4246df:	in     eax,0x1c
  4246e1:	ret    
  4246e2:	add    al,0xcd
  4246e4:	cld    
  4246e5:	mov    BYTE PTR [ecx],ah
  4246e7:	scas   al,BYTE PTR es:[edi]
  4246e8:	retf   0x4341
  4246eb:	daa    
  4246ec:	fstp   DWORD PTR [edx+ebx*8-0x54006522]
  4246f3:	push   cs
  4246f4:	sub    al,0x85
  4246f6:	jmp    0x701444dd
  4246fb:	xchg   DWORD PTR [esi-0x5e],edi
  4246fe:	dec    esi
  4246ff:	loope  0x4246a6
  424701:	jae    0x424704
  424703:	jo     0x4246e1
  424705:	mov    dl,0x7f
  424707:	mov    al,ds:0xb2bb0745
  42470c:	mov    ecx,esp
  42470e:	daa    
  42470f:	or     bl,ah
  424711:	jo     0x4246eb
  424713:	mov    ecx,0xd39f9ed0
  424718:	dec    DWORD PTR [esi]
  42471a:	aaa    
  42471b:	xor    al,0xe7
  42471d:	mov    edx,DWORD PTR [esi+0x4d]
  424720:	push   esp
  424721:	ins    DWORD PTR es:[edi],dx
  424722:	mov    WORD PTR [ebx+0x30],fs
  424725:	enter  0x80f4,0x46
  424729:	pop    edx
  42472a:	push   0x863181a5
  42472f:	(bad)  
  424730:	push   ecx
  424731:	dec    ebp
  424732:	call   0x84325c0c
  424737:	out    dx,eax
  424738:	aaa    
  424739:	mov    ah,0xee
  42473b:	xchg   BYTE PTR [ecx-0x18a42cdc],cl
  424741:	adc    BYTE PTR [esi],cl
  424743:	shl    BYTE PTR [esi-0x3086137f],1
  424749:	into   
  42474a:	jno    0x424768
  42474c:	cmp    eax,0xad5d919a
  424751:	adc    esp,DWORD PTR [edx]
  424753:	jle    0x4246dd
  424755:	imul   ebx,DWORD PTR gs:[eax+0x11],0xc77da1e3
  42475d:	xchg   edi,eax
  42475e:	jge    0x424760
  424760:	and    ah,cl
  424762:	test   DWORD PTR [ecx+ebx*4-0x1a],esi
  424766:	sub    BYTE PTR ds:0x2aac366f,0x24
  42476d:	push   edx
  42476e:	out    dx,eax
  42476f:	cmc    
  424770:	lods   eax,DWORD PTR ds:[esi]
  424771:	leave  
  424772:	stos   BYTE PTR es:[edi],al
  424773:	jmp    0xf589e1be
  424778:	jb     0x4246fd
  42477a:	xchg   ebx,eax
  42477b:	loopne 0x424768
  42477d:	(bad)  
  42477e:	push   esp
  42477f:	ss rcr cl,0xbc
  424783:	jl     0x42476f
  424785:	call   0x9532:0xd50f90c1
  42478c:	int    0xb0
  42478e:	pusha  
  42478f:	xor    eax,0x77b776c2
  424794:	jo     0xad3d0b85
  42479a:	aam    0xb6
  42479c:	jns    0x4247d6
  42479e:	lods   eax,DWORD PTR ds:[esi]
  42479f:	and    esp,ebx
  4247a1:	jecxz  0x424775
  4247a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247a4:	cmp    ebx,DWORD PTR [edx]
  4247a6:	stos   DWORD PTR es:[edi],eax
  4247a7:	mov    eax,ds:0xc7307617
  4247ac:	push   cs
  4247ad:	mov    ah,0x10
  4247af:	mov    ds:0x697f3e93,al
  4247b4:	and    bh,ch
  4247b6:	inc    edi
  4247b7:	push   edx
  4247b8:	adc    BYTE PTR [edi],al
  4247ba:	fdivr  DWORD PTR [ebp+0x79d0d52f]
  4247c0:	fwait
  4247c1:	pop    ebp
  4247c2:	jge    0x424750
  4247c4:	mov    esi,es
  4247c6:	xchg   ebx,eax
  4247c7:	lea    esp,[ebx+eax*2-0x71ada276]
  4247ce:	repz or BYTE PTR [eax],ch
  4247d1:	xor    al,BYTE PTR [edx]
  4247d3:	mov    BYTE PTR [ebx-0x6f8ae722],ah
  4247d9:	mov    edi,0x71636c2e
  4247de:	inc    ebp
  4247df:	mov    esi,0x9ed5f85
  4247e4:	and    DWORD PTR [ecx-0x38810d80],esp
  4247ea:	test   al,0x43
  4247ec:	jo     0x424833
  4247ee:	(bad)  
  4247ef:	iret   
  4247f0:	aas    
  4247f1:	mov    cl,0x63
  4247f3:	in     eax,dx
  4247f4:	repz sub BYTE PTR [esi],bh
  4247f7:	data16 gs (bad) 
  4247fa:	and    BYTE PTR [eax-0x65],ah
  4247fd:	push   edi
  4247fe:	xchg   eax,edx
  424800:	adc    BYTE PTR [esi-0x5],0x1c
  424804:	inc    edx
  424805:	jbe    0x42485e
  424807:	adc    BYTE PTR [edx+edi*4-0x40],0xc8
  42480c:	cmp    DWORD PTR [ebp*2+0xc9018ea],eax
  424813:	(bad)  
  424814:	cld    
  424815:	adc    ecx,DWORD PTR [edi-0x3daa8fc2]
  42481b:	xchg   esp,eax
  42481c:	into   
  42481d:	jl     0x424828
  42481f:	and    DWORD PTR [ebx-0x6bca148d],ebx
  424825:	mov    ds:0xb0762c28,eax
  42482a:	pop    ebp
  42482b:	mov    edx,edx
  42482d:	out    dx,al
  42482e:	mov    edi,0xeecb6618
  424833:	inc    BYTE PTR [ebp-0x50]
  424836:	mov    fs,WORD PTR [ecx-0x37563f1a]
  42483c:	ins    BYTE PTR es:[edi],dx
  42483d:	fsubr  QWORD PTR [eax+ebp*2-0x29b3fb0c]
  424844:	push   esi
  424845:	addr16 daa 
  424847:	xor    al,0x7d
  424849:	sub    dl,BYTE PTR [ebx-0x1d424c39]
  42484f:	aas    
  424850:	adc    eax,0xb8d5e6e4
  424855:	cmp    al,0x94
  424857:	sti    
  424858:	sbb    esi,edx
  42485a:	push   esi
  42485b:	mov    edx,0xf4e3c827
  424860:	jmp    0x787c:0x5ff89ad7
  424867:	int3   
  424868:	jae    0x424840
  42486a:	dec    esp
  42486b:	cmp    al,BYTE PTR [edx-0x42]
  42486e:	gs imul edi,edx,0xea7a1980
  424875:	icebp  
  424876:	add    esp,ecx
  424878:	aam    0xb2
  42487a:	(bad)  
  42487b:	in     eax,0xdf
  42487d:	stos   DWORD PTR es:[edi],eax
  42487e:	bound  ecx,QWORD PTR [edi-0x3]
  424881:	js     0x42488a
  424883:	cmp    al,0xce
  424885:	lea    ebp,[esi-0xb]
  424888:	test   al,0xbe
  42488a:	pop    es
  42488b:	out    dx,eax
  42488c:	or     eax,0x2e7fed30
  424891:	dec    eax
  424892:	jge    0x424849
  424894:	adc    eax,0x764999b7
  424899:	mov    edi,0x6d8eb615
  42489e:	popf   
  42489f:	enter  0xc75f,0x74
  4248a3:	pop    ebp
  4248a4:	and    BYTE PTR [ecx],dl
  4248a6:	dec    esp
  4248a7:	inc    eax
  4248a8:	cld    
  4248a9:	jno    0x4248f3
  4248ab:	inc    ecx
  4248ac:	inc    esp
  4248ad:	mov    ecx,0xc3f918ab
  4248b2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248b4:	(bad)  
  4248b5:	call   DWORD PTR [ebx+0x5a85f66c]
  4248bb:	cwde   
  4248bc:	ja     0x424877
  4248be:	jle    0x4248c1
  4248c0:	pushf  
  4248c1:	push   ds
  4248c2:	sbb    ebx,DWORD PTR [ebx]
  4248c4:	mov    al,ds:0x4346a262
  4248c9:	and    BYTE PTR [eax+0x6f],dl
  4248cc:	cli    
  4248cd:	jns    0x4248a8
  4248cf:	retf   
  4248d0:	pop    es
  4248d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248d2:	fld    TBYTE PTR [ecx]
  4248d4:	pop    ds
  4248d5:	add    BYTE PTR [ecx-0x6b20e010],bh
  4248db:	leave  
  4248dc:	bound  edi,QWORD PTR [edx+0x2a]
  4248df:	loope  0x424886
  4248e1:	adc    eax,0xb49e1b9f
  4248e6:	fmul   DWORD PTR [edx+0x18de8a9e]
  4248ec:	pop    es
  4248ed:	pop    ebx
  4248ee:	mov    ebx,0xc36b76f6
  4248f3:	cs out dx,eax
  4248f5:	dec    esp
  4248f6:	sti    
  4248f7:	push   esp
  4248f8:	mov    bh,dl
  4248fa:	mov    bh,0x29
  4248fc:	push   ds
  4248fd:	and    cl,ch
  4248ff:	mov    ecx,0x1301f7cd
  424904:	xor    ah,BYTE PTR [ebx]
  424906:	mov    ecx,0xa9ba63d3
  42490b:	fbstp  TBYTE PTR [esi+0x58da0eb9]
  424911:	add    DWORD PTR [ecx-0x3f],ebp
  424914:	(bad)  
  424915:	inc    esp
  424916:	pop    ss
  424917:	fiadd  DWORD PTR [eax]
  424919:	push   es
  42491a:	aas    
  42491b:	sub    al,0xf1
  42491d:	dec    ebp
  42491e:	push   0x5d
  424920:	js     0x424948
  424922:	mov    ecx,0xa46c35e8
  424927:	stos   BYTE PTR es:[edi],al
  424928:	imul   esp,esp,0xa3d49b43
  42492e:	mov    ecx,DWORD PTR [edx+0x5e5b8f06]
  424934:	inc    esi
  424935:	(bad)  
  424936:	xlat   BYTE PTR ds:[ebx]
  424937:	cld    
  424938:	call   0xc92f913b
  42493d:	pop    edx
  42493e:	test   BYTE PTR [eax+esi*1+0x44],cl
  424942:	addr16 push cs
  424944:	and    DWORD PTR gs:[edx+0x77],edi
  424948:	outs   dx,BYTE PTR ds:[esi]
  424949:	mul    DWORD PTR [edx-0x50]
  42494c:	lea    ecx,ds:0xa27770e5
  424952:	nop
  424953:	or     DWORD PTR [edx],ebx
  424955:	scas   al,BYTE PTR es:[edi]
  424956:	mov    eax,ds:0x5f55ffd
  42495b:	push   edx
  42495c:	cmp    ebx,DWORD PTR [ecx]
  42495e:	mov    ds:0x66505d43,al
  424963:	kunpckwd k2,k4,k0
  424967:	cmp    al,0x24
  424969:	out    0x3c,al
  42496b:	outs   dx,BYTE PTR ds:[esi]
  42496c:	adc    eax,0x39dea31e
  424971:	mul    BYTE PTR [edx-0x1710968b]
  424977:	push   cs
  424978:	ror    DWORD PTR [edi],cl
  42497a:	jmp    0x557985ce
  42497f:	lahf   
  424980:	mov    al,ds:0x65290bff
  424985:	mov    ds:0xf644893a,eax
  42498a:	push   cs
  42498b:	cld    
  42498c:	mov    esi,0x97fcacbd
  424991:	test   eax,edx
  424993:	mul    edi
  424995:	dec    esp
  424996:	pop    ss
  424997:	xor    DWORD PTR [esi],esp
  424999:	sbb    DWORD PTR [esi],eax
  42499b:	pop    esi
  42499c:	mov    al,0xb4
  42499e:	popf   
  42499f:	sbb    al,0x18
  4249a1:	push   es
  4249a2:	in     eax,dx
  4249a3:	push   edi
  4249a4:	adc    al,0x5b
  4249a6:	push   0x14b1c21f
  4249ab:	xchg   ebp,eax
  4249ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249ad:	and    DWORD PTR [ecx-0x4a9de0f1],esi
  4249b3:	mov    ecx,ecx
  4249b5:	push   ds
  4249b6:	xor    BYTE PTR [esi+0x73275094],0xe5
  4249bd:	cld    
  4249be:	add    BYTE PTR [esi],0x22
  4249c1:	pushf  
  4249c2:	jno    0x4249a8
  4249c4:	mov    al,ds:0xf7f05233
  4249c9:	sub    eax,0x66c1b0ac
  4249ce:	mov    edi,0xc9f45363
  4249d3:	push   edi
  4249d4:	loopne 0x424971
  4249d6:	xor    BYTE PTR [ebp+0x773dfa86],dl
  4249dc:	stos   DWORD PTR es:[edi],eax
  4249dd:	mov    eax,ds:0x97400858
  4249e2:	cmp    DWORD PTR [esi-0x1b8f981e],0xcdf32df4
  4249ec:	mov    eax,0xb3e8d157
  4249f1:	pop    ss
  4249f2:	xchg   esp,eax
  4249f3:	fld    TBYTE PTR [edx-0x3063e7f8]
  4249f9:	call   FWORD PTR [eax+esi*1+0x70]
  4249fd:	ins    BYTE PTR es:[edi],dx
  4249fe:	jmp    0x118dad58
  424a03:	stos   DWORD PTR es:[edi],eax
  424a04:	gs inc ebx
  424a06:	scas   eax,DWORD PTR es:[edi]
  424a07:	dec    edi
  424a08:	xchg   ebx,eax
  424a09:	test   DWORD PTR [ebx],esp
  424a0b:	(bad)
  424a0f:	adc    ecx,esi
  424a11:	inc    edx
  424a12:	in     al,dx
  424a13:	(bad)  
  424a14:	shr    ebp,1
  424a16:	stos   DWORD PTR es:[edi],eax
  424a17:	add    DWORD PTR [edi],esi
  424a19:	sbb    BYTE PTR [edi],ch
  424a1b:	mov    al,0xd1
  424a1d:	push   ebx
  424a1e:	mov    edx,fs
  424a20:	xchg   ebp,eax
  424a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a22:	push   eax
  424a23:	sti    
  424a24:	scas   al,BYTE PTR es:[edi]
  424a25:	cmp    ebx,edi
  424a27:	xchg   DWORD PTR [edi-0x1713f1dc],ecx
  424a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a2e:	shl    esp,1
  424a30:	dec    esp
  424a31:	(bad)  
  424a32:	jo     0x424a37
  424a34:	call   0x119c:0xee96449a
  424a3b:	seto   BYTE PTR [ecx-0x4f7bfd06]
  424a42:	sti    
  424a43:	sub    edx,DWORD PTR [eax-0x303d2757]
  424a49:	jle    0x424a42
  424a4b:	out    dx,al
  424a4c:	mov    bh,0x95
  424a4e:	inc    edx
  424a4f:	test   BYTE PTR [edi],bl
  424a51:	mov    ch,0x20
  424a53:	js     0x424aa6
  424a55:	lods   eax,DWORD PTR ds:[esi]
  424a56:	cwde   
  424a57:	call   0x9254bb1
  424a5c:	xor    eax,0x72360bec
  424a61:	pop    esp
  424a62:	jno    0x424a82
  424a64:	call   0xa5095c51
  424a69:	leave  
  424a6a:	or     dh,BYTE PTR [ebx+0x53]
  424a6d:	js     0x424ac8
  424a6f:	retf   
  424a70:	das    
  424a71:	cmp    DWORD PTR [esi+0x752d0ada],edx
  424a77:	jb     0x424a91
  424a79:	mov    ecx,0xab8ea565
  424a7e:	jl     0x424a42
  424a80:	(bad)  
  424a81:	fdiv   st(0),st
  424a83:	jae    0x424a54
  424a85:	xchg   esp,eax
  424a86:	or     eax,DWORD PTR [edx]
  424a88:	pusha  
  424a89:	xchg   edi,eax
  424a8a:	jl     0x424a96
  424a8c:	xor    al,0x6a
  424a8e:	or     edx,DWORD PTR ds:0xe2ee7455
  424a94:	shr    BYTE PTR [edi],1
  424a96:	stos   DWORD PTR es:[edi],eax
  424a97:	xor    BYTE PTR [esi],bl
  424a99:	lods   al,BYTE PTR ds:[esi]
  424a9a:	pop    edx
  424a9b:	or     eax,0x7398f393
  424aa0:	jno    0x424af6
  424aa2:	popa   
  424aa3:	daa    
  424aa4:	lock fimul WORD PTR [eiz*8-0x1e17cc94]
  424aac:	jl     0x424b28
  424aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aaf:	pop    ecx
  424ab0:	ds pop ebp
  424ab2:	lahf   
  424ab3:	jns    0x424a85
  424ab5:	mov    eax,ds:0x7d3889ce
  424aba:	mov    bh,0xaa
  424abc:	pop    ecx
  424abd:	dec    esi
  424abe:	dec    edi
  424abf:	jb     0x424b30
  424ac1:	xor    cl,bl
  424ac3:	scas   al,BYTE PTR es:[edi]
  424ac4:	leave  
  424ac5:	icebp  
  424ac6:	jo     0x424a4e
  424ac8:	adc    BYTE PTR [edx-0x28525e72],dl
  424ace:	mov    ebp,0xc9c3e979
  424ad3:	cmc    
  424ad4:	mov    dh,BYTE PTR [edi]
  424ad6:	sysexit 
  424ad8:	mov    ds:0x2c013780,al
  424add:	or     BYTE PTR [edx],al
  424adf:	push   edx
  424ae0:	mov    dh,0x84
  424ae2:	and    al,0xdc
  424ae4:	sub    al,0x1a
  424ae6:	sub    eax,esi
  424ae8:	xchg   edx,eax
  424ae9:	ret    
  424aea:	mov    bh,0x88
  424aec:	sti    
  424aed:	jne    0x424b63
  424aef:	or     edx,ecx
  424af1:	cmp    cl,BYTE PTR [ecx-0x74f5773]
  424af7:	shr    BYTE PTR [ebx-0x1f00ec7f],1
  424afd:	cmp    al,0x85
  424aff:	and    al,0x95
  424b01:	jb     0x424ab6
  424b03:	out    0x9f,al
  424b05:	mov    ecx,0x642bb839
  424b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b0b:	pop    edi
  424b0c:	xchg   ebx,eax
  424b0d:	lods   al,BYTE PTR ds:[esi]
  424b0e:	xor    bh,BYTE PTR [esi-0x7c6b428b]
  424b14:	cmp    dl,BYTE PTR [ebp+0x137b9942]
  424b1a:	pusha  
  424b1b:	int3   
  424b1c:	(bad)  
  424b1d:	test   al,0xf7
  424b1f:	lods   eax,DWORD PTR ds:[esi]
  424b20:	mov    al,ds:0xf4c1fbb6
  424b25:	add    BYTE PTR [ecx-0x19],dh
  424b28:	cmp    al,0xce
  424b2a:	daa    
  424b2b:	in     eax,dx
  424b2c:	lods   al,BYTE PTR ds:[esi]
  424b2d:	mov    al,0xb1
  424b2f:	and    al,ch
  424b31:	mov    esp,0x87c9faaf
  424b36:	push   esi
  424b37:	add    esi,edx
  424b39:	jl     0x424b7a
  424b3b:	clc    
  424b3c:	addr16 cmc 
  424b3e:	fsubr  QWORD PTR [ebp-0x2a]
  424b41:	or     BYTE PTR [edi],dh
  424b43:	arpl   WORD PTR [eax+0xa],si
  424b46:	xchg   ebx,eax
  424b47:	add    ebx,DWORD PTR [edx+0x53]
  424b4a:	(bad)  
  424b4b:	retf   0x5521
  424b4e:	jle    0x424bab
  424b50:	inc    eax
  424b51:	ss ret 0xad20
  424b55:	xchg   eax,edx
  424b57:	dec    esp
  424b58:	aam    0xed
  424b5a:	sub    al,BYTE PTR [edx-0x32a6605c]
  424b60:	adc    BYTE PTR [eax+edx*4+0x7f],dl
  424b64:	pop    ss
  424b65:	inc    eax
  424b66:	adc    eax,0x902f0a91
  424b6b:	adc    dh,dl
  424b6d:	or     BYTE PTR [edi-0x3c1cf83b],dl
  424b73:	ins    DWORD PTR es:[edi],dx
  424b74:	jle    0x424b82
  424b76:	xchg   DWORD PTR [edx-0x17],ebx
  424b79:	ds inc ecx
  424b7b:	in     eax,dx
  424b7c:	fldcw  WORD PTR [edi+ecx*4+0x19]
  424b80:	sbb    BYTE PTR [eax-0x15],ch
  424b83:	jle    0x424ba2
  424b85:	mov    ecx,esp
  424b87:	and    ecx,DWORD PTR [ebx]
  424b89:	imul   esp,DWORD PTR [ebp+0xb],0x82498a9b
  424b90:	idiv   DWORD PTR [esp+edi*2]
  424b93:	jg     0x424b8d
  424b95:	enter  0x2603,0xef
  424b99:	xor    al,0x56
  424b9b:	fucomp st(7)
  424b9d:	popf   
  424b9e:	cmp    ch,BYTE PTR [eax]
  424ba0:	cld    
  424ba1:	xchg   ebx,eax
  424ba2:	sbb    BYTE PTR [eax+ebx*1+0x5bb4ca10],al
  424ba9:	jne    0x424c03
  424bab:	fsubp  st(1),st
  424bad:	mov    ebx,0x41a631ba
  424bb2:	fisubr DWORD PTR [esi]
  424bb4:	dec    eax
  424bb5:	div    DWORD PTR [ebx-0x896bba1]
  424bbb:	push   esp
  424bbc:	pop    esp
  424bbd:	jge    0x424b59
  424bbf:	or     dh,BYTE PTR [esi-0x6e]
  424bc2:	outs   dx,DWORD PTR ds:[esi]
  424bc3:	add    ecx,DWORD PTR [ecx]
  424bc5:	gs mov cl,0xb5
  424bc8:	push   ds
  424bc9:	dec    ebx
  424bca:	stos   DWORD PTR es:[edi],eax
  424bcb:	cmp    eax,0x8deb4143
  424bd0:	imul   edi,DWORD PTR [ebx],0x60
  424bd3:	stos   DWORD PTR es:[edi],eax
  424bd4:	sti    
  424bd5:	lods   eax,DWORD PTR ds:[esi]
  424bd6:	in     eax,0xb8
  424bd8:	adc    bl,dh
  424bda:	cmp    esp,DWORD PTR [ecx-0x30]
  424bdd:	loopne 0x424bd2
  424bdf:	mov    ebx,DWORD PTR [esi+ebx*1+0x74aa4fce]
  424be6:	leave  
  424be7:	cmp    eax,0x36d0c727
  424bec:	xchg   esi,eax
  424bed:	bnd jns 0x424bc8
  424bf0:	cmp    BYTE PTR [edx+ebp*1+0x32],dl
  424bf4:	stos   DWORD PTR es:[edi],eax
  424bf5:	ja     0x424c56
  424bf7:	fisubr DWORD PTR [esi]
  424bf9:	loop   0x424b87
  424bfb:	out    0x53,eax
  424bfd:	(bad)  
  424bfe:	fidivr WORD PTR [edx]
  424c00:	cmp    esp,0xffffff95
  424c03:	push   edi
  424c04:	sub    DWORD PTR [edx],ebx
  424c06:	or     al,0xd5
  424c08:	jp     0x424b96
  424c0a:	(bad)  [edi+0x59691c99]
  424c10:	pop    ss
  424c11:	and    BYTE PTR [edi+ebx*8+0x5dd4c8af],ah
  424c18:	mov    dl,0x40
  424c1a:	cld    
  424c1b:	xchg   ebp,eax
  424c1c:	sbb    ebx,ecx
  424c1e:	jl     0x424c27
  424c20:	add    ebx,DWORD PTR [edi-0x7e78a90e]
  424c26:	mov    dl,0x9c
  424c28:	test   eax,0x1ebacb5a
  424c2d:	add    ebx,DWORD PTR [ecx]
  424c2f:	mov    dl,0x53
  424c31:	ffree  st(4)
  424c33:	je     0x424c32
  424c35:	pop    edi
  424c36:	xor    edi,ebp
  424c38:	mov    ecx,0x65c168f4
  424c3d:	aas    
  424c3e:	and    al,0x7a
  424c40:	ret    0x3a91
  424c43:	and    BYTE PTR [edi+0x4b45c2ae],bh
  424c49:	scas   al,BYTE PTR es:[edi]
  424c4a:	mov    al,ds:0x39a4a8e1
  424c4f:	push   eax
  424c50:	loope  0x424c6d
  424c52:	add    eax,edi
  424c54:	repz mov dh,0x46
  424c57:	jmp    DWORD PTR fs:[ebx+0x37]
  424c5b:	add    ebp,esp
  424c5d:	into   
  424c5e:	or     ecx,ebx
  424c60:	rol    DWORD PTR [esi],0xf0
  424c63:	push   eax
  424c64:	inc    eax
  424c65:	jae    0x424ccc
  424c67:	std    
  424c68:	fst    DWORD PTR [ebx+0x4033bf91]
  424c6e:	imul   BYTE PTR [ebp+0x7b5750e6]
  424c74:	daa    
  424c75:	mov    ecx,edi
  424c77:	stos   DWORD PTR es:[edi],eax
  424c78:	clc    
  424c79:	jno    0x424c09
  424c7b:	(bad)  
  424c7c:	jmp    0x424c62
  424c7e:	test   BYTE PTR [eax],bl
  424c80:	sbb    ch,al
  424c82:	inc    ecx
  424c83:	push   ebp
  424c84:	adc    eax,0x43b15655
  424c89:	mov    dl,0xf
  424c8b:	xor    al,bl
  424c8d:	aas    
  424c8e:	dec    eax
  424c8f:	loope  0x424c47
  424c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c92:	shl    BYTE PTR [esp+eax*2+0x61],cl
  424c96:	push   0x23e33d34
  424c9b:	repnz stos BYTE PTR es:[edi],al
  424c9d:	sub    esi,DWORD PTR [ebp+0xc9481eb]
  424ca3:	inc    esp
  424ca4:	or     BYTE PTR [eax],dl
  424ca6:	mov    DWORD PTR [edi],esp
  424ca8:	mov    ebx,0xe6b471d5
  424cad:	sar    esp,cl
  424caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cb0:	xor    esi,DWORD PTR [esi+0x6a5beeaa]
  424cb6:	inc    eax
  424cb7:	adc    esp,DWORD PTR [esi-0x4c0d7bf0]
  424cbd:	cmp    BYTE PTR [edx],cl
  424cbf:	cs mov dh,0xd6
  424cc2:	xchg   BYTE PTR [eax],bh
  424cc4:	jg     0x424cf9
  424cc6:	xchg   ebp,eax
  424cc7:	mov    ds:0xaae82e36,eax
  424ccc:	jmp    0x961fe802
  424cd1:	arpl   WORD PTR [esp+ebp*1],si
  424cd4:	xchg   edi,eax
  424cd5:	mov    al,ds:0x353390f5
  424cda:	sub    al,0x3e
  424cdc:	adc    eax,DWORD PTR [esi]
  424cde:	mov    dh,0xcd
  424ce0:	scas   eax,DWORD PTR es:[edi]
  424ce1:	pop    ds
  424ce2:	cmp    ecx,0xffffffee
  424ce5:	adc    cl,BYTE PTR [ebx+0x2414d242]
  424ceb:	add    ebx,DWORD PTR [edi]
  424ced:	adc    eax,0x748e6d4d
  424cf2:	mov    ebp,DWORD PTR [edi]
  424cf4:	mov    esp,edi
  424cf6:	mov    BYTE PTR [ecx-0x430c1f4f],al
  424cfc:	ret    0xf6ee
  424cff:	aaa    
  424d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d01:	push   esi
  424d02:	sub    dl,BYTE PTR [esi]
  424d04:	enter  0xefdb,0x7
  424d08:	adc    cl,ch
  424d0a:	neg    BYTE PTR [ebp+0x5d]
  424d0d:	cmp    eax,0xadb4249a
  424d12:	push   0xffffffc9
  424d14:	add    eax,0x3193d95d
  424d19:	sahf   
  424d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d1b:	xchg   edx,eax
  424d1c:	mov    ch,0x99
  424d1e:	in     al,dx
  424d1f:	sub    eax,0xfbed1368
  424d24:	fistp  QWORD PTR [esi+ecx*4+0x5b]
  424d28:	or     esi,DWORD PTR [ecx]
  424d2a:	or     DWORD PTR [ebx+0x39b8dc5e],ebx
  424d30:	aas    
  424d31:	daa    
  424d32:	or     eax,0xcab37ec1
  424d37:	cmpxchg DWORD PTR [edx+0x62],esi
  424d3b:	sub    bh,cl
  424d3d:	xchg   ebp,eax
  424d3e:	dec    ecx
  424d3f:	ror    ch,0x75
  424d42:	sub    ebp,0xfffffffa
  424d45:	add    al,0x5d
  424d47:	push   ecx
  424d48:	lahf   
  424d49:	push   0x12d2a255
  424d4e:	mov    ?,WORD PTR [edx+0x7c2241f4]
  424d54:	mov    ah,0x5d
  424d56:	js     0x424d2e
  424d58:	jae    0x424d08
  424d5a:	ror    DWORD PTR [edi-0x64219094],0xf
  424d61:	cld    
  424d62:	jle    0x424d42
  424d64:	mov    cl,0xc5
  424d66:	lahf   
  424d67:	shl    BYTE PTR ds:0xd12a6cc3,1
  424d6d:	jnp    0x424d27
  424d6f:	clc    
  424d70:	cmp    eax,0xf8e18a70
  424d75:	inc    edx
  424d76:	ss pop es
  424d78:	int    0xac
  424d7a:	cwde   
  424d7b:	cmp    eax,0x2f7c2ab0
  424d80:	or     bh,ah
  424d82:	dec    ebx
  424d83:	iret   
  424d84:	loopne 0x424daf
  424d86:	dec    edi
  424d87:	push   edx
  424d88:	outs   dx,BYTE PTR ds:[esi]
  424d89:	test   al,0x6
  424d8b:	into   
  424d8c:	pop    ebx
  424d8d:	cmp    DWORD PTR [ecx+0x41742871],edx
  424d93:	(bad)  
  424d94:	fild   QWORD PTR [esi-0x3f]
  424d97:	mov    bl,0xd5
  424d99:	and    BYTE PTR [ebx+0x4c],ch
  424d9c:	addr16 mov ebp,0xf135475f
  424da2:	lahf   
  424da3:	test   al,0xf6
  424da5:	xor    esi,DWORD PTR [eax-0x37]
  424da8:	pop    edi
  424da9:	lds    esp,FWORD PTR [ecx-0x3b]
  424dac:	stos   BYTE PTR es:[edi],al
  424dad:	cwde   
  424dae:	adc    dl,bh
  424db0:	adc    ah,BYTE PTR [eax]
  424db2:	add    esi,edi
  424db4:	aas    
  424db5:	enter  0x1d8d,0x81
  424db9:	mov    eax,ds:0xffe9d7ad
  424dbe:	loop   0x424e1b
  424dc0:	fxch   st(0)
  424dc2:	adc    ebp,DWORD PTR [edx]
  424dc4:	leave  
  424dc5:	or     ah,BYTE PTR [edx+ebx*4-0x66e45e5]
  424dcc:	rol    BYTE PTR [ebp+0x73],cl
  424dcf:	repz les esp,FWORD PTR [esi-0x48]
  424dd3:	js     0x424d63
  424dd5:	jne    0x424df8
  424dd7:	lock jmp 0xe91e0051
  424ddd:	imul   edi,DWORD PTR [eax],0xe1a9837b
  424de3:	add    eax,0xf8ee92b2
  424de8:	lods   eax,DWORD PTR ds:[esi]
  424de9:	mov    bh,0xc2
  424deb:	(bad)  
  424dec:	jno    0x424e36
  424dee:	push   ebx
  424def:	mov    dl,0x18
  424df1:	xor    eax,0x9c8405b3
  424df6:	xchg   BYTE PTR [esi+0x31],cl
  424df9:	adc    ah,dh
  424dfb:	xor    eax,0x77e9924b
  424e00:	in     al,dx
  424e01:	xchg   ebx,eax
  424e02:	sbb    DWORD PTR [edx-0x5183d27e],esp
  424e08:	shr    dh,cl
  424e0a:	pop    esi
  424e0b:	pusha  
  424e0c:	and    DWORD PTR [ebp+0x40d09815],0xddc58efd
  424e16:	imul   esp,edx,0xbfc2b422
  424e1c:	add    ebp,DWORD PTR [edi+edx*4+0x4c1ef6f7]
  424e23:	popa   
  424e24:	daa    
  424e25:	mov    esi,0x73add0ba
  424e2a:	xchg   esi,eax
  424e2b:	inc    edx
  424e2c:	and    bl,BYTE PTR [eax]
  424e2e:	xchg   esp,eax
  424e2f:	lock ja 0x424e21
  424e32:	stos   BYTE PTR es:[edi],al
  424e33:	lea    edx,[esi-0x5ff1b491]
  424e39:	inc    ebx
  424e3a:	dec    esp
  424e3b:	xor    eax,0x7b451635
  424e40:	xor    al,0xba
  424e42:	ins    BYTE PTR es:[edi],dx
  424e43:	test   BYTE PTR [ecx],dh
  424e45:	retf   
  424e46:	mov    esp,0x728a71d
  424e4b:	(bad)  
  424e4c:	push   eax
  424e4d:	bound  ebp,QWORD PTR [ecx-0x80]
  424e50:	hlt    
  424e51:	xchg   ecx,eax
  424e52:	adc    al,0xf6
  424e54:	daa    
  424e55:	mov    ch,0x19
  424e57:	aaa    
  424e58:	dec    si
  424e5a:	jmp    0x5ec67563
  424e5f:	ds cmc 
  424e61:	pushf  
  424e62:	repz test BYTE PTR [edx+0x2f763af3],ah
  424e69:	jbe    0x424e31
  424e6b:	mov    ds:0x2d7b0c24,eax
  424e70:	das    
  424e71:	fwait
  424e72:	pusha  
  424e73:	mov    esp,ebx
  424e75:	sahf   
  424e76:	imul   ebp
  424e78:	sub    DWORD PTR [ebx+0x3278daf4],edi
  424e7e:	adc    al,0xdc
  424e80:	ins    DWORD PTR es:[edi],dx
  424e81:	bound  esi,QWORD PTR [esi]
  424e83:	mov    ds:0xd65098ad,al
  424e88:	and    DWORD PTR [eax+0x3c253712],edi
  424e8e:	push   ecx
  424e8f:	aam    0x5a
  424e91:	test   eax,0xf1f57c37
  424e96:	and    eax,0x8816dc
  424e9b:	sbb    al,BYTE PTR [ecx]
  424e9d:	xchg   ebp,eax
  424e9e:	push   esp
  424e9f:	out    0x7a,eax
  424ea1:	cwde   
  424ea2:	xlat   BYTE PTR ds:[ebx]
  424ea3:	(bad)  
  424ea4:	in     al,0xa4
  424ea6:	sub    DWORD PTR [eax],0xa
  424ea9:	push   0x15
  424eab:	fld    QWORD PTR [edx-0x61]
  424eae:	and    ah,BYTE PTR [edx]
  424eb0:	adc    al,0x13
  424eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eb3:	(bad)  
  424eb4:	(bad)  
  424eb5:	mov    ebx,0x419a256
  424eba:	scas   al,BYTE PTR es:[edi]
  424ebb:	mov    edi,edx
  424ebd:	mov    ebx,es
  424ebf:	scas   eax,DWORD PTR es:[edi]
  424ec0:	inc    ecx
  424ec1:	repz cmp al,0xdd
  424ec4:	into   
  424ec5:	push   es
  424ec6:	sub    al,0x1d
  424ec8:	or     bh,BYTE PTR ds:0x7cb1e0e2
  424ece:	cld    
  424ecf:	fild   QWORD PTR [ebp+0x7e259ec4]
  424ed5:	test   DWORD PTR [ecx-0x33f0a383],esi
  424edb:	jo     0x424ecb
  424edd:	data16 xor cl,BYTE PTR ds:0x403f4853
  424ee4:	scas   al,BYTE PTR es:[edi]
  424ee5:	sub    ch,cl
  424ee7:	(bad)  
  424ee8:	fwait
  424ee9:	aaa    
  424eea:	jns    0x424f0b
  424eec:	pop    eax
  424eed:	and    eax,DWORD PTR [ecx+0x4f]
  424ef0:	retf   
  424ef1:	cmp    edx,DWORD PTR [ebx]
  424ef3:	daa    
  424ef4:	loop   0x424ee0
  424ef6:	mov    eax,0x53481e3
  424efb:	xchg   di,ax
  424efd:	or     bl,bl
  424eff:	test   DWORD PTR [esi+0xa],0xa8144717
  424f06:	cmp    DWORD PTR [edx-0x1d62bb97],ebp
  424f0c:	(bad)  
  424f0e:	(bad)  
  424f0f:	jo     0x424f77
  424f11:	adc    al,0x3f
  424f13:	cmp    ch,0xab
  424f16:	ret    0xf753
  424f19:	out    dx,al
  424f1a:	sbb    al,0x64
  424f1c:	in     al,0x4d
  424f1e:	jp     0x424f65
  424f20:	popa   
  424f21:	inc    ecx
  424f22:	mov    cl,0x67
  424f24:	ins    BYTE PTR es:[edi],dx
  424f25:	pop    ebx
  424f26:	inc    edi
  424f27:	cmp    eax,0x1b34f010
  424f2c:	ds scas eax,DWORD PTR es:[edi]
  424f2e:	fdiv   QWORD PTR [edx+0x74]
  424f31:	mov    ecx,0xb95c9d58
  424f36:	add    DWORD PTR [ebx+0x7b],0x33
  424f3a:	mov    edx,DWORD PTR [edx]
  424f3c:	push   ebx
  424f3d:	jnp    0x424f22
  424f3f:	shld   DWORD PTR [esp+esi*1],esp,cl
  424f43:	push   ebp
  424f44:	mov    bh,0xfe
  424f46:	out    dx,al
  424f47:	repz retf 0x36cf
  424f4b:	cmp    eax,0x827642f0
  424f50:	jmp    0x424f03
  424f52:	ins    DWORD PTR es:[edi],dx
  424f53:	pop    ds
  424f54:	dec    ebp
  424f55:	and    ecx,edi
  424f57:	pop    ebp
  424f58:	push   ecx
  424f59:	in     eax,0xfc
  424f5b:	add    DWORD PTR [eax+0x4e9219a2],ecx
  424f61:	(bad)  
  424f62:	dec    esi
  424f63:	sbb    eax,0x2c6dfb5f
  424f68:	dec    ecx
  424f69:	cwde   
  424f6a:	push   esp
  424f6b:	inc    ecx
  424f6c:	std    
  424f6d:	jb     0x424f4f
  424f6f:	mov    ds:0x25e5410c,eax
  424f74:	push   edi
  424f75:	pusha  
  424f76:	or     eax,0xa491665b
  424f7b:	js     0x424f39
  424f7d:	push   edi
  424f7e:	mov    al,0x2
  424f80:	mov    dh,0xe5
  424f82:	(bad)  
  424f83:	retf   0x9d6f
  424f86:	(bad)  
  424f87:	jae    0x424f8d
  424f89:	pop    eax
  424f8a:	push   ds
  424f8b:	shr    eax,cl
  424f8d:	sub    eax,DWORD PTR [ebx-0x4e]
  424f90:	(bad)  [ecx+0x582a1f61]
  424f96:	fs sahf 
  424f98:	popf   
  424f99:	sbb    bh,bl
  424f9b:	lahf   
  424f9c:	push   es
  424f9d:	mov    cl,0x4d
  424f9f:	mulps  xmm5,xmm4
  424fa2:	cmpxchg edi,edi
  424fa5:	ins    BYTE PTR es:[edi],dx
  424fa6:	mov    edi,DWORD PTR [edi+0x72]
  424fa9:	lods   al,BYTE PTR ds:[esi]
  424faa:	or     BYTE PTR [eax+0x4f],0xa3
  424fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424faf:	ror    BYTE PTR [edi],0xe0
  424fb2:	push   edi
  424fb3:	push   ebx
  424fb4:	lods   al,BYTE PTR cs:[esi]
  424fb6:	sub    eax,0xb6395a81
  424fbb:	xor    bh,BYTE PTR [ecx+0x39]
  424fbe:	in     eax,dx
  424fbf:	sbb    eax,0x790bb8b6
  424fc4:	jae    0x424f6b
  424fc6:	inc    esp
  424fc7:	add    edx,DWORD PTR [eax-0x47]
  424fca:	in     al,0xa8
  424fcc:	pop    eax
  424fcd:	repnz les ebp,FWORD PTR [ebx+0x3124ed4d]
  424fd4:	mov    dh,0x76
  424fd6:	mov    al,ds:0xf059eb0a
  424fdb:	push   ebx
  424fdc:	nop
  424fdd:	sub    ah,BYTE PTR [edi]
  424fdf:	inc    esp
  424fe0:	sub    cl,dl
  424fe2:	mov    ds,WORD PTR [ebx+0x4e97f5dc]
  424fe8:	aas    
  424fe9:	xchg   edx,eax
  424fea:	nop
  424feb:	fldenv [ebx-0x342e2d0c]
  424ff1:	in     al,dx
  424ff2:	jecxz  0x424fd8
  424ff4:	(bad)
  424ff8:	mov    ebx,DWORD PTR [eax+eiz*2]
  424ffb:	aas    
  424ffc:	sbb    BYTE PTR [edx-0x8aab189],cl
  425002:	fscale 
  425004:	dec    eax
  425005:	fimul  WORD PTR [eax+0x7b2fca5e]
  42500b:	push   esp
  42500c:	pop    ds
  42500d:	hlt    
  42500e:	sub    cl,BYTE PTR [esi+0x10416977]
  425014:	push   esi
  425015:	into   
  425016:	jecxz  0x425088
  425018:	mov    ah,0x36
  42501a:	cmp    ch,BYTE PTR [esi-0x115716ce]
  425020:	mov    dl,0xc7
  425022:	test   al,0xbc
  425024:	cld    
  425025:	lock loopne 0x425026
  425028:	mov    bh,0x5
  42502a:	add    dh,BYTE PTR [eax]
  42502c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42502d:	mov    ch,0x4e
  42502f:	add    cl,BYTE PTR ds:[ecx]
  425032:	pusha  
  425033:	sbb    ch,BYTE PTR [ebx-0x545ef3c4]
  425039:	xlat   BYTE PTR ds:[ebx]
  42503a:	or     al,0x32
  42503c:	out    0xff,al
  42503e:	fwait
  42503f:	pop    edi
  425040:	and    eax,0x10e3282c
  425045:	pop    ds
  425046:	inc    ebp
  425047:	fsubr  st(4),st
  425049:	mov    ds:0x676b4d07,al
  42504e:	ucomiss xmm4,DWORD PTR [ebx-0x7150c27]
  425055:	push   edi
  425056:	inc    esp
  425057:	cmp    eax,0x2ff0ca30
  42505c:	jno    0x425025
  42505e:	mov    al,ds:0xf22b09d4
  425063:	inc    esi
  425064:	and    ebx,0x11
  425067:	gs and eax,0x494d661e
  42506d:	or     bh,cl
  42506f:	loope  0x425017
  425071:	mov    al,ds:0x8f588e5f
  425076:	stos   BYTE PTR es:[edi],al
  425077:	push   ss
  425078:	mov    bh,0xde
  42507a:	aaa    
  42507b:	lock arpl WORD PTR cs:0xa1b09d20,dx
  425083:	mov    ebx,DWORD PTR [eax]
  425085:	push   es
  425086:	jle    0x425024
  425088:	cmc    
  425089:	push   ecx
  42508a:	mov    ah,BYTE PTR [ebx]
  42508c:	icebp  
  42508d:	out    dx,eax
  42508e:	rcl    BYTE PTR [ebx],cl
  425090:	(bad)  
  425091:	pop    esi
  425092:	sub    al,0x91
  425094:	jbe    0x425046
  425096:	enter  0xacf5,0x55
  42509a:	mov    bl,0x44
  42509c:	call   0x6febcade
  4250a1:	lds    eax,FWORD PTR [ebx-0xf]
  4250a4:	add    al,0x68
  4250a6:	test   al,0x97
  4250a8:	inc    eax
  4250a9:	scas   al,BYTE PTR es:[edi]
  4250aa:	leave  
  4250ab:	inc    esi
  4250ac:	fiadd  DWORD PTR [ebp+ebp*2-0x6f]
  4250b0:	mov    esi,DWORD PTR [ebx]
  4250b2:	mov    ebp,0x2cc5e3f0
  4250b7:	sbb    cl,BYTE PTR [ecx+0x7f]
  4250ba:	xor    esi,ebp
  4250bc:	jne    0x4250df
  4250be:	ds adc al,0x9f
  4250c1:	sub    eax,0xc2f10065
  4250c6:	mov    dh,0xb6
  4250c8:	mov    esi,0xa16342c4
  4250cd:	push   0xa9b2b2be
  4250d2:	fsub   DWORD PTR [edx]
  4250d4:	mov    al,0x3c
  4250d6:	ret    
  4250d7:	push   edi
  4250d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250d9:	inc    edx
  4250da:	jnp    0x42505f
  4250dc:	nop
  4250dd:	jle    0x42515c
  4250df:	inc    ecx
  4250e0:	cmp    edx,DWORD PTR [edx]
  4250e2:	aaa    
  4250e3:	dec    ebp
  4250e4:	mov    ch,0xd0
  4250e6:	loop   0x425163
  4250e8:	add    al,0xd5
  4250ea:	stc    
  4250eb:	sti    
  4250ec:	das    
  4250ed:	push   edx
  4250ee:	gs mov dl,0x3c
  4250f1:	sub    cl,BYTE PTR [eax]
  4250f3:	leave  
  4250f4:	bound  ecx,QWORD PTR [ebx+0x11]
  4250f7:	mov    bl,0x41
  4250f9:	in     al,0x3f
  4250fb:	repz daa 
  4250fd:	lods   al,BYTE PTR ds:[esi]
  4250fe:	popa   
  4250ff:	fstp   TBYTE PTR [ebp-0x5fd099f3]
  425105:	lock xchg esp,eax
  425107:	xor    BYTE PTR [ecx-0x5f],al
  42510a:	adc    DWORD PTR [eax],esi
  42510c:	push   0x5fd08228
  425111:	or     eax,0xd7f2c813
  425116:	and    ecx,DWORD PTR [edx]
  425118:	(bad)  
  425119:	adc    DWORD PTR [esi-0x45],ecx
  42511c:	push   ebx
  42511d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42511e:	push   cs
  42511f:	or     BYTE PTR [ebx-0x66],al
  425122:	or     eax,0xbbc9fe73
  425127:	push   ebp
  425128:	(bad)  
  425129:	loopne 0x4250f7
  42512b:	fwait
  42512c:	jb     0x42512e
  42512e:	and    DWORD PTR [edx-0x20],eax
  425131:	mov    ecx,0xa69652a3
  425136:	or     esp,edx
  425138:	(bad)  
  425139:	ss fcomi st,st(3)
  42513c:	gs jge 0x42514a
  42513f:	daa    
  425140:	adc    DWORD PTR [ebx+ecx*2-0x72],ecx
  425144:	bound  edx,QWORD PTR [edx+0x6b17108d]
  42514a:	dec    esi
  42514b:	xchg   edx,eax
  42514c:	hlt    
  42514d:	adc    BYTE PTR [ebx+eax*4+0x10],0x21
  425152:	jmp    0x42519b
  425154:	lock pop es
  425156:	fdiv   DWORD PTR [edx]
  425158:	sbb    al,0xf2
  42515a:	call   0xa00e:0x7ea2d931
  425161:	dec    ecx
  425162:	mov    al,0xc8
  425164:	and    dl,bh
  425166:	call   0x7ef:0xc70e6d66
  42516d:	rcl    eax,cl
  42516f:	inc    ebx
  425170:	mov    al,0x79
  425172:	dec    edx
  425173:	sbb    al,0x65
  425175:	jle    0x4251dd
  425177:	ins    BYTE PTR es:[edi],dx
  425178:	or     DWORD PTR [eax*2-0x2fba7c16],esp
  42517f:	jge    0x42517c
  425181:	nop
  425182:	and    BYTE PTR [edx],ah
  425184:	subps  xmm1,xmm5
  425187:	(bad)  
  425189:	sbb    BYTE PTR [eax+edi*8+0x1eb883c1],al
  425190:	sbb    ebx,DWORD PTR [edi+esi*2-0x4f8db33]
  425197:	mov    ebx,0xc984d0ee
  42519c:	mov    bl,0xf9
  42519e:	call   0xad0b2d9
  4251a3:	int    0xac
  4251a5:	lea    edx,[ebx]
  4251a7:	pop    esi
  4251a8:	sti    
  4251a9:	mov    ds:0x35049ad,eax
  4251ae:	or     edx,0x2d1bd483
  4251b4:	hlt    
  4251b5:	xchg   ecx,eax
  4251b6:	cld    
  4251b7:	or     DWORD PTR [edx-0x6],esi
  4251ba:	dec    eax
  4251bb:	mov    WORD PTR [eax+0x518c1297],?
  4251c1:	pop    esp
  4251c2:	mov    al,ds:0x233df3e7
  4251c7:	sti    
  4251c8:	and    edi,DWORD PTR [eax+0x70]
  4251cb:	jnp    0x4251db
  4251cd:	out    dx,al
  4251ce:	mov    eax,ds:0x14978118
  4251d3:	jne    0x425215
  4251d5:	adc    eax,0xa256da2a
  4251da:	fcmovu st,st(6)
  4251dc:	iret   
  4251dd:	mov    ecx,0x8a8090a
  4251e2:	pusha  
  4251e3:	fwait
  4251e4:	retf   0xa4be
  4251e7:	(bad)  
  4251e8:	mov    ah,0xd5
  4251ea:	mov    cl,0xe8
  4251ec:	cmp    BYTE PTR [edx-0xc],ah
  4251ef:	pop    ebp
  4251f0:	add    al,0x90
  4251f2:	inc    esp
  4251f3:	lock rcl DWORD PTR [ebx+0x3e],0x54
  4251f8:	mov    bh,al
  4251fa:	fnstsw WORD PTR [esp+edi*2]
  4251fd:	sbb    al,BYTE PTR [ecx+edi*4]
  425200:	or     al,0x56
  425202:	jge    0x425282
  425204:	pop    DWORD PTR [ebx-0x6e]
  425207:	or     bh,dh
  425209:	mov    ebx,0xe9dc283d
  42520e:	mov    dh,0x7a
  425210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425211:	push   edi
  425212:	cmp    eax,0x2467fa0f
  425217:	xchg   edi,eax
  425218:	sbb    DWORD PTR [edi-0x28],0x49135dd4
  42521f:	xor    BYTE PTR ds:0x833ab933,dh
  425225:	xor    eax,0x132e245
  42522a:	cdq    
  42522b:	in     al,dx
  42522c:	or     DWORD PTR [esi-0x22],0x58f5cc6
  425233:	and    eax,0xb952568b
  425238:	mov    eax,0xa280fd2
  42523d:	cmp    eax,DWORD PTR [eax+eax*2]
  425240:	in     al,dx
  425241:	xor    BYTE PTR [ebx+0x1ccbed7a],cl
  425247:	mov    esi,0x4f6b74a4
  42524c:	stos   BYTE PTR es:[edi],al
  42524d:	inc    edx
  42524e:	inc    ebx
  42524f:	mov    esi,0x9c39895a
  425254:	pop    ecx
  425255:	jp     0x4252d0
  425257:	mov    esi,0x1081c8cf
  42525c:	fdiv   st(3),st
  42525e:	push   esp
  42525f:	jnp    0x42522b
  425261:	mov    esi,0x487e0cad
  425266:	pop    es
  425267:	jmp    0x425227
  425269:	cmp    BYTE PTR [ebx],ch
  42526b:	daa    
  42526c:	and    DWORD PTR [edx],0x29
  42526f:	adc    BYTE PTR [eax+0x39bc2eb9],0x73
  425276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425277:	inc    ebx
  425278:	xchg   DWORD PTR [edx+0x6c],esp
  42527b:	inc    esi
  42527c:	pop    eax
  42527d:	into   
  42527e:	xor    DWORD PTR [ecx],eax
  425280:	out    dx,eax
  425281:	dec    eax
  425282:	mov    ebp,0x90805d1
  425287:	lahf   
  425288:	push   esi
  425289:	fldenv [edi-0x80]
  42528c:	sbb    eax,0x5faf714f
  425291:	jno    0x4252a7
  425293:	out    dx,al
  425294:	rcl    BYTE PTR [eax-0xfe40b7f],cl
  42529a:	adc    eax,DWORD PTR [edx+eax*8]
  42529d:	jne    0x42530e
  42529f:	aam    0x79
  4252a1:	mov    eax,0xc997383c
  4252a6:	aam    0xaf
  4252a8:	push   ds
  4252a9:	adc    esi,DWORD PTR [ecx+esi*2+0x759dfc24]
  4252b0:	fldcw  WORD PTR gs:[esi]
  4252b3:	pop    ds
  4252b4:	and    eax,0xc3534266
  4252b9:	ja     0x4252d2
  4252bb:	stc    
  4252bc:	dec    edx
  4252bd:	xchg   ebx,eax
  4252be:	mov    BYTE PTR [esi+0x12],0x29
  4252c2:	xor    al,0x64
  4252c4:	and    eax,DWORD PTR [edx+ebp*8-0x578c2aca]
  4252cb:	sub    bh,ch
  4252cd:	fsubr  QWORD PTR [esi]
  4252cf:	stc    
  4252d0:	jge    0x42530c
  4252d2:	cmp    ah,BYTE PTR [eax]
  4252d4:	dec    ebp
  4252d5:	and    DWORD PTR [eax-0x52],0x39
  4252d9:	xlat   BYTE PTR ds:[ebx]
  4252da:	mov    dh,0x46
  4252dc:	mov    ds:0x22240335,eax
  4252e1:	mov    BYTE PTR [eax],al
  4252e3:	fadd   QWORD PTR [edx+0x60]
  4252e6:	push   esp
  4252e7:	adc    al,bh
  4252e9:	push   ebp
  4252ea:	in     eax,0x15
  4252ec:	in     eax,0xdf
  4252ee:	sub    DWORD PTR [eax],esp
  4252f0:	mov    esi,DWORD PTR [edx-0x40]
  4252f3:	sbb    bl,al
  4252f5:	dec    edi
  4252f6:	loop   0x425345
  4252f8:	arpl   WORD PTR [ebx+0x7a],sp
  4252fb:	cli    
  4252fc:	fsubr  DWORD PTR [ebx-0x6dad5ba9]
  425302:	and    ch,bl
  425304:	xchg   esi,eax
  425305:	cmp    eax,ebx
  425307:	xchg   esp,eax
  425308:	fadd   DWORD PTR [ecx]
  42530a:	jl     0x4252c0
  42530c:	xor    edi,edi
  42530e:	pop    esp
  42530f:	inc    edx
  425310:	adc    al,0xdb
  425312:	inc    ebx
  425313:	xor    ch,BYTE PTR [esi]
  425315:	sbb    DWORD PTR [eax],ebp
  425317:	jo     0x4252cc
  425319:	sub    BYTE PTR [edi+eax*2],dl
  42531c:	inc    edi
  42531d:	dec    eax
  42531e:	jmp    0x458c:0x1eb0ada
  425325:	dec    ebx
  425326:	sub    cl,ch
  425328:	dec    ebp
  425329:	pusha  
  42532a:	dec    ebx
  42532b:	sub    eax,0x7bbae387
  425330:	ret    0x95c1
  425333:	pop    es
  425334:	push   ebx
  425335:	das    
  425336:	xchg   edx,eax
  425337:	(bad)  
  425338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425339:	int3   
  42533a:	mov    BYTE PTR [edi],dh
  42533c:	mov    dh,bl
  42533e:	out    dx,al
  42533f:	sbb    ebx,ecx
  425341:	inc    ebp
  425342:	daa    
  425343:	fwait
  425344:	retf   
  425345:	lods   eax,DWORD PTR ds:[esi]
  425346:	add    eax,0x86e01f40
  42534b:	cwde   
  42534c:	cdq    
  42534d:	inc    esp
  42534e:	neg    ebx
  425350:	push   ecx
  425351:	in     al,0x62
  425353:	aas    
  425354:	pop    edx
  425355:	call   0xdee1:0xf884ab9a
  42535c:	mov    cl,0x6f
  42535e:	sbb    BYTE PTR [eax+0x68],0xf3
  425362:	inc    ecx
  425363:	adc    ch,BYTE PTR [esi+ecx*8-0x74db1287]
  42536a:	aam    0x2d
  42536c:	or     DWORD PTR [edx-0x6a22c054],edi
  425372:	test   DWORD PTR [ebx-0x24a898cd],0x43456a7b
  42537c:	mov    ds:0x771c6d16,eax
  425381:	inc    edx
  425382:	add    ch,BYTE PTR [ecx+0x39]
  425385:	mov    ch,dl
  425387:	push   ebp
  425388:	in     eax,0x56
  42538a:	xchg   DWORD PTR [eax-0x9],edx
  42538d:	retf   0xc8a8
  425390:	and    edi,edx
  425392:	lahf   
  425393:	jb     0x4253f5
  425395:	fwait
  425396:	cdq    
  425397:	scas   eax,DWORD PTR es:[edi]
  425398:	xchg   esi,eax
  425399:	xor    DWORD PTR [edi],edi
  42539b:	jg     0x42537b
  42539d:	add    eax,edi
  42539f:	outs   dx,WORD PTR ds:[esi]
  4253a1:	ss stos DWORD PTR es:[edi],eax
  4253a3:	jmp    0xc7e06cb3
  4253a8:	(bad)  
  4253a9:	sahf   
  4253aa:	nop
  4253ab:	push   eax
  4253ac:	popa   
  4253ad:	dec    eax
  4253ae:	into   
  4253af:	sbb    edi,DWORD PTR [ecx]
  4253b1:	fs pop ebx
  4253b3:	fs ret 
  4253b5:	adc    DWORD PTR [edx],esi
  4253b7:	inc    esp
  4253b8:	mov    edi,edi
  4253ba:	mov    BYTE PTR [edi-0x13],dh
  4253bd:	push   ebp
  4253be:	ret    0x1ddf
  4253c1:	pop    ebp
  4253c2:	jnp    0x425381
  4253c4:	inc    ebp
  4253c5:	scas   al,BYTE PTR es:[edi]
  4253c6:	rol    cx,0x35
  4253ca:	ds call 0xea78:0x3ec9043
  4253d2:	fwait
  4253d3:	mov    bl,0x4f
  4253d5:	jb     0x425442
  4253d7:	or     esi,DWORD PTR ds:[edx+0x6f2580cb]
  4253de:	xchg   edx,eax
  4253df:	sub    eax,0x476eec44
  4253e4:	aas    
  4253e5:	or     eax,0xa29793f9
  4253ea:	hlt    
  4253eb:	jg     0x4253ce
  4253ed:	cmp    bl,bh
  4253ef:	(bad)  
  4253f0:	in     eax,0xaa
  4253f2:	ins    DWORD PTR es:[edi],dx
  4253f3:	ret    
  4253f4:	aaa    
  4253f5:	fidiv  WORD PTR [ebp+0x38]
  4253f8:	push   0x68
  4253fa:	aaa    
  4253fb:	ss xor al,0x5c
  4253ff:	lahf   
  425400:	or     eax,0xdbc01cee
  425405:	push   esp
  425406:	pop    eax
  425407:	adc    al,0x72
  425409:	(bad)  
  42540a:	pop    eax
  42540b:	sbb    eax,0x8eae560e
  425410:	pusha  
  425411:	jne    0x4253d0
  425413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425414:	lock xor al,0x68
  425417:	xor    edx,ecx
  425419:	inc    ecx
  42541a:	mov    esp,0x4bf6021a
  42541f:	mov    esi,0x5f71a599
  425424:	fsubp  st(0),st
  425426:	leave  
  425427:	adc    esp,DWORD PTR [esi+esi*4-0x5313f109]
  42542e:	popa   
  42542f:	les    ebp,FWORD PTR [edi]
  425431:	cld    
  425432:	dec    eax
  425433:	(bad)  
  425434:	jne    0x42541c
  425436:	inc    eax
  425437:	xor    ah,0x7e
  42543a:	test   al,0x48
  42543c:	call   0x76c:0xf8354c77
  425443:	cmp    al,0x36
  425445:	icebp  
  425446:	mov    BYTE PTR [esi],dl
  425448:	mov    esi,0x40a101da
  42544d:	das    
  42544e:	mov    ds:0x6ee00e0b,eax
  425453:	call   0x17acf2e3
  425458:	out    dx,al
  425459:	fs pop edi
  42545b:	dec    esp
  42545c:	pushf  
  42545d:	sub    DWORD PTR [ebx],0x37846766
  425463:	fimul  WORD PTR [edi+0x10]
  425466:	ficom  DWORD PTR ds:0x970e42c8
  42546c:	pop    ds
  42546d:	outs   dx,BYTE PTR ds:[esi]
  42546e:	mov    edi,0xf2fcdd78
  425473:	jno    0x42544c
  425475:	loope  0x42540a
  425477:	or     al,0x9f
  425479:	push   esp
  42547a:	(bad)
  42547e:	inc    esp
  42547f:	mov    ?,WORD PTR [edx]
  425481:	add    ebx,DWORD PTR [ecx]
  425483:	mov    esi,0x8af1b334
  425488:	jmp    0x70fe:0xc7923fec
  42548f:	add    BYTE PTR [ebp+0x59],dh
  425492:	mov    cs,eax
  425494:	jne    0x425436
  425496:	lods   eax,DWORD PTR ds:[esi]
  425497:	lds    esi,FWORD PTR [edx-0xc31b22b]
  42549d:	rcl    BYTE PTR [ebp+0x3d],0xc
  4254a1:	rcl    BYTE PTR [edx+0x4b],0x9b
  4254a5:	xor    ch,bl
  4254a7:	fild   WORD PTR [edx]
  4254a9:	or     esi,DWORD PTR [edi-0x55d09302]
  4254af:	imul   eax,DWORD PTR [eax-0x22],0x73
  4254b3:	cmp    BYTE PTR [esp+esi*1-0x7edf5569],bh
  4254ba:	lahf   
  4254bb:	adc    esp,DWORD PTR [eax]
  4254bd:	xchg   esp,eax
  4254be:	cld    
  4254bf:	in     eax,dx
  4254c0:	mov    WORD PTR [ecx+0xb8f73a1],ds
  4254c6:	inc    esp
  4254c7:	pop    es
  4254c8:	scas   al,BYTE PTR es:[edi]
  4254c9:	dec    ebp
  4254ca:	sub    edx,DWORD PTR [edi-0xc794d1f]
  4254d0:	jns    0x42549d
  4254d2:	jae    0x425548
  4254d4:	cs inc esi
  4254d6:	mov    eax,ds:0x3ef2071e
  4254db:	aad    0x92
  4254dd:	xchg   edi,eax
  4254de:	jb     0x425465
  4254e0:	jl     0x4254f8
  4254e2:	sbb    edi,DWORD PTR [ecx-0x17]
  4254e5:	inc    eax
  4254e6:	jge    0x4254d6
  4254e8:	std    
  4254e9:	mov    esp,DWORD PTR [eax]
  4254eb:	jne    0x4254b2
  4254ed:	(bad)  [edi-0x6ce7d917]
  4254f3:	add    ah,0x51
  4254f6:	les    esp,FWORD PTR [ebx]
  4254f8:	dec    esp
  4254f9:	push   esp
  4254fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254fb:	xchg   DWORD PTR [esi-0x27591833],ebx
  425501:	aaa    
  425502:	pop    ecx
  425503:	test   eax,0xe8b4d887
  425508:	jae    0x425522
  42550a:	mov    ecx,0xbfc4c926
  42550f:	adc    ch,cl
  425511:	add    edx,esp
  425513:	mov    esi,0x9bbcffb9
  425518:	push   edx
  425519:	inc    ebx
  42551a:	(bad)  
  42551b:	cmp    esp,DWORD PTR [edi]
  42551d:	add    al,0xb3
  42551f:	scas   al,BYTE PTR es:[edi]
  425520:	adc    DWORD PTR [edi+0x497e8303],esi
  425526:	adc    cl,ch
  425528:	push   0x296378d3
  42552d:	out    dx,al
  42552e:	pop    ebx
  42552f:	xor    edi,DWORD PTR [eax-0x27]
  425532:	les    esp,FWORD PTR [esi-0x4c]
  425535:	nop
  425536:	jmp    0x51b2:0xe901346c
  42553d:	cdq    
  42553e:	inc    esi
  42553f:	mov    ah,0x5b
  425541:	shl    DWORD PTR [esi+0x10a64a74],0xe
  425548:	adc    DWORD PTR [eax-0x77e2d835],0x31a9b501
  425552:	ret    
  425553:	test   eax,0xc89c2b0c
  425558:	sub    bl,BYTE PTR [edi]
  42555a:	inc    dl
  42555c:	add    BYTE PTR [eax],dh
  42555e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42555f:	rcl    DWORD PTR [eax+0x5a],cl
  425562:	sub    ebp,eax
  425564:	imul   ebp,DWORD PTR [edi+0x70fbcb0c],0x4c67b392
  42556e:	and    BYTE PTR [ecx-0x2],cl
  425571:	inc    edx
  425572:	pusha  
  425573:	push   ebx
  425574:	aam    0x6e
  425576:	jbe    0x42553a
  425578:	push   cs
  425579:	stos   BYTE PTR es:[edi],al
  42557a:	dec    ebx
  42557b:	jmp    0x6312334d
  425580:	scas   al,BYTE PTR es:[edi]
  425581:	jmp    0x42550a
  425583:	push   0xffffffa8
  425585:	cmp    dh,BYTE PTR [ebx+edx*1-0x79]
  425589:	add    DWORD PTR [edx+0x5c10ad8f],edx
  42558f:	cmp    DWORD PTR [ebp-0x21],edx
  425592:	inc    esi
  425593:	test   DWORD PTR [esp+eiz*2],eax
  425596:	fstp   TBYTE PTR [esi+0x2]
  425599:	mov    ecx,0x3521f620
  42559e:	lods   eax,DWORD PTR ds:[esi]
  42559f:	cmp    BYTE PTR [ebp-0x40],ah
  4255a2:	popf   
  4255a3:	mov    bh,0x23
  4255a5:	sub    eax,0x5a65fa5b
  4255aa:	imul   edx,DWORD PTR [ebx-0x4e],0x58
  4255ae:	cli    
  4255af:	push   cs
  4255b0:	loopne 0x425537
  4255b2:	xchg   ecx,eax
  4255b3:	sbb    al,0x3d
  4255b5:	sbb    edi,DWORD PTR [edi-0x41]
  4255b8:	mov    dh,BYTE PTR [edi-0x3a]
  4255bb:	stos   DWORD PTR es:[edi],eax
  4255bc:	sub    bh,BYTE PTR [ecx]
  4255be:	fisubr DWORD PTR ds:0x6d043ec2
  4255c4:	rol    WORD PTR [edi],cl
  4255c7:	fcomp  QWORD PTR [edi-0x3dee898]
  4255cd:	pusha  
  4255ce:	scas   eax,DWORD PTR es:[edi]
  4255cf:	scas   al,BYTE PTR es:[edi]
  4255d0:	out    0xce,eax
  4255d2:	jecxz  0x4255d6
  4255d4:	mov    eax,ds:0xd66a92d3
  4255d9:	inc    edi
  4255da:	jg     0x42556c
  4255dc:	call   0x54b8:0x6999ff5
  4255e3:	push   ss
  4255e4:	mov    ebx,0x6f8bea6d
  4255e9:	sub    DWORD PTR [esi+0x79],esi
  4255ec:	idiv   BYTE PTR [ebx-0x80]
  4255ef:	pusha  
  4255f0:	aas    
  4255f1:	jp     0x425613
  4255f3:	sbb    bh,BYTE PTR [edx+0x4a7362d0]
  4255f9:	jae    0x42558a
  4255fb:	fs push 0x8
  4255fe:	cmp    DWORD PTR [eax],eax
  425600:	pop    eax
  425601:	test   BYTE PTR [ebx+ebx*2+0xd16c683],ch
  425608:	das    
  425609:	int3   
  42560a:	test   eax,0x75ce456f
  42560f:	fnstsw WORD PTR [edi]
  425611:	repnz and BYTE PTR ds:0x48712d5c,0xa9
  425619:	lahf   
  42561a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42561b:	stos   BYTE PTR es:[edi],al
  42561c:	add    eax,0x29ef91c2
  425621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425622:	jmp    0x76a3:0xea46b757
  425629:	stos   DWORD PTR es:[edi],eax
  42562a:	fucomi st,st(3)
  42562c:	aas    
  42562d:	in     eax,0x18
  42562f:	push   esp
  425630:	mov    eax,0xe5d67fea
  425636:	enter  0xfb89,0x5b
  42563a:	mov    bl,0x9a
  42563c:	out    0x7a,al
  42563e:	sar    DWORD PTR [ebp-0x6fd2c795],1
  425644:	cs (bad) 
  425646:	xor    al,0xad
  425648:	adc    cl,al
  42564a:	inc    edx
  42564b:	pop    edi
  42564c:	cli    
  42564d:	rol    dl,1
  42564f:	repz push edx
  425651:	jmp    0x425606
  425653:	ret    
  425654:	xor    BYTE PTR [edx],bl
  425656:	inc    edx
  425657:	xor    BYTE PTR [ecx],0x32
  42565a:	sub    al,0xa5
  42565c:	mov    esi,0x65ae2bb8
  425661:	sub    ebp,DWORD PTR [ebx+0x6d]
  425664:	push   0xafff551a
  425669:	pop    ecx
  42566a:	cmp    DWORD PTR [ebp-0x459ec4b9],ecx
  425670:	jbe    0x4256b5
  425672:	icebp  
  425673:	mov    esp,0x4d7601c8
  425678:	iret   
  425679:	(bad)
  42567c:	sbb    al,0x21
  42567e:	add    BYTE PTR [edi+0x5e23b553],ah
  425684:	pop    esp
  425685:	mov    edi,0x6349cb41
  42568a:	and    al,0x50
  42568c:	sbb    cl,BYTE PTR [edx]
  42568e:	cmc    
  42568f:	sbb    esp,DWORD PTR [ecx]
  425691:	xlat   BYTE PTR ds:[ebx]
  425692:	jne    0x425700
  425694:	scas   eax,DWORD PTR es:[edi]
  425695:	sub    al,0x17
  425697:	cmp    DWORD PTR ds:0x6ffa4285,0xbbbefb6f
  4256a1:	mov    esp,0x38b0f8a0
  4256a6:	mov    dh,0x45
  4256a8:	ja     0x4256cf
  4256aa:	mov    dh,0x7d
  4256ac:	push   0xe5e502ba
  4256b1:	inc    ebp
  4256b2:	mov    eax,ds:0x4469401e
  4256b7:	pop    eax
  4256b8:	push   esp
  4256b9:	sbb    esp,DWORD PTR [edi-0x40998611]
  4256bf:	xor    ah,BYTE PTR [eax]
  4256c1:	xchg   DWORD PTR [ebx],eax
  4256c3:	ret    
  4256c4:	imul   esp,DWORD PTR [edi-0x24],0xfffffff4
  4256c8:	mov    edi,0x1f7aaa69
  4256cd:	mov    dl,0xd6
  4256cf:	test   DWORD PTR [ecx],0x6d20fb87
  4256d5:	push   0xffffffd0
  4256d7:	sbb    ebp,DWORD PTR [ebx]
  4256d9:	xchg   esi,eax
  4256da:	stc    
  4256db:	push   esp
  4256dc:	imul   ebx,edi,0x74
  4256df:	mov    ecx,0x9b71bb06
  4256e4:	sbb    eax,0x4474b298
  4256e9:	sbb    al,0xe5
  4256eb:	fcmovnb st,st(2)
  4256ed:	xchg   ecx,eax
  4256ee:	mov    dl,BYTE PTR [eax]
  4256f0:	hlt    
  4256f1:	pop    edi
  4256f2:	xchg   DWORD PTR [ecx+0x13],ecx
  4256f5:	mov    al,dl
  4256f7:	daa    
  4256f8:	les    esp,FWORD PTR [edx+eiz*8+0x4bc92944]
  4256ff:	dec    edx
  425700:	(bad)  
  425701:	fist   WORD PTR [edi-0x6ac2da6c]
  425707:	dec    ebx
  425708:	dec    ecx
  425709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42570a:	jge    0x425725
  42570c:	jle    0x425732
  42570e:	les    edi,FWORD PTR [edi+0x37e24712]
  425714:	fs iret 
  425716:	es dec ecx
  425718:	cwde   
  425719:	pop    ss
  42571a:	fisttp QWORD PTR [edi]
  42571c:	or     al,0xeb
  42571e:	ror    DWORD PTR [eax],0x83
  425721:	cmp    bl,BYTE PTR [ecx]
  425723:	add    al,0x69
  425725:	sbb    edi,DWORD PTR [esp+eax*2]
  425728:	pop    esi
  425729:	push   esi
  42572a:	frstor [edi+ecx*1+0xb0bb3ae]
  425731:	das    
  425732:	es dec ebx
  425734:	fs nop
  425736:	cmc    
  425737:	push   ebp
  425738:	push   eax
  425739:	scas   al,BYTE PTR es:[edi]
  42573a:	popf   
  42573b:	mov    bl,0xd2
  42573d:	pop    edi
  42573e:	fdivr  QWORD PTR [edi-0x164f70fb]
  425744:	(bad)  
  425745:	pop    esp
  425746:	mov    ebx,0x58517635
  42574b:	inc    esi
  42574c:	popf   
  42574d:	cmp    edi,0xffffffb4
  425750:	je     0x425749
  425752:	xor    al,al
  425754:	pop    edi
  425755:	xor    BYTE PTR [esi+0x3b],cl
  425758:	sbb    al,0xcb
  42575a:	pop    edi
  42575b:	pop    ebp
  42575c:	dec    edi
  42575d:	cs loop 0x42577d
  425760:	push   edi
  425761:	jne    0x42573b
  425763:	(bad)
  425766:	stc    
  425767:	jmp    0x42576d
  425769:	enter  0xe31,0x27
  42576d:	ret    
  42576e:	mov    ah,0x52
  425770:	popa   
  425771:	scas   al,BYTE PTR es:[edi]
  425772:	mov    dl,0xc0
  425774:	fs out dx,al
  425776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425777:	or     al,bl
  425779:	cmp    ch,dl
  42577b:	dec    esi
  42577c:	mov    edi,0x873cf820
  425781:	xchg   edx,eax
  425782:	mov    ds:0x5a3f79cd,al
  425787:	or     ecx,ebp
  425789:	cli    
  42578a:	and    dl,BYTE PTR [eax]
  42578c:	mov    eax,0x3d6d631b
  425791:	hlt    
  425792:	cwde   
  425793:	dec    edx
  425794:	mov    bl,0xea
  425796:	out    dx,al
  425797:	fisttp DWORD PTR [esi+0x17]
  42579a:	call   0x4241:0xaa0eb0bb
  4257a1:	push   ds
  4257a2:	pop    esi
  4257a3:	adc    eax,0xe63fc565
  4257a8:	es scas al,BYTE PTR es:[edi]
  4257aa:	fucomp st(4)
  4257ac:	sbb    DWORD PTR [ecx],esi
  4257ae:	ror    BYTE PTR [ebx],0xca
  4257b1:	sub    DWORD PTR [edx+0x740a3843],eax
  4257b7:	(bad)  
  4257b8:	ins    BYTE PTR es:[edi],dx
  4257b9:	inc    edi
  4257ba:	icebp  
  4257bb:	mov    esi,0xb4bb7e35
  4257c0:	not    edx
  4257c2:	lods   eax,DWORD PTR ds:[esi]
  4257c3:	jb     0x425763
  4257c5:	push   0xffffffc3
  4257c7:	xchg   edx,eax
  4257c8:	pop    eax
  4257c9:	add    ch,BYTE PTR ds:0xb7292f6d
  4257cf:	lock adc al,0xbd
  4257d2:	lods   eax,DWORD PTR ds:[esi]
  4257d3:	pop    edx
  4257d4:	cwde   
  4257d5:	and    eax,0x35036285
  4257da:	aaa    
  4257db:	(bad)  
  4257dc:	leave  
  4257dd:	xchg   ebp,eax
  4257de:	dec    edi
  4257df:	outs   dx,DWORD PTR ds:[esi]
  4257e0:	pop    ebx
  4257e1:	int    0x10
  4257e3:	cli    
  4257e4:	cmp    eax,0xbc1418e7
  4257ea:	js     0x42580c
  4257ec:	mov    bl,0x84
  4257ee:	ret    
  4257ef:	aad    0x1
  4257f1:	in     al,dx
  4257f2:	test   BYTE PTR [esi+0x40],dh
  4257f5:	sbb    DWORD PTR [ebx+0x56aaed0],ecx
  4257fb:	data16 cmp cl,bh
  4257fe:	xor    eax,0xbc5101dd
  425803:	imul   ebp,ebx,0xffffffe4
  425806:	repnz les ecx,FWORD PTR [edx+edx*2-0x78fe271e]
  42580e:	in     eax,0x17
  425810:	(bad)  
  425811:	mov    ds:0x9e058458,eax
  425816:	adc    ebx,DWORD PTR [ecx+0x60]
  425819:	lods   al,BYTE PTR ds:[esi]
  42581a:	and    dl,dh
  42581c:	push   ebx
  42581d:	sub    edi,eax
  42581f:	mov    BYTE PTR [edx+esi*1-0x5],bh
  425823:	xchg   ebx,eax
  425824:	dec    esp
  425825:	ins    DWORD PTR es:[edi],dx
  425826:	mov    dh,0xbd
  425828:	sbb    esp,DWORD PTR ds:0x114dc055
  42582e:	mov    eax,0xad708f85
  425833:	(bad)  
  425834:	or     esi,DWORD PTR [eax+0x3b]
  425837:	clc    
  425838:	je     0x42588d
  42583e:	mov    DWORD PTR [ebp-0xc],esi
  425841:	mov    eax,DWORD PTR [ebp-0xc]
  425844:	mov    esi,DWORD PTR [ebp+0xc]
  425847:	xor    eax,ecx
  425849:	lea    eax,[eax*8+0x1939820]
  425850:	mov    eax,DWORD PTR [esi+eax*1]
  425853:	mov    DWORD PTR [ebp+0xc],eax
  425856:	mov    eax,DWORD PTR [ebp-0x4]
  425859:	mov    esi,DWORD PTR [ebp-0x8]
  42585c:	xor    eax,ecx
  42585e:	xor    esi,ecx
  425860:	add    esi,edx
  425862:	add    eax,edx
  425864:	imul   eax,esi
  425867:	mov    esi,DWORD PTR [ebp+0xc]
  42586a:	cmp    esi,eax
  42586c:	je     0x42588d
  425872:	mov    eax,DWORD PTR [ebp-0x4]
  425875:	xor    eax,ecx
  425877:	mov    ecx,DWORD PTR [ebp+0xc]
  42587a:	add    eax,edx
  42587c:	imul   eax,ecx
  42587f:	add    eax,DWORD PTR [ebp+0x8]
  425882:	mov    DWORD PTR [ebp+0xc],eax
  425885:	mov    eax,DWORD PTR [ebp+0xc]
  425888:	jmp    0x42589e
  42588d:	mov    eax,DWORD PTR [ebp-0x4]
  425890:	mov    esi,DWORD PTR [ebp-0x8]
  425893:	xor    esi,ecx
  425895:	xor    eax,ecx
  425897:	add    esi,edx
  425899:	add    eax,edx
  42589b:	imul   eax,esi
  42589e:	pop    edi
  42589f:	pop    esi
  4258a0:	leave  
  4258a1:	ret    0x8
	...
  4258b4:	int3   
  4258b5:	cmp    al,0xf3
  4258b7:	dec    ebp
  4258b8:	add    BYTE PTR [eax],al
  4258ba:	add    BYTE PTR [eax],al
  4258bc:	add    al,BYTE PTR [eax]
  4258be:	add    BYTE PTR [eax],al
  4258c0:	add    BYTE PTR ss:[eax],al
  4258c3:	add    al,dl
  4258c5:	pop    eax
  4258c6:	add    al,BYTE PTR [eax]
  4258c8:	ror    BYTE PTR [edx+eax*1+0x0],1
  4258cc:	add    BYTE PTR [eax],al
  4258ce:	add    BYTE PTR [eax],al
  4258d0:	push   edx
  4258d1:	push   ebx
  4258d2:	inc    esp
  4258d3:	push   ebx
  4258d4:	push   edx
  4258d5:	(bad)  [edx+0x50]
  4258d8:	enter  0x990e,0x42
  4258dc:	lods   eax,DWORD PTR ds:[esi]
  4258dd:	pop    esi
  4258de:	inc    BYTE PTR [ebx-0x1e]
  4258e1:	push   es
  4258e2:	pop    esi
  4258e3:	lds    eax,FWORD PTR [ecx]
  4258e5:	add    BYTE PTR [eax],al
  4258e7:	add    BYTE PTR [edi+0x3a],al
  4258ea:	pop    esp
  4258eb:	push   ebx
  4258ec:	jns    0x425961
  4258ee:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4258f2:	and    BYTE PTR [edi+0x69],dl
  4258f5:	outs   dx,BYTE PTR ds:[esi]
  4258f6:	pop    esp
  4258f7:	inc    esi
  4258f8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425900:	outs   dx,BYTE PTR ds:[esi]
  425901:	jae    0x42596c
  425903:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42590b:	or     BYTE PTR [ecx],al
  42590d:	add    BYTE PTR [eax],al
  42590f:	push   ebx
  425910:	mov    eax,ebx
  425912:	xchg   ecx,eax
  425913:	mov    eax,DWORD PTR [ebp+0x8]
  425916:	cmp    eax,0xf89c85a5
  42591b:	jne    0x425ddc
  425921:	mov    eax,DWORD PTR [ebp+0xc]
  425924:	cmp    eax,0xf89c85a2
  425929:	jne    0x425ddc
  42592f:	mov    eax,DWORD PTR [ebp+0x24]
  425932:	mov    DWORD PTR [ebp-0x4],eax
  425935:	mov    eax,DWORD PTR [ebp-0x4]
  425938:	mov    eax,DWORD PTR [eax+0x1d8]
  42593e:	mov    eax,DWORD PTR [eax]
  425940:	mov    eax,DWORD PTR [eax]
  425942:	mov    DWORD PTR [ebp-0x8],eax
  425945:	mov    BYTE PTR [ebp-0x18],0x1a
  425949:	mov    BYTE PTR [ebp-0x17],0x1f
  42594d:	mov    BYTE PTR [ebp-0x16],0x18
  425951:	mov    BYTE PTR [ebp-0x15],0x4e
  425955:	mov    BYTE PTR [ebp-0x14],0x51
  425959:	mov    BYTE PTR [ebp-0x13],0x83
  42595d:	mov    BYTE PTR [ebp-0x20],0xc
  425961:	mov    BYTE PTR [ebp-0x1f],0xe
  425965:	mov    BYTE PTR [ebp-0x1e],0x1c
  425969:	mov    BYTE PTR [ebp-0x1d],0x11
  42596d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425971:	mov    BYTE PTR [ebp-0x1b],0x51
  425975:	mov    BYTE PTR [ebp-0x1a],0x83
  425979:	mov    BYTE PTR [ebp-0x28],0xe
  42597d:	mov    BYTE PTR [ebp-0x27],0x1b
  425981:	mov    BYTE PTR [ebp-0x26],0x17
  425985:	mov    BYTE PTR [ebp-0x25],0xa
  425989:	mov    BYTE PTR [ebp-0x24],0x20
  42598d:	mov    BYTE PTR [ebp-0x23],0x13
  425991:	mov    BYTE PTR [ebp-0x22],0x18
  425995:	mov    BYTE PTR [ebp-0x21],0x83
  425999:	xor    ecx,ecx
  42599b:	lea    eax,[ebp+ecx*1-0x18]
  42599f:	movzx  edx,BYTE PTR [eax]
  4259a2:	xor    edx,0x7e
  4259a5:	add    edx,0x3
  4259a8:	inc    ecx
  4259a9:	mov    BYTE PTR [eax],dl
  4259ab:	cmp    ecx,0x6
  4259ae:	jb     0x42599b
  4259b0:	xor    ecx,ecx
  4259b2:	lea    eax,[ebp+ecx*1-0x20]
  4259b6:	movzx  edx,BYTE PTR [eax]
  4259b9:	xor    edx,0x7e
  4259bc:	add    edx,0x3
  4259bf:	inc    ecx
  4259c0:	mov    BYTE PTR [eax],dl
  4259c2:	cmp    ecx,0x7
  4259c5:	jb     0x4259b2
  4259c7:	xor    ecx,ecx
  4259c9:	lea    eax,[ebp+ecx*1-0x28]
  4259cd:	movzx  edx,BYTE PTR [eax]
  4259d0:	xor    edx,0x7e
  4259d3:	add    edx,0x3
  4259d6:	inc    ecx
  4259d7:	mov    BYTE PTR [eax],dl
  4259d9:	cmp    ecx,0x8
  4259dc:	jb     0x4259c9
  4259de:	lea    eax,[ebp-0x2c]
  4259e1:	mov    DWORD PTR [ebp-0x8],eax
  4259e4:	mov    ecx,DWORD PTR [ebp-0x8]
  4259e7:	mov    eax,0x7113fccf
  4259ec:	mov    DWORD PTR [ecx],eax
  4259ee:	mov    ecx,DWORD PTR [ebp-0x2c]
  4259f1:	push   esi
  4259f2:	push   edi
  4259f3:	mov    esi,0x4e3e
  4259f8:	mov    ebx,0x3272f5
  4259fd:	cmp    ecx,eax
  4259ff:	jne    0x425aca
  425a05:	lea    eax,[esi+0x39]
  425a08:	mov    WORD PTR [ebp-0x78],ax
  425a0c:	mov    eax,esi
  425a0e:	mov    WORD PTR [ebp-0x76],ax
  425a12:	add    eax,0x3f
  425a15:	mov    WORD PTR [ebp-0x74],ax
  425a19:	lea    eax,[esi-0x2]
  425a1c:	mov    WORD PTR [ebp-0x72],ax
  425a20:	add    eax,0x43
  425a23:	mov    ecx,eax
  425a25:	lea    eax,[esi-0x9]
  425a28:	mov    WORD PTR [ebp-0x66],ax
  425a2c:	mov    eax,esi
  425a2e:	mov    WORD PTR [ebp-0x64],ax
  425a32:	add    eax,0xffffffec
  425a35:	mov    WORD PTR [ebp-0x62],ax
  425a39:	mov    eax,0x443
  425a3e:	mov    WORD PTR [ebp-0x60],ax
  425a42:	mov    eax,0x5670
  425a47:	mov    WORD PTR [ebp-0x5e],ax
  425a4b:	mov    eax,0x6110
  425a50:	mov    WORD PTR [ebp-0x5c],ax
  425a54:	lea    eax,[ebp-0xe0]
  425a5a:	push   eax
  425a5b:	mov    eax,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,0x75108ae
  425a63:	xor    eax,edi
  425a65:	add    eax,ebx
  425a67:	push   eax
  425a68:	mov    WORD PTR [ebp-0x70],cx
  425a6c:	lea    ecx,[esi-0xe]
  425a6f:	mov    edx,ecx
  425a71:	lea    eax,[ebp-0x78]
  425a74:	push   eax
  425a75:	mov    eax,DWORD PTR [ebp-0x4]
  425a78:	mov    eax,DWORD PTR [eax+0x198]
  425a7e:	mov    WORD PTR [ebp-0x6e],dx
  425a82:	mov    edx,0x4f8a
  425a87:	mov    WORD PTR [ebp-0x6c],dx
  425a8b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a92:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a99:	mov    DWORD PTR [ebp-0xe0],0x1
  425aa3:	mov    DWORD PTR [ebp-0xdc],0x255
  425aad:	push   DWORD PTR [eax]
  425aaf:	mov    eax,DWORD PTR [ebp+0x10]
  425ab2:	call   eax
  425ab4:	mov    DWORD PTR [ebp-0x8],eax
  425ab7:	mov    eax,DWORD PTR [ebp-0x8]
  425aba:	test   eax,eax
  425abc:	je     0x425acf
  425abe:	xor    DWORD PTR ds:0x76586876,0x87687666
  425ac8:	jmp    0x425acf
  425aca:	mov    edi,0x75108ae
  425acf:	mov    eax,DWORD PTR [ebp-0x4]
  425ad2:	mov    ecx,DWORD PTR [eax+0x18c]
  425ad8:	xor    eax,eax
  425ada:	cmp    DWORD PTR [ecx],eax
  425adc:	jne    0x425d4f
  425ae2:	mov    ecx,DWORD PTR [ebp-0x4]
  425ae5:	mov    ecx,DWORD PTR [ecx+0x17c]
  425aeb:	mov    DWORD PTR [ecx],eax
  425aed:	mov    ecx,DWORD PTR [ebp-0x4]
  425af0:	mov    ecx,DWORD PTR [ecx+0x180]
  425af6:	mov    DWORD PTR [ecx],eax
  425af8:	mov    eax,0x4e6d
  425afd:	mov    WORD PTR [ebp-0x9c],ax
  425b04:	mov    eax,esi
  425b06:	mov    WORD PTR [ebp-0x9a],ax
  425b0d:	mov    eax,0x4e7d
  425b12:	mov    WORD PTR [ebp-0x98],ax
  425b19:	add    eax,0xffffffc0
  425b1c:	mov    WORD PTR [ebp-0x96],ax
  425b23:	mov    eax,0x4f8e
  425b28:	mov    WORD PTR [ebp-0x94],ax
  425b2f:	mov    eax,0x4e32
  425b34:	mov    WORD PTR [ebp-0x92],ax
  425b3b:	add    eax,0x4d
  425b3e:	mov    WORD PTR [ebp-0x90],ax
  425b45:	mov    eax,0x4e30
  425b4a:	mov    WORD PTR [ebp-0x8e],ax
  425b51:	mov    eax,esi
  425b53:	mov    WORD PTR [ebp-0x8c],ax
  425b5a:	mov    eax,0x4e31
  425b5f:	mov    WORD PTR [ebp-0x8a],ax
  425b66:	mov    eax,0x99fd
  425b6b:	mov    WORD PTR [ebp-0x88],ax
  425b72:	mov    eax,0x8d62
  425b77:	mov    WORD PTR [ebp-0x86],ax
  425b7e:	mov    eax,0xd66f
  425b83:	mov    WORD PTR [ebp-0x84],ax
  425b8a:	mov    eax,0xd783
  425b8f:	mov    WORD PTR [ebp-0x82],ax
  425b96:	mov    eax,0x2780
  425b9b:	mov    WORD PTR [ebp-0x80],ax
  425b9f:	mov    eax,0x4780
  425ba4:	mov    WORD PTR [ebp-0x7e],ax
  425ba8:	mov    eax,0x4e33
  425bad:	push   0x8
  425baf:	mov    WORD PTR [ebp-0x7c],ax
  425bb3:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425bba:	mov    DWORD PTR [ebp-0xc],0x83181320
  425bc1:	lea    eax,[ebp-0x10]
  425bc4:	pop    ecx
  425bc5:	mov    dl,BYTE PTR [eax]
  425bc7:	xor    dl,0x7e
  425bca:	add    dl,0x3
  425bcd:	mov    BYTE PTR [eax],dl
  425bcf:	inc    eax
  425bd0:	dec    ecx
  425bd1:	jne    0x425bc5
  425bd3:	lea    eax,[ebp-0x10]
  425bd6:	mov    DWORD PTR [ebp-0xdc],eax
  425bdc:	lea    eax,[ebp-0xe0]
  425be2:	push   eax
  425be3:	mov    eax,DWORD PTR [ebp+0xc]
  425be6:	xor    eax,edi
  425be8:	add    eax,ebx
  425bea:	push   eax
  425beb:	mov    eax,DWORD PTR [ebp-0x4]
  425bee:	add    eax,0x66
  425bf1:	push   eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x4]
  425bf5:	mov    eax,DWORD PTR [eax+0x198]
  425bfb:	mov    DWORD PTR [ebp-0xe0],0x1
  425c05:	push   DWORD PTR [eax]
  425c07:	mov    eax,DWORD PTR [ebp+0x10]
  425c0a:	call   eax
  425c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c0f:	xor    ecx,edi
  425c11:	add    ecx,ebx
  425c13:	mov    DWORD PTR [ebp-0x8],eax
  425c16:	cmp    eax,ecx
  425c18:	jne    0x425c33
  425c1a:	mov    eax,ds:0x33730bcc
  425c1f:	or     eax,0x22150bcf
  425c24:	mov    ds:0x33730bcc,eax
  425c29:	add    eax,0x3372e92f
  425c2e:	mov    ds:0x33730bcc,eax
  425c33:	mov    ecx,0x4e66
  425c38:	mov    eax,ecx
  425c3a:	mov    WORD PTR [ebp-0x40],ax
  425c3e:	add    eax,0x5
  425c41:	mov    edx,eax
  425c43:	mov    WORD PTR [ebp-0x3e],dx
  425c47:	mov    edx,0x4f93
  425c4c:	mov    WORD PTR [ebp-0x3c],dx
  425c50:	add    edx,0xfffffff8
  425c53:	mov    WORD PTR [ebp-0x3a],dx
  425c57:	mov    edx,0x4f89
  425c5c:	mov    WORD PTR [ebp-0x38],dx
  425c60:	add    edx,0x3
  425c63:	mov    WORD PTR [ebp-0x36],dx
  425c67:	mov    edx,0x4f87
  425c6c:	mov    WORD PTR [ebp-0x34],dx
  425c70:	mov    WORD PTR [ebp-0x32],cx
  425c74:	mov    ecx,esi
  425c76:	mov    WORD PTR [ebp-0x30],cx
  425c7a:	lea    ecx,[edx-0x1]
  425c7d:	mov    edx,ecx
  425c7f:	mov    WORD PTR [ebp-0x54],dx
  425c83:	mov    edx,eax
  425c85:	mov    WORD PTR [ebp-0x52],dx
  425c89:	mov    edx,0x4e73
  425c8e:	mov    WORD PTR [ebp-0x50],dx
  425c92:	mov    WORD PTR [ebp-0x4e],ax
  425c96:	lea    eax,[edx-0xa]
  425c99:	mov    WORD PTR [ebp-0x4c],ax
  425c9d:	add    eax,0x3
  425ca0:	mov    WORD PTR [ebp-0x4a],ax
  425ca4:	lea    eax,[edx-0xc]
  425ca7:	mov    WORD PTR [ebp-0x48],ax
  425cab:	mov    WORD PTR [ebp-0x46],cx
  425caf:	mov    WORD PTR [ebp-0x44],si
  425cb3:	mov    eax,DWORD PTR [ebp+0x8]
  425cb6:	movzx  ecx,WORD PTR [ebp-0x54]
  425cba:	xor    eax,edi
  425cbc:	add    eax,ebx
  425cbe:	xor    eax,ecx
  425cc0:	mov    WORD PTR [ebp-0x54],ax
  425cc4:	mov    eax,DWORD PTR [ebp+0x8]
  425cc7:	movzx  ecx,WORD PTR [ebp-0x40]
  425ccb:	xor    eax,edi
  425ccd:	add    eax,ebx
  425ccf:	xor    eax,ecx
  425cd1:	mov    WORD PTR [ebp-0x40],ax
  425cd5:	xor    eax,eax
  425cd7:	mov    WORD PTR [ebp-0xf4],ax
  425cde:	mov    WORD PTR [ebp-0x108],ax
  425ce5:	mov    edi,DWORD PTR [ebp+0x24]
  425ce8:	lea    eax,[ebp-0xf4]
  425cee:	lea    edx,[ebp-0x54]
  425cf1:	mov    DWORD PTR [ebp-0xe0],0x2
  425cfb:	mov    DWORD PTR [ebp-0xdc],eax
  425d01:	call   0x428739
  425d06:	mov    DWORD PTR [ebp-0xd8],eax
  425d0c:	lea    eax,[ebp-0xe0]
  425d12:	push   eax
  425d13:	mov    eax,DWORD PTR [ebp+0xc]
  425d16:	xor    eax,0x75108ae
  425d1b:	add    eax,ebx
  425d1d:	push   eax
  425d1e:	lea    eax,[ebp-0x9c]
  425d24:	push   eax
  425d25:	push   DWORD PTR [ebp-0x8]
  425d28:	mov    eax,DWORD PTR [ebp+0x10]
  425d2b:	call   eax
  425d2d:	mov    edi,DWORD PTR [ebp+0x24]
  425d30:	lea    eax,[ebp-0x108]
  425d36:	lea    edx,[ebp-0x40]
  425d39:	mov    DWORD PTR [ebp-0xdc],eax
  425d3f:	call   0x428739
  425d44:	mov    DWORD PTR [ebp-0xd8],eax
  425d4a:	mov    edi,0x75108ae
  425d4f:	mov    eax,DWORD PTR [ebp+0x14]
  425d52:	push   DWORD PTR [ebp-0x4]
  425d55:	push   DWORD PTR [ebp+0x20]
  425d58:	push   DWORD PTR [ebp+0x1c]
  425d5b:	push   DWORD PTR [ebp+0x18]
  425d5e:	push   DWORD PTR [ebp+0x10]
  425d61:	push   DWORD PTR [ebp+0x8]
  425d64:	push   DWORD PTR [ebp+0xc]
  425d67:	call   0x426fda
  425d6c:	test   eax,eax
  425d6e:	je     0x425db2
  425d70:	add    DWORD PTR [ebp-0x4],eax
  425d73:	push   DWORD PTR [ebp-0x4]
  425d76:	lea    esi,[ebp+0x4]
  425d79:	call   0x4261ca
  425d7e:	mov    eax,DWORD PTR [ebp-0x4]
  425d81:	mov    eax,DWORD PTR [eax+0x1c8]
  425d87:	mov    eax,DWORD PTR [eax]
  425d89:	xor    eax,edi
  425d8b:	add    eax,ebx
  425d8d:	mov    eax,DWORD PTR [ebp-0x4]
  425d90:	jne    0x425da8
  425d92:	mov    ecx,DWORD PTR [ebp-0x4]
  425d95:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d9b:	push   DWORD PTR [ecx]
  425d9d:	mov    eax,DWORD PTR [eax+0x1e0]
  425da3:	call   DWORD PTR [eax+0x28]
  425da6:	jmp    0x425db2
  425da8:	mov    eax,DWORD PTR [eax+0x17c]
  425dae:	mov    eax,DWORD PTR [eax]
  425db0:	add    DWORD PTR [esi],eax
  425db2:	mov    eax,DWORD PTR [ebp-0x4]
  425db5:	mov    eax,DWORD PTR [eax+0x1dc]
  425dbb:	dec    DWORD PTR [eax]
  425dbd:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc0:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425dc6:	mov    eax,DWORD PTR [eax]
  425dc8:	lea    eax,[ecx+eax*4]
  425dcb:	mov    ecx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x17c]
  425dd4:	mov    eax,DWORD PTR [eax]
  425dd6:	mov    ecx,DWORD PTR [ecx]
  425dd8:	add    DWORD PTR [eax],ecx
  425dda:	pop    edi
  425ddb:	pop    esi
  425ddc:	pop    ebx
  425ddd:	leave  
  425dde:	ret    0x20
  425de1:	push   edi
  425de2:	push   esi
  425de3:	push   ebx
  425de4:	push   ebp
  425de5:	mov    ebp,esp
  425de7:	mov    eax,DWORD PTR [ebp+0x24]
  425dea:	add    DWORD PTR [ebp+0x28],eax
  425ded:	push   eax
  425dee:	cld    
  425def:	mov    esi,DWORD PTR [ebp+0x18]
  425df2:	add    DWORD PTR [ebp+0x1c],esi
  425df5:	push   esi
  425df6:	mov    esi,DWORD PTR [ebp+0x14]
  425df9:	lods   eax,DWORD PTR ds:[esi]
  425dfa:	xchg   edx,eax
  425dfb:	push   edx
  425dfc:	mov    cl,BYTE PTR [esi-0x2]
  425dff:	or     eax,0xffffffff
  425e02:	shl    eax,cl
  425e04:	not    eax
  425e06:	push   eax
  425e07:	mov    cl,dh
  425e09:	or     eax,0xffffffff
  425e0c:	shl    eax,cl
  425e0e:	not    eax
  425e10:	push   eax
  425e11:	add    cl,dl
  425e13:	mov    edi,esi
  425e15:	sub    esp,0xc
  425e18:	sub    eax,eax
  425e1a:	inc    eax
  425e1b:	push   eax
  425e1c:	push   eax
  425e1d:	push   eax
  425e1e:	push   eax
  425e1f:	push   eax
  425e20:	push   edi
  425e21:	sub    esi,esi
  425e23:	push   esi
  425e24:	or     ebx,0xffffffff
  425e27:	mov    eax,0x300
  425e2c:	shl    eax,cl
  425e2e:	lea    ecx,[eax+0x736]
  425e34:	mov    eax,0x4000400
  425e39:	shr    ecx,1
  425e3b:	rep stos DWORD PTR es:[edi],eax
  425e3d:	push   0x5
  425e3f:	pop    ecx
  425e40:	call   0x42612b
  425e45:	loop   0x425e40
  425e47:	lea    esi,[esi]
  425e49:	lea    edi,[edi]
  425e4b:	mov    edi,DWORD PTR [ebp-0x4]
  425e4e:	mov    eax,DWORD PTR [ebp-0x10]
  425e51:	sub    edi,DWORD PTR [ebp+0x24]
  425e54:	and    eax,edi
  425e56:	mov    DWORD PTR [ebp-0x18],eax
  425e59:	mov    al,0x0
  425e5b:	call   0x426143
  425e60:	jne    0x425efb
  425e66:	mov    cl,BYTE PTR [ebp-0xc]
  425e69:	and    edi,DWORD PTR [ebp-0x14]
  425e6c:	shl    edi,cl
  425e6e:	sub    cl,0x8
  425e71:	neg    cl
  425e73:	shr    esi,cl
  425e75:	pop    eax
  425e76:	add    edi,esi
  425e78:	pop    esi
  425e79:	lea    edi,[edi+edi*2]
  425e7c:	shl    edi,0x8
  425e7f:	cmp    al,0x7
  425e81:	pop    edx
  425e82:	lea    ecx,[esi+edi*2+0xe6c]
  425e89:	push   ecx
  425e8a:	push   esi
  425e8b:	mov    esi,0x100
  425e90:	push   eax
  425e91:	mov    al,0x1
  425e93:	jb     0x425ec9
  425e95:	mov    edi,DWORD PTR [ebp-0x4]
  425e98:	sub    edi,DWORD PTR [ebp-0x24]
  425e9b:	movzx  edi,BYTE PTR [edi]
  425e9e:	mov    ebp,DWORD PTR [ebp-0x34]
  425ea1:	shl    edi,1
  425ea3:	mov    ecx,esi
  425ea5:	and    esi,edi
  425ea7:	add    ecx,esi
  425ea9:	lea    ebp,[ebp+ecx*2+0x0]
  425ead:	call   0x426162
  425eb2:	mov    ecx,eax
  425eb4:	shr    esi,0x8
  425eb7:	and    ecx,0x1
  425eba:	cmp    esi,ecx
  425ebc:	mov    esi,0x100
  425ec1:	jne    0x425ed1
  425ec3:	cmp    eax,esi
  425ec5:	jb     0x425e9e
  425ec7:	jmp    0x425edd
  425ec9:	mov    ebp,DWORD PTR [ebp-0x34]
  425ecc:	call   0x426162
  425ed1:	inc    eax
  425ed2:	inc    esi
  425ed3:	sub    eax,0x1
  425ed6:	sub    esi,0x1
  425ed9:	cmp    eax,esi
  425edb:	jb     0x425ec9
  425edd:	pop    edx
  425ede:	inc    edx
  425edf:	cmp    edx,0x5
  425ee2:	dec    edx
  425ee3:	mov    ecx,edx
  425ee5:	jb     0x425ef6
  425ee7:	inc    edx
  425ee8:	cmp    edx,0xb
  425eeb:	dec    edx
  425eec:	mov    cl,0x4
  425eee:	dec    cl
  425ef0:	jb     0x425ef6
  425ef2:	mov    cl,0x7
  425ef4:	dec    cl
  425ef6:	sub    edx,ecx
  425ef8:	push   edx
  425ef9:	jmp    0x425f4a
  425efb:	mov    al,0xc1
  425efd:	dec    al
  425eff:	call   0x426153
  425f04:	jne    0x425f1a
  425f06:	pop    eax
  425f07:	pop    edi
  425f08:	pop    edx
  425f09:	pop    ecx
  425f0a:	pop    edx
  425f0b:	pop    ecx
  425f0c:	push   DWORD PTR [esp]
  425f0f:	push   ecx
  425f10:	push   edx
  425f11:	mov    edx,0x664
  425f16:	mov    cl,0x0
  425f18:	jmp    0x425f8d
  425f1a:	mov    al,0xcd
  425f1c:	dec    al
  425f1e:	call   0x426153
  425f23:	jne    0x425f53
  425f25:	mov    al,0xf1
  425f27:	dec    al
  425f29:	call   0x426143
  425f2e:	jne    0x425f83
  425f30:	pop    eax
  425f31:	cmp    al,0x7
  425f33:	mov    al,0x9
  425f35:	jb     0x425f39
  425f37:	mov    al,0xb
  425f39:	push   eax
  425f3a:	mov    esi,DWORD PTR [ebp-0x4]
  425f3d:	sub    esi,DWORD PTR [ebp-0x24]
  425f40:	cmp    esi,DWORD PTR [ebp+0x24]
  425f43:	jb     0x42611a
  425f49:	lods   al,BYTE PTR ds:[esi]
  425f4a:	mov    edi,DWORD PTR [ebp-0x4]
  425f4d:	stos   BYTE PTR es:[edi],al
  425f4e:	jmp    0x4260e1
  425f53:	mov    al,0xd8
  425f55:	call   0x426153
  425f5a:	mov    esi,DWORD PTR [ebp-0x28]
  425f5d:	je     0x425f7a
  425f5f:	mov    al,0xe4
  425f61:	call   0x426153
  425f66:	mov    esi,DWORD PTR [ebp-0x2c]
  425f69:	je     0x425f74
  425f6b:	mov    esi,DWORD PTR [ebp-0x30]
  425f6e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f71:	mov    DWORD PTR [ebp-0x30],ecx
  425f74:	mov    ecx,DWORD PTR [ebp-0x28]
  425f77:	mov    DWORD PTR [ebp-0x2c],ecx
  425f7a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f7d:	mov    DWORD PTR [ebp-0x28],ecx
  425f80:	mov    DWORD PTR [ebp-0x24],esi
  425f83:	pop    eax
  425f84:	pop    edi
  425f85:	pop    ecx
  425f86:	mov    edx,0xa68
  425f8b:	mov    cl,0x8
  425f8d:	add    edx,edi
  425f8f:	push   edx
  425f90:	push   edi
  425f91:	cmp    al,0x7
  425f93:	mov    al,cl
  425f95:	jb     0x425f99
  425f97:	add    al,0x3
  425f99:	push   eax
  425f9a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f9d:	call   0x426160
  425fa2:	jne    0x425fb8
  425fa4:	mov    eax,DWORD PTR [ebp-0x18]
  425fa7:	mov    edi,DWORD PTR [ebp-0x34]
  425faa:	shl    eax,0x3
  425fad:	sub    ecx,ecx
  425faf:	push   0x8
  425fb1:	pop    esi
  425fb2:	lea    edi,[edi+eax*2+0x4]
  425fb6:	jmp    0x425fed
  425fb8:	mov    ebp,DWORD PTR [ebp-0x34]
  425fbb:	add    ebp,0x2
  425fbe:	call   0x426160
  425fc3:	jne    0x425fdd
  425fc5:	mov    eax,DWORD PTR [ebp-0x18]
  425fc8:	mov    edi,DWORD PTR [ebp-0x34]
  425fcb:	shl    eax,0x3
  425fce:	push   0x8
  425fd0:	pop    ecx
  425fd1:	push   0x8
  425fd3:	pop    esi
  425fd4:	lea    edi,[edi+eax*2+0x104]
  425fdb:	jmp    0x425fed
  425fdd:	mov    edi,0x204
  425fe2:	add    edi,DWORD PTR [ebp-0x34]
  425fe5:	push   0x10
  425fe7:	pop    ecx
  425fe8:	mov    esi,0x100
  425fed:	mov    DWORD PTR [ebp-0x1c],ecx
  425ff0:	sub    eax,eax
  425ff2:	inc    eax
  425ff3:	mov    ebp,edi
  425ff5:	call   0x426162
  425ffa:	mov    ecx,eax
  425ffc:	sub    ecx,esi
  425ffe:	jb     0x425ff3
  426000:	add    DWORD PTR [ebp-0x1c],ecx
  426003:	cmp    DWORD PTR [ebp-0x3c],0x4
  426007:	jae    0x4260bd
  42600d:	add    DWORD PTR [ebp-0x3c],0x7
  426011:	mov    ecx,DWORD PTR [ebp-0x1c]
  426014:	cmp    ecx,0x4
  426017:	jb     0x42601c
  426019:	push   0x3
  42601b:	pop    ecx
  42601c:	mov    edi,DWORD PTR [ebp-0x38]
  42601f:	shl    ecx,0x6
  426022:	sub    eax,eax
  426024:	inc    eax
  426025:	push   0x40
  426027:	pop    esi
  426028:	lea    edi,[edi+ecx*2+0x360]
  42602f:	mov    ebp,edi
  426031:	call   0x426162
  426036:	mov    ecx,eax
  426038:	sub    ecx,esi
  42603a:	jb     0x42602f
  42603c:	mov    DWORD PTR [ebp-0x18],ecx
  42603f:	mov    DWORD PTR [ebp-0x24],ecx
  426042:	cmp    ecx,0x4
  426045:	jb     0x4260ba
  426047:	mov    esi,ecx
  426049:	and    DWORD PTR [ebp-0x24],0x1
  42604d:	shr    esi,1
  42604f:	or     DWORD PTR [ebp-0x24],0x2
  426053:	dec    esi
  426054:	cmp    ecx,0xe
  426057:	jae    0x426072
  426059:	mov    eax,0x2af
  42605e:	sub    eax,ecx
  426060:	mov    ecx,esi
  426062:	shl    BYTE PTR [ebp-0x24],cl
  426065:	add    eax,DWORD PTR [ebp-0x24]
  426068:	shl    eax,1
  42606a:	add    eax,DWORD PTR [ebp-0x38]
  42606d:	mov    DWORD PTR [ebp-0x34],eax
  426070:	jmp    0x42609f
  426072:	sub    esi,0x4
  426075:	call   0x42611f
  42607a:	shr    ebx,1
  42607c:	shl    DWORD PTR [ebp-0x24],1
  42607f:	cmp    DWORD PTR [ebp-0x20],ebx
  426082:	jb     0x42608a
  426084:	inc    DWORD PTR [ebp-0x24]
  426087:	sub    DWORD PTR [ebp-0x20],ebx
  42608a:	dec    esi
  42608b:	jne    0x426075
  42608d:	mov    eax,0x644
  426092:	add    eax,DWORD PTR [ebp-0x38]
  426095:	mov    DWORD PTR [ebp-0x34],eax
  426098:	shl    DWORD PTR [ebp-0x24],0x4
  42609c:	push   0x4
  42609e:	pop    esi
  42609f:	sub    edi,edi
  4260a1:	inc    edi
  4260a2:	mov    eax,edi
  4260a4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260a7:	call   0x426162
  4260ac:	test   al,0x1
  4260ae:	je     0x4260b3
  4260b0:	or     DWORD PTR [ebp-0x24],edi
  4260b3:	shl    edi,1
  4260b5:	dec    esi
  4260b6:	jne    0x4260a4
  4260b8:	jmp    0x4260ba
  4260ba:	inc    DWORD PTR [ebp-0x24]
  4260bd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260c0:	add    ecx,0x2
  4260c3:	mov    edi,DWORD PTR [ebp-0x4]
  4260c6:	mov    eax,edi
  4260c8:	sub    eax,DWORD PTR [ebp+0x24]
  4260cb:	cmp    DWORD PTR [ebp-0x24],eax
  4260ce:	ja     0x42611a
  4260d0:	mov    esi,edi
  4260d2:	sub    esi,DWORD PTR [ebp-0x24]
  4260d5:	mov    edx,DWORD PTR [ebp+0x28]
  4260d8:	lods   al,BYTE PTR ds:[esi]
  4260d9:	stos   BYTE PTR es:[edi],al
  4260da:	cmp    edi,edx
  4260dc:	jae    0x4260e1
  4260de:	dec    ecx
  4260df:	jne    0x4260d8
  4260e1:	mov    DWORD PTR [ebp-0x4],edi
  4260e4:	movzx  esi,al
  4260e7:	cmp    edi,DWORD PTR [ebp+0x28]
  4260ea:	jb     0x425e4b
  4260f0:	call   0x42611f
  4260f5:	sub    eax,eax
  4260f7:	lea    ebp,[esp+0x3c]
  4260fb:	mov    edx,DWORD PTR [ebp+0x20]
  4260fe:	mov    esi,DWORD PTR [ebp-0x8]
  426101:	sub    esi,DWORD PTR [ebp+0x18]
  426104:	mov    DWORD PTR [edx],esi
  426106:	mov    dh,0xdd
  426108:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42610e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426114:	add    eax,0x188f893
  426119:	jmp    0x37cbec52
  42611e:	jmp    0x4260ae
  426120:	ja     0x4260aa
  426122:	mov    BYTE PTR [eax-0x6873ae74],cl
  426128:	(bad)  
  426129:	pop    ss
  42612a:	test   al,0xe1
  42612c:	mov    dh,0x5d
  42612e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426133:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426139:	test   al,0x3a
  42613b:	scas   al,BYTE PTR es:[edi]
  42613c:	popf   
  42613d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426143:	mov    dh,0xbd
  426145:	fwait
  426146:	les    esp,FWORD PTR [edx-0x75]
  426149:	(bad)  
  42614a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426152:	mov    al,ds:0x948b62c4
  426157:	popf   
  426158:	fwait
  426159:	mov    dh,0x3d
  42615b:	stos   DWORD PTR es:[edi],eax
  42615c:	mov    esi,0x34889d39
  426161:	mov    edi,DWORD PTR [esi-0x717762c7]
  426167:	ja     0x4260f1
  426169:	mov    BYTE PTR [eax-0x4907aa74],cl
  42616f:	mov    ecx,0x198f6818
  426174:	sbb    BYTE PTR [eax],cl
  426176:	test   al,0x74
  426178:	mov    ecx,0xfa55f918
  42617d:	mov    dl,0xcc
  42617f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426185:	test   al,0x88
  426187:	push   esp
  426188:	and    al,0x20
  42618a:	mov    ecx,ebx
  42618c:	movzx  edx,WORD PTR [ebp+0x0]
  426190:	shr    ecx,0xb
  426193:	imul   ecx,edx
  426196:	cmp    DWORD PTR [esp+0x20],ecx
  42619a:	jae    0x4261b3
  42619c:	mov    ebx,ecx
  42619e:	mov    ecx,0x800
  4261a3:	sub    ecx,edx
  4261a5:	shr    ecx,0x5
  4261a8:	add    WORD PTR [ebp+0x0],cx
  4261ac:	add    eax,eax
  4261ae:	lea    ebp,[esp+0x40]
  4261b2:	ret    
  4261b3:	shr    edx,0x5
  4261b6:	sub    DWORD PTR [esp+0x20],ecx
  4261ba:	sub    ebx,ecx
  4261bc:	sub    WORD PTR [ebp+0x0],dx
  4261c0:	add    eax,eax
  4261c2:	add    eax,0x1
  4261c5:	lea    ebp,[esp+0x40]
  4261c9:	ret    
  4261ca:	push   ebp
  4261cb:	mov    ebp,esp
  4261cd:	sub    esp,0x12c
  4261d3:	push   ebx
  4261d4:	push   esi
  4261d5:	push   edi
  4261d6:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4261dd:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4261e4:	mov    eax,DWORD PTR [ebp+0x8]
  4261e7:	mov    DWORD PTR [ebp+0x8],eax
  4261ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4261ed:	mov    ebx,0x75108ae
  4261f2:	xor    ecx,ebx
  4261f4:	mov    eax,0x3272f5
  4261f9:	add    ecx,eax
  4261fb:	mov    DWORD PTR [ebp-0x24],ecx
  4261fe:	mov    ecx,DWORD PTR [ebp-0x10]
  426201:	xor    ecx,ebx
  426203:	add    ecx,eax
  426205:	mov    DWORD PTR [ebp-0x40],ecx
  426208:	mov    ecx,DWORD PTR [ebp-0x10]
  42620b:	xor    ecx,ebx
  42620d:	add    ecx,eax
  42620f:	mov    DWORD PTR [ebp-0x3c],ecx
  426212:	mov    ecx,DWORD PTR [ebp-0x10]
  426215:	xor    ecx,ebx
  426217:	add    ecx,eax
  426219:	mov    DWORD PTR [ebp-0xd8],ecx
  42621f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426226:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42622d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426234:	push   0x25
  426236:	pop    ecx
  426237:	mov    DWORD PTR [ebp-0x30],ecx
  42623a:	mov    DWORD PTR [ebp-0x30],ecx
  42623d:	push   0x65
  42623f:	pop    ecx
  426240:	mov    DWORD PTR [ebp-0x30],ecx
  426243:	mov    DWORD PTR [ebp-0x30],ecx
  426246:	mov    DWORD PTR [ebp-0x30],0x4d
  42624d:	mov    DWORD PTR [ebp-0x30],0x43
  426254:	mov    ecx,DWORD PTR [ebp-0x10]
  426257:	xor    ecx,ebx
  426259:	add    ecx,eax
  42625b:	mov    DWORD PTR [ebp-0x30],ecx
  42625e:	mov    ecx,DWORD PTR [ebp-0x10]
  426261:	xor    ecx,ebx
  426263:	add    ecx,eax
  426265:	mov    DWORD PTR [ebp-0x30],ecx
  426268:	mov    DWORD PTR [ebp-0x28],0x258
  42626f:	mov    DWORD PTR [ebp-0x34],0x36
  426276:	mov    DWORD PTR [ebp-0x14],0x7a
  42627d:	lea    edi,[ebp-0x10c]
  426283:	lea    esi,[ebp-0x12c]
  426289:	call   0x426f49
  42628e:	dec    DWORD PTR [ebp-0x14]
  426291:	jne    0x42627d
  426293:	dec    DWORD PTR [ebp-0x34]
  426296:	jne    0x426276
  426298:	dec    DWORD PTR [ebp-0x28]
  42629b:	jne    0x42626f
  42629d:	mov    DWORD PTR [ebp-0x28],0x400e
  4262a4:	mov    eax,DWORD PTR [ebp-0x10]
  4262a7:	xor    eax,ebx
  4262a9:	mov    esi,0x3272f5
  4262ae:	add    eax,esi
  4262b0:	mov    DWORD PTR [ebp-0x1c],eax
  4262b3:	mov    eax,DWORD PTR [ebp-0x10]
  4262b6:	and    DWORD PTR [ebp-0x94],0x0
  4262bd:	xor    eax,ebx
  4262bf:	add    eax,esi
  4262c1:	mov    DWORD PTR [ebp-0x38],eax
  4262c4:	mov    eax,fs:0x18
  4262ca:	mov    DWORD PTR [ebp-0x94],eax
  4262d0:	mov    eax,DWORD PTR [eax+0x30]
  4262d3:	mov    DWORD PTR [ebp-0xcc],eax
  4262d9:	mov    eax,DWORD PTR [eax+0xc]
  4262dc:	mov    DWORD PTR [ebp-0xc0],eax
  4262e2:	mov    eax,DWORD PTR [ebp+0x8]
  4262e5:	lea    ecx,[ebp-0x94]
  4262eb:	mov    DWORD PTR [eax+0x1a0],ecx
  4262f1:	mov    eax,DWORD PTR [ebp+0x8]
  4262f4:	lea    ecx,[ebp-0xcc]
  4262fa:	mov    DWORD PTR [eax+0x1a4],ecx
  426300:	mov    eax,DWORD PTR [ebp+0x8]
  426303:	push   DWORD PTR [ebp+0x8]
  426306:	lea    ecx,[ebp-0xc0]
  42630c:	mov    DWORD PTR [eax+0x1a8],ecx
  426312:	call   0x42870a
  426317:	mov    ecx,DWORD PTR [ebp-0x10]
  42631a:	xor    ecx,ebx
  42631c:	add    ecx,esi
  42631e:	cmp    ecx,eax
  426320:	je     0x4266a3
  426326:	mov    eax,DWORD PTR [ebp+0x8]
  426329:	mov    eax,DWORD PTR [eax+0x194]
  42632f:	mov    ecx,DWORD PTR [eax]
  426331:	mov    eax,DWORD PTR [ebp+0x8]
  426334:	mov    eax,DWORD PTR [eax+0x194]
  42633a:	mov    eax,DWORD PTR [eax]
  42633c:	add    eax,DWORD PTR [ecx+0x3c]
  42633f:	mov    ecx,DWORD PTR [ebp+0x8]
  426342:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426348:	lea    edx,[ebp-0xec]
  42634e:	push   edx
  42634f:	mov    edx,DWORD PTR [ebp+0x8]
  426352:	mov    edx,DWORD PTR [edx+0x18c]
  426358:	mov    edx,DWORD PTR [edx]
  42635a:	add    edx,DWORD PTR [eax+0x88]
  426360:	push   0x4
  426362:	push   DWORD PTR [eax+0x8c]
  426368:	push   edx
  426369:	call   DWORD PTR [ecx+0x1c]
  42636c:	push   DWORD PTR [ebp+0x8]
  42636f:	xor    eax,eax
  426371:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42637b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426385:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42638f:	mov    BYTE PTR [ebp-0x9c],0x83
  426396:	lea    edi,[ebp-0x9b]
  42639c:	stos   DWORD PTR es:[edi],eax
  42639d:	stos   WORD PTR es:[edi],ax
  42639f:	stos   BYTE PTR es:[edi],al
  4263a0:	xor    eax,eax
  4263a2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263ac:	mov    DWORD PTR [ebp-0xb8],0x12371120
  4263b6:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  4263c0:	mov    BYTE PTR [ebp-0xb0],0x83
  4263c7:	lea    edi,[ebp-0xaf]
  4263cd:	stos   DWORD PTR es:[edi],eax
  4263ce:	stos   WORD PTR es:[edi],ax
  4263d0:	stos   BYTE PTR es:[edi],al
  4263d1:	mov    edi,DWORD PTR [ebp+0x8]
  4263d4:	mov    eax,DWORD PTR [ebp+0x8]
  4263d7:	mov    edx,DWORD PTR [eax+0x1b8]
  4263dd:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  4263e4:	mov    DWORD PTR [ebp-0x64],0x1813141e
  4263eb:	mov    WORD PTR [ebp-0x60],0x8340
  4263f1:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  4263fb:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426405:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42640f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426419:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426420:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426427:	mov    DWORD PTR [ebp-0x78],0x17401120
  42642e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426435:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42643c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426443:	call   0x428739
  426448:	push   eax
  426449:	mov    eax,DWORD PTR [ebp+0x8]
  42644c:	mov    eax,DWORD PTR [eax+0x1a8]
  426452:	push   DWORD PTR [eax]
  426454:	call   0x4283da
  426459:	test   eax,eax
  42645b:	jne    0x4264ad
  42645d:	mov    eax,DWORD PTR [ebp+0x8]
  426460:	mov    eax,DWORD PTR [eax+0x1e0]
  426466:	mov    edi,DWORD PTR [ebp+0x8]
  426469:	add    eax,0x4
  42646c:	mov    DWORD PTR [ebp-0x20],eax
  42646f:	mov    eax,DWORD PTR [ebp+0x8]
  426472:	mov    edx,DWORD PTR [eax+0x1b8]
  426478:	call   0x428739
  42647d:	push   eax
  42647e:	mov    eax,DWORD PTR [ebp-0x20]
  426481:	call   DWORD PTR [eax]
  426483:	test   eax,eax
  426485:	jne    0x4264ad
  426487:	mov    eax,DWORD PTR [ebp+0x8]
  42648a:	mov    eax,DWORD PTR [eax+0x1e0]
  426490:	mov    edi,DWORD PTR [ebp+0x8]
  426493:	add    eax,0x10
  426496:	mov    DWORD PTR [ebp-0x20],eax
  426499:	mov    eax,DWORD PTR [ebp+0x8]
  42649c:	mov    edx,DWORD PTR [eax+0x1b8]
  4264a2:	call   0x428739
  4264a7:	push   eax
  4264a8:	mov    eax,DWORD PTR [ebp-0x20]
  4264ab:	call   DWORD PTR [eax]
  4264ad:	mov    eax,DWORD PTR [ebp-0x10]
  4264b0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264b3:	xor    eax,ebx
  4264b5:	add    eax,esi
  4264b7:	cmp    eax,ecx
  4264b9:	je     0x42667c
  4264bf:	mov    eax,DWORD PTR [ebp-0x18]
  4264c2:	xor    eax,ebx
  4264c4:	mov    ecx,0xffcd8d0b
  4264c9:	sub    ecx,eax
  4264cb:	add    ecx,DWORD PTR [ebp-0x28]
  4264ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4264d1:	cmp    eax,ecx
  4264d3:	ja     0x42667c
  4264d9:	mov    DWORD PTR [ebp-0x34],0x0
  4264e0:	push   DWORD PTR [ebp+0x8]
  4264e3:	mov    edi,DWORD PTR [ebp+0x8]
  4264e6:	mov    eax,DWORD PTR [ebp+0x8]
  4264e9:	mov    edx,DWORD PTR [eax+0x1b4]
  4264ef:	call   0x428739
  4264f4:	push   eax
  4264f5:	mov    eax,DWORD PTR [ebp+0x8]
  4264f8:	mov    eax,DWORD PTR [eax+0x1a8]
  4264fe:	push   DWORD PTR [eax]
  426500:	call   0x4283da
  426505:	mov    ecx,DWORD PTR [ebp+0x8]
  426508:	mov    ecx,DWORD PTR [ecx+0x19c]
  42650e:	mov    DWORD PTR [ecx],eax
  426510:	mov    eax,DWORD PTR [ebp+0x8]
  426513:	mov    edi,DWORD PTR [eax+0x1e0]
  426519:	mov    esi,DWORD PTR [ebp+0x8]
  42651c:	xor    eax,eax
  42651e:	lea    edx,[ebp-0x7c]
  426521:	call   0x42876f
  426526:	push   eax
  426527:	mov    eax,DWORD PTR [ebp+0x8]
  42652a:	mov    eax,DWORD PTR [eax+0x19c]
  426530:	push   DWORD PTR [eax]
  426532:	call   DWORD PTR [edi+0x8]
  426535:	mov    DWORD PTR [ebp-0x20],eax
  426538:	mov    eax,DWORD PTR [ebp+0x8]
  42653b:	mov    edi,DWORD PTR [eax+0x1e0]
  426541:	mov    esi,DWORD PTR [ebp+0x8]
  426544:	xor    eax,eax
  426546:	lea    edx,[ebp-0x90]
  42654c:	call   0x42876f
  426551:	push   eax
  426552:	mov    eax,DWORD PTR [ebp+0x8]
  426555:	mov    eax,DWORD PTR [eax+0x19c]
  42655b:	push   DWORD PTR [eax]
  42655d:	call   DWORD PTR [edi+0x8]
  426560:	mov    eax,DWORD PTR [ebp+0x8]
  426563:	mov    edi,DWORD PTR [eax+0x1e0]
  426569:	mov    esi,DWORD PTR [ebp+0x8]
  42656c:	xor    eax,eax
  42656e:	lea    edx,[ebp-0xa8]
  426574:	call   0x42876f
  426579:	push   eax
  42657a:	mov    eax,DWORD PTR [ebp+0x8]
  42657d:	mov    eax,DWORD PTR [eax+0x19c]
  426583:	push   DWORD PTR [eax]
  426585:	call   DWORD PTR [edi+0x8]
  426588:	and    DWORD PTR [ebp-0x8],0x0
  42658c:	mov    DWORD PTR [ebp-0x48],eax
  42658f:	mov    eax,DWORD PTR [ebp-0x8]
  426592:	and    eax,0x7
  426595:	add    eax,0x31
  426598:	push   eax
  426599:	call   DWORD PTR [ebp-0x20]
  42659c:	test   eax,eax
  42659e:	je     0x4265e2
  4265a0:	mov    eax,DWORD PTR [ebp-0x8]
  4265a3:	push   0x19
  4265a5:	xor    edx,edx
  4265a7:	pop    ecx
  4265a8:	div    ecx
  4265aa:	add    dl,0x41
  4265ad:	movzx  eax,dl
  4265b0:	push   eax
  4265b1:	call   DWORD PTR [ebp-0x48]
  4265b4:	test   eax,eax
  4265b6:	jne    0x4265e2
  4265b8:	mov    eax,DWORD PTR [ebp+0x8]
  4265bb:	mov    edi,DWORD PTR [eax+0x1e0]
  4265c1:	mov    esi,DWORD PTR [ebp+0x8]
  4265c4:	xor    eax,eax
  4265c6:	lea    edx,[ebp-0x68]
  4265c9:	call   0x42876f
  4265ce:	push   eax
  4265cf:	mov    eax,DWORD PTR [ebp+0x8]
  4265d2:	mov    eax,DWORD PTR [eax+0x198]
  4265d8:	push   DWORD PTR [eax]
  4265da:	call   DWORD PTR [edi+0x8]
  4265dd:	mov    DWORD PTR [ebp-0x14],eax
  4265e0:	jmp    0x4265e6
  4265e2:	and    DWORD PTR [ebp-0x14],0x0
  4265e6:	inc    DWORD PTR [ebp-0x8]
  4265e9:	cmp    DWORD PTR [ebp-0x8],0x10
  4265ed:	jb     0x42658f
  4265ef:	mov    eax,DWORD PTR [ebp-0x18]
  4265f2:	mov    esi,DWORD PTR [ebp+0x8]
  4265f5:	xor    eax,ebx
  4265f7:	mov    edi,0x3272f5
  4265fc:	add    eax,edi
  4265fe:	lea    edx,[ebp-0x10c]
  426604:	call   0x42876f
  426609:	push   eax
  42660a:	mov    eax,DWORD PTR [ebp-0x10]
  42660d:	mov    esi,DWORD PTR [ebp+0x8]
  426610:	xor    eax,ebx
  426612:	add    eax,edi
  426614:	lea    edx,[ebp-0x12c]
  42661a:	call   0x42876f
  42661f:	push   eax
  426620:	call   DWORD PTR [ebp-0x14]
  426623:	mov    ecx,DWORD PTR [ebp-0x10]
  426626:	xor    ecx,ebx
  426628:	add    ecx,edi
  42662a:	cmp    ecx,eax
  42662c:	jne    0x426635
  42662e:	mov    DWORD PTR [ebp-0x34],0x1
  426635:	mov    eax,DWORD PTR [ebp-0x18]
  426638:	mov    ecx,DWORD PTR [ebp-0x1c]
  42663b:	xor    eax,ebx
  42663d:	lea    eax,[eax+ecx*1+0x3272f5]
  426644:	mov    DWORD PTR [ebp-0x1c],eax
  426647:	mov    eax,DWORD PTR [ebp-0x34]
  42664a:	test   eax,eax
  42664c:	je     0x426660
  42664e:	mov    eax,DWORD PTR [ebp-0x18]
  426651:	mov    ecx,DWORD PTR [ebp-0x38]
  426654:	xor    eax,ebx
  426656:	lea    eax,[eax+ecx*1+0x3272f5]
  42665d:	mov    DWORD PTR [ebp-0x38],eax
  426660:	mov    eax,DWORD PTR [ebp-0x18]
  426663:	xor    eax,ebx
  426665:	mov    ecx,0xffcd8d0b
  42666a:	sub    ecx,eax
  42666c:	add    ecx,DWORD PTR [ebp-0x28]
  42666f:	mov    eax,DWORD PTR [ebp-0x1c]
  426672:	cmp    eax,ecx
  426674:	jbe    0x4264d9
  42667a:	mov    esi,edi
  42667c:	mov    eax,DWORD PTR [ebp-0x38]
  42667f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426682:	cmp    ecx,eax
  426684:	jne    0x426697
  426686:	push   DWORD PTR [ebp+0x8]
  426689:	lea    eax,[ebp-0x40]
  42668c:	push   eax
  42668d:	call   0x4291de
  426692:	mov    DWORD PTR [ebp-0x24],eax
  426695:	jmp    0x4266a3
  426697:	mov    eax,DWORD PTR [ebp-0x24]
  42669a:	mov    ecx,DWORD PTR [ebp-0x18]
  42669d:	xor    ecx,ebx
  42669f:	add    ecx,esi
  4266a1:	xor    DWORD PTR [eax],ecx
  4266a3:	mov    eax,DWORD PTR [ebp-0x10]
  4266a6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266a9:	xor    eax,ebx
  4266ab:	add    eax,esi
  4266ad:	cmp    eax,ecx
  4266af:	je     0x426e27
  4266b5:	mov    eax,DWORD PTR [ebp-0x10]
  4266b8:	mov    ecx,DWORD PTR [ebp-0x40]
  4266bb:	xor    eax,ebx
  4266bd:	add    eax,esi
  4266bf:	cmp    eax,ecx
  4266c1:	je     0x426e27
  4266c7:	mov    eax,DWORD PTR [ebp-0x10]
  4266ca:	xor    eax,ebx
  4266cc:	add    eax,esi
  4266ce:	jmp    0x4266ec
  4266d0:	mov    edi,DWORD PTR [ebp-0x24]
  4266d3:	mov    cl,al
  4266d5:	and    cl,0x1f
  4266d8:	or     dl,0xff
  4266db:	sub    dl,cl
  4266dd:	add    BYTE PTR [edi+eax*1],dl
  4266e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4266e3:	xor    ecx,ebx
  4266e5:	lea    eax,[eax+ecx*1+0x3272f5]
  4266ec:	mov    ecx,DWORD PTR [ebp-0x40]
  4266ef:	cmp    eax,ecx
  4266f1:	jb     0x4266d0
  4266f3:	mov    eax,DWORD PTR [ebp-0x40]
  4266f6:	mov    DWORD PTR [ebp-0x28],eax
  4266f9:	mov    eax,DWORD PTR [ebp-0x24]
  4266fc:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426703:	mov    DWORD PTR [ebp-0xd4],eax
  426709:	mov    edi,0xf89c85a2
  42670e:	mov    DWORD PTR [ebp-0x2c],edi
  426711:	mov    eax,DWORD PTR [ebp-0x38]
  426714:	xor    eax,ebx
  426716:	add    eax,esi
  426718:	mov    DWORD PTR [ebp-0xc],eax
  42671b:	mov    eax,DWORD PTR [ebp-0x38]
  42671e:	xor    eax,ebx
  426720:	add    eax,esi
  426722:	mov    DWORD PTR [ebp-0x8],eax
  426725:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42672c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426733:	mov    eax,DWORD PTR [ebp-0x38]
  426736:	mov    ecx,DWORD PTR [ebp-0x28]
  426739:	xor    eax,ebx
  42673b:	add    eax,esi
  42673d:	cmp    ecx,eax
  42673f:	je     0x42693e
  426745:	jmp    0x42691a
  42674a:	mov    ecx,DWORD PTR [ebp-0xc]
  42674d:	mov    eax,DWORD PTR [ebp-0x28]
  426750:	sub    eax,ecx
  426752:	mov    ecx,DWORD PTR [ebp-0x48]
  426755:	xor    ecx,ebx
  426757:	add    ecx,esi
  426759:	xor    edx,edx
  42675b:	div    ecx
  42675d:	mov    DWORD PTR [ebp-0x8],eax
  426760:	mov    eax,DWORD PTR [ebp-0x4c]
  426763:	mov    ecx,DWORD PTR [ebp-0x8]
  426766:	xor    eax,ebx
  426768:	add    eax,esi
  42676a:	cmp    ecx,eax
  42676c:	jbe    0x426778
  42676e:	mov    eax,DWORD PTR [ebp-0x4c]
  426771:	xor    eax,ebx
  426773:	add    eax,esi
  426775:	mov    DWORD PTR [ebp-0x8],eax
  426778:	mov    eax,DWORD PTR [ebp-0x48]
  42677b:	mov    ecx,DWORD PTR [ebp-0x8]
  42677e:	xor    eax,ebx
  426780:	add    eax,esi
  426782:	imul   eax,ecx
  426785:	mov    DWORD PTR [ebp-0x8],eax
  426788:	mov    eax,DWORD PTR [ebp-0x38]
  42678b:	mov    ecx,DWORD PTR [ebp-0x8]
  42678e:	xor    eax,ebx
  426790:	add    eax,esi
  426792:	cmp    ecx,eax
  426794:	je     0x426908
  42679a:	mov    eax,DWORD PTR [ebp-0x8]
  42679d:	mov    DWORD PTR [ebp-0x14],eax
  4267a0:	mov    eax,DWORD PTR [ebp-0xc]
  4267a3:	add    eax,DWORD PTR [ebp-0xd4]
  4267a9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4267b0:	mov    DWORD PTR [ebp-0x34],edi
  4267b3:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  4267bd:	mov    DWORD PTR [ebp-0x8],eax
  4267c0:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  4267c7:	mov    DWORD PTR [ebp-0x1c],edi
  4267ca:	mov    eax,DWORD PTR [ebp-0x20]
  4267cd:	xor    eax,ebx
  4267cf:	add    eax,esi
  4267d1:	jmp    0x4268c7
  4267d6:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  4267e0:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4267ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4267ed:	mov    ecx,DWORD PTR [ebp-0x44]
  4267f0:	xor    eax,ebx
  4267f2:	add    eax,esi
  4267f4:	imul   eax,ecx
  4267f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267fa:	mov    al,BYTE PTR [eax+ecx*1]
  4267fd:	mov    BYTE PTR [ebp-0x2],al
  426800:	mov    eax,DWORD PTR [ebp-0x1c]
  426803:	mov    ecx,DWORD PTR [ebp-0x44]
  426806:	xor    eax,ebx
  426808:	add    eax,esi
  42680a:	imul   eax,ecx
  42680d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426813:	xor    ecx,ebx
  426815:	add    eax,ecx
  426817:	mov    ecx,DWORD PTR [ebp-0x8]
  42681a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426822:	mov    ecx,DWORD PTR [ebp-0xe0]
  426828:	xor    ecx,ebx
  42682a:	lea    eax,[ecx+eax*1+0x3272f5]
  426831:	movzx  ecx,BYTE PTR [ebp-0x2]
  426835:	xor    ecx,eax
  426837:	mov    BYTE PTR [ebp-0x2],cl
  42683a:	mov    al,BYTE PTR [ebp-0x2]
  42683d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426840:	mov    edx,DWORD PTR [ebp-0x44]
  426843:	xor    ecx,ebx
  426845:	add    ecx,esi
  426847:	imul   ecx,edx
  42684a:	mov    edx,DWORD PTR [ebp-0x8]
  42684d:	mov    BYTE PTR [ecx+edx*1],al
  426850:	mov    eax,DWORD PTR [ebp-0x1c]
  426853:	mov    ecx,DWORD PTR [ebp-0x44]
  426856:	xor    eax,ebx
  426858:	add    eax,esi
  42685a:	imul   eax,ecx
  42685d:	mov    ecx,DWORD PTR [ebp-0x8]
  426860:	mov    al,BYTE PTR [eax+ecx*1]
  426863:	mov    BYTE PTR [ebp-0x2],al
  426866:	mov    eax,DWORD PTR [ebp-0x1c]
  426869:	mov    ecx,DWORD PTR [ebp-0x44]
  42686c:	xor    eax,ebx
  42686e:	add    eax,esi
  426870:	imul   eax,ecx
  426873:	mov    ecx,DWORD PTR [ebp-0x34]
  426876:	xor    ecx,ebx
  426878:	add    eax,ecx
  42687a:	mov    ecx,DWORD PTR [ebp-0x8]
  42687d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426885:	mov    ecx,DWORD PTR [ebp-0xc4]
  42688b:	xor    ecx,ebx
  42688d:	lea    eax,[ecx+eax*1+0x3272f5]
  426894:	movzx  ecx,BYTE PTR [ebp-0x2]
  426898:	xor    ecx,eax
  42689a:	mov    BYTE PTR [ebp-0x2],cl
  42689d:	mov    al,BYTE PTR [ebp-0x2]
  4268a0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268a3:	mov    edx,DWORD PTR [ebp-0x44]
  4268a6:	xor    ecx,ebx
  4268a8:	add    ecx,esi
  4268aa:	imul   ecx,edx
  4268ad:	mov    edx,DWORD PTR [ebp-0x8]
  4268b0:	mov    BYTE PTR [ecx+edx*1],al
  4268b3:	mov    eax,DWORD PTR [ebp-0x30]
  4268b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4268b9:	xor    eax,ebx
  4268bb:	xor    ecx,ebx
  4268bd:	add    eax,esi
  4268bf:	add    ecx,esi
  4268c1:	imul   eax,ecx
  4268c4:	add    eax,DWORD PTR [ebp-0x44]
  4268c7:	mov    DWORD PTR [ebp-0x44],eax
  4268ca:	mov    eax,DWORD PTR [ebp-0x44]
  4268cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4268d0:	cmp    ecx,eax
  4268d2:	jb     0x4267d6
  4268d8:	mov    eax,DWORD PTR [ebp-0x34]
  4268db:	mov    ecx,DWORD PTR [ebp-0x14]
  4268de:	xor    eax,ebx
  4268e0:	add    eax,esi
  4268e2:	imul   eax,ecx
  4268e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4268e8:	xor    ecx,ebx
  4268ea:	add    ecx,esi
  4268ec:	or     eax,ecx
  4268ee:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268f1:	xor    ecx,ebx
  4268f3:	add    eax,ecx
  4268f5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268f8:	xor    ecx,ebx
  4268fa:	add    eax,ecx
  4268fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4268ff:	lea    eax,[eax+ecx*1+0x64e5ea]
  426906:	jmp    0x426917
  426908:	mov    eax,DWORD PTR [ebp-0x2c]
  42690b:	mov    ecx,DWORD PTR [ebp-0xc]
  42690e:	xor    eax,ebx
  426910:	lea    eax,[eax+ecx*1+0x3272f5]
  426917:	mov    DWORD PTR [ebp-0xc],eax
  42691a:	mov    eax,DWORD PTR [ebp-0x2c]
  42691d:	xor    eax,ebx
  42691f:	mov    ecx,0xffcd8d0b
  426924:	sub    ecx,eax
  426926:	add    ecx,DWORD PTR [ebp-0x28]
  426929:	mov    eax,DWORD PTR [ebp-0x2c]
  42692c:	mov    edx,DWORD PTR [ebp-0xc]
  42692f:	xor    eax,ebx
  426931:	add    eax,esi
  426933:	imul   eax,edx
  426936:	cmp    eax,ecx
  426938:	jbe    0x42674a
  42693e:	mov    eax,DWORD PTR [ebp-0x10]
  426941:	mov    ecx,DWORD PTR [ebp-0x40]
  426944:	mov    eax,DWORD PTR [ebp+0x8]
  426947:	mov    edx,DWORD PTR [ebp-0x54]
  42694a:	mov    eax,DWORD PTR [eax+0x1e0]
  426950:	xor    edx,ebx
  426952:	add    edx,esi
  426954:	push   edx
  426955:	mov    edx,DWORD PTR [ebp-0x3c]
  426958:	xor    edx,ebx
  42695a:	add    edx,esi
  42695c:	push   edx
  42695d:	push   ecx
  42695e:	mov    DWORD PTR [ebp-0x30],ecx
  426961:	mov    ecx,DWORD PTR [ebp-0x10]
  426964:	xor    ecx,ebx
  426966:	add    ecx,esi
  426968:	push   ecx
  426969:	call   DWORD PTR [eax+0x14]
  42696c:	mov    edi,eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	xor    eax,ebx
  426973:	add    eax,esi
  426975:	cmp    eax,edi
  426977:	je     0x4269d2
  426979:	mov    eax,DWORD PTR [ebp-0x10]
  42697c:	jmp    0x42699f
  42697e:	mov    ecx,DWORD PTR [ebp-0x24]
  426981:	xor    eax,ebx
  426983:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42698a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426991:	mov    ecx,DWORD PTR [ebp-0x18]
  426994:	xor    ecx,ebx
  426996:	lea    eax,[ecx+eax*1+0x3272f5]
  42699d:	xor    eax,ebx
  42699f:	mov    ecx,DWORD PTR [ebp-0x40]
  4269a2:	sub    ecx,esi
  4269a4:	xor    ecx,ebx
  4269a6:	cmp    eax,ecx
  4269a8:	jne    0x42697e
  4269aa:	mov    eax,DWORD PTR [ebp+0x8]
  4269ad:	mov    ecx,DWORD PTR [ebp-0x50]
  4269b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4269b6:	xor    ecx,ebx
  4269b8:	add    ecx,esi
  4269ba:	push   ecx
  4269bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4269be:	xor    ecx,ebx
  4269c0:	add    ecx,esi
  4269c2:	push   ecx
  4269c3:	push   DWORD PTR [ebp-0x24]
  4269c6:	call   DWORD PTR [eax+0x18]
  4269c9:	mov    eax,DWORD PTR [ebp-0x30]
  4269cc:	mov    DWORD PTR [ebp-0x24],edi
  4269cf:	mov    DWORD PTR [ebp-0x40],eax
  4269d2:	mov    edi,DWORD PTR [ebp-0x24]
  4269d5:	mov    eax,DWORD PTR [ebp-0x18]
  4269d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4269db:	xor    eax,ebx
  4269dd:	mov    DWORD PTR [ebp-0x30],edi
  4269e0:	add    eax,esi
  4269e2:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  4269e9:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4269f0:	jmp    0x426a24
  4269f2:	xor    ecx,ebx
  4269f4:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  4269fb:	xor    dl,0x7e
  4269fe:	add    dl,0x3
  426a01:	mov    DWORD PTR [ebp-0x3c],ecx
  426a04:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a0c:	movzx  edx,dl
  426a0f:	cmp    ecx,edx
  426a11:	jne    0x426a2e
  426a13:	mov    ecx,DWORD PTR [ebp-0x18]
  426a16:	mov    edx,DWORD PTR [ebp-0x3c]
  426a19:	xor    ecx,ebx
  426a1b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a22:	xor    ecx,ebx
  426a24:	cmp    ecx,0xf89c85bd
  426a2a:	jne    0x4269f2
  426a2c:	jmp    0x426a35
  426a2e:	mov    eax,DWORD PTR [ebp-0x10]
  426a31:	xor    eax,ebx
  426a33:	add    eax,esi
  426a35:	mov    ecx,DWORD PTR [ebp-0x10]
  426a38:	xor    ecx,ebx
  426a3a:	add    ecx,esi
  426a3c:	cmp    ecx,eax
  426a3e:	je     0x426bb1
  426a44:	mov    eax,DWORD PTR [edi+0x8]
  426a47:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a4e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a55:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a5c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a63:	mov    DWORD PTR [ebp-0x14],eax
  426a66:	mov    eax,DWORD PTR [ebp+0x8]
  426a69:	mov    ecx,DWORD PTR [ebp-0x20]
  426a6c:	xor    ecx,ebx
  426a6e:	add    ecx,esi
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp-0x48]
  426a74:	mov    eax,DWORD PTR [eax+0x1e0]
  426a7a:	xor    ecx,ebx
  426a7c:	add    ecx,esi
  426a7e:	push   ecx
  426a7f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a82:	xor    ecx,ebx
  426a84:	add    ecx,esi
  426a86:	push   ecx
  426a87:	mov    ecx,DWORD PTR [ebp-0xc]
  426a8a:	xor    ecx,ebx
  426a8c:	add    ecx,esi
  426a8e:	push   ecx
  426a8f:	call   DWORD PTR [eax+0x14]
  426a92:	mov    edi,eax
  426a94:	mov    eax,DWORD PTR [ebp+0x8]
  426a97:	mov    ecx,DWORD PTR [ebp-0x20]
  426a9a:	mov    eax,DWORD PTR [eax+0x1e0]
  426aa0:	xor    ecx,ebx
  426aa2:	add    ecx,esi
  426aa4:	push   ecx
  426aa5:	mov    ecx,DWORD PTR [ebp-0x48]
  426aa8:	xor    ecx,ebx
  426aaa:	add    ecx,esi
  426aac:	push   ecx
  426aad:	mov    ecx,DWORD PTR [ebp-0xc]
  426ab0:	push   DWORD PTR [ebp-0x14]
  426ab3:	xor    ecx,ebx
  426ab5:	add    ecx,esi
  426ab7:	push   ecx
  426ab8:	call   DWORD PTR [eax+0x14]
  426abb:	mov    ecx,DWORD PTR [ebp-0xc]
  426abe:	xor    ecx,ebx
  426ac0:	add    ecx,esi
  426ac2:	mov    DWORD PTR [ebp-0x20],eax
  426ac5:	cmp    ecx,edi
  426ac7:	je     0x426e54
  426acd:	mov    ecx,DWORD PTR [ebp-0xc]
  426ad0:	xor    ecx,ebx
  426ad2:	add    ecx,esi
  426ad4:	cmp    ecx,eax
  426ad6:	je     0x426e54
  426adc:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426ae3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426aea:	mov    ecx,DWORD PTR [ebp-0x3c]
  426aed:	xor    cl,0xae
  426af0:	sub    cl,0xb
  426af3:	mov    BYTE PTR [edi],cl
  426af5:	mov    ecx,DWORD PTR [ebp-0xc]
  426af8:	xor    cl,0xae
  426afb:	sub    cl,0xb
  426afe:	mov    BYTE PTR [edi+0x1],cl
  426b01:	mov    ecx,DWORD PTR [ebp-0x54]
  426b04:	xor    cl,0xae
  426b07:	sub    cl,0xb
  426b0a:	mov    BYTE PTR [edi+0x2],cl
  426b0d:	and    DWORD PTR [ebp-0xc8],0x0
  426b14:	and    DWORD PTR [ebp-0xdc],0x0
  426b1b:	lea    ecx,[ebp-0xdc]
  426b21:	push   ecx
  426b22:	push   DWORD PTR [ebp-0x14]
  426b25:	push   eax
  426b26:	lea    eax,[ebp-0xc8]
  426b2c:	push   eax
  426b2d:	mov    eax,DWORD PTR [ebp-0x30]
  426b30:	push   DWORD PTR [eax+0xc]
  426b33:	mov    eax,DWORD PTR [ebp-0x24]
  426b36:	add    eax,0x10
  426b39:	push   eax
  426b3a:	push   edi
  426b3b:	call   0x425de1
  426b40:	mov    DWORD PTR [ebp-0x3c],eax
  426b43:	mov    eax,DWORD PTR [ebp+0x8]
  426b46:	mov    ecx,DWORD PTR [ebp-0x50]
  426b49:	mov    eax,DWORD PTR [eax+0x1e0]
  426b4f:	xor    ecx,ebx
  426b51:	add    ecx,esi
  426b53:	push   ecx
  426b54:	mov    ecx,DWORD PTR [ebp-0xc]
  426b57:	xor    ecx,ebx
  426b59:	add    ecx,esi
  426b5b:	push   ecx
  426b5c:	push   edi
  426b5d:	call   DWORD PTR [eax+0x18]
  426b60:	mov    eax,DWORD PTR [ebp-0x3c]
  426b63:	add    eax,0xffcd8d0b
  426b68:	xor    eax,ebx
  426b6a:	cmp    eax,0xf89c85a5
  426b6f:	mov    eax,DWORD PTR [ebp+0x8]
  426b72:	mov    eax,DWORD PTR [eax+0x1e0]
  426b78:	mov    ecx,DWORD PTR [ebp-0x50]
  426b7b:	jne    0x426b9e
  426b7d:	xor    ecx,ebx
  426b7f:	add    ecx,esi
  426b81:	push   ecx
  426b82:	mov    ecx,DWORD PTR [ebp-0xc]
  426b85:	xor    ecx,ebx
  426b87:	add    ecx,esi
  426b89:	push   ecx
  426b8a:	push   DWORD PTR [ebp-0x24]
  426b8d:	call   DWORD PTR [eax+0x18]
  426b90:	mov    eax,DWORD PTR [ebp-0x20]
  426b93:	mov    DWORD PTR [ebp-0x24],eax
  426b96:	mov    eax,DWORD PTR [ebp-0x14]
  426b99:	mov    DWORD PTR [ebp-0x40],eax
  426b9c:	jmp    0x426bb1
  426b9e:	xor    ecx,ebx
  426ba0:	add    ecx,esi
  426ba2:	push   ecx
  426ba3:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba6:	xor    ecx,ebx
  426ba8:	add    ecx,esi
  426baa:	push   ecx
  426bab:	push   DWORD PTR [ebp-0x20]
  426bae:	call   DWORD PTR [eax+0x18]
  426bb1:	mov    eax,DWORD PTR [ebp-0x40]
  426bb4:	mov    DWORD PTR [ebp-0x38],eax
  426bb7:	mov    eax,DWORD PTR [ebp-0x24]
  426bba:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426bc1:	mov    DWORD PTR [ebp-0x3c],eax
  426bc4:	mov    edi,0xf89c85a2
  426bc9:	mov    DWORD PTR [ebp-0x2c],edi
  426bcc:	mov    eax,DWORD PTR [ebp-0x28]
  426bcf:	xor    eax,ebx
  426bd1:	add    eax,esi
  426bd3:	mov    DWORD PTR [ebp-0xc],eax
  426bd6:	mov    eax,DWORD PTR [ebp-0x28]
  426bd9:	xor    eax,ebx
  426bdb:	add    eax,esi
  426bdd:	mov    DWORD PTR [ebp-0x14],eax
  426be0:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426be7:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426bee:	mov    eax,DWORD PTR [ebp-0x28]
  426bf1:	mov    ecx,DWORD PTR [ebp-0x38]
  426bf4:	xor    eax,ebx
  426bf6:	add    eax,esi
  426bf8:	cmp    ecx,eax
  426bfa:	je     0x426df0
  426c00:	jmp    0x426dcc
  426c05:	mov    ecx,DWORD PTR [ebp-0xc]
  426c08:	mov    eax,DWORD PTR [ebp-0x38]
  426c0b:	sub    eax,ecx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c10:	xor    ecx,ebx
  426c12:	add    ecx,esi
  426c14:	xor    edx,edx
  426c16:	div    ecx
  426c18:	mov    DWORD PTR [ebp-0x14],eax
  426c1b:	mov    eax,DWORD PTR [ebp-0x20]
  426c1e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c21:	xor    eax,ebx
  426c23:	add    eax,esi
  426c25:	cmp    ecx,eax
  426c27:	jbe    0x426c33
  426c29:	mov    eax,DWORD PTR [ebp-0x20]
  426c2c:	xor    eax,ebx
  426c2e:	add    eax,esi
  426c30:	mov    DWORD PTR [ebp-0x14],eax
  426c33:	mov    eax,DWORD PTR [ebp-0x48]
  426c36:	mov    ecx,DWORD PTR [ebp-0x14]
  426c39:	xor    eax,ebx
  426c3b:	add    eax,esi
  426c3d:	imul   eax,ecx
  426c40:	mov    DWORD PTR [ebp-0x14],eax
  426c43:	mov    eax,DWORD PTR [ebp-0x28]
  426c46:	mov    ecx,DWORD PTR [ebp-0x14]
  426c49:	xor    eax,ebx
  426c4b:	add    eax,esi
  426c4d:	cmp    ecx,eax
  426c4f:	je     0x426dba
  426c55:	mov    eax,DWORD PTR [ebp-0x14]
  426c58:	mov    DWORD PTR [ebp-0x34],eax
  426c5b:	mov    eax,DWORD PTR [ebp-0xc]
  426c5e:	add    eax,DWORD PTR [ebp-0x3c]
  426c61:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c68:	mov    DWORD PTR [ebp-0x14],edi
  426c6b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c72:	mov    DWORD PTR [ebp-0x1c],eax
  426c75:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c7c:	mov    DWORD PTR [ebp-0x8],edi
  426c7f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c82:	xor    eax,ebx
  426c84:	add    eax,esi
  426c86:	jmp    0x426d79
  426c8b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c95:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c9f:	mov    eax,DWORD PTR [ebp-0x8]
  426ca2:	mov    ecx,DWORD PTR [ebp-0x18]
  426ca5:	xor    eax,ebx
  426ca7:	add    eax,esi
  426ca9:	imul   eax,ecx
  426cac:	mov    ecx,DWORD PTR [ebp-0x1c]
  426caf:	mov    al,BYTE PTR [eax+ecx*1]
  426cb2:	mov    BYTE PTR [ebp-0x1],al
  426cb5:	mov    eax,DWORD PTR [ebp-0x8]
  426cb8:	mov    ecx,DWORD PTR [ebp-0x18]
  426cbb:	xor    eax,ebx
  426cbd:	add    eax,esi
  426cbf:	imul   eax,ecx
  426cc2:	mov    ecx,DWORD PTR [ebp-0x54]
  426cc5:	xor    ecx,ebx
  426cc7:	add    eax,ecx
  426cc9:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ccc:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cd4:	mov    ecx,DWORD PTR [ebp-0xe4]
  426cda:	xor    ecx,ebx
  426cdc:	lea    eax,[ecx+eax*1+0x3272f5]
  426ce3:	movzx  ecx,BYTE PTR [ebp-0x1]
  426ce7:	xor    ecx,eax
  426ce9:	mov    BYTE PTR [ebp-0x1],cl
  426cec:	mov    al,BYTE PTR [ebp-0x1]
  426cef:	mov    ecx,DWORD PTR [ebp-0x8]
  426cf2:	mov    edx,DWORD PTR [ebp-0x18]
  426cf5:	xor    ecx,ebx
  426cf7:	add    ecx,esi
  426cf9:	imul   ecx,edx
  426cfc:	mov    edx,DWORD PTR [ebp-0x1c]
  426cff:	mov    BYTE PTR [ecx+edx*1],al
  426d02:	mov    eax,DWORD PTR [ebp-0x8]
  426d05:	mov    ecx,DWORD PTR [ebp-0x18]
  426d08:	xor    eax,ebx
  426d0a:	add    eax,esi
  426d0c:	imul   eax,ecx
  426d0f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d12:	mov    al,BYTE PTR [eax+ecx*1]
  426d15:	mov    BYTE PTR [ebp-0x1],al
  426d18:	mov    eax,DWORD PTR [ebp-0x8]
  426d1b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d1e:	xor    eax,ebx
  426d20:	add    eax,esi
  426d22:	imul   eax,ecx
  426d25:	mov    ecx,DWORD PTR [ebp-0x14]
  426d28:	xor    ecx,ebx
  426d2a:	add    eax,ecx
  426d2c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d2f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d37:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d3d:	xor    ecx,ebx
  426d3f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d46:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d4a:	xor    ecx,eax
  426d4c:	mov    BYTE PTR [ebp-0x1],cl
  426d4f:	mov    al,BYTE PTR [ebp-0x1]
  426d52:	mov    ecx,DWORD PTR [ebp-0x8]
  426d55:	mov    edx,DWORD PTR [ebp-0x18]
  426d58:	xor    ecx,ebx
  426d5a:	add    ecx,esi
  426d5c:	imul   ecx,edx
  426d5f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d62:	mov    BYTE PTR [ecx+edx*1],al
  426d65:	mov    eax,DWORD PTR [ebp-0x30]
  426d68:	mov    ecx,DWORD PTR [ebp-0x14]
  426d6b:	xor    eax,ebx
  426d6d:	xor    ecx,ebx
  426d6f:	add    eax,esi
  426d71:	add    ecx,esi
  426d73:	imul   eax,ecx
  426d76:	add    eax,DWORD PTR [ebp-0x18]
  426d79:	mov    DWORD PTR [ebp-0x18],eax
  426d7c:	mov    eax,DWORD PTR [ebp-0x18]
  426d7f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d82:	cmp    ecx,eax
  426d84:	jb     0x426c8b
  426d8a:	mov    eax,DWORD PTR [ebp-0x14]
  426d8d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d90:	xor    eax,ebx
  426d92:	add    eax,esi
  426d94:	imul   eax,ecx
  426d97:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d9a:	xor    ecx,ebx
  426d9c:	add    ecx,esi
  426d9e:	or     eax,ecx
  426da0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426da3:	xor    ecx,ebx
  426da5:	add    eax,ecx
  426da7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426daa:	xor    ecx,ebx
  426dac:	add    eax,ecx
  426dae:	mov    ecx,DWORD PTR [ebp-0xc]
  426db1:	lea    eax,[eax+ecx*1+0x64e5ea]
  426db8:	jmp    0x426dc9
  426dba:	mov    eax,DWORD PTR [ebp-0x2c]
  426dbd:	mov    ecx,DWORD PTR [ebp-0xc]
  426dc0:	xor    eax,ebx
  426dc2:	lea    eax,[eax+ecx*1+0x3272f5]
  426dc9:	mov    DWORD PTR [ebp-0xc],eax
  426dcc:	mov    eax,DWORD PTR [ebp-0x2c]
  426dcf:	xor    eax,ebx
  426dd1:	mov    ecx,0xffcd8d0b
  426dd6:	sub    ecx,eax
  426dd8:	add    ecx,DWORD PTR [ebp-0x38]
  426ddb:	mov    eax,DWORD PTR [ebp-0x2c]
  426dde:	mov    edx,DWORD PTR [ebp-0xc]
  426de1:	xor    eax,ebx
  426de3:	add    eax,esi
  426de5:	imul   eax,edx
  426de8:	cmp    eax,ecx
  426dea:	jbe    0x426c05
  426df0:	push   DWORD PTR [ebp+0x8]
  426df3:	mov    eax,DWORD PTR [ebp+0x8]
  426df6:	push   DWORD PTR [eax+0x1cc]
  426dfc:	lea    eax,[ebp-0xd8]
  426e02:	push   eax
  426e03:	mov    eax,DWORD PTR [ebp+0x8]
  426e06:	mov    eax,DWORD PTR [eax+0x1c4]
  426e0c:	push   DWORD PTR [eax]
  426e0e:	mov    eax,DWORD PTR [ebp+0x8]
  426e11:	mov    eax,DWORD PTR [eax+0x1c0]
  426e17:	push   DWORD PTR [eax]
  426e19:	push   DWORD PTR [ebp-0x40]
  426e1c:	push   DWORD PTR [ebp-0x24]
  426e1f:	call   0x4278b6
  426e24:	mov    DWORD PTR [ebp-0x3c],eax
  426e27:	mov    eax,DWORD PTR [ebp-0x10]
  426e2a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e2d:	xor    eax,ebx
  426e2f:	add    eax,esi
  426e31:	cmp    eax,ecx
  426e33:	je     0x426e54
  426e35:	mov    eax,DWORD PTR [ebp+0x8]
  426e38:	mov    ecx,DWORD PTR [ebp-0x50]
  426e3b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e41:	xor    ecx,ebx
  426e43:	add    ecx,esi
  426e45:	push   ecx
  426e46:	mov    ecx,DWORD PTR [ebp-0x10]
  426e49:	xor    ecx,ebx
  426e4b:	add    ecx,esi
  426e4d:	push   ecx
  426e4e:	push   DWORD PTR [ebp-0x24]
  426e51:	call   DWORD PTR [eax+0x18]
  426e54:	pop    edi
  426e55:	pop    esi
  426e56:	pop    ebx
  426e57:	leave  
  426e58:	ret    0x4
  426e5b:	push   ebp
  426e5c:	mov    ebp,esp
  426e5e:	push   ecx
  426e5f:	push   ecx
  426e60:	lea    eax,[ebp-0x8]
  426e63:	mov    DWORD PTR [ebp-0x4],eax
  426e66:	push   esi
  426e67:	mov    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    eax,0xf881ba2f
  426e6f:	mov    DWORD PTR [esi],eax
  426e71:	mov    esi,DWORD PTR [ebp-0x8]
  426e74:	cmp    esi,eax
  426e76:	pop    esi
  426e77:	jne    0x426e81
  426e79:	mov    BYTE PTR [ecx+0xa],0x83
  426e7d:	mov    BYTE PTR [edx+0x8],0x2e
  426e81:	mov    BYTE PTR [edx+0xa],0x83
  426e85:	mov    BYTE PTR [ecx+0x2],0x15
  426e89:	leave  
  426e8a:	ret    
  426e8b:	push   ebp
  426e8c:	mov    ebp,esp
  426e8e:	push   ecx
  426e8f:	push   ecx
  426e90:	lea    eax,[ebp-0x8]
  426e93:	mov    DWORD PTR [ebp-0x4],eax
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	mov    eax,0xf88b0bcb
  426e9e:	mov    DWORD PTR [edx],eax
  426ea0:	mov    edx,DWORD PTR [ebp-0x8]
  426ea3:	cmp    edx,eax
  426ea5:	jne    0x426eb6
  426ea7:	mov    eax,DWORD PTR [ebp+0x8]
  426eaa:	mov    BYTE PTR [ecx+0x9],0xf
  426eae:	mov    BYTE PTR [eax+0x7],0x56
  426eb2:	mov    BYTE PTR [ecx+0x6],0xe
  426eb6:	mov    BYTE PTR [ecx+0x3],0x1f
  426eba:	leave  
  426ebb:	ret    0x4
  426ebe:	push   ebp
  426ebf:	mov    ebp,esp
  426ec1:	push   ecx
  426ec2:	push   ecx
  426ec3:	lea    eax,[ebp-0x8]
  426ec6:	mov    DWORD PTR [ebp-0x4],eax
  426ec9:	mov    edx,DWORD PTR [ebp-0x4]
  426ecc:	mov    eax,0x7e0da2f
  426ed1:	mov    DWORD PTR [edx],eax
  426ed3:	mov    edx,DWORD PTR [ebp-0x8]
  426ed6:	cmp    edx,eax
  426ed8:	jne    0x426ede
  426eda:	mov    BYTE PTR [ecx+0x7],0x56
  426ede:	mov    eax,DWORD PTR [ebp+0x8]
  426ee1:	mov    BYTE PTR [ecx+0x1],0x18
  426ee5:	mov    BYTE PTR [eax+0x9],0x2f
  426ee9:	leave  
  426eea:	ret    0x4
  426eed:	push   ebp
  426eee:	mov    ebp,esp
  426ef0:	push   ecx
  426ef1:	push   ecx
  426ef2:	lea    eax,[ebp-0x8]
  426ef5:	mov    DWORD PTR [ebp-0x4],eax
  426ef8:	push   esi
  426ef9:	mov    esi,DWORD PTR [ebp-0x4]
  426efc:	mov    eax,0x7060e3c
  426f01:	mov    DWORD PTR [esi],eax
  426f03:	mov    esi,DWORD PTR [ebp-0x8]
  426f06:	cmp    esi,eax
  426f08:	pop    esi
  426f09:	jne    0x426f15
  426f0b:	mov    BYTE PTR [edx+0x4],0x12
  426f0f:	mov    WORD PTR [ecx+0x3],0x121f
  426f15:	mov    BYTE PTR [edx],0x3e
  426f18:	leave  
  426f19:	ret    
  426f1a:	push   ebp
  426f1b:	mov    ebp,esp
  426f1d:	push   ecx
  426f1e:	push   ecx
  426f1f:	lea    eax,[ebp-0x8]
  426f22:	mov    DWORD PTR [ebp-0x4],eax
  426f25:	mov    edx,DWORD PTR [ebp-0x4]
  426f28:	mov    eax,0xf8870b3f
  426f2d:	mov    DWORD PTR [edx],eax
  426f2f:	mov    edx,DWORD PTR [ebp-0x8]
  426f32:	cmp    edx,eax
  426f34:	jne    0x426f41
  426f36:	mov    eax,DWORD PTR [ebp+0x8]
  426f39:	mov    BYTE PTR [ecx+0x8],0xe
  426f3d:	mov    BYTE PTR [eax+0x1],0x18
  426f41:	mov    BYTE PTR [ecx+0x5],0xa
  426f45:	leave  
  426f46:	ret    0x4
  426f49:	push   esi
  426f4a:	mov    ecx,edi
  426f4c:	call   0x426f1a
  426f51:	mov    edx,edi
  426f53:	mov    ecx,esi
  426f55:	mov    BYTE PTR [esi],0x1e
  426f58:	call   0x426eed
  426f5d:	push   esi
  426f5e:	mov    ecx,edi
  426f60:	mov    BYTE PTR [esi+0x5],0xa
  426f64:	call   0x426ebe
  426f69:	push   esi
  426f6a:	mov    BYTE PTR [esi+0x6],0xe
  426f6e:	call   0x426e8b
  426f73:	mov    BYTE PTR [esi+0x2],0x15
  426f77:	mov    edx,esi
  426f79:	jmp    0x426e5b
  426f7e:	push   ebp
  426f7f:	mov    ebp,esp
  426f81:	push   ecx
  426f82:	mov    ecx,DWORD PTR [edx+0x194]
  426f88:	push   esi
  426f89:	mov    esi,DWORD PTR [ebp+0x8]
  426f8c:	mov    esi,DWORD PTR [esi]
  426f8e:	mov    DWORD PTR [ecx],esi
  426f90:	mov    ecx,DWORD PTR [edx+0x194]
  426f96:	mov    ecx,DWORD PTR [ecx]
  426f98:	mov    esi,DWORD PTR [edx+0x190]
  426f9e:	mov    DWORD PTR [esi],ecx
  426fa0:	mov    eax,DWORD PTR [edx+0x194]
  426fa6:	mov    ecx,DWORD PTR [eax]
  426fa8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426fab:	add    ecx,DWORD PTR [eax]
  426fad:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426fb4:	mov    eax,DWORD PTR [ebp-0x4]
  426fb7:	movzx  ecx,WORD PTR [ecx+0x16]
  426fbb:	xor    eax,0x75108ae
  426fc0:	add    eax,0x3272f5
  426fc5:	pop    esi
  426fc6:	test   ecx,eax
  426fc8:	je     0x426fd6
  426fca:	mov    eax,DWORD PTR [edx+0x1c8]
  426fd0:	mov    DWORD PTR [eax],0xf89c85a2
  426fd6:	leave  
  426fd7:	ret    0x4
  426fda:	push   ebp
  426fdb:	mov    ebp,esp
  426fdd:	sub    esp,0x70
  426fe0:	and    DWORD PTR [ebp-0x20],0x0
  426fe4:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426feb:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426ff2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426ff9:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427000:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427007:	mov    eax,DWORD PTR [ebp+0x20]
  42700a:	mov    eax,DWORD PTR [eax+0x194]
  427010:	mov    DWORD PTR [ebp-0xc],eax
  427013:	mov    eax,DWORD PTR [ebp+0x20]
  427016:	push   ebx
  427017:	push   esi
  427018:	mov    esi,DWORD PTR [eax+0x190]
  42701e:	mov    eax,DWORD PTR [ebp+0x20]
  427021:	mov    eax,DWORD PTR [eax+0x18c]
  427027:	mov    DWORD PTR [ebp-0x8],eax
  42702a:	mov    eax,DWORD PTR [eax]
  42702c:	push   edi
  42702d:	mov    DWORD PTR [ebp-0x4],esi
  427030:	test   eax,eax
  427032:	jne    0x42703f
  427034:	push   DWORD PTR [ebp+0x1c]
  427037:	mov    edx,DWORD PTR [ebp+0x20]
  42703a:	call   0x426f7e
  42703f:	mov    eax,DWORD PTR [esi]
  427041:	mov    ebx,DWORD PTR [esi]
  427043:	add    ebx,DWORD PTR [eax+0x3c]
  427046:	mov    eax,DWORD PTR [ebp+0xc]
  427049:	mov    ecx,DWORD PTR [ebp-0x8]
  42704c:	mov    ecx,DWORD PTR [ecx]
  42704e:	mov    esi,0x75108ae
  427053:	xor    eax,esi
  427055:	mov    edi,0x3272f5
  42705a:	add    eax,edi
  42705c:	cmp    eax,ecx
  42705e:	jne    0x427296
  427064:	mov    eax,DWORD PTR [ebp-0xc]
  427067:	mov    eax,DWORD PTR [eax]
  427069:	mov    DWORD PTR [ebp-0x10],eax
  42706c:	mov    eax,DWORD PTR [ebx+0x50]
  42706f:	mov    DWORD PTR [ebp-0x68],eax
  427072:	mov    eax,DWORD PTR [ebp-0x18]
  427075:	xor    eax,esi
  427077:	add    eax,edi
  427079:	mov    DWORD PTR [ebp-0x64],eax
  42707c:	mov    eax,DWORD PTR [ebp-0x14]
  42707f:	and    DWORD PTR [ebp-0x6c],0x0
  427083:	xor    eax,esi
  427085:	add    eax,edi
  427087:	mov    DWORD PTR [ebp-0x60],eax
  42708a:	lea    eax,[ebp-0x70]
  42708d:	push   eax
  42708e:	mov    eax,DWORD PTR [ebp+0x8]
  427091:	xor    eax,esi
  427093:	add    eax,edi
  427095:	push   eax
  427096:	mov    eax,DWORD PTR [ebp+0x20]
  427099:	add    eax,0xaa
  42709e:	push   eax
  42709f:	mov    eax,DWORD PTR [ebp+0x20]
  4270a2:	mov    eax,DWORD PTR [eax+0x198]
  4270a8:	mov    DWORD PTR [ebp-0x70],0x4
  4270af:	push   DWORD PTR [eax]
  4270b1:	mov    eax,DWORD PTR [ebp+0x10]
  4270b4:	call   eax
  4270b6:	mov    ecx,DWORD PTR [ebp-0xc]
  4270b9:	mov    ecx,DWORD PTR [ecx]
  4270bb:	mov    edx,DWORD PTR [ebp-0x8]
  4270be:	mov    DWORD PTR [ebp-0x6c],eax
  4270c1:	mov    DWORD PTR [ebp+0x1c],eax
  4270c4:	mov    DWORD PTR [edx],ecx
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	mov    DWORD PTR [ecx],eax
  4270cb:	mov    eax,DWORD PTR [ebx+0x50]
  4270ce:	mov    DWORD PTR [ebp-0x68],eax
  4270d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4270d4:	xor    eax,esi
  4270d6:	add    eax,edi
  4270d8:	mov    DWORD PTR [ebp-0x64],eax
  4270db:	lea    eax,[ebp-0x20]
  4270de:	mov    DWORD PTR [ebp-0x60],eax
  4270e1:	lea    eax,[ebp-0x70]
  4270e4:	push   eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	xor    eax,esi
  4270ea:	add    eax,edi
  4270ec:	push   eax
  4270ed:	mov    eax,DWORD PTR [ebp+0x20]
  4270f0:	add    eax,0xee
  4270f5:	push   eax
  4270f6:	mov    eax,DWORD PTR [ebp+0x20]
  4270f9:	mov    eax,DWORD PTR [eax+0x198]
  4270ff:	mov    DWORD PTR [ebp-0x70],0x4
  427106:	push   DWORD PTR [eax]
  427108:	mov    eax,DWORD PTR [ebp+0x10]
  42710b:	call   eax
  42710d:	test   eax,eax
  42710f:	je     0x427134
  427111:	and    DWORD PTR [ebp+0xc],0x0
  427115:	cmp    DWORD PTR [ebx+0x50],0x0
  427119:	jbe    0x427134
  42711b:	mov    eax,DWORD PTR [ebp+0x1c]
  42711e:	mov    ecx,DWORD PTR [ebp-0x10]
  427121:	sub    ecx,eax
  427123:	mov    dl,BYTE PTR [ecx+eax*1]
  427126:	inc    DWORD PTR [ebp+0xc]
  427129:	mov    BYTE PTR [eax],dl
  42712b:	mov    edx,DWORD PTR [ebp+0xc]
  42712e:	inc    eax
  42712f:	cmp    edx,DWORD PTR [ebx+0x50]
  427132:	jb     0x427123
  427134:	mov    edx,DWORD PTR [ebp+0x1c]
  427137:	mov    ecx,DWORD PTR [edx+0x3c]
  42713a:	add    ecx,edx
  42713c:	mov    eax,DWORD PTR [ecx+0xa0]
  427142:	mov    ebx,DWORD PTR [ecx+0x28]
  427145:	add    eax,edx
  427147:	sub    edx,DWORD PTR [ebp-0x10]
  42714a:	add    ebx,DWORD PTR [ebp+0x1c]
  42714d:	mov    DWORD PTR [ebp+0xc],edx
  427150:	mov    DWORD PTR [ebp-0x2c],ecx
  427153:	mov    DWORD PTR [ebp-0x14],ebx
  427156:	mov    DWORD PTR [ebp-0x8],0x0
  42715d:	jmp    0x4271d9
  42715f:	add    edx,0xfffffff8
  427162:	shr    edx,1
  427164:	mov    DWORD PTR [ebp-0x18],edx
  427167:	je     0x4271c5
  427169:	lea    edx,[eax+0x8]
  42716c:	mov    DWORD PTR [ebp-0x4],edx
  42716f:	mov    edx,DWORD PTR [ebp-0x18]
  427172:	mov    DWORD PTR [ebp-0x18],edx
  427175:	mov    edx,DWORD PTR [ebp-0x4]
  427178:	movzx  edx,WORD PTR [edx]
  42717b:	mov    DWORD PTR [ebp-0x24],edx
  42717e:	and    edx,0xfff
  427184:	mov    DWORD PTR [ebp-0x28],edx
  427187:	mov    edx,DWORD PTR [ebp-0x24]
  42718a:	shr    edx,0xc
  42718d:	add    edx,0xffcd8d0b
  427193:	xor    edx,esi
  427195:	cmp    edx,0xf89c85a0
  42719b:	jne    0x4271bc
  42719d:	mov    edx,DWORD PTR [ebp-0x28]
  4271a0:	add    edx,DWORD PTR [ebp+0x1c]
  4271a3:	mov    ebx,DWORD PTR [eax]
  4271a5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271a9:	je     0x4271b9
  4271ab:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ae:	add    ecx,DWORD PTR [ebx+edx*1]
  4271b1:	mov    ebx,DWORD PTR [eax]
  4271b3:	mov    DWORD PTR [edx+ebx*1],ecx
  4271b6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271b9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271bc:	add    DWORD PTR [ebp-0x4],0x2
  4271c0:	dec    DWORD PTR [ebp-0x18]
  4271c3:	jne    0x427175
  4271c5:	mov    edx,DWORD PTR [ebp-0xc]
  4271c8:	add    DWORD PTR [ebp-0x8],edx
  4271cb:	mov    edx,DWORD PTR [ebp-0x8]
  4271ce:	cmp    edx,DWORD PTR [ecx+0xa4]
  4271d4:	jae    0x4271e7
  4271d6:	add    eax,DWORD PTR [ebp-0xc]
  4271d9:	mov    edx,DWORD PTR [eax+0x4]
  4271dc:	mov    DWORD PTR [ebp-0xc],edx
  4271df:	test   edx,edx
  4271e1:	jne    0x42715f
  4271e7:	mov    eax,DWORD PTR [ebp-0x10]
  4271ea:	mov    DWORD PTR [ebp-0x6c],eax
  4271ed:	mov    DWORD PTR [ebp-0x70],0x4
  4271f4:	mov    eax,DWORD PTR [ecx+0x50]
  4271f7:	mov    DWORD PTR [ebp-0x68],eax
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x64],eax
  427204:	lea    eax,[ebp-0x20]
  427207:	mov    DWORD PTR [ebp-0x60],eax
  42720a:	lea    eax,[ebp-0x70]
  42720d:	push   eax
  42720e:	mov    eax,DWORD PTR [ebp+0x8]
  427211:	xor    eax,esi
  427213:	add    eax,edi
  427215:	push   eax
  427216:	mov    eax,DWORD PTR [ebp+0x20]
  427219:	add    eax,0xee
  42721e:	push   eax
  42721f:	mov    eax,DWORD PTR [ebp+0x20]
  427222:	mov    eax,DWORD PTR [eax+0x198]
  427228:	push   DWORD PTR [eax]
  42722a:	mov    eax,DWORD PTR [ebp+0x10]
  42722d:	call   eax
  42722f:	mov    eax,DWORD PTR [ebp+0x20]
  427232:	mov    eax,DWORD PTR [eax+0x180]
  427238:	add    eax,DWORD PTR [ebp+0xc]
  42723b:	mov    ecx,DWORD PTR [ebp+0xc]
  42723e:	push   DWORD PTR [ebp+0x18]
  427241:	mov    DWORD PTR [eax],ecx
  427243:	push   DWORD PTR [ebp+0x14]
  427246:	push   DWORD PTR [ebp+0x1c]
  427249:	call   ebx
  42724b:	mov    ecx,DWORD PTR [ebp+0xc]
  42724e:	add    ecx,DWORD PTR [ebp+0x20]
  427251:	lea    eax,[ebp+0x4]
  427254:	mov    DWORD PTR [ebp+0x20],ecx
  427257:	mov    ecx,DWORD PTR [ebp+0x20]
  42725a:	mov    ecx,DWORD PTR [ebp+0x20]
  42725d:	mov    edx,DWORD PTR [ecx+0x190]
  427263:	mov    ecx,DWORD PTR [ebp+0x20]
  427266:	mov    ecx,DWORD PTR [ecx+0x18c]
  42726c:	mov    esi,DWORD PTR [ecx]
  42726e:	cmp    DWORD PTR [eax],esi
  427270:	jb     0x427291
  427272:	mov    esi,DWORD PTR [edx]
  427274:	mov    edi,DWORD PTR [edx]
  427276:	mov    esi,DWORD PTR [esi+0x3c]
  427279:	lea    esi,[edi+esi*1+0x50]
  42727d:	mov    edi,DWORD PTR [ecx]
  42727f:	add    edi,DWORD PTR [esi]
  427281:	cmp    DWORD PTR [eax],edi
  427283:	jae    0x427291
  427285:	mov    esi,DWORD PTR [ecx]
  427287:	mov    ecx,DWORD PTR [eax]
  427289:	mov    edx,DWORD PTR [edx]
  42728b:	sub    ecx,esi
  42728d:	add    edx,ecx
  42728f:	mov    DWORD PTR [eax],edx
  427291:	mov    eax,DWORD PTR [ebp+0xc]
  427294:	jmp    0x427298
  427296:	xor    eax,eax
  427298:	pop    edi
  427299:	pop    esi
  42729a:	pop    ebx
  42729b:	leave  
  42729c:	ret    0x1c
  42729f:	push   ebp
  4272a0:	mov    ebp,esp
  4272a2:	sub    esp,0x1c
  4272a5:	push   esi
  4272a6:	mov    esi,eax
  4272a8:	mov    eax,DWORD PTR [ecx+0x190]
  4272ae:	cmp    DWORD PTR [eax],0x0
  4272b1:	je     0x4273c1
  4272b7:	test   edx,edx
  4272b9:	je     0x4273c1
  4272bf:	test   esi,esi
  4272c1:	je     0x4273c1
  4272c7:	mov    eax,DWORD PTR [esi+0x88]
  4272cd:	test   eax,eax
  4272cf:	je     0x4273bc
  4272d5:	cmp    DWORD PTR [esi+0x8c],0x10
  4272dc:	je     0x4273bc
  4272e2:	cmp    DWORD PTR [esi+0x34],edx
  4272e5:	je     0x4273bc
  4272eb:	mov    esi,DWORD PTR [ecx+0x18c]
  4272f1:	and    DWORD PTR [ebp-0x10],0x0
  4272f5:	mov    ecx,edx
  4272f7:	sub    ecx,DWORD PTR [esi]
  4272f9:	add    eax,edx
  4272fb:	movzx  edx,WORD PTR [eax+0xc]
  4272ff:	mov    DWORD PTR [ebp-0x1c],ecx
  427302:	movzx  ecx,WORD PTR [eax+0xe]
  427306:	add    ecx,edx
  427308:	je     0x4273bc
  42730e:	lea    ecx,[eax+0x14]
  427311:	push   ebx
  427312:	mov    DWORD PTR [ebp-0x18],ecx
  427315:	mov    esi,0x7fffffff
  42731a:	push   edi
  42731b:	test   DWORD PTR [ecx],esi
  42731d:	je     0x42739e
  42731f:	mov    edx,DWORD PTR [ecx]
  427321:	and    DWORD PTR [ebp-0xc],0x0
  427325:	and    edx,esi
  427327:	add    edx,eax
  427329:	movzx  edi,WORD PTR [edx+0xe]
  42732d:	movzx  ebx,WORD PTR [edx+0xc]
  427331:	add    edi,ebx
  427333:	je     0x42739e
  427335:	lea    ecx,[edx+0x14]
  427338:	mov    DWORD PTR [ebp-0x14],ecx
  42733b:	test   DWORD PTR [ecx],esi
  42733d:	je     0x427380
  42733f:	mov    ecx,DWORD PTR [ecx]
  427341:	and    DWORD PTR [ebp-0x8],0x0
  427345:	and    ecx,esi
  427347:	add    ecx,eax
  427349:	movzx  edi,WORD PTR [ecx+0xe]
  42734d:	movzx  ebx,WORD PTR [ecx+0xc]
  427351:	add    edi,ebx
  427353:	je     0x427380
  427355:	lea    edi,[ecx+0x14]
  427358:	mov    DWORD PTR [ebp-0x4],edi
  42735b:	mov    edi,DWORD PTR [ebp-0x4]
  42735e:	mov    edi,DWORD PTR [edi]
  427360:	test   edi,edi
  427362:	je     0x42736a
  427364:	mov    ebx,DWORD PTR [ebp-0x1c]
  427367:	add    DWORD PTR [edi+eax*1],ebx
  42736a:	movzx  edi,WORD PTR [ecx+0xe]
  42736e:	movzx  ebx,WORD PTR [ecx+0xc]
  427372:	inc    DWORD PTR [ebp-0x8]
  427375:	add    DWORD PTR [ebp-0x4],0x8
  427379:	add    edi,ebx
  42737b:	cmp    DWORD PTR [ebp-0x8],edi
  42737e:	jb     0x42735b
  427380:	movzx  edi,WORD PTR [edx+0xe]
  427384:	movzx  ebx,WORD PTR [edx+0xc]
  427388:	mov    ecx,DWORD PTR [ebp-0x14]
  42738b:	inc    DWORD PTR [ebp-0xc]
  42738e:	add    ecx,0x8
  427391:	add    edi,ebx
  427393:	mov    DWORD PTR [ebp-0x14],ecx
  427396:	cmp    DWORD PTR [ebp-0xc],edi
  427399:	jb     0x42733b
  42739b:	mov    ecx,DWORD PTR [ebp-0x18]
  42739e:	movzx  edx,WORD PTR [eax+0xe]
  4273a2:	movzx  edi,WORD PTR [eax+0xc]
  4273a6:	inc    DWORD PTR [ebp-0x10]
  4273a9:	add    ecx,0x8
  4273ac:	add    edx,edi
  4273ae:	mov    DWORD PTR [ebp-0x18],ecx
  4273b1:	cmp    DWORD PTR [ebp-0x10],edx
  4273b4:	jb     0x42731b
  4273ba:	pop    edi
  4273bb:	pop    ebx
  4273bc:	xor    eax,eax
  4273be:	inc    eax
  4273bf:	jmp    0x4273c3
  4273c1:	xor    eax,eax
  4273c3:	pop    esi
  4273c4:	leave  
  4273c5:	ret    
  4273c6:	push   ebp
  4273c7:	mov    ebp,esp
  4273c9:	mov    ecx,DWORD PTR [ecx+0x190]
  4273cf:	mov    eax,DWORD PTR [ebp+0xc]
  4273d2:	sub    esp,0x10
  4273d5:	push   ebx
  4273d6:	xor    ebx,ebx
  4273d8:	push   esi
  4273d9:	push   edi
  4273da:	cmp    DWORD PTR [ecx],ebx
  4273dc:	je     0x427464
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427464
  4273e6:	cmp    DWORD PTR [eax+0x78],ebx
  4273e9:	jne    0x4273f0
  4273eb:	xor    eax,eax
  4273ed:	inc    eax
  4273ee:	jmp    0x427466
  4273f0:	mov    eax,DWORD PTR [eax+0x78]
  4273f3:	add    eax,DWORD PTR [ebp+0x8]
  4273f6:	mov    ecx,DWORD PTR [eax+0x1c]
  4273f9:	mov    edx,DWORD PTR [eax+0x24]
  4273fc:	mov    esi,DWORD PTR [eax+0x14]
  4273ff:	mov    edi,DWORD PTR [eax+0x18]
  427402:	add    ecx,DWORD PTR [ebp+0x8]
  427405:	add    edx,DWORD PTR [ebp+0x8]
  427408:	mov    DWORD PTR [ebp-0x4],esi
  42740b:	cmp    esi,edi
  42740d:	ja     0x427412
  42740f:	mov    DWORD PTR [ebp-0x4],edi
  427412:	mov    DWORD PTR [ebp-0x8],ebx
  427415:	cmp    DWORD PTR [ebp-0x4],ebx
  427418:	jbe    0x4273eb
  42741a:	cmp    ebx,DWORD PTR [eax+0x14]
  42741d:	jae    0x427425
  42741f:	movzx  esi,WORD PTR [edx+ebx*2]
  427423:	jmp    0x427427
  427425:	mov    esi,ebx
  427427:	lea    esi,[ecx+esi*4]
  42742a:	mov    edi,DWORD PTR [esi]
  42742c:	test   edi,edi
  42742e:	je     0x427459
  427430:	add    edi,DWORD PTR [ebp+0x8]
  427433:	mov    DWORD PTR [ebp-0x10],edi
  427436:	cmp    edi,eax
  427438:	jbe    0x42744a
  42743a:	mov    ebx,DWORD PTR [ebp+0xc]
  42743d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427440:	add    ebx,eax
  427442:	cmp    edi,ebx
  427444:	jae    0x42744a
  427446:	mov    esi,DWORD PTR [esi]
  427448:	jmp    0x427452
  42744a:	sub    edi,DWORD PTR [ebp+0x8]
  42744d:	mov    DWORD PTR [esi],edi
  42744f:	mov    esi,DWORD PTR [ebp-0x10]
  427452:	test   esi,esi
  427454:	je     0x427464
  427456:	mov    ebx,DWORD PTR [ebp-0x8]
  427459:	inc    ebx
  42745a:	mov    DWORD PTR [ebp-0x8],ebx
  42745d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427460:	jb     0x42741a
  427462:	jmp    0x4273eb
  427464:	xor    eax,eax
  427466:	pop    edi
  427467:	pop    esi
  427468:	pop    ebx
  427469:	leave  
  42746a:	ret    0x8
  42746d:	push   ebp
  42746e:	mov    ebp,esp
  427470:	sub    esp,0x2c
  427473:	mov    edx,0xf89c85a5
  427478:	mov    DWORD PTR [ebp-0x4],edx
  42747b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427482:	mov    eax,DWORD PTR [ebp-0x4]
  427485:	mov    ecx,DWORD PTR [ebp-0x4]
  427488:	mov    ecx,DWORD PTR [ebp-0x4]
  42748b:	mov    ecx,DWORD PTR [ebp-0x4]
  42748e:	mov    ecx,DWORD PTR [ebp-0x4]
  427491:	mov    ecx,DWORD PTR [ebp-0x4]
  427494:	push   ebx
  427495:	mov    ebx,DWORD PTR [ebp+0x10]
  427498:	push   esi
  427499:	mov    esi,0x75108ae
  42749e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274a8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274ae:	push   edi
  4274af:	mov    edi,0x3272f5
  4274b4:	xor    ecx,esi
  4274b6:	xor    eax,esi
  4274b8:	add    eax,edi
  4274ba:	add    ecx,edi
  4274bc:	mov    DWORD PTR [ebp-0x18],eax
  4274bf:	cmp    ecx,DWORD PTR [ebx]
  4274c1:	je     0x427742
  4274c7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4274cd:	xor    ebx,esi
  4274cf:	add    ebx,edi
  4274d1:	cmp    ebx,ecx
  4274d3:	je     0x427742
  4274d9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274dc:	mov    ecx,DWORD PTR [ecx+0x80]
  4274e2:	xor    ebx,esi
  4274e4:	add    ebx,edi
  4274e6:	cmp    ecx,ebx
  4274e8:	je     0x42773d
  4274ee:	add    ecx,DWORD PTR [ebp+0x8]
  4274f1:	mov    DWORD PTR [ebp-0x2c],ecx
  4274f4:	mov    ebx,edx
  4274f6:	xor    ebx,esi
  4274f8:	add    ebx,edi
  4274fa:	mov    DWORD PTR [ebp-0x10],ebx
  4274fd:	mov    ebx,DWORD PTR [ebp-0x10]
  427500:	cmp    ebx,edx
  427502:	je     0x427516
  427504:	mov    edx,DWORD PTR [ebp-0x10]
  427507:	mov    ebx,DWORD PTR [ebp-0x4]
  42750a:	imul   edx,edx,0x14
  42750d:	xor    ebx,esi
  42750f:	add    ebx,edi
  427511:	cmp    DWORD PTR [edx+ecx*1],ebx
  427514:	jne    0x42752d
  427516:	mov    edx,DWORD PTR [ebp-0x10]
  427519:	mov    ebx,DWORD PTR [ebp-0x4]
  42751c:	imul   edx,edx,0x14
  42751f:	xor    ebx,esi
  427521:	add    ebx,edi
  427523:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427527:	je     0x42772f
  42752d:	mov    eax,DWORD PTR [ebp-0x4]
  427530:	mov    ebx,DWORD PTR [ebp-0x4]
  427533:	mov    eax,DWORD PTR [ebp-0x10]
  427536:	imul   eax,eax,0x14
  427539:	add    eax,ecx
  42753b:	mov    ecx,DWORD PTR [eax+0x10]
  42753e:	add    ecx,DWORD PTR [ebp+0x8]
  427541:	xor    ebx,esi
  427543:	mov    DWORD PTR [ebp-0x1c],ecx
  427546:	mov    ecx,DWORD PTR [ebp-0x4]
  427549:	mov    edx,DWORD PTR [ebp-0x4]
  42754c:	xor    ecx,esi
  42754e:	add    ecx,edi
  427550:	xor    edx,esi
  427552:	mov    DWORD PTR [ebp-0x24],ecx
  427555:	mov    ecx,DWORD PTR [eax]
  427557:	add    edx,edi
  427559:	add    ebx,edi
  42755b:	cmp    ecx,edx
  42755d:	je     0x427565
  42755f:	add    ecx,DWORD PTR [ebp+0x8]
  427562:	mov    DWORD PTR [ebp-0x24],ecx
  427565:	mov    ecx,DWORD PTR [ebp-0x4]
  427568:	xor    ecx,esi
  42756a:	add    ecx,DWORD PTR [eax+0xc]
  42756d:	mov    eax,DWORD PTR [ebp+0x8]
  427570:	lea    eax,[ecx+eax*1+0x3272f5]
  427577:	mov    DWORD PTR [ebp+0xc],eax
  42757a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427581:	mov    eax,DWORD PTR [ebp+0x10]
  427584:	push   DWORD PTR [ebp+0xc]
  427587:	mov    eax,DWORD PTR [eax+0x1e0]
  42758d:	call   DWORD PTR [eax]
  42758f:	mov    ecx,DWORD PTR [ebp-0x4]
  427592:	xor    ecx,esi
  427594:	add    ecx,edi
  427596:	mov    DWORD PTR [ebp-0xc],eax
  427599:	cmp    ecx,eax
  42759b:	jne    0x4275af
  42759d:	mov    eax,DWORD PTR [ebp+0x10]
  4275a0:	push   DWORD PTR [ebp+0xc]
  4275a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275a9:	call   DWORD PTR [eax+0xc]
  4275ac:	mov    DWORD PTR [ebp-0xc],eax
  4275af:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  4275b6:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  4275bd:	mov    eax,DWORD PTR [ebp-0x4]
  4275c0:	xor    eax,esi
  4275c2:	add    eax,edi
  4275c4:	cmp    eax,DWORD PTR [ebp-0xc]
  4275c7:	jne    0x4275ec
  4275c9:	mov    eax,DWORD PTR [ebp-0x8]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x20]
  4275cf:	xor    eax,esi
  4275d1:	xor    ecx,esi
  4275d3:	lea    ebx,[ebx+eax*1+0x3272f5]
  4275da:	mov    eax,DWORD PTR [ebp+0x10]
  4275dd:	mov    eax,DWORD PTR [eax+0x1e0]
  4275e3:	add    ecx,edi
  4275e5:	imul   ecx,ebx
  4275e8:	push   ecx
  4275e9:	call   DWORD PTR [eax+0x24]
  4275ec:	mov    eax,DWORD PTR [ebp-0x4]
  4275ef:	xor    eax,esi
  4275f1:	add    eax,edi
  4275f3:	cmp    eax,DWORD PTR [ebp-0xc]
  4275f6:	jne    0x427607
  4275f8:	mov    eax,DWORD PTR [ebp-0x28]
  4275fb:	xor    eax,esi
  4275fd:	add    eax,edi
  4275ff:	cmp    ebx,eax
  427601:	jbe    0x427581
  427607:	mov    eax,DWORD PTR [ebp-0x4]
  42760a:	xor    eax,esi
  42760c:	add    eax,edi
  42760e:	cmp    eax,DWORD PTR [ebp-0xc]
  427611:	jne    0x42762a
  427613:	mov    eax,DWORD PTR [ebp-0x8]
  427616:	mov    ecx,DWORD PTR [ebp-0x18]
  427619:	xor    eax,esi
  42761b:	lea    eax,[ecx+eax*1+0x3272f5]
  427622:	mov    DWORD PTR [ebp-0x18],eax
  427625:	jmp    0x427719
  42762a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427631:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427638:	mov    ebx,DWORD PTR [ebp-0x4]
  42763b:	xor    ebx,esi
  42763d:	add    ebx,edi
  42763f:	jmp    0x427706
  427644:	mov    eax,DWORD PTR [ebp-0x4]
  427647:	xor    eax,esi
  427649:	add    eax,edi
  42764b:	mov    DWORD PTR [ebp-0x14],eax
  42764e:	mov    eax,DWORD PTR [ebp-0x4]
  427651:	xor    eax,esi
  427653:	add    eax,edi
  427655:	mov    DWORD PTR [ebp+0xc],eax
  427658:	mov    ecx,DWORD PTR [ebp-0x4]
  42765b:	mov    eax,DWORD PTR [ebp-0x24]
  42765e:	xor    ecx,esi
  427660:	add    ecx,edi
  427662:	cmp    ecx,eax
  427664:	je     0x42766c
  427666:	mov    eax,DWORD PTR [eax+ebx*4]
  427669:	mov    DWORD PTR [ebp-0x14],eax
  42766c:	mov    eax,DWORD PTR [ebp-0x1c]
  42766f:	mov    eax,DWORD PTR [eax+ebx*4]
  427672:	mov    DWORD PTR [ebp+0xc],eax
  427675:	mov    eax,DWORD PTR [ebp-0x4]
  427678:	mov    ecx,DWORD PTR [ebp-0x14]
  42767b:	xor    eax,esi
  42767d:	add    eax,edi
  42767f:	cmp    eax,ecx
  427681:	je     0x4276ac
  427683:	mov    eax,DWORD PTR [ebp-0x4]
  427686:	mov    ecx,DWORD PTR [ebp-0x14]
  427689:	xor    eax,esi
  42768b:	add    eax,edi
  42768d:	shr    ecx,0x1f
  427690:	cmp    eax,ecx
  427692:	je     0x4276ac
  427694:	mov    ecx,DWORD PTR [ebp-0x14]
  427697:	mov    eax,DWORD PTR [ebp+0x10]
  42769a:	mov    eax,DWORD PTR [eax+0x1e0]
  4276a0:	movzx  ecx,cx
  4276a3:	push   ecx
  4276a4:	push   DWORD PTR [ebp-0xc]
  4276a7:	call   DWORD PTR [eax+0x8]
  4276aa:	jmp    0x4276c5
  4276ac:	mov    eax,DWORD PTR [ebp+0xc]
  4276af:	add    eax,DWORD PTR [ebp+0x8]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4276b5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4276bb:	add    eax,0x2
  4276be:	push   eax
  4276bf:	push   DWORD PTR [ebp-0xc]
  4276c2:	call   DWORD PTR [ecx+0x8]
  4276c5:	mov    DWORD PTR [ebp+0xc],eax
  4276c8:	mov    eax,DWORD PTR [ebp-0x4]
  4276cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4276ce:	xor    eax,esi
  4276d0:	add    eax,edi
  4276d2:	cmp    eax,ecx
  4276d4:	mov    eax,DWORD PTR [ebp-0x8]
  4276d7:	jne    0x4276ea
  4276d9:	mov    ecx,DWORD PTR [ebp-0x18]
  4276dc:	xor    eax,esi
  4276de:	lea    eax,[ecx+eax*1+0x3272f5]
  4276e5:	mov    DWORD PTR [ebp-0x18],eax
  4276e8:	jmp    0x4276fa
  4276ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4276ed:	xor    eax,esi
  4276ef:	add    eax,edi
  4276f1:	imul   eax,ecx
  4276f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276f7:	mov    DWORD PTR [ecx+ebx*4],eax
  4276fa:	mov    eax,DWORD PTR [ebp-0x8]
  4276fd:	xor    eax,esi
  4276ff:	lea    ebx,[ebx+eax*1+0x3272f5]
  427706:	mov    eax,DWORD PTR [ebp-0x4]
  427709:	mov    ecx,DWORD PTR [ebp-0x1c]
  42770c:	xor    eax,esi
  42770e:	add    eax,edi
  427710:	cmp    DWORD PTR [ecx+ebx*4],eax
  427713:	jne    0x427644
  427719:	mov    edx,DWORD PTR [ebp-0x10]
  42771c:	mov    eax,DWORD PTR [ebp-0x18]
  42771f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427722:	sub    edx,0x3272f4
  427728:	xor    edx,esi
  42772a:	jmp    0x4274f4
  42772f:	mov    ecx,DWORD PTR [ebp-0x4]
  427732:	xor    ecx,esi
  427734:	add    ecx,edi
  427736:	cmp    eax,ecx
  427738:	mov    eax,DWORD PTR [ebp-0x4]
  42773b:	jne    0x427745
  42773d:	mov    eax,DWORD PTR [ebp-0x8]
  427740:	jmp    0x427745
  427742:	mov    eax,DWORD PTR [ebp-0x4]
  427745:	xor    eax,esi
  427747:	add    eax,edi
  427749:	pop    edi
  42774a:	pop    esi
  42774b:	pop    ebx
  42774c:	leave  
  42774d:	ret    0xc
  427750:	push   ebp
  427751:	mov    ebp,esp
  427753:	sub    esp,0x28
  427756:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42775d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427764:	mov    eax,DWORD PTR [ebp+0xc]
  427767:	mov    DWORD PTR [ebp+0xc],eax
  42776a:	push   esi
  42776b:	mov    eax,eax
  42776d:	mov    eax,DWORD PTR [ebp-0x4]
  427770:	mov    esi,DWORD PTR [ebp+0x8]
  427773:	mov    ecx,0x75108ae
  427778:	xor    eax,ecx
  42777a:	mov    edx,0x3272f5
  42777f:	add    eax,edx
  427781:	cmp    esi,eax
  427783:	je     0x4278aa
  427789:	mov    eax,DWORD PTR [ebp+0x8]
  42778c:	mov    esi,DWORD PTR [ebp+0x8]
  42778f:	add    esi,DWORD PTR [eax+0x3c]
  427792:	push   edi
  427793:	mov    DWORD PTR [ebp+0xc],esi
  427796:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42779d:	mov    eax,DWORD PTR [ebp-0x1c]
  4277a0:	mov    esi,DWORD PTR [ebp-0x4]
  4277a3:	mov    edi,DWORD PTR [ebp+0xc]
  4277a6:	xor    esi,ecx
  4277a8:	xor    eax,ecx
  4277aa:	add    esi,edx
  4277ac:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  4277b3:	je     0x4278a4
  4277b9:	mov    esi,DWORD PTR [ebp+0xc]
  4277bc:	mov    eax,DWORD PTR [ebp+0x8]
  4277bf:	add    eax,DWORD PTR [esi+0xa0]
  4277c5:	mov    esi,DWORD PTR [ebp+0x8]
  4277c8:	mov    edi,DWORD PTR [ebp+0xc]
  4277cb:	sub    esi,DWORD PTR [edi+0x34]
  4277ce:	mov    edi,DWORD PTR [ebp-0x4]
  4277d1:	xor    edi,ecx
  4277d3:	add    edi,edx
  4277d5:	mov    DWORD PTR [ebp-0x24],esi
  4277d8:	cmp    esi,edi
  4277da:	je     0x4278a4
  4277e0:	mov    esi,DWORD PTR [ebp-0x4]
  4277e3:	xor    esi,ecx
  4277e5:	add    esi,edx
  4277e7:	mov    DWORD PTR [ebp-0x8],esi
  4277ea:	push   ebx
  4277eb:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  4277f2:	jmp    0x42788e
  4277f7:	mov    esi,DWORD PTR [ebp-0x4]
  4277fa:	xor    esi,ecx
  4277fc:	lea    edi,[ebx-0x8]
  4277ff:	add    esi,edx
  427801:	shr    edi,1
  427803:	cmp    esi,edi
  427805:	jae    0x427874
  427807:	sub    edi,esi
  427809:	lea    ebx,[eax+esi*2+0x8]
  42780d:	mov    DWORD PTR [ebp-0x18],edi
  427810:	movzx  esi,WORD PTR [ebx]
  427813:	and    esi,0xfff
  427819:	mov    DWORD PTR [ebp-0x14],esi
  42781c:	mov    edi,DWORD PTR [ebp-0x14]
  42781f:	mov    esi,DWORD PTR [eax]
  427821:	sub    esi,edx
  427823:	add    edi,esi
  427825:	movzx  esi,WORD PTR [ebx]
  427828:	shr    esi,0xc
  42782b:	xor    edi,ecx
  42782d:	mov    DWORD PTR [ebp-0x20],edi
  427830:	mov    DWORD PTR [ebp-0x14],esi
  427833:	mov    esi,DWORD PTR [ebp-0x20]
  427836:	mov    edi,DWORD PTR [ebp+0x8]
  427839:	xor    esi,ecx
  42783b:	lea    esi,[esi+edi*1+0x3272f5]
  427842:	mov    DWORD PTR [ebp-0x20],esi
  427845:	mov    esi,DWORD PTR [ebp-0x10]
  427848:	mov    edi,DWORD PTR [ebp-0x14]
  42784b:	xor    esi,ecx
  42784d:	add    esi,edx
  42784f:	cmp    edi,esi
  427851:	jne    0x427869
  427853:	mov    esi,DWORD PTR [ebp-0x10]
  427856:	mov    edi,DWORD PTR [ebp-0x14]
  427859:	xor    esi,ecx
  42785b:	add    esi,edx
  42785d:	cmp    edi,esi
  42785f:	jne    0x427869
  427861:	mov    esi,DWORD PTR [ebp-0x20]
  427864:	mov    edi,DWORD PTR [ebp-0x24]
  427867:	add    DWORD PTR [esi],edi
  427869:	add    ebx,0x2
  42786c:	dec    DWORD PTR [ebp-0x18]
  42786f:	jne    0x427810
  427871:	mov    ebx,DWORD PTR [ebp-0xc]
  427874:	add    DWORD PTR [ebp-0x8],ebx
  427877:	mov    esi,DWORD PTR [ebp-0x1c]
  42787a:	mov    edi,DWORD PTR [ebp-0x8]
  42787d:	mov    ebx,DWORD PTR [ebp+0xc]
  427880:	xor    esi,ecx
  427882:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427889:	jae    0x4278a3
  42788b:	add    eax,DWORD PTR [ebp-0xc]
  42788e:	mov    esi,DWORD PTR [ebp-0x4]
  427891:	mov    ebx,DWORD PTR [eax+0x4]
  427894:	xor    esi,ecx
  427896:	add    esi,edx
  427898:	mov    DWORD PTR [ebp-0xc],ebx
  42789b:	cmp    ebx,esi
  42789d:	jne    0x4277f7
  4278a3:	pop    ebx
  4278a4:	mov    eax,DWORD PTR [ebp-0x28]
  4278a7:	pop    edi
  4278a8:	jmp    0x4278ad
  4278aa:	mov    eax,DWORD PTR [ebp-0x4]
  4278ad:	xor    eax,ecx
  4278af:	add    eax,edx
  4278b1:	pop    esi
  4278b2:	leave  
  4278b3:	ret    0x8
  4278b6:	push   ebp
  4278b7:	mov    ebp,esp
  4278b9:	sub    esp,0xd8
  4278bf:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4278c6:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  4278cd:	mov    eax,DWORD PTR [ebp-0x4]
  4278d0:	push   ebx
  4278d1:	push   esi
  4278d2:	mov    esi,0x75108ae
  4278d7:	xor    eax,esi
  4278d9:	push   edi
  4278da:	mov    edi,0x3272f5
  4278df:	add    eax,edi
  4278e1:	mov    DWORD PTR [ebp-0x18],eax
  4278e4:	mov    eax,DWORD PTR [ebp-0x4]
  4278e7:	xor    eax,esi
  4278e9:	add    eax,edi
  4278eb:	mov    DWORD PTR [ebp-0x8],eax
  4278ee:	mov    ebx,DWORD PTR [ebp+0x20]
  4278f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4278f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4278f7:	xor    eax,ecx
  4278f9:	mov    DWORD PTR [ebp-0x1c],eax
  4278fc:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427903:	mov    eax,DWORD PTR [ebp-0xc]
  427906:	mov    ecx,DWORD PTR [ebp-0xc]
  427909:	xor    eax,ecx
  42790b:	mov    DWORD PTR [ebp-0xc],eax
  42790e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427915:	mov    eax,DWORD PTR [ebp-0x10]
  427918:	mov    ecx,DWORD PTR [ebp-0x10]
  42791b:	xor    eax,ecx
  42791d:	mov    DWORD PTR [ebp-0x10],eax
  427920:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427927:	mov    eax,DWORD PTR [ebp-0x28]
  42792a:	mov    ecx,DWORD PTR [ebp-0x28]
  42792d:	xor    eax,ecx
  42792f:	mov    DWORD PTR [ebp-0x28],eax
  427932:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427939:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427940:	mov    eax,DWORD PTR [ebp+0x8]
  427943:	test   eax,eax
  427945:	je     0x427dcc
  42794b:	mov    eax,DWORD PTR [ebp+0xc]
  42794e:	test   eax,eax
  427950:	je     0x427dcc
  427956:	mov    eax,DWORD PTR [ebp+0x18]
  427959:	test   eax,eax
  42795b:	je     0x427dcc
  427961:	mov    eax,DWORD PTR [ebp+0x20]
  427964:	mov    ecx,DWORD PTR [ebp+0x8]
  427967:	xor    eax,0x8ae
  42796c:	add    eax,0x72f5
  427971:	cmp    WORD PTR [ecx],ax
  427974:	jne    0x427dcc
  42797a:	mov    eax,DWORD PTR [ebp-0x4]
  42797d:	xor    eax,esi
  42797f:	add    eax,edi
  427981:	mov    DWORD PTR [ebp-0x30],eax
  427984:	mov    eax,DWORD PTR [ebp-0x4]
  427987:	mov    ecx,DWORD PTR [ebp+0x8]
  42798a:	mov    eax,DWORD PTR [ebp+0x8]
  42798d:	add    eax,DWORD PTR [ecx+0x3c]
  427990:	mov    DWORD PTR [ebp+0xc],eax
  427993:	mov    eax,DWORD PTR [eax+0x50]
  427996:	test   eax,eax
  427998:	je     0x427dcc
  42799e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279a5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279a8:	xor    eax,esi
  4279aa:	add    eax,edi
  4279ac:	mov    DWORD PTR [ebp-0x2c],eax
  4279af:	mov    eax,DWORD PTR [ebp-0x4]
  4279b2:	mov    eax,DWORD PTR [ebx+0x190]
  4279b8:	mov    ecx,DWORD PTR [eax]
  4279ba:	mov    ecx,DWORD PTR [ecx+0x3c]
  4279bd:	add    ecx,DWORD PTR [eax]
  4279bf:	mov    eax,DWORD PTR [ebp-0x4]
  4279c2:	mov    eax,DWORD PTR [ebx+0x18c]
  4279c8:	mov    edx,DWORD PTR [eax]
  4279ca:	mov    DWORD PTR [ebp-0x20],ecx
  4279cd:	mov    DWORD PTR [ebp+0x20],edx
  4279d0:	cmp    edx,edx
  4279d2:	jne    0x427a06
  4279d4:	mov    eax,DWORD PTR [ebx+0x1e0]
  4279da:	lea    edx,[ebp-0x18]
  4279dd:	push   edx
  4279de:	mov    edx,DWORD PTR [ebp-0xc]
  4279e1:	xor    edx,esi
  4279e3:	add    edx,edi
  4279e5:	push   edx
  4279e6:	push   DWORD PTR [ecx+0x50]
  4279e9:	push   DWORD PTR [ebp+0x20]
  4279ec:	call   DWORD PTR [eax+0x1c]
  4279ef:	mov    eax,DWORD PTR [ebp-0x20]
  4279f2:	mov    ecx,DWORD PTR [eax+0x54]
  4279f5:	mov    eax,DWORD PTR [eax+0x50]
  4279f8:	sub    eax,ecx
  4279fa:	add    ecx,DWORD PTR [ebp+0x20]
  4279fd:	push   ecx
  4279fe:	call   0x428369
  427a03:	mov    edx,DWORD PTR [ebp+0x20]
  427a06:	mov    eax,DWORD PTR [ebx+0x194]
  427a0c:	mov    DWORD PTR [eax],edx
  427a0e:	mov    eax,DWORD PTR [ebp+0xc]
  427a11:	push   DWORD PTR [eax+0x54]
  427a14:	push   DWORD PTR [ebp+0x8]
  427a17:	push   edx
  427a18:	call   0x42825f
  427a1d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a20:	mov    eax,DWORD PTR [ecx+0x3c]
  427a23:	add    eax,ecx
  427a25:	movzx  ecx,WORD PTR [eax+0x14]
  427a29:	lea    ecx,[ecx+eax*1+0x18]
  427a2d:	mov    DWORD PTR [ebp+0x18],ecx
  427a30:	mov    ecx,DWORD PTR [ebp-0x4]
  427a33:	movzx  edx,WORD PTR [eax+0x6]
  427a37:	xor    ecx,esi
  427a39:	add    ecx,edi
  427a3b:	mov    DWORD PTR [ebp+0xc],eax
  427a3e:	cmp    edx,ecx
  427a40:	je     0x427aed
  427a46:	mov    ecx,DWORD PTR [ebp-0x4]
  427a49:	xor    ecx,esi
  427a4b:	add    ecx,edi
  427a4d:	mov    DWORD PTR [ebp-0x8],ecx
  427a50:	mov    ecx,DWORD PTR [ebp-0x24]
  427a53:	movzx  edx,WORD PTR [eax+0x6]
  427a57:	xor    ecx,esi
  427a59:	sub    edx,ecx
  427a5b:	sub    edx,edi
  427a5d:	cmp    DWORD PTR [ebp-0x8],edx
  427a60:	ja     0x427aed
  427a66:	mov    edx,DWORD PTR [ebp+0x18]
  427a69:	add    edx,0x8
  427a6c:	mov    DWORD PTR [ebp+0x18],edx
  427a6f:	jmp    0x427a74
  427a71:	mov    edx,DWORD PTR [ebp+0x18]
  427a74:	mov    eax,DWORD PTR [eax+0x38]
  427a77:	lea    ecx,[eax-0x1]
  427a7a:	mov    DWORD PTR [ebp-0x38],eax
  427a7d:	mov    eax,DWORD PTR [edx]
  427a7f:	test   eax,ecx
  427a81:	je     0x427a8a
  427a83:	not    ecx
  427a85:	and    eax,ecx
  427a87:	add    eax,DWORD PTR [ebp-0x38]
  427a8a:	mov    ecx,DWORD PTR [edx+0x4]
  427a8d:	add    ecx,DWORD PTR [ebp+0x20]
  427a90:	push   ecx
  427a91:	call   0x428369
  427a96:	mov    edx,DWORD PTR [ebp-0x4]
  427a99:	mov    eax,DWORD PTR [ebp+0x18]
  427a9c:	mov    ecx,DWORD PTR [eax+0x8]
  427a9f:	xor    edx,esi
  427aa1:	add    edx,edi
  427aa3:	cmp    ecx,edx
  427aa5:	je     0x427abe
  427aa7:	push   ecx
  427aa8:	mov    ecx,DWORD PTR [ebp+0x8]
  427aab:	add    ecx,DWORD PTR [eax+0xc]
  427aae:	mov    eax,DWORD PTR [eax+0x4]
  427ab1:	add    eax,DWORD PTR [ebp+0x20]
  427ab4:	push   ecx
  427ab5:	push   eax
  427ab6:	call   0x42825f
  427abb:	mov    eax,DWORD PTR [ebp+0x18]
  427abe:	mov    ecx,DWORD PTR [ebp-0x24]
  427ac1:	mov    edx,DWORD PTR [ebp-0x8]
  427ac4:	add    eax,0x28
  427ac7:	xor    ecx,esi
  427ac9:	lea    ecx,[edx+ecx*1+0x3272f5]
  427ad0:	mov    edx,DWORD PTR [ebp+0xc]
  427ad3:	mov    DWORD PTR [ebp+0x18],eax
  427ad6:	mov    eax,DWORD PTR [ebp-0x24]
  427ad9:	movzx  edx,WORD PTR [edx+0x6]
  427add:	xor    eax,esi
  427adf:	sub    edx,eax
  427ae1:	mov    eax,DWORD PTR [ebp+0xc]
  427ae4:	sub    edx,edi
  427ae6:	mov    DWORD PTR [ebp-0x8],ecx
  427ae9:	cmp    ecx,edx
  427aeb:	jbe    0x427a71
  427aed:	mov    edx,DWORD PTR [ebx+0x18c]
  427af3:	mov    ecx,DWORD PTR [ebp+0x20]
  427af6:	cmp    ecx,DWORD PTR [edx]
  427af8:	jne    0x427b21
  427afa:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b00:	lea    edx,[ebp-0x18]
  427b03:	push   edx
  427b04:	mov    edx,DWORD PTR [ebp-0x10]
  427b07:	xor    edx,esi
  427b09:	add    edx,edi
  427b0b:	push   edx
  427b0c:	mov    edx,DWORD PTR [ebp-0x20]
  427b0f:	push   DWORD PTR [edx+0x54]
  427b12:	push   ecx
  427b13:	call   DWORD PTR [eax+0x1c]
  427b16:	test   eax,eax
  427b18:	je     0x427dbd
  427b1e:	mov    eax,DWORD PTR [ebp+0xc]
  427b21:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b27:	mov    ecx,DWORD PTR [ecx]
  427b29:	xor    ecx,esi
  427b2b:	add    ecx,edi
  427b2d:	je     0x427ce8
  427b33:	mov    eax,DWORD PTR [ebp-0x4]
  427b36:	xor    eax,esi
  427b38:	add    eax,edi
  427b3a:	and    DWORD PTR [ebp+0x8],0x0
  427b3e:	mov    DWORD PTR [ebp-0x14],eax
  427b41:	mov    eax,0xf89c85c1
  427b46:	lea    ecx,[eax+0x18]
  427b49:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b50:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b57:	mov    DWORD PTR [ebp-0x50],eax
  427b5a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b5d:	mov    DWORD PTR [ebp-0x48],ecx
  427b60:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b67:	mov    edx,DWORD PTR [ebp+0x8]
  427b6a:	mov    ecx,0x8ae
  427b6f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b74:	mov    edx,0x72f5
  427b79:	add    cx,dx
  427b7c:	mov    edx,DWORD PTR [ebp+0x8]
  427b7f:	inc    DWORD PTR [ebp+0x8]
  427b82:	cmp    DWORD PTR [ebp+0x8],0x6
  427b86:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b8e:	jb     0x427b67
  427b90:	mov    ecx,0xf89c85d3
  427b95:	mov    DWORD PTR [ebp-0xb0],eax
  427b9b:	mov    DWORD PTR [ebp-0x9c],eax
  427ba1:	mov    DWORD PTR [ebp-0x74],eax
  427ba4:	mov    DWORD PTR [ebp-0x70],eax
  427ba7:	lea    eax,[ecx-0x3]
  427baa:	lea    edx,[ecx+0x2c]
  427bad:	mov    DWORD PTR [ebp-0x64],eax
  427bb0:	mov    DWORD PTR [ebp-0x60],eax
  427bb3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427bbd:	mov    DWORD PTR [ebp-0xac],ecx
  427bc3:	mov    DWORD PTR [ebp-0xa8],edx
  427bc9:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427bd3:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427bdd:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427be7:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427bf1:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427bfb:	mov    DWORD PTR [ebp-0x8c],ecx
  427c01:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c0b:	mov    DWORD PTR [ebp-0x84],edx
  427c11:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c18:	mov    DWORD PTR [ebp-0x7c],ecx
  427c1b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c22:	mov    DWORD PTR [ebp-0x6c],ecx
  427c25:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c2c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c33:	xor    eax,eax
  427c35:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c3c:	xor    cl,0xae
  427c3f:	sub    cl,0xb
  427c42:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c49:	inc    eax
  427c4a:	cmp    eax,0x17
  427c4d:	jb     0x427c35
  427c4f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c55:	lea    ecx,[ebp-0xc0]
  427c5b:	push   ecx
  427c5c:	call   DWORD PTR [eax+0x4]
  427c5f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c65:	lea    edx,[ebp-0xd8]
  427c6b:	push   edx
  427c6c:	push   eax
  427c6d:	call   DWORD PTR [ecx+0x8]
  427c70:	mov    DWORD PTR [ebp-0x40],eax
  427c73:	lea    eax,[ebp-0x14]
  427c76:	push   eax
  427c77:	mov    eax,DWORD PTR [ebx+0x18c]
  427c7d:	push   DWORD PTR [eax]
  427c7f:	mov    eax,DWORD PTR [ebp-0x40]
  427c82:	call   eax
  427c84:	mov    eax,DWORD PTR [ebp-0x4]
  427c87:	xor    eax,esi
  427c89:	add    eax,edi
  427c8b:	mov    DWORD PTR [ebp-0x34],eax
  427c8e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c91:	mov    eax,DWORD PTR [ebp-0x14]
  427c94:	xor    ecx,esi
  427c96:	add    ecx,edi
  427c98:	cmp    eax,ecx
  427c9a:	je     0x427ce5
  427c9c:	mov    DWORD PTR [ebp-0x3c],eax
  427c9f:	jmp    0x427cb0
  427ca1:	mov    eax,DWORD PTR [eax]
  427ca3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427ca6:	mov    DWORD PTR [ebp-0x14],eax
  427ca9:	mov    eax,DWORD PTR [ebp-0x14]
  427cac:	cmp    eax,ecx
  427cae:	je     0x427cbd
  427cb0:	mov    edx,DWORD PTR [eax+0x18]
  427cb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cb9:	cmp    edx,DWORD PTR [ecx]
  427cbb:	jne    0x427ca1
  427cbd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cc3:	mov    edx,DWORD PTR [eax+0x18]
  427cc6:	cmp    edx,DWORD PTR [ecx]
  427cc8:	jne    0x427ce5
  427cca:	mov    ecx,DWORD PTR [ebx+0x190]
  427cd0:	mov    edx,DWORD PTR [ebp-0x20]
  427cd3:	mov    edx,DWORD PTR [edx+0x28]
  427cd6:	add    edx,DWORD PTR [ecx]
  427cd8:	mov    DWORD PTR [eax+0x1c],edx
  427cdb:	mov    eax,DWORD PTR [ebp-0x24]
  427cde:	xor    eax,esi
  427ce0:	add    eax,edi
  427ce2:	mov    DWORD PTR [ebp-0x34],eax
  427ce5:	mov    eax,DWORD PTR [ebp+0xc]
  427ce8:	push   ebx
  427ce9:	push   eax
  427cea:	push   DWORD PTR [ebp+0x20]
  427ced:	call   0x42746d
  427cf2:	test   eax,eax
  427cf4:	je     0x427dbd
  427cfa:	push   DWORD PTR [ebp+0xc]
  427cfd:	mov    ecx,ebx
  427cff:	push   DWORD PTR [ebp+0x20]
  427d02:	call   0x4273c6
  427d07:	test   eax,eax
  427d09:	je     0x427dbd
  427d0f:	mov    eax,DWORD PTR [ebp+0xc]
  427d12:	mov    edx,DWORD PTR [ebp+0x20]
  427d15:	mov    ecx,ebx
  427d17:	call   0x42729f
  427d1c:	test   eax,eax
  427d1e:	je     0x427dbd
  427d24:	push   ebx
  427d25:	push   DWORD PTR [ebp+0x20]
  427d28:	call   0x427750
  427d2d:	test   eax,eax
  427d2f:	je     0x427dbd
  427d35:	mov    eax,DWORD PTR [ebx+0x18c]
  427d3b:	mov    edx,DWORD PTR [ebp+0x20]
  427d3e:	cmp    edx,DWORD PTR [eax]
  427d40:	jne    0x427d5c
  427d42:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d48:	lea    ecx,[ebp-0x18]
  427d4b:	push   ecx
  427d4c:	push   DWORD PTR [ebp-0x18]
  427d4f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d52:	push   DWORD PTR [ecx+0x54]
  427d55:	push   edx
  427d56:	call   DWORD PTR [eax+0x1c]
  427d59:	mov    edx,DWORD PTR [ebp+0x20]
  427d5c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d62:	mov    eax,DWORD PTR [eax]
  427d64:	xor    eax,esi
  427d66:	add    eax,edi
  427d68:	je     0x427da1
  427d6a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d6d:	mov    eax,DWORD PTR [ecx+0x28]
  427d70:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d77:	mov    esi,DWORD PTR [ebp+0x8]
  427d7a:	push   DWORD PTR [ebp+0x14]
  427d7d:	xor    esi,0x8ae
  427d83:	push   DWORD PTR [ebp+0x10]
  427d86:	add    esi,0x72f5
  427d8c:	or     WORD PTR [ecx+0x16],si
  427d90:	add    eax,edx
  427d92:	push   edx
  427d93:	call   eax
  427d95:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d9f:	jmp    0x427dab
  427da1:	mov    eax,DWORD PTR [ebp+0xc]
  427da4:	mov    eax,DWORD PTR [eax+0x28]
  427da7:	add    eax,edx
  427da9:	call   eax
  427dab:	mov    DWORD PTR [ebp-0x8],eax
  427dae:	mov    eax,DWORD PTR [ebp-0x8]
  427db1:	mov    ecx,DWORD PTR [ebp+0x1c]
  427db4:	mov    DWORD PTR [ecx],eax
  427db6:	mov    DWORD PTR [ebp-0x30],0x1
  427dbd:	cmp    DWORD PTR [ebp-0x30],0x0
  427dc1:	jne    0x427dc7
  427dc3:	and    DWORD PTR [ebp+0x20],0x0
  427dc7:	mov    eax,DWORD PTR [ebp+0x20]
  427dca:	jmp    0x427dce
  427dcc:	xor    eax,eax
  427dce:	pop    edi
  427dcf:	pop    esi
  427dd0:	pop    ebx
  427dd1:	leave  
  427dd2:	ret    0x1c
  427dd5:	push   ebp
  427dd6:	mov    ebp,esp
  427dd8:	movzx  edx,WORD PTR [ecx+0x6]
  427ddc:	movzx  eax,WORD PTR [ecx+0x14]
  427de0:	push   ebx
  427de1:	push   edi
  427de2:	xor    edi,edi
  427de4:	lea    eax,[eax+ecx*1+0x18]
  427de8:	test   edx,edx
  427dea:	je     0x427e0b
  427dec:	mov    ecx,DWORD PTR [eax+0xc]
  427def:	lea    ebx,[ecx+esi*1]
  427df2:	cmp    DWORD PTR [ebp+0x8],ebx
  427df5:	jb     0x427e03
  427df7:	mov    ebx,DWORD PTR [eax+0x8]
  427dfa:	add    ebx,ecx
  427dfc:	add    ebx,esi
  427dfe:	cmp    DWORD PTR [ebp+0x8],ebx
  427e01:	jb     0x427e0d
  427e03:	add    eax,0x28
  427e06:	inc    edi
  427e07:	cmp    edi,edx
  427e09:	jb     0x427dec
  427e0b:	xor    eax,eax
  427e0d:	pop    edi
  427e0e:	pop    ebx
  427e0f:	pop    ebp
  427e10:	ret    0x4
  427e13:	push   ebp
  427e14:	mov    ebp,esp
  427e16:	sub    esp,0x34
  427e19:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e20:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e27:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e2e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e35:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e3c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e43:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e4a:	mov    DWORD PTR [ebp-0x10],eax
  427e4d:	mov    eax,DWORD PTR [ebp+0x8]
  427e50:	mov    DWORD PTR [ebp-0x14],eax
  427e53:	mov    eax,DWORD PTR [ebp-0xc]
  427e56:	push   ebx
  427e57:	mov    ecx,0x75108ae
  427e5c:	xor    eax,ecx
  427e5e:	push   esi
  427e5f:	mov    esi,DWORD PTR [ebp-0x10]
  427e62:	mov    edx,0x3272f5
  427e67:	add    eax,edx
  427e69:	push   edi
  427e6a:	cmp    esi,eax
  427e6c:	je     0x42804b
  427e72:	mov    eax,DWORD PTR [ebp-0xc]
  427e75:	mov    esi,DWORD PTR [ebp-0x14]
  427e78:	xor    eax,ecx
  427e7a:	add    eax,edx
  427e7c:	cmp    esi,eax
  427e7e:	je     0x42804b
  427e84:	mov    eax,DWORD PTR [ebp-0xc]
  427e87:	xor    eax,ecx
  427e89:	add    eax,edx
  427e8b:	mov    DWORD PTR [ebp-0x24],eax
  427e8e:	mov    eax,DWORD PTR [ebp-0xc]
  427e91:	xor    eax,ecx
  427e93:	add    eax,edx
  427e95:	mov    DWORD PTR [ebp-0x28],eax
  427e98:	mov    edi,DWORD PTR [ebp-0x20]
  427e9b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e9e:	mov    esi,0x8ae
  427ea3:	xor    edi,esi
  427ea5:	mov    eax,0x72f5
  427eaa:	xor    ebx,esi
  427eac:	add    edi,eax
  427eae:	add    ebx,eax
  427eb0:	sub    ebx,edi
  427eb2:	mov    WORD PTR [ebp-0x8],bx
  427eb6:	jmp    0x427f7b
  427ebb:	mov    edi,DWORD PTR [ebp-0xc]
  427ebe:	mov    bx,WORD PTR [ebp-0x4]
  427ec2:	xor    edi,esi
  427ec4:	add    edi,eax
  427ec6:	cmp    bx,di
  427ec9:	je     0x427fbd
  427ecf:	mov    edi,DWORD PTR [ebp-0xc]
  427ed2:	mov    ebx,DWORD PTR [ebp+0xc]
  427ed5:	xor    edi,ecx
  427ed7:	add    edi,edx
  427ed9:	cmp    ebx,edi
  427edb:	mov    di,WORD PTR [ebp-0x4]
  427edf:	mov    bx,WORD PTR [ebp+0x8]
  427ee3:	je     0x427f4e
  427ee5:	cmp    bx,di
  427ee8:	je     0x427f57
  427eea:	mov    edi,DWORD PTR [ebp-0x20]
  427eed:	mov    bx,WORD PTR [ebp+0x8]
  427ef1:	xor    edi,esi
  427ef3:	add    edi,eax
  427ef5:	cmp    bx,di
  427ef8:	jb     0x427f18
  427efa:	mov    edi,DWORD PTR [ebp-0x2c]
  427efd:	mov    bx,WORD PTR [ebp+0x8]
  427f01:	xor    edi,esi
  427f03:	add    edi,eax
  427f05:	cmp    bx,di
  427f08:	ja     0x427f18
  427f0a:	movzx  edi,WORD PTR [ebp+0x8]
  427f0e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f12:	add    edi,ebx
  427f14:	mov    WORD PTR [ebp+0x8],di
  427f18:	mov    edi,DWORD PTR [ebp-0x20]
  427f1b:	mov    bx,WORD PTR [ebp-0x4]
  427f1f:	xor    edi,esi
  427f21:	add    edi,eax
  427f23:	cmp    bx,di
  427f26:	jb     0x427f46
  427f28:	mov    edi,DWORD PTR [ebp-0x2c]
  427f2b:	mov    bx,WORD PTR [ebp-0x4]
  427f2f:	xor    edi,esi
  427f31:	add    edi,eax
  427f33:	cmp    bx,di
  427f36:	ja     0x427f46
  427f38:	movzx  edi,WORD PTR [ebp-0x4]
  427f3c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f40:	add    edi,ebx
  427f42:	mov    WORD PTR [ebp-0x4],di
  427f46:	mov    di,WORD PTR [ebp-0x4]
  427f4a:	mov    bx,WORD PTR [ebp+0x8]
  427f4e:	cmp    bx,di
  427f51:	jne    0x42804b
  427f57:	mov    edi,DWORD PTR [ebp-0x1c]
  427f5a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f5d:	xor    edi,ecx
  427f5f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f66:	mov    DWORD PTR [ebp-0x10],edi
  427f69:	mov    edi,DWORD PTR [ebp-0x1c]
  427f6c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f6f:	xor    edi,ecx
  427f71:	lea    edi,[edi+ebx*1+0x3272f5]
  427f78:	mov    DWORD PTR [ebp-0x14],edi
  427f7b:	mov    edi,DWORD PTR [ebp-0x24]
  427f7e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f81:	mov    di,WORD PTR [ebx+edi*2]
  427f85:	mov    WORD PTR [ebp+0x8],di
  427f89:	mov    edi,DWORD PTR [ebp-0x28]
  427f8c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f8f:	mov    di,WORD PTR [ebx+edi*2]
  427f93:	mov    WORD PTR [ebp-0x4],di
  427f97:	mov    edi,DWORD PTR [ebp-0xc]
  427f9a:	mov    bx,WORD PTR [ebp+0x8]
  427f9e:	xor    edi,esi
  427fa0:	add    edi,eax
  427fa2:	cmp    bx,di
  427fa5:	jne    0x427ebb
  427fab:	mov    eax,DWORD PTR [ebp-0x18]
  427fae:	mov    esi,DWORD PTR [ebp-0xc]
  427fb1:	xor    eax,ecx
  427fb3:	add    eax,edx
  427fb5:	imul   eax,esi
  427fb8:	mov    DWORD PTR [ebp-0xc],eax
  427fbb:	jmp    0x427fcf
  427fbd:	mov    eax,DWORD PTR [ebp-0xc]
  427fc0:	mov    esi,DWORD PTR [ebp-0x18]
  427fc3:	xor    eax,ecx
  427fc5:	lea    eax,[eax+esi*1+0x3272f5]
  427fcc:	mov    DWORD PTR [ebp-0x18],eax
  427fcf:	mov    eax,DWORD PTR [ebp-0x24]
  427fd2:	sub    eax,edx
  427fd4:	xor    eax,ecx
  427fd6:	mov    DWORD PTR [ebp-0x30],eax
  427fd9:	mov    eax,DWORD PTR [ebp-0x28]
  427fdc:	sub    eax,edx
  427fde:	xor    eax,ecx
  427fe0:	mov    DWORD PTR [ebp-0x34],eax
  427fe3:	mov    eax,DWORD PTR [ebp-0x34]
  427fe6:	mov    esi,DWORD PTR [ebp-0x1c]
  427fe9:	xor    esi,ecx
  427feb:	add    esi,edx
  427fed:	xor    eax,ecx
  427fef:	add    eax,0x3272f5
  427ff4:	imul   esi,eax
  427ff7:	mov    eax,DWORD PTR [ebp-0x14]
  427ffa:	movzx  eax,WORD PTR [esi+eax*1]
  427ffe:	mov    esi,DWORD PTR [ebp-0x30]
  428001:	mov    edi,DWORD PTR [ebp-0x1c]
  428004:	xor    esi,ecx
  428006:	add    esi,edx
  428008:	xor    edi,ecx
  42800a:	add    edi,edx
  42800c:	imul   edi,esi
  42800f:	mov    esi,DWORD PTR [ebp-0x10]
  428012:	movzx  esi,WORD PTR [edi+esi*1]
  428016:	sub    eax,edx
  428018:	sub    esi,edx
  42801a:	xor    eax,ecx
  42801c:	xor    esi,ecx
  42801e:	cmp    esi,eax
  428020:	jne    0x42804b
  428022:	mov    eax,DWORD PTR [ebp-0x30]
  428025:	mov    esi,DWORD PTR [ebp-0x1c]
  428028:	xor    eax,ecx
  42802a:	add    eax,0x3272f5
  42802f:	xor    esi,ecx
  428031:	add    esi,edx
  428033:	imul   esi,eax
  428036:	mov    eax,DWORD PTR [ebp-0x10]
  428039:	movzx  eax,WORD PTR [esi+eax*1]
  42803d:	mov    esi,DWORD PTR [ebp-0xc]
  428040:	sub    eax,edx
  428042:	xor    eax,ecx
  428044:	cmp    eax,esi
  428046:	mov    eax,DWORD PTR [ebp-0xc]
  428049:	je     0x42804e
  42804b:	mov    eax,DWORD PTR [ebp-0x18]
  42804e:	pop    edi
  42804f:	xor    eax,ecx
  428051:	pop    esi
  428052:	add    eax,edx
  428054:	pop    ebx
  428055:	leave  
  428056:	ret    0x8
  428059:	push   ebp
  42805a:	mov    ebp,esp
  42805c:	push   ecx
  42805d:	mov    cx,WORD PTR [eax]
  428060:	push   esi
  428061:	mov    esi,0x3b5c
  428066:	sub    cx,si
  428069:	mov    esi,0x8a9a
  42806e:	xor    cx,si
  428071:	mov    esi,0x4e3e
  428076:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42807d:	mov    edx,0xf89c85a5
  428082:	cmp    cx,si
  428085:	je     0x4280e4
  428087:	push   ebx
  428088:	push   edi
  428089:	movzx  ecx,cx
  42808c:	mov    edi,0xffcd8d0b
  428091:	mov    esi,0x75108ae
  428096:	mov    ebx,0x4f9a
  42809b:	cmp    cx,bx
  42809e:	jne    0x4280a3
  4280a0:	mov    DWORD PTR [ebp-0x4],edx
  4280a3:	lea    edx,[edi+0x1]
  4280a6:	xor    edx,esi
  4280a8:	mov    edi,edx
  4280aa:	xor    edi,esi
  4280ac:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  4280b4:	mov    ebx,0x3b5c
  4280b9:	sub    cx,bx
  4280bc:	mov    ebx,0x8a9a
  4280c1:	xor    cx,bx
  4280c4:	mov    ebx,0x4e3e
  4280c9:	cmp    cx,bx
  4280cc:	jne    0x428096
  4280ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4280d1:	pop    edi
  4280d2:	pop    ebx
  4280d3:	cmp    ecx,0xf89c85a4
  4280d9:	je     0x4280e4
  4280db:	xor    ecx,esi
  4280dd:	lea    eax,[eax+ecx*2+0x64e5ec]
  4280e4:	pop    esi
  4280e5:	leave  
  4280e6:	ret    
  4280e7:	push   ebp
  4280e8:	mov    ebp,esp
  4280ea:	push   ecx
  4280eb:	push   esi
  4280ec:	push   edi
  4280ed:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280f4:	mov    esi,0xf89c85a5
  4280f9:	call   0x428059
  4280fe:	mov    edi,eax
  428100:	mov    al,BYTE PTR [edi]
  428102:	sub    al,0x3
  428104:	xor    al,0x7e
  428106:	cmp    al,0x83
  428108:	je     0x42816b
  42810a:	mov    eax,edi
  42810c:	mov    edx,0xffcd8d0b
  428111:	mov    ecx,0x75108ae
  428116:	push   ebx
  428117:	mov    ax,WORD PTR [eax]
  42811a:	mov    ebx,0x3b5c
  42811f:	sub    ax,bx
  428122:	mov    ebx,0x8a9a
  428127:	xor    ax,bx
  42812a:	mov    ebx,0x4e48
  42812f:	cmp    ax,bx
  428132:	jne    0x428137
  428134:	mov    DWORD PTR [ebp-0x4],esi
  428137:	lea    esi,[edx+0x1]
  42813a:	xor    esi,ecx
  42813c:	mov    edx,esi
  42813e:	xor    edx,ecx
  428140:	lea    eax,[edi+edx*2+0x64e5ea]
  428147:	mov    bl,BYTE PTR [eax]
  428149:	sub    bl,0x3
  42814c:	xor    bl,0x7e
  42814f:	cmp    bl,0x83
  428152:	jne    0x428117
  428154:	mov    eax,DWORD PTR [ebp-0x4]
  428157:	pop    ebx
  428158:	cmp    eax,0xf89c85a4
  42815d:	je     0x42816b
  42815f:	xor    eax,ecx
  428161:	xor    ecx,ecx
  428163:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42816b:	mov    eax,edi
  42816d:	pop    edi
  42816e:	pop    esi
  42816f:	leave  
  428170:	ret    
  428171:	push   ebp
  428172:	mov    ebp,esp
  428174:	push   ecx
  428175:	push   esi
  428176:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42817d:	mov    esi,0xf89c85a5
  428182:	call   0x428059
  428187:	mov    cx,WORD PTR [eax]
  42818a:	mov    edx,0x3b5c
  42818f:	sub    cx,dx
  428192:	mov    edx,0x8a9a
  428197:	xor    cx,dx
  42819a:	mov    edx,0x4e3e
  42819f:	cmp    cx,dx
  4281a2:	je     0x4281fb
  4281a4:	push   ebx
  4281a5:	push   edi
  4281a6:	movzx  ecx,cx
  4281a9:	mov    edx,0xffcd8d0b
  4281ae:	mov    edi,0x75108ae
  4281b3:	mov    ebx,0x4e48
  4281b8:	cmp    cx,bx
  4281bb:	jne    0x4281c0
  4281bd:	mov    DWORD PTR [ebp-0x4],esi
  4281c0:	lea    esi,[edx+0x1]
  4281c3:	xor    esi,edi
  4281c5:	mov    edx,esi
  4281c7:	xor    edx,edi
  4281c9:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  4281d1:	mov    ebx,0x3b5c
  4281d6:	sub    cx,bx
  4281d9:	mov    ebx,0x8a9a
  4281de:	xor    cx,bx
  4281e1:	mov    ebx,0x4e3e
  4281e6:	cmp    cx,bx
  4281e9:	jne    0x4281b3
  4281eb:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  4281f2:	pop    edi
  4281f3:	pop    ebx
  4281f4:	je     0x4281fb
  4281f6:	xor    eax,eax
  4281f8:	inc    eax
  4281f9:	jmp    0x4281fd
  4281fb:	xor    eax,eax
  4281fd:	pop    esi
  4281fe:	leave  
  4281ff:	ret    
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   ecx
  428204:	mov    eax,DWORD PTR [ebp+0x8]
  428207:	movzx  ecx,WORD PTR [eax]
  42820a:	push   esi
  42820b:	lea    eax,[ecx-0x3b5c]
  428211:	mov    esi,0x8a9a
  428216:	push   edi
  428217:	xor    eax,esi
  428219:	mov    edi,0x4e3e
  42821e:	mov    DWORD PTR [ebp-0x4],edx
  428221:	cmp    ax,di
  428224:	je     0x428251
  428226:	mov    eax,DWORD PTR [ebp+0x8]
  428229:	sub    eax,edx
  42822b:	mov    DWORD PTR [ebp+0x8],eax
  42822e:	jmp    0x428233
  428230:	mov    eax,DWORD PTR [ebp+0x8]
  428233:	mov    WORD PTR [edx],cx
  428236:	add    edx,0x2
  428239:	movzx  edi,WORD PTR [eax+edx*1]
  42823d:	mov    ecx,edi
  42823f:	add    edi,0xffffc4a4
  428245:	xor    edi,esi
  428247:	mov    eax,0x4e3e
  42824c:	cmp    di,ax
  42824f:	jne    0x428230
  428251:	xor    eax,eax
  428253:	pop    edi
  428254:	mov    WORD PTR [edx],ax
  428257:	mov    eax,DWORD PTR [ebp-0x4]
  42825a:	pop    esi
  42825b:	leave  
  42825c:	ret    0x4
  42825f:	push   ebp
  428260:	mov    ebp,esp
  428262:	sub    esp,0x18
  428265:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42826c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428273:	mov    ecx,DWORD PTR [ebp-0x8]
  428276:	push   esi
  428277:	mov    eax,0x75108ae
  42827c:	xor    ecx,eax
  42827e:	mov    esi,0x3272f5
  428283:	add    ecx,esi
  428285:	mov    DWORD PTR [ebp-0x4],ecx
  428288:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42828f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428296:	push   edi
  428297:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42829e:	jmp    0x42833f
  4282a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282a6:	mov    edx,DWORD PTR [ebp+0x10]
  4282a9:	sub    edx,ecx
  4282ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ae:	xor    ecx,eax
  4282b0:	add    ecx,esi
  4282b2:	cmp    edx,ecx
  4282b4:	jbe    0x4282d1
  4282b6:	mov    edx,DWORD PTR [ebp-0x4]
  4282b9:	add    edx,DWORD PTR [ebp+0x8]
  4282bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4282bf:	add    ecx,DWORD PTR [ebp+0xc]
  4282c2:	mov    edi,DWORD PTR [ecx]
  4282c4:	mov    DWORD PTR [edx],edi
  4282c6:	mov    ecx,DWORD PTR [ecx+0x4]
  4282c9:	mov    DWORD PTR [edx+0x4],ecx
  4282cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4282cf:	jmp    0x42831e
  4282d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4282d4:	mov    edx,DWORD PTR [ebp+0x10]
  4282d7:	sub    edx,ecx
  4282d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4282dc:	xor    ecx,eax
  4282de:	add    ecx,esi
  4282e0:	cmp    edx,ecx
  4282e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4282e5:	jbe    0x4282f9
  4282e7:	add    ecx,DWORD PTR [ebp+0x8]
  4282ea:	mov    edx,DWORD PTR [ebp-0x4]
  4282ed:	add    edx,DWORD PTR [ebp+0xc]
  4282f0:	mov    edx,DWORD PTR [edx]
  4282f2:	mov    DWORD PTR [ecx],edx
  4282f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4282f7:	jmp    0x42831e
  4282f9:	mov    edx,DWORD PTR [ebp+0x10]
  4282fc:	sub    edx,ecx
  4282fe:	mov    ecx,DWORD PTR [ebp-0x14]
  428301:	xor    ecx,eax
  428303:	add    ecx,esi
  428305:	cmp    edx,ecx
  428307:	mov    ecx,DWORD PTR [ebp-0x4]
  42830a:	jbe    0x42832f
  42830c:	add    ecx,DWORD PTR [ebp+0x8]
  42830f:	mov    edx,DWORD PTR [ebp-0x4]
  428312:	add    edx,DWORD PTR [ebp+0xc]
  428315:	mov    dx,WORD PTR [edx]
  428318:	mov    WORD PTR [ecx],dx
  42831b:	mov    ecx,DWORD PTR [ebp-0x14]
  42831e:	mov    edx,DWORD PTR [ebp-0x4]
  428321:	xor    ecx,eax
  428323:	lea    ecx,[ecx+edx*1+0x3272f5]
  42832a:	mov    DWORD PTR [ebp-0x4],ecx
  42832d:	jmp    0x42833f
  42832f:	add    ecx,DWORD PTR [ebp+0x8]
  428332:	mov    edx,DWORD PTR [ebp-0x4]
  428335:	add    edx,DWORD PTR [ebp+0xc]
  428338:	mov    dl,BYTE PTR [edx]
  42833a:	mov    BYTE PTR [ecx],dl
  42833c:	inc    DWORD PTR [ebp-0x4]
  42833f:	mov    ecx,DWORD PTR [ebp-0x18]
  428342:	mov    edx,DWORD PTR [ebp+0x10]
  428345:	xor    ecx,eax
  428347:	add    ecx,esi
  428349:	imul   ecx,edx
  42834c:	mov    edx,DWORD PTR [ebp-0x8]
  42834f:	mov    edi,DWORD PTR [ebp-0x4]
  428352:	xor    edx,eax
  428354:	lea    edx,[edx+edi*1+0x3272f5]
  42835b:	cmp    edx,ecx
  42835d:	jb     0x4282a3
  428363:	pop    edi
  428364:	pop    esi
  428365:	leave  
  428366:	ret    0xc
  428369:	push   ebp
  42836a:	mov    ebp,esp
  42836c:	sub    esp,0xc
  42836f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428376:	push   esi
  428377:	mov    esi,eax
  428379:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428380:	mov    edx,DWORD PTR [ebp-0x4]
  428383:	mov    eax,0x75108ae
  428388:	xor    edx,eax
  42838a:	mov    ecx,0x3272f5
  42838f:	add    edx,ecx
  428391:	cmp    esi,edx
  428393:	je     0x4283d5
  428395:	push   ebx
  428396:	push   edi
  428397:	mov    edx,DWORD PTR [ebp-0x8]
  42839a:	mov    ebx,DWORD PTR [ebp+0x8]
  42839d:	xor    edx,eax
  42839f:	mov    edi,0xffcd8d0b
  4283a4:	sub    edi,edx
  4283a6:	add    esi,edi
  4283a8:	lea    edx,[esi-0x3272f5]
  4283ae:	xor    edx,eax
  4283b0:	mov    DWORD PTR [ebp-0xc],edx
  4283b3:	mov    edx,DWORD PTR [ebp-0x4]
  4283b6:	mov    edi,DWORD PTR [ebp-0xc]
  4283b9:	xor    dl,0xae
  4283bc:	sub    dl,0xb
  4283bf:	xor    edi,eax
  4283c1:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  4283c8:	mov    edx,DWORD PTR [ebp-0x4]
  4283cb:	xor    edx,eax
  4283cd:	add    edx,ecx
  4283cf:	cmp    esi,edx
  4283d1:	jne    0x428397
  4283d3:	pop    edi
  4283d4:	pop    ebx
  4283d5:	pop    esi
  4283d6:	leave  
  4283d7:	ret    0x4
  4283da:	push   ebp
  4283db:	mov    ebp,esp
  4283dd:	sub    esp,0x21c
  4283e3:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283ea:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  4283f1:	mov    eax,DWORD PTR [ebp+0x10]
  4283f4:	mov    eax,DWORD PTR [ebp-0x4]
  4283f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4283fa:	push   esi
  4283fb:	push   edi
  4283fc:	mov    edi,0x75108ae
  428401:	xor    eax,edi
  428403:	mov    esi,0x3272f5
  428408:	add    eax,esi
  42840a:	cmp    eax,ecx
  42840c:	mov    eax,DWORD PTR [ebp-0x4]
  42840f:	jne    0x42841a
  428411:	xor    eax,edi
  428413:	add    eax,esi
  428415:	jmp    0x4284c6
  42841a:	mov    ecx,DWORD PTR [ebp+0xc]
  42841d:	xor    eax,edi
  42841f:	add    eax,esi
  428421:	cmp    eax,ecx
  428423:	jne    0x42842a
  428425:	mov    eax,DWORD PTR [ebp-0x4]
  428428:	jmp    0x428411
  42842a:	lea    eax,[ebp-0x21c]
  428430:	mov    DWORD PTR [ebp-0x8],eax
  428433:	mov    eax,DWORD PTR [ebp+0xc]
  428436:	mov    DWORD PTR [ebp-0x10],eax
  428439:	mov    eax,DWORD PTR [ebp-0x4]
  42843c:	xor    eax,edi
  42843e:	add    eax,esi
  428440:	mov    DWORD PTR [ebp+0x10],eax
  428443:	mov    eax,DWORD PTR [ebp+0xc]
  428446:	push   ebx
  428447:	call   0x428171
  42844c:	mov    ebx,eax
  42844e:	mov    eax,DWORD PTR [ebp+0x8]
  428451:	mov    eax,DWORD PTR [eax+0x14]
  428454:	jmp    0x4284ae
  428456:	mov    eax,DWORD PTR [ebp+0xc]
  428459:	sub    eax,0x8
  42845c:	mov    DWORD PTR [ebp-0xc],eax
  42845f:	mov    eax,DWORD PTR [ebp-0xc]
  428462:	mov    eax,DWORD PTR [eax+0x28]
  428465:	call   0x428059
  42846a:	mov    DWORD PTR [ebp+0x10],eax
  42846d:	push   DWORD PTR [ebp+0x10]
  428470:	mov    edx,DWORD PTR [ebp-0x8]
  428473:	call   0x428200
  428478:	mov    eax,DWORD PTR [ebp-0x4]
  42847b:	xor    eax,edi
  42847d:	add    eax,esi
  42847f:	cmp    eax,ebx
  428481:	jne    0x42848b
  428483:	mov    eax,DWORD PTR [ebp-0x8]
  428486:	call   0x4280e7
  42848b:	mov    eax,DWORD PTR [ebp-0x14]
  42848e:	xor    eax,edi
  428490:	add    eax,esi
  428492:	push   eax
  428493:	push   DWORD PTR [ebp-0x10]
  428496:	mov    eax,DWORD PTR [ebp-0x8]
  428499:	call   0x427e13
  42849e:	mov    ecx,DWORD PTR [ebp-0x4]
  4284a1:	xor    ecx,edi
  4284a3:	add    ecx,esi
  4284a5:	cmp    eax,ecx
  4284a7:	je     0x4284cc
  4284a9:	mov    eax,DWORD PTR [ebp+0xc]
  4284ac:	mov    eax,DWORD PTR [eax]
  4284ae:	mov    DWORD PTR [ebp+0xc],eax
  4284b1:	mov    eax,DWORD PTR [ebp+0x8]
  4284b4:	mov    ecx,DWORD PTR [ebp+0xc]
  4284b7:	add    eax,0x14
  4284ba:	cmp    ecx,eax
  4284bc:	jne    0x428456
  4284be:	mov    eax,DWORD PTR [ebp-0x4]
  4284c1:	xor    eax,edi
  4284c3:	add    eax,esi
  4284c5:	pop    ebx
  4284c6:	pop    edi
  4284c7:	pop    esi
  4284c8:	leave  
  4284c9:	ret    0xc
  4284cc:	mov    eax,DWORD PTR [ebp-0xc]
  4284cf:	mov    eax,DWORD PTR [eax+0x18]
  4284d2:	jmp    0x4284c5
  4284d4:	push   ebp
  4284d5:	mov    ebp,esp
  4284d7:	mov    eax,DWORD PTR [ebp+0xc]
  4284da:	sub    esp,0x10
  4284dd:	cmp    DWORD PTR [ebp+0x8],0x0
  4284e1:	push   ebx
  4284e2:	push   esi
  4284e3:	push   edi
  4284e4:	je     0x428599
  4284ea:	test   eax,eax
  4284ec:	je     0x428599
  4284f2:	movzx  eax,WORD PTR [eax+0x20]
  4284f6:	mov    ecx,eax
  4284f8:	mov    DWORD PTR [ebp-0x10],eax
  4284fb:	xor    edx,edx
  4284fd:	and    DWORD PTR [ebp-0x8],edx
  428500:	mov    eax,0x8a9a
  428505:	xor    ecx,eax
  428507:	add    ecx,0x3b5c
  42850d:	mov    DWORD PTR [ebp-0xc],ecx
  428510:	and    DWORD PTR [ebp-0x4],0x0
  428514:	xor    ecx,ecx
  428516:	push   0xffffff81
  428518:	pop    edi
  428519:	cmp    cx,WORD PTR [ebp-0xc]
  42851d:	jae    0x428583
  42851f:	lea    esi,[edx-0x3b5c]
  428525:	xor    esi,eax
  428527:	movzx  ecx,WORD PTR [ebp-0x4]
  42852b:	mov    ebx,DWORD PTR [ebp+0xc]
  42852e:	lea    ecx,[ebx+ecx*4]
  428531:	cmp    WORD PTR [ecx+0x2],si
  428535:	jne    0x42856e
  428537:	movzx  ecx,WORD PTR [ecx]
  42853a:	mov    edi,0x4e3e
  42853f:	cmp    cx,di
  428542:	jne    0x428550
  428544:	mov    ebx,DWORD PTR [ebp+0x8]
  428547:	movzx  edi,dx
  42854a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42854e:	je     0x42857d
  428550:	mov    ebx,DWORD PTR [ebp+0x8]
  428553:	movzx  edi,dx
  428556:	movsx  di,BYTE PTR [edi+ebx*1]
  42855b:	mov    ebx,0x3b5c
  428560:	sub    di,bx
  428563:	xor    di,ax
  428566:	cmp    cx,di
  428569:	je     0x42857d
  42856b:	push   0xffffff83
  42856d:	pop    edi
  42856e:	inc    DWORD PTR [ebp-0x4]
  428571:	mov    cx,WORD PTR [ebp-0xc]
  428575:	cmp    WORD PTR [ebp-0x4],cx
  428579:	jb     0x428527
  42857b:	jmp    0x428583
  42857d:	inc    DWORD PTR [ebp-0x8]
  428580:	push   0xffffff80
  428582:	pop    edi
  428583:	mov    esi,DWORD PTR [ebp+0x8]
  428586:	movzx  ecx,dx
  428589:	cmp    BYTE PTR [ecx+esi*1],0x0
  42858d:	je     0x4285a2
  42858f:	inc    edx
  428590:	cmp    edi,0xffffff83
  428593:	jne    0x428510
  428599:	xor    eax,eax
  42859b:	pop    edi
  42859c:	pop    esi
  42859d:	pop    ebx
  42859e:	leave  
  42859f:	ret    0x8
  4285a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285a5:	add    ecx,0xffffc4a4
  4285ab:	xor    cx,ax
  4285ae:	xor    eax,eax
  4285b0:	cmp    cx,WORD PTR [ebp-0x10]
  4285b4:	sete   al
  4285b7:	jmp    0x42859b
  4285b9:	push   ebp
  4285ba:	mov    ebp,esp
  4285bc:	sub    esp,0x50
  4285bf:	push   edi
  4285c0:	mov    edi,eax
  4285c2:	mov    eax,DWORD PTR [edi+0x1a8]
  4285c8:	cmp    DWORD PTR [eax],0x0
  4285cb:	jne    0x4285d4
  4285cd:	xor    eax,eax
  4285cf:	jmp    0x428705
  4285d4:	push   DWORD PTR [ebp+0x8]
  4285d7:	push   0x2c
  4285d9:	pop    eax
  4285da:	call   0x428369
  4285df:	mov    edx,DWORD PTR [edi+0x1ac]
  4285e5:	lea    eax,[edi+0x22]
  4285e8:	mov    DWORD PTR [ebp-0x4c],eax
  4285eb:	lea    eax,[edi+0x44]
  4285ee:	mov    DWORD PTR [ebp-0x48],eax
  4285f1:	lea    eax,[edi+0x66]
  4285f4:	mov    DWORD PTR [ebp-0x44],eax
  4285f7:	lea    eax,[edi+0x88]
  4285fd:	mov    DWORD PTR [ebp-0x40],eax
  428600:	lea    eax,[edi+0xaa]
  428606:	mov    DWORD PTR [ebp-0x3c],eax
  428609:	lea    eax,[edi+0xcc]
  42860f:	mov    DWORD PTR [ebp-0x38],eax
  428612:	lea    eax,[edi+0xee]
  428618:	mov    DWORD PTR [ebp-0x34],eax
  42861b:	lea    eax,[edi+0x110]
  428621:	mov    DWORD PTR [ebp-0x30],eax
  428624:	lea    eax,[edi+0x132]
  42862a:	mov    DWORD PTR [ebp-0x2c],eax
  42862d:	lea    eax,[edi+0x154]
  428633:	push   edi
  428634:	mov    DWORD PTR [ebp-0x50],edi
  428637:	mov    DWORD PTR [ebp-0x28],eax
  42863a:	call   0x428739
  42863f:	push   eax
  428640:	mov    eax,DWORD PTR [edi+0x1a8]
  428646:	push   DWORD PTR [eax]
  428648:	call   0x4283da
  42864d:	mov    DWORD PTR [ebp-0x10],eax
  428650:	test   eax,eax
  428652:	je     0x428705
  428658:	mov    ecx,DWORD PTR [eax+0x3c]
  42865b:	push   ebx
  42865c:	push   esi
  42865d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428661:	add    esi,eax
  428663:	mov    edi,DWORD PTR [esi+0x24]
  428666:	mov    ecx,DWORD PTR [esi+0x1c]
  428669:	mov    edx,DWORD PTR [esi+0x20]
  42866c:	mov    ebx,DWORD PTR [esi+0x18]
  42866f:	add    edi,eax
  428671:	mov    DWORD PTR [ebp-0x20],edi
  428674:	mov    edi,DWORD PTR [esi+0x14]
  428677:	add    ecx,eax
  428679:	add    edx,eax
  42867b:	mov    DWORD PTR [ebp-0xc],ecx
  42867e:	mov    DWORD PTR [ebp-0x1c],edx
  428681:	mov    DWORD PTR [ebp-0x8],edi
  428684:	cmp    edi,ebx
  428686:	ja     0x42868b
  428688:	mov    DWORD PTR [ebp-0x8],ebx
  42868b:	xor    ebx,ebx
  42868d:	mov    DWORD PTR [ebp-0x18],ebx
  428690:	cmp    DWORD PTR [ebp-0x8],ebx
  428693:	jbe    0x428703
  428695:	jmp    0x42869a
  428697:	mov    edx,DWORD PTR [ebp-0x1c]
  42869a:	mov    edi,DWORD PTR [ebp-0x20]
  42869d:	movzx  edi,WORD PTR [edi+ebx*2]
  4286a1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286a4:	jae    0x428703
  4286a6:	cmp    edi,DWORD PTR [esi+0x14]
  4286a9:	jae    0x428703
  4286ab:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286ae:	mov    edx,DWORD PTR [ebp+0x8]
  4286b1:	mov    edi,DWORD PTR [ecx+edi*4]
  4286b4:	mov    DWORD PTR [ebp-0x4],edx
  4286b7:	lea    edx,[ebp-0x50]
  4286ba:	add    ebx,eax
  4286bc:	add    edi,eax
  4286be:	sub    edx,DWORD PTR [ebp+0x8]
  4286c1:	mov    DWORD PTR [ebp-0x14],0xb
  4286c8:	mov    DWORD PTR [ebp-0x24],edx
  4286cb:	mov    edx,DWORD PTR [ebp-0x4]
  4286ce:	cmp    DWORD PTR [edx],0x0
  4286d1:	jne    0x4286ee
  4286d3:	mov    eax,DWORD PTR [ebp-0x24]
  4286d6:	push   DWORD PTR [eax+edx*1]
  4286d9:	push   ebx
  4286da:	call   0x4284d4
  4286df:	mov    ecx,DWORD PTR [ebp-0xc]
  4286e2:	test   eax,eax
  4286e4:	je     0x4286eb
  4286e6:	mov    eax,DWORD PTR [ebp-0x4]
  4286e9:	mov    DWORD PTR [eax],edi
  4286eb:	mov    eax,DWORD PTR [ebp-0x10]
  4286ee:	add    DWORD PTR [ebp-0x4],0x4
  4286f2:	dec    DWORD PTR [ebp-0x14]
  4286f5:	jne    0x4286cb
  4286f7:	mov    ebx,DWORD PTR [ebp-0x18]
  4286fa:	inc    ebx
  4286fb:	mov    DWORD PTR [ebp-0x18],ebx
  4286fe:	cmp    ebx,DWORD PTR [ebp-0x8]
  428701:	jb     0x428697
  428703:	pop    esi
  428704:	pop    ebx
  428705:	pop    edi
  428706:	leave  
  428707:	ret    0x4
  42870a:	push   ebp
  42870b:	mov    ebp,esp
  42870d:	mov    eax,DWORD PTR [ebp+0x8]
  428710:	push   esi
  428711:	push   DWORD PTR [eax+0x1e0]
  428717:	lea    esi,[eax+0x198]
  42871d:	mov    eax,DWORD PTR [ebp+0x8]
  428720:	call   0x4285b9
  428725:	mov    ecx,DWORD PTR [esi]
  428727:	mov    DWORD PTR [ecx],eax
  428729:	mov    eax,DWORD PTR [esi]
  42872b:	xor    ecx,ecx
  42872d:	cmp    DWORD PTR [eax],ecx
  42872f:	pop    esi
  428730:	setne  cl
  428733:	mov    eax,ecx
  428735:	pop    ebp
  428736:	ret    0x4
  428739:	mov    ecx,DWORD PTR [edi+0x188]
  42873f:	push   ebx
  428740:	jmp    0x428755
  428742:	xor    eax,0x8a9a
  428747:	add    eax,0x3b5c
  42874c:	mov    WORD PTR [ecx],ax
  42874f:	add    ecx,0x2
  428752:	add    edx,0x2
  428755:	movzx  eax,WORD PTR [edx]
  428758:	mov    ebx,0x4e3e
  42875d:	cmp    ax,bx
  428760:	jne    0x428742
  428762:	xor    eax,eax
  428764:	mov    WORD PTR [ecx],ax
  428767:	mov    eax,DWORD PTR [edi+0x188]
  42876d:	pop    ebx
  42876e:	ret    
  42876f:	push   edi
  428770:	mov    edi,eax
  428772:	mov    eax,DWORD PTR [esi+0x188]
  428778:	shl    edi,0x6
  42877b:	add    eax,edi
  42877d:	jmp    0x428789
  42877f:	xor    cl,0x7e
  428782:	add    cl,0x3
  428785:	mov    BYTE PTR [eax],cl
  428787:	inc    eax
  428788:	inc    edx
  428789:	mov    cl,BYTE PTR [edx]
  42878b:	cmp    cl,0x83
  42878e:	jne    0x42877f
  428790:	mov    BYTE PTR [eax],0x0
  428793:	mov    eax,DWORD PTR [esi+0x188]
  428799:	add    eax,edi
  42879b:	pop    edi
  42879c:	ret    
  42879d:	push   ebp
  42879e:	mov    ebp,esp
  4287a0:	sub    esp,0x14
  4287a3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287aa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  4287b1:	mov    eax,DWORD PTR [ebx]
  4287b3:	mov    DWORD PTR [ebp-0x8],eax
  4287b6:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4287bd:	push   esi
  4287be:	push   edi
  4287bf:	mov    DWORD PTR [ebp-0x14],0xead71885
  4287c6:	mov    edi,DWORD PTR [ebp-0x4]
  4287c9:	mov    ecx,DWORD PTR [ebp-0x10]
  4287cc:	mov    eax,0x75108ae
  4287d1:	xor    edi,eax
  4287d3:	mov    edx,0x3272f5
  4287d8:	xor    ecx,eax
  4287da:	add    edi,edx
  4287dc:	add    ecx,edx
  4287de:	imul   edi,ecx
  4287e1:	jmp    0x428829
  4287e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4287e6:	mov    esi,DWORD PTR [ebp-0x4]
  4287e9:	xor    ecx,eax
  4287eb:	xor    esi,eax
  4287ed:	add    ecx,edx
  4287ef:	add    esi,edx
  4287f1:	test   esi,ecx
  4287f3:	mov    esi,DWORD PTR [ebp-0x8]
  4287f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4287f9:	je     0x428810
  4287fb:	xor    ecx,eax
  4287fd:	xor    esi,eax
  4287ff:	add    ecx,edx
  428801:	add    esi,edx
  428803:	shr    esi,cl
  428805:	mov    ecx,DWORD PTR [ebp-0x14]
  428808:	xor    ecx,eax
  42880a:	add    ecx,edx
  42880c:	xor    esi,ecx
  42880e:	jmp    0x42881a
  428810:	xor    esi,eax
  428812:	xor    ecx,eax
  428814:	add    esi,edx
  428816:	add    ecx,edx
  428818:	shr    esi,cl
  42881a:	mov    DWORD PTR [ebp-0x8],esi
  42881d:	mov    ecx,DWORD PTR [ebp-0x4]
  428820:	xor    ecx,eax
  428822:	lea    edi,[edi+ecx*1+0x3272f5]
  428829:	mov    ecx,DWORD PTR [ebp-0xc]
  42882c:	mov    esi,DWORD PTR [ebp-0x4]
  42882f:	xor    esi,eax
  428831:	xor    ecx,eax
  428833:	sub    ecx,esi
  428835:	cmp    edi,ecx
  428837:	jbe    0x4287e3
  428839:	mov    eax,DWORD PTR [ebp-0x8]
  42883c:	pop    edi
  42883d:	mov    DWORD PTR [ebx],eax
  42883f:	mov    eax,DWORD PTR [ebp-0x8]
  428842:	pop    esi
  428843:	leave  
  428844:	ret    
  428845:	push   ebp
  428846:	mov    ebp,esp
  428848:	sub    esp,0x38
  42884b:	push   ebx
  42884c:	mov    ebx,0xf89c85a5
  428851:	mov    DWORD PTR [ebp-0x4],ebx
  428854:	lea    ecx,[ebx-0x3]
  428857:	mov    DWORD PTR [ebp-0x24],ecx
  42885a:	mov    eax,DWORD PTR [ebp-0x4]
  42885d:	mov    edx,DWORD PTR [ebp+0x8]
  428860:	push   esi
  428861:	mov    esi,0x75108ae
  428866:	xor    eax,esi
  428868:	push   edi
  428869:	mov    edi,0x3272f5
  42886e:	add    eax,edi
  428870:	cmp    edx,eax
  428872:	mov    eax,DWORD PTR [ebp-0x4]
  428875:	je     0x4289da
  42887b:	mov    edx,DWORD PTR [ebp+0xc]
  42887e:	xor    eax,esi
  428880:	add    eax,edi
  428882:	cmp    edx,eax
  428884:	je     0x4289d7
  42888a:	mov    eax,DWORD PTR [ebp+0x10]
  42888d:	mov    edx,DWORD PTR [ebp+0xc]
  428890:	mov    DWORD PTR [ebp-0x14],eax
  428893:	mov    eax,DWORD PTR [ebp+0x8]
  428896:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42889d:	mov    DWORD PTR [ebp-0xc],eax
  4288a0:	lea    eax,[ebx-0x2]
  4288a3:	mov    DWORD PTR [ebp-0x1c],eax
  4288a6:	mov    DWORD PTR [ebp-0x10],ebx
  4288a9:	mov    DWORD PTR [ebp+0xc],ecx
  4288ac:	mov    DWORD PTR [ebp+0x10],eax
  4288af:	mov    eax,DWORD PTR [ebp+0xc]
  4288b2:	xor    eax,esi
  4288b4:	mov    DWORD PTR [ebp-0x20],edx
  4288b7:	sub    edx,eax
  4288b9:	sub    edx,edi
  4288bb:	mov    DWORD PTR [ebp+0x8],edx
  4288be:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4288c5:	jmp    0x4289c7
  4288ca:	mov    eax,DWORD PTR [ebp+0xc]
  4288cd:	mov    ecx,DWORD PTR [ebp+0xc]
  4288d0:	xor    eax,esi
  4288d2:	xor    ecx,esi
  4288d4:	lea    ecx,[eax+ecx*1+0x64e5ea]
  4288db:	mov    eax,DWORD PTR [ebp+0x8]
  4288de:	xor    edx,edx
  4288e0:	div    ecx
  4288e2:	mov    eax,DWORD PTR [ebp+0x10]
  4288e5:	mov    ecx,DWORD PTR [ebp+0xc]
  4288e8:	xor    eax,esi
  4288ea:	xor    ecx,esi
  4288ec:	sub    eax,ecx
  4288ee:	cmp    edx,eax
  4288f0:	jne    0x428986
  4288f6:	mov    eax,DWORD PTR [ebp+0x8]
  4288f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4288fc:	mov    dl,BYTE PTR [eax+ecx*1]
  4288ff:	mov    eax,DWORD PTR [ebp-0x10]
  428902:	mov    ecx,DWORD PTR [ebp-0x8]
  428905:	xor    eax,esi
  428907:	xor    ecx,esi
  428909:	add    eax,edi
  42890b:	add    ecx,edi
  42890d:	cmp    eax,ecx
  42890f:	jae    0x428957
  428911:	lea    ecx,[eax-0x3272f5]
  428917:	mov    DWORD PTR [ebp-0x4],ecx
  42891a:	mov    ebx,DWORD PTR [ebp-0x4]
  42891d:	xor    ebx,esi
  42891f:	add    ebx,0x7f55d8e3
  428925:	lea    ecx,[ebp+eax*4-0x38]
  428929:	mov    DWORD PTR [ecx],ebx
  42892b:	mov    ebx,DWORD PTR [ecx]
  42892d:	cmp    ebx,0x244ecb80
  428933:	jbe    0x42893d
  428935:	add    DWORD PTR [ecx],0x405fcc1
  42893b:	jmp    0x428943
  42893d:	add    DWORD PTR [ecx],0xfdaf433f
  428943:	mov    ecx,DWORD PTR [ebp-0x8]
  428946:	xor    ecx,esi
  428948:	inc    eax
  428949:	inc    DWORD PTR [ebp-0x4]
  42894c:	add    ecx,edi
  42894e:	cmp    eax,ecx
  428950:	jb     0x42891a
  428952:	mov    ebx,0xf89c85a5
  428957:	cmp    DWORD PTR [ebp-0x14],0x0
  42895b:	jne    0x428965
  42895d:	xor    dl,0x7e
  428960:	add    dl,0x3
  428963:	jmp    0x42897b
  428965:	mov    eax,DWORD PTR [ebp-0x18]
  428968:	xor    al,0xae
  42896a:	mov    cl,0xb
  42896c:	sub    cl,al
  42896e:	add    dl,cl
  428970:	mov    ecx,DWORD PTR [ebp-0x1c]
  428973:	xor    cl,0xae
  428976:	sub    cl,0xb
  428979:	ror    dl,cl
  42897b:	xor    eax,eax
  42897d:	mov    eax,DWORD PTR [ebp+0x8]
  428980:	mov    ecx,DWORD PTR [ebp-0xc]
  428983:	mov    BYTE PTR [eax+ecx*1],dl
  428986:	mov    eax,DWORD PTR [ebp+0x8]
  428989:	mov    ecx,DWORD PTR [ebp-0x10]
  42898c:	sub    eax,edi
  42898e:	xor    eax,esi
  428990:	cmp    eax,ecx
  428992:	jne    0x4289b5
  428994:	mov    eax,DWORD PTR [ebp+0x10]
  428997:	mov    ecx,DWORD PTR [ebp+0xc]
  42899a:	xor    eax,esi
  42899c:	xor    ecx,esi
  42899e:	sub    eax,ecx
  4289a0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289a3:	sub    eax,edi
  4289a5:	xor    eax,esi
  4289a7:	mov    DWORD PTR [ebp+0x10],eax
  4289aa:	mov    eax,DWORD PTR [ebp+0xc]
  4289ad:	xor    eax,esi
  4289af:	sub    ecx,eax
  4289b1:	sub    ecx,edi
  4289b3:	jmp    0x4289c4
  4289b5:	mov    eax,DWORD PTR [ebp+0xc]
  4289b8:	xor    eax,esi
  4289ba:	mov    ecx,0xffcd8d0b
  4289bf:	sub    ecx,eax
  4289c1:	add    ecx,DWORD PTR [ebp+0x8]
  4289c4:	mov    DWORD PTR [ebp+0x8],ecx
  4289c7:	mov    eax,DWORD PTR [ebp+0x10]
  4289ca:	cmp    eax,ebx
  4289cc:	jne    0x4288ca
  4289d2:	mov    eax,DWORD PTR [ebp-0x24]
  4289d5:	jmp    0x4289da
  4289d7:	mov    eax,DWORD PTR [ebp-0x4]
  4289da:	xor    eax,esi
  4289dc:	add    eax,edi
  4289de:	pop    edi
  4289df:	pop    esi
  4289e0:	pop    ebx
  4289e1:	leave  
  4289e2:	ret    0xc
  4289e5:	push   ebp
  4289e6:	mov    ebp,esp
  4289e8:	sub    esp,0x420
  4289ee:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4289f5:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4289fc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a03:	push   ebx
  428a04:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a0b:	mov    eax,DWORD PTR [ebp-0x14]
  428a0e:	push   esi
  428a0f:	mov    esi,0x75108ae
  428a14:	push   edi
  428a15:	xor    eax,esi
  428a17:	mov    edi,0x3272f5
  428a1c:	add    eax,edi
  428a1e:	mov    DWORD PTR [ebp-0x8],eax
  428a21:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a28:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a2f:	mov    DWORD PTR [ebp-0x10],0x8
  428a36:	mov    ecx,ecx
  428a38:	mov    eax,DWORD PTR [ebp-0xc]
  428a3b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a3e:	xor    eax,esi
  428a40:	xor    ecx,esi
  428a42:	add    eax,edi
  428a44:	add    ecx,edi
  428a46:	imul   eax,ecx
  428a49:	jmp    0x428a7c
  428a4b:	mov    eax,DWORD PTR [ebp-0x4]
  428a4e:	sub    eax,edi
  428a50:	xor    eax,esi
  428a52:	mov    DWORD PTR [ebp-0x8],eax
  428a55:	lea    ebx,[ebp-0x8]
  428a58:	call   0x42879d
  428a5d:	mov    DWORD PTR [ebp-0x8],eax
  428a60:	mov    eax,DWORD PTR [ebp-0x8]
  428a63:	mov    ecx,DWORD PTR [ebp-0x4]
  428a66:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a6d:	mov    eax,DWORD PTR [ebp-0xc]
  428a70:	mov    ecx,DWORD PTR [ebp-0x4]
  428a73:	xor    eax,esi
  428a75:	lea    eax,[eax+ecx*1+0x3272f5]
  428a7c:	mov    DWORD PTR [ebp-0x4],eax
  428a7f:	mov    eax,DWORD PTR [ebp-0x18]
  428a82:	mov    ecx,DWORD PTR [ebp-0xc]
  428a85:	xor    ecx,esi
  428a87:	xor    eax,esi
  428a89:	sub    eax,ecx
  428a8b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a8e:	cmp    ecx,eax
  428a90:	jbe    0x428a4b
  428a92:	mov    eax,DWORD PTR [ebp-0x1c]
  428a95:	xor    eax,esi
  428a97:	add    eax,edi
  428a99:	mov    DWORD PTR [ebp-0x8],eax
  428a9c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428aa3:	mov    ebx,ebx
  428aa5:	jmp    0x428b08
  428aa7:	mov    ecx,DWORD PTR [ebp-0x20]
  428aaa:	mov    eax,DWORD PTR [ebp-0x8]
  428aad:	xor    ecx,esi
  428aaf:	add    ecx,edi
  428ab1:	shr    eax,cl
  428ab3:	mov    DWORD PTR [ebp-0x4],eax
  428ab6:	mov    eax,DWORD PTR [ebp+0x8]
  428ab9:	mov    cl,BYTE PTR [eax]
  428abb:	mov    BYTE PTR [ebp+0xb],cl
  428abe:	mov    cl,BYTE PTR [ebp+0xb]
  428ac1:	mov    edx,DWORD PTR [ebp-0x8]
  428ac4:	movzx  ecx,cl
  428ac7:	xor    ecx,edx
  428ac9:	mov    DWORD PTR [ebp+0x8],ecx
  428acc:	mov    ecx,DWORD PTR [ebp-0x18]
  428acf:	mov    edx,DWORD PTR [ebp+0x8]
  428ad2:	xor    ecx,esi
  428ad4:	add    ecx,edi
  428ad6:	and    ecx,edx
  428ad8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428adf:	mov    edx,DWORD PTR [ebp-0x4]
  428ae2:	xor    ecx,edx
  428ae4:	mov    DWORD PTR [ebp-0x8],ecx
  428ae7:	mov    ecx,DWORD PTR [ebp-0xc]
  428aea:	xor    ecx,esi
  428aec:	lea    eax,[eax+ecx*1+0x3272f5]
  428af3:	mov    DWORD PTR [ebp+0x8],eax
  428af6:	mov    eax,DWORD PTR [ebp-0xc]
  428af9:	xor    eax,esi
  428afb:	mov    ecx,0xffcd8d0b
  428b00:	sub    ecx,eax
  428b02:	add    ecx,DWORD PTR [ebp-0x10]
  428b05:	mov    DWORD PTR [ebp-0x10],ecx
  428b08:	mov    eax,DWORD PTR [ebp-0x14]
  428b0b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b0e:	xor    eax,esi
  428b10:	add    eax,edi
  428b12:	cmp    ecx,eax
  428b14:	jne    0x428aa7
  428b16:	mov    eax,DWORD PTR [ebp-0x1c]
  428b19:	mov    ecx,DWORD PTR [ebp-0x8]
  428b1c:	xor    eax,esi
  428b1e:	add    eax,edi
  428b20:	pop    edi
  428b21:	pop    esi
  428b22:	xor    eax,ecx
  428b24:	pop    ebx
  428b25:	leave  
  428b26:	ret    0x4
  428b29:	push   ebp
  428b2a:	mov    ebp,esp
  428b2c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b2f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b32:	mov    edx,DWORD PTR [ebp+0x10]
  428b35:	mov    eax,DWORD PTR [eax+0x190]
  428b3b:	mov    eax,DWORD PTR [eax]
  428b3d:	sub    esp,0x64
  428b40:	push   ebx
  428b41:	push   esi
  428b42:	push   edi
  428b43:	mov    edi,0x75108ae
  428b48:	xor    ecx,edi
  428b4a:	mov    ebx,0x3272f5
  428b4f:	add    ecx,ebx
  428b51:	cmp    ecx,edx
  428b53:	jne    0x428b64
  428b55:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b5f:	jmp    0x429060
  428b64:	mov    ecx,DWORD PTR [ebp+0x8]
  428b67:	mov    esi,DWORD PTR [ebp+0x14]
  428b6a:	mov    edx,DWORD PTR [esi]
  428b6c:	xor    ecx,edi
  428b6e:	add    ecx,ebx
  428b70:	cmp    edx,ecx
  428b72:	je     0x42901b
  428b78:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b7b:	mov    DWORD PTR [ebp-0x1c],eax
  428b7e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b81:	mov    ecx,DWORD PTR [ebp+0x18]
  428b84:	mov    eax,DWORD PTR [esi]
  428b86:	mov    DWORD PTR [ebp-0x20],eax
  428b89:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b90:	mov    edx,0xf89c85a2
  428b95:	mov    DWORD PTR [ebp-0x8],edx
  428b98:	mov    eax,DWORD PTR [ebp+0x1c]
  428b9b:	mov    DWORD PTR [ebp+0x1c],eax
  428b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  428ba1:	mov    eax,DWORD PTR [eax+0x190]
  428ba7:	mov    eax,DWORD PTR [eax]
  428ba9:	mov    DWORD PTR [ebp-0x24],ecx
  428bac:	mov    ecx,DWORD PTR [ebp+0x1c]
  428baf:	mov    ecx,DWORD PTR [ecx+0x190]
  428bb5:	mov    ecx,DWORD PTR [ecx]
  428bb7:	add    ecx,DWORD PTR [eax+0x3c]
  428bba:	mov    DWORD PTR [ebp+0x10],ecx
  428bbd:	mov    eax,DWORD PTR [ebp+0x8]
  428bc0:	xor    eax,edi
  428bc2:	add    eax,ebx
  428bc4:	mov    DWORD PTR [ebp-0x4],eax
  428bc7:	mov    eax,DWORD PTR [ebp+0x8]
  428bca:	xor    eax,edi
  428bcc:	add    eax,ebx
  428bce:	mov    DWORD PTR [ebp+0x18],eax
  428bd1:	mov    eax,DWORD PTR [ebp+0x10]
  428bd4:	mov    eax,DWORD PTR [eax+0x50]
  428bd7:	sub    eax,0xc
  428bda:	mov    DWORD PTR [ebp-0x28],eax
  428bdd:	mov    eax,DWORD PTR [ebp+0x10]
  428be0:	mov    eax,DWORD PTR [eax+0x38]
  428be3:	mov    ecx,DWORD PTR [ebp+0x10]
  428be6:	dec    eax
  428be7:	test   DWORD PTR [ecx+0x54],eax
  428bea:	mov    eax,DWORD PTR [ebp+0x10]
  428bed:	je     0x428c07
  428bef:	mov    eax,DWORD PTR [eax+0x38]
  428bf2:	mov    ecx,DWORD PTR [ebp+0x10]
  428bf5:	mov    ecx,DWORD PTR [ecx+0x54]
  428bf8:	dec    eax
  428bf9:	not    eax
  428bfb:	and    ecx,eax
  428bfd:	mov    eax,DWORD PTR [ebp+0x10]
  428c00:	mov    eax,DWORD PTR [eax+0x38]
  428c03:	add    eax,ecx
  428c05:	jmp    0x428c0a
  428c07:	mov    eax,DWORD PTR [eax+0x54]
  428c0a:	mov    DWORD PTR [ebp+0x1c],eax
  428c0d:	mov    eax,DWORD PTR [ebp+0x8]
  428c10:	xor    eax,edi
  428c12:	add    eax,ebx
  428c14:	mov    DWORD PTR [ebp+0x18],eax
  428c17:	mov    eax,DWORD PTR [ebp+0x8]
  428c1a:	xor    eax,edi
  428c1c:	add    eax,ebx
  428c1e:	mov    DWORD PTR [ebp+0x18],eax
  428c21:	mov    eax,DWORD PTR [ebp+0x8]
  428c24:	mov    ecx,DWORD PTR [ebp-0x24]
  428c27:	xor    eax,edi
  428c29:	add    eax,ebx
  428c2b:	mov    DWORD PTR [ecx],eax
  428c2d:	mov    DWORD PTR [ebp+0x18],edx
  428c30:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c37:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c3e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c45:	mov    eax,DWORD PTR [ebp-0x8]
  428c48:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c4b:	xor    eax,edi
  428c4d:	add    eax,ebx
  428c4f:	imul   eax,ecx
  428c52:	mov    ecx,DWORD PTR [ebp+0x8]
  428c55:	mov    edx,DWORD PTR [ebp-0x28]
  428c58:	xor    ecx,edi
  428c5a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c61:	cmp    eax,ecx
  428c63:	jae    0x429014
  428c69:	mov    eax,DWORD PTR [ebp+0x8]
  428c6c:	xor    eax,edi
  428c6e:	add    eax,ebx
  428c70:	mov    DWORD PTR [ebp+0x18],eax
  428c73:	mov    eax,DWORD PTR [ebp+0x1c]
  428c76:	add    eax,DWORD PTR [ebp-0x1c]
  428c79:	mov    DWORD PTR [ebp-0x4],eax
  428c7c:	push   DWORD PTR [ebp-0x4]
  428c7f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c82:	mov    ecx,DWORD PTR [ebp+0x10]
  428c85:	call   0x427dd5
  428c8a:	mov    DWORD PTR [ebp+0xc],eax
  428c8d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c94:	mov    eax,DWORD PTR [ebp-0x18]
  428c97:	xor    eax,edi
  428c99:	lea    ecx,[ebp-0x40]
  428c9c:	add    eax,ebx
  428c9e:	push   ecx
  428c9f:	call   0x428369
  428ca4:	mov    eax,DWORD PTR [ebp+0xc]
  428ca7:	test   eax,eax
  428ca9:	je     0x428cf9
  428cab:	mov    eax,DWORD PTR [ebp-0x18]
  428cae:	xor    eax,edi
  428cb0:	add    eax,ebx
  428cb2:	push   eax
  428cb3:	push   DWORD PTR [ebp+0xc]
  428cb6:	lea    eax,[ebp-0x40]
  428cb9:	push   eax
  428cba:	call   0x42825f
  428cbf:	mov    eax,DWORD PTR [ebp-0x4]
  428cc2:	mov    DWORD PTR [ebp-0x18],eax
  428cc5:	mov    eax,DWORD PTR [ebp-0x18]
  428cc8:	mov    ecx,DWORD PTR [ebp-0x1c]
  428ccb:	sub    eax,ecx
  428ccd:	mov    DWORD PTR [ebp-0x18],eax
  428cd0:	mov    eax,DWORD PTR [ebp+0xc]
  428cd3:	mov    ecx,DWORD PTR [ebp+0xc]
  428cd6:	mov    eax,DWORD PTR [eax+0x10]
  428cd9:	add    eax,DWORD PTR [ecx+0xc]
  428cdc:	mov    ecx,DWORD PTR [ebp-0x18]
  428cdf:	cmp    ecx,eax
  428ce1:	jb     0x428cf9
  428ce3:	mov    eax,DWORD PTR [ebp+0xc]
  428ce6:	mov    eax,DWORD PTR [eax+0xc]
  428ce9:	mov    ecx,DWORD PTR [ebp+0xc]
  428cec:	add    eax,DWORD PTR [ecx+0x8]
  428cef:	mov    ecx,DWORD PTR [ebp-0x18]
  428cf2:	sub    eax,ecx
  428cf4:	jmp    0x428fe7
  428cf9:	push   0xc
  428cfb:	push   DWORD PTR [ebp-0x4]
  428cfe:	lea    eax,[ebp-0x4c]
  428d01:	push   eax
  428d02:	call   0x42825f
  428d07:	mov    eax,0xf89c85a5
  428d0c:	mov    DWORD PTR [ebp-0x2c],eax
  428d0f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d16:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d1d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d24:	lea    ecx,[ebp-0x2c]
  428d27:	mov    DWORD PTR [ebp-0xc],ecx
  428d2a:	lea    ecx,[ebp-0x30]
  428d2d:	mov    DWORD PTR [ebp-0x10],ecx
  428d30:	lea    ecx,[ebp-0x34]
  428d33:	mov    DWORD PTR [ebp+0xc],ecx
  428d36:	lea    ecx,[ebp-0x38]
  428d39:	mov    DWORD PTR [ebp-0x14],ecx
  428d3c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d3f:	xor    ecx,edi
  428d41:	add    ecx,ebx
  428d43:	mov    DWORD PTR [ebp-0x18],ecx
  428d46:	jmp    0x428f42
  428d4b:	cmp    eax,0xf89c85a3
  428d50:	je     0x428f54
  428d56:	mov    ecx,DWORD PTR [ebp-0x8]
  428d59:	xor    ecx,edi
  428d5b:	mov    esi,eax
  428d5d:	add    ecx,ebx
  428d5f:	mov    DWORD PTR [ebp+0x18],ecx
  428d62:	mov    eax,DWORD PTR [ebp-0x18]
  428d65:	xor    esi,edi
  428d67:	lea    eax,[eax+esi*1+0x3272f5]
  428d6e:	mov    DWORD PTR [ebp-0x18],eax
  428d71:	mov    eax,DWORD PTR [ebp-0x8]
  428d74:	mov    ecx,DWORD PTR [ebp-0x18]
  428d77:	xor    eax,edi
  428d79:	add    eax,ebx
  428d7b:	cmp    ecx,eax
  428d7d:	jne    0x428d92
  428d7f:	mov    eax,DWORD PTR [ebp+0x8]
  428d82:	xor    eax,edi
  428d84:	add    eax,ebx
  428d86:	push   eax
  428d87:	push   0xc
  428d89:	lea    eax,[ebp-0x4c]
  428d8c:	push   eax
  428d8d:	call   0x428845
  428d92:	mov    eax,DWORD PTR [ebp-0xc]
  428d95:	mov    eax,DWORD PTR [eax]
  428d97:	xor    eax,edi
  428d99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428da0:	mov    ecx,DWORD PTR [ebp+0x8]
  428da3:	xor    ecx,edi
  428da5:	movzx  eax,al
  428da8:	add    ecx,ebx
  428daa:	cmp    eax,ecx
  428dac:	je     0x428f2a
  428db2:	mov    eax,DWORD PTR [ebp-0x10]
  428db5:	mov    eax,DWORD PTR [eax]
  428db7:	xor    eax,edi
  428db9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dc0:	mov    ecx,DWORD PTR [ebp+0x8]
  428dc3:	xor    ecx,edi
  428dc5:	movzx  eax,al
  428dc8:	add    ecx,ebx
  428dca:	cmp    eax,ecx
  428dcc:	je     0x428f2a
  428dd2:	mov    eax,DWORD PTR [ebp+0xc]
  428dd5:	mov    eax,DWORD PTR [eax]
  428dd7:	xor    eax,edi
  428dd9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de0:	mov    ecx,DWORD PTR [ebp+0x8]
  428de3:	xor    ecx,edi
  428de5:	movzx  eax,al
  428de8:	add    ecx,ebx
  428dea:	cmp    eax,ecx
  428dec:	je     0x428f2a
  428df2:	mov    eax,DWORD PTR [ebp-0x14]
  428df5:	mov    eax,DWORD PTR [eax]
  428df7:	xor    eax,edi
  428df9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e00:	mov    ecx,DWORD PTR [ebp+0x8]
  428e03:	xor    ecx,edi
  428e05:	movzx  eax,al
  428e08:	add    ecx,ebx
  428e0a:	cmp    eax,ecx
  428e0c:	je     0x428f2a
  428e12:	mov    eax,DWORD PTR [ebp-0x10]
  428e15:	mov    eax,DWORD PTR [eax]
  428e17:	xor    eax,edi
  428e19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e20:	mov    ecx,DWORD PTR [ebp-0xc]
  428e23:	mov    ecx,DWORD PTR [ecx]
  428e25:	xor    ecx,edi
  428e27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e2e:	xor    al,cl
  428e30:	mov    ecx,DWORD PTR [ebp+0xc]
  428e33:	mov    ecx,DWORD PTR [ecx]
  428e35:	xor    ecx,edi
  428e37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e3e:	or     al,cl
  428e40:	mov    ecx,DWORD PTR [ebp-0xc]
  428e43:	mov    ecx,DWORD PTR [ecx]
  428e45:	xor    ecx,edi
  428e47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e4e:	cmp    cl,al
  428e50:	jne    0x428f2a
  428e56:	mov    eax,DWORD PTR [ebp+0xc]
  428e59:	mov    eax,DWORD PTR [eax]
  428e5b:	xor    eax,edi
  428e5d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e64:	mov    ecx,DWORD PTR [ebp-0x10]
  428e67:	mov    ecx,DWORD PTR [ecx]
  428e69:	xor    ecx,edi
  428e6b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e72:	xor    al,cl
  428e74:	mov    ecx,DWORD PTR [ebp-0x14]
  428e77:	mov    ecx,DWORD PTR [ecx]
  428e79:	xor    ecx,edi
  428e7b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e82:	or     al,cl
  428e84:	mov    ecx,DWORD PTR [ebp-0x10]
  428e87:	mov    ecx,DWORD PTR [ecx]
  428e89:	xor    ecx,edi
  428e8b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e92:	cmp    cl,al
  428e94:	jne    0x428f2a
  428e9a:	mov    eax,DWORD PTR [ebp-0x14]
  428e9d:	mov    eax,DWORD PTR [eax]
  428e9f:	xor    eax,edi
  428ea1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ea8:	mov    ecx,DWORD PTR [ebp+0xc]
  428eab:	mov    ecx,DWORD PTR [ecx]
  428ead:	xor    ecx,edi
  428eaf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb6:	xor    al,cl
  428eb8:	mov    ecx,DWORD PTR [ebp-0xc]
  428ebb:	mov    ecx,DWORD PTR [ecx]
  428ebd:	xor    ecx,edi
  428ebf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec6:	or     al,cl
  428ec8:	mov    ecx,DWORD PTR [ebp+0xc]
  428ecb:	mov    ecx,DWORD PTR [ecx]
  428ecd:	xor    ecx,edi
  428ecf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ed6:	cmp    cl,al
  428ed8:	jne    0x428f2a
  428eda:	mov    eax,DWORD PTR [ebp-0x14]
  428edd:	mov    eax,DWORD PTR [eax]
  428edf:	xor    eax,edi
  428ee1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ee8:	mov    ecx,DWORD PTR [ebp-0xc]
  428eeb:	mov    ecx,DWORD PTR [ecx]
  428eed:	xor    ecx,edi
  428eef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ef6:	xor    al,cl
  428ef8:	mov    ecx,DWORD PTR [ebp-0x10]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f06:	or     al,cl
  428f08:	mov    ecx,DWORD PTR [ebp-0x14]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f16:	cmp    cl,al
  428f18:	jne    0x428f2a
  428f1a:	lea    eax,[ebp-0x4c]
  428f1d:	push   eax
  428f1e:	call   0x4289e5
  428f23:	mov    ecx,DWORD PTR [ebp-0x44]
  428f26:	cmp    eax,ecx
  428f28:	je     0x428f34
  428f2a:	mov    eax,DWORD PTR [ebp+0x8]
  428f2d:	xor    eax,edi
  428f2f:	add    eax,ebx
  428f31:	mov    DWORD PTR [ebp+0x18],eax
  428f34:	mov    eax,DWORD PTR [ebp-0x8]
  428f37:	xor    eax,edi
  428f39:	lea    eax,[eax+esi*1+0x3272f5]
  428f40:	xor    eax,edi
  428f42:	mov    ecx,DWORD PTR [ebp+0x8]
  428f45:	mov    edx,DWORD PTR [ebp+0x18]
  428f48:	xor    ecx,edi
  428f4a:	add    ecx,ebx
  428f4c:	cmp    edx,ecx
  428f4e:	je     0x428d4b
  428f54:	mov    eax,DWORD PTR [ebp+0x8]
  428f57:	mov    ecx,DWORD PTR [ebp+0x18]
  428f5a:	xor    eax,edi
  428f5c:	add    eax,ebx
  428f5e:	cmp    ecx,eax
  428f60:	jne    0x428f73
  428f62:	mov    eax,DWORD PTR [ebp-0x8]
  428f65:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f68:	xor    eax,edi
  428f6a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f71:	jmp    0x428fea
  428f73:	push   0x18
  428f75:	push   DWORD PTR [ebp-0x4]
  428f78:	lea    eax,[ebp-0x64]
  428f7b:	push   eax
  428f7c:	call   0x42825f
  428f81:	mov    eax,DWORD PTR [ebp+0x8]
  428f84:	mov    ecx,DWORD PTR [ebp-0x18]
  428f87:	xor    eax,edi
  428f89:	add    eax,ebx
  428f8b:	cmp    eax,ecx
  428f8d:	je     0x428fa2
  428f8f:	mov    eax,DWORD PTR [ebp+0x8]
  428f92:	xor    eax,edi
  428f94:	add    eax,ebx
  428f96:	push   eax
  428f97:	push   0x18
  428f99:	lea    eax,[ebp-0x64]
  428f9c:	push   eax
  428f9d:	call   0x428845
  428fa2:	mov    eax,DWORD PTR [ebp-0x4]
  428fa5:	add    eax,0x18
  428fa8:	mov    DWORD PTR [ebp+0x18],eax
  428fab:	push   DWORD PTR [ebp-0x50]
  428fae:	push   DWORD PTR [ebp+0x18]
  428fb1:	mov    eax,DWORD PTR [ebp-0x54]
  428fb4:	add    eax,DWORD PTR [ebp-0x20]
  428fb7:	push   eax
  428fb8:	call   0x42825f
  428fbd:	mov    eax,DWORD PTR [ebp+0x8]
  428fc0:	mov    ecx,DWORD PTR [ebp-0x18]
  428fc3:	xor    eax,edi
  428fc5:	add    eax,ebx
  428fc7:	cmp    eax,ecx
  428fc9:	je     0x428fdc
  428fcb:	push   0x0
  428fcd:	push   DWORD PTR [ebp-0x50]
  428fd0:	mov    eax,DWORD PTR [ebp-0x54]
  428fd3:	add    eax,DWORD PTR [ebp-0x20]
  428fd6:	push   eax
  428fd7:	call   0x428845
  428fdc:	mov    eax,DWORD PTR [ebp-0x24]
  428fdf:	mov    ecx,DWORD PTR [ebp-0x50]
  428fe2:	add    DWORD PTR [eax],ecx
  428fe4:	mov    eax,DWORD PTR [ebp-0x50]
  428fe7:	add    eax,DWORD PTR [ebp+0x1c]
  428fea:	mov    DWORD PTR [ebp+0x1c],eax
  428fed:	mov    eax,DWORD PTR [ebp-0x8]
  428ff0:	mov    ecx,DWORD PTR [ebp+0x1c]
  428ff3:	xor    eax,edi
  428ff5:	add    eax,ebx
  428ff7:	imul   eax,ecx
  428ffa:	mov    ecx,DWORD PTR [ebp+0x8]
  428ffd:	mov    edx,DWORD PTR [ebp-0x28]
  429000:	xor    ecx,edi
  429002:	lea    ecx,[ecx+edx*1+0x3272f5]
  429009:	cmp    eax,ecx
  42900b:	jb     0x428c69
  429011:	mov    esi,DWORD PTR [ebp+0x14]
  429014:	mov    eax,DWORD PTR [ebp-0x20]
  429017:	mov    DWORD PTR [esi],eax
  429019:	jmp    0x429060
  42901b:	mov    ecx,DWORD PTR [ebp+0x8]
  42901e:	mov    edx,DWORD PTR [ebp+0xc]
  429021:	xor    ecx,edi
  429023:	xor    edx,edi
  429025:	add    ecx,ebx
  429027:	add    edx,ebx
  429029:	cmp    ecx,edx
  42902b:	jne    0x42903f
  42902d:	mov    eax,ds:0x7f642ddc
  429032:	imul   eax,eax,0x9f15fccf
  429038:	mov    ds:0x7f642ddc,eax
  42903d:	jmp    0x429060
  42903f:	mov    ecx,DWORD PTR [ebp+0x8]
  429042:	xor    ecx,edi
  429044:	add    ecx,ebx
  429046:	cmp    eax,ecx
  429048:	je     0x429056
  42904a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429054:	jmp    0x429060
  429056:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429060:	pop    edi
  429061:	pop    esi
  429062:	pop    ebx
  429063:	leave  
  429064:	ret    0x18
  429067:	push   ebp
  429068:	mov    ebp,esp
  42906a:	and    esp,0xfffffff8
  42906d:	mov    eax,DWORD PTR [ebp+0x20]
  429070:	sub    esp,0x14
  429073:	push   ebx
  429074:	mov    ebx,DWORD PTR [ebp+0x14]
  429077:	push   esi
  429078:	push   edi
  429079:	cmp    eax,0xf89c85a5
  42907e:	jne    0x42908a
  429080:	push   0xf89c85a2
  429085:	jmp    0x4291bc
  42908a:	mov    eax,DWORD PTR [ebp+0x20]
  42908d:	cmp    eax,0xf89c85a2
  429092:	jne    0x42909e
  429094:	push   0xf89c85a3
  429099:	jmp    0x4291bc
  42909e:	mov    eax,DWORD PTR [ebp+0x20]
  4290a1:	cmp    eax,0xf89c85a3
  4290a6:	jne    0x4290b2
  4290a8:	push   0xf89c85a0
  4290ad:	jmp    0x4291bc
  4290b2:	mov    eax,DWORD PTR [ebp+0x20]
  4290b5:	cmp    eax,0xf89c85a0
  4290ba:	jne    0x4290c6
  4290bc:	push   0xf89c85a1
  4290c1:	jmp    0x4291bc
  4290c6:	mov    ecx,DWORD PTR [ebp+0x20]
  4290c9:	mov    eax,0xf89c85bc
  4290ce:	cmp    ecx,eax
  4290d0:	jne    0x42918c
  4290d6:	mov    eax,DWORD PTR [ebp+0x10]
  4290d9:	mov    DWORD PTR [esp+0xc],eax
  4290dd:	mov    eax,DWORD PTR [ebp+0x18]
  4290e0:	mov    DWORD PTR [esp+0x14],eax
  4290e4:	mov    eax,DWORD PTR [ebp+0xc]
  4290e7:	mov    DWORD PTR [esp+0x18],eax
  4290eb:	mov    eax,DWORD PTR [ebp+0x8]
  4290ee:	mov    DWORD PTR [esp+0x10],eax
  4290f2:	mov    eax,DWORD PTR [esp+0x10]
  4290f6:	mov    ecx,DWORD PTR [esp+0x14]
  4290fa:	mov    edi,0x75108ae
  4290ff:	xor    eax,edi
  429101:	mov    esi,0x3272f5
  429106:	add    eax,esi
  429108:	mov    DWORD PTR [ecx],eax
  42910a:	mov    eax,DWORD PTR [esp+0xc]
  42910e:	mov    eax,DWORD PTR [eax+0x194]
  429114:	mov    ecx,DWORD PTR [eax]
  429116:	mov    eax,DWORD PTR [esp+0xc]
  42911a:	mov    eax,DWORD PTR [eax+0x194]
  429120:	mov    eax,DWORD PTR [eax]
  429122:	add    eax,DWORD PTR [ecx+0x3c]
  429125:	mov    ecx,DWORD PTR [esp+0xc]
  429129:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42912f:	mov    ecx,DWORD PTR [ecx+0x14]
  429132:	push   0x4
  429134:	push   0x3000
  429139:	push   DWORD PTR [eax+0x50]
  42913c:	push   0x0
  42913e:	call   ecx
  429140:	mov    DWORD PTR [ebx],eax
  429142:	mov    eax,DWORD PTR [esp+0x10]
  429146:	push   DWORD PTR [esp+0xc]
  42914a:	xor    eax,edi
  42914c:	add    eax,esi
  42914e:	mov    DWORD PTR [esp+0x20],eax
  429152:	lea    eax,[esp+0x20]
  429156:	push   eax
  429157:	push   ebx
  429158:	push   DWORD PTR [esp+0x20]
  42915c:	push   DWORD PTR [esp+0x28]
  429160:	push   DWORD PTR [esp+0x24]
  429164:	call   0x428b29
  429169:	mov    eax,DWORD PTR [esp+0x10]
  42916d:	mov    ecx,DWORD PTR [ebx]
  42916f:	xor    eax,edi
  429171:	add    eax,esi
  429173:	cmp    ecx,eax
  429175:	je     0x4291d3
  429177:	mov    eax,DWORD PTR [esp+0x18]
  42917b:	mov    ecx,DWORD PTR [esp+0x14]
  42917f:	xor    eax,edi
  429181:	add    eax,esi
  429183:	imul   eax,DWORD PTR [esp+0x1c]
  429188:	mov    DWORD PTR [ecx],eax
  42918a:	jmp    0x4291d3
  42918c:	mov    ecx,DWORD PTR [ebp+0x20]
  42918f:	cmp    ecx,0xf89c85a1
  429195:	jne    0x42919e
  429197:	push   0xf89c85be
  42919c:	jmp    0x4291bc
  42919e:	mov    ecx,DWORD PTR [ebp+0x20]
  4291a1:	cmp    ecx,0xf89c85be
  4291a7:	jne    0x4291b0
  4291a9:	push   0xf89c85bf
  4291ae:	jmp    0x4291bc
  4291b0:	mov    ecx,DWORD PTR [ebp+0x20]
  4291b3:	cmp    ecx,0xf89c85bf
  4291b9:	jne    0x4291d3
  4291bb:	push   eax
  4291bc:	push   DWORD PTR [ebp+0x1c]
  4291bf:	push   DWORD PTR [ebp+0x18]
  4291c2:	push   ebx
  4291c3:	push   DWORD PTR [ebp+0x10]
  4291c6:	push   DWORD PTR [ebp+0xc]
  4291c9:	push   DWORD PTR [ebp+0x8]
  4291cc:	call   0x429067
  4291d1:	mov    DWORD PTR [ebx],eax
  4291d3:	mov    eax,DWORD PTR [ebx]
  4291d5:	pop    edi
  4291d6:	pop    esi
  4291d7:	pop    ebx
  4291d8:	mov    esp,ebp
  4291da:	pop    ebp
  4291db:	ret    0x1c
  4291de:	push   ebp
  4291df:	mov    ebp,esp
  4291e1:	sub    esp,0xc
  4291e4:	mov    eax,0xf89c85a5
  4291e9:	mov    DWORD PTR [ebp-0x8],eax
  4291ec:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4291f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4291f6:	xor    ecx,0x75108ae
  4291fc:	add    ecx,0x3272f5
  429202:	mov    DWORD PTR [ebp-0x4],ecx
  429205:	mov    ecx,DWORD PTR [ebp+0xc]
  429208:	push   eax
  429209:	mov    DWORD PTR [ebp+0xc],ecx
  42920c:	push   DWORD PTR [ebp+0xc]
  42920f:	lea    eax,[ebp-0x4]
  429212:	push   DWORD PTR [ebp+0x8]
  429215:	push   eax
  429216:	push   DWORD PTR [ebp+0xc]
  429219:	push   DWORD PTR [ebp-0xc]
  42921c:	push   DWORD PTR [ebp-0x8]
  42921f:	call   0x429067
  429224:	mov    DWORD PTR [ebp-0x4],eax
  429227:	mov    eax,DWORD PTR [ebp-0x4]
  42922a:	leave  
  42922b:	ret    0x8
